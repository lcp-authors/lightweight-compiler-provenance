
../repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/cgen_test:     file format elf32-littlearm


Disassembly of section .init:

00013e80 <.init>:
   13e80:	push	{r3, lr}
   13e84:	bl	14398 <_start@@Base+0x3c>
   13e88:	pop	{r3, pc}

Disassembly of section .plt:

00013e8c <calloc@plt-0x14>:
   13e8c:	push	{lr}		; (str lr, [sp, #-4]!)
   13e90:	ldr	lr, [pc, #4]	; 13e9c <calloc@plt-0x4>
   13e94:	add	lr, pc, lr
   13e98:	ldr	pc, [lr, #8]!
   13e9c:	andeq	r9, r5, r4, ror #2

00013ea0 <calloc@plt>:
   13ea0:	add	ip, pc, #0, 12
   13ea4:	add	ip, ip, #364544	; 0x59000
   13ea8:	ldr	pc, [ip, #356]!	; 0x164

00013eac <raise@plt>:
   13eac:	add	ip, pc, #0, 12
   13eb0:	add	ip, ip, #364544	; 0x59000
   13eb4:	ldr	pc, [ip, #348]!	; 0x15c

00013eb8 <strcmp@plt>:
   13eb8:	add	ip, pc, #0, 12
   13ebc:	add	ip, ip, #364544	; 0x59000
   13ec0:	ldr	pc, [ip, #340]!	; 0x154

00013ec4 <fopen@plt>:
   13ec4:	add	ip, pc, #0, 12
   13ec8:	add	ip, ip, #364544	; 0x59000
   13ecc:	ldr	pc, [ip, #332]!	; 0x14c

00013ed0 <free@plt>:
   13ed0:	add	ip, pc, #0, 12
   13ed4:	add	ip, ip, #364544	; 0x59000
   13ed8:	ldr	pc, [ip, #324]!	; 0x144

00013edc <memcpy@plt>:
   13edc:	add	ip, pc, #0, 12
   13ee0:	add	ip, ip, #364544	; 0x59000
   13ee4:	ldr	pc, [ip, #316]!	; 0x13c

00013ee8 <ftell@plt>:
   13ee8:	add	ip, pc, #0, 12
   13eec:	add	ip, ip, #364544	; 0x59000
   13ef0:	ldr	pc, [ip, #308]!	; 0x134

00013ef4 <memcmp@plt>:
   13ef4:	add	ip, pc, #0, 12
   13ef8:	add	ip, ip, #364544	; 0x59000
   13efc:	ldr	pc, [ip, #300]!	; 0x12c

00013f00 <rewind@plt>:
   13f00:	add	ip, pc, #0, 12
   13f04:	add	ip, ip, #364544	; 0x59000
   13f08:	ldr	pc, [ip, #292]!	; 0x124

00013f0c <realloc@plt>:
   13f0c:	add	ip, pc, #0, 12
   13f10:	add	ip, ip, #364544	; 0x59000
   13f14:	ldr	pc, [ip, #284]!	; 0x11c

00013f18 <fwrite@plt>:
   13f18:	add	ip, pc, #0, 12
   13f1c:	add	ip, ip, #364544	; 0x59000
   13f20:	ldr	pc, [ip, #276]!	; 0x114

00013f24 <fread@plt>:
   13f24:	add	ip, pc, #0, 12
   13f28:	add	ip, ip, #364544	; 0x59000
   13f2c:	ldr	pc, [ip, #268]!	; 0x10c

00013f30 <puts@plt>:
   13f30:	add	ip, pc, #0, 12
   13f34:	add	ip, ip, #364544	; 0x59000
   13f38:	ldr	pc, [ip, #260]!	; 0x104

00013f3c <malloc@plt>:
   13f3c:	add	ip, pc, #0, 12
   13f40:	add	ip, ip, #364544	; 0x59000
   13f44:	ldr	pc, [ip, #252]!	; 0xfc

00013f48 <__libc_start_main@plt>:
   13f48:	add	ip, pc, #0, 12
   13f4c:	add	ip, ip, #364544	; 0x59000
   13f50:	ldr	pc, [ip, #244]!	; 0xf4

00013f54 <__ctype_toupper_loc@plt>:
   13f54:	add	ip, pc, #0, 12
   13f58:	add	ip, ip, #364544	; 0x59000
   13f5c:	ldr	pc, [ip, #236]!	; 0xec

00013f60 <__gmon_start__@plt>:
   13f60:	add	ip, pc, #0, 12
   13f64:	add	ip, ip, #364544	; 0x59000
   13f68:	ldr	pc, [ip, #228]!	; 0xe4

00013f6c <exit@plt>:
   13f6c:	add	ip, pc, #0, 12
   13f70:	add	ip, ip, #364544	; 0x59000
   13f74:	ldr	pc, [ip, #220]!	; 0xdc

00013f78 <strlen@plt>:
   13f78:	add	ip, pc, #0, 12
   13f7c:	add	ip, ip, #364544	; 0x59000
   13f80:	ldr	pc, [ip, #212]!	; 0xd4

00013f84 <fprintf@plt>:
   13f84:	add	ip, pc, #0, 12
   13f88:	add	ip, ip, #364544	; 0x59000
   13f8c:	ldr	pc, [ip, #204]!	; 0xcc

00013f90 <posix_memalign@plt>:
   13f90:	add	ip, pc, #0, 12
   13f94:	add	ip, ip, #364544	; 0x59000
   13f98:	ldr	pc, [ip, #196]!	; 0xc4

00013f9c <memset@plt>:
   13f9c:	add	ip, pc, #0, 12
   13fa0:	add	ip, ip, #364544	; 0x59000
   13fa4:	ldr	pc, [ip, #188]!	; 0xbc

00013fa8 <strncpy@plt>:
   13fa8:	add	ip, pc, #0, 12
   13fac:	add	ip, ip, #364544	; 0x59000
   13fb0:	ldr	pc, [ip, #180]!	; 0xb4

00013fb4 <strtod@plt>:
   13fb4:	add	ip, pc, #0, 12
   13fb8:	add	ip, ip, #364544	; 0x59000
   13fbc:	ldr	pc, [ip, #172]!	; 0xac

00013fc0 <memchr@plt>:
   13fc0:	add	ip, pc, #0, 12
   13fc4:	add	ip, ip, #364544	; 0x59000
   13fc8:	ldr	pc, [ip, #164]!	; 0xa4

00013fcc <fclose@plt>:
   13fcc:	add	ip, pc, #0, 12
   13fd0:	add	ip, ip, #364544	; 0x59000
   13fd4:	ldr	pc, [ip, #156]!	; 0x9c

00013fd8 <vfprintf@plt>:
   13fd8:	add	ip, pc, #0, 12
   13fdc:	add	ip, ip, #364544	; 0x59000
   13fe0:	ldr	pc, [ip, #148]!	; 0x94

00013fe4 <fputc@plt>:
   13fe4:	add	ip, pc, #0, 12
   13fe8:	add	ip, ip, #364544	; 0x59000
   13fec:	ldr	pc, [ip, #140]!	; 0x8c

00013ff0 <sprintf@plt>:
   13ff0:	add	ip, pc, #0, 12
   13ff4:	add	ip, ip, #364544	; 0x59000
   13ff8:	ldr	pc, [ip, #132]!	; 0x84

00013ffc <vsnprintf@plt>:
   13ffc:	add	ip, pc, #0, 12
   14000:	add	ip, ip, #364544	; 0x59000
   14004:	ldr	pc, [ip, #124]!	; 0x7c

00014008 <qsort@plt>:
   14008:	add	ip, pc, #0, 12
   1400c:	add	ip, ip, #364544	; 0x59000
   14010:	ldr	pc, [ip, #116]!	; 0x74

00014014 <fseek@plt>:
   14014:	add	ip, pc, #0, 12
   14018:	add	ip, ip, #364544	; 0x59000
   1401c:	ldr	pc, [ip, #108]!	; 0x6c

00014020 <strncmp@plt>:
   14020:	add	ip, pc, #0, 12
   14024:	add	ip, ip, #364544	; 0x59000
   14028:	ldr	pc, [ip, #100]!	; 0x64

0001402c <abort@plt>:
   1402c:	add	ip, pc, #0, 12
   14030:	add	ip, ip, #364544	; 0x59000
   14034:	ldr	pc, [ip, #92]!	; 0x5c

00014038 <__assert_fail@plt>:
   14038:	add	ip, pc, #0, 12
   1403c:	add	ip, ip, #364544	; 0x59000
   14040:	ldr	pc, [ip, #84]!	; 0x54

Disassembly of section .text:

00014048 <main@@Base-0x1b0>:
   14048:	ldr	r3, [pc, #28]	; 1406c <__assert_fail@plt+0x34>
   1404c:	push	{r4, lr}
   14050:	mov	r2, #34	; 0x22
   14054:	mov	r1, #1
   14058:	ldr	r3, [r3]
   1405c:	ldr	r0, [pc, #12]	; 14070 <__assert_fail@plt+0x38>
   14060:	bl	13f18 <fwrite@plt>
   14064:	mov	r0, #1
   14068:	bl	13f6c <exit@plt>
   1406c:	andeq	sp, r6, r8, lsr #1
   14070:	andeq	r1, r4, r8, lsl r9
   14074:	push	{r4, lr}
   14078:	mov	r2, #195	; 0xc3
   1407c:	ldr	r3, [pc, #8]	; 1408c <__assert_fail@plt+0x54>
   14080:	ldr	r1, [pc, #8]	; 14090 <__assert_fail@plt+0x58>
   14084:	ldr	r0, [pc, #8]	; 14094 <__assert_fail@plt+0x5c>
   14088:	bl	14038 <__assert_fail@plt>
   1408c:	andeq	r8, r5, r4, asr #4
   14090:	andeq	r8, r5, r8, ror #6
   14094:	andeq	r8, r5, r8, asr #7
   14098:	ldr	r3, [pc, #28]	; 140bc <__assert_fail@plt+0x84>
   1409c:	push	{r4, lr}
   140a0:	mov	r2, #34	; 0x22
   140a4:	mov	r1, #1
   140a8:	ldr	r3, [r3]
   140ac:	ldr	r0, [pc, #12]	; 140c0 <__assert_fail@plt+0x88>
   140b0:	bl	13f18 <fwrite@plt>
   140b4:	mov	r0, #1
   140b8:	bl	13f6c <exit@plt>
   140bc:	andeq	sp, r6, r8, lsr #1
   140c0:	andeq	r1, r4, r8, lsl r9
   140c4:	push	{r4, lr}
   140c8:	mov	r2, #108	; 0x6c
   140cc:	ldr	r3, [pc, #8]	; 140dc <__assert_fail@plt+0xa4>
   140d0:	ldr	r1, [pc, #8]	; 140e0 <__assert_fail@plt+0xa8>
   140d4:	ldr	r0, [pc, #8]	; 140e4 <__assert_fail@plt+0xac>
   140d8:	bl	14038 <__assert_fail@plt>
   140dc:	andeq	r9, r5, r4, asr r7
   140e0:	andeq	r9, r5, r8, ror #17
   140e4:	andeq	r9, r5, r4, lsr r9
   140e8:	push	{r4, lr}
   140ec:	mov	r2, #308	; 0x134
   140f0:	ldr	r3, [pc, #8]	; 14100 <__assert_fail@plt+0xc8>
   140f4:	ldr	r1, [pc, #8]	; 14104 <__assert_fail@plt+0xcc>
   140f8:	ldr	r0, [pc, #8]	; 14108 <__assert_fail@plt+0xd0>
   140fc:	bl	14038 <__assert_fail@plt>
   14100:	andeq	fp, r5, r8, ror r3
   14104:	andeq	fp, r5, r8, asr #21
   14108:	andeq	sl, r4, r4, asr sp
   1410c:	push	{r4, lr}
   14110:	ldr	r3, [pc, #12]	; 14124 <__assert_fail@plt+0xec>
   14114:	ldr	r2, [pc, #12]	; 14128 <__assert_fail@plt+0xf0>
   14118:	ldr	r1, [pc, #12]	; 1412c <__assert_fail@plt+0xf4>
   1411c:	ldr	r0, [pc, #12]	; 14130 <__assert_fail@plt+0xf8>
   14120:	bl	14038 <__assert_fail@plt>
   14124:	andeq	fp, r5, r8, lsl #7
   14128:	andeq	r0, r0, r1, lsr #5
   1412c:	andeq	fp, r5, r8, asr #21
   14130:	andeq	sl, r4, r4, asr sp
   14134:	push	{r4, lr}
   14138:	ldr	r3, [pc, #12]	; 1414c <__assert_fail@plt+0x114>
   1413c:	ldr	r2, [pc, #12]	; 14150 <__assert_fail@plt+0x118>
   14140:	ldr	r1, [pc, #12]	; 14154 <__assert_fail@plt+0x11c>
   14144:	ldr	r0, [pc, #12]	; 14158 <__assert_fail@plt+0x120>
   14148:	bl	14038 <__assert_fail@plt>
   1414c:	muleq	r5, r4, r3
   14150:	andeq	r0, r0, r7, lsl #5
   14154:	andeq	fp, r5, r8, asr #21
   14158:	andeq	sl, r4, r4, asr sp
   1415c:	push	{r4, lr}
   14160:	mov	r2, #892	; 0x37c
   14164:	ldr	r3, [pc, #8]	; 14174 <__assert_fail@plt+0x13c>
   14168:	ldr	r1, [pc, #8]	; 14178 <__assert_fail@plt+0x140>
   1416c:	ldr	r0, [pc, #8]	; 1417c <__assert_fail@plt+0x144>
   14170:	bl	14038 <__assert_fail@plt>
   14174:	andeq	fp, r5, r0, lsr #7
   14178:	andeq	fp, r5, r8, asr #21
   1417c:	andeq	fp, r5, r0, lsl fp
   14180:	push	{r4, lr}
   14184:	ldr	r3, [pc, #12]	; 14198 <__assert_fail@plt+0x160>
   14188:	ldr	r2, [pc, #12]	; 1419c <__assert_fail@plt+0x164>
   1418c:	ldr	r1, [pc, #12]	; 141a0 <__assert_fail@plt+0x168>
   14190:	ldr	r0, [pc, #12]	; 141a4 <__assert_fail@plt+0x16c>
   14194:	bl	14038 <__assert_fail@plt>
   14198:			; <UNDEFINED> instruction: 0x0005b3b4
   1419c:	andeq	r0, r0, lr, lsl r2
   141a0:	andeq	fp, r5, r8, asr #21
   141a4:	andeq	fp, r5, ip, lsr #22
   141a8:	push	{r4, lr}
   141ac:	ldr	r3, [pc, #12]	; 141c0 <__assert_fail@plt+0x188>
   141b0:	ldr	r2, [pc, #12]	; 141c4 <__assert_fail@plt+0x18c>
   141b4:	ldr	r1, [pc, #12]	; 141c8 <__assert_fail@plt+0x190>
   141b8:	ldr	r0, [pc, #12]	; 141cc <__assert_fail@plt+0x194>
   141bc:	bl	14038 <__assert_fail@plt>
   141c0:	ldrdeq	fp, [r5], -r4
   141c4:	andeq	r0, r0, r6, asr #7
   141c8:	andeq	fp, r5, r8, asr #21
   141cc:	andeq	fp, r5, r8, asr #22
   141d0:	push	{r4, lr}
   141d4:	ldr	r3, [pc, #12]	; 141e8 <__assert_fail@plt+0x1b0>
   141d8:	ldr	r2, [pc, #12]	; 141ec <__assert_fail@plt+0x1b4>
   141dc:	ldr	r1, [pc, #12]	; 141f0 <__assert_fail@plt+0x1b8>
   141e0:	ldr	r0, [pc, #12]	; 141f4 <__assert_fail@plt+0x1bc>
   141e4:	bl	14038 <__assert_fail@plt>
   141e8:	strdeq	fp, [r5], -r4
   141ec:	andeq	r0, r0, r6, lsl #15
   141f0:	andeq	fp, r5, r8, asr #21
   141f4:	andeq	fp, r5, r4, ror fp

000141f8 <main@@Base>:
   141f8:	push	{r4, r5, r6, r7, lr}
   141fc:	sub	sp, sp, #3968	; 0xf80
   14200:	sub	sp, sp, #4
   14204:	add	r3, sp, #232	; 0xe8
   14208:	ldr	r2, [pc, #288]	; 14330 <main@@Base+0x138>
   1420c:	ldr	r1, [pc, #288]	; 14334 <main@@Base+0x13c>
   14210:	mov	r0, r3
   14214:	str	r3, [sp]
   14218:	bl	13edc <memcpy@plt>
   1421c:	add	r3, sp, #8
   14220:	mov	r0, r3
   14224:	str	r3, [sp, #4]
   14228:	bl	144bc <flatcc_init_options@@Base>
   1422c:	mov	r3, #0
   14230:	mov	r4, #1
   14234:	ldr	r0, [sp, #4]
   14238:	mov	r2, r3
   1423c:	ldr	r1, [pc, #244]	; 14338 <main@@Base+0x140>
   14240:	str	r4, [sp, #152]	; 0x98
   14244:	str	r4, [sp, #160]	; 0xa0
   14248:	str	r4, [sp, #156]	; 0x9c
   1424c:	str	r4, [sp, #164]	; 0xa4
   14250:	str	r4, [sp, #116]	; 0x74
   14254:	bl	14574 <flatcc_create_context@@Base>
   14258:	subs	r5, r0, #0
   1425c:	beq	14310 <main@@Base+0x118>
   14260:	ldr	r2, [pc, #200]	; 14330 <main@@Base+0x138>
   14264:	ldr	r1, [sp]
   14268:	bl	145e0 <flatcc_parse_buffer@@Base>
   1426c:	subs	r6, r0, #0
   14270:	bne	142dc <main@@Base+0xe4>
   14274:	ldr	r7, [pc, #192]	; 1433c <main@@Base+0x144>
   14278:	mov	r2, #17
   1427c:	mov	r1, r4
   14280:	ldr	r3, [r7]
   14284:	ldr	r0, [pc, #180]	; 14340 <main@@Base+0x148>
   14288:	bl	13f18 <fwrite@plt>
   1428c:	ldr	r3, [r7]
   14290:	mov	r2, #31
   14294:	mov	r1, r4
   14298:	ldr	r0, [pc, #164]	; 14344 <main@@Base+0x14c>
   1429c:	bl	13f18 <fwrite@plt>
   142a0:	mov	r0, r5
   142a4:	bl	14c60 <flatcc_generate_files@@Base>
   142a8:	cmp	r0, #0
   142ac:	beq	142f8 <main@@Base+0x100>
   142b0:	ldr	r3, [r7]
   142b4:	mov	r1, r4
   142b8:	mov	r2, #32
   142bc:	ldr	r0, [pc, #132]	; 14348 <main@@Base+0x150>
   142c0:	bl	13f18 <fwrite@plt>
   142c4:	mov	r0, r5
   142c8:	bl	14d88 <flatcc_destroy_context@@Base>
   142cc:	mov	r0, r6
   142d0:	add	sp, sp, #3968	; 0xf80
   142d4:	add	sp, sp, #4
   142d8:	pop	{r4, r5, r6, r7, pc}
   142dc:	ldr	r3, [pc, #88]	; 1433c <main@@Base+0x144>
   142e0:	mov	r1, r4
   142e4:	mov	r2, #20
   142e8:	ldr	r3, [r3]
   142ec:	ldr	r0, [pc, #88]	; 1434c <main@@Base+0x154>
   142f0:	bl	13f18 <fwrite@plt>
   142f4:	b	142c4 <main@@Base+0xcc>
   142f8:	ldr	r3, [pc, #80]	; 14350 <main@@Base+0x158>
   142fc:	ldr	r2, [sp]
   14300:	ldr	r1, [pc, #76]	; 14354 <main@@Base+0x15c>
   14304:	ldr	r0, [r3]
   14308:	bl	13f84 <fprintf@plt>
   1430c:	b	142c4 <main@@Base+0xcc>
   14310:	ldr	r3, [pc, #36]	; 1433c <main@@Base+0x144>
   14314:	mov	r1, r4
   14318:	mov	r2, #41	; 0x29
   1431c:	ldr	r3, [r3]
   14320:	ldr	r0, [pc, #48]	; 14358 <main@@Base+0x160>
   14324:	bl	13f18 <fwrite@plt>
   14328:	mvn	r6, #0
   1432c:	b	142cc <main@@Base+0xd4>
   14330:	muleq	r0, r7, lr
   14334:	andeq	r0, r4, r4, ror #20
   14338:	andeq	r0, r4, r4, ror #18
   1433c:	andeq	sp, r6, r8, lsr #1
   14340:			; <UNDEFINED> instruction: 0x000409b8
   14344:	andeq	r0, r4, ip, asr #19
   14348:	andeq	r0, r4, ip, ror #19
   1434c:	andeq	r0, r4, r0, lsr #19
   14350:	andeq	sp, r6, ip, lsr #1
   14354:	andeq	r0, r4, r0, lsl sl
   14358:	andeq	r0, r4, r4, ror r9

0001435c <_start@@Base>:
   1435c:	mov	fp, #0
   14360:	mov	lr, #0
   14364:	pop	{r1}		; (ldr r1, [sp], #4)
   14368:	mov	r2, sp
   1436c:	push	{r2}		; (str r2, [sp, #-4]!)
   14370:	push	{r0}		; (str r0, [sp, #-4]!)
   14374:	ldr	ip, [pc, #16]	; 1438c <_start@@Base+0x30>
   14378:	push	{ip}		; (str ip, [sp, #-4]!)
   1437c:	ldr	r0, [pc, #12]	; 14390 <_start@@Base+0x34>
   14380:	ldr	r3, [pc, #12]	; 14394 <_start@@Base+0x38>
   14384:	bl	13f48 <__libc_start_main@plt>
   14388:	bl	1402c <abort@plt>
   1438c:	andeq	r0, r4, r0, asr r9
   14390:	strdeq	r4, [r1], -r8
   14394:	strdeq	r0, [r4], -r0	; <UNPREDICTABLE>
   14398:	ldr	r3, [pc, #20]	; 143b4 <_start@@Base+0x58>
   1439c:	ldr	r2, [pc, #20]	; 143b8 <_start@@Base+0x5c>
   143a0:	add	r3, pc, r3
   143a4:	ldr	r2, [r3, r2]
   143a8:	cmp	r2, #0
   143ac:	bxeq	lr
   143b0:	b	13f60 <__gmon_start__@plt>
   143b4:	andeq	r8, r5, r8, asr ip
   143b8:	muleq	r0, r8, r0
   143bc:	ldr	r3, [pc, #28]	; 143e0 <_start@@Base+0x84>
   143c0:	ldr	r0, [pc, #28]	; 143e4 <_start@@Base+0x88>
   143c4:	sub	r3, r3, r0
   143c8:	cmp	r3, #6
   143cc:	bxls	lr
   143d0:	ldr	r3, [pc, #16]	; 143e8 <_start@@Base+0x8c>
   143d4:	cmp	r3, #0
   143d8:	bxeq	lr
   143dc:	bx	r3
   143e0:	andeq	sp, r6, r7, lsr #1
   143e4:	andeq	sp, r6, r4, lsr #1
   143e8:	andeq	r0, r0, r0
   143ec:	ldr	r1, [pc, #36]	; 14418 <_start@@Base+0xbc>
   143f0:	ldr	r0, [pc, #36]	; 1441c <_start@@Base+0xc0>
   143f4:	sub	r1, r1, r0
   143f8:	asr	r1, r1, #2
   143fc:	add	r1, r1, r1, lsr #31
   14400:	asrs	r1, r1, #1
   14404:	bxeq	lr
   14408:	ldr	r3, [pc, #16]	; 14420 <_start@@Base+0xc4>
   1440c:	cmp	r3, #0
   14410:	bxeq	lr
   14414:	bx	r3
   14418:	andeq	sp, r6, r4, lsr #1
   1441c:	andeq	sp, r6, r4, lsr #1
   14420:	andeq	r0, r0, r0
   14424:	push	{r4, lr}
   14428:	ldr	r4, [pc, #24]	; 14448 <_start@@Base+0xec>
   1442c:	ldrb	r3, [r4]
   14430:	cmp	r3, #0
   14434:	popne	{r4, pc}
   14438:	bl	143bc <_start@@Base+0x60>
   1443c:	mov	r3, #1
   14440:	strb	r3, [r4]
   14444:	pop	{r4, pc}
   14448:	strheq	sp, [r6], -r0
   1444c:	ldr	r0, [pc, #40]	; 1447c <_start@@Base+0x120>
   14450:	ldr	r3, [r0]
   14454:	cmp	r3, #0
   14458:	bne	14460 <_start@@Base+0x104>
   1445c:	b	143ec <_start@@Base+0x90>
   14460:	ldr	r3, [pc, #24]	; 14480 <_start@@Base+0x124>
   14464:	cmp	r3, #0
   14468:	beq	1445c <_start@@Base+0x100>
   1446c:	push	{r4, lr}
   14470:	blx	r3
   14474:	pop	{r4, lr}
   14478:	b	143ec <_start@@Base+0x90>
   1447c:	andeq	ip, r6, r4, lsl pc
   14480:	andeq	r0, r0, r0
   14484:	add	r0, r0, #172	; 0xac
   14488:	mov	r2, #1
   1448c:	b	27518 <ptr_set_insert_item@@Base>
   14490:	ldr	r3, [pc, #28]	; 144b4 <_start@@Base+0x158>
   14494:	push	{r4, lr}
   14498:	mov	r2, #34	; 0x22
   1449c:	mov	r1, #1
   144a0:	ldr	r3, [r3]
   144a4:	ldr	r0, [pc, #12]	; 144b8 <_start@@Base+0x15c>
   144a8:	bl	13f18 <fwrite@plt>
   144ac:	mov	r0, #1
   144b0:	bl	13f6c <exit@plt>
   144b4:	andeq	sp, r6, r8, lsr #1
   144b8:	andeq	r1, r4, r8, lsl r9

000144bc <flatcc_init_options@@Base>:
   144bc:	push	{r4, r6, r7, lr}
   144c0:	mov	r2, #224	; 0xe0
   144c4:	mov	r4, r0
   144c8:	mov	r1, #0
   144cc:	ldr	r6, [pc, #144]	; 14564 <flatcc_init_options@@Base+0xa8>
   144d0:	bl	13f9c <memset@plt>
   144d4:	mov	r7, #0
   144d8:	mov	r2, #65536	; 0x10000
   144dc:	mov	r3, #2
   144e0:	ldr	lr, [pc, #128]	; 14568 <flatcc_init_options@@Base+0xac>
   144e4:	ldr	ip, [pc, #128]	; 1456c <flatcc_init_options@@Base+0xb0>
   144e8:	ldr	r0, [pc, #128]	; 14570 <flatcc_init_options@@Base+0xb4>
   144ec:	mov	r1, #100	; 0x64
   144f0:	str	r2, [r4]
   144f4:	str	r3, [r4, #68]	; 0x44
   144f8:	mov	r2, #4
   144fc:	mov	r3, #1
   14500:	strd	r6, [r4, #88]	; 0x58
   14504:	str	lr, [r4, #96]	; 0x60
   14508:	str	ip, [r4, #100]	; 0x64
   1450c:	str	r0, [r4, #104]	; 0x68
   14510:	str	r1, [r4, #4]
   14514:	str	r1, [r4, #8]
   14518:	str	r3, [r4, #16]
   1451c:	str	r3, [r4, #20]
   14520:	str	r3, [r4, #24]
   14524:	str	r3, [r4, #28]
   14528:	str	r3, [r4, #32]
   1452c:	str	r3, [r4, #36]	; 0x24
   14530:	str	r3, [r4, #40]	; 0x28
   14534:	str	r3, [r4, #44]	; 0x2c
   14538:	str	r3, [r4, #48]	; 0x30
   1453c:	str	r3, [r4, #52]	; 0x34
   14540:	str	r3, [r4, #72]	; 0x48
   14544:	str	r3, [r4, #76]	; 0x4c
   14548:	str	r3, [r4, #84]	; 0x54
   1454c:	str	r3, [r4, #136]	; 0x88
   14550:	str	r3, [r4, #140]	; 0x8c
   14554:	str	r3, [r4, #184]	; 0xb8
   14558:	str	r2, [r4, #64]	; 0x40
   1455c:	str	r2, [r4, #176]	; 0xb0
   14560:	pop	{r4, r6, r7, pc}
   14564:	strdeq	pc, [r0], -lr
   14568:	andeq	r0, r4, ip, ror #18
   1456c:	andeq	r1, r4, ip, lsr r9
   14570:	andeq	r1, r4, r4, asr #18

00014574 <flatcc_create_context@@Base>:
   14574:	push	{r4, r5, r6, r7, r8, r9, lr}
   14578:	mov	r5, r0
   1457c:	sub	sp, sp, #12
   14580:	mov	r0, #560	; 0x230
   14584:	mov	r6, r1
   14588:	mov	r7, r2
   1458c:	mov	r8, r3
   14590:	bl	13f3c <malloc@plt>
   14594:	subs	r4, r0, #0
   14598:	beq	145cc <flatcc_create_context@@Base+0x58>
   1459c:	mov	r9, #0
   145a0:	str	r8, [sp]
   145a4:	mov	r3, r7
   145a8:	mov	r2, r6
   145ac:	mov	r1, r5
   145b0:	str	r9, [sp, #4]
   145b4:	bl	2f7d4 <__flatcc_fb_init_parser@@Base>
   145b8:	cmp	r0, r9
   145bc:	mov	r0, r4
   145c0:	bne	145d4 <flatcc_create_context@@Base+0x60>
   145c4:	add	sp, sp, #12
   145c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   145cc:	mov	r0, r4
   145d0:	b	145c4 <flatcc_create_context@@Base+0x50>
   145d4:	bl	13ed0 <free@plt>
   145d8:	mov	r0, r9
   145dc:	b	145c4 <flatcc_create_context@@Base+0x50>

000145e0 <flatcc_parse_buffer@@Base>:
   145e0:	ldr	r3, [r0, #128]	; 0x80
   145e4:	push	{r4, r5, r6, r7, r8, lr}
   145e8:	mov	r6, r2
   145ec:	cmp	r3, #0
   145f0:	cmpne	r3, r6
   145f4:	mov	r2, #1
   145f8:	movcc	r4, #1
   145fc:	movcs	r4, #0
   14600:	str	r2, [r0, #140]	; 0x8c
   14604:	bcc	14654 <flatcc_parse_buffer@@Base+0x74>
   14608:	mov	r5, r0
   1460c:	mov	r7, r1
   14610:	add	r1, r0, #352	; 0x160
   14614:	add	r0, r0, #524	; 0x20c
   14618:	bl	27518 <ptr_set_insert_item@@Base>
   1461c:	mov	r3, r4
   14620:	mov	r2, r6
   14624:	mov	r1, r7
   14628:	mov	r0, r5
   1462c:	bl	2fa88 <__flatcc_fb_parse@@Base>
   14630:	cmp	r0, #0
   14634:	bne	1464c <flatcc_parse_buffer@@Base+0x6c>
   14638:	mov	r0, r5
   1463c:	bl	35d88 <__flatcc_fb_build_schema@@Base>
   14640:	adds	r0, r0, #0
   14644:	mvnne	r0, #0
   14648:	pop	{r4, r5, r6, r7, r8, pc}
   1464c:	mvn	r0, #0
   14650:	pop	{r4, r5, r6, r7, r8, pc}
   14654:	ldr	r1, [pc, #8]	; 14664 <flatcc_parse_buffer@@Base+0x84>
   14658:	bl	2d708 <__flatcc_fb_print_error@@Base>
   1465c:	mvn	r0, #0
   14660:	pop	{r4, r5, r6, r7, r8, pc}
   14664:	andeq	r1, r4, ip, asr #18

00014668 <flatcc_parse_file@@Base>:
   14668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1466c:	mov	r5, r0
   14670:	sub	sp, sp, #28
   14674:	mov	r0, r1
   14678:	mov	r7, r1
   1467c:	bl	13f78 <strlen@plt>
   14680:	add	r9, r5, #352	; 0x160
   14684:	mov	r1, r9
   14688:	mov	r2, #1
   1468c:	mov	r8, r0
   14690:	ldr	r0, [r5, #412]	; 0x19c
   14694:	add	r0, r0, #32
   14698:	bl	299b4 <fb_schema_table_insert_item@@Base>
   1469c:	cmp	r0, #0
   146a0:	beq	146b4 <flatcc_parse_file@@Base+0x4c>
   146a4:	mov	sl, #0
   146a8:	mov	r0, sl
   146ac:	add	sp, sp, #28
   146b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146b4:	ldr	r3, [r5, #552]	; 0x228
   146b8:	cmp	r3, #0
   146bc:	str	r3, [sp, #12]
   146c0:	str	r3, [sp, #8]
   146c4:	beq	14b00 <flatcc_parse_file@@Base+0x498>
   146c8:	ldr	r3, [r5, #336]	; 0x150
   146cc:	cmp	r3, #0
   146d0:	ble	14b78 <flatcc_parse_file@@Base+0x510>
   146d4:	ldr	sl, [pc, #1272]	; 14bd4 <flatcc_parse_file@@Base+0x56c>
   146d8:	mov	r4, #0
   146dc:	mov	fp, #1
   146e0:	ldr	r3, [r5, #328]	; 0x148
   146e4:	ldr	r6, [r3, r4, lsl #2]
   146e8:	mov	r0, r6
   146ec:	bl	13f78 <strlen@plt>
   146f0:	stm	sp, {sl, fp}
   146f4:	mov	r3, r8
   146f8:	mov	r2, r7
   146fc:	mov	r1, r0
   14700:	mov	r0, r6
   14704:	bl	29e30 <__flatcc_fb_create_join_path_n@@Base>
   14708:	subs	r6, r0, #0
   1470c:	beq	14b30 <flatcc_parse_file@@Base+0x4c8>
   14710:	add	r2, sp, #20
   14714:	ldr	r1, [r5, #128]	; 0x80
   14718:	bl	2a478 <__flatcc_fb_read_file@@Base>
   1471c:	cmp	r0, #0
   14720:	beq	14994 <flatcc_parse_file@@Base+0x32c>
   14724:	mov	r1, r0
   14728:	ldr	r0, [r5, #412]	; 0x19c
   1472c:	ldr	ip, [sp, #20]
   14730:	ldr	r3, [r0, #56]	; 0x38
   14734:	mov	r2, ip
   14738:	add	r3, r3, ip
   1473c:	str	r3, [r0, #56]	; 0x38
   14740:	mov	r3, #1
   14744:	str	r6, [r5, #548]	; 0x224
   14748:	mov	r0, r5
   1474c:	bl	2fa88 <__flatcc_fb_parse@@Base>
   14750:	subs	sl, r0, #0
   14754:	bne	146a4 <flatcc_parse_file@@Base+0x3c>
   14758:	ldr	r7, [r5, #352]	; 0x160
   1475c:	cmp	r7, #0
   14760:	beq	14838 <flatcc_parse_file@@Base+0x1d0>
   14764:	add	r3, r5, #128	; 0x80
   14768:	str	sl, [sp, #8]
   1476c:	mov	fp, #560	; 0x230
   14770:	mov	sl, r3
   14774:	ldr	r1, [r7, #12]
   14778:	ldr	r0, [r7, #8]
   1477c:	bl	29d60 <__flatcc_fb_copy_path_n@@Base>
   14780:	subs	r8, r0, #0
   14784:	beq	14b30 <flatcc_parse_file@@Base+0x4c8>
   14788:	ldr	r6, [r5, #412]	; 0x19c
   1478c:	ldr	r3, [r5, #132]	; 0x84
   14790:	ldr	r2, [r6, #52]	; 0x34
   14794:	cmp	r2, r3
   14798:	cmpge	r3, #0
   1479c:	bgt	14aec <flatcc_parse_file@@Base+0x484>
   147a0:	ldr	r3, [r5, #136]	; 0x88
   147a4:	ldr	r2, [r6, #48]	; 0x30
   147a8:	cmp	r2, r3
   147ac:	cmpge	r3, #0
   147b0:	bgt	14ad8 <flatcc_parse_file@@Base+0x470>
   147b4:	mov	r0, fp
   147b8:	bl	13f3c <malloc@plt>
   147bc:	subs	r4, r0, #0
   147c0:	beq	14ab0 <flatcc_parse_file@@Base+0x448>
   147c4:	ldr	r2, [r5, #12]
   147c8:	ldr	r3, [r5, #8]
   147cc:	mov	r1, sl
   147d0:	stm	sp, {r2, r6}
   147d4:	mov	r2, r8
   147d8:	bl	2f7d4 <__flatcc_fb_init_parser@@Base>
   147dc:	cmp	r0, #0
   147e0:	bne	14ac8 <flatcc_parse_file@@Base+0x460>
   147e4:	add	r1, r4, #352	; 0x160
   147e8:	add	r0, r6, #32
   147ec:	bl	29a90 <fb_schema_table_find_item@@Base>
   147f0:	cmp	r0, #0
   147f4:	beq	14a5c <flatcc_parse_file@@Base+0x3f4>
   147f8:	add	r0, r0, #172	; 0xac
   147fc:	mov	r2, r9
   14800:	ldr	r1, [pc, #976]	; 14bd8 <flatcc_parse_file@@Base+0x570>
   14804:	bl	277ac <ptr_set_visit@@Base>
   14808:	mov	r0, r4
   1480c:	ldr	r6, [r4]
   14810:	bl	32e44 <__flatcc_fb_clear_parser@@Base>
   14814:	mov	r0, r4
   14818:	bl	13ed0 <free@plt>
   1481c:	subs	r4, r6, #0
   14820:	bne	14808 <flatcc_parse_file@@Base+0x1a0>
   14824:	mov	r0, r8
   14828:	bl	13ed0 <free@plt>
   1482c:	ldr	r7, [r7]
   14830:	cmp	r7, #0
   14834:	bne	14774 <flatcc_parse_file@@Base+0x10c>
   14838:	mov	r1, r9
   1483c:	mov	r2, #1
   14840:	add	r0, r5, #524	; 0x20c
   14844:	bl	27518 <ptr_set_insert_item@@Base>
   14848:	mov	r0, r5
   1484c:	bl	35d88 <__flatcc_fb_build_schema@@Base>
   14850:	subs	sl, r0, #0
   14854:	bne	146a4 <flatcc_parse_file@@Base+0x3c>
   14858:	ldr	r3, [r5, #240]	; 0xf0
   1485c:	ldr	r2, [sp, #12]
   14860:	adds	r3, r3, #0
   14864:	movne	r3, #1
   14868:	cmp	r2, #0
   1486c:	movne	r3, #0
   14870:	cmp	r3, #0
   14874:	beq	146a4 <flatcc_parse_file@@Base+0x3c>
   14878:	ldr	r3, [r5, #552]	; 0x228
   1487c:	cmp	r3, #0
   14880:	bne	14bc0 <flatcc_parse_file@@Base+0x558>
   14884:	ldr	r4, [r5, #344]	; 0x158
   14888:	ldr	r2, [pc, #836]	; 14bd4 <flatcc_parse_file@@Base+0x56c>
   1488c:	ldr	r1, [r5, #244]	; 0xf4
   14890:	cmp	r4, #0
   14894:	moveq	r4, r2
   14898:	ldr	r8, [r5, #512]	; 0x200
   1489c:	cmp	r1, #0
   148a0:	ldr	r3, [r5, #248]	; 0xf8
   148a4:	moveq	r0, r4
   148a8:	moveq	r1, r8
   148ac:	ldreq	r2, [pc, #808]	; 14bdc <flatcc_parse_file@@Base+0x574>
   148b0:	movne	r0, r2
   148b4:	cmp	r3, #0
   148b8:	beq	14ba8 <flatcc_parse_file@@Base+0x540>
   148bc:	ldr	r4, [pc, #784]	; 14bd4 <flatcc_parse_file@@Base+0x56c>
   148c0:	mov	r8, r3
   148c4:	mov	r7, r4
   148c8:	mov	r3, #1
   148cc:	bl	29f74 <__flatcc_fb_create_join_path@@Base>
   148d0:	subs	r6, r0, #0
   148d4:	beq	14b30 <flatcc_parse_file@@Base+0x4c8>
   148d8:	mov	r0, r4
   148dc:	mov	r2, r7
   148e0:	mov	r1, r8
   148e4:	mov	r3, #1
   148e8:	bl	29f74 <__flatcc_fb_create_join_path@@Base>
   148ec:	subs	r4, r0, #0
   148f0:	beq	14b30 <flatcc_parse_file@@Base+0x4c8>
   148f4:	bl	2a33c <__flatcc_fb_create_make_path@@Base>
   148f8:	subs	r7, r0, #0
   148fc:	beq	14b30 <flatcc_parse_file@@Base+0x4c8>
   14900:	mov	r0, r4
   14904:	bl	13ed0 <free@plt>
   14908:	ldr	r1, [pc, #720]	; 14be0 <flatcc_parse_file@@Base+0x578>
   1490c:	mov	r0, r6
   14910:	bl	13ec4 <fopen@plt>
   14914:	subs	r8, r0, #0
   14918:	beq	14b84 <flatcc_parse_file@@Base+0x51c>
   1491c:	mov	r2, r7
   14920:	ldr	r1, [pc, #700]	; 14be4 <flatcc_parse_file@@Base+0x57c>
   14924:	bl	13f84 <fprintf@plt>
   14928:	ldr	r4, [r5]
   1492c:	cmp	r4, #0
   14930:	ldrne	r9, [pc, #688]	; 14be8 <flatcc_parse_file@@Base+0x580>
   14934:	beq	1496c <flatcc_parse_file@@Base+0x304>
   14938:	ldr	r0, [r4, #548]	; 0x224
   1493c:	bl	2a33c <__flatcc_fb_create_make_path@@Base>
   14940:	subs	r5, r0, #0
   14944:	beq	14b30 <flatcc_parse_file@@Base+0x4c8>
   14948:	mov	r2, r5
   1494c:	mov	r1, r9
   14950:	mov	r0, r8
   14954:	bl	13f84 <fprintf@plt>
   14958:	ldr	r4, [r4]
   1495c:	mov	r0, r5
   14960:	bl	13ed0 <free@plt>
   14964:	cmp	r4, #0
   14968:	bne	14938 <flatcc_parse_file@@Base+0x2d0>
   1496c:	mov	r1, r8
   14970:	mov	r0, #10
   14974:	bl	13fe4 <fputc@plt>
   14978:	mov	r0, r6
   1497c:	bl	13ed0 <free@plt>
   14980:	mov	r0, r7
   14984:	bl	13ed0 <free@plt>
   14988:	mov	r0, r8
   1498c:	bl	13fcc <fclose@plt>
   14990:	b	146a8 <flatcc_parse_file@@Base+0x40>
   14994:	mov	r0, r6
   14998:	bl	13ed0 <free@plt>
   1499c:	ldr	r3, [r5, #128]	; 0x80
   149a0:	ldr	r2, [sp, #20]
   149a4:	cmp	r3, #0
   149a8:	cmpne	r3, r2
   149ac:	bcc	14b34 <flatcc_parse_file@@Base+0x4cc>
   149b0:	ldr	r3, [r5, #336]	; 0x150
   149b4:	add	r4, r4, #1
   149b8:	cmp	r3, r4
   149bc:	bgt	146e0 <flatcc_parse_file@@Base+0x78>
   149c0:	ldr	r3, [sp, #8]
   149c4:	cmp	r3, #0
   149c8:	beq	14a44 <flatcc_parse_file@@Base+0x3dc>
   149cc:	ldr	r3, [r5, #552]	; 0x228
   149d0:	mov	r4, r3
   149d4:	str	r3, [sp, #8]
   149d8:	mov	r0, r4
   149dc:	bl	13f78 <strlen@plt>
   149e0:	mov	r1, r0
   149e4:	mov	r0, r4
   149e8:	bl	2a358 <__flatcc_fb_find_basename@@Base>
   149ec:	mov	r2, #1
   149f0:	str	r2, [sp, #4]
   149f4:	str	sl, [sp]
   149f8:	mov	r3, r8
   149fc:	mov	r2, r7
   14a00:	mov	r1, r0
   14a04:	mov	r0, r4
   14a08:	bl	29e30 <__flatcc_fb_create_join_path_n@@Base>
   14a0c:	subs	r6, r0, #0
   14a10:	beq	14b30 <flatcc_parse_file@@Base+0x4c8>
   14a14:	ldr	r1, [r5, #128]	; 0x80
   14a18:	add	r2, sp, #20
   14a1c:	bl	2a478 <__flatcc_fb_read_file@@Base>
   14a20:	subs	r1, r0, #0
   14a24:	bne	14728 <flatcc_parse_file@@Base+0xc0>
   14a28:	mov	r0, r6
   14a2c:	bl	13ed0 <free@plt>
   14a30:	ldr	r3, [r5, #128]	; 0x80
   14a34:	ldr	r2, [sp, #20]
   14a38:	cmp	r3, #0
   14a3c:	cmpne	r3, r2
   14a40:	bcc	14b34 <flatcc_parse_file@@Base+0x4cc>
   14a44:	mov	r2, r7
   14a48:	mov	r0, r5
   14a4c:	ldr	r1, [pc, #408]	; 14bec <flatcc_parse_file@@Base+0x584>
   14a50:	bl	2d708 <__flatcc_fb_print_error@@Base>
   14a54:	mvn	sl, #0
   14a58:	b	146a8 <flatcc_parse_file@@Base+0x40>
   14a5c:	ldr	r1, [r5]
   14a60:	ldr	r2, [r6, #52]	; 0x34
   14a64:	ldr	r3, [r6, #48]	; 0x30
   14a68:	str	r1, [r4]
   14a6c:	ldr	r1, [r5, #548]	; 0x224
   14a70:	add	r2, r2, #1
   14a74:	add	r3, r3, #1
   14a78:	str	r1, [r4, #552]	; 0x228
   14a7c:	str	r4, [r5]
   14a80:	mov	r1, r8
   14a84:	str	r2, [r6, #52]	; 0x34
   14a88:	str	r3, [r6, #48]	; 0x30
   14a8c:	mov	r0, r4
   14a90:	bl	14668 <flatcc_parse_file@@Base>
   14a94:	cmp	r0, #0
   14a98:	bne	14ab0 <flatcc_parse_file@@Base+0x448>
   14a9c:	add	r0, r4, #524	; 0x20c
   14aa0:	mov	r2, r9
   14aa4:	ldr	r1, [pc, #300]	; 14bd8 <flatcc_parse_file@@Base+0x570>
   14aa8:	bl	277ac <ptr_set_visit@@Base>
   14aac:	b	14824 <flatcc_parse_file@@Base+0x1bc>
   14ab0:	ldr	sl, [sp, #8]
   14ab4:	mov	r0, r8
   14ab8:	bl	13ed0 <free@plt>
   14abc:	mov	r0, sl
   14ac0:	add	sp, sp, #28
   14ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ac8:	mov	r0, r4
   14acc:	ldr	sl, [sp, #8]
   14ad0:	bl	13ed0 <free@plt>
   14ad4:	b	14ab4 <flatcc_parse_file@@Base+0x44c>
   14ad8:	mov	r0, r5
   14adc:	ldr	r1, [pc, #268]	; 14bf0 <flatcc_parse_file@@Base+0x588>
   14ae0:	ldr	sl, [sp, #8]
   14ae4:	bl	2d708 <__flatcc_fb_print_error@@Base>
   14ae8:	b	14ab4 <flatcc_parse_file@@Base+0x44c>
   14aec:	mov	r0, r5
   14af0:	ldr	r1, [pc, #252]	; 14bf4 <flatcc_parse_file@@Base+0x58c>
   14af4:	ldr	sl, [sp, #8]
   14af8:	bl	2d708 <__flatcc_fb_print_error@@Base>
   14afc:	b	14ab4 <flatcc_parse_file@@Base+0x44c>
   14b00:	ldr	r1, [r5, #128]	; 0x80
   14b04:	add	r2, sp, #20
   14b08:	mov	r0, r7
   14b0c:	bl	2a478 <__flatcc_fb_read_file@@Base>
   14b10:	subs	r1, r0, #0
   14b14:	beq	14b48 <flatcc_parse_file@@Base+0x4e0>
   14b18:	mov	r0, r7
   14b1c:	str	r1, [sp, #8]
   14b20:	bl	29dac <__flatcc_fb_copy_path@@Base>
   14b24:	ldr	r1, [sp, #8]
   14b28:	subs	r6, r0, #0
   14b2c:	bne	14728 <flatcc_parse_file@@Base+0xc0>
   14b30:	bl	14490 <_start@@Base+0x134>
   14b34:	mov	r0, r5
   14b38:	ldr	r1, [pc, #184]	; 14bf8 <flatcc_parse_file@@Base+0x590>
   14b3c:	bl	2d708 <__flatcc_fb_print_error@@Base>
   14b40:	mvn	sl, #0
   14b44:	b	146a8 <flatcc_parse_file@@Base+0x40>
   14b48:	ldr	r3, [r5, #412]	; 0x19c
   14b4c:	ldr	r1, [sp, #20]
   14b50:	ldr	r2, [r5, #128]	; 0x80
   14b54:	ldr	r3, [r3, #56]	; 0x38
   14b58:	add	r3, r3, r1
   14b5c:	cmp	r2, #0
   14b60:	cmpne	r3, r2
   14b64:	bhi	14b34 <flatcc_parse_file@@Base+0x4cc>
   14b68:	ldr	r3, [r5, #336]	; 0x150
   14b6c:	cmp	r3, #0
   14b70:	ble	14a44 <flatcc_parse_file@@Base+0x3dc>
   14b74:	b	146d4 <flatcc_parse_file@@Base+0x6c>
   14b78:	ldr	sl, [pc, #84]	; 14bd4 <flatcc_parse_file@@Base+0x56c>
   14b7c:	ldr	r4, [sp, #8]
   14b80:	b	149d8 <flatcc_parse_file@@Base+0x370>
   14b84:	mov	r2, r6
   14b88:	ldr	r1, [pc, #108]	; 14bfc <flatcc_parse_file@@Base+0x594>
   14b8c:	mov	r0, r5
   14b90:	bl	2d708 <__flatcc_fb_print_error@@Base>
   14b94:	mov	r0, r6
   14b98:	bl	13ed0 <free@plt>
   14b9c:	mov	r0, r7
   14ba0:	bl	13ed0 <free@plt>
   14ba4:	b	146a8 <flatcc_parse_file@@Base+0x40>
   14ba8:	ldr	ip, [r5, #308]	; 0x134
   14bac:	ldr	r3, [pc, #76]	; 14c00 <flatcc_parse_file@@Base+0x598>
   14bb0:	cmp	ip, #0
   14bb4:	ldr	r7, [pc, #72]	; 14c04 <flatcc_parse_file@@Base+0x59c>
   14bb8:	movne	r7, r3
   14bbc:	b	148c8 <flatcc_parse_file@@Base+0x260>
   14bc0:	ldr	r3, [pc, #64]	; 14c08 <flatcc_parse_file@@Base+0x5a0>
   14bc4:	mov	r2, #220	; 0xdc
   14bc8:	ldr	r1, [pc, #60]	; 14c0c <flatcc_parse_file@@Base+0x5a4>
   14bcc:	ldr	r0, [pc, #60]	; 14c10 <flatcc_parse_file@@Base+0x5a8>
   14bd0:	bl	14038 <__assert_fail@plt>
   14bd4:	andeq	fp, r4, ip, lsr #24
   14bd8:	andeq	r4, r1, r4, lsl #9
   14bdc:	andeq	r1, r4, r0, ror r9
   14be0:	andeq	r1, r4, r0, asr #20
   14be4:	andeq	r1, r4, r4, ror sl
   14be8:	andeq	r1, r4, r8, ror sl
   14bec:	andeq	r1, r4, r8, ror r9
   14bf0:	andeq	r1, r4, r0, asr #19
   14bf4:	andeq	r1, r4, r0, lsr #19
   14bf8:	andeq	r1, r4, ip, asr #18
   14bfc:	andeq	r1, r4, r4, asr #20
   14c00:	andeq	r1, r4, ip, lsr r9
   14c04:			; <UNDEFINED> instruction: 0x000583bc
   14c08:	strdeq	r1, [r4], -ip
   14c0c:	andeq	r1, r4, r0, ror #19
   14c10:	andeq	r1, r4, r8, lsr #20

00014c14 <flatcc_generate_binary_schema_to_buffer@@Base>:
   14c14:	push	{lr}		; (str lr, [sp, #-4]!)
   14c18:	sub	sp, sp, #12
   14c1c:	add	r3, sp, #8
   14c20:	mov	ip, r0
   14c24:	str	r2, [r3, #-4]!
   14c28:	add	r0, r0, #128	; 0x80
   14c2c:	mov	r2, r1
   14c30:	add	r1, ip, #352	; 0x160
   14c34:	bl	2669c <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   14c38:	cmp	r0, #0
   14c3c:	mvneq	r0, #0
   14c40:	ldrne	r0, [sp, #4]
   14c44:	add	sp, sp, #12
   14c48:	pop	{pc}		; (ldr pc, [sp], #4)

00014c4c <flatcc_generate_binary_schema@@Base>:
   14c4c:	mov	r3, r0
   14c50:	mov	r2, r1
   14c54:	add	r0, r0, #128	; 0x80
   14c58:	add	r1, r3, #352	; 0x160
   14c5c:	b	26710 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

00014c60 <flatcc_generate_files@@Base>:
   14c60:	push	{r4, r5, r6, lr}
   14c64:	subs	r5, r0, #0
   14c68:	sub	sp, sp, #232	; 0xe8
   14c6c:	beq	14d1c <flatcc_generate_files@@Base+0xbc>
   14c70:	ldr	r2, [r5, #108]	; 0x6c
   14c74:	cmp	r2, #0
   14c78:	bne	14d1c <flatcc_generate_files@@Base+0xbc>
   14c7c:	mov	r4, r5
   14c80:	b	14c88 <flatcc_generate_files@@Base+0x28>
   14c84:	mov	r4, r3
   14c88:	ldr	r3, [r4]
   14c8c:	str	r2, [r4, #4]
   14c90:	cmp	r3, #0
   14c94:	mov	r2, r4
   14c98:	bne	14c84 <flatcc_generate_files@@Base+0x24>
   14c9c:	ldr	r3, [r5, #308]	; 0x134
   14ca0:	add	r6, r5, #128	; 0x80
   14ca4:	cmp	r3, #0
   14ca8:	bne	14d08 <flatcc_generate_files@@Base+0xa8>
   14cac:	mov	r1, r6
   14cb0:	mov	r0, sp
   14cb4:	bl	14f0c <__flatcc_fb_init_output_c@@Base>
   14cb8:	cmp	r0, #0
   14cbc:	bne	14d1c <flatcc_generate_files@@Base+0xbc>
   14cc0:	ldr	r3, [r5, #256]	; 0x100
   14cc4:	cmp	r3, #0
   14cc8:	beq	14d60 <flatcc_generate_files@@Base+0x100>
   14ccc:	ldr	r6, [r5, #120]	; 0x78
   14cd0:	cmp	r6, #0
   14cd4:	beq	14cf4 <flatcc_generate_files@@Base+0x94>
   14cd8:	ldr	r3, [r5, #300]	; 0x12c
   14cdc:	cmp	r3, #0
   14ce0:	beq	14d74 <flatcc_generate_files@@Base+0x114>
   14ce4:	ldr	r3, [r4, #108]	; 0x6c
   14ce8:	cmp	r3, #0
   14cec:	beq	14d2c <flatcc_generate_files@@Base+0xcc>
   14cf0:	mov	r6, #1
   14cf4:	mov	r0, sp
   14cf8:	bl	14ed8 <__flatcc_fb_end_output_c@@Base>
   14cfc:	mov	r0, r6
   14d00:	add	sp, sp, #232	; 0xe8
   14d04:	pop	{r4, r5, r6, pc}
   14d08:	mov	r0, r6
   14d0c:	add	r1, r5, #352	; 0x160
   14d10:	bl	26778 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   14d14:	cmp	r0, #0
   14d18:	beq	14cac <flatcc_generate_files@@Base+0x4c>
   14d1c:	mvn	r6, #0
   14d20:	mov	r0, r6
   14d24:	add	sp, sp, #232	; 0xe8
   14d28:	pop	{r4, r5, r6, pc}
   14d2c:	add	r1, r4, #352	; 0x160
   14d30:	mov	r0, sp
   14d34:	bl	155f8 <__flatcc_fb_codegen_c@@Base>
   14d38:	ldr	r4, [r4, #4]
   14d3c:	cmp	r4, #0
   14d40:	clz	r3, r0
   14d44:	lsr	r3, r3, #5
   14d48:	moveq	r3, #0
   14d4c:	cmp	r3, #0
   14d50:	bne	14ce4 <flatcc_generate_files@@Base+0x84>
   14d54:	adds	r6, r0, #0
   14d58:	movne	r6, #1
   14d5c:	b	14cf4 <flatcc_generate_files@@Base+0x94>
   14d60:	mov	r0, sp
   14d64:	bl	15410 <__flatcc_fb_codegen_common_c@@Base>
   14d68:	subs	r6, r0, #0
   14d6c:	bne	14cf4 <flatcc_generate_files@@Base+0x94>
   14d70:	b	14ccc <flatcc_generate_files@@Base+0x6c>
   14d74:	add	r1, r5, #352	; 0x160
   14d78:	mov	r0, sp
   14d7c:	bl	155f8 <__flatcc_fb_codegen_c@@Base>
   14d80:	mov	r6, r0
   14d84:	b	14cf4 <flatcc_generate_files@@Base+0x94>

00014d88 <flatcc_destroy_context@@Base>:
   14d88:	push	{r4, r5, r6, lr}
   14d8c:	subs	r4, r0, #0
   14d90:	popeq	{r4, r5, r6, pc}
   14d94:	mov	r0, r4
   14d98:	ldr	r5, [r4]
   14d9c:	bl	32e44 <__flatcc_fb_clear_parser@@Base>
   14da0:	mov	r0, r4
   14da4:	bl	13ed0 <free@plt>
   14da8:	subs	r4, r5, #0
   14dac:	bne	14d94 <flatcc_destroy_context@@Base+0xc>
   14db0:	pop	{r4, r5, r6, pc}
   14db4:	mov	r0, r1
   14db8:	b	13ed0 <free@plt>

00014dbc <__flatcc_fb_open_output_file@@Base>:
   14dbc:	push	{r4, r5, r6, r7, r8, r9, lr}
   14dc0:	mov	r7, r1
   14dc4:	ldr	r1, [r0, #212]	; 0xd4
   14dc8:	mov	r6, r0
   14dcc:	sub	sp, sp, #12
   14dd0:	ldr	r5, [r1, #216]	; 0xd8
   14dd4:	mov	r8, r2
   14dd8:	subs	r0, r5, #0
   14ddc:	mov	r9, r3
   14de0:	beq	14e04 <__flatcc_fb_open_output_file@@Base+0x48>
   14de4:	bl	13f78 <strlen@plt>
   14de8:	ldr	r4, [r6, #204]	; 0xcc
   14dec:	cmp	r4, #0
   14df0:	movne	r4, #0
   14df4:	beq	14e18 <__flatcc_fb_open_output_file@@Base+0x5c>
   14df8:	mov	r0, r4
   14dfc:	add	sp, sp, #12
   14e00:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14e04:	ldr	r4, [r6, #204]	; 0xcc
   14e08:	ldr	r5, [pc, #120]	; 14e88 <__flatcc_fb_open_output_file@@Base+0xcc>
   14e0c:	cmp	r4, #0
   14e10:	movne	r4, #0
   14e14:	bne	14df8 <__flatcc_fb_open_output_file@@Base+0x3c>
   14e18:	mov	ip, #1
   14e1c:	mov	r1, r0
   14e20:	str	r9, [sp]
   14e24:	mov	r0, r5
   14e28:	mov	r3, r8
   14e2c:	mov	r2, r7
   14e30:	str	ip, [sp, #4]
   14e34:	bl	29e30 <__flatcc_fb_create_join_path_n@@Base>
   14e38:	subs	r5, r0, #0
   14e3c:	beq	14e84 <__flatcc_fb_open_output_file@@Base+0xc8>
   14e40:	ldr	r1, [pc, #68]	; 14e8c <__flatcc_fb_open_output_file@@Base+0xd0>
   14e44:	bl	13ec4 <fopen@plt>
   14e48:	cmp	r0, #0
   14e4c:	str	r0, [r6, #204]	; 0xcc
   14e50:	beq	14e68 <__flatcc_fb_open_output_file@@Base+0xac>
   14e54:	mov	r0, r5
   14e58:	bl	13ed0 <free@plt>
   14e5c:	mov	r0, r4
   14e60:	add	sp, sp, #12
   14e64:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14e68:	ldr	r3, [pc, #32]	; 14e90 <__flatcc_fb_open_output_file@@Base+0xd4>
   14e6c:	mov	r2, r5
   14e70:	ldr	r1, [pc, #28]	; 14e94 <__flatcc_fb_open_output_file@@Base+0xd8>
   14e74:	ldr	r0, [r3]
   14e78:	bl	13f84 <fprintf@plt>
   14e7c:	mvn	r4, #0
   14e80:	b	14e54 <__flatcc_fb_open_output_file@@Base+0x98>
   14e84:	bl	14048 <__assert_fail@plt+0x10>
   14e88:	andeq	fp, r4, ip, lsr #24
   14e8c:	andeq	r1, r4, r0, asr #20
   14e90:	andeq	sp, r6, r8, lsr #1
   14e94:	andeq	r1, r4, ip, ror sl

00014e98 <__flatcc_fb_close_output_file@@Base>:
   14e98:	ldr	r3, [r0, #212]	; 0xd4
   14e9c:	ldr	r2, [r3, #124]	; 0x7c
   14ea0:	cmp	r2, #0
   14ea4:	bxne	lr
   14ea8:	push	{r4, r5, r6, lr}
   14eac:	ldr	r5, [r3, #108]	; 0x6c
   14eb0:	cmp	r5, #0
   14eb4:	popne	{r4, r5, r6, pc}
   14eb8:	ldr	r3, [r0, #204]	; 0xcc
   14ebc:	cmp	r3, #0
   14ec0:	popeq	{r4, r5, r6, pc}
   14ec4:	mov	r4, r0
   14ec8:	mov	r0, r3
   14ecc:	bl	13fcc <fclose@plt>
   14ed0:	str	r5, [r4, #204]	; 0xcc
   14ed4:	pop	{r4, r5, r6, pc}

00014ed8 <__flatcc_fb_end_output_c@@Base>:
   14ed8:	ldr	r3, [pc, #40]	; 14f08 <__flatcc_fb_end_output_c@@Base+0x30>
   14edc:	push	{r4, lr}
   14ee0:	mov	r4, r0
   14ee4:	ldr	r3, [r3]
   14ee8:	ldr	r0, [r0, #204]	; 0xcc
   14eec:	cmp	r3, r0
   14ef0:	cmpne	r0, #0
   14ef4:	beq	14efc <__flatcc_fb_end_output_c@@Base+0x24>
   14ef8:	bl	13fcc <fclose@plt>
   14efc:	mov	r3, #0
   14f00:	str	r3, [r4, #204]	; 0xcc
   14f04:	pop	{r4, pc}
   14f08:	andeq	sp, r6, ip, lsr #1

00014f0c <__flatcc_fb_init_output_c@@Base>:
   14f0c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14f10:	mov	r7, r1
   14f14:	ldr	ip, [r1, #128]	; 0x80
   14f18:	ldr	r1, [pc, #420]	; 150c4 <__flatcc_fb_init_output_c@@Base+0x1b8>
   14f1c:	ldr	r8, [r7, #216]	; 0xd8
   14f20:	cmp	ip, #0
   14f24:	ldr	r3, [pc, #412]	; 150c8 <__flatcc_fb_init_output_c@@Base+0x1bc>
   14f28:	ldr	r9, [pc, #412]	; 150cc <__flatcc_fb_init_output_c@@Base+0x1c0>
   14f2c:	movne	r9, r1
   14f30:	mov	r1, #0
   14f34:	cmp	r8, r1
   14f38:	mov	r2, #232	; 0xe8
   14f3c:	moveq	r8, r3
   14f40:	mov	r6, r0
   14f44:	bl	13f9c <memset@plt>
   14f48:	ldr	r4, [r7, #196]	; 0xc4
   14f4c:	str	r7, [r6, #212]	; 0xd4
   14f50:	cmp	r4, #0
   14f54:	beq	15068 <__flatcc_fb_init_output_c@@Base+0x15c>
   14f58:	mov	r0, r4
   14f5c:	bl	13f78 <strlen@plt>
   14f60:	cmp	r0, #100	; 0x64
   14f64:	mov	sl, r0
   14f68:	bhi	150a4 <__flatcc_fb_init_output_c@@Base+0x198>
   14f6c:	mov	r1, r4
   14f70:	mov	r2, #100	; 0x64
   14f74:	mov	r0, r6
   14f78:	bl	13fa8 <strncpy@plt>
   14f7c:	mov	r3, #0
   14f80:	cmp	sl, #0
   14f84:	strb	r3, [r6, #100]	; 0x64
   14f88:	bne	15030 <__flatcc_fb_init_output_c@@Base+0x124>
   14f8c:	ldrb	r4, [r6]
   14f90:	add	r5, r6, #102	; 0x66
   14f94:	cmp	r4, #0
   14f98:	beq	15060 <__flatcc_fb_init_output_c@@Base+0x154>
   14f9c:	bl	13f54 <__ctype_toupper_loc@plt>
   14fa0:	mov	r3, r5
   14fa4:	mov	r2, r6
   14fa8:	ldr	r1, [r0]
   14fac:	ldr	r1, [r1, r4, lsl #2]
   14fb0:	strb	r1, [r3], #1
   14fb4:	ldrb	r4, [r2, #1]!
   14fb8:	cmp	r4, #0
   14fbc:	bne	14fa8 <__flatcc_fb_init_output_c@@Base+0x9c>
   14fc0:	add	sl, r6, sl
   14fc4:	mov	r2, #0
   14fc8:	strb	r2, [r3]
   14fcc:	strb	r2, [sl, #102]	; 0x66
   14fd0:	ldr	r4, [r7, #108]	; 0x6c
   14fd4:	ldr	r3, [r7, #176]	; 0xb0
   14fd8:	cmp	r4, r2
   14fdc:	str	r3, [r6, #224]	; 0xe0
   14fe0:	bne	15048 <__flatcc_fb_init_output_c@@Base+0x13c>
   14fe4:	ldr	r3, [r6, #212]	; 0xd4
   14fe8:	ldr	r1, [r3, #124]	; 0x7c
   14fec:	cmp	r1, #0
   14ff0:	beq	15028 <__flatcc_fb_init_output_c@@Base+0x11c>
   14ff4:	mov	r0, r8
   14ff8:	mov	r3, #1
   14ffc:	ldr	r2, [pc, #196]	; 150c8 <__flatcc_fb_init_output_c@@Base+0x1bc>
   15000:	bl	29f74 <__flatcc_fb_create_join_path@@Base>
   15004:	subs	r5, r0, #0
   15008:	beq	150c0 <__flatcc_fb_init_output_c@@Base+0x1b4>
   1500c:	mov	r1, r9
   15010:	bl	13ec4 <fopen@plt>
   15014:	cmp	r0, #0
   15018:	str	r0, [r6, #204]	; 0xcc
   1501c:	beq	15088 <__flatcc_fb_init_output_c@@Base+0x17c>
   15020:	mov	r0, r5
   15024:	bl	13ed0 <free@plt>
   15028:	mov	r0, r4
   1502c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15030:	add	r1, sl, #1
   15034:	mov	r2, #95	; 0x5f
   15038:	mov	r3, #0
   1503c:	strb	r2, [r6, sl]
   15040:	strb	r3, [r6, r1]
   15044:	b	14f8c <__flatcc_fb_init_output_c@@Base+0x80>
   15048:	ldr	r3, [pc, #128]	; 150d0 <__flatcc_fb_init_output_c@@Base+0x1c4>
   1504c:	mov	r4, r2
   15050:	mov	r0, r4
   15054:	ldr	r3, [r3]
   15058:	str	r3, [r6, #204]	; 0xcc
   1505c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15060:	mov	r3, r5
   15064:	b	14fc0 <__flatcc_fb_init_output_c@@Base+0xb4>
   15068:	ldr	r1, [pc, #100]	; 150d4 <__flatcc_fb_init_output_c@@Base+0x1c8>
   1506c:	mov	r2, #100	; 0x64
   15070:	mov	r0, r6
   15074:	bl	13fa8 <strncpy@plt>
   15078:	mov	sl, #11
   1507c:	strb	r4, [r6, #100]	; 0x64
   15080:	mov	r1, #12
   15084:	b	15034 <__flatcc_fb_init_output_c@@Base+0x128>
   15088:	ldr	r3, [pc, #72]	; 150d8 <__flatcc_fb_init_output_c@@Base+0x1cc>
   1508c:	mov	r2, r5
   15090:	ldr	r1, [pc, #68]	; 150dc <__flatcc_fb_init_output_c@@Base+0x1d0>
   15094:	ldr	r0, [r3]
   15098:	bl	13f84 <fprintf@plt>
   1509c:	mvn	r4, #0
   150a0:	b	15020 <__flatcc_fb_init_output_c@@Base+0x114>
   150a4:	ldr	r3, [pc, #44]	; 150d8 <__flatcc_fb_init_output_c@@Base+0x1cc>
   150a8:	mov	r2, #100	; 0x64
   150ac:	ldr	r1, [pc, #44]	; 150e0 <__flatcc_fb_init_output_c@@Base+0x1d4>
   150b0:	ldr	r0, [r3]
   150b4:	bl	13f84 <fprintf@plt>
   150b8:	mvn	r4, #0
   150bc:	b	15028 <__flatcc_fb_init_output_c@@Base+0x11c>
   150c0:	bl	14048 <__assert_fail@plt+0x10>
   150c4:	andeq	r1, r4, r0, lsr #21
   150c8:	andeq	fp, r4, ip, lsr #24
   150cc:	andeq	r1, r4, r0, asr #20
   150d0:	andeq	sp, r6, ip, lsr #1
   150d4:	ldrdeq	r1, [r4], -ip
   150d8:	andeq	sp, r6, r8, lsr #1
   150dc:	andeq	r1, r4, ip, ror sl
   150e0:	andeq	r1, r4, r4, lsr #21

000150e4 <__flatcc_fb_gen_c_includes@@Base>:
   150e4:	ldr	ip, [r0, #208]	; 0xd0
   150e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150ec:	sub	sp, sp, #28
   150f0:	mov	r3, #0
   150f4:	mov	r7, r0
   150f8:	ldr	r0, [ip, #164]	; 0xa4
   150fc:	ldr	r5, [ip]
   15100:	mov	sl, r1
   15104:	mov	fp, r2
   15108:	str	r3, [sp, #12]
   1510c:	str	r3, [sp, #8]
   15110:	str	r3, [sp, #16]
   15114:	str	r3, [sp, #20]
   15118:	bl	29dac <__flatcc_fb_copy_path@@Base>
   1511c:	mov	r2, #1
   15120:	mov	r1, r0
   15124:	add	r0, sp, #8
   15128:	bl	26d94 <str_set_insert_item@@Base>
   1512c:	cmp	r5, #0
   15130:	beq	151c0 <__flatcc_fb_gen_c_includes@@Base+0xdc>
   15134:	mov	r8, #1
   15138:	ldr	r3, [r7, #212]	; 0xd4
   1513c:	ldr	r1, [r5, #12]
   15140:	ldr	r0, [r5, #8]
   15144:	ldr	r2, [r3, #96]	; 0x60
   15148:	bl	2a3b4 <__flatcc_fb_create_basename@@Base>
   1514c:	subs	r6, r0, #0
   15150:	beq	15204 <__flatcc_fb_gen_c_includes@@Base+0x120>
   15154:	ldr	r5, [r5]
   15158:	bl	29dac <__flatcc_fb_copy_path@@Base>
   1515c:	subs	r9, r0, #0
   15160:	beq	15204 <__flatcc_fb_gen_c_includes@@Base+0x120>
   15164:	ldrb	r4, [r9]
   15168:	cmp	r4, #0
   1516c:	beq	15190 <__flatcc_fb_gen_c_includes@@Base+0xac>
   15170:	bl	13f54 <__ctype_toupper_loc@plt>
   15174:	mov	r2, r9
   15178:	ldr	r1, [r0]
   1517c:	ldr	r1, [r1, r4, lsl #2]
   15180:	strb	r1, [r2]
   15184:	ldrb	r4, [r2, #1]!
   15188:	cmp	r4, #0
   1518c:	bne	15178 <__flatcc_fb_gen_c_includes@@Base+0x94>
   15190:	mov	r2, r8
   15194:	mov	r1, r9
   15198:	add	r0, sp, #8
   1519c:	bl	26d94 <str_set_insert_item@@Base>
   151a0:	cmp	r0, #0
   151a4:	beq	151d8 <__flatcc_fb_gen_c_includes@@Base+0xf4>
   151a8:	mov	r0, r9
   151ac:	bl	13ed0 <free@plt>
   151b0:	mov	r0, r6
   151b4:	bl	13ed0 <free@plt>
   151b8:	cmp	r5, #0
   151bc:	bne	15138 <__flatcc_fb_gen_c_includes@@Base+0x54>
   151c0:	add	r0, sp, #8
   151c4:	mov	r2, #0
   151c8:	ldr	r1, [pc, #56]	; 15208 <__flatcc_fb_gen_c_includes@@Base+0x124>
   151cc:	bl	26cb0 <str_set_destroy@@Base>
   151d0:	add	sp, sp, #28
   151d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151d8:	ldr	r0, [r7, #204]	; 0xcc
   151dc:	mov	r2, r9
   151e0:	mov	r3, fp
   151e4:	ldr	r1, [pc, #32]	; 1520c <__flatcc_fb_gen_c_includes@@Base+0x128>
   151e8:	stm	sp, {r6, sl}
   151ec:	bl	13f84 <fprintf@plt>
   151f0:	mov	r0, r6
   151f4:	bl	13ed0 <free@plt>
   151f8:	cmp	r5, #0
   151fc:	bne	15138 <__flatcc_fb_gen_c_includes@@Base+0x54>
   15200:	b	151c0 <__flatcc_fb_gen_c_includes@@Base+0xdc>
   15204:	bl	14048 <__assert_fail@plt+0x10>
   15208:			; <UNDEFINED> instruction: 0x00014db4
   1520c:	andeq	r1, r4, r8, ror #21

00015210 <__flatcc_fb_copy_scope@@Base>:
   15210:	ldr	r3, [r0]
   15214:	push	{r4, r5, r6, r7, r8, lr}
   15218:	cmp	r3, #0
   1521c:	ldr	r6, [r0, #24]
   15220:	mov	ip, r6
   15224:	beq	15244 <__flatcc_fb_copy_scope@@Base+0x34>
   15228:	ldr	r2, [r3, #4]
   1522c:	ldr	r3, [r3]
   15230:	ldr	r2, [r2, #4]
   15234:	cmp	r3, #0
   15238:	add	r2, r2, #1
   1523c:	add	ip, ip, r2
   15240:	bne	15228 <__flatcc_fb_copy_scope@@Base+0x18>
   15244:	cmp	ip, #101	; 0x65
   15248:	bhi	152b0 <__flatcc_fb_copy_scope@@Base+0xa0>
   1524c:	mov	r7, r1
   15250:	mov	r4, r0
   15254:	ldr	r1, [r0, #20]
   15258:	mov	r2, r6
   1525c:	mov	r0, r7
   15260:	bl	13edc <memcpy@plt>
   15264:	ldr	r5, [r4]
   15268:	cmp	r5, #0
   1526c:	beq	152a0 <__flatcc_fb_copy_scope@@Base+0x90>
   15270:	mov	r8, #95	; 0x5f
   15274:	ldr	r3, [r5, #4]
   15278:	add	r0, r7, r6
   1527c:	ldm	r3, {r1, r4}
   15280:	mov	r2, r4
   15284:	add	r4, r4, r6
   15288:	bl	13edc <memcpy@plt>
   1528c:	strb	r8, [r7, r4]
   15290:	ldr	r5, [r5]
   15294:	add	r6, r4, #1
   15298:	cmp	r5, #0
   1529c:	bne	15274 <__flatcc_fb_copy_scope@@Base+0x64>
   152a0:	mov	r3, #0
   152a4:	mov	r0, r6
   152a8:	strb	r3, [r7, r6]
   152ac:	pop	{r4, r5, r6, r7, r8, pc}
   152b0:	mov	r3, #0
   152b4:	strb	r3, [r1]
   152b8:	mvn	r0, #0
   152bc:	pop	{r4, r5, r6, r7, r8, pc}

000152c0 <__flatcc_fb_scoped_symbol_name@@Base>:
   152c0:	ldr	r3, [r2, #204]	; 0xcc
   152c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   152c8:	cmp	r3, r0
   152cc:	mov	r6, r2
   152d0:	ldr	r7, [r1, #4]
   152d4:	beq	153fc <__flatcc_fb_scoped_symbol_name@@Base+0x13c>
   152d8:	ldr	r3, [r0]
   152dc:	ldr	r8, [r0, #24]
   152e0:	cmp	r3, #0
   152e4:	mov	r4, r0
   152e8:	mov	r1, r8
   152ec:	beq	1530c <__flatcc_fb_scoped_symbol_name@@Base+0x4c>
   152f0:	ldr	r2, [r3, #4]
   152f4:	ldr	r3, [r3]
   152f8:	ldr	r2, [r2, #4]
   152fc:	cmp	r3, #0
   15300:	add	r2, r2, #1
   15304:	add	r1, r1, r2
   15308:	bne	152f0 <__flatcc_fb_scoped_symbol_name@@Base+0x30>
   1530c:	cmp	r1, #101	; 0x65
   15310:	movhi	r3, #0
   15314:	strbhi	r3, [r6]
   15318:	bhi	153dc <__flatcc_fb_scoped_symbol_name@@Base+0x11c>
   1531c:	mov	r2, r8
   15320:	ldr	r1, [r4, #20]
   15324:	mov	r0, r6
   15328:	bl	13edc <memcpy@plt>
   1532c:	ldr	r5, [r4]
   15330:	cmp	r5, #0
   15334:	beq	15368 <__flatcc_fb_scoped_symbol_name@@Base+0xa8>
   15338:	mov	r9, #95	; 0x5f
   1533c:	ldr	r3, [r5, #4]
   15340:	add	r0, r6, r8
   15344:	ldm	r3, {r1, r4}
   15348:	mov	r2, r4
   1534c:	add	r4, r4, r8
   15350:	bl	13edc <memcpy@plt>
   15354:	strb	r9, [r6, r4]
   15358:	ldr	r5, [r5]
   1535c:	add	r8, r4, #1
   15360:	cmp	r5, #0
   15364:	bne	1533c <__flatcc_fb_scoped_symbol_name@@Base+0x7c>
   15368:	mov	r3, #0
   1536c:	cmp	r8, r3
   15370:	strb	r3, [r6, r8]
   15374:	mov	r0, r8
   15378:	str	r8, [r6, #208]	; 0xd0
   1537c:	blt	153dc <__flatcc_fb_scoped_symbol_name@@Base+0x11c>
   15380:	ldr	r2, [r7, #4]
   15384:	add	r3, r2, r0
   15388:	cmp	r3, #203	; 0xcb
   1538c:	str	r2, [r6, #212]	; 0xd4
   15390:	str	r3, [r6, #216]	; 0xd8
   15394:	ble	153c0 <__flatcc_fb_scoped_symbol_name@@Base+0x100>
   15398:	ldr	r1, [pc, #100]	; 15404 <__flatcc_fb_scoped_symbol_name@@Base+0x144>
   1539c:	ldr	r3, [r7]
   153a0:	ldr	r0, [r1]
   153a4:	ldr	r1, [pc, #92]	; 15408 <__flatcc_fb_scoped_symbol_name@@Base+0x148>
   153a8:	bl	13f84 <fprintf@plt>
   153ac:	ldr	r0, [r6, #208]	; 0xd0
   153b0:	mov	r3, #203	; 0xcb
   153b4:	sub	r2, r3, r0
   153b8:	str	r2, [r6, #212]	; 0xd4
   153bc:	str	r3, [r6, #216]	; 0xd8
   153c0:	ldr	r1, [r7]
   153c4:	add	r0, r6, r0
   153c8:	bl	13edc <memcpy@plt>
   153cc:	ldr	r3, [r6, #216]	; 0xd8
   153d0:	mov	r2, #0
   153d4:	strb	r2, [r6, r3]
   153d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   153dc:	ldr	r3, [pc, #32]	; 15404 <__flatcc_fb_scoped_symbol_name@@Base+0x144>
   153e0:	mov	r2, #0
   153e4:	str	r2, [r6, #208]	; 0xd0
   153e8:	ldr	r3, [r3]
   153ec:	mov	r2, #28
   153f0:	mov	r1, #1
   153f4:	ldr	r0, [pc, #16]	; 1540c <__flatcc_fb_scoped_symbol_name@@Base+0x14c>
   153f8:	bl	13f18 <fwrite@plt>
   153fc:	ldr	r0, [r6, #208]	; 0xd0
   15400:	b	15380 <__flatcc_fb_scoped_symbol_name@@Base+0xc0>
   15404:	andeq	sp, r6, r8, lsr #1
   15408:	andeq	r1, r4, r0, lsr fp
   1540c:	andeq	r1, r4, r0, lsl fp

00015410 <__flatcc_fb_codegen_common_c@@Base>:
   15410:	push	{r4, r5, r6, r7, lr}
   15414:	sub	sp, sp, #12
   15418:	mov	r4, r0
   1541c:	bl	13f78 <strlen@plt>
   15420:	ldr	r3, [r4, #212]	; 0xd4
   15424:	ldr	r2, [r3, #144]	; 0x90
   15428:	cmp	r2, #0
   1542c:	sub	r6, r0, #1
   15430:	bne	154a8 <__flatcc_fb_codegen_common_c@@Base+0x98>
   15434:	ldr	r2, [r3, #148]	; 0x94
   15438:	cmp	r2, #0
   1543c:	bne	15450 <__flatcc_fb_codegen_common_c@@Base+0x40>
   15440:	mov	r5, #0
   15444:	mov	r0, r5
   15448:	add	sp, sp, #12
   1544c:	pop	{r4, r5, r6, r7, pc}
   15450:	ldr	r5, [r3, #216]	; 0xd8
   15454:	subs	r0, r5, #0
   15458:	beq	154f0 <__flatcc_fb_codegen_common_c@@Base+0xe0>
   1545c:	bl	13f78 <strlen@plt>
   15460:	ldr	r3, [r4, #204]	; 0xcc
   15464:	cmp	r3, #0
   15468:	beq	1556c <__flatcc_fb_codegen_common_c@@Base+0x15c>
   1546c:	mov	r0, r4
   15470:	bl	1c868 <__flatcc_fb_gen_common_c_builder_header@@Base>
   15474:	ldr	r3, [r4, #212]	; 0xd4
   15478:	ldr	r2, [r3, #124]	; 0x7c
   1547c:	cmp	r2, #0
   15480:	bne	15440 <__flatcc_fb_codegen_common_c@@Base+0x30>
   15484:	ldr	r5, [r3, #108]	; 0x6c
   15488:	cmp	r5, #0
   1548c:	bne	15440 <__flatcc_fb_codegen_common_c@@Base+0x30>
   15490:	ldr	r0, [r4, #204]	; 0xcc
   15494:	cmp	r0, #0
   15498:	beq	15440 <__flatcc_fb_codegen_common_c@@Base+0x30>
   1549c:	bl	13fcc <fclose@plt>
   154a0:	str	r5, [r4, #204]	; 0xcc
   154a4:	b	15444 <__flatcc_fb_codegen_common_c@@Base+0x34>
   154a8:	ldr	r5, [r3, #216]	; 0xd8
   154ac:	subs	r0, r5, #0
   154b0:	beq	154f8 <__flatcc_fb_codegen_common_c@@Base+0xe8>
   154b4:	bl	13f78 <strlen@plt>
   154b8:	ldr	r3, [r4, #204]	; 0xcc
   154bc:	cmp	r3, #0
   154c0:	beq	15524 <__flatcc_fb_codegen_common_c@@Base+0x114>
   154c4:	mov	r0, r4
   154c8:	bl	188d4 <__flatcc_fb_gen_common_c_header@@Base>
   154cc:	ldr	r3, [r4, #212]	; 0xd4
   154d0:	ldr	r2, [r3, #124]	; 0x7c
   154d4:	cmp	r2, #0
   154d8:	mov	r5, r0
   154dc:	beq	15500 <__flatcc_fb_codegen_common_c@@Base+0xf0>
   154e0:	cmp	r5, #0
   154e4:	bne	15444 <__flatcc_fb_codegen_common_c@@Base+0x34>
   154e8:	ldr	r3, [r4, #212]	; 0xd4
   154ec:	b	15434 <__flatcc_fb_codegen_common_c@@Base+0x24>
   154f0:	ldr	r5, [pc, #232]	; 155e0 <__flatcc_fb_codegen_common_c@@Base+0x1d0>
   154f4:	b	15460 <__flatcc_fb_codegen_common_c@@Base+0x50>
   154f8:	ldr	r5, [pc, #224]	; 155e0 <__flatcc_fb_codegen_common_c@@Base+0x1d0>
   154fc:	b	154b8 <__flatcc_fb_codegen_common_c@@Base+0xa8>
   15500:	ldr	r7, [r3, #108]	; 0x6c
   15504:	cmp	r7, #0
   15508:	bne	154e0 <__flatcc_fb_codegen_common_c@@Base+0xd0>
   1550c:	ldr	r0, [r4, #204]	; 0xcc
   15510:	cmp	r0, #0
   15514:	beq	154e0 <__flatcc_fb_codegen_common_c@@Base+0xd0>
   15518:	bl	13fcc <fclose@plt>
   1551c:	str	r7, [r4, #204]	; 0xcc
   15520:	b	154e0 <__flatcc_fb_codegen_common_c@@Base+0xd0>
   15524:	ldr	r2, [pc, #184]	; 155e4 <__flatcc_fb_codegen_common_c@@Base+0x1d4>
   15528:	mov	r3, #1
   1552c:	mov	r1, r0
   15530:	stm	sp, {r2, r3}
   15534:	mov	r0, r5
   15538:	mov	r3, r6
   1553c:	mov	r2, r4
   15540:	bl	29e30 <__flatcc_fb_create_join_path_n@@Base>
   15544:	subs	r5, r0, #0
   15548:	beq	155dc <__flatcc_fb_codegen_common_c@@Base+0x1cc>
   1554c:	ldr	r1, [pc, #148]	; 155e8 <__flatcc_fb_codegen_common_c@@Base+0x1d8>
   15550:	bl	13ec4 <fopen@plt>
   15554:	cmp	r0, #0
   15558:	str	r0, [r4, #204]	; 0xcc
   1555c:	beq	155b8 <__flatcc_fb_codegen_common_c@@Base+0x1a8>
   15560:	mov	r0, r5
   15564:	bl	13ed0 <free@plt>
   15568:	b	154c4 <__flatcc_fb_codegen_common_c@@Base+0xb4>
   1556c:	ldr	ip, [pc, #120]	; 155ec <__flatcc_fb_codegen_common_c@@Base+0x1dc>
   15570:	mov	r2, #1
   15574:	mov	r1, r0
   15578:	str	r2, [sp, #4]
   1557c:	mov	r0, r5
   15580:	mov	r3, r6
   15584:	str	ip, [sp]
   15588:	mov	r2, r4
   1558c:	bl	29e30 <__flatcc_fb_create_join_path_n@@Base>
   15590:	subs	r5, r0, #0
   15594:	beq	155dc <__flatcc_fb_codegen_common_c@@Base+0x1cc>
   15598:	ldr	r1, [pc, #72]	; 155e8 <__flatcc_fb_codegen_common_c@@Base+0x1d8>
   1559c:	bl	13ec4 <fopen@plt>
   155a0:	cmp	r0, #0
   155a4:	str	r0, [r4, #204]	; 0xcc
   155a8:	beq	155b8 <__flatcc_fb_codegen_common_c@@Base+0x1a8>
   155ac:	mov	r0, r5
   155b0:	bl	13ed0 <free@plt>
   155b4:	b	1546c <__flatcc_fb_codegen_common_c@@Base+0x5c>
   155b8:	ldr	r3, [pc, #48]	; 155f0 <__flatcc_fb_codegen_common_c@@Base+0x1e0>
   155bc:	mov	r2, r5
   155c0:	ldr	r1, [pc, #44]	; 155f4 <__flatcc_fb_codegen_common_c@@Base+0x1e4>
   155c4:	ldr	r0, [r3]
   155c8:	bl	13f84 <fprintf@plt>
   155cc:	mov	r0, r5
   155d0:	bl	13ed0 <free@plt>
   155d4:	mvn	r5, #0
   155d8:	b	15444 <__flatcc_fb_codegen_common_c@@Base+0x34>
   155dc:	bl	14048 <__assert_fail@plt+0x10>
   155e0:	andeq	fp, r4, ip, lsr #24
   155e4:	andeq	r1, r4, r8, asr fp
   155e8:	andeq	r1, r4, r0, asr #20
   155ec:	andeq	r1, r4, ip, ror #22
   155f0:	andeq	sp, r6, r8, lsr #1
   155f4:	andeq	r1, r4, ip, ror sl

000155f8 <__flatcc_fb_codegen_c@@Base>:
   155f8:	mov	r2, #0
   155fc:	push	{r4, r5, r6, r7, lr}
   15600:	mov	r4, r0
   15604:	str	r1, [r0, #208]	; 0xd0
   15608:	sub	sp, sp, #12
   1560c:	ldr	r0, [r1, #60]	; 0x3c
   15610:	mov	r1, r2
   15614:	bl	28a80 <fb_scope_table_find@@Base>
   15618:	ldr	r3, [r4, #208]	; 0xd0
   1561c:	ldr	r5, [r3, #160]	; 0xa0
   15620:	str	r0, [r4, #216]	; 0xd8
   15624:	mov	r0, r5
   15628:	bl	13f78 <strlen@plt>
   1562c:	ldr	r3, [r4, #212]	; 0xd4
   15630:	ldr	r2, [r3, #152]	; 0x98
   15634:	cmp	r2, #0
   15638:	mov	r6, r0
   1563c:	bne	156e0 <__flatcc_fb_codegen_c@@Base+0xe8>
   15640:	ldr	r2, [r3, #156]	; 0x9c
   15644:	cmp	r2, #0
   15648:	bne	15744 <__flatcc_fb_codegen_c@@Base+0x14c>
   1564c:	ldr	r2, [r3, #160]	; 0xa0
   15650:	cmp	r2, #0
   15654:	bne	157a8 <__flatcc_fb_codegen_c@@Base+0x1b0>
   15658:	ldr	r2, [r3, #164]	; 0xa4
   1565c:	cmp	r2, #0
   15660:	bne	1580c <__flatcc_fb_codegen_c@@Base+0x214>
   15664:	ldr	r2, [r3, #168]	; 0xa8
   15668:	cmp	r2, #0
   1566c:	bne	15680 <__flatcc_fb_codegen_c@@Base+0x88>
   15670:	mov	r5, #0
   15674:	mov	r0, r5
   15678:	add	sp, sp, #12
   1567c:	pop	{r4, r5, r6, r7, pc}
   15680:	ldr	r5, [r3, #216]	; 0xd8
   15684:	subs	r0, r5, #0
   15688:	beq	15870 <__flatcc_fb_codegen_c@@Base+0x278>
   1568c:	bl	13f78 <strlen@plt>
   15690:	ldr	r3, [r4, #204]	; 0xcc
   15694:	cmp	r3, #0
   15698:	beq	15934 <__flatcc_fb_codegen_c@@Base+0x33c>
   1569c:	mov	r0, r4
   156a0:	bl	2492c <__flatcc_fb_gen_c_json_printer@@Base>
   156a4:	subs	r5, r0, #0
   156a8:	bne	15674 <__flatcc_fb_codegen_c@@Base+0x7c>
   156ac:	ldr	r3, [r4, #212]	; 0xd4
   156b0:	ldr	r2, [r3, #124]	; 0x7c
   156b4:	cmp	r2, #0
   156b8:	bne	15670 <__flatcc_fb_codegen_c@@Base+0x78>
   156bc:	ldr	r5, [r3, #108]	; 0x6c
   156c0:	cmp	r5, #0
   156c4:	bne	15670 <__flatcc_fb_codegen_c@@Base+0x78>
   156c8:	ldr	r0, [r4, #204]	; 0xcc
   156cc:	cmp	r0, #0
   156d0:	beq	15670 <__flatcc_fb_codegen_c@@Base+0x78>
   156d4:	bl	13fcc <fclose@plt>
   156d8:	str	r5, [r4, #204]	; 0xcc
   156dc:	b	15674 <__flatcc_fb_codegen_c@@Base+0x7c>
   156e0:	ldr	r7, [r3, #216]	; 0xd8
   156e4:	subs	r0, r7, #0
   156e8:	beq	15880 <__flatcc_fb_codegen_c@@Base+0x288>
   156ec:	bl	13f78 <strlen@plt>
   156f0:	ldr	r3, [r4, #204]	; 0xcc
   156f4:	cmp	r3, #0
   156f8:	beq	15890 <__flatcc_fb_codegen_c@@Base+0x298>
   156fc:	mov	r0, r4
   15700:	bl	19530 <__flatcc_fb_gen_c_reader@@Base>
   15704:	subs	r5, r0, #0
   15708:	bne	15674 <__flatcc_fb_codegen_c@@Base+0x7c>
   1570c:	ldr	r3, [r4, #212]	; 0xd4
   15710:	ldr	r2, [r3, #124]	; 0x7c
   15714:	cmp	r2, #0
   15718:	bne	15640 <__flatcc_fb_codegen_c@@Base+0x48>
   1571c:	ldr	r5, [r3, #108]	; 0x6c
   15720:	cmp	r5, #0
   15724:	bne	15640 <__flatcc_fb_codegen_c@@Base+0x48>
   15728:	ldr	r0, [r4, #204]	; 0xcc
   1572c:	cmp	r0, #0
   15730:	beq	15640 <__flatcc_fb_codegen_c@@Base+0x48>
   15734:	bl	13fcc <fclose@plt>
   15738:	ldr	r3, [r4, #212]	; 0xd4
   1573c:	str	r5, [r4, #204]	; 0xcc
   15740:	b	15640 <__flatcc_fb_codegen_c@@Base+0x48>
   15744:	ldr	r5, [r3, #216]	; 0xd8
   15748:	subs	r0, r5, #0
   1574c:	beq	15888 <__flatcc_fb_codegen_c@@Base+0x290>
   15750:	bl	13f78 <strlen@plt>
   15754:	ldr	r3, [r4, #204]	; 0xcc
   15758:	cmp	r3, #0
   1575c:	beq	158e4 <__flatcc_fb_codegen_c@@Base+0x2ec>
   15760:	mov	r0, r4
   15764:	bl	1d124 <__flatcc_fb_gen_c_builder@@Base>
   15768:	subs	r5, r0, #0
   1576c:	bne	15674 <__flatcc_fb_codegen_c@@Base+0x7c>
   15770:	ldr	r3, [r4, #212]	; 0xd4
   15774:	ldr	r2, [r3, #124]	; 0x7c
   15778:	cmp	r2, #0
   1577c:	bne	1564c <__flatcc_fb_codegen_c@@Base+0x54>
   15780:	ldr	r5, [r3, #108]	; 0x6c
   15784:	cmp	r5, #0
   15788:	bne	1564c <__flatcc_fb_codegen_c@@Base+0x54>
   1578c:	ldr	r0, [r4, #204]	; 0xcc
   15790:	cmp	r0, #0
   15794:	beq	1564c <__flatcc_fb_codegen_c@@Base+0x54>
   15798:	bl	13fcc <fclose@plt>
   1579c:	ldr	r3, [r4, #212]	; 0xd4
   157a0:	str	r5, [r4, #204]	; 0xcc
   157a4:	b	1564c <__flatcc_fb_codegen_c@@Base+0x54>
   157a8:	ldr	r5, [r3, #216]	; 0xd8
   157ac:	subs	r0, r5, #0
   157b0:	beq	15878 <__flatcc_fb_codegen_c@@Base+0x280>
   157b4:	bl	13f78 <strlen@plt>
   157b8:	ldr	r3, [r4, #204]	; 0xcc
   157bc:	cmp	r3, #0
   157c0:	beq	15984 <__flatcc_fb_codegen_c@@Base+0x38c>
   157c4:	mov	r0, r4
   157c8:	bl	1e610 <__flatcc_fb_gen_c_verifier@@Base>
   157cc:	subs	r5, r0, #0
   157d0:	bne	15674 <__flatcc_fb_codegen_c@@Base+0x7c>
   157d4:	ldr	r3, [r4, #212]	; 0xd4
   157d8:	ldr	r2, [r3, #124]	; 0x7c
   157dc:	cmp	r2, #0
   157e0:	bne	15658 <__flatcc_fb_codegen_c@@Base+0x60>
   157e4:	ldr	r5, [r3, #108]	; 0x6c
   157e8:	cmp	r5, #0
   157ec:	bne	15658 <__flatcc_fb_codegen_c@@Base+0x60>
   157f0:	ldr	r0, [r4, #204]	; 0xcc
   157f4:	cmp	r0, #0
   157f8:	beq	15658 <__flatcc_fb_codegen_c@@Base+0x60>
   157fc:	bl	13fcc <fclose@plt>
   15800:	ldr	r3, [r4, #212]	; 0xd4
   15804:	str	r5, [r4, #204]	; 0xcc
   15808:	b	15658 <__flatcc_fb_codegen_c@@Base+0x60>
   1580c:	ldr	r5, [r3, #216]	; 0xd8
   15810:	subs	r0, r5, #0
   15814:	beq	158dc <__flatcc_fb_codegen_c@@Base+0x2e4>
   15818:	bl	13f78 <strlen@plt>
   1581c:	ldr	r3, [r4, #204]	; 0xcc
   15820:	cmp	r3, #0
   15824:	beq	159d4 <__flatcc_fb_codegen_c@@Base+0x3dc>
   15828:	mov	r0, r4
   1582c:	bl	21aac <__flatcc_fb_gen_c_json_parser@@Base>
   15830:	subs	r5, r0, #0
   15834:	bne	15674 <__flatcc_fb_codegen_c@@Base+0x7c>
   15838:	ldr	r3, [r4, #212]	; 0xd4
   1583c:	ldr	r2, [r3, #124]	; 0x7c
   15840:	cmp	r2, #0
   15844:	bne	15664 <__flatcc_fb_codegen_c@@Base+0x6c>
   15848:	ldr	r5, [r3, #108]	; 0x6c
   1584c:	cmp	r5, #0
   15850:	bne	15664 <__flatcc_fb_codegen_c@@Base+0x6c>
   15854:	ldr	r0, [r4, #204]	; 0xcc
   15858:	cmp	r0, #0
   1585c:	beq	15664 <__flatcc_fb_codegen_c@@Base+0x6c>
   15860:	bl	13fcc <fclose@plt>
   15864:	ldr	r3, [r4, #212]	; 0xd4
   15868:	str	r5, [r4, #204]	; 0xcc
   1586c:	b	15664 <__flatcc_fb_codegen_c@@Base+0x6c>
   15870:	ldr	r5, [pc, #468]	; 15a4c <__flatcc_fb_codegen_c@@Base+0x454>
   15874:	b	15690 <__flatcc_fb_codegen_c@@Base+0x98>
   15878:	ldr	r5, [pc, #460]	; 15a4c <__flatcc_fb_codegen_c@@Base+0x454>
   1587c:	b	157b8 <__flatcc_fb_codegen_c@@Base+0x1c0>
   15880:	ldr	r7, [pc, #452]	; 15a4c <__flatcc_fb_codegen_c@@Base+0x454>
   15884:	b	156f0 <__flatcc_fb_codegen_c@@Base+0xf8>
   15888:	ldr	r5, [pc, #444]	; 15a4c <__flatcc_fb_codegen_c@@Base+0x454>
   1588c:	b	15754 <__flatcc_fb_codegen_c@@Base+0x15c>
   15890:	ldr	ip, [pc, #440]	; 15a50 <__flatcc_fb_codegen_c@@Base+0x458>
   15894:	mov	r3, #1
   15898:	mov	r2, r5
   1589c:	mov	r1, r0
   158a0:	str	r3, [sp, #4]
   158a4:	mov	r0, r7
   158a8:	str	ip, [sp]
   158ac:	mov	r3, r6
   158b0:	bl	29e30 <__flatcc_fb_create_join_path_n@@Base>
   158b4:	subs	r5, r0, #0
   158b8:	beq	15a48 <__flatcc_fb_codegen_c@@Base+0x450>
   158bc:	ldr	r1, [pc, #400]	; 15a54 <__flatcc_fb_codegen_c@@Base+0x45c>
   158c0:	bl	13ec4 <fopen@plt>
   158c4:	cmp	r0, #0
   158c8:	str	r0, [r4, #204]	; 0xcc
   158cc:	beq	15a24 <__flatcc_fb_codegen_c@@Base+0x42c>
   158d0:	mov	r0, r5
   158d4:	bl	13ed0 <free@plt>
   158d8:	b	156fc <__flatcc_fb_codegen_c@@Base+0x104>
   158dc:	ldr	r5, [pc, #360]	; 15a4c <__flatcc_fb_codegen_c@@Base+0x454>
   158e0:	b	1581c <__flatcc_fb_codegen_c@@Base+0x224>
   158e4:	ldr	r2, [r4, #208]	; 0xd0
   158e8:	ldr	ip, [pc, #360]	; 15a58 <__flatcc_fb_codegen_c@@Base+0x460>
   158ec:	mov	r3, #1
   158f0:	ldr	r2, [r2, #160]	; 0xa0
   158f4:	mov	r1, r0
   158f8:	str	r3, [sp, #4]
   158fc:	mov	r0, r5
   15900:	str	ip, [sp]
   15904:	mov	r3, r6
   15908:	bl	29e30 <__flatcc_fb_create_join_path_n@@Base>
   1590c:	subs	r5, r0, #0
   15910:	beq	15a48 <__flatcc_fb_codegen_c@@Base+0x450>
   15914:	ldr	r1, [pc, #312]	; 15a54 <__flatcc_fb_codegen_c@@Base+0x45c>
   15918:	bl	13ec4 <fopen@plt>
   1591c:	cmp	r0, #0
   15920:	str	r0, [r4, #204]	; 0xcc
   15924:	beq	15a24 <__flatcc_fb_codegen_c@@Base+0x42c>
   15928:	mov	r0, r5
   1592c:	bl	13ed0 <free@plt>
   15930:	b	15760 <__flatcc_fb_codegen_c@@Base+0x168>
   15934:	ldr	r3, [r4, #208]	; 0xd0
   15938:	ldr	lr, [pc, #284]	; 15a5c <__flatcc_fb_codegen_c@@Base+0x464>
   1593c:	mov	ip, #1
   15940:	ldr	r2, [r3, #160]	; 0xa0
   15944:	mov	r1, r0
   15948:	mov	r3, r6
   1594c:	mov	r0, r5
   15950:	str	lr, [sp]
   15954:	str	ip, [sp, #4]
   15958:	bl	29e30 <__flatcc_fb_create_join_path_n@@Base>
   1595c:	subs	r5, r0, #0
   15960:	beq	15a48 <__flatcc_fb_codegen_c@@Base+0x450>
   15964:	ldr	r1, [pc, #232]	; 15a54 <__flatcc_fb_codegen_c@@Base+0x45c>
   15968:	bl	13ec4 <fopen@plt>
   1596c:	cmp	r0, #0
   15970:	str	r0, [r4, #204]	; 0xcc
   15974:	beq	15a24 <__flatcc_fb_codegen_c@@Base+0x42c>
   15978:	mov	r0, r5
   1597c:	bl	13ed0 <free@plt>
   15980:	b	1569c <__flatcc_fb_codegen_c@@Base+0xa4>
   15984:	ldr	r2, [r4, #208]	; 0xd0
   15988:	ldr	ip, [pc, #208]	; 15a60 <__flatcc_fb_codegen_c@@Base+0x468>
   1598c:	mov	r3, #1
   15990:	ldr	r2, [r2, #160]	; 0xa0
   15994:	mov	r1, r0
   15998:	str	r3, [sp, #4]
   1599c:	mov	r0, r5
   159a0:	str	ip, [sp]
   159a4:	mov	r3, r6
   159a8:	bl	29e30 <__flatcc_fb_create_join_path_n@@Base>
   159ac:	subs	r5, r0, #0
   159b0:	beq	15a48 <__flatcc_fb_codegen_c@@Base+0x450>
   159b4:	ldr	r1, [pc, #152]	; 15a54 <__flatcc_fb_codegen_c@@Base+0x45c>
   159b8:	bl	13ec4 <fopen@plt>
   159bc:	cmp	r0, #0
   159c0:	str	r0, [r4, #204]	; 0xcc
   159c4:	beq	15a24 <__flatcc_fb_codegen_c@@Base+0x42c>
   159c8:	mov	r0, r5
   159cc:	bl	13ed0 <free@plt>
   159d0:	b	157c4 <__flatcc_fb_codegen_c@@Base+0x1cc>
   159d4:	ldr	r2, [r4, #208]	; 0xd0
   159d8:	ldr	ip, [pc, #132]	; 15a64 <__flatcc_fb_codegen_c@@Base+0x46c>
   159dc:	mov	r3, #1
   159e0:	ldr	r2, [r2, #160]	; 0xa0
   159e4:	mov	r1, r0
   159e8:	str	r3, [sp, #4]
   159ec:	mov	r0, r5
   159f0:	str	ip, [sp]
   159f4:	mov	r3, r6
   159f8:	bl	29e30 <__flatcc_fb_create_join_path_n@@Base>
   159fc:	subs	r5, r0, #0
   15a00:	beq	15a48 <__flatcc_fb_codegen_c@@Base+0x450>
   15a04:	ldr	r1, [pc, #72]	; 15a54 <__flatcc_fb_codegen_c@@Base+0x45c>
   15a08:	bl	13ec4 <fopen@plt>
   15a0c:	cmp	r0, #0
   15a10:	str	r0, [r4, #204]	; 0xcc
   15a14:	beq	15a24 <__flatcc_fb_codegen_c@@Base+0x42c>
   15a18:	mov	r0, r5
   15a1c:	bl	13ed0 <free@plt>
   15a20:	b	15828 <__flatcc_fb_codegen_c@@Base+0x230>
   15a24:	ldr	r3, [pc, #60]	; 15a68 <__flatcc_fb_codegen_c@@Base+0x470>
   15a28:	mov	r2, r5
   15a2c:	ldr	r1, [pc, #56]	; 15a6c <__flatcc_fb_codegen_c@@Base+0x474>
   15a30:	ldr	r0, [r3]
   15a34:	bl	13f84 <fprintf@plt>
   15a38:	mov	r0, r5
   15a3c:	bl	13ed0 <free@plt>
   15a40:	mvn	r5, #0
   15a44:	b	15674 <__flatcc_fb_codegen_c@@Base+0x7c>
   15a48:	bl	14048 <__assert_fail@plt+0x10>
   15a4c:	andeq	fp, r4, ip, lsr #24
   15a50:			; <UNDEFINED> instruction: 0x000583bc
   15a54:	andeq	r1, r4, r0, asr #20
   15a58:	andeq	r8, r5, r4, asr #8
   15a5c:	muleq	r4, ip, fp
   15a60:	andeq	r1, r4, r0, lsl #23
   15a64:	andeq	r1, r4, ip, lsl #23
   15a68:	andeq	sp, r6, r8, lsr #1
   15a6c:	andeq	r1, r4, ip, ror sl
   15a70:	push	{r4, r5, lr}
   15a74:	mov	r4, r1
   15a78:	sub	sp, sp, #228	; 0xe4
   15a7c:	mov	r5, r0
   15a80:	mov	r2, #220	; 0xdc
   15a84:	add	r0, sp, #4
   15a88:	mov	r1, #0
   15a8c:	bl	13f9c <memset@plt>
   15a90:	ldrh	r3, [r4, #8]
   15a94:	cmp	r3, #1
   15a98:	bhi	15b88 <__flatcc_fb_codegen_c@@Base+0x590>
   15a9c:	add	r2, sp, #4
   15aa0:	mov	r1, r4
   15aa4:	ldr	r0, [r4, #12]
   15aa8:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   15aac:	ldrh	r3, [r4, #8]
   15ab0:	cmp	r3, #1
   15ab4:	beq	15afc <__flatcc_fb_codegen_c@@Base+0x504>
   15ab8:	add	r3, sp, #4
   15abc:	mov	r2, r3
   15ac0:	ldr	r1, [pc, #212]	; 15b9c <__flatcc_fb_codegen_c@@Base+0x5a4>
   15ac4:	ldr	r0, [r5, #204]	; 0xcc
   15ac8:	bl	13f84 <fprintf@plt>
   15acc:	add	r3, sp, #4
   15ad0:	mov	r2, r5
   15ad4:	ldr	r1, [pc, #196]	; 15ba0 <__flatcc_fb_codegen_c@@Base+0x5a8>
   15ad8:	ldr	r0, [r5, #204]	; 0xcc
   15adc:	bl	13f84 <fprintf@plt>
   15ae0:	add	r3, sp, #4
   15ae4:	mov	r2, r5
   15ae8:	ldr	r0, [r5, #204]	; 0xcc
   15aec:	ldr	r1, [pc, #176]	; 15ba4 <__flatcc_fb_codegen_c@@Base+0x5ac>
   15af0:	bl	13f84 <fprintf@plt>
   15af4:	add	sp, sp, #228	; 0xe4
   15af8:	pop	{r4, r5, pc}
   15afc:	ldrd	r2, [r4, #112]	; 0x70
   15b00:	orrs	r3, r2, r3
   15b04:	bne	15b70 <__flatcc_fb_codegen_c@@Base+0x578>
   15b08:	add	r2, sp, #4
   15b0c:	ldr	r1, [pc, #148]	; 15ba8 <__flatcc_fb_codegen_c@@Base+0x5b0>
   15b10:	ldr	r0, [r5, #204]	; 0xcc
   15b14:	bl	13f84 <fprintf@plt>
   15b18:	add	r3, sp, #4
   15b1c:	mov	r2, r3
   15b20:	ldr	r1, [pc, #132]	; 15bac <__flatcc_fb_codegen_c@@Base+0x5b4>
   15b24:	ldr	r0, [r5, #204]	; 0xcc
   15b28:	bl	13f84 <fprintf@plt>
   15b2c:	add	r3, sp, #4
   15b30:	mov	r2, r3
   15b34:	ldr	r1, [pc, #116]	; 15bb0 <__flatcc_fb_codegen_c@@Base+0x5b8>
   15b38:	ldr	r0, [r5, #204]	; 0xcc
   15b3c:	bl	13f84 <fprintf@plt>
   15b40:	add	r3, sp, #4
   15b44:	mov	r2, r3
   15b48:	ldr	r1, [pc, #100]	; 15bb4 <__flatcc_fb_codegen_c@@Base+0x5bc>
   15b4c:	ldr	r0, [r5, #204]	; 0xcc
   15b50:	bl	13f84 <fprintf@plt>
   15b54:	add	r3, sp, #4
   15b58:	mov	r2, r3
   15b5c:	ldr	r0, [r5, #204]	; 0xcc
   15b60:	ldr	r1, [pc, #80]	; 15bb8 <__flatcc_fb_codegen_c@@Base+0x5c0>
   15b64:	bl	13f84 <fprintf@plt>
   15b68:	add	sp, sp, #228	; 0xe4
   15b6c:	pop	{r4, r5, pc}
   15b70:	add	r3, sp, #4
   15b74:	mov	r2, r3
   15b78:	ldr	r1, [pc, #60]	; 15bbc <__flatcc_fb_codegen_c@@Base+0x5c4>
   15b7c:	ldr	r0, [r5, #204]	; 0xcc
   15b80:	bl	13f84 <fprintf@plt>
   15b84:	b	15b18 <__flatcc_fb_codegen_c@@Base+0x520>
   15b88:	ldr	r3, [pc, #48]	; 15bc0 <__flatcc_fb_codegen_c@@Base+0x5c8>
   15b8c:	ldr	r2, [pc, #48]	; 15bc4 <__flatcc_fb_codegen_c@@Base+0x5cc>
   15b90:	ldr	r1, [pc, #48]	; 15bc8 <__flatcc_fb_codegen_c@@Base+0x5d0>
   15b94:	ldr	r0, [pc, #48]	; 15bcc <__flatcc_fb_codegen_c@@Base+0x5d4>
   15b98:	bl	14038 <__assert_fail@plt>
   15b9c:	ldrdeq	r1, [r4], -r0
   15ba0:	strdeq	r1, [r4], -ip
   15ba4:	andeq	r1, r4, r4, lsr #28
   15ba8:	andeq	r1, r4, r0, lsl #26
   15bac:	andeq	r1, r4, r4, asr #26
   15bb0:	andeq	r1, r4, r8, ror #26
   15bb4:	andeq	r1, r4, ip, lsl #27
   15bb8:	andeq	r1, r4, ip, lsr #27
   15bbc:	andeq	r1, r4, r8, lsr #26
   15bc0:	andeq	r1, r4, ip, lsr #23
   15bc4:	andeq	r0, r0, pc, asr r3
   15bc8:	andeq	r1, r4, ip, ror #24
   15bcc:			; <UNDEFINED> instruction: 0x00041cbc
   15bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bd4:	sub	sp, sp, #364	; 0x16c
   15bd8:	mov	fp, r1
   15bdc:	add	r8, sp, #140	; 0x8c
   15be0:	mov	r4, r0
   15be4:	mov	r2, #220	; 0xdc
   15be8:	mov	r0, r8
   15bec:	mov	r1, #0
   15bf0:	bl	13f9c <memset@plt>
   15bf4:	ldrh	r3, [fp, #8]
   15bf8:	str	r3, [sp, #28]
   15bfc:	sub	r3, r3, #3
   15c00:	cmp	r3, #1
   15c04:	bhi	164f0 <__flatcc_fb_codegen_c@@Base+0xef8>
   15c08:	ldrh	r3, [fp, #48]	; 0x30
   15c0c:	cmp	r3, #8
   15c10:	bne	164dc <__flatcc_fb_codegen_c@@Base+0xee4>
   15c14:	ldr	r3, [fp, #40]	; 0x28
   15c18:	cmp	r3, #5
   15c1c:	beq	15c5c <__flatcc_fb_codegen_c@@Base+0x664>
   15c20:	sub	r3, r3, #1
   15c24:	cmp	r3, #10
   15c28:	ldrls	pc, [pc, r3, lsl #2]
   15c2c:	b	163a0 <__flatcc_fb_codegen_c@@Base+0xda8>
   15c30:	ldrdeq	r6, [r1], -r0
   15c34:			; <UNDEFINED> instruction: 0x000162bc
   15c38:	andeq	r6, r1, r4, ror #5
   15c3c:	andeq	r6, r1, r0, lsl #5
   15c40:	andeq	r6, r1, r0, lsr #7
   15c44:	andeq	r6, r1, r8, lsr #5
   15c48:	andeq	r6, r1, r0, lsr r2
   15c4c:	andeq	r6, r1, r4, asr #4
   15c50:	andeq	r6, r1, r8, asr r2
   15c54:	andeq	r6, r1, ip, ror #4
   15c58:	muleq	r1, r4, r2
   15c5c:	ldr	r3, [pc, #2208]	; 16504 <__flatcc_fb_codegen_c@@Base+0xf0c>
   15c60:	str	r4, [sp, #32]
   15c64:	str	r3, [sp, #24]
   15c68:	ldr	r3, [fp, #112]	; 0x70
   15c6c:	ldr	r2, [sp, #28]
   15c70:	mov	r1, fp
   15c74:	cmp	r2, #3
   15c78:	lsl	r3, r3, #3
   15c7c:	str	r3, [sp, #36]	; 0x24
   15c80:	mov	r2, r8
   15c84:	ldr	r0, [fp, #12]
   15c88:	beq	161b8 <__flatcc_fb_codegen_c@@Base+0xbc0>
   15c8c:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   15c90:	ldr	r5, [fp, #32]
   15c94:	cmp	r5, #0
   15c98:	beq	1645c <__flatcc_fb_codegen_c@@Base+0xe64>
   15c9c:	ldr	r3, [pc, #2148]	; 16508 <__flatcc_fb_codegen_c@@Base+0xf10>
   15ca0:	str	r3, [sp, #20]
   15ca4:	mov	r3, #0
   15ca8:	ldr	r9, [pc, #2140]	; 1650c <__flatcc_fb_codegen_c@@Base+0xf14>
   15cac:	ldr	sl, [pc, #2140]	; 16510 <__flatcc_fb_codegen_c@@Base+0xf18>
   15cb0:	ldr	r7, [pc, #2140]	; 16514 <__flatcc_fb_codegen_c@@Base+0xf1c>
   15cb4:	mov	r6, r3
   15cb8:	mov	r0, #1
   15cbc:	ldr	r2, [r5, #4]
   15cc0:	ldr	r1, [r2, #8]
   15cc4:	cmp	r1, r3
   15cc8:	beq	15ce8 <__flatcc_fb_codegen_c@@Base+0x6f0>
   15ccc:	cmp	r0, #0
   15cd0:	mov	r2, r9
   15cd4:	movne	r1, sl
   15cd8:	ldreq	r1, [pc, #2104]	; 16518 <__flatcc_fb_codegen_c@@Base+0xf20>
   15cdc:	ldr	r0, [r4, #204]	; 0xcc
   15ce0:	bl	13f84 <fprintf@plt>
   15ce4:	ldr	r2, [r5, #4]
   15ce8:	ldr	r3, [r2]
   15cec:	mov	r1, r7
   15cf0:	ldr	r2, [r2, #4]
   15cf4:	ldr	r0, [r4, #204]	; 0xcc
   15cf8:	bl	13f84 <fprintf@plt>
   15cfc:	ldr	r3, [r5, #4]
   15d00:	ldr	r5, [r5]
   15d04:	mov	r0, r6
   15d08:	cmp	r5, #0
   15d0c:	ldr	r3, [r3, #8]
   15d10:	bne	15cbc <__flatcc_fb_codegen_c@@Base+0x6c4>
   15d14:	ldr	r3, [r4, #204]	; 0xcc
   15d18:	mov	r2, #4
   15d1c:	mov	r1, #1
   15d20:	ldr	r0, [pc, #2036]	; 1651c <__flatcc_fb_codegen_c@@Base+0xf24>
   15d24:	bl	13f18 <fwrite@plt>
   15d28:	ldr	r5, [sp, #20]
   15d2c:	ldr	r0, [r4, #204]	; 0xcc
   15d30:	ldr	r3, [sp, #24]
   15d34:	ldr	r2, [sp, #32]
   15d38:	ldr	r1, [pc, #2016]	; 16520 <__flatcc_fb_codegen_c@@Base+0xf28>
   15d3c:	str	r5, [sp, #4]
   15d40:	str	r8, [sp]
   15d44:	bl	13f84 <fprintf@plt>
   15d48:	ldr	r3, [sp, #36]	; 0x24
   15d4c:	ldr	r0, [r4, #204]	; 0xcc
   15d50:	mov	r2, r4
   15d54:	str	r3, [sp, #8]
   15d58:	str	r5, [sp, #4]
   15d5c:	mov	r3, r8
   15d60:	str	r8, [sp]
   15d64:	ldr	r1, [pc, #1976]	; 16524 <__flatcc_fb_codegen_c@@Base+0xf2c>
   15d68:	bl	13f84 <fprintf@plt>
   15d6c:	ldr	r3, [sp, #28]
   15d70:	cmp	r3, #3
   15d74:	beq	16120 <__flatcc_fb_codegen_c@@Base+0xb28>
   15d78:	ldr	r0, [r4, #204]	; 0xcc
   15d7c:	mov	r3, r4
   15d80:	str	r8, [sp]
   15d84:	mov	r2, r4
   15d88:	ldr	r1, [pc, #1944]	; 16528 <__flatcc_fb_codegen_c@@Base+0xf30>
   15d8c:	bl	13f84 <fprintf@plt>
   15d90:	ldr	r7, [fp, #20]
   15d94:	cmp	r7, #0
   15d98:	beq	164a8 <__flatcc_fb_codegen_c@@Base+0xeb0>
   15d9c:	ldr	r6, [pc, #1896]	; 1650c <__flatcc_fb_codegen_c@@Base+0xf14>
   15da0:	ldr	r5, [pc, #1900]	; 16514 <__flatcc_fb_codegen_c@@Base+0xf1c>
   15da4:	str	fp, [sp, #24]
   15da8:	ldr	r9, [r7, #68]	; 0x44
   15dac:	cmp	r9, #0
   15db0:	beq	15e2c <__flatcc_fb_codegen_c@@Base+0x834>
   15db4:	mov	r3, #0
   15db8:	mov	sl, r3
   15dbc:	mov	r0, #1
   15dc0:	ldr	r2, [r9, #4]
   15dc4:	ldr	r1, [r2, #8]
   15dc8:	cmp	r1, r3
   15dcc:	beq	15dec <__flatcc_fb_codegen_c@@Base+0x7f4>
   15dd0:	cmp	r0, #0
   15dd4:	mov	r2, r6
   15dd8:	ldrne	r1, [pc, #1840]	; 16510 <__flatcc_fb_codegen_c@@Base+0xf18>
   15ddc:	ldreq	r1, [pc, #1844]	; 16518 <__flatcc_fb_codegen_c@@Base+0xf20>
   15de0:	ldr	r0, [r4, #204]	; 0xcc
   15de4:	bl	13f84 <fprintf@plt>
   15de8:	ldr	r2, [r9, #4]
   15dec:	ldr	r3, [r2]
   15df0:	mov	r1, r5
   15df4:	ldr	r2, [r2, #4]
   15df8:	ldr	r0, [r4, #204]	; 0xcc
   15dfc:	bl	13f84 <fprintf@plt>
   15e00:	ldr	r3, [r9, #4]
   15e04:	ldr	r9, [r9]
   15e08:	mov	r0, sl
   15e0c:	cmp	r9, #0
   15e10:	ldr	r3, [r3, #8]
   15e14:	bne	15dc0 <__flatcc_fb_codegen_c@@Base+0x7c8>
   15e18:	ldr	r3, [r4, #204]	; 0xcc
   15e1c:	mov	r2, #4
   15e20:	mov	r1, #1
   15e24:	ldr	r0, [pc, #1776]	; 1651c <__flatcc_fb_codegen_c@@Base+0xf24>
   15e28:	bl	13f18 <fwrite@plt>
   15e2c:	ldrh	r3, [r7, #56]	; 0x38
   15e30:	ldr	r1, [r7, #4]
   15e34:	ldr	r2, [sp, #24]
   15e38:	sub	r3, r3, #3
   15e3c:	ldr	fp, [r1]
   15e40:	ldr	r2, [r2, #40]	; 0x28
   15e44:	ldr	sl, [r1, #4]
   15e48:	cmp	r3, #3
   15e4c:	ldrls	pc, [pc, r3, lsl #2]
   15e50:	b	160a4 <__flatcc_fb_codegen_c@@Base+0xaac>
   15e54:	andeq	r5, r1, r0, lsl #30
   15e58:	andeq	r5, r1, ip, asr #29
   15e5c:	muleq	r1, r8, lr
   15e60:	andeq	r5, r1, r4, ror #28
   15e64:	sub	r2, r2, #1
   15e68:	cmp	r2, #8
   15e6c:	ldrls	pc, [pc, r2, lsl #2]
   15e70:	b	16404 <__flatcc_fb_codegen_c@@Base+0xe0c>
   15e74:	andeq	r6, r1, r0, lsr r3
   15e78:	andeq	r6, r1, r0, lsl #6
   15e7c:	andeq	r6, r1, r8, lsr #6
   15e80:	andeq	r6, r1, r4, lsl r2
   15e84:	andeq	r6, r1, r4, lsl r2
   15e88:	andeq	r6, r1, r8, lsl r3
   15e8c:	andeq	r6, r1, r8, asr #6
   15e90:	andeq	r6, r1, r0, asr #6
   15e94:	andeq	r6, r1, r0, lsr #6
   15e98:	sub	r2, r2, #1
   15e9c:	cmp	r2, #8
   15ea0:	ldrls	pc, [pc, r2, lsl #2]
   15ea4:	b	16404 <__flatcc_fb_codegen_c@@Base+0xe0c>
   15ea8:	andeq	r6, r1, r8, lsr r3
   15eac:	andeq	r6, r1, r8, lsl #6
   15eb0:	andeq	r6, r1, r8, asr r3
   15eb4:	strdeq	r6, [r1], -r4
   15eb8:	strdeq	r6, [r1], -r4
   15ebc:	andeq	r6, r1, r0, lsl r3
   15ec0:	andeq	r6, r1, r0, ror r3
   15ec4:	andeq	r6, r1, r8, ror #6
   15ec8:	andeq	r6, r1, r0, asr r3
   15ecc:	sub	r2, r2, #1
   15ed0:	cmp	r2, #8
   15ed4:	ldrls	pc, [pc, r2, lsl #2]
   15ed8:	b	16404 <__flatcc_fb_codegen_c@@Base+0xe0c>
   15edc:	andeq	r6, r1, r0, ror #6
   15ee0:	strdeq	r6, [r1], -r8
   15ee4:	andeq	r6, r1, r8, lsl #7
   15ee8:	ldrdeq	r6, [r1], -r4
   15eec:	ldrdeq	r6, [r1], -r4
   15ef0:	andeq	r6, r1, r8, ror r3
   15ef4:	muleq	r1, r8, r3
   15ef8:	muleq	r1, r0, r3
   15efc:	andeq	r6, r1, r0, lsl #7
   15f00:	cmp	r2, #11
   15f04:	beq	16438 <__flatcc_fb_codegen_c@@Base+0xe40>
   15f08:	add	r9, sp, #40	; 0x28
   15f0c:	mov	r0, r9
   15f10:	ldrd	r2, [r7, #48]	; 0x30
   15f14:	ldr	r1, [pc, #1552]	; 1652c <__flatcc_fb_codegen_c@@Base+0xf34>
   15f18:	bl	13ff0 <sprintf@plt>
   15f1c:	ldr	r3, [sp, #20]
   15f20:	ldr	r0, [r4, #204]	; 0xcc
   15f24:	mov	r2, r8
   15f28:	str	r3, [sp, #8]
   15f2c:	str	r9, [sp, #12]
   15f30:	str	r8, [sp, #4]
   15f34:	str	fp, [sp]
   15f38:	mov	r3, sl
   15f3c:	ldr	r1, [pc, #1516]	; 16530 <__flatcc_fb_codegen_c@@Base+0xf38>
   15f40:	bl	13f84 <fprintf@plt>
   15f44:	ldr	r7, [r7]
   15f48:	cmp	r7, #0
   15f4c:	bne	15da8 <__flatcc_fb_codegen_c@@Base+0x7b0>
   15f50:	ldr	r1, [r4, #204]	; 0xcc
   15f54:	mov	r0, #10
   15f58:	ldr	fp, [sp, #24]
   15f5c:	bl	13fe4 <fputc@plt>
   15f60:	ldr	r3, [sp, #28]
   15f64:	cmp	r3, #3
   15f68:	beq	16138 <__flatcc_fb_codegen_c@@Base+0xb40>
   15f6c:	mov	r3, r8
   15f70:	mov	r2, r8
   15f74:	ldr	r1, [pc, #1464]	; 16534 <__flatcc_fb_codegen_c@@Base+0xf3c>
   15f78:	ldr	r0, [r4, #204]	; 0xcc
   15f7c:	bl	13f84 <fprintf@plt>
   15f80:	ldr	r3, [r4, #204]	; 0xcc
   15f84:	mov	r2, #20
   15f88:	mov	r1, #1
   15f8c:	ldr	r0, [pc, #1444]	; 16538 <__flatcc_fb_codegen_c@@Base+0xf40>
   15f90:	bl	13f18 <fwrite@plt>
   15f94:	ldr	r5, [fp, #20]
   15f98:	cmp	r5, #0
   15f9c:	beq	164b8 <__flatcc_fb_codegen_c@@Base+0xec0>
   15fa0:	ldr	r7, [pc, #1428]	; 1653c <__flatcc_fb_codegen_c@@Base+0xf44>
   15fa4:	ldr	r6, [pc, #1428]	; 16540 <__flatcc_fb_codegen_c@@Base+0xf48>
   15fa8:	ldrh	r2, [r5, #10]
   15fac:	ldr	r3, [r5, #4]
   15fb0:	ldr	r0, [r4, #204]	; 0xcc
   15fb4:	tst	r2, #4
   15fb8:	ldm	r3, {r2, r3}
   15fbc:	str	r2, [sp, #8]
   15fc0:	stm	sp, {r2, r3}
   15fc4:	mov	r2, r8
   15fc8:	beq	163d4 <__flatcc_fb_codegen_c@@Base+0xddc>
   15fcc:	mov	r1, r6
   15fd0:	bl	13f84 <fprintf@plt>
   15fd4:	ldr	r5, [r5]
   15fd8:	cmp	r5, #0
   15fdc:	bne	15fa8 <__flatcc_fb_codegen_c@@Base+0x9b0>
   15fe0:	ldr	r3, [r4, #204]	; 0xcc
   15fe4:	mov	r2, #32
   15fe8:	mov	r1, #1
   15fec:	ldr	r0, [pc, #1360]	; 16544 <__flatcc_fb_codegen_c@@Base+0xf4c>
   15ff0:	bl	13f18 <fwrite@plt>
   15ff4:	ldr	r1, [r4, #204]	; 0xcc
   15ff8:	mov	r0, #10
   15ffc:	bl	13fe4 <fputc@plt>
   16000:	ldr	r3, [sp, #28]
   16004:	cmp	r3, #3
   16008:	beq	1618c <__flatcc_fb_codegen_c@@Base+0xb94>
   1600c:	mov	r3, r8
   16010:	mov	r2, r8
   16014:	ldr	r1, [pc, #1324]	; 16548 <__flatcc_fb_codegen_c@@Base+0xf50>
   16018:	ldr	r0, [r4, #204]	; 0xcc
   1601c:	bl	13f84 <fprintf@plt>
   16020:	ldr	r3, [r4, #204]	; 0xcc
   16024:	mov	r2, #20
   16028:	mov	r1, #1
   1602c:	ldr	r0, [pc, #1284]	; 16538 <__flatcc_fb_codegen_c@@Base+0xf40>
   16030:	bl	13f18 <fwrite@plt>
   16034:	ldr	r5, [fp, #20]
   16038:	cmp	r5, #0
   1603c:	beq	1607c <__flatcc_fb_codegen_c@@Base+0xa84>
   16040:	ldr	r7, [pc, #1284]	; 1654c <__flatcc_fb_codegen_c@@Base+0xf54>
   16044:	ldr	r6, [pc, #1284]	; 16550 <__flatcc_fb_codegen_c@@Base+0xf58>
   16048:	ldrh	r2, [r5, #10]
   1604c:	ldr	r3, [r5, #4]
   16050:	ldr	r0, [r4, #204]	; 0xcc
   16054:	tst	r2, #4
   16058:	ldm	r3, {r2, r3}
   1605c:	str	r2, [sp]
   16060:	mov	r2, r8
   16064:	beq	163ec <__flatcc_fb_codegen_c@@Base+0xdf4>
   16068:	mov	r1, r6
   1606c:	bl	13f84 <fprintf@plt>
   16070:	ldr	r5, [r5]
   16074:	cmp	r5, #0
   16078:	bne	16048 <__flatcc_fb_codegen_c@@Base+0xa50>
   1607c:	ldr	r3, [r4, #204]	; 0xcc
   16080:	mov	r2, #31
   16084:	mov	r1, #1
   16088:	ldr	r0, [pc, #1220]	; 16554 <__flatcc_fb_codegen_c@@Base+0xf5c>
   1608c:	bl	13f18 <fwrite@plt>
   16090:	ldr	r1, [r4, #204]	; 0xcc
   16094:	mov	r0, #10
   16098:	bl	13fe4 <fputc@plt>
   1609c:	add	sp, sp, #364	; 0x16c
   160a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160a4:	ldr	r1, [pc, #1196]	; 16558 <__flatcc_fb_codegen_c@@Base+0xf60>
   160a8:	ldr	r2, [pc, #1196]	; 1655c <__flatcc_fb_codegen_c@@Base+0xf64>
   160ac:	mov	r3, #260	; 0x104
   160b0:	ldr	r0, [r1]
   160b4:	str	r2, [sp]
   160b8:	ldr	r1, [pc, #1184]	; 16560 <__flatcc_fb_codegen_c@@Base+0xf68>
   160bc:	ldr	r2, [pc, #1184]	; 16564 <__flatcc_fb_codegen_c@@Base+0xf6c>
   160c0:	bl	13f84 <fprintf@plt>
   160c4:	ldr	r3, [pc, #1180]	; 16568 <__flatcc_fb_codegen_c@@Base+0xf70>
   160c8:	mov	r2, #260	; 0x104
   160cc:	ldr	r1, [pc, #1168]	; 16564 <__flatcc_fb_codegen_c@@Base+0xf6c>
   160d0:	ldr	r0, [pc, #1172]	; 1656c <__flatcc_fb_codegen_c@@Base+0xf74>
   160d4:	bl	14038 <__assert_fail@plt>
   160d8:	ldr	r5, [pc, #1168]	; 16570 <__flatcc_fb_codegen_c@@Base+0xf78>
   160dc:	ldr	r0, [r4, #204]	; 0xcc
   160e0:	ldr	r3, [sp, #24]
   160e4:	ldr	r2, [sp, #32]
   160e8:	ldr	r1, [pc, #1072]	; 16520 <__flatcc_fb_codegen_c@@Base+0xf28>
   160ec:	str	r8, [sp]
   160f0:	str	r5, [sp, #4]
   160f4:	bl	13f84 <fprintf@plt>
   160f8:	ldr	r3, [sp, #36]	; 0x24
   160fc:	ldr	r0, [r4, #204]	; 0xcc
   16100:	mov	r2, r4
   16104:	str	r3, [sp, #8]
   16108:	str	r5, [sp, #4]
   1610c:	str	r8, [sp]
   16110:	mov	r3, r8
   16114:	ldr	r1, [pc, #1032]	; 16524 <__flatcc_fb_codegen_c@@Base+0xf2c>
   16118:	str	r5, [sp, #20]
   1611c:	bl	13f84 <fprintf@plt>
   16120:	ldr	r7, [fp, #20]
   16124:	cmp	r7, #0
   16128:	bne	15d9c <__flatcc_fb_codegen_c@@Base+0x7a4>
   1612c:	ldr	r1, [r4, #204]	; 0xcc
   16130:	mov	r0, #10
   16134:	bl	13fe4 <fputc@plt>
   16138:	mov	r3, r8
   1613c:	mov	r2, r8
   16140:	ldr	r1, [pc, #1068]	; 16574 <__flatcc_fb_codegen_c@@Base+0xf7c>
   16144:	ldr	r0, [r4, #204]	; 0xcc
   16148:	bl	13f84 <fprintf@plt>
   1614c:	ldr	r3, [r4, #204]	; 0xcc
   16150:	mov	r2, #21
   16154:	mov	r1, #1
   16158:	ldr	r0, [pc, #1048]	; 16578 <__flatcc_fb_codegen_c@@Base+0xf80>
   1615c:	bl	13f18 <fwrite@plt>
   16160:	ldr	r5, [fp, #20]
   16164:	cmp	r5, #0
   16168:	bne	15fa0 <__flatcc_fb_codegen_c@@Base+0x9a8>
   1616c:	mov	r1, #1
   16170:	ldr	r3, [r4, #204]	; 0xcc
   16174:	mov	r2, #32
   16178:	ldr	r0, [pc, #964]	; 16544 <__flatcc_fb_codegen_c@@Base+0xf4c>
   1617c:	bl	13f18 <fwrite@plt>
   16180:	ldr	r1, [r4, #204]	; 0xcc
   16184:	mov	r0, #10
   16188:	bl	13fe4 <fputc@plt>
   1618c:	mov	r3, r8
   16190:	mov	r2, r8
   16194:	ldr	r1, [pc, #992]	; 1657c <__flatcc_fb_codegen_c@@Base+0xf84>
   16198:	ldr	r0, [r4, #204]	; 0xcc
   1619c:	bl	13f84 <fprintf@plt>
   161a0:	ldr	r3, [r4, #204]	; 0xcc
   161a4:	mov	r2, #21
   161a8:	mov	r1, #1
   161ac:	ldr	r0, [pc, #964]	; 16578 <__flatcc_fb_codegen_c@@Base+0xf80>
   161b0:	bl	13f18 <fwrite@plt>
   161b4:	b	16034 <__flatcc_fb_codegen_c@@Base+0xa3c>
   161b8:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   161bc:	ldr	r5, [fp, #32]
   161c0:	cmp	r5, #0
   161c4:	beq	160d8 <__flatcc_fb_codegen_c@@Base+0xae0>
   161c8:	ldr	r3, [pc, #928]	; 16570 <__flatcc_fb_codegen_c@@Base+0xf78>
   161cc:	str	r3, [sp, #20]
   161d0:	b	15ca4 <__flatcc_fb_codegen_c@@Base+0x6ac>
   161d4:	ldr	r2, [pc, #932]	; 16580 <__flatcc_fb_codegen_c@@Base+0xf88>
   161d8:	ldrd	r0, [r7, #48]	; 0x30
   161dc:	add	r9, sp, #40	; 0x28
   161e0:	strd	r0, [sp]
   161e4:	mov	r0, r9
   161e8:	ldr	r1, [pc, #916]	; 16584 <__flatcc_fb_codegen_c@@Base+0xf8c>
   161ec:	bl	13ff0 <sprintf@plt>
   161f0:	b	15f1c <__flatcc_fb_codegen_c@@Base+0x924>
   161f4:	ldr	r2, [pc, #900]	; 16580 <__flatcc_fb_codegen_c@@Base+0xf88>
   161f8:	ldrd	r0, [r7, #48]	; 0x30
   161fc:	add	r9, sp, #40	; 0x28
   16200:	strd	r0, [sp]
   16204:	mov	r0, r9
   16208:	ldr	r1, [pc, #888]	; 16588 <__flatcc_fb_codegen_c@@Base+0xf90>
   1620c:	bl	13ff0 <sprintf@plt>
   16210:	b	15f1c <__flatcc_fb_codegen_c@@Base+0x924>
   16214:	ldr	r2, [pc, #868]	; 16580 <__flatcc_fb_codegen_c@@Base+0xf88>
   16218:	add	r9, sp, #40	; 0x28
   1621c:	mov	r0, r9
   16220:	ldrb	r3, [r7, #48]	; 0x30
   16224:	ldr	r1, [pc, #864]	; 1658c <__flatcc_fb_codegen_c@@Base+0xf94>
   16228:	bl	13ff0 <sprintf@plt>
   1622c:	b	15f1c <__flatcc_fb_codegen_c@@Base+0x924>
   16230:	ldr	r3, [pc, #724]	; 1650c <__flatcc_fb_codegen_c@@Base+0xf14>
   16234:	str	r3, [sp, #32]
   16238:	ldr	r3, [pc, #848]	; 16590 <__flatcc_fb_codegen_c@@Base+0xf98>
   1623c:	str	r3, [sp, #24]
   16240:	b	15c68 <__flatcc_fb_codegen_c@@Base+0x670>
   16244:	ldr	r3, [pc, #704]	; 1650c <__flatcc_fb_codegen_c@@Base+0xf14>
   16248:	str	r3, [sp, #32]
   1624c:	ldr	r3, [pc, #832]	; 16594 <__flatcc_fb_codegen_c@@Base+0xf9c>
   16250:	str	r3, [sp, #24]
   16254:	b	15c68 <__flatcc_fb_codegen_c@@Base+0x670>
   16258:	ldr	r3, [pc, #684]	; 1650c <__flatcc_fb_codegen_c@@Base+0xf14>
   1625c:	str	r3, [sp, #32]
   16260:	ldr	r3, [pc, #816]	; 16598 <__flatcc_fb_codegen_c@@Base+0xfa0>
   16264:	str	r3, [sp, #24]
   16268:	b	15c68 <__flatcc_fb_codegen_c@@Base+0x670>
   1626c:	ldr	r3, [pc, #664]	; 1650c <__flatcc_fb_codegen_c@@Base+0xf14>
   16270:	str	r3, [sp, #32]
   16274:	ldr	r3, [pc, #800]	; 1659c <__flatcc_fb_codegen_c@@Base+0xfa4>
   16278:	str	r3, [sp, #24]
   1627c:	b	15c68 <__flatcc_fb_codegen_c@@Base+0x670>
   16280:	ldr	r3, [pc, #644]	; 1650c <__flatcc_fb_codegen_c@@Base+0xf14>
   16284:	str	r3, [sp, #32]
   16288:	ldr	r3, [pc, #784]	; 165a0 <__flatcc_fb_codegen_c@@Base+0xfa8>
   1628c:	str	r3, [sp, #24]
   16290:	b	15c68 <__flatcc_fb_codegen_c@@Base+0x670>
   16294:	ldr	r3, [pc, #624]	; 1650c <__flatcc_fb_codegen_c@@Base+0xf14>
   16298:	str	r3, [sp, #32]
   1629c:	ldr	r3, [pc, #768]	; 165a4 <__flatcc_fb_codegen_c@@Base+0xfac>
   162a0:	str	r3, [sp, #24]
   162a4:	b	15c68 <__flatcc_fb_codegen_c@@Base+0x670>
   162a8:	ldr	r3, [pc, #604]	; 1650c <__flatcc_fb_codegen_c@@Base+0xf14>
   162ac:	str	r3, [sp, #32]
   162b0:	ldr	r3, [pc, #752]	; 165a8 <__flatcc_fb_codegen_c@@Base+0xfb0>
   162b4:	str	r3, [sp, #24]
   162b8:	b	15c68 <__flatcc_fb_codegen_c@@Base+0x670>
   162bc:	ldr	r3, [pc, #584]	; 1650c <__flatcc_fb_codegen_c@@Base+0xf14>
   162c0:	str	r3, [sp, #32]
   162c4:	ldr	r3, [pc, #736]	; 165ac <__flatcc_fb_codegen_c@@Base+0xfb4>
   162c8:	str	r3, [sp, #24]
   162cc:	b	15c68 <__flatcc_fb_codegen_c@@Base+0x670>
   162d0:	ldr	r3, [pc, #564]	; 1650c <__flatcc_fb_codegen_c@@Base+0xf14>
   162d4:	str	r3, [sp, #32]
   162d8:	ldr	r3, [pc, #720]	; 165b0 <__flatcc_fb_codegen_c@@Base+0xfb8>
   162dc:	str	r3, [sp, #24]
   162e0:	b	15c68 <__flatcc_fb_codegen_c@@Base+0x670>
   162e4:	ldr	r3, [pc, #544]	; 1650c <__flatcc_fb_codegen_c@@Base+0xf14>
   162e8:	str	r3, [sp, #32]
   162ec:	ldr	r3, [pc, #704]	; 165b4 <__flatcc_fb_codegen_c@@Base+0xfbc>
   162f0:	str	r3, [sp, #24]
   162f4:	b	15c68 <__flatcc_fb_codegen_c@@Base+0x670>
   162f8:	ldr	r2, [pc, #696]	; 165b8 <__flatcc_fb_codegen_c@@Base+0xfc0>
   162fc:	b	161d8 <__flatcc_fb_codegen_c@@Base+0xbe0>
   16300:	ldr	r2, [pc, #688]	; 165b8 <__flatcc_fb_codegen_c@@Base+0xfc0>
   16304:	b	16218 <__flatcc_fb_codegen_c@@Base+0xc20>
   16308:	ldr	r2, [pc, #680]	; 165b8 <__flatcc_fb_codegen_c@@Base+0xfc0>
   1630c:	b	161f8 <__flatcc_fb_codegen_c@@Base+0xc00>
   16310:	ldr	r2, [pc, #676]	; 165bc <__flatcc_fb_codegen_c@@Base+0xfc4>
   16314:	b	161f8 <__flatcc_fb_codegen_c@@Base+0xc00>
   16318:	ldr	r2, [pc, #668]	; 165bc <__flatcc_fb_codegen_c@@Base+0xfc4>
   1631c:	b	16218 <__flatcc_fb_codegen_c@@Base+0xc20>
   16320:	ldr	r2, [pc, #664]	; 165c0 <__flatcc_fb_codegen_c@@Base+0xfc8>
   16324:	b	16218 <__flatcc_fb_codegen_c@@Base+0xc20>
   16328:	ldr	r2, [pc, #660]	; 165c4 <__flatcc_fb_codegen_c@@Base+0xfcc>
   1632c:	b	16218 <__flatcc_fb_codegen_c@@Base+0xc20>
   16330:	ldr	r2, [pc, #656]	; 165c8 <__flatcc_fb_codegen_c@@Base+0xfd0>
   16334:	b	16218 <__flatcc_fb_codegen_c@@Base+0xc20>
   16338:	ldr	r2, [pc, #648]	; 165c8 <__flatcc_fb_codegen_c@@Base+0xfd0>
   1633c:	b	161f8 <__flatcc_fb_codegen_c@@Base+0xc00>
   16340:	ldr	r2, [pc, #644]	; 165cc <__flatcc_fb_codegen_c@@Base+0xfd4>
   16344:	b	16218 <__flatcc_fb_codegen_c@@Base+0xc20>
   16348:	ldr	r2, [pc, #640]	; 165d0 <__flatcc_fb_codegen_c@@Base+0xfd8>
   1634c:	b	16218 <__flatcc_fb_codegen_c@@Base+0xc20>
   16350:	ldr	r2, [pc, #616]	; 165c0 <__flatcc_fb_codegen_c@@Base+0xfc8>
   16354:	b	161f8 <__flatcc_fb_codegen_c@@Base+0xc00>
   16358:	ldr	r2, [pc, #612]	; 165c4 <__flatcc_fb_codegen_c@@Base+0xfcc>
   1635c:	b	161f8 <__flatcc_fb_codegen_c@@Base+0xc00>
   16360:	ldr	r2, [pc, #608]	; 165c8 <__flatcc_fb_codegen_c@@Base+0xfd0>
   16364:	b	161d8 <__flatcc_fb_codegen_c@@Base+0xbe0>
   16368:	ldr	r2, [pc, #604]	; 165cc <__flatcc_fb_codegen_c@@Base+0xfd4>
   1636c:	b	161f8 <__flatcc_fb_codegen_c@@Base+0xc00>
   16370:	ldr	r2, [pc, #600]	; 165d0 <__flatcc_fb_codegen_c@@Base+0xfd8>
   16374:	b	161f8 <__flatcc_fb_codegen_c@@Base+0xc00>
   16378:	ldr	r2, [pc, #572]	; 165bc <__flatcc_fb_codegen_c@@Base+0xfc4>
   1637c:	b	161d8 <__flatcc_fb_codegen_c@@Base+0xbe0>
   16380:	ldr	r2, [pc, #568]	; 165c0 <__flatcc_fb_codegen_c@@Base+0xfc8>
   16384:	b	161d8 <__flatcc_fb_codegen_c@@Base+0xbe0>
   16388:	ldr	r2, [pc, #564]	; 165c4 <__flatcc_fb_codegen_c@@Base+0xfcc>
   1638c:	b	161d8 <__flatcc_fb_codegen_c@@Base+0xbe0>
   16390:	ldr	r2, [pc, #564]	; 165cc <__flatcc_fb_codegen_c@@Base+0xfd4>
   16394:	b	161d8 <__flatcc_fb_codegen_c@@Base+0xbe0>
   16398:	ldr	r2, [pc, #560]	; 165d0 <__flatcc_fb_codegen_c@@Base+0xfd8>
   1639c:	b	161d8 <__flatcc_fb_codegen_c@@Base+0xbe0>
   163a0:	ldr	r1, [pc, #432]	; 16558 <__flatcc_fb_codegen_c@@Base+0xf60>
   163a4:	ldr	r2, [pc, #432]	; 1655c <__flatcc_fb_codegen_c@@Base+0xf64>
   163a8:	mov	r3, #141	; 0x8d
   163ac:	ldr	r0, [r1]
   163b0:	str	r2, [sp]
   163b4:	ldr	r1, [pc, #420]	; 16560 <__flatcc_fb_codegen_c@@Base+0xf68>
   163b8:	ldr	r2, [pc, #420]	; 16564 <__flatcc_fb_codegen_c@@Base+0xf6c>
   163bc:	bl	13f84 <fprintf@plt>
   163c0:	ldr	r3, [pc, #524]	; 165d4 <__flatcc_fb_codegen_c@@Base+0xfdc>
   163c4:	mov	r2, #141	; 0x8d
   163c8:	ldr	r1, [pc, #404]	; 16564 <__flatcc_fb_codegen_c@@Base+0xf6c>
   163cc:	ldr	r0, [pc, #408]	; 1656c <__flatcc_fb_codegen_c@@Base+0xf74>
   163d0:	bl	14038 <__assert_fail@plt>
   163d4:	mov	r1, r7
   163d8:	bl	13f84 <fprintf@plt>
   163dc:	ldr	r5, [r5]
   163e0:	cmp	r5, #0
   163e4:	bne	15fa8 <__flatcc_fb_codegen_c@@Base+0x9b0>
   163e8:	b	15fe0 <__flatcc_fb_codegen_c@@Base+0x9e8>
   163ec:	mov	r1, r7
   163f0:	bl	13f84 <fprintf@plt>
   163f4:	ldr	r5, [r5]
   163f8:	cmp	r5, #0
   163fc:	bne	16048 <__flatcc_fb_codegen_c@@Base+0xa50>
   16400:	b	1607c <__flatcc_fb_codegen_c@@Base+0xa84>
   16404:	ldr	r1, [pc, #332]	; 16558 <__flatcc_fb_codegen_c@@Base+0xf60>
   16408:	ldr	r2, [pc, #332]	; 1655c <__flatcc_fb_codegen_c@@Base+0xf64>
   1640c:	mov	r3, #226	; 0xe2
   16410:	ldr	r0, [r1]
   16414:	str	r2, [sp]
   16418:	ldr	r1, [pc, #320]	; 16560 <__flatcc_fb_codegen_c@@Base+0xf68>
   1641c:	ldr	r2, [pc, #320]	; 16564 <__flatcc_fb_codegen_c@@Base+0xf6c>
   16420:	bl	13f84 <fprintf@plt>
   16424:	ldr	r3, [pc, #428]	; 165d8 <__flatcc_fb_codegen_c@@Base+0xfe0>
   16428:	mov	r2, #226	; 0xe2
   1642c:	ldr	r1, [pc, #304]	; 16564 <__flatcc_fb_codegen_c@@Base+0xf6c>
   16430:	ldr	r0, [pc, #308]	; 1656c <__flatcc_fb_codegen_c@@Base+0xf74>
   16434:	bl	14038 <__assert_fail@plt>
   16438:	vldr	d7, [r7, #48]	; 0x30
   1643c:	add	r9, sp, #40	; 0x28
   16440:	mov	r0, r9
   16444:	ldr	r1, [pc, #400]	; 165dc <__flatcc_fb_codegen_c@@Base+0xfe4>
   16448:	vcvt.f32.f64	s14, d7
   1644c:	vcvt.f64.f32	d7, s14
   16450:	vmov	r2, r3, d7
   16454:	bl	13ff0 <sprintf@plt>
   16458:	b	15f1c <__flatcc_fb_codegen_c@@Base+0x924>
   1645c:	ldr	r5, [pc, #164]	; 16508 <__flatcc_fb_codegen_c@@Base+0xf10>
   16460:	ldr	r0, [r4, #204]	; 0xcc
   16464:	ldr	r3, [sp, #24]
   16468:	ldr	r2, [sp, #32]
   1646c:	str	r8, [sp]
   16470:	str	r5, [sp, #4]
   16474:	ldr	r1, [pc, #164]	; 16520 <__flatcc_fb_codegen_c@@Base+0xf28>
   16478:	bl	13f84 <fprintf@plt>
   1647c:	ldr	r3, [sp, #36]	; 0x24
   16480:	ldr	r0, [r4, #204]	; 0xcc
   16484:	mov	r2, r4
   16488:	str	r3, [sp, #8]
   1648c:	str	r5, [sp, #4]
   16490:	str	r8, [sp]
   16494:	mov	r3, r8
   16498:	ldr	r1, [pc, #132]	; 16524 <__flatcc_fb_codegen_c@@Base+0xf2c>
   1649c:	str	r5, [sp, #20]
   164a0:	bl	13f84 <fprintf@plt>
   164a4:	b	15d78 <__flatcc_fb_codegen_c@@Base+0x780>
   164a8:	ldr	r1, [r4, #204]	; 0xcc
   164ac:	mov	r0, #10
   164b0:	bl	13fe4 <fputc@plt>
   164b4:	b	15f6c <__flatcc_fb_codegen_c@@Base+0x974>
   164b8:	ldr	r3, [r4, #204]	; 0xcc
   164bc:	mov	r2, #32
   164c0:	mov	r1, #1
   164c4:	ldr	r0, [pc, #120]	; 16544 <__flatcc_fb_codegen_c@@Base+0xf4c>
   164c8:	bl	13f18 <fwrite@plt>
   164cc:	ldr	r1, [r4, #204]	; 0xcc
   164d0:	mov	r0, #10
   164d4:	bl	13fe4 <fputc@plt>
   164d8:	b	1600c <__flatcc_fb_codegen_c@@Base+0xa14>
   164dc:	ldr	r3, [pc, #252]	; 165e0 <__flatcc_fb_codegen_c@@Base+0xfe8>
   164e0:	ldr	r2, [pc, #252]	; 165e4 <__flatcc_fb_codegen_c@@Base+0xfec>
   164e4:	ldr	r1, [pc, #252]	; 165e8 <__flatcc_fb_codegen_c@@Base+0xff0>
   164e8:	ldr	r0, [pc, #252]	; 165ec <__flatcc_fb_codegen_c@@Base+0xff4>
   164ec:	bl	14038 <__assert_fail@plt>
   164f0:	ldr	r3, [pc, #232]	; 165e0 <__flatcc_fb_codegen_c@@Base+0xfe8>
   164f4:	ldr	r2, [pc, #244]	; 165f0 <__flatcc_fb_codegen_c@@Base+0xff8>
   164f8:	ldr	r1, [pc, #232]	; 165e8 <__flatcc_fb_codegen_c@@Base+0xff0>
   164fc:	ldr	r0, [pc, #240]	; 165f4 <__flatcc_fb_codegen_c@@Base+0xffc>
   16500:	bl	14038 <__assert_fail@plt>
   16504:	andeq	r1, r4, r8, ror lr
   16508:			; <UNDEFINED> instruction: 0x00041eb8
   1650c:	andeq	fp, r4, ip, lsr #24
   16510:	andeq	r2, r4, r0
   16514:	andeq	sl, r4, r4, lsr sp
   16518:	andeq	r2, r4, r8
   1651c:	andeq	r2, r4, r4, lsr sl
   16520:	andeq	r2, r4, r0, lsl r0
   16524:	andeq	r2, r4, r8, lsr #32
   16528:	andeq	r2, r4, r4, asr r0
   1652c:	muleq	r4, r4, r0
   16530:	muleq	r4, r8, r0
   16534:	strheq	r2, [r4], -r8
   16538:	strdeq	r2, [r4], -r8
   1653c:	muleq	r4, r4, r1
   16540:	andeq	r2, r4, r0, ror #2
   16544:			; <UNDEFINED> instruction: 0x000421b8
   16548:	ldrdeq	r2, [r4], -ip
   1654c:	andeq	r2, r4, r0, lsr #5
   16550:	andeq	r2, r4, r0, ror r2
   16554:	andeq	r2, r4, r0, asr r2
   16558:	andeq	sp, r6, r8, lsr #1
   1655c:	andeq	r1, r4, r8, asr #31
   16560:			; <UNDEFINED> instruction: 0x00041fbc
   16564:	andeq	r1, r4, r0, ror pc
   16568:	andeq	r1, r4, ip, ror #23
   1656c:	andeq	sl, r4, r4, asr sp
   16570:			; <UNDEFINED> instruction: 0x00041eb0
   16574:	andeq	r2, r4, r0, lsl r1
   16578:	andeq	r2, r4, r8, asr #2
   1657c:	andeq	r2, r4, r8, lsl r2
   16580:	andeq	r1, r4, r8, ror #29
   16584:	andeq	r2, r4, ip, ror r0
   16588:	andeq	r2, r4, r0, ror r0
   1658c:	andeq	r2, r4, r8, lsl #1
   16590:	andeq	r1, r4, r8, lsl #29
   16594:	muleq	r4, r0, lr
   16598:	muleq	r4, r8, lr
   1659c:	andeq	r1, r4, r8, lsr #29
   165a0:	andeq	r1, r4, r0, ror lr
   165a4:	andeq	r1, r4, r0, lsr #29
   165a8:	andeq	r1, r4, r0, lsl #29
   165ac:	andeq	r1, r4, r8, asr lr
   165b0:	andeq	r1, r4, ip, asr #28
   165b4:	andeq	r1, r4, r4, ror #28
   165b8:	ldrdeq	r1, [r4], -r0
   165bc:	strdeq	r1, [r4], -r0
   165c0:	andeq	r1, r4, r8, lsl #30
   165c4:	ldrdeq	r1, [r4], -ip
   165c8:	andeq	r1, r4, r4, asr #29
   165cc:	andeq	r1, r4, r0, lsl #30
   165d0:	strdeq	r1, [r4], -r8
   165d4:	andeq	r1, r4, ip, asr #23
   165d8:	andeq	r1, r4, r0, ror #23
   165dc:	muleq	r4, r0, r0
   165e0:	andeq	r1, r4, r0, asr #23
   165e4:			; <UNDEFINED> instruction: 0x000004b5
   165e8:	andeq	r1, r4, ip, ror #24
   165ec:	andeq	r1, r4, r0, asr pc
   165f0:			; <UNDEFINED> instruction: 0x000004b4
   165f4:	andeq	r1, r4, r0, lsl pc
   165f8:	ldr	r3, [r0, #212]	; 0xd4
   165fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16600:	sub	sp, sp, #492	; 0x1ec
   16604:	ldr	r3, [r3, #132]	; 0x84
   16608:	mov	fp, r1
   1660c:	mov	r2, #220	; 0xdc
   16610:	mov	r1, #0
   16614:	mov	r4, r0
   16618:	add	r0, sp, #48	; 0x30
   1661c:	str	r3, [sp, #28]
   16620:	bl	13f9c <memset@plt>
   16624:	add	r0, sp, #268	; 0x10c
   16628:	mov	r2, #220	; 0xdc
   1662c:	mov	r1, #0
   16630:	bl	13f9c <memset@plt>
   16634:	ldrh	r3, [fp, #8]
   16638:	cmp	r3, #1
   1663c:	bne	17108 <__flatcc_fb_codegen_c@@Base+0x1b10>
   16640:	ldrh	r3, [fp, #104]	; 0x68
   16644:	cmp	r3, #0
   16648:	bne	16a30 <__flatcc_fb_codegen_c@@Base+0x1438>
   1664c:	ldrd	r2, [fp, #96]	; 0x60
   16650:	orrs	r3, r2, r3
   16654:	bne	170f4 <__flatcc_fb_codegen_c@@Base+0x1afc>
   16658:	add	r2, sp, #48	; 0x30
   1665c:	mov	r1, fp
   16660:	ldr	r0, [fp, #12]
   16664:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   16668:	ldr	r5, [fp, #32]
   1666c:	cmp	r5, #0
   16670:	beq	166fc <__flatcc_fb_codegen_c@@Base+0x1104>
   16674:	mov	r3, #0
   16678:	ldr	r8, [pc, #2716]	; 1711c <__flatcc_fb_codegen_c@@Base+0x1b24>
   1667c:	ldr	sl, [pc, #2716]	; 17120 <__flatcc_fb_codegen_c@@Base+0x1b28>
   16680:	ldr	r9, [pc, #2716]	; 17124 <__flatcc_fb_codegen_c@@Base+0x1b2c>
   16684:	ldr	r7, [pc, #2716]	; 17128 <__flatcc_fb_codegen_c@@Base+0x1b30>
   16688:	mov	r6, r3
   1668c:	mov	r0, #1
   16690:	ldr	r2, [r5, #4]
   16694:	ldr	r1, [r2, #8]
   16698:	cmp	r1, r3
   1669c:	beq	166bc <__flatcc_fb_codegen_c@@Base+0x10c4>
   166a0:	cmp	r0, #0
   166a4:	mov	r2, r8
   166a8:	movne	r1, r9
   166ac:	moveq	r1, sl
   166b0:	ldr	r0, [r4, #204]	; 0xcc
   166b4:	bl	13f84 <fprintf@plt>
   166b8:	ldr	r2, [r5, #4]
   166bc:	ldr	r3, [r2]
   166c0:	mov	r1, r7
   166c4:	ldr	r2, [r2, #4]
   166c8:	ldr	r0, [r4, #204]	; 0xcc
   166cc:	bl	13f84 <fprintf@plt>
   166d0:	ldr	r3, [r5, #4]
   166d4:	ldr	r5, [r5]
   166d8:	mov	r0, r6
   166dc:	cmp	r5, #0
   166e0:	ldr	r3, [r3, #8]
   166e4:	bne	16690 <__flatcc_fb_codegen_c@@Base+0x1098>
   166e8:	ldr	r3, [r4, #204]	; 0xcc
   166ec:	mov	r2, #4
   166f0:	mov	r1, #1
   166f4:	ldr	r0, [pc, #2608]	; 1712c <__flatcc_fb_codegen_c@@Base+0x1b34>
   166f8:	bl	13f18 <fwrite@plt>
   166fc:	ldrd	r2, [fp, #112]	; 0x70
   16700:	orrs	r3, r2, r3
   16704:	beq	16a94 <__flatcc_fb_codegen_c@@Base+0x149c>
   16708:	ldr	r3, [sp, #28]
   1670c:	cmp	r3, #0
   16710:	bne	16c48 <__flatcc_fb_codegen_c@@Base+0x1650>
   16714:	add	r2, sp, #48	; 0x30
   16718:	ldr	r1, [pc, #2576]	; 17130 <__flatcc_fb_codegen_c@@Base+0x1b38>
   1671c:	ldr	r0, [r4, #204]	; 0xcc
   16720:	bl	13f84 <fprintf@plt>
   16724:	ldr	r5, [fp, #20]
   16728:	cmp	r5, #0
   1672c:	beq	16868 <__flatcc_fb_codegen_c@@Base+0x1270>
   16730:	mov	r3, #0
   16734:	ldr	r8, [pc, #2552]	; 17134 <__flatcc_fb_codegen_c@@Base+0x1b3c>
   16738:	ldr	r7, [pc, #2532]	; 17124 <__flatcc_fb_codegen_c@@Base+0x1b2c>
   1673c:	ldr	r6, [pc, #2532]	; 17128 <__flatcc_fb_codegen_c@@Base+0x1b30>
   16740:	mov	r9, r3
   16744:	str	r3, [sp, #36]	; 0x24
   16748:	str	r3, [sp, #44]	; 0x2c
   1674c:	str	fp, [sp, #40]	; 0x28
   16750:	ldr	sl, [r5, #68]	; 0x44
   16754:	cmp	sl, #0
   16758:	beq	167d4 <__flatcc_fb_codegen_c@@Base+0x11dc>
   1675c:	mov	r3, #0
   16760:	mov	fp, r3
   16764:	mov	r0, #1
   16768:	ldr	r2, [sl, #4]
   1676c:	ldr	r1, [r2, #8]
   16770:	cmp	r1, r3
   16774:	beq	16794 <__flatcc_fb_codegen_c@@Base+0x119c>
   16778:	cmp	r0, #0
   1677c:	mov	r2, r8
   16780:	movne	r1, r7
   16784:	ldreq	r1, [pc, #2452]	; 17120 <__flatcc_fb_codegen_c@@Base+0x1b28>
   16788:	ldr	r0, [r4, #204]	; 0xcc
   1678c:	bl	13f84 <fprintf@plt>
   16790:	ldr	r2, [sl, #4]
   16794:	ldr	r3, [r2]
   16798:	mov	r1, r6
   1679c:	ldr	r2, [r2, #4]
   167a0:	ldr	r0, [r4, #204]	; 0xcc
   167a4:	bl	13f84 <fprintf@plt>
   167a8:	ldr	r3, [sl, #4]
   167ac:	ldr	sl, [sl]
   167b0:	mov	r0, fp
   167b4:	cmp	sl, #0
   167b8:	ldr	r3, [r3, #8]
   167bc:	bne	16768 <__flatcc_fb_codegen_c@@Base+0x1170>
   167c0:	ldr	r3, [r4, #204]	; 0xcc
   167c4:	mov	r2, #4
   167c8:	mov	r1, #1
   167cc:	ldr	r0, [pc, #2392]	; 1712c <__flatcc_fb_codegen_c@@Base+0x1b34>
   167d0:	bl	13f18 <fwrite@plt>
   167d4:	ldr	r3, [r5, #4]
   167d8:	cmp	r9, #0
   167dc:	ldm	r3, {sl, fp}
   167e0:	ldreq	r3, [sp, #40]	; 0x28
   167e4:	ldrhne	r3, [r5, #74]	; 0x4a
   167e8:	ldrheq	r3, [r3, #104]	; 0x68
   167ec:	str	r3, [sp, #32]
   167f0:	ldr	r3, [sp, #28]
   167f4:	cmp	r3, #0
   167f8:	beq	168e4 <__flatcc_fb_codegen_c@@Base+0x12ec>
   167fc:	ldr	r3, [r5, #80]	; 0x50
   16800:	subs	r3, r3, r9
   16804:	bne	16a74 <__flatcc_fb_codegen_c@@Base+0x147c>
   16808:	ldrh	r3, [r5, #72]	; 0x48
   1680c:	tst	r3, #4
   16810:	beq	16924 <__flatcc_fb_codegen_c@@Base+0x132c>
   16814:	ldr	r1, [sp, #36]	; 0x24
   16818:	ldr	r3, [r5, #88]	; 0x58
   1681c:	ldr	r0, [r4, #204]	; 0xcc
   16820:	add	ip, r1, #1
   16824:	mov	r2, r1
   16828:	str	sl, [sp, #4]
   1682c:	str	fp, [sp]
   16830:	ldr	r1, [pc, #2304]	; 17138 <__flatcc_fb_codegen_c@@Base+0x1b40>
   16834:	str	ip, [sp, #36]	; 0x24
   16838:	bl	13f84 <fprintf@plt>
   1683c:	ldr	r9, [r5, #80]	; 0x50
   16840:	ldr	r3, [r5, #88]	; 0x58
   16844:	ldr	r5, [r5]
   16848:	add	r9, r9, r3
   1684c:	cmp	r5, #0
   16850:	bne	16750 <__flatcc_fb_codegen_c@@Base+0x1158>
   16854:	ldr	r3, [sp, #28]
   16858:	mov	r2, r9
   1685c:	cmp	r3, #0
   16860:	ldr	fp, [sp, #40]	; 0x28
   16864:	bne	16c80 <__flatcc_fb_codegen_c@@Base+0x1688>
   16868:	ldr	r3, [r4, #204]	; 0xcc
   1686c:	mov	r2, #3
   16870:	mov	r1, #1
   16874:	ldr	r0, [pc, #2240]	; 1713c <__flatcc_fb_codegen_c@@Base+0x1b44>
   16878:	bl	13f18 <fwrite@plt>
   1687c:	ldrd	r6, [fp, #112]	; 0x70
   16880:	ldr	r0, [r4, #204]	; 0xcc
   16884:	add	r2, sp, #48	; 0x30
   16888:	strd	r6, [sp]
   1688c:	ldr	r1, [pc, #2220]	; 17140 <__flatcc_fb_codegen_c@@Base+0x1b48>
   16890:	bl	13f84 <fprintf@plt>
   16894:	add	r3, sp, #48	; 0x30
   16898:	ldr	r0, [r4, #204]	; 0xcc
   1689c:	mov	r2, r3
   168a0:	str	r3, [sp]
   168a4:	ldr	r1, [pc, #2200]	; 17144 <__flatcc_fb_codegen_c@@Base+0x1b4c>
   168a8:	bl	13f84 <fprintf@plt>
   168ac:	add	r3, sp, #48	; 0x30
   168b0:	ldr	r0, [r4, #204]	; 0xcc
   168b4:	mov	r2, r3
   168b8:	str	r3, [sp]
   168bc:	ldr	r1, [pc, #2180]	; 17148 <__flatcc_fb_codegen_c@@Base+0x1b50>
   168c0:	bl	13f84 <fprintf@plt>
   168c4:	add	r3, sp, #48	; 0x30
   168c8:	ldr	r0, [r4, #204]	; 0xcc
   168cc:	mov	r2, r3
   168d0:	str	r4, [sp, #4]
   168d4:	str	r3, [sp]
   168d8:	ldr	r1, [pc, #2156]	; 1714c <__flatcc_fb_codegen_c@@Base+0x1b54>
   168dc:	bl	13f84 <fprintf@plt>
   168e0:	b	16aec <__flatcc_fb_codegen_c@@Base+0x14f4>
   168e4:	ldrh	r3, [r5, #72]	; 0x48
   168e8:	tst	r3, #4
   168ec:	beq	16924 <__flatcc_fb_codegen_c@@Base+0x132c>
   168f0:	ldr	r1, [sp, #36]	; 0x24
   168f4:	str	sl, [sp, #8]
   168f8:	str	fp, [sp, #4]
   168fc:	ldr	r3, [r5, #88]	; 0x58
   16900:	add	ip, r1, #1
   16904:	ldr	r0, [r4, #204]	; 0xcc
   16908:	ldr	r2, [sp, #32]
   1690c:	str	r3, [sp]
   16910:	mov	r3, r1
   16914:	ldr	r1, [pc, #2100]	; 17150 <__flatcc_fb_codegen_c@@Base+0x1b58>
   16918:	str	ip, [sp, #36]	; 0x24
   1691c:	bl	13f84 <fprintf@plt>
   16920:	b	1683c <__flatcc_fb_codegen_c@@Base+0x1244>
   16924:	ldrh	r3, [r5, #24]
   16928:	cmp	r3, #8
   1692c:	beq	169a4 <__flatcc_fb_codegen_c@@Base+0x13ac>
   16930:	cmp	r3, #14
   16934:	bne	169ec <__flatcc_fb_codegen_c@@Base+0x13f4>
   16938:	ldr	r1, [r5, #16]
   1693c:	ldrh	r3, [r1, #8]
   16940:	bic	r2, r3, #2
   16944:	cmp	r2, #1
   16948:	bne	170e0 <__flatcc_fb_codegen_c@@Base+0x1ae8>
   1694c:	ldr	r0, [pc, #1992]	; 1711c <__flatcc_fb_codegen_c@@Base+0x1b24>
   16950:	cmp	r3, #1
   16954:	ldr	r9, [pc, #2040]	; 17154 <__flatcc_fb_codegen_c@@Base+0x1b5c>
   16958:	add	r2, sp, #268	; 0x10c
   1695c:	moveq	r9, r0
   16960:	ldr	r0, [r1, #12]
   16964:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   16968:	ldr	r3, [sp, #28]
   1696c:	cmp	r3, #0
   16970:	bne	16a5c <__flatcc_fb_codegen_c@@Base+0x1464>
   16974:	ldr	r0, [r4, #204]	; 0xcc
   16978:	ldr	r2, [sp, #32]
   1697c:	str	r9, [sp]
   16980:	add	r3, sp, #268	; 0x10c
   16984:	ldr	r1, [pc, #1996]	; 17158 <__flatcc_fb_codegen_c@@Base+0x1b60>
   16988:	bl	13f84 <fprintf@plt>
   1698c:	mov	r3, sl
   16990:	mov	r2, fp
   16994:	ldr	r1, [pc, #1984]	; 1715c <__flatcc_fb_codegen_c@@Base+0x1b64>
   16998:	ldr	r0, [r4, #204]	; 0xcc
   1699c:	bl	13f84 <fprintf@plt>
   169a0:	b	1683c <__flatcc_fb_codegen_c@@Base+0x1244>
   169a4:	ldr	r3, [r5, #16]
   169a8:	cmp	r3, #5
   169ac:	beq	16e04 <__flatcc_fb_codegen_c@@Base+0x180c>
   169b0:	sub	r3, r3, #1
   169b4:	cmp	r3, #10
   169b8:	ldrls	pc, [pc, r3, lsl #2]
   169bc:	b	16e7c <__flatcc_fb_codegen_c@@Base+0x1884>
   169c0:	andeq	r6, r1, ip, lsr pc
   169c4:	andeq	r6, r1, r8, asr #30
   169c8:	andeq	r6, r1, r0, lsr pc
   169cc:	andeq	r6, r1, ip, asr #28
   169d0:	andeq	r6, r1, ip, ror lr
   169d4:	andeq	r6, r1, r4, lsr lr
   169d8:	andeq	r6, r1, r8, lsr #28
   169dc:	andeq	r6, r1, r0, ror lr
   169e0:	andeq	r6, r1, r4, ror #28
   169e4:	andeq	r6, r1, r8, asr lr
   169e8:	andeq	r6, r1, r0, asr #28
   169ec:	ldr	r2, [pc, #1900]	; 17160 <__flatcc_fb_codegen_c@@Base+0x1b68>
   169f0:	ldr	r1, [pc, #1900]	; 17164 <__flatcc_fb_codegen_c@@Base+0x1b6c>
   169f4:	ldr	r0, [r4, #204]	; 0xcc
   169f8:	bl	13f84 <fprintf@plt>
   169fc:	ldr	r1, [pc, #1892]	; 17168 <__flatcc_fb_codegen_c@@Base+0x1b70>
   16a00:	ldr	r2, [pc, #1892]	; 1716c <__flatcc_fb_codegen_c@@Base+0x1b74>
   16a04:	ldr	r3, [pc, #1892]	; 17170 <__flatcc_fb_codegen_c@@Base+0x1b78>
   16a08:	ldr	r0, [r1]
   16a0c:	str	r2, [sp]
   16a10:	ldr	r1, [pc, #1884]	; 17174 <__flatcc_fb_codegen_c@@Base+0x1b7c>
   16a14:	ldr	r2, [pc, #1884]	; 17178 <__flatcc_fb_codegen_c@@Base+0x1b80>
   16a18:	bl	13f84 <fprintf@plt>
   16a1c:	ldr	r3, [pc, #1880]	; 1717c <__flatcc_fb_codegen_c@@Base+0x1b84>
   16a20:	ldr	r2, [pc, #1864]	; 17170 <__flatcc_fb_codegen_c@@Base+0x1b78>
   16a24:	ldr	r1, [pc, #1868]	; 17178 <__flatcc_fb_codegen_c@@Base+0x1b80>
   16a28:	ldr	r0, [pc, #1872]	; 17180 <__flatcc_fb_codegen_c@@Base+0x1b88>
   16a2c:	bl	14038 <__assert_fail@plt>
   16a30:	ldrd	r2, [fp, #112]	; 0x70
   16a34:	orrs	r3, r2, r3
   16a38:	bne	16658 <__flatcc_fb_codegen_c@@Base+0x1060>
   16a3c:	ldrd	r2, [fp, #96]	; 0x60
   16a40:	orrs	r3, r2, r3
   16a44:	beq	16658 <__flatcc_fb_codegen_c@@Base+0x1060>
   16a48:	ldr	r3, [pc, #1836]	; 1717c <__flatcc_fb_codegen_c@@Base+0x1b84>
   16a4c:	ldr	r2, [pc, #1840]	; 17184 <__flatcc_fb_codegen_c@@Base+0x1b8c>
   16a50:	ldr	r1, [pc, #1824]	; 17178 <__flatcc_fb_codegen_c@@Base+0x1b80>
   16a54:	ldr	r0, [pc, #1836]	; 17188 <__flatcc_fb_codegen_c@@Base+0x1b90>
   16a58:	bl	14038 <__assert_fail@plt>
   16a5c:	mov	r3, r9
   16a60:	add	r2, sp, #268	; 0x10c
   16a64:	ldr	r1, [pc, #1824]	; 1718c <__flatcc_fb_codegen_c@@Base+0x1b94>
   16a68:	ldr	r0, [r4, #204]	; 0xcc
   16a6c:	bl	13f84 <fprintf@plt>
   16a70:	b	1698c <__flatcc_fb_codegen_c@@Base+0x1394>
   16a74:	ldr	r1, [sp, #44]	; 0x2c
   16a78:	ldr	r0, [r4, #204]	; 0xcc
   16a7c:	add	ip, r1, #1
   16a80:	mov	r2, r1
   16a84:	ldr	r1, [pc, #1796]	; 17190 <__flatcc_fb_codegen_c@@Base+0x1b98>
   16a88:	str	ip, [sp, #44]	; 0x2c
   16a8c:	bl	13f84 <fprintf@plt>
   16a90:	b	16808 <__flatcc_fb_codegen_c@@Base+0x1210>
   16a94:	add	r2, sp, #48	; 0x30
   16a98:	ldr	r1, [pc, #1780]	; 17194 <__flatcc_fb_codegen_c@@Base+0x1b9c>
   16a9c:	ldr	r0, [r4, #204]	; 0xcc
   16aa0:	bl	13f84 <fprintf@plt>
   16aa4:	add	r3, sp, #48	; 0x30
   16aa8:	mov	r2, r3
   16aac:	ldr	r0, [r4, #204]	; 0xcc
   16ab0:	ldr	r1, [pc, #1760]	; 17198 <__flatcc_fb_codegen_c@@Base+0x1ba0>
   16ab4:	str	r3, [sp]
   16ab8:	bl	13f84 <fprintf@plt>
   16abc:	add	r3, sp, #48	; 0x30
   16ac0:	mov	r2, r3
   16ac4:	ldr	r0, [r4, #204]	; 0xcc
   16ac8:	ldr	r1, [pc, #1740]	; 1719c <__flatcc_fb_codegen_c@@Base+0x1ba4>
   16acc:	str	r3, [sp]
   16ad0:	bl	13f84 <fprintf@plt>
   16ad4:	add	r3, sp, #48	; 0x30
   16ad8:	ldr	r0, [r4, #204]	; 0xcc
   16adc:	mov	r2, r3
   16ae0:	str	r3, [sp]
   16ae4:	ldr	r1, [pc, #1716]	; 171a0 <__flatcc_fb_codegen_c@@Base+0x1ba8>
   16ae8:	bl	13f84 <fprintf@plt>
   16aec:	ldrd	r6, [fp, #112]	; 0x70
   16af0:	ldr	r0, [r4, #204]	; 0xcc
   16af4:	add	r2, sp, #48	; 0x30
   16af8:	ldr	r1, [pc, #1700]	; 171a4 <__flatcc_fb_codegen_c@@Base+0x1bac>
   16afc:	strd	r6, [sp]
   16b00:	bl	13f84 <fprintf@plt>
   16b04:	add	r3, sp, #48	; 0x30
   16b08:	mov	r2, r3
   16b0c:	ldr	r0, [r4, #204]	; 0xcc
   16b10:	ldr	r1, [pc, #1680]	; 171a8 <__flatcc_fb_codegen_c@@Base+0x1bb0>
   16b14:	str	r4, [sp]
   16b18:	bl	13f84 <fprintf@plt>
   16b1c:	add	r3, sp, #48	; 0x30
   16b20:	mov	r2, r4
   16b24:	ldr	r1, [pc, #1664]	; 171ac <__flatcc_fb_codegen_c@@Base+0x1bb4>
   16b28:	ldr	r0, [r4, #204]	; 0xcc
   16b2c:	bl	13f84 <fprintf@plt>
   16b30:	ldr	r1, [r4, #204]	; 0xcc
   16b34:	mov	r0, #10
   16b38:	bl	13fe4 <fputc@plt>
   16b3c:	ldr	r5, [fp, #20]
   16b40:	cmp	r5, #0
   16b44:	beq	16bd0 <__flatcc_fb_codegen_c@@Base+0x15d8>
   16b48:	mov	r8, #0
   16b4c:	ldr	fp, [pc, #1628]	; 171b0 <__flatcc_fb_codegen_c@@Base+0x1bb8>
   16b50:	ldr	sl, [pc, #1476]	; 1711c <__flatcc_fb_codegen_c@@Base+0x1b24>
   16b54:	mov	r9, r8
   16b58:	ldrh	r3, [r5, #72]	; 0x48
   16b5c:	tst	r3, #4
   16b60:	bne	16bc4 <__flatcc_fb_codegen_c@@Base+0x15cc>
   16b64:	ldrh	r1, [r5, #24]
   16b68:	ldr	r2, [r5, #4]
   16b6c:	cmp	r1, #8
   16b70:	ldr	r7, [r2]
   16b74:	ldr	r6, [r2, #4]
   16b78:	beq	16be4 <__flatcc_fb_codegen_c@@Base+0x15ec>
   16b7c:	cmp	r1, #14
   16b80:	bne	16bb0 <__flatcc_fb_codegen_c@@Base+0x15b8>
   16b84:	ldr	r1, [r5, #16]
   16b88:	add	r2, sp, #268	; 0x10c
   16b8c:	ldr	r0, [r1, #12]
   16b90:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   16b94:	ldr	r2, [r5, #16]
   16b98:	ldrh	r3, [r2, #8]
   16b9c:	cmp	r3, #1
   16ba0:	beq	16ecc <__flatcc_fb_codegen_c@@Base+0x18d4>
   16ba4:	cmp	r3, #3
   16ba8:	beq	16cb8 <__flatcc_fb_codegen_c@@Base+0x16c0>
   16bac:	ldrh	r3, [r5, #72]	; 0x48
   16bb0:	and	r3, r3, #128	; 0x80
   16bb4:	cmp	r3, #0
   16bb8:	beq	16bc4 <__flatcc_fb_codegen_c@@Base+0x15cc>
   16bbc:	cmp	r9, #0
   16bc0:	beq	16c2c <__flatcc_fb_codegen_c@@Base+0x1634>
   16bc4:	ldr	r5, [r5]
   16bc8:	cmp	r5, #0
   16bcc:	bne	16b58 <__flatcc_fb_codegen_c@@Base+0x1560>
   16bd0:	ldr	r1, [r4, #204]	; 0xcc
   16bd4:	mov	r0, #10
   16bd8:	bl	13fe4 <fputc@plt>
   16bdc:	add	sp, sp, #492	; 0x1ec
   16be0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16be4:	ldr	r3, [r5, #16]
   16be8:	cmp	r3, #5
   16bec:	beq	16ef0 <__flatcc_fb_codegen_c@@Base+0x18f8>
   16bf0:	sub	r3, r3, #1
   16bf4:	cmp	r3, #10
   16bf8:	ldrls	pc, [pc, r3, lsl #2]
   16bfc:	b	16e7c <__flatcc_fb_codegen_c@@Base+0x1884>
   16c00:	andeq	r6, r1, r4, asr #31
   16c04:	ldrdeq	r6, [r1], -r4
   16c08:	andeq	r6, r1, r4, ror #31
   16c0c:			; <UNDEFINED> instruction: 0x00016fb4
   16c10:	andeq	r6, r1, ip, ror lr
   16c14:	andeq	r6, r1, r4, lsl #31
   16c18:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   16c1c:	andeq	r6, r1, r4, lsr #31
   16c20:	andeq	r6, r1, r4, asr pc
   16c24:	andeq	r6, r1, r4, ror #30
   16c28:	andeq	r6, r1, r4, ror pc
   16c2c:	ldr	r3, [r4, #204]	; 0xcc
   16c30:	mov	r2, #84	; 0x54
   16c34:	mov	r1, #1
   16c38:	mov	r0, fp
   16c3c:	bl	13f18 <fwrite@plt>
   16c40:	mov	r8, #1
   16c44:	b	16bc4 <__flatcc_fb_codegen_c@@Base+0x15cc>
   16c48:	ldr	r3, [r4, #204]	; 0xcc
   16c4c:	mov	r2, #16
   16c50:	mov	r1, #1
   16c54:	ldr	r0, [pc, #1368]	; 171b4 <__flatcc_fb_codegen_c@@Base+0x1bbc>
   16c58:	bl	13f18 <fwrite@plt>
   16c5c:	add	r2, sp, #48	; 0x30
   16c60:	ldr	r1, [pc, #1224]	; 17130 <__flatcc_fb_codegen_c@@Base+0x1b38>
   16c64:	ldr	r0, [r4, #204]	; 0xcc
   16c68:	bl	13f84 <fprintf@plt>
   16c6c:	ldr	r5, [fp, #20]
   16c70:	cmp	r5, #0
   16c74:	bne	16730 <__flatcc_fb_codegen_c@@Base+0x1138>
   16c78:	mov	r2, r5
   16c7c:	str	r5, [sp, #44]	; 0x2c
   16c80:	ldr	r3, [fp, #112]	; 0x70
   16c84:	subs	r3, r3, r2
   16c88:	bne	16ff4 <__flatcc_fb_codegen_c@@Base+0x19fc>
   16c8c:	ldr	r3, [r4, #204]	; 0xcc
   16c90:	mov	r2, #3
   16c94:	mov	r1, #1
   16c98:	ldr	r0, [pc, #1180]	; 1713c <__flatcc_fb_codegen_c@@Base+0x1b44>
   16c9c:	bl	13f18 <fwrite@plt>
   16ca0:	ldr	r3, [r4, #204]	; 0xcc
   16ca4:	mov	r2, #15
   16ca8:	mov	r1, #1
   16cac:	ldr	r0, [pc, #1284]	; 171b8 <__flatcc_fb_codegen_c@@Base+0x1bc0>
   16cb0:	bl	13f18 <fwrite@plt>
   16cb4:	b	1687c <__flatcc_fb_codegen_c@@Base+0x1284>
   16cb8:	ldr	r3, [r2, #40]	; 0x28
   16cbc:	sub	r3, r3, #1
   16cc0:	cmp	r3, #10
   16cc4:	bhi	17088 <__flatcc_fb_codegen_c@@Base+0x1a90>
   16cc8:	add	r3, sp, #268	; 0x10c
   16ccc:	ldr	r0, [r4, #204]	; 0xcc
   16cd0:	mov	r2, r4
   16cd4:	str	r3, [sp, #12]
   16cd8:	str	r3, [sp, #8]
   16cdc:	stm	sp, {r6, r7}
   16ce0:	add	r3, sp, #48	; 0x30
   16ce4:	ldr	r1, [pc, #1232]	; 171bc <__flatcc_fb_codegen_c@@Base+0x1bc4>
   16ce8:	bl	13f84 <fprintf@plt>
   16cec:	ldr	r3, [r4, #212]	; 0xd4
   16cf0:	ldr	r3, [r3, #32]
   16cf4:	cmp	r3, #0
   16cf8:	bne	16d28 <__flatcc_fb_codegen_c@@Base+0x1730>
   16cfc:	ldrh	r3, [r5, #72]	; 0x48
   16d00:	tst	r3, #128	; 0x80
   16d04:	beq	16bc4 <__flatcc_fb_codegen_c@@Base+0x15cc>
   16d08:	add	r3, sp, #268	; 0x10c
   16d0c:	ldr	r0, [r4, #204]	; 0xcc
   16d10:	mov	r2, r4
   16d14:	str	r3, [sp, #8]
   16d18:	stm	sp, {r6, r7}
   16d1c:	add	r3, sp, #48	; 0x30
   16d20:	ldr	r1, [pc, #1176]	; 171c0 <__flatcc_fb_codegen_c@@Base+0x1bc8>
   16d24:	bl	13f84 <fprintf@plt>
   16d28:	ldrh	r3, [r5, #72]	; 0x48
   16d2c:	tst	r3, #128	; 0x80
   16d30:	beq	16bc4 <__flatcc_fb_codegen_c@@Base+0x15cc>
   16d34:	cmp	r8, #0
   16d38:	ldr	r3, [r4, #204]	; 0xcc
   16d3c:	bne	17008 <__flatcc_fb_codegen_c@@Base+0x1a10>
   16d40:	mov	r2, #61	; 0x3d
   16d44:	mov	r1, #1
   16d48:	ldr	r0, [pc, #1140]	; 171c4 <__flatcc_fb_codegen_c@@Base+0x1bcc>
   16d4c:	bl	13f18 <fwrite@plt>
   16d50:	add	r3, sp, #268	; 0x10c
   16d54:	ldr	r0, [r4, #204]	; 0xcc
   16d58:	mov	r2, r4
   16d5c:	str	r3, [sp, #8]
   16d60:	stm	sp, {r6, r7}
   16d64:	add	r3, sp, #48	; 0x30
   16d68:	ldr	r1, [pc, #1112]	; 171c8 <__flatcc_fb_codegen_c@@Base+0x1bd0>
   16d6c:	bl	13f84 <fprintf@plt>
   16d70:	ldr	r3, [r4, #212]	; 0xd4
   16d74:	ldr	r3, [r3, #136]	; 0x88
   16d78:	cmp	r3, #0
   16d7c:	beq	16da8 <__flatcc_fb_codegen_c@@Base+0x17b0>
   16d80:	add	r3, sp, #48	; 0x30
   16d84:	ldr	r0, [r4, #204]	; 0xcc
   16d88:	str	r3, [sp, #12]
   16d8c:	add	r3, sp, #268	; 0x10c
   16d90:	str	r3, [sp, #8]
   16d94:	stm	sp, {r6, r7}
   16d98:	add	r3, sp, #48	; 0x30
   16d9c:	mov	r2, r4
   16da0:	ldr	r1, [pc, #1060]	; 171cc <__flatcc_fb_codegen_c@@Base+0x1bd4>
   16da4:	bl	13f84 <fprintf@plt>
   16da8:	add	r3, sp, #268	; 0x10c
   16dac:	ldr	r0, [r4, #204]	; 0xcc
   16db0:	mov	r2, r4
   16db4:	str	r3, [sp, #8]
   16db8:	ldr	r1, [pc, #1040]	; 171d0 <__flatcc_fb_codegen_c@@Base+0x1bd8>
   16dbc:	add	r3, sp, #48	; 0x30
   16dc0:	stm	sp, {r6, r7}
   16dc4:	bl	13f84 <fprintf@plt>
   16dc8:	add	r3, sp, #268	; 0x10c
   16dcc:	ldr	r0, [r4, #204]	; 0xcc
   16dd0:	mov	r2, r4
   16dd4:	str	r3, [sp, #8]
   16dd8:	stm	sp, {r6, r7}
   16ddc:	add	r3, sp, #48	; 0x30
   16de0:	ldr	r1, [pc, #1004]	; 171d4 <__flatcc_fb_codegen_c@@Base+0x1bdc>
   16de4:	bl	13f84 <fprintf@plt>
   16de8:	ldr	r3, [r4, #212]	; 0xd4
   16dec:	ldr	r3, [r3, #136]	; 0x88
   16df0:	cmp	r3, #0
   16df4:	bne	170bc <__flatcc_fb_codegen_c@@Base+0x1ac4>
   16df8:	mov	r8, #1
   16dfc:	mov	r9, r8
   16e00:	b	16bc4 <__flatcc_fb_codegen_c@@Base+0x15cc>
   16e04:	ldr	r3, [pc, #972]	; 171d8 <__flatcc_fb_codegen_c@@Base+0x1be0>
   16e08:	mov	r2, r4
   16e0c:	ldr	r1, [sp, #28]
   16e10:	cmp	r1, #0
   16e14:	beq	16eb0 <__flatcc_fb_codegen_c@@Base+0x18b8>
   16e18:	ldr	r1, [pc, #956]	; 171dc <__flatcc_fb_codegen_c@@Base+0x1be4>
   16e1c:	ldr	r0, [r4, #204]	; 0xcc
   16e20:	bl	13f84 <fprintf@plt>
   16e24:	b	1698c <__flatcc_fb_codegen_c@@Base+0x1394>
   16e28:	ldr	r2, [pc, #748]	; 1711c <__flatcc_fb_codegen_c@@Base+0x1b24>
   16e2c:	ldr	r3, [pc, #940]	; 171e0 <__flatcc_fb_codegen_c@@Base+0x1be8>
   16e30:	b	16e0c <__flatcc_fb_codegen_c@@Base+0x1814>
   16e34:	ldr	r2, [pc, #736]	; 1711c <__flatcc_fb_codegen_c@@Base+0x1b24>
   16e38:	ldr	r3, [pc, #932]	; 171e4 <__flatcc_fb_codegen_c@@Base+0x1bec>
   16e3c:	b	16e0c <__flatcc_fb_codegen_c@@Base+0x1814>
   16e40:	ldr	r2, [pc, #724]	; 1711c <__flatcc_fb_codegen_c@@Base+0x1b24>
   16e44:	ldr	r3, [pc, #924]	; 171e8 <__flatcc_fb_codegen_c@@Base+0x1bf0>
   16e48:	b	16e0c <__flatcc_fb_codegen_c@@Base+0x1814>
   16e4c:	ldr	r2, [pc, #712]	; 1711c <__flatcc_fb_codegen_c@@Base+0x1b24>
   16e50:	ldr	r3, [pc, #916]	; 171ec <__flatcc_fb_codegen_c@@Base+0x1bf4>
   16e54:	b	16e0c <__flatcc_fb_codegen_c@@Base+0x1814>
   16e58:	ldr	r2, [pc, #700]	; 1711c <__flatcc_fb_codegen_c@@Base+0x1b24>
   16e5c:	ldr	r3, [pc, #908]	; 171f0 <__flatcc_fb_codegen_c@@Base+0x1bf8>
   16e60:	b	16e0c <__flatcc_fb_codegen_c@@Base+0x1814>
   16e64:	ldr	r2, [pc, #688]	; 1711c <__flatcc_fb_codegen_c@@Base+0x1b24>
   16e68:	ldr	r3, [pc, #900]	; 171f4 <__flatcc_fb_codegen_c@@Base+0x1bfc>
   16e6c:	b	16e0c <__flatcc_fb_codegen_c@@Base+0x1814>
   16e70:	ldr	r2, [pc, #676]	; 1711c <__flatcc_fb_codegen_c@@Base+0x1b24>
   16e74:	ldr	r3, [pc, #892]	; 171f8 <__flatcc_fb_codegen_c@@Base+0x1c00>
   16e78:	b	16e0c <__flatcc_fb_codegen_c@@Base+0x1814>
   16e7c:	ldr	r1, [pc, #740]	; 17168 <__flatcc_fb_codegen_c@@Base+0x1b70>
   16e80:	ldr	r2, [pc, #740]	; 1716c <__flatcc_fb_codegen_c@@Base+0x1b74>
   16e84:	mov	r3, #141	; 0x8d
   16e88:	ldr	r0, [r1]
   16e8c:	str	r2, [sp]
   16e90:	ldr	r1, [pc, #732]	; 17174 <__flatcc_fb_codegen_c@@Base+0x1b7c>
   16e94:	ldr	r2, [pc, #864]	; 171fc <__flatcc_fb_codegen_c@@Base+0x1c04>
   16e98:	bl	13f84 <fprintf@plt>
   16e9c:	ldr	r3, [pc, #860]	; 17200 <__flatcc_fb_codegen_c@@Base+0x1c08>
   16ea0:	mov	r2, #141	; 0x8d
   16ea4:	ldr	r1, [pc, #848]	; 171fc <__flatcc_fb_codegen_c@@Base+0x1c04>
   16ea8:	ldr	r0, [pc, #720]	; 17180 <__flatcc_fb_codegen_c@@Base+0x1b88>
   16eac:	bl	14038 <__assert_fail@plt>
   16eb0:	ldr	r0, [r4, #204]	; 0xcc
   16eb4:	ldr	r1, [pc, #840]	; 17204 <__flatcc_fb_codegen_c@@Base+0x1c0c>
   16eb8:	str	r3, [sp]
   16ebc:	mov	r3, r2
   16ec0:	ldr	r2, [sp, #32]
   16ec4:	bl	13f84 <fprintf@plt>
   16ec8:	b	1698c <__flatcc_fb_codegen_c@@Base+0x1394>
   16ecc:	add	r3, sp, #268	; 0x10c
   16ed0:	ldr	r0, [r4, #204]	; 0xcc
   16ed4:	mov	r2, r4
   16ed8:	str	r3, [sp, #8]
   16edc:	stm	sp, {r6, r7}
   16ee0:	add	r3, sp, #48	; 0x30
   16ee4:	ldr	r1, [pc, #796]	; 17208 <__flatcc_fb_codegen_c@@Base+0x1c10>
   16ee8:	bl	13f84 <fprintf@plt>
   16eec:	b	16bac <__flatcc_fb_codegen_c@@Base+0x15b4>
   16ef0:	ldr	r1, [pc, #736]	; 171d8 <__flatcc_fb_codegen_c@@Base+0x1be0>
   16ef4:	ldr	r3, [pc, #784]	; 1720c <__flatcc_fb_codegen_c@@Base+0x1c14>
   16ef8:	mov	r2, r4
   16efc:	ldr	r0, [r4, #204]	; 0xcc
   16f00:	str	r1, [sp, #20]
   16f04:	str	r2, [sp, #16]
   16f08:	str	r3, [sp, #12]
   16f0c:	str	r4, [sp, #8]
   16f10:	add	r3, sp, #48	; 0x30
   16f14:	stm	sp, {r6, r7}
   16f18:	mov	r2, r4
   16f1c:	ldr	r1, [pc, #748]	; 17210 <__flatcc_fb_codegen_c@@Base+0x1c18>
   16f20:	bl	13f84 <fprintf@plt>
   16f24:	ldrh	r3, [r5, #72]	; 0x48
   16f28:	and	r3, r3, #128	; 0x80
   16f2c:	b	16bb4 <__flatcc_fb_codegen_c@@Base+0x15bc>
   16f30:	ldr	r2, [pc, #484]	; 1711c <__flatcc_fb_codegen_c@@Base+0x1b24>
   16f34:	ldr	r3, [pc, #728]	; 17214 <__flatcc_fb_codegen_c@@Base+0x1c1c>
   16f38:	b	16e0c <__flatcc_fb_codegen_c@@Base+0x1814>
   16f3c:	ldr	r2, [pc, #472]	; 1711c <__flatcc_fb_codegen_c@@Base+0x1b24>
   16f40:	ldr	r3, [pc, #720]	; 17218 <__flatcc_fb_codegen_c@@Base+0x1c20>
   16f44:	b	16e0c <__flatcc_fb_codegen_c@@Base+0x1814>
   16f48:	ldr	r2, [pc, #460]	; 1711c <__flatcc_fb_codegen_c@@Base+0x1b24>
   16f4c:	ldr	r3, [pc, #712]	; 1721c <__flatcc_fb_codegen_c@@Base+0x1c24>
   16f50:	b	16e0c <__flatcc_fb_codegen_c@@Base+0x1814>
   16f54:	ldr	r1, [pc, #664]	; 171f4 <__flatcc_fb_codegen_c@@Base+0x1bfc>
   16f58:	mov	r2, sl
   16f5c:	ldr	r3, [pc, #700]	; 17220 <__flatcc_fb_codegen_c@@Base+0x1c28>
   16f60:	b	16efc <__flatcc_fb_codegen_c@@Base+0x1904>
   16f64:	ldr	r1, [pc, #644]	; 171f0 <__flatcc_fb_codegen_c@@Base+0x1bf8>
   16f68:	mov	r2, sl
   16f6c:	mov	r3, r1
   16f70:	b	16efc <__flatcc_fb_codegen_c@@Base+0x1904>
   16f74:	ldr	r1, [pc, #620]	; 171e8 <__flatcc_fb_codegen_c@@Base+0x1bf0>
   16f78:	mov	r2, sl
   16f7c:	mov	r3, r1
   16f80:	b	16efc <__flatcc_fb_codegen_c@@Base+0x1904>
   16f84:	ldr	r1, [pc, #600]	; 171e4 <__flatcc_fb_codegen_c@@Base+0x1bec>
   16f88:	mov	r2, sl
   16f8c:	ldr	r3, [pc, #656]	; 17224 <__flatcc_fb_codegen_c@@Base+0x1c2c>
   16f90:	b	16efc <__flatcc_fb_codegen_c@@Base+0x1904>
   16f94:	ldr	r1, [pc, #580]	; 171e0 <__flatcc_fb_codegen_c@@Base+0x1be8>
   16f98:	mov	r2, sl
   16f9c:	ldr	r3, [pc, #644]	; 17228 <__flatcc_fb_codegen_c@@Base+0x1c30>
   16fa0:	b	16efc <__flatcc_fb_codegen_c@@Base+0x1904>
   16fa4:	ldr	r1, [pc, #588]	; 171f8 <__flatcc_fb_codegen_c@@Base+0x1c00>
   16fa8:	mov	r2, sl
   16fac:	ldr	r3, [pc, #632]	; 1722c <__flatcc_fb_codegen_c@@Base+0x1c34>
   16fb0:	b	16efc <__flatcc_fb_codegen_c@@Base+0x1904>
   16fb4:	ldr	r1, [pc, #560]	; 171ec <__flatcc_fb_codegen_c@@Base+0x1bf4>
   16fb8:	mov	r2, sl
   16fbc:	ldr	r3, [pc, #620]	; 17230 <__flatcc_fb_codegen_c@@Base+0x1c38>
   16fc0:	b	16efc <__flatcc_fb_codegen_c@@Base+0x1904>
   16fc4:	ldr	r1, [pc, #588]	; 17218 <__flatcc_fb_codegen_c@@Base+0x1c20>
   16fc8:	mov	r2, sl
   16fcc:	ldr	r3, [pc, #608]	; 17234 <__flatcc_fb_codegen_c@@Base+0x1c3c>
   16fd0:	b	16efc <__flatcc_fb_codegen_c@@Base+0x1904>
   16fd4:	ldr	r1, [pc, #576]	; 1721c <__flatcc_fb_codegen_c@@Base+0x1c24>
   16fd8:	mov	r2, sl
   16fdc:	ldr	r3, [pc, #596]	; 17238 <__flatcc_fb_codegen_c@@Base+0x1c40>
   16fe0:	b	16efc <__flatcc_fb_codegen_c@@Base+0x1904>
   16fe4:	ldr	r1, [pc, #552]	; 17214 <__flatcc_fb_codegen_c@@Base+0x1c1c>
   16fe8:	ldr	r3, [pc, #588]	; 1723c <__flatcc_fb_codegen_c@@Base+0x1c44>
   16fec:	mov	r2, sl
   16ff0:	b	16efc <__flatcc_fb_codegen_c@@Base+0x1904>
   16ff4:	ldr	r2, [sp, #44]	; 0x2c
   16ff8:	ldr	r1, [pc, #400]	; 17190 <__flatcc_fb_codegen_c@@Base+0x1b98>
   16ffc:	ldr	r0, [r4, #204]	; 0xcc
   17000:	bl	13f84 <fprintf@plt>
   17004:	b	16c8c <__flatcc_fb_codegen_c@@Base+0x1694>
   17008:	mov	r2, #66	; 0x42
   1700c:	mov	r1, #1
   17010:	ldr	r0, [pc, #552]	; 17240 <__flatcc_fb_codegen_c@@Base+0x1c48>
   17014:	bl	13f18 <fwrite@plt>
   17018:	ldr	r3, [r4, #204]	; 0xcc
   1701c:	mov	r2, #61	; 0x3d
   17020:	mov	r1, #1
   17024:	ldr	r0, [pc, #408]	; 171c4 <__flatcc_fb_codegen_c@@Base+0x1bcc>
   17028:	bl	13f18 <fwrite@plt>
   1702c:	add	r3, sp, #268	; 0x10c
   17030:	ldr	r0, [r4, #204]	; 0xcc
   17034:	mov	r2, r4
   17038:	str	r3, [sp, #8]
   1703c:	stm	sp, {r6, r7}
   17040:	add	r3, sp, #48	; 0x30
   17044:	ldr	r1, [pc, #380]	; 171c8 <__flatcc_fb_codegen_c@@Base+0x1bd0>
   17048:	bl	13f84 <fprintf@plt>
   1704c:	ldr	r3, [r4, #212]	; 0xd4
   17050:	ldr	r3, [r3, #136]	; 0x88
   17054:	cmp	r3, #0
   17058:	beq	16df8 <__flatcc_fb_codegen_c@@Base+0x1800>
   1705c:	add	r3, sp, #48	; 0x30
   17060:	ldr	r0, [r4, #204]	; 0xcc
   17064:	str	r3, [sp, #12]
   17068:	add	r3, sp, #268	; 0x10c
   1706c:	str	r3, [sp, #8]
   17070:	stm	sp, {r6, r7}
   17074:	add	r3, sp, #48	; 0x30
   17078:	mov	r2, r4
   1707c:	ldr	r1, [pc, #328]	; 171cc <__flatcc_fb_codegen_c@@Base+0x1bd4>
   17080:	bl	13f84 <fprintf@plt>
   17084:	b	16df8 <__flatcc_fb_codegen_c@@Base+0x1800>
   17088:	ldr	r1, [pc, #216]	; 17168 <__flatcc_fb_codegen_c@@Base+0x1b70>
   1708c:	ldr	r2, [pc, #216]	; 1716c <__flatcc_fb_codegen_c@@Base+0x1b74>
   17090:	mov	r3, #96	; 0x60
   17094:	ldr	r0, [r1]
   17098:	str	r2, [sp]
   1709c:	ldr	r1, [pc, #208]	; 17174 <__flatcc_fb_codegen_c@@Base+0x1b7c>
   170a0:	ldr	r2, [pc, #340]	; 171fc <__flatcc_fb_codegen_c@@Base+0x1c04>
   170a4:	bl	13f84 <fprintf@plt>
   170a8:	ldr	r3, [pc, #404]	; 17244 <__flatcc_fb_codegen_c@@Base+0x1c4c>
   170ac:	mov	r2, #96	; 0x60
   170b0:	ldr	r1, [pc, #324]	; 171fc <__flatcc_fb_codegen_c@@Base+0x1c04>
   170b4:	ldr	r0, [pc, #196]	; 17180 <__flatcc_fb_codegen_c@@Base+0x1b88>
   170b8:	bl	14038 <__assert_fail@plt>
   170bc:	add	r3, sp, #48	; 0x30
   170c0:	ldr	r0, [r4, #204]	; 0xcc
   170c4:	mov	r2, r3
   170c8:	stm	sp, {r6, r7}
   170cc:	ldr	r1, [pc, #372]	; 17248 <__flatcc_fb_codegen_c@@Base+0x1c50>
   170d0:	mov	r8, #1
   170d4:	bl	13f84 <fprintf@plt>
   170d8:	mov	r9, r8
   170dc:	b	16bc4 <__flatcc_fb_codegen_c@@Base+0x15cc>
   170e0:	ldr	r3, [pc, #148]	; 1717c <__flatcc_fb_codegen_c@@Base+0x1b84>
   170e4:	ldr	r2, [pc, #352]	; 1724c <__flatcc_fb_codegen_c@@Base+0x1c54>
   170e8:	ldr	r1, [pc, #136]	; 17178 <__flatcc_fb_codegen_c@@Base+0x1b80>
   170ec:	ldr	r0, [pc, #348]	; 17250 <__flatcc_fb_codegen_c@@Base+0x1c58>
   170f0:	bl	14038 <__assert_fail@plt>
   170f4:	ldr	r3, [pc, #128]	; 1717c <__flatcc_fb_codegen_c@@Base+0x1b84>
   170f8:	ldr	r2, [pc, #340]	; 17254 <__flatcc_fb_codegen_c@@Base+0x1c5c>
   170fc:	ldr	r1, [pc, #116]	; 17178 <__flatcc_fb_codegen_c@@Base+0x1b80>
   17100:	ldr	r0, [pc, #336]	; 17258 <__flatcc_fb_codegen_c@@Base+0x1c60>
   17104:	bl	14038 <__assert_fail@plt>
   17108:	ldr	r3, [pc, #108]	; 1717c <__flatcc_fb_codegen_c@@Base+0x1b84>
   1710c:	mov	r2, #936	; 0x3a8
   17110:	ldr	r1, [pc, #96]	; 17178 <__flatcc_fb_codegen_c@@Base+0x1b80>
   17114:	ldr	r0, [pc, #320]	; 1725c <__flatcc_fb_codegen_c@@Base+0x1c64>
   17118:	bl	14038 <__assert_fail@plt>
   1711c:	andeq	fp, r4, ip, lsr #24
   17120:	andeq	r2, r4, r8
   17124:	andeq	r2, r4, r0
   17128:	andeq	sl, r4, r4, lsr sp
   1712c:	andeq	r2, r4, r4, lsr sl
   17130:	andeq	r2, r4, r8, asr #9
   17134:	ldrdeq	r2, [r4], -r8
   17138:	andeq	r2, r4, ip, asr #20
   1713c:			; <UNDEFINED> instruction: 0x0004a7b0
   17140:	ldrdeq	r2, [r4], -r4
   17144:	andeq	r2, r4, r4, lsl r6
   17148:	andeq	r2, r4, ip, ror #12
   1714c:			; <UNDEFINED> instruction: 0x000426b4
   17150:	andeq	r2, r4, r0, lsl #21
   17154:	andeq	r2, r4, r0, asr #5
   17158:	andeq	r2, r4, ip, lsl #11
   1715c:	andeq	r2, r4, ip, asr #11
   17160:	andeq	r2, r4, r4, lsr #11
   17164:	andeq	r2, r4, r4, asr #11
   17168:	andeq	sp, r6, r8, lsr #1
   1716c:	andeq	r1, r4, r8, asr #31
   17170:	andeq	r0, r0, r5, lsl #8
   17174:			; <UNDEFINED> instruction: 0x00041fbc
   17178:	andeq	r1, r4, ip, ror #24
   1717c:	strdeq	r1, [r4], -ip
   17180:	andeq	sl, r4, r4, asr sp
   17184:	andeq	r0, r0, sl, lsr #7
   17188:	andeq	r2, r4, r8, asr #6
   1718c:	andeq	r2, r4, r0, lsl #11
   17190:	andeq	r2, r4, r0, ror #9
   17194:	andeq	r2, r4, r8, ror #6
   17198:	andeq	r2, r4, ip, asr #7
   1719c:	andeq	r2, r4, r0, lsr #8
   171a0:	andeq	r2, r4, r4, ror #8
   171a4:	andeq	r2, r4, ip, lsl #14
   171a8:	andeq	r2, r4, r0, asr #14
   171ac:	andeq	r2, r4, r0, lsl #15
   171b0:	andeq	r2, r4, r4, ror #19
   171b4:			; <UNDEFINED> instruction: 0x000424b4
   171b8:	andeq	r2, r4, ip, lsr sl
   171bc:	ldrdeq	r2, [r4], -r0
   171c0:	andeq	r2, r4, ip, lsl #16
   171c4:	andeq	r2, r4, r8, lsl #17
   171c8:	andeq	r2, r4, r8, asr #17
   171cc:	andeq	r2, r4, r0, asr #21
   171d0:	andeq	r2, r4, r0, lsl #18
   171d4:	andeq	r2, r4, r0, asr #18
   171d8:	andeq	r1, r4, r8, ror lr
   171dc:	andeq	r2, r4, r0, lsl #10
   171e0:	andeq	r1, r4, r8, lsl #29
   171e4:	andeq	r1, r4, r0, lsl #29
   171e8:	andeq	r1, r4, r0, lsr #29
   171ec:	andeq	r1, r4, r0, ror lr
   171f0:	andeq	r1, r4, r8, lsr #29
   171f4:	muleq	r4, r8, lr
   171f8:	muleq	r4, r0, lr
   171fc:	andeq	r1, r4, r0, ror pc
   17200:	andeq	r1, r4, ip, asr #23
   17204:	andeq	r2, r4, ip, lsl #10
   17208:	andeq	r2, r4, ip, lsr #19
   1720c:			; <UNDEFINED> instruction: 0x0005a5bc
   17210:	muleq	r4, r8, r7
   17214:	andeq	r1, r4, r4, ror #28
   17218:	andeq	r1, r4, ip, asr #28
   1721c:	andeq	r1, r4, r8, asr lr
   17220:	andeq	r2, r4, r0, lsl #6
   17224:	andeq	r2, r4, r8, ror #5
   17228:	strdeq	r2, [r4], -r0
   1722c:	strdeq	r2, [r4], -r8
   17230:	andeq	r2, r4, r0, ror #5
   17234:	andeq	r2, r4, r8, asr #5
   17238:	ldrdeq	r2, [r4], -r0
   1723c:	ldrdeq	r2, [r4], -r8
   17240:	andeq	r2, r4, r4, asr #16
   17244:	andeq	r1, r4, r8, lsl #24
   17248:	andeq	r2, r4, r0, lsl #19
   1724c:	strdeq	r0, [r0], -sl
   17250:	andeq	r2, r4, r4, lsr #10
   17254:	andeq	r0, r0, r9, lsr #7
   17258:	andeq	r2, r4, r8, lsr #6
   1725c:	andeq	r2, r4, r8, lsl #6
   17260:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17264:	sub	sp, sp, #1040	; 0x410
   17268:	ldrh	r6, [r1, #8]
   1726c:	sub	sp, sp, #12
   17270:	cmp	r6, #0
   17274:	str	r1, [sp, #40]	; 0x28
   17278:	bne	18844 <__flatcc_fb_codegen_c@@Base+0x324c>
   1727c:	mov	r4, r0
   17280:	mov	r2, #220	; 0xdc
   17284:	mov	r1, r6
   17288:	add	r0, sp, #168	; 0xa8
   1728c:	bl	13f9c <memset@plt>
   17290:	mov	r2, #220	; 0xdc
   17294:	mov	r1, r6
   17298:	add	r0, sp, #388	; 0x184
   1729c:	bl	13f9c <memset@plt>
   172a0:	ldr	r1, [r4, #204]	; 0xcc
   172a4:	mov	r0, #10
   172a8:	bl	13fe4 <fputc@plt>
   172ac:	ldr	r5, [sp, #40]	; 0x28
   172b0:	add	r2, sp, #168	; 0xa8
   172b4:	mov	r1, r5
   172b8:	ldr	r0, [r5, #12]
   172bc:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   172c0:	ldr	r5, [r5, #32]
   172c4:	cmp	r5, #0
   172c8:	beq	17350 <__flatcc_fb_codegen_c@@Base+0x1d58>
   172cc:	ldr	r8, [pc, #3964]	; 18250 <__flatcc_fb_codegen_c@@Base+0x2c58>
   172d0:	ldr	sl, [pc, #3964]	; 18254 <__flatcc_fb_codegen_c@@Base+0x2c5c>
   172d4:	ldr	r9, [pc, #3964]	; 18258 <__flatcc_fb_codegen_c@@Base+0x2c60>
   172d8:	ldr	r7, [pc, #3964]	; 1825c <__flatcc_fb_codegen_c@@Base+0x2c64>
   172dc:	mov	r1, r6
   172e0:	mov	r0, #1
   172e4:	ldr	r2, [r5, #4]
   172e8:	ldr	r3, [r2, #8]
   172ec:	cmp	r3, r1
   172f0:	beq	17310 <__flatcc_fb_codegen_c@@Base+0x1d18>
   172f4:	cmp	r0, #0
   172f8:	mov	r2, r8
   172fc:	movne	r1, r9
   17300:	moveq	r1, sl
   17304:	ldr	r0, [r4, #204]	; 0xcc
   17308:	bl	13f84 <fprintf@plt>
   1730c:	ldr	r2, [r5, #4]
   17310:	ldr	r3, [r2]
   17314:	mov	r1, r7
   17318:	ldr	r2, [r2, #4]
   1731c:	ldr	r0, [r4, #204]	; 0xcc
   17320:	bl	13f84 <fprintf@plt>
   17324:	ldr	r3, [r5, #4]
   17328:	ldr	r5, [r5]
   1732c:	mov	r0, r6
   17330:	cmp	r5, #0
   17334:	ldr	r1, [r3, #8]
   17338:	bne	172e4 <__flatcc_fb_codegen_c@@Base+0x1cec>
   1733c:	ldr	r3, [r4, #204]	; 0xcc
   17340:	mov	r2, #4
   17344:	mov	r1, #1
   17348:	ldr	r0, [pc, #3856]	; 18260 <__flatcc_fb_codegen_c@@Base+0x2c68>
   1734c:	bl	13f18 <fwrite@plt>
   17350:	add	r2, sp, #168	; 0xa8
   17354:	ldr	r1, [pc, #3848]	; 18264 <__flatcc_fb_codegen_c@@Base+0x2c6c>
   17358:	ldr	r0, [r4, #204]	; 0xcc
   1735c:	bl	13f84 <fprintf@plt>
   17360:	add	r3, sp, #168	; 0xa8
   17364:	mov	r2, r3
   17368:	ldr	r0, [r4, #204]	; 0xcc
   1736c:	ldr	r1, [pc, #3828]	; 18268 <__flatcc_fb_codegen_c@@Base+0x2c70>
   17370:	str	r4, [sp]
   17374:	bl	13f84 <fprintf@plt>
   17378:	add	r3, sp, #168	; 0xa8
   1737c:	ldr	r0, [r4, #204]	; 0xcc
   17380:	mov	r2, r3
   17384:	str	r3, [sp, #8]
   17388:	stm	sp, {r3, r4}
   1738c:	ldr	r1, [pc, #3800]	; 1826c <__flatcc_fb_codegen_c@@Base+0x2c74>
   17390:	bl	13f84 <fprintf@plt>
   17394:	add	r3, sp, #168	; 0xa8
   17398:	mov	r2, r4
   1739c:	ldr	r1, [pc, #3788]	; 18270 <__flatcc_fb_codegen_c@@Base+0x2c78>
   173a0:	ldr	r0, [r4, #204]	; 0xcc
   173a4:	bl	13f84 <fprintf@plt>
   173a8:	ldr	r1, [r4, #204]	; 0xcc
   173ac:	mov	r0, #10
   173b0:	bl	13fe4 <fputc@plt>
   173b4:	ldr	r3, [sp, #40]	; 0x28
   173b8:	ldr	r5, [r3, #20]
   173bc:	cmp	r5, #0
   173c0:	beq	174d8 <__flatcc_fb_codegen_c@@Base+0x1ee0>
   173c4:	ldr	r8, [pc, #3716]	; 18250 <__flatcc_fb_codegen_c@@Base+0x2c58>
   173c8:	ldr	sl, [pc, #3716]	; 18254 <__flatcc_fb_codegen_c@@Base+0x2c5c>
   173cc:	ldr	fp, [pc, #3716]	; 18258 <__flatcc_fb_codegen_c@@Base+0x2c60>
   173d0:	ldr	r9, [pc, #3716]	; 1825c <__flatcc_fb_codegen_c@@Base+0x2c64>
   173d4:	mov	r3, #0
   173d8:	str	r3, [sp, #44]	; 0x2c
   173dc:	ldr	r6, [r5, #68]	; 0x44
   173e0:	cmp	r6, #0
   173e4:	beq	17460 <__flatcc_fb_codegen_c@@Base+0x1e68>
   173e8:	mov	r3, #0
   173ec:	mov	r7, r3
   173f0:	mov	r0, #1
   173f4:	ldr	r2, [r6, #4]
   173f8:	ldr	r1, [r2, #8]
   173fc:	cmp	r1, r3
   17400:	beq	17420 <__flatcc_fb_codegen_c@@Base+0x1e28>
   17404:	cmp	r0, #0
   17408:	mov	r2, r8
   1740c:	movne	r1, fp
   17410:	moveq	r1, sl
   17414:	ldr	r0, [r4, #204]	; 0xcc
   17418:	bl	13f84 <fprintf@plt>
   1741c:	ldr	r2, [r6, #4]
   17420:	ldr	r3, [r2]
   17424:	mov	r1, r9
   17428:	ldr	r2, [r2, #4]
   1742c:	ldr	r0, [r4, #204]	; 0xcc
   17430:	bl	13f84 <fprintf@plt>
   17434:	ldr	r3, [r6, #4]
   17438:	ldr	r6, [r6]
   1743c:	mov	r0, r7
   17440:	cmp	r6, #0
   17444:	ldr	r3, [r3, #8]
   17448:	bne	173f4 <__flatcc_fb_codegen_c@@Base+0x1dfc>
   1744c:	ldr	r3, [r4, #204]	; 0xcc
   17450:	mov	r2, #4
   17454:	mov	r1, #1
   17458:	ldr	r0, [pc, #3584]	; 18260 <__flatcc_fb_codegen_c@@Base+0x2c68>
   1745c:	bl	13f18 <fwrite@plt>
   17460:	ldrh	r3, [r5, #72]	; 0x48
   17464:	ldr	r2, [r5, #4]
   17468:	tst	r3, #4
   1746c:	ldm	r2, {r6, r7}
   17470:	bne	174b4 <__flatcc_fb_codegen_c@@Base+0x1ebc>
   17474:	ldrh	r2, [r5, #24]
   17478:	lsr	r3, r3, #8
   1747c:	and	r3, r3, #1
   17480:	sub	r2, r2, #7
   17484:	cmp	r2, #8
   17488:	ldrls	pc, [pc, r2, lsl #2]
   1748c:	b	177a0 <__flatcc_fb_codegen_c@@Base+0x21a8>
   17490:	andeq	r7, r1, r0, ror #14
   17494:	andeq	r7, r1, r8, lsl r7
   17498:	ldrdeq	r7, [r1], -ip
   1749c:	andeq	r7, r1, r8, asr #11
   174a0:	andeq	r7, r1, r0, lsr #15
   174a4:	andeq	r7, r1, r0, lsr #15
   174a8:	andeq	r7, r1, r0, lsr #15
   174ac:	andeq	r7, r1, r8, lsl #11
   174b0:	andeq	r7, r1, r4, ror #9
   174b4:	ldr	r0, [r4, #204]	; 0xcc
   174b8:	mov	r3, r7
   174bc:	str	r6, [sp]
   174c0:	add	r2, sp, #168	; 0xa8
   174c4:	ldr	r1, [pc, #3496]	; 18274 <__flatcc_fb_codegen_c@@Base+0x2c7c>
   174c8:	bl	13f84 <fprintf@plt>
   174cc:	ldr	r5, [r5]
   174d0:	cmp	r5, #0
   174d4:	bne	173dc <__flatcc_fb_codegen_c@@Base+0x1de4>
   174d8:	add	sp, sp, #1040	; 0x410
   174dc:	add	sp, sp, #12
   174e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   174e4:	ldr	r1, [r5, #16]
   174e8:	add	r2, sp, #388	; 0x184
   174ec:	str	r3, [sp, #48]	; 0x30
   174f0:	ldr	r0, [r1, #12]
   174f4:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   174f8:	ldr	r2, [r5, #16]
   174fc:	ldrh	r2, [r2, #8]
   17500:	cmp	r2, #4
   17504:	bhi	187d0 <__flatcc_fb_codegen_c@@Base+0x31d8>
   17508:	mov	r1, #1
   1750c:	ldr	r3, [sp, #48]	; 0x30
   17510:	lsl	r1, r1, r2
   17514:	tst	r1, #27
   17518:	beq	187d0 <__flatcc_fb_codegen_c@@Base+0x31d8>
   1751c:	str	r3, [sp, #24]
   17520:	add	r3, sp, #388	; 0x184
   17524:	str	r3, [sp, #20]
   17528:	cmp	r2, #4
   1752c:	add	r3, sp, #168	; 0xa8
   17530:	str	r6, [sp, #16]
   17534:	str	r7, [sp, #12]
   17538:	str	r3, [sp, #8]
   1753c:	ldrd	r6, [r5, #96]	; 0x60
   17540:	ldr	r0, [r4, #204]	; 0xcc
   17544:	beq	17ce4 <__flatcc_fb_codegen_c@@Base+0x26ec>
   17548:	mov	r2, r4
   1754c:	strd	r6, [sp]
   17550:	ldr	r1, [pc, #3360]	; 18278 <__flatcc_fb_codegen_c@@Base+0x2c80>
   17554:	bl	13f84 <fprintf@plt>
   17558:	ldrh	r3, [r5, #72]	; 0x48
   1755c:	and	r3, r3, #128	; 0x80
   17560:	cmp	r3, #0
   17564:	beq	174cc <__flatcc_fb_codegen_c@@Base+0x1ed4>
   17568:	ldr	r3, [r4, #204]	; 0xcc
   1756c:	mov	r2, #84	; 0x54
   17570:	mov	r1, #1
   17574:	ldr	r0, [pc, #3328]	; 1827c <__flatcc_fb_codegen_c@@Base+0x2c84>
   17578:	bl	13f18 <fwrite@plt>
   1757c:	mov	r3, #1
   17580:	str	r3, [sp, #44]	; 0x2c
   17584:	b	174cc <__flatcc_fb_codegen_c@@Base+0x1ed4>
   17588:	ldr	r1, [r5, #16]
   1758c:	add	r2, sp, #388	; 0x184
   17590:	str	r3, [sp, #48]	; 0x30
   17594:	ldr	r0, [r1, #12]
   17598:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1759c:	ldr	r1, [r5, #16]
   175a0:	ldr	r3, [sp, #48]	; 0x30
   175a4:	ldrh	r2, [r1, #8]
   175a8:	cmp	r2, #4
   175ac:	ldrls	pc, [pc, r2, lsl #2]
   175b0:	b	17a10 <__flatcc_fb_codegen_c@@Base+0x2418>
   175b4:	andeq	r7, r1, r0, lsl #17
   175b8:	andeq	r7, r1, r0, asr #16
   175bc:	andeq	r7, r1, r0, lsl sl
   175c0:	andeq	r7, r1, r8, lsl r8
   175c4:	ldrdeq	r7, [r1], -r4
   175c8:	str	r3, [sp, #20]
   175cc:	add	r3, sp, #168	; 0xa8
   175d0:	str	r6, [sp, #16]
   175d4:	str	r7, [sp, #12]
   175d8:	str	r3, [sp, #8]
   175dc:	ldrd	r0, [r5, #96]	; 0x60
   175e0:	ldr	r3, [r4, #204]	; 0xcc
   175e4:	mov	r2, r4
   175e8:	strd	r0, [sp]
   175ec:	mov	r0, r3
   175f0:	ldr	r1, [pc, #3208]	; 18280 <__flatcc_fb_codegen_c@@Base+0x2c88>
   175f4:	bl	13f84 <fprintf@plt>
   175f8:	ldr	r3, [r4, #212]	; 0xd4
   175fc:	ldr	r3, [r3, #32]
   17600:	cmp	r3, #0
   17604:	bne	17630 <__flatcc_fb_codegen_c@@Base+0x2038>
   17608:	ldrh	r3, [r5, #72]	; 0x48
   1760c:	tst	r3, #128	; 0x80
   17610:	beq	174cc <__flatcc_fb_codegen_c@@Base+0x1ed4>
   17614:	ldr	r0, [r4, #204]	; 0xcc
   17618:	add	r3, sp, #168	; 0xa8
   1761c:	str	r6, [sp, #4]
   17620:	str	r7, [sp]
   17624:	mov	r2, r4
   17628:	ldr	r1, [pc, #3156]	; 18284 <__flatcc_fb_codegen_c@@Base+0x2c8c>
   1762c:	bl	13f84 <fprintf@plt>
   17630:	ldrh	r3, [r5, #72]	; 0x48
   17634:	tst	r3, #128	; 0x80
   17638:	beq	174cc <__flatcc_fb_codegen_c@@Base+0x1ed4>
   1763c:	ldr	r3, [sp, #44]	; 0x2c
   17640:	cmp	r3, #0
   17644:	bne	179b0 <__flatcc_fb_codegen_c@@Base+0x23b8>
   17648:	ldr	r0, [r4, #204]	; 0xcc
   1764c:	add	r3, sp, #168	; 0xa8
   17650:	str	r6, [sp, #4]
   17654:	str	r7, [sp]
   17658:	mov	r2, r4
   1765c:	ldr	r1, [pc, #3108]	; 18288 <__flatcc_fb_codegen_c@@Base+0x2c90>
   17660:	bl	13f84 <fprintf@plt>
   17664:	ldr	r3, [r4, #212]	; 0xd4
   17668:	ldr	r3, [r3, #136]	; 0x88
   1766c:	cmp	r3, #0
   17670:	beq	17690 <__flatcc_fb_codegen_c@@Base+0x2098>
   17674:	ldr	r0, [r4, #204]	; 0xcc
   17678:	add	r3, sp, #168	; 0xa8
   1767c:	str	r6, [sp, #4]
   17680:	str	r7, [sp]
   17684:	mov	r2, r4
   17688:	ldr	r1, [pc, #3068]	; 1828c <__flatcc_fb_codegen_c@@Base+0x2c94>
   1768c:	bl	13f84 <fprintf@plt>
   17690:	ldr	r0, [r4, #204]	; 0xcc
   17694:	add	r3, sp, #168	; 0xa8
   17698:	mov	r2, r4
   1769c:	ldr	r1, [pc, #3052]	; 18290 <__flatcc_fb_codegen_c@@Base+0x2c98>
   176a0:	str	r6, [sp, #4]
   176a4:	str	r7, [sp]
   176a8:	bl	13f84 <fprintf@plt>
   176ac:	ldr	r0, [r4, #204]	; 0xcc
   176b0:	add	r3, sp, #168	; 0xa8
   176b4:	str	r6, [sp, #4]
   176b8:	str	r7, [sp]
   176bc:	mov	r2, r4
   176c0:	ldr	r1, [pc, #3020]	; 18294 <__flatcc_fb_codegen_c@@Base+0x2c9c>
   176c4:	bl	13f84 <fprintf@plt>
   176c8:	ldr	r3, [r4, #212]	; 0xd4
   176cc:	ldr	r3, [r3, #136]	; 0x88
   176d0:	cmp	r3, #0
   176d4:	beq	1757c <__flatcc_fb_codegen_c@@Base+0x1f84>
   176d8:	b	18114 <__flatcc_fb_codegen_c@@Base+0x2b1c>
   176dc:	str	r3, [sp, #24]
   176e0:	add	r3, sp, #168	; 0xa8
   176e4:	str	r3, [sp, #8]
   176e8:	str	r4, [sp, #20]
   176ec:	str	r6, [sp, #16]
   176f0:	str	r7, [sp, #12]
   176f4:	ldrd	r6, [r5, #96]	; 0x60
   176f8:	ldr	r0, [r4, #204]	; 0xcc
   176fc:	mov	r2, r4
   17700:	strd	r6, [sp]
   17704:	ldr	r1, [pc, #2956]	; 18298 <__flatcc_fb_codegen_c@@Base+0x2ca0>
   17708:	bl	13f84 <fprintf@plt>
   1770c:	ldrh	r3, [r5, #72]	; 0x48
   17710:	and	r3, r3, #128	; 0x80
   17714:	b	17560 <__flatcc_fb_codegen_c@@Base+0x1f68>
   17718:	ldr	r2, [r5, #16]
   1771c:	cmp	r2, #5
   17720:	beq	17a44 <__flatcc_fb_codegen_c@@Base+0x244c>
   17724:	sub	r3, r2, #1
   17728:	cmp	r3, #10
   1772c:	ldrls	pc, [pc, r3, lsl #2]
   17730:	b	18184 <__flatcc_fb_codegen_c@@Base+0x2b8c>
   17734:	strdeq	r7, [r1], -r0
   17738:	ldrdeq	r7, [r1], -r4
   1773c:	muleq	r1, r8, lr
   17740:	andeq	r7, r1, r0, lsl #29
   17744:	andeq	r8, r1, r4, lsl #3
   17748:	andeq	r7, r1, r0, asr lr
   1774c:	andeq	r7, r1, r8, ror #28
   17750:	andeq	r7, r1, r8, lsl #28
   17754:	andeq	r7, r1, ip, lsr #28
   17758:			; <UNDEFINED> instruction: 0x00017eb0
   1775c:	andeq	r7, r1, ip, asr #27
   17760:	ldr	r2, [r5, #16]
   17764:	sub	r2, r2, #1
   17768:	cmp	r2, #10
   1776c:	ldrls	pc, [pc, r2, lsl #2]
   17770:	b	186f0 <__flatcc_fb_codegen_c@@Base+0x30f8>
   17774:	andeq	r7, r1, r4, asr #27
   17778:	andeq	r7, r1, r4, lsl #27
   1777c:	andeq	r7, r1, ip, lsr #27
   17780:	andeq	r7, r1, r0, asr #17
   17784:	andeq	r7, r1, r0, asr #17
   17788:			; <UNDEFINED> instruction: 0x00017dbc
   1778c:	andeq	r7, r1, ip, lsl #27
   17790:	muleq	r1, r4, sp
   17794:	muleq	r1, ip, sp
   17798:	andeq	r7, r1, r4, lsr #27
   1779c:			; <UNDEFINED> instruction: 0x00017db4
   177a0:	ldr	r1, [pc, #3084]	; 183b4 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   177a4:	ldr	r2, [pc, #2800]	; 1829c <__flatcc_fb_codegen_c@@Base+0x2ca4>
   177a8:	ldr	r3, [pc, #2800]	; 182a0 <__flatcc_fb_codegen_c@@Base+0x2ca8>
   177ac:	ldr	r0, [r1]
   177b0:	str	r2, [sp]
   177b4:	ldr	r1, [pc, #3072]	; 183bc <__flatcc_fb_codegen_c@@Base+0x2dc4>
   177b8:	ldr	r2, [pc, #3092]	; 183d4 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   177bc:	bl	13f84 <fprintf@plt>
   177c0:	ldr	r3, [pc, #3068]	; 183c4 <__flatcc_fb_codegen_c@@Base+0x2dcc>
   177c4:	ldr	r2, [pc, #2772]	; 182a0 <__flatcc_fb_codegen_c@@Base+0x2ca8>
   177c8:	ldr	r1, [pc, #3076]	; 183d4 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   177cc:	ldr	r0, [pc, #3052]	; 183c0 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   177d0:	bl	14038 <__assert_fail@plt>
   177d4:	str	r3, [sp, #24]
   177d8:	add	r3, sp, #388	; 0x184
   177dc:	str	r3, [sp, #20]
   177e0:	add	r3, sp, #168	; 0xa8
   177e4:	str	r3, [sp, #8]
   177e8:	str	r6, [sp, #16]
   177ec:	str	r7, [sp, #12]
   177f0:	ldrd	r6, [r5, #96]	; 0x60
   177f4:	ldr	r0, [r4, #204]	; 0xcc
   177f8:	mov	r3, r4
   177fc:	strd	r6, [sp]
   17800:	mov	r2, r4
   17804:	ldr	r1, [pc, #2712]	; 182a4 <__flatcc_fb_codegen_c@@Base+0x2cac>
   17808:	bl	13f84 <fprintf@plt>
   1780c:	ldrh	r3, [r5, #72]	; 0x48
   17810:	and	r3, r3, #128	; 0x80
   17814:	b	17560 <__flatcc_fb_codegen_c@@Base+0x1f68>
   17818:	ldrh	r2, [r5, #56]	; 0x38
   1781c:	ldr	r3, [r1, #40]	; 0x28
   17820:	sub	r2, r2, #3
   17824:	cmp	r2, #3
   17828:	ldrls	pc, [pc, r2, lsl #2]
   1782c:	b	17d14 <__flatcc_fb_codegen_c@@Base+0x271c>
   17830:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   17834:	andeq	r7, r1, r0, ror #30
   17838:	andeq	r7, r1, ip, lsr #30
   1783c:	strdeq	r7, [r1], -r8
   17840:	str	r3, [sp, #24]
   17844:	add	r3, sp, #388	; 0x184
   17848:	str	r3, [sp, #20]
   1784c:	add	r3, sp, #168	; 0xa8
   17850:	str	r3, [sp, #8]
   17854:	str	r6, [sp, #16]
   17858:	str	r7, [sp, #12]
   1785c:	ldrd	r6, [r5, #96]	; 0x60
   17860:	ldr	r0, [r4, #204]	; 0xcc
   17864:	mov	r2, r4
   17868:	strd	r6, [sp]
   1786c:	ldr	r1, [pc, #2612]	; 182a8 <__flatcc_fb_codegen_c@@Base+0x2cb0>
   17870:	bl	13f84 <fprintf@plt>
   17874:	ldrh	r3, [r5, #72]	; 0x48
   17878:	and	r3, r3, #128	; 0x80
   1787c:	b	17560 <__flatcc_fb_codegen_c@@Base+0x1f68>
   17880:	str	r3, [sp, #24]
   17884:	add	r3, sp, #388	; 0x184
   17888:	str	r3, [sp, #20]
   1788c:	add	r3, sp, #168	; 0xa8
   17890:	str	r3, [sp, #8]
   17894:	str	r6, [sp, #16]
   17898:	str	r7, [sp, #12]
   1789c:	ldrd	r6, [r5, #96]	; 0x60
   178a0:	ldr	r0, [r4, #204]	; 0xcc
   178a4:	mov	r2, r4
   178a8:	strd	r6, [sp]
   178ac:	ldr	r1, [pc, #2552]	; 182ac <__flatcc_fb_codegen_c@@Base+0x2cb4>
   178b0:	bl	13f84 <fprintf@plt>
   178b4:	ldrh	r3, [r5, #72]	; 0x48
   178b8:	and	r3, r3, #128	; 0x80
   178bc:	b	17560 <__flatcc_fb_codegen_c@@Base+0x1f68>
   178c0:	ldr	r2, [pc, #2536]	; 182b0 <__flatcc_fb_codegen_c@@Base+0x2cb8>
   178c4:	str	r3, [sp, #28]
   178c8:	add	r3, sp, #168	; 0xa8
   178cc:	str	r2, [sp, #24]
   178d0:	str	r4, [sp, #20]
   178d4:	str	r6, [sp, #16]
   178d8:	str	r7, [sp, #12]
   178dc:	str	r3, [sp, #8]
   178e0:	ldrd	r6, [r5, #96]	; 0x60
   178e4:	ldr	r0, [r4, #204]	; 0xcc
   178e8:	mov	r2, r4
   178ec:	strd	r6, [sp]
   178f0:	ldr	r1, [pc, #2492]	; 182b4 <__flatcc_fb_codegen_c@@Base+0x2cbc>
   178f4:	bl	13f84 <fprintf@plt>
   178f8:	ldr	r7, [r5, #104]	; 0x68
   178fc:	cmp	r7, #0
   17900:	beq	17d04 <__flatcc_fb_codegen_c@@Base+0x270c>
   17904:	mov	r2, #220	; 0xdc
   17908:	mov	r1, #0
   1790c:	add	r0, sp, #608	; 0x260
   17910:	bl	13f9c <memset@plt>
   17914:	add	r0, sp, #828	; 0x33c
   17918:	mov	r2, #220	; 0xdc
   1791c:	mov	r1, #0
   17920:	bl	13f9c <memset@plt>
   17924:	ldrh	r3, [r7, #8]
   17928:	cmp	r3, #0
   1792c:	beq	17d48 <__flatcc_fb_codegen_c@@Base+0x2750>
   17930:	cmp	r3, #1
   17934:	bne	17d50 <__flatcc_fb_codegen_c@@Base+0x2758>
   17938:	ldr	r6, [pc, #2424]	; 182b8 <__flatcc_fb_codegen_c@@Base+0x2cc0>
   1793c:	add	r2, sp, #608	; 0x260
   17940:	mov	r1, r7
   17944:	ldr	r0, [r7, #12]
   17948:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1794c:	ldr	r3, [sp, #40]	; 0x28
   17950:	ldrh	r3, [r3, #8]
   17954:	cmp	r3, #0
   17958:	bne	18860 <__flatcc_fb_codegen_c@@Base+0x3268>
   1795c:	ldr	r3, [sp, #40]	; 0x28
   17960:	add	r2, sp, #828	; 0x33c
   17964:	mov	r1, r3
   17968:	ldr	r0, [r3, #12]
   1796c:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   17970:	ldr	r3, [r5, #4]
   17974:	add	r2, sp, #608	; 0x260
   17978:	str	r6, [sp, #12]
   1797c:	str	r2, [sp, #8]
   17980:	ldr	r2, [r3]
   17984:	ldr	r0, [r4, #204]	; 0xcc
   17988:	str	r2, [sp, #4]
   1798c:	ldr	r2, [r3, #4]
   17990:	ldr	r1, [pc, #2340]	; 182bc <__flatcc_fb_codegen_c@@Base+0x2cc4>
   17994:	add	r3, sp, #828	; 0x33c
   17998:	str	r2, [sp]
   1799c:	mov	r2, r4
   179a0:	bl	13f84 <fprintf@plt>
   179a4:	ldrh	r3, [r5, #72]	; 0x48
   179a8:	and	r3, r3, #128	; 0x80
   179ac:	b	17560 <__flatcc_fb_codegen_c@@Base+0x1f68>
   179b0:	ldr	r3, [r4, #204]	; 0xcc
   179b4:	mov	r2, #66	; 0x42
   179b8:	mov	r1, #1
   179bc:	ldr	r0, [pc, #2524]	; 183a0 <__flatcc_fb_codegen_c@@Base+0x2da8>
   179c0:	bl	13f18 <fwrite@plt>
   179c4:	ldr	r0, [r4, #204]	; 0xcc
   179c8:	add	r3, sp, #168	; 0xa8
   179cc:	str	r6, [sp, #4]
   179d0:	str	r7, [sp]
   179d4:	mov	r2, r4
   179d8:	ldr	r1, [pc, #2216]	; 18288 <__flatcc_fb_codegen_c@@Base+0x2c90>
   179dc:	bl	13f84 <fprintf@plt>
   179e0:	ldr	r3, [r4, #212]	; 0xd4
   179e4:	ldr	r3, [r3, #136]	; 0x88
   179e8:	cmp	r3, #0
   179ec:	beq	1757c <__flatcc_fb_codegen_c@@Base+0x1f84>
   179f0:	ldr	r0, [r4, #204]	; 0xcc
   179f4:	add	r3, sp, #168	; 0xa8
   179f8:	str	r6, [sp, #4]
   179fc:	str	r7, [sp]
   17a00:	mov	r2, r4
   17a04:	ldr	r1, [pc, #2176]	; 1828c <__flatcc_fb_codegen_c@@Base+0x2c94>
   17a08:	bl	13f84 <fprintf@plt>
   17a0c:	b	1757c <__flatcc_fb_codegen_c@@Base+0x1f84>
   17a10:	ldr	r1, [pc, #2460]	; 183b4 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   17a14:	ldr	r2, [pc, #2212]	; 182c0 <__flatcc_fb_codegen_c@@Base+0x2cc8>
   17a18:	mov	r3, #1568	; 0x620
   17a1c:	ldr	r0, [r1]
   17a20:	str	r2, [sp]
   17a24:	ldr	r1, [pc, #2448]	; 183bc <__flatcc_fb_codegen_c@@Base+0x2dc4>
   17a28:	ldr	r2, [pc, #2468]	; 183d4 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   17a2c:	bl	13f84 <fprintf@plt>
   17a30:	ldr	r3, [pc, #2444]	; 183c4 <__flatcc_fb_codegen_c@@Base+0x2dcc>
   17a34:	mov	r2, #1568	; 0x620
   17a38:	ldr	r1, [pc, #2452]	; 183d4 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   17a3c:	ldr	r0, [pc, #2428]	; 183c0 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   17a40:	bl	14038 <__assert_fail@plt>
   17a44:	ldr	r3, [pc, #2168]	; 182c4 <__flatcc_fb_codegen_c@@Base+0x2ccc>
   17a48:	str	r4, [sp, #52]	; 0x34
   17a4c:	str	r3, [sp, #48]	; 0x30
   17a50:	ldr	r3, [pc, #2160]	; 182c8 <__flatcc_fb_codegen_c@@Base+0x2cd0>
   17a54:	str	r3, [sp, #56]	; 0x38
   17a58:	ldrh	r3, [r5, #56]	; 0x38
   17a5c:	sub	r3, r3, #3
   17a60:	cmp	r3, #3
   17a64:	ldrls	pc, [pc, r3, lsl #2]
   17a68:	b	17d14 <__flatcc_fb_codegen_c@@Base+0x271c>
   17a6c:	andeq	r7, r1, r4, asr #21
   17a70:			; <UNDEFINED> instruction: 0x00017cb0
   17a74:	andeq	r7, r1, ip, ror ip
   17a78:	andeq	r7, r1, ip, ror sl
   17a7c:	sub	r3, r2, #1
   17a80:	cmp	r3, #8
   17a84:	ldrls	pc, [pc, r3, lsl #2]
   17a88:	b	18564 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   17a8c:	muleq	r1, ip, r4
   17a90:	muleq	r1, r4, r4
   17a94:	andeq	r8, r1, r8, asr r4
   17a98:	strdeq	r8, [r1], -r0
   17a9c:	strdeq	r8, [r1], -r0
   17aa0:	andeq	r8, r1, r8, asr #4
   17aa4:	andeq	r8, r1, r0, asr #4
   17aa8:	andeq	r8, r1, r4, ror r4
   17aac:	andeq	r8, r1, r0, lsl r4
   17ab0:	ldr	r3, [pc, #2212]	; 1835c <__flatcc_fb_codegen_c@@Base+0x2d64>
   17ab4:	str	r3, [sp, #48]	; 0x30
   17ab8:	ldr	r3, [pc, #2208]	; 18360 <__flatcc_fb_codegen_c@@Base+0x2d68>
   17abc:	str	r3, [sp, #56]	; 0x38
   17ac0:	str	r8, [sp, #52]	; 0x34
   17ac4:	add	r3, sp, #68	; 0x44
   17ac8:	str	r3, [sp, #60]	; 0x3c
   17acc:	mov	r0, r3
   17ad0:	ldr	r1, [pc, #2036]	; 182cc <__flatcc_fb_codegen_c@@Base+0x2cd4>
   17ad4:	ldrd	r2, [r5, #48]	; 0x30
   17ad8:	bl	13ff0 <sprintf@plt>
   17adc:	ldr	r3, [sp, #60]	; 0x3c
   17ae0:	str	r4, [sp, #20]
   17ae4:	str	r3, [sp, #36]	; 0x24
   17ae8:	ldr	r3, [sp, #48]	; 0x30
   17aec:	str	r6, [sp, #16]
   17af0:	str	r3, [sp, #32]
   17af4:	ldr	r3, [sp, #52]	; 0x34
   17af8:	str	r7, [sp, #12]
   17afc:	str	r3, [sp, #28]
   17b00:	ldr	r3, [sp, #56]	; 0x38
   17b04:	mov	r2, r4
   17b08:	str	r3, [sp, #24]
   17b0c:	add	r3, sp, #168	; 0xa8
   17b10:	str	r3, [sp, #8]
   17b14:	ldrd	r0, [r5, #96]	; 0x60
   17b18:	ldr	r3, [r4, #204]	; 0xcc
   17b1c:	strd	r0, [sp]
   17b20:	mov	r0, r3
   17b24:	ldr	r1, [pc, #1956]	; 182d0 <__flatcc_fb_codegen_c@@Base+0x2cd8>
   17b28:	bl	13f84 <fprintf@plt>
   17b2c:	ldr	r3, [r4, #212]	; 0xd4
   17b30:	ldr	r3, [r3, #32]
   17b34:	cmp	r3, #0
   17b38:	bne	17b74 <__flatcc_fb_codegen_c@@Base+0x257c>
   17b3c:	ldrh	r3, [r5, #72]	; 0x48
   17b40:	tst	r3, #128	; 0x80
   17b44:	beq	174cc <__flatcc_fb_codegen_c@@Base+0x1ed4>
   17b48:	ldr	r3, [sp, #48]	; 0x30
   17b4c:	ldr	r0, [r4, #204]	; 0xcc
   17b50:	str	r3, [sp, #12]
   17b54:	ldr	r3, [sp, #52]	; 0x34
   17b58:	str	r6, [sp, #4]
   17b5c:	str	r3, [sp, #8]
   17b60:	str	r7, [sp]
   17b64:	add	r3, sp, #168	; 0xa8
   17b68:	mov	r2, r4
   17b6c:	ldr	r1, [pc, #1888]	; 182d4 <__flatcc_fb_codegen_c@@Base+0x2cdc>
   17b70:	bl	13f84 <fprintf@plt>
   17b74:	ldrh	r3, [r5, #72]	; 0x48
   17b78:	tst	r3, #128	; 0x80
   17b7c:	beq	174cc <__flatcc_fb_codegen_c@@Base+0x1ed4>
   17b80:	ldr	r3, [sp, #44]	; 0x2c
   17b84:	cmp	r3, #0
   17b88:	ldr	r3, [r4, #204]	; 0xcc
   17b8c:	bne	1865c <__flatcc_fb_codegen_c@@Base+0x3064>
   17b90:	mov	r2, #61	; 0x3d
   17b94:	mov	r1, #1
   17b98:	ldr	r0, [pc, #2052]	; 183a4 <__flatcc_fb_codegen_c@@Base+0x2dac>
   17b9c:	bl	13f18 <fwrite@plt>
   17ba0:	ldr	r3, [sp, #48]	; 0x30
   17ba4:	ldr	r0, [r4, #204]	; 0xcc
   17ba8:	str	r3, [sp, #12]
   17bac:	ldr	r3, [sp, #52]	; 0x34
   17bb0:	str	r6, [sp, #4]
   17bb4:	str	r3, [sp, #8]
   17bb8:	str	r7, [sp]
   17bbc:	add	r3, sp, #168	; 0xa8
   17bc0:	mov	r2, r4
   17bc4:	ldr	r1, [pc, #1984]	; 1838c <__flatcc_fb_codegen_c@@Base+0x2d94>
   17bc8:	bl	13f84 <fprintf@plt>
   17bcc:	ldr	r3, [r4, #212]	; 0xd4
   17bd0:	ldr	r3, [r3, #136]	; 0x88
   17bd4:	cmp	r3, #0
   17bd8:	beq	17c0c <__flatcc_fb_codegen_c@@Base+0x2614>
   17bdc:	ldr	r3, [sp, #48]	; 0x30
   17be0:	ldr	r0, [r4, #204]	; 0xcc
   17be4:	str	r3, [sp, #12]
   17be8:	ldr	r3, [sp, #52]	; 0x34
   17bec:	str	r4, [sp, #16]
   17bf0:	str	r3, [sp, #8]
   17bf4:	str	r6, [sp, #4]
   17bf8:	str	r7, [sp]
   17bfc:	add	r3, sp, #168	; 0xa8
   17c00:	mov	r2, r4
   17c04:	ldr	r1, [pc, #1924]	; 18390 <__flatcc_fb_codegen_c@@Base+0x2d98>
   17c08:	bl	13f84 <fprintf@plt>
   17c0c:	ldr	r3, [sp, #48]	; 0x30
   17c10:	ldr	r2, [sp, #52]	; 0x34
   17c14:	add	r1, sp, #168	; 0xa8
   17c18:	ldr	r0, [r4, #204]	; 0xcc
   17c1c:	str	r3, [sp, #12]
   17c20:	str	r2, [sp, #8]
   17c24:	mov	r3, r1
   17c28:	mov	r2, r4
   17c2c:	ldr	r1, [pc, #1700]	; 182d8 <__flatcc_fb_codegen_c@@Base+0x2ce0>
   17c30:	str	r6, [sp, #4]
   17c34:	str	r7, [sp]
   17c38:	bl	13f84 <fprintf@plt>
   17c3c:	ldr	r3, [sp, #48]	; 0x30
   17c40:	ldr	r2, [sp, #52]	; 0x34
   17c44:	ldr	r0, [r4, #204]	; 0xcc
   17c48:	ldr	r1, [pc, #1676]	; 182dc <__flatcc_fb_codegen_c@@Base+0x2ce4>
   17c4c:	str	r3, [sp, #12]
   17c50:	str	r2, [sp, #8]
   17c54:	add	r3, sp, #168	; 0xa8
   17c58:	str	r6, [sp, #4]
   17c5c:	str	r7, [sp]
   17c60:	mov	r2, r4
   17c64:	bl	13f84 <fprintf@plt>
   17c68:	ldr	r3, [r4, #212]	; 0xd4
   17c6c:	ldr	r3, [r3, #136]	; 0x88
   17c70:	cmp	r3, #0
   17c74:	beq	1757c <__flatcc_fb_codegen_c@@Base+0x1f84>
   17c78:	b	18114 <__flatcc_fb_codegen_c@@Base+0x2b1c>
   17c7c:	sub	r3, r2, #1
   17c80:	cmp	r3, #8
   17c84:	ldrls	pc, [pc, r3, lsl #2]
   17c88:	b	18564 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   17c8c:	andeq	r8, r1, r8, lsr r2
   17c90:	andeq	r8, r1, ip, lsl r5
   17c94:	andeq	r8, r1, r4, lsl r5
   17c98:	andeq	r8, r1, ip, lsr r1
   17c9c:	andeq	r8, r1, ip, lsr r1
   17ca0:	andeq	r8, r1, r0, asr r4
   17ca4:	andeq	r8, r1, r8, asr #8
   17ca8:	andeq	r8, r1, r4, ror #9
   17cac:	andeq	r8, r1, ip, ror #9
   17cb0:	sub	r3, r2, #1
   17cb4:	cmp	r3, #8
   17cb8:	ldrls	pc, [pc, r3, lsl #2]
   17cbc:	b	18564 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   17cc0:	ldrdeq	r8, [r1], -ip
   17cc4:	ldrdeq	r8, [r1], -r4
   17cc8:	andeq	r8, r1, ip, asr #9
   17ccc:	andeq	r8, r1, r0, ror #2
   17cd0:	andeq	r8, r1, r0, ror #2
   17cd4:	andeq	r8, r1, r4, lsl #10
   17cd8:	strdeq	r8, [r1], -ip
   17cdc:	andeq	r8, r1, ip, lsl #10
   17ce0:	strdeq	r8, [r1], -r4
   17ce4:	mov	r3, r4
   17ce8:	strd	r6, [sp]
   17cec:	mov	r2, r4
   17cf0:	ldr	r1, [pc, #1512]	; 182e0 <__flatcc_fb_codegen_c@@Base+0x2ce8>
   17cf4:	bl	13f84 <fprintf@plt>
   17cf8:	ldrh	r3, [r5, #72]	; 0x48
   17cfc:	and	r3, r3, #128	; 0x80
   17d00:	b	17560 <__flatcc_fb_codegen_c@@Base+0x1f68>
   17d04:	ldrh	r3, [r5, #72]	; 0x48
   17d08:	tst	r3, #128	; 0x80
   17d0c:	bne	17568 <__flatcc_fb_codegen_c@@Base+0x1f70>
   17d10:	b	174cc <__flatcc_fb_codegen_c@@Base+0x1ed4>
   17d14:	ldr	r1, [pc, #1688]	; 183b4 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   17d18:	ldr	r2, [pc, #1652]	; 18394 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   17d1c:	mov	r3, #260	; 0x104
   17d20:	ldr	r0, [r1]
   17d24:	str	r2, [sp]
   17d28:	ldr	r1, [pc, #1676]	; 183bc <__flatcc_fb_codegen_c@@Base+0x2dc4>
   17d2c:	ldr	r2, [pc, #1640]	; 1839c <__flatcc_fb_codegen_c@@Base+0x2da4>
   17d30:	bl	13f84 <fprintf@plt>
   17d34:	ldr	r3, [pc, #1448]	; 182e4 <__flatcc_fb_codegen_c@@Base+0x2cec>
   17d38:	mov	r2, #260	; 0x104
   17d3c:	ldr	r1, [pc, #1624]	; 1839c <__flatcc_fb_codegen_c@@Base+0x2da4>
   17d40:	ldr	r0, [pc, #1656]	; 183c0 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   17d44:	bl	14038 <__assert_fail@plt>
   17d48:	ldr	r6, [pc, #1432]	; 182e8 <__flatcc_fb_codegen_c@@Base+0x2cf0>
   17d4c:	b	1793c <__flatcc_fb_codegen_c@@Base+0x2344>
   17d50:	ldr	r1, [pc, #1628]	; 183b4 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   17d54:	ldr	r2, [pc, #1424]	; 182ec <__flatcc_fb_codegen_c@@Base+0x2cf4>
   17d58:	ldr	r3, [pc, #1424]	; 182f0 <__flatcc_fb_codegen_c@@Base+0x2cf8>
   17d5c:	ldr	r0, [r1]
   17d60:	str	r2, [sp]
   17d64:	ldr	r1, [pc, #1616]	; 183bc <__flatcc_fb_codegen_c@@Base+0x2dc4>
   17d68:	ldr	r2, [pc, #1636]	; 183d4 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   17d6c:	bl	13f84 <fprintf@plt>
   17d70:	ldr	r3, [pc, #1636]	; 183dc <__flatcc_fb_codegen_c@@Base+0x2de4>
   17d74:	ldr	r2, [pc, #1396]	; 182f0 <__flatcc_fb_codegen_c@@Base+0x2cf8>
   17d78:	ldr	r1, [pc, #1620]	; 183d4 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   17d7c:	ldr	r0, [pc, #1596]	; 183c0 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   17d80:	bl	14038 <__assert_fail@plt>
   17d84:	ldr	r2, [pc, #1384]	; 182f4 <__flatcc_fb_codegen_c@@Base+0x2cfc>
   17d88:	b	178c4 <__flatcc_fb_codegen_c@@Base+0x22cc>
   17d8c:	ldr	r2, [pc, #1380]	; 182f8 <__flatcc_fb_codegen_c@@Base+0x2d00>
   17d90:	b	178c4 <__flatcc_fb_codegen_c@@Base+0x22cc>
   17d94:	ldr	r2, [pc, #1376]	; 182fc <__flatcc_fb_codegen_c@@Base+0x2d04>
   17d98:	b	178c4 <__flatcc_fb_codegen_c@@Base+0x22cc>
   17d9c:	ldr	r2, [pc, #1372]	; 18300 <__flatcc_fb_codegen_c@@Base+0x2d08>
   17da0:	b	178c4 <__flatcc_fb_codegen_c@@Base+0x22cc>
   17da4:	ldr	r2, [pc, #1368]	; 18304 <__flatcc_fb_codegen_c@@Base+0x2d0c>
   17da8:	b	178c4 <__flatcc_fb_codegen_c@@Base+0x22cc>
   17dac:	ldr	r2, [pc, #1364]	; 18308 <__flatcc_fb_codegen_c@@Base+0x2d10>
   17db0:	b	178c4 <__flatcc_fb_codegen_c@@Base+0x22cc>
   17db4:	ldr	r2, [pc, #1360]	; 1830c <__flatcc_fb_codegen_c@@Base+0x2d14>
   17db8:	b	178c4 <__flatcc_fb_codegen_c@@Base+0x22cc>
   17dbc:	ldr	r2, [pc, #1356]	; 18310 <__flatcc_fb_codegen_c@@Base+0x2d18>
   17dc0:	b	178c4 <__flatcc_fb_codegen_c@@Base+0x22cc>
   17dc4:	ldr	r2, [pc, #1352]	; 18314 <__flatcc_fb_codegen_c@@Base+0x2d1c>
   17dc8:	b	178c4 <__flatcc_fb_codegen_c@@Base+0x22cc>
   17dcc:	ldrh	r2, [r5, #56]	; 0x38
   17dd0:	sub	r2, r2, #3
   17dd4:	cmp	r2, #3
   17dd8:	ldrls	pc, [pc, r2, lsl #2]
   17ddc:	b	17d14 <__flatcc_fb_codegen_c@@Base+0x271c>
   17de0:			; <UNDEFINED> instruction: 0x000181b8
   17de4:	andeq	r8, r1, r0, lsl r2
   17de8:	andeq	r8, r1, r4, lsr #4
   17dec:	andeq	r8, r1, r4, ror #10
   17df0:	ldr	r3, [pc, #1312]	; 18318 <__flatcc_fb_codegen_c@@Base+0x2d20>
   17df4:	str	r8, [sp, #52]	; 0x34
   17df8:	str	r3, [sp, #48]	; 0x30
   17dfc:	ldr	r3, [pc, #1304]	; 1831c <__flatcc_fb_codegen_c@@Base+0x2d24>
   17e00:	str	r3, [sp, #56]	; 0x38
   17e04:	b	17a58 <__flatcc_fb_codegen_c@@Base+0x2460>
   17e08:	ldrh	r2, [r5, #56]	; 0x38
   17e0c:	sub	r2, r2, #3
   17e10:	cmp	r2, #3
   17e14:	ldrls	pc, [pc, r2, lsl #2]
   17e18:	b	17d14 <__flatcc_fb_codegen_c@@Base+0x271c>
   17e1c:	andeq	r8, r1, r0, asr r5
   17e20:	andeq	r8, r1, r8, lsr r5
   17e24:	andeq	r8, r1, ip, ror r4
   17e28:	andeq	r8, r1, r0, ror #8
   17e2c:	ldrh	r2, [r5, #56]	; 0x38
   17e30:	sub	r2, r2, #3
   17e34:	cmp	r2, #3
   17e38:	ldrls	pc, [pc, r2, lsl #2]
   17e3c:	b	17d14 <__flatcc_fb_codegen_c@@Base+0x271c>
   17e40:			; <UNDEFINED> instruction: 0x00017ab0
   17e44:	andeq	r8, r1, r0, lsr r4
   17e48:	andeq	r8, r1, r8, lsl r4
   17e4c:	strdeq	r8, [r1], -ip
   17e50:	ldr	r3, [pc, #1224]	; 18320 <__flatcc_fb_codegen_c@@Base+0x2d28>
   17e54:	str	r8, [sp, #52]	; 0x34
   17e58:	str	r3, [sp, #48]	; 0x30
   17e5c:	ldr	r3, [pc, #1216]	; 18324 <__flatcc_fb_codegen_c@@Base+0x2d2c>
   17e60:	str	r3, [sp, #56]	; 0x38
   17e64:	b	17a58 <__flatcc_fb_codegen_c@@Base+0x2460>
   17e68:	ldr	r3, [pc, #1208]	; 18328 <__flatcc_fb_codegen_c@@Base+0x2d30>
   17e6c:	str	r8, [sp, #52]	; 0x34
   17e70:	str	r3, [sp, #48]	; 0x30
   17e74:	ldr	r3, [pc, #1200]	; 1832c <__flatcc_fb_codegen_c@@Base+0x2d34>
   17e78:	str	r3, [sp, #56]	; 0x38
   17e7c:	b	17a58 <__flatcc_fb_codegen_c@@Base+0x2460>
   17e80:	ldr	r3, [pc, #1192]	; 18330 <__flatcc_fb_codegen_c@@Base+0x2d38>
   17e84:	str	r8, [sp, #52]	; 0x34
   17e88:	str	r3, [sp, #48]	; 0x30
   17e8c:	ldr	r3, [pc, #1184]	; 18334 <__flatcc_fb_codegen_c@@Base+0x2d3c>
   17e90:	str	r3, [sp, #56]	; 0x38
   17e94:	b	17a58 <__flatcc_fb_codegen_c@@Base+0x2460>
   17e98:	ldr	r3, [pc, #1176]	; 18338 <__flatcc_fb_codegen_c@@Base+0x2d40>
   17e9c:	str	r8, [sp, #52]	; 0x34
   17ea0:	str	r3, [sp, #48]	; 0x30
   17ea4:	ldr	r3, [pc, #1168]	; 1833c <__flatcc_fb_codegen_c@@Base+0x2d44>
   17ea8:	str	r3, [sp, #56]	; 0x38
   17eac:	b	17a58 <__flatcc_fb_codegen_c@@Base+0x2460>
   17eb0:	ldrh	r2, [r5, #56]	; 0x38
   17eb4:	sub	r2, r2, #3
   17eb8:	cmp	r2, #3
   17ebc:	ldrls	pc, [pc, r2, lsl #2]
   17ec0:	b	17d14 <__flatcc_fb_codegen_c@@Base+0x271c>
   17ec4:			; <UNDEFINED> instruction: 0x000184b8
   17ec8:	andeq	r8, r1, r4, lsr #9
   17ecc:	andeq	r8, r1, r4, lsr #10
   17ed0:	andeq	r8, r1, r4, ror #10
   17ed4:	ldrh	r2, [r5, #56]	; 0x38
   17ed8:	sub	r2, r2, #3
   17edc:	cmp	r2, #3
   17ee0:	ldrls	pc, [pc, r2, lsl #2]
   17ee4:	b	17d14 <__flatcc_fb_codegen_c@@Base+0x271c>
   17ee8:	andeq	r8, r1, r0, ror #11
   17eec:	andeq	r8, r1, r8, asr #11
   17ef0:			; <UNDEFINED> instruction: 0x000185b0
   17ef4:	muleq	r1, r8, r5
   17ef8:	sub	r3, r3, #1
   17efc:	cmp	r3, #8
   17f00:	ldrls	pc, [pc, r3, lsl #2]
   17f04:	b	18564 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   17f08:	andeq	r8, r1, ip, asr #17
   17f0c:	andeq	r8, r1, r4, asr #17
   17f10:			; <UNDEFINED> instruction: 0x000188bc
   17f14:	andeq	r8, r1, ip, lsr r6
   17f18:	andeq	r8, r1, ip, lsr r6
   17f1c:	andeq	r8, r1, r8, asr r8
   17f20:	andeq	r8, r1, ip, lsr #17
   17f24:	andeq	r8, r1, r4, lsr #17
   17f28:			; <UNDEFINED> instruction: 0x000188b4
   17f2c:	sub	r3, r3, #1
   17f30:	cmp	r3, #8
   17f34:	ldrls	pc, [pc, r3, lsl #2]
   17f38:	b	18564 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   17f3c:	andeq	r8, r1, ip, lsl #17
   17f40:	andeq	r8, r1, r4, lsl #17
   17f44:	andeq	r8, r1, ip, ror r8
   17f48:	strdeq	r8, [r1], -r4
   17f4c:	strdeq	r8, [r1], -r4
   17f50:	andeq	r8, r1, r4, lsl #16
   17f54:	muleq	r1, ip, r8
   17f58:	muleq	r1, r4, r8
   17f5c:	andeq	r8, r1, r4, ror r8
   17f60:	sub	r3, r3, #1
   17f64:	cmp	r3, #8
   17f68:	ldrls	pc, [pc, r3, lsl #2]
   17f6c:	b	18564 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   17f70:	andeq	r8, r1, ip, lsr r8
   17f74:	andeq	r8, r1, r4, lsr r8
   17f78:	andeq	r8, r1, ip, lsr #16
   17f7c:	andeq	r8, r1, r8, lsl r6
   17f80:	andeq	r8, r1, r8, lsl r6
   17f84:	andeq	r8, r1, ip, lsl #16
   17f88:	andeq	r8, r1, ip, lsl r8
   17f8c:	andeq	r8, r1, r4, lsl r8
   17f90:	andeq	r8, r1, r4, lsr #16
   17f94:	cmp	r3, #11
   17f98:	beq	187a8 <__flatcc_fb_codegen_c@@Base+0x31b0>
   17f9c:	add	r3, sp, #68	; 0x44
   17fa0:	str	r3, [sp, #60]	; 0x3c
   17fa4:	mov	r0, r3
   17fa8:	ldr	r1, [pc, #796]	; 182cc <__flatcc_fb_codegen_c@@Base+0x2cd4>
   17fac:	ldrd	r2, [r5, #48]	; 0x30
   17fb0:	bl	13ff0 <sprintf@plt>
   17fb4:	ldr	r3, [sp, #60]	; 0x3c
   17fb8:	str	r6, [sp, #16]
   17fbc:	str	r3, [sp, #28]
   17fc0:	add	r3, sp, #388	; 0x184
   17fc4:	str	r3, [sp, #24]
   17fc8:	str	r3, [sp, #20]
   17fcc:	add	r3, sp, #168	; 0xa8
   17fd0:	str	r7, [sp, #12]
   17fd4:	str	r3, [sp, #8]
   17fd8:	ldrd	r0, [r5, #96]	; 0x60
   17fdc:	ldr	r3, [r4, #204]	; 0xcc
   17fe0:	mov	r2, r4
   17fe4:	strd	r0, [sp]
   17fe8:	mov	r0, r3
   17fec:	ldr	r1, [pc, #844]	; 18340 <__flatcc_fb_codegen_c@@Base+0x2d48>
   17ff0:	bl	13f84 <fprintf@plt>
   17ff4:	ldr	r3, [r4, #212]	; 0xd4
   17ff8:	ldr	r3, [r3, #32]
   17ffc:	cmp	r3, #0
   18000:	bne	18034 <__flatcc_fb_codegen_c@@Base+0x2a3c>
   18004:	ldrh	r3, [r5, #72]	; 0x48
   18008:	tst	r3, #128	; 0x80
   1800c:	beq	174cc <__flatcc_fb_codegen_c@@Base+0x1ed4>
   18010:	add	r3, sp, #388	; 0x184
   18014:	ldr	r0, [r4, #204]	; 0xcc
   18018:	mov	r2, r4
   1801c:	str	r3, [sp, #8]
   18020:	str	r6, [sp, #4]
   18024:	str	r7, [sp]
   18028:	add	r3, sp, #168	; 0xa8
   1802c:	ldr	r1, [pc, #784]	; 18344 <__flatcc_fb_codegen_c@@Base+0x2d4c>
   18030:	bl	13f84 <fprintf@plt>
   18034:	ldrh	r3, [r5, #72]	; 0x48
   18038:	tst	r3, #128	; 0x80
   1803c:	beq	174cc <__flatcc_fb_codegen_c@@Base+0x1ed4>
   18040:	ldr	r3, [sp, #44]	; 0x2c
   18044:	cmp	r3, #0
   18048:	ldr	r3, [r4, #204]	; 0xcc
   1804c:	bne	18724 <__flatcc_fb_codegen_c@@Base+0x312c>
   18050:	mov	r2, #61	; 0x3d
   18054:	mov	r1, #1
   18058:	ldr	r0, [pc, #836]	; 183a4 <__flatcc_fb_codegen_c@@Base+0x2dac>
   1805c:	bl	13f18 <fwrite@plt>
   18060:	add	r3, sp, #388	; 0x184
   18064:	ldr	r0, [r4, #204]	; 0xcc
   18068:	mov	r2, r4
   1806c:	str	r3, [sp, #8]
   18070:	str	r6, [sp, #4]
   18074:	add	r3, sp, #168	; 0xa8
   18078:	str	r7, [sp]
   1807c:	ldr	r1, [pc, #804]	; 183a8 <__flatcc_fb_codegen_c@@Base+0x2db0>
   18080:	bl	13f84 <fprintf@plt>
   18084:	ldr	r3, [r4, #212]	; 0xd4
   18088:	ldr	r3, [r3, #136]	; 0x88
   1808c:	cmp	r3, #0
   18090:	beq	180bc <__flatcc_fb_codegen_c@@Base+0x2ac4>
   18094:	add	r3, sp, #388	; 0x184
   18098:	ldr	r0, [r4, #204]	; 0xcc
   1809c:	mov	r2, r4
   180a0:	str	r3, [sp, #8]
   180a4:	str	r4, [sp, #12]
   180a8:	str	r6, [sp, #4]
   180ac:	str	r7, [sp]
   180b0:	add	r3, sp, #168	; 0xa8
   180b4:	ldr	r1, [pc, #752]	; 183ac <__flatcc_fb_codegen_c@@Base+0x2db4>
   180b8:	bl	13f84 <fprintf@plt>
   180bc:	add	r3, sp, #388	; 0x184
   180c0:	ldr	r0, [r4, #204]	; 0xcc
   180c4:	mov	r2, r4
   180c8:	str	r3, [sp, #8]
   180cc:	ldr	r1, [pc, #628]	; 18348 <__flatcc_fb_codegen_c@@Base+0x2d50>
   180d0:	add	r3, sp, #168	; 0xa8
   180d4:	str	r6, [sp, #4]
   180d8:	str	r7, [sp]
   180dc:	bl	13f84 <fprintf@plt>
   180e0:	add	r3, sp, #388	; 0x184
   180e4:	ldr	r0, [r4, #204]	; 0xcc
   180e8:	mov	r2, r4
   180ec:	str	r3, [sp, #8]
   180f0:	str	r6, [sp, #4]
   180f4:	add	r3, sp, #168	; 0xa8
   180f8:	str	r7, [sp]
   180fc:	ldr	r1, [pc, #584]	; 1834c <__flatcc_fb_codegen_c@@Base+0x2d54>
   18100:	bl	13f84 <fprintf@plt>
   18104:	ldr	r3, [r4, #212]	; 0xd4
   18108:	ldr	r3, [r3, #136]	; 0x88
   1810c:	cmp	r3, #0
   18110:	beq	1757c <__flatcc_fb_codegen_c@@Base+0x1f84>
   18114:	add	r3, sp, #168	; 0xa8
   18118:	ldr	r0, [r4, #204]	; 0xcc
   1811c:	mov	r2, r3
   18120:	str	r6, [sp, #4]
   18124:	str	r7, [sp]
   18128:	ldr	r1, [pc, #544]	; 18350 <__flatcc_fb_codegen_c@@Base+0x2d58>
   1812c:	bl	13f84 <fprintf@plt>
   18130:	mov	r3, #1
   18134:	str	r3, [sp, #44]	; 0x2c
   18138:	b	174cc <__flatcc_fb_codegen_c@@Base+0x1ed4>
   1813c:	ldr	r2, [pc, #576]	; 18384 <__flatcc_fb_codegen_c@@Base+0x2d8c>
   18140:	ldrd	r0, [r5, #48]	; 0x30
   18144:	add	r3, sp, #68	; 0x44
   18148:	str	r3, [sp, #60]	; 0x3c
   1814c:	strd	r0, [sp]
   18150:	mov	r0, r3
   18154:	ldr	r1, [pc, #544]	; 1837c <__flatcc_fb_codegen_c@@Base+0x2d84>
   18158:	bl	13ff0 <sprintf@plt>
   1815c:	b	17adc <__flatcc_fb_codegen_c@@Base+0x24e4>
   18160:	ldr	r2, [pc, #540]	; 18384 <__flatcc_fb_codegen_c@@Base+0x2d8c>
   18164:	ldrd	r0, [r5, #48]	; 0x30
   18168:	add	r3, sp, #68	; 0x44
   1816c:	str	r3, [sp, #60]	; 0x3c
   18170:	strd	r0, [sp]
   18174:	mov	r0, r3
   18178:	ldr	r1, [pc, #512]	; 18380 <__flatcc_fb_codegen_c@@Base+0x2d88>
   1817c:	bl	13ff0 <sprintf@plt>
   18180:	b	17adc <__flatcc_fb_codegen_c@@Base+0x24e4>
   18184:	ldr	r1, [pc, #552]	; 183b4 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   18188:	ldr	r2, [pc, #516]	; 18394 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   1818c:	mov	r3, #141	; 0x8d
   18190:	ldr	r0, [r1]
   18194:	str	r2, [sp]
   18198:	ldr	r1, [pc, #540]	; 183bc <__flatcc_fb_codegen_c@@Base+0x2dc4>
   1819c:	ldr	r2, [pc, #504]	; 1839c <__flatcc_fb_codegen_c@@Base+0x2da4>
   181a0:	bl	13f84 <fprintf@plt>
   181a4:	ldr	r3, [pc, #424]	; 18354 <__flatcc_fb_codegen_c@@Base+0x2d5c>
   181a8:	mov	r2, #141	; 0x8d
   181ac:	ldr	r1, [pc, #488]	; 1839c <__flatcc_fb_codegen_c@@Base+0x2da4>
   181b0:	ldr	r0, [pc, #520]	; 183c0 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   181b4:	bl	14038 <__assert_fail@plt>
   181b8:	vldr	d7, [r5, #48]	; 0x30
   181bc:	add	r3, sp, #68	; 0x44
   181c0:	str	r3, [sp, #60]	; 0x3c
   181c4:	mov	r0, r3
   181c8:	vcvt.f32.f64	s14, d7
   181cc:	ldr	r3, [pc, #388]	; 18358 <__flatcc_fb_codegen_c@@Base+0x2d60>
   181d0:	ldr	r1, [pc, #472]	; 183b0 <__flatcc_fb_codegen_c@@Base+0x2db8>
   181d4:	str	r3, [sp, #48]	; 0x30
   181d8:	str	r3, [sp, #56]	; 0x38
   181dc:	str	r8, [sp, #52]	; 0x34
   181e0:	vcvt.f64.f32	d7, s14
   181e4:	vmov	r2, r3, d7
   181e8:	bl	13ff0 <sprintf@plt>
   181ec:	b	17adc <__flatcc_fb_codegen_c@@Base+0x24e4>
   181f0:	ldr	r2, [pc, #396]	; 18384 <__flatcc_fb_codegen_c@@Base+0x2d8c>
   181f4:	add	r3, sp, #68	; 0x44
   181f8:	str	r3, [sp, #60]	; 0x3c
   181fc:	mov	r0, r3
   18200:	ldr	r1, [pc, #384]	; 18388 <__flatcc_fb_codegen_c@@Base+0x2d90>
   18204:	ldrb	r3, [r5, #48]	; 0x30
   18208:	bl	13ff0 <sprintf@plt>
   1820c:	b	17adc <__flatcc_fb_codegen_c@@Base+0x24e4>
   18210:	ldr	r2, [pc, #320]	; 18358 <__flatcc_fb_codegen_c@@Base+0x2d60>
   18214:	str	r8, [sp, #52]	; 0x34
   18218:	str	r2, [sp, #48]	; 0x30
   1821c:	str	r2, [sp, #56]	; 0x38
   18220:	b	17cb4 <__flatcc_fb_codegen_c@@Base+0x26bc>
   18224:	ldr	r2, [pc, #300]	; 18358 <__flatcc_fb_codegen_c@@Base+0x2d60>
   18228:	str	r8, [sp, #52]	; 0x34
   1822c:	str	r2, [sp, #48]	; 0x30
   18230:	str	r2, [sp, #56]	; 0x38
   18234:	b	17c80 <__flatcc_fb_codegen_c@@Base+0x2688>
   18238:	ldr	r2, [pc, #440]	; 183f8 <__flatcc_fb_codegen_c@@Base+0x2e00>
   1823c:	b	18140 <__flatcc_fb_codegen_c@@Base+0x2b48>
   18240:	ldr	r2, [pc, #412]	; 183e4 <__flatcc_fb_codegen_c@@Base+0x2dec>
   18244:	b	181f4 <__flatcc_fb_codegen_c@@Base+0x2bfc>
   18248:	ldr	r2, [pc, #412]	; 183ec <__flatcc_fb_codegen_c@@Base+0x2df4>
   1824c:	b	181f4 <__flatcc_fb_codegen_c@@Base+0x2bfc>
   18250:	andeq	fp, r4, ip, lsr #24
   18254:	andeq	r2, r4, r8
   18258:	andeq	r2, r4, r0
   1825c:	andeq	sl, r4, r4, lsr sp
   18260:	andeq	r2, r4, r4, lsr sl
   18264:			; <UNDEFINED> instruction: 0x00042bb4
   18268:	andeq	r2, r4, r0, asr #14
   1826c:	andeq	r2, r4, r0, ror #23
   18270:	andeq	r2, r4, r8, asr #24
   18274:	andeq	r2, r4, r0, ror #24
   18278:	andeq	r3, r4, ip, lsl r1
   1827c:	andeq	r2, r4, r4, ror #19
   18280:	andeq	r2, r4, r0, lsr lr
   18284:	andeq	r2, r4, r0, ror #28
   18288:	andeq	r2, r4, ip, lsl #29
   1828c:	andeq	r3, r4, ip, lsl #4
   18290:			; <UNDEFINED> instruction: 0x00042eb8
   18294:	andeq	r2, r4, ip, ror #29
   18298:	andeq	r2, r4, r0, lsr #30
   1829c:	andeq	r3, r4, r4, asr r1
   182a0:	andeq	r0, r0, pc, lsr r6
   182a4:	andeq	r3, r4, r0, lsl r0
   182a8:	andeq	r2, r4, r0, ror #30
   182ac:	muleq	r4, ip, pc	; <UNPREDICTABLE>
   182b0:	andeq	r2, r4, r8, asr fp
   182b4:	muleq	r4, r8, r1
   182b8:	andeq	r2, r4, r4, lsl #22
   182bc:	andeq	r2, r4, r0, lsl #28
   182c0:	andeq	r3, r4, r4, asr #32
   182c4:	andeq	r1, r4, r8, ror lr
   182c8:			; <UNDEFINED> instruction: 0x0005a5bc
   182cc:	muleq	r4, r4, r0
   182d0:	muleq	r4, r0, ip
   182d4:	andeq	r2, r4, ip, asr #25
   182d8:	andeq	r2, r4, r4, lsr sp
   182dc:	andeq	r2, r4, r0, ror sp
   182e0:	andeq	r3, r4, r0, ror #1
   182e4:	andeq	r1, r4, ip, ror #23
   182e8:	strdeq	r2, [r4], -ip
   182ec:	andeq	r2, r4, ip, lsr #27
   182f0:	andeq	r0, r0, fp, lsr r5
   182f4:	andeq	r2, r4, r4, ror fp
   182f8:	andeq	r2, r4, r0, asr #22
   182fc:	andeq	r2, r4, r4, lsr fp
   18300:	andeq	r2, r4, r8, lsr #22
   18304:	andeq	r2, r4, ip, lsl #22
   18308:	andeq	r2, r4, r4, ror #22
   1830c:	andeq	r2, r4, ip, lsl fp
   18310:	andeq	r2, r4, ip, asr #22
   18314:	andeq	r2, r4, r4, lsl #23
   18318:	andeq	r1, r4, ip, asr #28
   1831c:	andeq	r2, r4, r8, asr #5
   18320:	andeq	r1, r4, r0, lsl #29
   18324:	andeq	r2, r4, r8, ror #5
   18328:	andeq	r1, r4, r8, lsl #29
   1832c:	strdeq	r2, [r4], -r0
   18330:	andeq	r1, r4, r0, ror lr
   18334:	andeq	r2, r4, r0, ror #5
   18338:	andeq	r1, r4, r4, ror #28
   1833c:	ldrdeq	r2, [r4], -r8
   18340:	ldrdeq	r2, [r4], -r4
   18344:	andeq	r2, r4, ip, lsl #16
   18348:	andeq	r2, r4, r0, lsl #18
   1834c:	andeq	r2, r4, r0, asr #18
   18350:	andeq	r2, r4, r0, lsl #19
   18354:	andeq	r1, r4, ip, asr #23
   18358:	andeq	r1, r4, r0, lsr #29
   1835c:	muleq	r4, r8, lr
   18360:	andeq	r2, r4, r0, lsl #6
   18364:	andeq	r1, r4, r8, lsr #29
   18368:	muleq	r4, r0, lr
   1836c:	strdeq	r2, [r4], -r8
   18370:	andeq	r1, r4, r0, ror #23
   18374:	andeq	r1, r4, r8, asr lr
   18378:	ldrdeq	r2, [r4], -r0
   1837c:	andeq	r2, r4, r0, ror r0
   18380:	andeq	r2, r4, ip, ror r0
   18384:	andeq	r1, r4, r8, ror #29
   18388:	andeq	r2, r4, r8, lsl #1
   1838c:	andeq	r2, r4, r0, lsl #26
   18390:	andeq	r3, r4, ip, asr #3
   18394:	andeq	r1, r4, r8, asr #31
   18398:	andeq	r1, r4, r8, lsr #24
   1839c:	andeq	r1, r4, r0, ror pc
   183a0:	andeq	r2, r4, r4, asr #16
   183a4:	andeq	r2, r4, r8, lsl #17
   183a8:	andeq	r2, r4, r8, asr #17
   183ac:	andeq	r3, r4, r8, lsr r2
   183b0:	muleq	r4, r0, r0
   183b4:	andeq	sp, r6, r8, lsr #1
   183b8:	muleq	r4, r0, r0
   183bc:			; <UNDEFINED> instruction: 0x00041fbc
   183c0:	andeq	sl, r4, r4, asr sp
   183c4:	andeq	r1, r4, ip, lsl ip
   183c8:	andeq	r0, r0, r2, asr r5
   183cc:	muleq	r4, r4, fp
   183d0:	andeq	r0, r0, pc, lsr r5
   183d4:	andeq	r1, r4, ip, ror #24
   183d8:	andeq	r2, r4, r0, ror #27
   183dc:	andeq	r1, r4, r0, asr #24
   183e0:	andeq	r1, r4, r0, lsl #30
   183e4:	strdeq	r1, [r4], -r8
   183e8:	andeq	r1, r4, r8, lsl #30
   183ec:	strdeq	r1, [r4], -r0
   183f0:	ldrdeq	r1, [r4], -ip
   183f4:	ldrdeq	r1, [r4], -r0
   183f8:	andeq	r1, r4, r4, asr #29
   183fc:	ldr	r3, [pc, #-168]	; 1835c <__flatcc_fb_codegen_c@@Base+0x2d64>
   18400:	str	r8, [sp, #52]	; 0x34
   18404:	str	r3, [sp, #48]	; 0x30
   18408:	ldr	r3, [pc, #-176]	; 18360 <__flatcc_fb_codegen_c@@Base+0x2d68>
   1840c:	str	r3, [sp, #56]	; 0x38
   18410:	ldr	r2, [pc, #-48]	; 183e8 <__flatcc_fb_codegen_c@@Base+0x2df0>
   18414:	b	181f4 <__flatcc_fb_codegen_c@@Base+0x2bfc>
   18418:	ldr	r2, [pc, #-196]	; 1835c <__flatcc_fb_codegen_c@@Base+0x2d64>
   1841c:	str	r8, [sp, #52]	; 0x34
   18420:	str	r2, [sp, #48]	; 0x30
   18424:	ldr	r2, [pc, #-204]	; 18360 <__flatcc_fb_codegen_c@@Base+0x2d68>
   18428:	str	r2, [sp, #56]	; 0x38
   1842c:	b	17c80 <__flatcc_fb_codegen_c@@Base+0x2688>
   18430:	ldr	r2, [pc, #-220]	; 1835c <__flatcc_fb_codegen_c@@Base+0x2d64>
   18434:	str	r8, [sp, #52]	; 0x34
   18438:	str	r2, [sp, #48]	; 0x30
   1843c:	ldr	r2, [pc, #-228]	; 18360 <__flatcc_fb_codegen_c@@Base+0x2d68>
   18440:	str	r2, [sp, #56]	; 0x38
   18444:	b	17cb4 <__flatcc_fb_codegen_c@@Base+0x26bc>
   18448:	ldr	r2, [pc, #-108]	; 183e4 <__flatcc_fb_codegen_c@@Base+0x2dec>
   1844c:	b	18140 <__flatcc_fb_codegen_c@@Base+0x2b48>
   18450:	ldr	r2, [pc, #-108]	; 183ec <__flatcc_fb_codegen_c@@Base+0x2df4>
   18454:	b	18140 <__flatcc_fb_codegen_c@@Base+0x2b48>
   18458:	ldr	r2, [pc, #-112]	; 183f0 <__flatcc_fb_codegen_c@@Base+0x2df8>
   1845c:	b	181f4 <__flatcc_fb_codegen_c@@Base+0x2bfc>
   18460:	ldr	r3, [pc, #-256]	; 18368 <__flatcc_fb_codegen_c@@Base+0x2d70>
   18464:	str	r8, [sp, #52]	; 0x34
   18468:	str	r3, [sp, #48]	; 0x30
   1846c:	ldr	r3, [pc, #-264]	; 1836c <__flatcc_fb_codegen_c@@Base+0x2d74>
   18470:	str	r3, [sp, #56]	; 0x38
   18474:	ldr	r2, [pc, #-156]	; 183e0 <__flatcc_fb_codegen_c@@Base+0x2de8>
   18478:	b	181f4 <__flatcc_fb_codegen_c@@Base+0x2bfc>
   1847c:	ldr	r2, [pc, #-284]	; 18368 <__flatcc_fb_codegen_c@@Base+0x2d70>
   18480:	str	r8, [sp, #52]	; 0x34
   18484:	str	r2, [sp, #48]	; 0x30
   18488:	ldr	r2, [pc, #-292]	; 1836c <__flatcc_fb_codegen_c@@Base+0x2d74>
   1848c:	str	r2, [sp, #56]	; 0x38
   18490:	b	17c80 <__flatcc_fb_codegen_c@@Base+0x2688>
   18494:	ldr	r2, [pc, #-168]	; 183f4 <__flatcc_fb_codegen_c@@Base+0x2dfc>
   18498:	b	181f4 <__flatcc_fb_codegen_c@@Base+0x2bfc>
   1849c:	ldr	r2, [pc, #-172]	; 183f8 <__flatcc_fb_codegen_c@@Base+0x2e00>
   184a0:	b	181f4 <__flatcc_fb_codegen_c@@Base+0x2bfc>
   184a4:	ldr	r2, [pc, #-328]	; 18364 <__flatcc_fb_codegen_c@@Base+0x2d6c>
   184a8:	str	r8, [sp, #52]	; 0x34
   184ac:	str	r2, [sp, #48]	; 0x30
   184b0:	str	r2, [sp, #56]	; 0x38
   184b4:	b	17cb4 <__flatcc_fb_codegen_c@@Base+0x26bc>
   184b8:	ldr	r3, [pc, #-348]	; 18364 <__flatcc_fb_codegen_c@@Base+0x2d6c>
   184bc:	str	r8, [sp, #52]	; 0x34
   184c0:	str	r3, [sp, #48]	; 0x30
   184c4:	str	r3, [sp, #56]	; 0x38
   184c8:	b	17ac4 <__flatcc_fb_codegen_c@@Base+0x24cc>
   184cc:	ldr	r2, [pc, #-228]	; 183f0 <__flatcc_fb_codegen_c@@Base+0x2df8>
   184d0:	b	18164 <__flatcc_fb_codegen_c@@Base+0x2b6c>
   184d4:	ldr	r2, [pc, #-232]	; 183f4 <__flatcc_fb_codegen_c@@Base+0x2dfc>
   184d8:	b	18164 <__flatcc_fb_codegen_c@@Base+0x2b6c>
   184dc:	ldr	r2, [pc, #-236]	; 183f8 <__flatcc_fb_codegen_c@@Base+0x2e00>
   184e0:	b	18164 <__flatcc_fb_codegen_c@@Base+0x2b6c>
   184e4:	ldr	r2, [pc, #-268]	; 183e0 <__flatcc_fb_codegen_c@@Base+0x2de8>
   184e8:	b	18140 <__flatcc_fb_codegen_c@@Base+0x2b48>
   184ec:	ldr	r2, [pc, #-268]	; 183e8 <__flatcc_fb_codegen_c@@Base+0x2df0>
   184f0:	b	18140 <__flatcc_fb_codegen_c@@Base+0x2b48>
   184f4:	ldr	r2, [pc, #-276]	; 183e8 <__flatcc_fb_codegen_c@@Base+0x2df0>
   184f8:	b	18164 <__flatcc_fb_codegen_c@@Base+0x2b6c>
   184fc:	ldr	r2, [pc, #-288]	; 183e4 <__flatcc_fb_codegen_c@@Base+0x2dec>
   18500:	b	18164 <__flatcc_fb_codegen_c@@Base+0x2b6c>
   18504:	ldr	r2, [pc, #-288]	; 183ec <__flatcc_fb_codegen_c@@Base+0x2df4>
   18508:	b	18164 <__flatcc_fb_codegen_c@@Base+0x2b6c>
   1850c:	ldr	r2, [pc, #-308]	; 183e0 <__flatcc_fb_codegen_c@@Base+0x2de8>
   18510:	b	18164 <__flatcc_fb_codegen_c@@Base+0x2b6c>
   18514:	ldr	r2, [pc, #-300]	; 183f0 <__flatcc_fb_codegen_c@@Base+0x2df8>
   18518:	b	18140 <__flatcc_fb_codegen_c@@Base+0x2b48>
   1851c:	ldr	r2, [pc, #-304]	; 183f4 <__flatcc_fb_codegen_c@@Base+0x2dfc>
   18520:	b	18140 <__flatcc_fb_codegen_c@@Base+0x2b48>
   18524:	ldr	r2, [pc, #-456]	; 18364 <__flatcc_fb_codegen_c@@Base+0x2d6c>
   18528:	str	r8, [sp, #52]	; 0x34
   1852c:	str	r2, [sp, #48]	; 0x30
   18530:	str	r2, [sp, #56]	; 0x38
   18534:	b	17c80 <__flatcc_fb_codegen_c@@Base+0x2688>
   18538:	ldr	r2, [pc, #-472]	; 18368 <__flatcc_fb_codegen_c@@Base+0x2d70>
   1853c:	str	r8, [sp, #52]	; 0x34
   18540:	str	r2, [sp, #48]	; 0x30
   18544:	ldr	r2, [pc, #-480]	; 1836c <__flatcc_fb_codegen_c@@Base+0x2d74>
   18548:	str	r2, [sp, #56]	; 0x38
   1854c:	b	17cb4 <__flatcc_fb_codegen_c@@Base+0x26bc>
   18550:	ldr	r3, [pc, #-496]	; 18368 <__flatcc_fb_codegen_c@@Base+0x2d70>
   18554:	str	r3, [sp, #48]	; 0x30
   18558:	ldr	r3, [pc, #-500]	; 1836c <__flatcc_fb_codegen_c@@Base+0x2d74>
   1855c:	str	r3, [sp, #56]	; 0x38
   18560:	b	17ac0 <__flatcc_fb_codegen_c@@Base+0x24c8>
   18564:	ldr	r1, [pc, #-440]	; 183b4 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   18568:	ldr	r2, [pc, #-476]	; 18394 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   1856c:	mov	r3, #226	; 0xe2
   18570:	ldr	r0, [r1]
   18574:	str	r2, [sp]
   18578:	ldr	r1, [pc, #-452]	; 183bc <__flatcc_fb_codegen_c@@Base+0x2dc4>
   1857c:	ldr	r2, [pc, #-488]	; 1839c <__flatcc_fb_codegen_c@@Base+0x2da4>
   18580:	bl	13f84 <fprintf@plt>
   18584:	ldr	r3, [pc, #-540]	; 18370 <__flatcc_fb_codegen_c@@Base+0x2d78>
   18588:	mov	r2, #226	; 0xe2
   1858c:	ldr	r1, [pc, #-504]	; 1839c <__flatcc_fb_codegen_c@@Base+0x2da4>
   18590:	ldr	r0, [pc, #-472]	; 183c0 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   18594:	bl	14038 <__assert_fail@plt>
   18598:	ldr	r2, [pc, #-556]	; 18374 <__flatcc_fb_codegen_c@@Base+0x2d7c>
   1859c:	str	r8, [sp, #52]	; 0x34
   185a0:	str	r2, [sp, #48]	; 0x30
   185a4:	ldr	r2, [pc, #-564]	; 18378 <__flatcc_fb_codegen_c@@Base+0x2d80>
   185a8:	str	r2, [sp, #56]	; 0x38
   185ac:	b	17a80 <__flatcc_fb_codegen_c@@Base+0x2488>
   185b0:	ldr	r2, [pc, #-580]	; 18374 <__flatcc_fb_codegen_c@@Base+0x2d7c>
   185b4:	str	r8, [sp, #52]	; 0x34
   185b8:	str	r2, [sp, #48]	; 0x30
   185bc:	ldr	r2, [pc, #-588]	; 18378 <__flatcc_fb_codegen_c@@Base+0x2d80>
   185c0:	str	r2, [sp, #56]	; 0x38
   185c4:	b	17c80 <__flatcc_fb_codegen_c@@Base+0x2688>
   185c8:	ldr	r2, [pc, #-604]	; 18374 <__flatcc_fb_codegen_c@@Base+0x2d7c>
   185cc:	str	r8, [sp, #52]	; 0x34
   185d0:	str	r2, [sp, #48]	; 0x30
   185d4:	ldr	r2, [pc, #-612]	; 18378 <__flatcc_fb_codegen_c@@Base+0x2d80>
   185d8:	str	r2, [sp, #56]	; 0x38
   185dc:	b	17cb4 <__flatcc_fb_codegen_c@@Base+0x26bc>
   185e0:	ldr	r3, [pc, #-628]	; 18374 <__flatcc_fb_codegen_c@@Base+0x2d7c>
   185e4:	str	r3, [sp, #48]	; 0x30
   185e8:	ldr	r3, [pc, #-632]	; 18378 <__flatcc_fb_codegen_c@@Base+0x2d80>
   185ec:	str	r3, [sp, #56]	; 0x38
   185f0:	b	17ac0 <__flatcc_fb_codegen_c@@Base+0x24c8>
   185f4:	ldr	r2, [pc, #-632]	; 18384 <__flatcc_fb_codegen_c@@Base+0x2d8c>
   185f8:	ldrd	r0, [r5, #48]	; 0x30
   185fc:	add	r3, sp, #68	; 0x44
   18600:	str	r3, [sp, #60]	; 0x3c
   18604:	strd	r0, [sp]
   18608:	mov	r0, r3
   1860c:	ldr	r1, [pc, #-664]	; 1837c <__flatcc_fb_codegen_c@@Base+0x2d84>
   18610:	bl	13ff0 <sprintf@plt>
   18614:	b	17fb4 <__flatcc_fb_codegen_c@@Base+0x29bc>
   18618:	ldr	r2, [pc, #-668]	; 18384 <__flatcc_fb_codegen_c@@Base+0x2d8c>
   1861c:	ldrd	r0, [r5, #48]	; 0x30
   18620:	add	r3, sp, #68	; 0x44
   18624:	str	r3, [sp, #60]	; 0x3c
   18628:	strd	r0, [sp]
   1862c:	mov	r0, r3
   18630:	ldr	r1, [pc, #-696]	; 18380 <__flatcc_fb_codegen_c@@Base+0x2d88>
   18634:	bl	13ff0 <sprintf@plt>
   18638:	b	17fb4 <__flatcc_fb_codegen_c@@Base+0x29bc>
   1863c:	ldr	r2, [pc, #-704]	; 18384 <__flatcc_fb_codegen_c@@Base+0x2d8c>
   18640:	add	r3, sp, #68	; 0x44
   18644:	str	r3, [sp, #60]	; 0x3c
   18648:	mov	r0, r3
   1864c:	ldr	r1, [pc, #-716]	; 18388 <__flatcc_fb_codegen_c@@Base+0x2d90>
   18650:	ldrb	r3, [r5, #48]	; 0x30
   18654:	bl	13ff0 <sprintf@plt>
   18658:	b	17fb4 <__flatcc_fb_codegen_c@@Base+0x29bc>
   1865c:	mov	r2, #66	; 0x42
   18660:	mov	r1, #1
   18664:	ldr	r0, [pc, #-716]	; 183a0 <__flatcc_fb_codegen_c@@Base+0x2da8>
   18668:	bl	13f18 <fwrite@plt>
   1866c:	ldr	r3, [r4, #204]	; 0xcc
   18670:	mov	r2, #61	; 0x3d
   18674:	mov	r1, #1
   18678:	ldr	r0, [pc, #-732]	; 183a4 <__flatcc_fb_codegen_c@@Base+0x2dac>
   1867c:	bl	13f18 <fwrite@plt>
   18680:	ldr	r3, [sp, #48]	; 0x30
   18684:	ldr	r0, [r4, #204]	; 0xcc
   18688:	str	r3, [sp, #12]
   1868c:	ldr	r3, [sp, #52]	; 0x34
   18690:	str	r6, [sp, #4]
   18694:	str	r3, [sp, #8]
   18698:	str	r7, [sp]
   1869c:	add	r3, sp, #168	; 0xa8
   186a0:	mov	r2, r4
   186a4:	ldr	r1, [pc, #-800]	; 1838c <__flatcc_fb_codegen_c@@Base+0x2d94>
   186a8:	bl	13f84 <fprintf@plt>
   186ac:	ldr	r3, [r4, #212]	; 0xd4
   186b0:	ldr	r3, [r3, #136]	; 0x88
   186b4:	cmp	r3, #0
   186b8:	beq	1757c <__flatcc_fb_codegen_c@@Base+0x1f84>
   186bc:	ldr	r3, [sp, #48]	; 0x30
   186c0:	ldr	r0, [r4, #204]	; 0xcc
   186c4:	str	r3, [sp, #12]
   186c8:	ldr	r3, [sp, #52]	; 0x34
   186cc:	str	r4, [sp, #16]
   186d0:	str	r3, [sp, #8]
   186d4:	str	r6, [sp, #4]
   186d8:	str	r7, [sp]
   186dc:	add	r3, sp, #168	; 0xa8
   186e0:	mov	r2, r4
   186e4:	ldr	r1, [pc, #-860]	; 18390 <__flatcc_fb_codegen_c@@Base+0x2d98>
   186e8:	bl	13f84 <fprintf@plt>
   186ec:	b	1757c <__flatcc_fb_codegen_c@@Base+0x1f84>
   186f0:	ldr	r1, [pc, #-836]	; 183b4 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   186f4:	ldr	r2, [pc, #-872]	; 18394 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   186f8:	mov	r3, #186	; 0xba
   186fc:	ldr	r0, [r1]
   18700:	str	r2, [sp]
   18704:	ldr	r1, [pc, #-848]	; 183bc <__flatcc_fb_codegen_c@@Base+0x2dc4>
   18708:	ldr	r2, [pc, #-884]	; 1839c <__flatcc_fb_codegen_c@@Base+0x2da4>
   1870c:	bl	13f84 <fprintf@plt>
   18710:	ldr	r3, [pc, #-896]	; 18398 <__flatcc_fb_codegen_c@@Base+0x2da0>
   18714:	mov	r2, #186	; 0xba
   18718:	ldr	r1, [pc, #-900]	; 1839c <__flatcc_fb_codegen_c@@Base+0x2da4>
   1871c:	ldr	r0, [pc, #-868]	; 183c0 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   18720:	bl	14038 <__assert_fail@plt>
   18724:	mov	r2, #66	; 0x42
   18728:	mov	r1, #1
   1872c:	ldr	r0, [pc, #-916]	; 183a0 <__flatcc_fb_codegen_c@@Base+0x2da8>
   18730:	bl	13f18 <fwrite@plt>
   18734:	ldr	r3, [r4, #204]	; 0xcc
   18738:	mov	r2, #61	; 0x3d
   1873c:	mov	r1, #1
   18740:	ldr	r0, [pc, #-932]	; 183a4 <__flatcc_fb_codegen_c@@Base+0x2dac>
   18744:	bl	13f18 <fwrite@plt>
   18748:	add	r3, sp, #388	; 0x184
   1874c:	ldr	r0, [r4, #204]	; 0xcc
   18750:	mov	r2, r4
   18754:	str	r3, [sp, #8]
   18758:	str	r6, [sp, #4]
   1875c:	add	r3, sp, #168	; 0xa8
   18760:	str	r7, [sp]
   18764:	ldr	r1, [pc, #-964]	; 183a8 <__flatcc_fb_codegen_c@@Base+0x2db0>
   18768:	bl	13f84 <fprintf@plt>
   1876c:	ldr	r3, [r4, #212]	; 0xd4
   18770:	ldr	r3, [r3, #136]	; 0x88
   18774:	cmp	r3, #0
   18778:	beq	1757c <__flatcc_fb_codegen_c@@Base+0x1f84>
   1877c:	add	r3, sp, #388	; 0x184
   18780:	ldr	r0, [r4, #204]	; 0xcc
   18784:	mov	r2, r4
   18788:	str	r3, [sp, #8]
   1878c:	str	r4, [sp, #12]
   18790:	str	r6, [sp, #4]
   18794:	str	r7, [sp]
   18798:	add	r3, sp, #168	; 0xa8
   1879c:	ldr	r1, [pc, #-1016]	; 183ac <__flatcc_fb_codegen_c@@Base+0x2db4>
   187a0:	bl	13f84 <fprintf@plt>
   187a4:	b	1757c <__flatcc_fb_codegen_c@@Base+0x1f84>
   187a8:	vldr	d7, [r5, #48]	; 0x30
   187ac:	add	r3, sp, #68	; 0x44
   187b0:	str	r3, [sp, #60]	; 0x3c
   187b4:	mov	r0, r3
   187b8:	vcvt.f32.f64	s14, d7
   187bc:	ldr	r1, [pc, #-1044]	; 183b0 <__flatcc_fb_codegen_c@@Base+0x2db8>
   187c0:	vcvt.f64.f32	d7, s14
   187c4:	vmov	r2, r3, d7
   187c8:	bl	13ff0 <sprintf@plt>
   187cc:	b	17fb4 <__flatcc_fb_codegen_c@@Base+0x29bc>
   187d0:	ldr	r1, [pc, #-1060]	; 183b4 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   187d4:	ldr	r2, [pc, #-1060]	; 183b8 <__flatcc_fb_codegen_c@@Base+0x2dc0>
   187d8:	mov	r3, #1584	; 0x630
   187dc:	ldr	r0, [r1]
   187e0:	str	r2, [sp]
   187e4:	ldr	r1, [pc, #-1072]	; 183bc <__flatcc_fb_codegen_c@@Base+0x2dc4>
   187e8:	ldr	r2, [pc, #-1052]	; 183d4 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   187ec:	bl	13f84 <fprintf@plt>
   187f0:	ldr	r3, [pc, #-1076]	; 183c4 <__flatcc_fb_codegen_c@@Base+0x2dcc>
   187f4:	mov	r2, #1584	; 0x630
   187f8:	ldr	r1, [pc, #-1068]	; 183d4 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   187fc:	ldr	r0, [pc, #-1092]	; 183c0 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   18800:	bl	14038 <__assert_fail@plt>
   18804:	ldr	r2, [pc, #-1056]	; 183ec <__flatcc_fb_codegen_c@@Base+0x2df4>
   18808:	b	185f8 <__flatcc_fb_codegen_c@@Base+0x3000>
   1880c:	ldr	r2, [pc, #-1064]	; 183ec <__flatcc_fb_codegen_c@@Base+0x2df4>
   18810:	b	1861c <__flatcc_fb_codegen_c@@Base+0x3024>
   18814:	ldr	r2, [pc, #-1084]	; 183e0 <__flatcc_fb_codegen_c@@Base+0x2de8>
   18818:	b	1861c <__flatcc_fb_codegen_c@@Base+0x3024>
   1881c:	ldr	r2, [pc, #-1088]	; 183e4 <__flatcc_fb_codegen_c@@Base+0x2dec>
   18820:	b	1861c <__flatcc_fb_codegen_c@@Base+0x3024>
   18824:	ldr	r2, [pc, #-1092]	; 183e8 <__flatcc_fb_codegen_c@@Base+0x2df0>
   18828:	b	1861c <__flatcc_fb_codegen_c@@Base+0x3024>
   1882c:	ldr	r2, [pc, #-1092]	; 183f0 <__flatcc_fb_codegen_c@@Base+0x2df8>
   18830:	b	1861c <__flatcc_fb_codegen_c@@Base+0x3024>
   18834:	ldr	r2, [pc, #-1096]	; 183f4 <__flatcc_fb_codegen_c@@Base+0x2dfc>
   18838:	b	1861c <__flatcc_fb_codegen_c@@Base+0x3024>
   1883c:	ldr	r2, [pc, #-1100]	; 183f8 <__flatcc_fb_codegen_c@@Base+0x2e00>
   18840:	b	1861c <__flatcc_fb_codegen_c@@Base+0x3024>
   18844:	ldr	r3, [pc, #-1160]	; 183c4 <__flatcc_fb_codegen_c@@Base+0x2dcc>
   18848:	ldr	r2, [pc, #-1160]	; 183c8 <__flatcc_fb_codegen_c@@Base+0x2dd0>
   1884c:	ldr	r1, [pc, #-1152]	; 183d4 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   18850:	ldr	r0, [pc, #-1164]	; 183cc <__flatcc_fb_codegen_c@@Base+0x2dd4>
   18854:	bl	14038 <__assert_fail@plt>
   18858:	ldr	r2, [pc, #-1140]	; 183ec <__flatcc_fb_codegen_c@@Base+0x2df4>
   1885c:	b	18640 <__flatcc_fb_codegen_c@@Base+0x3048>
   18860:	ldr	r3, [pc, #-1164]	; 183dc <__flatcc_fb_codegen_c@@Base+0x2de4>
   18864:	ldr	r2, [pc, #-1180]	; 183d0 <__flatcc_fb_codegen_c@@Base+0x2dd8>
   18868:	ldr	r1, [pc, #-1180]	; 183d4 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   1886c:	ldr	r0, [pc, #-1180]	; 183d8 <__flatcc_fb_codegen_c@@Base+0x2de0>
   18870:	bl	14038 <__assert_fail@plt>
   18874:	ldr	r2, [pc, #-1172]	; 183e8 <__flatcc_fb_codegen_c@@Base+0x2df0>
   18878:	b	185f8 <__flatcc_fb_codegen_c@@Base+0x3000>
   1887c:	ldr	r2, [pc, #-1172]	; 183f0 <__flatcc_fb_codegen_c@@Base+0x2df8>
   18880:	b	185f8 <__flatcc_fb_codegen_c@@Base+0x3000>
   18884:	ldr	r2, [pc, #-1176]	; 183f4 <__flatcc_fb_codegen_c@@Base+0x2dfc>
   18888:	b	185f8 <__flatcc_fb_codegen_c@@Base+0x3000>
   1888c:	ldr	r2, [pc, #-1180]	; 183f8 <__flatcc_fb_codegen_c@@Base+0x2e00>
   18890:	b	185f8 <__flatcc_fb_codegen_c@@Base+0x3000>
   18894:	ldr	r2, [pc, #-1212]	; 183e0 <__flatcc_fb_codegen_c@@Base+0x2de8>
   18898:	b	185f8 <__flatcc_fb_codegen_c@@Base+0x3000>
   1889c:	ldr	r2, [pc, #-1216]	; 183e4 <__flatcc_fb_codegen_c@@Base+0x2dec>
   188a0:	b	185f8 <__flatcc_fb_codegen_c@@Base+0x3000>
   188a4:	ldr	r2, [pc, #-1228]	; 183e0 <__flatcc_fb_codegen_c@@Base+0x2de8>
   188a8:	b	18640 <__flatcc_fb_codegen_c@@Base+0x3048>
   188ac:	ldr	r2, [pc, #-1232]	; 183e4 <__flatcc_fb_codegen_c@@Base+0x2dec>
   188b0:	b	18640 <__flatcc_fb_codegen_c@@Base+0x3048>
   188b4:	ldr	r2, [pc, #-1236]	; 183e8 <__flatcc_fb_codegen_c@@Base+0x2df0>
   188b8:	b	18640 <__flatcc_fb_codegen_c@@Base+0x3048>
   188bc:	ldr	r2, [pc, #-1236]	; 183f0 <__flatcc_fb_codegen_c@@Base+0x2df8>
   188c0:	b	18640 <__flatcc_fb_codegen_c@@Base+0x3048>
   188c4:	ldr	r2, [pc, #-1240]	; 183f4 <__flatcc_fb_codegen_c@@Base+0x2dfc>
   188c8:	b	18640 <__flatcc_fb_codegen_c@@Base+0x3048>
   188cc:	ldr	r2, [pc, #-1244]	; 183f8 <__flatcc_fb_codegen_c@@Base+0x2e00>
   188d0:	b	18640 <__flatcc_fb_codegen_c@@Base+0x3048>

000188d4 <__flatcc_fb_gen_common_c_header@@Base>:
   188d4:	push	{r4, r5, lr}
   188d8:	mov	r4, r0
   188dc:	add	r5, r0, #102	; 0x66
   188e0:	sub	sp, sp, #236	; 0xec
   188e4:	mov	r3, r5
   188e8:	mov	r2, r5
   188ec:	ldr	r1, [pc, #2812]	; 193f0 <__flatcc_fb_gen_common_c_header@@Base+0xb1c>
   188f0:	ldr	r0, [r0, #204]	; 0xcc
   188f4:	bl	13f84 <fprintf@plt>
   188f8:	ldr	r3, [r4, #204]	; 0xcc
   188fc:	mov	r2, #81	; 0x51
   18900:	mov	r1, #1
   18904:	ldr	r0, [pc, #2792]	; 193f4 <__flatcc_fb_gen_common_c_header@@Base+0xb20>
   18908:	bl	13f18 <fwrite@plt>
   1890c:	ldr	r3, [r4, #204]	; 0xcc
   18910:	mov	r2, #52	; 0x34
   18914:	mov	r1, #1
   18918:	ldr	r0, [pc, #2776]	; 193f8 <__flatcc_fb_gen_common_c_header@@Base+0xb24>
   1891c:	bl	13f18 <fwrite@plt>
   18920:	ldr	r3, [r4, #212]	; 0xd4
   18924:	ldr	r2, [r3, #136]	; 0x88
   18928:	cmp	r2, #0
   1892c:	beq	193d4 <__flatcc_fb_gen_common_c_header@@Base+0xb00>
   18930:	ldr	r2, [r3, #140]	; 0x8c
   18934:	ldr	r3, [r4, #204]	; 0xcc
   18938:	cmp	r2, #0
   1893c:	bne	193bc <__flatcc_fb_gen_common_c_header@@Base+0xae8>
   18940:	mov	r2, #41	; 0x29
   18944:	mov	r1, #1
   18948:	ldr	r0, [pc, #2732]	; 193fc <__flatcc_fb_gen_common_c_header@@Base+0xb28>
   1894c:	bl	13f18 <fwrite@plt>
   18950:	ldr	r1, [pc, #2728]	; 19400 <__flatcc_fb_gen_common_c_header@@Base+0xb2c>
   18954:	mov	r0, r4
   18958:	bl	13eb8 <strcmp@plt>
   1895c:	cmp	r0, #0
   18960:	bne	19348 <__flatcc_fb_gen_common_c_header@@Base+0xa74>
   18964:	mov	r3, r4
   18968:	mov	r2, r4
   1896c:	ldr	r1, [pc, #2704]	; 19404 <__flatcc_fb_gen_common_c_header@@Base+0xb30>
   18970:	ldr	r0, [r4, #204]	; 0xcc
   18974:	bl	13f84 <fprintf@plt>
   18978:	ldr	r0, [r4, #204]	; 0xcc
   1897c:	mov	r3, r4
   18980:	mov	r2, r4
   18984:	ldr	r1, [pc, #2684]	; 19408 <__flatcc_fb_gen_common_c_header@@Base+0xb34>
   18988:	str	r4, [sp, #16]
   1898c:	str	r4, [sp, #12]
   18990:	str	r4, [sp, #8]
   18994:	str	r4, [sp, #4]
   18998:	str	r4, [sp]
   1899c:	bl	13f84 <fprintf@plt>
   189a0:	mov	r3, r4
   189a4:	mov	r2, r4
   189a8:	ldr	r1, [pc, #2652]	; 1940c <__flatcc_fb_gen_common_c_header@@Base+0xb38>
   189ac:	ldr	r0, [r4, #204]	; 0xcc
   189b0:	bl	13f84 <fprintf@plt>
   189b4:	ldr	r0, [r4, #204]	; 0xcc
   189b8:	mov	r3, r4
   189bc:	str	r4, [sp, #4]
   189c0:	str	r4, [sp]
   189c4:	mov	r2, r4
   189c8:	ldr	r1, [pc, #2624]	; 19410 <__flatcc_fb_gen_common_c_header@@Base+0xb3c>
   189cc:	bl	13f84 <fprintf@plt>
   189d0:	ldr	r3, [r4, #212]	; 0xd4
   189d4:	ldr	r3, [r3, #32]
   189d8:	cmp	r3, #0
   189dc:	beq	19310 <__flatcc_fb_gen_common_c_header@@Base+0xa3c>
   189e0:	mov	r2, r4
   189e4:	ldr	r1, [pc, #2600]	; 19414 <__flatcc_fb_gen_common_c_header@@Base+0xb40>
   189e8:	ldr	r0, [r4, #204]	; 0xcc
   189ec:	bl	13f84 <fprintf@plt>
   189f0:	mov	r3, r4
   189f4:	mov	r2, r4
   189f8:	ldr	r1, [pc, #2584]	; 19418 <__flatcc_fb_gen_common_c_header@@Base+0xb44>
   189fc:	ldr	r0, [r4, #204]	; 0xcc
   18a00:	bl	13f84 <fprintf@plt>
   18a04:	ldr	r0, [r4, #204]	; 0xcc
   18a08:	mov	r3, r4
   18a0c:	mov	r2, r4
   18a10:	ldr	r1, [pc, #2564]	; 1941c <__flatcc_fb_gen_common_c_header@@Base+0xb48>
   18a14:	str	r4, [sp, #8]
   18a18:	str	r4, [sp, #4]
   18a1c:	str	r4, [sp]
   18a20:	bl	13f84 <fprintf@plt>
   18a24:	ldr	r0, [r4, #204]	; 0xcc
   18a28:	mov	r3, r4
   18a2c:	mov	r2, r4
   18a30:	ldr	r1, [pc, #2536]	; 19420 <__flatcc_fb_gen_common_c_header@@Base+0xb4c>
   18a34:	str	r4, [sp, #8]
   18a38:	str	r4, [sp, #4]
   18a3c:	str	r4, [sp]
   18a40:	bl	13f84 <fprintf@plt>
   18a44:	ldr	r0, [r4, #204]	; 0xcc
   18a48:	mov	r3, r4
   18a4c:	mov	r2, r4
   18a50:	ldr	r1, [pc, #2508]	; 19424 <__flatcc_fb_gen_common_c_header@@Base+0xb50>
   18a54:	str	r4, [sp]
   18a58:	bl	13f84 <fprintf@plt>
   18a5c:	ldr	r0, [r4, #204]	; 0xcc
   18a60:	mov	r3, r4
   18a64:	mov	r2, r4
   18a68:	ldr	r1, [pc, #2488]	; 19428 <__flatcc_fb_gen_common_c_header@@Base+0xb54>
   18a6c:	str	r4, [sp]
   18a70:	bl	13f84 <fprintf@plt>
   18a74:	ldr	r0, [r4, #204]	; 0xcc
   18a78:	mov	r3, r4
   18a7c:	mov	r2, r4
   18a80:	ldr	r1, [pc, #2468]	; 1942c <__flatcc_fb_gen_common_c_header@@Base+0xb58>
   18a84:	str	r4, [sp]
   18a88:	bl	13f84 <fprintf@plt>
   18a8c:	ldr	r0, [r4, #204]	; 0xcc
   18a90:	mov	r3, r4
   18a94:	str	r4, [sp, #8]
   18a98:	str	r4, [sp, #4]
   18a9c:	str	r4, [sp]
   18aa0:	mov	r2, r4
   18aa4:	ldr	r1, [pc, #2436]	; 19430 <__flatcc_fb_gen_common_c_header@@Base+0xb5c>
   18aa8:	bl	13f84 <fprintf@plt>
   18aac:	ldr	r3, [r4, #212]	; 0xd4
   18ab0:	ldr	r3, [r3, #32]
   18ab4:	cmp	r3, #0
   18ab8:	beq	19300 <__flatcc_fb_gen_common_c_header@@Base+0xa2c>
   18abc:	mov	r2, r4
   18ac0:	ldr	r1, [pc, #2412]	; 19434 <__flatcc_fb_gen_common_c_header@@Base+0xb60>
   18ac4:	ldr	r0, [r4, #204]	; 0xcc
   18ac8:	bl	13f84 <fprintf@plt>
   18acc:	ldr	r0, [r4, #204]	; 0xcc
   18ad0:	mov	r3, r4
   18ad4:	mov	r2, r4
   18ad8:	ldr	r1, [pc, #2392]	; 19438 <__flatcc_fb_gen_common_c_header@@Base+0xb64>
   18adc:	str	r4, [sp, #4]
   18ae0:	str	r4, [sp]
   18ae4:	bl	13f84 <fprintf@plt>
   18ae8:	mov	r3, r4
   18aec:	mov	r2, r4
   18af0:	ldr	r1, [pc, #2372]	; 1943c <__flatcc_fb_gen_common_c_header@@Base+0xb68>
   18af4:	ldr	r0, [r4, #204]	; 0xcc
   18af8:	bl	13f84 <fprintf@plt>
   18afc:	ldr	r0, [r4, #204]	; 0xcc
   18b00:	mov	r3, r4
   18b04:	mov	r2, r4
   18b08:	ldr	r1, [pc, #2352]	; 19440 <__flatcc_fb_gen_common_c_header@@Base+0xb6c>
   18b0c:	str	r4, [sp]
   18b10:	bl	13f84 <fprintf@plt>
   18b14:	mov	r3, r4
   18b18:	mov	r2, r4
   18b1c:	ldr	r1, [pc, #2336]	; 19444 <__flatcc_fb_gen_common_c_header@@Base+0xb70>
   18b20:	ldr	r0, [r4, #204]	; 0xcc
   18b24:	bl	13f84 <fprintf@plt>
   18b28:	ldr	r0, [r4, #204]	; 0xcc
   18b2c:	mov	r3, r4
   18b30:	mov	r2, r4
   18b34:	ldr	r1, [pc, #2316]	; 19448 <__flatcc_fb_gen_common_c_header@@Base+0xb74>
   18b38:	str	r4, [sp, #4]
   18b3c:	str	r4, [sp]
   18b40:	bl	13f84 <fprintf@plt>
   18b44:	mov	r3, r4
   18b48:	mov	r2, r4
   18b4c:	ldr	r1, [pc, #2296]	; 1944c <__flatcc_fb_gen_common_c_header@@Base+0xb78>
   18b50:	ldr	r0, [r4, #204]	; 0xcc
   18b54:	bl	13f84 <fprintf@plt>
   18b58:	mov	r3, r4
   18b5c:	mov	r2, r4
   18b60:	ldr	r1, [pc, #2280]	; 19450 <__flatcc_fb_gen_common_c_header@@Base+0xb7c>
   18b64:	ldr	r0, [r4, #204]	; 0xcc
   18b68:	bl	13f84 <fprintf@plt>
   18b6c:	ldr	r0, [r4, #204]	; 0xcc
   18b70:	mov	r3, r4
   18b74:	mov	r2, r4
   18b78:	ldr	r1, [pc, #2260]	; 19454 <__flatcc_fb_gen_common_c_header@@Base+0xb80>
   18b7c:	str	r4, [sp, #4]
   18b80:	str	r4, [sp]
   18b84:	bl	13f84 <fprintf@plt>
   18b88:	ldr	r0, [r4, #204]	; 0xcc
   18b8c:	mov	r3, r4
   18b90:	mov	r2, r4
   18b94:	ldr	r1, [pc, #2236]	; 19458 <__flatcc_fb_gen_common_c_header@@Base+0xb84>
   18b98:	str	r4, [sp, #36]	; 0x24
   18b9c:	str	r4, [sp, #32]
   18ba0:	str	r4, [sp, #28]
   18ba4:	str	r4, [sp, #24]
   18ba8:	str	r4, [sp, #20]
   18bac:	str	r4, [sp, #16]
   18bb0:	str	r4, [sp, #12]
   18bb4:	str	r4, [sp, #8]
   18bb8:	str	r4, [sp, #4]
   18bbc:	str	r4, [sp]
   18bc0:	bl	13f84 <fprintf@plt>
   18bc4:	mov	r2, r4
   18bc8:	ldr	r1, [pc, #2188]	; 1945c <__flatcc_fb_gen_common_c_header@@Base+0xb88>
   18bcc:	ldr	r0, [r4, #204]	; 0xcc
   18bd0:	bl	13f84 <fprintf@plt>
   18bd4:	ldr	r0, [r4, #204]	; 0xcc
   18bd8:	mov	r3, r4
   18bdc:	mov	r2, r4
   18be0:	ldr	r1, [pc, #2168]	; 19460 <__flatcc_fb_gen_common_c_header@@Base+0xb8c>
   18be4:	str	r4, [sp, #4]
   18be8:	str	r4, [sp]
   18bec:	bl	13f84 <fprintf@plt>
   18bf0:	ldr	r0, [r4, #204]	; 0xcc
   18bf4:	mov	r3, r4
   18bf8:	mov	r2, r4
   18bfc:	ldr	r1, [pc, #2144]	; 19464 <__flatcc_fb_gen_common_c_header@@Base+0xb90>
   18c00:	str	r4, [sp, #56]	; 0x38
   18c04:	str	r4, [sp, #52]	; 0x34
   18c08:	str	r4, [sp, #48]	; 0x30
   18c0c:	str	r4, [sp, #44]	; 0x2c
   18c10:	str	r4, [sp, #40]	; 0x28
   18c14:	str	r4, [sp, #36]	; 0x24
   18c18:	str	r4, [sp, #32]
   18c1c:	str	r4, [sp, #28]
   18c20:	str	r4, [sp, #24]
   18c24:	str	r4, [sp, #20]
   18c28:	str	r4, [sp, #16]
   18c2c:	str	r4, [sp, #12]
   18c30:	str	r4, [sp, #8]
   18c34:	str	r4, [sp, #4]
   18c38:	str	r4, [sp]
   18c3c:	bl	13f84 <fprintf@plt>
   18c40:	ldr	r0, [r4, #204]	; 0xcc
   18c44:	mov	r3, r4
   18c48:	mov	r2, r4
   18c4c:	ldr	r1, [pc, #2068]	; 19468 <__flatcc_fb_gen_common_c_header@@Base+0xb94>
   18c50:	str	r4, [sp, #20]
   18c54:	str	r4, [sp, #16]
   18c58:	str	r4, [sp, #12]
   18c5c:	str	r4, [sp, #8]
   18c60:	str	r4, [sp, #4]
   18c64:	str	r4, [sp]
   18c68:	bl	13f84 <fprintf@plt>
   18c6c:	ldr	r0, [r4, #204]	; 0xcc
   18c70:	mov	r3, r4
   18c74:	mov	r2, r4
   18c78:	ldr	r1, [pc, #2028]	; 1946c <__flatcc_fb_gen_common_c_header@@Base+0xb98>
   18c7c:	str	r4, [sp, #4]
   18c80:	str	r4, [sp]
   18c84:	bl	13f84 <fprintf@plt>
   18c88:	mov	r3, r4
   18c8c:	ldr	r0, [r4, #204]	; 0xcc
   18c90:	mov	r2, r4
   18c94:	ldr	r1, [pc, #2004]	; 19470 <__flatcc_fb_gen_common_c_header@@Base+0xb9c>
   18c98:	str	r4, [sp, #4]
   18c9c:	str	r4, [sp]
   18ca0:	bl	13f84 <fprintf@plt>
   18ca4:	mov	r2, r4
   18ca8:	ldr	r1, [pc, #1988]	; 19474 <__flatcc_fb_gen_common_c_header@@Base+0xba0>
   18cac:	ldr	r0, [r4, #204]	; 0xcc
   18cb0:	bl	13f84 <fprintf@plt>
   18cb4:	mov	r2, r4
   18cb8:	ldr	r1, [pc, #1976]	; 19478 <__flatcc_fb_gen_common_c_header@@Base+0xba4>
   18cbc:	ldr	r0, [r4, #204]	; 0xcc
   18cc0:	bl	13f84 <fprintf@plt>
   18cc4:	mov	r2, r4
   18cc8:	ldr	r1, [pc, #1964]	; 1947c <__flatcc_fb_gen_common_c_header@@Base+0xba8>
   18ccc:	ldr	r0, [r4, #204]	; 0xcc
   18cd0:	bl	13f84 <fprintf@plt>
   18cd4:	mov	r2, r4
   18cd8:	ldr	r1, [pc, #1952]	; 19480 <__flatcc_fb_gen_common_c_header@@Base+0xbac>
   18cdc:	ldr	r0, [r4, #204]	; 0xcc
   18ce0:	bl	13f84 <fprintf@plt>
   18ce4:	mov	r2, r4
   18ce8:	ldr	r1, [pc, #1940]	; 19484 <__flatcc_fb_gen_common_c_header@@Base+0xbb0>
   18cec:	ldr	r0, [r4, #204]	; 0xcc
   18cf0:	bl	13f84 <fprintf@plt>
   18cf4:	ldr	r0, [r4, #204]	; 0xcc
   18cf8:	mov	r3, r4
   18cfc:	mov	r2, r4
   18d00:	ldr	r1, [pc, #1920]	; 19488 <__flatcc_fb_gen_common_c_header@@Base+0xbb4>
   18d04:	str	r4, [sp, #4]
   18d08:	str	r4, [sp]
   18d0c:	bl	13f84 <fprintf@plt>
   18d10:	ldr	r0, [r4, #204]	; 0xcc
   18d14:	mov	r3, r4
   18d18:	mov	r2, r4
   18d1c:	ldr	r1, [pc, #1896]	; 1948c <__flatcc_fb_gen_common_c_header@@Base+0xbb8>
   18d20:	str	r4, [sp, #12]
   18d24:	str	r4, [sp, #8]
   18d28:	str	r4, [sp, #4]
   18d2c:	str	r4, [sp]
   18d30:	bl	13f84 <fprintf@plt>
   18d34:	ldr	r0, [r4, #204]	; 0xcc
   18d38:	mov	r3, r4
   18d3c:	mov	r2, r4
   18d40:	ldr	r1, [pc, #1864]	; 19490 <__flatcc_fb_gen_common_c_header@@Base+0xbbc>
   18d44:	str	r4, [sp]
   18d48:	bl	13f84 <fprintf@plt>
   18d4c:	ldr	r0, [r4, #204]	; 0xcc
   18d50:	mov	r3, r4
   18d54:	mov	r2, r4
   18d58:	ldr	r1, [pc, #1844]	; 19494 <__flatcc_fb_gen_common_c_header@@Base+0xbc0>
   18d5c:	str	r4, [sp, #32]
   18d60:	str	r4, [sp, #28]
   18d64:	str	r4, [sp, #24]
   18d68:	str	r4, [sp, #20]
   18d6c:	str	r4, [sp, #16]
   18d70:	str	r4, [sp, #12]
   18d74:	str	r4, [sp, #8]
   18d78:	str	r4, [sp, #4]
   18d7c:	str	r4, [sp]
   18d80:	bl	13f84 <fprintf@plt>
   18d84:	mov	r3, r4
   18d88:	mov	r2, r4
   18d8c:	ldr	r1, [pc, #1796]	; 19498 <__flatcc_fb_gen_common_c_header@@Base+0xbc4>
   18d90:	ldr	r0, [r4, #204]	; 0xcc
   18d94:	bl	13f84 <fprintf@plt>
   18d98:	ldr	r0, [r4, #204]	; 0xcc
   18d9c:	mov	r3, r4
   18da0:	mov	r2, r4
   18da4:	ldr	r1, [pc, #1776]	; 1949c <__flatcc_fb_gen_common_c_header@@Base+0xbc8>
   18da8:	str	r4, [sp]
   18dac:	bl	13f84 <fprintf@plt>
   18db0:	mov	r3, r4
   18db4:	ldr	r0, [r4, #204]	; 0xcc
   18db8:	mov	r2, r4
   18dbc:	ldr	r1, [pc, #1756]	; 194a0 <__flatcc_fb_gen_common_c_header@@Base+0xbcc>
   18dc0:	str	r4, [sp]
   18dc4:	bl	13f84 <fprintf@plt>
   18dc8:	mov	r2, r4
   18dcc:	ldr	r1, [pc, #1744]	; 194a4 <__flatcc_fb_gen_common_c_header@@Base+0xbd0>
   18dd0:	ldr	r0, [r4, #204]	; 0xcc
   18dd4:	bl	13f84 <fprintf@plt>
   18dd8:	mov	r2, r4
   18ddc:	ldr	r1, [pc, #1732]	; 194a8 <__flatcc_fb_gen_common_c_header@@Base+0xbd4>
   18de0:	ldr	r0, [r4, #204]	; 0xcc
   18de4:	bl	13f84 <fprintf@plt>
   18de8:	mov	r3, r4
   18dec:	mov	r2, r4
   18df0:	ldr	r1, [pc, #1716]	; 194ac <__flatcc_fb_gen_common_c_header@@Base+0xbd8>
   18df4:	ldr	r0, [r4, #204]	; 0xcc
   18df8:	bl	13f84 <fprintf@plt>
   18dfc:	mov	r3, r4
   18e00:	mov	r2, r4
   18e04:	ldr	r1, [pc, #1700]	; 194b0 <__flatcc_fb_gen_common_c_header@@Base+0xbdc>
   18e08:	ldr	r0, [r4, #204]	; 0xcc
   18e0c:	bl	13f84 <fprintf@plt>
   18e10:	ldr	r0, [r4, #204]	; 0xcc
   18e14:	mov	r3, r4
   18e18:	mov	r2, r4
   18e1c:	ldr	r1, [pc, #1680]	; 194b4 <__flatcc_fb_gen_common_c_header@@Base+0xbe0>
   18e20:	str	r4, [sp, #32]
   18e24:	str	r4, [sp, #28]
   18e28:	str	r4, [sp, #24]
   18e2c:	str	r4, [sp, #20]
   18e30:	str	r4, [sp, #16]
   18e34:	str	r4, [sp, #12]
   18e38:	str	r4, [sp, #8]
   18e3c:	str	r4, [sp, #4]
   18e40:	str	r4, [sp]
   18e44:	bl	13f84 <fprintf@plt>
   18e48:	ldr	r0, [r4, #204]	; 0xcc
   18e4c:	mov	r3, r4
   18e50:	mov	r2, r4
   18e54:	ldr	r1, [pc, #1628]	; 194b8 <__flatcc_fb_gen_common_c_header@@Base+0xbe4>
   18e58:	str	r4, [sp, #32]
   18e5c:	str	r4, [sp, #28]
   18e60:	str	r4, [sp, #24]
   18e64:	str	r4, [sp, #20]
   18e68:	str	r4, [sp, #16]
   18e6c:	str	r4, [sp, #12]
   18e70:	str	r4, [sp, #8]
   18e74:	str	r4, [sp, #4]
   18e78:	str	r4, [sp]
   18e7c:	bl	13f84 <fprintf@plt>
   18e80:	ldr	r0, [r4, #204]	; 0xcc
   18e84:	mov	r3, r4
   18e88:	mov	r2, r4
   18e8c:	ldr	r1, [pc, #1576]	; 194bc <__flatcc_fb_gen_common_c_header@@Base+0xbe8>
   18e90:	str	r4, [sp, #16]
   18e94:	str	r4, [sp, #12]
   18e98:	str	r4, [sp, #8]
   18e9c:	str	r4, [sp, #4]
   18ea0:	str	r4, [sp]
   18ea4:	bl	13f84 <fprintf@plt>
   18ea8:	ldr	r0, [r4, #204]	; 0xcc
   18eac:	mov	r3, r4
   18eb0:	mov	r2, r4
   18eb4:	ldr	r1, [pc, #1540]	; 194c0 <__flatcc_fb_gen_common_c_header@@Base+0xbec>
   18eb8:	str	r4, [sp, #32]
   18ebc:	str	r4, [sp, #28]
   18ec0:	str	r4, [sp, #24]
   18ec4:	str	r4, [sp, #20]
   18ec8:	str	r4, [sp, #16]
   18ecc:	str	r4, [sp, #12]
   18ed0:	str	r4, [sp, #8]
   18ed4:	str	r4, [sp, #4]
   18ed8:	str	r4, [sp]
   18edc:	bl	13f84 <fprintf@plt>
   18ee0:	ldr	r0, [r4, #204]	; 0xcc
   18ee4:	mov	r3, r4
   18ee8:	mov	r2, r4
   18eec:	ldr	r1, [pc, #1488]	; 194c4 <__flatcc_fb_gen_common_c_header@@Base+0xbf0>
   18ef0:	str	r4, [sp, #40]	; 0x28
   18ef4:	str	r4, [sp, #36]	; 0x24
   18ef8:	str	r4, [sp, #32]
   18efc:	str	r4, [sp, #28]
   18f00:	str	r4, [sp, #24]
   18f04:	str	r4, [sp, #20]
   18f08:	str	r4, [sp, #16]
   18f0c:	str	r4, [sp, #12]
   18f10:	str	r4, [sp, #8]
   18f14:	str	r4, [sp, #4]
   18f18:	str	r4, [sp]
   18f1c:	bl	13f84 <fprintf@plt>
   18f20:	mov	r2, r4
   18f24:	ldr	r1, [pc, #1436]	; 194c8 <__flatcc_fb_gen_common_c_header@@Base+0xbf4>
   18f28:	ldr	r0, [r4, #204]	; 0xcc
   18f2c:	bl	13f84 <fprintf@plt>
   18f30:	mov	r2, r4
   18f34:	ldr	r1, [pc, #1424]	; 194cc <__flatcc_fb_gen_common_c_header@@Base+0xbf8>
   18f38:	ldr	r0, [r4, #204]	; 0xcc
   18f3c:	bl	13f84 <fprintf@plt>
   18f40:	ldr	r3, [r4, #212]	; 0xd4
   18f44:	ldr	r3, [r3, #136]	; 0x88
   18f48:	cmp	r3, #0
   18f4c:	beq	192e8 <__flatcc_fb_gen_common_c_header@@Base+0xa14>
   18f50:	mov	r0, r4
   18f54:	bl	19b10 <__flatcc_gen_sort@@Base>
   18f58:	ldr	r0, [r4, #204]	; 0xcc
   18f5c:	mov	r3, r4
   18f60:	str	r4, [sp, #8]
   18f64:	str	r4, [sp, #4]
   18f68:	str	r4, [sp]
   18f6c:	mov	r2, r4
   18f70:	ldr	r1, [pc, #1368]	; 194d0 <__flatcc_fb_gen_common_c_header@@Base+0xbfc>
   18f74:	bl	13f84 <fprintf@plt>
   18f78:	ldr	r3, [r4, #212]	; 0xd4
   18f7c:	ldr	r3, [r3, #136]	; 0x88
   18f80:	cmp	r3, #0
   18f84:	beq	192d8 <__flatcc_fb_gen_common_c_header@@Base+0xa04>
   18f88:	mov	r2, r4
   18f8c:	ldr	r1, [pc, #1344]	; 194d4 <__flatcc_fb_gen_common_c_header@@Base+0xc00>
   18f90:	ldr	r0, [r4, #204]	; 0xcc
   18f94:	bl	13f84 <fprintf@plt>
   18f98:	ldr	r1, [r4, #204]	; 0xcc
   18f9c:	mov	r0, #10
   18fa0:	bl	13fe4 <fputc@plt>
   18fa4:	ldr	r0, [r4, #204]	; 0xcc
   18fa8:	mov	r3, r4
   18fac:	mov	r2, r4
   18fb0:	ldr	r1, [pc, #1312]	; 194d8 <__flatcc_fb_gen_common_c_header@@Base+0xc04>
   18fb4:	str	r4, [sp]
   18fb8:	bl	13f84 <fprintf@plt>
   18fbc:	ldr	r0, [r4, #204]	; 0xcc
   18fc0:	mov	r3, r4
   18fc4:	mov	r2, r4
   18fc8:	ldr	r1, [pc, #1292]	; 194dc <__flatcc_fb_gen_common_c_header@@Base+0xc08>
   18fcc:	str	r4, [sp, #24]
   18fd0:	str	r4, [sp, #20]
   18fd4:	str	r4, [sp, #16]
   18fd8:	str	r4, [sp, #12]
   18fdc:	str	r4, [sp, #8]
   18fe0:	str	r4, [sp, #4]
   18fe4:	str	r4, [sp]
   18fe8:	str	r4, [sp, #92]	; 0x5c
   18fec:	str	r4, [sp, #88]	; 0x58
   18ff0:	str	r4, [sp, #84]	; 0x54
   18ff4:	str	r4, [sp, #80]	; 0x50
   18ff8:	str	r4, [sp, #76]	; 0x4c
   18ffc:	str	r4, [sp, #72]	; 0x48
   19000:	str	r4, [sp, #68]	; 0x44
   19004:	str	r4, [sp, #64]	; 0x40
   19008:	str	r4, [sp, #60]	; 0x3c
   1900c:	str	r4, [sp, #56]	; 0x38
   19010:	str	r4, [sp, #52]	; 0x34
   19014:	str	r4, [sp, #48]	; 0x30
   19018:	str	r4, [sp, #44]	; 0x2c
   1901c:	str	r4, [sp, #40]	; 0x28
   19020:	str	r4, [sp, #36]	; 0x24
   19024:	str	r4, [sp, #32]
   19028:	str	r4, [sp, #28]
   1902c:	bl	13f84 <fprintf@plt>
   19030:	ldr	r0, [r4, #204]	; 0xcc
   19034:	mov	r3, r4
   19038:	mov	r2, r4
   1903c:	ldr	r1, [pc, #1180]	; 194e0 <__flatcc_fb_gen_common_c_header@@Base+0xc0c>
   19040:	str	r4, [sp, #36]	; 0x24
   19044:	str	r4, [sp, #32]
   19048:	str	r4, [sp, #28]
   1904c:	str	r4, [sp, #24]
   19050:	str	r4, [sp, #20]
   19054:	str	r4, [sp, #16]
   19058:	str	r4, [sp, #12]
   1905c:	str	r4, [sp, #8]
   19060:	str	r4, [sp, #4]
   19064:	str	r4, [sp]
   19068:	bl	13f84 <fprintf@plt>
   1906c:	ldr	r0, [r4, #204]	; 0xcc
   19070:	mov	r3, r4
   19074:	str	r4, [sp, #228]	; 0xe4
   19078:	str	r4, [sp, #224]	; 0xe0
   1907c:	str	r4, [sp, #220]	; 0xdc
   19080:	str	r4, [sp, #216]	; 0xd8
   19084:	str	r4, [sp, #212]	; 0xd4
   19088:	str	r4, [sp, #208]	; 0xd0
   1908c:	str	r4, [sp, #204]	; 0xcc
   19090:	str	r4, [sp, #200]	; 0xc8
   19094:	str	r4, [sp, #196]	; 0xc4
   19098:	str	r4, [sp, #192]	; 0xc0
   1909c:	str	r4, [sp, #188]	; 0xbc
   190a0:	str	r4, [sp, #184]	; 0xb8
   190a4:	str	r4, [sp, #180]	; 0xb4
   190a8:	str	r4, [sp, #176]	; 0xb0
   190ac:	str	r4, [sp, #172]	; 0xac
   190b0:	str	r4, [sp, #168]	; 0xa8
   190b4:	str	r4, [sp, #164]	; 0xa4
   190b8:	str	r4, [sp, #160]	; 0xa0
   190bc:	str	r4, [sp, #156]	; 0x9c
   190c0:	str	r4, [sp, #152]	; 0x98
   190c4:	str	r4, [sp, #148]	; 0x94
   190c8:	str	r4, [sp, #144]	; 0x90
   190cc:	str	r4, [sp, #140]	; 0x8c
   190d0:	str	r4, [sp, #136]	; 0x88
   190d4:	str	r4, [sp, #132]	; 0x84
   190d8:	str	r4, [sp, #128]	; 0x80
   190dc:	str	r4, [sp, #124]	; 0x7c
   190e0:	str	r4, [sp, #120]	; 0x78
   190e4:	str	r4, [sp, #116]	; 0x74
   190e8:	str	r4, [sp, #112]	; 0x70
   190ec:	str	r4, [sp, #108]	; 0x6c
   190f0:	mov	r2, r4
   190f4:	str	r4, [sp, #104]	; 0x68
   190f8:	ldr	r1, [pc, #996]	; 194e4 <__flatcc_fb_gen_common_c_header@@Base+0xc10>
   190fc:	str	r4, [sp, #20]
   19100:	str	r4, [sp, #16]
   19104:	str	r4, [sp, #12]
   19108:	str	r4, [sp, #8]
   1910c:	str	r4, [sp, #4]
   19110:	str	r4, [sp]
   19114:	str	r4, [sp, #100]	; 0x64
   19118:	str	r4, [sp, #96]	; 0x60
   1911c:	str	r4, [sp, #92]	; 0x5c
   19120:	str	r4, [sp, #88]	; 0x58
   19124:	str	r4, [sp, #84]	; 0x54
   19128:	str	r4, [sp, #80]	; 0x50
   1912c:	str	r4, [sp, #76]	; 0x4c
   19130:	str	r4, [sp, #72]	; 0x48
   19134:	str	r4, [sp, #68]	; 0x44
   19138:	str	r4, [sp, #64]	; 0x40
   1913c:	str	r4, [sp, #60]	; 0x3c
   19140:	str	r4, [sp, #56]	; 0x38
   19144:	str	r4, [sp, #52]	; 0x34
   19148:	str	r4, [sp, #48]	; 0x30
   1914c:	str	r4, [sp, #44]	; 0x2c
   19150:	str	r4, [sp, #40]	; 0x28
   19154:	str	r4, [sp, #36]	; 0x24
   19158:	str	r4, [sp, #32]
   1915c:	str	r4, [sp, #28]
   19160:	str	r4, [sp, #24]
   19164:	bl	13f84 <fprintf@plt>
   19168:	ldr	r3, [r4, #212]	; 0xd4
   1916c:	ldr	r3, [r3, #136]	; 0x88
   19170:	cmp	r3, #0
   19174:	bne	19334 <__flatcc_fb_gen_common_c_header@@Base+0xa60>
   19178:	mov	r3, r4
   1917c:	mov	r2, r4
   19180:	ldr	r1, [pc, #864]	; 194e8 <__flatcc_fb_gen_common_c_header@@Base+0xc14>
   19184:	ldr	r0, [r4, #204]	; 0xcc
   19188:	bl	13f84 <fprintf@plt>
   1918c:	ldr	r3, [r4, #212]	; 0xd4
   19190:	ldr	r3, [r3, #32]
   19194:	cmp	r3, #0
   19198:	bne	19320 <__flatcc_fb_gen_common_c_header@@Base+0xa4c>
   1919c:	ldr	r1, [r4, #204]	; 0xcc
   191a0:	mov	r0, #10
   191a4:	bl	13fe4 <fputc@plt>
   191a8:	mov	r2, r4
   191ac:	ldr	r1, [pc, #824]	; 194ec <__flatcc_fb_gen_common_c_header@@Base+0xc18>
   191b0:	ldr	r0, [r4, #204]	; 0xcc
   191b4:	bl	13f84 <fprintf@plt>
   191b8:	ldr	r0, [r4, #204]	; 0xcc
   191bc:	mov	r3, r4
   191c0:	mov	r2, r4
   191c4:	ldr	r1, [pc, #804]	; 194f0 <__flatcc_fb_gen_common_c_header@@Base+0xc1c>
   191c8:	str	r4, [sp, #44]	; 0x2c
   191cc:	str	r4, [sp, #40]	; 0x28
   191d0:	str	r4, [sp, #36]	; 0x24
   191d4:	str	r4, [sp, #32]
   191d8:	str	r4, [sp, #28]
   191dc:	str	r4, [sp, #24]
   191e0:	str	r4, [sp, #20]
   191e4:	str	r4, [sp, #16]
   191e8:	str	r4, [sp, #12]
   191ec:	str	r4, [sp, #8]
   191f0:	str	r4, [sp, #4]
   191f4:	str	r4, [sp]
   191f8:	bl	13f84 <fprintf@plt>
   191fc:	ldr	r0, [r4, #204]	; 0xcc
   19200:	mov	r3, r4
   19204:	mov	r2, r4
   19208:	ldr	r1, [pc, #740]	; 194f4 <__flatcc_fb_gen_common_c_header@@Base+0xc20>
   1920c:	str	r4, [sp]
   19210:	bl	13f84 <fprintf@plt>
   19214:	ldr	r0, [r4, #204]	; 0xcc
   19218:	mov	r3, r4
   1921c:	mov	r2, r4
   19220:	ldr	r1, [pc, #720]	; 194f8 <__flatcc_fb_gen_common_c_header@@Base+0xc24>
   19224:	str	r4, [sp, #12]
   19228:	str	r4, [sp, #8]
   1922c:	str	r4, [sp, #4]
   19230:	str	r4, [sp]
   19234:	bl	13f84 <fprintf@plt>
   19238:	ldr	r0, [r4, #204]	; 0xcc
   1923c:	mov	r3, r4
   19240:	mov	r2, r4
   19244:	ldr	r1, [pc, #688]	; 194fc <__flatcc_fb_gen_common_c_header@@Base+0xc28>
   19248:	str	r4, [sp, #4]
   1924c:	str	r4, [sp]
   19250:	bl	13f84 <fprintf@plt>
   19254:	ldr	r0, [r4, #204]	; 0xcc
   19258:	mov	r3, r4
   1925c:	mov	r2, r4
   19260:	ldr	r1, [pc, #664]	; 19500 <__flatcc_fb_gen_common_c_header@@Base+0xc2c>
   19264:	str	r4, [sp, #28]
   19268:	str	r4, [sp, #24]
   1926c:	str	r4, [sp, #20]
   19270:	str	r4, [sp, #16]
   19274:	str	r4, [sp, #12]
   19278:	str	r4, [sp, #8]
   1927c:	str	r4, [sp, #4]
   19280:	str	r4, [sp]
   19284:	bl	13f84 <fprintf@plt>
   19288:	ldr	r1, [r4, #204]	; 0xcc
   1928c:	mov	r0, #10
   19290:	bl	13fe4 <fputc@plt>
   19294:	ldr	r3, [r4, #212]	; 0xd4
   19298:	ldr	r0, [r4, #204]	; 0xcc
   1929c:	ldr	r3, [r3, #140]	; 0x8c
   192a0:	cmp	r3, #0
   192a4:	beq	192c0 <__flatcc_fb_gen_common_c_header@@Base+0x9ec>
   192a8:	mov	r3, r0
   192ac:	mov	r2, #36	; 0x24
   192b0:	mov	r1, #1
   192b4:	ldr	r0, [pc, #584]	; 19504 <__flatcc_fb_gen_common_c_header@@Base+0xc30>
   192b8:	bl	13f18 <fwrite@plt>
   192bc:	ldr	r0, [r4, #204]	; 0xcc
   192c0:	mov	r2, r5
   192c4:	ldr	r1, [pc, #572]	; 19508 <__flatcc_fb_gen_common_c_header@@Base+0xc34>
   192c8:	bl	13f84 <fprintf@plt>
   192cc:	mov	r0, #0
   192d0:	add	sp, sp, #236	; 0xec
   192d4:	pop	{r4, r5, pc}
   192d8:	ldr	r1, [r4, #204]	; 0xcc
   192dc:	mov	r0, #10
   192e0:	bl	13fe4 <fputc@plt>
   192e4:	b	18f98 <__flatcc_fb_gen_common_c_header@@Base+0x6c4>
   192e8:	ldr	r3, [r4, #204]	; 0xcc
   192ec:	mov	r2, #20
   192f0:	mov	r1, #1
   192f4:	ldr	r0, [pc, #528]	; 1950c <__flatcc_fb_gen_common_c_header@@Base+0xc38>
   192f8:	bl	13f18 <fwrite@plt>
   192fc:	b	18f58 <__flatcc_fb_gen_common_c_header@@Base+0x684>
   19300:	ldr	r1, [r4, #204]	; 0xcc
   19304:	mov	r0, #10
   19308:	bl	13fe4 <fputc@plt>
   1930c:	b	18acc <__flatcc_fb_gen_common_c_header@@Base+0x1f8>
   19310:	ldr	r1, [r4, #204]	; 0xcc
   19314:	mov	r0, #10
   19318:	bl	13fe4 <fputc@plt>
   1931c:	b	189f0 <__flatcc_fb_gen_common_c_header@@Base+0x11c>
   19320:	mov	r2, r4
   19324:	ldr	r1, [pc, #232]	; 19414 <__flatcc_fb_gen_common_c_header@@Base+0xb40>
   19328:	ldr	r0, [r4, #204]	; 0xcc
   1932c:	bl	13f84 <fprintf@plt>
   19330:	b	191a8 <__flatcc_fb_gen_common_c_header@@Base+0x8d4>
   19334:	mov	r2, r4
   19338:	ldr	r1, [pc, #464]	; 19510 <__flatcc_fb_gen_common_c_header@@Base+0xc3c>
   1933c:	ldr	r0, [r4, #204]	; 0xcc
   19340:	bl	13f84 <fprintf@plt>
   19344:	b	19178 <__flatcc_fb_gen_common_c_header@@Base+0x8a4>
   19348:	ldr	r0, [r4, #204]	; 0xcc
   1934c:	mov	r3, r4
   19350:	mov	r2, r4
   19354:	str	r4, [sp, #8]
   19358:	str	r4, [sp, #4]
   1935c:	str	r4, [sp]
   19360:	ldr	r1, [pc, #428]	; 19514 <__flatcc_fb_gen_common_c_header@@Base+0xc40>
   19364:	bl	13f84 <fprintf@plt>
   19368:	ldr	r0, [r4, #204]	; 0xcc
   1936c:	mov	r3, r4
   19370:	str	r4, [sp, #4]
   19374:	str	r4, [sp]
   19378:	ldr	r2, [pc, #408]	; 19518 <__flatcc_fb_gen_common_c_header@@Base+0xc44>
   1937c:	ldr	r1, [pc, #408]	; 1951c <__flatcc_fb_gen_common_c_header@@Base+0xc48>
   19380:	bl	13f84 <fprintf@plt>
   19384:	ldr	r0, [r4, #204]	; 0xcc
   19388:	mov	r3, r4
   1938c:	mov	r2, r4
   19390:	str	r4, [sp, #8]
   19394:	str	r4, [sp, #4]
   19398:	str	r4, [sp]
   1939c:	ldr	r1, [pc, #380]	; 19520 <__flatcc_fb_gen_common_c_header@@Base+0xc4c>
   193a0:	bl	13f84 <fprintf@plt>
   193a4:	mov	r3, r5
   193a8:	mov	r2, r5
   193ac:	ldr	r1, [pc, #368]	; 19524 <__flatcc_fb_gen_common_c_header@@Base+0xc50>
   193b0:	ldr	r0, [r4, #204]	; 0xcc
   193b4:	bl	13f84 <fprintf@plt>
   193b8:	b	18964 <__flatcc_fb_gen_common_c_header@@Base+0x90>
   193bc:	mov	r2, #36	; 0x24
   193c0:	mov	r1, #1
   193c4:	ldr	r0, [pc, #348]	; 19528 <__flatcc_fb_gen_common_c_header@@Base+0xc54>
   193c8:	bl	13f18 <fwrite@plt>
   193cc:	ldr	r3, [r4, #204]	; 0xcc
   193d0:	b	18940 <__flatcc_fb_gen_common_c_header@@Base+0x6c>
   193d4:	ldr	r3, [r4, #204]	; 0xcc
   193d8:	mov	r2, #135	; 0x87
   193dc:	mov	r1, #1
   193e0:	ldr	r0, [pc, #324]	; 1952c <__flatcc_fb_gen_common_c_header@@Base+0xc58>
   193e4:	bl	13f18 <fwrite@plt>
   193e8:	ldr	r3, [r4, #212]	; 0xd4
   193ec:	b	18930 <__flatcc_fb_gen_common_c_header@@Base+0x5c>
   193f0:	andeq	r3, r4, ip, ror r2
   193f4:			; <UNDEFINED> instruction: 0x000432b4
   193f8:	andeq	r3, r4, r8, lsl #6
   193fc:	strdeq	r3, [r4], -r0
   19400:	andeq	r3, r4, ip, lsl r4
   19404:	andeq	r3, r4, ip, lsl #18
   19408:	muleq	r4, ip, r9
   1940c:	andeq	r3, r4, r0, lsl fp
   19410:	andeq	r3, r4, r8, ror #22
   19414:	muleq	r4, r0, ip
   19418:	andeq	r3, r4, r0, asr #25
   1941c:	muleq	r4, r4, sp
   19420:	andeq	r3, r4, r0, asr #30
   19424:	andeq	r3, r4, r0, ror #31
   19428:	strheq	r4, [r4], -ip
   1942c:	muleq	r4, r8, r1
   19430:	andeq	r4, r4, r0, ror r2
   19434:	andeq	r4, r4, r8, asr r3
   19438:	andeq	r4, r4, r4, lsl #7
   1943c:	andeq	r4, r4, r4, lsr #8
   19440:	andeq	r4, r4, r8, ror #8
   19444:	strdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   19448:	andeq	r4, r4, r8, ror #10
   1944c:	andeq	r4, r4, r8, lsl #13
   19450:	andeq	r4, r4, r0, lsl #14
   19454:	andeq	r4, r4, r0, lsl #15
   19458:	andeq	r4, r4, r4, ror #15
   1945c:	andeq	r4, r4, r8, lsl #18
   19460:	andeq	r4, r4, ip, lsr #18
   19464:			; <UNDEFINED> instruction: 0x000449b4
   19468:	andeq	r4, r4, r4, ror #22
   1946c:	andeq	r4, r4, r8, lsr #24
   19470:	andeq	r4, r4, r4, asr #25
   19474:	andeq	r4, r4, ip, lsr sp
   19478:	andeq	r5, r4, r0, lsl r0
   1947c:	andeq	r5, r4, r4, lsr #5
   19480:	andeq	r5, r4, r8, lsr #6
   19484:	muleq	r4, r8, r3
   19488:	andeq	r5, r4, ip, ror r5
   1948c:	andeq	r5, r4, r8, lsr #12
   19490:	andeq	r5, r4, r4, lsl #16
   19494:	andeq	r5, r4, r0, lsr #20
   19498:	andeq	r5, r4, r8, ror fp
   1949c:	andeq	r5, r4, r8, asr #24
   194a0:	andeq	r5, r4, r0, lsl #26
   194a4:			; <UNDEFINED> instruction: 0x00045eb8
   194a8:	andeq	r5, r4, r4, ror #30
   194ac:	muleq	r4, r4, r0
   194b0:	andeq	r6, r4, r4, ror #3
   194b4:			; <UNDEFINED> instruction: 0x000462b8
   194b8:	andeq	r6, r4, r4, lsr r4
   194bc:			; <UNDEFINED> instruction: 0x000465b8
   194c0:	andeq	r6, r4, r0, lsl r9
   194c4:	andeq	r6, r4, r0, lsr ip
   194c8:	strdeq	r7, [r4], -ip
   194cc:	andeq	r7, r4, ip, asr #10
   194d0:	andeq	r7, r4, r8, lsr #20
   194d4:	andeq	r7, r4, ip, lsl #22
   194d8:	andeq	r7, r4, ip, lsr #22
   194dc:	andeq	r7, r4, ip, lsr #23
   194e0:	andeq	r7, r4, r0, asr #27
   194e4:	andeq	r7, r4, ip, lsl #30
   194e8:	andeq	r8, r4, r4, ror #11
   194ec:	andeq	r8, r4, r0, lsl #13
   194f0:	andeq	r8, r4, r0, lsl #14
   194f4:	andeq	r8, r4, ip, asr #20
   194f8:	andeq	r8, r4, r4, lsl #22
   194fc:	andeq	r8, r4, ip, asr #25
   19500:	andeq	r8, r4, r8, asr #30
   19504:	andeq	r9, r4, ip, lsr #4
   19508:	andeq	r9, r4, r4, asr r2
   1950c:	andeq	r7, r4, r0, lsl sl
   19510:	andeq	r8, r4, r8, asr #11
   19514:	andeq	r3, r4, ip, lsr #8
   19518:	andeq	r3, r4, r8, lsl r4
   1951c:	strdeq	r3, [r4], -ip
   19520:	andeq	r3, r4, r4, asr r6
   19524:			; <UNDEFINED> instruction: 0x000438bc
   19528:	andeq	r3, r4, r8, asr #7
   1952c:	andeq	r3, r4, r0, asr #6

00019530 <__flatcc_fb_gen_c_reader@@Base>:
   19530:	ldr	r3, [r0, #208]	; 0xd0
   19534:	ldr	r2, [r0, #212]	; 0xd4
   19538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1953c:	mov	r4, r0
   19540:	ldr	r3, [r3, #164]	; 0xa4
   19544:	ldr	r5, [r2, #132]	; 0x84
   19548:	sub	sp, sp, #252	; 0xfc
   1954c:	mov	r2, r3
   19550:	ldr	r1, [pc, #1360]	; 19aa8 <__flatcc_fb_gen_c_reader@@Base+0x578>
   19554:	ldr	r0, [r0, #204]	; 0xcc
   19558:	bl	13f84 <fprintf@plt>
   1955c:	ldr	r3, [r4, #204]	; 0xcc
   19560:	mov	r2, #81	; 0x51
   19564:	mov	r1, #1
   19568:	ldr	r0, [pc, #1340]	; 19aac <__flatcc_fb_gen_c_reader@@Base+0x57c>
   1956c:	bl	13f18 <fwrite@plt>
   19570:	cmp	r5, #0
   19574:	add	r5, r4, #102	; 0x66
   19578:	bne	19a58 <__flatcc_fb_gen_c_reader@@Base+0x528>
   1957c:	mov	r3, r4
   19580:	mov	r2, r5
   19584:	ldr	r1, [pc, #1316]	; 19ab0 <__flatcc_fb_gen_c_reader@@Base+0x580>
   19588:	ldr	r0, [r4, #204]	; 0xcc
   1958c:	bl	13f84 <fprintf@plt>
   19590:	ldr	r2, [pc, #1308]	; 19ab4 <__flatcc_fb_gen_c_reader@@Base+0x584>
   19594:	ldr	r1, [pc, #1308]	; 19ab8 <__flatcc_fb_gen_c_reader@@Base+0x588>
   19598:	mov	r0, r4
   1959c:	bl	150e4 <__flatcc_fb_gen_c_includes@@Base>
   195a0:	ldr	r3, [r4, #204]	; 0xcc
   195a4:	mov	r2, #39	; 0x27
   195a8:	mov	r1, #1
   195ac:	ldr	r0, [pc, #1288]	; 19abc <__flatcc_fb_gen_c_reader@@Base+0x58c>
   195b0:	bl	13f18 <fwrite@plt>
   195b4:	ldr	r3, [r4, #204]	; 0xcc
   195b8:	mov	r2, #58	; 0x3a
   195bc:	mov	r1, #1
   195c0:	ldr	r0, [pc, #1272]	; 19ac0 <__flatcc_fb_gen_c_reader@@Base+0x590>
   195c4:	bl	13f18 <fwrite@plt>
   195c8:	ldr	r3, [r4, #212]	; 0xd4
   195cc:	ldr	r0, [r4, #204]	; 0xcc
   195d0:	ldr	r3, [r3, #140]	; 0x8c
   195d4:	cmp	r3, #0
   195d8:	bne	199d8 <__flatcc_fb_gen_c_reader@@Base+0x4a8>
   195dc:	ldr	r3, [r4, #208]	; 0xd0
   195e0:	ldrh	r2, [r3, #16]
   195e4:	cmp	r2, #2
   195e8:	beq	19a00 <__flatcc_fb_gen_c_reader@@Base+0x4d0>
   195ec:	mov	r3, r4
   195f0:	mov	r2, r4
   195f4:	ldr	r1, [pc, #1224]	; 19ac4 <__flatcc_fb_gen_c_reader@@Base+0x594>
   195f8:	bl	13f84 <fprintf@plt>
   195fc:	ldr	r3, [r4, #208]	; 0xd0
   19600:	ldrh	r2, [r3, #32]
   19604:	cmp	r2, #2
   19608:	beq	19a30 <__flatcc_fb_gen_c_reader@@Base+0x500>
   1960c:	ldr	r2, [r4, #212]	; 0xd4
   19610:	ldr	r0, [r4, #204]	; 0xcc
   19614:	mov	r3, r4
   19618:	ldr	r2, [r2, #104]	; 0x68
   1961c:	ldr	r1, [pc, #1188]	; 19ac8 <__flatcc_fb_gen_c_reader@@Base+0x598>
   19620:	str	r2, [sp]
   19624:	mov	r2, r4
   19628:	bl	13f84 <fprintf@plt>
   1962c:	ldr	r1, [r4, #204]	; 0xcc
   19630:	mov	r0, #10
   19634:	bl	13fe4 <fputc@plt>
   19638:	ldr	r3, [r4, #208]	; 0xd0
   1963c:	ldr	r5, [r3, #44]	; 0x2c
   19640:	cmp	r5, #0
   19644:	beq	19660 <__flatcc_fb_gen_c_reader@@Base+0x130>
   19648:	mov	r1, r5
   1964c:	mov	r0, r4
   19650:	bl	15a70 <__flatcc_fb_codegen_c@@Base+0x478>
   19654:	ldr	r5, [r5, #120]	; 0x78
   19658:	cmp	r5, #0
   1965c:	bne	19648 <__flatcc_fb_gen_c_reader@@Base+0x118>
   19660:	ldr	r1, [r4, #204]	; 0xcc
   19664:	mov	r0, #10
   19668:	bl	13fe4 <fputc@plt>
   1966c:	ldr	r3, [r4, #208]	; 0xd0
   19670:	ldr	r5, [r3, #40]	; 0x28
   19674:	cmp	r5, #0
   19678:	bne	1968c <__flatcc_fb_gen_c_reader@@Base+0x15c>
   1967c:	b	19864 <__flatcc_fb_gen_c_reader@@Base+0x334>
   19680:	ldr	r5, [r5]
   19684:	cmp	r5, #0
   19688:	beq	196b0 <__flatcc_fb_gen_c_reader@@Base+0x180>
   1968c:	ldrh	r3, [r5, #8]
   19690:	cmp	r3, #0
   19694:	bne	19680 <__flatcc_fb_gen_c_reader@@Base+0x150>
   19698:	mov	r1, r5
   1969c:	mov	r0, r4
   196a0:	bl	15a70 <__flatcc_fb_codegen_c@@Base+0x478>
   196a4:	ldr	r5, [r5]
   196a8:	cmp	r5, #0
   196ac:	bne	1968c <__flatcc_fb_gen_c_reader@@Base+0x15c>
   196b0:	ldr	r3, [r4, #208]	; 0xd0
   196b4:	ldr	r6, [r3, #40]	; 0x28
   196b8:	cmp	r6, #0
   196bc:	beq	19864 <__flatcc_fb_gen_c_reader@@Base+0x334>
   196c0:	ldr	sl, [pc, #1028]	; 19acc <__flatcc_fb_gen_c_reader@@Base+0x59c>
   196c4:	ldr	r9, [pc, #1028]	; 19ad0 <__flatcc_fb_gen_c_reader@@Base+0x5a0>
   196c8:	ldr	r8, [pc, #1028]	; 19ad4 <__flatcc_fb_gen_c_reader@@Base+0x5a4>
   196cc:	mov	fp, #220	; 0xdc
   196d0:	b	196e0 <__flatcc_fb_gen_c_reader@@Base+0x1b0>
   196d4:	ldr	r6, [r6]
   196d8:	cmp	r6, #0
   196dc:	beq	19864 <__flatcc_fb_gen_c_reader@@Base+0x334>
   196e0:	ldrh	r3, [r6, #8]
   196e4:	cmp	r3, #1
   196e8:	bhi	196d4 <__flatcc_fb_gen_c_reader@@Base+0x1a4>
   196ec:	mov	r2, fp
   196f0:	mov	r1, r5
   196f4:	add	r0, sp, #28
   196f8:	bl	13f9c <memset@plt>
   196fc:	mov	r1, r6
   19700:	ldr	r0, [r6, #12]
   19704:	add	r2, sp, #28
   19708:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1970c:	ldr	r7, [r6, #88]	; 0x58
   19710:	add	r3, sp, #28
   19714:	mov	r2, r3
   19718:	ldr	r0, [r4, #204]	; 0xcc
   1971c:	mov	r1, sl
   19720:	str	r4, [sp]
   19724:	bl	13f84 <fprintf@plt>
   19728:	mov	r1, r9
   1972c:	ldr	r0, [r4, #204]	; 0xcc
   19730:	mov	r3, r4
   19734:	str	r7, [sp]
   19738:	add	r2, sp, #28
   1973c:	bl	13f84 <fprintf@plt>
   19740:	lsr	r2, r7, #4
   19744:	and	r2, r2, #15
   19748:	cmp	r2, #9
   1974c:	lsr	lr, r7, #8
   19750:	and	lr, lr, #15
   19754:	movls	r1, #48	; 0x30
   19758:	movhi	r1, #87	; 0x57
   1975c:	lsr	ip, r7, #12
   19760:	cmp	lr, #9
   19764:	and	ip, ip, #15
   19768:	lsr	r0, r7, #16
   1976c:	and	r0, r0, #15
   19770:	lsr	r3, r7, #20
   19774:	and	r3, r3, #15
   19778:	strb	r5, [sp, #24]
   1977c:	add	r1, r2, r1
   19780:	strb	r1, [sp, #10]
   19784:	movls	r1, #48	; 0x30
   19788:	movhi	r1, #87	; 0x57
   1978c:	add	lr, lr, r1
   19790:	cmp	ip, #9
   19794:	strb	lr, [sp, #15]
   19798:	movls	lr, #48	; 0x30
   1979c:	movhi	lr, #87	; 0x57
   197a0:	add	ip, ip, lr
   197a4:	cmp	r0, #9
   197a8:	lsr	r2, r7, #24
   197ac:	strb	ip, [sp, #14]
   197b0:	and	r2, r2, #15
   197b4:	movls	ip, #48	; 0x30
   197b8:	movhi	ip, #87	; 0x57
   197bc:	cmp	r3, #9
   197c0:	add	r0, r0, ip
   197c4:	and	r1, r7, #15
   197c8:	movls	ip, #48	; 0x30
   197cc:	movhi	ip, #87	; 0x57
   197d0:	cmp	r2, #9
   197d4:	add	r3, r3, ip
   197d8:	lsr	r7, r7, #28
   197dc:	movls	ip, #48	; 0x30
   197e0:	movhi	ip, #87	; 0x57
   197e4:	cmp	r1, #9
   197e8:	add	r2, r2, ip
   197ec:	movls	ip, #48	; 0x30
   197f0:	movhi	ip, #87	; 0x57
   197f4:	cmp	r7, #9
   197f8:	add	r1, r1, ip
   197fc:	movls	ip, #48	; 0x30
   19800:	movhi	ip, #87	; 0x57
   19804:	mov	lr, #92	; 0x5c
   19808:	add	r7, r7, ip
   1980c:	strb	r0, [sp, #19]
   19810:	mov	ip, #120	; 0x78
   19814:	strb	r3, [sp, #18]
   19818:	strb	r2, [sp, #23]
   1981c:	strb	r1, [sp, #11]
   19820:	add	r3, sp, #8
   19824:	add	r2, sp, #28
   19828:	mov	r1, r8
   1982c:	ldr	r0, [r4, #204]	; 0xcc
   19830:	strb	r7, [sp, #22]
   19834:	strb	lr, [sp, #8]
   19838:	strb	lr, [sp, #12]
   1983c:	strb	lr, [sp, #16]
   19840:	strb	lr, [sp, #20]
   19844:	strb	ip, [sp, #9]
   19848:	strb	ip, [sp, #13]
   1984c:	strb	ip, [sp, #17]
   19850:	strb	ip, [sp, #21]
   19854:	bl	13f84 <fprintf@plt>
   19858:	ldr	r6, [r6]
   1985c:	cmp	r6, #0
   19860:	bne	196e0 <__flatcc_fb_gen_c_reader@@Base+0x1b0>
   19864:	ldr	r1, [r4, #204]	; 0xcc
   19868:	mov	r0, #10
   1986c:	bl	13fe4 <fputc@plt>
   19870:	ldr	r3, [r4, #208]	; 0xd0
   19874:	ldr	r5, [r3, #40]	; 0x28
   19878:	cmp	r5, #0
   1987c:	bne	19890 <__flatcc_fb_gen_c_reader@@Base+0x360>
   19880:	b	198b4 <__flatcc_fb_gen_c_reader@@Base+0x384>
   19884:	ldr	r5, [r5]
   19888:	cmp	r5, #0
   1988c:	beq	198b4 <__flatcc_fb_gen_c_reader@@Base+0x384>
   19890:	ldrh	r3, [r5, #8]
   19894:	cmp	r3, #3
   19898:	bne	19884 <__flatcc_fb_gen_c_reader@@Base+0x354>
   1989c:	mov	r1, r5
   198a0:	mov	r0, r4
   198a4:	bl	15bd0 <__flatcc_fb_codegen_c@@Base+0x5d8>
   198a8:	ldr	r5, [r5]
   198ac:	cmp	r5, #0
   198b0:	bne	19890 <__flatcc_fb_gen_c_reader@@Base+0x360>
   198b4:	ldr	r1, [r4, #204]	; 0xcc
   198b8:	mov	r0, #10
   198bc:	bl	13fe4 <fputc@plt>
   198c0:	ldr	r3, [r4, #208]	; 0xd0
   198c4:	ldr	r5, [r3, #44]	; 0x2c
   198c8:	cmp	r5, #0
   198cc:	beq	198ec <__flatcc_fb_gen_c_reader@@Base+0x3bc>
   198d0:	mov	r1, r5
   198d4:	mov	r0, r4
   198d8:	bl	165f8 <__flatcc_fb_codegen_c@@Base+0x1000>
   198dc:	ldr	r5, [r5, #120]	; 0x78
   198e0:	cmp	r5, #0
   198e4:	bne	198d0 <__flatcc_fb_gen_c_reader@@Base+0x3a0>
   198e8:	ldr	r3, [r4, #208]	; 0xd0
   198ec:	ldr	r5, [r3, #40]	; 0x28
   198f0:	cmp	r5, #0
   198f4:	beq	19934 <__flatcc_fb_gen_c_reader@@Base+0x404>
   198f8:	ldrh	r3, [r5, #8]
   198fc:	cmp	r3, #4
   19900:	ldrls	pc, [pc, r3, lsl #2]
   19904:	b	199a4 <__flatcc_fb_gen_c_reader@@Base+0x474>
   19908:	andeq	r9, r1, r8, lsl #19
   1990c:	andeq	r9, r1, r8, lsr #18
   19910:	andeq	r9, r1, r8, lsr #18
   19914:	andeq	r9, r1, r8, lsr #18
   19918:	andeq	r9, r1, ip, lsl r9
   1991c:	mov	r1, r5
   19920:	mov	r0, r4
   19924:	bl	15bd0 <__flatcc_fb_codegen_c@@Base+0x5d8>
   19928:	ldr	r5, [r5]
   1992c:	cmp	r5, #0
   19930:	bne	198f8 <__flatcc_fb_gen_c_reader@@Base+0x3c8>
   19934:	ldr	r1, [r4, #204]	; 0xcc
   19938:	mov	r0, #10
   1993c:	bl	13fe4 <fputc@plt>
   19940:	ldr	r3, [r4, #212]	; 0xd4
   19944:	ldr	r0, [r4, #204]	; 0xcc
   19948:	ldr	r3, [r3, #140]	; 0x8c
   1994c:	cmp	r3, #0
   19950:	beq	1996c <__flatcc_fb_gen_c_reader@@Base+0x43c>
   19954:	mov	r3, r0
   19958:	mov	r2, #36	; 0x24
   1995c:	mov	r1, #1
   19960:	ldr	r0, [pc, #368]	; 19ad8 <__flatcc_fb_gen_c_reader@@Base+0x5a8>
   19964:	bl	13f18 <fwrite@plt>
   19968:	ldr	r0, [r4, #204]	; 0xcc
   1996c:	ldr	r3, [r4, #208]	; 0xd0
   19970:	ldr	r1, [pc, #356]	; 19adc <__flatcc_fb_gen_c_reader@@Base+0x5ac>
   19974:	ldr	r2, [r3, #164]	; 0xa4
   19978:	bl	13f84 <fprintf@plt>
   1997c:	mov	r0, #0
   19980:	add	sp, sp, #252	; 0xfc
   19984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19988:	mov	r1, r5
   1998c:	mov	r0, r4
   19990:	bl	17260 <__flatcc_fb_codegen_c@@Base+0x1c68>
   19994:	ldr	r5, [r5]
   19998:	cmp	r5, #0
   1999c:	bne	198f8 <__flatcc_fb_gen_c_reader@@Base+0x3c8>
   199a0:	b	19934 <__flatcc_fb_gen_c_reader@@Base+0x404>
   199a4:	ldr	r1, [pc, #308]	; 19ae0 <__flatcc_fb_gen_c_reader@@Base+0x5b0>
   199a8:	ldr	r2, [pc, #308]	; 19ae4 <__flatcc_fb_gen_c_reader@@Base+0x5b4>
   199ac:	ldr	r3, [pc, #308]	; 19ae8 <__flatcc_fb_gen_c_reader@@Base+0x5b8>
   199b0:	ldr	r0, [r1]
   199b4:	str	r2, [sp]
   199b8:	ldr	r1, [pc, #300]	; 19aec <__flatcc_fb_gen_c_reader@@Base+0x5bc>
   199bc:	ldr	r2, [pc, #300]	; 19af0 <__flatcc_fb_gen_c_reader@@Base+0x5c0>
   199c0:	bl	13f84 <fprintf@plt>
   199c4:	ldr	r3, [pc, #296]	; 19af4 <__flatcc_fb_gen_c_reader@@Base+0x5c4>
   199c8:	ldr	r2, [pc, #280]	; 19ae8 <__flatcc_fb_gen_c_reader@@Base+0x5b8>
   199cc:	ldr	r1, [pc, #284]	; 19af0 <__flatcc_fb_gen_c_reader@@Base+0x5c0>
   199d0:	ldr	r0, [pc, #288]	; 19af8 <__flatcc_fb_gen_c_reader@@Base+0x5c8>
   199d4:	bl	14038 <__assert_fail@plt>
   199d8:	mov	r3, r0
   199dc:	mov	r2, #36	; 0x24
   199e0:	mov	r1, #1
   199e4:	ldr	r0, [pc, #272]	; 19afc <__flatcc_fb_gen_c_reader@@Base+0x5cc>
   199e8:	bl	13f18 <fwrite@plt>
   199ec:	ldr	r3, [r4, #208]	; 0xd0
   199f0:	ldr	r0, [r4, #204]	; 0xcc
   199f4:	ldrh	r2, [r3, #16]
   199f8:	cmp	r2, #2
   199fc:	bne	195ec <__flatcc_fb_gen_c_reader@@Base+0xbc>
   19a00:	ldr	r2, [r3, #8]
   19a04:	ldr	r1, [pc, #244]	; 19b00 <__flatcc_fb_gen_c_reader@@Base+0x5d0>
   19a08:	str	r2, [sp, #4]
   19a0c:	ldr	r2, [r3, #12]
   19a10:	mov	r3, r4
   19a14:	str	r2, [sp]
   19a18:	mov	r2, r4
   19a1c:	bl	13f84 <fprintf@plt>
   19a20:	ldr	r3, [r4, #208]	; 0xd0
   19a24:	ldrh	r2, [r3, #32]
   19a28:	cmp	r2, #2
   19a2c:	bne	1960c <__flatcc_fb_gen_c_reader@@Base+0xdc>
   19a30:	ldr	r2, [r3, #24]
   19a34:	ldr	r0, [r4, #204]	; 0xcc
   19a38:	str	r2, [sp, #4]
   19a3c:	ldr	r3, [r3, #28]
   19a40:	mov	r2, r4
   19a44:	str	r3, [sp]
   19a48:	ldr	r1, [pc, #180]	; 19b04 <__flatcc_fb_gen_c_reader@@Base+0x5d4>
   19a4c:	mov	r3, r4
   19a50:	bl	13f84 <fprintf@plt>
   19a54:	b	1962c <__flatcc_fb_gen_c_reader@@Base+0xfc>
   19a58:	ldr	r3, [r4, #204]	; 0xcc
   19a5c:	ldr	r2, [pc, #164]	; 19b08 <__flatcc_fb_gen_c_reader@@Base+0x5d8>
   19a60:	mov	r1, #1
   19a64:	ldr	r0, [pc, #160]	; 19b0c <__flatcc_fb_gen_c_reader@@Base+0x5dc>
   19a68:	bl	13f18 <fwrite@plt>
   19a6c:	mov	r3, r4
   19a70:	mov	r2, r5
   19a74:	ldr	r1, [pc, #52]	; 19ab0 <__flatcc_fb_gen_c_reader@@Base+0x580>
   19a78:	ldr	r0, [r4, #204]	; 0xcc
   19a7c:	bl	13f84 <fprintf@plt>
   19a80:	mov	r0, r4
   19a84:	ldr	r2, [pc, #40]	; 19ab4 <__flatcc_fb_gen_c_reader@@Base+0x584>
   19a88:	ldr	r1, [pc, #40]	; 19ab8 <__flatcc_fb_gen_c_reader@@Base+0x588>
   19a8c:	bl	150e4 <__flatcc_fb_gen_c_includes@@Base>
   19a90:	ldr	r3, [r4, #204]	; 0xcc
   19a94:	mov	r2, #39	; 0x27
   19a98:	mov	r1, #1
   19a9c:	ldr	r0, [pc, #24]	; 19abc <__flatcc_fb_gen_c_reader@@Base+0x58c>
   19aa0:	bl	13f18 <fwrite@plt>
   19aa4:	b	195c8 <__flatcc_fb_gen_c_reader@@Base+0x98>
   19aa8:	andeq	r9, r4, r0, ror r2
   19aac:			; <UNDEFINED> instruction: 0x000432b4
   19ab0:	andeq	r9, r4, r8, asr r4
   19ab4:	muleq	r4, r8, r4
   19ab8:			; <UNDEFINED> instruction: 0x000583bc
   19abc:	andeq	r9, r4, r4, lsr #9
   19ac0:	andeq	r9, r4, r8, ror r6
   19ac4:	andeq	r9, r4, r0, lsl #10
   19ac8:	andeq	r9, r4, r4, ror #10
   19acc:	muleq	r4, ip, r5
   19ad0:	andeq	r9, r4, r0, ror #11
   19ad4:	andeq	r9, r4, ip, lsl #12
   19ad8:	andeq	r9, r4, ip, lsr #4
   19adc:	andeq	r9, r4, ip, asr r6
   19ae0:	andeq	sp, r6, r8, lsr #1
   19ae4:	andeq	r9, r4, r0, lsr r6
   19ae8:	andeq	r0, r0, r8, lsl #13
   19aec:			; <UNDEFINED> instruction: 0x00041fbc
   19af0:	andeq	r1, r4, ip, ror #24
   19af4:	andeq	r1, r4, r0, asr ip
   19af8:	andeq	sl, r4, r4, asr sp
   19afc:	andeq	r3, r4, r8, asr #7
   19b00:	andeq	r9, r4, ip, asr #9
   19b04:	andeq	r9, r4, r4, lsr r5
   19b08:			; <UNDEFINED> instruction: 0x000001bb
   19b0c:	muleq	r4, ip, r2

00019b10 <__flatcc_gen_sort@@Base>:
   19b10:	push	{r4, lr}
   19b14:	mov	r4, r0
   19b18:	sub	sp, sp, #24
   19b1c:	mov	r2, r0
   19b20:	ldr	r1, [pc, #240]	; 19c18 <__flatcc_gen_sort@@Base+0x108>
   19b24:	ldr	r0, [r0, #204]	; 0xcc
   19b28:	bl	13f84 <fprintf@plt>
   19b2c:	mov	r3, r4
   19b30:	mov	r2, r4
   19b34:	ldr	r0, [r4, #204]	; 0xcc
   19b38:	ldr	r1, [pc, #220]	; 19c1c <__flatcc_gen_sort@@Base+0x10c>
   19b3c:	bl	13f84 <fprintf@plt>
   19b40:	ldr	r0, [r4, #204]	; 0xcc
   19b44:	mov	r3, r4
   19b48:	mov	r2, r4
   19b4c:	str	r4, [sp]
   19b50:	ldr	r1, [pc, #200]	; 19c20 <__flatcc_gen_sort@@Base+0x110>
   19b54:	bl	13f84 <fprintf@plt>
   19b58:	ldr	r0, [r4, #204]	; 0xcc
   19b5c:	mov	r3, r4
   19b60:	mov	r2, r4
   19b64:	str	r4, [sp, #4]
   19b68:	str	r4, [sp]
   19b6c:	ldr	r1, [pc, #176]	; 19c24 <__flatcc_gen_sort@@Base+0x114>
   19b70:	bl	13f84 <fprintf@plt>
   19b74:	mov	r3, r4
   19b78:	mov	r2, r4
   19b7c:	ldr	r0, [r4, #204]	; 0xcc
   19b80:	ldr	r1, [pc, #160]	; 19c28 <__flatcc_gen_sort@@Base+0x118>
   19b84:	bl	13f84 <fprintf@plt>
   19b88:	ldr	r0, [r4, #204]	; 0xcc
   19b8c:	mov	r3, r4
   19b90:	mov	r2, r4
   19b94:	str	r4, [sp, #4]
   19b98:	str	r4, [sp]
   19b9c:	ldr	r1, [pc, #136]	; 19c2c <__flatcc_gen_sort@@Base+0x11c>
   19ba0:	bl	13f84 <fprintf@plt>
   19ba4:	ldr	r0, [r4, #204]	; 0xcc
   19ba8:	mov	r3, r4
   19bac:	mov	r2, r4
   19bb0:	str	r4, [sp, #12]
   19bb4:	str	r4, [sp, #8]
   19bb8:	str	r4, [sp, #4]
   19bbc:	str	r4, [sp]
   19bc0:	ldr	r1, [pc, #104]	; 19c30 <__flatcc_gen_sort@@Base+0x120>
   19bc4:	bl	13f84 <fprintf@plt>
   19bc8:	ldr	r0, [r4, #204]	; 0xcc
   19bcc:	mov	r3, r4
   19bd0:	mov	r2, r4
   19bd4:	str	r4, [sp, #4]
   19bd8:	str	r4, [sp]
   19bdc:	ldr	r1, [pc, #80]	; 19c34 <__flatcc_gen_sort@@Base+0x124>
   19be0:	bl	13f84 <fprintf@plt>
   19be4:	ldr	r0, [r4, #204]	; 0xcc
   19be8:	mov	r3, r4
   19bec:	str	r4, [sp, #16]
   19bf0:	str	r4, [sp, #12]
   19bf4:	str	r4, [sp, #8]
   19bf8:	str	r4, [sp, #4]
   19bfc:	str	r4, [sp]
   19c00:	mov	r2, r4
   19c04:	ldr	r1, [pc, #44]	; 19c38 <__flatcc_gen_sort@@Base+0x128>
   19c08:	bl	13f84 <fprintf@plt>
   19c0c:	mov	r0, #0
   19c10:	add	sp, sp, #24
   19c14:	pop	{r4, pc}
   19c18:			; <UNDEFINED> instruction: 0x000496b4
   19c1c:	andeq	r9, r4, r4, lsl #21
   19c20:	muleq	r4, r4, fp
   19c24:	andeq	r9, r4, r8, ror #24
   19c28:	strdeq	r9, [r4], -ip
   19c2c:	muleq	r4, r4, lr
   19c30:	andeq	r9, r4, ip, lsl pc
   19c34:	andeq	r9, r4, ip, lsr #31
   19c38:	andeq	sl, r4, r0, lsl r0
   19c3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c40:	sub	sp, sp, #484	; 0x1e4
   19c44:	ldr	ip, [pc, #476]	; 19e28 <__flatcc_gen_sort@@Base+0x318>
   19c48:	ldr	lr, [sp, #524]	; 0x20c
   19c4c:	ldr	r4, [sp, #520]	; 0x208
   19c50:	mov	r8, r1
   19c54:	mov	r1, #0
   19c58:	cmp	lr, r1
   19c5c:	mov	r5, r0
   19c60:	mov	r9, r2
   19c64:	add	r0, sp, #40	; 0x28
   19c68:	mov	r2, #220	; 0xdc
   19c6c:	mov	sl, r3
   19c70:	ldr	r6, [pc, #436]	; 19e2c <__flatcc_gen_sort@@Base+0x31c>
   19c74:	moveq	r6, ip
   19c78:	bl	13f9c <memset@plt>
   19c7c:	mov	r2, #220	; 0xdc
   19c80:	mov	r1, #0
   19c84:	add	r0, sp, #260	; 0x104
   19c88:	bl	13f9c <memset@plt>
   19c8c:	mov	r1, r4
   19c90:	ldr	r0, [r4, #12]
   19c94:	add	r2, sp, #40	; 0x28
   19c98:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   19c9c:	ldr	r4, [r4, #20]
   19ca0:	cmp	r4, #0
   19ca4:	beq	19d70 <__flatcc_gen_sort@@Base+0x260>
   19ca8:	ldr	fp, [pc, #384]	; 19e30 <__flatcc_gen_sort@@Base+0x320>
   19cac:	ldrh	r2, [r4, #24]
   19cb0:	ldr	r1, [r4, #4]
   19cb4:	cmp	r2, #10
   19cb8:	ldm	r1, {r3, r7}
   19cbc:	beq	19d7c <__flatcc_gen_sort@@Base+0x26c>
   19cc0:	cmp	r2, #14
   19cc4:	beq	19d04 <__flatcc_gen_sort@@Base+0x1f4>
   19cc8:	cmp	r2, #0
   19ccc:	beq	19d64 <__flatcc_gen_sort@@Base+0x254>
   19cd0:	ldr	r1, [pc, #348]	; 19e34 <__flatcc_gen_sort@@Base+0x324>
   19cd4:	ldr	r2, [pc, #348]	; 19e38 <__flatcc_gen_sort@@Base+0x328>
   19cd8:	ldr	r3, [pc, #348]	; 19e3c <__flatcc_gen_sort@@Base+0x32c>
   19cdc:	ldr	r0, [r1]
   19ce0:	str	r2, [sp]
   19ce4:	ldr	r1, [pc, #340]	; 19e40 <__flatcc_gen_sort@@Base+0x330>
   19ce8:	ldr	r2, [pc, #340]	; 19e44 <__flatcc_gen_sort@@Base+0x334>
   19cec:	bl	13f84 <fprintf@plt>
   19cf0:	ldr	r3, [pc, #336]	; 19e48 <__flatcc_gen_sort@@Base+0x338>
   19cf4:	ldr	r2, [pc, #320]	; 19e3c <__flatcc_gen_sort@@Base+0x32c>
   19cf8:	ldr	r1, [pc, #324]	; 19e44 <__flatcc_gen_sort@@Base+0x334>
   19cfc:	ldr	r0, [pc, #328]	; 19e4c <__flatcc_gen_sort@@Base+0x33c>
   19d00:	bl	14038 <__assert_fail@plt>
   19d04:	ldr	r1, [r4, #16]
   19d08:	add	r2, sp, #260	; 0x104
   19d0c:	str	r3, [sp, #36]	; 0x24
   19d10:	ldr	r0, [r1, #12]
   19d14:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   19d18:	ldr	r2, [r4, #16]
   19d1c:	ldr	r3, [sp, #36]	; 0x24
   19d20:	ldrh	r2, [r2, #8]
   19d24:	cmp	r2, #0
   19d28:	beq	19db4 <__flatcc_gen_sort@@Base+0x2a4>
   19d2c:	cmp	r2, #1
   19d30:	bne	19df4 <__flatcc_gen_sort@@Base+0x2e4>
   19d34:	ldr	r0, [r5, #204]	; 0xcc
   19d38:	add	r2, sp, #260	; 0x104
   19d3c:	str	r3, [sp, #24]
   19d40:	add	r3, sp, #40	; 0x28
   19d44:	str	r2, [sp, #28]
   19d48:	str	r3, [sp, #16]
   19d4c:	str	r7, [sp, #20]
   19d50:	stm	sp, {r5, r8, r9, sl}
   19d54:	mov	r3, r6
   19d58:	mov	r2, r5
   19d5c:	ldr	r1, [pc, #236]	; 19e50 <__flatcc_gen_sort@@Base+0x340>
   19d60:	bl	13f84 <fprintf@plt>
   19d64:	ldr	r4, [r4]
   19d68:	cmp	r4, #0
   19d6c:	bne	19cac <__flatcc_gen_sort@@Base+0x19c>
   19d70:	mov	r0, #0
   19d74:	add	sp, sp, #484	; 0x1e4
   19d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19d7c:	ldr	r0, [r5, #204]	; 0xcc
   19d80:	str	r3, [sp, #24]
   19d84:	add	r3, sp, #40	; 0x28
   19d88:	str	r3, [sp, #16]
   19d8c:	str	r7, [sp, #20]
   19d90:	stm	sp, {r5, r8, r9, sl}
   19d94:	mov	r3, r6
   19d98:	mov	r2, r5
   19d9c:	mov	r1, fp
   19da0:	bl	13f84 <fprintf@plt>
   19da4:	ldr	r4, [r4]
   19da8:	cmp	r4, #0
   19dac:	bne	19cac <__flatcc_gen_sort@@Base+0x19c>
   19db0:	b	19d70 <__flatcc_gen_sort@@Base+0x260>
   19db4:	ldr	r0, [r5, #204]	; 0xcc
   19db8:	add	r2, sp, #260	; 0x104
   19dbc:	str	r3, [sp, #24]
   19dc0:	add	r3, sp, #40	; 0x28
   19dc4:	str	r2, [sp, #28]
   19dc8:	str	r3, [sp, #16]
   19dcc:	str	r7, [sp, #20]
   19dd0:	stm	sp, {r5, r8, r9, sl}
   19dd4:	mov	r3, r6
   19dd8:	mov	r2, r5
   19ddc:	ldr	r1, [pc, #112]	; 19e54 <__flatcc_gen_sort@@Base+0x344>
   19de0:	bl	13f84 <fprintf@plt>
   19de4:	ldr	r4, [r4]
   19de8:	cmp	r4, #0
   19dec:	bne	19cac <__flatcc_gen_sort@@Base+0x19c>
   19df0:	b	19d70 <__flatcc_gen_sort@@Base+0x260>
   19df4:	ldr	r1, [pc, #56]	; 19e34 <__flatcc_gen_sort@@Base+0x324>
   19df8:	ldr	r2, [pc, #88]	; 19e58 <__flatcc_gen_sort@@Base+0x348>
   19dfc:	ldr	r3, [pc, #88]	; 19e5c <__flatcc_gen_sort@@Base+0x34c>
   19e00:	ldr	r0, [r1]
   19e04:	str	r2, [sp]
   19e08:	ldr	r1, [pc, #48]	; 19e40 <__flatcc_gen_sort@@Base+0x330>
   19e0c:	ldr	r2, [pc, #48]	; 19e44 <__flatcc_gen_sort@@Base+0x334>
   19e10:	bl	13f84 <fprintf@plt>
   19e14:	ldr	r3, [pc, #44]	; 19e48 <__flatcc_gen_sort@@Base+0x338>
   19e18:	ldr	r2, [pc, #60]	; 19e5c <__flatcc_gen_sort@@Base+0x34c>
   19e1c:	ldr	r1, [pc, #32]	; 19e44 <__flatcc_gen_sort@@Base+0x334>
   19e20:	ldr	r0, [pc, #36]	; 19e4c <__flatcc_gen_sort@@Base+0x33c>
   19e24:	bl	14038 <__assert_fail@plt>
   19e28:	andeq	sl, r4, ip, ror r1
   19e2c:	andeq	sl, r4, ip, ror #2
   19e30:	andeq	sl, r4, r8, lsl #5
   19e34:	andeq	sp, r6, r8, lsr #1
   19e38:	andeq	sl, r4, r0, asr #5
   19e3c:	andeq	r0, r0, r8, asr r5
   19e40:			; <UNDEFINED> instruction: 0x00041fbc
   19e44:	strdeq	sl, [r4], -ip
   19e48:	andeq	sl, r4, r8, lsl #1
   19e4c:	andeq	sl, r4, r4, asr sp
   19e50:	andeq	sl, r4, r0, asr #3
   19e54:	andeq	sl, r4, r4, lsl #3
   19e58:	andeq	sl, r4, r0, asr r2
   19e5c:	andeq	r0, r0, lr, asr #10
   19e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e64:	mov	r4, r1
   19e68:	sub	sp, sp, #236	; 0xec
   19e6c:	mov	r6, r0
   19e70:	mov	r5, r2
   19e74:	add	r0, sp, #12
   19e78:	mov	r2, #220	; 0xdc
   19e7c:	mov	r1, #0
   19e80:	mov	r8, r3
   19e84:	bl	13f9c <memset@plt>
   19e88:	ldr	r4, [r4]
   19e8c:	cmp	r4, #0
   19e90:	beq	19f54 <__flatcc_gen_sort@@Base+0x444>
   19e94:	ldr	r2, [sp, #272]	; 0x110
   19e98:	ldr	r3, [pc, #680]	; 1a148 <__flatcc_gen_sort@@Base+0x638>
   19e9c:	cmp	r2, #0
   19ea0:	ldr	r9, [pc, #676]	; 1a14c <__flatcc_gen_sort@@Base+0x63c>
   19ea4:	ldr	fp, [pc, #676]	; 1a150 <__flatcc_gen_sort@@Base+0x640>
   19ea8:	ldr	sl, [pc, #676]	; 1a154 <__flatcc_gen_sort@@Base+0x644>
   19eac:	ldr	r7, [pc, #676]	; 1a158 <__flatcc_gen_sort@@Base+0x648>
   19eb0:	moveq	r7, r3
   19eb4:	ldrh	r3, [r4, #72]	; 0x48
   19eb8:	tst	r3, #4
   19ebc:	bne	19f48 <__flatcc_gen_sort@@Base+0x438>
   19ec0:	ldrh	r3, [r4, #24]
   19ec4:	cmp	r3, #8
   19ec8:	beq	19f94 <__flatcc_gen_sort@@Base+0x484>
   19ecc:	cmp	r3, #14
   19ed0:	bne	19f60 <__flatcc_gen_sort@@Base+0x450>
   19ed4:	ldr	r1, [r4, #16]
   19ed8:	ldrh	r3, [r1, #8]
   19edc:	cmp	r3, #1
   19ee0:	beq	1a058 <__flatcc_gen_sort@@Base+0x548>
   19ee4:	cmp	r8, #0
   19ee8:	beq	19f20 <__flatcc_gen_sort@@Base+0x410>
   19eec:	cmp	r5, #0
   19ef0:	beq	1a07c <__flatcc_gen_sort@@Base+0x56c>
   19ef4:	tst	r5, #3
   19ef8:	bne	19f08 <__flatcc_gen_sort@@Base+0x3f8>
   19efc:	sub	r3, r8, r5
   19f00:	cmp	r3, #2
   19f04:	bgt	1a084 <__flatcc_gen_sort@@Base+0x574>
   19f08:	mov	r1, #1
   19f0c:	ldr	r3, [r6, #204]	; 0xcc
   19f10:	mov	r2, #2
   19f14:	ldr	r0, [pc, #576]	; 1a15c <__flatcc_gen_sort@@Base+0x64c>
   19f18:	bl	13f18 <fwrite@plt>
   19f1c:	ldr	r1, [r4, #16]
   19f20:	ldr	r0, [r1, #12]
   19f24:	add	r2, sp, #12
   19f28:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   19f2c:	add	ip, r5, #1
   19f30:	mov	r3, r5
   19f34:	add	r2, sp, #12
   19f38:	ldr	r1, [pc, #544]	; 1a160 <__flatcc_gen_sort@@Base+0x650>
   19f3c:	ldr	r0, [r6, #204]	; 0xcc
   19f40:	mov	r5, ip
   19f44:	bl	13f84 <fprintf@plt>
   19f48:	ldr	r4, [r4]
   19f4c:	cmp	r4, #0
   19f50:	bne	19eb4 <__flatcc_gen_sort@@Base+0x3a4>
   19f54:	mov	r0, r5
   19f58:	add	sp, sp, #236	; 0xec
   19f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f60:	ldr	r1, [pc, #508]	; 1a164 <__flatcc_gen_sort@@Base+0x654>
   19f64:	ldr	r2, [pc, #508]	; 1a168 <__flatcc_gen_sort@@Base+0x658>
   19f68:	ldr	r3, [pc, #508]	; 1a16c <__flatcc_gen_sort@@Base+0x65c>
   19f6c:	ldr	r0, [r1]
   19f70:	str	r2, [sp]
   19f74:	ldr	r1, [pc, #500]	; 1a170 <__flatcc_gen_sort@@Base+0x660>
   19f78:	ldr	r2, [pc, #500]	; 1a174 <__flatcc_gen_sort@@Base+0x664>
   19f7c:	bl	13f84 <fprintf@plt>
   19f80:	ldr	r3, [pc, #496]	; 1a178 <__flatcc_gen_sort@@Base+0x668>
   19f84:	ldr	r2, [pc, #480]	; 1a16c <__flatcc_gen_sort@@Base+0x65c>
   19f88:	ldr	r1, [pc, #484]	; 1a174 <__flatcc_gen_sort@@Base+0x664>
   19f8c:	ldr	r0, [pc, #488]	; 1a17c <__flatcc_gen_sort@@Base+0x66c>
   19f90:	bl	14038 <__assert_fail@plt>
   19f94:	cmp	r8, #0
   19f98:	beq	19fc0 <__flatcc_gen_sort@@Base+0x4b0>
   19f9c:	cmp	r5, #0
   19fa0:	bne	1a008 <__flatcc_gen_sort@@Base+0x4f8>
   19fa4:	cmp	r8, #4
   19fa8:	bgt	1a01c <__flatcc_gen_sort@@Base+0x50c>
   19fac:	ldr	r3, [r6, #204]	; 0xcc
   19fb0:	mov	r2, #2
   19fb4:	mov	r1, #1
   19fb8:	ldr	r0, [pc, #412]	; 1a15c <__flatcc_gen_sort@@Base+0x64c>
   19fbc:	bl	13f18 <fwrite@plt>
   19fc0:	ldr	r3, [r4, #16]
   19fc4:	cmp	r3, #5
   19fc8:	beq	1a038 <__flatcc_gen_sort@@Base+0x528>
   19fcc:	sub	r3, r3, #1
   19fd0:	cmp	r3, #10
   19fd4:	ldrls	pc, [pc, r3, lsl #2]
   19fd8:	b	1a0fc <__flatcc_gen_sort@@Base+0x5ec>
   19fdc:	andeq	sl, r1, ip, lsr r1
   19fe0:	andeq	sl, r1, r0, lsr r1
   19fe4:	strdeq	sl, [r1], -r0
   19fe8:	andeq	sl, r1, r8, lsr #1
   19fec:	strdeq	sl, [r1], -ip
   19ff0:	andeq	sl, r1, r0, asr #1
   19ff4:	andeq	sl, r1, ip, asr #1
   19ff8:	ldrdeq	sl, [r1], -r8
   19ffc:	andeq	sl, r1, r4, ror #1
   1a000:	muleq	r1, ip, r0
   1a004:	strheq	sl, [r1], -r4
   1a008:	tst	r5, #3
   1a00c:	bne	19fac <__flatcc_gen_sort@@Base+0x49c>
   1a010:	sub	r3, r8, r5
   1a014:	cmp	r3, #2
   1a018:	ble	19fac <__flatcc_gen_sort@@Base+0x49c>
   1a01c:	mov	r2, r7
   1a020:	ldr	r1, [pc, #344]	; 1a180 <__flatcc_gen_sort@@Base+0x670>
   1a024:	ldr	r0, [r6, #204]	; 0xcc
   1a028:	bl	13f84 <fprintf@plt>
   1a02c:	ldr	r3, [r4, #16]
   1a030:	cmp	r3, #5
   1a034:	bne	19fcc <__flatcc_gen_sort@@Base+0x4bc>
   1a038:	mov	r2, r6
   1a03c:	mov	r3, fp
   1a040:	ldr	r0, [r6, #204]	; 0xcc
   1a044:	mov	r1, r9
   1a048:	str	r5, [sp]
   1a04c:	add	r5, r5, #1
   1a050:	bl	13f84 <fprintf@plt>
   1a054:	b	19f48 <__flatcc_gen_sort@@Base+0x438>
   1a058:	ldr	r3, [sp, #272]	; 0x110
   1a05c:	mov	r2, r5
   1a060:	str	r3, [sp]
   1a064:	add	r1, r1, #20
   1a068:	mov	r3, r8
   1a06c:	mov	r0, r6
   1a070:	bl	19e60 <__flatcc_gen_sort@@Base+0x350>
   1a074:	mov	r5, r0
   1a078:	b	19f48 <__flatcc_gen_sort@@Base+0x438>
   1a07c:	cmp	r8, #4
   1a080:	ble	19f08 <__flatcc_gen_sort@@Base+0x3f8>
   1a084:	ldr	r1, [pc, #244]	; 1a180 <__flatcc_gen_sort@@Base+0x670>
   1a088:	mov	r2, r7
   1a08c:	ldr	r0, [r6, #204]	; 0xcc
   1a090:	bl	13f84 <fprintf@plt>
   1a094:	ldr	r1, [r4, #16]
   1a098:	b	19f20 <__flatcc_gen_sort@@Base+0x410>
   1a09c:	mov	r2, sl
   1a0a0:	ldr	r3, [pc, #220]	; 1a184 <__flatcc_gen_sort@@Base+0x674>
   1a0a4:	b	1a040 <__flatcc_gen_sort@@Base+0x530>
   1a0a8:	mov	r2, sl
   1a0ac:	ldr	r3, [pc, #212]	; 1a188 <__flatcc_gen_sort@@Base+0x678>
   1a0b0:	b	1a040 <__flatcc_gen_sort@@Base+0x530>
   1a0b4:	mov	r2, sl
   1a0b8:	ldr	r3, [pc, #204]	; 1a18c <__flatcc_gen_sort@@Base+0x67c>
   1a0bc:	b	1a040 <__flatcc_gen_sort@@Base+0x530>
   1a0c0:	mov	r2, sl
   1a0c4:	ldr	r3, [pc, #196]	; 1a190 <__flatcc_gen_sort@@Base+0x680>
   1a0c8:	b	1a040 <__flatcc_gen_sort@@Base+0x530>
   1a0cc:	mov	r2, sl
   1a0d0:	ldr	r3, [pc, #188]	; 1a194 <__flatcc_gen_sort@@Base+0x684>
   1a0d4:	b	1a040 <__flatcc_gen_sort@@Base+0x530>
   1a0d8:	mov	r2, sl
   1a0dc:	ldr	r3, [pc, #180]	; 1a198 <__flatcc_gen_sort@@Base+0x688>
   1a0e0:	b	1a040 <__flatcc_gen_sort@@Base+0x530>
   1a0e4:	mov	r2, sl
   1a0e8:	ldr	r3, [pc, #172]	; 1a19c <__flatcc_gen_sort@@Base+0x68c>
   1a0ec:	b	1a040 <__flatcc_gen_sort@@Base+0x530>
   1a0f0:	mov	r2, sl
   1a0f4:	ldr	r3, [pc, #164]	; 1a1a0 <__flatcc_gen_sort@@Base+0x690>
   1a0f8:	b	1a040 <__flatcc_gen_sort@@Base+0x530>
   1a0fc:	ldr	r1, [pc, #96]	; 1a164 <__flatcc_gen_sort@@Base+0x654>
   1a100:	ldr	r2, [pc, #156]	; 1a1a4 <__flatcc_gen_sort@@Base+0x694>
   1a104:	mov	r3, #141	; 0x8d
   1a108:	ldr	r0, [r1]
   1a10c:	str	r2, [sp]
   1a110:	ldr	r1, [pc, #88]	; 1a170 <__flatcc_gen_sort@@Base+0x660>
   1a114:	ldr	r2, [pc, #140]	; 1a1a8 <__flatcc_gen_sort@@Base+0x698>
   1a118:	bl	13f84 <fprintf@plt>
   1a11c:	ldr	r3, [pc, #136]	; 1a1ac <__flatcc_gen_sort@@Base+0x69c>
   1a120:	mov	r2, #141	; 0x8d
   1a124:	ldr	r1, [pc, #124]	; 1a1a8 <__flatcc_gen_sort@@Base+0x698>
   1a128:	ldr	r0, [pc, #76]	; 1a17c <__flatcc_gen_sort@@Base+0x66c>
   1a12c:	bl	14038 <__assert_fail@plt>
   1a130:	mov	r2, sl
   1a134:	ldr	r3, [pc, #116]	; 1a1b0 <__flatcc_gen_sort@@Base+0x6a0>
   1a138:	b	1a040 <__flatcc_gen_sort@@Base+0x530>
   1a13c:	mov	r2, sl
   1a140:	ldr	r3, [pc, #108]	; 1a1b4 <__flatcc_gen_sort@@Base+0x6a4>
   1a144:	b	1a040 <__flatcc_gen_sort@@Base+0x530>
   1a148:	andeq	r3, r4, r8, lsl r4
   1a14c:	andeq	sl, r4, ip, lsl #6
   1a150:	andeq	r1, r4, r8, ror lr
   1a154:	andeq	fp, r4, ip, lsr #24
   1a158:	andeq	r4, r4, r0, ror #22
   1a15c:	strdeq	sl, [r4], -r8
   1a160:	strdeq	sl, [r4], -ip
   1a164:	andeq	sp, r6, r8, lsr #1
   1a168:	andeq	sl, r4, r8, lsl r3
   1a16c:	andeq	r0, r0, r2, asr r3
   1a170:			; <UNDEFINED> instruction: 0x00041fbc
   1a174:	strdeq	sl, [r4], -ip
   1a178:	strheq	sl, [r4], -r0
   1a17c:	andeq	sl, r4, r4, asr sp
   1a180:	strdeq	sl, [r4], -r0
   1a184:	andeq	r1, r4, r8, lsr #29
   1a188:	andeq	r1, r4, r0, ror lr
   1a18c:	andeq	r1, r4, r0, lsr #29
   1a190:	andeq	r1, r4, r0, lsl #29
   1a194:	andeq	r1, r4, r8, lsl #29
   1a198:	muleq	r4, r0, lr
   1a19c:	muleq	r4, r8, lr
   1a1a0:	andeq	r1, r4, r4, ror #28
   1a1a4:	andeq	r1, r4, r8, asr #31
   1a1a8:	andeq	r1, r4, r0, ror pc
   1a1ac:	muleq	r4, ip, r0
   1a1b0:	andeq	r1, r4, r8, asr lr
   1a1b4:	andeq	r1, r4, ip, asr #28
   1a1b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a1bc:	sub	sp, sp, #612	; 0x264
   1a1c0:	add	r8, sp, #168	; 0xa8
   1a1c4:	mov	r4, r1
   1a1c8:	mov	r2, #220	; 0xdc
   1a1cc:	mov	r1, #0
   1a1d0:	mov	r5, r0
   1a1d4:	mov	r0, r8
   1a1d8:	bl	13f9c <memset@plt>
   1a1dc:	mov	r2, #220	; 0xdc
   1a1e0:	mov	r1, #0
   1a1e4:	add	r0, sp, #388	; 0x184
   1a1e8:	bl	13f9c <memset@plt>
   1a1ec:	mov	r1, r4
   1a1f0:	ldr	r0, [r4, #12]
   1a1f4:	mov	r2, r8
   1a1f8:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1a1fc:	ldr	r4, [r4, #20]
   1a200:	cmp	r4, #0
   1a204:	beq	1a27c <__flatcc_gen_sort@@Base+0x76c>
   1a208:	ldr	r9, [pc, #3768]	; 1b0c8 <__flatcc_gen_sort@@Base+0x15b8>
   1a20c:	ldrh	r2, [r4, #72]	; 0x48
   1a210:	ldr	r3, [r4, #4]
   1a214:	tst	r2, #4
   1a218:	ldm	r3, {r6, r7}
   1a21c:	bne	1a258 <__flatcc_gen_sort@@Base+0x748>
   1a220:	ldrh	r3, [r4, #24]
   1a224:	sub	r3, r3, #7
   1a228:	cmp	r3, #8
   1a22c:	ldrls	pc, [pc, r3, lsl #2]
   1a230:	b	1a3ec <__flatcc_gen_sort@@Base+0x8dc>
   1a234:	andeq	sl, r1, r4, lsr #7
   1a238:	andeq	sl, r1, ip, asr r3
   1a23c:	andeq	sl, r1, r0, lsr r3
   1a240:	andeq	sl, r1, r4, lsl #6
   1a244:	andeq	sl, r1, ip, ror #7
   1a248:	andeq	sl, r1, ip, ror #7
   1a24c:	andeq	sl, r1, ip, ror #7
   1a250:	andeq	sl, r1, ip, asr #5
   1a254:	muleq	r1, r4, r2
   1a258:	ldr	r0, [r5, #204]	; 0xcc
   1a25c:	mov	r3, r7
   1a260:	str	r6, [sp]
   1a264:	mov	r2, r8
   1a268:	ldr	r1, [pc, #3676]	; 1b0cc <__flatcc_gen_sort@@Base+0x15bc>
   1a26c:	bl	13f84 <fprintf@plt>
   1a270:	ldr	r4, [r4]
   1a274:	cmp	r4, #0
   1a278:	bne	1a20c <__flatcc_gen_sort@@Base+0x6fc>
   1a27c:	ldr	r1, [r5, #204]	; 0xcc
   1a280:	mov	r0, #10
   1a284:	bl	13fe4 <fputc@plt>
   1a288:	mov	r0, #0
   1a28c:	add	sp, sp, #612	; 0x264
   1a290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a294:	ldr	r1, [r4, #16]
   1a298:	add	r2, sp, #388	; 0x184
   1a29c:	ldr	r0, [r1, #12]
   1a2a0:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1a2a4:	ldr	r2, [r4, #16]
   1a2a8:	ldrh	r3, [r2, #8]
   1a2ac:	cmp	r3, #4
   1a2b0:	ldrls	pc, [pc, r3, lsl #2]
   1a2b4:	b	1a60c <__flatcc_gen_sort@@Base+0xafc>
   1a2b8:	andeq	sl, r1, r0, ror #10
   1a2bc:	andeq	sl, r1, ip, lsl r5
   1a2c0:	andeq	sl, r1, ip, lsl #12
   1a2c4:	andeq	sl, r1, r4, ror #9
   1a2c8:	andeq	sl, r1, r0, lsr #11
   1a2cc:	ldr	r1, [r4, #16]
   1a2d0:	add	r2, sp, #388	; 0x184
   1a2d4:	ldr	r0, [r1, #12]
   1a2d8:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1a2dc:	ldr	r2, [r4, #16]
   1a2e0:	ldrh	r3, [r2, #8]
   1a2e4:	cmp	r3, #4
   1a2e8:	ldrls	pc, [pc, r3, lsl #2]
   1a2ec:	b	1a640 <__flatcc_gen_sort@@Base+0xb30>
   1a2f0:	ldrdeq	sl, [r1], -r8
   1a2f4:	andeq	sl, r1, r0, lsr #9
   1a2f8:	andeq	sl, r1, r0, asr #12
   1a2fc:	andeq	sl, r1, r8, ror r4
   1a300:	andeq	sl, r1, r0, lsr #8
   1a304:	str	r6, [sp, #20]
   1a308:	str	r7, [sp, #16]
   1a30c:	str	r8, [sp, #12]
   1a310:	str	r5, [sp, #8]
   1a314:	ldrd	r6, [r4, #96]	; 0x60
   1a318:	ldr	r0, [r5, #204]	; 0xcc
   1a31c:	mov	r2, r5
   1a320:	strd	r6, [sp]
   1a324:	ldr	r1, [pc, #3492]	; 1b0d0 <__flatcc_gen_sort@@Base+0x15c0>
   1a328:	bl	13f84 <fprintf@plt>
   1a32c:	b	1a270 <__flatcc_gen_sort@@Base+0x760>
   1a330:	str	r6, [sp, #20]
   1a334:	str	r7, [sp, #16]
   1a338:	str	r8, [sp, #12]
   1a33c:	str	r5, [sp, #8]
   1a340:	ldrd	r6, [r4, #96]	; 0x60
   1a344:	ldr	r0, [r5, #204]	; 0xcc
   1a348:	mov	r2, r5
   1a34c:	strd	r6, [sp]
   1a350:	ldr	r1, [pc, #3452]	; 1b0d4 <__flatcc_gen_sort@@Base+0x15c4>
   1a354:	bl	13f84 <fprintf@plt>
   1a358:	b	1a270 <__flatcc_gen_sort@@Base+0x760>
   1a35c:	ldr	r2, [r4, #16]
   1a360:	cmp	r2, #5
   1a364:	beq	1a6a8 <__flatcc_gen_sort@@Base+0xb98>
   1a368:	sub	r3, r2, #1
   1a36c:	cmp	r3, #10
   1a370:	ldrls	pc, [pc, r3, lsl #2]
   1a374:	b	1a674 <__flatcc_gen_sort@@Base+0xb64>
   1a378:	andeq	sl, r1, r4, lsr #22
   1a37c:	andeq	sl, r1, r4, lsl #21
   1a380:	ldrdeq	sl, [r1], -r4
   1a384:	andeq	sl, r1, r8, lsr #21
   1a388:	andeq	sl, r1, r4, ror r6
   1a38c:	andeq	sl, r1, r0, lsl sl
   1a390:	andeq	sl, r1, r4, lsl #19
   1a394:	andeq	sl, r1, r0, ror #20
   1a398:	andeq	sl, r1, ip, lsr sl
   1a39c:	strdeq	sl, [r1], -r0
   1a3a0:	andeq	sl, r1, r0, ror #18
   1a3a4:	ldr	r3, [r4, #16]
   1a3a8:	cmp	r3, #5
   1a3ac:	beq	1a79c <__flatcc_gen_sort@@Base+0xc8c>
   1a3b0:	sub	r3, r3, #1
   1a3b4:	cmp	r3, #10
   1a3b8:	ldrls	pc, [pc, r3, lsl #2]
   1a3bc:	b	1a674 <__flatcc_gen_sort@@Base+0xb64>
   1a3c0:	andeq	sl, r1, ip, lsr #20
   1a3c4:	andeq	sl, r1, r4, lsl fp
   1a3c8:	andeq	sl, r1, r0, lsr #19
   1a3cc:			; <UNDEFINED> instruction: 0x0001a9b0
   1a3d0:	andeq	sl, r1, r4, ror r6
   1a3d4:	ldrdeq	sl, [r1], -r0
   1a3d8:	andeq	sl, r1, r4, asr #21
   1a3dc:	andeq	sl, r1, r0, ror #19
   1a3e0:	strdeq	sl, [r1], -r0
   1a3e4:	andeq	sl, r1, r0, lsl #20
   1a3e8:	andeq	sl, r1, r0, asr #19
   1a3ec:	ldr	r1, [pc, #3300]	; 1b0d8 <__flatcc_gen_sort@@Base+0x15c8>
   1a3f0:	ldr	r2, [pc, #3300]	; 1b0dc <__flatcc_gen_sort@@Base+0x15cc>
   1a3f4:	ldr	r3, [pc, #3300]	; 1b0e0 <__flatcc_gen_sort@@Base+0x15d0>
   1a3f8:	ldr	r0, [r1]
   1a3fc:	str	r2, [sp]
   1a400:	ldr	r1, [pc, #3292]	; 1b0e4 <__flatcc_gen_sort@@Base+0x15d4>
   1a404:	ldr	r2, [pc, #3292]	; 1b0e8 <__flatcc_gen_sort@@Base+0x15d8>
   1a408:	bl	13f84 <fprintf@plt>
   1a40c:	ldr	r3, [pc, #3288]	; 1b0ec <__flatcc_gen_sort@@Base+0x15dc>
   1a410:	ldr	r2, [pc, #3272]	; 1b0e0 <__flatcc_gen_sort@@Base+0x15d0>
   1a414:	ldr	r1, [pc, #3276]	; 1b0e8 <__flatcc_gen_sort@@Base+0x15d8>
   1a418:	ldr	r0, [pc, #3280]	; 1b0f0 <__flatcc_gen_sort@@Base+0x15e0>
   1a41c:	bl	14038 <__assert_fail@plt>
   1a420:	add	r3, sp, #388	; 0x184
   1a424:	str	r3, [sp, #24]
   1a428:	str	r6, [sp, #20]
   1a42c:	str	r7, [sp, #16]
   1a430:	str	r8, [sp, #12]
   1a434:	str	r5, [sp, #8]
   1a438:	ldrd	sl, [r4, #96]	; 0x60
   1a43c:	ldr	r0, [r5, #204]	; 0xcc
   1a440:	mov	r2, r5
   1a444:	strd	sl, [sp]
   1a448:	ldr	r1, [pc, #3236]	; 1b0f4 <__flatcc_gen_sort@@Base+0x15e4>
   1a44c:	bl	13f84 <fprintf@plt>
   1a450:	mov	r3, #0
   1a454:	str	r3, [sp, #4]
   1a458:	ldr	r1, [r4, #16]
   1a45c:	mov	r3, r6
   1a460:	str	r1, [sp]
   1a464:	mov	r2, r7
   1a468:	mov	r1, r8
   1a46c:	mov	r0, r5
   1a470:	bl	19c3c <__flatcc_gen_sort@@Base+0x12c>
   1a474:	b	1a270 <__flatcc_gen_sort@@Base+0x760>
   1a478:	ldrh	r3, [r4, #56]	; 0x38
   1a47c:	ldr	r2, [r2, #40]	; 0x28
   1a480:	sub	r3, r3, #3
   1a484:	cmp	r3, #3
   1a488:	ldrls	pc, [pc, r3, lsl #2]
   1a48c:	b	1a8c4 <__flatcc_gen_sort@@Base+0xdb4>
   1a490:	ldrdeq	sl, [r1], -ip
   1a494:	andeq	sl, r1, r8, lsr #23
   1a498:	andeq	sl, r1, r4, ror fp
   1a49c:	andeq	sl, r1, r0, asr #22
   1a4a0:	ldrh	r3, [r4, #74]	; 0x4a
   1a4a4:	ldr	r0, [r5, #204]	; 0xcc
   1a4a8:	add	r1, sp, #388	; 0x184
   1a4ac:	str	r3, [sp, #40]	; 0x28
   1a4b0:	ldrd	r2, [r4, #88]	; 0x58
   1a4b4:	str	r1, [sp, #24]
   1a4b8:	str	r6, [sp, #20]
   1a4bc:	strd	r2, [sp, #32]
   1a4c0:	str	r7, [sp, #16]
   1a4c4:	str	r8, [sp, #12]
   1a4c8:	str	r5, [sp, #8]
   1a4cc:	ldrd	r6, [r4, #96]	; 0x60
   1a4d0:	mov	r2, r5
   1a4d4:	ldr	r1, [pc, #3100]	; 1b0f8 <__flatcc_gen_sort@@Base+0x15e8>
   1a4d8:	strd	r6, [sp]
   1a4dc:	bl	13f84 <fprintf@plt>
   1a4e0:	b	1a270 <__flatcc_gen_sort@@Base+0x760>
   1a4e4:	add	r3, sp, #388	; 0x184
   1a4e8:	str	r3, [sp, #28]
   1a4ec:	str	r3, [sp, #24]
   1a4f0:	str	r6, [sp, #20]
   1a4f4:	str	r7, [sp, #16]
   1a4f8:	str	r8, [sp, #12]
   1a4fc:	str	r5, [sp, #8]
   1a500:	ldrd	r6, [r4, #96]	; 0x60
   1a504:	ldr	r0, [r5, #204]	; 0xcc
   1a508:	mov	r2, r5
   1a50c:	strd	r6, [sp]
   1a510:	mov	r1, r9
   1a514:	bl	13f84 <fprintf@plt>
   1a518:	b	1a270 <__flatcc_gen_sort@@Base+0x760>
   1a51c:	ldrh	r3, [r2, #10]
   1a520:	tst	r3, #8
   1a524:	bne	1b088 <__flatcc_gen_sort@@Base+0x1578>
   1a528:	add	r3, sp, #388	; 0x184
   1a52c:	str	r3, [sp, #28]
   1a530:	str	r3, [sp, #24]
   1a534:	str	r6, [sp, #20]
   1a538:	str	r7, [sp, #16]
   1a53c:	str	r8, [sp, #12]
   1a540:	str	r5, [sp, #8]
   1a544:	ldrd	r6, [r4, #96]	; 0x60
   1a548:	ldr	r0, [r5, #204]	; 0xcc
   1a54c:	mov	r2, r5
   1a550:	strd	r6, [sp]
   1a554:	ldr	r1, [pc, #2976]	; 1b0fc <__flatcc_gen_sort@@Base+0x15ec>
   1a558:	bl	13f84 <fprintf@plt>
   1a55c:	b	1a270 <__flatcc_gen_sort@@Base+0x760>
   1a560:	ldrh	r3, [r2, #10]
   1a564:	tst	r3, #8
   1a568:	bne	1b070 <__flatcc_gen_sort@@Base+0x1560>
   1a56c:	add	r3, sp, #388	; 0x184
   1a570:	str	r3, [sp, #24]
   1a574:	str	r6, [sp, #20]
   1a578:	str	r7, [sp, #16]
   1a57c:	str	r8, [sp, #12]
   1a580:	str	r5, [sp, #8]
   1a584:	ldrd	r6, [r4, #96]	; 0x60
   1a588:	ldr	r0, [r5, #204]	; 0xcc
   1a58c:	mov	r2, r5
   1a590:	strd	r6, [sp]
   1a594:	ldr	r1, [pc, #2916]	; 1b100 <__flatcc_gen_sort@@Base+0x15f0>
   1a598:	bl	13f84 <fprintf@plt>
   1a59c:	b	1a270 <__flatcc_gen_sort@@Base+0x760>
   1a5a0:	add	r3, sp, #388	; 0x184
   1a5a4:	str	r3, [sp, #24]
   1a5a8:	str	r6, [sp, #20]
   1a5ac:	str	r7, [sp, #16]
   1a5b0:	str	r8, [sp, #12]
   1a5b4:	str	r5, [sp, #8]
   1a5b8:	ldrd	sl, [r4, #96]	; 0x60
   1a5bc:	ldr	r0, [r5, #204]	; 0xcc
   1a5c0:	mov	r2, r5
   1a5c4:	strd	sl, [sp]
   1a5c8:	ldr	r1, [pc, #2868]	; 1b104 <__flatcc_gen_sort@@Base+0x15f4>
   1a5cc:	bl	13f84 <fprintf@plt>
   1a5d0:	mov	r3, #1
   1a5d4:	b	1a454 <__flatcc_gen_sort@@Base+0x944>
   1a5d8:	add	r3, sp, #388	; 0x184
   1a5dc:	str	r3, [sp, #24]
   1a5e0:	str	r6, [sp, #20]
   1a5e4:	str	r7, [sp, #16]
   1a5e8:	str	r8, [sp, #12]
   1a5ec:	str	r5, [sp, #8]
   1a5f0:	ldrd	r6, [r4, #96]	; 0x60
   1a5f4:	ldr	r0, [r5, #204]	; 0xcc
   1a5f8:	mov	r2, r5
   1a5fc:	strd	r6, [sp]
   1a600:	ldr	r1, [pc, #2816]	; 1b108 <__flatcc_gen_sort@@Base+0x15f8>
   1a604:	bl	13f84 <fprintf@plt>
   1a608:	b	1a270 <__flatcc_gen_sort@@Base+0x760>
   1a60c:	ldr	r1, [pc, #2756]	; 1b0d8 <__flatcc_gen_sort@@Base+0x15c8>
   1a610:	ldr	r2, [pc, #2804]	; 1b10c <__flatcc_gen_sort@@Base+0x15fc>
   1a614:	ldr	r3, [pc, #2804]	; 1b110 <__flatcc_gen_sort@@Base+0x1600>
   1a618:	ldr	r0, [r1]
   1a61c:	str	r2, [sp]
   1a620:	ldr	r1, [pc, #2748]	; 1b0e4 <__flatcc_gen_sort@@Base+0x15d4>
   1a624:	ldr	r2, [pc, #2748]	; 1b0e8 <__flatcc_gen_sort@@Base+0x15d8>
   1a628:	bl	13f84 <fprintf@plt>
   1a62c:	ldr	r3, [pc, #2744]	; 1b0ec <__flatcc_gen_sort@@Base+0x15dc>
   1a630:	ldr	r2, [pc, #2776]	; 1b110 <__flatcc_gen_sort@@Base+0x1600>
   1a634:	ldr	r1, [pc, #2732]	; 1b0e8 <__flatcc_gen_sort@@Base+0x15d8>
   1a638:	ldr	r0, [pc, #2736]	; 1b0f0 <__flatcc_gen_sort@@Base+0x15e0>
   1a63c:	bl	14038 <__assert_fail@plt>
   1a640:	ldr	r1, [pc, #2704]	; 1b0d8 <__flatcc_gen_sort@@Base+0x15c8>
   1a644:	ldr	r2, [pc, #2760]	; 1b114 <__flatcc_gen_sort@@Base+0x1604>
   1a648:	mov	r3, #1472	; 0x5c0
   1a64c:	ldr	r0, [r1]
   1a650:	str	r2, [sp]
   1a654:	ldr	r1, [pc, #2696]	; 1b0e4 <__flatcc_gen_sort@@Base+0x15d4>
   1a658:	ldr	r2, [pc, #2696]	; 1b0e8 <__flatcc_gen_sort@@Base+0x15d8>
   1a65c:	bl	13f84 <fprintf@plt>
   1a660:	ldr	r3, [pc, #2692]	; 1b0ec <__flatcc_gen_sort@@Base+0x15dc>
   1a664:	mov	r2, #1472	; 0x5c0
   1a668:	ldr	r1, [pc, #2680]	; 1b0e8 <__flatcc_gen_sort@@Base+0x15d8>
   1a66c:	ldr	r0, [pc, #2684]	; 1b0f0 <__flatcc_gen_sort@@Base+0x15e0>
   1a670:	bl	14038 <__assert_fail@plt>
   1a674:	ldr	r1, [pc, #2652]	; 1b0d8 <__flatcc_gen_sort@@Base+0x15c8>
   1a678:	ldr	r2, [pc, #2712]	; 1b118 <__flatcc_gen_sort@@Base+0x1608>
   1a67c:	mov	r3, #141	; 0x8d
   1a680:	ldr	r0, [r1]
   1a684:	str	r2, [sp]
   1a688:	ldr	r1, [pc, #2644]	; 1b0e4 <__flatcc_gen_sort@@Base+0x15d4>
   1a68c:	ldr	r2, [pc, #2696]	; 1b11c <__flatcc_gen_sort@@Base+0x160c>
   1a690:	bl	13f84 <fprintf@plt>
   1a694:	ldr	r3, [pc, #2692]	; 1b120 <__flatcc_gen_sort@@Base+0x1610>
   1a698:	mov	r2, #141	; 0x8d
   1a69c:	ldr	r1, [pc, #2680]	; 1b11c <__flatcc_gen_sort@@Base+0x160c>
   1a6a0:	ldr	r0, [pc, #2632]	; 1b0f0 <__flatcc_gen_sort@@Base+0x15e0>
   1a6a4:	bl	14038 <__assert_fail@plt>
   1a6a8:	ldr	r3, [pc, #2676]	; 1b124 <__flatcc_gen_sort@@Base+0x1614>
   1a6ac:	mov	sl, r5
   1a6b0:	mov	fp, r3
   1a6b4:	ldr	r3, [pc, #2668]	; 1b128 <__flatcc_gen_sort@@Base+0x1618>
   1a6b8:	str	r3, [sp, #56]	; 0x38
   1a6bc:	ldrh	r3, [r4, #56]	; 0x38
   1a6c0:	sub	r3, r3, #3
   1a6c4:	cmp	r3, #3
   1a6c8:	ldrls	pc, [pc, r3, lsl #2]
   1a6cc:	b	1a8c4 <__flatcc_gen_sort@@Base+0xdb4>
   1a6d0:	andeq	sl, r1, ip, lsr #14
   1a6d4:	andeq	sl, r1, ip, lsr #18
   1a6d8:	strdeq	sl, [r1], -r8
   1a6dc:	andeq	sl, r1, r0, ror #13
   1a6e0:	sub	r3, r2, #1
   1a6e4:	cmp	r3, #8
   1a6e8:	ldrls	pc, [pc, r3, lsl #2]
   1a6ec:	b	1af2c <__flatcc_gen_sort@@Base+0x141c>
   1a6f0:	andeq	sl, r1, r4, lsl pc
   1a6f4:	andeq	sl, r1, ip, lsl #30
   1a6f8:	andeq	sl, r1, r4, lsl #30
   1a6fc:	muleq	r1, r4, ip
   1a700:	muleq	r1, r4, ip
   1a704:	andeq	sl, r1, r4, lsr #30
   1a708:	andeq	sl, r1, ip, lsl pc
   1a70c:	andeq	sl, r1, r4, ror sp
   1a710:	andeq	sl, r1, r4, asr sp
   1a714:	ldr	r3, [pc, #2576]	; 1b12c <__flatcc_gen_sort@@Base+0x161c>
   1a718:	mov	fp, r3
   1a71c:	ldr	r3, [pc, #2572]	; 1b130 <__flatcc_gen_sort@@Base+0x1620>
   1a720:	str	r3, [sp, #56]	; 0x38
   1a724:	ldr	r3, [pc, #2568]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1a728:	mov	sl, r3
   1a72c:	add	r3, sp, #68	; 0x44
   1a730:	str	r3, [sp, #60]	; 0x3c
   1a734:	mov	r0, r3
   1a738:	ldr	r1, [pc, #2552]	; 1b138 <__flatcc_gen_sort@@Base+0x1628>
   1a73c:	ldrd	r2, [r4, #48]	; 0x30
   1a740:	bl	13ff0 <sprintf@plt>
   1a744:	ldr	r3, [sp, #60]	; 0x3c
   1a748:	ldr	r1, [pc, #2540]	; 1b13c <__flatcc_gen_sort@@Base+0x162c>
   1a74c:	str	r3, [sp, #52]	; 0x34
   1a750:	ldrh	r3, [r4, #74]	; 0x4a
   1a754:	ldr	r0, [r5, #204]	; 0xcc
   1a758:	str	r3, [sp, #48]	; 0x30
   1a75c:	ldrd	r2, [r4, #88]	; 0x58
   1a760:	str	fp, [sp, #36]	; 0x24
   1a764:	str	sl, [sp, #32]
   1a768:	strd	r2, [sp, #40]	; 0x28
   1a76c:	ldr	r3, [sp, #56]	; 0x38
   1a770:	str	r5, [sp, #24]
   1a774:	str	r3, [sp, #28]
   1a778:	str	r6, [sp, #20]
   1a77c:	str	r7, [sp, #16]
   1a780:	str	r8, [sp, #12]
   1a784:	str	r5, [sp, #8]
   1a788:	ldrd	r6, [r4, #96]	; 0x60
   1a78c:	mov	r2, r5
   1a790:	strd	r6, [sp]
   1a794:	bl	13f84 <fprintf@plt>
   1a798:	b	1a270 <__flatcc_gen_sort@@Base+0x760>
   1a79c:	ldr	r3, [pc, #2432]	; 1b124 <__flatcc_gen_sort@@Base+0x1614>
   1a7a0:	ldr	r2, [pc, #2432]	; 1b128 <__flatcc_gen_sort@@Base+0x1618>
   1a7a4:	mov	r1, r5
   1a7a8:	str	r1, [sp, #32]
   1a7ac:	str	r2, [sp, #28]
   1a7b0:	str	r3, [sp, #36]	; 0x24
   1a7b4:	str	r5, [sp, #24]
   1a7b8:	str	r6, [sp, #20]
   1a7bc:	str	r7, [sp, #16]
   1a7c0:	str	r8, [sp, #12]
   1a7c4:	str	r5, [sp, #8]
   1a7c8:	ldrd	sl, [r4, #96]	; 0x60
   1a7cc:	ldr	r0, [r5, #204]	; 0xcc
   1a7d0:	ldr	r1, [pc, #2408]	; 1b140 <__flatcc_gen_sort@@Base+0x1630>
   1a7d4:	mov	r2, r5
   1a7d8:	strd	sl, [sp]
   1a7dc:	bl	13f84 <fprintf@plt>
   1a7e0:	ldr	r1, [r4, #104]	; 0x68
   1a7e4:	cmp	r1, #0
   1a7e8:	beq	1a270 <__flatcc_gen_sort@@Base+0x760>
   1a7ec:	ldrh	r3, [r1, #8]
   1a7f0:	cmp	r3, #0
   1a7f4:	beq	1a850 <__flatcc_gen_sort@@Base+0xd40>
   1a7f8:	cmp	r3, #1
   1a7fc:	bne	1a890 <__flatcc_gen_sort@@Base+0xd80>
   1a800:	add	r2, sp, #388	; 0x184
   1a804:	ldr	r0, [r1, #12]
   1a808:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1a80c:	add	r3, sp, #388	; 0x184
   1a810:	str	r3, [sp, #24]
   1a814:	str	r3, [sp, #20]
   1a818:	ldr	r2, [r4, #104]	; 0x68
   1a81c:	add	r1, sp, #388	; 0x184
   1a820:	ldr	r0, [r5, #204]	; 0xcc
   1a824:	ldrh	r2, [r2, #104]	; 0x68
   1a828:	mov	r3, r5
   1a82c:	str	r1, [sp, #12]
   1a830:	str	r2, [sp, #16]
   1a834:	str	r6, [sp, #8]
   1a838:	str	r7, [sp, #4]
   1a83c:	str	r8, [sp]
   1a840:	mov	r2, r5
   1a844:	ldr	r1, [pc, #2296]	; 1b144 <__flatcc_gen_sort@@Base+0x1634>
   1a848:	bl	13f84 <fprintf@plt>
   1a84c:	b	1a270 <__flatcc_gen_sort@@Base+0x760>
   1a850:	add	r2, sp, #388	; 0x184
   1a854:	ldr	r0, [r1, #12]
   1a858:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1a85c:	add	r3, sp, #388	; 0x184
   1a860:	ldr	r0, [r5, #204]	; 0xcc
   1a864:	mov	r2, r5
   1a868:	str	r3, [sp, #20]
   1a86c:	str	r3, [sp, #16]
   1a870:	str	r3, [sp, #12]
   1a874:	str	r6, [sp, #8]
   1a878:	str	r7, [sp, #4]
   1a87c:	str	r8, [sp]
   1a880:	mov	r3, r5
   1a884:	ldr	r1, [pc, #2236]	; 1b148 <__flatcc_gen_sort@@Base+0x1638>
   1a888:	bl	13f84 <fprintf@plt>
   1a88c:	b	1a270 <__flatcc_gen_sort@@Base+0x760>
   1a890:	ldr	r1, [pc, #2112]	; 1b0d8 <__flatcc_gen_sort@@Base+0x15c8>
   1a894:	ldr	r2, [pc, #2224]	; 1b14c <__flatcc_gen_sort@@Base+0x163c>
   1a898:	ldr	r3, [pc, #2224]	; 1b150 <__flatcc_gen_sort@@Base+0x1640>
   1a89c:	ldr	r0, [r1]
   1a8a0:	str	r2, [sp]
   1a8a4:	ldr	r1, [pc, #2104]	; 1b0e4 <__flatcc_gen_sort@@Base+0x15d4>
   1a8a8:	ldr	r2, [pc, #2104]	; 1b0e8 <__flatcc_gen_sort@@Base+0x15d8>
   1a8ac:	bl	13f84 <fprintf@plt>
   1a8b0:	ldr	r3, [pc, #2100]	; 1b0ec <__flatcc_gen_sort@@Base+0x15dc>
   1a8b4:	ldr	r2, [pc, #2196]	; 1b150 <__flatcc_gen_sort@@Base+0x1640>
   1a8b8:	ldr	r1, [pc, #2088]	; 1b0e8 <__flatcc_gen_sort@@Base+0x15d8>
   1a8bc:	ldr	r0, [pc, #2092]	; 1b0f0 <__flatcc_gen_sort@@Base+0x15e0>
   1a8c0:	bl	14038 <__assert_fail@plt>
   1a8c4:	ldr	r1, [pc, #2060]	; 1b0d8 <__flatcc_gen_sort@@Base+0x15c8>
   1a8c8:	ldr	r2, [pc, #2120]	; 1b118 <__flatcc_gen_sort@@Base+0x1608>
   1a8cc:	mov	r3, #260	; 0x104
   1a8d0:	ldr	r0, [r1]
   1a8d4:	str	r2, [sp]
   1a8d8:	ldr	r1, [pc, #2052]	; 1b0e4 <__flatcc_gen_sort@@Base+0x15d4>
   1a8dc:	ldr	r2, [pc, #2104]	; 1b11c <__flatcc_gen_sort@@Base+0x160c>
   1a8e0:	bl	13f84 <fprintf@plt>
   1a8e4:	ldr	r3, [pc, #2152]	; 1b154 <__flatcc_gen_sort@@Base+0x1644>
   1a8e8:	mov	r2, #260	; 0x104
   1a8ec:	ldr	r1, [pc, #2088]	; 1b11c <__flatcc_gen_sort@@Base+0x160c>
   1a8f0:	ldr	r0, [pc, #2040]	; 1b0f0 <__flatcc_gen_sort@@Base+0x15e0>
   1a8f4:	bl	14038 <__assert_fail@plt>
   1a8f8:	sub	r3, r2, #1
   1a8fc:	cmp	r3, #8
   1a900:	ldrls	pc, [pc, r3, lsl #2]
   1a904:	b	1af2c <__flatcc_gen_sort@@Base+0x141c>
   1a908:	ldrdeq	sl, [r1], -r4
   1a90c:	andeq	sl, r1, ip, asr #27
   1a910:	andeq	sl, r1, ip, ror #27
   1a914:	andeq	sl, r1, r0, ror ip
   1a918:	andeq	sl, r1, r0, ror ip
   1a91c:	ldrdeq	sl, [r1], -ip
   1a920:	strdeq	sl, [r1], -ip
   1a924:	strdeq	sl, [r1], -r4
   1a928:	andeq	sl, r1, r4, ror #27
   1a92c:	sub	r3, r2, #1
   1a930:	cmp	r3, #8
   1a934:	ldrls	pc, [pc, r3, lsl #2]
   1a938:	b	1af2c <__flatcc_gen_sort@@Base+0x141c>
   1a93c:	andeq	sl, r1, r4, lsl #28
   1a940:	andeq	sl, r1, r4, asr #27
   1a944:	andeq	sl, r1, r4, lsl lr
   1a948:	andeq	sl, r1, ip, asr #24
   1a94c:	andeq	sl, r1, ip, asr #24
   1a950:	andeq	sl, r1, ip, lsr #28
   1a954:	andeq	sl, r1, r4, lsr #28
   1a958:	andeq	sl, r1, ip, lsl lr
   1a95c:	andeq	sl, r1, ip, lsl #28
   1a960:	ldrh	r2, [r4, #56]	; 0x38
   1a964:	sub	r2, r2, #3
   1a968:	cmp	r2, #3
   1a96c:	ldrls	pc, [pc, r2, lsl #2]
   1a970:	b	1a8c4 <__flatcc_gen_sort@@Base+0xdb4>
   1a974:			; <UNDEFINED> instruction: 0x0001acb4
   1a978:	strdeq	sl, [r1], -r0
   1a97c:	andeq	sl, r1, r8, lsl #26
   1a980:	andeq	sl, r1, ip, lsr #30
   1a984:	ldr	r3, [pc, #1996]	; 1b158 <__flatcc_gen_sort@@Base+0x1648>
   1a988:	mov	fp, r3
   1a98c:	ldr	r3, [pc, #1952]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1a990:	mov	sl, r3
   1a994:	ldr	r3, [pc, #1984]	; 1b15c <__flatcc_gen_sort@@Base+0x164c>
   1a998:	str	r3, [sp, #56]	; 0x38
   1a99c:	b	1a6bc <__flatcc_gen_sort@@Base+0xbac>
   1a9a0:	ldr	r3, [pc, #1976]	; 1b160 <__flatcc_gen_sort@@Base+0x1650>
   1a9a4:	ldr	r1, [pc, #1928]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1a9a8:	ldr	r2, [pc, #1972]	; 1b164 <__flatcc_gen_sort@@Base+0x1654>
   1a9ac:	b	1a7a8 <__flatcc_gen_sort@@Base+0xc98>
   1a9b0:	ldr	r3, [pc, #1968]	; 1b168 <__flatcc_gen_sort@@Base+0x1658>
   1a9b4:	ldr	r1, [pc, #1912]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1a9b8:	ldr	r2, [pc, #1964]	; 1b16c <__flatcc_gen_sort@@Base+0x165c>
   1a9bc:	b	1a7a8 <__flatcc_gen_sort@@Base+0xc98>
   1a9c0:	ldr	r3, [pc, #1960]	; 1b170 <__flatcc_gen_sort@@Base+0x1660>
   1a9c4:	ldr	r1, [pc, #1896]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1a9c8:	mov	r2, r3
   1a9cc:	b	1a7a8 <__flatcc_gen_sort@@Base+0xc98>
   1a9d0:	ldr	r3, [pc, #1948]	; 1b174 <__flatcc_gen_sort@@Base+0x1664>
   1a9d4:	ldr	r1, [pc, #1880]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1a9d8:	ldr	r2, [pc, #1944]	; 1b178 <__flatcc_gen_sort@@Base+0x1668>
   1a9dc:	b	1a7a8 <__flatcc_gen_sort@@Base+0xc98>
   1a9e0:	ldr	r3, [pc, #1860]	; 1b12c <__flatcc_gen_sort@@Base+0x161c>
   1a9e4:	ldr	r1, [pc, #1864]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1a9e8:	ldr	r2, [pc, #1856]	; 1b130 <__flatcc_gen_sort@@Base+0x1620>
   1a9ec:	b	1a7a8 <__flatcc_gen_sort@@Base+0xc98>
   1a9f0:	ldr	r3, [pc, #1924]	; 1b17c <__flatcc_gen_sort@@Base+0x166c>
   1a9f4:	ldr	r1, [pc, #1848]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1a9f8:	ldr	r2, [pc, #1920]	; 1b180 <__flatcc_gen_sort@@Base+0x1670>
   1a9fc:	b	1a7a8 <__flatcc_gen_sort@@Base+0xc98>
   1aa00:	ldr	r3, [pc, #1916]	; 1b184 <__flatcc_gen_sort@@Base+0x1674>
   1aa04:	ldr	r1, [pc, #1832]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1aa08:	mov	r2, r3
   1aa0c:	b	1a7a8 <__flatcc_gen_sort@@Base+0xc98>
   1aa10:	ldr	r3, [pc, #1884]	; 1b174 <__flatcc_gen_sort@@Base+0x1664>
   1aa14:	mov	fp, r3
   1aa18:	ldr	r3, [pc, #1812]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1aa1c:	mov	sl, r3
   1aa20:	ldr	r3, [pc, #1872]	; 1b178 <__flatcc_gen_sort@@Base+0x1668>
   1aa24:	str	r3, [sp, #56]	; 0x38
   1aa28:	b	1a6bc <__flatcc_gen_sort@@Base+0xbac>
   1aa2c:	ldr	r3, [pc, #1876]	; 1b188 <__flatcc_gen_sort@@Base+0x1678>
   1aa30:	ldr	r1, [pc, #1788]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1aa34:	ldr	r2, [pc, #1872]	; 1b18c <__flatcc_gen_sort@@Base+0x167c>
   1aa38:	b	1a7a8 <__flatcc_gen_sort@@Base+0xc98>
   1aa3c:	ldrh	r2, [r4, #56]	; 0x38
   1aa40:	sub	r2, r2, #3
   1aa44:	cmp	r2, #3
   1aa48:	ldrls	pc, [pc, r2, lsl #2]
   1aa4c:	b	1a8c4 <__flatcc_gen_sort@@Base+0xdb4>
   1aa50:	strdeq	sl, [r1], -r0
   1aa54:	ldrdeq	sl, [r1], -r4
   1aa58:			; <UNDEFINED> instruction: 0x0001aeb8
   1aa5c:	andeq	sl, r1, ip, lsr sp
   1aa60:	ldrh	r2, [r4, #56]	; 0x38
   1aa64:	sub	r2, r2, #3
   1aa68:	cmp	r2, #3
   1aa6c:	ldrls	pc, [pc, r2, lsl #2]
   1aa70:	b	1a8c4 <__flatcc_gen_sort@@Base+0xdb4>
   1aa74:	andeq	sl, r1, r4, lsl r7
   1aa78:	andeq	sl, r1, r0, asr lr
   1aa7c:	andeq	sl, r1, r4, lsr lr
   1aa80:	andeq	sl, r1, ip, asr sp
   1aa84:	ldrh	r2, [r4, #56]	; 0x38
   1aa88:	sub	r2, r2, #3
   1aa8c:	cmp	r2, #3
   1aa90:	ldrls	pc, [pc, r2, lsl #2]
   1aa94:	b	1a8c4 <__flatcc_gen_sort@@Base+0xdb4>
   1aa98:	andeq	sl, r1, r8, lsl #29
   1aa9c:	andeq	sl, r1, ip, ror #28
   1aaa0:	muleq	r1, ip, lr
   1aaa4:	andeq	sl, r1, r0, lsr #26
   1aaa8:	ldr	r3, [pc, #1720]	; 1b168 <__flatcc_gen_sort@@Base+0x1658>
   1aaac:	mov	fp, r3
   1aab0:	ldr	r3, [pc, #1660]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1aab4:	mov	sl, r3
   1aab8:	ldr	r3, [pc, #1708]	; 1b16c <__flatcc_gen_sort@@Base+0x165c>
   1aabc:	str	r3, [sp, #56]	; 0x38
   1aac0:	b	1a6bc <__flatcc_gen_sort@@Base+0xbac>
   1aac4:	ldr	r3, [pc, #1676]	; 1b158 <__flatcc_gen_sort@@Base+0x1648>
   1aac8:	ldr	r1, [pc, #1636]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1aacc:	ldr	r2, [pc, #1672]	; 1b15c <__flatcc_gen_sort@@Base+0x164c>
   1aad0:	b	1a7a8 <__flatcc_gen_sort@@Base+0xc98>
   1aad4:	ldr	r3, [pc, #1668]	; 1b160 <__flatcc_gen_sort@@Base+0x1650>
   1aad8:	mov	fp, r3
   1aadc:	ldr	r3, [pc, #1616]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1aae0:	mov	sl, r3
   1aae4:	ldr	r3, [pc, #1656]	; 1b164 <__flatcc_gen_sort@@Base+0x1654>
   1aae8:	str	r3, [sp, #56]	; 0x38
   1aaec:	b	1a6bc <__flatcc_gen_sort@@Base+0xbac>
   1aaf0:	ldrh	r2, [r4, #56]	; 0x38
   1aaf4:	sub	r2, r2, #3
   1aaf8:	cmp	r2, #3
   1aafc:	ldrls	pc, [pc, r2, lsl #2]
   1ab00:	b	1a8c4 <__flatcc_gen_sort@@Base+0xdb4>
   1ab04:	andeq	sl, r1, ip, lsr #27
   1ab08:	muleq	r1, r4, sp
   1ab0c:	andeq	sl, r1, ip, ror sp
   1ab10:	andeq	sl, r1, ip, lsr #30
   1ab14:	ldr	r3, [pc, #1652]	; 1b190 <__flatcc_gen_sort@@Base+0x1680>
   1ab18:	ldr	r1, [pc, #1556]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1ab1c:	ldr	r2, [pc, #1648]	; 1b194 <__flatcc_gen_sort@@Base+0x1684>
   1ab20:	b	1a7a8 <__flatcc_gen_sort@@Base+0xc98>
   1ab24:	ldr	r3, [pc, #1628]	; 1b188 <__flatcc_gen_sort@@Base+0x1678>
   1ab28:	mov	fp, r3
   1ab2c:	ldr	r3, [pc, #1536]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1ab30:	mov	sl, r3
   1ab34:	ldr	r3, [pc, #1616]	; 1b18c <__flatcc_gen_sort@@Base+0x167c>
   1ab38:	str	r3, [sp, #56]	; 0x38
   1ab3c:	b	1a6bc <__flatcc_gen_sort@@Base+0xbac>
   1ab40:	sub	r2, r2, #1
   1ab44:	cmp	r2, #8
   1ab48:	ldrls	pc, [pc, r2, lsl #2]
   1ab4c:	b	1af2c <__flatcc_gen_sort@@Base+0x141c>
   1ab50:	strdeq	sl, [r1], -r8
   1ab54:	strdeq	sl, [r1], -r0
   1ab58:	andeq	sl, r1, r8, ror #31
   1ab5c:	andeq	sl, r1, r0, ror #30
   1ab60:	andeq	sl, r1, r0, ror #30
   1ab64:	andeq	sl, r1, r8, asr #31
   1ab68:	ldrdeq	sl, [r1], -r8
   1ab6c:	ldrdeq	sl, [r1], -r0
   1ab70:	andeq	sl, r1, r0, ror #31
   1ab74:	sub	r2, r2, #1
   1ab78:	cmp	r2, #8
   1ab7c:	ldrls	pc, [pc, r2, lsl #2]
   1ab80:	b	1af2c <__flatcc_gen_sort@@Base+0x141c>
   1ab84:	andeq	fp, r1, r8, rrx
   1ab88:	andeq	fp, r1, r0, rrx
   1ab8c:	andeq	fp, r1, r8, asr #32
   1ab90:	andeq	sl, r1, r0, lsl #31
   1ab94:	andeq	sl, r1, r0, lsl #31
   1ab98:	andeq	fp, r1, r0
   1ab9c:	andeq	fp, r1, r8, asr r0
   1aba0:	andeq	fp, r1, r0, asr r0
   1aba4:	andeq	fp, r1, r0, asr #32
   1aba8:	sub	r2, r2, #1
   1abac:	cmp	r2, #8
   1abb0:	ldrls	pc, [pc, r2, lsl #2]
   1abb4:	b	1af2c <__flatcc_gen_sort@@Base+0x141c>
   1abb8:	andeq	fp, r1, r8, lsr r0
   1abbc:	andeq	fp, r1, r0, lsr r0
   1abc0:	andeq	fp, r1, r8, lsr #32
   1abc4:	andeq	sl, r1, r4, lsr #31
   1abc8:	andeq	sl, r1, r4, lsr #31
   1abcc:	andeq	fp, r1, r8
   1abd0:	andeq	fp, r1, r8, lsl r0
   1abd4:	andeq	fp, r1, r0, lsl r0
   1abd8:	andeq	fp, r1, r0, lsr #32
   1abdc:	cmp	r2, #11
   1abe0:	beq	1b0a0 <__flatcc_gen_sort@@Base+0x1590>
   1abe4:	add	r3, sp, #68	; 0x44
   1abe8:	str	r3, [sp, #60]	; 0x3c
   1abec:	mov	r0, r3
   1abf0:	ldr	r1, [pc, #1344]	; 1b138 <__flatcc_gen_sort@@Base+0x1628>
   1abf4:	ldrd	r2, [r4, #48]	; 0x30
   1abf8:	bl	13ff0 <sprintf@plt>
   1abfc:	ldr	r3, [sp, #60]	; 0x3c
   1ac00:	add	r1, sp, #388	; 0x184
   1ac04:	str	r3, [sp, #44]	; 0x2c
   1ac08:	ldrh	r3, [r4, #74]	; 0x4a
   1ac0c:	ldr	r0, [r5, #204]	; 0xcc
   1ac10:	str	r3, [sp, #40]	; 0x28
   1ac14:	ldrd	r2, [r4, #88]	; 0x58
   1ac18:	str	r1, [sp, #28]
   1ac1c:	str	r1, [sp, #24]
   1ac20:	strd	r2, [sp, #32]
   1ac24:	str	r6, [sp, #20]
   1ac28:	str	r7, [sp, #16]
   1ac2c:	str	r8, [sp, #12]
   1ac30:	str	r5, [sp, #8]
   1ac34:	ldrd	r6, [r4, #96]	; 0x60
   1ac38:	mov	r2, r5
   1ac3c:	ldr	r1, [pc, #1364]	; 1b198 <__flatcc_gen_sort@@Base+0x1688>
   1ac40:	strd	r6, [sp]
   1ac44:	bl	13f84 <fprintf@plt>
   1ac48:	b	1a270 <__flatcc_gen_sort@@Base+0x760>
   1ac4c:	ldr	r2, [pc, #1352]	; 1b19c <__flatcc_gen_sort@@Base+0x168c>
   1ac50:	ldrd	r0, [r4, #48]	; 0x30
   1ac54:	add	r3, sp, #68	; 0x44
   1ac58:	str	r3, [sp, #60]	; 0x3c
   1ac5c:	strd	r0, [sp]
   1ac60:	mov	r0, r3
   1ac64:	ldr	r1, [pc, #1332]	; 1b1a0 <__flatcc_gen_sort@@Base+0x1690>
   1ac68:	bl	13ff0 <sprintf@plt>
   1ac6c:	b	1a744 <__flatcc_gen_sort@@Base+0xc34>
   1ac70:	ldr	r2, [pc, #1316]	; 1b19c <__flatcc_gen_sort@@Base+0x168c>
   1ac74:	ldrd	r0, [r4, #48]	; 0x30
   1ac78:	add	r3, sp, #68	; 0x44
   1ac7c:	str	r3, [sp, #60]	; 0x3c
   1ac80:	strd	r0, [sp]
   1ac84:	mov	r0, r3
   1ac88:	ldr	r1, [pc, #1300]	; 1b1a4 <__flatcc_gen_sort@@Base+0x1694>
   1ac8c:	bl	13ff0 <sprintf@plt>
   1ac90:	b	1a744 <__flatcc_gen_sort@@Base+0xc34>
   1ac94:	ldr	r2, [pc, #1280]	; 1b19c <__flatcc_gen_sort@@Base+0x168c>
   1ac98:	add	r3, sp, #68	; 0x44
   1ac9c:	str	r3, [sp, #60]	; 0x3c
   1aca0:	mov	r0, r3
   1aca4:	ldr	r1, [pc, #1276]	; 1b1a8 <__flatcc_gen_sort@@Base+0x1698>
   1aca8:	ldrb	r3, [r4, #48]	; 0x30
   1acac:	bl	13ff0 <sprintf@plt>
   1acb0:	b	1a744 <__flatcc_gen_sort@@Base+0xc34>
   1acb4:	vldr	d7, [r4, #48]	; 0x30
   1acb8:	add	r3, sp, #68	; 0x44
   1acbc:	str	r3, [sp, #60]	; 0x3c
   1acc0:	ldr	r2, [pc, #1132]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1acc4:	vcvt.f32.f64	s14, d7
   1acc8:	mov	r0, r3
   1accc:	ldr	r3, [pc, #1180]	; 1b170 <__flatcc_gen_sort@@Base+0x1660>
   1acd0:	mov	sl, r2
   1acd4:	mov	fp, r3
   1acd8:	str	r3, [sp, #56]	; 0x38
   1acdc:	ldr	r1, [pc, #1224]	; 1b1ac <__flatcc_gen_sort@@Base+0x169c>
   1ace0:	vcvt.f64.f32	d7, s14
   1ace4:	vmov	r2, r3, d7
   1ace8:	bl	13ff0 <sprintf@plt>
   1acec:	b	1a744 <__flatcc_gen_sort@@Base+0xc34>
   1acf0:	ldr	r2, [pc, #1144]	; 1b170 <__flatcc_gen_sort@@Base+0x1660>
   1acf4:	ldr	r1, [pc, #1080]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1acf8:	mov	fp, r2
   1acfc:	mov	sl, r1
   1ad00:	str	r2, [sp, #56]	; 0x38
   1ad04:	b	1a930 <__flatcc_gen_sort@@Base+0xe20>
   1ad08:	ldr	r2, [pc, #1120]	; 1b170 <__flatcc_gen_sort@@Base+0x1660>
   1ad0c:	ldr	r1, [pc, #1056]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1ad10:	mov	fp, r2
   1ad14:	mov	sl, r1
   1ad18:	str	r2, [sp, #56]	; 0x38
   1ad1c:	b	1a8fc <__flatcc_gen_sort@@Base+0xdec>
   1ad20:	ldr	r2, [pc, #1128]	; 1b190 <__flatcc_gen_sort@@Base+0x1680>
   1ad24:	mov	fp, r2
   1ad28:	ldr	r2, [pc, #1124]	; 1b194 <__flatcc_gen_sort@@Base+0x1684>
   1ad2c:	str	r2, [sp, #56]	; 0x38
   1ad30:	ldr	r2, [pc, #1020]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1ad34:	mov	sl, r2
   1ad38:	b	1a6e4 <__flatcc_gen_sort@@Base+0xbd4>
   1ad3c:	ldr	r3, [pc, #1080]	; 1b17c <__flatcc_gen_sort@@Base+0x166c>
   1ad40:	mov	fp, r3
   1ad44:	ldr	r3, [pc, #1076]	; 1b180 <__flatcc_gen_sort@@Base+0x1670>
   1ad48:	str	r3, [sp, #56]	; 0x38
   1ad4c:	ldr	r3, [pc, #992]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1ad50:	mov	sl, r3
   1ad54:	ldr	r2, [pc, #1108]	; 1b1b0 <__flatcc_gen_sort@@Base+0x16a0>
   1ad58:	b	1ac98 <__flatcc_gen_sort@@Base+0x1188>
   1ad5c:	ldr	r3, [pc, #968]	; 1b12c <__flatcc_gen_sort@@Base+0x161c>
   1ad60:	mov	fp, r3
   1ad64:	ldr	r3, [pc, #964]	; 1b130 <__flatcc_gen_sort@@Base+0x1620>
   1ad68:	str	r3, [sp, #56]	; 0x38
   1ad6c:	ldr	r3, [pc, #960]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1ad70:	mov	sl, r3
   1ad74:	ldr	r2, [pc, #1080]	; 1b1b4 <__flatcc_gen_sort@@Base+0x16a4>
   1ad78:	b	1ac98 <__flatcc_gen_sort@@Base+0x1188>
   1ad7c:	ldr	r2, [pc, #1024]	; 1b184 <__flatcc_gen_sort@@Base+0x1674>
   1ad80:	ldr	r1, [pc, #940]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1ad84:	mov	fp, r2
   1ad88:	mov	sl, r1
   1ad8c:	str	r2, [sp, #56]	; 0x38
   1ad90:	b	1a8fc <__flatcc_gen_sort@@Base+0xdec>
   1ad94:	ldr	r2, [pc, #1000]	; 1b184 <__flatcc_gen_sort@@Base+0x1674>
   1ad98:	ldr	r1, [pc, #916]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1ad9c:	mov	fp, r2
   1ada0:	mov	sl, r1
   1ada4:	str	r2, [sp, #56]	; 0x38
   1ada8:	b	1a930 <__flatcc_gen_sort@@Base+0xe20>
   1adac:	ldr	r3, [pc, #976]	; 1b184 <__flatcc_gen_sort@@Base+0x1674>
   1adb0:	ldr	r2, [pc, #892]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1adb4:	mov	fp, r3
   1adb8:	mov	sl, r2
   1adbc:	str	r3, [sp, #56]	; 0x38
   1adc0:	b	1a72c <__flatcc_gen_sort@@Base+0xc1c>
   1adc4:	ldr	r2, [pc, #1004]	; 1b1b8 <__flatcc_gen_sort@@Base+0x16a8>
   1adc8:	b	1ac50 <__flatcc_gen_sort@@Base+0x1140>
   1adcc:	ldr	r2, [pc, #996]	; 1b1b8 <__flatcc_gen_sort@@Base+0x16a8>
   1add0:	b	1ac74 <__flatcc_gen_sort@@Base+0x1164>
   1add4:	ldr	r2, [pc, #992]	; 1b1bc <__flatcc_gen_sort@@Base+0x16ac>
   1add8:	b	1ac74 <__flatcc_gen_sort@@Base+0x1164>
   1addc:	ldr	r2, [pc, #988]	; 1b1c0 <__flatcc_gen_sort@@Base+0x16b0>
   1ade0:	b	1ac74 <__flatcc_gen_sort@@Base+0x1164>
   1ade4:	ldr	r2, [pc, #964]	; 1b1b0 <__flatcc_gen_sort@@Base+0x16a0>
   1ade8:	b	1ac74 <__flatcc_gen_sort@@Base+0x1164>
   1adec:	ldr	r2, [pc, #976]	; 1b1c4 <__flatcc_gen_sort@@Base+0x16b4>
   1adf0:	b	1ac74 <__flatcc_gen_sort@@Base+0x1164>
   1adf4:	ldr	r2, [pc, #952]	; 1b1b4 <__flatcc_gen_sort@@Base+0x16a4>
   1adf8:	b	1ac74 <__flatcc_gen_sort@@Base+0x1164>
   1adfc:	ldr	r2, [pc, #964]	; 1b1c8 <__flatcc_gen_sort@@Base+0x16b8>
   1ae00:	b	1ac74 <__flatcc_gen_sort@@Base+0x1164>
   1ae04:	ldr	r2, [pc, #944]	; 1b1bc <__flatcc_gen_sort@@Base+0x16ac>
   1ae08:	b	1ac50 <__flatcc_gen_sort@@Base+0x1140>
   1ae0c:	ldr	r2, [pc, #924]	; 1b1b0 <__flatcc_gen_sort@@Base+0x16a0>
   1ae10:	b	1ac50 <__flatcc_gen_sort@@Base+0x1140>
   1ae14:	ldr	r2, [pc, #936]	; 1b1c4 <__flatcc_gen_sort@@Base+0x16b4>
   1ae18:	b	1ac50 <__flatcc_gen_sort@@Base+0x1140>
   1ae1c:	ldr	r2, [pc, #912]	; 1b1b4 <__flatcc_gen_sort@@Base+0x16a4>
   1ae20:	b	1ac50 <__flatcc_gen_sort@@Base+0x1140>
   1ae24:	ldr	r2, [pc, #924]	; 1b1c8 <__flatcc_gen_sort@@Base+0x16b8>
   1ae28:	b	1ac50 <__flatcc_gen_sort@@Base+0x1140>
   1ae2c:	ldr	r2, [pc, #908]	; 1b1c0 <__flatcc_gen_sort@@Base+0x16b0>
   1ae30:	b	1ac50 <__flatcc_gen_sort@@Base+0x1140>
   1ae34:	ldr	r2, [pc, #752]	; 1b12c <__flatcc_gen_sort@@Base+0x161c>
   1ae38:	mov	fp, r2
   1ae3c:	ldr	r2, [pc, #748]	; 1b130 <__flatcc_gen_sort@@Base+0x1620>
   1ae40:	str	r2, [sp, #56]	; 0x38
   1ae44:	ldr	r2, [pc, #744]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1ae48:	mov	sl, r2
   1ae4c:	b	1a8fc <__flatcc_gen_sort@@Base+0xdec>
   1ae50:	ldr	r2, [pc, #724]	; 1b12c <__flatcc_gen_sort@@Base+0x161c>
   1ae54:	mov	fp, r2
   1ae58:	ldr	r2, [pc, #720]	; 1b130 <__flatcc_gen_sort@@Base+0x1620>
   1ae5c:	str	r2, [sp, #56]	; 0x38
   1ae60:	ldr	r2, [pc, #716]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1ae64:	mov	sl, r2
   1ae68:	b	1a930 <__flatcc_gen_sort@@Base+0xe20>
   1ae6c:	ldr	r2, [pc, #796]	; 1b190 <__flatcc_gen_sort@@Base+0x1680>
   1ae70:	mov	fp, r2
   1ae74:	ldr	r2, [pc, #792]	; 1b194 <__flatcc_gen_sort@@Base+0x1684>
   1ae78:	str	r2, [sp, #56]	; 0x38
   1ae7c:	ldr	r2, [pc, #688]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1ae80:	mov	sl, r2
   1ae84:	b	1a930 <__flatcc_gen_sort@@Base+0xe20>
   1ae88:	ldr	r3, [pc, #768]	; 1b190 <__flatcc_gen_sort@@Base+0x1680>
   1ae8c:	mov	fp, r3
   1ae90:	ldr	r3, [pc, #764]	; 1b194 <__flatcc_gen_sort@@Base+0x1684>
   1ae94:	str	r3, [sp, #56]	; 0x38
   1ae98:	b	1a724 <__flatcc_gen_sort@@Base+0xc14>
   1ae9c:	ldr	r2, [pc, #748]	; 1b190 <__flatcc_gen_sort@@Base+0x1680>
   1aea0:	mov	fp, r2
   1aea4:	ldr	r2, [pc, #744]	; 1b194 <__flatcc_gen_sort@@Base+0x1684>
   1aea8:	str	r2, [sp, #56]	; 0x38
   1aeac:	ldr	r2, [pc, #640]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1aeb0:	mov	sl, r2
   1aeb4:	b	1a8fc <__flatcc_gen_sort@@Base+0xdec>
   1aeb8:	ldr	r2, [pc, #700]	; 1b17c <__flatcc_gen_sort@@Base+0x166c>
   1aebc:	mov	fp, r2
   1aec0:	ldr	r2, [pc, #696]	; 1b180 <__flatcc_gen_sort@@Base+0x1670>
   1aec4:	str	r2, [sp, #56]	; 0x38
   1aec8:	ldr	r2, [pc, #612]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1aecc:	mov	sl, r2
   1aed0:	b	1a8fc <__flatcc_gen_sort@@Base+0xdec>
   1aed4:	ldr	r2, [pc, #672]	; 1b17c <__flatcc_gen_sort@@Base+0x166c>
   1aed8:	mov	fp, r2
   1aedc:	ldr	r2, [pc, #668]	; 1b180 <__flatcc_gen_sort@@Base+0x1670>
   1aee0:	str	r2, [sp, #56]	; 0x38
   1aee4:	ldr	r2, [pc, #584]	; 1b134 <__flatcc_gen_sort@@Base+0x1624>
   1aee8:	mov	sl, r2
   1aeec:	b	1a930 <__flatcc_gen_sort@@Base+0xe20>
   1aef0:	ldr	r3, [pc, #644]	; 1b17c <__flatcc_gen_sort@@Base+0x166c>
   1aef4:	mov	fp, r3
   1aef8:	ldr	r3, [pc, #640]	; 1b180 <__flatcc_gen_sort@@Base+0x1670>
   1aefc:	str	r3, [sp, #56]	; 0x38
   1af00:	b	1a724 <__flatcc_gen_sort@@Base+0xc14>
   1af04:	ldr	r2, [pc, #696]	; 1b1c4 <__flatcc_gen_sort@@Base+0x16b4>
   1af08:	b	1ac98 <__flatcc_gen_sort@@Base+0x1188>
   1af0c:	ldr	r2, [pc, #676]	; 1b1b8 <__flatcc_gen_sort@@Base+0x16a8>
   1af10:	b	1ac98 <__flatcc_gen_sort@@Base+0x1188>
   1af14:	ldr	r2, [pc, #672]	; 1b1bc <__flatcc_gen_sort@@Base+0x16ac>
   1af18:	b	1ac98 <__flatcc_gen_sort@@Base+0x1188>
   1af1c:	ldr	r2, [pc, #676]	; 1b1c8 <__flatcc_gen_sort@@Base+0x16b8>
   1af20:	b	1ac98 <__flatcc_gen_sort@@Base+0x1188>
   1af24:	ldr	r2, [pc, #660]	; 1b1c0 <__flatcc_gen_sort@@Base+0x16b0>
   1af28:	b	1ac98 <__flatcc_gen_sort@@Base+0x1188>
   1af2c:	ldr	r1, [pc, #420]	; 1b0d8 <__flatcc_gen_sort@@Base+0x15c8>
   1af30:	ldr	r2, [pc, #480]	; 1b118 <__flatcc_gen_sort@@Base+0x1608>
   1af34:	mov	r3, #226	; 0xe2
   1af38:	ldr	r0, [r1]
   1af3c:	str	r2, [sp]
   1af40:	ldr	r1, [pc, #412]	; 1b0e4 <__flatcc_gen_sort@@Base+0x15d4>
   1af44:	ldr	r2, [pc, #464]	; 1b11c <__flatcc_gen_sort@@Base+0x160c>
   1af48:	bl	13f84 <fprintf@plt>
   1af4c:	ldr	r3, [pc, #632]	; 1b1cc <__flatcc_gen_sort@@Base+0x16bc>
   1af50:	mov	r2, #226	; 0xe2
   1af54:	ldr	r1, [pc, #448]	; 1b11c <__flatcc_gen_sort@@Base+0x160c>
   1af58:	ldr	r0, [pc, #400]	; 1b0f0 <__flatcc_gen_sort@@Base+0x15e0>
   1af5c:	bl	14038 <__assert_fail@plt>
   1af60:	ldr	r2, [pc, #564]	; 1b19c <__flatcc_gen_sort@@Base+0x168c>
   1af64:	add	r3, sp, #68	; 0x44
   1af68:	str	r3, [sp, #60]	; 0x3c
   1af6c:	mov	r0, r3
   1af70:	ldr	r1, [pc, #560]	; 1b1a8 <__flatcc_gen_sort@@Base+0x1698>
   1af74:	ldrb	r3, [r4, #48]	; 0x30
   1af78:	bl	13ff0 <sprintf@plt>
   1af7c:	b	1abfc <__flatcc_gen_sort@@Base+0x10ec>
   1af80:	ldr	r2, [pc, #532]	; 1b19c <__flatcc_gen_sort@@Base+0x168c>
   1af84:	ldrd	r0, [r4, #48]	; 0x30
   1af88:	add	r3, sp, #68	; 0x44
   1af8c:	str	r3, [sp, #60]	; 0x3c
   1af90:	strd	r0, [sp]
   1af94:	mov	r0, r3
   1af98:	ldr	r1, [pc, #516]	; 1b1a4 <__flatcc_gen_sort@@Base+0x1694>
   1af9c:	bl	13ff0 <sprintf@plt>
   1afa0:	b	1abfc <__flatcc_gen_sort@@Base+0x10ec>
   1afa4:	ldr	r2, [pc, #496]	; 1b19c <__flatcc_gen_sort@@Base+0x168c>
   1afa8:	ldrd	r0, [r4, #48]	; 0x30
   1afac:	add	r3, sp, #68	; 0x44
   1afb0:	str	r3, [sp, #60]	; 0x3c
   1afb4:	strd	r0, [sp]
   1afb8:	mov	r0, r3
   1afbc:	ldr	r1, [pc, #476]	; 1b1a0 <__flatcc_gen_sort@@Base+0x1690>
   1afc0:	bl	13ff0 <sprintf@plt>
   1afc4:	b	1abfc <__flatcc_gen_sort@@Base+0x10ec>
   1afc8:	ldr	r2, [pc, #496]	; 1b1c0 <__flatcc_gen_sort@@Base+0x16b0>
   1afcc:	b	1af64 <__flatcc_gen_sort@@Base+0x1454>
   1afd0:	ldr	r2, [pc, #476]	; 1b1b4 <__flatcc_gen_sort@@Base+0x16a4>
   1afd4:	b	1af64 <__flatcc_gen_sort@@Base+0x1454>
   1afd8:	ldr	r2, [pc, #488]	; 1b1c8 <__flatcc_gen_sort@@Base+0x16b8>
   1afdc:	b	1af64 <__flatcc_gen_sort@@Base+0x1454>
   1afe0:	ldr	r2, [pc, #456]	; 1b1b0 <__flatcc_gen_sort@@Base+0x16a0>
   1afe4:	b	1af64 <__flatcc_gen_sort@@Base+0x1454>
   1afe8:	ldr	r2, [pc, #468]	; 1b1c4 <__flatcc_gen_sort@@Base+0x16b4>
   1afec:	b	1af64 <__flatcc_gen_sort@@Base+0x1454>
   1aff0:	ldr	r2, [pc, #448]	; 1b1b8 <__flatcc_gen_sort@@Base+0x16a8>
   1aff4:	b	1af64 <__flatcc_gen_sort@@Base+0x1454>
   1aff8:	ldr	r2, [pc, #444]	; 1b1bc <__flatcc_gen_sort@@Base+0x16ac>
   1affc:	b	1af64 <__flatcc_gen_sort@@Base+0x1454>
   1b000:	ldr	r2, [pc, #440]	; 1b1c0 <__flatcc_gen_sort@@Base+0x16b0>
   1b004:	b	1af84 <__flatcc_gen_sort@@Base+0x1474>
   1b008:	ldr	r2, [pc, #432]	; 1b1c0 <__flatcc_gen_sort@@Base+0x16b0>
   1b00c:	b	1afa8 <__flatcc_gen_sort@@Base+0x1498>
   1b010:	ldr	r2, [pc, #412]	; 1b1b4 <__flatcc_gen_sort@@Base+0x16a4>
   1b014:	b	1afa8 <__flatcc_gen_sort@@Base+0x1498>
   1b018:	ldr	r2, [pc, #424]	; 1b1c8 <__flatcc_gen_sort@@Base+0x16b8>
   1b01c:	b	1afa8 <__flatcc_gen_sort@@Base+0x1498>
   1b020:	ldr	r2, [pc, #392]	; 1b1b0 <__flatcc_gen_sort@@Base+0x16a0>
   1b024:	b	1afa8 <__flatcc_gen_sort@@Base+0x1498>
   1b028:	ldr	r2, [pc, #404]	; 1b1c4 <__flatcc_gen_sort@@Base+0x16b4>
   1b02c:	b	1afa8 <__flatcc_gen_sort@@Base+0x1498>
   1b030:	ldr	r2, [pc, #384]	; 1b1b8 <__flatcc_gen_sort@@Base+0x16a8>
   1b034:	b	1afa8 <__flatcc_gen_sort@@Base+0x1498>
   1b038:	ldr	r2, [pc, #380]	; 1b1bc <__flatcc_gen_sort@@Base+0x16ac>
   1b03c:	b	1afa8 <__flatcc_gen_sort@@Base+0x1498>
   1b040:	ldr	r2, [pc, #360]	; 1b1b0 <__flatcc_gen_sort@@Base+0x16a0>
   1b044:	b	1af84 <__flatcc_gen_sort@@Base+0x1474>
   1b048:	ldr	r2, [pc, #372]	; 1b1c4 <__flatcc_gen_sort@@Base+0x16b4>
   1b04c:	b	1af84 <__flatcc_gen_sort@@Base+0x1474>
   1b050:	ldr	r2, [pc, #348]	; 1b1b4 <__flatcc_gen_sort@@Base+0x16a4>
   1b054:	b	1af84 <__flatcc_gen_sort@@Base+0x1474>
   1b058:	ldr	r2, [pc, #360]	; 1b1c8 <__flatcc_gen_sort@@Base+0x16b8>
   1b05c:	b	1af84 <__flatcc_gen_sort@@Base+0x1474>
   1b060:	ldr	r2, [pc, #336]	; 1b1b8 <__flatcc_gen_sort@@Base+0x16a8>
   1b064:	b	1af84 <__flatcc_gen_sort@@Base+0x1474>
   1b068:	ldr	r2, [pc, #332]	; 1b1bc <__flatcc_gen_sort@@Base+0x16ac>
   1b06c:	b	1af84 <__flatcc_gen_sort@@Base+0x1474>
   1b070:	ldr	r3, [r5, #204]	; 0xcc
   1b074:	mov	r2, #32
   1b078:	mov	r1, #1
   1b07c:	ldr	r0, [pc, #332]	; 1b1d0 <__flatcc_gen_sort@@Base+0x16c0>
   1b080:	bl	13f18 <fwrite@plt>
   1b084:	b	1a56c <__flatcc_gen_sort@@Base+0xa5c>
   1b088:	ldr	r3, [r5, #204]	; 0xcc
   1b08c:	mov	r2, #32
   1b090:	mov	r1, #1
   1b094:	ldr	r0, [pc, #308]	; 1b1d0 <__flatcc_gen_sort@@Base+0x16c0>
   1b098:	bl	13f18 <fwrite@plt>
   1b09c:	b	1a528 <__flatcc_gen_sort@@Base+0xa18>
   1b0a0:	vldr	d7, [r4, #48]	; 0x30
   1b0a4:	add	r3, sp, #68	; 0x44
   1b0a8:	str	r3, [sp, #60]	; 0x3c
   1b0ac:	mov	r0, r3
   1b0b0:	vcvt.f32.f64	s14, d7
   1b0b4:	ldr	r1, [pc, #240]	; 1b1ac <__flatcc_gen_sort@@Base+0x169c>
   1b0b8:	vcvt.f64.f32	d7, s14
   1b0bc:	vmov	r2, r3, d7
   1b0c0:	bl	13ff0 <sprintf@plt>
   1b0c4:	b	1abfc <__flatcc_gen_sort@@Base+0x10ec>
   1b0c8:	andeq	sl, r4, ip, lsr #13
   1b0cc:	andeq	sl, r4, r8, asr #6
   1b0d0:	ldrdeq	sl, [r4], -r4
   1b0d4:	andeq	sl, r4, r0, lsl #10
   1b0d8:	andeq	sp, r6, r8, lsr #1
   1b0dc:	andeq	r3, r4, r4, asr r1
   1b0e0:	andeq	r0, r0, r8, ror #11
   1b0e4:			; <UNDEFINED> instruction: 0x00041fbc
   1b0e8:	strdeq	sl, [r4], -ip
   1b0ec:	andeq	sl, r4, r4, ror #1
   1b0f0:	andeq	sl, r4, r4, asr sp
   1b0f4:	andeq	sl, r4, r8, ror #11
   1b0f8:	andeq	sl, r4, r4, lsr r5
   1b0fc:	andeq	sl, r4, ip, lsr r6
   1b100:	andeq	sl, r4, r4, ror r6
   1b104:	andeq	sl, r4, r8, ror #13
   1b108:	andeq	sl, r4, r0, ror r5
   1b10c:	muleq	r4, r0, r0
   1b110:	andeq	r0, r0, r3, ror #11
   1b114:	andeq	r3, r4, r4, asr #32
   1b118:	andeq	r1, r4, r8, asr #31
   1b11c:	andeq	r1, r4, r0, ror pc
   1b120:	muleq	r4, ip, r0
   1b124:	andeq	r1, r4, r8, ror lr
   1b128:			; <UNDEFINED> instruction: 0x0005a5bc
   1b12c:	muleq	r4, r0, lr
   1b130:	strdeq	r2, [r4], -r8
   1b134:	andeq	fp, r4, ip, lsr #24
   1b138:	muleq	r4, r4, r0
   1b13c:	andeq	sl, r4, r0, lsl #7
   1b140:	andeq	sl, r4, r8, asr #7
   1b144:	andeq	sl, r4, r4, asr r4
   1b148:	andeq	sl, r4, r0, lsl #8
   1b14c:	andeq	sl, r4, ip, lsr #9
   1b150:	muleq	r0, r6, r5
   1b154:	ldrdeq	sl, [r4], -r4
   1b158:	andeq	r1, r4, r8, lsl #29
   1b15c:	strdeq	r2, [r4], -r0
   1b160:	andeq	r1, r4, r4, ror #28
   1b164:	ldrdeq	r2, [r4], -r8
   1b168:	andeq	r1, r4, r0, ror lr
   1b16c:	andeq	r2, r4, r0, ror #5
   1b170:	andeq	r1, r4, r0, lsr #29
   1b174:	andeq	r1, r4, r0, lsl #29
   1b178:	andeq	r2, r4, r8, ror #5
   1b17c:	muleq	r4, r8, lr
   1b180:	andeq	r2, r4, r0, lsl #6
   1b184:	andeq	r1, r4, r8, lsr #29
   1b188:	andeq	r1, r4, ip, asr #28
   1b18c:	andeq	r2, r4, r8, asr #5
   1b190:	andeq	r1, r4, r8, asr lr
   1b194:	ldrdeq	r2, [r4], -r0
   1b198:	andeq	sl, r4, r0, lsr #11
   1b19c:	andeq	r1, r4, r8, ror #29
   1b1a0:	andeq	r2, r4, ip, ror r0
   1b1a4:	andeq	r2, r4, r0, ror r0
   1b1a8:	andeq	r2, r4, r8, lsl #1
   1b1ac:	muleq	r4, r0, r0
   1b1b0:	andeq	r1, r4, r8, lsl #30
   1b1b4:	andeq	r1, r4, r0, lsl #30
   1b1b8:	ldrdeq	r1, [r4], -r0
   1b1bc:	andeq	r1, r4, r4, asr #29
   1b1c0:	strdeq	r1, [r4], -r0
   1b1c4:	ldrdeq	r1, [r4], -ip
   1b1c8:	strdeq	r1, [r4], -r8
   1b1cc:	andeq	sl, r4, r8, asr #1
   1b1d0:	andeq	sl, r4, r8, lsl r6
   1b1d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b1d8:	sub	sp, sp, #484	; 0x1e4
   1b1dc:	mov	r8, r0
   1b1e0:	add	r9, sp, #260	; 0x104
   1b1e4:	mov	r0, r9
   1b1e8:	mov	r2, #220	; 0xdc
   1b1ec:	mov	r1, #0
   1b1f0:	bl	13f9c <memset@plt>
   1b1f4:	ldr	r3, [r8, #208]	; 0xd0
   1b1f8:	ldr	fp, [r3, #40]	; 0x28
   1b1fc:	cmp	fp, #0
   1b200:	beq	1b428 <__flatcc_gen_sort@@Base+0x1918>
   1b204:	ldr	r6, [pc, #3532]	; 1bfd8 <__flatcc_gen_sort@@Base+0x24c8>
   1b208:	mov	r2, #0
   1b20c:	mov	r5, #1
   1b210:	b	1b220 <__flatcc_gen_sort@@Base+0x1710>
   1b214:	ldr	fp, [fp]
   1b218:	cmp	fp, #0
   1b21c:	beq	1b264 <__flatcc_gen_sort@@Base+0x1754>
   1b220:	ldrh	r3, [fp, #8]
   1b224:	cmp	r3, #4
   1b228:	bne	1b214 <__flatcc_gen_sort@@Base+0x1704>
   1b22c:	mov	r1, fp
   1b230:	ldr	r0, [fp, #12]
   1b234:	mov	r2, r9
   1b238:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1b23c:	ldr	r0, [r8, #204]	; 0xcc
   1b240:	mov	r2, r8
   1b244:	stm	sp, {r8, r9}
   1b248:	mov	r3, r9
   1b24c:	mov	r1, r6
   1b250:	bl	13f84 <fprintf@plt>
   1b254:	ldr	fp, [fp]
   1b258:	mov	r2, r5
   1b25c:	cmp	fp, #0
   1b260:	bne	1b220 <__flatcc_gen_sort@@Base+0x1710>
   1b264:	cmp	r2, #0
   1b268:	beq	1b278 <__flatcc_gen_sort@@Base+0x1768>
   1b26c:	ldr	r1, [r8, #204]	; 0xcc
   1b270:	mov	r0, #10
   1b274:	bl	13fe4 <fputc@plt>
   1b278:	ldr	r3, [r8, #208]	; 0xd0
   1b27c:	ldr	r7, [r3, #40]	; 0x28
   1b280:	cmp	r7, #0
   1b284:	beq	1bfd0 <__flatcc_gen_sort@@Base+0x24c0>
   1b288:	ldr	sl, [pc, #3404]	; 1bfdc <__flatcc_gen_sort@@Base+0x24cc>
   1b28c:	mov	fp, #0
   1b290:	b	1b2a0 <__flatcc_gen_sort@@Base+0x1790>
   1b294:	ldr	r7, [r7]
   1b298:	cmp	r7, #0
   1b29c:	beq	1b3f4 <__flatcc_gen_sort@@Base+0x18e4>
   1b2a0:	ldrh	r6, [r7, #8]
   1b2a4:	cmp	r6, #0
   1b2a8:	bne	1b294 <__flatcc_gen_sort@@Base+0x1784>
   1b2ac:	mov	r2, #220	; 0xdc
   1b2b0:	mov	r1, r6
   1b2b4:	mov	r0, r9
   1b2b8:	bl	13f9c <memset@plt>
   1b2bc:	ldr	r4, [r7, #20]
   1b2c0:	cmp	r4, #0
   1b2c4:	beq	1b5d0 <__flatcc_gen_sort@@Base+0x1ac0>
   1b2c8:	ldrh	r3, [r4, #72]	; 0x48
   1b2cc:	ldr	r4, [r4]
   1b2d0:	tst	r3, #4
   1b2d4:	moveq	r3, #1
   1b2d8:	movne	r3, #0
   1b2dc:	cmp	r4, #0
   1b2e0:	add	r6, r6, r3
   1b2e4:	bne	1b2c8 <__flatcc_gen_sort@@Base+0x17b8>
   1b2e8:	mov	r2, r9
   1b2ec:	mov	r1, r7
   1b2f0:	ldr	r0, [r7, #12]
   1b2f4:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1b2f8:	mov	r3, r9
   1b2fc:	mov	r2, r8
   1b300:	ldr	r1, [pc, #3288]	; 1bfe0 <__flatcc_gen_sort@@Base+0x24d0>
   1b304:	ldr	r0, [r8, #204]	; 0xcc
   1b308:	bl	13f84 <fprintf@plt>
   1b30c:	ldr	r5, [r7, #20]
   1b310:	cmp	r5, #0
   1b314:	beq	1b600 <__flatcc_gen_sort@@Base+0x1af0>
   1b318:	cmp	r6, #0
   1b31c:	beq	1b618 <__flatcc_gen_sort@@Base+0x1b08>
   1b320:	ldr	fp, [pc, #3260]	; 1bfe4 <__flatcc_gen_sort@@Base+0x24d4>
   1b324:	ldrh	r3, [r5, #72]	; 0x48
   1b328:	tst	r3, #4
   1b32c:	bne	1b37c <__flatcc_gen_sort@@Base+0x186c>
   1b330:	tst	r3, #256	; 0x100
   1b334:	beq	1b37c <__flatcc_gen_sort@@Base+0x186c>
   1b338:	cmp	r4, #0
   1b33c:	beq	1b5c0 <__flatcc_gen_sort@@Base+0x1ab0>
   1b340:	tst	r4, #3
   1b344:	bne	1b354 <__flatcc_gen_sort@@Base+0x1844>
   1b348:	sub	r3, r6, r4
   1b34c:	cmp	r3, #2
   1b350:	bgt	1b974 <__flatcc_gen_sort@@Base+0x1e64>
   1b354:	ldr	r3, [r8, #204]	; 0xcc
   1b358:	mov	r2, #2
   1b35c:	mov	r1, #1
   1b360:	mov	r0, fp
   1b364:	bl	13f18 <fwrite@plt>
   1b368:	ldr	r2, [r5, #96]	; 0x60
   1b36c:	mov	r1, sl
   1b370:	ldr	r0, [r8, #204]	; 0xcc
   1b374:	add	r4, r4, #1
   1b378:	bl	13f84 <fprintf@plt>
   1b37c:	ldr	r5, [r5]
   1b380:	cmp	r5, #0
   1b384:	bne	1b324 <__flatcc_gen_sort@@Base+0x1814>
   1b388:	cmp	r4, #0
   1b38c:	beq	1b600 <__flatcc_gen_sort@@Base+0x1af0>
   1b390:	ldr	r3, [r8, #204]	; 0xcc
   1b394:	mov	r2, #7
   1b398:	mov	r1, #1
   1b39c:	ldr	r0, [pc, #3140]	; 1bfe8 <__flatcc_gen_sort@@Base+0x24d8>
   1b3a0:	bl	13f18 <fwrite@plt>
   1b3a4:	mov	r2, #220	; 0xdc
   1b3a8:	mov	r1, #0
   1b3ac:	mov	r0, r9
   1b3b0:	bl	13f9c <memset@plt>
   1b3b4:	mov	r1, r7
   1b3b8:	ldr	r0, [r7, #12]
   1b3bc:	mov	r2, r9
   1b3c0:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1b3c4:	ldrd	r2, [r7, #96]	; 0x60
   1b3c8:	ldr	r0, [r8, #204]	; 0xcc
   1b3cc:	ldr	r1, [pc, #3096]	; 1bfec <__flatcc_gen_sort@@Base+0x24dc>
   1b3d0:	strd	r2, [sp, #8]
   1b3d4:	str	r9, [sp]
   1b3d8:	mov	r3, r8
   1b3dc:	mov	r2, r8
   1b3e0:	bl	13f84 <fprintf@plt>
   1b3e4:	ldr	r7, [r7]
   1b3e8:	mov	fp, #1
   1b3ec:	cmp	r7, #0
   1b3f0:	bne	1b2a0 <__flatcc_gen_sort@@Base+0x1790>
   1b3f4:	ldr	r3, [r8, #208]	; 0xd0
   1b3f8:	ldr	r7, [r3, #40]	; 0x28
   1b3fc:	cmp	r7, #0
   1b400:	beq	1bbcc <__flatcc_gen_sort@@Base+0x20bc>
   1b404:	ldrh	r5, [r7, #8]
   1b408:	cmp	r5, #0
   1b40c:	beq	1b660 <__flatcc_gen_sort@@Base+0x1b50>
   1b410:	ldr	r7, [r7]
   1b414:	cmp	r7, #0
   1b418:	bne	1b404 <__flatcc_gen_sort@@Base+0x18f4>
   1b41c:	cmp	fp, #0
   1b420:	bne	1bbd4 <__flatcc_gen_sort@@Base+0x20c4>
   1b424:	ldr	r3, [r8, #208]	; 0xd0
   1b428:	ldr	r4, [r3, #40]	; 0x28
   1b42c:	cmp	r4, #0
   1b430:	beq	1b470 <__flatcc_gen_sort@@Base+0x1960>
   1b434:	ldr	sl, [pc, #2996]	; 1bff0 <__flatcc_gen_sort@@Base+0x24e0>
   1b438:	mov	r2, #0
   1b43c:	add	r6, sp, #40	; 0x28
   1b440:	mov	r7, #220	; 0xdc
   1b444:	ldrh	r3, [r4, #8]
   1b448:	cmp	r3, #4
   1b44c:	beq	1b9bc <__flatcc_gen_sort@@Base+0x1eac>
   1b450:	ldr	r4, [r4]
   1b454:	cmp	r4, #0
   1b458:	bne	1b444 <__flatcc_gen_sort@@Base+0x1934>
   1b45c:	cmp	r2, #0
   1b460:	beq	1b470 <__flatcc_gen_sort@@Base+0x1960>
   1b464:	ldr	r1, [r8, #204]	; 0xcc
   1b468:	mov	r0, #10
   1b46c:	bl	13fe4 <fputc@plt>
   1b470:	cmp	fp, #0
   1b474:	beq	1bd18 <__flatcc_gen_sort@@Base+0x2208>
   1b478:	ldr	r3, [r8, #208]	; 0xd0
   1b47c:	ldr	r5, [r3, #40]	; 0x28
   1b480:	cmp	r5, #0
   1b484:	beq	1bd18 <__flatcc_gen_sort@@Base+0x2208>
   1b488:	ldr	r6, [pc, #2916]	; 1bff4 <__flatcc_gen_sort@@Base+0x24e4>
   1b48c:	b	1b49c <__flatcc_gen_sort@@Base+0x198c>
   1b490:	ldr	r5, [r5]
   1b494:	cmp	r5, #0
   1b498:	beq	1bd18 <__flatcc_gen_sort@@Base+0x2208>
   1b49c:	ldrh	r4, [r5, #8]
   1b4a0:	cmp	r4, #0
   1b4a4:	bne	1b490 <__flatcc_gen_sort@@Base+0x1980>
   1b4a8:	mov	r1, r5
   1b4ac:	mov	r0, r8
   1b4b0:	bl	1a1b8 <__flatcc_gen_sort@@Base+0x6a8>
   1b4b4:	mov	r1, r4
   1b4b8:	mov	r2, #220	; 0xdc
   1b4bc:	mov	r0, r9
   1b4c0:	ldrh	r7, [r5, #92]	; 0x5c
   1b4c4:	bl	13f9c <memset@plt>
   1b4c8:	mov	r2, r9
   1b4cc:	mov	r1, r5
   1b4d0:	ldr	r0, [r5, #12]
   1b4d4:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1b4d8:	ldr	r0, [r8, #204]	; 0xcc
   1b4dc:	mov	r3, r9
   1b4e0:	mov	r2, r9
   1b4e4:	ldr	r1, [pc, #2828]	; 1bff8 <__flatcc_gen_sort@@Base+0x24e8>
   1b4e8:	stm	sp, {r8, r9}
   1b4ec:	bl	13f84 <fprintf@plt>
   1b4f0:	mov	r2, r9
   1b4f4:	ldr	r1, [pc, #2816]	; 1bffc <__flatcc_gen_sort@@Base+0x24ec>
   1b4f8:	ldr	r0, [r8, #204]	; 0xcc
   1b4fc:	bl	13f84 <fprintf@plt>
   1b500:	ldr	r4, [r5, #24]
   1b504:	and	r7, r7, #8
   1b508:	cmp	r4, #0
   1b50c:	beq	1b560 <__flatcc_gen_sort@@Base+0x1a50>
   1b510:	cmp	r7, #0
   1b514:	beq	1be9c <__flatcc_gen_sort@@Base+0x238c>
   1b518:	mov	r7, fp
   1b51c:	ldrh	r3, [r4, #72]	; 0x48
   1b520:	tst	r3, #4
   1b524:	bne	1b550 <__flatcc_gen_sort@@Base+0x1a40>
   1b528:	ldr	r1, [r4, #4]
   1b52c:	ldrd	sl, [r4, #96]	; 0x60
   1b530:	ldr	r0, [r8, #204]	; 0xcc
   1b534:	ldr	r3, [r1, #4]
   1b538:	strd	sl, [sp, #8]
   1b53c:	ldr	r2, [r1]
   1b540:	mov	r1, r6
   1b544:	str	r2, [sp]
   1b548:	mov	r2, r9
   1b54c:	bl	13f84 <fprintf@plt>
   1b550:	ldr	r4, [r4, #108]	; 0x6c
   1b554:	cmp	r4, #0
   1b558:	bne	1b51c <__flatcc_gen_sort@@Base+0x1a0c>
   1b55c:	mov	fp, r7
   1b560:	mov	r2, r9
   1b564:	ldr	r1, [pc, #2708]	; 1c000 <__flatcc_gen_sort@@Base+0x24f0>
   1b568:	ldr	r0, [r8, #204]	; 0xcc
   1b56c:	bl	13f84 <fprintf@plt>
   1b570:	mov	r2, #220	; 0xdc
   1b574:	mov	r1, #0
   1b578:	mov	r0, r9
   1b57c:	bl	13f9c <memset@plt>
   1b580:	mov	r2, r9
   1b584:	mov	r1, r5
   1b588:	ldr	r0, [r5, #12]
   1b58c:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1b590:	ldr	r0, [r8, #204]	; 0xcc
   1b594:	mov	r3, r8
   1b598:	str	r9, [sp, #8]
   1b59c:	str	r9, [sp, #4]
   1b5a0:	str	r9, [sp]
   1b5a4:	mov	r2, r8
   1b5a8:	ldr	r1, [pc, #2644]	; 1c004 <__flatcc_gen_sort@@Base+0x24f4>
   1b5ac:	bl	13f84 <fprintf@plt>
   1b5b0:	ldr	r1, [r8, #204]	; 0xcc
   1b5b4:	mov	r0, #10
   1b5b8:	bl	13fe4 <fputc@plt>
   1b5bc:	b	1b490 <__flatcc_gen_sort@@Base+0x1980>
   1b5c0:	ldr	r1, [r8, #204]	; 0xcc
   1b5c4:	mov	r0, #32
   1b5c8:	bl	13fe4 <fputc@plt>
   1b5cc:	b	1b368 <__flatcc_gen_sort@@Base+0x1858>
   1b5d0:	mov	r2, r9
   1b5d4:	mov	r1, r7
   1b5d8:	ldr	r0, [r7, #12]
   1b5dc:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1b5e0:	mov	r3, r9
   1b5e4:	mov	r2, r8
   1b5e8:	ldr	r1, [pc, #2544]	; 1bfe0 <__flatcc_gen_sort@@Base+0x24d0>
   1b5ec:	ldr	r0, [r8, #204]	; 0xcc
   1b5f0:	bl	13f84 <fprintf@plt>
   1b5f4:	ldr	r5, [r7, #20]
   1b5f8:	cmp	r5, #0
   1b5fc:	bne	1b618 <__flatcc_gen_sort@@Base+0x1b08>
   1b600:	ldr	r3, [r8, #204]	; 0xcc
   1b604:	mov	r2, #6
   1b608:	mov	r1, #1
   1b60c:	ldr	r0, [pc, #2548]	; 1c008 <__flatcc_gen_sort@@Base+0x24f8>
   1b610:	bl	13f18 <fwrite@plt>
   1b614:	b	1b3a4 <__flatcc_gen_sort@@Base+0x1894>
   1b618:	mov	r4, #0
   1b61c:	mov	r6, #32
   1b620:	ldrh	r3, [r5, #72]	; 0x48
   1b624:	tst	r3, #4
   1b628:	bne	1b650 <__flatcc_gen_sort@@Base+0x1b40>
   1b62c:	tst	r3, #256	; 0x100
   1b630:	beq	1b650 <__flatcc_gen_sort@@Base+0x1b40>
   1b634:	cmp	r4, #0
   1b638:	beq	1b78c <__flatcc_gen_sort@@Base+0x1c7c>
   1b63c:	ldr	r2, [r5, #96]	; 0x60
   1b640:	mov	r1, sl
   1b644:	ldr	r0, [r8, #204]	; 0xcc
   1b648:	bl	13f84 <fprintf@plt>
   1b64c:	add	r4, r4, #1
   1b650:	ldr	r5, [r5]
   1b654:	cmp	r5, #0
   1b658:	bne	1b620 <__flatcc_gen_sort@@Base+0x1b10>
   1b65c:	b	1b388 <__flatcc_gen_sort@@Base+0x1878>
   1b660:	mov	r2, #220	; 0xdc
   1b664:	mov	r1, r5
   1b668:	add	r0, sp, #40	; 0x28
   1b66c:	bl	13f9c <memset@plt>
   1b670:	add	r2, sp, #40	; 0x28
   1b674:	mov	r1, r7
   1b678:	ldr	r0, [r7, #12]
   1b67c:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1b680:	ldr	r3, [r7, #20]
   1b684:	cmp	r3, #0
   1b688:	beq	1bd48 <__flatcc_gen_sort@@Base+0x2238>
   1b68c:	ldrh	r2, [r3, #72]	; 0x48
   1b690:	ldr	r3, [r3]
   1b694:	tst	r2, #4
   1b698:	moveq	r2, #1
   1b69c:	movne	r2, #0
   1b6a0:	cmp	r3, #0
   1b6a4:	add	r5, r5, r2
   1b6a8:	bne	1b68c <__flatcc_gen_sort@@Base+0x1b7c>
   1b6ac:	add	r2, sp, #40	; 0x28
   1b6b0:	ldr	r1, [pc, #2388]	; 1c00c <__flatcc_gen_sort@@Base+0x24fc>
   1b6b4:	ldr	r0, [r8, #204]	; 0xcc
   1b6b8:	bl	13f84 <fprintf@plt>
   1b6bc:	mov	r2, #220	; 0xdc
   1b6c0:	mov	r1, #0
   1b6c4:	mov	r0, r9
   1b6c8:	bl	13f9c <memset@plt>
   1b6cc:	ldr	r4, [r7, #20]
   1b6d0:	cmp	r4, #0
   1b6d4:	movne	r2, #0
   1b6d8:	strne	fp, [sp, #36]	; 0x24
   1b6dc:	bne	1b6f0 <__flatcc_gen_sort@@Base+0x1be0>
   1b6e0:	b	1b838 <__flatcc_gen_sort@@Base+0x1d28>
   1b6e4:	ldr	r4, [r4]
   1b6e8:	cmp	r4, #0
   1b6ec:	beq	1b834 <__flatcc_gen_sort@@Base+0x1d24>
   1b6f0:	ldrh	r3, [r4, #72]	; 0x48
   1b6f4:	tst	r3, #4
   1b6f8:	bne	1b6e4 <__flatcc_gen_sort@@Base+0x1bd4>
   1b6fc:	cmp	r5, #0
   1b700:	add	r6, r2, #1
   1b704:	beq	1b72c <__flatcc_gen_sort@@Base+0x1c1c>
   1b708:	cmp	r2, #0
   1b70c:	bne	1b764 <__flatcc_gen_sort@@Base+0x1c54>
   1b710:	cmp	r5, #4
   1b714:	bgt	1b778 <__flatcc_gen_sort@@Base+0x1c68>
   1b718:	ldr	r3, [r8, #204]	; 0xcc
   1b71c:	mov	r2, #2
   1b720:	mov	r1, #1
   1b724:	ldr	r0, [pc, #2232]	; 1bfe4 <__flatcc_gen_sort@@Base+0x24d4>
   1b728:	bl	13f18 <fwrite@plt>
   1b72c:	ldrh	r3, [r4, #24]
   1b730:	sub	r3, r3, #7
   1b734:	cmp	r3, #8
   1b738:	ldrls	pc, [pc, r3, lsl #2]
   1b73c:	b	1b988 <__flatcc_gen_sort@@Base+0x1e78>
   1b740:	andeq	fp, r1, r4, lsr r9
   1b744:	andeq	fp, r1, ip, ror #17
   1b748:	andeq	fp, r1, ip, asr #17
   1b74c:	andeq	fp, r1, ip, lsl #16
   1b750:	andeq	fp, r1, r8, lsl #19
   1b754:	andeq	fp, r1, r8, lsl #19
   1b758:	andeq	fp, r1, r8, lsl #19
   1b75c:	ldrdeq	fp, [r1], -r4
   1b760:	muleq	r1, ip, r7
   1b764:	tst	r2, #3
   1b768:	bne	1b718 <__flatcc_gen_sort@@Base+0x1c08>
   1b76c:	sub	r2, r5, r2
   1b770:	cmp	r2, #2
   1b774:	ble	1b718 <__flatcc_gen_sort@@Base+0x1c08>
   1b778:	ldr	r2, [pc, #2192]	; 1c010 <__flatcc_gen_sort@@Base+0x2500>
   1b77c:	ldr	r1, [pc, #2192]	; 1c014 <__flatcc_gen_sort@@Base+0x2504>
   1b780:	ldr	r0, [r8, #204]	; 0xcc
   1b784:	bl	13f84 <fprintf@plt>
   1b788:	b	1b72c <__flatcc_gen_sort@@Base+0x1c1c>
   1b78c:	ldr	r1, [r8, #204]	; 0xcc
   1b790:	mov	r0, r6
   1b794:	bl	13fe4 <fputc@plt>
   1b798:	b	1b63c <__flatcc_gen_sort@@Base+0x1b2c>
   1b79c:	ldr	r1, [r4, #16]
   1b7a0:	mov	r2, r9
   1b7a4:	ldr	r0, [r1, #12]
   1b7a8:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1b7ac:	ldr	r3, [r4, #16]
   1b7b0:	ldrh	r3, [r3, #8]
   1b7b4:	cmp	r3, #4
   1b7b8:	ldrls	pc, [pc, r3, lsl #2]
   1b7bc:	b	1bc68 <__flatcc_gen_sort@@Base+0x2158>
   1b7c0:	andeq	fp, r1, r4, ror #22
   1b7c4:	andeq	fp, r1, r4, ror #22
   1b7c8:	andeq	fp, r1, r8, ror #24
   1b7cc:	andeq	fp, r1, r4, ror #22
   1b7d0:	andeq	fp, r1, r4, asr #22
   1b7d4:	ldr	r1, [r4, #16]
   1b7d8:	mov	r2, r9
   1b7dc:	ldr	r0, [r1, #12]
   1b7e0:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1b7e4:	ldr	r3, [r4, #16]
   1b7e8:	ldrh	r3, [r3, #8]
   1b7ec:	cmp	r3, #4
   1b7f0:	ldrls	pc, [pc, r3, lsl #2]
   1b7f4:	b	1bcd0 <__flatcc_gen_sort@@Base+0x21c0>
   1b7f8:	andeq	fp, r1, r8, asr #24
   1b7fc:	andeq	fp, r1, r8, lsr #24
   1b800:	ldrdeq	fp, [r1], -r0
   1b804:	andeq	fp, r1, r8, lsl #24
   1b808:	andeq	fp, r1, r8, ror #23
   1b80c:	ldrd	sl, [r4, #96]	; 0x60
   1b810:	ldr	r0, [r8, #204]	; 0xcc
   1b814:	mov	r2, r8
   1b818:	strd	sl, [sp]
   1b81c:	ldr	r1, [pc, #2036]	; 1c018 <__flatcc_gen_sort@@Base+0x2508>
   1b820:	bl	13f84 <fprintf@plt>
   1b824:	ldr	r4, [r4]
   1b828:	mov	r2, r6
   1b82c:	cmp	r4, #0
   1b830:	bne	1b6f0 <__flatcc_gen_sort@@Base+0x1be0>
   1b834:	ldr	fp, [sp, #36]	; 0x24
   1b838:	add	r2, sp, #40	; 0x28
   1b83c:	ldr	r1, [pc, #2008]	; 1c01c <__flatcc_gen_sort@@Base+0x250c>
   1b840:	ldr	r0, [r8, #204]	; 0xcc
   1b844:	bl	13f84 <fprintf@plt>
   1b848:	ldr	r4, [r7, #20]
   1b84c:	cmp	r4, #0
   1b850:	beq	1ba48 <__flatcc_gen_sort@@Base+0x1f38>
   1b854:	cmp	r5, #0
   1b858:	beq	1bc9c <__flatcc_gen_sort@@Base+0x218c>
   1b85c:	cmp	r5, #4
   1b860:	mov	r6, #0
   1b864:	bgt	1bbbc <__flatcc_gen_sort@@Base+0x20ac>
   1b868:	b	1b878 <__flatcc_gen_sort@@Base+0x1d68>
   1b86c:	ldr	r4, [r4]
   1b870:	cmp	r4, #0
   1b874:	beq	1ba48 <__flatcc_gen_sort@@Base+0x1f38>
   1b878:	ldrh	r3, [r4, #72]	; 0x48
   1b87c:	tst	r3, #4
   1b880:	bne	1b86c <__flatcc_gen_sort@@Base+0x1d5c>
   1b884:	cmp	r6, #0
   1b888:	beq	1b8a0 <__flatcc_gen_sort@@Base+0x1d90>
   1b88c:	tst	r6, #3
   1b890:	bne	1b8a0 <__flatcc_gen_sort@@Base+0x1d90>
   1b894:	sub	r3, r5, r6
   1b898:	cmp	r3, #3
   1b89c:	beq	1bd04 <__flatcc_gen_sort@@Base+0x21f4>
   1b8a0:	ldr	r3, [r8, #204]	; 0xcc
   1b8a4:	mov	r2, #2
   1b8a8:	mov	r1, #1
   1b8ac:	ldr	r0, [pc, #1840]	; 1bfe4 <__flatcc_gen_sort@@Base+0x24d4>
   1b8b0:	bl	13f18 <fwrite@plt>
   1b8b4:	ldrd	r2, [r4, #96]	; 0x60
   1b8b8:	ldr	r1, [pc, #1888]	; 1c020 <__flatcc_gen_sort@@Base+0x2510>
   1b8bc:	ldr	r0, [r8, #204]	; 0xcc
   1b8c0:	bl	13f84 <fprintf@plt>
   1b8c4:	add	r6, r6, #1
   1b8c8:	b	1b86c <__flatcc_gen_sort@@Base+0x1d5c>
   1b8cc:	ldrd	sl, [r4, #96]	; 0x60
   1b8d0:	ldr	r0, [r8, #204]	; 0xcc
   1b8d4:	mov	r2, r8
   1b8d8:	strd	sl, [sp]
   1b8dc:	ldr	r1, [pc, #1856]	; 1c024 <__flatcc_gen_sort@@Base+0x2514>
   1b8e0:	bl	13f84 <fprintf@plt>
   1b8e4:	mov	r2, r6
   1b8e8:	b	1b6e4 <__flatcc_gen_sort@@Base+0x1bd4>
   1b8ec:	ldr	r3, [r4, #16]
   1b8f0:	cmp	r3, #5
   1b8f4:	beq	1bd24 <__flatcc_gen_sort@@Base+0x2214>
   1b8f8:	sub	r3, r3, #1
   1b8fc:	cmp	r3, #10
   1b900:	ldrls	pc, [pc, r3, lsl #2]
   1b904:	b	1be68 <__flatcc_gen_sort@@Base+0x2358>
   1b908:	andeq	fp, r1, r4, asr #28
   1b90c:	andeq	fp, r1, r0, asr lr
   1b910:	andeq	fp, r1, ip, asr lr
   1b914:	andeq	fp, r1, r4, lsl lr
   1b918:	andeq	fp, r1, r8, ror #28
   1b91c:	andeq	fp, r1, ip, lsr #28
   1b920:	andeq	fp, r1, r8, lsr lr
   1b924:	strdeq	fp, [r1], -r0
   1b928:	strdeq	fp, [r1], -ip
   1b92c:	andeq	fp, r1, r8, lsl #28
   1b930:	andeq	fp, r1, r0, lsr #28
   1b934:	ldr	r3, [r4, #16]
   1b938:	sub	r3, r3, #1
   1b93c:	cmp	r3, #10
   1b940:	ldrls	pc, [pc, r3, lsl #2]
   1b944:	b	1bf78 <__flatcc_gen_sort@@Base+0x2468>
   1b948:	andeq	fp, r1, r0, lsr #27
   1b94c:	andeq	fp, r1, ip, ror sp
   1b950:	andeq	fp, r1, r8, asr #27
   1b954:	ldrdeq	fp, [r1], -r0
   1b958:	andeq	fp, r1, r8, lsr #27
   1b95c:			; <UNDEFINED> instruction: 0x0001bdb0
   1b960:	andeq	fp, r1, r0, ror #27
   1b964:	andeq	fp, r1, r8, ror #27
   1b968:			; <UNDEFINED> instruction: 0x0001bdb8
   1b96c:	andeq	fp, r1, r0, asr #27
   1b970:	ldrdeq	fp, [r1], -r8
   1b974:	ldr	r2, [pc, #1708]	; 1c028 <__flatcc_gen_sort@@Base+0x2518>
   1b978:	ldr	r1, [pc, #1684]	; 1c014 <__flatcc_gen_sort@@Base+0x2504>
   1b97c:	ldr	r0, [r8, #204]	; 0xcc
   1b980:	bl	13f84 <fprintf@plt>
   1b984:	b	1b368 <__flatcc_gen_sort@@Base+0x1858>
   1b988:	ldr	r1, [pc, #1692]	; 1c02c <__flatcc_gen_sort@@Base+0x251c>
   1b98c:	ldr	r2, [pc, #1692]	; 1c030 <__flatcc_gen_sort@@Base+0x2520>
   1b990:	ldr	r3, [pc, #1692]	; 1c034 <__flatcc_gen_sort@@Base+0x2524>
   1b994:	ldr	r0, [r1]
   1b998:	str	r2, [sp]
   1b99c:	ldr	r1, [pc, #1684]	; 1c038 <__flatcc_gen_sort@@Base+0x2528>
   1b9a0:	ldr	r2, [pc, #1684]	; 1c03c <__flatcc_gen_sort@@Base+0x252c>
   1b9a4:	bl	13f84 <fprintf@plt>
   1b9a8:	ldr	r3, [pc, #1680]	; 1c040 <__flatcc_gen_sort@@Base+0x2530>
   1b9ac:	ldr	r2, [pc, #1664]	; 1c034 <__flatcc_gen_sort@@Base+0x2524>
   1b9b0:	ldr	r1, [pc, #1668]	; 1c03c <__flatcc_gen_sort@@Base+0x252c>
   1b9b4:	ldr	r0, [pc, #1672]	; 1c044 <__flatcc_gen_sort@@Base+0x2534>
   1b9b8:	bl	14038 <__assert_fail@plt>
   1b9bc:	mov	r2, r7
   1b9c0:	mov	r1, #0
   1b9c4:	mov	r0, r6
   1b9c8:	bl	13f9c <memset@plt>
   1b9cc:	mov	r2, r7
   1b9d0:	mov	r1, #0
   1b9d4:	mov	r0, r9
   1b9d8:	bl	13f9c <memset@plt>
   1b9dc:	mov	r2, r6
   1b9e0:	mov	r1, r4
   1b9e4:	ldr	r0, [r4, #12]
   1b9e8:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1b9ec:	ldr	r5, [r4, #20]
   1b9f0:	cmp	r5, #0
   1b9f4:	beq	1ba9c <__flatcc_gen_sort@@Base+0x1f8c>
   1b9f8:	ldrh	r3, [r5, #24]
   1b9fc:	cmp	r3, #10
   1ba00:	beq	1bb08 <__flatcc_gen_sort@@Base+0x1ff8>
   1ba04:	cmp	r3, #14
   1ba08:	beq	1babc <__flatcc_gen_sort@@Base+0x1fac>
   1ba0c:	cmp	r3, #0
   1ba10:	beq	1ba74 <__flatcc_gen_sort@@Base+0x1f64>
   1ba14:	ldr	r1, [pc, #1552]	; 1c02c <__flatcc_gen_sort@@Base+0x251c>
   1ba18:	ldr	r2, [pc, #1576]	; 1c048 <__flatcc_gen_sort@@Base+0x2538>
   1ba1c:	ldr	r3, [pc, #1576]	; 1c04c <__flatcc_gen_sort@@Base+0x253c>
   1ba20:	ldr	r0, [r1]
   1ba24:	str	r2, [sp]
   1ba28:	ldr	r1, [pc, #1544]	; 1c038 <__flatcc_gen_sort@@Base+0x2528>
   1ba2c:	ldr	r2, [pc, #1544]	; 1c03c <__flatcc_gen_sort@@Base+0x252c>
   1ba30:	bl	13f84 <fprintf@plt>
   1ba34:	ldr	r3, [pc, #1556]	; 1c050 <__flatcc_gen_sort@@Base+0x2540>
   1ba38:	ldr	r2, [pc, #1548]	; 1c04c <__flatcc_gen_sort@@Base+0x253c>
   1ba3c:	ldr	r1, [pc, #1528]	; 1c03c <__flatcc_gen_sort@@Base+0x252c>
   1ba40:	ldr	r0, [pc, #1532]	; 1c044 <__flatcc_gen_sort@@Base+0x2534>
   1ba44:	bl	14038 <__assert_fail@plt>
   1ba48:	ldr	r1, [r8, #204]	; 0xcc
   1ba4c:	mov	r0, #10
   1ba50:	bl	13fe4 <fputc@plt>
   1ba54:	add	r3, sp, #40	; 0x28
   1ba58:	ldr	r0, [r8, #204]	; 0xcc
   1ba5c:	mov	r2, r3
   1ba60:	str	r3, [sp, #4]
   1ba64:	str	r8, [sp]
   1ba68:	ldr	r1, [pc, #1508]	; 1c054 <__flatcc_gen_sort@@Base+0x2544>
   1ba6c:	bl	13f84 <fprintf@plt>
   1ba70:	b	1b410 <__flatcc_gen_sort@@Base+0x1900>
   1ba74:	ldr	r0, [r8, #204]	; 0xcc
   1ba78:	mov	r3, r6
   1ba7c:	str	r6, [sp, #4]
   1ba80:	str	r6, [sp]
   1ba84:	mov	r2, r6
   1ba88:	mov	r1, sl
   1ba8c:	bl	13f84 <fprintf@plt>
   1ba90:	ldr	r5, [r5]
   1ba94:	cmp	r5, #0
   1ba98:	bne	1b9f8 <__flatcc_gen_sort@@Base+0x1ee8>
   1ba9c:	ldr	r0, [r8, #204]	; 0xcc
   1baa0:	mov	r2, r8
   1baa4:	str	r6, [sp]
   1baa8:	mov	r3, r8
   1baac:	ldr	r1, [pc, #1444]	; 1c058 <__flatcc_gen_sort@@Base+0x2548>
   1bab0:	bl	13f84 <fprintf@plt>
   1bab4:	mov	r2, #1
   1bab8:	b	1b450 <__flatcc_gen_sort@@Base+0x1940>
   1babc:	ldr	r1, [r5, #16]
   1bac0:	mov	r2, r9
   1bac4:	ldr	r0, [r1, #12]
   1bac8:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1bacc:	ldr	r2, [r5, #4]
   1bad0:	ldr	r0, [r8, #204]	; 0xcc
   1bad4:	mov	r3, r6
   1bad8:	ldm	r2, {r1, r2}
   1badc:	str	r6, [sp, #16]
   1bae0:	str	r6, [sp, #12]
   1bae4:	str	r1, [sp, #24]
   1bae8:	str	r2, [sp, #20]
   1baec:	str	r1, [sp, #4]
   1baf0:	str	r2, [sp]
   1baf4:	str	r9, [sp, #8]
   1baf8:	mov	r2, r6
   1bafc:	ldr	r1, [pc, #1368]	; 1c05c <__flatcc_gen_sort@@Base+0x254c>
   1bb00:	bl	13f84 <fprintf@plt>
   1bb04:	b	1ba90 <__flatcc_gen_sort@@Base+0x1f80>
   1bb08:	ldr	r2, [r5, #4]
   1bb0c:	ldr	r0, [r8, #204]	; 0xcc
   1bb10:	mov	r3, r6
   1bb14:	ldm	r2, {r1, r2}
   1bb18:	str	r6, [sp, #16]
   1bb1c:	str	r6, [sp, #12]
   1bb20:	str	r1, [sp, #24]
   1bb24:	str	r2, [sp, #20]
   1bb28:	str	r1, [sp, #4]
   1bb2c:	str	r2, [sp]
   1bb30:	str	r8, [sp, #8]
   1bb34:	mov	r2, r6
   1bb38:	ldr	r1, [pc, #1312]	; 1c060 <__flatcc_gen_sort@@Base+0x2550>
   1bb3c:	bl	13f84 <fprintf@plt>
   1bb40:	b	1ba90 <__flatcc_gen_sort@@Base+0x1f80>
   1bb44:	ldrd	sl, [r4, #96]	; 0x60
   1bb48:	ldr	r0, [r8, #204]	; 0xcc
   1bb4c:	mov	r2, r9
   1bb50:	strd	sl, [sp]
   1bb54:	ldr	r1, [pc, #1288]	; 1c064 <__flatcc_gen_sort@@Base+0x2554>
   1bb58:	bl	13f84 <fprintf@plt>
   1bb5c:	mov	r2, r6
   1bb60:	b	1b6e4 <__flatcc_gen_sort@@Base+0x1bd4>
   1bb64:	ldrd	sl, [r4, #96]	; 0x60
   1bb68:	ldr	r0, [r8, #204]	; 0xcc
   1bb6c:	mov	r2, r9
   1bb70:	strd	sl, [sp]
   1bb74:	ldr	r1, [pc, #1260]	; 1c068 <__flatcc_gen_sort@@Base+0x2558>
   1bb78:	bl	13f84 <fprintf@plt>
   1bb7c:	mov	r2, r6
   1bb80:	b	1b6e4 <__flatcc_gen_sort@@Base+0x1bd4>
   1bb84:	cmp	r6, #0
   1bb88:	bne	1bd50 <__flatcc_gen_sort@@Base+0x2240>
   1bb8c:	ldr	r2, [pc, #1148]	; 1c010 <__flatcc_gen_sort@@Base+0x2500>
   1bb90:	ldr	r1, [pc, #1148]	; 1c014 <__flatcc_gen_sort@@Base+0x2504>
   1bb94:	ldr	r0, [r8, #204]	; 0xcc
   1bb98:	bl	13f84 <fprintf@plt>
   1bb9c:	ldrd	r2, [r4, #96]	; 0x60
   1bba0:	ldr	r1, [pc, #1144]	; 1c020 <__flatcc_gen_sort@@Base+0x2510>
   1bba4:	ldr	r0, [r8, #204]	; 0xcc
   1bba8:	add	r6, r6, #1
   1bbac:	bl	13f84 <fprintf@plt>
   1bbb0:	ldr	r4, [r4]
   1bbb4:	cmp	r4, #0
   1bbb8:	beq	1ba48 <__flatcc_gen_sort@@Base+0x1f38>
   1bbbc:	ldrh	r3, [r4, #72]	; 0x48
   1bbc0:	tst	r3, #4
   1bbc4:	bne	1bbb0 <__flatcc_gen_sort@@Base+0x20a0>
   1bbc8:	b	1bb84 <__flatcc_gen_sort@@Base+0x2074>
   1bbcc:	cmp	fp, #0
   1bbd0:	beq	1bd18 <__flatcc_gen_sort@@Base+0x2208>
   1bbd4:	ldr	r1, [r8, #204]	; 0xcc
   1bbd8:	mov	r0, #10
   1bbdc:	bl	13fe4 <fputc@plt>
   1bbe0:	mov	fp, #1
   1bbe4:	b	1b424 <__flatcc_gen_sort@@Base+0x1914>
   1bbe8:	ldrd	sl, [r4, #96]	; 0x60
   1bbec:	ldr	r0, [r8, #204]	; 0xcc
   1bbf0:	mov	r2, r9
   1bbf4:	strd	sl, [sp]
   1bbf8:	ldr	r1, [pc, #1132]	; 1c06c <__flatcc_gen_sort@@Base+0x255c>
   1bbfc:	bl	13f84 <fprintf@plt>
   1bc00:	mov	r2, r6
   1bc04:	b	1b6e4 <__flatcc_gen_sort@@Base+0x1bd4>
   1bc08:	ldrd	sl, [r4, #96]	; 0x60
   1bc0c:	ldr	r0, [r8, #204]	; 0xcc
   1bc10:	mov	r2, r9
   1bc14:	strd	sl, [sp]
   1bc18:	ldr	r1, [pc, #1104]	; 1c070 <__flatcc_gen_sort@@Base+0x2560>
   1bc1c:	bl	13f84 <fprintf@plt>
   1bc20:	mov	r2, r6
   1bc24:	b	1b6e4 <__flatcc_gen_sort@@Base+0x1bd4>
   1bc28:	ldrd	sl, [r4, #96]	; 0x60
   1bc2c:	ldr	r0, [r8, #204]	; 0xcc
   1bc30:	mov	r2, r9
   1bc34:	strd	sl, [sp]
   1bc38:	ldr	r1, [pc, #1076]	; 1c074 <__flatcc_gen_sort@@Base+0x2564>
   1bc3c:	bl	13f84 <fprintf@plt>
   1bc40:	mov	r2, r6
   1bc44:	b	1b6e4 <__flatcc_gen_sort@@Base+0x1bd4>
   1bc48:	ldrd	sl, [r4, #96]	; 0x60
   1bc4c:	ldr	r0, [r8, #204]	; 0xcc
   1bc50:	mov	r2, r9
   1bc54:	strd	sl, [sp]
   1bc58:	ldr	r1, [pc, #1048]	; 1c078 <__flatcc_gen_sort@@Base+0x2568>
   1bc5c:	bl	13f84 <fprintf@plt>
   1bc60:	mov	r2, r6
   1bc64:	b	1b6e4 <__flatcc_gen_sort@@Base+0x1bd4>
   1bc68:	ldr	r1, [pc, #956]	; 1c02c <__flatcc_gen_sort@@Base+0x251c>
   1bc6c:	ldr	r2, [pc, #1032]	; 1c07c <__flatcc_gen_sort@@Base+0x256c>
   1bc70:	ldr	r3, [pc, #1032]	; 1c080 <__flatcc_gen_sort@@Base+0x2570>
   1bc74:	ldr	r0, [r1]
   1bc78:	str	r2, [sp]
   1bc7c:	ldr	r1, [pc, #948]	; 1c038 <__flatcc_gen_sort@@Base+0x2528>
   1bc80:	ldr	r2, [pc, #948]	; 1c03c <__flatcc_gen_sort@@Base+0x252c>
   1bc84:	bl	13f84 <fprintf@plt>
   1bc88:	ldr	r3, [pc, #944]	; 1c040 <__flatcc_gen_sort@@Base+0x2530>
   1bc8c:	ldr	r2, [pc, #1004]	; 1c080 <__flatcc_gen_sort@@Base+0x2570>
   1bc90:	ldr	r1, [pc, #932]	; 1c03c <__flatcc_gen_sort@@Base+0x252c>
   1bc94:	ldr	r0, [pc, #936]	; 1c044 <__flatcc_gen_sort@@Base+0x2534>
   1bc98:	bl	14038 <__assert_fail@plt>
   1bc9c:	ldr	r5, [pc, #892]	; 1c020 <__flatcc_gen_sort@@Base+0x2510>
   1bca0:	b	1bcb0 <__flatcc_gen_sort@@Base+0x21a0>
   1bca4:	ldr	r4, [r4]
   1bca8:	cmp	r4, #0
   1bcac:	beq	1ba48 <__flatcc_gen_sort@@Base+0x1f38>
   1bcb0:	ldrh	r3, [r4, #72]	; 0x48
   1bcb4:	tst	r3, #4
   1bcb8:	bne	1bca4 <__flatcc_gen_sort@@Base+0x2194>
   1bcbc:	ldrd	r2, [r4, #96]	; 0x60
   1bcc0:	mov	r1, r5
   1bcc4:	ldr	r0, [r8, #204]	; 0xcc
   1bcc8:	bl	13f84 <fprintf@plt>
   1bccc:	b	1bca4 <__flatcc_gen_sort@@Base+0x2194>
   1bcd0:	ldr	r1, [pc, #852]	; 1c02c <__flatcc_gen_sort@@Base+0x251c>
   1bcd4:	ldr	r2, [pc, #936]	; 1c084 <__flatcc_gen_sort@@Base+0x2574>
   1bcd8:	ldr	r3, [pc, #936]	; 1c088 <__flatcc_gen_sort@@Base+0x2578>
   1bcdc:	ldr	r0, [r1]
   1bce0:	str	r2, [sp]
   1bce4:	ldr	r1, [pc, #844]	; 1c038 <__flatcc_gen_sort@@Base+0x2528>
   1bce8:	ldr	r2, [pc, #844]	; 1c03c <__flatcc_gen_sort@@Base+0x252c>
   1bcec:	bl	13f84 <fprintf@plt>
   1bcf0:	ldr	r3, [pc, #840]	; 1c040 <__flatcc_gen_sort@@Base+0x2530>
   1bcf4:	ldr	r2, [pc, #908]	; 1c088 <__flatcc_gen_sort@@Base+0x2578>
   1bcf8:	ldr	r1, [pc, #828]	; 1c03c <__flatcc_gen_sort@@Base+0x252c>
   1bcfc:	ldr	r0, [pc, #832]	; 1c044 <__flatcc_gen_sort@@Base+0x2534>
   1bd00:	bl	14038 <__assert_fail@plt>
   1bd04:	ldr	r2, [pc, #772]	; 1c010 <__flatcc_gen_sort@@Base+0x2500>
   1bd08:	ldr	r1, [pc, #772]	; 1c014 <__flatcc_gen_sort@@Base+0x2504>
   1bd0c:	ldr	r0, [r8, #204]	; 0xcc
   1bd10:	bl	13f84 <fprintf@plt>
   1bd14:	b	1b8b4 <__flatcc_gen_sort@@Base+0x1da4>
   1bd18:	mov	r0, #0
   1bd1c:	add	sp, sp, #484	; 0x1e4
   1bd20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd24:	ldr	r3, [pc, #864]	; 1c08c <__flatcc_gen_sort@@Base+0x257c>
   1bd28:	mov	r2, r8
   1bd2c:	ldrd	sl, [r4, #96]	; 0x60
   1bd30:	ldr	r0, [r8, #204]	; 0xcc
   1bd34:	ldr	r1, [pc, #852]	; 1c090 <__flatcc_gen_sort@@Base+0x2580>
   1bd38:	strd	sl, [sp]
   1bd3c:	bl	13f84 <fprintf@plt>
   1bd40:	mov	r2, r6
   1bd44:	b	1b6e4 <__flatcc_gen_sort@@Base+0x1bd4>
   1bd48:	mov	r5, r3
   1bd4c:	b	1b6ac <__flatcc_gen_sort@@Base+0x1b9c>
   1bd50:	tst	r6, #3
   1bd54:	bne	1bd64 <__flatcc_gen_sort@@Base+0x2254>
   1bd58:	sub	r3, r5, r6
   1bd5c:	cmp	r3, #2
   1bd60:	bgt	1bb8c <__flatcc_gen_sort@@Base+0x207c>
   1bd64:	ldr	r3, [r8, #204]	; 0xcc
   1bd68:	mov	r2, #2
   1bd6c:	mov	r1, #1
   1bd70:	ldr	r0, [pc, #620]	; 1bfe4 <__flatcc_gen_sort@@Base+0x24d4>
   1bd74:	bl	13f18 <fwrite@plt>
   1bd78:	b	1bb9c <__flatcc_gen_sort@@Base+0x208c>
   1bd7c:	ldr	r3, [pc, #784]	; 1c094 <__flatcc_gen_sort@@Base+0x2584>
   1bd80:	ldrd	sl, [r4, #96]	; 0x60
   1bd84:	ldr	r0, [r8, #204]	; 0xcc
   1bd88:	mov	r2, r8
   1bd8c:	strd	sl, [sp]
   1bd90:	ldr	r1, [pc, #768]	; 1c098 <__flatcc_gen_sort@@Base+0x2588>
   1bd94:	bl	13f84 <fprintf@plt>
   1bd98:	mov	r2, r6
   1bd9c:	b	1b6e4 <__flatcc_gen_sort@@Base+0x1bd4>
   1bda0:	ldr	r3, [pc, #756]	; 1c09c <__flatcc_gen_sort@@Base+0x258c>
   1bda4:	b	1bd80 <__flatcc_gen_sort@@Base+0x2270>
   1bda8:	ldr	r3, [pc, #752]	; 1c0a0 <__flatcc_gen_sort@@Base+0x2590>
   1bdac:	b	1bd80 <__flatcc_gen_sort@@Base+0x2270>
   1bdb0:	ldr	r3, [pc, #748]	; 1c0a4 <__flatcc_gen_sort@@Base+0x2594>
   1bdb4:	b	1bd80 <__flatcc_gen_sort@@Base+0x2270>
   1bdb8:	ldr	r3, [pc, #744]	; 1c0a8 <__flatcc_gen_sort@@Base+0x2598>
   1bdbc:	b	1bd80 <__flatcc_gen_sort@@Base+0x2270>
   1bdc0:	ldr	r3, [pc, #740]	; 1c0ac <__flatcc_gen_sort@@Base+0x259c>
   1bdc4:	b	1bd80 <__flatcc_gen_sort@@Base+0x2270>
   1bdc8:	ldr	r3, [pc, #736]	; 1c0b0 <__flatcc_gen_sort@@Base+0x25a0>
   1bdcc:	b	1bd80 <__flatcc_gen_sort@@Base+0x2270>
   1bdd0:	ldr	r3, [pc, #732]	; 1c0b4 <__flatcc_gen_sort@@Base+0x25a4>
   1bdd4:	b	1bd80 <__flatcc_gen_sort@@Base+0x2270>
   1bdd8:	ldr	r3, [pc, #728]	; 1c0b8 <__flatcc_gen_sort@@Base+0x25a8>
   1bddc:	b	1bd80 <__flatcc_gen_sort@@Base+0x2270>
   1bde0:	ldr	r3, [pc, #724]	; 1c0bc <__flatcc_gen_sort@@Base+0x25ac>
   1bde4:	b	1bd80 <__flatcc_gen_sort@@Base+0x2270>
   1bde8:	ldr	r3, [pc, #720]	; 1c0c0 <__flatcc_gen_sort@@Base+0x25b0>
   1bdec:	b	1bd80 <__flatcc_gen_sort@@Base+0x2270>
   1bdf0:	ldr	r2, [pc, #716]	; 1c0c4 <__flatcc_gen_sort@@Base+0x25b4>
   1bdf4:	ldr	r3, [pc, #716]	; 1c0c8 <__flatcc_gen_sort@@Base+0x25b8>
   1bdf8:	b	1bd2c <__flatcc_gen_sort@@Base+0x221c>
   1bdfc:	ldr	r2, [pc, #704]	; 1c0c4 <__flatcc_gen_sort@@Base+0x25b4>
   1be00:	ldr	r3, [pc, #708]	; 1c0cc <__flatcc_gen_sort@@Base+0x25bc>
   1be04:	b	1bd2c <__flatcc_gen_sort@@Base+0x221c>
   1be08:	ldr	r2, [pc, #692]	; 1c0c4 <__flatcc_gen_sort@@Base+0x25b4>
   1be0c:	ldr	r3, [pc, #664]	; 1c0ac <__flatcc_gen_sort@@Base+0x259c>
   1be10:	b	1bd2c <__flatcc_gen_sort@@Base+0x221c>
   1be14:	ldr	r2, [pc, #680]	; 1c0c4 <__flatcc_gen_sort@@Base+0x25b4>
   1be18:	ldr	r3, [pc, #688]	; 1c0d0 <__flatcc_gen_sort@@Base+0x25c0>
   1be1c:	b	1bd2c <__flatcc_gen_sort@@Base+0x221c>
   1be20:	ldr	r2, [pc, #668]	; 1c0c4 <__flatcc_gen_sort@@Base+0x25b4>
   1be24:	ldr	r3, [pc, #652]	; 1c0b8 <__flatcc_gen_sort@@Base+0x25a8>
   1be28:	b	1bd2c <__flatcc_gen_sort@@Base+0x221c>
   1be2c:	ldr	r2, [pc, #656]	; 1c0c4 <__flatcc_gen_sort@@Base+0x25b4>
   1be30:	ldr	r3, [pc, #668]	; 1c0d4 <__flatcc_gen_sort@@Base+0x25c4>
   1be34:	b	1bd2c <__flatcc_gen_sort@@Base+0x221c>
   1be38:	ldr	r2, [pc, #644]	; 1c0c4 <__flatcc_gen_sort@@Base+0x25b4>
   1be3c:	ldr	r3, [pc, #660]	; 1c0d8 <__flatcc_gen_sort@@Base+0x25c8>
   1be40:	b	1bd2c <__flatcc_gen_sort@@Base+0x221c>
   1be44:	ldr	r2, [pc, #632]	; 1c0c4 <__flatcc_gen_sort@@Base+0x25b4>
   1be48:	ldr	r3, [pc, #652]	; 1c0dc <__flatcc_gen_sort@@Base+0x25cc>
   1be4c:	b	1bd2c <__flatcc_gen_sort@@Base+0x221c>
   1be50:	ldr	r2, [pc, #620]	; 1c0c4 <__flatcc_gen_sort@@Base+0x25b4>
   1be54:	ldr	r3, [pc, #644]	; 1c0e0 <__flatcc_gen_sort@@Base+0x25d0>
   1be58:	b	1bd2c <__flatcc_gen_sort@@Base+0x221c>
   1be5c:	ldr	r2, [pc, #608]	; 1c0c4 <__flatcc_gen_sort@@Base+0x25b4>
   1be60:	ldr	r3, [pc, #636]	; 1c0e4 <__flatcc_gen_sort@@Base+0x25d4>
   1be64:	b	1bd2c <__flatcc_gen_sort@@Base+0x221c>
   1be68:	ldr	r1, [pc, #444]	; 1c02c <__flatcc_gen_sort@@Base+0x251c>
   1be6c:	ldr	r2, [pc, #628]	; 1c0e8 <__flatcc_gen_sort@@Base+0x25d8>
   1be70:	mov	r3, #141	; 0x8d
   1be74:	ldr	r0, [r1]
   1be78:	str	r2, [sp]
   1be7c:	ldr	r1, [pc, #436]	; 1c038 <__flatcc_gen_sort@@Base+0x2528>
   1be80:	ldr	r2, [pc, #612]	; 1c0ec <__flatcc_gen_sort@@Base+0x25dc>
   1be84:	bl	13f84 <fprintf@plt>
   1be88:	ldr	r3, [pc, #608]	; 1c0f0 <__flatcc_gen_sort@@Base+0x25e0>
   1be8c:	mov	r2, #141	; 0x8d
   1be90:	ldr	r1, [pc, #596]	; 1c0ec <__flatcc_gen_sort@@Base+0x25dc>
   1be94:	ldr	r0, [pc, #424]	; 1c044 <__flatcc_gen_sort@@Base+0x2534>
   1be98:	bl	14038 <__assert_fail@plt>
   1be9c:	str	fp, [sp, #36]	; 0x24
   1bea0:	ldrh	r3, [r4, #72]	; 0x48
   1bea4:	tst	r3, #4
   1bea8:	bne	1beec <__flatcc_gen_sort@@Base+0x23dc>
   1beac:	ldrh	r2, [r4, #24]
   1beb0:	ldr	r3, [r4, #4]
   1beb4:	cmp	r2, #14
   1beb8:	ldm	r3, {r2, r3}
   1bebc:	bne	1bed0 <__flatcc_gen_sort@@Base+0x23c0>
   1bec0:	ldr	r1, [r4, #16]
   1bec4:	ldrh	r1, [r1, #8]
   1bec8:	cmp	r1, #4
   1becc:	beq	1bfac <__flatcc_gen_sort@@Base+0x249c>
   1bed0:	ldrd	sl, [r4, #96]	; 0x60
   1bed4:	ldr	r0, [r8, #204]	; 0xcc
   1bed8:	mov	r1, r6
   1bedc:	str	r2, [sp]
   1bee0:	strd	sl, [sp, #8]
   1bee4:	mov	r2, r9
   1bee8:	bl	13f84 <fprintf@plt>
   1beec:	ldr	r4, [r4, #108]	; 0x6c
   1bef0:	cmp	r4, #0
   1bef4:	bne	1bea0 <__flatcc_gen_sort@@Base+0x2390>
   1bef8:	tst	r7, #1
   1befc:	ldr	fp, [sp, #36]	; 0x24
   1bf00:	beq	1b560 <__flatcc_gen_sort@@Base+0x1a50>
   1bf04:	ldr	r4, [r5, #24]
   1bf08:	cmp	r4, #0
   1bf0c:	bne	1bf20 <__flatcc_gen_sort@@Base+0x2410>
   1bf10:	b	1b560 <__flatcc_gen_sort@@Base+0x1a50>
   1bf14:	ldr	r4, [r4, #108]	; 0x6c
   1bf18:	cmp	r4, #0
   1bf1c:	beq	1b560 <__flatcc_gen_sort@@Base+0x1a50>
   1bf20:	ldrh	r3, [r4, #72]	; 0x48
   1bf24:	tst	r3, #4
   1bf28:	bne	1bf14 <__flatcc_gen_sort@@Base+0x2404>
   1bf2c:	ldrh	r3, [r4, #24]
   1bf30:	cmp	r3, #14
   1bf34:	bne	1bf14 <__flatcc_gen_sort@@Base+0x2404>
   1bf38:	ldr	r3, [r4, #16]
   1bf3c:	ldrh	r3, [r3, #8]
   1bf40:	cmp	r3, #4
   1bf44:	bne	1bf14 <__flatcc_gen_sort@@Base+0x2404>
   1bf48:	ldr	r1, [r4, #4]
   1bf4c:	ldrd	r2, [r4, #96]	; 0x60
   1bf50:	ldr	r0, [r8, #204]	; 0xcc
   1bf54:	ldr	ip, [r1, #4]
   1bf58:	strd	r2, [sp, #8]
   1bf5c:	ldr	r2, [r1]
   1bf60:	mov	r3, ip
   1bf64:	str	r2, [sp]
   1bf68:	ldr	r1, [pc, #388]	; 1c0f4 <__flatcc_gen_sort@@Base+0x25e4>
   1bf6c:	mov	r2, r9
   1bf70:	bl	13f84 <fprintf@plt>
   1bf74:	b	1bf14 <__flatcc_gen_sort@@Base+0x2404>
   1bf78:	ldr	r1, [pc, #172]	; 1c02c <__flatcc_gen_sort@@Base+0x251c>
   1bf7c:	ldr	r2, [pc, #356]	; 1c0e8 <__flatcc_gen_sort@@Base+0x25d8>
   1bf80:	mov	r3, #96	; 0x60
   1bf84:	ldr	r0, [r1]
   1bf88:	str	r2, [sp]
   1bf8c:	ldr	r1, [pc, #164]	; 1c038 <__flatcc_gen_sort@@Base+0x2528>
   1bf90:	ldr	r2, [pc, #340]	; 1c0ec <__flatcc_gen_sort@@Base+0x25dc>
   1bf94:	bl	13f84 <fprintf@plt>
   1bf98:	ldr	r3, [pc, #344]	; 1c0f8 <__flatcc_gen_sort@@Base+0x25e8>
   1bf9c:	mov	r2, #96	; 0x60
   1bfa0:	ldr	r1, [pc, #324]	; 1c0ec <__flatcc_gen_sort@@Base+0x25dc>
   1bfa4:	ldr	r0, [pc, #152]	; 1c044 <__flatcc_gen_sort@@Base+0x2534>
   1bfa8:	bl	14038 <__assert_fail@plt>
   1bfac:	ldrd	sl, [r4, #96]	; 0x60
   1bfb0:	ldr	r0, [r8, #204]	; 0xcc
   1bfb4:	ldr	r1, [pc, #320]	; 1c0fc <__flatcc_gen_sort@@Base+0x25ec>
   1bfb8:	str	r2, [sp]
   1bfbc:	strd	sl, [sp, #8]
   1bfc0:	mov	r2, r9
   1bfc4:	bl	13f84 <fprintf@plt>
   1bfc8:	ldr	r7, [sp, #36]	; 0x24
   1bfcc:	b	1beec <__flatcc_gen_sort@@Base+0x23dc>
   1bfd0:	mov	fp, r7
   1bfd4:	b	1b428 <__flatcc_gen_sort@@Base+0x1918>
   1bfd8:	andeq	sl, r4, r0, lsr #14
   1bfdc:	andeq	sl, r4, r8, lsr #15
   1bfe0:	andeq	sl, r4, r8, ror r7
   1bfe4:	strdeq	sl, [r4], -r8
   1bfe8:	andeq	sl, r4, ip, lsr #15
   1bfec:			; <UNDEFINED> instruction: 0x0004a7bc
   1bff0:			; <UNDEFINED> instruction: 0x0004aab4
   1bff4:	andeq	sl, r4, r0, lsr ip
   1bff8:	andeq	sl, r4, r8, asr fp
   1bffc:	muleq	r4, ip, fp
   1c000:			; <UNDEFINED> instruction: 0x0004abb4
   1c004:	andeq	sl, r4, ip, ror #23
   1c008:			; <UNDEFINED> instruction: 0x0004a7b4
   1c00c:	ldrdeq	sl, [r4], -ip
   1c010:	andeq	r4, r4, r0, ror #22
   1c014:	strdeq	sl, [r4], -r0
   1c018:	andeq	sl, r4, r4, lsl #18
   1c01c:	strdeq	sl, [r4], -r8
   1c020:	andeq	sl, r4, ip, ror r9
   1c024:	andeq	sl, r4, ip, lsl r9
   1c028:	andeq	r3, r4, r8, lsl r4
   1c02c:	andeq	sp, r6, r8, lsr #1
   1c030:	andeq	sl, r4, r8, lsl r3
   1c034:			; <UNDEFINED> instruction: 0x000004b9
   1c038:			; <UNDEFINED> instruction: 0x00041fbc
   1c03c:	strdeq	sl, [r4], -ip
   1c040:	andeq	sl, r4, r0, lsl #2
   1c044:	andeq	sl, r4, r4, asr sp
   1c048:	andeq	sl, r4, ip, lsr #22
   1c04c:	andeq	r0, r0, r8, asr #12
   1c050:	andeq	sl, r4, ip, lsr #2
   1c054:	andeq	sl, r4, r8, lsr r9
   1c058:	andeq	sl, r4, r4, lsl #19
   1c05c:	andeq	sl, r4, r4, lsr #19
   1c060:	andeq	sl, r4, r8, lsr #20
   1c064:	muleq	r4, r8, r8
   1c068:	andeq	sl, r4, r4, lsl #17
   1c06c:	andeq	sl, r4, r0, asr #16
   1c070:	andeq	sl, r4, r0, lsr #16
   1c074:	andeq	sl, r4, r4, lsl r8
   1c078:	andeq	sl, r4, r0, lsr r8
   1c07c:			; <UNDEFINED> instruction: 0x0004a8b4
   1c080:	andeq	r0, r0, r5, lsr #9
   1c084:	andeq	sl, r4, r8, asr r8
   1c088:	muleq	r0, r5, r4
   1c08c:	andeq	r1, r4, r8, ror lr
   1c090:	andeq	sl, r4, r0, ror #17
   1c094:	ldrdeq	r2, [r4], -r0
   1c098:	andeq	sl, r4, ip, ror #17
   1c09c:	andeq	r2, r4, r8, asr #5
   1c0a0:			; <UNDEFINED> instruction: 0x0005a5bc
   1c0a4:	andeq	r2, r4, r8, ror #5
   1c0a8:	andeq	r2, r4, r0, lsl #6
   1c0ac:	andeq	r1, r4, r8, lsr #29
   1c0b0:	ldrdeq	r2, [r4], -r8
   1c0b4:	andeq	r2, r4, r0, ror #5
   1c0b8:	andeq	r1, r4, r0, lsr #29
   1c0bc:	strdeq	r2, [r4], -r0
   1c0c0:	strdeq	r2, [r4], -r8
   1c0c4:	andeq	fp, r4, ip, lsr #24
   1c0c8:	muleq	r4, r0, lr
   1c0cc:	muleq	r4, r8, lr
   1c0d0:	andeq	r1, r4, r0, ror lr
   1c0d4:	andeq	r1, r4, r0, lsl #29
   1c0d8:	andeq	r1, r4, r8, lsl #29
   1c0dc:	andeq	r1, r4, ip, asr #28
   1c0e0:	andeq	r1, r4, r8, asr lr
   1c0e4:	andeq	r1, r4, r4, ror #28
   1c0e8:	andeq	r1, r4, r8, asr #31
   1c0ec:	andeq	r1, r4, r0, ror pc
   1c0f0:	muleq	r4, ip, r0
   1c0f4:	andeq	sl, r4, ip, ror ip
   1c0f8:	andeq	sl, r4, r8, lsl r1
   1c0fc:	andeq	sl, r4, r4, asr ip
   1c100:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c104:	subs	r4, r0, #0
   1c108:	beq	1c1f0 <__flatcc_gen_sort@@Base+0x26e0>
   1c10c:	mov	r7, #0
   1c110:	ldrh	r3, [r4, #72]	; 0x48
   1c114:	ands	r3, r3, #4
   1c118:	bne	1c13c <__flatcc_gen_sort@@Base+0x262c>
   1c11c:	ldrh	r2, [r4, #24]
   1c120:	cmp	r2, #14
   1c124:	bne	1c138 <__flatcc_gen_sort@@Base+0x2628>
   1c128:	ldr	r2, [r4, #16]
   1c12c:	ldrh	r1, [r2, #8]
   1c130:	cmp	r1, #1
   1c134:	beq	1c150 <__flatcc_gen_sort@@Base+0x2640>
   1c138:	add	r7, r7, #1
   1c13c:	ldr	r4, [r4]
   1c140:	cmp	r4, #0
   1c144:	bne	1c110 <__flatcc_gen_sort@@Base+0x2600>
   1c148:	mov	r0, r7
   1c14c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c150:	ldr	r5, [r2, #20]
   1c154:	cmp	r5, #0
   1c158:	beq	1c208 <__flatcc_gen_sort@@Base+0x26f8>
   1c15c:	mov	r9, r3
   1c160:	ldrh	r2, [r5, #72]	; 0x48
   1c164:	ands	r2, r2, #4
   1c168:	bne	1c18c <__flatcc_gen_sort@@Base+0x267c>
   1c16c:	ldrh	r1, [r5, #24]
   1c170:	cmp	r1, #14
   1c174:	bne	1c188 <__flatcc_gen_sort@@Base+0x2678>
   1c178:	ldr	r1, [r5, #16]
   1c17c:	ldrh	r0, [r1, #8]
   1c180:	cmp	r0, #1
   1c184:	beq	1c1a0 <__flatcc_gen_sort@@Base+0x2690>
   1c188:	add	r9, r9, #1
   1c18c:	ldr	r5, [r5]
   1c190:	cmp	r5, #0
   1c194:	bne	1c160 <__flatcc_gen_sort@@Base+0x2650>
   1c198:	add	r7, r7, r9
   1c19c:	b	1c13c <__flatcc_gen_sort@@Base+0x262c>
   1c1a0:	ldr	r8, [r1, #20]
   1c1a4:	cmp	r8, #0
   1c1a8:	beq	1c210 <__flatcc_gen_sort@@Base+0x2700>
   1c1ac:	mov	r6, r2
   1c1b0:	ldrh	r2, [r8, #72]	; 0x48
   1c1b4:	tst	r2, #4
   1c1b8:	bne	1c1dc <__flatcc_gen_sort@@Base+0x26cc>
   1c1bc:	ldrh	r2, [r8, #24]
   1c1c0:	cmp	r2, #14
   1c1c4:	bne	1c1d8 <__flatcc_gen_sort@@Base+0x26c8>
   1c1c8:	ldr	r2, [r8, #16]
   1c1cc:	ldrh	r1, [r2, #8]
   1c1d0:	cmp	r1, #1
   1c1d4:	beq	1c1f8 <__flatcc_gen_sort@@Base+0x26e8>
   1c1d8:	add	r6, r6, #1
   1c1dc:	ldr	r8, [r8]
   1c1e0:	cmp	r8, #0
   1c1e4:	bne	1c1b0 <__flatcc_gen_sort@@Base+0x26a0>
   1c1e8:	add	r9, r9, r6
   1c1ec:	b	1c18c <__flatcc_gen_sort@@Base+0x267c>
   1c1f0:	mov	r7, r4
   1c1f4:	b	1c148 <__flatcc_gen_sort@@Base+0x2638>
   1c1f8:	ldr	r0, [r2, #20]
   1c1fc:	bl	1c100 <__flatcc_gen_sort@@Base+0x25f0>
   1c200:	add	r6, r6, r0
   1c204:	b	1c1dc <__flatcc_gen_sort@@Base+0x26cc>
   1c208:	mov	r9, r5
   1c20c:	b	1c198 <__flatcc_gen_sort@@Base+0x2688>
   1c210:	mov	r6, r8
   1c214:	b	1c1e8 <__flatcc_gen_sort@@Base+0x26d8>
   1c218:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c21c:	sub	sp, sp, #260	; 0x104
   1c220:	mov	r7, r3
   1c224:	str	r2, [sp, #20]
   1c228:	mov	r8, r0
   1c22c:	mov	r4, r1
   1c230:	add	r0, sp, #36	; 0x24
   1c234:	mov	r2, #220	; 0xdc
   1c238:	mov	r1, #0
   1c23c:	bl	13f9c <memset@plt>
   1c240:	cmp	r7, #1
   1c244:	beq	1c410 <__flatcc_gen_sort@@Base+0x2900>
   1c248:	ldr	r3, [pc, #1384]	; 1c7b8 <__flatcc_gen_sort@@Base+0x2ca8>
   1c24c:	ldr	r2, [pc, #1384]	; 1c7bc <__flatcc_gen_sort@@Base+0x2cac>
   1c250:	cmp	r7, #2
   1c254:	movne	r2, r3
   1c258:	str	r2, [sp, #24]
   1c25c:	ldr	fp, [r4]
   1c260:	cmp	fp, #0
   1c264:	moveq	sl, fp
   1c268:	beq	1c5a0 <__flatcc_gen_sort@@Base+0x2a90>
   1c26c:	ldr	r3, [fp, #4]
   1c270:	mov	r9, #0
   1c274:	mov	sl, r9
   1c278:	ldr	r6, [r3]
   1c27c:	ldr	r5, [r3, #4]
   1c280:	ldrh	r3, [fp, #24]
   1c284:	cmp	r3, #8
   1c288:	beq	1c30c <__flatcc_gen_sort@@Base+0x27fc>
   1c28c:	cmp	r3, #14
   1c290:	bne	1c34c <__flatcc_gen_sort@@Base+0x283c>
   1c294:	ldr	r1, [fp, #16]
   1c298:	add	r2, sp, #36	; 0x24
   1c29c:	ldr	r0, [r1, #12]
   1c2a0:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1c2a4:	ldr	r3, [fp, #16]
   1c2a8:	ldrh	r4, [r3, #8]
   1c2ac:	ldrh	r3, [fp, #72]	; 0x48
   1c2b0:	cmp	r4, #1
   1c2b4:	beq	1c41c <__flatcc_gen_sort@@Base+0x290c>
   1c2b8:	tst	r3, #4
   1c2bc:	bne	1c380 <__flatcc_gen_sort@@Base+0x2870>
   1c2c0:	ldrd	r2, [fp, #88]	; 0x58
   1c2c4:	cmp	r3, #0
   1c2c8:	cmpeq	r2, #1
   1c2cc:	beq	1c3e4 <__flatcc_gen_sort@@Base+0x28d4>
   1c2d0:	cmp	r7, #1
   1c2d4:	beq	1c574 <__flatcc_gen_sort@@Base+0x2a64>
   1c2d8:	cmp	r7, #2
   1c2dc:	bne	1c3e4 <__flatcc_gen_sort@@Base+0x28d4>
   1c2e0:	ldr	r3, [sp, #296]	; 0x128
   1c2e4:	ldr	r0, [r8, #204]	; 0xcc
   1c2e8:	cmp	r3, #0
   1c2ec:	beq	1c6b8 <__flatcc_gen_sort@@Base+0x2ba8>
   1c2f0:	stmib	sp, {r5, r6}
   1c2f4:	str	r6, [sp]
   1c2f8:	mov	r3, r5
   1c2fc:	add	r2, sp, #36	; 0x24
   1c300:	ldr	r1, [pc, #1208]	; 1c7c0 <__flatcc_gen_sort@@Base+0x2cb0>
   1c304:	bl	13f84 <fprintf@plt>
   1c308:	b	1c408 <__flatcc_gen_sort@@Base+0x28f8>
   1c30c:	ldr	r3, [fp, #16]
   1c310:	sub	r3, r3, #1
   1c314:	cmp	r3, #10
   1c318:	ldrls	pc, [pc, r3, lsl #2]
   1c31c:	b	1c6e8 <__flatcc_gen_sort@@Base+0x2bd8>
   1c320:	andeq	ip, r1, r4, lsl r5
   1c324:	andeq	ip, r1, ip, ror #9
   1c328:	andeq	ip, r1, r0, ror r4
   1c32c:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c330:	andeq	ip, r1, ip, asr #9
   1c334:	ldrdeq	ip, [r1], -r4
   1c338:	andeq	ip, r1, ip, lsl #10
   1c33c:	strdeq	ip, [r1], -r4
   1c340:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c344:	andeq	ip, r1, r4, lsl #10
   1c348:	andeq	ip, r1, r4, ror #9
   1c34c:	ldr	r1, [pc, #1136]	; 1c7c4 <__flatcc_gen_sort@@Base+0x2cb4>
   1c350:	ldr	r2, [pc, #1136]	; 1c7c8 <__flatcc_gen_sort@@Base+0x2cb8>
   1c354:	ldr	r3, [pc, #1136]	; 1c7cc <__flatcc_gen_sort@@Base+0x2cbc>
   1c358:	ldr	r0, [r1]
   1c35c:	str	r2, [sp]
   1c360:	ldr	r1, [pc, #1128]	; 1c7d0 <__flatcc_gen_sort@@Base+0x2cc0>
   1c364:	ldr	r2, [pc, #1128]	; 1c7d4 <__flatcc_gen_sort@@Base+0x2cc4>
   1c368:	bl	13f84 <fprintf@plt>
   1c36c:	ldr	r3, [pc, #1124]	; 1c7d8 <__flatcc_gen_sort@@Base+0x2cc8>
   1c370:	ldr	r2, [pc, #1108]	; 1c7cc <__flatcc_gen_sort@@Base+0x2cbc>
   1c374:	ldr	r1, [pc, #1112]	; 1c7d4 <__flatcc_gen_sort@@Base+0x2cc4>
   1c378:	ldr	r0, [pc, #1116]	; 1c7dc <__flatcc_gen_sort@@Base+0x2ccc>
   1c37c:	bl	14038 <__assert_fail@plt>
   1c380:	add	r3, r9, #1
   1c384:	mov	r2, r9
   1c388:	ldr	r1, [pc, #1104]	; 1c7e0 <__flatcc_gen_sort@@Base+0x2cd0>
   1c38c:	ldr	r0, [r8, #204]	; 0xcc
   1c390:	add	sl, sl, #1
   1c394:	mov	r9, r3
   1c398:	bl	13f84 <fprintf@plt>
   1c39c:	ldr	fp, [fp]
   1c3a0:	cmp	fp, #0
   1c3a4:	beq	1c5a0 <__flatcc_gen_sort@@Base+0x2a90>
   1c3a8:	ldr	r3, [fp, #4]
   1c3ac:	cmp	sl, #0
   1c3b0:	ldr	r6, [r3]
   1c3b4:	ldr	r5, [r3, #4]
   1c3b8:	ble	1c280 <__flatcc_gen_sort@@Base+0x2770>
   1c3bc:	tst	sl, #3
   1c3c0:	ldr	r3, [r8, #204]	; 0xcc
   1c3c4:	moveq	r2, #4
   1c3c8:	moveq	r1, #1
   1c3cc:	ldreq	r0, [pc, #1040]	; 1c7e4 <__flatcc_gen_sort@@Base+0x2cd4>
   1c3d0:	movne	r2, #2
   1c3d4:	movne	r1, #1
   1c3d8:	ldrne	r0, [pc, #1032]	; 1c7e8 <__flatcc_gen_sort@@Base+0x2cd8>
   1c3dc:	bl	13f18 <fwrite@plt>
   1c3e0:	b	1c280 <__flatcc_gen_sort@@Base+0x2770>
   1c3e4:	ldr	r3, [sp, #296]	; 0x128
   1c3e8:	ldr	r0, [r8, #204]	; 0xcc
   1c3ec:	cmp	r3, #0
   1c3f0:	bne	1c458 <__flatcc_gen_sort@@Base+0x2948>
   1c3f4:	str	sl, [sp]
   1c3f8:	mov	r3, r6
   1c3fc:	mov	r2, r5
   1c400:	ldr	r1, [pc, #996]	; 1c7ec <__flatcc_gen_sort@@Base+0x2cdc>
   1c404:	bl	13f84 <fprintf@plt>
   1c408:	add	sl, sl, #1
   1c40c:	b	1c39c <__flatcc_gen_sort@@Base+0x288c>
   1c410:	ldr	r3, [pc, #984]	; 1c7f0 <__flatcc_gen_sort@@Base+0x2ce0>
   1c414:	str	r3, [sp, #24]
   1c418:	b	1c25c <__flatcc_gen_sort@@Base+0x274c>
   1c41c:	tst	r3, #4
   1c420:	bne	1c51c <__flatcc_gen_sort@@Base+0x2a0c>
   1c424:	ldr	r3, [sp, #296]	; 0x128
   1c428:	ldr	r0, [r8, #204]	; 0xcc
   1c42c:	cmp	r3, #0
   1c430:	beq	1c5f4 <__flatcc_gen_sort@@Base+0x2ae4>
   1c434:	str	r6, [sp, #12]
   1c438:	str	r5, [sp, #8]
   1c43c:	stm	sp, {r5, r6}
   1c440:	ldr	r3, [sp, #24]
   1c444:	add	r2, sp, #36	; 0x24
   1c448:	ldr	r1, [pc, #932]	; 1c7f4 <__flatcc_gen_sort@@Base+0x2ce4>
   1c44c:	add	sl, sl, #1
   1c450:	bl	13f84 <fprintf@plt>
   1c454:	b	1c39c <__flatcc_gen_sort@@Base+0x288c>
   1c458:	stm	sp, {r5, r6}
   1c45c:	mov	r3, r6
   1c460:	mov	r2, r5
   1c464:	ldr	r1, [pc, #908]	; 1c7f8 <__flatcc_gen_sort@@Base+0x2ce8>
   1c468:	bl	13f84 <fprintf@plt>
   1c46c:	b	1c408 <__flatcc_gen_sort@@Base+0x28f8>
   1c470:	ldr	r3, [pc, #900]	; 1c7fc <__flatcc_gen_sort@@Base+0x2cec>
   1c474:	ldrh	r2, [fp, #72]	; 0x48
   1c478:	tst	r2, #4
   1c47c:	bne	1c380 <__flatcc_gen_sort@@Base+0x2870>
   1c480:	ldrd	r0, [fp, #88]	; 0x58
   1c484:	cmp	r1, #0
   1c488:	cmpeq	r0, #1
   1c48c:	beq	1c3e4 <__flatcc_gen_sort@@Base+0x28d4>
   1c490:	cmp	r7, #1
   1c494:	beq	1c548 <__flatcc_gen_sort@@Base+0x2a38>
   1c498:	cmp	r7, #2
   1c49c:	bne	1c3e4 <__flatcc_gen_sort@@Base+0x28d4>
   1c4a0:	ldr	r2, [sp, #296]	; 0x128
   1c4a4:	ldr	r0, [r8, #204]	; 0xcc
   1c4a8:	cmp	r2, #0
   1c4ac:	beq	1c5cc <__flatcc_gen_sort@@Base+0x2abc>
   1c4b0:	str	r6, [sp, #12]
   1c4b4:	str	r5, [sp, #8]
   1c4b8:	stm	sp, {r5, r6}
   1c4bc:	mov	r2, r8
   1c4c0:	ldr	r1, [pc, #824]	; 1c800 <__flatcc_gen_sort@@Base+0x2cf0>
   1c4c4:	bl	13f84 <fprintf@plt>
   1c4c8:	b	1c408 <__flatcc_gen_sort@@Base+0x28f8>
   1c4cc:	ldr	r3, [pc, #816]	; 1c804 <__flatcc_gen_sort@@Base+0x2cf4>
   1c4d0:	b	1c474 <__flatcc_gen_sort@@Base+0x2964>
   1c4d4:	ldr	r3, [pc, #812]	; 1c808 <__flatcc_gen_sort@@Base+0x2cf8>
   1c4d8:	b	1c474 <__flatcc_gen_sort@@Base+0x2964>
   1c4dc:	ldr	r3, [pc, #808]	; 1c80c <__flatcc_gen_sort@@Base+0x2cfc>
   1c4e0:	b	1c474 <__flatcc_gen_sort@@Base+0x2964>
   1c4e4:	ldr	r3, [pc, #804]	; 1c810 <__flatcc_gen_sort@@Base+0x2d00>
   1c4e8:	b	1c474 <__flatcc_gen_sort@@Base+0x2964>
   1c4ec:	ldr	r3, [pc, #800]	; 1c814 <__flatcc_gen_sort@@Base+0x2d04>
   1c4f0:	b	1c474 <__flatcc_gen_sort@@Base+0x2964>
   1c4f4:	ldr	r3, [pc, #796]	; 1c818 <__flatcc_gen_sort@@Base+0x2d08>
   1c4f8:	b	1c474 <__flatcc_gen_sort@@Base+0x2964>
   1c4fc:	ldr	r3, [pc, #792]	; 1c81c <__flatcc_gen_sort@@Base+0x2d0c>
   1c500:	b	1c474 <__flatcc_gen_sort@@Base+0x2964>
   1c504:	ldr	r3, [pc, #788]	; 1c820 <__flatcc_gen_sort@@Base+0x2d10>
   1c508:	b	1c474 <__flatcc_gen_sort@@Base+0x2964>
   1c50c:	ldr	r3, [pc, #784]	; 1c824 <__flatcc_gen_sort@@Base+0x2d14>
   1c510:	b	1c474 <__flatcc_gen_sort@@Base+0x2964>
   1c514:	ldr	r3, [pc, #780]	; 1c828 <__flatcc_gen_sort@@Base+0x2d18>
   1c518:	b	1c474 <__flatcc_gen_sort@@Base+0x2964>
   1c51c:	mov	r3, r9
   1c520:	mov	r2, r9
   1c524:	ldr	r1, [pc, #768]	; 1c82c <__flatcc_gen_sort@@Base+0x2d1c>
   1c528:	ldr	r0, [r8, #204]	; 0xcc
   1c52c:	bl	13f84 <fprintf@plt>
   1c530:	ldr	r3, [fp, #16]
   1c534:	add	r9, r9, #1
   1c538:	ldr	r0, [r3, #20]
   1c53c:	bl	1c100 <__flatcc_gen_sort@@Base+0x25f0>
   1c540:	add	sl, sl, r0
   1c544:	b	1c39c <__flatcc_gen_sort@@Base+0x288c>
   1c548:	ldr	r2, [sp, #296]	; 0x128
   1c54c:	ldr	r0, [r8, #204]	; 0xcc
   1c550:	cmp	r2, #0
   1c554:	beq	1c5e0 <__flatcc_gen_sort@@Base+0x2ad0>
   1c558:	str	r6, [sp, #12]
   1c55c:	str	r5, [sp, #8]
   1c560:	stm	sp, {r5, r6}
   1c564:	mov	r2, r8
   1c568:	ldr	r1, [pc, #704]	; 1c830 <__flatcc_gen_sort@@Base+0x2d20>
   1c56c:	bl	13f84 <fprintf@plt>
   1c570:	b	1c408 <__flatcc_gen_sort@@Base+0x28f8>
   1c574:	ldr	r3, [sp, #296]	; 0x128
   1c578:	ldr	r0, [r8, #204]	; 0xcc
   1c57c:	cmp	r3, #0
   1c580:	beq	1c6d0 <__flatcc_gen_sort@@Base+0x2bc0>
   1c584:	stmib	sp, {r5, r6}
   1c588:	str	r6, [sp]
   1c58c:	mov	r3, r5
   1c590:	add	r2, sp, #36	; 0x24
   1c594:	ldr	r1, [pc, #664]	; 1c834 <__flatcc_gen_sort@@Base+0x2d24>
   1c598:	bl	13f84 <fprintf@plt>
   1c59c:	b	1c408 <__flatcc_gen_sort@@Base+0x28f8>
   1c5a0:	ldr	r3, [sp, #20]
   1c5a4:	cmp	r3, #0
   1c5a8:	ble	1c5c0 <__flatcc_gen_sort@@Base+0x2ab0>
   1c5ac:	ldr	r3, [r8, #204]	; 0xcc
   1c5b0:	mov	r2, #4
   1c5b4:	mov	r1, #1
   1c5b8:	ldr	r0, [pc, #548]	; 1c7e4 <__flatcc_gen_sort@@Base+0x2cd4>
   1c5bc:	bl	13f18 <fwrite@plt>
   1c5c0:	mov	r0, sl
   1c5c4:	add	sp, sp, #260	; 0x104
   1c5c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c5cc:	stm	sp, {r5, r6, sl}
   1c5d0:	mov	r2, r8
   1c5d4:	ldr	r1, [pc, #604]	; 1c838 <__flatcc_gen_sort@@Base+0x2d28>
   1c5d8:	bl	13f84 <fprintf@plt>
   1c5dc:	b	1c408 <__flatcc_gen_sort@@Base+0x28f8>
   1c5e0:	stm	sp, {r5, r6, sl}
   1c5e4:	mov	r2, r8
   1c5e8:	ldr	r1, [pc, #588]	; 1c83c <__flatcc_gen_sort@@Base+0x2d2c>
   1c5ec:	bl	13f84 <fprintf@plt>
   1c5f0:	b	1c408 <__flatcc_gen_sort@@Base+0x28f8>
   1c5f4:	stm	sp, {r5, r6}
   1c5f8:	ldr	r3, [sp, #24]
   1c5fc:	add	r2, sp, #36	; 0x24
   1c600:	ldr	r1, [pc, #568]	; 1c840 <__flatcc_gen_sort@@Base+0x2d30>
   1c604:	bl	13f84 <fprintf@plt>
   1c608:	ldr	r3, [fp, #16]
   1c60c:	ldr	r0, [r3, #20]
   1c610:	bl	1c100 <__flatcc_gen_sort@@Base+0x25f0>
   1c614:	subs	r6, r0, #0
   1c618:	ble	1c6a8 <__flatcc_gen_sort@@Base+0x2b98>
   1c61c:	ldr	r3, [sp, #20]
   1c620:	cmp	r3, #0
   1c624:	beq	1c784 <__flatcc_gen_sort@@Base+0x2c74>
   1c628:	cmp	r3, #4
   1c62c:	str	r4, [sp, #28]
   1c630:	ldr	r4, [sp, #296]	; 0x128
   1c634:	bgt	1c748 <__flatcc_gen_sort@@Base+0x2c38>
   1c638:	b	1c66c <__flatcc_gen_sort@@Base+0x2b5c>
   1c63c:	ldr	r3, [r8, #204]	; 0xcc
   1c640:	mov	r2, #2
   1c644:	ldr	r1, [sp, #28]
   1c648:	ldr	r0, [pc, #500]	; 1c844 <__flatcc_gen_sort@@Base+0x2d34>
   1c64c:	bl	13f18 <fwrite@plt>
   1c650:	mov	r2, r5
   1c654:	add	r4, r4, #1
   1c658:	ldr	r1, [pc, #488]	; 1c848 <__flatcc_gen_sort@@Base+0x2d38>
   1c65c:	ldr	r0, [r8, #204]	; 0xcc
   1c660:	bl	13f84 <fprintf@plt>
   1c664:	cmp	r6, r4
   1c668:	beq	1c6a4 <__flatcc_gen_sort@@Base+0x2b94>
   1c66c:	cmp	r4, #0
   1c670:	add	r5, r4, sl
   1c674:	beq	1c63c <__flatcc_gen_sort@@Base+0x2b2c>
   1c678:	tst	r4, #3
   1c67c:	bne	1c63c <__flatcc_gen_sort@@Base+0x2b2c>
   1c680:	ldr	r3, [sp, #20]
   1c684:	sub	r3, r3, r4
   1c688:	cmp	r3, #2
   1c68c:	ble	1c63c <__flatcc_gen_sort@@Base+0x2b2c>
   1c690:	ldr	r2, [pc, #436]	; 1c84c <__flatcc_gen_sort@@Base+0x2d3c>
   1c694:	ldr	r1, [pc, #436]	; 1c850 <__flatcc_gen_sort@@Base+0x2d40>
   1c698:	ldr	r0, [r8, #204]	; 0xcc
   1c69c:	bl	13f84 <fprintf@plt>
   1c6a0:	b	1c650 <__flatcc_gen_sort@@Base+0x2b40>
   1c6a4:	add	sl, r6, sl
   1c6a8:	ldr	r1, [r8, #204]	; 0xcc
   1c6ac:	mov	r0, #41	; 0x29
   1c6b0:	bl	13fe4 <fputc@plt>
   1c6b4:	b	1c39c <__flatcc_gen_sort@@Base+0x288c>
   1c6b8:	stm	sp, {r6, sl}
   1c6bc:	mov	r3, r5
   1c6c0:	add	r2, sp, #36	; 0x24
   1c6c4:	ldr	r1, [pc, #392]	; 1c854 <__flatcc_gen_sort@@Base+0x2d44>
   1c6c8:	bl	13f84 <fprintf@plt>
   1c6cc:	b	1c408 <__flatcc_gen_sort@@Base+0x28f8>
   1c6d0:	stm	sp, {r6, sl}
   1c6d4:	mov	r3, r5
   1c6d8:	add	r2, sp, #36	; 0x24
   1c6dc:	ldr	r1, [pc, #372]	; 1c858 <__flatcc_gen_sort@@Base+0x2d48>
   1c6e0:	bl	13f84 <fprintf@plt>
   1c6e4:	b	1c408 <__flatcc_gen_sort@@Base+0x28f8>
   1c6e8:	ldr	r1, [pc, #212]	; 1c7c4 <__flatcc_gen_sort@@Base+0x2cb4>
   1c6ec:	ldr	r2, [pc, #360]	; 1c85c <__flatcc_gen_sort@@Base+0x2d4c>
   1c6f0:	mov	r3, #96	; 0x60
   1c6f4:	ldr	r0, [r1]
   1c6f8:	str	r2, [sp]
   1c6fc:	ldr	r1, [pc, #204]	; 1c7d0 <__flatcc_gen_sort@@Base+0x2cc0>
   1c700:	ldr	r2, [pc, #344]	; 1c860 <__flatcc_gen_sort@@Base+0x2d50>
   1c704:	bl	13f84 <fprintf@plt>
   1c708:	ldr	r3, [pc, #340]	; 1c864 <__flatcc_gen_sort@@Base+0x2d54>
   1c70c:	mov	r2, #96	; 0x60
   1c710:	ldr	r1, [pc, #328]	; 1c860 <__flatcc_gen_sort@@Base+0x2d50>
   1c714:	ldr	r0, [pc, #192]	; 1c7dc <__flatcc_gen_sort@@Base+0x2ccc>
   1c718:	bl	14038 <__assert_fail@plt>
   1c71c:	ldr	r2, [pc, #296]	; 1c84c <__flatcc_gen_sort@@Base+0x2d3c>
   1c720:	ldr	r1, [pc, #296]	; 1c850 <__flatcc_gen_sort@@Base+0x2d40>
   1c724:	ldr	r0, [r8, #204]	; 0xcc
   1c728:	bl	13f84 <fprintf@plt>
   1c72c:	mov	r2, r5
   1c730:	add	r4, r4, #1
   1c734:	ldr	r1, [pc, #268]	; 1c848 <__flatcc_gen_sort@@Base+0x2d38>
   1c738:	ldr	r0, [r8, #204]	; 0xcc
   1c73c:	bl	13f84 <fprintf@plt>
   1c740:	cmp	r4, r6
   1c744:	beq	1c7b0 <__flatcc_gen_sort@@Base+0x2ca0>
   1c748:	cmp	r4, #0
   1c74c:	add	r5, r4, sl
   1c750:	beq	1c71c <__flatcc_gen_sort@@Base+0x2c0c>
   1c754:	tst	r4, #3
   1c758:	bne	1c76c <__flatcc_gen_sort@@Base+0x2c5c>
   1c75c:	ldr	r3, [sp, #20]
   1c760:	sub	r3, r3, r4
   1c764:	cmp	r3, #2
   1c768:	bgt	1c71c <__flatcc_gen_sort@@Base+0x2c0c>
   1c76c:	ldr	r3, [r8, #204]	; 0xcc
   1c770:	mov	r2, #2
   1c774:	ldr	r1, [sp, #28]
   1c778:	ldr	r0, [pc, #196]	; 1c844 <__flatcc_gen_sort@@Base+0x2d34>
   1c77c:	bl	13f18 <fwrite@plt>
   1c780:	b	1c72c <__flatcc_gen_sort@@Base+0x2c1c>
   1c784:	ldr	r4, [pc, #188]	; 1c848 <__flatcc_gen_sort@@Base+0x2d38>
   1c788:	add	r6, r6, sl
   1c78c:	mov	r2, sl
   1c790:	add	sl, sl, #1
   1c794:	mov	r1, r4
   1c798:	ldr	r0, [r8, #204]	; 0xcc
   1c79c:	bl	13f84 <fprintf@plt>
   1c7a0:	cmp	sl, r6
   1c7a4:	mov	r2, sl
   1c7a8:	bne	1c790 <__flatcc_gen_sort@@Base+0x2c80>
   1c7ac:	b	1c6a8 <__flatcc_gen_sort@@Base+0x2b98>
   1c7b0:	add	sl, r4, sl
   1c7b4:	b	1c6a8 <__flatcc_gen_sort@@Base+0x2b98>
   1c7b8:	andeq	fp, r4, ip, lsr #24
   1c7bc:	andeq	sl, r4, r8, lsr #25
   1c7c0:	andeq	sl, r4, r4, lsr #27
   1c7c4:	andeq	sp, r6, r8, lsr #1
   1c7c8:	andeq	sl, r4, r4, lsr #29
   1c7cc:	andeq	r0, r0, r1, ror #7
   1c7d0:			; <UNDEFINED> instruction: 0x00041fbc
   1c7d4:	strdeq	sl, [r4], -ip
   1c7d8:	andeq	sl, r4, r8, lsr r1
   1c7dc:	andeq	sl, r4, r4, asr sp
   1c7e0:	andeq	sl, r4, r0, asr #26
   1c7e4:			; <UNDEFINED> instruction: 0x0004acbc
   1c7e8:	andeq	sl, r4, r4, asr #25
   1c7ec:	strdeq	sl, [r4], -ip
   1c7f0:			; <UNDEFINED> instruction: 0x0004acb0
   1c7f4:	andeq	sl, r4, r4, lsl #26
   1c7f8:	andeq	sl, r4, r8, ror #27
   1c7fc:	ldrdeq	r2, [r4], -r8
   1c800:	andeq	sl, r4, r8, asr lr
   1c804:			; <UNDEFINED> instruction: 0x0005a5bc
   1c808:	andeq	r2, r4, r8, ror #5
   1c80c:	andeq	r2, r4, r0, ror #5
   1c810:	andeq	r1, r4, r0, lsr #29
   1c814:	ldrdeq	r2, [r4], -r0
   1c818:	strdeq	r2, [r4], -r8
   1c81c:	andeq	r2, r4, r0, lsl #6
   1c820:	andeq	r1, r4, r8, lsr #29
   1c824:	strdeq	r2, [r4], -r0
   1c828:	andeq	r2, r4, r8, asr #5
   1c82c:	andeq	sl, r4, r8, asr #25
   1c830:	andeq	sl, r4, ip, lsl #28
   1c834:	andeq	sl, r4, r8, asr sp
   1c838:	andeq	sl, r4, r0, lsl #29
   1c83c:	andeq	sl, r4, r4, lsr lr
   1c840:	andeq	sl, r4, r4, lsr #26
   1c844:	strdeq	sl, [r4], -r8
   1c848:	andeq	sl, r4, ip, lsr sp
   1c84c:	andeq	r3, r4, r8, lsl r4
   1c850:	strdeq	sl, [r4], -r0
   1c854:	andeq	sl, r4, r8, asr #27
   1c858:	andeq	sl, r4, r0, lsl #27
   1c85c:	andeq	r1, r4, r8, asr #31
   1c860:	andeq	r1, r4, r0, ror pc
   1c864:	andeq	sl, r4, r8, lsl r1

0001c868 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   1c868:	push	{r4, r5, lr}
   1c86c:	mov	r4, r0
   1c870:	add	r5, r0, #102	; 0x66
   1c874:	sub	sp, sp, #12
   1c878:	mov	r2, r5
   1c87c:	ldr	r1, [pc, #1836]	; 1cfb0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x748>
   1c880:	ldr	r0, [r0, #204]	; 0xcc
   1c884:	bl	13f84 <fprintf@plt>
   1c888:	mov	r2, r5
   1c88c:	ldr	r1, [pc, #1824]	; 1cfb4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x74c>
   1c890:	ldr	r0, [r4, #204]	; 0xcc
   1c894:	bl	13f84 <fprintf@plt>
   1c898:	ldr	r3, [r4, #204]	; 0xcc
   1c89c:	mov	r2, #81	; 0x51
   1c8a0:	mov	r1, #1
   1c8a4:	ldr	r0, [pc, #1804]	; 1cfb8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x750>
   1c8a8:	bl	13f18 <fwrite@plt>
   1c8ac:	ldr	r3, [r4, #204]	; 0xcc
   1c8b0:	mov	r2, #53	; 0x35
   1c8b4:	mov	r1, #1
   1c8b8:	ldr	r0, [pc, #1788]	; 1cfbc <__flatcc_fb_gen_common_c_builder_header@@Base+0x754>
   1c8bc:	bl	13f18 <fwrite@plt>
   1c8c0:	ldr	r2, [r4, #212]	; 0xd4
   1c8c4:	ldr	r3, [r4, #204]	; 0xcc
   1c8c8:	ldr	r2, [r2, #140]	; 0x8c
   1c8cc:	cmp	r2, #0
   1c8d0:	bne	1cf98 <__flatcc_fb_gen_common_c_builder_header@@Base+0x730>
   1c8d4:	mov	r2, #22
   1c8d8:	mov	r1, #1
   1c8dc:	ldr	r0, [pc, #1756]	; 1cfc0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x758>
   1c8e0:	bl	13f18 <fwrite@plt>
   1c8e4:	ldr	r3, [r4, #204]	; 0xcc
   1c8e8:	mov	r2, #35	; 0x23
   1c8ec:	mov	r1, #1
   1c8f0:	ldr	r0, [pc, #1740]	; 1cfc4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x75c>
   1c8f4:	bl	13f18 <fwrite@plt>
   1c8f8:	ldr	r3, [r4, #204]	; 0xcc
   1c8fc:	mov	r2, #7
   1c900:	mov	r1, #1
   1c904:	ldr	r0, [pc, #1724]	; 1cfc8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x760>
   1c908:	bl	13f18 <fwrite@plt>
   1c90c:	ldr	r1, [pc, #1720]	; 1cfcc <__flatcc_fb_gen_common_c_builder_header@@Base+0x764>
   1c910:	mov	r0, r4
   1c914:	bl	13eb8 <strcmp@plt>
   1c918:	cmp	r0, #0
   1c91c:	bne	1cf34 <__flatcc_fb_gen_common_c_builder_header@@Base+0x6cc>
   1c920:	mov	r3, r4
   1c924:	mov	r2, r4
   1c928:	ldr	r1, [pc, #1696]	; 1cfd0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x768>
   1c92c:	ldr	r0, [r4, #204]	; 0xcc
   1c930:	bl	13f84 <fprintf@plt>
   1c934:	mov	r3, r4
   1c938:	mov	r2, r4
   1c93c:	ldr	r1, [pc, #1680]	; 1cfd4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x76c>
   1c940:	ldr	r0, [r4, #204]	; 0xcc
   1c944:	bl	13f84 <fprintf@plt>
   1c948:	ldr	r1, [pc, #1672]	; 1cfd8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x770>
   1c94c:	mov	r0, r4
   1c950:	bl	13eb8 <strcmp@plt>
   1c954:	cmp	r0, #0
   1c958:	bne	1cf10 <__flatcc_fb_gen_common_c_builder_header@@Base+0x6a8>
   1c95c:	ldr	r1, [r4, #204]	; 0xcc
   1c960:	mov	r0, #10
   1c964:	bl	13fe4 <fputc@plt>
   1c968:	mov	r2, r4
   1c96c:	ldr	r1, [pc, #1640]	; 1cfdc <__flatcc_fb_gen_common_c_builder_header@@Base+0x774>
   1c970:	ldr	r0, [r4, #204]	; 0xcc
   1c974:	bl	13f84 <fprintf@plt>
   1c978:	mov	r2, r4
   1c97c:	ldr	r1, [pc, #1628]	; 1cfe0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x778>
   1c980:	ldr	r0, [r4, #204]	; 0xcc
   1c984:	bl	13f84 <fprintf@plt>
   1c988:	mov	r3, r4
   1c98c:	ldr	r0, [r4, #204]	; 0xcc
   1c990:	mov	r2, r4
   1c994:	ldr	r1, [pc, #1608]	; 1cfe4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x77c>
   1c998:	str	r4, [sp]
   1c99c:	bl	13f84 <fprintf@plt>
   1c9a0:	mov	r2, r4
   1c9a4:	ldr	r1, [pc, #1596]	; 1cfe8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x780>
   1c9a8:	ldr	r0, [r4, #204]	; 0xcc
   1c9ac:	bl	13f84 <fprintf@plt>
   1c9b0:	mov	r2, r4
   1c9b4:	ldr	r1, [pc, #1584]	; 1cfec <__flatcc_fb_gen_common_c_builder_header@@Base+0x784>
   1c9b8:	ldr	r0, [r4, #204]	; 0xcc
   1c9bc:	bl	13f84 <fprintf@plt>
   1c9c0:	mov	r2, r4
   1c9c4:	ldr	r1, [pc, #1572]	; 1cff0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x788>
   1c9c8:	ldr	r0, [r4, #204]	; 0xcc
   1c9cc:	bl	13f84 <fprintf@plt>
   1c9d0:	mov	r2, r4
   1c9d4:	ldr	r1, [pc, #1560]	; 1cff4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x78c>
   1c9d8:	ldr	r0, [r4, #204]	; 0xcc
   1c9dc:	bl	13f84 <fprintf@plt>
   1c9e0:	mov	r3, r4
   1c9e4:	mov	r2, r4
   1c9e8:	ldr	r1, [pc, #1544]	; 1cff8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x790>
   1c9ec:	ldr	r0, [r4, #204]	; 0xcc
   1c9f0:	bl	13f84 <fprintf@plt>
   1c9f4:	mov	r3, r4
   1c9f8:	ldr	r0, [r4, #204]	; 0xcc
   1c9fc:	mov	r2, r4
   1ca00:	ldr	r1, [pc, #1524]	; 1cffc <__flatcc_fb_gen_common_c_builder_header@@Base+0x794>
   1ca04:	str	r4, [sp]
   1ca08:	bl	13f84 <fprintf@plt>
   1ca0c:	mov	r2, r4
   1ca10:	ldr	r1, [pc, #1512]	; 1d000 <__flatcc_fb_gen_common_c_builder_header@@Base+0x798>
   1ca14:	ldr	r0, [r4, #204]	; 0xcc
   1ca18:	bl	13f84 <fprintf@plt>
   1ca1c:	mov	r2, r4
   1ca20:	ldr	r1, [pc, #1500]	; 1d004 <__flatcc_fb_gen_common_c_builder_header@@Base+0x79c>
   1ca24:	ldr	r0, [r4, #204]	; 0xcc
   1ca28:	bl	13f84 <fprintf@plt>
   1ca2c:	mov	r2, r4
   1ca30:	ldr	r1, [pc, #1488]	; 1d008 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a0>
   1ca34:	ldr	r0, [r4, #204]	; 0xcc
   1ca38:	bl	13f84 <fprintf@plt>
   1ca3c:	mov	r3, r4
   1ca40:	mov	r2, r4
   1ca44:	ldr	r1, [pc, #1472]	; 1d00c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a4>
   1ca48:	ldr	r0, [r4, #204]	; 0xcc
   1ca4c:	bl	13f84 <fprintf@plt>
   1ca50:	mov	r2, r4
   1ca54:	ldr	r1, [pc, #1460]	; 1d010 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a8>
   1ca58:	ldr	r0, [r4, #204]	; 0xcc
   1ca5c:	bl	13f84 <fprintf@plt>
   1ca60:	ldr	r0, [r4, #204]	; 0xcc
   1ca64:	mov	r3, r4
   1ca68:	mov	r2, r4
   1ca6c:	ldr	r1, [pc, #1440]	; 1d014 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ac>
   1ca70:	str	r4, [sp]
   1ca74:	bl	13f84 <fprintf@plt>
   1ca78:	ldr	r0, [r4, #204]	; 0xcc
   1ca7c:	mov	r3, r4
   1ca80:	mov	r2, r4
   1ca84:	ldr	r1, [pc, #1420]	; 1d018 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b0>
   1ca88:	str	r4, [sp, #4]
   1ca8c:	str	r4, [sp]
   1ca90:	bl	13f84 <fprintf@plt>
   1ca94:	mov	r3, r4
   1ca98:	mov	r2, r4
   1ca9c:	ldr	r1, [pc, #1400]	; 1d01c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b4>
   1caa0:	ldr	r0, [r4, #204]	; 0xcc
   1caa4:	bl	13f84 <fprintf@plt>
   1caa8:	ldr	r0, [r4, #204]	; 0xcc
   1caac:	mov	r3, r4
   1cab0:	mov	r2, r4
   1cab4:	ldr	r1, [pc, #1380]	; 1d020 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b8>
   1cab8:	str	r4, [sp, #4]
   1cabc:	str	r4, [sp]
   1cac0:	bl	13f84 <fprintf@plt>
   1cac4:	mov	r3, r4
   1cac8:	mov	r2, r4
   1cacc:	ldr	r1, [pc, #1360]	; 1d024 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7bc>
   1cad0:	ldr	r0, [r4, #204]	; 0xcc
   1cad4:	bl	13f84 <fprintf@plt>
   1cad8:	mov	r2, r4
   1cadc:	ldr	r1, [pc, #1348]	; 1d028 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c0>
   1cae0:	ldr	r0, [r4, #204]	; 0xcc
   1cae4:	bl	13f84 <fprintf@plt>
   1cae8:	mov	r2, r4
   1caec:	ldr	r1, [pc, #1336]	; 1d02c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c4>
   1caf0:	ldr	r0, [r4, #204]	; 0xcc
   1caf4:	bl	13f84 <fprintf@plt>
   1caf8:	mov	r2, r4
   1cafc:	ldr	r1, [pc, #1324]	; 1d030 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c8>
   1cb00:	ldr	r0, [r4, #204]	; 0xcc
   1cb04:	bl	13f84 <fprintf@plt>
   1cb08:	mov	r2, r4
   1cb0c:	ldr	r1, [pc, #1312]	; 1d034 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7cc>
   1cb10:	ldr	r0, [r4, #204]	; 0xcc
   1cb14:	bl	13f84 <fprintf@plt>
   1cb18:	mov	r3, r4
   1cb1c:	mov	r2, r4
   1cb20:	ldr	r1, [pc, #1296]	; 1d038 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d0>
   1cb24:	ldr	r0, [r4, #204]	; 0xcc
   1cb28:	bl	13f84 <fprintf@plt>
   1cb2c:	mov	r2, r4
   1cb30:	ldr	r1, [pc, #1284]	; 1d03c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d4>
   1cb34:	ldr	r0, [r4, #204]	; 0xcc
   1cb38:	bl	13f84 <fprintf@plt>
   1cb3c:	mov	r2, r4
   1cb40:	ldr	r1, [pc, #1272]	; 1d040 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d8>
   1cb44:	ldr	r0, [r4, #204]	; 0xcc
   1cb48:	bl	13f84 <fprintf@plt>
   1cb4c:	mov	r3, r4
   1cb50:	mov	r2, r4
   1cb54:	ldr	r1, [pc, #1256]	; 1d044 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7dc>
   1cb58:	ldr	r0, [r4, #204]	; 0xcc
   1cb5c:	bl	13f84 <fprintf@plt>
   1cb60:	mov	r3, r4
   1cb64:	mov	r2, r4
   1cb68:	ldr	r1, [pc, #1240]	; 1d048 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e0>
   1cb6c:	ldr	r0, [r4, #204]	; 0xcc
   1cb70:	bl	13f84 <fprintf@plt>
   1cb74:	mov	r3, r4
   1cb78:	mov	r2, r4
   1cb7c:	ldr	r1, [pc, #1224]	; 1d04c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e4>
   1cb80:	ldr	r0, [r4, #204]	; 0xcc
   1cb84:	bl	13f84 <fprintf@plt>
   1cb88:	mov	r3, r4
   1cb8c:	mov	r2, r4
   1cb90:	ldr	r1, [pc, #1208]	; 1d050 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e8>
   1cb94:	ldr	r0, [r4, #204]	; 0xcc
   1cb98:	bl	13f84 <fprintf@plt>
   1cb9c:	ldr	r0, [r4, #204]	; 0xcc
   1cba0:	mov	r3, r4
   1cba4:	mov	r2, r4
   1cba8:	ldr	r1, [pc, #1188]	; 1d054 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ec>
   1cbac:	str	r4, [sp]
   1cbb0:	bl	13f84 <fprintf@plt>
   1cbb4:	mov	r3, r4
   1cbb8:	mov	r2, r4
   1cbbc:	ldr	r1, [pc, #1172]	; 1d058 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f0>
   1cbc0:	ldr	r0, [r4, #204]	; 0xcc
   1cbc4:	bl	13f84 <fprintf@plt>
   1cbc8:	mov	r2, r4
   1cbcc:	ldr	r1, [pc, #1160]	; 1d05c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f4>
   1cbd0:	ldr	r0, [r4, #204]	; 0xcc
   1cbd4:	bl	13f84 <fprintf@plt>
   1cbd8:	mov	r2, r4
   1cbdc:	ldr	r1, [pc, #1148]	; 1d060 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f8>
   1cbe0:	ldr	r0, [r4, #204]	; 0xcc
   1cbe4:	bl	13f84 <fprintf@plt>
   1cbe8:	mov	r2, r4
   1cbec:	ldr	r1, [pc, #1136]	; 1d064 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7fc>
   1cbf0:	ldr	r0, [r4, #204]	; 0xcc
   1cbf4:	bl	13f84 <fprintf@plt>
   1cbf8:	mov	r3, r4
   1cbfc:	ldr	r0, [r4, #204]	; 0xcc
   1cc00:	mov	r2, r4
   1cc04:	ldr	r1, [pc, #1116]	; 1d068 <__flatcc_fb_gen_common_c_builder_header@@Base+0x800>
   1cc08:	str	r4, [sp]
   1cc0c:	bl	13f84 <fprintf@plt>
   1cc10:	mov	r2, r4
   1cc14:	ldr	r1, [pc, #1104]	; 1d06c <__flatcc_fb_gen_common_c_builder_header@@Base+0x804>
   1cc18:	ldr	r0, [r4, #204]	; 0xcc
   1cc1c:	bl	13f84 <fprintf@plt>
   1cc20:	mov	r2, r4
   1cc24:	ldr	r1, [pc, #1092]	; 1d070 <__flatcc_fb_gen_common_c_builder_header@@Base+0x808>
   1cc28:	ldr	r0, [r4, #204]	; 0xcc
   1cc2c:	bl	13f84 <fprintf@plt>
   1cc30:	mov	r2, r4
   1cc34:	ldr	r1, [pc, #1080]	; 1d074 <__flatcc_fb_gen_common_c_builder_header@@Base+0x80c>
   1cc38:	ldr	r0, [r4, #204]	; 0xcc
   1cc3c:	bl	13f84 <fprintf@plt>
   1cc40:	mov	r2, r4
   1cc44:	ldr	r1, [pc, #1068]	; 1d078 <__flatcc_fb_gen_common_c_builder_header@@Base+0x810>
   1cc48:	ldr	r0, [r4, #204]	; 0xcc
   1cc4c:	bl	13f84 <fprintf@plt>
   1cc50:	mov	r3, r4
   1cc54:	mov	r2, r4
   1cc58:	ldr	r1, [pc, #1052]	; 1d07c <__flatcc_fb_gen_common_c_builder_header@@Base+0x814>
   1cc5c:	ldr	r0, [r4, #204]	; 0xcc
   1cc60:	bl	13f84 <fprintf@plt>
   1cc64:	mov	r2, r4
   1cc68:	ldr	r1, [pc, #1040]	; 1d080 <__flatcc_fb_gen_common_c_builder_header@@Base+0x818>
   1cc6c:	ldr	r0, [r4, #204]	; 0xcc
   1cc70:	bl	13f84 <fprintf@plt>
   1cc74:	mov	r2, r4
   1cc78:	ldr	r1, [pc, #1028]	; 1d084 <__flatcc_fb_gen_common_c_builder_header@@Base+0x81c>
   1cc7c:	ldr	r0, [r4, #204]	; 0xcc
   1cc80:	bl	13f84 <fprintf@plt>
   1cc84:	mov	r2, r4
   1cc88:	ldr	r1, [pc, #1016]	; 1d088 <__flatcc_fb_gen_common_c_builder_header@@Base+0x820>
   1cc8c:	ldr	r0, [r4, #204]	; 0xcc
   1cc90:	bl	13f84 <fprintf@plt>
   1cc94:	mov	r2, r4
   1cc98:	ldr	r1, [pc, #1004]	; 1d08c <__flatcc_fb_gen_common_c_builder_header@@Base+0x824>
   1cc9c:	ldr	r0, [r4, #204]	; 0xcc
   1cca0:	bl	13f84 <fprintf@plt>
   1cca4:	mov	r2, r4
   1cca8:	ldr	r1, [pc, #992]	; 1d090 <__flatcc_fb_gen_common_c_builder_header@@Base+0x828>
   1ccac:	ldr	r0, [r4, #204]	; 0xcc
   1ccb0:	bl	13f84 <fprintf@plt>
   1ccb4:	mov	r2, r4
   1ccb8:	ldr	r1, [pc, #980]	; 1d094 <__flatcc_fb_gen_common_c_builder_header@@Base+0x82c>
   1ccbc:	ldr	r0, [r4, #204]	; 0xcc
   1ccc0:	bl	13f84 <fprintf@plt>
   1ccc4:	mov	r2, r4
   1ccc8:	ldr	r1, [pc, #968]	; 1d098 <__flatcc_fb_gen_common_c_builder_header@@Base+0x830>
   1cccc:	ldr	r0, [r4, #204]	; 0xcc
   1ccd0:	bl	13f84 <fprintf@plt>
   1ccd4:	mov	r2, r4
   1ccd8:	ldr	r1, [pc, #956]	; 1d09c <__flatcc_fb_gen_common_c_builder_header@@Base+0x834>
   1ccdc:	ldr	r0, [r4, #204]	; 0xcc
   1cce0:	bl	13f84 <fprintf@plt>
   1cce4:	mov	r2, r4
   1cce8:	ldr	r1, [pc, #944]	; 1d0a0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x838>
   1ccec:	ldr	r0, [r4, #204]	; 0xcc
   1ccf0:	bl	13f84 <fprintf@plt>
   1ccf4:	mov	r2, r4
   1ccf8:	ldr	r1, [pc, #932]	; 1d0a4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x83c>
   1ccfc:	ldr	r0, [r4, #204]	; 0xcc
   1cd00:	bl	13f84 <fprintf@plt>
   1cd04:	mov	r2, r4
   1cd08:	ldr	r1, [pc, #920]	; 1d0a8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x840>
   1cd0c:	ldr	r0, [r4, #204]	; 0xcc
   1cd10:	bl	13f84 <fprintf@plt>
   1cd14:	mov	r2, r4
   1cd18:	ldr	r1, [pc, #908]	; 1d0ac <__flatcc_fb_gen_common_c_builder_header@@Base+0x844>
   1cd1c:	ldr	r0, [r4, #204]	; 0xcc
   1cd20:	bl	13f84 <fprintf@plt>
   1cd24:	mov	r2, r4
   1cd28:	ldr	r1, [pc, #896]	; 1d0b0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x848>
   1cd2c:	ldr	r0, [r4, #204]	; 0xcc
   1cd30:	bl	13f84 <fprintf@plt>
   1cd34:	mov	r2, r4
   1cd38:	ldr	r1, [pc, #884]	; 1d0b4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x84c>
   1cd3c:	ldr	r0, [r4, #204]	; 0xcc
   1cd40:	bl	13f84 <fprintf@plt>
   1cd44:	mov	r2, r4
   1cd48:	ldr	r1, [pc, #872]	; 1d0b8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x850>
   1cd4c:	ldr	r0, [r4, #204]	; 0xcc
   1cd50:	bl	13f84 <fprintf@plt>
   1cd54:	mov	r2, r4
   1cd58:	ldr	r1, [pc, #860]	; 1d0bc <__flatcc_fb_gen_common_c_builder_header@@Base+0x854>
   1cd5c:	ldr	r0, [r4, #204]	; 0xcc
   1cd60:	bl	13f84 <fprintf@plt>
   1cd64:	mov	r2, r4
   1cd68:	ldr	r1, [pc, #848]	; 1d0c0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x858>
   1cd6c:	ldr	r0, [r4, #204]	; 0xcc
   1cd70:	bl	13f84 <fprintf@plt>
   1cd74:	ldr	r1, [r4, #204]	; 0xcc
   1cd78:	mov	r0, #10
   1cd7c:	bl	13fe4 <fputc@plt>
   1cd80:	ldr	r0, [r4, #204]	; 0xcc
   1cd84:	mov	r3, r4
   1cd88:	mov	r2, r4
   1cd8c:	ldr	r1, [pc, #816]	; 1d0c4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x85c>
   1cd90:	str	r4, [sp]
   1cd94:	bl	13f84 <fprintf@plt>
   1cd98:	ldr	r0, [r4, #204]	; 0xcc
   1cd9c:	mov	r3, r4
   1cda0:	mov	r2, r4
   1cda4:	ldr	r1, [pc, #796]	; 1d0c8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x860>
   1cda8:	str	r4, [sp]
   1cdac:	bl	13f84 <fprintf@plt>
   1cdb0:	ldr	r0, [r4, #204]	; 0xcc
   1cdb4:	mov	r3, r4
   1cdb8:	mov	r2, r4
   1cdbc:	ldr	r1, [pc, #776]	; 1d0cc <__flatcc_fb_gen_common_c_builder_header@@Base+0x864>
   1cdc0:	str	r4, [sp, #4]
   1cdc4:	str	r4, [sp]
   1cdc8:	bl	13f84 <fprintf@plt>
   1cdcc:	ldr	r0, [r4, #204]	; 0xcc
   1cdd0:	mov	r3, r4
   1cdd4:	mov	r2, r4
   1cdd8:	ldr	r1, [pc, #752]	; 1d0d0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x868>
   1cddc:	str	r4, [sp]
   1cde0:	bl	13f84 <fprintf@plt>
   1cde4:	ldr	r0, [r4, #204]	; 0xcc
   1cde8:	mov	r3, r4
   1cdec:	mov	r2, r4
   1cdf0:	ldr	r1, [pc, #732]	; 1d0d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x86c>
   1cdf4:	str	r4, [sp]
   1cdf8:	bl	13f84 <fprintf@plt>
   1cdfc:	ldr	r0, [r4, #204]	; 0xcc
   1ce00:	mov	r3, r4
   1ce04:	mov	r2, r4
   1ce08:	ldr	r1, [pc, #712]	; 1d0d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x870>
   1ce0c:	str	r4, [sp]
   1ce10:	bl	13f84 <fprintf@plt>
   1ce14:	ldr	r0, [r4, #204]	; 0xcc
   1ce18:	mov	r3, r4
   1ce1c:	mov	r2, r4
   1ce20:	ldr	r1, [pc, #692]	; 1d0dc <__flatcc_fb_gen_common_c_builder_header@@Base+0x874>
   1ce24:	str	r4, [sp]
   1ce28:	bl	13f84 <fprintf@plt>
   1ce2c:	ldr	r0, [r4, #204]	; 0xcc
   1ce30:	mov	r3, r4
   1ce34:	mov	r2, r4
   1ce38:	ldr	r1, [pc, #672]	; 1d0e0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x878>
   1ce3c:	str	r4, [sp]
   1ce40:	bl	13f84 <fprintf@plt>
   1ce44:	ldr	r0, [r4, #204]	; 0xcc
   1ce48:	mov	r3, r4
   1ce4c:	mov	r2, r4
   1ce50:	ldr	r1, [pc, #652]	; 1d0e4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x87c>
   1ce54:	str	r4, [sp]
   1ce58:	bl	13f84 <fprintf@plt>
   1ce5c:	ldr	r0, [r4, #204]	; 0xcc
   1ce60:	mov	r3, r4
   1ce64:	mov	r2, r4
   1ce68:	ldr	r1, [pc, #632]	; 1d0e8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x880>
   1ce6c:	str	r4, [sp]
   1ce70:	bl	13f84 <fprintf@plt>
   1ce74:	mov	r3, r4
   1ce78:	mov	r2, r4
   1ce7c:	ldr	r0, [r4, #204]	; 0xcc
   1ce80:	ldr	r1, [pc, #612]	; 1d0ec <__flatcc_fb_gen_common_c_builder_header@@Base+0x884>
   1ce84:	str	r4, [sp]
   1ce88:	bl	13f84 <fprintf@plt>
   1ce8c:	ldr	r1, [r4, #204]	; 0xcc
   1ce90:	mov	r0, #10
   1ce94:	bl	13fe4 <fputc@plt>
   1ce98:	mov	r3, r4
   1ce9c:	mov	r2, r4
   1cea0:	ldr	r1, [pc, #584]	; 1d0f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x888>
   1cea4:	ldr	r0, [r4, #204]	; 0xcc
   1cea8:	bl	13f84 <fprintf@plt>
   1ceac:	ldr	r1, [r4, #204]	; 0xcc
   1ceb0:	mov	r0, #10
   1ceb4:	bl	13fe4 <fputc@plt>
   1ceb8:	mov	r3, r4
   1cebc:	mov	r2, r4
   1cec0:	ldr	r1, [pc, #556]	; 1d0f4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x88c>
   1cec4:	ldr	r0, [r4, #204]	; 0xcc
   1cec8:	bl	13f84 <fprintf@plt>
   1cecc:	ldr	r3, [r4, #212]	; 0xd4
   1ced0:	ldr	r0, [r4, #204]	; 0xcc
   1ced4:	ldr	r3, [r3, #140]	; 0x8c
   1ced8:	cmp	r3, #0
   1cedc:	beq	1cef8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x690>
   1cee0:	mov	r3, r0
   1cee4:	mov	r2, #36	; 0x24
   1cee8:	mov	r1, #1
   1ceec:	ldr	r0, [pc, #516]	; 1d0f8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x890>
   1cef0:	bl	13f18 <fwrite@plt>
   1cef4:	ldr	r0, [r4, #204]	; 0xcc
   1cef8:	mov	r2, r5
   1cefc:	ldr	r1, [pc, #504]	; 1d0fc <__flatcc_fb_gen_common_c_builder_header@@Base+0x894>
   1cf00:	bl	13f84 <fprintf@plt>
   1cf04:	mov	r0, #0
   1cf08:	add	sp, sp, #12
   1cf0c:	pop	{r4, r5, pc}
   1cf10:	mov	r2, r4
   1cf14:	ldr	r1, [pc, #484]	; 1d100 <__flatcc_fb_gen_common_c_builder_header@@Base+0x898>
   1cf18:	ldr	r0, [r4, #204]	; 0xcc
   1cf1c:	bl	13f84 <fprintf@plt>
   1cf20:	mov	r2, r4
   1cf24:	ldr	r1, [pc, #472]	; 1d104 <__flatcc_fb_gen_common_c_builder_header@@Base+0x89c>
   1cf28:	ldr	r0, [r4, #204]	; 0xcc
   1cf2c:	bl	13f84 <fprintf@plt>
   1cf30:	b	1c95c <__flatcc_fb_gen_common_c_builder_header@@Base+0xf4>
   1cf34:	mov	r2, r4
   1cf38:	ldr	r1, [pc, #456]	; 1d108 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8a0>
   1cf3c:	ldr	r0, [r4, #204]	; 0xcc
   1cf40:	bl	13f84 <fprintf@plt>
   1cf44:	mov	r2, r4
   1cf48:	ldr	r1, [pc, #444]	; 1d10c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8a4>
   1cf4c:	ldr	r0, [r4, #204]	; 0xcc
   1cf50:	bl	13f84 <fprintf@plt>
   1cf54:	mov	r2, r4
   1cf58:	ldr	r1, [pc, #432]	; 1d110 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8a8>
   1cf5c:	ldr	r0, [r4, #204]	; 0xcc
   1cf60:	bl	13f84 <fprintf@plt>
   1cf64:	mov	r2, r4
   1cf68:	ldr	r1, [pc, #420]	; 1d114 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8ac>
   1cf6c:	ldr	r0, [r4, #204]	; 0xcc
   1cf70:	bl	13f84 <fprintf@plt>
   1cf74:	mov	r2, r4
   1cf78:	ldr	r1, [pc, #408]	; 1d118 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b0>
   1cf7c:	ldr	r0, [r4, #204]	; 0xcc
   1cf80:	bl	13f84 <fprintf@plt>
   1cf84:	mov	r2, r4
   1cf88:	ldr	r1, [pc, #396]	; 1d11c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b4>
   1cf8c:	ldr	r0, [r4, #204]	; 0xcc
   1cf90:	bl	13f84 <fprintf@plt>
   1cf94:	b	1c920 <__flatcc_fb_gen_common_c_builder_header@@Base+0xb8>
   1cf98:	mov	r2, #36	; 0x24
   1cf9c:	mov	r1, #1
   1cfa0:	ldr	r0, [pc, #376]	; 1d120 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b8>
   1cfa4:	bl	13f18 <fwrite@plt>
   1cfa8:	ldr	r3, [r4, #204]	; 0xcc
   1cfac:	b	1c8d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x6c>
   1cfb0:	andeq	sl, r4, r0, asr #29
   1cfb4:	andeq	sl, r4, r0, ror #29
   1cfb8:			; <UNDEFINED> instruction: 0x000432b4
   1cfbc:	andeq	sl, r4, r0, lsl #30
   1cfc0:	andeq	sl, r4, r8, lsr pc
   1cfc4:	andeq	sl, r4, r0, asr pc
   1cfc8:	muleq	r4, r0, r4
   1cfcc:	andeq	sl, r4, r4, ror pc
   1cfd0:	andeq	fp, r4, r8, asr #1
   1cfd4:	andeq	fp, r4, r4, ror #1
   1cfd8:	andeq	r3, r4, ip, lsl r4
   1cfdc:	andeq	fp, r4, r4, ror #2
   1cfe0:	ldrdeq	fp, [r4], -r8
   1cfe4:	andeq	fp, r4, r4, lsr #23
   1cfe8:	andeq	fp, r4, r0, lsr ip
   1cfec:	andeq	ip, r4, ip, ror #13
   1cff0:	andeq	ip, r4, r8, asr #21
   1cff4:	andeq	sp, r4, r0, lsl #2
   1cff8:	andeq	sp, r4, ip, ror r5
   1cffc:	strdeq	sp, [r4], -r0
   1d000:	andeq	lr, r4, r8, lsr r2
   1d004:			; <UNDEFINED> instruction: 0x0004e6b8
   1d008:	andeq	lr, r4, r8, asr #16
   1d00c:	andeq	lr, r4, r4, lsr #23
   1d010:	andeq	lr, r4, ip, lsr #27
   1d014:	andeq	pc, r4, r8, lsl r1	; <UNPREDICTABLE>
   1d018:	andeq	pc, r4, r4, lsl r6	; <UNPREDICTABLE>
   1d01c:	andeq	pc, r4, r0, lsr #14
   1d020:	andeq	pc, r4, r8, lsl #21
   1d024:	andeq	r0, r5, r8, lsl #1
   1d028:	andeq	r0, r5, ip, lsr r2
   1d02c:	andeq	r0, r5, r4, ror #8
   1d030:	andeq	r0, r5, r4, lsr #16
   1d034:	andeq	r0, r5, r4, ror #21
   1d038:	strdeq	r0, [r5], -r8
   1d03c:	andeq	r0, r5, r4, ror #31
   1d040:	andeq	r1, r5, r8, asr #4
   1d044:	andeq	r1, r5, r0, asr #11
   1d048:	andeq	r1, r5, r0, lsl sl
   1d04c:	andeq	r1, r5, r8, lsr #25
   1d050:	andeq	r2, r5, r4, lsr #1
   1d054:			; <UNDEFINED> instruction: 0x000521b0
   1d058:	andeq	r2, r5, ip, lsr r2
   1d05c:	andeq	r2, r5, r8, lsl #11
   1d060:	andeq	r2, r5, r0, lsl r8
   1d064:	andeq	r2, r5, r0, lsr #21
   1d068:	andeq	r3, r5, r8, asr r0
   1d06c:	andeq	r3, r5, r8, ror #1
   1d070:	andeq	r3, r5, r4, lsl r1
   1d074:	andeq	r3, r5, r8, lsr r1
   1d078:	andeq	r3, r5, r4, ror #2
   1d07c:	andeq	r3, r5, r8, lsl #3
   1d080:			; <UNDEFINED> instruction: 0x000531b4
   1d084:	ldrdeq	r3, [r5], -r8
   1d088:	andeq	r3, r5, r8, lsl #4
   1d08c:	andeq	r3, r5, ip, lsr #4
   1d090:	andeq	r3, r5, ip, asr r2
   1d094:	andeq	r3, r5, r0, lsl #5
   1d098:			; <UNDEFINED> instruction: 0x000532b0
   1d09c:	ldrdeq	r3, [r5], -r4
   1d0a0:	andeq	r3, r5, r0, lsl #6
   1d0a4:	andeq	r3, r5, r4, lsr #6
   1d0a8:	andeq	r3, r5, r0, asr r3
   1d0ac:	andeq	r3, r5, r4, ror r3
   1d0b0:	andeq	r3, r5, r0, lsr #7
   1d0b4:	andeq	r3, r5, r4, asr #7
   1d0b8:	strdeq	r3, [r5], -r0
   1d0bc:	andeq	r3, r5, r4, lsl r4
   1d0c0:	andeq	r3, r5, r0, asr #8
   1d0c4:	andeq	r3, r5, r4, ror #8
   1d0c8:	andeq	r3, r5, ip, lsl #9
   1d0cc:			; <UNDEFINED> instruction: 0x000534b4
   1d0d0:	ldrdeq	r3, [r5], -ip
   1d0d4:	andeq	r3, r5, r8, lsl #10
   1d0d8:	andeq	r3, r5, r4, lsr r5
   1d0dc:	andeq	r3, r5, r0, ror #10
   1d0e0:	andeq	r3, r5, r8, lsl #11
   1d0e4:			; <UNDEFINED> instruction: 0x000535b0
   1d0e8:	ldrdeq	r3, [r5], -r8
   1d0ec:	andeq	r3, r5, r0, lsl #12
   1d0f0:	andeq	r3, r5, r8, lsr #12
   1d0f4:	andeq	r3, r5, r0, asr #12
   1d0f8:	andeq	r9, r4, ip, lsr #4
   1d0fc:	andeq	r3, r5, r8, asr r6
   1d100:	andeq	fp, r4, ip, lsl #2
   1d104:	andeq	fp, r4, r0, asr #2
   1d108:	andeq	sl, r4, r4, lsl #31
   1d10c:	andeq	sl, r4, ip, lsr #31
   1d110:	ldrdeq	sl, [r4], -r4
   1d114:	andeq	fp, r4, r0
   1d118:	andeq	fp, r4, r4, lsr r0
   1d11c:	andeq	fp, r4, r0, ror r0
   1d120:	andeq	r3, r4, r8, asr #7

0001d124 <__flatcc_fb_gen_c_builder@@Base>:
   1d124:	ldr	r3, [r0, #208]	; 0xd0
   1d128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d12c:	mov	fp, r0
   1d130:	ldr	r3, [r3, #164]	; 0xa4
   1d134:	sub	sp, sp, #308	; 0x134
   1d138:	mov	r2, r3
   1d13c:	ldr	r1, [pc, #3380]	; 1de78 <__flatcc_fb_gen_c_builder@@Base+0xd54>
   1d140:	ldr	r0, [r0, #204]	; 0xcc
   1d144:	bl	13f84 <fprintf@plt>
   1d148:	ldr	r3, [fp, #204]	; 0xcc
   1d14c:	mov	r2, #81	; 0x51
   1d150:	mov	r1, #1
   1d154:	ldr	r0, [pc, #3360]	; 1de7c <__flatcc_fb_gen_c_builder@@Base+0xd58>
   1d158:	bl	13f18 <fwrite@plt>
   1d15c:	ldr	r3, [fp, #208]	; 0xd0
   1d160:	ldr	r1, [pc, #3352]	; 1de80 <__flatcc_fb_gen_c_builder@@Base+0xd5c>
   1d164:	ldr	r0, [fp, #204]	; 0xcc
   1d168:	ldr	r2, [r3, #164]	; 0xa4
   1d16c:	bl	13f84 <fprintf@plt>
   1d170:	ldr	r3, [fp, #208]	; 0xd0
   1d174:	ldr	r1, [pc, #3336]	; 1de84 <__flatcc_fb_gen_c_builder@@Base+0xd60>
   1d178:	ldr	r0, [fp, #204]	; 0xcc
   1d17c:	ldr	r2, [r3, #160]	; 0xa0
   1d180:	bl	13f84 <fprintf@plt>
   1d184:	ldr	r3, [fp, #204]	; 0xcc
   1d188:	mov	r2, #7
   1d18c:	mov	r1, #1
   1d190:	ldr	r0, [pc, #3312]	; 1de88 <__flatcc_fb_gen_c_builder@@Base+0xd64>
   1d194:	bl	13f18 <fwrite@plt>
   1d198:	add	r2, fp, #102	; 0x66
   1d19c:	ldr	r1, [pc, #3304]	; 1de8c <__flatcc_fb_gen_c_builder@@Base+0xd68>
   1d1a0:	ldr	r0, [fp, #204]	; 0xcc
   1d1a4:	bl	13f84 <fprintf@plt>
   1d1a8:	mov	r2, fp
   1d1ac:	ldr	r1, [pc, #3292]	; 1de90 <__flatcc_fb_gen_c_builder@@Base+0xd6c>
   1d1b0:	ldr	r0, [fp, #204]	; 0xcc
   1d1b4:	bl	13f84 <fprintf@plt>
   1d1b8:	ldr	r3, [fp, #204]	; 0xcc
   1d1bc:	mov	r2, #7
   1d1c0:	mov	r1, #1
   1d1c4:	ldr	r0, [pc, #3260]	; 1de88 <__flatcc_fb_gen_c_builder@@Base+0xd64>
   1d1c8:	bl	13f18 <fwrite@plt>
   1d1cc:	mov	r0, fp
   1d1d0:	ldr	r2, [pc, #3260]	; 1de94 <__flatcc_fb_gen_c_builder@@Base+0xd70>
   1d1d4:	ldr	r1, [pc, #3260]	; 1de98 <__flatcc_fb_gen_c_builder@@Base+0xd74>
   1d1d8:	bl	150e4 <__flatcc_fb_gen_c_includes@@Base>
   1d1dc:	ldr	r3, [fp, #212]	; 0xd4
   1d1e0:	ldr	r0, [fp, #204]	; 0xcc
   1d1e4:	ldr	r3, [r3, #140]	; 0x8c
   1d1e8:	cmp	r3, #0
   1d1ec:	bne	1dacc <__flatcc_fb_gen_c_builder@@Base+0x9a8>
   1d1f0:	ldr	r3, [fp, #208]	; 0xd0
   1d1f4:	ldrh	r2, [r3, #16]
   1d1f8:	cmp	r2, #2
   1d1fc:	beq	1daf4 <__flatcc_fb_gen_c_builder@@Base+0x9d0>
   1d200:	mov	r3, fp
   1d204:	mov	r2, fp
   1d208:	ldr	r1, [pc, #3212]	; 1de9c <__flatcc_fb_gen_c_builder@@Base+0xd78>
   1d20c:	bl	13f84 <fprintf@plt>
   1d210:	ldr	r3, [fp, #208]	; 0xd0
   1d214:	ldrh	r2, [r3, #32]
   1d218:	cmp	r2, #2
   1d21c:	beq	1db24 <__flatcc_fb_gen_c_builder@@Base+0xa00>
   1d220:	ldr	r2, [fp, #212]	; 0xd4
   1d224:	ldr	r0, [fp, #204]	; 0xcc
   1d228:	mov	r3, fp
   1d22c:	ldr	r2, [r2, #104]	; 0x68
   1d230:	ldr	r1, [pc, #3176]	; 1dea0 <__flatcc_fb_gen_c_builder@@Base+0xd7c>
   1d234:	str	r2, [sp]
   1d238:	mov	r2, fp
   1d23c:	bl	13f84 <fprintf@plt>
   1d240:	ldr	r1, [fp, #204]	; 0xcc
   1d244:	mov	r0, #10
   1d248:	add	sl, sp, #84	; 0x54
   1d24c:	bl	13fe4 <fputc@plt>
   1d250:	mov	r0, sl
   1d254:	mov	r2, #220	; 0xdc
   1d258:	mov	r1, #0
   1d25c:	bl	13f9c <memset@plt>
   1d260:	ldr	r3, [fp, #208]	; 0xd0
   1d264:	ldr	r4, [r3, #40]	; 0x28
   1d268:	cmp	r4, #0
   1d26c:	beq	1d308 <__flatcc_fb_gen_c_builder@@Base+0x1e4>
   1d270:	ldr	r7, [pc, #3116]	; 1dea4 <__flatcc_fb_gen_c_builder@@Base+0xd80>
   1d274:	ldr	r6, [pc, #3116]	; 1dea8 <__flatcc_fb_gen_c_builder@@Base+0xd84>
   1d278:	mov	r2, #0
   1d27c:	mov	r5, #1
   1d280:	b	1d290 <__flatcc_fb_gen_c_builder@@Base+0x16c>
   1d284:	ldr	r4, [r4]
   1d288:	cmp	r4, #0
   1d28c:	beq	1d2f0 <__flatcc_fb_gen_c_builder@@Base+0x1cc>
   1d290:	ldrh	r3, [r4, #8]
   1d294:	cmp	r3, #3
   1d298:	bne	1d284 <__flatcc_fb_gen_c_builder@@Base+0x160>
   1d29c:	mov	r1, r4
   1d2a0:	ldr	r0, [r4, #12]
   1d2a4:	mov	r2, sl
   1d2a8:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1d2ac:	ldr	r0, [fp, #204]	; 0xcc
   1d2b0:	mov	r3, sl
   1d2b4:	mov	r2, sl
   1d2b8:	mov	r1, r7
   1d2bc:	str	sl, [sp]
   1d2c0:	bl	13f84 <fprintf@plt>
   1d2c4:	ldr	r0, [fp, #204]	; 0xcc
   1d2c8:	mov	r2, fp
   1d2cc:	str	sl, [sp, #4]
   1d2d0:	str	sl, [sp]
   1d2d4:	mov	r3, fp
   1d2d8:	mov	r1, r6
   1d2dc:	bl	13f84 <fprintf@plt>
   1d2e0:	ldr	r4, [r4]
   1d2e4:	mov	r2, r5
   1d2e8:	cmp	r4, #0
   1d2ec:	bne	1d290 <__flatcc_fb_gen_c_builder@@Base+0x16c>
   1d2f0:	cmp	r2, #0
   1d2f4:	beq	1d304 <__flatcc_fb_gen_c_builder@@Base+0x1e0>
   1d2f8:	ldr	r1, [fp, #204]	; 0xcc
   1d2fc:	mov	r0, #10
   1d300:	bl	13fe4 <fputc@plt>
   1d304:	ldr	r3, [fp, #208]	; 0xd0
   1d308:	ldr	r3, [r3, #44]	; 0x2c
   1d30c:	cmp	r3, #0
   1d310:	str	r3, [sp, #36]	; 0x24
   1d314:	movne	r9, fp
   1d318:	beq	1d81c <__flatcc_fb_gen_c_builder@@Base+0x6f8>
   1d31c:	mov	r2, #220	; 0xdc
   1d320:	mov	r1, #0
   1d324:	mov	r0, sl
   1d328:	bl	13f9c <memset@plt>
   1d32c:	ldr	r3, [sp, #36]	; 0x24
   1d330:	ldrh	r3, [r3, #8]
   1d334:	cmp	r3, #1
   1d338:	bne	1de5c <__flatcc_fb_gen_c_builder@@Base+0xd38>
   1d33c:	ldr	r4, [sp, #36]	; 0x24
   1d340:	mov	r2, sl
   1d344:	mov	r1, r4
   1d348:	ldr	r0, [r4, #12]
   1d34c:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1d350:	ldr	r4, [r4, #20]
   1d354:	cmp	r4, #0
   1d358:	beq	1d9ec <__flatcc_fb_gen_c_builder@@Base+0x8c8>
   1d35c:	mov	fp, #0
   1d360:	str	r9, [sp, #40]	; 0x28
   1d364:	ldrh	r3, [r4, #72]	; 0x48
   1d368:	ands	r3, r3, #4
   1d36c:	bne	1d390 <__flatcc_fb_gen_c_builder@@Base+0x26c>
   1d370:	ldrh	r2, [r4, #24]
   1d374:	cmp	r2, #14
   1d378:	bne	1d38c <__flatcc_fb_gen_c_builder@@Base+0x268>
   1d37c:	ldr	r2, [r4, #16]
   1d380:	ldrh	r1, [r2, #8]
   1d384:	cmp	r1, #1
   1d388:	beq	1d8d0 <__flatcc_fb_gen_c_builder@@Base+0x7ac>
   1d38c:	add	fp, fp, #1
   1d390:	ldr	r4, [r4]
   1d394:	cmp	r4, #0
   1d398:	bne	1d364 <__flatcc_fb_gen_c_builder@@Base+0x240>
   1d39c:	ldr	r9, [sp, #40]	; 0x28
   1d3a0:	mov	r2, sl
   1d3a4:	ldr	r1, [pc, #2816]	; 1deac <__flatcc_fb_gen_c_builder@@Base+0xd88>
   1d3a8:	ldr	r0, [r9, #204]	; 0xcc
   1d3ac:	bl	13f84 <fprintf@plt>
   1d3b0:	ldr	r4, [sp, #36]	; 0x24
   1d3b4:	mov	r2, #0
   1d3b8:	add	r3, r4, #20
   1d3bc:	mov	r1, r3
   1d3c0:	str	r3, [sp, #40]	; 0x28
   1d3c4:	mov	r3, #1
   1d3c8:	str	r3, [sp]
   1d3cc:	mov	r0, r9
   1d3d0:	mov	r3, fp
   1d3d4:	bl	19e60 <__flatcc_gen_sort@@Base+0x350>
   1d3d8:	ldr	r0, [r9, #204]	; 0xcc
   1d3dc:	mov	r2, sl
   1d3e0:	ldr	r1, [pc, #2760]	; 1deb0 <__flatcc_fb_gen_c_builder@@Base+0xd8c>
   1d3e4:	bl	13f84 <fprintf@plt>
   1d3e8:	ldr	r4, [r4, #20]
   1d3ec:	cmp	r4, #0
   1d3f0:	movne	r8, #0
   1d3f4:	strne	r9, [sp, #48]	; 0x30
   1d3f8:	strne	fp, [sp, #44]	; 0x2c
   1d3fc:	movne	r9, r8
   1d400:	beq	1d54c <__flatcc_fb_gen_c_builder@@Base+0x428>
   1d404:	ldrh	r3, [r4, #72]	; 0x48
   1d408:	ands	r3, r3, #4
   1d40c:	bne	1d430 <__flatcc_fb_gen_c_builder@@Base+0x30c>
   1d410:	ldrh	r2, [r4, #24]
   1d414:	cmp	r2, #14
   1d418:	bne	1d42c <__flatcc_fb_gen_c_builder@@Base+0x308>
   1d41c:	ldr	r2, [r4, #16]
   1d420:	ldrh	r1, [r2, #8]
   1d424:	cmp	r1, #1
   1d428:	beq	1d86c <__flatcc_fb_gen_c_builder@@Base+0x748>
   1d42c:	add	r9, r9, #1
   1d430:	ldr	r4, [r4]
   1d434:	cmp	r4, #0
   1d438:	bne	1d404 <__flatcc_fb_gen_c_builder@@Base+0x2e0>
   1d43c:	mov	r8, r9
   1d440:	cmp	r8, #0
   1d444:	ldr	fp, [sp, #44]	; 0x2c
   1d448:	ldr	r9, [sp, #48]	; 0x30
   1d44c:	ble	1d54c <__flatcc_fb_gen_c_builder@@Base+0x428>
   1d450:	cmp	fp, #0
   1d454:	beq	1d52c <__flatcc_fb_gen_c_builder@@Base+0x408>
   1d458:	cmp	fp, #4
   1d45c:	mov	r6, #2
   1d460:	mov	r5, #1
   1d464:	bgt	1d4f8 <__flatcc_fb_gen_c_builder@@Base+0x3d4>
   1d468:	b	1d49c <__flatcc_fb_gen_c_builder@@Base+0x378>
   1d46c:	ldr	r3, [r9, #204]	; 0xcc
   1d470:	mov	r2, r6
   1d474:	mov	r1, r5
   1d478:	ldr	r0, [pc, #2612]	; 1deb4 <__flatcc_fb_gen_c_builder@@Base+0xd90>
   1d47c:	bl	13f18 <fwrite@plt>
   1d480:	mov	r2, r4
   1d484:	ldr	r1, [pc, #2604]	; 1deb8 <__flatcc_fb_gen_c_builder@@Base+0xd94>
   1d488:	add	r4, r4, #1
   1d48c:	ldr	r0, [r9, #204]	; 0xcc
   1d490:	bl	13f84 <fprintf@plt>
   1d494:	cmp	r8, r4
   1d498:	beq	1d54c <__flatcc_fb_gen_c_builder@@Base+0x428>
   1d49c:	cmp	r4, #0
   1d4a0:	beq	1d46c <__flatcc_fb_gen_c_builder@@Base+0x348>
   1d4a4:	tst	r4, #3
   1d4a8:	bne	1d46c <__flatcc_fb_gen_c_builder@@Base+0x348>
   1d4ac:	sub	r3, fp, r4
   1d4b0:	cmp	r3, #2
   1d4b4:	ble	1d46c <__flatcc_fb_gen_c_builder@@Base+0x348>
   1d4b8:	ldr	r2, [pc, #2556]	; 1debc <__flatcc_fb_gen_c_builder@@Base+0xd98>
   1d4bc:	ldr	r1, [pc, #2556]	; 1dec0 <__flatcc_fb_gen_c_builder@@Base+0xd9c>
   1d4c0:	ldr	r0, [r9, #204]	; 0xcc
   1d4c4:	bl	13f84 <fprintf@plt>
   1d4c8:	b	1d480 <__flatcc_fb_gen_c_builder@@Base+0x35c>
   1d4cc:	ldr	r2, [pc, #2536]	; 1debc <__flatcc_fb_gen_c_builder@@Base+0xd98>
   1d4d0:	ldr	r1, [pc, #2536]	; 1dec0 <__flatcc_fb_gen_c_builder@@Base+0xd9c>
   1d4d4:	ldr	r0, [r9, #204]	; 0xcc
   1d4d8:	bl	13f84 <fprintf@plt>
   1d4dc:	mov	r2, r4
   1d4e0:	ldr	r1, [pc, #2512]	; 1deb8 <__flatcc_fb_gen_c_builder@@Base+0xd94>
   1d4e4:	add	r4, r4, #1
   1d4e8:	ldr	r0, [r9, #204]	; 0xcc
   1d4ec:	bl	13f84 <fprintf@plt>
   1d4f0:	cmp	r8, r4
   1d4f4:	beq	1d54c <__flatcc_fb_gen_c_builder@@Base+0x428>
   1d4f8:	cmp	r4, #0
   1d4fc:	beq	1d4cc <__flatcc_fb_gen_c_builder@@Base+0x3a8>
   1d500:	tst	r4, #3
   1d504:	bne	1d514 <__flatcc_fb_gen_c_builder@@Base+0x3f0>
   1d508:	sub	r3, fp, r4
   1d50c:	cmp	r3, #2
   1d510:	bgt	1d4cc <__flatcc_fb_gen_c_builder@@Base+0x3a8>
   1d514:	ldr	r3, [r9, #204]	; 0xcc
   1d518:	mov	r2, r6
   1d51c:	mov	r1, r5
   1d520:	ldr	r0, [pc, #2444]	; 1deb4 <__flatcc_fb_gen_c_builder@@Base+0xd90>
   1d524:	bl	13f18 <fwrite@plt>
   1d528:	b	1d4dc <__flatcc_fb_gen_c_builder@@Base+0x3b8>
   1d52c:	mov	r2, fp
   1d530:	add	r4, r2, #1
   1d534:	ldr	r1, [pc, #2428]	; 1deb8 <__flatcc_fb_gen_c_builder@@Base+0xd94>
   1d538:	ldr	r0, [r9, #204]	; 0xcc
   1d53c:	bl	13f84 <fprintf@plt>
   1d540:	cmp	r4, r8
   1d544:	mov	r2, r4
   1d548:	bne	1d530 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1d54c:	ldr	r1, [r9, #204]	; 0xcc
   1d550:	mov	r0, #10
   1d554:	bl	13fe4 <fputc@plt>
   1d558:	ldr	r0, [r9, #204]	; 0xcc
   1d55c:	mov	r3, sl
   1d560:	mov	r2, sl
   1d564:	ldr	r1, [pc, #2392]	; 1dec4 <__flatcc_fb_gen_c_builder@@Base+0xda0>
   1d568:	str	sl, [sp]
   1d56c:	bl	13f84 <fprintf@plt>
   1d570:	ldr	r6, [sp, #40]	; 0x28
   1d574:	mov	r5, #0
   1d578:	mov	r2, r5
   1d57c:	mov	r1, r6
   1d580:	str	r5, [sp]
   1d584:	mov	r3, fp
   1d588:	mov	r0, r9
   1d58c:	bl	19e60 <__flatcc_gen_sort@@Base+0x350>
   1d590:	ldr	r3, [r9, #204]	; 0xcc
   1d594:	mov	r2, #4
   1d598:	mov	r1, #1
   1d59c:	ldr	r0, [pc, #2340]	; 1dec8 <__flatcc_fb_gen_c_builder@@Base+0xda4>
   1d5a0:	bl	13f18 <fwrite@plt>
   1d5a4:	mov	r3, r5
   1d5a8:	mov	r1, r6
   1d5ac:	str	r5, [sp]
   1d5b0:	mov	r2, fp
   1d5b4:	mov	r0, r9
   1d5b8:	bl	1c218 <__flatcc_gen_sort@@Base+0x2708>
   1d5bc:	ldr	r3, [r9, #204]	; 0xcc
   1d5c0:	mov	r2, #12
   1d5c4:	mov	r1, #1
   1d5c8:	ldr	r0, [pc, #2300]	; 1decc <__flatcc_fb_gen_c_builder@@Base+0xda8>
   1d5cc:	mov	r4, #1
   1d5d0:	bl	13f18 <fwrite@plt>
   1d5d4:	ldr	r0, [r9, #204]	; 0xcc
   1d5d8:	mov	r3, sl
   1d5dc:	mov	r2, sl
   1d5e0:	ldr	r1, [pc, #2280]	; 1ded0 <__flatcc_fb_gen_c_builder@@Base+0xdac>
   1d5e4:	str	sl, [sp, #4]
   1d5e8:	str	sl, [sp]
   1d5ec:	bl	13f84 <fprintf@plt>
   1d5f0:	mov	r1, r4
   1d5f4:	ldr	r3, [r9, #204]	; 0xcc
   1d5f8:	mov	r2, #2
   1d5fc:	ldr	r0, [pc, #2256]	; 1ded4 <__flatcc_fb_gen_c_builder@@Base+0xdb0>
   1d600:	bl	13f18 <fwrite@plt>
   1d604:	mov	r3, r5
   1d608:	mov	r1, r6
   1d60c:	str	r4, [sp]
   1d610:	mov	r2, fp
   1d614:	mov	r0, r9
   1d618:	bl	1c218 <__flatcc_gen_sort@@Base+0x2708>
   1d61c:	mov	r1, r4
   1d620:	ldr	r3, [r9, #204]	; 0xcc
   1d624:	mov	r2, #12
   1d628:	ldr	r0, [pc, #2204]	; 1decc <__flatcc_fb_gen_c_builder@@Base+0xda8>
   1d62c:	bl	13f18 <fwrite@plt>
   1d630:	ldr	r0, [r9, #204]	; 0xcc
   1d634:	mov	r3, sl
   1d638:	mov	r2, sl
   1d63c:	ldr	r1, [pc, #2196]	; 1ded8 <__flatcc_fb_gen_c_builder@@Base+0xdb4>
   1d640:	str	sl, [sp]
   1d644:	bl	13f84 <fprintf@plt>
   1d648:	mov	r2, r5
   1d64c:	mov	r1, r6
   1d650:	str	r5, [sp]
   1d654:	mov	r3, fp
   1d658:	mov	r0, r9
   1d65c:	bl	19e60 <__flatcc_gen_sort@@Base+0x350>
   1d660:	mov	r1, r4
   1d664:	ldr	r3, [r9, #204]	; 0xcc
   1d668:	mov	r2, #4
   1d66c:	ldr	r0, [pc, #2132]	; 1dec8 <__flatcc_fb_gen_c_builder@@Base+0xda4>
   1d670:	bl	13f18 <fwrite@plt>
   1d674:	mov	r1, r6
   1d678:	str	r5, [sp]
   1d67c:	mov	r3, #2
   1d680:	mov	r2, fp
   1d684:	mov	r0, r9
   1d688:	bl	1c218 <__flatcc_gen_sort@@Base+0x2708>
   1d68c:	mov	r1, r4
   1d690:	ldr	r3, [r9, #204]	; 0xcc
   1d694:	mov	r2, #12
   1d698:	ldr	r0, [pc, #2092]	; 1decc <__flatcc_fb_gen_c_builder@@Base+0xda8>
   1d69c:	bl	13f18 <fwrite@plt>
   1d6a0:	ldr	r0, [r9, #204]	; 0xcc
   1d6a4:	mov	r3, sl
   1d6a8:	mov	r2, sl
   1d6ac:	ldr	r1, [pc, #2088]	; 1dedc <__flatcc_fb_gen_c_builder@@Base+0xdb8>
   1d6b0:	str	sl, [sp, #4]
   1d6b4:	str	sl, [sp]
   1d6b8:	bl	13f84 <fprintf@plt>
   1d6bc:	mov	r1, r4
   1d6c0:	ldr	r3, [r9, #204]	; 0xcc
   1d6c4:	mov	r2, #2
   1d6c8:	ldr	r0, [pc, #2052]	; 1ded4 <__flatcc_fb_gen_c_builder@@Base+0xdb0>
   1d6cc:	bl	13f18 <fwrite@plt>
   1d6d0:	mov	r1, r6
   1d6d4:	str	r4, [sp]
   1d6d8:	mov	r3, #2
   1d6dc:	mov	r2, fp
   1d6e0:	mov	r0, r9
   1d6e4:	bl	1c218 <__flatcc_gen_sort@@Base+0x2708>
   1d6e8:	mov	r1, r4
   1d6ec:	ldr	r3, [r9, #204]	; 0xcc
   1d6f0:	mov	r2, #12
   1d6f4:	ldr	r0, [pc, #2000]	; 1decc <__flatcc_fb_gen_c_builder@@Base+0xda8>
   1d6f8:	bl	13f18 <fwrite@plt>
   1d6fc:	ldr	r0, [r9, #204]	; 0xcc
   1d700:	mov	r3, sl
   1d704:	mov	r2, sl
   1d708:	ldr	r1, [pc, #2000]	; 1dee0 <__flatcc_fb_gen_c_builder@@Base+0xdbc>
   1d70c:	str	sl, [sp]
   1d710:	bl	13f84 <fprintf@plt>
   1d714:	mov	r2, r5
   1d718:	mov	r1, r6
   1d71c:	str	r5, [sp]
   1d720:	mov	r3, fp
   1d724:	mov	r0, r9
   1d728:	bl	19e60 <__flatcc_gen_sort@@Base+0x350>
   1d72c:	mov	r1, r4
   1d730:	ldr	r3, [r9, #204]	; 0xcc
   1d734:	mov	r2, #4
   1d738:	ldr	r0, [pc, #1928]	; 1dec8 <__flatcc_fb_gen_c_builder@@Base+0xda4>
   1d73c:	bl	13f18 <fwrite@plt>
   1d740:	mov	r3, r4
   1d744:	mov	r1, r6
   1d748:	str	r5, [sp]
   1d74c:	mov	r2, fp
   1d750:	mov	r0, r9
   1d754:	bl	1c218 <__flatcc_gen_sort@@Base+0x2708>
   1d758:	mov	r1, r4
   1d75c:	ldr	r3, [r9, #204]	; 0xcc
   1d760:	mov	r2, #12
   1d764:	ldr	r0, [pc, #1888]	; 1decc <__flatcc_fb_gen_c_builder@@Base+0xda8>
   1d768:	bl	13f18 <fwrite@plt>
   1d76c:	ldr	r0, [r9, #204]	; 0xcc
   1d770:	mov	r3, sl
   1d774:	mov	r2, sl
   1d778:	ldr	r1, [pc, #1892]	; 1dee4 <__flatcc_fb_gen_c_builder@@Base+0xdc0>
   1d77c:	str	sl, [sp, #4]
   1d780:	str	sl, [sp]
   1d784:	bl	13f84 <fprintf@plt>
   1d788:	mov	r1, r4
   1d78c:	ldr	r3, [r9, #204]	; 0xcc
   1d790:	mov	r2, #2
   1d794:	ldr	r0, [pc, #1848]	; 1ded4 <__flatcc_fb_gen_c_builder@@Base+0xdb0>
   1d798:	bl	13f18 <fwrite@plt>
   1d79c:	mov	r1, r6
   1d7a0:	mov	r3, r4
   1d7a4:	str	r4, [sp]
   1d7a8:	mov	r2, fp
   1d7ac:	mov	r0, r9
   1d7b0:	bl	1c218 <__flatcc_gen_sort@@Base+0x2708>
   1d7b4:	mov	r1, r4
   1d7b8:	ldr	r3, [r9, #204]	; 0xcc
   1d7bc:	mov	r2, #12
   1d7c0:	ldr	r0, [pc, #1796]	; 1decc <__flatcc_fb_gen_c_builder@@Base+0xda8>
   1d7c4:	bl	13f18 <fwrite@plt>
   1d7c8:	ldr	r6, [sp, #36]	; 0x24
   1d7cc:	str	sl, [sp, #24]
   1d7d0:	str	sl, [sp, #20]
   1d7d4:	ldrh	r2, [r6, #104]	; 0x68
   1d7d8:	ldr	r0, [r9, #204]	; 0xcc
   1d7dc:	mov	r3, r9
   1d7e0:	str	r2, [sp, #16]
   1d7e4:	ldrd	r4, [r6, #112]	; 0x70
   1d7e8:	mov	r2, r9
   1d7ec:	ldr	r1, [pc, #1780]	; 1dee8 <__flatcc_fb_gen_c_builder@@Base+0xdc4>
   1d7f0:	str	sl, [sp]
   1d7f4:	strd	r4, [sp, #8]
   1d7f8:	bl	13f84 <fprintf@plt>
   1d7fc:	ldr	r1, [r9, #204]	; 0xcc
   1d800:	mov	r0, #10
   1d804:	bl	13fe4 <fputc@plt>
   1d808:	ldr	r3, [r6, #120]	; 0x78
   1d80c:	cmp	r3, #0
   1d810:	str	r3, [sp, #36]	; 0x24
   1d814:	bne	1d31c <__flatcc_fb_gen_c_builder@@Base+0x1f8>
   1d818:	mov	fp, r9
   1d81c:	mov	r0, fp
   1d820:	bl	1b1d4 <__flatcc_gen_sort@@Base+0x16c4>
   1d824:	ldr	r3, [fp, #212]	; 0xd4
   1d828:	ldr	r0, [fp, #204]	; 0xcc
   1d82c:	ldr	r3, [r3, #140]	; 0x8c
   1d830:	cmp	r3, #0
   1d834:	beq	1d850 <__flatcc_fb_gen_c_builder@@Base+0x72c>
   1d838:	mov	r3, r0
   1d83c:	mov	r2, #36	; 0x24
   1d840:	mov	r1, #1
   1d844:	ldr	r0, [pc, #1696]	; 1deec <__flatcc_fb_gen_c_builder@@Base+0xdc8>
   1d848:	bl	13f18 <fwrite@plt>
   1d84c:	ldr	r0, [fp, #204]	; 0xcc
   1d850:	ldr	r3, [fp, #208]	; 0xd0
   1d854:	ldr	r1, [pc, #1684]	; 1def0 <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1d858:	ldr	r2, [r3, #164]	; 0xa4
   1d85c:	bl	13f84 <fprintf@plt>
   1d860:	mov	r0, #0
   1d864:	add	sp, sp, #308	; 0x134
   1d868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d86c:	ldr	fp, [r2, #20]
   1d870:	cmp	fp, #0
   1d874:	beq	1dac4 <__flatcc_fb_gen_c_builder@@Base+0x9a0>
   1d878:	str	r9, [sp, #56]	; 0x38
   1d87c:	mov	r9, r3
   1d880:	str	r4, [sp, #52]	; 0x34
   1d884:	ldrh	r3, [fp, #72]	; 0x48
   1d888:	ands	r3, r3, #4
   1d88c:	bne	1d8b0 <__flatcc_fb_gen_c_builder@@Base+0x78c>
   1d890:	ldrh	r2, [fp, #24]
   1d894:	cmp	r2, #14
   1d898:	bne	1d8ac <__flatcc_fb_gen_c_builder@@Base+0x788>
   1d89c:	ldr	r2, [fp, #16]
   1d8a0:	ldrh	r1, [r2, #8]
   1d8a4:	cmp	r1, #1
   1d8a8:	beq	1d934 <__flatcc_fb_gen_c_builder@@Base+0x810>
   1d8ac:	add	r9, r9, #1
   1d8b0:	ldr	fp, [fp]
   1d8b4:	cmp	fp, #0
   1d8b8:	bne	1d884 <__flatcc_fb_gen_c_builder@@Base+0x760>
   1d8bc:	mov	r1, r9
   1d8c0:	ldr	r4, [sp, #52]	; 0x34
   1d8c4:	ldr	r9, [sp, #56]	; 0x38
   1d8c8:	add	r9, r9, r1
   1d8cc:	b	1d430 <__flatcc_fb_gen_c_builder@@Base+0x30c>
   1d8d0:	ldr	r9, [r2, #20]
   1d8d4:	cmp	r9, #0
   1d8d8:	beq	1dabc <__flatcc_fb_gen_c_builder@@Base+0x998>
   1d8dc:	str	fp, [sp, #48]	; 0x30
   1d8e0:	mov	fp, r3
   1d8e4:	str	r4, [sp, #44]	; 0x2c
   1d8e8:	ldrh	r3, [r9, #72]	; 0x48
   1d8ec:	ands	r3, r3, #4
   1d8f0:	bne	1d914 <__flatcc_fb_gen_c_builder@@Base+0x7f0>
   1d8f4:	ldrh	r2, [r9, #24]
   1d8f8:	cmp	r2, #14
   1d8fc:	bne	1d910 <__flatcc_fb_gen_c_builder@@Base+0x7ec>
   1d900:	ldr	r2, [r9, #16]
   1d904:	ldrh	r1, [r2, #8]
   1d908:	cmp	r1, #1
   1d90c:	beq	1d98c <__flatcc_fb_gen_c_builder@@Base+0x868>
   1d910:	add	fp, fp, #1
   1d914:	ldr	r9, [r9]
   1d918:	cmp	r9, #0
   1d91c:	bne	1d8e8 <__flatcc_fb_gen_c_builder@@Base+0x7c4>
   1d920:	mov	r1, fp
   1d924:	ldr	r4, [sp, #44]	; 0x2c
   1d928:	ldr	fp, [sp, #48]	; 0x30
   1d92c:	add	fp, fp, r1
   1d930:	b	1d390 <__flatcc_fb_gen_c_builder@@Base+0x26c>
   1d934:	ldr	r4, [r2, #20]
   1d938:	cmp	r4, #0
   1d93c:	beq	1dc04 <__flatcc_fb_gen_c_builder@@Base+0xae0>
   1d940:	mov	r1, r3
   1d944:	str	r9, [sp, #60]	; 0x3c
   1d948:	ldrh	r5, [r4, #72]	; 0x48
   1d94c:	ands	r5, r5, #4
   1d950:	bne	1d974 <__flatcc_fb_gen_c_builder@@Base+0x850>
   1d954:	ldrh	r3, [r4, #24]
   1d958:	cmp	r3, #14
   1d95c:	bne	1d970 <__flatcc_fb_gen_c_builder@@Base+0x84c>
   1d960:	ldr	r3, [r4, #16]
   1d964:	ldrh	r2, [r3, #8]
   1d968:	cmp	r2, #1
   1d96c:	beq	1da58 <__flatcc_fb_gen_c_builder@@Base+0x934>
   1d970:	add	r1, r1, #1
   1d974:	ldr	r4, [r4]
   1d978:	cmp	r4, #0
   1d97c:	bne	1d948 <__flatcc_fb_gen_c_builder@@Base+0x824>
   1d980:	ldr	r9, [sp, #60]	; 0x3c
   1d984:	add	r9, r9, r1
   1d988:	b	1d8b0 <__flatcc_fb_gen_c_builder@@Base+0x78c>
   1d98c:	ldr	r4, [r2, #20]
   1d990:	cmp	r4, #0
   1d994:	beq	1dc0c <__flatcc_fb_gen_c_builder@@Base+0xae8>
   1d998:	str	fp, [sp, #52]	; 0x34
   1d99c:	mov	r1, r3
   1d9a0:	mov	fp, r9
   1d9a4:	ldrh	r5, [r4, #72]	; 0x48
   1d9a8:	ands	r5, r5, #4
   1d9ac:	bne	1d9d0 <__flatcc_fb_gen_c_builder@@Base+0x8ac>
   1d9b0:	ldrh	r3, [r4, #24]
   1d9b4:	cmp	r3, #14
   1d9b8:	bne	1d9cc <__flatcc_fb_gen_c_builder@@Base+0x8a8>
   1d9bc:	ldr	r3, [r4, #16]
   1d9c0:	ldrh	r2, [r3, #8]
   1d9c4:	cmp	r2, #1
   1d9c8:	beq	1d9f4 <__flatcc_fb_gen_c_builder@@Base+0x8d0>
   1d9cc:	add	r1, r1, #1
   1d9d0:	ldr	r4, [r4]
   1d9d4:	cmp	r4, #0
   1d9d8:	bne	1d9a4 <__flatcc_fb_gen_c_builder@@Base+0x880>
   1d9dc:	mov	r9, fp
   1d9e0:	ldr	fp, [sp, #52]	; 0x34
   1d9e4:	add	fp, fp, r1
   1d9e8:	b	1d914 <__flatcc_fb_gen_c_builder@@Base+0x7f0>
   1d9ec:	mov	fp, r4
   1d9f0:	b	1d3a0 <__flatcc_fb_gen_c_builder@@Base+0x27c>
   1d9f4:	ldr	r6, [r3, #20]
   1d9f8:	cmp	r6, #0
   1d9fc:	beq	1dd1c <__flatcc_fb_gen_c_builder@@Base+0xbf8>
   1da00:	str	r1, [sp, #56]	; 0x38
   1da04:	mov	r2, fp
   1da08:	mov	r1, r4
   1da0c:	ldrh	r7, [r6, #72]	; 0x48
   1da10:	ands	r7, r7, #4
   1da14:	bne	1da38 <__flatcc_fb_gen_c_builder@@Base+0x914>
   1da18:	ldrh	r3, [r6, #24]
   1da1c:	cmp	r3, #14
   1da20:	bne	1da34 <__flatcc_fb_gen_c_builder@@Base+0x910>
   1da24:	ldr	r3, [r6, #16]
   1da28:	ldrh	r0, [r3, #8]
   1da2c:	cmp	r0, #1
   1da30:	beq	1db4c <__flatcc_fb_gen_c_builder@@Base+0xa28>
   1da34:	add	r5, r5, #1
   1da38:	ldr	r6, [r6]
   1da3c:	cmp	r6, #0
   1da40:	bne	1da0c <__flatcc_fb_gen_c_builder@@Base+0x8e8>
   1da44:	mov	r4, r1
   1da48:	ldr	r1, [sp, #56]	; 0x38
   1da4c:	mov	fp, r2
   1da50:	add	r1, r1, r5
   1da54:	b	1d9d0 <__flatcc_fb_gen_c_builder@@Base+0x8ac>
   1da58:	ldr	r6, [r3, #20]
   1da5c:	cmp	r6, #0
   1da60:	beq	1dd14 <__flatcc_fb_gen_c_builder@@Base+0xbf0>
   1da64:	str	r1, [sp, #64]	; 0x40
   1da68:	mov	r2, fp
   1da6c:	mov	r1, r4
   1da70:	ldrh	r7, [r6, #72]	; 0x48
   1da74:	ands	r7, r7, #4
   1da78:	bne	1da9c <__flatcc_fb_gen_c_builder@@Base+0x978>
   1da7c:	ldrh	r3, [r6, #24]
   1da80:	cmp	r3, #14
   1da84:	bne	1da98 <__flatcc_fb_gen_c_builder@@Base+0x974>
   1da88:	ldr	r3, [r6, #16]
   1da8c:	ldrh	r0, [r3, #8]
   1da90:	cmp	r0, #1
   1da94:	beq	1dba8 <__flatcc_fb_gen_c_builder@@Base+0xa84>
   1da98:	add	r5, r5, #1
   1da9c:	ldr	r6, [r6]
   1daa0:	cmp	r6, #0
   1daa4:	bne	1da70 <__flatcc_fb_gen_c_builder@@Base+0x94c>
   1daa8:	mov	r4, r1
   1daac:	ldr	r1, [sp, #64]	; 0x40
   1dab0:	mov	fp, r2
   1dab4:	add	r1, r1, r5
   1dab8:	b	1d974 <__flatcc_fb_gen_c_builder@@Base+0x850>
   1dabc:	mov	r1, r9
   1dac0:	b	1d92c <__flatcc_fb_gen_c_builder@@Base+0x808>
   1dac4:	mov	r1, fp
   1dac8:	b	1d8c8 <__flatcc_fb_gen_c_builder@@Base+0x7a4>
   1dacc:	mov	r3, r0
   1dad0:	mov	r2, #36	; 0x24
   1dad4:	mov	r1, #1
   1dad8:	ldr	r0, [pc, #1044]	; 1def4 <__flatcc_fb_gen_c_builder@@Base+0xdd0>
   1dadc:	bl	13f18 <fwrite@plt>
   1dae0:	ldr	r3, [fp, #208]	; 0xd0
   1dae4:	ldr	r0, [fp, #204]	; 0xcc
   1dae8:	ldrh	r2, [r3, #16]
   1daec:	cmp	r2, #2
   1daf0:	bne	1d200 <__flatcc_fb_gen_c_builder@@Base+0xdc>
   1daf4:	ldr	r2, [r3, #8]
   1daf8:	ldr	r1, [pc, #1016]	; 1def8 <__flatcc_fb_gen_c_builder@@Base+0xdd4>
   1dafc:	str	r2, [sp, #4]
   1db00:	ldr	r2, [r3, #12]
   1db04:	mov	r3, fp
   1db08:	str	r2, [sp]
   1db0c:	mov	r2, fp
   1db10:	bl	13f84 <fprintf@plt>
   1db14:	ldr	r3, [fp, #208]	; 0xd0
   1db18:	ldrh	r2, [r3, #32]
   1db1c:	cmp	r2, #2
   1db20:	bne	1d220 <__flatcc_fb_gen_c_builder@@Base+0xfc>
   1db24:	ldr	r2, [r3, #24]
   1db28:	ldr	r0, [fp, #204]	; 0xcc
   1db2c:	str	r2, [sp, #4]
   1db30:	ldr	r3, [r3, #28]
   1db34:	mov	r2, fp
   1db38:	str	r3, [sp]
   1db3c:	ldr	r1, [pc, #952]	; 1defc <__flatcc_fb_gen_c_builder@@Base+0xdd8>
   1db40:	mov	r3, fp
   1db44:	bl	13f84 <fprintf@plt>
   1db48:	b	1d240 <__flatcc_fb_gen_c_builder@@Base+0x11c>
   1db4c:	ldr	r8, [r3, #20]
   1db50:	cmp	r8, #0
   1db54:	beq	1de3c <__flatcc_fb_gen_c_builder@@Base+0xd18>
   1db58:	mov	r9, r2
   1db5c:	mov	fp, r1
   1db60:	ldrh	r3, [r8, #72]	; 0x48
   1db64:	ands	r3, r3, #4
   1db68:	bne	1db8c <__flatcc_fb_gen_c_builder@@Base+0xa68>
   1db6c:	ldrh	r2, [r8, #24]
   1db70:	cmp	r2, #14
   1db74:	bne	1db88 <__flatcc_fb_gen_c_builder@@Base+0xa64>
   1db78:	ldr	r2, [r8, #16]
   1db7c:	ldrh	r1, [r2, #8]
   1db80:	cmp	r1, #1
   1db84:	beq	1dc94 <__flatcc_fb_gen_c_builder@@Base+0xb70>
   1db88:	add	r7, r7, #1
   1db8c:	ldr	r8, [r8]
   1db90:	cmp	r8, #0
   1db94:	bne	1db60 <__flatcc_fb_gen_c_builder@@Base+0xa3c>
   1db98:	mov	r2, r9
   1db9c:	mov	r1, fp
   1dba0:	add	r5, r5, r7
   1dba4:	b	1da38 <__flatcc_fb_gen_c_builder@@Base+0x914>
   1dba8:	ldr	r8, [r3, #20]
   1dbac:	cmp	r8, #0
   1dbb0:	beq	1de34 <__flatcc_fb_gen_c_builder@@Base+0xd10>
   1dbb4:	mov	r9, r2
   1dbb8:	mov	fp, r1
   1dbbc:	ldrh	r3, [r8, #72]	; 0x48
   1dbc0:	ands	r3, r3, #4
   1dbc4:	bne	1dbe8 <__flatcc_fb_gen_c_builder@@Base+0xac4>
   1dbc8:	ldrh	r2, [r8, #24]
   1dbcc:	cmp	r2, #14
   1dbd0:	bne	1dbe4 <__flatcc_fb_gen_c_builder@@Base+0xac0>
   1dbd4:	ldr	r2, [r8, #16]
   1dbd8:	ldrh	r1, [r2, #8]
   1dbdc:	cmp	r1, #1
   1dbe0:	beq	1dc14 <__flatcc_fb_gen_c_builder@@Base+0xaf0>
   1dbe4:	add	r7, r7, #1
   1dbe8:	ldr	r8, [r8]
   1dbec:	cmp	r8, #0
   1dbf0:	bne	1dbbc <__flatcc_fb_gen_c_builder@@Base+0xa98>
   1dbf4:	mov	r2, r9
   1dbf8:	mov	r1, fp
   1dbfc:	add	r5, r5, r7
   1dc00:	b	1da9c <__flatcc_fb_gen_c_builder@@Base+0x978>
   1dc04:	mov	r1, r4
   1dc08:	b	1d984 <__flatcc_fb_gen_c_builder@@Base+0x860>
   1dc0c:	mov	r1, r4
   1dc10:	b	1d9e4 <__flatcc_fb_gen_c_builder@@Base+0x8c0>
   1dc14:	ldr	r2, [r2, #20]
   1dc18:	cmp	r2, #0
   1dc1c:	beq	1de54 <__flatcc_fb_gen_c_builder@@Base+0xd30>
   1dc20:	mov	r4, r3
   1dc24:	mov	r3, r2
   1dc28:	mov	r1, r7
   1dc2c:	mov	r2, r8
   1dc30:	mov	r7, r6
   1dc34:	mov	r8, r5
   1dc38:	mov	r6, r4
   1dc3c:	mov	r5, r3
   1dc40:	ldrh	r3, [r5, #72]	; 0x48
   1dc44:	ands	r4, r3, #4
   1dc48:	bne	1dc6c <__flatcc_fb_gen_c_builder@@Base+0xb48>
   1dc4c:	ldrh	r3, [r5, #24]
   1dc50:	cmp	r3, #14
   1dc54:	bne	1dc68 <__flatcc_fb_gen_c_builder@@Base+0xb44>
   1dc58:	ldr	r3, [r5, #16]
   1dc5c:	ldrh	r0, [r3, #8]
   1dc60:	cmp	r0, #1
   1dc64:	beq	1dd98 <__flatcc_fb_gen_c_builder@@Base+0xc74>
   1dc68:	add	r6, r6, #1
   1dc6c:	ldr	r5, [r5]
   1dc70:	cmp	r5, #0
   1dc74:	bne	1dc40 <__flatcc_fb_gen_c_builder@@Base+0xb1c>
   1dc78:	mov	r5, r8
   1dc7c:	mov	r4, r6
   1dc80:	mov	r8, r2
   1dc84:	mov	r6, r7
   1dc88:	mov	r7, r1
   1dc8c:	add	r7, r7, r4
   1dc90:	b	1dbe8 <__flatcc_fb_gen_c_builder@@Base+0xac4>
   1dc94:	ldr	r2, [r2, #20]
   1dc98:	cmp	r2, #0
   1dc9c:	beq	1de70 <__flatcc_fb_gen_c_builder@@Base+0xd4c>
   1dca0:	mov	r4, r3
   1dca4:	mov	r3, r8
   1dca8:	mov	r1, r7
   1dcac:	mov	r8, r5
   1dcb0:	mov	r7, r6
   1dcb4:	mov	r5, r2
   1dcb8:	mov	r6, r4
   1dcbc:	mov	r2, r3
   1dcc0:	ldrh	r3, [r5, #72]	; 0x48
   1dcc4:	ands	r4, r3, #4
   1dcc8:	bne	1dcec <__flatcc_fb_gen_c_builder@@Base+0xbc8>
   1dccc:	ldrh	r3, [r5, #24]
   1dcd0:	cmp	r3, #14
   1dcd4:	bne	1dce8 <__flatcc_fb_gen_c_builder@@Base+0xbc4>
   1dcd8:	ldr	r3, [r5, #16]
   1dcdc:	ldrh	r0, [r3, #8]
   1dce0:	cmp	r0, #1
   1dce4:	beq	1dd24 <__flatcc_fb_gen_c_builder@@Base+0xc00>
   1dce8:	add	r6, r6, #1
   1dcec:	ldr	r5, [r5]
   1dcf0:	cmp	r5, #0
   1dcf4:	bne	1dcc0 <__flatcc_fb_gen_c_builder@@Base+0xb9c>
   1dcf8:	mov	r4, r6
   1dcfc:	mov	r5, r8
   1dd00:	mov	r6, r7
   1dd04:	mov	r8, r2
   1dd08:	mov	r7, r1
   1dd0c:	add	r7, r7, r4
   1dd10:	b	1db8c <__flatcc_fb_gen_c_builder@@Base+0xa68>
   1dd14:	mov	r5, r6
   1dd18:	b	1dab4 <__flatcc_fb_gen_c_builder@@Base+0x990>
   1dd1c:	mov	r5, r6
   1dd20:	b	1da50 <__flatcc_fb_gen_c_builder@@Base+0x92c>
   1dd24:	ldr	r3, [r3, #20]
   1dd28:	cmp	r3, #0
   1dd2c:	beq	1de44 <__flatcc_fb_gen_c_builder@@Base+0xd20>
   1dd30:	str	r5, [sp, #60]	; 0x3c
   1dd34:	mov	r5, r4
   1dd38:	mov	r4, r3
   1dd3c:	b	1dd50 <__flatcc_fb_gen_c_builder@@Base+0xc2c>
   1dd40:	add	r5, r5, #1
   1dd44:	ldr	r4, [r4]
   1dd48:	cmp	r4, #0
   1dd4c:	beq	1de24 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1dd50:	ldrh	r0, [r4, #72]	; 0x48
   1dd54:	tst	r0, #4
   1dd58:	bne	1dd44 <__flatcc_fb_gen_c_builder@@Base+0xc20>
   1dd5c:	ldrh	r0, [r4, #24]
   1dd60:	cmp	r0, #14
   1dd64:	bne	1dd40 <__flatcc_fb_gen_c_builder@@Base+0xc1c>
   1dd68:	ldr	r0, [r4, #16]
   1dd6c:	ldrh	ip, [r0, #8]
   1dd70:	cmp	ip, #1
   1dd74:	bne	1dd40 <__flatcc_fb_gen_c_builder@@Base+0xc1c>
   1dd78:	ldr	r0, [r0, #20]
   1dd7c:	str	r1, [sp, #68]	; 0x44
   1dd80:	str	r2, [sp, #64]	; 0x40
   1dd84:	bl	1c100 <__flatcc_gen_sort@@Base+0x25f0>
   1dd88:	ldr	r2, [sp, #64]	; 0x40
   1dd8c:	ldr	r1, [sp, #68]	; 0x44
   1dd90:	add	r5, r5, r0
   1dd94:	b	1dd44 <__flatcc_fb_gen_c_builder@@Base+0xc20>
   1dd98:	ldr	r3, [r3, #20]
   1dd9c:	cmp	r3, #0
   1dda0:	beq	1de4c <__flatcc_fb_gen_c_builder@@Base+0xd28>
   1dda4:	str	r5, [sp, #68]	; 0x44
   1dda8:	str	r6, [sp, #72]	; 0x48
   1ddac:	mov	r5, r4
   1ddb0:	mov	r6, r2
   1ddb4:	mov	r4, r3
   1ddb8:	b	1ddcc <__flatcc_fb_gen_c_builder@@Base+0xca8>
   1ddbc:	add	r5, r5, #1
   1ddc0:	ldr	r4, [r4]
   1ddc4:	cmp	r4, #0
   1ddc8:	beq	1de0c <__flatcc_fb_gen_c_builder@@Base+0xce8>
   1ddcc:	ldrh	r0, [r4, #72]	; 0x48
   1ddd0:	tst	r0, #4
   1ddd4:	bne	1ddc0 <__flatcc_fb_gen_c_builder@@Base+0xc9c>
   1ddd8:	ldrh	r0, [r4, #24]
   1dddc:	cmp	r0, #14
   1dde0:	bne	1ddbc <__flatcc_fb_gen_c_builder@@Base+0xc98>
   1dde4:	ldr	r0, [r4, #16]
   1dde8:	ldrh	ip, [r0, #8]
   1ddec:	cmp	ip, #1
   1ddf0:	bne	1ddbc <__flatcc_fb_gen_c_builder@@Base+0xc98>
   1ddf4:	ldr	r0, [r0, #20]
   1ddf8:	str	r1, [sp, #76]	; 0x4c
   1ddfc:	bl	1c100 <__flatcc_gen_sort@@Base+0x25f0>
   1de00:	ldr	r1, [sp, #76]	; 0x4c
   1de04:	add	r5, r5, r0
   1de08:	b	1ddc0 <__flatcc_fb_gen_c_builder@@Base+0xc9c>
   1de0c:	mov	r2, r6
   1de10:	mov	r4, r5
   1de14:	ldr	r6, [sp, #72]	; 0x48
   1de18:	ldr	r5, [sp, #68]	; 0x44
   1de1c:	add	r6, r6, r4
   1de20:	b	1dc6c <__flatcc_fb_gen_c_builder@@Base+0xb48>
   1de24:	mov	r4, r5
   1de28:	ldr	r5, [sp, #60]	; 0x3c
   1de2c:	add	r6, r6, r4
   1de30:	b	1dcec <__flatcc_fb_gen_c_builder@@Base+0xbc8>
   1de34:	mov	r7, r8
   1de38:	b	1dbfc <__flatcc_fb_gen_c_builder@@Base+0xad8>
   1de3c:	mov	r7, r8
   1de40:	b	1dba0 <__flatcc_fb_gen_c_builder@@Base+0xa7c>
   1de44:	mov	r4, r3
   1de48:	b	1de2c <__flatcc_fb_gen_c_builder@@Base+0xd08>
   1de4c:	mov	r4, r3
   1de50:	b	1de1c <__flatcc_fb_gen_c_builder@@Base+0xcf8>
   1de54:	mov	r4, r2
   1de58:	b	1dc8c <__flatcc_fb_gen_c_builder@@Base+0xb68>
   1de5c:	ldr	r3, [pc, #156]	; 1df00 <__flatcc_fb_gen_c_builder@@Base+0xddc>
   1de60:	ldr	r2, [pc, #156]	; 1df04 <__flatcc_fb_gen_c_builder@@Base+0xde0>
   1de64:	ldr	r1, [pc, #156]	; 1df08 <__flatcc_fb_gen_c_builder@@Base+0xde4>
   1de68:	ldr	r0, [pc, #156]	; 1df0c <__flatcc_fb_gen_c_builder@@Base+0xde8>
   1de6c:	bl	14038 <__assert_fail@plt>
   1de70:	mov	r4, r2
   1de74:	b	1dd0c <__flatcc_fb_gen_c_builder@@Base+0xbe8>
   1de78:	andeq	r3, r5, ip, ror r6
   1de7c:			; <UNDEFINED> instruction: 0x000432b4
   1de80:	andeq	r3, r5, r8, lsr #13
   1de84:	andeq	r3, r5, r0, asr #13
   1de88:	muleq	r4, r0, r4
   1de8c:	andeq	sl, r4, r0, asr #29
   1de90:	ldrdeq	r3, [r5], -r8
   1de94:	strdeq	r3, [r5], -r8
   1de98:	andeq	r8, r5, r4, asr #8
   1de9c:	andeq	r9, r4, r0, lsl #10
   1dea0:	andeq	r9, r4, r4, ror #10
   1dea4:	andeq	r3, r5, r4, lsl #14
   1dea8:	andeq	r3, r5, ip, asr #14
   1deac:	ldrdeq	sl, [r4], -ip
   1deb0:	strdeq	sl, [r4], -r8
   1deb4:	strdeq	sl, [r4], -r8
   1deb8:	andeq	sl, r4, ip, lsr sp
   1debc:	andeq	r4, r4, r0, ror #22
   1dec0:	strdeq	sl, [r4], -r0
   1dec4:	andeq	r3, r5, r4, ror r7
   1dec8:	muleq	r5, ip, r7
   1decc:	andeq	r3, r5, r4, lsr #15
   1ded0:			; <UNDEFINED> instruction: 0x000537b4
   1ded4:	andeq	r3, r5, ip, ror #15
   1ded8:	strdeq	r3, [r5], -r0
   1dedc:	andeq	r3, r5, ip, lsl r8
   1dee0:	andeq	r3, r5, r8, asr r8
   1dee4:	andeq	r3, r5, r8, lsl #17
   1dee8:	andeq	r3, r5, r8, asr #17
   1deec:	andeq	r9, r4, ip, lsr #4
   1def0:	andeq	r3, r5, r0, lsl r9
   1def4:	andeq	r3, r4, r8, asr #7
   1def8:	andeq	r9, r4, ip, asr #9
   1defc:	andeq	r9, r4, r4, lsr r5
   1df00:	andeq	sl, r4, r8, asr r1
   1df04:	strdeq	r0, [r0], -r2
   1df08:	strdeq	sl, [r4], -ip
   1df0c:	andeq	r2, r4, r8, lsl #6
   1df10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df14:	sub	sp, sp, #492	; 0x1ec
   1df18:	mov	r4, r1
   1df1c:	mov	r8, r0
   1df20:	mov	r2, #220	; 0xdc
   1df24:	mov	r1, #0
   1df28:	add	r0, sp, #48	; 0x30
   1df2c:	bl	13f9c <memset@plt>
   1df30:	mov	r2, #220	; 0xdc
   1df34:	mov	r1, #0
   1df38:	add	r0, sp, #268	; 0x10c
   1df3c:	bl	13f9c <memset@plt>
   1df40:	mov	r1, r4
   1df44:	ldr	r0, [r4, #12]
   1df48:	add	r2, sp, #48	; 0x30
   1df4c:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1df50:	add	r2, sp, #48	; 0x30
   1df54:	ldr	r0, [r8, #204]	; 0xcc
   1df58:	ldr	r1, [pc, #1100]	; 1e3ac <__flatcc_fb_gen_c_builder@@Base+0x1288>
   1df5c:	bl	13f84 <fprintf@plt>
   1df60:	ldr	r4, [r4, #20]
   1df64:	cmp	r4, #0
   1df68:	beq	1e080 <__flatcc_fb_gen_c_builder@@Base+0xf5c>
   1df6c:	ldr	sl, [pc, #1084]	; 1e3b0 <__flatcc_fb_gen_c_builder@@Base+0x128c>
   1df70:	ldr	r9, [pc, #1084]	; 1e3b4 <__flatcc_fb_gen_c_builder@@Base+0x1290>
   1df74:	ldr	fp, [pc, #1084]	; 1e3b8 <__flatcc_fb_gen_c_builder@@Base+0x1294>
   1df78:	mov	r2, #1
   1df7c:	ldrh	r3, [r4, #72]	; 0x48
   1df80:	tst	r3, #4
   1df84:	bne	1e06c <__flatcc_fb_gen_c_builder@@Base+0xf48>
   1df88:	cmp	r2, #0
   1df8c:	beq	1e26c <__flatcc_fb_gen_c_builder@@Base+0x1148>
   1df90:	ldr	r3, [r8, #204]	; 0xcc
   1df94:	mov	r2, #28
   1df98:	mov	r1, #1
   1df9c:	ldr	r0, [pc, #1048]	; 1e3bc <__flatcc_fb_gen_c_builder@@Base+0x1298>
   1dfa0:	bl	13f18 <fwrite@plt>
   1dfa4:	ldrh	r2, [r4, #72]	; 0x48
   1dfa8:	ldrh	r3, [r4, #24]
   1dfac:	lsr	r2, r2, #8
   1dfb0:	sub	r3, r3, #7
   1dfb4:	and	r5, r2, #1
   1dfb8:	cmp	r3, #8
   1dfbc:	ldrls	pc, [pc, r3, lsl #2]
   1dfc0:	b	1e008 <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1dfc4:	andeq	lr, r1, r4, lsl r1
   1dfc8:	andeq	sp, r1, r8, ror #31
   1dfcc:			; <UNDEFINED> instruction: 0x0001e1b4
   1dfd0:	muleq	r1, ip, r1
   1dfd4:	andeq	lr, r1, r8
   1dfd8:	andeq	lr, r1, r8
   1dfdc:	andeq	lr, r1, r8
   1dfe0:	andeq	lr, r1, ip, asr #3
   1dfe4:	andeq	lr, r1, r4, ror #2
   1dfe8:	ldrh	r1, [r4, #74]	; 0x4a
   1dfec:	ldrd	r2, [r4, #96]	; 0x60
   1dff0:	ldr	r0, [r8, #204]	; 0xcc
   1dff4:	str	r1, [sp, #8]
   1dff8:	ldrd	r6, [r4, #88]	; 0x58
   1dffc:	ldr	r1, [pc, #956]	; 1e3c0 <__flatcc_fb_gen_c_builder@@Base+0x129c>
   1e000:	strd	r6, [sp]
   1e004:	bl	13f84 <fprintf@plt>
   1e008:	ldr	r2, [r4, #4]
   1e00c:	mov	r1, sl
   1e010:	ldr	r0, [r8, #204]	; 0xcc
   1e014:	ldr	r3, [r2]
   1e018:	ldr	r2, [r2, #4]
   1e01c:	bl	13f84 <fprintf@plt>
   1e020:	ldr	r4, [r4]
   1e024:	cmp	r4, #0
   1e028:	beq	1e394 <__flatcc_fb_gen_c_builder@@Base+0x1270>
   1e02c:	ldrh	r3, [r4, #72]	; 0x48
   1e030:	tst	r3, #4
   1e034:	beq	1e26c <__flatcc_fb_gen_c_builder@@Base+0x1148>
   1e038:	ldr	r4, [r4]
   1e03c:	cmp	r4, #0
   1e040:	beq	1e394 <__flatcc_fb_gen_c_builder@@Base+0x1270>
   1e044:	ldrh	r3, [r4, #72]	; 0x48
   1e048:	tst	r3, #4
   1e04c:	beq	1e26c <__flatcc_fb_gen_c_builder@@Base+0x1148>
   1e050:	ldr	r4, [r4]
   1e054:	cmp	r4, #0
   1e058:	beq	1e394 <__flatcc_fb_gen_c_builder@@Base+0x1270>
   1e05c:	ldrh	r3, [r4, #72]	; 0x48
   1e060:	tst	r3, #4
   1e064:	beq	1e26c <__flatcc_fb_gen_c_builder@@Base+0x1148>
   1e068:	mov	r2, #0
   1e06c:	ldr	r4, [r4]
   1e070:	cmp	r4, #0
   1e074:	bne	1df7c <__flatcc_fb_gen_c_builder@@Base+0xe58>
   1e078:	cmp	r2, #0
   1e07c:	beq	1e394 <__flatcc_fb_gen_c_builder@@Base+0x1270>
   1e080:	ldr	r3, [r8, #204]	; 0xcc
   1e084:	mov	r2, #29
   1e088:	mov	r1, #1
   1e08c:	ldr	r0, [pc, #816]	; 1e3c4 <__flatcc_fb_gen_c_builder@@Base+0x12a0>
   1e090:	bl	13f18 <fwrite@plt>
   1e094:	ldr	r3, [r8, #204]	; 0xcc
   1e098:	mov	r2, #3
   1e09c:	mov	r1, #1
   1e0a0:	ldr	r0, [pc, #800]	; 1e3c8 <__flatcc_fb_gen_c_builder@@Base+0x12a4>
   1e0a4:	bl	13f18 <fwrite@plt>
   1e0a8:	add	r3, sp, #48	; 0x30
   1e0ac:	ldr	r0, [r8, #204]	; 0xcc
   1e0b0:	mov	r2, r3
   1e0b4:	str	r3, [sp]
   1e0b8:	ldr	r1, [pc, #780]	; 1e3cc <__flatcc_fb_gen_c_builder@@Base+0x12a8>
   1e0bc:	bl	13f84 <fprintf@plt>
   1e0c0:	add	r3, sp, #48	; 0x30
   1e0c4:	ldr	r0, [r8, #204]	; 0xcc
   1e0c8:	mov	r2, r3
   1e0cc:	str	r3, [sp]
   1e0d0:	ldr	r1, [pc, #760]	; 1e3d0 <__flatcc_fb_gen_c_builder@@Base+0x12ac>
   1e0d4:	bl	13f84 <fprintf@plt>
   1e0d8:	add	r3, sp, #48	; 0x30
   1e0dc:	mov	r2, r3
   1e0e0:	ldr	r1, [pc, #748]	; 1e3d4 <__flatcc_fb_gen_c_builder@@Base+0x12b0>
   1e0e4:	ldr	r0, [r8, #204]	; 0xcc
   1e0e8:	bl	13f84 <fprintf@plt>
   1e0ec:	add	r3, sp, #48	; 0x30
   1e0f0:	ldr	r0, [r8, #204]	; 0xcc
   1e0f4:	mov	r2, r3
   1e0f8:	str	r3, [sp]
   1e0fc:	ldr	r1, [pc, #724]	; 1e3d8 <__flatcc_fb_gen_c_builder@@Base+0x12b4>
   1e100:	mov	r3, r8
   1e104:	bl	13f84 <fprintf@plt>
   1e108:	mov	r0, #0
   1e10c:	add	sp, sp, #492	; 0x1ec
   1e110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e114:	ldr	r1, [r4, #104]	; 0x68
   1e118:	cmp	r1, #0
   1e11c:	beq	1e204 <__flatcc_fb_gen_c_builder@@Base+0x10e0>
   1e120:	add	r2, sp, #268	; 0x10c
   1e124:	ldr	r0, [r1, #12]
   1e128:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e12c:	ldr	r3, [r4, #104]	; 0x68
   1e130:	ldrh	r3, [r3, #8]
   1e134:	cmp	r3, #0
   1e138:	bne	1e284 <__flatcc_fb_gen_c_builder@@Base+0x1160>
   1e13c:	add	r1, sp, #268	; 0x10c
   1e140:	ldrd	r2, [r4, #96]	; 0x60
   1e144:	str	r1, [sp, #8]
   1e148:	ldrh	r1, [r4, #74]	; 0x4a
   1e14c:	ldr	r0, [r8, #204]	; 0xcc
   1e150:	str	r5, [sp]
   1e154:	str	r1, [sp, #4]
   1e158:	ldr	r1, [pc, #636]	; 1e3dc <__flatcc_fb_gen_c_builder@@Base+0x12b8>
   1e15c:	bl	13f84 <fprintf@plt>
   1e160:	b	1e008 <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1e164:	ldr	r1, [r4, #16]
   1e168:	add	r2, sp, #268	; 0x10c
   1e16c:	ldr	r0, [r1, #12]
   1e170:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e174:	ldr	r3, [r4, #16]
   1e178:	ldrh	r3, [r3, #8]
   1e17c:	cmp	r3, #4
   1e180:	ldrls	pc, [pc, r3, lsl #2]
   1e184:	b	1e360 <__flatcc_fb_gen_c_builder@@Base+0x123c>
   1e188:	andeq	lr, r1, ip, lsl #6
   1e18c:	andeq	lr, r1, r4, lsl #4
   1e190:	andeq	lr, r1, r0, ror #6
   1e194:	andeq	lr, r1, r4, lsl #4
   1e198:	andeq	lr, r1, ip, ror #5
   1e19c:	ldrd	r2, [r4, #96]	; 0x60
   1e1a0:	ldr	r0, [r8, #204]	; 0xcc
   1e1a4:	ldr	r1, [pc, #564]	; 1e3e0 <__flatcc_fb_gen_c_builder@@Base+0x12bc>
   1e1a8:	str	r5, [sp]
   1e1ac:	bl	13f84 <fprintf@plt>
   1e1b0:	b	1e008 <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1e1b4:	ldrd	r2, [r4, #96]	; 0x60
   1e1b8:	ldr	r0, [r8, #204]	; 0xcc
   1e1bc:	ldr	r1, [pc, #544]	; 1e3e4 <__flatcc_fb_gen_c_builder@@Base+0x12c0>
   1e1c0:	str	r5, [sp]
   1e1c4:	bl	13f84 <fprintf@plt>
   1e1c8:	b	1e008 <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1e1cc:	ldr	r1, [r4, #16]
   1e1d0:	add	r2, sp, #268	; 0x10c
   1e1d4:	ldr	r0, [r1, #12]
   1e1d8:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e1dc:	ldr	r3, [r4, #16]
   1e1e0:	ldrh	r3, [r3, #8]
   1e1e4:	cmp	r3, #4
   1e1e8:	ldrls	pc, [pc, r3, lsl #2]
   1e1ec:	b	1e32c <__flatcc_fb_gen_c_builder@@Base+0x1208>
   1e1f0:	andeq	lr, r1, ip, asr #5
   1e1f4:	andeq	sp, r1, r8, ror #31
   1e1f8:	andeq	lr, r1, ip, lsr #6
   1e1fc:	andeq	sp, r1, r8, ror #31
   1e200:	andeq	lr, r1, ip, lsr #5
   1e204:	ldr	r3, [r8, #204]	; 0xcc
   1e208:	ldrd	r6, [r4, #88]	; 0x58
   1e20c:	str	r3, [sp, #40]	; 0x28
   1e210:	ldrd	r2, [r4, #96]	; 0x60
   1e214:	strd	r2, [sp, #32]
   1e218:	orrs	r3, r6, r7
   1e21c:	ldrh	r3, [r4, #74]	; 0x4a
   1e220:	mvneq	r0, #0
   1e224:	moveq	r1, #0
   1e228:	str	r3, [sp, #44]	; 0x2c
   1e22c:	beq	1e248 <__flatcc_fb_gen_c_builder@@Base+0x1124>
   1e230:	mov	r3, r7
   1e234:	mov	r2, r6
   1e238:	mvn	r0, #0
   1e23c:	mov	r1, #0
   1e240:	bl	40690 <fb_value_set_visit@@Base+0x668>
   1e244:	ldr	r3, [sp, #44]	; 0x2c
   1e248:	strd	r0, [sp, #24]
   1e24c:	str	r3, [sp, #16]
   1e250:	strd	r6, [sp, #8]
   1e254:	str	r5, [sp]
   1e258:	ldrd	r2, [sp, #32]
   1e25c:	ldr	r0, [sp, #40]	; 0x28
   1e260:	mov	r1, r9
   1e264:	bl	13f84 <fprintf@plt>
   1e268:	b	1e008 <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1e26c:	ldr	r3, [r8, #204]	; 0xcc
   1e270:	mov	r2, #30
   1e274:	mov	r1, #1
   1e278:	ldr	r0, [pc, #360]	; 1e3e8 <__flatcc_fb_gen_c_builder@@Base+0x12c4>
   1e27c:	bl	13f18 <fwrite@plt>
   1e280:	b	1dfa4 <__flatcc_fb_gen_c_builder@@Base+0xe80>
   1e284:	ldrh	r1, [r4, #74]	; 0x4a
   1e288:	ldrd	r2, [r4, #96]	; 0x60
   1e28c:	ldr	r0, [r8, #204]	; 0xcc
   1e290:	str	r1, [sp, #16]
   1e294:	ldrd	r6, [r4, #88]	; 0x58
   1e298:	ldr	r1, [pc, #332]	; 1e3ec <__flatcc_fb_gen_c_builder@@Base+0x12c8>
   1e29c:	str	r5, [sp]
   1e2a0:	strd	r6, [sp, #8]
   1e2a4:	bl	13f84 <fprintf@plt>
   1e2a8:	b	1e008 <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1e2ac:	add	r1, sp, #268	; 0x10c
   1e2b0:	ldrd	r2, [r4, #96]	; 0x60
   1e2b4:	ldr	r0, [r8, #204]	; 0xcc
   1e2b8:	str	r1, [sp, #4]
   1e2bc:	str	r5, [sp]
   1e2c0:	ldr	r1, [pc, #296]	; 1e3f0 <__flatcc_fb_gen_c_builder@@Base+0x12cc>
   1e2c4:	bl	13f84 <fprintf@plt>
   1e2c8:	b	1e008 <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1e2cc:	add	r1, sp, #268	; 0x10c
   1e2d0:	ldrd	r2, [r4, #96]	; 0x60
   1e2d4:	ldr	r0, [r8, #204]	; 0xcc
   1e2d8:	str	r1, [sp, #4]
   1e2dc:	str	r5, [sp]
   1e2e0:	ldr	r1, [pc, #268]	; 1e3f4 <__flatcc_fb_gen_c_builder@@Base+0x12d0>
   1e2e4:	bl	13f84 <fprintf@plt>
   1e2e8:	b	1e008 <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1e2ec:	add	r1, sp, #268	; 0x10c
   1e2f0:	ldrd	r2, [r4, #96]	; 0x60
   1e2f4:	ldr	r0, [r8, #204]	; 0xcc
   1e2f8:	str	r1, [sp, #4]
   1e2fc:	str	r5, [sp]
   1e300:	ldr	r1, [pc, #240]	; 1e3f8 <__flatcc_fb_gen_c_builder@@Base+0x12d4>
   1e304:	bl	13f84 <fprintf@plt>
   1e308:	b	1e008 <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1e30c:	add	r1, sp, #268	; 0x10c
   1e310:	ldrd	r2, [r4, #96]	; 0x60
   1e314:	ldr	r0, [r8, #204]	; 0xcc
   1e318:	str	r1, [sp, #4]
   1e31c:	str	r5, [sp]
   1e320:	mov	r1, fp
   1e324:	bl	13f84 <fprintf@plt>
   1e328:	b	1e008 <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1e32c:	ldr	r1, [pc, #200]	; 1e3fc <__flatcc_fb_gen_c_builder@@Base+0x12d8>
   1e330:	ldr	r2, [pc, #200]	; 1e400 <__flatcc_fb_gen_c_builder@@Base+0x12dc>
   1e334:	mov	r3, #178	; 0xb2
   1e338:	ldr	r0, [r1]
   1e33c:	str	r2, [sp]
   1e340:	ldr	r1, [pc, #188]	; 1e404 <__flatcc_fb_gen_c_builder@@Base+0x12e0>
   1e344:	ldr	r2, [pc, #188]	; 1e408 <__flatcc_fb_gen_c_builder@@Base+0x12e4>
   1e348:	bl	13f84 <fprintf@plt>
   1e34c:	ldr	r3, [pc, #184]	; 1e40c <__flatcc_fb_gen_c_builder@@Base+0x12e8>
   1e350:	mov	r2, #178	; 0xb2
   1e354:	ldr	r1, [pc, #172]	; 1e408 <__flatcc_fb_gen_c_builder@@Base+0x12e4>
   1e358:	ldr	r0, [pc, #176]	; 1e410 <__flatcc_fb_gen_c_builder@@Base+0x12ec>
   1e35c:	bl	14038 <__assert_fail@plt>
   1e360:	ldr	r1, [pc, #148]	; 1e3fc <__flatcc_fb_gen_c_builder@@Base+0x12d8>
   1e364:	ldr	r2, [pc, #168]	; 1e414 <__flatcc_fb_gen_c_builder@@Base+0x12f0>
   1e368:	mov	r3, #202	; 0xca
   1e36c:	ldr	r0, [r1]
   1e370:	str	r2, [sp]
   1e374:	ldr	r1, [pc, #136]	; 1e404 <__flatcc_fb_gen_c_builder@@Base+0x12e0>
   1e378:	ldr	r2, [pc, #136]	; 1e408 <__flatcc_fb_gen_c_builder@@Base+0x12e4>
   1e37c:	bl	13f84 <fprintf@plt>
   1e380:	ldr	r3, [pc, #132]	; 1e40c <__flatcc_fb_gen_c_builder@@Base+0x12e8>
   1e384:	mov	r2, #202	; 0xca
   1e388:	ldr	r1, [pc, #120]	; 1e408 <__flatcc_fb_gen_c_builder@@Base+0x12e4>
   1e38c:	ldr	r0, [pc, #124]	; 1e410 <__flatcc_fb_gen_c_builder@@Base+0x12ec>
   1e390:	bl	14038 <__assert_fail@plt>
   1e394:	ldr	r3, [r8, #204]	; 0xcc
   1e398:	mov	r2, #15
   1e39c:	mov	r1, #1
   1e3a0:	ldr	r0, [pc, #112]	; 1e418 <__flatcc_fb_gen_c_builder@@Base+0x12f4>
   1e3a4:	bl	13f18 <fwrite@plt>
   1e3a8:	b	1e080 <__flatcc_fb_gen_c_builder@@Base+0xf5c>
   1e3ac:	andeq	r3, r5, r4, asr r9
   1e3b0:	strdeq	r4, [r5], -r8
   1e3b4:	muleq	r5, r0, sl
   1e3b8:	andeq	r3, r5, r8, lsr ip
   1e3bc:	muleq	r5, ip, r9
   1e3c0:	ldrdeq	r3, [r5], -ip
   1e3c4:	andeq	r3, r5, r4, lsl sp
   1e3c8:	ldrdeq	r3, [r5], -r0
   1e3cc:	andeq	r3, r5, r4, lsr sp
   1e3d0:	ldrdeq	r3, [r5], -r4
   1e3d4:	andeq	r3, r5, r0, lsl #29
   1e3d8:	andeq	r3, r5, r8, lsr pc
   1e3dc:	andeq	r3, r5, r4, lsl #20
   1e3e0:	ldrdeq	r3, [r5], -r4
   1e3e4:	andeq	r3, r5, r0, lsl #22
   1e3e8:			; <UNDEFINED> instruction: 0x000539bc
   1e3ec:	andeq	r3, r5, r0, asr sl
   1e3f0:	andeq	r3, r5, ip, ror #22
   1e3f4:	andeq	r3, r5, r0, lsr fp
   1e3f8:	andeq	r3, r5, ip, ror ip
   1e3fc:	andeq	sp, r6, r8, lsr #1
   1e400:	strdeq	r3, [r5], -ip
   1e404:			; <UNDEFINED> instruction: 0x00041fbc
   1e408:	andeq	r3, r5, r8, lsr #23
   1e40c:	andeq	r3, r5, ip, lsr #18
   1e410:	andeq	sl, r4, r4, asr sp
   1e414:	andeq	r3, r5, r0, asr #25
   1e418:	andeq	r3, r5, r4, lsl #26
   1e41c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e420:	sub	sp, sp, #464	; 0x1d0
   1e424:	mov	r4, r1
   1e428:	mov	r5, r0
   1e42c:	mov	r2, #220	; 0xdc
   1e430:	mov	r1, #0
   1e434:	add	r0, sp, #24
   1e438:	bl	13f9c <memset@plt>
   1e43c:	mov	r2, #220	; 0xdc
   1e440:	mov	r1, #0
   1e444:	add	r0, sp, #244	; 0xf4
   1e448:	bl	13f9c <memset@plt>
   1e44c:	mov	r1, r4
   1e450:	ldr	r0, [r4, #12]
   1e454:	add	r2, sp, #24
   1e458:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e45c:	add	r2, sp, #24
   1e460:	ldr	r0, [r5]
   1e464:	ldr	r1, [pc, #372]	; 1e5e0 <__flatcc_fb_gen_c_builder@@Base+0x14bc>
   1e468:	bl	13f84 <fprintf@plt>
   1e46c:	ldr	r4, [r4, #20]
   1e470:	cmp	r4, #0
   1e474:	beq	1e538 <__flatcc_fb_gen_c_builder@@Base+0x1414>
   1e478:	ldr	r8, [pc, #356]	; 1e5e4 <__flatcc_fb_gen_c_builder@@Base+0x14c0>
   1e47c:	ldr	sl, [pc, #356]	; 1e5e8 <__flatcc_fb_gen_c_builder@@Base+0x14c4>
   1e480:	ldr	r9, [pc, #356]	; 1e5ec <__flatcc_fb_gen_c_builder@@Base+0x14c8>
   1e484:	ldrh	r2, [r4, #24]
   1e488:	ldr	r3, [r4, #4]
   1e48c:	cmp	r2, #10
   1e490:	ldm	r3, {r6, r7}
   1e494:	beq	1e558 <__flatcc_fb_gen_c_builder@@Base+0x1434>
   1e498:	cmp	r2, #14
   1e49c:	beq	1e4dc <__flatcc_fb_gen_c_builder@@Base+0x13b8>
   1e4a0:	cmp	r2, #0
   1e4a4:	beq	1e52c <__flatcc_fb_gen_c_builder@@Base+0x1408>
   1e4a8:	ldr	r1, [pc, #320]	; 1e5f0 <__flatcc_fb_gen_c_builder@@Base+0x14cc>
   1e4ac:	ldr	r2, [pc, #320]	; 1e5f4 <__flatcc_fb_gen_c_builder@@Base+0x14d0>
   1e4b0:	mov	r3, #83	; 0x53
   1e4b4:	ldr	r0, [r1]
   1e4b8:	str	r2, [sp]
   1e4bc:	ldr	r1, [pc, #308]	; 1e5f8 <__flatcc_fb_gen_c_builder@@Base+0x14d4>
   1e4c0:	ldr	r2, [pc, #308]	; 1e5fc <__flatcc_fb_gen_c_builder@@Base+0x14d8>
   1e4c4:	bl	13f84 <fprintf@plt>
   1e4c8:	ldr	r3, [pc, #304]	; 1e600 <__flatcc_fb_gen_c_builder@@Base+0x14dc>
   1e4cc:	mov	r2, #83	; 0x53
   1e4d0:	ldr	r1, [pc, #292]	; 1e5fc <__flatcc_fb_gen_c_builder@@Base+0x14d8>
   1e4d4:	ldr	r0, [pc, #296]	; 1e604 <__flatcc_fb_gen_c_builder@@Base+0x14e0>
   1e4d8:	bl	14038 <__assert_fail@plt>
   1e4dc:	ldr	r1, [r4, #16]
   1e4e0:	add	r2, sp, #244	; 0xf4
   1e4e4:	ldr	r0, [r1, #12]
   1e4e8:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e4ec:	ldr	r1, [r4, #16]
   1e4f0:	ldrh	r3, [r1, #8]
   1e4f4:	cmp	r3, #0
   1e4f8:	beq	1e580 <__flatcc_fb_gen_c_builder@@Base+0x145c>
   1e4fc:	cmp	r3, #1
   1e500:	bne	1e5ac <__flatcc_fb_gen_c_builder@@Base+0x1488>
   1e504:	ldr	r2, [r4, #48]	; 0x30
   1e508:	str	r6, [sp, #16]
   1e50c:	str	r7, [sp, #12]
   1e510:	ldrh	r3, [r1, #104]	; 0x68
   1e514:	ldr	r0, [r5]
   1e518:	str	r3, [sp, #8]
   1e51c:	ldrd	r6, [r1, #112]	; 0x70
   1e520:	mov	r1, r9
   1e524:	strd	r6, [sp]
   1e528:	bl	13f84 <fprintf@plt>
   1e52c:	ldr	r4, [r4]
   1e530:	cmp	r4, #0
   1e534:	bne	1e484 <__flatcc_fb_gen_c_builder@@Base+0x1360>
   1e538:	ldr	r3, [r5]
   1e53c:	mov	r2, #47	; 0x2f
   1e540:	mov	r1, #1
   1e544:	ldr	r0, [pc, #188]	; 1e608 <__flatcc_fb_gen_c_builder@@Base+0x14e4>
   1e548:	bl	13f18 <fwrite@plt>
   1e54c:	mov	r0, #0
   1e550:	add	sp, sp, #464	; 0x1d0
   1e554:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e558:	ldr	r2, [r4, #48]	; 0x30
   1e55c:	ldr	r0, [r5]
   1e560:	mov	r3, r7
   1e564:	str	r6, [sp]
   1e568:	mov	r1, r8
   1e56c:	bl	13f84 <fprintf@plt>
   1e570:	ldr	r4, [r4]
   1e574:	cmp	r4, #0
   1e578:	bne	1e484 <__flatcc_fb_gen_c_builder@@Base+0x1360>
   1e57c:	b	1e538 <__flatcc_fb_gen_c_builder@@Base+0x1414>
   1e580:	ldr	r2, [r4, #48]	; 0x30
   1e584:	ldr	r0, [r5]
   1e588:	add	r3, sp, #244	; 0xf4
   1e58c:	str	r6, [sp, #4]
   1e590:	str	r7, [sp]
   1e594:	mov	r1, sl
   1e598:	bl	13f84 <fprintf@plt>
   1e59c:	ldr	r4, [r4]
   1e5a0:	cmp	r4, #0
   1e5a4:	bne	1e484 <__flatcc_fb_gen_c_builder@@Base+0x1360>
   1e5a8:	b	1e538 <__flatcc_fb_gen_c_builder@@Base+0x1414>
   1e5ac:	ldr	r1, [pc, #60]	; 1e5f0 <__flatcc_fb_gen_c_builder@@Base+0x14cc>
   1e5b0:	ldr	r2, [pc, #84]	; 1e60c <__flatcc_fb_gen_c_builder@@Base+0x14e8>
   1e5b4:	mov	r3, #74	; 0x4a
   1e5b8:	ldr	r0, [r1]
   1e5bc:	str	r2, [sp]
   1e5c0:	ldr	r1, [pc, #48]	; 1e5f8 <__flatcc_fb_gen_c_builder@@Base+0x14d4>
   1e5c4:	ldr	r2, [pc, #48]	; 1e5fc <__flatcc_fb_gen_c_builder@@Base+0x14d8>
   1e5c8:	bl	13f84 <fprintf@plt>
   1e5cc:	ldr	r3, [pc, #44]	; 1e600 <__flatcc_fb_gen_c_builder@@Base+0x14dc>
   1e5d0:	mov	r2, #74	; 0x4a
   1e5d4:	ldr	r1, [pc, #32]	; 1e5fc <__flatcc_fb_gen_c_builder@@Base+0x14d8>
   1e5d8:	ldr	r0, [pc, #36]	; 1e604 <__flatcc_fb_gen_c_builder@@Base+0x14e0>
   1e5dc:	bl	14038 <__assert_fail@plt>
   1e5e0:	strdeq	r3, [r5], -r8
   1e5e4:	andeq	r4, r5, r0, ror #2
   1e5e8:	andeq	r4, r5, r8, lsl #1
   1e5ec:	ldrdeq	r4, [r5], -r8
   1e5f0:	andeq	sp, r6, r8, lsr #1
   1e5f4:	andeq	r4, r5, r0, lsr #3
   1e5f8:			; <UNDEFINED> instruction: 0x00041fbc
   1e5fc:	andeq	r3, r5, r8, lsr #23
   1e600:	andeq	r3, r5, r0, asr #18
   1e604:	andeq	sl, r4, r4, asr sp
   1e608:	andeq	r4, r5, r8, asr r0
   1e60c:	andeq	r4, r5, r4, lsr #2

0001e610 <__flatcc_fb_gen_c_verifier@@Base>:
   1e610:	ldr	r3, [r0, #208]	; 0xd0
   1e614:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e618:	mov	r6, r0
   1e61c:	ldr	r3, [r3, #164]	; 0xa4
   1e620:	sub	sp, sp, #244	; 0xf4
   1e624:	mov	r2, r3
   1e628:	ldr	r1, [pc, #744]	; 1e918 <__flatcc_fb_gen_c_verifier@@Base+0x308>
   1e62c:	ldr	r0, [r0, #204]	; 0xcc
   1e630:	bl	13f84 <fprintf@plt>
   1e634:	ldr	r3, [r6, #204]	; 0xcc
   1e638:	mov	r2, #81	; 0x51
   1e63c:	mov	r1, #1
   1e640:	ldr	r0, [pc, #724]	; 1e91c <__flatcc_fb_gen_c_verifier@@Base+0x30c>
   1e644:	bl	13f18 <fwrite@plt>
   1e648:	ldr	r3, [r6, #208]	; 0xd0
   1e64c:	ldr	r1, [pc, #716]	; 1e920 <__flatcc_fb_gen_c_verifier@@Base+0x310>
   1e650:	ldr	r0, [r6, #204]	; 0xcc
   1e654:	ldr	r2, [r3, #164]	; 0xa4
   1e658:	bl	13f84 <fprintf@plt>
   1e65c:	ldr	r3, [r6, #208]	; 0xd0
   1e660:	ldr	r1, [pc, #700]	; 1e924 <__flatcc_fb_gen_c_verifier@@Base+0x314>
   1e664:	ldr	r0, [r6, #204]	; 0xcc
   1e668:	ldr	r2, [r3, #160]	; 0xa0
   1e66c:	bl	13f84 <fprintf@plt>
   1e670:	ldr	r3, [r6, #204]	; 0xcc
   1e674:	mov	r2, #7
   1e678:	mov	r1, #1
   1e67c:	ldr	r0, [pc, #676]	; 1e928 <__flatcc_fb_gen_c_verifier@@Base+0x318>
   1e680:	bl	13f18 <fwrite@plt>
   1e684:	ldr	r3, [r6, #204]	; 0xcc
   1e688:	mov	r2, #36	; 0x24
   1e68c:	mov	r1, #1
   1e690:	ldr	r0, [pc, #660]	; 1e92c <__flatcc_fb_gen_c_verifier@@Base+0x31c>
   1e694:	bl	13f18 <fwrite@plt>
   1e698:	ldr	r1, [pc, #656]	; 1e930 <__flatcc_fb_gen_c_verifier@@Base+0x320>
   1e69c:	mov	r0, r6
   1e6a0:	ldr	r2, [pc, #652]	; 1e934 <__flatcc_fb_gen_c_verifier@@Base+0x324>
   1e6a4:	bl	150e4 <__flatcc_fb_gen_c_includes@@Base>
   1e6a8:	ldr	r3, [r6, #212]	; 0xd4
   1e6ac:	ldr	r1, [r6, #204]	; 0xcc
   1e6b0:	ldr	r3, [r3, #140]	; 0x8c
   1e6b4:	cmp	r3, #0
   1e6b8:	beq	1e6d4 <__flatcc_fb_gen_c_verifier@@Base+0xc4>
   1e6bc:	mov	r3, r1
   1e6c0:	mov	r2, #36	; 0x24
   1e6c4:	mov	r1, #1
   1e6c8:	ldr	r0, [pc, #616]	; 1e938 <__flatcc_fb_gen_c_verifier@@Base+0x328>
   1e6cc:	bl	13f18 <fwrite@plt>
   1e6d0:	ldr	r1, [r6, #204]	; 0xcc
   1e6d4:	mov	r0, #10
   1e6d8:	bl	13fe4 <fputc@plt>
   1e6dc:	add	r0, sp, #20
   1e6e0:	mov	r2, #220	; 0xdc
   1e6e4:	mov	r1, #0
   1e6e8:	bl	13f9c <memset@plt>
   1e6ec:	ldr	r3, [r6, #208]	; 0xd0
   1e6f0:	ldr	r4, [r3, #40]	; 0x28
   1e6f4:	cmp	r4, #0
   1e6f8:	ldrne	r5, [pc, #572]	; 1e93c <__flatcc_fb_gen_c_verifier@@Base+0x32c>
   1e6fc:	bne	1e710 <__flatcc_fb_gen_c_verifier@@Base+0x100>
   1e700:	b	1e748 <__flatcc_fb_gen_c_verifier@@Base+0x138>
   1e704:	ldr	r4, [r4]
   1e708:	cmp	r4, #0
   1e70c:	beq	1e748 <__flatcc_fb_gen_c_verifier@@Base+0x138>
   1e710:	ldrh	r3, [r4, #8]
   1e714:	cmp	r3, #0
   1e718:	bne	1e704 <__flatcc_fb_gen_c_verifier@@Base+0xf4>
   1e71c:	mov	r1, r4
   1e720:	ldr	r0, [r4, #12]
   1e724:	add	r2, sp, #20
   1e728:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e72c:	add	r2, sp, #20
   1e730:	mov	r1, r5
   1e734:	ldr	r0, [r6, #204]	; 0xcc
   1e738:	bl	13f84 <fprintf@plt>
   1e73c:	ldr	r4, [r4]
   1e740:	cmp	r4, #0
   1e744:	bne	1e710 <__flatcc_fb_gen_c_verifier@@Base+0x100>
   1e748:	ldr	r1, [r6, #204]	; 0xcc
   1e74c:	mov	r0, #10
   1e750:	bl	13fe4 <fputc@plt>
   1e754:	ldr	r3, [r6, #208]	; 0xd0
   1e758:	ldr	r5, [r3, #40]	; 0x28
   1e75c:	cmp	r5, #0
   1e760:	addne	r4, r6, #204	; 0xcc
   1e764:	bne	1e778 <__flatcc_fb_gen_c_verifier@@Base+0x168>
   1e768:	b	1e8d0 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1e76c:	ldr	r5, [r5]
   1e770:	cmp	r5, #0
   1e774:	beq	1e79c <__flatcc_fb_gen_c_verifier@@Base+0x18c>
   1e778:	ldrh	r3, [r5, #8]
   1e77c:	cmp	r3, #4
   1e780:	bne	1e76c <__flatcc_fb_gen_c_verifier@@Base+0x15c>
   1e784:	mov	r1, r5
   1e788:	mov	r0, r4
   1e78c:	bl	1e41c <__flatcc_fb_gen_c_builder@@Base+0x12f8>
   1e790:	ldr	r5, [r5]
   1e794:	cmp	r5, #0
   1e798:	bne	1e778 <__flatcc_fb_gen_c_verifier@@Base+0x168>
   1e79c:	ldr	r3, [r6, #208]	; 0xd0
   1e7a0:	ldr	r4, [r3, #40]	; 0x28
   1e7a4:	cmp	r4, #0
   1e7a8:	beq	1e8d0 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1e7ac:	ldr	fp, [pc, #396]	; 1e940 <__flatcc_fb_gen_c_verifier@@Base+0x330>
   1e7b0:	ldr	sl, [pc, #396]	; 1e944 <__flatcc_fb_gen_c_verifier@@Base+0x334>
   1e7b4:	mov	r7, #220	; 0xdc
   1e7b8:	b	1e7c8 <__flatcc_fb_gen_c_verifier@@Base+0x1b8>
   1e7bc:	ldr	r4, [r4]
   1e7c0:	cmp	r4, #0
   1e7c4:	beq	1e88c <__flatcc_fb_gen_c_verifier@@Base+0x27c>
   1e7c8:	ldrh	r3, [r4, #8]
   1e7cc:	cmp	r3, #1
   1e7d0:	bne	1e7bc <__flatcc_fb_gen_c_verifier@@Base+0x1ac>
   1e7d4:	mov	r2, r7
   1e7d8:	mov	r1, r5
   1e7dc:	add	r0, sp, #20
   1e7e0:	bl	13f9c <memset@plt>
   1e7e4:	mov	r1, r4
   1e7e8:	ldr	r0, [r4, #12]
   1e7ec:	add	r2, sp, #20
   1e7f0:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e7f4:	ldrh	r2, [r4, #104]	; 0x68
   1e7f8:	ldr	r0, [r6, #204]	; 0xcc
   1e7fc:	add	r3, sp, #20
   1e800:	str	r2, [sp, #8]
   1e804:	ldrd	r8, [r4, #112]	; 0x70
   1e808:	mov	r2, r3
   1e80c:	mov	r1, fp
   1e810:	strd	r8, [sp]
   1e814:	bl	13f84 <fprintf@plt>
   1e818:	ldrh	r2, [r4, #104]	; 0x68
   1e81c:	ldr	r0, [r6, #204]	; 0xcc
   1e820:	add	r3, sp, #20
   1e824:	str	r2, [sp, #8]
   1e828:	ldrd	r8, [r4, #112]	; 0x70
   1e82c:	mov	r2, r3
   1e830:	mov	r1, sl
   1e834:	strd	r8, [sp]
   1e838:	bl	13f84 <fprintf@plt>
   1e83c:	ldrh	r2, [r4, #104]	; 0x68
   1e840:	ldr	r0, [r6, #204]	; 0xcc
   1e844:	mov	r3, r6
   1e848:	str	r2, [sp, #8]
   1e84c:	ldrd	r8, [r4, #112]	; 0x70
   1e850:	add	r2, sp, #20
   1e854:	ldr	r1, [pc, #236]	; 1e948 <__flatcc_fb_gen_c_verifier@@Base+0x338>
   1e858:	strd	r8, [sp]
   1e85c:	bl	13f84 <fprintf@plt>
   1e860:	ldrh	r3, [r4, #104]	; 0x68
   1e864:	ldr	r0, [r6, #204]	; 0xcc
   1e868:	add	r2, sp, #20
   1e86c:	str	r3, [sp, #8]
   1e870:	ldrd	r8, [r4, #112]	; 0x70
   1e874:	ldr	r1, [pc, #208]	; 1e94c <__flatcc_fb_gen_c_verifier@@Base+0x33c>
   1e878:	strd	r8, [sp]
   1e87c:	bl	13f84 <fprintf@plt>
   1e880:	ldr	r4, [r4]
   1e884:	cmp	r4, #0
   1e888:	bne	1e7c8 <__flatcc_fb_gen_c_verifier@@Base+0x1b8>
   1e88c:	ldr	r3, [r6, #208]	; 0xd0
   1e890:	ldr	r4, [r3, #40]	; 0x28
   1e894:	cmp	r4, #0
   1e898:	bne	1e8ac <__flatcc_fb_gen_c_verifier@@Base+0x29c>
   1e89c:	b	1e8d0 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1e8a0:	ldr	r4, [r4]
   1e8a4:	cmp	r4, #0
   1e8a8:	beq	1e8d0 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1e8ac:	ldrh	r3, [r4, #8]
   1e8b0:	cmp	r3, #0
   1e8b4:	bne	1e8a0 <__flatcc_fb_gen_c_verifier@@Base+0x290>
   1e8b8:	mov	r1, r4
   1e8bc:	mov	r0, r6
   1e8c0:	bl	1df10 <__flatcc_fb_gen_c_builder@@Base+0xdec>
   1e8c4:	ldr	r4, [r4]
   1e8c8:	cmp	r4, #0
   1e8cc:	bne	1e8ac <__flatcc_fb_gen_c_verifier@@Base+0x29c>
   1e8d0:	ldr	r3, [r6, #212]	; 0xd4
   1e8d4:	ldr	r0, [r6, #204]	; 0xcc
   1e8d8:	ldr	r3, [r3, #140]	; 0x8c
   1e8dc:	cmp	r3, #0
   1e8e0:	beq	1e8fc <__flatcc_fb_gen_c_verifier@@Base+0x2ec>
   1e8e4:	mov	r3, r0
   1e8e8:	mov	r2, #36	; 0x24
   1e8ec:	mov	r1, #1
   1e8f0:	ldr	r0, [pc, #88]	; 1e950 <__flatcc_fb_gen_c_verifier@@Base+0x340>
   1e8f4:	bl	13f18 <fwrite@plt>
   1e8f8:	ldr	r0, [r6, #204]	; 0xcc
   1e8fc:	ldr	r3, [r6, #208]	; 0xd0
   1e900:	ldr	r1, [pc, #76]	; 1e954 <__flatcc_fb_gen_c_verifier@@Base+0x344>
   1e904:	ldr	r2, [r3, #164]	; 0xa4
   1e908:	bl	13f84 <fprintf@plt>
   1e90c:	mov	r0, #0
   1e910:	add	sp, sp, #244	; 0xf4
   1e914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e918:	ldrdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   1e91c:			; <UNDEFINED> instruction: 0x000432b4
   1e920:	andeq	r3, r5, r8, lsr #13
   1e924:	andeq	r3, r5, r0, asr #13
   1e928:	muleq	r4, r0, r4
   1e92c:	andeq	r4, r5, r4, lsl #4
   1e930:	andeq	r1, r4, r0, lsl #23
   1e934:	andeq	r4, r5, ip, lsr #4
   1e938:	andeq	r3, r4, r8, asr #7
   1e93c:	andeq	r4, r5, r8, lsr r2
   1e940:	andeq	r4, r5, r0, lsl #5
   1e944:	andeq	r4, r5, ip, lsl r3
   1e948:	andeq	r4, r5, r0, asr #7
   1e94c:	andeq	r4, r5, r8, ror r4
   1e950:	andeq	r9, r4, ip, lsr #4
   1e954:	andeq	r4, r5, r8, lsr #10
   1e958:	push	{r1, r2, r3}
   1e95c:	ldr	r3, [pc, #216]	; 1ea3c <__flatcc_fb_gen_c_verifier@@Base+0x42c>
   1e960:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e964:	sub	sp, sp, #12
   1e968:	ldrb	r1, [r3]
   1e96c:	ldr	r2, [r0, #212]	; 0xd4
   1e970:	mov	r5, r0
   1e974:	cmp	r1, #0
   1e978:	ldr	sl, [sp, #44]	; 0x2c
   1e97c:	ldr	r4, [r0, #220]	; 0xdc
   1e980:	ldr	r6, [r2, #176]	; 0xb0
   1e984:	beq	1ea28 <__flatcc_fb_gen_c_verifier@@Base+0x418>
   1e988:	ldrb	r3, [sl]
   1e98c:	cmp	r3, #0
   1e990:	beq	1ea0c <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e994:	mul	r6, r6, r4
   1e998:	cmp	r6, #64	; 0x40
   1e99c:	ble	1e9e0 <__flatcc_fb_gen_c_verifier@@Base+0x3d0>
   1e9a0:	ldr	r9, [pc, #148]	; 1ea3c <__flatcc_fb_gen_c_verifier@@Base+0x42c>
   1e9a4:	ldr	r8, [pc, #148]	; 1ea40 <__flatcc_fb_gen_c_verifier@@Base+0x430>
   1e9a8:	mov	r4, r6
   1e9ac:	mov	r7, #64	; 0x40
   1e9b0:	sub	r4, r4, #64	; 0x40
   1e9b4:	mov	r3, r9
   1e9b8:	mov	r2, r7
   1e9bc:	mov	r1, r8
   1e9c0:	ldr	r0, [r5, #204]	; 0xcc
   1e9c4:	bl	13f84 <fprintf@plt>
   1e9c8:	cmp	r4, #64	; 0x40
   1e9cc:	bgt	1e9b0 <__flatcc_fb_gen_c_verifier@@Base+0x3a0>
   1e9d0:	sub	r3, r6, #65	; 0x41
   1e9d4:	bic	r3, r3, #63	; 0x3f
   1e9d8:	sub	r6, r6, #64	; 0x40
   1e9dc:	sub	r6, r6, r3
   1e9e0:	mov	r2, r6
   1e9e4:	ldr	r3, [pc, #80]	; 1ea3c <__flatcc_fb_gen_c_verifier@@Base+0x42c>
   1e9e8:	ldr	r1, [pc, #80]	; 1ea40 <__flatcc_fb_gen_c_verifier@@Base+0x430>
   1e9ec:	ldr	r0, [r5, #204]	; 0xcc
   1e9f0:	bl	13f84 <fprintf@plt>
   1e9f4:	add	r3, sp, #48	; 0x30
   1e9f8:	mov	r1, sl
   1e9fc:	mov	r2, r3
   1ea00:	ldr	r0, [r5, #204]	; 0xcc
   1ea04:	str	r3, [sp, #4]
   1ea08:	bl	13fd8 <vfprintf@plt>
   1ea0c:	ldr	r1, [r5, #204]	; 0xcc
   1ea10:	mov	r0, #10
   1ea14:	bl	13fe4 <fputc@plt>
   1ea18:	add	sp, sp, #12
   1ea1c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ea20:	add	sp, sp, #12
   1ea24:	bx	lr
   1ea28:	mov	r0, r3
   1ea2c:	mov	r2, #64	; 0x40
   1ea30:	mov	r1, #32
   1ea34:	bl	13f9c <memset@plt>
   1ea38:	b	1e988 <__flatcc_fb_gen_c_verifier@@Base+0x378>
   1ea3c:	strheq	sp, [r6], -r4
   1ea40:	andeq	sl, r4, r4, lsr sp
   1ea44:	ldr	r1, [pc]	; 1ea4c <__flatcc_fb_gen_c_verifier@@Base+0x43c>
   1ea48:	b	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ea4c:	andeq	r4, r5, r8, ror #13
   1ea50:	ldr	r1, [pc]	; 1ea58 <__flatcc_fb_gen_c_verifier@@Base+0x448>
   1ea54:	b	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ea58:	strdeq	r4, [r5], -ip
   1ea5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea60:	sub	r7, r3, r2
   1ea64:	add	r7, r7, #1
   1ea68:	sub	sp, sp, #44	; 0x2c
   1ea6c:	add	r7, r7, r7, lsr #31
   1ea70:	str	r2, [sp, #24]
   1ea74:	add	r7, r2, r7, asr #1
   1ea78:	ldr	r2, [sp, #80]	; 0x50
   1ea7c:	str	r3, [sp, #28]
   1ea80:	ldr	r3, [r1]
   1ea84:	str	r1, [sp, #20]
   1ea88:	str	r2, [sp, #32]
   1ea8c:	mov	r1, r2
   1ea90:	lsl	r2, r7, #4
   1ea94:	str	r2, [sp, #36]	; 0x24
   1ea98:	add	r2, r3, r2
   1ea9c:	mov	r6, r0
   1eaa0:	ldr	r8, [r2, #4]
   1eaa4:	ldr	r2, [sp, #84]	; 0x54
   1eaa8:	cmp	r1, r8
   1eaac:	str	r2, [sp, #16]
   1eab0:	bgt	1ec04 <__flatcc_fb_gen_c_verifier@@Base+0x5f4>
   1eab4:	sub	r8, r8, r1
   1eab8:	cmp	r8, #8
   1eabc:	movge	r8, #8
   1eac0:	ldr	r9, [r3, r7, lsl #4]
   1eac4:	cmp	r8, #0
   1eac8:	add	r9, r9, r1
   1eacc:	beq	1eda8 <__flatcc_fb_gen_c_verifier@@Base+0x798>
   1ead0:	rsb	ip, r8, #8
   1ead4:	add	r2, r9, r8
   1ead8:	lsl	ip, ip, #3
   1eadc:	mov	r3, ip
   1eae0:	mov	sl, #0
   1eae4:	mov	fp, #0
   1eae8:	ldrb	r0, [r2, #-1]!
   1eaec:	sub	r1, r3, #32
   1eaf0:	lsl	r5, r0, r1
   1eaf4:	rsb	r1, r3, #32
   1eaf8:	lsl	r4, r0, r3
   1eafc:	orr	r5, r5, r0, lsr r1
   1eb00:	add	r3, r3, #8
   1eb04:	cmp	r3, #64	; 0x40
   1eb08:	orr	sl, sl, r4
   1eb0c:	orr	fp, fp, r5
   1eb10:	bne	1eae8 <__flatcc_fb_gen_c_verifier@@Base+0x4d8>
   1eb14:	cmp	r8, #8
   1eb18:	bne	1ed84 <__flatcc_fb_gen_c_verifier@@Base+0x774>
   1eb1c:	mov	r3, fp
   1eb20:	stm	sp, {r8, r9}
   1eb24:	mov	r2, sl
   1eb28:	ldr	r1, [pc, #792]	; 1ee48 <__flatcc_fb_gen_c_verifier@@Base+0x838>
   1eb2c:	mov	r0, r6
   1eb30:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1eb34:	ldr	r3, [r6, #220]	; 0xdc
   1eb38:	add	r3, r3, #1
   1eb3c:	str	r3, [r6, #220]	; 0xdc
   1eb40:	ldr	r3, [sp, #24]
   1eb44:	cmp	r3, r7
   1eb48:	bne	1ec4c <__flatcc_fb_gen_c_verifier@@Base+0x63c>
   1eb4c:	ldr	r0, [sp, #20]
   1eb50:	ldr	r3, [sp, #36]	; 0x24
   1eb54:	ldr	r2, [r0]
   1eb58:	ldr	r1, [r0, #12]
   1eb5c:	add	r2, r2, r3
   1eb60:	ldr	r3, [r2, #12]
   1eb64:	ldr	r2, [r2, #8]
   1eb68:	str	r8, [sp]
   1eb6c:	ldr	r4, [r0, #4]
   1eb70:	mov	r0, r6
   1eb74:	blx	r4
   1eb78:	ldr	r3, [sp, #16]
   1eb7c:	cmp	r3, #0
   1eb80:	ble	1edd0 <__flatcc_fb_gen_c_verifier@@Base+0x7c0>
   1eb84:	mov	r2, r3
   1eb88:	ldr	r1, [pc, #700]	; 1ee4c <__flatcc_fb_gen_c_verifier@@Base+0x83c>
   1eb8c:	mov	r0, r6
   1eb90:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1eb94:	ldr	r3, [r6, #220]	; 0xdc
   1eb98:	cmp	r3, #0
   1eb9c:	beq	1ee0c <__flatcc_fb_gen_c_verifier@@Base+0x7fc>
   1eba0:	sub	r3, r3, #1
   1eba4:	str	r3, [r6, #220]	; 0xdc
   1eba8:	ldr	r1, [pc, #672]	; 1ee50 <__flatcc_fb_gen_c_verifier@@Base+0x840>
   1ebac:	mov	r0, r6
   1ebb0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ebb4:	ldr	r3, [r6, #220]	; 0xdc
   1ebb8:	cmp	r3, #0
   1ebbc:	beq	1ee34 <__flatcc_fb_gen_c_verifier@@Base+0x824>
   1ebc0:	sub	r3, r3, #1
   1ebc4:	str	r3, [r6, #220]	; 0xdc
   1ebc8:	mov	r2, r8
   1ebcc:	mov	r3, r9
   1ebd0:	ldr	r1, [pc, #636]	; 1ee54 <__flatcc_fb_gen_c_verifier@@Base+0x844>
   1ebd4:	mov	r0, r6
   1ebd8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ebdc:	ldr	r3, [r6, #220]	; 0xdc
   1ebe0:	ldr	r2, [sp, #16]
   1ebe4:	add	r3, r3, #1
   1ebe8:	cmp	r2, #0
   1ebec:	str	r3, [r6, #220]	; 0xdc
   1ebf0:	ble	1edbc <__flatcc_fb_gen_c_verifier@@Base+0x7ac>
   1ebf4:	ldr	r1, [pc, #592]	; 1ee4c <__flatcc_fb_gen_c_verifier@@Base+0x83c>
   1ebf8:	mov	r0, r6
   1ebfc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ec00:	b	1ecd4 <__flatcc_fb_gen_c_verifier@@Base+0x6c4>
   1ec04:	mov	r2, #0
   1ec08:	mov	r3, #0
   1ec0c:	mov	r8, #0
   1ec10:	mov	sl, r2
   1ec14:	mov	fp, r3
   1ec18:	mov	r9, r8
   1ec1c:	str	r9, [sp, #12]
   1ec20:	str	r8, [sp, #8]
   1ec24:	strd	sl, [sp]
   1ec28:	ldr	r1, [pc, #552]	; 1ee58 <__flatcc_fb_gen_c_verifier@@Base+0x848>
   1ec2c:	mov	r0, r6
   1ec30:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ec34:	ldr	r3, [r6, #220]	; 0xdc
   1ec38:	add	r3, r3, #1
   1ec3c:	str	r3, [r6, #220]	; 0xdc
   1ec40:	ldr	r3, [sp, #24]
   1ec44:	cmp	r3, r7
   1ec48:	beq	1eb4c <__flatcc_fb_gen_c_verifier@@Base+0x53c>
   1ec4c:	ldr	r3, [sp, #28]
   1ec50:	cmp	r3, r7
   1ec54:	beq	1ed04 <__flatcc_fb_gen_c_verifier@@Base+0x6f4>
   1ec58:	ldr	r3, [sp, #16]
   1ec5c:	mov	r2, r7
   1ec60:	str	r3, [sp, #4]
   1ec64:	ldr	r3, [sp, #32]
   1ec68:	ldr	r1, [sp, #20]
   1ec6c:	str	r3, [sp]
   1ec70:	mov	r0, r6
   1ec74:	ldr	r3, [sp, #28]
   1ec78:	bl	1ea5c <__flatcc_fb_gen_c_verifier@@Base+0x44c>
   1ec7c:	ldr	r3, [r6, #220]	; 0xdc
   1ec80:	cmp	r3, #0
   1ec84:	beq	1ede4 <__flatcc_fb_gen_c_verifier@@Base+0x7d4>
   1ec88:	sub	r3, r3, #1
   1ec8c:	str	r3, [r6, #220]	; 0xdc
   1ec90:	mov	r2, r8
   1ec94:	mov	r3, r9
   1ec98:	ldr	r1, [pc, #436]	; 1ee54 <__flatcc_fb_gen_c_verifier@@Base+0x844>
   1ec9c:	mov	r0, r6
   1eca0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1eca4:	ldr	r3, [sp, #16]
   1eca8:	ldr	r0, [r6, #220]	; 0xdc
   1ecac:	str	r3, [sp, #4]
   1ecb0:	ldr	r3, [sp, #32]
   1ecb4:	add	r0, r0, #1
   1ecb8:	str	r3, [sp]
   1ecbc:	ldr	r2, [sp, #24]
   1ecc0:	str	r0, [r6, #220]	; 0xdc
   1ecc4:	sub	r3, r7, #1
   1ecc8:	ldr	r1, [sp, #20]
   1eccc:	mov	r0, r6
   1ecd0:	bl	1ea5c <__flatcc_fb_gen_c_verifier@@Base+0x44c>
   1ecd4:	ldr	r3, [r6, #220]	; 0xdc
   1ecd8:	cmp	r3, #0
   1ecdc:	beq	1edf8 <__flatcc_fb_gen_c_verifier@@Base+0x7e8>
   1ece0:	sub	r3, r3, #1
   1ece4:	str	r3, [r6, #220]	; 0xdc
   1ece8:	mov	r2, r8
   1ecec:	mov	r3, r9
   1ecf0:	mov	r0, r6
   1ecf4:	ldr	r1, [pc, #352]	; 1ee5c <__flatcc_fb_gen_c_verifier@@Base+0x84c>
   1ecf8:	add	sp, sp, #44	; 0x2c
   1ecfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed00:	b	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ed04:	ldr	r0, [sp, #20]
   1ed08:	ldr	r3, [sp, #36]	; 0x24
   1ed0c:	ldr	r2, [r0]
   1ed10:	ldr	r1, [r0, #12]
   1ed14:	add	r2, r2, r3
   1ed18:	ldr	r3, [r2, #12]
   1ed1c:	ldr	r2, [r2, #8]
   1ed20:	str	r8, [sp]
   1ed24:	ldr	r4, [r0, #4]
   1ed28:	mov	r0, r6
   1ed2c:	blx	r4
   1ed30:	ldr	r3, [sp, #16]
   1ed34:	cmp	r3, #0
   1ed38:	ble	1ed70 <__flatcc_fb_gen_c_verifier@@Base+0x760>
   1ed3c:	mov	r2, r3
   1ed40:	ldr	r1, [pc, #260]	; 1ee4c <__flatcc_fb_gen_c_verifier@@Base+0x83c>
   1ed44:	mov	r0, r6
   1ed48:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ed4c:	ldr	r3, [r6, #220]	; 0xdc
   1ed50:	cmp	r3, #0
   1ed54:	beq	1ee20 <__flatcc_fb_gen_c_verifier@@Base+0x810>
   1ed58:	sub	r3, r3, #1
   1ed5c:	str	r3, [r6, #220]	; 0xdc
   1ed60:	ldr	r1, [pc, #232]	; 1ee50 <__flatcc_fb_gen_c_verifier@@Base+0x840>
   1ed64:	mov	r0, r6
   1ed68:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ed6c:	b	1ec7c <__flatcc_fb_gen_c_verifier@@Base+0x66c>
   1ed70:	ldr	r3, [sp, #20]
   1ed74:	mov	r0, r6
   1ed78:	ldr	r3, [r3, #8]
   1ed7c:	blx	r3
   1ed80:	b	1ed4c <__flatcc_fb_gen_c_verifier@@Base+0x73c>
   1ed84:	mov	r3, #1
   1ed88:	sub	r2, ip, #32
   1ed8c:	lsl	r0, r3, ip
   1ed90:	lsl	r1, r3, r2
   1ed94:	rsb	r2, ip, #32
   1ed98:	orr	r1, r1, r3, lsr r2
   1ed9c:	rsbs	r2, r0, #0
   1eda0:	rsc	r3, r1, #0
   1eda4:	b	1ec1c <__flatcc_fb_gen_c_verifier@@Base+0x60c>
   1eda8:	mov	r2, #0
   1edac:	mov	r3, #0
   1edb0:	mov	sl, r2
   1edb4:	mov	fp, r3
   1edb8:	b	1ec1c <__flatcc_fb_gen_c_verifier@@Base+0x60c>
   1edbc:	ldr	r3, [sp, #20]
   1edc0:	mov	r0, r6
   1edc4:	ldr	r3, [r3, #8]
   1edc8:	blx	r3
   1edcc:	b	1ecd4 <__flatcc_fb_gen_c_verifier@@Base+0x6c4>
   1edd0:	ldr	r3, [sp, #20]
   1edd4:	mov	r0, r6
   1edd8:	ldr	r3, [r3, #8]
   1eddc:	blx	r3
   1ede0:	b	1eb94 <__flatcc_fb_gen_c_verifier@@Base+0x584>
   1ede4:	ldr	r3, [pc, #116]	; 1ee60 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   1ede8:	ldr	r2, [pc, #116]	; 1ee64 <__flatcc_fb_gen_c_verifier@@Base+0x854>
   1edec:	ldr	r1, [pc, #116]	; 1ee68 <__flatcc_fb_gen_c_verifier@@Base+0x858>
   1edf0:	ldr	r0, [pc, #116]	; 1ee6c <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   1edf4:	bl	14038 <__assert_fail@plt>
   1edf8:	ldr	r3, [pc, #96]	; 1ee60 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   1edfc:	ldr	r2, [pc, #108]	; 1ee70 <__flatcc_fb_gen_c_verifier@@Base+0x860>
   1ee00:	ldr	r1, [pc, #96]	; 1ee68 <__flatcc_fb_gen_c_verifier@@Base+0x858>
   1ee04:	ldr	r0, [pc, #96]	; 1ee6c <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   1ee08:	bl	14038 <__assert_fail@plt>
   1ee0c:	ldr	r3, [pc, #76]	; 1ee60 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   1ee10:	mov	r2, #888	; 0x378
   1ee14:	ldr	r1, [pc, #76]	; 1ee68 <__flatcc_fb_gen_c_verifier@@Base+0x858>
   1ee18:	ldr	r0, [pc, #76]	; 1ee6c <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   1ee1c:	bl	14038 <__assert_fail@plt>
   1ee20:	ldr	r3, [pc, #56]	; 1ee60 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   1ee24:	ldr	r2, [pc, #72]	; 1ee74 <__flatcc_fb_gen_c_verifier@@Base+0x864>
   1ee28:	ldr	r1, [pc, #56]	; 1ee68 <__flatcc_fb_gen_c_verifier@@Base+0x858>
   1ee2c:	ldr	r0, [pc, #56]	; 1ee6c <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   1ee30:	bl	14038 <__assert_fail@plt>
   1ee34:	ldr	r3, [pc, #36]	; 1ee60 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   1ee38:	ldr	r2, [pc, #56]	; 1ee78 <__flatcc_fb_gen_c_verifier@@Base+0x868>
   1ee3c:	ldr	r1, [pc, #36]	; 1ee68 <__flatcc_fb_gen_c_verifier@@Base+0x858>
   1ee40:	ldr	r0, [pc, #36]	; 1ee6c <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   1ee44:	bl	14038 <__assert_fail@plt>
   1ee48:	andeq	r4, r5, r8, lsr r7
   1ee4c:	andeq	r4, r5, r4, lsl #15
   1ee50:	strdeq	r4, [r5], -r8
   1ee54:	strdeq	r4, [r5], -ip
   1ee58:	andeq	r4, r5, r8, asr r7
   1ee5c:	andeq	r4, r5, r4, lsl r8
   1ee60:	andeq	r4, r5, r4, asr #10
   1ee64:	andeq	r0, r0, fp, lsl #7
   1ee68:	muleq	r5, r4, r7
   1ee6c:	andeq	r4, r5, ip, ror #15
   1ee70:	andeq	r0, r0, lr, lsl #7
   1ee74:	andeq	r0, r0, r7, lsl #7
   1ee78:	andeq	r0, r0, r9, ror r3
   1ee7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ee80:	sub	sp, sp, #124	; 0x7c
   1ee84:	str	r1, [sp, #72]	; 0x48
   1ee88:	ldr	r1, [r1]
   1ee8c:	str	r2, [sp, #48]	; 0x30
   1ee90:	add	r2, r1, r2, lsl #4
   1ee94:	ldr	fp, [sp, #160]	; 0xa0
   1ee98:	str	r2, [sp, #84]	; 0x54
   1ee9c:	ldr	r2, [r2, #4]
   1eea0:	str	r1, [sp, #76]	; 0x4c
   1eea4:	add	r1, fp, #7
   1eea8:	cmp	r1, r2
   1eeac:	str	r1, [sp, #80]	; 0x50
   1eeb0:	str	r0, [sp, #68]	; 0x44
   1eeb4:	str	r3, [sp, #64]	; 0x40
   1eeb8:	bge	1f380 <__flatcc_fb_gen_c_verifier@@Base+0xd70>
   1eebc:	sub	r2, r2, fp
   1eec0:	cmp	r2, #8
   1eec4:	beq	1f380 <__flatcc_fb_gen_c_verifier@@Base+0xd70>
   1eec8:	ldr	r2, [sp, #48]	; 0x30
   1eecc:	ldr	r3, [sp, #64]	; 0x40
   1eed0:	sub	r3, r3, r2
   1eed4:	add	r3, r3, r3, lsr #31
   1eed8:	add	r3, r2, r3, asr #1
   1eedc:	cmp	r2, r3
   1eee0:	str	r3, [sp, #52]	; 0x34
   1eee4:	bge	1f0b4 <__flatcc_fb_gen_c_verifier@@Base+0xaa4>
   1eee8:	mov	r1, #0
   1eeec:	mov	r0, #0
   1eef0:	ldr	r2, [sp, #76]	; 0x4c
   1eef4:	strd	r0, [sp, #24]
   1eef8:	strd	r0, [sp, #32]
   1eefc:	mov	lr, fp
   1ef00:	strd	r8, [sp, #88]	; 0x58
   1ef04:	add	r1, r2, r3, lsl #4
   1ef08:	mov	sl, #0
   1ef0c:	mov	fp, #0
   1ef10:	mov	r9, r3
   1ef14:	strd	r4, [sp, #16]
   1ef18:	ldr	r3, [r1, #-12]
   1ef1c:	cmp	lr, r3
   1ef20:	bgt	1eff8 <__flatcc_fb_gen_c_verifier@@Base+0x9e8>
   1ef24:	sub	r3, r3, lr
   1ef28:	cmp	r3, #8
   1ef2c:	movge	r3, #8
   1ef30:	cmp	r3, #0
   1ef34:	beq	1f530 <__flatcc_fb_gen_c_verifier@@Base+0xf20>
   1ef38:	rsb	r2, r3, #8
   1ef3c:	ldr	ip, [r1, #-16]
   1ef40:	add	r3, r3, lr
   1ef44:	str	r2, [sp, #24]
   1ef48:	add	ip, ip, r3
   1ef4c:	lsl	r0, r2, #3
   1ef50:	mov	r3, #0
   1ef54:	mov	r2, #0
   1ef58:	strd	r6, [sp, #56]	; 0x38
   1ef5c:	mov	r8, r2
   1ef60:	mov	r7, lr
   1ef64:	mov	lr, r1
   1ef68:	mov	r1, r9
   1ef6c:	mov	r9, r3
   1ef70:	ldrb	r2, [ip, #-1]!
   1ef74:	sub	r3, r0, #32
   1ef78:	lsl	r5, r2, r3
   1ef7c:	rsb	r3, r0, #32
   1ef80:	lsl	r4, r2, r0
   1ef84:	orr	r5, r5, r2, lsr r3
   1ef88:	add	r0, r0, #8
   1ef8c:	cmp	r0, #64	; 0x40
   1ef90:	orr	r8, r8, r4
   1ef94:	orr	r9, r9, r5
   1ef98:	bne	1ef70 <__flatcc_fb_gen_c_verifier@@Base+0x960>
   1ef9c:	strd	r8, [sp, #32]
   1efa0:	ldr	r3, [sp, #24]
   1efa4:	mov	r9, r1
   1efa8:	mov	r1, lr
   1efac:	mov	lr, r7
   1efb0:	ldrd	r6, [sp, #56]	; 0x38
   1efb4:	strd	r4, [sp, #16]
   1efb8:	lsl	r3, r3, #3
   1efbc:	sub	r2, r3, #32
   1efc0:	mov	r0, #1
   1efc4:	mov	ip, #1
   1efc8:	lsl	r2, r0, r2
   1efcc:	str	r2, [sp, #12]
   1efd0:	ldr	r0, [sp, #12]
   1efd4:	rsb	r2, r3, #32
   1efd8:	lsl	r3, ip, r3
   1efdc:	orr	r2, r0, ip, lsr r2
   1efe0:	str	r3, [sp, #8]
   1efe4:	str	r2, [sp, #12]
   1efe8:	ldrd	r2, [sp, #8]
   1efec:	rsbs	r2, r2, #0
   1eff0:	rsc	r3, r3, #0
   1eff4:	strd	r2, [sp, #24]
   1eff8:	ldr	r3, [r1, #4]
   1effc:	ldr	ip, [r1]
   1f000:	cmp	lr, r3
   1f004:	str	r3, [sp, #56]	; 0x38
   1f008:	mov	r8, ip
   1f00c:	bgt	1f070 <__flatcc_fb_gen_c_verifier@@Base+0xa60>
   1f010:	sub	r3, r3, lr
   1f014:	cmp	r3, #8
   1f018:	movge	r3, #8
   1f01c:	cmp	r3, #0
   1f020:	beq	1f524 <__flatcc_fb_gen_c_verifier@@Base+0xf14>
   1f024:	rsb	r2, r3, #8
   1f028:	ldrd	r4, [sp, #16]
   1f02c:	add	r3, r3, lr
   1f030:	lsl	r0, r2, #3
   1f034:	add	ip, ip, r3
   1f038:	mov	sl, #0
   1f03c:	mov	fp, #0
   1f040:	ldrb	r2, [ip, #-1]!
   1f044:	sub	r3, r0, #32
   1f048:	lsl	r7, r2, r3
   1f04c:	rsb	r3, r0, #32
   1f050:	lsl	r6, r2, r0
   1f054:	orr	r7, r7, r2, lsr r3
   1f058:	add	r0, r0, #8
   1f05c:	cmp	r0, #64	; 0x40
   1f060:	orr	sl, sl, r6
   1f064:	orr	fp, fp, r7
   1f068:	bne	1f040 <__flatcc_fb_gen_c_verifier@@Base+0xa30>
   1f06c:	strd	r4, [sp, #16]
   1f070:	ldrd	r2, [sp, #32]
   1f074:	ldrd	r4, [sp, #24]
   1f078:	eor	r2, r2, sl
   1f07c:	eor	r3, r3, fp
   1f080:	and	r4, r4, r2
   1f084:	and	r5, r5, r3
   1f088:	mov	r2, r4
   1f08c:	mov	r3, r5
   1f090:	orrs	r3, r2, r3
   1f094:	bne	1f444 <__flatcc_fb_gen_c_verifier@@Base+0xe34>
   1f098:	ldr	r3, [sp, #48]	; 0x30
   1f09c:	sub	r9, r9, #1
   1f0a0:	cmp	r3, r9
   1f0a4:	sub	r1, r1, #16
   1f0a8:	bne	1ef18 <__flatcc_fb_gen_c_verifier@@Base+0x908>
   1f0ac:	ldrd	r8, [sp, #88]	; 0x58
   1f0b0:	mov	fp, lr
   1f0b4:	ldr	r3, [sp, #64]	; 0x40
   1f0b8:	ldr	r2, [sp, #52]	; 0x34
   1f0bc:	cmp	r3, r2
   1f0c0:	movle	r3, r2
   1f0c4:	ble	1f250 <__flatcc_fb_gen_c_verifier@@Base+0xc40>
   1f0c8:	ldr	r3, [sp, #76]	; 0x4c
   1f0cc:	mov	r0, #0
   1f0d0:	mov	r1, #0
   1f0d4:	mov	r4, r0
   1f0d8:	mov	r5, r1
   1f0dc:	add	ip, r3, r2, lsl #4
   1f0e0:	strd	r0, [sp, #16]
   1f0e4:	str	fp, [sp, #8]
   1f0e8:	ldr	lr, [ip, #4]
   1f0ec:	ldr	r6, [sp, #8]
   1f0f0:	cmp	r6, lr
   1f0f4:	bgt	1f1a0 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
   1f0f8:	sub	lr, lr, r6
   1f0fc:	cmp	lr, #8
   1f100:	movge	lr, #8
   1f104:	cmp	lr, #0
   1f108:	mov	r5, r6
   1f10c:	beq	1f5b4 <__flatcc_fb_gen_c_verifier@@Base+0xfa4>
   1f110:	rsb	r6, lr, #8
   1f114:	ldr	r4, [ip]
   1f118:	add	lr, lr, r5
   1f11c:	add	fp, r4, lr
   1f120:	mov	sl, r6
   1f124:	lsl	lr, r6, #3
   1f128:	mov	r4, #0
   1f12c:	mov	r5, #0
   1f130:	ldrb	r6, [fp, #-1]!
   1f134:	sub	r7, lr, #32
   1f138:	lsl	r9, r6, r7
   1f13c:	rsb	r7, lr, #32
   1f140:	lsl	r8, r6, lr
   1f144:	orr	r9, r9, r6, lsr r7
   1f148:	add	lr, lr, #8
   1f14c:	cmp	lr, #64	; 0x40
   1f150:	orr	r4, r4, r8
   1f154:	orr	r5, r5, r9
   1f158:	bne	1f130 <__flatcc_fb_gen_c_verifier@@Base+0xb20>
   1f15c:	lsl	lr, sl, #3
   1f160:	sub	r6, lr, #32
   1f164:	mov	r7, #1
   1f168:	mov	sl, #1
   1f16c:	lsl	r6, r7, r6
   1f170:	str	r6, [sp, #44]	; 0x2c
   1f174:	ldr	r7, [sp, #44]	; 0x2c
   1f178:	rsb	r6, lr, #32
   1f17c:	lsl	lr, sl, lr
   1f180:	orr	r6, r7, sl, lsr r6
   1f184:	str	lr, [sp, #40]	; 0x28
   1f188:	str	r6, [sp, #44]	; 0x2c
   1f18c:	ldrd	r6, [sp, #40]	; 0x28
   1f190:	rsbs	r6, r6, #0
   1f194:	rsc	r7, r7, #0
   1f198:	strd	r6, [sp, #16]
   1f19c:	ldr	r6, [sp, #8]
   1f1a0:	ldr	lr, [ip, #20]
   1f1a4:	cmp	r6, lr
   1f1a8:	bgt	1f208 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1f1ac:	sub	r1, lr, r6
   1f1b0:	cmp	r1, #8
   1f1b4:	movge	r1, #8
   1f1b8:	cmp	r1, #0
   1f1bc:	beq	1f5a8 <__flatcc_fb_gen_c_verifier@@Base+0xf98>
   1f1c0:	ldr	r0, [ip, #16]
   1f1c4:	rsb	lr, r1, #8
   1f1c8:	add	r1, r1, r6
   1f1cc:	add	fp, r0, r1
   1f1d0:	lsl	lr, lr, #3
   1f1d4:	mov	r0, #0
   1f1d8:	mov	r1, #0
   1f1dc:	ldrb	r6, [fp, #-1]!
   1f1e0:	sub	r7, lr, #32
   1f1e4:	lsl	r3, r6, r7
   1f1e8:	rsb	r7, lr, #32
   1f1ec:	lsl	r2, r6, lr
   1f1f0:	orr	r3, r3, r6, lsr r7
   1f1f4:	add	lr, lr, #8
   1f1f8:	cmp	lr, #64	; 0x40
   1f1fc:	orr	r0, r0, r2
   1f200:	orr	r1, r1, r3
   1f204:	bne	1f1dc <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1f208:	ldrd	sl, [sp, #16]
   1f20c:	eor	r6, r4, r0
   1f210:	eor	r7, r5, r1
   1f214:	and	sl, sl, r6
   1f218:	and	fp, fp, r7
   1f21c:	mov	r6, sl
   1f220:	mov	r7, fp
   1f224:	orrs	lr, r6, r7
   1f228:	bne	1f69c <__flatcc_fb_gen_c_verifier@@Base+0x108c>
   1f22c:	ldr	lr, [sp, #52]	; 0x34
   1f230:	ldr	r6, [sp, #64]	; 0x40
   1f234:	add	lr, lr, #1
   1f238:	cmp	r6, lr
   1f23c:	str	lr, [sp, #52]	; 0x34
   1f240:	add	ip, ip, #16
   1f244:	bne	1f0e8 <__flatcc_fb_gen_c_verifier@@Base+0xad8>
   1f248:	ldr	fp, [sp, #8]
   1f24c:	mov	r3, lr
   1f250:	add	r5, r3, #1
   1f254:	ldr	r4, [sp, #48]	; 0x30
   1f258:	cmp	r4, r5
   1f25c:	bge	1f814 <__flatcc_fb_gen_c_verifier@@Base+0x1204>
   1f260:	ldr	r3, [sp, #84]	; 0x54
   1f264:	ldr	r1, [sp, #80]	; 0x50
   1f268:	ldr	r2, [r3, #4]
   1f26c:	cmp	r1, r2
   1f270:	bge	1f280 <__flatcc_fb_gen_c_verifier@@Base+0xc70>
   1f274:	sub	r0, r2, fp
   1f278:	cmp	r0, #8
   1f27c:	bgt	1f5c4 <__flatcc_fb_gen_c_verifier@@Base+0xfb4>
   1f280:	add	r4, r4, #1
   1f284:	cmp	r4, r5
   1f288:	add	r3, r3, #16
   1f28c:	bne	1f268 <__flatcc_fb_gen_c_verifier@@Base+0xc58>
   1f290:	ldr	sl, [pc, #1616]	; 1f8e8 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1f294:	mov	r8, r4
   1f298:	mov	r6, #0
   1f29c:	ldr	r3, [sp, #48]	; 0x30
   1f2a0:	ldr	r2, [sp, #64]	; 0x40
   1f2a4:	cmp	r2, r5
   1f2a8:	cmpge	r4, r3
   1f2ac:	movgt	r9, #1
   1f2b0:	movle	r9, #0
   1f2b4:	ble	1f3e8 <__flatcc_fb_gen_c_verifier@@Base+0xdd8>
   1f2b8:	ldr	r3, [sp, #72]	; 0x48
   1f2bc:	ldr	r2, [sp, #48]	; 0x30
   1f2c0:	mov	r1, r3
   1f2c4:	ldr	r7, [r3, #24]
   1f2c8:	add	r7, r7, #1
   1f2cc:	str	r7, [r3, #24]
   1f2d0:	str	r7, [sp, #4]
   1f2d4:	str	fp, [sp]
   1f2d8:	sub	r3, r4, #1
   1f2dc:	ldr	r0, [sp, #68]	; 0x44
   1f2e0:	bl	1ea5c <__flatcc_fb_gen_c_verifier@@Base+0x44c>
   1f2e4:	cmp	r9, #0
   1f2e8:	beq	1f3f0 <__flatcc_fb_gen_c_verifier@@Base+0xde0>
   1f2ec:	ldr	r9, [sp, #68]	; 0x44
   1f2f0:	mov	r2, r7
   1f2f4:	ldr	r1, [pc, #1520]	; 1f8ec <__flatcc_fb_gen_c_verifier@@Base+0x12dc>
   1f2f8:	mov	r0, r9
   1f2fc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f300:	ldr	r3, [r9, #220]	; 0xdc
   1f304:	mov	r4, #0
   1f308:	str	r3, [r9, #228]	; 0xe4
   1f30c:	mov	r2, r7
   1f310:	ldr	r1, [pc, #1496]	; 1f8f0 <__flatcc_fb_gen_c_verifier@@Base+0x12e0>
   1f314:	mov	r0, r9
   1f318:	str	r4, [r9, #220]	; 0xdc
   1f31c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f320:	ldr	r2, [r9, #228]	; 0xe4
   1f324:	ldr	r3, [sp, #64]	; 0x40
   1f328:	str	fp, [sp]
   1f32c:	ldr	r1, [sp, #72]	; 0x48
   1f330:	mov	r0, r9
   1f334:	str	r2, [r9, #220]	; 0xdc
   1f338:	mov	r2, r5
   1f33c:	bl	1ee7c <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1f340:	ldr	r3, [r9, #220]	; 0xdc
   1f344:	mov	r2, r7
   1f348:	mov	r0, r9
   1f34c:	str	r3, [r9, #228]	; 0xe4
   1f350:	ldr	r1, [pc, #1436]	; 1f8f4 <__flatcc_fb_gen_c_verifier@@Base+0x12e4>
   1f354:	str	r4, [r9, #220]	; 0xdc
   1f358:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f35c:	ldr	r3, [r9, #228]	; 0xe4
   1f360:	mov	r0, r9
   1f364:	ldr	r1, [pc, #1420]	; 1f8f8 <__flatcc_fb_gen_c_verifier@@Base+0x12e8>
   1f368:	str	r3, [r9, #220]	; 0xdc
   1f36c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f370:	cmp	r5, r8
   1f374:	bgt	1f410 <__flatcc_fb_gen_c_verifier@@Base+0xe00>
   1f378:	add	sp, sp, #124	; 0x7c
   1f37c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f380:	ldr	r3, [sp, #48]	; 0x30
   1f384:	ldr	r2, [sp, #64]	; 0x40
   1f388:	cmp	r3, r2
   1f38c:	beq	1f3c0 <__flatcc_fb_gen_c_verifier@@Base+0xdb0>
   1f390:	add	r3, r3, #1
   1f394:	cmp	r2, r3
   1f398:	bne	1eec8 <__flatcc_fb_gen_c_verifier@@Base+0x8b8>
   1f39c:	ldr	r3, [sp, #76]	; 0x4c
   1f3a0:	add	r3, r3, r2, lsl #4
   1f3a4:	ldr	r2, [sp, #80]	; 0x50
   1f3a8:	ldr	r3, [r3, #4]
   1f3ac:	cmp	r2, r3
   1f3b0:	bge	1f3c0 <__flatcc_fb_gen_c_verifier@@Base+0xdb0>
   1f3b4:	sub	r3, r3, fp
   1f3b8:	cmp	r3, #8
   1f3bc:	bne	1eec8 <__flatcc_fb_gen_c_verifier@@Base+0x8b8>
   1f3c0:	mov	ip, #0
   1f3c4:	str	fp, [sp]
   1f3c8:	ldr	r3, [sp, #64]	; 0x40
   1f3cc:	ldr	r2, [sp, #48]	; 0x30
   1f3d0:	ldr	r1, [sp, #72]	; 0x48
   1f3d4:	ldr	r0, [sp, #68]	; 0x44
   1f3d8:	str	ip, [sp, #4]
   1f3dc:	bl	1ea5c <__flatcc_fb_gen_c_verifier@@Base+0x44c>
   1f3e0:	add	sp, sp, #124	; 0x7c
   1f3e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f3e8:	cmp	r4, r3
   1f3ec:	bgt	1f89c <__flatcc_fb_gen_c_verifier@@Base+0x128c>
   1f3f0:	ldr	r3, [sp, #64]	; 0x40
   1f3f4:	cmp	r3, r5
   1f3f8:	bge	1f870 <__flatcc_fb_gen_c_verifier@@Base+0x1260>
   1f3fc:	ldr	r3, [sp, #48]	; 0x30
   1f400:	cmp	r4, r3
   1f404:	ble	1f82c <__flatcc_fb_gen_c_verifier@@Base+0x121c>
   1f408:	cmp	r5, r8
   1f40c:	ble	1f378 <__flatcc_fb_gen_c_verifier@@Base+0xd68>
   1f410:	ldr	r3, [sp, #68]	; 0x44
   1f414:	ldr	r3, [r3, #220]	; 0xdc
   1f418:	cmp	r3, #0
   1f41c:	beq	1f888 <__flatcc_fb_gen_c_verifier@@Base+0x1278>
   1f420:	ldr	r0, [sp, #68]	; 0x44
   1f424:	sub	r3, r3, #1
   1f428:	mov	r2, r6
   1f42c:	str	r3, [r0, #220]	; 0xdc
   1f430:	ldr	r1, [pc, #1220]	; 1f8fc <__flatcc_fb_gen_c_verifier@@Base+0x12ec>
   1f434:	mov	r3, sl
   1f438:	add	sp, sp, #124	; 0x7c
   1f43c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f440:	b	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f444:	ldr	r0, [sp, #56]	; 0x38
   1f448:	mov	ip, r8
   1f44c:	cmp	lr, r0
   1f450:	mov	r8, r9
   1f454:	mov	fp, lr
   1f458:	ble	1f548 <__flatcc_fb_gen_c_verifier@@Base+0xf38>
   1f45c:	mov	r5, #0
   1f460:	mov	r4, r5
   1f464:	mov	r2, #0
   1f468:	mov	r3, #0
   1f46c:	ldr	r6, [sp, #68]	; 0x44
   1f470:	ldr	r1, [pc, #1160]	; 1f900 <__flatcc_fb_gen_c_verifier@@Base+0x12f0>
   1f474:	mov	r0, r6
   1f478:	stm	sp, {r4, r5}
   1f47c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f480:	ldr	r3, [r6, #220]	; 0xdc
   1f484:	ldr	r2, [sp, #48]	; 0x30
   1f488:	add	r3, r3, #1
   1f48c:	str	fp, [sp]
   1f490:	ldr	r1, [sp, #72]	; 0x48
   1f494:	str	r3, [r6, #220]	; 0xdc
   1f498:	mov	r0, r6
   1f49c:	sub	r3, r8, #1
   1f4a0:	bl	1ee7c <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1f4a4:	ldr	r3, [r6, #220]	; 0xdc
   1f4a8:	cmp	r3, #0
   1f4ac:	beq	1f8d4 <__flatcc_fb_gen_c_verifier@@Base+0x12c4>
   1f4b0:	ldr	r6, [sp, #68]	; 0x44
   1f4b4:	sub	r3, r3, #1
   1f4b8:	mov	r2, r4
   1f4bc:	str	r3, [r6, #220]	; 0xdc
   1f4c0:	ldr	r1, [pc, #1084]	; 1f904 <__flatcc_fb_gen_c_verifier@@Base+0x12f4>
   1f4c4:	mov	r3, r5
   1f4c8:	mov	r0, r6
   1f4cc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f4d0:	ldr	r0, [r6, #220]	; 0xdc
   1f4d4:	ldr	r3, [sp, #64]	; 0x40
   1f4d8:	add	r0, r0, #1
   1f4dc:	str	fp, [sp]
   1f4e0:	mov	r2, r8
   1f4e4:	str	r0, [r6, #220]	; 0xdc
   1f4e8:	ldr	r1, [sp, #72]	; 0x48
   1f4ec:	mov	r0, r6
   1f4f0:	bl	1ee7c <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1f4f4:	ldr	r3, [r6, #220]	; 0xdc
   1f4f8:	cmp	r3, #0
   1f4fc:	beq	1f8c0 <__flatcc_fb_gen_c_verifier@@Base+0x12b0>
   1f500:	ldr	r0, [sp, #68]	; 0x44
   1f504:	sub	r3, r3, #1
   1f508:	mov	r2, r4
   1f50c:	str	r3, [r0, #220]	; 0xdc
   1f510:	ldr	r1, [pc, #1008]	; 1f908 <__flatcc_fb_gen_c_verifier@@Base+0x12f8>
   1f514:	mov	r3, r5
   1f518:	add	sp, sp, #124	; 0x7c
   1f51c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f520:	b	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f524:	mov	sl, #0
   1f528:	mov	fp, #0
   1f52c:	b	1f070 <__flatcc_fb_gen_c_verifier@@Base+0xa60>
   1f530:	mov	r3, #0
   1f534:	mov	r2, #0
   1f538:	strd	r2, [sp, #32]
   1f53c:	mov	r3, #8
   1f540:	str	r3, [sp, #24]
   1f544:	b	1efb8 <__flatcc_fb_gen_c_verifier@@Base+0x9a8>
   1f548:	sub	r0, r0, fp
   1f54c:	cmp	r0, #8
   1f550:	movlt	r4, r0
   1f554:	movge	r4, #8
   1f558:	cmp	r4, #0
   1f55c:	add	r5, ip, fp
   1f560:	beq	1f464 <__flatcc_fb_gen_c_verifier@@Base+0xe54>
   1f564:	rsb	ip, r4, #8
   1f568:	add	lr, r5, r4
   1f56c:	lsl	ip, ip, #3
   1f570:	mov	r2, #0
   1f574:	mov	r3, #0
   1f578:	ldrb	r6, [lr, #-1]!
   1f57c:	sub	r7, ip, #32
   1f580:	lsl	r1, r6, r7
   1f584:	rsb	r7, ip, #32
   1f588:	lsl	r0, r6, ip
   1f58c:	orr	r1, r1, r6, lsr r7
   1f590:	add	ip, ip, #8
   1f594:	cmp	ip, #64	; 0x40
   1f598:	orr	r2, r2, r0
   1f59c:	orr	r3, r3, r1
   1f5a0:	bne	1f578 <__flatcc_fb_gen_c_verifier@@Base+0xf68>
   1f5a4:	b	1f46c <__flatcc_fb_gen_c_verifier@@Base+0xe5c>
   1f5a8:	mov	r0, #0
   1f5ac:	mov	r1, #0
   1f5b0:	b	1f208 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1f5b4:	mov	r4, #0
   1f5b8:	mov	r5, #0
   1f5bc:	mov	sl, #8
   1f5c0:	b	1f15c <__flatcc_fb_gen_c_verifier@@Base+0xb4c>
   1f5c4:	ldr	r1, [sp, #48]	; 0x30
   1f5c8:	cmp	r1, r4
   1f5cc:	blt	1f6ac <__flatcc_fb_gen_c_verifier@@Base+0x109c>
   1f5d0:	add	r8, fp, #8
   1f5d4:	cmp	fp, r2
   1f5d8:	ldr	sl, [r3]
   1f5dc:	movle	r7, #0
   1f5e0:	ble	1f6e0 <__flatcc_fb_gen_c_verifier@@Base+0x10d0>
   1f5e4:	ldr	r7, [sp, #68]	; 0x44
   1f5e8:	mov	r6, #0
   1f5ec:	mov	r3, #0
   1f5f0:	str	r6, [sp, #4]
   1f5f4:	str	r6, [sp]
   1f5f8:	mov	r2, #0
   1f5fc:	ldr	r1, [pc, #776]	; 1f90c <__flatcc_fb_gen_c_verifier@@Base+0x12fc>
   1f600:	mov	r0, r7
   1f604:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f608:	ldr	r3, [r7, #220]	; 0xdc
   1f60c:	mov	sl, r6
   1f610:	add	r3, r3, #1
   1f614:	str	r3, [r7, #220]	; 0xdc
   1f618:	ldr	r7, [sp, #68]	; 0x44
   1f61c:	ldr	r1, [pc, #748]	; 1f910 <__flatcc_fb_gen_c_verifier@@Base+0x1300>
   1f620:	mov	r0, r7
   1f624:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f628:	mov	r0, r7
   1f62c:	ldr	r1, [pc, #736]	; 1f914 <__flatcc_fb_gen_c_verifier@@Base+0x1304>
   1f630:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f634:	mov	r0, r7
   1f638:	str	r8, [sp]
   1f63c:	ldr	r3, [sp, #52]	; 0x34
   1f640:	mov	r2, r4
   1f644:	ldr	r1, [sp, #72]	; 0x48
   1f648:	bl	1ee7c <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1f64c:	mov	r7, r4
   1f650:	ldr	r3, [sp, #68]	; 0x44
   1f654:	ldr	r3, [r3, #220]	; 0xdc
   1f658:	cmp	r3, #0
   1f65c:	beq	1f8ac <__flatcc_fb_gen_c_verifier@@Base+0x129c>
   1f660:	ldr	r8, [sp, #68]	; 0x44
   1f664:	sub	r3, r3, #1
   1f668:	mov	r2, r6
   1f66c:	str	r3, [r8, #220]	; 0xdc
   1f670:	mov	r0, r8
   1f674:	mov	r3, sl
   1f678:	ldr	r1, [pc, #664]	; 1f918 <__flatcc_fb_gen_c_verifier@@Base+0x1308>
   1f67c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f680:	ldr	r3, [r8, #220]	; 0xdc
   1f684:	mov	r2, r8
   1f688:	add	r3, r3, #1
   1f68c:	mov	r8, r4
   1f690:	str	r3, [r2, #220]	; 0xdc
   1f694:	mov	r4, r7
   1f698:	b	1f29c <__flatcc_fb_gen_c_verifier@@Base+0xc8c>
   1f69c:	ldr	r3, [sp, #52]	; 0x34
   1f6a0:	ldr	fp, [sp, #8]
   1f6a4:	add	r5, r3, #1
   1f6a8:	b	1f254 <__flatcc_fb_gen_c_verifier@@Base+0xc44>
   1f6ac:	ldr	r1, [sp, #76]	; 0x4c
   1f6b0:	add	r8, fp, #8
   1f6b4:	add	r1, r1, r4, lsl #4
   1f6b8:	ldr	r1, [r1, #-12]
   1f6bc:	cmp	r1, r8
   1f6c0:	bgt	1f5d4 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1f6c4:	sub	r1, r1, fp
   1f6c8:	cmp	fp, r2
   1f6cc:	sub	r7, r1, #8
   1f6d0:	ldr	sl, [r3]
   1f6d4:	clz	r7, r7
   1f6d8:	lsr	r7, r7, #5
   1f6dc:	bgt	1f840 <__flatcc_fb_gen_c_verifier@@Base+0x1230>
   1f6e0:	add	sl, sl, fp
   1f6e4:	str	r8, [sp, #8]
   1f6e8:	add	lr, sl, #8
   1f6ec:	mov	ip, #0
   1f6f0:	mov	r2, #0
   1f6f4:	mov	r3, #0
   1f6f8:	mov	r8, r7
   1f6fc:	ldrb	r6, [lr, #-1]!
   1f700:	sub	r7, ip, #32
   1f704:	rsb	r9, ip, #32
   1f708:	lsl	r1, r6, r7
   1f70c:	lsl	r0, r6, ip
   1f710:	orr	r1, r1, r6, lsr r9
   1f714:	add	ip, ip, #8
   1f718:	cmp	ip, #64	; 0x40
   1f71c:	orr	r2, r2, r0
   1f720:	orr	r3, r3, r1
   1f724:	bne	1f6fc <__flatcc_fb_gen_c_verifier@@Base+0x10ec>
   1f728:	mov	r7, r8
   1f72c:	ldr	r8, [sp, #8]
   1f730:	mov	r6, #8
   1f734:	ldr	r9, [sp, #68]	; 0x44
   1f738:	stm	sp, {r6, sl}
   1f73c:	ldr	r1, [pc, #456]	; 1f90c <__flatcc_fb_gen_c_verifier@@Base+0x12fc>
   1f740:	mov	r0, r9
   1f744:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f748:	ldr	r3, [r9, #220]	; 0xdc
   1f74c:	cmp	r7, #0
   1f750:	add	r3, r3, #1
   1f754:	str	r3, [r9, #220]	; 0xdc
   1f758:	beq	1f618 <__flatcc_fb_gen_c_verifier@@Base+0x1008>
   1f75c:	mov	r3, sl
   1f760:	mov	r2, r6
   1f764:	ldr	r1, [pc, #432]	; 1f91c <__flatcc_fb_gen_c_verifier@@Base+0x130c>
   1f768:	mov	r0, r9
   1f76c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f770:	ldr	ip, [sp, #72]	; 0x48
   1f774:	sub	r3, r4, #-268435455	; 0xf0000001
   1f778:	mov	r0, #8
   1f77c:	ldr	r2, [ip]
   1f780:	ldr	r1, [ip, #12]
   1f784:	add	r2, r2, r3, lsl #4
   1f788:	ldr	r3, [r2, #12]
   1f78c:	ldr	r2, [r2, #8]
   1f790:	str	r0, [sp]
   1f794:	mov	r0, r9
   1f798:	ldr	r7, [ip, #4]
   1f79c:	blx	r7
   1f7a0:	mov	r3, sl
   1f7a4:	mov	r2, r6
   1f7a8:	ldr	r1, [pc, #368]	; 1f920 <__flatcc_fb_gen_c_verifier@@Base+0x1310>
   1f7ac:	mov	r0, r9
   1f7b0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f7b4:	ldr	r1, [pc, #340]	; 1f910 <__flatcc_fb_gen_c_verifier@@Base+0x1300>
   1f7b8:	mov	r0, r9
   1f7bc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f7c0:	ldr	r1, [pc, #332]	; 1f914 <__flatcc_fb_gen_c_verifier@@Base+0x1304>
   1f7c4:	mov	r0, r9
   1f7c8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f7cc:	ldr	r3, [sp, #52]	; 0x34
   1f7d0:	str	r8, [sp]
   1f7d4:	mov	r2, r4
   1f7d8:	ldr	r1, [sp, #72]	; 0x48
   1f7dc:	mov	r0, r9
   1f7e0:	bl	1ee7c <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1f7e4:	ldr	r3, [r9, #220]	; 0xdc
   1f7e8:	cmp	r3, #0
   1f7ec:	beq	1f854 <__flatcc_fb_gen_c_verifier@@Base+0x1244>
   1f7f0:	ldr	r0, [sp, #68]	; 0x44
   1f7f4:	sub	r3, r3, #1
   1f7f8:	mov	r2, r6
   1f7fc:	str	r3, [r0, #220]	; 0xdc
   1f800:	ldr	r1, [pc, #284]	; 1f924 <__flatcc_fb_gen_c_verifier@@Base+0x1314>
   1f804:	mov	r3, sl
   1f808:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f80c:	sub	r7, r4, #1
   1f810:	b	1f650 <__flatcc_fb_gen_c_verifier@@Base+0x1040>
   1f814:	ldr	r3, [sp, #64]	; 0x40
   1f818:	mov	r8, r4
   1f81c:	cmp	r3, r5
   1f820:	bge	1f868 <__flatcc_fb_gen_c_verifier@@Base+0x1258>
   1f824:	ldr	sl, [pc, #188]	; 1f8e8 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1f828:	mov	r6, #0
   1f82c:	ldr	r3, [sp, #72]	; 0x48
   1f830:	ldr	r0, [sp, #68]	; 0x44
   1f834:	ldr	r3, [r3, #8]
   1f838:	blx	r3
   1f83c:	b	1f408 <__flatcc_fb_gen_c_verifier@@Base+0xdf8>
   1f840:	mov	sl, #0
   1f844:	mov	r6, sl
   1f848:	mov	r2, #0
   1f84c:	mov	r3, #0
   1f850:	b	1f734 <__flatcc_fb_gen_c_verifier@@Base+0x1124>
   1f854:	ldr	r3, [pc, #204]	; 1f928 <__flatcc_fb_gen_c_verifier@@Base+0x1318>
   1f858:	mov	r2, #1040	; 0x410
   1f85c:	ldr	r1, [pc, #200]	; 1f92c <__flatcc_fb_gen_c_verifier@@Base+0x131c>
   1f860:	ldr	r0, [pc, #200]	; 1f930 <__flatcc_fb_gen_c_verifier@@Base+0x1320>
   1f864:	bl	14038 <__assert_fail@plt>
   1f868:	ldr	sl, [pc, #120]	; 1f8e8 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1f86c:	mov	r6, #0
   1f870:	str	fp, [sp]
   1f874:	ldr	r1, [sp, #72]	; 0x48
   1f878:	mov	r2, r5
   1f87c:	ldr	r0, [sp, #68]	; 0x44
   1f880:	bl	1ee7c <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1f884:	b	1f408 <__flatcc_fb_gen_c_verifier@@Base+0xdf8>
   1f888:	ldr	r3, [pc, #152]	; 1f928 <__flatcc_fb_gen_c_verifier@@Base+0x1318>
   1f88c:	mov	r2, #1072	; 0x430
   1f890:	ldr	r1, [pc, #148]	; 1f92c <__flatcc_fb_gen_c_verifier@@Base+0x131c>
   1f894:	ldr	r0, [pc, #148]	; 1f930 <__flatcc_fb_gen_c_verifier@@Base+0x1320>
   1f898:	bl	14038 <__assert_fail@plt>
   1f89c:	mov	r7, r9
   1f8a0:	mov	r2, r3
   1f8a4:	ldr	r1, [sp, #72]	; 0x48
   1f8a8:	b	1f2d0 <__flatcc_fb_gen_c_verifier@@Base+0xcc0>
   1f8ac:	ldr	r3, [pc, #116]	; 1f928 <__flatcc_fb_gen_c_verifier@@Base+0x1318>
   1f8b0:	ldr	r2, [pc, #124]	; 1f934 <__flatcc_fb_gen_c_verifier@@Base+0x1324>
   1f8b4:	ldr	r1, [pc, #112]	; 1f92c <__flatcc_fb_gen_c_verifier@@Base+0x131c>
   1f8b8:	ldr	r0, [pc, #112]	; 1f930 <__flatcc_fb_gen_c_verifier@@Base+0x1320>
   1f8bc:	bl	14038 <__assert_fail@plt>
   1f8c0:	ldr	r3, [pc, #96]	; 1f928 <__flatcc_fb_gen_c_verifier@@Base+0x1318>
   1f8c4:	ldr	r2, [pc, #108]	; 1f938 <__flatcc_fb_gen_c_verifier@@Base+0x1328>
   1f8c8:	ldr	r1, [pc, #92]	; 1f92c <__flatcc_fb_gen_c_verifier@@Base+0x131c>
   1f8cc:	ldr	r0, [pc, #92]	; 1f930 <__flatcc_fb_gen_c_verifier@@Base+0x1320>
   1f8d0:	bl	14038 <__assert_fail@plt>
   1f8d4:	ldr	r3, [pc, #76]	; 1f928 <__flatcc_fb_gen_c_verifier@@Base+0x1318>
   1f8d8:	ldr	r2, [pc, #92]	; 1f93c <__flatcc_fb_gen_c_verifier@@Base+0x132c>
   1f8dc:	ldr	r1, [pc, #72]	; 1f92c <__flatcc_fb_gen_c_verifier@@Base+0x131c>
   1f8e0:	ldr	r0, [pc, #72]	; 1f930 <__flatcc_fb_gen_c_verifier@@Base+0x1320>
   1f8e4:	bl	14038 <__assert_fail@plt>
   1f8e8:	andeq	fp, r4, ip, lsr #24
   1f8ec:	andeq	r4, r5, r4, ror #18
   1f8f0:	andeq	r4, r5, r8, ror r9
   1f8f4:	andeq	r4, r5, r4, lsl #19
   1f8f8:	muleq	r5, r4, r9
   1f8fc:	andeq	r4, r5, r0, lsr #19
   1f900:	andeq	r4, r5, r4, lsr #16
   1f904:	andeq	r4, r5, ip, asr #16
   1f908:	andeq	r4, r5, ip, ror #16
   1f90c:	andeq	r4, r5, r4, lsl #17
   1f910:	andeq	r4, r5, r8, ror #17
   1f914:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   1f918:	andeq	r4, r5, r4, asr #18
   1f91c:	andeq	r4, r5, ip, lsr #17
   1f920:	andeq	r4, r5, ip, asr #17
   1f924:	andeq	r4, r5, r4, lsr #18
   1f928:	andeq	r4, r5, r4, asr r5
   1f92c:	muleq	r5, r4, r7
   1f930:	andeq	r4, r5, ip, ror #15
   1f934:	andeq	r0, r0, r4, lsl r4
   1f938:	andeq	r0, r0, pc, asr #7
   1f93c:	andeq	r0, r0, sp, asr #7
   1f940:	push	{r4, lr}
   1f944:	mov	r4, r0
   1f948:	sub	sp, sp, #208	; 0xd0
   1f94c:	mov	r0, r1
   1f950:	add	r1, sp, #4
   1f954:	bl	15210 <__flatcc_fb_copy_scope@@Base>
   1f958:	ldr	r2, [r4, #208]	; 0xd0
   1f95c:	add	r3, sp, #4
   1f960:	mov	r0, r4
   1f964:	ldr	r2, [r2, #160]	; 0xa0
   1f968:	ldr	r1, [pc, #20]	; 1f984 <__flatcc_fb_gen_c_verifier@@Base+0x1374>
   1f96c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f970:	mov	r0, r4
   1f974:	ldr	r1, [pc, #12]	; 1f988 <__flatcc_fb_gen_c_verifier@@Base+0x1378>
   1f978:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f97c:	add	sp, sp, #208	; 0xd0
   1f980:	pop	{r4, pc}
   1f984:			; <UNDEFINED> instruction: 0x000549b8
   1f988:	andeq	r4, r5, r4, lsr #20
   1f98c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f990:	sub	sp, sp, #460	; 0x1cc
   1f994:	mov	r4, r0
   1f998:	mov	r5, r1
   1f99c:	mov	r2, #220	; 0xdc
   1f9a0:	mov	r1, #0
   1f9a4:	add	r0, sp, #16
   1f9a8:	bl	13f9c <memset@plt>
   1f9ac:	mov	r2, #220	; 0xdc
   1f9b0:	mov	r1, #0
   1f9b4:	add	r0, sp, #236	; 0xec
   1f9b8:	bl	13f9c <memset@plt>
   1f9bc:	add	r2, sp, #16
   1f9c0:	mov	r1, r5
   1f9c4:	ldr	r0, [r5, #12]
   1f9c8:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1f9cc:	add	r2, sp, #16
   1f9d0:	mov	r0, r4
   1f9d4:	ldr	r1, [pc, #1008]	; 1fdcc <__flatcc_fb_gen_c_verifier@@Base+0x17bc>
   1f9d8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f9dc:	mov	r0, r4
   1f9e0:	ldr	r1, [pc, #1000]	; 1fdd0 <__flatcc_fb_gen_c_verifier@@Base+0x17c0>
   1f9e4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1f9e8:	ldr	r3, [r4, #220]	; 0xdc
   1f9ec:	mov	r0, r4
   1f9f0:	add	r3, r3, #1
   1f9f4:	str	r3, [r4, #220]	; 0xdc
   1f9f8:	ldr	r1, [pc, #980]	; 1fdd4 <__flatcc_fb_gen_c_verifier@@Base+0x17c4>
   1f9fc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fa00:	mov	r0, r4
   1fa04:	ldr	r1, [pc, #972]	; 1fdd8 <__flatcc_fb_gen_c_verifier@@Base+0x17c8>
   1fa08:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fa0c:	mov	r0, r4
   1fa10:	ldr	r1, [pc, #964]	; 1fddc <__flatcc_fb_gen_c_verifier@@Base+0x17cc>
   1fa14:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fa18:	mov	r0, r4
   1fa1c:	ldr	r1, [pc, #956]	; 1fde0 <__flatcc_fb_gen_c_verifier@@Base+0x17d0>
   1fa20:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fa24:	ldr	r3, [r4, #220]	; 0xdc
   1fa28:	mov	r0, r4
   1fa2c:	add	r3, r3, #1
   1fa30:	str	r3, [r4, #220]	; 0xdc
   1fa34:	ldr	r1, [pc, #936]	; 1fde4 <__flatcc_fb_gen_c_verifier@@Base+0x17d4>
   1fa38:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fa3c:	ldr	r3, [r4, #220]	; 0xdc
   1fa40:	cmp	r3, #0
   1fa44:	beq	1fd40 <__flatcc_fb_gen_c_verifier@@Base+0x1730>
   1fa48:	ldr	r5, [r5, #20]
   1fa4c:	sub	r3, r3, #1
   1fa50:	cmp	r5, #0
   1fa54:	str	r3, [r4, #220]	; 0xdc
   1fa58:	beq	1fb24 <__flatcc_fb_gen_c_verifier@@Base+0x1514>
   1fa5c:	ldr	r7, [pc, #900]	; 1fde8 <__flatcc_fb_gen_c_verifier@@Base+0x17d8>
   1fa60:	ldr	r9, [pc, #900]	; 1fdec <__flatcc_fb_gen_c_verifier@@Base+0x17dc>
   1fa64:	ldr	r8, [pc, #900]	; 1fdf0 <__flatcc_fb_gen_c_verifier@@Base+0x17e0>
   1fa68:	ldr	fp, [pc, #900]	; 1fdf4 <__flatcc_fb_gen_c_verifier@@Base+0x17e4>
   1fa6c:	ldr	sl, [pc, #900]	; 1fdf8 <__flatcc_fb_gen_c_verifier@@Base+0x17e8>
   1fa70:	ldrh	r2, [r5, #24]
   1fa74:	ldr	r3, [r5, #4]
   1fa78:	cmp	r2, #10
   1fa7c:	ldr	r6, [r3]
   1fa80:	ldr	r3, [r3, #4]
   1fa84:	beq	1facc <__flatcc_fb_gen_c_verifier@@Base+0x14bc>
   1fa88:	cmp	r2, #14
   1fa8c:	beq	1fc6c <__flatcc_fb_gen_c_verifier@@Base+0x165c>
   1fa90:	cmp	r2, #0
   1fa94:	beq	1fb18 <__flatcc_fb_gen_c_verifier@@Base+0x1508>
   1fa98:	ldr	r1, [pc, #860]	; 1fdfc <__flatcc_fb_gen_c_verifier@@Base+0x17ec>
   1fa9c:	ldr	r2, [pc, #860]	; 1fe00 <__flatcc_fb_gen_c_verifier@@Base+0x17f0>
   1faa0:	ldr	r3, [pc, #860]	; 1fe04 <__flatcc_fb_gen_c_verifier@@Base+0x17f4>
   1faa4:	ldr	r0, [r1]
   1faa8:	str	r2, [sp]
   1faac:	ldr	r1, [pc, #852]	; 1fe08 <__flatcc_fb_gen_c_verifier@@Base+0x17f8>
   1fab0:	ldr	r2, [pc, #852]	; 1fe0c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1fab4:	bl	13f84 <fprintf@plt>
   1fab8:	ldr	r3, [pc, #848]	; 1fe10 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1fabc:	ldr	r2, [pc, #832]	; 1fe04 <__flatcc_fb_gen_c_verifier@@Base+0x17f4>
   1fac0:	ldr	r1, [pc, #836]	; 1fe0c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1fac4:	ldr	r0, [pc, #840]	; 1fe14 <__flatcc_fb_gen_c_verifier@@Base+0x1804>
   1fac8:	bl	14038 <__assert_fail@plt>
   1facc:	ldr	r2, [r5, #48]	; 0x30
   1fad0:	mov	r1, r7
   1fad4:	mov	r0, r4
   1fad8:	str	r6, [sp]
   1fadc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fae0:	ldr	r3, [r4, #220]	; 0xdc
   1fae4:	mov	r1, r9
   1fae8:	add	r3, r3, #1
   1faec:	str	r3, [r4, #220]	; 0xdc
   1faf0:	mov	r0, r4
   1faf4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1faf8:	mov	r1, r8
   1fafc:	mov	r0, r4
   1fb00:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fb04:	ldr	r3, [r4, #220]	; 0xdc
   1fb08:	cmp	r3, #0
   1fb0c:	beq	1fdb8 <__flatcc_fb_gen_c_verifier@@Base+0x17a8>
   1fb10:	sub	r3, r3, #1
   1fb14:	str	r3, [r4, #220]	; 0xdc
   1fb18:	ldr	r5, [r5]
   1fb1c:	cmp	r5, #0
   1fb20:	bne	1fa70 <__flatcc_fb_gen_c_verifier@@Base+0x1460>
   1fb24:	ldr	r1, [pc, #748]	; 1fe18 <__flatcc_fb_gen_c_verifier@@Base+0x1808>
   1fb28:	mov	r0, r4
   1fb2c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fb30:	ldr	r3, [r4, #220]	; 0xdc
   1fb34:	ldr	r1, [pc, #736]	; 1fe1c <__flatcc_fb_gen_c_verifier@@Base+0x180c>
   1fb38:	add	r3, r3, #1
   1fb3c:	str	r3, [r4, #220]	; 0xdc
   1fb40:	mov	r0, r4
   1fb44:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fb48:	ldr	r3, [r4, #220]	; 0xdc
   1fb4c:	ldr	r1, [pc, #716]	; 1fe20 <__flatcc_fb_gen_c_verifier@@Base+0x1810>
   1fb50:	add	r3, r3, #1
   1fb54:	str	r3, [r4, #220]	; 0xdc
   1fb58:	mov	r0, r4
   1fb5c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fb60:	ldr	r3, [r4, #220]	; 0xdc
   1fb64:	cmp	r3, #0
   1fb68:	beq	1fda4 <__flatcc_fb_gen_c_verifier@@Base+0x1794>
   1fb6c:	sub	r3, r3, #1
   1fb70:	str	r3, [r4, #220]	; 0xdc
   1fb74:	ldr	r1, [pc, #680]	; 1fe24 <__flatcc_fb_gen_c_verifier@@Base+0x1814>
   1fb78:	mov	r0, r4
   1fb7c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fb80:	ldr	r3, [r4, #220]	; 0xdc
   1fb84:	ldr	r1, [pc, #668]	; 1fe28 <__flatcc_fb_gen_c_verifier@@Base+0x1818>
   1fb88:	add	r3, r3, #1
   1fb8c:	str	r3, [r4, #220]	; 0xdc
   1fb90:	mov	r0, r4
   1fb94:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fb98:	ldr	r3, [r4, #220]	; 0xdc
   1fb9c:	cmp	r3, #0
   1fba0:	beq	1fd90 <__flatcc_fb_gen_c_verifier@@Base+0x1780>
   1fba4:	sub	r3, r3, #1
   1fba8:	str	r3, [r4, #220]	; 0xdc
   1fbac:	ldr	r1, [pc, #632]	; 1fe2c <__flatcc_fb_gen_c_verifier@@Base+0x181c>
   1fbb0:	mov	r0, r4
   1fbb4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fbb8:	ldr	r3, [r4, #220]	; 0xdc
   1fbbc:	cmp	r3, #0
   1fbc0:	beq	1fd7c <__flatcc_fb_gen_c_verifier@@Base+0x176c>
   1fbc4:	sub	r3, r3, #1
   1fbc8:	str	r3, [r4, #220]	; 0xdc
   1fbcc:	ldr	r1, [pc, #600]	; 1fe2c <__flatcc_fb_gen_c_verifier@@Base+0x181c>
   1fbd0:	mov	r0, r4
   1fbd4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fbd8:	ldr	r1, [pc, #592]	; 1fe30 <__flatcc_fb_gen_c_verifier@@Base+0x1820>
   1fbdc:	mov	r0, r4
   1fbe0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fbe4:	ldr	r1, [pc, #584]	; 1fe34 <__flatcc_fb_gen_c_verifier@@Base+0x1824>
   1fbe8:	mov	r0, r4
   1fbec:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fbf0:	ldr	r3, [r4, #220]	; 0xdc
   1fbf4:	ldr	r1, [pc, #572]	; 1fe38 <__flatcc_fb_gen_c_verifier@@Base+0x1828>
   1fbf8:	add	r3, r3, #1
   1fbfc:	str	r3, [r4, #220]	; 0xdc
   1fc00:	mov	r0, r4
   1fc04:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fc08:	ldr	r3, [r4, #220]	; 0xdc
   1fc0c:	cmp	r3, #0
   1fc10:	beq	1fd68 <__flatcc_fb_gen_c_verifier@@Base+0x1758>
   1fc14:	sub	r3, r3, #1
   1fc18:	str	r3, [r4, #220]	; 0xdc
   1fc1c:	ldr	r1, [pc, #520]	; 1fe2c <__flatcc_fb_gen_c_verifier@@Base+0x181c>
   1fc20:	mov	r0, r4
   1fc24:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fc28:	ldr	r1, [pc, #524]	; 1fe3c <__flatcc_fb_gen_c_verifier@@Base+0x182c>
   1fc2c:	mov	r0, r4
   1fc30:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fc34:	ldr	r3, [r4, #220]	; 0xdc
   1fc38:	cmp	r3, #0
   1fc3c:	beq	1fd54 <__flatcc_fb_gen_c_verifier@@Base+0x1744>
   1fc40:	sub	r3, r3, #1
   1fc44:	str	r3, [r4, #220]	; 0xdc
   1fc48:	mov	r0, r4
   1fc4c:	ldr	r1, [pc, #472]	; 1fe2c <__flatcc_fb_gen_c_verifier@@Base+0x181c>
   1fc50:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fc54:	mov	r0, r4
   1fc58:	ldr	r1, [pc, #372]	; 1fdd4 <__flatcc_fb_gen_c_verifier@@Base+0x17c4>
   1fc5c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fc60:	mov	r0, #0
   1fc64:	add	sp, sp, #460	; 0x1cc
   1fc68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fc6c:	ldr	r1, [r5, #16]
   1fc70:	add	r2, sp, #236	; 0xec
   1fc74:	str	r3, [sp, #12]
   1fc78:	ldr	r0, [r1, #12]
   1fc7c:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1fc80:	ldr	r2, [r5, #48]	; 0x30
   1fc84:	ldr	r3, [sp, #12]
   1fc88:	str	r6, [sp]
   1fc8c:	mov	r1, r7
   1fc90:	mov	r0, r4
   1fc94:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fc98:	ldr	r3, [r4, #220]	; 0xdc
   1fc9c:	add	r3, r3, #1
   1fca0:	str	r3, [r4, #220]	; 0xdc
   1fca4:	ldr	r3, [r5, #16]
   1fca8:	ldrh	r3, [r3, #8]
   1fcac:	cmp	r3, #0
   1fcb0:	beq	1fcf8 <__flatcc_fb_gen_c_verifier@@Base+0x16e8>
   1fcb4:	cmp	r3, #1
   1fcb8:	bne	1fd0c <__flatcc_fb_gen_c_verifier@@Base+0x16fc>
   1fcbc:	add	r2, sp, #236	; 0xec
   1fcc0:	mov	r1, sl
   1fcc4:	mov	r0, r4
   1fcc8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fccc:	mov	r1, r8
   1fcd0:	mov	r0, r4
   1fcd4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fcd8:	ldr	r3, [r4, #220]	; 0xdc
   1fcdc:	cmp	r3, #0
   1fce0:	bne	1fb10 <__flatcc_fb_gen_c_verifier@@Base+0x1500>
   1fce4:	ldr	r3, [pc, #292]	; 1fe10 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1fce8:	ldr	r2, [pc, #336]	; 1fe40 <__flatcc_fb_gen_c_verifier@@Base+0x1830>
   1fcec:	ldr	r1, [pc, #280]	; 1fe0c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1fcf0:	ldr	r0, [pc, #332]	; 1fe44 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   1fcf4:	bl	14038 <__assert_fail@plt>
   1fcf8:	add	r2, sp, #236	; 0xec
   1fcfc:	mov	r1, fp
   1fd00:	mov	r0, r4
   1fd04:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fd08:	b	1fccc <__flatcc_fb_gen_c_verifier@@Base+0x16bc>
   1fd0c:	ldr	r1, [pc, #232]	; 1fdfc <__flatcc_fb_gen_c_verifier@@Base+0x17ec>
   1fd10:	ldr	r2, [pc, #304]	; 1fe48 <__flatcc_fb_gen_c_verifier@@Base+0x1838>
   1fd14:	ldr	r3, [pc, #304]	; 1fe4c <__flatcc_fb_gen_c_verifier@@Base+0x183c>
   1fd18:	ldr	r0, [r1]
   1fd1c:	str	r2, [sp]
   1fd20:	ldr	r1, [pc, #224]	; 1fe08 <__flatcc_fb_gen_c_verifier@@Base+0x17f8>
   1fd24:	ldr	r2, [pc, #224]	; 1fe0c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1fd28:	bl	13f84 <fprintf@plt>
   1fd2c:	ldr	r3, [pc, #220]	; 1fe10 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1fd30:	ldr	r2, [pc, #276]	; 1fe4c <__flatcc_fb_gen_c_verifier@@Base+0x183c>
   1fd34:	ldr	r1, [pc, #208]	; 1fe0c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1fd38:	ldr	r0, [pc, #212]	; 1fe14 <__flatcc_fb_gen_c_verifier@@Base+0x1804>
   1fd3c:	bl	14038 <__assert_fail@plt>
   1fd40:	ldr	r3, [pc, #200]	; 1fe10 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1fd44:	ldr	r2, [pc, #260]	; 1fe50 <__flatcc_fb_gen_c_verifier@@Base+0x1840>
   1fd48:	ldr	r1, [pc, #188]	; 1fe0c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1fd4c:	ldr	r0, [pc, #240]	; 1fe44 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   1fd50:	bl	14038 <__assert_fail@plt>
   1fd54:	ldr	r3, [pc, #180]	; 1fe10 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1fd58:	mov	r2, #1552	; 0x610
   1fd5c:	ldr	r1, [pc, #168]	; 1fe0c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1fd60:	ldr	r0, [pc, #220]	; 1fe44 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   1fd64:	bl	14038 <__assert_fail@plt>
   1fd68:	ldr	r3, [pc, #160]	; 1fe10 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1fd6c:	ldr	r2, [pc, #224]	; 1fe54 <__flatcc_fb_gen_c_verifier@@Base+0x1844>
   1fd70:	ldr	r1, [pc, #148]	; 1fe0c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1fd74:	ldr	r0, [pc, #200]	; 1fe44 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   1fd78:	bl	14038 <__assert_fail@plt>
   1fd7c:	ldr	r3, [pc, #140]	; 1fe10 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1fd80:	ldr	r2, [pc, #208]	; 1fe58 <__flatcc_fb_gen_c_verifier@@Base+0x1848>
   1fd84:	ldr	r1, [pc, #128]	; 1fe0c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1fd88:	ldr	r0, [pc, #180]	; 1fe44 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   1fd8c:	bl	14038 <__assert_fail@plt>
   1fd90:	ldr	r3, [pc, #120]	; 1fe10 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1fd94:	ldr	r2, [pc, #192]	; 1fe5c <__flatcc_fb_gen_c_verifier@@Base+0x184c>
   1fd98:	ldr	r1, [pc, #108]	; 1fe0c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1fd9c:	ldr	r0, [pc, #160]	; 1fe44 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   1fda0:	bl	14038 <__assert_fail@plt>
   1fda4:	ldr	r3, [pc, #100]	; 1fe10 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1fda8:	ldr	r2, [pc, #176]	; 1fe60 <__flatcc_fb_gen_c_verifier@@Base+0x1850>
   1fdac:	ldr	r1, [pc, #88]	; 1fe0c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1fdb0:	ldr	r0, [pc, #140]	; 1fe44 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   1fdb4:	bl	14038 <__assert_fail@plt>
   1fdb8:	ldr	r3, [pc, #80]	; 1fe10 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1fdbc:	ldr	r2, [pc, #160]	; 1fe64 <__flatcc_fb_gen_c_verifier@@Base+0x1854>
   1fdc0:	ldr	r1, [pc, #68]	; 1fe0c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1fdc4:	ldr	r0, [pc, #120]	; 1fe44 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   1fdc8:	bl	14038 <__assert_fail@plt>
   1fdcc:	andeq	r4, r5, r8, asr sl
   1fdd0:	andeq	r7, r5, r0, lsl r4
   1fdd4:	andeq	fp, r4, ip, lsr #24
   1fdd8:	andeq	r4, r5, r8, ror #21
   1fddc:	strdeq	r4, [r5], -r8
   1fde0:	andeq	r4, r5, r8, lsl #22
   1fde4:	andeq	r4, r5, ip, lsl fp
   1fde8:	strdeq	r4, [r5], -r0
   1fdec:	andeq	r4, r5, ip, lsr #25
   1fdf0:	andeq	r4, r5, r4, lsr #25
   1fdf4:	andeq	r4, r5, r4, lsl #24
   1fdf8:	andeq	r4, r5, r8, lsr ip
   1fdfc:	andeq	sp, r6, r8, lsr #1
   1fe00:	andeq	r4, r5, ip, ror #25
   1fe04:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1fe08:			; <UNDEFINED> instruction: 0x00041fbc
   1fe0c:	muleq	r5, r4, r7
   1fe10:	andeq	r4, r5, r0, ror #10
   1fe14:	andeq	sl, r4, r4, asr sp
   1fe18:	andeq	r4, r5, ip, asr #22
   1fe1c:	andeq	r4, r5, r8, asr fp
   1fe20:	muleq	r5, r4, fp
   1fe24:	andeq	r4, r5, ip, lsl sp
   1fe28:	andeq	r4, r5, r8, lsr #26
   1fe2c:	strdeq	r4, [r5], -r8
   1fe30:	andeq	r4, r5, r0, ror #26
   1fe34:	andeq	r4, r5, ip, ror sp
   1fe38:	andeq	r4, r5, ip, lsl #27
   1fe3c:	andeq	r4, r5, r0, ror sp
   1fe40:	strdeq	r0, [r0], -r6
   1fe44:	andeq	r4, r5, ip, ror #15
   1fe48:	andeq	r4, r5, ip, ror #24
   1fe4c:	strdeq	r0, [r0], -r2
   1fe50:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1fe54:	andeq	r0, r0, lr, lsl #12
   1fe58:	andeq	r0, r0, sl, lsl #12
   1fe5c:	andeq	r0, r0, r9, lsl #12
   1fe60:	andeq	r0, r0, r7, lsl #12
   1fe64:	strdeq	r0, [r0], -ip
   1fe68:	push	{r4, r5, r6, r7, lr}
   1fe6c:	sub	sp, sp, #452	; 0x1c4
   1fe70:	mov	r5, r0
   1fe74:	mov	r4, r1
   1fe78:	mov	r2, #220	; 0xdc
   1fe7c:	mov	r1, #0
   1fe80:	add	r0, sp, #8
   1fe84:	bl	13f9c <memset@plt>
   1fe88:	mov	r2, #220	; 0xdc
   1fe8c:	mov	r1, #0
   1fe90:	add	r0, sp, #228	; 0xe4
   1fe94:	bl	13f9c <memset@plt>
   1fe98:	mov	r1, r4
   1fe9c:	ldr	r0, [r4, #12]
   1fea0:	add	r2, sp, #8
   1fea4:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   1fea8:	add	r2, sp, #8
   1feac:	mov	r0, r5
   1feb0:	ldr	r1, [pc, #280]	; 1ffd0 <__flatcc_fb_gen_c_verifier@@Base+0x19c0>
   1feb4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1feb8:	mov	r0, r5
   1febc:	ldr	r1, [pc, #272]	; 1ffd4 <__flatcc_fb_gen_c_verifier@@Base+0x19c4>
   1fec0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fec4:	ldr	r3, [r5, #220]	; 0xdc
   1fec8:	mov	r0, r5
   1fecc:	add	r3, r3, #1
   1fed0:	str	r3, [r5, #220]	; 0xdc
   1fed4:	ldr	r1, [pc, #252]	; 1ffd8 <__flatcc_fb_gen_c_verifier@@Base+0x19c8>
   1fed8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1fedc:	ldr	r4, [r4, #20]
   1fee0:	cmp	r4, #0
   1fee4:	beq	1ff14 <__flatcc_fb_gen_c_verifier@@Base+0x1904>
   1fee8:	ldr	r7, [pc, #236]	; 1ffdc <__flatcc_fb_gen_c_verifier@@Base+0x19cc>
   1feec:	ldr	r6, [pc, #236]	; 1ffe0 <__flatcc_fb_gen_c_verifier@@Base+0x19d0>
   1fef0:	ldrh	r3, [r4, #24]
   1fef4:	cmp	r3, #0
   1fef8:	bne	1ff7c <__flatcc_fb_gen_c_verifier@@Base+0x196c>
   1fefc:	mov	r1, r6
   1ff00:	mov	r0, r5
   1ff04:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ff08:	ldr	r4, [r4]
   1ff0c:	cmp	r4, #0
   1ff10:	bne	1fef0 <__flatcc_fb_gen_c_verifier@@Base+0x18e0>
   1ff14:	ldr	r1, [pc, #200]	; 1ffe4 <__flatcc_fb_gen_c_verifier@@Base+0x19d4>
   1ff18:	mov	r0, r5
   1ff1c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ff20:	ldr	r3, [r5, #220]	; 0xdc
   1ff24:	add	r2, r3, #1
   1ff28:	cmp	r2, #0
   1ff2c:	str	r2, [r5, #220]	; 0xdc
   1ff30:	beq	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x1998>
   1ff34:	str	r3, [r5, #220]	; 0xdc
   1ff38:	ldr	r1, [pc, #168]	; 1ffe8 <__flatcc_fb_gen_c_verifier@@Base+0x19d8>
   1ff3c:	mov	r0, r5
   1ff40:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ff44:	ldr	r3, [r5, #220]	; 0xdc
   1ff48:	cmp	r3, #0
   1ff4c:	beq	1ffbc <__flatcc_fb_gen_c_verifier@@Base+0x19ac>
   1ff50:	sub	r3, r3, #1
   1ff54:	str	r3, [r5, #220]	; 0xdc
   1ff58:	mov	r0, r5
   1ff5c:	ldr	r1, [pc, #132]	; 1ffe8 <__flatcc_fb_gen_c_verifier@@Base+0x19d8>
   1ff60:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ff64:	mov	r0, r5
   1ff68:	ldr	r1, [pc, #124]	; 1ffec <__flatcc_fb_gen_c_verifier@@Base+0x19dc>
   1ff6c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ff70:	mov	r0, #0
   1ff74:	add	sp, sp, #452	; 0x1c4
   1ff78:	pop	{r4, r5, r6, r7, pc}
   1ff7c:	ldr	r0, [r4, #4]
   1ff80:	ldr	r2, [r4, #48]	; 0x30
   1ff84:	mov	r1, r7
   1ff88:	ldm	r0, {r0, r3}
   1ff8c:	str	r0, [sp]
   1ff90:	mov	r0, r5
   1ff94:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1ff98:	ldr	r4, [r4]
   1ff9c:	cmp	r4, #0
   1ffa0:	bne	1fef0 <__flatcc_fb_gen_c_verifier@@Base+0x18e0>
   1ffa4:	b	1ff14 <__flatcc_fb_gen_c_verifier@@Base+0x1904>
   1ffa8:	ldr	r3, [pc, #64]	; 1fff0 <__flatcc_fb_gen_c_verifier@@Base+0x19e0>
   1ffac:	ldr	r2, [pc, #64]	; 1fff4 <__flatcc_fb_gen_c_verifier@@Base+0x19e4>
   1ffb0:	ldr	r1, [pc, #64]	; 1fff8 <__flatcc_fb_gen_c_verifier@@Base+0x19e8>
   1ffb4:	ldr	r0, [pc, #64]	; 1fffc <__flatcc_fb_gen_c_verifier@@Base+0x19ec>
   1ffb8:	bl	14038 <__assert_fail@plt>
   1ffbc:	ldr	r3, [pc, #44]	; 1fff0 <__flatcc_fb_gen_c_verifier@@Base+0x19e0>
   1ffc0:	ldr	r2, [pc, #56]	; 20000 <__flatcc_fb_gen_c_verifier@@Base+0x19f0>
   1ffc4:	ldr	r1, [pc, #44]	; 1fff8 <__flatcc_fb_gen_c_verifier@@Base+0x19e8>
   1ffc8:	ldr	r0, [pc, #44]	; 1fffc <__flatcc_fb_gen_c_verifier@@Base+0x19ec>
   1ffcc:	bl	14038 <__assert_fail@plt>
   1ffd0:	andeq	r4, r5, r4, ror #27
   1ffd4:	andeq	r7, r5, r0, lsl r4
   1ffd8:	strdeq	r4, [r5], -r8
   1ffdc:	andeq	r4, r5, ip, asr #28
   1ffe0:	andeq	r4, r5, ip, lsr #28
   1ffe4:	andeq	r4, r5, r8, lsl lr
   1ffe8:	strdeq	r4, [r5], -r8
   1ffec:	andeq	fp, r4, ip, lsr #24
   1fff0:	andeq	r4, r5, r4, ror r5
   1fff4:	andeq	r0, r0, lr, lsr #12
   1fff8:	muleq	r5, r4, r7
   1fffc:	andeq	r4, r5, ip, ror #15
   20000:	andeq	r0, r0, pc, lsr #12
   20004:	add	r3, r1, #4
   20008:	mov	r2, r0
   2000c:	ldr	r1, [pc, #4]	; 20018 <__flatcc_fb_gen_c_verifier@@Base+0x1a08>
   20010:	mov	r0, r3
   20014:	b	27fcc <fb_symbol_table_visit@@Base>
   20018:			; <UNDEFINED> instruction: 0x000204b8
   2001c:	add	r3, r1, #4
   20020:	mov	r2, r0
   20024:	ldr	r1, [pc, #4]	; 20030 <__flatcc_fb_gen_c_verifier@@Base+0x1a20>
   20028:	mov	r0, r3
   2002c:	b	27fcc <fb_symbol_table_visit@@Base>
   20030:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20034:	push	{r4, r5, r6, lr}
   20038:	ldr	r5, [r0, #4]
   2003c:	ldr	r4, [r1, #4]
   20040:	ldr	r0, [r0]
   20044:	cmp	r5, r4
   20048:	movlt	r2, r5
   2004c:	movge	r2, r4
   20050:	ldr	r1, [r1]
   20054:	bl	13ef4 <memcmp@plt>
   20058:	cmp	r0, #0
   2005c:	subeq	r0, r5, r4
   20060:	pop	{r4, r5, r6, pc}
   20064:	ldrh	r3, [r1, #8]
   20068:	sub	r3, r3, #3
   2006c:	cmp	r3, #1
   20070:	bxhi	lr
   20074:	push	{r4, r5, r6, lr}
   20078:	mov	r5, r0
   2007c:	ldr	r0, [r0, #4]
   20080:	mov	r4, r1
   20084:	add	r0, r0, #172	; 0xac
   20088:	ldr	r1, [r1, #16]
   2008c:	bl	275b4 <ptr_set_find_item@@Base>
   20090:	cmp	r0, #0
   20094:	popeq	{r4, r5, r6, pc}
   20098:	ldr	r2, [r4, #4]
   2009c:	ldr	r3, [r5, #8]
   200a0:	ldm	r2, {r0, r1}
   200a4:	add	r2, r3, #16
   200a8:	stm	r3, {r0, r1, r4}
   200ac:	str	r2, [r5, #8]
   200b0:	pop	{r4, r5, r6, pc}
   200b4:	ldrh	r3, [r1, #8]
   200b8:	sub	r3, r3, #3
   200bc:	cmp	r3, #1
   200c0:	bxhi	lr
   200c4:	push	{r4, lr}
   200c8:	mov	r4, r0
   200cc:	ldr	r0, [r0, #4]
   200d0:	ldr	r1, [r1, #16]
   200d4:	add	r0, r0, #172	; 0xac
   200d8:	bl	275b4 <ptr_set_find_item@@Base>
   200dc:	cmp	r0, #0
   200e0:	ldrne	r3, [r4]
   200e4:	addne	r3, r3, #1
   200e8:	strne	r3, [r4]
   200ec:	pop	{r4, pc}
   200f0:	ldrh	r3, [r1, #8]
   200f4:	cmp	r3, #4
   200f8:	bxhi	lr
   200fc:	push	{r4, r5, r6, lr}
   20100:	mov	r4, r0
   20104:	ldr	r0, [r0, #40]	; 0x28
   20108:	mov	r5, r1
   2010c:	add	r0, r0, #172	; 0xac
   20110:	ldr	r1, [r1, #16]
   20114:	bl	275b4 <ptr_set_find_item@@Base>
   20118:	cmp	r0, #0
   2011c:	beq	201c0 <__flatcc_fb_gen_c_verifier@@Base+0x1bb0>
   20120:	ldr	ip, [r4]
   20124:	cmp	ip, #0
   20128:	beq	2015c <__flatcc_fb_gen_c_verifier@@Base+0x1b4c>
   2012c:	ldr	r3, [r5, #12]
   20130:	ldr	r3, [r3]
   20134:	cmp	r3, #0
   20138:	beq	201c4 <__flatcc_fb_gen_c_verifier@@Base+0x1bb4>
   2013c:	mov	ip, #0
   20140:	ldr	r2, [r3, #4]
   20144:	ldr	r3, [r3]
   20148:	ldr	r2, [r2, #4]
   2014c:	cmp	r3, #0
   20150:	add	r2, r2, #1
   20154:	add	ip, ip, r2
   20158:	bne	20140 <__flatcc_fb_gen_c_verifier@@Base+0x1b30>
   2015c:	ldr	r3, [r5, #4]
   20160:	ldr	r1, [r4, #12]
   20164:	ldrh	r2, [r5, #8]
   20168:	ldr	r3, [r3, #4]
   2016c:	add	r3, r3, r1
   20170:	add	r3, r3, #1
   20174:	add	ip, r3, ip
   20178:	str	ip, [r4, #12]
   2017c:	cmp	r2, #4
   20180:	ldrls	pc, [pc, r2, lsl #2]
   20184:	b	201bc <__flatcc_fb_gen_c_verifier@@Base+0x1bac>
   20188:	andeq	r0, r2, ip, lsr #3
   2018c:	andeq	r0, r2, ip, lsr #3
   20190:			; <UNDEFINED> instruction: 0x000201bc
   20194:	muleq	r2, ip, r1
   20198:	muleq	r2, ip, r1
   2019c:	ldr	r3, [r4, #8]
   201a0:	add	r3, r3, #1
   201a4:	str	r3, [r4, #8]
   201a8:	pop	{r4, r5, r6, pc}
   201ac:	ldr	r3, [r4, #4]
   201b0:	add	r3, r3, #1
   201b4:	str	r3, [r4, #4]
   201b8:	pop	{r4, r5, r6, pc}
   201bc:	pop	{r4, r5, r6, pc}
   201c0:	pop	{r4, r5, r6, pc}
   201c4:	mov	ip, r3
   201c8:	b	2015c <__flatcc_fb_gen_c_verifier@@Base+0x1b4c>
   201cc:	push	{r4, r5, r6, r7, lr}
   201d0:	mov	r4, r0
   201d4:	sub	sp, sp, #260	; 0x104
   201d8:	mov	r5, #0
   201dc:	mov	r0, r1
   201e0:	add	r1, sp, #52	; 0x34
   201e4:	add	r7, r0, #4
   201e8:	str	r5, [sp, #28]
   201ec:	str	r5, [sp, #24]
   201f0:	str	r5, [sp, #32]
   201f4:	str	r5, [sp, #36]	; 0x24
   201f8:	str	r5, [sp, #40]	; 0x28
   201fc:	str	r5, [sp, #44]	; 0x2c
   20200:	str	r5, [sp, #48]	; 0x30
   20204:	bl	15210 <__flatcc_fb_copy_scope@@Base>
   20208:	ldr	r3, [r4, #208]	; 0xd0
   2020c:	mov	r0, r7
   20210:	add	r2, sp, #12
   20214:	ldr	r1, [pc, #560]	; 2044c <__flatcc_fb_gen_c_verifier@@Base+0x1e3c>
   20218:	str	r5, [sp, #12]
   2021c:	str	r5, [sp, #20]
   20220:	str	r3, [sp, #16]
   20224:	bl	27fcc <fb_symbol_table_visit@@Base>
   20228:	ldr	r5, [sp, #12]
   2022c:	cmp	r5, #0
   20230:	beq	203dc <__flatcc_fb_gen_c_verifier@@Base+0x1dcc>
   20234:	lsl	r0, r5, #4
   20238:	bl	13f3c <malloc@plt>
   2023c:	subs	r6, r0, #0
   20240:	beq	203e4 <__flatcc_fb_gen_c_verifier@@Base+0x1dd4>
   20244:	add	r2, sp, #12
   20248:	mov	r0, r7
   2024c:	ldr	r1, [pc, #508]	; 20450 <__flatcc_fb_gen_c_verifier@@Base+0x1e40>
   20250:	str	r6, [sp, #20]
   20254:	bl	27fcc <fb_symbol_table_visit@@Base>
   20258:	ldr	r3, [pc, #500]	; 20454 <__flatcc_fb_gen_c_verifier@@Base+0x1e44>
   2025c:	mov	r2, #16
   20260:	ldr	r1, [sp, #12]
   20264:	mov	r0, r6
   20268:	bl	14008 <qsort@plt>
   2026c:	str	r6, [sp, #24]
   20270:	ldr	r2, [r4, #208]	; 0xd0
   20274:	ldr	r1, [pc, #476]	; 20458 <__flatcc_fb_gen_c_verifier@@Base+0x1e48>
   20278:	ldr	r0, [pc, #476]	; 2045c <__flatcc_fb_gen_c_verifier@@Base+0x1e4c>
   2027c:	mov	ip, #3
   20280:	add	r3, sp, #52	; 0x34
   20284:	ldr	r2, [r2, #160]	; 0xa0
   20288:	mov	r6, #0
   2028c:	str	r1, [sp, #28]
   20290:	str	r0, [sp, #32]
   20294:	ldr	r1, [pc, #452]	; 20460 <__flatcc_fb_gen_c_verifier@@Base+0x1e50>
   20298:	mov	r0, r4
   2029c:	str	ip, [sp, #40]	; 0x28
   202a0:	str	r6, [sp, #36]	; 0x24
   202a4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   202a8:	ldr	r3, [r4, #220]	; 0xdc
   202ac:	ldr	r1, [pc, #432]	; 20464 <__flatcc_fb_gen_c_verifier@@Base+0x1e54>
   202b0:	add	r3, r3, #2
   202b4:	str	r3, [r4, #220]	; 0xdc
   202b8:	mov	r0, r4
   202bc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   202c0:	ldr	r3, [r4, #220]	; 0xdc
   202c4:	cmp	r3, r6
   202c8:	beq	20424 <__flatcc_fb_gen_c_verifier@@Base+0x1e14>
   202cc:	cmp	r3, #1
   202d0:	streq	r6, [r4, #220]	; 0xdc
   202d4:	beq	20424 <__flatcc_fb_gen_c_verifier@@Base+0x1e14>
   202d8:	sub	r3, r3, #2
   202dc:	str	r3, [r4, #220]	; 0xdc
   202e0:	ldr	r1, [pc, #384]	; 20468 <__flatcc_fb_gen_c_verifier@@Base+0x1e58>
   202e4:	mov	r0, r4
   202e8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   202ec:	ldr	r3, [r4, #220]	; 0xdc
   202f0:	cmp	r5, #0
   202f4:	add	r3, r3, #1
   202f8:	str	r3, [r4, #220]	; 0xdc
   202fc:	beq	203a4 <__flatcc_fb_gen_c_verifier@@Base+0x1d94>
   20300:	ldr	r1, [pc, #356]	; 2046c <__flatcc_fb_gen_c_verifier@@Base+0x1e5c>
   20304:	mov	r0, r4
   20308:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2030c:	ldr	r1, [pc, #348]	; 20470 <__flatcc_fb_gen_c_verifier@@Base+0x1e60>
   20310:	mov	r0, r4
   20314:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20318:	ldr	r1, [pc, #340]	; 20474 <__flatcc_fb_gen_c_verifier@@Base+0x1e64>
   2031c:	mov	r0, r4
   20320:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20324:	ldr	r1, [pc, #332]	; 20478 <__flatcc_fb_gen_c_verifier@@Base+0x1e68>
   20328:	mov	r0, r4
   2032c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20330:	ldr	r1, [pc, #324]	; 2047c <__flatcc_fb_gen_c_verifier@@Base+0x1e6c>
   20334:	mov	r0, r4
   20338:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2033c:	sub	r3, r5, #1
   20340:	mov	r2, r6
   20344:	add	r1, sp, #24
   20348:	mov	r0, r4
   2034c:	str	r6, [sp]
   20350:	bl	1ee7c <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   20354:	ldr	r1, [pc, #292]	; 20480 <__flatcc_fb_gen_c_verifier@@Base+0x1e70>
   20358:	mov	r0, r4
   2035c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20360:	ldr	r3, [r4, #220]	; 0xdc
   20364:	cmp	r3, #0
   20368:	beq	20438 <__flatcc_fb_gen_c_verifier@@Base+0x1e28>
   2036c:	sub	r3, r3, #1
   20370:	str	r3, [r4, #220]	; 0xdc
   20374:	ldr	r1, [pc, #264]	; 20484 <__flatcc_fb_gen_c_verifier@@Base+0x1e74>
   20378:	mov	r0, r4
   2037c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20380:	mov	r0, r4
   20384:	ldr	r1, [pc, #236]	; 20478 <__flatcc_fb_gen_c_verifier@@Base+0x1e68>
   20388:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2038c:	ldr	r0, [sp, #24]
   20390:	cmp	r0, #0
   20394:	beq	2039c <__flatcc_fb_gen_c_verifier@@Base+0x1d8c>
   20398:	bl	13ed0 <free@plt>
   2039c:	add	sp, sp, #260	; 0x104
   203a0:	pop	{r4, r5, r6, r7, pc}
   203a4:	ldr	r1, [pc, #220]	; 20488 <__flatcc_fb_gen_c_verifier@@Base+0x1e78>
   203a8:	mov	r0, r4
   203ac:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   203b0:	ldr	r1, [pc, #212]	; 2048c <__flatcc_fb_gen_c_verifier@@Base+0x1e7c>
   203b4:	mov	r0, r4
   203b8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   203bc:	ldr	r3, [r4, #220]	; 0xdc
   203c0:	cmp	r3, #0
   203c4:	bne	2036c <__flatcc_fb_gen_c_verifier@@Base+0x1d5c>
   203c8:	ldr	r3, [pc, #192]	; 20490 <__flatcc_fb_gen_c_verifier@@Base+0x1e80>
   203cc:	ldr	r2, [pc, #192]	; 20494 <__flatcc_fb_gen_c_verifier@@Base+0x1e84>
   203d0:	ldr	r1, [pc, #192]	; 20498 <__flatcc_fb_gen_c_verifier@@Base+0x1e88>
   203d4:	ldr	r0, [pc, #192]	; 2049c <__flatcc_fb_gen_c_verifier@@Base+0x1e8c>
   203d8:	bl	14038 <__assert_fail@plt>
   203dc:	str	r5, [sp, #24]
   203e0:	b	20270 <__flatcc_fb_gen_c_verifier@@Base+0x1c60>
   203e4:	cmp	r5, #0
   203e8:	str	r6, [sp, #24]
   203ec:	ble	20270 <__flatcc_fb_gen_c_verifier@@Base+0x1c60>
   203f0:	ldr	r1, [pc, #168]	; 204a0 <__flatcc_fb_gen_c_verifier@@Base+0x1e90>
   203f4:	ldr	r2, [pc, #168]	; 204a4 <__flatcc_fb_gen_c_verifier@@Base+0x1e94>
   203f8:	ldr	r3, [pc, #168]	; 204a8 <__flatcc_fb_gen_c_verifier@@Base+0x1e98>
   203fc:	ldr	r0, [r1]
   20400:	str	r2, [sp]
   20404:	ldr	r1, [pc, #160]	; 204ac <__flatcc_fb_gen_c_verifier@@Base+0x1e9c>
   20408:	ldr	r2, [pc, #136]	; 20498 <__flatcc_fb_gen_c_verifier@@Base+0x1e88>
   2040c:	bl	13f84 <fprintf@plt>
   20410:	ldr	r3, [pc, #120]	; 20490 <__flatcc_fb_gen_c_verifier@@Base+0x1e80>
   20414:	ldr	r2, [pc, #140]	; 204a8 <__flatcc_fb_gen_c_verifier@@Base+0x1e98>
   20418:	ldr	r1, [pc, #120]	; 20498 <__flatcc_fb_gen_c_verifier@@Base+0x1e88>
   2041c:	ldr	r0, [pc, #140]	; 204b0 <__flatcc_fb_gen_c_verifier@@Base+0x1ea0>
   20420:	bl	14038 <__assert_fail@plt>
   20424:	ldr	r3, [pc, #100]	; 20490 <__flatcc_fb_gen_c_verifier@@Base+0x1e80>
   20428:	mov	r2, #1152	; 0x480
   2042c:	ldr	r1, [pc, #100]	; 20498 <__flatcc_fb_gen_c_verifier@@Base+0x1e88>
   20430:	ldr	r0, [pc, #100]	; 2049c <__flatcc_fb_gen_c_verifier@@Base+0x1e8c>
   20434:	bl	14038 <__assert_fail@plt>
   20438:	ldr	r3, [pc, #80]	; 20490 <__flatcc_fb_gen_c_verifier@@Base+0x1e80>
   2043c:	ldr	r2, [pc, #112]	; 204b4 <__flatcc_fb_gen_c_verifier@@Base+0x1ea4>
   20440:	ldr	r1, [pc, #80]	; 20498 <__flatcc_fb_gen_c_verifier@@Base+0x1e88>
   20444:	ldr	r0, [pc, #80]	; 2049c <__flatcc_fb_gen_c_verifier@@Base+0x1e8c>
   20448:	bl	14038 <__assert_fail@plt>
   2044c:	strheq	r0, [r2], -r4
   20450:	andeq	r0, r2, r4, rrx
   20454:	andeq	r0, r2, r4, lsr r0
   20458:	andeq	r0, r2, r0, lsr #14
   2045c:	andeq	lr, r1, r4, asr #20
   20460:			; <UNDEFINED> instruction: 0x000549b8
   20464:	andeq	r4, r5, r8, lsr #29
   20468:	andeq	r7, r5, r0, lsl r4
   2046c:	andeq	r4, r5, r0, lsr pc
   20470:	andeq	r4, r5, r0, asr pc
   20474:	andeq	r4, r5, r4, ror #30
   20478:	andeq	fp, r4, ip, lsr #24
   2047c:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   20480:	andeq	r4, r5, r0, ror sp
   20484:	strdeq	r4, [r5], -r8
   20488:	ldrdeq	r4, [r5], -ip
   2048c:	andeq	r4, r5, r0, lsl pc
   20490:	andeq	r4, r5, ip, lsl #11
   20494:	andeq	r0, r0, r5, lsl #9
   20498:	muleq	r5, r4, r7
   2049c:	andeq	r4, r5, ip, ror #15
   204a0:	andeq	sp, r6, r8, lsr #1
   204a4:	andeq	r4, r5, ip, ror #28
   204a8:	andeq	r0, r0, r4, ror r4
   204ac:			; <UNDEFINED> instruction: 0x00041fbc
   204b0:	andeq	sl, r4, r4, asr sp
   204b4:	andeq	r0, r0, lr, lsl #9
   204b8:	ldrh	r3, [r1, #8]
   204bc:	cmp	r3, #4
   204c0:	bxhi	lr
   204c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   204c8:	mov	r6, r0
   204cc:	ldr	r0, [r0, #40]	; 0x28
   204d0:	mov	r7, r1
   204d4:	add	r0, r0, #172	; 0xac
   204d8:	ldr	r1, [r1, #16]
   204dc:	bl	275b4 <ptr_set_find_item@@Base>
   204e0:	cmp	r0, #0
   204e4:	beq	205b8 <__flatcc_fb_gen_c_verifier@@Base+0x1fa8>
   204e8:	ldr	r3, [r6]
   204ec:	ldr	r9, [r6, #36]	; 0x24
   204f0:	cmp	r3, #0
   204f4:	moveq	r3, r9
   204f8:	beq	20540 <__flatcc_fb_gen_c_verifier@@Base+0x1f30>
   204fc:	ldr	r3, [r7, #12]
   20500:	ldr	r5, [r3]
   20504:	mov	r3, r9
   20508:	cmp	r5, #0
   2050c:	beq	20540 <__flatcc_fb_gen_c_verifier@@Base+0x1f30>
   20510:	mov	r8, #46	; 0x2e
   20514:	ldr	r2, [r5, #4]
   20518:	mov	r0, r3
   2051c:	ldm	r2, {r1, r4}
   20520:	mov	r2, r4
   20524:	bl	13edc <memcpy@plt>
   20528:	add	r4, r0, r4
   2052c:	add	r3, r4, #1
   20530:	strb	r8, [r4]
   20534:	ldr	r5, [r5]
   20538:	cmp	r5, #0
   2053c:	bne	20514 <__flatcc_fb_gen_c_verifier@@Base+0x1f04>
   20540:	ldr	r2, [r7, #4]
   20544:	mov	r0, r3
   20548:	ldm	r2, {r1, r4}
   2054c:	mov	r2, r4
   20550:	bl	13edc <memcpy@plt>
   20554:	mov	r2, #0
   20558:	strb	r2, [r0, r4]
   2055c:	ldrh	r2, [r7, #8]
   20560:	add	r3, r0, r4
   20564:	add	r3, r3, #1
   20568:	str	r3, [r6, #36]	; 0x24
   2056c:	cmp	r2, #4
   20570:	ldrls	pc, [pc, r2, lsl #2]
   20574:	b	205b4 <__flatcc_fb_gen_c_verifier@@Base+0x1fa4>
   20578:	andeq	r0, r2, r0, lsr #11
   2057c:	andeq	r0, r2, r0, lsr #11
   20580:			; <UNDEFINED> instruction: 0x000205b4
   20584:	andeq	r0, r2, ip, lsl #11
   20588:	andeq	r0, r2, ip, lsl #11
   2058c:	ldr	r3, [r6, #32]
   20590:	add	r2, r3, #8
   20594:	stm	r3, {r7, r9}
   20598:	str	r2, [r6, #32]
   2059c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   205a0:	ldr	r3, [r6, #28]
   205a4:	add	r2, r3, #8
   205a8:	stm	r3, {r7, r9}
   205ac:	str	r2, [r6, #28]
   205b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   205b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   205b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   205bc:	ldr	r1, [r1, #4]
   205c0:	ldr	r0, [r0, #4]
   205c4:	b	13eb8 <strcmp@plt>
   205c8:	push	{r4, r5, r6, lr}
   205cc:	sub	sp, sp, #8
   205d0:	mov	r4, r0
   205d4:	mov	r5, r1
   205d8:	mov	r6, r2
   205dc:	ldr	r1, [pc, #256]	; 206e4 <__flatcc_fb_gen_c_verifier@@Base+0x20d4>
   205e0:	ldr	r2, [sp, #24]
   205e4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   205e8:	mov	r0, r4
   205ec:	ldr	r1, [pc, #244]	; 206e8 <__flatcc_fb_gen_c_verifier@@Base+0x20d8>
   205f0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   205f4:	ldr	r3, [r4, #220]	; 0xdc
   205f8:	add	r3, r3, #1
   205fc:	str	r3, [r4, #220]	; 0xdc
   20600:	ldr	r3, [r5, #40]	; 0x28
   20604:	sub	r3, r3, #1
   20608:	cmp	r3, #8
   2060c:	ldrls	pc, [pc, r3, lsl #2]
   20610:	b	2069c <__flatcc_fb_gen_c_verifier@@Base+0x208c>
   20614:	andeq	r0, r2, r8, lsl #13
   20618:	andeq	r0, r2, r8, lsl #13
   2061c:	andeq	r0, r2, r8, lsl #13
   20620:	andeq	r0, r2, r8, lsl #13
   20624:	andeq	r0, r2, r8, lsl #13
   20628:	andeq	r0, r2, r8, lsr r6
   2062c:	andeq	r0, r2, r8, lsr r6
   20630:	andeq	r0, r2, r8, lsr r6
   20634:	andeq	r0, r2, r8, lsr r6
   20638:	ldrd	r2, [r6, #48]	; 0x30
   2063c:	mov	r0, r4
   20640:	cmp	r2, #0
   20644:	sbcs	r1, r3, #0
   20648:	ldrlt	r1, [pc, #156]	; 206ec <__flatcc_fb_gen_c_verifier@@Base+0x20dc>
   2064c:	ldrge	r1, [pc, #156]	; 206f0 <__flatcc_fb_gen_c_verifier@@Base+0x20e0>
   20650:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20654:	ldr	r3, [r4, #220]	; 0xdc
   20658:	cmp	r3, #0
   2065c:	beq	206d0 <__flatcc_fb_gen_c_verifier@@Base+0x20c0>
   20660:	sub	r3, r3, #1
   20664:	str	r3, [r4, #220]	; 0xdc
   20668:	ldr	r1, [pc, #132]	; 206f4 <__flatcc_fb_gen_c_verifier@@Base+0x20e4>
   2066c:	mov	r0, r4
   20670:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20674:	ldr	r3, [r4, #220]	; 0xdc
   20678:	add	r3, r3, #1
   2067c:	str	r3, [r4, #220]	; 0xdc
   20680:	add	sp, sp, #8
   20684:	pop	{r4, r5, r6, pc}
   20688:	ldrd	r2, [r6, #48]	; 0x30
   2068c:	ldr	r1, [pc, #92]	; 206f0 <__flatcc_fb_gen_c_verifier@@Base+0x20e0>
   20690:	mov	r0, r4
   20694:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20698:	b	20654 <__flatcc_fb_gen_c_verifier@@Base+0x2044>
   2069c:	ldr	r1, [pc, #84]	; 206f8 <__flatcc_fb_gen_c_verifier@@Base+0x20e8>
   206a0:	ldr	r2, [pc, #84]	; 206fc <__flatcc_fb_gen_c_verifier@@Base+0x20ec>
   206a4:	ldr	r3, [pc, #84]	; 20700 <__flatcc_fb_gen_c_verifier@@Base+0x20f0>
   206a8:	ldr	r0, [r1]
   206ac:	str	r2, [sp]
   206b0:	ldr	r1, [pc, #76]	; 20704 <__flatcc_fb_gen_c_verifier@@Base+0x20f4>
   206b4:	ldr	r2, [pc, #76]	; 20708 <__flatcc_fb_gen_c_verifier@@Base+0x20f8>
   206b8:	bl	13f84 <fprintf@plt>
   206bc:	ldr	r3, [pc, #72]	; 2070c <__flatcc_fb_gen_c_verifier@@Base+0x20fc>
   206c0:	ldr	r2, [pc, #56]	; 20700 <__flatcc_fb_gen_c_verifier@@Base+0x20f0>
   206c4:	ldr	r1, [pc, #60]	; 20708 <__flatcc_fb_gen_c_verifier@@Base+0x20f8>
   206c8:	ldr	r0, [pc, #64]	; 20710 <__flatcc_fb_gen_c_verifier@@Base+0x2100>
   206cc:	bl	14038 <__assert_fail@plt>
   206d0:	ldr	r3, [pc, #60]	; 20714 <__flatcc_fb_gen_c_verifier@@Base+0x2104>
   206d4:	ldr	r2, [pc, #60]	; 20718 <__flatcc_fb_gen_c_verifier@@Base+0x2108>
   206d8:	ldr	r1, [pc, #40]	; 20708 <__flatcc_fb_gen_c_verifier@@Base+0x20f8>
   206dc:	ldr	r0, [pc, #56]	; 2071c <__flatcc_fb_gen_c_verifier@@Base+0x210c>
   206e0:	bl	14038 <__assert_fail@plt>
   206e4:	andeq	r4, r5, r0, ror pc
   206e8:	andeq	r4, r5, r0, asr #31
   206ec:	andeq	r5, r5, r0
   206f0:	ldrdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   206f4:	andeq	r4, r5, ip, lsl sp
   206f8:	andeq	sp, r6, r8, lsr #1
   206fc:	andeq	r5, r5, ip, lsr #32
   20700:	andeq	r0, r0, r6, asr #5
   20704:			; <UNDEFINED> instruction: 0x00041fbc
   20708:	muleq	r5, r4, r7
   2070c:	andeq	r4, r5, r4, lsr #11
   20710:	andeq	sl, r4, r4, asr sp
   20714:			; <UNDEFINED> instruction: 0x000545bc
   20718:	andeq	r0, r0, pc, asr #5
   2071c:	andeq	r4, r5, ip, ror #15
   20720:	push	{r4, r5, lr}
   20724:	sub	sp, sp, #228	; 0xe4
   20728:	mov	r4, r0
   2072c:	mov	r5, r2
   20730:	ldr	r1, [pc, #184]	; 207f0 <__flatcc_fb_gen_c_verifier@@Base+0x21e0>
   20734:	ldr	r2, [sp, #240]	; 0xf0
   20738:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2073c:	mov	r0, r4
   20740:	ldr	r1, [pc, #172]	; 207f4 <__flatcc_fb_gen_c_verifier@@Base+0x21e4>
   20744:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20748:	ldrh	r2, [r5, #8]
   2074c:	ldr	r3, [r4, #220]	; 0xdc
   20750:	sub	r2, r2, #3
   20754:	add	r3, r3, #1
   20758:	cmp	r2, #1
   2075c:	str	r3, [r4, #220]	; 0xdc
   20760:	bhi	207c8 <__flatcc_fb_gen_c_verifier@@Base+0x21b8>
   20764:	mov	r2, #220	; 0xdc
   20768:	mov	r1, #0
   2076c:	add	r0, sp, #4
   20770:	bl	13f9c <memset@plt>
   20774:	add	r2, sp, #4
   20778:	mov	r1, r5
   2077c:	ldr	r0, [r5, #12]
   20780:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   20784:	add	r2, sp, #4
   20788:	ldr	r1, [pc, #104]	; 207f8 <__flatcc_fb_gen_c_verifier@@Base+0x21e8>
   2078c:	mov	r0, r4
   20790:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20794:	ldr	r3, [r4, #220]	; 0xdc
   20798:	cmp	r3, #0
   2079c:	beq	207dc <__flatcc_fb_gen_c_verifier@@Base+0x21cc>
   207a0:	sub	r3, r3, #1
   207a4:	str	r3, [r4, #220]	; 0xdc
   207a8:	ldr	r1, [pc, #76]	; 207fc <__flatcc_fb_gen_c_verifier@@Base+0x21ec>
   207ac:	mov	r0, r4
   207b0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   207b4:	ldr	r3, [r4, #220]	; 0xdc
   207b8:	add	r3, r3, #1
   207bc:	str	r3, [r4, #220]	; 0xdc
   207c0:	add	sp, sp, #228	; 0xe4
   207c4:	pop	{r4, r5, pc}
   207c8:	ldr	r3, [pc, #48]	; 20800 <__flatcc_fb_gen_c_verifier@@Base+0x21f0>
   207cc:	ldr	r2, [pc, #48]	; 20804 <__flatcc_fb_gen_c_verifier@@Base+0x21f4>
   207d0:	ldr	r1, [pc, #48]	; 20808 <__flatcc_fb_gen_c_verifier@@Base+0x21f8>
   207d4:	ldr	r0, [pc, #48]	; 2080c <__flatcc_fb_gen_c_verifier@@Base+0x21fc>
   207d8:	bl	14038 <__assert_fail@plt>
   207dc:	ldr	r3, [pc, #44]	; 20810 <__flatcc_fb_gen_c_verifier@@Base+0x2200>
   207e0:	ldr	r2, [pc, #44]	; 20814 <__flatcc_fb_gen_c_verifier@@Base+0x2204>
   207e4:	ldr	r1, [pc, #28]	; 20808 <__flatcc_fb_gen_c_verifier@@Base+0x21f8>
   207e8:	ldr	r0, [pc, #40]	; 20818 <__flatcc_fb_gen_c_verifier@@Base+0x2208>
   207ec:	bl	14038 <__assert_fail@plt>
   207f0:	andeq	r5, r5, r0, asr r0
   207f4:	andeq	r4, r5, r0, asr #31
   207f8:	muleq	r5, r4, r0
   207fc:	andeq	r4, r5, ip, lsl sp
   20800:	andeq	r4, r5, ip, asr #11
   20804:	ldrdeq	r0, [r0], -r9
   20808:	muleq	r5, r4, r7
   2080c:	andeq	r1, r4, r0, lsl pc
   20810:	andeq	r4, r5, r4, ror #11
   20814:	andeq	r0, r0, r6, ror #5
   20818:	andeq	r4, r5, ip, ror #15
   2081c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20820:	mov	r6, r2
   20824:	sub	sp, sp, #500	; 0x1f4
   20828:	mov	r5, r1
   2082c:	mov	r2, #220	; 0xdc
   20830:	mov	r1, #0
   20834:	mov	r4, r0
   20838:	add	r0, sp, #276	; 0x114
   2083c:	mov	r7, r3
   20840:	bl	13f9c <memset@plt>
   20844:	ldr	r0, [r6]
   20848:	add	r1, sp, #72	; 0x48
   2084c:	bl	15210 <__flatcc_fb_copy_scope@@Base>
   20850:	ldrh	r3, [r5]
   20854:	mov	r2, r3
   20858:	str	r3, [sp, #16]
   2085c:	ldrh	r3, [r7, #24]
   20860:	sub	r2, r2, #1
   20864:	clz	r2, r2
   20868:	cmp	r3, #15
   2086c:	lsr	r2, r2, #5
   20870:	movhi	r5, #0
   20874:	str	r2, [sp, #52]	; 0x34
   20878:	movhi	r2, r5
   2087c:	bhi	20898 <__flatcc_fb_gen_c_verifier@@Base+0x2288>
   20880:	ldr	r2, [pc, #2984]	; 21430 <__flatcc_fb_gen_c_verifier@@Base+0x2e20>
   20884:	mov	r1, #1
   20888:	ands	r2, r2, r1, lsl r3
   2088c:	movne	r2, r1
   20890:	moveq	r2, #0
   20894:	mov	r5, r2
   20898:	sub	r3, r3, #7
   2089c:	cmp	r3, #8
   208a0:	ldrls	pc, [pc, r3, lsl #2]
   208a4:	b	20d84 <__flatcc_fb_gen_c_verifier@@Base+0x2774>
   208a8:	andeq	r0, r2, r4, asr #24
   208ac:	andeq	r0, r2, r0, lsl ip
   208b0:	andeq	r0, r2, ip, asr #17
   208b4:	andeq	r0, r2, ip, asr #17
   208b8:	andeq	r0, r2, r4, lsl #27
   208bc:	andeq	r0, r2, r4, lsl #27
   208c0:	andeq	r0, r2, r4, lsl #27
   208c4:	andeq	r0, r2, r0, lsl sp
   208c8:	andeq	r0, r2, r0, lsl sp
   208cc:	mov	r3, #0
   208d0:	str	r3, [sp, #24]
   208d4:	mov	r9, r3
   208d8:	str	r3, [sp, #20]
   208dc:	mov	r6, r3
   208e0:	str	r3, [sp, #48]	; 0x30
   208e4:	mov	r3, #1
   208e8:	str	r3, [sp, #40]	; 0x28
   208ec:	mov	r3, #0
   208f0:	str	r3, [sp, #32]
   208f4:	str	r3, [sp, #64]	; 0x40
   208f8:	mov	fp, r3
   208fc:	and	r3, r5, #1
   20900:	str	r3, [sp, #44]	; 0x2c
   20904:	ldr	r3, [sp, #536]	; 0x218
   20908:	cmp	r3, #0
   2090c:	beq	20cb8 <__flatcc_fb_gen_c_verifier@@Base+0x26a8>
   20910:	ldr	r3, [sp, #44]	; 0x2c
   20914:	cmp	r3, #0
   20918:	beq	213c8 <__flatcc_fb_gen_c_verifier@@Base+0x2db8>
   2091c:	mov	r6, #0
   20920:	mov	r5, r6
   20924:	mov	r3, #1
   20928:	str	r6, [sp, #56]	; 0x38
   2092c:	str	r6, [sp, #60]	; 0x3c
   20930:	str	r3, [sp, #68]	; 0x44
   20934:	cmp	fp, #1
   20938:	beq	20cf4 <__flatcc_fb_gen_c_verifier@@Base+0x26e4>
   2093c:	ldr	r8, [pc, #2800]	; 21434 <__flatcc_fb_gen_c_verifier@@Base+0x2e24>
   20940:	cmp	fp, #2
   20944:	str	r8, [sp, #36]	; 0x24
   20948:	beq	20adc <__flatcc_fb_gen_c_verifier@@Base+0x24cc>
   2094c:	ldr	r3, [sp, #536]	; 0x218
   20950:	orr	sl, r6, r9
   20954:	cmp	r6, #0
   20958:	orr	sl, sl, r3
   2095c:	bne	20da4 <__flatcc_fb_gen_c_verifier@@Base+0x2794>
   20960:	cmp	r5, #0
   20964:	moveq	r6, r5
   20968:	beq	209fc <__flatcc_fb_gen_c_verifier@@Base+0x23ec>
   2096c:	cmp	sl, #0
   20970:	beq	20e04 <__flatcc_fb_gen_c_verifier@@Base+0x27f4>
   20974:	ldrd	r2, [r7, #88]	; 0x58
   20978:	ldrsh	r5, [r7, #74]	; 0x4a
   2097c:	mvn	r0, #0
   20980:	orrs	r1, r2, r3
   20984:	strd	r2, [sp, #24]
   20988:	mov	r1, #0
   2098c:	beq	20998 <__flatcc_fb_gen_c_verifier@@Base+0x2388>
   20990:	bl	40690 <fb_value_set_visit@@Base+0x668>
   20994:	ldrd	r2, [sp, #24]
   20998:	strd	r0, [sp, #8]
   2099c:	str	r5, [sp]
   209a0:	ldr	r1, [pc, #2704]	; 21438 <__flatcc_fb_gen_c_verifier@@Base+0x2e28>
   209a4:	mov	r0, r4
   209a8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   209ac:	ldr	r1, [pc, #2696]	; 2143c <__flatcc_fb_gen_c_verifier@@Base+0x2e2c>
   209b0:	mov	r0, r4
   209b4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   209b8:	ldr	r1, [pc, #2688]	; 21440 <__flatcc_fb_gen_c_verifier@@Base+0x2e30>
   209bc:	mov	r0, r4
   209c0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   209c4:	ldr	r3, [r4, #220]	; 0xdc
   209c8:	cmp	r6, #0
   209cc:	add	r3, r3, #1
   209d0:	str	r3, [r4, #220]	; 0xdc
   209d4:	moveq	r5, #1
   209d8:	bne	20e28 <__flatcc_fb_gen_c_verifier@@Base+0x2818>
   209dc:	cmp	sl, #0
   209e0:	moveq	r3, #0
   209e4:	andne	r3, r5, #1
   209e8:	cmp	r3, #0
   209ec:	beq	209fc <__flatcc_fb_gen_c_verifier@@Base+0x23ec>
   209f0:	ldr	r1, [pc, #2636]	; 21444 <__flatcc_fb_gen_c_verifier@@Base+0x2e34>
   209f4:	mov	r0, r4
   209f8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   209fc:	ldr	r3, [sp, #16]
   20a00:	cmp	r3, #1
   20a04:	beq	20b5c <__flatcc_fb_gen_c_verifier@@Base+0x254c>
   20a08:	eor	r3, r5, #1
   20a0c:	tst	r3, r9
   20a10:	bne	20fc4 <__flatcc_fb_gen_c_verifier@@Base+0x29b4>
   20a14:	cmp	r6, #0
   20a18:	bne	20b74 <__flatcc_fb_gen_c_verifier@@Base+0x2564>
   20a1c:	cmp	r9, #0
   20a20:	bne	20fe8 <__flatcc_fb_gen_c_verifier@@Base+0x29d8>
   20a24:	ldr	r3, [sp, #40]	; 0x28
   20a28:	cmp	r3, #0
   20a2c:	bne	20ffc <__flatcc_fb_gen_c_verifier@@Base+0x29ec>
   20a30:	ldr	r3, [sp, #32]
   20a34:	cmp	r3, #0
   20a38:	bne	21060 <__flatcc_fb_gen_c_verifier@@Base+0x2a50>
   20a3c:	ldr	r3, [sp, #20]
   20a40:	cmp	r3, #0
   20a44:	bne	210f8 <__flatcc_fb_gen_c_verifier@@Base+0x2ae8>
   20a48:	ldr	r3, [sp, #56]	; 0x38
   20a4c:	cmp	r3, #0
   20a50:	beq	21090 <__flatcc_fb_gen_c_verifier@@Base+0x2a80>
   20a54:	ldr	r3, [sp, #60]	; 0x3c
   20a58:	ldrd	r0, [r7, #96]	; 0x60
   20a5c:	cmp	r3, #0
   20a60:	add	r3, sp, #276	; 0x114
   20a64:	ldr	r2, [r7, #112]	; 0x70
   20a68:	strd	r0, [sp]
   20a6c:	str	r3, [sp, #8]
   20a70:	ldrne	r1, [pc, #2512]	; 21448 <__flatcc_fb_gen_c_verifier@@Base+0x2e38>
   20a74:	ldrne	r3, [sp, #20]
   20a78:	ldreq	r3, [sp, #60]	; 0x3c
   20a7c:	ldreq	r1, [pc, #2504]	; 2144c <__flatcc_fb_gen_c_verifier@@Base+0x2e3c>
   20a80:	mov	r0, r4
   20a84:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20a88:	cmp	r5, #0
   20a8c:	beq	20ad0 <__flatcc_fb_gen_c_verifier@@Base+0x24c0>
   20a90:	cmp	sl, #0
   20a94:	beq	2100c <__flatcc_fb_gen_c_verifier@@Base+0x29fc>
   20a98:	ldr	r1, [pc, #2480]	; 21450 <__flatcc_fb_gen_c_verifier@@Base+0x2e40>
   20a9c:	mov	r0, r4
   20aa0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20aa4:	ldr	r3, [r4, #220]	; 0xdc
   20aa8:	cmp	r3, #0
   20aac:	beq	2107c <__flatcc_fb_gen_c_verifier@@Base+0x2a6c>
   20ab0:	sub	r3, r3, #1
   20ab4:	ldr	r1, [pc, #2456]	; 21454 <__flatcc_fb_gen_c_verifier@@Base+0x2e44>
   20ab8:	mov	r0, r4
   20abc:	str	r3, [r4, #220]	; 0xdc
   20ac0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20ac4:	ldr	r1, [pc, #2444]	; 21458 <__flatcc_fb_gen_c_verifier@@Base+0x2e48>
   20ac8:	mov	r0, r4
   20acc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20ad0:	cmp	fp, #1
   20ad4:	bne	20f48 <__flatcc_fb_gen_c_verifier@@Base+0x2938>
   20ad8:	mov	fp, #2
   20adc:	ldr	r3, [r4, #220]	; 0xdc
   20ae0:	cmp	r3, #0
   20ae4:	beq	21384 <__flatcc_fb_gen_c_verifier@@Base+0x2d74>
   20ae8:	sub	r3, r3, #1
   20aec:	str	r3, [r4, #220]	; 0xdc
   20af0:	ldr	r1, [pc, #2404]	; 2145c <__flatcc_fb_gen_c_verifier@@Base+0x2e4c>
   20af4:	mov	r0, r4
   20af8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20afc:	ldr	r1, [r7, #104]	; 0x68
   20b00:	ldr	r3, [r4, #220]	; 0xdc
   20b04:	add	r2, sp, #276	; 0x114
   20b08:	add	r3, r3, #1
   20b0c:	ldr	r0, [r1, #12]
   20b10:	str	r3, [r4, #220]	; 0xdc
   20b14:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   20b18:	ldr	r3, [r7, #104]	; 0x68
   20b1c:	mov	r5, #0
   20b20:	ldr	r1, [pc, #2360]	; 21460 <__flatcc_fb_gen_c_verifier@@Base+0x2e50>
   20b24:	ldrh	r3, [r3, #8]
   20b28:	mov	r0, r4
   20b2c:	mov	r6, r5
   20b30:	cmp	r3, r5
   20b34:	ldr	r3, [sp, #20]
   20b38:	moveq	r3, #1
   20b3c:	str	r3, [sp, #20]
   20b40:	ldr	r3, [sp, #536]	; 0x218
   20b44:	movne	r9, #1
   20b48:	orr	sl, r3, r9
   20b4c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20b50:	ldr	r3, [sp, #16]
   20b54:	cmp	r3, #1
   20b58:	bne	20a08 <__flatcc_fb_gen_c_verifier@@Base+0x23f8>
   20b5c:	ldrd	r2, [r7, #80]	; 0x50
   20b60:	ldr	r1, [pc, #2300]	; 21464 <__flatcc_fb_gen_c_verifier@@Base+0x2e54>
   20b64:	mov	r0, r4
   20b68:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20b6c:	cmp	r6, #0
   20b70:	beq	20a1c <__flatcc_fb_gen_c_verifier@@Base+0x240c>
   20b74:	mov	r2, r8
   20b78:	ldr	r1, [pc, #2280]	; 21468 <__flatcc_fb_gen_c_verifier@@Base+0x2e58>
   20b7c:	mov	r0, r4
   20b80:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20b84:	ldr	r1, [pc, #2272]	; 2146c <__flatcc_fb_gen_c_verifier@@Base+0x2e5c>
   20b88:	mov	r0, r4
   20b8c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20b90:	ldr	r3, [r4, #220]	; 0xdc
   20b94:	mov	r2, r8
   20b98:	add	r3, r3, #1
   20b9c:	str	r3, [r4, #220]	; 0xdc
   20ba0:	ldr	r1, [pc, #2248]	; 21470 <__flatcc_fb_gen_c_verifier@@Base+0x2e60>
   20ba4:	mov	r0, r4
   20ba8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20bac:	ldr	r1, [pc, #2240]	; 21474 <__flatcc_fb_gen_c_verifier@@Base+0x2e64>
   20bb0:	mov	r0, r4
   20bb4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20bb8:	ldr	r3, [r4, #220]	; 0xdc
   20bbc:	cmp	r3, #0
   20bc0:	beq	21370 <__flatcc_fb_gen_c_verifier@@Base+0x2d60>
   20bc4:	sub	r3, r3, #1
   20bc8:	str	r3, [r4, #220]	; 0xdc
   20bcc:	ldr	r3, [sp, #52]	; 0x34
   20bd0:	ldr	r1, [pc, #2172]	; 21454 <__flatcc_fb_gen_c_verifier@@Base+0x2e44>
   20bd4:	mov	r0, r4
   20bd8:	orr	r6, r3, r5
   20bdc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20be0:	ldr	r3, [sp, #32]
   20be4:	orrs	r3, r6, r3
   20be8:	bne	210d8 <__flatcc_fb_gen_c_verifier@@Base+0x2ac8>
   20bec:	ldrh	r3, [r7, #56]	; 0x38
   20bf0:	sub	r3, r3, #3
   20bf4:	cmp	r3, #3
   20bf8:	ldrls	pc, [pc, r3, lsl #2]
   20bfc:	b	2110c <__flatcc_fb_gen_c_verifier@@Base+0x2afc>
   20c00:	andeq	r0, r2, r4, lsr #31
   20c04:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   20c08:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20c0c:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20c10:	ldr	r3, [r7, #16]
   20c14:	mov	fp, #0
   20c18:	str	fp, [sp, #64]	; 0x40
   20c1c:	str	r3, [sp, #24]
   20c20:	mov	r9, #0
   20c24:	and	r3, r5, #1
   20c28:	str	r9, [sp, #20]
   20c2c:	str	r9, [sp, #40]	; 0x28
   20c30:	str	r9, [sp, #48]	; 0x30
   20c34:	str	r9, [sp, #32]
   20c38:	str	r3, [sp, #44]	; 0x2c
   20c3c:	mov	r6, #1
   20c40:	b	20904 <__flatcc_fb_gen_c_verifier@@Base+0x22f4>
   20c44:	ldrh	r3, [r7, #72]	; 0x48
   20c48:	ldr	r1, [r7, #104]	; 0x68
   20c4c:	ldr	r0, [r7, #16]
   20c50:	adds	fp, r1, #0
   20c54:	movne	fp, #1
   20c58:	ands	r1, r3, #3072	; 0xc00
   20c5c:	and	r3, r3, #1024	; 0x400
   20c60:	str	r0, [sp, #24]
   20c64:	str	r1, [sp, #32]
   20c68:	str	r3, [sp, #64]	; 0x40
   20c6c:	beq	20c20 <__flatcc_fb_gen_c_verifier@@Base+0x2610>
   20c70:	eor	r2, r2, #1
   20c74:	cmp	r0, #4
   20c78:	orrne	r2, r2, #1
   20c7c:	cmp	r2, #0
   20c80:	str	r2, [sp, #44]	; 0x2c
   20c84:	bne	213fc <__flatcc_fb_gen_c_verifier@@Base+0x2dec>
   20c88:	ldr	r3, [sp, #536]	; 0x218
   20c8c:	mov	r5, r2
   20c90:	mov	r9, r2
   20c94:	str	r2, [sp, #20]
   20c98:	str	r2, [sp, #40]	; 0x28
   20c9c:	str	r2, [sp, #48]	; 0x30
   20ca0:	cmp	r3, #0
   20ca4:	mov	r2, #4
   20ca8:	str	r2, [sp, #24]
   20cac:	mov	fp, r5
   20cb0:	mov	r6, r5
   20cb4:	bne	20910 <__flatcc_fb_gen_c_verifier@@Base+0x2300>
   20cb8:	str	r3, [sp, #56]	; 0x38
   20cbc:	ldr	r2, [sp, #44]	; 0x2c
   20cc0:	ands	r3, r2, r3
   20cc4:	str	r3, [sp, #44]	; 0x2c
   20cc8:	streq	r3, [sp, #68]	; 0x44
   20ccc:	streq	r3, [sp, #60]	; 0x3c
   20cd0:	beq	20934 <__flatcc_fb_gen_c_verifier@@Base+0x2324>
   20cd4:	mov	r3, #0
   20cd8:	str	r3, [sp, #44]	; 0x2c
   20cdc:	str	r3, [sp, #68]	; 0x44
   20ce0:	mov	r5, r3
   20ce4:	cmp	fp, #1
   20ce8:	mov	r3, #1
   20cec:	str	r3, [sp, #60]	; 0x3c
   20cf0:	bne	2093c <__flatcc_fb_gen_c_verifier@@Base+0x232c>
   20cf4:	ldr	r1, [pc, #1916]	; 21478 <__flatcc_fb_gen_c_verifier@@Base+0x2e68>
   20cf8:	mov	r0, r4
   20cfc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20d00:	ldr	r3, [r4, #220]	; 0xdc
   20d04:	add	r3, r3, #1
   20d08:	str	r3, [r4, #220]	; 0xdc
   20d0c:	b	2093c <__flatcc_fb_gen_c_verifier@@Base+0x232c>
   20d10:	ldr	r1, [r7, #16]
   20d14:	add	r2, sp, #276	; 0x114
   20d18:	ldr	r0, [r1, #12]
   20d1c:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   20d20:	ldr	r1, [r7, #16]
   20d24:	ldrh	r2, [r1, #8]
   20d28:	clz	r3, r2
   20d2c:	lsr	r3, r3, #5
   20d30:	str	r3, [sp, #20]
   20d34:	sub	r3, r2, #3
   20d38:	clz	r3, r3
   20d3c:	lsr	r3, r3, #5
   20d40:	str	r3, [sp, #48]	; 0x30
   20d44:	ldr	r3, [sp, #536]	; 0x218
   20d48:	sub	r9, r2, #1
   20d4c:	cmp	r3, #0
   20d50:	cmpeq	r2, #4
   20d54:	clz	r9, r9
   20d58:	moveq	r3, #1
   20d5c:	lsr	r9, r9, #5
   20d60:	movne	r3, #0
   20d64:	beq	212d0 <__flatcc_fb_gen_c_verifier@@Base+0x2cc0>
   20d68:	cmp	r2, #3
   20d6c:	beq	21300 <__flatcc_fb_gen_c_verifier@@Base+0x2cf0>
   20d70:	str	r3, [sp, #24]
   20d74:	mov	r6, r3
   20d78:	str	r3, [sp, #48]	; 0x30
   20d7c:	str	r3, [sp, #40]	; 0x28
   20d80:	b	208ec <__flatcc_fb_gen_c_verifier@@Base+0x22dc>
   20d84:	mov	r3, #0
   20d88:	str	r3, [sp, #24]
   20d8c:	mov	r9, r3
   20d90:	str	r3, [sp, #20]
   20d94:	mov	r6, r3
   20d98:	str	r3, [sp, #48]	; 0x30
   20d9c:	str	r3, [sp, #40]	; 0x28
   20da0:	b	208ec <__flatcc_fb_gen_c_verifier@@Base+0x22dc>
   20da4:	ldr	r3, [sp, #24]
   20da8:	sub	r3, r3, #1
   20dac:	cmp	r3, #10
   20db0:	ldrls	pc, [pc, r3, lsl #2]
   20db4:	b	21200 <__flatcc_fb_gen_c_verifier@@Base+0x2bf0>
   20db8:	andeq	r0, r2, r0, asr #29
   20dbc:	andeq	r1, r2, r4, lsr #5
   20dc0:	andeq	r0, r2, r4, lsl lr
   20dc4:	muleq	r2, r4, r2
   20dc8:	andeq	r0, r2, r4, ror #27
   20dcc:	andeq	r1, r2, r4, lsl #5
   20dd0:	andeq	r1, r2, r4, ror r2
   20dd4:	andeq	r1, r2, r4, ror #4
   20dd8:	andeq	r1, r2, r4, asr r2
   20ddc:	andeq	r1, r2, r4, asr #4
   20de0:	andeq	r1, r2, r4, lsr r2
   20de4:	cmp	r5, #0
   20de8:	beq	21140 <__flatcc_fb_gen_c_verifier@@Base+0x2b30>
   20dec:	ldr	r3, [pc, #1672]	; 2147c <__flatcc_fb_gen_c_verifier@@Base+0x2e6c>
   20df0:	cmp	sl, #0
   20df4:	mov	r6, r5
   20df8:	ldr	r8, [pc, #1664]	; 21480 <__flatcc_fb_gen_c_verifier@@Base+0x2e70>
   20dfc:	str	r3, [sp, #36]	; 0x24
   20e00:	bne	20974 <__flatcc_fb_gen_c_verifier@@Base+0x2364>
   20e04:	ldr	r1, [pc, #1656]	; 21484 <__flatcc_fb_gen_c_verifier@@Base+0x2e74>
   20e08:	mov	r0, r4
   20e0c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20e10:	b	209ac <__flatcc_fb_gen_c_verifier@@Base+0x239c>
   20e14:	ldr	r8, [pc, #1644]	; 21488 <__flatcc_fb_gen_c_verifier@@Base+0x2e78>
   20e18:	ldr	r3, [pc, #1644]	; 2148c <__flatcc_fb_gen_c_verifier@@Base+0x2e7c>
   20e1c:	str	r3, [sp, #36]	; 0x24
   20e20:	subs	r6, r5, #0
   20e24:	bne	2096c <__flatcc_fb_gen_c_verifier@@Base+0x235c>
   20e28:	ldr	r2, [sp, #36]	; 0x24
   20e2c:	ldr	r1, [pc, #1628]	; 21490 <__flatcc_fb_gen_c_verifier@@Base+0x2e80>
   20e30:	mov	r0, r4
   20e34:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20e38:	ldr	r1, [pc, #1620]	; 21494 <__flatcc_fb_gen_c_verifier@@Base+0x2e84>
   20e3c:	mov	r0, r4
   20e40:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20e44:	ldr	r3, [r4, #220]	; 0xdc
   20e48:	ldr	r2, [sp, #48]	; 0x30
   20e4c:	add	r3, r3, #2
   20e50:	cmp	r2, #0
   20e54:	str	r3, [r4, #220]	; 0xdc
   20e58:	beq	20e6c <__flatcc_fb_gen_c_verifier@@Base+0x285c>
   20e5c:	add	r2, sp, #276	; 0x114
   20e60:	ldr	r1, [pc, #1584]	; 21498 <__flatcc_fb_gen_c_verifier@@Base+0x2e88>
   20e64:	mov	r0, r4
   20e68:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20e6c:	ldr	r2, [r4, #208]	; 0xd0
   20e70:	add	r3, sp, #72	; 0x48
   20e74:	ldr	r1, [pc, #1568]	; 2149c <__flatcc_fb_gen_c_verifier@@Base+0x2e8c>
   20e78:	ldr	r2, [r2, #160]	; 0xa0
   20e7c:	mov	r0, r4
   20e80:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20e84:	ldr	r3, [r4, #208]	; 0xd0
   20e88:	ldr	r1, [pc, #1552]	; 214a0 <__flatcc_fb_gen_c_verifier@@Base+0x2e90>
   20e8c:	mov	r0, r4
   20e90:	ldr	r2, [r3, #160]	; 0xa0
   20e94:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20e98:	ldr	r3, [r4, #220]	; 0xdc
   20e9c:	cmp	r3, #0
   20ea0:	beq	2135c <__flatcc_fb_gen_c_verifier@@Base+0x2d4c>
   20ea4:	cmp	r3, #1
   20ea8:	beq	21354 <__flatcc_fb_gen_c_verifier@@Base+0x2d44>
   20eac:	sub	r3, r3, #2
   20eb0:	mov	r5, r6
   20eb4:	str	r3, [r4, #220]	; 0xdc
   20eb8:	mov	r6, #1
   20ebc:	b	209dc <__flatcc_fb_gen_c_verifier@@Base+0x23cc>
   20ec0:	ldr	r3, [pc, #1500]	; 214a4 <__flatcc_fb_gen_c_verifier@@Base+0x2e94>
   20ec4:	ldr	r8, [pc, #1500]	; 214a8 <__flatcc_fb_gen_c_verifier@@Base+0x2e98>
   20ec8:	str	r3, [sp, #36]	; 0x24
   20ecc:	b	20e20 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   20ed0:	ldrd	r2, [r7, #48]	; 0x30
   20ed4:	ldr	r1, [pc, #1488]	; 214ac <__flatcc_fb_gen_c_verifier@@Base+0x2e9c>
   20ed8:	mov	r0, r4
   20edc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20ee0:	ldr	r3, [r4, #220]	; 0xdc
   20ee4:	add	r3, r3, #1
   20ee8:	str	r3, [r4, #220]	; 0xdc
   20eec:	ldrd	r0, [r7, #88]	; 0x58
   20ef0:	ldrsh	ip, [r7, #74]	; 0x4a
   20ef4:	ldrd	r2, [r7, #96]	; 0x60
   20ef8:	strd	r0, [sp]
   20efc:	str	ip, [sp, #8]
   20f00:	ldr	r1, [pc, #1448]	; 214b0 <__flatcc_fb_gen_c_verifier@@Base+0x2ea0>
   20f04:	mov	r0, r4
   20f08:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20f0c:	mov	r3, r8
   20f10:	mov	r2, r4
   20f14:	ldr	r1, [pc, #1432]	; 214b4 <__flatcc_fb_gen_c_verifier@@Base+0x2ea4>
   20f18:	mov	r0, r4
   20f1c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20f20:	ldr	r3, [r4, #220]	; 0xdc
   20f24:	cmp	r3, #0
   20f28:	beq	213e8 <__flatcc_fb_gen_c_verifier@@Base+0x2dd8>
   20f2c:	sub	r3, r3, #1
   20f30:	str	r3, [r4, #220]	; 0xdc
   20f34:	ldr	r1, [pc, #1304]	; 21454 <__flatcc_fb_gen_c_verifier@@Base+0x2e44>
   20f38:	mov	r0, r4
   20f3c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20f40:	cmp	fp, #1
   20f44:	beq	20ad8 <__flatcc_fb_gen_c_verifier@@Base+0x24c8>
   20f48:	cmp	fp, #2
   20f4c:	beq	21318 <__flatcc_fb_gen_c_verifier@@Base+0x2d08>
   20f50:	ldr	r2, [sp, #40]	; 0x28
   20f54:	ldr	r3, [sp, #32]
   20f58:	orr	r3, r3, r2
   20f5c:	ldr	r2, [sp, #20]
   20f60:	orr	r3, r3, fp
   20f64:	orr	r3, r3, r2
   20f68:	orrs	r3, r3, r5
   20f6c:	beq	20f8c <__flatcc_fb_gen_c_verifier@@Base+0x297c>
   20f70:	ldr	r1, [pc, #1344]	; 214b8 <__flatcc_fb_gen_c_verifier@@Base+0x2ea8>
   20f74:	mov	r0, r4
   20f78:	ldrd	r2, [r7, #96]	; 0x60
   20f7c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20f80:	mov	r0, r4
   20f84:	ldr	r1, [pc, #1328]	; 214bc <__flatcc_fb_gen_c_verifier@@Base+0x2eac>
   20f88:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20f8c:	mov	r0, #0
   20f90:	add	sp, sp, #500	; 0x1f4
   20f94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20f98:	ldrd	r2, [r7, #48]	; 0x30
   20f9c:	ldr	r1, [pc, #1308]	; 214c0 <__flatcc_fb_gen_c_verifier@@Base+0x2eb0>
   20fa0:	b	20ed8 <__flatcc_fb_gen_c_verifier@@Base+0x28c8>
   20fa4:	ldrd	r2, [r7, #48]	; 0x30
   20fa8:	ldr	r1, [pc, #1300]	; 214c4 <__flatcc_fb_gen_c_verifier@@Base+0x2eb4>
   20fac:	mov	r0, r4
   20fb0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20fb4:	ldr	r3, [r4, #220]	; 0xdc
   20fb8:	add	r3, r3, #1
   20fbc:	str	r3, [r4, #220]	; 0xdc
   20fc0:	b	20eec <__flatcc_fb_gen_c_verifier@@Base+0x28dc>
   20fc4:	ldrd	r0, [r7, #88]	; 0x58
   20fc8:	ldrh	ip, [r7, #74]	; 0x4a
   20fcc:	ldrd	r2, [r7, #96]	; 0x60
   20fd0:	strd	r0, [sp]
   20fd4:	str	ip, [sp, #8]
   20fd8:	ldr	r1, [pc, #1256]	; 214c8 <__flatcc_fb_gen_c_verifier@@Base+0x2eb8>
   20fdc:	mov	r0, r4
   20fe0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20fe4:	b	20a14 <__flatcc_fb_gen_c_verifier@@Base+0x2404>
   20fe8:	add	r2, sp, #276	; 0x114
   20fec:	ldr	r1, [pc, #1240]	; 214cc <__flatcc_fb_gen_c_verifier@@Base+0x2ebc>
   20ff0:	mov	r0, r4
   20ff4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20ff8:	b	20a88 <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   20ffc:	ldr	r1, [pc, #1228]	; 214d0 <__flatcc_fb_gen_c_verifier@@Base+0x2ec0>
   21000:	mov	r0, r4
   21004:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21008:	b	20a88 <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   2100c:	ldr	r1, [pc, #1216]	; 214d4 <__flatcc_fb_gen_c_verifier@@Base+0x2ec4>
   21010:	mov	r0, r4
   21014:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21018:	ldr	r1, [pc, #1180]	; 214bc <__flatcc_fb_gen_c_verifier@@Base+0x2eac>
   2101c:	mov	r0, r4
   21020:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21024:	ldr	r1, [pc, #1060]	; 21450 <__flatcc_fb_gen_c_verifier@@Base+0x2e40>
   21028:	mov	r0, r4
   2102c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21030:	ldr	r3, [r4, #220]	; 0xdc
   21034:	cmp	r3, #0
   21038:	beq	2107c <__flatcc_fb_gen_c_verifier@@Base+0x2a6c>
   2103c:	sub	r3, r3, #1
   21040:	mov	r0, r4
   21044:	str	r3, [r4, #220]	; 0xdc
   21048:	ldr	r1, [pc, #1028]	; 21454 <__flatcc_fb_gen_c_verifier@@Base+0x2e44>
   2104c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21050:	ldr	r1, [pc, #1152]	; 214d8 <__flatcc_fb_gen_c_verifier@@Base+0x2ec8>
   21054:	mov	r0, r4
   21058:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2105c:	b	20ad0 <__flatcc_fb_gen_c_verifier@@Base+0x24c0>
   21060:	ldr	r3, [sp, #64]	; 0x40
   21064:	ldr	r1, [pc, #1136]	; 214dc <__flatcc_fb_gen_c_verifier@@Base+0x2ecc>
   21068:	clz	r2, r3
   2106c:	mov	r0, r4
   21070:	lsr	r2, r2, #5
   21074:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21078:	b	20a88 <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   2107c:	ldr	r3, [pc, #1116]	; 214e0 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   21080:	ldr	r2, [pc, #1116]	; 214e4 <__flatcc_fb_gen_c_verifier@@Base+0x2ed4>
   21084:	ldr	r1, [pc, #1116]	; 214e8 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   21088:	ldr	r0, [pc, #1116]	; 214ec <__flatcc_fb_gen_c_verifier@@Base+0x2edc>
   2108c:	bl	14038 <__assert_fail@plt>
   21090:	ldr	r3, [sp, #44]	; 0x2c
   21094:	cmp	r3, #0
   21098:	bne	21158 <__flatcc_fb_gen_c_verifier@@Base+0x2b48>
   2109c:	cmp	r5, #0
   210a0:	bne	20a90 <__flatcc_fb_gen_c_verifier@@Base+0x2480>
   210a4:	ldr	r1, [pc, #1092]	; 214f0 <__flatcc_fb_gen_c_verifier@@Base+0x2ee0>
   210a8:	ldr	r2, [pc, #1092]	; 214f4 <__flatcc_fb_gen_c_verifier@@Base+0x2ee4>
   210ac:	mov	r3, #636	; 0x27c
   210b0:	ldr	r0, [r1]
   210b4:	str	r2, [sp]
   210b8:	ldr	r1, [pc, #1080]	; 214f8 <__flatcc_fb_gen_c_verifier@@Base+0x2ee8>
   210bc:	ldr	r2, [pc, #1060]	; 214e8 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   210c0:	bl	13f84 <fprintf@plt>
   210c4:	ldr	r3, [pc, #1044]	; 214e0 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   210c8:	mov	r2, #636	; 0x27c
   210cc:	ldr	r1, [pc, #1044]	; 214e8 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   210d0:	ldr	r0, [pc, #1060]	; 214fc <__flatcc_fb_gen_c_verifier@@Base+0x2eec>
   210d4:	bl	14038 <__assert_fail@plt>
   210d8:	mov	r3, r8
   210dc:	mov	r2, r4
   210e0:	ldr	r1, [pc, #972]	; 214b4 <__flatcc_fb_gen_c_verifier@@Base+0x2ea4>
   210e4:	mov	r0, r4
   210e8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   210ec:	cmp	r6, #0
   210f0:	bne	20a88 <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   210f4:	b	20f20 <__flatcc_fb_gen_c_verifier@@Base+0x2910>
   210f8:	add	r2, sp, #276	; 0x114
   210fc:	ldr	r1, [pc, #1020]	; 21500 <__flatcc_fb_gen_c_verifier@@Base+0x2ef0>
   21100:	mov	r0, r4
   21104:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21108:	b	20a88 <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   2110c:	ldr	r1, [pc, #988]	; 214f0 <__flatcc_fb_gen_c_verifier@@Base+0x2ee0>
   21110:	ldr	r2, [pc, #1004]	; 21504 <__flatcc_fb_gen_c_verifier@@Base+0x2ef4>
   21114:	ldr	r3, [pc, #1004]	; 21508 <__flatcc_fb_gen_c_verifier@@Base+0x2ef8>
   21118:	ldr	r0, [r1]
   2111c:	str	r2, [sp]
   21120:	ldr	r1, [pc, #976]	; 214f8 <__flatcc_fb_gen_c_verifier@@Base+0x2ee8>
   21124:	ldr	r2, [pc, #956]	; 214e8 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   21128:	bl	13f84 <fprintf@plt>
   2112c:	ldr	r3, [pc, #940]	; 214e0 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   21130:	ldr	r2, [pc, #976]	; 21508 <__flatcc_fb_gen_c_verifier@@Base+0x2ef8>
   21134:	ldr	r1, [pc, #940]	; 214e8 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   21138:	ldr	r0, [pc, #956]	; 214fc <__flatcc_fb_gen_c_verifier@@Base+0x2eec>
   2113c:	bl	14038 <__assert_fail@plt>
   21140:	ldr	r3, [pc, #820]	; 2147c <__flatcc_fb_gen_c_verifier@@Base+0x2e6c>
   21144:	ldr	r8, [pc, #820]	; 21480 <__flatcc_fb_gen_c_verifier@@Base+0x2e70>
   21148:	str	r3, [sp, #36]	; 0x24
   2114c:	mov	r6, r5
   21150:	mov	r2, r3
   21154:	b	20e2c <__flatcc_fb_gen_c_verifier@@Base+0x281c>
   21158:	ldr	r1, [pc, #820]	; 21494 <__flatcc_fb_gen_c_verifier@@Base+0x2e84>
   2115c:	mov	r0, r4
   21160:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21164:	ldr	r3, [r4, #220]	; 0xdc
   21168:	add	r2, sp, #276	; 0x114
   2116c:	add	r3, r3, #2
   21170:	str	r3, [r4, #220]	; 0xdc
   21174:	ldr	r1, [pc, #796]	; 21498 <__flatcc_fb_gen_c_verifier@@Base+0x2e88>
   21178:	mov	r0, r4
   2117c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21180:	ldr	r2, [r4, #208]	; 0xd0
   21184:	add	r3, sp, #72	; 0x48
   21188:	ldr	r1, [pc, #780]	; 2149c <__flatcc_fb_gen_c_verifier@@Base+0x2e8c>
   2118c:	ldr	r2, [r2, #160]	; 0xa0
   21190:	mov	r0, r4
   21194:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21198:	ldr	r3, [r4, #208]	; 0xd0
   2119c:	ldr	r1, [pc, #764]	; 214a0 <__flatcc_fb_gen_c_verifier@@Base+0x2e90>
   211a0:	mov	r0, r4
   211a4:	ldr	r2, [r3, #160]	; 0xa0
   211a8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   211ac:	ldr	r3, [r4, #220]	; 0xdc
   211b0:	cmp	r3, #0
   211b4:	beq	213b4 <__flatcc_fb_gen_c_verifier@@Base+0x2da4>
   211b8:	cmp	r3, #1
   211bc:	beq	213ac <__flatcc_fb_gen_c_verifier@@Base+0x2d9c>
   211c0:	ldr	r2, [sp, #68]	; 0x44
   211c4:	sub	r3, r3, #2
   211c8:	cmp	r2, #0
   211cc:	str	r3, [r4, #220]	; 0xdc
   211d0:	ldrd	r0, [r7, #96]	; 0x60
   211d4:	ldr	r2, [r7, #112]	; 0x70
   211d8:	add	r3, sp, #276	; 0x114
   211dc:	beq	212b4 <__flatcc_fb_gen_c_verifier@@Base+0x2ca4>
   211e0:	strd	r0, [sp]
   211e4:	str	r3, [sp, #12]
   211e8:	str	r3, [sp, #8]
   211ec:	ldr	r1, [pc, #792]	; 2150c <__flatcc_fb_gen_c_verifier@@Base+0x2efc>
   211f0:	mov	r3, #0
   211f4:	mov	r0, r4
   211f8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   211fc:	b	20a88 <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   21200:	ldr	r1, [pc, #744]	; 214f0 <__flatcc_fb_gen_c_verifier@@Base+0x2ee0>
   21204:	ldr	r2, [pc, #772]	; 21510 <__flatcc_fb_gen_c_verifier@@Base+0x2f00>
   21208:	mov	r3, #96	; 0x60
   2120c:	ldr	r0, [r1]
   21210:	str	r2, [sp]
   21214:	ldr	r1, [pc, #732]	; 214f8 <__flatcc_fb_gen_c_verifier@@Base+0x2ee8>
   21218:	ldr	r2, [pc, #756]	; 21514 <__flatcc_fb_gen_c_verifier@@Base+0x2f04>
   2121c:	bl	13f84 <fprintf@plt>
   21220:	ldr	r3, [pc, #752]	; 21518 <__flatcc_fb_gen_c_verifier@@Base+0x2f08>
   21224:	mov	r2, #96	; 0x60
   21228:	ldr	r1, [pc, #740]	; 21514 <__flatcc_fb_gen_c_verifier@@Base+0x2f04>
   2122c:	ldr	r0, [pc, #712]	; 214fc <__flatcc_fb_gen_c_verifier@@Base+0x2eec>
   21230:	bl	14038 <__assert_fail@plt>
   21234:	ldr	r3, [pc, #736]	; 2151c <__flatcc_fb_gen_c_verifier@@Base+0x2f0c>
   21238:	str	r3, [sp, #36]	; 0x24
   2123c:	mov	r8, r3
   21240:	b	20e20 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   21244:	ldr	r3, [pc, #724]	; 21520 <__flatcc_fb_gen_c_verifier@@Base+0x2f10>
   21248:	str	r3, [sp, #36]	; 0x24
   2124c:	mov	r8, r3
   21250:	b	20e20 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   21254:	ldr	r3, [pc, #712]	; 21524 <__flatcc_fb_gen_c_verifier@@Base+0x2f14>
   21258:	ldr	r8, [pc, #712]	; 21528 <__flatcc_fb_gen_c_verifier@@Base+0x2f18>
   2125c:	str	r3, [sp, #36]	; 0x24
   21260:	b	20e20 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   21264:	ldr	r3, [pc, #704]	; 2152c <__flatcc_fb_gen_c_verifier@@Base+0x2f1c>
   21268:	ldr	r8, [pc, #704]	; 21530 <__flatcc_fb_gen_c_verifier@@Base+0x2f20>
   2126c:	str	r3, [sp, #36]	; 0x24
   21270:	b	20e20 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   21274:	ldr	r3, [pc, #696]	; 21534 <__flatcc_fb_gen_c_verifier@@Base+0x2f24>
   21278:	ldr	r8, [pc, #696]	; 21538 <__flatcc_fb_gen_c_verifier@@Base+0x2f28>
   2127c:	str	r3, [sp, #36]	; 0x24
   21280:	b	20e20 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   21284:	ldr	r3, [pc, #688]	; 2153c <__flatcc_fb_gen_c_verifier@@Base+0x2f2c>
   21288:	ldr	r8, [pc, #688]	; 21540 <__flatcc_fb_gen_c_verifier@@Base+0x2f30>
   2128c:	str	r3, [sp, #36]	; 0x24
   21290:	b	20e20 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   21294:	ldr	r3, [pc, #480]	; 2147c <__flatcc_fb_gen_c_verifier@@Base+0x2e6c>
   21298:	ldr	r8, [pc, #676]	; 21544 <__flatcc_fb_gen_c_verifier@@Base+0x2f34>
   2129c:	str	r3, [sp, #36]	; 0x24
   212a0:	b	20e20 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   212a4:	ldr	r3, [pc, #668]	; 21548 <__flatcc_fb_gen_c_verifier@@Base+0x2f38>
   212a8:	ldr	r8, [pc, #668]	; 2154c <__flatcc_fb_gen_c_verifier@@Base+0x2f3c>
   212ac:	str	r3, [sp, #36]	; 0x24
   212b0:	b	20e20 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   212b4:	strd	r0, [sp]
   212b8:	str	r3, [sp, #8]
   212bc:	ldr	r1, [pc, #652]	; 21550 <__flatcc_fb_gen_c_verifier@@Base+0x2f40>
   212c0:	mov	r3, #0
   212c4:	mov	r0, r4
   212c8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   212cc:	b	20a88 <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   212d0:	mov	r2, #0
   212d4:	mov	r6, r2
   212d8:	str	r2, [sp, #40]	; 0x28
   212dc:	str	r2, [sp, #24]
   212e0:	str	r2, [sp, #32]
   212e4:	str	r2, [sp, #64]	; 0x40
   212e8:	mov	fp, r2
   212ec:	and	r2, r5, #1
   212f0:	str	r2, [sp, #44]	; 0x2c
   212f4:	mov	r2, #1
   212f8:	str	r2, [sp, #56]	; 0x38
   212fc:	b	20cbc <__flatcc_fb_gen_c_verifier@@Base+0x26ac>
   21300:	ldr	r2, [r1, #40]	; 0x28
   21304:	mov	r6, #1
   21308:	str	r2, [sp, #24]
   2130c:	str	r3, [sp, #40]	; 0x28
   21310:	str	r6, [sp, #48]	; 0x30
   21314:	b	208ec <__flatcc_fb_gen_c_verifier@@Base+0x22dc>
   21318:	ldr	r1, [pc, #564]	; 21554 <__flatcc_fb_gen_c_verifier@@Base+0x2f44>
   2131c:	mov	r0, r4
   21320:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21324:	ldr	r1, [pc, #556]	; 21558 <__flatcc_fb_gen_c_verifier@@Base+0x2f48>
   21328:	mov	r0, r4
   2132c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21330:	ldr	r3, [r4, #220]	; 0xdc
   21334:	cmp	r3, #0
   21338:	beq	21398 <__flatcc_fb_gen_c_verifier@@Base+0x2d88>
   2133c:	sub	r3, r3, #1
   21340:	str	r3, [r4, #220]	; 0xdc
   21344:	ldr	r1, [pc, #528]	; 2155c <__flatcc_fb_gen_c_verifier@@Base+0x2f4c>
   21348:	mov	r0, r4
   2134c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21350:	b	20f50 <__flatcc_fb_gen_c_verifier@@Base+0x2940>
   21354:	mov	r3, #0
   21358:	str	r3, [r4, #220]	; 0xdc
   2135c:	ldr	r3, [pc, #380]	; 214e0 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   21360:	ldr	r2, [pc, #504]	; 21560 <__flatcc_fb_gen_c_verifier@@Base+0x2f50>
   21364:	ldr	r1, [pc, #380]	; 214e8 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   21368:	ldr	r0, [pc, #380]	; 214ec <__flatcc_fb_gen_c_verifier@@Base+0x2edc>
   2136c:	bl	14038 <__assert_fail@plt>
   21370:	ldr	r3, [pc, #360]	; 214e0 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   21374:	ldr	r2, [pc, #488]	; 21564 <__flatcc_fb_gen_c_verifier@@Base+0x2f54>
   21378:	ldr	r1, [pc, #360]	; 214e8 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   2137c:	ldr	r0, [pc, #360]	; 214ec <__flatcc_fb_gen_c_verifier@@Base+0x2edc>
   21380:	bl	14038 <__assert_fail@plt>
   21384:	ldr	r3, [pc, #340]	; 214e0 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   21388:	ldr	r2, [pc, #472]	; 21568 <__flatcc_fb_gen_c_verifier@@Base+0x2f58>
   2138c:	ldr	r1, [pc, #340]	; 214e8 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   21390:	ldr	r0, [pc, #340]	; 214ec <__flatcc_fb_gen_c_verifier@@Base+0x2edc>
   21394:	bl	14038 <__assert_fail@plt>
   21398:	ldr	r3, [pc, #320]	; 214e0 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   2139c:	ldr	r2, [pc, #456]	; 2156c <__flatcc_fb_gen_c_verifier@@Base+0x2f5c>
   213a0:	ldr	r1, [pc, #320]	; 214e8 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   213a4:	ldr	r0, [pc, #320]	; 214ec <__flatcc_fb_gen_c_verifier@@Base+0x2edc>
   213a8:	bl	14038 <__assert_fail@plt>
   213ac:	ldr	r3, [sp, #56]	; 0x38
   213b0:	str	r3, [r4, #220]	; 0xdc
   213b4:	ldr	r3, [pc, #292]	; 214e0 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   213b8:	ldr	r2, [pc, #432]	; 21570 <__flatcc_fb_gen_c_verifier@@Base+0x2f60>
   213bc:	ldr	r1, [pc, #292]	; 214e8 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   213c0:	ldr	r0, [pc, #292]	; 214ec <__flatcc_fb_gen_c_verifier@@Base+0x2edc>
   213c4:	bl	14038 <__assert_fail@plt>
   213c8:	ldr	r3, [sp, #44]	; 0x2c
   213cc:	str	r3, [sp, #56]	; 0x38
   213d0:	mov	r6, r3
   213d4:	str	r3, [sp, #68]	; 0x44
   213d8:	str	r3, [sp, #60]	; 0x3c
   213dc:	mov	r3, #1
   213e0:	str	r3, [sp, #44]	; 0x2c
   213e4:	b	20934 <__flatcc_fb_gen_c_verifier@@Base+0x2324>
   213e8:	ldr	r3, [pc, #240]	; 214e0 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   213ec:	ldr	r2, [pc, #384]	; 21574 <__flatcc_fb_gen_c_verifier@@Base+0x2f64>
   213f0:	ldr	r1, [pc, #240]	; 214e8 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   213f4:	ldr	r0, [pc, #240]	; 214ec <__flatcc_fb_gen_c_verifier@@Base+0x2edc>
   213f8:	bl	14038 <__assert_fail@plt>
   213fc:	ldr	r1, [pc, #236]	; 214f0 <__flatcc_fb_gen_c_verifier@@Base+0x2ee0>
   21400:	ldr	r2, [pc, #368]	; 21578 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   21404:	ldr	r3, [pc, #368]	; 2157c <__flatcc_fb_gen_c_verifier@@Base+0x2f6c>
   21408:	ldr	r0, [r1]
   2140c:	str	r2, [sp]
   21410:	ldr	r1, [pc, #224]	; 214f8 <__flatcc_fb_gen_c_verifier@@Base+0x2ee8>
   21414:	ldr	r2, [pc, #204]	; 214e8 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   21418:	bl	13f84 <fprintf@plt>
   2141c:	ldr	r3, [pc, #188]	; 214e0 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   21420:	ldr	r2, [pc, #340]	; 2157c <__flatcc_fb_gen_c_verifier@@Base+0x2f6c>
   21424:	ldr	r1, [pc, #188]	; 214e8 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   21428:	ldr	r0, [pc, #204]	; 214fc <__flatcc_fb_gen_c_verifier@@Base+0x2eec>
   2142c:	bl	14038 <__assert_fail@plt>
   21430:	andeq	r8, r0, r0, lsl #5
   21434:	ldrdeq	r5, [r5], -ip
   21438:	andeq	r5, r5, ip, ror #3
   2143c:	andeq	r5, r5, r0, asr #4
   21440:	andeq	r5, r5, ip, ror r2
   21444:	andeq	r5, r5, r4, lsr r3
   21448:	andeq	r5, r5, r0, lsr r7
   2144c:	muleq	r5, r4, r7
   21450:	muleq	r5, r4, r9
   21454:	strdeq	r4, [r5], -r8
   21458:			; <UNDEFINED> instruction: 0x00055ab4
   2145c:	andeq	r5, r5, r0, asr r1
   21460:	andeq	r5, r5, r8, ror #2
   21464:	andeq	r5, r5, ip, ror r3
   21468:	strdeq	r5, [r5], -ip
   2146c:	andeq	r5, r5, r8, lsr r4
   21470:	andeq	r5, r5, ip, asr #8
   21474:	andeq	r5, r5, r4, lsr #9
   21478:	andeq	r5, r5, ip, lsl r1
   2147c:	andeq	r1, r4, r0, ror lr
   21480:			; <UNDEFINED> instruction: 0x0005a5bc
   21484:	andeq	r5, r5, ip, lsr #3
   21488:	ldrdeq	r2, [r4], -r8
   2148c:	andeq	r1, r4, r4, ror #28
   21490:	andeq	r5, r5, ip, lsl #5
   21494:	muleq	r5, r8, r2
   21498:	ldrdeq	r5, [r5], -ip
   2149c:	strdeq	r5, [r5], -r0
   214a0:	andeq	r5, r5, r0, lsl r3
   214a4:	andeq	r1, r4, ip, asr #28
   214a8:	andeq	r2, r4, r8, asr #5
   214ac:	ldrdeq	r5, [r5], -r0
   214b0:	andeq	r5, r5, ip, asr #11
   214b4:	andeq	r5, r5, ip, lsl r6
   214b8:	andeq	r5, r5, ip, lsr #20
   214bc:	andeq	r5, r5, r4, lsl #19
   214c0:	andeq	r5, r5, r4, lsl r5
   214c4:	andeq	r5, r5, r8, asr r5
   214c8:	andeq	r5, r5, ip, lsr #7
   214cc:	andeq	r5, r5, ip, lsr r6
   214d0:	andeq	r5, r5, r4, ror r6
   214d4:	andeq	r5, r5, ip, lsr #18
   214d8:	andeq	r5, r5, r0, lsl #21
   214dc:			; <UNDEFINED> instruction: 0x000556b0
   214e0:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   214e4:	andeq	r0, r0, r7, lsl #5
   214e8:	muleq	r5, r4, r7
   214ec:	andeq	r4, r5, ip, ror #15
   214f0:	andeq	sp, r6, r8, lsr #1
   214f4:	strdeq	r5, [r5], -r8
   214f8:			; <UNDEFINED> instruction: 0x00041fbc
   214fc:	andeq	sl, r4, r4, asr sp
   21500:	andeq	r5, r5, r0, lsl #14
   21504:	muleq	r5, ip, r5
   21508:	andeq	r0, r0, lr, asr #4
   2150c:	strdeq	r5, [r5], -r0
   21510:	andeq	r1, r4, r8, asr #31
   21514:	andeq	r1, r4, r0, ror pc
   21518:	andeq	r4, r5, ip, lsl #12
   2151c:	andeq	r1, r4, r0, lsr #29
   21520:	andeq	r1, r4, r8, lsr #29
   21524:	muleq	r4, r8, lr
   21528:	andeq	r2, r4, r0, lsl #6
   2152c:	muleq	r4, r0, lr
   21530:	strdeq	r2, [r4], -r8
   21534:	andeq	r1, r4, r8, lsl #29
   21538:	strdeq	r2, [r4], -r0
   2153c:	andeq	r1, r4, r0, lsl #29
   21540:	andeq	r2, r4, r8, ror #5
   21544:	andeq	r2, r4, r0, ror #5
   21548:	andeq	r1, r4, r8, asr lr
   2154c:	ldrdeq	r2, [r4], -r0
   21550:	andeq	r5, r5, r4, lsl #17
   21554:	ldrdeq	r5, [r5], -r0
   21558:	andeq	r5, r5, r8, ror #19
   2155c:	andeq	r5, r5, r8, lsl sl
   21560:	andeq	r0, r0, fp, lsl r2
   21564:	andeq	r0, r0, pc, lsr #4
   21568:	andeq	r0, r0, sl, ror #3
   2156c:	muleq	r0, r5, r2
   21570:	andeq	r0, r0, r3, ror r2
   21574:	andeq	r0, r0, sl, asr r2
   21578:	andeq	r5, r5, r0, ror #1
   2157c:	ldrdeq	r0, [r0], -r2
   21580:	push	{r4, r5, r6, r7, lr}
   21584:	sub	sp, sp, #12
   21588:	mov	r4, r0
   2158c:	mov	r5, r1
   21590:	mov	r6, r2
   21594:	ldr	r1, [pc, #128]	; 2161c <__flatcc_fb_gen_c_verifier@@Base+0x300c>
   21598:	ldr	r2, [sp, #32]
   2159c:	mov	r7, r3
   215a0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   215a4:	mov	r0, r4
   215a8:	ldr	r1, [pc, #112]	; 21620 <__flatcc_fb_gen_c_verifier@@Base+0x3010>
   215ac:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   215b0:	ldr	r2, [r4, #220]	; 0xdc
   215b4:	mov	r3, r6
   215b8:	add	r2, r2, #1
   215bc:	str	r7, [sp]
   215c0:	add	r1, r5, #8
   215c4:	str	r2, [r4, #220]	; 0xdc
   215c8:	mov	r0, r4
   215cc:	add	r2, r5, #12
   215d0:	bl	2081c <__flatcc_fb_gen_c_verifier@@Base+0x220c>
   215d4:	ldr	r3, [r4, #220]	; 0xdc
   215d8:	cmp	r3, #0
   215dc:	beq	21608 <__flatcc_fb_gen_c_verifier@@Base+0x2ff8>
   215e0:	sub	r3, r3, #1
   215e4:	str	r3, [r4, #220]	; 0xdc
   215e8:	ldr	r1, [pc, #52]	; 21624 <__flatcc_fb_gen_c_verifier@@Base+0x3014>
   215ec:	mov	r0, r4
   215f0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   215f4:	ldr	r3, [r4, #220]	; 0xdc
   215f8:	add	r3, r3, #1
   215fc:	str	r3, [r4, #220]	; 0xdc
   21600:	add	sp, sp, #12
   21604:	pop	{r4, r5, r6, r7, pc}
   21608:	ldr	r3, [pc, #24]	; 21628 <__flatcc_fb_gen_c_verifier@@Base+0x3018>
   2160c:	ldr	r2, [pc, #24]	; 2162c <__flatcc_fb_gen_c_verifier@@Base+0x301c>
   21610:	ldr	r1, [pc, #24]	; 21630 <__flatcc_fb_gen_c_verifier@@Base+0x3020>
   21614:	ldr	r0, [pc, #24]	; 21634 <__flatcc_fb_gen_c_verifier@@Base+0x3024>
   21618:	bl	14038 <__assert_fail@plt>
   2161c:	andeq	r5, r5, r0, ror #21
   21620:	andeq	r5, r5, r4, lsr #22
   21624:	andeq	r4, r5, ip, lsl sp
   21628:	andeq	r4, r5, r0, lsr #12
   2162c:	andeq	r0, r0, r3, lsr #5
   21630:	muleq	r5, r4, r7
   21634:	andeq	r4, r5, ip, ror #15
   21638:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2163c:	subs	r5, r0, #0
   21640:	beq	217a8 <__flatcc_fb_gen_c_verifier@@Base+0x3198>
   21644:	mov	r0, #0
   21648:	mov	r6, r0
   2164c:	mov	r4, r5
   21650:	b	21664 <__flatcc_fb_gen_c_verifier@@Base+0x3054>
   21654:	add	r6, r6, #1
   21658:	ldr	r4, [r4]
   2165c:	cmp	r4, #0
   21660:	beq	216a8 <__flatcc_fb_gen_c_verifier@@Base+0x3098>
   21664:	ldrh	r3, [r4, #72]	; 0x48
   21668:	tst	r3, #4
   2166c:	bne	21658 <__flatcc_fb_gen_c_verifier@@Base+0x3048>
   21670:	ldrh	r3, [r4, #24]
   21674:	sub	r3, r3, #14
   21678:	cmp	r3, #1
   2167c:	bhi	21654 <__flatcc_fb_gen_c_verifier@@Base+0x3044>
   21680:	ldr	r3, [r4, #16]
   21684:	ldrh	r3, [r3, #8]
   21688:	cmp	r3, #4
   2168c:	bne	21654 <__flatcc_fb_gen_c_verifier@@Base+0x3044>
   21690:	ldr	r3, [r4, #4]
   21694:	add	r6, r6, #1
   21698:	ldr	r3, [r3, #4]
   2169c:	add	r3, r3, #6
   216a0:	add	r0, r0, r3
   216a4:	b	21654 <__flatcc_fb_gen_c_verifier@@Base+0x3044>
   216a8:	cmp	r6, #0
   216ac:	str	r6, [r1]
   216b0:	beq	2179c <__flatcc_fb_gen_c_verifier@@Base+0x318c>
   216b4:	lsl	r7, r6, #4
   216b8:	add	r0, r0, r7
   216bc:	bl	13f3c <malloc@plt>
   216c0:	subs	r8, r0, #0
   216c4:	beq	2179c <__flatcc_fb_gen_c_verifier@@Base+0x318c>
   216c8:	ldr	r9, [pc, #228]	; 217b4 <__flatcc_fb_gen_c_verifier@@Base+0x31a4>
   216cc:	add	r7, r8, r7
   216d0:	mov	fp, r8
   216d4:	mov	sl, #1
   216d8:	b	216ec <__flatcc_fb_gen_c_verifier@@Base+0x30dc>
   216dc:	mov	fp, ip
   216e0:	ldr	r5, [r5]
   216e4:	cmp	r5, #0
   216e8:	beq	21780 <__flatcc_fb_gen_c_verifier@@Base+0x3170>
   216ec:	ldrh	r3, [r5, #72]	; 0x48
   216f0:	add	ip, fp, #16
   216f4:	ands	r3, r3, #4
   216f8:	bne	216e0 <__flatcc_fb_gen_c_verifier@@Base+0x30d0>
   216fc:	ldr	r2, [r5, #4]
   21700:	ldrh	r0, [r5, #24]
   21704:	ldm	r2, {r1, r2}
   21708:	sub	r0, r0, #14
   2170c:	cmp	r0, #1
   21710:	stm	fp, {r1, r2, r5}
   21714:	str	r3, [fp, #12]
   21718:	bhi	216dc <__flatcc_fb_gen_c_verifier@@Base+0x30cc>
   2171c:	ldr	r3, [r5, #16]
   21720:	ldrh	r3, [r3, #8]
   21724:	cmp	r3, #4
   21728:	bne	216dc <__flatcc_fb_gen_c_verifier@@Base+0x30cc>
   2172c:	add	r3, r2, #5
   21730:	str	r4, [r5, #112]	; 0x70
   21734:	mov	r0, r7
   21738:	str	r7, [fp, #16]
   2173c:	str	r3, [fp, #20]
   21740:	bl	13edc <memcpy@plt>
   21744:	ldr	r2, [r5, #4]
   21748:	ldrh	r3, [r9, #4]
   2174c:	ldr	r0, [r9]
   21750:	ldr	r1, [r2, #4]
   21754:	add	r4, r4, #1
   21758:	add	r2, r7, r1
   2175c:	str	r0, [r7, r1]
   21760:	strh	r3, [r2, #4]
   21764:	str	r5, [fp, #24]
   21768:	ldr	r5, [r5]
   2176c:	str	sl, [fp, #28]
   21770:	cmp	r5, #0
   21774:	add	r7, r2, #6
   21778:	add	fp, fp, #32
   2177c:	bne	216ec <__flatcc_fb_gen_c_verifier@@Base+0x30dc>
   21780:	mov	r1, r6
   21784:	ldr	r3, [pc, #44]	; 217b8 <__flatcc_fb_gen_c_verifier@@Base+0x31a8>
   21788:	mov	r2, #16
   2178c:	mov	r0, r8
   21790:	bl	14008 <qsort@plt>
   21794:	mov	r0, r8
   21798:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2179c:	mov	r8, #0
   217a0:	mov	r0, r8
   217a4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   217a8:	mov	r8, r5
   217ac:	str	r5, [r1]
   217b0:	b	21794 <__flatcc_fb_gen_c_verifier@@Base+0x3184>
   217b4:	strdeq	r8, [r5], -r4
   217b8:	andeq	r0, r2, r4, lsr r0
   217bc:	ldrh	r2, [r1, #8]
   217c0:	push	{r4, r5, lr}
   217c4:	sub	sp, sp, #268	; 0x10c
   217c8:	sub	r2, r2, #3
   217cc:	mov	r3, #0
   217d0:	cmp	r2, #1
   217d4:	str	r3, [sp, #20]
   217d8:	str	r3, [sp, #12]
   217dc:	str	r3, [sp, #16]
   217e0:	str	r3, [sp, #24]
   217e4:	str	r3, [sp, #28]
   217e8:	str	r3, [sp, #32]
   217ec:	str	r3, [sp, #36]	; 0x24
   217f0:	str	r3, [sp, #40]	; 0x28
   217f4:	bhi	21a08 <__flatcc_fb_gen_c_verifier@@Base+0x33f8>
   217f8:	mov	r5, r1
   217fc:	mov	r4, r0
   21800:	add	r1, sp, #12
   21804:	ldr	r0, [r5, #20]
   21808:	bl	21638 <__flatcc_fb_gen_c_verifier@@Base+0x3028>
   2180c:	cmp	r0, #0
   21810:	str	r0, [sp, #16]
   21814:	beq	219b4 <__flatcc_fb_gen_c_verifier@@Base+0x33a4>
   21818:	ldr	r2, [pc, #528]	; 21a30 <__flatcc_fb_gen_c_verifier@@Base+0x3420>
   2181c:	ldr	r1, [pc, #528]	; 21a34 <__flatcc_fb_gen_c_verifier@@Base+0x3424>
   21820:	mov	r3, #2
   21824:	str	r2, [sp, #20]
   21828:	str	r1, [sp, #24]
   2182c:	mov	r2, #220	; 0xdc
   21830:	mov	r1, #0
   21834:	add	r0, sp, #44	; 0x2c
   21838:	str	r3, [sp, #32]
   2183c:	str	r5, [sp, #28]
   21840:	bl	13f9c <memset@plt>
   21844:	add	r2, sp, #44	; 0x2c
   21848:	mov	r1, r5
   2184c:	ldr	r0, [r5, #12]
   21850:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   21854:	add	r2, sp, #44	; 0x2c
   21858:	ldr	r1, [pc, #472]	; 21a38 <__flatcc_fb_gen_c_verifier@@Base+0x3428>
   2185c:	mov	r0, r4
   21860:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21864:	ldr	r3, [r4, #220]	; 0xdc
   21868:	ldr	r1, [pc, #460]	; 21a3c <__flatcc_fb_gen_c_verifier@@Base+0x342c>
   2186c:	add	r3, r3, #2
   21870:	str	r3, [r4, #220]	; 0xdc
   21874:	mov	r0, r4
   21878:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2187c:	ldr	r3, [r4, #220]	; 0xdc
   21880:	cmp	r3, #0
   21884:	beq	219f4 <__flatcc_fb_gen_c_verifier@@Base+0x33e4>
   21888:	cmp	r3, #1
   2188c:	moveq	r3, #0
   21890:	streq	r3, [r4, #220]	; 0xdc
   21894:	beq	219f4 <__flatcc_fb_gen_c_verifier@@Base+0x33e4>
   21898:	sub	r3, r3, #2
   2189c:	str	r3, [r4, #220]	; 0xdc
   218a0:	ldr	r1, [pc, #408]	; 21a40 <__flatcc_fb_gen_c_verifier@@Base+0x3430>
   218a4:	mov	r0, r4
   218a8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   218ac:	ldr	r3, [r4, #220]	; 0xdc
   218b0:	ldr	r2, [sp, #12]
   218b4:	add	r3, r3, #1
   218b8:	cmp	r2, #0
   218bc:	str	r3, [r4, #220]	; 0xdc
   218c0:	beq	21970 <__flatcc_fb_gen_c_verifier@@Base+0x3360>
   218c4:	ldr	r1, [pc, #376]	; 21a44 <__flatcc_fb_gen_c_verifier@@Base+0x3434>
   218c8:	mov	r0, r4
   218cc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   218d0:	ldr	r1, [pc, #368]	; 21a48 <__flatcc_fb_gen_c_verifier@@Base+0x3438>
   218d4:	mov	r0, r4
   218d8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   218dc:	ldr	r1, [pc, #360]	; 21a4c <__flatcc_fb_gen_c_verifier@@Base+0x343c>
   218e0:	mov	r0, r4
   218e4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   218e8:	ldr	r1, [pc, #352]	; 21a50 <__flatcc_fb_gen_c_verifier@@Base+0x3440>
   218ec:	mov	r0, r4
   218f0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   218f4:	ldr	r1, [pc, #344]	; 21a54 <__flatcc_fb_gen_c_verifier@@Base+0x3444>
   218f8:	mov	r0, r4
   218fc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21900:	ldr	r3, [sp, #12]
   21904:	mov	r2, #0
   21908:	sub	r3, r3, #1
   2190c:	add	r1, sp, #16
   21910:	str	r2, [sp]
   21914:	mov	r0, r4
   21918:	bl	1ee7c <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   2191c:	ldr	r1, [pc, #308]	; 21a58 <__flatcc_fb_gen_c_verifier@@Base+0x3448>
   21920:	mov	r0, r4
   21924:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21928:	ldr	r3, [r4, #220]	; 0xdc
   2192c:	cmp	r3, #0
   21930:	beq	21a1c <__flatcc_fb_gen_c_verifier@@Base+0x340c>
   21934:	sub	r3, r3, #1
   21938:	str	r3, [r4, #220]	; 0xdc
   2193c:	ldr	r1, [pc, #280]	; 21a5c <__flatcc_fb_gen_c_verifier@@Base+0x344c>
   21940:	mov	r0, r4
   21944:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21948:	mov	r0, r4
   2194c:	ldr	r1, [pc, #252]	; 21a50 <__flatcc_fb_gen_c_verifier@@Base+0x3440>
   21950:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21954:	ldr	r0, [sp, #16]
   21958:	cmp	r0, #0
   2195c:	beq	21964 <__flatcc_fb_gen_c_verifier@@Base+0x3354>
   21960:	bl	13ed0 <free@plt>
   21964:	mov	r0, #0
   21968:	add	sp, sp, #268	; 0x10c
   2196c:	pop	{r4, r5, pc}
   21970:	ldr	r1, [pc, #232]	; 21a60 <__flatcc_fb_gen_c_verifier@@Base+0x3450>
   21974:	mov	r0, r4
   21978:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2197c:	ldr	r1, [pc, #224]	; 21a64 <__flatcc_fb_gen_c_verifier@@Base+0x3454>
   21980:	mov	r0, r4
   21984:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21988:	ldr	r1, [pc, #216]	; 21a68 <__flatcc_fb_gen_c_verifier@@Base+0x3458>
   2198c:	mov	r0, r4
   21990:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21994:	ldr	r3, [r4, #220]	; 0xdc
   21998:	cmp	r3, #0
   2199c:	bne	21934 <__flatcc_fb_gen_c_verifier@@Base+0x3324>
   219a0:	ldr	r3, [pc, #196]	; 21a6c <__flatcc_fb_gen_c_verifier@@Base+0x345c>
   219a4:	ldr	r2, [pc, #196]	; 21a70 <__flatcc_fb_gen_c_verifier@@Base+0x3460>
   219a8:	ldr	r1, [pc, #196]	; 21a74 <__flatcc_fb_gen_c_verifier@@Base+0x3464>
   219ac:	ldr	r0, [pc, #196]	; 21a78 <__flatcc_fb_gen_c_verifier@@Base+0x3468>
   219b0:	bl	14038 <__assert_fail@plt>
   219b4:	ldr	r3, [sp, #12]
   219b8:	cmp	r3, #0
   219bc:	ble	21818 <__flatcc_fb_gen_c_verifier@@Base+0x3208>
   219c0:	ldr	r1, [pc, #180]	; 21a7c <__flatcc_fb_gen_c_verifier@@Base+0x346c>
   219c4:	ldr	r2, [pc, #180]	; 21a80 <__flatcc_fb_gen_c_verifier@@Base+0x3470>
   219c8:	ldr	r3, [pc, #180]	; 21a84 <__flatcc_fb_gen_c_verifier@@Base+0x3474>
   219cc:	ldr	r0, [r1]
   219d0:	str	r2, [sp]
   219d4:	ldr	r1, [pc, #172]	; 21a88 <__flatcc_fb_gen_c_verifier@@Base+0x3478>
   219d8:	ldr	r2, [pc, #148]	; 21a74 <__flatcc_fb_gen_c_verifier@@Base+0x3464>
   219dc:	bl	13f84 <fprintf@plt>
   219e0:	ldr	r3, [pc, #132]	; 21a6c <__flatcc_fb_gen_c_verifier@@Base+0x345c>
   219e4:	ldr	r2, [pc, #152]	; 21a84 <__flatcc_fb_gen_c_verifier@@Base+0x3474>
   219e8:	ldr	r1, [pc, #132]	; 21a74 <__flatcc_fb_gen_c_verifier@@Base+0x3464>
   219ec:	ldr	r0, [pc, #152]	; 21a8c <__flatcc_fb_gen_c_verifier@@Base+0x347c>
   219f0:	bl	14038 <__assert_fail@plt>
   219f4:	ldr	r3, [pc, #112]	; 21a6c <__flatcc_fb_gen_c_verifier@@Base+0x345c>
   219f8:	ldr	r2, [pc, #144]	; 21a90 <__flatcc_fb_gen_c_verifier@@Base+0x3480>
   219fc:	ldr	r1, [pc, #112]	; 21a74 <__flatcc_fb_gen_c_verifier@@Base+0x3464>
   21a00:	ldr	r0, [pc, #112]	; 21a78 <__flatcc_fb_gen_c_verifier@@Base+0x3468>
   21a04:	bl	14038 <__assert_fail@plt>
   21a08:	ldr	r3, [pc, #92]	; 21a6c <__flatcc_fb_gen_c_verifier@@Base+0x345c>
   21a0c:	ldr	r2, [pc, #128]	; 21a94 <__flatcc_fb_gen_c_verifier@@Base+0x3484>
   21a10:	ldr	r1, [pc, #92]	; 21a74 <__flatcc_fb_gen_c_verifier@@Base+0x3464>
   21a14:	ldr	r0, [pc, #124]	; 21a98 <__flatcc_fb_gen_c_verifier@@Base+0x3488>
   21a18:	bl	14038 <__assert_fail@plt>
   21a1c:	ldr	r3, [pc, #72]	; 21a6c <__flatcc_fb_gen_c_verifier@@Base+0x345c>
   21a20:	ldr	r2, [pc, #116]	; 21a9c <__flatcc_fb_gen_c_verifier@@Base+0x348c>
   21a24:	ldr	r1, [pc, #72]	; 21a74 <__flatcc_fb_gen_c_verifier@@Base+0x3464>
   21a28:	ldr	r0, [pc, #72]	; 21a78 <__flatcc_fb_gen_c_verifier@@Base+0x3468>
   21a2c:	bl	14038 <__assert_fail@plt>
   21a30:	andeq	r0, r2, r8, asr #11
   21a34:	andeq	r1, r2, r0, lsr #21
   21a38:	andeq	r5, r5, r8, lsr fp
   21a3c:	muleq	r5, ip, fp
   21a40:	andeq	r7, r5, r0, lsl r4
   21a44:	andeq	r4, r5, r0, lsr pc
   21a48:	andeq	r4, r5, r0, asr pc
   21a4c:	andeq	r4, r5, r4, ror #30
   21a50:	andeq	fp, r4, ip, lsr #24
   21a54:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   21a58:	andeq	r4, r5, r0, ror sp
   21a5c:	strdeq	r4, [r5], -r8
   21a60:	ldrdeq	r5, [r5], -r0
   21a64:	andeq	r5, r5, ip, ror #23
   21a68:	andeq	r4, r5, r0, lsl pc
   21a6c:	andeq	r4, r5, r0, lsr r6
   21a70:	strdeq	r0, [r0], -r5
   21a74:	muleq	r5, r4, r7
   21a78:	andeq	r4, r5, ip, ror #15
   21a7c:	andeq	sp, r6, r8, lsr #1
   21a80:	andeq	r4, r5, ip, ror #28
   21a84:	andeq	r0, r0, r1, ror #9
   21a88:			; <UNDEFINED> instruction: 0x00041fbc
   21a8c:	andeq	sl, r4, r4, asr sp
   21a90:	andeq	r0, r0, pc, ror #9
   21a94:	ldrdeq	r0, [r0], -lr
   21a98:	andeq	r1, r4, r0, lsl pc
   21a9c:	strdeq	r0, [r0], -lr
   21aa0:	ldr	r1, [pc]	; 21aa8 <__flatcc_fb_gen_c_verifier@@Base+0x3498>
   21aa4:	b	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21aa8:	andeq	r4, r5, r8, ror #13

00021aac <__flatcc_fb_gen_c_json_parser@@Base>:
   21aac:	ldr	r3, [r0, #208]	; 0xd0
   21ab0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21ab4:	mov	r4, r0
   21ab8:	sub	sp, sp, #276	; 0x114
   21abc:	ldr	r2, [r3, #164]	; 0xa4
   21ac0:	ldr	r1, [pc, #4068]	; 22aac <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   21ac4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21ac8:	ldr	r3, [r4, #208]	; 0xd0
   21acc:	mov	r0, r4
   21ad0:	ldr	r1, [pc, #4056]	; 22ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   21ad4:	ldr	r2, [r3, #164]	; 0xa4
   21ad8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21adc:	mov	r0, r4
   21ae0:	ldr	r1, [pc, #4044]	; 22ab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   21ae4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21ae8:	mov	r0, r4
   21aec:	ldr	r1, [pc, #4036]	; 22ab8 <__flatcc_fb_gen_c_json_parser@@Base+0x100c>
   21af0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21af4:	mov	r0, r4
   21af8:	ldr	r1, [pc, #4020]	; 22ab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   21afc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21b00:	mov	r0, r4
   21b04:	ldr	r1, [pc, #4016]	; 22abc <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   21b08:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21b0c:	mov	r0, r4
   21b10:	ldr	r2, [pc, #4008]	; 22ac0 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   21b14:	ldr	r1, [pc, #4008]	; 22ac4 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   21b18:	bl	150e4 <__flatcc_fb_gen_c_includes@@Base>
   21b1c:	ldr	r3, [r4, #212]	; 0xd4
   21b20:	ldr	r3, [r3, #140]	; 0x8c
   21b24:	cmp	r3, #0
   21b28:	beq	21b40 <__flatcc_fb_gen_c_json_parser@@Base+0x94>
   21b2c:	ldr	r3, [r4, #204]	; 0xcc
   21b30:	mov	r2, #36	; 0x24
   21b34:	mov	r1, #1
   21b38:	ldr	r0, [pc, #3976]	; 22ac8 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   21b3c:	bl	13f18 <fwrite@plt>
   21b40:	ldr	r1, [pc, #3948]	; 22ab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   21b44:	mov	r0, r4
   21b48:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21b4c:	ldr	r6, [r4, #208]	; 0xd0
   21b50:	add	r0, sp, #52	; 0x34
   21b54:	mov	r2, #220	; 0xdc
   21b58:	ldr	r5, [r6, #52]	; 0x34
   21b5c:	mov	r1, #0
   21b60:	bl	13f9c <memset@plt>
   21b64:	cmp	r5, #0
   21b68:	beq	21b78 <__flatcc_fb_gen_c_json_parser@@Base+0xcc>
   21b6c:	ldrh	r3, [r5, #8]
   21b70:	cmp	r3, #1
   21b74:	bls	22fcc <__flatcc_fb_gen_c_json_parser@@Base+0x1520>
   21b78:	ldr	r5, [r6, #40]	; 0x28
   21b7c:	cmp	r5, #0
   21b80:	beq	21c44 <__flatcc_fb_gen_c_json_parser@@Base+0x198>
   21b84:	ldr	r7, [pc, #3904]	; 22acc <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   21b88:	ldr	r6, [pc, #3904]	; 22ad0 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   21b8c:	ldr	fp, [pc, #3904]	; 22ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   21b90:	ldr	sl, [pc, #3904]	; 22ad8 <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
   21b94:	ldr	r9, [pc, #3904]	; 22adc <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   21b98:	ldr	r8, [pc, #3904]	; 22ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   21b9c:	ldrh	r3, [r5, #8]
   21ba0:	cmp	r3, #4
   21ba4:	ldrls	pc, [pc, r3, lsl #2]
   21ba8:	b	21c34 <__flatcc_fb_gen_c_json_parser@@Base+0x188>
   21bac:	muleq	r2, r0, sp
   21bb0:	strdeq	r1, [r2], -r0
   21bb4:	andeq	r1, r2, r4, lsr ip
   21bb8:	andeq	r1, r2, r4, lsr #26
   21bbc:	andeq	r1, r2, r0, asr #23
   21bc0:	add	r2, sp, #52	; 0x34
   21bc4:	mov	r1, r5
   21bc8:	ldr	r0, [r5, #12]
   21bcc:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   21bd0:	add	r2, sp, #52	; 0x34
   21bd4:	mov	r1, r8
   21bd8:	mov	r0, r4
   21bdc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21be0:	add	r2, sp, #52	; 0x34
   21be4:	ldr	r1, [pc, #3832]	; 22ae4 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   21be8:	mov	r0, r4
   21bec:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21bf0:	add	r2, sp, #52	; 0x34
   21bf4:	mov	r1, r7
   21bf8:	mov	r0, r4
   21bfc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21c00:	ldr	r3, [r4, #220]	; 0xdc
   21c04:	mov	r1, r6
   21c08:	add	r3, r3, #2
   21c0c:	str	r3, [r4, #220]	; 0xdc
   21c10:	mov	r0, r4
   21c14:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21c18:	ldr	r3, [r4, #220]	; 0xdc
   21c1c:	cmp	r3, #0
   21c20:	beq	2318c <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
   21c24:	cmp	r3, #1
   21c28:	beq	23184 <__flatcc_fb_gen_c_json_parser@@Base+0x16d8>
   21c2c:	sub	r3, r3, #2
   21c30:	str	r3, [r4, #220]	; 0xdc
   21c34:	ldr	r5, [r5]
   21c38:	cmp	r5, #0
   21c3c:	bne	21b9c <__flatcc_fb_gen_c_json_parser@@Base+0xf0>
   21c40:	ldr	r6, [r4, #208]	; 0xd0
   21c44:	ldr	r0, [r6, #60]	; 0x3c
   21c48:	mov	r2, r4
   21c4c:	ldr	r1, [pc, #3732]	; 22ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   21c50:	bl	29500 <fb_scope_table_visit@@Base>
   21c54:	ldr	r3, [r4, #208]	; 0xd0
   21c58:	ldr	r1, [pc, #3724]	; 22aec <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   21c5c:	mov	r0, r4
   21c60:	ldr	r2, [r3, #160]	; 0xa0
   21c64:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21c68:	ldr	r3, [r4, #220]	; 0xdc
   21c6c:	ldr	r1, [pc, #3676]	; 22ad0 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   21c70:	add	r3, r3, #2
   21c74:	str	r3, [r4, #220]	; 0xdc
   21c78:	mov	r0, r4
   21c7c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21c80:	ldr	r3, [r4, #220]	; 0xdc
   21c84:	cmp	r3, #0
   21c88:	beq	23260 <__flatcc_fb_gen_c_json_parser@@Base+0x17b4>
   21c8c:	cmp	r3, #1
   21c90:	moveq	r3, #0
   21c94:	streq	r3, [r4, #220]	; 0xdc
   21c98:	beq	23260 <__flatcc_fb_gen_c_json_parser@@Base+0x17b4>
   21c9c:	sub	r3, r3, #2
   21ca0:	str	r3, [r4, #220]	; 0xdc
   21ca4:	ldr	r1, [pc, #3592]	; 22ab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   21ca8:	mov	r0, r4
   21cac:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21cb0:	ldr	r3, [r4, #208]	; 0xd0
   21cb4:	ldr	r9, [r3, #40]	; 0x28
   21cb8:	cmp	r9, #0
   21cbc:	addeq	fp, sp, #24
   21cc0:	beq	21de8 <__flatcc_fb_gen_c_json_parser@@Base+0x33c>
   21cc4:	ldr	sl, [pc, #3560]	; 22ab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   21cc8:	add	fp, sp, #24
   21ccc:	ldrh	r3, [r9, #8]
   21cd0:	cmp	r3, #4
   21cd4:	ldrls	pc, [pc, r3, lsl #2]
   21cd8:	b	21dd8 <__flatcc_fb_gen_c_json_parser@@Base+0x32c>
   21cdc:	andeq	r2, r2, r8, ror #12
   21ce0:	andeq	r2, r2, r8, ror #5
   21ce4:	ldrdeq	r1, [r2], -r8
   21ce8:	andeq	r2, r2, r8, asr r6
   21cec:			; <UNDEFINED> instruction: 0x00021db4
   21cf0:	add	r2, sp, #52	; 0x34
   21cf4:	mov	r1, r5
   21cf8:	ldr	r0, [r5, #12]
   21cfc:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   21d00:	add	r2, sp, #52	; 0x34
   21d04:	mov	r1, sl
   21d08:	mov	r0, r4
   21d0c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21d10:	add	r2, sp, #52	; 0x34
   21d14:	mov	r1, r9
   21d18:	mov	r0, r4
   21d1c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21d20:	b	21c34 <__flatcc_fb_gen_c_json_parser@@Base+0x188>
   21d24:	add	r2, sp, #52	; 0x34
   21d28:	mov	r1, r5
   21d2c:	ldr	r0, [r5, #12]
   21d30:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   21d34:	add	r2, sp, #52	; 0x34
   21d38:	mov	r1, r7
   21d3c:	mov	r0, r4
   21d40:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21d44:	ldr	r3, [r4, #220]	; 0xdc
   21d48:	add	r2, sp, #52	; 0x34
   21d4c:	add	r3, r3, #2
   21d50:	str	r3, [r4, #220]	; 0xdc
   21d54:	mov	r1, r6
   21d58:	mov	r0, r4
   21d5c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21d60:	ldr	r3, [r4, #220]	; 0xdc
   21d64:	cmp	r3, #0
   21d68:	beq	21d7c <__flatcc_fb_gen_c_json_parser@@Base+0x2d0>
   21d6c:	cmp	r3, #1
   21d70:	bne	21c2c <__flatcc_fb_gen_c_json_parser@@Base+0x180>
   21d74:	mov	r3, #0
   21d78:	str	r3, [r4, #220]	; 0xdc
   21d7c:	ldr	r3, [pc, #3896]	; 22cbc <__flatcc_fb_gen_c_json_parser@@Base+0x1210>
   21d80:	ldr	r2, [pc, #3432]	; 22af0 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   21d84:	ldr	r1, [pc, #3916]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   21d88:	ldr	r0, [pc, #3916]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   21d8c:	bl	14038 <__assert_fail@plt>
   21d90:	add	r2, sp, #52	; 0x34
   21d94:	mov	r1, r5
   21d98:	ldr	r0, [r5, #12]
   21d9c:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   21da0:	add	r2, sp, #52	; 0x34
   21da4:	mov	r1, fp
   21da8:	mov	r0, r4
   21dac:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21db0:	b	21c34 <__flatcc_fb_gen_c_json_parser@@Base+0x188>
   21db4:	mov	r1, r9
   21db8:	mov	r0, r4
   21dbc:	bl	1f98c <__flatcc_fb_gen_c_verifier@@Base+0x137c>
   21dc0:	mov	r1, r9
   21dc4:	mov	r0, r4
   21dc8:	bl	1fe68 <__flatcc_fb_gen_c_verifier@@Base+0x1858>
   21dcc:	mov	r1, r9
   21dd0:	mov	r0, r4
   21dd4:	bl	217bc <__flatcc_fb_gen_c_verifier@@Base+0x31ac>
   21dd8:	ldr	r9, [r9]
   21ddc:	cmp	r9, #0
   21de0:	bne	21ccc <__flatcc_fb_gen_c_json_parser@@Base+0x220>
   21de4:	ldr	r3, [r4, #208]	; 0xd0
   21de8:	ldr	r0, [r3, #60]	; 0x3c
   21dec:	mov	r2, r4
   21df0:	ldr	r1, [pc, #3324]	; 22af4 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   21df4:	bl	29500 <fb_scope_table_visit@@Base>
   21df8:	ldr	r5, [r4, #208]	; 0xd0
   21dfc:	mov	r1, #0
   21e00:	str	r1, [sp, #24]
   21e04:	str	r1, [fp, #4]
   21e08:	str	r1, [fp, #8]
   21e0c:	str	r1, [fp, #12]
   21e10:	str	r1, [fp, #16]
   21e14:	str	r1, [fp, #20]
   21e18:	str	r1, [fp, #24]
   21e1c:	ldr	r7, [r5, #60]	; 0x3c
   21e20:	mov	r2, #44	; 0x2c
   21e24:	add	r0, sp, #52	; 0x34
   21e28:	bl	13f9c <memset@plt>
   21e2c:	mov	r3, #1
   21e30:	add	r2, sp, #52	; 0x34
   21e34:	mov	r0, r7
   21e38:	ldr	r1, [pc, #3256]	; 22af8 <__flatcc_fb_gen_c_json_parser@@Base+0x104c>
   21e3c:	str	r3, [sp, #52]	; 0x34
   21e40:	str	r5, [sp, #92]	; 0x5c
   21e44:	bl	29500 <fb_scope_table_visit@@Base>
   21e48:	ldr	r5, [sp, #56]	; 0x38
   21e4c:	mov	r1, #8
   21e50:	mov	r0, r5
   21e54:	bl	13ea0 <calloc@plt>
   21e58:	ldr	sl, [sp, #60]	; 0x3c
   21e5c:	mov	r1, #8
   21e60:	mov	r6, r0
   21e64:	mov	r0, sl
   21e68:	str	r6, [sp, #68]	; 0x44
   21e6c:	bl	13ea0 <calloc@plt>
   21e70:	ldr	r3, [sp, #64]	; 0x40
   21e74:	str	r3, [sp, #12]
   21e78:	mov	r9, r0
   21e7c:	str	r0, [sp, #72]	; 0x48
   21e80:	mov	r0, r3
   21e84:	bl	13f3c <malloc@plt>
   21e88:	cmp	r5, #0
   21e8c:	movle	r5, #0
   21e90:	movgt	r5, #1
   21e94:	cmp	r6, #0
   21e98:	movne	r5, #0
   21e9c:	cmp	r5, #0
   21ea0:	str	r6, [sp, #80]	; 0x50
   21ea4:	str	r9, [sp, #84]	; 0x54
   21ea8:	mov	r8, r0
   21eac:	str	r0, [sp, #76]	; 0x4c
   21eb0:	str	r0, [sp, #88]	; 0x58
   21eb4:	bne	23164 <__flatcc_fb_gen_c_json_parser@@Base+0x16b8>
   21eb8:	cmp	sl, #0
   21ebc:	movle	sl, #0
   21ec0:	movgt	sl, #1
   21ec4:	cmp	r9, #0
   21ec8:	movne	sl, #0
   21ecc:	cmp	sl, #0
   21ed0:	bne	23154 <__flatcc_fb_gen_c_json_parser@@Base+0x16a8>
   21ed4:	ldr	r3, [sp, #12]
   21ed8:	clz	r5, r0
   21edc:	cmp	r3, #0
   21ee0:	lsr	r5, r5, #5
   21ee4:	moveq	r5, #0
   21ee8:	cmp	r5, #0
   21eec:	bne	23154 <__flatcc_fb_gen_c_json_parser@@Base+0x16a8>
   21ef0:	mov	r0, r7
   21ef4:	add	r2, sp, #52	; 0x34
   21ef8:	ldr	r1, [pc, #3068]	; 22afc <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   21efc:	bl	29500 <fb_scope_table_visit@@Base>
   21f00:	ldr	r6, [sp, #56]	; 0x38
   21f04:	ldr	r7, [sp, #68]	; 0x44
   21f08:	ldr	r3, [pc, #3056]	; 22b00 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   21f0c:	mov	r0, r7
   21f10:	mov	r1, r6
   21f14:	mov	r2, #8
   21f18:	bl	14008 <qsort@plt>
   21f1c:	cmp	r6, #0
   21f20:	movgt	r3, r5
   21f24:	ble	21f3c <__flatcc_fb_gen_c_json_parser@@Base+0x490>
   21f28:	ldr	r2, [r7, r3, lsl #3]
   21f2c:	str	r3, [r2, #124]	; 0x7c
   21f30:	add	r3, r3, #1
   21f34:	cmp	r6, r3
   21f38:	bne	21f28 <__flatcc_fb_gen_c_json_parser@@Base+0x47c>
   21f3c:	ldr	r5, [sp, #60]	; 0x3c
   21f40:	ldr	r6, [sp, #72]	; 0x48
   21f44:	ldr	r3, [pc, #2996]	; 22b00 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   21f48:	mov	r0, r6
   21f4c:	mov	r1, r5
   21f50:	mov	r2, #8
   21f54:	bl	14008 <qsort@plt>
   21f58:	cmp	r5, #0
   21f5c:	movgt	r3, #0
   21f60:	ble	21f78 <__flatcc_fb_gen_c_json_parser@@Base+0x4cc>
   21f64:	ldr	r2, [r6, r3, lsl #3]
   21f68:	str	r3, [r2, #124]	; 0x7c
   21f6c:	add	r3, r3, #1
   21f70:	cmp	r5, r3
   21f74:	bne	21f64 <__flatcc_fb_gen_c_json_parser@@Base+0x4b8>
   21f78:	ldr	r9, [sp, #60]	; 0x3c
   21f7c:	cmp	r9, #0
   21f80:	beq	2309c <__flatcc_fb_gen_c_json_parser@@Base+0x15f0>
   21f84:	lsl	r7, r9, #4
   21f88:	mov	r0, r7
   21f8c:	bl	13f3c <malloc@plt>
   21f90:	subs	sl, r0, #0
   21f94:	beq	230d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   21f98:	cmp	r9, #0
   21f9c:	ble	21fd0 <__flatcc_fb_gen_c_json_parser@@Base+0x524>
   21fa0:	ldr	r6, [sp, #72]	; 0x48
   21fa4:	add	r7, sl, r7
   21fa8:	mov	r5, sl
   21fac:	mov	r8, #0
   21fb0:	ldr	r0, [r6, #4]
   21fb4:	str	r0, [r5]
   21fb8:	bl	13f78 <strlen@plt>
   21fbc:	ldr	r3, [r6], #8
   21fc0:	stmib	r5, {r0, r3, r8}
   21fc4:	add	r5, r5, #16
   21fc8:	cmp	r7, r5
   21fcc:	bne	21fb0 <__flatcc_fb_gen_c_json_parser@@Base+0x504>
   21fd0:	mov	r1, r9
   21fd4:	ldr	r3, [pc, #2856]	; 22b04 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   21fd8:	mov	r2, #16
   21fdc:	mov	r0, sl
   21fe0:	bl	14008 <qsort@plt>
   21fe4:	ldr	r9, [sp, #60]	; 0x3c
   21fe8:	str	sl, [sp, #24]
   21fec:	ldr	r3, [r4, #208]	; 0xd0
   21ff0:	ldr	r1, [pc, #2832]	; 22b08 <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   21ff4:	ldr	r0, [pc, #2832]	; 22b0c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   21ff8:	ldr	r2, [r3, #160]	; 0xa0
   21ffc:	mov	r5, #0
   22000:	mov	r3, #4
   22004:	str	r1, [sp, #28]
   22008:	str	r0, [sp, #32]
   2200c:	ldr	r1, [pc, #2776]	; 22aec <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   22010:	mov	r0, r4
   22014:	str	r3, [sp, #40]	; 0x28
   22018:	str	r5, [sp, #36]	; 0x24
   2201c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22020:	ldr	r3, [r4, #220]	; 0xdc
   22024:	ldr	r1, [pc, #2788]	; 22b10 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   22028:	add	r3, r3, #2
   2202c:	str	r3, [r4, #220]	; 0xdc
   22030:	mov	r0, r4
   22034:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22038:	ldr	r3, [r4, #220]	; 0xdc
   2203c:	cmp	r3, r5
   22040:	beq	23300 <__flatcc_fb_gen_c_json_parser@@Base+0x1854>
   22044:	cmp	r3, #1
   22048:	streq	r5, [r4, #220]	; 0xdc
   2204c:	beq	23300 <__flatcc_fb_gen_c_json_parser@@Base+0x1854>
   22050:	sub	r3, r3, #2
   22054:	str	r3, [r4, #220]	; 0xdc
   22058:	ldr	r1, [pc, #2948]	; 22be4 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   2205c:	mov	r0, r4
   22060:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22064:	ldr	r3, [r4, #220]	; 0xdc
   22068:	cmp	r9, #0
   2206c:	add	r3, r3, #1
   22070:	str	r3, [r4, #220]	; 0xdc
   22074:	bne	22dac <__flatcc_fb_gen_c_json_parser@@Base+0x1300>
   22078:	ldr	r1, [pc, #2708]	; 22b14 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   2207c:	mov	r0, r4
   22080:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22084:	ldr	r1, [pc, #2700]	; 22b18 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   22088:	mov	r0, r4
   2208c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22090:	ldr	r3, [r4, #220]	; 0xdc
   22094:	cmp	r3, #0
   22098:	beq	23314 <__flatcc_fb_gen_c_json_parser@@Base+0x1868>
   2209c:	sub	r3, r3, #1
   220a0:	str	r3, [r4, #220]	; 0xdc
   220a4:	ldr	r1, [pc, #2908]	; 22c08 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   220a8:	mov	r0, r4
   220ac:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   220b0:	mov	r0, r4
   220b4:	ldr	r1, [pc, #2552]	; 22ab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   220b8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   220bc:	ldr	r0, [sp, #24]
   220c0:	cmp	r0, #0
   220c4:	beq	220cc <__flatcc_fb_gen_c_json_parser@@Base+0x620>
   220c8:	bl	13ed0 <free@plt>
   220cc:	ldr	r0, [sp, #68]	; 0x44
   220d0:	cmp	r0, #0
   220d4:	beq	220dc <__flatcc_fb_gen_c_json_parser@@Base+0x630>
   220d8:	bl	13ed0 <free@plt>
   220dc:	ldr	r0, [sp, #72]	; 0x48
   220e0:	cmp	r0, #0
   220e4:	beq	220ec <__flatcc_fb_gen_c_json_parser@@Base+0x640>
   220e8:	bl	13ed0 <free@plt>
   220ec:	ldr	r0, [sp, #76]	; 0x4c
   220f0:	cmp	r0, #0
   220f4:	beq	220fc <__flatcc_fb_gen_c_json_parser@@Base+0x650>
   220f8:	bl	13ed0 <free@plt>
   220fc:	ldr	r3, [r4, #208]	; 0xd0
   22100:	ldr	r5, [r3, #52]	; 0x34
   22104:	cmp	r5, #0
   22108:	beq	222a4 <__flatcc_fb_gen_c_json_parser@@Base+0x7f8>
   2210c:	ldrh	r6, [r5, #8]
   22110:	cmp	r6, #0
   22114:	beq	22e58 <__flatcc_fb_gen_c_json_parser@@Base+0x13ac>
   22118:	cmp	r6, #1
   2211c:	bne	222a4 <__flatcc_fb_gen_c_json_parser@@Base+0x7f8>
   22120:	mov	r2, #220	; 0xdc
   22124:	mov	r1, #0
   22128:	add	r0, sp, #52	; 0x34
   2212c:	bl	13f9c <memset@plt>
   22130:	add	r2, sp, #52	; 0x34
   22134:	mov	r1, r5
   22138:	ldr	r0, [r5, #12]
   2213c:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   22140:	ldr	r3, [r4, #208]	; 0xd0
   22144:	ldr	r1, [pc, #2804]	; 22c40 <__flatcc_fb_gen_c_json_parser@@Base+0x1194>
   22148:	mov	r0, r4
   2214c:	ldr	r2, [r3, #160]	; 0xa0
   22150:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22154:	ldr	r3, [r4, #220]	; 0xdc
   22158:	ldr	r1, [pc, #2688]	; 22be0 <__flatcc_fb_gen_c_json_parser@@Base+0x1134>
   2215c:	add	r3, r3, #2
   22160:	str	r3, [r4, #220]	; 0xdc
   22164:	mov	r0, r4
   22168:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2216c:	ldr	r3, [r4, #220]	; 0xdc
   22170:	cmp	r3, #0
   22174:	beq	23328 <__flatcc_fb_gen_c_json_parser@@Base+0x187c>
   22178:	cmp	r3, #1
   2217c:	moveq	r3, #0
   22180:	streq	r3, [r4, #220]	; 0xdc
   22184:	beq	23328 <__flatcc_fb_gen_c_json_parser@@Base+0x187c>
   22188:	sub	r3, r3, #2
   2218c:	str	r3, [r4, #220]	; 0xdc
   22190:	ldr	r1, [pc, #2636]	; 22be4 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   22194:	mov	r0, r4
   22198:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2219c:	ldr	r3, [r4, #220]	; 0xdc
   221a0:	ldr	r1, [pc, #2420]	; 22b1c <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   221a4:	add	r3, r3, #1
   221a8:	str	r3, [r4, #220]	; 0xdc
   221ac:	mov	r0, r4
   221b0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   221b4:	ldr	r1, [pc, #2608]	; 22bec <__flatcc_fb_gen_c_json_parser@@Base+0x1140>
   221b8:	mov	r0, r4
   221bc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   221c0:	ldr	r1, [pc, #2284]	; 22ab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   221c4:	mov	r0, r4
   221c8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   221cc:	ldr	r1, [pc, #2380]	; 22b20 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   221d0:	mov	r0, r4
   221d4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   221d8:	ldr	r1, [pc, #2580]	; 22bf4 <__flatcc_fb_gen_c_json_parser@@Base+0x1148>
   221dc:	mov	r0, r4
   221e0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   221e4:	ldr	r2, [r4, #208]	; 0xd0
   221e8:	ldrh	r3, [r2, #16]
   221ec:	cmp	r3, #2
   221f0:	beq	230bc <__flatcc_fb_gen_c_json_parser@@Base+0x1610>
   221f4:	ldr	r1, [pc, #2556]	; 22bf8 <__flatcc_fb_gen_c_json_parser@@Base+0x114c>
   221f8:	mov	r0, r4
   221fc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22200:	add	r2, sp, #52	; 0x34
   22204:	ldr	r1, [pc, #2328]	; 22b24 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   22208:	mov	r0, r4
   2220c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22210:	ldr	r1, [pc, #2536]	; 22c00 <__flatcc_fb_gen_c_json_parser@@Base+0x1154>
   22214:	mov	r0, r4
   22218:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2221c:	ldr	r3, [r4, #220]	; 0xdc
   22220:	ldr	r1, [pc, #2524]	; 22c04 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   22224:	add	r3, r3, #1
   22228:	str	r3, [r4, #220]	; 0xdc
   2222c:	mov	r0, r4
   22230:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22234:	ldr	r3, [r4, #220]	; 0xdc
   22238:	cmp	r3, #0
   2223c:	beq	23210 <__flatcc_fb_gen_c_json_parser@@Base+0x1764>
   22240:	sub	r3, r3, #1
   22244:	str	r3, [r4, #220]	; 0xdc
   22248:	ldr	r1, [pc, #2488]	; 22c08 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   2224c:	mov	r0, r4
   22250:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22254:	ldr	r1, [pc, #2480]	; 22c0c <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   22258:	mov	r0, r4
   2225c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22260:	ldr	r1, [pc, #2472]	; 22c10 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   22264:	mov	r0, r4
   22268:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2226c:	ldr	r1, [pc, #2464]	; 22c14 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   22270:	mov	r0, r4
   22274:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22278:	ldr	r3, [r4, #220]	; 0xdc
   2227c:	cmp	r3, #0
   22280:	beq	23224 <__flatcc_fb_gen_c_json_parser@@Base+0x1778>
   22284:	sub	r3, r3, #1
   22288:	ldr	r1, [pc, #2424]	; 22c08 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   2228c:	mov	r0, r4
   22290:	str	r3, [r4, #220]	; 0xdc
   22294:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22298:	ldr	r1, [pc, #2068]	; 22ab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   2229c:	mov	r0, r4
   222a0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   222a4:	ldr	r3, [r4, #212]	; 0xd4
   222a8:	ldr	r3, [r3, #140]	; 0x8c
   222ac:	cmp	r3, #0
   222b0:	beq	222c8 <__flatcc_fb_gen_c_json_parser@@Base+0x81c>
   222b4:	ldr	r3, [r4, #204]	; 0xcc
   222b8:	mov	r2, #36	; 0x24
   222bc:	mov	r1, #1
   222c0:	ldr	r0, [pc, #2144]	; 22b28 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   222c4:	bl	13f18 <fwrite@plt>
   222c8:	ldr	r3, [r4, #208]	; 0xd0
   222cc:	mov	r0, r4
   222d0:	ldr	r1, [pc, #2132]	; 22b2c <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   222d4:	ldr	r2, [r3, #164]	; 0xa4
   222d8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   222dc:	mov	r0, #0
   222e0:	add	sp, sp, #276	; 0x114
   222e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   222e8:	mov	r3, #0
   222ec:	str	r3, [fp]
   222f0:	str	r3, [fp, #4]
   222f4:	str	r3, [fp, #8]
   222f8:	str	r3, [fp, #12]
   222fc:	str	r3, [fp, #16]
   22300:	str	r3, [fp, #20]
   22304:	str	r3, [fp, #24]
   22308:	ldrh	r3, [r9, #8]
   2230c:	cmp	r3, #1
   22310:	bne	2324c <__flatcc_fb_gen_c_json_parser@@Base+0x17a0>
   22314:	add	r1, sp, #20
   22318:	ldr	r0, [r9, #20]
   2231c:	bl	21638 <__flatcc_fb_gen_c_verifier@@Base+0x3028>
   22320:	cmp	r0, #0
   22324:	str	r0, [sp, #24]
   22328:	beq	22d1c <__flatcc_fb_gen_c_json_parser@@Base+0x1270>
   2232c:	ldr	r1, [pc, #2212]	; 22bd8 <__flatcc_fb_gen_c_json_parser@@Base+0x112c>
   22330:	ldr	r0, [pc, #2212]	; 22bdc <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   22334:	mov	r3, #1
   22338:	mov	r2, #220	; 0xdc
   2233c:	str	r1, [sp, #28]
   22340:	str	r0, [sp, #32]
   22344:	mov	r1, #0
   22348:	add	r0, sp, #52	; 0x34
   2234c:	str	r3, [sp, #40]	; 0x28
   22350:	str	r9, [sp, #36]	; 0x24
   22354:	bl	13f9c <memset@plt>
   22358:	add	r2, sp, #52	; 0x34
   2235c:	mov	r1, r9
   22360:	ldr	r0, [r9, #12]
   22364:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   22368:	add	r2, sp, #52	; 0x34
   2236c:	ldr	r1, [pc, #1980]	; 22b30 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   22370:	mov	r0, r4
   22374:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22378:	ldr	r1, [pc, #2148]	; 22be4 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   2237c:	mov	r0, r4
   22380:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22384:	ldr	r3, [r4, #220]	; 0xdc
   22388:	ldr	r1, [pc, #1956]	; 22b34 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   2238c:	add	r3, r3, #1
   22390:	str	r3, [r4, #220]	; 0xdc
   22394:	mov	r0, r4
   22398:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2239c:	ldr	r3, [sp, #20]
   223a0:	cmp	r3, #0
   223a4:	ble	223d8 <__flatcc_fb_gen_c_json_parser@@Base+0x92c>
   223a8:	ldr	r1, [pc, #1928]	; 22b38 <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   223ac:	mov	r0, r4
   223b0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   223b4:	ldr	r1, [pc, #1920]	; 22b3c <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   223b8:	mov	r0, r4
   223bc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   223c0:	ldr	r1, [pc, #2044]	; 22bc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   223c4:	mov	r0, r4
   223c8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   223cc:	ldr	r1, [pc, #2036]	; 22bc8 <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   223d0:	mov	r0, r4
   223d4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   223d8:	mov	r1, sl
   223dc:	mov	r0, r4
   223e0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   223e4:	ldr	r1, [pc, #1876]	; 22b40 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   223e8:	mov	r0, r4
   223ec:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   223f0:	ldr	r1, [pc, #1868]	; 22b44 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   223f4:	mov	r0, r4
   223f8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   223fc:	ldr	r3, [r4, #220]	; 0xdc
   22400:	ldr	r2, [sp, #20]
   22404:	add	r3, r3, #1
   22408:	cmp	r2, #0
   2240c:	str	r3, [r4, #220]	; 0xdc
   22410:	bne	22ce4 <__flatcc_fb_gen_c_json_parser@@Base+0x1238>
   22414:	ldr	r1, [pc, #1836]	; 22b48 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   22418:	mov	r0, r4
   2241c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22420:	ldr	r1, [pc, #1940]	; 22bbc <__flatcc_fb_gen_c_json_parser@@Base+0x1110>
   22424:	mov	r0, r4
   22428:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2242c:	ldr	r1, [pc, #1816]	; 22b4c <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   22430:	mov	r0, r4
   22434:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22438:	ldr	r3, [r4, #220]	; 0xdc
   2243c:	cmp	r3, #0
   22440:	beq	232d8 <__flatcc_fb_gen_c_json_parser@@Base+0x182c>
   22444:	sub	r3, r3, #1
   22448:	str	r3, [r4, #220]	; 0xdc
   2244c:	ldr	r1, [pc, #1972]	; 22c08 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   22450:	mov	r0, r4
   22454:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22458:	ldr	r1, [pc, #1904]	; 22bd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   2245c:	mov	r0, r4
   22460:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22464:	ldr	r3, [sp, #20]
   22468:	cmp	r3, #0
   2246c:	ble	224a0 <__flatcc_fb_gen_c_json_parser@@Base+0x9f4>
   22470:	ldr	r2, [r4, #220]	; 0xdc
   22474:	mov	r3, #0
   22478:	str	r3, [r4, #220]	; 0xdc
   2247c:	ldr	r1, [pc, #1740]	; 22b50 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   22480:	mov	r0, r4
   22484:	str	r2, [r4, #228]	; 0xe4
   22488:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2248c:	ldr	r3, [r4, #228]	; 0xe4
   22490:	ldr	r1, [pc, #1724]	; 22b54 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   22494:	str	r3, [r4, #220]	; 0xdc
   22498:	mov	r0, r4
   2249c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   224a0:	ldr	r3, [r4, #220]	; 0xdc
   224a4:	cmp	r3, #0
   224a8:	beq	232c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1818>
   224ac:	sub	r3, r3, #1
   224b0:	str	r3, [r4, #220]	; 0xdc
   224b4:	ldr	r1, [pc, #1868]	; 22c08 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   224b8:	mov	r0, r4
   224bc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   224c0:	mov	r0, r4
   224c4:	mov	r1, sl
   224c8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   224cc:	ldr	r0, [sp, #24]
   224d0:	cmp	r0, #0
   224d4:	beq	224dc <__flatcc_fb_gen_c_json_parser@@Base+0xa30>
   224d8:	bl	13ed0 <free@plt>
   224dc:	ldrh	r3, [r9, #8]
   224e0:	cmp	r3, #1
   224e4:	bne	232b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1804>
   224e8:	mov	r2, #220	; 0xdc
   224ec:	mov	r1, #0
   224f0:	add	r0, sp, #52	; 0x34
   224f4:	bl	13f9c <memset@plt>
   224f8:	add	r2, sp, #52	; 0x34
   224fc:	mov	r1, r9
   22500:	ldr	r0, [r9, #12]
   22504:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   22508:	add	r2, sp, #52	; 0x34
   2250c:	ldr	r1, [pc, #1604]	; 22b58 <__flatcc_fb_gen_c_json_parser@@Base+0x10ac>
   22510:	mov	r0, r4
   22514:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22518:	ldr	r1, [pc, #1732]	; 22be4 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   2251c:	mov	r0, r4
   22520:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22524:	ldr	r3, [r4, #220]	; 0xdc
   22528:	ldr	r1, [pc, #1548]	; 22b3c <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   2252c:	add	r3, r3, #1
   22530:	str	r3, [r4, #220]	; 0xdc
   22534:	mov	r0, r4
   22538:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2253c:	mov	r1, sl
   22540:	mov	r0, r4
   22544:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22548:	ldr	r1, [pc, #1548]	; 22b5c <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   2254c:	mov	r0, r4
   22550:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22554:	ldrh	r0, [r9, #104]	; 0x68
   22558:	ldrd	r2, [r9, #112]	; 0x70
   2255c:	ldr	r1, [pc, #1532]	; 22b60 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22560:	str	r0, [sp]
   22564:	mov	r0, r4
   22568:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2256c:	add	r2, sp, #52	; 0x34
   22570:	ldr	r1, [pc, #1516]	; 22b64 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   22574:	mov	r0, r4
   22578:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2257c:	ldr	r1, [pc, #1508]	; 22b68 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22580:	mov	r0, r4
   22584:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22588:	ldr	r1, [pc, #1600]	; 22bd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   2258c:	mov	r0, r4
   22590:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22594:	ldr	r2, [r4, #220]	; 0xdc
   22598:	mov	r3, #0
   2259c:	str	r2, [r4, #228]	; 0xe4
   225a0:	str	r3, [r4, #220]	; 0xdc
   225a4:	ldr	r1, [pc, #1444]	; 22b50 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   225a8:	mov	r0, r4
   225ac:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   225b0:	ldr	r3, [r4, #228]	; 0xe4
   225b4:	ldr	r1, [pc, #1432]	; 22b54 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   225b8:	str	r3, [r4, #220]	; 0xdc
   225bc:	mov	r0, r4
   225c0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   225c4:	ldr	r3, [r4, #220]	; 0xdc
   225c8:	cmp	r3, #0
   225cc:	beq	2329c <__flatcc_fb_gen_c_json_parser@@Base+0x17f0>
   225d0:	sub	r3, r3, #1
   225d4:	str	r3, [r4, #220]	; 0xdc
   225d8:	ldr	r1, [pc, #1576]	; 22c08 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   225dc:	mov	r0, r4
   225e0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   225e4:	mov	r1, sl
   225e8:	mov	r0, r4
   225ec:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   225f0:	add	r2, sp, #52	; 0x34
   225f4:	ldr	r1, [pc, #1392]	; 22b6c <__flatcc_fb_gen_c_json_parser@@Base+0x10c0>
   225f8:	mov	r0, r4
   225fc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22600:	ldr	r1, [pc, #1500]	; 22be4 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   22604:	mov	r0, r4
   22608:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2260c:	ldr	r3, [r4, #220]	; 0xdc
   22610:	add	r2, sp, #52	; 0x34
   22614:	add	r3, r3, #1
   22618:	str	r3, [r4, #220]	; 0xdc
   2261c:	ldr	r1, [pc, #1356]	; 22b70 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   22620:	mov	r0, r4
   22624:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22628:	ldr	r3, [r4, #220]	; 0xdc
   2262c:	cmp	r3, #0
   22630:	beq	23288 <__flatcc_fb_gen_c_json_parser@@Base+0x17dc>
   22634:	sub	r3, r3, #1
   22638:	mov	r0, r4
   2263c:	str	r3, [r4, #220]	; 0xdc
   22640:	ldr	r1, [pc, #1472]	; 22c08 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   22644:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22648:	mov	r1, sl
   2264c:	mov	r0, r4
   22650:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22654:	b	21dd8 <__flatcc_fb_gen_c_json_parser@@Base+0x32c>
   22658:	mov	r1, r9
   2265c:	mov	r0, r4
   22660:	bl	217bc <__flatcc_fb_gen_c_verifier@@Base+0x31ac>
   22664:	b	21dd8 <__flatcc_fb_gen_c_json_parser@@Base+0x32c>
   22668:	mov	r3, #0
   2266c:	str	r3, [fp]
   22670:	str	r3, [fp, #4]
   22674:	str	r3, [fp, #8]
   22678:	str	r3, [fp, #12]
   2267c:	str	r3, [fp, #16]
   22680:	str	r3, [fp, #20]
   22684:	str	r3, [fp, #24]
   22688:	ldrh	r5, [r9, #8]
   2268c:	cmp	r5, r3
   22690:	bne	23274 <__flatcc_fb_gen_c_json_parser@@Base+0x17c8>
   22694:	add	r1, sp, #20
   22698:	ldr	r0, [r9, #20]
   2269c:	bl	21638 <__flatcc_fb_gen_c_verifier@@Base+0x3028>
   226a0:	cmp	r0, #0
   226a4:	str	r0, [sp, #24]
   226a8:	beq	22e2c <__flatcc_fb_gen_c_json_parser@@Base+0x1380>
   226ac:	ldr	r1, [sp, #20]
   226b0:	ldr	r2, [pc, #1312]	; 22bd8 <__flatcc_fb_gen_c_json_parser@@Base+0x112c>
   226b4:	ldr	r3, [pc, #1312]	; 22bdc <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   226b8:	cmp	r1, #0
   226bc:	str	r9, [sp, #36]	; 0x24
   226c0:	str	r5, [sp, #40]	; 0x28
   226c4:	str	r5, [sp, #44]	; 0x2c
   226c8:	str	r2, [sp, #28]
   226cc:	str	r3, [sp, #32]
   226d0:	ble	226f8 <__flatcc_fb_gen_c_json_parser@@Base+0xc4c>
   226d4:	add	r1, r0, r1, lsl #4
   226d8:	mov	r3, r5
   226dc:	ldr	r2, [r0, #12]
   226e0:	add	r0, r0, #16
   226e4:	cmp	r2, #0
   226e8:	addne	r3, r3, #1
   226ec:	cmp	r1, r0
   226f0:	bne	226dc <__flatcc_fb_gen_c_json_parser@@Base+0xc30>
   226f4:	str	r3, [sp, #44]	; 0x2c
   226f8:	mov	r2, #220	; 0xdc
   226fc:	mov	r1, #0
   22700:	add	r0, sp, #52	; 0x34
   22704:	bl	13f9c <memset@plt>
   22708:	add	r2, sp, #52	; 0x34
   2270c:	mov	r1, r9
   22710:	ldr	r0, [r9, #12]
   22714:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   22718:	add	r2, sp, #52	; 0x34
   2271c:	ldr	r1, [pc, #1104]	; 22b74 <__flatcc_fb_gen_c_json_parser@@Base+0x10c8>
   22720:	mov	r0, r4
   22724:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22728:	ldr	r1, [pc, #1204]	; 22be4 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   2272c:	mov	r0, r4
   22730:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22734:	ldr	r3, [r4, #220]	; 0xdc
   22738:	ldr	r1, [pc, #1012]	; 22b34 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   2273c:	add	r3, r3, #1
   22740:	str	r3, [r4, #220]	; 0xdc
   22744:	mov	r0, r4
   22748:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2274c:	ldr	r3, [sp, #20]
   22750:	cmp	r3, #0
   22754:	ble	22788 <__flatcc_fb_gen_c_json_parser@@Base+0xcdc>
   22758:	ldr	r1, [pc, #988]	; 22b3c <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   2275c:	mov	r0, r4
   22760:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22764:	ldr	r1, [pc, #1036]	; 22b78 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   22768:	mov	r0, r4
   2276c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22770:	ldr	r1, [pc, #1100]	; 22bc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   22774:	mov	r0, r4
   22778:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2277c:	ldr	r1, [pc, #1092]	; 22bc8 <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   22780:	mov	r0, r4
   22784:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22788:	ldr	r3, [sp, #44]	; 0x2c
   2278c:	cmp	r3, #0
   22790:	bne	22d5c <__flatcc_fb_gen_c_json_parser@@Base+0x12b0>
   22794:	mov	r1, sl
   22798:	mov	r0, r4
   2279c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   227a0:	ldr	r1, [pc, #948]	; 22b5c <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   227a4:	mov	r0, r4
   227a8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   227ac:	ldrd	r2, [r9, #96]	; 0x60
   227b0:	ldr	r1, [pc, #964]	; 22b7c <__flatcc_fb_gen_c_json_parser@@Base+0x10d0>
   227b4:	mov	r0, r4
   227b8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   227bc:	ldr	r2, [sp, #44]	; 0x2c
   227c0:	cmp	r2, #0
   227c4:	bne	22d7c <__flatcc_fb_gen_c_json_parser@@Base+0x12d0>
   227c8:	ldr	r1, [pc, #880]	; 22b40 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   227cc:	mov	r0, r4
   227d0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   227d4:	ldr	r1, [pc, #872]	; 22b44 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   227d8:	mov	r0, r4
   227dc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   227e0:	ldr	r3, [r4, #220]	; 0xdc
   227e4:	ldr	r1, [pc, #952]	; 22ba4 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   227e8:	add	r3, r3, #1
   227ec:	str	r3, [r4, #220]	; 0xdc
   227f0:	mov	r0, r4
   227f4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   227f8:	ldr	r3, [sp, #20]
   227fc:	cmp	r3, #0
   22800:	ble	22d90 <__flatcc_fb_gen_c_json_parser@@Base+0x12e4>
   22804:	ldr	r1, [pc, #960]	; 22bcc <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   22808:	mov	r0, r4
   2280c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22810:	ldr	r3, [sp, #20]
   22814:	mov	r2, #0
   22818:	sub	r3, r3, #1
   2281c:	str	r2, [sp]
   22820:	mov	r1, fp
   22824:	mov	r0, r4
   22828:	bl	1ee7c <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   2282c:	ldr	r1, [pc, #844]	; 22b80 <__flatcc_fb_gen_c_json_parser@@Base+0x10d4>
   22830:	mov	r0, r4
   22834:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22838:	ldr	r3, [r4, #220]	; 0xdc
   2283c:	cmp	r3, #0
   22840:	beq	23238 <__flatcc_fb_gen_c_json_parser@@Base+0x178c>
   22844:	sub	r3, r3, #1
   22848:	str	r3, [r4, #220]	; 0xdc
   2284c:	ldr	r1, [pc, #948]	; 22c08 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   22850:	mov	r0, r4
   22854:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22858:	mov	r0, r4
   2285c:	ldr	r1, [pc, #800]	; 22b84 <__flatcc_fb_gen_c_json_parser@@Base+0x10d8>
   22860:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22864:	ldr	r0, [sp, #20]
   22868:	cmp	r0, #0
   2286c:	ble	229b4 <__flatcc_fb_gen_c_json_parser@@Base+0xf08>
   22870:	mov	r5, #0
   22874:	mov	r7, r5
   22878:	mov	r6, #1
   2287c:	str	r9, [sp, #12]
   22880:	b	228c0 <__flatcc_fb_gen_c_json_parser@@Base+0xe14>
   22884:	subs	r8, r2, r8
   22888:	sbc	r9, r3, r9
   2288c:	mov	r3, r9
   22890:	mov	r0, r4
   22894:	ldr	r1, [pc, #748]	; 22b88 <__flatcc_fb_gen_c_json_parser@@Base+0x10dc>
   22898:	mov	r2, r8
   2289c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   228a0:	ldr	r3, [r4, #220]	; 0xdc
   228a4:	ldr	r0, [sp, #20]
   228a8:	mov	r6, r7
   228ac:	add	r3, r3, #1
   228b0:	str	r3, [r4, #220]	; 0xdc
   228b4:	add	r5, r5, #1
   228b8:	cmp	r5, r0
   228bc:	bge	22944 <__flatcc_fb_gen_c_json_parser@@Base+0xe98>
   228c0:	ldr	r3, [sp, #24]
   228c4:	add	r3, r3, r5, lsl #4
   228c8:	ldr	r3, [r3, #8]
   228cc:	ldrh	r1, [r3, #72]	; 0x48
   228d0:	tst	r1, #4
   228d4:	bne	228b4 <__flatcc_fb_gen_c_json_parser@@Base+0xe08>
   228d8:	ldrh	r2, [r3, #24]
   228dc:	mov	r9, #0
   228e0:	sub	r2, r2, #14
   228e4:	cmp	r2, #1
   228e8:	movhi	r2, r7
   228ec:	ldrls	r2, [r3, #16]
   228f0:	ldrhls	r2, [r2, #8]
   228f4:	subls	r2, r2, #4
   228f8:	clzls	r2, r2
   228fc:	lsrls	r2, r2, #5
   22900:	tst	r1, #256	; 0x100
   22904:	uxtb	r8, r2
   22908:	beq	228b4 <__flatcc_fb_gen_c_json_parser@@Base+0xe08>
   2290c:	cmp	r6, #0
   22910:	ldrd	r2, [r3, #96]	; 0x60
   22914:	bne	22884 <__flatcc_fb_gen_c_json_parser@@Base+0xdd8>
   22918:	subs	r8, r2, r8
   2291c:	sbc	r9, r3, r9
   22920:	mov	r0, r4
   22924:	ldr	r1, [pc, #608]	; 22b8c <__flatcc_fb_gen_c_json_parser@@Base+0x10e0>
   22928:	mov	r2, r8
   2292c:	mov	r3, r9
   22930:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22934:	ldr	r0, [sp, #20]
   22938:	add	r5, r5, #1
   2293c:	cmp	r5, r0
   22940:	blt	228c0 <__flatcc_fb_gen_c_json_parser@@Base+0xe14>
   22944:	cmp	r6, #0
   22948:	ldr	r9, [sp, #12]
   2294c:	bne	229b4 <__flatcc_fb_gen_c_json_parser@@Base+0xf08>
   22950:	ldr	r3, [r4, #220]	; 0xdc
   22954:	cmp	r3, #0
   22958:	beq	23350 <__flatcc_fb_gen_c_json_parser@@Base+0x18a4>
   2295c:	sub	r3, r3, #1
   22960:	str	r3, [r4, #220]	; 0xdc
   22964:	ldr	r1, [pc, #548]	; 22b90 <__flatcc_fb_gen_c_json_parser@@Base+0x10e4>
   22968:	mov	r0, r4
   2296c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22970:	ldr	r3, [r4, #220]	; 0xdc
   22974:	ldr	r1, [pc, #536]	; 22b94 <__flatcc_fb_gen_c_json_parser@@Base+0x10e8>
   22978:	add	r3, r3, #1
   2297c:	str	r3, [r4, #220]	; 0xdc
   22980:	mov	r0, r4
   22984:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22988:	ldr	r1, [pc, #520]	; 22b98 <__flatcc_fb_gen_c_json_parser@@Base+0x10ec>
   2298c:	mov	r0, r4
   22990:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22994:	ldr	r3, [r4, #220]	; 0xdc
   22998:	cmp	r3, #0
   2299c:	beq	232ec <__flatcc_fb_gen_c_json_parser@@Base+0x1840>
   229a0:	sub	r3, r3, #1
   229a4:	str	r3, [r4, #220]	; 0xdc
   229a8:	ldr	r1, [pc, #600]	; 22c08 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   229ac:	mov	r0, r4
   229b0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   229b4:	ldr	r3, [sp, #44]	; 0x2c
   229b8:	cmp	r3, #0
   229bc:	bne	22d6c <__flatcc_fb_gen_c_json_parser@@Base+0x12c0>
   229c0:	ldr	r1, [pc, #468]	; 22b9c <__flatcc_fb_gen_c_json_parser@@Base+0x10f0>
   229c4:	mov	r0, r4
   229c8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   229cc:	ldr	r1, [pc, #508]	; 22bd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   229d0:	mov	r0, r4
   229d4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   229d8:	ldr	r2, [r4, #220]	; 0xdc
   229dc:	mov	r3, #0
   229e0:	str	r2, [r4, #228]	; 0xe4
   229e4:	str	r3, [r4, #220]	; 0xdc
   229e8:	ldr	r1, [pc, #352]	; 22b50 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   229ec:	mov	r0, r4
   229f0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   229f4:	ldr	r3, [r4, #228]	; 0xe4
   229f8:	ldr	r1, [pc, #340]	; 22b54 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   229fc:	str	r3, [r4, #220]	; 0xdc
   22a00:	mov	r0, r4
   22a04:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22a08:	ldr	r3, [r4, #220]	; 0xdc
   22a0c:	cmp	r3, #0
   22a10:	beq	231a0 <__flatcc_fb_gen_c_json_parser@@Base+0x16f4>
   22a14:	sub	r3, r3, #1
   22a18:	str	r3, [r4, #220]	; 0xdc
   22a1c:	ldr	r1, [pc, #484]	; 22c08 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   22a20:	mov	r0, r4
   22a24:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22a28:	mov	r1, sl
   22a2c:	mov	r0, r4
   22a30:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22a34:	add	r2, sp, #52	; 0x34
   22a38:	ldr	r1, [pc, #300]	; 22b6c <__flatcc_fb_gen_c_json_parser@@Base+0x10c0>
   22a3c:	mov	r0, r4
   22a40:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22a44:	ldr	r1, [pc, #408]	; 22be4 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   22a48:	mov	r0, r4
   22a4c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22a50:	ldr	r3, [r4, #220]	; 0xdc
   22a54:	add	r2, sp, #52	; 0x34
   22a58:	add	r3, r3, #1
   22a5c:	str	r3, [r4, #220]	; 0xdc
   22a60:	ldr	r1, [pc, #312]	; 22ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x10f4>
   22a64:	mov	r0, r4
   22a68:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22a6c:	ldr	r3, [r4, #220]	; 0xdc
   22a70:	cmp	r3, #0
   22a74:	beq	23364 <__flatcc_fb_gen_c_json_parser@@Base+0x18b8>
   22a78:	sub	r3, r3, #1
   22a7c:	str	r3, [r4, #220]	; 0xdc
   22a80:	ldr	r1, [pc, #384]	; 22c08 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   22a84:	mov	r0, r4
   22a88:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22a8c:	mov	r0, r4
   22a90:	mov	r1, sl
   22a94:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22a98:	ldr	r0, [sp, #24]
   22a9c:	cmp	r0, #0
   22aa0:	beq	21dd8 <__flatcc_fb_gen_c_json_parser@@Base+0x32c>
   22aa4:	bl	13ed0 <free@plt>
   22aa8:	b	21dd8 <__flatcc_fb_gen_c_json_parser@@Base+0x32c>
   22aac:	strdeq	r5, [r5], -ip
   22ab0:	andeq	r5, r5, r8, lsl ip
   22ab4:	andeq	fp, r4, ip, lsr #24
   22ab8:	andeq	r5, r5, r4, lsr ip
   22abc:	andeq	r5, r5, r4, lsl #25
   22ac0:	andeq	r5, r5, ip, lsr #25
   22ac4:	andeq	r1, r4, ip, lsl #23
   22ac8:	andeq	r3, r4, r8, asr #7
   22acc:	andeq	r5, r5, r8, lsr fp
   22ad0:	andeq	r4, r5, r4, lsr #20
   22ad4:	andeq	r6, r5, r8, lsl #1
   22ad8:	andeq	r5, r5, r4, lsl #31
   22adc:	andeq	r6, r5, r4
   22ae0:	andeq	r5, r5, r0, asr #29
   22ae4:	andeq	r5, r5, r0, asr pc
   22ae8:	andeq	pc, r1, r0, asr #18
   22aec:	andeq	r6, r5, ip, lsl #2
   22af0:	ldrdeq	r0, [r0], -r3
   22af4:	andeq	r0, r2, ip, asr #3
   22af8:	andeq	r0, r2, ip, lsl r0
   22afc:	andeq	r0, r2, r4
   22b00:			; <UNDEFINED> instruction: 0x000205bc
   22b04:	andeq	r0, r2, r4, lsr r0
   22b08:	andeq	r0, r2, r0, lsr #14
   22b0c:	andeq	lr, r1, r4, asr #20
   22b10:	andeq	r4, r5, r8, lsr #29
   22b14:	andeq	r6, r5, r0, lsr #17
   22b18:	andeq	r4, r5, r0, lsl pc
   22b1c:	andeq	r6, r5, r4, asr #21
   22b20:	andeq	r6, r5, r0, ror #21
   22b24:	strdeq	r6, [r5], -ip
   22b28:	andeq	r9, r4, ip, lsr #4
   22b2c:	andeq	r6, r5, r8, lsr fp
   22b30:	andeq	r6, r5, r8, ror r1
   22b34:	strdeq	r6, [r5], -r8
   22b38:	andeq	r6, r5, r4, lsl #4
   22b3c:	andeq	r6, r5, r0, lsr #4
   22b40:	andeq	r6, r5, ip, lsr #4
   22b44:	andeq	r5, r5, ip, ror r2
   22b48:	andeq	r6, r5, ip, ror #4
   22b4c:			; <UNDEFINED> instruction: 0x000562b8
   22b50:	strdeq	r6, [r5], -r4
   22b54:	andeq	r4, r5, ip, lsl #27
   22b58:	strdeq	r6, [r5], -ip
   22b5c:	andeq	r4, r5, r8, ror #21
   22b60:	andeq	r6, r5, r0, lsl #7
   22b64:	andeq	r5, r5, ip, lsr r6
   22b68:	andeq	r6, r5, ip, asr #7
   22b6c:	andeq	r6, r5, r0, lsr #8
   22b70:			; <UNDEFINED> instruction: 0x000564b4
   22b74:	andeq	r6, r5, r8, lsl r5
   22b78:	muleq	r5, ip, r5
   22b7c:	ldrdeq	r6, [r5], -r4
   22b80:	andeq	r6, r5, ip, lsl #13
   22b84:	andeq	r6, r5, r8, asr #13
   22b88:	andeq	r6, r5, r8, ror #13
   22b8c:	andeq	r6, r5, r4, lsr #14
   22b90:	andeq	r5, r5, r4, asr r5
   22b94:	andeq	r6, r5, r0, ror #14
   22b98:	andeq	r5, r5, r4, ror r9
   22b9c:	strdeq	r6, [r5], -ip
   22ba0:	andeq	r6, r5, r0, asr #16
   22ba4:	andeq	r6, r5, r0, lsl #5
   22ba8:	andeq	r6, r5, r0, asr #11
   22bac:	andeq	r0, r0, r7, lsl r5
   22bb0:			; <UNDEFINED> instruction: 0x000567b8
   22bb4:	andeq	r6, r5, r4, lsl r6
   22bb8:	andeq	r6, r5, r0, ror r6
   22bbc:	strdeq	r4, [r5], -ip
   22bc0:	andeq	r4, r5, r0, lsr pc
   22bc4:	andeq	r4, r5, r0, asr pc
   22bc8:	andeq	r4, r5, r4, ror #30
   22bcc:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   22bd0:	andeq	r4, r5, r0, ror sp
   22bd4:	andeq	r0, r0, r3, asr #9
   22bd8:	andeq	r1, r2, r0, lsl #11
   22bdc:	andeq	lr, r1, r0, asr sl
   22be0:	ldrdeq	r6, [r5], -ip
   22be4:	andeq	r7, r5, r0, lsl r4
   22be8:	andeq	r6, r5, r8, lsl #18
   22bec:	andeq	r6, r5, r8, lsr #18
   22bf0:	andeq	r6, r5, r4, asr #18
   22bf4:	andeq	r6, r5, r0, ror #18
   22bf8:	ldrdeq	r6, [r5], -ip
   22bfc:	andeq	r6, r5, r4, lsl sl
   22c00:	andeq	r6, r5, r8, asr #20
   22c04:	andeq	r6, r5, ip, asr sl
   22c08:	strdeq	r4, [r5], -r8
   22c0c:	andeq	r6, r5, r0, ror sl
   22c10:	andeq	r6, r5, r4, lsr #21
   22c14:			; <UNDEFINED> instruction: 0x00056ab8
   22c18:	andeq	r0, r0, lr, asr r6
   22c1c:			; <UNDEFINED> instruction: 0x00055cbc
   22c20:	andeq	r5, r5, r0, asr #25
   22c24:	andeq	r5, r5, r8, lsl sp
   22c28:	andeq	r5, r5, ip, lsl sp
   22c2c:	andeq	r5, r5, r0, ror #26
   22c30:	muleq	r5, r8, sp
   22c34:	andeq	r5, r5, r0, asr #27
   22c38:	andeq	r5, r5, r8, lsl #28
   22c3c:	andeq	r4, r5, r4, asr r7
   22c40:	andeq	r5, r5, r8, asr #28
   22c44:	muleq	r5, r4, lr
   22c48:	andeq	fp, r4, ip, lsr #24
   22c4c:	muleq	r5, ip, r9
   22c50:	andeq	r0, r0, sl, lsr #9
   22c54:	andeq	r0, r0, r3, asr #13
   22c58:	andeq	r0, r0, r1, asr #11
   22c5c:			; <UNDEFINED> instruction: 0x000006b4
   22c60:	andeq	r4, r5, ip, ror #28
   22c64:	andeq	sp, r6, r8, lsr #1
   22c68:			; <UNDEFINED> instruction: 0x00041fbc
   22c6c:	andeq	sl, r4, r4, asr sp
   22c70:	andeq	r0, r0, sl, asr #12
   22c74:	andeq	r0, r0, sp, ror r6
   22c78:	andeq	r0, r0, r1, lsl #13
   22c7c:	muleq	r0, lr, r5
   22c80:	andeq	r0, r0, r5, lsl r5
   22c84:	ldrdeq	r0, [r0], -fp
   22c88:	andeq	r0, r0, lr, ror #10
   22c8c:	muleq	r4, r4, fp
   22c90:	andeq	r0, r0, sl, asr r5
   22c94:	andeq	r0, r0, r9, asr #10
   22c98:	andeq	r2, r4, r8, lsl #6
   22c9c:	andeq	r4, r5, r8, ror r6
   22ca0:	andeq	r0, r0, pc, lsr r5
   22ca4:	andeq	r4, r5, ip, asr r6
   22ca8:	andeq	r0, r0, r6, lsr r5
   22cac:			; <UNDEFINED> instruction: 0x000005b5
   22cb0:			; <UNDEFINED> instruction: 0x000004b5
   22cb4:	andeq	r4, r5, r0, lsr #13
   22cb8:			; <UNDEFINED> instruction: 0x000004ba
   22cbc:	andeq	r4, r5, r0, asr #12
   22cc0:	andeq	r0, r0, sp, ror #12
   22cc4:	ldrdeq	r4, [r5], -r0
   22cc8:	andeq	r0, r0, sl, asr r6
   22ccc:			; <UNDEFINED> instruction: 0x000005b2
   22cd0:	andeq	r4, r5, ip, lsl #13
   22cd4:	andeq	r0, r0, r7, asr #11
   22cd8:	muleq	r5, r4, r7
   22cdc:	andeq	r4, r5, ip, ror #15
   22ce0:			; <UNDEFINED> instruction: 0x000546b8
   22ce4:	mov	r0, r4
   22ce8:	ldr	r1, [pc, #-332]	; 22ba4 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   22cec:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22cf0:	mov	r0, r4
   22cf4:	ldr	r1, [pc, #-304]	; 22bcc <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   22cf8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22cfc:	ldr	r3, [sp, #20]
   22d00:	mov	r2, #0
   22d04:	sub	r3, r3, #1
   22d08:	str	r2, [sp]
   22d0c:	mov	r1, fp
   22d10:	mov	r0, r4
   22d14:	bl	1ee7c <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   22d18:	b	2242c <__flatcc_fb_gen_c_json_parser@@Base+0x980>
   22d1c:	ldr	r3, [sp, #20]
   22d20:	cmp	r3, #0
   22d24:	ble	2232c <__flatcc_fb_gen_c_json_parser@@Base+0x880>
   22d28:	ldr	r1, [pc, #-204]	; 22c64 <__flatcc_fb_gen_c_json_parser@@Base+0x11b8>
   22d2c:	ldr	r2, [pc, #-212]	; 22c60 <__flatcc_fb_gen_c_json_parser@@Base+0x11b4>
   22d30:	ldr	r3, [pc, #-396]	; 22bac <__flatcc_fb_gen_c_json_parser@@Base+0x1100>
   22d34:	ldr	r0, [r1]
   22d38:	str	r2, [sp]
   22d3c:	ldr	r1, [pc, #-220]	; 22c68 <__flatcc_fb_gen_c_json_parser@@Base+0x11bc>
   22d40:	ldr	r2, [pc, #-112]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   22d44:	bl	13f84 <fprintf@plt>
   22d48:	ldr	r3, [pc, #-172]	; 22ca4 <__flatcc_fb_gen_c_json_parser@@Base+0x11f8>
   22d4c:	ldr	r2, [pc, #-424]	; 22bac <__flatcc_fb_gen_c_json_parser@@Base+0x1100>
   22d50:	ldr	r1, [pc, #-128]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   22d54:	ldr	r0, [pc, #-240]	; 22c6c <__flatcc_fb_gen_c_json_parser@@Base+0x11c0>
   22d58:	bl	14038 <__assert_fail@plt>
   22d5c:	ldr	r1, [pc, #-444]	; 22ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x10fc>
   22d60:	mov	r0, r4
   22d64:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22d68:	b	22794 <__flatcc_fb_gen_c_json_parser@@Base+0xce8>
   22d6c:	ldr	r1, [pc, #-452]	; 22bb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1104>
   22d70:	mov	r0, r4
   22d74:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22d78:	b	229c0 <__flatcc_fb_gen_c_json_parser@@Base+0xf14>
   22d7c:	asr	r3, r2, #31
   22d80:	ldr	r1, [pc, #-468]	; 22bb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1108>
   22d84:	mov	r0, r4
   22d88:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22d8c:	b	227c8 <__flatcc_fb_gen_c_json_parser@@Base+0xd1c>
   22d90:	mov	r0, r4
   22d94:	ldr	r1, [pc, #-484]	; 22bb8 <__flatcc_fb_gen_c_json_parser@@Base+0x110c>
   22d98:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22d9c:	ldr	r1, [pc, #-488]	; 22bbc <__flatcc_fb_gen_c_json_parser@@Base+0x1110>
   22da0:	mov	r0, r4
   22da4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22da8:	b	2282c <__flatcc_fb_gen_c_json_parser@@Base+0xd80>
   22dac:	ldr	r1, [pc, #-500]	; 22bc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1114>
   22db0:	mov	r0, r4
   22db4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22db8:	ldr	r1, [pc, #-508]	; 22bc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   22dbc:	mov	r0, r4
   22dc0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22dc4:	ldr	r1, [pc, #-516]	; 22bc8 <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   22dc8:	mov	r0, r4
   22dcc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22dd0:	ldr	r1, [pc, #-400]	; 22c48 <__flatcc_fb_gen_c_json_parser@@Base+0x119c>
   22dd4:	mov	r0, r4
   22dd8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22ddc:	ldr	r1, [pc, #-536]	; 22bcc <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   22de0:	mov	r0, r4
   22de4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22de8:	sub	r3, r9, #1
   22dec:	mov	r2, r5
   22df0:	mov	r1, fp
   22df4:	mov	r0, r4
   22df8:	str	r5, [sp]
   22dfc:	bl	1ee7c <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   22e00:	ldr	r1, [pc, #-568]	; 22bd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   22e04:	mov	r0, r4
   22e08:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22e0c:	ldr	r3, [r4, #220]	; 0xdc
   22e10:	cmp	r3, #0
   22e14:	bne	2209c <__flatcc_fb_gen_c_json_parser@@Base+0x5f0>
   22e18:	ldr	r3, [pc, #-364]	; 22cb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1208>
   22e1c:	ldr	r2, [pc, #-592]	; 22bd4 <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   22e20:	ldr	r1, [pc, #-336]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   22e24:	ldr	r0, [pc, #-336]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   22e28:	bl	14038 <__assert_fail@plt>
   22e2c:	ldr	r3, [sp, #20]
   22e30:	cmp	r3, #0
   22e34:	bgt	231c8 <__flatcc_fb_gen_c_json_parser@@Base+0x171c>
   22e38:	ldr	r2, [pc, #-616]	; 22bd8 <__flatcc_fb_gen_c_json_parser@@Base+0x112c>
   22e3c:	ldr	r3, [pc, #-616]	; 22bdc <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   22e40:	str	r9, [sp, #36]	; 0x24
   22e44:	str	r0, [sp, #40]	; 0x28
   22e48:	str	r0, [sp, #44]	; 0x2c
   22e4c:	str	r2, [sp, #28]
   22e50:	str	r3, [sp, #32]
   22e54:	b	226f8 <__flatcc_fb_gen_c_json_parser@@Base+0xc4c>
   22e58:	mov	r2, #220	; 0xdc
   22e5c:	mov	r1, r6
   22e60:	add	r0, sp, #52	; 0x34
   22e64:	bl	13f9c <memset@plt>
   22e68:	add	r2, sp, #52	; 0x34
   22e6c:	mov	r1, r5
   22e70:	ldr	r0, [r5, #12]
   22e74:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   22e78:	ldr	r3, [r4, #208]	; 0xd0
   22e7c:	ldr	r1, [pc, #-580]	; 22c40 <__flatcc_fb_gen_c_json_parser@@Base+0x1194>
   22e80:	mov	r0, r4
   22e84:	ldr	r2, [r3, #160]	; 0xa0
   22e88:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22e8c:	ldr	r3, [r4, #220]	; 0xdc
   22e90:	ldr	r1, [pc, #-696]	; 22be0 <__flatcc_fb_gen_c_json_parser@@Base+0x1134>
   22e94:	add	r3, r3, #2
   22e98:	str	r3, [r4, #220]	; 0xdc
   22e9c:	mov	r0, r4
   22ea0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22ea4:	ldr	r3, [r4, #220]	; 0xdc
   22ea8:	cmp	r3, #0
   22eac:	beq	231fc <__flatcc_fb_gen_c_json_parser@@Base+0x1750>
   22eb0:	cmp	r3, #1
   22eb4:	streq	r6, [r4, #220]	; 0xdc
   22eb8:	beq	231fc <__flatcc_fb_gen_c_json_parser@@Base+0x1750>
   22ebc:	sub	r3, r3, #2
   22ec0:	str	r3, [r4, #220]	; 0xdc
   22ec4:	ldr	r1, [pc, #-744]	; 22be4 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   22ec8:	mov	r0, r4
   22ecc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22ed0:	ldr	r3, [r4, #220]	; 0xdc
   22ed4:	ldr	r1, [pc, #-756]	; 22be8 <__flatcc_fb_gen_c_json_parser@@Base+0x113c>
   22ed8:	add	r3, r3, #1
   22edc:	str	r3, [r4, #220]	; 0xdc
   22ee0:	mov	r0, r4
   22ee4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22ee8:	ldr	r1, [pc, #-772]	; 22bec <__flatcc_fb_gen_c_json_parser@@Base+0x1140>
   22eec:	mov	r0, r4
   22ef0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22ef4:	ldr	r1, [pc, #-692]	; 22c48 <__flatcc_fb_gen_c_json_parser@@Base+0x119c>
   22ef8:	mov	r0, r4
   22efc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22f00:	ldr	r1, [pc, #-792]	; 22bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   22f04:	mov	r0, r4
   22f08:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22f0c:	ldr	r1, [pc, #-800]	; 22bf4 <__flatcc_fb_gen_c_json_parser@@Base+0x1148>
   22f10:	mov	r0, r4
   22f14:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22f18:	ldr	r2, [r4, #208]	; 0xd0
   22f1c:	ldrh	r3, [r2, #16]
   22f20:	cmp	r3, #2
   22f24:	beq	230a4 <__flatcc_fb_gen_c_json_parser@@Base+0x15f8>
   22f28:	ldr	r1, [pc, #-824]	; 22bf8 <__flatcc_fb_gen_c_json_parser@@Base+0x114c>
   22f2c:	mov	r0, r4
   22f30:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22f34:	add	r2, sp, #52	; 0x34
   22f38:	ldr	r1, [pc, #-836]	; 22bfc <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   22f3c:	mov	r0, r4
   22f40:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22f44:	ldr	r1, [pc, #-844]	; 22c00 <__flatcc_fb_gen_c_json_parser@@Base+0x1154>
   22f48:	mov	r0, r4
   22f4c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22f50:	ldr	r3, [r4, #220]	; 0xdc
   22f54:	ldr	r1, [pc, #-856]	; 22c04 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   22f58:	add	r3, r3, #1
   22f5c:	str	r3, [r4, #220]	; 0xdc
   22f60:	mov	r0, r4
   22f64:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22f68:	ldr	r3, [r4, #220]	; 0xdc
   22f6c:	cmp	r3, #0
   22f70:	beq	2333c <__flatcc_fb_gen_c_json_parser@@Base+0x1890>
   22f74:	sub	r3, r3, #1
   22f78:	str	r3, [r4, #220]	; 0xdc
   22f7c:	ldr	r1, [pc, #-892]	; 22c08 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   22f80:	mov	r0, r4
   22f84:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22f88:	ldr	r1, [pc, #-900]	; 22c0c <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   22f8c:	mov	r0, r4
   22f90:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22f94:	ldr	r1, [pc, #-908]	; 22c10 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   22f98:	mov	r0, r4
   22f9c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22fa0:	ldr	r1, [pc, #-916]	; 22c14 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   22fa4:	mov	r0, r4
   22fa8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22fac:	ldr	r3, [r4, #220]	; 0xdc
   22fb0:	cmp	r3, #0
   22fb4:	bne	22284 <__flatcc_fb_gen_c_json_parser@@Base+0x7d8>
   22fb8:	ldr	r3, [pc, #-736]	; 22ce0 <__flatcc_fb_gen_c_json_parser@@Base+0x1234>
   22fbc:	ldr	r2, [pc, #-940]	; 22c18 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   22fc0:	ldr	r1, [pc, #-752]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   22fc4:	ldr	r0, [pc, #-752]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   22fc8:	bl	14038 <__assert_fail@plt>
   22fcc:	ldr	r1, [pc, #-952]	; 22c1c <__flatcc_fb_gen_c_json_parser@@Base+0x1170>
   22fd0:	mov	r0, r4
   22fd4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22fd8:	ldr	r1, [pc, #-960]	; 22c20 <__flatcc_fb_gen_c_json_parser@@Base+0x1174>
   22fdc:	mov	r0, r4
   22fe0:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22fe4:	ldr	r1, [pc, #-968]	; 22c24 <__flatcc_fb_gen_c_json_parser@@Base+0x1178>
   22fe8:	mov	r0, r4
   22fec:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22ff0:	ldr	r1, [pc, #-976]	; 22c28 <__flatcc_fb_gen_c_json_parser@@Base+0x117c>
   22ff4:	mov	r0, r4
   22ff8:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22ffc:	ldr	r1, [pc, #-984]	; 22c2c <__flatcc_fb_gen_c_json_parser@@Base+0x1180>
   23000:	mov	r0, r4
   23004:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23008:	ldr	r1, [pc, #-992]	; 22c30 <__flatcc_fb_gen_c_json_parser@@Base+0x1184>
   2300c:	mov	r0, r4
   23010:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23014:	ldr	r1, [pc, #-1000]	; 22c34 <__flatcc_fb_gen_c_json_parser@@Base+0x1188>
   23018:	mov	r0, r4
   2301c:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23020:	ldr	r1, [pc, #-1008]	; 22c38 <__flatcc_fb_gen_c_json_parser@@Base+0x118c>
   23024:	mov	r0, r4
   23028:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2302c:	ldr	r1, [pc, #-1016]	; 22c3c <__flatcc_fb_gen_c_json_parser@@Base+0x1190>
   23030:	mov	r0, r4
   23034:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23038:	ldr	r3, [r4, #208]	; 0xd0
   2303c:	ldr	r1, [pc, #-1028]	; 22c40 <__flatcc_fb_gen_c_json_parser@@Base+0x1194>
   23040:	mov	r0, r4
   23044:	ldr	r2, [r3, #160]	; 0xa0
   23048:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2304c:	ldr	r3, [r4, #220]	; 0xdc
   23050:	ldr	r1, [pc, #-1044]	; 22c44 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   23054:	add	r3, r3, #2
   23058:	str	r3, [r4, #220]	; 0xdc
   2305c:	mov	r0, r4
   23060:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23064:	ldr	r3, [r4, #220]	; 0xdc
   23068:	cmp	r3, #0
   2306c:	beq	231b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1708>
   23070:	cmp	r3, #1
   23074:	moveq	r3, #0
   23078:	streq	r3, [r4, #220]	; 0xdc
   2307c:	beq	231b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1708>
   23080:	sub	r3, r3, #2
   23084:	str	r3, [r4, #220]	; 0xdc
   23088:	ldr	r1, [pc, #-1096]	; 22c48 <__flatcc_fb_gen_c_json_parser@@Base+0x119c>
   2308c:	mov	r0, r4
   23090:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23094:	ldr	r6, [r4, #208]	; 0xd0
   23098:	b	21b78 <__flatcc_fb_gen_c_json_parser@@Base+0xcc>
   2309c:	str	r9, [sp, #24]
   230a0:	b	21fec <__flatcc_fb_gen_c_json_parser@@Base+0x540>
   230a4:	ldr	r3, [r2, #8]
   230a8:	ldr	r1, [pc, #-1124]	; 22c4c <__flatcc_fb_gen_c_json_parser@@Base+0x11a0>
   230ac:	ldr	r2, [r2, #12]
   230b0:	mov	r0, r4
   230b4:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   230b8:	b	22f34 <__flatcc_fb_gen_c_json_parser@@Base+0x1488>
   230bc:	ldr	r3, [r2, #8]
   230c0:	ldr	r1, [pc, #-1148]	; 22c4c <__flatcc_fb_gen_c_json_parser@@Base+0x11a0>
   230c4:	ldr	r2, [r2, #12]
   230c8:	mov	r0, r4
   230cc:	bl	1e958 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   230d0:	b	22200 <__flatcc_fb_gen_c_json_parser@@Base+0x754>
   230d4:	cmp	r9, #0
   230d8:	str	sl, [sp, #24]
   230dc:	ble	21fec <__flatcc_fb_gen_c_json_parser@@Base+0x540>
   230e0:	ldr	r0, [sp, #68]	; 0x44
   230e4:	cmp	r0, #0
   230e8:	beq	230f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1644>
   230ec:	bl	13ed0 <free@plt>
   230f0:	ldr	r0, [sp, #72]	; 0x48
   230f4:	cmp	r0, #0
   230f8:	beq	23100 <__flatcc_fb_gen_c_json_parser@@Base+0x1654>
   230fc:	bl	13ed0 <free@plt>
   23100:	ldr	r0, [sp, #76]	; 0x4c
   23104:	cmp	r0, #0
   23108:	beq	23110 <__flatcc_fb_gen_c_json_parser@@Base+0x1664>
   2310c:	bl	13ed0 <free@plt>
   23110:	mov	r2, #44	; 0x2c
   23114:	mov	r1, #0
   23118:	add	r0, sp, #52	; 0x34
   2311c:	bl	13f9c <memset@plt>
   23120:	ldr	r1, [pc, #-1220]	; 22c64 <__flatcc_fb_gen_c_json_parser@@Base+0x11b8>
   23124:	ldr	r2, [pc, #-1228]	; 22c60 <__flatcc_fb_gen_c_json_parser@@Base+0x11b4>
   23128:	ldr	r3, [pc, #-1248]	; 22c50 <__flatcc_fb_gen_c_json_parser@@Base+0x11a4>
   2312c:	ldr	r0, [r1]
   23130:	str	r2, [sp]
   23134:	ldr	r1, [pc, #-1236]	; 22c68 <__flatcc_fb_gen_c_json_parser@@Base+0x11bc>
   23138:	ldr	r2, [pc, #-1128]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   2313c:	bl	13f84 <fprintf@plt>
   23140:	ldr	r3, [pc, #-1172]	; 22cb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1208>
   23144:	ldr	r2, [pc, #-1276]	; 22c50 <__flatcc_fb_gen_c_json_parser@@Base+0x11a4>
   23148:	ldr	r1, [pc, #-1144]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   2314c:	ldr	r0, [pc, #-1256]	; 22c6c <__flatcc_fb_gen_c_json_parser@@Base+0x11c0>
   23150:	bl	14038 <__assert_fail@plt>
   23154:	cmp	r6, #0
   23158:	beq	23164 <__flatcc_fb_gen_c_json_parser@@Base+0x16b8>
   2315c:	mov	r0, r6
   23160:	bl	13ed0 <free@plt>
   23164:	cmp	r9, #0
   23168:	beq	23174 <__flatcc_fb_gen_c_json_parser@@Base+0x16c8>
   2316c:	mov	r0, r9
   23170:	bl	13ed0 <free@plt>
   23174:	cmp	r8, #0
   23178:	beq	220fc <__flatcc_fb_gen_c_json_parser@@Base+0x650>
   2317c:	mov	r0, r8
   23180:	b	220f8 <__flatcc_fb_gen_c_json_parser@@Base+0x64c>
   23184:	mov	r3, #0
   23188:	str	r3, [r4, #220]	; 0xdc
   2318c:	ldr	r3, [pc, #-1240]	; 22cbc <__flatcc_fb_gen_c_json_parser@@Base+0x1210>
   23190:	ldr	r2, [pc, #-1348]	; 22c54 <__flatcc_fb_gen_c_json_parser@@Base+0x11a8>
   23194:	ldr	r1, [pc, #-1220]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   23198:	ldr	r0, [pc, #-1220]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   2319c:	bl	14038 <__assert_fail@plt>
   231a0:	ldr	r3, [pc, #-1240]	; 22cd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   231a4:	ldr	r2, [pc, #-1364]	; 22c58 <__flatcc_fb_gen_c_json_parser@@Base+0x11ac>
   231a8:	ldr	r1, [pc, #-1240]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   231ac:	ldr	r0, [pc, #-1240]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   231b0:	bl	14038 <__assert_fail@plt>
   231b4:	ldr	r3, [pc, #-1280]	; 22cbc <__flatcc_fb_gen_c_json_parser@@Base+0x1210>
   231b8:	ldr	r2, [pc, #-1380]	; 22c5c <__flatcc_fb_gen_c_json_parser@@Base+0x11b0>
   231bc:	ldr	r1, [pc, #-1260]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   231c0:	ldr	r0, [pc, #-1260]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   231c4:	bl	14038 <__assert_fail@plt>
   231c8:	ldr	r1, [pc, #-1388]	; 22c64 <__flatcc_fb_gen_c_json_parser@@Base+0x11b8>
   231cc:	ldr	r2, [pc, #-1396]	; 22c60 <__flatcc_fb_gen_c_json_parser@@Base+0x11b4>
   231d0:	mov	r3, #1392	; 0x570
   231d4:	ldr	r0, [r1]
   231d8:	str	r2, [sp]
   231dc:	ldr	r1, [pc, #-1404]	; 22c68 <__flatcc_fb_gen_c_json_parser@@Base+0x11bc>
   231e0:	ldr	r2, [pc, #-1296]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   231e4:	bl	13f84 <fprintf@plt>
   231e8:	ldr	r3, [pc, #-1312]	; 22cd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   231ec:	mov	r2, #1392	; 0x570
   231f0:	ldr	r1, [pc, #-1312]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   231f4:	ldr	r0, [pc, #-1424]	; 22c6c <__flatcc_fb_gen_c_json_parser@@Base+0x11c0>
   231f8:	bl	14038 <__assert_fail@plt>
   231fc:	ldr	r3, [pc, #-1316]	; 22ce0 <__flatcc_fb_gen_c_json_parser@@Base+0x1234>
   23200:	ldr	r2, [pc, #-1432]	; 22c70 <__flatcc_fb_gen_c_json_parser@@Base+0x11c4>
   23204:	ldr	r1, [pc, #-1332]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   23208:	ldr	r0, [pc, #-1332]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   2320c:	bl	14038 <__assert_fail@plt>
   23210:	ldr	r3, [pc, #-1364]	; 22cc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1218>
   23214:	ldr	r2, [pc, #-1448]	; 22c74 <__flatcc_fb_gen_c_json_parser@@Base+0x11c8>
   23218:	ldr	r1, [pc, #-1352]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   2321c:	ldr	r0, [pc, #-1352]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   23220:	bl	14038 <__assert_fail@plt>
   23224:	ldr	r3, [pc, #-1384]	; 22cc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1218>
   23228:	ldr	r2, [pc, #-1464]	; 22c78 <__flatcc_fb_gen_c_json_parser@@Base+0x11cc>
   2322c:	ldr	r1, [pc, #-1372]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   23230:	ldr	r0, [pc, #-1372]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   23234:	bl	14038 <__assert_fail@plt>
   23238:	ldr	r3, [pc, #-1392]	; 22cd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   2323c:	ldr	r2, [pc, #-1480]	; 22c7c <__flatcc_fb_gen_c_json_parser@@Base+0x11d0>
   23240:	ldr	r1, [pc, #-1392]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   23244:	ldr	r0, [pc, #-1392]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   23248:	bl	14038 <__assert_fail@plt>
   2324c:	ldr	r3, [pc, #-1456]	; 22ca4 <__flatcc_fb_gen_c_json_parser@@Base+0x11f8>
   23250:	ldr	r2, [pc, #-1496]	; 22c80 <__flatcc_fb_gen_c_json_parser@@Base+0x11d4>
   23254:	ldr	r1, [pc, #-1412]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   23258:	ldr	r0, [pc, #-1480]	; 22c98 <__flatcc_fb_gen_c_json_parser@@Base+0x11ec>
   2325c:	bl	14038 <__assert_fail@plt>
   23260:	ldr	r3, [pc, #-1452]	; 22cbc <__flatcc_fb_gen_c_json_parser@@Base+0x1210>
   23264:	ldr	r2, [pc, #-1512]	; 22c84 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   23268:	ldr	r1, [pc, #-1432]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   2326c:	ldr	r0, [pc, #-1432]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   23270:	bl	14038 <__assert_fail@plt>
   23274:	ldr	r3, [pc, #-1452]	; 22cd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   23278:	ldr	r2, [pc, #-1528]	; 22c88 <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   2327c:	ldr	r1, [pc, #-1452]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   23280:	ldr	r0, [pc, #-1532]	; 22c8c <__flatcc_fb_gen_c_json_parser@@Base+0x11e0>
   23284:	bl	14038 <__assert_fail@plt>
   23288:	ldr	r3, [pc, #-1524]	; 22c9c <__flatcc_fb_gen_c_json_parser@@Base+0x11f0>
   2328c:	mov	r2, #1376	; 0x560
   23290:	ldr	r1, [pc, #-1472]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   23294:	ldr	r0, [pc, #-1472]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   23298:	bl	14038 <__assert_fail@plt>
   2329c:	ldr	r3, [pc, #-1544]	; 22c9c <__flatcc_fb_gen_c_json_parser@@Base+0x11f0>
   232a0:	ldr	r2, [pc, #-1560]	; 22c90 <__flatcc_fb_gen_c_json_parser@@Base+0x11e4>
   232a4:	ldr	r1, [pc, #-1492]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   232a8:	ldr	r0, [pc, #-1492]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   232ac:	bl	14038 <__assert_fail@plt>
   232b0:	ldr	r3, [pc, #-1564]	; 22c9c <__flatcc_fb_gen_c_json_parser@@Base+0x11f0>
   232b4:	ldr	r2, [pc, #-1576]	; 22c94 <__flatcc_fb_gen_c_json_parser@@Base+0x11e8>
   232b8:	ldr	r1, [pc, #-1512]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   232bc:	ldr	r0, [pc, #-1580]	; 22c98 <__flatcc_fb_gen_c_json_parser@@Base+0x11ec>
   232c0:	bl	14038 <__assert_fail@plt>
   232c4:	ldr	r3, [pc, #-1576]	; 22ca4 <__flatcc_fb_gen_c_json_parser@@Base+0x11f8>
   232c8:	ldr	r2, [pc, #-1584]	; 22ca0 <__flatcc_fb_gen_c_json_parser@@Base+0x11f4>
   232cc:	ldr	r1, [pc, #-1532]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   232d0:	ldr	r0, [pc, #-1532]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   232d4:	bl	14038 <__assert_fail@plt>
   232d8:	ldr	r3, [pc, #-1596]	; 22ca4 <__flatcc_fb_gen_c_json_parser@@Base+0x11f8>
   232dc:	ldr	r2, [pc, #-1596]	; 22ca8 <__flatcc_fb_gen_c_json_parser@@Base+0x11fc>
   232e0:	ldr	r1, [pc, #-1552]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   232e4:	ldr	r0, [pc, #-1552]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   232e8:	bl	14038 <__assert_fail@plt>
   232ec:	ldr	r3, [pc, #-1572]	; 22cd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   232f0:	ldr	r2, [pc, #-1612]	; 22cac <__flatcc_fb_gen_c_json_parser@@Base+0x1200>
   232f4:	ldr	r1, [pc, #-1572]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   232f8:	ldr	r0, [pc, #-1572]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   232fc:	bl	14038 <__assert_fail@plt>
   23300:	ldr	r3, [pc, #-1620]	; 22cb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1208>
   23304:	ldr	r2, [pc, #-1628]	; 22cb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1204>
   23308:	ldr	r1, [pc, #-1592]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   2330c:	ldr	r0, [pc, #-1592]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   23310:	bl	14038 <__assert_fail@plt>
   23314:	ldr	r3, [pc, #-1640]	; 22cb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1208>
   23318:	ldr	r2, [pc, #-1640]	; 22cb8 <__flatcc_fb_gen_c_json_parser@@Base+0x120c>
   2331c:	ldr	r1, [pc, #-1612]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   23320:	ldr	r0, [pc, #-1612]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   23324:	bl	14038 <__assert_fail@plt>
   23328:	ldr	r3, [pc, #-1644]	; 22cc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1218>
   2332c:	ldr	r2, [pc, #-1652]	; 22cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1214>
   23330:	ldr	r1, [pc, #-1632]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   23334:	ldr	r0, [pc, #-1632]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   23338:	bl	14038 <__assert_fail@plt>
   2333c:	ldr	r3, [pc, #-1636]	; 22ce0 <__flatcc_fb_gen_c_json_parser@@Base+0x1234>
   23340:	ldr	r2, [pc, #-1664]	; 22cc8 <__flatcc_fb_gen_c_json_parser@@Base+0x121c>
   23344:	ldr	r1, [pc, #-1652]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   23348:	ldr	r0, [pc, #-1652]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   2334c:	bl	14038 <__assert_fail@plt>
   23350:	ldr	r3, [pc, #-1672]	; 22cd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   23354:	ldr	r2, [pc, #-1680]	; 22ccc <__flatcc_fb_gen_c_json_parser@@Base+0x1220>
   23358:	ldr	r1, [pc, #-1672]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   2335c:	ldr	r0, [pc, #-1672]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   23360:	bl	14038 <__assert_fail@plt>
   23364:	ldr	r3, [pc, #-1692]	; 22cd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   23368:	ldr	r2, [pc, #-1692]	; 22cd4 <__flatcc_fb_gen_c_json_parser@@Base+0x1228>
   2336c:	ldr	r1, [pc, #-1692]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   23370:	ldr	r0, [pc, #-1692]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   23374:	bl	14038 <__assert_fail@plt>
   23378:	push	{r4, r5, r6, r7, r8, lr}
   2337c:	sub	sp, sp, #448	; 0x1c0
   23380:	mov	r4, r1
   23384:	mov	r5, r0
   23388:	mov	r2, #220	; 0xdc
   2338c:	mov	r1, #0
   23390:	add	r0, sp, #8
   23394:	bl	13f9c <memset@plt>
   23398:	mov	r2, #220	; 0xdc
   2339c:	mov	r1, #0
   233a0:	add	r0, sp, #228	; 0xe4
   233a4:	bl	13f9c <memset@plt>
   233a8:	mov	r1, r4
   233ac:	ldr	r0, [r4, #12]
   233b0:	add	r2, sp, #8
   233b4:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   233b8:	add	r2, sp, #8
   233bc:	ldr	r0, [r5]
   233c0:	ldr	r1, [pc, #348]	; 23524 <__flatcc_fb_gen_c_json_parser@@Base+0x1a78>
   233c4:	bl	13f84 <fprintf@plt>
   233c8:	ldr	r4, [r4, #20]
   233cc:	cmp	r4, #0
   233d0:	beq	23478 <__flatcc_fb_gen_c_json_parser@@Base+0x19cc>
   233d4:	ldr	r6, [pc, #332]	; 23528 <__flatcc_fb_gen_c_json_parser@@Base+0x1a7c>
   233d8:	ldr	r8, [pc, #332]	; 2352c <__flatcc_fb_gen_c_json_parser@@Base+0x1a80>
   233dc:	ldr	r7, [pc, #332]	; 23530 <__flatcc_fb_gen_c_json_parser@@Base+0x1a84>
   233e0:	ldrh	r3, [r4, #24]
   233e4:	cmp	r3, #10
   233e8:	beq	234ac <__flatcc_fb_gen_c_json_parser@@Base+0x1a00>
   233ec:	cmp	r3, #14
   233f0:	beq	23430 <__flatcc_fb_gen_c_json_parser@@Base+0x1984>
   233f4:	cmp	r3, #0
   233f8:	beq	2346c <__flatcc_fb_gen_c_json_parser@@Base+0x19c0>
   233fc:	ldr	r1, [pc, #304]	; 23534 <__flatcc_fb_gen_c_json_parser@@Base+0x1a88>
   23400:	ldr	r2, [pc, #304]	; 23538 <__flatcc_fb_gen_c_json_parser@@Base+0x1a8c>
   23404:	mov	r3, #251	; 0xfb
   23408:	ldr	r0, [r1]
   2340c:	str	r2, [sp]
   23410:	ldr	r1, [pc, #292]	; 2353c <__flatcc_fb_gen_c_json_parser@@Base+0x1a90>
   23414:	ldr	r2, [pc, #292]	; 23540 <__flatcc_fb_gen_c_json_parser@@Base+0x1a94>
   23418:	bl	13f84 <fprintf@plt>
   2341c:	ldr	r3, [pc, #288]	; 23544 <__flatcc_fb_gen_c_json_parser@@Base+0x1a98>
   23420:	mov	r2, #251	; 0xfb
   23424:	ldr	r1, [pc, #276]	; 23540 <__flatcc_fb_gen_c_json_parser@@Base+0x1a94>
   23428:	ldr	r0, [pc, #280]	; 23548 <__flatcc_fb_gen_c_json_parser@@Base+0x1a9c>
   2342c:	bl	14038 <__assert_fail@plt>
   23430:	ldr	r1, [r4, #16]
   23434:	add	r2, sp, #228	; 0xe4
   23438:	ldr	r0, [r1, #12]
   2343c:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   23440:	ldr	r3, [r4, #16]
   23444:	ldrh	r3, [r3, #8]
   23448:	cmp	r3, #0
   2344c:	beq	234cc <__flatcc_fb_gen_c_json_parser@@Base+0x1a20>
   23450:	cmp	r3, #1
   23454:	bne	234f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a44>
   23458:	add	r3, sp, #228	; 0xe4
   2345c:	ldr	r2, [r4, #48]	; 0x30
   23460:	mov	r1, r7
   23464:	ldr	r0, [r5]
   23468:	bl	13f84 <fprintf@plt>
   2346c:	ldr	r4, [r4]
   23470:	cmp	r4, #0
   23474:	bne	233e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1934>
   23478:	ldr	r3, [r5]
   2347c:	mov	r2, #28
   23480:	mov	r1, #1
   23484:	ldr	r0, [pc, #192]	; 2354c <__flatcc_fb_gen_c_json_parser@@Base+0x1aa0>
   23488:	bl	13f18 <fwrite@plt>
   2348c:	ldr	r3, [r5]
   23490:	mov	r2, #9
   23494:	mov	r1, #1
   23498:	ldr	r0, [pc, #176]	; 23550 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa4>
   2349c:	bl	13f18 <fwrite@plt>
   234a0:	mov	r0, #0
   234a4:	add	sp, sp, #448	; 0x1c0
   234a8:	pop	{r4, r5, r6, r7, r8, pc}
   234ac:	ldr	r2, [r4, #48]	; 0x30
   234b0:	mov	r1, r6
   234b4:	ldr	r0, [r5]
   234b8:	bl	13f84 <fprintf@plt>
   234bc:	ldr	r4, [r4]
   234c0:	cmp	r4, #0
   234c4:	bne	233e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1934>
   234c8:	b	23478 <__flatcc_fb_gen_c_json_parser@@Base+0x19cc>
   234cc:	ldr	r2, [r4, #48]	; 0x30
   234d0:	add	r3, sp, #228	; 0xe4
   234d4:	mov	r1, r8
   234d8:	ldr	r0, [r5]
   234dc:	bl	13f84 <fprintf@plt>
   234e0:	ldr	r4, [r4]
   234e4:	cmp	r4, #0
   234e8:	bne	233e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1934>
   234ec:	b	23478 <__flatcc_fb_gen_c_json_parser@@Base+0x19cc>
   234f0:	ldr	r1, [pc, #60]	; 23534 <__flatcc_fb_gen_c_json_parser@@Base+0x1a88>
   234f4:	ldr	r2, [pc, #60]	; 23538 <__flatcc_fb_gen_c_json_parser@@Base+0x1a8c>
   234f8:	mov	r3, #240	; 0xf0
   234fc:	ldr	r0, [r1]
   23500:	str	r2, [sp]
   23504:	ldr	r1, [pc, #48]	; 2353c <__flatcc_fb_gen_c_json_parser@@Base+0x1a90>
   23508:	ldr	r2, [pc, #48]	; 23540 <__flatcc_fb_gen_c_json_parser@@Base+0x1a94>
   2350c:	bl	13f84 <fprintf@plt>
   23510:	ldr	r3, [pc, #44]	; 23544 <__flatcc_fb_gen_c_json_parser@@Base+0x1a98>
   23514:	mov	r2, #240	; 0xf0
   23518:	ldr	r1, [pc, #32]	; 23540 <__flatcc_fb_gen_c_json_parser@@Base+0x1a94>
   2351c:	ldr	r0, [pc, #36]	; 23548 <__flatcc_fb_gen_c_json_parser@@Base+0x1a9c>
   23520:	bl	14038 <__assert_fail@plt>
   23524:	andeq	r6, r5, r0, lsl #24
   23528:	strdeq	r6, [r5], -ip
   2352c:			; <UNDEFINED> instruction: 0x00056cb0
   23530:	andeq	r6, r5, r4, lsl sp
   23534:	andeq	sp, r6, r8, lsr #1
   23538:	ldrdeq	r6, [r5], -r4
   2353c:			; <UNDEFINED> instruction: 0x00041fbc
   23540:	andeq	r6, r5, ip, ror sp
   23544:	andeq	r6, r5, r8, asr fp
   23548:	andeq	sl, r4, r4, asr sp
   2354c:	andeq	r6, r5, r4, lsl #25
   23550:	andeq	r6, r5, r4, lsr #25
   23554:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23558:	sub	sp, sp, #468	; 0x1d4
   2355c:	mov	r4, r1
   23560:	mov	r6, r0
   23564:	mov	r2, #220	; 0xdc
   23568:	mov	r1, #0
   2356c:	add	r0, sp, #24
   23570:	bl	13f9c <memset@plt>
   23574:	mov	r2, #220	; 0xdc
   23578:	mov	r1, #0
   2357c:	add	r0, sp, #244	; 0xf4
   23580:	bl	13f9c <memset@plt>
   23584:	mov	r1, r4
   23588:	ldr	r0, [r4, #12]
   2358c:	add	r2, sp, #24
   23590:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   23594:	add	r2, sp, #24
   23598:	ldr	r0, [r6]
   2359c:	ldr	r1, [pc, #716]	; 23870 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc4>
   235a0:	bl	13f84 <fprintf@plt>
   235a4:	ldr	r4, [r4, #20]
   235a8:	cmp	r4, #0
   235ac:	beq	2368c <__flatcc_fb_gen_c_json_parser@@Base+0x1be0>
   235b0:	ldr	r7, [pc, #700]	; 23874 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc8>
   235b4:	ldr	r8, [pc, #700]	; 23878 <__flatcc_fb_gen_c_json_parser@@Base+0x1dcc>
   235b8:	ldr	r9, [pc, #700]	; 2387c <__flatcc_fb_gen_c_json_parser@@Base+0x1dd0>
   235bc:	mov	r5, #0
   235c0:	ldrh	r3, [r4, #72]	; 0x48
   235c4:	tst	r3, #4
   235c8:	bne	2367c <__flatcc_fb_gen_c_json_parser@@Base+0x1bd0>
   235cc:	ldrh	r3, [r4, #24]
   235d0:	cmp	r3, #8
   235d4:	beq	236c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1c14>
   235d8:	cmp	r3, #14
   235dc:	bne	2367c <__flatcc_fb_gen_c_json_parser@@Base+0x1bd0>
   235e0:	ldr	r1, [r4, #16]
   235e4:	add	r2, sp, #244	; 0xf4
   235e8:	ldr	r0, [r1, #12]
   235ec:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   235f0:	ldr	r2, [r4, #16]
   235f4:	ldrh	r3, [r2, #8]
   235f8:	cmp	r3, #1
   235fc:	beq	23700 <__flatcc_fb_gen_c_json_parser@@Base+0x1c54>
   23600:	cmp	r3, #3
   23604:	bne	2367c <__flatcc_fb_gen_c_json_parser@@Base+0x1bd0>
   23608:	ldr	r3, [r2, #40]	; 0x28
   2360c:	sub	r3, r3, #1
   23610:	cmp	r3, #10
   23614:	ldrls	pc, [pc, r3, lsl #2]
   23618:	b	2379c <__flatcc_fb_gen_c_json_parser@@Base+0x1cf0>
   2361c:	andeq	r3, r2, r0, lsr #16
   23620:	andeq	r3, r2, r8, ror #16
   23624:	ldrdeq	r3, [r2], -r0
   23628:	andeq	r3, r2, r8, asr r8
   2362c:	andeq	r3, r2, r0, ror #16
   23630:	andeq	r3, r2, r8, lsr r8
   23634:	andeq	r3, r2, r0, asr #16
   23638:	andeq	r3, r2, r8, asr #16
   2363c:	andeq	r3, r2, r0, asr r8
   23640:	andeq	r3, r2, r8, lsr #16
   23644:	andeq	r3, r2, r0, lsr r8
   23648:	mov	r2, r8
   2364c:	ldr	r1, [r4, #4]
   23650:	ldr	r0, [r6]
   23654:	ldr	r3, [r1, #4]
   23658:	str	r3, [sp, #16]
   2365c:	ldr	r1, [r1]
   23660:	str	r3, [sp, #8]
   23664:	str	r1, [sp, #12]
   23668:	ldrd	sl, [r4, #80]	; 0x50
   2366c:	mov	r3, r5
   23670:	mov	r1, r7
   23674:	strd	sl, [sp]
   23678:	bl	13f84 <fprintf@plt>
   2367c:	ldr	r4, [r4]
   23680:	add	r5, r5, #1
   23684:	cmp	r4, #0
   23688:	bne	235c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b14>
   2368c:	ldr	r3, [r6]
   23690:	mov	r2, #3
   23694:	mov	r1, #1
   23698:	ldr	r0, [pc, #480]	; 23880 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd4>
   2369c:	bl	13f18 <fwrite@plt>
   236a0:	add	r3, sp, #24
   236a4:	mov	r2, r3
   236a8:	ldr	r0, [r6]
   236ac:	ldr	r1, [pc, #464]	; 23884 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd8>
   236b0:	bl	13f84 <fprintf@plt>
   236b4:	mov	r0, #0
   236b8:	add	sp, sp, #468	; 0x1d4
   236bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   236c0:	ldr	r3, [r4, #16]
   236c4:	sub	r3, r3, #1
   236c8:	cmp	r3, #10
   236cc:	ldrls	pc, [pc, r3, lsl #2]
   236d0:	b	2379c <__flatcc_fb_gen_c_json_parser@@Base+0x1cf0>
   236d4:	andeq	r3, r2, ip, ror #14
   236d8:	andeq	r3, r2, r4, ror r7
   236dc:	andeq	r3, r2, r8, asr #12
   236e0:	andeq	r3, r2, ip, asr #14
   236e4:	andeq	r3, r2, r4, asr r7
   236e8:	andeq	r3, r2, ip, asr r7
   236ec:	andeq	r3, r2, r4, ror #14
   236f0:	andeq	r3, r2, ip, ror r7
   236f4:	andeq	r3, r2, r4, lsl #15
   236f8:	andeq	r3, r2, ip, lsl #15
   236fc:	muleq	r2, r4, r7
   23700:	ldr	r1, [r4, #4]
   23704:	add	ip, sp, #244	; 0xf4
   23708:	ldr	r0, [r6]
   2370c:	ldr	r3, [r1, #4]
   23710:	str	ip, [sp, #20]
   23714:	str	r3, [sp, #16]
   23718:	ldr	r1, [r1]
   2371c:	str	r3, [sp, #8]
   23720:	str	r1, [sp, #12]
   23724:	ldrd	sl, [r4, #80]	; 0x50
   23728:	mov	r2, r5
   2372c:	ldr	r1, [pc, #340]	; 23888 <__flatcc_fb_gen_c_json_parser@@Base+0x1ddc>
   23730:	strd	sl, [sp]
   23734:	bl	13f84 <fprintf@plt>
   23738:	ldr	r4, [r4]
   2373c:	add	r5, r5, #1
   23740:	cmp	r4, #0
   23744:	bne	235c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b14>
   23748:	b	2368c <__flatcc_fb_gen_c_json_parser@@Base+0x1be0>
   2374c:	ldr	r2, [pc, #312]	; 2388c <__flatcc_fb_gen_c_json_parser@@Base+0x1de0>
   23750:	b	2364c <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   23754:	ldr	r2, [pc, #308]	; 23890 <__flatcc_fb_gen_c_json_parser@@Base+0x1de4>
   23758:	b	2364c <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   2375c:	ldr	r2, [pc, #304]	; 23894 <__flatcc_fb_gen_c_json_parser@@Base+0x1de8>
   23760:	b	2364c <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   23764:	ldr	r2, [pc, #300]	; 23898 <__flatcc_fb_gen_c_json_parser@@Base+0x1dec>
   23768:	b	2364c <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   2376c:	ldr	r2, [pc, #296]	; 2389c <__flatcc_fb_gen_c_json_parser@@Base+0x1df0>
   23770:	b	2364c <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   23774:	ldr	r2, [pc, #292]	; 238a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1df4>
   23778:	b	2364c <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   2377c:	ldr	r2, [pc, #288]	; 238a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1df8>
   23780:	b	2364c <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   23784:	ldr	r2, [pc, #284]	; 238a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1dfc>
   23788:	b	2364c <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   2378c:	ldr	r2, [pc, #280]	; 238ac <__flatcc_fb_gen_c_json_parser@@Base+0x1e00>
   23790:	b	2364c <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   23794:	mov	r2, r9
   23798:	b	2364c <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   2379c:	ldr	r1, [pc, #268]	; 238b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e04>
   237a0:	ldr	r2, [pc, #268]	; 238b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1e08>
   237a4:	mov	r3, #96	; 0x60
   237a8:	ldr	r0, [r1]
   237ac:	str	r2, [sp]
   237b0:	ldr	r1, [pc, #256]	; 238b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1e0c>
   237b4:	ldr	r2, [pc, #256]	; 238bc <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
   237b8:	bl	13f84 <fprintf@plt>
   237bc:	ldr	r3, [pc, #252]	; 238c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e14>
   237c0:	mov	r2, #96	; 0x60
   237c4:	ldr	r1, [pc, #240]	; 238bc <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
   237c8:	ldr	r0, [pc, #244]	; 238c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1e18>
   237cc:	bl	14038 <__assert_fail@plt>
   237d0:	mov	r2, r8
   237d4:	ldr	r1, [r4, #4]
   237d8:	add	ip, sp, #244	; 0xf4
   237dc:	ldr	r0, [r6]
   237e0:	ldr	r3, [r1, #4]
   237e4:	str	ip, [sp, #20]
   237e8:	str	r3, [sp, #16]
   237ec:	ldr	r1, [r1]
   237f0:	str	r3, [sp, #8]
   237f4:	str	r1, [sp, #12]
   237f8:	ldrd	sl, [r4, #80]	; 0x50
   237fc:	mov	r3, r5
   23800:	ldr	r1, [pc, #192]	; 238c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1e1c>
   23804:	strd	sl, [sp]
   23808:	bl	13f84 <fprintf@plt>
   2380c:	ldr	r4, [r4]
   23810:	add	r5, r5, #1
   23814:	cmp	r4, #0
   23818:	bne	235c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b14>
   2381c:	b	2368c <__flatcc_fb_gen_c_json_parser@@Base+0x1be0>
   23820:	ldr	r2, [pc, #116]	; 2389c <__flatcc_fb_gen_c_json_parser@@Base+0x1df0>
   23824:	b	237d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   23828:	ldr	r2, [pc, #124]	; 238ac <__flatcc_fb_gen_c_json_parser@@Base+0x1e00>
   2382c:	b	237d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   23830:	mov	r2, r9
   23834:	b	237d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   23838:	ldr	r2, [pc, #84]	; 23894 <__flatcc_fb_gen_c_json_parser@@Base+0x1de8>
   2383c:	b	237d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   23840:	ldr	r2, [pc, #80]	; 23898 <__flatcc_fb_gen_c_json_parser@@Base+0x1dec>
   23844:	b	237d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   23848:	ldr	r2, [pc, #84]	; 238a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1df8>
   2384c:	b	237d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   23850:	ldr	r2, [pc, #80]	; 238a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1dfc>
   23854:	b	237d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   23858:	ldr	r2, [pc, #44]	; 2388c <__flatcc_fb_gen_c_json_parser@@Base+0x1de0>
   2385c:	b	237d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   23860:	ldr	r2, [pc, #40]	; 23890 <__flatcc_fb_gen_c_json_parser@@Base+0x1de4>
   23864:	b	237d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   23868:	ldr	r2, [pc, #48]	; 238a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1df4>
   2386c:	b	237d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   23870:	andeq	r6, r5, ip, asr #28
   23874:	andeq	r6, r5, r4, ror pc
   23878:	ldrdeq	r2, [r4], -r8
   2387c:	andeq	r1, r4, r0, lsr #29
   23880:	ldrdeq	r3, [r5], -r0
   23884:	muleq	r5, ip, lr
   23888:	andeq	r7, r5, r4, lsr #32
   2388c:	andeq	r2, r4, r0, ror #5
   23890:			; <UNDEFINED> instruction: 0x0005a5bc
   23894:	andeq	r2, r4, r8, ror #5
   23898:	strdeq	r2, [r4], -r0
   2389c:	andeq	r2, r4, r8, asr #5
   238a0:	ldrdeq	r2, [r4], -r0
   238a4:	strdeq	r2, [r4], -r8
   238a8:	andeq	r2, r4, r0, lsl #6
   238ac:	andeq	r1, r4, r8, lsr #29
   238b0:	andeq	sp, r6, r8, lsr #1
   238b4:	andeq	r1, r4, r8, asr #31
   238b8:			; <UNDEFINED> instruction: 0x00041fbc
   238bc:	andeq	r1, r4, r0, ror pc
   238c0:	andeq	r6, r5, r8, ror fp
   238c4:	andeq	sl, r4, r4, asr sp
   238c8:	andeq	r6, r5, r0, asr #31
   238cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   238d0:	sub	sp, sp, #460	; 0x1cc
   238d4:	mov	r7, r1
   238d8:	mov	r2, #220	; 0xdc
   238dc:	mov	r1, #0
   238e0:	mov	r6, r0
   238e4:	add	r0, sp, #16
   238e8:	bl	13f9c <memset@plt>
   238ec:	mov	r2, #220	; 0xdc
   238f0:	mov	r1, #0
   238f4:	add	r0, sp, #236	; 0xec
   238f8:	bl	13f9c <memset@plt>
   238fc:	add	r2, sp, #16
   23900:	mov	r1, r7
   23904:	ldr	r0, [r7, #12]
   23908:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   2390c:	ldr	r3, [r7, #40]	; 0x28
   23910:	sub	r3, r3, #1
   23914:	cmp	r3, #10
   23918:	ldrls	pc, [pc, r3, lsl #2]
   2391c:	b	23d60 <__flatcc_fb_gen_c_json_parser@@Base+0x22b4>
   23920:	strdeq	r3, [r2], -r0
   23924:	andeq	r3, r2, r0, asr #21
   23928:	andeq	r3, r2, ip, asr #18
   2392c:	ldrdeq	r3, [r2], -r0
   23930:	andeq	r3, r2, r0, ror #21
   23934:	andeq	r3, r2, r0, lsr #22
   23938:	andeq	r3, r2, r0, lsr fp
   2393c:	andeq	r3, r2, r0, asr #22
   23940:	andeq	r3, r2, r0, asr fp
   23944:	andeq	r3, r2, r0, lsl #22
   23948:	andeq	r3, r2, r0, lsl fp
   2394c:	ldr	fp, [pc, #1088]	; 23d94 <__flatcc_fb_gen_c_json_parser@@Base+0x22e8>
   23950:	ldr	r8, [pc, #1088]	; 23d98 <__flatcc_fb_gen_c_json_parser@@Base+0x22ec>
   23954:	ldr	r1, [pc, #1088]	; 23d9c <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   23958:	ldrh	r3, [r7, #92]	; 0x5c
   2395c:	tst	r3, #32
   23960:	beq	23bf4 <__flatcc_fb_gen_c_json_parser@@Base+0x2148>
   23964:	ldrd	r2, [r7, #112]	; 0x70
   23968:	subs	r2, r2, #1
   2396c:	sbc	r3, r3, #0
   23970:	cmp	r3, #0
   23974:	cmpeq	r2, #3
   23978:	bhi	23c9c <__flatcc_fb_gen_c_json_parser@@Base+0x21f0>
   2397c:	ldr	r3, [pc, #1052]	; 23da0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f4>
   23980:	add	r0, r3, r2, lsl #3
   23984:	add	r2, r3, r2, lsl #2
   23988:	ldrd	r4, [r0, #56]	; 0x38
   2398c:	ldr	r9, [r2, #88]	; 0x58
   23990:	ldr	sl, [r2, #104]	; 0x68
   23994:	ldr	r0, [r7, #20]
   23998:	cmp	r0, #0
   2399c:	bne	239c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f14>
   239a0:	b	239e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1f38>
   239a4:	cmp	r3, #6
   239a8:	beq	23b60 <__flatcc_fb_gen_c_json_parser@@Base+0x20b4>
   239ac:	cmp	r3, #4
   239b0:	beq	239cc <__flatcc_fb_gen_c_json_parser@@Base+0x1f20>
   239b4:	ldr	r0, [r0]
   239b8:	cmp	r0, #0
   239bc:	beq	239e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1f38>
   239c0:	ldrh	r3, [r0, #56]	; 0x38
   239c4:	cmp	r3, #5
   239c8:	bne	239a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ef8>
   239cc:	ldrd	r2, [r0, #48]	; 0x30
   239d0:	ldr	r0, [r0]
   239d4:	cmp	r0, #0
   239d8:	bic	r4, r4, r2
   239dc:	bic	r5, r5, r3
   239e0:	bne	239c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f14>
   239e4:	mov	r3, r1
   239e8:	ldr	r0, [r6, #204]	; 0xcc
   239ec:	add	r2, sp, #16
   239f0:	ldr	r1, [pc, #940]	; 23da4 <__flatcc_fb_gen_c_json_parser@@Base+0x22f8>
   239f4:	str	r8, [sp]
   239f8:	bl	13f84 <fprintf@plt>
   239fc:	mov	r1, r8
   23a00:	mov	r0, sl
   23a04:	bl	13eb8 <strcmp@plt>
   23a08:	cmp	r0, #0
   23a0c:	beq	23c88 <__flatcc_fb_gen_c_json_parser@@Base+0x21dc>
   23a10:	mov	r3, sl
   23a14:	mov	r2, sl
   23a18:	ldr	r1, [pc, #904]	; 23da8 <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   23a1c:	ldr	r0, [r6, #204]	; 0xcc
   23a20:	bl	13f84 <fprintf@plt>
   23a24:	ldr	r3, [r6, #204]	; 0xcc
   23a28:	mov	r2, #54	; 0x36
   23a2c:	mov	r1, #1
   23a30:	ldr	r0, [pc, #884]	; 23dac <__flatcc_fb_gen_c_json_parser@@Base+0x2300>
   23a34:	bl	13f18 <fwrite@plt>
   23a38:	ldr	r1, [r6, #204]	; 0xcc
   23a3c:	mov	r0, #10
   23a40:	bl	13fe4 <fputc@plt>
   23a44:	orrs	r3, r4, r5
   23a48:	bne	23d44 <__flatcc_fb_gen_c_json_parser@@Base+0x2298>
   23a4c:	ldr	r3, [r6, #204]	; 0xcc
   23a50:	mov	r2, #59	; 0x3b
   23a54:	mov	r1, #1
   23a58:	ldr	r0, [pc, #848]	; 23db0 <__flatcc_fb_gen_c_json_parser@@Base+0x2304>
   23a5c:	bl	13f18 <fwrite@plt>
   23a60:	ldr	r4, [r7, #20]
   23a64:	cmp	r4, #0
   23a68:	ldrne	r5, [pc, #836]	; 23db4 <__flatcc_fb_gen_c_json_parser@@Base+0x2308>
   23a6c:	beq	23ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x20fc>
   23a70:	ldrh	r3, [r4, #56]	; 0x38
   23a74:	cmp	r3, #5
   23a78:	beq	23b74 <__flatcc_fb_gen_c_json_parser@@Base+0x20c8>
   23a7c:	cmp	r3, #6
   23a80:	beq	23bdc <__flatcc_fb_gen_c_json_parser@@Base+0x2130>
   23a84:	cmp	r3, #4
   23a88:	beq	23b74 <__flatcc_fb_gen_c_json_parser@@Base+0x20c8>
   23a8c:	ldr	r1, [pc, #804]	; 23db8 <__flatcc_fb_gen_c_json_parser@@Base+0x230c>
   23a90:	ldr	r2, [pc, #804]	; 23dbc <__flatcc_fb_gen_c_json_parser@@Base+0x2310>
   23a94:	mov	r3, #134	; 0x86
   23a98:	ldr	r0, [r1]
   23a9c:	str	r2, [sp]
   23aa0:	ldr	r1, [pc, #792]	; 23dc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2314>
   23aa4:	ldr	r2, [pc, #792]	; 23dc4 <__flatcc_fb_gen_c_json_parser@@Base+0x2318>
   23aa8:	bl	13f84 <fprintf@plt>
   23aac:	ldr	r3, [pc, #788]	; 23dc8 <__flatcc_fb_gen_c_json_parser@@Base+0x231c>
   23ab0:	mov	r2, #134	; 0x86
   23ab4:	ldr	r1, [pc, #776]	; 23dc4 <__flatcc_fb_gen_c_json_parser@@Base+0x2318>
   23ab8:	ldr	r0, [pc, #780]	; 23dcc <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23abc:	bl	14038 <__assert_fail@plt>
   23ac0:	ldr	fp, [pc, #776]	; 23dd0 <__flatcc_fb_gen_c_json_parser@@Base+0x2324>
   23ac4:	ldr	r8, [pc, #776]	; 23dd4 <__flatcc_fb_gen_c_json_parser@@Base+0x2328>
   23ac8:	ldr	r1, [pc, #716]	; 23d9c <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   23acc:	b	23958 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   23ad0:	ldr	fp, [pc, #768]	; 23dd8 <__flatcc_fb_gen_c_json_parser@@Base+0x232c>
   23ad4:	ldr	r8, [pc, #768]	; 23ddc <__flatcc_fb_gen_c_json_parser@@Base+0x2330>
   23ad8:	ldr	r1, [pc, #700]	; 23d9c <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   23adc:	b	23958 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   23ae0:	mov	r1, r6
   23ae4:	ldr	fp, [pc, #756]	; 23de0 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   23ae8:	ldr	r8, [pc, #756]	; 23de4 <__flatcc_fb_gen_c_json_parser@@Base+0x2338>
   23aec:	b	23958 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   23af0:	ldr	fp, [pc, #752]	; 23de8 <__flatcc_fb_gen_c_json_parser@@Base+0x233c>
   23af4:	ldr	r8, [pc, #752]	; 23dec <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
   23af8:	ldr	r1, [pc, #668]	; 23d9c <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   23afc:	b	23958 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   23b00:	ldr	fp, [pc, #744]	; 23df0 <__flatcc_fb_gen_c_json_parser@@Base+0x2344>
   23b04:	ldr	r1, [pc, #656]	; 23d9c <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   23b08:	mov	r8, fp
   23b0c:	b	23958 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   23b10:	ldr	fp, [pc, #732]	; 23df4 <__flatcc_fb_gen_c_json_parser@@Base+0x2348>
   23b14:	ldr	r1, [pc, #640]	; 23d9c <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   23b18:	mov	r8, fp
   23b1c:	b	23958 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   23b20:	ldr	fp, [pc, #720]	; 23df8 <__flatcc_fb_gen_c_json_parser@@Base+0x234c>
   23b24:	ldr	r8, [pc, #720]	; 23dfc <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
   23b28:	ldr	r1, [pc, #620]	; 23d9c <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   23b2c:	b	23958 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   23b30:	ldr	fp, [pc, #712]	; 23e00 <__flatcc_fb_gen_c_json_parser@@Base+0x2354>
   23b34:	ldr	r8, [pc, #712]	; 23e04 <__flatcc_fb_gen_c_json_parser@@Base+0x2358>
   23b38:	ldr	r1, [pc, #604]	; 23d9c <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   23b3c:	b	23958 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   23b40:	ldr	fp, [pc, #704]	; 23e08 <__flatcc_fb_gen_c_json_parser@@Base+0x235c>
   23b44:	ldr	r8, [pc, #704]	; 23e0c <__flatcc_fb_gen_c_json_parser@@Base+0x2360>
   23b48:	ldr	r1, [pc, #588]	; 23d9c <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   23b4c:	b	23958 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   23b50:	ldr	fp, [pc, #696]	; 23e10 <__flatcc_fb_gen_c_json_parser@@Base+0x2364>
   23b54:	ldr	r8, [pc, #696]	; 23e14 <__flatcc_fb_gen_c_json_parser@@Base+0x2368>
   23b58:	ldr	r1, [pc, #572]	; 23d9c <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   23b5c:	b	23958 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   23b60:	ldrb	r2, [r0, #48]	; 0x30
   23b64:	mov	r3, #0
   23b68:	bic	r5, r5, r3
   23b6c:	bic	r4, r4, r2
   23b70:	b	239b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1f08>
   23b74:	ldr	ip, [r4, #4]
   23b78:	ldrd	r2, [r4, #48]	; 0x30
   23b7c:	ldr	r0, [r6, #204]	; 0xcc
   23b80:	ldr	r1, [ip, #4]
   23b84:	str	r1, [sp, #12]
   23b88:	ldr	ip, [ip]
   23b8c:	str	r9, [sp]
   23b90:	stmib	sp, {r1, ip}
   23b94:	mov	r1, r5
   23b98:	bl	13f84 <fprintf@plt>
   23b9c:	ldr	r4, [r4]
   23ba0:	cmp	r4, #0
   23ba4:	bne	23a70 <__flatcc_fb_gen_c_json_parser@@Base+0x1fc4>
   23ba8:	ldr	r3, [r6, #204]	; 0xcc
   23bac:	mov	r2, #59	; 0x3b
   23bb0:	mov	r1, #1
   23bb4:	ldr	r0, [pc, #500]	; 23db0 <__flatcc_fb_gen_c_json_parser@@Base+0x2304>
   23bb8:	bl	13f18 <fwrite@plt>
   23bbc:	ldr	r3, [r6, #204]	; 0xcc
   23bc0:	mov	r2, #3
   23bc4:	mov	r1, #1
   23bc8:	ldr	r0, [pc, #584]	; 23e18 <__flatcc_fb_gen_c_json_parser@@Base+0x236c>
   23bcc:	bl	13f18 <fwrite@plt>
   23bd0:	mov	r0, #0
   23bd4:	add	sp, sp, #460	; 0x1cc
   23bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23bdc:	ldr	ip, [r4, #4]
   23be0:	ldrb	r2, [r4, #48]	; 0x30
   23be4:	mov	r3, #0
   23be8:	ldr	r1, [ip, #4]
   23bec:	ldr	r0, [r6, #204]	; 0xcc
   23bf0:	b	23b84 <__flatcc_fb_gen_c_json_parser@@Base+0x20d8>
   23bf4:	mov	r3, r1
   23bf8:	ldr	r0, [r6, #204]	; 0xcc
   23bfc:	add	r2, sp, #16
   23c00:	ldr	r1, [pc, #412]	; 23da4 <__flatcc_fb_gen_c_json_parser@@Base+0x22f8>
   23c04:	str	r8, [sp]
   23c08:	bl	13f84 <fprintf@plt>
   23c0c:	ldr	r3, [r6, #204]	; 0xcc
   23c10:	mov	r2, #18
   23c14:	mov	r1, #1
   23c18:	ldr	r0, [pc, #508]	; 23e1c <__flatcc_fb_gen_c_json_parser@@Base+0x2370>
   23c1c:	bl	13f18 <fwrite@plt>
   23c20:	ldr	r4, [r7, #20]
   23c24:	cmp	r4, #0
   23c28:	beq	23ce0 <__flatcc_fb_gen_c_json_parser@@Base+0x2234>
   23c2c:	ldr	r8, [pc, #492]	; 23e20 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   23c30:	ldr	r7, [pc, #492]	; 23e24 <__flatcc_fb_gen_c_json_parser@@Base+0x2378>
   23c34:	ldr	r5, [pc, #492]	; 23e28 <__flatcc_fb_gen_c_json_parser@@Base+0x237c>
   23c38:	ldrh	r3, [r4, #56]	; 0x38
   23c3c:	cmp	r3, #5
   23c40:	beq	23d1c <__flatcc_fb_gen_c_json_parser@@Base+0x2270>
   23c44:	cmp	r3, #6
   23c48:	beq	23cf4 <__flatcc_fb_gen_c_json_parser@@Base+0x2248>
   23c4c:	cmp	r3, #4
   23c50:	beq	23cb0 <__flatcc_fb_gen_c_json_parser@@Base+0x2204>
   23c54:	ldr	r1, [pc, #348]	; 23db8 <__flatcc_fb_gen_c_json_parser@@Base+0x230c>
   23c58:	ldr	r2, [pc, #348]	; 23dbc <__flatcc_fb_gen_c_json_parser@@Base+0x2310>
   23c5c:	mov	r3, #157	; 0x9d
   23c60:	ldr	r0, [r1]
   23c64:	str	r2, [sp]
   23c68:	ldr	r1, [pc, #336]	; 23dc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2314>
   23c6c:	ldr	r2, [pc, #336]	; 23dc4 <__flatcc_fb_gen_c_json_parser@@Base+0x2318>
   23c70:	bl	13f84 <fprintf@plt>
   23c74:	ldr	r3, [pc, #332]	; 23dc8 <__flatcc_fb_gen_c_json_parser@@Base+0x231c>
   23c78:	mov	r2, #157	; 0x9d
   23c7c:	ldr	r1, [pc, #320]	; 23dc4 <__flatcc_fb_gen_c_json_parser@@Base+0x2318>
   23c80:	ldr	r0, [pc, #324]	; 23dcc <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23c84:	bl	14038 <__assert_fail@plt>
   23c88:	mov	r2, sl
   23c8c:	ldr	r1, [pc, #408]	; 23e2c <__flatcc_fb_gen_c_json_parser@@Base+0x2380>
   23c90:	ldr	r0, [r6, #204]	; 0xcc
   23c94:	bl	13f84 <fprintf@plt>
   23c98:	b	23a24 <__flatcc_fb_gen_c_json_parser@@Base+0x1f78>
   23c9c:	ldr	sl, [pc, #328]	; 23dec <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
   23ca0:	ldr	r9, [pc, #392]	; 23e30 <__flatcc_fb_gen_c_json_parser@@Base+0x2384>
   23ca4:	mvn	r4, #0
   23ca8:	mvn	r5, #0
   23cac:	b	23994 <__flatcc_fb_gen_c_json_parser@@Base+0x1ee8>
   23cb0:	ldr	ip, [r4, #4]
   23cb4:	ldrd	r2, [r4, #48]	; 0x30
   23cb8:	ldr	r0, [r6, #204]	; 0xcc
   23cbc:	ldr	r1, [ip, #4]
   23cc0:	str	r1, [sp, #8]
   23cc4:	ldr	ip, [ip]
   23cc8:	stm	sp, {r1, ip}
   23ccc:	mov	r1, r5
   23cd0:	bl	13f84 <fprintf@plt>
   23cd4:	ldr	r4, [r4]
   23cd8:	cmp	r4, #0
   23cdc:	bne	23c38 <__flatcc_fb_gen_c_json_parser@@Base+0x218c>
   23ce0:	mov	r2, fp
   23ce4:	ldr	r1, [pc, #328]	; 23e34 <__flatcc_fb_gen_c_json_parser@@Base+0x2388>
   23ce8:	ldr	r0, [r6, #204]	; 0xcc
   23cec:	bl	13f84 <fprintf@plt>
   23cf0:	b	23bbc <__flatcc_fb_gen_c_json_parser@@Base+0x2110>
   23cf4:	ldr	r1, [r4, #4]
   23cf8:	ldrb	r2, [r4, #48]	; 0x30
   23cfc:	ldr	r0, [r6, #204]	; 0xcc
   23d00:	ldr	r3, [r1, #4]
   23d04:	str	r3, [sp, #4]
   23d08:	ldr	r1, [r1]
   23d0c:	str	r1, [sp]
   23d10:	mov	r1, r7
   23d14:	bl	13f84 <fprintf@plt>
   23d18:	b	23cd4 <__flatcc_fb_gen_c_json_parser@@Base+0x2228>
   23d1c:	ldr	ip, [r4, #4]
   23d20:	ldrd	r2, [r4, #48]	; 0x30
   23d24:	ldr	r0, [r6, #204]	; 0xcc
   23d28:	ldr	r1, [ip, #4]
   23d2c:	str	r1, [sp, #8]
   23d30:	ldr	ip, [ip]
   23d34:	stm	sp, {r1, ip}
   23d38:	mov	r1, r8
   23d3c:	bl	13f84 <fprintf@plt>
   23d40:	b	23cd4 <__flatcc_fb_gen_c_json_parser@@Base+0x2228>
   23d44:	ldr	r0, [r6, #204]	; 0xcc
   23d48:	mov	r2, r4
   23d4c:	str	fp, [sp]
   23d50:	mov	r3, r5
   23d54:	ldr	r1, [pc, #220]	; 23e38 <__flatcc_fb_gen_c_json_parser@@Base+0x238c>
   23d58:	bl	13f84 <fprintf@plt>
   23d5c:	b	23a4c <__flatcc_fb_gen_c_json_parser@@Base+0x1fa0>
   23d60:	ldr	r1, [pc, #80]	; 23db8 <__flatcc_fb_gen_c_json_parser@@Base+0x230c>
   23d64:	ldr	r2, [pc, #208]	; 23e3c <__flatcc_fb_gen_c_json_parser@@Base+0x2390>
   23d68:	mov	r3, #96	; 0x60
   23d6c:	ldr	r0, [r1]
   23d70:	str	r2, [sp]
   23d74:	ldr	r1, [pc, #68]	; 23dc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2314>
   23d78:	ldr	r2, [pc, #192]	; 23e40 <__flatcc_fb_gen_c_json_parser@@Base+0x2394>
   23d7c:	bl	13f84 <fprintf@plt>
   23d80:	ldr	r3, [pc, #188]	; 23e44 <__flatcc_fb_gen_c_json_parser@@Base+0x2398>
   23d84:	mov	r2, #96	; 0x60
   23d88:	ldr	r1, [pc, #176]	; 23e40 <__flatcc_fb_gen_c_json_parser@@Base+0x2394>
   23d8c:	ldr	r0, [pc, #56]	; 23dcc <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23d90:	bl	14038 <__assert_fail@plt>
   23d94:	ldrdeq	r2, [r4], -r8
   23d98:	andeq	r1, r4, r4, ror #28
   23d9c:	andeq	fp, r4, ip, lsr #24
   23da0:	andeq	r6, r5, r8, asr fp
   23da4:	andeq	r7, r5, r0, lsr #6
   23da8:	muleq	r5, r0, r0
   23dac:	strheq	r7, [r5], -r4
   23db0:	andeq	r7, r5, r0, asr r1
   23db4:	andeq	r7, r5, ip, lsl #3
   23db8:	andeq	sp, r6, r8, lsr #1
   23dbc:	ldrdeq	r7, [r5], -ip
   23dc0:			; <UNDEFINED> instruction: 0x00041fbc
   23dc4:	andeq	r6, r5, ip, ror sp
   23dc8:	ldrdeq	r6, [r5], -r0
   23dcc:	andeq	sl, r4, r4, asr sp
   23dd0:	ldrdeq	r2, [r4], -r0
   23dd4:	andeq	r1, r4, r8, asr lr
   23dd8:	andeq	r2, r4, r0, ror #5
   23ddc:	andeq	r1, r4, r0, ror lr
   23de0:			; <UNDEFINED> instruction: 0x0005a5bc
   23de4:	andeq	r1, r4, r8, ror lr
   23de8:	andeq	r2, r4, r8, asr #5
   23dec:	andeq	r1, r4, ip, asr #28
   23df0:	andeq	r1, r4, r8, lsr #29
   23df4:	andeq	r1, r4, r0, lsr #29
   23df8:	andeq	r2, r4, r8, ror #5
   23dfc:	andeq	r1, r4, r0, lsl #29
   23e00:	strdeq	r2, [r4], -r0
   23e04:	andeq	r1, r4, r8, lsl #29
   23e08:	strdeq	r2, [r4], -r8
   23e0c:	muleq	r4, r0, lr
   23e10:	andeq	r2, r4, r0, lsl #6
   23e14:	muleq	r4, r8, lr
   23e18:	ldrdeq	r3, [r5], -r0
   23e1c:	andeq	r7, r5, r8, ror #6
   23e20:	andeq	r7, r5, r8, lsl r2
   23e24:	andeq	r7, r5, r0, lsr #5
   23e28:	andeq	r7, r5, ip, asr r2
   23e2c:	andeq	r7, r5, r4, lsr #1
   23e30:	andeq	r7, r5, ip, lsl #1
   23e34:	andeq	r7, r5, r4, ror #5
   23e38:	andeq	r7, r5, ip, ror #1
   23e3c:	andeq	r1, r4, r8, asr #31
   23e40:	andeq	r1, r4, r0, ror pc
   23e44:	andeq	r6, r5, r8, ror fp
   23e48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e4c:	sub	sp, sp, #492	; 0x1ec
   23e50:	mov	sl, r1
   23e54:	mov	r2, #220	; 0xdc
   23e58:	mov	r1, #0
   23e5c:	mov	r9, r0
   23e60:	add	r0, sp, #48	; 0x30
   23e64:	bl	13f9c <memset@plt>
   23e68:	mov	r2, #220	; 0xdc
   23e6c:	mov	r1, #0
   23e70:	add	r0, sp, #268	; 0x10c
   23e74:	bl	13f9c <memset@plt>
   23e78:	add	r2, sp, #48	; 0x30
   23e7c:	mov	r1, sl
   23e80:	ldr	r0, [sl, #12]
   23e84:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   23e88:	ldr	r4, [sl, #96]	; 0x60
   23e8c:	mov	r1, #4
   23e90:	mov	r0, r4
   23e94:	ldr	r5, [sl, #100]	; 0x64
   23e98:	bl	13ea0 <calloc@plt>
   23e9c:	orrs	r3, r4, r5
   23ea0:	movne	r3, #1
   23ea4:	moveq	r3, #0
   23ea8:	cmp	r0, #0
   23eac:	movne	r3, #0
   23eb0:	andeq	r3, r3, #1
   23eb4:	cmp	r3, #0
   23eb8:	bne	24830 <__flatcc_fb_gen_c_json_parser@@Base+0x2d84>
   23ebc:	ldr	r3, [sl, #20]
   23ec0:	mov	r8, r0
   23ec4:	cmp	r3, #0
   23ec8:	beq	23ee0 <__flatcc_fb_gen_c_json_parser@@Base+0x2434>
   23ecc:	ldr	r2, [r3, #96]	; 0x60
   23ed0:	str	r3, [r8, r2, lsl #2]
   23ed4:	ldr	r3, [r3]
   23ed8:	cmp	r3, #0
   23edc:	bne	23ecc <__flatcc_fb_gen_c_json_parser@@Base+0x2420>
   23ee0:	ldr	r1, [pc, #2428]	; 24864 <__flatcc_fb_gen_c_json_parser@@Base+0x2db8>
   23ee4:	add	r2, sp, #48	; 0x30
   23ee8:	ldr	r0, [r9]
   23eec:	bl	13f84 <fprintf@plt>
   23ef0:	ldrd	r0, [sl, #96]	; 0x60
   23ef4:	orrs	r3, r0, r1
   23ef8:	subne	r5, r8, #4
   23efc:	movne	r6, #0
   23f00:	movne	r7, #0
   23f04:	strne	sl, [sp, #44]	; 0x2c
   23f08:	bne	23f24 <__flatcc_fb_gen_c_json_parser@@Base+0x2478>
   23f0c:	b	24144 <__flatcc_fb_gen_c_json_parser@@Base+0x2698>
   23f10:	adds	r6, r6, #1
   23f14:	adc	r7, r7, #0
   23f18:	cmp	r7, r1
   23f1c:	cmpeq	r6, r0
   23f20:	bcs	24144 <__flatcc_fb_gen_c_json_parser@@Base+0x2698>
   23f24:	ldr	r4, [r5, #4]!
   23f28:	cmp	r4, #0
   23f2c:	beq	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   23f30:	ldrh	r3, [r4, #72]	; 0x48
   23f34:	tst	r3, #4
   23f38:	bne	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   23f3c:	ldr	r3, [r9]
   23f40:	mov	r2, #5
   23f44:	mov	r1, #1
   23f48:	ldr	r0, [pc, #2328]	; 24868 <__flatcc_fb_gen_c_json_parser@@Base+0x2dbc>
   23f4c:	bl	13f18 <fwrite@plt>
   23f50:	ldrh	r3, [r4, #24]
   23f54:	sub	r3, r3, #7
   23f58:	cmp	r3, #8
   23f5c:	ldrls	pc, [pc, r3, lsl #2]
   23f60:	b	24138 <__flatcc_fb_gen_c_json_parser@@Base+0x268c>
   23f64:	muleq	r2, r8, r0
   23f68:	andeq	r4, r2, r8, asr r0
   23f6c:	andeq	r4, r2, r8, lsr #32
   23f70:	strdeq	r3, [r2], -r8
   23f74:	andeq	r4, r2, r8, lsr r1
   23f78:	andeq	r4, r2, r8, lsr r1
   23f7c:	andeq	r4, r2, r8, lsr r1
   23f80:	andeq	r3, r2, r0, asr #31
   23f84:	andeq	r3, r2, r8, lsl #31
   23f88:	ldr	r1, [r4, #16]
   23f8c:	add	r2, sp, #268	; 0x10c
   23f90:	ldr	r0, [r1, #12]
   23f94:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   23f98:	ldr	r2, [r4, #16]
   23f9c:	ldrh	r3, [r2, #8]
   23fa0:	cmp	r3, #4
   23fa4:	ldrls	pc, [pc, r3, lsl #2]
   23fa8:	b	243a8 <__flatcc_fb_gen_c_json_parser@@Base+0x28fc>
   23fac:	andeq	r4, r2, r4, lsl r2
   23fb0:	andeq	r4, r2, r4, lsl #2
   23fb4:	andeq	r4, r2, r8, lsr #7
   23fb8:	andeq	r4, r2, ip, asr #4
   23fbc:	andeq	r4, r2, r8, lsl #5
   23fc0:	ldr	r1, [r4, #16]
   23fc4:	add	r2, sp, #268	; 0x10c
   23fc8:	ldr	r0, [r1, #12]
   23fcc:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   23fd0:	ldr	r2, [r4, #16]
   23fd4:	ldrh	r3, [r2, #8]
   23fd8:	cmp	r3, #4
   23fdc:	ldrls	pc, [pc, r3, lsl #2]
   23fe0:	b	24374 <__flatcc_fb_gen_c_json_parser@@Base+0x28c8>
   23fe4:	andeq	r4, r2, r4, asr #5
   23fe8:	strdeq	r4, [r2], -ip
   23fec:	andeq	r4, r2, r4, ror r3
   23ff0:	andeq	r4, r2, r4, lsr r3
   23ff4:	ldrdeq	r4, [r2], -r8
   23ff8:	ldr	ip, [r4, #4]
   23ffc:	ldrd	r2, [r4, #96]	; 0x60
   24000:	ldr	r0, [r9]
   24004:	ldr	r1, [ip, #4]
   24008:	str	r1, [sp, #8]
   2400c:	ldr	ip, [ip]
   24010:	stm	sp, {r1, ip}
   24014:	ldr	r1, [pc, #2128]	; 2486c <__flatcc_fb_gen_c_json_parser@@Base+0x2dc0>
   24018:	bl	13f84 <fprintf@plt>
   2401c:	ldr	r3, [sp, #44]	; 0x2c
   24020:	ldrd	r0, [r3, #96]	; 0x60
   24024:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   24028:	ldr	ip, [r4, #4]
   2402c:	ldrd	r2, [r4, #96]	; 0x60
   24030:	ldr	r0, [r9]
   24034:	ldr	r1, [ip, #4]
   24038:	str	r1, [sp, #8]
   2403c:	ldr	ip, [ip]
   24040:	stm	sp, {r1, ip}
   24044:	ldr	r1, [pc, #2084]	; 24870 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc4>
   24048:	bl	13f84 <fprintf@plt>
   2404c:	ldr	r3, [sp, #44]	; 0x2c
   24050:	ldrd	r0, [r3, #96]	; 0x60
   24054:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   24058:	ldr	r3, [r4, #16]
   2405c:	sub	r3, r3, #1
   24060:	cmp	r3, #10
   24064:	ldrls	pc, [pc, r3, lsl #2]
   24068:	b	24598 <__flatcc_fb_gen_c_json_parser@@Base+0x2aec>
   2406c:	andeq	r4, r2, r4, lsr r5
   24070:	andeq	r4, r2, ip, lsl r4
   24074:	andeq	r4, r2, ip, lsr r5
   24078:	andeq	r4, r2, r4, lsl r5
   2407c:	andeq	r4, r2, ip, lsl r5
   24080:	andeq	r4, r2, r4, lsr #10
   24084:	andeq	r4, r2, ip, lsr #10
   24088:	andeq	r4, r2, r4, asr #10
   2408c:	andeq	r4, r2, ip, asr #10
   24090:	andeq	r4, r2, r4, asr r5
   24094:	andeq	r4, r2, ip, asr r5
   24098:	ldrh	r3, [r4, #72]	; 0x48
   2409c:	tst	r3, #3072	; 0xc00
   240a0:	bne	24188 <__flatcc_fb_gen_c_json_parser@@Base+0x26dc>
   240a4:	ldr	r1, [r4, #104]	; 0x68
   240a8:	cmp	r1, #0
   240ac:	beq	243dc <__flatcc_fb_gen_c_json_parser@@Base+0x2930>
   240b0:	ldr	r0, [r1, #12]
   240b4:	add	r2, sp, #268	; 0x10c
   240b8:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   240bc:	ldr	r3, [r4, #104]	; 0x68
   240c0:	ldr	ip, [r4, #4]
   240c4:	add	lr, sp, #268	; 0x10c
   240c8:	ldrh	r3, [r3, #8]
   240cc:	ldr	r1, [ip, #4]
   240d0:	ldr	r0, [r9]
   240d4:	cmp	r3, #0
   240d8:	ldrd	r2, [r4, #96]	; 0x60
   240dc:	str	r1, [sp, #8]
   240e0:	str	lr, [sp, #12]
   240e4:	ldr	ip, [ip]
   240e8:	stm	sp, {r1, ip}
   240ec:	ldreq	r1, [pc, #1920]	; 24874 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc8>
   240f0:	ldrne	r1, [pc, #1920]	; 24878 <__flatcc_fb_gen_c_json_parser@@Base+0x2dcc>
   240f4:	bl	13f84 <fprintf@plt>
   240f8:	ldr	r3, [sp, #44]	; 0x2c
   240fc:	ldrd	r0, [r3, #96]	; 0x60
   24100:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   24104:	ldr	ip, [r4, #4]
   24108:	add	lr, sp, #268	; 0x10c
   2410c:	ldrd	r2, [r4, #96]	; 0x60
   24110:	ldr	r1, [ip, #4]
   24114:	ldr	r0, [r9]
   24118:	str	lr, [sp, #24]
   2411c:	ldrd	sl, [r4, #88]	; 0x58
   24120:	str	r1, [sp, #8]
   24124:	strd	sl, [sp, #16]
   24128:	ldr	ip, [ip]
   2412c:	stm	sp, {r1, ip}
   24130:	ldr	r1, [pc, #1860]	; 2487c <__flatcc_fb_gen_c_json_parser@@Base+0x2dd0>
   24134:	bl	13f84 <fprintf@plt>
   24138:	ldr	r3, [sp, #44]	; 0x2c
   2413c:	ldrd	r0, [r3, #96]	; 0x60
   24140:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   24144:	ldr	r3, [r9]
   24148:	mov	r2, #4
   2414c:	mov	r1, #1
   24150:	ldr	r0, [pc, #1832]	; 24880 <__flatcc_fb_gen_c_json_parser@@Base+0x2dd4>
   24154:	bl	13f18 <fwrite@plt>
   24158:	add	r3, sp, #48	; 0x30
   2415c:	mov	r2, r3
   24160:	ldr	r0, [r9]
   24164:	ldr	r1, [pc, #1816]	; 24884 <__flatcc_fb_gen_c_json_parser@@Base+0x2dd8>
   24168:	bl	13f84 <fprintf@plt>
   2416c:	cmp	r8, #0
   24170:	beq	2417c <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   24174:	mov	r0, r8
   24178:	bl	13ed0 <free@plt>
   2417c:	mov	r0, #0
   24180:	add	sp, sp, #492	; 0x1ec
   24184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24188:	ldr	r2, [r4, #4]
   2418c:	lsr	r3, r3, #10
   24190:	eor	r3, r3, #1
   24194:	ldr	ip, [r2, #4]
   24198:	ldrd	r0, [r4, #96]	; 0x60
   2419c:	and	r3, r3, #1
   241a0:	str	r3, [sp, #12]
   241a4:	str	ip, [sp, #8]
   241a8:	ldr	lr, [r9]
   241ac:	ldr	r4, [r2]
   241b0:	mov	r3, r1
   241b4:	mov	r2, r0
   241b8:	ldr	r1, [pc, #1736]	; 24888 <__flatcc_fb_gen_c_json_parser@@Base+0x2ddc>
   241bc:	str	r4, [sp, #4]
   241c0:	str	ip, [sp]
   241c4:	mov	r0, lr
   241c8:	bl	13f84 <fprintf@plt>
   241cc:	ldr	r3, [sp, #44]	; 0x2c
   241d0:	ldrd	r0, [r3, #96]	; 0x60
   241d4:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   241d8:	ldr	ip, [r4, #4]
   241dc:	add	lr, sp, #268	; 0x10c
   241e0:	ldrd	r2, [r4, #96]	; 0x60
   241e4:	ldr	r1, [ip, #4]
   241e8:	ldr	r0, [r9]
   241ec:	str	r1, [sp, #8]
   241f0:	str	lr, [sp, #16]
   241f4:	str	lr, [sp, #12]
   241f8:	ldr	ip, [ip]
   241fc:	stm	sp, {r1, ip}
   24200:	ldr	r1, [pc, #1668]	; 2488c <__flatcc_fb_gen_c_json_parser@@Base+0x2de0>
   24204:	bl	13f84 <fprintf@plt>
   24208:	ldr	r3, [sp, #44]	; 0x2c
   2420c:	ldrd	r0, [r3, #96]	; 0x60
   24210:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   24214:	ldr	ip, [r4, #4]
   24218:	add	lr, sp, #268	; 0x10c
   2421c:	ldrd	r2, [r4, #96]	; 0x60
   24220:	ldr	r1, [ip, #4]
   24224:	ldr	r0, [r9]
   24228:	str	r1, [sp, #8]
   2422c:	str	lr, [sp, #12]
   24230:	ldr	ip, [ip]
   24234:	stm	sp, {r1, ip}
   24238:	ldr	r1, [pc, #1616]	; 24890 <__flatcc_fb_gen_c_json_parser@@Base+0x2de4>
   2423c:	bl	13f84 <fprintf@plt>
   24240:	ldr	r3, [sp, #44]	; 0x2c
   24244:	ldrd	r0, [r3, #96]	; 0x60
   24248:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   2424c:	sub	r2, r2, #1
   24250:	cmp	r2, #10
   24254:	ldrls	pc, [pc, r2, lsl #2]
   24258:	b	24598 <__flatcc_fb_gen_c_json_parser@@Base+0x2aec>
   2425c:	andeq	r4, r2, r0, lsr #14
   24260:	andeq	r4, r2, r8, lsl r7
   24264:	andeq	r4, r2, r0, lsl r7
   24268:	andeq	r4, r2, r8, lsl #14
   2426c:	andeq	r4, r2, r0, lsl #14
   24270:	strdeq	r4, [r2], -r8
   24274:	strdeq	r4, [r2], -r0
   24278:	andeq	r4, r2, r8, ror #13
   2427c:	andeq	r4, r2, r0, ror #13
   24280:	ldrdeq	r4, [r2], -r8
   24284:	andeq	r4, r2, r0, lsl #13
   24288:	ldr	ip, [r4, #4]
   2428c:	add	lr, sp, #268	; 0x10c
   24290:	ldrd	r2, [r4, #96]	; 0x60
   24294:	ldr	r1, [ip, #4]
   24298:	ldr	r0, [r9]
   2429c:	str	r1, [sp, #8]
   242a0:	str	lr, [sp, #16]
   242a4:	str	lr, [sp, #12]
   242a8:	ldr	ip, [ip]
   242ac:	stm	sp, {r1, ip}
   242b0:	ldr	r1, [pc, #1500]	; 24894 <__flatcc_fb_gen_c_json_parser@@Base+0x2de8>
   242b4:	bl	13f84 <fprintf@plt>
   242b8:	ldr	r3, [sp, #44]	; 0x2c
   242bc:	ldrd	r0, [r3, #96]	; 0x60
   242c0:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   242c4:	ldr	ip, [r4, #4]
   242c8:	add	lr, sp, #268	; 0x10c
   242cc:	ldrd	r2, [r4, #96]	; 0x60
   242d0:	ldr	r1, [ip, #4]
   242d4:	ldr	r0, [r9]
   242d8:	str	r1, [sp, #8]
   242dc:	str	lr, [sp, #12]
   242e0:	ldr	ip, [ip]
   242e4:	stm	sp, {r1, ip}
   242e8:	ldr	r1, [pc, #1448]	; 24898 <__flatcc_fb_gen_c_json_parser@@Base+0x2dec>
   242ec:	bl	13f84 <fprintf@plt>
   242f0:	ldr	r3, [sp, #44]	; 0x2c
   242f4:	ldrd	r0, [r3, #96]	; 0x60
   242f8:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   242fc:	ldr	ip, [r4, #4]
   24300:	add	lr, sp, #268	; 0x10c
   24304:	ldrd	r2, [r4, #96]	; 0x60
   24308:	ldr	r1, [ip, #4]
   2430c:	ldr	r0, [r9]
   24310:	str	r1, [sp, #8]
   24314:	str	lr, [sp, #12]
   24318:	ldr	ip, [ip]
   2431c:	stm	sp, {r1, ip}
   24320:	ldr	r1, [pc, #1396]	; 2489c <__flatcc_fb_gen_c_json_parser@@Base+0x2df0>
   24324:	bl	13f84 <fprintf@plt>
   24328:	ldr	r3, [sp, #44]	; 0x2c
   2432c:	ldrd	r0, [r3, #96]	; 0x60
   24330:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   24334:	ldr	r3, [r2, #40]	; 0x28
   24338:	sub	r3, r3, #1
   2433c:	cmp	r3, #10
   24340:	ldrls	pc, [pc, r3, lsl #2]
   24344:	b	24598 <__flatcc_fb_gen_c_json_parser@@Base+0x2aec>
   24348:	andeq	r4, r2, r8, ror r6
   2434c:	andeq	r4, r2, r0, ror r6
   24350:	andeq	r4, r2, r8, ror #12
   24354:	andeq	r4, r2, r0, ror #12
   24358:	andeq	r4, r2, r8, asr r6
   2435c:	andeq	r4, r2, r0, asr r6
   24360:	andeq	r4, r2, r8, asr #12
   24364:	andeq	r4, r2, r0, asr #12
   24368:	andeq	r4, r2, r8, lsr r6
   2436c:	andeq	r4, r2, r0, lsr r6
   24370:	andeq	r4, r2, ip, asr #11
   24374:	ldr	r1, [pc, #1316]	; 248a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2df4>
   24378:	ldr	r2, [pc, #1316]	; 248a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2df8>
   2437c:	mov	r3, #504	; 0x1f8
   24380:	ldr	r0, [r1]
   24384:	str	r2, [sp]
   24388:	ldr	r1, [pc, #1304]	; 248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2dfc>
   2438c:	ldr	r2, [pc, #1304]	; 248ac <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   24390:	bl	13f84 <fprintf@plt>
   24394:	ldr	r3, [pc, #1300]	; 248b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e04>
   24398:	mov	r2, #504	; 0x1f8
   2439c:	ldr	r1, [pc, #1288]	; 248ac <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   243a0:	ldr	r0, [pc, #1292]	; 248b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e08>
   243a4:	bl	14038 <__assert_fail@plt>
   243a8:	ldr	r1, [pc, #1264]	; 248a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2df4>
   243ac:	ldr	r2, [pc, #1284]	; 248b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e0c>
   243b0:	ldr	r3, [pc, #1284]	; 248bc <__flatcc_fb_gen_c_json_parser@@Base+0x2e10>
   243b4:	ldr	r0, [r1]
   243b8:	str	r2, [sp]
   243bc:	ldr	r1, [pc, #1252]	; 248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2dfc>
   243c0:	ldr	r2, [pc, #1252]	; 248ac <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   243c4:	bl	13f84 <fprintf@plt>
   243c8:	ldr	r3, [pc, #1248]	; 248b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e04>
   243cc:	ldr	r2, [pc, #1256]	; 248bc <__flatcc_fb_gen_c_json_parser@@Base+0x2e10>
   243d0:	ldr	r1, [pc, #1236]	; 248ac <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   243d4:	ldr	r0, [pc, #1240]	; 248b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e08>
   243d8:	bl	14038 <__assert_fail@plt>
   243dc:	ldr	r3, [r4, #16]
   243e0:	sub	r3, r3, #1
   243e4:	cmp	r3, #10
   243e8:	ldrls	pc, [pc, r3, lsl #2]
   243ec:	b	24598 <__flatcc_fb_gen_c_json_parser@@Base+0x2aec>
   243f0:	andeq	r4, r2, ip, lsr #15
   243f4:	andeq	r4, r2, r4, lsr #15
   243f8:	muleq	r2, ip, r7
   243fc:	muleq	r2, r4, r7
   24400:	andeq	r4, r2, ip, lsl #15
   24404:	andeq	r4, r2, r4, lsl #15
   24408:	andeq	r4, r2, ip, ror r7
   2440c:	andeq	r4, r2, r4, ror r7
   24410:	andeq	r4, r2, ip, ror #14
   24414:	andeq	r4, r2, r4, ror #14
   24418:	andeq	r4, r2, r8, lsr #14
   2441c:	ldr	r2, [pc, #1180]	; 248c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e14>
   24420:	ldrh	r3, [r4, #56]	; 0x38
   24424:	sub	r3, r3, #3
   24428:	cmp	r3, #3
   2442c:	ldrls	pc, [pc, r3, lsl #2]
   24430:	b	24564 <__flatcc_fb_gen_c_json_parser@@Base+0x2ab8>
   24434:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   24438:	andeq	r4, r2, ip, lsl #9
   2443c:	andeq	r4, r2, r4, asr #8
   24440:	andeq	r4, r2, r4, asr #8
   24444:	ldr	ip, [r4, #4]
   24448:	ldrd	r0, [r4, #48]	; 0x30
   2444c:	ldr	r3, [ip, #4]
   24450:	strd	r0, [sp, #24]
   24454:	str	r3, [sp, #16]
   24458:	ldr	r1, [ip]
   2445c:	str	r3, [sp, #8]
   24460:	str	r1, [sp, #12]
   24464:	ldrd	r0, [r4, #96]	; 0x60
   24468:	mov	sl, r0
   2446c:	mov	fp, r1
   24470:	ldr	r0, [r9]
   24474:	ldr	r1, [pc, #1096]	; 248c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e18>
   24478:	strd	sl, [sp]
   2447c:	bl	13f84 <fprintf@plt>
   24480:	ldr	r3, [sp, #44]	; 0x2c
   24484:	ldrd	r0, [r3, #96]	; 0x60
   24488:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   2448c:	ldr	ip, [r4, #4]
   24490:	ldrd	r0, [r4, #48]	; 0x30
   24494:	ldr	r3, [ip, #4]
   24498:	strd	r0, [sp, #24]
   2449c:	str	r3, [sp, #16]
   244a0:	ldr	r1, [ip]
   244a4:	str	r3, [sp, #8]
   244a8:	str	r1, [sp, #12]
   244ac:	ldrd	r0, [r4, #96]	; 0x60
   244b0:	mov	sl, r0
   244b4:	mov	fp, r1
   244b8:	ldr	r0, [r9]
   244bc:	ldr	r1, [pc, #1028]	; 248c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e1c>
   244c0:	strd	sl, [sp]
   244c4:	bl	13f84 <fprintf@plt>
   244c8:	ldr	r3, [sp, #44]	; 0x2c
   244cc:	ldrd	r0, [r3, #96]	; 0x60
   244d0:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   244d4:	vldr	d7, [r4, #48]	; 0x30
   244d8:	ldr	ip, [r4, #4]
   244dc:	ldr	r0, [r9]
   244e0:	ldr	r1, [pc, #996]	; 248cc <__flatcc_fb_gen_c_json_parser@@Base+0x2e20>
   244e4:	ldr	r3, [ip, #4]
   244e8:	vstr	d7, [sp, #24]
   244ec:	str	r3, [sp, #16]
   244f0:	ldr	ip, [ip]
   244f4:	str	r3, [sp, #8]
   244f8:	str	ip, [sp, #12]
   244fc:	ldrd	sl, [r4, #96]	; 0x60
   24500:	strd	sl, [sp]
   24504:	bl	13f84 <fprintf@plt>
   24508:	ldr	r3, [sp, #44]	; 0x2c
   2450c:	ldrd	r0, [r3, #96]	; 0x60
   24510:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   24514:	ldr	r2, [pc, #948]	; 248d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e24>
   24518:	b	24420 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   2451c:	ldr	r2, [pc, #944]	; 248d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e28>
   24520:	b	24420 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   24524:	ldr	r2, [pc, #940]	; 248d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e2c>
   24528:	b	24420 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   2452c:	ldr	r2, [pc, #936]	; 248dc <__flatcc_fb_gen_c_json_parser@@Base+0x2e30>
   24530:	b	24420 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   24534:	ldr	r2, [pc, #932]	; 248e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e34>
   24538:	b	24420 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   2453c:	ldr	r2, [pc, #928]	; 248e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e38>
   24540:	b	24420 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   24544:	ldr	r2, [pc, #924]	; 248e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e3c>
   24548:	b	24420 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   2454c:	ldr	r2, [pc, #920]	; 248ec <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   24550:	b	24420 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   24554:	ldr	r2, [pc, #916]	; 248f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e44>
   24558:	b	24420 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   2455c:	ldr	r2, [pc, #912]	; 248f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e48>
   24560:	b	24420 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   24564:	ldr	r1, [pc, #820]	; 248a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2df4>
   24568:	ldr	r2, [pc, #904]	; 248f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e4c>
   2456c:	ldr	r3, [pc, #904]	; 248fc <__flatcc_fb_gen_c_json_parser@@Base+0x2e50>
   24570:	ldr	r0, [r1]
   24574:	str	r2, [sp]
   24578:	ldr	r1, [pc, #808]	; 248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2dfc>
   2457c:	ldr	r2, [pc, #808]	; 248ac <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   24580:	bl	13f84 <fprintf@plt>
   24584:	ldr	r3, [pc, #804]	; 248b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e04>
   24588:	ldr	r2, [pc, #876]	; 248fc <__flatcc_fb_gen_c_json_parser@@Base+0x2e50>
   2458c:	ldr	r1, [pc, #792]	; 248ac <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   24590:	ldr	r0, [pc, #796]	; 248b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e08>
   24594:	bl	14038 <__assert_fail@plt>
   24598:	ldr	r1, [pc, #768]	; 248a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2df4>
   2459c:	ldr	r2, [pc, #860]	; 24900 <__flatcc_fb_gen_c_json_parser@@Base+0x2e54>
   245a0:	mov	r3, #96	; 0x60
   245a4:	ldr	r0, [r1]
   245a8:	str	r2, [sp]
   245ac:	ldr	r1, [pc, #756]	; 248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2dfc>
   245b0:	ldr	r2, [pc, #844]	; 24904 <__flatcc_fb_gen_c_json_parser@@Base+0x2e58>
   245b4:	bl	13f84 <fprintf@plt>
   245b8:	ldr	r3, [pc, #840]	; 24908 <__flatcc_fb_gen_c_json_parser@@Base+0x2e5c>
   245bc:	mov	r2, #96	; 0x60
   245c0:	ldr	r1, [pc, #828]	; 24904 <__flatcc_fb_gen_c_json_parser@@Base+0x2e58>
   245c4:	ldr	r0, [pc, #744]	; 248b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e08>
   245c8:	bl	14038 <__assert_fail@plt>
   245cc:	ldr	r2, [pc, #800]	; 248f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e48>
   245d0:	ldrh	r3, [r4, #56]	; 0x38
   245d4:	cmp	r3, #4
   245d8:	beq	247e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2d3c>
   245dc:	bcc	247b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2d08>
   245e0:	cmp	r3, #6
   245e4:	bhi	247b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2d08>
   245e8:	ldr	r1, [r4, #4]
   245ec:	add	ip, sp, #268	; 0x10c
   245f0:	ldr	r0, [r9]
   245f4:	ldr	r3, [r1, #4]
   245f8:	str	ip, [sp, #32]
   245fc:	ldrd	sl, [r4, #48]	; 0x30
   24600:	str	r3, [sp, #16]
   24604:	strd	sl, [sp, #24]
   24608:	ldr	r1, [r1]
   2460c:	str	r3, [sp, #8]
   24610:	str	r1, [sp, #12]
   24614:	ldrd	sl, [r4, #96]	; 0x60
   24618:	ldr	r1, [pc, #748]	; 2490c <__flatcc_fb_gen_c_json_parser@@Base+0x2e60>
   2461c:	strd	sl, [sp]
   24620:	bl	13f84 <fprintf@plt>
   24624:	ldr	r3, [sp, #44]	; 0x2c
   24628:	ldrd	r0, [r3, #96]	; 0x60
   2462c:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   24630:	ldr	r2, [pc, #696]	; 248f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e44>
   24634:	b	245d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   24638:	ldr	r2, [pc, #684]	; 248ec <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   2463c:	b	245d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   24640:	ldr	r2, [pc, #672]	; 248e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e3c>
   24644:	b	245d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   24648:	ldr	r2, [pc, #652]	; 248dc <__flatcc_fb_gen_c_json_parser@@Base+0x2e30>
   2464c:	b	245d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   24650:	ldr	r2, [pc, #640]	; 248d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e2c>
   24654:	b	245d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   24658:	ldr	r2, [pc, #628]	; 248d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e28>
   2465c:	b	245d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   24660:	ldr	r2, [pc, #616]	; 248d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e24>
   24664:	b	245d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   24668:	ldr	r2, [pc, #628]	; 248e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e38>
   2466c:	b	245d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   24670:	ldr	r2, [pc, #584]	; 248c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e14>
   24674:	b	245d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   24678:	ldr	r2, [pc, #608]	; 248e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e34>
   2467c:	b	245d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   24680:	ldr	r2, [pc, #620]	; 248f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e48>
   24684:	ldr	r3, [sp, #44]	; 0x2c
   24688:	ldr	ip, [r4, #4]
   2468c:	add	lr, sp, #268	; 0x10c
   24690:	ldrd	r0, [r3, #112]	; 0x70
   24694:	ldr	r3, [ip, #4]
   24698:	str	lr, [sp, #32]
   2469c:	str	r3, [sp, #16]
   246a0:	strd	r0, [sp, #24]
   246a4:	ldr	r1, [ip]
   246a8:	str	r3, [sp, #8]
   246ac:	str	r1, [sp, #12]
   246b0:	ldrd	r0, [r4, #96]	; 0x60
   246b4:	mov	sl, r0
   246b8:	mov	fp, r1
   246bc:	ldr	r0, [r9]
   246c0:	ldr	r1, [pc, #584]	; 24910 <__flatcc_fb_gen_c_json_parser@@Base+0x2e64>
   246c4:	strd	sl, [sp]
   246c8:	bl	13f84 <fprintf@plt>
   246cc:	ldr	r3, [sp, #44]	; 0x2c
   246d0:	ldrd	r0, [r3, #96]	; 0x60
   246d4:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   246d8:	ldr	r2, [pc, #528]	; 248f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e44>
   246dc:	b	24684 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   246e0:	ldr	r2, [pc, #516]	; 248ec <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   246e4:	b	24684 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   246e8:	ldr	r2, [pc, #504]	; 248e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e3c>
   246ec:	b	24684 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   246f0:	ldr	r2, [pc, #484]	; 248dc <__flatcc_fb_gen_c_json_parser@@Base+0x2e30>
   246f4:	b	24684 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   246f8:	ldr	r2, [pc, #472]	; 248d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e2c>
   246fc:	b	24684 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   24700:	ldr	r2, [pc, #460]	; 248d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e28>
   24704:	b	24684 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   24708:	ldr	r2, [pc, #448]	; 248d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e24>
   2470c:	b	24684 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   24710:	ldr	r2, [pc, #460]	; 248e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e38>
   24714:	b	24684 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   24718:	ldr	r2, [pc, #416]	; 248c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e14>
   2471c:	b	24684 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   24720:	ldr	r2, [pc, #440]	; 248e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e34>
   24724:	b	24684 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   24728:	ldr	r2, [pc, #452]	; 248f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e48>
   2472c:	ldr	r1, [r4, #4]
   24730:	ldr	r0, [r9]
   24734:	ldr	r3, [r1, #4]
   24738:	str	r3, [sp, #16]
   2473c:	ldr	r1, [r1]
   24740:	str	r3, [sp, #8]
   24744:	str	r1, [sp, #12]
   24748:	ldrd	sl, [r4, #96]	; 0x60
   2474c:	ldr	r1, [pc, #448]	; 24914 <__flatcc_fb_gen_c_json_parser@@Base+0x2e68>
   24750:	strd	sl, [sp]
   24754:	bl	13f84 <fprintf@plt>
   24758:	ldr	r3, [sp, #44]	; 0x2c
   2475c:	ldrd	r0, [r3, #96]	; 0x60
   24760:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   24764:	ldr	r2, [pc, #388]	; 248f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e44>
   24768:	b	2472c <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   2476c:	ldr	r2, [pc, #376]	; 248ec <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   24770:	b	2472c <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   24774:	ldr	r2, [pc, #364]	; 248e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e3c>
   24778:	b	2472c <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   2477c:	ldr	r2, [pc, #344]	; 248dc <__flatcc_fb_gen_c_json_parser@@Base+0x2e30>
   24780:	b	2472c <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   24784:	ldr	r2, [pc, #332]	; 248d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e2c>
   24788:	b	2472c <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   2478c:	ldr	r2, [pc, #320]	; 248d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e28>
   24790:	b	2472c <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   24794:	ldr	r2, [pc, #308]	; 248d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e24>
   24798:	b	2472c <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   2479c:	ldr	r2, [pc, #320]	; 248e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e38>
   247a0:	b	2472c <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   247a4:	ldr	r2, [pc, #276]	; 248c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e14>
   247a8:	b	2472c <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   247ac:	ldr	r2, [pc, #300]	; 248e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e34>
   247b0:	b	2472c <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   247b4:	ldr	r1, [pc, #228]	; 248a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2df4>
   247b8:	ldr	r2, [pc, #344]	; 24918 <__flatcc_fb_gen_c_json_parser@@Base+0x2e6c>
   247bc:	ldr	r3, [pc, #344]	; 2491c <__flatcc_fb_gen_c_json_parser@@Base+0x2e70>
   247c0:	ldr	r0, [r1]
   247c4:	str	r2, [sp]
   247c8:	ldr	r1, [pc, #216]	; 248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2dfc>
   247cc:	ldr	r2, [pc, #216]	; 248ac <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   247d0:	bl	13f84 <fprintf@plt>
   247d4:	ldr	r3, [pc, #212]	; 248b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e04>
   247d8:	ldr	r2, [pc, #316]	; 2491c <__flatcc_fb_gen_c_json_parser@@Base+0x2e70>
   247dc:	ldr	r1, [pc, #200]	; 248ac <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   247e0:	ldr	r0, [pc, #204]	; 248b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e08>
   247e4:	bl	14038 <__assert_fail@plt>
   247e8:	ldr	r1, [r4, #4]
   247ec:	add	ip, sp, #268	; 0x10c
   247f0:	ldr	r0, [r9]
   247f4:	ldr	r3, [r1, #4]
   247f8:	str	ip, [sp, #32]
   247fc:	ldrd	sl, [r4, #48]	; 0x30
   24800:	str	r3, [sp, #16]
   24804:	strd	sl, [sp, #24]
   24808:	ldr	r1, [r1]
   2480c:	str	r3, [sp, #8]
   24810:	str	r1, [sp, #12]
   24814:	ldrd	sl, [r4, #96]	; 0x60
   24818:	ldr	r1, [pc, #256]	; 24920 <__flatcc_fb_gen_c_json_parser@@Base+0x2e74>
   2481c:	strd	sl, [sp]
   24820:	bl	13f84 <fprintf@plt>
   24824:	ldr	r3, [sp, #44]	; 0x2c
   24828:	ldrd	r0, [r3, #96]	; 0x60
   2482c:	b	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   24830:	ldr	r1, [pc, #104]	; 248a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2df4>
   24834:	ldr	r2, [pc, #232]	; 24924 <__flatcc_fb_gen_c_json_parser@@Base+0x2e78>
   24838:	ldr	r3, [pc, #232]	; 24928 <__flatcc_fb_gen_c_json_parser@@Base+0x2e7c>
   2483c:	ldr	r0, [r1]
   24840:	str	r2, [sp]
   24844:	ldr	r1, [pc, #92]	; 248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2dfc>
   24848:	ldr	r2, [pc, #92]	; 248ac <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   2484c:	bl	13f84 <fprintf@plt>
   24850:	ldr	r3, [pc, #88]	; 248b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e04>
   24854:	ldr	r2, [pc, #204]	; 24928 <__flatcc_fb_gen_c_json_parser@@Base+0x2e7c>
   24858:	ldr	r1, [pc, #76]	; 248ac <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   2485c:	ldr	r0, [pc, #80]	; 248b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e08>
   24860:	bl	14038 <__assert_fail@plt>
   24864:	andeq	r7, r5, r8, lsr #7
   24868:	andeq	r7, r5, ip, ror #9
   2486c:	andeq	r7, r5, r8, lsl #14
   24870:	andeq	r7, r5, r8, asr #14
   24874:	andeq	r7, r5, r4, lsl #12
   24878:	andeq	r7, r5, r4, ror #12
   2487c:	muleq	r5, r0, sl
   24880:	andeq	r7, r5, r4, ror #9
   24884:	andeq	r7, r5, r4, lsl r4
   24888:			; <UNDEFINED> instruction: 0x000575b4
   2488c:	andeq	r7, r5, r8, lsr #18
   24890:	ldrdeq	r7, [r5], -r4
   24894:	strdeq	r7, [r5], -r4
   24898:	ldrdeq	r7, [r5], -r4
   2489c:	andeq	r7, r5, r0, lsl #17
   248a0:	andeq	sp, r6, r8, lsr #1
   248a4:	muleq	r5, r4, r9
   248a8:			; <UNDEFINED> instruction: 0x00041fbc
   248ac:	andeq	r6, r5, ip, ror sp
   248b0:	andeq	r6, r5, r8, ror #23
   248b4:	andeq	sl, r4, r4, asr sp
   248b8:	andeq	r7, r5, r8, ror #22
   248bc:	andeq	r0, r0, pc, lsl r2
   248c0:	ldrdeq	r2, [r4], -r0
   248c4:	strdeq	r7, [r5], -r4
   248c8:	andeq	r7, r5, r4, lsr r5
   248cc:	andeq	r7, r5, r4, ror r5
   248d0:	andeq	r2, r4, r0, ror #5
   248d4:			; <UNDEFINED> instruction: 0x0005a5bc
   248d8:	andeq	r2, r4, r8, ror #5
   248dc:	strdeq	r2, [r4], -r0
   248e0:	andeq	r2, r4, r8, asr #5
   248e4:	ldrdeq	r2, [r4], -r8
   248e8:	strdeq	r2, [r4], -r8
   248ec:	andeq	r2, r4, r0, lsl #6
   248f0:	andeq	r1, r4, r8, lsr #29
   248f4:	andeq	r1, r4, r0, lsr #29
   248f8:	muleq	r5, ip, r5
   248fc:	muleq	r0, r6, r1
   24900:	andeq	r1, r4, r8, asr #31
   24904:	andeq	r1, r4, r0, ror pc
   24908:	andeq	r6, r5, r8, ror fp
   2490c:	muleq	r5, r0, r7
   24910:	andeq	r7, r5, r0, lsr sl
   24914:	andeq	r7, r5, r4, asr #13
   24918:	andeq	r7, r5, r8, asr #16
   2491c:	andeq	r0, r0, r3, ror #3
   24920:	andeq	r7, r5, ip, ror #15
   24924:	andeq	r7, r5, ip, ror r3
   24928:	andeq	r0, r0, r9, ror #2

0002492c <__flatcc_fb_gen_c_json_printer@@Base>:
   2492c:	ldr	r3, [r0, #208]	; 0xd0
   24930:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24934:	mov	r6, r0
   24938:	ldr	r3, [r3, #164]	; 0xa4
   2493c:	sub	sp, sp, #236	; 0xec
   24940:	mov	r2, r3
   24944:	ldr	r1, [pc, #1108]	; 24da0 <__flatcc_fb_gen_c_json_printer@@Base+0x474>
   24948:	ldr	r0, [r0, #204]	; 0xcc
   2494c:	bl	13f84 <fprintf@plt>
   24950:	ldr	r3, [r6, #204]	; 0xcc
   24954:	mov	r2, #81	; 0x51
   24958:	mov	r1, #1
   2495c:	ldr	r0, [pc, #1088]	; 24da4 <__flatcc_fb_gen_c_json_printer@@Base+0x478>
   24960:	bl	13f18 <fwrite@plt>
   24964:	ldr	r3, [r6, #204]	; 0xcc
   24968:	mov	r2, #40	; 0x28
   2496c:	mov	r1, #1
   24970:	ldr	r0, [pc, #1072]	; 24da8 <__flatcc_fb_gen_c_json_printer@@Base+0x47c>
   24974:	bl	13f18 <fwrite@plt>
   24978:	ldr	r1, [pc, #1068]	; 24dac <__flatcc_fb_gen_c_json_printer@@Base+0x480>
   2497c:	mov	r0, r6
   24980:	ldr	r2, [pc, #1064]	; 24db0 <__flatcc_fb_gen_c_json_printer@@Base+0x484>
   24984:	bl	150e4 <__flatcc_fb_gen_c_includes@@Base>
   24988:	ldr	r3, [r6, #212]	; 0xd4
   2498c:	ldr	r1, [r6, #204]	; 0xcc
   24990:	ldr	r3, [r3, #140]	; 0x8c
   24994:	cmp	r3, #0
   24998:	beq	249b4 <__flatcc_fb_gen_c_json_printer@@Base+0x88>
   2499c:	mov	r3, r1
   249a0:	mov	r2, #36	; 0x24
   249a4:	mov	r1, #1
   249a8:	ldr	r0, [pc, #1028]	; 24db4 <__flatcc_fb_gen_c_json_printer@@Base+0x488>
   249ac:	bl	13f18 <fwrite@plt>
   249b0:	ldr	r1, [r6, #204]	; 0xcc
   249b4:	mov	r0, #10
   249b8:	bl	13fe4 <fputc@plt>
   249bc:	ldr	r4, [r6, #208]	; 0xd0
   249c0:	add	r0, sp, #12
   249c4:	mov	r2, #220	; 0xdc
   249c8:	ldr	r5, [r4, #52]	; 0x34
   249cc:	mov	r1, #0
   249d0:	bl	13f9c <memset@plt>
   249d4:	cmp	r5, #0
   249d8:	beq	249e8 <__flatcc_fb_gen_c_json_printer@@Base+0xbc>
   249dc:	ldrh	r3, [r5, #8]
   249e0:	cmp	r3, #1
   249e4:	bls	24d58 <__flatcc_fb_gen_c_json_printer@@Base+0x42c>
   249e8:	ldr	r4, [r4, #40]	; 0x28
   249ec:	cmp	r4, #0
   249f0:	beq	24a70 <__flatcc_fb_gen_c_json_printer@@Base+0x144>
   249f4:	ldr	r8, [pc, #956]	; 24db8 <__flatcc_fb_gen_c_json_printer@@Base+0x48c>
   249f8:	ldr	r7, [pc, #956]	; 24dbc <__flatcc_fb_gen_c_json_printer@@Base+0x490>
   249fc:	ldr	r5, [pc, #956]	; 24dc0 <__flatcc_fb_gen_c_json_printer@@Base+0x494>
   24a00:	b	24a38 <__flatcc_fb_gen_c_json_printer@@Base+0x10c>
   24a04:	bcc	24cbc <__flatcc_fb_gen_c_json_printer@@Base+0x390>
   24a08:	cmp	r3, #4
   24a0c:	bne	24a2c <__flatcc_fb_gen_c_json_printer@@Base+0x100>
   24a10:	ldr	r0, [r4, #12]
   24a14:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   24a18:	add	r3, sp, #12
   24a1c:	mov	r2, r3
   24a20:	mov	r1, r5
   24a24:	ldr	r0, [r6, #204]	; 0xcc
   24a28:	bl	13f84 <fprintf@plt>
   24a2c:	ldr	r4, [r4]
   24a30:	cmp	r4, #0
   24a34:	beq	24a70 <__flatcc_fb_gen_c_json_printer@@Base+0x144>
   24a38:	ldrh	r3, [r4, #8]
   24a3c:	add	r2, sp, #12
   24a40:	mov	r1, r4
   24a44:	cmp	r3, #1
   24a48:	bne	24a04 <__flatcc_fb_gen_c_json_printer@@Base+0xd8>
   24a4c:	ldr	r0, [r4, #12]
   24a50:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   24a54:	add	r2, sp, #12
   24a58:	mov	r1, r8
   24a5c:	ldr	r0, [r6, #204]	; 0xcc
   24a60:	bl	13f84 <fprintf@plt>
   24a64:	ldr	r4, [r4]
   24a68:	cmp	r4, #0
   24a6c:	bne	24a38 <__flatcc_fb_gen_c_json_printer@@Base+0x10c>
   24a70:	ldr	r1, [r6, #204]	; 0xcc
   24a74:	mov	r0, #10
   24a78:	bl	13fe4 <fputc@plt>
   24a7c:	ldr	r3, [r6, #208]	; 0xd0
   24a80:	ldr	r4, [r3, #40]	; 0x28
   24a84:	cmp	r4, #0
   24a88:	bne	24a9c <__flatcc_fb_gen_c_json_printer@@Base+0x170>
   24a8c:	b	24c5c <__flatcc_fb_gen_c_json_printer@@Base+0x330>
   24a90:	ldr	r4, [r4]
   24a94:	cmp	r4, #0
   24a98:	beq	24ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x194>
   24a9c:	ldrh	r3, [r4, #8]
   24aa0:	cmp	r3, #3
   24aa4:	bne	24a90 <__flatcc_fb_gen_c_json_printer@@Base+0x164>
   24aa8:	mov	r1, r4
   24aac:	mov	r0, r6
   24ab0:	bl	238cc <__flatcc_fb_gen_c_json_parser@@Base+0x1e20>
   24ab4:	ldr	r4, [r4]
   24ab8:	cmp	r4, #0
   24abc:	bne	24a9c <__flatcc_fb_gen_c_json_printer@@Base+0x170>
   24ac0:	ldr	r3, [r6, #208]	; 0xd0
   24ac4:	ldr	r5, [r3, #40]	; 0x28
   24ac8:	cmp	r5, #0
   24acc:	beq	24c5c <__flatcc_fb_gen_c_json_printer@@Base+0x330>
   24ad0:	ldr	fp, [pc, #748]	; 24dc4 <__flatcc_fb_gen_c_json_printer@@Base+0x498>
   24ad4:	ldr	r7, [pc, #748]	; 24dc8 <__flatcc_fb_gen_c_json_printer@@Base+0x49c>
   24ad8:	ldr	sl, [pc, #748]	; 24dcc <__flatcc_fb_gen_c_json_printer@@Base+0x4a0>
   24adc:	ldr	r9, [pc, #748]	; 24dd0 <__flatcc_fb_gen_c_json_printer@@Base+0x4a4>
   24ae0:	add	r8, r6, #204	; 0xcc
   24ae4:	b	24af4 <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
   24ae8:	ldr	r5, [r5]
   24aec:	cmp	r5, #0
   24af0:	beq	24bc8 <__flatcc_fb_gen_c_json_printer@@Base+0x29c>
   24af4:	ldrh	r3, [r5, #8]
   24af8:	cmp	r3, #4
   24afc:	bne	24ae8 <__flatcc_fb_gen_c_json_printer@@Base+0x1bc>
   24b00:	mov	r2, #220	; 0xdc
   24b04:	mov	r1, #0
   24b08:	add	r0, sp, #12
   24b0c:	bl	13f9c <memset@plt>
   24b10:	add	r2, sp, #12
   24b14:	mov	r1, r5
   24b18:	ldr	r0, [r5, #12]
   24b1c:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   24b20:	add	r2, sp, #12
   24b24:	mov	r1, fp
   24b28:	ldr	r0, [r6, #204]	; 0xcc
   24b2c:	bl	13f84 <fprintf@plt>
   24b30:	ldr	r4, [r5, #20]
   24b34:	cmp	r4, #0
   24b38:	bne	24b4c <__flatcc_fb_gen_c_json_printer@@Base+0x220>
   24b3c:	b	24b88 <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   24b40:	ldr	r4, [r4]
   24b44:	cmp	r4, #0
   24b48:	beq	24b88 <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   24b4c:	ldrh	r3, [r4, #24]
   24b50:	cmp	r3, #0
   24b54:	beq	24b40 <__flatcc_fb_gen_c_json_printer@@Base+0x214>
   24b58:	ldr	r1, [r4, #4]
   24b5c:	ldr	r2, [r4, #48]	; 0x30
   24b60:	ldr	r0, [r6, #204]	; 0xcc
   24b64:	ldr	r3, [r1, #4]
   24b68:	str	r3, [sp, #4]
   24b6c:	ldr	r1, [r1]
   24b70:	str	r1, [sp]
   24b74:	mov	r1, r7
   24b78:	bl	13f84 <fprintf@plt>
   24b7c:	ldr	r4, [r4]
   24b80:	cmp	r4, #0
   24b84:	bne	24b4c <__flatcc_fb_gen_c_json_printer@@Base+0x220>
   24b88:	ldr	r3, [r6, #204]	; 0xcc
   24b8c:	mov	r2, #78	; 0x4e
   24b90:	mov	r1, #1
   24b94:	mov	r0, sl
   24b98:	bl	13f18 <fwrite@plt>
   24b9c:	ldr	r3, [r6, #204]	; 0xcc
   24ba0:	mov	r2, #9
   24ba4:	mov	r1, #1
   24ba8:	mov	r0, r9
   24bac:	bl	13f18 <fwrite@plt>
   24bb0:	mov	r1, r5
   24bb4:	mov	r0, r8
   24bb8:	bl	23378 <__flatcc_fb_gen_c_json_parser@@Base+0x18cc>
   24bbc:	ldr	r5, [r5]
   24bc0:	cmp	r5, #0
   24bc4:	bne	24af4 <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
   24bc8:	ldr	r3, [r6, #208]	; 0xd0
   24bcc:	ldr	r4, [r3, #40]	; 0x28
   24bd0:	cmp	r4, #0
   24bd4:	beq	24c5c <__flatcc_fb_gen_c_json_printer@@Base+0x330>
   24bd8:	add	r5, r6, #204	; 0xcc
   24bdc:	b	24bec <__flatcc_fb_gen_c_json_printer@@Base+0x2c0>
   24be0:	ldr	r4, [r4]
   24be4:	cmp	r4, #0
   24be8:	beq	24c10 <__flatcc_fb_gen_c_json_printer@@Base+0x2e4>
   24bec:	ldrh	r3, [r4, #8]
   24bf0:	cmp	r3, #1
   24bf4:	bne	24be0 <__flatcc_fb_gen_c_json_printer@@Base+0x2b4>
   24bf8:	mov	r1, r4
   24bfc:	mov	r0, r5
   24c00:	bl	23554 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa8>
   24c04:	ldr	r4, [r4]
   24c08:	cmp	r4, #0
   24c0c:	bne	24bec <__flatcc_fb_gen_c_json_printer@@Base+0x2c0>
   24c10:	ldr	r3, [r6, #208]	; 0xd0
   24c14:	ldr	r4, [r3, #40]	; 0x28
   24c18:	cmp	r4, #0
   24c1c:	beq	24c5c <__flatcc_fb_gen_c_json_printer@@Base+0x330>
   24c20:	add	r5, r6, #204	; 0xcc
   24c24:	b	24c34 <__flatcc_fb_gen_c_json_printer@@Base+0x308>
   24c28:	ldr	r4, [r4]
   24c2c:	cmp	r4, #0
   24c30:	beq	24c58 <__flatcc_fb_gen_c_json_printer@@Base+0x32c>
   24c34:	ldrh	r3, [r4, #8]
   24c38:	cmp	r3, #0
   24c3c:	bne	24c28 <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   24c40:	mov	r1, r4
   24c44:	mov	r0, r5
   24c48:	bl	23e48 <__flatcc_fb_gen_c_json_parser@@Base+0x239c>
   24c4c:	ldr	r4, [r4]
   24c50:	cmp	r4, #0
   24c54:	bne	24c34 <__flatcc_fb_gen_c_json_printer@@Base+0x308>
   24c58:	ldr	r3, [r6, #208]	; 0xd0
   24c5c:	ldr	r4, [r3, #52]	; 0x34
   24c60:	cmp	r4, #0
   24c64:	beq	24c74 <__flatcc_fb_gen_c_json_printer@@Base+0x348>
   24c68:	ldrh	r3, [r4, #8]
   24c6c:	cmp	r3, #1
   24c70:	bls	24cd8 <__flatcc_fb_gen_c_json_printer@@Base+0x3ac>
   24c74:	ldr	r3, [r6, #212]	; 0xd4
   24c78:	ldr	r0, [r6, #204]	; 0xcc
   24c7c:	ldr	r3, [r3, #140]	; 0x8c
   24c80:	cmp	r3, #0
   24c84:	beq	24ca0 <__flatcc_fb_gen_c_json_printer@@Base+0x374>
   24c88:	mov	r3, r0
   24c8c:	mov	r2, #36	; 0x24
   24c90:	mov	r1, #1
   24c94:	ldr	r0, [pc, #312]	; 24dd4 <__flatcc_fb_gen_c_json_printer@@Base+0x4a8>
   24c98:	bl	13f18 <fwrite@plt>
   24c9c:	ldr	r0, [r6, #204]	; 0xcc
   24ca0:	ldr	r3, [r6, #208]	; 0xd0
   24ca4:	ldr	r1, [pc, #300]	; 24dd8 <__flatcc_fb_gen_c_json_printer@@Base+0x4ac>
   24ca8:	ldr	r2, [r3, #164]	; 0xa4
   24cac:	bl	13f84 <fprintf@plt>
   24cb0:	mov	r0, #0
   24cb4:	add	sp, sp, #236	; 0xec
   24cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24cbc:	ldr	r0, [r4, #12]
   24cc0:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   24cc4:	add	r2, sp, #12
   24cc8:	mov	r1, r7
   24ccc:	ldr	r0, [r6, #204]	; 0xcc
   24cd0:	bl	13f84 <fprintf@plt>
   24cd4:	b	24a2c <__flatcc_fb_gen_c_json_printer@@Base+0x100>
   24cd8:	mov	r2, #220	; 0xdc
   24cdc:	mov	r1, #0
   24ce0:	add	r0, sp, #12
   24ce4:	bl	13f9c <memset@plt>
   24ce8:	add	r2, sp, #12
   24cec:	mov	r1, r4
   24cf0:	ldr	r0, [r4, #12]
   24cf4:	bl	152c0 <__flatcc_fb_scoped_symbol_name@@Base>
   24cf8:	ldr	r3, [r6, #208]	; 0xd0
   24cfc:	ldr	r1, [pc, #216]	; 24ddc <__flatcc_fb_gen_c_json_printer@@Base+0x4b0>
   24d00:	ldr	r0, [r6, #204]	; 0xcc
   24d04:	ldr	r2, [r3, #160]	; 0xa0
   24d08:	bl	13f84 <fprintf@plt>
   24d0c:	add	r2, sp, #12
   24d10:	ldr	r1, [pc, #200]	; 24de0 <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   24d14:	ldr	r0, [r6, #204]	; 0xcc
   24d18:	bl	13f84 <fprintf@plt>
   24d1c:	ldr	r2, [r6, #208]	; 0xd0
   24d20:	ldrh	r3, [r2, #16]
   24d24:	cmp	r3, #2
   24d28:	beq	24d88 <__flatcc_fb_gen_c_json_printer@@Base+0x45c>
   24d2c:	ldr	r3, [r6, #204]	; 0xcc
   24d30:	mov	r2, #3
   24d34:	mov	r1, #1
   24d38:	ldr	r0, [pc, #164]	; 24de4 <__flatcc_fb_gen_c_json_printer@@Base+0x4b8>
   24d3c:	bl	13f18 <fwrite@plt>
   24d40:	ldr	r3, [r6, #204]	; 0xcc
   24d44:	mov	r2, #3
   24d48:	mov	r1, #1
   24d4c:	ldr	r0, [pc, #148]	; 24de8 <__flatcc_fb_gen_c_json_printer@@Base+0x4bc>
   24d50:	bl	13f18 <fwrite@plt>
   24d54:	b	24c74 <__flatcc_fb_gen_c_json_printer@@Base+0x348>
   24d58:	ldr	r3, [r6, #204]	; 0xcc
   24d5c:	ldr	r2, [pc, #136]	; 24dec <__flatcc_fb_gen_c_json_printer@@Base+0x4c0>
   24d60:	mov	r1, #1
   24d64:	ldr	r0, [pc, #132]	; 24df0 <__flatcc_fb_gen_c_json_printer@@Base+0x4c4>
   24d68:	bl	13f18 <fwrite@plt>
   24d6c:	ldr	r3, [r6, #208]	; 0xd0
   24d70:	ldr	r1, [pc, #124]	; 24df4 <__flatcc_fb_gen_c_json_printer@@Base+0x4c8>
   24d74:	ldr	r0, [r6, #204]	; 0xcc
   24d78:	ldr	r2, [r3, #160]	; 0xa0
   24d7c:	bl	13f84 <fprintf@plt>
   24d80:	ldr	r4, [r6, #208]	; 0xd0
   24d84:	b	249e8 <__flatcc_fb_gen_c_json_printer@@Base+0xbc>
   24d88:	ldr	r3, [r2, #8]
   24d8c:	ldr	r1, [pc, #100]	; 24df8 <__flatcc_fb_gen_c_json_printer@@Base+0x4cc>
   24d90:	ldr	r2, [r2, #12]
   24d94:	ldr	r0, [r6, #204]	; 0xcc
   24d98:	bl	13f84 <fprintf@plt>
   24d9c:	b	24d40 <__flatcc_fb_gen_c_json_printer@@Base+0x414>
   24da0:			; <UNDEFINED> instruction: 0x00057bb0
   24da4:			; <UNDEFINED> instruction: 0x000432b4
   24da8:	andeq	r7, r5, r8, ror #23
   24dac:	muleq	r4, ip, fp
   24db0:	andeq	r7, r5, r4, lsl ip
   24db4:	andeq	r3, r4, r8, asr #7
   24db8:	muleq	r5, r4, pc	; <UNPREDICTABLE>
   24dbc:	andeq	r7, r5, r8, lsr #30
   24dc0:	andeq	r7, r5, r0, ror #28
   24dc4:	andeq	r7, r5, r4, ror #31
   24dc8:	andeq	r8, r5, r8, lsr #1
   24dcc:	andeq	r8, r5, r8, asr r0
   24dd0:	andeq	r6, r5, r4, lsr #25
   24dd4:	andeq	r9, r4, ip, lsr #4
   24dd8:	andeq	r8, r5, ip, lsl r2
   24ddc:	strdeq	r8, [r5], -ip
   24de0:	andeq	r8, r5, r4, asr r1
   24de4:	andeq	r8, r5, r8, lsl r2
   24de8:	ldrdeq	r3, [r5], -r0
   24dec:	andeq	r0, r0, r2, ror #3
   24df0:	andeq	r7, r5, r4, lsr #24
   24df4:	andeq	r7, r5, r8, lsl #28
   24df8:	andeq	r8, r5, ip, lsl #4
   24dfc:	andeq	r0, r0, r0
   24e00:	add	r3, r1, #4
   24e04:	mov	r2, r0
   24e08:	ldr	r1, [pc, #4]	; 24e14 <__flatcc_fb_gen_c_json_printer@@Base+0x4e8>
   24e0c:	mov	r0, r3
   24e10:	b	27fcc <fb_symbol_table_visit@@Base>
   24e14:	andeq	r4, r2, r0, lsr lr
   24e18:	add	r3, r1, #4
   24e1c:	mov	r2, r0
   24e20:	ldr	r1, [pc, #4]	; 24e2c <__flatcc_fb_gen_c_json_printer@@Base+0x500>
   24e24:	mov	r0, r3
   24e28:	b	27fcc <fb_symbol_table_visit@@Base>
   24e2c:	andeq	r4, r2, r4, lsr pc
   24e30:	ldrh	r3, [r1, #8]
   24e34:	cmp	r3, #4
   24e38:	bxhi	lr
   24e3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24e40:	mov	r6, r0
   24e44:	ldr	r0, [r0, #40]	; 0x28
   24e48:	mov	r7, r1
   24e4c:	add	r0, r0, #172	; 0xac
   24e50:	ldr	r1, [r1, #16]
   24e54:	bl	275b4 <ptr_set_find_item@@Base>
   24e58:	cmp	r0, #0
   24e5c:	beq	24f30 <__flatcc_fb_gen_c_json_printer@@Base+0x604>
   24e60:	ldr	r3, [r6]
   24e64:	ldr	r9, [r6, #36]	; 0x24
   24e68:	cmp	r3, #0
   24e6c:	moveq	r3, r9
   24e70:	beq	24eb8 <__flatcc_fb_gen_c_json_printer@@Base+0x58c>
   24e74:	ldr	r3, [r7, #12]
   24e78:	ldr	r5, [r3]
   24e7c:	mov	r3, r9
   24e80:	cmp	r5, #0
   24e84:	beq	24eb8 <__flatcc_fb_gen_c_json_printer@@Base+0x58c>
   24e88:	mov	r8, #46	; 0x2e
   24e8c:	ldr	r2, [r5, #4]
   24e90:	mov	r0, r3
   24e94:	ldm	r2, {r1, r4}
   24e98:	mov	r2, r4
   24e9c:	bl	13edc <memcpy@plt>
   24ea0:	add	r4, r0, r4
   24ea4:	add	r3, r4, #1
   24ea8:	strb	r8, [r4]
   24eac:	ldr	r5, [r5]
   24eb0:	cmp	r5, #0
   24eb4:	bne	24e8c <__flatcc_fb_gen_c_json_printer@@Base+0x560>
   24eb8:	ldr	r2, [r7, #4]
   24ebc:	mov	r0, r3
   24ec0:	ldm	r2, {r1, r4}
   24ec4:	mov	r2, r4
   24ec8:	bl	13edc <memcpy@plt>
   24ecc:	mov	r2, #0
   24ed0:	strb	r2, [r0, r4]
   24ed4:	ldrh	r2, [r7, #8]
   24ed8:	add	r3, r0, r4
   24edc:	add	r3, r3, #1
   24ee0:	str	r3, [r6, #36]	; 0x24
   24ee4:	cmp	r2, #4
   24ee8:	ldrls	pc, [pc, r2, lsl #2]
   24eec:	b	24f2c <__flatcc_fb_gen_c_json_printer@@Base+0x600>
   24ef0:	andeq	r4, r2, r8, lsl pc
   24ef4:	andeq	r4, r2, r8, lsl pc
   24ef8:	andeq	r4, r2, ip, lsr #30
   24efc:	andeq	r4, r2, r4, lsl #30
   24f00:	andeq	r4, r2, r4, lsl #30
   24f04:	ldr	r3, [r6, #32]
   24f08:	add	r2, r3, #8
   24f0c:	stm	r3, {r7, r9}
   24f10:	str	r2, [r6, #32]
   24f14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24f18:	ldr	r3, [r6, #28]
   24f1c:	add	r2, r3, #8
   24f20:	stm	r3, {r7, r9}
   24f24:	str	r2, [r6, #28]
   24f28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24f30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24f34:	ldrh	r3, [r1, #8]
   24f38:	cmp	r3, #4
   24f3c:	bxhi	lr
   24f40:	push	{r4, r5, r6, lr}
   24f44:	mov	r4, r0
   24f48:	ldr	r0, [r0, #40]	; 0x28
   24f4c:	mov	r5, r1
   24f50:	add	r0, r0, #172	; 0xac
   24f54:	ldr	r1, [r1, #16]
   24f58:	bl	275b4 <ptr_set_find_item@@Base>
   24f5c:	cmp	r0, #0
   24f60:	beq	25004 <__flatcc_fb_gen_c_json_printer@@Base+0x6d8>
   24f64:	ldr	ip, [r4]
   24f68:	cmp	ip, #0
   24f6c:	beq	24fa0 <__flatcc_fb_gen_c_json_printer@@Base+0x674>
   24f70:	ldr	r3, [r5, #12]
   24f74:	ldr	r3, [r3]
   24f78:	cmp	r3, #0
   24f7c:	beq	25008 <__flatcc_fb_gen_c_json_printer@@Base+0x6dc>
   24f80:	mov	ip, #0
   24f84:	ldr	r2, [r3, #4]
   24f88:	ldr	r3, [r3]
   24f8c:	ldr	r2, [r2, #4]
   24f90:	cmp	r3, #0
   24f94:	add	r2, r2, #1
   24f98:	add	ip, ip, r2
   24f9c:	bne	24f84 <__flatcc_fb_gen_c_json_printer@@Base+0x658>
   24fa0:	ldr	r3, [r5, #4]
   24fa4:	ldr	r1, [r4, #12]
   24fa8:	ldrh	r2, [r5, #8]
   24fac:	ldr	r3, [r3, #4]
   24fb0:	add	r3, r3, r1
   24fb4:	add	r3, r3, #1
   24fb8:	add	ip, r3, ip
   24fbc:	str	ip, [r4, #12]
   24fc0:	cmp	r2, #4
   24fc4:	ldrls	pc, [pc, r2, lsl #2]
   24fc8:	b	25000 <__flatcc_fb_gen_c_json_printer@@Base+0x6d4>
   24fcc:	strdeq	r4, [r2], -r0
   24fd0:	strdeq	r4, [r2], -r0
   24fd4:	andeq	r5, r2, r0
   24fd8:	andeq	r4, r2, r0, ror #31
   24fdc:	andeq	r4, r2, r0, ror #31
   24fe0:	ldr	r3, [r4, #8]
   24fe4:	add	r3, r3, #1
   24fe8:	str	r3, [r4, #8]
   24fec:	pop	{r4, r5, r6, pc}
   24ff0:	ldr	r3, [r4, #4]
   24ff4:	add	r3, r3, #1
   24ff8:	str	r3, [r4, #4]
   24ffc:	pop	{r4, r5, r6, pc}
   25000:	pop	{r4, r5, r6, pc}
   25004:	pop	{r4, r5, r6, pc}
   25008:	mov	ip, r3
   2500c:	b	24fa0 <__flatcc_fb_gen_c_json_printer@@Base+0x674>
   25010:	ldr	r1, [r1, #4]
   25014:	ldr	r0, [r0, #4]
   25018:	b	13eb8 <strcmp@plt>
   2501c:	sub	r2, r2, #2
   25020:	push	{r4, r5, r6, r7, r8, lr}
   25024:	mov	r4, r0
   25028:	cmp	r2, #13
   2502c:	ldrls	pc, [pc, r2, lsl #2]
   25030:	b	251a4 <__flatcc_fb_gen_c_json_printer@@Base+0x878>
   25034:	muleq	r2, r4, r1
   25038:	andeq	r5, r2, r4, lsr #3
   2503c:	andeq	r5, r2, r4, lsr #3
   25040:	andeq	r5, r2, r4, lsr #3
   25044:	andeq	r5, r2, r4, lsr #3
   25048:	andeq	r5, r2, r8, ror #1
   2504c:	andeq	r5, r2, r4, lsr r1
   25050:	andeq	r5, r2, ip, rrx
   25054:	andeq	r5, r2, r4, lsr #3
   25058:	andeq	r5, r2, r4, lsr #3
   2505c:	andeq	r5, r2, r4, lsr #3
   25060:	andeq	r5, r2, r4, lsr #3
   25064:	andeq	r5, r2, ip, asr #2
   25068:	andeq	r5, r2, r4, ror r1
   2506c:	mvn	r6, #0
   25070:	mov	r7, #13
   25074:	mov	r5, #14
   25078:	mov	r1, #3
   2507c:	mov	r0, r4
   25080:	bl	3ad9c <flatcc_builder_start_table@@Base>
   25084:	cmp	r0, #0
   25088:	bne	251c4 <__flatcc_fb_gen_c_json_printer@@Base+0x898>
   2508c:	cmn	r6, #1
   25090:	beq	250b4 <__flatcc_fb_gen_c_json_printer@@Base+0x788>
   25094:	mov	r3, #4
   25098:	mov	r2, r3
   2509c:	mov	r1, #2
   250a0:	mov	r0, r4
   250a4:	bl	3cf08 <flatcc_builder_table_add@@Base>
   250a8:	cmp	r0, #0
   250ac:	strne	r6, [r0]
   250b0:	beq	251c4 <__flatcc_fb_gen_c_json_printer@@Base+0x898>
   250b4:	cmp	r5, #0
   250b8:	bne	251cc <__flatcc_fb_gen_c_json_printer@@Base+0x8a0>
   250bc:	cmp	r7, #0
   250c0:	bne	251f0 <__flatcc_fb_gen_c_json_printer@@Base+0x8c4>
   250c4:	mov	r2, #0
   250c8:	ldr	r1, [pc, #384]	; 25250 <__flatcc_fb_gen_c_json_printer@@Base+0x924>
   250cc:	mov	r0, r4
   250d0:	bl	3b744 <flatcc_builder_check_required@@Base>
   250d4:	cmp	r0, #0
   250d8:	beq	2523c <__flatcc_fb_gen_c_json_printer@@Base+0x910>
   250dc:	mov	r0, r4
   250e0:	pop	{r4, r5, r6, r7, r8, lr}
   250e4:	b	3b7dc <flatcc_builder_end_table@@Base>
   250e8:	mvn	r6, #0
   250ec:	sub	r1, r1, #1
   250f0:	cmp	r1, #10
   250f4:	movhi	r7, #0
   250f8:	movhi	r5, #14
   250fc:	bhi	25078 <__flatcc_fb_gen_c_json_printer@@Base+0x74c>
   25100:	mov	r2, #14
   25104:	ldr	r3, [pc, #328]	; 25254 <__flatcc_fb_gen_c_json_printer@@Base+0x928>
   25108:	cmp	r2, #0
   2510c:	add	r1, r3, r1
   25110:	ldrsb	r5, [r1, #24]
   25114:	beq	2512c <__flatcc_fb_gen_c_json_printer@@Base+0x800>
   25118:	cmp	r2, #14
   2511c:	moveq	r7, r5
   25120:	moveq	r5, r2
   25124:	beq	25078 <__flatcc_fb_gen_c_json_printer@@Base+0x74c>
   25128:	mov	r5, r2
   2512c:	mov	r7, #0
   25130:	b	25078 <__flatcc_fb_gen_c_json_printer@@Base+0x74c>
   25134:	mvn	r6, #0
   25138:	sub	r1, r1, #1
   2513c:	cmp	r1, #10
   25140:	movls	r2, #0
   25144:	bls	25104 <__flatcc_fb_gen_c_json_printer@@Base+0x7d8>
   25148:	b	251a8 <__flatcc_fb_gen_c_json_printer@@Base+0x87c>
   2514c:	ldrh	r3, [r1, #8]
   25150:	ldr	r6, [r1, #124]	; 0x7c
   25154:	cmp	r3, #4
   25158:	ldrls	pc, [pc, r3, lsl #2]
   2515c:	b	251b4 <__flatcc_fb_gen_c_json_printer@@Base+0x888>
   25160:	andeq	r5, r2, r0, lsr #4
   25164:	andeq	r5, r2, r0, lsr #4
   25168:			; <UNDEFINED> instruction: 0x000251b4
   2516c:	andeq	r5, r2, r8, lsr #4
   25170:	andeq	r5, r2, r4, lsl r2
   25174:	ldrh	r3, [r1, #8]
   25178:	ldr	r6, [r1, #124]	; 0x7c
   2517c:	cmp	r3, #1
   25180:	bls	25230 <__flatcc_fb_gen_c_json_printer@@Base+0x904>
   25184:	cmp	r3, #3
   25188:	bne	251a8 <__flatcc_fb_gen_c_json_printer@@Base+0x87c>
   2518c:	ldr	r1, [r1, #40]	; 0x28
   25190:	b	250ec <__flatcc_fb_gen_c_json_printer@@Base+0x7c0>
   25194:	mvn	r6, #0
   25198:	mov	r7, #0
   2519c:	mov	r5, #13
   251a0:	b	25078 <__flatcc_fb_gen_c_json_printer@@Base+0x74c>
   251a4:	mvn	r6, #0
   251a8:	mov	r7, #0
   251ac:	mov	r5, r7
   251b0:	b	25078 <__flatcc_fb_gen_c_json_printer@@Base+0x74c>
   251b4:	mov	r1, #3
   251b8:	bl	3ad9c <flatcc_builder_start_table@@Base>
   251bc:	cmp	r0, #0
   251c0:	beq	250c4 <__flatcc_fb_gen_c_json_printer@@Base+0x798>
   251c4:	mov	r0, #0
   251c8:	pop	{r4, r5, r6, r7, r8, pc}
   251cc:	mov	r3, #1
   251d0:	mov	r2, r3
   251d4:	mov	r1, #0
   251d8:	mov	r0, r4
   251dc:	bl	3cf08 <flatcc_builder_table_add@@Base>
   251e0:	cmp	r0, #0
   251e4:	strbne	r5, [r0]
   251e8:	bne	250bc <__flatcc_fb_gen_c_json_printer@@Base+0x790>
   251ec:	b	251c4 <__flatcc_fb_gen_c_json_printer@@Base+0x898>
   251f0:	mov	r3, #1
   251f4:	mov	r2, r3
   251f8:	mov	r1, r3
   251fc:	mov	r0, r4
   25200:	bl	3cf08 <flatcc_builder_table_add@@Base>
   25204:	cmp	r0, #0
   25208:	strbne	r7, [r0]
   2520c:	bne	250c4 <__flatcc_fb_gen_c_json_printer@@Base+0x798>
   25210:	b	251c4 <__flatcc_fb_gen_c_json_printer@@Base+0x898>
   25214:	mov	r7, #0
   25218:	mov	r5, #16
   2521c:	b	25078 <__flatcc_fb_gen_c_json_printer@@Base+0x74c>
   25220:	mov	r2, #15
   25224:	b	25128 <__flatcc_fb_gen_c_json_printer@@Base+0x7fc>
   25228:	ldr	r1, [r1, #40]	; 0x28
   2522c:	b	25138 <__flatcc_fb_gen_c_json_printer@@Base+0x80c>
   25230:	mov	r7, #15
   25234:	mov	r5, #14
   25238:	b	25078 <__flatcc_fb_gen_c_json_printer@@Base+0x74c>
   2523c:	ldr	r3, [pc, #20]	; 25258 <__flatcc_fb_gen_c_json_printer@@Base+0x92c>
   25240:	mov	r2, #23
   25244:	ldr	r1, [pc, #16]	; 2525c <__flatcc_fb_gen_c_json_printer@@Base+0x930>
   25248:	ldr	r0, [pc, #16]	; 25260 <__flatcc_fb_gen_c_json_printer@@Base+0x934>
   2524c:	bl	14038 <__assert_fail@plt>
   25250:	andeq	r8, r5, ip, ror r2
   25254:	andeq	r8, r5, r4, asr #4
   25258:	andeq	r8, r5, r8, ror #4
   2525c:	strdeq	r8, [r5], -r0
   25260:	andeq	r8, r5, r0, asr r4
   25264:	cmp	r0, #0
   25268:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2526c:	sub	sp, sp, #36	; 0x24
   25270:	beq	25284 <__flatcc_fb_gen_c_json_printer@@Base+0x958>
   25274:	ldr	r3, [pc, #1660]	; 258f8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   25278:	ldr	r2, [r0, #4]
   2527c:	cmp	r2, r3
   25280:	beq	25298 <__flatcc_fb_gen_c_json_printer@@Base+0x96c>
   25284:	ldr	r3, [pc, #1648]	; 258fc <__flatcc_fb_gen_c_json_printer@@Base+0xfd0>
   25288:	mov	r2, #237	; 0xed
   2528c:	ldr	r1, [pc, #1644]	; 25900 <__flatcc_fb_gen_c_json_printer@@Base+0xfd4>
   25290:	ldr	r0, [pc, #1644]	; 25904 <__flatcc_fb_gen_c_json_printer@@Base+0xfd8>
   25294:	bl	14038 <__assert_fail@plt>
   25298:	ldr	r2, [r0]
   2529c:	adds	r3, r0, r2
   252a0:	beq	25284 <__flatcc_fb_gen_c_json_printer@@Base+0x958>
   252a4:	ldr	r2, [r0, r2]
   252a8:	sub	r2, r3, r2
   252ac:	ldrh	r1, [r2]
   252b0:	cmp	r1, #5
   252b4:	bhi	252cc <__flatcc_fb_gen_c_json_printer@@Base+0x9a0>
   252b8:	ldr	r3, [pc, #1596]	; 258fc <__flatcc_fb_gen_c_json_printer@@Base+0xfd0>
   252bc:	mov	r2, #237	; 0xed
   252c0:	ldr	r1, [pc, #1592]	; 25900 <__flatcc_fb_gen_c_json_printer@@Base+0xfd4>
   252c4:	ldr	r0, [pc, #1596]	; 25908 <__flatcc_fb_gen_c_json_printer@@Base+0xfdc>
   252c8:	bl	14038 <__assert_fail@plt>
   252cc:	ldrh	r1, [r2, #4]
   252d0:	cmp	r1, #0
   252d4:	beq	252b8 <__flatcc_fb_gen_c_json_printer@@Base+0x98c>
   252d8:	ldr	r2, [r3, r1]
   252dc:	add	r3, r3, r1
   252e0:	add	r2, r2, #4
   252e4:	adds	r1, r3, r2
   252e8:	mov	r0, r1
   252ec:	str	r1, [sp, #16]
   252f0:	beq	25668 <__flatcc_fb_gen_c_json_printer@@Base+0xd3c>
   252f4:	ldr	r1, [r1, #-4]
   252f8:	cmp	r1, #0
   252fc:	beq	25668 <__flatcc_fb_gen_c_json_printer@@Base+0xd3c>
   25300:	ldr	r3, [r3, r2]
   25304:	adds	r2, r0, r3
   25308:	beq	258e4 <__flatcc_fb_gen_c_json_printer@@Base+0xfb8>
   2530c:	ldr	r3, [r0, r3]
   25310:	sub	r3, r2, r3
   25314:	ldrh	r0, [r3]
   25318:	cmp	r0, #7
   2531c:	bls	25654 <__flatcc_fb_gen_c_json_printer@@Base+0xd28>
   25320:	ldrh	r3, [r3, #6]
   25324:	cmp	r3, #0
   25328:	beq	25654 <__flatcc_fb_gen_c_json_printer@@Base+0xd28>
   2532c:	mov	r0, #0
   25330:	str	r0, [sp, #20]
   25334:	ldr	r0, [sp, #16]
   25338:	add	r0, r0, #4
   2533c:	str	r0, [sp, #28]
   25340:	ldr	r0, [r2, r3]
   25344:	add	r6, r2, r3
   25348:	add	r3, r0, #4
   2534c:	adds	r6, r6, r3
   25350:	beq	25604 <__flatcc_fb_gen_c_json_printer@@Base+0xcd8>
   25354:	ldr	r3, [r6, #-4]
   25358:	cmp	r3, #0
   2535c:	str	r3, [sp, #24]
   25360:	beq	25604 <__flatcc_fb_gen_c_json_printer@@Base+0xcd8>
   25364:	lsr	r2, r3, #1
   25368:	sub	r3, r3, #1
   2536c:	str	r3, [sp]
   25370:	lsl	r3, r2, #1
   25374:	str	r2, [sp, #12]
   25378:	str	r3, [sp, #8]
   2537c:	b	2547c <__flatcc_fb_gen_c_json_printer@@Base+0xb50>
   25380:	ldr	r8, [r6, #-4]
   25384:	mov	r5, r9
   25388:	lsl	fp, r4, #2
   2538c:	cmp	r8, r4
   25390:	add	r2, r6, fp
   25394:	bls	258d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa4>
   25398:	ldr	r7, [r6, r4, lsl #2]
   2539c:	adds	r3, r2, r7
   253a0:	beq	258cc <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   253a4:	ldr	r2, [r2, r7]
   253a8:	sub	r2, r3, r2
   253ac:	ldrh	r1, [r2]
   253b0:	cmp	r1, #5
   253b4:	bls	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   253b8:	ldrh	r0, [r2, #4]
   253bc:	cmp	r0, #0
   253c0:	beq	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   253c4:	ldr	r2, [r3, r0]
   253c8:	cmp	r5, r8
   253cc:	add	r2, r2, #4
   253d0:	add	r0, r3, r0
   253d4:	lsl	r3, r5, #2
   253d8:	add	r0, r0, r2
   253dc:	add	r2, r6, r3
   253e0:	bcs	258d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa4>
   253e4:	ldr	r8, [r6, r5, lsl #2]
   253e8:	adds	r1, r2, r8
   253ec:	beq	258cc <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   253f0:	ldr	r2, [r2, r8]
   253f4:	sub	r2, r1, r2
   253f8:	ldrh	ip, [r2]
   253fc:	cmp	ip, #5
   25400:	bls	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   25404:	ldrh	ip, [r2, #4]
   25408:	cmp	ip, #0
   2540c:	beq	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   25410:	ldr	r2, [r1, ip]
   25414:	add	r1, r1, ip
   25418:	add	r2, r2, #4
   2541c:	adds	r1, r1, r2
   25420:	moveq	sl, #0
   25424:	ldrne	sl, [r1, #-4]
   25428:	cmp	r0, #0
   2542c:	beq	255d0 <__flatcc_fb_gen_c_json_printer@@Base+0xca4>
   25430:	ldr	r9, [r0, #-4]
   25434:	str	r3, [sp, #4]
   25438:	cmp	sl, r9
   2543c:	movcc	r2, sl
   25440:	movcs	r2, r9
   25444:	bl	14020 <strncmp@plt>
   25448:	ldr	r3, [sp, #4]
   2544c:	cmp	r0, #0
   25450:	bne	2558c <__flatcc_fb_gen_c_json_printer@@Base+0xc60>
   25454:	cmp	sl, r9
   25458:	bhi	25590 <__flatcc_fb_gen_c_json_printer@@Base+0xc64>
   2545c:	ldr	r3, [sp, #12]
   25460:	sub	r3, r3, #1
   25464:	str	r3, [sp, #12]
   25468:	cmn	r3, #1
   2546c:	ldr	r3, [sp, #8]
   25470:	sub	r3, r3, #2
   25474:	str	r3, [sp, #8]
   25478:	beq	25670 <__flatcc_fb_gen_c_json_printer@@Base+0xd44>
   2547c:	ldr	r2, [sp, #8]
   25480:	ldr	r3, [sp]
   25484:	cmp	r3, r2
   25488:	movcs	r9, r2
   2548c:	ldrcs	r4, [sp, #12]
   25490:	bcc	2545c <__flatcc_fb_gen_c_json_printer@@Base+0xb30>
   25494:	ldr	r3, [sp]
   25498:	cmp	r3, r9
   2549c:	bls	25380 <__flatcc_fb_gen_c_json_printer@@Base+0xa54>
   254a0:	ldr	r8, [r6, #-4]
   254a4:	lsl	r3, r9, #2
   254a8:	cmp	r8, r9
   254ac:	add	r1, r6, r3
   254b0:	bls	258d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa4>
   254b4:	ldr	r0, [r6, r9, lsl #2]
   254b8:	adds	r2, r1, r0
   254bc:	beq	258cc <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   254c0:	ldr	r1, [r1, r0]
   254c4:	sub	r1, r2, r1
   254c8:	ldrh	r0, [r1]
   254cc:	cmp	r0, #5
   254d0:	bls	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   254d4:	ldrh	r1, [r1, #4]
   254d8:	cmp	r1, #0
   254dc:	beq	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   254e0:	ldr	r0, [r2, r1]
   254e4:	add	r5, r9, #1
   254e8:	add	r2, r2, r1
   254ec:	add	r3, r3, #4
   254f0:	add	r0, r0, #4
   254f4:	cmp	r8, r5
   254f8:	add	r0, r2, r0
   254fc:	add	r2, r6, r3
   25500:	bls	258d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa4>
   25504:	ldr	r3, [r6, r3]
   25508:	adds	r1, r2, r3
   2550c:	beq	258cc <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   25510:	ldr	r3, [r2, r3]
   25514:	sub	r3, r1, r3
   25518:	ldrh	r2, [r3]
   2551c:	cmp	r2, #5
   25520:	bls	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   25524:	ldrh	r2, [r3, #4]
   25528:	cmp	r2, #0
   2552c:	beq	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   25530:	ldr	r3, [r1, r2]
   25534:	add	r1, r1, r2
   25538:	add	r3, r3, #4
   2553c:	adds	r1, r1, r3
   25540:	beq	25570 <__flatcc_fb_gen_c_json_printer@@Base+0xc44>
   25544:	cmp	r0, #0
   25548:	ldr	sl, [r1, #-4]
   2554c:	beq	255c0 <__flatcc_fb_gen_c_json_printer@@Base+0xc94>
   25550:	ldr	r7, [r0, #-4]
   25554:	cmp	sl, r7
   25558:	movcc	r2, sl
   2555c:	movcs	r2, r7
   25560:	bl	14020 <strncmp@plt>
   25564:	cmp	r0, #0
   25568:	beq	255c4 <__flatcc_fb_gen_c_json_printer@@Base+0xc98>
   2556c:	blt	25388 <__flatcc_fb_gen_c_json_printer@@Base+0xa5c>
   25570:	mov	r5, r9
   25574:	b	25388 <__flatcc_fb_gen_c_json_printer@@Base+0xa5c>
   25578:	ldr	r3, [pc, #908]	; 2590c <__flatcc_fb_gen_c_json_printer@@Base+0xfe0>
   2557c:	mov	r2, #195	; 0xc3
   25580:	ldr	r1, [pc, #888]	; 25900 <__flatcc_fb_gen_c_json_printer@@Base+0xfd4>
   25584:	ldr	r0, [pc, #892]	; 25908 <__flatcc_fb_gen_c_json_printer@@Base+0xfdc>
   25588:	bl	14038 <__assert_fail@plt>
   2558c:	bge	2545c <__flatcc_fb_gen_c_json_printer@@Base+0xb30>
   25590:	sub	r4, r4, r5
   25594:	ldr	r2, [sp]
   25598:	lsl	r4, r4, #2
   2559c:	lsl	r9, r5, #1
   255a0:	sub	r8, r8, r4
   255a4:	add	r7, r7, r4
   255a8:	cmp	r2, r9
   255ac:	str	r8, [r6, fp]
   255b0:	mov	r4, r5
   255b4:	str	r7, [r6, r3]
   255b8:	bcs	25494 <__flatcc_fb_gen_c_json_printer@@Base+0xb68>
   255bc:	b	2545c <__flatcc_fb_gen_c_json_printer@@Base+0xb30>
   255c0:	mov	r7, #0
   255c4:	cmp	sl, r7
   255c8:	movls	r5, r9
   255cc:	b	25388 <__flatcc_fb_gen_c_json_printer@@Base+0xa5c>
   255d0:	mov	r9, #0
   255d4:	b	25454 <__flatcc_fb_gen_c_json_printer@@Base+0xb28>
   255d8:	ldr	r3, [sp, #8]
   255dc:	cmp	fp, r3
   255e0:	bhi	25870 <__flatcc_fb_gen_c_json_printer@@Base+0xf44>
   255e4:	ldr	r3, [sp]
   255e8:	cmp	r3, #0
   255ec:	ldr	r3, [sp, #4]
   255f0:	add	r3, r3, #4
   255f4:	str	r3, [sp, #4]
   255f8:	bne	25698 <__flatcc_fb_gen_c_json_printer@@Base+0xd6c>
   255fc:	ldr	r3, [sp, #16]
   25600:	ldr	r1, [r3, #-4]
   25604:	ldr	r3, [sp, #20]
   25608:	add	r3, r3, #1
   2560c:	cmp	r3, r1
   25610:	str	r3, [sp, #20]
   25614:	bcs	25668 <__flatcc_fb_gen_c_json_printer@@Base+0xd3c>
   25618:	ldr	r2, [sp, #28]
   2561c:	mov	r3, r2
   25620:	add	r2, r2, #4
   25624:	ldr	r0, [r3]
   25628:	str	r2, [sp, #28]
   2562c:	adds	r2, r3, r0
   25630:	beq	258e4 <__flatcc_fb_gen_c_json_printer@@Base+0xfb8>
   25634:	ldr	r3, [r3, r0]
   25638:	sub	r3, r2, r3
   2563c:	ldrh	r0, [r3]
   25640:	cmp	r0, #7
   25644:	bls	25654 <__flatcc_fb_gen_c_json_printer@@Base+0xd28>
   25648:	ldrh	r3, [r3, #6]
   2564c:	cmp	r3, #0
   25650:	bne	25340 <__flatcc_fb_gen_c_json_printer@@Base+0xa14>
   25654:	ldr	r3, [pc, #692]	; 25910 <__flatcc_fb_gen_c_json_printer@@Base+0xfe4>
   25658:	mov	r2, #224	; 0xe0
   2565c:	ldr	r1, [pc, #668]	; 25900 <__flatcc_fb_gen_c_json_printer@@Base+0xfd4>
   25660:	ldr	r0, [pc, #672]	; 25908 <__flatcc_fb_gen_c_json_printer@@Base+0xfdc>
   25664:	bl	14038 <__assert_fail@plt>
   25668:	add	sp, sp, #36	; 0x24
   2566c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25670:	ldr	r3, [sp]
   25674:	cmp	r3, #0
   25678:	beq	255fc <__flatcc_fb_gen_c_json_printer@@Base+0xcd0>
   2567c:	ldr	r2, [sp, #24]
   25680:	rsb	r3, r2, r2, lsl #30
   25684:	add	r2, r6, r2, lsl #2
   25688:	lsl	r3, r3, #2
   2568c:	add	r3, r3, #4
   25690:	str	r2, [sp, #12]
   25694:	str	r3, [sp, #4]
   25698:	ldr	r1, [sp, #12]
   2569c:	ldr	r0, [sp]
   256a0:	ldr	r3, [r6]
   256a4:	sub	r0, r0, #1
   256a8:	ldr	r2, [r1, #-4]
   256ac:	str	r0, [sp]
   256b0:	ldr	r0, [sp, #4]
   256b4:	mov	r5, #0
   256b8:	sub	r2, r2, r0
   256bc:	str	r2, [r6]
   256c0:	mov	r2, r1
   256c4:	add	r3, r0, r3
   256c8:	str	r3, [r2, #-4]!
   256cc:	mov	fp, r5
   256d0:	str	r2, [sp, #12]
   256d4:	ldr	r3, [sp]
   256d8:	b	2589c <__flatcc_fb_gen_c_json_printer@@Base+0xf70>
   256dc:	lsl	r3, fp, #2
   256e0:	cmp	r8, fp
   256e4:	add	r0, r6, r3
   256e8:	bls	258d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa4>
   256ec:	ldr	r1, [r6, fp, lsl #2]
   256f0:	adds	r2, r0, r1
   256f4:	beq	258cc <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   256f8:	ldr	r1, [r0, r1]
   256fc:	sub	r1, r2, r1
   25700:	ldrh	r0, [r1]
   25704:	cmp	r0, #5
   25708:	bls	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   2570c:	ldrh	r1, [r1, #4]
   25710:	cmp	r1, #0
   25714:	beq	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   25718:	ldr	r0, [r2, r1]
   2571c:	add	r4, fp, #1
   25720:	add	r2, r2, r1
   25724:	add	r3, r3, #4
   25728:	add	r0, r0, #4
   2572c:	cmp	r8, r4
   25730:	add	r0, r2, r0
   25734:	add	r2, r6, r3
   25738:	bls	258d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa4>
   2573c:	ldr	r3, [r6, r3]
   25740:	adds	r1, r2, r3
   25744:	beq	258cc <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   25748:	ldr	r3, [r2, r3]
   2574c:	sub	r3, r1, r3
   25750:	ldrh	r2, [r3]
   25754:	cmp	r2, #5
   25758:	bls	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   2575c:	ldrh	r2, [r3, #4]
   25760:	cmp	r2, #0
   25764:	beq	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   25768:	ldr	r3, [r1, r2]
   2576c:	add	r1, r1, r2
   25770:	add	r3, r3, #4
   25774:	adds	r1, r1, r3
   25778:	beq	258a8 <__flatcc_fb_gen_c_json_printer@@Base+0xf7c>
   2577c:	cmp	r0, #0
   25780:	ldr	r7, [r1, #-4]
   25784:	beq	258b0 <__flatcc_fb_gen_c_json_printer@@Base+0xf84>
   25788:	ldr	r9, [r0, #-4]
   2578c:	cmp	r7, r9
   25790:	movcc	r2, r7
   25794:	movcs	r2, r9
   25798:	bl	14020 <strncmp@plt>
   2579c:	cmp	r0, #0
   257a0:	beq	258b4 <__flatcc_fb_gen_c_json_printer@@Base+0xf88>
   257a4:	bge	258a8 <__flatcc_fb_gen_c_json_printer@@Base+0xf7c>
   257a8:	cmp	r8, r5
   257ac:	add	r9, r6, r5, lsl #2
   257b0:	bls	258d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa4>
   257b4:	ldr	r7, [r9]
   257b8:	adds	r3, r9, r7
   257bc:	beq	258cc <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   257c0:	ldr	r2, [r9, r7]
   257c4:	sub	r2, r3, r2
   257c8:	ldrh	r1, [r2]
   257cc:	cmp	r1, #5
   257d0:	bls	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   257d4:	ldrh	r2, [r2, #4]
   257d8:	cmp	r2, #0
   257dc:	beq	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   257e0:	ldr	r0, [r3, r2]
   257e4:	lsl	sl, r4, #2
   257e8:	add	r3, r3, r2
   257ec:	add	r0, r0, #4
   257f0:	cmp	r8, r4
   257f4:	add	r0, r3, r0
   257f8:	add	r3, r6, sl
   257fc:	bls	258d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa4>
   25800:	ldr	r8, [r6, r4, lsl #2]
   25804:	adds	r1, r3, r8
   25808:	beq	258cc <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   2580c:	ldr	r3, [r3, r8]
   25810:	sub	r3, r1, r3
   25814:	ldrh	r2, [r3]
   25818:	cmp	r2, #5
   2581c:	bls	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   25820:	ldrh	r2, [r3, #4]
   25824:	cmp	r2, #0
   25828:	beq	25578 <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
   2582c:	ldr	r3, [r1, r2]
   25830:	add	r1, r1, r2
   25834:	add	r3, r3, #4
   25838:	adds	r1, r1, r3
   2583c:	beq	255e4 <__flatcc_fb_gen_c_json_printer@@Base+0xcb8>
   25840:	cmp	r0, #0
   25844:	ldr	fp, [r1, #-4]
   25848:	beq	258c4 <__flatcc_fb_gen_c_json_printer@@Base+0xf98>
   2584c:	ldr	r3, [r0, #-4]
   25850:	cmp	fp, r3
   25854:	movcc	r2, fp
   25858:	movcs	r2, r3
   2585c:	str	r3, [sp, #8]
   25860:	bl	14020 <strncmp@plt>
   25864:	cmp	r0, #0
   25868:	beq	255d8 <__flatcc_fb_gen_c_json_printer@@Base+0xcac>
   2586c:	bge	255e4 <__flatcc_fb_gen_c_json_printer@@Base+0xcb8>
   25870:	sub	r5, r5, r4
   25874:	ldr	r3, [sp]
   25878:	lsl	r5, r5, #2
   2587c:	lsl	fp, r4, #1
   25880:	sub	r8, r8, r5
   25884:	add	r7, r7, r5
   25888:	cmp	r3, fp
   2588c:	str	r8, [r9]
   25890:	mov	r5, r4
   25894:	str	r7, [r6, sl]
   25898:	bcc	255e4 <__flatcc_fb_gen_c_json_printer@@Base+0xcb8>
   2589c:	cmp	r3, fp
   258a0:	ldr	r8, [r6, #-4]
   258a4:	bhi	256dc <__flatcc_fb_gen_c_json_printer@@Base+0xdb0>
   258a8:	mov	r4, fp
   258ac:	b	257a8 <__flatcc_fb_gen_c_json_printer@@Base+0xe7c>
   258b0:	mov	r9, #0
   258b4:	cmp	r7, r9
   258b8:	movhi	fp, r4
   258bc:	mov	r4, fp
   258c0:	b	257a8 <__flatcc_fb_gen_c_json_printer@@Base+0xe7c>
   258c4:	mov	r3, #0
   258c8:	b	255dc <__flatcc_fb_gen_c_json_printer@@Base+0xcb0>
   258cc:	bl	14074 <__assert_fail@plt+0x3c>
   258d0:	ldr	r3, [pc, #60]	; 25914 <__flatcc_fb_gen_c_json_printer@@Base+0xfe8>
   258d4:	mov	r2, #192	; 0xc0
   258d8:	ldr	r1, [pc, #32]	; 25900 <__flatcc_fb_gen_c_json_printer@@Base+0xfd4>
   258dc:	ldr	r0, [pc, #52]	; 25918 <__flatcc_fb_gen_c_json_printer@@Base+0xfec>
   258e0:	bl	14038 <__assert_fail@plt>
   258e4:	ldr	r3, [pc, #36]	; 25910 <__flatcc_fb_gen_c_json_printer@@Base+0xfe4>
   258e8:	mov	r2, #224	; 0xe0
   258ec:	ldr	r1, [pc, #12]	; 25900 <__flatcc_fb_gen_c_json_printer@@Base+0xfd4>
   258f0:	ldr	r0, [pc, #12]	; 25904 <__flatcc_fb_gen_c_json_printer@@Base+0xfd8>
   258f4:	bl	14038 <__assert_fail@plt>
   258f8:	movtpl	r4, #9794	; 0x2642
   258fc:	andeq	r8, r5, r0, lsl #5
   25900:	andeq	r8, r5, r8, ror #6
   25904:	andeq	r8, r5, r8, asr #7
   25908:	andeq	r8, r5, r0, ror #9
   2590c:	andeq	r8, r5, r4, asr #4
   25910:	muleq	r5, ip, r2
   25914:			; <UNDEFINED> instruction: 0x000582b8
   25918:	andeq	r8, r5, r4, lsl #10
   2591c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25920:	vpush	{d8-d9}
   25924:	ldr	r5, [r3, #60]	; 0x3c
   25928:	mov	r4, r1
   2592c:	mov	r9, r0
   25930:	sub	sp, sp, #100	; 0x64
   25934:	mov	r1, #0
   25938:	str	r2, [sp]
   2593c:	add	r0, sp, #52	; 0x34
   25940:	mov	r2, #44	; 0x2c
   25944:	mov	r6, r3
   25948:	str	r3, [sp, #44]	; 0x2c
   2594c:	bl	13f9c <memset@plt>
   25950:	add	r2, sp, #52	; 0x34
   25954:	mov	r0, r5
   25958:	ldr	r1, [pc, #1272]	; 25e58 <__flatcc_fb_gen_c_json_printer@@Base+0x152c>
   2595c:	str	r4, [sp, #52]	; 0x34
   25960:	str	r6, [sp, #92]	; 0x5c
   25964:	bl	29500 <fb_scope_table_visit@@Base>
   25968:	ldr	r4, [sp, #56]	; 0x38
   2596c:	mov	r1, #8
   25970:	mov	r0, r4
   25974:	bl	13ea0 <calloc@plt>
   25978:	ldr	fp, [sp, #60]	; 0x3c
   2597c:	mov	r1, #8
   25980:	mov	r6, r0
   25984:	mov	r0, fp
   25988:	str	r6, [sp, #68]	; 0x44
   2598c:	bl	13ea0 <calloc@plt>
   25990:	ldr	sl, [sp, #64]	; 0x40
   25994:	mov	r8, r0
   25998:	str	r0, [sp, #72]	; 0x48
   2599c:	mov	r0, sl
   259a0:	bl	13f3c <malloc@plt>
   259a4:	cmp	r4, #0
   259a8:	clz	r3, r6
   259ac:	lsr	r3, r3, #5
   259b0:	movle	r3, #0
   259b4:	cmp	r3, #0
   259b8:	str	r6, [sp, #80]	; 0x50
   259bc:	str	r8, [sp, #84]	; 0x54
   259c0:	mov	r7, r0
   259c4:	str	r0, [sp, #76]	; 0x4c
   259c8:	str	r0, [sp, #88]	; 0x58
   259cc:	bne	265d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1cac>
   259d0:	cmp	fp, #0
   259d4:	clz	r3, r8
   259d8:	lsr	r3, r3, #5
   259dc:	movle	r3, #0
   259e0:	cmp	r3, #0
   259e4:	bne	265c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1c9c>
   259e8:	cmp	sl, #0
   259ec:	clz	r4, r0
   259f0:	lsr	r4, r4, #5
   259f4:	moveq	r4, #0
   259f8:	cmp	r4, #0
   259fc:	bne	265c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1c9c>
   25a00:	mov	r0, r5
   25a04:	add	r2, sp, #52	; 0x34
   25a08:	ldr	r1, [pc, #1100]	; 25e5c <__flatcc_fb_gen_c_json_printer@@Base+0x1530>
   25a0c:	bl	29500 <fb_scope_table_visit@@Base>
   25a10:	ldr	r6, [sp, #56]	; 0x38
   25a14:	ldr	r7, [sp, #68]	; 0x44
   25a18:	ldr	r3, [pc, #1088]	; 25e60 <__flatcc_fb_gen_c_json_printer@@Base+0x1534>
   25a1c:	mov	r0, r7
   25a20:	mov	r1, r6
   25a24:	mov	r2, #8
   25a28:	bl	14008 <qsort@plt>
   25a2c:	cmp	r6, #0
   25a30:	movgt	r3, r4
   25a34:	ble	25a4c <__flatcc_fb_gen_c_json_printer@@Base+0x1120>
   25a38:	ldr	r2, [r7, r3, lsl #3]
   25a3c:	str	r3, [r2, #124]	; 0x7c
   25a40:	add	r3, r3, #1
   25a44:	cmp	r6, r3
   25a48:	bne	25a38 <__flatcc_fb_gen_c_json_printer@@Base+0x110c>
   25a4c:	ldr	r4, [sp, #60]	; 0x3c
   25a50:	ldr	r6, [sp, #72]	; 0x48
   25a54:	ldr	r3, [pc, #1028]	; 25e60 <__flatcc_fb_gen_c_json_printer@@Base+0x1534>
   25a58:	mov	r0, r6
   25a5c:	mov	r1, r4
   25a60:	mov	r2, #8
   25a64:	bl	14008 <qsort@plt>
   25a68:	cmp	r4, #0
   25a6c:	movgt	r3, #0
   25a70:	ble	25a88 <__flatcc_fb_gen_c_json_printer@@Base+0x115c>
   25a74:	ldr	r2, [r6, r3, lsl #3]
   25a78:	str	r3, [r2, #124]	; 0x7c
   25a7c:	add	r3, r3, #1
   25a80:	cmp	r4, r3
   25a84:	bne	25a74 <__flatcc_fb_gen_c_json_printer@@Base+0x1148>
   25a88:	ldr	r0, [sp, #56]	; 0x38
   25a8c:	cmp	r0, #0
   25a90:	movle	r3, #0
   25a94:	strle	r3, [sp, #20]
   25a98:	ble	25ab0 <__flatcc_fb_gen_c_json_printer@@Base+0x1184>
   25a9c:	lsl	r0, r0, #2
   25aa0:	bl	13f3c <malloc@plt>
   25aa4:	subs	r3, r0, #0
   25aa8:	str	r3, [sp, #20]
   25aac:	beq	26614 <__flatcc_fb_gen_c_json_printer@@Base+0x1ce8>
   25ab0:	ldr	r3, [sp]
   25ab4:	mov	r2, #0
   25ab8:	ldr	r1, [pc, #932]	; 25e64 <__flatcc_fb_gen_c_json_printer@@Base+0x1538>
   25abc:	ldr	r3, [r3]
   25ac0:	mov	r0, r9
   25ac4:	cmp	r3, #0
   25ac8:	movne	r3, #2
   25acc:	bl	391bc <flatcc_builder_start_buffer@@Base>
   25ad0:	cmp	r0, #0
   25ad4:	bne	25ae4 <__flatcc_fb_gen_c_json_printer@@Base+0x11b8>
   25ad8:	mov	r1, #5
   25adc:	mov	r0, r9
   25ae0:	bl	3ad9c <flatcc_builder_start_table@@Base>
   25ae4:	ldr	r3, [sp, #44]	; 0x2c
   25ae8:	ldrh	r4, [r3, #16]
   25aec:	cmp	r4, #2
   25af0:	beq	26584 <__flatcc_fb_gen_c_json_printer@@Base+0x1c58>
   25af4:	ldr	r3, [sp, #44]	; 0x2c
   25af8:	ldrh	r3, [r3, #32]
   25afc:	cmp	r3, #2
   25b00:	beq	26550 <__flatcc_fb_gen_c_json_printer@@Base+0x1c24>
   25b04:	ldr	r3, [sp, #56]	; 0x38
   25b08:	ldr	r2, [sp, #68]	; 0x44
   25b0c:	cmp	r3, #0
   25b10:	str	r3, [sp, #36]	; 0x24
   25b14:	str	r2, [sp, #40]	; 0x28
   25b18:	ble	260ac <__flatcc_fb_gen_c_json_printer@@Base+0x1780>
   25b1c:	ldr	r3, [sp, #20]
   25b20:	vldr	d9, [pc, #808]	; 25e50 <__flatcc_fb_gen_c_json_printer@@Base+0x1524>
   25b24:	sub	r3, r3, #4
   25b28:	str	r3, [sp, #32]
   25b2c:	mov	r3, #0
   25b30:	str	r2, [sp, #28]
   25b34:	str	r3, [sp, #24]
   25b38:	ldr	r2, [sp, #24]
   25b3c:	ldr	r3, [sp, #40]	; 0x28
   25b40:	mov	r1, #5
   25b44:	mov	r0, r9
   25b48:	ldr	r3, [r3, r2, lsl #3]
   25b4c:	str	r3, [sp]
   25b50:	bl	3ad9c <flatcc_builder_start_table@@Base>
   25b54:	ldr	r3, [sp, #28]
   25b58:	mov	r0, r9
   25b5c:	ldr	r1, [r3, #4]
   25b60:	bl	3cb4c <flatcc_builder_create_string_str@@Base>
   25b64:	subs	r4, r0, #0
   25b68:	beq	25b80 <__flatcc_fb_gen_c_json_printer@@Base+0x1254>
   25b6c:	mov	r1, #0
   25b70:	mov	r0, r9
   25b74:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   25b78:	cmp	r0, #0
   25b7c:	strne	r4, [r0]
   25b80:	mov	r0, r9
   25b84:	bl	3a754 <flatcc_builder_start_offset_vector@@Base>
   25b88:	ldr	r3, [sp]
   25b8c:	ldr	r4, [r3, #20]
   25b90:	cmp	r4, #0
   25b94:	movne	sl, #0
   25b98:	movne	fp, sl
   25b9c:	bne	25c8c <__flatcc_fb_gen_c_json_printer@@Base+0x1360>
   25ba0:	b	25ffc <__flatcc_fb_gen_c_json_printer@@Base+0x16d0>
   25ba4:	tst	r5, #128	; 0x80
   25ba8:	beq	25c98 <__flatcc_fb_gen_c_json_printer@@Base+0x136c>
   25bac:	mov	r7, #1
   25bb0:	str	r7, [sp, #4]
   25bb4:	ldrh	r3, [r4, #24]
   25bb8:	ands	r8, r5, #4
   25bbc:	movne	r2, #1
   25bc0:	moveq	r2, #0
   25bc4:	cmp	r3, #14
   25bc8:	str	r2, [sp, #16]
   25bcc:	beq	25eb8 <__flatcc_fb_gen_c_json_printer@@Base+0x158c>
   25bd0:	mov	r1, #9
   25bd4:	mov	r0, r9
   25bd8:	bl	3ad9c <flatcc_builder_start_table@@Base>
   25bdc:	ldr	r3, [r4, #4]
   25be0:	mov	r0, r9
   25be4:	ldm	r3, {r1, r2}
   25be8:	bl	3ca68 <flatcc_builder_create_string@@Base>
   25bec:	subs	r6, r0, #0
   25bf0:	beq	25c08 <__flatcc_fb_gen_c_json_printer@@Base+0x12dc>
   25bf4:	mov	r1, fp
   25bf8:	mov	r0, r9
   25bfc:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   25c00:	cmp	r0, #0
   25c04:	strne	r6, [r0]
   25c08:	ldrh	r2, [r4, #24]
   25c0c:	ldr	r1, [r4, #16]
   25c10:	mov	r0, r9
   25c14:	bl	2501c <__flatcc_fb_gen_c_json_printer@@Base+0x6f0>
   25c18:	subs	r6, r0, #0
   25c1c:	bne	25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x150c>
   25c20:	ldr	r3, [sp]
   25c24:	ldrh	r3, [r3, #8]
   25c28:	cmp	r3, #0
   25c2c:	beq	25ca8 <__flatcc_fb_gen_c_json_printer@@Base+0x137c>
   25c30:	cmp	r3, #1
   25c34:	bne	25c44 <__flatcc_fb_gen_c_json_printer@@Base+0x1318>
   25c38:	ldrh	r5, [r4, #80]	; 0x50
   25c3c:	cmp	r5, #0
   25c40:	bne	262a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1978>
   25c44:	cmp	r8, #0
   25c48:	bne	25d68 <__flatcc_fb_gen_c_json_printer@@Base+0x143c>
   25c4c:	mov	r2, #2
   25c50:	ldr	r1, [pc, #536]	; 25e70 <__flatcc_fb_gen_c_json_printer@@Base+0x1544>
   25c54:	mov	r0, r9
   25c58:	bl	3b744 <flatcc_builder_check_required@@Base>
   25c5c:	cmp	r0, #0
   25c60:	beq	265b4 <__flatcc_fb_gen_c_json_printer@@Base+0x1c88>
   25c64:	mov	r0, r9
   25c68:	bl	3b7dc <flatcc_builder_end_table@@Base>
   25c6c:	subs	r1, r0, #0
   25c70:	beq	25c7c <__flatcc_fb_gen_c_json_printer@@Base+0x1350>
   25c74:	mov	r0, r9
   25c78:	bl	39e84 <flatcc_builder_offset_vector_push@@Base>
   25c7c:	ldr	r4, [r4]
   25c80:	orr	sl, sl, r7
   25c84:	cmp	r4, #0
   25c88:	beq	25ffc <__flatcc_fb_gen_c_json_printer@@Base+0x16d0>
   25c8c:	cmp	sl, #0
   25c90:	ldrh	r5, [r4, #72]	; 0x48
   25c94:	beq	25ba4 <__flatcc_fb_gen_c_json_printer@@Base+0x1278>
   25c98:	mov	r3, #0
   25c9c:	mov	r7, fp
   25ca0:	str	r3, [sp, #4]
   25ca4:	b	25bb4 <__flatcc_fb_gen_c_json_printer@@Base+0x1288>
   25ca8:	ldrh	r3, [r4, #56]	; 0x38
   25cac:	sub	r3, r3, #3
   25cb0:	cmp	r3, #3
   25cb4:	ldrls	pc, [pc, r3, lsl #2]
   25cb8:	b	26658 <__flatcc_fb_gen_c_json_printer@@Base+0x1d2c>
   25cbc:	andeq	r5, r2, ip, lsl #27
   25cc0:	andeq	r5, r2, ip, asr #25
   25cc4:	andeq	r5, r2, ip, asr #25
   25cc8:	andeq	r5, r2, r0, lsl #28
   25ccc:	ldrd	r2, [r4, #48]	; 0x30
   25cd0:	strd	r2, [sp, #8]
   25cd4:	orrs	r3, r2, r3
   25cd8:	bne	25e14 <__flatcc_fb_gen_c_json_printer@@Base+0x14e8>
   25cdc:	ldrh	r6, [r4, #96]	; 0x60
   25ce0:	cmp	r6, #0
   25ce4:	moveq	r6, #4
   25ce8:	bne	25dc8 <__flatcc_fb_gen_c_json_printer@@Base+0x149c>
   25cec:	mov	r3, #2
   25cf0:	mov	r2, r3
   25cf4:	mov	r1, #3
   25cf8:	mov	r0, r9
   25cfc:	bl	3cf08 <flatcc_builder_table_add@@Base>
   25d00:	cmp	r0, #0
   25d04:	strhne	r6, [r0]
   25d08:	ldr	r3, [sp, #4]
   25d0c:	cmp	r3, #0
   25d10:	beq	25d34 <__flatcc_fb_gen_c_json_printer@@Base+0x1408>
   25d14:	mov	r3, #1
   25d18:	mov	r2, r3
   25d1c:	mov	r1, #8
   25d20:	mov	r0, r9
   25d24:	bl	3cf08 <flatcc_builder_table_add@@Base>
   25d28:	cmp	r0, #0
   25d2c:	movne	r3, #1
   25d30:	strbne	r3, [r0]
   25d34:	tst	r5, #256	; 0x100
   25d38:	beq	25c44 <__flatcc_fb_gen_c_json_printer@@Base+0x1318>
   25d3c:	mov	r3, #1
   25d40:	mov	r2, r3
   25d44:	mov	r1, #7
   25d48:	mov	r0, r9
   25d4c:	bl	3cf08 <flatcc_builder_table_add@@Base>
   25d50:	cmp	r0, #0
   25d54:	beq	25c44 <__flatcc_fb_gen_c_json_printer@@Base+0x1318>
   25d58:	mov	r3, #1
   25d5c:	cmp	r8, #0
   25d60:	strb	r3, [r0]
   25d64:	beq	25c4c <__flatcc_fb_gen_c_json_printer@@Base+0x1320>
   25d68:	mov	r3, #1
   25d6c:	mov	r2, r3
   25d70:	mov	r1, #6
   25d74:	mov	r0, r9
   25d78:	bl	3cf08 <flatcc_builder_table_add@@Base>
   25d7c:	cmp	r0, #0
   25d80:	ldrbne	r3, [sp, #16]
   25d84:	strbne	r3, [r0]
   25d88:	b	25c4c <__flatcc_fb_gen_c_json_printer@@Base+0x1320>
   25d8c:	vldr	d8, [r4, #48]	; 0x30
   25d90:	vcmp.f64	d8, d9
   25d94:	vmrs	APSR_nzcv, fpscr
   25d98:	beq	25cdc <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   25d9c:	mov	r3, #8
   25da0:	mov	r2, r3
   25da4:	mov	r1, #5
   25da8:	mov	r0, r9
   25dac:	bl	3cf08 <flatcc_builder_table_add@@Base>
   25db0:	ldrh	r6, [r4, #96]	; 0x60
   25db4:	cmp	r0, #0
   25db8:	vstrne	d8, [r0]
   25dbc:	cmp	r6, #0
   25dc0:	moveq	r6, #4
   25dc4:	beq	25cec <__flatcc_fb_gen_c_json_printer@@Base+0x13c0>
   25dc8:	mov	r3, #2
   25dcc:	mov	r2, r3
   25dd0:	mov	r1, r3
   25dd4:	mov	r0, r9
   25dd8:	bl	3cf08 <flatcc_builder_table_add@@Base>
   25ddc:	cmp	r0, #0
   25de0:	strhne	r6, [r0]
   25de4:	ldrh	r6, [r4, #96]	; 0x60
   25de8:	add	r6, r6, #2
   25dec:	lsl	r6, r6, #1
   25df0:	uxth	r6, r6
   25df4:	cmp	r6, #0
   25df8:	beq	25d08 <__flatcc_fb_gen_c_json_printer@@Base+0x13dc>
   25dfc:	b	25cec <__flatcc_fb_gen_c_json_printer@@Base+0x13c0>
   25e00:	ldrb	r2, [r4, #48]	; 0x30
   25e04:	mov	r3, #0
   25e08:	strd	r2, [sp, #8]
   25e0c:	orrs	r3, r2, r3
   25e10:	beq	25cdc <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   25e14:	mov	r3, #8
   25e18:	mov	r2, r3
   25e1c:	mov	r1, #4
   25e20:	mov	r0, r9
   25e24:	bl	3cf08 <flatcc_builder_table_add@@Base>
   25e28:	cmp	r0, #0
   25e2c:	ldrdne	r2, [sp, #8]
   25e30:	strdne	r2, [r0]
   25e34:	b	25cdc <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   25e38:	mov	r1, #1
   25e3c:	mov	r0, r9
   25e40:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   25e44:	cmp	r0, #0
   25e48:	strne	r6, [r0]
   25e4c:	b	25c20 <__flatcc_fb_gen_c_json_printer@@Base+0x12f4>
	...
   25e58:	andeq	r4, r2, r8, lsl lr
   25e5c:	andeq	r4, r2, r0, lsl #28
   25e60:	andeq	r5, r2, r0, lsl r0
   25e64:	andeq	r8, r5, ip, lsr r5
   25e68:	strdeq	r8, [r5], -r4
   25e6c:	andeq	r8, r5, ip, ror r2
   25e70:	ldrdeq	r8, [r5], -r0
   25e74:	strdeq	r8, [r5], -r0
   25e78:	andeq	r8, r5, r0, lsl r3
   25e7c:	andeq	r8, r5, ip, lsr #6
   25e80:	andeq	r8, r5, r8, asr #6
   25e84:	ldrdeq	r8, [r5], -r8	; <UNPREDICTABLE>
   25e88:	andeq	r8, r5, r4, asr #10
   25e8c:	andeq	r8, r5, r4, lsl r3
   25e90:	andeq	r8, r5, r8, ror #12
   25e94:	andeq	r8, r5, r4, lsr r3
   25e98:	andeq	r8, r5, r0, lsl #14
   25e9c:	strdeq	r8, [r5], -r8	; <UNPREDICTABLE>
   25ea0:	ldrdeq	r8, [r5], -r4
   25ea4:	andeq	r8, r5, r0, asr r3
   25ea8:	muleq	r5, r0, r7
   25eac:	andeq	r8, r5, r8, ror #4
   25eb0:	strdeq	r8, [r5], -r0
   25eb4:	andeq	r8, r5, r0, asr r4
   25eb8:	ldr	r3, [r4, #16]
   25ebc:	ldrh	r3, [r3, #8]
   25ec0:	cmp	r3, #4
   25ec4:	bne	25bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x12a4>
   25ec8:	mov	r1, #9
   25ecc:	mov	r0, r9
   25ed0:	bl	3ad9c <flatcc_builder_start_table@@Base>
   25ed4:	mov	r0, r9
   25ed8:	bl	3ab50 <flatcc_builder_start_string@@Base>
   25edc:	ldr	r3, [r4, #4]
   25ee0:	mov	r0, r9
   25ee4:	ldm	r3, {r1, r2}
   25ee8:	bl	3a174 <flatcc_builder_append_string@@Base>
   25eec:	mov	r2, #5
   25ef0:	ldr	r1, [pc, #-144]	; 25e68 <__flatcc_fb_gen_c_json_printer@@Base+0x153c>
   25ef4:	mov	r0, r9
   25ef8:	bl	3a174 <flatcc_builder_append_string@@Base>
   25efc:	mov	r0, r9
   25f00:	bl	3cd38 <flatcc_builder_end_string@@Base>
   25f04:	subs	r6, r0, #0
   25f08:	beq	25f20 <__flatcc_fb_gen_c_json_printer@@Base+0x15f4>
   25f0c:	mov	r1, fp
   25f10:	mov	r0, r9
   25f14:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   25f18:	cmp	r0, #0
   25f1c:	strne	r6, [r0]
   25f20:	mov	r1, #3
   25f24:	mov	r0, r9
   25f28:	bl	3ad9c <flatcc_builder_start_table@@Base>
   25f2c:	cmp	r0, #0
   25f30:	bne	25f94 <__flatcc_fb_gen_c_json_printer@@Base+0x1668>
   25f34:	mov	r3, #1
   25f38:	mov	r2, r3
   25f3c:	mov	r1, fp
   25f40:	mov	r0, r9
   25f44:	bl	3cf08 <flatcc_builder_table_add@@Base>
   25f48:	cmp	r0, #0
   25f4c:	beq	25f94 <__flatcc_fb_gen_c_json_printer@@Base+0x1668>
   25f50:	mov	r3, #1
   25f54:	strb	r3, [r0]
   25f58:	mov	r2, fp
   25f5c:	ldr	r1, [pc, #-248]	; 25e6c <__flatcc_fb_gen_c_json_printer@@Base+0x1540>
   25f60:	mov	r0, r9
   25f64:	bl	3b744 <flatcc_builder_check_required@@Base>
   25f68:	cmp	r0, #0
   25f6c:	beq	26688 <__flatcc_fb_gen_c_json_printer@@Base+0x1d5c>
   25f70:	mov	r0, r9
   25f74:	bl	3b7dc <flatcc_builder_end_table@@Base>
   25f78:	subs	r6, r0, #0
   25f7c:	beq	25f94 <__flatcc_fb_gen_c_json_printer@@Base+0x1668>
   25f80:	mov	r1, #1
   25f84:	mov	r0, r9
   25f88:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   25f8c:	cmp	r0, #0
   25f90:	strne	r6, [r0]
   25f94:	ldrh	r6, [r4, #96]	; 0x60
   25f98:	add	r3, r6, #1
   25f9c:	lsl	r3, r3, #1
   25fa0:	uxth	r3, r3
   25fa4:	cmp	r3, #0
   25fa8:	str	r3, [sp, #8]
   25fac:	bne	26508 <__flatcc_fb_gen_c_json_printer@@Base+0x1bdc>
   25fb0:	sub	r6, r6, #1
   25fb4:	uxth	r6, r6
   25fb8:	cmp	r6, #0
   25fbc:	bne	264c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1b94>
   25fc0:	cmp	r8, #0
   25fc4:	bne	264e4 <__flatcc_fb_gen_c_json_printer@@Base+0x1bb8>
   25fc8:	mov	r2, #2
   25fcc:	ldr	r1, [pc, #-356]	; 25e70 <__flatcc_fb_gen_c_json_printer@@Base+0x1544>
   25fd0:	mov	r0, r9
   25fd4:	bl	3b744 <flatcc_builder_check_required@@Base>
   25fd8:	cmp	r0, #0
   25fdc:	beq	265b4 <__flatcc_fb_gen_c_json_printer@@Base+0x1c88>
   25fe0:	mov	r0, r9
   25fe4:	bl	3b7dc <flatcc_builder_end_table@@Base>
   25fe8:	subs	r1, r0, #0
   25fec:	beq	25bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x12a4>
   25ff0:	mov	r0, r9
   25ff4:	bl	39e84 <flatcc_builder_offset_vector_push@@Base>
   25ff8:	b	25bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x12a4>
   25ffc:	mov	r0, r9
   26000:	bl	3bcfc <flatcc_builder_end_offset_vector@@Base>
   26004:	subs	r4, r0, #0
   26008:	beq	26020 <__flatcc_fb_gen_c_json_printer@@Base+0x16f4>
   2600c:	mov	r1, #1
   26010:	mov	r0, r9
   26014:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   26018:	cmp	r0, #0
   2601c:	strne	r4, [r0]
   26020:	ldr	r3, [sp]
   26024:	ldrh	r3, [r3, #8]
   26028:	cmp	r3, #1
   2602c:	beq	2648c <__flatcc_fb_gen_c_json_printer@@Base+0x1b60>
   26030:	ldr	r3, [sp]
   26034:	ldrh	r4, [r3, #104]	; 0x68
   26038:	cmp	r4, #0
   2603c:	beq	2605c <__flatcc_fb_gen_c_json_printer@@Base+0x1730>
   26040:	mov	r3, #4
   26044:	mov	r2, r3
   26048:	mov	r1, #3
   2604c:	mov	r0, r9
   26050:	bl	3cf08 <flatcc_builder_table_add@@Base>
   26054:	cmp	r0, #0
   26058:	strne	r4, [r0]
   2605c:	mov	r2, #2
   26060:	ldr	r1, [pc, #-500]	; 25e74 <__flatcc_fb_gen_c_json_printer@@Base+0x1548>
   26064:	mov	r0, r9
   26068:	bl	3b744 <flatcc_builder_check_required@@Base>
   2606c:	cmp	r0, #0
   26070:	beq	26660 <__flatcc_fb_gen_c_json_printer@@Base+0x1d34>
   26074:	mov	r0, r9
   26078:	bl	3b7dc <flatcc_builder_end_table@@Base>
   2607c:	ldr	r3, [sp, #24]
   26080:	ldr	r2, [sp, #36]	; 0x24
   26084:	add	r3, r3, #1
   26088:	str	r3, [sp, #24]
   2608c:	cmp	r2, r3
   26090:	ldr	r3, [sp, #28]
   26094:	add	r3, r3, #8
   26098:	str	r3, [sp, #28]
   2609c:	ldr	r3, [sp, #32]
   260a0:	str	r0, [r3, #4]!
   260a4:	str	r3, [sp, #32]
   260a8:	bne	25b38 <__flatcc_fb_gen_c_json_printer@@Base+0x120c>
   260ac:	ldr	r2, [sp, #36]	; 0x24
   260b0:	ldr	r1, [sp, #20]
   260b4:	mov	r0, r9
   260b8:	bl	3a898 <flatcc_builder_create_offset_vector@@Base>
   260bc:	subs	r4, r0, #0
   260c0:	beq	260d8 <__flatcc_fb_gen_c_json_printer@@Base+0x17ac>
   260c4:	mov	r1, #0
   260c8:	mov	r0, r9
   260cc:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   260d0:	cmp	r0, #0
   260d4:	strne	r4, [r0]
   260d8:	ldr	r3, [sp, #60]	; 0x3c
   260dc:	mov	r0, r9
   260e0:	mov	r4, r3
   260e4:	str	r3, [sp, #24]
   260e8:	ldr	r3, [sp, #72]	; 0x48
   260ec:	str	r3, [sp, #8]
   260f0:	bl	3a754 <flatcc_builder_start_offset_vector@@Base>
   260f4:	cmp	r4, #0
   260f8:	ble	26380 <__flatcc_fb_gen_c_json_printer@@Base+0x1a54>
   260fc:	mov	r3, #0
   26100:	ldr	sl, [pc, #-656]	; 25e78 <__flatcc_fb_gen_c_json_printer@@Base+0x154c>
   26104:	str	r3, [sp]
   26108:	mov	fp, #3
   2610c:	ldr	r3, [sp, #8]
   26110:	str	r3, [sp, #4]
   26114:	ldr	r2, [sp]
   26118:	ldr	r3, [sp, #8]
   2611c:	mov	r1, #4
   26120:	mov	r0, r9
   26124:	ldr	r3, [r3, r2, lsl #3]
   26128:	str	r3, [sp, #16]
   2612c:	ldrh	r8, [r3, #8]
   26130:	bl	3ad9c <flatcc_builder_start_table@@Base>
   26134:	ldr	r3, [sp, #4]
   26138:	mov	r0, r9
   2613c:	ldr	r1, [r3, #4]
   26140:	bl	3cb4c <flatcc_builder_create_string_str@@Base>
   26144:	subs	r4, r0, #0
   26148:	beq	26160 <__flatcc_fb_gen_c_json_printer@@Base+0x1834>
   2614c:	mov	r1, #0
   26150:	mov	r0, r9
   26154:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   26158:	cmp	r0, #0
   2615c:	strne	r4, [r0]
   26160:	mov	r0, r9
   26164:	bl	3a754 <flatcc_builder_start_offset_vector@@Base>
   26168:	ldr	r3, [sp, #16]
   2616c:	ldr	r4, [r3, #20]
   26170:	cmp	r4, #0
   26174:	movne	r5, #1
   26178:	bne	261bc <__flatcc_fb_gen_c_json_printer@@Base+0x1890>
   2617c:	b	262c4 <__flatcc_fb_gen_c_json_printer@@Base+0x1998>
   26180:	mov	r2, r5
   26184:	mov	r1, sl
   26188:	mov	r0, r9
   2618c:	bl	3b744 <flatcc_builder_check_required@@Base>
   26190:	cmp	r0, #0
   26194:	beq	26600 <__flatcc_fb_gen_c_json_printer@@Base+0x1cd4>
   26198:	mov	r0, r9
   2619c:	bl	3b7dc <flatcc_builder_end_table@@Base>
   261a0:	subs	r1, r0, #0
   261a4:	beq	261b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1884>
   261a8:	mov	r0, r9
   261ac:	bl	39e84 <flatcc_builder_offset_vector_push@@Base>
   261b0:	ldr	r4, [r4]
   261b4:	cmp	r4, #0
   261b8:	beq	262c4 <__flatcc_fb_gen_c_json_printer@@Base+0x1998>
   261bc:	cmp	r8, #4
   261c0:	mov	r1, fp
   261c4:	mov	r0, r9
   261c8:	beq	2622c <__flatcc_fb_gen_c_json_printer@@Base+0x1900>
   261cc:	bl	3ad9c <flatcc_builder_start_table@@Base>
   261d0:	ldr	r3, [r4, #4]
   261d4:	mov	r0, r9
   261d8:	ldm	r3, {r1, r2}
   261dc:	bl	3ca68 <flatcc_builder_create_string@@Base>
   261e0:	subs	r6, r0, #0
   261e4:	beq	26200 <__flatcc_fb_gen_c_json_printer@@Base+0x18d4>
   261e8:	mov	r1, #0
   261ec:	mov	r0, r9
   261f0:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   261f4:	cmp	r0, #0
   261f8:	beq	26200 <__flatcc_fb_gen_c_json_printer@@Base+0x18d4>
   261fc:	str	r6, [r0]
   26200:	ldrd	r6, [r4, #48]	; 0x30
   26204:	orrs	r3, r6, r7
   26208:	beq	26180 <__flatcc_fb_gen_c_json_printer@@Base+0x1854>
   2620c:	mov	r3, #8
   26210:	mov	r2, r3
   26214:	mov	r1, r5
   26218:	mov	r0, r9
   2621c:	bl	3cf08 <flatcc_builder_table_add@@Base>
   26220:	cmp	r0, #0
   26224:	strdne	r6, [r0]
   26228:	b	26180 <__flatcc_fb_gen_c_json_printer@@Base+0x1854>
   2622c:	bl	3ad9c <flatcc_builder_start_table@@Base>
   26230:	ldr	r3, [r4, #4]
   26234:	mov	r0, r9
   26238:	ldm	r3, {r1, r2}
   2623c:	bl	3ca68 <flatcc_builder_create_string@@Base>
   26240:	subs	r6, r0, #0
   26244:	beq	2625c <__flatcc_fb_gen_c_json_printer@@Base+0x1930>
   26248:	mov	r1, #0
   2624c:	mov	r0, r9
   26250:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   26254:	cmp	r0, #0
   26258:	strne	r6, [r0]
   2625c:	ldr	r3, [sp, #20]
   26260:	cmp	r3, #0
   26264:	beq	26200 <__flatcc_fb_gen_c_json_printer@@Base+0x18d4>
   26268:	ldrh	r3, [r4, #24]
   2626c:	cmp	r3, #14
   26270:	bne	26200 <__flatcc_fb_gen_c_json_printer@@Base+0x18d4>
   26274:	ldr	r3, [r4, #16]
   26278:	ldr	r2, [sp, #20]
   2627c:	ldr	r3, [r3, #124]	; 0x7c
   26280:	ldr	r6, [r2, r3, lsl #2]
   26284:	cmp	r6, #0
   26288:	beq	26200 <__flatcc_fb_gen_c_json_printer@@Base+0x18d4>
   2628c:	mov	r1, #2
   26290:	mov	r0, r9
   26294:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   26298:	cmp	r0, #0
   2629c:	bne	261fc <__flatcc_fb_gen_c_json_printer@@Base+0x18d0>
   262a0:	b	26200 <__flatcc_fb_gen_c_json_printer@@Base+0x18d4>
   262a4:	mov	r3, #2
   262a8:	mov	r2, r3
   262ac:	mov	r1, #3
   262b0:	mov	r0, r9
   262b4:	bl	3cf08 <flatcc_builder_table_add@@Base>
   262b8:	cmp	r0, #0
   262bc:	strhne	r5, [r0]
   262c0:	b	25c44 <__flatcc_fb_gen_c_json_printer@@Base+0x1318>
   262c4:	mov	r0, r9
   262c8:	bl	3bcfc <flatcc_builder_end_offset_vector@@Base>
   262cc:	subs	r4, r0, #0
   262d0:	beq	262e8 <__flatcc_fb_gen_c_json_printer@@Base+0x19bc>
   262d4:	mov	r1, #1
   262d8:	mov	r0, r9
   262dc:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   262e0:	cmp	r0, #0
   262e4:	strne	r4, [r0]
   262e8:	cmp	r8, #4
   262ec:	bne	26310 <__flatcc_fb_gen_c_json_printer@@Base+0x19e4>
   262f0:	mov	r3, #1
   262f4:	mov	r2, r3
   262f8:	mov	r1, #2
   262fc:	mov	r0, r9
   26300:	bl	3cf08 <flatcc_builder_table_add@@Base>
   26304:	cmp	r0, #0
   26308:	movne	r3, #1
   2630c:	strbne	r3, [r0]
   26310:	ldr	r3, [sp, #16]
   26314:	mov	r0, r9
   26318:	ldrh	r2, [r3, #48]	; 0x30
   2631c:	ldr	r1, [r3, #40]	; 0x28
   26320:	bl	2501c <__flatcc_fb_gen_c_json_printer@@Base+0x6f0>
   26324:	subs	r4, r0, #0
   26328:	bne	26474 <__flatcc_fb_gen_c_json_printer@@Base+0x1b48>
   2632c:	mov	r2, fp
   26330:	ldr	r1, [pc, #-1212]	; 25e7c <__flatcc_fb_gen_c_json_printer@@Base+0x1550>
   26334:	mov	r0, r9
   26338:	bl	3b744 <flatcc_builder_check_required@@Base>
   2633c:	cmp	r0, #0
   26340:	beq	26644 <__flatcc_fb_gen_c_json_printer@@Base+0x1d18>
   26344:	mov	r0, r9
   26348:	bl	3b7dc <flatcc_builder_end_table@@Base>
   2634c:	subs	r1, r0, #0
   26350:	beq	2635c <__flatcc_fb_gen_c_json_printer@@Base+0x1a30>
   26354:	mov	r0, r9
   26358:	bl	39e84 <flatcc_builder_offset_vector_push@@Base>
   2635c:	ldr	r3, [sp]
   26360:	ldr	r2, [sp, #24]
   26364:	add	r3, r3, #1
   26368:	str	r3, [sp]
   2636c:	cmp	r2, r3
   26370:	ldr	r3, [sp, #4]
   26374:	add	r3, r3, #8
   26378:	str	r3, [sp, #4]
   2637c:	bne	26114 <__flatcc_fb_gen_c_json_printer@@Base+0x17e8>
   26380:	mov	r0, r9
   26384:	bl	3bcfc <flatcc_builder_end_offset_vector@@Base>
   26388:	subs	r4, r0, #0
   2638c:	beq	263a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1a78>
   26390:	mov	r1, #1
   26394:	mov	r0, r9
   26398:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   2639c:	cmp	r0, #0
   263a0:	strne	r4, [r0]
   263a4:	ldr	r3, [sp, #44]	; 0x2c
   263a8:	ldr	r3, [r3, #52]	; 0x34
   263ac:	cmp	r3, #0
   263b0:	beq	263e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1abc>
   263b4:	ldrh	r2, [r3, #8]
   263b8:	cmp	r2, #0
   263bc:	bne	263e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1abc>
   263c0:	ldr	r3, [r3, #124]	; 0x7c
   263c4:	ldr	r2, [sp, #20]
   263c8:	ldr	r4, [r2, r3, lsl #2]
   263cc:	cmp	r4, #0
   263d0:	beq	263e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1abc>
   263d4:	mov	r1, #4
   263d8:	mov	r0, r9
   263dc:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   263e0:	cmp	r0, #0
   263e4:	strne	r4, [r0]
   263e8:	mov	r2, #2
   263ec:	ldr	r1, [pc, #-1396]	; 25e80 <__flatcc_fb_gen_c_json_printer@@Base+0x1554>
   263f0:	mov	r0, r9
   263f4:	bl	3b744 <flatcc_builder_check_required@@Base>
   263f8:	cmp	r0, #0
   263fc:	beq	26674 <__flatcc_fb_gen_c_json_printer@@Base+0x1d48>
   26400:	mov	r0, r9
   26404:	bl	3b7dc <flatcc_builder_end_table@@Base>
   26408:	mov	r1, r0
   2640c:	mov	r0, r9
   26410:	bl	39348 <flatcc_builder_end_buffer@@Base>
   26414:	ldr	r0, [sp, #68]	; 0x44
   26418:	cmp	r0, #0
   2641c:	beq	26424 <__flatcc_fb_gen_c_json_printer@@Base+0x1af8>
   26420:	bl	13ed0 <free@plt>
   26424:	ldr	r0, [sp, #72]	; 0x48
   26428:	cmp	r0, #0
   2642c:	beq	26434 <__flatcc_fb_gen_c_json_printer@@Base+0x1b08>
   26430:	bl	13ed0 <free@plt>
   26434:	ldr	r0, [sp, #76]	; 0x4c
   26438:	cmp	r0, #0
   2643c:	beq	26444 <__flatcc_fb_gen_c_json_printer@@Base+0x1b18>
   26440:	bl	13ed0 <free@plt>
   26444:	add	r0, sp, #52	; 0x34
   26448:	mov	r2, #44	; 0x2c
   2644c:	mov	r1, #0
   26450:	bl	13f9c <memset@plt>
   26454:	ldr	r3, [sp, #20]
   26458:	subs	r0, r3, #0
   2645c:	beq	26468 <__flatcc_fb_gen_c_json_printer@@Base+0x1b3c>
   26460:	bl	13ed0 <free@plt>
   26464:	mov	r0, #0
   26468:	add	sp, sp, #100	; 0x64
   2646c:	vpop	{d8-d9}
   26470:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26474:	mov	r1, fp
   26478:	mov	r0, r9
   2647c:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   26480:	cmp	r0, #0
   26484:	strne	r4, [r0]
   26488:	b	2632c <__flatcc_fb_gen_c_json_printer@@Base+0x1a00>
   2648c:	ldr	r3, [sp]
   26490:	ldr	r4, [r3, #112]	; 0x70
   26494:	cmp	r4, #0
   26498:	bne	26530 <__flatcc_fb_gen_c_json_printer@@Base+0x1c04>
   2649c:	mov	r3, #1
   264a0:	mov	r2, r3
   264a4:	mov	r1, #2
   264a8:	mov	r0, r9
   264ac:	bl	3cf08 <flatcc_builder_table_add@@Base>
   264b0:	cmp	r0, #0
   264b4:	movne	r3, #1
   264b8:	strbne	r3, [r0]
   264bc:	b	26030 <__flatcc_fb_gen_c_json_printer@@Base+0x1704>
   264c0:	mov	r3, #2
   264c4:	mov	r2, r3
   264c8:	mov	r1, r3
   264cc:	mov	r0, r9
   264d0:	bl	3cf08 <flatcc_builder_table_add@@Base>
   264d4:	cmp	r0, #0
   264d8:	strhne	r6, [r0]
   264dc:	cmp	r8, #0
   264e0:	beq	25fc8 <__flatcc_fb_gen_c_json_printer@@Base+0x169c>
   264e4:	mov	r3, #1
   264e8:	mov	r2, r3
   264ec:	mov	r1, #6
   264f0:	mov	r0, r9
   264f4:	bl	3cf08 <flatcc_builder_table_add@@Base>
   264f8:	cmp	r0, #0
   264fc:	ldrbne	r3, [sp, #16]
   26500:	strbne	r3, [r0]
   26504:	b	25fc8 <__flatcc_fb_gen_c_json_printer@@Base+0x169c>
   26508:	mov	r3, #2
   2650c:	mov	r2, r3
   26510:	mov	r1, #3
   26514:	mov	r0, r9
   26518:	bl	3cf08 <flatcc_builder_table_add@@Base>
   2651c:	ldrh	r6, [r4, #96]	; 0x60
   26520:	cmp	r0, #0
   26524:	ldrhne	r3, [sp, #8]
   26528:	strhne	r3, [r0]
   2652c:	b	25fb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1684>
   26530:	mov	r3, #4
   26534:	mov	r2, r3
   26538:	mov	r1, r3
   2653c:	mov	r0, r9
   26540:	bl	3cf08 <flatcc_builder_table_add@@Base>
   26544:	cmp	r0, #0
   26548:	strne	r4, [r0]
   2654c:	b	2649c <__flatcc_fb_gen_c_json_printer@@Base+0x1b70>
   26550:	ldr	r3, [sp, #44]	; 0x2c
   26554:	mov	r0, r9
   26558:	ldr	r2, [r3, #28]
   2655c:	ldr	r1, [r3, #24]
   26560:	bl	3ca68 <flatcc_builder_create_string@@Base>
   26564:	subs	r4, r0, #0
   26568:	beq	25b04 <__flatcc_fb_gen_c_json_printer@@Base+0x11d8>
   2656c:	mov	r1, #3
   26570:	mov	r0, r9
   26574:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   26578:	cmp	r0, #0
   2657c:	strne	r4, [r0]
   26580:	b	25b04 <__flatcc_fb_gen_c_json_printer@@Base+0x11d8>
   26584:	ldr	r2, [r3, #12]
   26588:	ldr	r1, [r3, #8]
   2658c:	mov	r0, r9
   26590:	bl	3ca68 <flatcc_builder_create_string@@Base>
   26594:	subs	r5, r0, #0
   26598:	beq	25af4 <__flatcc_fb_gen_c_json_printer@@Base+0x11c8>
   2659c:	mov	r1, r4
   265a0:	mov	r0, r9
   265a4:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   265a8:	cmp	r0, #0
   265ac:	strne	r5, [r0]
   265b0:	b	25af4 <__flatcc_fb_gen_c_json_printer@@Base+0x11c8>
   265b4:	ldr	r3, [pc, #-1848]	; 25e84 <__flatcc_fb_gen_c_json_printer@@Base+0x1558>
   265b8:	mov	r2, #29
   265bc:	ldr	r1, [pc, #-1812]	; 25eb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1584>
   265c0:	ldr	r0, [pc, #-1856]	; 25e88 <__flatcc_fb_gen_c_json_printer@@Base+0x155c>
   265c4:	bl	14038 <__assert_fail@plt>
   265c8:	cmp	r6, #0
   265cc:	beq	265d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1cac>
   265d0:	mov	r0, r6
   265d4:	bl	13ed0 <free@plt>
   265d8:	cmp	r8, #0
   265dc:	beq	265e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1cbc>
   265e0:	mov	r0, r8
   265e4:	bl	13ed0 <free@plt>
   265e8:	cmp	r7, #0
   265ec:	beq	265f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ccc>
   265f0:	mov	r0, r7
   265f4:	bl	13ed0 <free@plt>
   265f8:	mvn	r0, #0
   265fc:	b	26468 <__flatcc_fb_gen_c_json_printer@@Base+0x1b3c>
   26600:	ldr	r3, [pc, #-1916]	; 25e8c <__flatcc_fb_gen_c_json_printer@@Base+0x1560>
   26604:	mov	r2, #25
   26608:	ldr	r1, [pc, #-1888]	; 25eb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1584>
   2660c:	ldr	r0, [pc, #-1924]	; 25e90 <__flatcc_fb_gen_c_json_printer@@Base+0x1564>
   26610:	bl	14038 <__assert_fail@plt>
   26614:	ldr	r0, [sp, #68]	; 0x44
   26618:	cmp	r0, #0
   2661c:	beq	26624 <__flatcc_fb_gen_c_json_printer@@Base+0x1cf8>
   26620:	bl	13ed0 <free@plt>
   26624:	ldr	r0, [sp, #72]	; 0x48
   26628:	cmp	r0, #0
   2662c:	beq	26634 <__flatcc_fb_gen_c_json_printer@@Base+0x1d08>
   26630:	bl	13ed0 <free@plt>
   26634:	ldr	r0, [sp, #76]	; 0x4c
   26638:	cmp	r0, #0
   2663c:	bne	265f4 <__flatcc_fb_gen_c_json_printer@@Base+0x1cc8>
   26640:	b	265f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ccc>
   26644:	ldr	r3, [pc, #-1976]	; 25e94 <__flatcc_fb_gen_c_json_printer@@Base+0x1568>
   26648:	mov	r2, #27
   2664c:	ldr	r1, [pc, #-1956]	; 25eb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1584>
   26650:	ldr	r0, [pc, #-1984]	; 25e98 <__flatcc_fb_gen_c_json_printer@@Base+0x156c>
   26654:	bl	14038 <__assert_fail@plt>
   26658:	vmov.f64	d8, d9
   2665c:	b	25d90 <__flatcc_fb_gen_c_json_printer@@Base+0x1464>
   26660:	ldr	r3, [pc, #-1996]	; 25e9c <__flatcc_fb_gen_c_json_printer@@Base+0x1570>
   26664:	mov	r2, #31
   26668:	ldr	r1, [pc, #-1984]	; 25eb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1584>
   2666c:	ldr	r0, [pc, #-2004]	; 25ea0 <__flatcc_fb_gen_c_json_printer@@Base+0x1574>
   26670:	bl	14038 <__assert_fail@plt>
   26674:	ldr	r3, [pc, #-2008]	; 25ea4 <__flatcc_fb_gen_c_json_printer@@Base+0x1578>
   26678:	mov	r2, #33	; 0x21
   2667c:	ldr	r1, [pc, #-2004]	; 25eb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1584>
   26680:	ldr	r0, [pc, #-2016]	; 25ea8 <__flatcc_fb_gen_c_json_printer@@Base+0x157c>
   26684:	bl	14038 <__assert_fail@plt>
   26688:	ldr	r3, [pc, #-2020]	; 25eac <__flatcc_fb_gen_c_json_printer@@Base+0x1580>
   2668c:	mov	r2, #23
   26690:	ldr	r1, [pc, #-2024]	; 25eb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1584>
   26694:	ldr	r0, [pc, #-2024]	; 25eb4 <__flatcc_fb_gen_c_json_printer@@Base+0x1588>
   26698:	bl	14038 <__assert_fail@plt>

0002669c <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   2669c:	push	{r4, r5, r6, r7, lr}
   266a0:	mov	r6, r0
   266a4:	sub	sp, sp, #236	; 0xec
   266a8:	mov	r7, r1
   266ac:	mov	r5, r3
   266b0:	mov	r0, sp
   266b4:	mov	r4, r2
   266b8:	bl	386cc <flatcc_builder_init@@Base>
   266bc:	mov	r3, r7
   266c0:	add	r2, r6, #188	; 0xbc
   266c4:	ldr	r1, [r6, #184]	; 0xb8
   266c8:	mov	r0, sp
   266cc:	bl	2591c <__flatcc_fb_gen_c_json_printer@@Base+0xff0>
   266d0:	ldr	r2, [r5]
   266d4:	mov	r1, r4
   266d8:	mov	r0, sp
   266dc:	bl	3d8bc <flatcc_builder_copy_buffer@@Base>
   266e0:	cmp	r0, #0
   266e4:	beq	266f0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x54>
   266e8:	mov	r0, r4
   266ec:	bl	25264 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   266f0:	mov	r0, sp
   266f4:	bl	3d7f0 <flatcc_builder_get_buffer_size@@Base>
   266f8:	str	r0, [r5]
   266fc:	mov	r0, sp
   26700:	bl	38938 <flatcc_builder_clear@@Base>
   26704:	mov	r0, r4
   26708:	add	sp, sp, #236	; 0xec
   2670c:	pop	{r4, r5, r6, r7, pc}

00026710 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   26710:	push	{r4, r5, r6, lr}
   26714:	mov	r4, r0
   26718:	sub	sp, sp, #232	; 0xe8
   2671c:	mov	r5, r1
   26720:	mov	r0, sp
   26724:	mov	r6, r2
   26728:	bl	386cc <flatcc_builder_init@@Base>
   2672c:	add	r2, r4, #188	; 0xbc
   26730:	ldr	r1, [r4, #184]	; 0xb8
   26734:	mov	r3, r5
   26738:	mov	r0, sp
   2673c:	bl	2591c <__flatcc_fb_gen_c_json_printer@@Base+0xff0>
   26740:	cmp	r0, #0
   26744:	movne	r4, #0
   26748:	bne	26764 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x54>
   2674c:	mov	r1, r6
   26750:	mov	r0, sp
   26754:	bl	3d8e8 <flatcc_builder_finalize_buffer@@Base>
   26758:	subs	r4, r0, #0
   2675c:	beq	26764 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x54>
   26760:	bl	25264 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   26764:	mov	r0, sp
   26768:	bl	38938 <flatcc_builder_clear@@Base>
   2676c:	mov	r0, r4
   26770:	add	sp, sp, #232	; 0xe8
   26774:	pop	{r4, r5, r6, pc}

00026778 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   26778:	push	{r4, r5, r6, r7, r8, r9, lr}
   2677c:	mov	r4, r0
   26780:	ldr	r5, [r0, #216]	; 0xd8
   26784:	sub	sp, sp, #252	; 0xfc
   26788:	cmp	r5, #0
   2678c:	mov	r6, r1
   26790:	ldr	r8, [r0, #108]	; 0x6c
   26794:	ldr	r7, [r1, #160]	; 0xa0
   26798:	beq	268d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   2679c:	mov	r0, r5
   267a0:	bl	13f78 <strlen@plt>
   267a4:	mov	r9, r0
   267a8:	mov	r0, r7
   267ac:	bl	13f78 <strlen@plt>
   267b0:	cmp	r8, #0
   267b4:	beq	26874 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc>
   267b8:	ldr	r3, [pc, #352]	; 26920 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a8>
   267bc:	ldr	r5, [r3]
   267c0:	cmp	r5, #0
   267c4:	beq	268f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x180>
   267c8:	add	r0, sp, #16
   267cc:	bl	386cc <flatcc_builder_init@@Base>
   267d0:	add	r2, r4, #188	; 0xbc
   267d4:	ldr	r1, [r4, #184]	; 0xb8
   267d8:	mov	r3, r6
   267dc:	add	r0, sp, #16
   267e0:	bl	2591c <__flatcc_fb_gen_c_json_printer@@Base+0xff0>
   267e4:	subs	r4, r0, #0
   267e8:	bne	268bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x144>
   267ec:	add	r1, sp, #12
   267f0:	add	r0, sp, #16
   267f4:	bl	3d8e8 <flatcc_builder_finalize_buffer@@Base>
   267f8:	subs	r6, r0, #0
   267fc:	beq	268bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x144>
   26800:	bl	25264 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   26804:	add	r0, sp, #16
   26808:	bl	38938 <flatcc_builder_clear@@Base>
   2680c:	mov	r3, r5
   26810:	ldr	r2, [sp, #12]
   26814:	mov	r1, #1
   26818:	mov	r0, r6
   2681c:	bl	13f18 <fwrite@plt>
   26820:	ldr	r3, [sp, #12]
   26824:	cmp	r0, r3
   26828:	beq	26848 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd0>
   2682c:	ldr	r3, [pc, #240]	; 26924 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ac>
   26830:	mov	r2, #38	; 0x26
   26834:	mov	r1, #1
   26838:	ldr	r3, [r3]
   2683c:	ldr	r0, [pc, #228]	; 26928 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b0>
   26840:	bl	13f18 <fwrite@plt>
   26844:	mvn	r4, #0
   26848:	mov	r0, r6
   2684c:	bl	13ed0 <free@plt>
   26850:	ldr	r3, [pc, #200]	; 26920 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a8>
   26854:	ldr	r3, [r3]
   26858:	cmp	r3, r5
   2685c:	beq	26868 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf0>
   26860:	mov	r0, r5
   26864:	bl	13fcc <fclose@plt>
   26868:	mov	r0, r4
   2686c:	add	sp, sp, #252	; 0xfc
   26870:	pop	{r4, r5, r6, r7, r8, r9, pc}
   26874:	ldr	ip, [pc, #176]	; 2692c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>
   26878:	mov	r8, #1
   2687c:	mov	r3, r0
   26880:	mov	r2, r7
   26884:	mov	r1, r9
   26888:	mov	r0, r5
   2688c:	str	ip, [sp]
   26890:	str	r8, [sp, #4]
   26894:	bl	29e30 <__flatcc_fb_create_join_path_n@@Base>
   26898:	subs	r7, r0, #0
   2689c:	beq	26900 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x188>
   268a0:	ldr	r1, [pc, #136]	; 26930 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b8>
   268a4:	bl	13ec4 <fopen@plt>
   268a8:	subs	r5, r0, #0
   268ac:	beq	268e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x168>
   268b0:	mov	r0, r7
   268b4:	bl	13ed0 <free@plt>
   268b8:	b	267c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x48>
   268bc:	add	r0, sp, #16
   268c0:	bl	38938 <flatcc_builder_clear@@Base>
   268c4:	ldr	r0, [pc, #104]	; 26934 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1bc>
   268c8:	bl	13f30 <puts@plt>
   268cc:	mvn	r4, #0
   268d0:	b	26850 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd8>
   268d4:	mov	r9, r5
   268d8:	ldr	r5, [pc, #88]	; 26938 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c0>
   268dc:	b	267a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x30>
   268e0:	ldr	r3, [pc, #60]	; 26924 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ac>
   268e4:	mov	r2, r7
   268e8:	ldr	r1, [pc, #76]	; 2693c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c4>
   268ec:	ldr	r0, [r3]
   268f0:	bl	13f84 <fprintf@plt>
   268f4:	b	268b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x138>
   268f8:	mvn	r4, #0
   268fc:	b	26868 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf0>
   26900:	ldr	r3, [pc, #28]	; 26924 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ac>
   26904:	mov	r2, #34	; 0x22
   26908:	mov	r1, r8
   2690c:	ldr	r3, [r3]
   26910:	ldr	r0, [pc, #40]	; 26940 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c8>
   26914:	bl	13f18 <fwrite@plt>
   26918:	mov	r0, r8
   2691c:	bl	13f6c <exit@plt>
   26920:	andeq	sp, r6, ip, lsr #1
   26924:	andeq	sp, r6, r8, lsr #1
   26928:	andeq	r8, r5, r8, asr r8
   2692c:	andeq	r1, r4, ip, lsr r9
   26930:	andeq	r1, r4, r0, asr #20
   26934:	andeq	r8, r5, r0, lsl #17
   26938:	andeq	fp, r4, ip, lsr #24
   2693c:	andeq	r8, r5, r4, lsr #16
   26940:	andeq	r1, r4, r8, lsl r9
   26944:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26948:	sub	sp, sp, #28
   2694c:	cmp	r3, #0
   26950:	str	r3, [sp, #8]
   26954:	str	r0, [sp, #12]
   26958:	beq	26b34 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3bc>
   2695c:	cmp	r3, #2
   26960:	beq	26b04 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x38c>
   26964:	cmp	r3, #1
   26968:	beq	26af0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x378>
   2696c:	ldr	r7, [r0, #12]
   26970:	mov	r3, #179	; 0xb3
   26974:	mov	r8, r1
   26978:	mul	r3, r3, r7
   2697c:	ldr	r1, [r0, #8]
   26980:	mov	r9, r2
   26984:	cmp	r1, r3, lsr #8
   26988:	mov	r4, r0
   2698c:	bcc	269a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x22c>
   26990:	lsl	r1, r1, #1
   26994:	bl	26b6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f4>
   26998:	cmp	r0, #0
   2699c:	bne	26b18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a0>
   269a0:	ldr	r7, [r4, #12]
   269a4:	ldr	r2, [pc, #412]	; 26b48 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d0>
   269a8:	add	r3, sp, #16
   269ac:	ldr	r1, [sp, #12]
   269b0:	stm	sp, {r2, r3}
   269b4:	mov	r0, r8
   269b8:	mov	r2, r9
   269bc:	mov	r3, #0
   269c0:	ldr	r6, [r1]
   269c4:	bl	3e060 <cmetrohash64_1@@Base>
   269c8:	ldr	r2, [sp, #64]	; 0x40
   269cc:	ldr	r3, [sp, #16]
   269d0:	sub	r2, r2, #2
   269d4:	sub	r7, r7, #1
   269d8:	cmp	r2, #1
   269dc:	and	r4, r7, r3
   269e0:	bls	26a98 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x320>
   269e4:	ldr	r5, [r6, r4, lsl #2]
   269e8:	add	r4, r6, r4, lsl #2
   269ec:	cmp	r5, #0
   269f0:	moveq	sl, r4
   269f4:	beq	26a50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d8>
   269f8:	add	fp, r3, #1
   269fc:	mov	sl, #0
   26a00:	b	26a34 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2bc>
   26a04:	mov	r2, r9
   26a08:	mov	r1, r5
   26a0c:	mov	r0, r8
   26a10:	bl	14020 <strncmp@plt>
   26a14:	cmp	r0, #0
   26a18:	beq	26a78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x300>
   26a1c:	and	r4, r7, fp
   26a20:	add	fp, fp, #1
   26a24:	ldr	r5, [r6, r4, lsl #2]
   26a28:	add	r4, r6, r4, lsl #2
   26a2c:	cmp	r5, #0
   26a30:	beq	26a48 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d0>
   26a34:	cmp	r5, #2
   26a38:	bne	26a04 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x28c>
   26a3c:	cmp	sl, #0
   26a40:	moveq	sl, r4
   26a44:	b	26a1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2a4>
   26a48:	cmp	sl, #0
   26a4c:	moveq	sl, r4
   26a50:	ldr	r2, [sp, #12]
   26a54:	mov	r5, #0
   26a58:	ldr	r3, [r2, #8]
   26a5c:	add	r3, r3, #1
   26a60:	str	r3, [r2, #8]
   26a64:	ldr	r3, [sp, #8]
   26a68:	str	r3, [sl]
   26a6c:	mov	r0, r5
   26a70:	add	sp, sp, #28
   26a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26a78:	ldr	r3, [sp, #64]	; 0x40
   26a7c:	cmp	r3, #0
   26a80:	bne	26a6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f4>
   26a84:	ldr	r3, [sp, #8]
   26a88:	mov	r0, r5
   26a8c:	str	r3, [r4]
   26a90:	add	sp, sp, #28
   26a94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26a98:	ldr	r0, [sp, #12]
   26a9c:	ldr	r1, [r6, r4, lsl #2]
   26aa0:	add	r4, r6, r4, lsl #2
   26aa4:	ldr	r2, [r0, #8]
   26aa8:	cmp	r1, #0
   26aac:	cmpne	r1, #2
   26ab0:	add	r2, r2, #1
   26ab4:	str	r2, [r0, #8]
   26ab8:	beq	26ae0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x368>
   26abc:	add	r3, r3, #1
   26ac0:	and	r2, r7, r3
   26ac4:	add	r3, r3, #1
   26ac8:	ldr	r1, [r6, r2, lsl #2]
   26acc:	add	r2, r6, r2, lsl #2
   26ad0:	cmp	r1, #0
   26ad4:	cmpne	r1, #2
   26ad8:	bne	26ac0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x348>
   26adc:	mov	r4, r2
   26ae0:	ldr	r3, [sp, #8]
   26ae4:	mov	r5, #0
   26ae8:	str	r3, [r4]
   26aec:	b	26a6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f4>
   26af0:	ldr	r3, [pc, #84]	; 26b4c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d4>
   26af4:	mov	r2, #116	; 0x74
   26af8:	ldr	r1, [pc, #80]	; 26b50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d8>
   26afc:	ldr	r0, [pc, #80]	; 26b54 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3dc>
   26b00:	bl	14038 <__assert_fail@plt>
   26b04:	ldr	r3, [pc, #64]	; 26b4c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d4>
   26b08:	mov	r2, #115	; 0x73
   26b0c:	ldr	r1, [pc, #60]	; 26b50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d8>
   26b10:	ldr	r0, [pc, #64]	; 26b58 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e0>
   26b14:	bl	14038 <__assert_fail@plt>
   26b18:	ldr	r3, [pc, #60]	; 26b5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e4>
   26b1c:	ldr	r2, [pc, #60]	; 26b60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e8>
   26b20:	ldr	r1, [pc, #60]	; 26b64 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ec>
   26b24:	ldr	r0, [r3]
   26b28:	bl	13f84 <fprintf@plt>
   26b2c:	mov	r0, #1
   26b30:	bl	13f6c <exit@plt>
   26b34:	ldr	r3, [pc, #16]	; 26b4c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d4>
   26b38:	mov	r2, #114	; 0x72
   26b3c:	ldr	r1, [pc, #12]	; 26b50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d8>
   26b40:	ldr	r0, [pc, #32]	; 26b68 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f0>
   26b44:	bl	14038 <__assert_fail@plt>
   26b48:	svccs	0x00693b52
   26b4c:	andeq	r8, r5, r4, lsr #17
   26b50:			; <UNDEFINED> instruction: 0x000588bc
   26b54:	andeq	r8, r5, ip, lsr r9
   26b58:	andeq	r8, r5, r4, lsr #18
   26b5c:	andeq	sp, r6, r8, lsr #1
   26b60:	andeq	r8, r5, r4, asr r9
   26b64:	andeq	r8, r5, r8, lsl #19
   26b68:	andeq	r8, r5, ip, lsl #18
   26b6c:	ldr	r3, [r0, #8]
   26b70:	push	{r4, r5, r6, r7, r8, r9, lr}
   26b74:	cmp	r1, r3
   26b78:	movcc	r1, r3
   26b7c:	cmp	r1, #2
   26b80:	sub	sp, sp, #28
   26b84:	mov	r7, r0
   26b88:	ldr	r6, [r0]
   26b8c:	mov	r4, #4
   26b90:	bls	26ba8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x430>
   26b94:	mov	r2, #179	; 0xb3
   26b98:	lsl	r4, r4, #1
   26b9c:	mul	r3, r2, r4
   26ba0:	cmp	r1, r3, lsr #8
   26ba4:	bhi	26b98 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x420>
   26ba8:	mov	r1, #4
   26bac:	mov	r0, r4
   26bb0:	bl	13ea0 <calloc@plt>
   26bb4:	cmp	r0, #0
   26bb8:	str	r0, [sp, #8]
   26bbc:	beq	26c78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x500>
   26bc0:	ldr	r3, [r7, #12]
   26bc4:	mov	r5, #0
   26bc8:	cmp	r3, r5
   26bcc:	str	r4, [sp, #20]
   26bd0:	str	r5, [sp, #12]
   26bd4:	str	r5, [sp, #16]
   26bd8:	beq	26c6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4f4>
   26bdc:	sub	r6, r6, #4
   26be0:	add	r8, sp, #8
   26be4:	mov	r9, #3
   26be8:	b	26bf4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x47c>
   26bec:	cmp	r5, r3
   26bf0:	bcs	26c34 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4bc>
   26bf4:	ldr	r4, [r6, #4]!
   26bf8:	add	r5, r5, #1
   26bfc:	cmp	r4, #0
   26c00:	cmpne	r4, #2
   26c04:	beq	26bec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x474>
   26c08:	mov	r0, r4
   26c0c:	bl	13f78 <strlen@plt>
   26c10:	mov	r3, r4
   26c14:	str	r9, [sp]
   26c18:	mov	r1, r4
   26c1c:	mov	r2, r0
   26c20:	mov	r0, r8
   26c24:	bl	26944 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cc>
   26c28:	ldr	r3, [r7, #12]
   26c2c:	cmp	r5, r3
   26c30:	bcc	26bf4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x47c>
   26c34:	ldr	r0, [r7]
   26c38:	cmp	r0, #0
   26c3c:	beq	26c44 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4cc>
   26c40:	bl	13ed0 <free@plt>
   26c44:	mov	ip, r8
   26c48:	mov	lr, #0
   26c4c:	ldm	ip!, {r0, r1, r2, r3}
   26c50:	str	r0, [r7]
   26c54:	str	r1, [r7, #4]
   26c58:	str	r2, [r7, #8]
   26c5c:	str	r3, [r7, #12]
   26c60:	mov	r0, lr
   26c64:	add	sp, sp, #28
   26c68:	pop	{r4, r5, r6, r7, r8, r9, pc}
   26c6c:	mov	r0, r6
   26c70:	add	r8, sp, #8
   26c74:	b	26c38 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c0>
   26c78:	mvn	lr, #0
   26c7c:	b	26c60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e8>

00026c80 <str_set_clear@@Base>:
   26c80:	push	{r4, lr}
   26c84:	mov	r4, r0
   26c88:	ldr	r0, [r0]
   26c8c:	cmp	r0, #0
   26c90:	beq	26c98 <str_set_clear@@Base+0x18>
   26c94:	bl	13ed0 <free@plt>
   26c98:	mov	r3, #0
   26c9c:	str	r3, [r4]
   26ca0:	str	r3, [r4, #4]
   26ca4:	str	r3, [r4, #8]
   26ca8:	str	r3, [r4, #12]
   26cac:	pop	{r4, pc}

00026cb0 <str_set_destroy@@Base>:
   26cb0:	push	{r4, r5, r6, r7, r8, lr}
   26cb4:	subs	r7, r1, #0
   26cb8:	mov	r6, r0
   26cbc:	beq	26d10 <str_set_destroy@@Base+0x60>
   26cc0:	ldr	r3, [r0, #12]
   26cc4:	ldr	r0, [r0]
   26cc8:	cmp	r3, #0
   26ccc:	beq	26d14 <str_set_destroy@@Base+0x64>
   26cd0:	mov	r8, r2
   26cd4:	sub	r5, r0, #4
   26cd8:	mov	r4, #0
   26cdc:	b	26ce8 <str_set_destroy@@Base+0x38>
   26ce0:	cmp	r4, r3
   26ce4:	bcs	26d10 <str_set_destroy@@Base+0x60>
   26ce8:	ldr	r1, [r5, #4]!
   26cec:	add	r4, r4, #1
   26cf0:	cmp	r1, #0
   26cf4:	cmpne	r1, #2
   26cf8:	beq	26ce0 <str_set_destroy@@Base+0x30>
   26cfc:	mov	r0, r8
   26d00:	blx	r7
   26d04:	ldr	r3, [r6, #12]
   26d08:	cmp	r4, r3
   26d0c:	bcc	26ce8 <str_set_destroy@@Base+0x38>
   26d10:	ldr	r0, [r6]
   26d14:	cmp	r0, #0
   26d18:	beq	26d20 <str_set_destroy@@Base+0x70>
   26d1c:	bl	13ed0 <free@plt>
   26d20:	mov	r3, #0
   26d24:	str	r3, [r6]
   26d28:	str	r3, [r6, #4]
   26d2c:	str	r3, [r6, #8]
   26d30:	str	r3, [r6, #12]
   26d34:	pop	{r4, r5, r6, r7, r8, pc}

00026d38 <str_set_init@@Base>:
   26d38:	cmp	r1, #2
   26d3c:	push	{r4, r5, r6, lr}
   26d40:	mov	r4, #4
   26d44:	mov	r5, r0
   26d48:	bls	26d60 <str_set_init@@Base+0x28>
   26d4c:	mov	r2, #179	; 0xb3
   26d50:	lsl	r4, r4, #1
   26d54:	mul	r3, r2, r4
   26d58:	cmp	r1, r3, lsr #8
   26d5c:	bhi	26d50 <str_set_init@@Base+0x18>
   26d60:	mov	r1, #4
   26d64:	mov	r0, r4
   26d68:	bl	13ea0 <calloc@plt>
   26d6c:	cmp	r0, #0
   26d70:	str	r0, [r5]
   26d74:	movne	r0, #0
   26d78:	strne	r4, [r5, #12]
   26d7c:	strne	r0, [r5, #4]
   26d80:	strne	r0, [r5, #8]
   26d84:	mvneq	r0, #0
   26d88:	pop	{r4, r5, r6, pc}

00026d8c <str_set_resize@@Base>:
   26d8c:	b	26b6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f4>

00026d90 <str_set_insert@@Base>:
   26d90:	b	26944 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cc>

00026d94 <str_set_insert_item@@Base>:
   26d94:	push	{r4, r5, r6, lr}
   26d98:	mov	r5, r0
   26d9c:	sub	sp, sp, #8
   26da0:	mov	r0, r1
   26da4:	mov	r4, r1
   26da8:	mov	r6, r2
   26dac:	bl	13f78 <strlen@plt>
   26db0:	str	r6, [sp]
   26db4:	mov	r3, r4
   26db8:	mov	r1, r4
   26dbc:	mov	r2, r0
   26dc0:	mov	r0, r5
   26dc4:	bl	26944 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cc>
   26dc8:	add	sp, sp, #8
   26dcc:	pop	{r4, r5, r6, pc}

00026dd0 <str_set_find@@Base>:
   26dd0:	push	{r4, r5, r6, r7, r8, r9, lr}
   26dd4:	sub	sp, sp, #20
   26dd8:	ldr	r9, [r0]
   26ddc:	cmp	r9, #0
   26de0:	beq	26e58 <str_set_find@@Base+0x88>
   26de4:	mov	r6, r1
   26de8:	ldr	r1, [pc, #120]	; 26e68 <str_set_find@@Base+0x98>
   26dec:	add	r3, sp, #8
   26df0:	ldr	r7, [r0, #12]
   26df4:	stm	sp, {r1, r3}
   26df8:	mov	r0, r6
   26dfc:	mov	r3, #0
   26e00:	mov	r8, r2
   26e04:	bl	3e060 <cmetrohash64_1@@Base>
   26e08:	ldr	r5, [sp, #8]
   26e0c:	sub	r7, r7, #1
   26e10:	and	r3, r7, r5
   26e14:	ldr	r4, [r9, r3, lsl #2]
   26e18:	cmp	r4, #0
   26e1c:	beq	26e58 <str_set_find@@Base+0x88>
   26e20:	add	r5, r5, #1
   26e24:	cmp	r4, #2
   26e28:	mov	r1, r4
   26e2c:	mov	r2, r8
   26e30:	mov	r0, r6
   26e34:	beq	26e44 <str_set_find@@Base+0x74>
   26e38:	bl	14020 <strncmp@plt>
   26e3c:	cmp	r0, #0
   26e40:	beq	26e5c <str_set_find@@Base+0x8c>
   26e44:	and	r3, r7, r5
   26e48:	add	r5, r5, #1
   26e4c:	ldr	r4, [r9, r3, lsl #2]
   26e50:	cmp	r4, #0
   26e54:	bne	26e24 <str_set_find@@Base+0x54>
   26e58:	mov	r4, #0
   26e5c:	mov	r0, r4
   26e60:	add	sp, sp, #20
   26e64:	pop	{r4, r5, r6, r7, r8, r9, pc}
   26e68:	svccs	0x00693b52

00026e6c <str_set_find_item@@Base>:
   26e6c:	push	{r4, r5, r6, r7, r8, r9, lr}
   26e70:	mov	r4, r0
   26e74:	sub	sp, sp, #20
   26e78:	mov	r0, r1
   26e7c:	mov	r7, r1
   26e80:	bl	13f78 <strlen@plt>
   26e84:	ldr	r8, [r4]
   26e88:	cmp	r8, #0
   26e8c:	beq	26f04 <str_set_find_item@@Base+0x98>
   26e90:	ldr	r2, [pc, #124]	; 26f14 <str_set_find_item@@Base+0xa8>
   26e94:	add	r3, sp, #8
   26e98:	ldr	r6, [r4, #12]
   26e9c:	mov	r9, r0
   26ea0:	stm	sp, {r2, r3}
   26ea4:	mov	r2, r0
   26ea8:	mov	r3, #0
   26eac:	mov	r0, r7
   26eb0:	bl	3e060 <cmetrohash64_1@@Base>
   26eb4:	ldr	r5, [sp, #8]
   26eb8:	sub	r6, r6, #1
   26ebc:	and	r3, r6, r5
   26ec0:	ldr	r4, [r8, r3, lsl #2]
   26ec4:	cmp	r4, #0
   26ec8:	beq	26f04 <str_set_find_item@@Base+0x98>
   26ecc:	add	r5, r5, #1
   26ed0:	cmp	r4, #2
   26ed4:	mov	r1, r4
   26ed8:	mov	r2, r9
   26edc:	mov	r0, r7
   26ee0:	beq	26ef0 <str_set_find_item@@Base+0x84>
   26ee4:	bl	14020 <strncmp@plt>
   26ee8:	cmp	r0, #0
   26eec:	beq	26f08 <str_set_find_item@@Base+0x9c>
   26ef0:	and	r3, r6, r5
   26ef4:	add	r5, r5, #1
   26ef8:	ldr	r4, [r8, r3, lsl #2]
   26efc:	cmp	r4, #0
   26f00:	bne	26ed0 <str_set_find_item@@Base+0x64>
   26f04:	mov	r4, #0
   26f08:	mov	r0, r4
   26f0c:	add	sp, sp, #20
   26f10:	pop	{r4, r5, r6, r7, r8, r9, pc}
   26f14:	svccs	0x00693b52

00026f18 <str_set_remove@@Base>:
   26f18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26f1c:	sub	sp, sp, #20
   26f20:	ldr	r5, [r0]
   26f24:	cmp	r5, #0
   26f28:	beq	26fac <str_set_remove@@Base+0x94>
   26f2c:	mov	r6, r1
   26f30:	ldr	r1, [pc, #164]	; 26fdc <str_set_remove@@Base+0xc4>
   26f34:	add	r3, sp, #8
   26f38:	ldr	r7, [r0, #12]
   26f3c:	mov	r9, r0
   26f40:	stm	sp, {r1, r3}
   26f44:	mov	r0, r6
   26f48:	mov	r3, #0
   26f4c:	mov	r8, r2
   26f50:	bl	3e060 <cmetrohash64_1@@Base>
   26f54:	ldr	sl, [sp, #8]
   26f58:	sub	r7, r7, #1
   26f5c:	and	r3, r7, sl
   26f60:	ldr	fp, [r5, r3, lsl #2]
   26f64:	add	r4, r5, r3, lsl #2
   26f68:	cmp	fp, #0
   26f6c:	beq	26fac <str_set_remove@@Base+0x94>
   26f70:	add	sl, sl, #1
   26f74:	cmp	fp, #2
   26f78:	mov	r1, fp
   26f7c:	mov	r2, r8
   26f80:	mov	r0, r6
   26f84:	beq	26f94 <str_set_remove@@Base+0x7c>
   26f88:	bl	14020 <strncmp@plt>
   26f8c:	cmp	r0, #0
   26f90:	beq	26fbc <str_set_remove@@Base+0xa4>
   26f94:	and	r3, r7, sl
   26f98:	add	sl, sl, #1
   26f9c:	ldr	fp, [r5, r3, lsl #2]
   26fa0:	add	r4, r5, r3, lsl #2
   26fa4:	cmp	fp, #0
   26fa8:	bne	26f74 <str_set_remove@@Base+0x5c>
   26fac:	mov	fp, #0
   26fb0:	mov	r0, fp
   26fb4:	add	sp, sp, #20
   26fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26fbc:	ldr	r3, [r9, #8]
   26fc0:	mov	r2, #2
   26fc4:	sub	r3, r3, #1
   26fc8:	str	r2, [r4]
   26fcc:	mov	r0, fp
   26fd0:	str	r3, [r9, #8]
   26fd4:	add	sp, sp, #20
   26fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26fdc:	svccs	0x00693b52

00026fe0 <str_set_remove_item@@Base>:
   26fe0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26fe4:	mov	r9, r0
   26fe8:	sub	sp, sp, #20
   26fec:	mov	r0, r1
   26ff0:	mov	r7, r1
   26ff4:	bl	13f78 <strlen@plt>
   26ff8:	ldr	r5, [r9]
   26ffc:	cmp	r5, #0
   27000:	beq	27080 <str_set_remove_item@@Base+0xa0>
   27004:	ldr	r2, [pc, #164]	; 270b0 <str_set_remove_item@@Base+0xd0>
   27008:	add	r3, sp, #8
   2700c:	ldr	r6, [r9, #12]
   27010:	mov	r8, r0
   27014:	stm	sp, {r2, r3}
   27018:	mov	r2, r0
   2701c:	mov	r3, #0
   27020:	mov	r0, r7
   27024:	bl	3e060 <cmetrohash64_1@@Base>
   27028:	ldr	sl, [sp, #8]
   2702c:	sub	r6, r6, #1
   27030:	and	r3, r6, sl
   27034:	ldr	fp, [r5, r3, lsl #2]
   27038:	add	r4, r5, r3, lsl #2
   2703c:	cmp	fp, #0
   27040:	beq	27080 <str_set_remove_item@@Base+0xa0>
   27044:	add	sl, sl, #1
   27048:	cmp	fp, #2
   2704c:	mov	r1, fp
   27050:	mov	r2, r8
   27054:	mov	r0, r7
   27058:	beq	27068 <str_set_remove_item@@Base+0x88>
   2705c:	bl	14020 <strncmp@plt>
   27060:	cmp	r0, #0
   27064:	beq	27090 <str_set_remove_item@@Base+0xb0>
   27068:	and	r3, r6, sl
   2706c:	add	sl, sl, #1
   27070:	ldr	fp, [r5, r3, lsl #2]
   27074:	add	r4, r5, r3, lsl #2
   27078:	cmp	fp, #0
   2707c:	bne	27048 <str_set_remove_item@@Base+0x68>
   27080:	mov	fp, #0
   27084:	mov	r0, fp
   27088:	add	sp, sp, #20
   2708c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27090:	ldr	r3, [r9, #8]
   27094:	mov	r2, #2
   27098:	sub	r3, r3, #1
   2709c:	str	r2, [r4]
   270a0:	mov	r0, fp
   270a4:	str	r3, [r9, #8]
   270a8:	add	sp, sp, #20
   270ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   270b0:	svccs	0x00693b52

000270b4 <str_set_visit@@Base>:
   270b4:	ldr	r3, [r0, #12]
   270b8:	push	{r4, r5, r6, r7, r8, lr}
   270bc:	cmp	r3, #0
   270c0:	ldr	r5, [r0]
   270c4:	popeq	{r4, r5, r6, r7, r8, pc}
   270c8:	mov	r7, r2
   270cc:	mov	r6, r1
   270d0:	mov	r8, r0
   270d4:	sub	r5, r5, #4
   270d8:	mov	r4, #0
   270dc:	b	270e8 <str_set_visit@@Base+0x34>
   270e0:	cmp	r4, r3
   270e4:	bcs	27110 <str_set_visit@@Base+0x5c>
   270e8:	ldr	r1, [r5, #4]!
   270ec:	add	r4, r4, #1
   270f0:	cmp	r1, #0
   270f4:	cmpne	r1, #2
   270f8:	beq	270e0 <str_set_visit@@Base+0x2c>
   270fc:	mov	r0, r7
   27100:	blx	r6
   27104:	ldr	r3, [r8, #12]
   27108:	cmp	r4, r3
   2710c:	bcc	270e8 <str_set_visit@@Base+0x34>
   27110:	pop	{r4, r5, r6, r7, r8, pc}
   27114:	push	{r4, r5, r6, r7, r8, r9, lr}
   27118:	subs	r7, r2, #0
   2711c:	sub	sp, sp, #28
   27120:	beq	272c0 <str_set_visit@@Base+0x20c>
   27124:	cmp	r7, #2
   27128:	beq	27290 <str_set_visit@@Base+0x1dc>
   2712c:	cmp	r7, #1
   27130:	beq	2727c <str_set_visit@@Base+0x1c8>
   27134:	ldr	r9, [r0, #12]
   27138:	mov	r8, r3
   2713c:	mov	r3, #179	; 0xb3
   27140:	mov	r5, r1
   27144:	mul	r3, r3, r9
   27148:	ldr	r1, [r0, #8]
   2714c:	mov	r6, r0
   27150:	cmp	r1, r3, lsr #8
   27154:	bcc	2716c <str_set_visit@@Base+0xb8>
   27158:	lsl	r1, r1, #1
   2715c:	bl	272f8 <str_set_visit@@Base+0x244>
   27160:	cmp	r0, #0
   27164:	bne	272a4 <str_set_visit@@Base+0x1f0>
   27168:	ldr	r9, [r6, #12]
   2716c:	ldr	r2, [pc, #352]	; 272d4 <str_set_visit@@Base+0x220>
   27170:	add	r0, sp, #24
   27174:	add	r3, sp, #16
   27178:	str	r5, [r0, #-12]!
   2717c:	stm	sp, {r2, r3}
   27180:	mov	r2, #4
   27184:	mov	r3, #0
   27188:	ldr	r4, [r6]
   2718c:	bl	3e060 <cmetrohash64_1@@Base>
   27190:	sub	r3, r8, #2
   27194:	ldr	r2, [sp, #16]
   27198:	sub	r9, r9, #1
   2719c:	cmp	r3, #1
   271a0:	and	r3, r9, r2
   271a4:	bls	27230 <str_set_visit@@Base+0x17c>
   271a8:	ldr	r0, [r4, r3, lsl #2]
   271ac:	add	r3, r4, r3, lsl #2
   271b0:	cmp	r0, #0
   271b4:	moveq	r1, r3
   271b8:	beq	27204 <str_set_visit@@Base+0x150>
   271bc:	add	r2, r2, #1
   271c0:	mov	r1, #0
   271c4:	b	271e8 <str_set_visit@@Base+0x134>
   271c8:	cmp	r5, r0
   271cc:	beq	27220 <str_set_visit@@Base+0x16c>
   271d0:	and	r3, r9, r2
   271d4:	add	r2, r2, #1
   271d8:	ldr	r0, [r4, r3, lsl #2]
   271dc:	add	r3, r4, r3, lsl #2
   271e0:	cmp	r0, #0
   271e4:	beq	271fc <str_set_visit@@Base+0x148>
   271e8:	cmp	r0, #2
   271ec:	bne	271c8 <str_set_visit@@Base+0x114>
   271f0:	cmp	r1, #0
   271f4:	moveq	r1, r3
   271f8:	b	271d0 <str_set_visit@@Base+0x11c>
   271fc:	cmp	r1, #0
   27200:	moveq	r1, r3
   27204:	ldr	r3, [r6, #8]
   27208:	mov	r0, #0
   2720c:	add	r3, r3, #1
   27210:	str	r3, [r6, #8]
   27214:	str	r7, [r1]
   27218:	add	sp, sp, #28
   2721c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   27220:	cmp	r8, #0
   27224:	streq	r7, [r3]
   27228:	add	sp, sp, #28
   2722c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   27230:	ldr	r0, [r4, r3, lsl #2]
   27234:	ldr	r1, [r6, #8]
   27238:	cmp	r0, #0
   2723c:	cmpne	r0, #2
   27240:	add	r1, r1, #1
   27244:	str	r1, [r6, #8]
   27248:	add	r3, r4, r3, lsl #2
   2724c:	beq	27270 <str_set_visit@@Base+0x1bc>
   27250:	add	r2, r2, #1
   27254:	and	r3, r9, r2
   27258:	add	r2, r2, #1
   2725c:	ldr	r1, [r4, r3, lsl #2]
   27260:	add	r3, r4, r3, lsl #2
   27264:	cmp	r1, #0
   27268:	cmpne	r1, #2
   2726c:	bne	27254 <str_set_visit@@Base+0x1a0>
   27270:	str	r7, [r3]
   27274:	mov	r0, #0
   27278:	b	27218 <str_set_visit@@Base+0x164>
   2727c:	ldr	r3, [pc, #84]	; 272d8 <str_set_visit@@Base+0x224>
   27280:	mov	r2, #116	; 0x74
   27284:	ldr	r1, [pc, #80]	; 272dc <str_set_visit@@Base+0x228>
   27288:	ldr	r0, [pc, #80]	; 272e0 <str_set_visit@@Base+0x22c>
   2728c:	bl	14038 <__assert_fail@plt>
   27290:	ldr	r3, [pc, #64]	; 272d8 <str_set_visit@@Base+0x224>
   27294:	mov	r2, #115	; 0x73
   27298:	ldr	r1, [pc, #60]	; 272dc <str_set_visit@@Base+0x228>
   2729c:	ldr	r0, [pc, #64]	; 272e4 <str_set_visit@@Base+0x230>
   272a0:	bl	14038 <__assert_fail@plt>
   272a4:	ldr	r3, [pc, #60]	; 272e8 <str_set_visit@@Base+0x234>
   272a8:	ldr	r2, [pc, #60]	; 272ec <str_set_visit@@Base+0x238>
   272ac:	ldr	r1, [pc, #60]	; 272f0 <str_set_visit@@Base+0x23c>
   272b0:	ldr	r0, [r3]
   272b4:	bl	13f84 <fprintf@plt>
   272b8:	mov	r0, #1
   272bc:	bl	13f6c <exit@plt>
   272c0:	ldr	r3, [pc, #16]	; 272d8 <str_set_visit@@Base+0x224>
   272c4:	mov	r2, #114	; 0x72
   272c8:	ldr	r1, [pc, #12]	; 272dc <str_set_visit@@Base+0x228>
   272cc:	ldr	r0, [pc, #32]	; 272f4 <str_set_visit@@Base+0x240>
   272d0:	bl	14038 <__assert_fail@plt>
   272d4:	svccs	0x00693b52
   272d8:	andeq	r8, r5, r0, lsr #19
   272dc:			; <UNDEFINED> instruction: 0x000588bc
   272e0:	andeq	r8, r5, ip, lsr r9
   272e4:	andeq	r8, r5, r4, lsr #18
   272e8:	andeq	sp, r6, r8, lsr #1
   272ec:	andeq	r8, r5, r4, asr r9
   272f0:	andeq	r8, r5, r8, lsl #19
   272f4:	andeq	r8, r5, ip, lsl #18
   272f8:	ldr	r3, [r0, #8]
   272fc:	push	{r4, r5, r6, r7, r8, lr}
   27300:	cmp	r1, r3
   27304:	movcc	r1, r3
   27308:	cmp	r1, #2
   2730c:	sub	sp, sp, #16
   27310:	mov	r7, r0
   27314:	ldr	r6, [r0]
   27318:	mov	r5, #4
   2731c:	bls	27334 <str_set_visit@@Base+0x280>
   27320:	mov	r2, #179	; 0xb3
   27324:	lsl	r5, r5, #1
   27328:	mul	r3, r2, r5
   2732c:	cmp	r1, r3, lsr #8
   27330:	bhi	27324 <str_set_visit@@Base+0x270>
   27334:	mov	r1, #4
   27338:	mov	r0, r5
   2733c:	bl	13ea0 <calloc@plt>
   27340:	cmp	r0, #0
   27344:	str	r0, [sp]
   27348:	beq	273f4 <str_set_visit@@Base+0x340>
   2734c:	ldr	r3, [r7, #12]
   27350:	mov	r4, #0
   27354:	cmp	r3, r4
   27358:	str	r5, [sp, #12]
   2735c:	str	r4, [sp, #4]
   27360:	str	r4, [sp, #8]
   27364:	beq	273e8 <str_set_visit@@Base+0x334>
   27368:	sub	r5, r6, #4
   2736c:	mov	r8, sp
   27370:	mov	r6, #3
   27374:	b	27380 <str_set_visit@@Base+0x2cc>
   27378:	cmp	r4, r3
   2737c:	bcs	273b0 <str_set_visit@@Base+0x2fc>
   27380:	ldr	r2, [r5, #4]!
   27384:	add	r4, r4, #1
   27388:	cmp	r2, #0
   2738c:	cmpne	r2, #2
   27390:	beq	27378 <str_set_visit@@Base+0x2c4>
   27394:	mov	r3, r6
   27398:	mov	r1, r2
   2739c:	mov	r0, r8
   273a0:	bl	27114 <str_set_visit@@Base+0x60>
   273a4:	ldr	r3, [r7, #12]
   273a8:	cmp	r4, r3
   273ac:	bcc	27380 <str_set_visit@@Base+0x2cc>
   273b0:	ldr	r0, [r7]
   273b4:	cmp	r0, #0
   273b8:	beq	273c0 <str_set_visit@@Base+0x30c>
   273bc:	bl	13ed0 <free@plt>
   273c0:	mov	ip, r8
   273c4:	mov	lr, #0
   273c8:	ldm	ip!, {r0, r1, r2, r3}
   273cc:	str	r0, [r7]
   273d0:	str	r1, [r7, #4]
   273d4:	str	r2, [r7, #8]
   273d8:	str	r3, [r7, #12]
   273dc:	mov	r0, lr
   273e0:	add	sp, sp, #16
   273e4:	pop	{r4, r5, r6, r7, r8, pc}
   273e8:	mov	r0, r6
   273ec:	mov	r8, sp
   273f0:	b	273b4 <str_set_visit@@Base+0x300>
   273f4:	mvn	lr, #0
   273f8:	b	273dc <str_set_visit@@Base+0x328>

000273fc <ptr_set_clear@@Base>:
   273fc:	push	{r4, lr}
   27400:	mov	r4, r0
   27404:	ldr	r0, [r0]
   27408:	cmp	r0, #0
   2740c:	beq	27414 <ptr_set_clear@@Base+0x18>
   27410:	bl	13ed0 <free@plt>
   27414:	mov	r3, #0
   27418:	str	r3, [r4]
   2741c:	str	r3, [r4, #4]
   27420:	str	r3, [r4, #8]
   27424:	str	r3, [r4, #12]
   27428:	pop	{r4, pc}

0002742c <ptr_set_destroy@@Base>:
   2742c:	push	{r4, r5, r6, r7, r8, lr}
   27430:	subs	r7, r1, #0
   27434:	mov	r6, r0
   27438:	beq	2748c <ptr_set_destroy@@Base+0x60>
   2743c:	ldr	r3, [r0, #12]
   27440:	ldr	r0, [r0]
   27444:	cmp	r3, #0
   27448:	beq	27490 <ptr_set_destroy@@Base+0x64>
   2744c:	mov	r8, r2
   27450:	sub	r5, r0, #4
   27454:	mov	r4, #0
   27458:	b	27464 <ptr_set_destroy@@Base+0x38>
   2745c:	cmp	r4, r3
   27460:	bcs	2748c <ptr_set_destroy@@Base+0x60>
   27464:	ldr	r1, [r5, #4]!
   27468:	add	r4, r4, #1
   2746c:	cmp	r1, #0
   27470:	cmpne	r1, #2
   27474:	beq	2745c <ptr_set_destroy@@Base+0x30>
   27478:	mov	r0, r8
   2747c:	blx	r7
   27480:	ldr	r3, [r6, #12]
   27484:	cmp	r4, r3
   27488:	bcc	27464 <ptr_set_destroy@@Base+0x38>
   2748c:	ldr	r0, [r6]
   27490:	cmp	r0, #0
   27494:	beq	2749c <ptr_set_destroy@@Base+0x70>
   27498:	bl	13ed0 <free@plt>
   2749c:	mov	r3, #0
   274a0:	str	r3, [r6]
   274a4:	str	r3, [r6, #4]
   274a8:	str	r3, [r6, #8]
   274ac:	str	r3, [r6, #12]
   274b0:	pop	{r4, r5, r6, r7, r8, pc}

000274b4 <ptr_set_init@@Base>:
   274b4:	cmp	r1, #2
   274b8:	push	{r4, r5, r6, lr}
   274bc:	mov	r4, #4
   274c0:	mov	r5, r0
   274c4:	bls	274dc <ptr_set_init@@Base+0x28>
   274c8:	mov	r2, #179	; 0xb3
   274cc:	lsl	r4, r4, #1
   274d0:	mul	r3, r2, r4
   274d4:	cmp	r1, r3, lsr #8
   274d8:	bhi	274cc <ptr_set_init@@Base+0x18>
   274dc:	mov	r1, #4
   274e0:	mov	r0, r4
   274e4:	bl	13ea0 <calloc@plt>
   274e8:	cmp	r0, #0
   274ec:	str	r0, [r5]
   274f0:	movne	r0, #0
   274f4:	strne	r4, [r5, #12]
   274f8:	strne	r0, [r5, #4]
   274fc:	strne	r0, [r5, #8]
   27500:	mvneq	r0, #0
   27504:	pop	{r4, r5, r6, pc}

00027508 <ptr_set_resize@@Base>:
   27508:	b	272f8 <str_set_visit@@Base+0x244>

0002750c <ptr_set_insert@@Base>:
   2750c:	mov	r2, r3
   27510:	ldr	r3, [sp]
   27514:	b	27114 <str_set_visit@@Base+0x60>

00027518 <ptr_set_insert_item@@Base>:
   27518:	mov	r3, r2
   2751c:	mov	r2, r1
   27520:	b	27114 <str_set_visit@@Base+0x60>

00027524 <ptr_set_find@@Base>:
   27524:	push	{r4, r5, r6, lr}
   27528:	sub	sp, sp, #24
   2752c:	ldr	r5, [r0]
   27530:	cmp	r5, #0
   27534:	beq	275a4 <ptr_set_find@@Base+0x80>
   27538:	mov	r3, r0
   2753c:	ldr	r2, [pc, #108]	; 275b0 <ptr_set_find@@Base+0x8c>
   27540:	ldr	r4, [r3, #12]
   27544:	add	r0, sp, #24
   27548:	add	r3, sp, #16
   2754c:	str	r1, [r0, #-12]!
   27550:	stm	sp, {r2, r3}
   27554:	mov	r2, #4
   27558:	mov	r3, #0
   2755c:	mov	r6, r1
   27560:	bl	3e060 <cmetrohash64_1@@Base>
   27564:	ldr	r3, [sp, #16]
   27568:	sub	r4, r4, #1
   2756c:	and	r2, r4, r3
   27570:	ldr	r0, [r5, r2, lsl #2]
   27574:	cmp	r0, #0
   27578:	beq	275a4 <ptr_set_find@@Base+0x80>
   2757c:	add	r3, r3, #1
   27580:	cmp	r0, #2
   27584:	and	r2, r4, r3
   27588:	beq	27594 <ptr_set_find@@Base+0x70>
   2758c:	cmp	r6, r0
   27590:	beq	275a8 <ptr_set_find@@Base+0x84>
   27594:	ldr	r0, [r5, r2, lsl #2]
   27598:	add	r3, r3, #1
   2759c:	cmp	r0, #0
   275a0:	bne	27580 <ptr_set_find@@Base+0x5c>
   275a4:	mov	r0, #0
   275a8:	add	sp, sp, #24
   275ac:	pop	{r4, r5, r6, pc}
   275b0:	svccs	0x00693b52

000275b4 <ptr_set_find_item@@Base>:
   275b4:	push	{r4, r5, r6, lr}
   275b8:	sub	sp, sp, #24
   275bc:	ldr	r5, [r0]
   275c0:	cmp	r5, #0
   275c4:	beq	27634 <ptr_set_find_item@@Base+0x80>
   275c8:	mov	r3, r0
   275cc:	ldr	r2, [pc, #108]	; 27640 <ptr_set_find_item@@Base+0x8c>
   275d0:	ldr	r4, [r3, #12]
   275d4:	add	r0, sp, #24
   275d8:	add	r3, sp, #16
   275dc:	str	r1, [r0, #-12]!
   275e0:	stm	sp, {r2, r3}
   275e4:	mov	r2, #4
   275e8:	mov	r3, #0
   275ec:	mov	r6, r1
   275f0:	bl	3e060 <cmetrohash64_1@@Base>
   275f4:	ldr	r3, [sp, #16]
   275f8:	sub	r4, r4, #1
   275fc:	and	r2, r4, r3
   27600:	ldr	r0, [r5, r2, lsl #2]
   27604:	cmp	r0, #0
   27608:	beq	27634 <ptr_set_find_item@@Base+0x80>
   2760c:	add	r3, r3, #1
   27610:	cmp	r0, #2
   27614:	and	r2, r4, r3
   27618:	beq	27624 <ptr_set_find_item@@Base+0x70>
   2761c:	cmp	r6, r0
   27620:	beq	27638 <ptr_set_find_item@@Base+0x84>
   27624:	ldr	r0, [r5, r2, lsl #2]
   27628:	add	r3, r3, #1
   2762c:	cmp	r0, #0
   27630:	bne	27610 <ptr_set_find_item@@Base+0x5c>
   27634:	mov	r0, #0
   27638:	add	sp, sp, #24
   2763c:	pop	{r4, r5, r6, pc}
   27640:	svccs	0x00693b52

00027644 <ptr_set_remove@@Base>:
   27644:	push	{r4, r5, r6, r7, lr}
   27648:	sub	sp, sp, #28
   2764c:	ldr	r4, [r0]
   27650:	cmp	r4, #0
   27654:	beq	276cc <ptr_set_remove@@Base+0x88>
   27658:	ldr	r2, [pc, #148]	; 276f4 <ptr_set_remove@@Base+0xb0>
   2765c:	mov	r7, r0
   27660:	add	r3, sp, #16
   27664:	add	r0, sp, #24
   27668:	ldr	r5, [r7, #12]
   2766c:	str	r1, [r0, #-12]!
   27670:	stm	sp, {r2, r3}
   27674:	mov	r3, #0
   27678:	mov	r2, #4
   2767c:	mov	r6, r1
   27680:	bl	3e060 <cmetrohash64_1@@Base>
   27684:	ldr	r3, [sp, #16]
   27688:	sub	r5, r5, #1
   2768c:	and	ip, r5, r3
   27690:	ldr	r0, [r4, ip, lsl #2]
   27694:	add	ip, r4, ip, lsl #2
   27698:	cmp	r0, #0
   2769c:	beq	276cc <ptr_set_remove@@Base+0x88>
   276a0:	add	r3, r3, #1
   276a4:	cmp	r0, #2
   276a8:	and	r2, r5, r3
   276ac:	beq	276b8 <ptr_set_remove@@Base+0x74>
   276b0:	cmp	r6, r0
   276b4:	beq	276d8 <ptr_set_remove@@Base+0x94>
   276b8:	ldr	r0, [r4, r2, lsl #2]
   276bc:	add	r3, r3, #1
   276c0:	cmp	r0, #0
   276c4:	add	ip, r4, r2, lsl #2
   276c8:	bne	276a4 <ptr_set_remove@@Base+0x60>
   276cc:	mov	r0, #0
   276d0:	add	sp, sp, #28
   276d4:	pop	{r4, r5, r6, r7, pc}
   276d8:	ldr	r3, [r7, #8]
   276dc:	mov	r2, #2
   276e0:	sub	r3, r3, #1
   276e4:	str	r2, [ip]
   276e8:	str	r3, [r7, #8]
   276ec:	add	sp, sp, #28
   276f0:	pop	{r4, r5, r6, r7, pc}
   276f4:	svccs	0x00693b52

000276f8 <ptr_set_remove_item@@Base>:
   276f8:	push	{r4, r5, r6, r7, lr}
   276fc:	sub	sp, sp, #28
   27700:	ldr	r4, [r0]
   27704:	cmp	r4, #0
   27708:	beq	27780 <ptr_set_remove_item@@Base+0x88>
   2770c:	ldr	r2, [pc, #148]	; 277a8 <ptr_set_remove_item@@Base+0xb0>
   27710:	mov	r7, r0
   27714:	add	r3, sp, #16
   27718:	add	r0, sp, #24
   2771c:	ldr	r5, [r7, #12]
   27720:	str	r1, [r0, #-12]!
   27724:	stm	sp, {r2, r3}
   27728:	mov	r3, #0
   2772c:	mov	r2, #4
   27730:	mov	r6, r1
   27734:	bl	3e060 <cmetrohash64_1@@Base>
   27738:	ldr	r3, [sp, #16]
   2773c:	sub	r5, r5, #1
   27740:	and	ip, r5, r3
   27744:	ldr	r0, [r4, ip, lsl #2]
   27748:	add	ip, r4, ip, lsl #2
   2774c:	cmp	r0, #0
   27750:	beq	27780 <ptr_set_remove_item@@Base+0x88>
   27754:	add	r3, r3, #1
   27758:	cmp	r0, #2
   2775c:	and	r2, r5, r3
   27760:	beq	2776c <ptr_set_remove_item@@Base+0x74>
   27764:	cmp	r6, r0
   27768:	beq	2778c <ptr_set_remove_item@@Base+0x94>
   2776c:	ldr	r0, [r4, r2, lsl #2]
   27770:	add	r3, r3, #1
   27774:	cmp	r0, #0
   27778:	add	ip, r4, r2, lsl #2
   2777c:	bne	27758 <ptr_set_remove_item@@Base+0x60>
   27780:	mov	r0, #0
   27784:	add	sp, sp, #28
   27788:	pop	{r4, r5, r6, r7, pc}
   2778c:	ldr	r3, [r7, #8]
   27790:	mov	r2, #2
   27794:	sub	r3, r3, #1
   27798:	str	r2, [ip]
   2779c:	str	r3, [r7, #8]
   277a0:	add	sp, sp, #28
   277a4:	pop	{r4, r5, r6, r7, pc}
   277a8:	svccs	0x00693b52

000277ac <ptr_set_visit@@Base>:
   277ac:	ldr	r3, [r0, #12]
   277b0:	push	{r4, r5, r6, r7, r8, lr}
   277b4:	cmp	r3, #0
   277b8:	ldr	r5, [r0]
   277bc:	popeq	{r4, r5, r6, r7, r8, pc}
   277c0:	mov	r7, r2
   277c4:	mov	r6, r1
   277c8:	mov	r8, r0
   277cc:	sub	r5, r5, #4
   277d0:	mov	r4, #0
   277d4:	b	277e0 <ptr_set_visit@@Base+0x34>
   277d8:	cmp	r4, r3
   277dc:	bcs	27808 <ptr_set_visit@@Base+0x5c>
   277e0:	ldr	r1, [r5, #4]!
   277e4:	add	r4, r4, #1
   277e8:	cmp	r1, #0
   277ec:	cmpne	r1, #2
   277f0:	beq	277d8 <ptr_set_visit@@Base+0x2c>
   277f4:	mov	r0, r7
   277f8:	blx	r6
   277fc:	ldr	r3, [r8, #12]
   27800:	cmp	r4, r3
   27804:	bcc	277e0 <ptr_set_visit@@Base+0x34>
   27808:	pop	{r4, r5, r6, r7, r8, pc}
   2780c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27810:	sub	sp, sp, #36	; 0x24
   27814:	cmp	r3, #0
   27818:	str	r3, [sp, #12]
   2781c:	str	r1, [sp, #16]
   27820:	beq	27a10 <ptr_set_visit@@Base+0x264>
   27824:	cmp	r3, #2
   27828:	beq	279e0 <ptr_set_visit@@Base+0x234>
   2782c:	cmp	r3, #1
   27830:	beq	279cc <ptr_set_visit@@Base+0x220>
   27834:	ldr	r8, [r0, #12]
   27838:	mov	r3, #179	; 0xb3
   2783c:	ldr	r1, [r0, #8]
   27840:	mul	r3, r3, r8
   27844:	mov	r9, r2
   27848:	mov	sl, r0
   2784c:	cmp	r1, r3, lsr #8
   27850:	bcc	27868 <ptr_set_visit@@Base+0xbc>
   27854:	lsl	r1, r1, #1
   27858:	bl	27a48 <ptr_set_visit@@Base+0x29c>
   2785c:	cmp	r0, #0
   27860:	bne	279f4 <ptr_set_visit@@Base+0x248>
   27864:	ldr	r8, [sl, #12]
   27868:	ldr	r2, [pc, #436]	; 27a24 <ptr_set_visit@@Base+0x278>
   2786c:	add	r3, sp, #24
   27870:	ldr	r0, [sp, #16]
   27874:	stm	sp, {r2, r3}
   27878:	mov	r3, #0
   2787c:	mov	r2, r9
   27880:	ldr	r7, [sl]
   27884:	bl	3e060 <cmetrohash64_1@@Base>
   27888:	ldr	r3, [sp, #72]	; 0x48
   2788c:	ldr	r6, [sp, #24]
   27890:	sub	r3, r3, #2
   27894:	sub	r8, r8, #1
   27898:	cmp	r3, #1
   2789c:	and	r4, r8, r6
   278a0:	bls	27978 <ptr_set_visit@@Base+0x1cc>
   278a4:	ldr	r5, [r7, r4, lsl #2]
   278a8:	add	r4, r7, r4, lsl #2
   278ac:	cmp	r5, #0
   278b0:	moveq	fp, r4
   278b4:	beq	27954 <ptr_set_visit@@Base+0x1a8>
   278b8:	str	sl, [sp, #20]
   278bc:	add	r6, r6, #1
   278c0:	mov	sl, r5
   278c4:	mov	fp, #0
   278c8:	ldr	r5, [sp, #16]
   278cc:	b	278e8 <ptr_set_visit@@Base+0x13c>
   278d0:	and	r4, r8, r6
   278d4:	add	r6, r6, #1
   278d8:	ldr	sl, [r7, r4, lsl #2]
   278dc:	add	r4, r7, r4, lsl #2
   278e0:	cmp	sl, #0
   278e4:	beq	27948 <ptr_set_visit@@Base+0x19c>
   278e8:	cmp	sl, #2
   278ec:	beq	2793c <ptr_set_visit@@Base+0x190>
   278f0:	ldr	r2, [sl, #4]
   278f4:	ldr	r1, [r2, #4]
   278f8:	cmp	r9, r1
   278fc:	bne	278d0 <ptr_set_visit@@Base+0x124>
   27900:	ldr	r1, [r2]
   27904:	mov	r0, r5
   27908:	mov	r2, r9
   2790c:	bl	13ef4 <memcmp@plt>
   27910:	cmp	r0, #0
   27914:	bne	278d0 <ptr_set_visit@@Base+0x124>
   27918:	ldr	r3, [sp, #72]	; 0x48
   2791c:	mov	r5, sl
   27920:	cmp	r3, #0
   27924:	bne	2796c <ptr_set_visit@@Base+0x1c0>
   27928:	ldr	r3, [sp, #12]
   2792c:	mov	r0, r5
   27930:	str	r3, [r4]
   27934:	add	sp, sp, #36	; 0x24
   27938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2793c:	cmp	fp, #0
   27940:	moveq	fp, r4
   27944:	b	278d0 <ptr_set_visit@@Base+0x124>
   27948:	cmp	fp, #0
   2794c:	ldr	sl, [sp, #20]
   27950:	moveq	fp, r4
   27954:	ldr	r2, [sl, #8]
   27958:	ldr	r3, [sp, #12]
   2795c:	mov	r5, #0
   27960:	add	r2, r2, #1
   27964:	str	r2, [sl, #8]
   27968:	str	r3, [fp]
   2796c:	mov	r0, r5
   27970:	add	sp, sp, #36	; 0x24
   27974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27978:	ldr	r2, [r7, r4, lsl #2]
   2797c:	ldr	r3, [sl, #8]
   27980:	cmp	r2, #0
   27984:	cmpne	r2, #2
   27988:	add	r3, r3, #1
   2798c:	str	r3, [sl, #8]
   27990:	add	r4, r7, r4, lsl #2
   27994:	beq	279bc <ptr_set_visit@@Base+0x210>
   27998:	add	r6, r6, #1
   2799c:	and	r3, r8, r6
   279a0:	add	r6, r6, #1
   279a4:	ldr	r2, [r7, r3, lsl #2]
   279a8:	add	r3, r7, r3, lsl #2
   279ac:	cmp	r2, #0
   279b0:	cmpne	r2, #2
   279b4:	bne	2799c <ptr_set_visit@@Base+0x1f0>
   279b8:	mov	r4, r3
   279bc:	ldr	r3, [sp, #12]
   279c0:	mov	r5, #0
   279c4:	str	r3, [r4]
   279c8:	b	2796c <ptr_set_visit@@Base+0x1c0>
   279cc:	ldr	r3, [pc, #84]	; 27a28 <ptr_set_visit@@Base+0x27c>
   279d0:	mov	r2, #116	; 0x74
   279d4:	ldr	r1, [pc, #80]	; 27a2c <ptr_set_visit@@Base+0x280>
   279d8:	ldr	r0, [pc, #80]	; 27a30 <ptr_set_visit@@Base+0x284>
   279dc:	bl	14038 <__assert_fail@plt>
   279e0:	ldr	r3, [pc, #64]	; 27a28 <ptr_set_visit@@Base+0x27c>
   279e4:	mov	r2, #115	; 0x73
   279e8:	ldr	r1, [pc, #60]	; 27a2c <ptr_set_visit@@Base+0x280>
   279ec:	ldr	r0, [pc, #64]	; 27a34 <ptr_set_visit@@Base+0x288>
   279f0:	bl	14038 <__assert_fail@plt>
   279f4:	ldr	r3, [pc, #60]	; 27a38 <ptr_set_visit@@Base+0x28c>
   279f8:	ldr	r2, [pc, #60]	; 27a3c <ptr_set_visit@@Base+0x290>
   279fc:	ldr	r1, [pc, #60]	; 27a40 <ptr_set_visit@@Base+0x294>
   27a00:	ldr	r0, [r3]
   27a04:	bl	13f84 <fprintf@plt>
   27a08:	mov	r0, #1
   27a0c:	bl	13f6c <exit@plt>
   27a10:	ldr	r3, [pc, #16]	; 27a28 <ptr_set_visit@@Base+0x27c>
   27a14:	mov	r2, #114	; 0x72
   27a18:	ldr	r1, [pc, #12]	; 27a2c <ptr_set_visit@@Base+0x280>
   27a1c:	ldr	r0, [pc, #32]	; 27a44 <ptr_set_visit@@Base+0x298>
   27a20:	bl	14038 <__assert_fail@plt>
   27a24:	svccs	0x00693b52
   27a28:			; <UNDEFINED> instruction: 0x000589b8
   27a2c:			; <UNDEFINED> instruction: 0x000588bc
   27a30:	andeq	r8, r5, ip, lsr r9
   27a34:	andeq	r8, r5, r4, lsr #18
   27a38:	andeq	sp, r6, r8, lsr #1
   27a3c:	andeq	r8, r5, r4, asr r9
   27a40:	andeq	r8, r5, r8, lsl #19
   27a44:	andeq	r8, r5, ip, lsl #18
   27a48:	ldr	r3, [r0, #8]
   27a4c:	push	{r4, r5, r6, r7, r8, lr}
   27a50:	cmp	r1, r3
   27a54:	movcc	r1, r3
   27a58:	cmp	r1, #2
   27a5c:	sub	sp, sp, #24
   27a60:	mov	r6, r0
   27a64:	ldr	r7, [r0]
   27a68:	mov	r5, #4
   27a6c:	bls	27a84 <ptr_set_visit@@Base+0x2d8>
   27a70:	mov	r2, #179	; 0xb3
   27a74:	lsl	r5, r5, #1
   27a78:	mul	r3, r2, r5
   27a7c:	cmp	r1, r3, lsr #8
   27a80:	bhi	27a74 <ptr_set_visit@@Base+0x2c8>
   27a84:	mov	r1, #4
   27a88:	mov	r0, r5
   27a8c:	bl	13ea0 <calloc@plt>
   27a90:	cmp	r0, #0
   27a94:	str	r0, [sp, #8]
   27a98:	beq	27b48 <ptr_set_visit@@Base+0x39c>
   27a9c:	ldr	r2, [r6, #12]
   27aa0:	mov	r4, #0
   27aa4:	cmp	r2, r4
   27aa8:	str	r5, [sp, #20]
   27aac:	str	r4, [sp, #12]
   27ab0:	str	r4, [sp, #16]
   27ab4:	beq	27b3c <ptr_set_visit@@Base+0x390>
   27ab8:	sub	r5, r7, #4
   27abc:	mov	r8, #3
   27ac0:	add	r7, sp, #8
   27ac4:	b	27ad0 <ptr_set_visit@@Base+0x324>
   27ac8:	cmp	r4, r2
   27acc:	bcs	27b04 <ptr_set_visit@@Base+0x358>
   27ad0:	ldr	r3, [r5, #4]!
   27ad4:	add	r4, r4, #1
   27ad8:	cmp	r3, #0
   27adc:	cmpne	r3, #2
   27ae0:	beq	27ac8 <ptr_set_visit@@Base+0x31c>
   27ae4:	ldr	r1, [r3, #4]
   27ae8:	mov	r0, r7
   27aec:	ldm	r1, {r1, r2}
   27af0:	str	r8, [sp]
   27af4:	bl	2780c <ptr_set_visit@@Base+0x60>
   27af8:	ldr	r2, [r6, #12]
   27afc:	cmp	r4, r2
   27b00:	bcc	27ad0 <ptr_set_visit@@Base+0x324>
   27b04:	ldr	r0, [r6]
   27b08:	cmp	r0, #0
   27b0c:	beq	27b14 <ptr_set_visit@@Base+0x368>
   27b10:	bl	13ed0 <free@plt>
   27b14:	mov	ip, r7
   27b18:	mov	lr, #0
   27b1c:	ldm	ip!, {r0, r1, r2, r3}
   27b20:	str	r0, [r6]
   27b24:	str	r1, [r6, #4]
   27b28:	str	r2, [r6, #8]
   27b2c:	str	r3, [r6, #12]
   27b30:	mov	r0, lr
   27b34:	add	sp, sp, #24
   27b38:	pop	{r4, r5, r6, r7, r8, pc}
   27b3c:	mov	r0, r7
   27b40:	add	r7, sp, #8
   27b44:	b	27b08 <ptr_set_visit@@Base+0x35c>
   27b48:	mvn	lr, #0
   27b4c:	b	27b30 <ptr_set_visit@@Base+0x384>

00027b50 <fb_symbol_table_clear@@Base>:
   27b50:	push	{r4, lr}
   27b54:	mov	r4, r0
   27b58:	ldr	r0, [r0]
   27b5c:	cmp	r0, #0
   27b60:	beq	27b68 <fb_symbol_table_clear@@Base+0x18>
   27b64:	bl	13ed0 <free@plt>
   27b68:	mov	r3, #0
   27b6c:	str	r3, [r4]
   27b70:	str	r3, [r4, #4]
   27b74:	str	r3, [r4, #8]
   27b78:	str	r3, [r4, #12]
   27b7c:	pop	{r4, pc}

00027b80 <fb_symbol_table_destroy@@Base>:
   27b80:	push	{r4, r5, r6, r7, r8, lr}
   27b84:	subs	r7, r1, #0
   27b88:	mov	r6, r0
   27b8c:	beq	27be0 <fb_symbol_table_destroy@@Base+0x60>
   27b90:	ldr	r3, [r0, #12]
   27b94:	ldr	r0, [r0]
   27b98:	cmp	r3, #0
   27b9c:	beq	27be4 <fb_symbol_table_destroy@@Base+0x64>
   27ba0:	mov	r8, r2
   27ba4:	sub	r5, r0, #4
   27ba8:	mov	r4, #0
   27bac:	b	27bb8 <fb_symbol_table_destroy@@Base+0x38>
   27bb0:	cmp	r4, r3
   27bb4:	bcs	27be0 <fb_symbol_table_destroy@@Base+0x60>
   27bb8:	ldr	r1, [r5, #4]!
   27bbc:	add	r4, r4, #1
   27bc0:	cmp	r1, #0
   27bc4:	cmpne	r1, #2
   27bc8:	beq	27bb0 <fb_symbol_table_destroy@@Base+0x30>
   27bcc:	mov	r0, r8
   27bd0:	blx	r7
   27bd4:	ldr	r3, [r6, #12]
   27bd8:	cmp	r4, r3
   27bdc:	bcc	27bb8 <fb_symbol_table_destroy@@Base+0x38>
   27be0:	ldr	r0, [r6]
   27be4:	cmp	r0, #0
   27be8:	beq	27bf0 <fb_symbol_table_destroy@@Base+0x70>
   27bec:	bl	13ed0 <free@plt>
   27bf0:	mov	r3, #0
   27bf4:	str	r3, [r6]
   27bf8:	str	r3, [r6, #4]
   27bfc:	str	r3, [r6, #8]
   27c00:	str	r3, [r6, #12]
   27c04:	pop	{r4, r5, r6, r7, r8, pc}

00027c08 <fb_symbol_table_init@@Base>:
   27c08:	cmp	r1, #2
   27c0c:	push	{r4, r5, r6, lr}
   27c10:	mov	r4, #4
   27c14:	mov	r5, r0
   27c18:	bls	27c30 <fb_symbol_table_init@@Base+0x28>
   27c1c:	mov	r2, #179	; 0xb3
   27c20:	lsl	r4, r4, #1
   27c24:	mul	r3, r2, r4
   27c28:	cmp	r1, r3, lsr #8
   27c2c:	bhi	27c20 <fb_symbol_table_init@@Base+0x18>
   27c30:	mov	r1, #4
   27c34:	mov	r0, r4
   27c38:	bl	13ea0 <calloc@plt>
   27c3c:	cmp	r0, #0
   27c40:	str	r0, [r5]
   27c44:	movne	r0, #0
   27c48:	strne	r4, [r5, #12]
   27c4c:	strne	r0, [r5, #4]
   27c50:	strne	r0, [r5, #8]
   27c54:	mvneq	r0, #0
   27c58:	pop	{r4, r5, r6, pc}

00027c5c <fb_symbol_table_resize@@Base>:
   27c5c:	b	27a48 <ptr_set_visit@@Base+0x29c>

00027c60 <fb_symbol_table_insert@@Base>:
   27c60:	b	2780c <ptr_set_visit@@Base+0x60>

00027c64 <fb_symbol_table_insert_item@@Base>:
   27c64:	mov	r3, r1
   27c68:	ldr	r1, [r1, #4]
   27c6c:	push	{lr}		; (str lr, [sp, #-4]!)
   27c70:	sub	sp, sp, #12
   27c74:	ldm	r1, {r1, ip}
   27c78:	str	r2, [sp]
   27c7c:	mov	r2, ip
   27c80:	bl	2780c <ptr_set_visit@@Base+0x60>
   27c84:	add	sp, sp, #12
   27c88:	pop	{pc}		; (ldr pc, [sp], #4)

00027c8c <fb_symbol_table_find@@Base>:
   27c8c:	push	{r4, r5, r6, r7, r8, r9, lr}
   27c90:	sub	sp, sp, #20
   27c94:	ldr	r8, [r0]
   27c98:	cmp	r8, #0
   27c9c:	beq	27d34 <fb_symbol_table_find@@Base+0xa8>
   27ca0:	mov	r9, r1
   27ca4:	ldr	r1, [pc, #152]	; 27d44 <fb_symbol_table_find@@Base+0xb8>
   27ca8:	add	r3, sp, #8
   27cac:	ldr	r7, [r0, #12]
   27cb0:	stm	sp, {r1, r3}
   27cb4:	mov	r0, r9
   27cb8:	mov	r3, #0
   27cbc:	mov	r6, r2
   27cc0:	bl	3e060 <cmetrohash64_1@@Base>
   27cc4:	ldr	r5, [sp, #8]
   27cc8:	sub	r7, r7, #1
   27ccc:	and	r3, r7, r5
   27cd0:	ldr	r4, [r8, r3, lsl #2]
   27cd4:	cmp	r4, #0
   27cd8:	beq	27d34 <fb_symbol_table_find@@Base+0xa8>
   27cdc:	add	r5, r5, #1
   27ce0:	b	27cf8 <fb_symbol_table_find@@Base+0x6c>
   27ce4:	and	r3, r7, r5
   27ce8:	add	r5, r5, #1
   27cec:	ldr	r4, [r8, r3, lsl #2]
   27cf0:	cmp	r4, #0
   27cf4:	beq	27d34 <fb_symbol_table_find@@Base+0xa8>
   27cf8:	cmp	r4, #2
   27cfc:	beq	27ce4 <fb_symbol_table_find@@Base+0x58>
   27d00:	ldr	r3, [r4, #4]
   27d04:	ldr	r2, [r3, #4]
   27d08:	cmp	r6, r2
   27d0c:	bne	27ce4 <fb_symbol_table_find@@Base+0x58>
   27d10:	ldr	r1, [r3]
   27d14:	mov	r2, r6
   27d18:	mov	r0, r9
   27d1c:	bl	13ef4 <memcmp@plt>
   27d20:	cmp	r0, #0
   27d24:	bne	27ce4 <fb_symbol_table_find@@Base+0x58>
   27d28:	mov	r0, r4
   27d2c:	add	sp, sp, #20
   27d30:	pop	{r4, r5, r6, r7, r8, r9, pc}
   27d34:	mov	r4, #0
   27d38:	mov	r0, r4
   27d3c:	add	sp, sp, #20
   27d40:	pop	{r4, r5, r6, r7, r8, r9, pc}
   27d44:	svccs	0x00693b52

00027d48 <fb_symbol_table_find_item@@Base>:
   27d48:	push	{r4, r5, r6, r7, r8, r9, lr}
   27d4c:	sub	sp, sp, #20
   27d50:	ldr	r3, [r1, #4]
   27d54:	ldr	r8, [r0]
   27d58:	cmp	r8, #0
   27d5c:	ldr	r9, [r3]
   27d60:	ldr	r7, [r3, #4]
   27d64:	beq	27df8 <fb_symbol_table_find_item@@Base+0xb0>
   27d68:	ldr	r2, [pc, #152]	; 27e08 <fb_symbol_table_find_item@@Base+0xc0>
   27d6c:	add	r3, sp, #8
   27d70:	ldr	r6, [r0, #12]
   27d74:	stm	sp, {r2, r3}
   27d78:	mov	r0, r9
   27d7c:	mov	r3, #0
   27d80:	mov	r2, r7
   27d84:	bl	3e060 <cmetrohash64_1@@Base>
   27d88:	ldr	r5, [sp, #8]
   27d8c:	sub	r6, r6, #1
   27d90:	and	r3, r6, r5
   27d94:	ldr	r4, [r8, r3, lsl #2]
   27d98:	cmp	r4, #0
   27d9c:	beq	27df8 <fb_symbol_table_find_item@@Base+0xb0>
   27da0:	add	r5, r5, #1
   27da4:	b	27dbc <fb_symbol_table_find_item@@Base+0x74>
   27da8:	and	r3, r6, r5
   27dac:	add	r5, r5, #1
   27db0:	ldr	r4, [r8, r3, lsl #2]
   27db4:	cmp	r4, #0
   27db8:	beq	27df8 <fb_symbol_table_find_item@@Base+0xb0>
   27dbc:	cmp	r4, #2
   27dc0:	beq	27da8 <fb_symbol_table_find_item@@Base+0x60>
   27dc4:	ldr	r3, [r4, #4]
   27dc8:	ldr	r2, [r3, #4]
   27dcc:	cmp	r7, r2
   27dd0:	bne	27da8 <fb_symbol_table_find_item@@Base+0x60>
   27dd4:	ldr	r1, [r3]
   27dd8:	mov	r2, r7
   27ddc:	mov	r0, r9
   27de0:	bl	13ef4 <memcmp@plt>
   27de4:	cmp	r0, #0
   27de8:	bne	27da8 <fb_symbol_table_find_item@@Base+0x60>
   27dec:	mov	r0, r4
   27df0:	add	sp, sp, #20
   27df4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   27df8:	mov	r4, #0
   27dfc:	mov	r0, r4
   27e00:	add	sp, sp, #20
   27e04:	pop	{r4, r5, r6, r7, r8, r9, pc}
   27e08:	svccs	0x00693b52

00027e0c <fb_symbol_table_remove@@Base>:
   27e0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27e10:	sub	sp, sp, #20
   27e14:	ldr	r5, [r0]
   27e18:	cmp	r5, #0
   27e1c:	beq	27ed4 <fb_symbol_table_remove@@Base+0xc8>
   27e20:	mov	r8, r1
   27e24:	ldr	r1, [pc, #184]	; 27ee4 <fb_symbol_table_remove@@Base+0xd8>
   27e28:	add	r3, sp, #8
   27e2c:	ldr	r7, [r0, #12]
   27e30:	mov	r9, r0
   27e34:	stm	sp, {r1, r3}
   27e38:	mov	r0, r8
   27e3c:	mov	r3, #0
   27e40:	mov	r6, r2
   27e44:	bl	3e060 <cmetrohash64_1@@Base>
   27e48:	ldr	sl, [sp, #8]
   27e4c:	sub	r7, r7, #1
   27e50:	and	r3, r7, sl
   27e54:	ldr	fp, [r5, r3, lsl #2]
   27e58:	add	r4, r5, r3, lsl #2
   27e5c:	cmp	fp, #0
   27e60:	beq	27ed4 <fb_symbol_table_remove@@Base+0xc8>
   27e64:	add	sl, sl, #1
   27e68:	b	27e84 <fb_symbol_table_remove@@Base+0x78>
   27e6c:	and	r3, r7, sl
   27e70:	add	sl, sl, #1
   27e74:	ldr	fp, [r5, r3, lsl #2]
   27e78:	add	r4, r5, r3, lsl #2
   27e7c:	cmp	fp, #0
   27e80:	beq	27ed4 <fb_symbol_table_remove@@Base+0xc8>
   27e84:	cmp	fp, #2
   27e88:	beq	27e6c <fb_symbol_table_remove@@Base+0x60>
   27e8c:	ldr	r3, [fp, #4]
   27e90:	ldr	r2, [r3, #4]
   27e94:	cmp	r6, r2
   27e98:	bne	27e6c <fb_symbol_table_remove@@Base+0x60>
   27e9c:	ldr	r1, [r3]
   27ea0:	mov	r2, r6
   27ea4:	mov	r0, r8
   27ea8:	bl	13ef4 <memcmp@plt>
   27eac:	cmp	r0, #0
   27eb0:	bne	27e6c <fb_symbol_table_remove@@Base+0x60>
   27eb4:	ldr	r3, [r9, #8]
   27eb8:	mov	r2, #2
   27ebc:	sub	r3, r3, #1
   27ec0:	str	r2, [r4]
   27ec4:	mov	r0, fp
   27ec8:	str	r3, [r9, #8]
   27ecc:	add	sp, sp, #20
   27ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ed4:	mov	fp, #0
   27ed8:	mov	r0, fp
   27edc:	add	sp, sp, #20
   27ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ee4:	svccs	0x00693b52

00027ee8 <fb_symbol_table_remove_item@@Base>:
   27ee8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27eec:	sub	sp, sp, #20
   27ef0:	ldr	r3, [r1, #4]
   27ef4:	ldr	r5, [r0]
   27ef8:	cmp	r5, #0
   27efc:	ldr	r9, [r3]
   27f00:	ldr	r7, [r3, #4]
   27f04:	beq	27fb8 <fb_symbol_table_remove_item@@Base+0xd0>
   27f08:	ldr	r2, [pc, #184]	; 27fc8 <fb_symbol_table_remove_item@@Base+0xe0>
   27f0c:	add	r3, sp, #8
   27f10:	ldr	r6, [r0, #12]
   27f14:	mov	r8, r0
   27f18:	stm	sp, {r2, r3}
   27f1c:	mov	r0, r9
   27f20:	mov	r3, #0
   27f24:	mov	r2, r7
   27f28:	bl	3e060 <cmetrohash64_1@@Base>
   27f2c:	ldr	sl, [sp, #8]
   27f30:	sub	r6, r6, #1
   27f34:	and	r3, r6, sl
   27f38:	ldr	fp, [r5, r3, lsl #2]
   27f3c:	add	r4, r5, r3, lsl #2
   27f40:	cmp	fp, #0
   27f44:	beq	27fb8 <fb_symbol_table_remove_item@@Base+0xd0>
   27f48:	add	sl, sl, #1
   27f4c:	b	27f68 <fb_symbol_table_remove_item@@Base+0x80>
   27f50:	and	r3, r6, sl
   27f54:	add	sl, sl, #1
   27f58:	ldr	fp, [r5, r3, lsl #2]
   27f5c:	add	r4, r5, r3, lsl #2
   27f60:	cmp	fp, #0
   27f64:	beq	27fb8 <fb_symbol_table_remove_item@@Base+0xd0>
   27f68:	cmp	fp, #2
   27f6c:	beq	27f50 <fb_symbol_table_remove_item@@Base+0x68>
   27f70:	ldr	r3, [fp, #4]
   27f74:	ldr	r2, [r3, #4]
   27f78:	cmp	r7, r2
   27f7c:	bne	27f50 <fb_symbol_table_remove_item@@Base+0x68>
   27f80:	ldr	r1, [r3]
   27f84:	mov	r2, r7
   27f88:	mov	r0, r9
   27f8c:	bl	13ef4 <memcmp@plt>
   27f90:	cmp	r0, #0
   27f94:	bne	27f50 <fb_symbol_table_remove_item@@Base+0x68>
   27f98:	ldr	r3, [r8, #8]
   27f9c:	mov	r2, #2
   27fa0:	sub	r3, r3, #1
   27fa4:	str	r2, [r4]
   27fa8:	mov	r0, fp
   27fac:	str	r3, [r8, #8]
   27fb0:	add	sp, sp, #20
   27fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fb8:	mov	fp, #0
   27fbc:	mov	r0, fp
   27fc0:	add	sp, sp, #20
   27fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fc8:	svccs	0x00693b52

00027fcc <fb_symbol_table_visit@@Base>:
   27fcc:	ldr	r3, [r0, #12]
   27fd0:	push	{r4, r5, r6, r7, r8, lr}
   27fd4:	cmp	r3, #0
   27fd8:	ldr	r5, [r0]
   27fdc:	popeq	{r4, r5, r6, r7, r8, pc}
   27fe0:	mov	r7, r2
   27fe4:	mov	r6, r1
   27fe8:	mov	r8, r0
   27fec:	sub	r5, r5, #4
   27ff0:	mov	r4, #0
   27ff4:	b	28000 <fb_symbol_table_visit@@Base+0x34>
   27ff8:	cmp	r4, r3
   27ffc:	bcs	28028 <fb_symbol_table_visit@@Base+0x5c>
   28000:	ldr	r1, [r5, #4]!
   28004:	add	r4, r4, #1
   28008:	cmp	r1, #0
   2800c:	cmpne	r1, #2
   28010:	beq	27ff8 <fb_symbol_table_visit@@Base+0x2c>
   28014:	mov	r0, r7
   28018:	blx	r6
   2801c:	ldr	r3, [r8, #12]
   28020:	cmp	r4, r3
   28024:	bcc	28000 <fb_symbol_table_visit@@Base+0x34>
   28028:	pop	{r4, r5, r6, r7, r8, pc}
   2802c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28030:	sub	sp, sp, #20
   28034:	cmp	r2, #0
   28038:	str	r2, [sp, #4]
   2803c:	str	r3, [sp, #12]
   28040:	str	r0, [sp, #8]
   28044:	beq	2830c <fb_symbol_table_visit@@Base+0x340>
   28048:	cmp	r2, #2
   2804c:	beq	282f8 <fb_symbol_table_visit@@Base+0x32c>
   28050:	cmp	r2, #1
   28054:	beq	282e4 <fb_symbol_table_visit@@Base+0x318>
   28058:	ldr	sl, [r0, #12]
   2805c:	mov	r3, #179	; 0xb3
   28060:	mov	r8, r1
   28064:	mul	r3, r3, sl
   28068:	ldr	r1, [r0, #8]
   2806c:	mov	r4, r0
   28070:	cmp	r1, r3, lsr #8
   28074:	bcc	2808c <fb_symbol_table_visit@@Base+0xc0>
   28078:	lsl	r1, r1, #1
   2807c:	bl	2834c <fb_symbol_table_visit@@Base+0x380>
   28080:	cmp	r0, #0
   28084:	bne	282c8 <fb_symbol_table_visit@@Base+0x2fc>
   28088:	ldr	sl, [r4, #12]
   2808c:	sub	r3, sl, #1
   28090:	str	r3, [sp]
   28094:	ldr	r3, [sp, #8]
   28098:	cmp	r8, #0
   2809c:	ldr	r9, [r3]
   280a0:	beq	28264 <fb_symbol_table_visit@@Base+0x298>
   280a4:	ldr	r6, [pc, #628]	; 28320 <fb_symbol_table_visit@@Base+0x354>
   280a8:	ldr	r5, [pc, #628]	; 28324 <fb_symbol_table_visit@@Base+0x358>
   280ac:	ldr	lr, [pc, #628]	; 28328 <fb_symbol_table_visit@@Base+0x35c>
   280b0:	mov	ip, r8
   280b4:	mov	r4, #0
   280b8:	ldr	r2, [ip, #4]
   280bc:	ldm	r2, {r0, r3}
   280c0:	subs	r3, r3, #1
   280c4:	beq	28228 <fb_symbol_table_visit@@Base+0x25c>
   280c8:	ldrb	r2, [r0]
   280cc:	add	r1, r0, #1
   280d0:	cmp	r2, #0
   280d4:	beq	28228 <fb_symbol_table_visit@@Base+0x25c>
   280d8:	add	r0, r0, r3
   280dc:	mov	r3, r6
   280e0:	b	280f0 <fb_symbol_table_visit@@Base+0x124>
   280e4:	ldrb	r2, [r1], #1
   280e8:	cmp	r2, #0
   280ec:	beq	28100 <fb_symbol_table_visit@@Base+0x134>
   280f0:	add	r3, r3, r3, lsl #5
   280f4:	cmp	r1, r0
   280f8:	eor	r3, r3, r2
   280fc:	bne	280e4 <fb_symbol_table_visit@@Base+0x118>
   28100:	eor	r4, r4, r5
   28104:	ldr	ip, [ip]
   28108:	eor	r3, r3, r4
   2810c:	cmp	ip, #0
   28110:	mul	r4, lr, r3
   28114:	bne	280b8 <fb_symbol_table_visit@@Base+0xec>
   28118:	ldr	r3, [sp]
   2811c:	and	r6, r3, r4
   28120:	lsl	r6, r6, #2
   28124:	ldr	r3, [sp, #12]
   28128:	sub	r3, r3, #2
   2812c:	cmp	r3, #1
   28130:	bls	28270 <fb_symbol_table_visit@@Base+0x2a4>
   28134:	ldr	r7, [r9, r6]
   28138:	add	r6, r9, r6
   2813c:	cmp	r7, #0
   28140:	moveq	fp, r6
   28144:	beq	28200 <fb_symbol_table_visit@@Base+0x234>
   28148:	add	r4, r4, #1
   2814c:	mov	fp, #0
   28150:	cmp	r7, #2
   28154:	beq	28230 <fb_symbol_table_visit@@Base+0x264>
   28158:	ldr	r5, [r7]
   2815c:	adds	r1, r8, #0
   28160:	movne	r1, #1
   28164:	adds	r2, r5, #0
   28168:	movne	r2, #1
   2816c:	tst	r2, r1
   28170:	beq	2823c <fb_symbol_table_visit@@Base+0x270>
   28174:	ldr	r0, [r5, #4]
   28178:	ldr	r1, [r8, #4]
   2817c:	ldr	r2, [r0, #4]
   28180:	ldr	r3, [r1, #4]
   28184:	cmp	r3, r2
   28188:	bne	281dc <fb_symbol_table_visit@@Base+0x210>
   2818c:	mov	sl, r8
   28190:	ldr	r1, [r1]
   28194:	ldr	r0, [r0]
   28198:	bl	14020 <strncmp@plt>
   2819c:	cmp	r0, #0
   281a0:	bne	281dc <fb_symbol_table_visit@@Base+0x210>
   281a4:	ldr	r5, [r5]
   281a8:	ldr	sl, [sl]
   281ac:	adds	r2, r5, #0
   281b0:	movne	r2, #1
   281b4:	adds	r1, sl, #0
   281b8:	movne	r1, #1
   281bc:	tst	r2, r1
   281c0:	beq	2823c <fb_symbol_table_visit@@Base+0x270>
   281c4:	ldr	r0, [r5, #4]
   281c8:	ldr	r1, [sl, #4]
   281cc:	ldr	r2, [r0, #4]
   281d0:	ldr	r3, [r1, #4]
   281d4:	cmp	r2, r3
   281d8:	beq	28190 <fb_symbol_table_visit@@Base+0x1c4>
   281dc:	ldr	r3, [sp]
   281e0:	and	r6, r3, r4
   281e4:	add	r4, r4, #1
   281e8:	ldr	r7, [r9, r6, lsl #2]
   281ec:	add	r6, r9, r6, lsl #2
   281f0:	cmp	r7, #0
   281f4:	bne	28150 <fb_symbol_table_visit@@Base+0x184>
   281f8:	cmp	fp, #0
   281fc:	moveq	fp, r6
   28200:	ldr	r2, [sp, #8]
   28204:	mov	r7, #0
   28208:	ldr	r3, [r2, #8]
   2820c:	add	r3, r3, #1
   28210:	str	r3, [r2, #8]
   28214:	ldr	r3, [sp, #4]
   28218:	str	r3, [fp]
   2821c:	mov	r0, r7
   28220:	add	sp, sp, #20
   28224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28228:	mov	r3, r6
   2822c:	b	28100 <fb_symbol_table_visit@@Base+0x134>
   28230:	cmp	fp, #0
   28234:	moveq	fp, r6
   28238:	b	281dc <fb_symbol_table_visit@@Base+0x210>
   2823c:	orrs	r3, r1, r2
   28240:	bne	281dc <fb_symbol_table_visit@@Base+0x210>
   28244:	ldr	r3, [sp, #12]
   28248:	cmp	r3, #0
   2824c:	bne	2821c <fb_symbol_table_visit@@Base+0x250>
   28250:	ldr	r3, [sp, #4]
   28254:	mov	r0, r7
   28258:	str	r3, [r6]
   2825c:	add	sp, sp, #20
   28260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28264:	mov	r6, r8
   28268:	mov	r4, r8
   2826c:	b	28124 <fb_symbol_table_visit@@Base+0x158>
   28270:	ldr	r1, [sp, #8]
   28274:	ldr	r2, [r9, r6]
   28278:	add	r6, r9, r6
   2827c:	ldr	r3, [r1, #8]
   28280:	cmp	r2, #0
   28284:	cmpne	r2, #2
   28288:	add	r3, r3, #1
   2828c:	str	r3, [r1, #8]
   28290:	beq	282b8 <fb_symbol_table_visit@@Base+0x2ec>
   28294:	ldr	r1, [sp]
   28298:	add	r4, r4, #1
   2829c:	and	r3, r1, r4
   282a0:	add	r4, r4, #1
   282a4:	ldr	r2, [r9, r3, lsl #2]
   282a8:	add	r6, r9, r3, lsl #2
   282ac:	cmp	r2, #0
   282b0:	cmpne	r2, #2
   282b4:	bne	2829c <fb_symbol_table_visit@@Base+0x2d0>
   282b8:	ldr	r3, [sp, #4]
   282bc:	mov	r7, #0
   282c0:	str	r3, [r6]
   282c4:	b	2821c <fb_symbol_table_visit@@Base+0x250>
   282c8:	ldr	r3, [pc, #92]	; 2832c <fb_symbol_table_visit@@Base+0x360>
   282cc:	ldr	r2, [pc, #92]	; 28330 <fb_symbol_table_visit@@Base+0x364>
   282d0:	ldr	r1, [pc, #92]	; 28334 <fb_symbol_table_visit@@Base+0x368>
   282d4:	ldr	r0, [r3]
   282d8:	bl	13f84 <fprintf@plt>
   282dc:	mov	r0, #1
   282e0:	bl	13f6c <exit@plt>
   282e4:	ldr	r3, [pc, #76]	; 28338 <fb_symbol_table_visit@@Base+0x36c>
   282e8:	mov	r2, #116	; 0x74
   282ec:	ldr	r1, [pc, #72]	; 2833c <fb_symbol_table_visit@@Base+0x370>
   282f0:	ldr	r0, [pc, #72]	; 28340 <fb_symbol_table_visit@@Base+0x374>
   282f4:	bl	14038 <__assert_fail@plt>
   282f8:	ldr	r3, [pc, #56]	; 28338 <fb_symbol_table_visit@@Base+0x36c>
   282fc:	mov	r2, #115	; 0x73
   28300:	ldr	r1, [pc, #52]	; 2833c <fb_symbol_table_visit@@Base+0x370>
   28304:	ldr	r0, [pc, #56]	; 28344 <fb_symbol_table_visit@@Base+0x378>
   28308:	bl	14038 <__assert_fail@plt>
   2830c:	ldr	r3, [pc, #36]	; 28338 <fb_symbol_table_visit@@Base+0x36c>
   28310:	mov	r2, #114	; 0x72
   28314:	ldr	r1, [pc, #32]	; 2833c <fb_symbol_table_visit@@Base+0x370>
   28318:	ldr	r0, [pc, #40]	; 28348 <fb_symbol_table_visit@@Base+0x37c>
   2831c:	bl	14038 <__assert_fail@plt>
   28320:	svccs	0x00692e57
   28324:	svccs	0x00693b52
   28328:			; <UNDEFINED> instruction: 0x9e3779b1
   2832c:	andeq	sp, r6, r8, lsr #1
   28330:	andeq	r8, r5, r4, asr r9
   28334:	andeq	r8, r5, r8, lsl #19
   28338:	ldrdeq	r8, [r5], -r0
   2833c:			; <UNDEFINED> instruction: 0x000588bc
   28340:	andeq	r8, r5, ip, lsr r9
   28344:	andeq	r8, r5, r4, lsr #18
   28348:	andeq	r8, r5, ip, lsl #18
   2834c:	ldr	r3, [r0, #8]
   28350:	push	{r4, r5, r6, r7, r8, lr}
   28354:	cmp	r1, r3
   28358:	movcc	r1, r3
   2835c:	cmp	r1, #2
   28360:	sub	sp, sp, #16
   28364:	mov	r7, r0
   28368:	ldr	r6, [r0]
   2836c:	mov	r5, #4
   28370:	bls	28388 <fb_symbol_table_visit@@Base+0x3bc>
   28374:	mov	r2, #179	; 0xb3
   28378:	lsl	r5, r5, #1
   2837c:	mul	r3, r2, r5
   28380:	cmp	r1, r3, lsr #8
   28384:	bhi	28378 <fb_symbol_table_visit@@Base+0x3ac>
   28388:	mov	r1, #4
   2838c:	mov	r0, r5
   28390:	bl	13ea0 <calloc@plt>
   28394:	cmp	r0, #0
   28398:	str	r0, [sp]
   2839c:	beq	28448 <fb_symbol_table_visit@@Base+0x47c>
   283a0:	ldr	r3, [r7, #12]
   283a4:	mov	r4, #0
   283a8:	cmp	r3, r4
   283ac:	str	r5, [sp, #12]
   283b0:	str	r4, [sp, #4]
   283b4:	str	r4, [sp, #8]
   283b8:	beq	2843c <fb_symbol_table_visit@@Base+0x470>
   283bc:	sub	r5, r6, #4
   283c0:	mov	r8, sp
   283c4:	mov	r6, #3
   283c8:	b	283d4 <fb_symbol_table_visit@@Base+0x408>
   283cc:	cmp	r4, r3
   283d0:	bcs	28404 <fb_symbol_table_visit@@Base+0x438>
   283d4:	ldr	r2, [r5, #4]!
   283d8:	add	r4, r4, #1
   283dc:	cmp	r2, #0
   283e0:	cmpne	r2, #2
   283e4:	beq	283cc <fb_symbol_table_visit@@Base+0x400>
   283e8:	mov	r3, r6
   283ec:	ldr	r1, [r2]
   283f0:	mov	r0, r8
   283f4:	bl	2802c <fb_symbol_table_visit@@Base+0x60>
   283f8:	ldr	r3, [r7, #12]
   283fc:	cmp	r4, r3
   28400:	bcc	283d4 <fb_symbol_table_visit@@Base+0x408>
   28404:	ldr	r0, [r7]
   28408:	cmp	r0, #0
   2840c:	beq	28414 <fb_symbol_table_visit@@Base+0x448>
   28410:	bl	13ed0 <free@plt>
   28414:	mov	ip, r8
   28418:	mov	lr, #0
   2841c:	ldm	ip!, {r0, r1, r2, r3}
   28420:	str	r0, [r7]
   28424:	str	r1, [r7, #4]
   28428:	str	r2, [r7, #8]
   2842c:	str	r3, [r7, #12]
   28430:	mov	r0, lr
   28434:	add	sp, sp, #16
   28438:	pop	{r4, r5, r6, r7, r8, pc}
   2843c:	mov	r0, r6
   28440:	mov	r8, sp
   28444:	b	28408 <fb_symbol_table_visit@@Base+0x43c>
   28448:	mvn	lr, #0
   2844c:	b	28430 <fb_symbol_table_visit@@Base+0x464>

00028450 <fb_scope_table_clear@@Base>:
   28450:	push	{r4, lr}
   28454:	mov	r4, r0
   28458:	ldr	r0, [r0]
   2845c:	cmp	r0, #0
   28460:	beq	28468 <fb_scope_table_clear@@Base+0x18>
   28464:	bl	13ed0 <free@plt>
   28468:	mov	r3, #0
   2846c:	str	r3, [r4]
   28470:	str	r3, [r4, #4]
   28474:	str	r3, [r4, #8]
   28478:	str	r3, [r4, #12]
   2847c:	pop	{r4, pc}

00028480 <fb_scope_table_destroy@@Base>:
   28480:	push	{r4, r5, r6, r7, r8, lr}
   28484:	subs	r7, r1, #0
   28488:	mov	r6, r0
   2848c:	beq	284e0 <fb_scope_table_destroy@@Base+0x60>
   28490:	ldr	r3, [r0, #12]
   28494:	ldr	r0, [r0]
   28498:	cmp	r3, #0
   2849c:	beq	284e4 <fb_scope_table_destroy@@Base+0x64>
   284a0:	mov	r8, r2
   284a4:	sub	r5, r0, #4
   284a8:	mov	r4, #0
   284ac:	b	284b8 <fb_scope_table_destroy@@Base+0x38>
   284b0:	cmp	r4, r3
   284b4:	bcs	284e0 <fb_scope_table_destroy@@Base+0x60>
   284b8:	ldr	r1, [r5, #4]!
   284bc:	add	r4, r4, #1
   284c0:	cmp	r1, #0
   284c4:	cmpne	r1, #2
   284c8:	beq	284b0 <fb_scope_table_destroy@@Base+0x30>
   284cc:	mov	r0, r8
   284d0:	blx	r7
   284d4:	ldr	r3, [r6, #12]
   284d8:	cmp	r4, r3
   284dc:	bcc	284b8 <fb_scope_table_destroy@@Base+0x38>
   284e0:	ldr	r0, [r6]
   284e4:	cmp	r0, #0
   284e8:	beq	284f0 <fb_scope_table_destroy@@Base+0x70>
   284ec:	bl	13ed0 <free@plt>
   284f0:	mov	r3, #0
   284f4:	str	r3, [r6]
   284f8:	str	r3, [r6, #4]
   284fc:	str	r3, [r6, #8]
   28500:	str	r3, [r6, #12]
   28504:	pop	{r4, r5, r6, r7, r8, pc}

00028508 <fb_scope_table_init@@Base>:
   28508:	cmp	r1, #2
   2850c:	push	{r4, r5, r6, lr}
   28510:	mov	r4, #4
   28514:	mov	r5, r0
   28518:	bls	28530 <fb_scope_table_init@@Base+0x28>
   2851c:	mov	r2, #179	; 0xb3
   28520:	lsl	r4, r4, #1
   28524:	mul	r3, r2, r4
   28528:	cmp	r1, r3, lsr #8
   2852c:	bhi	28520 <fb_scope_table_init@@Base+0x18>
   28530:	mov	r1, #4
   28534:	mov	r0, r4
   28538:	bl	13ea0 <calloc@plt>
   2853c:	cmp	r0, #0
   28540:	str	r0, [r5]
   28544:	movne	r0, #0
   28548:	strne	r4, [r5, #12]
   2854c:	strne	r0, [r5, #4]
   28550:	strne	r0, [r5, #8]
   28554:	mvneq	r0, #0
   28558:	pop	{r4, r5, r6, pc}

0002855c <fb_scope_table_resize@@Base>:
   2855c:	b	2834c <fb_symbol_table_visit@@Base+0x380>

00028560 <fb_scope_table_insert@@Base>:
   28560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28564:	sub	sp, sp, #28
   28568:	cmp	r3, #0
   2856c:	str	r3, [sp, #12]
   28570:	str	r1, [sp, #4]
   28574:	str	r2, [sp, #20]
   28578:	str	r0, [sp, #16]
   2857c:	beq	289e8 <fb_scope_table_insert@@Base+0x488>
   28580:	cmp	r3, #2
   28584:	beq	28a10 <fb_scope_table_insert@@Base+0x4b0>
   28588:	cmp	r3, #1
   2858c:	beq	289fc <fb_scope_table_insert@@Base+0x49c>
   28590:	ldr	r2, [r0, #12]
   28594:	mov	r3, #179	; 0xb3
   28598:	ldr	r1, [r0, #8]
   2859c:	mul	r3, r3, r2
   285a0:	mov	r4, r0
   285a4:	cmp	r1, r3, lsr #8
   285a8:	bcc	285c0 <fb_scope_table_insert@@Base+0x60>
   285ac:	lsl	r1, r1, #1
   285b0:	bl	2834c <fb_symbol_table_visit@@Base+0x380>
   285b4:	cmp	r0, #0
   285b8:	bne	28a24 <fb_scope_table_insert@@Base+0x4c4>
   285bc:	ldr	r2, [r4, #12]
   285c0:	sub	r2, r2, #1
   285c4:	ldr	r3, [sp, #20]
   285c8:	str	r2, [sp]
   285cc:	ldr	r2, [sp, #16]
   285d0:	cmp	r3, #0
   285d4:	ldr	r7, [r2]
   285d8:	ble	288e4 <fb_scope_table_insert@@Base+0x384>
   285dc:	mov	r4, #0
   285e0:	ldr	r5, [sp, #4]
   285e4:	ldr	r9, [pc, #1108]	; 28a40 <fb_scope_table_insert@@Base+0x4e0>
   285e8:	ldr	sl, [pc, #1108]	; 28a44 <fb_scope_table_insert@@Base+0x4e4>
   285ec:	ldr	r8, [pc, #1108]	; 28a48 <fb_scope_table_insert@@Base+0x4e8>
   285f0:	mov	r6, r4
   285f4:	mov	lr, r3
   285f8:	mvn	fp, #0
   285fc:	cmp	lr, #0
   28600:	ldrb	r1, [r5]
   28604:	moveq	r2, r6
   28608:	moveq	r0, fp
   2860c:	beq	28654 <fb_scope_table_insert@@Base+0xf4>
   28610:	cmp	r1, #46	; 0x2e
   28614:	addeq	ip, r5, #1
   28618:	moveq	r0, fp
   2861c:	moveq	r2, r6
   28620:	beq	28660 <fb_scope_table_insert@@Base+0x100>
   28624:	mov	r3, r5
   28628:	mov	r0, r6
   2862c:	b	28640 <fb_scope_table_insert@@Base+0xe0>
   28630:	ldrb	ip, [r3, #1]!
   28634:	cmp	ip, #46	; 0x2e
   28638:	beq	286b0 <fb_scope_table_insert@@Base+0x150>
   2863c:	mov	r0, r2
   28640:	add	r2, r0, #1
   28644:	cmp	r2, lr
   28648:	bne	28630 <fb_scope_table_insert@@Base+0xd0>
   2864c:	cmp	r0, #0
   28650:	beq	286d4 <fb_scope_table_insert@@Base+0x174>
   28654:	cmp	r1, #0
   28658:	add	ip, r5, #1
   2865c:	beq	286d4 <fb_scope_table_insert@@Base+0x174>
   28660:	add	r0, r5, r0
   28664:	mov	r3, r9
   28668:	b	28678 <fb_scope_table_insert@@Base+0x118>
   2866c:	ldrb	r1, [ip], #1
   28670:	cmp	r1, #0
   28674:	beq	28688 <fb_scope_table_insert@@Base+0x128>
   28678:	add	r3, r3, r3, lsl #5
   2867c:	cmp	ip, r0
   28680:	eor	r3, r3, r1
   28684:	bne	2866c <fb_scope_table_insert@@Base+0x10c>
   28688:	eor	r4, r4, sl
   2868c:	eor	r3, r3, r4
   28690:	cmp	lr, r2
   28694:	mul	r4, r8, r3
   28698:	beq	286e4 <fb_scope_table_insert@@Base+0x184>
   2869c:	mvn	r3, r2
   286a0:	add	r2, r2, #1
   286a4:	add	lr, lr, r3
   286a8:	add	r5, r5, r2
   286ac:	b	285fc <fb_scope_table_insert@@Base+0x9c>
   286b0:	cmp	r0, #0
   286b4:	beq	286c4 <fb_scope_table_insert@@Base+0x164>
   286b8:	cmp	r1, #0
   286bc:	add	ip, r5, #1
   286c0:	bne	28660 <fb_scope_table_insert@@Base+0x100>
   286c4:	eor	r4, r4, #5376	; 0x1500
   286c8:	eor	r4, r4, #5
   286cc:	mul	r4, r8, r4
   286d0:	b	2869c <fb_scope_table_insert@@Base+0x13c>
   286d4:	eor	r4, r4, #5376	; 0x1500
   286d8:	ldr	r3, [pc, #872]	; 28a48 <fb_scope_table_insert@@Base+0x4e8>
   286dc:	eor	r4, r4, #5
   286e0:	mul	r4, r3, r4
   286e4:	ldr	r3, [sp]
   286e8:	and	r5, r3, r4
   286ec:	lsl	r5, r5, #2
   286f0:	ldr	r3, [sp, #64]	; 0x40
   286f4:	sub	r3, r3, #2
   286f8:	cmp	r3, #1
   286fc:	bls	28990 <fb_scope_table_insert@@Base+0x430>
   28700:	ldr	r6, [r7, r5]
   28704:	add	r5, r7, r5
   28708:	cmp	r6, #0
   2870c:	moveq	r8, r5
   28710:	beq	28800 <fb_scope_table_insert@@Base+0x2a0>
   28714:	mov	r8, #0
   28718:	str	r8, [sp, #8]
   2871c:	ldr	r8, [sp, #20]
   28720:	add	r4, r4, #1
   28724:	cmp	r6, #2
   28728:	beq	28828 <fb_scope_table_insert@@Base+0x2c8>
   2872c:	cmp	r8, #0
   28730:	ldr	r9, [r6]
   28734:	ble	2883c <fb_scope_table_insert@@Base+0x2dc>
   28738:	cmp	r9, #0
   2873c:	beq	287d8 <fb_scope_table_insert@@Base+0x278>
   28740:	ldr	r3, [r9, #4]
   28744:	ldm	r3, {r2, lr}
   28748:	cmp	r8, lr
   2874c:	bcc	287d8 <fb_scope_table_insert@@Base+0x278>
   28750:	ldr	sl, [sp, #4]
   28754:	mov	fp, r8
   28758:	cmp	lr, #0
   2875c:	beq	288dc <fb_scope_table_insert@@Base+0x37c>
   28760:	ldrb	r1, [sl]
   28764:	ldrb	r3, [r2]
   28768:	cmp	r1, r3
   2876c:	bne	287d8 <fb_scope_table_insert@@Base+0x278>
   28770:	mov	r1, sl
   28774:	mov	r3, #0
   28778:	b	2878c <fb_scope_table_insert@@Base+0x22c>
   2877c:	ldrb	ip, [r2, #1]!
   28780:	ldrb	r0, [r1, #1]!
   28784:	cmp	ip, r0
   28788:	bne	287d8 <fb_scope_table_insert@@Base+0x278>
   2878c:	add	r3, r3, #1
   28790:	cmp	r3, lr
   28794:	bne	2877c <fb_scope_table_insert@@Base+0x21c>
   28798:	cmp	lr, fp
   2879c:	beq	288c4 <fb_scope_table_insert@@Base+0x364>
   287a0:	ldrb	r3, [sl, r3]
   287a4:	cmp	r3, #46	; 0x2e
   287a8:	bne	287d8 <fb_scope_table_insert@@Base+0x278>
   287ac:	ldr	r9, [r9]
   287b0:	mvn	r3, lr
   287b4:	cmp	r9, #0
   287b8:	add	lr, lr, #1
   287bc:	add	fp, fp, r3
   287c0:	add	sl, sl, lr
   287c4:	beq	287d8 <fb_scope_table_insert@@Base+0x278>
   287c8:	ldr	r3, [r9, #4]
   287cc:	ldm	r3, {r2, lr}
   287d0:	cmp	lr, fp
   287d4:	bls	28758 <fb_scope_table_insert@@Base+0x1f8>
   287d8:	ldr	r3, [sp]
   287dc:	and	r5, r3, r4
   287e0:	add	r4, r4, #1
   287e4:	ldr	r6, [r7, r5, lsl #2]
   287e8:	add	r5, r7, r5, lsl #2
   287ec:	cmp	r6, #0
   287f0:	bne	28724 <fb_scope_table_insert@@Base+0x1c4>
   287f4:	ldr	r8, [sp, #8]
   287f8:	cmp	r8, #0
   287fc:	moveq	r8, r5
   28800:	ldr	r2, [sp, #16]
   28804:	mov	r6, #0
   28808:	ldr	r3, [r2, #8]
   2880c:	add	r3, r3, #1
   28810:	str	r3, [r2, #8]
   28814:	ldr	r3, [sp, #12]
   28818:	str	r3, [r8]
   2881c:	mov	r0, r6
   28820:	add	sp, sp, #28
   28824:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28828:	ldr	r2, [sp, #8]
   2882c:	subs	r3, r2, #0
   28830:	moveq	r3, r5
   28834:	str	r3, [sp, #8]
   28838:	b	287d8 <fb_scope_table_insert@@Base+0x278>
   2883c:	ldr	sl, [sp, #4]
   28840:	mov	fp, r8
   28844:	b	28884 <fb_scope_table_insert@@Base+0x324>
   28848:	ldr	r3, [r9, #4]
   2884c:	ldr	r1, [sl, #4]
   28850:	ldr	r2, [r3, #4]
   28854:	ldr	r0, [r1, #4]
   28858:	cmp	r2, r0
   2885c:	bne	287d8 <fb_scope_table_insert@@Base+0x278>
   28860:	ldr	r1, [r1]
   28864:	ldr	r0, [r3]
   28868:	bl	14020 <strncmp@plt>
   2886c:	cmp	r0, #0
   28870:	bne	287d8 <fb_scope_table_insert@@Base+0x278>
   28874:	adds	fp, fp, #1
   28878:	ldr	r9, [r9]
   2887c:	ldr	sl, [sl]
   28880:	beq	288c8 <fb_scope_table_insert@@Base+0x368>
   28884:	adds	r2, r9, #0
   28888:	movne	r2, #1
   2888c:	adds	r3, sl, #0
   28890:	movne	r3, #1
   28894:	tst	r2, r3
   28898:	bne	28848 <fb_scope_table_insert@@Base+0x2e8>
   2889c:	orrs	r3, r2, r3
   288a0:	bne	287d8 <fb_scope_table_insert@@Base+0x278>
   288a4:	ldr	r3, [sp, #64]	; 0x40
   288a8:	cmp	r3, #0
   288ac:	bne	2881c <fb_scope_table_insert@@Base+0x2bc>
   288b0:	ldr	r3, [sp, #12]
   288b4:	mov	r0, r6
   288b8:	str	r3, [r5]
   288bc:	add	sp, sp, #28
   288c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   288c4:	ldr	r9, [r9]
   288c8:	clz	r9, r9
   288cc:	lsr	r9, r9, #5
   288d0:	cmp	r9, #0
   288d4:	bne	288a4 <fb_scope_table_insert@@Base+0x344>
   288d8:	b	287d8 <fb_scope_table_insert@@Base+0x278>
   288dc:	mov	r3, lr
   288e0:	b	28798 <fb_scope_table_insert@@Base+0x238>
   288e4:	ldr	r3, [sp, #4]
   288e8:	cmp	r3, #0
   288ec:	moveq	r4, r3
   288f0:	moveq	r5, r4
   288f4:	beq	286f0 <fb_scope_table_insert@@Base+0x190>
   288f8:	mov	ip, r3
   288fc:	ldr	r8, [pc, #316]	; 28a40 <fb_scope_table_insert@@Base+0x4e0>
   28900:	ldr	r2, [ip, #4]
   28904:	ldr	r6, [pc, #312]	; 28a44 <fb_scope_table_insert@@Base+0x4e4>
   28908:	ldr	r5, [pc, #312]	; 28a48 <fb_scope_table_insert@@Base+0x4e8>
   2890c:	ldm	r2, {r0, r3}
   28910:	ldr	lr, [sp, #20]
   28914:	mov	r4, #0
   28918:	subs	r3, r3, #1
   2891c:	beq	28988 <fb_scope_table_insert@@Base+0x428>
   28920:	ldrb	r2, [r0]
   28924:	add	r1, r0, #1
   28928:	cmp	r2, #0
   2892c:	beq	28988 <fb_scope_table_insert@@Base+0x428>
   28930:	add	r0, r0, r3
   28934:	mov	r3, r8
   28938:	b	28948 <fb_scope_table_insert@@Base+0x3e8>
   2893c:	ldrb	r2, [r1], #1
   28940:	cmp	r2, #0
   28944:	beq	28958 <fb_scope_table_insert@@Base+0x3f8>
   28948:	add	r3, r3, r3, lsl #5
   2894c:	cmp	r1, r0
   28950:	eor	r3, r3, r2
   28954:	bne	2893c <fb_scope_table_insert@@Base+0x3dc>
   28958:	eor	r4, r4, r6
   2895c:	eor	r3, r3, r4
   28960:	adds	lr, lr, #1
   28964:	mul	r4, r5, r3
   28968:	ldr	ip, [ip]
   2896c:	beq	286e4 <fb_scope_table_insert@@Base+0x184>
   28970:	cmp	ip, #0
   28974:	beq	286e4 <fb_scope_table_insert@@Base+0x184>
   28978:	ldr	r2, [ip, #4]
   2897c:	ldm	r2, {r0, r3}
   28980:	subs	r3, r3, #1
   28984:	bne	28920 <fb_scope_table_insert@@Base+0x3c0>
   28988:	mov	r3, r8
   2898c:	b	28958 <fb_scope_table_insert@@Base+0x3f8>
   28990:	ldr	r1, [sp, #16]
   28994:	ldr	r2, [r7, r5]
   28998:	add	r5, r7, r5
   2899c:	ldr	r3, [r1, #8]
   289a0:	cmp	r2, #2
   289a4:	cmpne	r2, #0
   289a8:	add	r3, r3, #1
   289ac:	str	r3, [r1, #8]
   289b0:	beq	289d8 <fb_scope_table_insert@@Base+0x478>
   289b4:	ldr	r1, [sp]
   289b8:	add	r4, r4, #1
   289bc:	and	r3, r1, r4
   289c0:	add	r4, r4, #1
   289c4:	ldr	r2, [r7, r3, lsl #2]
   289c8:	add	r5, r7, r3, lsl #2
   289cc:	cmp	r2, #0
   289d0:	cmpne	r2, #2
   289d4:	bne	289bc <fb_scope_table_insert@@Base+0x45c>
   289d8:	ldr	r3, [sp, #12]
   289dc:	mov	r6, #0
   289e0:	str	r3, [r5]
   289e4:	b	2881c <fb_scope_table_insert@@Base+0x2bc>
   289e8:	ldr	r3, [pc, #92]	; 28a4c <fb_scope_table_insert@@Base+0x4ec>
   289ec:	mov	r2, #114	; 0x72
   289f0:	ldr	r1, [pc, #88]	; 28a50 <fb_scope_table_insert@@Base+0x4f0>
   289f4:	ldr	r0, [pc, #88]	; 28a54 <fb_scope_table_insert@@Base+0x4f4>
   289f8:	bl	14038 <__assert_fail@plt>
   289fc:	ldr	r3, [pc, #72]	; 28a4c <fb_scope_table_insert@@Base+0x4ec>
   28a00:	mov	r2, #116	; 0x74
   28a04:	ldr	r1, [pc, #68]	; 28a50 <fb_scope_table_insert@@Base+0x4f0>
   28a08:	ldr	r0, [pc, #72]	; 28a58 <fb_scope_table_insert@@Base+0x4f8>
   28a0c:	bl	14038 <__assert_fail@plt>
   28a10:	ldr	r3, [pc, #52]	; 28a4c <fb_scope_table_insert@@Base+0x4ec>
   28a14:	mov	r2, #115	; 0x73
   28a18:	ldr	r1, [pc, #48]	; 28a50 <fb_scope_table_insert@@Base+0x4f0>
   28a1c:	ldr	r0, [pc, #56]	; 28a5c <fb_scope_table_insert@@Base+0x4fc>
   28a20:	bl	14038 <__assert_fail@plt>
   28a24:	ldr	r3, [pc, #52]	; 28a60 <fb_scope_table_insert@@Base+0x500>
   28a28:	ldr	r2, [pc, #52]	; 28a64 <fb_scope_table_insert@@Base+0x504>
   28a2c:	ldr	r1, [pc, #52]	; 28a68 <fb_scope_table_insert@@Base+0x508>
   28a30:	ldr	r0, [r3]
   28a34:	bl	13f84 <fprintf@plt>
   28a38:	mov	r0, #1
   28a3c:	bl	13f6c <exit@plt>
   28a40:	svccs	0x00692e57
   28a44:	svccs	0x00693b52
   28a48:			; <UNDEFINED> instruction: 0x9e3779b1
   28a4c:	ldrdeq	r8, [r5], -r0
   28a50:			; <UNDEFINED> instruction: 0x000588bc
   28a54:	andeq	r8, r5, ip, lsl #18
   28a58:	andeq	r8, r5, ip, lsr r9
   28a5c:	andeq	r8, r5, r4, lsr #18
   28a60:	andeq	sp, r6, r8, lsr #1
   28a64:	andeq	r8, r5, r4, asr r9
   28a68:	andeq	r8, r5, r8, lsl #19

00028a6c <fb_scope_table_insert_item@@Base>:
   28a6c:	mov	ip, r1
   28a70:	mov	r3, r2
   28a74:	ldr	r1, [r1]
   28a78:	mov	r2, ip
   28a7c:	b	2802c <fb_symbol_table_visit@@Base+0x60>

00028a80 <fb_scope_table_find@@Base>:
   28a80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28a84:	sub	sp, sp, #12
   28a88:	ldr	r7, [r0]
   28a8c:	str	r1, [sp]
   28a90:	cmp	r7, #0
   28a94:	beq	28de4 <fb_scope_table_find@@Base+0x364>
   28a98:	ldr	r3, [r0, #12]
   28a9c:	cmp	r2, #0
   28aa0:	sub	r3, r3, #1
   28aa4:	mov	fp, r2
   28aa8:	str	r3, [sp, #4]
   28aac:	ble	28d44 <fb_scope_table_find@@Base+0x2c4>
   28ab0:	mov	r4, #0
   28ab4:	ldr	sl, [pc, #816]	; 28dec <fb_scope_table_find@@Base+0x36c>
   28ab8:	ldr	r9, [pc, #816]	; 28df0 <fb_scope_table_find@@Base+0x370>
   28abc:	ldr	r8, [pc, #816]	; 28df4 <fb_scope_table_find@@Base+0x374>
   28ac0:	mov	r6, r4
   28ac4:	mov	r5, r1
   28ac8:	mov	lr, r2
   28acc:	cmp	lr, #0
   28ad0:	ldrb	r1, [r5]
   28ad4:	moveq	r2, r6
   28ad8:	mvneq	r0, #0
   28adc:	beq	28b24 <fb_scope_table_find@@Base+0xa4>
   28ae0:	cmp	r1, #46	; 0x2e
   28ae4:	addeq	ip, r5, #1
   28ae8:	mvneq	r0, #0
   28aec:	moveq	r2, r6
   28af0:	beq	28b30 <fb_scope_table_find@@Base+0xb0>
   28af4:	mov	r3, r5
   28af8:	mov	r0, r6
   28afc:	b	28b10 <fb_scope_table_find@@Base+0x90>
   28b00:	ldrb	ip, [r3, #1]!
   28b04:	cmp	ip, #46	; 0x2e
   28b08:	beq	28b80 <fb_scope_table_find@@Base+0x100>
   28b0c:	mov	r0, r2
   28b10:	add	r2, r0, #1
   28b14:	cmp	r2, lr
   28b18:	bne	28b00 <fb_scope_table_find@@Base+0x80>
   28b1c:	cmp	r0, #0
   28b20:	beq	28ba4 <fb_scope_table_find@@Base+0x124>
   28b24:	cmp	r1, #0
   28b28:	add	ip, r5, #1
   28b2c:	beq	28ba4 <fb_scope_table_find@@Base+0x124>
   28b30:	add	r0, r5, r0
   28b34:	mov	r3, sl
   28b38:	b	28b48 <fb_scope_table_find@@Base+0xc8>
   28b3c:	ldrb	r1, [ip], #1
   28b40:	cmp	r1, #0
   28b44:	beq	28b58 <fb_scope_table_find@@Base+0xd8>
   28b48:	add	r3, r3, r3, lsl #5
   28b4c:	cmp	ip, r0
   28b50:	eor	r3, r3, r1
   28b54:	bne	28b3c <fb_scope_table_find@@Base+0xbc>
   28b58:	eor	r4, r4, r9
   28b5c:	eor	r3, r3, r4
   28b60:	cmp	lr, r2
   28b64:	mul	r4, r8, r3
   28b68:	beq	28bb4 <fb_scope_table_find@@Base+0x134>
   28b6c:	mvn	r3, r2
   28b70:	add	r2, r2, #1
   28b74:	add	lr, lr, r3
   28b78:	add	r5, r5, r2
   28b7c:	b	28acc <fb_scope_table_find@@Base+0x4c>
   28b80:	cmp	r0, #0
   28b84:	beq	28b94 <fb_scope_table_find@@Base+0x114>
   28b88:	cmp	r1, #0
   28b8c:	add	ip, r5, #1
   28b90:	bne	28b30 <fb_scope_table_find@@Base+0xb0>
   28b94:	eor	r4, r4, #5376	; 0x1500
   28b98:	eor	r4, r4, #5
   28b9c:	mul	r4, r8, r4
   28ba0:	b	28b6c <fb_scope_table_find@@Base+0xec>
   28ba4:	eor	r4, r4, #5376	; 0x1500
   28ba8:	ldr	r3, [pc, #580]	; 28df4 <fb_scope_table_find@@Base+0x374>
   28bac:	eor	r4, r4, #5
   28bb0:	mul	r4, r3, r4
   28bb4:	ldr	r3, [sp, #4]
   28bb8:	and	r3, r3, r4
   28bbc:	lsl	r3, r3, #2
   28bc0:	ldr	r5, [r7, r3]
   28bc4:	cmp	r5, #0
   28bc8:	beq	28ca0 <fb_scope_table_find@@Base+0x220>
   28bcc:	ldr	r8, [sp, #4]
   28bd0:	mov	r6, fp
   28bd4:	add	r4, r4, #1
   28bd8:	cmp	r5, #2
   28bdc:	beq	28c8c <fb_scope_table_find@@Base+0x20c>
   28be0:	cmp	r6, #0
   28be4:	ldr	r9, [r5]
   28be8:	ble	28cac <fb_scope_table_find@@Base+0x22c>
   28bec:	cmp	r9, #0
   28bf0:	beq	28c8c <fb_scope_table_find@@Base+0x20c>
   28bf4:	ldr	r3, [r9, #4]
   28bf8:	ldm	r3, {r2, lr}
   28bfc:	cmp	r6, lr
   28c00:	bcc	28c8c <fb_scope_table_find@@Base+0x20c>
   28c04:	ldr	sl, [sp]
   28c08:	mov	fp, r6
   28c0c:	cmp	lr, #0
   28c10:	beq	28d3c <fb_scope_table_find@@Base+0x2bc>
   28c14:	ldrb	r1, [sl]
   28c18:	ldrb	r3, [r2]
   28c1c:	cmp	r1, r3
   28c20:	bne	28c8c <fb_scope_table_find@@Base+0x20c>
   28c24:	mov	r1, sl
   28c28:	mov	r3, #0
   28c2c:	b	28c40 <fb_scope_table_find@@Base+0x1c0>
   28c30:	ldrb	ip, [r2, #1]!
   28c34:	ldrb	r0, [r1, #1]!
   28c38:	cmp	ip, r0
   28c3c:	bne	28c8c <fb_scope_table_find@@Base+0x20c>
   28c40:	add	r3, r3, #1
   28c44:	cmp	r3, lr
   28c48:	bne	28c30 <fb_scope_table_find@@Base+0x1b0>
   28c4c:	cmp	lr, fp
   28c50:	beq	28d1c <fb_scope_table_find@@Base+0x29c>
   28c54:	ldrb	r3, [sl, r3]
   28c58:	cmp	r3, #46	; 0x2e
   28c5c:	bne	28c8c <fb_scope_table_find@@Base+0x20c>
   28c60:	ldr	r9, [r9]
   28c64:	mvn	r3, lr
   28c68:	cmp	r9, #0
   28c6c:	add	lr, lr, #1
   28c70:	add	fp, fp, r3
   28c74:	add	sl, sl, lr
   28c78:	beq	28c8c <fb_scope_table_find@@Base+0x20c>
   28c7c:	ldr	r3, [r9, #4]
   28c80:	ldm	r3, {r2, lr}
   28c84:	cmp	lr, fp
   28c88:	bls	28c0c <fb_scope_table_find@@Base+0x18c>
   28c8c:	and	r3, r8, r4
   28c90:	add	r4, r4, #1
   28c94:	ldr	r5, [r7, r3, lsl #2]
   28c98:	cmp	r5, #0
   28c9c:	bne	28bd8 <fb_scope_table_find@@Base+0x158>
   28ca0:	mov	r0, r5
   28ca4:	add	sp, sp, #12
   28ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28cac:	ldr	sl, [sp]
   28cb0:	mov	fp, r6
   28cb4:	b	28cf8 <fb_scope_table_find@@Base+0x278>
   28cb8:	ldr	r0, [r9, #4]
   28cbc:	ldr	r1, [sl, #4]
   28cc0:	ldr	r3, [r0, #4]
   28cc4:	ldr	ip, [r1, #4]
   28cc8:	mov	r2, r3
   28ccc:	cmp	r3, ip
   28cd0:	bne	28c8c <fb_scope_table_find@@Base+0x20c>
   28cd4:	ldr	r1, [r1]
   28cd8:	ldr	r0, [r0]
   28cdc:	bl	14020 <strncmp@plt>
   28ce0:	cmp	r0, #0
   28ce4:	bne	28c8c <fb_scope_table_find@@Base+0x20c>
   28ce8:	adds	fp, fp, #1
   28cec:	ldr	r9, [r9]
   28cf0:	ldr	sl, [sl]
   28cf4:	beq	28d20 <fb_scope_table_find@@Base+0x2a0>
   28cf8:	adds	r2, r9, #0
   28cfc:	movne	r2, #1
   28d00:	adds	r3, sl, #0
   28d04:	movne	r3, #1
   28d08:	tst	r2, r3
   28d0c:	bne	28cb8 <fb_scope_table_find@@Base+0x238>
   28d10:	orrs	r3, r2, r3
   28d14:	bne	28c8c <fb_scope_table_find@@Base+0x20c>
   28d18:	b	28ca0 <fb_scope_table_find@@Base+0x220>
   28d1c:	ldr	r9, [r9]
   28d20:	clz	r9, r9
   28d24:	lsr	r9, r9, #5
   28d28:	cmp	r9, #0
   28d2c:	beq	28c8c <fb_scope_table_find@@Base+0x20c>
   28d30:	mov	r0, r5
   28d34:	add	sp, sp, #12
   28d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28d3c:	mov	r3, lr
   28d40:	b	28c4c <fb_scope_table_find@@Base+0x1cc>
   28d44:	cmp	r1, #0
   28d48:	mov	r3, r1
   28d4c:	moveq	r4, r1
   28d50:	beq	28bc0 <fb_scope_table_find@@Base+0x140>
   28d54:	ldr	ip, [pc, #144]	; 28dec <fb_scope_table_find@@Base+0x36c>
   28d58:	ldr	r5, [pc, #144]	; 28df0 <fb_scope_table_find@@Base+0x370>
   28d5c:	ldr	lr, [pc, #144]	; 28df4 <fb_scope_table_find@@Base+0x374>
   28d60:	mov	r1, r3
   28d64:	mov	r0, fp
   28d68:	mov	r4, #0
   28d6c:	ldr	r2, [r1, #4]
   28d70:	ldr	r3, [r2, #4]
   28d74:	ldr	r8, [r2]
   28d78:	subs	r3, r3, #1
   28d7c:	beq	28ddc <fb_scope_table_find@@Base+0x35c>
   28d80:	ldrb	r2, [r8]
   28d84:	add	r6, r8, #1
   28d88:	cmp	r2, #0
   28d8c:	beq	28ddc <fb_scope_table_find@@Base+0x35c>
   28d90:	add	r8, r8, r3
   28d94:	mov	r3, ip
   28d98:	b	28da8 <fb_scope_table_find@@Base+0x328>
   28d9c:	ldrb	r2, [r6], #1
   28da0:	cmp	r2, #0
   28da4:	beq	28db8 <fb_scope_table_find@@Base+0x338>
   28da8:	add	r3, r3, r3, lsl #5
   28dac:	cmp	r6, r8
   28db0:	eor	r3, r3, r2
   28db4:	bne	28d9c <fb_scope_table_find@@Base+0x31c>
   28db8:	eor	r4, r4, r5
   28dbc:	eor	r3, r3, r4
   28dc0:	adds	r0, r0, #1
   28dc4:	mul	r4, lr, r3
   28dc8:	ldr	r1, [r1]
   28dcc:	beq	28bb4 <fb_scope_table_find@@Base+0x134>
   28dd0:	cmp	r1, #0
   28dd4:	bne	28d6c <fb_scope_table_find@@Base+0x2ec>
   28dd8:	b	28bb4 <fb_scope_table_find@@Base+0x134>
   28ddc:	mov	r3, ip
   28de0:	b	28db8 <fb_scope_table_find@@Base+0x338>
   28de4:	mov	r5, r7
   28de8:	b	28ca0 <fb_scope_table_find@@Base+0x220>
   28dec:	svccs	0x00692e57
   28df0:	svccs	0x00693b52
   28df4:			; <UNDEFINED> instruction: 0x9e3779b1

00028df8 <fb_scope_table_find_item@@Base>:
   28df8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   28dfc:	ldr	r7, [r0]
   28e00:	ldr	r6, [r1]
   28e04:	cmp	r7, #0
   28e08:	beq	28f64 <fb_scope_table_find_item@@Base+0x16c>
   28e0c:	ldr	r8, [r0, #12]
   28e10:	cmp	r6, #0
   28e14:	sub	r8, r8, #1
   28e18:	beq	28f6c <fb_scope_table_find_item@@Base+0x174>
   28e1c:	ldr	lr, [pc, #340]	; 28f78 <fb_scope_table_find_item@@Base+0x180>
   28e20:	ldr	r5, [pc, #340]	; 28f7c <fb_scope_table_find_item@@Base+0x184>
   28e24:	ldr	r4, [pc, #340]	; 28f80 <fb_scope_table_find_item@@Base+0x188>
   28e28:	mov	ip, r6
   28e2c:	mov	r9, #0
   28e30:	ldr	r2, [ip, #4]
   28e34:	ldm	r2, {r0, r3}
   28e38:	subs	r3, r3, #1
   28e3c:	beq	28f50 <fb_scope_table_find_item@@Base+0x158>
   28e40:	ldrb	r2, [r0]
   28e44:	add	r1, r0, #1
   28e48:	cmp	r2, #0
   28e4c:	beq	28f50 <fb_scope_table_find_item@@Base+0x158>
   28e50:	add	r0, r0, r3
   28e54:	mov	r3, lr
   28e58:	b	28e68 <fb_scope_table_find_item@@Base+0x70>
   28e5c:	ldrb	r2, [r1], #1
   28e60:	cmp	r2, #0
   28e64:	beq	28e78 <fb_scope_table_find_item@@Base+0x80>
   28e68:	add	r3, r3, r3, lsl #5
   28e6c:	cmp	r1, r0
   28e70:	eor	r3, r3, r2
   28e74:	bne	28e5c <fb_scope_table_find_item@@Base+0x64>
   28e78:	eor	r9, r9, r5
   28e7c:	ldr	ip, [ip]
   28e80:	eor	r9, r9, r3
   28e84:	cmp	ip, #0
   28e88:	mul	r9, r4, r9
   28e8c:	bne	28e30 <fb_scope_table_find_item@@Base+0x38>
   28e90:	and	r3, r8, r9
   28e94:	lsl	r3, r3, #2
   28e98:	ldr	sl, [r7, r3]
   28e9c:	cmp	sl, #0
   28ea0:	beq	28f48 <fb_scope_table_find_item@@Base+0x150>
   28ea4:	add	r9, r9, #1
   28ea8:	cmp	sl, #2
   28eac:	beq	28f34 <fb_scope_table_find_item@@Base+0x13c>
   28eb0:	ldr	r4, [sl]
   28eb4:	adds	r2, r6, #0
   28eb8:	movne	r2, #1
   28ebc:	adds	r3, r4, #0
   28ec0:	movne	r3, #1
   28ec4:	tst	r3, r2
   28ec8:	beq	28f58 <fb_scope_table_find_item@@Base+0x160>
   28ecc:	ldr	r0, [r4, #4]
   28ed0:	ldr	r3, [r6, #4]
   28ed4:	ldr	r2, [r0, #4]
   28ed8:	ldr	r1, [r3, #4]
   28edc:	cmp	r2, r1
   28ee0:	bne	28f34 <fb_scope_table_find_item@@Base+0x13c>
   28ee4:	mov	r5, r6
   28ee8:	ldr	r1, [r3]
   28eec:	ldr	r0, [r0]
   28ef0:	bl	14020 <strncmp@plt>
   28ef4:	cmp	r0, #0
   28ef8:	bne	28f34 <fb_scope_table_find_item@@Base+0x13c>
   28efc:	ldr	r4, [r4]
   28f00:	ldr	r5, [r5]
   28f04:	adds	r3, r4, #0
   28f08:	movne	r3, #1
   28f0c:	adds	r2, r5, #0
   28f10:	movne	r2, #1
   28f14:	tst	r3, r2
   28f18:	beq	28f58 <fb_scope_table_find_item@@Base+0x160>
   28f1c:	ldr	r0, [r4, #4]
   28f20:	ldr	r3, [r5, #4]
   28f24:	ldr	r2, [r0, #4]
   28f28:	ldr	r1, [r3, #4]
   28f2c:	cmp	r2, r1
   28f30:	beq	28ee8 <fb_scope_table_find_item@@Base+0xf0>
   28f34:	and	r3, r8, r9
   28f38:	add	r9, r9, #1
   28f3c:	ldr	sl, [r7, r3, lsl #2]
   28f40:	cmp	sl, #0
   28f44:	bne	28ea8 <fb_scope_table_find_item@@Base+0xb0>
   28f48:	mov	r0, sl
   28f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28f50:	mov	r3, lr
   28f54:	b	28e78 <fb_scope_table_find_item@@Base+0x80>
   28f58:	orrs	r3, r2, r3
   28f5c:	beq	28f48 <fb_scope_table_find_item@@Base+0x150>
   28f60:	b	28f34 <fb_scope_table_find_item@@Base+0x13c>
   28f64:	mov	sl, r7
   28f68:	b	28f48 <fb_scope_table_find_item@@Base+0x150>
   28f6c:	mov	r3, r6
   28f70:	mov	r9, r6
   28f74:	b	28e98 <fb_scope_table_find_item@@Base+0xa0>
   28f78:	svccs	0x00692e57
   28f7c:	svccs	0x00693b52
   28f80:			; <UNDEFINED> instruction: 0x9e3779b1

00028f84 <fb_scope_table_remove@@Base>:
   28f84:	ldr	r3, [r0]
   28f88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28f8c:	sub	sp, sp, #20
   28f90:	cmp	r3, #0
   28f94:	str	r1, [sp, #8]
   28f98:	str	r3, [sp, #12]
   28f9c:	beq	29328 <fb_scope_table_remove@@Base+0x3a4>
   28fa0:	ldr	r3, [r0, #12]
   28fa4:	cmp	r2, #0
   28fa8:	sub	r3, r3, #1
   28fac:	mov	sl, r0
   28fb0:	mov	fp, r2
   28fb4:	str	r3, [sp, #4]
   28fb8:	ble	2927c <fb_scope_table_remove@@Base+0x2f8>
   28fbc:	mov	r4, #0
   28fc0:	ldr	r9, [pc, #872]	; 29330 <fb_scope_table_remove@@Base+0x3ac>
   28fc4:	ldr	r8, [pc, #872]	; 29334 <fb_scope_table_remove@@Base+0x3b0>
   28fc8:	ldr	r7, [pc, #872]	; 29338 <fb_scope_table_remove@@Base+0x3b4>
   28fcc:	mov	r6, r4
   28fd0:	mov	r5, r1
   28fd4:	mov	lr, r2
   28fd8:	cmp	lr, #0
   28fdc:	ldrb	r1, [r5]
   28fe0:	moveq	r2, r6
   28fe4:	mvneq	r0, #0
   28fe8:	beq	29030 <fb_scope_table_remove@@Base+0xac>
   28fec:	cmp	r1, #46	; 0x2e
   28ff0:	addeq	ip, r5, #1
   28ff4:	mvneq	r0, #0
   28ff8:	moveq	r2, r6
   28ffc:	beq	2903c <fb_scope_table_remove@@Base+0xb8>
   29000:	mov	r3, r5
   29004:	mov	r0, r6
   29008:	b	2901c <fb_scope_table_remove@@Base+0x98>
   2900c:	ldrb	ip, [r3, #1]!
   29010:	cmp	ip, #46	; 0x2e
   29014:	beq	2908c <fb_scope_table_remove@@Base+0x108>
   29018:	mov	r0, r2
   2901c:	add	r2, r0, #1
   29020:	cmp	r2, lr
   29024:	bne	2900c <fb_scope_table_remove@@Base+0x88>
   29028:	cmp	r0, #0
   2902c:	beq	290b0 <fb_scope_table_remove@@Base+0x12c>
   29030:	cmp	r1, #0
   29034:	add	ip, r5, #1
   29038:	beq	290b0 <fb_scope_table_remove@@Base+0x12c>
   2903c:	add	r0, r5, r0
   29040:	mov	r3, r9
   29044:	b	29054 <fb_scope_table_remove@@Base+0xd0>
   29048:	ldrb	r1, [ip], #1
   2904c:	cmp	r1, #0
   29050:	beq	29064 <fb_scope_table_remove@@Base+0xe0>
   29054:	add	r3, r3, r3, lsl #5
   29058:	cmp	ip, r0
   2905c:	eor	r3, r3, r1
   29060:	bne	29048 <fb_scope_table_remove@@Base+0xc4>
   29064:	eor	r4, r4, r8
   29068:	eor	r3, r3, r4
   2906c:	cmp	lr, r2
   29070:	mul	r4, r7, r3
   29074:	beq	290c0 <fb_scope_table_remove@@Base+0x13c>
   29078:	mvn	r3, r2
   2907c:	add	r2, r2, #1
   29080:	add	lr, lr, r3
   29084:	add	r5, r5, r2
   29088:	b	28fd8 <fb_scope_table_remove@@Base+0x54>
   2908c:	cmp	r0, #0
   29090:	beq	290a0 <fb_scope_table_remove@@Base+0x11c>
   29094:	cmp	r1, #0
   29098:	add	ip, r5, #1
   2909c:	bne	2903c <fb_scope_table_remove@@Base+0xb8>
   290a0:	eor	r4, r4, #5376	; 0x1500
   290a4:	eor	r4, r4, #5
   290a8:	mul	r4, r7, r4
   290ac:	b	29078 <fb_scope_table_remove@@Base+0xf4>
   290b0:	eor	r4, r4, #5376	; 0x1500
   290b4:	ldr	r3, [pc, #636]	; 29338 <fb_scope_table_remove@@Base+0x3b4>
   290b8:	eor	r4, r4, #5
   290bc:	mul	r4, r3, r4
   290c0:	ldr	r3, [sp, #4]
   290c4:	and	r5, r3, r4
   290c8:	lsl	r5, r5, #2
   290cc:	ldr	r3, [sp, #12]
   290d0:	ldr	r6, [r3, r5]
   290d4:	add	r5, r3, r5
   290d8:	cmp	r6, #0
   290dc:	beq	291c0 <fb_scope_table_remove@@Base+0x23c>
   290e0:	mov	r7, fp
   290e4:	add	r4, r4, #1
   290e8:	mov	r8, r3
   290ec:	str	sl, [sp, #12]
   290f0:	cmp	r6, #2
   290f4:	beq	291a4 <fb_scope_table_remove@@Base+0x220>
   290f8:	cmp	r7, #0
   290fc:	ldr	r9, [r6]
   29100:	ble	291cc <fb_scope_table_remove@@Base+0x248>
   29104:	cmp	r9, #0
   29108:	beq	291a4 <fb_scope_table_remove@@Base+0x220>
   2910c:	ldr	r3, [r9, #4]
   29110:	ldm	r3, {r2, lr}
   29114:	cmp	r7, lr
   29118:	bcc	291a4 <fb_scope_table_remove@@Base+0x220>
   2911c:	ldr	sl, [sp, #8]
   29120:	mov	fp, r7
   29124:	cmp	lr, #0
   29128:	beq	29274 <fb_scope_table_remove@@Base+0x2f0>
   2912c:	ldrb	r1, [r2]
   29130:	ldrb	r3, [sl]
   29134:	cmp	r1, r3
   29138:	bne	291a4 <fb_scope_table_remove@@Base+0x220>
   2913c:	mov	r1, sl
   29140:	mov	r3, #0
   29144:	b	29158 <fb_scope_table_remove@@Base+0x1d4>
   29148:	ldrb	ip, [r2, #1]!
   2914c:	ldrb	r0, [r1, #1]!
   29150:	cmp	ip, r0
   29154:	bne	291a4 <fb_scope_table_remove@@Base+0x220>
   29158:	add	r3, r3, #1
   2915c:	cmp	r3, lr
   29160:	bne	29148 <fb_scope_table_remove@@Base+0x1c4>
   29164:	cmp	lr, fp
   29168:	beq	2925c <fb_scope_table_remove@@Base+0x2d8>
   2916c:	ldrb	r3, [sl, r3]
   29170:	cmp	r3, #46	; 0x2e
   29174:	bne	291a4 <fb_scope_table_remove@@Base+0x220>
   29178:	ldr	r9, [r9]
   2917c:	mvn	r3, lr
   29180:	cmp	r9, #0
   29184:	add	lr, lr, #1
   29188:	add	fp, fp, r3
   2918c:	add	sl, sl, lr
   29190:	beq	291a4 <fb_scope_table_remove@@Base+0x220>
   29194:	ldr	r3, [r9, #4]
   29198:	ldm	r3, {r2, lr}
   2919c:	cmp	lr, fp
   291a0:	bls	29124 <fb_scope_table_remove@@Base+0x1a0>
   291a4:	ldr	r3, [sp, #4]
   291a8:	and	r5, r3, r4
   291ac:	add	r4, r4, #1
   291b0:	ldr	r6, [r8, r5, lsl #2]
   291b4:	add	r5, r8, r5, lsl #2
   291b8:	cmp	r6, #0
   291bc:	bne	290f0 <fb_scope_table_remove@@Base+0x16c>
   291c0:	mov	r0, r6
   291c4:	add	sp, sp, #20
   291c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   291cc:	ldr	sl, [sp, #8]
   291d0:	mov	fp, r7
   291d4:	b	29218 <fb_scope_table_remove@@Base+0x294>
   291d8:	ldr	r0, [r9, #4]
   291dc:	ldr	r1, [sl, #4]
   291e0:	ldr	r3, [r0, #4]
   291e4:	ldr	ip, [r1, #4]
   291e8:	mov	r2, r3
   291ec:	cmp	r3, ip
   291f0:	bne	291a4 <fb_scope_table_remove@@Base+0x220>
   291f4:	ldr	r1, [r1]
   291f8:	ldr	r0, [r0]
   291fc:	bl	14020 <strncmp@plt>
   29200:	cmp	r0, #0
   29204:	bne	291a4 <fb_scope_table_remove@@Base+0x220>
   29208:	adds	fp, fp, #1
   2920c:	ldr	r9, [r9]
   29210:	ldr	sl, [sl]
   29214:	beq	29260 <fb_scope_table_remove@@Base+0x2dc>
   29218:	adds	r2, r9, #0
   2921c:	movne	r2, #1
   29220:	adds	r3, sl, #0
   29224:	movne	r3, #1
   29228:	tst	r2, r3
   2922c:	bne	291d8 <fb_scope_table_remove@@Base+0x254>
   29230:	orrs	r3, r2, r3
   29234:	bne	291a4 <fb_scope_table_remove@@Base+0x220>
   29238:	ldr	r1, [sp, #12]
   2923c:	mov	r2, #2
   29240:	mov	r0, r6
   29244:	ldr	r3, [r1, #8]
   29248:	str	r2, [r5]
   2924c:	sub	r3, r3, #1
   29250:	str	r3, [r1, #8]
   29254:	add	sp, sp, #20
   29258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2925c:	ldr	r9, [r9]
   29260:	clz	r9, r9
   29264:	lsr	r9, r9, #5
   29268:	cmp	r9, #0
   2926c:	bne	29238 <fb_scope_table_remove@@Base+0x2b4>
   29270:	b	291a4 <fb_scope_table_remove@@Base+0x220>
   29274:	mov	r3, lr
   29278:	b	29164 <fb_scope_table_remove@@Base+0x1e0>
   2927c:	cmp	r1, #0
   29280:	moveq	r4, r1
   29284:	mov	r3, r1
   29288:	moveq	r5, r4
   2928c:	beq	290cc <fb_scope_table_remove@@Base+0x148>
   29290:	mov	ip, r3
   29294:	ldr	r5, [pc, #148]	; 29330 <fb_scope_table_remove@@Base+0x3ac>
   29298:	ldr	r2, [ip, #4]
   2929c:	ldr	r7, [pc, #144]	; 29334 <fb_scope_table_remove@@Base+0x3b0>
   292a0:	ldr	r6, [pc, #144]	; 29338 <fb_scope_table_remove@@Base+0x3b4>
   292a4:	ldm	r2, {r0, r3}
   292a8:	mov	lr, fp
   292ac:	mov	r4, #0
   292b0:	subs	r3, r3, #1
   292b4:	beq	29320 <fb_scope_table_remove@@Base+0x39c>
   292b8:	ldrb	r2, [r0]
   292bc:	add	r1, r0, #1
   292c0:	cmp	r2, #0
   292c4:	beq	29320 <fb_scope_table_remove@@Base+0x39c>
   292c8:	add	r0, r0, r3
   292cc:	mov	r3, r5
   292d0:	b	292e0 <fb_scope_table_remove@@Base+0x35c>
   292d4:	ldrb	r2, [r1], #1
   292d8:	cmp	r2, #0
   292dc:	beq	292f0 <fb_scope_table_remove@@Base+0x36c>
   292e0:	add	r3, r3, r3, lsl #5
   292e4:	cmp	r1, r0
   292e8:	eor	r3, r3, r2
   292ec:	bne	292d4 <fb_scope_table_remove@@Base+0x350>
   292f0:	eor	r4, r4, r7
   292f4:	eor	r3, r3, r4
   292f8:	adds	lr, lr, #1
   292fc:	mul	r4, r6, r3
   29300:	ldr	ip, [ip]
   29304:	beq	290c0 <fb_scope_table_remove@@Base+0x13c>
   29308:	cmp	ip, #0
   2930c:	beq	290c0 <fb_scope_table_remove@@Base+0x13c>
   29310:	ldr	r2, [ip, #4]
   29314:	ldm	r2, {r0, r3}
   29318:	subs	r3, r3, #1
   2931c:	bne	292b8 <fb_scope_table_remove@@Base+0x334>
   29320:	mov	r3, r5
   29324:	b	292f0 <fb_scope_table_remove@@Base+0x36c>
   29328:	mov	r6, r3
   2932c:	b	291c0 <fb_scope_table_remove@@Base+0x23c>
   29330:	svccs	0x00692e57
   29334:	svccs	0x00693b52
   29338:			; <UNDEFINED> instruction: 0x9e3779b1

0002933c <fb_scope_table_remove_item@@Base>:
   2933c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29340:	sub	sp, sp, #12
   29344:	ldr	r8, [r0]
   29348:	ldr	r7, [r1]
   2934c:	cmp	r8, #0
   29350:	beq	294e0 <fb_scope_table_remove_item@@Base+0x1a4>
   29354:	ldr	r9, [r0, #12]
   29358:	cmp	r7, #0
   2935c:	sub	r9, r9, #1
   29360:	beq	294e8 <fb_scope_table_remove_item@@Base+0x1ac>
   29364:	ldr	r4, [pc, #392]	; 294f4 <fb_scope_table_remove_item@@Base+0x1b8>
   29368:	ldr	sl, [pc, #392]	; 294f8 <fb_scope_table_remove_item@@Base+0x1bc>
   2936c:	ldr	r5, [pc, #392]	; 294fc <fb_scope_table_remove_item@@Base+0x1c0>
   29370:	mov	lr, r7
   29374:	mov	r6, #0
   29378:	ldr	r2, [lr, #4]
   2937c:	ldr	r3, [r2, #4]
   29380:	ldr	ip, [r2]
   29384:	subs	r3, r3, #1
   29388:	beq	294ac <fb_scope_table_remove_item@@Base+0x170>
   2938c:	ldrb	r2, [ip]
   29390:	add	r1, ip, #1
   29394:	cmp	r2, #0
   29398:	beq	294ac <fb_scope_table_remove_item@@Base+0x170>
   2939c:	add	ip, ip, r3
   293a0:	mov	r3, r4
   293a4:	b	293b4 <fb_scope_table_remove_item@@Base+0x78>
   293a8:	ldrb	r2, [r1], #1
   293ac:	cmp	r2, #0
   293b0:	beq	293c4 <fb_scope_table_remove_item@@Base+0x88>
   293b4:	add	r3, r3, r3, lsl #5
   293b8:	cmp	r1, ip
   293bc:	eor	r3, r3, r2
   293c0:	bne	293a8 <fb_scope_table_remove_item@@Base+0x6c>
   293c4:	eor	r6, r6, sl
   293c8:	ldr	lr, [lr]
   293cc:	eor	r6, r6, r3
   293d0:	cmp	lr, #0
   293d4:	mul	r6, r5, r6
   293d8:	bne	29378 <fb_scope_table_remove_item@@Base+0x3c>
   293dc:	and	r5, r9, r6
   293e0:	lsl	r5, r5, #2
   293e4:	ldr	sl, [r8, r5]
   293e8:	add	r5, r8, r5
   293ec:	cmp	sl, #0
   293f0:	beq	294a0 <fb_scope_table_remove_item@@Base+0x164>
   293f4:	add	r6, r6, #1
   293f8:	str	r0, [sp, #4]
   293fc:	cmp	sl, #2
   29400:	beq	29488 <fb_scope_table_remove_item@@Base+0x14c>
   29404:	ldr	r4, [sl]
   29408:	adds	r2, r7, #0
   2940c:	movne	r2, #1
   29410:	adds	r1, r4, #0
   29414:	movne	r1, #1
   29418:	tst	r1, r2
   2941c:	beq	294b4 <fb_scope_table_remove_item@@Base+0x178>
   29420:	ldr	r0, [r4, #4]
   29424:	ldr	r1, [r7, #4]
   29428:	ldr	r2, [r0, #4]
   2942c:	ldr	r3, [r1, #4]
   29430:	cmp	r2, r3
   29434:	bne	29488 <fb_scope_table_remove_item@@Base+0x14c>
   29438:	mov	fp, r7
   2943c:	ldr	r1, [r1]
   29440:	ldr	r0, [r0]
   29444:	bl	14020 <strncmp@plt>
   29448:	cmp	r0, #0
   2944c:	bne	29488 <fb_scope_table_remove_item@@Base+0x14c>
   29450:	ldr	r4, [r4]
   29454:	ldr	fp, [fp]
   29458:	adds	r1, r4, #0
   2945c:	movne	r1, #1
   29460:	adds	r2, fp, #0
   29464:	movne	r2, #1
   29468:	tst	r1, r2
   2946c:	beq	294b4 <fb_scope_table_remove_item@@Base+0x178>
   29470:	ldr	r0, [r4, #4]
   29474:	ldr	r1, [fp, #4]
   29478:	ldr	r2, [r0, #4]
   2947c:	ldr	ip, [r1, #4]
   29480:	cmp	r2, ip
   29484:	beq	2943c <fb_scope_table_remove_item@@Base+0x100>
   29488:	and	r5, r9, r6
   2948c:	add	r6, r6, #1
   29490:	ldr	sl, [r8, r5, lsl #2]
   29494:	add	r5, r8, r5, lsl #2
   29498:	cmp	sl, #0
   2949c:	bne	293fc <fb_scope_table_remove_item@@Base+0xc0>
   294a0:	mov	r0, sl
   294a4:	add	sp, sp, #12
   294a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   294ac:	mov	r3, r4
   294b0:	b	293c4 <fb_scope_table_remove_item@@Base+0x88>
   294b4:	orrs	r3, r1, r2
   294b8:	bne	29488 <fb_scope_table_remove_item@@Base+0x14c>
   294bc:	ldr	r1, [sp, #4]
   294c0:	mov	r2, #2
   294c4:	mov	r0, sl
   294c8:	ldr	r3, [r1, #8]
   294cc:	str	r2, [r5]
   294d0:	sub	r3, r3, #1
   294d4:	str	r3, [r1, #8]
   294d8:	add	sp, sp, #12
   294dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   294e0:	mov	sl, r8
   294e4:	b	294a0 <fb_scope_table_remove_item@@Base+0x164>
   294e8:	mov	r5, r7
   294ec:	mov	r6, r7
   294f0:	b	293e4 <fb_scope_table_remove_item@@Base+0xa8>
   294f4:	svccs	0x00692e57
   294f8:	svccs	0x00693b52
   294fc:			; <UNDEFINED> instruction: 0x9e3779b1

00029500 <fb_scope_table_visit@@Base>:
   29500:	ldr	r3, [r0, #12]
   29504:	push	{r4, r5, r6, r7, r8, lr}
   29508:	cmp	r3, #0
   2950c:	ldr	r5, [r0]
   29510:	popeq	{r4, r5, r6, r7, r8, pc}
   29514:	mov	r7, r2
   29518:	mov	r6, r1
   2951c:	mov	r8, r0
   29520:	sub	r5, r5, #4
   29524:	mov	r4, #0
   29528:	b	29534 <fb_scope_table_visit@@Base+0x34>
   2952c:	cmp	r4, r3
   29530:	bcs	2955c <fb_scope_table_visit@@Base+0x5c>
   29534:	ldr	r1, [r5, #4]!
   29538:	add	r4, r4, #1
   2953c:	cmp	r1, #0
   29540:	cmpne	r1, #2
   29544:	beq	2952c <fb_scope_table_visit@@Base+0x2c>
   29548:	mov	r0, r7
   2954c:	blx	r6
   29550:	ldr	r3, [r8, #12]
   29554:	cmp	r4, r3
   29558:	bcc	29534 <fb_scope_table_visit@@Base+0x34>
   2955c:	pop	{r4, r5, r6, r7, r8, pc}
   29560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29564:	sub	sp, sp, #36	; 0x24
   29568:	cmp	r3, #0
   2956c:	str	r3, [sp, #12]
   29570:	str	r1, [sp, #16]
   29574:	beq	29760 <fb_scope_table_visit@@Base+0x260>
   29578:	cmp	r3, #2
   2957c:	beq	29730 <fb_scope_table_visit@@Base+0x230>
   29580:	cmp	r3, #1
   29584:	beq	2971c <fb_scope_table_visit@@Base+0x21c>
   29588:	ldr	r8, [r0, #12]
   2958c:	mov	r3, #179	; 0xb3
   29590:	ldr	r1, [r0, #8]
   29594:	mul	r3, r3, r8
   29598:	mov	r9, r2
   2959c:	mov	sl, r0
   295a0:	cmp	r1, r3, lsr #8
   295a4:	bcc	295bc <fb_scope_table_visit@@Base+0xbc>
   295a8:	lsl	r1, r1, #1
   295ac:	bl	29798 <fb_scope_table_visit@@Base+0x298>
   295b0:	cmp	r0, #0
   295b4:	bne	29744 <fb_scope_table_visit@@Base+0x244>
   295b8:	ldr	r8, [sl, #12]
   295bc:	ldr	r2, [pc, #432]	; 29774 <fb_scope_table_visit@@Base+0x274>
   295c0:	add	r3, sp, #24
   295c4:	ldr	r0, [sp, #16]
   295c8:	stm	sp, {r2, r3}
   295cc:	mov	r3, #0
   295d0:	mov	r2, r9
   295d4:	ldr	r7, [sl]
   295d8:	bl	3e060 <cmetrohash64_1@@Base>
   295dc:	ldr	r3, [sp, #72]	; 0x48
   295e0:	ldr	r6, [sp, #24]
   295e4:	sub	r3, r3, #2
   295e8:	sub	r8, r8, #1
   295ec:	cmp	r3, #1
   295f0:	and	r4, r8, r6
   295f4:	bls	296c8 <fb_scope_table_visit@@Base+0x1c8>
   295f8:	ldr	r5, [r7, r4, lsl #2]
   295fc:	add	r4, r7, r4, lsl #2
   29600:	cmp	r5, #0
   29604:	moveq	fp, r4
   29608:	beq	296a4 <fb_scope_table_visit@@Base+0x1a4>
   2960c:	str	sl, [sp, #20]
   29610:	add	r6, r6, #1
   29614:	mov	sl, r5
   29618:	mov	fp, #0
   2961c:	ldr	r5, [sp, #16]
   29620:	b	2963c <fb_scope_table_visit@@Base+0x13c>
   29624:	and	r4, r8, r6
   29628:	add	r6, r6, #1
   2962c:	ldr	sl, [r7, r4, lsl #2]
   29630:	add	r4, r7, r4, lsl #2
   29634:	cmp	sl, #0
   29638:	beq	29698 <fb_scope_table_visit@@Base+0x198>
   2963c:	cmp	sl, #2
   29640:	beq	2968c <fb_scope_table_visit@@Base+0x18c>
   29644:	ldr	r2, [sl, #148]	; 0x94
   29648:	cmp	r9, r2
   2964c:	bne	29624 <fb_scope_table_visit@@Base+0x124>
   29650:	mov	r2, r9
   29654:	ldr	r1, [sl, #144]	; 0x90
   29658:	mov	r0, r5
   2965c:	bl	13ef4 <memcmp@plt>
   29660:	cmp	r0, #0
   29664:	bne	29624 <fb_scope_table_visit@@Base+0x124>
   29668:	ldr	r3, [sp, #72]	; 0x48
   2966c:	mov	r5, sl
   29670:	cmp	r3, #0
   29674:	bne	296bc <fb_scope_table_visit@@Base+0x1bc>
   29678:	ldr	r3, [sp, #12]
   2967c:	mov	r0, r5
   29680:	str	r3, [r4]
   29684:	add	sp, sp, #36	; 0x24
   29688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2968c:	cmp	fp, #0
   29690:	moveq	fp, r4
   29694:	b	29624 <fb_scope_table_visit@@Base+0x124>
   29698:	cmp	fp, #0
   2969c:	ldr	sl, [sp, #20]
   296a0:	moveq	fp, r4
   296a4:	ldr	r2, [sl, #8]
   296a8:	ldr	r3, [sp, #12]
   296ac:	mov	r5, #0
   296b0:	add	r2, r2, #1
   296b4:	str	r2, [sl, #8]
   296b8:	str	r3, [fp]
   296bc:	mov	r0, r5
   296c0:	add	sp, sp, #36	; 0x24
   296c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   296c8:	ldr	r2, [r7, r4, lsl #2]
   296cc:	ldr	r3, [sl, #8]
   296d0:	cmp	r2, #0
   296d4:	cmpne	r2, #2
   296d8:	add	r3, r3, #1
   296dc:	str	r3, [sl, #8]
   296e0:	add	r4, r7, r4, lsl #2
   296e4:	beq	2970c <fb_scope_table_visit@@Base+0x20c>
   296e8:	add	r6, r6, #1
   296ec:	and	r3, r8, r6
   296f0:	add	r6, r6, #1
   296f4:	ldr	r2, [r7, r3, lsl #2]
   296f8:	add	r3, r7, r3, lsl #2
   296fc:	cmp	r2, #0
   29700:	cmpne	r2, #2
   29704:	bne	296ec <fb_scope_table_visit@@Base+0x1ec>
   29708:	mov	r4, r3
   2970c:	ldr	r3, [sp, #12]
   29710:	mov	r5, #0
   29714:	str	r3, [r4]
   29718:	b	296bc <fb_scope_table_visit@@Base+0x1bc>
   2971c:	ldr	r3, [pc, #84]	; 29778 <fb_scope_table_visit@@Base+0x278>
   29720:	mov	r2, #116	; 0x74
   29724:	ldr	r1, [pc, #80]	; 2977c <fb_scope_table_visit@@Base+0x27c>
   29728:	ldr	r0, [pc, #80]	; 29780 <fb_scope_table_visit@@Base+0x280>
   2972c:	bl	14038 <__assert_fail@plt>
   29730:	ldr	r3, [pc, #64]	; 29778 <fb_scope_table_visit@@Base+0x278>
   29734:	mov	r2, #115	; 0x73
   29738:	ldr	r1, [pc, #60]	; 2977c <fb_scope_table_visit@@Base+0x27c>
   2973c:	ldr	r0, [pc, #64]	; 29784 <fb_scope_table_visit@@Base+0x284>
   29740:	bl	14038 <__assert_fail@plt>
   29744:	ldr	r3, [pc, #60]	; 29788 <fb_scope_table_visit@@Base+0x288>
   29748:	ldr	r2, [pc, #60]	; 2978c <fb_scope_table_visit@@Base+0x28c>
   2974c:	ldr	r1, [pc, #60]	; 29790 <fb_scope_table_visit@@Base+0x290>
   29750:	ldr	r0, [r3]
   29754:	bl	13f84 <fprintf@plt>
   29758:	mov	r0, #1
   2975c:	bl	13f6c <exit@plt>
   29760:	ldr	r3, [pc, #16]	; 29778 <fb_scope_table_visit@@Base+0x278>
   29764:	mov	r2, #114	; 0x72
   29768:	ldr	r1, [pc, #12]	; 2977c <fb_scope_table_visit@@Base+0x27c>
   2976c:	ldr	r0, [pc, #32]	; 29794 <fb_scope_table_visit@@Base+0x294>
   29770:	bl	14038 <__assert_fail@plt>
   29774:	svccs	0x00693b52
   29778:	andeq	r8, r5, r8, ror #19
   2977c:			; <UNDEFINED> instruction: 0x000588bc
   29780:	andeq	r8, r5, ip, lsr r9
   29784:	andeq	r8, r5, r4, lsr #18
   29788:	andeq	sp, r6, r8, lsr #1
   2978c:	andeq	r8, r5, r4, asr r9
   29790:	andeq	r8, r5, r8, lsl #19
   29794:	andeq	r8, r5, ip, lsl #18
   29798:	ldr	r3, [r0, #8]
   2979c:	push	{r4, r5, r6, r7, r8, lr}
   297a0:	cmp	r1, r3
   297a4:	movcc	r1, r3
   297a8:	cmp	r1, #2
   297ac:	sub	sp, sp, #24
   297b0:	mov	r6, r0
   297b4:	ldr	r7, [r0]
   297b8:	mov	r5, #4
   297bc:	bls	297d4 <fb_scope_table_visit@@Base+0x2d4>
   297c0:	mov	r2, #179	; 0xb3
   297c4:	lsl	r5, r5, #1
   297c8:	mul	r3, r2, r5
   297cc:	cmp	r1, r3, lsr #8
   297d0:	bhi	297c4 <fb_scope_table_visit@@Base+0x2c4>
   297d4:	mov	r1, #4
   297d8:	mov	r0, r5
   297dc:	bl	13ea0 <calloc@plt>
   297e0:	cmp	r0, #0
   297e4:	str	r0, [sp, #8]
   297e8:	beq	29898 <fb_scope_table_visit@@Base+0x398>
   297ec:	ldr	r2, [r6, #12]
   297f0:	mov	r4, #0
   297f4:	cmp	r2, r4
   297f8:	str	r5, [sp, #20]
   297fc:	str	r4, [sp, #12]
   29800:	str	r4, [sp, #16]
   29804:	beq	2988c <fb_scope_table_visit@@Base+0x38c>
   29808:	sub	r5, r7, #4
   2980c:	mov	r8, #3
   29810:	add	r7, sp, #8
   29814:	b	29820 <fb_scope_table_visit@@Base+0x320>
   29818:	cmp	r4, r2
   2981c:	bcs	29854 <fb_scope_table_visit@@Base+0x354>
   29820:	ldr	r3, [r5, #4]!
   29824:	add	r4, r4, #1
   29828:	cmp	r3, #0
   2982c:	cmpne	r3, #2
   29830:	beq	29818 <fb_scope_table_visit@@Base+0x318>
   29834:	ldr	r2, [r3, #148]	; 0x94
   29838:	ldr	r1, [r3, #144]	; 0x90
   2983c:	mov	r0, r7
   29840:	str	r8, [sp]
   29844:	bl	29560 <fb_scope_table_visit@@Base+0x60>
   29848:	ldr	r2, [r6, #12]
   2984c:	cmp	r4, r2
   29850:	bcc	29820 <fb_scope_table_visit@@Base+0x320>
   29854:	ldr	r0, [r6]
   29858:	cmp	r0, #0
   2985c:	beq	29864 <fb_scope_table_visit@@Base+0x364>
   29860:	bl	13ed0 <free@plt>
   29864:	mov	ip, r7
   29868:	mov	lr, #0
   2986c:	ldm	ip!, {r0, r1, r2, r3}
   29870:	str	r0, [r6]
   29874:	str	r1, [r6, #4]
   29878:	str	r2, [r6, #8]
   2987c:	str	r3, [r6, #12]
   29880:	mov	r0, lr
   29884:	add	sp, sp, #24
   29888:	pop	{r4, r5, r6, r7, r8, pc}
   2988c:	mov	r0, r7
   29890:	add	r7, sp, #8
   29894:	b	29858 <fb_scope_table_visit@@Base+0x358>
   29898:	mvn	lr, #0
   2989c:	b	29880 <fb_scope_table_visit@@Base+0x380>

000298a0 <fb_schema_table_clear@@Base>:
   298a0:	push	{r4, lr}
   298a4:	mov	r4, r0
   298a8:	ldr	r0, [r0]
   298ac:	cmp	r0, #0
   298b0:	beq	298b8 <fb_schema_table_clear@@Base+0x18>
   298b4:	bl	13ed0 <free@plt>
   298b8:	mov	r3, #0
   298bc:	str	r3, [r4]
   298c0:	str	r3, [r4, #4]
   298c4:	str	r3, [r4, #8]
   298c8:	str	r3, [r4, #12]
   298cc:	pop	{r4, pc}

000298d0 <fb_schema_table_destroy@@Base>:
   298d0:	push	{r4, r5, r6, r7, r8, lr}
   298d4:	subs	r7, r1, #0
   298d8:	mov	r6, r0
   298dc:	beq	29930 <fb_schema_table_destroy@@Base+0x60>
   298e0:	ldr	r3, [r0, #12]
   298e4:	ldr	r0, [r0]
   298e8:	cmp	r3, #0
   298ec:	beq	29934 <fb_schema_table_destroy@@Base+0x64>
   298f0:	mov	r8, r2
   298f4:	sub	r5, r0, #4
   298f8:	mov	r4, #0
   298fc:	b	29908 <fb_schema_table_destroy@@Base+0x38>
   29900:	cmp	r4, r3
   29904:	bcs	29930 <fb_schema_table_destroy@@Base+0x60>
   29908:	ldr	r1, [r5, #4]!
   2990c:	add	r4, r4, #1
   29910:	cmp	r1, #0
   29914:	cmpne	r1, #2
   29918:	beq	29900 <fb_schema_table_destroy@@Base+0x30>
   2991c:	mov	r0, r8
   29920:	blx	r7
   29924:	ldr	r3, [r6, #12]
   29928:	cmp	r4, r3
   2992c:	bcc	29908 <fb_schema_table_destroy@@Base+0x38>
   29930:	ldr	r0, [r6]
   29934:	cmp	r0, #0
   29938:	beq	29940 <fb_schema_table_destroy@@Base+0x70>
   2993c:	bl	13ed0 <free@plt>
   29940:	mov	r3, #0
   29944:	str	r3, [r6]
   29948:	str	r3, [r6, #4]
   2994c:	str	r3, [r6, #8]
   29950:	str	r3, [r6, #12]
   29954:	pop	{r4, r5, r6, r7, r8, pc}

00029958 <fb_schema_table_init@@Base>:
   29958:	cmp	r1, #2
   2995c:	push	{r4, r5, r6, lr}
   29960:	mov	r4, #4
   29964:	mov	r5, r0
   29968:	bls	29980 <fb_schema_table_init@@Base+0x28>
   2996c:	mov	r2, #179	; 0xb3
   29970:	lsl	r4, r4, #1
   29974:	mul	r3, r2, r4
   29978:	cmp	r1, r3, lsr #8
   2997c:	bhi	29970 <fb_schema_table_init@@Base+0x18>
   29980:	mov	r1, #4
   29984:	mov	r0, r4
   29988:	bl	13ea0 <calloc@plt>
   2998c:	cmp	r0, #0
   29990:	str	r0, [r5]
   29994:	movne	r0, #0
   29998:	strne	r4, [r5, #12]
   2999c:	strne	r0, [r5, #4]
   299a0:	strne	r0, [r5, #8]
   299a4:	mvneq	r0, #0
   299a8:	pop	{r4, r5, r6, pc}

000299ac <fb_schema_table_resize@@Base>:
   299ac:	b	29798 <fb_scope_table_visit@@Base+0x298>

000299b0 <fb_schema_table_insert@@Base>:
   299b0:	b	29560 <fb_scope_table_visit@@Base+0x60>

000299b4 <fb_schema_table_insert_item@@Base>:
   299b4:	push	{lr}		; (str lr, [sp, #-4]!)
   299b8:	sub	sp, sp, #12
   299bc:	mov	r3, r1
   299c0:	str	r2, [sp]
   299c4:	ldr	r2, [r1, #148]	; 0x94
   299c8:	ldr	r1, [r1, #144]	; 0x90
   299cc:	bl	29560 <fb_scope_table_visit@@Base+0x60>
   299d0:	add	sp, sp, #12
   299d4:	pop	{pc}		; (ldr pc, [sp], #4)

000299d8 <fb_schema_table_find@@Base>:
   299d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   299dc:	sub	sp, sp, #20
   299e0:	ldr	r8, [r0]
   299e4:	cmp	r8, #0
   299e8:	beq	29a7c <fb_schema_table_find@@Base+0xa4>
   299ec:	mov	r9, r1
   299f0:	ldr	r1, [pc, #148]	; 29a8c <fb_schema_table_find@@Base+0xb4>
   299f4:	add	r3, sp, #8
   299f8:	ldr	r7, [r0, #12]
   299fc:	stm	sp, {r1, r3}
   29a00:	mov	r0, r9
   29a04:	mov	r3, #0
   29a08:	mov	r6, r2
   29a0c:	bl	3e060 <cmetrohash64_1@@Base>
   29a10:	ldr	r5, [sp, #8]
   29a14:	sub	r7, r7, #1
   29a18:	and	r3, r7, r5
   29a1c:	ldr	r4, [r8, r3, lsl #2]
   29a20:	cmp	r4, #0
   29a24:	beq	29a7c <fb_schema_table_find@@Base+0xa4>
   29a28:	add	r5, r5, #1
   29a2c:	b	29a44 <fb_schema_table_find@@Base+0x6c>
   29a30:	and	r3, r7, r5
   29a34:	add	r5, r5, #1
   29a38:	ldr	r4, [r8, r3, lsl #2]
   29a3c:	cmp	r4, #0
   29a40:	beq	29a7c <fb_schema_table_find@@Base+0xa4>
   29a44:	cmp	r4, #2
   29a48:	beq	29a30 <fb_schema_table_find@@Base+0x58>
   29a4c:	ldr	r3, [r4, #148]	; 0x94
   29a50:	cmp	r6, r3
   29a54:	bne	29a30 <fb_schema_table_find@@Base+0x58>
   29a58:	mov	r2, r6
   29a5c:	ldr	r1, [r4, #144]	; 0x90
   29a60:	mov	r0, r9
   29a64:	bl	13ef4 <memcmp@plt>
   29a68:	cmp	r0, #0
   29a6c:	bne	29a30 <fb_schema_table_find@@Base+0x58>
   29a70:	mov	r0, r4
   29a74:	add	sp, sp, #20
   29a78:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29a7c:	mov	r4, #0
   29a80:	mov	r0, r4
   29a84:	add	sp, sp, #20
   29a88:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29a8c:	svccs	0x00693b52

00029a90 <fb_schema_table_find_item@@Base>:
   29a90:	push	{r4, r5, r6, r7, r8, r9, lr}
   29a94:	sub	sp, sp, #20
   29a98:	ldr	r8, [r0]
   29a9c:	ldr	r9, [r1, #144]	; 0x90
   29aa0:	cmp	r8, #0
   29aa4:	ldr	r7, [r1, #148]	; 0x94
   29aa8:	beq	29b38 <fb_schema_table_find_item@@Base+0xa8>
   29aac:	ldr	r2, [pc, #148]	; 29b48 <fb_schema_table_find_item@@Base+0xb8>
   29ab0:	add	r3, sp, #8
   29ab4:	ldr	r6, [r0, #12]
   29ab8:	stm	sp, {r2, r3}
   29abc:	mov	r0, r9
   29ac0:	mov	r3, #0
   29ac4:	mov	r2, r7
   29ac8:	bl	3e060 <cmetrohash64_1@@Base>
   29acc:	ldr	r5, [sp, #8]
   29ad0:	sub	r6, r6, #1
   29ad4:	and	r3, r6, r5
   29ad8:	ldr	r4, [r8, r3, lsl #2]
   29adc:	cmp	r4, #0
   29ae0:	beq	29b38 <fb_schema_table_find_item@@Base+0xa8>
   29ae4:	add	r5, r5, #1
   29ae8:	b	29b00 <fb_schema_table_find_item@@Base+0x70>
   29aec:	and	r3, r6, r5
   29af0:	add	r5, r5, #1
   29af4:	ldr	r4, [r8, r3, lsl #2]
   29af8:	cmp	r4, #0
   29afc:	beq	29b38 <fb_schema_table_find_item@@Base+0xa8>
   29b00:	cmp	r4, #2
   29b04:	beq	29aec <fb_schema_table_find_item@@Base+0x5c>
   29b08:	ldr	r3, [r4, #148]	; 0x94
   29b0c:	cmp	r7, r3
   29b10:	bne	29aec <fb_schema_table_find_item@@Base+0x5c>
   29b14:	mov	r2, r7
   29b18:	ldr	r1, [r4, #144]	; 0x90
   29b1c:	mov	r0, r9
   29b20:	bl	13ef4 <memcmp@plt>
   29b24:	cmp	r0, #0
   29b28:	bne	29aec <fb_schema_table_find_item@@Base+0x5c>
   29b2c:	mov	r0, r4
   29b30:	add	sp, sp, #20
   29b34:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29b38:	mov	r4, #0
   29b3c:	mov	r0, r4
   29b40:	add	sp, sp, #20
   29b44:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29b48:	svccs	0x00693b52

00029b4c <fb_schema_table_remove@@Base>:
   29b4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29b50:	sub	sp, sp, #20
   29b54:	ldr	r5, [r0]
   29b58:	cmp	r5, #0
   29b5c:	beq	29c10 <fb_schema_table_remove@@Base+0xc4>
   29b60:	mov	r8, r1
   29b64:	ldr	r1, [pc, #180]	; 29c20 <fb_schema_table_remove@@Base+0xd4>
   29b68:	add	r3, sp, #8
   29b6c:	ldr	r7, [r0, #12]
   29b70:	mov	r9, r0
   29b74:	stm	sp, {r1, r3}
   29b78:	mov	r0, r8
   29b7c:	mov	r3, #0
   29b80:	mov	r6, r2
   29b84:	bl	3e060 <cmetrohash64_1@@Base>
   29b88:	ldr	sl, [sp, #8]
   29b8c:	sub	r7, r7, #1
   29b90:	and	r3, r7, sl
   29b94:	ldr	fp, [r5, r3, lsl #2]
   29b98:	add	r4, r5, r3, lsl #2
   29b9c:	cmp	fp, #0
   29ba0:	beq	29c10 <fb_schema_table_remove@@Base+0xc4>
   29ba4:	add	sl, sl, #1
   29ba8:	b	29bc4 <fb_schema_table_remove@@Base+0x78>
   29bac:	and	r3, r7, sl
   29bb0:	add	sl, sl, #1
   29bb4:	ldr	fp, [r5, r3, lsl #2]
   29bb8:	add	r4, r5, r3, lsl #2
   29bbc:	cmp	fp, #0
   29bc0:	beq	29c10 <fb_schema_table_remove@@Base+0xc4>
   29bc4:	cmp	fp, #2
   29bc8:	beq	29bac <fb_schema_table_remove@@Base+0x60>
   29bcc:	ldr	r3, [fp, #148]	; 0x94
   29bd0:	cmp	r6, r3
   29bd4:	bne	29bac <fb_schema_table_remove@@Base+0x60>
   29bd8:	mov	r2, r6
   29bdc:	ldr	r1, [fp, #144]	; 0x90
   29be0:	mov	r0, r8
   29be4:	bl	13ef4 <memcmp@plt>
   29be8:	cmp	r0, #0
   29bec:	bne	29bac <fb_schema_table_remove@@Base+0x60>
   29bf0:	ldr	r3, [r9, #8]
   29bf4:	mov	r2, #2
   29bf8:	sub	r3, r3, #1
   29bfc:	str	r2, [r4]
   29c00:	mov	r0, fp
   29c04:	str	r3, [r9, #8]
   29c08:	add	sp, sp, #20
   29c0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29c10:	mov	fp, #0
   29c14:	mov	r0, fp
   29c18:	add	sp, sp, #20
   29c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29c20:	svccs	0x00693b52

00029c24 <fb_schema_table_remove_item@@Base>:
   29c24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29c28:	sub	sp, sp, #20
   29c2c:	ldr	r5, [r0]
   29c30:	ldr	r9, [r1, #144]	; 0x90
   29c34:	cmp	r5, #0
   29c38:	ldr	r7, [r1, #148]	; 0x94
   29c3c:	beq	29cec <fb_schema_table_remove_item@@Base+0xc8>
   29c40:	ldr	r2, [pc, #180]	; 29cfc <fb_schema_table_remove_item@@Base+0xd8>
   29c44:	add	r3, sp, #8
   29c48:	ldr	r6, [r0, #12]
   29c4c:	mov	r8, r0
   29c50:	stm	sp, {r2, r3}
   29c54:	mov	r0, r9
   29c58:	mov	r3, #0
   29c5c:	mov	r2, r7
   29c60:	bl	3e060 <cmetrohash64_1@@Base>
   29c64:	ldr	sl, [sp, #8]
   29c68:	sub	r6, r6, #1
   29c6c:	and	r3, r6, sl
   29c70:	ldr	fp, [r5, r3, lsl #2]
   29c74:	add	r4, r5, r3, lsl #2
   29c78:	cmp	fp, #0
   29c7c:	beq	29cec <fb_schema_table_remove_item@@Base+0xc8>
   29c80:	add	sl, sl, #1
   29c84:	b	29ca0 <fb_schema_table_remove_item@@Base+0x7c>
   29c88:	and	r3, r6, sl
   29c8c:	add	sl, sl, #1
   29c90:	ldr	fp, [r5, r3, lsl #2]
   29c94:	add	r4, r5, r3, lsl #2
   29c98:	cmp	fp, #0
   29c9c:	beq	29cec <fb_schema_table_remove_item@@Base+0xc8>
   29ca0:	cmp	fp, #2
   29ca4:	beq	29c88 <fb_schema_table_remove_item@@Base+0x64>
   29ca8:	ldr	r3, [fp, #148]	; 0x94
   29cac:	cmp	r7, r3
   29cb0:	bne	29c88 <fb_schema_table_remove_item@@Base+0x64>
   29cb4:	mov	r2, r7
   29cb8:	ldr	r1, [fp, #144]	; 0x90
   29cbc:	mov	r0, r9
   29cc0:	bl	13ef4 <memcmp@plt>
   29cc4:	cmp	r0, #0
   29cc8:	bne	29c88 <fb_schema_table_remove_item@@Base+0x64>
   29ccc:	ldr	r3, [r8, #8]
   29cd0:	mov	r2, #2
   29cd4:	sub	r3, r3, #1
   29cd8:	str	r2, [r4]
   29cdc:	mov	r0, fp
   29ce0:	str	r3, [r8, #8]
   29ce4:	add	sp, sp, #20
   29ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29cec:	mov	fp, #0
   29cf0:	mov	r0, fp
   29cf4:	add	sp, sp, #20
   29cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29cfc:	svccs	0x00693b52

00029d00 <fb_schema_table_visit@@Base>:
   29d00:	ldr	r3, [r0, #12]
   29d04:	push	{r4, r5, r6, r7, r8, lr}
   29d08:	cmp	r3, #0
   29d0c:	ldr	r5, [r0]
   29d10:	popeq	{r4, r5, r6, r7, r8, pc}
   29d14:	mov	r7, r2
   29d18:	mov	r6, r1
   29d1c:	mov	r8, r0
   29d20:	sub	r5, r5, #4
   29d24:	mov	r4, #0
   29d28:	b	29d34 <fb_schema_table_visit@@Base+0x34>
   29d2c:	cmp	r4, r3
   29d30:	bcs	29d5c <fb_schema_table_visit@@Base+0x5c>
   29d34:	ldr	r1, [r5, #4]!
   29d38:	add	r4, r4, #1
   29d3c:	cmp	r1, #0
   29d40:	cmpne	r1, #2
   29d44:	beq	29d2c <fb_schema_table_visit@@Base+0x2c>
   29d48:	mov	r0, r7
   29d4c:	blx	r6
   29d50:	ldr	r3, [r8, #12]
   29d54:	cmp	r4, r3
   29d58:	bcc	29d34 <fb_schema_table_visit@@Base+0x34>
   29d5c:	pop	{r4, r5, r6, r7, r8, pc}

00029d60 <__flatcc_fb_copy_path_n@@Base>:
   29d60:	push	{r4, r5, r6, lr}
   29d64:	mov	r2, r1
   29d68:	mov	r4, r1
   29d6c:	mov	r1, #0
   29d70:	mov	r6, r0
   29d74:	bl	13fc0 <memchr@plt>
   29d78:	cmp	r0, #0
   29d7c:	subne	r4, r0, r6
   29d80:	add	r0, r4, #1
   29d84:	bl	13f3c <malloc@plt>
   29d88:	subs	r5, r0, #0
   29d8c:	beq	29da4 <__flatcc_fb_copy_path_n@@Base+0x44>
   29d90:	mov	r1, r6
   29d94:	mov	r2, r4
   29d98:	bl	13edc <memcpy@plt>
   29d9c:	mov	r3, #0
   29da0:	strb	r3, [r5, r4]
   29da4:	mov	r0, r5
   29da8:	pop	{r4, r5, r6, pc}

00029dac <__flatcc_fb_copy_path@@Base>:
   29dac:	push	{r4, r5, r6, lr}
   29db0:	mov	r6, r0
   29db4:	bl	13f78 <strlen@plt>
   29db8:	mov	r4, r0
   29dbc:	add	r0, r0, #1
   29dc0:	bl	13f3c <malloc@plt>
   29dc4:	subs	r5, r0, #0
   29dc8:	beq	29de0 <__flatcc_fb_copy_path@@Base+0x34>
   29dcc:	mov	r1, r6
   29dd0:	mov	r2, r4
   29dd4:	bl	13edc <memcpy@plt>
   29dd8:	mov	r3, #0
   29ddc:	strb	r3, [r5, r4]
   29de0:	mov	r0, r5
   29de4:	pop	{r4, r5, r6, pc}

00029de8 <__flatcc_fb_chomp@@Base>:
   29de8:	push	{r4, r5, r6, r7, r8, lr}
   29dec:	subs	r5, r2, #0
   29df0:	mov	r4, r1
   29df4:	beq	29e28 <__flatcc_fb_chomp@@Base+0x40>
   29df8:	mov	r7, r0
   29dfc:	mov	r0, r5
   29e00:	bl	13f78 <strlen@plt>
   29e04:	cmp	r0, r4
   29e08:	mov	r2, r0
   29e0c:	bcs	29e28 <__flatcc_fb_chomp@@Base+0x40>
   29e10:	sub	r6, r4, r0
   29e14:	mov	r1, r5
   29e18:	add	r0, r7, r6
   29e1c:	bl	14020 <strncmp@plt>
   29e20:	cmp	r0, #0
   29e24:	moveq	r4, r6
   29e28:	mov	r0, r4
   29e2c:	pop	{r4, r5, r6, r7, r8, pc}

00029e30 <__flatcc_fb_create_join_path_n@@Base>:
   29e30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   29e34:	mov	r9, r0
   29e38:	ldr	r8, [sp, #32]
   29e3c:	mov	r4, r1
   29e40:	cmp	r8, #0
   29e44:	mov	sl, r2
   29e48:	mov	r7, r3
   29e4c:	moveq	r5, r8
   29e50:	beq	29e60 <__flatcc_fb_create_join_path_n@@Base+0x30>
   29e54:	mov	r0, r8
   29e58:	bl	13f78 <strlen@plt>
   29e5c:	mov	r5, r0
   29e60:	cmp	r9, #0
   29e64:	beq	29f28 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   29e68:	cmp	r7, #0
   29e6c:	beq	29e9c <__flatcc_fb_create_join_path_n@@Base+0x6c>
   29e70:	ldrb	r3, [sl]
   29e74:	cmp	r3, #92	; 0x5c
   29e78:	cmpne	r3, #47	; 0x2f
   29e7c:	moveq	r3, #1
   29e80:	movne	r3, #0
   29e84:	beq	29f28 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   29e88:	cmp	r7, #1
   29e8c:	bls	29e9c <__flatcc_fb_create_join_path_n@@Base+0x6c>
   29e90:	ldrb	r2, [sl, #1]
   29e94:	cmp	r2, #58	; 0x3a
   29e98:	beq	29f6c <__flatcc_fb_create_join_path_n@@Base+0x13c>
   29e9c:	ldr	r3, [sp, #36]	; 0x24
   29ea0:	cmp	r3, #0
   29ea4:	cmpne	r4, #0
   29ea8:	beq	29ec0 <__flatcc_fb_create_join_path_n@@Base+0x90>
   29eac:	add	r3, r9, r4
   29eb0:	ldrb	r3, [r3, #-1]
   29eb4:	cmp	r3, #92	; 0x5c
   29eb8:	cmpne	r3, #47	; 0x2f
   29ebc:	bne	29f30 <__flatcc_fb_create_join_path_n@@Base+0x100>
   29ec0:	add	r0, r7, #1
   29ec4:	add	r0, r0, r5
   29ec8:	add	r0, r0, r4
   29ecc:	bl	13f3c <malloc@plt>
   29ed0:	subs	r6, r0, #0
   29ed4:	beq	29f1c <__flatcc_fb_create_join_path_n@@Base+0xec>
   29ed8:	mov	r1, r9
   29edc:	mov	r2, r4
   29ee0:	bl	13edc <memcpy@plt>
   29ee4:	mov	r1, sl
   29ee8:	mov	r2, r7
   29eec:	add	r0, r6, r4
   29ef0:	add	r7, r4, r7
   29ef4:	bl	13edc <memcpy@plt>
   29ef8:	mov	r2, r5
   29efc:	mov	r1, r8
   29f00:	add	r0, r6, r7
   29f04:	add	r5, r6, r5
   29f08:	bl	13edc <memcpy@plt>
   29f0c:	mov	r3, #0
   29f10:	strb	r3, [r5, r7]
   29f14:	mov	r0, r6
   29f18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29f1c:	mov	r6, #0
   29f20:	mov	r0, r6
   29f24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29f28:	mov	r4, #0
   29f2c:	b	29ec0 <__flatcc_fb_create_join_path_n@@Base+0x90>
   29f30:	ldr	r3, [sp, #36]	; 0x24
   29f34:	add	r0, r3, r4
   29f38:	add	r0, r0, #1
   29f3c:	add	r0, r0, r7
   29f40:	add	r0, r0, r5
   29f44:	bl	13f3c <malloc@plt>
   29f48:	subs	r6, r0, #0
   29f4c:	beq	29f1c <__flatcc_fb_create_join_path_n@@Base+0xec>
   29f50:	mov	r2, r4
   29f54:	mov	r1, r9
   29f58:	bl	13edc <memcpy@plt>
   29f5c:	mov	r3, #47	; 0x2f
   29f60:	strb	r3, [r6, r4]
   29f64:	add	r4, r4, #1
   29f68:	b	29ee4 <__flatcc_fb_create_join_path_n@@Base+0xb4>
   29f6c:	mov	r4, r3
   29f70:	b	29ec0 <__flatcc_fb_create_join_path_n@@Base+0x90>

00029f74 <__flatcc_fb_create_join_path@@Base>:
   29f74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   29f78:	subs	sl, r0, #0
   29f7c:	mov	r7, r1
   29f80:	mov	r9, r2
   29f84:	mov	r6, r3
   29f88:	moveq	r4, sl
   29f8c:	beq	29f98 <__flatcc_fb_create_join_path@@Base+0x24>
   29f90:	bl	13f78 <strlen@plt>
   29f94:	mov	r4, r0
   29f98:	cmp	r7, #0
   29f9c:	beq	2a0d0 <__flatcc_fb_create_join_path@@Base+0x15c>
   29fa0:	mov	r0, r7
   29fa4:	bl	13f78 <strlen@plt>
   29fa8:	mov	r8, r0
   29fac:	cmp	r9, #0
   29fb0:	moveq	r5, r9
   29fb4:	beq	29fc4 <__flatcc_fb_create_join_path@@Base+0x50>
   29fb8:	mov	r0, r9
   29fbc:	bl	13f78 <strlen@plt>
   29fc0:	mov	r5, r0
   29fc4:	cmp	sl, #0
   29fc8:	beq	2a088 <__flatcc_fb_create_join_path@@Base+0x114>
   29fcc:	cmp	r8, #0
   29fd0:	beq	2a000 <__flatcc_fb_create_join_path@@Base+0x8c>
   29fd4:	ldrb	r3, [r7]
   29fd8:	cmp	r3, #92	; 0x5c
   29fdc:	cmpne	r3, #47	; 0x2f
   29fe0:	moveq	r3, #1
   29fe4:	movne	r3, #0
   29fe8:	beq	2a088 <__flatcc_fb_create_join_path@@Base+0x114>
   29fec:	cmp	r8, #1
   29ff0:	bls	2a000 <__flatcc_fb_create_join_path@@Base+0x8c>
   29ff4:	ldrb	r2, [r7, #1]
   29ff8:	cmp	r2, #58	; 0x3a
   29ffc:	beq	2a0c8 <__flatcc_fb_create_join_path@@Base+0x154>
   2a000:	cmp	r6, #0
   2a004:	cmpne	r4, #0
   2a008:	beq	2a020 <__flatcc_fb_create_join_path@@Base+0xac>
   2a00c:	add	r3, sl, r4
   2a010:	ldrb	r3, [r3, #-1]
   2a014:	cmp	r3, #92	; 0x5c
   2a018:	cmpne	r3, #47	; 0x2f
   2a01c:	bne	2a090 <__flatcc_fb_create_join_path@@Base+0x11c>
   2a020:	add	r0, r8, #1
   2a024:	add	r0, r0, r5
   2a028:	add	r0, r0, r4
   2a02c:	bl	13f3c <malloc@plt>
   2a030:	subs	r6, r0, #0
   2a034:	beq	2a07c <__flatcc_fb_create_join_path@@Base+0x108>
   2a038:	mov	r1, sl
   2a03c:	mov	r2, r4
   2a040:	bl	13edc <memcpy@plt>
   2a044:	mov	r1, r7
   2a048:	mov	r2, r8
   2a04c:	add	r7, r8, r4
   2a050:	add	r0, r6, r4
   2a054:	bl	13edc <memcpy@plt>
   2a058:	mov	r2, r5
   2a05c:	mov	r1, r9
   2a060:	add	r0, r6, r7
   2a064:	add	r5, r6, r5
   2a068:	bl	13edc <memcpy@plt>
   2a06c:	mov	r3, #0
   2a070:	strb	r3, [r5, r7]
   2a074:	mov	r0, r6
   2a078:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a07c:	mov	r6, #0
   2a080:	mov	r0, r6
   2a084:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a088:	mov	r4, #0
   2a08c:	b	2a020 <__flatcc_fb_create_join_path@@Base+0xac>
   2a090:	add	r0, r6, #1
   2a094:	add	r0, r0, r4
   2a098:	add	r0, r0, r8
   2a09c:	add	r0, r0, r5
   2a0a0:	bl	13f3c <malloc@plt>
   2a0a4:	subs	r6, r0, #0
   2a0a8:	beq	2a07c <__flatcc_fb_create_join_path@@Base+0x108>
   2a0ac:	mov	r2, r4
   2a0b0:	mov	r1, sl
   2a0b4:	bl	13edc <memcpy@plt>
   2a0b8:	mov	r3, #47	; 0x2f
   2a0bc:	strb	r3, [r6, r4]
   2a0c0:	add	r4, r4, #1
   2a0c4:	b	2a044 <__flatcc_fb_create_join_path@@Base+0xd0>
   2a0c8:	mov	r4, r3
   2a0cc:	b	2a020 <__flatcc_fb_create_join_path@@Base+0xac>
   2a0d0:	mov	r8, r7
   2a0d4:	b	29fac <__flatcc_fb_create_join_path@@Base+0x38>

0002a0d8 <__flatcc_fb_create_path_ext_n@@Base>:
   2a0d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a0dc:	subs	r7, r2, #0
   2a0e0:	mov	r9, r0
   2a0e4:	mov	r5, r1
   2a0e8:	moveq	r8, r7
   2a0ec:	beq	2a0fc <__flatcc_fb_create_path_ext_n@@Base+0x24>
   2a0f0:	mov	r0, r7
   2a0f4:	bl	13f78 <strlen@plt>
   2a0f8:	mov	r8, r0
   2a0fc:	add	r6, r5, r8
   2a100:	add	r0, r6, #1
   2a104:	bl	13f3c <malloc@plt>
   2a108:	subs	r4, r0, #0
   2a10c:	beq	2a134 <__flatcc_fb_create_path_ext_n@@Base+0x5c>
   2a110:	mov	r1, r9
   2a114:	mov	r2, r5
   2a118:	bl	13edc <memcpy@plt>
   2a11c:	mov	r2, r8
   2a120:	mov	r1, r7
   2a124:	add	r0, r4, r5
   2a128:	bl	13edc <memcpy@plt>
   2a12c:	mov	r3, #0
   2a130:	strb	r3, [r4, r6]
   2a134:	mov	r0, r4
   2a138:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0002a13c <__flatcc_fb_create_path_ext@@Base>:
   2a13c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a140:	subs	r9, r0, #0
   2a144:	mov	r4, r1
   2a148:	beq	2a1ac <__flatcc_fb_create_path_ext@@Base+0x70>
   2a14c:	bl	13f78 <strlen@plt>
   2a150:	mov	r6, r0
   2a154:	cmp	r4, #0
   2a158:	moveq	r8, r4
   2a15c:	beq	2a16c <__flatcc_fb_create_path_ext@@Base+0x30>
   2a160:	mov	r0, r4
   2a164:	bl	13f78 <strlen@plt>
   2a168:	mov	r8, r0
   2a16c:	add	r7, r6, r8
   2a170:	add	r0, r7, #1
   2a174:	bl	13f3c <malloc@plt>
   2a178:	subs	r5, r0, #0
   2a17c:	beq	2a1a4 <__flatcc_fb_create_path_ext@@Base+0x68>
   2a180:	mov	r1, r9
   2a184:	mov	r2, r6
   2a188:	bl	13edc <memcpy@plt>
   2a18c:	mov	r2, r8
   2a190:	mov	r1, r4
   2a194:	add	r0, r5, r6
   2a198:	bl	13edc <memcpy@plt>
   2a19c:	mov	r3, #0
   2a1a0:	strb	r3, [r5, r7]
   2a1a4:	mov	r0, r5
   2a1a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a1ac:	mov	r6, r9
   2a1b0:	b	2a154 <__flatcc_fb_create_path_ext@@Base+0x18>

0002a1b4 <__flatcc_fb_create_make_path_n@@Base>:
   2a1b4:	cmp	r1, #1
   2a1b8:	push	{r4, r5, r6, r7, r8, lr}
   2a1bc:	mov	r5, r1
   2a1c0:	mov	r4, r0
   2a1c4:	beq	2a2ec <__flatcc_fb_create_make_path_n@@Base+0x138>
   2a1c8:	bls	2a2fc <__flatcc_fb_create_make_path_n@@Base+0x148>
   2a1cc:	sub	r6, r1, #1
   2a1d0:	mov	r2, r0
   2a1d4:	mov	r3, #1
   2a1d8:	b	2a1f0 <__flatcc_fb_create_make_path_n@@Base+0x3c>
   2a1dc:	cmp	r1, #32
   2a1e0:	addeq	r5, r5, #1
   2a1e4:	cmp	ip, r6
   2a1e8:	add	r3, r3, #1
   2a1ec:	bcs	2a214 <__flatcc_fb_create_make_path_n@@Base+0x60>
   2a1f0:	ldrb	r1, [r2], #1
   2a1f4:	mov	ip, r3
   2a1f8:	cmp	r1, #92	; 0x5c
   2a1fc:	ldrb	r0, [r2]
   2a200:	bne	2a1dc <__flatcc_fb_create_make_path_n@@Base+0x28>
   2a204:	cmp	r0, #32
   2a208:	mov	ip, r3
   2a20c:	addeq	r5, r5, #1
   2a210:	b	2a1dc <__flatcc_fb_create_make_path_n@@Base+0x28>
   2a214:	add	r5, r5, #1
   2a218:	cmp	r0, #32
   2a21c:	movne	r0, r5
   2a220:	addeq	r0, r5, #1
   2a224:	bl	13f3c <malloc@plt>
   2a228:	subs	r7, r0, #0
   2a22c:	beq	2a2bc <__flatcc_fb_create_make_path_n@@Base+0x108>
   2a230:	mov	r0, r4
   2a234:	mov	r2, #1
   2a238:	mov	r1, #0
   2a23c:	mov	r5, #92	; 0x5c
   2a240:	b	2a270 <__flatcc_fb_create_make_path_n@@Base+0xbc>
   2a244:	cmp	r3, #32
   2a248:	strbeq	r5, [r7, r1]
   2a24c:	ldrbne	r4, [r0]
   2a250:	ldrbeq	r4, [r0]
   2a254:	addeq	ip, r1, #1
   2a258:	moveq	lr, r2
   2a25c:	cmp	r6, lr
   2a260:	strb	r3, [r7, ip]
   2a264:	add	r2, r2, #1
   2a268:	add	r1, ip, #1
   2a26c:	bls	2a2c4 <__flatcc_fb_create_make_path_n@@Base+0x110>
   2a270:	ldrb	r3, [r0], #1
   2a274:	mov	lr, r2
   2a278:	mov	ip, r1
   2a27c:	cmp	r3, #92	; 0x5c
   2a280:	bne	2a244 <__flatcc_fb_create_make_path_n@@Base+0x90>
   2a284:	ldrb	r4, [r0]
   2a288:	cmp	r4, #32
   2a28c:	strbeq	r3, [r7, r1]
   2a290:	addeq	ip, r1, #1
   2a294:	b	2a25c <__flatcc_fb_create_make_path_n@@Base+0xa8>
   2a298:	mov	r0, #3
   2a29c:	bl	13f3c <malloc@plt>
   2a2a0:	subs	r7, r0, #0
   2a2a4:	beq	2a2bc <__flatcc_fb_create_make_path_n@@Base+0x108>
   2a2a8:	mov	r2, #92	; 0x5c
   2a2ac:	mov	r3, #0
   2a2b0:	strb	r6, [r7, #1]
   2a2b4:	strb	r2, [r7]
   2a2b8:	strb	r3, [r7, #2]
   2a2bc:	mov	r0, r7
   2a2c0:	pop	{r4, r5, r6, r7, r8, pc}
   2a2c4:	cmp	r4, #32
   2a2c8:	moveq	r3, #92	; 0x5c
   2a2cc:	strbeq	r3, [r7, r1]
   2a2d0:	mov	r3, r7
   2a2d4:	addeq	r1, ip, #2
   2a2d8:	mov	r2, #0
   2a2dc:	strb	r4, [r3, r1]!
   2a2e0:	mov	r0, r7
   2a2e4:	strb	r2, [r3, #1]
   2a2e8:	pop	{r4, r5, r6, r7, r8, pc}
   2a2ec:	ldrb	r6, [r0]
   2a2f0:	cmp	r6, #92	; 0x5c
   2a2f4:	cmpne	r6, #32
   2a2f8:	beq	2a298 <__flatcc_fb_create_make_path_n@@Base+0xe4>
   2a2fc:	mov	r2, r5
   2a300:	mov	r1, #0
   2a304:	mov	r0, r4
   2a308:	bl	13fc0 <memchr@plt>
   2a30c:	cmp	r0, #0
   2a310:	subne	r5, r0, r4
   2a314:	add	r0, r5, #1
   2a318:	bl	13f3c <malloc@plt>
   2a31c:	subs	r7, r0, #0
   2a320:	beq	2a2bc <__flatcc_fb_create_make_path_n@@Base+0x108>
   2a324:	mov	r1, r4
   2a328:	mov	r2, r5
   2a32c:	bl	13edc <memcpy@plt>
   2a330:	mov	r3, #0
   2a334:	strb	r3, [r7, r5]
   2a338:	b	2a2bc <__flatcc_fb_create_make_path_n@@Base+0x108>

0002a33c <__flatcc_fb_create_make_path@@Base>:
   2a33c:	push	{r4, lr}
   2a340:	mov	r4, r0
   2a344:	bl	13f78 <strlen@plt>
   2a348:	mov	r1, r0
   2a34c:	mov	r0, r4
   2a350:	pop	{r4, lr}
   2a354:	b	2a1b4 <__flatcc_fb_create_make_path_n@@Base>

0002a358 <__flatcc_fb_find_basename@@Base>:
   2a358:	add	r1, r0, r1
   2a35c:	cmp	r0, r1
   2a360:	beq	2a3a4 <__flatcc_fb_find_basename@@Base+0x4c>
   2a364:	ldrb	r2, [r1, #-1]
   2a368:	sub	r3, r1, #1
   2a36c:	cmp	r2, #47	; 0x2f
   2a370:	cmpne	r2, #92	; 0x5c
   2a374:	bne	2a394 <__flatcc_fb_find_basename@@Base+0x3c>
   2a378:	b	2a3ac <__flatcc_fb_find_basename@@Base+0x54>
   2a37c:	ldrb	r2, [r3, #-1]
   2a380:	sub	r1, r3, #1
   2a384:	cmp	r2, #92	; 0x5c
   2a388:	cmpne	r2, #47	; 0x2f
   2a38c:	beq	2a39c <__flatcc_fb_find_basename@@Base+0x44>
   2a390:	mov	r3, r1
   2a394:	cmp	r0, r3
   2a398:	bne	2a37c <__flatcc_fb_find_basename@@Base+0x24>
   2a39c:	sub	r0, r3, r0
   2a3a0:	bx	lr
   2a3a4:	mov	r3, r0
   2a3a8:	b	2a39c <__flatcc_fb_find_basename@@Base+0x44>
   2a3ac:	mov	r3, r1
   2a3b0:	b	2a39c <__flatcc_fb_find_basename@@Base+0x44>

0002a3b4 <__flatcc_fb_create_basename@@Base>:
   2a3b4:	add	r3, r0, r1
   2a3b8:	cmp	r0, r3
   2a3bc:	push	{r4, r5, r6, r7, r8, lr}
   2a3c0:	mov	r6, r2
   2a3c4:	beq	2a468 <__flatcc_fb_create_basename@@Base+0xb4>
   2a3c8:	ldrb	r2, [r3, #-1]
   2a3cc:	sub	r4, r3, #1
   2a3d0:	cmp	r2, #92	; 0x5c
   2a3d4:	cmpne	r2, #47	; 0x2f
   2a3d8:	bne	2a3f8 <__flatcc_fb_create_basename@@Base+0x44>
   2a3dc:	b	2a470 <__flatcc_fb_create_basename@@Base+0xbc>
   2a3e0:	ldrb	r3, [r4, #-1]
   2a3e4:	sub	ip, r4, #1
   2a3e8:	cmp	r3, #92	; 0x5c
   2a3ec:	cmpne	r3, #47	; 0x2f
   2a3f0:	beq	2a400 <__flatcc_fb_create_basename@@Base+0x4c>
   2a3f4:	mov	r4, ip
   2a3f8:	cmp	r0, r4
   2a3fc:	bne	2a3e0 <__flatcc_fb_create_basename@@Base+0x2c>
   2a400:	sub	r0, r4, r0
   2a404:	cmp	r6, #0
   2a408:	sub	r5, r1, r0
   2a40c:	beq	2a43c <__flatcc_fb_create_basename@@Base+0x88>
   2a410:	mov	r0, r6
   2a414:	bl	13f78 <strlen@plt>
   2a418:	cmp	r5, r0
   2a41c:	bls	2a43c <__flatcc_fb_create_basename@@Base+0x88>
   2a420:	sub	r7, r5, r0
   2a424:	mov	r2, r0
   2a428:	mov	r1, r6
   2a42c:	add	r0, r4, r7
   2a430:	bl	14020 <strncmp@plt>
   2a434:	cmp	r0, #0
   2a438:	moveq	r5, r7
   2a43c:	add	r0, r5, #1
   2a440:	bl	13f3c <malloc@plt>
   2a444:	subs	r6, r0, #0
   2a448:	beq	2a460 <__flatcc_fb_create_basename@@Base+0xac>
   2a44c:	mov	r1, r4
   2a450:	mov	r2, r5
   2a454:	bl	13edc <memcpy@plt>
   2a458:	mov	r3, #0
   2a45c:	strb	r3, [r6, r5]
   2a460:	mov	r0, r6
   2a464:	pop	{r4, r5, r6, r7, r8, pc}
   2a468:	mov	r4, r0
   2a46c:	b	2a400 <__flatcc_fb_create_basename@@Base+0x4c>
   2a470:	mov	r4, r3
   2a474:	b	2a400 <__flatcc_fb_create_basename@@Base+0x4c>

0002a478 <__flatcc_fb_read_file@@Base>:
   2a478:	push	{r4, r5, r6, r7, r8, r9, lr}
   2a47c:	subs	r8, r2, #0
   2a480:	sub	sp, sp, #12
   2a484:	mov	r4, r1
   2a488:	ldr	r1, [pc, #216]	; 2a568 <__flatcc_fb_read_file@@Base+0xf0>
   2a48c:	addeq	r8, sp, #4
   2a490:	bl	13ec4 <fopen@plt>
   2a494:	subs	r6, r0, #0
   2a498:	beq	2a560 <__flatcc_fb_read_file@@Base+0xe8>
   2a49c:	mov	r2, #2
   2a4a0:	mov	r1, #0
   2a4a4:	bl	14014 <fseek@plt>
   2a4a8:	mov	r0, r6
   2a4ac:	bl	13ee8 <ftell@plt>
   2a4b0:	cmp	r4, #0
   2a4b4:	cmpne	r0, r4
   2a4b8:	mov	r5, r0
   2a4bc:	movhi	r4, #1
   2a4c0:	movls	r4, #0
   2a4c4:	str	r0, [r8]
   2a4c8:	bhi	2a554 <__flatcc_fb_read_file@@Base+0xdc>
   2a4cc:	mov	r0, r6
   2a4d0:	bl	13f00 <rewind@plt>
   2a4d4:	cmp	r5, #0
   2a4d8:	movne	r0, r5
   2a4dc:	moveq	r0, #1
   2a4e0:	bl	13f3c <malloc@plt>
   2a4e4:	subs	r7, r0, #0
   2a4e8:	beq	2a554 <__flatcc_fb_read_file@@Base+0xdc>
   2a4ec:	mov	r9, #1
   2a4f0:	b	2a4f8 <__flatcc_fb_read_file@@Base+0x80>
   2a4f4:	add	r4, r4, r0
   2a4f8:	mov	r3, r6
   2a4fc:	sub	r2, r5, r4
   2a500:	mov	r1, r9
   2a504:	add	r0, r7, r4
   2a508:	bl	13f24 <fread@plt>
   2a50c:	cmp	r0, #0
   2a510:	bne	2a4f4 <__flatcc_fb_read_file@@Base+0x7c>
   2a514:	cmp	r4, r5
   2a518:	mov	r0, r6
   2a51c:	bne	2a534 <__flatcc_fb_read_file@@Base+0xbc>
   2a520:	bl	13fcc <fclose@plt>
   2a524:	mov	r0, r7
   2a528:	str	r4, [r8]
   2a52c:	add	sp, sp, #12
   2a530:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2a534:	bl	13fcc <fclose@plt>
   2a538:	mov	r0, r7
   2a53c:	bl	13ed0 <free@plt>
   2a540:	mov	r7, #0
   2a544:	mov	r0, r7
   2a548:	str	r5, [r8]
   2a54c:	add	sp, sp, #12
   2a550:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2a554:	mov	r0, r6
   2a558:	bl	13fcc <fclose@plt>
   2a55c:	b	2a540 <__flatcc_fb_read_file@@Base+0xc8>
   2a560:	mov	r5, r6
   2a564:	b	2a540 <__flatcc_fb_read_file@@Base+0xc8>
   2a568:	andeq	r8, r5, r0, lsl #20

0002a56c <__flatcc_fb_default_error_out@@Base>:
   2a56c:	ldr	r3, [pc, #12]	; 2a580 <__flatcc_fb_default_error_out@@Base+0x14>
   2a570:	mov	r0, r1
   2a574:	mov	r1, #1
   2a578:	ldr	r3, [r3]
   2a57c:	b	13f18 <fwrite@plt>
   2a580:	andeq	sp, r6, r8, lsr #1
   2a584:	add	r0, r1, #4
   2a588:	b	27b50 <fb_symbol_table_clear@@Base>
   2a58c:	ldr	ip, [r0, #28]
   2a590:	push	{r4, r5, r6, r7, r8, lr}
   2a594:	mov	r4, r0
   2a598:	add	r5, ip, ip, lsl #2
   2a59c:	ldr	r0, [r0, #20]
   2a5a0:	mov	r6, r1
   2a5a4:	lsl	r5, r5, #2
   2a5a8:	ldr	r1, [r4, #40]	; 0x28
   2a5ac:	mov	r7, r2
   2a5b0:	add	r2, r0, r5
   2a5b4:	cmp	r2, r1
   2a5b8:	mov	r8, r3
   2a5bc:	str	r2, [r4, #24]
   2a5c0:	beq	2a5f8 <__flatcc_fb_default_error_out@@Base+0x8c>
   2a5c4:	ldr	r0, [r4, #60]	; 0x3c
   2a5c8:	ldr	r2, [r4, #64]	; 0x40
   2a5cc:	sub	r0, r7, r0
   2a5d0:	sub	r8, r8, r7
   2a5d4:	add	r0, r0, #1
   2a5d8:	add	r3, r1, #20
   2a5dc:	str	r8, [r1, #4]
   2a5e0:	str	r6, [r1, #16]
   2a5e4:	str	r7, [r1]
   2a5e8:	str	r0, [r1, #12]
   2a5ec:	str	r2, [r1, #8]
   2a5f0:	str	r3, [r4, #40]	; 0x28
   2a5f4:	pop	{r4, r5, r6, r7, r8, pc}
   2a5f8:	cmp	ip, #0
   2a5fc:	lslne	r3, ip, #1
   2a600:	addne	r1, r3, ip, lsl #3
   2a604:	moveq	r3, #1024	; 0x400
   2a608:	lslne	r1, r1, #2
   2a60c:	moveq	r1, #20480	; 0x5000
   2a610:	str	r3, [r4, #28]
   2a614:	bl	13f0c <realloc@plt>
   2a618:	cmp	r0, #0
   2a61c:	str	r0, [r4, #20]
   2a620:	beq	2a63c <__flatcc_fb_default_error_out@@Base+0xd0>
   2a624:	ldr	r3, [r4, #28]
   2a628:	add	r1, r0, r5
   2a62c:	add	r3, r3, r3, lsl #2
   2a630:	add	r0, r0, r3, lsl #2
   2a634:	str	r0, [r4, #24]
   2a638:	b	2a5c4 <__flatcc_fb_default_error_out@@Base+0x58>
   2a63c:	bl	14098 <__assert_fail@plt+0x60>
   2a640:	ldr	r3, [r0, #40]	; 0x28
   2a644:	push	{r4, r5, r6, r7, r8, lr}
   2a648:	add	r5, r3, #20
   2a64c:	ldr	r8, [r0, #24]
   2a650:	mov	r4, r0
   2a654:	cmp	r8, r5
   2a658:	str	r5, [r0, #40]	; 0x28
   2a65c:	beq	2a700 <__flatcc_fb_default_error_out@@Base+0x194>
   2a660:	ldr	r3, [r3, #36]	; 0x24
   2a664:	cmn	r3, #964	; 0x3c4
   2a668:	bne	2a6f8 <__flatcc_fb_default_error_out@@Base+0x18c>
   2a66c:	ldr	r3, [r0, #52]	; 0x34
   2a670:	ldr	ip, [r0, #44]	; 0x2c
   2a674:	mov	r7, #1
   2a678:	mov	r6, #65536	; 0x10000
   2a67c:	b	2a6b0 <__flatcc_fb_default_error_out@@Base+0x144>
   2a680:	ldr	r1, [r4, #36]	; 0x24
   2a684:	add	r0, r5, #20
   2a688:	cmp	r0, r8
   2a68c:	str	r3, [r4, #52]	; 0x34
   2a690:	stm	r2, {r1, r5}
   2a694:	str	r2, [r4, #36]	; 0x24
   2a698:	str	r0, [r4, #40]	; 0x28
   2a69c:	beq	2a704 <__flatcc_fb_default_error_out@@Base+0x198>
   2a6a0:	ldr	r2, [r0, #16]
   2a6a4:	cmn	r2, #964	; 0x3c4
   2a6a8:	popne	{r4, r5, r6, r7, r8, pc}
   2a6ac:	mov	r5, r0
   2a6b0:	add	r1, r3, #16
   2a6b4:	cmp	r1, ip
   2a6b8:	movls	r2, r3
   2a6bc:	movls	r3, r1
   2a6c0:	bls	2a680 <__flatcc_fb_default_error_out@@Base+0x114>
   2a6c4:	mov	r1, r7
   2a6c8:	mov	r0, r6
   2a6cc:	bl	13ea0 <calloc@plt>
   2a6d0:	cmp	r0, #0
   2a6d4:	beq	2a71c <__flatcc_fb_default_error_out@@Base+0x1b0>
   2a6d8:	ldr	r3, [r4, #48]	; 0x30
   2a6dc:	add	ip, r0, #65536	; 0x10000
   2a6e0:	str	r3, [r0]
   2a6e4:	str	r0, [r4, #48]	; 0x30
   2a6e8:	str	ip, [r4, #44]	; 0x2c
   2a6ec:	add	r2, r0, #16
   2a6f0:	add	r3, r0, #32
   2a6f4:	b	2a680 <__flatcc_fb_default_error_out@@Base+0x114>
   2a6f8:	mov	r0, r5
   2a6fc:	pop	{r4, r5, r6, r7, r8, pc}
   2a700:	mov	r5, r3
   2a704:	str	r5, [r4, #40]	; 0x28
   2a708:	ldr	r3, [pc, #16]	; 2a720 <__flatcc_fb_default_error_out@@Base+0x1b4>
   2a70c:	ldr	r2, [pc, #16]	; 2a724 <__flatcc_fb_default_error_out@@Base+0x1b8>
   2a710:	ldr	r1, [pc, #16]	; 2a728 <__flatcc_fb_default_error_out@@Base+0x1bc>
   2a714:	ldr	r0, [pc, #16]	; 2a72c <__flatcc_fb_default_error_out@@Base+0x1c0>
   2a718:	bl	14038 <__assert_fail@plt>
   2a71c:	bl	14098 <__assert_fail@plt+0x60>
   2a720:	andeq	r8, r5, r4, lsl #20
   2a724:	andeq	r0, r0, r5, asr r1
   2a728:	andeq	r8, r5, ip, lsr #22
   2a72c:	andeq	sl, r4, r4, asr sp
   2a730:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a734:	mov	r8, r0
   2a738:	sub	sp, sp, #12
   2a73c:	add	r9, r0, r1
   2a740:	mov	sl, r2
   2a744:	cmp	r9, r8
   2a748:	beq	2d084 <__flatcc_fb_default_error_out@@Base+0x2b18>
   2a74c:	ldrb	r4, [r8]
   2a750:	cmp	r4, #126	; 0x7e
   2a754:	ldrls	pc, [pc, r4, lsl #2]
   2a758:	b	2b35c <__flatcc_fb_default_error_out@@Base+0xdf0>
   2a75c:	andeq	sl, r2, r0, asr #19
   2a760:	andeq	fp, r2, ip, asr r3
   2a764:	andeq	fp, r2, ip, asr r3
   2a768:	andeq	fp, r2, ip, asr r3
   2a76c:	andeq	fp, r2, ip, asr r3
   2a770:	andeq	fp, r2, ip, asr r3
   2a774:	andeq	fp, r2, ip, asr r3
   2a778:	andeq	fp, r2, ip, asr r3
   2a77c:	andeq	fp, r2, ip, asr r3
   2a780:	andeq	sl, r2, r0, lsr #20
   2a784:	andeq	sl, r2, r4, asr #21
   2a788:	andeq	fp, r2, ip, asr r3
   2a78c:	andeq	fp, r2, ip, asr r3
   2a790:	strdeq	sl, [r2], -r4
   2a794:	andeq	fp, r2, ip, asr r3
   2a798:	andeq	fp, r2, ip, asr r3
   2a79c:	andeq	fp, r2, ip, asr r3
   2a7a0:	andeq	fp, r2, ip, asr r3
   2a7a4:	andeq	fp, r2, ip, asr r3
   2a7a8:	andeq	fp, r2, ip, asr r3
   2a7ac:	andeq	fp, r2, ip, asr r3
   2a7b0:	andeq	fp, r2, ip, asr r3
   2a7b4:	andeq	fp, r2, ip, asr r3
   2a7b8:	andeq	fp, r2, ip, asr r3
   2a7bc:	andeq	fp, r2, ip, asr r3
   2a7c0:	andeq	fp, r2, ip, asr r3
   2a7c4:	andeq	fp, r2, ip, asr r3
   2a7c8:	andeq	fp, r2, ip, asr r3
   2a7cc:	andeq	fp, r2, ip, asr r3
   2a7d0:	andeq	fp, r2, ip, asr r3
   2a7d4:	andeq	fp, r2, ip, asr r3
   2a7d8:	andeq	fp, r2, ip, asr r3
   2a7dc:	andeq	sl, r2, r0, lsr #20
   2a7e0:	andeq	sl, r2, r4, lsl fp
   2a7e4:	andeq	sl, r2, r8, lsl #23
   2a7e8:	andeq	fp, r2, ip, asr r3
   2a7ec:	andeq	fp, r2, ip, asr r3
   2a7f0:	andeq	sl, r2, r4, lsl fp
   2a7f4:	andeq	fp, r2, r8, asr r0
   2a7f8:	andeq	fp, r2, ip, asr r3
   2a7fc:	andeq	fp, r2, r0, asr #1
   2a800:	andeq	fp, r2, r0, asr #1
   2a804:	andeq	sl, r2, ip, lsr lr
   2a808:	andeq	sl, r2, r0, asr #29
   2a80c:	andeq	fp, r2, r0, asr #1
   2a810:	andeq	sl, r2, r0, lsr pc
   2a814:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   2a818:	andeq	sl, r2, r8, lsl #26
   2a81c:	andeq	sl, r2, ip, ror sp
   2a820:	andeq	sl, r2, r4, asr #27
   2a824:	andeq	sl, r2, r4, asr #27
   2a828:	andeq	sl, r2, r4, asr #27
   2a82c:	andeq	sl, r2, r4, asr #27
   2a830:	andeq	sl, r2, r4, asr #27
   2a834:	andeq	sl, r2, r4, asr #27
   2a838:	andeq	sl, r2, r4, asr #27
   2a83c:	andeq	sl, r2, r4, asr #27
   2a840:	andeq	sl, r2, r4, asr #27
   2a844:	andeq	sl, r2, ip, asr #27
   2a848:	andeq	fp, r2, r0, asr #1
   2a84c:	ldrdeq	fp, [r2], -r8
   2a850:	andeq	fp, r2, r4, asr #2
   2a854:			; <UNDEFINED> instruction: 0x0002b1b0
   2a858:	andeq	fp, r2, r0, asr #1
   2a85c:	andeq	fp, r2, ip, asr r3
   2a860:	andeq	fp, r2, r0, lsr #4
   2a864:	andeq	fp, r2, r0, lsr #4
   2a868:	andeq	fp, r2, r0, lsr #4
   2a86c:	andeq	fp, r2, r0, lsr #4
   2a870:	andeq	fp, r2, r0, lsr #4
   2a874:	andeq	fp, r2, r0, lsr #4
   2a878:	andeq	fp, r2, r0, lsr #4
   2a87c:	andeq	fp, r2, r0, lsr #4
   2a880:	andeq	fp, r2, r0, lsr #4
   2a884:	andeq	fp, r2, r0, lsr #4
   2a888:	andeq	fp, r2, r0, lsr #4
   2a88c:	andeq	fp, r2, r0, lsr #4
   2a890:	andeq	fp, r2, r0, lsr #4
   2a894:	andeq	fp, r2, r0, lsr #4
   2a898:	andeq	fp, r2, r0, lsr #4
   2a89c:	andeq	fp, r2, r0, lsr #4
   2a8a0:	andeq	fp, r2, r0, lsr #4
   2a8a4:	andeq	fp, r2, r0, lsr #4
   2a8a8:	andeq	fp, r2, r0, lsr #4
   2a8ac:	andeq	fp, r2, r0, lsr #4
   2a8b0:	andeq	fp, r2, r0, lsr #4
   2a8b4:	andeq	fp, r2, r0, lsr #4
   2a8b8:	andeq	fp, r2, r0, lsr #4
   2a8bc:	andeq	fp, r2, r0, lsr #4
   2a8c0:	andeq	fp, r2, r0, lsr #4
   2a8c4:	andeq	fp, r2, r0, lsr #4
   2a8c8:	andeq	fp, r2, r0, asr #1
   2a8cc:	andeq	fp, r2, r0, asr #1
   2a8d0:	andeq	fp, r2, r0, asr #1
   2a8d4:	andeq	sl, r2, r4, lsl fp
   2a8d8:	andeq	fp, r2, r0, lsr #4
   2a8dc:	andeq	fp, r2, ip, asr r3
   2a8e0:	andeq	fp, r2, r0, lsr #4
   2a8e4:	andeq	fp, r2, r0, lsr #4
   2a8e8:	andeq	fp, r2, r0, lsr #4
   2a8ec:	andeq	fp, r2, r0, lsr #4
   2a8f0:	andeq	fp, r2, r0, lsr #4
   2a8f4:	andeq	fp, r2, r0, lsr #4
   2a8f8:	andeq	fp, r2, r0, lsr #4
   2a8fc:	andeq	fp, r2, r0, lsr #4
   2a900:	andeq	fp, r2, r0, lsr #4
   2a904:	andeq	fp, r2, r0, lsr #4
   2a908:	andeq	fp, r2, r0, lsr #4
   2a90c:	andeq	fp, r2, r0, lsr #4
   2a910:	andeq	fp, r2, r0, lsr #4
   2a914:	andeq	fp, r2, r0, lsr #4
   2a918:	andeq	fp, r2, r0, lsr #4
   2a91c:	andeq	fp, r2, r0, lsr #4
   2a920:	andeq	fp, r2, r0, lsr #4
   2a924:	andeq	fp, r2, r0, lsr #4
   2a928:	andeq	fp, r2, r0, lsr #4
   2a92c:	andeq	fp, r2, r0, lsr #4
   2a930:	andeq	fp, r2, r0, lsr #4
   2a934:	andeq	fp, r2, r0, lsr #4
   2a938:	andeq	fp, r2, r0, lsr #4
   2a93c:	andeq	fp, r2, r0, lsr #4
   2a940:	andeq	fp, r2, r0, lsr #4
   2a944:	andeq	fp, r2, r0, lsr #4
   2a948:	andeq	fp, r2, r0, asr #1
   2a94c:	andeq	sl, r2, r8, asr r9
   2a950:	andeq	fp, r2, r0, asr #1
   2a954:	andeq	sl, r2, r4, lsl fp
   2a958:	add	r4, r8, #1
   2a95c:	cmp	r9, r4
   2a960:	beq	2d064 <__flatcc_fb_default_error_out@@Base+0x2af8>
   2a964:	ldrb	r3, [r8, #1]
   2a968:	ldr	r2, [sl, #28]
   2a96c:	ldr	r0, [sl, #20]
   2a970:	cmp	r3, #61	; 0x3d
   2a974:	beq	2c128 <__flatcc_fb_default_error_out@@Base+0x1bbc>
   2a978:	cmp	r3, #124	; 0x7c
   2a97c:	beq	2b9d4 <__flatcc_fb_default_error_out@@Base+0x1468>
   2a980:	add	r5, r2, r2, lsl #2
   2a984:	ldr	r1, [sl, #40]	; 0x28
   2a988:	lsl	r5, r5, #2
   2a98c:	add	r3, r0, r5
   2a990:	cmp	r1, r3
   2a994:	str	r3, [sl, #24]
   2a998:	beq	2c868 <__flatcc_fb_default_error_out@@Base+0x22fc>
   2a99c:	ldr	r3, [sl, #60]	; 0x3c
   2a9a0:	ldr	r0, [sl, #64]	; 0x40
   2a9a4:	sub	r3, r8, r3
   2a9a8:	str	r8, [r1]
   2a9ac:	sub	r8, r4, r8
   2a9b0:	add	r3, r3, #1
   2a9b4:	str	r8, [r1, #4]
   2a9b8:	mov	r2, #124	; 0x7c
   2a9bc:	b	2b03c <__flatcc_fb_default_error_out@@Base+0xad0>
   2a9c0:	ldr	r3, [sl, #28]
   2a9c4:	ldr	r0, [sl, #20]
   2a9c8:	ldr	r2, [sl, #40]	; 0x28
   2a9cc:	add	r4, r3, r3, lsl #2
   2a9d0:	lsl	r4, r4, #2
   2a9d4:	add	r1, r0, r4
   2a9d8:	cmp	r1, r2
   2a9dc:	str	r1, [sl, #24]
   2a9e0:	beq	2c758 <__flatcc_fb_default_error_out@@Base+0x21ec>
   2a9e4:	ldr	r3, [sl, #60]	; 0x3c
   2a9e8:	ldr	r0, [sl, #64]	; 0x40
   2a9ec:	sub	r3, r8, r3
   2a9f0:	mov	r4, #0
   2a9f4:	add	r3, r3, #1
   2a9f8:	add	r1, r2, #20
   2a9fc:	str	r8, [r2]
   2aa00:	str	r3, [r2, #12]
   2aa04:	str	r0, [r2, #8]
   2aa08:	str	r4, [r2, #16]
   2aa0c:	str	r4, [r2, #4]
   2aa10:	str	r1, [sl, #40]	; 0x28
   2aa14:	mov	r0, r4
   2aa18:	add	sp, sp, #12
   2aa1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2aa20:	add	r3, r8, #1
   2aa24:	b	2aa38 <__flatcc_fb_default_error_out@@Base+0x4cc>
   2aa28:	ldrb	r4, [r3], #1
   2aa2c:	cmp	r4, #9
   2aa30:	cmpne	r4, #32
   2aa34:	bne	2b78c <__flatcc_fb_default_error_out@@Base+0x1220>
   2aa38:	cmp	r9, r3
   2aa3c:	mov	r2, r3
   2aa40:	bne	2aa28 <__flatcc_fb_default_error_out@@Base+0x4bc>
   2aa44:	ldr	ip, [sl, #28]
   2aa48:	ldr	r0, [sl, #20]
   2aa4c:	ldr	r1, [sl, #40]	; 0x28
   2aa50:	add	r5, ip, ip, lsl #2
   2aa54:	mov	r6, r8
   2aa58:	lsl	r5, r5, #2
   2aa5c:	add	r2, r0, r5
   2aa60:	mov	r8, r9
   2aa64:	mov	r4, #0
   2aa68:	cmp	r9, r8
   2aa6c:	beq	2aa7c <__flatcc_fb_default_error_out@@Base+0x510>
   2aa70:	ldrb	r3, [r8]
   2aa74:	cmp	r3, #0
   2aa78:	beq	2b748 <__flatcc_fb_default_error_out@@Base+0x11dc>
   2aa7c:	cmp	r2, r1
   2aa80:	str	r2, [sl, #24]
   2aa84:	beq	2b794 <__flatcc_fb_default_error_out@@Base+0x1228>
   2aa88:	ldr	r3, [sl, #60]	; 0x3c
   2aa8c:	ldr	ip, [sl, #64]	; 0x40
   2aa90:	sub	r3, r8, r3
   2aa94:	mov	r2, #0
   2aa98:	add	r0, r1, #20
   2aa9c:	add	r3, r3, #1
   2aaa0:	str	r8, [r1]
   2aaa4:	str	r3, [r1, #12]
   2aaa8:	str	ip, [r1, #8]
   2aaac:	str	r2, [r1, #16]
   2aab0:	str	r2, [r1, #4]
   2aab4:	str	r0, [sl, #40]	; 0x28
   2aab8:	mov	r0, r4
   2aabc:	add	sp, sp, #12
   2aac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2aac4:	add	r3, r8, #1
   2aac8:	cmp	r9, r3
   2aacc:	beq	2aadc <__flatcc_fb_default_error_out@@Base+0x570>
   2aad0:	ldrb	r2, [r8, #1]
   2aad4:	cmp	r2, #13
   2aad8:	beq	2ab0c <__flatcc_fb_default_error_out@@Base+0x5a0>
   2aadc:	ldr	r2, [sl, #64]	; 0x40
   2aae0:	str	r3, [sl, #60]	; 0x3c
   2aae4:	add	r2, r2, #1
   2aae8:	mov	r8, r3
   2aaec:	str	r2, [sl, #64]	; 0x40
   2aaf0:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2aaf4:	add	r3, r8, #1
   2aaf8:	cmp	r9, r3
   2aafc:	beq	2aadc <__flatcc_fb_default_error_out@@Base+0x570>
   2ab00:	ldrb	r2, [r8, #1]
   2ab04:	cmp	r2, #10
   2ab08:	bne	2aadc <__flatcc_fb_default_error_out@@Base+0x570>
   2ab0c:	add	r3, r8, #2
   2ab10:	b	2aadc <__flatcc_fb_default_error_out@@Base+0x570>
   2ab14:	add	r5, r8, #1
   2ab18:	cmp	r9, r5
   2ab1c:	beq	2ab2c <__flatcc_fb_default_error_out@@Base+0x5c0>
   2ab20:	ldrb	r3, [r8, #1]
   2ab24:	cmp	r3, #61	; 0x3d
   2ab28:	beq	2c980 <__flatcc_fb_default_error_out@@Base+0x2414>
   2ab2c:	ldr	r2, [sl, #28]
   2ab30:	ldr	r0, [sl, #20]
   2ab34:	ldr	r1, [sl, #40]	; 0x28
   2ab38:	add	r6, r2, r2, lsl #2
   2ab3c:	lsl	r6, r6, #2
   2ab40:	add	r3, r0, r6
   2ab44:	cmp	r3, r1
   2ab48:	str	r3, [sl, #24]
   2ab4c:	beq	2bf1c <__flatcc_fb_default_error_out@@Base+0x19b0>
   2ab50:	ldr	r3, [sl, #60]	; 0x3c
   2ab54:	str	r4, [r1, #16]
   2ab58:	sub	r3, r8, r3
   2ab5c:	ldr	r0, [sl, #64]	; 0x40
   2ab60:	add	r3, r3, #1
   2ab64:	str	r3, [r1, #12]
   2ab68:	mov	r2, #1
   2ab6c:	add	r3, r1, #20
   2ab70:	str	r8, [r1]
   2ab74:	str	r0, [r1, #8]
   2ab78:	str	r2, [r1, #4]
   2ab7c:	mov	r8, r5
   2ab80:	str	r3, [sl, #40]	; 0x28
   2ab84:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2ab88:	ldr	r3, [sl, #28]
   2ab8c:	ldr	r0, [sl, #20]
   2ab90:	ldr	lr, [sl, #40]	; 0x28
   2ab94:	lsl	ip, r3, #2
   2ab98:	add	r5, ip, r3
   2ab9c:	mov	fp, r3
   2aba0:	lsl	r5, r5, #2
   2aba4:	add	r3, r0, r5
   2aba8:	cmp	r3, lr
   2abac:	add	r4, r8, #1
   2abb0:	str	r3, [sl, #24]
   2abb4:	beq	2c6c4 <__flatcc_fb_default_error_out@@Base+0x2158>
   2abb8:	ldr	r1, [sl, #60]	; 0x3c
   2abbc:	ldr	r5, [sl, #64]	; 0x40
   2abc0:	sub	r1, r8, r1
   2abc4:	str	r5, [lr, #8]
   2abc8:	mov	r5, r4
   2abcc:	add	r1, r1, #1
   2abd0:	mov	r6, #19
   2abd4:	mov	r2, #1
   2abd8:	add	r3, lr, #20
   2abdc:	str	r8, [lr]
   2abe0:	str	r1, [lr, #12]
   2abe4:	str	r6, [lr, #16]
   2abe8:	str	r2, [lr, #4]
   2abec:	str	r3, [sl, #40]	; 0x28
   2abf0:	sub	r4, r4, #1
   2abf4:	b	2ac18 <__flatcc_fb_default_error_out@@Base+0x6ac>
   2abf8:	ldrb	r1, [r4, #1]
   2abfc:	cmp	r1, #92	; 0x5c
   2ac00:	cmpne	r1, #34	; 0x22
   2ac04:	beq	2ac28 <__flatcc_fb_default_error_out@@Base+0x6bc>
   2ac08:	cmp	r1, #127	; 0x7f
   2ac0c:	cmpne	r1, #31
   2ac10:	bls	2ac28 <__flatcc_fb_default_error_out@@Base+0x6bc>
   2ac14:	mov	r4, r8
   2ac18:	add	r8, r4, #1
   2ac1c:	cmp	r9, r8
   2ac20:	bne	2abf8 <__flatcc_fb_default_error_out@@Base+0x68c>
   2ac24:	mov	r8, r9
   2ac28:	cmp	r5, r8
   2ac2c:	addeq	r7, ip, fp
   2ac30:	lsleq	r7, r7, #2
   2ac34:	addeq	r1, r0, r7
   2ac38:	beq	2ac94 <__flatcc_fb_default_error_out@@Base+0x728>
   2ac3c:	add	r6, ip, fp
   2ac40:	lsl	r6, r6, #2
   2ac44:	add	r1, r0, r6
   2ac48:	cmp	r1, r3
   2ac4c:	str	r1, [sl, #24]
   2ac50:	mov	r7, r6
   2ac54:	beq	2b49c <__flatcc_fb_default_error_out@@Base+0xf30>
   2ac58:	ldr	lr, [sl, #60]	; 0x3c
   2ac5c:	ldr	r6, [sl, #64]	; 0x40
   2ac60:	sub	lr, r5, lr
   2ac64:	add	lr, lr, #1
   2ac68:	str	lr, [sp, #4]
   2ac6c:	mov	lr, #20
   2ac70:	str	lr, [r3, #16]
   2ac74:	ldr	lr, [sp, #4]
   2ac78:	str	r5, [r3]
   2ac7c:	sub	r5, r8, r5
   2ac80:	str	r5, [r3, #4]
   2ac84:	str	lr, [r3, #12]
   2ac88:	str	r6, [r3, #8]
   2ac8c:	add	r3, r3, #20
   2ac90:	str	r3, [sl, #40]	; 0x28
   2ac94:	ldrb	lr, [r8]
   2ac98:	cmp	lr, #34	; 0x22
   2ac9c:	beq	2b6e0 <__flatcc_fb_default_error_out@@Base+0x1174>
   2aca0:	cmp	r9, r8
   2aca4:	cmpne	lr, #0
   2aca8:	beq	2b5d8 <__flatcc_fb_default_error_out@@Base+0x106c>
   2acac:	cmp	lr, #92	; 0x5c
   2acb0:	beq	2b4f4 <__flatcc_fb_default_error_out@@Base+0xf88>
   2acb4:	cmp	lr, #13
   2acb8:	cmpne	lr, #10
   2acbc:	beq	2b5d8 <__flatcc_fb_default_error_out@@Base+0x106c>
   2acc0:	cmp	r3, r1
   2acc4:	str	r1, [sl, #24]
   2acc8:	add	r4, r8, #1
   2accc:	beq	2b44c <__flatcc_fb_default_error_out@@Base+0xee0>
   2acd0:	ldr	r1, [sl, #60]	; 0x3c
   2acd4:	ldr	lr, [sl, #64]	; 0x40
   2acd8:	sub	r1, r8, r1
   2acdc:	mov	r5, #6
   2ace0:	add	r1, r1, #1
   2ace4:	str	r5, [r3, #16]
   2ace8:	str	r8, [r3]
   2acec:	str	r2, [r3, #4]
   2acf0:	str	r1, [r3, #12]
   2acf4:	str	lr, [r3, #8]
   2acf8:	add	r3, r3, #20
   2acfc:	str	r3, [sl, #40]	; 0x28
   2ad00:	mov	r5, r4
   2ad04:	b	2abf0 <__flatcc_fb_default_error_out@@Base+0x684>
   2ad08:	add	r4, r8, #1
   2ad0c:	cmp	r9, r4
   2ad10:	beq	2ad30 <__flatcc_fb_default_error_out@@Base+0x7c4>
   2ad14:	ldrb	r3, [r8, #1]
   2ad18:	cmp	r3, #47	; 0x2f
   2ad1c:	beq	2c29c <__flatcc_fb_default_error_out@@Base+0x1d30>
   2ad20:	cmp	r3, #61	; 0x3d
   2ad24:	beq	2c5cc <__flatcc_fb_default_error_out@@Base+0x2060>
   2ad28:	cmp	r3, #42	; 0x2a
   2ad2c:	beq	2bb64 <__flatcc_fb_default_error_out@@Base+0x15f8>
   2ad30:	ldr	r2, [sl, #28]
   2ad34:	ldr	r0, [sl, #20]
   2ad38:	ldr	r3, [sl, #40]	; 0x28
   2ad3c:	add	r5, r2, r2, lsl #2
   2ad40:	lsl	r5, r5, #2
   2ad44:	add	r1, r0, r5
   2ad48:	cmp	r1, r3
   2ad4c:	str	r1, [sl, #24]
   2ad50:	beq	2cc5c <__flatcc_fb_default_error_out@@Base+0x26f0>
   2ad54:	ldr	r2, [sl, #60]	; 0x3c
   2ad58:	ldr	ip, [sl, #64]	; 0x40
   2ad5c:	sub	r2, r8, r2
   2ad60:	add	r2, r2, #1
   2ad64:	str	r8, [r3]
   2ad68:	mov	r0, #47	; 0x2f
   2ad6c:	mov	r8, r4
   2ad70:	str	r2, [r3, #12]
   2ad74:	mov	r1, #1
   2ad78:	b	2b604 <__flatcc_fb_default_error_out@@Base+0x1098>
   2ad7c:	add	r3, r8, #1
   2ad80:	cmp	r9, r3
   2ad84:	beq	2adb4 <__flatcc_fb_default_error_out@@Base+0x848>
   2ad88:	ldrb	r2, [r8, #1]
   2ad8c:	cmp	r2, #88	; 0x58
   2ad90:	beq	2b844 <__flatcc_fb_default_error_out@@Base+0x12d8>
   2ad94:	cmp	r2, #120	; 0x78
   2ad98:	bne	2adb4 <__flatcc_fb_default_error_out@@Base+0x848>
   2ad9c:	b	2b844 <__flatcc_fb_default_error_out@@Base+0x12d8>
   2ada0:	ldrb	r2, [r3]
   2ada4:	add	r3, r4, #1
   2ada8:	sub	r1, r2, #48	; 0x30
   2adac:	cmp	r1, #9
   2adb0:	bhi	2b61c <__flatcc_fb_default_error_out@@Base+0x10b0>
   2adb4:	subs	r4, r3, #0
   2adb8:	bne	2ada0 <__flatcc_fb_default_error_out@@Base+0x834>
   2adbc:	ldrb	r3, [r3]
   2adc0:	udf	#0
   2adc4:	add	r3, r8, #1
   2adc8:	b	2adb4 <__flatcc_fb_default_error_out@@Base+0x848>
   2adcc:	add	r4, r8, #1
   2add0:	cmp	r9, r4
   2add4:	beq	2b94c <__flatcc_fb_default_error_out@@Base+0x13e0>
   2add8:	ldrb	r3, [r8, #1]
   2addc:	cmp	r3, #58	; 0x3a
   2ade0:	beq	2c218 <__flatcc_fb_default_error_out@@Base+0x1cac>
   2ade4:	cmp	r3, #61	; 0x3d
   2ade8:	bne	2b94c <__flatcc_fb_default_error_out@@Base+0x13e0>
   2adec:	ldr	r2, [sl, #28]
   2adf0:	ldr	r0, [sl, #20]
   2adf4:	ldr	r1, [sl, #40]	; 0x28
   2adf8:	add	r5, r2, r2, lsl #2
   2adfc:	add	r4, r8, #2
   2ae00:	lsl	r5, r5, #2
   2ae04:	add	r3, r0, r5
   2ae08:	cmp	r3, r1
   2ae0c:	str	r3, [sl, #24]
   2ae10:	beq	2cfb4 <__flatcc_fb_default_error_out@@Base+0x2a48>
   2ae14:	ldr	r3, [sl, #60]	; 0x3c
   2ae18:	ldr	ip, [sl, #64]	; 0x40
   2ae1c:	sub	r3, r8, r3
   2ae20:	add	r3, r3, #1
   2ae24:	str	r8, [r1]
   2ae28:	ldr	r0, [pc, #4000]	; 2bdd0 <__flatcc_fb_default_error_out@@Base+0x1864>
   2ae2c:	mov	r8, r4
   2ae30:	str	r3, [r1, #12]
   2ae34:	mov	r2, #2
   2ae38:	b	2b3c0 <__flatcc_fb_default_error_out@@Base+0xe54>
   2ae3c:	add	r5, r8, #1
   2ae40:	cmp	r9, r5
   2ae44:	beq	2b990 <__flatcc_fb_default_error_out@@Base+0x1424>
   2ae48:	ldrb	r3, [r8, #1]
   2ae4c:	cmp	r3, #42	; 0x2a
   2ae50:	beq	2c248 <__flatcc_fb_default_error_out@@Base+0x1cdc>
   2ae54:	cmp	r3, #61	; 0x3d
   2ae58:	bne	2b990 <__flatcc_fb_default_error_out@@Base+0x1424>
   2ae5c:	ldr	r2, [sl, #28]
   2ae60:	ldr	r0, [sl, #20]
   2ae64:	ldr	r1, [sl, #40]	; 0x28
   2ae68:	add	r4, r2, r2, lsl #2
   2ae6c:	lsl	r4, r4, #2
   2ae70:	add	r3, r0, r4
   2ae74:	cmp	r3, r1
   2ae78:	str	r3, [sl, #24]
   2ae7c:	beq	2cca0 <__flatcc_fb_default_error_out@@Base+0x2734>
   2ae80:	ldr	r3, [sl, #60]	; 0x3c
   2ae84:	ldr	ip, [sl, #64]	; 0x40
   2ae88:	ldr	r0, [pc, #3908]	; 2bdd4 <__flatcc_fb_default_error_out@@Base+0x1868>
   2ae8c:	sub	r3, r8, r3
   2ae90:	add	r3, r3, #1
   2ae94:	str	r3, [r1, #12]
   2ae98:	mov	r2, #1
   2ae9c:	add	r3, r1, #20
   2aea0:	str	r8, [r1]
   2aea4:	str	ip, [r1, #8]
   2aea8:	str	r0, [r1, #16]
   2aeac:	str	r2, [r1, #4]
   2aeb0:	str	r3, [sl, #40]	; 0x28
   2aeb4:	ldrb	r4, [r8, #1]
   2aeb8:	mov	r8, r5
   2aebc:	b	2a750 <__flatcc_fb_default_error_out@@Base+0x1e4>
   2aec0:	add	r4, r8, #1
   2aec4:	cmp	r9, r4
   2aec8:	beq	2b908 <__flatcc_fb_default_error_out@@Base+0x139c>
   2aecc:	ldrb	r3, [r8, #1]
   2aed0:	cmp	r3, #43	; 0x2b
   2aed4:	beq	2c1c8 <__flatcc_fb_default_error_out@@Base+0x1c5c>
   2aed8:	cmp	r3, #61	; 0x3d
   2aedc:	bne	2b908 <__flatcc_fb_default_error_out@@Base+0x139c>
   2aee0:	ldr	r2, [sl, #28]
   2aee4:	ldr	r0, [sl, #20]
   2aee8:	ldr	r1, [sl, #40]	; 0x28
   2aeec:	add	r5, r2, r2, lsl #2
   2aef0:	add	r4, r8, #2
   2aef4:	lsl	r5, r5, #2
   2aef8:	add	r3, r0, r5
   2aefc:	cmp	r3, r1
   2af00:	str	r3, [sl, #24]
   2af04:	beq	2d0ec <__flatcc_fb_default_error_out@@Base+0x2b80>
   2af08:	ldr	r3, [sl, #60]	; 0x3c
   2af0c:	ldr	ip, [sl, #64]	; 0x40
   2af10:	sub	r3, r8, r3
   2af14:	add	r3, r3, #1
   2af18:	str	r8, [r1]
   2af1c:	ldr	r0, [pc, #3764]	; 2bdd8 <__flatcc_fb_default_error_out@@Base+0x186c>
   2af20:	mov	r8, r4
   2af24:	str	r3, [r1, #12]
   2af28:	mov	r2, #2
   2af2c:	b	2b3c0 <__flatcc_fb_default_error_out@@Base+0xe54>
   2af30:	add	r4, r8, #1
   2af34:	cmp	r9, r4
   2af38:	beq	2af58 <__flatcc_fb_default_error_out@@Base+0x9ec>
   2af3c:	ldrb	r3, [r8, #1]
   2af40:	cmp	r3, #61	; 0x3d
   2af44:	beq	2c6a8 <__flatcc_fb_default_error_out@@Base+0x213c>
   2af48:	cmp	r3, #62	; 0x3e
   2af4c:	beq	2c68c <__flatcc_fb_default_error_out@@Base+0x2120>
   2af50:	cmp	r3, #45	; 0x2d
   2af54:	beq	2bc90 <__flatcc_fb_default_error_out@@Base+0x1724>
   2af58:	ldr	r2, [sl, #28]
   2af5c:	ldr	r0, [sl, #20]
   2af60:	ldr	r1, [sl, #40]	; 0x28
   2af64:	add	r5, r2, r2, lsl #2
   2af68:	lsl	r5, r5, #2
   2af6c:	add	r3, r0, r5
   2af70:	cmp	r3, r1
   2af74:	str	r3, [sl, #24]
   2af78:	beq	2ce50 <__flatcc_fb_default_error_out@@Base+0x28e4>
   2af7c:	ldr	r3, [sl, #60]	; 0x3c
   2af80:	ldr	ip, [sl, #64]	; 0x40
   2af84:	sub	r3, r8, r3
   2af88:	str	r8, [r1]
   2af8c:	add	r3, r3, #1
   2af90:	mov	r0, #45	; 0x2d
   2af94:	mov	r8, r4
   2af98:	b	2b3b8 <__flatcc_fb_default_error_out@@Base+0xe4c>
   2af9c:	add	r4, r8, #1
   2afa0:	cmp	r9, r4
   2afa4:	beq	2bb20 <__flatcc_fb_default_error_out@@Base+0x15b4>
   2afa8:	ldrb	r3, [r8, #1]
   2afac:	cmp	r3, #46	; 0x2e
   2afb0:	beq	2c040 <__flatcc_fb_default_error_out@@Base+0x1ad4>
   2afb4:	bcc	2bb20 <__flatcc_fb_default_error_out@@Base+0x15b4>
   2afb8:	sub	r3, r3, #48	; 0x30
   2afbc:	cmp	r3, #9
   2afc0:	movls	r0, r8
   2afc4:	bhi	2bb20 <__flatcc_fb_default_error_out@@Base+0x15b4>
   2afc8:	add	r3, r4, #1
   2afcc:	b	2afe4 <__flatcc_fb_default_error_out@@Base+0xa78>
   2afd0:	ldrb	r2, [r3]
   2afd4:	add	r3, r3, #1
   2afd8:	sub	r1, r2, #48	; 0x30
   2afdc:	cmp	r1, #9
   2afe0:	bhi	2bf0c <__flatcc_fb_default_error_out@@Base+0x19a0>
   2afe4:	cmp	r3, r9
   2afe8:	mov	r4, r3
   2afec:	bne	2afd0 <__flatcc_fb_default_error_out@@Base+0xa64>
   2aff0:	cmp	r4, r0
   2aff4:	beq	2c280 <__flatcc_fb_default_error_out@@Base+0x1d14>
   2aff8:	ldr	r2, [sl, #28]
   2affc:	ldr	r0, [sl, #20]
   2b000:	ldr	r1, [sl, #40]	; 0x28
   2b004:	add	r5, r2, r2, lsl #2
   2b008:	lsl	r5, r5, #2
   2b00c:	add	r3, r0, r5
   2b010:	cmp	r3, r1
   2b014:	str	r3, [sl, #24]
   2b018:	beq	2bfac <__flatcc_fb_default_error_out@@Base+0x1a40>
   2b01c:	ldr	r3, [sl, #60]	; 0x3c
   2b020:	mov	r2, #11
   2b024:	sub	r3, r8, r3
   2b028:	add	r3, r3, #1
   2b02c:	ldr	r0, [sl, #64]	; 0x40
   2b030:	str	r8, [r1]
   2b034:	sub	r8, r4, r8
   2b038:	str	r8, [r1, #4]
   2b03c:	str	r3, [r1, #12]
   2b040:	add	r3, r1, #20
   2b044:	str	r0, [r1, #8]
   2b048:	str	r2, [r1, #16]
   2b04c:	mov	r8, r4
   2b050:	str	r3, [sl, #40]	; 0x28
   2b054:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2b058:	add	r4, r8, #1
   2b05c:	cmp	r9, r4
   2b060:	beq	2caa0 <__flatcc_fb_default_error_out@@Base+0x2534>
   2b064:	ldrb	r3, [r8, #1]
   2b068:	ldr	r2, [sl, #28]
   2b06c:	ldr	r0, [sl, #20]
   2b070:	cmp	r3, #38	; 0x26
   2b074:	beq	2c16c <__flatcc_fb_default_error_out@@Base+0x1c00>
   2b078:	add	r5, r2, r2, lsl #2
   2b07c:	cmp	r3, #61	; 0x3d
   2b080:	lslne	r5, r5, #2
   2b084:	ldr	r1, [sl, #40]	; 0x28
   2b088:	addne	r3, r0, r5
   2b08c:	beq	2ba30 <__flatcc_fb_default_error_out@@Base+0x14c4>
   2b090:	cmp	r1, r3
   2b094:	str	r3, [sl, #24]
   2b098:	beq	2c93c <__flatcc_fb_default_error_out@@Base+0x23d0>
   2b09c:	ldr	r3, [sl, #60]	; 0x3c
   2b0a0:	ldr	r0, [sl, #64]	; 0x40
   2b0a4:	sub	r3, r8, r3
   2b0a8:	str	r8, [r1]
   2b0ac:	sub	r8, r4, r8
   2b0b0:	add	r3, r3, #1
   2b0b4:	str	r8, [r1, #4]
   2b0b8:	mov	r2, #38	; 0x26
   2b0bc:	b	2b03c <__flatcc_fb_default_error_out@@Base+0xad0>
   2b0c0:	ldr	r2, [sl, #28]
   2b0c4:	ldr	r0, [sl, #20]
   2b0c8:	ldr	r1, [sl, #40]	; 0x28
   2b0cc:	add	r6, r2, r2, lsl #2
   2b0d0:	add	r5, r8, #1
   2b0d4:	b	2ab3c <__flatcc_fb_default_error_out@@Base+0x5d0>
   2b0d8:	add	r4, r8, #1
   2b0dc:	cmp	r9, r4
   2b0e0:	beq	2b100 <__flatcc_fb_default_error_out@@Base+0xb94>
   2b0e4:	ldrb	r3, [r8, #1]
   2b0e8:	cmp	r3, #60	; 0x3c
   2b0ec:	beq	2c650 <__flatcc_fb_default_error_out@@Base+0x20e4>
   2b0f0:	cmp	r3, #61	; 0x3d
   2b0f4:	beq	2c634 <__flatcc_fb_default_error_out@@Base+0x20c8>
   2b0f8:	cmp	r3, #45	; 0x2d
   2b0fc:	beq	2bc74 <__flatcc_fb_default_error_out@@Base+0x1708>
   2b100:	ldr	r2, [sl, #28]
   2b104:	ldr	r0, [sl, #20]
   2b108:	ldr	r1, [sl, #40]	; 0x28
   2b10c:	add	r5, r2, r2, lsl #2
   2b110:	lsl	r5, r5, #2
   2b114:	add	r3, r0, r5
   2b118:	cmp	r3, r1
   2b11c:	str	r3, [sl, #24]
   2b120:	beq	2d174 <__flatcc_fb_default_error_out@@Base+0x2c08>
   2b124:	ldr	r3, [sl, #60]	; 0x3c
   2b128:	ldr	ip, [sl, #64]	; 0x40
   2b12c:	sub	r3, r8, r3
   2b130:	str	r8, [r1]
   2b134:	add	r3, r3, #1
   2b138:	mov	r0, #60	; 0x3c
   2b13c:	mov	r8, r4
   2b140:	b	2b3b8 <__flatcc_fb_default_error_out@@Base+0xe4c>
   2b144:	add	r4, r8, #1
   2b148:	cmp	r9, r4
   2b14c:	beq	2b404 <__flatcc_fb_default_error_out@@Base+0xe98>
   2b150:	ldrb	r3, [r8, #1]
   2b154:	cmp	r3, #61	; 0x3d
   2b158:	beq	2b3d8 <__flatcc_fb_default_error_out@@Base+0xe6c>
   2b15c:	cmp	r3, #62	; 0x3e
   2b160:	bne	2b404 <__flatcc_fb_default_error_out@@Base+0xe98>
   2b164:	ldr	r2, [sl, #28]
   2b168:	ldr	r0, [sl, #20]
   2b16c:	ldr	r1, [sl, #40]	; 0x28
   2b170:	add	r5, r2, r2, lsl #2
   2b174:	add	r4, r8, #2
   2b178:	lsl	r5, r5, #2
   2b17c:	add	r3, r0, r5
   2b180:	cmp	r3, r1
   2b184:	str	r3, [sl, #24]
   2b188:	beq	2cc18 <__flatcc_fb_default_error_out@@Base+0x26ac>
   2b18c:	ldr	r3, [sl, #60]	; 0x3c
   2b190:	ldr	r0, [sl, #64]	; 0x40
   2b194:	sub	r3, r8, r3
   2b198:	str	r8, [r1]
   2b19c:	sub	r8, r4, r8
   2b1a0:	add	r3, r3, #1
   2b1a4:	str	r8, [r1, #4]
   2b1a8:	ldr	r2, [pc, #3116]	; 2bddc <__flatcc_fb_default_error_out@@Base+0x1870>
   2b1ac:	b	2b03c <__flatcc_fb_default_error_out@@Base+0xad0>
   2b1b0:	add	r4, r8, #1
   2b1b4:	cmp	r9, r4
   2b1b8:	beq	2b8c4 <__flatcc_fb_default_error_out@@Base+0x1358>
   2b1bc:	ldrb	r3, [r8, #1]
   2b1c0:	cmp	r3, #61	; 0x3d
   2b1c4:	beq	2bff0 <__flatcc_fb_default_error_out@@Base+0x1a84>
   2b1c8:	cmp	r3, #62	; 0x3e
   2b1cc:	bne	2b8c4 <__flatcc_fb_default_error_out@@Base+0x1358>
   2b1d0:	add	r3, r8, #2
   2b1d4:	cmp	r9, r3
   2b1d8:	beq	2ca70 <__flatcc_fb_default_error_out@@Base+0x2504>
   2b1dc:	ldrb	r2, [r8, #2]
   2b1e0:	cmp	r2, #61	; 0x3d
   2b1e4:	beq	2ca54 <__flatcc_fb_default_error_out@@Base+0x24e8>
   2b1e8:	cmp	r2, #62	; 0x3e
   2b1ec:	bne	2ca70 <__flatcc_fb_default_error_out@@Base+0x2504>
   2b1f0:	add	r3, r8, #3
   2b1f4:	cmp	r9, r3
   2b1f8:	beq	2b208 <__flatcc_fb_default_error_out@@Base+0xc9c>
   2b1fc:	ldrb	r2, [r8, #3]
   2b200:	cmp	r2, #61	; 0x3d
   2b204:	beq	2d5c0 <__flatcc_fb_default_error_out@@Base+0x3054>
   2b208:	mov	r2, r8
   2b20c:	ldr	r1, [pc, #3020]	; 2bde0 <__flatcc_fb_default_error_out@@Base+0x1874>
   2b210:	mov	r0, sl
   2b214:	mov	r8, r3
   2b218:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2b21c:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2b220:	add	r5, r8, #1
   2b224:	cmp	r9, r5
   2b228:	lsl	r0, r4, #8
   2b22c:	beq	2b24c <__flatcc_fb_default_error_out@@Base+0xce0>
   2b230:	ldrb	r3, [r8, #1]
   2b234:	ldr	r1, [pc, #2984]	; 2bde4 <__flatcc_fb_default_error_out@@Base+0x1878>
   2b238:	add	r2, r1, r3
   2b23c:	ldrb	r2, [r2, #8]
   2b240:	cmp	r2, #0
   2b244:	orrne	r0, r0, r3, lsl #16
   2b248:	bne	2b344 <__flatcc_fb_default_error_out@@Base+0xdd8>
   2b24c:	sub	r6, r5, r8
   2b250:	orr	r3, r0, r4, lsl #24
   2b254:	uxtb	r2, r6
   2b258:	add	r2, r2, #48	; 0x30
   2b25c:	orr	r3, r2, r3
   2b260:	ldr	r2, [pc, #2944]	; 2bde8 <__flatcc_fb_default_error_out@@Base+0x187c>
   2b264:	cmp	r3, r2
   2b268:	beq	2d3e8 <__flatcc_fb_default_error_out@@Base+0x2e7c>
   2b26c:	bhi	2b7d8 <__flatcc_fb_default_error_out@@Base+0x126c>
   2b270:	ldr	r2, [pc, #2932]	; 2bdec <__flatcc_fb_default_error_out@@Base+0x1880>
   2b274:	cmp	r3, r2
   2b278:	beq	2d4f0 <__flatcc_fb_default_error_out@@Base+0x2f84>
   2b27c:	bhi	2ba6c <__flatcc_fb_default_error_out@@Base+0x1500>
   2b280:	add	r2, r2, #-67108863	; 0xfc000001
   2b284:	cmp	r3, r2
   2b288:	beq	2d470 <__flatcc_fb_default_error_out@@Base+0x2f04>
   2b28c:	bls	2c99c <__flatcc_fb_default_error_out@@Base+0x2430>
   2b290:	ldr	r2, [pc, #2904]	; 2bdf0 <__flatcc_fb_default_error_out@@Base+0x1884>
   2b294:	cmp	r3, r2
   2b298:	beq	2d450 <__flatcc_fb_default_error_out@@Base+0x2ee4>
   2b29c:	bls	2d424 <__flatcc_fb_default_error_out@@Base+0x2eb8>
   2b2a0:	ldr	r2, [pc, #2892]	; 2bdf4 <__flatcc_fb_default_error_out@@Base+0x1888>
   2b2a4:	cmp	r3, r2
   2b2a8:	beq	2d490 <__flatcc_fb_default_error_out@@Base+0x2f24>
   2b2ac:	ldr	r2, [pc, #2884]	; 2bdf8 <__flatcc_fb_default_error_out@@Base+0x188c>
   2b2b0:	cmp	r3, r2
   2b2b4:	bne	2c9c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2b2b8:	mov	r2, #5
   2b2bc:	mov	r1, r8
   2b2c0:	ldr	r0, [pc, #2868]	; 2bdfc <__flatcc_fb_default_error_out@@Base+0x1890>
   2b2c4:	bl	13ef4 <memcmp@plt>
   2b2c8:	ldr	r4, [pc, #2864]	; 2be00 <__flatcc_fb_default_error_out@@Base+0x1894>
   2b2cc:	cmp	r0, #0
   2b2d0:	movne	r4, #9
   2b2d4:	ldr	r2, [sl, #28]
   2b2d8:	ldr	r0, [sl, #20]
   2b2dc:	ldr	r1, [sl, #40]	; 0x28
   2b2e0:	add	r7, r2, r2, lsl #2
   2b2e4:	lsl	r7, r7, #2
   2b2e8:	add	r3, r0, r7
   2b2ec:	cmp	r3, r1
   2b2f0:	str	r3, [sl, #24]
   2b2f4:	beq	2c714 <__flatcc_fb_default_error_out@@Base+0x21a8>
   2b2f8:	ldr	r3, [sl, #60]	; 0x3c
   2b2fc:	ldr	r0, [sl, #64]	; 0x40
   2b300:	sub	r3, r8, r3
   2b304:	add	r3, r3, #1
   2b308:	add	r2, r1, #20
   2b30c:	str	r8, [r1]
   2b310:	str	r4, [r1, #16]
   2b314:	str	r6, [r1, #4]
   2b318:	str	r3, [r1, #12]
   2b31c:	str	r0, [r1, #8]
   2b320:	mov	r8, r5
   2b324:	str	r2, [sl, #40]	; 0x28
   2b328:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2b32c:	ldrb	r3, [r5, #1]
   2b330:	add	r3, r1, r3
   2b334:	ldrb	r3, [r3, #8]
   2b338:	cmp	r3, #0
   2b33c:	beq	2c7c0 <__flatcc_fb_default_error_out@@Base+0x2254>
   2b340:	mov	r5, r2
   2b344:	add	r2, r5, #1
   2b348:	cmp	r9, r2
   2b34c:	bne	2b32c <__flatcc_fb_default_error_out@@Base+0xdc0>
   2b350:	ldrb	r4, [r5]
   2b354:	mov	r5, r9
   2b358:	b	2b24c <__flatcc_fb_default_error_out@@Base+0xce0>
   2b35c:	cmp	r4, #127	; 0x7f
   2b360:	cmpne	r4, #31
   2b364:	add	r5, r8, #1
   2b368:	bhi	2b378 <__flatcc_fb_default_error_out@@Base+0xe0c>
   2b36c:	cmp	r4, #32
   2b370:	cmpne	r4, #9
   2b374:	bne	2c7a4 <__flatcc_fb_default_error_out@@Base+0x2238>
   2b378:	ldr	r2, [sl, #28]
   2b37c:	ldr	r0, [sl, #20]
   2b380:	ldr	r1, [sl, #40]	; 0x28
   2b384:	add	r4, r2, r2, lsl #2
   2b388:	lsl	r4, r4, #2
   2b38c:	add	r3, r0, r4
   2b390:	cmp	r3, r1
   2b394:	str	r3, [sl, #24]
   2b398:	beq	2c7cc <__flatcc_fb_default_error_out@@Base+0x2260>
   2b39c:	ldr	r2, [sl, #60]	; 0x3c
   2b3a0:	ldr	ip, [sl, #64]	; 0x40
   2b3a4:	sub	r2, r8, r2
   2b3a8:	str	r8, [r1]
   2b3ac:	add	r3, r2, #1
   2b3b0:	mov	r8, r5
   2b3b4:	mov	r0, #8
   2b3b8:	mov	r2, #1
   2b3bc:	str	r3, [r1, #12]
   2b3c0:	add	r3, r1, #20
   2b3c4:	str	ip, [r1, #8]
   2b3c8:	str	r0, [r1, #16]
   2b3cc:	str	r2, [r1, #4]
   2b3d0:	str	r3, [sl, #40]	; 0x28
   2b3d4:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2b3d8:	add	r4, r8, #2
   2b3dc:	cmp	r9, r4
   2b3e0:	beq	2b3f0 <__flatcc_fb_default_error_out@@Base+0xe84>
   2b3e4:	ldrb	r3, [r8, #2]
   2b3e8:	cmp	r3, #61	; 0x3d
   2b3ec:	beq	2d2e0 <__flatcc_fb_default_error_out@@Base+0x2d74>
   2b3f0:	mov	r3, r4
   2b3f4:	mov	r2, r8
   2b3f8:	ldr	r1, [pc, #2564]	; 2be04 <__flatcc_fb_default_error_out@@Base+0x1898>
   2b3fc:	mov	r0, sl
   2b400:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2b404:	ldr	r2, [sl, #28]
   2b408:	ldr	r0, [sl, #20]
   2b40c:	ldr	r1, [sl, #40]	; 0x28
   2b410:	add	r5, r2, r2, lsl #2
   2b414:	lsl	r5, r5, #2
   2b418:	add	r3, r0, r5
   2b41c:	cmp	r3, r1
   2b420:	str	r3, [sl, #24]
   2b424:	beq	2c8f8 <__flatcc_fb_default_error_out@@Base+0x238c>
   2b428:	ldr	r3, [sl, #60]	; 0x3c
   2b42c:	ldr	r0, [sl, #64]	; 0x40
   2b430:	sub	r3, r8, r3
   2b434:	str	r8, [r1]
   2b438:	sub	r8, r4, r8
   2b43c:	add	r3, r3, #1
   2b440:	str	r8, [r1, #4]
   2b444:	mov	r2, #61	; 0x3d
   2b448:	b	2b03c <__flatcc_fb_default_error_out@@Base+0xad0>
   2b44c:	cmp	fp, #0
   2b450:	lslne	r3, fp, #1
   2b454:	addne	r1, r3, fp, lsl #3
   2b458:	moveq	r3, #1024	; 0x400
   2b45c:	lslne	r1, r1, #2
   2b460:	moveq	r1, #20480	; 0x5000
   2b464:	str	r3, [sl, #28]
   2b468:	str	r2, [sp, #4]
   2b46c:	bl	13f0c <realloc@plt>
   2b470:	cmp	r0, #0
   2b474:	str	r0, [sl, #20]
   2b478:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2b47c:	ldr	fp, [sl, #28]
   2b480:	add	r3, r0, r7
   2b484:	ldr	r2, [sp, #4]
   2b488:	lsl	ip, fp, #2
   2b48c:	add	lr, ip, fp
   2b490:	add	r1, r0, lr, lsl #2
   2b494:	str	r1, [sl, #24]
   2b498:	b	2acd0 <__flatcc_fb_default_error_out@@Base+0x764>
   2b49c:	cmp	fp, #0
   2b4a0:	lslne	r3, fp, #1
   2b4a4:	addne	r1, r3, fp, lsl #3
   2b4a8:	moveq	r3, #1024	; 0x400
   2b4ac:	lslne	r1, r1, #2
   2b4b0:	moveq	r1, #20480	; 0x5000
   2b4b4:	str	r3, [sl, #28]
   2b4b8:	str	r2, [sp, #4]
   2b4bc:	bl	13f0c <realloc@plt>
   2b4c0:	ldr	r2, [sp, #4]
   2b4c4:	cmp	r0, #0
   2b4c8:	str	r0, [sl, #20]
   2b4cc:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2b4d0:	ldr	fp, [sl, #28]
   2b4d4:	add	r3, r0, r6
   2b4d8:	lsl	ip, fp, #2
   2b4dc:	add	lr, ip, fp
   2b4e0:	lsl	lr, lr, #2
   2b4e4:	add	r1, r0, lr
   2b4e8:	mov	r7, lr
   2b4ec:	str	r1, [sl, #24]
   2b4f0:	b	2ac58 <__flatcc_fb_default_error_out@@Base+0x6ec>
   2b4f4:	cmp	r3, r1
   2b4f8:	add	r5, r4, #2
   2b4fc:	str	r1, [sl, #24]
   2b500:	beq	2b688 <__flatcc_fb_default_error_out@@Base+0x111c>
   2b504:	ldr	lr, [sl, #60]	; 0x3c
   2b508:	ldr	r6, [sl, #64]	; 0x40
   2b50c:	sub	lr, r8, lr
   2b510:	add	lr, lr, #1
   2b514:	str	lr, [sp, #4]
   2b518:	mov	lr, #21
   2b51c:	str	lr, [r3, #16]
   2b520:	ldr	lr, [sp, #4]
   2b524:	sub	r4, r5, r8
   2b528:	str	r8, [r3]
   2b52c:	stmib	r3, {r4, r6, lr}
   2b530:	cmp	r9, r5
   2b534:	add	r3, r3, #20
   2b538:	str	r3, [sl, #40]	; 0x28
   2b53c:	beq	2d010 <__flatcc_fb_default_error_out@@Base+0x2aa4>
   2b540:	ldrb	lr, [r8, #1]
   2b544:	cmp	lr, #0
   2b548:	beq	2cf4c <__flatcc_fb_default_error_out@@Base+0x29e0>
   2b54c:	cmp	lr, #34	; 0x22
   2b550:	cmpne	lr, #92	; 0x5c
   2b554:	addeq	r4, r8, #2
   2b558:	beq	2abf0 <__flatcc_fb_default_error_out@@Base+0x684>
   2b55c:	cmp	lr, #10
   2b560:	beq	2b72c <__flatcc_fb_default_error_out@@Base+0x11c0>
   2b564:	cmp	lr, #13
   2b568:	movne	r8, r5
   2b56c:	bne	2acc0 <__flatcc_fb_default_error_out@@Base+0x754>
   2b570:	add	r4, r8, #2
   2b574:	cmp	r9, r4
   2b578:	beq	2b58c <__flatcc_fb_default_error_out@@Base+0x1020>
   2b57c:	ldrb	lr, [r8, #2]
   2b580:	cmp	lr, #10
   2b584:	bne	2b58c <__flatcc_fb_default_error_out@@Base+0x1020>
   2b588:	add	r4, r8, #3
   2b58c:	add	r6, r6, #1
   2b590:	cmp	r3, r1
   2b594:	str	r1, [sl, #24]
   2b598:	str	r6, [sl, #64]	; 0x40
   2b59c:	str	r4, [sl, #60]	; 0x3c
   2b5a0:	movne	r1, r4
   2b5a4:	beq	2c810 <__flatcc_fb_default_error_out@@Base+0x22a4>
   2b5a8:	sub	r1, r5, r1
   2b5ac:	add	r1, r1, #1
   2b5b0:	sub	lr, r4, r5
   2b5b4:	str	r1, [r3, #12]
   2b5b8:	mov	r1, #18
   2b5bc:	stm	r3, {r5, lr}
   2b5c0:	str	r6, [r3, #8]
   2b5c4:	str	r1, [r3, #16]
   2b5c8:	add	r3, r3, #20
   2b5cc:	str	r3, [sl, #40]	; 0x28
   2b5d0:	mov	r5, r4
   2b5d4:	b	2abf0 <__flatcc_fb_default_error_out@@Base+0x684>
   2b5d8:	cmp	r3, r1
   2b5dc:	str	r1, [sl, #24]
   2b5e0:	beq	2bf60 <__flatcc_fb_default_error_out@@Base+0x19f4>
   2b5e4:	ldr	r2, [sl, #60]	; 0x3c
   2b5e8:	mov	r0, #23
   2b5ec:	sub	r2, r8, r2
   2b5f0:	mov	r1, #0
   2b5f4:	add	r2, r2, #1
   2b5f8:	ldr	ip, [sl, #64]	; 0x40
   2b5fc:	str	r8, [r3]
   2b600:	str	r2, [r3, #12]
   2b604:	add	r2, r3, #20
   2b608:	str	ip, [r3, #8]
   2b60c:	str	r0, [r3, #16]
   2b610:	str	r1, [r3, #4]
   2b614:	str	r2, [sl, #40]	; 0x28
   2b618:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2b61c:	cmp	r2, #46	; 0x2e
   2b620:	moveq	r0, r4
   2b624:	beq	2afc8 <__flatcc_fb_default_error_out@@Base+0xa5c>
   2b628:	cmp	r9, r4
   2b62c:	beq	2c280 <__flatcc_fb_default_error_out@@Base+0x1d14>
   2b630:	and	r2, r2, #223	; 0xdf
   2b634:	cmp	r2, #69	; 0x45
   2b638:	moveq	r0, r4
   2b63c:	bne	2c280 <__flatcc_fb_default_error_out@@Base+0x1d14>
   2b640:	add	r3, r4, #1
   2b644:	cmp	r9, r3
   2b648:	beq	2b65c <__flatcc_fb_default_error_out@@Base+0x10f0>
   2b64c:	ldrb	r2, [r4, #1]
   2b650:	sub	r2, r2, #43	; 0x2b
   2b654:	tst	r2, #253	; 0xfd
   2b658:	movne	r3, r4
   2b65c:	add	r3, r3, #1
   2b660:	b	2b678 <__flatcc_fb_default_error_out@@Base+0x110c>
   2b664:	ldrb	r2, [r3]
   2b668:	add	r3, r3, #1
   2b66c:	sub	r2, r2, #48	; 0x30
   2b670:	cmp	r2, #9
   2b674:	bhi	2aff0 <__flatcc_fb_default_error_out@@Base+0xa84>
   2b678:	cmp	r9, r3
   2b67c:	mov	r4, r3
   2b680:	bne	2b664 <__flatcc_fb_default_error_out@@Base+0x10f8>
   2b684:	b	2aff0 <__flatcc_fb_default_error_out@@Base+0xa84>
   2b688:	cmp	fp, #0
   2b68c:	lslne	r3, fp, #1
   2b690:	addne	r1, r3, fp, lsl #3
   2b694:	moveq	r3, #1024	; 0x400
   2b698:	lslne	r1, r1, #2
   2b69c:	moveq	r1, #20480	; 0x5000
   2b6a0:	str	r3, [sl, #28]
   2b6a4:	str	r2, [sp, #4]
   2b6a8:	bl	13f0c <realloc@plt>
   2b6ac:	cmp	r0, #0
   2b6b0:	str	r0, [sl, #20]
   2b6b4:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2b6b8:	ldr	fp, [sl, #28]
   2b6bc:	add	r3, r0, r7
   2b6c0:	ldr	r2, [sp, #4]
   2b6c4:	lsl	ip, fp, #2
   2b6c8:	add	lr, ip, fp
   2b6cc:	lsl	lr, lr, #2
   2b6d0:	add	r1, r0, lr
   2b6d4:	mov	r7, lr
   2b6d8:	str	r1, [sl, #24]
   2b6dc:	b	2b504 <__flatcc_fb_default_error_out@@Base+0xf98>
   2b6e0:	cmp	r3, r1
   2b6e4:	add	r4, r4, #2
   2b6e8:	str	r1, [sl, #24]
   2b6ec:	beq	2c8ac <__flatcc_fb_default_error_out@@Base+0x2340>
   2b6f0:	ldr	r2, [sl, #60]	; 0x3c
   2b6f4:	mov	r1, #22
   2b6f8:	sub	r2, r8, r2
   2b6fc:	add	r2, r2, #1
   2b700:	ldr	r0, [sl, #64]	; 0x40
   2b704:	str	r8, [r3]
   2b708:	sub	r8, r4, r8
   2b70c:	str	r8, [r3, #4]
   2b710:	str	r2, [r3, #12]
   2b714:	add	r2, r3, #20
   2b718:	str	r0, [r3, #8]
   2b71c:	str	r1, [r3, #16]
   2b720:	mov	r8, r4
   2b724:	str	r2, [sl, #40]	; 0x28
   2b728:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2b72c:	add	r4, r8, #2
   2b730:	cmp	r9, r4
   2b734:	beq	2b58c <__flatcc_fb_default_error_out@@Base+0x1020>
   2b738:	ldrb	lr, [r8, #2]
   2b73c:	cmp	lr, #13
   2b740:	bne	2b58c <__flatcc_fb_default_error_out@@Base+0x1020>
   2b744:	b	2b588 <__flatcc_fb_default_error_out@@Base+0x101c>
   2b748:	cmp	r2, r1
   2b74c:	str	r2, [sl, #24]
   2b750:	beq	2ca10 <__flatcc_fb_default_error_out@@Base+0x24a4>
   2b754:	ldr	r3, [sl, #60]	; 0x3c
   2b758:	ldr	ip, [sl, #64]	; 0x40
   2b75c:	sub	r2, r8, r6
   2b760:	sub	r3, r6, r3
   2b764:	str	r2, [r1, #4]
   2b768:	add	r3, r3, #1
   2b76c:	mov	r0, #0
   2b770:	add	r2, r1, #20
   2b774:	str	r6, [r1]
   2b778:	str	r3, [r1, #12]
   2b77c:	str	ip, [r1, #8]
   2b780:	str	r0, [r1, #16]
   2b784:	str	r2, [sl, #40]	; 0x28
   2b788:	b	2aa14 <__flatcc_fb_default_error_out@@Base+0x4a8>
   2b78c:	mov	r8, r2
   2b790:	b	2a750 <__flatcc_fb_default_error_out@@Base+0x1e4>
   2b794:	cmp	ip, #0
   2b798:	lslne	r3, ip, #1
   2b79c:	addne	r1, r3, ip, lsl #3
   2b7a0:	moveq	r3, #1024	; 0x400
   2b7a4:	lslne	r1, r1, #2
   2b7a8:	moveq	r1, #20480	; 0x5000
   2b7ac:	str	r3, [sl, #28]
   2b7b0:	bl	13f0c <realloc@plt>
   2b7b4:	cmp	r0, #0
   2b7b8:	str	r0, [sl, #20]
   2b7bc:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2b7c0:	ldr	r3, [sl, #28]
   2b7c4:	add	r1, r0, r5
   2b7c8:	add	r3, r3, r3, lsl #2
   2b7cc:	add	r0, r0, r3, lsl #2
   2b7d0:	str	r0, [sl, #24]
   2b7d4:	b	2aa88 <__flatcc_fb_default_error_out@@Base+0x51c>
   2b7d8:	ldr	r2, [pc, #1576]	; 2be08 <__flatcc_fb_default_error_out@@Base+0x189c>
   2b7dc:	cmp	r3, r2
   2b7e0:	beq	2d388 <__flatcc_fb_default_error_out@@Base+0x2e1c>
   2b7e4:	bhi	2bac8 <__flatcc_fb_default_error_out@@Base+0x155c>
   2b7e8:	ldr	r2, [pc, #1564]	; 2be0c <__flatcc_fb_default_error_out@@Base+0x18a0>
   2b7ec:	cmp	r3, r2
   2b7f0:	beq	2d550 <__flatcc_fb_default_error_out@@Base+0x2fe4>
   2b7f4:	bls	2c9c8 <__flatcc_fb_default_error_out@@Base+0x245c>
   2b7f8:	ldr	r2, [pc, #1552]	; 2be10 <__flatcc_fb_default_error_out@@Base+0x18a4>
   2b7fc:	cmp	r3, r2
   2b800:	beq	2d59c <__flatcc_fb_default_error_out@@Base+0x3030>
   2b804:	bls	2d570 <__flatcc_fb_default_error_out@@Base+0x3004>
   2b808:	ldr	r2, [pc, #1540]	; 2be14 <__flatcc_fb_default_error_out@@Base+0x18a8>
   2b80c:	cmp	r3, r2
   2b810:	beq	2d510 <__flatcc_fb_default_error_out@@Base+0x2fa4>
   2b814:	add	r2, r2, #16711680	; 0xff0000
   2b818:	add	r2, r2, #768	; 0x300
   2b81c:	cmp	r3, r2
   2b820:	bne	2c9c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2b824:	mov	r2, #4
   2b828:	mov	r1, r8
   2b82c:	ldr	r0, [pc, #1508]	; 2be18 <__flatcc_fb_default_error_out@@Base+0x18ac>
   2b830:	bl	13ef4 <memcmp@plt>
   2b834:	cmp	r0, #0
   2b838:	movne	r4, #9
   2b83c:	mvneq	r4, #996	; 0x3e4
   2b840:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2b844:	add	r4, r8, #2
   2b848:	b	2b874 <__flatcc_fb_default_error_out@@Base+0x1308>
   2b84c:	mov	r2, r4
   2b850:	ldrb	r3, [r2], #1
   2b854:	sub	r1, r3, #48	; 0x30
   2b858:	cmp	r1, #9
   2b85c:	bls	2b870 <__flatcc_fb_default_error_out@@Base+0x1304>
   2b860:	orr	r3, r3, #32
   2b864:	sub	r3, r3, #97	; 0x61
   2b868:	cmp	r3, #5
   2b86c:	bhi	2b87c <__flatcc_fb_default_error_out@@Base+0x1310>
   2b870:	mov	r4, r2
   2b874:	cmp	r9, r4
   2b878:	bne	2b84c <__flatcc_fb_default_error_out@@Base+0x12e0>
   2b87c:	ldr	r2, [sl, #28]
   2b880:	ldr	r0, [sl, #20]
   2b884:	ldr	r1, [sl, #40]	; 0x28
   2b888:	add	r5, r2, r2, lsl #2
   2b88c:	lsl	r5, r5, #2
   2b890:	add	r3, r0, r5
   2b894:	cmp	r3, r1
   2b898:	str	r3, [sl, #24]
   2b89c:	beq	2bcac <__flatcc_fb_default_error_out@@Base+0x1740>
   2b8a0:	ldr	r3, [sl, #60]	; 0x3c
   2b8a4:	ldr	r0, [sl, #64]	; 0x40
   2b8a8:	sub	r3, r8, r3
   2b8ac:	str	r8, [r1]
   2b8b0:	sub	r8, r4, r8
   2b8b4:	add	r3, r3, #1
   2b8b8:	str	r8, [r1, #4]
   2b8bc:	mov	r2, #14
   2b8c0:	b	2b03c <__flatcc_fb_default_error_out@@Base+0xad0>
   2b8c4:	ldr	r2, [sl, #28]
   2b8c8:	ldr	r0, [sl, #20]
   2b8cc:	ldr	r1, [sl, #40]	; 0x28
   2b8d0:	add	r5, r2, r2, lsl #2
   2b8d4:	lsl	r5, r5, #2
   2b8d8:	add	r3, r0, r5
   2b8dc:	cmp	r3, r1
   2b8e0:	str	r3, [sl, #24]
   2b8e4:	beq	2cce4 <__flatcc_fb_default_error_out@@Base+0x2778>
   2b8e8:	ldr	r3, [sl, #60]	; 0x3c
   2b8ec:	ldr	ip, [sl, #64]	; 0x40
   2b8f0:	sub	r3, r8, r3
   2b8f4:	str	r8, [r1]
   2b8f8:	add	r3, r3, #1
   2b8fc:	mov	r0, #62	; 0x3e
   2b900:	mov	r8, r4
   2b904:	b	2b3b8 <__flatcc_fb_default_error_out@@Base+0xe4c>
   2b908:	ldr	r2, [sl, #28]
   2b90c:	ldr	r0, [sl, #20]
   2b910:	ldr	r1, [sl, #40]	; 0x28
   2b914:	add	r5, r2, r2, lsl #2
   2b918:	lsl	r5, r5, #2
   2b91c:	add	r3, r0, r5
   2b920:	cmp	r3, r1
   2b924:	str	r3, [sl, #24]
   2b928:	beq	2cdc8 <__flatcc_fb_default_error_out@@Base+0x285c>
   2b92c:	ldr	r3, [sl, #60]	; 0x3c
   2b930:	ldr	ip, [sl, #64]	; 0x40
   2b934:	sub	r3, r8, r3
   2b938:	str	r8, [r1]
   2b93c:	add	r3, r3, #1
   2b940:	mov	r0, #43	; 0x2b
   2b944:	mov	r8, r4
   2b948:	b	2b3b8 <__flatcc_fb_default_error_out@@Base+0xe4c>
   2b94c:	ldr	r2, [sl, #28]
   2b950:	ldr	r0, [sl, #20]
   2b954:	ldr	r1, [sl, #40]	; 0x28
   2b958:	add	r5, r2, r2, lsl #2
   2b95c:	lsl	r5, r5, #2
   2b960:	add	r3, r0, r5
   2b964:	cmp	r3, r1
   2b968:	str	r3, [sl, #24]
   2b96c:	beq	2d0a8 <__flatcc_fb_default_error_out@@Base+0x2b3c>
   2b970:	ldr	r3, [sl, #60]	; 0x3c
   2b974:	ldr	ip, [sl, #64]	; 0x40
   2b978:	sub	r3, r8, r3
   2b97c:	str	r8, [r1]
   2b980:	add	r3, r3, #1
   2b984:	mov	r0, #58	; 0x3a
   2b988:	mov	r8, r4
   2b98c:	b	2b3b8 <__flatcc_fb_default_error_out@@Base+0xe4c>
   2b990:	ldr	r2, [sl, #28]
   2b994:	ldr	r0, [sl, #20]
   2b998:	ldr	r1, [sl, #40]	; 0x28
   2b99c:	add	r4, r2, r2, lsl #2
   2b9a0:	lsl	r4, r4, #2
   2b9a4:	add	r3, r0, r4
   2b9a8:	cmp	r3, r1
   2b9ac:	str	r3, [sl, #24]
   2b9b0:	beq	2cb48 <__flatcc_fb_default_error_out@@Base+0x25dc>
   2b9b4:	ldr	r3, [sl, #60]	; 0x3c
   2b9b8:	ldr	ip, [sl, #64]	; 0x40
   2b9bc:	sub	r3, r8, r3
   2b9c0:	str	r8, [r1]
   2b9c4:	add	r3, r3, #1
   2b9c8:	mov	r0, #42	; 0x2a
   2b9cc:	mov	r8, r5
   2b9d0:	b	2b3b8 <__flatcc_fb_default_error_out@@Base+0xe4c>
   2b9d4:	add	r6, r2, r2, lsl #2
   2b9d8:	ldr	ip, [sl, #40]	; 0x28
   2b9dc:	lsl	r6, r6, #2
   2b9e0:	add	r3, r0, r6
   2b9e4:	cmp	r3, ip
   2b9e8:	add	r4, r8, #2
   2b9ec:	str	r3, [sl, #24]
   2b9f0:	mov	r5, r6
   2b9f4:	beq	2ce94 <__flatcc_fb_default_error_out@@Base+0x2928>
   2b9f8:	ldr	r1, [sl, #60]	; 0x3c
   2b9fc:	ldr	r6, [sl, #64]	; 0x40
   2ba00:	sub	r1, r8, r1
   2ba04:	add	r1, r1, #1
   2ba08:	ldr	lr, [pc, #1036]	; 2be1c <__flatcc_fb_default_error_out@@Base+0x18b0>
   2ba0c:	str	r1, [ip, #12]
   2ba10:	sub	r7, r4, r8
   2ba14:	add	r1, ip, #20
   2ba18:	str	r8, [ip]
   2ba1c:	str	r6, [ip, #8]
   2ba20:	str	lr, [ip, #16]
   2ba24:	str	r7, [ip, #4]
   2ba28:	str	r1, [sl, #40]	; 0x28
   2ba2c:	b	2a990 <__flatcc_fb_default_error_out@@Base+0x424>
   2ba30:	lsl	r5, r5, #2
   2ba34:	add	r3, r0, r5
   2ba38:	cmp	r3, r1
   2ba3c:	add	r4, r8, #2
   2ba40:	str	r3, [sl, #24]
   2ba44:	beq	2cb04 <__flatcc_fb_default_error_out@@Base+0x2598>
   2ba48:	ldr	r3, [sl, #60]	; 0x3c
   2ba4c:	ldr	r0, [sl, #64]	; 0x40
   2ba50:	sub	r3, r8, r3
   2ba54:	str	r8, [r1]
   2ba58:	sub	r8, r4, r8
   2ba5c:	add	r3, r3, #1
   2ba60:	str	r8, [r1, #4]
   2ba64:	ldr	r2, [pc, #948]	; 2be20 <__flatcc_fb_default_error_out@@Base+0x18b4>
   2ba68:	b	2b03c <__flatcc_fb_default_error_out@@Base+0xad0>
   2ba6c:	ldr	r2, [pc, #944]	; 2be24 <__flatcc_fb_default_error_out@@Base+0x18b8>
   2ba70:	cmp	r3, r2
   2ba74:	beq	2d234 <__flatcc_fb_default_error_out@@Base+0x2cc8>
   2ba78:	bls	2cbd0 <__flatcc_fb_default_error_out@@Base+0x2664>
   2ba7c:	ldr	r2, [pc, #932]	; 2be28 <__flatcc_fb_default_error_out@@Base+0x18bc>
   2ba80:	cmp	r3, r2
   2ba84:	beq	2d280 <__flatcc_fb_default_error_out@@Base+0x2d14>
   2ba88:	bls	2d254 <__flatcc_fb_default_error_out@@Base+0x2ce8>
   2ba8c:	ldr	r2, [pc, #920]	; 2be2c <__flatcc_fb_default_error_out@@Base+0x18c0>
   2ba90:	cmp	r3, r2
   2ba94:	beq	2d214 <__flatcc_fb_default_error_out@@Base+0x2ca8>
   2ba98:	add	r2, r2, #3584	; 0xe00
   2ba9c:	add	r2, r2, #3
   2baa0:	cmp	r3, r2
   2baa4:	bne	2c9c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2baa8:	mov	r2, #9
   2baac:	mov	r1, r8
   2bab0:	ldr	r0, [pc, #888]	; 2be30 <__flatcc_fb_default_error_out@@Base+0x18c4>
   2bab4:	bl	13ef4 <memcmp@plt>
   2bab8:	ldr	r4, [pc, #884]	; 2be34 <__flatcc_fb_default_error_out@@Base+0x18c8>
   2babc:	cmp	r0, #0
   2bac0:	movne	r4, #9
   2bac4:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2bac8:	ldr	r2, [pc, #872]	; 2be38 <__flatcc_fb_default_error_out@@Base+0x18cc>
   2bacc:	cmp	r3, r2
   2bad0:	beq	2d2fc <__flatcc_fb_default_error_out@@Base+0x2d90>
   2bad4:	bls	2cf08 <__flatcc_fb_default_error_out@@Base+0x299c>
   2bad8:	ldr	r2, [pc, #860]	; 2be3c <__flatcc_fb_default_error_out@@Base+0x18d0>
   2badc:	cmp	r3, r2
   2bae0:	beq	2d348 <__flatcc_fb_default_error_out@@Base+0x2ddc>
   2bae4:	bls	2d31c <__flatcc_fb_default_error_out@@Base+0x2db0>
   2bae8:	ldr	r2, [pc, #848]	; 2be40 <__flatcc_fb_default_error_out@@Base+0x18d4>
   2baec:	cmp	r3, r2
   2baf0:	beq	2d368 <__flatcc_fb_default_error_out@@Base+0x2dfc>
   2baf4:	add	r2, r2, #65024	; 0xfe00
   2baf8:	cmp	r3, r2
   2bafc:	bne	2c9c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2bb00:	mov	r2, #6
   2bb04:	mov	r1, r8
   2bb08:	ldr	r0, [pc, #820]	; 2be44 <__flatcc_fb_default_error_out@@Base+0x18d8>
   2bb0c:	bl	13ef4 <memcmp@plt>
   2bb10:	cmp	r0, #0
   2bb14:	movne	r4, #9
   2bb18:	mvneq	r4, #972	; 0x3cc
   2bb1c:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2bb20:	ldr	r2, [sl, #28]
   2bb24:	ldr	r0, [sl, #20]
   2bb28:	ldr	r1, [sl, #40]	; 0x28
   2bb2c:	add	r5, r2, r2, lsl #2
   2bb30:	lsl	r5, r5, #2
   2bb34:	add	r3, r0, r5
   2bb38:	cmp	r3, r1
   2bb3c:	str	r3, [sl, #24]
   2bb40:	beq	2cd84 <__flatcc_fb_default_error_out@@Base+0x2818>
   2bb44:	ldr	r3, [sl, #60]	; 0x3c
   2bb48:	ldr	ip, [sl, #64]	; 0x40
   2bb4c:	sub	r3, r8, r3
   2bb50:	str	r8, [r1]
   2bb54:	add	r3, r3, #1
   2bb58:	mov	r0, #46	; 0x2e
   2bb5c:	mov	r8, r4
   2bb60:	b	2b3b8 <__flatcc_fb_default_error_out@@Base+0xe4c>
   2bb64:	add	r4, r8, #2
   2bb68:	cmp	r9, r4
   2bb6c:	moveq	r3, #0
   2bb70:	beq	2bb88 <__flatcc_fb_default_error_out@@Base+0x161c>
   2bb74:	ldrb	r3, [r8, #2]
   2bb78:	cmp	r3, #33	; 0x21
   2bb7c:	cmpne	r3, #42	; 0x2a
   2bb80:	moveq	r3, #1
   2bb84:	movne	r3, #0
   2bb88:	add	r4, r4, r3
   2bb8c:	sub	r8, r4, r8
   2bb90:	cmp	r8, #3
   2bb94:	moveq	r3, #1
   2bb98:	movne	r3, #0
   2bb9c:	str	r3, [sl, #32]
   2bba0:	beq	2cff8 <__flatcc_fb_default_error_out@@Base+0x2a8c>
   2bba4:	ldr	r5, [pc, #772]	; 2beb0 <__flatcc_fb_default_error_out@@Base+0x1944>
   2bba8:	mov	r7, #20480	; 0x5000
   2bbac:	mov	r6, #1024	; 0x400
   2bbb0:	mov	fp, #7
   2bbb4:	sub	r2, r4, #1
   2bbb8:	b	2bbc0 <__flatcc_fb_default_error_out@@Base+0x1654>
   2bbbc:	mov	r2, r8
   2bbc0:	add	r8, r2, #1
   2bbc4:	cmp	r9, r8
   2bbc8:	beq	2bcf0 <__flatcc_fb_default_error_out@@Base+0x1784>
   2bbcc:	ldrb	r3, [r2, #1]
   2bbd0:	cmp	r3, #127	; 0x7f
   2bbd4:	cmpne	r3, #31
   2bbd8:	bls	2bd60 <__flatcc_fb_default_error_out@@Base+0x17f4>
   2bbdc:	cmp	r3, #47	; 0x2f
   2bbe0:	bne	2bbbc <__flatcc_fb_default_error_out@@Base+0x1650>
   2bbe4:	ldrb	r3, [r8, #-1]
   2bbe8:	cmp	r3, #42	; 0x2a
   2bbec:	bne	2bbbc <__flatcc_fb_default_error_out@@Base+0x1650>
   2bbf0:	cmp	r4, r2
   2bbf4:	beq	2d5f8 <__flatcc_fb_default_error_out@@Base+0x308c>
   2bbf8:	ldr	r3, [sl, #32]
   2bbfc:	mov	r8, r2
   2bc00:	cmp	r3, #0
   2bc04:	bne	2bd08 <__flatcc_fb_default_error_out@@Base+0x179c>
   2bc08:	cmp	r9, r8
   2bc0c:	beq	2c0bc <__flatcc_fb_default_error_out@@Base+0x1b50>
   2bc10:	ldrb	r3, [r8]
   2bc14:	cmp	r3, #0
   2bc18:	beq	2c0c0 <__flatcc_fb_default_error_out@@Base+0x1b54>
   2bc1c:	cmp	r3, #10
   2bc20:	beq	2bd78 <__flatcc_fb_default_error_out@@Base+0x180c>
   2bc24:	cmp	r3, #13
   2bc28:	beq	2bdb0 <__flatcc_fb_default_error_out@@Base+0x1844>
   2bc2c:	cmp	r3, #127	; 0x7f
   2bc30:	cmpne	r3, #31
   2bc34:	movls	r2, #1
   2bc38:	movhi	r2, #0
   2bc3c:	bhi	2bda4 <__flatcc_fb_default_error_out@@Base+0x1838>
   2bc40:	cmp	r3, #9
   2bc44:	cmpne	r3, #32
   2bc48:	add	r4, r8, #1
   2bc4c:	bne	2beb4 <__flatcc_fb_default_error_out@@Base+0x1948>
   2bc50:	ldr	r3, [sl, #32]
   2bc54:	cmp	r3, #0
   2bc58:	beq	2bbb4 <__flatcc_fb_default_error_out@@Base+0x1648>
   2bc5c:	mov	r2, r8
   2bc60:	mov	r3, r4
   2bc64:	mov	r1, r5
   2bc68:	mov	r0, sl
   2bc6c:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2bc70:	b	2bbb4 <__flatcc_fb_default_error_out@@Base+0x1648>
   2bc74:	add	r3, r8, #2
   2bc78:	mov	r2, r8
   2bc7c:	ldr	r1, [pc, #452]	; 2be48 <__flatcc_fb_default_error_out@@Base+0x18dc>
   2bc80:	mov	r0, sl
   2bc84:	mov	r8, r3
   2bc88:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2bc8c:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2bc90:	add	r3, r8, #2
   2bc94:	mov	r2, r8
   2bc98:	ldr	r1, [pc, #428]	; 2be4c <__flatcc_fb_default_error_out@@Base+0x18e0>
   2bc9c:	mov	r0, sl
   2bca0:	mov	r8, r3
   2bca4:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2bca8:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2bcac:	cmp	r2, #0
   2bcb0:	lslne	r3, r2, #1
   2bcb4:	addne	r2, r3, r2, lsl #3
   2bcb8:	moveq	r3, #1024	; 0x400
   2bcbc:	lslne	r1, r2, #2
   2bcc0:	moveq	r1, #20480	; 0x5000
   2bcc4:	str	r3, [sl, #28]
   2bcc8:	bl	13f0c <realloc@plt>
   2bccc:	cmp	r0, #0
   2bcd0:	str	r0, [sl, #20]
   2bcd4:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2bcd8:	ldr	r2, [sl, #28]
   2bcdc:	add	r1, r0, r5
   2bce0:	add	r2, r2, r2, lsl #2
   2bce4:	add	r0, r0, r2, lsl #2
   2bce8:	str	r0, [sl, #24]
   2bcec:	b	2b8a0 <__flatcc_fb_default_error_out@@Base+0x1334>
   2bcf0:	cmp	r9, r4
   2bcf4:	beq	2c0bc <__flatcc_fb_default_error_out@@Base+0x1b50>
   2bcf8:	ldr	r3, [sl, #32]
   2bcfc:	cmp	r3, #0
   2bd00:	beq	2c0bc <__flatcc_fb_default_error_out@@Base+0x1b50>
   2bd04:	mov	r8, r9
   2bd08:	ldr	r3, [sl, #28]
   2bd0c:	ldr	r0, [sl, #20]
   2bd10:	ldr	r1, [sl, #40]	; 0x28
   2bd14:	add	r2, r3, r3, lsl #2
   2bd18:	lsl	r2, r2, #2
   2bd1c:	add	ip, r0, r2
   2bd20:	cmp	ip, r1
   2bd24:	str	ip, [sl, #24]
   2bd28:	beq	2c070 <__flatcc_fb_default_error_out@@Base+0x1b04>
   2bd2c:	ldr	r3, [sl, #60]	; 0x3c
   2bd30:	ldr	r0, [sl, #64]	; 0x40
   2bd34:	sub	r3, r4, r3
   2bd38:	str	r4, [r1]
   2bd3c:	add	r3, r3, #1
   2bd40:	sub	r4, r8, r4
   2bd44:	add	r2, r1, #20
   2bd48:	str	r5, [r1, #16]
   2bd4c:	str	r4, [r1, #4]
   2bd50:	str	r3, [r1, #12]
   2bd54:	str	r0, [r1, #8]
   2bd58:	str	r2, [sl, #40]	; 0x28
   2bd5c:	b	2bc08 <__flatcc_fb_default_error_out@@Base+0x169c>
   2bd60:	cmp	r4, r8
   2bd64:	beq	2bc14 <__flatcc_fb_default_error_out@@Base+0x16a8>
   2bd68:	ldr	r3, [sl, #32]
   2bd6c:	cmp	r3, #0
   2bd70:	beq	2bc10 <__flatcc_fb_default_error_out@@Base+0x16a4>
   2bd74:	b	2bd08 <__flatcc_fb_default_error_out@@Base+0x179c>
   2bd78:	add	r4, r8, #1
   2bd7c:	cmp	r9, r4
   2bd80:	beq	2bd90 <__flatcc_fb_default_error_out@@Base+0x1824>
   2bd84:	ldrb	r3, [r8, #1]
   2bd88:	cmp	r3, #13
   2bd8c:	beq	2bdc8 <__flatcc_fb_default_error_out@@Base+0x185c>
   2bd90:	ldr	r3, [sl, #64]	; 0x40
   2bd94:	str	r4, [sl, #60]	; 0x3c
   2bd98:	add	r3, r3, #1
   2bd9c:	str	r3, [sl, #64]	; 0x40
   2bda0:	b	2bbb4 <__flatcc_fb_default_error_out@@Base+0x1648>
   2bda4:	add	r8, r8, #2
   2bda8:	str	r2, [sl, #32]
   2bdac:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2bdb0:	add	r4, r8, #1
   2bdb4:	cmp	r9, r4
   2bdb8:	beq	2bd90 <__flatcc_fb_default_error_out@@Base+0x1824>
   2bdbc:	ldrb	r3, [r8, #1]
   2bdc0:	cmp	r3, #10
   2bdc4:	bne	2bd90 <__flatcc_fb_default_error_out@@Base+0x1824>
   2bdc8:	add	r4, r8, #2
   2bdcc:	b	2bd90 <__flatcc_fb_default_error_out@@Base+0x1824>
   2bdd0:	andeq	r3, r0, sl, lsr sp
   2bdd4:	andeq	r3, r0, sl, lsr #26
   2bdd8:	andeq	r3, r0, fp, lsr #26
   2bddc:	andeq	r3, r0, sp, lsr lr
   2bde0:	eorseq	r3, lr, lr, lsr lr
   2bde4:	andeq	r8, r5, r4, lsl #20
   2bde8:	ldrbvs	r7, [r0, #-571]!	; 0xfffffdc5
   2bdec:	stmdacc	r9!, {r0, r2, r4, r5, r8, sl, ip, sp, lr}^
   2bdf0:	strbtcc	r6, [lr], #-2357	; 0xfffff6cb
   2bdf4:			; <UNDEFINED> instruction: 0x36697536
   2bdf8:			; <UNDEFINED> instruction: 0x366e6935
   2bdfc:	strdeq	r2, [r4], -r8
   2be00:			; <UNDEFINED> instruction: 0xfffffc20
   2be04:	andeq	r3, r0, sp, lsr sp
   2be08:	mcrvs	6, 3, r6, cr9, cr14, {1}
   2be0c:			; <UNDEFINED> instruction: 0x676c7535
   2be10:			; <UNDEFINED> instruction: 0x67747336
   2be14:	sfmvs	f6, 2, [pc], #-208	; 2bd4c <__flatcc_fb_default_error_out@@Base+0x17e0>
   2be18:			; <UNDEFINED> instruction: 0x00041eb0
   2be1c:	andeq	r7, r0, ip, ror ip
   2be20:	andeq	r3, r0, r6, lsr #26
   2be24:	strbvs	r7, [r1, #-1077]!	; 0xfffffbcb
   2be28:	strbvs	r6, [lr, #-2359]!	; 0xfffff6c9
   2be2c:	strbvs	r6, [pc, #-1078]!	; 2b9fe <__flatcc_fb_default_error_out@@Base+0x1492>
   2be30:	strdeq	r8, [r5], -r0
   2be34:			; <UNDEFINED> instruction: 0xfffffc38
   2be38:	strbtvc	r7, [r9], #-1332	; 0xfffffacc
   2be3c:	strbtvc	r6, [lr], #-2355	; 0xfffff6cd
   2be40:	ldrbtvc	r7, [r3], #-1334	; 0xfffffaca
   2be44:	andeq	sl, r5, r4, lsl #14
   2be48:	andeq	r2, r0, ip, lsr sp
   2be4c:	andeq	r2, r0, sp, lsr #26
   2be50:	andeq	r3, r0, lr, lsr sp
   2be54:	andeq	r2, r0, lr, lsr #28
   2be58:	andeq	r3, r0, ip, ror sp
   2be5c:	andeq	r2, r0, r6, lsr #12
   2be60:	andeq	r2, r0, fp, lsr #22
   2be64:	andeq	r3, r0, sl, lsr sl
   2be68:	andeq	r2, r0, sl, lsr #20
   2be6c:	andeq	r3, r0, pc, lsr #26
   2be70:	andeq	r3, r0, ip, lsr sp
   2be74:	eorseq	r3, sp, ip, lsr ip
   2be78:	andeq	r3, r0, sp, lsr #28
   2be7c:	andeq	r3, r0, sp, lsr #26
   2be80:	rsbcc	r6, ip, #57671680	; 0x3700000
   2be84:	rsbcc	r6, lr, #868352	; 0xd4000
   2be88:	rsbcc	r7, r9, #226492416	; 0xd800000
   2be8c:	ldrbvs	r6, [r4, #-313]!	; 0xfffffec7
   2be90:	ldrbvs	r7, [r2, #-1076]!	; 0xfffffbcc
   2be94:	andeq	sl, r5, r8, ror #15
   2be98:			; <UNDEFINED> instruction: 0xfffffc24
   2be9c:	eorseq	r3, sp, lr, lsr lr
   2bea0:	andeq	r3, r0, lr, lsr lr
   2bea4:	andeq	r3, r0, ip, lsr ip
   2bea8:	stmdacc	lr!, {r2, r4, r5, r8, fp, sp, lr}^
   2beac:	andeq	r2, r4, r0, lsl #6
   2beb0:			; <UNDEFINED> instruction: 0xfffffc3c
   2beb4:	ldr	r3, [sl, #28]
   2beb8:	ldr	r0, [sl, #20]
   2bebc:	ldr	r1, [sl, #40]	; 0x28
   2bec0:	add	r2, r3, r3, lsl #2
   2bec4:	lsl	r2, r2, #2
   2bec8:	add	ip, r0, r2
   2becc:	cmp	ip, r1
   2bed0:	str	ip, [sl, #24]
   2bed4:	beq	2d018 <__flatcc_fb_default_error_out@@Base+0x2aac>
   2bed8:	ldr	r3, [sl, #60]	; 0x3c
   2bedc:	ldr	r0, [sl, #64]	; 0x40
   2bee0:	sub	r3, r8, r3
   2bee4:	add	r3, r3, #1
   2bee8:	add	r2, r1, #20
   2beec:	mov	ip, #1
   2bef0:	str	fp, [r1, #16]
   2bef4:	str	r8, [r1]
   2bef8:	str	ip, [r1, #4]
   2befc:	str	r3, [r1, #12]
   2bf00:	str	r0, [r1, #8]
   2bf04:	str	r2, [sl, #40]	; 0x28
   2bf08:	b	2bbb4 <__flatcc_fb_default_error_out@@Base+0x1648>
   2bf0c:	and	r2, r2, #223	; 0xdf
   2bf10:	cmp	r2, #69	; 0x45
   2bf14:	bne	2aff0 <__flatcc_fb_default_error_out@@Base+0xa84>
   2bf18:	b	2b640 <__flatcc_fb_default_error_out@@Base+0x10d4>
   2bf1c:	cmp	r2, #0
   2bf20:	lslne	r3, r2, #1
   2bf24:	addne	r2, r3, r2, lsl #3
   2bf28:	moveq	r3, #1024	; 0x400
   2bf2c:	lslne	r1, r2, #2
   2bf30:	moveq	r1, #20480	; 0x5000
   2bf34:	str	r3, [sl, #28]
   2bf38:	bl	13f0c <realloc@plt>
   2bf3c:	cmp	r0, #0
   2bf40:	str	r0, [sl, #20]
   2bf44:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2bf48:	ldr	r2, [sl, #28]
   2bf4c:	add	r1, r0, r6
   2bf50:	add	r2, r2, r2, lsl #2
   2bf54:	add	r0, r0, r2, lsl #2
   2bf58:	str	r0, [sl, #24]
   2bf5c:	b	2ab50 <__flatcc_fb_default_error_out@@Base+0x5e4>
   2bf60:	cmp	fp, #0
   2bf64:	mov	r3, fp
   2bf68:	lslne	r3, fp, #1
   2bf6c:	addne	r1, r3, fp, lsl #3
   2bf70:	moveq	r3, #1024	; 0x400
   2bf74:	lslne	r1, r1, #2
   2bf78:	moveq	r1, #20480	; 0x5000
   2bf7c:	str	r3, [sl, #28]
   2bf80:	bl	13f0c <realloc@plt>
   2bf84:	cmp	r0, #0
   2bf88:	str	r0, [sl, #20]
   2bf8c:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2bf90:	ldr	r3, [sl, #28]
   2bf94:	mov	r2, r3
   2bf98:	add	r3, r0, r7
   2bf9c:	add	fp, r2, r2, lsl #2
   2bfa0:	add	r0, r0, fp, lsl #2
   2bfa4:	str	r0, [sl, #24]
   2bfa8:	b	2b5e4 <__flatcc_fb_default_error_out@@Base+0x1078>
   2bfac:	cmp	r2, #0
   2bfb0:	lslne	r3, r2, #1
   2bfb4:	addne	r2, r3, r2, lsl #3
   2bfb8:	moveq	r3, #1024	; 0x400
   2bfbc:	lslne	r1, r2, #2
   2bfc0:	moveq	r1, #20480	; 0x5000
   2bfc4:	str	r3, [sl, #28]
   2bfc8:	bl	13f0c <realloc@plt>
   2bfcc:	cmp	r0, #0
   2bfd0:	str	r0, [sl, #20]
   2bfd4:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2bfd8:	ldr	r2, [sl, #28]
   2bfdc:	add	r1, r0, r5
   2bfe0:	add	r2, r2, r2, lsl #2
   2bfe4:	add	r0, r0, r2, lsl #2
   2bfe8:	str	r0, [sl, #24]
   2bfec:	b	2b01c <__flatcc_fb_default_error_out@@Base+0xab0>
   2bff0:	ldr	r2, [sl, #28]
   2bff4:	ldr	r0, [sl, #20]
   2bff8:	ldr	r1, [sl, #40]	; 0x28
   2bffc:	add	r5, r2, r2, lsl #2
   2c000:	add	r4, r8, #2
   2c004:	lsl	r5, r5, #2
   2c008:	add	r3, r0, r5
   2c00c:	cmp	r3, r1
   2c010:	str	r3, [sl, #24]
   2c014:	beq	2cac0 <__flatcc_fb_default_error_out@@Base+0x2554>
   2c018:	ldr	r3, [sl, #60]	; 0x3c
   2c01c:	ldr	ip, [sl, #64]	; 0x40
   2c020:	sub	r3, r8, r3
   2c024:	add	r3, r3, #1
   2c028:	str	r8, [r1]
   2c02c:	ldr	r0, [pc, #-484]	; 2be50 <__flatcc_fb_default_error_out@@Base+0x18e4>
   2c030:	mov	r8, r4
   2c034:	str	r3, [r1, #12]
   2c038:	mov	r2, #2
   2c03c:	b	2b3c0 <__flatcc_fb_default_error_out@@Base+0xe54>
   2c040:	add	r3, r8, #2
   2c044:	cmp	r9, r3
   2c048:	beq	2c058 <__flatcc_fb_default_error_out@@Base+0x1aec>
   2c04c:	ldrb	r2, [r8, #2]
   2c050:	cmp	r2, #46	; 0x2e
   2c054:	beq	2d1b8 <__flatcc_fb_default_error_out@@Base+0x2c4c>
   2c058:	mov	r2, r8
   2c05c:	ldr	r1, [pc, #-528]	; 2be54 <__flatcc_fb_default_error_out@@Base+0x18e8>
   2c060:	mov	r0, sl
   2c064:	mov	r8, r3
   2c068:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2c06c:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2c070:	cmp	r3, #0
   2c074:	lslne	ip, r3, #1
   2c078:	addne	r3, ip, r3, lsl #3
   2c07c:	moveq	ip, r6
   2c080:	lslne	r1, r3, #2
   2c084:	moveq	r1, r7
   2c088:	str	ip, [sl, #28]
   2c08c:	str	r2, [sp, #4]
   2c090:	bl	13f0c <realloc@plt>
   2c094:	cmp	r0, #0
   2c098:	str	r0, [sl, #20]
   2c09c:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2c0a0:	ldr	r3, [sl, #28]
   2c0a4:	ldr	r2, [sp, #4]
   2c0a8:	add	r3, r3, r3, lsl #2
   2c0ac:	add	r1, r0, r2
   2c0b0:	add	r0, r0, r3, lsl #2
   2c0b4:	str	r0, [sl, #24]
   2c0b8:	b	2bd2c <__flatcc_fb_default_error_out@@Base+0x17c0>
   2c0bc:	mov	r8, r9
   2c0c0:	ldr	ip, [sl, #28]
   2c0c4:	ldr	r0, [sl, #20]
   2c0c8:	ldr	r3, [sl, #40]	; 0x28
   2c0cc:	add	r4, ip, ip, lsl #2
   2c0d0:	lsl	r4, r4, #2
   2c0d4:	add	r2, r0, r4
   2c0d8:	cmp	r2, r3
   2c0dc:	str	r2, [sl, #24]
   2c0e0:	mov	r5, r4
   2c0e4:	beq	2cf68 <__flatcc_fb_default_error_out@@Base+0x29fc>
   2c0e8:	ldr	r1, [sl, #60]	; 0x3c
   2c0ec:	ldr	r6, [sl, #64]	; 0x40
   2c0f0:	sub	r1, r8, r1
   2c0f4:	add	r1, r1, #1
   2c0f8:	mov	r4, #27
   2c0fc:	str	r1, [r3, #12]
   2c100:	mov	lr, #0
   2c104:	add	r1, r3, #20
   2c108:	str	r6, [r3, #8]
   2c10c:	str	r4, [r3, #16]
   2c110:	str	r8, [r3]
   2c114:	str	lr, [r3, #4]
   2c118:	mov	r6, r8
   2c11c:	str	r1, [sl, #40]	; 0x28
   2c120:	mov	r4, #7
   2c124:	b	2aa68 <__flatcc_fb_default_error_out@@Base+0x4fc>
   2c128:	add	r5, r2, r2, lsl #2
   2c12c:	ldr	r3, [sl, #40]	; 0x28
   2c130:	lsl	r5, r5, #2
   2c134:	add	r1, r0, r5
   2c138:	cmp	r1, r3
   2c13c:	add	r4, r8, #2
   2c140:	str	r1, [sl, #24]
   2c144:	beq	2d130 <__flatcc_fb_default_error_out@@Base+0x2bc4>
   2c148:	ldr	r2, [sl, #60]	; 0x3c
   2c14c:	ldr	r0, [sl, #64]	; 0x40
   2c150:	sub	r2, r8, r2
   2c154:	str	r8, [r3]
   2c158:	sub	r8, r4, r8
   2c15c:	add	r2, r2, #1
   2c160:	str	r8, [r3, #4]
   2c164:	ldr	r1, [pc, #-788]	; 2be58 <__flatcc_fb_default_error_out@@Base+0x18ec>
   2c168:	b	2b710 <__flatcc_fb_default_error_out@@Base+0x11a4>
   2c16c:	add	r6, r2, r2, lsl #2
   2c170:	ldr	ip, [sl, #40]	; 0x28
   2c174:	lsl	r6, r6, #2
   2c178:	add	r3, r0, r6
   2c17c:	cmp	r3, ip
   2c180:	add	r4, r8, #2
   2c184:	str	r3, [sl, #24]
   2c188:	mov	r5, r6
   2c18c:	beq	2cd28 <__flatcc_fb_default_error_out@@Base+0x27bc>
   2c190:	ldr	r1, [sl, #60]	; 0x3c
   2c194:	ldr	r6, [sl, #64]	; 0x40
   2c198:	sub	r1, r8, r1
   2c19c:	add	r1, r1, #1
   2c1a0:	ldr	lr, [pc, #-844]	; 2be5c <__flatcc_fb_default_error_out@@Base+0x18f0>
   2c1a4:	str	r1, [ip, #12]
   2c1a8:	sub	r7, r4, r8
   2c1ac:	add	r1, ip, #20
   2c1b0:	str	r8, [ip]
   2c1b4:	str	r6, [ip, #8]
   2c1b8:	str	lr, [ip, #16]
   2c1bc:	str	r7, [ip, #4]
   2c1c0:	str	r1, [sl, #40]	; 0x28
   2c1c4:	b	2b090 <__flatcc_fb_default_error_out@@Base+0xb24>
   2c1c8:	ldr	r2, [sl, #28]
   2c1cc:	ldr	r0, [sl, #20]
   2c1d0:	ldr	r1, [sl, #40]	; 0x28
   2c1d4:	add	r5, r2, r2, lsl #2
   2c1d8:	add	r4, r8, #2
   2c1dc:	lsl	r5, r5, #2
   2c1e0:	add	r3, r0, r5
   2c1e4:	cmp	r3, r1
   2c1e8:	str	r3, [sl, #24]
   2c1ec:	beq	2ce0c <__flatcc_fb_default_error_out@@Base+0x28a0>
   2c1f0:	ldr	r3, [sl, #60]	; 0x3c
   2c1f4:	ldr	ip, [sl, #64]	; 0x40
   2c1f8:	sub	r3, r8, r3
   2c1fc:	add	r3, r3, #1
   2c200:	str	r8, [r1]
   2c204:	ldr	r0, [pc, #-940]	; 2be60 <__flatcc_fb_default_error_out@@Base+0x18f4>
   2c208:	mov	r8, r4
   2c20c:	str	r3, [r1, #12]
   2c210:	mov	r2, #2
   2c214:	b	2b3c0 <__flatcc_fb_default_error_out@@Base+0xe54>
   2c218:	add	r3, r8, #2
   2c21c:	cmp	r9, r3
   2c220:	beq	2c230 <__flatcc_fb_default_error_out@@Base+0x1cc4>
   2c224:	ldrb	r2, [r8, #2]
   2c228:	cmp	r2, #61	; 0x3d
   2c22c:	beq	2d408 <__flatcc_fb_default_error_out@@Base+0x2e9c>
   2c230:	mov	r2, r8
   2c234:	ldr	r1, [pc, #-984]	; 2be64 <__flatcc_fb_default_error_out@@Base+0x18f8>
   2c238:	mov	r0, sl
   2c23c:	mov	r8, r3
   2c240:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2c244:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2c248:	ldr	r2, [sl, #28]
   2c24c:	ldr	r0, [sl, #20]
   2c250:	ldr	r1, [sl, #40]	; 0x28
   2c254:	add	r4, r2, r2, lsl #2
   2c258:	lsl	r4, r4, #2
   2c25c:	add	r3, r0, r4
   2c260:	cmp	r3, r1
   2c264:	str	r3, [sl, #24]
   2c268:	beq	2cb8c <__flatcc_fb_default_error_out@@Base+0x2620>
   2c26c:	ldr	r3, [sl, #60]	; 0x3c
   2c270:	ldr	ip, [sl, #64]	; 0x40
   2c274:	sub	r3, r8, r3
   2c278:	ldr	r0, [pc, #-1048]	; 2be68 <__flatcc_fb_default_error_out@@Base+0x18fc>
   2c27c:	b	2ae90 <__flatcc_fb_default_error_out@@Base+0x924>
   2c280:	mov	r2, r8
   2c284:	mov	r3, r4
   2c288:	mov	r1, #10
   2c28c:	mov	r0, sl
   2c290:	mov	r8, r4
   2c294:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2c298:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2c29c:	add	r5, r8, #2
   2c2a0:	cmp	r9, r5
   2c2a4:	moveq	r3, #0
   2c2a8:	beq	2c2c0 <__flatcc_fb_default_error_out@@Base+0x1d54>
   2c2ac:	ldrb	r3, [r8, #2]
   2c2b0:	cmp	r3, #33	; 0x21
   2c2b4:	cmpne	r3, #47	; 0x2f
   2c2b8:	moveq	r3, #1
   2c2bc:	movne	r3, #0
   2c2c0:	add	r5, r5, r3
   2c2c4:	sub	r8, r5, r8
   2c2c8:	cmp	r8, #3
   2c2cc:	moveq	r3, #1
   2c2d0:	movne	r3, #0
   2c2d4:	str	r3, [sl, #32]
   2c2d8:	beq	2cd6c <__flatcc_fb_default_error_out@@Base+0x2800>
   2c2dc:	ldr	r3, [pc, #-1076]	; 2beb0 <__flatcc_fb_default_error_out@@Base+0x1944>
   2c2e0:	mov	r7, #1
   2c2e4:	sub	r4, r5, #1
   2c2e8:	b	2c300 <__flatcc_fb_default_error_out@@Base+0x1d94>
   2c2ec:	ldrb	r2, [r4, #1]
   2c2f0:	cmp	r2, #127	; 0x7f
   2c2f4:	cmpne	r2, #31
   2c2f8:	bls	2c408 <__flatcc_fb_default_error_out@@Base+0x1e9c>
   2c2fc:	mov	r4, r8
   2c300:	add	r8, r4, #1
   2c304:	cmp	r9, r8
   2c308:	bne	2c2ec <__flatcc_fb_default_error_out@@Base+0x1d80>
   2c30c:	cmp	r9, r5
   2c310:	beq	2c5c0 <__flatcc_fb_default_error_out@@Base+0x2054>
   2c314:	ldr	r2, [sl, #32]
   2c318:	cmp	r2, #0
   2c31c:	beq	2c544 <__flatcc_fb_default_error_out@@Base+0x1fd8>
   2c320:	mov	r8, r9
   2c324:	ldr	fp, [sl, #28]
   2c328:	ldr	r0, [sl, #20]
   2c32c:	ldr	r2, [sl, #40]	; 0x28
   2c330:	add	r6, fp, fp, lsl #2
   2c334:	lsl	r6, r6, #2
   2c338:	add	r1, r0, r6
   2c33c:	cmp	r1, r2
   2c340:	str	r1, [sl, #24]
   2c344:	beq	2c4ac <__flatcc_fb_default_error_out@@Base+0x1f40>
   2c348:	ldr	r1, [sl, #60]	; 0x3c
   2c34c:	ldr	ip, [sl, #64]	; 0x40
   2c350:	sub	r1, r5, r1
   2c354:	str	r5, [r2]
   2c358:	add	r1, r1, #1
   2c35c:	sub	r5, r8, r5
   2c360:	add	r0, r2, #20
   2c364:	cmp	r9, r8
   2c368:	str	r3, [r2, #16]
   2c36c:	str	r5, [r2, #4]
   2c370:	str	r1, [r2, #12]
   2c374:	str	ip, [r2, #8]
   2c378:	str	r0, [sl, #40]	; 0x28
   2c37c:	beq	2c548 <__flatcc_fb_default_error_out@@Base+0x1fdc>
   2c380:	ldrb	r2, [r8]
   2c384:	cmp	r2, #0
   2c388:	beq	2c5c4 <__flatcc_fb_default_error_out@@Base+0x2058>
   2c38c:	cmp	r2, #13
   2c390:	cmpne	r2, #10
   2c394:	beq	2c5b4 <__flatcc_fb_default_error_out@@Base+0x2048>
   2c398:	cmp	r2, #9
   2c39c:	cmpne	r2, #32
   2c3a0:	add	r5, r4, #2
   2c3a4:	bne	2c420 <__flatcc_fb_default_error_out@@Base+0x1eb4>
   2c3a8:	ldr	r2, [sl, #32]
   2c3ac:	cmp	r2, #0
   2c3b0:	beq	2c2e4 <__flatcc_fb_default_error_out@@Base+0x1d78>
   2c3b4:	ldr	fp, [sl, #28]
   2c3b8:	ldr	r0, [sl, #20]
   2c3bc:	ldr	r2, [sl, #40]	; 0x28
   2c3c0:	add	r4, fp, fp, lsl #2
   2c3c4:	lsl	r4, r4, #2
   2c3c8:	add	r1, r0, r4
   2c3cc:	cmp	r1, r2
   2c3d0:	str	r1, [sl, #24]
   2c3d4:	beq	2c4f8 <__flatcc_fb_default_error_out@@Base+0x1f8c>
   2c3d8:	ldr	r1, [sl, #60]	; 0x3c
   2c3dc:	ldr	ip, [sl, #64]	; 0x40
   2c3e0:	sub	r1, r8, r1
   2c3e4:	add	r1, r1, #1
   2c3e8:	str	r3, [r2, #16]
   2c3ec:	add	r0, r2, #20
   2c3f0:	str	r8, [r2]
   2c3f4:	str	r7, [r2, #4]
   2c3f8:	str	r1, [r2, #12]
   2c3fc:	str	ip, [r2, #8]
   2c400:	str	r0, [sl, #40]	; 0x28
   2c404:	b	2c2e4 <__flatcc_fb_default_error_out@@Base+0x1d78>
   2c408:	cmp	r5, r8
   2c40c:	beq	2c380 <__flatcc_fb_default_error_out@@Base+0x1e14>
   2c410:	ldr	r2, [sl, #32]
   2c414:	cmp	r2, #0
   2c418:	beq	2c380 <__flatcc_fb_default_error_out@@Base+0x1e14>
   2c41c:	b	2c324 <__flatcc_fb_default_error_out@@Base+0x1db8>
   2c420:	ldr	fp, [sl, #28]
   2c424:	ldr	r0, [sl, #20]
   2c428:	ldr	r2, [sl, #40]	; 0x28
   2c42c:	add	r4, fp, fp, lsl #2
   2c430:	lsl	r4, r4, #2
   2c434:	add	r1, r0, r4
   2c438:	cmp	r1, r2
   2c43c:	str	r1, [sl, #24]
   2c440:	beq	2c460 <__flatcc_fb_default_error_out@@Base+0x1ef4>
   2c444:	ldr	r1, [sl, #60]	; 0x3c
   2c448:	mov	r0, #7
   2c44c:	sub	r1, r8, r1
   2c450:	ldr	ip, [sl, #64]	; 0x40
   2c454:	add	r1, r1, #1
   2c458:	str	r0, [r2, #16]
   2c45c:	b	2c3ec <__flatcc_fb_default_error_out@@Base+0x1e80>
   2c460:	cmp	fp, #0
   2c464:	lslne	r2, fp, #1
   2c468:	addne	r1, r2, fp, lsl #3
   2c46c:	moveq	r2, #1024	; 0x400
   2c470:	lslne	r1, r1, #2
   2c474:	moveq	r1, #20480	; 0x5000
   2c478:	str	r2, [sl, #28]
   2c47c:	str	r3, [sp, #4]
   2c480:	bl	13f0c <realloc@plt>
   2c484:	cmp	r0, #0
   2c488:	str	r0, [sl, #20]
   2c48c:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2c490:	ldr	fp, [sl, #28]
   2c494:	add	r2, r0, r4
   2c498:	ldr	r3, [sp, #4]
   2c49c:	add	fp, fp, fp, lsl #2
   2c4a0:	add	r0, r0, fp, lsl #2
   2c4a4:	str	r0, [sl, #24]
   2c4a8:	b	2c444 <__flatcc_fb_default_error_out@@Base+0x1ed8>
   2c4ac:	cmp	fp, #0
   2c4b0:	lslne	r2, fp, #1
   2c4b4:	addne	r1, r2, fp, lsl #3
   2c4b8:	moveq	r2, #1024	; 0x400
   2c4bc:	lslne	r1, r1, #2
   2c4c0:	moveq	r1, #20480	; 0x5000
   2c4c4:	str	r2, [sl, #28]
   2c4c8:	str	r3, [sp, #4]
   2c4cc:	bl	13f0c <realloc@plt>
   2c4d0:	cmp	r0, #0
   2c4d4:	str	r0, [sl, #20]
   2c4d8:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2c4dc:	ldr	fp, [sl, #28]
   2c4e0:	add	r2, r0, r6
   2c4e4:	ldr	r3, [sp, #4]
   2c4e8:	add	r1, fp, fp, lsl #2
   2c4ec:	add	r0, r0, r1, lsl #2
   2c4f0:	str	r0, [sl, #24]
   2c4f4:	b	2c348 <__flatcc_fb_default_error_out@@Base+0x1ddc>
   2c4f8:	cmp	fp, #0
   2c4fc:	lslne	r2, fp, #1
   2c500:	addne	r1, r2, fp, lsl #3
   2c504:	moveq	r2, #1024	; 0x400
   2c508:	lslne	r1, r1, #2
   2c50c:	moveq	r1, #20480	; 0x5000
   2c510:	str	r2, [sl, #28]
   2c514:	str	r3, [sp, #4]
   2c518:	bl	13f0c <realloc@plt>
   2c51c:	cmp	r0, #0
   2c520:	str	r0, [sl, #20]
   2c524:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2c528:	ldr	fp, [sl, #28]
   2c52c:	add	r2, r0, r4
   2c530:	ldr	r3, [sp, #4]
   2c534:	add	fp, fp, fp, lsl #2
   2c538:	add	r0, r0, fp, lsl #2
   2c53c:	str	r0, [sl, #24]
   2c540:	b	2c3d8 <__flatcc_fb_default_error_out@@Base+0x1e6c>
   2c544:	ldr	fp, [sl, #28]
   2c548:	mov	r8, r9
   2c54c:	add	r3, fp, fp, lsl #2
   2c550:	ldr	r0, [sl, #20]
   2c554:	lsl	r4, r3, #2
   2c558:	ldr	lr, [sl, #40]	; 0x28
   2c55c:	add	r2, r0, r4
   2c560:	cmp	r2, lr
   2c564:	str	r2, [sl, #24]
   2c568:	mov	r5, r4
   2c56c:	mov	ip, fp
   2c570:	beq	2c5e8 <__flatcc_fb_default_error_out@@Base+0x207c>
   2c574:	ldr	r3, [sl, #60]	; 0x3c
   2c578:	ldr	r1, [sl, #64]	; 0x40
   2c57c:	sub	r3, r8, r3
   2c580:	add	r3, r3, #1
   2c584:	mov	r4, #27
   2c588:	str	r3, [lr, #12]
   2c58c:	str	r1, [lr, #8]
   2c590:	mov	r3, #0
   2c594:	add	r1, lr, #20
   2c598:	str	r4, [lr, #16]
   2c59c:	str	r8, [lr]
   2c5a0:	str	r3, [lr, #4]
   2c5a4:	mov	r6, r8
   2c5a8:	str	r1, [sl, #40]	; 0x28
   2c5ac:	mov	r4, #8
   2c5b0:	b	2aa68 <__flatcc_fb_default_error_out@@Base+0x4fc>
   2c5b4:	mov	r3, #0
   2c5b8:	str	r3, [sl, #32]
   2c5bc:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2c5c0:	mov	r8, r9
   2c5c4:	ldr	fp, [sl, #28]
   2c5c8:	b	2c54c <__flatcc_fb_default_error_out@@Base+0x1fe0>
   2c5cc:	add	r3, r8, #2
   2c5d0:	mov	r2, r8
   2c5d4:	ldr	r1, [pc, #-1904]	; 2be6c <__flatcc_fb_default_error_out@@Base+0x1900>
   2c5d8:	mov	r0, sl
   2c5dc:	mov	r8, r3
   2c5e0:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2c5e4:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2c5e8:	cmp	fp, #0
   2c5ec:	lslne	r3, fp, #1
   2c5f0:	addne	r1, r3, fp, lsl #3
   2c5f4:	moveq	r3, #1024	; 0x400
   2c5f8:	lslne	r1, r1, #2
   2c5fc:	moveq	r1, #20480	; 0x5000
   2c600:	str	r3, [sl, #28]
   2c604:	bl	13f0c <realloc@plt>
   2c608:	cmp	r0, #0
   2c60c:	str	r0, [sl, #20]
   2c610:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2c614:	ldr	ip, [sl, #28]
   2c618:	add	lr, r0, r4
   2c61c:	add	r3, ip, ip, lsl #2
   2c620:	lsl	r3, r3, #2
   2c624:	add	r2, r0, r3
   2c628:	mov	r5, r3
   2c62c:	str	r2, [sl, #24]
   2c630:	b	2c574 <__flatcc_fb_default_error_out@@Base+0x2008>
   2c634:	add	r3, r8, #2
   2c638:	mov	r2, r8
   2c63c:	ldr	r1, [pc, #-2004]	; 2be70 <__flatcc_fb_default_error_out@@Base+0x1904>
   2c640:	mov	r0, sl
   2c644:	mov	r8, r3
   2c648:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2c64c:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2c650:	add	r3, r8, #2
   2c654:	cmp	r9, r3
   2c658:	beq	2ca88 <__flatcc_fb_default_error_out@@Base+0x251c>
   2c65c:	ldrb	r2, [r8, #2]
   2c660:	cmp	r2, #60	; 0x3c
   2c664:	beq	2ced8 <__flatcc_fb_default_error_out@@Base+0x296c>
   2c668:	cmp	r2, #61	; 0x3d
   2c66c:	bne	2ca88 <__flatcc_fb_default_error_out@@Base+0x251c>
   2c670:	add	r3, r8, #3
   2c674:	mov	r2, r8
   2c678:	ldr	r1, [pc, #-2060]	; 2be74 <__flatcc_fb_default_error_out@@Base+0x1908>
   2c67c:	mov	r0, sl
   2c680:	mov	r8, r3
   2c684:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2c688:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2c68c:	add	r3, r8, #2
   2c690:	mov	r2, r8
   2c694:	ldr	r1, [pc, #-2084]	; 2be78 <__flatcc_fb_default_error_out@@Base+0x190c>
   2c698:	mov	r0, sl
   2c69c:	mov	r8, r3
   2c6a0:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2c6a4:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2c6a8:	add	r3, r8, #2
   2c6ac:	mov	r2, r8
   2c6b0:	ldr	r1, [pc, #-2108]	; 2be7c <__flatcc_fb_default_error_out@@Base+0x1910>
   2c6b4:	mov	r0, sl
   2c6b8:	mov	r8, r3
   2c6bc:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2c6c0:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2c6c4:	cmp	fp, #0
   2c6c8:	mov	r3, fp
   2c6cc:	lslne	r3, fp, #1
   2c6d0:	addne	r1, r3, fp, lsl #3
   2c6d4:	moveq	r3, #1024	; 0x400
   2c6d8:	lslne	r1, r1, #2
   2c6dc:	moveq	r1, #20480	; 0x5000
   2c6e0:	str	r3, [sl, #28]
   2c6e4:	bl	13f0c <realloc@plt>
   2c6e8:	cmp	r0, #0
   2c6ec:	str	r0, [sl, #20]
   2c6f0:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2c6f4:	ldr	r2, [sl, #28]
   2c6f8:	add	lr, r0, r5
   2c6fc:	mov	fp, r2
   2c700:	lsl	ip, r2, #2
   2c704:	add	r2, ip, r2
   2c708:	add	r3, r0, r2, lsl #2
   2c70c:	str	r3, [sl, #24]
   2c710:	b	2abb8 <__flatcc_fb_default_error_out@@Base+0x64c>
   2c714:	cmp	r2, #0
   2c718:	lslne	r3, r2, #1
   2c71c:	addne	r2, r3, r2, lsl #3
   2c720:	moveq	r3, #1024	; 0x400
   2c724:	lslne	r1, r2, #2
   2c728:	moveq	r1, #20480	; 0x5000
   2c72c:	str	r3, [sl, #28]
   2c730:	bl	13f0c <realloc@plt>
   2c734:	cmp	r0, #0
   2c738:	str	r0, [sl, #20]
   2c73c:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2c740:	ldr	r2, [sl, #28]
   2c744:	add	r1, r0, r7
   2c748:	add	r2, r2, r2, lsl #2
   2c74c:	add	r0, r0, r2, lsl #2
   2c750:	str	r0, [sl, #24]
   2c754:	b	2b2f8 <__flatcc_fb_default_error_out@@Base+0xd8c>
   2c758:	cmp	r3, #0
   2c75c:	lslne	r2, r3, #1
   2c760:	addne	r3, r2, r3, lsl #3
   2c764:	moveq	r2, #1024	; 0x400
   2c768:	lslne	r1, r3, #2
   2c76c:	moveq	r1, #20480	; 0x5000
   2c770:	str	r2, [sl, #28]
   2c774:	bl	13f0c <realloc@plt>
   2c778:	cmp	r0, #0
   2c77c:	str	r0, [sl, #20]
   2c780:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2c784:	ldr	r1, [sl, #28]
   2c788:	add	r3, r0, r4
   2c78c:	mov	r2, r3
   2c790:	add	r1, r1, r1, lsl #2
   2c794:	str	r3, [sl, #40]	; 0x28
   2c798:	add	r0, r0, r1, lsl #2
   2c79c:	str	r0, [sl, #24]
   2c7a0:	b	2a9e4 <__flatcc_fb_default_error_out@@Base+0x478>
   2c7a4:	mov	r2, r8
   2c7a8:	mov	r3, r5
   2c7ac:	mov	r1, #5
   2c7b0:	mov	r0, sl
   2c7b4:	mov	r8, r5
   2c7b8:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2c7bc:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2c7c0:	ldrb	r4, [r5]
   2c7c4:	mov	r5, r2
   2c7c8:	b	2b24c <__flatcc_fb_default_error_out@@Base+0xce0>
   2c7cc:	cmp	r2, #0
   2c7d0:	lslne	r3, r2, #1
   2c7d4:	addne	r2, r3, r2, lsl #3
   2c7d8:	moveq	r3, #1024	; 0x400
   2c7dc:	lslne	r1, r2, #2
   2c7e0:	moveq	r1, #20480	; 0x5000
   2c7e4:	str	r3, [sl, #28]
   2c7e8:	bl	13f0c <realloc@plt>
   2c7ec:	cmp	r0, #0
   2c7f0:	str	r0, [sl, #20]
   2c7f4:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2c7f8:	ldr	r2, [sl, #28]
   2c7fc:	add	r1, r0, r4
   2c800:	add	r2, r2, r2, lsl #2
   2c804:	add	r2, r0, r2, lsl #2
   2c808:	str	r2, [sl, #24]
   2c80c:	b	2b39c <__flatcc_fb_default_error_out@@Base+0xe30>
   2c810:	cmp	fp, #0
   2c814:	lslne	r3, fp, #1
   2c818:	addne	r1, r3, fp, lsl #3
   2c81c:	moveq	r3, #1024	; 0x400
   2c820:	lslne	r1, r1, #2
   2c824:	moveq	r1, #20480	; 0x5000
   2c828:	str	r3, [sl, #28]
   2c82c:	str	r2, [sp, #4]
   2c830:	bl	13f0c <realloc@plt>
   2c834:	cmp	r0, #0
   2c838:	str	r0, [sl, #20]
   2c83c:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2c840:	ldr	fp, [sl, #28]
   2c844:	add	r3, r0, r7
   2c848:	ldr	r6, [sl, #64]	; 0x40
   2c84c:	lsl	ip, fp, #2
   2c850:	add	lr, ip, fp
   2c854:	ldr	r2, [sp, #4]
   2c858:	add	r1, r0, lr, lsl #2
   2c85c:	str	r1, [sl, #24]
   2c860:	ldr	r1, [sl, #60]	; 0x3c
   2c864:	b	2b5a8 <__flatcc_fb_default_error_out@@Base+0x103c>
   2c868:	cmp	r2, #0
   2c86c:	lslne	r3, r2, #1
   2c870:	addne	r2, r3, r2, lsl #3
   2c874:	moveq	r3, #1024	; 0x400
   2c878:	lslne	r1, r2, #2
   2c87c:	moveq	r1, #20480	; 0x5000
   2c880:	str	r3, [sl, #28]
   2c884:	bl	13f0c <realloc@plt>
   2c888:	cmp	r0, #0
   2c88c:	str	r0, [sl, #20]
   2c890:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2c894:	ldr	r2, [sl, #28]
   2c898:	add	r1, r0, r5
   2c89c:	add	r2, r2, r2, lsl #2
   2c8a0:	add	r0, r0, r2, lsl #2
   2c8a4:	str	r0, [sl, #24]
   2c8a8:	b	2a99c <__flatcc_fb_default_error_out@@Base+0x430>
   2c8ac:	cmp	fp, #0
   2c8b0:	mov	r3, fp
   2c8b4:	lslne	r3, fp, #1
   2c8b8:	addne	r1, r3, fp, lsl #3
   2c8bc:	moveq	r3, #1024	; 0x400
   2c8c0:	lslne	r1, r1, #2
   2c8c4:	moveq	r1, #20480	; 0x5000
   2c8c8:	str	r3, [sl, #28]
   2c8cc:	bl	13f0c <realloc@plt>
   2c8d0:	cmp	r0, #0
   2c8d4:	str	r0, [sl, #20]
   2c8d8:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2c8dc:	ldr	r3, [sl, #28]
   2c8e0:	mov	r2, r3
   2c8e4:	add	r3, r0, r7
   2c8e8:	add	fp, r2, r2, lsl #2
   2c8ec:	add	r0, r0, fp, lsl #2
   2c8f0:	str	r0, [sl, #24]
   2c8f4:	b	2b6f0 <__flatcc_fb_default_error_out@@Base+0x1184>
   2c8f8:	cmp	r2, #0
   2c8fc:	lslne	r3, r2, #1
   2c900:	addne	r2, r3, r2, lsl #3
   2c904:	moveq	r3, #1024	; 0x400
   2c908:	lslne	r1, r2, #2
   2c90c:	moveq	r1, #20480	; 0x5000
   2c910:	str	r3, [sl, #28]
   2c914:	bl	13f0c <realloc@plt>
   2c918:	cmp	r0, #0
   2c91c:	str	r0, [sl, #20]
   2c920:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2c924:	ldr	r2, [sl, #28]
   2c928:	add	r1, r0, r5
   2c92c:	add	r2, r2, r2, lsl #2
   2c930:	add	r0, r0, r2, lsl #2
   2c934:	str	r0, [sl, #24]
   2c938:	b	2b428 <__flatcc_fb_default_error_out@@Base+0xebc>
   2c93c:	cmp	r2, #0
   2c940:	lslne	r3, r2, #1
   2c944:	addne	r2, r3, r2, lsl #3
   2c948:	moveq	r3, #1024	; 0x400
   2c94c:	lslne	r1, r2, #2
   2c950:	moveq	r1, #20480	; 0x5000
   2c954:	str	r3, [sl, #28]
   2c958:	bl	13f0c <realloc@plt>
   2c95c:	cmp	r0, #0
   2c960:	str	r0, [sl, #20]
   2c964:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2c968:	ldr	r2, [sl, #28]
   2c96c:	add	r1, r0, r5
   2c970:	add	r2, r2, r2, lsl #2
   2c974:	add	r0, r0, r2, lsl #2
   2c978:	str	r0, [sl, #24]
   2c97c:	b	2b09c <__flatcc_fb_default_error_out@@Base+0xb30>
   2c980:	add	r3, r8, #2
   2c984:	mov	r2, r8
   2c988:	orr	r1, r4, #15616	; 0x3d00
   2c98c:	mov	r0, sl
   2c990:	mov	r8, r3
   2c994:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2c998:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2c99c:	ldr	r2, [pc, #-2852]	; 2be80 <__flatcc_fb_default_error_out@@Base+0x1914>
   2c9a0:	cmp	r3, r2
   2c9a4:	beq	2d2c0 <__flatcc_fb_default_error_out@@Base+0x2d54>
   2c9a8:	ldr	r2, [pc, #-2860]	; 2be84 <__flatcc_fb_default_error_out@@Base+0x1918>
   2c9ac:	cmp	r3, r2
   2c9b0:	beq	2d2a0 <__flatcc_fb_default_error_out@@Base+0x2d34>
   2c9b4:	ldr	r2, [pc, #-2868]	; 2be88 <__flatcc_fb_default_error_out@@Base+0x191c>
   2c9b8:	cmp	r3, r2
   2c9bc:	beq	2d530 <__flatcc_fb_default_error_out@@Base+0x2fc4>
   2c9c0:	mov	r4, #9
   2c9c4:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2c9c8:	ldr	r2, [pc, #-2884]	; 2be8c <__flatcc_fb_default_error_out@@Base+0x1920>
   2c9cc:	cmp	r3, r2
   2c9d0:	beq	2d3c8 <__flatcc_fb_default_error_out@@Base+0x2e5c>
   2c9d4:	add	r2, r2, #327680	; 0x50000
   2c9d8:	add	r2, r2, #251	; 0xfb
   2c9dc:	cmp	r3, r2
   2c9e0:	beq	2d3a8 <__flatcc_fb_default_error_out@@Base+0x2e3c>
   2c9e4:	ldr	r2, [pc, #-2908]	; 2be90 <__flatcc_fb_default_error_out@@Base+0x1924>
   2c9e8:	cmp	r3, r2
   2c9ec:	bne	2c9c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2c9f0:	mov	r2, #4
   2c9f4:	mov	r1, r8
   2c9f8:	ldr	r0, [pc, #-2924]	; 2be94 <__flatcc_fb_default_error_out@@Base+0x1928>
   2c9fc:	bl	13ef4 <memcmp@plt>
   2ca00:	ldr	r4, [pc, #-2928]	; 2be98 <__flatcc_fb_default_error_out@@Base+0x192c>
   2ca04:	cmp	r0, #0
   2ca08:	movne	r4, #9
   2ca0c:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2ca10:	cmp	ip, #0
   2ca14:	lslne	r3, ip, #1
   2ca18:	addne	r1, r3, ip, lsl #3
   2ca1c:	moveq	r3, #1024	; 0x400
   2ca20:	lslne	r1, r1, #2
   2ca24:	moveq	r1, #20480	; 0x5000
   2ca28:	str	r3, [sl, #28]
   2ca2c:	bl	13f0c <realloc@plt>
   2ca30:	cmp	r0, #0
   2ca34:	str	r0, [sl, #20]
   2ca38:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ca3c:	ldr	r3, [sl, #28]
   2ca40:	add	r1, r0, r5
   2ca44:	add	r3, r3, r3, lsl #2
   2ca48:	add	r0, r0, r3, lsl #2
   2ca4c:	str	r0, [sl, #24]
   2ca50:	b	2b754 <__flatcc_fb_default_error_out@@Base+0x11e8>
   2ca54:	add	r3, r8, #3
   2ca58:	mov	r2, r8
   2ca5c:	ldr	r1, [pc, #-3016]	; 2be9c <__flatcc_fb_default_error_out@@Base+0x1930>
   2ca60:	mov	r0, sl
   2ca64:	mov	r8, r3
   2ca68:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2ca6c:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2ca70:	mov	r2, r8
   2ca74:	ldr	r1, [pc, #-3036]	; 2bea0 <__flatcc_fb_default_error_out@@Base+0x1934>
   2ca78:	mov	r0, sl
   2ca7c:	mov	r8, r3
   2ca80:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2ca84:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2ca88:	mov	r2, r8
   2ca8c:	ldr	r1, [pc, #-3056]	; 2bea4 <__flatcc_fb_default_error_out@@Base+0x1938>
   2ca90:	mov	r0, sl
   2ca94:	mov	r8, r3
   2ca98:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2ca9c:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2caa0:	ldr	r2, [sl, #28]
   2caa4:	ldr	r0, [sl, #20]
   2caa8:	ldr	r1, [sl, #40]	; 0x28
   2caac:	add	r5, r2, r2, lsl #2
   2cab0:	mov	r4, r9
   2cab4:	lsl	r5, r5, #2
   2cab8:	add	r3, r0, r5
   2cabc:	b	2b090 <__flatcc_fb_default_error_out@@Base+0xb24>
   2cac0:	cmp	r2, #0
   2cac4:	lslne	r3, r2, #1
   2cac8:	addne	r2, r3, r2, lsl #3
   2cacc:	moveq	r3, #1024	; 0x400
   2cad0:	lslne	r1, r2, #2
   2cad4:	moveq	r1, #20480	; 0x5000
   2cad8:	str	r3, [sl, #28]
   2cadc:	bl	13f0c <realloc@plt>
   2cae0:	cmp	r0, #0
   2cae4:	str	r0, [sl, #20]
   2cae8:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2caec:	ldr	r2, [sl, #28]
   2caf0:	add	r1, r0, r5
   2caf4:	add	r2, r2, r2, lsl #2
   2caf8:	add	r0, r0, r2, lsl #2
   2cafc:	str	r0, [sl, #24]
   2cb00:	b	2c018 <__flatcc_fb_default_error_out@@Base+0x1aac>
   2cb04:	cmp	r2, #0
   2cb08:	lslne	r3, r2, #1
   2cb0c:	addne	r2, r3, r2, lsl #3
   2cb10:	moveq	r3, #1024	; 0x400
   2cb14:	lslne	r1, r2, #2
   2cb18:	moveq	r1, #20480	; 0x5000
   2cb1c:	str	r3, [sl, #28]
   2cb20:	bl	13f0c <realloc@plt>
   2cb24:	cmp	r0, #0
   2cb28:	str	r0, [sl, #20]
   2cb2c:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2cb30:	ldr	r2, [sl, #28]
   2cb34:	add	r1, r0, r5
   2cb38:	add	r2, r2, r2, lsl #2
   2cb3c:	add	r0, r0, r2, lsl #2
   2cb40:	str	r0, [sl, #24]
   2cb44:	b	2ba48 <__flatcc_fb_default_error_out@@Base+0x14dc>
   2cb48:	cmp	r2, #0
   2cb4c:	lslne	r3, r2, #1
   2cb50:	addne	r2, r3, r2, lsl #3
   2cb54:	moveq	r3, #1024	; 0x400
   2cb58:	lslne	r1, r2, #2
   2cb5c:	moveq	r1, #20480	; 0x5000
   2cb60:	str	r3, [sl, #28]
   2cb64:	bl	13f0c <realloc@plt>
   2cb68:	cmp	r0, #0
   2cb6c:	str	r0, [sl, #20]
   2cb70:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2cb74:	ldr	r2, [sl, #28]
   2cb78:	add	r1, r0, r4
   2cb7c:	add	r2, r2, r2, lsl #2
   2cb80:	add	r0, r0, r2, lsl #2
   2cb84:	str	r0, [sl, #24]
   2cb88:	b	2b9b4 <__flatcc_fb_default_error_out@@Base+0x1448>
   2cb8c:	cmp	r2, #0
   2cb90:	lslne	r3, r2, #1
   2cb94:	addne	r2, r3, r2, lsl #3
   2cb98:	moveq	r3, #1024	; 0x400
   2cb9c:	lslne	r1, r2, #2
   2cba0:	moveq	r1, #20480	; 0x5000
   2cba4:	str	r3, [sl, #28]
   2cba8:	bl	13f0c <realloc@plt>
   2cbac:	cmp	r0, #0
   2cbb0:	str	r0, [sl, #20]
   2cbb4:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2cbb8:	ldr	r2, [sl, #28]
   2cbbc:	add	r1, r0, r4
   2cbc0:	add	r2, r2, r2, lsl #2
   2cbc4:	add	r0, r0, r2, lsl #2
   2cbc8:	str	r0, [sl, #24]
   2cbcc:	b	2c26c <__flatcc_fb_default_error_out@@Base+0x1d00>
   2cbd0:	sub	r2, r2, #3584	; 0xe00
   2cbd4:	cmp	r3, r2
   2cbd8:	beq	2d4d0 <__flatcc_fb_default_error_out@@Base+0x2f64>
   2cbdc:	add	r2, r2, #2048	; 0x800
   2cbe0:	add	r2, r2, #4
   2cbe4:	cmp	r3, r2
   2cbe8:	beq	2d4b0 <__flatcc_fb_default_error_out@@Base+0x2f44>
   2cbec:	ldr	r2, [pc, #-3404]	; 2bea8 <__flatcc_fb_default_error_out@@Base+0x193c>
   2cbf0:	cmp	r3, r2
   2cbf4:	bne	2c9c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2cbf8:	mov	r2, #4
   2cbfc:	mov	r1, r8
   2cc00:	ldr	r0, [pc, #-3420]	; 2beac <__flatcc_fb_default_error_out@@Base+0x1940>
   2cc04:	bl	13ef4 <memcmp@plt>
   2cc08:	cmp	r0, #0
   2cc0c:	movne	r4, #9
   2cc10:	mvneq	r4, #992	; 0x3e0
   2cc14:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2cc18:	cmp	r2, #0
   2cc1c:	lslne	r3, r2, #1
   2cc20:	addne	r2, r3, r2, lsl #3
   2cc24:	moveq	r3, #1024	; 0x400
   2cc28:	lslne	r1, r2, #2
   2cc2c:	moveq	r1, #20480	; 0x5000
   2cc30:	str	r3, [sl, #28]
   2cc34:	bl	13f0c <realloc@plt>
   2cc38:	cmp	r0, #0
   2cc3c:	str	r0, [sl, #20]
   2cc40:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2cc44:	ldr	r2, [sl, #28]
   2cc48:	add	r1, r0, r5
   2cc4c:	add	r2, r2, r2, lsl #2
   2cc50:	add	r0, r0, r2, lsl #2
   2cc54:	str	r0, [sl, #24]
   2cc58:	b	2b18c <__flatcc_fb_default_error_out@@Base+0xc20>
   2cc5c:	cmp	r2, #0
   2cc60:	lslne	r3, r2, #1
   2cc64:	addne	r2, r3, r2, lsl #3
   2cc68:	moveq	r3, #1024	; 0x400
   2cc6c:	lslne	r1, r2, #2
   2cc70:	moveq	r1, #20480	; 0x5000
   2cc74:	str	r3, [sl, #28]
   2cc78:	bl	13f0c <realloc@plt>
   2cc7c:	cmp	r0, #0
   2cc80:	str	r0, [sl, #20]
   2cc84:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2cc88:	ldr	r2, [sl, #28]
   2cc8c:	add	r3, r0, r5
   2cc90:	add	r2, r2, r2, lsl #2
   2cc94:	add	r0, r0, r2, lsl #2
   2cc98:	str	r0, [sl, #24]
   2cc9c:	b	2ad54 <__flatcc_fb_default_error_out@@Base+0x7e8>
   2cca0:	cmp	r2, #0
   2cca4:	lslne	r3, r2, #1
   2cca8:	addne	r2, r3, r2, lsl #3
   2ccac:	moveq	r3, #1024	; 0x400
   2ccb0:	lslne	r1, r2, #2
   2ccb4:	moveq	r1, #20480	; 0x5000
   2ccb8:	str	r3, [sl, #28]
   2ccbc:	bl	13f0c <realloc@plt>
   2ccc0:	cmp	r0, #0
   2ccc4:	str	r0, [sl, #20]
   2ccc8:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2cccc:	ldr	r2, [sl, #28]
   2ccd0:	add	r1, r0, r4
   2ccd4:	add	r2, r2, r2, lsl #2
   2ccd8:	add	r0, r0, r2, lsl #2
   2ccdc:	str	r0, [sl, #24]
   2cce0:	b	2ae80 <__flatcc_fb_default_error_out@@Base+0x914>
   2cce4:	cmp	r2, #0
   2cce8:	lslne	r3, r2, #1
   2ccec:	addne	r2, r3, r2, lsl #3
   2ccf0:	moveq	r3, #1024	; 0x400
   2ccf4:	lslne	r1, r2, #2
   2ccf8:	moveq	r1, #20480	; 0x5000
   2ccfc:	str	r3, [sl, #28]
   2cd00:	bl	13f0c <realloc@plt>
   2cd04:	cmp	r0, #0
   2cd08:	str	r0, [sl, #20]
   2cd0c:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2cd10:	ldr	r2, [sl, #28]
   2cd14:	add	r1, r0, r5
   2cd18:	add	r2, r2, r2, lsl #2
   2cd1c:	add	r0, r0, r2, lsl #2
   2cd20:	str	r0, [sl, #24]
   2cd24:	b	2b8e8 <__flatcc_fb_default_error_out@@Base+0x137c>
   2cd28:	cmp	r2, #0
   2cd2c:	lslne	r3, r2, #1
   2cd30:	addne	r2, r3, r2, lsl #3
   2cd34:	moveq	r3, #1024	; 0x400
   2cd38:	lslne	r1, r2, #2
   2cd3c:	moveq	r1, #20480	; 0x5000
   2cd40:	str	r3, [sl, #28]
   2cd44:	bl	13f0c <realloc@plt>
   2cd48:	cmp	r0, #0
   2cd4c:	str	r0, [sl, #20]
   2cd50:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2cd54:	ldr	r2, [sl, #28]
   2cd58:	add	ip, r0, r6
   2cd5c:	add	r5, r2, r2, lsl #2
   2cd60:	lsl	r5, r5, #2
   2cd64:	add	r3, r0, r5
   2cd68:	b	2c190 <__flatcc_fb_default_error_out@@Base+0x1c24>
   2cd6c:	mov	r3, r5
   2cd70:	mov	r2, r5
   2cd74:	ldr	r1, [pc, #-3788]	; 2beb0 <__flatcc_fb_default_error_out@@Base+0x1944>
   2cd78:	mov	r0, sl
   2cd7c:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2cd80:	b	2c2dc <__flatcc_fb_default_error_out@@Base+0x1d70>
   2cd84:	cmp	r2, #0
   2cd88:	lslne	r3, r2, #1
   2cd8c:	addne	r2, r3, r2, lsl #3
   2cd90:	moveq	r3, #1024	; 0x400
   2cd94:	lslne	r1, r2, #2
   2cd98:	moveq	r1, #20480	; 0x5000
   2cd9c:	str	r3, [sl, #28]
   2cda0:	bl	13f0c <realloc@plt>
   2cda4:	cmp	r0, #0
   2cda8:	str	r0, [sl, #20]
   2cdac:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2cdb0:	ldr	r2, [sl, #28]
   2cdb4:	add	r1, r0, r5
   2cdb8:	add	r2, r2, r2, lsl #2
   2cdbc:	add	r0, r0, r2, lsl #2
   2cdc0:	str	r0, [sl, #24]
   2cdc4:	b	2bb44 <__flatcc_fb_default_error_out@@Base+0x15d8>
   2cdc8:	cmp	r2, #0
   2cdcc:	lslne	r3, r2, #1
   2cdd0:	addne	r2, r3, r2, lsl #3
   2cdd4:	moveq	r3, #1024	; 0x400
   2cdd8:	lslne	r1, r2, #2
   2cddc:	moveq	r1, #20480	; 0x5000
   2cde0:	str	r3, [sl, #28]
   2cde4:	bl	13f0c <realloc@plt>
   2cde8:	cmp	r0, #0
   2cdec:	str	r0, [sl, #20]
   2cdf0:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2cdf4:	ldr	r2, [sl, #28]
   2cdf8:	add	r1, r0, r5
   2cdfc:	add	r2, r2, r2, lsl #2
   2ce00:	add	r0, r0, r2, lsl #2
   2ce04:	str	r0, [sl, #24]
   2ce08:	b	2b92c <__flatcc_fb_default_error_out@@Base+0x13c0>
   2ce0c:	cmp	r2, #0
   2ce10:	lslne	r3, r2, #1
   2ce14:	addne	r2, r3, r2, lsl #3
   2ce18:	moveq	r3, #1024	; 0x400
   2ce1c:	lslne	r1, r2, #2
   2ce20:	moveq	r1, #20480	; 0x5000
   2ce24:	str	r3, [sl, #28]
   2ce28:	bl	13f0c <realloc@plt>
   2ce2c:	cmp	r0, #0
   2ce30:	str	r0, [sl, #20]
   2ce34:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ce38:	ldr	r2, [sl, #28]
   2ce3c:	add	r1, r0, r5
   2ce40:	add	r2, r2, r2, lsl #2
   2ce44:	add	r0, r0, r2, lsl #2
   2ce48:	str	r0, [sl, #24]
   2ce4c:	b	2c1f0 <__flatcc_fb_default_error_out@@Base+0x1c84>
   2ce50:	cmp	r2, #0
   2ce54:	lslne	r3, r2, #1
   2ce58:	addne	r2, r3, r2, lsl #3
   2ce5c:	moveq	r3, #1024	; 0x400
   2ce60:	lslne	r1, r2, #2
   2ce64:	moveq	r1, #20480	; 0x5000
   2ce68:	str	r3, [sl, #28]
   2ce6c:	bl	13f0c <realloc@plt>
   2ce70:	cmp	r0, #0
   2ce74:	str	r0, [sl, #20]
   2ce78:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ce7c:	ldr	r2, [sl, #28]
   2ce80:	add	r1, r0, r5
   2ce84:	add	r2, r2, r2, lsl #2
   2ce88:	add	r0, r0, r2, lsl #2
   2ce8c:	str	r0, [sl, #24]
   2ce90:	b	2af7c <__flatcc_fb_default_error_out@@Base+0xa10>
   2ce94:	cmp	r2, #0
   2ce98:	lslne	r3, r2, #1
   2ce9c:	addne	r2, r3, r2, lsl #3
   2cea0:	moveq	r3, #1024	; 0x400
   2cea4:	lslne	r1, r2, #2
   2cea8:	moveq	r1, #20480	; 0x5000
   2ceac:	str	r3, [sl, #28]
   2ceb0:	bl	13f0c <realloc@plt>
   2ceb4:	cmp	r0, #0
   2ceb8:	str	r0, [sl, #20]
   2cebc:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2cec0:	ldr	r2, [sl, #28]
   2cec4:	add	ip, r0, r6
   2cec8:	add	r5, r2, r2, lsl #2
   2cecc:	lsl	r5, r5, #2
   2ced0:	add	r3, r0, r5
   2ced4:	b	2b9f8 <__flatcc_fb_default_error_out@@Base+0x148c>
   2ced8:	add	r3, r8, #3
   2cedc:	cmp	r9, r3
   2cee0:	beq	2cef0 <__flatcc_fb_default_error_out@@Base+0x2984>
   2cee4:	ldrb	r2, [r8, #3]
   2cee8:	cmp	r2, #61	; 0x3d
   2ceec:	beq	2d5dc <__flatcc_fb_default_error_out@@Base+0x3070>
   2cef0:	mov	r2, r8
   2cef4:	ldr	r1, [pc, #1796]	; 2d600 <__flatcc_fb_default_error_out@@Base+0x3094>
   2cef8:	mov	r0, sl
   2cefc:	mov	r8, r3
   2cf00:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2cf04:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2cf08:	ldr	r2, [pc, #1780]	; 2d604 <__flatcc_fb_default_error_out@@Base+0x3098>
   2cf0c:	cmp	r3, r2
   2cf10:	beq	2d1f4 <__flatcc_fb_default_error_out@@Base+0x2c88>
   2cf14:	ldr	r2, [pc, #1772]	; 2d608 <__flatcc_fb_default_error_out@@Base+0x309c>
   2cf18:	cmp	r3, r2
   2cf1c:	beq	2d1d4 <__flatcc_fb_default_error_out@@Base+0x2c68>
   2cf20:	ldr	r2, [pc, #1764]	; 2d60c <__flatcc_fb_default_error_out@@Base+0x30a0>
   2cf24:	cmp	r3, r2
   2cf28:	bne	2c9c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2cf2c:	mov	r2, #5
   2cf30:	mov	r1, r8
   2cf34:	ldr	r0, [pc, #1748]	; 2d610 <__flatcc_fb_default_error_out@@Base+0x30a4>
   2cf38:	bl	13ef4 <memcmp@plt>
   2cf3c:	ldr	r4, [pc, #1744]	; 2d614 <__flatcc_fb_default_error_out@@Base+0x30a8>
   2cf40:	cmp	r0, #0
   2cf44:	movne	r4, #9
   2cf48:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2cf4c:	mov	r8, r5
   2cf50:	mov	r3, r8
   2cf54:	mov	r2, r8
   2cf58:	mov	r1, #23
   2cf5c:	mov	r0, sl
   2cf60:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2cf64:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2cf68:	cmp	ip, #0
   2cf6c:	lslne	r3, ip, #1
   2cf70:	addne	r1, r3, ip, lsl #3
   2cf74:	moveq	r3, #1024	; 0x400
   2cf78:	lslne	r1, r1, #2
   2cf7c:	moveq	r1, #20480	; 0x5000
   2cf80:	str	r3, [sl, #28]
   2cf84:	bl	13f0c <realloc@plt>
   2cf88:	cmp	r0, #0
   2cf8c:	str	r0, [sl, #20]
   2cf90:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2cf94:	ldr	ip, [sl, #28]
   2cf98:	add	r3, r0, r4
   2cf9c:	add	r1, ip, ip, lsl #2
   2cfa0:	lsl	r1, r1, #2
   2cfa4:	add	r2, r0, r1
   2cfa8:	mov	r5, r1
   2cfac:	str	r2, [sl, #24]
   2cfb0:	b	2c0e8 <__flatcc_fb_default_error_out@@Base+0x1b7c>
   2cfb4:	cmp	r2, #0
   2cfb8:	lslne	r3, r2, #1
   2cfbc:	addne	r2, r3, r2, lsl #3
   2cfc0:	moveq	r3, #1024	; 0x400
   2cfc4:	lslne	r1, r2, #2
   2cfc8:	moveq	r1, #20480	; 0x5000
   2cfcc:	str	r3, [sl, #28]
   2cfd0:	bl	13f0c <realloc@plt>
   2cfd4:	cmp	r0, #0
   2cfd8:	str	r0, [sl, #20]
   2cfdc:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2cfe0:	ldr	r2, [sl, #28]
   2cfe4:	add	r1, r0, r5
   2cfe8:	add	r2, r2, r2, lsl #2
   2cfec:	add	r0, r0, r2, lsl #2
   2cff0:	str	r0, [sl, #24]
   2cff4:	b	2ae14 <__flatcc_fb_default_error_out@@Base+0x8a8>
   2cff8:	mov	r3, r4
   2cffc:	mov	r2, r4
   2d000:	ldr	r1, [pc, #1552]	; 2d618 <__flatcc_fb_default_error_out@@Base+0x30ac>
   2d004:	mov	r0, sl
   2d008:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2d00c:	b	2bba4 <__flatcc_fb_default_error_out@@Base+0x1638>
   2d010:	mov	r8, r9
   2d014:	b	2cf50 <__flatcc_fb_default_error_out@@Base+0x29e4>
   2d018:	cmp	r3, #0
   2d01c:	lslne	ip, r3, #1
   2d020:	addne	r3, ip, r3, lsl #3
   2d024:	moveq	ip, r6
   2d028:	lslne	r1, r3, #2
   2d02c:	moveq	r1, r7
   2d030:	str	ip, [sl, #28]
   2d034:	str	r2, [sp, #4]
   2d038:	bl	13f0c <realloc@plt>
   2d03c:	cmp	r0, #0
   2d040:	str	r0, [sl, #20]
   2d044:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2d048:	ldr	r3, [sl, #28]
   2d04c:	ldr	r2, [sp, #4]
   2d050:	add	r3, r3, r3, lsl #2
   2d054:	add	r1, r0, r2
   2d058:	add	r3, r0, r3, lsl #2
   2d05c:	str	r3, [sl, #24]
   2d060:	b	2bed8 <__flatcc_fb_default_error_out@@Base+0x196c>
   2d064:	ldr	r2, [sl, #28]
   2d068:	ldr	r0, [sl, #20]
   2d06c:	ldr	r1, [sl, #40]	; 0x28
   2d070:	add	r5, r2, r2, lsl #2
   2d074:	mov	r4, r9
   2d078:	lsl	r5, r5, #2
   2d07c:	add	r3, r0, r5
   2d080:	b	2a990 <__flatcc_fb_default_error_out@@Base+0x424>
   2d084:	ldr	ip, [sl, #28]
   2d088:	ldr	r0, [sl, #20]
   2d08c:	mov	r8, r9
   2d090:	add	r5, ip, ip, lsl #2
   2d094:	ldr	r1, [sl, #40]	; 0x28
   2d098:	lsl	r5, r5, #2
   2d09c:	add	r2, r0, r5
   2d0a0:	mov	r4, #0
   2d0a4:	b	2aa7c <__flatcc_fb_default_error_out@@Base+0x510>
   2d0a8:	cmp	r2, #0
   2d0ac:	lslne	r3, r2, #1
   2d0b0:	addne	r2, r3, r2, lsl #3
   2d0b4:	moveq	r3, #1024	; 0x400
   2d0b8:	lslne	r1, r2, #2
   2d0bc:	moveq	r1, #20480	; 0x5000
   2d0c0:	str	r3, [sl, #28]
   2d0c4:	bl	13f0c <realloc@plt>
   2d0c8:	cmp	r0, #0
   2d0cc:	str	r0, [sl, #20]
   2d0d0:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2d0d4:	ldr	r2, [sl, #28]
   2d0d8:	add	r1, r0, r5
   2d0dc:	add	r2, r2, r2, lsl #2
   2d0e0:	add	r0, r0, r2, lsl #2
   2d0e4:	str	r0, [sl, #24]
   2d0e8:	b	2b970 <__flatcc_fb_default_error_out@@Base+0x1404>
   2d0ec:	cmp	r2, #0
   2d0f0:	lslne	r3, r2, #1
   2d0f4:	addne	r2, r3, r2, lsl #3
   2d0f8:	moveq	r3, #1024	; 0x400
   2d0fc:	lslne	r1, r2, #2
   2d100:	moveq	r1, #20480	; 0x5000
   2d104:	str	r3, [sl, #28]
   2d108:	bl	13f0c <realloc@plt>
   2d10c:	cmp	r0, #0
   2d110:	str	r0, [sl, #20]
   2d114:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2d118:	ldr	r2, [sl, #28]
   2d11c:	add	r1, r0, r5
   2d120:	add	r2, r2, r2, lsl #2
   2d124:	add	r0, r0, r2, lsl #2
   2d128:	str	r0, [sl, #24]
   2d12c:	b	2af08 <__flatcc_fb_default_error_out@@Base+0x99c>
   2d130:	cmp	r2, #0
   2d134:	lslne	r3, r2, #1
   2d138:	addne	r2, r3, r2, lsl #3
   2d13c:	moveq	r3, #1024	; 0x400
   2d140:	lslne	r1, r2, #2
   2d144:	moveq	r1, #20480	; 0x5000
   2d148:	str	r3, [sl, #28]
   2d14c:	bl	13f0c <realloc@plt>
   2d150:	cmp	r0, #0
   2d154:	str	r0, [sl, #20]
   2d158:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2d15c:	ldr	r2, [sl, #28]
   2d160:	add	r3, r0, r5
   2d164:	add	r2, r2, r2, lsl #2
   2d168:	add	r0, r0, r2, lsl #2
   2d16c:	str	r0, [sl, #24]
   2d170:	b	2c148 <__flatcc_fb_default_error_out@@Base+0x1bdc>
   2d174:	cmp	r2, #0
   2d178:	lslne	r3, r2, #1
   2d17c:	addne	r2, r3, r2, lsl #3
   2d180:	moveq	r3, #1024	; 0x400
   2d184:	lslne	r1, r2, #2
   2d188:	moveq	r1, #20480	; 0x5000
   2d18c:	str	r3, [sl, #28]
   2d190:	bl	13f0c <realloc@plt>
   2d194:	cmp	r0, #0
   2d198:	str	r0, [sl, #20]
   2d19c:	beq	2d5bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2d1a0:	ldr	r2, [sl, #28]
   2d1a4:	add	r1, r0, r5
   2d1a8:	add	r2, r2, r2, lsl #2
   2d1ac:	add	r0, r0, r2, lsl #2
   2d1b0:	str	r0, [sl, #24]
   2d1b4:	b	2b124 <__flatcc_fb_default_error_out@@Base+0xbb8>
   2d1b8:	add	r3, r8, #3
   2d1bc:	mov	r2, r8
   2d1c0:	ldr	r1, [pc, #1108]	; 2d61c <__flatcc_fb_default_error_out@@Base+0x30b0>
   2d1c4:	mov	r0, sl
   2d1c8:	mov	r8, r3
   2d1cc:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2d1d0:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2d1d4:	mov	r2, #5
   2d1d8:	mov	r1, r8
   2d1dc:	ldr	r0, [pc, #1084]	; 2d620 <__flatcc_fb_default_error_out@@Base+0x30b4>
   2d1e0:	bl	13ef4 <memcmp@plt>
   2d1e4:	ldr	r4, [pc, #1080]	; 2d624 <__flatcc_fb_default_error_out@@Base+0x30b8>
   2d1e8:	cmp	r0, #0
   2d1ec:	movne	r4, #9
   2d1f0:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d1f4:	mov	r2, #15
   2d1f8:	mov	r1, r8
   2d1fc:	ldr	r0, [pc, #1060]	; 2d628 <__flatcc_fb_default_error_out@@Base+0x30bc>
   2d200:	bl	13ef4 <memcmp@plt>
   2d204:	cmp	r0, #0
   2d208:	movne	r4, #9
   2d20c:	mvneq	r4, #964	; 0x3c4
   2d210:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d214:	mov	r2, #6
   2d218:	mov	r1, r8
   2d21c:	ldr	r0, [pc, #1032]	; 2d62c <__flatcc_fb_default_error_out@@Base+0x30c0>
   2d220:	bl	13ef4 <memcmp@plt>
   2d224:	ldr	r4, [pc, #1028]	; 2d630 <__flatcc_fb_default_error_out@@Base+0x30c4>
   2d228:	cmp	r0, #0
   2d22c:	movne	r4, #9
   2d230:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d234:	mov	r2, #5
   2d238:	mov	r1, r8
   2d23c:	ldr	r0, [pc, #1008]	; 2d634 <__flatcc_fb_default_error_out@@Base+0x30c8>
   2d240:	bl	13ef4 <memcmp@plt>
   2d244:	ldr	r4, [pc, #1004]	; 2d638 <__flatcc_fb_default_error_out@@Base+0x30cc>
   2d248:	cmp	r0, #0
   2d24c:	movne	r4, #9
   2d250:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d254:	ldr	r2, [pc, #992]	; 2d63c <__flatcc_fb_default_error_out@@Base+0x30d0>
   2d258:	cmp	r3, r2
   2d25c:	bne	2c9c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2d260:	mov	r2, #5
   2d264:	mov	r1, r8
   2d268:	ldr	r0, [pc, #976]	; 2d640 <__flatcc_fb_default_error_out@@Base+0x30d4>
   2d26c:	bl	13ef4 <memcmp@plt>
   2d270:	ldr	r4, [pc, #972]	; 2d644 <__flatcc_fb_default_error_out@@Base+0x30d8>
   2d274:	cmp	r0, #0
   2d278:	movne	r4, #9
   2d27c:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d280:	mov	r2, #7
   2d284:	mov	r1, r8
   2d288:	ldr	r0, [pc, #952]	; 2d648 <__flatcc_fb_default_error_out@@Base+0x30dc>
   2d28c:	bl	13ef4 <memcmp@plt>
   2d290:	ldr	r4, [pc, #948]	; 2d64c <__flatcc_fb_default_error_out@@Base+0x30e0>
   2d294:	cmp	r0, #0
   2d298:	movne	r4, #9
   2d29c:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d2a0:	mov	r2, #5
   2d2a4:	mov	r1, r8
   2d2a8:	ldr	r0, [pc, #928]	; 2d650 <__flatcc_fb_default_error_out@@Base+0x30e4>
   2d2ac:	bl	13ef4 <memcmp@plt>
   2d2b0:	ldr	r4, [pc, #924]	; 2d654 <__flatcc_fb_default_error_out@@Base+0x30e8>
   2d2b4:	cmp	r0, #0
   2d2b8:	movne	r4, #9
   2d2bc:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d2c0:	mov	r2, #7
   2d2c4:	mov	r1, r8
   2d2c8:	ldr	r0, [pc, #904]	; 2d658 <__flatcc_fb_default_error_out@@Base+0x30ec>
   2d2cc:	bl	13ef4 <memcmp@plt>
   2d2d0:	ldr	r4, [pc, #900]	; 2d65c <__flatcc_fb_default_error_out@@Base+0x30f0>
   2d2d4:	cmp	r0, #0
   2d2d8:	movne	r4, #9
   2d2dc:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d2e0:	add	r3, r8, #3
   2d2e4:	mov	r2, r8
   2d2e8:	ldr	r1, [pc, #880]	; 2d660 <__flatcc_fb_default_error_out@@Base+0x30f4>
   2d2ec:	mov	r0, sl
   2d2f0:	mov	r8, r3
   2d2f4:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2d2f8:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2d2fc:	mov	r2, #4
   2d300:	mov	r1, r8
   2d304:	ldr	r0, [pc, #856]	; 2d664 <__flatcc_fb_default_error_out@@Base+0x30f8>
   2d308:	bl	13ef4 <memcmp@plt>
   2d30c:	ldr	r4, [pc, #852]	; 2d668 <__flatcc_fb_default_error_out@@Base+0x30fc>
   2d310:	cmp	r0, #0
   2d314:	movne	r4, #9
   2d318:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d31c:	ldr	r2, [pc, #840]	; 2d66c <__flatcc_fb_default_error_out@@Base+0x3100>
   2d320:	cmp	r3, r2
   2d324:	bne	2c9c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2d328:	mov	r2, #5
   2d32c:	mov	r1, r8
   2d330:	ldr	r0, [pc, #824]	; 2d670 <__flatcc_fb_default_error_out@@Base+0x3104>
   2d334:	bl	13ef4 <memcmp@plt>
   2d338:	cmp	r0, #0
   2d33c:	movne	r4, #9
   2d340:	mvneq	r4, #984	; 0x3d8
   2d344:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d348:	mov	r2, #3
   2d34c:	mov	r1, r8
   2d350:	ldr	r0, [pc, #796]	; 2d674 <__flatcc_fb_default_error_out@@Base+0x3108>
   2d354:	bl	13ef4 <memcmp@plt>
   2d358:	ldr	r4, [pc, #792]	; 2d678 <__flatcc_fb_default_error_out@@Base+0x310c>
   2d35c:	cmp	r0, #0
   2d360:	movne	r4, #9
   2d364:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d368:	mov	r2, #6
   2d36c:	mov	r1, r8
   2d370:	ldr	r0, [pc, #772]	; 2d67c <__flatcc_fb_default_error_out@@Base+0x3110>
   2d374:	bl	13ef4 <memcmp@plt>
   2d378:	ldr	r4, [pc, #768]	; 2d680 <__flatcc_fb_default_error_out@@Base+0x3114>
   2d37c:	cmp	r0, #0
   2d380:	movne	r4, #9
   2d384:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d388:	mov	r2, #14
   2d38c:	mov	r1, r8
   2d390:	ldr	r0, [pc, #748]	; 2d684 <__flatcc_fb_default_error_out@@Base+0x3118>
   2d394:	bl	13ef4 <memcmp@plt>
   2d398:	ldr	r4, [pc, #744]	; 2d688 <__flatcc_fb_default_error_out@@Base+0x311c>
   2d39c:	cmp	r0, #0
   2d3a0:	movne	r4, #9
   2d3a4:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d3a8:	mov	r2, #4
   2d3ac:	mov	r1, r8
   2d3b0:	ldr	r0, [pc, #724]	; 2d68c <__flatcc_fb_default_error_out@@Base+0x3120>
   2d3b4:	bl	13ef4 <memcmp@plt>
   2d3b8:	ldr	r4, [pc, #720]	; 2d690 <__flatcc_fb_default_error_out@@Base+0x3124>
   2d3bc:	cmp	r0, #0
   2d3c0:	movne	r4, #9
   2d3c4:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d3c8:	mov	r2, #9
   2d3cc:	mov	r1, r8
   2d3d0:	ldr	r0, [pc, #700]	; 2d694 <__flatcc_fb_default_error_out@@Base+0x3128>
   2d3d4:	bl	13ef4 <memcmp@plt>
   2d3d8:	ldr	r4, [pc, #696]	; 2d698 <__flatcc_fb_default_error_out@@Base+0x312c>
   2d3dc:	cmp	r0, #0
   2d3e0:	movne	r4, #9
   2d3e4:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d3e8:	mov	r2, #11
   2d3ec:	mov	r1, r8
   2d3f0:	ldr	r0, [pc, #676]	; 2d69c <__flatcc_fb_default_error_out@@Base+0x3130>
   2d3f4:	bl	13ef4 <memcmp@plt>
   2d3f8:	ldr	r4, [pc, #672]	; 2d6a0 <__flatcc_fb_default_error_out@@Base+0x3134>
   2d3fc:	cmp	r0, #0
   2d400:	movne	r4, #9
   2d404:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d408:	add	r3, r8, #3
   2d40c:	mov	r2, r8
   2d410:	ldr	r1, [pc, #652]	; 2d6a4 <__flatcc_fb_default_error_out@@Base+0x3138>
   2d414:	mov	r0, sl
   2d418:	mov	r8, r3
   2d41c:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2d420:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2d424:	ldr	r2, [pc, #636]	; 2d6a8 <__flatcc_fb_default_error_out@@Base+0x313c>
   2d428:	cmp	r3, r2
   2d42c:	bne	2c9c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2d430:	mov	r2, #7
   2d434:	mov	r1, r8
   2d438:	ldr	r0, [pc, #620]	; 2d6ac <__flatcc_fb_default_error_out@@Base+0x3140>
   2d43c:	bl	13ef4 <memcmp@plt>
   2d440:	ldr	r4, [pc, #616]	; 2d6b0 <__flatcc_fb_default_error_out@@Base+0x3144>
   2d444:	cmp	r0, #0
   2d448:	movne	r4, #9
   2d44c:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d450:	mov	r2, #5
   2d454:	mov	r1, r8
   2d458:	ldr	r0, [pc, #596]	; 2d6b4 <__flatcc_fb_default_error_out@@Base+0x3148>
   2d45c:	bl	13ef4 <memcmp@plt>
   2d460:	ldr	r4, [pc, #592]	; 2d6b8 <__flatcc_fb_default_error_out@@Base+0x314c>
   2d464:	cmp	r0, #0
   2d468:	movne	r4, #9
   2d46c:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d470:	mov	r2, #6
   2d474:	mov	r1, r8
   2d478:	ldr	r0, [pc, #572]	; 2d6bc <__flatcc_fb_default_error_out@@Base+0x3150>
   2d47c:	bl	13ef4 <memcmp@plt>
   2d480:	ldr	r4, [pc, #568]	; 2d6c0 <__flatcc_fb_default_error_out@@Base+0x3154>
   2d484:	cmp	r0, #0
   2d488:	movne	r4, #9
   2d48c:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d490:	mov	r2, #6
   2d494:	mov	r1, r8
   2d498:	ldr	r0, [pc, #548]	; 2d6c4 <__flatcc_fb_default_error_out@@Base+0x3158>
   2d49c:	bl	13ef4 <memcmp@plt>
   2d4a0:	ldr	r4, [pc, #544]	; 2d6c8 <__flatcc_fb_default_error_out@@Base+0x315c>
   2d4a4:	cmp	r0, #0
   2d4a8:	movne	r4, #9
   2d4ac:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d4b0:	mov	r2, #9
   2d4b4:	mov	r1, r8
   2d4b8:	ldr	r0, [pc, #524]	; 2d6cc <__flatcc_fb_default_error_out@@Base+0x3160>
   2d4bc:	bl	13ef4 <memcmp@plt>
   2d4c0:	cmp	r0, #0
   2d4c4:	movne	r4, #9
   2d4c8:	mvneq	r4, #968	; 0x3c8
   2d4cc:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d4d0:	mov	r2, #5
   2d4d4:	mov	r1, r8
   2d4d8:	ldr	r0, [pc, #496]	; 2d6d0 <__flatcc_fb_default_error_out@@Base+0x3164>
   2d4dc:	bl	13ef4 <memcmp@plt>
   2d4e0:	ldr	r4, [pc, #492]	; 2d6d4 <__flatcc_fb_default_error_out@@Base+0x3168>
   2d4e4:	cmp	r0, #0
   2d4e8:	movne	r4, #9
   2d4ec:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d4f0:	mov	r2, #5
   2d4f4:	mov	r1, r8
   2d4f8:	ldr	r0, [pc, #472]	; 2d6d8 <__flatcc_fb_default_error_out@@Base+0x316c>
   2d4fc:	bl	13ef4 <memcmp@plt>
   2d500:	cmp	r0, #0
   2d504:	movne	r4, #9
   2d508:	mvneq	r4, #980	; 0x3d4
   2d50c:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d510:	mov	r2, #4
   2d514:	mov	r1, r8
   2d518:	ldr	r0, [pc, #444]	; 2d6dc <__flatcc_fb_default_error_out@@Base+0x3170>
   2d51c:	bl	13ef4 <memcmp@plt>
   2d520:	ldr	r4, [pc, #440]	; 2d6e0 <__flatcc_fb_default_error_out@@Base+0x3174>
   2d524:	cmp	r0, #0
   2d528:	movne	r4, #9
   2d52c:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d530:	mov	r2, #6
   2d534:	mov	r1, r8
   2d538:	ldr	r0, [pc, #420]	; 2d6e4 <__flatcc_fb_default_error_out@@Base+0x3178>
   2d53c:	bl	13ef4 <memcmp@plt>
   2d540:	ldr	r4, [pc, #416]	; 2d6e8 <__flatcc_fb_default_error_out@@Base+0x317c>
   2d544:	cmp	r0, #0
   2d548:	movne	r4, #9
   2d54c:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d550:	mov	r2, #5
   2d554:	mov	r1, r8
   2d558:	ldr	r0, [pc, #396]	; 2d6ec <__flatcc_fb_default_error_out@@Base+0x3180>
   2d55c:	bl	13ef4 <memcmp@plt>
   2d560:	cmp	r0, #0
   2d564:	movne	r4, #9
   2d568:	mvneq	r4, #976	; 0x3d0
   2d56c:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d570:	ldr	r2, [pc, #376]	; 2d6f0 <__flatcc_fb_default_error_out@@Base+0x3184>
   2d574:	cmp	r3, r2
   2d578:	bne	2c9c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2d57c:	mov	r2, #4
   2d580:	mov	r1, r8
   2d584:	ldr	r0, [pc, #360]	; 2d6f4 <__flatcc_fb_default_error_out@@Base+0x3188>
   2d588:	bl	13ef4 <memcmp@plt>
   2d58c:	cmp	r0, #0
   2d590:	movne	r4, #9
   2d594:	mvneq	r4, #988	; 0x3dc
   2d598:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d59c:	mov	r2, #6
   2d5a0:	mov	r1, r8
   2d5a4:	ldr	r0, [pc, #332]	; 2d6f8 <__flatcc_fb_default_error_out@@Base+0x318c>
   2d5a8:	bl	13ef4 <memcmp@plt>
   2d5ac:	ldr	r4, [pc, #328]	; 2d6fc <__flatcc_fb_default_error_out@@Base+0x3190>
   2d5b0:	cmp	r0, #0
   2d5b4:	movne	r4, #9
   2d5b8:	b	2b2d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d5bc:	bl	14098 <__assert_fail@plt+0x60>
   2d5c0:	add	r3, r8, #4
   2d5c4:	mov	r2, r8
   2d5c8:	ldr	r1, [pc, #304]	; 2d700 <__flatcc_fb_default_error_out@@Base+0x3194>
   2d5cc:	mov	r0, sl
   2d5d0:	mov	r8, r3
   2d5d4:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2d5d8:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2d5dc:	add	r3, r8, #4
   2d5e0:	mov	r2, r8
   2d5e4:	ldr	r1, [pc, #280]	; 2d704 <__flatcc_fb_default_error_out@@Base+0x3198>
   2d5e8:	mov	r0, sl
   2d5ec:	mov	r8, r3
   2d5f0:	bl	2a58c <__flatcc_fb_default_error_out@@Base+0x20>
   2d5f4:	b	2a744 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2d5f8:	mov	r8, r4
   2d5fc:	b	2bc08 <__flatcc_fb_default_error_out@@Base+0x169c>
   2d600:	eorseq	r3, ip, ip, lsr ip
   2d604:	rsbvc	r6, r9, #66060288	; 0x3f00000
   2d608:	strbtvc	r7, [r8], #-821	; 0xfffffccb
   2d60c:	mcrvs	5, 3, r7, cr14, cr5, {1}
   2d610:	andeq	r8, r5, r8, lsr #23
   2d614:			; <UNDEFINED> instruction: 0xfffffc30
   2d618:			; <UNDEFINED> instruction: 0xfffffc3c
   2d61c:	eoreq	r2, lr, lr, lsr #28
   2d620:			; <UNDEFINED> instruction: 0x00058bb0
   2d624:			; <UNDEFINED> instruction: 0xfffffc28
   2d628:	andeq	r8, r5, r8, lsl ip
   2d62c:	andeq	r1, r4, r8, lsr #29
   2d630:			; <UNDEFINED> instruction: 0xfffffc31
   2d634:	strdeq	sl, [r5], -r4
   2d638:			; <UNDEFINED> instruction: 0xfffffc29
   2d63c:	strbvs	r7, [r2, #-1333]!	; 0xfffffacb
   2d640:	muleq	r5, r8, fp
   2d644:			; <UNDEFINED> instruction: 0xfffffc2a
   2d648:	ldrdeq	r8, [r5], -r0
   2d64c:			; <UNDEFINED> instruction: 0xfffffc35
   2d650:	strdeq	r2, [r4], -r0
   2d654:			; <UNDEFINED> instruction: 0xfffffc21
   2d658:	andeq	r8, r5, r0, asr #23
   2d65c:			; <UNDEFINED> instruction: 0xfffffc1c
   2d660:	eorseq	r3, sp, sp, lsr sp
   2d664:	andeq	r8, r5, r8, lsl #23
   2d668:			; <UNDEFINED> instruction: 0xfffffc25
   2d66c:	strbtvc	r6, [ip], #-1589	; 0xfffff9cb
   2d670:	andeq	r1, r4, r0, lsr #29
   2d674:	andeq	r8, r5, r4, ror fp
   2d678:			; <UNDEFINED> instruction: 0xfffffc1e
   2d67c:			; <UNDEFINED> instruction: 0x00058bb8
   2d680:			; <UNDEFINED> instruction: 0xfffffc34
   2d684:	andeq	r8, r5, r8, lsl #24
   2d688:			; <UNDEFINED> instruction: 0xfffffc3a
   2d68c:	andeq	r8, r5, r8, ror fp
   2d690:			; <UNDEFINED> instruction: 0xfffffc1a
   2d694:	ldrdeq	r8, [r5], -r8	; <UNPREDICTABLE>
   2d698:			; <UNDEFINED> instruction: 0xfffffc36
   2d69c:	strdeq	r8, [r5], -ip
   2d6a0:			; <UNDEFINED> instruction: 0xfffffc39
   2d6a4:	eorseq	r3, sp, sl, lsr sl
   2d6a8:	strbtcc	r6, [ip], #-1591	; 0xfffff9c9
   2d6ac:	andeq	r8, r5, r8, asr #23
   2d6b0:			; <UNDEFINED> instruction: 0xfffffc1d
   2d6b4:	andeq	r2, r4, r8, ror #5
   2d6b8:			; <UNDEFINED> instruction: 0xfffffc22
   2d6bc:	andeq	r2, r4, r8, asr #5
   2d6c0:			; <UNDEFINED> instruction: 0xfffffc2e
   2d6c4:	ldrdeq	r2, [r4], -r8
   2d6c8:			; <UNDEFINED> instruction: 0xfffffc2c
   2d6cc:	andeq	r8, r5, r4, ror #23
   2d6d0:	muleq	r5, r0, fp
   2d6d4:			; <UNDEFINED> instruction: 0xfffffc26
   2d6d8:	andeq	r2, r4, r0, ror #5
   2d6dc:			; <UNDEFINED> instruction: 0x0005a5bc
   2d6e0:			; <UNDEFINED> instruction: 0xfffffc19
   2d6e4:	ldrdeq	r2, [r4], -r0
   2d6e8:			; <UNDEFINED> instruction: 0xfffffc2d
   2d6ec:	andeq	r8, r5, r0, lsr #23
   2d6f0:			; <UNDEFINED> instruction: 0x676f6c34
   2d6f4:	andeq	r8, r5, r0, lsl #23
   2d6f8:	andeq	r8, r5, r8, lsl sp
   2d6fc:			; <UNDEFINED> instruction: 0xfffffc32
   2d700:	ldccc	14, cr3, [lr, #-248]!	; 0xffffff08
   2d704:	ldccc	12, cr3, [ip, #-240]!	; 0xffffff10

0002d708 <__flatcc_fb_print_error@@Base>:
   2d708:	push	{r1, r2, r3}
   2d70c:	mov	r1, #200	; 0xc8
   2d710:	push	{r4, r5, lr}
   2d714:	sub	sp, sp, #208	; 0xd0
   2d718:	add	ip, sp, #224	; 0xe0
   2d71c:	mov	r3, ip
   2d720:	ldr	r2, [sp, #220]	; 0xdc
   2d724:	mov	r5, r0
   2d728:	add	r0, sp, #8
   2d72c:	str	ip, [sp, #4]
   2d730:	bl	13ffc <vsnprintf@plt>
   2d734:	add	r1, sp, #8
   2d738:	cmp	r0, #199	; 0xc7
   2d73c:	movle	r4, r0
   2d740:	ldrgt	r3, [pc, #52]	; 2d77c <__flatcc_fb_print_error@@Base+0x74>
   2d744:	movgt	r4, #199	; 0xc7
   2d748:	ldrbgt	r2, [r3, #4]
   2d74c:	ldrgt	r0, [r3]
   2d750:	ldr	r3, [r5, #8]
   2d754:	strbgt	r2, [sp, #207]	; 0xcf
   2d758:	strgt	r0, [sp, #203]	; 0xcb
   2d75c:	mov	r2, r4
   2d760:	ldr	r0, [r5, #12]
   2d764:	blx	r3
   2d768:	mov	r0, r4
   2d76c:	add	sp, sp, #208	; 0xd0
   2d770:	pop	{r4, r5, lr}
   2d774:	add	sp, sp, #12
   2d778:	bx	lr
   2d77c:	andeq	r8, r5, r8, lsr #24
   2d780:	adds	ip, r1, #0
   2d784:	movne	ip, #1
   2d788:	cmp	r3, #0
   2d78c:	movne	ip, #0
   2d790:	push	{r4, lr}
   2d794:	cmp	ip, #0
   2d798:	sub	sp, sp, #16
   2d79c:	mov	r4, r0
   2d7a0:	ldr	lr, [sp, #24]
   2d7a4:	ldmne	r1, {r3, lr}
   2d7a8:	ldr	r0, [pc, #164]	; 2d854 <__flatcc_fb_print_error@@Base+0x14c>
   2d7ac:	cmp	r2, #0
   2d7b0:	moveq	r2, r0
   2d7b4:	cmp	r3, #0
   2d7b8:	moveq	lr, r3
   2d7bc:	moveq	r3, r0
   2d7c0:	cmp	r1, #0
   2d7c4:	bne	2d7e8 <__flatcc_fb_print_error@@Base+0xe0>
   2d7c8:	ldr	r1, [pc, #136]	; 2d858 <__flatcc_fb_print_error@@Base+0x150>
   2d7cc:	mov	r0, r4
   2d7d0:	bl	2d708 <__flatcc_fb_print_error@@Base>
   2d7d4:	ldr	r3, [r4, #108]	; 0x6c
   2d7d8:	add	r3, r3, #1
   2d7dc:	str	r3, [r4, #108]	; 0x6c
   2d7e0:	add	sp, sp, #16
   2d7e4:	pop	{r4, pc}
   2d7e8:	cmp	r4, #0
   2d7ec:	beq	2d818 <__flatcc_fb_print_error@@Base+0x110>
   2d7f0:	mov	r0, r4
   2d7f4:	ldr	ip, [r0, #20]
   2d7f8:	cmp	r1, ip
   2d7fc:	bcc	2d80c <__flatcc_fb_print_error@@Base+0x104>
   2d800:	ldr	ip, [r0, #24]
   2d804:	cmp	r1, ip
   2d808:	bcc	2d84c <__flatcc_fb_print_error@@Base+0x144>
   2d80c:	ldr	r0, [r0]
   2d810:	cmp	r0, #0
   2d814:	bne	2d7f4 <__flatcc_fb_print_error@@Base+0xec>
   2d818:	ldr	ip, [pc, #52]	; 2d854 <__flatcc_fb_print_error@@Base+0x14c>
   2d81c:	ldr	r0, [r1, #8]
   2d820:	str	r2, [sp, #12]
   2d824:	str	r3, [sp, #8]
   2d828:	str	lr, [sp, #4]
   2d82c:	ldr	r3, [r1, #12]
   2d830:	mov	r2, ip
   2d834:	str	r3, [sp]
   2d838:	ldr	r1, [pc, #28]	; 2d85c <__flatcc_fb_print_error@@Base+0x154>
   2d83c:	mov	r3, r0
   2d840:	mov	r0, r4
   2d844:	bl	2d708 <__flatcc_fb_print_error@@Base>
   2d848:	b	2d7d4 <__flatcc_fb_print_error@@Base+0xcc>
   2d84c:	ldr	ip, [r0, #520]	; 0x208
   2d850:	b	2d81c <__flatcc_fb_print_error@@Base+0x114>
   2d854:	andeq	fp, r4, ip, lsr #24
   2d858:	andeq	r8, r5, r0, asr ip
   2d85c:	andeq	r8, r5, r0, lsr ip
   2d860:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2d864:	mov	r7, r1
   2d868:	ldr	lr, [r0, #52]	; 0x34
   2d86c:	ldr	ip, [r0, #44]	; 0x2c
   2d870:	add	r1, lr, #16
   2d874:	cmp	r1, ip
   2d878:	sub	sp, sp, #8
   2d87c:	mov	r4, r0
   2d880:	ldr	r5, [r0, #40]	; 0x28
   2d884:	bhi	2db18 <__flatcc_fb_print_error@@Base+0x410>
   2d888:	ldr	r9, [r4, #24]
   2d88c:	add	r8, r5, #20
   2d890:	cmp	r8, r9
   2d894:	str	r1, [r4, #52]	; 0x34
   2d898:	str	r5, [lr, #4]
   2d89c:	str	lr, [r7]
   2d8a0:	str	r8, [r4, #40]	; 0x28
   2d8a4:	beq	2db6c <__flatcc_fb_print_error@@Base+0x464>
   2d8a8:	ldr	r3, [r5, #36]	; 0x24
   2d8ac:	cmn	r3, #964	; 0x3c4
   2d8b0:	movne	r2, r8
   2d8b4:	movne	r8, lr
   2d8b8:	bne	2d944 <__flatcc_fb_print_error@@Base+0x23c>
   2d8bc:	mov	r6, #1
   2d8c0:	mov	r5, #65536	; 0x10000
   2d8c4:	b	2d8f8 <__flatcc_fb_print_error@@Base+0x1f0>
   2d8c8:	ldr	r0, [r4, #36]	; 0x24
   2d8cc:	add	r2, r8, #20
   2d8d0:	cmp	r2, r9
   2d8d4:	str	r1, [r4, #52]	; 0x34
   2d8d8:	stm	r3, {r0, r8}
   2d8dc:	str	r3, [r4, #36]	; 0x24
   2d8e0:	str	r2, [r4, #40]	; 0x28
   2d8e4:	beq	2db70 <__flatcc_fb_print_error@@Base+0x468>
   2d8e8:	ldr	r3, [r2, #16]
   2d8ec:	cmn	r3, #964	; 0x3c4
   2d8f0:	bne	2d940 <__flatcc_fb_print_error@@Base+0x238>
   2d8f4:	mov	r8, r2
   2d8f8:	add	r2, r1, #16
   2d8fc:	cmp	r2, ip
   2d900:	movls	r3, r1
   2d904:	movls	r1, r2
   2d908:	bls	2d8c8 <__flatcc_fb_print_error@@Base+0x1c0>
   2d90c:	mov	r1, r6
   2d910:	mov	r0, r5
   2d914:	bl	13ea0 <calloc@plt>
   2d918:	cmp	r0, #0
   2d91c:	beq	2db68 <__flatcc_fb_print_error@@Base+0x460>
   2d920:	ldr	r3, [r4, #48]	; 0x30
   2d924:	add	ip, r0, #65536	; 0x10000
   2d928:	str	r3, [r0]
   2d92c:	str	r0, [r4, #48]	; 0x30
   2d930:	str	ip, [r4, #44]	; 0x2c
   2d934:	add	r3, r0, #16
   2d938:	add	r1, r0, #32
   2d93c:	b	2d8c8 <__flatcc_fb_print_error@@Base+0x1c0>
   2d940:	ldr	r8, [r7]
   2d944:	mov	r7, #1
   2d948:	mov	r6, #65536	; 0x10000
   2d94c:	cmp	r3, #46	; 0x2e
   2d950:	bne	2db10 <__flatcc_fb_print_error@@Base+0x408>
   2d954:	add	sl, r2, #20
   2d958:	cmp	sl, r9
   2d95c:	str	sl, [r4, #40]	; 0x28
   2d960:	beq	2db78 <__flatcc_fb_print_error@@Base+0x470>
   2d964:	ldr	r3, [r2, #36]	; 0x24
   2d968:	cmn	r3, #964	; 0x3c4
   2d96c:	bne	2d9f4 <__flatcc_fb_print_error@@Base+0x2ec>
   2d970:	ldr	r0, [r4, #52]	; 0x34
   2d974:	ldr	r1, [r4, #44]	; 0x2c
   2d978:	b	2d9ac <__flatcc_fb_print_error@@Base+0x2a4>
   2d97c:	ldr	r2, [r4, #36]	; 0x24
   2d980:	add	r5, sl, #20
   2d984:	cmp	r5, r9
   2d988:	str	r0, [r4, #52]	; 0x34
   2d98c:	stm	r3, {r2, sl}
   2d990:	str	r3, [r4, #36]	; 0x24
   2d994:	str	r5, [r4, #40]	; 0x28
   2d998:	beq	2db50 <__flatcc_fb_print_error@@Base+0x448>
   2d99c:	ldr	r3, [r5, #16]
   2d9a0:	cmn	r3, #964	; 0x3c4
   2d9a4:	bne	2d9f8 <__flatcc_fb_print_error@@Base+0x2f0>
   2d9a8:	mov	sl, r5
   2d9ac:	add	r2, r0, #16
   2d9b0:	cmp	r2, r1
   2d9b4:	movls	r3, r0
   2d9b8:	movls	r0, r2
   2d9bc:	bls	2d97c <__flatcc_fb_print_error@@Base+0x274>
   2d9c0:	mov	r1, r7
   2d9c4:	mov	r0, r6
   2d9c8:	bl	13ea0 <calloc@plt>
   2d9cc:	cmp	r0, #0
   2d9d0:	beq	2db68 <__flatcc_fb_print_error@@Base+0x460>
   2d9d4:	ldr	r3, [r4, #48]	; 0x30
   2d9d8:	add	r1, r0, #65536	; 0x10000
   2d9dc:	str	r3, [r0]
   2d9e0:	str	r0, [r4, #48]	; 0x30
   2d9e4:	add	r3, r0, #16
   2d9e8:	str	r1, [r4, #44]	; 0x2c
   2d9ec:	add	r0, r0, #32
   2d9f0:	b	2d97c <__flatcc_fb_print_error@@Base+0x274>
   2d9f4:	mov	r5, sl
   2d9f8:	cmp	r3, #9
   2d9fc:	bne	2daf8 <__flatcc_fb_print_error@@Base+0x3f0>
   2da00:	ldr	r3, [r4, #52]	; 0x34
   2da04:	ldr	r1, [r4, #44]	; 0x2c
   2da08:	add	r0, r3, #16
   2da0c:	cmp	r0, r1
   2da10:	bhi	2dac4 <__flatcc_fb_print_error@@Base+0x3bc>
   2da14:	add	sl, r5, #20
   2da18:	cmp	sl, r9
   2da1c:	str	r0, [r4, #52]	; 0x34
   2da20:	str	r5, [r3, #4]
   2da24:	str	r3, [r8]
   2da28:	mov	r8, r3
   2da2c:	str	sl, [r4, #40]	; 0x28
   2da30:	beq	2db4c <__flatcc_fb_print_error@@Base+0x444>
   2da34:	ldr	r3, [r5, #36]	; 0x24
   2da38:	cmn	r3, #964	; 0x3c4
   2da3c:	movne	r2, sl
   2da40:	beq	2da7c <__flatcc_fb_print_error@@Base+0x374>
   2da44:	b	2d94c <__flatcc_fb_print_error@@Base+0x244>
   2da48:	ldr	ip, [r4, #36]	; 0x24
   2da4c:	add	r2, sl, #20
   2da50:	cmp	r2, r9
   2da54:	str	r0, [r4, #52]	; 0x34
   2da58:	str	sl, [r3, #4]
   2da5c:	str	ip, [r3]
   2da60:	str	r3, [r4, #36]	; 0x24
   2da64:	str	r2, [r4, #40]	; 0x28
   2da68:	beq	2db50 <__flatcc_fb_print_error@@Base+0x448>
   2da6c:	ldr	r3, [r2, #16]
   2da70:	cmn	r3, #964	; 0x3c4
   2da74:	bne	2d94c <__flatcc_fb_print_error@@Base+0x244>
   2da78:	mov	sl, r2
   2da7c:	add	r2, r0, #16
   2da80:	cmp	r2, r1
   2da84:	movls	r3, r0
   2da88:	movls	r0, r2
   2da8c:	bls	2da48 <__flatcc_fb_print_error@@Base+0x340>
   2da90:	mov	r1, r7
   2da94:	mov	r0, r6
   2da98:	bl	13ea0 <calloc@plt>
   2da9c:	cmp	r0, #0
   2daa0:	beq	2db68 <__flatcc_fb_print_error@@Base+0x460>
   2daa4:	ldr	r3, [r4, #48]	; 0x30
   2daa8:	add	r1, r0, #65536	; 0x10000
   2daac:	str	r3, [r0]
   2dab0:	str	r0, [r4, #48]	; 0x30
   2dab4:	add	r3, r0, #16
   2dab8:	str	r1, [r4, #44]	; 0x2c
   2dabc:	add	r0, r0, #32
   2dac0:	b	2da48 <__flatcc_fb_print_error@@Base+0x340>
   2dac4:	mov	r1, r7
   2dac8:	mov	r0, r6
   2dacc:	bl	13ea0 <calloc@plt>
   2dad0:	subs	r2, r0, #0
   2dad4:	beq	2db68 <__flatcc_fb_print_error@@Base+0x460>
   2dad8:	ldr	ip, [r4, #48]	; 0x30
   2dadc:	add	r1, r2, #65536	; 0x10000
   2dae0:	add	r3, r2, #16
   2dae4:	add	r0, r2, #32
   2dae8:	str	ip, [r2]
   2daec:	str	r2, [r4, #48]	; 0x30
   2daf0:	str	r1, [r4, #44]	; 0x2c
   2daf4:	b	2da14 <__flatcc_fb_print_error@@Base+0x30c>
   2daf8:	mov	r3, #0
   2dafc:	mov	r1, r5
   2db00:	mov	r0, r4
   2db04:	str	r3, [sp]
   2db08:	ldr	r2, [pc, #112]	; 2db80 <__flatcc_fb_print_error@@Base+0x478>
   2db0c:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2db10:	add	sp, sp, #8
   2db14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2db18:	mov	r1, #1
   2db1c:	mov	r0, #65536	; 0x10000
   2db20:	bl	13ea0 <calloc@plt>
   2db24:	cmp	r0, #0
   2db28:	beq	2db68 <__flatcc_fb_print_error@@Base+0x460>
   2db2c:	ldr	r3, [r4, #48]	; 0x30
   2db30:	add	ip, r0, #65536	; 0x10000
   2db34:	add	lr, r0, #16
   2db38:	add	r1, r0, #32
   2db3c:	str	r3, [r0]
   2db40:	str	r0, [r4, #48]	; 0x30
   2db44:	str	ip, [r4, #44]	; 0x2c
   2db48:	b	2d888 <__flatcc_fb_print_error@@Base+0x180>
   2db4c:	mov	sl, r5
   2db50:	str	sl, [r4, #40]	; 0x28
   2db54:	ldr	r3, [pc, #40]	; 2db84 <__flatcc_fb_print_error@@Base+0x47c>
   2db58:	ldr	r2, [pc, #40]	; 2db88 <__flatcc_fb_print_error@@Base+0x480>
   2db5c:	ldr	r1, [pc, #40]	; 2db8c <__flatcc_fb_print_error@@Base+0x484>
   2db60:	ldr	r0, [pc, #40]	; 2db90 <__flatcc_fb_print_error@@Base+0x488>
   2db64:	bl	14038 <__assert_fail@plt>
   2db68:	bl	14098 <__assert_fail@plt+0x60>
   2db6c:	mov	r8, r5
   2db70:	str	r8, [r4, #40]	; 0x28
   2db74:	b	2db54 <__flatcc_fb_print_error@@Base+0x44c>
   2db78:	mov	sl, r2
   2db7c:	b	2db50 <__flatcc_fb_print_error@@Base+0x448>
   2db80:	andeq	r8, r5, ip, asr ip
   2db84:	andeq	r8, r5, r4, lsl #20
   2db88:	andeq	r0, r0, r5, asr r1
   2db8c:	andeq	r8, r5, ip, lsr #22
   2db90:	andeq	sl, r4, r4, asr sp
   2db94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2db98:	mov	r8, #0
   2db9c:	mov	r7, r1
   2dba0:	str	r8, [r1]
   2dba4:	str	r8, [r1, #4]
   2dba8:	ldr	sl, [pc, #720]	; 2de80 <__flatcc_fb_print_error@@Base+0x778>
   2dbac:	ldr	r1, [r0, #40]	; 0x28
   2dbb0:	sub	sp, sp, #12
   2dbb4:	mov	r4, r0
   2dbb8:	mov	r5, #1
   2dbbc:	mov	r3, #2
   2dbc0:	ldr	r2, [r1, #16]
   2dbc4:	strh	r3, [r7, #8]
   2dbc8:	sub	r2, r2, #6
   2dbcc:	cmp	r2, #17
   2dbd0:	ldrls	pc, [pc, r2, lsl #2]
   2dbd4:	b	2dc20 <__flatcc_fb_print_error@@Base+0x518>
   2dbd8:	andeq	sp, r2, r4, lsr lr
   2dbdc:	andeq	sp, r2, r0, lsr #24
   2dbe0:	andeq	sp, r2, r0, lsr #24
   2dbe4:	andeq	sp, r2, r0, lsr #24
   2dbe8:	andeq	sp, r2, r0, lsr #24
   2dbec:	andeq	sp, r2, r0, lsr #24
   2dbf0:	andeq	sp, r2, r0, lsr #24
   2dbf4:	andeq	sp, r2, r0, lsr #24
   2dbf8:	andeq	sp, r2, r0, lsr #24
   2dbfc:	andeq	sp, r2, r0, lsr #24
   2dc00:	andeq	sp, r2, r0, lsr #24
   2dc04:	andeq	sp, r2, r0, lsr #24
   2dc08:	andeq	sp, r2, r4, lsl lr
   2dc0c:	andeq	sp, r2, r0, lsr #24
   2dc10:	strdeq	sp, [r2], -ip
   2dc14:	andeq	sp, r2, r4, lsr sp
   2dc18:	andeq	sp, r2, r0, asr #24
   2dc1c:	andeq	sp, r2, r0, asr #24
   2dc20:	mov	r3, #0
   2dc24:	str	r3, [sp]
   2dc28:	ldr	r2, [pc, #596]	; 2de84 <__flatcc_fb_print_error@@Base+0x77c>
   2dc2c:	mov	r0, r4
   2dc30:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2dc34:	ldr	r1, [r4, #40]	; 0x28
   2dc38:	mov	r3, #1
   2dc3c:	strh	r3, [r7, #8]
   2dc40:	ldr	r2, [r7]
   2dc44:	cmp	r2, #0
   2dc48:	ldrne	r3, [r1]
   2dc4c:	subne	r3, r3, r2
   2dc50:	strne	r3, [r7, #4]
   2dc54:	ldrne	r1, [r4, #40]	; 0x28
   2dc58:	ldr	r3, [r1, #16]
   2dc5c:	cmp	r3, #22
   2dc60:	bne	2dd10 <__flatcc_fb_print_error@@Base+0x608>
   2dc64:	ldr	r8, [r4, #24]
   2dc68:	add	r5, r1, #20
   2dc6c:	cmp	r5, r8
   2dc70:	str	r5, [r4, #40]	; 0x28
   2dc74:	beq	2de74 <__flatcc_fb_print_error@@Base+0x76c>
   2dc78:	ldr	r3, [r1, #36]	; 0x24
   2dc7c:	cmn	r3, #964	; 0x3c4
   2dc80:	bne	2dd2c <__flatcc_fb_print_error@@Base+0x624>
   2dc84:	ldr	r0, [r4, #52]	; 0x34
   2dc88:	ldr	ip, [r4, #44]	; 0x2c
   2dc8c:	mov	r7, #1
   2dc90:	mov	r6, #65536	; 0x10000
   2dc94:	b	2dcc8 <__flatcc_fb_print_error@@Base+0x5c0>
   2dc98:	ldr	r1, [r4, #36]	; 0x24
   2dc9c:	add	r3, r5, #20
   2dca0:	cmp	r3, r8
   2dca4:	str	r0, [r4, #52]	; 0x34
   2dca8:	stm	r2, {r1, r5}
   2dcac:	str	r2, [r4, #36]	; 0x24
   2dcb0:	str	r3, [r4, #40]	; 0x28
   2dcb4:	beq	2de78 <__flatcc_fb_print_error@@Base+0x770>
   2dcb8:	ldr	r2, [r3, #16]
   2dcbc:	cmn	r2, #964	; 0x3c4
   2dcc0:	bne	2dd2c <__flatcc_fb_print_error@@Base+0x624>
   2dcc4:	mov	r5, r3
   2dcc8:	add	r3, r0, #16
   2dccc:	cmp	r3, ip
   2dcd0:	movls	r2, r0
   2dcd4:	movls	r0, r3
   2dcd8:	bls	2dc98 <__flatcc_fb_print_error@@Base+0x590>
   2dcdc:	mov	r1, r7
   2dce0:	mov	r0, r6
   2dce4:	bl	13ea0 <calloc@plt>
   2dce8:	cmp	r0, #0
   2dcec:	beq	2de70 <__flatcc_fb_print_error@@Base+0x768>
   2dcf0:	ldr	r3, [r4, #48]	; 0x30
   2dcf4:	add	ip, r0, #65536	; 0x10000
   2dcf8:	str	r3, [r0]
   2dcfc:	str	r0, [r4, #48]	; 0x30
   2dd00:	add	r2, r0, #16
   2dd04:	str	ip, [r4, #44]	; 0x2c
   2dd08:	add	r0, r0, #32
   2dd0c:	b	2dc98 <__flatcc_fb_print_error@@Base+0x590>
   2dd10:	mov	r3, #0
   2dd14:	str	r3, [sp]
   2dd18:	mov	r0, r4
   2dd1c:	ldr	r2, [pc, #356]	; 2de88 <__flatcc_fb_print_error@@Base+0x780>
   2dd20:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2dd24:	mov	r3, #1
   2dd28:	strh	r3, [r7, #8]
   2dd2c:	add	sp, sp, #12
   2dd30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dd34:	strh	r5, [r7, #8]
   2dd38:	mov	r3, #0
   2dd3c:	str	r8, [sp]
   2dd40:	ldr	r2, [pc, #324]	; 2de8c <__flatcc_fb_print_error@@Base+0x784>
   2dd44:	mov	r0, r4
   2dd48:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2dd4c:	ldr	r1, [r4, #40]	; 0x28
   2dd50:	ldr	r9, [r4, #24]
   2dd54:	add	fp, r1, #20
   2dd58:	cmp	fp, r9
   2dd5c:	str	fp, [r4, #40]	; 0x28
   2dd60:	beq	2de54 <__flatcc_fb_print_error@@Base+0x74c>
   2dd64:	ldr	r2, [r1, #36]	; 0x24
   2dd68:	cmn	r2, #964	; 0x3c4
   2dd6c:	movne	r1, fp
   2dd70:	bne	2dbc8 <__flatcc_fb_print_error@@Base+0x4c0>
   2dd74:	ldr	r0, [r4, #52]	; 0x34
   2dd78:	ldr	ip, [r4, #44]	; 0x2c
   2dd7c:	mov	r6, #65536	; 0x10000
   2dd80:	b	2ddb4 <__flatcc_fb_print_error@@Base+0x6ac>
   2dd84:	ldr	r3, [r4, #36]	; 0x24
   2dd88:	add	r1, fp, #20
   2dd8c:	cmp	r1, r9
   2dd90:	str	r0, [r4, #52]	; 0x34
   2dd94:	stm	r2, {r3, fp}
   2dd98:	str	r2, [r4, #36]	; 0x24
   2dd9c:	str	r1, [r4, #40]	; 0x28
   2dda0:	beq	2de58 <__flatcc_fb_print_error@@Base+0x750>
   2dda4:	ldr	r2, [r1, #16]
   2dda8:	cmn	r2, #964	; 0x3c4
   2ddac:	bne	2dbc8 <__flatcc_fb_print_error@@Base+0x4c0>
   2ddb0:	mov	fp, r1
   2ddb4:	add	r3, r0, #16
   2ddb8:	cmp	r3, ip
   2ddbc:	movls	r2, r0
   2ddc0:	movls	r0, r3
   2ddc4:	bls	2dd84 <__flatcc_fb_print_error@@Base+0x67c>
   2ddc8:	mov	r1, r5
   2ddcc:	mov	r0, r6
   2ddd0:	bl	13ea0 <calloc@plt>
   2ddd4:	cmp	r0, #0
   2ddd8:	beq	2de70 <__flatcc_fb_print_error@@Base+0x768>
   2dddc:	ldr	r3, [r4, #48]	; 0x30
   2dde0:	add	ip, r0, #65536	; 0x10000
   2dde4:	str	r3, [r0]
   2dde8:	str	r0, [r4, #48]	; 0x30
   2ddec:	add	r2, r0, #16
   2ddf0:	str	ip, [r4, #44]	; 0x2c
   2ddf4:	add	r0, r0, #32
   2ddf8:	b	2dd84 <__flatcc_fb_print_error@@Base+0x67c>
   2ddfc:	ldr	r3, [r7]
   2de00:	cmp	r3, #0
   2de04:	ldreq	r3, [r1]
   2de08:	streq	r3, [r7]
   2de0c:	ldreq	r1, [r4, #40]	; 0x28
   2de10:	b	2dd50 <__flatcc_fb_print_error@@Base+0x648>
   2de14:	strh	r5, [r7, #8]
   2de18:	mov	r3, #0
   2de1c:	str	r8, [sp]
   2de20:	mov	r2, sl
   2de24:	mov	r0, r4
   2de28:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2de2c:	ldr	r1, [r4, #40]	; 0x28
   2de30:	b	2dd50 <__flatcc_fb_print_error@@Base+0x648>
   2de34:	strh	r5, [r7, #8]
   2de38:	ldr	r3, [pc, #80]	; 2de90 <__flatcc_fb_print_error@@Base+0x788>
   2de3c:	str	r5, [sp]
   2de40:	ldr	r2, [pc, #76]	; 2de94 <__flatcc_fb_print_error@@Base+0x78c>
   2de44:	mov	r0, r4
   2de48:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2de4c:	ldr	r1, [r4, #40]	; 0x28
   2de50:	b	2dd50 <__flatcc_fb_print_error@@Base+0x648>
   2de54:	mov	fp, r1
   2de58:	str	fp, [r4, #40]	; 0x28
   2de5c:	ldr	r3, [pc, #52]	; 2de98 <__flatcc_fb_print_error@@Base+0x790>
   2de60:	ldr	r2, [pc, #52]	; 2de9c <__flatcc_fb_print_error@@Base+0x794>
   2de64:	ldr	r1, [pc, #52]	; 2dea0 <__flatcc_fb_print_error@@Base+0x798>
   2de68:	ldr	r0, [pc, #52]	; 2dea4 <__flatcc_fb_print_error@@Base+0x79c>
   2de6c:	bl	14038 <__assert_fail@plt>
   2de70:	bl	14098 <__assert_fail@plt+0x60>
   2de74:	mov	r5, r1
   2de78:	str	r5, [r4, #40]	; 0x28
   2de7c:	b	2de5c <__flatcc_fb_print_error@@Base+0x754>
   2de80:	ldrdeq	r8, [r5], -r4
   2de84:	strdeq	r8, [r5], -r4
   2de88:	andeq	r8, r5, r0, lsr #26
   2de8c:	andeq	r8, r5, r4, lsl #25
   2de90:	andeq	r8, r5, r4, lsr #25
   2de94:	andeq	r8, r5, r8, lsr #25
   2de98:	andeq	r8, r5, r4, lsl #20
   2de9c:	andeq	r0, r0, r5, asr r1
   2dea0:	andeq	r8, r5, ip, lsr #22
   2dea4:	andeq	sl, r4, r4, asr sp
   2dea8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2deac:	sub	sp, sp, #52	; 0x34
   2deb0:	ldr	r8, [r0, #40]	; 0x28
   2deb4:	str	r3, [sp, #8]
   2deb8:	mov	r4, r0
   2debc:	ldr	r3, [r8, #16]
   2dec0:	str	r2, [sp, #12]
   2dec4:	cmp	r3, #45	; 0x2d
   2dec8:	mov	r9, r1
   2decc:	beq	2e0ac <__flatcc_fb_print_error@@Base+0x9a4>
   2ded0:	cmp	r3, #10
   2ded4:	beq	2e320 <__flatcc_fb_print_error@@Base+0xc18>
   2ded8:	ble	2df14 <__flatcc_fb_print_error@@Base+0x80c>
   2dedc:	cmp	r3, #14
   2dee0:	beq	2e1f0 <__flatcc_fb_print_error@@Base+0xae8>
   2dee4:	cmp	r3, #19
   2dee8:	beq	2dffc <__flatcc_fb_print_error@@Base+0x8f4>
   2deec:	cmp	r3, #11
   2def0:	beq	2e280 <__flatcc_fb_print_error@@Base+0xb78>
   2def4:	mov	r3, #0
   2def8:	ldr	r2, [sp, #8]
   2defc:	mov	r1, r8
   2df00:	mov	r0, r4
   2df04:	str	r3, [sp]
   2df08:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2df0c:	add	sp, sp, #52	; 0x34
   2df10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2df14:	ldr	r2, [pc, #1952]	; 2e6bc <__flatcc_fb_print_error@@Base+0xfb4>
   2df18:	cmp	r3, r2
   2df1c:	beq	2e308 <__flatcc_fb_print_error@@Base+0xc00>
   2df20:	cmp	r3, #9
   2df24:	beq	2e468 <__flatcc_fb_print_error@@Base+0xd60>
   2df28:	cmn	r3, #988	; 0x3dc
   2df2c:	moveq	r3, #0
   2df30:	bne	2def4 <__flatcc_fb_print_error@@Base+0x7ec>
   2df34:	mov	r1, #1
   2df38:	mov	r2, #6
   2df3c:	strb	r1, [r9]
   2df40:	strh	r2, [r9, #8]
   2df44:	cmp	r3, #0
   2df48:	bne	2e2e4 <__flatcc_fb_print_error@@Base+0xbdc>
   2df4c:	ldr	r3, [r4, #40]	; 0x28
   2df50:	ldr	r8, [r4, #24]
   2df54:	add	r5, r3, #20
   2df58:	cmp	r8, r5
   2df5c:	str	r5, [r4, #40]	; 0x28
   2df60:	beq	2e618 <__flatcc_fb_print_error@@Base+0xf10>
   2df64:	ldr	r3, [r3, #36]	; 0x24
   2df68:	cmn	r3, #964	; 0x3c4
   2df6c:	bne	2df0c <__flatcc_fb_print_error@@Base+0x804>
   2df70:	ldr	r0, [r4, #52]	; 0x34
   2df74:	ldr	ip, [r4, #44]	; 0x2c
   2df78:	mov	r7, #1
   2df7c:	mov	r6, #65536	; 0x10000
   2df80:	b	2dfb4 <__flatcc_fb_print_error@@Base+0x8ac>
   2df84:	ldr	r1, [r4, #36]	; 0x24
   2df88:	add	r3, r5, #20
   2df8c:	cmp	r8, r3
   2df90:	str	r0, [r4, #52]	; 0x34
   2df94:	stm	r2, {r1, r5}
   2df98:	str	r2, [r4, #36]	; 0x24
   2df9c:	str	r3, [r4, #40]	; 0x28
   2dfa0:	beq	2e61c <__flatcc_fb_print_error@@Base+0xf14>
   2dfa4:	ldr	r2, [r3, #16]
   2dfa8:	cmn	r2, #964	; 0x3c4
   2dfac:	bne	2df0c <__flatcc_fb_print_error@@Base+0x804>
   2dfb0:	mov	r5, r3
   2dfb4:	add	r3, r0, #16
   2dfb8:	cmp	r3, ip
   2dfbc:	movls	r2, r0
   2dfc0:	movls	r0, r3
   2dfc4:	bls	2df84 <__flatcc_fb_print_error@@Base+0x87c>
   2dfc8:	mov	r1, r7
   2dfcc:	mov	r0, r6
   2dfd0:	bl	13ea0 <calloc@plt>
   2dfd4:	cmp	r0, #0
   2dfd8:	beq	2e6ac <__flatcc_fb_print_error@@Base+0xfa4>
   2dfdc:	ldr	r3, [r4, #48]	; 0x30
   2dfe0:	add	ip, r0, #65536	; 0x10000
   2dfe4:	str	r3, [r0]
   2dfe8:	str	r0, [r4, #48]	; 0x30
   2dfec:	add	r2, r0, #16
   2dff0:	str	ip, [r4, #44]	; 0x2c
   2dff4:	add	r0, r0, #32
   2dff8:	b	2df84 <__flatcc_fb_print_error@@Base+0x87c>
   2dffc:	ldr	r5, [r0, #24]
   2e000:	mov	sl, #0
   2e004:	add	fp, r8, #20
   2e008:	cmp	fp, r5
   2e00c:	str	fp, [r4, #40]	; 0x28
   2e010:	beq	2e678 <__flatcc_fb_print_error@@Base+0xf70>
   2e014:	ldr	r2, [r8, #36]	; 0x24
   2e018:	cmn	r2, #964	; 0x3c4
   2e01c:	bne	2e1ac <__flatcc_fb_print_error@@Base+0xaa4>
   2e020:	ldr	r0, [r4, #52]	; 0x34
   2e024:	ldr	lr, [r4, #44]	; 0x2c
   2e028:	mov	r7, #1
   2e02c:	mov	r6, #65536	; 0x10000
   2e030:	b	2e064 <__flatcc_fb_print_error@@Base+0x95c>
   2e034:	ldr	r1, [r4, #36]	; 0x24
   2e038:	add	r3, fp, #20
   2e03c:	cmp	r3, r5
   2e040:	str	r0, [r4, #52]	; 0x34
   2e044:	stm	r2, {r1, fp}
   2e048:	str	r2, [r4, #36]	; 0x24
   2e04c:	str	r3, [r4, #40]	; 0x28
   2e050:	beq	2e67c <__flatcc_fb_print_error@@Base+0xf74>
   2e054:	ldr	r2, [r3, #16]
   2e058:	cmn	r2, #964	; 0x3c4
   2e05c:	bne	2e1ac <__flatcc_fb_print_error@@Base+0xaa4>
   2e060:	mov	fp, r3
   2e064:	add	r3, r0, #16
   2e068:	cmp	r3, lr
   2e06c:	movls	r2, r0
   2e070:	movls	r0, r3
   2e074:	bls	2e034 <__flatcc_fb_print_error@@Base+0x92c>
   2e078:	mov	r1, r7
   2e07c:	mov	r0, r6
   2e080:	bl	13ea0 <calloc@plt>
   2e084:	cmp	r0, #0
   2e088:	beq	2e6ac <__flatcc_fb_print_error@@Base+0xfa4>
   2e08c:	ldr	r3, [r4, #48]	; 0x30
   2e090:	add	lr, r0, #65536	; 0x10000
   2e094:	str	r3, [r0]
   2e098:	str	r0, [r4, #48]	; 0x30
   2e09c:	add	r2, r0, #16
   2e0a0:	str	lr, [r4, #44]	; 0x2c
   2e0a4:	add	r0, r0, #32
   2e0a8:	b	2e034 <__flatcc_fb_print_error@@Base+0x92c>
   2e0ac:	ldr	r5, [r0, #24]
   2e0b0:	add	sl, r8, #20
   2e0b4:	cmp	sl, r5
   2e0b8:	str	sl, [r0, #40]	; 0x28
   2e0bc:	beq	2e6b0 <__flatcc_fb_print_error@@Base+0xfa8>
   2e0c0:	ldr	r2, [r8, #36]	; 0x24
   2e0c4:	cmn	r2, #964	; 0x3c4
   2e0c8:	bne	2e158 <__flatcc_fb_print_error@@Base+0xa50>
   2e0cc:	ldr	r0, [r0, #52]	; 0x34
   2e0d0:	ldr	ip, [r4, #44]	; 0x2c
   2e0d4:	mov	r7, #1
   2e0d8:	mov	r6, #65536	; 0x10000
   2e0dc:	b	2e110 <__flatcc_fb_print_error@@Base+0xa08>
   2e0e0:	ldr	r2, [r4, #36]	; 0x24
   2e0e4:	add	fp, sl, #20
   2e0e8:	cmp	r5, fp
   2e0ec:	str	r0, [r4, #52]	; 0x34
   2e0f0:	stm	r3, {r2, sl}
   2e0f4:	str	r3, [r4, #36]	; 0x24
   2e0f8:	str	fp, [r4, #40]	; 0x28
   2e0fc:	beq	2e6b4 <__flatcc_fb_print_error@@Base+0xfac>
   2e100:	ldr	r2, [fp, #16]
   2e104:	cmn	r2, #964	; 0x3c4
   2e108:	bne	2e15c <__flatcc_fb_print_error@@Base+0xa54>
   2e10c:	mov	sl, fp
   2e110:	add	r2, r0, #16
   2e114:	cmp	r2, ip
   2e118:	movls	r3, r0
   2e11c:	movls	r0, r2
   2e120:	bls	2e0e0 <__flatcc_fb_print_error@@Base+0x9d8>
   2e124:	mov	r1, r7
   2e128:	mov	r0, r6
   2e12c:	bl	13ea0 <calloc@plt>
   2e130:	cmp	r0, #0
   2e134:	beq	2e6ac <__flatcc_fb_print_error@@Base+0xfa4>
   2e138:	ldr	r3, [r4, #48]	; 0x30
   2e13c:	add	ip, r0, #65536	; 0x10000
   2e140:	str	r3, [r0]
   2e144:	str	r0, [r4, #48]	; 0x30
   2e148:	add	r3, r0, #16
   2e14c:	str	ip, [r4, #44]	; 0x2c
   2e150:	add	r0, r0, #32
   2e154:	b	2e0e0 <__flatcc_fb_print_error@@Base+0x9d8>
   2e158:	mov	fp, sl
   2e15c:	cmp	r2, #10
   2e160:	beq	2e60c <__flatcc_fb_print_error@@Base+0xf04>
   2e164:	bgt	2e584 <__flatcc_fb_print_error@@Base+0xe7c>
   2e168:	ldr	r3, [pc, #1356]	; 2e6bc <__flatcc_fb_print_error@@Base+0xfb4>
   2e16c:	cmp	r2, r3
   2e170:	beq	2e5dc <__flatcc_fb_print_error@@Base+0xed4>
   2e174:	cmp	r2, #9
   2e178:	bne	2e5a4 <__flatcc_fb_print_error@@Base+0xe9c>
   2e17c:	mov	r1, r9
   2e180:	mov	r0, r4
   2e184:	bl	2d860 <__flatcc_fb_print_error@@Base+0x158>
   2e188:	mov	r2, #1
   2e18c:	mov	r3, #0
   2e190:	strh	r2, [r9, #8]
   2e194:	mov	r1, fp
   2e198:	mov	r0, r4
   2e19c:	str	r3, [sp]
   2e1a0:	ldr	r2, [pc, #1304]	; 2e6c0 <__flatcc_fb_print_error@@Base+0xfb8>
   2e1a4:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2e1a8:	b	2df0c <__flatcc_fb_print_error@@Base+0x804>
   2e1ac:	mov	r1, r9
   2e1b0:	mov	r0, r4
   2e1b4:	bl	2db94 <__flatcc_fb_print_error@@Base+0x48c>
   2e1b8:	ldr	r3, [sp, #12]
   2e1bc:	ands	r3, r3, #1
   2e1c0:	beq	2e564 <__flatcc_fb_print_error@@Base+0xe5c>
   2e1c4:	cmp	sl, #0
   2e1c8:	beq	2df0c <__flatcc_fb_print_error@@Base+0x804>
   2e1cc:	mov	r2, #1
   2e1d0:	mov	r3, #0
   2e1d4:	strh	r2, [r9, #8]
   2e1d8:	mov	r1, r8
   2e1dc:	mov	r0, r4
   2e1e0:	str	r3, [sp]
   2e1e4:	ldr	r2, [pc, #1240]	; 2e6c4 <__flatcc_fb_print_error@@Base+0xfbc>
   2e1e8:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2e1ec:	b	2df0c <__flatcc_fb_print_error@@Base+0x804>
   2e1f0:	mov	r5, #0
   2e1f4:	ldr	r3, [r8]
   2e1f8:	ldr	r2, [r8, #4]
   2e1fc:	mov	r1, #5
   2e200:	add	ip, r3, r2
   2e204:	cmp	r3, ip
   2e208:	strh	r1, [r9, #8]
   2e20c:	beq	2e23c <__flatcc_fb_print_error@@Base+0xb34>
   2e210:	ldrb	lr, [r3]
   2e214:	sub	r1, lr, #45	; 0x2d
   2e218:	clz	r1, r1
   2e21c:	lsr	r1, r1, #5
   2e220:	sub	r2, r2, r1
   2e224:	cmp	r2, #1
   2e228:	add	r2, r3, r1
   2e22c:	ble	2e23c <__flatcc_fb_print_error@@Base+0xb34>
   2e230:	ldrb	r3, [r3, r1]
   2e234:	cmp	r3, #48	; 0x30
   2e238:	beq	2e49c <__flatcc_fb_print_error@@Base+0xd94>
   2e23c:	mov	r2, #1
   2e240:	mov	r3, #0
   2e244:	strh	r2, [r9, #8]
   2e248:	mov	r1, r8
   2e24c:	str	r3, [sp]
   2e250:	ldr	r2, [pc, #1136]	; 2e6c8 <__flatcc_fb_print_error@@Base+0xfc0>
   2e254:	mov	r0, r4
   2e258:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2e25c:	cmp	r5, #0
   2e260:	beq	2df4c <__flatcc_fb_print_error@@Base+0x844>
   2e264:	ldrd	r2, [r9]
   2e268:	mov	r1, #4
   2e26c:	strh	r1, [r9, #8]
   2e270:	rsbs	r2, r2, #0
   2e274:	rsc	r3, r3, #0
   2e278:	strd	r2, [r9]
   2e27c:	b	2df4c <__flatcc_fb_print_error@@Base+0x844>
   2e280:	mov	r5, #0
   2e284:	mov	r3, #3
   2e288:	strh	r3, [r9, #8]
   2e28c:	add	r1, sp, #44	; 0x2c
   2e290:	ldr	r0, [r8]
   2e294:	bl	13fb4 <strtod@plt>
   2e298:	ldm	r8, {r2, r3}
   2e29c:	ldr	r1, [sp, #44]	; 0x2c
   2e2a0:	add	r3, r2, r3
   2e2a4:	cmp	r1, r3
   2e2a8:	vstr	d0, [r9]
   2e2ac:	beq	2e448 <__flatcc_fb_print_error@@Base+0xd40>
   2e2b0:	mov	r2, #1
   2e2b4:	mov	r3, #0
   2e2b8:	strh	r2, [r9, #8]
   2e2bc:	mov	r1, r8
   2e2c0:	str	r3, [sp]
   2e2c4:	ldr	r2, [pc, #1024]	; 2e6cc <__flatcc_fb_print_error@@Base+0xfc4>
   2e2c8:	mov	r0, r4
   2e2cc:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2e2d0:	cmp	r5, #0
   2e2d4:	beq	2df4c <__flatcc_fb_print_error@@Base+0x844>
   2e2d8:	ldrh	r3, [r9, #8]
   2e2dc:	cmp	r3, #6
   2e2e0:	bne	2df4c <__flatcc_fb_print_error@@Base+0x844>
   2e2e4:	mov	r2, #1
   2e2e8:	mov	r3, #0
   2e2ec:	strh	r2, [r9, #8]
   2e2f0:	mov	r1, r8
   2e2f4:	str	r3, [sp]
   2e2f8:	ldr	r2, [pc, #976]	; 2e6d0 <__flatcc_fb_print_error@@Base+0xfc8>
   2e2fc:	mov	r0, r4
   2e300:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2e304:	b	2df4c <__flatcc_fb_print_error@@Base+0x844>
   2e308:	mov	r3, #0
   2e30c:	mov	r1, #0
   2e310:	mov	r2, #6
   2e314:	strb	r1, [r9]
   2e318:	strh	r2, [r9, #8]
   2e31c:	b	2df44 <__flatcc_fb_print_error@@Base+0x83c>
   2e320:	mov	r3, #0
   2e324:	str	r3, [sp, #8]
   2e328:	ldr	r7, [r8]
   2e32c:	ldr	r6, [r8, #4]
   2e330:	mov	r3, #5
   2e334:	add	r6, r7, r6
   2e338:	cmp	r7, r6
   2e33c:	strh	r3, [r9, #8]
   2e340:	beq	2e3dc <__flatcc_fb_print_error@@Base+0xcd4>
   2e344:	ldrb	fp, [r7]
   2e348:	sub	r3, fp, #45	; 0x2d
   2e34c:	clz	r3, r3
   2e350:	lsr	r3, r3, #5
   2e354:	add	sl, r7, r3
   2e358:	cmp	r6, sl
   2e35c:	beq	2e3dc <__flatcc_fb_print_error@@Base+0xcd4>
   2e360:	ldrb	r0, [r7, r3]
   2e364:	sub	r3, r0, #48	; 0x30
   2e368:	cmp	r3, #9
   2e36c:	bhi	2e3dc <__flatcc_fb_print_error@@Base+0xcd4>
   2e370:	uxtb	r0, r0
   2e374:	mov	r1, #0
   2e378:	subs	r0, r0, #48	; 0x30
   2e37c:	sbc	r1, r1, #0
   2e380:	add	ip, sl, #1
   2e384:	mov	r5, #10
   2e388:	b	2e3c8 <__flatcc_fb_print_error@@Base+0xcc0>
   2e38c:	ldrb	lr, [ip], #1
   2e390:	sub	r3, lr, #48	; 0x30
   2e394:	cmp	r3, #9
   2e398:	bhi	2e400 <__flatcc_fb_print_error@@Base+0xcf8>
   2e39c:	umull	r2, r3, r0, r5
   2e3a0:	mla	r3, r5, r1, r3
   2e3a4:	subs	r2, r2, #48	; 0x30
   2e3a8:	sbc	r3, r3, #0
   2e3ac:	adds	r2, r2, lr
   2e3b0:	adc	r3, r3, #0
   2e3b4:	cmp	r3, r1
   2e3b8:	cmpeq	r2, r0
   2e3bc:	bcc	2e3dc <__flatcc_fb_print_error@@Base+0xcd4>
   2e3c0:	mov	r0, r2
   2e3c4:	mov	r1, r3
   2e3c8:	cmp	ip, r6
   2e3cc:	mov	r2, ip
   2e3d0:	bne	2e38c <__flatcc_fb_print_error@@Base+0xc84>
   2e3d4:	cmp	sl, ip
   2e3d8:	bne	2e42c <__flatcc_fb_print_error@@Base+0xd24>
   2e3dc:	mov	r2, #1
   2e3e0:	mov	r3, #0
   2e3e4:	strh	r2, [r9, #8]
   2e3e8:	mov	r1, r8
   2e3ec:	str	r3, [sp]
   2e3f0:	ldr	r2, [pc, #732]	; 2e6d4 <__flatcc_fb_print_error@@Base+0xfcc>
   2e3f4:	mov	r0, r4
   2e3f8:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2e3fc:	b	2e438 <__flatcc_fb_print_error@@Base+0xd30>
   2e400:	cmp	r7, r2
   2e404:	beq	2e3dc <__flatcc_fb_print_error@@Base+0xcd4>
   2e408:	cmp	sl, r2
   2e40c:	beq	2e3dc <__flatcc_fb_print_error@@Base+0xcd4>
   2e410:	cmp	lr, #80	; 0x50
   2e414:	beq	2e3dc <__flatcc_fb_print_error@@Base+0xcd4>
   2e418:	bhi	2e550 <__flatcc_fb_print_error@@Base+0xe48>
   2e41c:	cmp	lr, #46	; 0x2e
   2e420:	beq	2e3dc <__flatcc_fb_print_error@@Base+0xcd4>
   2e424:	cmp	lr, #69	; 0x45
   2e428:	beq	2e3dc <__flatcc_fb_print_error@@Base+0xcd4>
   2e42c:	cmp	fp, #45	; 0x2d
   2e430:	strd	r0, [r9]
   2e434:	beq	2e3dc <__flatcc_fb_print_error@@Base+0xcd4>
   2e438:	ldr	r3, [sp, #8]
   2e43c:	cmp	r3, #0
   2e440:	bne	2e264 <__flatcc_fb_print_error@@Base+0xb5c>
   2e444:	b	2df4c <__flatcc_fb_print_error@@Base+0x844>
   2e448:	ldrb	r3, [r2]
   2e44c:	cmp	r3, #46	; 0x2e
   2e450:	beq	2e478 <__flatcc_fb_print_error@@Base+0xd70>
   2e454:	cmp	r5, #0
   2e458:	vnegne.f64	d0, d0
   2e45c:	vstrne	d0, [r9]
   2e460:	bne	2e2d8 <__flatcc_fb_print_error@@Base+0xbd0>
   2e464:	b	2df4c <__flatcc_fb_print_error@@Base+0x844>
   2e468:	bl	2d860 <__flatcc_fb_print_error@@Base+0x158>
   2e46c:	mov	r3, #13
   2e470:	strh	r3, [r9, #8]
   2e474:	b	2df0c <__flatcc_fb_print_error@@Base+0x804>
   2e478:	mov	r2, #1
   2e47c:	mov	r3, #0
   2e480:	strh	r2, [r9, #8]
   2e484:	mov	r1, r8
   2e488:	str	r3, [sp]
   2e48c:	ldr	r2, [pc, #580]	; 2e6d8 <__flatcc_fb_print_error@@Base+0xfd0>
   2e490:	mov	r0, r4
   2e494:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2e498:	b	2e2d0 <__flatcc_fb_print_error@@Base+0xbc8>
   2e49c:	ldrb	r3, [r2, #1]
   2e4a0:	orr	r3, r3, #32
   2e4a4:	cmp	r3, #120	; 0x78
   2e4a8:	bne	2e23c <__flatcc_fb_print_error@@Base+0xb34>
   2e4ac:	add	fp, r2, #2
   2e4b0:	sub	r3, ip, fp
   2e4b4:	cmp	r3, #16
   2e4b8:	addgt	r2, r2, #18
   2e4bc:	movle	r2, ip
   2e4c0:	cmp	fp, r2
   2e4c4:	beq	2e23c <__flatcc_fb_print_error@@Base+0xb34>
   2e4c8:	mov	r3, fp
   2e4cc:	mov	r0, #0
   2e4d0:	mov	r1, #0
   2e4d4:	str	r8, [sp, #8]
   2e4d8:	str	ip, [sp, #12]
   2e4dc:	str	lr, [sp, #16]
   2e4e0:	str	r9, [sp, #20]
   2e4e4:	b	2e50c <__flatcc_fb_print_error@@Base+0xe04>
   2e4e8:	lsl	r7, r1, #4
   2e4ec:	lsl	r6, r0, #4
   2e4f0:	orr	r7, r7, r0, lsr #28
   2e4f4:	subs	r0, r6, #48	; 0x30
   2e4f8:	sbc	r1, r7, #0
   2e4fc:	adds	r0, r0, lr
   2e500:	adc	r1, r1, #0
   2e504:	cmp	r2, r3
   2e508:	beq	2e5b8 <__flatcc_fb_print_error@@Base+0xeb0>
   2e50c:	mov	sl, r3
   2e510:	ldrb	lr, [r3], #1
   2e514:	sub	ip, lr, #48	; 0x30
   2e518:	cmp	ip, #9
   2e51c:	bls	2e4e8 <__flatcc_fb_print_error@@Base+0xde0>
   2e520:	orr	lr, lr, #32
   2e524:	sub	ip, lr, #97	; 0x61
   2e528:	cmp	ip, #5
   2e52c:	bhi	2e634 <__flatcc_fb_print_error@@Base+0xf2c>
   2e530:	lsl	r9, r1, #4
   2e534:	lsl	r8, r0, #4
   2e538:	orr	r9, r9, r0, lsr #28
   2e53c:	subs	r0, r8, #87	; 0x57
   2e540:	sbc	r1, r9, #0
   2e544:	adds	r0, r0, lr
   2e548:	adc	r1, r1, #0
   2e54c:	b	2e504 <__flatcc_fb_print_error@@Base+0xdfc>
   2e550:	cmp	lr, #101	; 0x65
   2e554:	beq	2e3dc <__flatcc_fb_print_error@@Base+0xcd4>
   2e558:	cmp	lr, #112	; 0x70
   2e55c:	bne	2e42c <__flatcc_fb_print_error@@Base+0xd24>
   2e560:	b	2e3dc <__flatcc_fb_print_error@@Base+0xcd4>
   2e564:	mov	ip, #1
   2e568:	str	r3, [sp]
   2e56c:	ldr	r2, [sp, #8]
   2e570:	mov	r1, r8
   2e574:	mov	r0, r4
   2e578:	strh	ip, [r9, #8]
   2e57c:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2e580:	b	2df0c <__flatcc_fb_print_error@@Base+0x804>
   2e584:	cmp	r2, #14
   2e588:	beq	2e600 <__flatcc_fb_print_error@@Base+0xef8>
   2e58c:	cmp	r2, #19
   2e590:	beq	2e5f4 <__flatcc_fb_print_error@@Base+0xeec>
   2e594:	cmp	r2, #11
   2e598:	beq	2e5e8 <__flatcc_fb_print_error@@Base+0xee0>
   2e59c:	mov	r8, fp
   2e5a0:	b	2def4 <__flatcc_fb_print_error@@Base+0x7ec>
   2e5a4:	cmn	r2, #988	; 0x3dc
   2e5a8:	bne	2e59c <__flatcc_fb_print_error@@Base+0xe94>
   2e5ac:	mov	r3, r8
   2e5b0:	mov	r8, fp
   2e5b4:	b	2df34 <__flatcc_fb_print_error@@Base+0x82c>
   2e5b8:	add	r8, sp, #8
   2e5bc:	ldr	r9, [sp, #20]
   2e5c0:	ldm	r8, {r8, ip, lr}
   2e5c4:	cmp	ip, r2
   2e5c8:	bne	2e684 <__flatcc_fb_print_error@@Base+0xf7c>
   2e5cc:	cmp	lr, #45	; 0x2d
   2e5d0:	strd	r0, [r9]
   2e5d4:	bne	2e25c <__flatcc_fb_print_error@@Base+0xb54>
   2e5d8:	b	2e23c <__flatcc_fb_print_error@@Base+0xb34>
   2e5dc:	mov	r3, r8
   2e5e0:	mov	r8, fp
   2e5e4:	b	2e30c <__flatcc_fb_print_error@@Base+0xc04>
   2e5e8:	mov	r5, r8
   2e5ec:	mov	r8, fp
   2e5f0:	b	2e284 <__flatcc_fb_print_error@@Base+0xb7c>
   2e5f4:	mov	sl, r8
   2e5f8:	mov	r8, fp
   2e5fc:	b	2e004 <__flatcc_fb_print_error@@Base+0x8fc>
   2e600:	mov	r5, r8
   2e604:	mov	r8, fp
   2e608:	b	2e1f4 <__flatcc_fb_print_error@@Base+0xaec>
   2e60c:	str	r8, [sp, #8]
   2e610:	mov	r8, fp
   2e614:	b	2e328 <__flatcc_fb_print_error@@Base+0xc20>
   2e618:	mov	r5, r3
   2e61c:	str	r5, [r4, #40]	; 0x28
   2e620:	ldr	r3, [pc, #180]	; 2e6dc <__flatcc_fb_print_error@@Base+0xfd4>
   2e624:	ldr	r2, [pc, #180]	; 2e6e0 <__flatcc_fb_print_error@@Base+0xfd8>
   2e628:	ldr	r1, [pc, #180]	; 2e6e4 <__flatcc_fb_print_error@@Base+0xfdc>
   2e62c:	ldr	r0, [pc, #180]	; 2e6e8 <__flatcc_fb_print_error@@Base+0xfe0>
   2e630:	bl	14038 <__assert_fail@plt>
   2e634:	add	r8, sp, #8
   2e638:	cmp	sl, fp
   2e63c:	ldm	r8, {r8, ip, lr}
   2e640:	ldr	r9, [sp, #20]
   2e644:	beq	2e23c <__flatcc_fb_print_error@@Base+0xb34>
   2e648:	cmp	sl, ip
   2e64c:	beq	2e5cc <__flatcc_fb_print_error@@Base+0xec4>
   2e650:	cmp	sl, r2
   2e654:	ldrb	r3, [sl]
   2e658:	beq	2e688 <__flatcc_fb_print_error@@Base+0xf80>
   2e65c:	cmp	r3, #80	; 0x50
   2e660:	beq	2e23c <__flatcc_fb_print_error@@Base+0xb34>
   2e664:	cmp	r3, #112	; 0x70
   2e668:	beq	2e23c <__flatcc_fb_print_error@@Base+0xb34>
   2e66c:	cmp	r3, #46	; 0x2e
   2e670:	bne	2e5cc <__flatcc_fb_print_error@@Base+0xec4>
   2e674:	b	2e23c <__flatcc_fb_print_error@@Base+0xb34>
   2e678:	mov	fp, r8
   2e67c:	str	fp, [r4, #40]	; 0x28
   2e680:	b	2e620 <__flatcc_fb_print_error@@Base+0xf18>
   2e684:	ldrb	r3, [r2]
   2e688:	sub	r2, r3, #48	; 0x30
   2e68c:	cmp	r2, #9
   2e690:	bls	2e23c <__flatcc_fb_print_error@@Base+0xb34>
   2e694:	orr	r3, r3, #32
   2e698:	sub	r2, r3, #97	; 0x61
   2e69c:	uxtb	r2, r2
   2e6a0:	cmp	r2, #5
   2e6a4:	bhi	2e65c <__flatcc_fb_print_error@@Base+0xf54>
   2e6a8:	b	2e23c <__flatcc_fb_print_error@@Base+0xb34>
   2e6ac:	bl	14098 <__assert_fail@plt+0x60>
   2e6b0:	mov	sl, r8
   2e6b4:	str	sl, [r4, #40]	; 0x28
   2e6b8:	b	2e620 <__flatcc_fb_print_error@@Base+0xf18>
   2e6bc:			; <UNDEFINED> instruction: 0xfffffc26
   2e6c0:	andeq	r8, r5, ip, asr #27
   2e6c4:	andeq	r8, r5, r8, lsr #27
   2e6c8:	andeq	r8, r5, r4, lsr sp
   2e6cc:	andeq	r8, r5, r8, ror #26
   2e6d0:	andeq	r8, r5, ip, ror #27
   2e6d4:	andeq	r8, r5, r0, asr sp
   2e6d8:	andeq	r8, r5, r0, lsl #27
   2e6dc:	andeq	r8, r5, r4, lsl #20
   2e6e0:	andeq	r0, r0, r5, asr r1
   2e6e4:	andeq	r8, r5, ip, lsr #22
   2e6e8:	andeq	sl, r4, r4, asr sp

0002e6ec <__flatcc_error_find_file_of_token@@Base>:
   2e6ec:	cmp	r0, #0
   2e6f0:	beq	2e718 <__flatcc_error_find_file_of_token@@Base+0x2c>
   2e6f4:	ldr	r3, [r0, #20]
   2e6f8:	cmp	r3, r1
   2e6fc:	bhi	2e70c <__flatcc_error_find_file_of_token@@Base+0x20>
   2e700:	ldr	r3, [r0, #24]
   2e704:	cmp	r1, r3
   2e708:	bcc	2e720 <__flatcc_error_find_file_of_token@@Base+0x34>
   2e70c:	ldr	r0, [r0]
   2e710:	cmp	r0, #0
   2e714:	bne	2e6f4 <__flatcc_error_find_file_of_token@@Base+0x8>
   2e718:	ldr	r0, [pc, #8]	; 2e728 <__flatcc_error_find_file_of_token@@Base+0x3c>
   2e71c:	bx	lr
   2e720:	ldr	r0, [r0, #520]	; 0x208
   2e724:	bx	lr
   2e728:	andeq	fp, r4, ip, lsr #24

0002e72c <__flatcc_error_report@@Base>:
   2e72c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2e730:	sub	sp, sp, #44	; 0x2c
   2e734:	adds	r6, r1, #0
   2e738:	ldr	ip, [sp, #72]	; 0x48
   2e73c:	movne	r6, #1
   2e740:	cmp	ip, #0
   2e744:	movne	lr, #0
   2e748:	andeq	lr, r6, #1
   2e74c:	cmp	lr, #0
   2e750:	mov	r4, r0
   2e754:	ldrne	ip, [r1]
   2e758:	ldr	r0, [pc, #540]	; 2e97c <__flatcc_error_report@@Base+0x250>
   2e75c:	ldr	r5, [sp, #76]	; 0x4c
   2e760:	ldrne	r5, [r1, #4]
   2e764:	cmp	r2, #0
   2e768:	clz	lr, r3
   2e76c:	moveq	r2, r0
   2e770:	lsr	lr, lr, #5
   2e774:	cmp	ip, #0
   2e778:	moveq	r5, ip
   2e77c:	moveq	ip, r0
   2e780:	tst	r6, lr
   2e784:	beq	2e7f4 <__flatcc_error_report@@Base+0xc8>
   2e788:	cmp	r4, #0
   2e78c:	beq	2e7b8 <__flatcc_error_report@@Base+0x8c>
   2e790:	mov	r3, r4
   2e794:	ldr	r0, [r3, #20]
   2e798:	cmp	r1, r0
   2e79c:	bcc	2e7ac <__flatcc_error_report@@Base+0x80>
   2e7a0:	ldr	r0, [r3, #24]
   2e7a4:	cmp	r1, r0
   2e7a8:	bcc	2e940 <__flatcc_error_report@@Base+0x214>
   2e7ac:	ldr	r3, [r3]
   2e7b0:	cmp	r3, #0
   2e7b4:	bne	2e794 <__flatcc_error_report@@Base+0x68>
   2e7b8:	ldr	r0, [pc, #444]	; 2e97c <__flatcc_error_report@@Base+0x250>
   2e7bc:	ldr	r3, [r1, #8]
   2e7c0:	str	r2, [sp, #12]
   2e7c4:	stmib	sp, {r5, ip}
   2e7c8:	ldr	r1, [r1, #12]
   2e7cc:	mov	r2, r0
   2e7d0:	str	r1, [sp]
   2e7d4:	mov	r0, r4
   2e7d8:	ldr	r1, [pc, #416]	; 2e980 <__flatcc_error_report@@Base+0x254>
   2e7dc:	bl	2d708 <__flatcc_fb_print_error@@Base>
   2e7e0:	ldr	r3, [r4, #108]	; 0x6c
   2e7e4:	add	r3, r3, #1
   2e7e8:	str	r3, [r4, #108]	; 0x6c
   2e7ec:	add	sp, sp, #44	; 0x2c
   2e7f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e7f4:	cmp	r3, #0
   2e7f8:	moveq	r6, #0
   2e7fc:	andne	r6, r6, #1
   2e800:	cmp	r6, #0
   2e804:	beq	2e8b4 <__flatcc_error_report@@Base+0x188>
   2e808:	cmp	r4, #0
   2e80c:	beq	2e970 <__flatcc_error_report@@Base+0x244>
   2e810:	mov	r0, r4
   2e814:	ldr	lr, [r0, #20]
   2e818:	cmp	r1, lr
   2e81c:	bcc	2e82c <__flatcc_error_report@@Base+0x100>
   2e820:	ldr	lr, [r0, #24]
   2e824:	cmp	r1, lr
   2e828:	bcc	2e950 <__flatcc_error_report@@Base+0x224>
   2e82c:	ldr	r0, [r0]
   2e830:	cmp	r0, #0
   2e834:	bne	2e814 <__flatcc_error_report@@Base+0xe8>
   2e838:	ldr	r6, [pc, #316]	; 2e97c <__flatcc_error_report@@Base+0x250>
   2e83c:	mov	r0, r4
   2e840:	ldr	lr, [r0, #20]
   2e844:	cmp	r3, lr
   2e848:	bcc	2e858 <__flatcc_error_report@@Base+0x12c>
   2e84c:	ldr	lr, [r0, #24]
   2e850:	cmp	r3, lr
   2e854:	bcc	2e948 <__flatcc_error_report@@Base+0x21c>
   2e858:	ldr	r0, [r0]
   2e85c:	cmp	r0, #0
   2e860:	bne	2e840 <__flatcc_error_report@@Base+0x114>
   2e864:	ldr	r9, [pc, #272]	; 2e97c <__flatcc_error_report@@Base+0x250>
   2e868:	ldr	r8, [r3]
   2e86c:	ldr	r7, [r3, #4]
   2e870:	ldr	lr, [r3, #12]
   2e874:	ldr	r0, [r3, #8]
   2e878:	ldr	r3, [r1, #8]
   2e87c:	str	r2, [sp, #12]
   2e880:	str	r0, [sp, #20]
   2e884:	str	r8, [sp, #32]
   2e888:	str	r9, [sp, #16]
   2e88c:	stmib	sp, {r5, ip}
   2e890:	str	r7, [sp, #28]
   2e894:	str	lr, [sp, #24]
   2e898:	ldr	r1, [r1, #12]
   2e89c:	mov	r2, r6
   2e8a0:	str	r1, [sp]
   2e8a4:	mov	r0, r4
   2e8a8:	ldr	r1, [pc, #212]	; 2e984 <__flatcc_error_report@@Base+0x258>
   2e8ac:	bl	2d708 <__flatcc_fb_print_error@@Base>
   2e8b0:	b	2e7e0 <__flatcc_error_report@@Base+0xb4>
   2e8b4:	cmp	r1, #0
   2e8b8:	movne	r1, #0
   2e8bc:	andeq	r1, lr, #1
   2e8c0:	cmp	r1, #0
   2e8c4:	bne	2e930 <__flatcc_error_report@@Base+0x204>
   2e8c8:	cmp	r3, #0
   2e8cc:	beq	2e960 <__flatcc_error_report@@Base+0x234>
   2e8d0:	cmp	r4, #0
   2e8d4:	beq	2e900 <__flatcc_error_report@@Base+0x1d4>
   2e8d8:	mov	r1, r4
   2e8dc:	ldr	r0, [r1, #20]
   2e8e0:	cmp	r3, r0
   2e8e4:	bcc	2e8f4 <__flatcc_error_report@@Base+0x1c8>
   2e8e8:	ldr	r0, [r1, #24]
   2e8ec:	cmp	r3, r0
   2e8f0:	bcc	2e958 <__flatcc_error_report@@Base+0x22c>
   2e8f4:	ldr	r1, [r1]
   2e8f8:	cmp	r1, #0
   2e8fc:	bne	2e8dc <__flatcc_error_report@@Base+0x1b0>
   2e900:	ldr	r5, [pc, #116]	; 2e97c <__flatcc_error_report@@Base+0x250>
   2e904:	ldr	lr, [r3]
   2e908:	ldr	ip, [r3, #4]
   2e90c:	ldr	r0, [r3, #12]
   2e910:	ldr	r1, [r3, #8]
   2e914:	mov	r3, r5
   2e918:	stmib	sp, {r0, ip, lr}
   2e91c:	mov	r0, r4
   2e920:	str	r1, [sp]
   2e924:	ldr	r1, [pc, #92]	; 2e988 <__flatcc_error_report@@Base+0x25c>
   2e928:	bl	2d708 <__flatcc_fb_print_error@@Base>
   2e92c:	b	2e7e0 <__flatcc_error_report@@Base+0xb4>
   2e930:	ldr	r1, [pc, #84]	; 2e98c <__flatcc_error_report@@Base+0x260>
   2e934:	mov	r0, r4
   2e938:	bl	2d708 <__flatcc_fb_print_error@@Base>
   2e93c:	b	2e7e0 <__flatcc_error_report@@Base+0xb4>
   2e940:	ldr	r0, [r3, #520]	; 0x208
   2e944:	b	2e7bc <__flatcc_error_report@@Base+0x90>
   2e948:	ldr	r9, [r0, #520]	; 0x208
   2e94c:	b	2e868 <__flatcc_error_report@@Base+0x13c>
   2e950:	ldr	r6, [r0, #520]	; 0x208
   2e954:	b	2e83c <__flatcc_error_report@@Base+0x110>
   2e958:	ldr	r5, [r1, #520]	; 0x208
   2e95c:	b	2e904 <__flatcc_error_report@@Base+0x1d8>
   2e960:	ldr	r1, [pc, #40]	; 2e990 <__flatcc_error_report@@Base+0x264>
   2e964:	mov	r0, r4
   2e968:	bl	2d708 <__flatcc_fb_print_error@@Base>
   2e96c:	b	2e7e0 <__flatcc_error_report@@Base+0xb4>
   2e970:	ldr	r6, [pc, #4]	; 2e97c <__flatcc_error_report@@Base+0x250>
   2e974:	mov	r9, r6
   2e978:	b	2e868 <__flatcc_error_report@@Base+0x13c>
   2e97c:	andeq	fp, r4, ip, lsr #24
   2e980:	andeq	r8, r5, r0, lsr ip
   2e984:	andeq	r8, r5, r0, lsl lr
   2e988:	andeq	r8, r5, r4, asr #28
   2e98c:	andeq	r8, r5, r0, asr ip
   2e990:	andeq	r8, r5, r4, ror #28
   2e994:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e998:	mov	r7, #1
   2e99c:	ldr	r6, [r0, #40]	; 0x28
   2e9a0:	sub	sp, sp, #12
   2e9a4:	mov	r4, r0
   2e9a8:	ldr	r3, [r6, #16]
   2e9ac:	mov	r8, r1
   2e9b0:	cmp	r3, #91	; 0x5b
   2e9b4:	strh	r7, [r1, #8]
   2e9b8:	bne	2ee00 <__flatcc_error_report@@Base+0x6d4>
   2e9bc:	ldr	fp, [r0, #24]
   2e9c0:	mov	r3, r6
   2e9c4:	mov	r5, #0
   2e9c8:	mov	r9, #65536	; 0x10000
   2e9cc:	add	sl, r3, #20
   2e9d0:	cmp	fp, sl
   2e9d4:	str	sl, [r4, #40]	; 0x28
   2e9d8:	beq	2f008 <__flatcc_error_report@@Base+0x8dc>
   2e9dc:	ldr	r2, [r3, #36]	; 0x24
   2e9e0:	cmn	r2, #964	; 0x3c4
   2e9e4:	bne	2ea70 <__flatcc_error_report@@Base+0x344>
   2e9e8:	ldr	r0, [r4, #52]	; 0x34
   2e9ec:	ldr	r1, [r4, #44]	; 0x2c
   2e9f0:	b	2ea28 <__flatcc_error_report@@Base+0x2fc>
   2e9f4:	ldr	ip, [r4, #36]	; 0x24
   2e9f8:	add	r3, sl, #20
   2e9fc:	cmp	r3, fp
   2ea00:	str	r0, [r4, #52]	; 0x34
   2ea04:	str	sl, [r2, #4]
   2ea08:	str	ip, [r2]
   2ea0c:	str	r2, [r4, #36]	; 0x24
   2ea10:	str	r3, [r4, #40]	; 0x28
   2ea14:	beq	2f00c <__flatcc_error_report@@Base+0x8e0>
   2ea18:	ldr	r2, [r3, #16]
   2ea1c:	cmn	r2, #964	; 0x3c4
   2ea20:	bne	2ea74 <__flatcc_error_report@@Base+0x348>
   2ea24:	mov	sl, r3
   2ea28:	add	r3, r0, #16
   2ea2c:	cmp	r3, r1
   2ea30:	movls	r2, r0
   2ea34:	movls	r0, r3
   2ea38:	bls	2e9f4 <__flatcc_error_report@@Base+0x2c8>
   2ea3c:	mov	r1, r7
   2ea40:	mov	r0, r9
   2ea44:	bl	13ea0 <calloc@plt>
   2ea48:	cmp	r0, #0
   2ea4c:	beq	2f014 <__flatcc_error_report@@Base+0x8e8>
   2ea50:	ldr	r3, [r4, #48]	; 0x30
   2ea54:	add	r1, r0, #65536	; 0x10000
   2ea58:	str	r3, [r0]
   2ea5c:	str	r0, [r4, #48]	; 0x30
   2ea60:	add	r2, r0, #16
   2ea64:	str	r1, [r4, #44]	; 0x2c
   2ea68:	add	r0, r0, #32
   2ea6c:	b	2e9f4 <__flatcc_error_report@@Base+0x2c8>
   2ea70:	mov	r3, sl
   2ea74:	cmp	r2, #91	; 0x5b
   2ea78:	add	r5, r5, #1
   2ea7c:	beq	2e9cc <__flatcc_error_report@@Base+0x2a0>
   2ea80:	cmp	r5, #1
   2ea84:	beq	2eaa8 <__flatcc_error_report@@Base+0x37c>
   2ea88:	mov	r3, #0
   2ea8c:	str	r3, [sp]
   2ea90:	ldr	r2, [pc, #1612]	; 2f0e4 <__flatcc_error_report@@Base+0x9b8>
   2ea94:	mov	r1, r6
   2ea98:	mov	r0, r4
   2ea9c:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2eaa0:	ldr	r3, [r4, #40]	; 0x28
   2eaa4:	ldr	r2, [r3, #16]
   2eaa8:	cmn	r2, #984	; 0x3d8
   2eaac:	ble	2ed14 <__flatcc_error_report@@Base+0x5e8>
   2eab0:	ldr	r1, [pc, #1584]	; 2f0e8 <__flatcc_error_report@@Base+0x9bc>
   2eab4:	cmp	r2, r1
   2eab8:	beq	2eba8 <__flatcc_error_report@@Base+0x47c>
   2eabc:	ble	2f028 <__flatcc_error_report@@Base+0x8fc>
   2eac0:	cmp	r2, #9
   2eac4:	beq	2ecec <__flatcc_error_report@@Base+0x5c0>
   2eac8:	cmp	r2, #93	; 0x5d
   2eacc:	bne	2ec70 <__flatcc_error_report@@Base+0x544>
   2ead0:	mov	r3, #0
   2ead4:	str	r3, [sp]
   2ead8:	mov	r1, r3
   2eadc:	ldr	r2, [pc, #1544]	; 2f0ec <__flatcc_error_report@@Base+0x9c0>
   2eae0:	mov	r0, r4
   2eae4:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2eae8:	ldr	r3, [r4, #40]	; 0x28
   2eaec:	ldr	r2, [r3, #16]
   2eaf0:	mov	r8, #1
   2eaf4:	mov	r7, #65536	; 0x10000
   2eaf8:	cmp	r2, #93	; 0x5d
   2eafc:	bne	2ecdc <__flatcc_error_report@@Base+0x5b0>
   2eb00:	ldr	sl, [r4, #24]
   2eb04:	add	r9, r3, #20
   2eb08:	cmp	sl, r9
   2eb0c:	str	r9, [r4, #40]	; 0x28
   2eb10:	beq	2efec <__flatcc_error_report@@Base+0x8c0>
   2eb14:	ldr	r2, [r3, #36]	; 0x24
   2eb18:	cmn	r2, #964	; 0x3c4
   2eb1c:	bne	2ec9c <__flatcc_error_report@@Base+0x570>
   2eb20:	ldr	r0, [r4, #52]	; 0x34
   2eb24:	ldr	r1, [r4, #44]	; 0x2c
   2eb28:	b	2eb60 <__flatcc_error_report@@Base+0x434>
   2eb2c:	ldr	ip, [r4, #36]	; 0x24
   2eb30:	add	r3, r9, #20
   2eb34:	cmp	r3, sl
   2eb38:	str	r0, [r4, #52]	; 0x34
   2eb3c:	str	r9, [r2, #4]
   2eb40:	str	ip, [r2]
   2eb44:	str	r2, [r4, #36]	; 0x24
   2eb48:	str	r3, [r4, #40]	; 0x28
   2eb4c:	beq	2eff0 <__flatcc_error_report@@Base+0x8c4>
   2eb50:	ldr	r2, [r3, #16]
   2eb54:	cmn	r2, #964	; 0x3c4
   2eb58:	bne	2eca0 <__flatcc_error_report@@Base+0x574>
   2eb5c:	mov	r9, r3
   2eb60:	add	r3, r0, #16
   2eb64:	cmp	r3, r1
   2eb68:	movls	r2, r0
   2eb6c:	movls	r0, r3
   2eb70:	bls	2eb2c <__flatcc_error_report@@Base+0x400>
   2eb74:	mov	r1, r8
   2eb78:	mov	r0, r7
   2eb7c:	bl	13ea0 <calloc@plt>
   2eb80:	cmp	r0, #0
   2eb84:	beq	2f014 <__flatcc_error_report@@Base+0x8e8>
   2eb88:	ldr	r3, [r4, #48]	; 0x30
   2eb8c:	add	r1, r0, #65536	; 0x10000
   2eb90:	str	r3, [r0]
   2eb94:	str	r0, [r4, #48]	; 0x30
   2eb98:	add	r2, r0, #16
   2eb9c:	str	r1, [r4, #44]	; 0x2c
   2eba0:	add	r0, r0, #32
   2eba4:	b	2eb2c <__flatcc_error_report@@Base+0x400>
   2eba8:	cmp	r5, #0
   2ebac:	str	r3, [r8]
   2ebb0:	movne	r2, #9
   2ebb4:	beq	2ee54 <__flatcc_error_report@@Base+0x728>
   2ebb8:	ldr	r3, [r4, #40]	; 0x28
   2ebbc:	ldr	sl, [r4, #24]
   2ebc0:	add	r7, r3, #20
   2ebc4:	cmp	sl, r7
   2ebc8:	strh	r2, [r8, #8]
   2ebcc:	str	r7, [r4, #40]	; 0x28
   2ebd0:	beq	2f0b8 <__flatcc_error_report@@Base+0x98c>
   2ebd4:	ldr	r2, [r3, #36]	; 0x24
   2ebd8:	cmn	r2, #964	; 0x3c4
   2ebdc:	bne	2f0dc <__flatcc_error_report@@Base+0x9b0>
   2ebe0:	ldr	r1, [r4, #52]	; 0x34
   2ebe4:	ldr	r0, [r4, #44]	; 0x2c
   2ebe8:	mov	r9, #1
   2ebec:	mov	r8, #65536	; 0x10000
   2ebf0:	b	2ec28 <__flatcc_error_report@@Base+0x4fc>
   2ebf4:	ldr	ip, [r4, #36]	; 0x24
   2ebf8:	add	r3, r7, #20
   2ebfc:	cmp	sl, r3
   2ec00:	str	r1, [r4, #52]	; 0x34
   2ec04:	str	r7, [r2, #4]
   2ec08:	str	ip, [r2]
   2ec0c:	str	r2, [r4, #36]	; 0x24
   2ec10:	str	r3, [r4, #40]	; 0x28
   2ec14:	beq	2f0bc <__flatcc_error_report@@Base+0x990>
   2ec18:	ldr	r2, [r3, #16]
   2ec1c:	cmn	r2, #964	; 0x3c4
   2ec20:	bne	2eaf0 <__flatcc_error_report@@Base+0x3c4>
   2ec24:	mov	r7, r3
   2ec28:	add	r3, r1, #16
   2ec2c:	cmp	r3, r0
   2ec30:	movls	r2, r1
   2ec34:	movls	r1, r3
   2ec38:	bls	2ebf4 <__flatcc_error_report@@Base+0x4c8>
   2ec3c:	mov	r1, r9
   2ec40:	mov	r0, r8
   2ec44:	bl	13ea0 <calloc@plt>
   2ec48:	subs	r1, r0, #0
   2ec4c:	beq	2f014 <__flatcc_error_report@@Base+0x8e8>
   2ec50:	ldr	r3, [r4, #48]	; 0x30
   2ec54:	add	r0, r1, #65536	; 0x10000
   2ec58:	str	r3, [r1]
   2ec5c:	str	r1, [r4, #48]	; 0x30
   2ec60:	add	r2, r1, #16
   2ec64:	str	r0, [r4, #44]	; 0x2c
   2ec68:	add	r1, r1, #32
   2ec6c:	b	2ebf4 <__flatcc_error_report@@Base+0x4c8>
   2ec70:	cmn	r2, #972	; 0x3cc
   2ec74:	beq	2ed40 <__flatcc_error_report@@Base+0x614>
   2ec78:	mov	r3, #0
   2ec7c:	str	r3, [sp]
   2ec80:	mov	r1, r3
   2ec84:	ldr	r2, [pc, #1124]	; 2f0f0 <__flatcc_error_report@@Base+0x9c4>
   2ec88:	mov	r0, r4
   2ec8c:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2ec90:	ldr	r3, [r4, #40]	; 0x28
   2ec94:	ldr	r2, [r3, #16]
   2ec98:	b	2eaf0 <__flatcc_error_report@@Base+0x3c4>
   2ec9c:	mov	r3, r9
   2eca0:	subs	r5, r5, #1
   2eca4:	bcs	2eaf8 <__flatcc_error_report@@Base+0x3cc>
   2eca8:	mov	r1, #0
   2ecac:	mov	r3, r6
   2ecb0:	str	r1, [sp, #4]
   2ecb4:	str	r1, [sp]
   2ecb8:	ldr	r2, [pc, #1076]	; 2f0f4 <__flatcc_error_report@@Base+0x9c8>
   2ecbc:	mov	r0, r4
   2ecc0:	bl	2e72c <__flatcc_error_report@@Base>
   2ecc4:	ldr	r9, [r4, #40]	; 0x28
   2ecc8:	ldr	r3, [r9, #16]
   2eccc:	cmp	r3, #93	; 0x5d
   2ecd0:	beq	2ee5c <__flatcc_error_report@@Base+0x730>
   2ecd4:	add	sp, sp, #12
   2ecd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ecdc:	cmp	r5, #0
   2ece0:	bne	2eca8 <__flatcc_error_report@@Base+0x57c>
   2ece4:	add	sp, sp, #12
   2ece8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ecec:	mov	r1, r8
   2ecf0:	mov	r0, r4
   2ecf4:	bl	2d860 <__flatcc_fb_print_error@@Base+0x158>
   2ecf8:	cmp	r5, #0
   2ecfc:	movne	r2, #11
   2ed00:	beq	2ee44 <__flatcc_error_report@@Base+0x718>
   2ed04:	ldr	r3, [r4, #40]	; 0x28
   2ed08:	strh	r2, [r8, #8]
   2ed0c:	ldr	r2, [r3, #16]
   2ed10:	b	2eaf0 <__flatcc_error_report@@Base+0x3c4>
   2ed14:	mvn	r1, #984	; 0x3d8
   2ed18:	cmp	r2, r1
   2ed1c:	bge	2ed40 <__flatcc_error_report@@Base+0x614>
   2ed20:	cmn	r2, #988	; 0x3dc
   2ed24:	bge	2f018 <__flatcc_error_report@@Base+0x8ec>
   2ed28:	cmn	r2, #996	; 0x3e4
   2ed2c:	bge	2ed40 <__flatcc_error_report@@Base+0x614>
   2ed30:	add	r2, r2, #996	; 0x3e4
   2ed34:	add	r2, r2, #3
   2ed38:	cmp	r2, #1
   2ed3c:	bhi	2ec78 <__flatcc_error_report@@Base+0x54c>
   2ed40:	mov	r2, #7
   2ed44:	str	r3, [r8]
   2ed48:	ldr	r3, [r4, #40]	; 0x28
   2ed4c:	ldr	sl, [r4, #24]
   2ed50:	add	r7, r3, #20
   2ed54:	cmp	r7, sl
   2ed58:	strh	r2, [r8, #8]
   2ed5c:	str	r7, [r4, #40]	; 0x28
   2ed60:	beq	2f0b8 <__flatcc_error_report@@Base+0x98c>
   2ed64:	ldr	r2, [r3, #36]	; 0x24
   2ed68:	cmn	r2, #964	; 0x3c4
   2ed6c:	bne	2f0dc <__flatcc_error_report@@Base+0x9b0>
   2ed70:	ldr	r1, [r4, #52]	; 0x34
   2ed74:	ldr	r0, [r4, #44]	; 0x2c
   2ed78:	mov	r9, #1
   2ed7c:	mov	r8, #65536	; 0x10000
   2ed80:	b	2edb8 <__flatcc_error_report@@Base+0x68c>
   2ed84:	ldr	ip, [r4, #36]	; 0x24
   2ed88:	add	r3, r7, #20
   2ed8c:	cmp	r3, sl
   2ed90:	str	r1, [r4, #52]	; 0x34
   2ed94:	str	r7, [r2, #4]
   2ed98:	str	ip, [r2]
   2ed9c:	str	r2, [r4, #36]	; 0x24
   2eda0:	str	r3, [r4, #40]	; 0x28
   2eda4:	beq	2f0bc <__flatcc_error_report@@Base+0x990>
   2eda8:	ldr	r2, [r3, #16]
   2edac:	cmn	r2, #964	; 0x3c4
   2edb0:	bne	2eaf0 <__flatcc_error_report@@Base+0x3c4>
   2edb4:	mov	r7, r3
   2edb8:	add	r3, r1, #16
   2edbc:	cmp	r3, r0
   2edc0:	movls	r2, r1
   2edc4:	movls	r1, r3
   2edc8:	bls	2ed84 <__flatcc_error_report@@Base+0x658>
   2edcc:	mov	r1, r9
   2edd0:	mov	r0, r8
   2edd4:	bl	13ea0 <calloc@plt>
   2edd8:	subs	r1, r0, #0
   2eddc:	beq	2f014 <__flatcc_error_report@@Base+0x8e8>
   2ede0:	ldr	r3, [r4, #48]	; 0x30
   2ede4:	add	r0, r1, #65536	; 0x10000
   2ede8:	str	r3, [r1]
   2edec:	str	r1, [r4, #48]	; 0x30
   2edf0:	add	r2, r1, #16
   2edf4:	str	r0, [r4, #44]	; 0x2c
   2edf8:	add	r1, r1, #32
   2edfc:	b	2ed84 <__flatcc_error_report@@Base+0x658>
   2ee00:	cmn	r3, #984	; 0x3d8
   2ee04:	ble	2f088 <__flatcc_error_report@@Base+0x95c>
   2ee08:	ldr	r2, [pc, #728]	; 2f0e8 <__flatcc_error_report@@Base+0x9bc>
   2ee0c:	cmp	r3, r2
   2ee10:	beq	2ee4c <__flatcc_error_report@@Base+0x720>
   2ee14:	ble	2f058 <__flatcc_error_report@@Base+0x92c>
   2ee18:	cmp	r3, #9
   2ee1c:	beq	2ee3c <__flatcc_error_report@@Base+0x710>
   2ee20:	cmp	r3, #93	; 0x5d
   2ee24:	moveq	r5, #0
   2ee28:	beq	2ead0 <__flatcc_error_report@@Base+0x3a4>
   2ee2c:	cmn	r3, #972	; 0x3cc
   2ee30:	beq	2f078 <__flatcc_error_report@@Base+0x94c>
   2ee34:	mov	r5, #0
   2ee38:	b	2ec78 <__flatcc_error_report@@Base+0x54c>
   2ee3c:	bl	2d860 <__flatcc_fb_print_error@@Base+0x158>
   2ee40:	mov	r5, #0
   2ee44:	mov	r2, #12
   2ee48:	b	2ed04 <__flatcc_error_report@@Base+0x5d8>
   2ee4c:	mov	r5, #0
   2ee50:	str	r6, [r1]
   2ee54:	mov	r2, #10
   2ee58:	b	2ebb8 <__flatcc_error_report@@Base+0x48c>
   2ee5c:	ldr	sl, [r4, #24]
   2ee60:	add	r5, r9, #20
   2ee64:	cmp	sl, r5
   2ee68:	str	r5, [r4, #40]	; 0x28
   2ee6c:	beq	2f0d4 <__flatcc_error_report@@Base+0x9a8>
   2ee70:	ldr	r3, [r9, #36]	; 0x24
   2ee74:	cmn	r3, #964	; 0x3c4
   2ee78:	bne	2ef08 <__flatcc_error_report@@Base+0x7dc>
   2ee7c:	ldr	r3, [r4, #52]	; 0x34
   2ee80:	ldr	ip, [r4, #44]	; 0x2c
   2ee84:	mov	r8, #1
   2ee88:	mov	r7, #65536	; 0x10000
   2ee8c:	b	2eec0 <__flatcc_error_report@@Base+0x794>
   2ee90:	ldr	r0, [r4, #36]	; 0x24
   2ee94:	add	r2, r5, #20
   2ee98:	cmp	r2, sl
   2ee9c:	str	r3, [r4, #52]	; 0x34
   2eea0:	stm	r1, {r0, r5}
   2eea4:	str	r1, [r4, #36]	; 0x24
   2eea8:	str	r2, [r4, #40]	; 0x28
   2eeac:	beq	2f050 <__flatcc_error_report@@Base+0x924>
   2eeb0:	ldr	r1, [r2, #16]
   2eeb4:	cmn	r1, #964	; 0x3c4
   2eeb8:	bne	2ef08 <__flatcc_error_report@@Base+0x7dc>
   2eebc:	mov	r5, r2
   2eec0:	add	r2, r3, #16
   2eec4:	cmp	r2, ip
   2eec8:	movls	r1, r3
   2eecc:	movls	r3, r2
   2eed0:	bls	2ee90 <__flatcc_error_report@@Base+0x764>
   2eed4:	mov	r1, r8
   2eed8:	mov	r0, r7
   2eedc:	bl	13ea0 <calloc@plt>
   2eee0:	subs	r3, r0, #0
   2eee4:	beq	2f014 <__flatcc_error_report@@Base+0x8e8>
   2eee8:	ldr	r2, [r4, #48]	; 0x30
   2eeec:	add	ip, r3, #65536	; 0x10000
   2eef0:	str	r2, [r3]
   2eef4:	str	r3, [r4, #48]	; 0x30
   2eef8:	add	r1, r3, #16
   2eefc:	str	ip, [r4, #44]	; 0x2c
   2ef00:	add	r3, r3, #32
   2ef04:	b	2ee90 <__flatcc_error_report@@Base+0x764>
   2ef08:	mov	r2, #0
   2ef0c:	mov	r3, r6
   2ef10:	str	r2, [sp, #4]
   2ef14:	str	r2, [sp]
   2ef18:	mov	r1, r9
   2ef1c:	ldr	r2, [pc, #468]	; 2f0f8 <__flatcc_error_report@@Base+0x9cc>
   2ef20:	mov	r0, r4
   2ef24:	bl	2e72c <__flatcc_error_report@@Base>
   2ef28:	ldr	r3, [r4, #40]	; 0x28
   2ef2c:	mov	r7, #1
   2ef30:	mov	r6, #65536	; 0x10000
   2ef34:	ldr	r2, [r3, #16]
   2ef38:	cmp	r2, #93	; 0x5d
   2ef3c:	bne	2ecd4 <__flatcc_error_report@@Base+0x5a8>
   2ef40:	ldr	r8, [r4, #24]
   2ef44:	add	r5, r3, #20
   2ef48:	cmp	r8, r5
   2ef4c:	str	r5, [r4, #40]	; 0x28
   2ef50:	beq	2f04c <__flatcc_error_report@@Base+0x920>
   2ef54:	ldr	r2, [r3, #36]	; 0x24
   2ef58:	cmn	r2, #964	; 0x3c4
   2ef5c:	bne	2efe4 <__flatcc_error_report@@Base+0x8b8>
   2ef60:	ldr	r0, [r4, #52]	; 0x34
   2ef64:	ldr	ip, [r4, #44]	; 0x2c
   2ef68:	b	2ef9c <__flatcc_error_report@@Base+0x870>
   2ef6c:	ldr	r1, [r4, #36]	; 0x24
   2ef70:	add	r3, r5, #20
   2ef74:	cmp	r8, r3
   2ef78:	str	r0, [r4, #52]	; 0x34
   2ef7c:	stm	r2, {r1, r5}
   2ef80:	str	r2, [r4, #36]	; 0x24
   2ef84:	str	r3, [r4, #40]	; 0x28
   2ef88:	beq	2f050 <__flatcc_error_report@@Base+0x924>
   2ef8c:	ldr	r2, [r3, #16]
   2ef90:	cmn	r2, #964	; 0x3c4
   2ef94:	bne	2ef38 <__flatcc_error_report@@Base+0x80c>
   2ef98:	mov	r5, r3
   2ef9c:	add	r3, r0, #16
   2efa0:	cmp	r3, ip
   2efa4:	movls	r2, r0
   2efa8:	movls	r0, r3
   2efac:	bls	2ef6c <__flatcc_error_report@@Base+0x840>
   2efb0:	mov	r1, r7
   2efb4:	mov	r0, r6
   2efb8:	bl	13ea0 <calloc@plt>
   2efbc:	cmp	r0, #0
   2efc0:	beq	2f014 <__flatcc_error_report@@Base+0x8e8>
   2efc4:	ldr	r3, [r4, #48]	; 0x30
   2efc8:	add	ip, r0, #65536	; 0x10000
   2efcc:	str	r3, [r0]
   2efd0:	str	r0, [r4, #48]	; 0x30
   2efd4:	add	r2, r0, #16
   2efd8:	str	ip, [r4, #44]	; 0x2c
   2efdc:	add	r0, r0, #32
   2efe0:	b	2ef6c <__flatcc_error_report@@Base+0x840>
   2efe4:	mov	r3, r5
   2efe8:	b	2ef38 <__flatcc_error_report@@Base+0x80c>
   2efec:	mov	r9, r3
   2eff0:	str	r9, [r4, #40]	; 0x28
   2eff4:	ldr	r3, [pc, #256]	; 2f0fc <__flatcc_error_report@@Base+0x9d0>
   2eff8:	ldr	r2, [pc, #256]	; 2f100 <__flatcc_error_report@@Base+0x9d4>
   2effc:	ldr	r1, [pc, #256]	; 2f104 <__flatcc_error_report@@Base+0x9d8>
   2f000:	ldr	r0, [pc, #256]	; 2f108 <__flatcc_error_report@@Base+0x9dc>
   2f004:	bl	14038 <__assert_fail@plt>
   2f008:	mov	sl, r3
   2f00c:	str	sl, [r4, #40]	; 0x28
   2f010:	b	2eff4 <__flatcc_error_report@@Base+0x8c8>
   2f014:	bl	14098 <__assert_fail@plt+0x60>
   2f018:	ldr	r1, [pc, #236]	; 2f10c <__flatcc_error_report@@Base+0x9e0>
   2f01c:	cmp	r2, r1
   2f020:	bne	2ec78 <__flatcc_error_report@@Base+0x54c>
   2f024:	b	2ed40 <__flatcc_error_report@@Base+0x614>
   2f028:	sub	r1, r1, #8
   2f02c:	cmp	r2, r1
   2f030:	blt	2ec78 <__flatcc_error_report@@Base+0x54c>
   2f034:	cmn	r2, #976	; 0x3d0
   2f038:	blt	2ed40 <__flatcc_error_report@@Base+0x614>
   2f03c:	add	r1, r1, #7
   2f040:	cmp	r2, r1
   2f044:	bne	2ec78 <__flatcc_error_report@@Base+0x54c>
   2f048:	b	2ed40 <__flatcc_error_report@@Base+0x614>
   2f04c:	mov	r5, r3
   2f050:	str	r5, [r4, #40]	; 0x28
   2f054:	b	2eff4 <__flatcc_error_report@@Base+0x8c8>
   2f058:	sub	r2, r2, #8
   2f05c:	cmp	r3, r2
   2f060:	blt	2ee34 <__flatcc_error_report@@Base+0x708>
   2f064:	cmn	r3, #976	; 0x3d0
   2f068:	blt	2f078 <__flatcc_error_report@@Base+0x94c>
   2f06c:	add	r2, r2, #7
   2f070:	cmp	r3, r2
   2f074:	bne	2ee34 <__flatcc_error_report@@Base+0x708>
   2f078:	str	r6, [r8]
   2f07c:	mov	r5, #0
   2f080:	mov	r2, #8
   2f084:	b	2ed48 <__flatcc_error_report@@Base+0x61c>
   2f088:	mvn	r2, #984	; 0x3d8
   2f08c:	cmp	r3, r2
   2f090:	bge	2f078 <__flatcc_error_report@@Base+0x94c>
   2f094:	cmn	r3, #988	; 0x3dc
   2f098:	bge	2f0c4 <__flatcc_error_report@@Base+0x998>
   2f09c:	cmn	r3, #996	; 0x3e4
   2f0a0:	bge	2f078 <__flatcc_error_report@@Base+0x94c>
   2f0a4:	add	r3, r3, #996	; 0x3e4
   2f0a8:	add	r3, r3, #3
   2f0ac:	cmp	r3, #1
   2f0b0:	bhi	2ee34 <__flatcc_error_report@@Base+0x708>
   2f0b4:	b	2f078 <__flatcc_error_report@@Base+0x94c>
   2f0b8:	mov	r7, r3
   2f0bc:	str	r7, [r4, #40]	; 0x28
   2f0c0:	b	2eff4 <__flatcc_error_report@@Base+0x8c8>
   2f0c4:	ldr	r2, [pc, #64]	; 2f10c <__flatcc_error_report@@Base+0x9e0>
   2f0c8:	cmp	r3, r2
   2f0cc:	bne	2ee34 <__flatcc_error_report@@Base+0x708>
   2f0d0:	b	2f078 <__flatcc_error_report@@Base+0x94c>
   2f0d4:	mov	r5, r9
   2f0d8:	b	2f050 <__flatcc_error_report@@Base+0x924>
   2f0dc:	mov	r3, r7
   2f0e0:	b	2eaf0 <__flatcc_error_report@@Base+0x3c4>
   2f0e4:	andeq	r8, r5, r8, lsl #29
   2f0e8:			; <UNDEFINED> instruction: 0xfffffc32
   2f0ec:			; <UNDEFINED> instruction: 0x00058eb0
   2f0f0:	andeq	r8, r5, ip, asr #29
   2f0f4:	andeq	r8, r5, r4, ror #29
   2f0f8:	andeq	r8, r5, r8, lsl #30
   2f0fc:	andeq	r8, r5, r4, lsl #20
   2f100:	andeq	r0, r0, r5, asr r1
   2f104:	andeq	r8, r5, ip, lsr #22
   2f108:	andeq	sl, r4, r4, asr sp
   2f10c:			; <UNDEFINED> instruction: 0xfffffc25
   2f110:	ldr	r3, [r0, #40]	; 0x28
   2f114:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f118:	sub	sp, sp, #20
   2f11c:	str	r3, [sp, #12]
   2f120:	ldr	r3, [r3, #16]
   2f124:	cmp	r3, #40	; 0x28
   2f128:	beq	2f13c <__flatcc_error_report@@Base+0xa10>
   2f12c:	mov	r5, #0
   2f130:	mov	r0, r5
   2f134:	add	sp, sp, #20
   2f138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f13c:	ldr	r3, [sp, #12]
   2f140:	ldr	r7, [r0, #24]
   2f144:	add	r9, r3, #20
   2f148:	cmp	r9, r7
   2f14c:	mov	r4, r0
   2f150:	str	r9, [r0, #40]	; 0x28
   2f154:	beq	2f6ac <__flatcc_error_report@@Base+0xf80>
   2f158:	ldr	r3, [r3, #36]	; 0x24
   2f15c:	cmn	r3, #964	; 0x3c4
   2f160:	bne	2f1f0 <__flatcc_error_report@@Base+0xac4>
   2f164:	ldr	r2, [r0, #52]	; 0x34
   2f168:	mov	r8, #1
   2f16c:	ldr	r0, [r0, #44]	; 0x2c
   2f170:	mov	r5, #65536	; 0x10000
   2f174:	b	2f1a8 <__flatcc_error_report@@Base+0xa7c>
   2f178:	ldr	r1, [r4, #36]	; 0x24
   2f17c:	add	r6, r9, #20
   2f180:	cmp	r6, r7
   2f184:	str	r2, [r4, #52]	; 0x34
   2f188:	stm	r3, {r1, r9}
   2f18c:	str	r3, [r4, #36]	; 0x24
   2f190:	str	r6, [r4, #40]	; 0x28
   2f194:	beq	2f6b0 <__flatcc_error_report@@Base+0xf84>
   2f198:	ldr	r3, [r6, #16]
   2f19c:	cmn	r3, #964	; 0x3c4
   2f1a0:	bne	2f1f4 <__flatcc_error_report@@Base+0xac8>
   2f1a4:	mov	r9, r6
   2f1a8:	add	r1, r2, #16
   2f1ac:	cmp	r1, r0
   2f1b0:	movls	r3, r2
   2f1b4:	movls	r2, r1
   2f1b8:	bls	2f178 <__flatcc_error_report@@Base+0xa4c>
   2f1bc:	mov	r1, r8
   2f1c0:	mov	r0, r5
   2f1c4:	bl	13ea0 <calloc@plt>
   2f1c8:	subs	r2, r0, #0
   2f1cc:	beq	2f69c <__flatcc_error_report@@Base+0xf70>
   2f1d0:	ldr	r3, [r4, #48]	; 0x30
   2f1d4:	add	r0, r2, #65536	; 0x10000
   2f1d8:	str	r3, [r2]
   2f1dc:	str	r2, [r4, #48]	; 0x30
   2f1e0:	add	r3, r2, #16
   2f1e4:	str	r0, [r4, #44]	; 0x2c
   2f1e8:	add	r2, r2, #32
   2f1ec:	b	2f178 <__flatcc_error_report@@Base+0xa4c>
   2f1f0:	mov	r6, r9
   2f1f4:	cmp	r3, #9
   2f1f8:	movne	r5, #0
   2f1fc:	beq	2f310 <__flatcc_error_report@@Base+0xbe4>
   2f200:	mov	sl, #0
   2f204:	cmp	r3, #41	; 0x29
   2f208:	str	sl, [r4, #36]	; 0x24
   2f20c:	beq	2f260 <__flatcc_error_report@@Base+0xb34>
   2f210:	str	sl, [sp, #4]
   2f214:	str	sl, [sp]
   2f218:	ldr	r3, [sp, #12]
   2f21c:	mov	r1, r6
   2f220:	mov	r0, r4
   2f224:	ldr	r2, [pc, #1188]	; 2f6d0 <__flatcc_error_report@@Base+0xfa4>
   2f228:	bl	2e72c <__flatcc_error_report@@Base>
   2f22c:	cmp	r5, #0
   2f230:	movne	r2, #0
   2f234:	bne	2f240 <__flatcc_error_report@@Base+0xb14>
   2f238:	b	2f12c <__flatcc_error_report@@Base+0xa00>
   2f23c:	mov	r5, r3
   2f240:	ldr	r3, [r5]
   2f244:	str	r2, [r5]
   2f248:	cmp	r3, #0
   2f24c:	mov	r2, r5
   2f250:	bne	2f23c <__flatcc_error_report@@Base+0xb10>
   2f254:	mov	r0, r5
   2f258:	add	sp, sp, #20
   2f25c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f260:	ldr	r9, [r4, #24]
   2f264:	add	r7, r6, #20
   2f268:	cmp	r9, r7
   2f26c:	str	r7, [r4, #40]	; 0x28
   2f270:	beq	2f6c4 <__flatcc_error_report@@Base+0xf98>
   2f274:	ldr	r3, [r6, #36]	; 0x24
   2f278:	cmn	r3, #964	; 0x3c4
   2f27c:	bne	2f22c <__flatcc_error_report@@Base+0xb00>
   2f280:	ldr	r3, [r4, #52]	; 0x34
   2f284:	ldr	ip, [r4, #44]	; 0x2c
   2f288:	mov	r8, #1
   2f28c:	mov	r6, #65536	; 0x10000
   2f290:	b	2f2c8 <__flatcc_error_report@@Base+0xb9c>
   2f294:	add	r2, r7, #20
   2f298:	cmp	r2, r9
   2f29c:	str	r3, [r4, #52]	; 0x34
   2f2a0:	str	r7, [r1, #4]
   2f2a4:	str	sl, [r1]
   2f2a8:	str	r1, [r4, #36]	; 0x24
   2f2ac:	str	r2, [r4, #40]	; 0x28
   2f2b0:	beq	2f6c8 <__flatcc_error_report@@Base+0xf9c>
   2f2b4:	ldr	r0, [r2, #16]
   2f2b8:	cmn	r0, #964	; 0x3c4
   2f2bc:	bne	2f22c <__flatcc_error_report@@Base+0xb00>
   2f2c0:	mov	sl, r1
   2f2c4:	mov	r7, r2
   2f2c8:	add	r2, r3, #16
   2f2cc:	cmp	r2, ip
   2f2d0:	movls	r1, r3
   2f2d4:	movls	r3, r2
   2f2d8:	bls	2f294 <__flatcc_error_report@@Base+0xb68>
   2f2dc:	mov	r1, r8
   2f2e0:	mov	r0, r6
   2f2e4:	bl	13ea0 <calloc@plt>
   2f2e8:	subs	r3, r0, #0
   2f2ec:	beq	2f69c <__flatcc_error_report@@Base+0xf70>
   2f2f0:	ldr	r2, [r4, #48]	; 0x30
   2f2f4:	add	ip, r3, #65536	; 0x10000
   2f2f8:	str	r2, [r3]
   2f2fc:	str	r3, [r4, #48]	; 0x30
   2f300:	add	r1, r3, #16
   2f304:	str	ip, [r4, #44]	; 0x2c
   2f308:	add	r3, r3, #32
   2f30c:	b	2f294 <__flatcc_error_report@@Base+0xb68>
   2f310:	add	sl, r6, #20
   2f314:	cmp	sl, r7
   2f318:	str	sl, [r4, #40]	; 0x28
   2f31c:	beq	2f6b8 <__flatcc_error_report@@Base+0xf8c>
   2f320:	ldr	r3, [r6, #36]	; 0x24
   2f324:	ldr	r5, [r4, #52]	; 0x34
   2f328:	cmn	r3, #964	; 0x3c4
   2f32c:	ldr	lr, [r4, #44]	; 0x2c
   2f330:	bne	2f3b8 <__flatcc_error_report@@Base+0xc8c>
   2f334:	mov	r9, #1
   2f338:	mov	r8, #65536	; 0x10000
   2f33c:	b	2f370 <__flatcc_error_report@@Base+0xc44>
   2f340:	ldr	r1, [r4, #36]	; 0x24
   2f344:	add	r3, sl, #20
   2f348:	cmp	r3, r7
   2f34c:	str	r5, [r4, #52]	; 0x34
   2f350:	stm	r2, {r1, sl}
   2f354:	str	r2, [r4, #36]	; 0x24
   2f358:	str	r3, [r4, #40]	; 0x28
   2f35c:	beq	2f6bc <__flatcc_error_report@@Base+0xf90>
   2f360:	ldr	r2, [r3, #16]
   2f364:	cmn	r2, #964	; 0x3c4
   2f368:	bne	2f3b8 <__flatcc_error_report@@Base+0xc8c>
   2f36c:	mov	sl, r3
   2f370:	add	r3, r5, #16
   2f374:	cmp	r3, lr
   2f378:	movls	r2, r5
   2f37c:	movls	r5, r3
   2f380:	bls	2f340 <__flatcc_error_report@@Base+0xc14>
   2f384:	mov	r1, r9
   2f388:	mov	r0, r8
   2f38c:	bl	13ea0 <calloc@plt>
   2f390:	cmp	r0, #0
   2f394:	beq	2f69c <__flatcc_error_report@@Base+0xf70>
   2f398:	ldr	r3, [r4, #48]	; 0x30
   2f39c:	add	lr, r0, #65536	; 0x10000
   2f3a0:	str	r3, [r0]
   2f3a4:	str	r0, [r4, #48]	; 0x30
   2f3a8:	str	lr, [r4, #44]	; 0x2c
   2f3ac:	add	r2, r0, #16
   2f3b0:	add	r5, r0, #32
   2f3b4:	b	2f340 <__flatcc_error_report@@Base+0xc14>
   2f3b8:	add	r2, r5, #32
   2f3bc:	cmp	r2, lr
   2f3c0:	mov	fp, #0
   2f3c4:	mov	r7, #1
   2f3c8:	mov	r8, #65536	; 0x10000
   2f3cc:	bhi	2f570 <__flatcc_error_report@@Base+0xe44>
   2f3d0:	ldr	r1, [r4, #40]	; 0x28
   2f3d4:	str	r2, [r4, #52]	; 0x34
   2f3d8:	mov	r9, r5
   2f3dc:	ldr	r0, [r1, #16]
   2f3e0:	str	fp, [r5]
   2f3e4:	cmp	r0, #58	; 0x3a
   2f3e8:	str	r6, [r5, #4]
   2f3ec:	beq	2f5c8 <__flatcc_error_report@@Base+0xe9c>
   2f3f0:	ldr	r3, [r4, #108]	; 0x6c
   2f3f4:	cmp	r3, #9
   2f3f8:	bgt	2f130 <__flatcc_error_report@@Base+0xa04>
   2f3fc:	ldr	r6, [r4, #40]	; 0x28
   2f400:	ldr	r3, [r6, #16]
   2f404:	cmp	r3, #44	; 0x2c
   2f408:	bne	2f200 <__flatcc_error_report@@Base+0xad4>
   2f40c:	ldr	sl, [r4, #24]
   2f410:	add	fp, r6, #20
   2f414:	cmp	fp, sl
   2f418:	str	fp, [r4, #40]	; 0x28
   2f41c:	beq	2f680 <__flatcc_error_report@@Base+0xf54>
   2f420:	ldr	r1, [r6, #36]	; 0x24
   2f424:	cmn	r1, #964	; 0x3c4
   2f428:	bne	2f4b4 <__flatcc_error_report@@Base+0xd88>
   2f42c:	ldr	r0, [r4, #52]	; 0x34
   2f430:	ldr	lr, [r4, #44]	; 0x2c
   2f434:	b	2f46c <__flatcc_error_report@@Base+0xd40>
   2f438:	ldr	ip, [r4, #36]	; 0x24
   2f43c:	add	r6, fp, #20
   2f440:	cmp	r6, sl
   2f444:	str	r0, [r4, #52]	; 0x34
   2f448:	str	fp, [r1, #4]
   2f44c:	str	ip, [r1]
   2f450:	str	r1, [r4, #36]	; 0x24
   2f454:	str	r6, [r4, #40]	; 0x28
   2f458:	beq	2f684 <__flatcc_error_report@@Base+0xf58>
   2f45c:	ldr	r1, [r6, #16]
   2f460:	cmn	r1, #964	; 0x3c4
   2f464:	bne	2f4b8 <__flatcc_error_report@@Base+0xd8c>
   2f468:	mov	fp, r6
   2f46c:	add	ip, r0, #16
   2f470:	cmp	ip, lr
   2f474:	movls	r1, r0
   2f478:	movls	r0, ip
   2f47c:	bls	2f438 <__flatcc_error_report@@Base+0xd0c>
   2f480:	mov	r1, r7
   2f484:	mov	r0, r8
   2f488:	bl	13ea0 <calloc@plt>
   2f48c:	cmp	r0, #0
   2f490:	beq	2f69c <__flatcc_error_report@@Base+0xf70>
   2f494:	ldr	r1, [r4, #48]	; 0x30
   2f498:	add	lr, r0, #65536	; 0x10000
   2f49c:	str	r1, [r0]
   2f4a0:	str	r0, [r4, #48]	; 0x30
   2f4a4:	add	r1, r0, #16
   2f4a8:	str	lr, [r4, #44]	; 0x2c
   2f4ac:	add	r0, r0, #32
   2f4b0:	b	2f438 <__flatcc_error_report@@Base+0xd0c>
   2f4b4:	mov	r6, fp
   2f4b8:	cmp	r1, #9
   2f4bc:	bne	2f5a4 <__flatcc_error_report@@Base+0xe78>
   2f4c0:	add	fp, r6, #20
   2f4c4:	cmp	sl, fp
   2f4c8:	str	fp, [r4, #40]	; 0x28
   2f4cc:	beq	2f680 <__flatcc_error_report@@Base+0xf54>
   2f4d0:	ldr	r1, [r6, #36]	; 0x24
   2f4d4:	ldr	r5, [r4, #52]	; 0x34
   2f4d8:	cmn	r1, #964	; 0x3c4
   2f4dc:	ldr	lr, [r4, #44]	; 0x2c
   2f4e0:	beq	2f518 <__flatcc_error_report@@Base+0xdec>
   2f4e4:	b	2f560 <__flatcc_error_report@@Base+0xe34>
   2f4e8:	ldr	r0, [r4, #36]	; 0x24
   2f4ec:	add	r1, fp, #20
   2f4f0:	cmp	r1, sl
   2f4f4:	str	r5, [r4, #52]	; 0x34
   2f4f8:	stm	ip, {r0, fp}
   2f4fc:	str	ip, [r4, #36]	; 0x24
   2f500:	str	r1, [r4, #40]	; 0x28
   2f504:	beq	2f684 <__flatcc_error_report@@Base+0xf58>
   2f508:	ldr	r3, [r1, #16]
   2f50c:	cmn	r3, #964	; 0x3c4
   2f510:	bne	2f560 <__flatcc_error_report@@Base+0xe34>
   2f514:	mov	fp, r1
   2f518:	add	r1, r5, #16
   2f51c:	cmp	r1, lr
   2f520:	movls	ip, r5
   2f524:	movls	r5, r1
   2f528:	bls	2f4e8 <__flatcc_error_report@@Base+0xdbc>
   2f52c:	mov	r1, r7
   2f530:	mov	r0, r8
   2f534:	bl	13ea0 <calloc@plt>
   2f538:	cmp	r0, #0
   2f53c:	beq	2f69c <__flatcc_error_report@@Base+0xf70>
   2f540:	ldr	r1, [r4, #48]	; 0x30
   2f544:	add	lr, r0, #65536	; 0x10000
   2f548:	str	r1, [r0]
   2f54c:	str	r0, [r4, #48]	; 0x30
   2f550:	str	lr, [r4, #44]	; 0x2c
   2f554:	add	ip, r0, #16
   2f558:	add	r5, r0, #32
   2f55c:	b	2f4e8 <__flatcc_error_report@@Base+0xdbc>
   2f560:	add	r2, r5, #32
   2f564:	cmp	r2, lr
   2f568:	mov	fp, r9
   2f56c:	bls	2f3d0 <__flatcc_error_report@@Base+0xca4>
   2f570:	mov	r1, r7
   2f574:	mov	r0, r8
   2f578:	bl	13ea0 <calloc@plt>
   2f57c:	cmp	r0, #0
   2f580:	beq	2f69c <__flatcc_error_report@@Base+0xf70>
   2f584:	ldr	ip, [r4, #48]	; 0x30
   2f588:	add	r1, r0, #65536	; 0x10000
   2f58c:	add	r5, r0, #16
   2f590:	add	r2, r0, #48	; 0x30
   2f594:	str	ip, [r0]
   2f598:	str	r0, [r4, #48]	; 0x30
   2f59c:	str	r1, [r4, #44]	; 0x2c
   2f5a0:	b	2f3d0 <__flatcc_error_report@@Base+0xca4>
   2f5a4:	mov	r3, #0
   2f5a8:	mov	r1, r6
   2f5ac:	str	r3, [sp]
   2f5b0:	ldr	r2, [pc, #284]	; 2f6d4 <__flatcc_error_report@@Base+0xfa8>
   2f5b4:	mov	r0, r4
   2f5b8:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2f5bc:	ldr	r6, [r4, #40]	; 0x28
   2f5c0:	ldr	r3, [r6, #16]
   2f5c4:	b	2f200 <__flatcc_error_report@@Base+0xad4>
   2f5c8:	ldr	sl, [r4, #24]
   2f5cc:	add	r6, r1, #20
   2f5d0:	cmp	sl, r6
   2f5d4:	str	r6, [r4, #40]	; 0x28
   2f5d8:	beq	2f6a0 <__flatcc_error_report@@Base+0xf74>
   2f5dc:	ldr	r1, [r1, #36]	; 0x24
   2f5e0:	cmn	r1, #964	; 0x3c4
   2f5e4:	bne	2f668 <__flatcc_error_report@@Base+0xf3c>
   2f5e8:	ldr	lr, [r4, #44]	; 0x2c
   2f5ec:	b	2f620 <__flatcc_error_report@@Base+0xef4>
   2f5f0:	ldr	r0, [r4, #36]	; 0x24
   2f5f4:	add	r1, r6, #20
   2f5f8:	cmp	r1, sl
   2f5fc:	str	r2, [r4, #52]	; 0x34
   2f600:	stm	ip, {r0, r6}
   2f604:	str	ip, [r4, #36]	; 0x24
   2f608:	str	r1, [r4, #40]	; 0x28
   2f60c:	beq	2f6a4 <__flatcc_error_report@@Base+0xf78>
   2f610:	ldr	r0, [r1, #16]
   2f614:	cmn	r0, #964	; 0x3c4
   2f618:	bne	2f668 <__flatcc_error_report@@Base+0xf3c>
   2f61c:	mov	r6, r1
   2f620:	add	r1, r2, #16
   2f624:	cmp	r1, lr
   2f628:	movls	ip, r2
   2f62c:	movls	r2, r1
   2f630:	bls	2f5f0 <__flatcc_error_report@@Base+0xec4>
   2f634:	mov	r1, r7
   2f638:	mov	r0, r8
   2f63c:	bl	13ea0 <calloc@plt>
   2f640:	cmp	r0, #0
   2f644:	beq	2f69c <__flatcc_error_report@@Base+0xf70>
   2f648:	ldr	r2, [r4, #48]	; 0x30
   2f64c:	add	lr, r0, #65536	; 0x10000
   2f650:	str	r2, [r0]
   2f654:	str	r0, [r4, #48]	; 0x30
   2f658:	str	lr, [r4, #44]	; 0x2c
   2f65c:	add	ip, r0, #16
   2f660:	add	r2, r0, #32
   2f664:	b	2f5f0 <__flatcc_error_report@@Base+0xec4>
   2f668:	ldr	r3, [pc, #104]	; 2f6d8 <__flatcc_error_report@@Base+0xfac>
   2f66c:	mov	r2, r7
   2f670:	add	r1, r5, #8
   2f674:	mov	r0, r4
   2f678:	bl	2dea8 <__flatcc_fb_print_error@@Base+0x7a0>
   2f67c:	b	2f3f0 <__flatcc_error_report@@Base+0xcc4>
   2f680:	mov	fp, r6
   2f684:	str	fp, [r4, #40]	; 0x28
   2f688:	ldr	r3, [pc, #76]	; 2f6dc <__flatcc_error_report@@Base+0xfb0>
   2f68c:	ldr	r2, [pc, #76]	; 2f6e0 <__flatcc_error_report@@Base+0xfb4>
   2f690:	ldr	r1, [pc, #76]	; 2f6e4 <__flatcc_error_report@@Base+0xfb8>
   2f694:	ldr	r0, [pc, #76]	; 2f6e8 <__flatcc_error_report@@Base+0xfbc>
   2f698:	bl	14038 <__assert_fail@plt>
   2f69c:	bl	14098 <__assert_fail@plt+0x60>
   2f6a0:	mov	r6, r1
   2f6a4:	str	r6, [r4, #40]	; 0x28
   2f6a8:	b	2f688 <__flatcc_error_report@@Base+0xf5c>
   2f6ac:	mov	r9, r3
   2f6b0:	str	r9, [r4, #40]	; 0x28
   2f6b4:	b	2f688 <__flatcc_error_report@@Base+0xf5c>
   2f6b8:	mov	sl, r6
   2f6bc:	str	sl, [r4, #40]	; 0x28
   2f6c0:	b	2f688 <__flatcc_error_report@@Base+0xf5c>
   2f6c4:	mov	r7, r6
   2f6c8:	str	r7, [r4, #40]	; 0x28
   2f6cc:	b	2f688 <__flatcc_error_report@@Base+0xf5c>
   2f6d0:	andeq	r8, r5, r0, asr pc
   2f6d4:	andeq	r8, r5, r0, lsr #30
   2f6d8:	andeq	r8, r5, r0, ror pc
   2f6dc:	andeq	r8, r5, r4, lsl #20
   2f6e0:	andeq	r0, r0, r5, asr r1
   2f6e4:	andeq	r8, r5, ip, lsr #22
   2f6e8:	andeq	sl, r4, r4, asr sp

0002f6ec <error_ref_sym@@Base>:
   2f6ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f6f0:	sub	sp, sp, #76	; 0x4c
   2f6f4:	subs	sl, r1, #0
   2f6f8:	str	r0, [sp, #8]
   2f6fc:	str	r2, [sp, #12]
   2f700:	mov	r9, r3
   2f704:	beq	2f7c0 <error_ref_sym@@Base+0xd4>
   2f708:	mov	r6, sl
   2f70c:	mov	fp, #0
   2f710:	mov	r4, #50	; 0x32
   2f714:	add	r7, sp, #20
   2f718:	mov	r8, #46	; 0x2e
   2f71c:	ldr	r3, [r6, #4]
   2f720:	add	r0, r7, fp
   2f724:	ldm	r3, {r1, r5}
   2f728:	cmp	r5, r4
   2f72c:	movge	r5, r4
   2f730:	mov	r2, r5
   2f734:	bl	13edc <memcpy@plt>
   2f738:	add	r2, r5, fp
   2f73c:	add	r3, sp, #72	; 0x48
   2f740:	add	r3, r3, r2
   2f744:	sub	r5, r4, r5
   2f748:	strb	r8, [r3, #-52]	; 0xffffffcc
   2f74c:	ldr	r6, [r6]
   2f750:	sub	r4, r5, #1
   2f754:	cmp	r6, #0
   2f758:	cmpne	r4, #0
   2f75c:	movgt	r1, #1
   2f760:	movle	r1, #0
   2f764:	add	fp, r2, #1
   2f768:	bgt	2f71c <error_ref_sym@@Base+0x30>
   2f76c:	cmp	fp, #0
   2f770:	movle	r2, fp
   2f774:	cmp	r4, #0
   2f778:	add	r3, sp, #72	; 0x48
   2f77c:	add	r0, r3, fp
   2f780:	ldrle	r3, [pc, #72]	; 2f7d0 <error_ref_sym@@Base+0xe4>
   2f784:	strb	r1, [r0, #-52]	; 0xffffffcc
   2f788:	movle	r2, #50	; 0x32
   2f78c:	ldrle	r0, [r3, #264]	; 0x108
   2f790:	strle	r0, [sp, #67]	; 0x43
   2f794:	cmp	r9, #0
   2f798:	ldr	r1, [sl, #4]
   2f79c:	ldrne	r3, [r9, #4]
   2f7a0:	moveq	r3, r9
   2f7a4:	str	r2, [sp, #4]
   2f7a8:	str	r7, [sp]
   2f7ac:	ldr	r2, [sp, #12]
   2f7b0:	ldr	r0, [sp, #8]
   2f7b4:	bl	2e72c <__flatcc_error_report@@Base>
   2f7b8:	add	sp, sp, #76	; 0x4c
   2f7bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f7c0:	add	r7, sp, #72	; 0x48
   2f7c4:	mov	r2, sl
   2f7c8:	strb	sl, [r7, #-52]!	; 0xffffffcc
   2f7cc:	b	2f794 <error_ref_sym@@Base+0xa8>
   2f7d0:	andeq	r8, r5, r4, lsl #20

0002f7d4 <__flatcc_fb_init_parser@@Base>:
   2f7d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2f7d8:	sub	sp, sp, #8
   2f7dc:	mov	r6, r1
   2f7e0:	mov	r7, r2
   2f7e4:	mov	r1, #0
   2f7e8:	mov	r2, #560	; 0x230
   2f7ec:	mov	r8, r3
   2f7f0:	mov	r5, r0
   2f7f4:	ldr	r4, [sp, #44]	; 0x2c
   2f7f8:	bl	13f9c <memset@plt>
   2f7fc:	cmp	r8, #0
   2f800:	ldrne	r3, [sp, #40]	; 0x28
   2f804:	ldreq	r8, [pc, #600]	; 2fa64 <__flatcc_fb_init_parser@@Base+0x290>
   2f808:	str	r8, [r5, #8]
   2f80c:	strne	r3, [r5, #12]
   2f810:	cmp	r6, #0
   2f814:	beq	2f97c <__flatcc_fb_init_parser@@Base+0x1a8>
   2f818:	mov	r2, #224	; 0xe0
   2f81c:	mov	r1, r6
   2f820:	add	r0, r5, #128	; 0x80
   2f824:	bl	13edc <memcpy@plt>
   2f828:	ldr	r3, [r5, #192]	; 0xc0
   2f82c:	cmp	r4, #0
   2f830:	addeq	r4, r5, #416	; 0x1a0
   2f834:	cmp	r3, #8
   2f838:	str	r4, [r5, #412]	; 0x19c
   2f83c:	bhi	2f9d8 <__flatcc_fb_init_parser@@Base+0x204>
   2f840:	mov	r2, #1
   2f844:	lsl	r3, r2, r3
   2f848:	tst	r3, #276	; 0x114
   2f84c:	beq	2f9d8 <__flatcc_fb_init_parser@@Base+0x204>
   2f850:	ldr	r3, [r5, #196]	; 0xc4
   2f854:	cmp	r3, #8
   2f858:	bhi	2f9f8 <__flatcc_fb_init_parser@@Base+0x224>
   2f85c:	lsl	r2, r2, r3
   2f860:	tst	r2, #276	; 0x114
   2f864:	beq	2f9f8 <__flatcc_fb_init_parser@@Base+0x224>
   2f868:	cmp	r7, #0
   2f86c:	beq	2f988 <__flatcc_fb_init_parser@@Base+0x1b4>
   2f870:	mov	r0, r7
   2f874:	bl	13f78 <strlen@plt>
   2f878:	mov	r8, r0
   2f87c:	ldr	r2, [r6, #96]	; 0x60
   2f880:	mov	r1, r8
   2f884:	mov	r0, r7
   2f888:	bl	2a3b4 <__flatcc_fb_create_basename@@Base>
   2f88c:	cmp	r0, #0
   2f890:	mov	r4, r0
   2f894:	str	r0, [r5, #512]	; 0x200
   2f898:	beq	2fa4c <__flatcc_fb_init_parser@@Base+0x278>
   2f89c:	bl	13f78 <strlen@plt>
   2f8a0:	mov	r1, r0
   2f8a4:	mov	r9, r0
   2f8a8:	mov	r0, r4
   2f8ac:	bl	29d60 <__flatcc_fb_copy_path_n@@Base>
   2f8b0:	subs	sl, r0, #0
   2f8b4:	beq	2fa4c <__flatcc_fb_init_parser@@Base+0x278>
   2f8b8:	cmp	r9, #0
   2f8bc:	beq	2f8fc <__flatcc_fb_init_parser@@Base+0x128>
   2f8c0:	ldrb	r4, [sl]
   2f8c4:	cmp	r4, #0
   2f8c8:	beq	2f8fc <__flatcc_fb_init_parser@@Base+0x128>
   2f8cc:	bl	13f54 <__ctype_toupper_loc@plt>
   2f8d0:	mov	r3, sl
   2f8d4:	add	r1, sl, r9
   2f8d8:	b	2f8e8 <__flatcc_fb_init_parser@@Base+0x114>
   2f8dc:	ldrb	r4, [r3]
   2f8e0:	cmp	r4, #0
   2f8e4:	beq	2f8fc <__flatcc_fb_init_parser@@Base+0x128>
   2f8e8:	ldr	r2, [r0]
   2f8ec:	ldr	r2, [r2, r4, lsl #2]
   2f8f0:	strb	r2, [r3], #1
   2f8f4:	cmp	r1, r3
   2f8f8:	bne	2f8dc <__flatcc_fb_init_parser@@Base+0x108>
   2f8fc:	str	sl, [r5, #516]	; 0x204
   2f900:	str	sl, [r5, #496]	; 0x1f0
   2f904:	str	r9, [r5, #500]	; 0x1f4
   2f908:	mov	r1, r8
   2f90c:	mov	r0, r7
   2f910:	ldr	r2, [pc, #336]	; 2fa68 <__flatcc_fb_init_parser@@Base+0x294>
   2f914:	bl	2a3b4 <__flatcc_fb_create_basename@@Base>
   2f918:	cmp	r0, #0
   2f91c:	str	r0, [r5, #520]	; 0x208
   2f920:	beq	2fa4c <__flatcc_fb_init_parser@@Base+0x278>
   2f924:	ldr	r0, [r6, #192]	; 0xc0
   2f928:	cmp	r0, #0
   2f92c:	beq	2f93c <__flatcc_fb_init_parser@@Base+0x168>
   2f930:	str	r0, [r5, #476]	; 0x1dc
   2f934:	bl	13f78 <strlen@plt>
   2f938:	str	r0, [r5, #480]	; 0x1e0
   2f93c:	mov	r2, #0
   2f940:	mov	r1, r2
   2f944:	ldr	r0, [r5, #412]	; 0x19c
   2f948:	bl	28a80 <fb_scope_table_find@@Base>
   2f94c:	subs	r4, r0, #0
   2f950:	beq	2f994 <__flatcc_fb_init_parser@@Base+0x1c0>
   2f954:	mov	r2, #0
   2f958:	str	r4, [r5, #544]	; 0x220
   2f95c:	ldr	r0, [r5, #412]	; 0x19c
   2f960:	mov	r1, r2
   2f964:	bl	28a80 <fb_scope_table_find@@Base>
   2f968:	cmp	r4, r0
   2f96c:	moveq	r0, #0
   2f970:	bne	2fa50 <__flatcc_fb_init_parser@@Base+0x27c>
   2f974:	add	sp, sp, #8
   2f978:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2f97c:	add	r0, r5, #128	; 0x80
   2f980:	bl	144bc <flatcc_init_options@@Base>
   2f984:	b	2f828 <__flatcc_fb_init_parser@@Base+0x54>
   2f988:	ldr	r7, [pc, #220]	; 2fa6c <__flatcc_fb_init_parser@@Base+0x298>
   2f98c:	mov	r8, #4
   2f990:	b	2f87c <__flatcc_fb_init_parser@@Base+0xa8>
   2f994:	ldr	r4, [r5, #52]	; 0x34
   2f998:	ldr	r3, [r5, #44]	; 0x2c
   2f99c:	add	ip, r4, #32
   2f9a0:	cmp	ip, r3
   2f9a4:	bhi	2fa18 <__flatcc_fb_init_parser@@Base+0x244>
   2f9a8:	add	r2, r5, #476	; 0x1dc
   2f9ac:	mov	r3, r4
   2f9b0:	ldm	r2, {r0, r1}
   2f9b4:	mov	lr, #0
   2f9b8:	str	ip, [r5, #52]	; 0x34
   2f9bc:	mov	r2, #1
   2f9c0:	str	lr, [r3], #20
   2f9c4:	stm	r3, {r0, r1}
   2f9c8:	mov	r1, r4
   2f9cc:	ldr	r0, [r5, #412]	; 0x19c
   2f9d0:	bl	28a6c <fb_scope_table_insert_item@@Base>
   2f9d4:	b	2f954 <__flatcc_fb_init_parser@@Base+0x180>
   2f9d8:	mov	r3, #0
   2f9dc:	mov	r0, r5
   2f9e0:	str	r3, [sp]
   2f9e4:	mov	r1, r3
   2f9e8:	ldr	r2, [pc, #128]	; 2fa70 <__flatcc_fb_init_parser@@Base+0x29c>
   2f9ec:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2f9f0:	mvn	r0, #0
   2f9f4:	b	2f974 <__flatcc_fb_init_parser@@Base+0x1a0>
   2f9f8:	mov	r3, #0
   2f9fc:	mov	r0, r5
   2fa00:	str	r3, [sp]
   2fa04:	mov	r1, r3
   2fa08:	ldr	r2, [pc, #100]	; 2fa74 <__flatcc_fb_init_parser@@Base+0x2a0>
   2fa0c:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2fa10:	mvn	r0, #0
   2fa14:	b	2f974 <__flatcc_fb_init_parser@@Base+0x1a0>
   2fa18:	mov	r1, #1
   2fa1c:	mov	r0, #65536	; 0x10000
   2fa20:	bl	13ea0 <calloc@plt>
   2fa24:	cmp	r0, #0
   2fa28:	beq	2fa4c <__flatcc_fb_init_parser@@Base+0x278>
   2fa2c:	ldr	r2, [r5, #48]	; 0x30
   2fa30:	add	r3, r0, #65536	; 0x10000
   2fa34:	add	r4, r0, #16
   2fa38:	add	ip, r0, #48	; 0x30
   2fa3c:	str	r2, [r0]
   2fa40:	str	r0, [r5, #48]	; 0x30
   2fa44:	str	r3, [r5, #44]	; 0x2c
   2fa48:	b	2f9a8 <__flatcc_fb_init_parser@@Base+0x1d4>
   2fa4c:	bl	14098 <__assert_fail@plt+0x60>
   2fa50:	ldr	r3, [pc, #32]	; 2fa78 <__flatcc_fb_init_parser@@Base+0x2a4>
   2fa54:	ldr	r2, [pc, #32]	; 2fa7c <__flatcc_fb_init_parser@@Base+0x2a8>
   2fa58:	ldr	r1, [pc, #32]	; 2fa80 <__flatcc_fb_init_parser@@Base+0x2ac>
   2fa5c:	ldr	r0, [pc, #32]	; 2fa84 <__flatcc_fb_init_parser@@Base+0x2b0>
   2fa60:	bl	14038 <__assert_fail@plt>
   2fa64:	andeq	sl, r2, ip, ror #10
   2fa68:	andeq	fp, r4, ip, lsr #24
   2fa6c:	muleq	r5, r0, pc	; <UNPREDICTABLE>
   2fa70:	muleq	r5, r8, pc	; <UNPREDICTABLE>
   2fa74:	ldrdeq	r8, [r5], -r0
   2fa78:	andeq	r8, r5, r4, lsl fp
   2fa7c:	andeq	r0, r0, r3, lsr r5
   2fa80:	andeq	r8, r5, ip, lsr #22
   2fa84:	andeq	r9, r5, ip

0002fa88 <__flatcc_fb_parse@@Base>:
   2fa88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fa8c:	mov	r4, r0
   2fa90:	cmp	r3, #0
   2fa94:	mov	r0, r1
   2fa98:	ldr	lr, [pc, #4036]	; 30a64 <__flatcc_fb_parse@@Base+0xfdc>
   2fa9c:	ldr	ip, [pc, #4036]	; 30a68 <__flatcc_fb_parse@@Base+0xfe0>
   2faa0:	mov	r1, #1
   2faa4:	mov	r3, #9
   2faa8:	ldr	r6, [pc, #4028]	; 30a6c <__flatcc_fb_parse@@Base+0xfe4>
   2faac:	str	r1, [r4, #64]	; 0x40
   2fab0:	str	r3, [r4, #84]	; 0x54
   2fab4:	mov	r1, #5
   2fab8:	mov	r3, #0
   2fabc:	mov	r5, #4
   2fac0:	strne	r0, [r4, #16]
   2fac4:	sub	sp, sp, #36	; 0x24
   2fac8:	str	lr, [r4, #104]	; 0x68
   2facc:	str	ip, [r4, #88]	; 0x58
   2fad0:	str	r1, [r4, #92]	; 0x5c
   2fad4:	str	r3, [r4, #80]	; 0x50
   2fad8:	mov	r1, r2
   2fadc:	str	r3, [r4, #76]	; 0x4c
   2fae0:	str	r3, [r4, #100]	; 0x64
   2fae4:	str	r3, [r4, #96]	; 0x60
   2fae8:	mov	r2, r4
   2faec:	str	r0, [r4, #60]	; 0x3c
   2faf0:	str	r6, [r4, #68]	; 0x44
   2faf4:	str	r5, [r4, #72]	; 0x48
   2faf8:	bl	2a730 <__flatcc_fb_default_error_out@@Base+0x1c4>
   2fafc:	ldr	r3, [r4, #40]	; 0x28
   2fb00:	ldr	r9, [r4, #20]
   2fb04:	str	r3, [r4, #24]
   2fb08:	str	r9, [r4, #40]	; 0x28
   2fb0c:	ldr	r0, [r4, #216]	; 0xd8
   2fb10:	bl	13f3c <malloc@plt>
   2fb14:	cmp	r0, #0
   2fb18:	str	r0, [r4, #112]	; 0x70
   2fb1c:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   2fb20:	ldr	r1, [r9, #16]
   2fb24:	cmn	r1, #964	; 0x3c4
   2fb28:	beq	31120 <__flatcc_fb_parse@@Base+0x1698>
   2fb2c:	ldr	r8, [pc, #3900]	; 30a70 <__flatcc_fb_parse@@Base+0xfe8>
   2fb30:	mov	r5, r9
   2fb34:	mov	r7, #1
   2fb38:	mov	r6, #65536	; 0x10000
   2fb3c:	cmp	r1, r8
   2fb40:	bne	2fee4 <__flatcc_fb_parse@@Base+0x45c>
   2fb44:	ldr	sl, [r4, #24]
   2fb48:	add	fp, r5, #20
   2fb4c:	cmp	sl, fp
   2fb50:	str	fp, [r4, #40]	; 0x28
   2fb54:	beq	32e2c <__flatcc_fb_parse@@Base+0x33a4>
   2fb58:	ldr	r1, [r5, #36]	; 0x24
   2fb5c:	cmn	r1, #964	; 0x3c4
   2fb60:	bne	2fbe8 <__flatcc_fb_parse@@Base+0x160>
   2fb64:	ldr	r0, [r4, #52]	; 0x34
   2fb68:	ldr	ip, [r4, #44]	; 0x2c
   2fb6c:	b	2fba0 <__flatcc_fb_parse@@Base+0x118>
   2fb70:	ldr	r2, [r4, #36]	; 0x24
   2fb74:	add	r5, fp, #20
   2fb78:	cmp	r5, sl
   2fb7c:	str	r0, [r4, #52]	; 0x34
   2fb80:	stm	r3, {r2, fp}
   2fb84:	str	r3, [r4, #36]	; 0x24
   2fb88:	str	r5, [r4, #40]	; 0x28
   2fb8c:	beq	31108 <__flatcc_fb_parse@@Base+0x1680>
   2fb90:	ldr	r1, [r5, #16]
   2fb94:	cmn	r1, #964	; 0x3c4
   2fb98:	bne	2fbec <__flatcc_fb_parse@@Base+0x164>
   2fb9c:	mov	fp, r5
   2fba0:	add	r2, r0, #16
   2fba4:	cmp	r2, ip
   2fba8:	movls	r3, r0
   2fbac:	movls	r0, r2
   2fbb0:	bls	2fb70 <__flatcc_fb_parse@@Base+0xe8>
   2fbb4:	mov	r1, r7
   2fbb8:	mov	r0, r6
   2fbbc:	bl	13ea0 <calloc@plt>
   2fbc0:	cmp	r0, #0
   2fbc4:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   2fbc8:	ldr	r3, [r4, #48]	; 0x30
   2fbcc:	add	ip, r0, #65536	; 0x10000
   2fbd0:	str	r3, [r0]
   2fbd4:	str	r0, [r4, #48]	; 0x30
   2fbd8:	add	r3, r0, #16
   2fbdc:	str	ip, [r4, #44]	; 0x2c
   2fbe0:	add	r0, r0, #32
   2fbe4:	b	2fb70 <__flatcc_fb_parse@@Base+0xe8>
   2fbe8:	mov	r5, fp
   2fbec:	ldr	r3, [r4, #140]	; 0x8c
   2fbf0:	cmp	r3, #0
   2fbf4:	bne	2fdc8 <__flatcc_fb_parse@@Base+0x340>
   2fbf8:	ldr	r0, [r4, #108]	; 0x6c
   2fbfc:	cmp	r0, #9
   2fc00:	bgt	2fee8 <__flatcc_fb_parse@@Base+0x460>
   2fc04:	cmp	r1, #19
   2fc08:	bne	2fdec <__flatcc_fb_parse@@Base+0x364>
   2fc0c:	ldr	sl, [r4, #24]
   2fc10:	add	fp, r5, #20
   2fc14:	cmp	sl, fp
   2fc18:	str	fp, [r4, #40]	; 0x28
   2fc1c:	beq	32e2c <__flatcc_fb_parse@@Base+0x33a4>
   2fc20:	ldr	r3, [r5, #36]	; 0x24
   2fc24:	ldr	ip, [r4, #44]	; 0x2c
   2fc28:	cmn	r3, #964	; 0x3c4
   2fc2c:	ldr	r3, [r4, #52]	; 0x34
   2fc30:	beq	2fc68 <__flatcc_fb_parse@@Base+0x1e0>
   2fc34:	b	2fcb8 <__flatcc_fb_parse@@Base+0x230>
   2fc38:	ldr	r0, [r4, #36]	; 0x24
   2fc3c:	add	r2, fp, #20
   2fc40:	cmp	r2, sl
   2fc44:	str	r3, [r4, #52]	; 0x34
   2fc48:	stm	r1, {r0, fp}
   2fc4c:	str	r1, [r4, #36]	; 0x24
   2fc50:	str	r2, [r4, #40]	; 0x28
   2fc54:	beq	31108 <__flatcc_fb_parse@@Base+0x1680>
   2fc58:	ldr	r1, [r2, #16]
   2fc5c:	cmn	r1, #964	; 0x3c4
   2fc60:	bne	2fcb8 <__flatcc_fb_parse@@Base+0x230>
   2fc64:	mov	fp, r2
   2fc68:	add	r2, r3, #16
   2fc6c:	cmp	r2, ip
   2fc70:	movls	r1, r3
   2fc74:	movls	r3, r2
   2fc78:	bls	2fc38 <__flatcc_fb_parse@@Base+0x1b0>
   2fc7c:	mov	r1, r7
   2fc80:	mov	r0, r6
   2fc84:	bl	13ea0 <calloc@plt>
   2fc88:	cmp	r0, #0
   2fc8c:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   2fc90:	ldr	r3, [r4, #48]	; 0x30
   2fc94:	add	ip, r0, #65536	; 0x10000
   2fc98:	str	r3, [r0]
   2fc9c:	str	r0, [r4, #48]	; 0x30
   2fca0:	str	ip, [r4, #44]	; 0x2c
   2fca4:	add	r1, r0, #16
   2fca8:	add	r3, r0, #32
   2fcac:	b	2fc38 <__flatcc_fb_parse@@Base+0x1b0>
   2fcb0:	ldr	r3, [r4, #52]	; 0x34
   2fcb4:	ldr	ip, [r4, #44]	; 0x2c
   2fcb8:	add	r2, r3, #32
   2fcbc:	cmp	r2, ip
   2fcc0:	bhi	2fd94 <__flatcc_fb_parse@@Base+0x30c>
   2fcc4:	ldr	r0, [r4, #352]	; 0x160
   2fcc8:	add	r1, r3, #8
   2fccc:	str	r2, [r4, #52]	; 0x34
   2fcd0:	str	r0, [r3]
   2fcd4:	str	r3, [r4, #352]	; 0x160
   2fcd8:	mov	r0, r4
   2fcdc:	bl	2db94 <__flatcc_fb_print_error@@Base+0x48c>
   2fce0:	ldr	r1, [r4, #40]	; 0x28
   2fce4:	ldr	r3, [r1, #16]
   2fce8:	cmp	r3, #59	; 0x3b
   2fcec:	bne	2fec0 <__flatcc_fb_parse@@Base+0x438>
   2fcf0:	ldr	sl, [r4, #24]
   2fcf4:	add	fp, r1, #20
   2fcf8:	cmp	sl, fp
   2fcfc:	str	fp, [r4, #40]	; 0x28
   2fd00:	beq	31104 <__flatcc_fb_parse@@Base+0x167c>
   2fd04:	ldr	r1, [r1, #36]	; 0x24
   2fd08:	cmn	r1, #964	; 0x3c4
   2fd0c:	bne	30548 <__flatcc_fb_parse@@Base+0xac0>
   2fd10:	ldr	r0, [r4, #52]	; 0x34
   2fd14:	ldr	ip, [r4, #44]	; 0x2c
   2fd18:	b	2fd4c <__flatcc_fb_parse@@Base+0x2c4>
   2fd1c:	ldr	r2, [r4, #36]	; 0x24
   2fd20:	add	r5, fp, #20
   2fd24:	cmp	r5, sl
   2fd28:	str	r0, [r4, #52]	; 0x34
   2fd2c:	stm	r3, {r2, fp}
   2fd30:	str	r3, [r4, #36]	; 0x24
   2fd34:	str	r5, [r4, #40]	; 0x28
   2fd38:	beq	31108 <__flatcc_fb_parse@@Base+0x1680>
   2fd3c:	ldr	r1, [r5, #16]
   2fd40:	cmn	r1, #964	; 0x3c4
   2fd44:	bne	2fb3c <__flatcc_fb_parse@@Base+0xb4>
   2fd48:	mov	fp, r5
   2fd4c:	add	r2, r0, #16
   2fd50:	cmp	r2, ip
   2fd54:	movls	r3, r0
   2fd58:	movls	r0, r2
   2fd5c:	bls	2fd1c <__flatcc_fb_parse@@Base+0x294>
   2fd60:	mov	r1, r7
   2fd64:	mov	r0, r6
   2fd68:	bl	13ea0 <calloc@plt>
   2fd6c:	cmp	r0, #0
   2fd70:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   2fd74:	ldr	r3, [r4, #48]	; 0x30
   2fd78:	add	ip, r0, #65536	; 0x10000
   2fd7c:	str	r3, [r0]
   2fd80:	str	r0, [r4, #48]	; 0x30
   2fd84:	add	r3, r0, #16
   2fd88:	str	ip, [r4, #44]	; 0x2c
   2fd8c:	add	r0, r0, #32
   2fd90:	b	2fd1c <__flatcc_fb_parse@@Base+0x294>
   2fd94:	mov	r1, r7
   2fd98:	mov	r0, r6
   2fd9c:	bl	13ea0 <calloc@plt>
   2fda0:	cmp	r0, #0
   2fda4:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   2fda8:	ldr	r1, [r4, #48]	; 0x30
   2fdac:	add	r3, r0, #16
   2fdb0:	str	r1, [r0]
   2fdb4:	add	r1, r0, #65536	; 0x10000
   2fdb8:	add	r2, r0, #48	; 0x30
   2fdbc:	str	r0, [r4, #48]	; 0x30
   2fdc0:	str	r1, [r4, #44]	; 0x2c
   2fdc4:	b	2fcc4 <__flatcc_fb_parse@@Base+0x23c>
   2fdc8:	mov	r3, #0
   2fdcc:	mov	r1, r9
   2fdd0:	str	r3, [sp]
   2fdd4:	ldr	r2, [pc, #3224]	; 30a74 <__flatcc_fb_parse@@Base+0xfec>
   2fdd8:	mov	r0, r4
   2fddc:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2fde0:	ldr	r5, [r4, #40]	; 0x28
   2fde4:	ldr	r1, [r5, #16]
   2fde8:	b	2fbf8 <__flatcc_fb_parse@@Base+0x170>
   2fdec:	mov	r3, #0
   2fdf0:	ldr	r2, [pc, #3200]	; 30a78 <__flatcc_fb_parse@@Base+0xff0>
   2fdf4:	mov	r1, r5
   2fdf8:	str	r3, [sp]
   2fdfc:	mov	r0, r4
   2fe00:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2fe04:	ldr	r2, [r4, #40]	; 0x28
   2fe08:	ldr	r3, [r2, #16]
   2fe0c:	cmp	r3, #0
   2fe10:	beq	2fcb0 <__flatcc_fb_parse@@Base+0x228>
   2fe14:	cmp	r3, #59	; 0x3b
   2fe18:	beq	310e8 <__flatcc_fb_parse@@Base+0x1660>
   2fe1c:	ldr	sl, [r4, #24]
   2fe20:	add	r5, r2, #20
   2fe24:	cmp	sl, r5
   2fe28:	str	r5, [r4, #40]	; 0x28
   2fe2c:	beq	32ca0 <__flatcc_fb_parse@@Base+0x3218>
   2fe30:	ldr	r3, [r2, #36]	; 0x24
   2fe34:	cmn	r3, #964	; 0x3c4
   2fe38:	bne	310e0 <__flatcc_fb_parse@@Base+0x1658>
   2fe3c:	ldr	r0, [r4, #52]	; 0x34
   2fe40:	ldr	ip, [r4, #44]	; 0x2c
   2fe44:	b	2fe78 <__flatcc_fb_parse@@Base+0x3f0>
   2fe48:	ldr	r1, [r4, #36]	; 0x24
   2fe4c:	add	r2, r5, #20
   2fe50:	cmp	r2, sl
   2fe54:	str	r0, [r4, #52]	; 0x34
   2fe58:	stm	r3, {r1, r5}
   2fe5c:	str	r3, [r4, #36]	; 0x24
   2fe60:	str	r2, [r4, #40]	; 0x28
   2fe64:	beq	32ca4 <__flatcc_fb_parse@@Base+0x321c>
   2fe68:	ldr	r3, [r2, #16]
   2fe6c:	cmn	r3, #964	; 0x3c4
   2fe70:	bne	2fe08 <__flatcc_fb_parse@@Base+0x380>
   2fe74:	mov	r5, r2
   2fe78:	add	r2, r0, #16
   2fe7c:	cmp	r2, ip
   2fe80:	movls	r3, r0
   2fe84:	movls	r0, r2
   2fe88:	bls	2fe48 <__flatcc_fb_parse@@Base+0x3c0>
   2fe8c:	mov	r1, r7
   2fe90:	mov	r0, r6
   2fe94:	bl	13ea0 <calloc@plt>
   2fe98:	cmp	r0, #0
   2fe9c:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   2fea0:	ldr	r3, [r4, #48]	; 0x30
   2fea4:	add	ip, r0, #65536	; 0x10000
   2fea8:	str	r3, [r0]
   2feac:	str	r0, [r4, #48]	; 0x30
   2feb0:	add	r3, r0, #16
   2feb4:	str	ip, [r4, #44]	; 0x2c
   2feb8:	add	r0, r0, #32
   2febc:	b	2fe48 <__flatcc_fb_parse@@Base+0x3c0>
   2fec0:	mov	r3, #0
   2fec4:	str	r3, [sp]
   2fec8:	ldr	r2, [pc, #2988]	; 30a7c <__flatcc_fb_parse@@Base+0xff4>
   2fecc:	mov	r0, r4
   2fed0:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2fed4:	ldr	r5, [r4, #40]	; 0x28
   2fed8:	ldr	r1, [r5, #16]
   2fedc:	cmp	r1, r8
   2fee0:	beq	2fb44 <__flatcc_fb_parse@@Base+0xbc>
   2fee4:	ldr	r0, [r4, #108]	; 0x6c
   2fee8:	cmp	r1, #0
   2feec:	str	r5, [sp, #12]
   2fef0:	beq	300a4 <__flatcc_fb_parse@@Base+0x61c>
   2fef4:	cmp	r0, #9
   2fef8:	bgt	2ff70 <__flatcc_fb_parse@@Base+0x4e8>
   2fefc:	cmn	r1, #968	; 0x3c8
   2ff00:	beq	30e80 <__flatcc_fb_parse@@Base+0x13f8>
   2ff04:	bgt	2ff78 <__flatcc_fb_parse@@Base+0x4f0>
   2ff08:	mvn	r3, #972	; 0x3cc
   2ff0c:	cmp	r1, r3
   2ff10:	beq	30dd4 <__flatcc_fb_parse@@Base+0x134c>
   2ff14:	cmn	r1, #972	; 0x3cc
   2ff18:	bge	3004c <__flatcc_fb_parse@@Base+0x5c4>
   2ff1c:	sub	r3, r3, #10
   2ff20:	cmp	r1, r3
   2ff24:	beq	30be8 <__flatcc_fb_parse@@Base+0x1160>
   2ff28:	cmn	r1, #976	; 0x3d0
   2ff2c:	beq	30148 <__flatcc_fb_parse@@Base+0x6c0>
   2ff30:	mvn	r3, #996	; 0x3e4
   2ff34:	cmp	r1, r3
   2ff38:	beq	303c4 <__flatcc_fb_parse@@Base+0x93c>
   2ff3c:	mov	r3, #0
   2ff40:	mov	r1, r5
   2ff44:	str	r3, [sp]
   2ff48:	ldr	r2, [pc, #2864]	; 30a80 <__flatcc_fb_parse@@Base+0xff8>
   2ff4c:	mov	r0, r4
   2ff50:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   2ff54:	ldr	r5, [r4, #40]	; 0x28
   2ff58:	ldr	r3, [sp, #12]
   2ff5c:	cmp	r3, r5
   2ff60:	bne	30090 <__flatcc_fb_parse@@Base+0x608>
   2ff64:	ldr	r0, [r4, #108]	; 0x6c
   2ff68:	cmp	r0, #0
   2ff6c:	beq	32b64 <__flatcc_fb_parse@@Base+0x30dc>
   2ff70:	add	sp, sp, #36	; 0x24
   2ff74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ff78:	cmp	r1, #5
   2ff7c:	beq	308e0 <__flatcc_fb_parse@@Base+0xe58>
   2ff80:	bgt	3010c <__flatcc_fb_parse@@Base+0x684>
   2ff84:	ldr	r3, [pc, #2808]	; 30a84 <__flatcc_fb_parse@@Base+0xffc>
   2ff88:	cmp	r1, r3
   2ff8c:	beq	30878 <__flatcc_fb_parse@@Base+0xdf0>
   2ff90:	blt	302f8 <__flatcc_fb_parse@@Base+0x870>
   2ff94:	mvn	r3, #964	; 0x3c4
   2ff98:	cmp	r1, r3
   2ff9c:	bne	2ff3c <__flatcc_fb_parse@@Base+0x4b4>
   2ffa0:	ldr	r8, [r4, #24]
   2ffa4:	add	r6, r5, #20
   2ffa8:	cmp	r8, r6
   2ffac:	str	r6, [r4, #40]	; 0x28
   2ffb0:	beq	32e20 <__flatcc_fb_parse@@Base+0x3398>
   2ffb4:	ldr	r2, [r5, #36]	; 0x24
   2ffb8:	cmn	r2, #964	; 0x3c4
   2ffbc:	bne	305ec <__flatcc_fb_parse@@Base+0xb64>
   2ffc0:	ldr	r3, [r4, #52]	; 0x34
   2ffc4:	ldr	ip, [r4, #44]	; 0x2c
   2ffc8:	mov	r7, #1
   2ffcc:	mov	r5, #65536	; 0x10000
   2ffd0:	b	30004 <__flatcc_fb_parse@@Base+0x57c>
   2ffd4:	ldr	r0, [r4, #36]	; 0x24
   2ffd8:	add	r1, r6, #20
   2ffdc:	cmp	r1, r8
   2ffe0:	str	r3, [r4, #52]	; 0x34
   2ffe4:	stm	r2, {r0, r6}
   2ffe8:	str	r2, [r4, #36]	; 0x24
   2ffec:	str	r1, [r4, #40]	; 0x28
   2fff0:	beq	32e24 <__flatcc_fb_parse@@Base+0x339c>
   2fff4:	ldr	r2, [r1, #16]
   2fff8:	cmn	r2, #964	; 0x3c4
   2fffc:	bne	305f0 <__flatcc_fb_parse@@Base+0xb68>
   30000:	mov	r6, r1
   30004:	add	r1, r3, #16
   30008:	cmp	r1, ip
   3000c:	movls	r2, r3
   30010:	movls	r3, r1
   30014:	bls	2ffd4 <__flatcc_fb_parse@@Base+0x54c>
   30018:	mov	r1, r7
   3001c:	mov	r0, r5
   30020:	bl	13ea0 <calloc@plt>
   30024:	subs	r3, r0, #0
   30028:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   3002c:	ldr	r2, [r4, #48]	; 0x30
   30030:	add	ip, r3, #65536	; 0x10000
   30034:	str	r2, [r3]
   30038:	str	r3, [r4, #48]	; 0x30
   3003c:	add	r2, r3, #16
   30040:	str	ip, [r4, #44]	; 0x2c
   30044:	add	r3, r3, #32
   30048:	b	2ffd4 <__flatcc_fb_parse@@Base+0x54c>
   3004c:	ldr	r3, [pc, #2612]	; 30a88 <__flatcc_fb_parse@@Base+0x1000>
   30050:	cmp	r1, r3
   30054:	beq	30550 <__flatcc_fb_parse@@Base+0xac8>
   30058:	bgt	301f4 <__flatcc_fb_parse@@Base+0x76c>
   3005c:	sub	r3, r3, #1
   30060:	cmp	r1, r3
   30064:	bne	2ff3c <__flatcc_fb_parse@@Base+0x4b4>
   30068:	mov	r3, #0
   3006c:	mov	r1, r5
   30070:	str	r3, [sp]
   30074:	ldr	r2, [pc, #2576]	; 30a8c <__flatcc_fb_parse@@Base+0x1004>
   30078:	mov	r0, r4
   3007c:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   30080:	ldr	r5, [r4, #40]	; 0x28
   30084:	ldr	r3, [sp, #12]
   30088:	cmp	r3, r5
   3008c:	beq	2ff64 <__flatcc_fb_parse@@Base+0x4dc>
   30090:	ldr	r1, [r5, #16]
   30094:	ldr	r0, [r4, #108]	; 0x6c
   30098:	cmp	r1, #0
   3009c:	str	r5, [sp, #12]
   300a0:	bne	2fef4 <__flatcc_fb_parse@@Base+0x46c>
   300a4:	ldr	ip, [r4, #356]	; 0x164
   300a8:	cmp	ip, #0
   300ac:	beq	300d0 <__flatcc_fb_parse@@Base+0x648>
   300b0:	mov	r2, r1
   300b4:	b	300bc <__flatcc_fb_parse@@Base+0x634>
   300b8:	mov	ip, r3
   300bc:	ldr	r3, [ip]
   300c0:	str	r2, [ip]
   300c4:	cmp	r3, #0
   300c8:	mov	r2, ip
   300cc:	bne	300b8 <__flatcc_fb_parse@@Base+0x630>
   300d0:	ldr	r3, [r4, #392]	; 0x188
   300d4:	str	ip, [r4, #356]	; 0x164
   300d8:	cmp	r3, #0
   300dc:	beq	30100 <__flatcc_fb_parse@@Base+0x678>
   300e0:	mov	r1, #0
   300e4:	b	300ec <__flatcc_fb_parse@@Base+0x664>
   300e8:	mov	r3, r2
   300ec:	ldr	r2, [r3]
   300f0:	str	r1, [r3]
   300f4:	cmp	r2, #0
   300f8:	mov	r1, r3
   300fc:	bne	300e8 <__flatcc_fb_parse@@Base+0x660>
   30100:	str	r3, [r4, #392]	; 0x188
   30104:	add	sp, sp, #36	; 0x24
   30108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3010c:	cmp	r1, #27
   30110:	beq	30854 <__flatcc_fb_parse@@Base+0xdcc>
   30114:	cmp	r1, #123	; 0x7b
   30118:	beq	303a4 <__flatcc_fb_parse@@Base+0x91c>
   3011c:	cmp	r1, #7
   30120:	bne	2ff3c <__flatcc_fb_parse@@Base+0x4b4>
   30124:	mov	r3, #1
   30128:	mov	r1, r5
   3012c:	str	r3, [sp]
   30130:	ldr	r2, [pc, #2392]	; 30a90 <__flatcc_fb_parse@@Base+0x1008>
   30134:	ldr	r3, [pc, #2392]	; 30a94 <__flatcc_fb_parse@@Base+0x100c>
   30138:	mov	r0, r4
   3013c:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   30140:	ldr	r5, [r4, #40]	; 0x28
   30144:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   30148:	ldr	r9, [r4, #24]
   3014c:	add	r7, r5, #20
   30150:	cmp	r9, r7
   30154:	str	r7, [r4, #40]	; 0x28
   30158:	beq	32e34 <__flatcc_fb_parse@@Base+0x33ac>
   3015c:	ldr	sl, [r5, #36]	; 0x24
   30160:	ldr	r6, [r4, #52]	; 0x34
   30164:	cmn	sl, #964	; 0x3c4
   30168:	ldr	r1, [r4, #44]	; 0x2c
   3016c:	bne	30904 <__flatcc_fb_parse@@Base+0xe7c>
   30170:	mov	r8, #1
   30174:	mov	r5, #65536	; 0x10000
   30178:	b	301ac <__flatcc_fb_parse@@Base+0x724>
   3017c:	ldr	r2, [r4, #36]	; 0x24
   30180:	add	fp, r7, #20
   30184:	cmp	r9, fp
   30188:	str	r6, [r4, #52]	; 0x34
   3018c:	stm	r3, {r2, r7}
   30190:	str	r3, [r4, #36]	; 0x24
   30194:	str	fp, [r4, #40]	; 0x28
   30198:	beq	32d2c <__flatcc_fb_parse@@Base+0x32a4>
   3019c:	ldr	sl, [fp, #16]
   301a0:	cmn	sl, #964	; 0x3c4
   301a4:	bne	30908 <__flatcc_fb_parse@@Base+0xe80>
   301a8:	mov	r7, fp
   301ac:	add	r2, r6, #16
   301b0:	cmp	r2, r1
   301b4:	movls	r3, r6
   301b8:	movls	r6, r2
   301bc:	bls	3017c <__flatcc_fb_parse@@Base+0x6f4>
   301c0:	mov	r1, r8
   301c4:	mov	r0, r5
   301c8:	bl	13ea0 <calloc@plt>
   301cc:	cmp	r0, #0
   301d0:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   301d4:	ldr	r3, [r4, #48]	; 0x30
   301d8:	add	r1, r0, #65536	; 0x10000
   301dc:	str	r3, [r0]
   301e0:	str	r0, [r4, #48]	; 0x30
   301e4:	str	r1, [r4, #44]	; 0x2c
   301e8:	add	r3, r0, #16
   301ec:	add	r6, r0, #32
   301f0:	b	3017c <__flatcc_fb_parse@@Base+0x6f4>
   301f4:	mov	r0, r4
   301f8:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   301fc:	ldr	r5, [r4, #40]	; 0x28
   30200:	mov	r6, #0
   30204:	str	r6, [sp, #24]
   30208:	ldr	r3, [r5, #16]
   3020c:	cmp	r3, #59	; 0x3b
   30210:	beq	3296c <__flatcc_fb_parse@@Base+0x2ee4>
   30214:	cmp	r3, #9
   30218:	beq	32bbc <__flatcc_fb_parse@@Base+0x3134>
   3021c:	mov	r3, #0
   30220:	mov	r1, r5
   30224:	str	r3, [sp]
   30228:	ldr	r2, [pc, #2152]	; 30a98 <__flatcc_fb_parse@@Base+0x1010>
   3022c:	mov	r0, r4
   30230:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   30234:	ldr	r5, [r4, #40]	; 0x28
   30238:	mov	r7, #1
   3023c:	mov	r6, #65536	; 0x10000
   30240:	ldr	r3, [r5, #16]
   30244:	cmp	r3, #0
   30248:	beq	30084 <__flatcc_fb_parse@@Base+0x5fc>
   3024c:	cmp	r3, #59	; 0x3b
   30250:	beq	320c0 <__flatcc_fb_parse@@Base+0x2638>
   30254:	ldr	r9, [r4, #24]
   30258:	add	r8, r5, #20
   3025c:	cmp	r9, r8
   30260:	str	r8, [r4, #40]	; 0x28
   30264:	beq	32aa0 <__flatcc_fb_parse@@Base+0x3018>
   30268:	ldr	r3, [r5, #36]	; 0x24
   3026c:	cmn	r3, #964	; 0x3c4
   30270:	bne	32d58 <__flatcc_fb_parse@@Base+0x32d0>
   30274:	ldr	r0, [r4, #52]	; 0x34
   30278:	ldr	r1, [r4, #44]	; 0x2c
   3027c:	b	302b0 <__flatcc_fb_parse@@Base+0x828>
   30280:	ldr	r2, [r4, #36]	; 0x24
   30284:	add	r5, r8, #20
   30288:	cmp	r9, r5
   3028c:	str	r0, [r4, #52]	; 0x34
   30290:	stm	r3, {r2, r8}
   30294:	str	r3, [r4, #36]	; 0x24
   30298:	str	r5, [r4, #40]	; 0x28
   3029c:	beq	32aa4 <__flatcc_fb_parse@@Base+0x301c>
   302a0:	ldr	r3, [r5, #16]
   302a4:	cmn	r3, #964	; 0x3c4
   302a8:	bne	30240 <__flatcc_fb_parse@@Base+0x7b8>
   302ac:	mov	r8, r5
   302b0:	add	r2, r0, #16
   302b4:	cmp	r2, r1
   302b8:	movls	r3, r0
   302bc:	movls	r0, r2
   302c0:	bls	30280 <__flatcc_fb_parse@@Base+0x7f8>
   302c4:	mov	r1, r7
   302c8:	mov	r0, r6
   302cc:	bl	13ea0 <calloc@plt>
   302d0:	cmp	r0, #0
   302d4:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   302d8:	ldr	r3, [r4, #48]	; 0x30
   302dc:	add	r1, r0, #65536	; 0x10000
   302e0:	str	r3, [r0]
   302e4:	str	r0, [r4, #48]	; 0x30
   302e8:	add	r3, r0, #16
   302ec:	str	r1, [r4, #44]	; 0x2c
   302f0:	add	r0, r0, #32
   302f4:	b	30280 <__flatcc_fb_parse@@Base+0x7f8>
   302f8:	ldr	r9, [r4, #24]
   302fc:	add	r6, r5, #20
   30300:	cmp	r6, r9
   30304:	str	r6, [r4, #40]	; 0x28
   30308:	beq	32e20 <__flatcc_fb_parse@@Base+0x3398>
   3030c:	ldr	fp, [r5, #36]	; 0x24
   30310:	ldr	r8, [r4, #52]	; 0x34
   30314:	cmn	fp, #964	; 0x3c4
   30318:	ldr	r1, [r4, #44]	; 0x2c
   3031c:	bne	30678 <__flatcc_fb_parse@@Base+0xbf0>
   30320:	mov	r7, #1
   30324:	mov	r5, #65536	; 0x10000
   30328:	b	3035c <__flatcc_fb_parse@@Base+0x8d4>
   3032c:	ldr	r2, [r4, #36]	; 0x24
   30330:	add	sl, r6, #20
   30334:	cmp	sl, r9
   30338:	str	r8, [r4, #52]	; 0x34
   3033c:	stm	r3, {r2, r6}
   30340:	str	r3, [r4, #36]	; 0x24
   30344:	str	sl, [r4, #40]	; 0x28
   30348:	beq	32e24 <__flatcc_fb_parse@@Base+0x339c>
   3034c:	ldr	fp, [sl, #16]
   30350:	cmn	fp, #964	; 0x3c4
   30354:	bne	3067c <__flatcc_fb_parse@@Base+0xbf4>
   30358:	mov	r6, sl
   3035c:	add	r2, r8, #16
   30360:	cmp	r2, r1
   30364:	movls	r3, r8
   30368:	movls	r8, r2
   3036c:	bls	3032c <__flatcc_fb_parse@@Base+0x8a4>
   30370:	mov	r1, r7
   30374:	mov	r0, r5
   30378:	bl	13ea0 <calloc@plt>
   3037c:	cmp	r0, #0
   30380:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   30384:	ldr	r3, [r4, #48]	; 0x30
   30388:	add	r1, r0, #65536	; 0x10000
   3038c:	str	r3, [r0]
   30390:	str	r0, [r4, #48]	; 0x30
   30394:	str	r1, [r4, #44]	; 0x2c
   30398:	add	r3, r0, #16
   3039c:	add	r8, r0, #32
   303a0:	b	3032c <__flatcc_fb_parse@@Base+0x8a4>
   303a4:	mov	r3, #0
   303a8:	mov	r1, r5
   303ac:	str	r3, [sp]
   303b0:	ldr	r2, [pc, #1764]	; 30a9c <__flatcc_fb_parse@@Base+0x1014>
   303b4:	mov	r0, r4
   303b8:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   303bc:	ldr	r5, [r4, #40]	; 0x28
   303c0:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   303c4:	mov	r0, r4
   303c8:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   303cc:	ldr	r8, [r4, #52]	; 0x34
   303d0:	ldr	r3, [r4, #44]	; 0x2c
   303d4:	add	r0, r8, #128	; 0x80
   303d8:	cmp	r0, r3
   303dc:	bhi	31240 <__flatcc_fb_parse@@Base+0x17b8>
   303e0:	ldr	r3, [r4, #392]	; 0x188
   303e4:	str	r0, [r4, #52]	; 0x34
   303e8:	str	r3, [r8]
   303ec:	ldr	r3, [r4, #36]	; 0x24
   303f0:	ldr	r2, [r4, #544]	; 0x220
   303f4:	mov	r1, #3
   303f8:	cmp	r3, #0
   303fc:	strh	r1, [r8, #8]
   30400:	str	r8, [r4, #392]	; 0x188
   30404:	str	r2, [r8, #12]
   30408:	beq	3042c <__flatcc_fb_parse@@Base+0x9a4>
   3040c:	mov	r1, #0
   30410:	b	30418 <__flatcc_fb_parse@@Base+0x990>
   30414:	mov	r3, r2
   30418:	ldr	r2, [r3]
   3041c:	str	r1, [r3]
   30420:	cmp	r2, #0
   30424:	mov	r1, r3
   30428:	bne	30414 <__flatcc_fb_parse@@Base+0x98c>
   3042c:	ldr	r6, [r4, #40]	; 0x28
   30430:	str	r3, [r8, #32]
   30434:	mov	r5, #0
   30438:	ldr	r3, [r6, #16]
   3043c:	str	r5, [r4, #36]	; 0x24
   30440:	cmp	r3, #9
   30444:	bne	31484 <__flatcc_fb_parse@@Base+0x19fc>
   30448:	mov	r0, r4
   3044c:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   30450:	ldr	r3, [r4, #40]	; 0x28
   30454:	str	r6, [r8, #4]
   30458:	ldr	r3, [r3, #16]
   3045c:	cmp	r3, #58	; 0x3a
   30460:	beq	31930 <__flatcc_fb_parse@@Base+0x1ea8>
   30464:	mov	r0, r4
   30468:	bl	2f110 <__flatcc_error_report@@Base+0x9e4>
   3046c:	ldr	r3, [r4, #40]	; 0x28
   30470:	str	r3, [sp, #20]
   30474:	ldr	r3, [r3, #16]
   30478:	cmp	r3, #123	; 0x7b
   3047c:	str	r0, [r8, #28]
   30480:	bne	31750 <__flatcc_fb_parse@@Base+0x1cc8>
   30484:	mov	r0, r4
   30488:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   3048c:	ldr	sl, [r4, #40]	; 0x28
   30490:	ldr	r3, [sl, #16]
   30494:	cmp	r3, #9
   30498:	bne	31ad8 <__flatcc_fb_parse@@Base+0x2050>
   3049c:	ldr	r9, [r4, #24]
   304a0:	mov	r7, #1
   304a4:	mov	r6, #65536	; 0x10000
   304a8:	add	fp, sl, #20
   304ac:	cmp	fp, r9
   304b0:	str	fp, [r4, #40]	; 0x28
   304b4:	beq	32e3c <__flatcc_fb_parse@@Base+0x33b4>
   304b8:	ldr	r3, [sl, #36]	; 0x24
   304bc:	cmn	r3, #964	; 0x3c4
   304c0:	bne	3198c <__flatcc_fb_parse@@Base+0x1f04>
   304c4:	ldr	r0, [r4, #52]	; 0x34
   304c8:	ldr	r1, [r4, #44]	; 0x2c
   304cc:	b	30500 <__flatcc_fb_parse@@Base+0xa78>
   304d0:	ldr	r2, [r4, #36]	; 0x24
   304d4:	add	r5, fp, #20
   304d8:	cmp	r9, r5
   304dc:	str	r0, [r4, #52]	; 0x34
   304e0:	stm	r3, {r2, fp}
   304e4:	str	r3, [r4, #36]	; 0x24
   304e8:	str	r5, [r4, #40]	; 0x28
   304ec:	beq	31108 <__flatcc_fb_parse@@Base+0x1680>
   304f0:	ldr	r3, [r5, #16]
   304f4:	cmn	r3, #964	; 0x3c4
   304f8:	bne	31990 <__flatcc_fb_parse@@Base+0x1f08>
   304fc:	mov	fp, r5
   30500:	add	r2, r0, #16
   30504:	cmp	r2, r1
   30508:	movls	r3, r0
   3050c:	movls	r0, r2
   30510:	bls	304d0 <__flatcc_fb_parse@@Base+0xa48>
   30514:	mov	r1, r7
   30518:	mov	r0, r6
   3051c:	bl	13ea0 <calloc@plt>
   30520:	cmp	r0, #0
   30524:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   30528:	ldr	r3, [r4, #48]	; 0x30
   3052c:	add	r1, r0, #65536	; 0x10000
   30530:	str	r3, [r0]
   30534:	str	r0, [r4, #48]	; 0x30
   30538:	add	r3, r0, #16
   3053c:	str	r1, [r4, #44]	; 0x2c
   30540:	add	r0, r0, #32
   30544:	b	304d0 <__flatcc_fb_parse@@Base+0xa48>
   30548:	mov	r5, fp
   3054c:	b	2fb3c <__flatcc_fb_parse@@Base+0xb4>
   30550:	mov	r0, r4
   30554:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   30558:	ldr	r5, [r4, #52]	; 0x34
   3055c:	ldr	r3, [r4, #44]	; 0x2c
   30560:	add	r0, r5, #32
   30564:	cmp	r0, r3
   30568:	bhi	3120c <__flatcc_fb_parse@@Base+0x1784>
   3056c:	ldr	r6, [r4, #40]	; 0x28
   30570:	ldr	r2, [r4, #356]	; 0x164
   30574:	str	r0, [r4, #52]	; 0x34
   30578:	ldr	r3, [r6, #16]
   3057c:	str	r2, [r5]
   30580:	cmp	r3, #19
   30584:	str	r5, [r4, #356]	; 0x164
   30588:	bne	3165c <__flatcc_fb_parse@@Base+0x1bd4>
   3058c:	mov	r0, r4
   30590:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   30594:	add	r1, r5, #8
   30598:	mov	r0, r4
   3059c:	bl	2db94 <__flatcc_fb_print_error@@Base+0x48c>
   305a0:	ldr	r3, [r5, #12]
   305a4:	cmp	r3, #0
   305a8:	bne	305c0 <__flatcc_fb_parse@@Base+0xb38>
   305ac:	str	r3, [sp]
   305b0:	mov	r1, r6
   305b4:	ldr	r2, [pc, #1252]	; 30aa0 <__flatcc_fb_parse@@Base+0x1018>
   305b8:	mov	r0, r4
   305bc:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   305c0:	ldr	r1, [r4, #40]	; 0x28
   305c4:	ldr	r3, [r1, #16]
   305c8:	cmp	r3, #59	; 0x3b
   305cc:	beq	30668 <__flatcc_fb_parse@@Base+0xbe0>
   305d0:	mov	r3, #0
   305d4:	str	r3, [sp]
   305d8:	ldr	r2, [pc, #1220]	; 30aa4 <__flatcc_fb_parse@@Base+0x101c>
   305dc:	mov	r0, r4
   305e0:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   305e4:	ldr	r5, [r4, #40]	; 0x28
   305e8:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   305ec:	mov	r1, r6
   305f0:	add	r5, r4, #360	; 0x168
   305f4:	ldrh	r3, [r5, #8]
   305f8:	cmp	r3, #0
   305fc:	bne	31274 <__flatcc_fb_parse@@Base+0x17ec>
   30600:	cmp	r2, #19
   30604:	bne	31568 <__flatcc_fb_parse@@Base+0x1ae0>
   30608:	mov	r0, r4
   3060c:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   30610:	mov	r1, r5
   30614:	mov	r0, r4
   30618:	ldr	r6, [r4, #40]	; 0x28
   3061c:	bl	2db94 <__flatcc_fb_print_error@@Base+0x48c>
   30620:	ldr	r3, [r4, #360]	; 0x168
   30624:	cmp	r3, #0
   30628:	beq	30658 <__flatcc_fb_parse@@Base+0xbd0>
   3062c:	ldr	r3, [r4, #364]	; 0x16c
   30630:	cmp	r3, #4
   30634:	beq	30658 <__flatcc_fb_parse@@Base+0xbd0>
   30638:	mov	r2, #1
   3063c:	mov	r3, #0
   30640:	strh	r2, [r5, #8]
   30644:	mov	r1, r6
   30648:	str	r3, [sp]
   3064c:	ldr	r2, [pc, #1108]	; 30aa8 <__flatcc_fb_parse@@Base+0x1020>
   30650:	mov	r0, r4
   30654:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   30658:	ldr	r1, [r4, #40]	; 0x28
   3065c:	ldr	r3, [r1, #16]
   30660:	cmp	r3, #59	; 0x3b
   30664:	bne	31640 <__flatcc_fb_parse@@Base+0x1bb8>
   30668:	mov	r0, r4
   3066c:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   30670:	ldr	r5, [r4, #40]	; 0x28
   30674:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   30678:	mov	sl, r6
   3067c:	add	r0, r8, #128	; 0x80
   30680:	cmp	r0, r1
   30684:	bhi	311d8 <__flatcc_fb_parse@@Base+0x1750>
   30688:	ldr	r3, [r4, #392]	; 0x188
   3068c:	str	r0, [r4, #52]	; 0x34
   30690:	str	r3, [r8]
   30694:	ldr	r2, [r4, #36]	; 0x24
   30698:	ldr	r3, [r4, #544]	; 0x220
   3069c:	mov	r1, #2
   306a0:	cmp	r2, #0
   306a4:	strh	r1, [r8, #8]
   306a8:	str	r8, [r4, #392]	; 0x188
   306ac:	str	r3, [r8, #12]
   306b0:	beq	306d4 <__flatcc_fb_parse@@Base+0xc4c>
   306b4:	mov	r1, #0
   306b8:	b	306c0 <__flatcc_fb_parse@@Base+0xc38>
   306bc:	mov	r2, r3
   306c0:	ldr	r3, [r2]
   306c4:	str	r1, [r2]
   306c8:	cmp	r3, #0
   306cc:	mov	r1, r2
   306d0:	bne	306bc <__flatcc_fb_parse@@Base+0xc34>
   306d4:	mov	r5, #0
   306d8:	cmp	fp, #9
   306dc:	str	r2, [r8, #32]
   306e0:	str	r5, [r4, #36]	; 0x24
   306e4:	bne	31770 <__flatcc_fb_parse@@Base+0x1ce8>
   306e8:	mov	r0, r4
   306ec:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   306f0:	cmp	sl, r5
   306f4:	beq	32c88 <__flatcc_fb_parse@@Base+0x3200>
   306f8:	str	sl, [r8, #4]
   306fc:	mov	r0, r4
   30700:	bl	2f110 <__flatcc_error_report@@Base+0x9e4>
   30704:	ldr	r1, [r4, #40]	; 0x28
   30708:	ldr	r3, [r1, #16]
   3070c:	cmp	r3, #123	; 0x7b
   30710:	str	r0, [r8, #28]
   30714:	bne	32b44 <__flatcc_fb_parse@@Base+0x30bc>
   30718:	mov	r0, r4
   3071c:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   30720:	ldr	r5, [r4, #40]	; 0x28
   30724:	str	r8, [sp, #16]
   30728:	ldr	sl, [r5, #16]
   3072c:	cmp	sl, #125	; 0x7d
   30730:	beq	32d20 <__flatcc_fb_parse@@Base+0x3298>
   30734:	mov	r6, #1
   30738:	ldr	r9, [r4, #52]	; 0x34
   3073c:	ldr	r3, [r4, #44]	; 0x2c
   30740:	add	r0, r9, #128	; 0x80
   30744:	cmp	r0, r3
   30748:	bhi	3208c <__flatcc_fb_parse@@Base+0x2604>
   3074c:	ldr	r1, [sp, #16]
   30750:	mov	r3, #5
   30754:	ldr	r2, [r1, #20]
   30758:	str	r0, [r4, #52]	; 0x34
   3075c:	str	r2, [r9]
   30760:	strh	r3, [r9, #8]
   30764:	str	r9, [r1, #20]
   30768:	ldr	r2, [r4, #36]	; 0x24
   3076c:	mov	r3, r1
   30770:	cmp	r2, #0
   30774:	beq	30798 <__flatcc_fb_parse@@Base+0xd10>
   30778:	mov	r1, #0
   3077c:	b	30784 <__flatcc_fb_parse@@Base+0xcfc>
   30780:	mov	r2, r3
   30784:	ldr	r3, [r2]
   30788:	str	r1, [r2]
   3078c:	cmp	r3, #0
   30790:	mov	r1, r2
   30794:	bne	30780 <__flatcc_fb_parse@@Base+0xcf8>
   30798:	mov	fp, #0
   3079c:	cmp	sl, #9
   307a0:	str	r2, [r9, #68]	; 0x44
   307a4:	str	fp, [r4, #36]	; 0x24
   307a8:	bne	32950 <__flatcc_fb_parse@@Base+0x2ec8>
   307ac:	ldr	r8, [r4, #24]
   307b0:	add	r7, r5, #20
   307b4:	cmp	r7, r8
   307b8:	str	r7, [r4, #40]	; 0x28
   307bc:	beq	32e34 <__flatcc_fb_parse@@Base+0x33ac>
   307c0:	ldr	lr, [r5, #36]	; 0x24
   307c4:	cmn	lr, #964	; 0x3c4
   307c8:	bne	31dbc <__flatcc_fb_parse@@Base+0x2334>
   307cc:	ldr	ip, [r4, #44]	; 0x2c
   307d0:	mov	sl, #65536	; 0x10000
   307d4:	b	3080c <__flatcc_fb_parse@@Base+0xd84>
   307d8:	add	r1, r7, #20
   307dc:	cmp	r8, r1
   307e0:	str	r0, [r4, #52]	; 0x34
   307e4:	str	r7, [r3, #4]
   307e8:	str	fp, [r3]
   307ec:	str	r3, [r4, #36]	; 0x24
   307f0:	str	r1, [r4, #40]	; 0x28
   307f4:	beq	32d2c <__flatcc_fb_parse@@Base+0x32a4>
   307f8:	ldr	lr, [r1, #16]
   307fc:	cmn	lr, #964	; 0x3c4
   30800:	bne	31dc0 <__flatcc_fb_parse@@Base+0x2338>
   30804:	mov	fp, r3
   30808:	mov	r7, r1
   3080c:	add	r2, r0, #16
   30810:	cmp	r2, ip
   30814:	movls	r3, r0
   30818:	movls	r0, r2
   3081c:	bls	307d8 <__flatcc_fb_parse@@Base+0xd50>
   30820:	mov	r1, r6
   30824:	mov	r0, sl
   30828:	bl	13ea0 <calloc@plt>
   3082c:	cmp	r0, #0
   30830:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   30834:	ldr	r3, [r4, #48]	; 0x30
   30838:	add	ip, r0, #65536	; 0x10000
   3083c:	str	r3, [r0]
   30840:	str	r0, [r4, #48]	; 0x30
   30844:	add	r3, r0, #16
   30848:	str	ip, [r4, #44]	; 0x2c
   3084c:	add	r0, r0, #32
   30850:	b	307d8 <__flatcc_fb_parse@@Base+0xd50>
   30854:	mov	r3, #5
   30858:	mov	r1, r5
   3085c:	str	r3, [sp]
   30860:	ldr	r2, [pc, #580]	; 30aac <__flatcc_fb_parse@@Base+0x1024>
   30864:	ldr	r3, [pc, #580]	; 30ab0 <__flatcc_fb_parse@@Base+0x1028>
   30868:	mov	r0, r4
   3086c:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   30870:	ldr	r5, [r4, #40]	; 0x28
   30874:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   30878:	add	r5, r4, #376	; 0x178
   3087c:	mov	r0, r4
   30880:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   30884:	ldrh	r3, [r5, #8]
   30888:	cmp	r3, #2
   3088c:	beq	32cac <__flatcc_fb_parse@@Base+0x3224>
   30890:	ldr	r1, [r4, #40]	; 0x28
   30894:	ldr	r3, [r1, #16]
   30898:	cmp	r3, #19
   3089c:	bne	31678 <__flatcc_fb_parse@@Base+0x1bf0>
   308a0:	mov	r0, r4
   308a4:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   308a8:	mov	r1, r5
   308ac:	mov	r0, r4
   308b0:	bl	2db94 <__flatcc_fb_print_error@@Base+0x48c>
   308b4:	ldr	r1, [r4, #40]	; 0x28
   308b8:	ldr	r3, [r1, #16]
   308bc:	cmp	r3, #59	; 0x3b
   308c0:	beq	30668 <__flatcc_fb_parse@@Base+0xbe0>
   308c4:	mov	r3, #0
   308c8:	str	r3, [sp]
   308cc:	ldr	r2, [pc, #480]	; 30ab4 <__flatcc_fb_parse@@Base+0x102c>
   308d0:	mov	r0, r4
   308d4:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   308d8:	ldr	r5, [r4, #40]	; 0x28
   308dc:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   308e0:	mov	r3, #1
   308e4:	mov	r1, r5
   308e8:	str	r3, [sp]
   308ec:	ldr	r2, [pc, #452]	; 30ab8 <__flatcc_fb_parse@@Base+0x1030>
   308f0:	ldr	r3, [pc, #412]	; 30a94 <__flatcc_fb_parse@@Base+0x100c>
   308f4:	mov	r0, r4
   308f8:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   308fc:	ldr	r5, [r4, #40]	; 0x28
   30900:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   30904:	mov	fp, r7
   30908:	add	r0, r6, #128	; 0x80
   3090c:	cmp	r1, r0
   30910:	bcc	31134 <__flatcc_fb_parse@@Base+0x16ac>
   30914:	ldr	r3, [r4, #392]	; 0x188
   30918:	str	r0, [r4, #52]	; 0x34
   3091c:	str	r3, [r6]
   30920:	ldr	r3, [r4, #36]	; 0x24
   30924:	ldr	r2, [r4, #544]	; 0x220
   30928:	mov	r1, #4
   3092c:	cmp	r3, #0
   30930:	strh	r1, [r6, #8]
   30934:	str	r6, [r4, #392]	; 0x188
   30938:	str	r2, [r6, #12]
   3093c:	beq	30960 <__flatcc_fb_parse@@Base+0xed8>
   30940:	mov	r1, #0
   30944:	b	3094c <__flatcc_fb_parse@@Base+0xec4>
   30948:	mov	r3, r2
   3094c:	ldr	r2, [r3]
   30950:	str	r1, [r3]
   30954:	cmp	r2, #0
   30958:	mov	r1, r3
   3095c:	bne	30948 <__flatcc_fb_parse@@Base+0xec0>
   30960:	cmp	sl, #9
   30964:	mov	sl, #0
   30968:	str	r3, [r6, #32]
   3096c:	str	sl, [r4, #36]	; 0x24
   30970:	bne	31398 <__flatcc_fb_parse@@Base+0x1910>
   30974:	mov	r0, r4
   30978:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   3097c:	cmp	fp, sl
   30980:	str	fp, [r6, #4]
   30984:	beq	32c44 <__flatcc_fb_parse@@Base+0x31bc>
   30988:	mov	r0, r4
   3098c:	bl	2f110 <__flatcc_error_report@@Base+0x9e4>
   30990:	ldr	r3, [r4, #40]	; 0x28
   30994:	str	r3, [sp, #16]
   30998:	ldr	r3, [r3, #16]
   3099c:	cmp	r3, #123	; 0x7b
   309a0:	str	r0, [r6, #28]
   309a4:	bne	32b20 <__flatcc_fb_parse@@Base+0x3098>
   309a8:	mov	r0, r4
   309ac:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   309b0:	ldr	r5, [r4, #40]	; 0x28
   309b4:	ldr	r3, [r5, #16]
   309b8:	cmp	r3, #9
   309bc:	bne	32c20 <__flatcc_fb_parse@@Base+0x3198>
   309c0:	ldr	r2, [r4, #108]	; 0x6c
   309c4:	cmp	r2, #9
   309c8:	movle	r9, #1
   309cc:	movle	r8, #65536	; 0x10000
   309d0:	bgt	313bc <__flatcc_fb_parse@@Base+0x1934>
   309d4:	ldr	r7, [r4, #52]	; 0x34
   309d8:	ldr	r2, [r4, #44]	; 0x2c
   309dc:	add	r3, r7, #128	; 0x80
   309e0:	cmp	r3, r2
   309e4:	bhi	31eac <__flatcc_fb_parse@@Base+0x2424>
   309e8:	ldr	r2, [r6, #20]
   309ec:	str	r3, [r4, #52]	; 0x34
   309f0:	mov	r3, #5
   309f4:	str	r2, [r7]
   309f8:	strh	r3, [r7, #8]
   309fc:	str	r7, [r6, #20]
   30a00:	ldr	r3, [r4, #36]	; 0x24
   30a04:	cmp	r3, #0
   30a08:	beq	30a2c <__flatcc_fb_parse@@Base+0xfa4>
   30a0c:	mov	r1, sl
   30a10:	b	30a18 <__flatcc_fb_parse@@Base+0xf90>
   30a14:	mov	r3, r2
   30a18:	ldr	r2, [r3]
   30a1c:	str	r1, [r3]
   30a20:	cmp	r2, #0
   30a24:	mov	r1, r3
   30a28:	bne	30a14 <__flatcc_fb_parse@@Base+0xf8c>
   30a2c:	str	r3, [r7, #68]	; 0x44
   30a30:	mov	r0, r4
   30a34:	add	r1, sp, #28
   30a38:	str	sl, [r4, #36]	; 0x24
   30a3c:	bl	2d860 <__flatcc_fb_print_error@@Base+0x158>
   30a40:	ldr	r2, [sp, #28]
   30a44:	mov	r3, #12
   30a48:	str	r2, [r7, #16]
   30a4c:	ldr	r0, [r2]
   30a50:	strh	r3, [r7, #24]
   30a54:	cmp	r0, #0
   30a58:	beq	30b1c <__flatcc_fb_parse@@Base+0x1094>
   30a5c:	mov	r2, r0
   30a60:	b	30b0c <__flatcc_fb_parse@@Base+0x1084>
   30a64:			; <UNDEFINED> instruction: 0xfffffc2a
   30a68:	muleq	r5, r8, fp
   30a6c:	andeq	r9, r5, r0, rrx
   30a70:			; <UNDEFINED> instruction: 0xfffffc35
   30a74:	andeq	r9, r5, r8, rrx
   30a78:	andeq	r9, r5, r0, lsr #1
   30a7c:	ldrdeq	r9, [r5], -r0
   30a80:	strdeq	r9, [r5], -r8
   30a84:			; <UNDEFINED> instruction: 0xfffffc3a
   30a88:			; <UNDEFINED> instruction: 0xfffffc36
   30a8c:	andeq	r9, r5, r0, ror #11
   30a90:			; <UNDEFINED> instruction: 0x000596b0
   30a94:	andeq	r8, r5, r4, lsr #25
   30a98:	strdeq	r9, [r5], -r0
   30a9c:	andeq	r9, r5, r8, lsl r6
   30aa0:	andeq	r9, r5, r8, lsl #5
   30aa4:	andeq	r9, r5, r8, lsr #5
   30aa8:	ldrdeq	r9, [r5], -ip
   30aac:	andeq	r9, r5, r0, ror #13
   30ab0:	ldrdeq	r9, [r5], -r8
   30ab4:	andeq	r9, r5, ip, ror r1
   30ab8:	andeq	r9, r5, ip, ror r6
   30abc:	andeq	r9, r5, r4, lsr #4
   30ac0:	andeq	r9, r5, ip, lsr r2
   30ac4:	andeq	r8, r5, r4, lsl #20
   30ac8:	andeq	r0, r0, r5, asr r1
   30acc:	andeq	r8, r5, ip, lsr #22
   30ad0:	andeq	sl, r4, r4, asr sp
   30ad4:	muleq	r5, r8, r1
   30ad8:	andeq	r9, r5, r4, ror #5
   30adc:	andeq	r9, r5, ip, lsl r5
   30ae0:	andeq	r9, r5, ip, ror r4
   30ae4:			; <UNDEFINED> instruction: 0x000591b4
   30ae8:	andeq	r9, r5, r4, lsl #4
   30aec:	andeq	r9, r5, r4, ror #4
   30af0:	andeq	r9, r5, r4, asr r1
   30af4:			; <UNDEFINED> instruction: 0x000594bc
   30af8:	andeq	r9, r5, r0, asr #5
   30afc:	eoreq	r0, r0, r3, lsl #16
   30b00:	andeq	r9, r5, r4, lsr #9
   30b04:	ldrdeq	r9, [r5], -ip
   30b08:	mov	r2, r3
   30b0c:	ldr	r3, [r2]
   30b10:	cmp	r3, #0
   30b14:	bne	30b08 <__flatcc_fb_parse@@Base+0x1080>
   30b18:	str	r2, [sp, #28]
   30b1c:	ldr	r1, [r4, #40]	; 0x28
   30b20:	ldr	r2, [r2, #4]
   30b24:	ldr	r3, [r1, #16]
   30b28:	str	r2, [r7, #4]
   30b2c:	cmp	r3, #58	; 0x3a
   30b30:	beq	326bc <__flatcc_fb_parse@@Base+0x2c34>
   30b34:	cmp	r3, #61	; 0x3d
   30b38:	beq	32528 <__flatcc_fb_parse@@Base+0x2aa0>
   30b3c:	cmp	r3, #44	; 0x2c
   30b40:	bne	325f4 <__flatcc_fb_parse@@Base+0x2b6c>
   30b44:	ldr	fp, [r4, #24]
   30b48:	add	r7, r1, #20
   30b4c:	cmp	fp, r7
   30b50:	str	r7, [r4, #40]	; 0x28
   30b54:	beq	32d28 <__flatcc_fb_parse@@Base+0x32a0>
   30b58:	ldr	r3, [r1, #36]	; 0x24
   30b5c:	cmn	r3, #964	; 0x3c4
   30b60:	bne	31af8 <__flatcc_fb_parse@@Base+0x2070>
   30b64:	ldr	r0, [r4, #52]	; 0x34
   30b68:	ldr	r1, [r4, #44]	; 0x2c
   30b6c:	b	30ba0 <__flatcc_fb_parse@@Base+0x1118>
   30b70:	ldr	r2, [r4, #36]	; 0x24
   30b74:	add	r5, r7, #20
   30b78:	cmp	fp, r5
   30b7c:	str	r0, [r4, #52]	; 0x34
   30b80:	stm	r3, {r2, r7}
   30b84:	str	r3, [r4, #36]	; 0x24
   30b88:	str	r5, [r4, #40]	; 0x28
   30b8c:	beq	32d2c <__flatcc_fb_parse@@Base+0x32a4>
   30b90:	ldr	r3, [r5, #16]
   30b94:	cmn	r3, #964	; 0x3c4
   30b98:	bne	31afc <__flatcc_fb_parse@@Base+0x2074>
   30b9c:	mov	r7, r5
   30ba0:	add	r2, r0, #16
   30ba4:	cmp	r2, r1
   30ba8:	movls	r3, r0
   30bac:	movls	r0, r2
   30bb0:	bls	30b70 <__flatcc_fb_parse@@Base+0x10e8>
   30bb4:	mov	r1, r9
   30bb8:	mov	r0, r8
   30bbc:	bl	13ea0 <calloc@plt>
   30bc0:	cmp	r0, #0
   30bc4:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   30bc8:	ldr	r3, [r4, #48]	; 0x30
   30bcc:	add	r1, r0, #65536	; 0x10000
   30bd0:	str	r3, [r0]
   30bd4:	str	r0, [r4, #48]	; 0x30
   30bd8:	add	r3, r0, #16
   30bdc:	str	r1, [r4, #44]	; 0x2c
   30be0:	add	r0, r0, #32
   30be4:	b	30b70 <__flatcc_fb_parse@@Base+0x10e8>
   30be8:	mov	r0, r4
   30bec:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   30bf0:	ldr	r3, [r4, #52]	; 0x34
   30bf4:	mov	r2, r3
   30bf8:	str	r3, [sp, #16]
   30bfc:	ldr	r3, [r4, #44]	; 0x2c
   30c00:	add	r0, r2, #128	; 0x80
   30c04:	cmp	r0, r3
   30c08:	bhi	31168 <__flatcc_fb_parse@@Base+0x16e0>
   30c0c:	str	r0, [r4, #52]	; 0x34
   30c10:	ldr	r0, [sp, #16]
   30c14:	ldr	r3, [r4, #392]	; 0x188
   30c18:	mov	r1, #0
   30c1c:	str	r3, [r0]
   30c20:	ldr	r2, [r4, #36]	; 0x24
   30c24:	ldr	r3, [r4, #544]	; 0x220
   30c28:	cmp	r2, #0
   30c2c:	strh	r1, [r0, #8]
   30c30:	str	r0, [r4, #392]	; 0x188
   30c34:	str	r3, [r0, #12]
   30c38:	bne	30c44 <__flatcc_fb_parse@@Base+0x11bc>
   30c3c:	b	30c58 <__flatcc_fb_parse@@Base+0x11d0>
   30c40:	mov	r2, r3
   30c44:	ldr	r3, [r2]
   30c48:	str	r1, [r2]
   30c4c:	cmp	r3, #0
   30c50:	mov	r1, r2
   30c54:	bne	30c40 <__flatcc_fb_parse@@Base+0x11b8>
   30c58:	ldr	r6, [r4, #40]	; 0x28
   30c5c:	ldr	r7, [sp, #16]
   30c60:	mov	r5, #0
   30c64:	ldr	r3, [r6, #16]
   30c68:	str	r2, [r7, #32]
   30c6c:	cmp	r3, #9
   30c70:	str	r5, [r4, #36]	; 0x24
   30c74:	bne	31298 <__flatcc_fb_parse@@Base+0x1810>
   30c78:	mov	r0, r4
   30c7c:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   30c80:	str	r6, [r7, #4]
   30c84:	mov	r0, r4
   30c88:	bl	2f110 <__flatcc_error_report@@Base+0x9e4>
   30c8c:	ldr	r1, [r4, #40]	; 0x28
   30c90:	ldr	r3, [r1, #16]
   30c94:	cmp	r3, #123	; 0x7b
   30c98:	str	r0, [r7, #28]
   30c9c:	bne	31378 <__flatcc_fb_parse@@Base+0x18f0>
   30ca0:	mov	r0, r4
   30ca4:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   30ca8:	ldr	r5, [r4, #40]	; 0x28
   30cac:	mov	r7, #1
   30cb0:	mov	r6, #65536	; 0x10000
   30cb4:	ldr	fp, [r5, #16]
   30cb8:	cmp	fp, #125	; 0x7d
   30cbc:	beq	329e8 <__flatcc_fb_parse@@Base+0x2f60>
   30cc0:	ldr	r8, [r4, #52]	; 0x34
   30cc4:	ldr	r3, [r4, #44]	; 0x2c
   30cc8:	add	r0, r8, #128	; 0x80
   30ccc:	cmp	r0, r3
   30cd0:	bhi	31fa4 <__flatcc_fb_parse@@Base+0x251c>
   30cd4:	ldr	r2, [sp, #16]
   30cd8:	ldr	r3, [r2, #20]
   30cdc:	str	r0, [r4, #52]	; 0x34
   30ce0:	str	r3, [r8]
   30ce4:	mov	r3, #5
   30ce8:	strh	r3, [r8, #8]
   30cec:	str	r8, [r2, #20]
   30cf0:	ldr	r3, [r4, #36]	; 0x24
   30cf4:	cmp	r3, #0
   30cf8:	beq	30d1c <__flatcc_fb_parse@@Base+0x1294>
   30cfc:	mov	r1, #0
   30d00:	b	30d08 <__flatcc_fb_parse@@Base+0x1280>
   30d04:	mov	r3, r2
   30d08:	ldr	r2, [r3]
   30d0c:	str	r1, [r3]
   30d10:	cmp	r2, #0
   30d14:	mov	r1, r3
   30d18:	bne	30d04 <__flatcc_fb_parse@@Base+0x127c>
   30d1c:	str	r3, [r8, #68]	; 0x44
   30d20:	cmp	fp, #9
   30d24:	mov	r3, #0
   30d28:	str	r3, [r4, #36]	; 0x24
   30d2c:	bne	320d8 <__flatcc_fb_parse@@Base+0x2650>
   30d30:	ldr	r9, [r4, #24]
   30d34:	add	fp, r5, #20
   30d38:	cmp	r9, fp
   30d3c:	str	fp, [r4, #40]	; 0x28
   30d40:	beq	32e2c <__flatcc_fb_parse@@Base+0x33a4>
   30d44:	ldr	lr, [r5, #36]	; 0x24
   30d48:	cmn	lr, #964	; 0x3c4
   30d4c:	bne	31bf0 <__flatcc_fb_parse@@Base+0x2168>
   30d50:	ldr	ip, [r4, #44]	; 0x2c
   30d54:	mov	sl, r3
   30d58:	b	30d8c <__flatcc_fb_parse@@Base+0x1304>
   30d5c:	add	r1, fp, #20
   30d60:	cmp	r9, r1
   30d64:	str	r0, [r4, #52]	; 0x34
   30d68:	stm	r3, {sl, fp}
   30d6c:	str	r3, [r4, #36]	; 0x24
   30d70:	str	r1, [r4, #40]	; 0x28
   30d74:	beq	31108 <__flatcc_fb_parse@@Base+0x1680>
   30d78:	ldr	lr, [r1, #16]
   30d7c:	cmn	lr, #964	; 0x3c4
   30d80:	bne	31bf4 <__flatcc_fb_parse@@Base+0x216c>
   30d84:	mov	sl, r3
   30d88:	mov	fp, r1
   30d8c:	add	r2, r0, #16
   30d90:	cmp	r2, ip
   30d94:	movls	r3, r0
   30d98:	movls	r0, r2
   30d9c:	bls	30d5c <__flatcc_fb_parse@@Base+0x12d4>
   30da0:	mov	r1, r7
   30da4:	mov	r0, r6
   30da8:	bl	13ea0 <calloc@plt>
   30dac:	cmp	r0, #0
   30db0:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   30db4:	ldr	r3, [r4, #48]	; 0x30
   30db8:	add	ip, r0, #65536	; 0x10000
   30dbc:	str	r3, [r0]
   30dc0:	str	r0, [r4, #48]	; 0x30
   30dc4:	add	r3, r0, #16
   30dc8:	str	ip, [r4, #44]	; 0x2c
   30dcc:	add	r0, r0, #32
   30dd0:	b	30d5c <__flatcc_fb_parse@@Base+0x12d4>
   30dd4:	ldr	r8, [r4, #24]
   30dd8:	add	r6, r5, #20
   30ddc:	cmp	r6, r8
   30de0:	str	r6, [r4, #40]	; 0x28
   30de4:	beq	32e20 <__flatcc_fb_parse@@Base+0x3398>
   30de8:	ldr	sl, [r5, #36]	; 0x24
   30dec:	ldr	r3, [r4, #52]	; 0x34
   30df0:	cmn	sl, #964	; 0x3c4
   30df4:	bne	32d34 <__flatcc_fb_parse@@Base+0x32ac>
   30df8:	ldr	r1, [r4, #44]	; 0x2c
   30dfc:	mov	r7, #1
   30e00:	mov	r5, #65536	; 0x10000
   30e04:	b	30e38 <__flatcc_fb_parse@@Base+0x13b0>
   30e08:	ldr	r0, [r4, #36]	; 0x24
   30e0c:	add	r9, r6, #20
   30e10:	cmp	r9, r8
   30e14:	str	r3, [r4, #52]	; 0x34
   30e18:	stm	r2, {r0, r6}
   30e1c:	str	r2, [r4, #36]	; 0x24
   30e20:	str	r9, [r4, #40]	; 0x28
   30e24:	beq	32e24 <__flatcc_fb_parse@@Base+0x339c>
   30e28:	ldr	sl, [r9, #16]
   30e2c:	cmn	sl, #964	; 0x3c4
   30e30:	bne	30f00 <__flatcc_fb_parse@@Base+0x1478>
   30e34:	mov	r6, r9
   30e38:	add	r0, r3, #16
   30e3c:	cmp	r0, r1
   30e40:	movls	r2, r3
   30e44:	movls	r3, r0
   30e48:	bls	30e08 <__flatcc_fb_parse@@Base+0x1380>
   30e4c:	mov	r1, r7
   30e50:	mov	r0, r5
   30e54:	bl	13ea0 <calloc@plt>
   30e58:	subs	r3, r0, #0
   30e5c:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   30e60:	ldr	r2, [r4, #48]	; 0x30
   30e64:	add	r1, r3, #65536	; 0x10000
   30e68:	str	r2, [r3]
   30e6c:	str	r3, [r4, #48]	; 0x30
   30e70:	add	r2, r3, #16
   30e74:	str	r1, [r4, #44]	; 0x2c
   30e78:	add	r3, r3, #32
   30e7c:	b	30e08 <__flatcc_fb_parse@@Base+0x1380>
   30e80:	mov	r0, r4
   30e84:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   30e88:	ldr	r3, [r4, #400]	; 0x190
   30e8c:	add	r6, r4, #400	; 0x190
   30e90:	cmp	r3, #0
   30e94:	ldr	r5, [r4, #40]	; 0x28
   30e98:	beq	30eb4 <__flatcc_fb_parse@@Base+0x142c>
   30e9c:	mov	r3, #0
   30ea0:	str	r3, [sp]
   30ea4:	ldr	r2, [pc, #-1008]	; 30abc <__flatcc_fb_parse@@Base+0x1034>
   30ea8:	mov	r1, r5
   30eac:	mov	r0, r4
   30eb0:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   30eb4:	mov	r1, r6
   30eb8:	mov	r0, r4
   30ebc:	bl	2d860 <__flatcc_fb_print_error@@Base+0x158>
   30ec0:	ldr	r1, [r4, #40]	; 0x28
   30ec4:	ldr	r2, [r4, #544]	; 0x220
   30ec8:	ldr	r3, [r1, #16]
   30ecc:	str	r2, [r4, #408]	; 0x198
   30ed0:	cmp	r3, #59	; 0x3b
   30ed4:	mov	r3, #0
   30ed8:	str	r3, [r4, #36]	; 0x24
   30edc:	beq	30668 <__flatcc_fb_parse@@Base+0xbe0>
   30ee0:	str	r3, [sp, #4]
   30ee4:	str	r3, [sp]
   30ee8:	ldr	r2, [pc, #-1072]	; 30ac0 <__flatcc_fb_parse@@Base+0x1038>
   30eec:	mov	r3, r5
   30ef0:	mov	r0, r4
   30ef4:	bl	2e72c <__flatcc_error_report@@Base>
   30ef8:	ldr	r5, [r4, #40]	; 0x28
   30efc:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   30f00:	str	r3, [sp, #16]
   30f04:	add	r0, r3, #128	; 0x80
   30f08:	cmp	r0, r1
   30f0c:	bhi	311a0 <__flatcc_fb_parse@@Base+0x1718>
   30f10:	str	r0, [r4, #52]	; 0x34
   30f14:	ldr	r0, [sp, #16]
   30f18:	ldr	r3, [r4, #392]	; 0x188
   30f1c:	mov	r1, #1
   30f20:	str	r3, [r0]
   30f24:	ldr	r2, [r4, #36]	; 0x24
   30f28:	ldr	r3, [r4, #544]	; 0x220
   30f2c:	cmp	r2, #0
   30f30:	strh	r1, [r0, #8]
   30f34:	str	r0, [r4, #392]	; 0x188
   30f38:	str	r3, [r0, #12]
   30f3c:	beq	30f60 <__flatcc_fb_parse@@Base+0x14d8>
   30f40:	mov	r1, #0
   30f44:	b	30f4c <__flatcc_fb_parse@@Base+0x14c4>
   30f48:	mov	r2, r3
   30f4c:	ldr	r3, [r2]
   30f50:	str	r1, [r2]
   30f54:	cmp	r3, #0
   30f58:	mov	r1, r2
   30f5c:	bne	30f48 <__flatcc_fb_parse@@Base+0x14c0>
   30f60:	ldr	r3, [sp, #16]
   30f64:	mov	r5, #0
   30f68:	cmp	sl, #9
   30f6c:	str	r2, [r3, #32]
   30f70:	str	r5, [r4, #36]	; 0x24
   30f74:	bne	31850 <__flatcc_fb_parse@@Base+0x1dc8>
   30f78:	mov	r0, r4
   30f7c:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   30f80:	cmp	r9, r5
   30f84:	beq	32c94 <__flatcc_fb_parse@@Base+0x320c>
   30f88:	ldr	r6, [sp, #16]
   30f8c:	mov	r0, r4
   30f90:	str	r9, [r6, #4]
   30f94:	bl	2f110 <__flatcc_error_report@@Base+0x9e4>
   30f98:	ldr	r1, [r4, #40]	; 0x28
   30f9c:	ldr	r3, [r1, #16]
   30fa0:	cmp	r3, #123	; 0x7b
   30fa4:	str	r0, [r6, #28]
   30fa8:	bne	32b00 <__flatcc_fb_parse@@Base+0x3078>
   30fac:	mov	r0, r4
   30fb0:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   30fb4:	ldr	r5, [r4, #40]	; 0x28
   30fb8:	mov	r7, #1
   30fbc:	mov	r6, #65536	; 0x10000
   30fc0:	ldr	fp, [r5, #16]
   30fc4:	cmp	fp, #125	; 0x7d
   30fc8:	beq	32a64 <__flatcc_fb_parse@@Base+0x2fdc>
   30fcc:	ldr	r8, [r4, #52]	; 0x34
   30fd0:	ldr	r3, [r4, #44]	; 0x2c
   30fd4:	add	r0, r8, #128	; 0x80
   30fd8:	cmp	r0, r3
   30fdc:	bhi	31fd8 <__flatcc_fb_parse@@Base+0x2550>
   30fe0:	ldr	r2, [sp, #16]
   30fe4:	ldr	r3, [r2, #20]
   30fe8:	str	r0, [r4, #52]	; 0x34
   30fec:	str	r3, [r8]
   30ff0:	mov	r3, #5
   30ff4:	strh	r3, [r8, #8]
   30ff8:	str	r8, [r2, #20]
   30ffc:	ldr	r3, [r4, #36]	; 0x24
   31000:	cmp	r3, #0
   31004:	beq	31028 <__flatcc_fb_parse@@Base+0x15a0>
   31008:	mov	r1, #0
   3100c:	b	31014 <__flatcc_fb_parse@@Base+0x158c>
   31010:	mov	r3, r2
   31014:	ldr	r2, [r3]
   31018:	str	r1, [r3]
   3101c:	cmp	r2, #0
   31020:	mov	r1, r3
   31024:	bne	31010 <__flatcc_fb_parse@@Base+0x1588>
   31028:	str	r3, [r8, #68]	; 0x44
   3102c:	cmp	fp, #9
   31030:	mov	r3, #0
   31034:	str	r3, [r4, #36]	; 0x24
   31038:	bne	3226c <__flatcc_fb_parse@@Base+0x27e4>
   3103c:	ldr	r9, [r4, #24]
   31040:	add	fp, r5, #20
   31044:	cmp	fp, r9
   31048:	str	fp, [r4, #40]	; 0x28
   3104c:	beq	32e2c <__flatcc_fb_parse@@Base+0x33a4>
   31050:	ldr	lr, [r5, #36]	; 0x24
   31054:	cmn	lr, #964	; 0x3c4
   31058:	bne	31b3c <__flatcc_fb_parse@@Base+0x20b4>
   3105c:	ldr	ip, [r4, #44]	; 0x2c
   31060:	mov	sl, r3
   31064:	b	31098 <__flatcc_fb_parse@@Base+0x1610>
   31068:	add	r1, fp, #20
   3106c:	cmp	r1, r9
   31070:	str	r0, [r4, #52]	; 0x34
   31074:	stm	r3, {sl, fp}
   31078:	str	r3, [r4, #36]	; 0x24
   3107c:	str	r1, [r4, #40]	; 0x28
   31080:	beq	31108 <__flatcc_fb_parse@@Base+0x1680>
   31084:	ldr	lr, [r1, #16]
   31088:	cmn	lr, #964	; 0x3c4
   3108c:	bne	31b40 <__flatcc_fb_parse@@Base+0x20b8>
   31090:	mov	sl, r3
   31094:	mov	fp, r1
   31098:	add	r2, r0, #16
   3109c:	cmp	r2, ip
   310a0:	movls	r3, r0
   310a4:	movls	r0, r2
   310a8:	bls	31068 <__flatcc_fb_parse@@Base+0x15e0>
   310ac:	mov	r1, r7
   310b0:	mov	r0, r6
   310b4:	bl	13ea0 <calloc@plt>
   310b8:	cmp	r0, #0
   310bc:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   310c0:	ldr	r3, [r4, #48]	; 0x30
   310c4:	add	ip, r0, #65536	; 0x10000
   310c8:	str	r3, [r0]
   310cc:	str	r0, [r4, #48]	; 0x30
   310d0:	add	r3, r0, #16
   310d4:	str	ip, [r4, #44]	; 0x2c
   310d8:	add	r0, r0, #32
   310dc:	b	31068 <__flatcc_fb_parse@@Base+0x15e0>
   310e0:	mov	r2, r5
   310e4:	b	2fe08 <__flatcc_fb_parse@@Base+0x380>
   310e8:	mov	r0, r4
   310ec:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   310f0:	mov	r3, #0
   310f4:	str	r3, [r4, #36]	; 0x24
   310f8:	ldr	ip, [r4, #44]	; 0x2c
   310fc:	ldr	r3, [r4, #52]	; 0x34
   31100:	b	2fcb8 <__flatcc_fb_parse@@Base+0x230>
   31104:	mov	fp, r1
   31108:	str	fp, [r4, #40]	; 0x28
   3110c:	ldr	r3, [pc, #-1616]	; 30ac4 <__flatcc_fb_parse@@Base+0x103c>
   31110:	ldr	r2, [pc, #-1616]	; 30ac8 <__flatcc_fb_parse@@Base+0x1040>
   31114:	ldr	r1, [pc, #-1616]	; 30acc <__flatcc_fb_parse@@Base+0x1044>
   31118:	ldr	r0, [pc, #-1616]	; 30ad0 <__flatcc_fb_parse@@Base+0x1048>
   3111c:	bl	14038 <__assert_fail@plt>
   31120:	mov	r0, r4
   31124:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   31128:	ldr	r9, [r4, #40]	; 0x28
   3112c:	ldr	r1, [r9, #16]
   31130:	b	2fb2c <__flatcc_fb_parse@@Base+0xa4>
   31134:	mov	r1, #1
   31138:	mov	r0, #65536	; 0x10000
   3113c:	bl	13ea0 <calloc@plt>
   31140:	cmp	r0, #0
   31144:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31148:	ldr	r3, [r4, #48]	; 0x30
   3114c:	add	r6, r0, #16
   31150:	str	r3, [r0]
   31154:	add	r3, r0, #65536	; 0x10000
   31158:	str	r0, [r4, #48]	; 0x30
   3115c:	str	r3, [r4, #44]	; 0x2c
   31160:	add	r0, r0, #144	; 0x90
   31164:	b	30914 <__flatcc_fb_parse@@Base+0xe8c>
   31168:	mov	r1, #1
   3116c:	mov	r0, #65536	; 0x10000
   31170:	bl	13ea0 <calloc@plt>
   31174:	cmp	r0, #0
   31178:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   3117c:	ldr	r3, [r4, #48]	; 0x30
   31180:	add	r2, r0, #16
   31184:	str	r3, [r0]
   31188:	add	r3, r0, #65536	; 0x10000
   3118c:	str	r0, [r4, #48]	; 0x30
   31190:	str	r2, [sp, #16]
   31194:	add	r0, r0, #144	; 0x90
   31198:	str	r3, [r4, #44]	; 0x2c
   3119c:	b	30c0c <__flatcc_fb_parse@@Base+0x1184>
   311a0:	mov	r1, #1
   311a4:	mov	r0, #65536	; 0x10000
   311a8:	bl	13ea0 <calloc@plt>
   311ac:	cmp	r0, #0
   311b0:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   311b4:	ldr	r3, [r4, #48]	; 0x30
   311b8:	add	r2, r0, #16
   311bc:	str	r3, [r0]
   311c0:	add	r3, r0, #65536	; 0x10000
   311c4:	str	r0, [r4, #48]	; 0x30
   311c8:	str	r2, [sp, #16]
   311cc:	add	r0, r0, #144	; 0x90
   311d0:	str	r3, [r4, #44]	; 0x2c
   311d4:	b	30f10 <__flatcc_fb_parse@@Base+0x1488>
   311d8:	mov	r1, #1
   311dc:	mov	r0, #65536	; 0x10000
   311e0:	bl	13ea0 <calloc@plt>
   311e4:	cmp	r0, #0
   311e8:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   311ec:	ldr	r3, [r4, #48]	; 0x30
   311f0:	add	r8, r0, #16
   311f4:	str	r3, [r0]
   311f8:	add	r3, r0, #65536	; 0x10000
   311fc:	str	r0, [r4, #48]	; 0x30
   31200:	str	r3, [r4, #44]	; 0x2c
   31204:	add	r0, r0, #144	; 0x90
   31208:	b	30688 <__flatcc_fb_parse@@Base+0xc00>
   3120c:	mov	r1, #1
   31210:	mov	r0, #65536	; 0x10000
   31214:	bl	13ea0 <calloc@plt>
   31218:	cmp	r0, #0
   3121c:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31220:	ldr	r3, [r4, #48]	; 0x30
   31224:	add	r5, r0, #16
   31228:	str	r3, [r0]
   3122c:	add	r3, r0, #65536	; 0x10000
   31230:	str	r0, [r4, #48]	; 0x30
   31234:	str	r3, [r4, #44]	; 0x2c
   31238:	add	r0, r0, #48	; 0x30
   3123c:	b	3056c <__flatcc_fb_parse@@Base+0xae4>
   31240:	mov	r1, #1
   31244:	mov	r0, #65536	; 0x10000
   31248:	bl	13ea0 <calloc@plt>
   3124c:	cmp	r0, #0
   31250:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31254:	ldr	r3, [r4, #48]	; 0x30
   31258:	add	r8, r0, #16
   3125c:	str	r3, [r0]
   31260:	add	r3, r0, #65536	; 0x10000
   31264:	str	r0, [r4, #48]	; 0x30
   31268:	str	r3, [r4, #44]	; 0x2c
   3126c:	add	r0, r0, #144	; 0x90
   31270:	b	303e0 <__flatcc_fb_parse@@Base+0x958>
   31274:	ldr	r2, [r4, #364]	; 0x16c
   31278:	ldr	r3, [r4, #360]	; 0x168
   3127c:	mov	r0, r4
   31280:	str	r2, [sp]
   31284:	ldr	r2, [pc, #-1976]	; 30ad4 <__flatcc_fb_parse@@Base+0x104c>
   31288:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   3128c:	ldr	r1, [r4, #40]	; 0x28
   31290:	ldr	r2, [r1, #16]
   31294:	b	30600 <__flatcc_fb_parse@@Base+0xb78>
   31298:	str	r5, [sp]
   3129c:	mov	r3, r5
   312a0:	mov	r1, r6
   312a4:	ldr	r2, [pc, #-1972]	; 30af8 <__flatcc_fb_parse@@Base+0x1070>
   312a8:	mov	r0, r4
   312ac:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   312b0:	ldr	r5, [r4, #40]	; 0x28
   312b4:	ldr	fp, [r5, #16]
   312b8:	mov	r7, #1
   312bc:	mov	r6, #65536	; 0x10000
   312c0:	cmp	fp, #0
   312c4:	beq	30084 <__flatcc_fb_parse@@Base+0x5fc>
   312c8:	cmp	fp, #125	; 0x7d
   312cc:	beq	320c0 <__flatcc_fb_parse@@Base+0x2638>
   312d0:	ldr	r9, [r4, #24]
   312d4:	add	r8, r5, #20
   312d8:	cmp	r8, r9
   312dc:	str	r8, [r4, #40]	; 0x28
   312e0:	beq	32aa0 <__flatcc_fb_parse@@Base+0x3018>
   312e4:	ldr	r3, [r5, #36]	; 0x24
   312e8:	cmn	r3, #964	; 0x3c4
   312ec:	movne	r5, r8
   312f0:	bne	31b34 <__flatcc_fb_parse@@Base+0x20ac>
   312f4:	ldr	r0, [r4, #52]	; 0x34
   312f8:	ldr	r1, [r4, #44]	; 0x2c
   312fc:	b	31330 <__flatcc_fb_parse@@Base+0x18a8>
   31300:	ldr	r2, [r4, #36]	; 0x24
   31304:	add	r5, r8, #20
   31308:	cmp	r9, r5
   3130c:	str	r0, [r4, #52]	; 0x34
   31310:	stm	r3, {r2, r8}
   31314:	str	r3, [r4, #36]	; 0x24
   31318:	str	r5, [r4, #40]	; 0x28
   3131c:	beq	32aa4 <__flatcc_fb_parse@@Base+0x301c>
   31320:	ldr	r3, [r5, #16]
   31324:	cmn	r3, #964	; 0x3c4
   31328:	bne	31b34 <__flatcc_fb_parse@@Base+0x20ac>
   3132c:	mov	r8, r5
   31330:	add	r2, r0, #16
   31334:	cmp	r2, r1
   31338:	movls	r3, r0
   3133c:	movls	r0, r2
   31340:	bls	31300 <__flatcc_fb_parse@@Base+0x1878>
   31344:	mov	r1, r7
   31348:	mov	r0, r6
   3134c:	bl	13ea0 <calloc@plt>
   31350:	cmp	r0, #0
   31354:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31358:	ldr	r3, [r4, #48]	; 0x30
   3135c:	add	r1, r0, #65536	; 0x10000
   31360:	str	r3, [r0]
   31364:	str	r0, [r4, #48]	; 0x30
   31368:	add	r3, r0, #16
   3136c:	str	r1, [r4, #44]	; 0x2c
   31370:	add	r0, r0, #32
   31374:	b	31300 <__flatcc_fb_parse@@Base+0x1878>
   31378:	str	r5, [sp]
   3137c:	mov	r3, r5
   31380:	ldr	r2, [pc, #-2224]	; 30ad8 <__flatcc_fb_parse@@Base+0x1050>
   31384:	mov	r0, r4
   31388:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   3138c:	ldr	r5, [r4, #40]	; 0x28
   31390:	ldr	fp, [r5, #16]
   31394:	b	312b8 <__flatcc_fb_parse@@Base+0x1830>
   31398:	mov	r3, sl
   3139c:	str	sl, [sp]
   313a0:	mov	r1, fp
   313a4:	ldr	r2, [pc, #-2256]	; 30adc <__flatcc_fb_parse@@Base+0x1054>
   313a8:	mov	r0, r4
   313ac:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   313b0:	ldr	r5, [r4, #40]	; 0x28
   313b4:	str	sl, [r6, #4]
   313b8:	ldr	r3, [r5, #16]
   313bc:	mov	r7, #1
   313c0:	mov	r6, #65536	; 0x10000
   313c4:	cmp	r3, #0
   313c8:	beq	30084 <__flatcc_fb_parse@@Base+0x5fc>
   313cc:	cmp	r3, #59	; 0x3b
   313d0:	beq	320c0 <__flatcc_fb_parse@@Base+0x2638>
   313d4:	cmp	r3, #125	; 0x7d
   313d8:	beq	32c60 <__flatcc_fb_parse@@Base+0x31d8>
   313dc:	ldr	r9, [r4, #24]
   313e0:	add	r8, r5, #20
   313e4:	cmp	r8, r9
   313e8:	str	r8, [r4, #40]	; 0x28
   313ec:	beq	32aa0 <__flatcc_fb_parse@@Base+0x3018>
   313f0:	ldr	r3, [r5, #36]	; 0x24
   313f4:	cmn	r3, #964	; 0x3c4
   313f8:	movne	r5, r8
   313fc:	bne	31b24 <__flatcc_fb_parse@@Base+0x209c>
   31400:	ldr	r0, [r4, #52]	; 0x34
   31404:	ldr	r1, [r4, #44]	; 0x2c
   31408:	b	3143c <__flatcc_fb_parse@@Base+0x19b4>
   3140c:	ldr	r2, [r4, #36]	; 0x24
   31410:	add	r5, r8, #20
   31414:	cmp	r9, r5
   31418:	str	r0, [r4, #52]	; 0x34
   3141c:	stm	r3, {r2, r8}
   31420:	str	r3, [r4, #36]	; 0x24
   31424:	str	r5, [r4, #40]	; 0x28
   31428:	beq	32aa4 <__flatcc_fb_parse@@Base+0x301c>
   3142c:	ldr	r3, [r5, #16]
   31430:	cmn	r3, #964	; 0x3c4
   31434:	bne	31b24 <__flatcc_fb_parse@@Base+0x209c>
   31438:	mov	r8, r5
   3143c:	add	r2, r0, #16
   31440:	cmp	r2, r1
   31444:	movls	r3, r0
   31448:	movls	r0, r2
   3144c:	bls	3140c <__flatcc_fb_parse@@Base+0x1984>
   31450:	mov	r1, r7
   31454:	mov	r0, r6
   31458:	bl	13ea0 <calloc@plt>
   3145c:	cmp	r0, #0
   31460:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31464:	ldr	r3, [r4, #48]	; 0x30
   31468:	add	r1, r0, #65536	; 0x10000
   3146c:	str	r3, [r0]
   31470:	str	r0, [r4, #48]	; 0x30
   31474:	add	r3, r0, #16
   31478:	str	r1, [r4, #44]	; 0x2c
   3147c:	add	r0, r0, #32
   31480:	b	3140c <__flatcc_fb_parse@@Base+0x1984>
   31484:	str	r5, [sp]
   31488:	mov	r3, r5
   3148c:	mov	r1, r6
   31490:	ldr	r2, [pc, #-2488]	; 30ae0 <__flatcc_fb_parse@@Base+0x1058>
   31494:	mov	r0, r4
   31498:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   3149c:	str	r5, [r8, #4]
   314a0:	ldr	r5, [r4, #40]	; 0x28
   314a4:	mov	r7, #1
   314a8:	mov	r6, #65536	; 0x10000
   314ac:	ldr	r3, [r5, #16]
   314b0:	cmp	r3, #0
   314b4:	beq	30084 <__flatcc_fb_parse@@Base+0x5fc>
   314b8:	cmp	r3, #125	; 0x7d
   314bc:	beq	320c0 <__flatcc_fb_parse@@Base+0x2638>
   314c0:	ldr	r9, [r4, #24]
   314c4:	add	r8, r5, #20
   314c8:	cmp	r8, r9
   314cc:	str	r8, [r4, #40]	; 0x28
   314d0:	beq	32aa0 <__flatcc_fb_parse@@Base+0x3018>
   314d4:	ldr	r3, [r5, #36]	; 0x24
   314d8:	cmn	r3, #964	; 0x3c4
   314dc:	movne	r5, r8
   314e0:	bne	314ac <__flatcc_fb_parse@@Base+0x1a24>
   314e4:	ldr	r0, [r4, #52]	; 0x34
   314e8:	ldr	r1, [r4, #44]	; 0x2c
   314ec:	b	31520 <__flatcc_fb_parse@@Base+0x1a98>
   314f0:	ldr	r2, [r4, #36]	; 0x24
   314f4:	add	r5, r8, #20
   314f8:	cmp	r5, r9
   314fc:	str	r0, [r4, #52]	; 0x34
   31500:	stm	r3, {r2, r8}
   31504:	str	r3, [r4, #36]	; 0x24
   31508:	str	r5, [r4, #40]	; 0x28
   3150c:	beq	32aa4 <__flatcc_fb_parse@@Base+0x301c>
   31510:	ldr	r3, [r5, #16]
   31514:	cmn	r3, #964	; 0x3c4
   31518:	bne	314ac <__flatcc_fb_parse@@Base+0x1a24>
   3151c:	mov	r8, r5
   31520:	add	r2, r0, #16
   31524:	cmp	r2, r1
   31528:	movls	r3, r0
   3152c:	movls	r0, r2
   31530:	bls	314f0 <__flatcc_fb_parse@@Base+0x1a68>
   31534:	mov	r1, r7
   31538:	mov	r0, r6
   3153c:	bl	13ea0 <calloc@plt>
   31540:	cmp	r0, #0
   31544:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31548:	ldr	r3, [r4, #48]	; 0x30
   3154c:	add	r1, r0, #65536	; 0x10000
   31550:	str	r3, [r0]
   31554:	str	r0, [r4, #48]	; 0x30
   31558:	add	r3, r0, #16
   3155c:	str	r1, [r4, #44]	; 0x2c
   31560:	add	r0, r0, #32
   31564:	b	314f0 <__flatcc_fb_parse@@Base+0x1a68>
   31568:	mov	r3, #0
   3156c:	str	r3, [sp]
   31570:	ldr	r2, [pc, #-2708]	; 30ae4 <__flatcc_fb_parse@@Base+0x105c>
   31574:	mov	r0, r4
   31578:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   3157c:	ldr	r5, [r4, #40]	; 0x28
   31580:	mov	r7, #1
   31584:	mov	r6, #65536	; 0x10000
   31588:	ldr	r3, [r5, #16]
   3158c:	cmp	r3, #0
   31590:	beq	30084 <__flatcc_fb_parse@@Base+0x5fc>
   31594:	cmp	r3, #59	; 0x3b
   31598:	beq	320c0 <__flatcc_fb_parse@@Base+0x2638>
   3159c:	ldr	r9, [r4, #24]
   315a0:	add	r8, r5, #20
   315a4:	cmp	r9, r8
   315a8:	str	r8, [r4, #40]	; 0x28
   315ac:	beq	32aa0 <__flatcc_fb_parse@@Base+0x3018>
   315b0:	ldr	r3, [r5, #36]	; 0x24
   315b4:	cmn	r3, #964	; 0x3c4
   315b8:	bne	32d70 <__flatcc_fb_parse@@Base+0x32e8>
   315bc:	ldr	r3, [r4, #52]	; 0x34
   315c0:	ldr	r0, [r4, #44]	; 0x2c
   315c4:	b	315f8 <__flatcc_fb_parse@@Base+0x1b70>
   315c8:	ldr	r1, [r4, #36]	; 0x24
   315cc:	add	r5, r8, #20
   315d0:	cmp	r5, r9
   315d4:	str	r3, [r4, #52]	; 0x34
   315d8:	stm	r2, {r1, r8}
   315dc:	str	r2, [r4, #36]	; 0x24
   315e0:	str	r5, [r4, #40]	; 0x28
   315e4:	beq	32aa4 <__flatcc_fb_parse@@Base+0x301c>
   315e8:	ldr	r2, [r5, #16]
   315ec:	cmn	r2, #964	; 0x3c4
   315f0:	bne	31588 <__flatcc_fb_parse@@Base+0x1b00>
   315f4:	mov	r8, r5
   315f8:	add	r1, r3, #16
   315fc:	cmp	r1, r0
   31600:	movls	r2, r3
   31604:	movls	r3, r1
   31608:	bls	315c8 <__flatcc_fb_parse@@Base+0x1b40>
   3160c:	mov	r1, r7
   31610:	mov	r0, r6
   31614:	bl	13ea0 <calloc@plt>
   31618:	subs	r3, r0, #0
   3161c:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31620:	ldr	r2, [r4, #48]	; 0x30
   31624:	add	r0, r3, #65536	; 0x10000
   31628:	str	r2, [r3]
   3162c:	str	r3, [r4, #48]	; 0x30
   31630:	add	r2, r3, #16
   31634:	str	r0, [r4, #44]	; 0x2c
   31638:	add	r3, r3, #32
   3163c:	b	315c8 <__flatcc_fb_parse@@Base+0x1b40>
   31640:	mov	r3, #0
   31644:	str	r3, [sp]
   31648:	ldr	r2, [pc, #-2920]	; 30ae8 <__flatcc_fb_parse@@Base+0x1060>
   3164c:	mov	r0, r4
   31650:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   31654:	ldr	r5, [r4, #40]	; 0x28
   31658:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   3165c:	mov	r3, #0
   31660:	mov	r1, r6
   31664:	str	r3, [sp]
   31668:	ldr	r2, [pc, #-2948]	; 30aec <__flatcc_fb_parse@@Base+0x1064>
   3166c:	mov	r0, r4
   31670:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   31674:	b	305c0 <__flatcc_fb_parse@@Base+0xb38>
   31678:	mov	r3, #0
   3167c:	str	r3, [sp]
   31680:	ldr	r2, [pc, #-2968]	; 30af0 <__flatcc_fb_parse@@Base+0x1068>
   31684:	mov	r0, r4
   31688:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   3168c:	ldr	r5, [r4, #40]	; 0x28
   31690:	mov	r7, #1
   31694:	mov	r6, #65536	; 0x10000
   31698:	ldr	r3, [r5, #16]
   3169c:	cmp	r3, #0
   316a0:	beq	30084 <__flatcc_fb_parse@@Base+0x5fc>
   316a4:	cmp	r3, #59	; 0x3b
   316a8:	beq	320c0 <__flatcc_fb_parse@@Base+0x2638>
   316ac:	ldr	r9, [r4, #24]
   316b0:	add	r8, r5, #20
   316b4:	cmp	r9, r8
   316b8:	str	r8, [r4, #40]	; 0x28
   316bc:	beq	32aa0 <__flatcc_fb_parse@@Base+0x3018>
   316c0:	ldr	r3, [r5, #36]	; 0x24
   316c4:	cmn	r3, #964	; 0x3c4
   316c8:	bne	32d68 <__flatcc_fb_parse@@Base+0x32e0>
   316cc:	ldr	r0, [r4, #52]	; 0x34
   316d0:	ldr	r1, [r4, #44]	; 0x2c
   316d4:	b	31708 <__flatcc_fb_parse@@Base+0x1c80>
   316d8:	ldr	r2, [r4, #36]	; 0x24
   316dc:	add	r5, r8, #20
   316e0:	cmp	r5, r9
   316e4:	str	r0, [r4, #52]	; 0x34
   316e8:	stm	r3, {r2, r8}
   316ec:	str	r3, [r4, #36]	; 0x24
   316f0:	str	r5, [r4, #40]	; 0x28
   316f4:	beq	32aa4 <__flatcc_fb_parse@@Base+0x301c>
   316f8:	ldr	r3, [r5, #16]
   316fc:	cmn	r3, #964	; 0x3c4
   31700:	bne	31698 <__flatcc_fb_parse@@Base+0x1c10>
   31704:	mov	r8, r5
   31708:	add	r2, r0, #16
   3170c:	cmp	r2, r1
   31710:	movls	r3, r0
   31714:	movls	r0, r2
   31718:	bls	316d8 <__flatcc_fb_parse@@Base+0x1c50>
   3171c:	mov	r1, r7
   31720:	mov	r0, r6
   31724:	bl	13ea0 <calloc@plt>
   31728:	cmp	r0, #0
   3172c:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31730:	ldr	r3, [r4, #48]	; 0x30
   31734:	add	r1, r0, #65536	; 0x10000
   31738:	str	r3, [r0]
   3173c:	str	r0, [r4, #48]	; 0x30
   31740:	add	r3, r0, #16
   31744:	str	r1, [r4, #44]	; 0x2c
   31748:	add	r0, r0, #32
   3174c:	b	316d8 <__flatcc_fb_parse@@Base+0x1c50>
   31750:	mov	r3, #0
   31754:	ldr	r1, [sp, #20]
   31758:	str	r3, [sp]
   3175c:	ldr	r2, [pc, #-3184]	; 30af4 <__flatcc_fb_parse@@Base+0x106c>
   31760:	mov	r0, r4
   31764:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   31768:	ldr	r5, [r4, #40]	; 0x28
   3176c:	b	314a4 <__flatcc_fb_parse@@Base+0x1a1c>
   31770:	str	r5, [sp]
   31774:	mov	r3, r5
   31778:	mov	r1, sl
   3177c:	ldr	r2, [pc, #-3212]	; 30af8 <__flatcc_fb_parse@@Base+0x1070>
   31780:	mov	r0, r4
   31784:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   31788:	ldr	r5, [r4, #40]	; 0x28
   3178c:	ldr	sl, [r5, #16]
   31790:	mov	r7, #1
   31794:	mov	r6, #65536	; 0x10000
   31798:	cmp	sl, #0
   3179c:	beq	30084 <__flatcc_fb_parse@@Base+0x5fc>
   317a0:	cmp	sl, #125	; 0x7d
   317a4:	beq	320c0 <__flatcc_fb_parse@@Base+0x2638>
   317a8:	ldr	r9, [r4, #24]
   317ac:	add	r8, r5, #20
   317b0:	cmp	r8, r9
   317b4:	str	r8, [r4, #40]	; 0x28
   317b8:	beq	32aa0 <__flatcc_fb_parse@@Base+0x3018>
   317bc:	ldr	r3, [r5, #36]	; 0x24
   317c0:	cmn	r3, #964	; 0x3c4
   317c4:	movne	r5, r8
   317c8:	bne	31ca4 <__flatcc_fb_parse@@Base+0x221c>
   317cc:	ldr	r0, [r4, #52]	; 0x34
   317d0:	ldr	r1, [r4, #44]	; 0x2c
   317d4:	b	31808 <__flatcc_fb_parse@@Base+0x1d80>
   317d8:	ldr	r2, [r4, #36]	; 0x24
   317dc:	add	r5, r8, #20
   317e0:	cmp	r5, r9
   317e4:	str	r0, [r4, #52]	; 0x34
   317e8:	stm	r3, {r2, r8}
   317ec:	str	r3, [r4, #36]	; 0x24
   317f0:	str	r5, [r4, #40]	; 0x28
   317f4:	beq	32aa4 <__flatcc_fb_parse@@Base+0x301c>
   317f8:	ldr	r3, [r5, #16]
   317fc:	cmn	r3, #964	; 0x3c4
   31800:	bne	31ca4 <__flatcc_fb_parse@@Base+0x221c>
   31804:	mov	r8, r5
   31808:	add	r2, r0, #16
   3180c:	cmp	r2, r1
   31810:	movls	r3, r0
   31814:	movls	r0, r2
   31818:	bls	317d8 <__flatcc_fb_parse@@Base+0x1d50>
   3181c:	mov	r1, r7
   31820:	mov	r0, r6
   31824:	bl	13ea0 <calloc@plt>
   31828:	cmp	r0, #0
   3182c:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31830:	ldr	r3, [r4, #48]	; 0x30
   31834:	add	r1, r0, #65536	; 0x10000
   31838:	str	r3, [r0]
   3183c:	str	r0, [r4, #48]	; 0x30
   31840:	add	r3, r0, #16
   31844:	str	r1, [r4, #44]	; 0x2c
   31848:	add	r0, r0, #32
   3184c:	b	317d8 <__flatcc_fb_parse@@Base+0x1d50>
   31850:	str	r5, [sp]
   31854:	mov	r3, r5
   31858:	mov	r1, r9
   3185c:	ldr	r2, [pc, #-3436]	; 30af8 <__flatcc_fb_parse@@Base+0x1070>
   31860:	mov	r0, r4
   31864:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   31868:	ldr	r5, [r4, #40]	; 0x28
   3186c:	ldr	fp, [r5, #16]
   31870:	mov	r7, #1
   31874:	mov	r6, #65536	; 0x10000
   31878:	cmp	fp, #0
   3187c:	beq	30084 <__flatcc_fb_parse@@Base+0x5fc>
   31880:	cmp	fp, #125	; 0x7d
   31884:	beq	320c0 <__flatcc_fb_parse@@Base+0x2638>
   31888:	ldr	r9, [r4, #24]
   3188c:	add	r8, r5, #20
   31890:	cmp	r8, r9
   31894:	str	r8, [r4, #40]	; 0x28
   31898:	beq	32aa0 <__flatcc_fb_parse@@Base+0x3018>
   3189c:	ldr	r3, [r5, #36]	; 0x24
   318a0:	cmn	r3, #964	; 0x3c4
   318a4:	movne	r5, r8
   318a8:	bne	31b2c <__flatcc_fb_parse@@Base+0x20a4>
   318ac:	ldr	r0, [r4, #52]	; 0x34
   318b0:	ldr	r1, [r4, #44]	; 0x2c
   318b4:	b	318e8 <__flatcc_fb_parse@@Base+0x1e60>
   318b8:	ldr	r2, [r4, #36]	; 0x24
   318bc:	add	r5, r8, #20
   318c0:	cmp	r5, r9
   318c4:	str	r0, [r4, #52]	; 0x34
   318c8:	stm	r3, {r2, r8}
   318cc:	str	r3, [r4, #36]	; 0x24
   318d0:	str	r5, [r4, #40]	; 0x28
   318d4:	beq	32aa4 <__flatcc_fb_parse@@Base+0x301c>
   318d8:	ldr	r3, [r5, #16]
   318dc:	cmn	r3, #964	; 0x3c4
   318e0:	bne	31b2c <__flatcc_fb_parse@@Base+0x20a4>
   318e4:	mov	r8, r5
   318e8:	add	r2, r0, #16
   318ec:	cmp	r2, r1
   318f0:	movls	r3, r0
   318f4:	movls	r0, r2
   318f8:	bls	318b8 <__flatcc_fb_parse@@Base+0x1e30>
   318fc:	mov	r1, r7
   31900:	mov	r0, r6
   31904:	bl	13ea0 <calloc@plt>
   31908:	cmp	r0, #0
   3190c:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31910:	ldr	r3, [r4, #48]	; 0x30
   31914:	add	r1, r0, #65536	; 0x10000
   31918:	str	r3, [r0]
   3191c:	str	r0, [r4, #48]	; 0x30
   31920:	add	r3, r0, #16
   31924:	str	r1, [r4, #44]	; 0x2c
   31928:	add	r0, r0, #32
   3192c:	b	318b8 <__flatcc_fb_parse@@Base+0x1e30>
   31930:	mov	r0, r4
   31934:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   31938:	add	r1, r8, #40	; 0x28
   3193c:	mov	r0, r4
   31940:	bl	2e994 <__flatcc_error_report@@Base+0x268>
   31944:	ldrh	r3, [r8, #48]	; 0x30
   31948:	ldr	r1, [r8, #40]	; 0x28
   3194c:	cmp	r3, #8
   31950:	bne	32ad0 <__flatcc_fb_parse@@Base+0x3048>
   31954:	ldr	r3, [r1, #16]
   31958:	add	r3, r3, #996	; 0x3e4
   3195c:	cmp	r3, #21
   31960:	bhi	30464 <__flatcc_fb_parse@@Base+0x9dc>
   31964:	mov	r0, #1
   31968:	ldr	r2, [pc, #-3700]	; 30afc <__flatcc_fb_parse@@Base+0x1074>
   3196c:	ands	r3, r2, r0, lsl r3
   31970:	beq	30464 <__flatcc_fb_parse@@Base+0x9dc>
   31974:	str	r5, [sp]
   31978:	mov	r3, r5
   3197c:	ldr	r2, [pc, #-3716]	; 30b00 <__flatcc_fb_parse@@Base+0x1078>
   31980:	mov	r0, r4
   31984:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   31988:	b	30464 <__flatcc_fb_parse@@Base+0x9dc>
   3198c:	mov	r5, fp
   31990:	ldr	r2, [r4, #108]	; 0x6c
   31994:	cmp	r2, #9
   31998:	bgt	314a4 <__flatcc_fb_parse@@Base+0x1a1c>
   3199c:	ldr	fp, [r4, #52]	; 0x34
   319a0:	ldr	r2, [r4, #44]	; 0x2c
   319a4:	add	r0, fp, #128	; 0x80
   319a8:	cmp	r0, r2
   319ac:	bhi	31e70 <__flatcc_fb_parse@@Base+0x23e8>
   319b0:	ldr	r2, [r8, #20]
   319b4:	str	r0, [r4, #52]	; 0x34
   319b8:	str	r2, [fp]
   319bc:	mov	r2, #5
   319c0:	strh	r2, [fp, #8]
   319c4:	str	fp, [r8, #20]
   319c8:	ldr	r2, [r4, #36]	; 0x24
   319cc:	cmp	r2, #0
   319d0:	beq	319f4 <__flatcc_fb_parse@@Base+0x1f6c>
   319d4:	mov	ip, #0
   319d8:	b	319e0 <__flatcc_fb_parse@@Base+0x1f58>
   319dc:	mov	r2, r1
   319e0:	ldr	r1, [r2]
   319e4:	str	ip, [r2]
   319e8:	cmp	r1, #0
   319ec:	mov	ip, r2
   319f0:	bne	319dc <__flatcc_fb_parse@@Base+0x1f54>
   319f4:	cmp	r3, #61	; 0x3d
   319f8:	mov	r3, #0
   319fc:	str	r2, [fp, #68]	; 0x44
   31a00:	str	r3, [r4, #36]	; 0x24
   31a04:	str	sl, [fp, #4]
   31a08:	beq	32400 <__flatcc_fb_parse@@Base+0x2978>
   31a0c:	ldr	r3, [r5, #16]
   31a10:	cmp	r3, #44	; 0x2c
   31a14:	bne	324c4 <__flatcc_fb_parse@@Base+0x2a3c>
   31a18:	ldr	r9, [r4, #24]
   31a1c:	add	fp, r5, #20
   31a20:	cmp	fp, r9
   31a24:	str	fp, [r4, #40]	; 0x28
   31a28:	beq	32e2c <__flatcc_fb_parse@@Base+0x33a4>
   31a2c:	ldr	r3, [r5, #36]	; 0x24
   31a30:	cmn	r3, #964	; 0x3c4
   31a34:	bne	31abc <__flatcc_fb_parse@@Base+0x2034>
   31a38:	ldr	r0, [r4, #52]	; 0x34
   31a3c:	ldr	r1, [r4, #44]	; 0x2c
   31a40:	b	31a74 <__flatcc_fb_parse@@Base+0x1fec>
   31a44:	ldr	r2, [r4, #36]	; 0x24
   31a48:	add	sl, fp, #20
   31a4c:	cmp	sl, r9
   31a50:	str	r0, [r4, #52]	; 0x34
   31a54:	stm	r3, {r2, fp}
   31a58:	str	r3, [r4, #36]	; 0x24
   31a5c:	str	sl, [r4, #40]	; 0x28
   31a60:	beq	31108 <__flatcc_fb_parse@@Base+0x1680>
   31a64:	ldr	r3, [sl, #16]
   31a68:	cmn	r3, #964	; 0x3c4
   31a6c:	bne	31ac0 <__flatcc_fb_parse@@Base+0x2038>
   31a70:	mov	fp, sl
   31a74:	add	r2, r0, #16
   31a78:	cmp	r2, r1
   31a7c:	movls	r3, r0
   31a80:	movls	r0, r2
   31a84:	bls	31a44 <__flatcc_fb_parse@@Base+0x1fbc>
   31a88:	mov	r1, r7
   31a8c:	mov	r0, r6
   31a90:	bl	13ea0 <calloc@plt>
   31a94:	cmp	r0, #0
   31a98:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31a9c:	ldr	r3, [r4, #48]	; 0x30
   31aa0:	add	r1, r0, #65536	; 0x10000
   31aa4:	str	r3, [r0]
   31aa8:	str	r0, [r4, #48]	; 0x30
   31aac:	add	r3, r0, #16
   31ab0:	str	r1, [r4, #44]	; 0x2c
   31ab4:	add	r0, r0, #32
   31ab8:	b	31a44 <__flatcc_fb_parse@@Base+0x1fbc>
   31abc:	mov	sl, fp
   31ac0:	cmp	r3, #125	; 0x7d
   31ac4:	beq	32c6c <__flatcc_fb_parse@@Base+0x31e4>
   31ac8:	cmp	r3, #9
   31acc:	mov	r3, #0
   31ad0:	str	r3, [r4, #36]	; 0x24
   31ad4:	beq	304a8 <__flatcc_fb_parse@@Base+0xa20>
   31ad8:	mov	r3, #0
   31adc:	mov	r1, sl
   31ae0:	str	r3, [sp]
   31ae4:	ldr	r2, [pc, #-4072]	; 30b04 <__flatcc_fb_parse@@Base+0x107c>
   31ae8:	mov	r0, r4
   31aec:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   31af0:	ldr	r5, [r4, #40]	; 0x28
   31af4:	b	314a4 <__flatcc_fb_parse@@Base+0x1a1c>
   31af8:	mov	r5, r7
   31afc:	cmp	r3, #125	; 0x7d
   31b00:	beq	32c4c <__flatcc_fb_parse@@Base+0x31c4>
   31b04:	cmp	r3, #9
   31b08:	str	sl, [r4, #36]	; 0x24
   31b0c:	bne	32c20 <__flatcc_fb_parse@@Base+0x3198>
   31b10:	ldr	r3, [r4, #108]	; 0x6c
   31b14:	cmp	r3, #9
   31b18:	ble	309d4 <__flatcc_fb_parse@@Base+0xf4c>
   31b1c:	ldr	r3, [r5, #16]
   31b20:	b	313bc <__flatcc_fb_parse@@Base+0x1934>
   31b24:	ldr	r3, [r5, #16]
   31b28:	b	313c4 <__flatcc_fb_parse@@Base+0x193c>
   31b2c:	ldr	fp, [r5, #16]
   31b30:	b	31878 <__flatcc_fb_parse@@Base+0x1df0>
   31b34:	ldr	fp, [r5, #16]
   31b38:	b	312c0 <__flatcc_fb_parse@@Base+0x1838>
   31b3c:	mov	r1, fp
   31b40:	cmp	lr, #58	; 0x3a
   31b44:	str	r5, [r8, #4]
   31b48:	bne	32938 <__flatcc_fb_parse@@Base+0x2eb0>
   31b4c:	add	r5, r1, #20
   31b50:	cmp	r5, r9
   31b54:	mov	sl, r9
   31b58:	str	r5, [r4, #40]	; 0x28
   31b5c:	beq	32e18 <__flatcc_fb_parse@@Base+0x3390>
   31b60:	ldr	r3, [r1, #36]	; 0x24
   31b64:	cmn	r3, #964	; 0x3c4
   31b68:	bne	31d34 <__flatcc_fb_parse@@Base+0x22ac>
   31b6c:	ldr	r0, [r4, #52]	; 0x34
   31b70:	ldr	lr, [r4, #44]	; 0x2c
   31b74:	b	31ba8 <__flatcc_fb_parse@@Base+0x2120>
   31b78:	ldr	r1, [r4, #36]	; 0x24
   31b7c:	add	r3, r5, #20
   31b80:	cmp	r3, sl
   31b84:	str	r0, [r4, #52]	; 0x34
   31b88:	stm	r2, {r1, r5}
   31b8c:	str	r2, [r4, #36]	; 0x24
   31b90:	str	r3, [r4, #40]	; 0x28
   31b94:	beq	32ca4 <__flatcc_fb_parse@@Base+0x321c>
   31b98:	ldr	r2, [r3, #16]
   31b9c:	cmn	r2, #964	; 0x3c4
   31ba0:	bne	31d34 <__flatcc_fb_parse@@Base+0x22ac>
   31ba4:	mov	r5, r3
   31ba8:	add	r3, r0, #16
   31bac:	cmp	r3, lr
   31bb0:	movls	r2, r0
   31bb4:	movls	r0, r3
   31bb8:	bls	31b78 <__flatcc_fb_parse@@Base+0x20f0>
   31bbc:	mov	r1, r7
   31bc0:	mov	r0, r6
   31bc4:	bl	13ea0 <calloc@plt>
   31bc8:	cmp	r0, #0
   31bcc:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31bd0:	ldr	r3, [r4, #48]	; 0x30
   31bd4:	add	lr, r0, #65536	; 0x10000
   31bd8:	str	r3, [r0]
   31bdc:	str	r0, [r4, #48]	; 0x30
   31be0:	add	r2, r0, #16
   31be4:	str	lr, [r4, #44]	; 0x2c
   31be8:	add	r0, r0, #32
   31bec:	b	31b78 <__flatcc_fb_parse@@Base+0x20f0>
   31bf0:	mov	r1, fp
   31bf4:	cmp	lr, #58	; 0x3a
   31bf8:	str	r5, [r8, #4]
   31bfc:	bne	327ac <__flatcc_fb_parse@@Base+0x2d24>
   31c00:	add	r5, r1, #20
   31c04:	cmp	r9, r5
   31c08:	mov	sl, r9
   31c0c:	str	r5, [r4, #40]	; 0x28
   31c10:	beq	32e18 <__flatcc_fb_parse@@Base+0x3390>
   31c14:	ldr	r3, [r1, #36]	; 0x24
   31c18:	cmn	r3, #964	; 0x3c4
   31c1c:	bne	31cac <__flatcc_fb_parse@@Base+0x2224>
   31c20:	ldr	r0, [r4, #52]	; 0x34
   31c24:	ldr	lr, [r4, #44]	; 0x2c
   31c28:	b	31c5c <__flatcc_fb_parse@@Base+0x21d4>
   31c2c:	ldr	r1, [r4, #36]	; 0x24
   31c30:	add	r3, r5, #20
   31c34:	cmp	sl, r3
   31c38:	str	r0, [r4, #52]	; 0x34
   31c3c:	stm	r2, {r1, r5}
   31c40:	str	r2, [r4, #36]	; 0x24
   31c44:	str	r3, [r4, #40]	; 0x28
   31c48:	beq	32ca4 <__flatcc_fb_parse@@Base+0x321c>
   31c4c:	ldr	r2, [r3, #16]
   31c50:	cmn	r2, #964	; 0x3c4
   31c54:	bne	31cac <__flatcc_fb_parse@@Base+0x2224>
   31c58:	mov	r5, r3
   31c5c:	add	r3, r0, #16
   31c60:	cmp	r3, lr
   31c64:	movls	r2, r0
   31c68:	movls	r0, r3
   31c6c:	bls	31c2c <__flatcc_fb_parse@@Base+0x21a4>
   31c70:	mov	r1, r7
   31c74:	mov	r0, r6
   31c78:	bl	13ea0 <calloc@plt>
   31c7c:	cmp	r0, #0
   31c80:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31c84:	ldr	r3, [r4, #48]	; 0x30
   31c88:	add	lr, r0, #65536	; 0x10000
   31c8c:	str	r3, [r0]
   31c90:	str	r0, [r4, #48]	; 0x30
   31c94:	add	r2, r0, #16
   31c98:	str	lr, [r4, #44]	; 0x2c
   31c9c:	add	r0, r0, #32
   31ca0:	b	31c2c <__flatcc_fb_parse@@Base+0x21a4>
   31ca4:	ldr	sl, [r5, #16]
   31ca8:	b	31798 <__flatcc_fb_parse@@Base+0x1d10>
   31cac:	add	r1, r8, #16
   31cb0:	mov	r0, r4
   31cb4:	bl	2e994 <__flatcc_error_report@@Base+0x268>
   31cb8:	ldr	r3, [r4, #40]	; 0x28
   31cbc:	ldr	r3, [r3, #16]
   31cc0:	cmp	r3, #61	; 0x3d
   31cc4:	bne	31ce4 <__flatcc_fb_parse@@Base+0x225c>
   31cc8:	mov	r0, r4
   31ccc:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   31cd0:	ldr	r3, [pc, #4084]	; 32ccc <__flatcc_fb_parse@@Base+0x3244>
   31cd4:	mov	r2, #2
   31cd8:	add	r1, r8, #48	; 0x30
   31cdc:	mov	r0, r4
   31ce0:	bl	2dea8 <__flatcc_fb_print_error@@Base+0x7a0>
   31ce4:	mov	r0, r4
   31ce8:	bl	2f110 <__flatcc_error_report@@Base+0x9e4>
   31cec:	ldr	r1, [r4, #40]	; 0x28
   31cf0:	mov	r3, #0
   31cf4:	ldr	r2, [r1, #16]
   31cf8:	cmp	r2, #59	; 0x3b
   31cfc:	str	r0, [r8, #64]	; 0x40
   31d00:	str	r3, [r4, #36]	; 0x24
   31d04:	beq	321b8 <__flatcc_fb_parse@@Base+0x2730>
   31d08:	str	r3, [sp, #4]
   31d0c:	str	r3, [sp]
   31d10:	ldr	r2, [pc, #4024]	; 32cd0 <__flatcc_fb_parse@@Base+0x3248>
   31d14:	mov	r0, r4
   31d18:	bl	2e72c <__flatcc_error_report@@Base>
   31d1c:	ldr	r5, [r4, #40]	; 0x28
   31d20:	ldr	fp, [r5, #16]
   31d24:	ldr	r3, [r4, #108]	; 0x6c
   31d28:	cmp	r3, #9
   31d2c:	ble	30cb8 <__flatcc_fb_parse@@Base+0x1230>
   31d30:	b	312b8 <__flatcc_fb_parse@@Base+0x1830>
   31d34:	add	r1, r8, #16
   31d38:	mov	r0, r4
   31d3c:	bl	2e994 <__flatcc_error_report@@Base+0x268>
   31d40:	ldr	r3, [r4, #40]	; 0x28
   31d44:	ldr	r3, [r3, #16]
   31d48:	cmp	r3, #61	; 0x3d
   31d4c:	bne	31d6c <__flatcc_fb_parse@@Base+0x22e4>
   31d50:	mov	r0, r4
   31d54:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   31d58:	ldr	r3, [pc, #3948]	; 32ccc <__flatcc_fb_parse@@Base+0x3244>
   31d5c:	mov	r2, #2
   31d60:	add	r1, r8, #48	; 0x30
   31d64:	mov	r0, r4
   31d68:	bl	2dea8 <__flatcc_fb_print_error@@Base+0x7a0>
   31d6c:	mov	r0, r4
   31d70:	bl	2f110 <__flatcc_error_report@@Base+0x9e4>
   31d74:	ldr	r1, [r4, #40]	; 0x28
   31d78:	mov	r3, #0
   31d7c:	ldr	r2, [r1, #16]
   31d80:	cmp	r2, #59	; 0x3b
   31d84:	str	r0, [r8, #64]	; 0x40
   31d88:	str	r3, [r4, #36]	; 0x24
   31d8c:	beq	3234c <__flatcc_fb_parse@@Base+0x28c4>
   31d90:	str	r3, [sp, #4]
   31d94:	str	r3, [sp]
   31d98:	ldr	r2, [pc, #3888]	; 32cd0 <__flatcc_fb_parse@@Base+0x3248>
   31d9c:	mov	r0, r4
   31da0:	bl	2e72c <__flatcc_error_report@@Base>
   31da4:	ldr	r5, [r4, #40]	; 0x28
   31da8:	ldr	fp, [r5, #16]
   31dac:	ldr	r3, [r4, #108]	; 0x6c
   31db0:	cmp	r3, #9
   31db4:	ble	30fc4 <__flatcc_fb_parse@@Base+0x153c>
   31db8:	b	31870 <__flatcc_fb_parse@@Base+0x1de8>
   31dbc:	mov	r1, r7
   31dc0:	cmp	lr, #40	; 0x28
   31dc4:	str	r5, [r9, #4]
   31dc8:	bne	32980 <__flatcc_fb_parse@@Base+0x2ef8>
   31dcc:	add	r7, r1, #20
   31dd0:	cmp	r8, r7
   31dd4:	str	r7, [r4, #40]	; 0x28
   31dd8:	beq	32d28 <__flatcc_fb_parse@@Base+0x32a0>
   31ddc:	ldr	r3, [r1, #36]	; 0x24
   31de0:	cmn	r3, #964	; 0x3c4
   31de4:	bne	31ee0 <__flatcc_fb_parse@@Base+0x2458>
   31de8:	ldr	r0, [r4, #52]	; 0x34
   31dec:	ldr	lr, [r4, #44]	; 0x2c
   31df0:	mov	r5, #65536	; 0x10000
   31df4:	b	31e28 <__flatcc_fb_parse@@Base+0x23a0>
   31df8:	ldr	r1, [r4, #36]	; 0x24
   31dfc:	add	r3, r7, #20
   31e00:	cmp	r8, r3
   31e04:	str	r0, [r4, #52]	; 0x34
   31e08:	stm	r2, {r1, r7}
   31e0c:	str	r2, [r4, #36]	; 0x24
   31e10:	str	r3, [r4, #40]	; 0x28
   31e14:	beq	32d2c <__flatcc_fb_parse@@Base+0x32a4>
   31e18:	ldr	r2, [r3, #16]
   31e1c:	cmn	r2, #964	; 0x3c4
   31e20:	bne	31ee0 <__flatcc_fb_parse@@Base+0x2458>
   31e24:	mov	r7, r3
   31e28:	add	r3, r0, #16
   31e2c:	cmp	r3, lr
   31e30:	movls	r2, r0
   31e34:	movls	r0, r3
   31e38:	bls	31df8 <__flatcc_fb_parse@@Base+0x2370>
   31e3c:	mov	r1, r6
   31e40:	mov	r0, r5
   31e44:	bl	13ea0 <calloc@plt>
   31e48:	cmp	r0, #0
   31e4c:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31e50:	ldr	r3, [r4, #48]	; 0x30
   31e54:	add	lr, r0, #65536	; 0x10000
   31e58:	str	r3, [r0]
   31e5c:	str	r0, [r4, #48]	; 0x30
   31e60:	add	r2, r0, #16
   31e64:	str	lr, [r4, #44]	; 0x2c
   31e68:	add	r0, r0, #32
   31e6c:	b	31df8 <__flatcc_fb_parse@@Base+0x2370>
   31e70:	mov	r1, r7
   31e74:	mov	r0, r6
   31e78:	str	r3, [sp, #16]
   31e7c:	bl	13ea0 <calloc@plt>
   31e80:	cmp	r0, #0
   31e84:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31e88:	ldr	r2, [r4, #48]	; 0x30
   31e8c:	add	fp, r0, #16
   31e90:	str	r2, [r0]
   31e94:	add	r2, r0, #65536	; 0x10000
   31e98:	str	r0, [r4, #48]	; 0x30
   31e9c:	str	r2, [r4, #44]	; 0x2c
   31ea0:	add	r0, r0, #144	; 0x90
   31ea4:	ldr	r3, [sp, #16]
   31ea8:	b	319b0 <__flatcc_fb_parse@@Base+0x1f28>
   31eac:	mov	r1, r9
   31eb0:	mov	r0, r8
   31eb4:	bl	13ea0 <calloc@plt>
   31eb8:	subs	r3, r0, #0
   31ebc:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31ec0:	ldr	r2, [r4, #48]	; 0x30
   31ec4:	add	r7, r3, #16
   31ec8:	str	r2, [r3]
   31ecc:	add	r2, r3, #65536	; 0x10000
   31ed0:	str	r3, [r4, #48]	; 0x30
   31ed4:	str	r2, [r4, #44]	; 0x2c
   31ed8:	add	r3, r3, #144	; 0x90
   31edc:	b	309e8 <__flatcc_fb_parse@@Base+0xf60>
   31ee0:	add	r1, r9, #32
   31ee4:	mov	r0, r4
   31ee8:	bl	2e994 <__flatcc_error_report@@Base+0x268>
   31eec:	ldr	r1, [r4, #40]	; 0x28
   31ef0:	ldr	r3, [r1, #16]
   31ef4:	cmp	r3, #41	; 0x29
   31ef8:	bne	32aac <__flatcc_fb_parse@@Base+0x3024>
   31efc:	ldr	r7, [r4, #24]
   31f00:	add	sl, r1, #20
   31f04:	cmp	sl, r7
   31f08:	str	sl, [r4, #40]	; 0x28
   31f0c:	beq	32d88 <__flatcc_fb_parse@@Base+0x3300>
   31f10:	ldr	r3, [r1, #36]	; 0x24
   31f14:	cmn	r3, #964	; 0x3c4
   31f18:	bne	3200c <__flatcc_fb_parse@@Base+0x2584>
   31f1c:	ldr	r0, [r4, #52]	; 0x34
   31f20:	ldr	ip, [r4, #44]	; 0x2c
   31f24:	mov	r5, #65536	; 0x10000
   31f28:	b	31f5c <__flatcc_fb_parse@@Base+0x24d4>
   31f2c:	ldr	r2, [r4, #36]	; 0x24
   31f30:	add	r1, sl, #20
   31f34:	cmp	r7, r1
   31f38:	str	r0, [r4, #52]	; 0x34
   31f3c:	stm	r3, {r2, sl}
   31f40:	str	r3, [r4, #36]	; 0x24
   31f44:	str	r1, [r4, #40]	; 0x28
   31f48:	beq	32d8c <__flatcc_fb_parse@@Base+0x3304>
   31f4c:	ldr	r3, [r1, #16]
   31f50:	cmn	r3, #964	; 0x3c4
   31f54:	bne	32010 <__flatcc_fb_parse@@Base+0x2588>
   31f58:	mov	sl, r1
   31f5c:	add	r2, r0, #16
   31f60:	cmp	r2, ip
   31f64:	movls	r3, r0
   31f68:	movls	r0, r2
   31f6c:	bls	31f2c <__flatcc_fb_parse@@Base+0x24a4>
   31f70:	mov	r1, r6
   31f74:	mov	r0, r5
   31f78:	bl	13ea0 <calloc@plt>
   31f7c:	cmp	r0, #0
   31f80:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31f84:	ldr	r3, [r4, #48]	; 0x30
   31f88:	add	ip, r0, #65536	; 0x10000
   31f8c:	str	r3, [r0]
   31f90:	str	r0, [r4, #48]	; 0x30
   31f94:	add	r3, r0, #16
   31f98:	str	ip, [r4, #44]	; 0x2c
   31f9c:	add	r0, r0, #32
   31fa0:	b	31f2c <__flatcc_fb_parse@@Base+0x24a4>
   31fa4:	mov	r1, r7
   31fa8:	mov	r0, r6
   31fac:	bl	13ea0 <calloc@plt>
   31fb0:	cmp	r0, #0
   31fb4:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31fb8:	ldr	r3, [r4, #48]	; 0x30
   31fbc:	add	r8, r0, #16
   31fc0:	str	r3, [r0]
   31fc4:	add	r3, r0, #65536	; 0x10000
   31fc8:	str	r0, [r4, #48]	; 0x30
   31fcc:	str	r3, [r4, #44]	; 0x2c
   31fd0:	add	r0, r0, #144	; 0x90
   31fd4:	b	30cd4 <__flatcc_fb_parse@@Base+0x124c>
   31fd8:	mov	r1, r7
   31fdc:	mov	r0, r6
   31fe0:	bl	13ea0 <calloc@plt>
   31fe4:	cmp	r0, #0
   31fe8:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   31fec:	ldr	r3, [r4, #48]	; 0x30
   31ff0:	add	r8, r0, #16
   31ff4:	str	r3, [r0]
   31ff8:	add	r3, r0, #65536	; 0x10000
   31ffc:	str	r0, [r4, #48]	; 0x30
   32000:	str	r3, [r4, #44]	; 0x2c
   32004:	add	r0, r0, #144	; 0x90
   32008:	b	30fe0 <__flatcc_fb_parse@@Base+0x1558>
   3200c:	mov	r1, sl
   32010:	cmp	r3, #58	; 0x3a
   32014:	bne	32ae8 <__flatcc_fb_parse@@Base+0x3060>
   32018:	mov	r0, r4
   3201c:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   32020:	add	r1, r9, #16
   32024:	mov	r0, r4
   32028:	bl	2e994 <__flatcc_error_report@@Base+0x268>
   3202c:	ldr	r5, [r4, #40]	; 0x28
   32030:	ldr	r3, [r5, #16]
   32034:	cmp	r3, #61	; 0x3d
   32038:	beq	327c4 <__flatcc_fb_parse@@Base+0x2d3c>
   3203c:	mov	r0, r4
   32040:	bl	2f110 <__flatcc_error_report@@Base+0x9e4>
   32044:	ldr	r1, [r4, #40]	; 0x28
   32048:	mov	r3, #0
   3204c:	ldr	r2, [r1, #16]
   32050:	cmp	r2, #59	; 0x3b
   32054:	str	r0, [r9, #64]	; 0x40
   32058:	str	r3, [r4, #36]	; 0x24
   3205c:	beq	32d44 <__flatcc_fb_parse@@Base+0x32bc>
   32060:	str	r3, [sp, #4]
   32064:	str	r3, [sp]
   32068:	ldr	r2, [pc, #3172]	; 32cd4 <__flatcc_fb_parse@@Base+0x324c>
   3206c:	mov	r0, r4
   32070:	bl	2e72c <__flatcc_error_report@@Base>
   32074:	ldr	r5, [r4, #40]	; 0x28
   32078:	ldr	sl, [r5, #16]
   3207c:	ldr	r3, [r4, #108]	; 0x6c
   32080:	cmp	r3, #9
   32084:	ble	3072c <__flatcc_fb_parse@@Base+0xca4>
   32088:	b	31790 <__flatcc_fb_parse@@Base+0x1d08>
   3208c:	mov	r1, r6
   32090:	mov	r0, #65536	; 0x10000
   32094:	bl	13ea0 <calloc@plt>
   32098:	cmp	r0, #0
   3209c:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   320a0:	ldr	r3, [r4, #48]	; 0x30
   320a4:	add	r9, r0, #16
   320a8:	str	r3, [r0]
   320ac:	add	r3, r0, #65536	; 0x10000
   320b0:	str	r0, [r4, #48]	; 0x30
   320b4:	str	r3, [r4, #44]	; 0x2c
   320b8:	add	r0, r0, #144	; 0x90
   320bc:	b	3074c <__flatcc_fb_parse@@Base+0xcc4>
   320c0:	mov	r0, r4
   320c4:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   320c8:	mov	r3, #0
   320cc:	str	r3, [r4, #36]	; 0x24
   320d0:	ldr	r5, [r4, #40]	; 0x28
   320d4:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   320d8:	mov	r3, #0
   320dc:	str	r3, [sp]
   320e0:	mov	r1, r5
   320e4:	ldr	r2, [pc, #3052]	; 32cd8 <__flatcc_fb_parse@@Base+0x3250>
   320e8:	mov	r0, r4
   320ec:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   320f0:	ldr	r5, [r4, #40]	; 0x28
   320f4:	ldr	fp, [r5, #16]
   320f8:	cmp	fp, #0
   320fc:	beq	329c4 <__flatcc_fb_parse@@Base+0x2f3c>
   32100:	cmp	fp, #59	; 0x3b
   32104:	beq	32a30 <__flatcc_fb_parse@@Base+0x2fa8>
   32108:	cmp	fp, #125	; 0x7d
   3210c:	beq	329d4 <__flatcc_fb_parse@@Base+0x2f4c>
   32110:	ldr	r9, [r4, #24]
   32114:	add	r8, r5, #20
   32118:	cmp	r9, r8
   3211c:	str	r8, [r4, #40]	; 0x28
   32120:	beq	32aa0 <__flatcc_fb_parse@@Base+0x3018>
   32124:	ldr	r3, [r5, #36]	; 0x24
   32128:	cmn	r3, #964	; 0x3c4
   3212c:	movne	r5, r8
   32130:	bne	320f4 <__flatcc_fb_parse@@Base+0x266c>
   32134:	ldr	r0, [r4, #52]	; 0x34
   32138:	ldr	r1, [r4, #44]	; 0x2c
   3213c:	b	32170 <__flatcc_fb_parse@@Base+0x26e8>
   32140:	ldr	r2, [r4, #36]	; 0x24
   32144:	add	r5, r8, #20
   32148:	cmp	r9, r5
   3214c:	str	r0, [r4, #52]	; 0x34
   32150:	stm	r3, {r2, r8}
   32154:	str	r3, [r4, #36]	; 0x24
   32158:	str	r5, [r4, #40]	; 0x28
   3215c:	beq	32aa4 <__flatcc_fb_parse@@Base+0x301c>
   32160:	ldr	r3, [r5, #16]
   32164:	cmn	r3, #964	; 0x3c4
   32168:	bne	320f4 <__flatcc_fb_parse@@Base+0x266c>
   3216c:	mov	r8, r5
   32170:	add	r2, r0, #16
   32174:	cmp	r2, r1
   32178:	movls	r3, r0
   3217c:	movls	r0, r2
   32180:	bls	32140 <__flatcc_fb_parse@@Base+0x26b8>
   32184:	mov	r1, r7
   32188:	mov	r0, r6
   3218c:	bl	13ea0 <calloc@plt>
   32190:	cmp	r0, #0
   32194:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   32198:	ldr	r3, [r4, #48]	; 0x30
   3219c:	add	r1, r0, #65536	; 0x10000
   321a0:	str	r3, [r0]
   321a4:	str	r0, [r4, #48]	; 0x30
   321a8:	add	r3, r0, #16
   321ac:	str	r1, [r4, #44]	; 0x2c
   321b0:	add	r0, r0, #32
   321b4:	b	32140 <__flatcc_fb_parse@@Base+0x26b8>
   321b8:	ldr	r9, [r4, #24]
   321bc:	add	r8, r1, #20
   321c0:	cmp	r8, r9
   321c4:	str	r8, [r4, #40]	; 0x28
   321c8:	beq	31104 <__flatcc_fb_parse@@Base+0x167c>
   321cc:	ldr	fp, [r1, #36]	; 0x24
   321d0:	cmn	fp, #964	; 0x3c4
   321d4:	bne	32d78 <__flatcc_fb_parse@@Base+0x32f0>
   321d8:	mov	sl, r3
   321dc:	ldr	r0, [r4, #44]	; 0x2c
   321e0:	ldr	r3, [r4, #52]	; 0x34
   321e4:	b	3221c <__flatcc_fb_parse@@Base+0x2794>
   321e8:	add	r5, r8, #20
   321ec:	cmp	r5, r9
   321f0:	str	r3, [r4, #52]	; 0x34
   321f4:	str	r8, [r2, #4]
   321f8:	str	sl, [r2]
   321fc:	str	r2, [r4, #36]	; 0x24
   32200:	str	r5, [r4, #40]	; 0x28
   32204:	beq	32d80 <__flatcc_fb_parse@@Base+0x32f8>
   32208:	ldr	r1, [r5, #16]
   3220c:	cmn	r1, #964	; 0x3c4
   32210:	bne	32264 <__flatcc_fb_parse@@Base+0x27dc>
   32214:	mov	sl, r2
   32218:	mov	r8, r5
   3221c:	add	r1, r3, #16
   32220:	cmp	r1, r0
   32224:	movls	r2, r3
   32228:	movls	r3, r1
   3222c:	bls	321e8 <__flatcc_fb_parse@@Base+0x2760>
   32230:	mov	r1, r7
   32234:	mov	r0, r6
   32238:	bl	13ea0 <calloc@plt>
   3223c:	subs	r3, r0, #0
   32240:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   32244:	ldr	r2, [r4, #48]	; 0x30
   32248:	add	r0, r3, #65536	; 0x10000
   3224c:	str	r2, [r3]
   32250:	str	r3, [r4, #48]	; 0x30
   32254:	add	r2, r3, #16
   32258:	str	r0, [r4, #44]	; 0x2c
   3225c:	add	r3, r3, #32
   32260:	b	321e8 <__flatcc_fb_parse@@Base+0x2760>
   32264:	ldr	fp, [r8, #36]	; 0x24
   32268:	b	31d24 <__flatcc_fb_parse@@Base+0x229c>
   3226c:	mov	r3, #0
   32270:	str	r3, [sp]
   32274:	mov	r1, r5
   32278:	ldr	r2, [pc, #2648]	; 32cd8 <__flatcc_fb_parse@@Base+0x3250>
   3227c:	mov	r0, r4
   32280:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   32284:	ldr	r5, [r4, #40]	; 0x28
   32288:	ldr	fp, [r5, #16]
   3228c:	cmp	fp, #0
   32290:	beq	329b4 <__flatcc_fb_parse@@Base+0x2f2c>
   32294:	cmp	fp, #59	; 0x3b
   32298:	beq	32998 <__flatcc_fb_parse@@Base+0x2f10>
   3229c:	cmp	fp, #125	; 0x7d
   322a0:	beq	32a50 <__flatcc_fb_parse@@Base+0x2fc8>
   322a4:	ldr	r9, [r4, #24]
   322a8:	add	r8, r5, #20
   322ac:	cmp	r8, r9
   322b0:	str	r8, [r4, #40]	; 0x28
   322b4:	beq	32ac4 <__flatcc_fb_parse@@Base+0x303c>
   322b8:	ldr	r3, [r5, #36]	; 0x24
   322bc:	cmn	r3, #964	; 0x3c4
   322c0:	movne	r5, r8
   322c4:	bne	32288 <__flatcc_fb_parse@@Base+0x2800>
   322c8:	ldr	r0, [r4, #52]	; 0x34
   322cc:	ldr	r1, [r4, #44]	; 0x2c
   322d0:	b	32304 <__flatcc_fb_parse@@Base+0x287c>
   322d4:	ldr	r2, [r4, #36]	; 0x24
   322d8:	add	r5, r8, #20
   322dc:	cmp	r5, r9
   322e0:	str	r0, [r4, #52]	; 0x34
   322e4:	stm	r3, {r2, r8}
   322e8:	str	r3, [r4, #36]	; 0x24
   322ec:	str	r5, [r4, #40]	; 0x28
   322f0:	beq	32c80 <__flatcc_fb_parse@@Base+0x31f8>
   322f4:	ldr	r3, [r5, #16]
   322f8:	cmn	r3, #964	; 0x3c4
   322fc:	bne	32288 <__flatcc_fb_parse@@Base+0x2800>
   32300:	mov	r8, r5
   32304:	add	r2, r0, #16
   32308:	cmp	r2, r1
   3230c:	movls	r3, r0
   32310:	movls	r0, r2
   32314:	bls	322d4 <__flatcc_fb_parse@@Base+0x284c>
   32318:	mov	r1, r7
   3231c:	mov	r0, r6
   32320:	bl	13ea0 <calloc@plt>
   32324:	cmp	r0, #0
   32328:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   3232c:	ldr	r3, [r4, #48]	; 0x30
   32330:	add	r1, r0, #65536	; 0x10000
   32334:	str	r3, [r0]
   32338:	str	r0, [r4, #48]	; 0x30
   3233c:	add	r3, r0, #16
   32340:	str	r1, [r4, #44]	; 0x2c
   32344:	add	r0, r0, #32
   32348:	b	322d4 <__flatcc_fb_parse@@Base+0x284c>
   3234c:	ldr	r9, [r4, #24]
   32350:	add	r8, r1, #20
   32354:	cmp	r9, r8
   32358:	str	r8, [r4, #40]	; 0x28
   3235c:	beq	31104 <__flatcc_fb_parse@@Base+0x167c>
   32360:	ldr	fp, [r1, #36]	; 0x24
   32364:	cmn	fp, #964	; 0x3c4
   32368:	bne	32d60 <__flatcc_fb_parse@@Base+0x32d8>
   3236c:	mov	sl, r3
   32370:	ldr	r0, [r4, #44]	; 0x2c
   32374:	ldr	r3, [r4, #52]	; 0x34
   32378:	b	323b0 <__flatcc_fb_parse@@Base+0x2928>
   3237c:	add	r5, r8, #20
   32380:	cmp	r5, r9
   32384:	str	r3, [r4, #52]	; 0x34
   32388:	str	r8, [r2, #4]
   3238c:	str	sl, [r2]
   32390:	str	r2, [r4, #36]	; 0x24
   32394:	str	r5, [r4, #40]	; 0x28
   32398:	beq	32d80 <__flatcc_fb_parse@@Base+0x32f8>
   3239c:	ldr	r1, [r5, #16]
   323a0:	cmn	r1, #964	; 0x3c4
   323a4:	bne	323f8 <__flatcc_fb_parse@@Base+0x2970>
   323a8:	mov	sl, r2
   323ac:	mov	r8, r5
   323b0:	add	r1, r3, #16
   323b4:	cmp	r1, r0
   323b8:	movls	r2, r3
   323bc:	movls	r3, r1
   323c0:	bls	3237c <__flatcc_fb_parse@@Base+0x28f4>
   323c4:	mov	r1, r7
   323c8:	mov	r0, r6
   323cc:	bl	13ea0 <calloc@plt>
   323d0:	subs	r3, r0, #0
   323d4:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   323d8:	ldr	r2, [r4, #48]	; 0x30
   323dc:	add	r0, r3, #65536	; 0x10000
   323e0:	str	r2, [r3]
   323e4:	str	r3, [r4, #48]	; 0x30
   323e8:	add	r2, r3, #16
   323ec:	str	r0, [r4, #44]	; 0x2c
   323f0:	add	r3, r3, #32
   323f4:	b	3237c <__flatcc_fb_parse@@Base+0x28f4>
   323f8:	ldr	fp, [r8, #36]	; 0x24
   323fc:	b	31dac <__flatcc_fb_parse@@Base+0x2324>
   32400:	add	sl, r5, #20
   32404:	cmp	r9, sl
   32408:	str	sl, [r4, #40]	; 0x28
   3240c:	beq	32e2c <__flatcc_fb_parse@@Base+0x33a4>
   32410:	ldr	r3, [r5, #36]	; 0x24
   32414:	cmn	r3, #964	; 0x3c4
   32418:	bne	324a0 <__flatcc_fb_parse@@Base+0x2a18>
   3241c:	ldr	r1, [r4, #44]	; 0x2c
   32420:	mov	r5, #0
   32424:	b	32458 <__flatcc_fb_parse@@Base+0x29d0>
   32428:	add	r3, sl, #20
   3242c:	cmp	r9, r3
   32430:	str	r0, [r4, #52]	; 0x34
   32434:	stm	r2, {r5, sl}
   32438:	str	r2, [r4, #36]	; 0x24
   3243c:	str	r3, [r4, #40]	; 0x28
   32440:	beq	32e3c <__flatcc_fb_parse@@Base+0x33b4>
   32444:	ldr	ip, [r3, #16]
   32448:	cmn	ip, #964	; 0x3c4
   3244c:	bne	324a0 <__flatcc_fb_parse@@Base+0x2a18>
   32450:	mov	r5, r2
   32454:	mov	sl, r3
   32458:	add	r3, r0, #16
   3245c:	cmp	r3, r1
   32460:	movls	r2, r0
   32464:	movls	r0, r3
   32468:	bls	32428 <__flatcc_fb_parse@@Base+0x29a0>
   3246c:	mov	r1, r7
   32470:	mov	r0, r6
   32474:	bl	13ea0 <calloc@plt>
   32478:	cmp	r0, #0
   3247c:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   32480:	ldr	r3, [r4, #48]	; 0x30
   32484:	add	r1, r0, #65536	; 0x10000
   32488:	str	r3, [r0]
   3248c:	str	r0, [r4, #48]	; 0x30
   32490:	add	r2, r0, #16
   32494:	str	r1, [r4, #44]	; 0x2c
   32498:	add	r0, r0, #32
   3249c:	b	32428 <__flatcc_fb_parse@@Base+0x29a0>
   324a0:	ldr	r3, [pc, #2100]	; 32cdc <__flatcc_fb_parse@@Base+0x3254>
   324a4:	add	r1, fp, #48	; 0x30
   324a8:	mov	r2, #0
   324ac:	mov	r0, r4
   324b0:	bl	2dea8 <__flatcc_fb_print_error@@Base+0x7a0>
   324b4:	ldr	r5, [r4, #40]	; 0x28
   324b8:	ldr	r3, [r5, #16]
   324bc:	cmp	r3, #44	; 0x2c
   324c0:	beq	31a18 <__flatcc_fb_parse@@Base+0x1f90>
   324c4:	cmp	r3, #125	; 0x7d
   324c8:	mov	r3, #0
   324cc:	str	r3, [r4, #36]	; 0x24
   324d0:	beq	32c74 <__flatcc_fb_parse@@Base+0x31ec>
   324d4:	str	r3, [sp, #4]
   324d8:	str	r3, [sp]
   324dc:	mov	r1, r5
   324e0:	ldr	r3, [sp, #20]
   324e4:	ldr	r2, [pc, #2036]	; 32ce0 <__flatcc_fb_parse@@Base+0x3258>
   324e8:	mov	r0, r4
   324ec:	bl	2e72c <__flatcc_error_report@@Base>
   324f0:	ldr	r3, [r8, #20]
   324f4:	cmp	r3, #0
   324f8:	beq	3251c <__flatcc_fb_parse@@Base+0x2a94>
   324fc:	mov	r1, #0
   32500:	b	32508 <__flatcc_fb_parse@@Base+0x2a80>
   32504:	mov	r3, r2
   32508:	ldr	r2, [r3]
   3250c:	str	r1, [r3]
   32510:	cmp	r2, #0
   32514:	mov	r1, r3
   32518:	bne	32504 <__flatcc_fb_parse@@Base+0x2a7c>
   3251c:	str	r3, [r8, #20]
   32520:	ldr	r5, [r4, #40]	; 0x28
   32524:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   32528:	ldr	r5, [r4, #24]
   3252c:	add	fp, r1, #20
   32530:	cmp	r5, fp
   32534:	str	fp, [r4, #40]	; 0x28
   32538:	beq	31104 <__flatcc_fb_parse@@Base+0x167c>
   3253c:	ldr	r3, [r1, #36]	; 0x24
   32540:	cmn	r3, #964	; 0x3c4
   32544:	bne	325d0 <__flatcc_fb_parse@@Base+0x2b48>
   32548:	ldr	r3, [r4, #52]	; 0x34
   3254c:	ldr	r0, [r4, #44]	; 0x2c
   32550:	b	32588 <__flatcc_fb_parse@@Base+0x2b00>
   32554:	ldr	ip, [r4, #36]	; 0x24
   32558:	add	r2, fp, #20
   3255c:	cmp	r5, r2
   32560:	str	r3, [r4, #52]	; 0x34
   32564:	str	fp, [r1, #4]
   32568:	str	ip, [r1]
   3256c:	str	r1, [r4, #36]	; 0x24
   32570:	str	r2, [r4, #40]	; 0x28
   32574:	beq	31108 <__flatcc_fb_parse@@Base+0x1680>
   32578:	ldr	r1, [r2, #16]
   3257c:	cmn	r1, #964	; 0x3c4
   32580:	bne	325d0 <__flatcc_fb_parse@@Base+0x2b48>
   32584:	mov	fp, r2
   32588:	add	r2, r3, #16
   3258c:	cmp	r2, r0
   32590:	movls	r1, r3
   32594:	movls	r3, r2
   32598:	bls	32554 <__flatcc_fb_parse@@Base+0x2acc>
   3259c:	mov	r1, r9
   325a0:	mov	r0, r8
   325a4:	bl	13ea0 <calloc@plt>
   325a8:	subs	r3, r0, #0
   325ac:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   325b0:	ldr	r2, [r4, #48]	; 0x30
   325b4:	add	r0, r3, #65536	; 0x10000
   325b8:	str	r2, [r3]
   325bc:	str	r3, [r4, #48]	; 0x30
   325c0:	add	r1, r3, #16
   325c4:	str	r0, [r4, #44]	; 0x2c
   325c8:	add	r3, r3, #32
   325cc:	b	32554 <__flatcc_fb_parse@@Base+0x2acc>
   325d0:	add	r1, r7, #48	; 0x30
   325d4:	ldr	r3, [pc, #1792]	; 32cdc <__flatcc_fb_parse@@Base+0x3254>
   325d8:	mov	r2, sl
   325dc:	mov	r0, r4
   325e0:	bl	2dea8 <__flatcc_fb_print_error@@Base+0x7a0>
   325e4:	ldr	r1, [r4, #40]	; 0x28
   325e8:	ldr	r3, [r1, #16]
   325ec:	cmp	r3, #44	; 0x2c
   325f0:	beq	30b44 <__flatcc_fb_parse@@Base+0x10bc>
   325f4:	cmp	r3, #125	; 0x7d
   325f8:	mov	r3, #0
   325fc:	str	r3, [r4, #36]	; 0x24
   32600:	beq	32c54 <__flatcc_fb_parse@@Base+0x31cc>
   32604:	str	r3, [sp, #4]
   32608:	str	r3, [sp]
   3260c:	ldr	r2, [pc, #1744]	; 32ce4 <__flatcc_fb_parse@@Base+0x325c>
   32610:	ldr	r3, [sp, #16]
   32614:	mov	r0, r4
   32618:	bl	2e72c <__flatcc_error_report@@Base>
   3261c:	ldr	r3, [r6, #20]
   32620:	cmp	r3, #0
   32624:	beq	32648 <__flatcc_fb_parse@@Base+0x2bc0>
   32628:	mov	r1, #0
   3262c:	b	32634 <__flatcc_fb_parse@@Base+0x2bac>
   32630:	mov	r3, r2
   32634:	ldr	r2, [r3]
   32638:	str	r1, [r3]
   3263c:	cmp	r2, #0
   32640:	mov	r1, r3
   32644:	bne	32630 <__flatcc_fb_parse@@Base+0x2ba8>
   32648:	ldr	ip, [r4, #52]	; 0x34
   3264c:	ldr	r2, [r4, #44]	; 0x2c
   32650:	add	r0, ip, #128	; 0x80
   32654:	cmp	r0, r2
   32658:	str	r3, [r6, #20]
   3265c:	bhi	32b84 <__flatcc_fb_parse@@Base+0x30fc>
   32660:	mov	r2, #5
   32664:	str	r0, [r4, #52]	; 0x34
   32668:	str	r3, [ip]
   3266c:	strh	r2, [ip, #8]
   32670:	str	ip, [r6, #20]
   32674:	ldr	r3, [r4, #36]	; 0x24
   32678:	cmp	r3, #0
   3267c:	beq	326a0 <__flatcc_fb_parse@@Base+0x2c18>
   32680:	mov	r1, #0
   32684:	b	3268c <__flatcc_fb_parse@@Base+0x2c04>
   32688:	mov	r3, r2
   3268c:	ldr	r2, [r3]
   32690:	str	r1, [r3]
   32694:	cmp	r2, #0
   32698:	mov	r1, r3
   3269c:	bne	32688 <__flatcc_fb_parse@@Base+0x2c00>
   326a0:	str	r3, [ip, #68]	; 0x44
   326a4:	mov	r2, #0
   326a8:	add	r3, r4, #68	; 0x44
   326ac:	str	r2, [r4, #36]	; 0x24
   326b0:	ldr	r5, [r4, #40]	; 0x28
   326b4:	str	r3, [ip, #4]
   326b8:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   326bc:	ldr	r2, [r4, #24]
   326c0:	add	fp, r1, #20
   326c4:	cmp	fp, r2
   326c8:	str	fp, [r4, #40]	; 0x28
   326cc:	beq	31104 <__flatcc_fb_parse@@Base+0x167c>
   326d0:	ldr	r3, [r1, #36]	; 0x24
   326d4:	cmn	r3, #964	; 0x3c4
   326d8:	bne	32774 <__flatcc_fb_parse@@Base+0x2cec>
   326dc:	str	r5, [sp, #20]
   326e0:	ldr	r3, [r4, #52]	; 0x34
   326e4:	ldr	lr, [r4, #44]	; 0x2c
   326e8:	mov	r5, r2
   326ec:	b	32720 <__flatcc_fb_parse@@Base+0x2c98>
   326f0:	ldr	r0, [r4, #36]	; 0x24
   326f4:	add	r1, fp, #20
   326f8:	cmp	r5, r1
   326fc:	str	r3, [r4, #52]	; 0x34
   32700:	stm	ip, {r0, fp}
   32704:	str	ip, [r4, #36]	; 0x24
   32708:	str	r1, [r4, #40]	; 0x28
   3270c:	beq	31108 <__flatcc_fb_parse@@Base+0x1680>
   32710:	ldr	r0, [r1, #16]
   32714:	cmn	r0, #964	; 0x3c4
   32718:	bne	32768 <__flatcc_fb_parse@@Base+0x2ce0>
   3271c:	mov	fp, r1
   32720:	add	r1, r3, #16
   32724:	cmp	r1, lr
   32728:	movls	ip, r3
   3272c:	movls	r3, r1
   32730:	bls	326f0 <__flatcc_fb_parse@@Base+0x2c68>
   32734:	mov	r1, r9
   32738:	mov	r0, r8
   3273c:	bl	13ea0 <calloc@plt>
   32740:	subs	r3, r0, #0
   32744:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   32748:	ldr	r1, [r4, #48]	; 0x30
   3274c:	add	lr, r3, #65536	; 0x10000
   32750:	str	r1, [r3]
   32754:	str	r3, [r4, #48]	; 0x30
   32758:	add	ip, r3, #16
   3275c:	str	lr, [r4, #44]	; 0x2c
   32760:	add	r3, r3, #32
   32764:	b	326f0 <__flatcc_fb_parse@@Base+0x2c68>
   32768:	ldr	r3, [r7, #16]
   3276c:	ldr	r5, [sp, #20]
   32770:	ldr	r0, [r3]
   32774:	cmp	r0, #0
   32778:	beq	32794 <__flatcc_fb_parse@@Base+0x2d0c>
   3277c:	str	sl, [sp]
   32780:	mov	r1, r5
   32784:	mov	r3, #0
   32788:	ldr	r2, [pc, #1368]	; 32ce8 <__flatcc_fb_parse@@Base+0x3260>
   3278c:	mov	r0, r4
   32790:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   32794:	add	r1, r7, #16
   32798:	mov	r0, r4
   3279c:	bl	2e994 <__flatcc_error_report@@Base+0x268>
   327a0:	ldr	r1, [r4, #40]	; 0x28
   327a4:	ldr	r3, [r1, #16]
   327a8:	b	30b34 <__flatcc_fb_parse@@Base+0x10ac>
   327ac:	mov	r3, #0
   327b0:	str	r3, [sp]
   327b4:	ldr	r2, [pc, #1328]	; 32cec <__flatcc_fb_parse@@Base+0x3264>
   327b8:	mov	r0, r4
   327bc:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   327c0:	b	320f0 <__flatcc_fb_parse@@Base+0x2668>
   327c4:	mov	r0, r4
   327c8:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   327cc:	mov	r3, #0
   327d0:	mov	r1, r5
   327d4:	str	r3, [sp]
   327d8:	ldr	r2, [pc, #1296]	; 32cf0 <__flatcc_fb_parse@@Base+0x3268>
   327dc:	mov	r0, r4
   327e0:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   327e4:	ldr	r5, [r4, #40]	; 0x28
   327e8:	mov	r7, #65536	; 0x10000
   327ec:	ldr	sl, [r5, #16]
   327f0:	cmp	sl, #0
   327f4:	beq	32928 <__flatcc_fb_parse@@Base+0x2ea0>
   327f8:	cmp	sl, #59	; 0x3b
   327fc:	beq	32900 <__flatcc_fb_parse@@Base+0x2e78>
   32800:	cmp	sl, #125	; 0x7d
   32804:	beq	328b0 <__flatcc_fb_parse@@Base+0x2e28>
   32808:	ldr	r8, [r4, #24]
   3280c:	add	r9, r5, #20
   32810:	cmp	r9, r8
   32814:	str	r9, [r4, #40]	; 0x28
   32818:	beq	32ac4 <__flatcc_fb_parse@@Base+0x303c>
   3281c:	ldr	r3, [r5, #36]	; 0x24
   32820:	cmn	r3, #964	; 0x3c4
   32824:	movne	r5, r9
   32828:	bne	327ec <__flatcc_fb_parse@@Base+0x2d64>
   3282c:	ldr	r0, [r4, #52]	; 0x34
   32830:	ldr	r1, [r4, #44]	; 0x2c
   32834:	b	32868 <__flatcc_fb_parse@@Base+0x2de0>
   32838:	ldr	r2, [r4, #36]	; 0x24
   3283c:	add	r5, r9, #20
   32840:	cmp	r5, r8
   32844:	str	r0, [r4, #52]	; 0x34
   32848:	stm	r3, {r2, r9}
   3284c:	str	r3, [r4, #36]	; 0x24
   32850:	str	r5, [r4, #40]	; 0x28
   32854:	beq	32ac8 <__flatcc_fb_parse@@Base+0x3040>
   32858:	ldr	r3, [r5, #16]
   3285c:	cmn	r3, #964	; 0x3c4
   32860:	bne	327ec <__flatcc_fb_parse@@Base+0x2d64>
   32864:	mov	r9, r5
   32868:	add	r2, r0, #16
   3286c:	cmp	r2, r1
   32870:	movls	r3, r0
   32874:	movls	r0, r2
   32878:	bls	32838 <__flatcc_fb_parse@@Base+0x2db0>
   3287c:	mov	r1, r6
   32880:	mov	r0, r7
   32884:	bl	13ea0 <calloc@plt>
   32888:	cmp	r0, #0
   3288c:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   32890:	ldr	r3, [r4, #48]	; 0x30
   32894:	add	r1, r0, #65536	; 0x10000
   32898:	str	r3, [r0]
   3289c:	str	r0, [r4, #48]	; 0x30
   328a0:	add	r3, r0, #16
   328a4:	str	r1, [r4, #44]	; 0x2c
   328a8:	add	r0, r0, #32
   328ac:	b	32838 <__flatcc_fb_parse@@Base+0x2db0>
   328b0:	ldr	r2, [r4, #108]	; 0x6c
   328b4:	mov	r3, #0
   328b8:	cmp	r2, #9
   328bc:	ldr	r8, [sp, #16]
   328c0:	str	r3, [r4, #36]	; 0x24
   328c4:	bgt	31790 <__flatcc_fb_parse@@Base+0x1d08>
   328c8:	mov	r0, r4
   328cc:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   328d0:	ldr	r3, [r8, #20]
   328d4:	cmp	r3, #0
   328d8:	beq	3251c <__flatcc_fb_parse@@Base+0x2a94>
   328dc:	mov	r1, #0
   328e0:	b	328e8 <__flatcc_fb_parse@@Base+0x2e60>
   328e4:	mov	r3, r2
   328e8:	ldr	r2, [r3]
   328ec:	str	r1, [r3]
   328f0:	cmp	r2, #0
   328f4:	mov	r1, r3
   328f8:	bne	328e4 <__flatcc_fb_parse@@Base+0x2e5c>
   328fc:	b	3251c <__flatcc_fb_parse@@Base+0x2a94>
   32900:	mov	r0, r4
   32904:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   32908:	mov	r3, #0
   3290c:	ldr	r5, [r4, #40]	; 0x28
   32910:	str	r3, [r4, #36]	; 0x24
   32914:	ldr	r3, [r4, #108]	; 0x6c
   32918:	ldr	sl, [r5, #16]
   3291c:	cmp	r3, #9
   32920:	ble	3072c <__flatcc_fb_parse@@Base+0xca4>
   32924:	b	31790 <__flatcc_fb_parse@@Base+0x1d08>
   32928:	ldr	r3, [r4, #108]	; 0x6c
   3292c:	cmp	r3, #9
   32930:	ble	30738 <__flatcc_fb_parse@@Base+0xcb0>
   32934:	b	31790 <__flatcc_fb_parse@@Base+0x1d08>
   32938:	mov	r3, #0
   3293c:	str	r3, [sp]
   32940:	ldr	r2, [pc, #932]	; 32cec <__flatcc_fb_parse@@Base+0x3264>
   32944:	mov	r0, r4
   32948:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   3294c:	b	32284 <__flatcc_fb_parse@@Base+0x27fc>
   32950:	str	fp, [sp]
   32954:	mov	r3, fp
   32958:	mov	r1, r5
   3295c:	ldr	r2, [pc, #912]	; 32cf4 <__flatcc_fb_parse@@Base+0x326c>
   32960:	mov	r0, r4
   32964:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   32968:	b	327e4 <__flatcc_fb_parse@@Base+0x2d5c>
   3296c:	mov	r0, r4
   32970:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   32974:	str	r6, [r4, #544]	; 0x220
   32978:	ldr	r5, [r4, #40]	; 0x28
   3297c:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   32980:	mov	r3, #0
   32984:	str	r3, [sp]
   32988:	ldr	r2, [pc, #872]	; 32cf8 <__flatcc_fb_parse@@Base+0x3270>
   3298c:	mov	r0, r4
   32990:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   32994:	b	327e4 <__flatcc_fb_parse@@Base+0x2d5c>
   32998:	mov	r0, r4
   3299c:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   329a0:	ldr	r5, [r4, #40]	; 0x28
   329a4:	mov	r3, #0
   329a8:	str	r3, [r4, #36]	; 0x24
   329ac:	ldr	fp, [r5, #16]
   329b0:	b	31dac <__flatcc_fb_parse@@Base+0x2324>
   329b4:	ldr	r3, [r4, #108]	; 0x6c
   329b8:	cmp	r3, #9
   329bc:	ble	30fcc <__flatcc_fb_parse@@Base+0x1544>
   329c0:	b	31870 <__flatcc_fb_parse@@Base+0x1de8>
   329c4:	ldr	r3, [r4, #108]	; 0x6c
   329c8:	cmp	r3, #9
   329cc:	ble	30cc0 <__flatcc_fb_parse@@Base+0x1238>
   329d0:	b	312b8 <__flatcc_fb_parse@@Base+0x1830>
   329d4:	ldr	r2, [r4, #108]	; 0x6c
   329d8:	mov	r3, #0
   329dc:	cmp	r2, #9
   329e0:	str	r3, [r4, #36]	; 0x24
   329e4:	bgt	312b8 <__flatcc_fb_parse@@Base+0x1830>
   329e8:	mov	r0, r4
   329ec:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   329f0:	ldr	r3, [sp, #16]
   329f4:	ldr	r3, [r3, #20]
   329f8:	cmp	r3, #0
   329fc:	beq	32a20 <__flatcc_fb_parse@@Base+0x2f98>
   32a00:	mov	r1, #0
   32a04:	b	32a0c <__flatcc_fb_parse@@Base+0x2f84>
   32a08:	mov	r3, r2
   32a0c:	ldr	r2, [r3]
   32a10:	str	r1, [r3]
   32a14:	cmp	r2, #0
   32a18:	mov	r1, r3
   32a1c:	bne	32a08 <__flatcc_fb_parse@@Base+0x2f80>
   32a20:	ldr	r2, [sp, #16]
   32a24:	ldr	r5, [r4, #40]	; 0x28
   32a28:	str	r3, [r2, #20]
   32a2c:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   32a30:	mov	r0, r4
   32a34:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   32a38:	ldr	r5, [r4, #40]	; 0x28
   32a3c:	mov	r3, #0
   32a40:	str	r3, [r4, #36]	; 0x24
   32a44:	ldr	fp, [r5, #16]
   32a48:	b	31d24 <__flatcc_fb_parse@@Base+0x229c>
   32a4c:	bl	14098 <__assert_fail@plt+0x60>
   32a50:	ldr	r2, [r4, #108]	; 0x6c
   32a54:	mov	r3, #0
   32a58:	cmp	r2, #9
   32a5c:	str	r3, [r4, #36]	; 0x24
   32a60:	bgt	31870 <__flatcc_fb_parse@@Base+0x1de8>
   32a64:	mov	r0, r4
   32a68:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   32a6c:	ldr	r3, [sp, #16]
   32a70:	ldr	r3, [r3, #20]
   32a74:	cmp	r3, #0
   32a78:	beq	32a20 <__flatcc_fb_parse@@Base+0x2f98>
   32a7c:	mov	r1, #0
   32a80:	b	32a88 <__flatcc_fb_parse@@Base+0x3000>
   32a84:	mov	r3, r2
   32a88:	ldr	r2, [r3]
   32a8c:	str	r1, [r3]
   32a90:	cmp	r2, #0
   32a94:	mov	r1, r3
   32a98:	bne	32a84 <__flatcc_fb_parse@@Base+0x2ffc>
   32a9c:	b	32a20 <__flatcc_fb_parse@@Base+0x2f98>
   32aa0:	mov	r8, r5
   32aa4:	str	r8, [r4, #40]	; 0x28
   32aa8:	b	3110c <__flatcc_fb_parse@@Base+0x1684>
   32aac:	mov	r3, #0
   32ab0:	str	r3, [sp]
   32ab4:	ldr	r2, [pc, #576]	; 32cfc <__flatcc_fb_parse@@Base+0x3274>
   32ab8:	mov	r0, r4
   32abc:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   32ac0:	b	327e4 <__flatcc_fb_parse@@Base+0x2d5c>
   32ac4:	mov	r9, r5
   32ac8:	str	r9, [r4, #40]	; 0x28
   32acc:	b	3110c <__flatcc_fb_parse@@Base+0x1684>
   32ad0:	mov	r3, r5
   32ad4:	str	r5, [sp]
   32ad8:	ldr	r2, [pc, #544]	; 32d00 <__flatcc_fb_parse@@Base+0x3278>
   32adc:	mov	r0, r4
   32ae0:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   32ae4:	b	30464 <__flatcc_fb_parse@@Base+0x9dc>
   32ae8:	mov	r3, #0
   32aec:	str	r3, [sp]
   32af0:	ldr	r2, [pc, #524]	; 32d04 <__flatcc_fb_parse@@Base+0x327c>
   32af4:	mov	r0, r4
   32af8:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   32afc:	b	327e4 <__flatcc_fb_parse@@Base+0x2d5c>
   32b00:	str	r5, [sp]
   32b04:	mov	r3, r5
   32b08:	ldr	r2, [pc, #504]	; 32d08 <__flatcc_fb_parse@@Base+0x3280>
   32b0c:	mov	r0, r4
   32b10:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   32b14:	ldr	r5, [r4, #40]	; 0x28
   32b18:	ldr	fp, [r5, #16]
   32b1c:	b	31870 <__flatcc_fb_parse@@Base+0x1de8>
   32b20:	mov	r3, sl
   32b24:	str	sl, [sp]
   32b28:	ldr	r1, [sp, #16]
   32b2c:	ldr	r2, [pc, #472]	; 32d0c <__flatcc_fb_parse@@Base+0x3284>
   32b30:	mov	r0, r4
   32b34:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   32b38:	ldr	r5, [r4, #40]	; 0x28
   32b3c:	ldr	r3, [r5, #16]
   32b40:	b	313bc <__flatcc_fb_parse@@Base+0x1934>
   32b44:	str	r5, [sp]
   32b48:	mov	r3, r5
   32b4c:	ldr	r2, [pc, #436]	; 32d08 <__flatcc_fb_parse@@Base+0x3280>
   32b50:	mov	r0, r4
   32b54:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   32b58:	ldr	r5, [r4, #40]	; 0x28
   32b5c:	ldr	sl, [r5, #16]
   32b60:	b	31790 <__flatcc_fb_parse@@Base+0x1d08>
   32b64:	mov	r1, r3
   32b68:	str	r0, [sp]
   32b6c:	mov	r3, r0
   32b70:	ldr	r2, [pc, #408]	; 32d10 <__flatcc_fb_parse@@Base+0x3288>
   32b74:	mov	r0, r4
   32b78:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   32b7c:	ldr	r0, [r4, #108]	; 0x6c
   32b80:	b	2ff70 <__flatcc_fb_parse@@Base+0x4e8>
   32b84:	mov	r1, #1
   32b88:	mov	r0, #65536	; 0x10000
   32b8c:	bl	13ea0 <calloc@plt>
   32b90:	cmp	r0, #0
   32b94:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   32b98:	ldr	r3, [r4, #48]	; 0x30
   32b9c:	add	r2, r0, #65536	; 0x10000
   32ba0:	str	r0, [r4, #48]	; 0x30
   32ba4:	str	r3, [r0]
   32ba8:	add	ip, r0, #16
   32bac:	ldr	r3, [r6, #20]
   32bb0:	add	r0, r0, #144	; 0x90
   32bb4:	str	r2, [r4, #44]	; 0x2c
   32bb8:	b	32660 <__flatcc_fb_parse@@Base+0x2bd8>
   32bbc:	add	r1, sp, #24
   32bc0:	mov	r0, r4
   32bc4:	bl	2d860 <__flatcc_fb_print_error@@Base+0x158>
   32bc8:	ldr	r1, [r4, #40]	; 0x28
   32bcc:	mov	r3, #0
   32bd0:	str	r3, [r4, #36]	; 0x24
   32bd4:	ldr	r2, [r1, #16]
   32bd8:	cmp	r2, #59	; 0x3b
   32bdc:	beq	32dd8 <__flatcc_fb_parse@@Base+0x3350>
   32be0:	str	r3, [sp, #4]
   32be4:	str	r3, [sp]
   32be8:	ldr	r2, [pc, #292]	; 32d14 <__flatcc_fb_parse@@Base+0x328c>
   32bec:	mov	r3, r5
   32bf0:	mov	r0, r4
   32bf4:	bl	2e72c <__flatcc_error_report@@Base>
   32bf8:	ldr	r6, [sp, #24]
   32bfc:	mov	r2, #0
   32c00:	mov	r1, r6
   32c04:	ldr	r0, [r4, #412]	; 0x19c
   32c08:	bl	28a80 <fb_scope_table_find@@Base>
   32c0c:	cmp	r0, #0
   32c10:	beq	32d94 <__flatcc_fb_parse@@Base+0x330c>
   32c14:	str	r0, [r4, #544]	; 0x220
   32c18:	ldr	r5, [r4, #40]	; 0x28
   32c1c:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   32c20:	mov	r3, #0
   32c24:	mov	r1, r5
   32c28:	str	r3, [sp]
   32c2c:	ldr	r2, [pc, #228]	; 32d18 <__flatcc_fb_parse@@Base+0x3290>
   32c30:	mov	r0, r4
   32c34:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   32c38:	ldr	r5, [r4, #40]	; 0x28
   32c3c:	ldr	r3, [r5, #16]
   32c40:	b	313bc <__flatcc_fb_parse@@Base+0x1934>
   32c44:	ldr	r5, [r4, #40]	; 0x28
   32c48:	b	31b1c <__flatcc_fb_parse@@Base+0x2094>
   32c4c:	mov	r3, #0
   32c50:	str	r3, [r4, #36]	; 0x24
   32c54:	mov	r0, r4
   32c58:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   32c5c:	b	3261c <__flatcc_fb_parse@@Base+0x2b94>
   32c60:	mov	r3, #0
   32c64:	str	r3, [r4, #36]	; 0x24
   32c68:	b	30084 <__flatcc_fb_parse@@Base+0x5fc>
   32c6c:	mov	r3, #0
   32c70:	str	r3, [r4, #36]	; 0x24
   32c74:	mov	r0, r4
   32c78:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   32c7c:	b	324f0 <__flatcc_fb_parse@@Base+0x2a68>
   32c80:	mov	r9, r8
   32c84:	b	32ac8 <__flatcc_fb_parse@@Base+0x3040>
   32c88:	ldr	r5, [r4, #40]	; 0x28
   32c8c:	ldr	sl, [r5, #16]
   32c90:	b	31790 <__flatcc_fb_parse@@Base+0x1d08>
   32c94:	ldr	r5, [r4, #40]	; 0x28
   32c98:	ldr	fp, [r5, #16]
   32c9c:	b	31870 <__flatcc_fb_parse@@Base+0x1de8>
   32ca0:	mov	r5, r2
   32ca4:	str	r5, [r4, #40]	; 0x28
   32ca8:	b	3110c <__flatcc_fb_parse@@Base+0x1684>
   32cac:	ldr	r2, [r4, #380]	; 0x17c
   32cb0:	ldr	r3, [r4, #376]	; 0x178
   32cb4:	ldr	r1, [r4, #40]	; 0x28
   32cb8:	mov	r0, r4
   32cbc:	str	r2, [sp]
   32cc0:	ldr	r2, [pc, #84]	; 32d1c <__flatcc_fb_parse@@Base+0x3294>
   32cc4:	bl	2d780 <__flatcc_fb_print_error@@Base+0x78>
   32cc8:	b	30890 <__flatcc_fb_parse@@Base+0xe08>
   32ccc:	andeq	r9, r5, r8, asr #6
   32cd0:	andeq	r9, r5, ip, ror #6
   32cd4:	andeq	r9, r5, r8, asr r4
   32cd8:	andeq	r9, r5, r0, lsl #6
   32cdc:	andeq	r9, r5, r8, lsr r7
   32ce0:	strdeq	r9, [r5], -r8
   32ce4:			; <UNDEFINED> instruction: 0x000595bc
   32ce8:	andeq	r9, r5, r0, lsl #11
   32cec:	andeq	r9, r5, ip, lsl r3
   32cf0:	andeq	r9, r5, r0, lsr r4
   32cf4:	muleq	r5, r0, r3
   32cf8:	andeq	r9, r5, ip, lsr #7
   32cfc:	ldrdeq	r9, [r5], -r4
   32d00:	andeq	r9, r5, r4, lsr #9
   32d04:	strdeq	r9, [r5], -ip
   32d08:	andeq	r9, r5, r4, ror #5
   32d0c:	andeq	r9, r5, r4, asr #10
   32d10:	andeq	r9, r5, r0, lsr #14
   32d14:	andeq	r9, r5, r0, lsl r1
   32d18:	andeq	r9, r5, r4, ror #10
   32d1c:	andeq	r9, r5, r8, lsr r1
   32d20:	ldr	r8, [sp, #16]
   32d24:	b	328c8 <__flatcc_fb_parse@@Base+0x2e40>
   32d28:	mov	r7, r1
   32d2c:	str	r7, [r4, #40]	; 0x28
   32d30:	b	3110c <__flatcc_fb_parse@@Base+0x1684>
   32d34:	str	r3, [sp, #16]
   32d38:	ldr	r1, [r4, #44]	; 0x2c
   32d3c:	mov	r9, r6
   32d40:	b	30f04 <__flatcc_fb_parse@@Base+0x147c>
   32d44:	mov	r0, r4
   32d48:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   32d4c:	ldr	r5, [r4, #40]	; 0x28
   32d50:	ldr	sl, [r5, #16]
   32d54:	b	3207c <__flatcc_fb_parse@@Base+0x25f4>
   32d58:	mov	r5, r8
   32d5c:	b	30240 <__flatcc_fb_parse@@Base+0x7b8>
   32d60:	mov	r5, r8
   32d64:	b	31dac <__flatcc_fb_parse@@Base+0x2324>
   32d68:	mov	r5, r8
   32d6c:	b	31698 <__flatcc_fb_parse@@Base+0x1c10>
   32d70:	mov	r5, r8
   32d74:	b	31588 <__flatcc_fb_parse@@Base+0x1b00>
   32d78:	mov	r5, r8
   32d7c:	b	31d24 <__flatcc_fb_parse@@Base+0x229c>
   32d80:	mov	fp, r8
   32d84:	b	31108 <__flatcc_fb_parse@@Base+0x1680>
   32d88:	mov	sl, r1
   32d8c:	str	sl, [r4, #40]	; 0x28
   32d90:	b	3110c <__flatcc_fb_parse@@Base+0x1684>
   32d94:	ldr	r5, [r4, #52]	; 0x34
   32d98:	ldr	r2, [r4, #44]	; 0x2c
   32d9c:	add	r3, r5, #32
   32da0:	cmp	r3, r2
   32da4:	bhi	32de4 <__flatcc_fb_parse@@Base+0x335c>
   32da8:	add	r2, r4, #476	; 0x1dc
   32dac:	mov	ip, r5
   32db0:	ldm	r2, {r0, r1}
   32db4:	str	r3, [r4, #52]	; 0x34
   32db8:	mov	r2, #1
   32dbc:	str	r6, [ip], #20
   32dc0:	stm	ip, {r0, r1}
   32dc4:	mov	r1, r5
   32dc8:	ldr	r0, [r4, #412]	; 0x19c
   32dcc:	bl	28a6c <fb_scope_table_insert_item@@Base>
   32dd0:	mov	r0, r5
   32dd4:	b	32c14 <__flatcc_fb_parse@@Base+0x318c>
   32dd8:	mov	r0, r4
   32ddc:	bl	2a640 <__flatcc_fb_default_error_out@@Base+0xd4>
   32de0:	b	32bf8 <__flatcc_fb_parse@@Base+0x3170>
   32de4:	mov	r1, #1
   32de8:	mov	r0, #65536	; 0x10000
   32dec:	bl	13ea0 <calloc@plt>
   32df0:	cmp	r0, #0
   32df4:	beq	32a4c <__flatcc_fb_parse@@Base+0x2fc4>
   32df8:	ldr	r3, [r4, #48]	; 0x30
   32dfc:	add	r2, r0, #65536	; 0x10000
   32e00:	str	r3, [r0]
   32e04:	add	r5, r0, #16
   32e08:	str	r0, [r4, #48]	; 0x30
   32e0c:	add	r3, r0, #48	; 0x30
   32e10:	str	r2, [r4, #44]	; 0x2c
   32e14:	b	32da8 <__flatcc_fb_parse@@Base+0x3320>
   32e18:	mov	r5, r1
   32e1c:	b	32ca4 <__flatcc_fb_parse@@Base+0x321c>
   32e20:	mov	r6, r5
   32e24:	str	r6, [r4, #40]	; 0x28
   32e28:	b	3110c <__flatcc_fb_parse@@Base+0x1684>
   32e2c:	mov	fp, r5
   32e30:	b	31108 <__flatcc_fb_parse@@Base+0x1680>
   32e34:	mov	r7, r5
   32e38:	b	32d2c <__flatcc_fb_parse@@Base+0x32a4>
   32e3c:	mov	fp, sl
   32e40:	b	31108 <__flatcc_fb_parse@@Base+0x1680>

00032e44 <__flatcc_fb_clear_parser@@Base>:
   32e44:	push	{r4, r5, r6, lr}
   32e48:	mov	r5, r0
   32e4c:	ldr	r4, [r0, #392]	; 0x188
   32e50:	cmp	r4, #0
   32e54:	bne	32e68 <__flatcc_fb_clear_parser@@Base+0x24>
   32e58:	b	32e90 <__flatcc_fb_clear_parser@@Base+0x4c>
   32e5c:	ldr	r4, [r4]
   32e60:	cmp	r4, #0
   32e64:	beq	32e90 <__flatcc_fb_clear_parser@@Base+0x4c>
   32e68:	ldrh	r3, [r4, #8]
   32e6c:	cmp	r3, #4
   32e70:	bhi	32e5c <__flatcc_fb_clear_parser@@Base+0x18>
   32e74:	add	r0, r4, #56	; 0x38
   32e78:	bl	27b50 <fb_symbol_table_clear@@Base>
   32e7c:	add	r0, r4, #72	; 0x48
   32e80:	bl	3fa30 <fb_value_set_clear@@Base>
   32e84:	ldr	r4, [r4]
   32e88:	cmp	r4, #0
   32e8c:	bne	32e68 <__flatcc_fb_clear_parser@@Base+0x24>
   32e90:	add	r0, r5, #448	; 0x1c0
   32e94:	bl	298a0 <fb_schema_table_clear@@Base>
   32e98:	add	r0, r5, #432	; 0x1b0
   32e9c:	bl	3f1e0 <fb_name_table_clear@@Base>
   32ea0:	add	r0, r5, #524	; 0x20c
   32ea4:	bl	273fc <ptr_set_clear@@Base>
   32ea8:	ldr	r0, [r5, #112]	; 0x70
   32eac:	cmp	r0, #0
   32eb0:	beq	32eb8 <__flatcc_fb_clear_parser@@Base+0x74>
   32eb4:	bl	13ed0 <free@plt>
   32eb8:	ldr	r0, [r5, #20]
   32ebc:	cmp	r0, #0
   32ec0:	beq	32ec8 <__flatcc_fb_clear_parser@@Base+0x84>
   32ec4:	bl	13ed0 <free@plt>
   32ec8:	ldr	r0, [r5, #512]	; 0x200
   32ecc:	cmp	r0, #0
   32ed0:	beq	32ed8 <__flatcc_fb_clear_parser@@Base+0x94>
   32ed4:	bl	13ed0 <free@plt>
   32ed8:	ldr	r0, [r5, #516]	; 0x204
   32edc:	cmp	r0, #0
   32ee0:	beq	32ee8 <__flatcc_fb_clear_parser@@Base+0xa4>
   32ee4:	bl	13ed0 <free@plt>
   32ee8:	ldr	r0, [r5, #520]	; 0x208
   32eec:	cmp	r0, #0
   32ef0:	beq	32ef8 <__flatcc_fb_clear_parser@@Base+0xb4>
   32ef4:	bl	13ed0 <free@plt>
   32ef8:	ldr	r0, [r5, #548]	; 0x224
   32efc:	cmp	r0, #0
   32f00:	beq	32f08 <__flatcc_fb_clear_parser@@Base+0xc4>
   32f04:	bl	13ed0 <free@plt>
   32f08:	add	r0, r5, #416	; 0x1a0
   32f0c:	mov	r2, #0
   32f10:	ldr	r1, [pc, #64]	; 32f58 <__flatcc_fb_clear_parser@@Base+0x114>
   32f14:	bl	28480 <fb_scope_table_destroy@@Base>
   32f18:	ldr	r0, [r5, #48]	; 0x30
   32f1c:	cmp	r0, #0
   32f20:	beq	32f34 <__flatcc_fb_clear_parser@@Base+0xf0>
   32f24:	ldr	r4, [r0]
   32f28:	bl	13ed0 <free@plt>
   32f2c:	subs	r0, r4, #0
   32f30:	bne	32f24 <__flatcc_fb_clear_parser@@Base+0xe0>
   32f34:	ldr	r0, [r5, #16]
   32f38:	cmp	r0, #0
   32f3c:	beq	32f44 <__flatcc_fb_clear_parser@@Base+0x100>
   32f40:	bl	13ed0 <free@plt>
   32f44:	mov	r0, r5
   32f48:	mov	r2, #560	; 0x230
   32f4c:	mov	r1, #0
   32f50:	pop	{r4, r5, r6, lr}
   32f54:	b	13f9c <memset@plt>
   32f58:	andeq	sl, r2, r4, lsl #11
   32f5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32f60:	sub	sp, sp, #20
   32f64:	ldrh	fp, [r1, #8]
   32f68:	cmp	fp, #1
   32f6c:	bne	333bc <__flatcc_fb_clear_parser@@Base+0x578>
   32f70:	ldrh	r3, [r1, #10]
   32f74:	mov	sl, r0
   32f78:	mov	r5, r1
   32f7c:	ands	r0, r3, #1
   32f80:	bne	333d0 <__flatcc_fb_clear_parser@@Base+0x58c>
   32f84:	tst	r3, #2
   32f88:	bne	32ff8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   32f8c:	ldr	r1, [r1, #120]	; 0x78
   32f90:	cmp	r1, #0
   32f94:	bne	333e4 <__flatcc_fb_clear_parser@@Base+0x5a0>
   32f98:	ldr	r4, [r5, #20]
   32f9c:	orr	r3, r3, #1
   32fa0:	cmp	r4, #0
   32fa4:	strh	r3, [r5, #10]
   32fa8:	beq	33268 <__flatcc_fb_clear_parser@@Base+0x424>
   32fac:	ldr	r2, [sl, #116]	; 0x74
   32fb0:	cmp	r2, #99	; 0x63
   32fb4:	strle	r1, [sp, #12]
   32fb8:	bgt	33220 <__flatcc_fb_clear_parser@@Base+0x3dc>
   32fbc:	ldrh	r3, [r4, #24]
   32fc0:	cmp	r3, #8
   32fc4:	beq	330a0 <__flatcc_fb_clear_parser@@Base+0x25c>
   32fc8:	cmp	r3, #14
   32fcc:	beq	3300c <__flatcc_fb_clear_parser@@Base+0x1c8>
   32fd0:	cmp	r3, #1
   32fd4:	beq	33000 <__flatcc_fb_clear_parser@@Base+0x1bc>
   32fd8:	mov	r3, #0
   32fdc:	ldr	r1, [r4, #4]
   32fe0:	mov	r0, sl
   32fe4:	str	r3, [sp, #4]
   32fe8:	str	r3, [sp]
   32fec:	ldr	r2, [pc, #1028]	; 333f8 <__flatcc_fb_clear_parser@@Base+0x5b4>
   32ff0:	bl	2e72c <__flatcc_error_report@@Base>
   32ff4:	mvn	r0, #0
   32ff8:	add	sp, sp, #20
   32ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33000:	mvn	r0, #0
   33004:	add	sp, sp, #20
   33008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3300c:	ldr	r6, [r4, #16]
   33010:	ldrh	r3, [r6, #8]
   33014:	cmp	r3, #3
   33018:	beq	3311c <__flatcc_fb_clear_parser@@Base+0x2d8>
   3301c:	cmp	r3, #1
   33020:	bne	33370 <__flatcc_fb_clear_parser@@Base+0x52c>
   33024:	ldrh	r3, [r6, #10]
   33028:	tst	r3, #1
   3302c:	bne	33348 <__flatcc_fb_clear_parser@@Base+0x504>
   33030:	ands	r0, r3, #2
   33034:	bne	3306c <__flatcc_fb_clear_parser@@Base+0x228>
   33038:	ldr	r3, [sl, #188]	; 0xbc
   3303c:	cmp	r3, #0
   33040:	bne	33244 <__flatcc_fb_clear_parser@@Base+0x400>
   33044:	add	r2, r2, #1
   33048:	str	r2, [sl, #116]	; 0x74
   3304c:	mov	r1, r6
   33050:	mov	r0, sl
   33054:	bl	32f5c <__flatcc_fb_clear_parser@@Base+0x118>
   33058:	ldr	r3, [sl, #116]	; 0x74
   3305c:	sub	r3, r3, #1
   33060:	str	r3, [sl, #116]	; 0x74
   33064:	cmp	r0, #0
   33068:	bne	32ff8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   3306c:	ldrh	ip, [r6, #104]	; 0x68
   33070:	ldrd	r6, [r6, #112]	; 0x70
   33074:	strh	ip, [r4, #74]	; 0x4a
   33078:	strd	r6, [r4, #88]	; 0x58
   3307c:	uxth	r0, ip
   33080:	subs	r2, r0, #1
   33084:	mov	r1, #0
   33088:	sbc	r3, r1, #0
   3308c:	cmp	r3, #0
   33090:	cmpeq	r2, #255	; 0xff
   33094:	ldrd	r8, [r5, #112]	; 0x70
   33098:	bls	33130 <__flatcc_fb_clear_parser@@Base+0x2ec>
   3309c:	bl	140c4 <__assert_fail@plt+0x8c>
   330a0:	ldr	r3, [r4, #16]
   330a4:	ldr	r2, [r3, #16]
   330a8:	add	r2, r2, #996	; 0x3e4
   330ac:	add	r2, r2, #3
   330b0:	cmp	r2, #27
   330b4:	bls	330e4 <__flatcc_fb_clear_parser@@Base+0x2a0>
   330b8:	mov	r2, #0
   330bc:	str	r2, [r4, #16]
   330c0:	mov	r2, #0
   330c4:	ldr	r1, [r4, #4]
   330c8:	mov	r0, sl
   330cc:	str	r2, [sp, #4]
   330d0:	str	r2, [sp]
   330d4:	ldr	r2, [pc, #796]	; 333f8 <__flatcc_fb_clear_parser@@Base+0x5b4>
   330d8:	bl	2e72c <__flatcc_error_report@@Base>
   330dc:	mvn	r0, #0
   330e0:	b	32ff8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   330e4:	ldr	r1, [pc, #784]	; 333fc <__flatcc_fb_clear_parser@@Base+0x5b8>
   330e8:	mov	r7, #0
   330ec:	add	r2, r1, r2, lsl #2
   330f0:	ldr	r2, [r2, #28]
   330f4:	str	r2, [r4, #16]
   330f8:	add	r2, r1, r2, lsl #2
   330fc:	ldr	ip, [r2, #140]	; 0x8c
   33100:	cmp	ip, #0
   33104:	mov	r6, ip
   33108:	beq	330c0 <__flatcc_fb_clear_parser@@Base+0x27c>
   3310c:	uxth	ip, ip
   33110:	strh	ip, [r4, #74]	; 0x4a
   33114:	strd	r6, [r4, #88]	; 0x58
   33118:	b	3307c <__flatcc_fb_clear_parser@@Base+0x238>
   3311c:	ldrd	r6, [r6, #112]	; 0x70
   33120:	uxth	ip, r6
   33124:	strd	r6, [r4, #88]	; 0x58
   33128:	strh	ip, [r4, #74]	; 0x4a
   3312c:	b	3307c <__flatcc_fb_clear_parser@@Base+0x238>
   33130:	cmp	r1, #0
   33134:	cmpeq	r0, #1
   33138:	beq	33168 <__flatcc_fb_clear_parser@@Base+0x324>
   3313c:	mov	r2, #2
   33140:	mov	r3, #0
   33144:	b	3315c <__flatcc_fb_clear_parser@@Base+0x318>
   33148:	adds	r2, r2, r2
   3314c:	adc	r3, r3, r3
   33150:	cmp	r1, r3
   33154:	cmpeq	r0, r2
   33158:	bcc	3309c <__flatcc_fb_clear_parser@@Base+0x258>
   3315c:	cmp	r1, r3
   33160:	cmpeq	r0, r2
   33164:	bne	33148 <__flatcc_fb_clear_parser@@Base+0x304>
   33168:	subs	r2, r8, #1
   3316c:	sbc	r3, r9, #0
   33170:	adds	r2, r2, r0
   33174:	adc	r3, r3, r1
   33178:	rsbs	r0, r0, #0
   3317c:	rsc	r1, r1, #0
   33180:	and	r1, r1, r3
   33184:	and	r0, r0, r2
   33188:	cmp	r9, r1
   3318c:	cmpeq	r8, r0
   33190:	strd	r0, [r4, #80]	; 0x50
   33194:	bhi	33324 <__flatcc_fb_clear_parser@@Base+0x4e0>
   33198:	adds	r6, r6, r0
   3319c:	adc	r7, r7, r1
   331a0:	cmp	r7, r1
   331a4:	cmpeq	r6, r0
   331a8:	bcc	33324 <__flatcc_fb_clear_parser@@Base+0x4e0>
   331ac:	cmp	r9, r7
   331b0:	cmpeq	r8, r6
   331b4:	ldr	r0, [pc, #580]	; 33400 <__flatcc_fb_clear_parser@@Base+0x5bc>
   331b8:	mov	r1, #0
   331bc:	movhi	r3, #1
   331c0:	movls	r3, #0
   331c4:	cmp	r7, r1
   331c8:	cmpeq	r6, r0
   331cc:	orrhi	r3, r3, #1
   331d0:	cmp	r3, #0
   331d4:	beq	331fc <__flatcc_fb_clear_parser@@Base+0x3b8>
   331d8:	ldr	r2, [sp, #12]
   331dc:	ldr	r1, [r4, #4]
   331e0:	mov	r3, #0
   331e4:	str	r2, [sp, #4]
   331e8:	str	r2, [sp]
   331ec:	mov	r0, sl
   331f0:	ldr	r2, [pc, #524]	; 33404 <__flatcc_fb_clear_parser@@Base+0x5c0>
   331f4:	bl	2e72c <__flatcc_error_report@@Base>
   331f8:	ldrh	ip, [r4, #74]	; 0x4a
   331fc:	ldr	r4, [r4]
   33200:	cmp	ip, fp
   33204:	movcs	fp, ip
   33208:	cmp	r4, #0
   3320c:	strd	r6, [r5, #112]	; 0x70
   33210:	beq	33268 <__flatcc_fb_clear_parser@@Base+0x424>
   33214:	ldr	r2, [sl, #116]	; 0x74
   33218:	cmp	r2, #99	; 0x63
   3321c:	ble	32fbc <__flatcc_fb_clear_parser@@Base+0x178>
   33220:	mov	r3, #0
   33224:	mov	r0, sl
   33228:	str	r3, [sp, #4]
   3322c:	str	r3, [sp]
   33230:	mov	r1, r3
   33234:	ldr	r2, [pc, #460]	; 33408 <__flatcc_fb_clear_parser@@Base+0x5c4>
   33238:	bl	2e72c <__flatcc_error_report@@Base>
   3323c:	mvn	r0, #0
   33240:	b	32ff8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   33244:	ldr	r3, [r6, #4]
   33248:	ldr	r1, [r4, #4]
   3324c:	ldr	r2, [pc, #440]	; 3340c <__flatcc_fb_clear_parser@@Base+0x5c8>
   33250:	str	r0, [sp, #4]
   33254:	str	r0, [sp]
   33258:	mov	r0, sl
   3325c:	bl	2e72c <__flatcc_error_report@@Base>
   33260:	ldr	r2, [sl, #116]	; 0x74
   33264:	b	33044 <__flatcc_fb_clear_parser@@Base+0x200>
   33268:	ldrh	r2, [r5, #104]	; 0x68
   3326c:	cmp	r2, #0
   33270:	moveq	r2, fp
   33274:	strheq	fp, [r5, #104]	; 0x68
   33278:	beq	33284 <__flatcc_fb_clear_parser@@Base+0x440>
   3327c:	cmp	r2, fp
   33280:	bcc	33394 <__flatcc_fb_clear_parser@@Base+0x550>
   33284:	uxth	r2, r2
   33288:	subs	r0, r2, #1
   3328c:	mov	r3, #0
   33290:	sbc	r1, r3, #0
   33294:	cmp	r1, #0
   33298:	cmpeq	r0, #255	; 0xff
   3329c:	ldrd	r6, [r5, #112]	; 0x70
   332a0:	bhi	3309c <__flatcc_fb_clear_parser@@Base+0x258>
   332a4:	cmp	r3, #0
   332a8:	cmpeq	r2, #1
   332ac:	beq	332dc <__flatcc_fb_clear_parser@@Base+0x498>
   332b0:	mov	r0, #2
   332b4:	mov	r1, #0
   332b8:	b	332d0 <__flatcc_fb_clear_parser@@Base+0x48c>
   332bc:	adds	r0, r0, r0
   332c0:	adc	r1, r1, r1
   332c4:	cmp	r3, r1
   332c8:	cmpeq	r2, r0
   332cc:	bcc	3309c <__flatcc_fb_clear_parser@@Base+0x258>
   332d0:	cmp	r1, r3
   332d4:	cmpeq	r0, r2
   332d8:	bne	332bc <__flatcc_fb_clear_parser@@Base+0x478>
   332dc:	subs	r0, r6, #1
   332e0:	ldrh	ip, [r5, #10]
   332e4:	sbc	r1, r7, #0
   332e8:	adds	r0, r0, r2
   332ec:	adc	r1, r1, r3
   332f0:	rsbs	r2, r2, #0
   332f4:	rsc	r3, r3, #0
   332f8:	and	r2, r2, r0
   332fc:	and	r3, r3, r1
   33300:	bic	r1, ip, #1
   33304:	ldr	ip, [sl, #396]	; 0x18c
   33308:	orr	r1, r1, #2
   3330c:	strd	r2, [r5, #112]	; 0x70
   33310:	strh	r1, [r5, #10]
   33314:	str	ip, [r5, #120]	; 0x78
   33318:	mov	r0, #0
   3331c:	str	r5, [sl, #396]	; 0x18c
   33320:	b	32ff8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   33324:	mov	r3, #0
   33328:	ldr	r1, [r4, #4]
   3332c:	mov	r0, sl
   33330:	str	r3, [sp, #4]
   33334:	str	r3, [sp]
   33338:	ldr	r2, [pc, #208]	; 33410 <__flatcc_fb_clear_parser@@Base+0x5cc>
   3333c:	bl	2e72c <__flatcc_error_report@@Base>
   33340:	mvn	r0, #0
   33344:	b	32ff8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   33348:	mov	r2, #0
   3334c:	ldr	r3, [r6, #4]
   33350:	ldr	r1, [r4, #4]
   33354:	mov	r0, sl
   33358:	str	r2, [sp, #4]
   3335c:	str	r2, [sp]
   33360:	ldr	r2, [pc, #172]	; 33414 <__flatcc_fb_clear_parser@@Base+0x5d0>
   33364:	bl	2e72c <__flatcc_error_report@@Base>
   33368:	mvn	r0, #0
   3336c:	b	32ff8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   33370:	mov	r3, #0
   33374:	ldr	r1, [r4, #4]
   33378:	mov	r0, sl
   3337c:	str	r3, [sp, #4]
   33380:	str	r3, [sp]
   33384:	ldr	r2, [pc, #140]	; 33418 <__flatcc_fb_clear_parser@@Base+0x5d4>
   33388:	bl	2e72c <__flatcc_error_report@@Base>
   3338c:	mvn	r0, #0
   33390:	b	32ff8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   33394:	mov	r3, #0
   33398:	ldr	r1, [r5, #4]
   3339c:	ldr	r2, [pc, #120]	; 3341c <__flatcc_fb_clear_parser@@Base+0x5d8>
   333a0:	str	r3, [sp, #4]
   333a4:	str	r3, [sp]
   333a8:	mov	r0, sl
   333ac:	bl	2e72c <__flatcc_error_report@@Base>
   333b0:	strh	fp, [r5, #104]	; 0x68
   333b4:	mov	r2, fp
   333b8:	b	33284 <__flatcc_fb_clear_parser@@Base+0x440>
   333bc:	ldr	r3, [pc, #92]	; 33420 <__flatcc_fb_clear_parser@@Base+0x5dc>
   333c0:	ldr	r2, [pc, #92]	; 33424 <__flatcc_fb_clear_parser@@Base+0x5e0>
   333c4:	ldr	r1, [pc, #92]	; 33428 <__flatcc_fb_clear_parser@@Base+0x5e4>
   333c8:	ldr	r0, [pc, #92]	; 3342c <__flatcc_fb_clear_parser@@Base+0x5e8>
   333cc:	bl	14038 <__assert_fail@plt>
   333d0:	ldr	r3, [pc, #72]	; 33420 <__flatcc_fb_clear_parser@@Base+0x5dc>
   333d4:	mov	r2, #504	; 0x1f8
   333d8:	ldr	r1, [pc, #72]	; 33428 <__flatcc_fb_clear_parser@@Base+0x5e4>
   333dc:	ldr	r0, [pc, #76]	; 33430 <__flatcc_fb_clear_parser@@Base+0x5ec>
   333e0:	bl	14038 <__assert_fail@plt>
   333e4:	ldr	r3, [pc, #52]	; 33420 <__flatcc_fb_clear_parser@@Base+0x5dc>
   333e8:	mov	r2, #508	; 0x1fc
   333ec:	ldr	r1, [pc, #52]	; 33428 <__flatcc_fb_clear_parser@@Base+0x5e4>
   333f0:	ldr	r0, [pc, #60]	; 33434 <__flatcc_fb_clear_parser@@Base+0x5f0>
   333f4:	bl	14038 <__assert_fail@plt>
   333f8:	andeq	r9, r5, ip, asr #19
   333fc:	andeq	r9, r5, r4, asr r7
   33400:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   33404:	andeq	r9, r5, r0, lsl #21
   33408:	andeq	r9, r5, r0, lsl #19
   3340c:	strdeq	r9, [r5], -ip
   33410:	andeq	r9, r5, r8, ror #20
   33414:	ldrdeq	r9, [r5], -ip
   33418:	andeq	r9, r5, r4, asr #20
   3341c:			; <UNDEFINED> instruction: 0x00059ab4
   33420:	andeq	r9, r5, r0, ror #14
   33424:	strdeq	r0, [r0], -r6
   33428:	andeq	r9, r5, r8, ror #17
   3342c:	andeq	r2, r4, r8, lsl #6
   33430:	andeq	r9, r5, ip, asr #18
   33434:	andeq	r9, r5, r4, ror r9
   33438:	ldrh	r3, [r1, #8]
   3343c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33440:	sub	sp, sp, #236	; 0xec
   33444:	cmp	r3, #0
   33448:	str	r1, [sp, #28]
   3344c:	bne	350d4 <__flatcc_fb_clear_parser@@Base+0x2290>
   33450:	ldrh	r3, [r1, #48]	; 0x30
   33454:	cmp	r3, #0
   33458:	str	r3, [sp, #36]	; 0x24
   3345c:	bne	350c0 <__flatcc_fb_clear_parser@@Base+0x227c>
   33460:	mov	r6, r3
   33464:	ldr	r3, [sp, #28]
   33468:	mov	fp, r0
   3346c:	mov	r2, #48	; 0x30
   33470:	ldr	r4, [r3, #28]
   33474:	add	r0, sp, #84	; 0x54
   33478:	mov	r1, r6
   3347c:	bl	13f9c <memset@plt>
   33480:	cmp	r4, #0
   33484:	beq	34a00 <__flatcc_fb_clear_parser@@Base+0x1bbc>
   33488:	ldr	r7, [pc, #3968]	; 34410 <__flatcc_fb_clear_parser@@Base+0x15cc>
   3348c:	ldr	r8, [pc, #3968]	; 34414 <__flatcc_fb_clear_parser@@Base+0x15d0>
   33490:	ldr	r9, [pc, #3968]	; 34418 <__flatcc_fb_clear_parser@@Base+0x15d4>
   33494:	ldr	sl, [pc, #3968]	; 3441c <__flatcc_fb_clear_parser@@Base+0x15d8>
   33498:	mov	r5, #100	; 0x64
   3349c:	b	33500 <__flatcc_fb_clear_parser@@Base+0x6bc>
   334a0:	mov	r2, #1
   334a4:	add	r1, sp, #84	; 0x54
   334a8:	orr	r6, r6, r2, lsl r3
   334ac:	ldr	r0, [r1, r3, lsl #2]
   334b0:	uxth	r6, r6
   334b4:	cmp	r0, #0
   334b8:	lsl	r2, r3, #2
   334bc:	beq	33558 <__flatcc_fb_clear_parser@@Base+0x714>
   334c0:	mov	r3, #0
   334c4:	ldr	r1, [r4, #4]
   334c8:	ldr	r2, [pc, #3920]	; 34420 <__flatcc_fb_clear_parser@@Base+0x15dc>
   334cc:	str	r3, [sp, #4]
   334d0:	str	r3, [sp]
   334d4:	mov	r0, fp
   334d8:	bl	2e72c <__flatcc_error_report@@Base>
   334dc:	subs	r5, r5, #1
   334e0:	ldr	r4, [r4]
   334e4:	movne	r2, #1
   334e8:	moveq	r2, #0
   334ec:	cmp	r4, #0
   334f0:	moveq	r2, #0
   334f4:	andne	r2, r2, #1
   334f8:	cmp	r2, #0
   334fc:	beq	3359c <__flatcc_fb_clear_parser@@Base+0x758>
   33500:	ldr	r3, [r4, #4]
   33504:	ldr	r0, [fp, #412]	; 0x19c
   33508:	ldm	r3, {r1, r2}
   3350c:	add	r0, r0, #16
   33510:	bl	3f318 <fb_name_table_find@@Base>
   33514:	cmp	r0, #0
   33518:	beq	33c70 <__flatcc_fb_clear_parser@@Base+0xe2c>
   3351c:	ldr	r3, [r0, #24]
   33520:	cmp	r3, #0
   33524:	beq	334dc <__flatcc_fb_clear_parser@@Base+0x698>
   33528:	mov	r2, #8
   3352c:	asr	r2, r2, r3
   33530:	ands	r2, r2, #1
   33534:	bne	334a0 <__flatcc_fb_clear_parser@@Base+0x65c>
   33538:	ldr	r1, [r4, #4]
   3353c:	mov	r3, r2
   33540:	str	r2, [sp, #4]
   33544:	str	r2, [sp]
   33548:	mov	r0, fp
   3354c:	ldr	r2, [pc, #3792]	; 34424 <__flatcc_fb_clear_parser@@Base+0x15e0>
   33550:	bl	2e72c <__flatcc_error_report@@Base>
   33554:	b	334dc <__flatcc_fb_clear_parser@@Base+0x698>
   33558:	add	r2, r7, r2
   3355c:	add	r1, sp, #84	; 0x54
   33560:	ldr	r2, [r2, #204]	; 0xcc
   33564:	str	r4, [r1, r3, lsl #2]
   33568:	cmp	r2, #0
   3356c:	bne	33ca0 <__flatcc_fb_clear_parser@@Base+0xe5c>
   33570:	ldrh	r3, [r4, #16]
   33574:	cmp	r3, #0
   33578:	beq	334dc <__flatcc_fb_clear_parser@@Base+0x698>
   3357c:	ldr	r1, [r4, #4]
   33580:	mov	r3, r2
   33584:	str	r2, [sp, #4]
   33588:	str	r2, [sp]
   3358c:	mov	r0, fp
   33590:	ldr	r2, [pc, #3728]	; 34428 <__flatcc_fb_clear_parser@@Base+0x15e4>
   33594:	bl	2e72c <__flatcc_error_report@@Base>
   33598:	b	334dc <__flatcc_fb_clear_parser@@Base+0x698>
   3359c:	cmp	r4, #0
   335a0:	beq	335c0 <__flatcc_fb_clear_parser@@Base+0x77c>
   335a4:	ldr	r1, [r4, #4]
   335a8:	mov	r3, r2
   335ac:	str	r2, [sp, #4]
   335b0:	str	r2, [sp]
   335b4:	mov	r0, fp
   335b8:	ldr	r2, [pc, #3692]	; 3442c <__flatcc_fb_clear_parser@@Base+0x15e8>
   335bc:	bl	2e72c <__flatcc_error_report@@Base>
   335c0:	ldr	r2, [sp, #28]
   335c4:	ldr	r9, [r2, #20]
   335c8:	strh	r6, [r2, #92]	; 0x5c
   335cc:	cmp	r9, #0
   335d0:	beq	34bd4 <__flatcc_fb_clear_parser@@Base+0x1d90>
   335d4:	mov	r3, #0
   335d8:	mov	r0, #0
   335dc:	mov	r1, #0
   335e0:	str	r3, [sp, #56]	; 0x38
   335e4:	str	r3, [sp, #32]
   335e8:	str	r3, [sp, #24]
   335ec:	str	r3, [sp, #48]	; 0x30
   335f0:	add	r3, fp, #352	; 0x160
   335f4:	strd	r0, [sp, #40]	; 0x28
   335f8:	strd	r0, [sp, #16]
   335fc:	add	sl, r2, #56	; 0x38
   33600:	str	r3, [sp, #8]
   33604:	b	33634 <__flatcc_fb_clear_parser@@Base+0x7f0>
   33608:	mov	r2, #0
   3360c:	ldr	r3, [r8, #4]
   33610:	ldr	r1, [r9, #4]
   33614:	mov	r0, fp
   33618:	str	r2, [sp, #4]
   3361c:	str	r2, [sp]
   33620:	ldr	r2, [pc, #3592]	; 34430 <__flatcc_fb_clear_parser@@Base+0x15ec>
   33624:	bl	2e72c <__flatcc_error_report@@Base>
   33628:	ldr	r9, [r9]
   3362c:	cmp	r9, #0
   33630:	beq	33bd8 <__flatcc_fb_clear_parser@@Base+0xd94>
   33634:	mov	r2, #1
   33638:	mov	r1, r9
   3363c:	mov	r0, sl
   33640:	bl	27c64 <fb_symbol_table_insert_item@@Base>
   33644:	subs	r8, r0, #0
   33648:	bne	33608 <__flatcc_fb_clear_parser@@Base+0x7c4>
   3364c:	ldrh	r3, [r9, #8]
   33650:	cmp	r3, #5
   33654:	bne	346a8 <__flatcc_fb_clear_parser@@Base+0x1864>
   33658:	ldrh	r3, [r9, #24]
   3365c:	cmp	r3, #1
   33660:	beq	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   33664:	sub	r3, r3, #7
   33668:	cmp	r3, #1
   3366c:	bls	33b64 <__flatcc_fb_clear_parser@@Base+0xd20>
   33670:	ldr	r4, [r9, #64]	; 0x40
   33674:	mov	r2, #48	; 0x30
   33678:	mov	r1, #0
   3367c:	add	r0, sp, #84	; 0x54
   33680:	bl	13f9c <memset@plt>
   33684:	cmp	r4, #0
   33688:	beq	34650 <__flatcc_fb_clear_parser@@Base+0x180c>
   3368c:	ldr	r7, [pc, #3452]	; 34410 <__flatcc_fb_clear_parser@@Base+0x15cc>
   33690:	ldr	r6, [sp, #36]	; 0x24
   33694:	mov	r5, #100	; 0x64
   33698:	b	336fc <__flatcc_fb_clear_parser@@Base+0x8b8>
   3369c:	mov	r3, #1
   336a0:	add	r1, sp, #84	; 0x54
   336a4:	orr	r6, r6, r3, lsl r2
   336a8:	ldr	r0, [r1, r2, lsl #2]
   336ac:	uxth	r6, r6
   336b0:	cmp	r0, #0
   336b4:	lsl	r3, r2, #2
   336b8:	beq	33754 <__flatcc_fb_clear_parser@@Base+0x910>
   336bc:	mov	r3, #0
   336c0:	ldr	r1, [r4, #4]
   336c4:	ldr	r2, [pc, #3412]	; 34420 <__flatcc_fb_clear_parser@@Base+0x15dc>
   336c8:	str	r3, [sp, #4]
   336cc:	str	r3, [sp]
   336d0:	mov	r0, fp
   336d4:	bl	2e72c <__flatcc_error_report@@Base>
   336d8:	subs	r5, r5, #1
   336dc:	ldr	r4, [r4]
   336e0:	movne	r2, #1
   336e4:	moveq	r2, #0
   336e8:	cmp	r4, #0
   336ec:	moveq	r2, #0
   336f0:	andne	r2, r2, #1
   336f4:	cmp	r2, #0
   336f8:	beq	33798 <__flatcc_fb_clear_parser@@Base+0x954>
   336fc:	ldr	r3, [r4, #4]
   33700:	ldr	r0, [fp, #412]	; 0x19c
   33704:	ldm	r3, {r1, r2}
   33708:	add	r0, r0, #16
   3370c:	bl	3f318 <fb_name_table_find@@Base>
   33710:	cmp	r0, #0
   33714:	beq	33af0 <__flatcc_fb_clear_parser@@Base+0xcac>
   33718:	ldr	r2, [r0, #24]
   3371c:	cmp	r2, #0
   33720:	beq	336d8 <__flatcc_fb_clear_parser@@Base+0x894>
   33724:	ldr	r3, [pc, #3336]	; 34434 <__flatcc_fb_clear_parser@@Base+0x15f0>
   33728:	asr	r3, r3, r2
   3372c:	ands	r0, r3, #1
   33730:	bne	3369c <__flatcc_fb_clear_parser@@Base+0x858>
   33734:	ldr	r1, [r4, #4]
   33738:	mov	r3, r0
   3373c:	str	r0, [sp, #4]
   33740:	str	r0, [sp]
   33744:	ldr	r2, [pc, #3288]	; 34424 <__flatcc_fb_clear_parser@@Base+0x15e0>
   33748:	mov	r0, fp
   3374c:	bl	2e72c <__flatcc_error_report@@Base>
   33750:	b	336d8 <__flatcc_fb_clear_parser@@Base+0x894>
   33754:	add	r3, r7, r3
   33758:	add	r1, sp, #84	; 0x54
   3375c:	str	r4, [r1, r2, lsl #2]
   33760:	ldr	r2, [r3, #204]	; 0xcc
   33764:	cmp	r2, #0
   33768:	bne	33b10 <__flatcc_fb_clear_parser@@Base+0xccc>
   3376c:	ldrh	r3, [r4, #16]
   33770:	cmp	r3, #0
   33774:	beq	336d8 <__flatcc_fb_clear_parser@@Base+0x894>
   33778:	ldr	r1, [r4, #4]
   3377c:	mov	r3, r2
   33780:	str	r2, [sp, #4]
   33784:	str	r2, [sp]
   33788:	mov	r0, fp
   3378c:	ldr	r2, [pc, #3220]	; 34428 <__flatcc_fb_clear_parser@@Base+0x15e4>
   33790:	bl	2e72c <__flatcc_error_report@@Base>
   33794:	b	336d8 <__flatcc_fb_clear_parser@@Base+0x894>
   33798:	cmp	r4, #0
   3379c:	beq	337bc <__flatcc_fb_clear_parser@@Base+0x978>
   337a0:	ldr	r1, [r4, #4]
   337a4:	mov	r3, r2
   337a8:	str	r2, [sp, #4]
   337ac:	str	r2, [sp]
   337b0:	mov	r0, fp
   337b4:	ldr	r2, [pc, #3184]	; 3442c <__flatcc_fb_clear_parser@@Base+0x15e8>
   337b8:	bl	2e72c <__flatcc_error_report@@Base>
   337bc:	ldr	r7, [sp, #108]	; 0x6c
   337c0:	strh	r6, [r9, #72]	; 0x48
   337c4:	cmp	r7, #0
   337c8:	beq	338dc <__flatcc_fb_clear_parser@@Base+0xa98>
   337cc:	ldrh	r3, [r9, #24]
   337d0:	cmp	r3, #7
   337d4:	bne	3462c <__flatcc_fb_clear_parser@@Base+0x17e8>
   337d8:	ldr	r3, [r9, #16]
   337dc:	cmp	r3, #4
   337e0:	bne	3462c <__flatcc_fb_clear_parser@@Base+0x17e8>
   337e4:	ldrh	r3, [r7, #16]
   337e8:	cmp	r3, #2
   337ec:	bne	34620 <__flatcc_fb_clear_parser@@Base+0x17dc>
   337f0:	ldr	lr, [r7, #12]
   337f4:	ldr	ip, [r7, #8]
   337f8:	cmp	lr, #0
   337fc:	ble	34a14 <__flatcc_fb_clear_parser@@Base+0x1bd0>
   33800:	sub	r6, lr, #1
   33804:	mov	r0, r6
   33808:	ldrb	r3, [ip, r6]
   3380c:	cmp	r3, #46	; 0x2e
   33810:	addne	r3, ip, r6
   33814:	movne	r2, r6
   33818:	bne	33834 <__flatcc_fb_clear_parser@@Base+0x9f0>
   3381c:	b	34a08 <__flatcc_fb_clear_parser@@Base+0x1bc4>
   33820:	ldrb	r1, [r3, #-1]!
   33824:	sub	r2, r2, #1
   33828:	mov	r0, r2
   3382c:	cmp	r1, #46	; 0x2e
   33830:	beq	33bc4 <__flatcc_fb_clear_parser@@Base+0xd80>
   33834:	cmp	r2, #0
   33838:	bne	33820 <__flatcc_fb_clear_parser@@Base+0x9dc>
   3383c:	mov	r6, lr
   33840:	str	ip, [sp, #12]
   33844:	ldr	r3, [sp, #28]
   33848:	ldr	r4, [r3, #12]
   3384c:	adds	r3, r4, #0
   33850:	movne	r3, #1
   33854:	cmp	r2, #0
   33858:	movne	r3, #0
   3385c:	cmp	r3, #0
   33860:	addne	r3, fp, #524	; 0x20c
   33864:	strne	r3, [sp, #52]	; 0x34
   33868:	bne	33a08 <__flatcc_fb_clear_parser@@Base+0xbc4>
   3386c:	ldr	r3, [sp, #8]
   33870:	cmp	r3, #0
   33874:	beq	33ab4 <__flatcc_fb_clear_parser@@Base+0xc70>
   33878:	ldr	r0, [fp, #412]	; 0x19c
   3387c:	cmp	r0, #0
   33880:	beq	33ab4 <__flatcc_fb_clear_parser@@Base+0xc70>
   33884:	cmp	r2, #0
   33888:	movne	r1, ip
   3388c:	moveq	r1, #0
   33890:	bl	28a80 <fb_scope_table_find@@Base>
   33894:	cmp	r0, #0
   33898:	beq	33aac <__flatcc_fb_clear_parser@@Base+0xc68>
   3389c:	mov	r2, r6
   338a0:	ldr	r1, [sp, #12]
   338a4:	add	r0, r0, #4
   338a8:	bl	27c8c <fb_symbol_table_find@@Base>
   338ac:	subs	r3, r0, #0
   338b0:	beq	33aac <__flatcc_fb_clear_parser@@Base+0xc68>
   338b4:	ldrh	r2, [r3, #8]
   338b8:	cmp	r2, #0
   338bc:	beq	338d4 <__flatcc_fb_clear_parser@@Base+0xa90>
   338c0:	ldr	r0, [fp, #176]	; 0xb0
   338c4:	cmp	r0, #0
   338c8:	beq	35014 <__flatcc_fb_clear_parser@@Base+0x21d0>
   338cc:	cmp	r2, #1
   338d0:	bne	34f14 <__flatcc_fb_clear_parser@@Base+0x20d0>
   338d4:	ldrh	r6, [r9, #72]	; 0x48
   338d8:	str	r3, [r9, #104]	; 0x68
   338dc:	tst	r6, #256	; 0x100
   338e0:	beq	338f0 <__flatcc_fb_clear_parser@@Base+0xaac>
   338e4:	ldrh	r3, [r9, #24]
   338e8:	cmp	r3, #8
   338ec:	beq	3465c <__flatcc_fb_clear_parser@@Base+0x1818>
   338f0:	tst	r6, #1024	; 0x400
   338f4:	beq	33924 <__flatcc_fb_clear_parser@@Base+0xae0>
   338f8:	ldrh	r3, [r9, #24]
   338fc:	cmp	r3, #7
   33900:	beq	33c90 <__flatcc_fb_clear_parser@@Base+0xe4c>
   33904:	mov	r3, #0
   33908:	ldr	r1, [r9, #4]
   3390c:	ldr	r2, [pc, #2852]	; 34438 <__flatcc_fb_clear_parser@@Base+0x15f4>
   33910:	str	r3, [sp, #4]
   33914:	str	r3, [sp]
   33918:	mov	r0, fp
   3391c:	bl	2e72c <__flatcc_error_report@@Base>
   33920:	ldrh	r6, [r9, #72]	; 0x48
   33924:	tst	r6, #2048	; 0x800
   33928:	beq	33958 <__flatcc_fb_clear_parser@@Base+0xb14>
   3392c:	ldrh	r3, [r9, #24]
   33930:	cmp	r3, #7
   33934:	beq	33c38 <__flatcc_fb_clear_parser@@Base+0xdf4>
   33938:	mov	r3, #0
   3393c:	ldr	r1, [r9, #4]
   33940:	ldr	r2, [pc, #2804]	; 3443c <__flatcc_fb_clear_parser@@Base+0x15f8>
   33944:	str	r3, [sp, #4]
   33948:	str	r3, [sp]
   3394c:	mov	r0, fp
   33950:	bl	2e72c <__flatcc_error_report@@Base>
   33954:	ldrh	r6, [r9, #72]	; 0x48
   33958:	and	r6, r6, #3072	; 0xc00
   3395c:	cmp	r6, #3072	; 0xc00
   33960:	beq	33c50 <__flatcc_fb_clear_parser@@Base+0xe0c>
   33964:	ldrd	r2, [sp, #16]
   33968:	ldr	r7, [sp, #88]	; 0x58
   3396c:	mov	r0, r2
   33970:	adds	r1, r7, #0
   33974:	movne	r1, #1
   33978:	orrs	r3, r0, r3
   3397c:	movne	r3, #0
   33980:	andeq	r3, r1, #1
   33984:	cmp	r3, #0
   33988:	str	r1, [sp, #12]
   3398c:	bne	33b44 <__flatcc_fb_clear_parser@@Base+0xd00>
   33990:	ldr	r3, [sp, #24]
   33994:	cmp	r3, #0
   33998:	bne	339d8 <__flatcc_fb_clear_parser@@Base+0xb94>
   3399c:	ldrd	r2, [fp, #216]	; 0xd8
   339a0:	ldrd	r0, [sp, #16]
   339a4:	cmp	r3, r1
   339a8:	cmpeq	r2, r0
   339ac:	bls	345f4 <__flatcc_fb_clear_parser@@Base+0x17b0>
   339b0:	ldr	r1, [sp, #48]	; 0x30
   339b4:	cmp	r1, #0
   339b8:	ldrheq	r2, [sp, #16]
   339bc:	moveq	r3, #0
   339c0:	streq	r1, [sp, #24]
   339c4:	strdeq	r2, [r9, #96]	; 0x60
   339c8:	ldrd	r2, [sp, #16]
   339cc:	adds	r2, r2, #1
   339d0:	adc	r3, r3, #0
   339d4:	strd	r2, [sp, #16]
   339d8:	ldrh	r3, [r9, #24]
   339dc:	sub	r3, r3, #7
   339e0:	cmp	r3, #5
   339e4:	ldrls	pc, [pc, r3, lsl #2]
   339e8:	b	345cc <__flatcc_fb_clear_parser@@Base+0x1788>
   339ec:	andeq	r3, r3, r8, lsr pc
   339f0:	andeq	r3, r3, ip, asr #29
   339f4:	muleq	r3, r8, lr
   339f8:	ldrdeq	r3, [r3], -r0
   339fc:	andeq	r3, r3, ip, lsl #31
   33a00:	ldrdeq	r3, [r3], -ip
   33a04:	mov	r4, r0
   33a08:	mov	r2, r6
   33a0c:	ldr	r1, [sp, #12]
   33a10:	add	r0, r4, #4
   33a14:	bl	27c8c <fb_symbol_table_find@@Base>
   33a18:	subs	r5, r0, #0
   33a1c:	beq	33a2c <__flatcc_fb_clear_parser@@Base+0xbe8>
   33a20:	ldrh	r2, [r5, #8]
   33a24:	cmp	r2, #4
   33a28:	bls	33ad4 <__flatcc_fb_clear_parser@@Base+0xc90>
   33a2c:	ldr	r2, [r4]
   33a30:	cmp	r2, #0
   33a34:	beq	33aac <__flatcc_fb_clear_parser@@Base+0xc68>
   33a38:	mov	r3, #0
   33a3c:	ldr	r2, [r2]
   33a40:	add	r3, r3, #1
   33a44:	cmp	r2, #0
   33a48:	bne	33a3c <__flatcc_fb_clear_parser@@Base+0xbf8>
   33a4c:	ldr	r2, [sp, #8]
   33a50:	cmp	r2, #0
   33a54:	beq	33aac <__flatcc_fb_clear_parser@@Base+0xc68>
   33a58:	ldr	r0, [fp, #412]	; 0x19c
   33a5c:	rsb	r5, r3, #1
   33a60:	b	33a88 <__flatcc_fb_clear_parser@@Base+0xc44>
   33a64:	cmp	r0, #0
   33a68:	beq	33a84 <__flatcc_fb_clear_parser@@Base+0xc40>
   33a6c:	mov	r2, r5
   33a70:	ldr	r1, [r4]
   33a74:	bl	28a80 <fb_scope_table_find@@Base>
   33a78:	cmp	r0, #0
   33a7c:	bne	33a04 <__flatcc_fb_clear_parser@@Base+0xbc0>
   33a80:	ldr	r0, [fp, #412]	; 0x19c
   33a84:	add	r5, r5, #1
   33a88:	cmp	r5, #0
   33a8c:	bne	33a64 <__flatcc_fb_clear_parser@@Base+0xc20>
   33a90:	cmp	r0, #0
   33a94:	beq	33aac <__flatcc_fb_clear_parser@@Base+0xc68>
   33a98:	mov	r1, r5
   33a9c:	mov	r2, #0
   33aa0:	bl	28a80 <fb_scope_table_find@@Base>
   33aa4:	subs	r4, r0, #0
   33aa8:	bne	33a08 <__flatcc_fb_clear_parser@@Base+0xbc4>
   33aac:	ldr	ip, [r7, #8]
   33ab0:	ldr	lr, [r7, #12]
   33ab4:	ldr	r1, [r7, #4]
   33ab8:	mov	r3, #0
   33abc:	stm	sp, {ip, lr}
   33ac0:	ldr	r2, [pc, #2424]	; 34440 <__flatcc_fb_clear_parser@@Base+0x15fc>
   33ac4:	mov	r0, fp
   33ac8:	bl	2e72c <__flatcc_error_report@@Base>
   33acc:	ldrh	r6, [r9, #72]	; 0x48
   33ad0:	b	338dc <__flatcc_fb_clear_parser@@Base+0xa98>
   33ad4:	ldr	r1, [r5, #16]
   33ad8:	ldr	r0, [sp, #52]	; 0x34
   33adc:	bl	275b4 <ptr_set_find_item@@Base>
   33ae0:	cmp	r0, #0
   33ae4:	beq	33a2c <__flatcc_fb_clear_parser@@Base+0xbe8>
   33ae8:	mov	r3, r5
   33aec:	b	338b4 <__flatcc_fb_clear_parser@@Base+0xa70>
   33af0:	ldr	r1, [r4, #4]
   33af4:	mov	r3, r0
   33af8:	str	r0, [sp, #4]
   33afc:	str	r0, [sp]
   33b00:	ldr	r2, [pc, #2364]	; 34444 <__flatcc_fb_clear_parser@@Base+0x1600>
   33b04:	mov	r0, fp
   33b08:	bl	2e72c <__flatcc_error_report@@Base>
   33b0c:	b	336d8 <__flatcc_fb_clear_parser@@Base+0x894>
   33b10:	cmp	r2, #2
   33b14:	bne	33b90 <__flatcc_fb_clear_parser@@Base+0xd4c>
   33b18:	ldrh	r3, [r4, #16]
   33b1c:	cmp	r3, #2
   33b20:	beq	336d8 <__flatcc_fb_clear_parser@@Base+0x894>
   33b24:	ldr	r1, [r4, #4]
   33b28:	mov	r3, r0
   33b2c:	str	r0, [sp, #4]
   33b30:	str	r0, [sp]
   33b34:	ldr	r2, [pc, #2316]	; 34448 <__flatcc_fb_clear_parser@@Base+0x1604>
   33b38:	mov	r0, fp
   33b3c:	bl	2e72c <__flatcc_error_report@@Base>
   33b40:	b	336d8 <__flatcc_fb_clear_parser@@Base+0x894>
   33b44:	ldr	r0, [fp, #112]	; 0x70
   33b48:	ldr	r2, [fp, #216]	; 0xd8
   33b4c:	mov	r1, #0
   33b50:	str	r0, [sp, #56]	; 0x38
   33b54:	bl	13f9c <memset@plt>
   33b58:	mov	r3, #1
   33b5c:	str	r3, [sp, #48]	; 0x30
   33b60:	b	33990 <__flatcc_fb_clear_parser@@Base+0xb4c>
   33b64:	ldr	r3, [r9, #16]
   33b68:	ldr	r3, [r3, #16]
   33b6c:	add	r3, r3, #996	; 0x3e4
   33b70:	add	r3, r3, #3
   33b74:	cmp	r3, #27
   33b78:	movhi	r3, r8
   33b7c:	ldrls	r2, [pc, #2188]	; 34410 <__flatcc_fb_clear_parser@@Base+0x15cc>
   33b80:	addls	r3, r2, r3, lsl #2
   33b84:	ldrls	r3, [r3, #28]
   33b88:	str	r3, [r9, #16]
   33b8c:	b	33670 <__flatcc_fb_clear_parser@@Base+0x82c>
   33b90:	cmp	r2, #5
   33b94:	bne	34810 <__flatcc_fb_clear_parser@@Base+0x19cc>
   33b98:	ldrh	r3, [r4, #16]
   33b9c:	cmp	r3, #5
   33ba0:	beq	336d8 <__flatcc_fb_clear_parser@@Base+0x894>
   33ba4:	ldr	r1, [r4, #4]
   33ba8:	mov	r3, r0
   33bac:	str	r0, [sp, #4]
   33bb0:	str	r0, [sp]
   33bb4:	ldr	r2, [pc, #2144]	; 3441c <__flatcc_fb_clear_parser@@Base+0x15d8>
   33bb8:	mov	r0, fp
   33bbc:	bl	2e72c <__flatcc_error_report@@Base>
   33bc0:	b	336d8 <__flatcc_fb_clear_parser@@Base+0x894>
   33bc4:	sub	r6, r6, r2
   33bc8:	add	r0, r0, #1
   33bcc:	add	r3, ip, r0
   33bd0:	str	r3, [sp, #12]
   33bd4:	b	33844 <__flatcc_fb_clear_parser@@Base+0xa00>
   33bd8:	ldr	r9, [sp, #24]
   33bdc:	cmp	r9, #0
   33be0:	beq	341cc <__flatcc_fb_clear_parser@@Base+0x1388>
   33be4:	ldr	r3, [sp, #32]
   33be8:	cmp	r3, #0
   33bec:	beq	34f08 <__flatcc_fb_clear_parser@@Base+0x20c4>
   33bf0:	ldr	r2, [sp, #28]
   33bf4:	mov	r1, r3
   33bf8:	cmp	r1, #1
   33bfc:	ldrh	r3, [r2, #10]
   33c00:	orr	r3, r3, #8
   33c04:	strh	r3, [r2, #10]
   33c08:	beq	34f08 <__flatcc_fb_clear_parser@@Base+0x20c4>
   33c0c:	ldr	r3, [fp, #156]	; 0x9c
   33c10:	cmp	r3, #0
   33c14:	movne	r3, #0
   33c18:	strne	r3, [sp, #32]
   33c1c:	beq	342d8 <__flatcc_fb_clear_parser@@Base+0x1494>
   33c20:	ldr	r3, [sp, #24]
   33c24:	cmp	r3, #0
   33c28:	bne	34f08 <__flatcc_fb_clear_parser@@Base+0x20c4>
   33c2c:	ldr	r0, [sp, #32]
   33c30:	add	sp, sp, #236	; 0xec
   33c34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33c38:	ldr	r3, [r9, #16]
   33c3c:	cmp	r3, #4
   33c40:	bne	33938 <__flatcc_fb_clear_parser@@Base+0xaf4>
   33c44:	and	r6, r6, #3072	; 0xc00
   33c48:	cmp	r6, #3072	; 0xc00
   33c4c:	bne	33964 <__flatcc_fb_clear_parser@@Base+0xb20>
   33c50:	mov	r3, #0
   33c54:	ldr	r1, [r9, #4]
   33c58:	ldr	r2, [pc, #2028]	; 3444c <__flatcc_fb_clear_parser@@Base+0x1608>
   33c5c:	str	r3, [sp, #4]
   33c60:	str	r3, [sp]
   33c64:	mov	r0, fp
   33c68:	bl	2e72c <__flatcc_error_report@@Base>
   33c6c:	b	33964 <__flatcc_fb_clear_parser@@Base+0xb20>
   33c70:	ldr	r1, [r4, #4]
   33c74:	mov	r3, r0
   33c78:	str	r0, [sp, #4]
   33c7c:	str	r0, [sp]
   33c80:	ldr	r2, [pc, #1980]	; 34444 <__flatcc_fb_clear_parser@@Base+0x1600>
   33c84:	mov	r0, fp
   33c88:	bl	2e72c <__flatcc_error_report@@Base>
   33c8c:	b	334dc <__flatcc_fb_clear_parser@@Base+0x698>
   33c90:	ldr	r3, [r9, #16]
   33c94:	cmp	r3, #4
   33c98:	bne	33904 <__flatcc_fb_clear_parser@@Base+0xac0>
   33c9c:	b	33958 <__flatcc_fb_clear_parser@@Base+0xb14>
   33ca0:	cmp	r2, #2
   33ca4:	beq	34304 <__flatcc_fb_clear_parser@@Base+0x14c0>
   33ca8:	cmp	r2, #5
   33cac:	bne	347d8 <__flatcc_fb_clear_parser@@Base+0x1994>
   33cb0:	ldrh	r3, [r4, #16]
   33cb4:	cmp	r3, #5
   33cb8:	beq	334dc <__flatcc_fb_clear_parser@@Base+0x698>
   33cbc:	ldr	r1, [r4, #4]
   33cc0:	mov	r3, r0
   33cc4:	str	r0, [sp, #4]
   33cc8:	str	r0, [sp]
   33ccc:	mov	r2, sl
   33cd0:	mov	r0, fp
   33cd4:	bl	2e72c <__flatcc_error_report@@Base>
   33cd8:	b	334dc <__flatcc_fb_clear_parser@@Base+0x698>
   33cdc:	ldr	r1, [r9, #16]
   33ce0:	ldr	r3, [sp, #28]
   33ce4:	cmp	r1, #0
   33ce8:	ldr	r4, [r3, #12]
   33cec:	beq	33db0 <__flatcc_fb_clear_parser@@Base+0xf6c>
   33cf0:	mov	r6, r1
   33cf4:	mov	r2, #0
   33cf8:	b	33d04 <__flatcc_fb_clear_parser@@Base+0xec0>
   33cfc:	mov	r2, r3
   33d00:	mov	r6, r5
   33d04:	ldr	r5, [r6]
   33d08:	add	r3, r2, #1
   33d0c:	cmp	r5, #0
   33d10:	bne	33cfc <__flatcc_fb_clear_parser@@Base+0xeb8>
   33d14:	adds	r0, r4, #0
   33d18:	movne	r0, #1
   33d1c:	cmp	r3, #1
   33d20:	movne	r0, #0
   33d24:	cmp	r0, #0
   33d28:	addne	r3, fp, #524	; 0x20c
   33d2c:	strne	r3, [sp, #52]	; 0x34
   33d30:	bne	34124 <__flatcc_fb_clear_parser@@Base+0x12e0>
   33d34:	ldr	r0, [sp, #8]
   33d38:	cmp	r3, #1
   33d3c:	movne	r3, r1
   33d40:	moveq	r3, #0
   33d44:	cmp	r0, #0
   33d48:	beq	33db0 <__flatcc_fb_clear_parser@@Base+0xf6c>
   33d4c:	ldr	r0, [fp, #412]	; 0x19c
   33d50:	cmp	r0, #0
   33d54:	beq	33db0 <__flatcc_fb_clear_parser@@Base+0xf6c>
   33d58:	rsb	r2, r2, #0
   33d5c:	mov	r1, r3
   33d60:	bl	28a80 <fb_scope_table_find@@Base>
   33d64:	cmp	r0, #0
   33d68:	beq	33dac <__flatcc_fb_clear_parser@@Base+0xf68>
   33d6c:	ldr	r3, [r6, #4]
   33d70:	add	r0, r0, #4
   33d74:	ldm	r3, {r1, r2}
   33d78:	bl	27c8c <fb_symbol_table_find@@Base>
   33d7c:	subs	r8, r0, #0
   33d80:	beq	33dac <__flatcc_fb_clear_parser@@Base+0xf68>
   33d84:	ldrh	r3, [r8, #8]
   33d88:	cmp	r3, #4
   33d8c:	bhi	33dac <__flatcc_fb_clear_parser@@Base+0xf68>
   33d90:	add	r3, fp, #524	; 0x20c
   33d94:	mov	r0, r3
   33d98:	ldr	r1, [r8, #16]
   33d9c:	str	r3, [sp, #52]	; 0x34
   33da0:	bl	275b4 <ptr_set_find_item@@Base>
   33da4:	cmp	r0, #0
   33da8:	bne	3434c <__flatcc_fb_clear_parser@@Base+0x1508>
   33dac:	ldr	r1, [r9, #16]
   33db0:	mov	r3, r9
   33db4:	ldr	r2, [pc, #1684]	; 34450 <__flatcc_fb_clear_parser@@Base+0x160c>
   33db8:	mov	r0, fp
   33dbc:	bl	2f6ec <error_ref_sym@@Base>
   33dc0:	mov	r3, #1
   33dc4:	strh	r3, [r9, #24]
   33dc8:	str	r3, [sp, #24]
   33dcc:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   33dd0:	ldrh	r3, [r9, #56]	; 0x38
   33dd4:	cmp	r3, #0
   33dd8:	bne	34870 <__flatcc_fb_clear_parser@@Base+0x1a2c>
   33ddc:	ldr	r6, [fp, #164]	; 0xa4
   33de0:	ldr	r3, [sp, #24]
   33de4:	cmp	r3, #0
   33de8:	bne	33e58 <__flatcc_fb_clear_parser@@Base+0x1014>
   33dec:	ldr	r3, [sp, #48]	; 0x30
   33df0:	ldr	r2, [sp, #12]
   33df4:	eor	r3, r3, #1
   33df8:	ands	r2, r2, r3
   33dfc:	bne	34680 <__flatcc_fb_clear_parser@@Base+0x183c>
   33e00:	ldr	ip, [sp, #48]	; 0x30
   33e04:	cmp	r7, #0
   33e08:	movne	ip, #0
   33e0c:	andeq	ip, ip, #1
   33e10:	cmp	ip, #0
   33e14:	bne	34848 <__flatcc_fb_clear_parser@@Base+0x1a04>
   33e18:	cmp	r7, #0
   33e1c:	beq	348c8 <__flatcc_fb_clear_parser@@Base+0x1a84>
   33e20:	ldrh	r3, [r7, #16]
   33e24:	cmp	r3, #5
   33e28:	beq	34898 <__flatcc_fb_clear_parser@@Base+0x1a54>
   33e2c:	cmp	r3, #4
   33e30:	ldr	r1, [r7, #4]
   33e34:	mov	r3, ip
   33e38:	str	ip, [sp, #4]
   33e3c:	str	ip, [sp]
   33e40:	ldreq	r2, [pc, #1548]	; 34454 <__flatcc_fb_clear_parser@@Base+0x1610>
   33e44:	ldrne	r2, [pc, #1548]	; 34458 <__flatcc_fb_clear_parser@@Base+0x1614>
   33e48:	mov	r0, fp
   33e4c:	bl	2e72c <__flatcc_error_report@@Base>
   33e50:	mov	r3, #1
   33e54:	str	r3, [sp, #24]
   33e58:	ldrh	r3, [r9, #72]	; 0x48
   33e5c:	tst	r3, #128	; 0x80
   33e60:	beq	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   33e64:	ldr	r3, [sp, #32]
   33e68:	cmp	r6, #0
   33e6c:	add	r3, r3, #1
   33e70:	str	r3, [sp, #32]
   33e74:	bne	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   33e78:	mov	r3, #0
   33e7c:	ldr	r1, [r9, #4]
   33e80:	ldr	r2, [pc, #1492]	; 3445c <__flatcc_fb_clear_parser@@Base+0x1618>
   33e84:	str	r3, [sp, #4]
   33e88:	str	r3, [sp]
   33e8c:	mov	r0, fp
   33e90:	bl	2e72c <__flatcc_error_report@@Base>
   33e94:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   33e98:	ldrh	r6, [r9, #56]	; 0x38
   33e9c:	cmp	r6, #0
   33ea0:	beq	33de0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   33ea4:	mov	r3, #0
   33ea8:	ldr	r1, [r9, #4]
   33eac:	ldr	r2, [pc, #1452]	; 34460 <__flatcc_fb_clear_parser@@Base+0x161c>
   33eb0:	str	r3, [sp, #4]
   33eb4:	str	r3, [sp]
   33eb8:	mov	r0, fp
   33ebc:	bl	2e72c <__flatcc_error_report@@Base>
   33ec0:	mov	r3, #1
   33ec4:	strh	r3, [r9, #24]
   33ec8:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   33ecc:	ldrh	r3, [r9, #56]	; 0x38
   33ed0:	cmp	r3, #13
   33ed4:	addne	ip, r9, #48	; 0x30
   33ed8:	beq	34a24 <__flatcc_fb_clear_parser@@Base+0x1be0>
   33edc:	cmp	r3, #0
   33ee0:	bne	33ef8 <__flatcc_fb_clear_parser@@Base+0x10b4>
   33ee4:	mov	r2, #0
   33ee8:	mov	r3, #0
   33eec:	mov	r1, #5
   33ef0:	strd	r2, [r9, #48]	; 0x30
   33ef4:	strh	r1, [r9, #56]	; 0x38
   33ef8:	mov	r3, ip
   33efc:	ldr	r2, [r9, #16]
   33f00:	mov	r1, r9
   33f04:	mov	r0, fp
   33f08:	bl	3795c <__flatcc_fb_coerce_scalar_type@@Base>
   33f0c:	cmp	r0, #0
   33f10:	bne	33f80 <__flatcc_fb_clear_parser@@Base+0x113c>
   33f14:	ldr	r2, [r9, #16]
   33f18:	ldr	r3, [pc, #1264]	; 34410 <__flatcc_fb_clear_parser@@Base+0x15cc>
   33f1c:	str	r0, [r9, #92]	; 0x5c
   33f20:	add	r3, r3, r2, lsl #2
   33f24:	mov	r6, #1
   33f28:	ldr	r3, [r3, #140]	; 0x8c
   33f2c:	str	r3, [r9, #88]	; 0x58
   33f30:	strh	r3, [r9, #74]	; 0x4a
   33f34:	b	33de0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   33f38:	ldr	r2, [r9, #16]
   33f3c:	ldr	r3, [pc, #1228]	; 34410 <__flatcc_fb_clear_parser@@Base+0x15cc>
   33f40:	ldrh	r6, [r9, #56]	; 0x38
   33f44:	add	r3, r3, r2, lsl #2
   33f48:	mov	r2, #0
   33f4c:	ldr	r3, [r3, #140]	; 0x8c
   33f50:	cmp	r6, r2
   33f54:	str	r3, [r9, #88]	; 0x58
   33f58:	strh	r3, [r9, #74]	; 0x4a
   33f5c:	str	r2, [r9, #92]	; 0x5c
   33f60:	beq	33de0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   33f64:	ldr	r1, [r9, #4]
   33f68:	mov	r3, r2
   33f6c:	str	r2, [sp, #4]
   33f70:	str	r2, [sp]
   33f74:	mov	r0, fp
   33f78:	ldr	r2, [pc, #1252]	; 34464 <__flatcc_fb_clear_parser@@Base+0x1620>
   33f7c:	bl	2e72c <__flatcc_error_report@@Base>
   33f80:	mov	r3, #1
   33f84:	strh	r3, [r9, #24]
   33f88:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   33f8c:	ldr	r1, [r9, #16]
   33f90:	ldr	r3, [sp, #28]
   33f94:	cmp	r1, #0
   33f98:	ldr	r4, [r3, #12]
   33f9c:	beq	34058 <__flatcc_fb_clear_parser@@Base+0x1214>
   33fa0:	mov	r6, r1
   33fa4:	mov	r2, #0
   33fa8:	b	33fb4 <__flatcc_fb_clear_parser@@Base+0x1170>
   33fac:	mov	r2, r3
   33fb0:	mov	r6, r5
   33fb4:	ldr	r5, [r6]
   33fb8:	add	r3, r2, #1
   33fbc:	cmp	r5, #0
   33fc0:	bne	33fac <__flatcc_fb_clear_parser@@Base+0x1168>
   33fc4:	adds	r0, r4, #0
   33fc8:	movne	r0, #1
   33fcc:	cmp	r3, #1
   33fd0:	movne	r0, #0
   33fd4:	cmp	r0, #0
   33fd8:	addne	r3, fp, #524	; 0x20c
   33fdc:	strne	r3, [sp, #52]	; 0x34
   33fe0:	bne	34078 <__flatcc_fb_clear_parser@@Base+0x1234>
   33fe4:	cmp	r3, #1
   33fe8:	ldr	r3, [sp, #8]
   33fec:	moveq	r5, r0
   33ff0:	movne	r5, r1
   33ff4:	cmp	r3, #0
   33ff8:	beq	34058 <__flatcc_fb_clear_parser@@Base+0x1214>
   33ffc:	ldr	r0, [fp, #412]	; 0x19c
   34000:	cmp	r0, #0
   34004:	beq	34058 <__flatcc_fb_clear_parser@@Base+0x1214>
   34008:	rsb	r2, r2, #0
   3400c:	mov	r1, r5
   34010:	bl	28a80 <fb_scope_table_find@@Base>
   34014:	cmp	r0, #0
   34018:	beq	34054 <__flatcc_fb_clear_parser@@Base+0x1210>
   3401c:	ldr	r3, [r6, #4]
   34020:	add	r0, r0, #4
   34024:	ldm	r3, {r1, r2}
   34028:	bl	27c8c <fb_symbol_table_find@@Base>
   3402c:	subs	r8, r0, #0
   34030:	beq	34054 <__flatcc_fb_clear_parser@@Base+0x1210>
   34034:	ldrh	r3, [r8, #8]
   34038:	cmp	r3, #4
   3403c:	bhi	34054 <__flatcc_fb_clear_parser@@Base+0x1210>
   34040:	ldr	r1, [r8, #16]
   34044:	add	r0, fp, #524	; 0x20c
   34048:	bl	275b4 <ptr_set_find_item@@Base>
   3404c:	cmp	r0, #0
   34050:	bne	34528 <__flatcc_fb_clear_parser@@Base+0x16e4>
   34054:	ldr	r1, [r9, #16]
   34058:	mov	r3, r9
   3405c:	ldr	r2, [pc, #1028]	; 34468 <__flatcc_fb_clear_parser@@Base+0x1624>
   34060:	mov	r0, fp
   34064:	bl	2f6ec <error_ref_sym@@Base>
   34068:	mov	r3, #1
   3406c:	strh	r3, [r9, #24]
   34070:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   34074:	mov	r4, r0
   34078:	ldr	r3, [r6, #4]
   3407c:	add	r0, r4, #4
   34080:	ldm	r3, {r1, r2}
   34084:	bl	27c8c <fb_symbol_table_find@@Base>
   34088:	subs	r8, r0, #0
   3408c:	beq	3409c <__flatcc_fb_clear_parser@@Base+0x1258>
   34090:	ldrh	r3, [r8, #8]
   34094:	cmp	r3, #4
   34098:	bls	34514 <__flatcc_fb_clear_parser@@Base+0x16d0>
   3409c:	ldr	r3, [r4]
   340a0:	cmp	r3, #0
   340a4:	beq	34054 <__flatcc_fb_clear_parser@@Base+0x1210>
   340a8:	mov	r8, #0
   340ac:	ldr	r3, [r3]
   340b0:	add	r8, r8, #1
   340b4:	cmp	r3, #0
   340b8:	bne	340ac <__flatcc_fb_clear_parser@@Base+0x1268>
   340bc:	ldr	r3, [sp, #8]
   340c0:	cmp	r3, #0
   340c4:	beq	34054 <__flatcc_fb_clear_parser@@Base+0x1210>
   340c8:	ldr	r0, [fp, #412]	; 0x19c
   340cc:	rsb	r8, r8, #1
   340d0:	b	340f8 <__flatcc_fb_clear_parser@@Base+0x12b4>
   340d4:	cmp	r0, #0
   340d8:	beq	340f4 <__flatcc_fb_clear_parser@@Base+0x12b0>
   340dc:	mov	r2, r8
   340e0:	ldr	r1, [r4]
   340e4:	bl	28a80 <fb_scope_table_find@@Base>
   340e8:	cmp	r0, #0
   340ec:	bne	34074 <__flatcc_fb_clear_parser@@Base+0x1230>
   340f0:	ldr	r0, [fp, #412]	; 0x19c
   340f4:	add	r8, r8, #1
   340f8:	cmp	r8, #0
   340fc:	bne	340d4 <__flatcc_fb_clear_parser@@Base+0x1290>
   34100:	cmp	r0, #0
   34104:	beq	34054 <__flatcc_fb_clear_parser@@Base+0x1210>
   34108:	mov	r1, r8
   3410c:	mov	r2, r5
   34110:	bl	28a80 <fb_scope_table_find@@Base>
   34114:	subs	r4, r0, #0
   34118:	bne	34078 <__flatcc_fb_clear_parser@@Base+0x1234>
   3411c:	b	34054 <__flatcc_fb_clear_parser@@Base+0x1210>
   34120:	mov	r4, r0
   34124:	ldr	r3, [r6, #4]
   34128:	add	r0, r4, #4
   3412c:	ldm	r3, {r1, r2}
   34130:	bl	27c8c <fb_symbol_table_find@@Base>
   34134:	subs	r8, r0, #0
   34138:	beq	34148 <__flatcc_fb_clear_parser@@Base+0x1304>
   3413c:	ldrh	r3, [r8, #8]
   34140:	cmp	r3, #4
   34144:	bls	34330 <__flatcc_fb_clear_parser@@Base+0x14ec>
   34148:	ldr	r3, [r4]
   3414c:	cmp	r3, #0
   34150:	beq	33dac <__flatcc_fb_clear_parser@@Base+0xf68>
   34154:	mov	r8, #0
   34158:	ldr	r3, [r3]
   3415c:	add	r8, r8, #1
   34160:	cmp	r3, #0
   34164:	bne	34158 <__flatcc_fb_clear_parser@@Base+0x1314>
   34168:	ldr	r3, [sp, #8]
   3416c:	cmp	r3, #0
   34170:	beq	33dac <__flatcc_fb_clear_parser@@Base+0xf68>
   34174:	ldr	r0, [fp, #412]	; 0x19c
   34178:	rsb	r8, r8, #1
   3417c:	b	341a4 <__flatcc_fb_clear_parser@@Base+0x1360>
   34180:	cmp	r0, #0
   34184:	beq	341a0 <__flatcc_fb_clear_parser@@Base+0x135c>
   34188:	mov	r2, r8
   3418c:	ldr	r1, [r4]
   34190:	bl	28a80 <fb_scope_table_find@@Base>
   34194:	cmp	r0, #0
   34198:	bne	34120 <__flatcc_fb_clear_parser@@Base+0x12dc>
   3419c:	ldr	r0, [fp, #412]	; 0x19c
   341a0:	add	r8, r8, #1
   341a4:	cmp	r8, #0
   341a8:	bne	34180 <__flatcc_fb_clear_parser@@Base+0x133c>
   341ac:	cmp	r0, #0
   341b0:	beq	33dac <__flatcc_fb_clear_parser@@Base+0xf68>
   341b4:	mov	r1, r8
   341b8:	mov	r2, #0
   341bc:	bl	28a80 <fb_scope_table_find@@Base>
   341c0:	subs	r4, r0, #0
   341c4:	bne	34124 <__flatcc_fb_clear_parser@@Base+0x12e0>
   341c8:	b	33dac <__flatcc_fb_clear_parser@@Base+0xf68>
   341cc:	ldrd	r0, [sp, #16]
   341d0:	ldr	r3, [sp, #48]	; 0x30
   341d4:	ldr	ip, [sp, #28]
   341d8:	cmp	r3, #0
   341dc:	mov	r2, r0
   341e0:	mov	r3, r1
   341e4:	strd	r2, [ip, #96]	; 0x60
   341e8:	beq	350e8 <__flatcc_fb_clear_parser@@Base+0x22a4>
   341ec:	ldrd	r4, [sp, #40]	; 0x28
   341f0:	mov	r3, r0
   341f4:	orrs	r3, r3, r1
   341f8:	movne	r3, #1
   341fc:	moveq	r3, #0
   34200:	cmp	r1, r5
   34204:	cmpeq	r0, r4
   34208:	movhi	r3, #0
   3420c:	andls	r3, r3, #1
   34210:	cmp	r3, #0
   34214:	beq	346d8 <__flatcc_fb_clear_parser@@Base+0x1894>
   34218:	orrs	r3, r4, r5
   3421c:	beq	3429c <__flatcc_fb_clear_parser@@Base+0x1458>
   34220:	ldr	sl, [pc, #580]	; 3446c <__flatcc_fb_clear_parser@@Base+0x1628>
   34224:	ldr	r4, [sp, #56]	; 0x38
   34228:	mov	r3, #10
   3422c:	mov	r6, #0
   34230:	mov	r7, #0
   34234:	ldrb	r5, [r4], #1
   34238:	cmp	r5, #0
   3423c:	bne	34284 <__flatcc_fb_clear_parser@@Base+0x1440>
   34240:	cmp	r3, #0
   34244:	sub	r8, r3, #1
   34248:	beq	34b40 <__flatcc_fb_clear_parser@@Base+0x1cfc>
   3424c:	mov	r2, r6
   34250:	mov	r3, r7
   34254:	mov	r1, sl
   34258:	add	r0, sp, #132	; 0x84
   3425c:	bl	13ff0 <sprintf@plt>
   34260:	ldr	r3, [sp, #28]
   34264:	add	r2, sp, #132	; 0x84
   34268:	mov	r0, fp
   3426c:	ldr	r1, [r3, #4]
   34270:	mov	r3, r9
   34274:	str	r5, [sp, #4]
   34278:	str	r5, [sp]
   3427c:	bl	2e72c <__flatcc_error_report@@Base>
   34280:	mov	r3, r8
   34284:	ldrd	r0, [sp, #40]	; 0x28
   34288:	adds	r6, r6, #1
   3428c:	adc	r7, r7, #0
   34290:	cmp	r1, r7
   34294:	cmpeq	r0, r6
   34298:	bne	34234 <__flatcc_fb_clear_parser@@Base+0x13f0>
   3429c:	ldr	r3, [sp, #32]
   342a0:	cmp	r3, #0
   342a4:	beq	34f08 <__flatcc_fb_clear_parser@@Base+0x20c4>
   342a8:	ldr	r2, [sp, #28]
   342ac:	mov	r1, r3
   342b0:	cmp	r1, #1
   342b4:	ldrh	r3, [r2, #10]
   342b8:	orr	r3, r3, #8
   342bc:	strh	r3, [r2, #10]
   342c0:	beq	34f08 <__flatcc_fb_clear_parser@@Base+0x20c4>
   342c4:	ldr	r3, [fp, #156]	; 0x9c
   342c8:	cmp	r3, #0
   342cc:	moveq	r3, #1
   342d0:	streq	r3, [sp, #24]
   342d4:	bne	34f08 <__flatcc_fb_clear_parser@@Base+0x20c4>
   342d8:	ldr	r3, [sp, #28]
   342dc:	mov	r0, fp
   342e0:	ldr	r2, [pc, #392]	; 34470 <__flatcc_fb_clear_parser@@Base+0x162c>
   342e4:	ldr	r1, [r3, #4]
   342e8:	mov	r3, #0
   342ec:	str	r3, [sp, #4]
   342f0:	str	r3, [sp]
   342f4:	bl	2e72c <__flatcc_error_report@@Base>
   342f8:	mvn	r3, #0
   342fc:	str	r3, [sp, #32]
   34300:	b	33c20 <__flatcc_fb_clear_parser@@Base+0xddc>
   34304:	ldrh	r3, [r4, #16]
   34308:	cmp	r3, #2
   3430c:	beq	334dc <__flatcc_fb_clear_parser@@Base+0x698>
   34310:	ldr	r1, [r4, #4]
   34314:	mov	r3, r0
   34318:	str	r0, [sp, #4]
   3431c:	str	r0, [sp]
   34320:	ldr	r2, [pc, #288]	; 34448 <__flatcc_fb_clear_parser@@Base+0x1604>
   34324:	mov	r0, fp
   34328:	bl	2e72c <__flatcc_error_report@@Base>
   3432c:	b	334dc <__flatcc_fb_clear_parser@@Base+0x698>
   34330:	ldr	r1, [r8, #16]
   34334:	ldr	r0, [sp, #52]	; 0x34
   34338:	bl	275b4 <ptr_set_find_item@@Base>
   3433c:	ldr	r3, [sp, #52]	; 0x34
   34340:	cmp	r0, #0
   34344:	beq	34148 <__flatcc_fb_clear_parser@@Base+0x1304>
   34348:	str	r3, [sp, #52]	; 0x34
   3434c:	ldrh	r3, [r8, #8]
   34350:	cmp	r3, #4
   34354:	ldrls	pc, [pc, r3, lsl #2]
   34358:	b	34940 <__flatcc_fb_clear_parser@@Base+0x1afc>
   3435c:	andeq	r4, r3, r0, ror r3
   34360:	andeq	r4, r3, r0, ror r3
   34364:	andeq	r4, r3, r4, lsr #14
   34368:	andeq	r4, r3, r0, lsl r7
   3436c:	andeq	r4, r3, r0, ror r3
   34370:	mov	r6, #0
   34374:	str	r8, [r9, #16]
   34378:	ldr	r3, [sp, #24]
   3437c:	ldrh	r0, [r8, #8]
   34380:	eor	r1, r3, #1
   34384:	ldrd	r2, [r8, #112]	; 0x70
   34388:	cmp	r0, #4
   3438c:	movne	r1, #0
   34390:	andeq	r1, r1, #1
   34394:	cmp	r1, #0
   34398:	ldrh	r1, [r8, #104]	; 0x68
   3439c:	strd	r2, [r9, #88]	; 0x58
   343a0:	mov	r3, #14
   343a4:	strh	r1, [r9, #74]	; 0x4a
   343a8:	strh	r3, [r9, #24]
   343ac:	beq	343d4 <__flatcc_fb_clear_parser@@Base+0x1590>
   343b0:	ldr	r3, [sp, #48]	; 0x30
   343b4:	cmp	r3, #0
   343b8:	ldrheq	r2, [sp, #16]
   343bc:	moveq	r3, #0
   343c0:	strdeq	r2, [r9, #96]	; 0x60
   343c4:	ldrd	r2, [sp, #16]
   343c8:	adds	r2, r2, #1
   343cc:	adc	r3, r3, #0
   343d0:	strd	r2, [sp, #16]
   343d4:	ldrh	r3, [r9, #56]	; 0x38
   343d8:	cmp	r3, #0
   343dc:	beq	34750 <__flatcc_fb_clear_parser@@Base+0x190c>
   343e0:	cmp	r0, #3
   343e4:	beq	34b60 <__flatcc_fb_clear_parser@@Base+0x1d1c>
   343e8:	mov	r3, #0
   343ec:	ldr	r1, [r9, #4]
   343f0:	ldr	r2, [pc, #204]	; 344c4 <__flatcc_fb_clear_parser@@Base+0x1680>
   343f4:	str	r3, [sp, #4]
   343f8:	str	r3, [sp]
   343fc:	mov	r0, fp
   34400:	bl	2e72c <__flatcc_error_report@@Base>
   34404:	mov	r3, #1
   34408:	strh	r3, [r9, #24]
   3440c:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   34410:	andeq	r9, r5, r4, asr r7
   34414:	andeq	r9, r5, r8, lsl lr
   34418:	strdeq	r9, [r5], -r4
   3441c:	andeq	r9, r5, r8, asr #27
   34420:	andeq	r9, r5, r4, asr sp
   34424:	andeq	r9, r5, r4, lsr #26
   34428:	andeq	r9, r5, ip, ror sp
   3442c:	andeq	r9, r5, r4, asr #28
   34430:	andeq	r9, r5, r8, asr lr
   34434:	andeq	r0, r0, r6, asr #31
   34438:	muleq	r5, ip, pc	; <UNPREDICTABLE>
   3443c:	ldrdeq	r9, [r5], -r8
   34440:	andeq	r9, r5, r4, ror #29
   34444:	andeq	r9, r5, r4, lsl #26
   34448:	andeq	r9, r5, r4, lsr #27
   3444c:	andeq	sl, r5, r8, lsl r0
   34450:	andeq	sl, r5, r4, lsr #2
   34454:	strdeq	sl, [r5], -r8
   34458:	andeq	sl, r5, r8, lsl r4
   3445c:	muleq	r5, ip, r4
   34460:	strdeq	sl, [r5], -r8
   34464:	andeq	sl, r5, r8, lsr #1
   34468:			; <UNDEFINED> instruction: 0x0005a2b4
   3446c:	andeq	sl, r5, r8, ror #9
   34470:	andeq	sl, r5, ip, lsl r5
   34474:	andeq	sl, r5, r8, ror #5
   34478:	andeq	sl, r5, r4, lsr r3
   3447c:	andeq	sl, r5, r0, asr r0
   34480:	andeq	r9, r5, r4, lsr #29
   34484:	andeq	r9, r5, r4, ror #30
   34488:	andeq	sl, r5, ip, asr r3
   3448c:	andeq	r9, r5, ip, ror lr
   34490:	andeq	sl, r5, ip, lsl #3
   34494:	andeq	sl, r5, ip, ror #4
   34498:	strdeq	r9, [r5], -r4
   3449c:	muleq	r5, ip, r3
   344a0:	ldrdeq	sl, [r5], -r4
   344a4:	andeq	sl, r5, ip, ror #8
   344a8:			; <UNDEFINED> instruction: 0x0005a1b8
   344ac:	andeq	r9, r5, r4, lsr #25
   344b0:	andeq	r9, r5, ip, asr #24
   344b4:	andeq	sl, r5, r4, lsr r4
   344b8:	ldrdeq	sl, [r5], -r0
   344bc:	andeq	sl, r5, ip, lsr r2
   344c0:	andeq	sl, r5, r4, ror r0
   344c4:	andeq	sl, r5, r0, ror #3
   344c8:	andeq	r9, r5, ip, lsr #30
   344cc:	ldrdeq	sl, [r5], -r8
   344d0:	strdeq	r9, [r5], -r0
   344d4:	andeq	r9, r5, r0, asr #22
   344d8:	andeq	sl, r5, r4, asr r1
   344dc:	strdeq	r9, [r5], -r0
   344e0:	andeq	r9, r5, ip, lsl #23
   344e4:	andeq	r9, r5, r0, lsl #30
   344e8:	andeq	r9, r5, r8, lsl lr
   344ec:	andeq	r9, r5, r0, asr r8
   344f0:	andeq	r0, r0, fp, asr r1
   344f4:	andeq	sl, r5, r0, ror r0
   344f8:	andeq	sl, r5, ip, lsl #4
   344fc:	andeq	r0, r0, r2, lsl #6
   34500:	strdeq	r9, [r5], -r4
   34504:	andeq	r0, r0, r1, lsl #6
   34508:	andeq	r9, r5, r8, ror #17
   3450c:	muleq	r4, r4, fp
   34510:	andeq	r9, r5, r0, lsl r8
   34514:	ldr	r1, [r8, #16]
   34518:	ldr	r0, [sp, #52]	; 0x34
   3451c:	bl	275b4 <ptr_set_find_item@@Base>
   34520:	cmp	r0, #0
   34524:	beq	3409c <__flatcc_fb_clear_parser@@Base+0x1258>
   34528:	ldrh	r3, [r8, #8]
   3452c:	cmp	r3, #4
   34530:	bhi	345a0 <__flatcc_fb_clear_parser@@Base+0x175c>
   34534:	mov	r4, #1
   34538:	lsl	r3, r4, r3
   3453c:	tst	r3, #27
   34540:	beq	345a0 <__flatcc_fb_clear_parser@@Base+0x175c>
   34544:	ldrh	r6, [r9, #56]	; 0x38
   34548:	cmp	r6, #0
   3454c:	bne	34ee4 <__flatcc_fb_clear_parser@@Base+0x20a0>
   34550:	str	r8, [r9, #16]
   34554:	ldrh	r0, [r8, #8]
   34558:	ldrd	r2, [r8, #112]	; 0x70
   3455c:	ldrh	r1, [r8, #104]	; 0x68
   34560:	cmp	r0, #4
   34564:	strd	r2, [r9, #88]	; 0x58
   34568:	mov	r3, #15
   3456c:	strh	r1, [r9, #74]	; 0x4a
   34570:	strh	r3, [r9, #24]
   34574:	bne	33de0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   34578:	ldr	r3, [sp, #24]
   3457c:	cmp	r3, #0
   34580:	beq	34fe8 <__flatcc_fb_clear_parser@@Base+0x21a4>
   34584:	ldrh	r3, [r9, #72]	; 0x48
   34588:	tst	r3, #128	; 0x80
   3458c:	beq	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   34590:	ldr	r3, [sp, #32]
   34594:	add	r3, r3, #1
   34598:	str	r3, [sp, #32]
   3459c:	b	33e78 <__flatcc_fb_clear_parser@@Base+0x1034>
   345a0:	mov	r2, #0
   345a4:	ldr	r3, [r9, #16]
   345a8:	ldr	r1, [r9, #4]
   345ac:	mov	r0, fp
   345b0:	str	r2, [sp, #4]
   345b4:	str	r2, [sp]
   345b8:	ldr	r2, [pc, #-332]	; 34474 <__flatcc_fb_clear_parser@@Base+0x1630>
   345bc:	bl	2e72c <__flatcc_error_report@@Base>
   345c0:	mov	r3, #1
   345c4:	strh	r3, [r9, #24]
   345c8:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   345cc:	mov	r3, #0
   345d0:	ldr	r1, [r9, #4]
   345d4:	ldr	r2, [pc, #-356]	; 34478 <__flatcc_fb_clear_parser@@Base+0x1634>
   345d8:	str	r3, [sp, #4]
   345dc:	str	r3, [sp]
   345e0:	mov	r0, fp
   345e4:	bl	2e72c <__flatcc_error_report@@Base>
   345e8:	mov	r3, #1
   345ec:	strh	r3, [r9, #24]
   345f0:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   345f4:	ldr	r2, [sp, #24]
   345f8:	ldr	r1, [r9, #4]
   345fc:	mov	r3, r2
   34600:	str	r2, [sp, #4]
   34604:	str	r2, [sp]
   34608:	mov	r0, fp
   3460c:	ldr	r2, [pc, #-408]	; 3447c <__flatcc_fb_clear_parser@@Base+0x1638>
   34610:	bl	2e72c <__flatcc_error_report@@Base>
   34614:	mov	r3, #1
   34618:	str	r3, [sp, #24]
   3461c:	b	339c8 <__flatcc_fb_clear_parser@@Base+0xb84>
   34620:	tst	r6, #1024	; 0x400
   34624:	bne	33958 <__flatcc_fb_clear_parser@@Base+0xb14>
   34628:	b	33924 <__flatcc_fb_clear_parser@@Base+0xae0>
   3462c:	mov	r3, #0
   34630:	ldr	r1, [r7, #4]
   34634:	ldr	r2, [pc, #-444]	; 34480 <__flatcc_fb_clear_parser@@Base+0x163c>
   34638:	str	r3, [sp, #4]
   3463c:	str	r3, [sp]
   34640:	mov	r0, fp
   34644:	bl	2e72c <__flatcc_error_report@@Base>
   34648:	ldrh	r6, [r9, #72]	; 0x48
   3464c:	b	338dc <__flatcc_fb_clear_parser@@Base+0xa98>
   34650:	strh	r4, [r9, #72]	; 0x48
   34654:	ldr	r6, [sp, #36]	; 0x24
   34658:	b	338f0 <__flatcc_fb_clear_parser@@Base+0xaac>
   3465c:	mov	r3, #0
   34660:	ldr	r1, [r9, #4]
   34664:	ldr	r2, [pc, #-488]	; 34484 <__flatcc_fb_clear_parser@@Base+0x1640>
   34668:	str	r3, [sp, #4]
   3466c:	str	r3, [sp]
   34670:	mov	r0, fp
   34674:	bl	2e72c <__flatcc_error_report@@Base>
   34678:	ldrh	r6, [r9, #72]	; 0x48
   3467c:	b	338f0 <__flatcc_fb_clear_parser@@Base+0xaac>
   34680:	mov	r3, #0
   34684:	ldr	r1, [r7, #4]
   34688:	ldr	r2, [pc, #-520]	; 34488 <__flatcc_fb_clear_parser@@Base+0x1644>
   3468c:	str	r3, [sp, #4]
   34690:	str	r3, [sp]
   34694:	mov	r0, fp
   34698:	bl	2e72c <__flatcc_error_report@@Base>
   3469c:	mov	r3, #1
   346a0:	str	r3, [sp, #24]
   346a4:	b	33e58 <__flatcc_fb_clear_parser@@Base+0x1014>
   346a8:	ldr	r1, [r9, #4]
   346ac:	mov	r3, r8
   346b0:	mov	r0, fp
   346b4:	str	r8, [sp, #4]
   346b8:	str	r8, [sp]
   346bc:	ldr	r2, [pc, #-568]	; 3448c <__flatcc_fb_clear_parser@@Base+0x1648>
   346c0:	bl	2e72c <__flatcc_error_report@@Base>
   346c4:	mvn	r3, #0
   346c8:	str	r3, [sp, #32]
   346cc:	ldr	r0, [sp, #32]
   346d0:	add	sp, sp, #236	; 0xec
   346d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   346d8:	ldr	r3, [sp, #32]
   346dc:	cmp	r3, #0
   346e0:	beq	33c2c <__flatcc_fb_clear_parser@@Base+0xde8>
   346e4:	mov	r1, r3
   346e8:	ldrh	r3, [ip, #10]
   346ec:	cmp	r1, #1
   346f0:	orr	r3, r3, #8
   346f4:	strh	r3, [ip, #10]
   346f8:	beq	34708 <__flatcc_fb_clear_parser@@Base+0x18c4>
   346fc:	ldr	r3, [fp, #156]	; 0x9c
   34700:	cmp	r3, #0
   34704:	beq	342d8 <__flatcc_fb_clear_parser@@Base+0x1494>
   34708:	str	r9, [sp, #32]
   3470c:	b	33c2c <__flatcc_fb_clear_parser@@Base+0xde8>
   34710:	ldrh	r3, [r9, #72]	; 0x48
   34714:	tst	r3, #256	; 0x100
   34718:	bne	34f84 <__flatcc_fb_clear_parser@@Base+0x2140>
   3471c:	ldr	r6, [fp, #148]	; 0x94
   34720:	b	34374 <__flatcc_fb_clear_parser@@Base+0x1530>
   34724:	mov	r2, #0
   34728:	ldr	r3, [r8, #4]
   3472c:	ldr	r1, [r9, #4]
   34730:	mov	r0, fp
   34734:	str	r2, [sp, #4]
   34738:	str	r2, [sp]
   3473c:	ldr	r2, [pc, #-692]	; 34490 <__flatcc_fb_clear_parser@@Base+0x164c>
   34740:	bl	2e72c <__flatcc_error_report@@Base>
   34744:	mov	r3, #1
   34748:	strh	r3, [r9, #24]
   3474c:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   34750:	cmp	r0, #3
   34754:	bne	33de0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   34758:	mov	r2, #0
   3475c:	mov	r3, #0
   34760:	mov	r4, r9
   34764:	mov	r1, #5
   34768:	strh	r1, [r9, #56]	; 0x38
   3476c:	mov	r0, fp
   34770:	strd	r2, [r4, #48]!	; 0x30
   34774:	mov	r1, r8
   34778:	ldr	r2, [r8, #40]	; 0x28
   3477c:	mov	r3, r4
   34780:	bl	3795c <__flatcc_fb_coerce_scalar_type@@Base>
   34784:	cmp	r0, #0
   34788:	bne	33f80 <__flatcc_fb_clear_parser@@Base+0x113c>
   3478c:	ldr	r3, [fp, #212]	; 0xd4
   34790:	cmp	r3, #0
   34794:	beq	33de0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   34798:	ldr	r0, [r9, #16]
   3479c:	mov	r1, r4
   347a0:	add	r0, r0, #72	; 0x48
   347a4:	bl	3fc80 <fb_value_set_find_item@@Base>
   347a8:	cmp	r0, #0
   347ac:	bne	33de0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   347b0:	ldr	r3, [r8, #4]
   347b4:	ldr	r1, [r9, #4]
   347b8:	ldr	r2, [pc, #-812]	; 34494 <__flatcc_fb_clear_parser@@Base+0x1650>
   347bc:	str	r0, [sp, #4]
   347c0:	str	r0, [sp]
   347c4:	mov	r0, fp
   347c8:	bl	2e72c <__flatcc_error_report@@Base>
   347cc:	mov	r3, #1
   347d0:	strh	r3, [r9, #24]
   347d4:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   347d8:	cmp	r2, #4
   347dc:	bne	34e84 <__flatcc_fb_clear_parser@@Base+0x2040>
   347e0:	ldrh	r3, [r4, #16]
   347e4:	sub	r3, r3, #4
   347e8:	cmp	r3, #1
   347ec:	bls	334dc <__flatcc_fb_clear_parser@@Base+0x698>
   347f0:	ldr	r1, [r4, #4]
   347f4:	mov	r3, r0
   347f8:	str	r0, [sp, #4]
   347fc:	str	r0, [sp]
   34800:	mov	r2, r9
   34804:	mov	r0, fp
   34808:	bl	2e72c <__flatcc_error_report@@Base>
   3480c:	b	334dc <__flatcc_fb_clear_parser@@Base+0x698>
   34810:	cmp	r2, #4
   34814:	bne	35038 <__flatcc_fb_clear_parser@@Base+0x21f4>
   34818:	ldrh	r3, [r4, #16]
   3481c:	sub	r3, r3, #4
   34820:	cmp	r3, #1
   34824:	bls	336d8 <__flatcc_fb_clear_parser@@Base+0x894>
   34828:	ldr	r1, [r4, #4]
   3482c:	mov	r3, r0
   34830:	str	r0, [sp, #4]
   34834:	str	r0, [sp]
   34838:	ldr	r2, [pc, #-936]	; 34498 <__flatcc_fb_clear_parser@@Base+0x1654>
   3483c:	mov	r0, fp
   34840:	bl	2e72c <__flatcc_error_report@@Base>
   34844:	b	336d8 <__flatcc_fb_clear_parser@@Base+0x894>
   34848:	ldr	r1, [r9, #4]
   3484c:	mov	r3, r2
   34850:	str	r2, [sp, #4]
   34854:	str	r2, [sp]
   34858:	mov	r0, fp
   3485c:	ldr	r2, [pc, #-968]	; 3449c <__flatcc_fb_clear_parser@@Base+0x1658>
   34860:	bl	2e72c <__flatcc_error_report@@Base>
   34864:	mov	r3, #1
   34868:	str	r3, [sp, #24]
   3486c:	b	33e58 <__flatcc_fb_clear_parser@@Base+0x1014>
   34870:	mov	r3, #0
   34874:	ldr	r1, [r9, #4]
   34878:	ldr	r2, [pc, #-992]	; 344a0 <__flatcc_fb_clear_parser@@Base+0x165c>
   3487c:	str	r3, [sp, #4]
   34880:	str	r3, [sp]
   34884:	mov	r0, fp
   34888:	bl	2e72c <__flatcc_error_report@@Base>
   3488c:	mov	r3, #1
   34890:	strh	r3, [r9, #24]
   34894:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   34898:	ldrd	r0, [r7, #8]
   3489c:	ldrd	r2, [fp, #216]	; 0xd8
   348a0:	cmp	r1, r3
   348a4:	cmpeq	r0, r2
   348a8:	bcs	34f3c <__flatcc_fb_clear_parser@@Base+0x20f8>
   348ac:	ldrd	r2, [sp, #40]	; 0x28
   348b0:	mov	r1, #0
   348b4:	uxth	r0, r0
   348b8:	cmp	r3, r1
   348bc:	cmpeq	r2, r0
   348c0:	strd	r0, [r9, #96]	; 0x60
   348c4:	strdcc	r0, [sp, #40]	; 0x28
   348c8:	ldr	r3, [sp, #48]	; 0x30
   348cc:	cmp	r3, #0
   348d0:	beq	34918 <__flatcc_fb_clear_parser@@Base+0x1ad4>
   348d4:	ldr	r3, [r9, #96]	; 0x60
   348d8:	ldr	r1, [sp, #56]	; 0x38
   348dc:	add	r2, r1, r3
   348e0:	ldrb	r3, [r1, r3]
   348e4:	cmp	r3, #2
   348e8:	beq	349d8 <__flatcc_fb_clear_parser@@Base+0x1b94>
   348ec:	cmp	r3, #0
   348f0:	moveq	r3, #1
   348f4:	strbeq	r3, [r2]
   348f8:	bne	34920 <__flatcc_fb_clear_parser@@Base+0x1adc>
   348fc:	cmp	r8, #0
   34900:	streq	r8, [sp, #24]
   34904:	beq	33e58 <__flatcc_fb_clear_parser@@Base+0x1014>
   34908:	ldrh	r3, [r8, #8]
   3490c:	cmp	r3, #4
   34910:	movne	r3, #0
   34914:	beq	3496c <__flatcc_fb_clear_parser@@Base+0x1b28>
   34918:	str	r3, [sp, #24]
   3491c:	b	33e58 <__flatcc_fb_clear_parser@@Base+0x1014>
   34920:	mov	r3, #0
   34924:	ldr	r1, [r7, #4]
   34928:	ldr	r2, [pc, #-1164]	; 344a4 <__flatcc_fb_clear_parser@@Base+0x1660>
   3492c:	str	r3, [sp, #4]
   34930:	str	r3, [sp]
   34934:	mov	r0, fp
   34938:	bl	2e72c <__flatcc_error_report@@Base>
   3493c:	b	348fc <__flatcc_fb_clear_parser@@Base+0x1ab8>
   34940:	mov	r2, #0
   34944:	ldr	r3, [r8, #4]
   34948:	ldr	r1, [r9, #4]
   3494c:	mov	r0, fp
   34950:	str	r2, [sp, #4]
   34954:	str	r2, [sp]
   34958:	ldr	r2, [pc, #-1208]	; 344a8 <__flatcc_fb_clear_parser@@Base+0x1664>
   3495c:	bl	2e72c <__flatcc_error_report@@Base>
   34960:	mov	r3, #1
   34964:	strh	r3, [r9, #24]
   34968:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   3496c:	ldrd	r0, [r9, #96]	; 0x60
   34970:	ldrh	r2, [r9, #24]
   34974:	cmp	r1, #0
   34978:	cmpeq	r0, #1
   3497c:	bls	34f64 <__flatcc_fb_clear_parser@@Base+0x2120>
   34980:	ldr	r3, [sp, #56]	; 0x38
   34984:	sub	r0, r0, #1
   34988:	add	r1, r3, r0
   3498c:	ldrb	r3, [r3, r0]
   34990:	cmp	r3, #2
   34994:	beq	34fa4 <__flatcc_fb_clear_parser@@Base+0x2160>
   34998:	cmp	r3, #0
   3499c:	beq	34cc0 <__flatcc_fb_clear_parser@@Base+0x1e7c>
   349a0:	ldr	r1, [r7, #4]
   349a4:	ldr	r0, [pc, #-1280]	; 344ac <__flatcc_fb_clear_parser@@Base+0x1668>
   349a8:	ldr	ip, [pc, #-1280]	; 344b0 <__flatcc_fb_clear_parser@@Base+0x166c>
   349ac:	mov	r3, #0
   349b0:	cmp	r2, #11
   349b4:	moveq	r0, ip
   349b8:	mov	r2, r0
   349bc:	str	r3, [sp, #4]
   349c0:	str	r3, [sp]
   349c4:	mov	r0, fp
   349c8:	bl	2e72c <__flatcc_error_report@@Base>
   349cc:	ldr	r3, [sp, #48]	; 0x30
   349d0:	str	r3, [sp, #24]
   349d4:	b	33e58 <__flatcc_fb_clear_parser@@Base+0x1014>
   349d8:	mov	r3, #0
   349dc:	ldr	r1, [r7, #4]
   349e0:	ldr	r2, [pc, #-1332]	; 344b4 <__flatcc_fb_clear_parser@@Base+0x1670>
   349e4:	str	r3, [sp, #4]
   349e8:	str	r3, [sp]
   349ec:	mov	r0, fp
   349f0:	bl	2e72c <__flatcc_error_report@@Base>
   349f4:	ldr	r3, [sp, #48]	; 0x30
   349f8:	str	r3, [sp, #24]
   349fc:	b	33e58 <__flatcc_fb_clear_parser@@Base+0x1014>
   34a00:	ldr	r6, [sp, #36]	; 0x24
   34a04:	b	335c0 <__flatcc_fb_clear_parser@@Base+0x77c>
   34a08:	mov	r2, r6
   34a0c:	mov	r6, #0
   34a10:	b	33bc8 <__flatcc_fb_clear_parser@@Base+0xd84>
   34a14:	mov	r2, lr
   34a18:	str	ip, [sp, #12]
   34a1c:	mov	r6, #0
   34a20:	b	33844 <__flatcc_fb_clear_parser@@Base+0xa00>
   34a24:	ldr	r1, [r9, #48]	; 0x30
   34a28:	ldr	r3, [sp, #28]
   34a2c:	cmp	r1, #0
   34a30:	ldr	r4, [r3, #12]
   34a34:	beq	3506c <__flatcc_fb_clear_parser@@Base+0x2228>
   34a38:	mov	r3, #0
   34a3c:	mov	r2, r3
   34a40:	mov	r5, r1
   34a44:	mov	r0, r3
   34a48:	b	34a58 <__flatcc_fb_clear_parser@@Base+0x1c14>
   34a4c:	mov	r0, r5
   34a50:	mov	r2, r3
   34a54:	mov	r5, ip
   34a58:	ldr	ip, [r5]
   34a5c:	add	r3, r2, #1
   34a60:	cmp	ip, #0
   34a64:	bne	34a4c <__flatcc_fb_clear_parser@@Base+0x1c08>
   34a68:	cmp	r0, #0
   34a6c:	mov	r6, r0
   34a70:	beq	34ca4 <__flatcc_fb_clear_parser@@Base+0x1e60>
   34a74:	adds	r3, r4, #0
   34a78:	movne	r3, #1
   34a7c:	cmp	r2, #1
   34a80:	movne	r3, #0
   34a84:	cmp	r3, #0
   34a88:	bne	34bec <__flatcc_fb_clear_parser@@Base+0x1da8>
   34a8c:	cmp	r2, #1
   34a90:	moveq	ip, r3
   34a94:	ldr	r3, [sp, #8]
   34a98:	movne	ip, r1
   34a9c:	cmp	r3, #0
   34aa0:	beq	34ca4 <__flatcc_fb_clear_parser@@Base+0x1e60>
   34aa4:	ldr	r0, [fp, #412]	; 0x19c
   34aa8:	cmp	r0, #0
   34aac:	beq	34ca4 <__flatcc_fb_clear_parser@@Base+0x1e60>
   34ab0:	rsb	r2, r2, #1
   34ab4:	mov	r1, ip
   34ab8:	bl	28a80 <fb_scope_table_find@@Base>
   34abc:	cmp	r0, #0
   34ac0:	beq	34ca0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   34ac4:	ldr	r3, [r6, #4]
   34ac8:	add	r0, r0, #4
   34acc:	ldm	r3, {r1, r2}
   34ad0:	bl	27c8c <fb_symbol_table_find@@Base>
   34ad4:	subs	r3, r0, #0
   34ad8:	beq	34ca0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   34adc:	ldrh	r2, [r3, #8]
   34ae0:	cmp	r2, #4
   34ae4:	bhi	34ca0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   34ae8:	ldr	r1, [r3, #16]
   34aec:	add	r0, fp, #524	; 0x20c
   34af0:	str	r3, [sp, #52]	; 0x34
   34af4:	bl	275b4 <ptr_set_find_item@@Base>
   34af8:	ldr	r3, [sp, #52]	; 0x34
   34afc:	cmp	r0, #0
   34b00:	beq	34ca0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   34b04:	ldrh	r2, [r3, #8]
   34b08:	cmp	r2, #3
   34b0c:	bne	34ca0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   34b10:	ldr	r1, [r5, #4]
   34b14:	add	r0, r3, #56	; 0x38
   34b18:	ldm	r1, {r1, r2}
   34b1c:	bl	27c8c <fb_symbol_table_find@@Base>
   34b20:	subs	r3, r0, #0
   34b24:	beq	34ca0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   34b28:	add	r3, r3, #48	; 0x30
   34b2c:	add	ip, r9, #48	; 0x30
   34b30:	ldm	r3, {r0, r1, r2, r3}
   34b34:	stm	ip, {r0, r1, r2, r3}
   34b38:	ldrh	r3, [r9, #56]	; 0x38
   34b3c:	b	33edc <__flatcc_fb_clear_parser@@Base+0x1098>
   34b40:	ldr	r2, [sp, #28]
   34b44:	mov	r0, fp
   34b48:	ldr	r1, [r2, #4]
   34b4c:	str	r3, [sp, #4]
   34b50:	str	r3, [sp]
   34b54:	ldr	r2, [pc, #-1700]	; 344b8 <__flatcc_fb_clear_parser@@Base+0x1674>
   34b58:	bl	2e72c <__flatcc_error_report@@Base>
   34b5c:	b	3429c <__flatcc_fb_clear_parser@@Base+0x1458>
   34b60:	cmp	r3, #13
   34b64:	beq	34cd0 <__flatcc_fb_clear_parser@@Base+0x1e8c>
   34b68:	add	r4, r9, #48	; 0x30
   34b6c:	mov	r3, r4
   34b70:	ldr	r2, [r8, #40]	; 0x28
   34b74:	mov	r1, r9
   34b78:	mov	r0, fp
   34b7c:	bl	3795c <__flatcc_fb_coerce_scalar_type@@Base>
   34b80:	cmp	r0, #0
   34b84:	bne	33f80 <__flatcc_fb_clear_parser@@Base+0x113c>
   34b88:	ldr	r3, [fp, #212]	; 0xd4
   34b8c:	cmp	r3, #0
   34b90:	beq	33de0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   34b94:	ldr	r0, [r9, #16]
   34b98:	mov	r1, r4
   34b9c:	add	r0, r0, #72	; 0x48
   34ba0:	bl	3fc80 <fb_value_set_find_item@@Base>
   34ba4:	cmp	r0, #0
   34ba8:	bne	33de0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   34bac:	ldr	r1, [r9, #4]
   34bb0:	mov	r3, r0
   34bb4:	str	r0, [sp, #4]
   34bb8:	str	r0, [sp]
   34bbc:	ldr	r2, [pc, #-1800]	; 344bc <__flatcc_fb_clear_parser@@Base+0x1678>
   34bc0:	mov	r0, fp
   34bc4:	bl	2e72c <__flatcc_error_report@@Base>
   34bc8:	mov	r3, #1
   34bcc:	strh	r3, [r9, #24]
   34bd0:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   34bd4:	mov	r1, r2
   34bd8:	mov	r3, #0
   34bdc:	mov	r2, #0
   34be0:	str	r9, [sp, #32]
   34be4:	strd	r2, [r1, #96]	; 0x60
   34be8:	b	33c2c <__flatcc_fb_clear_parser@@Base+0xde8>
   34bec:	add	r3, fp, #524	; 0x20c
   34bf0:	str	ip, [sp, #60]	; 0x3c
   34bf4:	str	r3, [sp, #52]	; 0x34
   34bf8:	str	r5, [sp, #64]	; 0x40
   34bfc:	ldr	r3, [r6, #4]
   34c00:	add	r0, r4, #4
   34c04:	ldm	r3, {r1, r2}
   34c08:	bl	27c8c <fb_symbol_table_find@@Base>
   34c0c:	subs	r3, r0, #0
   34c10:	beq	34c20 <__flatcc_fb_clear_parser@@Base+0x1ddc>
   34c14:	ldrh	r2, [r3, #8]
   34c18:	cmp	r2, #4
   34c1c:	bls	34eb8 <__flatcc_fb_clear_parser@@Base+0x2074>
   34c20:	ldr	r2, [r4]
   34c24:	cmp	r2, #0
   34c28:	beq	34ca0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   34c2c:	mov	r3, #0
   34c30:	ldr	r2, [r2]
   34c34:	add	r3, r3, #1
   34c38:	cmp	r2, #0
   34c3c:	bne	34c30 <__flatcc_fb_clear_parser@@Base+0x1dec>
   34c40:	ldr	r2, [sp, #8]
   34c44:	cmp	r2, #0
   34c48:	beq	34ca0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   34c4c:	ldr	r0, [fp, #412]	; 0x19c
   34c50:	rsb	r5, r3, #1
   34c54:	b	34c7c <__flatcc_fb_clear_parser@@Base+0x1e38>
   34c58:	cmp	r0, #0
   34c5c:	beq	34c78 <__flatcc_fb_clear_parser@@Base+0x1e34>
   34c60:	mov	r2, r5
   34c64:	ldr	r1, [r4]
   34c68:	bl	28a80 <fb_scope_table_find@@Base>
   34c6c:	cmp	r0, #0
   34c70:	bne	34edc <__flatcc_fb_clear_parser@@Base+0x2098>
   34c74:	ldr	r0, [fp, #412]	; 0x19c
   34c78:	add	r5, r5, #1
   34c7c:	cmp	r5, #0
   34c80:	bne	34c58 <__flatcc_fb_clear_parser@@Base+0x1e14>
   34c84:	cmp	r0, #0
   34c88:	beq	34ca0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   34c8c:	mov	r1, r5
   34c90:	ldr	r2, [sp, #60]	; 0x3c
   34c94:	bl	28a80 <fb_scope_table_find@@Base>
   34c98:	subs	r4, r0, #0
   34c9c:	bne	34bfc <__flatcc_fb_clear_parser@@Base+0x1db8>
   34ca0:	ldr	r1, [r9, #48]	; 0x30
   34ca4:	mov	r3, r9
   34ca8:	ldr	r2, [pc, #-2032]	; 344c0 <__flatcc_fb_clear_parser@@Base+0x167c>
   34cac:	mov	r0, fp
   34cb0:	bl	2f6ec <error_ref_sym@@Base>
   34cb4:	mov	r3, #1
   34cb8:	strh	r3, [r9, #24]
   34cbc:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   34cc0:	mov	r2, #2
   34cc4:	str	r3, [sp, #24]
   34cc8:	strb	r2, [r1]
   34ccc:	b	33e58 <__flatcc_fb_clear_parser@@Base+0x1014>
   34cd0:	ldr	r3, [r9, #48]	; 0x30
   34cd4:	ldr	r2, [sp, #28]
   34cd8:	cmp	r3, #0
   34cdc:	str	r3, [sp, #64]	; 0x40
   34ce0:	ldr	r4, [r2, #12]
   34ce4:	beq	3506c <__flatcc_fb_clear_parser@@Base+0x2228>
   34ce8:	mov	r2, #0
   34cec:	b	34cfc <__flatcc_fb_clear_parser@@Base+0x1eb8>
   34cf0:	mov	r5, r3
   34cf4:	mov	r2, r0
   34cf8:	mov	r3, r1
   34cfc:	ldr	r1, [r3]
   34d00:	add	r0, r2, #1
   34d04:	cmp	r1, #0
   34d08:	bne	34cf0 <__flatcc_fb_clear_parser@@Base+0x1eac>
   34d0c:	cmp	r5, #0
   34d10:	str	r3, [sp, #68]	; 0x44
   34d14:	beq	34d90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   34d18:	adds	r3, r4, #0
   34d1c:	movne	r3, #1
   34d20:	cmp	r2, #1
   34d24:	movne	r3, #0
   34d28:	cmp	r3, #0
   34d2c:	strne	r1, [sp, #72]	; 0x48
   34d30:	strne	r6, [sp, #60]	; 0x3c
   34d34:	bne	34dd8 <__flatcc_fb_clear_parser@@Base+0x1f94>
   34d38:	cmp	r2, #1
   34d3c:	ldr	r1, [sp, #64]	; 0x40
   34d40:	moveq	r1, r3
   34d44:	ldr	r3, [sp, #8]
   34d48:	cmp	r3, #0
   34d4c:	beq	34d90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   34d50:	ldr	r0, [fp, #412]	; 0x19c
   34d54:	cmp	r0, #0
   34d58:	beq	34d90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   34d5c:	rsb	r2, r2, #1
   34d60:	bl	28a80 <fb_scope_table_find@@Base>
   34d64:	cmp	r0, #0
   34d68:	beq	34d90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   34d6c:	ldr	r3, [r5, #4]
   34d70:	add	r0, r0, #4
   34d74:	ldm	r3, {r1, r2}
   34d78:	bl	27c8c <fb_symbol_table_find@@Base>
   34d7c:	subs	r3, r0, #0
   34d80:	beq	34d90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   34d84:	ldrh	r2, [r3, #8]
   34d88:	cmp	r2, #4
   34d8c:	bls	35080 <__flatcc_fb_clear_parser@@Base+0x223c>
   34d90:	ldr	r3, [sp, #64]	; 0x40
   34d94:	ldr	r3, [r3]
   34d98:	cmp	r3, #0
   34d9c:	moveq	r3, r8
   34da0:	bne	350a0 <__flatcc_fb_clear_parser@@Base+0x225c>
   34da4:	ldr	r2, [sp, #68]	; 0x44
   34da8:	add	r0, r3, #56	; 0x38
   34dac:	ldr	r1, [r2, #4]
   34db0:	ldm	r1, {r1, r2}
   34db4:	bl	27c8c <fb_symbol_table_find@@Base>
   34db8:	subs	r3, r0, #0
   34dbc:	beq	350a0 <__flatcc_fb_clear_parser@@Base+0x225c>
   34dc0:	add	r3, r3, #48	; 0x30
   34dc4:	add	ip, r9, #48	; 0x30
   34dc8:	ldm	r3, {r0, r1, r2, r3}
   34dcc:	stm	ip, {r0, r1, r2, r3}
   34dd0:	b	33de0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   34dd4:	mov	r4, r0
   34dd8:	ldr	r3, [r5, #4]
   34ddc:	add	r0, r4, #4
   34de0:	ldm	r3, {r1, r2}
   34de4:	bl	27c8c <fb_symbol_table_find@@Base>
   34de8:	subs	r3, r0, #0
   34dec:	beq	34dfc <__flatcc_fb_clear_parser@@Base+0x1fb8>
   34df0:	ldrh	r2, [r3, #8]
   34df4:	cmp	r2, #4
   34df8:	bls	34fb8 <__flatcc_fb_clear_parser@@Base+0x2174>
   34dfc:	ldr	r2, [r4]
   34e00:	cmp	r2, #0
   34e04:	beq	34e7c <__flatcc_fb_clear_parser@@Base+0x2038>
   34e08:	mov	r3, #0
   34e0c:	ldr	r2, [r2]
   34e10:	add	r3, r3, #1
   34e14:	cmp	r2, #0
   34e18:	bne	34e0c <__flatcc_fb_clear_parser@@Base+0x1fc8>
   34e1c:	ldr	r2, [sp, #8]
   34e20:	cmp	r2, #0
   34e24:	beq	34e7c <__flatcc_fb_clear_parser@@Base+0x2038>
   34e28:	ldr	r0, [fp, #412]	; 0x19c
   34e2c:	rsb	r6, r3, #1
   34e30:	b	34e58 <__flatcc_fb_clear_parser@@Base+0x2014>
   34e34:	cmp	r0, #0
   34e38:	beq	34e54 <__flatcc_fb_clear_parser@@Base+0x2010>
   34e3c:	mov	r2, r6
   34e40:	ldr	r1, [r4]
   34e44:	bl	28a80 <fb_scope_table_find@@Base>
   34e48:	cmp	r0, #0
   34e4c:	bne	34dd4 <__flatcc_fb_clear_parser@@Base+0x1f90>
   34e50:	ldr	r0, [fp, #412]	; 0x19c
   34e54:	add	r6, r6, #1
   34e58:	cmp	r6, #0
   34e5c:	bne	34e34 <__flatcc_fb_clear_parser@@Base+0x1ff0>
   34e60:	cmp	r0, #0
   34e64:	beq	34e7c <__flatcc_fb_clear_parser@@Base+0x2038>
   34e68:	mov	r1, r6
   34e6c:	ldr	r2, [sp, #72]	; 0x48
   34e70:	bl	28a80 <fb_scope_table_find@@Base>
   34e74:	subs	r4, r0, #0
   34e78:	bne	34dd8 <__flatcc_fb_clear_parser@@Base+0x1f94>
   34e7c:	ldr	r6, [sp, #60]	; 0x3c
   34e80:	b	34d90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   34e84:	cmp	r2, #6
   34e88:	bne	334dc <__flatcc_fb_clear_parser@@Base+0x698>
   34e8c:	ldrh	r3, [r4, #16]
   34e90:	cmp	r3, #6
   34e94:	beq	334dc <__flatcc_fb_clear_parser@@Base+0x698>
   34e98:	mov	r3, #0
   34e9c:	ldr	r1, [r4, #4]
   34ea0:	mov	r2, r8
   34ea4:	str	r3, [sp, #4]
   34ea8:	str	r3, [sp]
   34eac:	mov	r0, fp
   34eb0:	bl	2e72c <__flatcc_error_report@@Base>
   34eb4:	b	334dc <__flatcc_fb_clear_parser@@Base+0x698>
   34eb8:	ldr	r1, [r3, #16]
   34ebc:	ldr	r0, [sp, #52]	; 0x34
   34ec0:	str	r3, [sp, #68]	; 0x44
   34ec4:	bl	275b4 <ptr_set_find_item@@Base>
   34ec8:	ldr	r3, [sp, #68]	; 0x44
   34ecc:	cmp	r0, #0
   34ed0:	beq	34c20 <__flatcc_fb_clear_parser@@Base+0x1ddc>
   34ed4:	ldr	r5, [sp, #64]	; 0x40
   34ed8:	b	34b04 <__flatcc_fb_clear_parser@@Base+0x1cc0>
   34edc:	mov	r4, r0
   34ee0:	b	34bfc <__flatcc_fb_clear_parser@@Base+0x1db8>
   34ee4:	mov	r3, #0
   34ee8:	ldr	r1, [r9, #4]
   34eec:	ldr	r2, [pc, #-2608]	; 344c4 <__flatcc_fb_clear_parser@@Base+0x1680>
   34ef0:	str	r3, [sp, #4]
   34ef4:	str	r3, [sp]
   34ef8:	mov	r0, fp
   34efc:	bl	2e72c <__flatcc_error_report@@Base>
   34f00:	strh	r4, [r9, #24]
   34f04:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   34f08:	mvn	r3, #0
   34f0c:	str	r3, [sp, #32]
   34f10:	b	33c2c <__flatcc_fb_clear_parser@@Base+0xde8>
   34f14:	mov	r2, #0
   34f18:	ldr	r3, [r3, #4]
   34f1c:	ldr	r1, [r7, #4]
   34f20:	mov	r0, fp
   34f24:	str	r2, [sp, #4]
   34f28:	str	r2, [sp]
   34f2c:	ldr	r2, [pc, #-2668]	; 344c8 <__flatcc_fb_clear_parser@@Base+0x1684>
   34f30:	bl	2e72c <__flatcc_error_report@@Base>
   34f34:	ldrh	r6, [r9, #72]	; 0x48
   34f38:	b	338dc <__flatcc_fb_clear_parser@@Base+0xa98>
   34f3c:	ldr	r1, [r9, #4]
   34f40:	mov	r3, ip
   34f44:	str	ip, [sp, #4]
   34f48:	str	ip, [sp]
   34f4c:	ldr	r2, [pc, #-2696]	; 344cc <__flatcc_fb_clear_parser@@Base+0x1688>
   34f50:	mov	r0, fp
   34f54:	bl	2e72c <__flatcc_error_report@@Base>
   34f58:	mov	r3, #1
   34f5c:	str	r3, [sp, #24]
   34f60:	b	33e58 <__flatcc_fb_clear_parser@@Base+0x1014>
   34f64:	ldr	r0, [pc, #-2716]	; 344d0 <__flatcc_fb_clear_parser@@Base+0x168c>
   34f68:	ldr	ip, [pc, #-2716]	; 344d4 <__flatcc_fb_clear_parser@@Base+0x1690>
   34f6c:	cmp	r2, #11
   34f70:	moveq	ip, r0
   34f74:	ldr	r1, [r7, #4]
   34f78:	mov	r3, #0
   34f7c:	mov	r2, ip
   34f80:	b	349bc <__flatcc_fb_clear_parser@@Base+0x1b78>
   34f84:	mov	r3, #0
   34f88:	ldr	r1, [r9, #4]
   34f8c:	ldr	r2, [pc, #-2748]	; 344d8 <__flatcc_fb_clear_parser@@Base+0x1694>
   34f90:	str	r3, [sp, #4]
   34f94:	str	r3, [sp]
   34f98:	mov	r0, fp
   34f9c:	bl	2e72c <__flatcc_error_report@@Base>
   34fa0:	b	3471c <__flatcc_fb_clear_parser@@Base+0x18d8>
   34fa4:	ldr	r1, [r7, #4]
   34fa8:	mov	r3, #0
   34fac:	ldr	r0, [pc, #-2776]	; 344dc <__flatcc_fb_clear_parser@@Base+0x1698>
   34fb0:	ldr	ip, [pc, #-2776]	; 344e0 <__flatcc_fb_clear_parser@@Base+0x169c>
   34fb4:	b	349b0 <__flatcc_fb_clear_parser@@Base+0x1b6c>
   34fb8:	ldr	r1, [r3, #16]
   34fbc:	ldr	r0, [sp, #52]	; 0x34
   34fc0:	str	r3, [sp, #76]	; 0x4c
   34fc4:	bl	275b4 <ptr_set_find_item@@Base>
   34fc8:	ldr	r3, [sp, #76]	; 0x4c
   34fcc:	cmp	r0, #0
   34fd0:	beq	34dfc <__flatcc_fb_clear_parser@@Base+0x1fb8>
   34fd4:	ldr	r6, [sp, #60]	; 0x3c
   34fd8:	ldrh	r2, [r3, #8]
   34fdc:	cmp	r2, #3
   34fe0:	bne	34d90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   34fe4:	b	34da4 <__flatcc_fb_clear_parser@@Base+0x1f60>
   34fe8:	ldr	r3, [sp, #48]	; 0x30
   34fec:	cmp	r3, #0
   34ff0:	ldrheq	r2, [sp, #16]
   34ff4:	moveq	r3, #0
   34ff8:	strdeq	r2, [r9, #96]	; 0x60
   34ffc:	ldrd	r2, [sp, #16]
   35000:	ldr	r6, [sp, #24]
   35004:	adds	r2, r2, #1
   35008:	adc	r3, r3, #0
   3500c:	strd	r2, [sp, #16]
   35010:	b	33dec <__flatcc_fb_clear_parser@@Base+0xfa8>
   35014:	ldr	r3, [r3, #4]
   35018:	ldr	r1, [r7, #4]
   3501c:	ldr	r2, [pc, #-2880]	; 344e4 <__flatcc_fb_clear_parser@@Base+0x16a0>
   35020:	str	r0, [sp, #4]
   35024:	str	r0, [sp]
   35028:	mov	r0, fp
   3502c:	bl	2e72c <__flatcc_error_report@@Base>
   35030:	ldrh	r6, [r9, #72]	; 0x48
   35034:	b	338dc <__flatcc_fb_clear_parser@@Base+0xa98>
   35038:	cmp	r2, #6
   3503c:	bne	336d8 <__flatcc_fb_clear_parser@@Base+0x894>
   35040:	ldrh	r3, [r4, #16]
   35044:	cmp	r3, #6
   35048:	beq	336d8 <__flatcc_fb_clear_parser@@Base+0x894>
   3504c:	mov	r3, #0
   35050:	ldr	r1, [r4, #4]
   35054:	ldr	r2, [pc, #-2932]	; 344e8 <__flatcc_fb_clear_parser@@Base+0x16a4>
   35058:	str	r3, [sp, #4]
   3505c:	str	r3, [sp]
   35060:	mov	r0, fp
   35064:	bl	2e72c <__flatcc_error_report@@Base>
   35068:	b	336d8 <__flatcc_fb_clear_parser@@Base+0x894>
   3506c:	ldr	r3, [pc, #-2952]	; 344ec <__flatcc_fb_clear_parser@@Base+0x16a8>
   35070:	ldr	r2, [pc, #-2952]	; 344f0 <__flatcc_fb_clear_parser@@Base+0x16ac>
   35074:	ldr	r1, [pc, #-2932]	; 34508 <__flatcc_fb_clear_parser@@Base+0x16c4>
   35078:	ldr	r0, [pc, #-2956]	; 344f4 <__flatcc_fb_clear_parser@@Base+0x16b0>
   3507c:	bl	14038 <__assert_fail@plt>
   35080:	ldr	r0, [sp, #52]	; 0x34
   35084:	ldr	r1, [r3, #16]
   35088:	str	r3, [sp, #52]	; 0x34
   3508c:	bl	275b4 <ptr_set_find_item@@Base>
   35090:	ldr	r3, [sp, #52]	; 0x34
   35094:	cmp	r0, #0
   35098:	bne	34fd8 <__flatcc_fb_clear_parser@@Base+0x2194>
   3509c:	b	34d90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   350a0:	mov	r3, r9
   350a4:	ldr	r2, [pc, #-2996]	; 344f8 <__flatcc_fb_clear_parser@@Base+0x16b4>
   350a8:	ldr	r1, [r9, #48]	; 0x30
   350ac:	mov	r0, fp
   350b0:	bl	2f6ec <error_ref_sym@@Base>
   350b4:	mov	r3, #1
   350b8:	strh	r3, [r9, #24]
   350bc:	b	33628 <__flatcc_fb_clear_parser@@Base+0x7e4>
   350c0:	ldr	r3, [pc, #-3000]	; 34510 <__flatcc_fb_clear_parser@@Base+0x16cc>
   350c4:	ldr	r2, [pc, #-3024]	; 344fc <__flatcc_fb_clear_parser@@Base+0x16b8>
   350c8:	ldr	r1, [pc, #-3016]	; 34508 <__flatcc_fb_clear_parser@@Base+0x16c4>
   350cc:	ldr	r0, [pc, #-3028]	; 34500 <__flatcc_fb_clear_parser@@Base+0x16bc>
   350d0:	bl	14038 <__assert_fail@plt>
   350d4:	ldr	r3, [pc, #-3020]	; 34510 <__flatcc_fb_clear_parser@@Base+0x16cc>
   350d8:	ldr	r2, [pc, #-3036]	; 34504 <__flatcc_fb_clear_parser@@Base+0x16c0>
   350dc:	ldr	r1, [pc, #-3036]	; 34508 <__flatcc_fb_clear_parser@@Base+0x16c4>
   350e0:	ldr	r0, [pc, #-3036]	; 3450c <__flatcc_fb_clear_parser@@Base+0x16c8>
   350e4:	bl	14038 <__assert_fail@plt>
   350e8:	ldr	r3, [sp, #32]
   350ec:	cmp	r3, #0
   350f0:	beq	33c2c <__flatcc_fb_clear_parser@@Base+0xde8>
   350f4:	mov	r1, r3
   350f8:	ldrh	r3, [ip, #10]
   350fc:	cmp	r1, #1
   35100:	orr	r3, r3, #8
   35104:	strh	r3, [ip, #10]
   35108:	bne	33c0c <__flatcc_fb_clear_parser@@Base+0xdc8>
   3510c:	b	34708 <__flatcc_fb_clear_parser@@Base+0x18c4>
   35110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35114:	mov	sl, r1
   35118:	ldrh	r9, [r1, #8]
   3511c:	sub	sp, sp, #124	; 0x7c
   35120:	mov	r6, r0
   35124:	cmp	r9, #4
   35128:	beq	35750 <__flatcc_fb_clear_parser@@Base+0x290c>
   3512c:	cmp	r9, #3
   35130:	bne	35cac <__flatcc_fb_clear_parser@@Base+0x2e68>
   35134:	ldrh	r3, [r1, #48]	; 0x30
   35138:	cmp	r3, #0
   3513c:	beq	35bdc <__flatcc_fb_clear_parser@@Base+0x2d98>
   35140:	cmp	r3, #8
   35144:	bne	35b94 <__flatcc_fb_clear_parser@@Base+0x2d50>
   35148:	ldr	r3, [r1, #40]	; 0x28
   3514c:	ldr	r3, [r3, #16]
   35150:	add	r3, r3, #996	; 0x3e4
   35154:	add	r3, r3, #3
   35158:	cmp	r3, #27
   3515c:	bhi	35270 <__flatcc_fb_clear_parser@@Base+0x242c>
   35160:	ldr	r2, [pc, #2960]	; 35cf8 <__flatcc_fb_clear_parser@@Base+0x2eb4>
   35164:	mov	r1, #0
   35168:	add	r3, r2, r3, lsl #2
   3516c:	ldr	r5, [r3, #28]
   35170:	add	r2, r2, r5, lsl #2
   35174:	ldr	r2, [r2, #140]	; 0x8c
   35178:	uxth	r3, r2
   3517c:	str	r5, [sl, #40]	; 0x28
   35180:	str	r2, [sl, #112]	; 0x70
   35184:	str	r1, [sl, #116]	; 0x74
   35188:	strh	r3, [sl, #104]	; 0x68
   3518c:	ldr	r4, [sl, #28]
   35190:	add	r8, sp, #72	; 0x48
   35194:	mov	r0, r8
   35198:	mov	r2, #48	; 0x30
   3519c:	mov	r1, #0
   351a0:	bl	13f9c <memset@plt>
   351a4:	cmp	r4, #0
   351a8:	beq	35a14 <__flatcc_fb_clear_parser@@Base+0x2bd0>
   351ac:	ldr	fp, [pc, #2884]	; 35cf8 <__flatcc_fb_clear_parser@@Base+0x2eb4>
   351b0:	mov	r5, #100	; 0x64
   351b4:	mov	r7, #0
   351b8:	b	35218 <__flatcc_fb_clear_parser@@Base+0x23d4>
   351bc:	mov	r3, #1
   351c0:	ldr	r0, [r8, r2, lsl #2]
   351c4:	orr	r7, r7, r3, lsl r2
   351c8:	cmp	r0, #0
   351cc:	uxth	r7, r7
   351d0:	lsl	r3, r2, #2
   351d4:	beq	35284 <__flatcc_fb_clear_parser@@Base+0x2440>
   351d8:	mov	r3, #0
   351dc:	ldr	r1, [r4, #4]
   351e0:	ldr	r2, [pc, #2836]	; 35cfc <__flatcc_fb_clear_parser@@Base+0x2eb8>
   351e4:	str	r3, [sp, #4]
   351e8:	str	r3, [sp]
   351ec:	mov	r0, r6
   351f0:	bl	2e72c <__flatcc_error_report@@Base>
   351f4:	subs	r5, r5, #1
   351f8:	ldr	r4, [r4]
   351fc:	movne	r2, #1
   35200:	moveq	r2, #0
   35204:	cmp	r4, #0
   35208:	moveq	r2, #0
   3520c:	andne	r2, r2, #1
   35210:	cmp	r2, #0
   35214:	beq	352c4 <__flatcc_fb_clear_parser@@Base+0x2480>
   35218:	ldr	r3, [r4, #4]
   3521c:	ldr	r0, [r6, #412]	; 0x19c
   35220:	ldm	r3, {r1, r2}
   35224:	add	r0, r0, #16
   35228:	bl	3f318 <fb_name_table_find@@Base>
   3522c:	cmp	r0, #0
   35230:	beq	35628 <__flatcc_fb_clear_parser@@Base+0x27e4>
   35234:	ldr	r2, [r0, #24]
   35238:	cmp	r2, #0
   3523c:	beq	351f4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   35240:	mov	r3, #32
   35244:	asr	r3, r3, r2
   35248:	ands	r0, r3, #1
   3524c:	bne	351bc <__flatcc_fb_clear_parser@@Base+0x2378>
   35250:	ldr	r1, [r4, #4]
   35254:	mov	r3, r0
   35258:	str	r0, [sp, #4]
   3525c:	str	r0, [sp]
   35260:	ldr	r2, [pc, #2712]	; 35d00 <__flatcc_fb_clear_parser@@Base+0x2ebc>
   35264:	mov	r0, r6
   35268:	bl	2e72c <__flatcc_error_report@@Base>
   3526c:	b	351f4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   35270:	mov	r3, #0
   35274:	mov	r2, r3
   35278:	mov	r1, r3
   3527c:	mov	r5, r3
   35280:	b	3517c <__flatcc_fb_clear_parser@@Base+0x2338>
   35284:	add	r3, fp, r3
   35288:	str	r4, [r8, r2, lsl #2]
   3528c:	ldr	r2, [r3, #204]	; 0xcc
   35290:	cmp	r2, #0
   35294:	bne	356a0 <__flatcc_fb_clear_parser@@Base+0x285c>
   35298:	ldrh	r3, [r4, #16]
   3529c:	cmp	r3, #0
   352a0:	beq	351f4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   352a4:	ldr	r1, [r4, #4]
   352a8:	mov	r3, r2
   352ac:	str	r2, [sp, #4]
   352b0:	str	r2, [sp]
   352b4:	mov	r0, r6
   352b8:	ldr	r2, [pc, #2628]	; 35d04 <__flatcc_fb_clear_parser@@Base+0x2ec0>
   352bc:	bl	2e72c <__flatcc_error_report@@Base>
   352c0:	b	351f4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   352c4:	cmp	r4, #0
   352c8:	beq	358a4 <__flatcc_fb_clear_parser@@Base+0x2a60>
   352cc:	ldr	r1, [r4, #4]
   352d0:	mov	r3, r2
   352d4:	str	r2, [sp, #4]
   352d8:	str	r2, [sp]
   352dc:	mov	r0, r6
   352e0:	ldr	r2, [pc, #2592]	; 35d08 <__flatcc_fb_clear_parser@@Base+0x2ec4>
   352e4:	bl	2e72c <__flatcc_error_report@@Base>
   352e8:	ldr	r5, [sl, #40]	; 0x28
   352ec:	and	r3, r7, #32
   352f0:	cmp	r3, #0
   352f4:	strh	r7, [sl, #92]	; 0x5c
   352f8:	streq	r3, [sp, #12]
   352fc:	beq	35314 <__flatcc_fb_clear_parser@@Base+0x24d0>
   35300:	mov	r2, #0
   35304:	mov	r3, #0
   35308:	mov	r1, #1
   3530c:	str	r1, [sp, #12]
   35310:	strd	r2, [sp, #40]	; 0x28
   35314:	cmp	r5, #5
   35318:	bne	35648 <__flatcc_fb_clear_parser@@Base+0x2804>
   3531c:	add	fp, sp, #40	; 0x28
   35320:	mov	r2, #0
   35324:	mov	r3, #6
   35328:	strb	r2, [sp, #40]	; 0x28
   3532c:	strh	r3, [sp, #48]	; 0x30
   35330:	ldm	fp, {r0, r1, r2, r3}
   35334:	add	ip, sp, #56	; 0x38
   35338:	ldr	r5, [sl, #20]
   3533c:	cmp	r5, #0
   35340:	stm	ip, {r0, r1, r2, r3}
   35344:	addne	r3, r6, #352	; 0x160
   35348:	addne	r8, sl, #56	; 0x38
   3534c:	strne	r3, [sp, #16]
   35350:	movne	r7, #1
   35354:	bne	353ac <__flatcc_fb_clear_parser@@Base+0x2568>
   35358:	b	3548c <__flatcc_fb_clear_parser@@Base+0x2648>
   3535c:	ldr	r3, [r0, #4]
   35360:	add	r2, r6, #68	; 0x44
   35364:	cmp	r3, r2
   35368:	moveq	r3, #0
   3536c:	movne	r2, #0
   35370:	ldr	r1, [r5, #4]
   35374:	ldreq	r2, [pc, #2448]	; 35d0c <__flatcc_fb_clear_parser@@Base+0x2ec8>
   35378:	streq	r3, [sp, #4]
   3537c:	streq	r3, [sp]
   35380:	strne	r2, [sp, #4]
   35384:	strne	r2, [sp]
   35388:	mov	r0, r6
   3538c:	ldrne	r2, [pc, #2428]	; 35d10 <__flatcc_fb_clear_parser@@Base+0x2ecc>
   35390:	bl	2e72c <__flatcc_error_report@@Base>
   35394:	mov	r3, #1
   35398:	strh	r3, [r5, #24]
   3539c:	ldr	r5, [r5]
   353a0:	mov	r7, #0
   353a4:	cmp	r5, r7
   353a8:	beq	3548c <__flatcc_fb_clear_parser@@Base+0x2648>
   353ac:	mov	r2, #1
   353b0:	mov	r1, r5
   353b4:	mov	r0, r8
   353b8:	bl	27c64 <fb_symbol_table_insert_item@@Base>
   353bc:	cmp	r0, #0
   353c0:	bne	3535c <__flatcc_fb_clear_parser@@Base+0x2518>
   353c4:	ldrh	r3, [r5, #8]
   353c8:	cmp	r3, #5
   353cc:	bne	359f0 <__flatcc_fb_clear_parser@@Base+0x2bac>
   353d0:	ldr	r3, [r5, #64]	; 0x40
   353d4:	cmp	r3, #0
   353d8:	bne	35c50 <__flatcc_fb_clear_parser@@Base+0x2e0c>
   353dc:	cmp	r9, #4
   353e0:	beq	35434 <__flatcc_fb_clear_parser@@Base+0x25f0>
   353e4:	ldrh	r1, [r5, #56]	; 0x38
   353e8:	eor	r7, r7, #1
   353ec:	cmp	r1, #0
   353f0:	movne	r3, #0
   353f4:	andeq	r3, r7, #1
   353f8:	cmp	r3, #0
   353fc:	bne	35498 <__flatcc_fb_clear_parser@@Base+0x2654>
   35400:	ldr	r3, [sp, #12]
   35404:	cmp	r3, #0
   35408:	beq	35cc0 <__flatcc_fb_clear_parser@@Base+0x2e7c>
   3540c:	cmp	r1, #0
   35410:	beq	35590 <__flatcc_fb_clear_parser@@Base+0x274c>
   35414:	cmp	r1, #5
   35418:	bne	35c00 <__flatcc_fb_clear_parser@@Base+0x2dbc>
   3541c:	add	r3, r5, #48	; 0x30
   35420:	ldr	ip, [sl, #40]	; 0x28
   35424:	ldm	r3, {r0, r1, r2, r3}
   35428:	stm	fp, {r0, r1, r2, r3}
   3542c:	ldrd	r2, [sp, #40]	; 0x28
   35430:	b	35598 <__flatcc_fb_clear_parser@@Base+0x2754>
   35434:	ldr	r1, [r5, #4]
   35438:	add	r2, r6, #68	; 0x44
   3543c:	cmp	r1, r2
   35440:	beq	35828 <__flatcc_fb_clear_parser@@Base+0x29e4>
   35444:	ldrh	r2, [r5, #24]
   35448:	cmp	r2, #10
   3544c:	beq	35740 <__flatcc_fb_clear_parser@@Base+0x28fc>
   35450:	cmp	r2, #12
   35454:	beq	358b0 <__flatcc_fb_clear_parser@@Base+0x2a6c>
   35458:	cmp	r2, #1
   3545c:	beq	3539c <__flatcc_fb_clear_parser@@Base+0x2558>
   35460:	str	r3, [sp, #4]
   35464:	str	r3, [sp]
   35468:	ldr	r2, [pc, #2212]	; 35d14 <__flatcc_fb_clear_parser@@Base+0x2ed0>
   3546c:	mov	r0, r6
   35470:	bl	2e72c <__flatcc_error_report@@Base>
   35474:	mov	r3, #1
   35478:	strh	r3, [r5, #24]
   3547c:	ldr	r5, [r5]
   35480:	mov	r7, #0
   35484:	cmp	r5, r7
   35488:	bne	353ac <__flatcc_fb_clear_parser@@Base+0x2568>
   3548c:	mov	r0, #0
   35490:	add	sp, sp, #124	; 0x7c
   35494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35498:	ldrh	r3, [sp, #48]	; 0x30
   3549c:	cmp	r3, #5
   354a0:	beq	35784 <__flatcc_fb_clear_parser@@Base+0x2940>
   354a4:	cmp	r3, #4
   354a8:	beq	35830 <__flatcc_fb_clear_parser@@Base+0x29ec>
   354ac:	cmp	r3, #6
   354b0:	beq	35570 <__flatcc_fb_clear_parser@@Base+0x272c>
   354b4:	ldr	r3, [sp, #12]
   354b8:	cmp	r3, #0
   354bc:	bne	35590 <__flatcc_fb_clear_parser@@Base+0x274c>
   354c0:	add	r4, r5, #48	; 0x30
   354c4:	ldm	fp, {r0, r1, r2, r3}
   354c8:	stm	r4, {r0, r1, r2, r3}
   354cc:	cmp	r7, #0
   354d0:	beq	3550c <__flatcc_fb_clear_parser@@Base+0x26c8>
   354d4:	ldr	r3, [r6, #180]	; 0xb4
   354d8:	cmp	r3, #0
   354dc:	beq	3550c <__flatcc_fb_clear_parser@@Base+0x26c8>
   354e0:	ldrh	r3, [sp, #48]	; 0x30
   354e4:	cmp	r3, #5
   354e8:	beq	356d4 <__flatcc_fb_clear_parser@@Base+0x2890>
   354ec:	cmp	r3, #4
   354f0:	beq	35728 <__flatcc_fb_clear_parser@@Base+0x28e4>
   354f4:	cmp	r3, #6
   354f8:	bne	3550c <__flatcc_fb_clear_parser@@Base+0x26c8>
   354fc:	ldrb	r2, [sp, #40]	; 0x28
   35500:	ldrb	r3, [sp, #56]	; 0x38
   35504:	cmp	r2, r3
   35508:	bls	35c24 <__flatcc_fb_clear_parser@@Base+0x2de0>
   3550c:	ldm	fp, {r0, r1, r2, r3}
   35510:	add	ip, sp, #56	; 0x38
   35514:	stm	ip, {r0, r1, r2, r3}
   35518:	mov	r1, r4
   3551c:	mov	r2, #1
   35520:	add	r0, sl, #72	; 0x48
   35524:	bl	3fb4c <fb_value_set_insert_item@@Base>
   35528:	cmp	r0, #0
   3552c:	beq	35544 <__flatcc_fb_clear_parser@@Base+0x2700>
   35530:	cmp	r9, #4
   35534:	beq	35a68 <__flatcc_fb_clear_parser@@Base+0x2c24>
   35538:	ldrh	r3, [r5, #10]
   3553c:	orr	r3, r3, #4
   35540:	strh	r3, [r5, #10]
   35544:	ldr	r3, [r5, #64]	; 0x40
   35548:	cmp	r3, #0
   3554c:	beq	3539c <__flatcc_fb_clear_parser@@Base+0x2558>
   35550:	mov	r3, #0
   35554:	ldr	r1, [r5, #4]
   35558:	ldr	r2, [pc, #1976]	; 35d18 <__flatcc_fb_clear_parser@@Base+0x2ed4>
   3555c:	str	r3, [sp, #4]
   35560:	str	r3, [sp]
   35564:	mov	r0, r6
   35568:	bl	2e72c <__flatcc_error_report@@Base>
   3556c:	b	3539c <__flatcc_fb_clear_parser@@Base+0x2558>
   35570:	ldrb	r4, [sp, #40]	; 0x28
   35574:	cmp	r4, #1
   35578:	beq	35bb4 <__flatcc_fb_clear_parser@@Base+0x2d70>
   3557c:	ldr	r3, [sp, #12]
   35580:	cmp	r3, #0
   35584:	mov	r3, #1
   35588:	strb	r3, [sp, #40]	; 0x28
   3558c:	beq	354c0 <__flatcc_fb_clear_parser@@Base+0x267c>
   35590:	ldr	ip, [sl, #40]	; 0x28
   35594:	ldrd	r2, [sp, #40]	; 0x28
   35598:	ldr	r1, [pc, #1880]	; 35cf8 <__flatcc_fb_clear_parser@@Base+0x2eb4>
   3559c:	add	r1, r1, ip, lsl #2
   355a0:	ldr	r0, [r1, #140]	; 0x8c
   355a4:	mov	r1, #0
   355a8:	cmp	r3, r1
   355ac:	lsl	r0, r0, #3
   355b0:	cmpeq	r2, r0
   355b4:	bcs	35b70 <__flatcc_fb_clear_parser@@Base+0x2d2c>
   355b8:	mov	r1, #1
   355bc:	sub	r3, r2, #32
   355c0:	rsb	lr, r2, #32
   355c4:	lsl	r3, r1, r3
   355c8:	lsl	r0, r1, r2
   355cc:	orr	r3, r3, r1, lsr lr
   355d0:	add	r4, r5, #48	; 0x30
   355d4:	mov	r1, #5
   355d8:	mov	r2, ip
   355dc:	str	r3, [r5, #52]	; 0x34
   355e0:	str	r0, [r5, #48]	; 0x30
   355e4:	strh	r1, [r5, #56]	; 0x38
   355e8:	mov	r3, r4
   355ec:	mov	r1, r5
   355f0:	mov	r0, r6
   355f4:	bl	3795c <__flatcc_fb_coerce_scalar_type@@Base>
   355f8:	mov	r2, #0
   355fc:	cmp	r0, r2
   35600:	beq	354cc <__flatcc_fb_clear_parser@@Base+0x2688>
   35604:	ldr	r1, [r5, #4]
   35608:	mov	r3, r2
   3560c:	str	r2, [sp, #4]
   35610:	str	r2, [sp]
   35614:	mov	r0, r6
   35618:	ldr	r2, [pc, #1788]	; 35d1c <__flatcc_fb_clear_parser@@Base+0x2ed8>
   3561c:	bl	2e72c <__flatcc_error_report@@Base>
   35620:	mvn	r0, #0
   35624:	b	35490 <__flatcc_fb_clear_parser@@Base+0x264c>
   35628:	ldr	r1, [r4, #4]
   3562c:	mov	r3, r0
   35630:	str	r0, [sp, #4]
   35634:	str	r0, [sp]
   35638:	ldr	r2, [pc, #1760]	; 35d20 <__flatcc_fb_clear_parser@@Base+0x2edc>
   3563c:	mov	r0, r6
   35640:	bl	2e72c <__flatcc_error_report@@Base>
   35644:	b	351f4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   35648:	mov	r0, #0
   3564c:	mov	r1, #0
   35650:	add	fp, sp, #40	; 0x28
   35654:	strd	r0, [sp, #40]	; 0x28
   35658:	mov	ip, #4
   3565c:	mov	r2, r5
   35660:	mov	r3, fp
   35664:	mov	r1, sl
   35668:	mov	r0, r6
   3566c:	strh	ip, [sp, #48]	; 0x30
   35670:	bl	3795c <__flatcc_fb_coerce_scalar_type@@Base>
   35674:	cmp	r0, #0
   35678:	beq	35330 <__flatcc_fb_clear_parser@@Base+0x24ec>
   3567c:	mov	r3, #0
   35680:	mov	r0, r6
   35684:	str	r3, [sp, #4]
   35688:	str	r3, [sp]
   3568c:	mov	r1, r3
   35690:	ldr	r2, [pc, #1676]	; 35d24 <__flatcc_fb_clear_parser@@Base+0x2ee0>
   35694:	bl	2e72c <__flatcc_error_report@@Base>
   35698:	mvn	r0, #0
   3569c:	b	35490 <__flatcc_fb_clear_parser@@Base+0x264c>
   356a0:	cmp	r2, #2
   356a4:	bne	357b0 <__flatcc_fb_clear_parser@@Base+0x296c>
   356a8:	ldrh	r3, [r4, #16]
   356ac:	cmp	r3, #2
   356b0:	beq	351f4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   356b4:	ldr	r1, [r4, #4]
   356b8:	mov	r3, r0
   356bc:	str	r0, [sp, #4]
   356c0:	str	r0, [sp]
   356c4:	ldr	r2, [pc, #1628]	; 35d28 <__flatcc_fb_clear_parser@@Base+0x2ee4>
   356c8:	mov	r0, r6
   356cc:	bl	2e72c <__flatcc_error_report@@Base>
   356d0:	b	351f4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   356d4:	ldrd	r0, [sp, #40]	; 0x28
   356d8:	ldrd	r2, [sp, #56]	; 0x38
   356dc:	cmp	r1, r3
   356e0:	cmpeq	r0, r2
   356e4:	bhi	3550c <__flatcc_fb_clear_parser@@Base+0x26c8>
   356e8:	cmp	r9, #4
   356ec:	ldr	r1, [r5, #4]
   356f0:	bne	35700 <__flatcc_fb_clear_parser@@Base+0x28bc>
   356f4:	ldrd	r2, [sp, #56]	; 0x38
   356f8:	orrs	r3, r2, r3
   356fc:	beq	35c64 <__flatcc_fb_clear_parser@@Base+0x2e20>
   35700:	mov	r3, #0
   35704:	mov	r0, r6
   35708:	str	r3, [sp, #4]
   3570c:	str	r3, [sp]
   35710:	ldr	r2, [pc, #1556]	; 35d2c <__flatcc_fb_clear_parser@@Base+0x2ee8>
   35714:	bl	2e72c <__flatcc_error_report@@Base>
   35718:	mov	r3, #1
   3571c:	strh	r3, [r5, #56]	; 0x38
   35720:	mvn	r0, #0
   35724:	b	35490 <__flatcc_fb_clear_parser@@Base+0x264c>
   35728:	ldrd	r2, [sp, #40]	; 0x28
   3572c:	ldrd	r0, [sp, #56]	; 0x38
   35730:	cmp	r0, r2
   35734:	sbcs	r3, r1, r3
   35738:	blt	3550c <__flatcc_fb_clear_parser@@Base+0x26c8>
   3573c:	b	356e8 <__flatcc_fb_clear_parser@@Base+0x28a4>
   35740:	mov	r2, #0
   35744:	mov	r3, #0
   35748:	strd	r2, [r5, #88]	; 0x58
   3574c:	b	353e4 <__flatcc_fb_clear_parser@@Base+0x25a0>
   35750:	ldrh	r3, [r1, #48]	; 0x30
   35754:	cmp	r3, #0
   35758:	bne	35c8c <__flatcc_fb_clear_parser@@Base+0x2e48>
   3575c:	mov	r0, #1
   35760:	mov	r1, #0
   35764:	mov	r2, #8
   35768:	mov	r3, #1
   3576c:	mov	r5, r9
   35770:	str	r9, [sl, #40]	; 0x28
   35774:	strd	r0, [sl, #112]	; 0x70
   35778:	strh	r2, [sl, #48]	; 0x30
   3577c:	strh	r3, [sl, #104]	; 0x68
   35780:	b	3518c <__flatcc_fb_clear_parser@@Base+0x2348>
   35784:	ldr	ip, [sl, #40]	; 0x28
   35788:	ldrd	r2, [sp, #40]	; 0x28
   3578c:	cmp	ip, #6
   35790:	beq	35a20 <__flatcc_fb_clear_parser@@Base+0x2bdc>
   35794:	adds	r2, r2, #1
   35798:	ldr	r1, [sp, #12]
   3579c:	adc	r3, r3, #0
   357a0:	cmp	r1, #0
   357a4:	strd	r2, [sp, #40]	; 0x28
   357a8:	bne	35598 <__flatcc_fb_clear_parser@@Base+0x2754>
   357ac:	b	354c0 <__flatcc_fb_clear_parser@@Base+0x267c>
   357b0:	cmp	r2, #5
   357b4:	bne	3586c <__flatcc_fb_clear_parser@@Base+0x2a28>
   357b8:	ldrh	r3, [r4, #16]
   357bc:	cmp	r3, #5
   357c0:	beq	351f4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   357c4:	ldr	r1, [r4, #4]
   357c8:	mov	r3, r0
   357cc:	str	r0, [sp, #4]
   357d0:	str	r0, [sp]
   357d4:	ldr	r2, [pc, #1364]	; 35d30 <__flatcc_fb_clear_parser@@Base+0x2eec>
   357d8:	mov	r0, r6
   357dc:	bl	2e72c <__flatcc_error_report@@Base>
   357e0:	b	351f4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   357e4:	ldr	r1, [r3, #16]
   357e8:	ldr	r0, [sp, #32]
   357ec:	str	r3, [sp, #20]
   357f0:	bl	275b4 <ptr_set_find_item@@Base>
   357f4:	ldr	r3, [sp, #20]
   357f8:	cmp	r0, #0
   357fc:	beq	35940 <__flatcc_fb_clear_parser@@Base+0x2afc>
   35800:	ldr	r5, [sp, #24]
   35804:	ldr	r7, [sp, #36]	; 0x24
   35808:	ldrh	r2, [r3, #8]
   3580c:	cmp	r2, #1
   35810:	bhi	35b10 <__flatcc_fb_clear_parser@@Base+0x2ccc>
   35814:	mov	r0, #0
   35818:	mov	r1, #0
   3581c:	str	r3, [r5, #16]
   35820:	mov	r3, #14
   35824:	strd	r0, [r5, #88]	; 0x58
   35828:	strh	r3, [r5, #24]
   3582c:	b	353e4 <__flatcc_fb_clear_parser@@Base+0x25a0>
   35830:	ldr	ip, [sl, #40]	; 0x28
   35834:	ldrd	r2, [sp, #40]	; 0x28
   35838:	cmp	ip, #6
   3583c:	bne	35794 <__flatcc_fb_clear_parser@@Base+0x2950>
   35840:	mvn	r1, #-2147483648	; 0x80000000
   35844:	mvn	r0, #0
   35848:	cmp	r3, r1
   3584c:	cmpeq	r2, r0
   35850:	bne	35794 <__flatcc_fb_clear_parser@@Base+0x2950>
   35854:	mov	r3, #0
   35858:	ldr	r1, [r5, #4]
   3585c:	ldr	r2, [pc, #1232]	; 35d34 <__flatcc_fb_clear_parser@@Base+0x2ef0>
   35860:	str	r3, [sp, #4]
   35864:	str	r3, [sp]
   35868:	b	35a48 <__flatcc_fb_clear_parser@@Base+0x2c04>
   3586c:	cmp	r2, #4
   35870:	bne	35b3c <__flatcc_fb_clear_parser@@Base+0x2cf8>
   35874:	ldrh	r3, [r4, #16]
   35878:	sub	r3, r3, #4
   3587c:	cmp	r3, #1
   35880:	bls	351f4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   35884:	ldr	r1, [r4, #4]
   35888:	mov	r3, r0
   3588c:	str	r0, [sp, #4]
   35890:	str	r0, [sp]
   35894:	ldr	r2, [pc, #1180]	; 35d38 <__flatcc_fb_clear_parser@@Base+0x2ef4>
   35898:	mov	r0, r6
   3589c:	bl	2e72c <__flatcc_error_report@@Base>
   358a0:	b	351f4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   358a4:	and	r3, r7, #32
   358a8:	ldr	r5, [sl, #40]	; 0x28
   358ac:	b	352f0 <__flatcc_fb_clear_parser@@Base+0x24ac>
   358b0:	ldr	ip, [r5, #16]
   358b4:	ldr	r2, [sl, #12]
   358b8:	cmp	ip, #0
   358bc:	mov	r4, r2
   358c0:	beq	359c8 <__flatcc_fb_clear_parser@@Base+0x2b84>
   358c4:	mov	r0, ip
   358c8:	b	358d4 <__flatcc_fb_clear_parser@@Base+0x2a90>
   358cc:	mov	r3, r2
   358d0:	mov	r0, r1
   358d4:	ldr	r1, [r0]
   358d8:	add	r2, r3, #1
   358dc:	cmp	r1, #0
   358e0:	bne	358cc <__flatcc_fb_clear_parser@@Base+0x2a88>
   358e4:	mov	lr, r0
   358e8:	str	r0, [sp, #20]
   358ec:	adds	r0, r4, #0
   358f0:	movne	r0, #1
   358f4:	cmp	r2, #1
   358f8:	movne	r0, #0
   358fc:	cmp	r0, #0
   35900:	beq	35a94 <__flatcc_fb_clear_parser@@Base+0x2c50>
   35904:	str	r7, [sp, #36]	; 0x24
   35908:	mov	r7, lr
   3590c:	add	r3, r6, #524	; 0x20c
   35910:	str	r1, [sp, #28]
   35914:	str	r3, [sp, #32]
   35918:	str	r5, [sp, #24]
   3591c:	ldr	r3, [r7, #4]
   35920:	add	r0, r4, #4
   35924:	ldm	r3, {r1, r2}
   35928:	bl	27c8c <fb_symbol_table_find@@Base>
   3592c:	subs	r3, r0, #0
   35930:	beq	35940 <__flatcc_fb_clear_parser@@Base+0x2afc>
   35934:	ldrh	r2, [r3, #8]
   35938:	cmp	r2, #4
   3593c:	bls	357e4 <__flatcc_fb_clear_parser@@Base+0x29a0>
   35940:	ldr	r2, [r4]
   35944:	cmp	r2, #0
   35948:	beq	359c0 <__flatcc_fb_clear_parser@@Base+0x2b7c>
   3594c:	mov	r3, #0
   35950:	ldr	r2, [r2]
   35954:	add	r3, r3, #1
   35958:	cmp	r2, #0
   3595c:	bne	35950 <__flatcc_fb_clear_parser@@Base+0x2b0c>
   35960:	ldr	r2, [sp, #16]
   35964:	cmp	r2, #0
   35968:	beq	359c0 <__flatcc_fb_clear_parser@@Base+0x2b7c>
   3596c:	ldr	r0, [r6, #412]	; 0x19c
   35970:	rsb	r5, r3, #1
   35974:	b	3599c <__flatcc_fb_clear_parser@@Base+0x2b58>
   35978:	cmp	r0, #0
   3597c:	beq	35998 <__flatcc_fb_clear_parser@@Base+0x2b54>
   35980:	mov	r2, r5
   35984:	ldr	r1, [r4]
   35988:	bl	28a80 <fb_scope_table_find@@Base>
   3598c:	cmp	r0, #0
   35990:	bne	359e8 <__flatcc_fb_clear_parser@@Base+0x2ba4>
   35994:	ldr	r0, [r6, #412]	; 0x19c
   35998:	add	r5, r5, #1
   3599c:	cmp	r5, #0
   359a0:	bne	35978 <__flatcc_fb_clear_parser@@Base+0x2b34>
   359a4:	cmp	r0, #0
   359a8:	beq	359c0 <__flatcc_fb_clear_parser@@Base+0x2b7c>
   359ac:	mov	r1, r5
   359b0:	ldr	r2, [sp, #28]
   359b4:	bl	28a80 <fb_scope_table_find@@Base>
   359b8:	subs	r4, r0, #0
   359bc:	bne	3591c <__flatcc_fb_clear_parser@@Base+0x2ad8>
   359c0:	ldr	r5, [sp, #24]
   359c4:	ldr	ip, [r5, #16]
   359c8:	mov	r3, r5
   359cc:	mov	r1, ip
   359d0:	ldr	r2, [pc, #868]	; 35d3c <__flatcc_fb_clear_parser@@Base+0x2ef8>
   359d4:	mov	r0, r6
   359d8:	bl	2f6ec <error_ref_sym@@Base>
   359dc:	mov	r3, #1
   359e0:	strh	r3, [r5, #24]
   359e4:	b	3539c <__flatcc_fb_clear_parser@@Base+0x2558>
   359e8:	mov	r4, r0
   359ec:	b	3591c <__flatcc_fb_clear_parser@@Base+0x2ad8>
   359f0:	ldr	r1, [r5, #4]
   359f4:	mov	r3, r0
   359f8:	str	r0, [sp, #4]
   359fc:	str	r0, [sp]
   35a00:	ldr	r2, [pc, #824]	; 35d40 <__flatcc_fb_clear_parser@@Base+0x2efc>
   35a04:	mov	r0, r6
   35a08:	bl	2e72c <__flatcc_error_report@@Base>
   35a0c:	mvn	r0, #0
   35a10:	b	35490 <__flatcc_fb_clear_parser@@Base+0x264c>
   35a14:	strh	r4, [sl, #92]	; 0x5c
   35a18:	str	r4, [sp, #12]
   35a1c:	b	35314 <__flatcc_fb_clear_parser@@Base+0x24d0>
   35a20:	mvn	r1, #0
   35a24:	mvn	r0, #0
   35a28:	cmp	r3, r1
   35a2c:	cmpeq	r2, r0
   35a30:	bne	35794 <__flatcc_fb_clear_parser@@Base+0x2950>
   35a34:	ldr	r2, [pc, #776]	; 35d44 <__flatcc_fb_clear_parser@@Base+0x2f00>
   35a38:	mov	r3, #0
   35a3c:	ldr	r1, [r5, #4]
   35a40:	str	r3, [sp, #4]
   35a44:	str	r3, [sp]
   35a48:	mov	r0, r6
   35a4c:	bl	2e72c <__flatcc_error_report@@Base>
   35a50:	ldrd	r2, [sp, #40]	; 0x28
   35a54:	ldrh	r1, [r5, #56]	; 0x38
   35a58:	adds	r2, r2, #1
   35a5c:	adc	r3, r3, #0
   35a60:	strd	r2, [sp, #40]	; 0x28
   35a64:	b	35400 <__flatcc_fb_clear_parser@@Base+0x25bc>
   35a68:	mov	r3, #0
   35a6c:	ldr	r1, [r5, #4]
   35a70:	mov	r0, r6
   35a74:	str	r3, [sp, #4]
   35a78:	str	r3, [sp]
   35a7c:	ldr	r2, [pc, #708]	; 35d48 <__flatcc_fb_clear_parser@@Base+0x2f04>
   35a80:	bl	2e72c <__flatcc_error_report@@Base>
   35a84:	mov	r3, #1
   35a88:	strh	r3, [r5, #56]	; 0x38
   35a8c:	mvn	r0, #0
   35a90:	b	35490 <__flatcc_fb_clear_parser@@Base+0x264c>
   35a94:	cmp	r2, #1
   35a98:	ldr	r2, [sp, #16]
   35a9c:	moveq	r1, r0
   35aa0:	movne	r1, ip
   35aa4:	cmp	r2, #0
   35aa8:	beq	359c8 <__flatcc_fb_clear_parser@@Base+0x2b84>
   35aac:	ldr	r0, [r6, #412]	; 0x19c
   35ab0:	cmp	r0, #0
   35ab4:	beq	359c8 <__flatcc_fb_clear_parser@@Base+0x2b84>
   35ab8:	rsb	r2, r3, #0
   35abc:	bl	28a80 <fb_scope_table_find@@Base>
   35ac0:	cmp	r0, #0
   35ac4:	beq	359c4 <__flatcc_fb_clear_parser@@Base+0x2b80>
   35ac8:	ldr	r3, [sp, #20]
   35acc:	add	r0, r0, #4
   35ad0:	ldr	r3, [r3, #4]
   35ad4:	ldm	r3, {r1, r2}
   35ad8:	bl	27c8c <fb_symbol_table_find@@Base>
   35adc:	subs	r3, r0, #0
   35ae0:	beq	359c4 <__flatcc_fb_clear_parser@@Base+0x2b80>
   35ae4:	ldrh	r2, [r3, #8]
   35ae8:	cmp	r2, #4
   35aec:	bhi	359c4 <__flatcc_fb_clear_parser@@Base+0x2b80>
   35af0:	ldr	r1, [r3, #16]
   35af4:	add	r0, r6, #524	; 0x20c
   35af8:	str	r3, [sp, #20]
   35afc:	bl	275b4 <ptr_set_find_item@@Base>
   35b00:	ldr	r3, [sp, #20]
   35b04:	cmp	r0, #0
   35b08:	bne	35808 <__flatcc_fb_clear_parser@@Base+0x29c4>
   35b0c:	b	359c4 <__flatcc_fb_clear_parser@@Base+0x2b80>
   35b10:	mov	r2, #0
   35b14:	ldr	r3, [r3, #4]
   35b18:	ldr	r1, [r5, #4]
   35b1c:	mov	r0, r6
   35b20:	str	r2, [sp, #4]
   35b24:	str	r2, [sp]
   35b28:	ldr	r2, [pc, #540]	; 35d4c <__flatcc_fb_clear_parser@@Base+0x2f08>
   35b2c:	bl	2e72c <__flatcc_error_report@@Base>
   35b30:	mov	r3, #1
   35b34:	strh	r3, [r5, #24]
   35b38:	b	3539c <__flatcc_fb_clear_parser@@Base+0x2558>
   35b3c:	cmp	r2, #6
   35b40:	bne	351f4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   35b44:	ldrh	r3, [r4, #16]
   35b48:	cmp	r3, #6
   35b4c:	beq	351f4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   35b50:	mov	r3, #0
   35b54:	ldr	r1, [r4, #4]
   35b58:	ldr	r2, [pc, #496]	; 35d50 <__flatcc_fb_clear_parser@@Base+0x2f0c>
   35b5c:	str	r3, [sp, #4]
   35b60:	str	r3, [sp]
   35b64:	mov	r0, r6
   35b68:	bl	2e72c <__flatcc_error_report@@Base>
   35b6c:	b	351f4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   35b70:	mov	r3, #0
   35b74:	ldr	r1, [r5, #4]
   35b78:	mov	r0, r6
   35b7c:	str	r3, [sp, #4]
   35b80:	str	r3, [sp]
   35b84:	ldr	r2, [pc, #400]	; 35d1c <__flatcc_fb_clear_parser@@Base+0x2ed8>
   35b88:	bl	2e72c <__flatcc_error_report@@Base>
   35b8c:	mvn	r0, #0
   35b90:	b	35490 <__flatcc_fb_clear_parser@@Base+0x264c>
   35b94:	mov	r3, #0
   35b98:	ldr	r1, [r1, #4]
   35b9c:	ldr	r2, [pc, #432]	; 35d54 <__flatcc_fb_clear_parser@@Base+0x2f10>
   35ba0:	str	r3, [sp, #4]
   35ba4:	str	r3, [sp]
   35ba8:	bl	2e72c <__flatcc_error_report@@Base>
   35bac:	mvn	r0, #0
   35bb0:	b	35490 <__flatcc_fb_clear_parser@@Base+0x264c>
   35bb4:	mov	r3, #0
   35bb8:	ldr	r1, [r5, #4]
   35bbc:	ldr	r2, [pc, #404]	; 35d58 <__flatcc_fb_clear_parser@@Base+0x2f14>
   35bc0:	str	r3, [sp, #4]
   35bc4:	str	r3, [sp]
   35bc8:	mov	r0, r6
   35bcc:	bl	2e72c <__flatcc_error_report@@Base>
   35bd0:	ldrh	r1, [r5, #56]	; 0x38
   35bd4:	strb	r4, [sp, #40]	; 0x28
   35bd8:	b	35400 <__flatcc_fb_clear_parser@@Base+0x25bc>
   35bdc:	mov	r2, #1
   35be0:	ldr	r1, [r1, #4]
   35be4:	str	r3, [sp, #4]
   35be8:	str	r3, [sp]
   35bec:	strh	r2, [sl, #48]	; 0x30
   35bf0:	ldr	r2, [pc, #356]	; 35d5c <__flatcc_fb_clear_parser@@Base+0x2f18>
   35bf4:	bl	2e72c <__flatcc_error_report@@Base>
   35bf8:	mvn	r0, #0
   35bfc:	b	35490 <__flatcc_fb_clear_parser@@Base+0x264c>
   35c00:	mov	r3, #0
   35c04:	ldr	r1, [r5, #4]
   35c08:	mov	r0, r6
   35c0c:	str	r3, [sp, #4]
   35c10:	str	r3, [sp]
   35c14:	ldr	r2, [pc, #324]	; 35d60 <__flatcc_fb_clear_parser@@Base+0x2f1c>
   35c18:	bl	2e72c <__flatcc_error_report@@Base>
   35c1c:	mvn	r0, #0
   35c20:	b	35490 <__flatcc_fb_clear_parser@@Base+0x264c>
   35c24:	mov	r3, #0
   35c28:	ldr	r1, [r5, #4]
   35c2c:	mov	r0, r6
   35c30:	str	r3, [sp, #4]
   35c34:	str	r3, [sp]
   35c38:	ldr	r2, [pc, #292]	; 35d64 <__flatcc_fb_clear_parser@@Base+0x2f20>
   35c3c:	bl	2e72c <__flatcc_error_report@@Base>
   35c40:	mov	r3, #1
   35c44:	strh	r3, [r5, #56]	; 0x38
   35c48:	mvn	r0, #0
   35c4c:	b	35490 <__flatcc_fb_clear_parser@@Base+0x264c>
   35c50:	ldr	r3, [pc, #272]	; 35d68 <__flatcc_fb_clear_parser@@Base+0x2f24>
   35c54:	ldr	r2, [pc, #272]	; 35d6c <__flatcc_fb_clear_parser@@Base+0x2f28>
   35c58:	ldr	r1, [pc, #272]	; 35d70 <__flatcc_fb_clear_parser@@Base+0x2f2c>
   35c5c:	ldr	r0, [pc, #272]	; 35d74 <__flatcc_fb_clear_parser@@Base+0x2f30>
   35c60:	bl	14038 <__assert_fail@plt>
   35c64:	mov	r3, #0
   35c68:	mov	r0, r6
   35c6c:	str	r3, [sp, #4]
   35c70:	str	r3, [sp]
   35c74:	ldr	r2, [pc, #252]	; 35d78 <__flatcc_fb_clear_parser@@Base+0x2f34>
   35c78:	bl	2e72c <__flatcc_error_report@@Base>
   35c7c:	mov	r3, #1
   35c80:	strh	r3, [r5, #56]	; 0x38
   35c84:	mvn	r0, #0
   35c88:	b	35490 <__flatcc_fb_clear_parser@@Base+0x264c>
   35c8c:	mov	r3, #0
   35c90:	ldr	r1, [r1, #4]
   35c94:	ldr	r2, [pc, #224]	; 35d7c <__flatcc_fb_clear_parser@@Base+0x2f38>
   35c98:	str	r3, [sp, #4]
   35c9c:	str	r3, [sp]
   35ca0:	bl	2e72c <__flatcc_error_report@@Base>
   35ca4:	mvn	r0, #0
   35ca8:	b	35490 <__flatcc_fb_clear_parser@@Base+0x264c>
   35cac:	ldr	r3, [pc, #180]	; 35d68 <__flatcc_fb_clear_parser@@Base+0x2f24>
   35cb0:	ldr	r2, [pc, #200]	; 35d80 <__flatcc_fb_clear_parser@@Base+0x2f3c>
   35cb4:	ldr	r1, [pc, #180]	; 35d70 <__flatcc_fb_clear_parser@@Base+0x2f2c>
   35cb8:	ldr	r0, [pc, #196]	; 35d84 <__flatcc_fb_clear_parser@@Base+0x2f40>
   35cbc:	bl	14038 <__assert_fail@plt>
   35cc0:	cmp	r1, #0
   35cc4:	add	r4, r5, #48	; 0x30
   35cc8:	beq	354c4 <__flatcc_fb_clear_parser@@Base+0x2680>
   35ccc:	ldm	r4, {r0, r1, r2, r3}
   35cd0:	stm	fp, {r0, r1, r2, r3}
   35cd4:	mov	r3, fp
   35cd8:	ldr	r2, [sl, #40]	; 0x28
   35cdc:	mov	r1, r5
   35ce0:	mov	r0, r6
   35ce4:	bl	3795c <__flatcc_fb_coerce_scalar_type@@Base>
   35ce8:	cmp	r0, #0
   35cec:	beq	354c4 <__flatcc_fb_clear_parser@@Base+0x2680>
   35cf0:	mvn	r0, #0
   35cf4:	b	35490 <__flatcc_fb_clear_parser@@Base+0x264c>
   35cf8:	andeq	r9, r5, r4, asr r7
   35cfc:	andeq	r9, r5, r4, asr sp
   35d00:	andeq	r9, r5, r4, lsr #26
   35d04:	andeq	r9, r5, ip, ror sp
   35d08:	andeq	r9, r5, r4, asr #28
   35d0c:	andeq	sl, r5, r4, asr #12
   35d10:	andeq	sl, r5, r4, ror #12
   35d14:	andeq	sl, r5, r4, asr #13
   35d18:	andeq	sl, r5, r8, asr r9
   35d1c:	andeq	sl, r5, ip, lsr #16
   35d20:	andeq	r9, r5, r4, lsl #26
   35d24:	andeq	sl, r5, r4, lsl #12
   35d28:	andeq	r9, r5, r4, lsr #27
   35d2c:	andeq	sl, r5, r4, lsr #17
   35d30:	andeq	r9, r5, r8, asr #27
   35d34:	andeq	sl, r5, r4, lsr #15
   35d38:	strdeq	r9, [r5], -r4
   35d3c:	andeq	sl, r5, ip, lsl #14
   35d40:	andeq	sl, r5, r0, lsl #13
   35d44:	andeq	sl, r5, r4, lsl #15
   35d48:	andeq	sl, r5, ip, lsl #18
   35d4c:	andeq	sl, r5, ip, lsr r7
   35d50:	andeq	r9, r5, r8, lsl lr
   35d54:	muleq	r5, r0, r5
   35d58:	andeq	sl, r5, r0, asr #15
   35d5c:	andeq	sl, r5, r8, ror r5
   35d60:	strdeq	sl, [r5], -r0
   35d64:	andeq	sl, r5, ip, asr #17
   35d68:	andeq	r9, r5, r4, ror #16
   35d6c:	andeq	r0, r0, r3, lsr #10
   35d70:	andeq	r9, r5, r8, ror #17
   35d74:	andeq	sl, r5, ip, lsr #13
   35d78:	andeq	sl, r5, r0, ror #16
   35d7c:	andeq	sl, r5, r4, asr #11
   35d80:	andeq	r0, r0, sp, asr #9
   35d84:	andeq	sl, r5, r8, asr r5

00035d88 <__flatcc_fb_build_schema@@Base>:
   35d88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35d8c:	add	r3, r0, #352	; 0x160
   35d90:	sub	sp, sp, #124	; 0x7c
   35d94:	add	r2, r0, #524	; 0x20c
   35d98:	mov	fp, r0
   35d9c:	mov	r1, r3
   35da0:	mov	r0, r2
   35da4:	str	r3, [sp, #12]
   35da8:	str	r2, [sp, #16]
   35dac:	bl	275b4 <ptr_set_find_item@@Base>
   35db0:	cmp	r0, #0
   35db4:	beq	37834 <__flatcc_fb_build_schema@@Base+0x1aac>
   35db8:	ldr	r5, [fp, #392]	; 0x188
   35dbc:	cmp	r5, #0
   35dc0:	beq	35edc <__flatcc_fb_build_schema@@Base+0x154>
   35dc4:	ldr	r9, [pc, #4064]	; 36dac <__flatcc_fb_build_schema@@Base+0x1024>
   35dc8:	ldr	r4, [pc, #4064]	; 36db0 <__flatcc_fb_build_schema@@Base+0x1028>
   35dcc:	ldr	r6, [pc, #4064]	; 36db4 <__flatcc_fb_build_schema@@Base+0x102c>
   35dd0:	mov	r8, #1
   35dd4:	mov	r7, #0
   35dd8:	ldr	sl, [sp, #12]
   35ddc:	b	35dec <__flatcc_fb_build_schema@@Base+0x64>
   35de0:	ldr	r5, [r5]
   35de4:	cmp	r5, #0
   35de8:	beq	35edc <__flatcc_fb_build_schema@@Base+0x154>
   35dec:	ldrh	r3, [r5, #8]
   35df0:	cmp	r3, #4
   35df4:	bhi	35de0 <__flatcc_fb_build_schema@@Base+0x58>
   35df8:	ldr	r0, [r5, #12]
   35dfc:	cmp	r0, #0
   35e00:	beq	36be8 <__flatcc_fb_build_schema@@Base+0xe60>
   35e04:	ldr	ip, [r0]
   35e08:	cmp	ip, #0
   35e0c:	beq	36c04 <__flatcc_fb_build_schema@@Base+0xe7c>
   35e10:	ldr	r3, [pc, #3996]	; 36db4 <__flatcc_fb_build_schema@@Base+0x102c>
   35e14:	ldr	r2, [ip, #4]
   35e18:	ldr	r1, [r2, #4]
   35e1c:	ldr	r2, [r2]
   35e20:	cmp	r1, #0
   35e24:	beq	35e40 <__flatcc_fb_build_schema@@Base+0xb8>
   35e28:	add	r1, r2, r1
   35e2c:	ldrb	lr, [r2], #1
   35e30:	eor	r3, r3, lr
   35e34:	cmp	r2, r1
   35e38:	mul	r3, r4, r3
   35e3c:	bne	35e2c <__flatcc_fb_build_schema@@Base+0xa4>
   35e40:	ldr	ip, [ip]
   35e44:	eor	r3, r3, #46	; 0x2e
   35e48:	cmp	ip, #0
   35e4c:	mul	r3, r4, r3
   35e50:	bne	35e14 <__flatcc_fb_build_schema@@Base+0x8c>
   35e54:	ldr	r1, [r5, #4]
   35e58:	ldm	r1, {r1, r2}
   35e5c:	cmp	r2, #0
   35e60:	sub	r2, r2, #1
   35e64:	beq	36c24 <__flatcc_fb_build_schema@@Base+0xe9c>
   35e68:	add	ip, r1, r2
   35e6c:	sub	r1, r1, #1
   35e70:	ldrb	r2, [r1, #1]!
   35e74:	eor	r3, r3, r2
   35e78:	cmp	r1, ip
   35e7c:	mul	r3, r4, r3
   35e80:	bne	35e70 <__flatcc_fb_build_schema@@Base+0xe8>
   35e84:	cmp	r3, #0
   35e88:	moveq	r3, r6
   35e8c:	cmp	r0, #0
   35e90:	str	r3, [r5, #88]	; 0x58
   35e94:	str	sl, [r5, #16]
   35e98:	beq	35de0 <__flatcc_fb_build_schema@@Base+0x58>
   35e9c:	add	r0, r0, #4
   35ea0:	mov	r2, r8
   35ea4:	mov	r1, r5
   35ea8:	bl	27c64 <fb_symbol_table_insert_item@@Base>
   35eac:	cmp	r0, #0
   35eb0:	beq	35de0 <__flatcc_fb_build_schema@@Base+0x58>
   35eb4:	ldr	r3, [r0, #4]
   35eb8:	ldr	r1, [r5, #4]
   35ebc:	mov	r2, r9
   35ec0:	str	r7, [sp, #4]
   35ec4:	str	r7, [sp]
   35ec8:	mov	r0, fp
   35ecc:	bl	2e72c <__flatcc_error_report@@Base>
   35ed0:	ldr	r5, [r5]
   35ed4:	cmp	r5, #0
   35ed8:	bne	35dec <__flatcc_fb_build_schema@@Base+0x64>
   35edc:	ldr	r4, [fp, #356]	; 0x164
   35ee0:	cmp	r4, #0
   35ee4:	beq	35f40 <__flatcc_fb_build_schema@@Base+0x1b8>
   35ee8:	ldr	r7, [pc, #3784]	; 36db8 <__flatcc_fb_build_schema@@Base+0x1030>
   35eec:	mov	r5, #1
   35ef0:	mov	r6, #0
   35ef4:	ldr	r0, [fp, #412]	; 0x19c
   35ef8:	mov	r2, r5
   35efc:	add	r0, r0, #16
   35f00:	mov	r1, r4
   35f04:	bl	3f2f4 <fb_name_table_insert_item@@Base>
   35f08:	cmp	r0, #0
   35f0c:	beq	35f34 <__flatcc_fb_build_schema@@Base+0x1ac>
   35f10:	ldr	r2, [r4, #12]
   35f14:	mov	r3, r6
   35f18:	str	r2, [sp, #4]
   35f1c:	ldr	r1, [r4, #8]
   35f20:	mov	r2, r7
   35f24:	str	r1, [sp]
   35f28:	mov	r0, fp
   35f2c:	mov	r1, #0
   35f30:	bl	2e72c <__flatcc_error_report@@Base>
   35f34:	ldr	r4, [r4]
   35f38:	cmp	r4, #0
   35f3c:	bne	35ef4 <__flatcc_fb_build_schema@@Base+0x16c>
   35f40:	mov	sl, #0
   35f44:	mov	r8, sl
   35f48:	ldr	r5, [pc, #3692]	; 36dbc <__flatcc_fb_build_schema@@Base+0x1034>
   35f4c:	mov	r6, #1
   35f50:	mov	r9, #65536	; 0x10000
   35f54:	mov	r7, #2
   35f58:	b	35fa8 <__flatcc_fb_build_schema@@Base+0x220>
   35f5c:	ldr	r2, [r5, #4]!
   35f60:	str	r3, [fp, #52]	; 0x34
   35f64:	mov	r0, r2
   35f68:	str	sl, [r4, #24]
   35f6c:	str	r2, [r4, #8]
   35f70:	bl	13f78 <strlen@plt>
   35f74:	strh	r7, [r4, #16]
   35f78:	str	r8, [r4]
   35f7c:	mov	r1, r4
   35f80:	mov	r2, r6
   35f84:	str	r0, [r4, #12]
   35f88:	ldr	r0, [fp, #412]	; 0x19c
   35f8c:	add	r0, r0, #16
   35f90:	bl	3f2f4 <fb_name_table_insert_item@@Base>
   35f94:	cmp	r0, #0
   35f98:	strne	sl, [r0, #24]
   35f9c:	add	sl, sl, #1
   35fa0:	cmp	sl, #12
   35fa4:	beq	35ff0 <__flatcc_fb_build_schema@@Base+0x268>
   35fa8:	ldr	r4, [fp, #52]	; 0x34
   35fac:	ldr	r2, [fp, #44]	; 0x2c
   35fb0:	add	r3, r4, #32
   35fb4:	cmp	r3, r2
   35fb8:	bls	35f5c <__flatcc_fb_build_schema@@Base+0x1d4>
   35fbc:	mov	r1, r6
   35fc0:	mov	r0, r9
   35fc4:	bl	13ea0 <calloc@plt>
   35fc8:	cmp	r0, #0
   35fcc:	beq	37848 <__flatcc_fb_build_schema@@Base+0x1ac0>
   35fd0:	ldr	r2, [fp, #48]	; 0x30
   35fd4:	add	r4, r0, #16
   35fd8:	str	r2, [r0]
   35fdc:	add	r2, r0, #65536	; 0x10000
   35fe0:	add	r3, r0, #48	; 0x30
   35fe4:	str	r0, [fp, #48]	; 0x30
   35fe8:	str	r2, [fp, #44]	; 0x2c
   35fec:	b	35f5c <__flatcc_fb_build_schema@@Base+0x1d4>
   35ff0:	ldr	r3, [fp, #184]	; 0xb8
   35ff4:	cmp	r3, #0
   35ff8:	bne	36048 <__flatcc_fb_build_schema@@Base+0x2c0>
   35ffc:	ldr	r4, [fp, #392]	; 0x188
   36000:	cmp	r4, #0
   36004:	beq	36d18 <__flatcc_fb_build_schema@@Base+0xf90>
   36008:	mov	r5, #1
   3600c:	b	3601c <__flatcc_fb_build_schema@@Base+0x294>
   36010:	ldr	r4, [r4]
   36014:	cmp	r4, #0
   36018:	beq	36048 <__flatcc_fb_build_schema@@Base+0x2c0>
   3601c:	ldrh	r3, [r4, #8]
   36020:	cmp	r3, #3
   36024:	bne	36010 <__flatcc_fb_build_schema@@Base+0x288>
   36028:	mov	r1, r4
   3602c:	mov	r0, fp
   36030:	bl	35110 <__flatcc_fb_clear_parser@@Base+0x22cc>
   36034:	cmp	r0, #0
   36038:	strhne	r5, [r4, #48]	; 0x30
   3603c:	ldr	r4, [r4]
   36040:	cmp	r4, #0
   36044:	bne	3601c <__flatcc_fb_build_schema@@Base+0x294>
   36048:	ldr	sl, [fp, #392]	; 0x188
   3604c:	cmp	sl, #0
   36050:	beq	36d18 <__flatcc_fb_build_schema@@Base+0xf90>
   36054:	ldrh	r3, [sl, #8]
   36058:	cmp	r3, #4
   3605c:	ldrls	pc, [pc, r3, lsl #2]
   36060:	b	369fc <__flatcc_fb_build_schema@@Base+0xc74>
   36064:	andeq	r6, r3, r0, lsr #1
   36068:	andeq	r6, r3, r0, asr r4
   3606c:	andeq	r6, r3, r0, lsr #1
   36070:	andeq	r6, r3, r8, ror r0
   36074:	andeq	r6, r3, r4, lsl #1
   36078:	ldr	r3, [fp, #184]	; 0xb8
   3607c:	cmp	r3, #0
   36080:	beq	360a0 <__flatcc_fb_build_schema@@Base+0x318>
   36084:	mov	r1, sl
   36088:	mov	r0, fp
   3608c:	bl	35110 <__flatcc_fb_clear_parser@@Base+0x22cc>
   36090:	cmp	r0, #0
   36094:	beq	360a0 <__flatcc_fb_build_schema@@Base+0x318>
   36098:	mov	r3, #1
   3609c:	strh	r3, [sl, #48]	; 0x30
   360a0:	ldr	sl, [sl]
   360a4:	cmp	sl, #0
   360a8:	bne	36054 <__flatcc_fb_build_schema@@Base+0x2cc>
   360ac:	ldr	r4, [fp, #392]	; 0x188
   360b0:	cmp	r4, #0
   360b4:	beq	37790 <__flatcc_fb_build_schema@@Base+0x1a08>
   360b8:	ldrh	r5, [r4, #8]
   360bc:	cmp	r5, #1
   360c0:	bne	360e4 <__flatcc_fb_build_schema@@Base+0x35c>
   360c4:	ldrh	r3, [r4, #48]	; 0x30
   360c8:	cmp	r3, #1
   360cc:	beq	360e4 <__flatcc_fb_build_schema@@Base+0x35c>
   360d0:	mov	r1, r4
   360d4:	mov	r0, fp
   360d8:	bl	32f5c <__flatcc_fb_clear_parser@@Base+0x118>
   360dc:	cmp	r0, #0
   360e0:	strhne	r5, [r4, #48]	; 0x30
   360e4:	ldr	r4, [r4]
   360e8:	cmp	r4, #0
   360ec:	bne	360b8 <__flatcc_fb_build_schema@@Base+0x330>
   360f0:	ldr	r9, [fp, #392]	; 0x188
   360f4:	cmp	r9, #0
   360f8:	beq	37790 <__flatcc_fb_build_schema@@Base+0x1a08>
   360fc:	mov	sl, r9
   36100:	ldrh	r3, [sl, #8]
   36104:	cmp	r3, #0
   36108:	beq	36f18 <__flatcc_fb_build_schema@@Base+0x1190>
   3610c:	cmp	r3, #2
   36110:	bne	362d8 <__flatcc_fb_build_schema@@Base+0x550>
   36114:	ldrh	r3, [sl, #48]	; 0x30
   36118:	cmp	r3, #1
   3611c:	str	r3, [sp, #24]
   36120:	beq	362d8 <__flatcc_fb_build_schema@@Base+0x550>
   36124:	cmp	r3, #0
   36128:	bne	37948 <__flatcc_fb_build_schema@@Base+0x1bc0>
   3612c:	ldr	r3, [sl, #28]
   36130:	cmp	r3, #0
   36134:	beq	36158 <__flatcc_fb_build_schema@@Base+0x3d0>
   36138:	ldr	r2, [sp, #24]
   3613c:	ldr	r1, [sl, #4]
   36140:	mov	r3, r2
   36144:	str	r2, [sp, #4]
   36148:	str	r2, [sp]
   3614c:	mov	r0, fp
   36150:	ldr	r2, [pc, #3176]	; 36dc0 <__flatcc_fb_build_schema@@Base+0x1038>
   36154:	bl	2e72c <__flatcc_error_report@@Base>
   36158:	ldr	r4, [sl, #20]
   3615c:	cmp	r4, #0
   36160:	beq	362d8 <__flatcc_fb_build_schema@@Base+0x550>
   36164:	add	r3, sl, #56	; 0x38
   36168:	ldr	r8, [sp, #12]
   3616c:	str	sl, [sp, #20]
   36170:	mov	r9, r3
   36174:	b	361a4 <__flatcc_fb_build_schema@@Base+0x41c>
   36178:	mov	r2, #0
   3617c:	ldr	r3, [r0, #4]
   36180:	ldr	r1, [r4, #4]
   36184:	mov	r0, fp
   36188:	str	r2, [sp, #4]
   3618c:	str	r2, [sp]
   36190:	ldr	r2, [pc, #3116]	; 36dc4 <__flatcc_fb_build_schema@@Base+0x103c>
   36194:	bl	2e72c <__flatcc_error_report@@Base>
   36198:	ldr	r4, [r4]
   3619c:	cmp	r4, #0
   361a0:	beq	362d4 <__flatcc_fb_build_schema@@Base+0x54c>
   361a4:	mov	r2, #1
   361a8:	mov	r1, r4
   361ac:	mov	r0, r9
   361b0:	bl	27c64 <fb_symbol_table_insert_item@@Base>
   361b4:	cmp	r0, #0
   361b8:	bne	36178 <__flatcc_fb_build_schema@@Base+0x3f0>
   361bc:	ldrh	r3, [r4, #8]
   361c0:	cmp	r3, #5
   361c4:	bne	37540 <__flatcc_fb_build_schema@@Base+0x17b8>
   361c8:	ldrh	r3, [r4, #56]	; 0x38
   361cc:	cmp	r3, #0
   361d0:	bne	37118 <__flatcc_fb_build_schema@@Base+0x1390>
   361d4:	ldrh	r3, [r4, #24]
   361d8:	cmp	r3, #1
   361dc:	beq	36198 <__flatcc_fb_build_schema@@Base+0x410>
   361e0:	cmp	r3, #12
   361e4:	beq	36204 <__flatcc_fb_build_schema@@Base+0x47c>
   361e8:	mov	r3, #0
   361ec:	ldr	r1, [r4, #4]
   361f0:	ldr	r2, [pc, #3024]	; 36dc8 <__flatcc_fb_build_schema@@Base+0x1040>
   361f4:	str	r3, [sp, #4]
   361f8:	str	r3, [sp]
   361fc:	mov	r0, fp
   36200:	bl	2e72c <__flatcc_error_report@@Base>
   36204:	ldr	r1, [r4, #32]
   36208:	ldr	r3, [sp, #20]
   3620c:	cmp	r1, #0
   36210:	ldr	r5, [r3, #12]
   36214:	beq	362b0 <__flatcc_fb_build_schema@@Base+0x528>
   36218:	mov	r7, r1
   3621c:	mov	r2, #0
   36220:	b	3622c <__flatcc_fb_build_schema@@Base+0x4a4>
   36224:	mov	r2, r3
   36228:	mov	r7, r6
   3622c:	ldr	r6, [r7]
   36230:	add	r3, r2, #1
   36234:	cmp	r6, #0
   36238:	bne	36224 <__flatcc_fb_build_schema@@Base+0x49c>
   3623c:	adds	r0, r5, #0
   36240:	movne	r0, #1
   36244:	cmp	r3, #1
   36248:	movne	r0, #0
   3624c:	cmp	r0, #0
   36250:	bne	36c3c <__flatcc_fb_build_schema@@Base+0xeb4>
   36254:	cmp	r3, #1
   36258:	moveq	r6, r0
   3625c:	movne	r6, r1
   36260:	cmp	r8, #0
   36264:	beq	362b0 <__flatcc_fb_build_schema@@Base+0x528>
   36268:	ldr	r0, [fp, #412]	; 0x19c
   3626c:	cmp	r0, #0
   36270:	beq	362b0 <__flatcc_fb_build_schema@@Base+0x528>
   36274:	rsb	r2, r2, #0
   36278:	mov	r1, r6
   3627c:	bl	28a80 <fb_scope_table_find@@Base>
   36280:	cmp	r0, #0
   36284:	beq	362ac <__flatcc_fb_build_schema@@Base+0x524>
   36288:	ldr	r3, [r7, #4]
   3628c:	add	r0, r0, #4
   36290:	ldm	r3, {r1, r2}
   36294:	bl	27c8c <fb_symbol_table_find@@Base>
   36298:	subs	sl, r0, #0
   3629c:	beq	362ac <__flatcc_fb_build_schema@@Base+0x524>
   362a0:	ldrh	r2, [sl, #8]
   362a4:	cmp	r2, #4
   362a8:	bls	37590 <__flatcc_fb_build_schema@@Base+0x1808>
   362ac:	ldr	r1, [r4, #32]
   362b0:	mov	r3, r4
   362b4:	ldr	r2, [pc, #2832]	; 36dcc <__flatcc_fb_build_schema@@Base+0x1044>
   362b8:	mov	r0, fp
   362bc:	bl	2f6ec <error_ref_sym@@Base>
   362c0:	mov	r3, #1
   362c4:	strh	r3, [r4, #24]
   362c8:	ldr	r4, [r4]
   362cc:	cmp	r4, #0
   362d0:	bne	361a4 <__flatcc_fb_build_schema@@Base+0x41c>
   362d4:	ldr	sl, [sp, #20]
   362d8:	ldr	sl, [sl]
   362dc:	cmp	sl, #0
   362e0:	bne	36100 <__flatcc_fb_build_schema@@Base+0x378>
   362e4:	ldr	r3, [fp, #396]	; 0x18c
   362e8:	ldr	sl, [fp, #392]	; 0x188
   362ec:	cmp	r3, #0
   362f0:	bne	36d28 <__flatcc_fb_build_schema@@Base+0xfa0>
   362f4:	cmp	sl, #0
   362f8:	str	r3, [fp, #396]	; 0x18c
   362fc:	beq	36368 <__flatcc_fb_build_schema@@Base+0x5e0>
   36300:	ldr	r5, [pc, #2760]	; 36dd0 <__flatcc_fb_build_schema@@Base+0x1048>
   36304:	mov	r7, #36	; 0x24
   36308:	mov	r4, #0
   3630c:	add	r8, sp, #68	; 0x44
   36310:	ldrh	r2, [sl, #8]
   36314:	cmp	r2, #0
   36318:	bne	3635c <__flatcc_fb_build_schema@@Base+0x5d4>
   3631c:	ldrh	r3, [sl, #92]	; 0x5c
   36320:	tst	r3, #8
   36324:	beq	37138 <__flatcc_fb_build_schema@@Base+0x13b0>
   36328:	ldr	r3, [sl, #20]
   3632c:	str	r2, [sp, #72]	; 0x48
   36330:	cmp	r3, #0
   36334:	add	r2, sp, #72	; 0x48
   36338:	beq	36350 <__flatcc_fb_build_schema@@Base+0x5c8>
   3633c:	str	r3, [r2]
   36340:	add	r2, r3, #108	; 0x6c
   36344:	ldr	r3, [r3]
   36348:	cmp	r3, #0
   3634c:	bne	3633c <__flatcc_fb_build_schema@@Base+0x5b4>
   36350:	str	r4, [r2]
   36354:	ldr	r3, [sp, #72]	; 0x48
   36358:	str	r3, [sl, #24]
   3635c:	ldr	sl, [sl]
   36360:	cmp	sl, #0
   36364:	bne	36310 <__flatcc_fb_build_schema@@Base+0x588>
   36368:	ldr	r3, [fp, #400]	; 0x190
   3636c:	cmp	r3, #0
   36370:	beq	376d4 <__flatcc_fb_build_schema@@Base+0x194c>
   36374:	ldr	r5, [fp, #408]	; 0x198
   36378:	mov	r7, r3
   3637c:	mov	r2, #0
   36380:	b	3638c <__flatcc_fb_build_schema@@Base+0x604>
   36384:	mov	r2, r1
   36388:	mov	r7, r6
   3638c:	ldr	r6, [r7]
   36390:	add	r1, r2, #1
   36394:	cmp	r6, #0
   36398:	bne	36384 <__flatcc_fb_build_schema@@Base+0x5fc>
   3639c:	adds	r0, r5, #0
   363a0:	movne	r0, #1
   363a4:	cmp	r1, #1
   363a8:	movne	r0, #0
   363ac:	cmp	r0, #0
   363b0:	bne	36d50 <__flatcc_fb_build_schema@@Base+0xfc8>
   363b4:	cmp	r1, #1
   363b8:	ldr	r1, [sp, #12]
   363bc:	moveq	r6, r0
   363c0:	movne	r6, r3
   363c4:	cmp	r1, #0
   363c8:	beq	36414 <__flatcc_fb_build_schema@@Base+0x68c>
   363cc:	ldr	r0, [fp, #412]	; 0x19c
   363d0:	cmp	r0, #0
   363d4:	beq	36414 <__flatcc_fb_build_schema@@Base+0x68c>
   363d8:	rsb	r2, r2, #0
   363dc:	mov	r1, r6
   363e0:	bl	28a80 <fb_scope_table_find@@Base>
   363e4:	cmp	r0, #0
   363e8:	beq	36410 <__flatcc_fb_build_schema@@Base+0x688>
   363ec:	ldr	r3, [r7, #4]
   363f0:	add	r0, r0, #4
   363f4:	ldm	r3, {r1, r2}
   363f8:	bl	27c8c <fb_symbol_table_find@@Base>
   363fc:	subs	r4, r0, #0
   36400:	beq	36410 <__flatcc_fb_build_schema@@Base+0x688>
   36404:	ldrh	r3, [r4, #8]
   36408:	cmp	r3, #4
   3640c:	bls	37734 <__flatcc_fb_build_schema@@Base+0x19ac>
   36410:	ldr	r3, [fp, #400]	; 0x190
   36414:	mov	r2, #0
   36418:	str	r2, [fp, #404]	; 0x194
   3641c:	mov	r1, r3
   36420:	ldr	r2, [pc, #2476]	; 36dd4 <__flatcc_fb_build_schema@@Base+0x104c>
   36424:	mov	r3, #0
   36428:	mov	r0, fp
   3642c:	bl	2f6ec <error_ref_sym@@Base>
   36430:	mov	r3, #0
   36434:	str	r3, [fp, #400]	; 0x190
   36438:	ldr	r0, [fp, #108]	; 0x6c
   3643c:	clz	r3, r0
   36440:	lsr	r3, r3, #5
   36444:	str	r3, [fp, #120]	; 0x78
   36448:	add	sp, sp, #124	; 0x7c
   3644c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36450:	ldrh	r3, [sl, #48]	; 0x30
   36454:	cmp	r3, #0
   36458:	str	r3, [sp, #24]
   3645c:	bne	3774c <__flatcc_fb_build_schema@@Base+0x19c4>
   36460:	add	r9, sp, #72	; 0x48
   36464:	mov	r1, r3
   36468:	mov	r0, r9
   3646c:	mov	r2, #48	; 0x30
   36470:	ldr	r4, [sl, #28]
   36474:	bl	13f9c <memset@plt>
   36478:	cmp	r4, #0
   3647c:	ldrheq	r3, [sp, #24]
   36480:	strheq	r3, [sl, #92]	; 0x5c
   36484:	beq	365b8 <__flatcc_fb_build_schema@@Base+0x830>
   36488:	ldr	r7, [pc, #2464]	; 36e30 <__flatcc_fb_build_schema@@Base+0x10a8>
   3648c:	ldr	r8, [pc, #2432]	; 36e14 <__flatcc_fb_build_schema@@Base+0x108c>
   36490:	ldr	r6, [sp, #24]
   36494:	mov	r5, #100	; 0x64
   36498:	b	364f8 <__flatcc_fb_build_schema@@Base+0x770>
   3649c:	mov	r2, #1
   364a0:	ldr	r0, [r9, r3, lsl #2]
   364a4:	orr	r6, r6, r2, lsl r3
   364a8:	cmp	r0, #0
   364ac:	uxth	r6, r6
   364b0:	lsl	r2, r3, #2
   364b4:	beq	36a24 <__flatcc_fb_build_schema@@Base+0xc9c>
   364b8:	mov	r3, #0
   364bc:	ldr	r1, [r4, #4]
   364c0:	ldr	r2, [pc, #2364]	; 36e04 <__flatcc_fb_build_schema@@Base+0x107c>
   364c4:	str	r3, [sp, #4]
   364c8:	str	r3, [sp]
   364cc:	mov	r0, fp
   364d0:	bl	2e72c <__flatcc_error_report@@Base>
   364d4:	subs	r5, r5, #1
   364d8:	ldr	r4, [r4]
   364dc:	movne	r2, #1
   364e0:	moveq	r2, #0
   364e4:	cmp	r4, #0
   364e8:	moveq	r2, #0
   364ec:	andne	r2, r2, #1
   364f0:	cmp	r2, #0
   364f4:	beq	36550 <__flatcc_fb_build_schema@@Base+0x7c8>
   364f8:	ldr	r3, [r4, #4]
   364fc:	ldr	r0, [fp, #412]	; 0x19c
   36500:	ldm	r3, {r1, r2}
   36504:	add	r0, r0, #16
   36508:	bl	3f318 <fb_name_table_find@@Base>
   3650c:	cmp	r0, #0
   36510:	beq	36aa4 <__flatcc_fb_build_schema@@Base+0xd1c>
   36514:	ldr	r3, [r0, #24]
   36518:	cmp	r3, #0
   3651c:	beq	364d4 <__flatcc_fb_build_schema@@Base+0x74c>
   36520:	mov	r2, #16
   36524:	asr	r2, r2, r3
   36528:	ands	r2, r2, #1
   3652c:	bne	3649c <__flatcc_fb_build_schema@@Base+0x714>
   36530:	ldr	r1, [r4, #4]
   36534:	mov	r3, r2
   36538:	str	r2, [sp, #4]
   3653c:	str	r2, [sp]
   36540:	mov	r0, fp
   36544:	ldr	r2, [pc, #2236]	; 36e08 <__flatcc_fb_build_schema@@Base+0x1080>
   36548:	bl	2e72c <__flatcc_error_report@@Base>
   3654c:	b	364d4 <__flatcc_fb_build_schema@@Base+0x74c>
   36550:	cmp	r4, #0
   36554:	beq	36574 <__flatcc_fb_build_schema@@Base+0x7ec>
   36558:	ldr	r1, [r4, #4]
   3655c:	mov	r3, r2
   36560:	str	r2, [sp, #4]
   36564:	str	r2, [sp]
   36568:	mov	r0, fp
   3656c:	ldr	r2, [pc, #2200]	; 36e0c <__flatcc_fb_build_schema@@Base+0x1084>
   36570:	bl	2e72c <__flatcc_error_report@@Base>
   36574:	ldr	r3, [sp, #88]	; 0x58
   36578:	strh	r6, [sl, #92]	; 0x5c
   3657c:	cmp	r3, #0
   36580:	beq	365b8 <__flatcc_fb_build_schema@@Base+0x830>
   36584:	ldrd	r0, [r3, #8]
   36588:	subs	r2, r0, #1
   3658c:	sbc	r3, r1, #0
   36590:	cmp	r3, #0
   36594:	cmpeq	r2, #255	; 0xff
   36598:	bls	36ba8 <__flatcc_fb_build_schema@@Base+0xe20>
   3659c:	mov	r3, #0
   365a0:	ldr	r1, [sl, #4]
   365a4:	ldr	r2, [pc, #2092]	; 36dd8 <__flatcc_fb_build_schema@@Base+0x1050>
   365a8:	str	r3, [sp, #4]
   365ac:	str	r3, [sp]
   365b0:	mov	r0, fp
   365b4:	bl	2e72c <__flatcc_error_report@@Base>
   365b8:	ldr	r6, [sl, #20]
   365bc:	cmp	r6, #0
   365c0:	beq	360a0 <__flatcc_fb_build_schema@@Base+0x318>
   365c4:	add	r3, sl, #56	; 0x38
   365c8:	mov	r2, #0
   365cc:	str	sl, [sp, #20]
   365d0:	str	r2, [sp, #28]
   365d4:	mov	sl, r3
   365d8:	b	36608 <__flatcc_fb_build_schema@@Base+0x880>
   365dc:	mov	r2, #0
   365e0:	ldr	r3, [r0, #4]
   365e4:	ldr	r1, [r6, #4]
   365e8:	mov	r0, fp
   365ec:	str	r2, [sp, #4]
   365f0:	str	r2, [sp]
   365f4:	ldr	r2, [pc, #2016]	; 36ddc <__flatcc_fb_build_schema@@Base+0x1054>
   365f8:	bl	2e72c <__flatcc_error_report@@Base>
   365fc:	ldr	r6, [r6]
   36600:	cmp	r6, #0
   36604:	beq	36970 <__flatcc_fb_build_schema@@Base+0xbe8>
   36608:	mov	r2, #1
   3660c:	mov	r1, r6
   36610:	mov	r0, sl
   36614:	bl	27c64 <fb_symbol_table_insert_item@@Base>
   36618:	cmp	r0, #0
   3661c:	bne	365dc <__flatcc_fb_build_schema@@Base+0x854>
   36620:	ldrh	r3, [r6, #8]
   36624:	cmp	r3, #5
   36628:	bne	3776c <__flatcc_fb_build_schema@@Base+0x19e4>
   3662c:	ldr	r3, [fp, #172]	; 0xac
   36630:	ldr	r0, [fp, #168]	; 0xa8
   36634:	cmp	r3, #0
   36638:	ldr	r4, [r6, #64]	; 0x40
   3663c:	mov	r1, #0
   36640:	moveq	r8, #4
   36644:	movne	r3, #128	; 0x80
   36648:	movne	r8, #132	; 0x84
   3664c:	mov	r2, #48	; 0x30
   36650:	cmp	r0, r1
   36654:	mov	r0, r9
   36658:	moveq	r8, r3
   3665c:	bl	13f9c <memset@plt>
   36660:	cmp	r4, #0
   36664:	beq	375e4 <__flatcc_fb_build_schema@@Base+0x185c>
   36668:	ldr	r7, [sp, #24]
   3666c:	mov	r5, #100	; 0x64
   36670:	b	366d0 <__flatcc_fb_build_schema@@Base+0x948>
   36674:	mov	r2, #1
   36678:	ldr	r0, [r9, r3, lsl #2]
   3667c:	orr	r7, r7, r2, lsl r3
   36680:	cmp	r0, #0
   36684:	uxth	r7, r7
   36688:	lsl	r2, r3, #2
   3668c:	beq	36724 <__flatcc_fb_build_schema@@Base+0x99c>
   36690:	mov	r3, #0
   36694:	ldr	r1, [r4, #4]
   36698:	ldr	r2, [pc, #1892]	; 36e04 <__flatcc_fb_build_schema@@Base+0x107c>
   3669c:	str	r3, [sp, #4]
   366a0:	str	r3, [sp]
   366a4:	mov	r0, fp
   366a8:	bl	2e72c <__flatcc_error_report@@Base>
   366ac:	subs	r5, r5, #1
   366b0:	ldr	r4, [r4]
   366b4:	movne	r2, #1
   366b8:	moveq	r2, #0
   366bc:	cmp	r4, #0
   366c0:	moveq	r2, #0
   366c4:	andne	r2, r2, #1
   366c8:	cmp	r2, #0
   366cc:	beq	36768 <__flatcc_fb_build_schema@@Base+0x9e0>
   366d0:	ldr	r3, [r4, #4]
   366d4:	ldr	r0, [fp, #412]	; 0x19c
   366d8:	ldm	r3, {r1, r2}
   366dc:	add	r0, r0, #16
   366e0:	bl	3f318 <fb_name_table_find@@Base>
   366e4:	cmp	r0, #0
   366e8:	beq	368b8 <__flatcc_fb_build_schema@@Base+0xb30>
   366ec:	ldr	r3, [r0, #24]
   366f0:	cmp	r3, #0
   366f4:	beq	366ac <__flatcc_fb_build_schema@@Base+0x924>
   366f8:	asr	r2, r8, r3
   366fc:	ands	r2, r2, #1
   36700:	bne	36674 <__flatcc_fb_build_schema@@Base+0x8ec>
   36704:	ldr	r1, [r4, #4]
   36708:	mov	r3, r2
   3670c:	str	r2, [sp, #4]
   36710:	str	r2, [sp]
   36714:	mov	r0, fp
   36718:	ldr	r2, [pc, #1768]	; 36e08 <__flatcc_fb_build_schema@@Base+0x1080>
   3671c:	bl	2e72c <__flatcc_error_report@@Base>
   36720:	b	366ac <__flatcc_fb_build_schema@@Base+0x924>
   36724:	ldr	r1, [pc, #1764]	; 36e10 <__flatcc_fb_build_schema@@Base+0x1088>
   36728:	str	r4, [r9, r3, lsl #2]
   3672c:	add	r2, r1, r2
   36730:	ldr	r2, [r2, #204]	; 0xcc
   36734:	cmp	r2, #0
   36738:	bne	369c0 <__flatcc_fb_build_schema@@Base+0xc38>
   3673c:	ldrh	r3, [r4, #16]
   36740:	cmp	r3, #0
   36744:	beq	366ac <__flatcc_fb_build_schema@@Base+0x924>
   36748:	ldr	r1, [r4, #4]
   3674c:	mov	r3, r2
   36750:	str	r2, [sp, #4]
   36754:	str	r2, [sp]
   36758:	mov	r0, fp
   3675c:	ldr	r2, [pc, #1712]	; 36e14 <__flatcc_fb_build_schema@@Base+0x108c>
   36760:	bl	2e72c <__flatcc_error_report@@Base>
   36764:	b	366ac <__flatcc_fb_build_schema@@Base+0x924>
   36768:	cmp	r4, #0
   3676c:	beq	3678c <__flatcc_fb_build_schema@@Base+0xa04>
   36770:	ldr	r1, [r4, #4]
   36774:	mov	r3, r2
   36778:	str	r2, [sp, #4]
   3677c:	str	r2, [sp]
   36780:	mov	r0, fp
   36784:	ldr	r2, [pc, #1664]	; 36e0c <__flatcc_fb_build_schema@@Base+0x1084>
   36788:	bl	2e72c <__flatcc_error_report@@Base>
   3678c:	ldrh	r3, [r6, #24]
   36790:	strh	r7, [r6, #72]	; 0x48
   36794:	cmp	r3, #8
   36798:	beq	36ac4 <__flatcc_fb_build_schema@@Base+0xd3c>
   3679c:	cmp	r3, #12
   367a0:	bne	36a80 <__flatcc_fb_build_schema@@Base+0xcf8>
   367a4:	ldr	r1, [r6, #16]
   367a8:	ldr	r3, [sp, #20]
   367ac:	cmp	r1, #0
   367b0:	ldr	r4, [r3, #12]
   367b4:	beq	3689c <__flatcc_fb_build_schema@@Base+0xb14>
   367b8:	mov	r7, r1
   367bc:	mov	r2, #0
   367c0:	b	367cc <__flatcc_fb_build_schema@@Base+0xa44>
   367c4:	mov	r2, r3
   367c8:	mov	r7, r5
   367cc:	ldr	r5, [r7]
   367d0:	add	r3, r2, #1
   367d4:	cmp	r5, #0
   367d8:	bne	367c4 <__flatcc_fb_build_schema@@Base+0xa3c>
   367dc:	adds	r0, r4, #0
   367e0:	movne	r0, #1
   367e4:	cmp	r3, #1
   367e8:	movne	r0, #0
   367ec:	cmp	r0, #0
   367f0:	beq	36b34 <__flatcc_fb_build_schema@@Base+0xdac>
   367f4:	ldr	r3, [r7, #4]
   367f8:	add	r0, r4, #4
   367fc:	ldm	r3, {r1, r2}
   36800:	bl	27c8c <fb_symbol_table_find@@Base>
   36804:	subs	r8, r0, #0
   36808:	beq	36818 <__flatcc_fb_build_schema@@Base+0xa90>
   3680c:	ldrh	r3, [r8, #8]
   36810:	cmp	r3, #4
   36814:	bls	368d8 <__flatcc_fb_build_schema@@Base+0xb50>
   36818:	ldr	r3, [r4]
   3681c:	cmp	r3, #0
   36820:	beq	36898 <__flatcc_fb_build_schema@@Base+0xb10>
   36824:	mov	r8, #0
   36828:	ldr	r3, [r3]
   3682c:	add	r8, r8, #1
   36830:	cmp	r3, #0
   36834:	bne	36828 <__flatcc_fb_build_schema@@Base+0xaa0>
   36838:	ldr	r3, [sp, #12]
   3683c:	cmp	r3, #0
   36840:	beq	36898 <__flatcc_fb_build_schema@@Base+0xb10>
   36844:	ldr	r0, [fp, #412]	; 0x19c
   36848:	rsb	r8, r8, #1
   3684c:	b	36874 <__flatcc_fb_build_schema@@Base+0xaec>
   36850:	cmp	r0, #0
   36854:	beq	36870 <__flatcc_fb_build_schema@@Base+0xae8>
   36858:	mov	r2, r8
   3685c:	ldr	r1, [r4]
   36860:	bl	28a80 <fb_scope_table_find@@Base>
   36864:	cmp	r0, #0
   36868:	bne	36a78 <__flatcc_fb_build_schema@@Base+0xcf0>
   3686c:	ldr	r0, [fp, #412]	; 0x19c
   36870:	add	r8, r8, #1
   36874:	cmp	r8, #0
   36878:	bne	36850 <__flatcc_fb_build_schema@@Base+0xac8>
   3687c:	cmp	r0, #0
   36880:	beq	36898 <__flatcc_fb_build_schema@@Base+0xb10>
   36884:	mov	r1, r8
   36888:	mov	r2, r5
   3688c:	bl	28a80 <fb_scope_table_find@@Base>
   36890:	subs	r4, r0, #0
   36894:	bne	367f4 <__flatcc_fb_build_schema@@Base+0xa6c>
   36898:	ldr	r1, [r6, #16]
   3689c:	mov	r3, r6
   368a0:	ldr	r2, [pc, #1336]	; 36de0 <__flatcc_fb_build_schema@@Base+0x1058>
   368a4:	mov	r0, fp
   368a8:	bl	2f6ec <error_ref_sym@@Base>
   368ac:	mov	r3, #1
   368b0:	strh	r3, [r6, #24]
   368b4:	b	365fc <__flatcc_fb_build_schema@@Base+0x874>
   368b8:	ldr	r1, [r4, #4]
   368bc:	mov	r3, r0
   368c0:	str	r0, [sp, #4]
   368c4:	str	r0, [sp]
   368c8:	ldr	r2, [pc, #1356]	; 36e1c <__flatcc_fb_build_schema@@Base+0x1094>
   368cc:	mov	r0, fp
   368d0:	bl	2e72c <__flatcc_error_report@@Base>
   368d4:	b	366ac <__flatcc_fb_build_schema@@Base+0x924>
   368d8:	ldr	r1, [r8, #16]
   368dc:	ldr	r0, [sp, #16]
   368e0:	bl	275b4 <ptr_set_find_item@@Base>
   368e4:	cmp	r0, #0
   368e8:	beq	36818 <__flatcc_fb_build_schema@@Base+0xa90>
   368ec:	str	r8, [r6, #16]
   368f0:	ldrh	r4, [r8, #8]
   368f4:	mov	r3, #14
   368f8:	strh	r3, [r6, #24]
   368fc:	cmp	r4, #1
   36900:	beq	375f8 <__flatcc_fb_build_schema@@Base+0x1870>
   36904:	ldr	r2, [fp, #152]	; 0x98
   36908:	cmp	r2, #0
   3690c:	beq	37868 <__flatcc_fb_build_schema@@Base+0x1ae0>
   36910:	cmp	r4, #3
   36914:	bne	37804 <__flatcc_fb_build_schema@@Base+0x1a7c>
   36918:	ldrh	r3, [r6, #72]	; 0x48
   3691c:	tst	r3, #128	; 0x80
   36920:	beq	3693c <__flatcc_fb_build_schema@@Base+0xbb4>
   36924:	ldr	r2, [fp, #148]	; 0x94
   36928:	cmp	r2, #0
   3692c:	beq	377d8 <__flatcc_fb_build_schema@@Base+0x1a50>
   36930:	ldr	r3, [sp, #28]
   36934:	add	r3, r3, #1
   36938:	str	r3, [sp, #28]
   3693c:	ldrh	r3, [r6, #56]	; 0x38
   36940:	cmp	r3, #0
   36944:	beq	365fc <__flatcc_fb_build_schema@@Base+0x874>
   36948:	mov	r3, #0
   3694c:	ldr	r1, [r6, #4]
   36950:	ldr	r2, [pc, #1164]	; 36de4 <__flatcc_fb_build_schema@@Base+0x105c>
   36954:	str	r3, [sp, #4]
   36958:	str	r3, [sp]
   3695c:	mov	r0, fp
   36960:	bl	2e72c <__flatcc_error_report@@Base>
   36964:	ldr	r6, [r6]
   36968:	cmp	r6, #0
   3696c:	bne	36608 <__flatcc_fb_build_schema@@Base+0x880>
   36970:	ldr	r2, [sp, #28]
   36974:	ldr	sl, [sp, #20]
   36978:	cmp	r2, #0
   3697c:	beq	360a0 <__flatcc_fb_build_schema@@Base+0x318>
   36980:	ldrh	r3, [sl, #10]
   36984:	cmp	r2, #1
   36988:	orr	r3, r3, #8
   3698c:	strh	r3, [sl, #10]
   36990:	beq	360a0 <__flatcc_fb_build_schema@@Base+0x318>
   36994:	ldr	r3, [fp, #156]	; 0x9c
   36998:	cmp	r3, #0
   3699c:	bne	360a0 <__flatcc_fb_build_schema@@Base+0x318>
   369a0:	ldr	r1, [sl, #4]
   369a4:	mov	r3, r6
   369a8:	str	r6, [sp, #4]
   369ac:	str	r6, [sp]
   369b0:	ldr	r2, [pc, #1072]	; 36de8 <__flatcc_fb_build_schema@@Base+0x1060>
   369b4:	mov	r0, fp
   369b8:	bl	2e72c <__flatcc_error_report@@Base>
   369bc:	b	36098 <__flatcc_fb_build_schema@@Base+0x310>
   369c0:	cmp	r2, #2
   369c4:	beq	36adc <__flatcc_fb_build_schema@@Base+0xd54>
   369c8:	cmp	r2, #5
   369cc:	bne	3762c <__flatcc_fb_build_schema@@Base+0x18a4>
   369d0:	ldrh	r3, [r4, #16]
   369d4:	cmp	r3, #5
   369d8:	beq	366ac <__flatcc_fb_build_schema@@Base+0x924>
   369dc:	ldr	r1, [r4, #4]
   369e0:	mov	r3, r0
   369e4:	str	r0, [sp, #4]
   369e8:	str	r0, [sp]
   369ec:	ldr	r2, [pc, #1072]	; 36e24 <__flatcc_fb_build_schema@@Base+0x109c>
   369f0:	mov	r0, fp
   369f4:	bl	2e72c <__flatcc_error_report@@Base>
   369f8:	b	366ac <__flatcc_fb_build_schema@@Base+0x924>
   369fc:	mov	r3, #0
   36a00:	ldr	r1, [sl, #4]
   36a04:	mov	r0, fp
   36a08:	str	r3, [sp, #4]
   36a0c:	str	r3, [sp]
   36a10:	ldr	r2, [pc, #980]	; 36dec <__flatcc_fb_build_schema@@Base+0x1064>
   36a14:	bl	2e72c <__flatcc_error_report@@Base>
   36a18:	mvn	r0, #0
   36a1c:	add	sp, sp, #124	; 0x7c
   36a20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36a24:	ldr	r1, [pc, #996]	; 36e10 <__flatcc_fb_build_schema@@Base+0x1088>
   36a28:	str	r4, [r9, r3, lsl #2]
   36a2c:	add	r2, r1, r2
   36a30:	ldr	r2, [r2, #204]	; 0xcc
   36a34:	cmp	r2, #0
   36a38:	beq	36b08 <__flatcc_fb_build_schema@@Base+0xd80>
   36a3c:	cmp	r2, #2
   36a40:	beq	37564 <__flatcc_fb_build_schema@@Base+0x17dc>
   36a44:	cmp	r2, #5
   36a48:	bne	36ce0 <__flatcc_fb_build_schema@@Base+0xf58>
   36a4c:	ldrh	r3, [r4, #16]
   36a50:	cmp	r3, #5
   36a54:	beq	364d4 <__flatcc_fb_build_schema@@Base+0x74c>
   36a58:	ldr	r1, [r4, #4]
   36a5c:	mov	r3, r0
   36a60:	str	r0, [sp, #4]
   36a64:	str	r0, [sp]
   36a68:	ldr	r2, [pc, #948]	; 36e24 <__flatcc_fb_build_schema@@Base+0x109c>
   36a6c:	mov	r0, fp
   36a70:	bl	2e72c <__flatcc_error_report@@Base>
   36a74:	b	364d4 <__flatcc_fb_build_schema@@Base+0x74c>
   36a78:	mov	r4, r0
   36a7c:	b	367f4 <__flatcc_fb_build_schema@@Base+0xa6c>
   36a80:	mov	r3, #0
   36a84:	ldr	r1, [r6, #4]
   36a88:	ldr	r2, [pc, #864]	; 36df0 <__flatcc_fb_build_schema@@Base+0x1068>
   36a8c:	str	r3, [sp, #4]
   36a90:	str	r3, [sp]
   36a94:	mov	r0, fp
   36a98:	ldr	sl, [sp, #20]
   36a9c:	bl	2e72c <__flatcc_error_report@@Base>
   36aa0:	b	36098 <__flatcc_fb_build_schema@@Base+0x310>
   36aa4:	ldr	r1, [r4, #4]
   36aa8:	mov	r3, r0
   36aac:	str	r0, [sp, #4]
   36ab0:	str	r0, [sp]
   36ab4:	ldr	r2, [pc, #864]	; 36e1c <__flatcc_fb_build_schema@@Base+0x1094>
   36ab8:	mov	r0, fp
   36abc:	bl	2e72c <__flatcc_error_report@@Base>
   36ac0:	b	364d4 <__flatcc_fb_build_schema@@Base+0x74c>
   36ac4:	tst	r7, #128	; 0x80
   36ac8:	bne	36930 <__flatcc_fb_build_schema@@Base+0xba8>
   36acc:	ldrh	r3, [r6, #56]	; 0x38
   36ad0:	cmp	r3, #0
   36ad4:	beq	365fc <__flatcc_fb_build_schema@@Base+0x874>
   36ad8:	b	36948 <__flatcc_fb_build_schema@@Base+0xbc0>
   36adc:	ldrh	r3, [r4, #16]
   36ae0:	cmp	r3, #2
   36ae4:	beq	366ac <__flatcc_fb_build_schema@@Base+0x924>
   36ae8:	ldr	r1, [r4, #4]
   36aec:	mov	r3, r0
   36af0:	str	r0, [sp, #4]
   36af4:	str	r0, [sp]
   36af8:	ldr	r2, [pc, #816]	; 36e30 <__flatcc_fb_build_schema@@Base+0x10a8>
   36afc:	mov	r0, fp
   36b00:	bl	2e72c <__flatcc_error_report@@Base>
   36b04:	b	366ac <__flatcc_fb_build_schema@@Base+0x924>
   36b08:	ldrh	r3, [r4, #16]
   36b0c:	cmp	r3, #0
   36b10:	beq	364d4 <__flatcc_fb_build_schema@@Base+0x74c>
   36b14:	ldr	r1, [r4, #4]
   36b18:	mov	r3, r2
   36b1c:	str	r2, [sp, #4]
   36b20:	str	r2, [sp]
   36b24:	mov	r0, fp
   36b28:	mov	r2, r8
   36b2c:	bl	2e72c <__flatcc_error_report@@Base>
   36b30:	b	364d4 <__flatcc_fb_build_schema@@Base+0x74c>
   36b34:	cmp	r3, #1
   36b38:	ldr	r3, [sp, #12]
   36b3c:	moveq	r5, r0
   36b40:	movne	r5, r1
   36b44:	cmp	r3, #0
   36b48:	beq	3689c <__flatcc_fb_build_schema@@Base+0xb14>
   36b4c:	ldr	r0, [fp, #412]	; 0x19c
   36b50:	cmp	r0, #0
   36b54:	beq	3689c <__flatcc_fb_build_schema@@Base+0xb14>
   36b58:	rsb	r2, r2, #0
   36b5c:	mov	r1, r5
   36b60:	bl	28a80 <fb_scope_table_find@@Base>
   36b64:	cmp	r0, #0
   36b68:	beq	36898 <__flatcc_fb_build_schema@@Base+0xb10>
   36b6c:	ldr	r3, [r7, #4]
   36b70:	add	r0, r0, #4
   36b74:	ldm	r3, {r1, r2}
   36b78:	bl	27c8c <fb_symbol_table_find@@Base>
   36b7c:	subs	r8, r0, #0
   36b80:	beq	36898 <__flatcc_fb_build_schema@@Base+0xb10>
   36b84:	ldrh	r3, [r8, #8]
   36b88:	cmp	r3, #4
   36b8c:	bhi	36898 <__flatcc_fb_build_schema@@Base+0xb10>
   36b90:	ldr	r1, [r8, #16]
   36b94:	ldr	r0, [sp, #16]
   36b98:	bl	275b4 <ptr_set_find_item@@Base>
   36b9c:	cmp	r0, #0
   36ba0:	bne	368ec <__flatcc_fb_build_schema@@Base+0xb64>
   36ba4:	b	36898 <__flatcc_fb_build_schema@@Base+0xb10>
   36ba8:	cmp	r1, #0
   36bac:	cmpeq	r0, #1
   36bb0:	beq	36be0 <__flatcc_fb_build_schema@@Base+0xe58>
   36bb4:	mov	r2, #2
   36bb8:	mov	r3, #0
   36bbc:	b	36bd4 <__flatcc_fb_build_schema@@Base+0xe4c>
   36bc0:	adds	r2, r2, r2
   36bc4:	adc	r3, r3, r3
   36bc8:	cmp	r1, r3
   36bcc:	cmpeq	r0, r2
   36bd0:	bcc	3659c <__flatcc_fb_build_schema@@Base+0x814>
   36bd4:	cmp	r1, r3
   36bd8:	cmpeq	r0, r2
   36bdc:	bne	36bc0 <__flatcc_fb_build_schema@@Base+0xe38>
   36be0:	strh	r0, [sl, #104]	; 0x68
   36be4:	b	365b8 <__flatcc_fb_build_schema@@Base+0x830>
   36be8:	ldr	r3, [r5, #4]
   36bec:	ldm	r3, {r1, r2}
   36bf0:	cmp	r2, #0
   36bf4:	sub	r2, r2, #1
   36bf8:	beq	37728 <__flatcc_fb_build_schema@@Base+0x19a0>
   36bfc:	ldr	r3, [pc, #432]	; 36db4 <__flatcc_fb_build_schema@@Base+0x102c>
   36c00:	b	35e68 <__flatcc_fb_build_schema@@Base+0xe0>
   36c04:	ldr	r3, [r5, #4]
   36c08:	ldm	r3, {r1, r2}
   36c0c:	cmp	r2, #0
   36c10:	sub	r2, r2, #1
   36c14:	bne	36bfc <__flatcc_fb_build_schema@@Base+0xe74>
   36c18:	str	r6, [r5, #88]	; 0x58
   36c1c:	str	sl, [r5, #16]
   36c20:	b	35e9c <__flatcc_fb_build_schema@@Base+0x114>
   36c24:	cmp	r3, #0
   36c28:	bne	35e8c <__flatcc_fb_build_schema@@Base+0x104>
   36c2c:	str	r6, [r5, #88]	; 0x58
   36c30:	str	sl, [r5, #16]
   36c34:	b	35e9c <__flatcc_fb_build_schema@@Base+0x114>
   36c38:	mov	r5, r0
   36c3c:	ldr	r3, [r7, #4]
   36c40:	add	r0, r5, #4
   36c44:	ldm	r3, {r1, r2}
   36c48:	bl	27c8c <fb_symbol_table_find@@Base>
   36c4c:	subs	sl, r0, #0
   36c50:	beq	36c60 <__flatcc_fb_build_schema@@Base+0xed8>
   36c54:	ldrh	r3, [sl, #8]
   36c58:	cmp	r3, #4
   36c5c:	bls	36ecc <__flatcc_fb_build_schema@@Base+0x1144>
   36c60:	ldr	r3, [r5]
   36c64:	cmp	r3, #0
   36c68:	beq	362ac <__flatcc_fb_build_schema@@Base+0x524>
   36c6c:	mov	sl, #0
   36c70:	ldr	r3, [r3]
   36c74:	add	sl, sl, #1
   36c78:	cmp	r3, #0
   36c7c:	bne	36c70 <__flatcc_fb_build_schema@@Base+0xee8>
   36c80:	cmp	r8, #0
   36c84:	beq	362ac <__flatcc_fb_build_schema@@Base+0x524>
   36c88:	ldr	r0, [fp, #412]	; 0x19c
   36c8c:	rsb	sl, sl, #1
   36c90:	b	36cb8 <__flatcc_fb_build_schema@@Base+0xf30>
   36c94:	cmp	r0, #0
   36c98:	beq	36cb4 <__flatcc_fb_build_schema@@Base+0xf2c>
   36c9c:	mov	r2, sl
   36ca0:	ldr	r1, [r5]
   36ca4:	bl	28a80 <fb_scope_table_find@@Base>
   36ca8:	cmp	r0, #0
   36cac:	bne	36c38 <__flatcc_fb_build_schema@@Base+0xeb0>
   36cb0:	ldr	r0, [fp, #412]	; 0x19c
   36cb4:	add	sl, sl, #1
   36cb8:	cmp	sl, #0
   36cbc:	bne	36c94 <__flatcc_fb_build_schema@@Base+0xf0c>
   36cc0:	cmp	r0, #0
   36cc4:	beq	362ac <__flatcc_fb_build_schema@@Base+0x524>
   36cc8:	mov	r1, sl
   36ccc:	mov	r2, r6
   36cd0:	bl	28a80 <fb_scope_table_find@@Base>
   36cd4:	subs	r5, r0, #0
   36cd8:	bne	36c3c <__flatcc_fb_build_schema@@Base+0xeb4>
   36cdc:	b	362ac <__flatcc_fb_build_schema@@Base+0x524>
   36ce0:	cmp	r2, #4
   36ce4:	bne	37914 <__flatcc_fb_build_schema@@Base+0x1b8c>
   36ce8:	ldrh	r3, [r4, #16]
   36cec:	sub	r3, r3, #4
   36cf0:	cmp	r3, #1
   36cf4:	bls	364d4 <__flatcc_fb_build_schema@@Base+0x74c>
   36cf8:	ldr	r1, [r4, #4]
   36cfc:	mov	r3, r0
   36d00:	str	r0, [sp, #4]
   36d04:	str	r0, [sp]
   36d08:	ldr	r2, [pc, #332]	; 36e5c <__flatcc_fb_build_schema@@Base+0x10d4>
   36d0c:	mov	r0, fp
   36d10:	bl	2e72c <__flatcc_error_report@@Base>
   36d14:	b	364d4 <__flatcc_fb_build_schema@@Base+0x74c>
   36d18:	ldr	r3, [fp, #396]	; 0x18c
   36d1c:	cmp	r3, #0
   36d20:	movne	sl, #0
   36d24:	beq	3779c <__flatcc_fb_build_schema@@Base+0x1a14>
   36d28:	mov	r1, #0
   36d2c:	b	36d34 <__flatcc_fb_build_schema@@Base+0xfac>
   36d30:	mov	r3, r2
   36d34:	ldr	r2, [r3, #120]	; 0x78
   36d38:	str	r1, [r3, #120]	; 0x78
   36d3c:	cmp	r2, #0
   36d40:	mov	r1, r3
   36d44:	bne	36d30 <__flatcc_fb_build_schema@@Base+0xfa8>
   36d48:	b	362f4 <__flatcc_fb_build_schema@@Base+0x56c>
   36d4c:	mov	r5, r0
   36d50:	ldr	r3, [r7, #4]
   36d54:	add	r0, r5, #4
   36d58:	ldm	r3, {r1, r2}
   36d5c:	bl	27c8c <fb_symbol_table_find@@Base>
   36d60:	subs	r4, r0, #0
   36d64:	beq	36d74 <__flatcc_fb_build_schema@@Base+0xfec>
   36d68:	ldrh	r3, [r4, #8]
   36d6c:	cmp	r3, #4
   36d70:	bls	374d8 <__flatcc_fb_build_schema@@Base+0x1750>
   36d74:	ldr	r3, [r5]
   36d78:	cmp	r3, #0
   36d7c:	beq	36410 <__flatcc_fb_build_schema@@Base+0x688>
   36d80:	mov	r4, #0
   36d84:	ldr	r3, [r3]
   36d88:	add	r4, r4, #1
   36d8c:	cmp	r3, #0
   36d90:	bne	36d84 <__flatcc_fb_build_schema@@Base+0xffc>
   36d94:	ldr	r3, [sp, #12]
   36d98:	cmp	r3, #0
   36d9c:	beq	36410 <__flatcc_fb_build_schema@@Base+0x688>
   36da0:	ldr	r0, [fp, #412]	; 0x19c
   36da4:	rsb	r4, r4, #1
   36da8:	b	36ea4 <__flatcc_fb_build_schema@@Base+0x111c>
   36dac:			; <UNDEFINED> instruction: 0x0005a9b4
   36db0:			; <UNDEFINED> instruction: 0x01000193
   36db4:	tsthi	ip, r5, asr #27
   36db8:	ldrdeq	sl, [r5], -r0
   36dbc:	andeq	r9, r5, ip, lsl #17
   36dc0:	andeq	sl, r5, r8, ror #23
   36dc4:	andeq	sl, r5, ip, lsl #24
   36dc8:	andeq	sl, r5, ip, ror #24
   36dcc:	andeq	sl, r5, ip, lsr #25
   36dd0:	andeq	r8, r0, r0, lsl #13
   36dd4:	andeq	sl, r5, r4, lsr #27
   36dd8:	strdeq	sl, [r5], -ip
   36ddc:	andeq	sl, r5, r8, lsl sl
   36de0:	andeq	sl, r5, r0, ror #20
   36de4:	andeq	sl, r5, r0, lsl #23
   36de8:	andeq	sl, r5, ip, lsl r5
   36dec:			; <UNDEFINED> instruction: 0x0005abb4
   36df0:	andeq	sl, r5, r4, asr #22
   36df4:	andeq	sl, r5, r0, ror #25
   36df8:	andeq	sl, r5, r8, lsl sp
   36dfc:	andeq	sl, r5, ip, asr #26
   36e00:	andeq	sl, r5, ip, lsr #24
   36e04:	andeq	r9, r5, r4, asr sp
   36e08:	andeq	r9, r5, r4, lsr #26
   36e0c:	andeq	r9, r5, r4, asr #28
   36e10:	andeq	r9, r5, r4, asr r7
   36e14:	andeq	r9, r5, ip, ror sp
   36e18:			; <UNDEFINED> instruction: 0x0005adb8
   36e1c:	andeq	r9, r5, r4, lsl #26
   36e20:	andeq	r9, r5, ip, ror lr
   36e24:	andeq	r9, r5, r8, asr #27
   36e28:	andeq	sl, r5, r0, ror #27
   36e2c:	andeq	sl, r5, ip, lsl #27
   36e30:	andeq	r9, r5, r4, lsr #27
   36e34:	andeq	sl, r5, ip, ror #19
   36e38:	andeq	sl, r5, ip, lsr sl
   36e3c:	ldrdeq	sl, [r5], -r4
   36e40:	muleq	r5, r0, sl
   36e44:	andeq	r9, r5, r4, ror r8
   36e48:	andeq	r0, r0, r6, lsl r6
   36e4c:	andeq	sl, r5, ip, ror r9
   36e50:	andeq	sp, r6, r8, lsr #1
   36e54:	andeq	r1, r4, r8, lsl r9
   36e58:	andeq	sl, r5, r8, lsl #22
   36e5c:	strdeq	r9, [r5], -r4
   36e60:	ldrdeq	r9, [r5], -r4
   36e64:	strdeq	r0, [r0], -r1
   36e68:	andeq	sl, r5, r4, lsl #27
   36e6c:	andeq	r9, r5, r8, lsl lr
   36e70:	andeq	r9, r5, r0, asr #17
   36e74:	andeq	r0, r0, r9, ror #8
   36e78:	strdeq	r9, [r5], -r4
   36e7c:	andeq	r9, r5, r8, ror #17
   36e80:	cmp	r0, #0
   36e84:	beq	36ea0 <__flatcc_fb_build_schema@@Base+0x1118>
   36e88:	mov	r2, r4
   36e8c:	ldr	r1, [r5]
   36e90:	bl	28a80 <fb_scope_table_find@@Base>
   36e94:	cmp	r0, #0
   36e98:	bne	36d4c <__flatcc_fb_build_schema@@Base+0xfc4>
   36e9c:	ldr	r0, [fp, #412]	; 0x19c
   36ea0:	add	r4, r4, #1
   36ea4:	cmp	r4, #0
   36ea8:	bne	36e80 <__flatcc_fb_build_schema@@Base+0x10f8>
   36eac:	cmp	r0, #0
   36eb0:	beq	36410 <__flatcc_fb_build_schema@@Base+0x688>
   36eb4:	mov	r1, r4
   36eb8:	mov	r2, r6
   36ebc:	bl	28a80 <fb_scope_table_find@@Base>
   36ec0:	subs	r5, r0, #0
   36ec4:	bne	36d50 <__flatcc_fb_build_schema@@Base+0xfc8>
   36ec8:	b	36410 <__flatcc_fb_build_schema@@Base+0x688>
   36ecc:	ldr	r1, [sl, #16]
   36ed0:	ldr	r0, [sp, #16]
   36ed4:	bl	275b4 <ptr_set_find_item@@Base>
   36ed8:	cmp	r0, #0
   36edc:	beq	36c60 <__flatcc_fb_build_schema@@Base+0xed8>
   36ee0:	ldrh	r2, [sl, #8]
   36ee4:	cmp	r2, #0
   36ee8:	beq	36f50 <__flatcc_fb_build_schema@@Base+0x11c8>
   36eec:	mov	r2, #0
   36ef0:	ldr	r3, [sl, #4]
   36ef4:	ldr	r1, [r4, #4]
   36ef8:	mov	r0, fp
   36efc:	str	r2, [sp, #4]
   36f00:	str	r2, [sp]
   36f04:	ldr	r2, [pc, #-280]	; 36df4 <__flatcc_fb_build_schema@@Base+0x106c>
   36f08:	bl	2e72c <__flatcc_error_report@@Base>
   36f0c:	mov	r3, #1
   36f10:	strh	r3, [r4, #24]
   36f14:	b	36198 <__flatcc_fb_build_schema@@Base+0x410>
   36f18:	ldrh	r3, [sl, #48]	; 0x30
   36f1c:	cmp	r3, #1
   36f20:	beq	362d8 <__flatcc_fb_build_schema@@Base+0x550>
   36f24:	mov	r1, sl
   36f28:	mov	r0, fp
   36f2c:	bl	33438 <__flatcc_fb_clear_parser@@Base+0x5f4>
   36f30:	cmp	r0, #0
   36f34:	beq	362d8 <__flatcc_fb_build_schema@@Base+0x550>
   36f38:	mov	r3, #1
   36f3c:	strh	r3, [sl, #48]	; 0x30
   36f40:	ldr	sl, [sl]
   36f44:	cmp	sl, #0
   36f48:	bne	36100 <__flatcc_fb_build_schema@@Base+0x378>
   36f4c:	b	362e4 <__flatcc_fb_build_schema@@Base+0x55c>
   36f50:	ldr	r1, [r4, #16]
   36f54:	ldr	r3, [sp, #20]
   36f58:	mov	r0, #14
   36f5c:	cmp	r1, #0
   36f60:	str	sl, [r4, #32]
   36f64:	strh	r0, [r4, #40]	; 0x28
   36f68:	ldr	r5, [r3, #12]
   36f6c:	beq	37004 <__flatcc_fb_build_schema@@Base+0x127c>
   36f70:	mov	r6, r1
   36f74:	b	36f80 <__flatcc_fb_build_schema@@Base+0x11f8>
   36f78:	mov	r2, r3
   36f7c:	mov	r6, r7
   36f80:	ldr	r7, [r6]
   36f84:	add	r3, r2, #1
   36f88:	cmp	r7, #0
   36f8c:	bne	36f78 <__flatcc_fb_build_schema@@Base+0x11f0>
   36f90:	adds	r0, r5, #0
   36f94:	movne	r0, #1
   36f98:	cmp	r3, #1
   36f9c:	movne	r0, #0
   36fa0:	cmp	r0, #0
   36fa4:	bne	37024 <__flatcc_fb_build_schema@@Base+0x129c>
   36fa8:	cmp	r3, #1
   36fac:	moveq	r7, r0
   36fb0:	movne	r7, r1
   36fb4:	cmp	r8, #0
   36fb8:	beq	37004 <__flatcc_fb_build_schema@@Base+0x127c>
   36fbc:	ldr	r0, [fp, #412]	; 0x19c
   36fc0:	cmp	r0, #0
   36fc4:	beq	37004 <__flatcc_fb_build_schema@@Base+0x127c>
   36fc8:	rsb	r2, r2, #0
   36fcc:	mov	r1, r7
   36fd0:	bl	28a80 <fb_scope_table_find@@Base>
   36fd4:	cmp	r0, #0
   36fd8:	beq	37000 <__flatcc_fb_build_schema@@Base+0x1278>
   36fdc:	ldr	r3, [r6, #4]
   36fe0:	add	r0, r0, #4
   36fe4:	ldm	r3, {r1, r2}
   36fe8:	bl	27c8c <fb_symbol_table_find@@Base>
   36fec:	subs	r3, r0, #0
   36ff0:	beq	37000 <__flatcc_fb_build_schema@@Base+0x1278>
   36ff4:	ldrh	r2, [r3, #8]
   36ff8:	cmp	r2, #4
   36ffc:	bls	37664 <__flatcc_fb_build_schema@@Base+0x18dc>
   37000:	ldr	r1, [r4, #16]
   37004:	mov	r3, r4
   37008:	ldr	r2, [pc, #-536]	; 36df8 <__flatcc_fb_build_schema@@Base+0x1070>
   3700c:	mov	r0, fp
   37010:	bl	2f6ec <error_ref_sym@@Base>
   37014:	mov	r3, #1
   37018:	strh	r3, [r4, #24]
   3701c:	b	36198 <__flatcc_fb_build_schema@@Base+0x410>
   37020:	mov	r5, r0
   37024:	ldr	r3, [r6, #4]
   37028:	add	r0, r5, #4
   3702c:	ldm	r3, {r1, r2}
   37030:	bl	27c8c <fb_symbol_table_find@@Base>
   37034:	subs	sl, r0, #0
   37038:	beq	37048 <__flatcc_fb_build_schema@@Base+0x12c0>
   3703c:	ldrh	r3, [sl, #8]
   37040:	cmp	r3, #4
   37044:	bls	370c8 <__flatcc_fb_build_schema@@Base+0x1340>
   37048:	ldr	r3, [r5]
   3704c:	cmp	r3, #0
   37050:	beq	37000 <__flatcc_fb_build_schema@@Base+0x1278>
   37054:	mov	sl, #0
   37058:	ldr	r3, [r3]
   3705c:	add	sl, sl, #1
   37060:	cmp	r3, #0
   37064:	bne	37058 <__flatcc_fb_build_schema@@Base+0x12d0>
   37068:	cmp	r8, #0
   3706c:	beq	37000 <__flatcc_fb_build_schema@@Base+0x1278>
   37070:	ldr	r0, [fp, #412]	; 0x19c
   37074:	rsb	sl, sl, #1
   37078:	b	370a0 <__flatcc_fb_build_schema@@Base+0x1318>
   3707c:	cmp	r0, #0
   37080:	beq	3709c <__flatcc_fb_build_schema@@Base+0x1314>
   37084:	mov	r2, sl
   37088:	ldr	r1, [r5]
   3708c:	bl	28a80 <fb_scope_table_find@@Base>
   37090:	cmp	r0, #0
   37094:	bne	37020 <__flatcc_fb_build_schema@@Base+0x1298>
   37098:	ldr	r0, [fp, #412]	; 0x19c
   3709c:	add	sl, sl, #1
   370a0:	cmp	sl, #0
   370a4:	bne	3707c <__flatcc_fb_build_schema@@Base+0x12f4>
   370a8:	cmp	r0, #0
   370ac:	beq	37000 <__flatcc_fb_build_schema@@Base+0x1278>
   370b0:	mov	r1, sl
   370b4:	mov	r2, r7
   370b8:	bl	28a80 <fb_scope_table_find@@Base>
   370bc:	subs	r5, r0, #0
   370c0:	bne	37024 <__flatcc_fb_build_schema@@Base+0x129c>
   370c4:	b	37000 <__flatcc_fb_build_schema@@Base+0x1278>
   370c8:	ldr	r1, [sl, #16]
   370cc:	ldr	r0, [sp, #16]
   370d0:	bl	275b4 <ptr_set_find_item@@Base>
   370d4:	cmp	r0, #0
   370d8:	beq	37048 <__flatcc_fb_build_schema@@Base+0x12c0>
   370dc:	mov	r3, sl
   370e0:	ldrh	r1, [r3, #8]
   370e4:	cmp	r1, #0
   370e8:	beq	37374 <__flatcc_fb_build_schema@@Base+0x15ec>
   370ec:	mov	r2, #0
   370f0:	ldr	r3, [r3, #4]
   370f4:	ldr	r1, [r4, #4]
   370f8:	mov	r0, fp
   370fc:	str	r2, [sp, #4]
   37100:	str	r2, [sp]
   37104:	ldr	r2, [pc, #-784]	; 36dfc <__flatcc_fb_build_schema@@Base+0x1074>
   37108:	bl	2e72c <__flatcc_error_report@@Base>
   3710c:	mov	r3, #1
   37110:	strh	r3, [r4, #24]
   37114:	b	36198 <__flatcc_fb_build_schema@@Base+0x410>
   37118:	ldr	r1, [r4, #4]
   3711c:	mov	r3, r0
   37120:	str	r0, [sp, #4]
   37124:	str	r0, [sp]
   37128:	ldr	r2, [pc, #-816]	; 36e00 <__flatcc_fb_build_schema@@Base+0x1078>
   3712c:	mov	r0, fp
   37130:	bl	2e72c <__flatcc_error_report@@Base>
   37134:	b	361d4 <__flatcc_fb_build_schema@@Base+0x44c>
   37138:	ldr	r6, [sl, #20]
   3713c:	mov	r2, r7
   37140:	mov	r1, r4
   37144:	add	r0, sp, #36	; 0x24
   37148:	bl	13f9c <memset@plt>
   3714c:	mov	r2, r7
   37150:	mov	r1, r4
   37154:	add	r0, sp, #72	; 0x48
   37158:	bl	13f9c <memset@plt>
   3715c:	cmp	r6, #0
   37160:	beq	37218 <__flatcc_fb_build_schema@@Base+0x1490>
   37164:	mov	r1, r6
   37168:	mov	r0, #1
   3716c:	ldrh	r3, [r1, #24]
   37170:	ldrh	r2, [r1, #74]	; 0x4a
   37174:	cmp	r3, #15
   37178:	bhi	371bc <__flatcc_fb_build_schema@@Base+0x1434>
   3717c:	lsl	r3, r0, r3
   37180:	ands	ip, r3, r5
   37184:	bne	371b8 <__flatcc_fb_build_schema@@Base+0x1430>
   37188:	tst	r3, #2
   3718c:	bne	376a4 <__flatcc_fb_build_schema@@Base+0x191c>
   37190:	tst	r3, #16384	; 0x4000
   37194:	beq	371bc <__flatcc_fb_build_schema@@Base+0x1434>
   37198:	ldr	r2, [r1, #16]
   3719c:	ldrh	r3, [r2, #8]
   371a0:	cmp	r3, #3
   371a4:	beq	3736c <__flatcc_fb_build_schema@@Base+0x15e4>
   371a8:	cmp	r3, #4
   371ac:	beq	371b8 <__flatcc_fb_build_schema@@Base+0x1430>
   371b0:	cmp	r3, #1
   371b4:	beq	3736c <__flatcc_fb_build_schema@@Base+0x15e4>
   371b8:	ldrh	r2, [fp, #192]	; 0xc0
   371bc:	cmp	r2, #0
   371c0:	beq	378cc <__flatcc_fb_build_schema@@Base+0x1b44>
   371c4:	lsrs	r2, r2, #1
   371c8:	mov	r3, r4
   371cc:	beq	371e8 <__flatcc_fb_build_schema@@Base+0x1460>
   371d0:	add	r3, r3, #1
   371d4:	lsrs	r2, r2, #1
   371d8:	uxth	r3, r3
   371dc:	bne	371d0 <__flatcc_fb_build_schema@@Base+0x1448>
   371e0:	cmp	r3, #7
   371e4:	movcs	r3, #7
   371e8:	add	r2, sp, #120	; 0x78
   371ec:	add	r3, r2, r3, lsl #2
   371f0:	ldr	r2, [r3, #-84]	; 0xffffffac
   371f4:	cmp	r2, #0
   371f8:	beq	37330 <__flatcc_fb_build_schema@@Base+0x15a8>
   371fc:	ldr	r2, [r3, #-48]	; 0xffffffd0
   37200:	add	ip, r1, #108	; 0x6c
   37204:	str	ip, [r3, #-48]	; 0xffffffd0
   37208:	str	r1, [r2]
   3720c:	ldr	r1, [r1]
   37210:	cmp	r1, #0
   37214:	bne	3716c <__flatcc_fb_build_schema@@Base+0x13e4>
   37218:	mov	r1, r8
   3721c:	mov	r0, #8
   37220:	str	r8, [sp, #104]	; 0x68
   37224:	sub	r3, r0, #1
   37228:	add	r2, sp, #120	; 0x78
   3722c:	uxth	r3, r3
   37230:	add	r2, r2, r3, lsl #2
   37234:	ldr	r2, [r2, #-84]	; 0xffffffac
   37238:	cmp	r2, #0
   3723c:	bne	3734c <__flatcc_fb_build_schema@@Base+0x15c4>
   37240:	cmp	r3, #0
   37244:	beq	3731c <__flatcc_fb_build_schema@@Base+0x1594>
   37248:	sub	r3, r0, #2
   3724c:	add	r2, sp, #120	; 0x78
   37250:	uxth	r3, r3
   37254:	add	r2, r2, r3, lsl #2
   37258:	ldr	r2, [r2, #-84]	; 0xffffffac
   3725c:	cmp	r2, #0
   37260:	bne	3734c <__flatcc_fb_build_schema@@Base+0x15c4>
   37264:	cmp	r3, #0
   37268:	beq	3731c <__flatcc_fb_build_schema@@Base+0x1594>
   3726c:	sub	r3, r0, #3
   37270:	add	r2, sp, #120	; 0x78
   37274:	uxth	r3, r3
   37278:	add	r2, r2, r3, lsl #2
   3727c:	ldr	r2, [r2, #-84]	; 0xffffffac
   37280:	cmp	r2, #0
   37284:	bne	3734c <__flatcc_fb_build_schema@@Base+0x15c4>
   37288:	cmp	r3, #0
   3728c:	beq	3731c <__flatcc_fb_build_schema@@Base+0x1594>
   37290:	sub	r3, r0, #4
   37294:	add	r2, sp, #120	; 0x78
   37298:	uxth	r3, r3
   3729c:	add	r2, r2, r3, lsl #2
   372a0:	ldr	r2, [r2, #-84]	; 0xffffffac
   372a4:	cmp	r2, #0
   372a8:	bne	3734c <__flatcc_fb_build_schema@@Base+0x15c4>
   372ac:	cmp	r3, #0
   372b0:	beq	3731c <__flatcc_fb_build_schema@@Base+0x1594>
   372b4:	sub	r3, r0, #5
   372b8:	add	r2, sp, #120	; 0x78
   372bc:	uxth	r3, r3
   372c0:	add	r2, r2, r3, lsl #2
   372c4:	ldr	r2, [r2, #-84]	; 0xffffffac
   372c8:	cmp	r2, #0
   372cc:	bne	3734c <__flatcc_fb_build_schema@@Base+0x15c4>
   372d0:	cmp	r3, #0
   372d4:	beq	3731c <__flatcc_fb_build_schema@@Base+0x1594>
   372d8:	sub	r2, r0, #6
   372dc:	uxth	r3, r2
   372e0:	add	r2, sp, #120	; 0x78
   372e4:	add	r2, r2, r3, lsl #2
   372e8:	ldr	r2, [r2, #-84]	; 0xffffffac
   372ec:	cmp	r2, #0
   372f0:	bne	3734c <__flatcc_fb_build_schema@@Base+0x15c4>
   372f4:	cmp	r3, #0
   372f8:	beq	3731c <__flatcc_fb_build_schema@@Base+0x1594>
   372fc:	sub	r3, r0, #7
   37300:	add	r2, sp, #120	; 0x78
   37304:	uxth	r0, r3
   37308:	mov	r3, r0
   3730c:	add	r2, r2, r0, lsl #2
   37310:	ldr	r2, [r2, #-84]	; 0xffffffac
   37314:	cmp	r2, #0
   37318:	bne	37350 <__flatcc_fb_build_schema@@Base+0x15c8>
   3731c:	ldr	r3, [sp, #36]	; 0x24
   37320:	str	r3, [r1]
   37324:	ldr	r3, [sp, #68]	; 0x44
   37328:	str	r3, [sl, #24]
   3732c:	b	3635c <__flatcc_fb_build_schema@@Base+0x5d4>
   37330:	add	r2, r1, #108	; 0x6c
   37334:	str	r1, [r3, #-84]	; 0xffffffac
   37338:	ldr	r1, [r1]
   3733c:	str	r2, [r3, #-48]	; 0xffffffd0
   37340:	cmp	r1, #0
   37344:	bne	3716c <__flatcc_fb_build_schema@@Base+0x13e4>
   37348:	b	37218 <__flatcc_fb_build_schema@@Base+0x1490>
   3734c:	mov	r0, r3
   37350:	cmp	r0, #0
   37354:	str	r2, [r1]
   37358:	beq	37324 <__flatcc_fb_build_schema@@Base+0x159c>
   3735c:	add	r2, sp, #120	; 0x78
   37360:	add	r3, r2, r3, lsl #2
   37364:	ldr	r1, [r3, #-48]	; 0xffffffd0
   37368:	b	37224 <__flatcc_fb_build_schema@@Base+0x149c>
   3736c:	ldrh	r2, [r2, #104]	; 0x68
   37370:	b	371bc <__flatcc_fb_build_schema@@Base+0x1434>
   37374:	mov	r7, #0
   37378:	mov	r6, #0
   3737c:	mov	r2, #14
   37380:	ldr	r5, [r4, #64]	; 0x40
   37384:	add	sl, sp, #72	; 0x48
   37388:	strd	r6, [r4, #88]	; 0x58
   3738c:	strh	r2, [r4, #24]
   37390:	str	r3, [r4, #16]
   37394:	mov	r0, sl
   37398:	mov	r2, #48	; 0x30
   3739c:	bl	13f9c <memset@plt>
   373a0:	cmp	r5, #0
   373a4:	ldr	r7, [sp, #24]
   373a8:	beq	3748c <__flatcc_fb_build_schema@@Base+0x1704>
   373ac:	mov	r6, #100	; 0x64
   373b0:	b	37410 <__flatcc_fb_build_schema@@Base+0x1688>
   373b4:	mov	r1, #1
   373b8:	ldr	r2, [sl, r3, lsl #2]
   373bc:	orr	r7, r7, r1, lsl r3
   373c0:	cmp	r2, #0
   373c4:	uxth	r7, r7
   373c8:	lsl	r1, r3, #2
   373cc:	beq	37494 <__flatcc_fb_build_schema@@Base+0x170c>
   373d0:	mov	r3, #0
   373d4:	ldr	r1, [r5, #4]
   373d8:	ldr	r2, [pc, #-1500]	; 36e04 <__flatcc_fb_build_schema@@Base+0x107c>
   373dc:	str	r3, [sp, #4]
   373e0:	str	r3, [sp]
   373e4:	mov	r0, fp
   373e8:	bl	2e72c <__flatcc_error_report@@Base>
   373ec:	subs	r6, r6, #1
   373f0:	ldr	r5, [r5]
   373f4:	movne	r2, #1
   373f8:	moveq	r2, #0
   373fc:	cmp	r5, #0
   37400:	moveq	r2, #0
   37404:	andne	r2, r2, #1
   37408:	cmp	r2, #0
   3740c:	beq	37468 <__flatcc_fb_build_schema@@Base+0x16e0>
   37410:	ldr	r3, [r5, #4]
   37414:	ldr	r0, [fp, #412]	; 0x19c
   37418:	ldm	r3, {r1, r2}
   3741c:	add	r0, r0, #16
   37420:	bl	3f318 <fb_name_table_find@@Base>
   37424:	cmp	r0, #0
   37428:	beq	37520 <__flatcc_fb_build_schema@@Base+0x1798>
   3742c:	ldr	r3, [r0, #24]
   37430:	cmp	r3, #0
   37434:	beq	373ec <__flatcc_fb_build_schema@@Base+0x1664>
   37438:	mov	r2, #4
   3743c:	asr	r2, r2, r3
   37440:	ands	r2, r2, #1
   37444:	bne	373b4 <__flatcc_fb_build_schema@@Base+0x162c>
   37448:	ldr	r1, [r5, #4]
   3744c:	mov	r3, r2
   37450:	str	r2, [sp, #4]
   37454:	str	r2, [sp]
   37458:	mov	r0, fp
   3745c:	ldr	r2, [pc, #-1628]	; 36e08 <__flatcc_fb_build_schema@@Base+0x1080>
   37460:	bl	2e72c <__flatcc_error_report@@Base>
   37464:	b	373ec <__flatcc_fb_build_schema@@Base+0x1664>
   37468:	cmp	r5, #0
   3746c:	beq	3748c <__flatcc_fb_build_schema@@Base+0x1704>
   37470:	ldr	r1, [r5, #4]
   37474:	mov	r3, r2
   37478:	str	r2, [sp, #4]
   3747c:	str	r2, [sp]
   37480:	mov	r0, fp
   37484:	ldr	r2, [pc, #-1664]	; 36e0c <__flatcc_fb_build_schema@@Base+0x1084>
   37488:	bl	2e72c <__flatcc_error_report@@Base>
   3748c:	strh	r7, [r4, #72]	; 0x48
   37490:	b	36198 <__flatcc_fb_build_schema@@Base+0x410>
   37494:	ldr	r0, [pc, #-1676]	; 36e10 <__flatcc_fb_build_schema@@Base+0x1088>
   37498:	str	r5, [sl, r3, lsl #2]
   3749c:	add	r1, r0, r1
   374a0:	ldr	r0, [r1, #204]	; 0xcc
   374a4:	cmp	r0, #0
   374a8:	bne	375a8 <__flatcc_fb_build_schema@@Base+0x1820>
   374ac:	ldrh	r3, [r5, #16]
   374b0:	cmp	r3, #0
   374b4:	beq	373ec <__flatcc_fb_build_schema@@Base+0x1664>
   374b8:	ldr	r1, [r5, #4]
   374bc:	mov	r3, r0
   374c0:	str	r0, [sp, #4]
   374c4:	str	r0, [sp]
   374c8:	ldr	r2, [pc, #-1724]	; 36e14 <__flatcc_fb_build_schema@@Base+0x108c>
   374cc:	mov	r0, fp
   374d0:	bl	2e72c <__flatcc_error_report@@Base>
   374d4:	b	373ec <__flatcc_fb_build_schema@@Base+0x1664>
   374d8:	ldr	r1, [r4, #16]
   374dc:	ldr	r0, [sp, #16]
   374e0:	bl	275b4 <ptr_set_find_item@@Base>
   374e4:	cmp	r0, #0
   374e8:	beq	36d74 <__flatcc_fb_build_schema@@Base+0xfec>
   374ec:	ldr	r3, [fp, #176]	; 0xb0
   374f0:	str	r4, [fp, #404]	; 0x194
   374f4:	cmp	r3, #0
   374f8:	beq	37684 <__flatcc_fb_build_schema@@Base+0x18fc>
   374fc:	ldrh	r3, [r4, #8]
   37500:	cmp	r3, #1
   37504:	bls	36430 <__flatcc_fb_build_schema@@Base+0x6a8>
   37508:	mov	r3, #0
   3750c:	ldr	r2, [pc, #-1788]	; 36e18 <__flatcc_fb_build_schema@@Base+0x1090>
   37510:	ldr	r1, [fp, #400]	; 0x190
   37514:	mov	r0, fp
   37518:	bl	2f6ec <error_ref_sym@@Base>
   3751c:	b	36430 <__flatcc_fb_build_schema@@Base+0x6a8>
   37520:	ldr	r1, [r5, #4]
   37524:	mov	r3, r0
   37528:	str	r0, [sp, #4]
   3752c:	str	r0, [sp]
   37530:	ldr	r2, [pc, #-1820]	; 36e1c <__flatcc_fb_build_schema@@Base+0x1094>
   37534:	mov	r0, fp
   37538:	bl	2e72c <__flatcc_error_report@@Base>
   3753c:	b	373ec <__flatcc_fb_build_schema@@Base+0x1664>
   37540:	ldr	r1, [r4, #4]
   37544:	mov	r3, r0
   37548:	str	r0, [sp, #4]
   3754c:	str	r0, [sp]
   37550:	ldr	r2, [pc, #-1848]	; 36e20 <__flatcc_fb_build_schema@@Base+0x1098>
   37554:	mov	r0, fp
   37558:	ldr	sl, [sp, #20]
   3755c:	bl	2e72c <__flatcc_error_report@@Base>
   37560:	b	36f38 <__flatcc_fb_build_schema@@Base+0x11b0>
   37564:	ldrh	r3, [r4, #16]
   37568:	cmp	r3, #2
   3756c:	beq	364d4 <__flatcc_fb_build_schema@@Base+0x74c>
   37570:	ldr	r1, [r4, #4]
   37574:	mov	r3, r0
   37578:	str	r0, [sp, #4]
   3757c:	str	r0, [sp]
   37580:	mov	r2, r7
   37584:	mov	r0, fp
   37588:	bl	2e72c <__flatcc_error_report@@Base>
   3758c:	b	364d4 <__flatcc_fb_build_schema@@Base+0x74c>
   37590:	ldr	r1, [sl, #16]
   37594:	ldr	r0, [sp, #16]
   37598:	bl	275b4 <ptr_set_find_item@@Base>
   3759c:	cmp	r0, #0
   375a0:	bne	36ee0 <__flatcc_fb_build_schema@@Base+0x1158>
   375a4:	b	362ac <__flatcc_fb_build_schema@@Base+0x524>
   375a8:	cmp	r0, #2
   375ac:	beq	376fc <__flatcc_fb_build_schema@@Base+0x1974>
   375b0:	cmp	r0, #5
   375b4:	bne	37894 <__flatcc_fb_build_schema@@Base+0x1b0c>
   375b8:	ldrh	r3, [r5, #16]
   375bc:	cmp	r3, #5
   375c0:	beq	373ec <__flatcc_fb_build_schema@@Base+0x1664>
   375c4:	ldr	r1, [r5, #4]
   375c8:	mov	r3, r2
   375cc:	str	r2, [sp, #4]
   375d0:	str	r2, [sp]
   375d4:	mov	r0, fp
   375d8:	ldr	r2, [pc, #-1980]	; 36e24 <__flatcc_fb_build_schema@@Base+0x109c>
   375dc:	bl	2e72c <__flatcc_error_report@@Base>
   375e0:	b	373ec <__flatcc_fb_build_schema@@Base+0x1664>
   375e4:	ldrh	r3, [r6, #24]
   375e8:	strh	r4, [r6, #72]	; 0x48
   375ec:	cmp	r3, #8
   375f0:	bne	3679c <__flatcc_fb_build_schema@@Base+0xa14>
   375f4:	b	3693c <__flatcc_fb_build_schema@@Base+0xbb4>
   375f8:	ldrh	r3, [r6, #72]	; 0x48
   375fc:	tst	r3, #128	; 0x80
   37600:	beq	3693c <__flatcc_fb_build_schema@@Base+0xbb4>
   37604:	mov	r3, #0
   37608:	ldr	r1, [r6, #4]
   3760c:	ldr	r2, [pc, #-2008]	; 36e3c <__flatcc_fb_build_schema@@Base+0x10b4>
   37610:	str	r3, [sp, #4]
   37614:	str	r3, [sp]
   37618:	mov	r0, fp
   3761c:	ldr	sl, [sp, #20]
   37620:	bl	2e72c <__flatcc_error_report@@Base>
   37624:	strh	r4, [r6, #24]
   37628:	b	36098 <__flatcc_fb_build_schema@@Base+0x310>
   3762c:	cmp	r2, #4
   37630:	bne	377a4 <__flatcc_fb_build_schema@@Base+0x1a1c>
   37634:	ldrh	r3, [r4, #16]
   37638:	sub	r3, r3, #4
   3763c:	cmp	r3, #1
   37640:	bls	366ac <__flatcc_fb_build_schema@@Base+0x924>
   37644:	ldr	r1, [r4, #4]
   37648:	mov	r3, r0
   3764c:	str	r0, [sp, #4]
   37650:	str	r0, [sp]
   37654:	ldr	r2, [pc, #-2048]	; 36e5c <__flatcc_fb_build_schema@@Base+0x10d4>
   37658:	mov	r0, fp
   3765c:	bl	2e72c <__flatcc_error_report@@Base>
   37660:	b	366ac <__flatcc_fb_build_schema@@Base+0x924>
   37664:	ldr	r1, [r3, #16]
   37668:	ldr	r0, [sp, #16]
   3766c:	str	r3, [sp, #28]
   37670:	bl	275b4 <ptr_set_find_item@@Base>
   37674:	ldr	r3, [sp, #28]
   37678:	cmp	r0, #0
   3767c:	bne	370e0 <__flatcc_fb_build_schema@@Base+0x1358>
   37680:	b	37000 <__flatcc_fb_build_schema@@Base+0x1278>
   37684:	ldrh	r2, [r4, #8]
   37688:	cmp	r2, #0
   3768c:	beq	36430 <__flatcc_fb_build_schema@@Base+0x6a8>
   37690:	ldr	r2, [pc, #-2160]	; 36e28 <__flatcc_fb_build_schema@@Base+0x10a0>
   37694:	ldr	r1, [fp, #400]	; 0x190
   37698:	mov	r0, fp
   3769c:	bl	2f6ec <error_ref_sym@@Base>
   376a0:	b	36430 <__flatcc_fb_build_schema@@Base+0x6a8>
   376a4:	add	r2, sp, #120	; 0x78
   376a8:	str	ip, [r2, #-88]!	; 0xffffffa8
   376ac:	b	376b4 <__flatcc_fb_build_schema@@Base+0x192c>
   376b0:	mov	r6, r3
   376b4:	ldr	r3, [r6]
   376b8:	str	r6, [r2]
   376bc:	cmp	r3, #0
   376c0:	add	r2, r6, #108	; 0x6c
   376c4:	bne	376b0 <__flatcc_fb_build_schema@@Base+0x1928>
   376c8:	str	r3, [r6, #108]	; 0x6c
   376cc:	ldr	r3, [sp, #32]
   376d0:	b	37328 <__flatcc_fb_build_schema@@Base+0x15a0>
   376d4:	ldr	r2, [fp, #208]	; 0xd0
   376d8:	cmp	r2, #0
   376dc:	beq	36438 <__flatcc_fb_build_schema@@Base+0x6b0>
   376e0:	str	r3, [sp, #4]
   376e4:	str	r3, [sp]
   376e8:	mov	r1, r3
   376ec:	ldr	r2, [pc, #-2248]	; 36e2c <__flatcc_fb_build_schema@@Base+0x10a4>
   376f0:	mov	r0, fp
   376f4:	bl	2e72c <__flatcc_error_report@@Base>
   376f8:	b	36438 <__flatcc_fb_build_schema@@Base+0x6b0>
   376fc:	ldrh	r3, [r5, #16]
   37700:	cmp	r3, #2
   37704:	beq	373ec <__flatcc_fb_build_schema@@Base+0x1664>
   37708:	ldr	r1, [r5, #4]
   3770c:	mov	r3, r2
   37710:	str	r2, [sp, #4]
   37714:	str	r2, [sp]
   37718:	mov	r0, fp
   3771c:	ldr	r2, [pc, #-2292]	; 36e30 <__flatcc_fb_build_schema@@Base+0x10a8>
   37720:	bl	2e72c <__flatcc_error_report@@Base>
   37724:	b	373ec <__flatcc_fb_build_schema@@Base+0x1664>
   37728:	str	r6, [r5, #88]	; 0x58
   3772c:	str	sl, [r5, #16]
   37730:	b	35de0 <__flatcc_fb_build_schema@@Base+0x58>
   37734:	ldr	r0, [sp, #16]
   37738:	ldr	r1, [r4, #16]
   3773c:	bl	275b4 <ptr_set_find_item@@Base>
   37740:	cmp	r0, #0
   37744:	bne	374ec <__flatcc_fb_build_schema@@Base+0x1764>
   37748:	b	36410 <__flatcc_fb_build_schema@@Base+0x688>
   3774c:	mov	r3, #0
   37750:	ldr	r1, [sl, #4]
   37754:	ldr	r2, [pc, #-2344]	; 36e34 <__flatcc_fb_build_schema@@Base+0x10ac>
   37758:	str	r3, [sp, #4]
   3775c:	str	r3, [sp]
   37760:	mov	r0, fp
   37764:	bl	2e72c <__flatcc_error_report@@Base>
   37768:	b	36098 <__flatcc_fb_build_schema@@Base+0x310>
   3776c:	ldr	r1, [r6, #4]
   37770:	mov	r3, r0
   37774:	str	r0, [sp, #4]
   37778:	str	r0, [sp]
   3777c:	ldr	r2, [pc, #-2380]	; 36e38 <__flatcc_fb_build_schema@@Base+0x10b0>
   37780:	mov	r0, fp
   37784:	ldr	sl, [sp, #20]
   37788:	bl	2e72c <__flatcc_error_report@@Base>
   3778c:	b	36098 <__flatcc_fb_build_schema@@Base+0x310>
   37790:	ldr	r3, [fp, #396]	; 0x18c
   37794:	cmp	r3, #0
   37798:	bne	36d28 <__flatcc_fb_build_schema@@Base+0xfa0>
   3779c:	str	r3, [fp, #396]	; 0x18c
   377a0:	b	36368 <__flatcc_fb_build_schema@@Base+0x5e0>
   377a4:	cmp	r2, #6
   377a8:	bne	366ac <__flatcc_fb_build_schema@@Base+0x924>
   377ac:	ldrh	r3, [r4, #16]
   377b0:	cmp	r3, #6
   377b4:	beq	366ac <__flatcc_fb_build_schema@@Base+0x924>
   377b8:	mov	r3, #0
   377bc:	ldr	r1, [r4, #4]
   377c0:	ldr	r2, [pc, #-2396]	; 36e6c <__flatcc_fb_build_schema@@Base+0x10e4>
   377c4:	str	r3, [sp, #4]
   377c8:	str	r3, [sp]
   377cc:	mov	r0, fp
   377d0:	bl	2e72c <__flatcc_error_report@@Base>
   377d4:	b	366ac <__flatcc_fb_build_schema@@Base+0x924>
   377d8:	ldr	r1, [r6, #4]
   377dc:	mov	r3, r2
   377e0:	str	r2, [sp, #4]
   377e4:	str	r2, [sp]
   377e8:	mov	r0, fp
   377ec:	ldr	r2, [pc, #-2488]	; 36e3c <__flatcc_fb_build_schema@@Base+0x10b4>
   377f0:	ldr	sl, [sp, #20]
   377f4:	bl	2e72c <__flatcc_error_report@@Base>
   377f8:	mov	r3, #1
   377fc:	strh	r3, [r6, #24]
   37800:	b	36098 <__flatcc_fb_build_schema@@Base+0x310>
   37804:	mov	r2, #0
   37808:	ldr	r3, [r8, #4]
   3780c:	ldr	r1, [r6, #4]
   37810:	mov	r0, fp
   37814:	str	r2, [sp, #4]
   37818:	str	r2, [sp]
   3781c:	ldr	r2, [pc, #-2532]	; 36e40 <__flatcc_fb_build_schema@@Base+0x10b8>
   37820:	ldr	sl, [sp, #20]
   37824:	bl	2e72c <__flatcc_error_report@@Base>
   37828:	mov	r3, #1
   3782c:	strh	r3, [r6, #24]
   37830:	b	36098 <__flatcc_fb_build_schema@@Base+0x310>
   37834:	ldr	r3, [pc, #-2552]	; 36e44 <__flatcc_fb_build_schema@@Base+0x10bc>
   37838:	ldr	r2, [pc, #-2552]	; 36e48 <__flatcc_fb_build_schema@@Base+0x10c0>
   3783c:	ldr	r1, [pc, #-2504]	; 36e7c <__flatcc_fb_build_schema@@Base+0x10f4>
   37840:	ldr	r0, [pc, #-2556]	; 36e4c <__flatcc_fb_build_schema@@Base+0x10c4>
   37844:	bl	14038 <__assert_fail@plt>
   37848:	ldr	r3, [pc, #-2560]	; 36e50 <__flatcc_fb_build_schema@@Base+0x10c8>
   3784c:	mov	r2, #34	; 0x22
   37850:	mov	r1, #1
   37854:	ldr	r3, [r3]
   37858:	ldr	r0, [pc, #-2572]	; 36e54 <__flatcc_fb_build_schema@@Base+0x10cc>
   3785c:	bl	13f18 <fwrite@plt>
   37860:	mov	r0, #1
   37864:	bl	13f6c <exit@plt>
   37868:	ldr	r3, [r8, #4]
   3786c:	ldr	r1, [r6, #4]
   37870:	mov	r0, fp
   37874:	str	r2, [sp, #4]
   37878:	str	r2, [sp]
   3787c:	ldr	r2, [pc, #-2604]	; 36e58 <__flatcc_fb_build_schema@@Base+0x10d0>
   37880:	ldr	sl, [sp, #20]
   37884:	bl	2e72c <__flatcc_error_report@@Base>
   37888:	mov	r3, #1
   3788c:	strh	r3, [r6, #24]
   37890:	b	36098 <__flatcc_fb_build_schema@@Base+0x310>
   37894:	cmp	r0, #4
   37898:	bne	378e0 <__flatcc_fb_build_schema@@Base+0x1b58>
   3789c:	ldrh	r3, [r5, #16]
   378a0:	sub	r3, r3, #4
   378a4:	cmp	r3, #1
   378a8:	bls	373ec <__flatcc_fb_build_schema@@Base+0x1664>
   378ac:	ldr	r1, [r5, #4]
   378b0:	mov	r3, r2
   378b4:	str	r2, [sp, #4]
   378b8:	str	r2, [sp]
   378bc:	mov	r0, fp
   378c0:	ldr	r2, [pc, #-2668]	; 36e5c <__flatcc_fb_build_schema@@Base+0x10d4>
   378c4:	bl	2e72c <__flatcc_error_report@@Base>
   378c8:	b	373ec <__flatcc_fb_build_schema@@Base+0x1664>
   378cc:	ldr	r3, [pc, #-2676]	; 36e60 <__flatcc_fb_build_schema@@Base+0x10d8>
   378d0:	ldr	r2, [pc, #-2676]	; 36e64 <__flatcc_fb_build_schema@@Base+0x10dc>
   378d4:	ldr	r1, [pc, #-2656]	; 36e7c <__flatcc_fb_build_schema@@Base+0x10f4>
   378d8:	ldr	r0, [pc, #-2680]	; 36e68 <__flatcc_fb_build_schema@@Base+0x10e0>
   378dc:	bl	14038 <__assert_fail@plt>
   378e0:	cmp	r0, #6
   378e4:	bne	373ec <__flatcc_fb_build_schema@@Base+0x1664>
   378e8:	ldrh	r3, [r5, #16]
   378ec:	cmp	r3, #6
   378f0:	beq	373ec <__flatcc_fb_build_schema@@Base+0x1664>
   378f4:	mov	r3, #0
   378f8:	ldr	r1, [r5, #4]
   378fc:	ldr	r2, [pc, #-2712]	; 36e6c <__flatcc_fb_build_schema@@Base+0x10e4>
   37900:	str	r3, [sp, #4]
   37904:	str	r3, [sp]
   37908:	mov	r0, fp
   3790c:	bl	2e72c <__flatcc_error_report@@Base>
   37910:	b	373ec <__flatcc_fb_build_schema@@Base+0x1664>
   37914:	cmp	r2, #6
   37918:	bne	364d4 <__flatcc_fb_build_schema@@Base+0x74c>
   3791c:	ldrh	r3, [r4, #16]
   37920:	cmp	r3, #6
   37924:	beq	364d4 <__flatcc_fb_build_schema@@Base+0x74c>
   37928:	mov	r3, #0
   3792c:	ldr	r1, [r4, #4]
   37930:	ldr	r2, [pc, #-2764]	; 36e6c <__flatcc_fb_build_schema@@Base+0x10e4>
   37934:	str	r3, [sp, #4]
   37938:	str	r3, [sp]
   3793c:	mov	r0, fp
   37940:	bl	2e72c <__flatcc_error_report@@Base>
   37944:	b	364d4 <__flatcc_fb_build_schema@@Base+0x74c>
   37948:	ldr	r3, [pc, #-2784]	; 36e70 <__flatcc_fb_build_schema@@Base+0x10e8>
   3794c:	ldr	r2, [pc, #-2784]	; 36e74 <__flatcc_fb_build_schema@@Base+0x10ec>
   37950:	ldr	r1, [pc, #-2780]	; 36e7c <__flatcc_fb_build_schema@@Base+0x10f4>
   37954:	ldr	r0, [pc, #-2788]	; 36e78 <__flatcc_fb_build_schema@@Base+0x10f0>
   37958:	bl	14038 <__assert_fail@plt>

0003795c <__flatcc_fb_coerce_scalar_type@@Base>:
   3795c:	ldrh	ip, [r3, #8]
   37960:	cmp	ip, #0
   37964:	beq	37a74 <__flatcc_fb_coerce_scalar_type@@Base+0x118>
   37968:	push	{r4, r5, r6, r8, r9, sl, fp, lr}
   3796c:	vpush	{d8}
   37970:	cmp	ip, #4
   37974:	mov	r6, r1
   37978:	mov	r5, r0
   3797c:	sub	sp, sp, #8
   37980:	mov	r4, r3
   37984:	beq	37a14 <__flatcc_fb_coerce_scalar_type@@Base+0xb8>
   37988:	cmp	ip, #1
   3798c:	beq	37a64 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37990:	cmp	r2, #5
   37994:	sub	r3, ip, #6
   37998:	clz	r3, r3
   3799c:	lsr	r3, r3, #5
   379a0:	moveq	r3, #0
   379a4:	cmp	r3, #0
   379a8:	beq	37a28 <__flatcc_fb_coerce_scalar_type@@Base+0xcc>
   379ac:	ldr	r3, [r0, #144]	; 0x90
   379b0:	cmp	r3, #0
   379b4:	beq	37a28 <__flatcc_fb_coerce_scalar_type@@Base+0xcc>
   379b8:	ldrb	r0, [r4]
   379bc:	mov	r1, #0
   379c0:	cmp	r1, #0
   379c4:	mov	r3, #5
   379c8:	cmpeq	r0, #1
   379cc:	strd	r0, [r4]
   379d0:	strh	r3, [r4, #8]
   379d4:	bhi	38134 <__flatcc_fb_coerce_scalar_type@@Base+0x7d8>
   379d8:	sub	r2, r2, #1
   379dc:	cmp	r2, #10
   379e0:	ldrls	pc, [pc, r2, lsl #2]
   379e4:	b	37e0c <__flatcc_fb_coerce_scalar_type@@Base+0x4b0>
   379e8:	andeq	r7, r3, r4, ror #20
   379ec:			; <UNDEFINED> instruction: 0x00037ab8
   379f0:	andeq	r7, r3, r4, lsl #22
   379f4:	andeq	r7, r3, r0, asr fp
   379f8:	andeq	r7, r3, ip, asr #26
   379fc:	ldrdeq	r7, [r3], -r8
   37a00:	andeq	r7, r3, ip, lsr ip
   37a04:	andeq	r7, r3, ip, lsl #24
   37a08:	andeq	r7, r3, r0, lsl sp
   37a0c:	muleq	r3, r4, sp
   37a10:	ldrdeq	r7, [r3], -r0
   37a14:	ldrd	r0, [r3]
   37a18:	cmp	r0, #0
   37a1c:	sbcs	r3, r1, #0
   37a20:	movge	ip, #5
   37a24:	strhge	ip, [r4, #8]
   37a28:	sub	r2, r2, #1
   37a2c:	cmp	r2, #10
   37a30:	ldrls	pc, [pc, r2, lsl #2]
   37a34:	b	37e0c <__flatcc_fb_coerce_scalar_type@@Base+0x4b0>
   37a38:	andeq	r7, r3, ip, ror sl
   37a3c:			; <UNDEFINED> instruction: 0x00037ab0
   37a40:	strdeq	r7, [r3], -ip
   37a44:	andeq	r7, r3, r8, asr #22
   37a48:	andeq	r7, r3, ip, lsl #23
   37a4c:	andeq	r7, r3, r8, asr #23
   37a50:	andeq	r7, r3, ip, lsr #24
   37a54:	strdeq	r7, [r3], -ip
   37a58:	andeq	r7, r3, r0, lsl #26
   37a5c:	andeq	r7, r3, r8, ror ip
   37a60:			; <UNDEFINED> instruction: 0x00037cbc
   37a64:	mov	r0, #0
   37a68:	add	sp, sp, #8
   37a6c:	vpop	{d8}
   37a70:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   37a74:	mov	r0, #0
   37a78:	bx	lr
   37a7c:	cmp	ip, #5
   37a80:	beq	37a64 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37a84:	mov	r3, #0
   37a88:	ldr	r1, [r6, #4]
   37a8c:	mov	r0, r5
   37a90:	str	r3, [sp, #4]
   37a94:	str	r3, [sp]
   37a98:	ldr	r2, [pc, #1704]	; 38148 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   37a9c:	bl	2e72c <__flatcc_error_report@@Base>
   37aa0:	mov	r3, #1
   37aa4:	strh	r3, [r4, #8]
   37aa8:	mvn	r0, #0
   37aac:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37ab0:	cmp	ip, #5
   37ab4:	bne	37fa8 <__flatcc_fb_coerce_scalar_type@@Base+0x64c>
   37ab8:	ldrd	r2, [r4]
   37abc:	mov	r1, #0
   37ac0:	mvn	r0, #0
   37ac4:	cmp	r3, r1
   37ac8:	cmpeq	r2, r0
   37acc:	bls	37a64 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37ad0:	mov	r3, #0
   37ad4:	ldr	r1, [r6, #4]
   37ad8:	mov	r0, r5
   37adc:	str	r3, [sp, #4]
   37ae0:	str	r3, [sp]
   37ae4:	ldr	r2, [pc, #1632]	; 3814c <__flatcc_fb_coerce_scalar_type@@Base+0x7f0>
   37ae8:	bl	2e72c <__flatcc_error_report@@Base>
   37aec:	mov	r3, #1
   37af0:	strh	r3, [r4, #8]
   37af4:	mvn	r0, #0
   37af8:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37afc:	cmp	ip, #5
   37b00:	bne	38000 <__flatcc_fb_coerce_scalar_type@@Base+0x6a4>
   37b04:	ldrd	r2, [r4]
   37b08:	ldr	r0, [pc, #1600]	; 38150 <__flatcc_fb_coerce_scalar_type@@Base+0x7f4>
   37b0c:	mov	r1, #0
   37b10:	cmp	r3, r1
   37b14:	cmpeq	r2, r0
   37b18:	bls	37a64 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37b1c:	mov	r3, #0
   37b20:	ldr	r1, [r6, #4]
   37b24:	mov	r0, r5
   37b28:	str	r3, [sp, #4]
   37b2c:	str	r3, [sp]
   37b30:	ldr	r2, [pc, #1564]	; 38154 <__flatcc_fb_coerce_scalar_type@@Base+0x7f8>
   37b34:	bl	2e72c <__flatcc_error_report@@Base>
   37b38:	mov	r3, #1
   37b3c:	strh	r3, [r4, #8]
   37b40:	mvn	r0, #0
   37b44:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37b48:	cmp	ip, #5
   37b4c:	bne	37fd4 <__flatcc_fb_coerce_scalar_type@@Base+0x678>
   37b50:	ldrd	r2, [r4]
   37b54:	cmp	r3, #0
   37b58:	cmpeq	r2, #255	; 0xff
   37b5c:	bls	37a64 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37b60:	mov	r3, #0
   37b64:	ldr	r1, [r6, #4]
   37b68:	mov	r0, r5
   37b6c:	str	r3, [sp, #4]
   37b70:	str	r3, [sp]
   37b74:	ldr	r2, [pc, #1500]	; 38158 <__flatcc_fb_coerce_scalar_type@@Base+0x7fc>
   37b78:	bl	2e72c <__flatcc_error_report@@Base>
   37b7c:	mov	r3, #1
   37b80:	strh	r3, [r4, #8]
   37b84:	mvn	r0, #0
   37b88:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37b8c:	cmp	ip, #5
   37b90:	beq	37d4c <__flatcc_fb_coerce_scalar_type@@Base+0x3f0>
   37b94:	cmp	ip, #6
   37b98:	beq	37a64 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37b9c:	mov	r3, #0
   37ba0:	ldr	r1, [r6, #4]
   37ba4:	mov	r0, r5
   37ba8:	str	r3, [sp, #4]
   37bac:	str	r3, [sp]
   37bb0:	ldr	r2, [pc, #1444]	; 3815c <__flatcc_fb_coerce_scalar_type@@Base+0x800>
   37bb4:	bl	2e72c <__flatcc_error_report@@Base>
   37bb8:	mov	r3, #1
   37bbc:	strh	r3, [r4, #8]
   37bc0:	mvn	r0, #0
   37bc4:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37bc8:	cmp	ip, #4
   37bcc:	beq	37a64 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37bd0:	cmp	ip, #5
   37bd4:	bne	3802c <__flatcc_fb_coerce_scalar_type@@Base+0x6d0>
   37bd8:	ldrd	r2, [r4]
   37bdc:	cmp	r2, #0
   37be0:	sbcs	r1, r3, #0
   37be4:	blt	38108 <__flatcc_fb_coerce_scalar_type@@Base+0x7ac>
   37be8:	mov	r1, #4
   37bec:	strd	r2, [r4]
   37bf0:	strh	r1, [r4, #8]
   37bf4:	mov	r0, #0
   37bf8:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37bfc:	cmp	ip, #4
   37c00:	beq	37e7c <__flatcc_fb_coerce_scalar_type@@Base+0x520>
   37c04:	cmp	ip, #5
   37c08:	bne	38058 <__flatcc_fb_coerce_scalar_type@@Base+0x6fc>
   37c0c:	ldrd	r2, [r4]
   37c10:	cmp	r2, #32768	; 0x8000
   37c14:	sbcs	r3, r3, #0
   37c18:	bge	380dc <__flatcc_fb_coerce_scalar_type@@Base+0x780>
   37c1c:	mov	r3, #4
   37c20:	strh	r3, [r4, #8]
   37c24:	mov	r0, #0
   37c28:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37c2c:	cmp	ip, #4
   37c30:	beq	37e38 <__flatcc_fb_coerce_scalar_type@@Base+0x4dc>
   37c34:	cmp	ip, #5
   37c38:	bne	38084 <__flatcc_fb_coerce_scalar_type@@Base+0x728>
   37c3c:	ldrd	r2, [r4]
   37c40:	cmp	r2, #-2147483648	; 0x80000000
   37c44:	sbcs	r3, r3, #0
   37c48:	blt	37c1c <__flatcc_fb_coerce_scalar_type@@Base+0x2c0>
   37c4c:	mov	r3, #0
   37c50:	ldr	r1, [r6, #4]
   37c54:	mov	r0, r5
   37c58:	str	r3, [sp, #4]
   37c5c:	str	r3, [sp]
   37c60:	ldr	r2, [pc, #1272]	; 38160 <__flatcc_fb_coerce_scalar_type@@Base+0x804>
   37c64:	bl	2e72c <__flatcc_error_report@@Base>
   37c68:	mov	r3, #1
   37c6c:	strh	r3, [r4, #8]
   37c70:	mvn	r0, #0
   37c74:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37c78:	cmp	ip, #4
   37c7c:	beq	37f04 <__flatcc_fb_coerce_scalar_type@@Base+0x5a8>
   37c80:	cmp	ip, #5
   37c84:	beq	37d94 <__flatcc_fb_coerce_scalar_type@@Base+0x438>
   37c88:	cmp	ip, #3
   37c8c:	beq	37a64 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37c90:	mov	r3, #0
   37c94:	ldr	r1, [r6, #4]
   37c98:	mov	r0, r5
   37c9c:	str	r3, [sp, #4]
   37ca0:	str	r3, [sp]
   37ca4:	ldr	r2, [pc, #1208]	; 38164 <__flatcc_fb_coerce_scalar_type@@Base+0x808>
   37ca8:	bl	2e72c <__flatcc_error_report@@Base>
   37cac:	mov	r3, #1
   37cb0:	strh	r3, [r4, #8]
   37cb4:	mvn	r0, #0
   37cb8:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37cbc:	cmp	ip, #4
   37cc0:	beq	37f58 <__flatcc_fb_coerce_scalar_type@@Base+0x5fc>
   37cc4:	cmp	ip, #5
   37cc8:	beq	37dd0 <__flatcc_fb_coerce_scalar_type@@Base+0x474>
   37ccc:	cmp	ip, #3
   37cd0:	beq	37a64 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37cd4:	mov	r3, #0
   37cd8:	ldr	r1, [r6, #4]
   37cdc:	mov	r0, r5
   37ce0:	str	r3, [sp, #4]
   37ce4:	str	r3, [sp]
   37ce8:	ldr	r2, [pc, #1144]	; 38168 <__flatcc_fb_coerce_scalar_type@@Base+0x80c>
   37cec:	bl	2e72c <__flatcc_error_report@@Base>
   37cf0:	mov	r3, #1
   37cf4:	strh	r3, [r4, #8]
   37cf8:	mvn	r0, #0
   37cfc:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37d00:	cmp	ip, #4
   37d04:	beq	37ec0 <__flatcc_fb_coerce_scalar_type@@Base+0x564>
   37d08:	cmp	ip, #5
   37d0c:	bne	380b0 <__flatcc_fb_coerce_scalar_type@@Base+0x754>
   37d10:	ldrd	r2, [r4]
   37d14:	cmp	r2, #128	; 0x80
   37d18:	sbcs	r3, r3, #0
   37d1c:	blt	37c1c <__flatcc_fb_coerce_scalar_type@@Base+0x2c0>
   37d20:	mov	r3, #0
   37d24:	ldr	r1, [r6, #4]
   37d28:	mov	r0, r5
   37d2c:	str	r3, [sp, #4]
   37d30:	str	r3, [sp]
   37d34:	ldr	r2, [pc, #1072]	; 3816c <__flatcc_fb_coerce_scalar_type@@Base+0x810>
   37d38:	bl	2e72c <__flatcc_error_report@@Base>
   37d3c:	mov	r3, #1
   37d40:	strh	r3, [r4, #8]
   37d44:	mvn	r0, #0
   37d48:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37d4c:	ldr	r3, [r5, #144]	; 0x90
   37d50:	cmp	r3, #0
   37d54:	beq	37b9c <__flatcc_fb_coerce_scalar_type@@Base+0x240>
   37d58:	ldrd	r2, [r4]
   37d5c:	cmp	r3, #0
   37d60:	cmpeq	r2, #1
   37d64:	bls	37a64 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37d68:	mov	r3, #0
   37d6c:	ldr	r1, [r6, #4]
   37d70:	mov	r0, r5
   37d74:	str	r3, [sp, #4]
   37d78:	str	r3, [sp]
   37d7c:	ldr	r2, [pc, #1004]	; 38170 <__flatcc_fb_coerce_scalar_type@@Base+0x814>
   37d80:	bl	2e72c <__flatcc_error_report@@Base>
   37d84:	mov	r3, #1
   37d88:	strh	r3, [r4, #8]
   37d8c:	mvn	r0, #0
   37d90:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37d94:	ldrd	r8, [r4]
   37d98:	mov	r0, r8
   37d9c:	mov	r1, r9
   37da0:	bl	403cc <fb_value_set_visit@@Base+0x3a4>
   37da4:	mov	sl, r0
   37da8:	mov	fp, r1
   37dac:	bl	40780 <fb_value_set_visit@@Base+0x758>
   37db0:	cmp	r9, r1
   37db4:	cmpeq	r8, r0
   37db8:	bne	37f2c <__flatcc_fb_coerce_scalar_type@@Base+0x5d0>
   37dbc:	mov	r3, #3
   37dc0:	strd	sl, [r4]
   37dc4:	strh	r3, [r4, #8]
   37dc8:	mov	r0, #0
   37dcc:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37dd0:	ldrd	r8, [r4]
   37dd4:	mov	r1, r9
   37dd8:	mov	r0, r8
   37ddc:	bl	40604 <fb_value_set_visit@@Base+0x5dc>
   37de0:	vmov	s16, r0
   37de4:	bl	40738 <fb_value_set_visit@@Base+0x710>
   37de8:	cmp	r9, r1
   37dec:	cmpeq	r8, r0
   37df0:	bne	37f7c <__flatcc_fb_coerce_scalar_type@@Base+0x620>
   37df4:	vcvt.f64.f32	d8, s16
   37df8:	mov	r3, #3
   37dfc:	strh	r3, [r4, #8]
   37e00:	mov	r0, #0
   37e04:	vstr	d8, [r4]
   37e08:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37e0c:	mov	r3, #0
   37e10:	ldr	r1, [r6, #4]
   37e14:	mov	r0, r5
   37e18:	str	r3, [sp, #4]
   37e1c:	str	r3, [sp]
   37e20:	ldr	r2, [pc, #844]	; 38174 <__flatcc_fb_coerce_scalar_type@@Base+0x818>
   37e24:	bl	2e72c <__flatcc_error_report@@Base>
   37e28:	mov	r3, #1
   37e2c:	strh	r3, [r4, #8]
   37e30:	mvn	r0, #0
   37e34:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37e38:	ldrd	r2, [r4]
   37e3c:	mov	r0, #-2147483648	; 0x80000000
   37e40:	mvn	r1, #0
   37e44:	cmp	r2, r0
   37e48:	sbcs	r3, r3, r1
   37e4c:	bge	37a64 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37e50:	mov	r3, #0
   37e54:	ldr	r1, [r6, #4]
   37e58:	mov	r0, r5
   37e5c:	str	r3, [sp, #4]
   37e60:	str	r3, [sp]
   37e64:	ldr	r2, [pc, #780]	; 38178 <__flatcc_fb_coerce_scalar_type@@Base+0x81c>
   37e68:	bl	2e72c <__flatcc_error_report@@Base>
   37e6c:	mov	r3, #1
   37e70:	strh	r3, [r4, #8]
   37e74:	mvn	r0, #0
   37e78:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37e7c:	ldrd	r2, [r4]
   37e80:	ldr	r0, [pc, #756]	; 3817c <__flatcc_fb_coerce_scalar_type@@Base+0x820>
   37e84:	mvn	r1, #0
   37e88:	cmp	r2, r0
   37e8c:	sbcs	r3, r3, r1
   37e90:	bge	37a64 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37e94:	mov	r3, #0
   37e98:	ldr	r1, [r6, #4]
   37e9c:	mov	r0, r5
   37ea0:	str	r3, [sp, #4]
   37ea4:	str	r3, [sp]
   37ea8:	ldr	r2, [pc, #720]	; 38180 <__flatcc_fb_coerce_scalar_type@@Base+0x824>
   37eac:	bl	2e72c <__flatcc_error_report@@Base>
   37eb0:	mov	r3, #1
   37eb4:	strh	r3, [r4, #8]
   37eb8:	mvn	r0, #0
   37ebc:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37ec0:	ldrd	r2, [r4]
   37ec4:	mvn	r0, #127	; 0x7f
   37ec8:	mvn	r1, #0
   37ecc:	cmp	r2, r0
   37ed0:	sbcs	r3, r3, r1
   37ed4:	bge	37a64 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37ed8:	mov	r3, #0
   37edc:	ldr	r1, [r6, #4]
   37ee0:	mov	r0, r5
   37ee4:	str	r3, [sp, #4]
   37ee8:	str	r3, [sp]
   37eec:	ldr	r2, [pc, #656]	; 38184 <__flatcc_fb_coerce_scalar_type@@Base+0x828>
   37ef0:	bl	2e72c <__flatcc_error_report@@Base>
   37ef4:	mov	r3, #1
   37ef8:	strh	r3, [r4, #8]
   37efc:	mvn	r0, #0
   37f00:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37f04:	ldrd	r8, [r4]
   37f08:	mov	r0, r8
   37f0c:	mov	r1, r9
   37f10:	bl	403e0 <fb_value_set_visit@@Base+0x3b8>
   37f14:	mov	sl, r0
   37f18:	mov	fp, r1
   37f1c:	bl	40708 <fb_value_set_visit@@Base+0x6e0>
   37f20:	cmp	r9, r1
   37f24:	cmpeq	r8, r0
   37f28:	beq	37dbc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   37f2c:	mov	r3, #0
   37f30:	ldr	r1, [r6, #4]
   37f34:	mov	r0, r5
   37f38:	str	r3, [sp, #4]
   37f3c:	str	r3, [sp]
   37f40:	ldr	r2, [pc, #576]	; 38188 <__flatcc_fb_coerce_scalar_type@@Base+0x82c>
   37f44:	bl	2e72c <__flatcc_error_report@@Base>
   37f48:	mov	r3, #1
   37f4c:	strh	r3, [r4, #8]
   37f50:	mvn	r0, #0
   37f54:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37f58:	ldrd	r8, [r4]
   37f5c:	mov	r1, r9
   37f60:	mov	r0, r8
   37f64:	bl	40614 <fb_value_set_visit@@Base+0x5ec>
   37f68:	vmov	s16, r0
   37f6c:	bl	406dc <fb_value_set_visit@@Base+0x6b4>
   37f70:	cmp	r9, r1
   37f74:	cmpeq	r8, r0
   37f78:	beq	37df4 <__flatcc_fb_coerce_scalar_type@@Base+0x498>
   37f7c:	mov	r3, #0
   37f80:	ldr	r1, [r6, #4]
   37f84:	mov	r0, r5
   37f88:	str	r3, [sp, #4]
   37f8c:	str	r3, [sp]
   37f90:	ldr	r2, [pc, #500]	; 3818c <__flatcc_fb_coerce_scalar_type@@Base+0x830>
   37f94:	bl	2e72c <__flatcc_error_report@@Base>
   37f98:	mov	r3, #1
   37f9c:	strh	r3, [r4, #8]
   37fa0:	mvn	r0, #0
   37fa4:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37fa8:	mov	r3, #0
   37fac:	ldr	r1, [r6, #4]
   37fb0:	mov	r0, r5
   37fb4:	str	r3, [sp, #4]
   37fb8:	str	r3, [sp]
   37fbc:	ldr	r2, [pc, #460]	; 38190 <__flatcc_fb_coerce_scalar_type@@Base+0x834>
   37fc0:	bl	2e72c <__flatcc_error_report@@Base>
   37fc4:	mov	r3, #1
   37fc8:	strh	r3, [r4, #8]
   37fcc:	mvn	r0, #0
   37fd0:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37fd4:	mov	r3, #0
   37fd8:	ldr	r1, [r6, #4]
   37fdc:	mov	r0, r5
   37fe0:	str	r3, [sp, #4]
   37fe4:	str	r3, [sp]
   37fe8:	ldr	r2, [pc, #420]	; 38194 <__flatcc_fb_coerce_scalar_type@@Base+0x838>
   37fec:	bl	2e72c <__flatcc_error_report@@Base>
   37ff0:	mov	r3, #1
   37ff4:	strh	r3, [r4, #8]
   37ff8:	mvn	r0, #0
   37ffc:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   38000:	mov	r3, #0
   38004:	ldr	r1, [r6, #4]
   38008:	mov	r0, r5
   3800c:	str	r3, [sp, #4]
   38010:	str	r3, [sp]
   38014:	ldr	r2, [pc, #380]	; 38198 <__flatcc_fb_coerce_scalar_type@@Base+0x83c>
   38018:	bl	2e72c <__flatcc_error_report@@Base>
   3801c:	mov	r3, #1
   38020:	strh	r3, [r4, #8]
   38024:	mvn	r0, #0
   38028:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   3802c:	mov	r3, #0
   38030:	ldr	r1, [r6, #4]
   38034:	mov	r0, r5
   38038:	str	r3, [sp, #4]
   3803c:	str	r3, [sp]
   38040:	ldr	r2, [pc, #340]	; 3819c <__flatcc_fb_coerce_scalar_type@@Base+0x840>
   38044:	bl	2e72c <__flatcc_error_report@@Base>
   38048:	mov	r3, #1
   3804c:	strh	r3, [r4, #8]
   38050:	mvn	r0, #0
   38054:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   38058:	mov	r3, #0
   3805c:	ldr	r1, [r6, #4]
   38060:	mov	r0, r5
   38064:	str	r3, [sp, #4]
   38068:	str	r3, [sp]
   3806c:	ldr	r2, [pc, #300]	; 381a0 <__flatcc_fb_coerce_scalar_type@@Base+0x844>
   38070:	bl	2e72c <__flatcc_error_report@@Base>
   38074:	mov	r3, #1
   38078:	strh	r3, [r4, #8]
   3807c:	mvn	r0, #0
   38080:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   38084:	mov	r3, #0
   38088:	ldr	r1, [r6, #4]
   3808c:	mov	r0, r5
   38090:	str	r3, [sp, #4]
   38094:	str	r3, [sp]
   38098:	ldr	r2, [pc, #260]	; 381a4 <__flatcc_fb_coerce_scalar_type@@Base+0x848>
   3809c:	bl	2e72c <__flatcc_error_report@@Base>
   380a0:	mov	r3, #1
   380a4:	strh	r3, [r4, #8]
   380a8:	mvn	r0, #0
   380ac:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   380b0:	mov	r3, #0
   380b4:	ldr	r1, [r6, #4]
   380b8:	mov	r0, r5
   380bc:	str	r3, [sp, #4]
   380c0:	str	r3, [sp]
   380c4:	ldr	r2, [pc, #220]	; 381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x84c>
   380c8:	bl	2e72c <__flatcc_error_report@@Base>
   380cc:	mov	r3, #1
   380d0:	strh	r3, [r4, #8]
   380d4:	mvn	r0, #0
   380d8:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   380dc:	mov	r3, #0
   380e0:	ldr	r1, [r6, #4]
   380e4:	mov	r0, r5
   380e8:	str	r3, [sp, #4]
   380ec:	str	r3, [sp]
   380f0:	ldr	r2, [pc, #180]	; 381ac <__flatcc_fb_coerce_scalar_type@@Base+0x850>
   380f4:	bl	2e72c <__flatcc_error_report@@Base>
   380f8:	mov	r3, #1
   380fc:	strh	r3, [r4, #8]
   38100:	mvn	r0, #0
   38104:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   38108:	mov	r3, #0
   3810c:	ldr	r1, [r6, #4]
   38110:	mov	r0, r5
   38114:	str	r3, [sp, #4]
   38118:	str	r3, [sp]
   3811c:	ldr	r2, [pc, #140]	; 381b0 <__flatcc_fb_coerce_scalar_type@@Base+0x854>
   38120:	bl	2e72c <__flatcc_error_report@@Base>
   38124:	mov	r3, #1
   38128:	strh	r3, [r4, #8]
   3812c:	mvn	r0, #0
   38130:	b	37a68 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   38134:	ldr	r3, [pc, #120]	; 381b4 <__flatcc_fb_coerce_scalar_type@@Base+0x858>
   38138:	mov	r2, #52	; 0x34
   3813c:	ldr	r1, [pc, #116]	; 381b8 <__flatcc_fb_coerce_scalar_type@@Base+0x85c>
   38140:	ldr	r0, [pc, #116]	; 381bc <__flatcc_fb_coerce_scalar_type@@Base+0x860>
   38144:	bl	14038 <__assert_fail@plt>
   38148:	andeq	sl, r5, r8, asr #30
   3814c:			; <UNDEFINED> instruction: 0x0005afb4
   38150:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   38154:	andeq	fp, r5, r0, lsl r0
   38158:	andeq	fp, r5, r8, rrx
   3815c:	andeq	fp, r5, r4, asr r2
   38160:	strdeq	fp, [r5], -r0
   38164:			; <UNDEFINED> instruction: 0x0005b2bc
   38168:	andeq	fp, r5, r8, lsr #6
   3816c:	andeq	fp, r5, r8, asr #3
   38170:	andeq	fp, r5, r4, lsl r2
   38174:	andeq	fp, r5, r0, ror #6
   38178:	ldrdeq	fp, [r5], -r4
   3817c:			; <UNDEFINED> instruction: 0xffff8000
   38180:	andeq	fp, r5, ip, lsr r1
   38184:	andeq	fp, r5, ip, lsr #3
   38188:	andeq	fp, r5, ip, lsl #5
   3818c:	strdeq	fp, [r5], -r8
   38190:	andeq	sl, r5, ip, ror pc
   38194:	andeq	fp, r5, r0, lsr r0
   38198:	ldrdeq	sl, [r5], -r4
   3819c:	andeq	fp, r5, r8, lsr #1
   381a0:	andeq	fp, r5, ip, ror r1
   381a4:	andeq	fp, r5, ip, lsl #2
   381a8:	andeq	fp, r5, r4, ror #3
   381ac:	andeq	fp, r5, ip, asr r1
   381b0:	andeq	fp, r5, r8, lsl #1
   381b4:	andeq	sl, r5, r0, asr #29
   381b8:	andeq	sl, r5, r0, ror #29
   381bc:	andeq	sl, r5, r8, lsr #30

000381c0 <flatcc_builder_default_alloc@@Base>:
   381c0:	push	{r4, r5, r6, r7, r8, lr}
   381c4:	subs	r5, r2, #0
   381c8:	mov	r6, r1
   381cc:	bne	381f0 <flatcc_builder_default_alloc@@Base+0x30>
   381d0:	ldr	r0, [r1]
   381d4:	cmp	r0, #0
   381d8:	popeq	{r4, r5, r6, r7, r8, pc}
   381dc:	bl	13ed0 <free@plt>
   381e0:	str	r5, [r6]
   381e4:	str	r5, [r6, #4]
   381e8:	mov	r0, r5
   381ec:	pop	{r4, r5, r6, r7, r8, pc}
   381f0:	mov	r7, r3
   381f4:	ldr	r3, [sp, #24]
   381f8:	sub	r2, r3, #1
   381fc:	cmp	r2, #6
   38200:	ldrls	pc, [pc, r2, lsl #2]
   38204:	b	382a0 <flatcc_builder_default_alloc@@Base+0xe0>
   38208:	andeq	r8, r3, r4, ror r2
   3820c:	andeq	r8, r3, r0, lsr #5
   38210:	andeq	r8, r3, r0, lsr #5
   38214:	muleq	r3, r8, r2
   38218:	andeq	r8, r3, r4, lsr #4
   3821c:	andeq	r8, r3, r0, lsr #5
   38220:	muleq	r3, r0, r2
   38224:	mov	r4, r5
   38228:	ldr	r3, [r6, #4]
   3822c:	cmp	r5, r3
   38230:	bhi	3823c <flatcc_builder_default_alloc@@Base+0x7c>
   38234:	cmp	r4, r3, lsr #1
   38238:	bls	382a8 <flatcc_builder_default_alloc@@Base+0xe8>
   3823c:	mov	r1, r4
   38240:	ldr	r0, [r6]
   38244:	bl	13f0c <realloc@plt>
   38248:	subs	r5, r0, #0
   3824c:	beq	382c4 <flatcc_builder_default_alloc@@Base+0x104>
   38250:	cmp	r7, #0
   38254:	beq	38264 <flatcc_builder_default_alloc@@Base+0xa4>
   38258:	ldr	r0, [r6, #4]
   3825c:	cmp	r0, r4
   38260:	bcc	382b0 <flatcc_builder_default_alloc@@Base+0xf0>
   38264:	str	r5, [r6]
   38268:	str	r4, [r6, #4]
   3826c:	mov	r0, #0
   38270:	pop	{r4, r5, r6, r7, r8, pc}
   38274:	mov	r4, #256	; 0x100
   38278:	cmp	r5, r4
   3827c:	bls	38228 <flatcc_builder_default_alloc@@Base+0x68>
   38280:	lsl	r4, r4, #1
   38284:	cmp	r5, r4
   38288:	bhi	38280 <flatcc_builder_default_alloc@@Base+0xc0>
   3828c:	b	38228 <flatcc_builder_default_alloc@@Base+0x68>
   38290:	mov	r4, #64	; 0x40
   38294:	b	38278 <flatcc_builder_default_alloc@@Base+0xb8>
   38298:	mov	r4, #288	; 0x120
   3829c:	b	38278 <flatcc_builder_default_alloc@@Base+0xb8>
   382a0:	mov	r4, #32
   382a4:	b	38278 <flatcc_builder_default_alloc@@Base+0xb8>
   382a8:	mov	r0, #0
   382ac:	pop	{r4, r5, r6, r7, r8, pc}
   382b0:	sub	r2, r4, r0
   382b4:	mov	r1, #0
   382b8:	add	r0, r5, r0
   382bc:	bl	13f9c <memset@plt>
   382c0:	b	38264 <flatcc_builder_default_alloc@@Base+0xa4>
   382c4:	mvn	r0, #0
   382c8:	pop	{r4, r5, r6, r7, r8, pc}
   382cc:	push	{r4, r5, r6, r7, r8, lr}
   382d0:	mov	r5, r0
   382d4:	ldrh	r0, [r0, #128]	; 0x80
   382d8:	sub	sp, sp, #88	; 0x58
   382dc:	mov	r7, #4
   382e0:	cmp	r0, #3
   382e4:	movls	r0, #4
   382e8:	strhls	r0, [r5, #128]	; 0x80
   382ec:	ldr	r0, [r5, #136]	; 0x88
   382f0:	lsls	r4, r2, #2
   382f4:	mov	r8, #1
   382f8:	str	r7, [sp, #16]
   382fc:	str	r8, [sp, #20]
   38300:	and	ip, r0, #3
   38304:	movne	r8, #2
   38308:	str	r7, [sp, #28]
   3830c:	addne	r7, r4, r7
   38310:	strne	r4, [sp, #36]	; 0x24
   38314:	add	lr, sp, #12
   38318:	strne	r1, [sp, #32]
   3831c:	strne	r7, [sp, #16]
   38320:	strne	r8, [sp, #20]
   38324:	movne	r4, #3
   38328:	moveq	r4, #2
   3832c:	cmp	ip, #0
   38330:	str	r2, [sp, #12]
   38334:	str	lr, [sp, #24]
   38338:	beq	38364 <flatcc_builder_default_alloc@@Base+0x1a4>
   3833c:	add	lr, r8, #1
   38340:	add	r8, sp, #88	; 0x58
   38344:	add	lr, r8, lr, lsl #3
   38348:	ldr	r6, [pc, #320]	; 38490 <flatcc_builder_default_alloc@@Base+0x2d0>
   3834c:	mov	r8, r4
   38350:	add	r7, r7, ip
   38354:	str	ip, [lr, #-68]	; 0xffffffbc
   38358:	str	r7, [sp, #16]
   3835c:	str	r4, [sp, #20]
   38360:	str	r6, [lr, #-72]	; 0xffffffb8
   38364:	cmp	r2, #0
   38368:	sub	r4, r0, r7
   3836c:	beq	38400 <flatcc_builder_default_alloc@@Base+0x240>
   38370:	cmp	r3, #0
   38374:	addne	r6, r3, r2
   38378:	mvnne	r0, #3
   3837c:	bne	383b0 <flatcc_builder_default_alloc@@Base+0x1f0>
   38380:	b	3843c <flatcc_builder_default_alloc@@Base+0x27c>
   38384:	sub	lr, r0, r4
   38388:	add	ip, lr, ip
   3838c:	str	ip, [r1]
   38390:	ldrb	ip, [r3]
   38394:	cmp	ip, #0
   38398:	beq	38464 <flatcc_builder_default_alloc@@Base+0x2a4>
   3839c:	add	r3, r3, #1
   383a0:	cmp	r3, r6
   383a4:	add	r1, r1, #4
   383a8:	sub	r0, r0, #4
   383ac:	beq	383f8 <flatcc_builder_default_alloc@@Base+0x238>
   383b0:	ldr	ip, [r1]
   383b4:	cmp	ip, #0
   383b8:	bne	38384 <flatcc_builder_default_alloc@@Base+0x1c4>
   383bc:	ldrb	ip, [r3]
   383c0:	cmp	ip, #0
   383c4:	beq	3839c <flatcc_builder_default_alloc@@Base+0x1dc>
   383c8:	ldr	r3, [pc, #196]	; 38494 <flatcc_builder_default_alloc@@Base+0x2d4>
   383cc:	ldr	r2, [pc, #196]	; 38498 <flatcc_builder_default_alloc@@Base+0x2d8>
   383d0:	ldr	r1, [pc, #196]	; 3849c <flatcc_builder_default_alloc@@Base+0x2dc>
   383d4:	ldr	r0, [pc, #196]	; 384a0 <flatcc_builder_default_alloc@@Base+0x2e0>
   383d8:	bl	14038 <__assert_fail@plt>
   383dc:	sub	r1, r0, r4
   383e0:	add	r3, r3, #1
   383e4:	add	r1, r1, lr
   383e8:	cmp	r2, r3
   383ec:	str	r1, [ip, #4]!
   383f0:	sub	r0, r0, #4
   383f4:	bne	38444 <flatcc_builder_default_alloc@@Base+0x284>
   383f8:	ldr	r0, [r5, #136]	; 0x88
   383fc:	sub	r4, r0, r7
   38400:	cmp	r4, r0
   38404:	bge	3848c <flatcc_builder_default_alloc@@Base+0x2cc>
   38408:	ldr	r0, [r5, #36]	; 0x24
   3840c:	mov	r2, r8
   38410:	str	r7, [sp]
   38414:	mov	r3, r4
   38418:	ldr	r6, [r5, #44]	; 0x2c
   3841c:	add	r1, sp, #24
   38420:	blx	r6
   38424:	cmp	r0, #0
   38428:	bne	38478 <flatcc_builder_default_alloc@@Base+0x2b8>
   3842c:	mov	r0, r4
   38430:	str	r4, [r5, #136]	; 0x88
   38434:	add	sp, sp, #88	; 0x58
   38438:	pop	{r4, r5, r6, r7, r8, pc}
   3843c:	sub	ip, r1, #4
   38440:	mvn	r0, #3
   38444:	ldr	lr, [ip, #4]
   38448:	cmp	lr, #0
   3844c:	bne	383dc <flatcc_builder_default_alloc@@Base+0x21c>
   38450:	ldr	r3, [pc, #60]	; 38494 <flatcc_builder_default_alloc@@Base+0x2d4>
   38454:	ldr	r2, [pc, #72]	; 384a4 <flatcc_builder_default_alloc@@Base+0x2e4>
   38458:	ldr	r1, [pc, #60]	; 3849c <flatcc_builder_default_alloc@@Base+0x2dc>
   3845c:	ldr	r0, [pc, #68]	; 384a8 <flatcc_builder_default_alloc@@Base+0x2e8>
   38460:	bl	14038 <__assert_fail@plt>
   38464:	ldr	r3, [pc, #40]	; 38494 <flatcc_builder_default_alloc@@Base+0x2d4>
   38468:	ldr	r2, [pc, #60]	; 384ac <flatcc_builder_default_alloc@@Base+0x2ec>
   3846c:	ldr	r1, [pc, #40]	; 3849c <flatcc_builder_default_alloc@@Base+0x2dc>
   38470:	ldr	r0, [pc, #56]	; 384b0 <flatcc_builder_default_alloc@@Base+0x2f0>
   38474:	bl	14038 <__assert_fail@plt>
   38478:	ldr	r3, [pc, #52]	; 384b4 <flatcc_builder_default_alloc@@Base+0x2f4>
   3847c:	ldr	r2, [pc, #52]	; 384b8 <flatcc_builder_default_alloc@@Base+0x2f8>
   38480:	ldr	r1, [pc, #20]	; 3849c <flatcc_builder_default_alloc@@Base+0x2dc>
   38484:	ldr	r0, [pc, #28]	; 384a8 <flatcc_builder_default_alloc@@Base+0x2e8>
   38488:	bl	14038 <__assert_fail@plt>
   3848c:	bl	14134 <__assert_fail@plt+0xfc>
   38490:	andeq	fp, r5, r0, lsl r4
   38494:	andeq	fp, r5, r0, lsl r6
   38498:			; <UNDEFINED> instruction: 0x000005b5
   3849c:	andeq	fp, r5, r8, asr #21
   384a0:	andeq	fp, r5, ip, lsl #23
   384a4:			; <UNDEFINED> instruction: 0x000005b7
   384a8:	andeq	sl, r4, r4, asr sp
   384ac:			; <UNDEFINED> instruction: 0x000005b1
   384b0:	andeq	fp, r5, ip, ror fp
   384b4:	muleq	r5, r4, r3
   384b8:	andeq	r0, r0, fp, lsl #5
   384bc:	ldrh	r3, [r0, #128]	; 0x80
   384c0:	push	{r4, r5, r6, r7, lr}
   384c4:	sub	sp, sp, #92	; 0x5c
   384c8:	cmp	r3, #3
   384cc:	movls	r3, #4
   384d0:	ldr	lr, [r0, #136]	; 0x88
   384d4:	mov	ip, #4
   384d8:	strhls	r3, [r0, #128]	; 0x80
   384dc:	mov	r4, r0
   384e0:	lsls	r6, r2, #2
   384e4:	mov	r0, #1
   384e8:	add	r5, sp, #12
   384ec:	str	ip, [sp, #16]
   384f0:	str	r0, [sp, #20]
   384f4:	and	r3, lr, #3
   384f8:	movne	r0, #2
   384fc:	str	ip, [sp, #28]
   38500:	addne	ip, r6, ip
   38504:	str	r5, [sp, #24]
   38508:	strne	r6, [sp, #36]	; 0x24
   3850c:	strne	r1, [sp, #32]
   38510:	strne	ip, [sp, #16]
   38514:	strne	r0, [sp, #20]
   38518:	movne	r5, r0
   3851c:	movne	r6, #3
   38520:	moveq	r5, r0
   38524:	moveq	r6, #2
   38528:	cmp	r3, #0
   3852c:	str	r2, [sp, #12]
   38530:	beq	3855c <flatcc_builder_default_alloc@@Base+0x39c>
   38534:	add	r0, r5, #1
   38538:	add	r5, sp, #88	; 0x58
   3853c:	add	r0, r5, r0, lsl #3
   38540:	ldr	r7, [pc, #204]	; 38614 <flatcc_builder_default_alloc@@Base+0x454>
   38544:	mov	r5, r6
   38548:	add	ip, ip, r3
   3854c:	str	r3, [r0, #-68]	; 0xffffffbc
   38550:	str	ip, [sp, #16]
   38554:	str	r6, [sp, #20]
   38558:	str	r7, [r0, #-72]	; 0xffffffb8
   3855c:	cmp	r2, #0
   38560:	beq	385bc <flatcc_builder_default_alloc@@Base+0x3fc>
   38564:	ldr	r3, [r1]
   38568:	cmp	r3, #0
   3856c:	beq	385a4 <flatcc_builder_default_alloc@@Base+0x3e4>
   38570:	sub	r6, lr, ip
   38574:	mov	r0, #0
   38578:	mvn	lr, #3
   3857c:	sub	r3, r3, r6
   38580:	add	r0, r0, #1
   38584:	add	r3, r3, lr
   38588:	cmp	r2, r0
   3858c:	str	r3, [r1]
   38590:	beq	385b8 <flatcc_builder_default_alloc@@Base+0x3f8>
   38594:	ldr	r3, [r1, #4]!
   38598:	sub	lr, lr, #4
   3859c:	cmp	r3, #0
   385a0:	bne	3857c <flatcc_builder_default_alloc@@Base+0x3bc>
   385a4:	ldr	r3, [pc, #108]	; 38618 <flatcc_builder_default_alloc@@Base+0x458>
   385a8:	ldr	r2, [pc, #108]	; 3861c <flatcc_builder_default_alloc@@Base+0x45c>
   385ac:	ldr	r1, [pc, #108]	; 38620 <flatcc_builder_default_alloc@@Base+0x460>
   385b0:	ldr	r0, [pc, #108]	; 38624 <flatcc_builder_default_alloc@@Base+0x464>
   385b4:	bl	14038 <__assert_fail@plt>
   385b8:	ldr	lr, [r4, #136]	; 0x88
   385bc:	sub	r6, lr, ip
   385c0:	cmp	r6, lr
   385c4:	bge	38610 <flatcc_builder_default_alloc@@Base+0x450>
   385c8:	ldr	r0, [r4, #36]	; 0x24
   385cc:	mov	r2, r5
   385d0:	str	ip, [sp]
   385d4:	mov	r3, r6
   385d8:	ldr	r5, [r4, #44]	; 0x2c
   385dc:	add	r1, sp, #24
   385e0:	blx	r5
   385e4:	cmp	r0, #0
   385e8:	bne	385fc <flatcc_builder_default_alloc@@Base+0x43c>
   385ec:	mov	r0, r6
   385f0:	str	r6, [r4, #136]	; 0x88
   385f4:	add	sp, sp, #92	; 0x5c
   385f8:	pop	{r4, r5, r6, r7, pc}
   385fc:	ldr	r3, [pc, #36]	; 38628 <flatcc_builder_default_alloc@@Base+0x468>
   38600:	ldr	r2, [pc, #36]	; 3862c <flatcc_builder_default_alloc@@Base+0x46c>
   38604:	ldr	r1, [pc, #20]	; 38620 <flatcc_builder_default_alloc@@Base+0x460>
   38608:	ldr	r0, [pc, #20]	; 38624 <flatcc_builder_default_alloc@@Base+0x464>
   3860c:	bl	14038 <__assert_fail@plt>
   38610:	bl	14134 <__assert_fail@plt+0xfc>
   38614:	andeq	fp, r5, r0, lsl r4
   38618:	andeq	fp, r5, r0, lsl r6
   3861c:			; <UNDEFINED> instruction: 0x000005b7
   38620:	andeq	fp, r5, r8, asr #21
   38624:	andeq	sl, r4, r4, asr sp
   38628:	muleq	r5, r4, r3
   3862c:	andeq	r0, r0, fp, lsl #5

00038630 <flatcc_builder_flush_vtable_cache@@Base>:
   38630:	ldr	r3, [r0, #116]	; 0x74
   38634:	cmp	r3, #0
   38638:	bxeq	lr
   3863c:	ldr	r2, [r0, #96]	; 0x60
   38640:	push	{r4, lr}
   38644:	mov	r1, #0
   38648:	mov	r4, r0
   3864c:	ldr	r0, [r0, #92]	; 0x5c
   38650:	bl	13f9c <memset@plt>
   38654:	mov	r2, #16
   38658:	mov	r3, #0
   3865c:	str	r2, [r4, #124]	; 0x7c
   38660:	str	r3, [r4, #120]	; 0x78
   38664:	pop	{r4, pc}

00038668 <flatcc_builder_custom_init@@Base>:
   38668:	push	{r4, r5, r6, r7, r8, lr}
   3866c:	mov	r6, r1
   38670:	mov	r7, r2
   38674:	mov	r1, #0
   38678:	mov	r2, #232	; 0xe8
   3867c:	mov	r4, r0
   38680:	mov	r5, r3
   38684:	ldr	r8, [sp, #24]
   38688:	bl	13f9c <memset@plt>
   3868c:	cmp	r6, #0
   38690:	moveq	r3, #1
   38694:	ldreq	r6, [pc, #40]	; 386c4 <flatcc_builder_custom_init@@Base+0x5c>
   38698:	addeq	r7, r4, #188	; 0xbc
   3869c:	str	r8, [r4, #40]	; 0x28
   386a0:	str	r7, [r4, #36]	; 0x24
   386a4:	str	r6, [r4, #44]	; 0x2c
   386a8:	mov	r0, #0
   386ac:	streq	r3, [r4, #184]	; 0xb8
   386b0:	ldr	r3, [pc, #16]	; 386c8 <flatcc_builder_custom_init@@Base+0x60>
   386b4:	cmp	r5, #0
   386b8:	moveq	r5, r3
   386bc:	str	r5, [r4, #48]	; 0x30
   386c0:	pop	{r4, r5, r6, r7, r8, pc}
   386c4:	andeq	sp, r3, ip, lsl ip
   386c8:	andeq	r8, r3, r0, asr #3

000386cc <flatcc_builder_init@@Base>:
   386cc:	push	{r4, lr}
   386d0:	mov	r2, #232	; 0xe8
   386d4:	mov	r1, #0
   386d8:	mov	r4, r0
   386dc:	bl	13f9c <memset@plt>
   386e0:	ldr	r1, [pc, #32]	; 38708 <flatcc_builder_init@@Base+0x3c>
   386e4:	ldr	r3, [pc, #32]	; 3870c <flatcc_builder_init@@Base+0x40>
   386e8:	mov	r0, #1
   386ec:	add	r2, r4, #188	; 0xbc
   386f0:	str	r0, [r4, #184]	; 0xb8
   386f4:	str	r1, [r4, #48]	; 0x30
   386f8:	str	r2, [r4, #36]	; 0x24
   386fc:	str	r3, [r4, #44]	; 0x2c
   38700:	mov	r0, #0
   38704:	pop	{r4, pc}
   38708:	andeq	r8, r3, r0, asr #3
   3870c:	andeq	sp, r3, ip, lsl ip

00038710 <flatcc_builder_custom_reset@@Base>:
   38710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38714:	add	r7, r0, #52	; 0x34
   38718:	mov	r4, #0
   3871c:	sub	sp, sp, #12
   38720:	mov	r5, r0
   38724:	mov	sl, r1
   38728:	mov	r8, r2
   3872c:	mov	r6, r7
   38730:	mov	r9, r4
   38734:	mov	fp, #1
   38738:	b	3878c <flatcc_builder_custom_reset@@Base+0x7c>
   3873c:	cmp	r4, #5
   38740:	cmpne	r8, #0
   38744:	beq	38770 <flatcc_builder_custom_reset@@Base+0x60>
   38748:	ldr	r0, [r5, #40]	; 0x28
   3874c:	mov	r3, fp
   38750:	str	r4, [sp]
   38754:	mov	r2, #1
   38758:	mov	r1, r6
   3875c:	ldr	ip, [r5, #48]	; 0x30
   38760:	blx	ip
   38764:	cmp	r0, #0
   38768:	bne	38840 <flatcc_builder_custom_reset@@Base+0x130>
   3876c:	ldr	r0, [r7, r4, lsl #3]
   38770:	ldr	r2, [r6, #4]
   38774:	mov	r1, r9
   38778:	bl	13f9c <memset@plt>
   3877c:	add	r4, r4, #1
   38780:	cmp	r4, #8
   38784:	add	r6, r6, #8
   38788:	beq	387b8 <flatcc_builder_custom_reset@@Base+0xa8>
   3878c:	ldr	r0, [r7, r4, lsl #3]
   38790:	cmp	r0, #0
   38794:	bne	3873c <flatcc_builder_custom_reset@@Base+0x2c>
   38798:	ldr	r3, [r6, #4]
   3879c:	cmp	r3, #0
   387a0:	beq	3877c <flatcc_builder_custom_reset@@Base+0x6c>
   387a4:	ldr	r3, [pc, #156]	; 38848 <flatcc_builder_custom_reset@@Base+0x138>
   387a8:	ldr	r2, [pc, #156]	; 3884c <flatcc_builder_custom_reset@@Base+0x13c>
   387ac:	ldr	r1, [pc, #156]	; 38850 <flatcc_builder_custom_reset@@Base+0x140>
   387b0:	ldr	r0, [pc, #156]	; 38854 <flatcc_builder_custom_reset@@Base+0x144>
   387b4:	bl	14038 <__assert_fail@plt>
   387b8:	ldr	r2, [r5, #124]	; 0x7c
   387bc:	mov	r3, #0
   387c0:	ldr	r0, [r5, #60]	; 0x3c
   387c4:	cmp	r2, r3
   387c8:	str	r3, [r5, #120]	; 0x78
   387cc:	ldr	r1, [r5, #76]	; 0x4c
   387d0:	movne	r3, #16
   387d4:	ldr	r2, [r5, #52]	; 0x34
   387d8:	str	r0, [r5, #16]
   387dc:	ldr	r0, [r5, #184]	; 0xb8
   387e0:	strne	r3, [r5, #124]	; 0x7c
   387e4:	mov	r3, #0
   387e8:	cmp	sl, #0
   387ec:	strne	r3, [r5, #172]	; 0xac
   387f0:	strne	r3, [r5, #176]	; 0xb0
   387f4:	strne	r3, [r5, #180]	; 0xb4
   387f8:	cmp	r0, #0
   387fc:	stm	r5, {r1, r2}
   38800:	strh	r3, [r5, #128]	; 0x80
   38804:	str	r3, [r5, #136]	; 0x88
   38808:	str	r3, [r5, #140]	; 0x8c
   3880c:	str	r3, [r5, #156]	; 0x9c
   38810:	str	r3, [r5, #160]	; 0xa0
   38814:	str	r3, [r5, #20]
   38818:	str	r3, [r5, #24]
   3881c:	str	r3, [r5, #148]	; 0x94
   38820:	str	r3, [r5, #152]	; 0x98
   38824:	str	r3, [r5, #32]
   38828:	beq	38838 <flatcc_builder_custom_reset@@Base+0x128>
   3882c:	add	r0, r5, #188	; 0xbc
   38830:	bl	3daf4 <flatcc_emitter_reset@@Base>
   38834:	mov	r0, #0
   38838:	add	sp, sp, #12
   3883c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38840:	mvn	r0, #0
   38844:	b	38838 <flatcc_builder_custom_reset@@Base+0x128>
   38848:	andeq	fp, r5, r0, lsr r6
   3884c:			; <UNDEFINED> instruction: 0x000001b2
   38850:	andeq	fp, r5, r8, asr #21
   38854:	muleq	r5, ip, fp

00038858 <flatcc_builder_reset@@Base>:
   38858:	push	{r4, r5, r6, r7, r8, lr}
   3885c:	mov	r5, r0
   38860:	add	r4, r0, #52	; 0x34
   38864:	add	r6, r0, #116	; 0x74
   38868:	mov	r7, #0
   3886c:	b	38888 <flatcc_builder_reset@@Base+0x30>
   38870:	ldr	r2, [r4, #4]
   38874:	mov	r1, r7
   38878:	bl	13f9c <memset@plt>
   3887c:	add	r4, r4, #8
   38880:	cmp	r6, r4
   38884:	beq	388b4 <flatcc_builder_reset@@Base+0x5c>
   38888:	ldr	r0, [r4]
   3888c:	cmp	r0, #0
   38890:	bne	38870 <flatcc_builder_reset@@Base+0x18>
   38894:	ldr	r3, [r4, #4]
   38898:	cmp	r3, #0
   3889c:	beq	3887c <flatcc_builder_reset@@Base+0x24>
   388a0:	ldr	r3, [pc, #128]	; 38928 <flatcc_builder_reset@@Base+0xd0>
   388a4:	ldr	r2, [pc, #128]	; 3892c <flatcc_builder_reset@@Base+0xd4>
   388a8:	ldr	r1, [pc, #128]	; 38930 <flatcc_builder_reset@@Base+0xd8>
   388ac:	ldr	r0, [pc, #128]	; 38934 <flatcc_builder_reset@@Base+0xdc>
   388b0:	bl	14038 <__assert_fail@plt>
   388b4:	ldr	r2, [r5, #124]	; 0x7c
   388b8:	mov	r3, #0
   388bc:	cmp	r2, r3
   388c0:	str	r3, [r5, #120]	; 0x78
   388c4:	movne	r3, #16
   388c8:	strne	r3, [r5, #124]	; 0x7c
   388cc:	ldr	r1, [r5, #76]	; 0x4c
   388d0:	ldr	r3, [r5, #184]	; 0xb8
   388d4:	ldr	r2, [r5, #52]	; 0x34
   388d8:	ldr	r0, [r5, #60]	; 0x3c
   388dc:	cmp	r3, #0
   388e0:	mov	r3, #0
   388e4:	str	r0, [r5, #16]
   388e8:	stm	r5, {r1, r2}
   388ec:	strh	r3, [r5, #128]	; 0x80
   388f0:	str	r3, [r5, #136]	; 0x88
   388f4:	str	r3, [r5, #140]	; 0x8c
   388f8:	str	r3, [r5, #156]	; 0x9c
   388fc:	str	r3, [r5, #160]	; 0xa0
   38900:	str	r3, [r5, #20]
   38904:	str	r3, [r5, #24]
   38908:	str	r3, [r5, #148]	; 0x94
   3890c:	str	r3, [r5, #152]	; 0x98
   38910:	str	r3, [r5, #32]
   38914:	beq	38920 <flatcc_builder_reset@@Base+0xc8>
   38918:	add	r0, r5, #188	; 0xbc
   3891c:	bl	3daf4 <flatcc_emitter_reset@@Base>
   38920:	mov	r0, #0
   38924:	pop	{r4, r5, r6, r7, r8, pc}
   38928:	andeq	fp, r5, r0, lsr r6
   3892c:			; <UNDEFINED> instruction: 0x000001b2
   38930:	andeq	fp, r5, r8, asr #21
   38934:	muleq	r5, ip, fp

00038938 <flatcc_builder_clear@@Base>:
   38938:	push	{r4, r5, r6, r7, r8, lr}
   3893c:	mov	r4, #0
   38940:	sub	sp, sp, #8
   38944:	mov	r6, r0
   38948:	add	r5, r0, #52	; 0x34
   3894c:	mov	r8, r4
   38950:	ldr	r0, [r6, #40]	; 0x28
   38954:	mov	r1, r5
   38958:	str	r4, [sp]
   3895c:	mov	r3, r8
   38960:	add	r4, r4, #1
   38964:	ldr	r7, [r6, #48]	; 0x30
   38968:	mov	r2, #0
   3896c:	blx	r7
   38970:	cmp	r4, #8
   38974:	add	r5, r5, #8
   38978:	bne	38950 <flatcc_builder_clear@@Base+0x18>
   3897c:	ldr	r3, [r6, #184]	; 0xb8
   38980:	cmp	r3, #0
   38984:	beq	38990 <flatcc_builder_clear@@Base+0x58>
   38988:	add	r0, r6, #188	; 0xbc
   3898c:	bl	3dbb0 <flatcc_emitter_clear@@Base>
   38990:	mov	r0, r6
   38994:	mov	r2, #232	; 0xe8
   38998:	mov	r1, #0
   3899c:	add	sp, sp, #8
   389a0:	pop	{r4, r5, r6, r7, r8, lr}
   389a4:	b	13f9c <memset@plt>

000389a8 <flatcc_builder_enter_user_frame_ptr@@Base>:
   389a8:	push	{r4, r5, r6, r7, r8, lr}
   389ac:	add	r4, r1, #3
   389b0:	bic	r4, r4, #3
   389b4:	ldr	r7, [r0, #228]	; 0xe4
   389b8:	add	r4, r4, #4
   389bc:	ldr	r3, [r0, #112]	; 0x70
   389c0:	add	r2, r4, r7
   389c4:	cmp	r2, r3
   389c8:	sub	sp, sp, #8
   389cc:	mov	r6, r0
   389d0:	bhi	38a18 <flatcc_builder_enter_user_frame_ptr@@Base+0x70>
   389d4:	ldr	r8, [r6, #108]	; 0x6c
   389d8:	adds	r5, r8, r7
   389dc:	beq	38a40 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
   389e0:	mov	r2, r4
   389e4:	mov	r1, #0
   389e8:	mov	r0, r5
   389ec:	bl	13f9c <memset@plt>
   389f0:	ldr	r3, [r6, #224]	; 0xe0
   389f4:	add	r0, r5, #4
   389f8:	str	r3, [r8, r7]
   389fc:	ldr	r3, [r6, #228]	; 0xe4
   38a00:	add	r4, r4, r3
   38a04:	add	r3, r3, #4
   38a08:	str	r4, [r6, #228]	; 0xe4
   38a0c:	str	r3, [r6, #224]	; 0xe0
   38a10:	add	sp, sp, #8
   38a14:	pop	{r4, r5, r6, r7, r8, pc}
   38a18:	mov	r3, #7
   38a1c:	ldr	r0, [r0, #40]	; 0x28
   38a20:	add	r1, r6, #108	; 0x6c
   38a24:	str	r3, [sp]
   38a28:	mov	r3, #0
   38a2c:	ldr	r5, [r6, #48]	; 0x30
   38a30:	blx	r5
   38a34:	cmp	r0, #0
   38a38:	beq	389d4 <flatcc_builder_enter_user_frame_ptr@@Base+0x2c>
   38a3c:	bl	140e8 <__assert_fail@plt+0xb0>
   38a40:	mov	r0, r5
   38a44:	b	38a10 <flatcc_builder_enter_user_frame_ptr@@Base+0x68>

00038a48 <flatcc_builder_enter_user_frame@@Base>:
   38a48:	push	{r4, r5, r6, r7, lr}
   38a4c:	add	r4, r1, #3
   38a50:	bic	r4, r4, #3
   38a54:	ldr	r6, [r0, #228]	; 0xe4
   38a58:	add	r4, r4, #4
   38a5c:	ldr	r3, [r0, #112]	; 0x70
   38a60:	add	r2, r4, r6
   38a64:	cmp	r2, r3
   38a68:	sub	sp, sp, #12
   38a6c:	mov	r5, r0
   38a70:	bhi	38ab0 <flatcc_builder_enter_user_frame@@Base+0x68>
   38a74:	ldr	r7, [r5, #108]	; 0x6c
   38a78:	adds	r0, r7, r6
   38a7c:	beq	38aa8 <flatcc_builder_enter_user_frame@@Base+0x60>
   38a80:	mov	r2, r4
   38a84:	mov	r1, #0
   38a88:	bl	13f9c <memset@plt>
   38a8c:	ldr	r3, [r5, #224]	; 0xe0
   38a90:	str	r3, [r7, r6]
   38a94:	ldr	r0, [r5, #228]	; 0xe4
   38a98:	add	r4, r4, r0
   38a9c:	add	r0, r0, #4
   38aa0:	str	r4, [r5, #228]	; 0xe4
   38aa4:	str	r0, [r5, #224]	; 0xe0
   38aa8:	add	sp, sp, #12
   38aac:	pop	{r4, r5, r6, r7, pc}
   38ab0:	mov	r3, #7
   38ab4:	ldr	r0, [r0, #40]	; 0x28
   38ab8:	add	r1, r5, #108	; 0x6c
   38abc:	str	r3, [sp]
   38ac0:	mov	r3, #0
   38ac4:	ldr	r7, [r5, #48]	; 0x30
   38ac8:	blx	r7
   38acc:	cmp	r0, #0
   38ad0:	beq	38a74 <flatcc_builder_enter_user_frame@@Base+0x2c>
   38ad4:	bl	140e8 <__assert_fail@plt+0xb0>

00038ad8 <flatcc_builder_exit_user_frame@@Base>:
   38ad8:	ldr	r3, [r0, #224]	; 0xe0
   38adc:	cmp	r3, #0
   38ae0:	beq	38b04 <flatcc_builder_exit_user_frame@@Base+0x2c>
   38ae4:	ldr	r2, [r0, #108]	; 0x6c
   38ae8:	sub	r1, r3, #4
   38aec:	add	r3, r2, r3
   38af0:	str	r1, [r0, #228]	; 0xe4
   38af4:	ldr	r3, [r3, #-4]
   38af8:	str	r3, [r0, #224]	; 0xe0
   38afc:	mov	r0, r3
   38b00:	bx	lr
   38b04:	push	{r4, lr}
   38b08:	bl	14180 <__assert_fail@plt+0x148>

00038b0c <flatcc_builder_exit_user_frame_at@@Base>:
   38b0c:	ldr	r3, [r0, #224]	; 0xe0
   38b10:	push	{r4, lr}
   38b14:	cmp	r3, r1
   38b18:	bcc	38b48 <flatcc_builder_exit_user_frame_at@@Base+0x3c>
   38b1c:	cmp	r1, #0
   38b20:	str	r1, [r0, #224]	; 0xe0
   38b24:	beq	38b5c <flatcc_builder_exit_user_frame_at@@Base+0x50>
   38b28:	ldr	r3, [r0, #108]	; 0x6c
   38b2c:	sub	r2, r1, #4
   38b30:	add	r1, r3, r1
   38b34:	str	r2, [r0, #228]	; 0xe4
   38b38:	ldr	r3, [r1, #-4]
   38b3c:	str	r3, [r0, #224]	; 0xe0
   38b40:	mov	r0, r3
   38b44:	pop	{r4, pc}
   38b48:	ldr	r3, [pc, #16]	; 38b60 <flatcc_builder_exit_user_frame_at@@Base+0x54>
   38b4c:	ldr	r2, [pc, #16]	; 38b64 <flatcc_builder_exit_user_frame_at@@Base+0x58>
   38b50:	ldr	r1, [pc, #16]	; 38b68 <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   38b54:	ldr	r0, [pc, #16]	; 38b6c <flatcc_builder_exit_user_frame_at@@Base+0x60>
   38b58:	bl	14038 <__assert_fail@plt>
   38b5c:	bl	14180 <__assert_fail@plt+0x148>
   38b60:	andeq	fp, r5, ip, asr #12
   38b64:	andeq	r0, r0, r7, lsr #4
   38b68:	andeq	fp, r5, r8, asr #21
   38b6c:			; <UNDEFINED> instruction: 0x0005bbb0

00038b70 <flatcc_builder_get_current_user_frame@@Base>:
   38b70:	ldr	r0, [r0, #224]	; 0xe0
   38b74:	bx	lr

00038b78 <flatcc_builder_get_user_frame_ptr@@Base>:
   38b78:	ldr	r0, [r0, #108]	; 0x6c
   38b7c:	add	r0, r0, r1
   38b80:	bx	lr

00038b84 <flatcc_builder_embed_buffer@@Base>:
   38b84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38b88:	sub	sp, sp, #92	; 0x5c
   38b8c:	cmp	r1, #0
   38b90:	ldr	r6, [sp, #132]	; 0x84
   38b94:	mov	r8, r2
   38b98:	mov	r5, r0
   38b9c:	mov	r7, r3
   38ba0:	ldr	r2, [r0, #152]	; 0x98
   38ba4:	and	r6, r6, #2
   38ba8:	ldrh	r4, [sp, #128]	; 0x80
   38bac:	bne	38bbc <flatcc_builder_embed_buffer@@Base+0x38>
   38bb0:	ldrh	r1, [r0, #132]	; 0x84
   38bb4:	cmp	r1, #0
   38bb8:	beq	38d44 <flatcc_builder_embed_buffer@@Base+0x1c0>
   38bbc:	cmp	r4, #4
   38bc0:	movcc	r4, #4
   38bc4:	cmp	r1, r4
   38bc8:	movcs	r4, r1
   38bcc:	cmp	r2, #0
   38bd0:	bne	38c38 <flatcc_builder_embed_buffer@@Base+0xb4>
   38bd4:	ldr	r9, [r5, #140]	; 0x8c
   38bd8:	sub	r1, r1, #1
   38bdc:	ands	r1, r1, r9
   38be0:	beq	38c38 <flatcc_builder_embed_buffer@@Base+0xb4>
   38be4:	add	r3, r9, r1
   38be8:	ldr	sl, [pc, #420]	; 38d94 <flatcc_builder_embed_buffer@@Base+0x210>
   38bec:	mov	r2, #1
   38bf0:	cmp	r9, r3
   38bf4:	str	r1, [sp, #16]
   38bf8:	str	r1, [sp, #28]
   38bfc:	str	sl, [sp, #24]
   38c00:	str	r3, [r5, #140]	; 0x8c
   38c04:	str	r2, [sp, #20]
   38c08:	bgt	38d68 <flatcc_builder_embed_buffer@@Base+0x1e4>
   38c0c:	ldr	r0, [r5, #36]	; 0x24
   38c10:	mov	r3, r9
   38c14:	str	r1, [sp]
   38c18:	add	r1, sp, #24
   38c1c:	ldr	fp, [r5, #44]	; 0x2c
   38c20:	blx	fp
   38c24:	cmp	r0, #0
   38c28:	bne	38d6c <flatcc_builder_embed_buffer@@Base+0x1e8>
   38c2c:	cmn	r9, #1
   38c30:	beq	38d80 <flatcc_builder_embed_buffer@@Base+0x1fc>
   38c34:	ldr	r2, [r5, #152]	; 0x98
   38c38:	ldr	r1, [r5, #136]	; 0x88
   38c3c:	cmp	r6, #0
   38c40:	movne	r6, #4
   38c44:	moveq	r6, #0
   38c48:	sub	r3, r1, r7
   38c4c:	sub	r6, r3, r6
   38c50:	sub	r4, r4, #1
   38c54:	and	r4, r4, r6
   38c58:	mov	r3, #0
   38c5c:	add	r0, r7, r4
   38c60:	cmp	r2, #0
   38c64:	str	r0, [sp, #12]
   38c68:	str	r3, [sp, #16]
   38c6c:	str	r3, [sp, #20]
   38c70:	bne	38d1c <flatcc_builder_embed_buffer@@Base+0x198>
   38c74:	mov	r3, r2
   38c78:	mov	ip, #2
   38c7c:	mov	r0, #1
   38c80:	cmp	r7, #0
   38c84:	beq	38cb0 <flatcc_builder_embed_buffer@@Base+0x12c>
   38c88:	add	r2, r2, #1
   38c8c:	add	lr, sp, #88	; 0x58
   38c90:	add	r2, lr, r2, lsl #3
   38c94:	add	r3, r3, r7
   38c98:	str	r3, [sp, #16]
   38c9c:	str	r8, [r2, #-72]	; 0xffffffb8
   38ca0:	str	r7, [r2, #-68]	; 0xffffffbc
   38ca4:	mov	r2, r0
   38ca8:	str	r0, [sp, #20]
   38cac:	mov	r0, ip
   38cb0:	cmp	r4, #0
   38cb4:	beq	38ce0 <flatcc_builder_embed_buffer@@Base+0x15c>
   38cb8:	add	r2, r2, #1
   38cbc:	add	ip, sp, #88	; 0x58
   38cc0:	add	ip, ip, r2, lsl #3
   38cc4:	ldr	lr, [pc, #200]	; 38d94 <flatcc_builder_embed_buffer@@Base+0x210>
   38cc8:	mov	r2, r0
   38ccc:	add	r3, r3, r4
   38cd0:	str	r3, [sp, #16]
   38cd4:	str	r4, [ip, #-68]	; 0xffffffbc
   38cd8:	str	lr, [ip, #-72]	; 0xffffffb8
   38cdc:	str	r0, [sp, #20]
   38ce0:	sub	r4, r1, r3
   38ce4:	cmp	r1, r4
   38ce8:	ble	38d50 <flatcc_builder_embed_buffer@@Base+0x1cc>
   38cec:	ldr	r0, [r5, #36]	; 0x24
   38cf0:	add	r1, sp, #24
   38cf4:	str	r3, [sp]
   38cf8:	mov	r3, r4
   38cfc:	ldr	r6, [r5, #44]	; 0x2c
   38d00:	blx	r6
   38d04:	cmp	r0, #0
   38d08:	bne	38d54 <flatcc_builder_embed_buffer@@Base+0x1d0>
   38d0c:	mov	r0, r4
   38d10:	str	r4, [r5, #136]	; 0x88
   38d14:	add	sp, sp, #92	; 0x5c
   38d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38d1c:	mov	r3, #4
   38d20:	add	r0, sp, #12
   38d24:	mov	r2, #1
   38d28:	str	r0, [sp, #24]
   38d2c:	str	r3, [sp, #16]
   38d30:	str	r3, [sp, #28]
   38d34:	str	r2, [sp, #20]
   38d38:	mov	ip, #3
   38d3c:	mov	r0, #2
   38d40:	b	38c80 <flatcc_builder_embed_buffer@@Base+0xfc>
   38d44:	cmp	r4, #4
   38d48:	movcc	r4, #4
   38d4c:	b	38c38 <flatcc_builder_embed_buffer@@Base+0xb4>
   38d50:	bl	14134 <__assert_fail@plt+0xfc>
   38d54:	ldr	r3, [pc, #60]	; 38d98 <flatcc_builder_embed_buffer@@Base+0x214>
   38d58:	ldr	r2, [pc, #60]	; 38d9c <flatcc_builder_embed_buffer@@Base+0x218>
   38d5c:	ldr	r1, [pc, #60]	; 38da0 <flatcc_builder_embed_buffer@@Base+0x21c>
   38d60:	ldr	r0, [pc, #60]	; 38da4 <flatcc_builder_embed_buffer@@Base+0x220>
   38d64:	bl	14038 <__assert_fail@plt>
   38d68:	bl	1410c <__assert_fail@plt+0xd4>
   38d6c:	ldr	r3, [pc, #52]	; 38da8 <flatcc_builder_embed_buffer@@Base+0x224>
   38d70:	ldr	r2, [pc, #52]	; 38dac <flatcc_builder_embed_buffer@@Base+0x228>
   38d74:	ldr	r1, [pc, #36]	; 38da0 <flatcc_builder_embed_buffer@@Base+0x21c>
   38d78:	ldr	r0, [pc, #36]	; 38da4 <flatcc_builder_embed_buffer@@Base+0x220>
   38d7c:	bl	14038 <__assert_fail@plt>
   38d80:	add	r3, sl, #608	; 0x260
   38d84:	ldr	r2, [pc, #36]	; 38db0 <flatcc_builder_embed_buffer@@Base+0x22c>
   38d88:	ldr	r1, [pc, #16]	; 38da0 <flatcc_builder_embed_buffer@@Base+0x21c>
   38d8c:	ldr	r0, [pc, #16]	; 38da4 <flatcc_builder_embed_buffer@@Base+0x220>
   38d90:	bl	14038 <__assert_fail@plt>
   38d94:	andeq	fp, r5, r0, lsl r4
   38d98:	muleq	r5, r4, r3
   38d9c:	andeq	r0, r0, fp, lsl #5
   38da0:	andeq	fp, r5, r8, asr #21
   38da4:	andeq	sl, r4, r4, asr sp
   38da8:	andeq	fp, r5, r8, lsl #7
   38dac:	andeq	r0, r0, r5, lsr #5
   38db0:			; <UNDEFINED> instruction: 0x000002be

00038db4 <flatcc_builder_create_buffer@@Base>:
   38db4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38db8:	sub	sp, sp, #100	; 0x64
   38dbc:	mov	ip, #0
   38dc0:	ldr	r5, [sp, #140]	; 0x8c
   38dc4:	cmp	r2, #0
   38dc8:	mov	r6, r0
   38dcc:	mov	r8, r1
   38dd0:	mov	sl, r3
   38dd4:	and	r7, r5, #1
   38dd8:	str	ip, [sp, #20]
   38ddc:	ldrh	r4, [sp, #136]	; 0x88
   38de0:	bne	38df0 <flatcc_builder_create_buffer@@Base+0x3c>
   38de4:	ldrh	r2, [r0, #132]	; 0x84
   38de8:	cmp	r2, ip
   38dec:	beq	38ffc <flatcc_builder_create_buffer@@Base+0x248>
   38df0:	cmp	r4, #4
   38df4:	movcc	r4, #4
   38df8:	cmp	r2, r4
   38dfc:	movcs	r4, r2
   38e00:	cmp	r7, #0
   38e04:	bne	38e68 <flatcc_builder_create_buffer@@Base+0xb4>
   38e08:	ldr	r9, [r6, #140]	; 0x8c
   38e0c:	sub	r2, r2, #1
   38e10:	ands	r3, r2, r9
   38e14:	beq	38e68 <flatcc_builder_create_buffer@@Base+0xb4>
   38e18:	add	r1, r9, r3
   38e1c:	ldr	fp, [pc, #584]	; 3906c <flatcc_builder_create_buffer@@Base+0x2b8>
   38e20:	mov	r2, #1
   38e24:	cmp	r9, r1
   38e28:	str	r3, [sp, #24]
   38e2c:	str	r3, [sp, #36]	; 0x24
   38e30:	str	fp, [sp, #32]
   38e34:	str	r1, [r6, #140]	; 0x8c
   38e38:	str	r2, [sp, #28]
   38e3c:	bgt	39054 <flatcc_builder_create_buffer@@Base+0x2a0>
   38e40:	ldr	r0, [r6, #36]	; 0x24
   38e44:	add	r1, sp, #32
   38e48:	str	r3, [sp]
   38e4c:	mov	r3, r9
   38e50:	ldr	ip, [r6, #44]	; 0x2c
   38e54:	blx	ip
   38e58:	cmp	r0, #0
   38e5c:	bne	39058 <flatcc_builder_create_buffer@@Base+0x2a4>
   38e60:	cmn	r9, #1
   38e64:	beq	39014 <flatcc_builder_create_buffer@@Base+0x260>
   38e68:	ldrh	r3, [r6, #128]	; 0x80
   38e6c:	ldr	r0, [r6, #136]	; 0x88
   38e70:	uxtb	lr, r7
   38e74:	cmp	r3, r4
   38e78:	strhcc	r4, [r6, #128]	; 0x80
   38e7c:	cmp	r8, #0
   38e80:	ldreq	r1, [sp, #20]
   38e84:	ldrne	r1, [r8]
   38e88:	ldrne	r3, [r8]
   38e8c:	strne	r3, [sp, #20]
   38e90:	cmp	r1, #0
   38e94:	movne	r1, #4
   38e98:	moveq	r1, #0
   38e9c:	ands	r5, r5, #2
   38ea0:	bne	38fc4 <flatcc_builder_create_buffer@@Base+0x210>
   38ea4:	sub	r3, r4, #1
   38ea8:	sub	r4, r0, #4
   38eac:	cmp	lr, #0
   38eb0:	sub	r4, r4, r1
   38eb4:	and	r4, r4, r3
   38eb8:	moveq	r8, #3
   38ebc:	moveq	ip, #2
   38ec0:	moveq	r2, #1
   38ec4:	moveq	r3, #4
   38ec8:	bne	38fd4 <flatcc_builder_create_buffer@@Base+0x220>
   38ecc:	add	r5, r5, #1
   38ed0:	add	r9, sp, #96	; 0x60
   38ed4:	add	r5, r9, r5, lsl #3
   38ed8:	add	fp, sp, #12
   38edc:	mov	r9, #4
   38ee0:	cmp	r1, #0
   38ee4:	str	r3, [sp, #24]
   38ee8:	str	fp, [r5, #-72]	; 0xffffffb8
   38eec:	str	r9, [r5, #-68]	; 0xffffffbc
   38ef0:	str	r2, [sp, #28]
   38ef4:	beq	38f24 <flatcc_builder_create_buffer@@Base+0x170>
   38ef8:	add	r2, r2, #1
   38efc:	add	r5, sp, #96	; 0x60
   38f00:	add	r2, r5, r2, lsl #3
   38f04:	add	r3, r3, r1
   38f08:	add	r5, sp, #20
   38f0c:	str	r3, [sp, #24]
   38f10:	str	r1, [r2, #-68]	; 0xffffffbc
   38f14:	str	r5, [r2, #-72]	; 0xffffffb8
   38f18:	mov	r2, ip
   38f1c:	str	ip, [sp, #28]
   38f20:	mov	ip, r8
   38f24:	cmp	r4, #0
   38f28:	beq	38f54 <flatcc_builder_create_buffer@@Base+0x1a0>
   38f2c:	add	r2, r2, #1
   38f30:	add	r1, sp, #96	; 0x60
   38f34:	add	r1, r1, r2, lsl #3
   38f38:	ldr	r5, [pc, #300]	; 3906c <flatcc_builder_create_buffer@@Base+0x2b8>
   38f3c:	mov	r2, ip
   38f40:	add	r3, r3, r4
   38f44:	str	r3, [sp, #24]
   38f48:	str	r4, [r1, #-68]	; 0xffffffbc
   38f4c:	str	r5, [r1, #-72]	; 0xffffffb8
   38f50:	str	ip, [sp, #28]
   38f54:	sub	r4, r0, r3
   38f58:	cmp	lr, #0
   38f5c:	mov	r1, r4
   38f60:	beq	39008 <flatcc_builder_create_buffer@@Base+0x254>
   38f64:	cmp	r7, #0
   38f68:	add	r1, r4, #4
   38f6c:	beq	39008 <flatcc_builder_create_buffer@@Base+0x254>
   38f70:	ldr	ip, [r6, #144]	; 0x90
   38f74:	sub	ip, ip, r1
   38f78:	sub	sl, sl, r1
   38f7c:	cmp	r4, r0
   38f80:	str	sl, [sp, #12]
   38f84:	str	ip, [sp, #16]
   38f88:	bge	39028 <flatcc_builder_create_buffer@@Base+0x274>
   38f8c:	ldr	r0, [r6, #36]	; 0x24
   38f90:	add	r1, sp, #32
   38f94:	str	r3, [sp]
   38f98:	mov	r3, r4
   38f9c:	ldr	r5, [r6, #44]	; 0x2c
   38fa0:	blx	r5
   38fa4:	cmp	r0, #0
   38fa8:	bne	3902c <flatcc_builder_create_buffer@@Base+0x278>
   38fac:	cmp	r4, #0
   38fb0:	str	r4, [r6, #136]	; 0x88
   38fb4:	beq	39040 <flatcc_builder_create_buffer@@Base+0x28c>
   38fb8:	mov	r0, r4
   38fbc:	add	sp, sp, #100	; 0x64
   38fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38fc4:	sub	r3, r0, #8
   38fc8:	sub	r4, r4, #1
   38fcc:	sub	r3, r3, r1
   38fd0:	and	r4, r4, r3
   38fd4:	add	r3, sp, #16
   38fd8:	mov	r8, #4
   38fdc:	mov	r5, #1
   38fe0:	str	r3, [sp, #32]
   38fe4:	str	r8, [sp, #36]	; 0x24
   38fe8:	mov	lr, r5
   38fec:	mov	ip, #3
   38ff0:	mov	r2, #2
   38ff4:	mov	r3, #8
   38ff8:	b	38ecc <flatcc_builder_create_buffer@@Base+0x118>
   38ffc:	cmp	r4, #4
   39000:	movcc	r4, #4
   39004:	b	38e68 <flatcc_builder_create_buffer@@Base+0xb4>
   39008:	ldr	ip, [r6, #140]	; 0x8c
   3900c:	sub	ip, ip, r1
   39010:	b	38f78 <flatcc_builder_create_buffer@@Base+0x1c4>
   39014:	add	r3, fp, #608	; 0x260
   39018:	ldr	r2, [pc, #80]	; 39070 <flatcc_builder_create_buffer@@Base+0x2bc>
   3901c:	ldr	r1, [pc, #80]	; 39074 <flatcc_builder_create_buffer@@Base+0x2c0>
   39020:	ldr	r0, [pc, #80]	; 39078 <flatcc_builder_create_buffer@@Base+0x2c4>
   39024:	bl	14038 <__assert_fail@plt>
   39028:	bl	14134 <__assert_fail@plt+0xfc>
   3902c:	ldr	r3, [pc, #72]	; 3907c <flatcc_builder_create_buffer@@Base+0x2c8>
   39030:	ldr	r2, [pc, #72]	; 39080 <flatcc_builder_create_buffer@@Base+0x2cc>
   39034:	ldr	r1, [pc, #56]	; 39074 <flatcc_builder_create_buffer@@Base+0x2c0>
   39038:	ldr	r0, [pc, #56]	; 39078 <flatcc_builder_create_buffer@@Base+0x2c4>
   3903c:	bl	14038 <__assert_fail@plt>
   39040:	ldr	r3, [pc, #60]	; 39084 <flatcc_builder_create_buffer@@Base+0x2d0>
   39044:	mov	r2, #772	; 0x304
   39048:	ldr	r1, [pc, #36]	; 39074 <flatcc_builder_create_buffer@@Base+0x2c0>
   3904c:	ldr	r0, [pc, #36]	; 39078 <flatcc_builder_create_buffer@@Base+0x2c4>
   39050:	bl	14038 <__assert_fail@plt>
   39054:	bl	1410c <__assert_fail@plt+0xd4>
   39058:	ldr	r3, [pc, #40]	; 39088 <flatcc_builder_create_buffer@@Base+0x2d4>
   3905c:	ldr	r2, [pc, #40]	; 3908c <flatcc_builder_create_buffer@@Base+0x2d8>
   39060:	ldr	r1, [pc, #12]	; 39074 <flatcc_builder_create_buffer@@Base+0x2c0>
   39064:	ldr	r0, [pc, #12]	; 39078 <flatcc_builder_create_buffer@@Base+0x2c4>
   39068:	bl	14038 <__assert_fail@plt>
   3906c:	andeq	fp, r5, r0, lsl r4
   39070:			; <UNDEFINED> instruction: 0x000002be
   39074:	andeq	fp, r5, r8, asr #21
   39078:	andeq	sl, r4, r4, asr sp
   3907c:	muleq	r5, r4, r3
   39080:	andeq	r0, r0, fp, lsl #5
   39084:	andeq	fp, r5, r0, lsl #13
   39088:	andeq	fp, r5, r8, lsl #7
   3908c:	andeq	r0, r0, r5, lsr #5

00039090 <flatcc_builder_create_struct@@Base>:
   39090:	cmp	r3, #0
   39094:	push	{r4, r5, r6, lr}
   39098:	sub	sp, sp, #80	; 0x50
   3909c:	beq	39188 <flatcc_builder_create_struct@@Base+0xf8>
   390a0:	mov	ip, r2
   390a4:	ldrh	r2, [r0, #128]	; 0x80
   390a8:	mov	r5, r0
   390ac:	cmp	r2, r3
   390b0:	strhcc	r3, [r0, #128]	; 0x80
   390b4:	ldr	r0, [r0, #136]	; 0x88
   390b8:	mov	r2, #0
   390bc:	sub	r3, r3, #1
   390c0:	sub	r4, r0, ip
   390c4:	cmp	ip, #0
   390c8:	and	r3, r3, r4
   390cc:	str	r2, [sp, #8]
   390d0:	str	r2, [sp, #12]
   390d4:	bne	39148 <flatcc_builder_create_struct@@Base+0xb8>
   390d8:	cmp	r3, #0
   390dc:	movne	r2, #1
   390e0:	movne	r1, ip
   390e4:	beq	39170 <flatcc_builder_create_struct@@Base+0xe0>
   390e8:	add	r1, r1, #1
   390ec:	add	r4, sp, #80	; 0x50
   390f0:	add	ip, ip, r3
   390f4:	add	r1, r4, r1, lsl #3
   390f8:	ldr	lr, [pc, #156]	; 3919c <flatcc_builder_create_struct@@Base+0x10c>
   390fc:	sub	r4, r0, ip
   39100:	str	r3, [r1, #-68]	; 0xffffffbc
   39104:	str	ip, [sp, #8]
   39108:	str	r2, [sp, #12]
   3910c:	str	lr, [r1, #-72]	; 0xffffffb8
   39110:	cmp	r0, r4
   39114:	ble	39170 <flatcc_builder_create_struct@@Base+0xe0>
   39118:	ldr	r0, [r5, #36]	; 0x24
   3911c:	mov	r3, r4
   39120:	str	ip, [sp]
   39124:	add	r1, sp, #16
   39128:	ldr	r6, [r5, #44]	; 0x2c
   3912c:	blx	r6
   39130:	cmp	r0, #0
   39134:	bne	39174 <flatcc_builder_create_struct@@Base+0xe4>
   39138:	mov	r0, r4
   3913c:	str	r4, [r5, #136]	; 0x88
   39140:	add	sp, sp, #80	; 0x50
   39144:	pop	{r4, r5, r6, pc}
   39148:	cmp	r3, r2
   3914c:	mov	r2, #1
   39150:	str	r1, [sp, #16]
   39154:	str	r2, [sp, #12]
   39158:	movne	r1, r2
   3915c:	str	ip, [sp, #8]
   39160:	str	ip, [sp, #20]
   39164:	movne	r2, #2
   39168:	beq	39110 <flatcc_builder_create_struct@@Base+0x80>
   3916c:	b	390e8 <flatcc_builder_create_struct@@Base+0x58>
   39170:	bl	14134 <__assert_fail@plt+0xfc>
   39174:	ldr	r3, [pc, #36]	; 391a0 <flatcc_builder_create_struct@@Base+0x110>
   39178:	ldr	r2, [pc, #36]	; 391a4 <flatcc_builder_create_struct@@Base+0x114>
   3917c:	ldr	r1, [pc, #36]	; 391a8 <flatcc_builder_create_struct@@Base+0x118>
   39180:	ldr	r0, [pc, #36]	; 391ac <flatcc_builder_create_struct@@Base+0x11c>
   39184:	bl	14038 <__assert_fail@plt>
   39188:	ldr	r3, [pc, #32]	; 391b0 <flatcc_builder_create_struct@@Base+0x120>
   3918c:	ldr	r2, [pc, #32]	; 391b4 <flatcc_builder_create_struct@@Base+0x124>
   39190:	ldr	r1, [pc, #16]	; 391a8 <flatcc_builder_create_struct@@Base+0x118>
   39194:	ldr	r0, [pc, #28]	; 391b8 <flatcc_builder_create_struct@@Base+0x128>
   39198:	bl	14038 <__assert_fail@plt>
   3919c:	andeq	fp, r5, r0, lsl r4
   391a0:	muleq	r5, r4, r3
   391a4:	andeq	r0, r0, fp, lsl #5
   391a8:	andeq	fp, r5, r8, asr #21
   391ac:	andeq	sl, r4, r4, asr sp
   391b0:	andeq	fp, r5, r0, lsr #13
   391b4:	andeq	r0, r0, pc, lsl #6
   391b8:	ldrdeq	fp, [r5], -r0

000391bc <flatcc_builder_start_buffer@@Base>:
   391bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   391c0:	mov	r4, r0
   391c4:	ldr	r0, [r0, #156]	; 0x9c
   391c8:	ldr	ip, [r4, #160]	; 0xa0
   391cc:	mov	r5, r1
   391d0:	add	r1, r0, #1
   391d4:	cmp	r1, ip
   391d8:	sub	sp, sp, #8
   391dc:	mov	r7, r2
   391e0:	mov	r6, r3
   391e4:	str	r1, [r4, #156]	; 0x9c
   391e8:	ldrh	r8, [r4, #128]	; 0x80
   391ec:	ble	3925c <flatcc_builder_start_buffer@@Base+0xa0>
   391f0:	ldr	r3, [r4, #176]	; 0xb0
   391f4:	cmp	r3, #0
   391f8:	cmpgt	r1, r3
   391fc:	movgt	r3, #1
   39200:	movle	r3, #0
   39204:	bgt	39338 <flatcc_builder_start_buffer@@Base+0x17c>
   39208:	add	r0, r0, r0, lsl #3
   3920c:	ldr	r1, [r4, #88]	; 0x58
   39210:	lsl	r9, r0, #2
   39214:	add	r2, r9, #36	; 0x24
   39218:	cmp	r2, r1
   3921c:	bhi	39314 <flatcc_builder_start_buffer@@Base+0x158>
   39220:	ldr	r3, [r4, #84]	; 0x54
   39224:	add	r3, r3, r9
   39228:	cmp	r3, #0
   3922c:	str	r3, [r4, #32]
   39230:	beq	39338 <flatcc_builder_start_buffer@@Base+0x17c>
   39234:	ldr	r2, [r4, #88]	; 0x58
   39238:	ldr	r0, [pc, #256]	; 39340 <flatcc_builder_start_buffer@@Base+0x184>
   3923c:	ldr	r1, [r4, #176]	; 0xb0
   39240:	umull	r0, r2, r0, r2
   39244:	lsr	r2, r2, #3
   39248:	cmp	r1, #0
   3924c:	cmpgt	r2, r1
   39250:	str	r2, [r4, #160]	; 0xa0
   39254:	strgt	r1, [r4, #160]	; 0xa0
   39258:	b	39268 <flatcc_builder_start_buffer@@Base+0xac>
   3925c:	ldr	r3, [r4, #32]
   39260:	add	r3, r3, #36	; 0x24
   39264:	str	r3, [r4, #32]
   39268:	ldr	r0, [r4, #20]
   3926c:	ldr	r1, [r4, #28]
   39270:	ldrh	lr, [r4, #130]	; 0x82
   39274:	ldrh	ip, [r4, #132]	; 0x84
   39278:	add	r2, r0, r1
   3927c:	add	r2, r2, #7
   39280:	str	r0, [r3, #8]
   39284:	strh	lr, [r3, #12]
   39288:	bic	r2, r2, #7
   3928c:	strh	r8, [r4, #130]	; 0x82
   39290:	mvn	lr, #3
   39294:	str	r1, [r3]
   39298:	mov	r0, #0
   3929c:	mov	r1, #1
   392a0:	str	lr, [r3, #4]
   392a4:	str	r2, [r4, #28]
   392a8:	str	r0, [r4, #20]
   392ac:	strh	r1, [r4, #128]	; 0x80
   392b0:	strh	ip, [r3, #34]	; 0x22
   392b4:	ldrh	r2, [r4, #164]	; 0xa4
   392b8:	strh	r7, [r4, #132]	; 0x84
   392bc:	ldr	ip, [pc, #128]	; 39344 <flatcc_builder_start_buffer@@Base+0x188>
   392c0:	strh	r2, [r3, #32]
   392c4:	ldr	r2, [r4, #144]	; 0x90
   392c8:	strh	r6, [r4, #164]	; 0xa4
   392cc:	str	r2, [r3, #20]
   392d0:	ldr	r2, [r4, #152]	; 0x98
   392d4:	cmp	r5, r0
   392d8:	str	r2, [r3, #28]
   392dc:	ldr	r2, [r4, #148]	; 0x94
   392e0:	ldr	lr, [r4, #136]	; 0x88
   392e4:	moveq	r5, ip
   392e8:	ldr	ip, [r4, #168]	; 0xa8
   392ec:	add	r6, r2, r1
   392f0:	str	r2, [r4, #152]	; 0x98
   392f4:	str	r6, [r4, #148]	; 0x94
   392f8:	str	lr, [r4, #144]	; 0x90
   392fc:	str	ip, [r3, #16]
   39300:	ldr	r2, [r5]
   39304:	str	r2, [r4, #168]	; 0xa8
   39308:	strh	r1, [r3, #14]
   3930c:	add	sp, sp, #8
   39310:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   39314:	mov	r1, #4
   39318:	ldr	r0, [r4, #40]	; 0x28
   3931c:	str	r1, [sp]
   39320:	add	r1, r4, #84	; 0x54
   39324:	ldr	sl, [r4, #48]	; 0x30
   39328:	blx	sl
   3932c:	cmp	r0, #0
   39330:	beq	39220 <flatcc_builder_start_buffer@@Base+0x64>
   39334:	bl	140e8 <__assert_fail@plt+0xb0>
   39338:	mvn	r0, #0
   3933c:	b	3930c <flatcc_builder_start_buffer@@Base+0x150>
   39340:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   39344:	andeq	fp, r5, r0, lsl r4

00039348 <flatcc_builder_end_buffer@@Base>:
   39348:	ldr	r3, [r0, #32]
   3934c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39350:	sub	sp, sp, #100	; 0x64
   39354:	ldrh	r5, [r0, #164]	; 0xa4
   39358:	ldrh	r3, [r3, #14]
   3935c:	ldr	r2, [r0, #152]	; 0x98
   39360:	and	r5, r5, #2
   39364:	cmp	r2, #0
   39368:	orrne	r5, r5, #1
   3936c:	cmp	r3, #1
   39370:	bne	3965c <flatcc_builder_end_buffer@@Base+0x314>
   39374:	ldrh	r3, [r0, #132]	; 0x84
   39378:	ldrh	r2, [r0, #128]	; 0x80
   3937c:	mov	r9, r1
   39380:	mov	r1, #0
   39384:	cmp	r3, r2
   39388:	movhi	r2, r3
   3938c:	strhhi	r3, [r0, #128]	; 0x80
   39390:	cmp	r3, #0
   39394:	mov	r4, r0
   39398:	str	r1, [sp, #20]
   3939c:	and	r7, r5, #1
   393a0:	beq	39608 <flatcc_builder_end_buffer@@Base+0x2c0>
   393a4:	cmp	r3, #4
   393a8:	movcc	r6, #4
   393ac:	movcs	r6, r3
   393b0:	cmp	r6, r2
   393b4:	movcc	r6, r2
   393b8:	cmp	r7, r1
   393bc:	bne	39424 <flatcc_builder_end_buffer@@Base+0xdc>
   393c0:	ldr	r8, [r0, #140]	; 0x8c
   393c4:	sub	r3, r3, #1
   393c8:	ands	r3, r3, r8
   393cc:	beq	39424 <flatcc_builder_end_buffer@@Base+0xdc>
   393d0:	add	r1, r8, r3
   393d4:	ldr	sl, [pc, #748]	; 396c8 <flatcc_builder_end_buffer@@Base+0x380>
   393d8:	mov	r2, #1
   393dc:	cmp	r8, r1
   393e0:	str	r3, [sp, #24]
   393e4:	str	r3, [sp, #36]	; 0x24
   393e8:	str	sl, [sp, #32]
   393ec:	str	r1, [r0, #140]	; 0x8c
   393f0:	str	r2, [sp, #28]
   393f4:	bgt	396b0 <flatcc_builder_end_buffer@@Base+0x368>
   393f8:	ldr	r0, [r0, #36]	; 0x24
   393fc:	add	r1, sp, #32
   39400:	str	r3, [sp]
   39404:	mov	r3, r8
   39408:	ldr	fp, [r4, #44]	; 0x2c
   3940c:	blx	fp
   39410:	cmp	r0, #0
   39414:	bne	396b4 <flatcc_builder_end_buffer@@Base+0x36c>
   39418:	cmn	r8, #1
   3941c:	beq	3969c <flatcc_builder_end_buffer@@Base+0x354>
   39420:	ldrh	r2, [r4, #128]	; 0x80
   39424:	ldr	r3, [r4, #168]	; 0xa8
   39428:	cmp	r2, r6
   3942c:	strhcc	r6, [r4, #128]	; 0x80
   39430:	cmp	r3, #0
   39434:	movne	r1, #4
   39438:	moveq	r1, #0
   3943c:	ands	r5, r5, #2
   39440:	uxtb	ip, r7
   39444:	str	r3, [sp, #20]
   39448:	ldr	r0, [r4, #136]	; 0x88
   3944c:	bne	39618 <flatcc_builder_end_buffer@@Base+0x2d0>
   39450:	sub	r3, r6, #1
   39454:	sub	r6, r0, #4
   39458:	cmp	ip, #0
   3945c:	sub	r6, r6, r1
   39460:	and	r6, r6, r3
   39464:	moveq	r8, #3
   39468:	moveq	lr, #2
   3946c:	moveq	r2, #1
   39470:	moveq	r3, #4
   39474:	bne	39628 <flatcc_builder_end_buffer@@Base+0x2e0>
   39478:	add	r5, r5, #1
   3947c:	add	sl, sp, #96	; 0x60
   39480:	add	r5, sl, r5, lsl #3
   39484:	add	fp, sp, #12
   39488:	mov	sl, #4
   3948c:	cmp	r1, #0
   39490:	str	r3, [sp, #24]
   39494:	str	fp, [r5, #-72]	; 0xffffffb8
   39498:	str	sl, [r5, #-68]	; 0xffffffbc
   3949c:	str	r2, [sp, #28]
   394a0:	beq	394d0 <flatcc_builder_end_buffer@@Base+0x188>
   394a4:	add	r2, r2, #1
   394a8:	add	r5, sp, #96	; 0x60
   394ac:	add	r2, r5, r2, lsl #3
   394b0:	add	r3, r3, r1
   394b4:	add	r5, sp, #20
   394b8:	str	r3, [sp, #24]
   394bc:	str	r1, [r2, #-68]	; 0xffffffbc
   394c0:	str	r5, [r2, #-72]	; 0xffffffb8
   394c4:	mov	r2, lr
   394c8:	str	lr, [sp, #28]
   394cc:	mov	lr, r8
   394d0:	cmp	r6, #0
   394d4:	beq	39500 <flatcc_builder_end_buffer@@Base+0x1b8>
   394d8:	add	r2, r2, #1
   394dc:	add	r1, sp, #96	; 0x60
   394e0:	add	r1, r1, r2, lsl #3
   394e4:	ldr	r5, [pc, #476]	; 396c8 <flatcc_builder_end_buffer@@Base+0x380>
   394e8:	mov	r2, lr
   394ec:	add	r3, r3, r6
   394f0:	str	r3, [sp, #24]
   394f4:	str	r6, [r1, #-68]	; 0xffffffbc
   394f8:	str	r5, [r1, #-72]	; 0xffffffb8
   394fc:	str	lr, [sp, #28]
   39500:	sub	r5, r0, r3
   39504:	cmp	ip, #0
   39508:	mov	r1, r5
   3950c:	beq	39650 <flatcc_builder_end_buffer@@Base+0x308>
   39510:	cmp	r7, #0
   39514:	add	r1, r5, #4
   39518:	beq	39650 <flatcc_builder_end_buffer@@Base+0x308>
   3951c:	ldr	ip, [r4, #144]	; 0x90
   39520:	sub	ip, ip, r1
   39524:	sub	r9, r9, r1
   39528:	cmp	r5, r0
   3952c:	str	r9, [sp, #12]
   39530:	str	ip, [sp, #16]
   39534:	bge	39670 <flatcc_builder_end_buffer@@Base+0x328>
   39538:	ldr	r0, [r4, #36]	; 0x24
   3953c:	add	r1, sp, #32
   39540:	str	r3, [sp]
   39544:	mov	r3, r5
   39548:	ldr	r6, [r4, #44]	; 0x2c
   3954c:	blx	r6
   39550:	subs	r1, r0, #0
   39554:	bne	39674 <flatcc_builder_end_buffer@@Base+0x32c>
   39558:	cmp	r5, #0
   3955c:	str	r5, [r4, #136]	; 0x88
   39560:	beq	39688 <flatcc_builder_end_buffer@@Base+0x340>
   39564:	ldr	r3, [r4, #32]
   39568:	ldr	r2, [r4, #20]
   3956c:	ldr	r0, [r4, #16]
   39570:	ldr	ip, [r3, #20]
   39574:	str	ip, [r4, #144]	; 0x90
   39578:	ldr	ip, [r3, #28]
   3957c:	str	ip, [r4, #152]	; 0x98
   39580:	ldr	ip, [r3, #16]
   39584:	str	ip, [r4, #168]	; 0xa8
   39588:	ldrh	r3, [r3, #32]
   3958c:	strh	r3, [r4, #164]	; 0xa4
   39590:	bl	13f9c <memset@plt>
   39594:	ldr	r3, [r4, #32]
   39598:	ldr	r2, [r4, #64]	; 0x40
   3959c:	ldrh	lr, [r4, #130]	; 0x82
   395a0:	ldr	ip, [r3]
   395a4:	ldr	r1, [r3, #4]
   395a8:	ldrh	r0, [r4, #128]	; 0x80
   395ac:	sub	r2, r2, ip
   395b0:	cmp	r2, r1
   395b4:	movcs	r2, r1
   395b8:	cmp	r0, lr
   395bc:	ldr	r0, [r4, #60]	; 0x3c
   395c0:	ldr	r6, [r3, #8]
   395c4:	str	r2, [r4, #24]
   395c8:	add	r2, r0, ip
   395cc:	str	r2, [r4, #16]
   395d0:	str	r6, [r4, #20]
   395d4:	ldr	r2, [r4, #156]	; 0x9c
   395d8:	str	ip, [r4, #28]
   395dc:	str	r1, [r3, #4]
   395e0:	strhcc	lr, [r4, #128]	; 0x80
   395e4:	ldrh	r1, [r3, #12]
   395e8:	sub	r2, r2, #1
   395ec:	sub	r3, r3, #36	; 0x24
   395f0:	mov	r0, r5
   395f4:	str	r2, [r4, #156]	; 0x9c
   395f8:	strh	r1, [r4, #130]	; 0x82
   395fc:	str	r3, [r4, #32]
   39600:	add	sp, sp, #100	; 0x64
   39604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39608:	cmp	r2, #4
   3960c:	movcs	r6, r2
   39610:	movcc	r6, #4
   39614:	b	39424 <flatcc_builder_end_buffer@@Base+0xdc>
   39618:	sub	r3, r0, #8
   3961c:	sub	r6, r6, #1
   39620:	sub	r3, r3, r1
   39624:	and	r6, r6, r3
   39628:	add	r3, sp, #16
   3962c:	mov	r8, #4
   39630:	mov	r5, #1
   39634:	str	r3, [sp, #32]
   39638:	str	r8, [sp, #36]	; 0x24
   3963c:	mov	ip, r5
   39640:	mov	lr, #3
   39644:	mov	r2, #2
   39648:	mov	r3, #8
   3964c:	b	39478 <flatcc_builder_end_buffer@@Base+0x130>
   39650:	ldr	ip, [r4, #140]	; 0x8c
   39654:	sub	ip, ip, r1
   39658:	b	39524 <flatcc_builder_end_buffer@@Base+0x1dc>
   3965c:	ldr	r3, [pc, #104]	; 396cc <flatcc_builder_end_buffer@@Base+0x384>
   39660:	ldr	r2, [pc, #104]	; 396d0 <flatcc_builder_end_buffer@@Base+0x388>
   39664:	ldr	r1, [pc, #104]	; 396d4 <flatcc_builder_end_buffer@@Base+0x38c>
   39668:	ldr	r0, [pc, #104]	; 396d8 <flatcc_builder_end_buffer@@Base+0x390>
   3966c:	bl	14038 <__assert_fail@plt>
   39670:	bl	14134 <__assert_fail@plt+0xfc>
   39674:	ldr	r3, [pc, #96]	; 396dc <flatcc_builder_end_buffer@@Base+0x394>
   39678:	ldr	r2, [pc, #96]	; 396e0 <flatcc_builder_end_buffer@@Base+0x398>
   3967c:	ldr	r1, [pc, #80]	; 396d4 <flatcc_builder_end_buffer@@Base+0x38c>
   39680:	ldr	r0, [pc, #92]	; 396e4 <flatcc_builder_end_buffer@@Base+0x39c>
   39684:	bl	14038 <__assert_fail@plt>
   39688:	ldr	r3, [pc, #88]	; 396e8 <flatcc_builder_end_buffer@@Base+0x3a0>
   3968c:	mov	r2, #772	; 0x304
   39690:	ldr	r1, [pc, #60]	; 396d4 <flatcc_builder_end_buffer@@Base+0x38c>
   39694:	ldr	r0, [pc, #72]	; 396e4 <flatcc_builder_end_buffer@@Base+0x39c>
   39698:	bl	14038 <__assert_fail@plt>
   3969c:	add	r3, sl, #608	; 0x260
   396a0:	ldr	r2, [pc, #68]	; 396ec <flatcc_builder_end_buffer@@Base+0x3a4>
   396a4:	ldr	r1, [pc, #40]	; 396d4 <flatcc_builder_end_buffer@@Base+0x38c>
   396a8:	ldr	r0, [pc, #52]	; 396e4 <flatcc_builder_end_buffer@@Base+0x39c>
   396ac:	bl	14038 <__assert_fail@plt>
   396b0:	bl	1410c <__assert_fail@plt+0xd4>
   396b4:	ldr	r3, [pc, #52]	; 396f0 <flatcc_builder_end_buffer@@Base+0x3a8>
   396b8:	ldr	r2, [pc, #52]	; 396f4 <flatcc_builder_end_buffer@@Base+0x3ac>
   396bc:	ldr	r1, [pc, #16]	; 396d4 <flatcc_builder_end_buffer@@Base+0x38c>
   396c0:	ldr	r0, [pc, #28]	; 396e4 <flatcc_builder_end_buffer@@Base+0x39c>
   396c4:	bl	14038 <__assert_fail@plt>
   396c8:	andeq	fp, r5, r0, lsl r4
   396cc:	andeq	fp, r5, r0, asr #13
   396d0:	andeq	r0, r0, r6, asr #6
   396d4:	andeq	fp, r5, r8, asr #21
   396d8:	ldrdeq	fp, [r5], -ip
   396dc:	muleq	r5, r4, r3
   396e0:	andeq	r0, r0, fp, lsl #5
   396e4:	andeq	sl, r4, r4, asr sp
   396e8:	andeq	fp, r5, r0, lsl #13
   396ec:			; <UNDEFINED> instruction: 0x000002be
   396f0:	andeq	fp, r5, r8, lsl #7
   396f4:	andeq	r0, r0, r5, lsr #5

000396f8 <flatcc_builder_start_struct@@Base>:
   396f8:	push	{r4, r5, r6, r7, r8, lr}
   396fc:	mov	r4, r0
   39700:	ldr	r0, [r0, #156]	; 0x9c
   39704:	ldr	r3, [r4, #160]	; 0xa0
   39708:	mov	r6, r1
   3970c:	add	r1, r0, #1
   39710:	cmp	r1, r3
   39714:	sub	sp, sp, #8
   39718:	mov	r5, r2
   3971c:	str	r1, [r4, #156]	; 0x9c
   39720:	ble	39790 <flatcc_builder_start_struct@@Base+0x98>
   39724:	ldr	r3, [r4, #176]	; 0xb0
   39728:	cmp	r3, #0
   3972c:	cmpgt	r1, r3
   39730:	movgt	r3, #1
   39734:	movle	r3, #0
   39738:	bgt	398a0 <flatcc_builder_start_struct@@Base+0x1a8>
   3973c:	add	r0, r0, r0, lsl #3
   39740:	ldr	r1, [r4, #88]	; 0x58
   39744:	lsl	r7, r0, #2
   39748:	add	r2, r7, #36	; 0x24
   3974c:	cmp	r2, r1
   39750:	bhi	3987c <flatcc_builder_start_struct@@Base+0x184>
   39754:	ldr	r3, [r4, #84]	; 0x54
   39758:	add	r3, r3, r7
   3975c:	cmp	r3, #0
   39760:	str	r3, [r4, #32]
   39764:	beq	398a0 <flatcc_builder_start_struct@@Base+0x1a8>
   39768:	ldr	r2, [r4, #88]	; 0x58
   3976c:	ldr	r0, [pc, #308]	; 398a8 <flatcc_builder_start_struct@@Base+0x1b0>
   39770:	ldr	r1, [r4, #176]	; 0xb0
   39774:	umull	r0, r2, r0, r2
   39778:	lsr	r2, r2, #3
   3977c:	cmp	r1, #0
   39780:	cmpgt	r2, r1
   39784:	str	r2, [r4, #160]	; 0xa0
   39788:	strgt	r1, [r4, #160]	; 0xa0
   3978c:	b	3979c <flatcc_builder_start_struct@@Base+0xa4>
   39790:	ldr	r3, [r4, #32]
   39794:	add	r3, r3, #36	; 0x24
   39798:	str	r3, [r4, #32]
   3979c:	ldr	lr, [r4, #20]
   397a0:	ldr	ip, [r4, #28]
   397a4:	ldr	r1, [r4, #64]	; 0x40
   397a8:	add	r2, lr, ip
   397ac:	add	r2, r2, #7
   397b0:	ldrh	r7, [r4, #130]	; 0x82
   397b4:	bic	r2, r2, #7
   397b8:	sub	r1, r1, r2
   397bc:	ldr	r0, [r4, #60]	; 0x3c
   397c0:	cmn	r1, #4
   397c4:	str	lr, [r3, #8]
   397c8:	mvn	lr, #3
   397cc:	strh	r7, [r3, #12]
   397d0:	movhi	r1, lr
   397d4:	strh	r5, [r4, #130]	; 0x82
   397d8:	str	ip, [r3]
   397dc:	mov	r5, #0
   397e0:	mov	ip, #2
   397e4:	str	lr, [r3, #4]
   397e8:	add	r0, r0, r2
   397ec:	str	r5, [r4, #20]
   397f0:	str	r2, [r4, #28]
   397f4:	mvn	r5, #3
   397f8:	strh	ip, [r3, #14]
   397fc:	strls	r1, [r4, #24]
   39800:	strhi	lr, [r4, #24]
   39804:	cmp	r6, r1
   39808:	str	r0, [r4, #16]
   3980c:	str	r5, [r3, #4]
   39810:	str	r6, [r4, #20]
   39814:	bcs	39820 <flatcc_builder_start_struct@@Base+0x128>
   39818:	add	sp, sp, #8
   3981c:	pop	{r4, r5, r6, r7, r8, pc}
   39820:	add	r6, r6, #1
   39824:	mov	r3, #1
   39828:	ldr	r0, [r4, #40]	; 0x28
   3982c:	add	r2, r6, r2
   39830:	str	r3, [sp]
   39834:	add	r1, r4, #60	; 0x3c
   39838:	ldr	r6, [r4, #48]	; 0x30
   3983c:	blx	r6
   39840:	cmp	r0, #0
   39844:	bne	398a0 <flatcc_builder_start_struct@@Base+0x1a8>
   39848:	ldr	r2, [r4, #28]
   3984c:	ldr	r3, [r4, #64]	; 0x40
   39850:	ldr	r0, [r4, #60]	; 0x3c
   39854:	sub	r3, r3, r2
   39858:	ldr	r1, [r4, #32]
   3985c:	cmp	r3, r5
   39860:	add	r0, r0, r2
   39864:	movhi	r3, r5
   39868:	str	r3, [r4, #24]
   3986c:	str	r0, [r4, #16]
   39870:	str	r5, [r1, #4]
   39874:	add	sp, sp, #8
   39878:	pop	{r4, r5, r6, r7, r8, pc}
   3987c:	mov	r1, #4
   39880:	ldr	r0, [r4, #40]	; 0x28
   39884:	str	r1, [sp]
   39888:	add	r1, r4, #84	; 0x54
   3988c:	ldr	r8, [r4, #48]	; 0x30
   39890:	blx	r8
   39894:	cmp	r0, #0
   39898:	beq	39754 <flatcc_builder_start_struct@@Base+0x5c>
   3989c:	bl	140e8 <__assert_fail@plt+0xb0>
   398a0:	mov	r0, #0
   398a4:	b	39818 <flatcc_builder_start_struct@@Base+0x120>
   398a8:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^

000398ac <flatcc_builder_struct_edit@@Base>:
   398ac:	ldr	r0, [r0, #16]
   398b0:	bx	lr

000398b4 <flatcc_builder_end_struct@@Base>:
   398b4:	ldr	r3, [r0, #32]
   398b8:	push	{r4, r5, r6, lr}
   398bc:	sub	sp, sp, #80	; 0x50
   398c0:	ldrh	r3, [r3, #14]
   398c4:	cmp	r3, #2
   398c8:	bne	39a54 <flatcc_builder_end_struct@@Base+0x1a0>
   398cc:	ldrh	r3, [r0, #130]	; 0x82
   398d0:	mov	r4, r0
   398d4:	ldr	r0, [r0, #16]
   398d8:	cmp	r3, #0
   398dc:	ldr	r1, [r4, #20]
   398e0:	beq	39a40 <flatcc_builder_end_struct@@Base+0x18c>
   398e4:	ldrh	r2, [r4, #128]	; 0x80
   398e8:	ldr	ip, [r4, #136]	; 0x88
   398ec:	cmp	r2, r3
   398f0:	strhcc	r3, [r4, #128]	; 0x80
   398f4:	mov	r2, #0
   398f8:	sub	r3, r3, #1
   398fc:	sub	r5, ip, r1
   39900:	cmp	r1, #0
   39904:	and	r3, r3, r5
   39908:	str	r2, [sp, #8]
   3990c:	str	r2, [sp, #12]
   39910:	bne	39a00 <flatcc_builder_end_struct@@Base+0x14c>
   39914:	cmp	r3, #0
   39918:	movne	r2, #1
   3991c:	movne	r0, r1
   39920:	beq	39a28 <flatcc_builder_end_struct@@Base+0x174>
   39924:	add	r0, r0, #1
   39928:	add	r5, sp, #80	; 0x50
   3992c:	add	r1, r1, r3
   39930:	add	r0, r5, r0, lsl #3
   39934:	ldr	lr, [pc, #300]	; 39a68 <flatcc_builder_end_struct@@Base+0x1b4>
   39938:	sub	r5, ip, r1
   3993c:	str	r3, [r0, #-68]	; 0xffffffbc
   39940:	str	r1, [sp, #8]
   39944:	str	r2, [sp, #12]
   39948:	str	lr, [r0, #-72]	; 0xffffffb8
   3994c:	cmp	ip, r5
   39950:	ble	39a28 <flatcc_builder_end_struct@@Base+0x174>
   39954:	ldr	r0, [r4, #36]	; 0x24
   39958:	mov	r3, r5
   3995c:	str	r1, [sp]
   39960:	add	r1, sp, #16
   39964:	ldr	r6, [r4, #44]	; 0x2c
   39968:	blx	r6
   3996c:	subs	r1, r0, #0
   39970:	bne	39a2c <flatcc_builder_end_struct@@Base+0x178>
   39974:	cmp	r5, #0
   39978:	str	r5, [r4, #136]	; 0x88
   3997c:	beq	399f4 <flatcc_builder_end_struct@@Base+0x140>
   39980:	ldr	r2, [r4, #20]
   39984:	ldr	r0, [r4, #16]
   39988:	bl	13f9c <memset@plt>
   3998c:	ldr	r3, [r4, #32]
   39990:	ldr	r2, [r4, #64]	; 0x40
   39994:	ldrh	lr, [r4, #130]	; 0x82
   39998:	ldr	ip, [r3]
   3999c:	ldr	r1, [r3, #4]
   399a0:	ldrh	r0, [r4, #128]	; 0x80
   399a4:	sub	r2, r2, ip
   399a8:	cmp	r2, r1
   399ac:	movcs	r2, r1
   399b0:	cmp	r0, lr
   399b4:	ldr	r0, [r4, #60]	; 0x3c
   399b8:	ldr	r6, [r3, #8]
   399bc:	str	r2, [r4, #24]
   399c0:	add	r2, r0, ip
   399c4:	str	r2, [r4, #16]
   399c8:	str	r6, [r4, #20]
   399cc:	ldr	r2, [r4, #156]	; 0x9c
   399d0:	str	ip, [r4, #28]
   399d4:	str	r1, [r3, #4]
   399d8:	strhcc	lr, [r4, #128]	; 0x80
   399dc:	ldrh	r1, [r3, #12]
   399e0:	sub	r2, r2, #1
   399e4:	sub	r3, r3, #36	; 0x24
   399e8:	str	r2, [r4, #156]	; 0x9c
   399ec:	strh	r1, [r4, #130]	; 0x82
   399f0:	str	r3, [r4, #32]
   399f4:	mov	r0, r5
   399f8:	add	sp, sp, #80	; 0x50
   399fc:	pop	{r4, r5, r6, pc}
   39a00:	cmp	r3, r2
   39a04:	mov	r2, #1
   39a08:	str	r0, [sp, #16]
   39a0c:	str	r2, [sp, #12]
   39a10:	movne	r0, r2
   39a14:	str	r1, [sp, #8]
   39a18:	str	r1, [sp, #20]
   39a1c:	movne	r2, #2
   39a20:	beq	3994c <flatcc_builder_end_struct@@Base+0x98>
   39a24:	b	39924 <flatcc_builder_end_struct@@Base+0x70>
   39a28:	bl	14134 <__assert_fail@plt+0xfc>
   39a2c:	ldr	r3, [pc, #56]	; 39a6c <flatcc_builder_end_struct@@Base+0x1b8>
   39a30:	ldr	r2, [pc, #56]	; 39a70 <flatcc_builder_end_struct@@Base+0x1bc>
   39a34:	ldr	r1, [pc, #56]	; 39a74 <flatcc_builder_end_struct@@Base+0x1c0>
   39a38:	ldr	r0, [pc, #56]	; 39a78 <flatcc_builder_end_struct@@Base+0x1c4>
   39a3c:	bl	14038 <__assert_fail@plt>
   39a40:	ldr	r3, [pc, #52]	; 39a7c <flatcc_builder_end_struct@@Base+0x1c8>
   39a44:	ldr	r2, [pc, #52]	; 39a80 <flatcc_builder_end_struct@@Base+0x1cc>
   39a48:	ldr	r1, [pc, #36]	; 39a74 <flatcc_builder_end_struct@@Base+0x1c0>
   39a4c:	ldr	r0, [pc, #48]	; 39a84 <flatcc_builder_end_struct@@Base+0x1d0>
   39a50:	bl	14038 <__assert_fail@plt>
   39a54:	ldr	r3, [pc, #44]	; 39a88 <flatcc_builder_end_struct@@Base+0x1d4>
   39a58:	mov	r2, #872	; 0x368
   39a5c:	ldr	r1, [pc, #16]	; 39a74 <flatcc_builder_end_struct@@Base+0x1c0>
   39a60:	ldr	r0, [pc, #36]	; 39a8c <flatcc_builder_end_struct@@Base+0x1d8>
   39a64:	bl	14038 <__assert_fail@plt>
   39a68:	andeq	fp, r5, r0, lsl r4
   39a6c:	muleq	r5, r4, r3
   39a70:	andeq	r0, r0, fp, lsl #5
   39a74:	andeq	fp, r5, r8, asr #21
   39a78:	andeq	sl, r4, r4, asr sp
   39a7c:	andeq	fp, r5, r0, lsr #13
   39a80:	andeq	r0, r0, pc, lsl #6
   39a84:	ldrdeq	fp, [r5], -r0
   39a88:	ldrdeq	fp, [r5], -ip
   39a8c:	andeq	fp, r5, r8, lsl #24

00039a90 <flatcc_builder_extend_vector@@Base>:
   39a90:	ldr	r3, [r0, #32]
   39a94:	push	{r4, r5, r6, r7, lr}
   39a98:	mov	r5, r0
   39a9c:	ldr	r0, [r3, #20]
   39aa0:	ldr	r4, [r3, #24]
   39aa4:	add	ip, r1, r0
   39aa8:	cmp	r0, ip
   39aac:	movls	r0, #0
   39ab0:	movhi	r0, #1
   39ab4:	cmp	r4, ip
   39ab8:	movcs	r4, r0
   39abc:	orrcc	r4, r0, #1
   39ac0:	cmp	r4, #0
   39ac4:	sub	sp, sp, #12
   39ac8:	bne	39b64 <flatcc_builder_extend_vector@@Base+0xd4>
   39acc:	ldr	r2, [r3, #16]
   39ad0:	str	ip, [r3, #20]
   39ad4:	ldr	r6, [r5, #20]
   39ad8:	ldr	r3, [r5, #24]
   39adc:	mla	r1, r2, r1, r6
   39ae0:	cmp	r1, r3
   39ae4:	str	r1, [r5, #20]
   39ae8:	bcs	39afc <flatcc_builder_extend_vector@@Base+0x6c>
   39aec:	ldr	r0, [r5, #16]
   39af0:	add	r0, r0, r6
   39af4:	add	sp, sp, #12
   39af8:	pop	{r4, r5, r6, r7, pc}
   39afc:	ldr	r2, [r5, #28]
   39b00:	mov	r3, #1
   39b04:	add	r2, r2, #1
   39b08:	ldr	r0, [r5, #40]	; 0x28
   39b0c:	add	r2, r2, r1
   39b10:	str	r3, [sp]
   39b14:	add	r1, r5, #60	; 0x3c
   39b18:	ldr	r7, [r5, #48]	; 0x30
   39b1c:	blx	r7
   39b20:	cmp	r0, #0
   39b24:	bne	39b5c <flatcc_builder_extend_vector@@Base+0xcc>
   39b28:	ldr	r2, [r5, #28]
   39b2c:	ldr	r3, [r5, #64]	; 0x40
   39b30:	ldr	r0, [r5, #60]	; 0x3c
   39b34:	sub	r3, r3, r2
   39b38:	cmn	r3, #4
   39b3c:	mvnhi	r3, #3
   39b40:	str	r3, [r5, #24]
   39b44:	ldr	r3, [r5, #32]
   39b48:	add	r0, r0, r2
   39b4c:	mvn	r2, #3
   39b50:	str	r0, [r5, #16]
   39b54:	str	r2, [r3, #4]
   39b58:	b	39af0 <flatcc_builder_extend_vector@@Base+0x60>
   39b5c:	mov	r0, r4
   39b60:	b	39af4 <flatcc_builder_extend_vector@@Base+0x64>
   39b64:	bl	1415c <__assert_fail@plt+0x124>

00039b68 <flatcc_builder_vector_push@@Base>:
   39b68:	ldr	r3, [r0, #32]
   39b6c:	push	{r4, r5, r6, r7, r8, lr}
   39b70:	sub	sp, sp, #8
   39b74:	ldrh	r2, [r3, #14]
   39b78:	cmp	r2, #4
   39b7c:	bne	39c64 <flatcc_builder_vector_push@@Base+0xfc>
   39b80:	mov	r5, r1
   39b84:	ldr	r2, [r3, #20]
   39b88:	ldr	r1, [r3, #24]
   39b8c:	cmp	r2, r1
   39b90:	bhi	39c50 <flatcc_builder_vector_push@@Base+0xe8>
   39b94:	add	r2, r2, #1
   39b98:	str	r2, [r3, #20]
   39b9c:	ldr	r7, [r3, #16]
   39ba0:	ldr	r6, [r0, #20]
   39ba4:	ldr	r3, [r0, #24]
   39ba8:	add	r1, r7, r6
   39bac:	cmp	r1, r3
   39bb0:	mov	r4, r0
   39bb4:	str	r1, [r0, #20]
   39bb8:	bcs	39be8 <flatcc_builder_vector_push@@Base+0x80>
   39bbc:	ldr	r3, [r0, #16]
   39bc0:	adds	r3, r3, r6
   39bc4:	beq	39bdc <flatcc_builder_vector_push@@Base+0x74>
   39bc8:	mov	r0, r3
   39bcc:	mov	r2, r7
   39bd0:	mov	r1, r5
   39bd4:	bl	13edc <memcpy@plt>
   39bd8:	mov	r3, r0
   39bdc:	mov	r0, r3
   39be0:	add	sp, sp, #8
   39be4:	pop	{r4, r5, r6, r7, r8, pc}
   39be8:	ldr	r2, [r0, #28]
   39bec:	mov	r3, #1
   39bf0:	add	r2, r2, #1
   39bf4:	ldr	r0, [r0, #40]	; 0x28
   39bf8:	add	r2, r2, r1
   39bfc:	str	r3, [sp]
   39c00:	add	r1, r4, #60	; 0x3c
   39c04:	ldr	r8, [r4, #48]	; 0x30
   39c08:	blx	r8
   39c0c:	cmp	r0, #0
   39c10:	bne	39c48 <flatcc_builder_vector_push@@Base+0xe0>
   39c14:	ldr	r1, [r4, #28]
   39c18:	ldr	r2, [r4, #64]	; 0x40
   39c1c:	ldr	r3, [r4, #60]	; 0x3c
   39c20:	sub	r2, r2, r1
   39c24:	cmn	r2, #4
   39c28:	mvnhi	r2, #3
   39c2c:	str	r2, [r4, #24]
   39c30:	ldr	r2, [r4, #32]
   39c34:	add	r3, r3, r1
   39c38:	mvn	r1, #3
   39c3c:	str	r3, [r4, #16]
   39c40:	str	r1, [r2, #4]
   39c44:	b	39bc0 <flatcc_builder_vector_push@@Base+0x58>
   39c48:	mov	r3, #0
   39c4c:	b	39bdc <flatcc_builder_vector_push@@Base+0x74>
   39c50:	ldr	r3, [pc, #32]	; 39c78 <flatcc_builder_vector_push@@Base+0x110>
   39c54:	mov	r2, #908	; 0x38c
   39c58:	ldr	r1, [pc, #28]	; 39c7c <flatcc_builder_vector_push@@Base+0x114>
   39c5c:	ldr	r0, [pc, #28]	; 39c80 <flatcc_builder_vector_push@@Base+0x118>
   39c60:	bl	14038 <__assert_fail@plt>
   39c64:	ldr	r3, [pc, #12]	; 39c78 <flatcc_builder_vector_push@@Base+0x110>
   39c68:	ldr	r2, [pc, #20]	; 39c84 <flatcc_builder_vector_push@@Base+0x11c>
   39c6c:	ldr	r1, [pc, #8]	; 39c7c <flatcc_builder_vector_push@@Base+0x114>
   39c70:	ldr	r0, [pc, #16]	; 39c88 <flatcc_builder_vector_push@@Base+0x120>
   39c74:	bl	14038 <__assert_fail@plt>
   39c78:	strdeq	fp, [r5], -r8
   39c7c:	andeq	fp, r5, r8, asr #21
   39c80:	andeq	fp, r5, r0, ror #24
   39c84:	andeq	r0, r0, fp, lsl #7
   39c88:	andeq	fp, r5, r4, lsr ip

00039c8c <flatcc_builder_append_vector@@Base>:
   39c8c:	push	{r4, r5, r6, r7, r8, r9, lr}
   39c90:	mov	r5, r1
   39c94:	ldr	r1, [r0, #32]
   39c98:	sub	sp, sp, #12
   39c9c:	ldrh	r3, [r1, #14]
   39ca0:	cmp	r3, #4
   39ca4:	bne	39d94 <flatcc_builder_append_vector@@Base+0x108>
   39ca8:	ldr	r3, [r1, #20]
   39cac:	mov	r6, r0
   39cb0:	add	r0, r2, r3
   39cb4:	cmp	r3, r0
   39cb8:	ldr	r4, [r1, #24]
   39cbc:	movls	r3, #0
   39cc0:	movhi	r3, #1
   39cc4:	cmp	r4, r0
   39cc8:	movcs	r4, r3
   39ccc:	orrcc	r4, r3, #1
   39cd0:	cmp	r4, #0
   39cd4:	bne	39d90 <flatcc_builder_append_vector@@Base+0x104>
   39cd8:	ldr	r7, [r1, #16]
   39cdc:	str	r0, [r1, #20]
   39ce0:	ldr	r8, [r6, #20]
   39ce4:	mul	r7, r7, r2
   39ce8:	ldr	r3, [r6, #24]
   39cec:	add	r1, r7, r8
   39cf0:	cmp	r1, r3
   39cf4:	str	r1, [r6, #20]
   39cf8:	bcs	39d28 <flatcc_builder_append_vector@@Base+0x9c>
   39cfc:	ldr	r3, [r6, #16]
   39d00:	adds	r3, r3, r8
   39d04:	beq	39d1c <flatcc_builder_append_vector@@Base+0x90>
   39d08:	mov	r0, r3
   39d0c:	mov	r2, r7
   39d10:	mov	r1, r5
   39d14:	bl	13edc <memcpy@plt>
   39d18:	mov	r3, r0
   39d1c:	mov	r0, r3
   39d20:	add	sp, sp, #12
   39d24:	pop	{r4, r5, r6, r7, r8, r9, pc}
   39d28:	ldr	r2, [r6, #28]
   39d2c:	mov	r3, #1
   39d30:	add	r2, r2, #1
   39d34:	ldr	r0, [r6, #40]	; 0x28
   39d38:	add	r2, r2, r1
   39d3c:	str	r3, [sp]
   39d40:	add	r1, r6, #60	; 0x3c
   39d44:	ldr	r9, [r6, #48]	; 0x30
   39d48:	blx	r9
   39d4c:	cmp	r0, #0
   39d50:	bne	39d88 <flatcc_builder_append_vector@@Base+0xfc>
   39d54:	ldr	r1, [r6, #28]
   39d58:	ldr	r2, [r6, #64]	; 0x40
   39d5c:	ldr	r3, [r6, #60]	; 0x3c
   39d60:	sub	r2, r2, r1
   39d64:	cmn	r2, #4
   39d68:	mvnhi	r2, #3
   39d6c:	str	r2, [r6, #24]
   39d70:	ldr	r2, [r6, #32]
   39d74:	add	r3, r3, r1
   39d78:	mvn	r1, #3
   39d7c:	str	r3, [r6, #16]
   39d80:	str	r1, [r2, #4]
   39d84:	b	39d00 <flatcc_builder_append_vector@@Base+0x74>
   39d88:	mov	r3, r4
   39d8c:	b	39d1c <flatcc_builder_append_vector@@Base+0x90>
   39d90:	bl	1415c <__assert_fail@plt+0x124>
   39d94:	ldr	r3, [pc, #12]	; 39da8 <flatcc_builder_append_vector@@Base+0x11c>
   39d98:	ldr	r2, [pc, #12]	; 39dac <flatcc_builder_append_vector@@Base+0x120>
   39d9c:	ldr	r1, [pc, #12]	; 39db0 <flatcc_builder_append_vector@@Base+0x124>
   39da0:	ldr	r0, [pc, #12]	; 39db4 <flatcc_builder_append_vector@@Base+0x128>
   39da4:	bl	14038 <__assert_fail@plt>
   39da8:	andeq	fp, r5, r4, lsl r7
   39dac:	muleq	r0, r3, r3
   39db0:	andeq	fp, r5, r8, asr #21
   39db4:	andeq	fp, r5, r4, lsr ip

00039db8 <flatcc_builder_extend_offset_vector@@Base>:
   39db8:	ldr	ip, [r0, #32]
   39dbc:	push	{r4, r5, r6, r7, lr}
   39dc0:	mov	r4, r0
   39dc4:	ldr	r3, [ip, #20]
   39dc8:	sub	sp, sp, #12
   39dcc:	adds	r3, r1, r3
   39dd0:	movcs	r2, #1
   39dd4:	movcc	r2, #0
   39dd8:	cmn	r3, #-1073741823	; 0xc0000001
   39ddc:	movls	r0, #0
   39de0:	movhi	r0, #1
   39de4:	orrs	r5, r2, r0
   39de8:	bne	39e80 <flatcc_builder_extend_offset_vector@@Base+0xc8>
   39dec:	str	r3, [ip, #20]
   39df0:	ldr	r6, [r4, #20]
   39df4:	ldr	r3, [r4, #24]
   39df8:	add	r1, r6, r1, lsl #2
   39dfc:	cmp	r1, r3
   39e00:	str	r1, [r4, #20]
   39e04:	bcs	39e18 <flatcc_builder_extend_offset_vector@@Base+0x60>
   39e08:	ldr	r0, [r4, #16]
   39e0c:	add	r0, r0, r6
   39e10:	add	sp, sp, #12
   39e14:	pop	{r4, r5, r6, r7, pc}
   39e18:	ldr	r2, [r4, #28]
   39e1c:	mov	r3, #1
   39e20:	add	r2, r2, #1
   39e24:	ldr	r0, [r4, #40]	; 0x28
   39e28:	add	r2, r2, r1
   39e2c:	str	r3, [sp]
   39e30:	add	r1, r4, #60	; 0x3c
   39e34:	ldr	r7, [r4, #48]	; 0x30
   39e38:	blx	r7
   39e3c:	cmp	r0, #0
   39e40:	bne	39e78 <flatcc_builder_extend_offset_vector@@Base+0xc0>
   39e44:	ldr	r2, [r4, #28]
   39e48:	ldr	r3, [r4, #64]	; 0x40
   39e4c:	ldr	r0, [r4, #60]	; 0x3c
   39e50:	sub	r3, r3, r2
   39e54:	cmn	r3, #4
   39e58:	mvnhi	r3, #3
   39e5c:	str	r3, [r4, #24]
   39e60:	ldr	r3, [r4, #32]
   39e64:	add	r0, r0, r2
   39e68:	mvn	r2, #3
   39e6c:	str	r0, [r4, #16]
   39e70:	str	r2, [r3, #4]
   39e74:	b	39e0c <flatcc_builder_extend_offset_vector@@Base+0x54>
   39e78:	mov	r0, r5
   39e7c:	b	39e10 <flatcc_builder_extend_offset_vector@@Base+0x58>
   39e80:	bl	1415c <__assert_fail@plt+0x124>

00039e84 <flatcc_builder_offset_vector_push@@Base>:
   39e84:	ldr	r2, [r0, #32]
   39e88:	push	{r4, r5, r6, r7, lr}
   39e8c:	sub	sp, sp, #12
   39e90:	ldrh	r3, [r2, #14]
   39e94:	cmp	r3, #5
   39e98:	bne	39f50 <flatcc_builder_offset_vector_push@@Base+0xcc>
   39e9c:	ldr	r3, [r2, #20]
   39ea0:	cmn	r3, #-1073741823	; 0xc0000001
   39ea4:	beq	39f44 <flatcc_builder_offset_vector_push@@Base+0xc0>
   39ea8:	add	r3, r3, #1
   39eac:	str	r3, [r2, #20]
   39eb0:	ldr	r5, [r0, #20]
   39eb4:	ldr	r2, [r0, #24]
   39eb8:	add	r3, r5, #4
   39ebc:	cmp	r3, r2
   39ec0:	mov	r4, r0
   39ec4:	mov	r6, r1
   39ec8:	str	r3, [r0, #20]
   39ecc:	bcs	39ee4 <flatcc_builder_offset_vector_push@@Base+0x60>
   39ed0:	ldr	r3, [r0, #16]
   39ed4:	adds	r0, r3, r5
   39ed8:	strne	r6, [r3, r5]
   39edc:	add	sp, sp, #12
   39ee0:	pop	{r4, r5, r6, r7, pc}
   39ee4:	ldr	r2, [r0, #28]
   39ee8:	mov	r3, #1
   39eec:	add	r2, r5, r2
   39ef0:	ldr	r0, [r0, #40]	; 0x28
   39ef4:	add	r2, r2, #5
   39ef8:	str	r3, [sp]
   39efc:	add	r1, r4, #60	; 0x3c
   39f00:	ldr	r7, [r4, #48]	; 0x30
   39f04:	blx	r7
   39f08:	cmp	r0, #0
   39f0c:	bne	39f44 <flatcc_builder_offset_vector_push@@Base+0xc0>
   39f10:	ldr	r1, [r4, #28]
   39f14:	ldr	r2, [r4, #64]	; 0x40
   39f18:	ldr	r3, [r4, #60]	; 0x3c
   39f1c:	sub	r2, r2, r1
   39f20:	cmn	r2, #4
   39f24:	mvnhi	r2, #3
   39f28:	str	r2, [r4, #24]
   39f2c:	ldr	r2, [r4, #32]
   39f30:	add	r3, r3, r1
   39f34:	mvn	r1, #3
   39f38:	str	r3, [r4, #16]
   39f3c:	str	r1, [r2, #4]
   39f40:	b	39ed4 <flatcc_builder_offset_vector_push@@Base+0x50>
   39f44:	mov	r0, #0
   39f48:	add	sp, sp, #12
   39f4c:	pop	{r4, r5, r6, r7, pc}
   39f50:	ldr	r3, [pc, #12]	; 39f64 <flatcc_builder_offset_vector_push@@Base+0xe0>
   39f54:	ldr	r2, [pc, #12]	; 39f68 <flatcc_builder_offset_vector_push@@Base+0xe4>
   39f58:	ldr	r1, [pc, #12]	; 39f6c <flatcc_builder_offset_vector_push@@Base+0xe8>
   39f5c:	ldr	r0, [pc, #12]	; 39f70 <flatcc_builder_offset_vector_push@@Base+0xec>
   39f60:	bl	14038 <__assert_fail@plt>
   39f64:	andeq	fp, r5, r4, lsr r7
   39f68:	andeq	r0, r0, r6, lsr #7
   39f6c:	andeq	fp, r5, r8, asr #21
   39f70:	andeq	fp, r5, r0, lsr #25

00039f74 <flatcc_builder_append_offset_vector@@Base>:
   39f74:	push	{r4, r5, r6, r7, r8, r9, lr}
   39f78:	mov	r5, r0
   39f7c:	ldr	r0, [r0, #32]
   39f80:	sub	sp, sp, #12
   39f84:	ldrh	r3, [r0, #14]
   39f88:	cmp	r3, #5
   39f8c:	bne	3a070 <flatcc_builder_append_offset_vector@@Base+0xfc>
   39f90:	mov	r7, r1
   39f94:	ldr	r1, [r0, #20]
   39f98:	adds	r1, r2, r1
   39f9c:	movcs	r4, #1
   39fa0:	movcc	r4, #0
   39fa4:	cmn	r1, #-1073741823	; 0xc0000001
   39fa8:	movls	r3, #0
   39fac:	movhi	r3, #1
   39fb0:	orrs	r4, r4, r3
   39fb4:	bne	3a06c <flatcc_builder_append_offset_vector@@Base+0xf8>
   39fb8:	str	r1, [r0, #20]
   39fbc:	ldr	r8, [r5, #20]
   39fc0:	lsl	r6, r2, #2
   39fc4:	ldr	r3, [r5, #24]
   39fc8:	add	r1, r6, r8
   39fcc:	cmp	r1, r3
   39fd0:	str	r1, [r5, #20]
   39fd4:	bcs	3a004 <flatcc_builder_append_offset_vector@@Base+0x90>
   39fd8:	ldr	r3, [r5, #16]
   39fdc:	adds	r3, r3, r8
   39fe0:	beq	39ff8 <flatcc_builder_append_offset_vector@@Base+0x84>
   39fe4:	mov	r0, r3
   39fe8:	mov	r2, r6
   39fec:	mov	r1, r7
   39ff0:	bl	13edc <memcpy@plt>
   39ff4:	mov	r3, r0
   39ff8:	mov	r0, r3
   39ffc:	add	sp, sp, #12
   3a000:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3a004:	ldr	r2, [r5, #28]
   3a008:	mov	r3, #1
   3a00c:	add	r2, r2, #1
   3a010:	ldr	r0, [r5, #40]	; 0x28
   3a014:	add	r2, r2, r1
   3a018:	str	r3, [sp]
   3a01c:	add	r1, r5, #60	; 0x3c
   3a020:	ldr	r9, [r5, #48]	; 0x30
   3a024:	blx	r9
   3a028:	cmp	r0, #0
   3a02c:	bne	3a064 <flatcc_builder_append_offset_vector@@Base+0xf0>
   3a030:	ldr	r1, [r5, #28]
   3a034:	ldr	r2, [r5, #64]	; 0x40
   3a038:	ldr	r3, [r5, #60]	; 0x3c
   3a03c:	sub	r2, r2, r1
   3a040:	cmn	r2, #4
   3a044:	mvnhi	r2, #3
   3a048:	str	r2, [r5, #24]
   3a04c:	ldr	r2, [r5, #32]
   3a050:	add	r3, r3, r1
   3a054:	mvn	r1, #3
   3a058:	str	r3, [r5, #16]
   3a05c:	str	r1, [r2, #4]
   3a060:	b	39fdc <flatcc_builder_append_offset_vector@@Base+0x68>
   3a064:	mov	r3, r4
   3a068:	b	39ff8 <flatcc_builder_append_offset_vector@@Base+0x84>
   3a06c:	bl	1415c <__assert_fail@plt+0x124>
   3a070:	ldr	r3, [pc, #12]	; 3a084 <flatcc_builder_append_offset_vector@@Base+0x110>
   3a074:	mov	r2, #948	; 0x3b4
   3a078:	ldr	r1, [pc, #8]	; 3a088 <flatcc_builder_append_offset_vector@@Base+0x114>
   3a07c:	ldr	r0, [pc, #8]	; 3a08c <flatcc_builder_append_offset_vector@@Base+0x118>
   3a080:	bl	14038 <__assert_fail@plt>
   3a084:	andeq	fp, r5, r8, asr r7
   3a088:	andeq	fp, r5, r8, asr #21
   3a08c:	andeq	fp, r5, r0, lsr #25

0003a090 <flatcc_builder_extend_string@@Base>:
   3a090:	ldr	r2, [r0, #32]
   3a094:	push	{r4, r5, r6, lr}
   3a098:	sub	sp, sp, #8
   3a09c:	ldrh	r3, [r2, #14]
   3a0a0:	cmp	r3, #6
   3a0a4:	bne	3a150 <flatcc_builder_extend_string@@Base+0xc0>
   3a0a8:	ldr	r3, [r2, #20]
   3a0ac:	adds	r3, r1, r3
   3a0b0:	bcs	3a14c <flatcc_builder_extend_string@@Base+0xbc>
   3a0b4:	str	r3, [r2, #20]
   3a0b8:	ldr	r5, [r0, #20]
   3a0bc:	ldr	r3, [r0, #24]
   3a0c0:	add	r1, r1, r5
   3a0c4:	cmp	r1, r3
   3a0c8:	mov	r4, r0
   3a0cc:	str	r1, [r0, #20]
   3a0d0:	bcs	3a0e4 <flatcc_builder_extend_string@@Base+0x54>
   3a0d4:	ldr	r0, [r0, #16]
   3a0d8:	add	r0, r0, r5
   3a0dc:	add	sp, sp, #8
   3a0e0:	pop	{r4, r5, r6, pc}
   3a0e4:	ldr	r2, [r0, #28]
   3a0e8:	mov	r3, #1
   3a0ec:	add	r2, r2, #1
   3a0f0:	ldr	r0, [r0, #40]	; 0x28
   3a0f4:	add	r2, r2, r1
   3a0f8:	str	r3, [sp]
   3a0fc:	add	r1, r4, #60	; 0x3c
   3a100:	ldr	r6, [r4, #48]	; 0x30
   3a104:	blx	r6
   3a108:	cmp	r0, #0
   3a10c:	bne	3a144 <flatcc_builder_extend_string@@Base+0xb4>
   3a110:	ldr	r2, [r4, #28]
   3a114:	ldr	r3, [r4, #64]	; 0x40
   3a118:	ldr	r0, [r4, #60]	; 0x3c
   3a11c:	sub	r3, r3, r2
   3a120:	cmn	r3, #4
   3a124:	mvnhi	r3, #3
   3a128:	str	r3, [r4, #24]
   3a12c:	ldr	r3, [r4, #32]
   3a130:	add	r0, r0, r2
   3a134:	mvn	r2, #3
   3a138:	str	r0, [r4, #16]
   3a13c:	str	r2, [r3, #4]
   3a140:	b	3a0d8 <flatcc_builder_extend_string@@Base+0x48>
   3a144:	mov	r0, #0
   3a148:	b	3a0dc <flatcc_builder_extend_string@@Base+0x4c>
   3a14c:	bl	1415c <__assert_fail@plt+0x124>
   3a150:	ldr	r3, [pc, #12]	; 3a164 <flatcc_builder_extend_string@@Base+0xd4>
   3a154:	ldr	r2, [pc, #12]	; 3a168 <flatcc_builder_extend_string@@Base+0xd8>
   3a158:	ldr	r1, [pc, #12]	; 3a16c <flatcc_builder_extend_string@@Base+0xdc>
   3a15c:	ldr	r0, [pc, #12]	; 3a170 <flatcc_builder_extend_string@@Base+0xe0>
   3a160:	bl	14038 <__assert_fail@plt>
   3a164:	andeq	fp, r5, ip, ror r7
   3a168:			; <UNDEFINED> instruction: 0x000003bd
   3a16c:	andeq	fp, r5, r8, asr #21
   3a170:	andeq	fp, r5, r8, asr #22

0003a174 <flatcc_builder_append_string@@Base>:
   3a174:	push	{r4, r5, r6, r7, r8, lr}
   3a178:	mov	r6, r1
   3a17c:	ldr	r1, [r0, #32]
   3a180:	sub	sp, sp, #8
   3a184:	ldrh	r3, [r1, #14]
   3a188:	cmp	r3, #6
   3a18c:	bne	3a258 <flatcc_builder_append_string@@Base+0xe4>
   3a190:	ldr	r3, [r1, #20]
   3a194:	mov	r5, r2
   3a198:	adds	r3, r2, r3
   3a19c:	bcs	3a254 <flatcc_builder_append_string@@Base+0xe0>
   3a1a0:	str	r3, [r1, #20]
   3a1a4:	ldr	r7, [r0, #20]
   3a1a8:	ldr	r3, [r0, #24]
   3a1ac:	add	r1, r2, r7
   3a1b0:	cmp	r1, r3
   3a1b4:	mov	r4, r0
   3a1b8:	str	r1, [r0, #20]
   3a1bc:	bcs	3a1ec <flatcc_builder_append_string@@Base+0x78>
   3a1c0:	ldr	r3, [r0, #16]
   3a1c4:	adds	r3, r3, r7
   3a1c8:	beq	3a1e0 <flatcc_builder_append_string@@Base+0x6c>
   3a1cc:	mov	r0, r3
   3a1d0:	mov	r2, r5
   3a1d4:	mov	r1, r6
   3a1d8:	bl	13edc <memcpy@plt>
   3a1dc:	mov	r3, r0
   3a1e0:	mov	r0, r3
   3a1e4:	add	sp, sp, #8
   3a1e8:	pop	{r4, r5, r6, r7, r8, pc}
   3a1ec:	ldr	r2, [r0, #28]
   3a1f0:	mov	r3, #1
   3a1f4:	add	r2, r2, #1
   3a1f8:	ldr	r0, [r0, #40]	; 0x28
   3a1fc:	add	r2, r2, r1
   3a200:	str	r3, [sp]
   3a204:	add	r1, r4, #60	; 0x3c
   3a208:	ldr	r8, [r4, #48]	; 0x30
   3a20c:	blx	r8
   3a210:	cmp	r0, #0
   3a214:	bne	3a24c <flatcc_builder_append_string@@Base+0xd8>
   3a218:	ldr	r1, [r4, #28]
   3a21c:	ldr	r2, [r4, #64]	; 0x40
   3a220:	ldr	r3, [r4, #60]	; 0x3c
   3a224:	sub	r2, r2, r1
   3a228:	cmn	r2, #4
   3a22c:	mvnhi	r2, #3
   3a230:	str	r2, [r4, #24]
   3a234:	ldr	r2, [r4, #32]
   3a238:	add	r3, r3, r1
   3a23c:	mvn	r1, #3
   3a240:	str	r3, [r4, #16]
   3a244:	str	r1, [r2, #4]
   3a248:	b	3a1c4 <flatcc_builder_append_string@@Base+0x50>
   3a24c:	mov	r3, #0
   3a250:	b	3a1e0 <flatcc_builder_append_string@@Base+0x6c>
   3a254:	bl	1415c <__assert_fail@plt+0x124>
   3a258:	bl	141a8 <__assert_fail@plt+0x170>

0003a25c <flatcc_builder_append_string_str@@Base>:
   3a25c:	push	{r4, r5, r6, r7, r8, lr}
   3a260:	mov	r4, r0
   3a264:	sub	sp, sp, #8
   3a268:	mov	r0, r1
   3a26c:	mov	r6, r1
   3a270:	bl	13f78 <strlen@plt>
   3a274:	ldr	r2, [r4, #32]
   3a278:	ldrh	r3, [r2, #14]
   3a27c:	cmp	r3, #6
   3a280:	bne	3a348 <flatcc_builder_append_string_str@@Base+0xec>
   3a284:	ldr	r3, [r2, #20]
   3a288:	mov	r5, r0
   3a28c:	adds	r3, r0, r3
   3a290:	bcs	3a344 <flatcc_builder_append_string_str@@Base+0xe8>
   3a294:	str	r3, [r2, #20]
   3a298:	ldr	r7, [r4, #20]
   3a29c:	ldr	r3, [r4, #24]
   3a2a0:	add	r1, r0, r7
   3a2a4:	cmp	r1, r3
   3a2a8:	str	r1, [r4, #20]
   3a2ac:	bcs	3a2dc <flatcc_builder_append_string_str@@Base+0x80>
   3a2b0:	ldr	r3, [r4, #16]
   3a2b4:	adds	r3, r3, r7
   3a2b8:	beq	3a2d0 <flatcc_builder_append_string_str@@Base+0x74>
   3a2bc:	mov	r0, r3
   3a2c0:	mov	r2, r5
   3a2c4:	mov	r1, r6
   3a2c8:	bl	13edc <memcpy@plt>
   3a2cc:	mov	r3, r0
   3a2d0:	mov	r0, r3
   3a2d4:	add	sp, sp, #8
   3a2d8:	pop	{r4, r5, r6, r7, r8, pc}
   3a2dc:	ldr	r2, [r4, #28]
   3a2e0:	mov	r3, #1
   3a2e4:	add	r2, r2, #1
   3a2e8:	ldr	r0, [r4, #40]	; 0x28
   3a2ec:	add	r2, r2, r1
   3a2f0:	str	r3, [sp]
   3a2f4:	add	r1, r4, #60	; 0x3c
   3a2f8:	ldr	r8, [r4, #48]	; 0x30
   3a2fc:	blx	r8
   3a300:	cmp	r0, #0
   3a304:	bne	3a33c <flatcc_builder_append_string_str@@Base+0xe0>
   3a308:	ldr	r1, [r4, #28]
   3a30c:	ldr	r2, [r4, #64]	; 0x40
   3a310:	ldr	r3, [r4, #60]	; 0x3c
   3a314:	sub	r2, r2, r1
   3a318:	cmn	r2, #4
   3a31c:	mvnhi	r2, #3
   3a320:	str	r2, [r4, #24]
   3a324:	ldr	r2, [r4, #32]
   3a328:	add	r3, r3, r1
   3a32c:	mvn	r1, #3
   3a330:	str	r3, [r4, #16]
   3a334:	str	r1, [r2, #4]
   3a338:	b	3a2b4 <flatcc_builder_append_string_str@@Base+0x58>
   3a33c:	mov	r3, #0
   3a340:	b	3a2d0 <flatcc_builder_append_string_str@@Base+0x74>
   3a344:	bl	1415c <__assert_fail@plt+0x124>
   3a348:	bl	141a8 <__assert_fail@plt+0x170>

0003a34c <flatcc_builder_append_string_strn@@Base>:
   3a34c:	push	{r4, r5, r6, r7, r8, lr}
   3a350:	mov	r6, r1
   3a354:	mov	r4, r0
   3a358:	sub	sp, sp, #8
   3a35c:	mov	r1, #0
   3a360:	mov	r0, r6
   3a364:	mov	r5, r2
   3a368:	bl	13fc0 <memchr@plt>
   3a36c:	ldr	r2, [r4, #32]
   3a370:	ldrh	r3, [r2, #14]
   3a374:	cmp	r0, #0
   3a378:	subne	r5, r0, r6
   3a37c:	cmp	r3, #6
   3a380:	bne	3a444 <flatcc_builder_append_string_strn@@Base+0xf8>
   3a384:	ldr	r3, [r2, #20]
   3a388:	adds	r3, r5, r3
   3a38c:	bcs	3a440 <flatcc_builder_append_string_strn@@Base+0xf4>
   3a390:	str	r3, [r2, #20]
   3a394:	ldr	r7, [r4, #20]
   3a398:	ldr	r3, [r4, #24]
   3a39c:	add	r1, r5, r7
   3a3a0:	cmp	r1, r3
   3a3a4:	str	r1, [r4, #20]
   3a3a8:	bcs	3a3d8 <flatcc_builder_append_string_strn@@Base+0x8c>
   3a3ac:	ldr	r3, [r4, #16]
   3a3b0:	adds	r3, r3, r7
   3a3b4:	beq	3a3cc <flatcc_builder_append_string_strn@@Base+0x80>
   3a3b8:	mov	r0, r3
   3a3bc:	mov	r2, r5
   3a3c0:	mov	r1, r6
   3a3c4:	bl	13edc <memcpy@plt>
   3a3c8:	mov	r3, r0
   3a3cc:	mov	r0, r3
   3a3d0:	add	sp, sp, #8
   3a3d4:	pop	{r4, r5, r6, r7, r8, pc}
   3a3d8:	ldr	r2, [r4, #28]
   3a3dc:	mov	r3, #1
   3a3e0:	add	r2, r2, #1
   3a3e4:	ldr	r0, [r4, #40]	; 0x28
   3a3e8:	add	r2, r2, r1
   3a3ec:	str	r3, [sp]
   3a3f0:	add	r1, r4, #60	; 0x3c
   3a3f4:	ldr	r8, [r4, #48]	; 0x30
   3a3f8:	blx	r8
   3a3fc:	cmp	r0, #0
   3a400:	bne	3a438 <flatcc_builder_append_string_strn@@Base+0xec>
   3a404:	ldr	r1, [r4, #28]
   3a408:	ldr	r2, [r4, #64]	; 0x40
   3a40c:	ldr	r3, [r4, #60]	; 0x3c
   3a410:	sub	r2, r2, r1
   3a414:	cmn	r2, #4
   3a418:	mvnhi	r2, #3
   3a41c:	str	r2, [r4, #24]
   3a420:	ldr	r2, [r4, #32]
   3a424:	add	r3, r3, r1
   3a428:	mvn	r1, #3
   3a42c:	str	r3, [r4, #16]
   3a430:	str	r1, [r2, #4]
   3a434:	b	3a3b0 <flatcc_builder_append_string_strn@@Base+0x64>
   3a438:	mov	r3, #0
   3a43c:	b	3a3cc <flatcc_builder_append_string_strn@@Base+0x80>
   3a440:	bl	1415c <__assert_fail@plt+0x124>
   3a444:	bl	141a8 <__assert_fail@plt+0x170>

0003a448 <flatcc_builder_truncate_vector@@Base>:
   3a448:	ldr	r3, [r0, #32]
   3a44c:	push	{r4, lr}
   3a450:	ldrh	r2, [r3, #14]
   3a454:	cmp	r2, #4
   3a458:	bne	3a49c <flatcc_builder_truncate_vector@@Base+0x54>
   3a45c:	ldr	ip, [r3, #20]
   3a460:	cmp	ip, r1
   3a464:	bcc	3a4b0 <flatcc_builder_truncate_vector@@Base+0x68>
   3a468:	ldr	r2, [r3, #16]
   3a46c:	sub	ip, ip, r1
   3a470:	str	ip, [r3, #20]
   3a474:	mul	r2, r2, r1
   3a478:	ldr	r3, [r0, #20]
   3a47c:	ldr	r1, [r0, #16]
   3a480:	sub	r3, r3, r2
   3a484:	str	r3, [r0, #20]
   3a488:	add	r0, r1, r3
   3a48c:	mov	r1, #0
   3a490:	bl	13f9c <memset@plt>
   3a494:	mov	r0, #0
   3a498:	pop	{r4, pc}
   3a49c:	ldr	r3, [pc, #32]	; 3a4c4 <flatcc_builder_truncate_vector@@Base+0x7c>
   3a4a0:	ldr	r2, [pc, #32]	; 3a4c8 <flatcc_builder_truncate_vector@@Base+0x80>
   3a4a4:	ldr	r1, [pc, #32]	; 3a4cc <flatcc_builder_truncate_vector@@Base+0x84>
   3a4a8:	ldr	r0, [pc, #32]	; 3a4d0 <flatcc_builder_truncate_vector@@Base+0x88>
   3a4ac:	bl	14038 <__assert_fail@plt>
   3a4b0:	ldr	r3, [pc, #12]	; 3a4c4 <flatcc_builder_truncate_vector@@Base+0x7c>
   3a4b4:	ldr	r2, [pc, #24]	; 3a4d4 <flatcc_builder_truncate_vector@@Base+0x8c>
   3a4b8:	ldr	r1, [pc, #12]	; 3a4cc <flatcc_builder_truncate_vector@@Base+0x84>
   3a4bc:	ldr	r0, [pc, #20]	; 3a4d8 <flatcc_builder_truncate_vector@@Base+0x90>
   3a4c0:	bl	14038 <__assert_fail@plt>
   3a4c4:	muleq	r5, ip, r7
   3a4c8:	ldrdeq	r0, [r0], -r9
   3a4cc:	andeq	fp, r5, r8, asr #21
   3a4d0:	andeq	fp, r5, r4, lsr ip
   3a4d4:	ldrdeq	r0, [r0], -sl
   3a4d8:	ldrdeq	fp, [r5], -r4

0003a4dc <flatcc_builder_truncate_offset_vector@@Base>:
   3a4dc:	ldr	r3, [r0, #32]
   3a4e0:	push	{r4, lr}
   3a4e4:	ldrh	r2, [r3, #14]
   3a4e8:	cmp	r2, #5
   3a4ec:	bne	3a530 <flatcc_builder_truncate_offset_vector@@Base+0x54>
   3a4f0:	ldr	ip, [r3, #20]
   3a4f4:	cmp	ip, r1
   3a4f8:	bcc	3a544 <flatcc_builder_truncate_offset_vector@@Base+0x68>
   3a4fc:	ldr	r2, [r3, #16]
   3a500:	sub	ip, ip, r1
   3a504:	str	ip, [r3, #20]
   3a508:	mul	r2, r2, r1
   3a50c:	ldr	r3, [r0, #20]
   3a510:	ldr	r1, [r0, #16]
   3a514:	sub	r3, r3, r2
   3a518:	str	r3, [r0, #20]
   3a51c:	add	r0, r1, r3
   3a520:	mov	r1, #0
   3a524:	bl	13f9c <memset@plt>
   3a528:	mov	r0, #0
   3a52c:	pop	{r4, pc}
   3a530:	ldr	r3, [pc, #32]	; 3a558 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   3a534:	ldr	r2, [pc, #32]	; 3a55c <flatcc_builder_truncate_offset_vector@@Base+0x80>
   3a538:	ldr	r1, [pc, #32]	; 3a560 <flatcc_builder_truncate_offset_vector@@Base+0x84>
   3a53c:	ldr	r0, [pc, #32]	; 3a564 <flatcc_builder_truncate_offset_vector@@Base+0x88>
   3a540:	bl	14038 <__assert_fail@plt>
   3a544:	ldr	r3, [pc, #12]	; 3a558 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   3a548:	ldr	r2, [pc, #24]	; 3a568 <flatcc_builder_truncate_offset_vector@@Base+0x8c>
   3a54c:	ldr	r1, [pc, #12]	; 3a560 <flatcc_builder_truncate_offset_vector@@Base+0x84>
   3a550:	ldr	r0, [pc, #20]	; 3a56c <flatcc_builder_truncate_offset_vector@@Base+0x90>
   3a554:	bl	14038 <__assert_fail@plt>
   3a558:			; <UNDEFINED> instruction: 0x0005b7bc
   3a55c:	andeq	r0, r0, r2, ror #7
   3a560:	andeq	fp, r5, r8, asr #21
   3a564:	andeq	fp, r5, r0, lsr #25
   3a568:	andeq	r0, r0, r3, ror #7
   3a56c:	strdeq	fp, [r5], -r8

0003a570 <flatcc_builder_truncate_string@@Base>:
   3a570:	ldr	r2, [r0, #32]
   3a574:	push	{r4, lr}
   3a578:	ldrh	r3, [r2, #14]
   3a57c:	cmp	r3, #6
   3a580:	bne	3a5c0 <flatcc_builder_truncate_string@@Base+0x50>
   3a584:	ldr	r3, [r2, #20]
   3a588:	cmp	r3, r1
   3a58c:	bcc	3a5d4 <flatcc_builder_truncate_string@@Base+0x64>
   3a590:	sub	r3, r3, r1
   3a594:	str	r3, [r2, #20]
   3a598:	ldr	r3, [r0, #20]
   3a59c:	ldr	r2, [r0, #16]
   3a5a0:	sub	r3, r3, r1
   3a5a4:	str	r3, [r0, #20]
   3a5a8:	add	r0, r2, r3
   3a5ac:	mov	r2, r1
   3a5b0:	mov	r1, #0
   3a5b4:	bl	13f9c <memset@plt>
   3a5b8:	mov	r0, #0
   3a5bc:	pop	{r4, pc}
   3a5c0:	ldr	r3, [pc, #32]	; 3a5e8 <flatcc_builder_truncate_string@@Base+0x78>
   3a5c4:	ldr	r2, [pc, #32]	; 3a5ec <flatcc_builder_truncate_string@@Base+0x7c>
   3a5c8:	ldr	r1, [pc, #32]	; 3a5f0 <flatcc_builder_truncate_string@@Base+0x80>
   3a5cc:	ldr	r0, [pc, #32]	; 3a5f4 <flatcc_builder_truncate_string@@Base+0x84>
   3a5d0:	bl	14038 <__assert_fail@plt>
   3a5d4:	ldr	r3, [pc, #12]	; 3a5e8 <flatcc_builder_truncate_string@@Base+0x78>
   3a5d8:	mov	r2, #1004	; 0x3ec
   3a5dc:	ldr	r1, [pc, #12]	; 3a5f0 <flatcc_builder_truncate_string@@Base+0x80>
   3a5e0:	ldr	r0, [pc, #16]	; 3a5f8 <flatcc_builder_truncate_string@@Base+0x88>
   3a5e4:	bl	14038 <__assert_fail@plt>
   3a5e8:	andeq	fp, r5, r4, ror #15
   3a5ec:	andeq	r0, r0, fp, ror #7
   3a5f0:	andeq	fp, r5, r8, asr #21
   3a5f4:	andeq	fp, r5, r8, asr #22
   3a5f8:	andeq	fp, r5, r4, lsr sp

0003a5fc <flatcc_builder_start_vector@@Base>:
   3a5fc:	ldr	ip, [r0, #156]	; 0x9c
   3a600:	push	{r4, r5, r6, r7, r8, r9, lr}
   3a604:	cmp	r2, #4
   3a608:	ldr	lr, [r0, #160]	; 0xa0
   3a60c:	mov	r4, r0
   3a610:	add	r0, ip, #1
   3a614:	movcs	r7, r2
   3a618:	movcc	r7, #4
   3a61c:	cmp	r0, lr
   3a620:	sub	sp, sp, #12
   3a624:	mov	r6, r1
   3a628:	mov	r5, r3
   3a62c:	str	r0, [r4, #156]	; 0x9c
   3a630:	ble	3a6a0 <flatcc_builder_start_vector@@Base+0xa4>
   3a634:	ldr	r3, [r4, #176]	; 0xb0
   3a638:	cmp	r3, #0
   3a63c:	cmpgt	r0, r3
   3a640:	movgt	r3, #1
   3a644:	movle	r3, #0
   3a648:	bgt	3a748 <flatcc_builder_start_vector@@Base+0x14c>
   3a64c:	add	ip, ip, ip, lsl #3
   3a650:	ldr	r1, [r4, #88]	; 0x58
   3a654:	lsl	r8, ip, #2
   3a658:	add	r2, r8, #36	; 0x24
   3a65c:	cmp	r2, r1
   3a660:	bhi	3a724 <flatcc_builder_start_vector@@Base+0x128>
   3a664:	ldr	r3, [r4, #84]	; 0x54
   3a668:	add	r3, r3, r8
   3a66c:	cmp	r3, #0
   3a670:	str	r3, [r4, #32]
   3a674:	beq	3a748 <flatcc_builder_start_vector@@Base+0x14c>
   3a678:	ldr	r2, [r4, #88]	; 0x58
   3a67c:	ldr	r0, [pc, #204]	; 3a750 <flatcc_builder_start_vector@@Base+0x154>
   3a680:	ldr	r1, [r4, #176]	; 0xb0
   3a684:	umull	r0, r2, r0, r2
   3a688:	lsr	r2, r2, #3
   3a68c:	cmp	r1, #0
   3a690:	cmpgt	r2, r1
   3a694:	str	r2, [r4, #160]	; 0xa0
   3a698:	strgt	r1, [r4, #160]	; 0xa0
   3a69c:	b	3a6ac <flatcc_builder_start_vector@@Base+0xb0>
   3a6a0:	ldr	r3, [r4, #32]
   3a6a4:	add	r3, r3, #36	; 0x24
   3a6a8:	str	r3, [r4, #32]
   3a6ac:	ldr	r0, [r4, #20]
   3a6b0:	ldr	r1, [r4, #28]
   3a6b4:	ldrh	ip, [r4, #130]	; 0x82
   3a6b8:	add	r2, r0, r1
   3a6bc:	add	r2, r2, #7
   3a6c0:	str	r0, [r3, #8]
   3a6c4:	bic	r2, r2, #7
   3a6c8:	mov	r0, #0
   3a6cc:	strh	ip, [r3, #12]
   3a6d0:	strh	r7, [r4, #130]	; 0x82
   3a6d4:	str	r1, [r3]
   3a6d8:	str	r2, [r4, #28]
   3a6dc:	str	r0, [r4, #20]
   3a6e0:	str	r0, [r3, #20]
   3a6e4:	str	r6, [r3, #16]
   3a6e8:	str	r5, [r3, #24]
   3a6ec:	ldr	r1, [r4, #64]	; 0x40
   3a6f0:	ldr	ip, [r4, #60]	; 0x3c
   3a6f4:	sub	r1, r1, r2
   3a6f8:	mvn	lr, #3
   3a6fc:	cmp	r1, lr
   3a700:	add	r2, ip, r2
   3a704:	movhi	r1, lr
   3a708:	mov	ip, #4
   3a70c:	strh	ip, [r3, #14]
   3a710:	str	r2, [r4, #16]
   3a714:	str	r1, [r4, #24]
   3a718:	str	lr, [r3, #4]
   3a71c:	add	sp, sp, #12
   3a720:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3a724:	mov	r1, #4
   3a728:	ldr	r0, [r4, #40]	; 0x28
   3a72c:	str	r1, [sp]
   3a730:	add	r1, r4, #84	; 0x54
   3a734:	ldr	r9, [r4, #48]	; 0x30
   3a738:	blx	r9
   3a73c:	cmp	r0, #0
   3a740:	beq	3a664 <flatcc_builder_start_vector@@Base+0x68>
   3a744:	bl	140e8 <__assert_fail@plt+0xb0>
   3a748:	mvn	r0, #0
   3a74c:	b	3a71c <flatcc_builder_start_vector@@Base+0x120>
   3a750:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^

0003a754 <flatcc_builder_start_offset_vector@@Base>:
   3a754:	ldr	r1, [r0, #156]	; 0x9c
   3a758:	ldr	r3, [r0, #160]	; 0xa0
   3a75c:	add	r2, r1, #1
   3a760:	cmp	r2, r3
   3a764:	push	{r4, r5, r6, lr}
   3a768:	mov	r4, r0
   3a76c:	sub	sp, sp, #8
   3a770:	str	r2, [r0, #156]	; 0x9c
   3a774:	ble	3a7e4 <flatcc_builder_start_offset_vector@@Base+0x90>
   3a778:	ldr	r3, [r0, #176]	; 0xb0
   3a77c:	cmp	r3, #0
   3a780:	cmpgt	r2, r3
   3a784:	movgt	r3, #1
   3a788:	movle	r3, #0
   3a78c:	bgt	3a88c <flatcc_builder_start_offset_vector@@Base+0x138>
   3a790:	add	r1, r1, r1, lsl #3
   3a794:	ldr	r0, [r0, #88]	; 0x58
   3a798:	lsl	r5, r1, #2
   3a79c:	add	r2, r5, #36	; 0x24
   3a7a0:	cmp	r2, r0
   3a7a4:	bhi	3a868 <flatcc_builder_start_offset_vector@@Base+0x114>
   3a7a8:	ldr	r3, [r4, #84]	; 0x54
   3a7ac:	add	r3, r3, r5
   3a7b0:	cmp	r3, #0
   3a7b4:	str	r3, [r4, #32]
   3a7b8:	beq	3a88c <flatcc_builder_start_offset_vector@@Base+0x138>
   3a7bc:	ldr	r2, [r4, #88]	; 0x58
   3a7c0:	ldr	r0, [pc, #204]	; 3a894 <flatcc_builder_start_offset_vector@@Base+0x140>
   3a7c4:	ldr	r1, [r4, #176]	; 0xb0
   3a7c8:	umull	r0, r2, r0, r2
   3a7cc:	lsr	r2, r2, #3
   3a7d0:	cmp	r1, #0
   3a7d4:	cmpgt	r2, r1
   3a7d8:	str	r2, [r4, #160]	; 0xa0
   3a7dc:	strgt	r1, [r4, #160]	; 0xa0
   3a7e0:	b	3a7f0 <flatcc_builder_start_offset_vector@@Base+0x9c>
   3a7e4:	ldr	r3, [r0, #32]
   3a7e8:	add	r3, r3, #36	; 0x24
   3a7ec:	str	r3, [r0, #32]
   3a7f0:	ldr	lr, [r4, #20]
   3a7f4:	ldr	ip, [r4, #28]
   3a7f8:	ldrh	r5, [r4, #130]	; 0x82
   3a7fc:	add	r2, lr, ip
   3a800:	add	r2, r2, #7
   3a804:	bic	r2, r2, #7
   3a808:	mov	r1, #4
   3a80c:	mov	r0, #0
   3a810:	str	lr, [r3, #8]
   3a814:	strh	r5, [r3, #12]
   3a818:	strh	r1, [r4, #130]	; 0x82
   3a81c:	str	ip, [r3]
   3a820:	str	r2, [r4, #28]
   3a824:	str	r0, [r4, #20]
   3a828:	str	r1, [r3, #16]
   3a82c:	str	r0, [r3, #20]
   3a830:	ldr	r1, [r4, #64]	; 0x40
   3a834:	ldr	ip, [r4, #60]	; 0x3c
   3a838:	sub	r1, r1, r2
   3a83c:	mvn	lr, #3
   3a840:	cmp	r1, lr
   3a844:	add	r2, ip, r2
   3a848:	movhi	r1, lr
   3a84c:	mov	ip, #5
   3a850:	strh	ip, [r3, #14]
   3a854:	str	r2, [r4, #16]
   3a858:	str	r1, [r4, #24]
   3a85c:	str	lr, [r3, #4]
   3a860:	add	sp, sp, #8
   3a864:	pop	{r4, r5, r6, pc}
   3a868:	mov	r1, #4
   3a86c:	ldr	r0, [r4, #40]	; 0x28
   3a870:	str	r1, [sp]
   3a874:	add	r1, r4, #84	; 0x54
   3a878:	ldr	r6, [r4, #48]	; 0x30
   3a87c:	blx	r6
   3a880:	cmp	r0, #0
   3a884:	beq	3a7a8 <flatcc_builder_start_offset_vector@@Base+0x54>
   3a888:	bl	140e8 <__assert_fail@plt+0xb0>
   3a88c:	mvn	r0, #0
   3a890:	b	3a860 <flatcc_builder_start_offset_vector@@Base+0x10c>
   3a894:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^

0003a898 <flatcc_builder_create_offset_vector@@Base>:
   3a898:	push	{r4, r5, r6, r7, r8, lr}
   3a89c:	mov	r4, r0
   3a8a0:	ldr	r0, [r0, #156]	; 0x9c
   3a8a4:	ldr	r3, [r4, #160]	; 0xa0
   3a8a8:	mov	r7, r1
   3a8ac:	add	r1, r0, #1
   3a8b0:	cmp	r1, r3
   3a8b4:	sub	sp, sp, #8
   3a8b8:	mov	r5, r2
   3a8bc:	str	r1, [r4, #156]	; 0x9c
   3a8c0:	ble	3a930 <flatcc_builder_create_offset_vector@@Base+0x98>
   3a8c4:	ldr	r3, [r4, #176]	; 0xb0
   3a8c8:	cmp	r1, r3
   3a8cc:	cmpgt	r3, #0
   3a8d0:	movgt	r3, #1
   3a8d4:	movle	r3, #0
   3a8d8:	bgt	3aa00 <flatcc_builder_create_offset_vector@@Base+0x168>
   3a8dc:	add	r0, r0, r0, lsl #3
   3a8e0:	ldr	r1, [r4, #88]	; 0x58
   3a8e4:	lsl	r6, r0, #2
   3a8e8:	add	r2, r6, #36	; 0x24
   3a8ec:	cmp	r2, r1
   3a8f0:	bhi	3aa68 <flatcc_builder_create_offset_vector@@Base+0x1d0>
   3a8f4:	ldr	r3, [r4, #84]	; 0x54
   3a8f8:	add	r3, r3, r6
   3a8fc:	cmp	r3, #0
   3a900:	str	r3, [r4, #32]
   3a904:	beq	3aa00 <flatcc_builder_create_offset_vector@@Base+0x168>
   3a908:	ldr	r2, [r4, #88]	; 0x58
   3a90c:	ldr	r0, [pc, #552]	; 3ab3c <flatcc_builder_create_offset_vector@@Base+0x2a4>
   3a910:	ldr	r1, [r4, #176]	; 0xb0
   3a914:	umull	r0, r2, r0, r2
   3a918:	lsr	r2, r2, #3
   3a91c:	cmp	r1, #0
   3a920:	cmpgt	r2, r1
   3a924:	str	r2, [r4, #160]	; 0xa0
   3a928:	strgt	r1, [r4, #160]	; 0xa0
   3a92c:	b	3a93c <flatcc_builder_create_offset_vector@@Base+0xa4>
   3a930:	ldr	r3, [r4, #32]
   3a934:	add	r3, r3, #36	; 0x24
   3a938:	str	r3, [r4, #32]
   3a93c:	ldr	r2, [r4, #20]
   3a940:	ldr	ip, [r4, #28]
   3a944:	ldrh	r6, [r4, #130]	; 0x82
   3a948:	add	r1, r2, ip
   3a94c:	mvn	lr, #3
   3a950:	add	r1, r1, #7
   3a954:	str	r2, [r3, #8]
   3a958:	bic	r1, r1, #7
   3a95c:	mov	r0, #4
   3a960:	mov	r2, #0
   3a964:	strh	r6, [r3, #12]
   3a968:	strh	r0, [r4, #130]	; 0x82
   3a96c:	stm	r3, {ip, lr}
   3a970:	str	r2, [r4, #20]
   3a974:	str	r1, [r4, #28]
   3a978:	str	r0, [r3, #16]
   3a97c:	str	r2, [r3, #20]
   3a980:	ldr	r2, [r4, #64]	; 0x40
   3a984:	ldr	r0, [r4, #60]	; 0x3c
   3a988:	sub	r2, r2, r1
   3a98c:	cmp	r2, lr
   3a990:	mov	ip, #5
   3a994:	strh	ip, [r3, #14]
   3a998:	add	r0, r0, r1
   3a99c:	strls	r2, [r4, #24]
   3a9a0:	strhi	lr, [r4, #24]
   3a9a4:	movhi	r2, lr
   3a9a8:	mvn	r6, #3
   3a9ac:	cmn	r5, #-1073741823	; 0xc0000001
   3a9b0:	str	r0, [r4, #16]
   3a9b4:	str	r6, [r3, #4]
   3a9b8:	bhi	3ab24 <flatcc_builder_create_offset_vector@@Base+0x28c>
   3a9bc:	lsl	r8, r5, #2
   3a9c0:	cmp	r8, r2
   3a9c4:	str	r5, [r3, #20]
   3a9c8:	str	r8, [r4, #20]
   3a9cc:	bcs	3aa10 <flatcc_builder_create_offset_vector@@Base+0x178>
   3a9d0:	cmp	r0, #0
   3a9d4:	beq	3aa00 <flatcc_builder_create_offset_vector@@Base+0x168>
   3a9d8:	mov	r2, r8
   3a9dc:	mov	r1, r7
   3a9e0:	bl	13edc <memcpy@plt>
   3a9e4:	ldr	r3, [r4, #32]
   3a9e8:	ldrh	r2, [r3, #14]
   3a9ec:	cmp	r2, #5
   3a9f0:	bne	3ab28 <flatcc_builder_create_offset_vector@@Base+0x290>
   3a9f4:	ldr	r2, [r3, #20]
   3a9f8:	cmn	r2, #-1073741823	; 0xc0000001
   3a9fc:	bls	3aa8c <flatcc_builder_create_offset_vector@@Base+0x1f4>
   3aa00:	mov	r5, #0
   3aa04:	mov	r0, r5
   3aa08:	add	sp, sp, #8
   3aa0c:	pop	{r4, r5, r6, r7, r8, pc}
   3aa10:	mov	r3, #1
   3aa14:	add	r2, r8, #1
   3aa18:	ldr	r0, [r4, #40]	; 0x28
   3aa1c:	add	r2, r2, r1
   3aa20:	str	r3, [sp]
   3aa24:	add	r1, r4, #60	; 0x3c
   3aa28:	ldr	r5, [r4, #48]	; 0x30
   3aa2c:	blx	r5
   3aa30:	cmp	r0, #0
   3aa34:	bne	3aa00 <flatcc_builder_create_offset_vector@@Base+0x168>
   3aa38:	ldr	r2, [r4, #28]
   3aa3c:	ldr	r3, [r4, #64]	; 0x40
   3aa40:	ldr	r0, [r4, #60]	; 0x3c
   3aa44:	sub	r3, r3, r2
   3aa48:	ldr	r1, [r4, #32]
   3aa4c:	cmn	r3, #4
   3aa50:	movhi	r3, r6
   3aa54:	add	r0, r0, r2
   3aa58:	str	r3, [r4, #24]
   3aa5c:	str	r0, [r4, #16]
   3aa60:	str	r6, [r1, #4]
   3aa64:	b	3a9d0 <flatcc_builder_create_offset_vector@@Base+0x138>
   3aa68:	mov	r1, #4
   3aa6c:	ldr	r0, [r4, #40]	; 0x28
   3aa70:	str	r1, [sp]
   3aa74:	add	r1, r4, #84	; 0x54
   3aa78:	ldr	r8, [r4, #48]	; 0x30
   3aa7c:	blx	r8
   3aa80:	cmp	r0, #0
   3aa84:	beq	3a8f4 <flatcc_builder_create_offset_vector@@Base+0x5c>
   3aa88:	bl	140e8 <__assert_fail@plt+0xb0>
   3aa8c:	ldr	r1, [r4, #16]
   3aa90:	mov	r0, r4
   3aa94:	bl	384bc <flatcc_builder_default_alloc@@Base+0x2fc>
   3aa98:	subs	r5, r0, #0
   3aa9c:	beq	3aa00 <flatcc_builder_create_offset_vector@@Base+0x168>
   3aaa0:	ldr	r2, [r4, #20]
   3aaa4:	mov	r1, #0
   3aaa8:	ldr	r0, [r4, #16]
   3aaac:	bl	13f9c <memset@plt>
   3aab0:	ldr	r3, [r4, #32]
   3aab4:	ldr	r2, [r4, #64]	; 0x40
   3aab8:	ldrh	lr, [r4, #130]	; 0x82
   3aabc:	ldr	ip, [r3]
   3aac0:	ldr	r1, [r3, #4]
   3aac4:	ldrh	r0, [r4, #128]	; 0x80
   3aac8:	sub	r2, r2, ip
   3aacc:	cmp	r2, r1
   3aad0:	movcs	r2, r1
   3aad4:	cmp	r0, lr
   3aad8:	ldr	r0, [r4, #60]	; 0x3c
   3aadc:	ldr	r6, [r3, #8]
   3aae0:	str	r2, [r4, #24]
   3aae4:	add	r2, r0, ip
   3aae8:	str	r2, [r4, #16]
   3aaec:	str	r6, [r4, #20]
   3aaf0:	ldr	r2, [r4, #156]	; 0x9c
   3aaf4:	str	ip, [r4, #28]
   3aaf8:	str	r1, [r3, #4]
   3aafc:	strhcc	lr, [r4, #128]	; 0x80
   3ab00:	ldrh	r1, [r3, #12]
   3ab04:	sub	r2, r2, #1
   3ab08:	sub	r3, r3, #36	; 0x24
   3ab0c:	mov	r0, r5
   3ab10:	str	r2, [r4, #156]	; 0x9c
   3ab14:	strh	r1, [r4, #130]	; 0x82
   3ab18:	str	r3, [r4, #32]
   3ab1c:	add	sp, sp, #8
   3ab20:	pop	{r4, r5, r6, r7, r8, pc}
   3ab24:	bl	1415c <__assert_fail@plt+0x124>
   3ab28:	ldr	r3, [pc, #16]	; 3ab40 <flatcc_builder_create_offset_vector@@Base+0x2a8>
   3ab2c:	ldr	r2, [pc, #16]	; 3ab44 <flatcc_builder_create_offset_vector@@Base+0x2ac>
   3ab30:	ldr	r1, [pc, #16]	; 3ab48 <flatcc_builder_create_offset_vector@@Base+0x2b0>
   3ab34:	ldr	r0, [pc, #16]	; 3ab4c <flatcc_builder_create_offset_vector@@Base+0x2b4>
   3ab38:	bl	14038 <__assert_fail@plt>
   3ab3c:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   3ab40:	andeq	fp, r5, r4, lsl #16
   3ab44:	andeq	r0, r0, r8, asr #11
   3ab48:	andeq	fp, r5, r8, asr #21
   3ab4c:	andeq	fp, r5, r0, lsr #25

0003ab50 <flatcc_builder_start_string@@Base>:
   3ab50:	ldr	r1, [r0, #156]	; 0x9c
   3ab54:	ldr	r3, [r0, #160]	; 0xa0
   3ab58:	add	r2, r1, #1
   3ab5c:	cmp	r2, r3
   3ab60:	push	{r4, r5, r6, lr}
   3ab64:	mov	r4, r0
   3ab68:	sub	sp, sp, #8
   3ab6c:	str	r2, [r0, #156]	; 0x9c
   3ab70:	ble	3abe0 <flatcc_builder_start_string@@Base+0x90>
   3ab74:	ldr	r3, [r0, #176]	; 0xb0
   3ab78:	cmp	r3, #0
   3ab7c:	cmpgt	r2, r3
   3ab80:	movgt	r3, #1
   3ab84:	movle	r3, #0
   3ab88:	bgt	3ac88 <flatcc_builder_start_string@@Base+0x138>
   3ab8c:	add	r1, r1, r1, lsl #3
   3ab90:	ldr	r0, [r0, #88]	; 0x58
   3ab94:	lsl	r5, r1, #2
   3ab98:	add	r2, r5, #36	; 0x24
   3ab9c:	cmp	r2, r0
   3aba0:	bhi	3ac64 <flatcc_builder_start_string@@Base+0x114>
   3aba4:	ldr	r3, [r4, #84]	; 0x54
   3aba8:	add	r3, r3, r5
   3abac:	cmp	r3, #0
   3abb0:	str	r3, [r4, #32]
   3abb4:	beq	3ac88 <flatcc_builder_start_string@@Base+0x138>
   3abb8:	ldr	r2, [r4, #88]	; 0x58
   3abbc:	ldr	r0, [pc, #204]	; 3ac90 <flatcc_builder_start_string@@Base+0x140>
   3abc0:	ldr	r1, [r4, #176]	; 0xb0
   3abc4:	umull	r0, r2, r0, r2
   3abc8:	lsr	r2, r2, #3
   3abcc:	cmp	r1, #0
   3abd0:	cmpgt	r2, r1
   3abd4:	str	r2, [r4, #160]	; 0xa0
   3abd8:	strgt	r1, [r4, #160]	; 0xa0
   3abdc:	b	3abec <flatcc_builder_start_string@@Base+0x9c>
   3abe0:	ldr	r3, [r0, #32]
   3abe4:	add	r3, r3, #36	; 0x24
   3abe8:	str	r3, [r0, #32]
   3abec:	ldr	lr, [r4, #20]
   3abf0:	ldr	ip, [r4, #28]
   3abf4:	ldrh	r5, [r4, #130]	; 0x82
   3abf8:	add	r2, lr, ip
   3abfc:	add	r2, r2, #7
   3ac00:	bic	r2, r2, #7
   3ac04:	mov	r1, #1
   3ac08:	mov	r0, #0
   3ac0c:	str	lr, [r3, #8]
   3ac10:	strh	r5, [r3, #12]
   3ac14:	strh	r1, [r4, #130]	; 0x82
   3ac18:	str	ip, [r3]
   3ac1c:	str	r2, [r4, #28]
   3ac20:	str	r0, [r4, #20]
   3ac24:	str	r1, [r3, #16]
   3ac28:	str	r0, [r3, #20]
   3ac2c:	ldr	r1, [r4, #64]	; 0x40
   3ac30:	ldr	ip, [r4, #60]	; 0x3c
   3ac34:	sub	r1, r1, r2
   3ac38:	mvn	lr, #3
   3ac3c:	cmp	r1, lr
   3ac40:	add	r2, ip, r2
   3ac44:	movhi	r1, lr
   3ac48:	mov	ip, #6
   3ac4c:	strh	ip, [r3, #14]
   3ac50:	str	r2, [r4, #16]
   3ac54:	str	r1, [r4, #24]
   3ac58:	str	lr, [r3, #4]
   3ac5c:	add	sp, sp, #8
   3ac60:	pop	{r4, r5, r6, pc}
   3ac64:	mov	r1, #4
   3ac68:	ldr	r0, [r4, #40]	; 0x28
   3ac6c:	str	r1, [sp]
   3ac70:	add	r1, r4, #84	; 0x54
   3ac74:	ldr	r6, [r4, #48]	; 0x30
   3ac78:	blx	r6
   3ac7c:	cmp	r0, #0
   3ac80:	beq	3aba4 <flatcc_builder_start_string@@Base+0x54>
   3ac84:	bl	140e8 <__assert_fail@plt+0xb0>
   3ac88:	mvn	r0, #0
   3ac8c:	b	3ac5c <flatcc_builder_start_string@@Base+0x10c>
   3ac90:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^

0003ac94 <flatcc_builder_reserve_table@@Base>:
   3ac94:	cmp	r1, #0
   3ac98:	push	{r4, r5, r6, r7, lr}
   3ac9c:	sub	sp, sp, #12
   3aca0:	blt	3ad78 <flatcc_builder_reserve_table@@Base+0xe4>
   3aca4:	ldr	r2, [r0, #32]
   3aca8:	add	r1, r1, #2
   3acac:	mov	r5, r0
   3acb0:	ldrh	r6, [r2, #28]
   3acb4:	ldr	r3, [r2, #16]
   3acb8:	ldr	r0, [r0, #56]	; 0x38
   3acbc:	lsl	r4, r1, #1
   3acc0:	add	r6, r3, r6, lsl #1
   3acc4:	add	r2, r6, r4
   3acc8:	cmp	r2, r0
   3accc:	bhi	3ad28 <flatcc_builder_reserve_table@@Base+0x94>
   3acd0:	ldr	r3, [r5, #52]	; 0x34
   3acd4:	adds	r3, r3, r6
   3acd8:	streq	r3, [r5, #4]
   3acdc:	mvneq	r0, #0
   3ace0:	beq	3ad20 <flatcc_builder_reserve_table@@Base+0x8c>
   3ace4:	ldr	r2, [r5, #32]
   3ace8:	add	r3, r3, #4
   3acec:	str	r3, [r5, #4]
   3acf0:	ldr	r6, [r2, #20]
   3acf4:	ldr	r3, [r5, #80]	; 0x50
   3acf8:	add	r2, r4, r6
   3acfc:	sub	r2, r2, #3
   3ad00:	cmp	r2, r3
   3ad04:	bhi	3ad50 <flatcc_builder_reserve_table@@Base+0xbc>
   3ad08:	ldr	r3, [r5, #76]	; 0x4c
   3ad0c:	add	r3, r3, r6
   3ad10:	cmp	r3, #0
   3ad14:	movne	r0, #0
   3ad18:	mvneq	r0, #0
   3ad1c:	str	r3, [r5]
   3ad20:	add	sp, sp, #12
   3ad24:	pop	{r4, r5, r6, r7, pc}
   3ad28:	mov	r3, #0
   3ad2c:	ldr	r0, [r5, #40]	; 0x28
   3ad30:	add	r1, r5, #52	; 0x34
   3ad34:	str	r3, [sp]
   3ad38:	mov	r3, #1
   3ad3c:	ldr	r7, [r5, #48]	; 0x30
   3ad40:	blx	r7
   3ad44:	cmp	r0, #0
   3ad48:	beq	3acd0 <flatcc_builder_reserve_table@@Base+0x3c>
   3ad4c:	bl	140e8 <__assert_fail@plt+0xb0>
   3ad50:	mov	r3, #3
   3ad54:	ldr	r0, [r5, #40]	; 0x28
   3ad58:	add	r1, r5, #76	; 0x4c
   3ad5c:	str	r3, [sp]
   3ad60:	mov	r3, #0
   3ad64:	ldr	r4, [r5, #48]	; 0x30
   3ad68:	blx	r4
   3ad6c:	cmp	r0, #0
   3ad70:	beq	3ad08 <flatcc_builder_reserve_table@@Base+0x74>
   3ad74:	b	3ad4c <flatcc_builder_reserve_table@@Base+0xb8>
   3ad78:	ldr	r3, [pc, #12]	; 3ad8c <flatcc_builder_reserve_table@@Base+0xf8>
   3ad7c:	ldr	r2, [pc, #12]	; 3ad90 <flatcc_builder_reserve_table@@Base+0xfc>
   3ad80:	ldr	r1, [pc, #12]	; 3ad94 <flatcc_builder_reserve_table@@Base+0x100>
   3ad84:	ldr	r0, [pc, #12]	; 3ad98 <flatcc_builder_reserve_table@@Base+0x104>
   3ad88:	bl	14038 <__assert_fail@plt>
   3ad8c:	andeq	fp, r5, r8, lsr #16
   3ad90:	andeq	r0, r0, r9, lsr #8
   3ad94:	andeq	fp, r5, r8, asr #21
   3ad98:	andeq	fp, r5, r8, asr sp

0003ad9c <flatcc_builder_start_table@@Base>:
   3ad9c:	push	{r4, r5, r6, r7, lr}
   3ada0:	mov	r5, r1
   3ada4:	ldr	r1, [r0, #156]	; 0x9c
   3ada8:	ldr	r3, [r0, #160]	; 0xa0
   3adac:	add	r2, r1, #1
   3adb0:	cmp	r2, r3
   3adb4:	sub	sp, sp, #12
   3adb8:	mov	r4, r0
   3adbc:	str	r2, [r0, #156]	; 0x9c
   3adc0:	ble	3ae30 <flatcc_builder_start_table@@Base+0x94>
   3adc4:	ldr	r3, [r0, #176]	; 0xb0
   3adc8:	cmp	r3, #0
   3adcc:	cmpgt	r2, r3
   3add0:	movgt	r3, #1
   3add4:	movle	r3, #0
   3add8:	bgt	3afd0 <flatcc_builder_start_table@@Base+0x234>
   3addc:	add	r1, r1, r1, lsl #3
   3ade0:	ldr	r0, [r0, #88]	; 0x58
   3ade4:	lsl	r6, r1, #2
   3ade8:	add	r2, r6, #36	; 0x24
   3adec:	cmp	r2, r0
   3adf0:	bhi	3afac <flatcc_builder_start_table@@Base+0x210>
   3adf4:	ldr	r3, [r4, #84]	; 0x54
   3adf8:	add	r3, r3, r6
   3adfc:	cmp	r3, #0
   3ae00:	str	r3, [r4, #32]
   3ae04:	beq	3afd0 <flatcc_builder_start_table@@Base+0x234>
   3ae08:	ldr	r2, [r4, #88]	; 0x58
   3ae0c:	ldr	r0, [pc, #452]	; 3afd8 <flatcc_builder_start_table@@Base+0x23c>
   3ae10:	ldr	r1, [r4, #176]	; 0xb0
   3ae14:	umull	r0, r2, r0, r2
   3ae18:	lsr	r2, r2, #3
   3ae1c:	cmp	r2, r1
   3ae20:	cmpgt	r1, #0
   3ae24:	str	r2, [r4, #160]	; 0xa0
   3ae28:	strgt	r1, [r4, #160]	; 0xa0
   3ae2c:	b	3ae3c <flatcc_builder_start_table@@Base+0xa0>
   3ae30:	ldr	r3, [r0, #32]
   3ae34:	add	r3, r3, #36	; 0x24
   3ae38:	str	r3, [r0, #32]
   3ae3c:	ldr	ip, [r4, #20]
   3ae40:	ldr	lr, [r4, #28]
   3ae44:	ldrh	r7, [r4, #130]	; 0x82
   3ae48:	ldr	r6, [r4, #4]
   3ae4c:	ldr	r0, [r4, #52]	; 0x34
   3ae50:	add	r2, ip, lr
   3ae54:	str	ip, [r3, #8]
   3ae58:	add	r2, r2, #7
   3ae5c:	mov	ip, #4
   3ae60:	strh	r7, [r3, #12]
   3ae64:	sub	r1, r6, r0
   3ae68:	strh	ip, [r4, #130]	; 0x82
   3ae6c:	bic	r2, r2, #7
   3ae70:	mvn	r6, #3
   3ae74:	mov	ip, #0
   3ae78:	str	lr, [r3]
   3ae7c:	str	r6, [r3, #4]
   3ae80:	str	r2, [r4, #28]
   3ae84:	str	ip, [r4, #20]
   3ae88:	str	r1, [r3, #16]
   3ae8c:	ldr	lr, [r4, #76]	; 0x4c
   3ae90:	ldr	r2, [r4]
   3ae94:	add	r5, r5, #2
   3ae98:	sub	r2, r2, lr
   3ae9c:	str	r2, [r3, #20]
   3aea0:	ldr	r2, [r4, #12]
   3aea4:	lsl	r5, r5, #1
   3aea8:	str	r2, [r3, #24]
   3aeac:	ldrh	r6, [r4, #8]
   3aeb0:	ldr	lr, [pc, #292]	; 3afdc <flatcc_builder_start_table@@Base+0x240>
   3aeb4:	strh	r6, [r3, #28]
   3aeb8:	add	r6, r1, r6, lsl #1
   3aebc:	ldr	r1, [r4, #56]	; 0x38
   3aec0:	add	r2, r6, r5
   3aec4:	cmp	r2, r1
   3aec8:	mov	r1, #3
   3aecc:	strh	ip, [r4, #8]
   3aed0:	str	lr, [r4, #12]
   3aed4:	strh	r1, [r3, #14]
   3aed8:	bhi	3af5c <flatcc_builder_start_table@@Base+0x1c0>
   3aedc:	adds	r6, r6, r0
   3aee0:	streq	r6, [r4, #4]
   3aee4:	beq	3afd0 <flatcc_builder_start_table@@Base+0x234>
   3aee8:	ldr	r3, [r4, #32]
   3aeec:	add	r6, r6, #4
   3aef0:	str	r6, [r4, #4]
   3aef4:	ldr	r6, [r3, #20]
   3aef8:	sub	r2, r5, #3
   3aefc:	ldr	r3, [r4, #80]	; 0x50
   3af00:	add	r2, r2, r6
   3af04:	cmp	r2, r3
   3af08:	bhi	3af84 <flatcc_builder_start_table@@Base+0x1e8>
   3af0c:	ldr	r3, [r4, #76]	; 0x4c
   3af10:	add	r3, r3, r6
   3af14:	cmp	r3, #0
   3af18:	str	r3, [r4]
   3af1c:	beq	3afd0 <flatcc_builder_start_table@@Base+0x234>
   3af20:	ldr	ip, [r4, #28]
   3af24:	ldr	r3, [r4, #64]	; 0x40
   3af28:	ldr	r2, [pc, #176]	; 3afe0 <flatcc_builder_start_table@@Base+0x244>
   3af2c:	sub	r3, r3, ip
   3af30:	ldr	r1, [r4, #60]	; 0x3c
   3af34:	ldr	lr, [r4, #32]
   3af38:	cmp	r3, r2
   3af3c:	mov	r0, #0
   3af40:	add	r1, r1, ip
   3af44:	movcs	r3, r2
   3af48:	str	r1, [r4, #16]
   3af4c:	str	r3, [r4, #24]
   3af50:	str	r2, [lr, #4]
   3af54:	add	sp, sp, #12
   3af58:	pop	{r4, r5, r6, r7, pc}
   3af5c:	ldr	r0, [r4, #40]	; 0x28
   3af60:	mov	r3, #1
   3af64:	str	ip, [sp]
   3af68:	add	r1, r4, #52	; 0x34
   3af6c:	ldr	r7, [r4, #48]	; 0x30
   3af70:	blx	r7
   3af74:	cmp	r0, #0
   3af78:	bne	3afa8 <flatcc_builder_start_table@@Base+0x20c>
   3af7c:	ldr	r0, [r4, #52]	; 0x34
   3af80:	b	3aedc <flatcc_builder_start_table@@Base+0x140>
   3af84:	mov	r3, #3
   3af88:	ldr	r0, [r4, #40]	; 0x28
   3af8c:	add	r1, r4, #76	; 0x4c
   3af90:	str	r3, [sp]
   3af94:	mov	r3, #0
   3af98:	ldr	r5, [r4, #48]	; 0x30
   3af9c:	blx	r5
   3afa0:	cmp	r0, #0
   3afa4:	beq	3af0c <flatcc_builder_start_table@@Base+0x170>
   3afa8:	bl	140e8 <__assert_fail@plt+0xb0>
   3afac:	mov	r1, #4
   3afb0:	ldr	r0, [r4, #40]	; 0x28
   3afb4:	str	r1, [sp]
   3afb8:	add	r1, r4, #84	; 0x54
   3afbc:	ldr	r7, [r4, #48]	; 0x30
   3afc0:	blx	r7
   3afc4:	cmp	r0, #0
   3afc8:	beq	3adf4 <flatcc_builder_start_table@@Base+0x58>
   3afcc:	b	3afa8 <flatcc_builder_start_table@@Base+0x20c>
   3afd0:	mvn	r0, #0
   3afd4:	b	3af54 <flatcc_builder_start_table@@Base+0x1b8>
   3afd8:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   3afdc:	svccs	0x00693b52
   3afe0:	strdeq	pc, [r0], -ip

0003afe4 <flatcc_builder_create_vtable@@Base>:
   3afe4:	push	{r4, r5, r6, lr}
   3afe8:	sub	sp, sp, #80	; 0x50
   3afec:	mov	r3, #0
   3aff0:	cmp	r2, #0
   3aff4:	str	r3, [sp, #8]
   3aff8:	str	r3, [sp, #12]
   3affc:	mov	r4, r0
   3b000:	ldr	r3, [r0, #152]	; 0x98
   3b004:	beq	3b078 <flatcc_builder_create_vtable@@Base+0x94>
   3b008:	mov	r0, #1
   3b00c:	cmp	r3, #0
   3b010:	str	r1, [sp, #16]
   3b014:	str	r2, [sp, #8]
   3b018:	str	r2, [sp, #20]
   3b01c:	str	r0, [sp, #12]
   3b020:	mov	r1, r2
   3b024:	beq	3b090 <flatcc_builder_create_vtable@@Base+0xac>
   3b028:	ldr	r3, [r4, #136]	; 0x88
   3b02c:	sub	r5, r3, r2
   3b030:	cmp	r3, r5
   3b034:	ble	3b08c <flatcc_builder_create_vtable@@Base+0xa8>
   3b038:	ldr	r0, [r4, #36]	; 0x24
   3b03c:	mov	r3, r5
   3b040:	str	r2, [sp]
   3b044:	add	r1, sp, #16
   3b048:	ldr	r6, [r4, #44]	; 0x2c
   3b04c:	mov	r2, #1
   3b050:	blx	r6
   3b054:	cmp	r0, #0
   3b058:	bne	3b0f4 <flatcc_builder_create_vtable@@Base+0x110>
   3b05c:	cmp	r5, #0
   3b060:	str	r5, [r4, #136]	; 0x88
   3b064:	beq	3b06c <flatcc_builder_create_vtable@@Base+0x88>
   3b068:	add	r5, r5, #1
   3b06c:	mov	r0, r5
   3b070:	add	sp, sp, #80	; 0x50
   3b074:	pop	{r4, r5, r6, pc}
   3b078:	cmp	r3, #0
   3b07c:	bne	3b08c <flatcc_builder_create_vtable@@Base+0xa8>
   3b080:	ldr	r2, [r0, #180]	; 0xb4
   3b084:	cmp	r2, #0
   3b088:	beq	3b0e8 <flatcc_builder_create_vtable@@Base+0x104>
   3b08c:	bl	14134 <__assert_fail@plt+0xfc>
   3b090:	ldr	r3, [r4, #180]	; 0xb4
   3b094:	cmp	r3, #0
   3b098:	bne	3b028 <flatcc_builder_create_vtable@@Base+0x44>
   3b09c:	ldr	r5, [r4, #140]	; 0x8c
   3b0a0:	add	r3, r5, r2
   3b0a4:	cmp	r5, r3
   3b0a8:	str	r3, [r4, #140]	; 0x8c
   3b0ac:	movle	r2, r0
   3b0b0:	bgt	3b108 <flatcc_builder_create_vtable@@Base+0x124>
   3b0b4:	ldr	r0, [r4, #36]	; 0x24
   3b0b8:	mov	r3, r5
   3b0bc:	str	r1, [sp]
   3b0c0:	add	r1, sp, #16
   3b0c4:	ldr	r4, [r4, #44]	; 0x2c
   3b0c8:	blx	r4
   3b0cc:	cmp	r0, #0
   3b0d0:	beq	3b068 <flatcc_builder_create_vtable@@Base+0x84>
   3b0d4:	ldr	r3, [pc, #48]	; 3b10c <flatcc_builder_create_vtable@@Base+0x128>
   3b0d8:	ldr	r2, [pc, #48]	; 3b110 <flatcc_builder_create_vtable@@Base+0x12c>
   3b0dc:	ldr	r1, [pc, #48]	; 3b114 <flatcc_builder_create_vtable@@Base+0x130>
   3b0e0:	ldr	r0, [pc, #48]	; 3b118 <flatcc_builder_create_vtable@@Base+0x134>
   3b0e4:	bl	14038 <__assert_fail@plt>
   3b0e8:	ldr	r5, [r4, #140]	; 0x8c
   3b0ec:	mov	r1, r2
   3b0f0:	b	3b0b4 <flatcc_builder_create_vtable@@Base+0xd0>
   3b0f4:	ldr	r3, [pc, #32]	; 3b11c <flatcc_builder_create_vtable@@Base+0x138>
   3b0f8:	ldr	r2, [pc, #32]	; 3b120 <flatcc_builder_create_vtable@@Base+0x13c>
   3b0fc:	ldr	r1, [pc, #16]	; 3b114 <flatcc_builder_create_vtable@@Base+0x130>
   3b100:	ldr	r0, [pc, #16]	; 3b118 <flatcc_builder_create_vtable@@Base+0x134>
   3b104:	bl	14038 <__assert_fail@plt>
   3b108:	bl	1410c <__assert_fail@plt+0xd4>
   3b10c:	andeq	fp, r5, r8, lsl #7
   3b110:	andeq	r0, r0, r5, lsr #5
   3b114:	andeq	fp, r5, r8, asr #21
   3b118:	andeq	sl, r4, r4, asr sp
   3b11c:	muleq	r5, r4, r3
   3b120:	andeq	r0, r0, fp, lsl #5

0003b124 <flatcc_builder_create_cached_vtable@@Base>:
   3b124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b128:	sub	sp, sp, #28
   3b12c:	ldr	r4, [r0, #116]	; 0x74
   3b130:	mov	sl, r3
   3b134:	cmp	r4, #0
   3b138:	mov	r8, r0
   3b13c:	str	r1, [sp, #8]
   3b140:	mov	r7, r2
   3b144:	rsbne	r3, r4, #32
   3b148:	beq	3b2a0 <flatcc_builder_create_cached_vtable@@Base+0x17c>
   3b14c:	lsr	sl, sl, r3
   3b150:	ldr	r3, [r8, #92]	; 0x5c
   3b154:	adds	r2, r3, sl, lsl #2
   3b158:	str	r3, [sp, #16]
   3b15c:	str	r2, [sp, #20]
   3b160:	beq	3b294 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3b164:	ldr	r5, [r3, sl, lsl #2]
   3b168:	cmp	r5, #0
   3b16c:	beq	3b390 <flatcc_builder_create_cached_vtable@@Base+0x26c>
   3b170:	mov	r3, #0
   3b174:	ldr	fp, [r8, #100]	; 0x64
   3b178:	ldr	r6, [r8, #68]	; 0x44
   3b17c:	mov	r9, r2
   3b180:	str	r3, [sp, #12]
   3b184:	b	3b198 <flatcc_builder_create_cached_vtable@@Base+0x74>
   3b188:	ldr	r5, [r4, #12]
   3b18c:	add	r9, r4, #12
   3b190:	cmp	r5, #0
   3b194:	beq	3b1e8 <flatcc_builder_create_cached_vtable@@Base+0xc4>
   3b198:	add	r4, fp, r5
   3b19c:	ldr	r2, [r4, #8]
   3b1a0:	add	r1, r6, r2
   3b1a4:	ldrh	r2, [r6, r2]
   3b1a8:	cmp	r2, r7
   3b1ac:	bne	3b188 <flatcc_builder_create_cached_vtable@@Base+0x64>
   3b1b0:	mov	r2, r7
   3b1b4:	ldr	r0, [sp, #8]
   3b1b8:	bl	13ef4 <memcmp@plt>
   3b1bc:	cmp	r0, #0
   3b1c0:	bne	3b188 <flatcc_builder_create_cached_vtable@@Base+0x64>
   3b1c4:	ldr	r1, [r4, #4]
   3b1c8:	ldr	r2, [r8, #152]	; 0x98
   3b1cc:	cmp	r1, r2
   3b1d0:	beq	3b264 <flatcc_builder_create_cached_vtable@@Base+0x140>
   3b1d4:	ldr	r5, [r4, #12]
   3b1d8:	add	r9, r4, #12
   3b1dc:	cmp	r5, #0
   3b1e0:	str	r4, [sp, #12]
   3b1e4:	bne	3b198 <flatcc_builder_create_cached_vtable@@Base+0x74>
   3b1e8:	ldr	r4, [r8, #124]	; 0x7c
   3b1ec:	ldr	r3, [r8, #104]	; 0x68
   3b1f0:	add	r2, r4, #16
   3b1f4:	cmp	r2, r3
   3b1f8:	bhi	3b368 <flatcc_builder_create_cached_vtable@@Base+0x244>
   3b1fc:	ldr	r5, [r8, #100]	; 0x64
   3b200:	adds	r6, r5, r4
   3b204:	beq	3b294 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3b208:	ldr	r3, [r8, #124]	; 0x7c
   3b20c:	ldr	r0, [sp, #16]
   3b210:	ldr	r2, [r8, #152]	; 0x98
   3b214:	add	r1, r3, #16
   3b218:	str	r1, [r8, #124]	; 0x7c
   3b21c:	str	r2, [r6, #4]
   3b220:	ldr	r1, [r0, sl, lsl #2]
   3b224:	mov	r2, r7
   3b228:	str	r1, [r6, #12]
   3b22c:	str	r3, [r0, sl, lsl #2]
   3b230:	ldr	r1, [sp, #8]
   3b234:	mov	r0, r8
   3b238:	bl	3afe4 <flatcc_builder_create_vtable@@Base>
   3b23c:	cmp	r0, #0
   3b240:	str	r0, [r5, r4]
   3b244:	beq	3b294 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3b248:	ldr	r3, [sp, #12]
   3b24c:	cmp	r3, #0
   3b250:	beq	3b398 <flatcc_builder_create_cached_vtable@@Base+0x274>
   3b254:	ldr	r3, [r3, #8]
   3b258:	str	r3, [r6, #8]
   3b25c:	add	sp, sp, #28
   3b260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b264:	ldr	r3, [sp, #20]
   3b268:	cmp	r3, r9
   3b26c:	beq	3b288 <flatcc_builder_create_cached_vtable@@Base+0x164>
   3b270:	ldr	r2, [sp, #16]
   3b274:	ldr	r3, [r4, #12]
   3b278:	str	r3, [r9]
   3b27c:	ldr	r3, [r2, sl, lsl #2]
   3b280:	str	r3, [r4, #12]
   3b284:	str	r5, [r2, sl, lsl #2]
   3b288:	ldr	r0, [r4]
   3b28c:	add	sp, sp, #28
   3b290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b294:	mov	r0, #0
   3b298:	add	sp, sp, #28
   3b29c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b2a0:	ldr	r3, [r0, #124]	; 0x7c
   3b2a4:	add	r5, r0, #92	; 0x5c
   3b2a8:	cmp	r3, #0
   3b2ac:	bne	3b45c <flatcc_builder_create_cached_vtable@@Base+0x338>
   3b2b0:	ldr	r3, [r0, #104]	; 0x68
   3b2b4:	cmp	r3, #15
   3b2b8:	bls	3b33c <flatcc_builder_create_cached_vtable@@Base+0x218>
   3b2bc:	ldr	r3, [r8, #100]	; 0x64
   3b2c0:	cmp	r3, #0
   3b2c4:	beq	3b294 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3b2c8:	mov	r2, #16
   3b2cc:	mov	r3, #5
   3b2d0:	str	r2, [r8, #124]	; 0x7c
   3b2d4:	ldr	r0, [r8, #40]	; 0x28
   3b2d8:	mov	r1, r5
   3b2dc:	str	r3, [sp]
   3b2e0:	mov	r2, #256	; 0x100
   3b2e4:	ldr	r5, [r8, #48]	; 0x30
   3b2e8:	mov	r3, #1
   3b2ec:	blx	r5
   3b2f0:	cmp	r0, #0
   3b2f4:	bne	3b294 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3b2f8:	ldr	r1, [r8, #96]	; 0x60
   3b2fc:	mov	r3, #256	; 0x100
   3b300:	b	3b308 <flatcc_builder_create_cached_vtable@@Base+0x1e4>
   3b304:	mov	r3, r2
   3b308:	lsl	r2, r3, #1
   3b30c:	cmp	r2, r1
   3b310:	bls	3b304 <flatcc_builder_create_cached_vtable@@Base+0x1e0>
   3b314:	lsr	r3, r3, #2
   3b318:	cmp	r3, #1
   3b31c:	bls	3b3e8 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   3b320:	mov	r2, #1
   3b324:	add	r4, r4, #1
   3b328:	cmp	r3, r2, lsl r4
   3b32c:	bhi	3b324 <flatcc_builder_create_cached_vtable@@Base+0x200>
   3b330:	rsb	r3, r4, #32
   3b334:	str	r4, [r8, #116]	; 0x74
   3b338:	b	3b14c <flatcc_builder_create_cached_vtable@@Base+0x28>
   3b33c:	mov	r3, #6
   3b340:	ldr	r0, [r0, #40]	; 0x28
   3b344:	mov	r2, #16
   3b348:	str	r3, [sp]
   3b34c:	add	r1, r8, #100	; 0x64
   3b350:	ldr	r6, [r8, #48]	; 0x30
   3b354:	mov	r3, r4
   3b358:	blx	r6
   3b35c:	cmp	r0, #0
   3b360:	beq	3b2bc <flatcc_builder_create_cached_vtable@@Base+0x198>
   3b364:	b	3b450 <flatcc_builder_create_cached_vtable@@Base+0x32c>
   3b368:	mov	r3, #6
   3b36c:	ldr	r0, [r8, #40]	; 0x28
   3b370:	add	r1, r8, #100	; 0x64
   3b374:	str	r3, [sp]
   3b378:	mov	r3, #0
   3b37c:	ldr	r5, [r8, #48]	; 0x30
   3b380:	blx	r5
   3b384:	cmp	r0, #0
   3b388:	beq	3b1fc <flatcc_builder_create_cached_vtable@@Base+0xd8>
   3b38c:	b	3b450 <flatcc_builder_create_cached_vtable@@Base+0x32c>
   3b390:	str	r5, [sp, #12]
   3b394:	b	3b1e8 <flatcc_builder_create_cached_vtable@@Base+0xc4>
   3b398:	ldr	r3, [r8, #172]	; 0xac
   3b39c:	ldr	r9, [r8, #120]	; 0x78
   3b3a0:	cmp	r3, #0
   3b3a4:	add	r2, r9, r7
   3b3a8:	beq	3b3f0 <flatcc_builder_create_cached_vtable@@Base+0x2cc>
   3b3ac:	cmp	r3, r2
   3b3b0:	bcs	3b3f0 <flatcc_builder_create_cached_vtable@@Base+0x2cc>
   3b3b4:	ldr	r3, [r8, #116]	; 0x74
   3b3b8:	cmp	r3, #0
   3b3bc:	beq	3b25c <flatcc_builder_create_cached_vtable@@Base+0x138>
   3b3c0:	ldr	r6, [sp, #12]
   3b3c4:	ldr	r2, [r8, #96]	; 0x60
   3b3c8:	mov	r1, r6
   3b3cc:	ldr	r0, [r8, #92]	; 0x5c
   3b3d0:	bl	13f9c <memset@plt>
   3b3d4:	mov	r3, #16
   3b3d8:	ldr	r0, [r5, r4]
   3b3dc:	str	r6, [r8, #120]	; 0x78
   3b3e0:	str	r3, [r8, #124]	; 0x7c
   3b3e4:	b	3b25c <flatcc_builder_create_cached_vtable@@Base+0x138>
   3b3e8:	mov	r3, #32
   3b3ec:	b	3b334 <flatcc_builder_create_cached_vtable@@Base+0x210>
   3b3f0:	ldr	r3, [r8, #72]	; 0x48
   3b3f4:	cmp	r3, r2
   3b3f8:	bcc	3b42c <flatcc_builder_create_cached_vtable@@Base+0x308>
   3b3fc:	ldr	r3, [r8, #68]	; 0x44
   3b400:	adds	r0, r3, r9
   3b404:	beq	3b454 <flatcc_builder_create_cached_vtable@@Base+0x330>
   3b408:	ldr	r3, [r8, #120]	; 0x78
   3b40c:	ldr	r1, [sp, #8]
   3b410:	add	ip, r3, r7
   3b414:	str	r3, [r6, #8]
   3b418:	mov	r2, r7
   3b41c:	str	ip, [r8, #120]	; 0x78
   3b420:	bl	13edc <memcpy@plt>
   3b424:	ldr	r0, [r5, r4]
   3b428:	b	3b25c <flatcc_builder_create_cached_vtable@@Base+0x138>
   3b42c:	mov	r3, #2
   3b430:	ldr	r0, [r8, #40]	; 0x28
   3b434:	add	r1, r8, #68	; 0x44
   3b438:	str	r3, [sp]
   3b43c:	mov	r3, #0
   3b440:	ldr	sl, [r8, #48]	; 0x30
   3b444:	blx	sl
   3b448:	cmp	r0, #0
   3b44c:	beq	3b3fc <flatcc_builder_create_cached_vtable@@Base+0x2d8>
   3b450:	bl	140e8 <__assert_fail@plt+0xb0>
   3b454:	mvn	r0, #0
   3b458:	b	3b25c <flatcc_builder_create_cached_vtable@@Base+0x138>
   3b45c:	ldr	r3, [pc, #12]	; 3b470 <flatcc_builder_create_cached_vtable@@Base+0x34c>
   3b460:	ldr	r2, [pc, #12]	; 3b474 <flatcc_builder_create_cached_vtable@@Base+0x350>
   3b464:	ldr	r1, [pc, #12]	; 3b478 <flatcc_builder_create_cached_vtable@@Base+0x354>
   3b468:	ldr	r0, [pc, #12]	; 3b47c <flatcc_builder_create_cached_vtable@@Base+0x358>
   3b46c:	bl	14038 <__assert_fail@plt>
   3b470:	andeq	fp, r5, r8, asr #16
   3b474:	andeq	r0, r0, r6, asr r1
   3b478:	andeq	fp, r5, r8, asr #21
   3b47c:	andeq	fp, r5, r4, ror #26

0003b480 <flatcc_builder_create_table@@Base>:
   3b480:	push	{r4, r5, r6, r7, r8, lr}
   3b484:	sub	sp, sp, #88	; 0x58
   3b488:	ldr	r4, [sp, #116]	; 0x74
   3b48c:	ldr	lr, [sp, #120]	; 0x78
   3b490:	cmp	r4, #0
   3b494:	blt	3b5cc <flatcc_builder_create_table@@Base+0x14c>
   3b498:	mov	r8, r2
   3b49c:	ands	r2, lr, #1
   3b4a0:	beq	3b5f8 <flatcc_builder_create_table@@Base+0x178>
   3b4a4:	mov	r5, r0
   3b4a8:	ldrh	r0, [r0, #128]	; 0x80
   3b4ac:	cmp	r3, #4
   3b4b0:	movcc	r3, #4
   3b4b4:	ldr	ip, [r5, #136]	; 0x88
   3b4b8:	cmp	r0, r3
   3b4bc:	mvn	r0, #3
   3b4c0:	strhcc	r3, [r5, #128]	; 0x80
   3b4c4:	sub	r7, ip, r8
   3b4c8:	sub	r3, r3, #1
   3b4cc:	sub	r0, r0, r8
   3b4d0:	and	r7, r7, r3
   3b4d4:	add	r0, r0, ip
   3b4d8:	sub	lr, lr, #1
   3b4dc:	sub	r0, r0, r7
   3b4e0:	sub	lr, r0, lr
   3b4e4:	cmp	r4, #0
   3b4e8:	str	lr, [sp, #12]
   3b4ec:	beq	3b520 <flatcc_builder_create_table@@Base+0xa0>
   3b4f0:	ldr	ip, [sp, #112]	; 0x70
   3b4f4:	mvn	r6, #3
   3b4f8:	add	r4, ip, r4, lsl #1
   3b4fc:	sub	r6, r6, r0
   3b500:	ldrh	r3, [ip], #2
   3b504:	sub	lr, r6, r3
   3b508:	ldr	r0, [r1, r3]
   3b50c:	cmp	r4, ip
   3b510:	add	r0, r0, lr
   3b514:	str	r0, [r1, r3]
   3b518:	bne	3b500 <flatcc_builder_create_table@@Base+0x80>
   3b51c:	ldr	ip, [r5, #136]	; 0x88
   3b520:	cmp	r8, #0
   3b524:	mov	r3, #4
   3b528:	mov	r0, #1
   3b52c:	str	r3, [sp, #16]
   3b530:	movne	r2, #2
   3b534:	str	r3, [sp, #28]
   3b538:	addne	r3, r8, r3
   3b53c:	str	r0, [sp, #20]
   3b540:	add	lr, sp, #12
   3b544:	strne	r1, [sp, #32]
   3b548:	strne	r8, [sp, #36]	; 0x24
   3b54c:	strne	r3, [sp, #16]
   3b550:	strne	r2, [sp, #20]
   3b554:	movne	r0, #3
   3b558:	moveq	r0, #2
   3b55c:	cmp	r7, #0
   3b560:	str	lr, [sp, #24]
   3b564:	beq	3b590 <flatcc_builder_create_table@@Base+0x110>
   3b568:	add	r2, r2, #1
   3b56c:	add	r1, sp, #88	; 0x58
   3b570:	add	r1, r1, r2, lsl #3
   3b574:	ldr	lr, [pc, #144]	; 3b60c <flatcc_builder_create_table@@Base+0x18c>
   3b578:	mov	r2, r0
   3b57c:	add	r3, r3, r7
   3b580:	str	r7, [r1, #-68]	; 0xffffffbc
   3b584:	str	r3, [sp, #16]
   3b588:	str	r0, [sp, #20]
   3b58c:	str	lr, [r1, #-72]	; 0xffffffb8
   3b590:	sub	r4, ip, r3
   3b594:	cmp	r4, ip
   3b598:	bge	3b5f4 <flatcc_builder_create_table@@Base+0x174>
   3b59c:	ldr	r0, [r5, #36]	; 0x24
   3b5a0:	add	r1, sp, #24
   3b5a4:	str	r3, [sp]
   3b5a8:	mov	r3, r4
   3b5ac:	ldr	r6, [r5, #44]	; 0x2c
   3b5b0:	blx	r6
   3b5b4:	cmp	r0, #0
   3b5b8:	bne	3b5e0 <flatcc_builder_create_table@@Base+0x160>
   3b5bc:	mov	r0, r4
   3b5c0:	str	r4, [r5, #136]	; 0x88
   3b5c4:	add	sp, sp, #88	; 0x58
   3b5c8:	pop	{r4, r5, r6, r7, r8, pc}
   3b5cc:	ldr	r3, [pc, #60]	; 3b610 <flatcc_builder_create_table@@Base+0x190>
   3b5d0:	ldr	r2, [pc, #60]	; 3b614 <flatcc_builder_create_table@@Base+0x194>
   3b5d4:	ldr	r1, [pc, #60]	; 3b618 <flatcc_builder_create_table@@Base+0x198>
   3b5d8:	ldr	r0, [pc, #60]	; 3b61c <flatcc_builder_create_table@@Base+0x19c>
   3b5dc:	bl	14038 <__assert_fail@plt>
   3b5e0:	ldr	r3, [pc, #56]	; 3b620 <flatcc_builder_create_table@@Base+0x1a0>
   3b5e4:	ldr	r2, [pc, #56]	; 3b624 <flatcc_builder_create_table@@Base+0x1a4>
   3b5e8:	ldr	r1, [pc, #40]	; 3b618 <flatcc_builder_create_table@@Base+0x198>
   3b5ec:	ldr	r0, [pc, #52]	; 3b628 <flatcc_builder_create_table@@Base+0x1a8>
   3b5f0:	bl	14038 <__assert_fail@plt>
   3b5f4:	bl	14134 <__assert_fail@plt+0xfc>
   3b5f8:	ldr	r3, [pc, #16]	; 3b610 <flatcc_builder_create_table@@Base+0x190>
   3b5fc:	ldr	r2, [pc, #40]	; 3b62c <flatcc_builder_create_table@@Base+0x1ac>
   3b600:	ldr	r1, [pc, #16]	; 3b618 <flatcc_builder_create_table@@Base+0x198>
   3b604:	ldr	r0, [pc, #36]	; 3b630 <flatcc_builder_create_table@@Base+0x1b0>
   3b608:	bl	14038 <__assert_fail@plt>
   3b60c:	andeq	fp, r5, r0, lsl r4
   3b610:	andeq	fp, r5, r4, asr r8
   3b614:	ldrdeq	r0, [r0], -r5
   3b618:	andeq	fp, r5, r8, asr #21
   3b61c:	andeq	fp, r5, r4, ror sp
   3b620:	muleq	r5, r4, r3
   3b624:	andeq	r0, r0, fp, lsl #5
   3b628:	andeq	sl, r4, r4, asr sp
   3b62c:	ldrdeq	r0, [r0], -fp
   3b630:	andeq	fp, r5, r8, lsl #27

0003b634 <flatcc_builder_check_required_field@@Base>:
   3b634:	ldr	r3, [r0, #32]
   3b638:	ldrh	r3, [r3, #14]
   3b63c:	cmp	r3, #3
   3b640:	bne	3b66c <flatcc_builder_check_required_field@@Base+0x38>
   3b644:	ldrh	r3, [r0, #8]
   3b648:	cmp	r3, r1
   3b64c:	movls	r0, #0
   3b650:	bls	3b668 <flatcc_builder_check_required_field@@Base+0x34>
   3b654:	ldr	r3, [r0, #4]
   3b658:	lsl	r1, r1, #1
   3b65c:	ldrh	r0, [r3, r1]
   3b660:	adds	r0, r0, #0
   3b664:	movne	r0, #1
   3b668:	bx	lr
   3b66c:	push	{r4, lr}
   3b670:	ldr	r3, [pc, #12]	; 3b684 <flatcc_builder_check_required_field@@Base+0x50>
   3b674:	ldr	r2, [pc, #12]	; 3b688 <flatcc_builder_check_required_field@@Base+0x54>
   3b678:	ldr	r1, [pc, #12]	; 3b68c <flatcc_builder_check_required_field@@Base+0x58>
   3b67c:	ldr	r0, [pc, #12]	; 3b690 <flatcc_builder_check_required_field@@Base+0x5c>
   3b680:	bl	14038 <__assert_fail@plt>
   3b684:	andeq	fp, r5, r0, ror r8
   3b688:	strdeq	r0, [r0], -r8
   3b68c:	andeq	fp, r5, r8, asr #21
   3b690:	muleq	r5, r4, sp

0003b694 <flatcc_builder_check_union_field@@Base>:
   3b694:	ldr	r3, [r0, #32]
   3b698:	ldrh	r3, [r3, #14]
   3b69c:	cmp	r3, #3
   3b6a0:	bne	3b71c <flatcc_builder_check_union_field@@Base+0x88>
   3b6a4:	cmp	r1, #0
   3b6a8:	beq	3b6f4 <flatcc_builder_check_union_field@@Base+0x60>
   3b6ac:	ldrh	r3, [r0, #8]
   3b6b0:	cmp	r3, r1
   3b6b4:	bls	3b6f4 <flatcc_builder_check_union_field@@Base+0x60>
   3b6b8:	sub	r1, r1, #-2147483647	; 0x80000001
   3b6bc:	ldr	r3, [r0, #4]
   3b6c0:	lsl	r1, r1, #1
   3b6c4:	ldrh	r2, [r3, r1]
   3b6c8:	cmp	r2, #0
   3b6cc:	beq	3b708 <flatcc_builder_check_union_field@@Base+0x74>
   3b6d0:	ldr	r0, [r0, #16]
   3b6d4:	add	r1, r3, r1
   3b6d8:	ldrb	r2, [r0, r2]
   3b6dc:	ldrh	r1, [r1, #2]
   3b6e0:	cmp	r2, #0
   3b6e4:	bne	3b6fc <flatcc_builder_check_union_field@@Base+0x68>
   3b6e8:	clz	r0, r1
   3b6ec:	lsr	r0, r0, #5
   3b6f0:	bx	lr
   3b6f4:	mov	r0, #0
   3b6f8:	bx	lr
   3b6fc:	adds	r0, r1, #0
   3b700:	movne	r0, #1
   3b704:	b	3b6f8 <flatcc_builder_check_union_field@@Base+0x64>
   3b708:	add	r1, r3, r1
   3b70c:	ldrh	r1, [r1, #2]
   3b710:	clz	r0, r1
   3b714:	lsr	r0, r0, #5
   3b718:	bx	lr
   3b71c:	push	{r4, lr}
   3b720:	ldr	r3, [pc, #12]	; 3b734 <flatcc_builder_check_union_field@@Base+0xa0>
   3b724:	ldr	r2, [pc, #12]	; 3b738 <flatcc_builder_check_union_field@@Base+0xa4>
   3b728:	ldr	r1, [pc, #12]	; 3b73c <flatcc_builder_check_union_field@@Base+0xa8>
   3b72c:	ldr	r0, [pc, #12]	; 3b740 <flatcc_builder_check_union_field@@Base+0xac>
   3b730:	bl	14038 <__assert_fail@plt>
   3b734:	muleq	r5, r4, r8
   3b738:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   3b73c:	andeq	fp, r5, r8, asr #21
   3b740:	muleq	r5, r4, sp

0003b744 <flatcc_builder_check_required@@Base>:
   3b744:	ldr	r3, [r0, #32]
   3b748:	ldrh	r3, [r3, #14]
   3b74c:	cmp	r3, #3
   3b750:	bne	3b7b4 <flatcc_builder_check_required@@Base+0x70>
   3b754:	ldrh	r3, [r0, #8]
   3b758:	cmp	r3, r2
   3b75c:	movlt	r0, #0
   3b760:	blt	3b7b0 <flatcc_builder_check_required@@Base+0x6c>
   3b764:	cmp	r2, #0
   3b768:	ble	3b7ac <flatcc_builder_check_required@@Base+0x68>
   3b76c:	ldrh	r3, [r1]
   3b770:	ldr	ip, [r0, #4]
   3b774:	lsl	r3, r3, #1
   3b778:	ldrh	r0, [ip, r3]
   3b77c:	cmp	r0, #0
   3b780:	beq	3b7b0 <flatcc_builder_check_required@@Base+0x6c>
   3b784:	add	r2, r1, r2, lsl #1
   3b788:	add	r1, r1, #2
   3b78c:	b	3b7a4 <flatcc_builder_check_required@@Base+0x60>
   3b790:	ldrh	r3, [r1], #2
   3b794:	lsl	r3, r3, #1
   3b798:	ldrh	r0, [ip, r3]
   3b79c:	cmp	r0, #0
   3b7a0:	beq	3b7b0 <flatcc_builder_check_required@@Base+0x6c>
   3b7a4:	cmp	r1, r2
   3b7a8:	bne	3b790 <flatcc_builder_check_required@@Base+0x4c>
   3b7ac:	mov	r0, #1
   3b7b0:	bx	lr
   3b7b4:	push	{r4, lr}
   3b7b8:	ldr	r3, [pc, #12]	; 3b7cc <flatcc_builder_check_required@@Base+0x88>
   3b7bc:	ldr	r2, [pc, #12]	; 3b7d0 <flatcc_builder_check_required@@Base+0x8c>
   3b7c0:	ldr	r1, [pc, #12]	; 3b7d4 <flatcc_builder_check_required@@Base+0x90>
   3b7c4:	ldr	r0, [pc, #12]	; 3b7d8 <flatcc_builder_check_required@@Base+0x94>
   3b7c8:	bl	14038 <__assert_fail@plt>
   3b7cc:			; <UNDEFINED> instruction: 0x0005b8b8
   3b7d0:	andeq	r0, r0, r1, lsl r5
   3b7d4:	andeq	fp, r5, r8, asr #21
   3b7d8:	muleq	r5, r4, sp

0003b7dc <flatcc_builder_end_table@@Base>:
   3b7dc:	ldr	r3, [r0, #32]
   3b7e0:	push	{r4, r5, r6, r7, lr}
   3b7e4:	sub	sp, sp, #20
   3b7e8:	ldrh	r3, [r3, #14]
   3b7ec:	cmp	r3, #3
   3b7f0:	bne	3b974 <flatcc_builder_end_table@@Base+0x198>
   3b7f4:	ldrh	r5, [r0, #8]
   3b7f8:	ldr	r3, [r0, #12]
   3b7fc:	ldr	r1, [pc, #388]	; 3b988 <flatcc_builder_end_table@@Base+0x1ac>
   3b800:	add	r5, r5, #2
   3b804:	ldr	r2, [r0, #20]
   3b808:	lsl	r5, r5, #1
   3b80c:	add	r2, r2, #4
   3b810:	uxth	r5, r5
   3b814:	eor	r3, r3, r5
   3b818:	uxth	r2, r2
   3b81c:	mul	r3, r1, r3
   3b820:	ldr	ip, [r0, #4]
   3b824:	eor	r3, r3, r2
   3b828:	sub	r6, ip, #4
   3b82c:	mul	r1, r1, r3
   3b830:	strh	r2, [ip, #-2]
   3b834:	strh	r5, [ip, #-4]
   3b838:	mov	r3, r1
   3b83c:	str	r1, [r0, #12]
   3b840:	mov	r2, r5
   3b844:	mov	r1, r6
   3b848:	mov	r4, r0
   3b84c:	bl	3b124 <flatcc_builder_create_cached_vtable@@Base>
   3b850:	subs	r7, r0, #0
   3b854:	bne	3b868 <flatcc_builder_end_table@@Base+0x8c>
   3b858:	mov	r5, #0
   3b85c:	mov	r0, r5
   3b860:	add	sp, sp, #20
   3b864:	pop	{r4, r5, r6, r7, pc}
   3b868:	mov	r2, r5
   3b86c:	mov	r1, #0
   3b870:	mov	r0, r6
   3b874:	bl	13f9c <memset@plt>
   3b878:	ldr	r3, [r4, #32]
   3b87c:	ldr	ip, [r4, #76]	; 0x4c
   3b880:	ldr	r0, [r4]
   3b884:	ldr	r2, [r3, #20]
   3b888:	ldr	r1, [r4, #16]
   3b88c:	add	ip, ip, r2
   3b890:	sub	r0, r0, ip
   3b894:	ldrh	r3, [r4, #130]	; 0x82
   3b898:	asr	r0, r0, #1
   3b89c:	ldr	r2, [r4, #20]
   3b8a0:	str	r0, [sp, #4]
   3b8a4:	str	r7, [sp, #8]
   3b8a8:	str	ip, [sp]
   3b8ac:	mov	r0, r4
   3b8b0:	bl	3b480 <flatcc_builder_create_table@@Base>
   3b8b4:	subs	r5, r0, #0
   3b8b8:	beq	3b858 <flatcc_builder_end_table@@Base+0x7c>
   3b8bc:	ldr	r3, [r4, #32]
   3b8c0:	ldr	r0, [r4, #52]	; 0x34
   3b8c4:	ldr	ip, [r4, #76]	; 0x4c
   3b8c8:	ldr	r1, [r3, #24]
   3b8cc:	ldr	r2, [r4, #20]
   3b8d0:	str	r1, [r4, #12]
   3b8d4:	ldrh	lr, [r3, #28]
   3b8d8:	mov	r1, #0
   3b8dc:	strh	lr, [r4, #8]
   3b8e0:	ldr	lr, [r3, #16]
   3b8e4:	add	r0, r0, lr
   3b8e8:	str	r0, [r4, #4]
   3b8ec:	ldr	r3, [r3, #20]
   3b8f0:	ldr	r0, [r4, #16]
   3b8f4:	add	r3, ip, r3
   3b8f8:	str	r3, [r4]
   3b8fc:	bl	13f9c <memset@plt>
   3b900:	ldr	r3, [r4, #32]
   3b904:	ldr	r2, [r4, #64]	; 0x40
   3b908:	ldrh	lr, [r4, #130]	; 0x82
   3b90c:	ldr	ip, [r3]
   3b910:	ldr	r1, [r3, #4]
   3b914:	ldrh	r0, [r4, #128]	; 0x80
   3b918:	sub	r2, r2, ip
   3b91c:	cmp	r2, r1
   3b920:	movcs	r2, r1
   3b924:	cmp	r0, lr
   3b928:	ldr	r0, [r4, #60]	; 0x3c
   3b92c:	ldr	r6, [r3, #8]
   3b930:	str	r2, [r4, #24]
   3b934:	add	r2, r0, ip
   3b938:	str	r2, [r4, #16]
   3b93c:	str	r6, [r4, #20]
   3b940:	ldr	r2, [r4, #156]	; 0x9c
   3b944:	str	ip, [r4, #28]
   3b948:	str	r1, [r3, #4]
   3b94c:	strhcc	lr, [r4, #128]	; 0x80
   3b950:	ldrh	r1, [r3, #12]
   3b954:	sub	r2, r2, #1
   3b958:	sub	r3, r3, #36	; 0x24
   3b95c:	mov	r0, r5
   3b960:	str	r2, [r4, #156]	; 0x9c
   3b964:	strh	r1, [r4, #130]	; 0x82
   3b968:	str	r3, [r4, #32]
   3b96c:	add	sp, sp, #20
   3b970:	pop	{r4, r5, r6, r7, pc}
   3b974:	ldr	r3, [pc, #16]	; 3b98c <flatcc_builder_end_table@@Base+0x1b0>
   3b978:	ldr	r2, [pc, #16]	; 3b990 <flatcc_builder_end_table@@Base+0x1b4>
   3b97c:	ldr	r1, [pc, #16]	; 3b994 <flatcc_builder_end_table@@Base+0x1b8>
   3b980:	ldr	r0, [pc, #16]	; 3b998 <flatcc_builder_end_table@@Base+0x1bc>
   3b984:	bl	14038 <__assert_fail@plt>
   3b988:			; <UNDEFINED> instruction: 0x9e3779b1
   3b98c:	ldrdeq	fp, [r5], -r8
   3b990:	andeq	r0, r0, r5, lsr #10
   3b994:	andeq	fp, r5, r8, asr #21
   3b998:	muleq	r5, r4, sp

0003b99c <flatcc_builder_create_vector@@Base>:
   3b99c:	push	{r4, r5, r6, lr}
   3b9a0:	sub	sp, sp, #88	; 0x58
   3b9a4:	mov	r4, r0
   3b9a8:	ldr	ip, [sp, #108]	; 0x6c
   3b9ac:	ldrh	r0, [sp, #104]	; 0x68
   3b9b0:	cmp	r2, ip
   3b9b4:	bhi	3ba90 <flatcc_builder_create_vector@@Base+0xf4>
   3b9b8:	ldrh	ip, [r4, #128]	; 0x80
   3b9bc:	mul	r3, r3, r2
   3b9c0:	cmp	r0, #4
   3b9c4:	movcc	r0, #4
   3b9c8:	ldr	lr, [r4, #136]	; 0x88
   3b9cc:	cmp	ip, r0
   3b9d0:	sub	r6, lr, r3
   3b9d4:	mov	ip, #4
   3b9d8:	strhcc	r0, [r4, #128]	; 0x80
   3b9dc:	str	r2, [sp, #12]
   3b9e0:	cmp	r3, #0
   3b9e4:	mov	r2, #1
   3b9e8:	sub	r0, r0, #1
   3b9ec:	str	ip, [sp, #16]
   3b9f0:	str	r2, [sp, #20]
   3b9f4:	and	r0, r0, r6
   3b9f8:	movne	r2, #2
   3b9fc:	str	ip, [sp, #28]
   3ba00:	addne	ip, r3, ip
   3ba04:	strne	r3, [sp, #36]	; 0x24
   3ba08:	add	r5, sp, #12
   3ba0c:	strne	r1, [sp, #32]
   3ba10:	strne	ip, [sp, #16]
   3ba14:	strne	r2, [sp, #20]
   3ba18:	movne	r3, #3
   3ba1c:	moveq	r3, #2
   3ba20:	cmp	r0, #0
   3ba24:	str	r5, [sp, #24]
   3ba28:	beq	3ba54 <flatcc_builder_create_vector@@Base+0xb8>
   3ba2c:	add	r2, r2, #1
   3ba30:	add	r1, sp, #88	; 0x58
   3ba34:	add	r1, r1, r2, lsl #3
   3ba38:	ldr	r5, [pc, #124]	; 3babc <flatcc_builder_create_vector@@Base+0x120>
   3ba3c:	mov	r2, r3
   3ba40:	add	ip, ip, r0
   3ba44:	str	r0, [r1, #-68]	; 0xffffffbc
   3ba48:	str	ip, [sp, #16]
   3ba4c:	str	r3, [sp, #20]
   3ba50:	str	r5, [r1, #-72]	; 0xffffffb8
   3ba54:	sub	r5, lr, ip
   3ba58:	cmp	lr, r5
   3ba5c:	ble	3bab8 <flatcc_builder_create_vector@@Base+0x11c>
   3ba60:	ldr	r0, [r4, #36]	; 0x24
   3ba64:	mov	r3, r5
   3ba68:	str	ip, [sp]
   3ba6c:	add	r1, sp, #24
   3ba70:	ldr	r6, [r4, #44]	; 0x2c
   3ba74:	blx	r6
   3ba78:	cmp	r0, #0
   3ba7c:	bne	3baa4 <flatcc_builder_create_vector@@Base+0x108>
   3ba80:	mov	r0, r5
   3ba84:	str	r5, [r4, #136]	; 0x88
   3ba88:	add	sp, sp, #88	; 0x58
   3ba8c:	pop	{r4, r5, r6, pc}
   3ba90:	ldr	r3, [pc, #40]	; 3bac0 <flatcc_builder_create_vector@@Base+0x124>
   3ba94:	ldr	r2, [pc, #40]	; 3bac4 <flatcc_builder_create_vector@@Base+0x128>
   3ba98:	ldr	r1, [pc, #40]	; 3bac8 <flatcc_builder_create_vector@@Base+0x12c>
   3ba9c:	ldr	r0, [pc, #40]	; 3bacc <flatcc_builder_create_vector@@Base+0x130>
   3baa0:	bl	14038 <__assert_fail@plt>
   3baa4:	ldr	r3, [pc, #36]	; 3bad0 <flatcc_builder_create_vector@@Base+0x134>
   3baa8:	ldr	r2, [pc, #36]	; 3bad4 <flatcc_builder_create_vector@@Base+0x138>
   3baac:	ldr	r1, [pc, #20]	; 3bac8 <flatcc_builder_create_vector@@Base+0x12c>
   3bab0:	ldr	r0, [pc, #32]	; 3bad8 <flatcc_builder_create_vector@@Base+0x13c>
   3bab4:	bl	14038 <__assert_fail@plt>
   3bab8:	bl	14134 <__assert_fail@plt+0xfc>
   3babc:	andeq	fp, r5, r0, lsl r4
   3bac0:	strdeq	fp, [r5], -r4
   3bac4:	andeq	r0, r0, r5, asr r5
   3bac8:	andeq	fp, r5, r8, asr #21
   3bacc:	andeq	fp, r5, r0, asr #27
   3bad0:	muleq	r5, r4, r3
   3bad4:	andeq	r0, r0, fp, lsl #5
   3bad8:	andeq	sl, r4, r4, asr sp

0003badc <flatcc_builder_end_vector@@Base>:
   3badc:	ldr	r3, [r0, #32]
   3bae0:	push	{r4, r5, r6, lr}
   3bae4:	sub	sp, sp, #88	; 0x58
   3bae8:	ldrh	r2, [r3, #14]
   3baec:	cmp	r2, #4
   3baf0:	bne	3bc94 <flatcc_builder_end_vector@@Base+0x1b8>
   3baf4:	ldr	lr, [r3, #20]
   3baf8:	ldr	r2, [r3, #24]
   3bafc:	ldr	r1, [r3, #16]
   3bb00:	cmp	lr, r2
   3bb04:	mov	r4, r0
   3bb08:	ldr	r5, [r0, #16]
   3bb0c:	ldrh	r3, [r0, #130]	; 0x82
   3bb10:	bhi	3bc80 <flatcc_builder_end_vector@@Base+0x1a4>
   3bb14:	ldrh	r2, [r0, #128]	; 0x80
   3bb18:	mul	r1, r1, lr
   3bb1c:	cmp	r3, #4
   3bb20:	movcc	r3, #4
   3bb24:	ldr	ip, [r0, #136]	; 0x88
   3bb28:	cmp	r2, r3
   3bb2c:	strhcc	r3, [r0, #128]	; 0x80
   3bb30:	sub	r2, r3, #1
   3bb34:	sub	r0, ip, r1
   3bb38:	cmp	r1, #0
   3bb3c:	mov	r3, #4
   3bb40:	and	r0, r0, r2
   3bb44:	mov	r2, #1
   3bb48:	str	r3, [sp, #16]
   3bb4c:	str	r2, [sp, #20]
   3bb50:	str	r3, [sp, #28]
   3bb54:	movne	r2, #2
   3bb58:	addne	r3, r1, r3
   3bb5c:	strne	r1, [sp, #36]	; 0x24
   3bb60:	str	lr, [sp, #12]
   3bb64:	strne	r5, [sp, #32]
   3bb68:	add	lr, sp, #12
   3bb6c:	strne	r3, [sp, #16]
   3bb70:	strne	r2, [sp, #20]
   3bb74:	movne	r1, #3
   3bb78:	moveq	r1, #2
   3bb7c:	cmp	r0, #0
   3bb80:	str	lr, [sp, #24]
   3bb84:	beq	3bbb0 <flatcc_builder_end_vector@@Base+0xd4>
   3bb88:	add	r2, r2, #1
   3bb8c:	add	lr, sp, #88	; 0x58
   3bb90:	add	lr, lr, r2, lsl #3
   3bb94:	ldr	r5, [pc, #268]	; 3bca8 <flatcc_builder_end_vector@@Base+0x1cc>
   3bb98:	mov	r2, r1
   3bb9c:	add	r3, r3, r0
   3bba0:	str	r0, [lr, #-68]	; 0xffffffbc
   3bba4:	str	r3, [sp, #16]
   3bba8:	str	r1, [sp, #20]
   3bbac:	str	r5, [lr, #-72]	; 0xffffffb8
   3bbb0:	sub	r5, ip, r3
   3bbb4:	cmp	ip, r5
   3bbb8:	ble	3bc7c <flatcc_builder_end_vector@@Base+0x1a0>
   3bbbc:	ldr	r0, [r4, #36]	; 0x24
   3bbc0:	add	r1, sp, #24
   3bbc4:	str	r3, [sp]
   3bbc8:	mov	r3, r5
   3bbcc:	ldr	r6, [r4, #44]	; 0x2c
   3bbd0:	blx	r6
   3bbd4:	subs	r1, r0, #0
   3bbd8:	bne	3bc68 <flatcc_builder_end_vector@@Base+0x18c>
   3bbdc:	cmp	r5, #0
   3bbe0:	str	r5, [r4, #136]	; 0x88
   3bbe4:	beq	3bc5c <flatcc_builder_end_vector@@Base+0x180>
   3bbe8:	ldr	r2, [r4, #20]
   3bbec:	ldr	r0, [r4, #16]
   3bbf0:	bl	13f9c <memset@plt>
   3bbf4:	ldr	r3, [r4, #32]
   3bbf8:	ldr	r2, [r4, #64]	; 0x40
   3bbfc:	ldrh	lr, [r4, #130]	; 0x82
   3bc00:	ldr	ip, [r3]
   3bc04:	ldr	r1, [r3, #4]
   3bc08:	ldrh	r0, [r4, #128]	; 0x80
   3bc0c:	sub	r2, r2, ip
   3bc10:	cmp	r2, r1
   3bc14:	movcs	r2, r1
   3bc18:	cmp	r0, lr
   3bc1c:	ldr	r0, [r4, #60]	; 0x3c
   3bc20:	ldr	r6, [r3, #8]
   3bc24:	str	r2, [r4, #24]
   3bc28:	add	r2, r0, ip
   3bc2c:	str	r2, [r4, #16]
   3bc30:	str	r6, [r4, #20]
   3bc34:	ldr	r2, [r4, #156]	; 0x9c
   3bc38:	str	ip, [r4, #28]
   3bc3c:	str	r1, [r3, #4]
   3bc40:	strhcc	lr, [r4, #128]	; 0x80
   3bc44:	ldrh	r1, [r3, #12]
   3bc48:	sub	r2, r2, #1
   3bc4c:	sub	r3, r3, #36	; 0x24
   3bc50:	str	r2, [r4, #156]	; 0x9c
   3bc54:	strh	r1, [r4, #130]	; 0x82
   3bc58:	str	r3, [r4, #32]
   3bc5c:	mov	r0, r5
   3bc60:	add	sp, sp, #88	; 0x58
   3bc64:	pop	{r4, r5, r6, pc}
   3bc68:	ldr	r3, [pc, #60]	; 3bcac <flatcc_builder_end_vector@@Base+0x1d0>
   3bc6c:	ldr	r2, [pc, #60]	; 3bcb0 <flatcc_builder_end_vector@@Base+0x1d4>
   3bc70:	ldr	r1, [pc, #60]	; 3bcb4 <flatcc_builder_end_vector@@Base+0x1d8>
   3bc74:	ldr	r0, [pc, #60]	; 3bcb8 <flatcc_builder_end_vector@@Base+0x1dc>
   3bc78:	bl	14038 <__assert_fail@plt>
   3bc7c:	bl	14134 <__assert_fail@plt+0xfc>
   3bc80:	ldr	r3, [pc, #52]	; 3bcbc <flatcc_builder_end_vector@@Base+0x1e0>
   3bc84:	ldr	r2, [pc, #52]	; 3bcc0 <flatcc_builder_end_vector@@Base+0x1e4>
   3bc88:	ldr	r1, [pc, #36]	; 3bcb4 <flatcc_builder_end_vector@@Base+0x1d8>
   3bc8c:	ldr	r0, [pc, #48]	; 3bcc4 <flatcc_builder_end_vector@@Base+0x1e8>
   3bc90:	bl	14038 <__assert_fail@plt>
   3bc94:	ldr	r3, [pc, #44]	; 3bcc8 <flatcc_builder_end_vector@@Base+0x1ec>
   3bc98:	ldr	r2, [pc, #44]	; 3bccc <flatcc_builder_end_vector@@Base+0x1f0>
   3bc9c:	ldr	r1, [pc, #16]	; 3bcb4 <flatcc_builder_end_vector@@Base+0x1d8>
   3bca0:	ldr	r0, [pc, #40]	; 3bcd0 <flatcc_builder_end_vector@@Base+0x1f4>
   3bca4:	bl	14038 <__assert_fail@plt>
   3bca8:	andeq	fp, r5, r0, lsl r4
   3bcac:	muleq	r5, r4, r3
   3bcb0:	andeq	r0, r0, fp, lsl #5
   3bcb4:	andeq	fp, r5, r8, asr #21
   3bcb8:	andeq	sl, r4, r4, asr sp
   3bcbc:	strdeq	fp, [r5], -r4
   3bcc0:	andeq	r0, r0, r5, asr r5
   3bcc4:	andeq	fp, r5, r0, asr #27
   3bcc8:	andeq	fp, r5, r4, lsl r9
   3bccc:	andeq	r0, r0, r8, ror r5
   3bcd0:	andeq	fp, r5, r4, lsr ip

0003bcd4 <flatcc_builder_vector_count@@Base>:
   3bcd4:	ldr	r3, [r0, #32]
   3bcd8:	ldr	r0, [r3, #20]
   3bcdc:	bx	lr

0003bce0 <flatcc_builder_vector_edit@@Base>:
   3bce0:	ldr	r0, [r0, #16]
   3bce4:	bx	lr

0003bce8 <flatcc_builder_create_offset_vector_direct@@Base>:
   3bce8:	cmn	r2, #-1073741823	; 0xc0000001
   3bcec:	bls	3bcf8 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
   3bcf0:	mov	r0, #0
   3bcf4:	bx	lr
   3bcf8:	b	384bc <flatcc_builder_default_alloc@@Base+0x2fc>

0003bcfc <flatcc_builder_end_offset_vector@@Base>:
   3bcfc:	ldr	r3, [r0, #32]
   3bd00:	push	{r4, r5, r6, lr}
   3bd04:	ldrh	r2, [r3, #14]
   3bd08:	cmp	r2, #5
   3bd0c:	bne	3bdbc <flatcc_builder_end_offset_vector@@Base+0xc0>
   3bd10:	ldr	r2, [r3, #20]
   3bd14:	cmn	r2, #-1073741823	; 0xc0000001
   3bd18:	bls	3bd28 <flatcc_builder_end_offset_vector@@Base+0x2c>
   3bd1c:	mov	r5, #0
   3bd20:	mov	r0, r5
   3bd24:	pop	{r4, r5, r6, pc}
   3bd28:	ldr	r1, [r0, #16]
   3bd2c:	mov	r4, r0
   3bd30:	bl	384bc <flatcc_builder_default_alloc@@Base+0x2fc>
   3bd34:	subs	r5, r0, #0
   3bd38:	beq	3bd1c <flatcc_builder_end_offset_vector@@Base+0x20>
   3bd3c:	ldr	r2, [r4, #20]
   3bd40:	mov	r1, #0
   3bd44:	ldr	r0, [r4, #16]
   3bd48:	bl	13f9c <memset@plt>
   3bd4c:	ldr	r3, [r4, #32]
   3bd50:	ldr	r2, [r4, #64]	; 0x40
   3bd54:	ldrh	lr, [r4, #130]	; 0x82
   3bd58:	ldr	ip, [r3]
   3bd5c:	ldr	r1, [r3, #4]
   3bd60:	ldrh	r0, [r4, #128]	; 0x80
   3bd64:	sub	r2, r2, ip
   3bd68:	cmp	r2, r1
   3bd6c:	movcs	r2, r1
   3bd70:	cmp	r0, lr
   3bd74:	ldr	r0, [r4, #60]	; 0x3c
   3bd78:	ldr	r6, [r3, #8]
   3bd7c:	str	r2, [r4, #24]
   3bd80:	add	r2, r0, ip
   3bd84:	str	r2, [r4, #16]
   3bd88:	str	r6, [r4, #20]
   3bd8c:	ldr	r2, [r4, #156]	; 0x9c
   3bd90:	str	ip, [r4, #28]
   3bd94:	str	r1, [r3, #4]
   3bd98:	strhcc	lr, [r4, #128]	; 0x80
   3bd9c:	ldrh	r1, [r3, #12]
   3bda0:	sub	r2, r2, #1
   3bda4:	sub	r3, r3, #36	; 0x24
   3bda8:	str	r2, [r4, #156]	; 0x9c
   3bdac:	strh	r1, [r4, #130]	; 0x82
   3bdb0:	str	r3, [r4, #32]
   3bdb4:	mov	r0, r5
   3bdb8:	pop	{r4, r5, r6, pc}
   3bdbc:	ldr	r3, [pc, #12]	; 3bdd0 <flatcc_builder_end_offset_vector@@Base+0xd4>
   3bdc0:	ldr	r2, [pc, #12]	; 3bdd4 <flatcc_builder_end_offset_vector@@Base+0xd8>
   3bdc4:	ldr	r1, [pc, #12]	; 3bdd8 <flatcc_builder_end_offset_vector@@Base+0xdc>
   3bdc8:	ldr	r0, [pc, #12]	; 3bddc <flatcc_builder_end_offset_vector@@Base+0xe0>
   3bdcc:	bl	14038 <__assert_fail@plt>
   3bdd0:	andeq	fp, r5, r4, lsl #16
   3bdd4:	andeq	r0, r0, r8, asr #11
   3bdd8:	andeq	fp, r5, r8, asr #21
   3bddc:	andeq	fp, r5, r0, lsr #25

0003bde0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   3bde0:	ldr	r2, [r0, #32]
   3bde4:	push	{r4, r5, r6, lr}
   3bde8:	ldrh	ip, [r2, #14]
   3bdec:	cmp	ip, #5
   3bdf0:	bne	3bea4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xc4>
   3bdf4:	ldr	r2, [r2, #20]
   3bdf8:	cmn	r2, #-1073741823	; 0xc0000001
   3bdfc:	bls	3be0c <flatcc_builder_end_offset_vector_for_unions@@Base+0x2c>
   3be00:	mov	r5, #0
   3be04:	mov	r0, r5
   3be08:	pop	{r4, r5, r6, pc}
   3be0c:	mov	r3, r1
   3be10:	ldr	r1, [r0, #16]
   3be14:	mov	r4, r0
   3be18:	bl	382cc <flatcc_builder_default_alloc@@Base+0x10c>
   3be1c:	subs	r5, r0, #0
   3be20:	beq	3be00 <flatcc_builder_end_offset_vector_for_unions@@Base+0x20>
   3be24:	ldr	r2, [r4, #20]
   3be28:	mov	r1, #0
   3be2c:	ldr	r0, [r4, #16]
   3be30:	bl	13f9c <memset@plt>
   3be34:	ldr	r3, [r4, #32]
   3be38:	ldr	r2, [r4, #64]	; 0x40
   3be3c:	ldrh	lr, [r4, #130]	; 0x82
   3be40:	ldr	ip, [r3]
   3be44:	ldr	r1, [r3, #4]
   3be48:	ldrh	r0, [r4, #128]	; 0x80
   3be4c:	sub	r2, r2, ip
   3be50:	cmp	r2, r1
   3be54:	movcs	r2, r1
   3be58:	cmp	r0, lr
   3be5c:	ldr	r0, [r4, #60]	; 0x3c
   3be60:	ldr	r6, [r3, #8]
   3be64:	str	r2, [r4, #24]
   3be68:	add	r2, r0, ip
   3be6c:	str	r2, [r4, #16]
   3be70:	str	r6, [r4, #20]
   3be74:	ldr	r2, [r4, #156]	; 0x9c
   3be78:	str	ip, [r4, #28]
   3be7c:	str	r1, [r3, #4]
   3be80:	strhcc	lr, [r4, #128]	; 0x80
   3be84:	ldrh	r1, [r3, #12]
   3be88:	sub	r2, r2, #1
   3be8c:	sub	r3, r3, #36	; 0x24
   3be90:	str	r2, [r4, #156]	; 0x9c
   3be94:	strh	r1, [r4, #130]	; 0x82
   3be98:	str	r3, [r4, #32]
   3be9c:	mov	r0, r5
   3bea0:	pop	{r4, r5, r6, pc}
   3bea4:	ldr	r3, [pc, #12]	; 3beb8 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd8>
   3bea8:	ldr	r2, [pc, #12]	; 3bebc <flatcc_builder_end_offset_vector_for_unions@@Base+0xdc>
   3beac:	ldr	r1, [pc, #12]	; 3bec0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xe0>
   3beb0:	ldr	r0, [pc, #12]	; 3bec4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xe4>
   3beb4:	bl	14038 <__assert_fail@plt>
   3beb8:	andeq	fp, r5, r0, lsr r9
   3bebc:	ldrdeq	r0, [r0], -r5
   3bec0:	andeq	fp, r5, r8, asr #21
   3bec4:	andeq	fp, r5, r0, lsr #25

0003bec8 <flatcc_builder_offset_vector_edit@@Base>:
   3bec8:	ldr	r0, [r0, #16]
   3becc:	bx	lr

0003bed0 <flatcc_builder_offset_vector_count@@Base>:
   3bed0:	ldr	r3, [r0, #32]
   3bed4:	ldr	r0, [r3, #20]
   3bed8:	bx	lr

0003bedc <flatcc_builder_create_union_vector@@Base>:
   3bedc:	push	{r4, r5, r6, r7, r8, r9, lr}
   3bee0:	mov	r6, r0
   3bee4:	ldr	r0, [r1, #156]	; 0x9c
   3bee8:	ldr	ip, [r1, #160]	; 0xa0
   3beec:	mov	r4, r1
   3bef0:	add	r1, r0, #1
   3bef4:	cmp	r1, ip
   3bef8:	sub	sp, sp, #12
   3befc:	mov	r5, r2
   3bf00:	mov	r7, r3
   3bf04:	str	r1, [r4, #156]	; 0x9c
   3bf08:	ble	3bf90 <flatcc_builder_create_union_vector@@Base+0xb4>
   3bf0c:	ldr	r3, [r4, #176]	; 0xb0
   3bf10:	cmp	r1, r3
   3bf14:	cmpgt	r3, #0
   3bf18:	movgt	r3, #1
   3bf1c:	movle	r3, #0
   3bf20:	bgt	3bf78 <flatcc_builder_create_union_vector@@Base+0x9c>
   3bf24:	add	r0, r0, r0, lsl #3
   3bf28:	ldr	r1, [r4, #88]	; 0x58
   3bf2c:	lsl	r8, r0, #2
   3bf30:	add	r2, r8, #36	; 0x24
   3bf34:	cmp	r2, r1
   3bf38:	bhi	3c1ac <flatcc_builder_create_union_vector@@Base+0x2d0>
   3bf3c:	ldr	r3, [r4, #84]	; 0x54
   3bf40:	add	r3, r3, r8
   3bf44:	cmp	r3, #0
   3bf48:	str	r3, [r4, #32]
   3bf4c:	beq	3bf78 <flatcc_builder_create_union_vector@@Base+0x9c>
   3bf50:	ldr	r2, [r4, #88]	; 0x58
   3bf54:	ldr	r0, [pc, #732]	; 3c238 <flatcc_builder_create_union_vector@@Base+0x35c>
   3bf58:	ldr	r1, [r4, #176]	; 0xb0
   3bf5c:	umull	r0, r2, r0, r2
   3bf60:	lsr	r2, r2, #3
   3bf64:	cmp	r1, #0
   3bf68:	cmpgt	r2, r1
   3bf6c:	str	r2, [r4, #160]	; 0xa0
   3bf70:	strgt	r1, [r4, #160]	; 0xa0
   3bf74:	b	3bf9c <flatcc_builder_create_union_vector@@Base+0xc0>
   3bf78:	mov	r3, #0
   3bf7c:	mov	r0, r6
   3bf80:	str	r3, [r6]
   3bf84:	str	r3, [r6, #4]
   3bf88:	add	sp, sp, #12
   3bf8c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3bf90:	ldr	r3, [r4, #32]
   3bf94:	add	r3, r3, #36	; 0x24
   3bf98:	str	r3, [r4, #32]
   3bf9c:	ldr	r1, [r4, #20]
   3bfa0:	ldr	ip, [r4, #28]
   3bfa4:	ldrh	r8, [r4, #130]	; 0x82
   3bfa8:	add	r2, r1, ip
   3bfac:	mvn	lr, #3
   3bfb0:	add	r2, r2, #7
   3bfb4:	str	r1, [r3, #8]
   3bfb8:	bic	r2, r2, #7
   3bfbc:	mov	r0, #4
   3bfc0:	mov	r1, #0
   3bfc4:	strh	r8, [r3, #12]
   3bfc8:	strh	r0, [r4, #130]	; 0x82
   3bfcc:	stm	r3, {ip, lr}
   3bfd0:	str	r1, [r4, #20]
   3bfd4:	str	r2, [r4, #28]
   3bfd8:	str	r0, [r3, #16]
   3bfdc:	str	r1, [r3, #20]
   3bfe0:	ldr	r0, [r4, #64]	; 0x40
   3bfe4:	ldr	r1, [r4, #60]	; 0x3c
   3bfe8:	sub	r0, r0, r2
   3bfec:	cmp	r0, lr
   3bff0:	mov	ip, #5
   3bff4:	strh	ip, [r3, #14]
   3bff8:	add	r1, r1, r2
   3bffc:	strls	r0, [r4, #24]
   3c000:	strhi	lr, [r4, #24]
   3c004:	movhi	r0, lr
   3c008:	mvn	r8, #3
   3c00c:	cmn	r7, #-1073741823	; 0xc0000001
   3c010:	str	r1, [r4, #16]
   3c014:	str	r8, [r3, #4]
   3c018:	bhi	3c22c <flatcc_builder_create_union_vector@@Base+0x350>
   3c01c:	lsl	ip, r7, #2
   3c020:	cmp	ip, r0
   3c024:	str	r7, [r3, #20]
   3c028:	str	ip, [r4, #20]
   3c02c:	bcs	3c154 <flatcc_builder_create_union_vector@@Base+0x278>
   3c030:	cmp	r1, #0
   3c034:	beq	3bf78 <flatcc_builder_create_union_vector@@Base+0x9c>
   3c038:	ldr	r8, [r4, #20]
   3c03c:	ldr	r0, [r4, #24]
   3c040:	add	r3, r7, r8
   3c044:	cmp	r3, r0
   3c048:	str	r3, [r4, #20]
   3c04c:	bcs	3c1d0 <flatcc_builder_create_union_vector@@Base+0x2f4>
   3c050:	adds	r8, r1, r8
   3c054:	beq	3bf78 <flatcc_builder_create_union_vector@@Base+0x9c>
   3c058:	cmp	r7, #0
   3c05c:	movne	r2, r5
   3c060:	addne	lr, r2, r7, lsl #3
   3c064:	subne	r0, r8, #1
   3c068:	subne	r3, r1, #4
   3c06c:	beq	3c08c <flatcc_builder_create_union_vector@@Base+0x1b0>
   3c070:	ldrb	ip, [r2]
   3c074:	add	r2, r2, #8
   3c078:	strb	ip, [r0, #1]!
   3c07c:	ldr	ip, [r2, #-4]
   3c080:	cmp	lr, r2
   3c084:	str	ip, [r3, #4]!
   3c088:	bne	3c070 <flatcc_builder_create_union_vector@@Base+0x194>
   3c08c:	mov	r3, r8
   3c090:	mov	r2, r7
   3c094:	mov	r0, r4
   3c098:	bl	382cc <flatcc_builder_default_alloc@@Base+0x10c>
   3c09c:	subs	r5, r0, #0
   3c0a0:	beq	3c230 <flatcc_builder_create_union_vector@@Base+0x354>
   3c0a4:	mvn	r0, #0
   3c0a8:	mov	r3, #1
   3c0ac:	mov	r2, r7
   3c0b0:	str	r0, [sp, #4]
   3c0b4:	mov	r1, r8
   3c0b8:	str	r3, [sp]
   3c0bc:	mov	r0, r4
   3c0c0:	bl	3b99c <flatcc_builder_create_vector@@Base>
   3c0c4:	mov	r7, r0
   3c0c8:	ldr	r2, [r4, #20]
   3c0cc:	mov	r1, #0
   3c0d0:	ldr	r0, [r4, #16]
   3c0d4:	bl	13f9c <memset@plt>
   3c0d8:	ldr	r3, [r4, #32]
   3c0dc:	ldr	r2, [r4, #64]	; 0x40
   3c0e0:	ldrh	lr, [r4, #130]	; 0x82
   3c0e4:	ldr	ip, [r3]
   3c0e8:	ldr	r1, [r3, #4]
   3c0ec:	ldrh	r0, [r4, #128]	; 0x80
   3c0f0:	sub	r2, r2, ip
   3c0f4:	cmp	r2, r1
   3c0f8:	movcs	r2, r1
   3c0fc:	cmp	r0, lr
   3c100:	ldr	r0, [r4, #60]	; 0x3c
   3c104:	ldr	r8, [r3, #8]
   3c108:	str	r2, [r4, #24]
   3c10c:	add	r2, r0, ip
   3c110:	str	r2, [r4, #16]
   3c114:	str	r8, [r4, #20]
   3c118:	ldr	r2, [r4, #156]	; 0x9c
   3c11c:	str	ip, [r4, #28]
   3c120:	str	r1, [r3, #4]
   3c124:	strhcc	lr, [r4, #128]	; 0x80
   3c128:	ldrh	r1, [r3, #12]
   3c12c:	sub	r2, r2, #1
   3c130:	sub	r3, r3, #36	; 0x24
   3c134:	mov	r0, r6
   3c138:	str	r7, [r6]
   3c13c:	str	r5, [r6, #4]
   3c140:	str	r2, [r4, #156]	; 0x9c
   3c144:	strh	r1, [r4, #130]	; 0x82
   3c148:	str	r3, [r4, #32]
   3c14c:	add	sp, sp, #12
   3c150:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3c154:	add	ip, ip, #1
   3c158:	mov	r3, #1
   3c15c:	ldr	r0, [r4, #40]	; 0x28
   3c160:	add	r2, ip, r2
   3c164:	str	r3, [sp]
   3c168:	add	r1, r4, #60	; 0x3c
   3c16c:	ldr	r9, [r4, #48]	; 0x30
   3c170:	blx	r9
   3c174:	cmp	r0, #0
   3c178:	bne	3bf78 <flatcc_builder_create_union_vector@@Base+0x9c>
   3c17c:	ldr	r2, [r4, #28]
   3c180:	ldr	r3, [r4, #64]	; 0x40
   3c184:	ldr	r1, [r4, #60]	; 0x3c
   3c188:	sub	r3, r3, r2
   3c18c:	ldr	r0, [r4, #32]
   3c190:	cmn	r3, #4
   3c194:	movhi	r3, r8
   3c198:	add	r1, r1, r2
   3c19c:	str	r3, [r4, #24]
   3c1a0:	str	r1, [r4, #16]
   3c1a4:	str	r8, [r0, #4]
   3c1a8:	b	3c030 <flatcc_builder_create_union_vector@@Base+0x154>
   3c1ac:	mov	r1, #4
   3c1b0:	ldr	r0, [r4, #40]	; 0x28
   3c1b4:	str	r1, [sp]
   3c1b8:	add	r1, r4, #84	; 0x54
   3c1bc:	ldr	r9, [r4, #48]	; 0x30
   3c1c0:	blx	r9
   3c1c4:	cmp	r0, #0
   3c1c8:	beq	3bf3c <flatcc_builder_create_union_vector@@Base+0x60>
   3c1cc:	bl	140e8 <__assert_fail@plt+0xb0>
   3c1d0:	add	r1, r3, #1
   3c1d4:	mov	r3, #1
   3c1d8:	ldr	r0, [r4, #40]	; 0x28
   3c1dc:	add	r2, r1, r2
   3c1e0:	str	r3, [sp]
   3c1e4:	add	r1, r4, #60	; 0x3c
   3c1e8:	ldr	r9, [r4, #48]	; 0x30
   3c1ec:	blx	r9
   3c1f0:	cmp	r0, #0
   3c1f4:	bne	3bf78 <flatcc_builder_create_union_vector@@Base+0x9c>
   3c1f8:	ldr	r2, [r4, #28]
   3c1fc:	ldr	r3, [r4, #64]	; 0x40
   3c200:	ldr	r1, [r4, #60]	; 0x3c
   3c204:	sub	r3, r3, r2
   3c208:	cmn	r3, #4
   3c20c:	mvnhi	r3, #3
   3c210:	str	r3, [r4, #24]
   3c214:	ldr	r3, [r4, #32]
   3c218:	add	r1, r1, r2
   3c21c:	mvn	r2, #3
   3c220:	str	r1, [r4, #16]
   3c224:	str	r2, [r3, #4]
   3c228:	b	3c050 <flatcc_builder_create_union_vector@@Base+0x174>
   3c22c:	bl	1415c <__assert_fail@plt+0x124>
   3c230:	mov	r7, r5
   3c234:	b	3c0c8 <flatcc_builder_create_union_vector@@Base+0x1ec>
   3c238:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^

0003c23c <flatcc_builder_create_union_vector_direct@@Base>:
   3c23c:	push	{r4, r5, r6, r7, r8, lr}
   3c240:	sub	sp, sp, #88	; 0x58
   3c244:	mov	r4, r0
   3c248:	ldr	r5, [sp, #112]	; 0x70
   3c24c:	cmn	r5, #-1073741823	; 0xc0000001
   3c250:	bls	3c26c <flatcc_builder_create_union_vector_direct@@Base+0x30>
   3c254:	mov	r3, #0
   3c258:	mov	r0, r4
   3c25c:	str	r3, [r4]
   3c260:	str	r3, [r4, #4]
   3c264:	add	sp, sp, #88	; 0x58
   3c268:	pop	{r4, r5, r6, r7, r8, pc}
   3c26c:	mov	r6, r1
   3c270:	mov	r8, r2
   3c274:	mov	r1, r3
   3c278:	mov	r0, r6
   3c27c:	mov	r3, r2
   3c280:	mov	r2, r5
   3c284:	bl	382cc <flatcc_builder_default_alloc@@Base+0x10c>
   3c288:	subs	r7, r0, #0
   3c28c:	beq	3c254 <flatcc_builder_create_union_vector_direct@@Base+0x18>
   3c290:	ldrh	r3, [r6, #128]	; 0x80
   3c294:	ldr	r0, [r6, #136]	; 0x88
   3c298:	mov	r2, #1
   3c29c:	cmp	r3, #3
   3c2a0:	movls	r3, #4
   3c2a4:	strhls	r3, [r6, #128]	; 0x80
   3c2a8:	sub	r1, r0, r5
   3c2ac:	cmp	r5, #0
   3c2b0:	mov	r3, #4
   3c2b4:	add	ip, sp, #12
   3c2b8:	str	r3, [sp, #16]
   3c2bc:	str	r2, [sp, #20]
   3c2c0:	and	r1, r1, #3
   3c2c4:	movne	r2, #2
   3c2c8:	str	r3, [sp, #28]
   3c2cc:	addne	r3, r5, r3
   3c2d0:	str	ip, [sp, #24]
   3c2d4:	strne	r8, [sp, #32]
   3c2d8:	strne	r5, [sp, #36]	; 0x24
   3c2dc:	strne	r3, [sp, #16]
   3c2e0:	strne	r2, [sp, #20]
   3c2e4:	movne	ip, #3
   3c2e8:	moveq	ip, #2
   3c2ec:	cmp	r1, #0
   3c2f0:	str	r5, [sp, #12]
   3c2f4:	beq	3c320 <flatcc_builder_create_union_vector_direct@@Base+0xe4>
   3c2f8:	add	r2, r2, #1
   3c2fc:	add	lr, sp, #88	; 0x58
   3c300:	add	lr, lr, r2, lsl #3
   3c304:	ldr	r5, [pc, #108]	; 3c378 <flatcc_builder_create_union_vector_direct@@Base+0x13c>
   3c308:	mov	r2, ip
   3c30c:	add	r3, r3, r1
   3c310:	str	r1, [lr, #-68]	; 0xffffffbc
   3c314:	str	r3, [sp, #16]
   3c318:	str	ip, [sp, #20]
   3c31c:	str	r5, [lr, #-72]	; 0xffffffb8
   3c320:	sub	r5, r0, r3
   3c324:	cmp	r0, r5
   3c328:	ble	3c360 <flatcc_builder_create_union_vector_direct@@Base+0x124>
   3c32c:	ldr	r0, [r6, #36]	; 0x24
   3c330:	add	r1, sp, #24
   3c334:	str	r3, [sp]
   3c338:	mov	r3, r5
   3c33c:	ldr	r8, [r6, #44]	; 0x2c
   3c340:	blx	r8
   3c344:	cmp	r0, #0
   3c348:	bne	3c364 <flatcc_builder_create_union_vector_direct@@Base+0x128>
   3c34c:	mov	r0, r4
   3c350:	str	r5, [r6, #136]	; 0x88
   3c354:	stm	r4, {r5, r7}
   3c358:	add	sp, sp, #88	; 0x58
   3c35c:	pop	{r4, r5, r6, r7, r8, pc}
   3c360:	bl	14134 <__assert_fail@plt+0xfc>
   3c364:	ldr	r3, [pc, #16]	; 3c37c <flatcc_builder_create_union_vector_direct@@Base+0x140>
   3c368:	ldr	r2, [pc, #16]	; 3c380 <flatcc_builder_create_union_vector_direct@@Base+0x144>
   3c36c:	ldr	r1, [pc, #16]	; 3c384 <flatcc_builder_create_union_vector_direct@@Base+0x148>
   3c370:	ldr	r0, [pc, #16]	; 3c388 <flatcc_builder_create_union_vector_direct@@Base+0x14c>
   3c374:	bl	14038 <__assert_fail@plt>
   3c378:	andeq	fp, r5, r0, lsl r4
   3c37c:	muleq	r5, r4, r3
   3c380:	andeq	r0, r0, fp, lsl #5
   3c384:	andeq	fp, r5, r8, asr #21
   3c388:	andeq	sl, r4, r4, asr sp

0003c38c <flatcc_builder_start_union_vector@@Base>:
   3c38c:	ldr	r1, [r0, #156]	; 0x9c
   3c390:	ldr	r3, [r0, #160]	; 0xa0
   3c394:	add	r2, r1, #1
   3c398:	cmp	r2, r3
   3c39c:	push	{r4, r5, r6, lr}
   3c3a0:	mov	r4, r0
   3c3a4:	sub	sp, sp, #8
   3c3a8:	str	r2, [r0, #156]	; 0x9c
   3c3ac:	ble	3c41c <flatcc_builder_start_union_vector@@Base+0x90>
   3c3b0:	ldr	r3, [r0, #176]	; 0xb0
   3c3b4:	cmp	r3, #0
   3c3b8:	cmpgt	r2, r3
   3c3bc:	movgt	r3, #1
   3c3c0:	movle	r3, #0
   3c3c4:	bgt	3c4c8 <flatcc_builder_start_union_vector@@Base+0x13c>
   3c3c8:	add	r1, r1, r1, lsl #3
   3c3cc:	ldr	r0, [r0, #88]	; 0x58
   3c3d0:	lsl	r5, r1, #2
   3c3d4:	add	r2, r5, #36	; 0x24
   3c3d8:	cmp	r2, r0
   3c3dc:	bhi	3c4a4 <flatcc_builder_start_union_vector@@Base+0x118>
   3c3e0:	ldr	r3, [r4, #84]	; 0x54
   3c3e4:	add	r3, r3, r5
   3c3e8:	cmp	r3, #0
   3c3ec:	str	r3, [r4, #32]
   3c3f0:	beq	3c4c8 <flatcc_builder_start_union_vector@@Base+0x13c>
   3c3f4:	ldr	r2, [r4, #88]	; 0x58
   3c3f8:	ldr	r0, [pc, #208]	; 3c4d0 <flatcc_builder_start_union_vector@@Base+0x144>
   3c3fc:	ldr	r1, [r4, #176]	; 0xb0
   3c400:	umull	r0, r2, r0, r2
   3c404:	lsr	r2, r2, #3
   3c408:	cmp	r1, #0
   3c40c:	cmpgt	r2, r1
   3c410:	str	r2, [r4, #160]	; 0xa0
   3c414:	strgt	r1, [r4, #160]	; 0xa0
   3c418:	b	3c428 <flatcc_builder_start_union_vector@@Base+0x9c>
   3c41c:	ldr	r3, [r0, #32]
   3c420:	add	r3, r3, #36	; 0x24
   3c424:	str	r3, [r0, #32]
   3c428:	ldr	ip, [r4, #20]
   3c42c:	ldr	r1, [r4, #28]
   3c430:	ldrh	r5, [r4, #130]	; 0x82
   3c434:	add	r2, ip, r1
   3c438:	add	r2, r2, #7
   3c43c:	str	ip, [r3, #8]
   3c440:	bic	r2, r2, #7
   3c444:	mov	lr, #4
   3c448:	mov	r0, #0
   3c44c:	mov	ip, #8
   3c450:	strh	r5, [r3, #12]
   3c454:	strh	lr, [r4, #130]	; 0x82
   3c458:	str	r1, [r3]
   3c45c:	str	r2, [r4, #28]
   3c460:	str	r0, [r4, #20]
   3c464:	str	r0, [r3, #20]
   3c468:	str	ip, [r3, #16]
   3c46c:	ldr	r1, [r4, #64]	; 0x40
   3c470:	ldr	ip, [r4, #60]	; 0x3c
   3c474:	sub	r1, r1, r2
   3c478:	mvn	lr, #3
   3c47c:	cmp	r1, lr
   3c480:	add	r2, ip, r2
   3c484:	movhi	r1, lr
   3c488:	mov	ip, #7
   3c48c:	strh	ip, [r3, #14]
   3c490:	str	r2, [r4, #16]
   3c494:	str	r1, [r4, #24]
   3c498:	str	lr, [r3, #4]
   3c49c:	add	sp, sp, #8
   3c4a0:	pop	{r4, r5, r6, pc}
   3c4a4:	mov	r1, #4
   3c4a8:	ldr	r0, [r4, #40]	; 0x28
   3c4ac:	str	r1, [sp]
   3c4b0:	add	r1, r4, #84	; 0x54
   3c4b4:	ldr	r6, [r4, #48]	; 0x30
   3c4b8:	blx	r6
   3c4bc:	cmp	r0, #0
   3c4c0:	beq	3c3e0 <flatcc_builder_start_union_vector@@Base+0x54>
   3c4c4:	bl	140e8 <__assert_fail@plt+0xb0>
   3c4c8:	mvn	r0, #0
   3c4cc:	b	3c49c <flatcc_builder_start_union_vector@@Base+0x110>
   3c4d0:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^

0003c4d4 <flatcc_builder_end_union_vector@@Base>:
   3c4d4:	ldr	r3, [r1, #32]
   3c4d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   3c4dc:	sub	sp, sp, #12
   3c4e0:	ldrh	r2, [r3, #14]
   3c4e4:	cmp	r2, #7
   3c4e8:	bne	3c6a8 <flatcc_builder_end_union_vector@@Base+0x1d4>
   3c4ec:	ldr	r5, [r3, #20]
   3c4f0:	ldr	r8, [r1, #20]
   3c4f4:	ldr	r3, [r1, #24]
   3c4f8:	lsl	r7, r5, #2
   3c4fc:	add	r2, r7, r5
   3c500:	add	r2, r2, r8
   3c504:	cmp	r2, r3
   3c508:	mov	r4, r1
   3c50c:	mov	r6, r0
   3c510:	str	r2, [r1, #20]
   3c514:	bcs	3c5f0 <flatcc_builder_end_union_vector@@Base+0x11c>
   3c518:	ldr	r3, [r1, #16]
   3c51c:	adds	r1, r3, r8
   3c520:	beq	3c690 <flatcc_builder_end_union_vector@@Base+0x1bc>
   3c524:	cmp	r5, #0
   3c528:	add	r7, r1, r7
   3c52c:	addne	lr, r3, r5, lsl #3
   3c530:	subne	r0, r7, #1
   3c534:	subne	r2, r1, #4
   3c538:	beq	3c650 <flatcc_builder_end_union_vector@@Base+0x17c>
   3c53c:	ldrb	ip, [r3]
   3c540:	add	r3, r3, #8
   3c544:	strb	ip, [r0, #1]!
   3c548:	ldr	ip, [r3, #-4]
   3c54c:	cmp	lr, r3
   3c550:	str	ip, [r2, #4]!
   3c554:	bne	3c53c <flatcc_builder_end_union_vector@@Base+0x68>
   3c558:	cmn	r5, #-1073741823	; 0xc0000001
   3c55c:	bls	3c650 <flatcc_builder_end_union_vector@@Base+0x17c>
   3c560:	mov	r8, #0
   3c564:	mov	r5, r8
   3c568:	ldr	r2, [r4, #20]
   3c56c:	mov	r1, #0
   3c570:	ldr	r0, [r4, #16]
   3c574:	bl	13f9c <memset@plt>
   3c578:	ldr	r3, [r4, #32]
   3c57c:	ldr	r2, [r4, #64]	; 0x40
   3c580:	ldrh	lr, [r4, #130]	; 0x82
   3c584:	ldr	ip, [r3]
   3c588:	ldr	r1, [r3, #4]
   3c58c:	ldrh	r0, [r4, #128]	; 0x80
   3c590:	sub	r2, r2, ip
   3c594:	cmp	r2, r1
   3c598:	movcs	r2, r1
   3c59c:	cmp	r0, lr
   3c5a0:	ldr	r0, [r4, #60]	; 0x3c
   3c5a4:	ldr	r7, [r3, #8]
   3c5a8:	str	r2, [r4, #24]
   3c5ac:	add	r2, r0, ip
   3c5b0:	str	r2, [r4, #16]
   3c5b4:	str	r7, [r4, #20]
   3c5b8:	ldr	r2, [r4, #156]	; 0x9c
   3c5bc:	str	ip, [r4, #28]
   3c5c0:	str	r1, [r3, #4]
   3c5c4:	strhcc	lr, [r4, #128]	; 0x80
   3c5c8:	ldrh	r1, [r3, #12]
   3c5cc:	sub	r2, r2, #1
   3c5d0:	sub	r3, r3, #36	; 0x24
   3c5d4:	mov	r0, r6
   3c5d8:	stm	r6, {r5, r8}
   3c5dc:	str	r2, [r4, #156]	; 0x9c
   3c5e0:	strh	r1, [r4, #130]	; 0x82
   3c5e4:	str	r3, [r4, #32]
   3c5e8:	add	sp, sp, #12
   3c5ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3c5f0:	ldr	r1, [r1, #28]
   3c5f4:	mov	r3, #1
   3c5f8:	add	r1, r1, #1
   3c5fc:	ldr	r0, [r4, #40]	; 0x28
   3c600:	add	r2, r1, r2
   3c604:	str	r3, [sp]
   3c608:	add	r1, r4, #60	; 0x3c
   3c60c:	ldr	r9, [r4, #48]	; 0x30
   3c610:	blx	r9
   3c614:	cmp	r0, #0
   3c618:	bne	3c690 <flatcc_builder_end_union_vector@@Base+0x1bc>
   3c61c:	ldr	r1, [r4, #28]
   3c620:	ldr	r2, [r4, #64]	; 0x40
   3c624:	ldr	r3, [r4, #60]	; 0x3c
   3c628:	sub	r2, r2, r1
   3c62c:	cmn	r2, #4
   3c630:	mvnhi	r2, #3
   3c634:	str	r2, [r4, #24]
   3c638:	ldr	r2, [r4, #32]
   3c63c:	add	r3, r3, r1
   3c640:	mvn	r1, #3
   3c644:	str	r3, [r4, #16]
   3c648:	str	r1, [r2, #4]
   3c64c:	b	3c51c <flatcc_builder_end_union_vector@@Base+0x48>
   3c650:	mov	r3, r7
   3c654:	mov	r2, r5
   3c658:	mov	r0, r4
   3c65c:	bl	382cc <flatcc_builder_default_alloc@@Base+0x10c>
   3c660:	subs	r8, r0, #0
   3c664:	beq	3c560 <flatcc_builder_end_union_vector@@Base+0x8c>
   3c668:	mvn	r0, #0
   3c66c:	mov	r3, #1
   3c670:	mov	r2, r5
   3c674:	str	r0, [sp, #4]
   3c678:	mov	r1, r7
   3c67c:	str	r3, [sp]
   3c680:	mov	r0, r4
   3c684:	bl	3b99c <flatcc_builder_create_vector@@Base>
   3c688:	mov	r5, r0
   3c68c:	b	3c568 <flatcc_builder_end_union_vector@@Base+0x94>
   3c690:	mov	r3, #0
   3c694:	mov	r0, r6
   3c698:	str	r3, [r6]
   3c69c:	str	r3, [r6, #4]
   3c6a0:	add	sp, sp, #12
   3c6a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3c6a8:	ldr	r3, [pc, #12]	; 3c6bc <flatcc_builder_end_union_vector@@Base+0x1e8>
   3c6ac:	ldr	r2, [pc, #12]	; 3c6c0 <flatcc_builder_end_union_vector@@Base+0x1ec>
   3c6b0:	ldr	r1, [pc, #12]	; 3c6c4 <flatcc_builder_end_union_vector@@Base+0x1f0>
   3c6b4:	ldr	r0, [pc, #12]	; 3c6c8 <flatcc_builder_end_union_vector@@Base+0x1f4>
   3c6b8:	bl	14038 <__assert_fail@plt>
   3c6bc:	andeq	fp, r5, ip, asr r9
   3c6c0:	andeq	r0, r0, r1, asr r6
   3c6c4:	andeq	fp, r5, r8, asr #21
   3c6c8:	ldrdeq	fp, [r5], -r4

0003c6cc <flatcc_builder_union_vector_edit@@Base>:
   3c6cc:	ldr	r0, [r0, #16]
   3c6d0:	bx	lr

0003c6d4 <flatcc_builder_union_vector_count@@Base>:
   3c6d4:	ldr	r3, [r0, #32]
   3c6d8:	ldr	r0, [r3, #20]
   3c6dc:	bx	lr

0003c6e0 <flatcc_builder_extend_union_vector@@Base>:
   3c6e0:	ldr	ip, [r0, #32]
   3c6e4:	push	{r4, r5, r6, r7, lr}
   3c6e8:	mov	r4, r0
   3c6ec:	ldr	r3, [ip, #20]
   3c6f0:	sub	sp, sp, #12
   3c6f4:	adds	r3, r1, r3
   3c6f8:	movcs	r2, #1
   3c6fc:	movcc	r2, #0
   3c700:	cmn	r3, #-536870911	; 0xe0000001
   3c704:	movls	r0, #0
   3c708:	movhi	r0, #1
   3c70c:	orrs	r5, r2, r0
   3c710:	bne	3c7a8 <flatcc_builder_extend_union_vector@@Base+0xc8>
   3c714:	str	r3, [ip, #20]
   3c718:	ldr	r6, [r4, #20]
   3c71c:	ldr	r3, [r4, #24]
   3c720:	add	r1, r6, r1, lsl #3
   3c724:	cmp	r1, r3
   3c728:	str	r1, [r4, #20]
   3c72c:	bcs	3c740 <flatcc_builder_extend_union_vector@@Base+0x60>
   3c730:	ldr	r0, [r4, #16]
   3c734:	add	r0, r0, r6
   3c738:	add	sp, sp, #12
   3c73c:	pop	{r4, r5, r6, r7, pc}
   3c740:	ldr	r2, [r4, #28]
   3c744:	mov	r3, #1
   3c748:	add	r2, r2, #1
   3c74c:	ldr	r0, [r4, #40]	; 0x28
   3c750:	add	r2, r2, r1
   3c754:	str	r3, [sp]
   3c758:	add	r1, r4, #60	; 0x3c
   3c75c:	ldr	r7, [r4, #48]	; 0x30
   3c760:	blx	r7
   3c764:	cmp	r0, #0
   3c768:	bne	3c7a0 <flatcc_builder_extend_union_vector@@Base+0xc0>
   3c76c:	ldr	r2, [r4, #28]
   3c770:	ldr	r3, [r4, #64]	; 0x40
   3c774:	ldr	r0, [r4, #60]	; 0x3c
   3c778:	sub	r3, r3, r2
   3c77c:	cmn	r3, #4
   3c780:	mvnhi	r3, #3
   3c784:	str	r3, [r4, #24]
   3c788:	ldr	r3, [r4, #32]
   3c78c:	add	r0, r0, r2
   3c790:	mvn	r2, #3
   3c794:	str	r0, [r4, #16]
   3c798:	str	r2, [r3, #4]
   3c79c:	b	3c734 <flatcc_builder_extend_union_vector@@Base+0x54>
   3c7a0:	mov	r0, r5
   3c7a4:	b	3c738 <flatcc_builder_extend_union_vector@@Base+0x58>
   3c7a8:	bl	1415c <__assert_fail@plt+0x124>

0003c7ac <flatcc_builder_truncate_union_vector@@Base>:
   3c7ac:	ldr	r3, [r0, #32]
   3c7b0:	push	{r4, lr}
   3c7b4:	ldrh	r2, [r3, #14]
   3c7b8:	cmp	r2, #7
   3c7bc:	bne	3c800 <flatcc_builder_truncate_union_vector@@Base+0x54>
   3c7c0:	ldr	ip, [r3, #20]
   3c7c4:	cmp	ip, r1
   3c7c8:	bcc	3c814 <flatcc_builder_truncate_union_vector@@Base+0x68>
   3c7cc:	ldr	r2, [r3, #16]
   3c7d0:	sub	ip, ip, r1
   3c7d4:	str	ip, [r3, #20]
   3c7d8:	mul	r2, r2, r1
   3c7dc:	ldr	r3, [r0, #20]
   3c7e0:	ldr	r1, [r0, #16]
   3c7e4:	sub	r3, r3, r2
   3c7e8:	str	r3, [r0, #20]
   3c7ec:	add	r0, r1, r3
   3c7f0:	mov	r1, #0
   3c7f4:	bl	13f9c <memset@plt>
   3c7f8:	mov	r0, #0
   3c7fc:	pop	{r4, pc}
   3c800:	ldr	r3, [pc, #32]	; 3c828 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   3c804:	ldr	r2, [pc, #32]	; 3c82c <flatcc_builder_truncate_union_vector@@Base+0x80>
   3c808:	ldr	r1, [pc, #32]	; 3c830 <flatcc_builder_truncate_union_vector@@Base+0x84>
   3c80c:	ldr	r0, [pc, #32]	; 3c834 <flatcc_builder_truncate_union_vector@@Base+0x88>
   3c810:	bl	14038 <__assert_fail@plt>
   3c814:	ldr	r3, [pc, #12]	; 3c828 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   3c818:	ldr	r2, [pc, #24]	; 3c838 <flatcc_builder_truncate_union_vector@@Base+0x8c>
   3c81c:	ldr	r1, [pc, #12]	; 3c830 <flatcc_builder_truncate_union_vector@@Base+0x84>
   3c820:	ldr	r0, [pc, #20]	; 3c83c <flatcc_builder_truncate_union_vector@@Base+0x90>
   3c824:	bl	14038 <__assert_fail@plt>
   3c828:	andeq	fp, r5, ip, ror r9
   3c82c:	andeq	r0, r0, r1, lsl #13
   3c830:	andeq	fp, r5, r8, asr #21
   3c834:	ldrdeq	fp, [r5], -r4
   3c838:	andeq	r0, r0, r2, lsl #13
   3c83c:	strdeq	fp, [r5], -r8

0003c840 <flatcc_builder_union_vector_push@@Base>:
   3c840:	push	{r4, r5, r6, r7, lr}
   3c844:	mov	r4, r0
   3c848:	ldr	r0, [r0, #32]
   3c84c:	sub	sp, sp, #20
   3c850:	add	r5, sp, #8
   3c854:	ldrh	r3, [r0, #14]
   3c858:	stm	r5, {r1, r2}
   3c85c:	cmp	r3, #7
   3c860:	bne	3c924 <flatcc_builder_union_vector_push@@Base+0xe4>
   3c864:	ldr	r3, [r0, #20]
   3c868:	cmn	r3, #-536870911	; 0xe0000001
   3c86c:	beq	3c914 <flatcc_builder_union_vector_push@@Base+0xd4>
   3c870:	add	r3, r3, #1
   3c874:	str	r3, [r0, #20]
   3c878:	ldr	r6, [r4, #20]
   3c87c:	ldr	r2, [r4, #24]
   3c880:	add	r3, r6, #8
   3c884:	cmp	r3, r2
   3c888:	str	r3, [r4, #20]
   3c88c:	bcs	3c8b4 <flatcc_builder_union_vector_push@@Base+0x74>
   3c890:	ldr	r3, [r4, #16]
   3c894:	adds	r3, r3, r6
   3c898:	movne	r2, r3
   3c89c:	ldmne	r5, {r0, r1}
   3c8a0:	moveq	r2, r3
   3c8a4:	stmne	r3, {r0, r1}
   3c8a8:	mov	r0, r2
   3c8ac:	add	sp, sp, #20
   3c8b0:	pop	{r4, r5, r6, r7, pc}
   3c8b4:	ldr	r2, [r4, #28]
   3c8b8:	mov	r3, #1
   3c8bc:	add	r2, r6, r2
   3c8c0:	ldr	r0, [r4, #40]	; 0x28
   3c8c4:	add	r2, r2, #9
   3c8c8:	str	r3, [sp]
   3c8cc:	add	r1, r4, #60	; 0x3c
   3c8d0:	ldr	r7, [r4, #48]	; 0x30
   3c8d4:	blx	r7
   3c8d8:	cmp	r0, #0
   3c8dc:	bne	3c914 <flatcc_builder_union_vector_push@@Base+0xd4>
   3c8e0:	ldr	r1, [r4, #28]
   3c8e4:	ldr	r2, [r4, #64]	; 0x40
   3c8e8:	ldr	r3, [r4, #60]	; 0x3c
   3c8ec:	sub	r2, r2, r1
   3c8f0:	cmn	r2, #4
   3c8f4:	mvnhi	r2, #3
   3c8f8:	str	r2, [r4, #24]
   3c8fc:	ldr	r2, [r4, #32]
   3c900:	add	r3, r3, r1
   3c904:	mvn	r1, #3
   3c908:	str	r3, [r4, #16]
   3c90c:	str	r1, [r2, #4]
   3c910:	b	3c894 <flatcc_builder_union_vector_push@@Base+0x54>
   3c914:	mov	r2, #0
   3c918:	mov	r0, r2
   3c91c:	add	sp, sp, #20
   3c920:	pop	{r4, r5, r6, r7, pc}
   3c924:	ldr	r3, [pc, #12]	; 3c938 <flatcc_builder_union_vector_push@@Base+0xf8>
   3c928:	ldr	r2, [pc, #12]	; 3c93c <flatcc_builder_union_vector_push@@Base+0xfc>
   3c92c:	ldr	r1, [pc, #12]	; 3c940 <flatcc_builder_union_vector_push@@Base+0x100>
   3c930:	ldr	r0, [pc, #12]	; 3c944 <flatcc_builder_union_vector_push@@Base+0x104>
   3c934:	bl	14038 <__assert_fail@plt>
   3c938:	andeq	fp, r5, r4, lsr #19
   3c93c:	andeq	r0, r0, sp, lsl #13
   3c940:	andeq	fp, r5, r8, asr #21
   3c944:	ldrdeq	fp, [r5], -r4

0003c948 <flatcc_builder_append_union_vector@@Base>:
   3c948:	push	{r4, r5, r6, r7, r8, r9, lr}
   3c94c:	mov	r5, r0
   3c950:	ldr	r0, [r0, #32]
   3c954:	sub	sp, sp, #12
   3c958:	ldrh	r3, [r0, #14]
   3c95c:	cmp	r3, #7
   3c960:	bne	3ca44 <flatcc_builder_append_union_vector@@Base+0xfc>
   3c964:	mov	r7, r1
   3c968:	ldr	r1, [r0, #20]
   3c96c:	adds	r1, r2, r1
   3c970:	movcs	r4, #1
   3c974:	movcc	r4, #0
   3c978:	cmn	r1, #-536870911	; 0xe0000001
   3c97c:	movls	r3, #0
   3c980:	movhi	r3, #1
   3c984:	orrs	r4, r4, r3
   3c988:	bne	3ca40 <flatcc_builder_append_union_vector@@Base+0xf8>
   3c98c:	str	r1, [r0, #20]
   3c990:	ldr	r8, [r5, #20]
   3c994:	lsl	r6, r2, #3
   3c998:	ldr	r3, [r5, #24]
   3c99c:	add	r1, r6, r8
   3c9a0:	cmp	r1, r3
   3c9a4:	str	r1, [r5, #20]
   3c9a8:	bcs	3c9d8 <flatcc_builder_append_union_vector@@Base+0x90>
   3c9ac:	ldr	r3, [r5, #16]
   3c9b0:	adds	r3, r3, r8
   3c9b4:	beq	3c9cc <flatcc_builder_append_union_vector@@Base+0x84>
   3c9b8:	mov	r0, r3
   3c9bc:	mov	r2, r6
   3c9c0:	mov	r1, r7
   3c9c4:	bl	13edc <memcpy@plt>
   3c9c8:	mov	r3, r0
   3c9cc:	mov	r0, r3
   3c9d0:	add	sp, sp, #12
   3c9d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3c9d8:	ldr	r2, [r5, #28]
   3c9dc:	mov	r3, #1
   3c9e0:	add	r2, r2, #1
   3c9e4:	ldr	r0, [r5, #40]	; 0x28
   3c9e8:	add	r2, r2, r1
   3c9ec:	str	r3, [sp]
   3c9f0:	add	r1, r5, #60	; 0x3c
   3c9f4:	ldr	r9, [r5, #48]	; 0x30
   3c9f8:	blx	r9
   3c9fc:	cmp	r0, #0
   3ca00:	bne	3ca38 <flatcc_builder_append_union_vector@@Base+0xf0>
   3ca04:	ldr	r1, [r5, #28]
   3ca08:	ldr	r2, [r5, #64]	; 0x40
   3ca0c:	ldr	r3, [r5, #60]	; 0x3c
   3ca10:	sub	r2, r2, r1
   3ca14:	cmn	r2, #4
   3ca18:	mvnhi	r2, #3
   3ca1c:	str	r2, [r5, #24]
   3ca20:	ldr	r2, [r5, #32]
   3ca24:	add	r3, r3, r1
   3ca28:	mvn	r1, #3
   3ca2c:	str	r3, [r5, #16]
   3ca30:	str	r1, [r2, #4]
   3ca34:	b	3c9b0 <flatcc_builder_append_union_vector@@Base+0x68>
   3ca38:	mov	r3, r4
   3ca3c:	b	3c9cc <flatcc_builder_append_union_vector@@Base+0x84>
   3ca40:	bl	1415c <__assert_fail@plt+0x124>
   3ca44:	ldr	r3, [pc, #12]	; 3ca58 <flatcc_builder_append_union_vector@@Base+0x110>
   3ca48:	ldr	r2, [pc, #12]	; 3ca5c <flatcc_builder_append_union_vector@@Base+0x114>
   3ca4c:	ldr	r1, [pc, #12]	; 3ca60 <flatcc_builder_append_union_vector@@Base+0x118>
   3ca50:	ldr	r0, [pc, #12]	; 3ca64 <flatcc_builder_append_union_vector@@Base+0x11c>
   3ca54:	bl	14038 <__assert_fail@plt>
   3ca58:	andeq	fp, r5, r8, asr #19
   3ca5c:	muleq	r0, ip, r6
   3ca60:	andeq	fp, r5, r8, asr #21
   3ca64:	ldrdeq	fp, [r5], -r4

0003ca68 <flatcc_builder_create_string@@Base>:
   3ca68:	push	{r4, r5, r6, lr}
   3ca6c:	sub	sp, sp, #88	; 0x58
   3ca70:	ldr	lr, [r0, #136]	; 0x88
   3ca74:	mov	r4, r0
   3ca78:	add	r0, sp, #88	; 0x58
   3ca7c:	cmp	r2, #0
   3ca80:	sub	r3, lr, r2
   3ca84:	str	r2, [r0, #-76]!	; 0xffffffb4
   3ca88:	sub	r3, r3, #1
   3ca8c:	str	r0, [sp, #24]
   3ca90:	moveq	r0, #1
   3ca94:	strne	r1, [sp, #32]
   3ca98:	mov	ip, #4
   3ca9c:	moveq	r1, r0
   3caa0:	movne	r1, #2
   3caa4:	and	r3, r3, #3
   3caa8:	str	ip, [sp, #28]
   3caac:	add	r3, r3, #1
   3cab0:	addne	ip, r2, ip
   3cab4:	add	r1, r1, #1
   3cab8:	add	ip, ip, r3
   3cabc:	add	r0, sp, #88	; 0x58
   3cac0:	add	r1, r0, r1, lsl #3
   3cac4:	sub	r5, lr, ip
   3cac8:	ldr	r0, [pc, #104]	; 3cb38 <flatcc_builder_create_string@@Base+0xd0>
   3cacc:	strne	r2, [sp, #36]	; 0x24
   3cad0:	moveq	r2, #2
   3cad4:	movne	r2, #3
   3cad8:	cmp	lr, r5
   3cadc:	str	r3, [r1, #-68]	; 0xffffffbc
   3cae0:	str	ip, [sp, #16]
   3cae4:	str	r2, [sp, #20]
   3cae8:	str	r0, [r1, #-72]	; 0xffffffb8
   3caec:	ble	3cb20 <flatcc_builder_create_string@@Base+0xb8>
   3caf0:	ldr	r0, [r4, #36]	; 0x24
   3caf4:	mov	r3, r5
   3caf8:	str	ip, [sp]
   3cafc:	add	r1, sp, #24
   3cb00:	ldr	r6, [r4, #44]	; 0x2c
   3cb04:	blx	r6
   3cb08:	cmp	r0, #0
   3cb0c:	bne	3cb24 <flatcc_builder_create_string@@Base+0xbc>
   3cb10:	mov	r0, r5
   3cb14:	str	r5, [r4, #136]	; 0x88
   3cb18:	add	sp, sp, #88	; 0x58
   3cb1c:	pop	{r4, r5, r6, pc}
   3cb20:	bl	14134 <__assert_fail@plt+0xfc>
   3cb24:	ldr	r3, [pc, #16]	; 3cb3c <flatcc_builder_create_string@@Base+0xd4>
   3cb28:	ldr	r2, [pc, #16]	; 3cb40 <flatcc_builder_create_string@@Base+0xd8>
   3cb2c:	ldr	r1, [pc, #16]	; 3cb44 <flatcc_builder_create_string@@Base+0xdc>
   3cb30:	ldr	r0, [pc, #16]	; 3cb48 <flatcc_builder_create_string@@Base+0xe0>
   3cb34:	bl	14038 <__assert_fail@plt>
   3cb38:	andeq	fp, r5, r0, lsl r4
   3cb3c:	muleq	r5, r4, r3
   3cb40:	andeq	r0, r0, fp, lsl #5
   3cb44:	andeq	fp, r5, r8, asr #21
   3cb48:	andeq	sl, r4, r4, asr sp

0003cb4c <flatcc_builder_create_string_str@@Base>:
   3cb4c:	push	{r4, r5, r6, lr}
   3cb50:	mov	r4, r0
   3cb54:	sub	sp, sp, #88	; 0x58
   3cb58:	mov	r0, r1
   3cb5c:	mov	r5, r1
   3cb60:	bl	13f78 <strlen@plt>
   3cb64:	ldr	lr, [r4, #136]	; 0x88
   3cb68:	add	r2, sp, #88	; 0x58
   3cb6c:	sub	r3, lr, #1
   3cb70:	mov	ip, #4
   3cb74:	str	ip, [sp, #28]
   3cb78:	cmp	r0, #0
   3cb7c:	str	r0, [r2, #-76]!	; 0xffffffb4
   3cb80:	sub	r3, r3, r0
   3cb84:	str	r2, [sp, #24]
   3cb88:	moveq	r2, #1
   3cb8c:	moveq	r1, r2
   3cb90:	movne	r1, #2
   3cb94:	and	r3, r3, #3
   3cb98:	addne	ip, r0, ip
   3cb9c:	add	r3, r3, #1
   3cba0:	add	r1, r1, #1
   3cba4:	strne	r0, [sp, #36]	; 0x24
   3cba8:	add	ip, ip, r3
   3cbac:	add	r0, sp, #88	; 0x58
   3cbb0:	strne	r5, [sp, #32]
   3cbb4:	add	r1, r0, r1, lsl #3
   3cbb8:	sub	r5, lr, ip
   3cbbc:	ldr	r0, [pc, #100]	; 3cc28 <flatcc_builder_create_string_str@@Base+0xdc>
   3cbc0:	movne	r2, #3
   3cbc4:	moveq	r2, #2
   3cbc8:	cmp	lr, r5
   3cbcc:	str	r3, [r1, #-68]	; 0xffffffbc
   3cbd0:	str	ip, [sp, #16]
   3cbd4:	str	r2, [sp, #20]
   3cbd8:	str	r0, [r1, #-72]	; 0xffffffb8
   3cbdc:	ble	3cc10 <flatcc_builder_create_string_str@@Base+0xc4>
   3cbe0:	ldr	r0, [r4, #36]	; 0x24
   3cbe4:	mov	r3, r5
   3cbe8:	str	ip, [sp]
   3cbec:	add	r1, sp, #24
   3cbf0:	ldr	r6, [r4, #44]	; 0x2c
   3cbf4:	blx	r6
   3cbf8:	cmp	r0, #0
   3cbfc:	bne	3cc14 <flatcc_builder_create_string_str@@Base+0xc8>
   3cc00:	mov	r0, r5
   3cc04:	str	r5, [r4, #136]	; 0x88
   3cc08:	add	sp, sp, #88	; 0x58
   3cc0c:	pop	{r4, r5, r6, pc}
   3cc10:	bl	14134 <__assert_fail@plt+0xfc>
   3cc14:	ldr	r3, [pc, #16]	; 3cc2c <flatcc_builder_create_string_str@@Base+0xe0>
   3cc18:	ldr	r2, [pc, #16]	; 3cc30 <flatcc_builder_create_string_str@@Base+0xe4>
   3cc1c:	ldr	r1, [pc, #16]	; 3cc34 <flatcc_builder_create_string_str@@Base+0xe8>
   3cc20:	ldr	r0, [pc, #16]	; 3cc38 <flatcc_builder_create_string_str@@Base+0xec>
   3cc24:	bl	14038 <__assert_fail@plt>
   3cc28:	andeq	fp, r5, r0, lsl r4
   3cc2c:	muleq	r5, r4, r3
   3cc30:	andeq	r0, r0, fp, lsl #5
   3cc34:	andeq	fp, r5, r8, asr #21
   3cc38:	andeq	sl, r4, r4, asr sp

0003cc3c <flatcc_builder_create_string_strn@@Base>:
   3cc3c:	push	{r4, r5, r6, lr}
   3cc40:	mov	r6, r1
   3cc44:	sub	sp, sp, #88	; 0x58
   3cc48:	mov	r4, r0
   3cc4c:	mov	r1, #0
   3cc50:	mov	r0, r6
   3cc54:	mov	r5, r2
   3cc58:	bl	13fc0 <memchr@plt>
   3cc5c:	mov	ip, #4
   3cc60:	mov	r1, #1
   3cc64:	add	r2, sp, #88	; 0x58
   3cc68:	str	ip, [sp, #28]
   3cc6c:	add	lr, sp, #88	; 0x58
   3cc70:	cmp	r0, #0
   3cc74:	subne	r5, r0, r6
   3cc78:	ldr	r0, [r4, #136]	; 0x88
   3cc7c:	cmp	r5, #0
   3cc80:	sub	r3, r0, #1
   3cc84:	sub	r3, r3, r5
   3cc88:	movne	r1, #2
   3cc8c:	and	r3, r3, #3
   3cc90:	addne	ip, r5, ip
   3cc94:	add	r3, r3, #1
   3cc98:	add	r1, r1, #1
   3cc9c:	add	ip, r3, ip
   3cca0:	str	r5, [r2, #-76]!	; 0xffffffb4
   3cca4:	strne	r5, [sp, #36]	; 0x24
   3cca8:	add	r1, lr, r1, lsl #3
   3ccac:	sub	r5, r0, ip
   3ccb0:	ldr	lr, [pc, #108]	; 3cd24 <flatcc_builder_create_string_strn@@Base+0xe8>
   3ccb4:	str	r2, [sp, #24]
   3ccb8:	strne	r6, [sp, #32]
   3ccbc:	movne	r2, #3
   3ccc0:	moveq	r2, #2
   3ccc4:	cmp	r0, r5
   3ccc8:	str	r3, [r1, #-68]	; 0xffffffbc
   3cccc:	str	ip, [sp, #16]
   3ccd0:	str	r2, [sp, #20]
   3ccd4:	str	lr, [r1, #-72]	; 0xffffffb8
   3ccd8:	ble	3cd0c <flatcc_builder_create_string_strn@@Base+0xd0>
   3ccdc:	ldr	r0, [r4, #36]	; 0x24
   3cce0:	mov	r3, r5
   3cce4:	str	ip, [sp]
   3cce8:	add	r1, sp, #24
   3ccec:	ldr	r6, [r4, #44]	; 0x2c
   3ccf0:	blx	r6
   3ccf4:	cmp	r0, #0
   3ccf8:	bne	3cd10 <flatcc_builder_create_string_strn@@Base+0xd4>
   3ccfc:	mov	r0, r5
   3cd00:	str	r5, [r4, #136]	; 0x88
   3cd04:	add	sp, sp, #88	; 0x58
   3cd08:	pop	{r4, r5, r6, pc}
   3cd0c:	bl	14134 <__assert_fail@plt+0xfc>
   3cd10:	ldr	r3, [pc, #16]	; 3cd28 <flatcc_builder_create_string_strn@@Base+0xec>
   3cd14:	ldr	r2, [pc, #16]	; 3cd2c <flatcc_builder_create_string_strn@@Base+0xf0>
   3cd18:	ldr	r1, [pc, #16]	; 3cd30 <flatcc_builder_create_string_strn@@Base+0xf4>
   3cd1c:	ldr	r0, [pc, #16]	; 3cd34 <flatcc_builder_create_string_strn@@Base+0xf8>
   3cd20:	bl	14038 <__assert_fail@plt>
   3cd24:	andeq	fp, r5, r0, lsl r4
   3cd28:	muleq	r5, r4, r3
   3cd2c:	andeq	r0, r0, fp, lsl #5
   3cd30:	andeq	fp, r5, r8, asr #21
   3cd34:	andeq	sl, r4, r4, asr sp

0003cd38 <flatcc_builder_end_string@@Base>:
   3cd38:	ldr	r3, [r0, #32]
   3cd3c:	push	{r4, r5, r6, lr}
   3cd40:	sub	sp, sp, #88	; 0x58
   3cd44:	ldrh	r2, [r3, #14]
   3cd48:	cmp	r2, #6
   3cd4c:	bne	3ceb8 <flatcc_builder_end_string@@Base+0x180>
   3cd50:	ldr	r2, [r3, #20]
   3cd54:	ldr	r3, [r0, #20]
   3cd58:	mov	r4, r0
   3cd5c:	cmp	r2, r3
   3cd60:	bne	3cea4 <flatcc_builder_end_string@@Base+0x16c>
   3cd64:	ldr	r0, [r0, #136]	; 0x88
   3cd68:	add	r1, sp, #88	; 0x58
   3cd6c:	sub	r3, r0, #1
   3cd70:	cmp	r2, #0
   3cd74:	sub	r3, r3, r2
   3cd78:	str	r2, [r1, #-76]!	; 0xffffffb4
   3cd7c:	mov	ip, #4
   3cd80:	str	r1, [sp, #24]
   3cd84:	ldr	lr, [r4, #16]
   3cd88:	mov	r1, #1
   3cd8c:	and	r3, r3, #3
   3cd90:	movne	r1, #2
   3cd94:	str	ip, [sp, #28]
   3cd98:	add	r3, r3, #1
   3cd9c:	addne	ip, r2, ip
   3cda0:	add	r1, r1, #1
   3cda4:	strne	lr, [sp, #32]
   3cda8:	add	ip, ip, r3
   3cdac:	add	lr, sp, #88	; 0x58
   3cdb0:	add	r1, lr, r1, lsl #3
   3cdb4:	sub	r5, r0, ip
   3cdb8:	ldr	lr, [pc, #268]	; 3cecc <flatcc_builder_end_string@@Base+0x194>
   3cdbc:	strne	r2, [sp, #36]	; 0x24
   3cdc0:	moveq	r2, #2
   3cdc4:	movne	r2, #3
   3cdc8:	cmp	r0, r5
   3cdcc:	str	r3, [r1, #-68]	; 0xffffffbc
   3cdd0:	str	ip, [sp, #16]
   3cdd4:	str	r2, [sp, #20]
   3cdd8:	str	lr, [r1, #-72]	; 0xffffffb8
   3cddc:	ble	3cea0 <flatcc_builder_end_string@@Base+0x168>
   3cde0:	ldr	r0, [r4, #36]	; 0x24
   3cde4:	add	r1, sp, #24
   3cde8:	str	ip, [sp]
   3cdec:	mov	r3, r5
   3cdf0:	ldr	r6, [r4, #44]	; 0x2c
   3cdf4:	blx	r6
   3cdf8:	subs	r1, r0, #0
   3cdfc:	bne	3ce8c <flatcc_builder_end_string@@Base+0x154>
   3ce00:	cmp	r5, #0
   3ce04:	str	r5, [r4, #136]	; 0x88
   3ce08:	beq	3ce80 <flatcc_builder_end_string@@Base+0x148>
   3ce0c:	ldr	r2, [r4, #20]
   3ce10:	ldr	r0, [r4, #16]
   3ce14:	bl	13f9c <memset@plt>
   3ce18:	ldr	r3, [r4, #32]
   3ce1c:	ldr	r2, [r4, #64]	; 0x40
   3ce20:	ldrh	lr, [r4, #130]	; 0x82
   3ce24:	ldr	ip, [r3]
   3ce28:	ldr	r1, [r3, #4]
   3ce2c:	ldrh	r0, [r4, #128]	; 0x80
   3ce30:	sub	r2, r2, ip
   3ce34:	cmp	r2, r1
   3ce38:	movcs	r2, r1
   3ce3c:	cmp	r0, lr
   3ce40:	ldr	r0, [r4, #60]	; 0x3c
   3ce44:	ldr	r6, [r3, #8]
   3ce48:	str	r2, [r4, #24]
   3ce4c:	add	r2, r0, ip
   3ce50:	str	r2, [r4, #16]
   3ce54:	str	r6, [r4, #20]
   3ce58:	ldr	r2, [r4, #156]	; 0x9c
   3ce5c:	str	ip, [r4, #28]
   3ce60:	str	r1, [r3, #4]
   3ce64:	strhcc	lr, [r4, #128]	; 0x80
   3ce68:	ldrh	r1, [r3, #12]
   3ce6c:	sub	r2, r2, #1
   3ce70:	sub	r3, r3, #36	; 0x24
   3ce74:	str	r2, [r4, #156]	; 0x9c
   3ce78:	strh	r1, [r4, #130]	; 0x82
   3ce7c:	str	r3, [r4, #32]
   3ce80:	mov	r0, r5
   3ce84:	add	sp, sp, #88	; 0x58
   3ce88:	pop	{r4, r5, r6, pc}
   3ce8c:	ldr	r3, [pc, #60]	; 3ced0 <flatcc_builder_end_string@@Base+0x198>
   3ce90:	ldr	r2, [pc, #60]	; 3ced4 <flatcc_builder_end_string@@Base+0x19c>
   3ce94:	ldr	r1, [pc, #60]	; 3ced8 <flatcc_builder_end_string@@Base+0x1a0>
   3ce98:	ldr	r0, [pc, #60]	; 3cedc <flatcc_builder_end_string@@Base+0x1a4>
   3ce9c:	bl	14038 <__assert_fail@plt>
   3cea0:	bl	14134 <__assert_fail@plt+0xfc>
   3cea4:	ldr	r3, [pc, #52]	; 3cee0 <flatcc_builder_end_string@@Base+0x1a8>
   3cea8:	ldr	r2, [pc, #52]	; 3cee4 <flatcc_builder_end_string@@Base+0x1ac>
   3ceac:	ldr	r1, [pc, #36]	; 3ced8 <flatcc_builder_end_string@@Base+0x1a0>
   3ceb0:	ldr	r0, [pc, #48]	; 3cee8 <flatcc_builder_end_string@@Base+0x1b0>
   3ceb4:	bl	14038 <__assert_fail@plt>
   3ceb8:	ldr	r3, [pc, #32]	; 3cee0 <flatcc_builder_end_string@@Base+0x1a8>
   3cebc:	ldr	r2, [pc, #40]	; 3ceec <flatcc_builder_end_string@@Base+0x1b4>
   3cec0:	ldr	r1, [pc, #16]	; 3ced8 <flatcc_builder_end_string@@Base+0x1a0>
   3cec4:	ldr	r0, [pc, #36]	; 3cef0 <flatcc_builder_end_string@@Base+0x1b8>
   3cec8:	bl	14038 <__assert_fail@plt>
   3cecc:	andeq	fp, r5, r0, lsl r4
   3ced0:	muleq	r5, r4, r3
   3ced4:	andeq	r0, r0, fp, lsl #5
   3ced8:	andeq	fp, r5, r8, asr #21
   3cedc:	andeq	sl, r4, r4, asr sp
   3cee0:	andeq	fp, r5, ip, ror #19
   3cee4:	andeq	r0, r0, r5, asr #13
   3cee8:	andeq	fp, r5, r8, lsl #28
   3ceec:	andeq	r0, r0, r4, asr #13
   3cef0:	andeq	fp, r5, r8, asr #22

0003cef4 <flatcc_builder_string_edit@@Base>:
   3cef4:	ldr	r0, [r0, #16]
   3cef8:	bx	lr

0003cefc <flatcc_builder_string_len@@Base>:
   3cefc:	ldr	r3, [r0, #32]
   3cf00:	ldr	r0, [r3, #20]
   3cf04:	bx	lr

0003cf08 <flatcc_builder_table_add@@Base>:
   3cf08:	push	{r4, r5, r6, r7, r8, r9, lr}
   3cf0c:	mov	r4, r0
   3cf10:	ldr	r0, [r0, #32]
   3cf14:	sub	sp, sp, #12
   3cf18:	ldrh	r0, [r0, #14]
   3cf1c:	cmp	r0, #3
   3cf20:	bne	3d05c <flatcc_builder_table_add@@Base+0x154>
   3cf24:	ldr	r0, [pc, #324]	; 3d070 <flatcc_builder_table_add@@Base+0x168>
   3cf28:	cmp	r1, r0
   3cf2c:	bhi	3d048 <flatcc_builder_table_add@@Base+0x140>
   3cf30:	ldrh	r0, [r4, #130]	; 0x82
   3cf34:	lsl	r7, r1, #1
   3cf38:	cmp	r0, r3
   3cf3c:	ldr	r0, [r4, #4]
   3cf40:	strhcc	r3, [r4, #130]	; 0x82
   3cf44:	add	lr, r0, r7
   3cf48:	ldrh	r6, [r0, r7]
   3cf4c:	cmp	r6, #0
   3cf50:	bne	3d034 <flatcc_builder_table_add@@Base+0x12c>
   3cf54:	ldr	ip, [r4, #12]
   3cf58:	ldr	r9, [pc, #276]	; 3d074 <flatcc_builder_table_add@@Base+0x16c>
   3cf5c:	eor	ip, ip, r1
   3cf60:	uxth	r5, r1
   3cf64:	mul	r1, r9, ip
   3cf68:	ldr	r0, [r4, #20]
   3cf6c:	eor	r1, r1, r2
   3cf70:	sub	r8, r3, #1
   3cf74:	add	r8, r8, r0
   3cf78:	rsb	r3, r3, #0
   3cf7c:	and	r8, r8, r3
   3cf80:	mul	r1, r9, r1
   3cf84:	ldr	r3, [r4, #24]
   3cf88:	add	r2, r2, r8
   3cf8c:	cmp	r2, r3
   3cf90:	str	r1, [r4, #12]
   3cf94:	str	r2, [r4, #20]
   3cf98:	bcs	3cfc4 <flatcc_builder_table_add@@Base+0xbc>
   3cf9c:	ldr	r0, [r4, #16]
   3cfa0:	add	r3, r8, #4
   3cfa4:	strh	r3, [lr]
   3cfa8:	ldrh	r3, [r4, #8]
   3cfac:	add	r0, r0, r8
   3cfb0:	cmp	r3, r5
   3cfb4:	addls	r5, r5, #1
   3cfb8:	strhls	r5, [r4, #8]
   3cfbc:	add	sp, sp, #12
   3cfc0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3cfc4:	ldr	r1, [r4, #28]
   3cfc8:	mov	r3, #1
   3cfcc:	add	r1, r1, #1
   3cfd0:	ldr	r0, [r4, #40]	; 0x28
   3cfd4:	add	r2, r1, r2
   3cfd8:	str	r3, [sp]
   3cfdc:	add	r1, r4, #60	; 0x3c
   3cfe0:	ldr	r9, [r4, #48]	; 0x30
   3cfe4:	blx	r9
   3cfe8:	cmp	r0, #0
   3cfec:	bne	3d02c <flatcc_builder_table_add@@Base+0x124>
   3cff0:	ldr	r6, [r4, #28]
   3cff4:	ldr	r3, [r4, #64]	; 0x40
   3cff8:	ldr	r2, [pc, #120]	; 3d078 <flatcc_builder_table_add@@Base+0x170>
   3cffc:	sub	r3, r3, r6
   3d000:	ldr	r0, [r4, #60]	; 0x3c
   3d004:	ldr	r1, [r4, #32]
   3d008:	ldr	lr, [r4, #4]
   3d00c:	cmp	r3, r2
   3d010:	add	r0, r0, r6
   3d014:	movcs	r3, r2
   3d018:	str	r0, [r4, #16]
   3d01c:	str	r3, [r4, #24]
   3d020:	add	lr, lr, r7
   3d024:	str	r2, [r1, #4]
   3d028:	b	3cfa0 <flatcc_builder_table_add@@Base+0x98>
   3d02c:	mov	r0, r6
   3d030:	b	3cfbc <flatcc_builder_table_add@@Base+0xb4>
   3d034:	ldr	r3, [pc, #64]	; 3d07c <flatcc_builder_table_add@@Base+0x174>
   3d038:	ldr	r2, [pc, #64]	; 3d080 <flatcc_builder_table_add@@Base+0x178>
   3d03c:	ldr	r1, [pc, #64]	; 3d084 <flatcc_builder_table_add@@Base+0x17c>
   3d040:	ldr	r0, [pc, #64]	; 3d088 <flatcc_builder_table_add@@Base+0x180>
   3d044:	bl	14038 <__assert_fail@plt>
   3d048:	ldr	r3, [pc, #44]	; 3d07c <flatcc_builder_table_add@@Base+0x174>
   3d04c:	ldr	r2, [pc, #56]	; 3d08c <flatcc_builder_table_add@@Base+0x184>
   3d050:	ldr	r1, [pc, #44]	; 3d084 <flatcc_builder_table_add@@Base+0x17c>
   3d054:	ldr	r0, [pc, #52]	; 3d090 <flatcc_builder_table_add@@Base+0x188>
   3d058:	bl	14038 <__assert_fail@plt>
   3d05c:	ldr	r3, [pc, #24]	; 3d07c <flatcc_builder_table_add@@Base+0x174>
   3d060:	ldr	r2, [pc, #44]	; 3d094 <flatcc_builder_table_add@@Base+0x18c>
   3d064:	ldr	r1, [pc, #24]	; 3d084 <flatcc_builder_table_add@@Base+0x17c>
   3d068:	ldr	r0, [pc, #40]	; 3d098 <flatcc_builder_table_add@@Base+0x190>
   3d06c:	bl	14038 <__assert_fail@plt>
   3d070:	strdeq	r7, [r0], -ip
   3d074:			; <UNDEFINED> instruction: 0x9e3779b1
   3d078:	strdeq	pc, [r0], -ip
   3d07c:	andeq	fp, r5, r8, lsl #20
   3d080:	strdeq	r0, [r0], -r8
   3d084:	andeq	fp, r5, r8, asr #21
   3d088:	andeq	sl, r4, r4, asr sp
   3d08c:	andeq	r0, r0, lr, ror #13
   3d090:	andeq	fp, r5, ip, lsr #28
   3d094:	andeq	r0, r0, sp, ror #13
   3d098:	muleq	r5, r4, sp

0003d09c <flatcc_builder_table_edit@@Base>:
   3d09c:	ldr	r3, [r0, #32]
   3d0a0:	ldrh	r3, [r3, #14]
   3d0a4:	cmp	r3, #3
   3d0a8:	bne	3d0c0 <flatcc_builder_table_edit@@Base+0x24>
   3d0ac:	ldr	r3, [r0, #20]
   3d0b0:	ldr	r0, [r0, #16]
   3d0b4:	sub	r1, r3, r1
   3d0b8:	add	r0, r0, r1
   3d0bc:	bx	lr
   3d0c0:	push	{r4, lr}
   3d0c4:	ldr	r3, [pc, #12]	; 3d0d8 <flatcc_builder_table_edit@@Base+0x3c>
   3d0c8:	ldr	r2, [pc, #12]	; 3d0dc <flatcc_builder_table_edit@@Base+0x40>
   3d0cc:	ldr	r1, [pc, #12]	; 3d0e0 <flatcc_builder_table_edit@@Base+0x44>
   3d0d0:	ldr	r0, [pc, #12]	; 3d0e4 <flatcc_builder_table_edit@@Base+0x48>
   3d0d4:	bl	14038 <__assert_fail@plt>
   3d0d8:	andeq	fp, r5, r4, lsr #20
   3d0dc:	andeq	r0, r0, r2, lsl #14
   3d0e0:	andeq	fp, r5, r8, asr #21
   3d0e4:	muleq	r5, r4, sp

0003d0e8 <flatcc_builder_table_add_copy@@Base>:
   3d0e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d0ec:	mov	r4, r0
   3d0f0:	ldr	r0, [r0, #32]
   3d0f4:	mov	r7, r3
   3d0f8:	sub	sp, sp, #12
   3d0fc:	ldrh	r3, [r0, #14]
   3d100:	ldrh	ip, [sp, #48]	; 0x30
   3d104:	cmp	r3, #3
   3d108:	bne	3d264 <flatcc_builder_table_add_copy@@Base+0x17c>
   3d10c:	ldr	r3, [pc, #356]	; 3d278 <flatcc_builder_table_add_copy@@Base+0x190>
   3d110:	cmp	r1, r3
   3d114:	bhi	3d250 <flatcc_builder_table_add_copy@@Base+0x168>
   3d118:	ldrh	r3, [r4, #130]	; 0x82
   3d11c:	lsl	sl, r1, #1
   3d120:	mov	r8, r2
   3d124:	cmp	r3, ip
   3d128:	ldr	r3, [r4, #4]
   3d12c:	strhcc	ip, [r4, #130]	; 0x82
   3d130:	add	r0, r3, sl
   3d134:	ldrh	r5, [r3, sl]
   3d138:	cmp	r5, #0
   3d13c:	bne	3d23c <flatcc_builder_table_add_copy@@Base+0x154>
   3d140:	ldr	r2, [r4, #12]
   3d144:	ldr	lr, [pc, #304]	; 3d27c <flatcc_builder_table_add_copy@@Base+0x194>
   3d148:	eor	r2, r2, r1
   3d14c:	ldr	r6, [r4, #20]
   3d150:	mul	r2, lr, r2
   3d154:	sub	r3, ip, #1
   3d158:	eor	r2, r2, r7
   3d15c:	add	r3, r3, r6
   3d160:	rsb	ip, ip, #0
   3d164:	and	r6, r3, ip
   3d168:	mul	lr, lr, r2
   3d16c:	ldr	r3, [r4, #24]
   3d170:	uxth	r9, r1
   3d174:	add	r1, r7, r6
   3d178:	cmp	r1, r3
   3d17c:	str	lr, [r4, #12]
   3d180:	str	r1, [r4, #20]
   3d184:	bcs	3d1cc <flatcc_builder_table_add_copy@@Base+0xe4>
   3d188:	ldr	r3, [r4, #16]
   3d18c:	add	r2, r6, #4
   3d190:	strh	r2, [r0]
   3d194:	ldrh	r2, [r4, #8]
   3d198:	cmp	r2, r9
   3d19c:	addls	r9, r9, #1
   3d1a0:	strhls	r9, [r4, #8]
   3d1a4:	adds	r3, r3, r6
   3d1a8:	beq	3d1c0 <flatcc_builder_table_add_copy@@Base+0xd8>
   3d1ac:	mov	r0, r3
   3d1b0:	mov	r2, r7
   3d1b4:	mov	r1, r8
   3d1b8:	bl	13edc <memcpy@plt>
   3d1bc:	mov	r3, r0
   3d1c0:	mov	r0, r3
   3d1c4:	add	sp, sp, #12
   3d1c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d1cc:	ldr	r2, [r4, #28]
   3d1d0:	mov	r3, #1
   3d1d4:	add	r2, r2, #1
   3d1d8:	ldr	r0, [r4, #40]	; 0x28
   3d1dc:	add	r2, r2, r1
   3d1e0:	str	r3, [sp]
   3d1e4:	add	r1, r4, #60	; 0x3c
   3d1e8:	ldr	fp, [r4, #48]	; 0x30
   3d1ec:	blx	fp
   3d1f0:	cmp	r0, #0
   3d1f4:	bne	3d234 <flatcc_builder_table_add_copy@@Base+0x14c>
   3d1f8:	ldr	r0, [r4, #28]
   3d1fc:	ldr	r2, [r4, #64]	; 0x40
   3d200:	ldr	r1, [pc, #120]	; 3d280 <flatcc_builder_table_add_copy@@Base+0x198>
   3d204:	ldr	r3, [r4, #60]	; 0x3c
   3d208:	sub	r2, r2, r0
   3d20c:	ldr	ip, [r4, #32]
   3d210:	add	r3, r3, r0
   3d214:	cmp	r2, r1
   3d218:	ldr	r0, [r4, #4]
   3d21c:	movcs	r2, r1
   3d220:	str	r3, [r4, #16]
   3d224:	str	r2, [r4, #24]
   3d228:	add	r0, r0, sl
   3d22c:	str	r1, [ip, #4]
   3d230:	b	3d18c <flatcc_builder_table_add_copy@@Base+0xa4>
   3d234:	mov	r3, r5
   3d238:	b	3d1c0 <flatcc_builder_table_add_copy@@Base+0xd8>
   3d23c:	ldr	r3, [pc, #64]	; 3d284 <flatcc_builder_table_add_copy@@Base+0x19c>
   3d240:	ldr	r2, [pc, #64]	; 3d288 <flatcc_builder_table_add_copy@@Base+0x1a0>
   3d244:	ldr	r1, [pc, #64]	; 3d28c <flatcc_builder_table_add_copy@@Base+0x1a4>
   3d248:	ldr	r0, [pc, #64]	; 3d290 <flatcc_builder_table_add_copy@@Base+0x1a8>
   3d24c:	bl	14038 <__assert_fail@plt>
   3d250:	ldr	r3, [pc, #44]	; 3d284 <flatcc_builder_table_add_copy@@Base+0x19c>
   3d254:	ldr	r2, [pc, #56]	; 3d294 <flatcc_builder_table_add_copy@@Base+0x1ac>
   3d258:	ldr	r1, [pc, #44]	; 3d28c <flatcc_builder_table_add_copy@@Base+0x1a4>
   3d25c:	ldr	r0, [pc, #52]	; 3d298 <flatcc_builder_table_add_copy@@Base+0x1b0>
   3d260:	bl	14038 <__assert_fail@plt>
   3d264:	ldr	r3, [pc, #24]	; 3d284 <flatcc_builder_table_add_copy@@Base+0x19c>
   3d268:	ldr	r2, [pc, #44]	; 3d29c <flatcc_builder_table_add_copy@@Base+0x1b4>
   3d26c:	ldr	r1, [pc, #24]	; 3d28c <flatcc_builder_table_add_copy@@Base+0x1a4>
   3d270:	ldr	r0, [pc, #40]	; 3d2a0 <flatcc_builder_table_add_copy@@Base+0x1b8>
   3d274:	bl	14038 <__assert_fail@plt>
   3d278:	strdeq	r7, [r0], -ip
   3d27c:			; <UNDEFINED> instruction: 0x9e3779b1
   3d280:	strdeq	pc, [r0], -ip
   3d284:	andeq	fp, r5, r8, lsl #20
   3d288:	strdeq	r0, [r0], -r8
   3d28c:	andeq	fp, r5, r8, asr #21
   3d290:	andeq	sl, r4, r4, asr sp
   3d294:	andeq	r0, r0, lr, ror #13
   3d298:	andeq	fp, r5, ip, lsr #28
   3d29c:	andeq	r0, r0, sp, ror #13
   3d2a0:	muleq	r5, r4, sp

0003d2a4 <flatcc_builder_table_add_offset@@Base>:
   3d2a4:	ldr	r3, [r0, #32]
   3d2a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   3d2ac:	sub	sp, sp, #12
   3d2b0:	ldrh	r3, [r3, #14]
   3d2b4:	cmp	r3, #3
   3d2b8:	bne	3d3f4 <flatcc_builder_table_add_offset@@Base+0x150>
   3d2bc:	ldr	r3, [pc, #324]	; 3d408 <flatcc_builder_table_add_offset@@Base+0x164>
   3d2c0:	cmp	r1, r3
   3d2c4:	bhi	3d3e0 <flatcc_builder_table_add_offset@@Base+0x13c>
   3d2c8:	ldr	r3, [r0, #4]
   3d2cc:	lsl	r7, r1, #1
   3d2d0:	mov	r4, r0
   3d2d4:	ldrh	r6, [r3, r7]
   3d2d8:	add	ip, r3, r7
   3d2dc:	cmp	r6, #0
   3d2e0:	bne	3d3cc <flatcc_builder_table_add_offset@@Base+0x128>
   3d2e4:	ldr	r3, [r0, #12]
   3d2e8:	ldr	r2, [pc, #284]	; 3d40c <flatcc_builder_table_add_offset@@Base+0x168>
   3d2ec:	eor	r3, r3, r1
   3d2f0:	ldr	r5, [r0, #20]
   3d2f4:	mul	r3, r2, r3
   3d2f8:	add	r5, r5, #3
   3d2fc:	eor	r3, r3, #4
   3d300:	ldr	r0, [r0, #24]
   3d304:	mul	r3, r2, r3
   3d308:	bic	r5, r5, #3
   3d30c:	add	r2, r5, #4
   3d310:	cmp	r2, r0
   3d314:	uxth	r8, r1
   3d318:	str	r3, [r4, #12]
   3d31c:	str	r2, [r4, #20]
   3d320:	bhi	3d360 <flatcc_builder_table_add_offset@@Base+0xbc>
   3d324:	ldr	r0, [r4, #16]
   3d328:	uxth	r2, r5
   3d32c:	add	r3, r2, #4
   3d330:	strh	r3, [ip]
   3d334:	ldrh	r3, [r4, #8]
   3d338:	add	r0, r0, r5
   3d33c:	cmp	r3, r8
   3d340:	ldr	r3, [r4]
   3d344:	addls	r1, r8, #1
   3d348:	strhls	r1, [r4, #8]
   3d34c:	add	r1, r3, #2
   3d350:	str	r1, [r4]
   3d354:	strh	r2, [r3]
   3d358:	add	sp, sp, #12
   3d35c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3d360:	ldr	r1, [r4, #28]
   3d364:	mov	r3, #1
   3d368:	ldr	r0, [r4, #40]	; 0x28
   3d36c:	add	r2, r2, r1
   3d370:	str	r3, [sp]
   3d374:	add	r1, r4, #60	; 0x3c
   3d378:	ldr	r9, [r4, #48]	; 0x30
   3d37c:	blx	r9
   3d380:	cmp	r0, #0
   3d384:	bne	3d3c4 <flatcc_builder_table_add_offset@@Base+0x120>
   3d388:	ldr	r6, [r4, #28]
   3d38c:	ldr	r3, [r4, #64]	; 0x40
   3d390:	ldr	r2, [pc, #120]	; 3d410 <flatcc_builder_table_add_offset@@Base+0x16c>
   3d394:	sub	r3, r3, r6
   3d398:	ldr	r0, [r4, #60]	; 0x3c
   3d39c:	ldr	r1, [r4, #32]
   3d3a0:	ldr	ip, [r4, #4]
   3d3a4:	cmp	r3, r2
   3d3a8:	add	r0, r0, r6
   3d3ac:	movcs	r3, r2
   3d3b0:	str	r0, [r4, #16]
   3d3b4:	str	r3, [r4, #24]
   3d3b8:	add	ip, ip, r7
   3d3bc:	str	r2, [r1, #4]
   3d3c0:	b	3d328 <flatcc_builder_table_add_offset@@Base+0x84>
   3d3c4:	mov	r0, r6
   3d3c8:	b	3d358 <flatcc_builder_table_add_offset@@Base+0xb4>
   3d3cc:	ldr	r3, [pc, #64]	; 3d414 <flatcc_builder_table_add_offset@@Base+0x170>
   3d3d0:	ldr	r2, [pc, #64]	; 3d418 <flatcc_builder_table_add_offset@@Base+0x174>
   3d3d4:	ldr	r1, [pc, #64]	; 3d41c <flatcc_builder_table_add_offset@@Base+0x178>
   3d3d8:	ldr	r0, [pc, #64]	; 3d420 <flatcc_builder_table_add_offset@@Base+0x17c>
   3d3dc:	bl	14038 <__assert_fail@plt>
   3d3e0:	ldr	r3, [pc, #44]	; 3d414 <flatcc_builder_table_add_offset@@Base+0x170>
   3d3e4:	ldr	r2, [pc, #56]	; 3d424 <flatcc_builder_table_add_offset@@Base+0x180>
   3d3e8:	ldr	r1, [pc, #44]	; 3d41c <flatcc_builder_table_add_offset@@Base+0x178>
   3d3ec:	ldr	r0, [pc, #52]	; 3d428 <flatcc_builder_table_add_offset@@Base+0x184>
   3d3f0:	bl	14038 <__assert_fail@plt>
   3d3f4:	ldr	r3, [pc, #24]	; 3d414 <flatcc_builder_table_add_offset@@Base+0x170>
   3d3f8:	ldr	r2, [pc, #44]	; 3d42c <flatcc_builder_table_add_offset@@Base+0x188>
   3d3fc:	ldr	r1, [pc, #24]	; 3d41c <flatcc_builder_table_add_offset@@Base+0x178>
   3d400:	ldr	r0, [pc, #40]	; 3d430 <flatcc_builder_table_add_offset@@Base+0x18c>
   3d404:	bl	14038 <__assert_fail@plt>
   3d408:	strdeq	r7, [r0], -ip
   3d40c:			; <UNDEFINED> instruction: 0x9e3779b1
   3d410:	strdeq	pc, [r0], -ip
   3d414:	andeq	fp, r5, r0, asr #20
   3d418:	andeq	r0, r0, fp, lsl r7
   3d41c:	andeq	fp, r5, r8, asr #21
   3d420:	andeq	sl, r4, r4, asr sp
   3d424:	andeq	r0, r0, r4, lsl r7
   3d428:	andeq	fp, r5, ip, lsr #28
   3d42c:	andeq	r0, r0, r3, lsl r7
   3d430:	muleq	r5, r4, sp

0003d434 <flatcc_builder_table_add_union@@Base>:
   3d434:	push	{r4, r5, r6, r7, r8, r9, lr}
   3d438:	sub	sp, sp, #20
   3d43c:	add	ip, sp, #16
   3d440:	stmdb	ip, {r2, r3}
   3d444:	ldr	r3, [r0, #32]
   3d448:	ldrb	r6, [sp, #8]
   3d44c:	ldr	r5, [sp, #12]
   3d450:	ldrh	r3, [r3, #14]
   3d454:	cmp	r3, #3
   3d458:	bne	3d5e4 <flatcc_builder_table_add_union@@Base+0x1b0>
   3d45c:	cmp	r6, #0
   3d460:	mov	r4, r0
   3d464:	mov	r7, r1
   3d468:	beq	3d538 <flatcc_builder_table_add_union@@Base+0x104>
   3d46c:	cmp	r5, #0
   3d470:	beq	3d494 <flatcc_builder_table_add_union@@Base+0x60>
   3d474:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   3d478:	cmp	r0, #0
   3d47c:	beq	3d620 <flatcc_builder_table_add_union@@Base+0x1ec>
   3d480:	ldr	r3, [r4, #32]
   3d484:	str	r5, [r0]
   3d488:	ldrh	r3, [r3, #14]
   3d48c:	cmp	r3, #3
   3d490:	bne	3d5f8 <flatcc_builder_table_add_union@@Base+0x1c4>
   3d494:	ldr	r3, [pc, #408]	; 3d634 <flatcc_builder_table_add_union@@Base+0x200>
   3d498:	sub	r1, r7, #1
   3d49c:	cmp	r1, r3
   3d4a0:	bhi	3d60c <flatcc_builder_table_add_union@@Base+0x1d8>
   3d4a4:	ldrh	r3, [r4, #130]	; 0x82
   3d4a8:	lsl	r5, r1, #1
   3d4ac:	cmp	r3, #0
   3d4b0:	moveq	r3, #1
   3d4b4:	strheq	r3, [r4, #130]	; 0x82
   3d4b8:	ldr	r3, [r4, #4]
   3d4bc:	add	r0, r3, r5
   3d4c0:	ldrh	r3, [r3, r5]
   3d4c4:	cmp	r3, #0
   3d4c8:	bne	3d5d0 <flatcc_builder_table_add_union@@Base+0x19c>
   3d4cc:	ldr	r3, [r4, #12]
   3d4d0:	ldr	r2, [pc, #352]	; 3d638 <flatcc_builder_table_add_union@@Base+0x204>
   3d4d4:	eor	r3, r3, r1
   3d4d8:	ldr	r7, [r4, #20]
   3d4dc:	mul	r3, r2, r3
   3d4e0:	uxth	r8, r1
   3d4e4:	eor	r3, r3, #1
   3d4e8:	ldr	r1, [r4, #24]
   3d4ec:	mul	r3, r2, r3
   3d4f0:	add	r2, r7, #1
   3d4f4:	cmp	r2, r1
   3d4f8:	str	r3, [r4, #12]
   3d4fc:	str	r2, [r4, #20]
   3d500:	bcs	3d554 <flatcc_builder_table_add_union@@Base+0x120>
   3d504:	ldr	r3, [r4, #16]
   3d508:	add	r2, r7, #4
   3d50c:	strh	r2, [r0]
   3d510:	ldrh	r2, [r4, #8]
   3d514:	cmp	r2, r8
   3d518:	addls	r1, r8, #1
   3d51c:	strhls	r1, [r4, #8]
   3d520:	cmn	r3, r7
   3d524:	beq	3d5bc <flatcc_builder_table_add_union@@Base+0x188>
   3d528:	mov	r0, #0
   3d52c:	strb	r6, [r3, r7]
   3d530:	add	sp, sp, #20
   3d534:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3d538:	cmp	r5, #0
   3d53c:	beq	3d494 <flatcc_builder_table_add_union@@Base+0x60>
   3d540:	ldr	r3, [pc, #244]	; 3d63c <flatcc_builder_table_add_union@@Base+0x208>
   3d544:	ldr	r2, [pc, #244]	; 3d640 <flatcc_builder_table_add_union@@Base+0x20c>
   3d548:	ldr	r1, [pc, #244]	; 3d644 <flatcc_builder_table_add_union@@Base+0x210>
   3d54c:	ldr	r0, [pc, #244]	; 3d648 <flatcc_builder_table_add_union@@Base+0x214>
   3d550:	bl	14038 <__assert_fail@plt>
   3d554:	ldr	r2, [r4, #28]
   3d558:	mov	r3, #1
   3d55c:	add	r2, r7, r2
   3d560:	ldr	r0, [r4, #40]	; 0x28
   3d564:	add	r2, r2, #2
   3d568:	str	r3, [sp]
   3d56c:	add	r1, r4, #60	; 0x3c
   3d570:	ldr	r9, [r4, #48]	; 0x30
   3d574:	blx	r9
   3d578:	cmp	r0, #0
   3d57c:	bne	3d5bc <flatcc_builder_table_add_union@@Base+0x188>
   3d580:	ldr	r0, [r4, #28]
   3d584:	ldr	r2, [r4, #64]	; 0x40
   3d588:	ldr	r1, [pc, #188]	; 3d64c <flatcc_builder_table_add_union@@Base+0x218>
   3d58c:	ldr	r3, [r4, #60]	; 0x3c
   3d590:	sub	r2, r2, r0
   3d594:	ldr	ip, [r4, #32]
   3d598:	add	r3, r3, r0
   3d59c:	cmp	r2, r1
   3d5a0:	ldr	r0, [r4, #4]
   3d5a4:	movcs	r2, r1
   3d5a8:	str	r3, [r4, #16]
   3d5ac:	str	r2, [r4, #24]
   3d5b0:	add	r0, r0, r5
   3d5b4:	str	r1, [ip, #4]
   3d5b8:	b	3d508 <flatcc_builder_table_add_union@@Base+0xd4>
   3d5bc:	ldr	r3, [pc, #120]	; 3d63c <flatcc_builder_table_add_union@@Base+0x208>
   3d5c0:	ldr	r2, [pc, #136]	; 3d650 <flatcc_builder_table_add_union@@Base+0x21c>
   3d5c4:	ldr	r1, [pc, #120]	; 3d644 <flatcc_builder_table_add_union@@Base+0x210>
   3d5c8:	ldr	r0, [pc, #132]	; 3d654 <flatcc_builder_table_add_union@@Base+0x220>
   3d5cc:	bl	14038 <__assert_fail@plt>
   3d5d0:	ldr	r3, [pc, #128]	; 3d658 <flatcc_builder_table_add_union@@Base+0x224>
   3d5d4:	ldr	r2, [pc, #128]	; 3d65c <flatcc_builder_table_add_union@@Base+0x228>
   3d5d8:	ldr	r1, [pc, #100]	; 3d644 <flatcc_builder_table_add_union@@Base+0x210>
   3d5dc:	ldr	r0, [pc, #124]	; 3d660 <flatcc_builder_table_add_union@@Base+0x22c>
   3d5e0:	bl	14038 <__assert_fail@plt>
   3d5e4:	ldr	r3, [pc, #80]	; 3d63c <flatcc_builder_table_add_union@@Base+0x208>
   3d5e8:	ldr	r2, [pc, #116]	; 3d664 <flatcc_builder_table_add_union@@Base+0x230>
   3d5ec:	ldr	r1, [pc, #80]	; 3d644 <flatcc_builder_table_add_union@@Base+0x210>
   3d5f0:	ldr	r0, [pc, #112]	; 3d668 <flatcc_builder_table_add_union@@Base+0x234>
   3d5f4:	bl	14038 <__assert_fail@plt>
   3d5f8:	ldr	r3, [pc, #88]	; 3d658 <flatcc_builder_table_add_union@@Base+0x224>
   3d5fc:	ldr	r2, [pc, #104]	; 3d66c <flatcc_builder_table_add_union@@Base+0x238>
   3d600:	ldr	r1, [pc, #60]	; 3d644 <flatcc_builder_table_add_union@@Base+0x210>
   3d604:	ldr	r0, [pc, #92]	; 3d668 <flatcc_builder_table_add_union@@Base+0x234>
   3d608:	bl	14038 <__assert_fail@plt>
   3d60c:	ldr	r3, [pc, #68]	; 3d658 <flatcc_builder_table_add_union@@Base+0x224>
   3d610:	ldr	r2, [pc, #88]	; 3d670 <flatcc_builder_table_add_union@@Base+0x23c>
   3d614:	ldr	r1, [pc, #40]	; 3d644 <flatcc_builder_table_add_union@@Base+0x210>
   3d618:	ldr	r0, [pc, #84]	; 3d674 <flatcc_builder_table_add_union@@Base+0x240>
   3d61c:	bl	14038 <__assert_fail@plt>
   3d620:	ldr	r3, [pc, #20]	; 3d63c <flatcc_builder_table_add_union@@Base+0x208>
   3d624:	ldr	r2, [pc, #76]	; 3d678 <flatcc_builder_table_add_union@@Base+0x244>
   3d628:	ldr	r1, [pc, #20]	; 3d644 <flatcc_builder_table_add_union@@Base+0x210>
   3d62c:	ldr	r0, [pc, #72]	; 3d67c <flatcc_builder_table_add_union@@Base+0x248>
   3d630:	bl	14038 <__assert_fail@plt>
   3d634:	strdeq	r7, [r0], -ip
   3d638:			; <UNDEFINED> instruction: 0x9e3779b1
   3d63c:	andeq	fp, r5, r0, ror #20
   3d640:	andeq	r0, r0, pc, ror #11
   3d644:	andeq	fp, r5, r8, asr #21
   3d648:	andeq	fp, r5, r0, ror lr
   3d64c:	strdeq	pc, [r0], -ip
   3d650:	strdeq	r0, [r0], -r6
   3d654:	andeq	fp, r5, r0, lsr #29
   3d658:	andeq	fp, r5, r8, lsl #20
   3d65c:	strdeq	r0, [r0], -r8
   3d660:	andeq	sl, r4, r4, asr sp
   3d664:	andeq	r0, r0, lr, ror #11
   3d668:	muleq	r5, r4, sp
   3d66c:	andeq	r0, r0, sp, ror #13
   3d670:	andeq	r0, r0, lr, ror #13
   3d674:	andeq	fp, r5, ip, lsr #28
   3d678:	strdeq	r0, [r0], -r2
   3d67c:	muleq	r5, r4, lr

0003d680 <flatcc_builder_table_add_union_vector@@Base>:
   3d680:	push	{r4, r5, r6, r7, lr}
   3d684:	sub	sp, sp, #12
   3d688:	add	ip, sp, #8
   3d68c:	stmdb	ip, {r2, r3}
   3d690:	ldr	r3, [r0, #32]
   3d694:	ldr	r4, [sp]
   3d698:	ldr	r6, [sp, #4]
   3d69c:	ldrh	r3, [r3, #14]
   3d6a0:	cmp	r3, #3
   3d6a4:	bne	3d734 <flatcc_builder_table_add_union_vector@@Base+0xb4>
   3d6a8:	clz	r3, r6
   3d6ac:	clz	r2, r4
   3d6b0:	lsr	r3, r3, #5
   3d6b4:	lsr	r2, r2, #5
   3d6b8:	cmp	r2, r3
   3d6bc:	beq	3d6dc <flatcc_builder_table_add_union_vector@@Base+0x5c>
   3d6c0:	adds	r4, r4, #0
   3d6c4:	movne	r4, #1
   3d6c8:	cmp	r4, r3
   3d6cc:	mvnne	r0, #0
   3d6d0:	beq	3d748 <flatcc_builder_table_add_union_vector@@Base+0xc8>
   3d6d4:	add	sp, sp, #12
   3d6d8:	pop	{r4, r5, r6, r7, pc}
   3d6dc:	cmp	r4, #0
   3d6e0:	moveq	r0, r4
   3d6e4:	beq	3d6d4 <flatcc_builder_table_add_union_vector@@Base+0x54>
   3d6e8:	mov	r7, r1
   3d6ec:	sub	r1, r1, #1
   3d6f0:	mov	r5, r0
   3d6f4:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   3d6f8:	cmp	r0, #0
   3d6fc:	beq	3d75c <flatcc_builder_table_add_union_vector@@Base+0xdc>
   3d700:	str	r4, [r0]
   3d704:	mov	r1, r7
   3d708:	mov	r0, r5
   3d70c:	bl	3d2a4 <flatcc_builder_table_add_offset@@Base>
   3d710:	cmp	r0, #0
   3d714:	strne	r6, [r0]
   3d718:	movne	r0, #0
   3d71c:	bne	3d6d4 <flatcc_builder_table_add_union_vector@@Base+0x54>
   3d720:	ldr	r3, [pc, #72]	; 3d770 <flatcc_builder_table_add_union_vector@@Base+0xf0>
   3d724:	ldr	r2, [pc, #72]	; 3d774 <flatcc_builder_table_add_union_vector@@Base+0xf4>
   3d728:	ldr	r1, [pc, #72]	; 3d778 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   3d72c:	ldr	r0, [pc, #72]	; 3d77c <flatcc_builder_table_add_union_vector@@Base+0xfc>
   3d730:	bl	14038 <__assert_fail@plt>
   3d734:	ldr	r3, [pc, #52]	; 3d770 <flatcc_builder_table_add_union_vector@@Base+0xf0>
   3d738:	mov	r2, #1536	; 0x600
   3d73c:	ldr	r1, [pc, #52]	; 3d778 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   3d740:	ldr	r0, [pc, #56]	; 3d780 <flatcc_builder_table_add_union_vector@@Base+0x100>
   3d744:	bl	14038 <__assert_fail@plt>
   3d748:	ldr	r3, [pc, #32]	; 3d770 <flatcc_builder_table_add_union_vector@@Base+0xf0>
   3d74c:	ldr	r2, [pc, #48]	; 3d784 <flatcc_builder_table_add_union_vector@@Base+0x104>
   3d750:	ldr	r1, [pc, #32]	; 3d778 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   3d754:	ldr	r0, [pc, #44]	; 3d788 <flatcc_builder_table_add_union_vector@@Base+0x108>
   3d758:	bl	14038 <__assert_fail@plt>
   3d75c:	ldr	r3, [pc, #12]	; 3d770 <flatcc_builder_table_add_union_vector@@Base+0xf0>
   3d760:	ldr	r2, [pc, #36]	; 3d78c <flatcc_builder_table_add_union_vector@@Base+0x10c>
   3d764:	ldr	r1, [pc, #12]	; 3d778 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   3d768:	ldr	r0, [pc, #12]	; 3d77c <flatcc_builder_table_add_union_vector@@Base+0xfc>
   3d76c:	bl	14038 <__assert_fail@plt>
   3d770:	andeq	fp, r5, r0, lsl #21
   3d774:	andeq	r0, r0, r8, lsl #12
   3d778:	andeq	fp, r5, r8, asr #21
   3d77c:	muleq	r5, r4, lr
   3d780:	muleq	r5, r4, sp
   3d784:	andeq	r0, r0, r1, lsl #12
   3d788:	andeq	fp, r5, ip, lsr #29
   3d78c:	andeq	r0, r0, r4, lsl #12

0003d790 <flatcc_builder_push_buffer_alignment@@Base>:
   3d790:	mov	r3, r0
   3d794:	mov	r2, #4
   3d798:	ldrh	r0, [r0, #128]	; 0x80
   3d79c:	strh	r2, [r3, #128]	; 0x80
   3d7a0:	bx	lr

0003d7a4 <flatcc_builder_pop_buffer_alignment@@Base>:
   3d7a4:	ldrh	r3, [r0, #128]	; 0x80
   3d7a8:	cmp	r3, r1
   3d7ac:	strhcc	r1, [r0, #128]	; 0x80
   3d7b0:	bx	lr

0003d7b4 <flatcc_builder_get_buffer_alignment@@Base>:
   3d7b4:	ldrh	r0, [r0, #128]	; 0x80
   3d7b8:	bx	lr

0003d7bc <flatcc_builder_set_vtable_clustering@@Base>:
   3d7bc:	clz	r1, r1
   3d7c0:	lsr	r1, r1, #5
   3d7c4:	str	r1, [r0, #180]	; 0xb4
   3d7c8:	bx	lr

0003d7cc <flatcc_builder_set_block_align@@Base>:
   3d7cc:	strh	r1, [r0, #132]	; 0x84
   3d7d0:	bx	lr

0003d7d4 <flatcc_builder_get_level@@Base>:
   3d7d4:	ldr	r0, [r0, #156]	; 0x9c
   3d7d8:	bx	lr

0003d7dc <flatcc_builder_set_max_level@@Base>:
   3d7dc:	ldr	r3, [r0, #160]	; 0xa0
   3d7e0:	str	r1, [r0, #176]	; 0xb0
   3d7e4:	cmp	r1, r3
   3d7e8:	strgt	r1, [r0, #160]	; 0xa0
   3d7ec:	bx	lr

0003d7f0 <flatcc_builder_get_buffer_size@@Base>:
   3d7f0:	ldr	r2, [r0, #140]	; 0x8c
   3d7f4:	ldr	r0, [r0, #136]	; 0x88
   3d7f8:	sub	r0, r2, r0
   3d7fc:	bx	lr

0003d800 <flatcc_builder_get_buffer_start@@Base>:
   3d800:	ldr	r0, [r0, #136]	; 0x88
   3d804:	bx	lr

0003d808 <flatcc_builder_get_buffer_end@@Base>:
   3d808:	ldr	r0, [r0, #140]	; 0x8c
   3d80c:	bx	lr

0003d810 <flatcc_builder_set_vtable_cache_limit@@Base>:
   3d810:	str	r1, [r0, #172]	; 0xac
   3d814:	bx	lr

0003d818 <flatcc_builder_set_identifier@@Base>:
   3d818:	ldr	r3, [pc, #16]	; 3d830 <flatcc_builder_set_identifier@@Base+0x18>
   3d81c:	cmp	r1, #0
   3d820:	moveq	r1, r3
   3d824:	ldr	r3, [r1]
   3d828:	str	r3, [r0, #168]	; 0xa8
   3d82c:	bx	lr
   3d830:	andeq	fp, r5, r0, lsl r4

0003d834 <flatcc_builder_get_type@@Base>:
   3d834:	ldr	r0, [r0, #32]
   3d838:	cmp	r0, #0
   3d83c:	ldrhne	r0, [r0, #14]
   3d840:	bx	lr

0003d844 <flatcc_builder_get_type_at@@Base>:
   3d844:	cmp	r1, #0
   3d848:	ble	3d870 <flatcc_builder_get_type_at@@Base+0x2c>
   3d84c:	ldr	r3, [r0, #156]	; 0x9c
   3d850:	cmp	r1, r3
   3d854:	bgt	3d870 <flatcc_builder_get_type_at@@Base+0x2c>
   3d858:	sub	r1, r1, r3
   3d85c:	ldr	r3, [r0, #32]
   3d860:	add	r1, r1, r1, lsl #3
   3d864:	add	r1, r3, r1, lsl #2
   3d868:	ldrh	r0, [r1, #14]
   3d86c:	bx	lr
   3d870:	mov	r0, #0
   3d874:	bx	lr

0003d878 <flatcc_builder_get_direct_buffer@@Base>:
   3d878:	ldr	r3, [r0, #184]	; 0xb8
   3d87c:	cmp	r3, #0
   3d880:	beq	3d894 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   3d884:	ldr	r2, [r0, #188]	; 0xbc
   3d888:	ldr	r3, [r0, #192]	; 0xc0
   3d88c:	cmp	r2, r3
   3d890:	beq	3d8a8 <flatcc_builder_get_direct_buffer@@Base+0x30>
   3d894:	cmp	r1, #0
   3d898:	movne	r0, #0
   3d89c:	strne	r0, [r1]
   3d8a0:	moveq	r0, r1
   3d8a4:	bx	lr
   3d8a8:	cmp	r1, #0
   3d8ac:	ldrne	r3, [r0, #212]	; 0xd4
   3d8b0:	ldr	r0, [r0, #196]	; 0xc4
   3d8b4:	strne	r3, [r1]
   3d8b8:	bx	lr

0003d8bc <flatcc_builder_copy_buffer@@Base>:
   3d8bc:	ldr	r3, [r0, #184]	; 0xb8
   3d8c0:	cmp	r3, #0
   3d8c4:	beq	3d8e0 <flatcc_builder_copy_buffer@@Base+0x24>
   3d8c8:	push	{r4, lr}
   3d8cc:	add	r0, r0, #188	; 0xbc
   3d8d0:	bl	3df94 <flatcc_emitter_copy_buffer@@Base>
   3d8d4:	cmp	r0, #0
   3d8d8:	popne	{r4, pc}
   3d8dc:	bl	141d0 <__assert_fail@plt+0x198>
   3d8e0:	mov	r0, r3
   3d8e4:	bx	lr

0003d8e8 <flatcc_builder_finalize_buffer@@Base>:
   3d8e8:	push	{r4, r5, r6, lr}
   3d8ec:	cmp	r1, #0
   3d8f0:	ldr	r4, [r0, #140]	; 0x8c
   3d8f4:	ldr	r2, [r0, #136]	; 0x88
   3d8f8:	mov	r5, r0
   3d8fc:	sub	r4, r4, r2
   3d900:	strne	r4, [r1]
   3d904:	mov	r0, r4
   3d908:	bl	13f3c <malloc@plt>
   3d90c:	subs	r6, r0, #0
   3d910:	beq	3d954 <flatcc_builder_finalize_buffer@@Base+0x6c>
   3d914:	ldr	r3, [r5, #184]	; 0xb8
   3d918:	cmp	r3, #0
   3d91c:	beq	3d940 <flatcc_builder_finalize_buffer@@Base+0x58>
   3d920:	mov	r2, r4
   3d924:	add	r0, r5, #188	; 0xbc
   3d928:	mov	r1, r6
   3d92c:	bl	3df94 <flatcc_emitter_copy_buffer@@Base>
   3d930:	cmp	r0, #0
   3d934:	beq	3d968 <flatcc_builder_finalize_buffer@@Base+0x80>
   3d938:	mov	r0, r6
   3d93c:	pop	{r4, r5, r6, pc}
   3d940:	ldr	r3, [pc, #36]	; 3d96c <flatcc_builder_finalize_buffer@@Base+0x84>
   3d944:	ldr	r2, [pc, #36]	; 3d970 <flatcc_builder_finalize_buffer@@Base+0x88>
   3d948:	ldr	r1, [pc, #36]	; 3d974 <flatcc_builder_finalize_buffer@@Base+0x8c>
   3d94c:	ldr	r0, [pc, #36]	; 3d978 <flatcc_builder_finalize_buffer@@Base+0x90>
   3d950:	bl	14038 <__assert_fail@plt>
   3d954:	ldr	r3, [pc, #16]	; 3d96c <flatcc_builder_finalize_buffer@@Base+0x84>
   3d958:	ldr	r2, [pc, #28]	; 3d97c <flatcc_builder_finalize_buffer@@Base+0x94>
   3d95c:	ldr	r1, [pc, #16]	; 3d974 <flatcc_builder_finalize_buffer@@Base+0x8c>
   3d960:	ldr	r0, [pc, #16]	; 3d978 <flatcc_builder_finalize_buffer@@Base+0x90>
   3d964:	bl	14038 <__assert_fail@plt>
   3d968:	bl	141d0 <__assert_fail@plt+0x198>
   3d96c:	andeq	fp, r5, r8, lsr #21
   3d970:	muleq	r0, ip, r7
   3d974:	andeq	fp, r5, r8, asr #21
   3d978:	andeq	sl, r4, r4, asr sp
   3d97c:	muleq	r0, r8, r7

0003d980 <flatcc_builder_finalize_aligned_buffer@@Base>:
   3d980:	push	{r4, r5, r6, r7, lr}
   3d984:	subs	r7, r1, #0
   3d988:	ldrh	r1, [r0, #128]	; 0x80
   3d98c:	ldr	r4, [r0, #140]	; 0x8c
   3d990:	ldr	r3, [r0, #136]	; 0x88
   3d994:	sub	sp, sp, #12
   3d998:	sub	r3, r4, r3
   3d99c:	sub	r4, r1, #1
   3d9a0:	strne	r3, [r7]
   3d9a4:	add	r4, r4, r3
   3d9a8:	mov	r5, r0
   3d9ac:	rsb	r3, r1, #0
   3d9b0:	add	r0, sp, #8
   3d9b4:	cmp	r1, #4
   3d9b8:	mov	ip, #0
   3d9bc:	and	r4, r4, r3
   3d9c0:	movcc	r1, #4
   3d9c4:	mov	r2, r4
   3d9c8:	str	ip, [r0, #-4]!
   3d9cc:	bl	13f90 <posix_memalign@plt>
   3d9d0:	cmp	r0, #0
   3d9d4:	beq	3da04 <flatcc_builder_finalize_aligned_buffer@@Base+0x84>
   3d9d8:	ldr	r0, [sp, #4]
   3d9dc:	cmp	r0, #0
   3d9e0:	beq	3d9e8 <flatcc_builder_finalize_aligned_buffer@@Base+0x68>
   3d9e4:	bl	13ed0 <free@plt>
   3d9e8:	cmp	r7, #0
   3d9ec:	moveq	r6, r7
   3d9f0:	movne	r6, #0
   3d9f4:	strne	r6, [r7]
   3d9f8:	mov	r0, r6
   3d9fc:	add	sp, sp, #12
   3da00:	pop	{r4, r5, r6, r7, pc}
   3da04:	ldr	r6, [sp, #4]
   3da08:	cmp	r6, #0
   3da0c:	beq	3d9e8 <flatcc_builder_finalize_aligned_buffer@@Base+0x68>
   3da10:	ldr	r3, [r5, #184]	; 0xb8
   3da14:	cmp	r3, #0
   3da18:	beq	3da38 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   3da1c:	mov	r2, r4
   3da20:	add	r0, r5, #188	; 0xbc
   3da24:	mov	r1, r6
   3da28:	bl	3df94 <flatcc_emitter_copy_buffer@@Base>
   3da2c:	cmp	r0, #0
   3da30:	bne	3d9f8 <flatcc_builder_finalize_aligned_buffer@@Base+0x78>
   3da34:	bl	141d0 <__assert_fail@plt+0x198>
   3da38:	mov	r0, r6
   3da3c:	b	3d9e4 <flatcc_builder_finalize_aligned_buffer@@Base+0x64>

0003da40 <flatcc_builder_aligned_alloc@@Base>:
   3da40:	push	{r4, lr}
   3da44:	sub	sp, sp, #8
   3da48:	add	r3, sp, #8
   3da4c:	cmp	r0, #4
   3da50:	mov	r4, #0
   3da54:	mov	r2, r1
   3da58:	str	r4, [r3, #-4]!
   3da5c:	movcs	r1, r0
   3da60:	movcc	r1, #4
   3da64:	mov	r0, r3
   3da68:	bl	13f90 <posix_memalign@plt>
   3da6c:	cmp	r0, r4
   3da70:	ldr	r0, [sp, #4]
   3da74:	beq	3da88 <flatcc_builder_aligned_alloc@@Base+0x48>
   3da78:	cmp	r0, #0
   3da7c:	beq	3da88 <flatcc_builder_aligned_alloc@@Base+0x48>
   3da80:	bl	13ed0 <free@plt>
   3da84:	mov	r0, r4
   3da88:	add	sp, sp, #8
   3da8c:	pop	{r4, pc}

0003da90 <flatcc_builder_aligned_free@@Base>:
   3da90:	b	13ed0 <free@plt>

0003da94 <flatcc_builder_get_emit_context@@Base>:
   3da94:	ldr	r0, [r0, #36]	; 0x24
   3da98:	bx	lr

0003da9c <flatcc_emitter_recycle_page@@Base>:
   3da9c:	ldr	r3, [r0]
   3daa0:	cmp	r3, r1
   3daa4:	beq	3daec <flatcc_emitter_recycle_page@@Base+0x50>
   3daa8:	ldr	r2, [r0, #4]
   3daac:	cmp	r1, r2
   3dab0:	beq	3daec <flatcc_emitter_recycle_page@@Base+0x50>
   3dab4:	ldr	ip, [r1, #2944]	; 0xb80
   3dab8:	ldr	r2, [r1, #2948]	; 0xb84
   3dabc:	push	{lr}		; (str lr, [sp, #-4]!)
   3dac0:	mov	r0, #0
   3dac4:	str	r2, [ip, #2948]	; 0xb84
   3dac8:	ldr	r2, [r3, #2948]	; 0xb84
   3dacc:	ldr	lr, [r1, #2948]	; 0xb84
   3dad0:	str	ip, [lr, #2944]	; 0xb80
   3dad4:	str	r3, [r1, #2944]	; 0xb80
   3dad8:	str	r2, [r1, #2948]	; 0xb84
   3dadc:	str	r1, [r2, #2944]	; 0xb80
   3dae0:	ldr	r3, [r1, #2944]	; 0xb80
   3dae4:	str	r1, [r3, #2948]	; 0xb84
   3dae8:	pop	{pc}		; (ldr pc, [sp], #4)
   3daec:	mvn	r0, #0
   3daf0:	bx	lr

0003daf4 <flatcc_emitter_reset@@Base>:
   3daf4:	ldr	r2, [r0]
   3daf8:	cmp	r2, #0
   3dafc:	bxeq	lr
   3db00:	ldr	r3, [r0, #32]
   3db04:	mov	r1, #1472	; 0x5c0
   3db08:	push	{r4, lr}
   3db0c:	cmp	r3, #0
   3db10:	str	r1, [r0, #12]
   3db14:	str	r1, [r0, #20]
   3db18:	ldr	r1, [r0, #24]
   3db1c:	add	ip, r2, #1472	; 0x5c0
   3db20:	moveq	r3, r1
   3db24:	stmib	r0, {r2, ip}
   3db28:	str	ip, [r0, #16]
   3db2c:	add	ip, r3, r3, lsl #1
   3db30:	lsr	r3, r1, #2
   3db34:	add	r3, r3, ip, lsr #2
   3db38:	ldr	ip, [r0, #28]
   3db3c:	ldr	lr, [pc, #104]	; 3dbac <flatcc_emitter_reset@@Base+0xb8>
   3db40:	cmp	ip, r3, lsl #1
   3db44:	mov	r1, #0
   3db48:	str	lr, [r2, #2952]	; 0xb88
   3db4c:	str	r3, [r0, #32]
   3db50:	str	r1, [r0, #24]
   3db54:	popls	{r4, pc}
   3db58:	ldr	r3, [r2, #2944]	; 0xb80
   3db5c:	mov	r4, r0
   3db60:	cmp	r2, r3
   3db64:	popeq	{r4, pc}
   3db68:	ldr	r1, [r3, #2944]	; 0xb80
   3db6c:	mov	r0, r3
   3db70:	str	r1, [r2, #2944]	; 0xb80
   3db74:	ldr	r3, [r3, #2944]	; 0xb80
   3db78:	str	r2, [r3, #2948]	; 0xb84
   3db7c:	bl	13ed0 <free@plt>
   3db80:	ldr	r3, [r4, #28]
   3db84:	ldr	r2, [r4, #32]
   3db88:	sub	r3, r3, #2944	; 0xb80
   3db8c:	str	r3, [r4, #28]
   3db90:	cmp	r3, r2, lsl #1
   3db94:	popls	{r4, pc}
   3db98:	ldm	r4, {r1, r2}
   3db9c:	ldr	r3, [r2, #2944]	; 0xb80
   3dba0:	cmp	r3, r1
   3dba4:	bne	3db68 <flatcc_emitter_reset@@Base+0x74>
   3dba8:	pop	{r4, pc}
   3dbac:			; <UNDEFINED> instruction: 0xfffffa40

0003dbb0 <flatcc_emitter_clear@@Base>:
   3dbb0:	ldr	r3, [r0]
   3dbb4:	cmp	r3, #0
   3dbb8:	bxeq	lr
   3dbbc:	ldr	r2, [r3, #2948]	; 0xb84
   3dbc0:	mov	r1, #0
   3dbc4:	push	{r4, r5, r6, lr}
   3dbc8:	mov	r5, r0
   3dbcc:	str	r1, [r2, #2944]	; 0xb80
   3dbd0:	ldr	r4, [r3, #2944]	; 0xb80
   3dbd4:	cmp	r4, r1
   3dbd8:	bne	3dbe4 <flatcc_emitter_clear@@Base+0x34>
   3dbdc:	b	3dc14 <flatcc_emitter_clear@@Base+0x64>
   3dbe0:	mov	r4, r3
   3dbe4:	ldr	r0, [r4, #2948]	; 0xb84
   3dbe8:	bl	13ed0 <free@plt>
   3dbec:	ldr	r3, [r4, #2944]	; 0xb80
   3dbf0:	cmp	r3, #0
   3dbf4:	bne	3dbe0 <flatcc_emitter_clear@@Base+0x30>
   3dbf8:	mov	r0, r4
   3dbfc:	bl	13ed0 <free@plt>
   3dc00:	mov	r0, r5
   3dc04:	mov	r2, #36	; 0x24
   3dc08:	mov	r1, #0
   3dc0c:	pop	{r4, r5, r6, lr}
   3dc10:	b	13f9c <memset@plt>
   3dc14:	mov	r4, r3
   3dc18:	b	3dbf8 <flatcc_emitter_clear@@Base+0x48>

0003dc1c <flatcc_emitter@@Base>:
   3dc1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3dc20:	sub	sp, sp, #12
   3dc24:	mov	r5, r0
   3dc28:	ldr	ip, [sp, #48]	; 0x30
   3dc2c:	ldr	r0, [r0, #24]
   3dc30:	cmp	r3, #0
   3dc34:	add	r0, r0, ip
   3dc38:	str	r0, [r5, #24]
   3dc3c:	blt	3de04 <flatcc_emitter@@Base+0x1e8>
   3dc40:	ldr	r0, [r5, #20]
   3dc44:	cmp	ip, r0
   3dc48:	bls	3dcd8 <flatcc_emitter@@Base+0xbc>
   3dc4c:	cmp	r2, #0
   3dc50:	addne	r7, r1, #8
   3dc54:	movne	r8, r2
   3dc58:	movne	r9, #2944	; 0xb80
   3dc5c:	beq	3dccc <flatcc_emitter@@Base+0xb0>
   3dc60:	ldr	r6, [r7, #-4]
   3dc64:	ldr	sl, [r7, #-8]
   3dc68:	cmp	r6, #0
   3dc6c:	movne	r4, r0
   3dc70:	beq	3dcc0 <flatcc_emitter@@Base+0xa4>
   3dc74:	cmp	r6, r4
   3dc78:	bls	3dd20 <flatcc_emitter@@Base+0x104>
   3dc7c:	cmp	r4, #0
   3dc80:	beq	3dd2c <flatcc_emitter@@Base+0x110>
   3dc84:	sub	r6, r6, r4
   3dc88:	mov	r2, r4
   3dc8c:	mov	r1, sl
   3dc90:	ldr	r0, [r5, #16]
   3dc94:	bl	13edc <memcpy@plt>
   3dc98:	ldr	r0, [r5, #20]
   3dc9c:	ldr	r3, [r5, #16]
   3dca0:	add	sl, sl, r4
   3dca4:	add	r3, r3, r4
   3dca8:	cmp	r6, #0
   3dcac:	sub	r4, r0, r4
   3dcb0:	str	r3, [r5, #16]
   3dcb4:	str	r4, [r5, #20]
   3dcb8:	mov	r0, r4
   3dcbc:	bne	3dc74 <flatcc_emitter@@Base+0x58>
   3dcc0:	subs	r8, r8, #1
   3dcc4:	add	r7, r7, #8
   3dcc8:	bne	3dc60 <flatcc_emitter@@Base+0x44>
   3dccc:	mov	r0, #0
   3dcd0:	add	sp, sp, #12
   3dcd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dcd8:	ldr	r3, [r5, #16]
   3dcdc:	sub	r0, r0, ip
   3dce0:	add	ip, r3, ip
   3dce4:	str	r0, [r5, #20]
   3dce8:	str	ip, [r5, #16]
   3dcec:	cmp	r2, #0
   3dcf0:	addne	r4, r1, #8
   3dcf4:	movne	r7, r2
   3dcf8:	beq	3dccc <flatcc_emitter@@Base+0xb0>
   3dcfc:	ldmdb	r4, {r1, r2}
   3dd00:	mov	r0, r3
   3dd04:	bl	13edc <memcpy@plt>
   3dd08:	ldr	r2, [r4, #-4]
   3dd0c:	subs	r7, r7, #1
   3dd10:	add	r4, r4, #8
   3dd14:	add	r3, r0, r2
   3dd18:	bne	3dcfc <flatcc_emitter@@Base+0xe0>
   3dd1c:	b	3dccc <flatcc_emitter@@Base+0xb0>
   3dd20:	mov	r4, r6
   3dd24:	mov	r6, #0
   3dd28:	b	3dc88 <flatcc_emitter@@Base+0x6c>
   3dd2c:	ldr	r4, [r5, #4]
   3dd30:	cmp	r4, #0
   3dd34:	beq	3dda4 <flatcc_emitter@@Base+0x188>
   3dd38:	ldr	fp, [r4, #2944]	; 0xb80
   3dd3c:	ldr	r3, [r5]
   3dd40:	cmp	fp, r3
   3dd44:	beq	3dd6c <flatcc_emitter@@Base+0x150>
   3dd48:	str	fp, [r5, #4]
   3dd4c:	ldr	r3, [fp, #2948]	; 0xb84
   3dd50:	mov	r4, #2944	; 0xb80
   3dd54:	str	fp, [r5, #16]
   3dd58:	ldr	r3, [r3, #2952]	; 0xb88
   3dd5c:	str	r9, [r5, #20]
   3dd60:	add	r3, r3, r4
   3dd64:	str	r3, [fp, #2952]	; 0xb88
   3dd68:	b	3dc74 <flatcc_emitter@@Base+0x58>
   3dd6c:	ldr	r0, [pc, #540]	; 3df90 <flatcc_emitter@@Base+0x374>
   3dd70:	bl	13f3c <malloc@plt>
   3dd74:	cmp	r0, #0
   3dd78:	beq	3ddb4 <flatcc_emitter@@Base+0x198>
   3dd7c:	ldr	r3, [r5, #28]
   3dd80:	str	fp, [r0, #2944]	; 0xb80
   3dd84:	add	r3, r3, #2944	; 0xb80
   3dd88:	str	r4, [r0, #2948]	; 0xb84
   3dd8c:	str	r3, [r5, #28]
   3dd90:	str	r0, [fp, #2948]	; 0xb84
   3dd94:	str	r0, [r4, #2944]	; 0xb80
   3dd98:	mov	fp, r0
   3dd9c:	str	r0, [r5, #4]
   3dda0:	b	3dd4c <flatcc_emitter@@Base+0x130>
   3dda4:	ldr	r0, [pc, #484]	; 3df90 <flatcc_emitter@@Base+0x374>
   3dda8:	bl	13f3c <malloc@plt>
   3ddac:	cmp	r0, #0
   3ddb0:	bne	3ddc0 <flatcc_emitter@@Base+0x1a4>
   3ddb4:	mvn	r0, #0
   3ddb8:	add	sp, sp, #12
   3ddbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ddc0:	mov	r2, #1472	; 0x5c0
   3ddc4:	ldr	r3, [r5, #28]
   3ddc8:	str	r2, [r5, #12]
   3ddcc:	str	r2, [r5, #20]
   3ddd0:	sub	r2, r2, #2944	; 0xb80
   3ddd4:	str	r2, [r0, #2952]	; 0xb88
   3ddd8:	str	r0, [r5]
   3dddc:	add	r3, r3, #2944	; 0xb80
   3dde0:	str	r0, [r5, #4]
   3dde4:	str	r0, [r0, #2944]	; 0xb80
   3dde8:	str	r0, [r0, #2948]	; 0xb84
   3ddec:	add	r0, r0, #1472	; 0x5c0
   3ddf0:	str	r0, [r5, #8]
   3ddf4:	str	r0, [r5, #16]
   3ddf8:	str	r3, [r5, #28]
   3ddfc:	mov	r4, #1472	; 0x5c0
   3de00:	b	3dc74 <flatcc_emitter@@Base+0x58>
   3de04:	ldr	r0, [r5, #12]
   3de08:	cmp	ip, r0
   3de0c:	bls	3de8c <flatcc_emitter@@Base+0x270>
   3de10:	add	r6, r1, r2, lsl #3
   3de14:	mov	r7, r2
   3de18:	mov	r9, #2944	; 0xb80
   3de1c:	mov	r8, #0
   3de20:	cmp	r7, #0
   3de24:	beq	3dccc <flatcc_emitter@@Base+0xb0>
   3de28:	ldr	r4, [r6, #-4]
   3de2c:	ldr	sl, [r6, #-8]
   3de30:	cmp	r4, #0
   3de34:	add	sl, sl, r4
   3de38:	beq	3de80 <flatcc_emitter@@Base+0x264>
   3de3c:	ldr	r2, [r5, #12]
   3de40:	cmp	r2, r4
   3de44:	bcs	3dea4 <flatcc_emitter@@Base+0x288>
   3de48:	cmp	r2, #0
   3de4c:	beq	3deb4 <flatcc_emitter@@Base+0x298>
   3de50:	sub	r4, r4, r2
   3de54:	mov	r1, r8
   3de58:	ldr	r0, [r5, #8]
   3de5c:	rsb	r3, r2, #0
   3de60:	add	r0, r0, r3
   3de64:	add	sl, sl, r3
   3de68:	str	r1, [r5, #12]
   3de6c:	str	r0, [r5, #8]
   3de70:	mov	r1, sl
   3de74:	bl	13edc <memcpy@plt>
   3de78:	cmp	r4, #0
   3de7c:	bne	3de3c <flatcc_emitter@@Base+0x220>
   3de80:	sub	r6, r6, #8
   3de84:	sub	r7, r7, #1
   3de88:	b	3de20 <flatcc_emitter@@Base+0x204>
   3de8c:	ldr	r3, [r5, #8]
   3de90:	sub	r0, r0, ip
   3de94:	sub	r3, r3, ip
   3de98:	str	r0, [r5, #12]
   3de9c:	str	r3, [r5, #8]
   3dea0:	b	3dcec <flatcc_emitter@@Base+0xd0>
   3dea4:	sub	r1, r2, r4
   3dea8:	mov	r2, r4
   3deac:	mov	r4, #0
   3deb0:	b	3de58 <flatcc_emitter@@Base+0x23c>
   3deb4:	ldr	r3, [r5]
   3deb8:	cmp	r3, #0
   3debc:	beq	3df40 <flatcc_emitter@@Base+0x324>
   3dec0:	ldr	fp, [r3, #2948]	; 0xb84
   3dec4:	ldr	r2, [r5, #4]
   3dec8:	cmp	fp, r2
   3decc:	beq	3df00 <flatcc_emitter@@Base+0x2e4>
   3ded0:	ldr	r3, [r3, #2952]	; 0xb88
   3ded4:	sub	r3, r3, #2944	; 0xb80
   3ded8:	str	r3, [fp, #2952]	; 0xb88
   3dedc:	str	fp, [r5]
   3dee0:	ldr	r3, [fp, #2944]	; 0xb80
   3dee4:	add	r2, fp, #2944	; 0xb80
   3dee8:	str	r9, [r5, #12]
   3deec:	ldr	r3, [r3, #2952]	; 0xb88
   3def0:	str	r2, [r5, #8]
   3def4:	sub	r3, r3, #2944	; 0xb80
   3def8:	str	r3, [fp, #2952]	; 0xb88
   3defc:	b	3de3c <flatcc_emitter@@Base+0x220>
   3df00:	ldr	r0, [pc, #136]	; 3df90 <flatcc_emitter@@Base+0x374>
   3df04:	str	r3, [sp, #4]
   3df08:	bl	13f3c <malloc@plt>
   3df0c:	ldr	r3, [sp, #4]
   3df10:	cmp	r0, #0
   3df14:	beq	3ddb4 <flatcc_emitter@@Base+0x198>
   3df18:	ldr	r2, [r5, #28]
   3df1c:	str	fp, [r0, #2948]	; 0xb84
   3df20:	add	r2, r2, #2944	; 0xb80
   3df24:	str	r3, [r0, #2944]	; 0xb80
   3df28:	str	r2, [r5, #28]
   3df2c:	str	r0, [r3, #2948]	; 0xb84
   3df30:	str	r0, [fp, #2944]	; 0xb80
   3df34:	str	r0, [r5]
   3df38:	mov	fp, r0
   3df3c:	b	3dee0 <flatcc_emitter@@Base+0x2c4>
   3df40:	ldr	r0, [pc, #72]	; 3df90 <flatcc_emitter@@Base+0x374>
   3df44:	bl	13f3c <malloc@plt>
   3df48:	cmp	r0, #0
   3df4c:	beq	3ddb4 <flatcc_emitter@@Base+0x198>
   3df50:	mov	r2, #1472	; 0x5c0
   3df54:	ldr	r3, [r5, #28]
   3df58:	str	r2, [r5, #12]
   3df5c:	str	r2, [r5, #20]
   3df60:	sub	r2, r2, #2944	; 0xb80
   3df64:	str	r2, [r0, #2952]	; 0xb88
   3df68:	str	r0, [r5]
   3df6c:	add	r3, r3, #2944	; 0xb80
   3df70:	str	r0, [r5, #4]
   3df74:	str	r0, [r0, #2944]	; 0xb80
   3df78:	str	r0, [r0, #2948]	; 0xb84
   3df7c:	add	r0, r0, #1472	; 0x5c0
   3df80:	str	r0, [r5, #8]
   3df84:	str	r0, [r5, #16]
   3df88:	str	r3, [r5, #28]
   3df8c:	b	3de3c <flatcc_emitter@@Base+0x220>
   3df90:	andeq	r0, r0, ip, lsl #23

0003df94 <flatcc_emitter_copy_buffer@@Base>:
   3df94:	ldr	ip, [r0, #24]
   3df98:	cmp	ip, r2
   3df9c:	bhi	3e038 <flatcc_emitter_copy_buffer@@Base+0xa4>
   3dfa0:	ldr	r2, [r0]
   3dfa4:	cmp	r2, #0
   3dfa8:	beq	3e038 <flatcc_emitter_copy_buffer@@Base+0xa4>
   3dfac:	mov	r3, r1
   3dfb0:	ldr	r1, [r0, #4]
   3dfb4:	push	{r4, r5, r6, lr}
   3dfb8:	cmp	r2, r1
   3dfbc:	mov	r5, r0
   3dfc0:	beq	3e044 <flatcc_emitter_copy_buffer@@Base+0xb0>
   3dfc4:	ldr	r4, [r0, #12]
   3dfc8:	ldr	r1, [r5, #8]
   3dfcc:	rsb	r4, r4, #2944	; 0xb80
   3dfd0:	mov	r2, r4
   3dfd4:	mov	r0, r3
   3dfd8:	bl	13edc <memcpy@plt>
   3dfdc:	ldr	r2, [r5]
   3dfe0:	ldr	r1, [r5, #4]
   3dfe4:	add	r3, r0, r4
   3dfe8:	ldr	r4, [r2, #2944]	; 0xb80
   3dfec:	cmp	r4, r1
   3dff0:	beq	3e01c <flatcc_emitter_copy_buffer@@Base+0x88>
   3dff4:	mov	r6, #2944	; 0xb80
   3dff8:	mov	r1, r4
   3dffc:	mov	r0, r3
   3e000:	mov	r2, r6
   3e004:	bl	13edc <memcpy@plt>
   3e008:	ldr	r4, [r4, #2944]	; 0xb80
   3e00c:	ldr	r1, [r5, #4]
   3e010:	cmp	r1, r4
   3e014:	add	r3, r0, #2944	; 0xb80
   3e018:	bne	3dff8 <flatcc_emitter_copy_buffer@@Base+0x64>
   3e01c:	ldr	r2, [r5, #20]
   3e020:	mov	r0, r3
   3e024:	rsb	r2, r2, #2944	; 0xb80
   3e028:	bl	13edc <memcpy@plt>
   3e02c:	mov	r3, r0
   3e030:	mov	r0, r3
   3e034:	pop	{r4, r5, r6, pc}
   3e038:	mov	r3, #0
   3e03c:	mov	r0, r3
   3e040:	bx	lr
   3e044:	ldr	r1, [r0, #8]
   3e048:	mov	r2, ip
   3e04c:	mov	r0, r3
   3e050:	bl	13edc <memcpy@plt>
   3e054:	mov	r3, r0
   3e058:	b	3e030 <flatcc_emitter_copy_buffer@@Base+0x9c>
   3e05c:	andeq	r0, r0, r0

0003e060 <cmetrohash64_1@@Base>:
   3e060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e064:	sub	sp, sp, #92	; 0x5c
   3e068:	add	r5, pc, #616	; 0x268
   3e06c:	ldrd	r4, [r5]
   3e070:	ldr	ip, [sp, #128]	; 0x80
   3e074:	ldr	r1, [pc, #624]	; 3e2ec <cmetrohash64_1@@Base+0x28c>
   3e078:	adds	r4, r4, r2
   3e07c:	adc	r5, r5, r3
   3e080:	umlal	r4, r5, r1, ip
   3e084:	cmp	r3, #0
   3e088:	cmpeq	r2, #31
   3e08c:	add	r3, r0, r2
   3e090:	str	r3, [sp, #76]	; 0x4c
   3e094:	strd	r4, [sp, #56]	; 0x38
   3e098:	bls	3e454 <cmetrohash64_1@@Base+0x3f4>
   3e09c:	ldr	fp, [pc, #580]	; 3e2e8 <cmetrohash64_1@@Base+0x288>
   3e0a0:	mov	lr, r1
   3e0a4:	str	fp, [sp, #68]	; 0x44
   3e0a8:	mov	sl, r4
   3e0ac:	mov	fp, r5
   3e0b0:	sub	r3, r3, #32
   3e0b4:	str	r3, [sp, #72]	; 0x48
   3e0b8:	strd	r4, [sp]
   3e0bc:	strd	r4, [sp, #8]
   3e0c0:	strd	r4, [sp, #48]	; 0x30
   3e0c4:	ldrb	r1, [r0, #1]
   3e0c8:	ldrb	r6, [r0]
   3e0cc:	ldrb	r2, [r0, #9]
   3e0d0:	ldrb	r4, [r0, #10]
   3e0d4:	orr	r6, r6, r1, lsl #8
   3e0d8:	ldrb	r1, [r0, #8]
   3e0dc:	ldrb	r3, [r0, #17]
   3e0e0:	ldrb	r5, [r0, #5]
   3e0e4:	orr	r1, r1, r2, lsl #8
   3e0e8:	orr	r1, r1, r4, lsl #16
   3e0ec:	ldrb	r4, [r0, #16]
   3e0f0:	ldrb	r2, [r0, #4]
   3e0f4:	ldrb	ip, [r0, #2]
   3e0f8:	orr	r4, r4, r3, lsl #8
   3e0fc:	ldrb	r3, [r0, #11]
   3e100:	ldrb	r7, [r0, #3]
   3e104:	orr	r2, r2, r5, lsl #8
   3e108:	ldrb	r5, [r0, #6]
   3e10c:	orr	r3, r1, r3, lsl #24
   3e110:	orr	r6, r6, ip, lsl #16
   3e114:	ldrb	ip, [r0, #25]
   3e118:	ldrb	r8, [r0, #18]
   3e11c:	str	r3, [sp, #64]	; 0x40
   3e120:	orr	r2, r2, r5, lsl #16
   3e124:	ldrb	r3, [r0, #24]
   3e128:	ldrb	r5, [r0, #7]
   3e12c:	orr	r6, r6, r7, lsl #24
   3e130:	ldrb	r1, [r0, #19]
   3e134:	umull	r6, r7, r6, lr
   3e138:	ldrb	r9, [r0, #23]
   3e13c:	orr	r3, r3, ip, lsl #8
   3e140:	ldrb	ip, [r0, #26]
   3e144:	orr	r2, r2, r5, lsl #24
   3e148:	orr	r4, r4, r8, lsl #16
   3e14c:	orr	r4, r4, r1, lsl #24
   3e150:	ldrb	r1, [r0, #27]
   3e154:	mla	r7, lr, r2, r7
   3e158:	ldrb	r2, [r0, #21]
   3e15c:	orr	r3, r3, ip, lsl #16
   3e160:	ldrb	ip, [r0, #20]
   3e164:	ldrb	r5, [r0, #13]
   3e168:	orr	r3, r3, r1, lsl #24
   3e16c:	ldrb	r1, [r0, #12]
   3e170:	orr	ip, ip, r2, lsl #8
   3e174:	ldrb	r2, [r0, #22]
   3e178:	adds	r6, r6, sl
   3e17c:	orr	r1, r1, r5, lsl #8
   3e180:	ldrb	r5, [r0, #14]
   3e184:	adc	r7, r7, fp
   3e188:	ldrb	r8, [r0, #29]
   3e18c:	lsr	sl, r6, #29
   3e190:	orr	ip, ip, r2, lsl #16
   3e194:	ldrb	r2, [r0, #28]
   3e198:	orr	sl, sl, r7, lsl #3
   3e19c:	orr	r1, r1, r5, lsl #16
   3e1a0:	str	sl, [sp, #16]
   3e1a4:	ldrb	r5, [r0, #15]
   3e1a8:	orr	ip, ip, r9, lsl #24
   3e1ac:	ldrb	r9, [r0, #30]
   3e1b0:	orr	r2, r2, r8, lsl #8
   3e1b4:	ldrb	r8, [r0, #31]
   3e1b8:	orr	r1, r1, r5, lsl #24
   3e1bc:	orr	r2, r2, r9, lsl #16
   3e1c0:	lsr	r5, r7, #29
   3e1c4:	orr	r5, r5, r6, lsl #3
   3e1c8:	orr	r2, r2, r8, lsl #24
   3e1cc:	ldr	r6, [sp, #64]	; 0x40
   3e1d0:	ldr	r8, [sp, #68]	; 0x44
   3e1d4:	str	r5, [sp, #20]
   3e1d8:	ldr	r5, [pc, #256]	; 3e2e0 <cmetrohash64_1@@Base+0x280>
   3e1dc:	umull	r6, r7, r6, r8
   3e1e0:	umull	r4, r5, r4, r5
   3e1e4:	mla	r7, r8, r1, r7
   3e1e8:	ldr	r9, [pc, #240]	; 3e2e0 <cmetrohash64_1@@Base+0x280>
   3e1ec:	ldr	r1, [pc, #240]	; 3e2e4 <cmetrohash64_1@@Base+0x284>
   3e1f0:	ldrd	sl, [sp, #16]
   3e1f4:	mla	r5, r9, ip, r5
   3e1f8:	umull	r8, r9, r3, r1
   3e1fc:	mla	r9, r1, r2, r9
   3e200:	ldrd	r2, [sp, #48]	; 0x30
   3e204:	add	r0, r0, #32
   3e208:	adds	r2, r2, r6
   3e20c:	adc	r3, r3, r7
   3e210:	mov	r6, r2
   3e214:	mov	r7, r3
   3e218:	ldrd	r2, [sp, #8]
   3e21c:	adds	r2, r2, r4
   3e220:	adc	r3, r3, r5
   3e224:	mov	r4, r2
   3e228:	mov	r5, r3
   3e22c:	ldrd	r2, [sp]
   3e230:	adds	r2, r2, r8
   3e234:	mov	r8, r2
   3e238:	lsr	r2, r6, #29
   3e23c:	orr	r1, r2, r7, lsl #3
   3e240:	adc	r3, r3, r9
   3e244:	str	r1, [sp, #24]
   3e248:	lsr	r1, r7, #29
   3e24c:	mov	r9, r3
   3e250:	orr	r1, r1, r6, lsl #3
   3e254:	lsr	r3, r4, #29
   3e258:	ldrd	r6, [sp, #8]
   3e25c:	orr	r3, r3, r5, lsl #3
   3e260:	lsr	r2, r8, #29
   3e264:	str	r3, [sp, #32]
   3e268:	lsr	r3, r5, #29
   3e26c:	adds	sl, sl, r6
   3e270:	orr	r3, r3, r4, lsl #3
   3e274:	str	r1, [sp, #28]
   3e278:	orr	r1, r2, r9, lsl #3
   3e27c:	lsr	r2, r9, #29
   3e280:	adc	fp, fp, r7
   3e284:	ldrd	r4, [sp]
   3e288:	str	r3, [sp, #36]	; 0x24
   3e28c:	ldrd	r6, [sp, #24]
   3e290:	orr	r3, r2, r8, lsl #3
   3e294:	str	r3, [sp, #44]	; 0x2c
   3e298:	ldrd	r2, [sp, #32]
   3e29c:	adds	r6, r6, r4
   3e2a0:	adc	r7, r7, r5
   3e2a4:	adds	r2, r2, sl
   3e2a8:	adc	r3, r3, fp
   3e2ac:	str	r1, [sp, #40]	; 0x28
   3e2b0:	strd	r2, [sp, #8]
   3e2b4:	ldrd	r2, [sp, #40]	; 0x28
   3e2b8:	strd	r6, [sp, #48]	; 0x30
   3e2bc:	adds	r2, r2, r6
   3e2c0:	adc	r3, r3, r7
   3e2c4:	strd	r2, [sp]
   3e2c8:	ldr	r3, [sp, #72]	; 0x48
   3e2cc:	cmp	r3, r0
   3e2d0:	bcs	3e0c4 <cmetrohash64_1@@Base+0x64>
   3e2d4:	b	3e2f0 <cmetrohash64_1@@Base+0x290>
   3e2d8:	svcge	0x00065edb
   3e2dc:	rscvs	r5, r2, fp, lsr sp
   3e2e0:	blvc	ff7ee3d4 <__bss_end__@@Base+0xff7812e0>
   3e2e4:	svccs	0x005870a5
   3e2e8:			; <UNDEFINED> instruction: 0x8648dbdb
   3e2ec:	ldmdagt	sl!, {r0, r5, r6, r7, r8, ip, pc}
   3e2f0:	ldrd	r4, [sp]
   3e2f4:	mov	r7, fp
   3e2f8:	ldr	fp, [sp, #68]	; 0x44
   3e2fc:	adds	r2, sl, r4
   3e300:	adc	r3, r7, r5
   3e304:	umull	r4, r5, r2, lr
   3e308:	ldrd	r8, [sp, #8]
   3e30c:	mla	r5, lr, r3, r5
   3e310:	ldrd	r2, [sp, #48]	; 0x30
   3e314:	mov	r6, sl
   3e318:	adds	r2, r2, r4
   3e31c:	adc	r3, r3, r5
   3e320:	mov	r4, r2
   3e324:	lsl	r2, r2, #31
   3e328:	orr	r2, r2, r3, lsr #1
   3e32c:	lsl	r1, r3, #31
   3e330:	umull	r2, r3, r2, fp
   3e334:	strd	r6, [sp, #8]
   3e338:	orr	r4, r1, r4, lsr #1
   3e33c:	eor	r8, r8, r2
   3e340:	mla	r3, fp, r4, r3
   3e344:	ldrd	r4, [sp, #48]	; 0x30
   3e348:	eor	r9, r9, r3
   3e34c:	adds	r4, r4, r8
   3e350:	adc	r5, r5, r9
   3e354:	umull	r2, r3, r4, fp
   3e358:	mla	r3, fp, r5, r3
   3e35c:	adds	r4, sl, r2
   3e360:	adc	r5, r7, r3
   3e364:	lsl	r6, r4, #31
   3e368:	lsl	r3, r5, #31
   3e36c:	orr	r2, r3, r4, lsr #1
   3e370:	orr	r6, r6, r5, lsr #1
   3e374:	ldrd	r4, [sp, #8]
   3e378:	umull	r6, r7, r6, lr
   3e37c:	adds	r4, r4, r8
   3e380:	adc	r5, r5, r9
   3e384:	mla	r7, lr, r2, r7
   3e388:	strd	r4, [sp, #16]
   3e38c:	ldrd	r2, [sp, #8]
   3e390:	ldrd	r4, [sp, #48]	; 0x30
   3e394:	ldr	r1, [sp, #20]
   3e398:	eor	r2, r2, r4
   3e39c:	eor	r3, r3, r5
   3e3a0:	strd	r2, [sp, #8]
   3e3a4:	ldrd	r2, [sp]
   3e3a8:	eor	r2, r2, r6
   3e3ac:	adds	r4, r4, r2
   3e3b0:	eor	r3, r3, r7
   3e3b4:	adc	r5, r5, r3
   3e3b8:	mov	r7, r3
   3e3bc:	ldr	r3, [sp, #16]
   3e3c0:	mov	r6, r2
   3e3c4:	strd	r6, [sp]
   3e3c8:	umull	r6, r7, r3, lr
   3e3cc:	umull	r2, r3, r4, fp
   3e3d0:	mla	r7, lr, r1, r7
   3e3d4:	mla	r3, fp, r5, r3
   3e3d8:	ldrd	r4, [sp]
   3e3dc:	adds	r4, r4, r6
   3e3e0:	adc	r5, r5, r7
   3e3e4:	adds	r2, r2, r8
   3e3e8:	adc	r3, r3, r9
   3e3ec:	mov	r6, r4
   3e3f0:	lsl	r8, r4, #31
   3e3f4:	lsl	r4, r2, #31
   3e3f8:	orr	r8, r8, r5, lsr #1
   3e3fc:	orr	r4, r4, r3, lsr #1
   3e400:	mov	r7, r5
   3e404:	umull	r8, r9, r8, fp
   3e408:	umull	r4, r5, r4, lr
   3e40c:	lsl	r3, r3, #31
   3e410:	lsl	r1, r7, #31
   3e414:	orr	r2, r3, r2, lsr #1
   3e418:	orr	r6, r1, r6, lsr #1
   3e41c:	mla	r5, lr, r2, r5
   3e420:	mla	r9, fp, r6, r9
   3e424:	ldrd	r2, [sp, #8]
   3e428:	eor	r2, r2, r8
   3e42c:	eor	r3, r3, r9
   3e430:	mov	r8, r2
   3e434:	mov	r9, r3
   3e438:	ldrd	r2, [sp, #56]	; 0x38
   3e43c:	eor	r8, r8, r4
   3e440:	eor	r9, r9, r5
   3e444:	adds	r2, r2, r8
   3e448:	adc	r3, r3, r9
   3e44c:	strd	r2, [sp, #56]	; 0x38
   3e450:	ldr	r3, [sp, #76]	; 0x4c
   3e454:	sub	r3, r3, r0
   3e458:	cmp	r3, #15
   3e45c:	ble	3e5ac <cmetrohash64_1@@Base+0x54c>
   3e460:	ldrb	r1, [r0, #1]
   3e464:	ldrb	r2, [r0, #2]
   3e468:	ldrb	r6, [r0]
   3e46c:	ldrb	r4, [r0, #9]
   3e470:	ldrb	r3, [r0, #8]
   3e474:	ldrb	lr, [r0, #10]
   3e478:	ldrb	r7, [r0, #3]
   3e47c:	ldrb	r5, [r0, #11]
   3e480:	ldrb	sl, [r0, #5]
   3e484:	orr	r6, r6, r1, lsl #8
   3e488:	ldrb	ip, [r0, #6]
   3e48c:	orr	r6, r6, r2, lsl #16
   3e490:	orr	r4, r3, r4, lsl #8
   3e494:	ldrb	r2, [r0, #4]
   3e498:	ldr	r1, [pc, #-436]	; 3e2ec <cmetrohash64_1@@Base+0x28c>
   3e49c:	ldrb	r8, [r0, #13]
   3e4a0:	orr	r4, r4, lr, lsl #16
   3e4a4:	ldrb	r9, [r0, #7]
   3e4a8:	ldrb	r3, [r0, #12]
   3e4ac:	orr	r4, r4, r5, lsl #24
   3e4b0:	orr	r6, r6, r7, lsl #24
   3e4b4:	ldrb	r5, [r0, #14]
   3e4b8:	ldr	lr, [pc, #-472]	; 3e2e8 <cmetrohash64_1@@Base+0x288>
   3e4bc:	orr	r2, r2, sl, lsl #8
   3e4c0:	umull	r6, r7, r6, r1
   3e4c4:	orr	r2, r2, ip, lsl #16
   3e4c8:	ldrb	ip, [r0, #15]
   3e4cc:	orr	r3, r3, r8, lsl #8
   3e4d0:	orr	r2, r2, r9, lsl #24
   3e4d4:	orr	r3, r3, r5, lsl #16
   3e4d8:	umull	r4, r5, r4, lr
   3e4dc:	ldrd	r8, [sp, #56]	; 0x38
   3e4e0:	mla	r7, r1, r2, r7
   3e4e4:	orr	r3, r3, ip, lsl #24
   3e4e8:	adds	r8, r8, r6
   3e4ec:	mla	r5, lr, r3, r5
   3e4f0:	ldrd	r2, [sp, #56]	; 0x38
   3e4f4:	adc	r9, r9, r7
   3e4f8:	lsl	sl, r8, #31
   3e4fc:	adds	r2, r2, r4
   3e500:	orr	sl, sl, r9, lsr #1
   3e504:	adc	r3, r3, r5
   3e508:	umull	sl, fp, sl, lr
   3e50c:	ldr	ip, [pc, #-564]	; 3e2e0 <cmetrohash64_1@@Base+0x280>
   3e510:	mov	r4, r2
   3e514:	lsl	r2, r2, #31
   3e518:	mov	r5, r3
   3e51c:	orr	r2, r2, r3, lsr #1
   3e520:	lsl	r3, r9, #31
   3e524:	orr	r6, r3, r8, lsr #1
   3e528:	umull	r2, r3, r2, ip
   3e52c:	mla	fp, lr, r6, fp
   3e530:	lsl	lr, r5, #31
   3e534:	orr	r4, lr, r4, lsr #1
   3e538:	umull	r6, r7, sl, r1
   3e53c:	mla	r3, ip, r4, r3
   3e540:	ldr	ip, [pc, #-612]	; 3e2e4 <cmetrohash64_1@@Base+0x284>
   3e544:	mla	r7, r1, fp, r7
   3e548:	umull	r4, r5, r2, ip
   3e54c:	mla	r5, ip, r3, r5
   3e550:	lsl	r1, r7, #29
   3e554:	orr	r9, r1, r6, lsr #3
   3e558:	lsl	r1, r6, #29
   3e55c:	orr	r8, r1, r7, lsr #3
   3e560:	lsl	r1, r5, #29
   3e564:	adds	r8, r8, r2
   3e568:	orr	r7, r1, r4, lsr #3
   3e56c:	lsl	r1, r4, #29
   3e570:	adc	r9, r9, r3
   3e574:	eor	r8, r8, sl
   3e578:	orr	r6, r1, r5, lsr #3
   3e57c:	adds	r8, r8, r6
   3e580:	eor	r9, r9, fp
   3e584:	adc	r9, r9, r7
   3e588:	eor	r8, r8, r2
   3e58c:	eor	r9, r9, r3
   3e590:	ldrd	r2, [sp, #56]	; 0x38
   3e594:	add	r0, r0, #16
   3e598:	adds	r2, r2, r8
   3e59c:	adc	r3, r3, r9
   3e5a0:	strd	r2, [sp, #56]	; 0x38
   3e5a4:	ldr	r3, [sp, #76]	; 0x4c
   3e5a8:	sub	r3, r3, r0
   3e5ac:	cmp	r3, #7
   3e5b0:	ble	3e640 <cmetrohash64_1@@Base+0x5e0>
   3e5b4:	ldrb	r1, [r0, #1]
   3e5b8:	ldrb	r3, [r0, #2]
   3e5bc:	ldrb	r4, [r0]
   3e5c0:	ldrb	r2, [r0, #3]
   3e5c4:	ldrb	lr, [r0, #5]
   3e5c8:	orr	r4, r4, r1, lsl #8
   3e5cc:	ldrb	ip, [r0, #6]
   3e5d0:	ldr	r1, [pc, #-756]	; 3e2e4 <cmetrohash64_1@@Base+0x284>
   3e5d4:	orr	r4, r4, r3, lsl #16
   3e5d8:	ldrb	r3, [r0, #4]
   3e5dc:	orr	r4, r4, r2, lsl #24
   3e5e0:	ldrb	r2, [r0, #7]
   3e5e4:	umull	r4, r5, r4, r1
   3e5e8:	ldrd	r6, [sp, #56]	; 0x38
   3e5ec:	orr	r3, r3, lr, lsl #8
   3e5f0:	orr	r3, r3, ip, lsl #16
   3e5f4:	orr	r3, r3, r2, lsl #24
   3e5f8:	adds	r6, r6, r4
   3e5fc:	mla	r5, r1, r3, r5
   3e600:	mov	r4, r6
   3e604:	adc	r7, r7, r5
   3e608:	ldr	r2, [pc, #-808]	; 3e2e8 <cmetrohash64_1@@Base+0x288>
   3e60c:	lsl	r6, r6, #31
   3e610:	orr	r6, r6, r7, lsr #1
   3e614:	mov	r5, r7
   3e618:	lsl	r1, r7, #31
   3e61c:	umull	r6, r7, r6, r2
   3e620:	ldr	r3, [sp, #76]	; 0x4c
   3e624:	orr	r1, r1, r4, lsr #1
   3e628:	add	r0, r0, #8
   3e62c:	mla	r7, r2, r1, r7
   3e630:	eor	r8, r6, r4
   3e634:	eor	r9, r7, r5
   3e638:	sub	r3, r3, r0
   3e63c:	strd	r8, [sp, #56]	; 0x38
   3e640:	cmp	r3, #3
   3e644:	ble	3e688 <cmetrohash64_1@@Base+0x628>
   3e648:	ldr	ip, [r0], #4
   3e64c:	ldr	r2, [pc, #-880]	; 3e2e4 <cmetrohash64_1@@Base+0x284>
   3e650:	ldrd	r4, [sp, #56]	; 0x38
   3e654:	ldr	r1, [pc, #-884]	; 3e2e8 <cmetrohash64_1@@Base+0x288>
   3e658:	ldr	r3, [sp, #76]	; 0x4c
   3e65c:	umlal	r4, r5, r2, ip
   3e660:	sub	r3, r3, r0
   3e664:	lsr	r6, r4, #15
   3e668:	orr	r6, r6, r5, lsl #17
   3e66c:	lsr	r2, r5, #15
   3e670:	umull	r6, r7, r6, r1
   3e674:	orr	r2, r2, r4, lsl #17
   3e678:	eor	r8, r6, r4
   3e67c:	mla	r7, r1, r2, r7
   3e680:	eor	r9, r7, r5
   3e684:	strd	r8, [sp, #56]	; 0x38
   3e688:	cmp	r3, #1
   3e68c:	ble	3e6d0 <cmetrohash64_1@@Base+0x670>
   3e690:	ldrh	ip, [r0], #2
   3e694:	ldr	r2, [pc, #-952]	; 3e2e4 <cmetrohash64_1@@Base+0x284>
   3e698:	ldrd	r4, [sp, #56]	; 0x38
   3e69c:	ldr	r1, [pc, #-956]	; 3e2e8 <cmetrohash64_1@@Base+0x288>
   3e6a0:	ldr	r3, [sp, #76]	; 0x4c
   3e6a4:	umlal	r4, r5, r2, ip
   3e6a8:	sub	r3, r3, r0
   3e6ac:	lsr	r6, r4, #13
   3e6b0:	orr	r6, r6, r5, lsl #19
   3e6b4:	lsr	r2, r5, #13
   3e6b8:	umull	r6, r7, r6, r1
   3e6bc:	orr	r2, r2, r4, lsl #19
   3e6c0:	eor	r8, r6, r4
   3e6c4:	mla	r7, r1, r2, r7
   3e6c8:	eor	r9, r7, r5
   3e6cc:	strd	r8, [sp, #56]	; 0x38
   3e6d0:	cmp	r3, #0
   3e6d4:	ble	3e720 <cmetrohash64_1@@Base+0x6c0>
   3e6d8:	ldrb	r4, [r0]
   3e6dc:	ldr	r3, [pc, #-1024]	; 3e2e4 <cmetrohash64_1@@Base+0x284>
   3e6e0:	ldr	r0, [pc, #-1024]	; 3e2e8 <cmetrohash64_1@@Base+0x288>
   3e6e4:	umull	r4, r5, r4, r3
   3e6e8:	ldrd	r2, [sp, #56]	; 0x38
   3e6ec:	adds	r2, r2, r4
   3e6f0:	adc	r3, r3, r5
   3e6f4:	mov	r4, r2
   3e6f8:	lsr	r2, r2, #25
   3e6fc:	orr	r2, r2, r3, lsl #7
   3e700:	mov	r5, r3
   3e704:	lsr	r1, r3, #25
   3e708:	umull	r2, r3, r2, r0
   3e70c:	orr	r1, r1, r4, lsl #7
   3e710:	mla	r3, r0, r1, r3
   3e714:	eor	r0, r2, r4
   3e718:	eor	r1, r3, r5
   3e71c:	strd	r0, [sp, #56]	; 0x38
   3e720:	ldrd	r0, [sp, #56]	; 0x38
   3e724:	ldr	r2, [pc, #-1088]	; 3e2ec <cmetrohash64_1@@Base+0x28c>
   3e728:	lsl	r3, r1, #31
   3e72c:	orr	r5, r3, r0, lsr #1
   3e730:	lsl	r3, r0, #31
   3e734:	orr	r4, r3, r1, lsr #1
   3e738:	eor	r0, r0, r4
   3e73c:	eor	r1, r1, r5
   3e740:	mov	r5, r1
   3e744:	umull	r0, r1, r0, r2
   3e748:	mla	r1, r2, r5, r1
   3e74c:	add	r3, sp, #88	; 0x58
   3e750:	lsl	r2, r1, #31
   3e754:	orr	r5, r2, r0, lsr #1
   3e758:	lsl	r2, r0, #31
   3e75c:	orr	r4, r2, r1, lsr #1
   3e760:	eor	r0, r0, r4
   3e764:	eor	r1, r1, r5
   3e768:	strd	r0, [r3, #-8]!
   3e76c:	ldm	r3!, {r0, r1}
   3e770:	ldr	r3, [sp, #132]	; 0x84
   3e774:	str	r0, [r3]
   3e778:	str	r1, [r3, #4]
   3e77c:	add	sp, sp, #92	; 0x5c
   3e780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e784 <cmetrohash64_2@@Base>:
   3e784:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e788:	sub	sp, sp, #92	; 0x5c
   3e78c:	add	r5, pc, #620	; 0x26c
   3e790:	ldrd	r4, [r5]
   3e794:	ldr	ip, [sp, #128]	; 0x80
   3e798:	ldr	r1, [pc, #628]	; 3ea14 <cmetrohash64_2@@Base+0x290>
   3e79c:	adds	r4, r4, r2
   3e7a0:	adc	r5, r5, r3
   3e7a4:	umlal	r4, r5, r1, ip
   3e7a8:	cmp	r3, #0
   3e7ac:	cmpeq	r2, #31
   3e7b0:	add	r3, r0, r2
   3e7b4:	str	r3, [sp, #76]	; 0x4c
   3e7b8:	strd	r4, [sp, #56]	; 0x38
   3e7bc:	bls	3eb7c <cmetrohash64_2@@Base+0x3f8>
   3e7c0:	ldr	fp, [pc, #584]	; 3ea10 <cmetrohash64_2@@Base+0x28c>
   3e7c4:	mov	lr, r1
   3e7c8:	str	fp, [sp, #68]	; 0x44
   3e7cc:	mov	sl, r4
   3e7d0:	mov	fp, r5
   3e7d4:	sub	r3, r3, #32
   3e7d8:	str	r3, [sp, #72]	; 0x48
   3e7dc:	strd	r4, [sp]
   3e7e0:	strd	r4, [sp, #8]
   3e7e4:	strd	r4, [sp, #48]	; 0x30
   3e7e8:	ldrb	r1, [r0, #1]
   3e7ec:	ldrb	r6, [r0]
   3e7f0:	ldrb	r2, [r0, #9]
   3e7f4:	ldrb	r4, [r0, #10]
   3e7f8:	orr	r6, r6, r1, lsl #8
   3e7fc:	ldrb	r1, [r0, #8]
   3e800:	ldrb	r3, [r0, #17]
   3e804:	ldrb	r5, [r0, #5]
   3e808:	orr	r1, r1, r2, lsl #8
   3e80c:	orr	r1, r1, r4, lsl #16
   3e810:	ldrb	r4, [r0, #16]
   3e814:	ldrb	r2, [r0, #4]
   3e818:	ldrb	ip, [r0, #2]
   3e81c:	orr	r4, r4, r3, lsl #8
   3e820:	ldrb	r3, [r0, #11]
   3e824:	ldrb	r7, [r0, #3]
   3e828:	orr	r2, r2, r5, lsl #8
   3e82c:	ldrb	r5, [r0, #6]
   3e830:	orr	r3, r1, r3, lsl #24
   3e834:	orr	r6, r6, ip, lsl #16
   3e838:	ldrb	ip, [r0, #25]
   3e83c:	ldrb	r8, [r0, #18]
   3e840:	str	r3, [sp, #64]	; 0x40
   3e844:	orr	r2, r2, r5, lsl #16
   3e848:	ldrb	r3, [r0, #24]
   3e84c:	ldrb	r5, [r0, #7]
   3e850:	orr	r6, r6, r7, lsl #24
   3e854:	ldrb	r1, [r0, #19]
   3e858:	umull	r6, r7, r6, lr
   3e85c:	ldrb	r9, [r0, #23]
   3e860:	orr	r3, r3, ip, lsl #8
   3e864:	ldrb	ip, [r0, #26]
   3e868:	orr	r2, r2, r5, lsl #24
   3e86c:	orr	r4, r4, r8, lsl #16
   3e870:	orr	r4, r4, r1, lsl #24
   3e874:	ldrb	r1, [r0, #27]
   3e878:	mla	r7, lr, r2, r7
   3e87c:	ldrb	r2, [r0, #21]
   3e880:	orr	r3, r3, ip, lsl #16
   3e884:	ldrb	ip, [r0, #20]
   3e888:	ldrb	r5, [r0, #13]
   3e88c:	orr	r3, r3, r1, lsl #24
   3e890:	ldrb	r1, [r0, #12]
   3e894:	orr	ip, ip, r2, lsl #8
   3e898:	ldrb	r2, [r0, #22]
   3e89c:	adds	r6, r6, sl
   3e8a0:	orr	r1, r1, r5, lsl #8
   3e8a4:	ldrb	r5, [r0, #14]
   3e8a8:	adc	r7, r7, fp
   3e8ac:	ldrb	r8, [r0, #29]
   3e8b0:	lsr	sl, r6, #29
   3e8b4:	orr	ip, ip, r2, lsl #16
   3e8b8:	ldrb	r2, [r0, #28]
   3e8bc:	orr	sl, sl, r7, lsl #3
   3e8c0:	orr	r1, r1, r5, lsl #16
   3e8c4:	str	sl, [sp, #16]
   3e8c8:	ldrb	r5, [r0, #15]
   3e8cc:	orr	ip, ip, r9, lsl #24
   3e8d0:	ldrb	r9, [r0, #30]
   3e8d4:	orr	r2, r2, r8, lsl #8
   3e8d8:	ldrb	r8, [r0, #31]
   3e8dc:	orr	r1, r1, r5, lsl #24
   3e8e0:	orr	r2, r2, r9, lsl #16
   3e8e4:	lsr	r5, r7, #29
   3e8e8:	orr	r5, r5, r6, lsl #3
   3e8ec:	orr	r2, r2, r8, lsl #24
   3e8f0:	ldr	r6, [sp, #64]	; 0x40
   3e8f4:	ldr	r8, [sp, #68]	; 0x44
   3e8f8:	str	r5, [sp, #20]
   3e8fc:	ldr	r5, [pc, #260]	; 3ea08 <cmetrohash64_2@@Base+0x284>
   3e900:	umull	r6, r7, r6, r8
   3e904:	umull	r4, r5, r4, r5
   3e908:	mla	r7, r8, r1, r7
   3e90c:	ldr	r9, [pc, #244]	; 3ea08 <cmetrohash64_2@@Base+0x284>
   3e910:	ldr	r1, [pc, #244]	; 3ea0c <cmetrohash64_2@@Base+0x288>
   3e914:	ldrd	sl, [sp, #16]
   3e918:	mla	r5, r9, ip, r5
   3e91c:	umull	r8, r9, r3, r1
   3e920:	mla	r9, r1, r2, r9
   3e924:	ldrd	r2, [sp, #48]	; 0x30
   3e928:	add	r0, r0, #32
   3e92c:	adds	r2, r2, r6
   3e930:	adc	r3, r3, r7
   3e934:	mov	r6, r2
   3e938:	mov	r7, r3
   3e93c:	ldrd	r2, [sp, #8]
   3e940:	adds	r2, r2, r4
   3e944:	adc	r3, r3, r5
   3e948:	mov	r4, r2
   3e94c:	mov	r5, r3
   3e950:	ldrd	r2, [sp]
   3e954:	adds	r2, r2, r8
   3e958:	mov	r8, r2
   3e95c:	lsr	r2, r6, #29
   3e960:	orr	r1, r2, r7, lsl #3
   3e964:	adc	r3, r3, r9
   3e968:	str	r1, [sp, #24]
   3e96c:	lsr	r1, r7, #29
   3e970:	mov	r9, r3
   3e974:	orr	r1, r1, r6, lsl #3
   3e978:	lsr	r3, r4, #29
   3e97c:	ldrd	r6, [sp, #8]
   3e980:	orr	r3, r3, r5, lsl #3
   3e984:	lsr	r2, r8, #29
   3e988:	str	r3, [sp, #32]
   3e98c:	lsr	r3, r5, #29
   3e990:	adds	sl, sl, r6
   3e994:	orr	r3, r3, r4, lsl #3
   3e998:	str	r1, [sp, #28]
   3e99c:	orr	r1, r2, r9, lsl #3
   3e9a0:	lsr	r2, r9, #29
   3e9a4:	adc	fp, fp, r7
   3e9a8:	ldrd	r4, [sp]
   3e9ac:	str	r3, [sp, #36]	; 0x24
   3e9b0:	ldrd	r6, [sp, #24]
   3e9b4:	orr	r3, r2, r8, lsl #3
   3e9b8:	str	r3, [sp, #44]	; 0x2c
   3e9bc:	ldrd	r2, [sp, #32]
   3e9c0:	adds	r6, r6, r4
   3e9c4:	adc	r7, r7, r5
   3e9c8:	adds	r2, r2, sl
   3e9cc:	adc	r3, r3, fp
   3e9d0:	str	r1, [sp, #40]	; 0x28
   3e9d4:	strd	r2, [sp, #8]
   3e9d8:	ldrd	r2, [sp, #40]	; 0x28
   3e9dc:	strd	r6, [sp, #48]	; 0x30
   3e9e0:	adds	r2, r2, r6
   3e9e4:	adc	r3, r3, r7
   3e9e8:	strd	r2, [sp]
   3e9ec:	ldr	r3, [sp, #72]	; 0x48
   3e9f0:	cmp	r3, r0
   3e9f4:	bcs	3e7e8 <cmetrohash64_2@@Base+0x64>
   3e9f8:	b	3ea18 <cmetrohash64_2@@Base+0x294>
   3e9fc:	nop			; (mov r0, r0)
   3ea00:	blle	ff9718dc <__bss_end__@@Base+0xff9047e8>
   3ea04:	adcspl	r3, ip, #-134217725	; 0xf8000003
   3ea08:	addsvs	r2, r9, #772	; 0x304
   3ea0c:	adcscc	r5, ip, r9, lsr #22
   3ea10:	adcge	r0, sl, #-335544320	; 0xec000000
   3ea14:			; <UNDEFINED> instruction: 0xd6d018f5
   3ea18:	ldrd	r4, [sp]
   3ea1c:	mov	r7, fp
   3ea20:	ldr	fp, [sp, #68]	; 0x44
   3ea24:	adds	r2, sl, r4
   3ea28:	adc	r3, r7, r5
   3ea2c:	umull	r4, r5, r2, lr
   3ea30:	ldrd	r8, [sp, #8]
   3ea34:	mla	r5, lr, r3, r5
   3ea38:	ldrd	r2, [sp, #48]	; 0x30
   3ea3c:	mov	r6, sl
   3ea40:	adds	r2, r2, r4
   3ea44:	adc	r3, r3, r5
   3ea48:	mov	r4, r2
   3ea4c:	lsr	r2, r2, #30
   3ea50:	orr	r2, r2, r3, lsl #2
   3ea54:	lsr	r1, r3, #30
   3ea58:	umull	r2, r3, r2, fp
   3ea5c:	strd	r6, [sp, #8]
   3ea60:	orr	r4, r1, r4, lsl #2
   3ea64:	eor	r8, r8, r2
   3ea68:	mla	r3, fp, r4, r3
   3ea6c:	ldrd	r4, [sp, #48]	; 0x30
   3ea70:	eor	r9, r9, r3
   3ea74:	adds	r4, r4, r8
   3ea78:	adc	r5, r5, r9
   3ea7c:	umull	r2, r3, r4, fp
   3ea80:	mla	r3, fp, r5, r3
   3ea84:	adds	r4, sl, r2
   3ea88:	adc	r5, r7, r3
   3ea8c:	lsr	r6, r4, #30
   3ea90:	lsr	r3, r5, #30
   3ea94:	orr	r2, r3, r4, lsl #2
   3ea98:	orr	r6, r6, r5, lsl #2
   3ea9c:	ldrd	r4, [sp, #8]
   3eaa0:	umull	r6, r7, r6, lr
   3eaa4:	adds	r4, r4, r8
   3eaa8:	adc	r5, r5, r9
   3eaac:	mla	r7, lr, r2, r7
   3eab0:	strd	r4, [sp, #16]
   3eab4:	ldrd	r2, [sp, #8]
   3eab8:	ldrd	r4, [sp, #48]	; 0x30
   3eabc:	ldr	r1, [sp, #20]
   3eac0:	eor	r2, r2, r4
   3eac4:	eor	r3, r3, r5
   3eac8:	strd	r2, [sp, #8]
   3eacc:	ldrd	r2, [sp]
   3ead0:	eor	r2, r2, r6
   3ead4:	adds	r4, r4, r2
   3ead8:	eor	r3, r3, r7
   3eadc:	adc	r5, r5, r3
   3eae0:	mov	r7, r3
   3eae4:	ldr	r3, [sp, #16]
   3eae8:	mov	r6, r2
   3eaec:	strd	r6, [sp]
   3eaf0:	umull	r6, r7, r3, lr
   3eaf4:	umull	r2, r3, r4, fp
   3eaf8:	mla	r7, lr, r1, r7
   3eafc:	mla	r3, fp, r5, r3
   3eb00:	ldrd	r4, [sp]
   3eb04:	adds	r4, r4, r6
   3eb08:	adc	r5, r5, r7
   3eb0c:	adds	r2, r2, r8
   3eb10:	adc	r3, r3, r9
   3eb14:	mov	r6, r4
   3eb18:	lsr	r8, r4, #30
   3eb1c:	lsr	r4, r2, #30
   3eb20:	orr	r8, r8, r5, lsl #2
   3eb24:	orr	r4, r4, r3, lsl #2
   3eb28:	mov	r7, r5
   3eb2c:	umull	r8, r9, r8, fp
   3eb30:	umull	r4, r5, r4, lr
   3eb34:	lsr	r3, r3, #30
   3eb38:	lsr	r1, r7, #30
   3eb3c:	orr	r2, r3, r2, lsl #2
   3eb40:	orr	r6, r1, r6, lsl #2
   3eb44:	mla	r5, lr, r2, r5
   3eb48:	mla	r9, fp, r6, r9
   3eb4c:	ldrd	r2, [sp, #8]
   3eb50:	eor	r2, r2, r8
   3eb54:	eor	r3, r3, r9
   3eb58:	mov	r8, r2
   3eb5c:	mov	r9, r3
   3eb60:	ldrd	r2, [sp, #56]	; 0x38
   3eb64:	eor	r8, r8, r4
   3eb68:	eor	r9, r9, r5
   3eb6c:	adds	r2, r2, r8
   3eb70:	adc	r3, r3, r9
   3eb74:	strd	r2, [sp, #56]	; 0x38
   3eb78:	ldr	r3, [sp, #76]	; 0x4c
   3eb7c:	sub	r3, r3, r0
   3eb80:	cmp	r3, #15
   3eb84:	ble	3ecc8 <cmetrohash64_2@@Base+0x544>
   3eb88:	ldrb	r2, [r0, #1]
   3eb8c:	ldrb	r1, [r0, #2]
   3eb90:	ldrb	r6, [r0]
   3eb94:	ldrb	r7, [r0, #3]
   3eb98:	ldrb	r5, [r0, #9]
   3eb9c:	ldrb	r3, [r0, #10]
   3eba0:	ldrb	r4, [r0, #8]
   3eba4:	ldrb	lr, [r0, #11]
   3eba8:	orr	r6, r6, r2, lsl #8
   3ebac:	ldrb	r2, [r0, #5]
   3ebb0:	ldr	ip, [pc, #-432]	; 3ea08 <cmetrohash64_2@@Base+0x284>
   3ebb4:	ldrb	sl, [r0, #6]
   3ebb8:	orr	r6, r6, r1, lsl #16
   3ebbc:	ldrb	r1, [r0, #4]
   3ebc0:	ldrb	r9, [r0, #7]
   3ebc4:	orr	r4, r4, r5, lsl #8
   3ebc8:	orr	r6, r6, r7, lsl #24
   3ebcc:	ldrb	r5, [r0, #13]
   3ebd0:	ldrb	r8, [r0, #14]
   3ebd4:	orr	r4, r4, r3, lsl #16
   3ebd8:	ldrb	r3, [r0, #12]
   3ebdc:	umull	r6, r7, r6, ip
   3ebe0:	orr	r1, r1, r2, lsl #8
   3ebe4:	orr	r4, r4, lr, lsl #24
   3ebe8:	ldrb	lr, [r0, #15]
   3ebec:	orr	r2, r1, sl, lsl #16
   3ebf0:	orr	r2, r2, r9, lsl #24
   3ebf4:	orr	r3, r3, r5, lsl #8
   3ebf8:	umull	r4, r5, r4, ip
   3ebfc:	mla	r7, ip, r2, r7
   3ec00:	orr	r3, r3, r8, lsl #16
   3ec04:	ldrd	r8, [sp, #56]	; 0x38
   3ec08:	orr	lr, r3, lr, lsl #24
   3ec0c:	ldr	r1, [pc, #-520]	; 3ea0c <cmetrohash64_2@@Base+0x288>
   3ec10:	adds	r2, r8, r6
   3ec14:	mla	r5, ip, lr, r5
   3ec18:	adc	r3, r9, r7
   3ec1c:	lsr	sl, r2, #29
   3ec20:	adds	r8, r8, r4
   3ec24:	adc	r9, r9, r5
   3ec28:	orr	sl, sl, r3, lsl #3
   3ec2c:	mov	r6, r2
   3ec30:	lsr	r2, r8, #29
   3ec34:	umull	sl, fp, sl, r1
   3ec38:	ldr	ip, [pc, #-556]	; 3ea14 <cmetrohash64_2@@Base+0x290>
   3ec3c:	orr	r2, r2, r9, lsl #3
   3ec40:	lsr	r3, r3, #29
   3ec44:	orr	r6, r3, r6, lsl #3
   3ec48:	umull	r2, r3, r2, r1
   3ec4c:	mla	fp, r1, r6, fp
   3ec50:	lsr	lr, r9, #29
   3ec54:	umull	r6, r7, sl, ip
   3ec58:	orr	r4, lr, r8, lsl #3
   3ec5c:	mla	r7, ip, fp, r7
   3ec60:	mla	r3, r1, r4, r3
   3ec64:	umull	r4, r5, r2, r1
   3ec68:	mla	r5, r1, r3, r5
   3ec6c:	lsl	r1, r7, #30
   3ec70:	orr	r9, r1, r6, lsr #2
   3ec74:	lsl	r1, r6, #30
   3ec78:	orr	r8, r1, r7, lsr #2
   3ec7c:	lsl	r1, r5, #30
   3ec80:	adds	r8, r8, r2
   3ec84:	orr	r7, r1, r4, lsr #2
   3ec88:	lsl	r1, r4, #30
   3ec8c:	adc	r9, r9, r3
   3ec90:	eor	r8, r8, sl
   3ec94:	orr	r6, r1, r5, lsr #2
   3ec98:	adds	r8, r8, r6
   3ec9c:	eor	r9, r9, fp
   3eca0:	adc	r9, r9, r7
   3eca4:	eor	r8, r8, r2
   3eca8:	eor	r9, r9, r3
   3ecac:	ldrd	r2, [sp, #56]	; 0x38
   3ecb0:	add	r0, r0, #16
   3ecb4:	adds	r2, r2, r8
   3ecb8:	adc	r3, r3, r9
   3ecbc:	strd	r2, [sp, #56]	; 0x38
   3ecc0:	ldr	r3, [sp, #76]	; 0x4c
   3ecc4:	sub	r3, r3, r0
   3ecc8:	cmp	r3, #7
   3eccc:	ble	3ed5c <cmetrohash64_2@@Base+0x5d8>
   3ecd0:	ldrb	r1, [r0, #1]
   3ecd4:	ldrb	r3, [r0, #2]
   3ecd8:	ldrb	r4, [r0]
   3ecdc:	ldrb	r2, [r0, #3]
   3ece0:	ldrb	lr, [r0, #5]
   3ece4:	orr	r4, r4, r1, lsl #8
   3ece8:	ldrb	ip, [r0, #6]
   3ecec:	ldr	r1, [pc, #-744]	; 3ea0c <cmetrohash64_2@@Base+0x288>
   3ecf0:	orr	r4, r4, r3, lsl #16
   3ecf4:	ldrb	r3, [r0, #4]
   3ecf8:	orr	r4, r4, r2, lsl #24
   3ecfc:	ldrb	r2, [r0, #7]
   3ed00:	umull	r4, r5, r4, r1
   3ed04:	ldrd	r6, [sp, #56]	; 0x38
   3ed08:	orr	r3, r3, lr, lsl #8
   3ed0c:	orr	r3, r3, ip, lsl #16
   3ed10:	orr	r3, r3, r2, lsl #24
   3ed14:	adds	r6, r6, r4
   3ed18:	mla	r5, r1, r3, r5
   3ed1c:	mov	r4, r6
   3ed20:	adc	r7, r7, r5
   3ed24:	ldr	r2, [pc, #-796]	; 3ea10 <cmetrohash64_2@@Base+0x28c>
   3ed28:	lsl	r6, r6, #28
   3ed2c:	orr	r6, r6, r7, lsr #4
   3ed30:	mov	r5, r7
   3ed34:	lsl	r1, r7, #28
   3ed38:	umull	r6, r7, r6, r2
   3ed3c:	ldr	r3, [sp, #76]	; 0x4c
   3ed40:	orr	r1, r1, r4, lsr #4
   3ed44:	add	r0, r0, #8
   3ed48:	mla	r7, r2, r1, r7
   3ed4c:	eor	r8, r6, r4
   3ed50:	eor	r9, r7, r5
   3ed54:	sub	r3, r3, r0
   3ed58:	strd	r8, [sp, #56]	; 0x38
   3ed5c:	cmp	r3, #3
   3ed60:	ble	3eda4 <cmetrohash64_2@@Base+0x620>
   3ed64:	ldr	ip, [r0], #4
   3ed68:	ldr	r2, [pc, #-868]	; 3ea0c <cmetrohash64_2@@Base+0x288>
   3ed6c:	ldrd	r4, [sp, #56]	; 0x38
   3ed70:	ldr	r1, [pc, #-872]	; 3ea10 <cmetrohash64_2@@Base+0x28c>
   3ed74:	ldr	r3, [sp, #76]	; 0x4c
   3ed78:	umlal	r4, r5, r2, ip
   3ed7c:	sub	r3, r3, r0
   3ed80:	lsr	r6, r4, #15
   3ed84:	orr	r6, r6, r5, lsl #17
   3ed88:	lsr	r2, r5, #15
   3ed8c:	umull	r6, r7, r6, r1
   3ed90:	orr	r2, r2, r4, lsl #17
   3ed94:	eor	r8, r6, r4
   3ed98:	mla	r7, r1, r2, r7
   3ed9c:	eor	r9, r7, r5
   3eda0:	strd	r8, [sp, #56]	; 0x38
   3eda4:	cmp	r3, #1
   3eda8:	ble	3edec <cmetrohash64_2@@Base+0x668>
   3edac:	ldrh	ip, [r0], #2
   3edb0:	ldr	r2, [pc, #-940]	; 3ea0c <cmetrohash64_2@@Base+0x288>
   3edb4:	ldrd	r4, [sp, #56]	; 0x38
   3edb8:	ldr	r1, [pc, #-944]	; 3ea10 <cmetrohash64_2@@Base+0x28c>
   3edbc:	ldr	r3, [sp, #76]	; 0x4c
   3edc0:	umlal	r4, r5, r2, ip
   3edc4:	sub	r3, r3, r0
   3edc8:	lsr	r6, r4, #15
   3edcc:	orr	r6, r6, r5, lsl #17
   3edd0:	lsr	r2, r5, #15
   3edd4:	umull	r6, r7, r6, r1
   3edd8:	orr	r2, r2, r4, lsl #17
   3eddc:	eor	r8, r6, r4
   3ede0:	mla	r7, r1, r2, r7
   3ede4:	eor	r9, r7, r5
   3ede8:	strd	r8, [sp, #56]	; 0x38
   3edec:	cmp	r3, #0
   3edf0:	ble	3ee3c <cmetrohash64_2@@Base+0x6b8>
   3edf4:	ldrb	r4, [r0]
   3edf8:	ldr	r3, [pc, #-1012]	; 3ea0c <cmetrohash64_2@@Base+0x288>
   3edfc:	ldr	r0, [pc, #-1012]	; 3ea10 <cmetrohash64_2@@Base+0x28c>
   3ee00:	umull	r4, r5, r4, r3
   3ee04:	ldrd	r2, [sp, #56]	; 0x38
   3ee08:	adds	r2, r2, r4
   3ee0c:	adc	r3, r3, r5
   3ee10:	mov	r4, r2
   3ee14:	lsr	r2, r2, #23
   3ee18:	orr	r2, r2, r3, lsl #9
   3ee1c:	mov	r5, r3
   3ee20:	lsr	r1, r3, #23
   3ee24:	umull	r2, r3, r2, r0
   3ee28:	orr	r1, r1, r4, lsl #9
   3ee2c:	mla	r3, r0, r1, r3
   3ee30:	eor	r0, r2, r4
   3ee34:	eor	r1, r3, r5
   3ee38:	strd	r0, [sp, #56]	; 0x38
   3ee3c:	ldrd	r0, [sp, #56]	; 0x38
   3ee40:	ldr	r2, [pc, #-1076]	; 3ea14 <cmetrohash64_2@@Base+0x290>
   3ee44:	lsr	r3, r0, #28
   3ee48:	orr	r4, r3, r1, lsl #4
   3ee4c:	lsr	r3, r1, #28
   3ee50:	orr	r5, r3, r0, lsl #4
   3ee54:	eor	r0, r0, r4
   3ee58:	eor	r1, r1, r5
   3ee5c:	mov	r5, r1
   3ee60:	umull	r0, r1, r0, r2
   3ee64:	mla	r1, r2, r5, r1
   3ee68:	lsr	r2, r0, #29
   3ee6c:	add	r3, sp, #88	; 0x58
   3ee70:	orr	r4, r2, r1, lsl #3
   3ee74:	lsr	r2, r1, #29
   3ee78:	orr	r5, r2, r0, lsl #3
   3ee7c:	eor	r1, r1, r5
   3ee80:	eor	r0, r0, r4
   3ee84:	strd	r0, [r3, #-8]!
   3ee88:	ldm	r3!, {r0, r1}
   3ee8c:	ldr	r3, [sp, #132]	; 0x84
   3ee90:	str	r0, [r3]
   3ee94:	str	r1, [r3, #4]
   3ee98:	add	sp, sp, #92	; 0x5c
   3ee9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3eea0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3eea4:	sub	sp, sp, #36	; 0x24
   3eea8:	cmp	r3, #0
   3eeac:	str	r3, [sp, #12]
   3eeb0:	str	r1, [sp, #16]
   3eeb4:	beq	3f0a0 <cmetrohash64_2@@Base+0x91c>
   3eeb8:	cmp	r3, #2
   3eebc:	beq	3f070 <cmetrohash64_2@@Base+0x8ec>
   3eec0:	cmp	r3, #1
   3eec4:	beq	3f05c <cmetrohash64_2@@Base+0x8d8>
   3eec8:	ldr	r8, [r0, #12]
   3eecc:	mov	r3, #179	; 0xb3
   3eed0:	ldr	r1, [r0, #8]
   3eed4:	mul	r3, r3, r8
   3eed8:	mov	r9, r2
   3eedc:	mov	sl, r0
   3eee0:	cmp	r1, r3, lsr #8
   3eee4:	bcc	3eefc <cmetrohash64_2@@Base+0x778>
   3eee8:	lsl	r1, r1, #1
   3eeec:	bl	3f0d8 <cmetrohash64_2@@Base+0x954>
   3eef0:	cmp	r0, #0
   3eef4:	bne	3f084 <cmetrohash64_2@@Base+0x900>
   3eef8:	ldr	r8, [sl, #12]
   3eefc:	ldr	r2, [pc, #432]	; 3f0b4 <cmetrohash64_2@@Base+0x930>
   3ef00:	add	r3, sp, #24
   3ef04:	ldr	r0, [sp, #16]
   3ef08:	stm	sp, {r2, r3}
   3ef0c:	mov	r3, #0
   3ef10:	mov	r2, r9
   3ef14:	ldr	r7, [sl]
   3ef18:	bl	3e060 <cmetrohash64_1@@Base>
   3ef1c:	ldr	r3, [sp, #72]	; 0x48
   3ef20:	ldr	r6, [sp, #24]
   3ef24:	sub	r3, r3, #2
   3ef28:	sub	r8, r8, #1
   3ef2c:	cmp	r3, #1
   3ef30:	and	r4, r8, r6
   3ef34:	bls	3f008 <cmetrohash64_2@@Base+0x884>
   3ef38:	ldr	r5, [r7, r4, lsl #2]
   3ef3c:	add	r4, r7, r4, lsl #2
   3ef40:	cmp	r5, #0
   3ef44:	moveq	fp, r4
   3ef48:	beq	3efe4 <cmetrohash64_2@@Base+0x860>
   3ef4c:	str	sl, [sp, #20]
   3ef50:	add	r6, r6, #1
   3ef54:	mov	sl, r5
   3ef58:	mov	fp, #0
   3ef5c:	ldr	r5, [sp, #16]
   3ef60:	b	3ef7c <cmetrohash64_2@@Base+0x7f8>
   3ef64:	and	r4, r8, r6
   3ef68:	add	r6, r6, #1
   3ef6c:	ldr	sl, [r7, r4, lsl #2]
   3ef70:	add	r4, r7, r4, lsl #2
   3ef74:	cmp	sl, #0
   3ef78:	beq	3efd8 <cmetrohash64_2@@Base+0x854>
   3ef7c:	cmp	sl, #2
   3ef80:	beq	3efcc <cmetrohash64_2@@Base+0x848>
   3ef84:	ldr	r2, [sl, #12]
   3ef88:	cmp	r9, r2
   3ef8c:	bne	3ef64 <cmetrohash64_2@@Base+0x7e0>
   3ef90:	mov	r2, r9
   3ef94:	ldr	r1, [sl, #8]
   3ef98:	mov	r0, r5
   3ef9c:	bl	13ef4 <memcmp@plt>
   3efa0:	cmp	r0, #0
   3efa4:	bne	3ef64 <cmetrohash64_2@@Base+0x7e0>
   3efa8:	ldr	r3, [sp, #72]	; 0x48
   3efac:	mov	r5, sl
   3efb0:	cmp	r3, #0
   3efb4:	bne	3effc <cmetrohash64_2@@Base+0x878>
   3efb8:	ldr	r3, [sp, #12]
   3efbc:	mov	r0, r5
   3efc0:	str	r3, [r4]
   3efc4:	add	sp, sp, #36	; 0x24
   3efc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3efcc:	cmp	fp, #0
   3efd0:	moveq	fp, r4
   3efd4:	b	3ef64 <cmetrohash64_2@@Base+0x7e0>
   3efd8:	cmp	fp, #0
   3efdc:	ldr	sl, [sp, #20]
   3efe0:	moveq	fp, r4
   3efe4:	ldr	r2, [sl, #8]
   3efe8:	ldr	r3, [sp, #12]
   3efec:	mov	r5, #0
   3eff0:	add	r2, r2, #1
   3eff4:	str	r2, [sl, #8]
   3eff8:	str	r3, [fp]
   3effc:	mov	r0, r5
   3f000:	add	sp, sp, #36	; 0x24
   3f004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f008:	ldr	r2, [r7, r4, lsl #2]
   3f00c:	ldr	r3, [sl, #8]
   3f010:	cmp	r2, #0
   3f014:	cmpne	r2, #2
   3f018:	add	r3, r3, #1
   3f01c:	str	r3, [sl, #8]
   3f020:	add	r4, r7, r4, lsl #2
   3f024:	beq	3f04c <cmetrohash64_2@@Base+0x8c8>
   3f028:	add	r6, r6, #1
   3f02c:	and	r3, r8, r6
   3f030:	add	r6, r6, #1
   3f034:	ldr	r2, [r7, r3, lsl #2]
   3f038:	add	r3, r7, r3, lsl #2
   3f03c:	cmp	r2, #0
   3f040:	cmpne	r2, #2
   3f044:	bne	3f02c <cmetrohash64_2@@Base+0x8a8>
   3f048:	mov	r4, r3
   3f04c:	ldr	r3, [sp, #12]
   3f050:	mov	r5, #0
   3f054:	str	r3, [r4]
   3f058:	b	3effc <cmetrohash64_2@@Base+0x878>
   3f05c:	ldr	r3, [pc, #84]	; 3f0b8 <cmetrohash64_2@@Base+0x934>
   3f060:	mov	r2, #116	; 0x74
   3f064:	ldr	r1, [pc, #80]	; 3f0bc <cmetrohash64_2@@Base+0x938>
   3f068:	ldr	r0, [pc, #80]	; 3f0c0 <cmetrohash64_2@@Base+0x93c>
   3f06c:	bl	14038 <__assert_fail@plt>
   3f070:	ldr	r3, [pc, #64]	; 3f0b8 <cmetrohash64_2@@Base+0x934>
   3f074:	mov	r2, #115	; 0x73
   3f078:	ldr	r1, [pc, #60]	; 3f0bc <cmetrohash64_2@@Base+0x938>
   3f07c:	ldr	r0, [pc, #64]	; 3f0c4 <cmetrohash64_2@@Base+0x940>
   3f080:	bl	14038 <__assert_fail@plt>
   3f084:	ldr	r3, [pc, #60]	; 3f0c8 <cmetrohash64_2@@Base+0x944>
   3f088:	ldr	r2, [pc, #60]	; 3f0cc <cmetrohash64_2@@Base+0x948>
   3f08c:	ldr	r1, [pc, #60]	; 3f0d0 <cmetrohash64_2@@Base+0x94c>
   3f090:	ldr	r0, [r3]
   3f094:	bl	13f84 <fprintf@plt>
   3f098:	mov	r0, #1
   3f09c:	bl	13f6c <exit@plt>
   3f0a0:	ldr	r3, [pc, #16]	; 3f0b8 <cmetrohash64_2@@Base+0x934>
   3f0a4:	mov	r2, #114	; 0x72
   3f0a8:	ldr	r1, [pc, #12]	; 3f0bc <cmetrohash64_2@@Base+0x938>
   3f0ac:	ldr	r0, [pc, #32]	; 3f0d4 <cmetrohash64_2@@Base+0x950>
   3f0b0:	bl	14038 <__assert_fail@plt>
   3f0b4:	svccs	0x00693b52
   3f0b8:	ldrdeq	fp, [r5], -r4
   3f0bc:			; <UNDEFINED> instruction: 0x000588bc
   3f0c0:	andeq	r8, r5, ip, lsr r9
   3f0c4:	andeq	r8, r5, r4, lsr #18
   3f0c8:	andeq	sp, r6, r8, lsr #1
   3f0cc:	andeq	r8, r5, r4, asr r9
   3f0d0:	andeq	r8, r5, r8, lsl #19
   3f0d4:	andeq	r8, r5, ip, lsl #18
   3f0d8:	ldr	r3, [r0, #8]
   3f0dc:	push	{r4, r5, r6, r7, r8, lr}
   3f0e0:	cmp	r1, r3
   3f0e4:	movcc	r1, r3
   3f0e8:	cmp	r1, #2
   3f0ec:	sub	sp, sp, #24
   3f0f0:	mov	r6, r0
   3f0f4:	ldr	r7, [r0]
   3f0f8:	mov	r5, #4
   3f0fc:	bls	3f114 <cmetrohash64_2@@Base+0x990>
   3f100:	mov	r2, #179	; 0xb3
   3f104:	lsl	r5, r5, #1
   3f108:	mul	r3, r2, r5
   3f10c:	cmp	r1, r3, lsr #8
   3f110:	bhi	3f104 <cmetrohash64_2@@Base+0x980>
   3f114:	mov	r1, #4
   3f118:	mov	r0, r5
   3f11c:	bl	13ea0 <calloc@plt>
   3f120:	cmp	r0, #0
   3f124:	str	r0, [sp, #8]
   3f128:	beq	3f1d8 <cmetrohash64_2@@Base+0xa54>
   3f12c:	ldr	r2, [r6, #12]
   3f130:	mov	r4, #0
   3f134:	cmp	r2, r4
   3f138:	str	r5, [sp, #20]
   3f13c:	str	r4, [sp, #12]
   3f140:	str	r4, [sp, #16]
   3f144:	beq	3f1cc <cmetrohash64_2@@Base+0xa48>
   3f148:	sub	r5, r7, #4
   3f14c:	mov	r8, #3
   3f150:	add	r7, sp, #8
   3f154:	b	3f160 <cmetrohash64_2@@Base+0x9dc>
   3f158:	cmp	r4, r2
   3f15c:	bcs	3f194 <cmetrohash64_2@@Base+0xa10>
   3f160:	ldr	r3, [r5, #4]!
   3f164:	add	r4, r4, #1
   3f168:	cmp	r3, #0
   3f16c:	cmpne	r3, #2
   3f170:	beq	3f158 <cmetrohash64_2@@Base+0x9d4>
   3f174:	ldr	r2, [r3, #12]
   3f178:	ldr	r1, [r3, #8]
   3f17c:	mov	r0, r7
   3f180:	str	r8, [sp]
   3f184:	bl	3eea0 <cmetrohash64_2@@Base+0x71c>
   3f188:	ldr	r2, [r6, #12]
   3f18c:	cmp	r4, r2
   3f190:	bcc	3f160 <cmetrohash64_2@@Base+0x9dc>
   3f194:	ldr	r0, [r6]
   3f198:	cmp	r0, #0
   3f19c:	beq	3f1a4 <cmetrohash64_2@@Base+0xa20>
   3f1a0:	bl	13ed0 <free@plt>
   3f1a4:	mov	ip, r7
   3f1a8:	mov	lr, #0
   3f1ac:	ldm	ip!, {r0, r1, r2, r3}
   3f1b0:	str	r0, [r6]
   3f1b4:	str	r1, [r6, #4]
   3f1b8:	str	r2, [r6, #8]
   3f1bc:	str	r3, [r6, #12]
   3f1c0:	mov	r0, lr
   3f1c4:	add	sp, sp, #24
   3f1c8:	pop	{r4, r5, r6, r7, r8, pc}
   3f1cc:	mov	r0, r7
   3f1d0:	add	r7, sp, #8
   3f1d4:	b	3f198 <cmetrohash64_2@@Base+0xa14>
   3f1d8:	mvn	lr, #0
   3f1dc:	b	3f1c0 <cmetrohash64_2@@Base+0xa3c>

0003f1e0 <fb_name_table_clear@@Base>:
   3f1e0:	push	{r4, lr}
   3f1e4:	mov	r4, r0
   3f1e8:	ldr	r0, [r0]
   3f1ec:	cmp	r0, #0
   3f1f0:	beq	3f1f8 <fb_name_table_clear@@Base+0x18>
   3f1f4:	bl	13ed0 <free@plt>
   3f1f8:	mov	r3, #0
   3f1fc:	str	r3, [r4]
   3f200:	str	r3, [r4, #4]
   3f204:	str	r3, [r4, #8]
   3f208:	str	r3, [r4, #12]
   3f20c:	pop	{r4, pc}

0003f210 <fb_name_table_destroy@@Base>:
   3f210:	push	{r4, r5, r6, r7, r8, lr}
   3f214:	subs	r7, r1, #0
   3f218:	mov	r6, r0
   3f21c:	beq	3f270 <fb_name_table_destroy@@Base+0x60>
   3f220:	ldr	r3, [r0, #12]
   3f224:	ldr	r0, [r0]
   3f228:	cmp	r3, #0
   3f22c:	beq	3f274 <fb_name_table_destroy@@Base+0x64>
   3f230:	mov	r8, r2
   3f234:	sub	r5, r0, #4
   3f238:	mov	r4, #0
   3f23c:	b	3f248 <fb_name_table_destroy@@Base+0x38>
   3f240:	cmp	r4, r3
   3f244:	bcs	3f270 <fb_name_table_destroy@@Base+0x60>
   3f248:	ldr	r1, [r5, #4]!
   3f24c:	add	r4, r4, #1
   3f250:	cmp	r1, #0
   3f254:	cmpne	r1, #2
   3f258:	beq	3f240 <fb_name_table_destroy@@Base+0x30>
   3f25c:	mov	r0, r8
   3f260:	blx	r7
   3f264:	ldr	r3, [r6, #12]
   3f268:	cmp	r4, r3
   3f26c:	bcc	3f248 <fb_name_table_destroy@@Base+0x38>
   3f270:	ldr	r0, [r6]
   3f274:	cmp	r0, #0
   3f278:	beq	3f280 <fb_name_table_destroy@@Base+0x70>
   3f27c:	bl	13ed0 <free@plt>
   3f280:	mov	r3, #0
   3f284:	str	r3, [r6]
   3f288:	str	r3, [r6, #4]
   3f28c:	str	r3, [r6, #8]
   3f290:	str	r3, [r6, #12]
   3f294:	pop	{r4, r5, r6, r7, r8, pc}

0003f298 <fb_name_table_init@@Base>:
   3f298:	cmp	r1, #2
   3f29c:	push	{r4, r5, r6, lr}
   3f2a0:	mov	r4, #4
   3f2a4:	mov	r5, r0
   3f2a8:	bls	3f2c0 <fb_name_table_init@@Base+0x28>
   3f2ac:	mov	r2, #179	; 0xb3
   3f2b0:	lsl	r4, r4, #1
   3f2b4:	mul	r3, r2, r4
   3f2b8:	cmp	r1, r3, lsr #8
   3f2bc:	bhi	3f2b0 <fb_name_table_init@@Base+0x18>
   3f2c0:	mov	r1, #4
   3f2c4:	mov	r0, r4
   3f2c8:	bl	13ea0 <calloc@plt>
   3f2cc:	cmp	r0, #0
   3f2d0:	str	r0, [r5]
   3f2d4:	movne	r0, #0
   3f2d8:	strne	r4, [r5, #12]
   3f2dc:	strne	r0, [r5, #4]
   3f2e0:	strne	r0, [r5, #8]
   3f2e4:	mvneq	r0, #0
   3f2e8:	pop	{r4, r5, r6, pc}

0003f2ec <fb_name_table_resize@@Base>:
   3f2ec:	b	3f0d8 <cmetrohash64_2@@Base+0x954>

0003f2f0 <fb_name_table_insert@@Base>:
   3f2f0:	b	3eea0 <cmetrohash64_2@@Base+0x71c>

0003f2f4 <fb_name_table_insert_item@@Base>:
   3f2f4:	push	{lr}		; (str lr, [sp, #-4]!)
   3f2f8:	sub	sp, sp, #12
   3f2fc:	mov	r3, r1
   3f300:	str	r2, [sp]
   3f304:	ldr	r2, [r1, #12]
   3f308:	ldr	r1, [r1, #8]
   3f30c:	bl	3eea0 <cmetrohash64_2@@Base+0x71c>
   3f310:	add	sp, sp, #12
   3f314:	pop	{pc}		; (ldr pc, [sp], #4)

0003f318 <fb_name_table_find@@Base>:
   3f318:	push	{r4, r5, r6, r7, r8, r9, lr}
   3f31c:	sub	sp, sp, #20
   3f320:	ldr	r8, [r0]
   3f324:	cmp	r8, #0
   3f328:	beq	3f3bc <fb_name_table_find@@Base+0xa4>
   3f32c:	mov	r9, r1
   3f330:	ldr	r1, [pc, #148]	; 3f3cc <fb_name_table_find@@Base+0xb4>
   3f334:	add	r3, sp, #8
   3f338:	ldr	r7, [r0, #12]
   3f33c:	stm	sp, {r1, r3}
   3f340:	mov	r0, r9
   3f344:	mov	r3, #0
   3f348:	mov	r6, r2
   3f34c:	bl	3e060 <cmetrohash64_1@@Base>
   3f350:	ldr	r5, [sp, #8]
   3f354:	sub	r7, r7, #1
   3f358:	and	r3, r7, r5
   3f35c:	ldr	r4, [r8, r3, lsl #2]
   3f360:	cmp	r4, #0
   3f364:	beq	3f3bc <fb_name_table_find@@Base+0xa4>
   3f368:	add	r5, r5, #1
   3f36c:	b	3f384 <fb_name_table_find@@Base+0x6c>
   3f370:	and	r3, r7, r5
   3f374:	add	r5, r5, #1
   3f378:	ldr	r4, [r8, r3, lsl #2]
   3f37c:	cmp	r4, #0
   3f380:	beq	3f3bc <fb_name_table_find@@Base+0xa4>
   3f384:	cmp	r4, #2
   3f388:	beq	3f370 <fb_name_table_find@@Base+0x58>
   3f38c:	ldr	r3, [r4, #12]
   3f390:	cmp	r6, r3
   3f394:	bne	3f370 <fb_name_table_find@@Base+0x58>
   3f398:	mov	r2, r6
   3f39c:	ldr	r1, [r4, #8]
   3f3a0:	mov	r0, r9
   3f3a4:	bl	13ef4 <memcmp@plt>
   3f3a8:	cmp	r0, #0
   3f3ac:	bne	3f370 <fb_name_table_find@@Base+0x58>
   3f3b0:	mov	r0, r4
   3f3b4:	add	sp, sp, #20
   3f3b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3f3bc:	mov	r4, #0
   3f3c0:	mov	r0, r4
   3f3c4:	add	sp, sp, #20
   3f3c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3f3cc:	svccs	0x00693b52

0003f3d0 <fb_name_table_find_item@@Base>:
   3f3d0:	push	{r4, r5, r6, r7, r8, r9, lr}
   3f3d4:	sub	sp, sp, #20
   3f3d8:	ldr	r8, [r0]
   3f3dc:	ldr	r9, [r1, #8]
   3f3e0:	cmp	r8, #0
   3f3e4:	ldr	r7, [r1, #12]
   3f3e8:	beq	3f478 <fb_name_table_find_item@@Base+0xa8>
   3f3ec:	ldr	r2, [pc, #148]	; 3f488 <fb_name_table_find_item@@Base+0xb8>
   3f3f0:	add	r3, sp, #8
   3f3f4:	ldr	r6, [r0, #12]
   3f3f8:	stm	sp, {r2, r3}
   3f3fc:	mov	r0, r9
   3f400:	mov	r3, #0
   3f404:	mov	r2, r7
   3f408:	bl	3e060 <cmetrohash64_1@@Base>
   3f40c:	ldr	r5, [sp, #8]
   3f410:	sub	r6, r6, #1
   3f414:	and	r3, r6, r5
   3f418:	ldr	r4, [r8, r3, lsl #2]
   3f41c:	cmp	r4, #0
   3f420:	beq	3f478 <fb_name_table_find_item@@Base+0xa8>
   3f424:	add	r5, r5, #1
   3f428:	b	3f440 <fb_name_table_find_item@@Base+0x70>
   3f42c:	and	r3, r6, r5
   3f430:	add	r5, r5, #1
   3f434:	ldr	r4, [r8, r3, lsl #2]
   3f438:	cmp	r4, #0
   3f43c:	beq	3f478 <fb_name_table_find_item@@Base+0xa8>
   3f440:	cmp	r4, #2
   3f444:	beq	3f42c <fb_name_table_find_item@@Base+0x5c>
   3f448:	ldr	r3, [r4, #12]
   3f44c:	cmp	r7, r3
   3f450:	bne	3f42c <fb_name_table_find_item@@Base+0x5c>
   3f454:	mov	r2, r7
   3f458:	ldr	r1, [r4, #8]
   3f45c:	mov	r0, r9
   3f460:	bl	13ef4 <memcmp@plt>
   3f464:	cmp	r0, #0
   3f468:	bne	3f42c <fb_name_table_find_item@@Base+0x5c>
   3f46c:	mov	r0, r4
   3f470:	add	sp, sp, #20
   3f474:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3f478:	mov	r4, #0
   3f47c:	mov	r0, r4
   3f480:	add	sp, sp, #20
   3f484:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3f488:	svccs	0x00693b52

0003f48c <fb_name_table_remove@@Base>:
   3f48c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f490:	sub	sp, sp, #20
   3f494:	ldr	r5, [r0]
   3f498:	cmp	r5, #0
   3f49c:	beq	3f550 <fb_name_table_remove@@Base+0xc4>
   3f4a0:	mov	r8, r1
   3f4a4:	ldr	r1, [pc, #180]	; 3f560 <fb_name_table_remove@@Base+0xd4>
   3f4a8:	add	r3, sp, #8
   3f4ac:	ldr	r7, [r0, #12]
   3f4b0:	mov	r9, r0
   3f4b4:	stm	sp, {r1, r3}
   3f4b8:	mov	r0, r8
   3f4bc:	mov	r3, #0
   3f4c0:	mov	r6, r2
   3f4c4:	bl	3e060 <cmetrohash64_1@@Base>
   3f4c8:	ldr	sl, [sp, #8]
   3f4cc:	sub	r7, r7, #1
   3f4d0:	and	r3, r7, sl
   3f4d4:	ldr	fp, [r5, r3, lsl #2]
   3f4d8:	add	r4, r5, r3, lsl #2
   3f4dc:	cmp	fp, #0
   3f4e0:	beq	3f550 <fb_name_table_remove@@Base+0xc4>
   3f4e4:	add	sl, sl, #1
   3f4e8:	b	3f504 <fb_name_table_remove@@Base+0x78>
   3f4ec:	and	r3, r7, sl
   3f4f0:	add	sl, sl, #1
   3f4f4:	ldr	fp, [r5, r3, lsl #2]
   3f4f8:	add	r4, r5, r3, lsl #2
   3f4fc:	cmp	fp, #0
   3f500:	beq	3f550 <fb_name_table_remove@@Base+0xc4>
   3f504:	cmp	fp, #2
   3f508:	beq	3f4ec <fb_name_table_remove@@Base+0x60>
   3f50c:	ldr	r3, [fp, #12]
   3f510:	cmp	r6, r3
   3f514:	bne	3f4ec <fb_name_table_remove@@Base+0x60>
   3f518:	mov	r2, r6
   3f51c:	ldr	r1, [fp, #8]
   3f520:	mov	r0, r8
   3f524:	bl	13ef4 <memcmp@plt>
   3f528:	cmp	r0, #0
   3f52c:	bne	3f4ec <fb_name_table_remove@@Base+0x60>
   3f530:	ldr	r3, [r9, #8]
   3f534:	mov	r2, #2
   3f538:	sub	r3, r3, #1
   3f53c:	str	r2, [r4]
   3f540:	mov	r0, fp
   3f544:	str	r3, [r9, #8]
   3f548:	add	sp, sp, #20
   3f54c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f550:	mov	fp, #0
   3f554:	mov	r0, fp
   3f558:	add	sp, sp, #20
   3f55c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f560:	svccs	0x00693b52

0003f564 <fb_name_table_remove_item@@Base>:
   3f564:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f568:	sub	sp, sp, #20
   3f56c:	ldr	r5, [r0]
   3f570:	ldr	r9, [r1, #8]
   3f574:	cmp	r5, #0
   3f578:	ldr	r7, [r1, #12]
   3f57c:	beq	3f62c <fb_name_table_remove_item@@Base+0xc8>
   3f580:	ldr	r2, [pc, #180]	; 3f63c <fb_name_table_remove_item@@Base+0xd8>
   3f584:	add	r3, sp, #8
   3f588:	ldr	r6, [r0, #12]
   3f58c:	mov	r8, r0
   3f590:	stm	sp, {r2, r3}
   3f594:	mov	r0, r9
   3f598:	mov	r3, #0
   3f59c:	mov	r2, r7
   3f5a0:	bl	3e060 <cmetrohash64_1@@Base>
   3f5a4:	ldr	sl, [sp, #8]
   3f5a8:	sub	r6, r6, #1
   3f5ac:	and	r3, r6, sl
   3f5b0:	ldr	fp, [r5, r3, lsl #2]
   3f5b4:	add	r4, r5, r3, lsl #2
   3f5b8:	cmp	fp, #0
   3f5bc:	beq	3f62c <fb_name_table_remove_item@@Base+0xc8>
   3f5c0:	add	sl, sl, #1
   3f5c4:	b	3f5e0 <fb_name_table_remove_item@@Base+0x7c>
   3f5c8:	and	r3, r6, sl
   3f5cc:	add	sl, sl, #1
   3f5d0:	ldr	fp, [r5, r3, lsl #2]
   3f5d4:	add	r4, r5, r3, lsl #2
   3f5d8:	cmp	fp, #0
   3f5dc:	beq	3f62c <fb_name_table_remove_item@@Base+0xc8>
   3f5e0:	cmp	fp, #2
   3f5e4:	beq	3f5c8 <fb_name_table_remove_item@@Base+0x64>
   3f5e8:	ldr	r3, [fp, #12]
   3f5ec:	cmp	r7, r3
   3f5f0:	bne	3f5c8 <fb_name_table_remove_item@@Base+0x64>
   3f5f4:	mov	r2, r7
   3f5f8:	ldr	r1, [fp, #8]
   3f5fc:	mov	r0, r9
   3f600:	bl	13ef4 <memcmp@plt>
   3f604:	cmp	r0, #0
   3f608:	bne	3f5c8 <fb_name_table_remove_item@@Base+0x64>
   3f60c:	ldr	r3, [r8, #8]
   3f610:	mov	r2, #2
   3f614:	sub	r3, r3, #1
   3f618:	str	r2, [r4]
   3f61c:	mov	r0, fp
   3f620:	str	r3, [r8, #8]
   3f624:	add	sp, sp, #20
   3f628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f62c:	mov	fp, #0
   3f630:	mov	r0, fp
   3f634:	add	sp, sp, #20
   3f638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f63c:	svccs	0x00693b52

0003f640 <fb_name_table_visit@@Base>:
   3f640:	ldr	r3, [r0, #12]
   3f644:	push	{r4, r5, r6, r7, r8, lr}
   3f648:	cmp	r3, #0
   3f64c:	ldr	r5, [r0]
   3f650:	popeq	{r4, r5, r6, r7, r8, pc}
   3f654:	mov	r7, r2
   3f658:	mov	r6, r1
   3f65c:	mov	r8, r0
   3f660:	sub	r5, r5, #4
   3f664:	mov	r4, #0
   3f668:	b	3f674 <fb_name_table_visit@@Base+0x34>
   3f66c:	cmp	r4, r3
   3f670:	bcs	3f69c <fb_name_table_visit@@Base+0x5c>
   3f674:	ldr	r1, [r5, #4]!
   3f678:	add	r4, r4, #1
   3f67c:	cmp	r1, #0
   3f680:	cmpne	r1, #2
   3f684:	beq	3f66c <fb_name_table_visit@@Base+0x2c>
   3f688:	mov	r0, r7
   3f68c:	blx	r6
   3f690:	ldr	r3, [r8, #12]
   3f694:	cmp	r4, r3
   3f698:	bcc	3f674 <fb_name_table_visit@@Base+0x34>
   3f69c:	pop	{r4, r5, r6, r7, r8, pc}
   3f6a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f6a4:	subs	fp, r2, #0
   3f6a8:	sub	sp, sp, #12
   3f6ac:	beq	3f8a4 <fb_name_table_visit@@Base+0x264>
   3f6b0:	cmp	fp, #2
   3f6b4:	beq	3f8cc <fb_name_table_visit@@Base+0x28c>
   3f6b8:	cmp	fp, #1
   3f6bc:	beq	3f8b8 <fb_name_table_visit@@Base+0x278>
   3f6c0:	ldr	lr, [r0, #12]
   3f6c4:	mov	r6, r3
   3f6c8:	mov	r3, #179	; 0xb3
   3f6cc:	mov	r8, r1
   3f6d0:	mul	r3, r3, lr
   3f6d4:	ldr	r1, [r0, #8]
   3f6d8:	mov	sl, r0
   3f6dc:	cmp	r1, r3, lsr #8
   3f6e0:	bcs	3f828 <fb_name_table_visit@@Base+0x1e8>
   3f6e4:	ldrh	ip, [r8, #8]
   3f6e8:	sub	lr, lr, #1
   3f6ec:	ldr	r1, [sl]
   3f6f0:	cmp	ip, #5
   3f6f4:	beq	3f84c <fb_name_table_visit@@Base+0x20c>
   3f6f8:	cmp	ip, #6
   3f6fc:	beq	3f840 <fb_name_table_visit@@Base+0x200>
   3f700:	cmp	ip, #4
   3f704:	movne	r3, #0
   3f708:	movne	r2, r3
   3f70c:	beq	3f808 <fb_name_table_visit@@Base+0x1c8>
   3f710:	sub	r0, r6, #2
   3f714:	cmp	r0, #1
   3f718:	bls	3f858 <fb_name_table_visit@@Base+0x218>
   3f71c:	ldr	r0, [r1, r3]
   3f720:	add	r3, r1, r3
   3f724:	cmp	r0, #0
   3f728:	moveq	r9, r3
   3f72c:	beq	3f7ec <fb_name_table_visit@@Base+0x1ac>
   3f730:	add	r2, r2, #1
   3f734:	mov	r9, #0
   3f738:	str	sl, [sp, #4]
   3f73c:	mov	r7, fp
   3f740:	b	3f75c <fb_name_table_visit@@Base+0x11c>
   3f744:	and	r3, lr, r2
   3f748:	add	r2, r2, #1
   3f74c:	ldr	r0, [r1, r3, lsl #2]
   3f750:	add	r3, r1, r3, lsl #2
   3f754:	cmp	r0, #0
   3f758:	beq	3f7dc <fb_name_table_visit@@Base+0x19c>
   3f75c:	cmp	r0, #2
   3f760:	beq	3f7b8 <fb_name_table_visit@@Base+0x178>
   3f764:	ldrh	r4, [r0, #8]
   3f768:	cmp	r4, ip
   3f76c:	bne	3f744 <fb_name_table_visit@@Base+0x104>
   3f770:	cmp	ip, #5
   3f774:	beq	3f788 <fb_name_table_visit@@Base+0x148>
   3f778:	cmp	ip, #6
   3f77c:	beq	3f7c4 <fb_name_table_visit@@Base+0x184>
   3f780:	cmp	ip, #4
   3f784:	bne	3f744 <fb_name_table_visit@@Base+0x104>
   3f788:	ldrd	r4, [r0]
   3f78c:	ldrd	sl, [r8]
   3f790:	cmp	fp, r5
   3f794:	cmpeq	sl, r4
   3f798:	moveq	r4, #1
   3f79c:	movne	r4, #0
   3f7a0:	cmp	r4, #0
   3f7a4:	beq	3f744 <fb_name_table_visit@@Base+0x104>
   3f7a8:	cmp	r6, #0
   3f7ac:	streq	r7, [r3]
   3f7b0:	add	sp, sp, #12
   3f7b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f7b8:	cmp	r9, #0
   3f7bc:	moveq	r9, r3
   3f7c0:	b	3f744 <fb_name_table_visit@@Base+0x104>
   3f7c4:	ldrb	r4, [r8]
   3f7c8:	ldrb	r5, [r0]
   3f7cc:	sub	r4, r4, r5
   3f7d0:	clz	r4, r4
   3f7d4:	lsr	r4, r4, #5
   3f7d8:	b	3f7a0 <fb_name_table_visit@@Base+0x160>
   3f7dc:	cmp	r9, #0
   3f7e0:	ldr	sl, [sp, #4]
   3f7e4:	mov	fp, r7
   3f7e8:	moveq	r9, r3
   3f7ec:	ldr	r3, [sl, #8]
   3f7f0:	mov	r0, #0
   3f7f4:	add	r3, r3, #1
   3f7f8:	str	r3, [sl, #8]
   3f7fc:	str	fp, [r9]
   3f800:	add	sp, sp, #12
   3f804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f808:	ldr	r0, [r8]
   3f80c:	ldr	r3, [pc, #232]	; 3f8fc <fb_name_table_visit@@Base+0x2bc>
   3f810:	ldr	r2, [pc, #232]	; 3f900 <fb_name_table_visit@@Base+0x2c0>
   3f814:	eor	r3, r3, r0
   3f818:	mul	r2, r2, r3
   3f81c:	and	r3, lr, r2
   3f820:	lsl	r3, r3, #2
   3f824:	b	3f710 <fb_name_table_visit@@Base+0xd0>
   3f828:	lsl	r1, r1, #1
   3f82c:	bl	3f92c <fb_name_table_visit@@Base+0x2ec>
   3f830:	cmp	r0, #0
   3f834:	bne	3f8e0 <fb_name_table_visit@@Base+0x2a0>
   3f838:	ldr	lr, [sl, #12]
   3f83c:	b	3f6e4 <fb_name_table_visit@@Base+0xa4>
   3f840:	ldrb	r0, [r8]
   3f844:	ldr	r3, [pc, #184]	; 3f904 <fb_name_table_visit@@Base+0x2c4>
   3f848:	b	3f810 <fb_name_table_visit@@Base+0x1d0>
   3f84c:	ldr	r0, [r8]
   3f850:	ldr	r3, [pc, #176]	; 3f908 <fb_name_table_visit@@Base+0x2c8>
   3f854:	b	3f810 <fb_name_table_visit@@Base+0x1d0>
   3f858:	ldr	ip, [r1, r3]
   3f85c:	ldr	r0, [sl, #8]
   3f860:	cmp	ip, #2
   3f864:	cmpne	ip, #0
   3f868:	add	r0, r0, #1
   3f86c:	str	r0, [sl, #8]
   3f870:	add	r3, r1, r3
   3f874:	beq	3f898 <fb_name_table_visit@@Base+0x258>
   3f878:	add	r2, r2, #1
   3f87c:	and	r3, lr, r2
   3f880:	add	r2, r2, #1
   3f884:	ldr	r0, [r1, r3, lsl #2]
   3f888:	add	r3, r1, r3, lsl #2
   3f88c:	cmp	r0, #0
   3f890:	cmpne	r0, #2
   3f894:	bne	3f87c <fb_name_table_visit@@Base+0x23c>
   3f898:	str	fp, [r3]
   3f89c:	mov	r0, #0
   3f8a0:	b	3f800 <fb_name_table_visit@@Base+0x1c0>
   3f8a4:	ldr	r3, [pc, #96]	; 3f90c <fb_name_table_visit@@Base+0x2cc>
   3f8a8:	mov	r2, #114	; 0x72
   3f8ac:	ldr	r1, [pc, #92]	; 3f910 <fb_name_table_visit@@Base+0x2d0>
   3f8b0:	ldr	r0, [pc, #92]	; 3f914 <fb_name_table_visit@@Base+0x2d4>
   3f8b4:	bl	14038 <__assert_fail@plt>
   3f8b8:	ldr	r3, [pc, #76]	; 3f90c <fb_name_table_visit@@Base+0x2cc>
   3f8bc:	mov	r2, #116	; 0x74
   3f8c0:	ldr	r1, [pc, #72]	; 3f910 <fb_name_table_visit@@Base+0x2d0>
   3f8c4:	ldr	r0, [pc, #76]	; 3f918 <fb_name_table_visit@@Base+0x2d8>
   3f8c8:	bl	14038 <__assert_fail@plt>
   3f8cc:	ldr	r3, [pc, #56]	; 3f90c <fb_name_table_visit@@Base+0x2cc>
   3f8d0:	mov	r2, #115	; 0x73
   3f8d4:	ldr	r1, [pc, #52]	; 3f910 <fb_name_table_visit@@Base+0x2d0>
   3f8d8:	ldr	r0, [pc, #60]	; 3f91c <fb_name_table_visit@@Base+0x2dc>
   3f8dc:	bl	14038 <__assert_fail@plt>
   3f8e0:	ldr	r3, [pc, #56]	; 3f920 <fb_name_table_visit@@Base+0x2e0>
   3f8e4:	ldr	r2, [pc, #56]	; 3f924 <fb_name_table_visit@@Base+0x2e4>
   3f8e8:	ldr	r1, [pc, #56]	; 3f928 <fb_name_table_visit@@Base+0x2e8>
   3f8ec:	ldr	r0, [r3]
   3f8f0:	bl	13f84 <fprintf@plt>
   3f8f4:	mov	r0, #1
   3f8f8:	bl	13f6c <exit@plt>
   3f8fc:	svccs	0x00693b56
   3f900:			; <UNDEFINED> instruction: 0x9e3779b1
   3f904:	svccs	0x00693b54
   3f908:	svccs	0x00693b57
   3f90c:	andeq	fp, r5, ip, ror #29
   3f910:			; <UNDEFINED> instruction: 0x000588bc
   3f914:	andeq	r8, r5, ip, lsl #18
   3f918:	andeq	r8, r5, ip, lsr r9
   3f91c:	andeq	r8, r5, r4, lsr #18
   3f920:	andeq	sp, r6, r8, lsr #1
   3f924:	andeq	r8, r5, r4, asr r9
   3f928:	andeq	r8, r5, r8, lsl #19
   3f92c:	ldr	r3, [r0, #8]
   3f930:	push	{r4, r5, r6, r7, r8, lr}
   3f934:	cmp	r1, r3
   3f938:	movcc	r1, r3
   3f93c:	cmp	r1, #2
   3f940:	sub	sp, sp, #16
   3f944:	mov	r7, r0
   3f948:	ldr	r6, [r0]
   3f94c:	mov	r5, #4
   3f950:	bls	3f968 <fb_name_table_visit@@Base+0x328>
   3f954:	mov	r2, #179	; 0xb3
   3f958:	lsl	r5, r5, #1
   3f95c:	mul	r3, r2, r5
   3f960:	cmp	r1, r3, lsr #8
   3f964:	bhi	3f958 <fb_name_table_visit@@Base+0x318>
   3f968:	mov	r1, #4
   3f96c:	mov	r0, r5
   3f970:	bl	13ea0 <calloc@plt>
   3f974:	cmp	r0, #0
   3f978:	str	r0, [sp]
   3f97c:	beq	3fa28 <fb_name_table_visit@@Base+0x3e8>
   3f980:	ldr	r3, [r7, #12]
   3f984:	mov	r4, #0
   3f988:	cmp	r3, r4
   3f98c:	str	r5, [sp, #12]
   3f990:	str	r4, [sp, #4]
   3f994:	str	r4, [sp, #8]
   3f998:	beq	3fa1c <fb_name_table_visit@@Base+0x3dc>
   3f99c:	sub	r5, r6, #4
   3f9a0:	mov	r8, sp
   3f9a4:	mov	r6, #3
   3f9a8:	b	3f9b4 <fb_name_table_visit@@Base+0x374>
   3f9ac:	cmp	r4, r3
   3f9b0:	bcs	3f9e4 <fb_name_table_visit@@Base+0x3a4>
   3f9b4:	ldr	r2, [r5, #4]!
   3f9b8:	add	r4, r4, #1
   3f9bc:	cmp	r2, #0
   3f9c0:	cmpne	r2, #2
   3f9c4:	beq	3f9ac <fb_name_table_visit@@Base+0x36c>
   3f9c8:	mov	r3, r6
   3f9cc:	mov	r1, r2
   3f9d0:	mov	r0, r8
   3f9d4:	bl	3f6a0 <fb_name_table_visit@@Base+0x60>
   3f9d8:	ldr	r3, [r7, #12]
   3f9dc:	cmp	r4, r3
   3f9e0:	bcc	3f9b4 <fb_name_table_visit@@Base+0x374>
   3f9e4:	ldr	r0, [r7]
   3f9e8:	cmp	r0, #0
   3f9ec:	beq	3f9f4 <fb_name_table_visit@@Base+0x3b4>
   3f9f0:	bl	13ed0 <free@plt>
   3f9f4:	mov	ip, r8
   3f9f8:	mov	lr, #0
   3f9fc:	ldm	ip!, {r0, r1, r2, r3}
   3fa00:	str	r0, [r7]
   3fa04:	str	r1, [r7, #4]
   3fa08:	str	r2, [r7, #8]
   3fa0c:	str	r3, [r7, #12]
   3fa10:	mov	r0, lr
   3fa14:	add	sp, sp, #16
   3fa18:	pop	{r4, r5, r6, r7, r8, pc}
   3fa1c:	mov	r0, r6
   3fa20:	mov	r8, sp
   3fa24:	b	3f9e8 <fb_name_table_visit@@Base+0x3a8>
   3fa28:	mvn	lr, #0
   3fa2c:	b	3fa10 <fb_name_table_visit@@Base+0x3d0>

0003fa30 <fb_value_set_clear@@Base>:
   3fa30:	push	{r4, lr}
   3fa34:	mov	r4, r0
   3fa38:	ldr	r0, [r0]
   3fa3c:	cmp	r0, #0
   3fa40:	beq	3fa48 <fb_value_set_clear@@Base+0x18>
   3fa44:	bl	13ed0 <free@plt>
   3fa48:	mov	r3, #0
   3fa4c:	str	r3, [r4]
   3fa50:	str	r3, [r4, #4]
   3fa54:	str	r3, [r4, #8]
   3fa58:	str	r3, [r4, #12]
   3fa5c:	pop	{r4, pc}

0003fa60 <fb_value_set_destroy@@Base>:
   3fa60:	push	{r4, r5, r6, r7, r8, lr}
   3fa64:	subs	r7, r1, #0
   3fa68:	mov	r6, r0
   3fa6c:	beq	3fac0 <fb_value_set_destroy@@Base+0x60>
   3fa70:	ldr	r3, [r0, #12]
   3fa74:	ldr	r0, [r0]
   3fa78:	cmp	r3, #0
   3fa7c:	beq	3fac4 <fb_value_set_destroy@@Base+0x64>
   3fa80:	mov	r8, r2
   3fa84:	sub	r5, r0, #4
   3fa88:	mov	r4, #0
   3fa8c:	b	3fa98 <fb_value_set_destroy@@Base+0x38>
   3fa90:	cmp	r4, r3
   3fa94:	bcs	3fac0 <fb_value_set_destroy@@Base+0x60>
   3fa98:	ldr	r1, [r5, #4]!
   3fa9c:	add	r4, r4, #1
   3faa0:	cmp	r1, #0
   3faa4:	cmpne	r1, #2
   3faa8:	beq	3fa90 <fb_value_set_destroy@@Base+0x30>
   3faac:	mov	r0, r8
   3fab0:	blx	r7
   3fab4:	ldr	r3, [r6, #12]
   3fab8:	cmp	r4, r3
   3fabc:	bcc	3fa98 <fb_value_set_destroy@@Base+0x38>
   3fac0:	ldr	r0, [r6]
   3fac4:	cmp	r0, #0
   3fac8:	beq	3fad0 <fb_value_set_destroy@@Base+0x70>
   3facc:	bl	13ed0 <free@plt>
   3fad0:	mov	r3, #0
   3fad4:	str	r3, [r6]
   3fad8:	str	r3, [r6, #4]
   3fadc:	str	r3, [r6, #8]
   3fae0:	str	r3, [r6, #12]
   3fae4:	pop	{r4, r5, r6, r7, r8, pc}

0003fae8 <fb_value_set_init@@Base>:
   3fae8:	cmp	r1, #2
   3faec:	push	{r4, r5, r6, lr}
   3faf0:	mov	r4, #4
   3faf4:	mov	r5, r0
   3faf8:	bls	3fb10 <fb_value_set_init@@Base+0x28>
   3fafc:	mov	r2, #179	; 0xb3
   3fb00:	lsl	r4, r4, #1
   3fb04:	mul	r3, r2, r4
   3fb08:	cmp	r1, r3, lsr #8
   3fb0c:	bhi	3fb00 <fb_value_set_init@@Base+0x18>
   3fb10:	mov	r1, #4
   3fb14:	mov	r0, r4
   3fb18:	bl	13ea0 <calloc@plt>
   3fb1c:	cmp	r0, #0
   3fb20:	str	r0, [r5]
   3fb24:	movne	r0, #0
   3fb28:	strne	r4, [r5, #12]
   3fb2c:	strne	r0, [r5, #4]
   3fb30:	strne	r0, [r5, #8]
   3fb34:	mvneq	r0, #0
   3fb38:	pop	{r4, r5, r6, pc}

0003fb3c <fb_value_set_resize@@Base>:
   3fb3c:	b	3f92c <fb_name_table_visit@@Base+0x2ec>

0003fb40 <fb_value_set_insert@@Base>:
   3fb40:	mov	r2, r3
   3fb44:	ldr	r3, [sp]
   3fb48:	b	3f6a0 <fb_name_table_visit@@Base+0x60>

0003fb4c <fb_value_set_insert_item@@Base>:
   3fb4c:	mov	r3, r2
   3fb50:	mov	r2, r1
   3fb54:	b	3f6a0 <fb_name_table_visit@@Base+0x60>

0003fb58 <fb_value_set_find@@Base>:
   3fb58:	push	{r4, r5, r6, r7, lr}
   3fb5c:	ldr	r7, [r0]
   3fb60:	cmp	r7, #0
   3fb64:	beq	3fc68 <fb_value_set_find@@Base+0x110>
   3fb68:	ldrh	lr, [r1, #8]
   3fb6c:	ldr	r6, [r0, #12]
   3fb70:	cmp	lr, #5
   3fb74:	sub	r6, r6, #1
   3fb78:	beq	3fc5c <fb_value_set_find@@Base+0x104>
   3fb7c:	cmp	lr, #6
   3fb80:	beq	3fc0c <fb_value_set_find@@Base+0xb4>
   3fb84:	cmp	lr, #4
   3fb88:	movne	r3, #0
   3fb8c:	movne	ip, r3
   3fb90:	beq	3fc50 <fb_value_set_find@@Base+0xf8>
   3fb94:	ldr	r0, [r7, r3]
   3fb98:	cmp	r0, #0
   3fb9c:	popeq	{r4, r5, r6, r7, pc}
   3fba0:	add	ip, ip, #1
   3fba4:	b	3fbbc <fb_value_set_find@@Base+0x64>
   3fba8:	and	r3, r6, ip
   3fbac:	add	ip, ip, #1
   3fbb0:	ldr	r0, [r7, r3, lsl #2]
   3fbb4:	cmp	r0, #0
   3fbb8:	beq	3fc4c <fb_value_set_find@@Base+0xf4>
   3fbbc:	cmp	r0, #2
   3fbc0:	beq	3fba8 <fb_value_set_find@@Base+0x50>
   3fbc4:	ldrh	r3, [r0, #8]
   3fbc8:	cmp	r3, lr
   3fbcc:	bne	3fba8 <fb_value_set_find@@Base+0x50>
   3fbd0:	cmp	lr, #5
   3fbd4:	beq	3fbe8 <fb_value_set_find@@Base+0x90>
   3fbd8:	cmp	lr, #6
   3fbdc:	beq	3fc2c <fb_value_set_find@@Base+0xd4>
   3fbe0:	cmp	lr, #4
   3fbe4:	bne	3fba8 <fb_value_set_find@@Base+0x50>
   3fbe8:	ldrd	r2, [r0]
   3fbec:	ldrd	r4, [r1]
   3fbf0:	cmp	r5, r3
   3fbf4:	cmpeq	r4, r2
   3fbf8:	moveq	r3, #1
   3fbfc:	movne	r3, #0
   3fc00:	cmp	r3, #0
   3fc04:	beq	3fba8 <fb_value_set_find@@Base+0x50>
   3fc08:	pop	{r4, r5, r6, r7, pc}
   3fc0c:	ldrb	r2, [r1]
   3fc10:	ldr	r3, [pc, #88]	; 3fc70 <fb_value_set_find@@Base+0x118>
   3fc14:	ldr	ip, [pc, #88]	; 3fc74 <fb_value_set_find@@Base+0x11c>
   3fc18:	eor	r3, r3, r2
   3fc1c:	mul	ip, ip, r3
   3fc20:	and	r3, r6, ip
   3fc24:	lsl	r3, r3, #2
   3fc28:	b	3fb94 <fb_value_set_find@@Base+0x3c>
   3fc2c:	ldrb	r3, [r1]
   3fc30:	ldrb	r2, [r0]
   3fc34:	sub	r3, r3, r2
   3fc38:	clz	r3, r3
   3fc3c:	lsr	r3, r3, #5
   3fc40:	cmp	r3, #0
   3fc44:	beq	3fba8 <fb_value_set_find@@Base+0x50>
   3fc48:	pop	{r4, r5, r6, r7, pc}
   3fc4c:	pop	{r4, r5, r6, r7, pc}
   3fc50:	ldr	r2, [r1]
   3fc54:	ldr	r3, [pc, #28]	; 3fc78 <fb_value_set_find@@Base+0x120>
   3fc58:	b	3fc14 <fb_value_set_find@@Base+0xbc>
   3fc5c:	ldr	r2, [r1]
   3fc60:	ldr	r3, [pc, #20]	; 3fc7c <fb_value_set_find@@Base+0x124>
   3fc64:	b	3fc14 <fb_value_set_find@@Base+0xbc>
   3fc68:	mov	r0, r7
   3fc6c:	pop	{r4, r5, r6, r7, pc}
   3fc70:	svccs	0x00693b54
   3fc74:			; <UNDEFINED> instruction: 0x9e3779b1
   3fc78:	svccs	0x00693b56
   3fc7c:	svccs	0x00693b57

0003fc80 <fb_value_set_find_item@@Base>:
   3fc80:	push	{r4, r5, r6, r7, lr}
   3fc84:	ldr	r7, [r0]
   3fc88:	cmp	r7, #0
   3fc8c:	beq	3fd90 <fb_value_set_find_item@@Base+0x110>
   3fc90:	ldrh	lr, [r1, #8]
   3fc94:	ldr	r6, [r0, #12]
   3fc98:	cmp	lr, #5
   3fc9c:	sub	r6, r6, #1
   3fca0:	beq	3fd84 <fb_value_set_find_item@@Base+0x104>
   3fca4:	cmp	lr, #6
   3fca8:	beq	3fd34 <fb_value_set_find_item@@Base+0xb4>
   3fcac:	cmp	lr, #4
   3fcb0:	movne	r3, #0
   3fcb4:	movne	ip, r3
   3fcb8:	beq	3fd78 <fb_value_set_find_item@@Base+0xf8>
   3fcbc:	ldr	r0, [r7, r3]
   3fcc0:	cmp	r0, #0
   3fcc4:	popeq	{r4, r5, r6, r7, pc}
   3fcc8:	add	ip, ip, #1
   3fccc:	b	3fce4 <fb_value_set_find_item@@Base+0x64>
   3fcd0:	and	r3, r6, ip
   3fcd4:	add	ip, ip, #1
   3fcd8:	ldr	r0, [r7, r3, lsl #2]
   3fcdc:	cmp	r0, #0
   3fce0:	beq	3fd74 <fb_value_set_find_item@@Base+0xf4>
   3fce4:	cmp	r0, #2
   3fce8:	beq	3fcd0 <fb_value_set_find_item@@Base+0x50>
   3fcec:	ldrh	r3, [r0, #8]
   3fcf0:	cmp	r3, lr
   3fcf4:	bne	3fcd0 <fb_value_set_find_item@@Base+0x50>
   3fcf8:	cmp	lr, #5
   3fcfc:	beq	3fd10 <fb_value_set_find_item@@Base+0x90>
   3fd00:	cmp	lr, #6
   3fd04:	beq	3fd54 <fb_value_set_find_item@@Base+0xd4>
   3fd08:	cmp	lr, #4
   3fd0c:	bne	3fcd0 <fb_value_set_find_item@@Base+0x50>
   3fd10:	ldrd	r2, [r0]
   3fd14:	ldrd	r4, [r1]
   3fd18:	cmp	r5, r3
   3fd1c:	cmpeq	r4, r2
   3fd20:	moveq	r3, #1
   3fd24:	movne	r3, #0
   3fd28:	cmp	r3, #0
   3fd2c:	beq	3fcd0 <fb_value_set_find_item@@Base+0x50>
   3fd30:	pop	{r4, r5, r6, r7, pc}
   3fd34:	ldrb	r2, [r1]
   3fd38:	ldr	r3, [pc, #88]	; 3fd98 <fb_value_set_find_item@@Base+0x118>
   3fd3c:	ldr	ip, [pc, #88]	; 3fd9c <fb_value_set_find_item@@Base+0x11c>
   3fd40:	eor	r3, r3, r2
   3fd44:	mul	ip, ip, r3
   3fd48:	and	r3, r6, ip
   3fd4c:	lsl	r3, r3, #2
   3fd50:	b	3fcbc <fb_value_set_find_item@@Base+0x3c>
   3fd54:	ldrb	r3, [r1]
   3fd58:	ldrb	r2, [r0]
   3fd5c:	sub	r3, r3, r2
   3fd60:	clz	r3, r3
   3fd64:	lsr	r3, r3, #5
   3fd68:	cmp	r3, #0
   3fd6c:	beq	3fcd0 <fb_value_set_find_item@@Base+0x50>
   3fd70:	pop	{r4, r5, r6, r7, pc}
   3fd74:	pop	{r4, r5, r6, r7, pc}
   3fd78:	ldr	r2, [r1]
   3fd7c:	ldr	r3, [pc, #28]	; 3fda0 <fb_value_set_find_item@@Base+0x120>
   3fd80:	b	3fd3c <fb_value_set_find_item@@Base+0xbc>
   3fd84:	ldr	r2, [r1]
   3fd88:	ldr	r3, [pc, #20]	; 3fda4 <fb_value_set_find_item@@Base+0x124>
   3fd8c:	b	3fd3c <fb_value_set_find_item@@Base+0xbc>
   3fd90:	mov	r0, r7
   3fd94:	pop	{r4, r5, r6, r7, pc}
   3fd98:	svccs	0x00693b54
   3fd9c:			; <UNDEFINED> instruction: 0x9e3779b1
   3fda0:	svccs	0x00693b56
   3fda4:	svccs	0x00693b57

0003fda8 <fb_value_set_remove@@Base>:
   3fda8:	ldr	ip, [r0]
   3fdac:	cmp	ip, #0
   3fdb0:	beq	3fed0 <fb_value_set_remove@@Base+0x128>
   3fdb4:	push	{r4, r5, r6, r7, r8, r9, lr}
   3fdb8:	mov	r9, r0
   3fdbc:	ldrh	lr, [r1, #8]
   3fdc0:	ldr	r8, [r0, #12]
   3fdc4:	cmp	lr, #5
   3fdc8:	sub	r8, r8, #1
   3fdcc:	beq	3fec4 <fb_value_set_remove@@Base+0x11c>
   3fdd0:	cmp	lr, #6
   3fdd4:	beq	3fe7c <fb_value_set_remove@@Base+0xd4>
   3fdd8:	cmp	lr, #4
   3fddc:	movne	r3, #0
   3fde0:	movne	r2, r3
   3fde4:	beq	3feb8 <fb_value_set_remove@@Base+0x110>
   3fde8:	ldr	r0, [ip, r3]
   3fdec:	add	r3, ip, r3
   3fdf0:	cmp	r0, #0
   3fdf4:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   3fdf8:	add	r2, r2, #1
   3fdfc:	b	3fe18 <fb_value_set_remove@@Base+0x70>
   3fe00:	and	r3, r8, r2
   3fe04:	add	r2, r2, #1
   3fe08:	ldr	r0, [ip, r3, lsl #2]
   3fe0c:	add	r3, ip, r3, lsl #2
   3fe10:	cmp	r0, #0
   3fe14:	beq	3feb4 <fb_value_set_remove@@Base+0x10c>
   3fe18:	cmp	r0, #2
   3fe1c:	beq	3fe00 <fb_value_set_remove@@Base+0x58>
   3fe20:	ldrh	r4, [r0, #8]
   3fe24:	cmp	r4, lr
   3fe28:	bne	3fe00 <fb_value_set_remove@@Base+0x58>
   3fe2c:	cmp	lr, #5
   3fe30:	beq	3fe44 <fb_value_set_remove@@Base+0x9c>
   3fe34:	cmp	lr, #6
   3fe38:	beq	3fe9c <fb_value_set_remove@@Base+0xf4>
   3fe3c:	cmp	lr, #4
   3fe40:	bne	3fe00 <fb_value_set_remove@@Base+0x58>
   3fe44:	ldrd	r4, [r0]
   3fe48:	ldrd	r6, [r1]
   3fe4c:	cmp	r7, r5
   3fe50:	cmpeq	r6, r4
   3fe54:	moveq	r4, #1
   3fe58:	movne	r4, #0
   3fe5c:	cmp	r4, #0
   3fe60:	beq	3fe00 <fb_value_set_remove@@Base+0x58>
   3fe64:	ldr	r2, [r9, #8]
   3fe68:	mov	r1, #2
   3fe6c:	sub	r2, r2, #1
   3fe70:	str	r1, [r3]
   3fe74:	str	r2, [r9, #8]
   3fe78:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3fe7c:	ldrb	r0, [r1]
   3fe80:	ldr	r3, [pc, #80]	; 3fed8 <fb_value_set_remove@@Base+0x130>
   3fe84:	ldr	r2, [pc, #80]	; 3fedc <fb_value_set_remove@@Base+0x134>
   3fe88:	eor	r3, r3, r0
   3fe8c:	mul	r2, r2, r3
   3fe90:	and	r3, r8, r2
   3fe94:	lsl	r3, r3, #2
   3fe98:	b	3fde8 <fb_value_set_remove@@Base+0x40>
   3fe9c:	ldrb	r4, [r1]
   3fea0:	ldrb	r5, [r0]
   3fea4:	sub	r4, r4, r5
   3fea8:	clz	r4, r4
   3feac:	lsr	r4, r4, #5
   3feb0:	b	3fe5c <fb_value_set_remove@@Base+0xb4>
   3feb4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3feb8:	ldr	r0, [r1]
   3febc:	ldr	r3, [pc, #28]	; 3fee0 <fb_value_set_remove@@Base+0x138>
   3fec0:	b	3fe84 <fb_value_set_remove@@Base+0xdc>
   3fec4:	ldr	r0, [r1]
   3fec8:	ldr	r3, [pc, #20]	; 3fee4 <fb_value_set_remove@@Base+0x13c>
   3fecc:	b	3fe84 <fb_value_set_remove@@Base+0xdc>
   3fed0:	mov	r0, ip
   3fed4:	bx	lr
   3fed8:	svccs	0x00693b54
   3fedc:			; <UNDEFINED> instruction: 0x9e3779b1
   3fee0:	svccs	0x00693b56
   3fee4:	svccs	0x00693b57

0003fee8 <fb_value_set_remove_item@@Base>:
   3fee8:	ldr	ip, [r0]
   3feec:	cmp	ip, #0
   3fef0:	beq	40010 <fb_value_set_remove_item@@Base+0x128>
   3fef4:	push	{r4, r5, r6, r7, r8, r9, lr}
   3fef8:	mov	r9, r0
   3fefc:	ldrh	lr, [r1, #8]
   3ff00:	ldr	r8, [r0, #12]
   3ff04:	cmp	lr, #5
   3ff08:	sub	r8, r8, #1
   3ff0c:	beq	40004 <fb_value_set_remove_item@@Base+0x11c>
   3ff10:	cmp	lr, #6
   3ff14:	beq	3ffbc <fb_value_set_remove_item@@Base+0xd4>
   3ff18:	cmp	lr, #4
   3ff1c:	movne	r3, #0
   3ff20:	movne	r2, r3
   3ff24:	beq	3fff8 <fb_value_set_remove_item@@Base+0x110>
   3ff28:	ldr	r0, [ip, r3]
   3ff2c:	add	r3, ip, r3
   3ff30:	cmp	r0, #0
   3ff34:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   3ff38:	add	r2, r2, #1
   3ff3c:	b	3ff58 <fb_value_set_remove_item@@Base+0x70>
   3ff40:	and	r3, r8, r2
   3ff44:	add	r2, r2, #1
   3ff48:	ldr	r0, [ip, r3, lsl #2]
   3ff4c:	add	r3, ip, r3, lsl #2
   3ff50:	cmp	r0, #0
   3ff54:	beq	3fff4 <fb_value_set_remove_item@@Base+0x10c>
   3ff58:	cmp	r0, #2
   3ff5c:	beq	3ff40 <fb_value_set_remove_item@@Base+0x58>
   3ff60:	ldrh	r4, [r0, #8]
   3ff64:	cmp	r4, lr
   3ff68:	bne	3ff40 <fb_value_set_remove_item@@Base+0x58>
   3ff6c:	cmp	lr, #5
   3ff70:	beq	3ff84 <fb_value_set_remove_item@@Base+0x9c>
   3ff74:	cmp	lr, #6
   3ff78:	beq	3ffdc <fb_value_set_remove_item@@Base+0xf4>
   3ff7c:	cmp	lr, #4
   3ff80:	bne	3ff40 <fb_value_set_remove_item@@Base+0x58>
   3ff84:	ldrd	r4, [r0]
   3ff88:	ldrd	r6, [r1]
   3ff8c:	cmp	r7, r5
   3ff90:	cmpeq	r6, r4
   3ff94:	moveq	r4, #1
   3ff98:	movne	r4, #0
   3ff9c:	cmp	r4, #0
   3ffa0:	beq	3ff40 <fb_value_set_remove_item@@Base+0x58>
   3ffa4:	ldr	r2, [r9, #8]
   3ffa8:	mov	r1, #2
   3ffac:	sub	r2, r2, #1
   3ffb0:	str	r1, [r3]
   3ffb4:	str	r2, [r9, #8]
   3ffb8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3ffbc:	ldrb	r0, [r1]
   3ffc0:	ldr	r3, [pc, #80]	; 40018 <fb_value_set_remove_item@@Base+0x130>
   3ffc4:	ldr	r2, [pc, #80]	; 4001c <fb_value_set_remove_item@@Base+0x134>
   3ffc8:	eor	r3, r3, r0
   3ffcc:	mul	r2, r2, r3
   3ffd0:	and	r3, r8, r2
   3ffd4:	lsl	r3, r3, #2
   3ffd8:	b	3ff28 <fb_value_set_remove_item@@Base+0x40>
   3ffdc:	ldrb	r4, [r1]
   3ffe0:	ldrb	r5, [r0]
   3ffe4:	sub	r4, r4, r5
   3ffe8:	clz	r4, r4
   3ffec:	lsr	r4, r4, #5
   3fff0:	b	3ff9c <fb_value_set_remove_item@@Base+0xb4>
   3fff4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3fff8:	ldr	r0, [r1]
   3fffc:	ldr	r3, [pc, #28]	; 40020 <fb_value_set_remove_item@@Base+0x138>
   40000:	b	3ffc4 <fb_value_set_remove_item@@Base+0xdc>
   40004:	ldr	r0, [r1]
   40008:	ldr	r3, [pc, #20]	; 40024 <fb_value_set_remove_item@@Base+0x13c>
   4000c:	b	3ffc4 <fb_value_set_remove_item@@Base+0xdc>
   40010:	mov	r0, ip
   40014:	bx	lr
   40018:	svccs	0x00693b54
   4001c:			; <UNDEFINED> instruction: 0x9e3779b1
   40020:	svccs	0x00693b56
   40024:	svccs	0x00693b57

00040028 <fb_value_set_visit@@Base>:
   40028:	ldr	r3, [r0, #12]
   4002c:	push	{r4, r5, r6, r7, r8, lr}
   40030:	cmp	r3, #0
   40034:	ldr	r5, [r0]
   40038:	popeq	{r4, r5, r6, r7, r8, pc}
   4003c:	mov	r7, r2
   40040:	mov	r6, r1
   40044:	mov	r8, r0
   40048:	sub	r5, r5, #4
   4004c:	mov	r4, #0
   40050:	b	4005c <fb_value_set_visit@@Base+0x34>
   40054:	cmp	r4, r3
   40058:	bcs	40084 <fb_value_set_visit@@Base+0x5c>
   4005c:	ldr	r1, [r5, #4]!
   40060:	add	r4, r4, #1
   40064:	cmp	r1, #0
   40068:	cmpne	r1, #2
   4006c:	beq	40054 <fb_value_set_visit@@Base+0x2c>
   40070:	mov	r0, r7
   40074:	blx	r6
   40078:	ldr	r3, [r8, #12]
   4007c:	cmp	r4, r3
   40080:	bcc	4005c <fb_value_set_visit@@Base+0x34>
   40084:	pop	{r4, r5, r6, r7, r8, pc}
   40088:	eor	r1, r1, #-2147483648	; 0x80000000
   4008c:	b	40094 <fb_value_set_visit@@Base+0x6c>
   40090:	eor	r3, r3, #-2147483648	; 0x80000000
   40094:	push	{r4, r5, lr}
   40098:	lsl	r4, r1, #1
   4009c:	lsl	r5, r3, #1
   400a0:	teq	r4, r5
   400a4:	teqeq	r0, r2
   400a8:	orrsne	ip, r4, r0
   400ac:	orrsne	ip, r5, r2
   400b0:	mvnsne	ip, r4, asr #21
   400b4:	mvnsne	ip, r5, asr #21
   400b8:	beq	402a4 <fb_value_set_visit@@Base+0x27c>
   400bc:	lsr	r4, r4, #21
   400c0:	rsbs	r5, r4, r5, lsr #21
   400c4:	rsblt	r5, r5, #0
   400c8:	ble	400e8 <fb_value_set_visit@@Base+0xc0>
   400cc:	add	r4, r4, r5
   400d0:	eor	r2, r0, r2
   400d4:	eor	r3, r1, r3
   400d8:	eor	r0, r2, r0
   400dc:	eor	r1, r3, r1
   400e0:	eor	r2, r0, r2
   400e4:	eor	r3, r1, r3
   400e8:	cmp	r5, #54	; 0x36
   400ec:	pophi	{r4, r5, pc}
   400f0:	tst	r1, #-2147483648	; 0x80000000
   400f4:	lsl	r1, r1, #12
   400f8:	mov	ip, #1048576	; 0x100000
   400fc:	orr	r1, ip, r1, lsr #12
   40100:	beq	4010c <fb_value_set_visit@@Base+0xe4>
   40104:	rsbs	r0, r0, #0
   40108:	rsc	r1, r1, #0
   4010c:	tst	r3, #-2147483648	; 0x80000000
   40110:	lsl	r3, r3, #12
   40114:	orr	r3, ip, r3, lsr #12
   40118:	beq	40124 <fb_value_set_visit@@Base+0xfc>
   4011c:	rsbs	r2, r2, #0
   40120:	rsc	r3, r3, #0
   40124:	teq	r4, r5
   40128:	beq	4028c <fb_value_set_visit@@Base+0x264>
   4012c:	sub	r4, r4, #1
   40130:	rsbs	lr, r5, #32
   40134:	blt	40150 <fb_value_set_visit@@Base+0x128>
   40138:	lsl	ip, r2, lr
   4013c:	adds	r0, r0, r2, lsr r5
   40140:	adc	r1, r1, #0
   40144:	adds	r0, r0, r3, lsl lr
   40148:	adcs	r1, r1, r3, asr r5
   4014c:	b	4016c <fb_value_set_visit@@Base+0x144>
   40150:	sub	r5, r5, #32
   40154:	add	lr, lr, #32
   40158:	cmp	r2, #1
   4015c:	lsl	ip, r3, lr
   40160:	orrcs	ip, ip, #2
   40164:	adds	r0, r0, r3, asr r5
   40168:	adcs	r1, r1, r3, asr #31
   4016c:	and	r5, r1, #-2147483648	; 0x80000000
   40170:	bpl	40180 <fb_value_set_visit@@Base+0x158>
   40174:	rsbs	ip, ip, #0
   40178:	rscs	r0, r0, #0
   4017c:	rsc	r1, r1, #0
   40180:	cmp	r1, #1048576	; 0x100000
   40184:	bcc	401c4 <fb_value_set_visit@@Base+0x19c>
   40188:	cmp	r1, #2097152	; 0x200000
   4018c:	bcc	401ac <fb_value_set_visit@@Base+0x184>
   40190:	lsrs	r1, r1, #1
   40194:	rrxs	r0, r0
   40198:	rrx	ip, ip
   4019c:	add	r4, r4, #1
   401a0:	lsl	r2, r4, #21
   401a4:	cmn	r2, #4194304	; 0x400000
   401a8:	bcs	40304 <fb_value_set_visit@@Base+0x2dc>
   401ac:	cmp	ip, #-2147483648	; 0x80000000
   401b0:	lsrseq	ip, r0, #1
   401b4:	adcs	r0, r0, #0
   401b8:	adc	r1, r1, r4, lsl #20
   401bc:	orr	r1, r1, r5
   401c0:	pop	{r4, r5, pc}
   401c4:	lsls	ip, ip, #1
   401c8:	adcs	r0, r0, r0
   401cc:	adc	r1, r1, r1
   401d0:	tst	r1, #1048576	; 0x100000
   401d4:	sub	r4, r4, #1
   401d8:	bne	401ac <fb_value_set_visit@@Base+0x184>
   401dc:	teq	r1, #0
   401e0:	moveq	r1, r0
   401e4:	moveq	r0, #0
   401e8:	clz	r3, r1
   401ec:	addeq	r3, r3, #32
   401f0:	sub	r3, r3, #11
   401f4:	subs	r2, r3, #32
   401f8:	bge	4021c <fb_value_set_visit@@Base+0x1f4>
   401fc:	adds	r2, r2, #12
   40200:	ble	40218 <fb_value_set_visit@@Base+0x1f0>
   40204:	add	ip, r2, #20
   40208:	rsb	r2, r2, #12
   4020c:	lsl	r0, r1, ip
   40210:	lsr	r1, r1, r2
   40214:	b	4022c <fb_value_set_visit@@Base+0x204>
   40218:	add	r2, r2, #20
   4021c:	rsble	ip, r2, #32
   40220:	lsl	r1, r1, r2
   40224:	orrle	r1, r1, r0, lsr ip
   40228:	lslle	r0, r0, r2
   4022c:	subs	r4, r4, r3
   40230:	addge	r1, r1, r4, lsl #20
   40234:	orrge	r1, r1, r5
   40238:	popge	{r4, r5, pc}
   4023c:	mvn	r4, r4
   40240:	subs	r4, r4, #31
   40244:	bge	40280 <fb_value_set_visit@@Base+0x258>
   40248:	adds	r4, r4, #12
   4024c:	bgt	40268 <fb_value_set_visit@@Base+0x240>
   40250:	add	r4, r4, #20
   40254:	rsb	r2, r4, #32
   40258:	lsr	r0, r0, r4
   4025c:	orr	r0, r0, r1, lsl r2
   40260:	orr	r1, r5, r1, lsr r4
   40264:	pop	{r4, r5, pc}
   40268:	rsb	r4, r4, #12
   4026c:	rsb	r2, r4, #32
   40270:	lsr	r0, r0, r2
   40274:	orr	r0, r0, r1, lsl r4
   40278:	mov	r1, r5
   4027c:	pop	{r4, r5, pc}
   40280:	lsr	r0, r1, r4
   40284:	mov	r1, r5
   40288:	pop	{r4, r5, pc}
   4028c:	teq	r4, #0
   40290:	eor	r3, r3, #1048576	; 0x100000
   40294:	eoreq	r1, r1, #1048576	; 0x100000
   40298:	addeq	r4, r4, #1
   4029c:	subne	r5, r5, #1
   402a0:	b	4012c <fb_value_set_visit@@Base+0x104>
   402a4:	mvns	ip, r4, asr #21
   402a8:	mvnsne	ip, r5, asr #21
   402ac:	beq	40314 <fb_value_set_visit@@Base+0x2ec>
   402b0:	teq	r4, r5
   402b4:	teqeq	r0, r2
   402b8:	beq	402cc <fb_value_set_visit@@Base+0x2a4>
   402bc:	orrs	ip, r4, r0
   402c0:	moveq	r1, r3
   402c4:	moveq	r0, r2
   402c8:	pop	{r4, r5, pc}
   402cc:	teq	r1, r3
   402d0:	movne	r1, #0
   402d4:	movne	r0, #0
   402d8:	popne	{r4, r5, pc}
   402dc:	lsrs	ip, r4, #21
   402e0:	bne	402f4 <fb_value_set_visit@@Base+0x2cc>
   402e4:	lsls	r0, r0, #1
   402e8:	adcs	r1, r1, r1
   402ec:	orrcs	r1, r1, #-2147483648	; 0x80000000
   402f0:	pop	{r4, r5, pc}
   402f4:	adds	r4, r4, #4194304	; 0x400000
   402f8:	addcc	r1, r1, #1048576	; 0x100000
   402fc:	popcc	{r4, r5, pc}
   40300:	and	r5, r1, #-2147483648	; 0x80000000
   40304:	orr	r1, r5, #2130706432	; 0x7f000000
   40308:	orr	r1, r1, #15728640	; 0xf00000
   4030c:	mov	r0, #0
   40310:	pop	{r4, r5, pc}
   40314:	mvns	ip, r4, asr #21
   40318:	movne	r1, r3
   4031c:	movne	r0, r2
   40320:	mvnseq	ip, r5, asr #21
   40324:	movne	r3, r1
   40328:	movne	r2, r0
   4032c:	orrs	r4, r0, r1, lsl #12
   40330:	orrseq	r5, r2, r3, lsl #12
   40334:	teqeq	r1, r3
   40338:	orrne	r1, r1, #524288	; 0x80000
   4033c:	pop	{r4, r5, pc}
   40340:	teq	r0, #0
   40344:	moveq	r1, #0
   40348:	bxeq	lr
   4034c:	push	{r4, r5, lr}
   40350:	mov	r4, #1024	; 0x400
   40354:	add	r4, r4, #50	; 0x32
   40358:	mov	r5, #0
   4035c:	mov	r1, #0
   40360:	b	401dc <fb_value_set_visit@@Base+0x1b4>
   40364:	teq	r0, #0
   40368:	moveq	r1, #0
   4036c:	bxeq	lr
   40370:	push	{r4, r5, lr}
   40374:	mov	r4, #1024	; 0x400
   40378:	add	r4, r4, #50	; 0x32
   4037c:	ands	r5, r0, #-2147483648	; 0x80000000
   40380:	rsbmi	r0, r0, #0
   40384:	mov	r1, #0
   40388:	b	401dc <fb_value_set_visit@@Base+0x1b4>
   4038c:	lsls	r2, r0, #1
   40390:	asr	r1, r2, #3
   40394:	rrx	r1, r1
   40398:	lsl	r0, r2, #28
   4039c:	andsne	r3, r2, #-16777216	; 0xff000000
   403a0:	teqne	r3, #-16777216	; 0xff000000
   403a4:	eorne	r1, r1, #939524096	; 0x38000000
   403a8:	bxne	lr
   403ac:	teq	r2, #0
   403b0:	teqne	r3, #-16777216	; 0xff000000
   403b4:	bxeq	lr
   403b8:	push	{r4, r5, lr}
   403bc:	mov	r4, #896	; 0x380
   403c0:	and	r5, r1, #-2147483648	; 0x80000000
   403c4:	bic	r1, r1, #-2147483648	; 0x80000000
   403c8:	b	401dc <fb_value_set_visit@@Base+0x1b4>
   403cc:	orrs	r2, r0, r1
   403d0:	bxeq	lr
   403d4:	push	{r4, r5, lr}
   403d8:	mov	r5, #0
   403dc:	b	403fc <fb_value_set_visit@@Base+0x3d4>
   403e0:	orrs	r2, r0, r1
   403e4:	bxeq	lr
   403e8:	push	{r4, r5, lr}
   403ec:	ands	r5, r1, #-2147483648	; 0x80000000
   403f0:	bpl	403fc <fb_value_set_visit@@Base+0x3d4>
   403f4:	rsbs	r0, r0, #0
   403f8:	rsc	r1, r1, #0
   403fc:	mov	r4, #1024	; 0x400
   40400:	add	r4, r4, #50	; 0x32
   40404:	lsrs	ip, r1, #22
   40408:	beq	40180 <fb_value_set_visit@@Base+0x158>
   4040c:	mov	r2, #3
   40410:	lsrs	ip, ip, #3
   40414:	addne	r2, r2, #3
   40418:	lsrs	ip, ip, #3
   4041c:	addne	r2, r2, #3
   40420:	add	r2, r2, ip, lsr #3
   40424:	rsb	r3, r2, #32
   40428:	lsl	ip, r0, r3
   4042c:	lsr	r0, r0, r2
   40430:	orr	r0, r0, r1, lsl r3
   40434:	lsr	r1, r1, r2
   40438:	add	r4, r4, r2
   4043c:	b	40180 <fb_value_set_visit@@Base+0x158>
   40440:	eor	r0, r0, #-2147483648	; 0x80000000
   40444:	b	4044c <fb_value_set_visit@@Base+0x424>
   40448:	eor	r1, r1, #-2147483648	; 0x80000000
   4044c:	lsls	r2, r0, #1
   40450:	lslsne	r3, r1, #1
   40454:	teqne	r2, r3
   40458:	mvnsne	ip, r2, asr #24
   4045c:	mvnsne	ip, r3, asr #24
   40460:	beq	40558 <fb_value_set_visit@@Base+0x530>
   40464:	lsr	r2, r2, #24
   40468:	rsbs	r3, r2, r3, lsr #24
   4046c:	addgt	r2, r2, r3
   40470:	eorgt	r1, r0, r1
   40474:	eorgt	r0, r1, r0
   40478:	eorgt	r1, r0, r1
   4047c:	rsblt	r3, r3, #0
   40480:	cmp	r3, #25
   40484:	bxhi	lr
   40488:	tst	r0, #-2147483648	; 0x80000000
   4048c:	orr	r0, r0, #8388608	; 0x800000
   40490:	bic	r0, r0, #-16777216	; 0xff000000
   40494:	rsbne	r0, r0, #0
   40498:	tst	r1, #-2147483648	; 0x80000000
   4049c:	orr	r1, r1, #8388608	; 0x800000
   404a0:	bic	r1, r1, #-16777216	; 0xff000000
   404a4:	rsbne	r1, r1, #0
   404a8:	teq	r2, r3
   404ac:	beq	40540 <fb_value_set_visit@@Base+0x518>
   404b0:	sub	r2, r2, #1
   404b4:	adds	r0, r0, r1, asr r3
   404b8:	rsb	r3, r3, #32
   404bc:	lsl	r1, r1, r3
   404c0:	and	r3, r0, #-2147483648	; 0x80000000
   404c4:	bpl	404d0 <fb_value_set_visit@@Base+0x4a8>
   404c8:	rsbs	r1, r1, #0
   404cc:	rsc	r0, r0, #0
   404d0:	cmp	r0, #8388608	; 0x800000
   404d4:	bcc	40508 <fb_value_set_visit@@Base+0x4e0>
   404d8:	cmp	r0, #16777216	; 0x1000000
   404dc:	bcc	404f4 <fb_value_set_visit@@Base+0x4cc>
   404e0:	lsrs	r0, r0, #1
   404e4:	rrx	r1, r1
   404e8:	add	r2, r2, #1
   404ec:	cmp	r2, #254	; 0xfe
   404f0:	bcs	405ac <fb_value_set_visit@@Base+0x584>
   404f4:	cmp	r1, #-2147483648	; 0x80000000
   404f8:	adc	r0, r0, r2, lsl #23
   404fc:	biceq	r0, r0, #1
   40500:	orr	r0, r0, r3
   40504:	bx	lr
   40508:	lsls	r1, r1, #1
   4050c:	adc	r0, r0, r0
   40510:	tst	r0, #8388608	; 0x800000
   40514:	sub	r2, r2, #1
   40518:	bne	404f4 <fb_value_set_visit@@Base+0x4cc>
   4051c:	clz	ip, r0
   40520:	sub	ip, ip, #8
   40524:	subs	r2, r2, ip
   40528:	lsl	r0, r0, ip
   4052c:	addge	r0, r0, r2, lsl #23
   40530:	rsblt	r2, r2, #0
   40534:	orrge	r0, r0, r3
   40538:	orrlt	r0, r3, r0, lsr r2
   4053c:	bx	lr
   40540:	teq	r2, #0
   40544:	eor	r1, r1, #8388608	; 0x800000
   40548:	eoreq	r0, r0, #8388608	; 0x800000
   4054c:	addeq	r2, r2, #1
   40550:	subne	r3, r3, #1
   40554:	b	404b0 <fb_value_set_visit@@Base+0x488>
   40558:	lsl	r3, r1, #1
   4055c:	mvns	ip, r2, asr #24
   40560:	mvnsne	ip, r3, asr #24
   40564:	beq	405b8 <fb_value_set_visit@@Base+0x590>
   40568:	teq	r2, r3
   4056c:	beq	4057c <fb_value_set_visit@@Base+0x554>
   40570:	teq	r2, #0
   40574:	moveq	r0, r1
   40578:	bx	lr
   4057c:	teq	r0, r1
   40580:	movne	r0, #0
   40584:	bxne	lr
   40588:	tst	r2, #-16777216	; 0xff000000
   4058c:	bne	4059c <fb_value_set_visit@@Base+0x574>
   40590:	lsls	r0, r0, #1
   40594:	orrcs	r0, r0, #-2147483648	; 0x80000000
   40598:	bx	lr
   4059c:	adds	r2, r2, #33554432	; 0x2000000
   405a0:	addcc	r0, r0, #8388608	; 0x800000
   405a4:	bxcc	lr
   405a8:	and	r3, r0, #-2147483648	; 0x80000000
   405ac:	orr	r0, r3, #2130706432	; 0x7f000000
   405b0:	orr	r0, r0, #8388608	; 0x800000
   405b4:	bx	lr
   405b8:	mvns	r2, r2, asr #24
   405bc:	movne	r0, r1
   405c0:	mvnseq	r3, r3, asr #24
   405c4:	movne	r1, r0
   405c8:	lsls	r2, r0, #9
   405cc:	lslseq	r3, r1, #9
   405d0:	teqeq	r0, r1
   405d4:	orrne	r0, r0, #4194304	; 0x400000
   405d8:	bx	lr
   405dc:	mov	r3, #0
   405e0:	b	405ec <fb_value_set_visit@@Base+0x5c4>
   405e4:	ands	r3, r0, #-2147483648	; 0x80000000
   405e8:	rsbmi	r0, r0, #0
   405ec:	movs	ip, r0
   405f0:	bxeq	lr
   405f4:	orr	r3, r3, #1258291200	; 0x4b000000
   405f8:	mov	r1, r0
   405fc:	mov	r0, #0
   40600:	b	40644 <fb_value_set_visit@@Base+0x61c>
   40604:	orrs	r2, r0, r1
   40608:	bxeq	lr
   4060c:	mov	r3, #0
   40610:	b	4062c <fb_value_set_visit@@Base+0x604>
   40614:	orrs	r2, r0, r1
   40618:	bxeq	lr
   4061c:	ands	r3, r1, #-2147483648	; 0x80000000
   40620:	bpl	4062c <fb_value_set_visit@@Base+0x604>
   40624:	rsbs	r0, r0, #0
   40628:	rsc	r1, r1, #0
   4062c:	movs	ip, r1
   40630:	moveq	ip, r0
   40634:	moveq	r1, r0
   40638:	moveq	r0, #0
   4063c:	orr	r3, r3, #1526726656	; 0x5b000000
   40640:	subeq	r3, r3, #268435456	; 0x10000000
   40644:	sub	r3, r3, #8388608	; 0x800000
   40648:	clz	r2, ip
   4064c:	subs	r2, r2, #8
   40650:	sub	r3, r3, r2, lsl #23
   40654:	blt	40674 <fb_value_set_visit@@Base+0x64c>
   40658:	add	r3, r3, r1, lsl r2
   4065c:	lsl	ip, r0, r2
   40660:	rsb	r2, r2, #32
   40664:	cmp	ip, #-2147483648	; 0x80000000
   40668:	adc	r0, r3, r0, lsr r2
   4066c:	biceq	r0, r0, #1
   40670:	bx	lr
   40674:	add	r2, r2, #32
   40678:	lsl	ip, r1, r2
   4067c:	rsb	r2, r2, #32
   40680:	orrs	r0, r0, ip, lsl #1
   40684:	adc	r0, r3, r1, lsr r2
   40688:	biceq	r0, r0, ip, lsr #31
   4068c:	bx	lr
   40690:	cmp	r3, #0
   40694:	cmpeq	r2, #0
   40698:	bne	406b0 <fb_value_set_visit@@Base+0x688>
   4069c:	cmp	r1, #0
   406a0:	cmpeq	r0, #0
   406a4:	mvnne	r1, #0
   406a8:	mvnne	r0, #0
   406ac:	b	406cc <fb_value_set_visit@@Base+0x6a4>
   406b0:	sub	sp, sp, #8
   406b4:	push	{sp, lr}
   406b8:	bl	407c8 <fb_value_set_visit@@Base+0x7a0>
   406bc:	ldr	lr, [sp, #4]
   406c0:	add	sp, sp, #8
   406c4:	pop	{r2, r3}
   406c8:	bx	lr
   406cc:	push	{r1, lr}
   406d0:	mov	r0, #8
   406d4:	bl	13eac <raise@plt>
   406d8:	pop	{r1, pc}
   406dc:	vmov	s15, r0
   406e0:	vcmpe.f32	s15, #0.0
   406e4:	vmrs	APSR_nzcv, fpscr
   406e8:	bmi	406f0 <fb_value_set_visit@@Base+0x6c8>
   406ec:	b	40738 <fb_value_set_visit@@Base+0x710>
   406f0:	push	{r4, lr}
   406f4:	eor	r0, r0, #-2147483648	; 0x80000000
   406f8:	bl	40738 <fb_value_set_visit@@Base+0x710>
   406fc:	rsbs	r0, r0, #0
   40700:	rsc	r1, r1, #0
   40704:	pop	{r4, pc}
   40708:	vmov	d7, r0, r1
   4070c:	vcmpe.f64	d7, #0.0
   40710:	vmrs	APSR_nzcv, fpscr
   40714:	bmi	4071c <fb_value_set_visit@@Base+0x6f4>
   40718:	b	40780 <fb_value_set_visit@@Base+0x758>
   4071c:	push	{r4, lr}
   40720:	eor	r1, r1, #-2147483648	; 0x80000000
   40724:	bl	40780 <fb_value_set_visit@@Base+0x758>
   40728:	rsbs	r0, r0, #0
   4072c:	rsc	r1, r1, #0
   40730:	pop	{r4, pc}
   40734:	andeq	r0, r0, r0
   40738:	vmov	s15, r0
   4073c:	vldr	d6, [pc, #44]	; 40770 <fb_value_set_visit@@Base+0x748>
   40740:	vldr	d5, [pc, #48]	; 40778 <fb_value_set_visit@@Base+0x750>
   40744:	mov	r0, #0
   40748:	vcvt.f64.f32	d7, s15
   4074c:	vmul.f64	d6, d7, d6
   40750:	vcvt.u32.f64	s12, d6
   40754:	vcvt.f64.u32	d4, s12
   40758:	vmov	r1, s12
   4075c:	vmls.f64	d7, d4, d5
   40760:	vcvt.u32.f64	s14, d7
   40764:	vmov	r3, s14
   40768:	orr	r0, r0, r3
   4076c:	bx	lr
   40770:	andeq	r0, r0, r0
   40774:	ldclcc	0, cr0, [r0]
   40778:	andeq	r0, r0, r0
   4077c:	mvnsmi	r0, r0
   40780:	vmov	d7, r0, r1
   40784:	vldr	d6, [pc, #44]	; 407b8 <fb_value_set_visit@@Base+0x790>
   40788:	vldr	d5, [pc, #48]	; 407c0 <fb_value_set_visit@@Base+0x798>
   4078c:	mov	r0, #0
   40790:	vmul.f64	d6, d7, d6
   40794:	vcvt.u32.f64	s12, d6
   40798:	vcvt.f64.u32	d4, s12
   4079c:	vmov	r1, s12
   407a0:	vmls.f64	d7, d4, d5
   407a4:	vcvt.u32.f64	s14, d7
   407a8:	vmov	r3, s14
   407ac:	orr	r0, r0, r3
   407b0:	bx	lr
   407b4:	nop			; (mov r0, r0)
   407b8:	andeq	r0, r0, r0
   407bc:	ldclcc	0, cr0, [r0]
   407c0:	andeq	r0, r0, r0
   407c4:	mvnsmi	r0, r0
   407c8:	cmp	r1, r3
   407cc:	push	{r4, r5, r6, r7, r8, r9, lr}
   407d0:	cmpeq	r0, r2
   407d4:	mov	r4, r0
   407d8:	mov	r5, r1
   407dc:	ldr	r9, [sp, #28]
   407e0:	movcc	r0, #0
   407e4:	movcc	r1, #0
   407e8:	bcc	408e0 <fb_value_set_visit@@Base+0x8b8>
   407ec:	cmp	r3, #0
   407f0:	clzeq	ip, r2
   407f4:	clzne	ip, r3
   407f8:	addeq	ip, ip, #32
   407fc:	cmp	r5, #0
   40800:	clzeq	r1, r4
   40804:	addeq	r1, r1, #32
   40808:	clzne	r1, r5
   4080c:	sub	ip, ip, r1
   40810:	sub	lr, ip, #32
   40814:	lsl	r7, r3, ip
   40818:	rsb	r8, ip, #32
   4081c:	orr	r7, r7, r2, lsl lr
   40820:	orr	r7, r7, r2, lsr r8
   40824:	lsl	r6, r2, ip
   40828:	cmp	r5, r7
   4082c:	cmpeq	r4, r6
   40830:	movcc	r0, #0
   40834:	movcc	r1, #0
   40838:	bcc	40854 <fb_value_set_visit@@Base+0x82c>
   4083c:	mov	r3, #1
   40840:	subs	r4, r4, r6
   40844:	lsl	r1, r3, lr
   40848:	lsl	r0, r3, ip
   4084c:	orr	r1, r1, r3, lsr r8
   40850:	sbc	r5, r5, r7
   40854:	cmp	ip, #0
   40858:	beq	408e0 <fb_value_set_visit@@Base+0x8b8>
   4085c:	lsrs	r3, r7, #1
   40860:	rrx	r2, r6
   40864:	mov	r6, ip
   40868:	b	4088c <fb_value_set_visit@@Base+0x864>
   4086c:	subs	r4, r4, r2
   40870:	sbc	r5, r5, r3
   40874:	adds	r4, r4, r4
   40878:	adc	r5, r5, r5
   4087c:	adds	r4, r4, #1
   40880:	adc	r5, r5, #0
   40884:	subs	r6, r6, #1
   40888:	beq	408a8 <fb_value_set_visit@@Base+0x880>
   4088c:	cmp	r5, r3
   40890:	cmpeq	r4, r2
   40894:	bcs	4086c <fb_value_set_visit@@Base+0x844>
   40898:	adds	r4, r4, r4
   4089c:	adc	r5, r5, r5
   408a0:	subs	r6, r6, #1
   408a4:	bne	4088c <fb_value_set_visit@@Base+0x864>
   408a8:	lsr	r6, r4, ip
   408ac:	lsr	r7, r5, ip
   408b0:	orr	r6, r6, r5, lsl r8
   408b4:	adds	r2, r0, r4
   408b8:	orr	r6, r6, r5, lsr lr
   408bc:	adc	r3, r1, r5
   408c0:	lsl	r1, r7, ip
   408c4:	orr	r1, r1, r6, lsl lr
   408c8:	lsl	r0, r6, ip
   408cc:	orr	r1, r1, r6, lsr r8
   408d0:	subs	r0, r2, r0
   408d4:	mov	r4, r6
   408d8:	mov	r5, r7
   408dc:	sbc	r1, r3, r1
   408e0:	cmp	r9, #0
   408e4:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   408e8:	strd	r4, [r9]
   408ec:	pop	{r4, r5, r6, r7, r8, r9, pc}

000408f0 <__libc_csu_init@@Base>:
   408f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   408f4:	mov	r7, r0
   408f8:	ldr	r6, [pc, #72]	; 40948 <__libc_csu_init@@Base+0x58>
   408fc:	ldr	r5, [pc, #72]	; 4094c <__libc_csu_init@@Base+0x5c>
   40900:	add	r6, pc, r6
   40904:	add	r5, pc, r5
   40908:	sub	r6, r6, r5
   4090c:	mov	r8, r1
   40910:	mov	r9, r2
   40914:	bl	13e80 <calloc@plt-0x20>
   40918:	asrs	r6, r6, #2
   4091c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   40920:	mov	r4, #0
   40924:	add	r4, r4, #1
   40928:	ldr	r3, [r5], #4
   4092c:	mov	r2, r9
   40930:	mov	r1, r8
   40934:	mov	r0, r7
   40938:	blx	r3
   4093c:	cmp	r6, r4
   40940:	bne	40924 <__libc_csu_init@@Base+0x34>
   40944:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   40948:	andeq	ip, r2, r8, lsl #12
   4094c:	andeq	ip, r2, r0, lsl #12

00040950 <__libc_csu_fini@@Base>:
   40950:	bx	lr

Disassembly of section .fini:

00040954 <.fini>:
   40954:	push	{r3, lr}
   40958:	pop	{r3, pc}
