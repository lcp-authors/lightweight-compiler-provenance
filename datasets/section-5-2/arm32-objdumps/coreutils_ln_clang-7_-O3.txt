
../repos/coreutils/src/ln:     file format elf32-littlearm


Disassembly of section .init:

000112f8 <.init>:
   112f8:	push	{r3, lr}
   112fc:	bl	116dc <__mempcpy_chk@plt+0x4c>
   11300:	pop	{r3, pc}

Disassembly of section .plt:

00011304 <calloc@plt-0x14>:
   11304:	push	{lr}		; (str lr, [sp, #-4]!)
   11308:	ldr	lr, [pc, #4]	; 11314 <calloc@plt-0x4>
   1130c:	add	lr, pc, lr
   11310:	ldr	pc, [lr, #8]!
   11314:	andeq	sl, r1, ip, ror #25

00011318 <calloc@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #106496	; 0x1a000
   11320:	ldr	pc, [ip, #3308]!	; 0xcec

00011324 <fputs_unlocked@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #106496	; 0x1a000
   1132c:	ldr	pc, [ip, #3300]!	; 0xce4

00011330 <raise@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #106496	; 0x1a000
   11338:	ldr	pc, [ip, #3292]!	; 0xcdc

0001133c <__getdelim@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #106496	; 0x1a000
   11344:	ldr	pc, [ip, #3284]!	; 0xcd4

00011348 <strcmp@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #106496	; 0x1a000
   11350:	ldr	pc, [ip, #3276]!	; 0xccc

00011354 <pathconf@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #106496	; 0x1a000
   1135c:	ldr	pc, [ip, #3268]!	; 0xcc4

00011360 <rewinddir@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #106496	; 0x1a000
   11368:	ldr	pc, [ip, #3260]!	; 0xcbc

0001136c <fflush@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #106496	; 0x1a000
   11374:	ldr	pc, [ip, #3252]!	; 0xcb4

00011378 <unlinkat@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #106496	; 0x1a000
   11380:	ldr	pc, [ip, #3244]!	; 0xcac

00011384 <memmove@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #106496	; 0x1a000
   1138c:	ldr	pc, [ip, #3236]!	; 0xca4

00011390 <free@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #106496	; 0x1a000
   11398:	ldr	pc, [ip, #3228]!	; 0xc9c

0001139c <faccessat@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #106496	; 0x1a000
   113a4:	ldr	pc, [ip, #3220]!	; 0xc94

000113a8 <clock_gettime@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #106496	; 0x1a000
   113b0:	ldr	pc, [ip, #3212]!	; 0xc8c

000113b4 <_exit@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #106496	; 0x1a000
   113bc:	ldr	pc, [ip, #3204]!	; 0xc84

000113c0 <memcpy@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #106496	; 0x1a000
   113c8:	ldr	pc, [ip, #3196]!	; 0xc7c

000113cc <mbsinit@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #106496	; 0x1a000
   113d4:	ldr	pc, [ip, #3188]!	; 0xc74

000113d8 <memcmp@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #106496	; 0x1a000
   113e0:	ldr	pc, [ip, #3180]!	; 0xc6c

000113e4 <dcgettext@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #106496	; 0x1a000
   113ec:	ldr	pc, [ip, #3172]!	; 0xc64

000113f0 <realloc@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #106496	; 0x1a000
   113f8:	ldr	pc, [ip, #3164]!	; 0xc5c

000113fc <textdomain@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #106496	; 0x1a000
   11404:	ldr	pc, [ip, #3156]!	; 0xc54

00011408 <rawmemchr@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #106496	; 0x1a000
   11410:	ldr	pc, [ip, #3148]!	; 0xc4c

00011414 <__fxstatat64@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #106496	; 0x1a000
   1141c:	ldr	pc, [ip, #3140]!	; 0xc44

00011420 <iswprint@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #106496	; 0x1a000
   11428:	ldr	pc, [ip, #3132]!	; 0xc3c

0001142c <readlink@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #106496	; 0x1a000
   11434:	ldr	pc, [ip, #3124]!	; 0xc34

00011438 <fwrite@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #106496	; 0x1a000
   11440:	ldr	pc, [ip, #3116]!	; 0xc2c

00011444 <lseek64@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #106496	; 0x1a000
   1144c:	ldr	pc, [ip, #3108]!	; 0xc24

00011450 <__ctype_get_mb_cur_max@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #106496	; 0x1a000
   11458:	ldr	pc, [ip, #3100]!	; 0xc1c

0001145c <strcpy@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #106496	; 0x1a000
   11464:	ldr	pc, [ip, #3092]!	; 0xc14

00011468 <__fpending@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #106496	; 0x1a000
   11470:	ldr	pc, [ip, #3084]!	; 0xc0c

00011474 <mbrtowc@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #106496	; 0x1a000
   1147c:	ldr	pc, [ip, #3076]!	; 0xc04

00011480 <error@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #106496	; 0x1a000
   11488:	ldr	pc, [ip, #3068]!	; 0xbfc

0001148c <open64@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #106496	; 0x1a000
   11494:	ldr	pc, [ip, #3060]!	; 0xbf4

00011498 <getenv@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #106496	; 0x1a000
   114a0:	ldr	pc, [ip, #3052]!	; 0xbec

000114a4 <malloc@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #106496	; 0x1a000
   114ac:	ldr	pc, [ip, #3044]!	; 0xbe4

000114b0 <__libc_start_main@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #106496	; 0x1a000
   114b8:	ldr	pc, [ip, #3036]!	; 0xbdc

000114bc <__freading@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #106496	; 0x1a000
   114c4:	ldr	pc, [ip, #3028]!	; 0xbd4

000114c8 <__gmon_start__@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #106496	; 0x1a000
   114d0:	ldr	pc, [ip, #3020]!	; 0xbcc

000114d4 <getopt_long@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #106496	; 0x1a000
   114dc:	ldr	pc, [ip, #3012]!	; 0xbc4

000114e0 <__ctype_b_loc@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #106496	; 0x1a000
   114e8:	ldr	pc, [ip, #3004]!	; 0xbbc

000114ec <getcwd@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #106496	; 0x1a000
   114f4:	ldr	pc, [ip, #2996]!	; 0xbb4

000114f8 <exit@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #106496	; 0x1a000
   11500:	ldr	pc, [ip, #2988]!	; 0xbac

00011504 <strlen@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #106496	; 0x1a000
   1150c:	ldr	pc, [ip, #2980]!	; 0xba4

00011510 <openat64@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #106496	; 0x1a000
   11518:	ldr	pc, [ip, #2972]!	; 0xb9c

0001151c <__errno_location@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #106496	; 0x1a000
   11524:	ldr	pc, [ip, #2964]!	; 0xb94

00011528 <__cxa_atexit@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #106496	; 0x1a000
   11530:	ldr	pc, [ip, #2956]!	; 0xb8c

00011534 <mkdir@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #106496	; 0x1a000
   1153c:	ldr	pc, [ip, #2948]!	; 0xb84

00011540 <memset@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #106496	; 0x1a000
   11548:	ldr	pc, [ip, #2940]!	; 0xb7c

0001154c <fpathconf@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #106496	; 0x1a000
   11554:	ldr	pc, [ip, #2932]!	; 0xb74

00011558 <renameat2@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #106496	; 0x1a000
   11560:	ldr	pc, [ip, #2924]!	; 0xb6c

00011564 <__printf_chk@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #106496	; 0x1a000
   1156c:	ldr	pc, [ip, #2916]!	; 0xb64

00011570 <fileno@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #106496	; 0x1a000
   11578:	ldr	pc, [ip, #2908]!	; 0xb5c

0001157c <__fprintf_chk@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #106496	; 0x1a000
   11584:	ldr	pc, [ip, #2900]!	; 0xb54

00011588 <fclose@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #106496	; 0x1a000
   11590:	ldr	pc, [ip, #2892]!	; 0xb4c

00011594 <linkat@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #106496	; 0x1a000
   1159c:	ldr	pc, [ip, #2884]!	; 0xb44

000115a0 <fseeko64@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #106496	; 0x1a000
   115a8:	ldr	pc, [ip, #2876]!	; 0xb3c

000115ac <fcntl64@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #106496	; 0x1a000
   115b4:	ldr	pc, [ip, #2868]!	; 0xb34

000115b8 <rpmatch@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #106496	; 0x1a000
   115c0:	ldr	pc, [ip, #2860]!	; 0xb2c

000115c4 <__overflow@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #106496	; 0x1a000
   115cc:	ldr	pc, [ip, #2852]!	; 0xb24

000115d0 <setlocale@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #106496	; 0x1a000
   115d8:	ldr	pc, [ip, #2844]!	; 0xb1c

000115dc <strrchr@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #106496	; 0x1a000
   115e4:	ldr	pc, [ip, #2836]!	; 0xb14

000115e8 <nl_langinfo@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #106496	; 0x1a000
   115f0:	ldr	pc, [ip, #2828]!	; 0xb0c

000115f4 <readdir64@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #106496	; 0x1a000
   115fc:	ldr	pc, [ip, #2820]!	; 0xb04

00011600 <fdopendir@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #106496	; 0x1a000
   11608:	ldr	pc, [ip, #2812]!	; 0xafc

0001160c <renameat@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #106496	; 0x1a000
   11614:	ldr	pc, [ip, #2804]!	; 0xaf4

00011618 <bindtextdomain@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #106496	; 0x1a000
   11620:	ldr	pc, [ip, #2796]!	; 0xaec

00011624 <getrandom@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #106496	; 0x1a000
   1162c:	ldr	pc, [ip, #2788]!	; 0xae4

00011630 <symlinkat@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #106496	; 0x1a000
   11638:	ldr	pc, [ip, #2780]!	; 0xadc

0001163c <__xstat64@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #106496	; 0x1a000
   11644:	ldr	pc, [ip, #2772]!	; 0xad4

00011648 <strncmp@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #106496	; 0x1a000
   11650:	ldr	pc, [ip, #2764]!	; 0xacc

00011654 <abort@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #106496	; 0x1a000
   1165c:	ldr	pc, [ip, #2756]!	; 0xac4

00011660 <close@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #106496	; 0x1a000
   11668:	ldr	pc, [ip, #2748]!	; 0xabc

0001166c <__lxstat64@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #106496	; 0x1a000
   11674:	ldr	pc, [ip, #2740]!	; 0xab4

00011678 <closedir@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #106496	; 0x1a000
   11680:	ldr	pc, [ip, #2732]!	; 0xaac

00011684 <strspn@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #106496	; 0x1a000
   1168c:	ldr	pc, [ip, #2724]!	; 0xaa4

00011690 <__mempcpy_chk@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #106496	; 0x1a000
   11698:	ldr	pc, [ip, #2716]!	; 0xa9c

Disassembly of section .text:

000116a0 <.text>:
   116a0:	mov	fp, #0
   116a4:	mov	lr, #0
   116a8:	pop	{r1}		; (ldr r1, [sp], #4)
   116ac:	mov	r2, sp
   116b0:	push	{r2}		; (str r2, [sp, #-4]!)
   116b4:	push	{r0}		; (str r0, [sp, #-4]!)
   116b8:	ldr	ip, [pc, #16]	; 116d0 <__mempcpy_chk@plt+0x40>
   116bc:	push	{ip}		; (str ip, [sp, #-4]!)
   116c0:	ldr	r0, [pc, #12]	; 116d4 <__mempcpy_chk@plt+0x44>
   116c4:	ldr	r3, [pc, #12]	; 116d8 <__mempcpy_chk@plt+0x48>
   116c8:	bl	114b0 <__libc_start_main@plt>
   116cc:	bl	11654 <abort@plt>
   116d0:	andeq	sl, r1, r4, asr #7
   116d4:			; <UNDEFINED> instruction: 0x00011ab0
   116d8:	andeq	sl, r1, r4, ror #6
   116dc:	ldr	r3, [pc, #20]	; 116f8 <__mempcpy_chk@plt+0x68>
   116e0:	ldr	r2, [pc, #20]	; 116fc <__mempcpy_chk@plt+0x6c>
   116e4:	add	r3, pc, r3
   116e8:	ldr	r2, [r3, r2]
   116ec:	cmp	r2, #0
   116f0:	bxeq	lr
   116f4:	b	114c8 <__gmon_start__@plt>
   116f8:	andeq	sl, r1, r4, lsl r9
   116fc:	andeq	r0, r0, r8, lsr r1
   11700:	ldr	r0, [pc, #24]	; 11720 <__mempcpy_chk@plt+0x90>
   11704:	ldr	r3, [pc, #24]	; 11724 <__mempcpy_chk@plt+0x94>
   11708:	cmp	r3, r0
   1170c:	bxeq	lr
   11710:	ldr	r3, [pc, #16]	; 11728 <__mempcpy_chk@plt+0x98>
   11714:	cmp	r3, #0
   11718:	bxeq	lr
   1171c:	bx	r3
   11720:	muleq	r2, r4, r1
   11724:	muleq	r2, r4, r1
   11728:	andeq	r0, r0, r0
   1172c:	ldr	r0, [pc, #36]	; 11758 <__mempcpy_chk@plt+0xc8>
   11730:	ldr	r1, [pc, #36]	; 1175c <__mempcpy_chk@plt+0xcc>
   11734:	sub	r1, r1, r0
   11738:	asr	r1, r1, #2
   1173c:	add	r1, r1, r1, lsr #31
   11740:	asrs	r1, r1, #1
   11744:	bxeq	lr
   11748:	ldr	r3, [pc, #16]	; 11760 <__mempcpy_chk@plt+0xd0>
   1174c:	cmp	r3, #0
   11750:	bxeq	lr
   11754:	bx	r3
   11758:	muleq	r2, r4, r1
   1175c:	muleq	r2, r4, r1
   11760:	andeq	r0, r0, r0
   11764:	push	{r4, lr}
   11768:	ldr	r4, [pc, #24]	; 11788 <__mempcpy_chk@plt+0xf8>
   1176c:	ldrb	r3, [r4]
   11770:	cmp	r3, #0
   11774:	popne	{r4, pc}
   11778:	bl	11700 <__mempcpy_chk@plt+0x70>
   1177c:	mov	r3, #1
   11780:	strb	r3, [r4]
   11784:	pop	{r4, pc}
   11788:			; <UNDEFINED> instruction: 0x0002c1bc
   1178c:	b	1172c <__mempcpy_chk@plt+0x9c>
   11790:	push	{fp, lr}
   11794:	mov	fp, sp
   11798:	sub	sp, sp, #64	; 0x40
   1179c:	mov	r4, r0
   117a0:	cmp	r0, #0
   117a4:	bne	11a6c <__mempcpy_chk@plt+0x3dc>
   117a8:	movw	r1, #42003	; 0xa413
   117ac:	mov	r0, #0
   117b0:	mov	r2, #5
   117b4:	movt	r1, #1
   117b8:	bl	113e4 <dcgettext@plt>
   117bc:	mov	r1, r0
   117c0:	movw	r0, #49632	; 0xc1e0
   117c4:	movt	r0, #2
   117c8:	ldr	r2, [r0]
   117cc:	mov	r0, #1
   117d0:	mov	r3, r2
   117d4:	str	r2, [sp]
   117d8:	str	r2, [sp, #4]
   117dc:	bl	11564 <__printf_chk@plt>
   117e0:	movw	r1, #42164	; 0xa4b4
   117e4:	mov	r0, #0
   117e8:	mov	r2, #5
   117ec:	movt	r1, #1
   117f0:	bl	113e4 <dcgettext@plt>
   117f4:	movw	r7, #49588	; 0xc1b4
   117f8:	movt	r7, #2
   117fc:	ldr	r1, [r7]
   11800:	bl	11324 <fputs_unlocked@plt>
   11804:	movw	r1, #44557	; 0xae0d
   11808:	mov	r0, #0
   1180c:	mov	r2, #5
   11810:	movt	r1, #1
   11814:	bl	113e4 <dcgettext@plt>
   11818:	ldr	r1, [r7]
   1181c:	bl	11324 <fputs_unlocked@plt>
   11820:	movw	r1, #42680	; 0xa6b8
   11824:	mov	r0, #0
   11828:	mov	r2, #5
   1182c:	movt	r1, #1
   11830:	bl	113e4 <dcgettext@plt>
   11834:	ldr	r1, [r7]
   11838:	bl	11324 <fputs_unlocked@plt>
   1183c:	movw	r1, #43127	; 0xa877
   11840:	mov	r0, #0
   11844:	mov	r2, #5
   11848:	movt	r1, #1
   1184c:	bl	113e4 <dcgettext@plt>
   11850:	ldr	r1, [r7]
   11854:	bl	11324 <fputs_unlocked@plt>
   11858:	movw	r1, #43628	; 0xaa6c
   1185c:	mov	r0, #0
   11860:	mov	r2, #5
   11864:	movt	r1, #1
   11868:	bl	113e4 <dcgettext@plt>
   1186c:	ldr	r1, [r7]
   11870:	bl	11324 <fputs_unlocked@plt>
   11874:	movw	r1, #43942	; 0xaba6
   11878:	mov	r0, #0
   1187c:	mov	r2, #5
   11880:	movt	r1, #1
   11884:	bl	113e4 <dcgettext@plt>
   11888:	ldr	r1, [r7]
   1188c:	bl	11324 <fputs_unlocked@plt>
   11890:	movw	r1, #43987	; 0xabd3
   11894:	mov	r0, #0
   11898:	mov	r2, #5
   1189c:	movt	r1, #1
   118a0:	bl	113e4 <dcgettext@plt>
   118a4:	ldr	r1, [r7]
   118a8:	bl	11324 <fputs_unlocked@plt>
   118ac:	movw	r1, #44632	; 0xae58
   118b0:	mov	r0, #0
   118b4:	mov	r2, #5
   118b8:	movt	r1, #1
   118bc:	bl	113e4 <dcgettext@plt>
   118c0:	ldr	r1, [r7]
   118c4:	bl	11324 <fputs_unlocked@plt>
   118c8:	movw	r1, #44853	; 0xaf35
   118cc:	mov	r0, #0
   118d0:	mov	r2, #5
   118d4:	movt	r1, #1
   118d8:	bl	113e4 <dcgettext@plt>
   118dc:	ldr	r1, [r7]
   118e0:	bl	11324 <fputs_unlocked@plt>
   118e4:	movw	r1, #44041	; 0xac09
   118e8:	mov	r0, #0
   118ec:	mov	r2, #5
   118f0:	movt	r1, #1
   118f4:	bl	113e4 <dcgettext@plt>
   118f8:	movw	r2, #44179	; 0xac93
   118fc:	mov	r1, r0
   11900:	mov	r0, #1
   11904:	movt	r2, #1
   11908:	bl	11564 <__printf_chk@plt>
   1190c:	movw	r0, #46128	; 0xb430
   11910:	mov	r2, #48	; 0x30
   11914:	add	r6, sp, #8
   11918:	movw	r5, #44182	; 0xac96
   1191c:	movt	r0, #1
   11920:	movt	r5, #1
   11924:	add	r1, r0, #32
   11928:	add	r3, r0, #16
   1192c:	vld1.64	{d18-d19}, [r0], r2
   11930:	vld1.64	{d16-d17}, [r1]
   11934:	vld1.64	{d20-d21}, [r3]
   11938:	add	r1, r6, #32
   1193c:	vldr	d22, [r0]
   11940:	add	r0, r6, #16
   11944:	vst1.64	{d16-d17}, [r1]
   11948:	movw	r1, #45075	; 0xb013
   1194c:	vst1.64	{d20-d21}, [r0]
   11950:	mov	r0, r6
   11954:	vst1.64	{d18-d19}, [r0], r2
   11958:	movt	r1, #1
   1195c:	vstr	d22, [r0]
   11960:	mov	r0, r5
   11964:	bl	11348 <strcmp@plt>
   11968:	cmp	r0, #0
   1196c:	ldrne	r1, [r6, #8]!
   11970:	cmpne	r1, #0
   11974:	bne	11960 <__mempcpy_chk@plt+0x2d0>
   11978:	ldr	r6, [r6, #4]
   1197c:	movw	r1, #45170	; 0xb072
   11980:	mov	r0, #0
   11984:	mov	r2, #5
   11988:	movt	r1, #1
   1198c:	bl	113e4 <dcgettext@plt>
   11990:	movw	r2, #44313	; 0xad19
   11994:	movw	r3, #45193	; 0xb089
   11998:	mov	r1, r0
   1199c:	mov	r0, #1
   119a0:	movt	r2, #1
   119a4:	movt	r3, #1
   119a8:	bl	11564 <__printf_chk@plt>
   119ac:	cmp	r6, #0
   119b0:	mov	r0, #5
   119b4:	mov	r1, #0
   119b8:	moveq	r6, r5
   119bc:	bl	115d0 <setlocale@plt>
   119c0:	cmp	r0, #0
   119c4:	beq	119fc <__mempcpy_chk@plt+0x36c>
   119c8:	movw	r1, #45233	; 0xb0b1
   119cc:	mov	r2, #3
   119d0:	movt	r1, #1
   119d4:	bl	11648 <strncmp@plt>
   119d8:	cmp	r0, #0
   119dc:	beq	119fc <__mempcpy_chk@plt+0x36c>
   119e0:	movw	r1, #45237	; 0xb0b5
   119e4:	mov	r0, #0
   119e8:	mov	r2, #5
   119ec:	movt	r1, #1
   119f0:	bl	113e4 <dcgettext@plt>
   119f4:	ldr	r1, [r7]
   119f8:	bl	11324 <fputs_unlocked@plt>
   119fc:	movw	r1, #45308	; 0xb0fc
   11a00:	mov	r0, #0
   11a04:	mov	r2, #5
   11a08:	movt	r1, #1
   11a0c:	bl	113e4 <dcgettext@plt>
   11a10:	movw	r2, #45193	; 0xb089
   11a14:	mov	r1, r0
   11a18:	mov	r0, #1
   11a1c:	mov	r3, r5
   11a20:	movt	r2, #1
   11a24:	bl	11564 <__printf_chk@plt>
   11a28:	movw	r1, #45335	; 0xb117
   11a2c:	mov	r0, #0
   11a30:	mov	r2, #5
   11a34:	movt	r1, #1
   11a38:	bl	113e4 <dcgettext@plt>
   11a3c:	movw	r3, #44852	; 0xaf34
   11a40:	mov	r1, r0
   11a44:	movw	r0, #45103	; 0xb02f
   11a48:	cmp	r6, r5
   11a4c:	mov	r2, r6
   11a50:	movt	r0, #1
   11a54:	movt	r3, #1
   11a58:	moveq	r3, r0
   11a5c:	mov	r0, #1
   11a60:	bl	11564 <__printf_chk@plt>
   11a64:	mov	r0, r4
   11a68:	bl	114f8 <exit@plt>
   11a6c:	movw	r0, #49576	; 0xc1a8
   11a70:	movw	r1, #41964	; 0xa3ec
   11a74:	mov	r2, #5
   11a78:	movt	r0, #2
   11a7c:	movt	r1, #1
   11a80:	ldr	r5, [r0]
   11a84:	mov	r0, #0
   11a88:	bl	113e4 <dcgettext@plt>
   11a8c:	mov	r2, r0
   11a90:	movw	r0, #49632	; 0xc1e0
   11a94:	mov	r1, #1
   11a98:	movt	r0, #2
   11a9c:	ldr	r3, [r0]
   11aa0:	mov	r0, r5
   11aa4:	bl	1157c <__fprintf_chk@plt>
   11aa8:	mov	r0, r4
   11aac:	bl	114f8 <exit@plt>
   11ab0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ab4:	add	fp, sp, #28
   11ab8:	sub	sp, sp, #148	; 0x94
   11abc:	mov	r7, r0
   11ac0:	ldr	r0, [r1]
   11ac4:	mov	r6, r1
   11ac8:	bl	160cc <__mempcpy_chk@plt+0x4a3c>
   11acc:	movw	r1, #44852	; 0xaf34
   11ad0:	mov	r0, #6
   11ad4:	movt	r1, #1
   11ad8:	bl	115d0 <setlocale@plt>
   11adc:	movw	r4, #44317	; 0xad1d
   11ae0:	movw	r1, #44185	; 0xac99
   11ae4:	movt	r4, #1
   11ae8:	movt	r1, #1
   11aec:	mov	r0, r4
   11af0:	bl	11618 <bindtextdomain@plt>
   11af4:	mov	r0, r4
   11af8:	bl	113fc <textdomain@plt>
   11afc:	movw	r0, #17592	; 0x44b8
   11b00:	movt	r0, #1
   11b04:	bl	1a3c8 <__mempcpy_chk@plt+0x8d38>
   11b08:	movw	r0, #49600	; 0xc1c0
   11b0c:	mov	r1, #0
   11b10:	mov	r4, #0
   11b14:	movw	r9, #44209	; 0xacb1
   11b18:	movw	r5, #45872	; 0xb330
   11b1c:	movt	r0, #2
   11b20:	str	r1, [sp, #24]
   11b24:	mov	r1, #0
   11b28:	movt	r9, #1
   11b2c:	movt	r5, #1
   11b30:	str	r4, [r0]
   11b34:	mov	sl, r0
   11b38:	strb	r4, [r0, #4]
   11b3c:	mov	r0, #0
   11b40:	str	r1, [sp, #20]
   11b44:	mov	r1, #0
   11b48:	str	r0, [sp, #28]
   11b4c:	mov	r0, #0
   11b50:	str	r1, [sp, #32]
   11b54:	b	11b64 <__mempcpy_chk@plt+0x4d4>
   11b58:	mov	r0, #1
   11b5c:	strb	r0, [sl]
   11b60:	mov	r0, r8
   11b64:	mov	r8, r0
   11b68:	mov	r0, r7
   11b6c:	mov	r1, r6
   11b70:	mov	r2, r9
   11b74:	mov	r3, r5
   11b78:	str	r4, [sp]
   11b7c:	bl	114d4 <getopt_long@plt>
   11b80:	add	r1, r0, #3
   11b84:	cmp	r1, #121	; 0x79
   11b88:	bhi	1237c <__mempcpy_chk@plt+0xcec>
   11b8c:	add	r2, pc, #4
   11b90:	mov	r0, #1
   11b94:	ldr	pc, [r2, r1, lsl #2]
   11b98:	ldrdeq	r2, [r1], -r4
   11b9c:	andeq	r2, r1, r8, lsr #4
   11ba0:	andeq	r1, r1, r8, lsl #29
   11ba4:	andeq	r2, r1, ip, ror r3
   11ba8:	andeq	r2, r1, ip, ror r3
   11bac:	andeq	r2, r1, ip, ror r3
   11bb0:	andeq	r2, r1, ip, ror r3
   11bb4:	andeq	r2, r1, ip, ror r3
   11bb8:	andeq	r2, r1, ip, ror r3
   11bbc:	andeq	r2, r1, ip, ror r3
   11bc0:	andeq	r2, r1, ip, ror r3
   11bc4:	andeq	r2, r1, ip, ror r3
   11bc8:	andeq	r2, r1, ip, ror r3
   11bcc:	andeq	r2, r1, ip, ror r3
   11bd0:	andeq	r2, r1, ip, ror r3
   11bd4:	andeq	r2, r1, ip, ror r3
   11bd8:	andeq	r2, r1, ip, ror r3
   11bdc:	andeq	r2, r1, ip, ror r3
   11be0:	andeq	r2, r1, ip, ror r3
   11be4:	andeq	r2, r1, ip, ror r3
   11be8:	andeq	r2, r1, ip, ror r3
   11bec:	andeq	r2, r1, ip, ror r3
   11bf0:	andeq	r2, r1, ip, ror r3
   11bf4:	andeq	r2, r1, ip, ror r3
   11bf8:	andeq	r2, r1, ip, ror r3
   11bfc:	andeq	r2, r1, ip, ror r3
   11c00:	andeq	r2, r1, ip, ror r3
   11c04:	andeq	r2, r1, ip, ror r3
   11c08:	andeq	r2, r1, ip, ror r3
   11c0c:	andeq	r2, r1, ip, ror r3
   11c10:	andeq	r2, r1, ip, ror r3
   11c14:	andeq	r2, r1, ip, ror r3
   11c18:	andeq	r2, r1, ip, ror r3
   11c1c:	andeq	r2, r1, ip, ror r3
   11c20:	andeq	r2, r1, ip, ror r3
   11c24:	andeq	r2, r1, ip, ror r3
   11c28:	andeq	r2, r1, ip, ror r3
   11c2c:	andeq	r2, r1, ip, ror r3
   11c30:	andeq	r2, r1, ip, ror r3
   11c34:	andeq	r2, r1, ip, ror r3
   11c38:	andeq	r2, r1, ip, ror r3
   11c3c:	andeq	r2, r1, ip, ror r3
   11c40:	andeq	r2, r1, ip, ror r3
   11c44:	andeq	r2, r1, ip, ror r3
   11c48:	andeq	r2, r1, ip, ror r3
   11c4c:	andeq	r2, r1, ip, ror r3
   11c50:	andeq	r2, r1, ip, ror r3
   11c54:	andeq	r2, r1, ip, ror r3
   11c58:	andeq	r2, r1, ip, ror r3
   11c5c:	andeq	r2, r1, ip, ror r3
   11c60:	andeq	r2, r1, ip, ror r3
   11c64:	andeq	r2, r1, ip, ror r3
   11c68:	andeq	r2, r1, ip, ror r3
   11c6c:	andeq	r2, r1, ip, ror r3
   11c70:	andeq	r2, r1, ip, ror r3
   11c74:	andeq	r2, r1, ip, ror r3
   11c78:	andeq	r2, r1, ip, ror r3
   11c7c:	andeq	r2, r1, ip, ror r3
   11c80:	andeq	r2, r1, ip, ror r3
   11c84:	andeq	r2, r1, ip, ror r3
   11c88:	andeq	r2, r1, ip, ror r3
   11c8c:	andeq	r2, r1, ip, ror r3
   11c90:	andeq	r2, r1, ip, ror r3
   11c94:	andeq	r2, r1, ip, ror r3
   11c98:	andeq	r2, r1, ip, ror r3
   11c9c:	andeq	r2, r1, ip, ror r3
   11ca0:	andeq	r2, r1, ip, ror r3
   11ca4:	andeq	r2, r1, ip, ror r3
   11ca8:	andeq	r2, r1, ip, ror r3
   11cac:	andeq	r2, r1, ip, ror r3
   11cb0:	andeq	r2, r1, ip, ror r3
   11cb4:	andeq	r2, r1, ip, ror r3
   11cb8:	andeq	r2, r1, ip, ror r3
   11cbc:	andeq	r1, r1, r8, asr fp
   11cc0:	andeq	r2, r1, ip, ror r3
   11cc4:	andeq	r2, r1, ip, ror r3
   11cc8:	andeq	r2, r1, ip, ror r3
   11ccc:	andeq	r2, r1, ip, ror r3
   11cd0:	andeq	r2, r1, ip, ror r3
   11cd4:	andeq	r1, r1, r0, lsl #27
   11cd8:	andeq	r2, r1, ip, ror r3
   11cdc:	andeq	r2, r1, ip, ror r3
   11ce0:	andeq	r2, r1, ip, ror r3
   11ce4:			; <UNDEFINED> instruction: 0x00011db0
   11ce8:	andeq	r2, r1, ip, ror r3
   11cec:	andeq	r2, r1, ip, ror r3
   11cf0:	andeq	r1, r1, r4, lsl #28
   11cf4:	andeq	r1, r1, r4, ror #22
   11cf8:	andeq	r2, r1, ip, ror r3
   11cfc:	andeq	r2, r1, ip, ror r3
   11d00:	andeq	r2, r1, ip, ror r3
   11d04:	andeq	r2, r1, ip, ror r3
   11d08:	andeq	r2, r1, ip, ror r3
   11d0c:	andeq	r2, r1, ip, ror r3
   11d10:	andeq	r2, r1, ip, ror r3
   11d14:	andeq	r2, r1, ip, ror r3
   11d18:	andeq	r2, r1, ip, ror r3
   11d1c:	andeq	r2, r1, ip, ror r3
   11d20:	andeq	r2, r1, ip, ror r3
   11d24:	andeq	r2, r1, ip, ror r3
   11d28:	andeq	r2, r1, ip, ror r3
   11d2c:			; <UNDEFINED> instruction: 0x00011dbc
   11d30:	andeq	r2, r1, ip, ror r3
   11d34:	andeq	r1, r1, r8, asr fp
   11d38:	andeq	r2, r1, ip, ror r3
   11d3c:	ldrdeq	r1, [r1], -ip
   11d40:	andeq	r2, r1, ip, ror r3
   11d44:	andeq	r2, r1, ip, ror r3
   11d48:	andeq	r1, r1, r4, lsr #28
   11d4c:	andeq	r2, r1, ip, ror r3
   11d50:	andeq	r2, r1, ip, ror r3
   11d54:	andeq	r2, r1, ip, ror r3
   11d58:	andeq	r2, r1, ip, ror r3
   11d5c:	andeq	r1, r1, r4, ror #27
   11d60:	andeq	r2, r1, ip, ror r3
   11d64:	andeq	r2, r1, ip, ror r3
   11d68:	andeq	r2, r1, ip, ror r3
   11d6c:	muleq	r1, r0, sp
   11d70:	strdeq	r1, [r1], -r4
   11d74:	andeq	r1, r1, r4, lsr lr
   11d78:	andeq	r2, r1, ip, ror r3
   11d7c:	andeq	r1, r1, r0, lsr #27
   11d80:	mov	r0, #1
   11d84:	strb	r0, [sl, #5]
   11d88:	mov	r0, r8
   11d8c:	b	11b64 <__mempcpy_chk@plt+0x4d4>
   11d90:	mov	r0, #1
   11d94:	strb	r0, [sl, #7]
   11d98:	mov	r0, r8
   11d9c:	b	11b64 <__mempcpy_chk@plt+0x4d4>
   11da0:	mov	r0, #1
   11da4:	strb	r0, [sl, #1]
   11da8:	mov	r0, r8
   11dac:	b	11b64 <__mempcpy_chk@plt+0x4d4>
   11db0:	strb	r4, [sl, #5]
   11db4:	mov	r0, r8
   11db8:	b	11b64 <__mempcpy_chk@plt+0x4d4>
   11dbc:	movw	r0, #49592	; 0xc1b8
   11dc0:	ldr	r1, [sp, #24]
   11dc4:	movt	r0, #2
   11dc8:	ldr	r0, [r0]
   11dcc:	cmp	r0, #0
   11dd0:	movne	r1, r0
   11dd4:	str	r1, [sp, #24]
   11dd8:	b	11e14 <__mempcpy_chk@plt+0x784>
   11ddc:	mov	r0, #256	; 0x100
   11de0:	b	11e28 <__mempcpy_chk@plt+0x798>
   11de4:	mov	r0, #1
   11de8:	strb	r0, [sl, #6]
   11dec:	mov	r0, r8
   11df0:	b	11b64 <__mempcpy_chk@plt+0x4d4>
   11df4:	mov	r0, #1
   11df8:	strb	r0, [sl, #4]
   11dfc:	mov	r0, r8
   11e00:	b	11b64 <__mempcpy_chk@plt+0x4d4>
   11e04:	movw	r0, #49592	; 0xc1b8
   11e08:	movt	r0, #2
   11e0c:	ldr	r0, [r0]
   11e10:	str	r0, [sp, #20]
   11e14:	mov	r0, #1
   11e18:	str	r0, [sp, #32]
   11e1c:	mov	r0, r8
   11e20:	b	11b64 <__mempcpy_chk@plt+0x4d4>
   11e24:	mov	r0, #1
   11e28:	strh	r0, [sl, #2]
   11e2c:	mov	r0, r8
   11e30:	b	11b64 <__mempcpy_chk@plt+0x4d4>
   11e34:	ldr	r0, [sp, #28]
   11e38:	cmp	r0, #0
   11e3c:	bne	12230 <__mempcpy_chk@plt+0xba0>
   11e40:	movw	r0, #49592	; 0xc1b8
   11e44:	add	r2, sp, #40	; 0x28
   11e48:	movt	r0, #2
   11e4c:	ldr	r1, [r0]
   11e50:	mov	r0, #3
   11e54:	bl	1163c <__xstat64@plt>
   11e58:	cmp	r0, #0
   11e5c:	bne	1223c <__mempcpy_chk@plt+0xbac>
   11e60:	ldr	r0, [sp, #56]	; 0x38
   11e64:	and	r0, r0, #61440	; 0xf000
   11e68:	cmp	r0, #16384	; 0x4000
   11e6c:	bne	12284 <__mempcpy_chk@plt+0xbf4>
   11e70:	movw	r0, #49592	; 0xc1b8
   11e74:	movt	r0, #2
   11e78:	ldr	r0, [r0]
   11e7c:	str	r0, [sp, #28]
   11e80:	mov	r0, r8
   11e84:	b	11b64 <__mempcpy_chk@plt+0x4d4>
   11e88:	movw	r0, #49568	; 0xc1a0
   11e8c:	movt	r0, #2
   11e90:	ldr	r1, [r0]
   11e94:	sub	r5, r7, r1
   11e98:	cmp	r5, #0
   11e9c:	ble	122c4 <__mempcpy_chk@plt+0xc34>
   11ea0:	ldrb	r0, [sl, #7]
   11ea4:	mov	r7, sl
   11ea8:	cmp	r0, #1
   11eac:	ldrbeq	r2, [r7, #4]
   11eb0:	cmpeq	r2, #0
   11eb4:	beq	122f0 <__mempcpy_chk@plt+0xc60>
   11eb8:	add	r9, r6, r1, lsl #2
   11ebc:	tst	r8, #1
   11ec0:	beq	11efc <__mempcpy_chk@plt+0x86c>
   11ec4:	ldr	r0, [sp, #28]
   11ec8:	cmp	r0, #0
   11ecc:	bne	122fc <__mempcpy_chk@plt+0xc6c>
   11ed0:	cmp	r5, #2
   11ed4:	bne	12320 <__mempcpy_chk@plt+0xc90>
   11ed8:	mov	r0, #0
   11edc:	mvn	r4, #0
   11ee0:	mov	sl, #2
   11ee4:	str	r0, [sp, #36]	; 0x24
   11ee8:	ldr	r1, [sp, #32]
   11eec:	mov	r0, #0
   11ef0:	tst	r1, #1
   11ef4:	bne	12078 <__mempcpy_chk@plt+0x9e8>
   11ef8:	b	1209c <__mempcpy_chk@plt+0xa0c>
   11efc:	ldr	r6, [sp, #28]
   11f00:	cmp	r6, #0
   11f04:	bne	11f40 <__mempcpy_chk@plt+0x8b0>
   11f08:	cmp	r5, #2
   11f0c:	bge	11f40 <__mempcpy_chk@plt+0x8b0>
   11f10:	mvn	r0, #99	; 0x63
   11f14:	mvn	r4, #0
   11f18:	mov	sl, #1
   11f1c:	str	r0, [sp, #16]
   11f20:	movw	r0, #46202	; 0xb47a
   11f24:	movt	r0, #1
   11f28:	str	r0, [sp, #36]	; 0x24
   11f2c:	ldr	r1, [sp, #32]
   11f30:	mov	r0, #0
   11f34:	tst	r1, #1
   11f38:	bne	12078 <__mempcpy_chk@plt+0x9e8>
   11f3c:	b	1209c <__mempcpy_chk@plt+0xa0c>
   11f40:	eor	r1, r5, #2
   11f44:	mvn	r4, #0
   11f48:	orrs	r8, r6, r1
   11f4c:	movwne	r8, #1
   11f50:	beq	11fa4 <__mempcpy_chk@plt+0x914>
   11f54:	cmp	r6, #0
   11f58:	mov	r1, r6
   11f5c:	mov	r2, #2113536	; 0x204000
   11f60:	addeq	r0, r9, r5, lsl #2
   11f64:	ldreq	r1, [r0, #-4]
   11f68:	ldrb	r0, [r7, #6]
   11f6c:	cmp	r0, #0
   11f70:	mvn	r0, #99	; 0x63
   11f74:	str	r1, [sp, #36]	; 0x24
   11f78:	movne	r2, #2146304	; 0x20c000
   11f7c:	bl	1602c <__mempcpy_chk@plt+0x499c>
   11f80:	mov	r7, r0
   11f84:	bl	1151c <__errno_location@plt>
   11f88:	cmp	r7, #0
   11f8c:	str	r7, [sp, #16]
   11f90:	blt	12014 <__mempcpy_chk@plt+0x984>
   11f94:	clz	r0, r6
   11f98:	lsr	r0, r0, #5
   11f9c:	sub	sl, r5, r0
   11fa0:	b	12060 <__mempcpy_chk@plt+0x9d0>
   11fa4:	ldm	r9, {r1, r3}
   11fa8:	ldrb	r2, [r7, #4]
   11fac:	cmp	r2, #1
   11fb0:	bne	1202c <__mempcpy_chk@plt+0x99c>
   11fb4:	cmp	r0, #0
   11fb8:	bne	11f54 <__mempcpy_chk@plt+0x8c4>
   11fbc:	mov	r0, r1
   11fc0:	mvn	r1, #99	; 0x63
   11fc4:	mov	r2, r3
   11fc8:	bl	11630 <symlinkat@plt>
   11fcc:	cmp	r0, #0
   11fd0:	bge	12050 <__mempcpy_chk@plt+0x9c0>
   11fd4:	bl	1151c <__errno_location@plt>
   11fd8:	ldr	r4, [r0]
   11fdc:	cmp	r4, #0
   11fe0:	blt	121c8 <__mempcpy_chk@plt+0xb38>
   11fe4:	movw	r7, #49600	; 0xc1c0
   11fe8:	mov	r0, #0
   11fec:	mov	sl, #2
   11ff0:	cmp	r4, #22
   11ff4:	movt	r7, #2
   11ff8:	str	r0, [sp, #36]	; 0x24
   11ffc:	bhi	11ee8 <__mempcpy_chk@plt+0x858>
   12000:	mov	r0, #1
   12004:	mov	r1, #5373952	; 0x520000
   12008:	tst	r1, r0, lsl r4
   1200c:	bne	11f54 <__mempcpy_chk@plt+0x8c4>
   12010:	b	12068 <__mempcpy_chk@plt+0x9d8>
   12014:	cmp	r8, #0
   12018:	bne	12384 <__mempcpy_chk@plt+0xcf4>
   1201c:	mov	r0, #0
   12020:	mov	sl, #2
   12024:	str	r0, [sp, #36]	; 0x24
   12028:	b	12060 <__mempcpy_chk@plt+0x9d0>
   1202c:	ldrb	r0, [r7, #5]
   12030:	mvn	r2, #99	; 0x63
   12034:	cmp	r0, #0
   12038:	movwne	r0, #1024	; 0x400
   1203c:	str	r0, [sp]
   12040:	mvn	r0, #99	; 0x63
   12044:	bl	11594 <linkat@plt>
   12048:	cmn	r0, #1
   1204c:	ble	11fd4 <__mempcpy_chk@plt+0x944>
   12050:	mov	r0, #0
   12054:	mov	sl, #2
   12058:	mov	r4, #0
   1205c:	str	r0, [sp, #36]	; 0x24
   12060:	movw	r7, #49600	; 0xc1c0
   12064:	movt	r7, #2
   12068:	ldr	r1, [sp, #32]
   1206c:	mov	r0, #0
   12070:	tst	r1, #1
   12074:	beq	1209c <__mempcpy_chk@plt+0xa0c>
   12078:	movw	r1, #44545	; 0xae01
   1207c:	mov	r0, #0
   12080:	mov	r2, #5
   12084:	movt	r1, #1
   12088:	bl	113e4 <dcgettext@plt>
   1208c:	ldr	r1, [sp, #24]
   12090:	bl	13b94 <__mempcpy_chk@plt+0x2504>
   12094:	movw	r7, #49600	; 0xc1c0
   12098:	movt	r7, #2
   1209c:	str	r0, [r7, #8]
   120a0:	ldr	r0, [sp, #20]
   120a4:	bl	13420 <__mempcpy_chk@plt+0x1d90>
   120a8:	ldr	r6, [sp, #36]	; 0x24
   120ac:	cmp	r6, #0
   120b0:	beq	12120 <__mempcpy_chk@plt+0xa90>
   120b4:	cmp	sl, #2
   120b8:	blt	12144 <__mempcpy_chk@plt+0xab4>
   120bc:	movw	r7, #49600	; 0xc1c0
   120c0:	movt	r7, #2
   120c4:	ldrb	r0, [r7, #3]
   120c8:	cmp	r0, #1
   120cc:	bne	12150 <__mempcpy_chk@plt+0xac0>
   120d0:	ldr	r0, [r7, #8]
   120d4:	cmp	r0, #3
   120d8:	beq	12150 <__mempcpy_chk@plt+0xac0>
   120dc:	ldrb	r0, [r7, #4]
   120e0:	cmp	r0, #0
   120e4:	bne	12150 <__mempcpy_chk@plt+0xac0>
   120e8:	movw	r0, #24588	; 0x600c
   120ec:	movw	r2, #24444	; 0x5f7c
   120f0:	movw	r3, #24364	; 0x5f2c
   120f4:	mov	r1, #0
   120f8:	movt	r0, #1
   120fc:	movt	r2, #1
   12100:	movt	r3, #1
   12104:	str	r0, [sp]
   12108:	mov	r0, #61	; 0x3d
   1210c:	bl	14fd8 <__mempcpy_chk@plt+0x3948>
   12110:	cmp	r0, #0
   12114:	str	r0, [r7, #12]
   12118:	bne	12150 <__mempcpy_chk@plt+0xac0>
   1211c:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   12120:	ldm	r9, {r0, r2}
   12124:	mvn	r1, #99	; 0x63
   12128:	str	r4, [sp]
   1212c:	mov	r3, r2
   12130:	bl	123a8 <__mempcpy_chk@plt+0xd18>
   12134:	mov	r4, r0
   12138:	eor	r0, r4, #1
   1213c:	sub	sp, fp, #28
   12140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12144:	mov	r4, #1
   12148:	cmp	sl, #1
   1214c:	bne	121bc <__mempcpy_chk@plt+0xb2c>
   12150:	ldr	r5, [sp, #16]
   12154:	mov	r4, #1
   12158:	mvn	r8, #0
   1215c:	ldr	r0, [r9]
   12160:	bl	13c44 <__mempcpy_chk@plt+0x25b4>
   12164:	mov	r1, r0
   12168:	mov	r0, r6
   1216c:	add	r2, sp, #40	; 0x28
   12170:	bl	14938 <__mempcpy_chk@plt+0x32a8>
   12174:	mov	r6, r0
   12178:	ldr	r0, [sp, #40]	; 0x28
   1217c:	bl	147c4 <__mempcpy_chk@plt+0x3134>
   12180:	ldr	r0, [r9], #4
   12184:	ldr	r2, [sp, #40]	; 0x28
   12188:	mov	r1, r5
   1218c:	mov	r3, r6
   12190:	str	r8, [sp]
   12194:	bl	123a8 <__mempcpy_chk@plt+0xd18>
   12198:	mov	r7, r0
   1219c:	mov	r0, r6
   121a0:	ldr	r6, [sp, #36]	; 0x24
   121a4:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   121a8:	and	r4, r4, r7
   121ac:	subs	sl, sl, #1
   121b0:	bne	1215c <__mempcpy_chk@plt+0xacc>
   121b4:	cmp	r4, #0
   121b8:	movwne	r4, #1
   121bc:	eor	r0, r4, #1
   121c0:	sub	sp, fp, #28
   121c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121c8:	movw	r7, #49600	; 0xc1c0
   121cc:	movt	r7, #2
   121d0:	b	11f54 <__mempcpy_chk@plt+0x8c4>
   121d4:	movw	r0, #49480	; 0xc148
   121d8:	movw	r2, #44339	; 0xad33
   121dc:	mov	r1, #0
   121e0:	movw	r7, #44327	; 0xad27
   121e4:	movt	r0, #2
   121e8:	movt	r2, #1
   121ec:	str	r1, [sp, #8]
   121f0:	movw	r1, #44182	; 0xac96
   121f4:	movt	r7, #1
   121f8:	ldr	r3, [r0]
   121fc:	movw	r0, #49588	; 0xc1b4
   12200:	str	r2, [sp, #4]
   12204:	movw	r2, #44313	; 0xad19
   12208:	movt	r1, #1
   1220c:	str	r7, [sp]
   12210:	movt	r0, #2
   12214:	movt	r2, #1
   12218:	ldr	r0, [r0]
   1221c:	bl	18e8c <__mempcpy_chk@plt+0x77fc>
   12220:	mov	r0, #0
   12224:	bl	114f8 <exit@plt>
   12228:	mov	r0, #0
   1222c:	bl	11790 <__mempcpy_chk@plt+0x100>
   12230:	movw	r1, #44226	; 0xacc2
   12234:	movt	r1, #1
   12238:	b	12304 <__mempcpy_chk@plt+0xc74>
   1223c:	bl	1151c <__errno_location@plt>
   12240:	ldr	r4, [r0]
   12244:	movw	r1, #44264	; 0xace8
   12248:	mov	r0, #0
   1224c:	mov	r2, #5
   12250:	movt	r1, #1
   12254:	bl	113e4 <dcgettext@plt>
   12258:	mov	r5, r0
   1225c:	movw	r0, #49592	; 0xc1b8
   12260:	movt	r0, #2
   12264:	ldr	r1, [r0]
   12268:	mov	r0, #4
   1226c:	bl	17b20 <__mempcpy_chk@plt+0x6490>
   12270:	mov	r3, r0
   12274:	mov	r0, #1
   12278:	mov	r1, r4
   1227c:	mov	r2, r5
   12280:	bl	11480 <error@plt>
   12284:	movw	r1, #44284	; 0xacfc
   12288:	mov	r0, #0
   1228c:	mov	r2, #5
   12290:	movt	r1, #1
   12294:	bl	113e4 <dcgettext@plt>
   12298:	mov	r4, r0
   1229c:	movw	r0, #49592	; 0xc1b8
   122a0:	movt	r0, #2
   122a4:	ldr	r1, [r0]
   122a8:	mov	r0, #4
   122ac:	bl	17b20 <__mempcpy_chk@plt+0x6490>
   122b0:	mov	r3, r0
   122b4:	mov	r0, #1
   122b8:	mov	r1, #0
   122bc:	mov	r2, r4
   122c0:	bl	11480 <error@plt>
   122c4:	movw	r1, #44355	; 0xad43
   122c8:	mov	r0, #0
   122cc:	mov	r2, #5
   122d0:	movt	r1, #1
   122d4:	bl	113e4 <dcgettext@plt>
   122d8:	mov	r2, r0
   122dc:	mov	r0, #0
   122e0:	mov	r1, #0
   122e4:	bl	11480 <error@plt>
   122e8:	mov	r0, #1
   122ec:	bl	11790 <__mempcpy_chk@plt+0x100>
   122f0:	movw	r1, #44376	; 0xad58
   122f4:	movt	r1, #1
   122f8:	b	12304 <__mempcpy_chk@plt+0xc74>
   122fc:	movw	r1, #44416	; 0xad80
   12300:	movt	r1, #1
   12304:	mov	r0, #0
   12308:	mov	r2, #5
   1230c:	bl	113e4 <dcgettext@plt>
   12310:	mov	r2, r0
   12314:	mov	r0, #1
   12318:	mov	r1, #0
   1231c:	bl	11480 <error@plt>
   12320:	cmp	r5, #1
   12324:	bgt	12344 <__mempcpy_chk@plt+0xcb4>
   12328:	movw	r1, #44476	; 0xadbc
   1232c:	mov	r0, #0
   12330:	mov	r2, #5
   12334:	movt	r1, #1
   12338:	bl	113e4 <dcgettext@plt>
   1233c:	ldr	r1, [r9]
   12340:	b	1235c <__mempcpy_chk@plt+0xccc>
   12344:	movw	r1, #44518	; 0xade6
   12348:	mov	r0, #0
   1234c:	mov	r2, #5
   12350:	movt	r1, #1
   12354:	bl	113e4 <dcgettext@plt>
   12358:	ldr	r1, [r9, #8]
   1235c:	mov	r4, r0
   12360:	mov	r0, #4
   12364:	bl	17b20 <__mempcpy_chk@plt+0x6490>
   12368:	mov	r3, r0
   1236c:	mov	r0, #0
   12370:	mov	r1, #0
   12374:	mov	r2, r4
   12378:	bl	11480 <error@plt>
   1237c:	mov	r0, #1
   12380:	bl	11790 <__mempcpy_chk@plt+0x100>
   12384:	ldr	r4, [r0]
   12388:	movw	r1, #44535	; 0xadf7
   1238c:	mov	r0, #0
   12390:	mov	r2, #5
   12394:	movt	r1, #1
   12398:	bl	113e4 <dcgettext@plt>
   1239c:	ldr	r1, [sp, #36]	; 0x24
   123a0:	mov	r5, r0
   123a4:	b	12268 <__mempcpy_chk@plt+0xbd8>
   123a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123ac:	add	fp, sp, #28
   123b0:	sub	sp, sp, #252	; 0xfc
   123b4:	movw	r6, #49600	; 0xc1c0
   123b8:	mov	sl, r0
   123bc:	ldr	r5, [fp, #8]
   123c0:	mov	r4, #256	; 0x100
   123c4:	mov	r9, r3
   123c8:	mov	r7, r2
   123cc:	str	r1, [sp, #36]	; 0x24
   123d0:	movt	r6, #2
   123d4:	ldrb	r0, [r6, #5]
   123d8:	cmp	r0, #0
   123dc:	movwne	r4, #0
   123e0:	cmn	r5, #1
   123e4:	bgt	12444 <__mempcpy_chk@plt+0xdb4>
   123e8:	ldrb	r1, [r6, #4]
   123ec:	cmp	r1, #1
   123f0:	bne	12410 <__mempcpy_chk@plt+0xd80>
   123f4:	ldrb	r0, [r6, #7]
   123f8:	cmp	r0, #0
   123fc:	beq	124d4 <__mempcpy_chk@plt+0xe44>
   12400:	mvn	r5, #0
   12404:	mov	r0, #1
   12408:	str	r0, [sp, #12]
   1240c:	b	12528 <__mempcpy_chk@plt+0xe98>
   12410:	ldr	r2, [sp, #36]	; 0x24
   12414:	cmp	r0, #0
   12418:	mov	r1, sl
   1241c:	mov	r3, r7
   12420:	movwne	r0, #1024	; 0x400
   12424:	str	r0, [sp]
   12428:	mvn	r0, #99	; 0x63
   1242c:	bl	11594 <linkat@plt>
   12430:	mov	r5, #0
   12434:	cmn	r0, #1
   12438:	bgt	12444 <__mempcpy_chk@plt+0xdb4>
   1243c:	bl	1151c <__errno_location@plt>
   12440:	ldr	r5, [r0]
   12444:	cmp	r5, #0
   12448:	mov	r1, #1
   1244c:	ldreq	r0, [r6, #12]
   12450:	cmpeq	r0, #0
   12454:	beq	124f8 <__mempcpy_chk@plt+0xe68>
   12458:	ldrb	r0, [r6, #4]
   1245c:	cmp	r0, #0
   12460:	bne	124f8 <__mempcpy_chk@plt+0xe68>
   12464:	sub	r3, fp, #136	; 0x88
   12468:	mov	r0, #3
   1246c:	mvn	r1, #99	; 0x63
   12470:	mov	r2, sl
   12474:	str	r4, [sp]
   12478:	bl	11414 <__fxstatat64@plt>
   1247c:	cmp	r0, #0
   12480:	beq	124f4 <__mempcpy_chk@plt+0xe64>
   12484:	bl	1151c <__errno_location@plt>
   12488:	ldr	r4, [r0]
   1248c:	movw	r1, #44264	; 0xace8
   12490:	mov	r0, #0
   12494:	mov	r2, #5
   12498:	mov	r8, #0
   1249c:	movt	r1, #1
   124a0:	bl	113e4 <dcgettext@plt>
   124a4:	mov	r5, r0
   124a8:	mov	r0, #4
   124ac:	mov	r1, sl
   124b0:	bl	17b20 <__mempcpy_chk@plt+0x6490>
   124b4:	mov	r3, r0
   124b8:	mov	r0, #0
   124bc:	mov	r1, r4
   124c0:	mov	r2, r5
   124c4:	bl	11480 <error@plt>
   124c8:	mov	r0, r8
   124cc:	sub	sp, fp, #28
   124d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124d4:	ldr	r1, [sp, #36]	; 0x24
   124d8:	mov	r0, sl
   124dc:	mov	r2, r7
   124e0:	bl	11630 <symlinkat@plt>
   124e4:	mov	r5, #0
   124e8:	cmn	r0, #1
   124ec:	bgt	12444 <__mempcpy_chk@plt+0xdb4>
   124f0:	b	1243c <__mempcpy_chk@plt+0xdac>
   124f4:	mov	r1, #0
   124f8:	cmp	r5, #0
   124fc:	beq	12594 <__mempcpy_chk@plt+0xf04>
   12500:	ldrb	r0, [r6, #4]
   12504:	cmp	r0, #0
   12508:	ldrbeq	r0, [r6]
   1250c:	cmpeq	r0, #0
   12510:	beq	1289c <__mempcpy_chk@plt+0x120c>
   12514:	ldrb	r0, [r6, #7]
   12518:	mov	r8, #0
   1251c:	str	r1, [sp, #12]
   12520:	cmp	r0, #1
   12524:	bne	125ac <__mempcpy_chk@plt+0xf1c>
   12528:	mov	r0, r9
   1252c:	str	r7, [sp, #28]
   12530:	bl	146d0 <__mempcpy_chk@plt+0x3040>
   12534:	mov	r1, #2
   12538:	mov	r8, r0
   1253c:	bl	13cdc <__mempcpy_chk@plt+0x264c>
   12540:	mov	r4, r0
   12544:	mov	r0, sl
   12548:	mov	r1, #2
   1254c:	str	sl, [sp, #32]
   12550:	bl	13cdc <__mempcpy_chk@plt+0x264c>
   12554:	mov	r6, r0
   12558:	cmp	r4, #0
   1255c:	mov	sl, #0
   12560:	cmpne	r6, #0
   12564:	bne	1286c <__mempcpy_chk@plt+0x11dc>
   12568:	mov	r0, r8
   1256c:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   12570:	mov	r0, r4
   12574:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   12578:	mov	r0, r6
   1257c:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   12580:	cmp	sl, #0
   12584:	str	r9, [sp, #20]
   12588:	beq	125b4 <__mempcpy_chk@plt+0xf24>
   1258c:	mov	r8, sl
   12590:	b	125c4 <__mempcpy_chk@plt+0xf34>
   12594:	str	r7, [sp, #28]
   12598:	mov	r7, #0
   1259c:	mov	r0, #0
   125a0:	str	sl, [sp, #32]
   125a4:	str	r0, [sp, #24]
   125a8:	b	12728 <__mempcpy_chk@plt+0x1098>
   125ac:	str	r9, [sp, #20]
   125b0:	b	125d0 <__mempcpy_chk@plt+0xf40>
   125b4:	ldr	r0, [sp, #32]
   125b8:	bl	195e0 <__mempcpy_chk@plt+0x7f50>
   125bc:	mov	r8, r0
   125c0:	mov	sl, r0
   125c4:	ldr	r7, [sp, #28]
   125c8:	movw	r6, #49600	; 0xc1c0
   125cc:	movt	r6, #2
   125d0:	ldrb	r0, [r6, #3]
   125d4:	cmp	r0, #0
   125d8:	ldreq	r0, [r6, #8]
   125dc:	cmpeq	r0, #0
   125e0:	beq	126a8 <__mempcpy_chk@plt+0x1018>
   125e4:	ldr	r1, [sp, #36]	; 0x24
   125e8:	mov	r0, #256	; 0x100
   125ec:	add	r3, sp, #40	; 0x28
   125f0:	mov	r2, r7
   125f4:	str	r0, [sp]
   125f8:	mov	r0, #3
   125fc:	bl	11414 <__fxstatat64@plt>
   12600:	cmp	r0, #0
   12604:	beq	1265c <__mempcpy_chk@plt+0xfcc>
   12608:	bl	1151c <__errno_location@plt>
   1260c:	ldr	r4, [r0]
   12610:	mov	r0, #0
   12614:	mov	r9, #0
   12618:	str	r0, [sp, #16]
   1261c:	cmp	r4, #2
   12620:	beq	126c0 <__mempcpy_chk@plt+0x1030>
   12624:	movw	r1, #44264	; 0xace8
   12628:	movt	r1, #1
   1262c:	mov	r0, #0
   12630:	mov	r2, #5
   12634:	bl	113e4 <dcgettext@plt>
   12638:	ldr	r1, [sp, #20]
   1263c:	mov	r5, r0
   12640:	mov	r0, #4
   12644:	bl	17b20 <__mempcpy_chk@plt+0x6490>
   12648:	mov	r3, r0
   1264c:	mov	r0, #0
   12650:	mov	r1, r4
   12654:	mov	r2, r5
   12658:	b	12968 <__mempcpy_chk@plt+0x12d8>
   1265c:	ldr	r0, [sp, #56]	; 0x38
   12660:	and	r0, r0, #61440	; 0xf000
   12664:	cmp	r0, #16384	; 0x4000
   12668:	bne	128f8 <__mempcpy_chk@plt+0x1268>
   1266c:	movw	r1, #45520	; 0xb1d0
   12670:	mov	r0, #0
   12674:	mov	r2, #5
   12678:	movt	r1, #1
   1267c:	bl	113e4 <dcgettext@plt>
   12680:	ldr	r2, [sp, #20]
   12684:	mov	r4, r0
   12688:	mov	r0, #0
   1268c:	mov	r1, #3
   12690:	bl	17d9c <__mempcpy_chk@plt+0x670c>
   12694:	mov	r3, r0
   12698:	mov	r0, #0
   1269c:	mov	r1, #0
   126a0:	mov	r2, r4
   126a4:	b	12968 <__mempcpy_chk@plt+0x12d8>
   126a8:	ldrb	r0, [r6, #2]
   126ac:	mov	r1, #0
   126b0:	mov	r9, #0
   126b4:	str	r1, [sp, #16]
   126b8:	cmp	r0, #0
   126bc:	bne	125e4 <__mempcpy_chk@plt+0xf54>
   126c0:	ldrb	r0, [r6, #4]
   126c4:	str	r8, [sp, #24]
   126c8:	str	r7, [sp, #28]
   126cc:	str	sl, [sp, #32]
   126d0:	cmp	r0, #1
   126d4:	bne	126f4 <__mempcpy_chk@plt+0x1064>
   126d8:	ldr	r1, [sp, #36]	; 0x24
   126dc:	mov	r0, sl
   126e0:	mov	r2, r7
   126e4:	mov	r3, r9
   126e8:	str	r5, [sp]
   126ec:	bl	12f10 <__mempcpy_chk@plt+0x1880>
   126f0:	b	1271c <__mempcpy_chk@plt+0x108c>
   126f4:	ldrb	r0, [r6, #5]
   126f8:	mov	r1, sl
   126fc:	mov	r3, r7
   12700:	cmp	r0, #0
   12704:	movwne	r0, #1024	; 0x400
   12708:	stm	sp, {r0, r9}
   1270c:	mvn	r0, #99	; 0x63
   12710:	str	r5, [sp, #8]
   12714:	ldr	r2, [sp, #36]	; 0x24
   12718:	bl	12d34 <__mempcpy_chk@plt+0x16a4>
   1271c:	ldr	r9, [sp, #20]
   12720:	ldr	r7, [sp, #16]
   12724:	mov	r5, r0
   12728:	movw	r0, #49600	; 0xc1c0
   1272c:	mov	r8, #0
   12730:	cmp	r5, #1
   12734:	movt	r0, #2
   12738:	movwlt	r8, #1
   1273c:	cmp	r5, #0
   12740:	ldrb	r0, [r0, #4]
   12744:	ble	12774 <__mempcpy_chk@plt+0x10e4>
   12748:	cmp	r0, #0
   1274c:	beq	127fc <__mempcpy_chk@plt+0x116c>
   12750:	cmp	r5, #36	; 0x24
   12754:	beq	12860 <__mempcpy_chk@plt+0x11d0>
   12758:	ldr	r0, [sp, #32]
   1275c:	ldrb	r0, [r0]
   12760:	cmp	r0, #0
   12764:	beq	12860 <__mempcpy_chk@plt+0x11d0>
   12768:	movw	r1, #45675	; 0xb26b
   1276c:	movt	r1, #1
   12770:	b	129a0 <__mempcpy_chk@plt+0x1310>
   12774:	cmp	r0, #0
   12778:	bne	12794 <__mempcpy_chk@plt+0x1104>
   1277c:	movw	r0, #49600	; 0xc1c0
   12780:	sub	r2, fp, #136	; 0x88
   12784:	mov	r1, r9
   12788:	movt	r0, #2
   1278c:	ldr	r0, [r0, #12]
   12790:	bl	14870 <__mempcpy_chk@plt+0x31e0>
   12794:	movw	r0, #49600	; 0xc1c0
   12798:	movt	r0, #2
   1279c:	ldrb	r0, [r0, #1]
   127a0:	cmp	r0, #1
   127a4:	bne	12b1c <__mempcpy_chk@plt+0x148c>
   127a8:	cmp	r7, #0
   127ac:	beq	12a70 <__mempcpy_chk@plt+0x13e0>
   127b0:	ldr	r0, [sp, #28]
   127b4:	sub	r5, r0, r9
   127b8:	cmp	r5, #1
   127bc:	blt	12a88 <__mempcpy_chk@plt+0x13f8>
   127c0:	mov	r0, r7
   127c4:	bl	11504 <strlen@plt>
   127c8:	add	r0, r5, r0
   127cc:	add	r0, r0, #1
   127d0:	bl	190c0 <__mempcpy_chk@plt+0x7a30>
   127d4:	mov	r1, r9
   127d8:	mov	r2, r5
   127dc:	mov	r4, r0
   127e0:	mov	r6, r9
   127e4:	bl	113c0 <memcpy@plt>
   127e8:	add	r0, r4, r5
   127ec:	mov	r1, r7
   127f0:	bl	1145c <strcpy@plt>
   127f4:	mov	r5, r4
   127f8:	b	12a94 <__mempcpy_chk@plt+0x1404>
   127fc:	sub	r0, r5, #17
   12800:	cmp	r0, #14
   12804:	bhi	12990 <__mempcpy_chk@plt+0x1300>
   12808:	movw	r1, #45749	; 0xb2b5
   1280c:	add	r2, pc, #4
   12810:	movt	r1, #1
   12814:	ldr	pc, [r2, r0, lsl #2]
   12818:	andeq	r2, r1, r4, asr r8
   1281c:	muleq	r1, r8, r9
   12820:	muleq	r1, r8, r9
   12824:	muleq	r1, r8, r9
   12828:	muleq	r1, r8, r9
   1282c:	muleq	r1, r8, r9
   12830:	muleq	r1, r8, r9
   12834:	muleq	r1, r8, r9
   12838:	muleq	r1, r8, r9
   1283c:	muleq	r1, r8, r9
   12840:	muleq	r1, r8, r9
   12844:	andeq	r2, r1, r4, asr r8
   12848:	muleq	r1, r8, r9
   1284c:	andeq	r2, r1, r4, asr r8
   12850:	andeq	r2, r1, r0, lsr #19
   12854:	movw	r1, #45786	; 0xb2da
   12858:	movt	r1, #1
   1285c:	b	129a0 <__mempcpy_chk@plt+0x1310>
   12860:	movw	r1, #45709	; 0xb28d
   12864:	movt	r1, #1
   12868:	b	129a0 <__mempcpy_chk@plt+0x1310>
   1286c:	mov	r0, #4096	; 0x1000
   12870:	bl	190c0 <__mempcpy_chk@plt+0x7a30>
   12874:	mov	r7, r0
   12878:	mov	r0, r6
   1287c:	mov	r1, r4
   12880:	mov	r3, #4096	; 0x1000
   12884:	mov	r2, r7
   12888:	bl	130a0 <__mempcpy_chk@plt+0x1a10>
   1288c:	cmp	r0, #0
   12890:	beq	12984 <__mempcpy_chk@plt+0x12f4>
   12894:	mov	sl, r7
   12898:	b	12568 <__mempcpy_chk@plt+0xed8>
   1289c:	ldr	r0, [fp, #-120]	; 0xffffff88
   128a0:	and	r0, r0, #61440	; 0xf000
   128a4:	cmp	r0, #16384	; 0x4000
   128a8:	bne	12514 <__mempcpy_chk@plt+0xe84>
   128ac:	movw	r1, #45480	; 0xb1a8
   128b0:	mov	r0, #0
   128b4:	mov	r2, #5
   128b8:	mov	r8, #0
   128bc:	movt	r1, #1
   128c0:	bl	113e4 <dcgettext@plt>
   128c4:	mov	r4, r0
   128c8:	mov	r0, #0
   128cc:	mov	r1, #3
   128d0:	mov	r2, sl
   128d4:	bl	17d9c <__mempcpy_chk@plt+0x670c>
   128d8:	mov	r3, r0
   128dc:	mov	r0, #0
   128e0:	mov	r1, #0
   128e4:	mov	r2, r4
   128e8:	bl	11480 <error@plt>
   128ec:	mov	r0, r8
   128f0:	sub	sp, fp, #28
   128f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128f8:	ldr	r0, [r6, #12]
   128fc:	mov	r4, r6
   12900:	ldr	r6, [sp, #20]
   12904:	add	r2, sp, #40	; 0x28
   12908:	mov	r1, r6
   1290c:	bl	148ec <__mempcpy_chk@plt+0x325c>
   12910:	cmp	r0, #0
   12914:	beq	12a54 <__mempcpy_chk@plt+0x13c4>
   12918:	movw	r1, #45551	; 0xb1ef
   1291c:	mov	r0, #0
   12920:	mov	r2, #5
   12924:	movt	r1, #1
   12928:	bl	113e4 <dcgettext@plt>
   1292c:	mov	r4, r0
   12930:	mov	r0, #0
   12934:	mov	r1, #4
   12938:	mov	r2, r6
   1293c:	bl	17a78 <__mempcpy_chk@plt+0x63e8>
   12940:	mov	r5, r0
   12944:	mov	r0, #1
   12948:	mov	r1, #4
   1294c:	mov	r2, sl
   12950:	bl	17a78 <__mempcpy_chk@plt+0x63e8>
   12954:	str	r0, [sp]
   12958:	mov	r0, #0
   1295c:	mov	r1, #0
   12960:	mov	r2, r4
   12964:	mov	r3, r5
   12968:	bl	11480 <error@plt>
   1296c:	mov	r0, r8
   12970:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   12974:	mov	r8, #0
   12978:	mov	r0, r8
   1297c:	sub	sp, fp, #28
   12980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12984:	mov	r0, r7
   12988:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   1298c:	b	12568 <__mempcpy_chk@plt+0xed8>
   12990:	cmp	r5, #122	; 0x7a
   12994:	beq	12854 <__mempcpy_chk@plt+0x11c4>
   12998:	movw	r1, #45816	; 0xb2f8
   1299c:	movt	r1, #1
   129a0:	mov	r0, #0
   129a4:	mov	r2, #5
   129a8:	bl	113e4 <dcgettext@plt>
   129ac:	mov	r4, r0
   129b0:	mov	r0, #0
   129b4:	mov	r1, #4
   129b8:	mov	r2, r9
   129bc:	bl	17a78 <__mempcpy_chk@plt+0x63e8>
   129c0:	ldr	r2, [sp, #32]
   129c4:	mov	r6, r0
   129c8:	mov	r0, #1
   129cc:	mov	r1, #4
   129d0:	bl	17a78 <__mempcpy_chk@plt+0x63e8>
   129d4:	str	r0, [sp]
   129d8:	mov	r0, #0
   129dc:	mov	r1, r5
   129e0:	mov	r2, r4
   129e4:	mov	r3, r6
   129e8:	bl	11480 <error@plt>
   129ec:	cmp	r7, #0
   129f0:	beq	12b1c <__mempcpy_chk@plt+0x148c>
   129f4:	ldr	r0, [sp, #36]	; 0x24
   129f8:	ldr	r3, [sp, #28]
   129fc:	mov	r1, r7
   12a00:	mov	r2, r0
   12a04:	bl	1160c <renameat@plt>
   12a08:	cmp	r0, #0
   12a0c:	beq	12b1c <__mempcpy_chk@plt+0x148c>
   12a10:	bl	1151c <__errno_location@plt>
   12a14:	ldr	r4, [r0]
   12a18:	movw	r1, #45852	; 0xb31c
   12a1c:	mov	r0, #0
   12a20:	mov	r2, #5
   12a24:	movt	r1, #1
   12a28:	bl	113e4 <dcgettext@plt>
   12a2c:	mov	r5, r0
   12a30:	mov	r0, #4
   12a34:	mov	r1, r9
   12a38:	bl	17b20 <__mempcpy_chk@plt+0x6490>
   12a3c:	mov	r3, r0
   12a40:	mov	r0, #0
   12a44:	mov	r1, r4
   12a48:	mov	r2, r5
   12a4c:	bl	11480 <error@plt>
   12a50:	b	12b1c <__mempcpy_chk@plt+0x148c>
   12a54:	ldr	r0, [r4, #8]
   12a58:	cmp	r0, #0
   12a5c:	beq	12b38 <__mempcpy_chk@plt+0x14a8>
   12a60:	ldrb	r0, [r4, #4]
   12a64:	cmp	r0, #0
   12a68:	beq	12b44 <__mempcpy_chk@plt+0x14b4>
   12a6c:	b	12c0c <__mempcpy_chk@plt+0x157c>
   12a70:	ldr	sl, [sp, #32]
   12a74:	movw	r4, #44852	; 0xaf34
   12a78:	mov	r6, r9
   12a7c:	movt	r4, #1
   12a80:	mov	r9, r4
   12a84:	b	12abc <__mempcpy_chk@plt+0x142c>
   12a88:	mov	r6, r9
   12a8c:	mov	r5, #0
   12a90:	mov	r4, r7
   12a94:	ldr	sl, [sp, #32]
   12a98:	mov	r0, #2
   12a9c:	mov	r1, #4
   12aa0:	mov	r2, r4
   12aa4:	bl	17a78 <__mempcpy_chk@plt+0x63e8>
   12aa8:	mov	r4, r0
   12aac:	mov	r0, r5
   12ab0:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   12ab4:	movw	r9, #45656	; 0xb258
   12ab8:	movt	r9, #1
   12abc:	mov	r0, #0
   12ac0:	mov	r1, #4
   12ac4:	mov	r2, r6
   12ac8:	bl	17a78 <__mempcpy_chk@plt+0x63e8>
   12acc:	mov	r6, r0
   12ad0:	movw	r0, #49600	; 0xc1c0
   12ad4:	mov	r1, #4
   12ad8:	mov	r2, sl
   12adc:	movt	r0, #2
   12ae0:	ldrb	r5, [r0, #4]
   12ae4:	mov	r0, #1
   12ae8:	bl	17a78 <__mempcpy_chk@plt+0x63e8>
   12aec:	mov	r1, #61	; 0x3d
   12af0:	cmp	r5, #0
   12af4:	str	r0, [sp, #8]
   12af8:	mov	r0, #1
   12afc:	mov	r2, r4
   12b00:	mov	r3, r9
   12b04:	str	r6, [sp]
   12b08:	movwne	r1, #45	; 0x2d
   12b0c:	str	r1, [sp, #4]
   12b10:	movw	r1, #45660	; 0xb25c
   12b14:	movt	r1, #1
   12b18:	bl	11564 <__printf_chk@plt>
   12b1c:	mov	r0, r7
   12b20:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   12b24:	ldr	r0, [sp, #24]
   12b28:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   12b2c:	mov	r0, r8
   12b30:	sub	sp, fp, #28
   12b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b38:	ldrb	r0, [r4, #3]
   12b3c:	cmp	r0, #1
   12b40:	bne	12c0c <__mempcpy_chk@plt+0x157c>
   12b44:	ldr	r0, [sp, #12]
   12b48:	cmp	r0, #0
   12b4c:	beq	12b68 <__mempcpy_chk@plt+0x14d8>
   12b50:	sub	r2, fp, #136	; 0x88
   12b54:	mov	r0, #3
   12b58:	mov	r1, sl
   12b5c:	bl	1163c <__xstat64@plt>
   12b60:	cmp	r0, #0
   12b64:	bne	12c0c <__mempcpy_chk@plt+0x157c>
   12b68:	ldr	r0, [sp, #136]	; 0x88
   12b6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12b70:	ldr	r1, [sp, #140]	; 0x8c
   12b74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12b78:	eor	r1, r3, r1
   12b7c:	eor	r0, r2, r0
   12b80:	orrs	r0, r0, r1
   12b84:	bne	12c0c <__mempcpy_chk@plt+0x157c>
   12b88:	ldr	r0, [sp, #40]	; 0x28
   12b8c:	ldr	r2, [fp, #-136]	; 0xffffff78
   12b90:	ldr	r1, [sp, #44]	; 0x2c
   12b94:	ldr	r3, [fp, #-132]	; 0xffffff7c
   12b98:	eor	r1, r3, r1
   12b9c:	eor	r0, r2, r0
   12ba0:	orrs	r0, r0, r1
   12ba4:	bne	12c0c <__mempcpy_chk@plt+0x157c>
   12ba8:	ldr	r0, [fp, #-116]	; 0xffffff8c
   12bac:	cmp	r0, #1
   12bb0:	beq	12bd0 <__mempcpy_chk@plt+0x1540>
   12bb4:	ldr	r2, [sp, #36]	; 0x24
   12bb8:	mvn	r0, #99	; 0x63
   12bbc:	mov	r1, sl
   12bc0:	mov	r3, r7
   12bc4:	bl	18288 <__mempcpy_chk@plt+0x6bf8>
   12bc8:	cmp	r0, #0
   12bcc:	beq	12c0c <__mempcpy_chk@plt+0x157c>
   12bd0:	movw	r1, #45594	; 0xb21a
   12bd4:	mov	r0, #0
   12bd8:	mov	r2, #5
   12bdc:	movt	r1, #1
   12be0:	bl	113e4 <dcgettext@plt>
   12be4:	mov	r4, r0
   12be8:	mov	r0, #0
   12bec:	mov	r1, #4
   12bf0:	mov	r2, sl
   12bf4:	bl	17a78 <__mempcpy_chk@plt+0x63e8>
   12bf8:	mov	r5, r0
   12bfc:	mov	r0, #1
   12c00:	mov	r1, #4
   12c04:	mov	r2, r6
   12c08:	b	12950 <__mempcpy_chk@plt+0x12c0>
   12c0c:	mov	r0, #0
   12c10:	mov	r9, #1
   12c14:	cmp	r5, #0
   12c18:	str	r0, [sp, #16]
   12c1c:	blt	12c34 <__mempcpy_chk@plt+0x15a4>
   12c20:	cmp	r5, #17
   12c24:	beq	12c34 <__mempcpy_chk@plt+0x15a4>
   12c28:	movw	r6, #49600	; 0xc1c0
   12c2c:	movt	r6, #2
   12c30:	b	126c0 <__mempcpy_chk@plt+0x1030>
   12c34:	movw	r0, #49600	; 0xc1c0
   12c38:	str	r8, [sp, #24]
   12c3c:	movt	r0, #2
   12c40:	ldrb	r0, [r0, #2]
   12c44:	cmp	r0, #1
   12c48:	bne	12cb0 <__mempcpy_chk@plt+0x1620>
   12c4c:	movw	r0, #49576	; 0xc1a8
   12c50:	movw	r1, #45622	; 0xb236
   12c54:	mov	r2, #5
   12c58:	movt	r0, #2
   12c5c:	movt	r1, #1
   12c60:	ldr	r6, [r0]
   12c64:	mov	r0, #0
   12c68:	bl	113e4 <dcgettext@plt>
   12c6c:	str	r0, [sp, #12]
   12c70:	movw	r0, #49632	; 0xc1e0
   12c74:	ldr	r1, [sp, #20]
   12c78:	movt	r0, #2
   12c7c:	ldr	r4, [r0]
   12c80:	mov	r0, #4
   12c84:	bl	17b20 <__mempcpy_chk@plt+0x6490>
   12c88:	ldr	r2, [sp, #12]
   12c8c:	str	r0, [sp]
   12c90:	mov	r0, r6
   12c94:	mov	r1, #1
   12c98:	mov	r3, r4
   12c9c:	mov	r8, #1
   12ca0:	bl	1157c <__fprintf_chk@plt>
   12ca4:	bl	19664 <__mempcpy_chk@plt+0x7fd4>
   12ca8:	cmp	r0, #0
   12cac:	beq	12b24 <__mempcpy_chk@plt+0x1494>
   12cb0:	movw	r6, #49600	; 0xc1c0
   12cb4:	movt	r6, #2
   12cb8:	ldr	r2, [r6, #8]
   12cbc:	cmp	r2, #0
   12cc0:	beq	12d2c <__mempcpy_chk@plt+0x169c>
   12cc4:	ldr	r4, [sp, #36]	; 0x24
   12cc8:	mov	r1, r7
   12ccc:	mov	r0, r4
   12cd0:	bl	13b08 <__mempcpy_chk@plt+0x2478>
   12cd4:	mov	r8, r0
   12cd8:	mov	r0, r4
   12cdc:	mov	r1, r7
   12ce0:	mov	r2, r4
   12ce4:	mov	r3, r8
   12ce8:	bl	1160c <renameat@plt>
   12cec:	cmp	r0, #0
   12cf0:	beq	12d28 <__mempcpy_chk@plt+0x1698>
   12cf4:	bl	1151c <__errno_location@plt>
   12cf8:	ldr	r4, [r0]
   12cfc:	mov	r0, r8
   12d00:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   12d04:	ldr	r8, [sp, #24]
   12d08:	mov	r0, #0
   12d0c:	cmp	r4, #2
   12d10:	mov	r9, #0
   12d14:	str	r0, [sp, #16]
   12d18:	beq	126c0 <__mempcpy_chk@plt+0x1030>
   12d1c:	movw	r1, #45639	; 0xb247
   12d20:	movt	r1, #1
   12d24:	b	1262c <__mempcpy_chk@plt+0xf9c>
   12d28:	str	r8, [sp, #16]
   12d2c:	ldr	r8, [sp, #24]
   12d30:	b	126c0 <__mempcpy_chk@plt+0x1030>
   12d34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d38:	add	fp, sp, #28
   12d3c:	sub	sp, sp, #284	; 0x11c
   12d40:	ldr	r6, [fp, #16]
   12d44:	mov	sl, r0
   12d48:	ldr	r0, [fp, #8]
   12d4c:	mov	r5, r3
   12d50:	mov	r8, r2
   12d54:	mov	r9, r1
   12d58:	cmn	r6, #1
   12d5c:	ble	12d94 <__mempcpy_chk@plt+0x1704>
   12d60:	cmp	r6, #17
   12d64:	bne	12e58 <__mempcpy_chk@plt+0x17c8>
   12d68:	ldr	r0, [fp, #12]
   12d6c:	cmp	r0, #0
   12d70:	beq	12e58 <__mempcpy_chk@plt+0x17c8>
   12d74:	mov	r0, r5
   12d78:	bl	13c44 <__mempcpy_chk@plt+0x25b4>
   12d7c:	sub	r4, r0, r5
   12d80:	add	r0, r4, #9
   12d84:	cmp	r0, #256	; 0x100
   12d88:	bhi	12dc8 <__mempcpy_chk@plt+0x1738>
   12d8c:	add	r7, sp, #24
   12d90:	b	12dd8 <__mempcpy_chk@plt+0x1748>
   12d94:	str	r0, [sp]
   12d98:	mov	r0, sl
   12d9c:	mov	r1, r9
   12da0:	mov	r2, r8
   12da4:	mov	r3, r5
   12da8:	bl	11594 <linkat@plt>
   12dac:	cmp	r0, #0
   12db0:	beq	12e64 <__mempcpy_chk@plt+0x17d4>
   12db4:	bl	1151c <__errno_location@plt>
   12db8:	ldr	r6, [r0]
   12dbc:	cmp	r6, #17
   12dc0:	beq	12d68 <__mempcpy_chk@plt+0x16d8>
   12dc4:	b	12e58 <__mempcpy_chk@plt+0x17c8>
   12dc8:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   12dcc:	mov	r7, r0
   12dd0:	cmp	r0, #0
   12dd4:	beq	12ec8 <__mempcpy_chk@plt+0x1838>
   12dd8:	mov	r0, r7
   12ddc:	mov	r1, r5
   12de0:	mov	r2, r4
   12de4:	mvn	r3, #0
   12de8:	mvn	r6, #0
   12dec:	bl	11690 <__mempcpy_chk@plt>
   12df0:	movw	r1, #46184	; 0xb468
   12df4:	movw	r3, #11996	; 0x2edc
   12df8:	add	r2, sp, #8
   12dfc:	movt	r1, #1
   12e00:	movt	r3, #1
   12e04:	vldr	d16, [r1]
   12e08:	mov	r1, #0
   12e0c:	strb	r1, [r0, #8]
   12e10:	mov	r1, #0
   12e14:	vst1.8	{d16}, [r0]
   12e18:	ldr	r0, [fp, #8]
   12e1c:	str	r9, [sp, #12]
   12e20:	str	sl, [sp, #8]
   12e24:	str	r8, [sp, #16]
   12e28:	str	r0, [sp, #20]
   12e2c:	mov	r0, #6
   12e30:	str	r0, [sp]
   12e34:	mov	r0, r7
   12e38:	bl	18628 <__mempcpy_chk@plt+0x6f98>
   12e3c:	cmp	r0, #0
   12e40:	beq	12e74 <__mempcpy_chk@plt+0x17e4>
   12e44:	bl	1151c <__errno_location@plt>
   12e48:	ldr	r6, [r0]
   12e4c:	add	r0, sp, #24
   12e50:	cmp	r7, r0
   12e54:	bne	12eb4 <__mempcpy_chk@plt+0x1824>
   12e58:	mov	r0, r6
   12e5c:	sub	sp, fp, #28
   12e60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e64:	mov	r6, #0
   12e68:	mov	r0, r6
   12e6c:	sub	sp, fp, #28
   12e70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e74:	mov	r0, r8
   12e78:	mov	r1, r7
   12e7c:	mov	r2, r8
   12e80:	mov	r3, r5
   12e84:	bl	1160c <renameat@plt>
   12e88:	cmp	r0, #0
   12e8c:	beq	12e98 <__mempcpy_chk@plt+0x1808>
   12e90:	bl	1151c <__errno_location@plt>
   12e94:	ldr	r6, [r0]
   12e98:	mov	r0, r8
   12e9c:	mov	r1, r7
   12ea0:	mov	r2, #0
   12ea4:	bl	11378 <unlinkat@plt>
   12ea8:	add	r0, sp, #24
   12eac:	cmp	r7, r0
   12eb0:	beq	12e58 <__mempcpy_chk@plt+0x17c8>
   12eb4:	mov	r0, r7
   12eb8:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   12ebc:	mov	r0, r6
   12ec0:	sub	sp, fp, #28
   12ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ec8:	bl	1151c <__errno_location@plt>
   12ecc:	ldr	r6, [r0]
   12ed0:	mov	r0, r6
   12ed4:	sub	sp, fp, #28
   12ed8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12edc:	push	{fp, lr}
   12ee0:	mov	fp, sp
   12ee4:	sub	sp, sp, #8
   12ee8:	mov	ip, r0
   12eec:	ldm	r1, {r0, r3}
   12ef0:	ldr	r2, [r1, #8]
   12ef4:	ldr	r1, [r1, #12]
   12ef8:	str	r1, [sp]
   12efc:	mov	r1, r3
   12f00:	mov	r3, ip
   12f04:	bl	11594 <linkat@plt>
   12f08:	mov	sp, fp
   12f0c:	pop	{fp, pc}
   12f10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12f14:	add	fp, sp, #24
   12f18:	sub	sp, sp, #272	; 0x110
   12f1c:	ldr	r5, [fp, #8]
   12f20:	mov	r7, r3
   12f24:	mov	r6, r2
   12f28:	mov	r8, r1
   12f2c:	mov	r9, r0
   12f30:	cmn	r5, #1
   12f34:	ble	12f68 <__mempcpy_chk@plt+0x18d8>
   12f38:	cmp	r5, #17
   12f3c:	bne	13074 <__mempcpy_chk@plt+0x19e4>
   12f40:	cmp	r7, #0
   12f44:	beq	13074 <__mempcpy_chk@plt+0x19e4>
   12f48:	mov	r0, r6
   12f4c:	bl	13c44 <__mempcpy_chk@plt+0x25b4>
   12f50:	sub	r4, r0, r6
   12f54:	add	r0, r4, #9
   12f58:	cmp	r0, #256	; 0x100
   12f5c:	bhi	12f94 <__mempcpy_chk@plt+0x1904>
   12f60:	add	r7, sp, #12
   12f64:	b	12fa4 <__mempcpy_chk@plt+0x1914>
   12f68:	mov	r0, r9
   12f6c:	mov	r1, r8
   12f70:	mov	r2, r6
   12f74:	bl	11630 <symlinkat@plt>
   12f78:	cmp	r0, #0
   12f7c:	beq	1301c <__mempcpy_chk@plt+0x198c>
   12f80:	bl	1151c <__errno_location@plt>
   12f84:	ldr	r5, [r0]
   12f88:	cmp	r5, #17
   12f8c:	beq	12f40 <__mempcpy_chk@plt+0x18b0>
   12f90:	b	13074 <__mempcpy_chk@plt+0x19e4>
   12f94:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   12f98:	mov	r7, r0
   12f9c:	cmp	r0, #0
   12fa0:	beq	13080 <__mempcpy_chk@plt+0x19f0>
   12fa4:	mov	r0, r7
   12fa8:	mov	r1, r6
   12fac:	mov	r2, r4
   12fb0:	mvn	r3, #0
   12fb4:	mvn	r5, #0
   12fb8:	bl	11690 <__mempcpy_chk@plt>
   12fbc:	movw	r1, #46184	; 0xb468
   12fc0:	movw	r3, #12436	; 0x3094
   12fc4:	add	r2, sp, #4
   12fc8:	movt	r1, #1
   12fcc:	movt	r3, #1
   12fd0:	vldr	d16, [r1]
   12fd4:	mov	r1, #0
   12fd8:	strb	r1, [r0, #8]
   12fdc:	mov	r1, #0
   12fe0:	vst1.8	{d16}, [r0]
   12fe4:	mov	r0, #6
   12fe8:	str	r8, [sp, #8]
   12fec:	str	r9, [sp, #4]
   12ff0:	str	r0, [sp]
   12ff4:	mov	r0, r7
   12ff8:	bl	18628 <__mempcpy_chk@plt+0x6f98>
   12ffc:	cmp	r0, #0
   13000:	beq	1302c <__mempcpy_chk@plt+0x199c>
   13004:	bl	1151c <__errno_location@plt>
   13008:	ldr	r5, [r0]
   1300c:	add	r0, sp, #12
   13010:	cmp	r7, r0
   13014:	bne	1306c <__mempcpy_chk@plt+0x19dc>
   13018:	b	13074 <__mempcpy_chk@plt+0x19e4>
   1301c:	mov	r5, #0
   13020:	mov	r0, r5
   13024:	sub	sp, fp, #24
   13028:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1302c:	mov	r0, r8
   13030:	mov	r1, r7
   13034:	mov	r2, r8
   13038:	mov	r3, r6
   1303c:	bl	1160c <renameat@plt>
   13040:	cmp	r0, #0
   13044:	beq	13060 <__mempcpy_chk@plt+0x19d0>
   13048:	bl	1151c <__errno_location@plt>
   1304c:	ldr	r5, [r0]
   13050:	mov	r0, r8
   13054:	mov	r1, r7
   13058:	mov	r2, #0
   1305c:	bl	11378 <unlinkat@plt>
   13060:	add	r0, sp, #12
   13064:	cmp	r7, r0
   13068:	beq	13074 <__mempcpy_chk@plt+0x19e4>
   1306c:	mov	r0, r7
   13070:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   13074:	mov	r0, r5
   13078:	sub	sp, fp, #24
   1307c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13080:	bl	1151c <__errno_location@plt>
   13084:	ldr	r5, [r0]
   13088:	mov	r0, r5
   1308c:	sub	sp, fp, #24
   13090:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13094:	mov	r2, r0
   13098:	ldm	r1, {r0, r1}
   1309c:	b	11630 <symlinkat@plt>
   130a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130a4:	add	fp, sp, #28
   130a8:	sub	sp, sp, #4
   130ac:	mov	r7, r1
   130b0:	ldrb	r1, [r1, #1]
   130b4:	mov	r6, r0
   130b8:	ldrb	r0, [r0, #1]
   130bc:	mov	r4, #0
   130c0:	sub	r0, r0, #47	; 0x2f
   130c4:	sub	r1, r1, #47	; 0x2f
   130c8:	clz	r0, r0
   130cc:	clz	r1, r1
   130d0:	lsr	r0, r0, #5
   130d4:	lsr	r1, r1, #5
   130d8:	teq	r1, r0
   130dc:	bne	13328 <__mempcpy_chk@plt+0x1c98>
   130e0:	mov	sl, r3
   130e4:	ldrb	r3, [r7]
   130e8:	ldrb	r1, [r6]
   130ec:	mov	r8, r2
   130f0:	cmp	r3, #0
   130f4:	beq	13144 <__mempcpy_chk@plt+0x1ab4>
   130f8:	mov	r0, #0
   130fc:	mov	r2, #1
   13100:	tst	r1, #255	; 0xff
   13104:	beq	13168 <__mempcpy_chk@plt+0x1ad8>
   13108:	uxtb	r4, r1
   1310c:	uxtb	r5, r3
   13110:	cmp	r5, r4
   13114:	bne	13168 <__mempcpy_chk@plt+0x1ad8>
   13118:	ldrb	r3, [r7, r2]
   1311c:	ldrb	r1, [r6, r2]
   13120:	cmp	r4, #47	; 0x2f
   13124:	moveq	r0, r2
   13128:	add	r2, r2, #1
   1312c:	cmp	r3, #0
   13130:	bne	13100 <__mempcpy_chk@plt+0x1a70>
   13134:	sub	r2, r2, #1
   13138:	cmp	r1, #0
   1313c:	bne	13154 <__mempcpy_chk@plt+0x1ac4>
   13140:	b	13338 <__mempcpy_chk@plt+0x1ca8>
   13144:	mov	r2, #0
   13148:	mov	r0, #0
   1314c:	cmp	r1, #0
   13150:	beq	13338 <__mempcpy_chk@plt+0x1ca8>
   13154:	cmp	r1, #47	; 0x2f
   13158:	moveq	r0, r2
   1315c:	cmp	r0, #0
   13160:	bne	13180 <__mempcpy_chk@plt+0x1af0>
   13164:	b	13344 <__mempcpy_chk@plt+0x1cb4>
   13168:	tst	r1, #255	; 0xff
   1316c:	uxtbeq	r1, r3
   13170:	cmpeq	r1, #47	; 0x2f
   13174:	beq	13334 <__mempcpy_chk@plt+0x1ca4>
   13178:	cmp	r0, #0
   1317c:	beq	13344 <__mempcpy_chk@plt+0x1cb4>
   13180:	ldrb	r1, [r6, r0]!
   13184:	ldrb	r0, [r7, r0]!
   13188:	cmp	r1, #47	; 0x2f
   1318c:	mov	r5, r6
   13190:	sub	r1, r1, #47	; 0x2f
   13194:	addeq	r5, r5, #1
   13198:	cmp	r0, #47	; 0x2f
   1319c:	clz	r1, r1
   131a0:	addeq	r7, r7, #1
   131a4:	lsr	r1, r1, #5
   131a8:	ldrb	r0, [r7]
   131ac:	cmp	r0, #0
   131b0:	beq	131e4 <__mempcpy_chk@plt+0x1b54>
   131b4:	cmp	r8, #0
   131b8:	str	r1, [sp]
   131bc:	beq	13230 <__mempcpy_chk@plt+0x1ba0>
   131c0:	mov	r4, #1
   131c4:	cmp	sl, #3
   131c8:	bcc	13250 <__mempcpy_chk@plt+0x1bc0>
   131cc:	movw	r0, #11822	; 0x2e2e
   131d0:	mov	r4, #0
   131d4:	sub	sl, sl, #2
   131d8:	strh	r0, [r8]
   131dc:	strb	r4, [r8, #2]!
   131e0:	b	13250 <__mempcpy_chk@plt+0x1bc0>
   131e4:	ldrb	r0, [r6, r1]
   131e8:	movw	r1, #46202	; 0xb47a
   131ec:	movt	r1, #1
   131f0:	cmp	r0, #0
   131f4:	moveq	r5, r1
   131f8:	cmp	r8, #0
   131fc:	beq	13354 <__mempcpy_chk@plt+0x1cc4>
   13200:	mov	r0, r5
   13204:	bl	11504 <strlen@plt>
   13208:	cmp	r0, sl
   1320c:	bcs	133d4 <__mempcpy_chk@plt+0x1d44>
   13210:	add	r2, r0, #1
   13214:	mov	r0, r8
   13218:	mov	r1, r5
   1321c:	bl	113c0 <memcpy@plt>
   13220:	mov	r4, #1
   13224:	mov	r0, r4
   13228:	sub	sp, fp, #28
   1322c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13230:	movw	r0, #49588	; 0xc1b4
   13234:	movt	r0, #2
   13238:	ldr	r1, [r0]
   1323c:	movw	r0, #46201	; 0xb479
   13240:	movt	r0, #1
   13244:	bl	11324 <fputs_unlocked@plt>
   13248:	mov	r8, #0
   1324c:	mov	r4, #0
   13250:	movw	r9, #46200	; 0xb478
   13254:	movt	r9, #1
   13258:	ldrb	r0, [r7]
   1325c:	cmp	r0, #47	; 0x2f
   13260:	bne	13278 <__mempcpy_chk@plt+0x1be8>
   13264:	b	13284 <__mempcpy_chk@plt+0x1bf4>
   13268:	add	r7, r7, #1
   1326c:	ldrb	r0, [r7]
   13270:	cmp	r0, #47	; 0x2f
   13274:	beq	13284 <__mempcpy_chk@plt+0x1bf4>
   13278:	cmp	r0, #0
   1327c:	bne	13268 <__mempcpy_chk@plt+0x1bd8>
   13280:	b	132d4 <__mempcpy_chk@plt+0x1c44>
   13284:	cmp	r8, #0
   13288:	beq	132ac <__mempcpy_chk@plt+0x1c1c>
   1328c:	mov	r0, #1
   13290:	cmp	sl, #4
   13294:	bcc	132c8 <__mempcpy_chk@plt+0x1c38>
   13298:	movw	r0, #11823	; 0x2e2f
   1329c:	sub	sl, sl, #3
   132a0:	movt	r0, #46	; 0x2e
   132a4:	str	r0, [r8], #3
   132a8:	b	132c4 <__mempcpy_chk@plt+0x1c34>
   132ac:	movw	r0, #49588	; 0xc1b4
   132b0:	movt	r0, #2
   132b4:	ldr	r1, [r0]
   132b8:	mov	r0, r9
   132bc:	bl	11324 <fputs_unlocked@plt>
   132c0:	mov	r8, #0
   132c4:	mov	r0, #0
   132c8:	and	r1, r4, #1
   132cc:	orr	r4, r0, r1
   132d0:	b	13268 <__mempcpy_chk@plt+0x1bd8>
   132d4:	ldr	r0, [sp]
   132d8:	ldrb	r0, [r6, r0]
   132dc:	and	r6, r4, #1
   132e0:	cmp	r0, #0
   132e4:	beq	1331c <__mempcpy_chk@plt+0x1c8c>
   132e8:	cmp	r8, #0
   132ec:	beq	13378 <__mempcpy_chk@plt+0x1ce8>
   132f0:	mov	r4, #1
   132f4:	cmp	sl, #1
   132f8:	bls	133a4 <__mempcpy_chk@plt+0x1d14>
   132fc:	mov	r0, #47	; 0x2f
   13300:	sub	sl, sl, #1
   13304:	strh	r0, [r8], #1
   13308:	mov	r0, r5
   1330c:	bl	11504 <strlen@plt>
   13310:	cmp	r0, sl
   13314:	bcc	133b8 <__mempcpy_chk@plt+0x1d28>
   13318:	b	133cc <__mempcpy_chk@plt+0x1d3c>
   1331c:	mov	r4, #1
   13320:	cmp	r6, #0
   13324:	bne	133d4 <__mempcpy_chk@plt+0x1d44>
   13328:	mov	r0, r4
   1332c:	sub	sp, fp, #28
   13330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13334:	sub	r2, r2, #1
   13338:	mov	r0, r2
   1333c:	cmp	r0, #0
   13340:	bne	13180 <__mempcpy_chk@plt+0x1af0>
   13344:	mov	r4, #0
   13348:	mov	r0, r4
   1334c:	sub	sp, fp, #28
   13350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13354:	movw	r0, #49588	; 0xc1b4
   13358:	movt	r0, #2
   1335c:	ldr	r1, [r0]
   13360:	mov	r0, r5
   13364:	bl	11324 <fputs_unlocked@plt>
   13368:	mov	r4, #1
   1336c:	mov	r0, r4
   13370:	sub	sp, fp, #28
   13374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13378:	movw	r0, #49588	; 0xc1b4
   1337c:	movt	r0, #2
   13380:	ldr	r1, [r0]
   13384:	mov	r4, r0
   13388:	movw	r0, #47634	; 0xba12
   1338c:	movt	r0, #1
   13390:	bl	11324 <fputs_unlocked@plt>
   13394:	ldr	r1, [r4]
   13398:	mov	r0, r5
   1339c:	bl	11324 <fputs_unlocked@plt>
   133a0:	b	133c8 <__mempcpy_chk@plt+0x1d38>
   133a4:	mov	r6, #1
   133a8:	mov	r0, r5
   133ac:	bl	11504 <strlen@plt>
   133b0:	cmp	r0, sl
   133b4:	bcs	133cc <__mempcpy_chk@plt+0x1d3c>
   133b8:	add	r2, r0, #1
   133bc:	mov	r0, r8
   133c0:	mov	r1, r5
   133c4:	bl	113c0 <memcpy@plt>
   133c8:	mov	r4, #0
   133cc:	orrs	r0, r4, r6
   133d0:	beq	13410 <__mempcpy_chk@plt+0x1d80>
   133d4:	movw	r1, #46204	; 0xb47c
   133d8:	mov	r0, #0
   133dc:	mov	r2, #5
   133e0:	mov	r4, #0
   133e4:	movt	r1, #1
   133e8:	bl	113e4 <dcgettext@plt>
   133ec:	movw	r2, #47787	; 0xbaab
   133f0:	mov	r3, r0
   133f4:	mov	r0, #0
   133f8:	mov	r1, #36	; 0x24
   133fc:	movt	r2, #1
   13400:	bl	11480 <error@plt>
   13404:	mov	r0, r4
   13408:	sub	sp, fp, #28
   1340c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13410:	mov	r4, #1
   13414:	mov	r0, r4
   13418:	sub	sp, fp, #28
   1341c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13420:	push	{r4, sl, fp, lr}
   13424:	add	fp, sp, #8
   13428:	mov	r4, r0
   1342c:	cmp	r0, #0
   13430:	bne	1344c <__mempcpy_chk@plt+0x1dbc>
   13434:	movw	r0, #46244	; 0xb4a4
   13438:	movt	r0, #1
   1343c:	bl	11498 <getenv@plt>
   13440:	mov	r4, r0
   13444:	cmp	r0, #0
   13448:	beq	13480 <__mempcpy_chk@plt+0x1df0>
   1344c:	ldrb	r0, [r4]
   13450:	cmp	r0, #0
   13454:	beq	13480 <__mempcpy_chk@plt+0x1df0>
   13458:	mov	r0, r4
   1345c:	bl	13c44 <__mempcpy_chk@plt+0x25b4>
   13460:	movw	r1, #46268	; 0xb4bc
   13464:	cmp	r4, r0
   13468:	movt	r1, #1
   1346c:	moveq	r1, r4
   13470:	movw	r0, #49616	; 0xc1d0
   13474:	movt	r0, #2
   13478:	str	r1, [r0]
   1347c:	pop	{r4, sl, fp, pc}
   13480:	movw	r1, #46268	; 0xb4bc
   13484:	movt	r1, #1
   13488:	movw	r0, #49616	; 0xc1d0
   1348c:	movt	r0, #2
   13490:	str	r1, [r0]
   13494:	pop	{r4, sl, fp, pc}
   13498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1349c:	add	fp, sp, #28
   134a0:	sub	sp, sp, #76	; 0x4c
   134a4:	str	r0, [sp, #52]	; 0x34
   134a8:	mov	r0, r1
   134ac:	str	r3, [sp, #44]	; 0x2c
   134b0:	str	r2, [fp, #-40]	; 0xffffffd8
   134b4:	mov	r4, r1
   134b8:	bl	13c44 <__mempcpy_chk@plt+0x25b4>
   134bc:	str	r4, [fp, #-44]	; 0xffffffd4
   134c0:	sub	r4, r0, r4
   134c4:	bl	13ca4 <__mempcpy_chk@plt+0x2614>
   134c8:	mov	r5, r0
   134cc:	add	r9, r4, r0
   134d0:	movw	r0, #49616	; 0xc1d0
   134d4:	str	r4, [fp, #-48]	; 0xffffffd0
   134d8:	movt	r0, #2
   134dc:	ldr	r0, [r0]
   134e0:	cmp	r0, #0
   134e4:	bne	13538 <__mempcpy_chk@plt+0x1ea8>
   134e8:	movw	r0, #46244	; 0xb4a4
   134ec:	movt	r0, #1
   134f0:	bl	11498 <getenv@plt>
   134f4:	mov	r4, r0
   134f8:	movw	r0, #46268	; 0xb4bc
   134fc:	cmp	r4, #0
   13500:	movt	r0, #1
   13504:	ldrbne	r1, [r4]
   13508:	cmpne	r1, #0
   1350c:	beq	1352c <__mempcpy_chk@plt+0x1e9c>
   13510:	mov	r0, r4
   13514:	bl	13c44 <__mempcpy_chk@plt+0x25b4>
   13518:	mov	r1, r0
   1351c:	movw	r0, #46268	; 0xb4bc
   13520:	movt	r0, #1
   13524:	cmp	r4, r1
   13528:	moveq	r0, r4
   1352c:	movw	r1, #49616	; 0xc1d0
   13530:	movt	r1, #2
   13534:	str	r0, [r1]
   13538:	bl	11504 <strlen@plt>
   1353c:	add	r0, r0, #1
   13540:	cmp	r0, #9
   13544:	str	r0, [sp, #36]	; 0x24
   13548:	movle	r0, #9
   1354c:	add	r0, r9, r0
   13550:	add	r0, r0, #1
   13554:	str	r0, [sp, #24]
   13558:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   1355c:	cmp	r0, #0
   13560:	beq	13acc <__mempcpy_chk@plt+0x243c>
   13564:	mov	r6, r0
   13568:	mvn	r0, #99	; 0x63
   1356c:	add	sl, r5, #2
   13570:	mov	r8, #0
   13574:	str	r5, [sp, #12]
   13578:	str	r9, [sp, #48]	; 0x30
   1357c:	str	r0, [fp, #-32]	; 0xffffffe0
   13580:	add	r0, r5, #23
   13584:	str	sl, [sp, #40]	; 0x28
   13588:	str	r0, [sp, #8]
   1358c:	add	r0, r9, #4
   13590:	str	r0, [sp, #4]
   13594:	add	r0, r5, #4
   13598:	str	r0, [fp, #-36]	; 0xffffffdc
   1359c:	mov	r0, #0
   135a0:	str	r0, [sp, #28]
   135a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   135a8:	mov	r0, r6
   135ac:	mov	r2, r9
   135b0:	bl	113c0 <memcpy@plt>
   135b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   135b8:	cmp	r0, #1
   135bc:	bne	135f8 <__mempcpy_chk@plt+0x1f68>
   135c0:	movw	r1, #49616	; 0xc1d0
   135c4:	ldr	r2, [sp, #36]	; 0x24
   135c8:	add	r0, r6, r9
   135cc:	mov	sl, r6
   135d0:	movt	r1, #2
   135d4:	ldr	r1, [r1]
   135d8:	bl	113c0 <memcpy@plt>
   135dc:	mov	r0, #1
   135e0:	mov	r9, #0
   135e4:	str	r0, [fp, #-40]	; 0xffffffd8
   135e8:	ldr	r0, [sp, #44]	; 0x2c
   135ec:	cmp	r0, #0
   135f0:	bne	13998 <__mempcpy_chk@plt+0x2308>
   135f4:	b	13a94 <__mempcpy_chk@plt+0x2404>
   135f8:	cmp	r8, #0
   135fc:	beq	1361c <__mempcpy_chk@plt+0x1f8c>
   13600:	mov	r0, r8
   13604:	bl	11360 <rewinddir@plt>
   13608:	mov	r0, r8
   1360c:	bl	115f4 <readdir64@plt>
   13610:	cmp	r0, #0
   13614:	bne	1367c <__mempcpy_chk@plt+0x1fec>
   13618:	b	136f0 <__mempcpy_chk@plt+0x2060>
   1361c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13620:	mov	r1, r6
   13624:	mov	r2, #0
   13628:	sub	r3, fp, #32
   1362c:	add	r4, r6, r0
   13630:	mov	r0, #46	; 0x2e
   13634:	ldrh	r5, [r4]
   13638:	strh	r0, [r4]
   1363c:	ldr	r0, [sp, #52]	; 0x34
   13640:	bl	16070 <__mempcpy_chk@plt+0x49e0>
   13644:	cmp	r0, #0
   13648:	beq	1369c <__mempcpy_chk@plt+0x200c>
   1364c:	movw	r1, #32302	; 0x7e2e
   13650:	mov	r8, r0
   13654:	mov	r0, r6
   13658:	strh	r5, [r4]
   1365c:	movt	r1, #32305	; 0x7e31
   13660:	str	r1, [r0, r9]!
   13664:	mov	r1, #0
   13668:	strb	r1, [r0, #4]
   1366c:	mov	r0, r8
   13670:	bl	115f4 <readdir64@plt>
   13674:	cmp	r0, #0
   13678:	beq	136f0 <__mempcpy_chk@plt+0x2060>
   1367c:	mov	r7, r0
   13680:	mov	r0, #1
   13684:	str	r0, [sp, #20]
   13688:	mov	r0, #2
   1368c:	str	r0, [sp, #32]
   13690:	ldr	r0, [sp, #24]
   13694:	str	r0, [sp, #16]
   13698:	b	13824 <__mempcpy_chk@plt+0x2194>
   1369c:	bl	1151c <__errno_location@plt>
   136a0:	ldr	r0, [r0]
   136a4:	movw	r2, #32302	; 0x7e2e
   136a8:	mov	r1, r6
   136ac:	strh	r5, [r4]
   136b0:	mov	r8, #0
   136b4:	movt	r2, #32305	; 0x7e31
   136b8:	str	r2, [r1, r9]!
   136bc:	strb	r8, [r1, #4]
   136c0:	cmp	r0, #12
   136c4:	mov	r0, #2
   136c8:	movweq	r0, #3
   136cc:	cmp	r0, #1
   136d0:	beq	13928 <__mempcpy_chk@plt+0x2298>
   136d4:	cmp	r0, #2
   136d8:	beq	136f0 <__mempcpy_chk@plt+0x2060>
   136dc:	mov	sl, r6
   136e0:	mov	r9, #0
   136e4:	cmp	r0, #3
   136e8:	bne	1398c <__mempcpy_chk@plt+0x22fc>
   136ec:	b	13ad8 <__mempcpy_chk@plt+0x2448>
   136f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   136f4:	cmp	r0, #2
   136f8:	bne	13928 <__mempcpy_chk@plt+0x2298>
   136fc:	movw	r1, #49616	; 0xc1d0
   13700:	ldr	r2, [sp, #36]	; 0x24
   13704:	add	r0, r6, r9
   13708:	movt	r1, #2
   1370c:	ldr	r1, [r1]
   13710:	bl	113c0 <memcpy@plt>
   13714:	mov	r0, #1
   13718:	str	r0, [fp, #-40]	; 0xffffffd8
   1371c:	b	13928 <__mempcpy_chk@plt+0x2298>
   13720:	ldr	r0, [sp, #20]
   13724:	cmp	r0, r9
   13728:	bge	1377c <__mempcpy_chk@plt+0x20ec>
   1372c:	ldr	r0, [sp, #4]
   13730:	add	r1, r9, r5
   13734:	str	r1, [sp, #20]
   13738:	add	r7, r0, r1
   1373c:	ldr	r0, [sp, #16]
   13740:	cmp	r0, r7
   13744:	bge	137a4 <__mempcpy_chk@plt+0x2114>
   13748:	add	r0, r7, r7, asr #1
   1374c:	mov	sl, r6
   13750:	cmp	r0, r7
   13754:	movvc	r7, r0
   13758:	mov	r0, r6
   1375c:	cmp	r7, #0
   13760:	mov	r1, r7
   13764:	orreq	r1, r1, #1
   13768:	bl	19764 <__mempcpy_chk@plt+0x80d4>
   1376c:	mov	r6, r0
   13770:	cmp	r0, #0
   13774:	bne	137a8 <__mempcpy_chk@plt+0x2118>
   13778:	b	13ad8 <__mempcpy_chk@plt+0x2448>
   1377c:	bne	13904 <__mempcpy_chk@plt+0x2274>
   13780:	ldr	r0, [sp, #48]	; 0x30
   13784:	ldr	r2, [sp, #20]
   13788:	mov	r1, r4
   1378c:	add	r0, r6, r0
   13790:	add	r0, r0, #2
   13794:	bl	113d8 <memcmp@plt>
   13798:	cmp	r0, #0
   1379c:	ble	1372c <__mempcpy_chk@plt+0x209c>
   137a0:	b	13904 <__mempcpy_chk@plt+0x2274>
   137a4:	mov	r7, r0
   137a8:	ldr	r1, [sp, #48]	; 0x30
   137ac:	movw	r2, #32302	; 0x7e2e
   137b0:	str	r6, [sp, #32]
   137b4:	strh	r2, [r6, r1]!
   137b8:	mov	r1, #48	; 0x30
   137bc:	add	r2, r9, #2
   137c0:	strb	r1, [r6, #2]!
   137c4:	mov	r1, r4
   137c8:	add	r6, r6, r5
   137cc:	mov	r0, r6
   137d0:	bl	113c0 <memcpy@plt>
   137d4:	add	r0, r6, r9
   137d8:	ldr	sl, [sp, #40]	; 0x28
   137dc:	ldrb	r1, [r0, #-1]!
   137e0:	cmp	r1, #57	; 0x39
   137e4:	bne	13808 <__mempcpy_chk@plt+0x2178>
   137e8:	ldr	r9, [sp, #48]	; 0x30
   137ec:	ldr	r6, [sp, #32]
   137f0:	mov	r2, #48	; 0x30
   137f4:	strb	r2, [r0]
   137f8:	ldrb	r1, [r0, #-1]!
   137fc:	cmp	r1, #57	; 0x39
   13800:	beq	137f4 <__mempcpy_chk@plt+0x2164>
   13804:	b	13810 <__mempcpy_chk@plt+0x2180>
   13808:	ldr	r9, [sp, #48]	; 0x30
   1380c:	ldr	r6, [sp, #32]
   13810:	add	r1, r1, #1
   13814:	str	r5, [sp, #32]
   13818:	str	r7, [sp, #16]
   1381c:	strb	r1, [r0]
   13820:	b	13908 <__mempcpy_chk@plt+0x2278>
   13824:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13828:	add	r5, r6, r0
   1382c:	add	r4, r7, #19
   13830:	mov	r0, r4
   13834:	bl	11504 <strlen@plt>
   13838:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1383c:	cmp	r0, r1
   13840:	bcc	1385c <__mempcpy_chk@plt+0x21cc>
   13844:	mov	r0, r5
   13848:	mov	r1, r4
   1384c:	mov	r2, sl
   13850:	bl	113d8 <memcmp@plt>
   13854:	cmp	r0, #0
   13858:	beq	13874 <__mempcpy_chk@plt+0x21e4>
   1385c:	mov	r0, r8
   13860:	bl	115f4 <readdir64@plt>
   13864:	mov	r7, r0
   13868:	cmp	r0, #0
   1386c:	bne	1382c <__mempcpy_chk@plt+0x219c>
   13870:	b	1391c <__mempcpy_chk@plt+0x228c>
   13874:	ldr	r0, [sp, #12]
   13878:	add	r4, r7, r0
   1387c:	ldrb	r0, [r4, #21]!
   13880:	sub	r1, r0, #49	; 0x31
   13884:	uxtb	r1, r1
   13888:	cmp	r1, #8
   1388c:	bhi	13908 <__mempcpy_chk@plt+0x2278>
   13890:	sub	r0, r0, #57	; 0x39
   13894:	sub	r1, r4, #2
   13898:	mov	r9, #1
   1389c:	clz	r0, r0
   138a0:	lsr	r5, r0, #5
   138a4:	ldrb	r0, [r1, #3]
   138a8:	sub	r1, r0, #48	; 0x30
   138ac:	cmp	r1, #9
   138b0:	bhi	138ec <__mempcpy_chk@plt+0x225c>
   138b4:	ldr	r1, [sp, #8]
   138b8:	add	r2, r7, r1
   138bc:	mov	r1, #0
   138c0:	mvn	r7, #56	; 0x38
   138c4:	uxtab	r0, r7, r0
   138c8:	clz	r0, r0
   138cc:	lsr	r0, r0, #5
   138d0:	and	r5, r0, r5
   138d4:	ldrb	r0, [r2, r1]
   138d8:	add	r1, r1, #1
   138dc:	sub	r3, r0, #48	; 0x30
   138e0:	cmp	r3, #10
   138e4:	bcc	138c4 <__mempcpy_chk@plt+0x2234>
   138e8:	add	r9, r1, #1
   138ec:	cmp	r0, #126	; 0x7e
   138f0:	bne	13904 <__mempcpy_chk@plt+0x2274>
   138f4:	add	r0, r4, r9
   138f8:	ldrb	r0, [r0, #1]
   138fc:	cmp	r0, #0
   13900:	beq	13720 <__mempcpy_chk@plt+0x2090>
   13904:	ldr	r9, [sp, #48]	; 0x30
   13908:	mov	r0, r8
   1390c:	bl	115f4 <readdir64@plt>
   13910:	mov	r7, r0
   13914:	cmp	r0, #0
   13918:	bne	13824 <__mempcpy_chk@plt+0x2194>
   1391c:	ldr	r0, [sp, #32]
   13920:	cmp	r0, #1
   13924:	bne	136d4 <__mempcpy_chk@plt+0x2044>
   13928:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1392c:	mov	r0, r6
   13930:	mov	sl, r6
   13934:	bl	13c44 <__mempcpy_chk@plt+0x25b4>
   13938:	mov	r7, r0
   1393c:	bl	13ca4 <__mempcpy_chk@plt+0x2614>
   13940:	mov	r9, #0
   13944:	cmp	r0, #15
   13948:	blt	1398c <__mempcpy_chk@plt+0x22fc>
   1394c:	ldr	r1, [sp, #28]
   13950:	mov	r5, r0
   13954:	cmp	r1, #0
   13958:	beq	13a10 <__mempcpy_chk@plt+0x2380>
   1395c:	cmp	r5, r1
   13960:	str	r1, [sp, #28]
   13964:	ble	1398c <__mempcpy_chk@plt+0x22fc>
   13968:	ldr	r0, [sp, #48]	; 0x30
   1396c:	mov	r9, #1
   13970:	add	r0, sl, r0
   13974:	sub	r0, r0, r7
   13978:	cmp	r1, r0
   1397c:	suble	r0, r1, #1
   13980:	mov	r1, #126	; 0x7e
   13984:	add	r0, r7, r0
   13988:	strh	r1, [r0]
   1398c:	ldr	r0, [sp, #44]	; 0x2c
   13990:	cmp	r0, #0
   13994:	beq	13a94 <__mempcpy_chk@plt+0x2404>
   13998:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1399c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   139a0:	ldr	r1, [sp, #52]	; 0x34
   139a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   139a8:	subs	r0, r0, #1
   139ac:	movwne	r0, #1
   139b0:	cmp	r2, #0
   139b4:	str	r0, [sp]
   139b8:	mov	r0, r2
   139bc:	movwlt	r3, #0
   139c0:	movlt	r0, r1
   139c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   139c8:	add	r1, r1, r3
   139cc:	add	r3, sl, r3
   139d0:	bl	18060 <__mempcpy_chk@plt+0x69d0>
   139d4:	cmp	r0, #0
   139d8:	beq	13a94 <__mempcpy_chk@plt+0x2404>
   139dc:	mvn	r7, r9
   139e0:	bl	1151c <__errno_location@plt>
   139e4:	ldr	r5, [r0]
   139e8:	mov	r4, r0
   139ec:	mov	r6, sl
   139f0:	ldr	r9, [sp, #48]	; 0x30
   139f4:	ldr	sl, [sp, #40]	; 0x28
   139f8:	sub	r0, r5, #17
   139fc:	clz	r0, r0
   13a00:	lsr	r0, r0, #5
   13a04:	tst	r7, r0
   13a08:	bne	135a4 <__mempcpy_chk@plt+0x1f14>
   13a0c:	b	13ab0 <__mempcpy_chk@plt+0x2420>
   13a10:	cmn	r4, #1
   13a14:	ble	13a3c <__mempcpy_chk@plt+0x23ac>
   13a18:	bl	1151c <__errno_location@plt>
   13a1c:	mov	r6, r0
   13a20:	mov	r0, #0
   13a24:	mov	r1, #3
   13a28:	str	r0, [r6]
   13a2c:	mov	r0, r4
   13a30:	bl	1154c <fpathconf@plt>
   13a34:	ldr	r1, [r6]
   13a38:	b	13a6c <__mempcpy_chk@plt+0x23dc>
   13a3c:	ldrh	r6, [r7]
   13a40:	mov	r0, #46	; 0x2e
   13a44:	strh	r0, [r7]
   13a48:	bl	1151c <__errno_location@plt>
   13a4c:	mov	r4, r0
   13a50:	mov	r0, #0
   13a54:	mov	r1, #3
   13a58:	str	r0, [r4]
   13a5c:	mov	r0, sl
   13a60:	bl	11354 <pathconf@plt>
   13a64:	ldr	r1, [r4]
   13a68:	strh	r6, [r7]
   13a6c:	cmp	r1, #0
   13a70:	subeq	r0, r0, #1
   13a74:	cmn	r0, #1
   13a78:	mov	r1, r0
   13a7c:	movwne	r1, #14
   13a80:	movgt	r1, r0
   13a84:	cmp	r5, r1
   13a88:	str	r1, [sp, #28]
   13a8c:	bgt	13968 <__mempcpy_chk@plt+0x22d8>
   13a90:	b	1398c <__mempcpy_chk@plt+0x22fc>
   13a94:	cmp	r8, #0
   13a98:	beq	13aa4 <__mempcpy_chk@plt+0x2414>
   13a9c:	mov	r0, r8
   13aa0:	bl	11678 <closedir@plt>
   13aa4:	mov	r0, sl
   13aa8:	sub	sp, fp, #28
   13aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ab0:	cmp	r8, #0
   13ab4:	beq	13ac0 <__mempcpy_chk@plt+0x2430>
   13ab8:	mov	r0, r8
   13abc:	bl	11678 <closedir@plt>
   13ac0:	mov	r0, r6
   13ac4:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   13ac8:	str	r5, [r4]
   13acc:	mov	r0, #0
   13ad0:	sub	sp, fp, #28
   13ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ad8:	cmp	r8, #0
   13adc:	beq	13ae8 <__mempcpy_chk@plt+0x2458>
   13ae0:	mov	r0, r8
   13ae4:	bl	11678 <closedir@plt>
   13ae8:	mov	r0, sl
   13aec:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   13af0:	bl	1151c <__errno_location@plt>
   13af4:	mov	r1, #12
   13af8:	str	r1, [r0]
   13afc:	mov	r0, #0
   13b00:	sub	sp, fp, #28
   13b04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b08:	push	{fp, lr}
   13b0c:	mov	fp, sp
   13b10:	mov	r3, #0
   13b14:	bl	13498 <__mempcpy_chk@plt+0x1e08>
   13b18:	cmp	r0, #0
   13b1c:	popne	{fp, pc}
   13b20:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   13b24:	cmp	r1, #0
   13b28:	mov	r2, #2
   13b2c:	ldrbne	r3, [r1]
   13b30:	cmpne	r3, #0
   13b34:	bne	13b40 <__mempcpy_chk@plt+0x24b0>
   13b38:	mov	r0, r2
   13b3c:	bx	lr
   13b40:	push	{r4, sl, fp, lr}
   13b44:	add	fp, sp, #8
   13b48:	sub	sp, sp, #16
   13b4c:	movw	r2, #49552	; 0xc190
   13b50:	mov	r4, #4
   13b54:	mov	r3, #1
   13b58:	movt	r2, #2
   13b5c:	str	r4, [sp]
   13b60:	movw	r4, #46272	; 0xb4c0
   13b64:	ldr	r2, [r2]
   13b68:	movt	r4, #1
   13b6c:	stmib	sp, {r2, r3}
   13b70:	movw	r2, #46304	; 0xb4e0
   13b74:	mov	r3, r4
   13b78:	movt	r2, #1
   13b7c:	bl	19b10 <__mempcpy_chk@plt+0x8480>
   13b80:	ldr	r2, [r4, r0, lsl #2]
   13b84:	sub	sp, fp, #8
   13b88:	pop	{r4, sl, fp, lr}
   13b8c:	mov	r0, r2
   13b90:	bx	lr
   13b94:	push	{r4, sl, fp, lr}
   13b98:	add	fp, sp, #8
   13b9c:	sub	sp, sp, #16
   13ba0:	cmp	r1, #0
   13ba4:	ldrbne	r2, [r1]
   13ba8:	cmpne	r2, #0
   13bac:	bne	13bdc <__mempcpy_chk@plt+0x254c>
   13bb0:	movw	r0, #46341	; 0xb505
   13bb4:	movt	r0, #1
   13bb8:	bl	11498 <getenv@plt>
   13bbc:	mov	r1, r0
   13bc0:	mov	r0, #2
   13bc4:	cmp	r1, #0
   13bc8:	ldrbne	r2, [r1]
   13bcc:	cmpne	r2, #0
   13bd0:	bne	13bfc <__mempcpy_chk@plt+0x256c>
   13bd4:	sub	sp, fp, #8
   13bd8:	pop	{r4, sl, fp, pc}
   13bdc:	movw	r2, #49552	; 0xc190
   13be0:	mov	r4, #4
   13be4:	mov	r3, #1
   13be8:	movt	r2, #2
   13bec:	str	r4, [sp]
   13bf0:	ldr	r2, [r2]
   13bf4:	stmib	sp, {r2, r3}
   13bf8:	b	13c20 <__mempcpy_chk@plt+0x2590>
   13bfc:	movw	r0, #49552	; 0xc190
   13c00:	mov	r3, #4
   13c04:	mov	r2, #1
   13c08:	movt	r0, #2
   13c0c:	str	r3, [sp]
   13c10:	ldr	r0, [r0]
   13c14:	stmib	sp, {r0, r2}
   13c18:	movw	r0, #46340	; 0xb504
   13c1c:	movt	r0, #1
   13c20:	movw	r4, #46272	; 0xb4c0
   13c24:	movw	r2, #46304	; 0xb4e0
   13c28:	movt	r4, #1
   13c2c:	movt	r2, #1
   13c30:	mov	r3, r4
   13c34:	bl	19b10 <__mempcpy_chk@plt+0x8480>
   13c38:	ldr	r0, [r4, r0, lsl #2]
   13c3c:	sub	sp, fp, #8
   13c40:	pop	{r4, sl, fp, pc}
   13c44:	sub	r0, r0, #1
   13c48:	ldrb	r3, [r0, #1]!
   13c4c:	cmp	r3, #47	; 0x2f
   13c50:	beq	13c48 <__mempcpy_chk@plt+0x25b8>
   13c54:	mov	r2, #0
   13c58:	mov	r1, r0
   13c5c:	uxtb	r3, r3
   13c60:	cmp	r3, #47	; 0x2f
   13c64:	beq	13c8c <__mempcpy_chk@plt+0x25fc>
   13c68:	cmp	r3, #0
   13c6c:	bxeq	lr
   13c70:	tst	r2, #1
   13c74:	mov	r2, #0
   13c78:	movne	r0, r1
   13c7c:	ldrb	r3, [r1, #1]!
   13c80:	uxtb	r3, r3
   13c84:	cmp	r3, #47	; 0x2f
   13c88:	bne	13c68 <__mempcpy_chk@plt+0x25d8>
   13c8c:	ldrb	r3, [r1, #1]!
   13c90:	mov	r2, #1
   13c94:	uxtb	r3, r3
   13c98:	cmp	r3, #47	; 0x2f
   13c9c:	bne	13c68 <__mempcpy_chk@plt+0x25d8>
   13ca0:	b	13c8c <__mempcpy_chk@plt+0x25fc>
   13ca4:	push	{r4, sl, fp, lr}
   13ca8:	add	fp, sp, #8
   13cac:	mov	r4, r0
   13cb0:	bl	11504 <strlen@plt>
   13cb4:	mov	r1, r0
   13cb8:	sub	r2, r4, #1
   13cbc:	mov	r0, r1
   13cc0:	cmp	r1, #2
   13cc4:	popcc	{r4, sl, fp, pc}
   13cc8:	ldrb	r3, [r2, r0]
   13ccc:	sub	r1, r0, #1
   13cd0:	cmp	r3, #47	; 0x2f
   13cd4:	beq	13cbc <__mempcpy_chk@plt+0x262c>
   13cd8:	pop	{r4, sl, fp, pc}
   13cdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ce0:	add	fp, sp, #28
   13ce4:	sub	sp, sp, #180	; 0xb4
   13ce8:	sub	sp, sp, #3072	; 0xc00
   13cec:	mov	r8, r0
   13cf0:	and	r7, r1, #3
   13cf4:	sub	r0, r1, #1
   13cf8:	tst	r0, r7
   13cfc:	beq	13d1c <__mempcpy_chk@plt+0x268c>
   13d00:	bl	1151c <__errno_location@plt>
   13d04:	mov	r1, #22
   13d08:	mov	r4, #0
   13d0c:	str	r1, [r0]
   13d10:	mov	r0, r4
   13d14:	sub	sp, fp, #28
   13d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d1c:	cmp	r8, #0
   13d20:	beq	13d00 <__mempcpy_chk@plt+0x2670>
   13d24:	ldrb	r0, [r8]
   13d28:	cmp	r0, #0
   13d2c:	beq	14334 <__mempcpy_chk@plt+0x2ca4>
   13d30:	sub	lr, fp, #1024	; 0x400
   13d34:	mov	r4, r1
   13d38:	mov	r1, #1024	; 0x400
   13d3c:	cmp	r0, #47	; 0x2f
   13d40:	sub	r2, lr, #40	; 0x28
   13d44:	str	r1, [fp, #-1060]	; 0xfffffbdc
   13d48:	add	r2, r2, #8
   13d4c:	str	r2, [sp, #12]
   13d50:	str	r2, [fp, #-1064]	; 0xfffffbd8
   13d54:	add	r2, sp, #1184	; 0x4a0
   13d58:	add	r2, r2, #8
   13d5c:	str	r2, [sp, #1184]	; 0x4a0
   13d60:	str	r2, [sp, #16]
   13d64:	add	r2, sp, #48	; 0x30
   13d68:	str	r1, [sp, #1188]	; 0x4a4
   13d6c:	add	r5, r2, #8
   13d70:	mov	r0, r5
   13d74:	str	r5, [sp, #48]	; 0x30
   13d78:	str	r1, [sp, #52]	; 0x34
   13d7c:	str	r5, [sp, #8]
   13d80:	bne	14340 <__mempcpy_chk@plt+0x2cb0>
   13d84:	mov	r1, r8
   13d88:	mov	r2, #0
   13d8c:	mov	r3, #1024	; 0x400
   13d90:	bl	11690 <__mempcpy_chk@plt>
   13d94:	mov	r6, r0
   13d98:	mov	r0, #47	; 0x2f
   13d9c:	strb	r0, [r6], #1
   13da0:	ldrb	r0, [r8]
   13da4:	cmp	r0, #0
   13da8:	beq	1436c <__mempcpy_chk@plt+0x2cdc>
   13dac:	and	r1, r4, #4
   13db0:	add	r9, sp, #48	; 0x30
   13db4:	str	r7, [sp, #32]
   13db8:	str	r1, [sp, #40]	; 0x28
   13dbc:	mov	r1, #0
   13dc0:	str	r1, [sp, #24]
   13dc4:	mov	r1, #0
   13dc8:	str	r1, [sp, #36]	; 0x24
   13dcc:	mov	r1, #0
   13dd0:	str	r1, [sp, #20]
   13dd4:	uxtb	r1, r0
   13dd8:	cmp	r1, #47	; 0x2f
   13ddc:	bne	13dec <__mempcpy_chk@plt+0x275c>
   13de0:	ldrb	r0, [r8, #1]!
   13de4:	cmp	r0, #47	; 0x2f
   13de8:	beq	13de0 <__mempcpy_chk@plt+0x2750>
   13dec:	mov	r1, r0
   13df0:	mov	sl, r8
   13df4:	uxtb	r1, r1
   13df8:	cmp	r1, #0
   13dfc:	cmpne	r1, #47	; 0x2f
   13e00:	beq	13e18 <__mempcpy_chk@plt+0x2788>
   13e04:	ldrb	r1, [sl, #1]!
   13e08:	uxtb	r1, r1
   13e0c:	cmp	r1, #0
   13e10:	cmpne	r1, #47	; 0x2f
   13e14:	bne	13e04 <__mempcpy_chk@plt+0x2774>
   13e18:	sub	r2, sl, r8
   13e1c:	cmp	r2, #1
   13e20:	beq	13e8c <__mempcpy_chk@plt+0x27fc>
   13e24:	cmp	r2, #2
   13e28:	beq	13e38 <__mempcpy_chk@plt+0x27a8>
   13e2c:	cmp	r2, #0
   13e30:	bne	13eac <__mempcpy_chk@plt+0x281c>
   13e34:	b	14374 <__mempcpy_chk@plt+0x2ce4>
   13e38:	uxtb	r0, r0
   13e3c:	cmp	r0, #46	; 0x2e
   13e40:	ldrbeq	r0, [r8, #1]
   13e44:	cmpeq	r0, #46	; 0x2e
   13e48:	bne	13eac <__mempcpy_chk@plt+0x281c>
   13e4c:	add	r0, r5, #1
   13e50:	cmp	r6, r0
   13e54:	bls	142f8 <__mempcpy_chk@plt+0x2c68>
   13e58:	sub	r0, r6, #1
   13e5c:	mov	r6, r0
   13e60:	cmp	r0, r5
   13e64:	bls	1430c <__mempcpy_chk@plt+0x2c7c>
   13e68:	mov	r0, r6
   13e6c:	ldrb	r1, [r0, #-1]!
   13e70:	cmp	r1, #47	; 0x2f
   13e74:	bne	13e5c <__mempcpy_chk@plt+0x27cc>
   13e78:	mov	r8, sl
   13e7c:	ldrb	r0, [r8]
   13e80:	cmp	r0, #0
   13e84:	bne	13dd4 <__mempcpy_chk@plt+0x2744>
   13e88:	b	14374 <__mempcpy_chk@plt+0x2ce4>
   13e8c:	uxtb	r0, r0
   13e90:	cmp	r0, #46	; 0x2e
   13e94:	bne	13eac <__mempcpy_chk@plt+0x281c>
   13e98:	mov	r8, sl
   13e9c:	ldrb	r0, [r8]
   13ea0:	cmp	r0, #0
   13ea4:	bne	13dd4 <__mempcpy_chk@plt+0x2744>
   13ea8:	b	14374 <__mempcpy_chk@plt+0x2ce4>
   13eac:	ldrb	r0, [r6, #-1]
   13eb0:	add	r4, r2, #2
   13eb4:	str	r2, [sp, #44]	; 0x2c
   13eb8:	cmp	r0, #47	; 0x2f
   13ebc:	movne	r0, #47	; 0x2f
   13ec0:	strbne	r0, [r6], #1
   13ec4:	ldr	r0, [sp, #52]	; 0x34
   13ec8:	add	r0, r5, r0
   13ecc:	sub	r0, r0, r6
   13ed0:	cmp	r0, r4
   13ed4:	bcs	13f0c <__mempcpy_chk@plt+0x287c>
   13ed8:	mov	r0, r9
   13edc:	bl	184d4 <__mempcpy_chk@plt+0x6e44>
   13ee0:	cmp	r0, #0
   13ee4:	beq	14484 <__mempcpy_chk@plt+0x2df4>
   13ee8:	sub	r0, r6, r5
   13eec:	ldr	r5, [sp, #48]	; 0x30
   13ef0:	ldr	r1, [sp, #52]	; 0x34
   13ef4:	add	r6, r5, r0
   13ef8:	add	r0, r5, r1
   13efc:	sub	r0, r0, r6
   13f00:	cmp	r0, r4
   13f04:	bcc	13ed8 <__mempcpy_chk@plt+0x2848>
   13f08:	ldr	r2, [sp, #44]	; 0x2c
   13f0c:	mov	r0, r6
   13f10:	mov	r1, r8
   13f14:	mvn	r3, #0
   13f18:	bl	11690 <__mempcpy_chk@plt>
   13f1c:	mov	r6, r0
   13f20:	mov	r0, #0
   13f24:	strb	r0, [r6]
   13f28:	ldr	r0, [sp, #40]	; 0x28
   13f2c:	cmp	r0, #0
   13f30:	bne	13f94 <__mempcpy_chk@plt+0x2904>
   13f34:	ldr	r0, [sp, #1188]	; 0x4a4
   13f38:	ldr	r7, [sp, #1184]	; 0x4a0
   13f3c:	sub	r9, r0, #1
   13f40:	mov	r0, r5
   13f44:	mov	r1, r7
   13f48:	mov	r2, r9
   13f4c:	bl	1142c <readlink@plt>
   13f50:	cmp	r0, r9
   13f54:	blt	13f6c <__mempcpy_chk@plt+0x28dc>
   13f58:	add	r0, sp, #1184	; 0x4a0
   13f5c:	bl	18464 <__mempcpy_chk@plt+0x6dd4>
   13f60:	cmp	r0, #0
   13f64:	bne	13f34 <__mempcpy_chk@plt+0x28a4>
   13f68:	b	14484 <__mempcpy_chk@plt+0x2df4>
   13f6c:	mov	r4, r0
   13f70:	cmp	r0, #0
   13f74:	add	r9, sp, #48	; 0x30
   13f78:	blt	13f94 <__mempcpy_chk@plt+0x2904>
   13f7c:	ldr	r0, [sp, #24]
   13f80:	cmp	r0, #19
   13f84:	bgt	14044 <__mempcpy_chk@plt+0x29b4>
   13f88:	add	r0, r0, #1
   13f8c:	str	r0, [sp, #24]
   13f90:	b	141d0 <__mempcpy_chk@plt+0x2b40>
   13f94:	ldr	r7, [sp, #32]
   13f98:	cmp	r7, #2
   13f9c:	bne	13fb4 <__mempcpy_chk@plt+0x2924>
   13fa0:	mov	r8, sl
   13fa4:	ldrb	r0, [r8]
   13fa8:	cmp	r0, #0
   13fac:	bne	13dd4 <__mempcpy_chk@plt+0x2744>
   13fb0:	b	14374 <__mempcpy_chk@plt+0x2ce4>
   13fb4:	ldrb	r0, [sl]
   13fb8:	cmp	r0, #47	; 0x2f
   13fbc:	bne	14114 <__mempcpy_chk@plt+0x2a84>
   13fc0:	mov	r2, sl
   13fc4:	mov	r1, r2
   13fc8:	ldrb	r3, [r2, #1]!
   13fcc:	cmp	r3, #47	; 0x2f
   13fd0:	beq	13fc4 <__mempcpy_chk@plt+0x2934>
   13fd4:	cmp	r3, #46	; 0x2e
   13fd8:	bne	1410c <__mempcpy_chk@plt+0x2a7c>
   13fdc:	add	r2, r1, #2
   13fe0:	ldrb	r3, [r2]
   13fe4:	cmp	r3, #47	; 0x2f
   13fe8:	beq	13fc4 <__mempcpy_chk@plt+0x2934>
   13fec:	cmp	r3, #0
   13ff0:	beq	1400c <__mempcpy_chk@plt+0x297c>
   13ff4:	cmp	r3, #46	; 0x2e
   13ff8:	bne	14114 <__mempcpy_chk@plt+0x2a84>
   13ffc:	ldrb	r1, [r1, #3]
   14000:	cmp	r1, #47	; 0x2f
   14004:	cmpne	r1, #0
   14008:	bne	14114 <__mempcpy_chk@plt+0x2a84>
   1400c:	mov	r0, #47	; 0x2f
   14010:	mov	r1, r5
   14014:	mov	r2, #0
   14018:	mov	r3, #512	; 0x200
   1401c:	strh	r0, [r6]
   14020:	mvn	r0, #99	; 0x63
   14024:	bl	1139c <faccessat@plt>
   14028:	cmp	r0, #0
   1402c:	bne	1417c <__mempcpy_chk@plt+0x2aec>
   14030:	mov	r8, sl
   14034:	ldrb	r0, [r8]
   14038:	cmp	r0, #0
   1403c:	bne	13dd4 <__mempcpy_chk@plt+0x2744>
   14040:	b	14374 <__mempcpy_chk@plt+0x2ce4>
   14044:	ldrb	r0, [r8]
   14048:	cmp	r0, #0
   1404c:	beq	141d0 <__mempcpy_chk@plt+0x2b40>
   14050:	ldr	r9, [sp, #44]	; 0x2c
   14054:	mov	r0, #0
   14058:	add	lr, sp, #1024	; 0x400
   1405c:	mov	r1, r5
   14060:	add	r2, lr, #56	; 0x38
   14064:	strb	r0, [r6, -r9]
   14068:	ldrb	r0, [r5]
   1406c:	cmp	r0, #0
   14070:	movw	r0, #46202	; 0xb47a
   14074:	movt	r0, #1
   14078:	moveq	r1, r0
   1407c:	mov	r0, #3
   14080:	bl	1163c <__xstat64@plt>
   14084:	cmp	r0, #0
   14088:	bne	14494 <__mempcpy_chk@plt+0x2e04>
   1408c:	rsb	r0, r9, #0
   14090:	ldr	r9, [sp, #20]
   14094:	ldrb	r1, [r8]
   14098:	cmp	r9, #0
   1409c:	strb	r1, [r6, r0]
   140a0:	bne	140d8 <__mempcpy_chk@plt+0x2a48>
   140a4:	movw	r0, #24588	; 0x600c
   140a8:	movw	r2, #24444	; 0x5f7c
   140ac:	movw	r3, #24500	; 0x5fb4
   140b0:	mov	r1, #0
   140b4:	movt	r0, #1
   140b8:	movt	r2, #1
   140bc:	movt	r3, #1
   140c0:	str	r0, [sp]
   140c4:	mov	r0, #7
   140c8:	bl	14fd8 <__mempcpy_chk@plt+0x3948>
   140cc:	mov	r9, r0
   140d0:	cmp	r0, #0
   140d4:	beq	14484 <__mempcpy_chk@plt+0x2df4>
   140d8:	add	lr, sp, #1024	; 0x400
   140dc:	mov	r0, r9
   140e0:	mov	r1, r8
   140e4:	add	r2, lr, #56	; 0x38
   140e8:	bl	148ec <__mempcpy_chk@plt+0x325c>
   140ec:	cmp	r0, #0
   140f0:	str	r9, [sp, #20]
   140f4:	beq	141bc <__mempcpy_chk@plt+0x2b2c>
   140f8:	ldr	r7, [sp, #32]
   140fc:	cmp	r7, #2
   14100:	bne	14488 <__mempcpy_chk@plt+0x2df8>
   14104:	mov	r8, sl
   14108:	b	1429c <__mempcpy_chk@plt+0x2c0c>
   1410c:	cmp	r3, #0
   14110:	beq	1400c <__mempcpy_chk@plt+0x297c>
   14114:	ldr	r1, [sp, #40]	; 0x28
   14118:	cmp	r1, #0
   1411c:	beq	1413c <__mempcpy_chk@plt+0x2aac>
   14120:	cmp	r0, #0
   14124:	beq	14160 <__mempcpy_chk@plt+0x2ad0>
   14128:	mov	r8, sl
   1412c:	ldrb	r0, [r8]
   14130:	cmp	r0, #0
   14134:	bne	13dd4 <__mempcpy_chk@plt+0x2744>
   14138:	b	14374 <__mempcpy_chk@plt+0x2ce4>
   1413c:	bl	1151c <__errno_location@plt>
   14140:	ldr	r0, [r0]
   14144:	cmp	r0, #22
   14148:	bne	1417c <__mempcpy_chk@plt+0x2aec>
   1414c:	mov	r8, sl
   14150:	ldrb	r0, [r8]
   14154:	cmp	r0, #0
   14158:	bne	13dd4 <__mempcpy_chk@plt+0x2744>
   1415c:	b	14374 <__mempcpy_chk@plt+0x2ce4>
   14160:	mvn	r0, #99	; 0x63
   14164:	mov	r1, r5
   14168:	mov	r2, #0
   1416c:	mov	r3, #512	; 0x200
   14170:	bl	1139c <faccessat@plt>
   14174:	cmp	r0, #0
   14178:	beq	14320 <__mempcpy_chk@plt+0x2c90>
   1417c:	mov	r4, #1
   14180:	cmp	r7, #1
   14184:	bne	14394 <__mempcpy_chk@plt+0x2d04>
   14188:	bl	1151c <__errno_location@plt>
   1418c:	ldr	r0, [r0]
   14190:	cmp	r0, #2
   14194:	bne	14394 <__mempcpy_chk@plt+0x2d04>
   14198:	movw	r1, #47634	; 0xba12
   1419c:	mov	r0, sl
   141a0:	movt	r1, #1
   141a4:	bl	11684 <strspn@plt>
   141a8:	ldrb	r0, [sl, r0]
   141ac:	mov	r8, sl
   141b0:	cmp	r0, #0
   141b4:	beq	142e8 <__mempcpy_chk@plt+0x2c58>
   141b8:	b	14394 <__mempcpy_chk@plt+0x2d04>
   141bc:	add	lr, sp, #1024	; 0x400
   141c0:	mov	r0, r9
   141c4:	mov	r1, r8
   141c8:	add	r2, lr, #56	; 0x38
   141cc:	bl	14870 <__mempcpy_chk@plt+0x31e0>
   141d0:	mov	r0, #0
   141d4:	strb	r0, [r7, r4]
   141d8:	ldr	r0, [sp, #36]	; 0x24
   141dc:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   141e0:	tst	r0, #1
   141e4:	ldr	r0, [sp, #28]
   141e8:	subne	r0, sl, r8
   141ec:	str	r0, [sp, #28]
   141f0:	mov	r0, sl
   141f4:	bl	11504 <strlen@plt>
   141f8:	adds	r9, r0, r4
   141fc:	str	r0, [sp, #44]	; 0x2c
   14200:	bcs	14484 <__mempcpy_chk@plt+0x2df4>
   14204:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   14208:	cmp	r0, r9
   1420c:	bhi	14234 <__mempcpy_chk@plt+0x2ba4>
   14210:	sub	lr, fp, #1024	; 0x400
   14214:	sub	r0, lr, #40	; 0x28
   14218:	bl	184d4 <__mempcpy_chk@plt+0x6e44>
   1421c:	cmp	r0, #0
   14220:	beq	14484 <__mempcpy_chk@plt+0x2df4>
   14224:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   14228:	cmp	r0, r9
   1422c:	bls	14210 <__mempcpy_chk@plt+0x2b80>
   14230:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   14234:	ldr	r0, [sp, #36]	; 0x24
   14238:	ldr	r1, [sp, #44]	; 0x2c
   1423c:	tst	r0, #1
   14240:	ldr	r0, [sp, #28]
   14244:	add	r2, r1, #1
   14248:	addne	sl, r8, r0
   1424c:	add	r0, r8, r4
   14250:	mov	r1, sl
   14254:	bl	11384 <memmove@plt>
   14258:	mov	r0, r8
   1425c:	mov	r1, r7
   14260:	mov	r2, r4
   14264:	bl	113c0 <memcpy@plt>
   14268:	ldrb	r0, [r7]
   1426c:	cmp	r0, #47	; 0x2f
   14270:	bne	142b0 <__mempcpy_chk@plt+0x2c20>
   14274:	mov	r0, r5
   14278:	mov	r1, r7
   1427c:	mov	r2, #0
   14280:	mvn	r3, #0
   14284:	bl	11690 <__mempcpy_chk@plt>
   14288:	mov	r6, r0
   1428c:	mov	r0, #47	; 0x2f
   14290:	strb	r0, [r6], #1
   14294:	mov	r0, #1
   14298:	str	r0, [sp, #36]	; 0x24
   1429c:	add	r9, sp, #48	; 0x30
   142a0:	ldrb	r0, [r8]
   142a4:	cmp	r0, #0
   142a8:	bne	13dd4 <__mempcpy_chk@plt+0x2744>
   142ac:	b	14374 <__mempcpy_chk@plt+0x2ce4>
   142b0:	add	r0, r5, #1
   142b4:	mov	r1, #1
   142b8:	add	r9, sp, #48	; 0x30
   142bc:	cmp	r6, r0
   142c0:	str	r1, [sp, #36]	; 0x24
   142c4:	bls	142e8 <__mempcpy_chk@plt+0x2c58>
   142c8:	sub	r0, r6, #1
   142cc:	mov	r6, r0
   142d0:	cmp	r0, r5
   142d4:	bls	142e8 <__mempcpy_chk@plt+0x2c58>
   142d8:	mov	r0, r6
   142dc:	ldrb	r1, [r0, #-1]!
   142e0:	cmp	r1, #47	; 0x2f
   142e4:	bne	142cc <__mempcpy_chk@plt+0x2c3c>
   142e8:	ldrb	r0, [r8]
   142ec:	cmp	r0, #0
   142f0:	bne	13dd4 <__mempcpy_chk@plt+0x2744>
   142f4:	b	14374 <__mempcpy_chk@plt+0x2ce4>
   142f8:	mov	r8, sl
   142fc:	ldrb	r0, [r8]
   14300:	cmp	r0, #0
   14304:	bne	13dd4 <__mempcpy_chk@plt+0x2744>
   14308:	b	14374 <__mempcpy_chk@plt+0x2ce4>
   1430c:	mov	r8, sl
   14310:	ldrb	r0, [r8]
   14314:	cmp	r0, #0
   14318:	bne	13dd4 <__mempcpy_chk@plt+0x2744>
   1431c:	b	14374 <__mempcpy_chk@plt+0x2ce4>
   14320:	mov	r8, sl
   14324:	ldrb	r0, [r8]
   14328:	cmp	r0, #0
   1432c:	bne	13dd4 <__mempcpy_chk@plt+0x2744>
   14330:	b	14374 <__mempcpy_chk@plt+0x2ce4>
   14334:	bl	1151c <__errno_location@plt>
   14338:	mov	r1, #2
   1433c:	b	13d08 <__mempcpy_chk@plt+0x2678>
   14340:	mov	r1, #1024	; 0x400
   14344:	bl	114ec <getcwd@plt>
   14348:	cmp	r0, #0
   1434c:	beq	143b8 <__mempcpy_chk@plt+0x2d28>
   14350:	mov	r0, r5
   14354:	mov	r1, #0
   14358:	bl	11408 <rawmemchr@plt>
   1435c:	mov	r6, r0
   14360:	ldrb	r0, [r8]
   14364:	cmp	r0, #0
   14368:	bne	13dac <__mempcpy_chk@plt+0x271c>
   1436c:	mov	r0, #0
   14370:	str	r0, [sp, #20]
   14374:	add	r0, r5, #1
   14378:	cmp	r6, r0
   1437c:	bls	14390 <__mempcpy_chk@plt+0x2d00>
   14380:	mov	r0, r6
   14384:	ldrb	r1, [r0, #-1]!
   14388:	cmp	r1, #47	; 0x2f
   1438c:	moveq	r6, r0
   14390:	mov	r4, #0
   14394:	ldr	r0, [sp, #20]
   14398:	cmp	r0, #0
   1439c:	beq	14410 <__mempcpy_chk@plt+0x2d80>
   143a0:	bl	152f4 <__mempcpy_chk@plt+0x3c64>
   143a4:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   143a8:	ldr	r1, [sp, #12]
   143ac:	cmp	r0, r1
   143b0:	bne	14420 <__mempcpy_chk@plt+0x2d90>
   143b4:	b	14424 <__mempcpy_chk@plt+0x2d94>
   143b8:	bl	1151c <__errno_location@plt>
   143bc:	ldr	r5, [sp, #8]
   143c0:	mov	r6, r0
   143c4:	add	r9, sp, #48	; 0x30
   143c8:	ldr	r0, [r6]
   143cc:	cmp	r0, #34	; 0x22
   143d0:	bne	14400 <__mempcpy_chk@plt+0x2d70>
   143d4:	mov	r0, r9
   143d8:	bl	18464 <__mempcpy_chk@plt+0x6dd4>
   143dc:	cmp	r0, #0
   143e0:	beq	14484 <__mempcpy_chk@plt+0x2df4>
   143e4:	ldr	r5, [sp, #48]	; 0x30
   143e8:	ldr	r1, [sp, #52]	; 0x34
   143ec:	mov	r0, r5
   143f0:	bl	114ec <getcwd@plt>
   143f4:	cmp	r0, #0
   143f8:	beq	143c8 <__mempcpy_chk@plt+0x2d38>
   143fc:	b	14350 <__mempcpy_chk@plt+0x2cc0>
   14400:	cmp	r0, #12
   14404:	beq	14484 <__mempcpy_chk@plt+0x2df4>
   14408:	mov	r4, #1
   1440c:	mov	r6, r5
   14410:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   14414:	ldr	r1, [sp, #12]
   14418:	cmp	r0, r1
   1441c:	beq	14424 <__mempcpy_chk@plt+0x2d94>
   14420:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   14424:	ldr	r0, [sp, #1184]	; 0x4a0
   14428:	ldr	r1, [sp, #16]
   1442c:	cmp	r0, r1
   14430:	beq	14438 <__mempcpy_chk@plt+0x2da8>
   14434:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   14438:	cmp	r4, #0
   1443c:	beq	14464 <__mempcpy_chk@plt+0x2dd4>
   14440:	ldr	r0, [sp, #48]	; 0x30
   14444:	ldr	r1, [sp, #8]
   14448:	mov	r4, #0
   1444c:	cmp	r0, r1
   14450:	beq	13d10 <__mempcpy_chk@plt+0x2680>
   14454:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   14458:	mov	r0, r4
   1445c:	sub	sp, fp, #28
   14460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14464:	mov	r0, #0
   14468:	strb	r0, [r6], #1
   1446c:	add	r0, sp, #48	; 0x30
   14470:	sub	r1, r6, r5
   14474:	bl	183fc <__mempcpy_chk@plt+0x6d6c>
   14478:	mov	r4, r0
   1447c:	cmp	r0, #0
   14480:	bne	13d10 <__mempcpy_chk@plt+0x2680>
   14484:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   14488:	bl	1151c <__errno_location@plt>
   1448c:	mov	r1, #40	; 0x28
   14490:	str	r1, [r0]
   14494:	mov	r4, #1
   14498:	ldr	r0, [sp, #20]
   1449c:	cmp	r0, #0
   144a0:	bne	143a0 <__mempcpy_chk@plt+0x2d10>
   144a4:	b	14410 <__mempcpy_chk@plt+0x2d80>
   144a8:	movw	r1, #49620	; 0xc1d4
   144ac:	movt	r1, #2
   144b0:	str	r0, [r1]
   144b4:	bx	lr
   144b8:	push	{r4, r5, r6, sl, fp, lr}
   144bc:	add	fp, sp, #16
   144c0:	sub	sp, sp, #8
   144c4:	movw	r6, #49584	; 0xc1b0
   144c8:	movt	r6, #2
   144cc:	ldr	r5, [r6]
   144d0:	mov	r0, r5
   144d4:	bl	14a30 <__mempcpy_chk@plt+0x33a0>
   144d8:	cmp	r0, #0
   144dc:	beq	1451c <__mempcpy_chk@plt+0x2e8c>
   144e0:	mov	r0, #1
   144e4:	mov	r2, #0
   144e8:	mov	r3, #0
   144ec:	mov	r4, #0
   144f0:	str	r0, [sp]
   144f4:	mov	r0, r5
   144f8:	bl	14a94 <__mempcpy_chk@plt+0x3404>
   144fc:	cmp	r0, #0
   14500:	bne	14520 <__mempcpy_chk@plt+0x2e90>
   14504:	ldr	r0, [r6]
   14508:	bl	14808 <__mempcpy_chk@plt+0x3178>
   1450c:	mov	r4, r0
   14510:	cmp	r0, #0
   14514:	movwne	r4, #1
   14518:	b	14520 <__mempcpy_chk@plt+0x2e90>
   1451c:	mov	r4, #0
   14520:	ldr	r0, [r6]
   14524:	bl	19cc4 <__mempcpy_chk@plt+0x8634>
   14528:	cmp	r4, #0
   1452c:	cmpeq	r0, #0
   14530:	bne	14540 <__mempcpy_chk@plt+0x2eb0>
   14534:	sub	sp, fp, #16
   14538:	pop	{r4, r5, r6, sl, fp, lr}
   1453c:	b	145e4 <__mempcpy_chk@plt+0x2f54>
   14540:	movw	r1, #46403	; 0xb543
   14544:	mov	r0, #0
   14548:	mov	r2, #5
   1454c:	movt	r1, #1
   14550:	bl	113e4 <dcgettext@plt>
   14554:	mov	r4, r0
   14558:	movw	r0, #49620	; 0xc1d4
   1455c:	movt	r0, #2
   14560:	ldr	r6, [r0]
   14564:	bl	1151c <__errno_location@plt>
   14568:	ldr	r5, [r0]
   1456c:	cmp	r6, #0
   14570:	bne	1458c <__mempcpy_chk@plt+0x2efc>
   14574:	movw	r2, #47787	; 0xbaab
   14578:	mov	r0, #0
   1457c:	mov	r1, r5
   14580:	mov	r3, r4
   14584:	movt	r2, #1
   14588:	b	145ac <__mempcpy_chk@plt+0x2f1c>
   1458c:	mov	r0, r6
   14590:	bl	17cc0 <__mempcpy_chk@plt+0x6630>
   14594:	movw	r2, #46422	; 0xb556
   14598:	mov	r3, r0
   1459c:	str	r4, [sp]
   145a0:	mov	r0, #0
   145a4:	mov	r1, r5
   145a8:	movt	r2, #1
   145ac:	bl	11480 <error@plt>
   145b0:	bl	145e4 <__mempcpy_chk@plt+0x2f54>
   145b4:	movw	r0, #49484	; 0xc14c
   145b8:	movt	r0, #2
   145bc:	ldr	r0, [r0]
   145c0:	bl	113b4 <_exit@plt>
   145c4:	movw	r1, #49624	; 0xc1d8
   145c8:	movt	r1, #2
   145cc:	str	r0, [r1, #4]
   145d0:	bx	lr
   145d4:	movw	r1, #49624	; 0xc1d8
   145d8:	movt	r1, #2
   145dc:	strb	r0, [r1]
   145e0:	bx	lr
   145e4:	push	{r4, r5, r6, sl, fp, lr}
   145e8:	add	fp, sp, #16
   145ec:	sub	sp, sp, #8
   145f0:	movw	r0, #49588	; 0xc1b4
   145f4:	movt	r0, #2
   145f8:	ldr	r0, [r0]
   145fc:	bl	19cc4 <__mempcpy_chk@plt+0x8634>
   14600:	cmp	r0, #0
   14604:	beq	1462c <__mempcpy_chk@plt+0x2f9c>
   14608:	movw	r5, #49624	; 0xc1d8
   1460c:	movt	r5, #2
   14610:	ldrb	r0, [r5]
   14614:	cmp	r0, #0
   14618:	beq	14658 <__mempcpy_chk@plt+0x2fc8>
   1461c:	bl	1151c <__errno_location@plt>
   14620:	ldr	r0, [r0]
   14624:	cmp	r0, #32
   14628:	bne	14658 <__mempcpy_chk@plt+0x2fc8>
   1462c:	movw	r0, #49576	; 0xc1a8
   14630:	movt	r0, #2
   14634:	ldr	r0, [r0]
   14638:	bl	19cc4 <__mempcpy_chk@plt+0x8634>
   1463c:	cmp	r0, #0
   14640:	subeq	sp, fp, #16
   14644:	popeq	{r4, r5, r6, sl, fp, pc}
   14648:	movw	r0, #49484	; 0xc14c
   1464c:	movt	r0, #2
   14650:	ldr	r0, [r0]
   14654:	bl	113b4 <_exit@plt>
   14658:	movw	r1, #46429	; 0xb55d
   1465c:	mov	r0, #0
   14660:	mov	r2, #5
   14664:	movt	r1, #1
   14668:	bl	113e4 <dcgettext@plt>
   1466c:	ldr	r6, [r5, #4]
   14670:	mov	r4, r0
   14674:	bl	1151c <__errno_location@plt>
   14678:	ldr	r5, [r0]
   1467c:	cmp	r6, #0
   14680:	bne	1469c <__mempcpy_chk@plt+0x300c>
   14684:	movw	r2, #47787	; 0xbaab
   14688:	mov	r0, #0
   1468c:	mov	r1, r5
   14690:	mov	r3, r4
   14694:	movt	r2, #1
   14698:	b	146bc <__mempcpy_chk@plt+0x302c>
   1469c:	mov	r0, r6
   146a0:	bl	17cc0 <__mempcpy_chk@plt+0x6630>
   146a4:	movw	r2, #46422	; 0xb556
   146a8:	mov	r3, r0
   146ac:	str	r4, [sp]
   146b0:	mov	r0, #0
   146b4:	mov	r1, r5
   146b8:	movt	r2, #1
   146bc:	bl	11480 <error@plt>
   146c0:	movw	r0, #49484	; 0xc14c
   146c4:	movt	r0, #2
   146c8:	ldr	r0, [r0]
   146cc:	bl	113b4 <_exit@plt>
   146d0:	push	{fp, lr}
   146d4:	mov	fp, sp
   146d8:	bl	14730 <__mempcpy_chk@plt+0x30a0>
   146dc:	cmp	r0, #0
   146e0:	popne	{fp, pc}
   146e4:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   146e8:	push	{r4, r5, r6, sl, fp, lr}
   146ec:	add	fp, sp, #16
   146f0:	mov	r5, r0
   146f4:	mov	r4, r0
   146f8:	ldrb	r6, [r5], #-1
   146fc:	bl	13c44 <__mempcpy_chk@plt+0x25b4>
   14700:	sub	r2, r0, r4
   14704:	sub	r0, r6, #47	; 0x2f
   14708:	clz	r0, r0
   1470c:	lsr	r1, r0, #5
   14710:	mov	r0, r2
   14714:	cmp	r2, r1
   14718:	popls	{r4, r5, r6, sl, fp, pc}
   1471c:	ldrb	r3, [r5, r0]
   14720:	sub	r2, r0, #1
   14724:	cmp	r3, #47	; 0x2f
   14728:	beq	14710 <__mempcpy_chk@plt+0x3080>
   1472c:	pop	{r4, r5, r6, sl, fp, pc}
   14730:	push	{r4, r5, r6, sl, fp, lr}
   14734:	add	fp, sp, #16
   14738:	mov	r6, r0
   1473c:	mov	r4, r0
   14740:	ldrb	r5, [r6], #-1
   14744:	bl	13c44 <__mempcpy_chk@plt+0x25b4>
   14748:	sub	r1, r0, r4
   1474c:	sub	r0, r5, #47	; 0x2f
   14750:	clz	r0, r0
   14754:	lsr	r0, r0, #5
   14758:	mov	r5, r1
   1475c:	cmp	r1, r0
   14760:	bls	14774 <__mempcpy_chk@plt+0x30e4>
   14764:	ldrb	r2, [r6, r5]
   14768:	sub	r1, r5, #1
   1476c:	cmp	r2, #47	; 0x2f
   14770:	beq	14758 <__mempcpy_chk@plt+0x30c8>
   14774:	cmp	r5, #0
   14778:	mov	r0, r5
   1477c:	addeq	r0, r0, #1
   14780:	add	r0, r0, #1
   14784:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   14788:	mov	r6, r0
   1478c:	cmp	r0, #0
   14790:	beq	147bc <__mempcpy_chk@plt+0x312c>
   14794:	mov	r0, r6
   14798:	mov	r1, r4
   1479c:	mov	r2, r5
   147a0:	bl	113c0 <memcpy@plt>
   147a4:	cmp	r5, #0
   147a8:	moveq	r0, #46	; 0x2e
   147ac:	moveq	r5, #1
   147b0:	strbeq	r0, [r6]
   147b4:	mov	r0, #0
   147b8:	strb	r0, [r6, r5]
   147bc:	mov	r0, r6
   147c0:	pop	{r4, r5, r6, sl, fp, pc}
   147c4:	push	{r4, r5, fp, lr}
   147c8:	add	fp, sp, #8
   147cc:	mov	r4, r0
   147d0:	bl	13c44 <__mempcpy_chk@plt+0x25b4>
   147d4:	mov	r5, r0
   147d8:	ldrb	r0, [r0]
   147dc:	cmp	r0, #0
   147e0:	moveq	r5, r4
   147e4:	mov	r0, r5
   147e8:	bl	13ca4 <__mempcpy_chk@plt+0x2614>
   147ec:	ldrb	r1, [r5, r0]
   147f0:	mov	r2, #0
   147f4:	strb	r2, [r5, r0]
   147f8:	cmp	r1, #0
   147fc:	movwne	r1, #1
   14800:	mov	r0, r1
   14804:	pop	{r4, r5, fp, pc}
   14808:	push	{r4, sl, fp, lr}
   1480c:	add	fp, sp, #8
   14810:	sub	sp, sp, #8
   14814:	mov	r4, r0
   14818:	cmp	r0, #0
   1481c:	beq	14838 <__mempcpy_chk@plt+0x31a8>
   14820:	mov	r0, r4
   14824:	bl	114bc <__freading@plt>
   14828:	cmp	r0, #0
   1482c:	ldrbne	r0, [r4, #1]
   14830:	tstne	r0, #1
   14834:	bne	14848 <__mempcpy_chk@plt+0x31b8>
   14838:	mov	r0, r4
   1483c:	sub	sp, fp, #8
   14840:	pop	{r4, sl, fp, lr}
   14844:	b	1136c <fflush@plt>
   14848:	mov	r0, #1
   1484c:	mov	r2, #0
   14850:	mov	r3, #0
   14854:	str	r0, [sp]
   14858:	mov	r0, r4
   1485c:	bl	14a94 <__mempcpy_chk@plt+0x3404>
   14860:	mov	r0, r4
   14864:	sub	sp, fp, #8
   14868:	pop	{r4, sl, fp, lr}
   1486c:	b	1136c <fflush@plt>
   14870:	push	{r4, r5, r6, r7, fp, lr}
   14874:	add	fp, sp, #16
   14878:	cmp	r0, #0
   1487c:	popeq	{r4, r5, r6, r7, fp, pc}
   14880:	mov	r5, r0
   14884:	mov	r0, #24
   14888:	mov	r6, r2
   1488c:	mov	r7, r1
   14890:	bl	190c0 <__mempcpy_chk@plt+0x7a30>
   14894:	mov	r4, r0
   14898:	mov	r0, r7
   1489c:	bl	195e0 <__mempcpy_chk@plt+0x7f50>
   148a0:	str	r0, [r4]
   148a4:	ldrd	r0, [r6, #96]	; 0x60
   148a8:	str	r1, [r4, #12]
   148ac:	str	r0, [r4, #8]
   148b0:	ldrd	r0, [r6]
   148b4:	str	r1, [r4, #20]
   148b8:	str	r0, [r4, #16]
   148bc:	mov	r0, r5
   148c0:	mov	r1, r4
   148c4:	bl	15c10 <__mempcpy_chk@plt+0x4580>
   148c8:	cmp	r0, #0
   148cc:	beq	148e8 <__mempcpy_chk@plt+0x3258>
   148d0:	cmp	r0, r4
   148d4:	beq	148e4 <__mempcpy_chk@plt+0x3254>
   148d8:	mov	r0, r4
   148dc:	pop	{r4, r5, r6, r7, fp, lr}
   148e0:	b	1600c <__mempcpy_chk@plt+0x497c>
   148e4:	pop	{r4, r5, r6, r7, fp, pc}
   148e8:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   148ec:	cmp	r0, #0
   148f0:	moveq	r0, #0
   148f4:	bxeq	lr
   148f8:	push	{r4, r5, fp, lr}
   148fc:	add	fp, sp, #8
   14900:	sub	sp, sp, #24
   14904:	str	r1, [sp]
   14908:	mov	r1, sp
   1490c:	ldrd	r4, [r2, #96]	; 0x60
   14910:	str	r5, [sp, #12]
   14914:	str	r4, [sp, #8]
   14918:	ldrd	r2, [r2]
   1491c:	str	r3, [sp, #20]
   14920:	str	r2, [sp, #16]
   14924:	bl	14d10 <__mempcpy_chk@plt+0x3680>
   14928:	cmp	r0, #0
   1492c:	movwne	r0, #1
   14930:	sub	sp, fp, #8
   14934:	pop	{r4, r5, fp, pc}
   14938:	push	{fp, lr}
   1493c:	mov	fp, sp
   14940:	bl	14950 <__mempcpy_chk@plt+0x32c0>
   14944:	cmp	r0, #0
   14948:	popne	{fp, pc}
   1494c:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   14950:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14954:	add	fp, sp, #28
   14958:	push	{r2}		; (str r2, [sp, #-4]!)
   1495c:	mov	sl, r1
   14960:	mov	r7, r0
   14964:	bl	13c44 <__mempcpy_chk@plt+0x25b4>
   14968:	sub	r4, r0, r7
   1496c:	bl	13ca4 <__mempcpy_chk@plt+0x2614>
   14970:	mov	r6, r0
   14974:	add	r5, r4, r0
   14978:	mov	r0, sl
   1497c:	bl	11504 <strlen@plt>
   14980:	mov	r9, r0
   14984:	cmp	r6, #0
   14988:	beq	149b0 <__mempcpy_chk@plt+0x3320>
   1498c:	add	r0, r7, r5
   14990:	mov	r4, #0
   14994:	ldrb	r0, [r0, #-1]
   14998:	cmp	r0, #47	; 0x2f
   1499c:	beq	149c0 <__mempcpy_chk@plt+0x3330>
   149a0:	ldrb	r0, [sl]
   149a4:	subs	r4, r0, #47	; 0x2f
   149a8:	movwne	r4, #47	; 0x2f
   149ac:	b	149c0 <__mempcpy_chk@plt+0x3330>
   149b0:	ldrb	r0, [sl]
   149b4:	mov	r4, #0
   149b8:	cmp	r0, #47	; 0x2f
   149bc:	movweq	r4, #46	; 0x2e
   149c0:	uxtb	r8, r4
   149c4:	add	r0, r9, r5
   149c8:	cmp	r8, #0
   149cc:	movwne	r8, #1
   149d0:	add	r0, r0, r8
   149d4:	add	r0, r0, #1
   149d8:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   149dc:	mov	r6, r0
   149e0:	cmp	r0, #0
   149e4:	beq	14a24 <__mempcpy_chk@plt+0x3394>
   149e8:	mov	r0, r6
   149ec:	mov	r1, r7
   149f0:	mov	r2, r5
   149f4:	mvn	r3, #0
   149f8:	bl	11690 <__mempcpy_chk@plt>
   149fc:	ldr	r1, [sp]
   14a00:	strb	r4, [r0], r8
   14a04:	mov	r2, r9
   14a08:	mvn	r3, #0
   14a0c:	cmp	r1, #0
   14a10:	strne	r0, [r1]
   14a14:	mov	r1, sl
   14a18:	bl	11690 <__mempcpy_chk@plt>
   14a1c:	mov	r1, #0
   14a20:	strb	r1, [r0]
   14a24:	mov	r0, r6
   14a28:	sub	sp, fp, #28
   14a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a30:	ldrd	r2, [r0, #16]
   14a34:	mov	r1, #0
   14a38:	cmp	r3, r2
   14a3c:	bhi	14a64 <__mempcpy_chk@plt+0x33d4>
   14a40:	ldmib	r0, {r1, r2}
   14a44:	ldrb	r3, [r0, #1]
   14a48:	sub	r1, r2, r1
   14a4c:	mov	r2, #0
   14a50:	tst	r3, #1
   14a54:	ldrne	r2, [r0, #36]	; 0x24
   14a58:	ldrne	r0, [r0, #44]	; 0x2c
   14a5c:	subne	r2, r0, r2
   14a60:	add	r1, r1, r2
   14a64:	mov	r0, r1
   14a68:	bx	lr
   14a6c:	push	{r4, r5, r6, sl, fp, lr}
   14a70:	add	fp, sp, #16
   14a74:	mov	r4, r0
   14a78:	bl	1151c <__errno_location@plt>
   14a7c:	ldr	r6, [r0]
   14a80:	mov	r5, r0
   14a84:	mov	r0, r4
   14a88:	bl	11390 <free@plt>
   14a8c:	str	r6, [r5]
   14a90:	pop	{r4, r5, r6, sl, fp, pc}
   14a94:	push	{r4, r5, r6, r7, fp, lr}
   14a98:	add	fp, sp, #16
   14a9c:	sub	sp, sp, #8
   14aa0:	mov	r4, r0
   14aa4:	ldr	r0, [r0, #4]
   14aa8:	mov	r5, r3
   14aac:	mov	r6, r2
   14ab0:	ldr	r1, [r4, #8]
   14ab4:	cmp	r1, r0
   14ab8:	bne	14ad4 <__mempcpy_chk@plt+0x3444>
   14abc:	ldrd	r0, [r4, #16]
   14ac0:	cmp	r1, r0
   14ac4:	bne	14ad4 <__mempcpy_chk@plt+0x3444>
   14ac8:	ldr	r0, [r4, #36]	; 0x24
   14acc:	cmp	r0, #0
   14ad0:	beq	14aec <__mempcpy_chk@plt+0x345c>
   14ad4:	mov	r0, r4
   14ad8:	mov	r2, r6
   14adc:	mov	r3, r5
   14ae0:	sub	sp, fp, #16
   14ae4:	pop	{r4, r5, r6, r7, fp, lr}
   14ae8:	b	115a0 <fseeko64@plt>
   14aec:	ldr	r7, [fp, #8]
   14af0:	mov	r0, r4
   14af4:	bl	11570 <fileno@plt>
   14af8:	mov	r2, r6
   14afc:	mov	r3, r5
   14b00:	str	r7, [sp]
   14b04:	bl	11444 <lseek64@plt>
   14b08:	and	r2, r0, r1
   14b0c:	cmn	r2, #1
   14b10:	mvneq	r0, #0
   14b14:	subeq	sp, fp, #16
   14b18:	popeq	{r4, r5, r6, r7, fp, pc}
   14b1c:	strd	r0, [r4, #80]	; 0x50
   14b20:	ldr	r0, [r4]
   14b24:	bic	r0, r0, #16
   14b28:	str	r0, [r4]
   14b2c:	mov	r0, #0
   14b30:	sub	sp, fp, #16
   14b34:	pop	{r4, r5, r6, r7, fp, pc}
   14b38:	ldr	r0, [r0, #8]
   14b3c:	bx	lr
   14b40:	ldr	r0, [r0, #12]
   14b44:	bx	lr
   14b48:	ldr	r0, [r0, #16]
   14b4c:	bx	lr
   14b50:	ldm	r0, {r2, ip}
   14b54:	mov	r0, #0
   14b58:	cmp	r2, ip
   14b5c:	bxcs	lr
   14b60:	mov	r0, #0
   14b64:	ldr	r1, [r2]
   14b68:	cmp	r1, #0
   14b6c:	beq	14b90 <__mempcpy_chk@plt+0x3500>
   14b70:	mov	r3, #0
   14b74:	mov	r1, r2
   14b78:	ldr	r1, [r1, #4]
   14b7c:	add	r3, r3, #1
   14b80:	cmp	r1, #0
   14b84:	bne	14b78 <__mempcpy_chk@plt+0x34e8>
   14b88:	cmp	r3, r0
   14b8c:	movhi	r0, r3
   14b90:	add	r2, r2, #8
   14b94:	cmp	r2, ip
   14b98:	bcc	14b64 <__mempcpy_chk@plt+0x34d4>
   14b9c:	bx	lr
   14ba0:	push	{fp, lr}
   14ba4:	mov	fp, sp
   14ba8:	ldm	r0, {r3, ip}
   14bac:	mov	lr, #0
   14bb0:	mov	r1, #0
   14bb4:	cmp	r3, ip
   14bb8:	bcs	14bf4 <__mempcpy_chk@plt+0x3564>
   14bbc:	mov	r1, #0
   14bc0:	mov	lr, #0
   14bc4:	ldr	r2, [r3]
   14bc8:	cmp	r2, #0
   14bcc:	beq	14be8 <__mempcpy_chk@plt+0x3558>
   14bd0:	mov	r2, r3
   14bd4:	ldr	r2, [r2, #4]
   14bd8:	add	r1, r1, #1
   14bdc:	cmp	r2, #0
   14be0:	bne	14bd4 <__mempcpy_chk@plt+0x3544>
   14be4:	add	lr, lr, #1
   14be8:	add	r3, r3, #8
   14bec:	cmp	r3, ip
   14bf0:	bcc	14bc4 <__mempcpy_chk@plt+0x3534>
   14bf4:	ldr	r2, [r0, #12]
   14bf8:	cmp	lr, r2
   14bfc:	bne	14c14 <__mempcpy_chk@plt+0x3584>
   14c00:	ldr	r2, [r0, #16]
   14c04:	mov	r0, #1
   14c08:	cmp	r1, r2
   14c0c:	movne	r0, #0
   14c10:	pop	{fp, pc}
   14c14:	mov	r0, #0
   14c18:	pop	{fp, pc}
   14c1c:	nop	{0}
   14c20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14c24:	add	fp, sp, #24
   14c28:	sub	sp, sp, #8
   14c2c:	ldr	r6, [r0]
   14c30:	ldmib	r0, {r2, r7, r8}
   14c34:	ldr	r3, [r0, #16]
   14c38:	mov	r4, r1
   14c3c:	mov	r5, #0
   14c40:	cmp	r6, r2
   14c44:	bcs	14c84 <__mempcpy_chk@plt+0x35f4>
   14c48:	mov	r5, #0
   14c4c:	ldr	r0, [r6]
   14c50:	cmp	r0, #0
   14c54:	beq	14c78 <__mempcpy_chk@plt+0x35e8>
   14c58:	mov	r0, #0
   14c5c:	mov	r1, r6
   14c60:	ldr	r1, [r1, #4]
   14c64:	add	r0, r0, #1
   14c68:	cmp	r1, #0
   14c6c:	bne	14c60 <__mempcpy_chk@plt+0x35d0>
   14c70:	cmp	r0, r5
   14c74:	movhi	r5, r0
   14c78:	add	r6, r6, #8
   14c7c:	cmp	r6, r2
   14c80:	bcc	14c4c <__mempcpy_chk@plt+0x35bc>
   14c84:	movw	r2, #46441	; 0xb569
   14c88:	mov	r0, r4
   14c8c:	mov	r1, #1
   14c90:	movt	r2, #1
   14c94:	bl	1157c <__fprintf_chk@plt>
   14c98:	movw	r2, #46465	; 0xb581
   14c9c:	mov	r0, r4
   14ca0:	mov	r1, #1
   14ca4:	mov	r3, r7
   14ca8:	movt	r2, #1
   14cac:	bl	1157c <__fprintf_chk@plt>
   14cb0:	vldr	d16, [pc, #80]	; 14d08 <__mempcpy_chk@plt+0x3678>
   14cb4:	vmov	s0, r8
   14cb8:	movw	r2, #46489	; 0xb599
   14cbc:	mov	r0, r4
   14cc0:	mov	r1, #1
   14cc4:	mov	r3, r8
   14cc8:	vcvt.f64.u32	d17, s0
   14ccc:	vmov	s0, r7
   14cd0:	movt	r2, #1
   14cd4:	vcvt.f64.u32	d18, s0
   14cd8:	vmul.f64	d16, d17, d16
   14cdc:	vdiv.f64	d16, d16, d18
   14ce0:	vstr	d16, [sp]
   14ce4:	bl	1157c <__fprintf_chk@plt>
   14ce8:	movw	r2, #46522	; 0xb5ba
   14cec:	mov	r0, r4
   14cf0:	mov	r1, #1
   14cf4:	mov	r3, r5
   14cf8:	movt	r2, #1
   14cfc:	sub	sp, fp, #24
   14d00:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d04:	b	1157c <__fprintf_chk@plt>
   14d08:	andeq	r0, r0, r0
   14d0c:	subsmi	r0, r9, r0
   14d10:	push	{r4, r5, r6, r7, fp, lr}
   14d14:	add	fp, sp, #16
   14d18:	mov	r4, r1
   14d1c:	ldr	r1, [r0, #8]
   14d20:	ldr	r2, [r0, #24]
   14d24:	mov	r5, r0
   14d28:	mov	r0, r4
   14d2c:	blx	r2
   14d30:	ldr	r1, [r5, #8]
   14d34:	cmp	r0, r1
   14d38:	bcs	14da4 <__mempcpy_chk@plt+0x3714>
   14d3c:	ldr	r7, [r5]
   14d40:	mov	r6, #0
   14d44:	ldr	r1, [r7, r0, lsl #3]!
   14d48:	cmp	r1, #0
   14d4c:	cmpne	r7, #0
   14d50:	bne	14d60 <__mempcpy_chk@plt+0x36d0>
   14d54:	mov	r0, r6
   14d58:	pop	{r4, r5, r6, r7, fp, pc}
   14d5c:	ldr	r1, [r7]
   14d60:	cmp	r1, r4
   14d64:	beq	14d8c <__mempcpy_chk@plt+0x36fc>
   14d68:	ldr	r2, [r5, #28]
   14d6c:	mov	r0, r4
   14d70:	blx	r2
   14d74:	cmp	r0, #0
   14d78:	bne	14d98 <__mempcpy_chk@plt+0x3708>
   14d7c:	ldr	r7, [r7, #4]
   14d80:	cmp	r7, #0
   14d84:	bne	14d5c <__mempcpy_chk@plt+0x36cc>
   14d88:	b	14d54 <__mempcpy_chk@plt+0x36c4>
   14d8c:	mov	r6, r4
   14d90:	mov	r0, r6
   14d94:	pop	{r4, r5, r6, r7, fp, pc}
   14d98:	ldr	r6, [r7]
   14d9c:	mov	r0, r6
   14da0:	pop	{r4, r5, r6, r7, fp, pc}
   14da4:	bl	11654 <abort@plt>
   14da8:	ldr	r1, [r0, #16]
   14dac:	cmp	r1, #0
   14db0:	moveq	r0, #0
   14db4:	bxeq	lr
   14db8:	ldm	r0, {r1, r2}
   14dbc:	cmp	r1, r2
   14dc0:	bcs	14dd8 <__mempcpy_chk@plt+0x3748>
   14dc4:	ldr	r0, [r1], #8
   14dc8:	cmp	r0, #0
   14dcc:	bxne	lr
   14dd0:	cmp	r1, r2
   14dd4:	bcc	14dc4 <__mempcpy_chk@plt+0x3734>
   14dd8:	push	{fp, lr}
   14ddc:	mov	fp, sp
   14de0:	bl	11654 <abort@plt>
   14de4:	push	{r4, r5, fp, lr}
   14de8:	add	fp, sp, #8
   14dec:	mov	r5, r1
   14df0:	ldr	r1, [r0, #8]
   14df4:	ldr	r2, [r0, #24]
   14df8:	mov	r4, r0
   14dfc:	mov	r0, r5
   14e00:	blx	r2
   14e04:	ldr	r1, [r4, #8]
   14e08:	cmp	r0, r1
   14e0c:	bcs	14e68 <__mempcpy_chk@plt+0x37d8>
   14e10:	ldr	r1, [r4]
   14e14:	add	r2, r1, r0, lsl #3
   14e18:	ldr	r3, [r2]
   14e1c:	ldr	r2, [r2, #4]
   14e20:	cmp	r3, r5
   14e24:	beq	14e34 <__mempcpy_chk@plt+0x37a4>
   14e28:	cmp	r2, #0
   14e2c:	bne	14e18 <__mempcpy_chk@plt+0x3788>
   14e30:	b	14e40 <__mempcpy_chk@plt+0x37b0>
   14e34:	cmp	r2, #0
   14e38:	ldrne	r0, [r2]
   14e3c:	popne	{r4, r5, fp, pc}
   14e40:	ldr	r2, [r4, #4]
   14e44:	add	r0, r1, r0, lsl #3
   14e48:	add	r1, r0, #8
   14e4c:	cmp	r1, r2
   14e50:	movcs	r0, #0
   14e54:	popcs	{r4, r5, fp, pc}
   14e58:	ldr	r0, [r1], #8
   14e5c:	cmp	r0, #0
   14e60:	popne	{r4, r5, fp, pc}
   14e64:	b	14e4c <__mempcpy_chk@plt+0x37bc>
   14e68:	bl	11654 <abort@plt>
   14e6c:	push	{r4, r5, fp, lr}
   14e70:	add	fp, sp, #8
   14e74:	ldm	r0, {r5, lr}
   14e78:	mov	ip, r0
   14e7c:	mov	r0, #0
   14e80:	cmp	r5, lr
   14e84:	bcs	14ee0 <__mempcpy_chk@plt+0x3850>
   14e88:	mov	r0, #0
   14e8c:	ldr	r3, [r5]
   14e90:	cmp	r3, #0
   14e94:	cmpne	r5, #0
   14e98:	bne	14eac <__mempcpy_chk@plt+0x381c>
   14e9c:	add	r5, r5, #8
   14ea0:	cmp	r5, lr
   14ea4:	bcc	14e8c <__mempcpy_chk@plt+0x37fc>
   14ea8:	b	14ee0 <__mempcpy_chk@plt+0x3850>
   14eac:	mov	r3, r5
   14eb0:	cmp	r0, r2
   14eb4:	popcs	{r4, r5, fp, pc}
   14eb8:	ldr	r4, [r3]
   14ebc:	str	r4, [r1, r0, lsl #2]
   14ec0:	add	r0, r0, #1
   14ec4:	ldr	r3, [r3, #4]
   14ec8:	cmp	r3, #0
   14ecc:	bne	14eb0 <__mempcpy_chk@plt+0x3820>
   14ed0:	ldr	lr, [ip, #4]
   14ed4:	add	r5, r5, #8
   14ed8:	cmp	r5, lr
   14edc:	bcc	14e8c <__mempcpy_chk@plt+0x37fc>
   14ee0:	pop	{r4, r5, fp, pc}
   14ee4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ee8:	add	fp, sp, #24
   14eec:	mov	r5, r1
   14ef0:	ldr	r4, [r0]
   14ef4:	ldr	r1, [r0, #4]
   14ef8:	mov	r6, #0
   14efc:	cmp	r4, r1
   14f00:	bcs	14f7c <__mempcpy_chk@plt+0x38ec>
   14f04:	mov	r9, r2
   14f08:	mov	r8, r0
   14f0c:	mov	r6, #0
   14f10:	ldr	r0, [r4]
   14f14:	cmp	r0, #0
   14f18:	cmpne	r4, #0
   14f1c:	bne	14f30 <__mempcpy_chk@plt+0x38a0>
   14f20:	add	r4, r4, #8
   14f24:	cmp	r4, r1
   14f28:	bcc	14f10 <__mempcpy_chk@plt+0x3880>
   14f2c:	b	14f7c <__mempcpy_chk@plt+0x38ec>
   14f30:	mov	r1, r9
   14f34:	blx	r5
   14f38:	cmp	r0, #0
   14f3c:	beq	14f7c <__mempcpy_chk@plt+0x38ec>
   14f40:	mov	r7, r4
   14f44:	ldr	r7, [r7, #4]
   14f48:	add	r6, r6, #1
   14f4c:	cmp	r7, #0
   14f50:	beq	14f6c <__mempcpy_chk@plt+0x38dc>
   14f54:	ldr	r0, [r7]
   14f58:	mov	r1, r9
   14f5c:	blx	r5
   14f60:	cmp	r0, #0
   14f64:	bne	14f44 <__mempcpy_chk@plt+0x38b4>
   14f68:	b	14f7c <__mempcpy_chk@plt+0x38ec>
   14f6c:	ldr	r1, [r8, #4]
   14f70:	add	r4, r4, #8
   14f74:	cmp	r4, r1
   14f78:	bcc	14f10 <__mempcpy_chk@plt+0x3880>
   14f7c:	mov	r0, r6
   14f80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14f84:	ldrb	r2, [r0]
   14f88:	cmp	r2, #0
   14f8c:	moveq	r0, #0
   14f90:	bxeq	lr
   14f94:	add	r3, r0, #1
   14f98:	mov	r0, #0
   14f9c:	rsb	r0, r0, r0, lsl #5
   14fa0:	uxtab	r0, r0, r2
   14fa4:	udiv	r2, r0, r1
   14fa8:	mls	r0, r2, r1, r0
   14fac:	ldrb	r2, [r3], #1
   14fb0:	cmp	r2, #0
   14fb4:	bne	14f9c <__mempcpy_chk@plt+0x390c>
   14fb8:	bx	lr
   14fbc:	movw	r1, #46552	; 0xb5d8
   14fc0:	movt	r1, #1
   14fc4:	vld1.32	{d16-d17}, [r1]!
   14fc8:	ldr	r1, [r1]
   14fcc:	vst1.32	{d16-d17}, [r0]!
   14fd0:	str	r1, [r0]
   14fd4:	bx	lr
   14fd8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14fdc:	add	fp, sp, #24
   14fe0:	movw	r9, #21028	; 0x5224
   14fe4:	movw	r5, #21008	; 0x5210
   14fe8:	cmp	r3, #0
   14fec:	mov	r6, r0
   14ff0:	mov	r0, #40	; 0x28
   14ff4:	mov	r7, r1
   14ff8:	movt	r9, #1
   14ffc:	movt	r5, #1
   15000:	movne	r9, r3
   15004:	cmp	r2, #0
   15008:	movne	r5, r2
   1500c:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   15010:	mov	r8, #0
   15014:	cmp	r0, #0
   15018:	beq	151f8 <__mempcpy_chk@plt+0x3b68>
   1501c:	mov	r4, r0
   15020:	cmp	r7, #0
   15024:	beq	150d4 <__mempcpy_chk@plt+0x3a44>
   15028:	movw	r0, #46552	; 0xb5d8
   1502c:	str	r7, [r4, #20]
   15030:	movt	r0, #1
   15034:	cmp	r7, r0
   15038:	beq	150e0 <__mempcpy_chk@plt+0x3a50>
   1503c:	vldr	s2, [pc, #444]	; 15200 <__mempcpy_chk@plt+0x3b70>
   15040:	vldr	s0, [r7, #8]
   15044:	vcmpe.f32	s0, s2
   15048:	vmrs	APSR_nzcv, fpscr
   1504c:	ble	150b8 <__mempcpy_chk@plt+0x3a28>
   15050:	vldr	s4, [pc, #428]	; 15204 <__mempcpy_chk@plt+0x3b74>
   15054:	vcmpe.f32	s0, s4
   15058:	vmrs	APSR_nzcv, fpscr
   1505c:	bpl	150b8 <__mempcpy_chk@plt+0x3a28>
   15060:	vldr	s4, [pc, #416]	; 15208 <__mempcpy_chk@plt+0x3b78>
   15064:	vldr	s6, [r7, #12]
   15068:	vcmpe.f32	s6, s4
   1506c:	vmrs	APSR_nzcv, fpscr
   15070:	ble	150b8 <__mempcpy_chk@plt+0x3a28>
   15074:	vldr	s4, [r7]
   15078:	vcmpe.f32	s4, #0.0
   1507c:	vmrs	APSR_nzcv, fpscr
   15080:	blt	150b8 <__mempcpy_chk@plt+0x3a28>
   15084:	vadd.f32	s2, s4, s2
   15088:	vcmpe.f32	s2, s0
   1508c:	vmrs	APSR_nzcv, fpscr
   15090:	bpl	150b8 <__mempcpy_chk@plt+0x3a28>
   15094:	vldr	s0, [r7, #4]
   15098:	vmov.f32	s4, #112	; 0x3f800000  1.0
   1509c:	vcmpe.f32	s0, s4
   150a0:	vmrs	APSR_nzcv, fpscr
   150a4:	bhi	150b8 <__mempcpy_chk@plt+0x3a28>
   150a8:	vcmpe.f32	s2, s0
   150ac:	mov	r0, r7
   150b0:	vmrs	APSR_nzcv, fpscr
   150b4:	bmi	150e0 <__mempcpy_chk@plt+0x3a50>
   150b8:	movw	r0, #46552	; 0xb5d8
   150bc:	movt	r0, #1
   150c0:	str	r0, [r4, #20]
   150c4:	mov	r0, r4
   150c8:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   150cc:	mov	r0, r8
   150d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   150d4:	movw	r0, #46552	; 0xb5d8
   150d8:	movt	r0, #1
   150dc:	str	r0, [r4, #20]
   150e0:	ldrb	r1, [r0, #16]
   150e4:	cmp	r1, #0
   150e8:	bne	15114 <__mempcpy_chk@plt+0x3a84>
   150ec:	vldr	s0, [r0, #8]
   150f0:	vldr	s4, [pc, #276]	; 1520c <__mempcpy_chk@plt+0x3b7c>
   150f4:	vmov	s2, r6
   150f8:	vcvt.f32.u32	s2, s2
   150fc:	vdiv.f32	s2, s2, s0
   15100:	vcmpe.f32	s2, s4
   15104:	vcvt.u32.f32	s0, s2
   15108:	vmrs	APSR_nzcv, fpscr
   1510c:	bge	15194 <__mempcpy_chk@plt+0x3b04>
   15110:	vmov	r6, s0
   15114:	cmp	r6, #10
   15118:	movls	r6, #10
   1511c:	orr	r0, r6, #1
   15120:	cmn	r0, #1
   15124:	beq	15194 <__mempcpy_chk@plt+0x3b04>
   15128:	ldr	r6, [fp, #8]
   1512c:	mov	r1, #3
   15130:	cmp	r0, #10
   15134:	bcc	1516c <__mempcpy_chk@plt+0x3adc>
   15138:	mov	r1, #3
   1513c:	mov	r3, #9
   15140:	mov	r2, #12
   15144:	udiv	r7, r0, r1
   15148:	mls	r7, r7, r1, r0
   1514c:	cmp	r7, #0
   15150:	beq	1516c <__mempcpy_chk@plt+0x3adc>
   15154:	add	r3, r3, r2
   15158:	add	r2, r2, #8
   1515c:	add	r1, r1, #2
   15160:	add	r3, r3, #4
   15164:	cmp	r3, r0
   15168:	bcc	15144 <__mempcpy_chk@plt+0x3ab4>
   1516c:	udiv	r2, r0, r1
   15170:	mls	r1, r2, r1, r0
   15174:	cmp	r1, #0
   15178:	bne	1518c <__mempcpy_chk@plt+0x3afc>
   1517c:	add	r0, r0, #2
   15180:	cmn	r0, #1
   15184:	bne	1512c <__mempcpy_chk@plt+0x3a9c>
   15188:	b	15194 <__mempcpy_chk@plt+0x3b04>
   1518c:	cmp	r0, #536870912	; 0x20000000
   15190:	bcc	151ac <__mempcpy_chk@plt+0x3b1c>
   15194:	mov	r0, #0
   15198:	str	r0, [r4, #8]
   1519c:	mov	r0, r4
   151a0:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   151a4:	mov	r0, r8
   151a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   151ac:	cmp	r0, #0
   151b0:	str	r0, [r4, #8]
   151b4:	beq	1519c <__mempcpy_chk@plt+0x3b0c>
   151b8:	mov	r1, #8
   151bc:	bl	196e0 <__mempcpy_chk@plt+0x8050>
   151c0:	cmp	r0, #0
   151c4:	str	r0, [r4]
   151c8:	beq	1519c <__mempcpy_chk@plt+0x3b0c>
   151cc:	mov	r1, #0
   151d0:	mov	r8, r4
   151d4:	str	r1, [r4, #12]
   151d8:	str	r1, [r4, #16]
   151dc:	str	r5, [r4, #24]
   151e0:	str	r9, [r4, #28]
   151e4:	str	r6, [r4, #32]
   151e8:	str	r1, [r4, #36]	; 0x24
   151ec:	ldr	r1, [r4, #8]
   151f0:	add	r0, r0, r1, lsl #3
   151f4:	str	r0, [r4, #4]
   151f8:	mov	r0, r8
   151fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15200:	stclcc	12, cr12, [ip, #820]	; 0x334
   15204:	svccc	0x00666666
   15208:	svccc	0x008ccccd
   1520c:	svcmi	0x00800000
   15210:	ror	r2, r0, #3
   15214:	udiv	r2, r2, r1
   15218:	mul	r1, r2, r1
   1521c:	rsb	r0, r1, r0, ror #3
   15220:	bx	lr
   15224:	sub	r0, r0, r1
   15228:	clz	r0, r0
   1522c:	lsr	r0, r0, #5
   15230:	bx	lr
   15234:	push	{r4, r5, r6, r7, fp, lr}
   15238:	add	fp, sp, #16
   1523c:	mov	r4, r0
   15240:	ldr	r5, [r0]
   15244:	ldr	r0, [r0, #4]
   15248:	cmp	r5, r0
   1524c:	bcs	152e4 <__mempcpy_chk@plt+0x3c54>
   15250:	mov	r6, #0
   15254:	ldr	r1, [r5]
   15258:	cmp	r1, #0
   1525c:	beq	152d8 <__mempcpy_chk@plt+0x3c48>
   15260:	ldr	r1, [r4, #32]
   15264:	ldr	r7, [r5, #4]
   15268:	cmp	r1, #0
   1526c:	mov	r0, r1
   15270:	movwne	r0, #1
   15274:	cmp	r7, #0
   15278:	beq	152bc <__mempcpy_chk@plt+0x3c2c>
   1527c:	tst	r0, #1
   15280:	beq	15290 <__mempcpy_chk@plt+0x3c00>
   15284:	ldr	r0, [r7]
   15288:	blx	r1
   1528c:	ldr	r1, [r4, #32]
   15290:	str	r6, [r7]
   15294:	cmp	r1, #0
   15298:	ldr	r0, [r4, #36]	; 0x24
   1529c:	ldr	r2, [r7, #4]
   152a0:	str	r0, [r7, #4]
   152a4:	mov	r0, r1
   152a8:	str	r7, [r4, #36]	; 0x24
   152ac:	mov	r7, r2
   152b0:	movwne	r0, #1
   152b4:	cmp	r2, #0
   152b8:	bne	1527c <__mempcpy_chk@plt+0x3bec>
   152bc:	cmp	r0, #0
   152c0:	beq	152cc <__mempcpy_chk@plt+0x3c3c>
   152c4:	ldr	r0, [r5]
   152c8:	blx	r1
   152cc:	str	r6, [r5]
   152d0:	str	r6, [r5, #4]
   152d4:	ldr	r0, [r4, #4]
   152d8:	add	r5, r5, #8
   152dc:	cmp	r5, r0
   152e0:	bcc	15254 <__mempcpy_chk@plt+0x3bc4>
   152e4:	mov	r0, #0
   152e8:	str	r0, [r4, #12]
   152ec:	str	r0, [r4, #16]
   152f0:	pop	{r4, r5, r6, r7, fp, pc}
   152f4:	push	{r4, r5, r6, sl, fp, lr}
   152f8:	add	fp, sp, #16
   152fc:	mov	r4, r0
   15300:	ldr	r0, [r0, #32]
   15304:	cmp	r0, #0
   15308:	ldrne	r0, [r4, #16]
   1530c:	cmpne	r0, #0
   15310:	beq	15378 <__mempcpy_chk@plt+0x3ce8>
   15314:	ldr	r5, [r4]
   15318:	ldr	r1, [r4, #4]
   1531c:	cmp	r5, r1
   15320:	bcc	15334 <__mempcpy_chk@plt+0x3ca4>
   15324:	b	15378 <__mempcpy_chk@plt+0x3ce8>
   15328:	add	r5, r5, #8
   1532c:	cmp	r5, r1
   15330:	bcs	15378 <__mempcpy_chk@plt+0x3ce8>
   15334:	ldr	r0, [r5]
   15338:	cmp	r0, #0
   1533c:	cmpne	r5, #0
   15340:	beq	15328 <__mempcpy_chk@plt+0x3c98>
   15344:	ldr	r1, [r4, #32]
   15348:	blx	r1
   1534c:	ldr	r6, [r5, #4]
   15350:	cmp	r6, #0
   15354:	beq	15370 <__mempcpy_chk@plt+0x3ce0>
   15358:	ldr	r1, [r4, #32]
   1535c:	ldr	r0, [r6]
   15360:	blx	r1
   15364:	ldr	r6, [r6, #4]
   15368:	cmp	r6, #0
   1536c:	bne	15358 <__mempcpy_chk@plt+0x3cc8>
   15370:	ldr	r1, [r4, #4]
   15374:	b	15328 <__mempcpy_chk@plt+0x3c98>
   15378:	ldr	r5, [r4]
   1537c:	ldr	r1, [r4, #4]
   15380:	cmp	r5, r1
   15384:	bcc	15398 <__mempcpy_chk@plt+0x3d08>
   15388:	b	153c0 <__mempcpy_chk@plt+0x3d30>
   1538c:	add	r5, r5, #8
   15390:	cmp	r5, r1
   15394:	bcs	153c0 <__mempcpy_chk@plt+0x3d30>
   15398:	ldr	r0, [r5, #4]
   1539c:	cmp	r0, #0
   153a0:	beq	1538c <__mempcpy_chk@plt+0x3cfc>
   153a4:	ldr	r6, [r0, #4]
   153a8:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   153ac:	cmp	r6, #0
   153b0:	mov	r0, r6
   153b4:	bne	153a4 <__mempcpy_chk@plt+0x3d14>
   153b8:	ldr	r1, [r4, #4]
   153bc:	b	1538c <__mempcpy_chk@plt+0x3cfc>
   153c0:	ldr	r0, [r4, #36]	; 0x24
   153c4:	cmp	r0, #0
   153c8:	beq	153e0 <__mempcpy_chk@plt+0x3d50>
   153cc:	ldr	r5, [r0, #4]
   153d0:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   153d4:	cmp	r5, #0
   153d8:	mov	r0, r5
   153dc:	bne	153cc <__mempcpy_chk@plt+0x3d3c>
   153e0:	ldr	r0, [r4]
   153e4:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   153e8:	mov	r0, r4
   153ec:	pop	{r4, r5, r6, sl, fp, lr}
   153f0:	b	14a6c <__mempcpy_chk@plt+0x33dc>
   153f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153f8:	add	fp, sp, #28
   153fc:	sub	sp, sp, #44	; 0x2c
   15400:	mov	r7, r0
   15404:	mov	r4, r0
   15408:	ldr	r0, [r7, #20]!
   1540c:	ldrb	r2, [r0, #16]
   15410:	cmp	r2, #0
   15414:	bne	15444 <__mempcpy_chk@plt+0x3db4>
   15418:	vldr	s0, [r0, #8]
   1541c:	vldr	s4, [pc, #576]	; 15664 <__mempcpy_chk@plt+0x3fd4>
   15420:	vmov	s2, r1
   15424:	mov	r5, #0
   15428:	vcvt.f32.u32	s2, s2
   1542c:	vdiv.f32	s2, s2, s0
   15430:	vcmpe.f32	s2, s4
   15434:	vcvt.u32.f32	s0, s2
   15438:	vmrs	APSR_nzcv, fpscr
   1543c:	bge	15568 <__mempcpy_chk@plt+0x3ed8>
   15440:	vmov	r1, s0
   15444:	cmp	r1, #10
   15448:	mov	r5, #0
   1544c:	movls	r1, #10
   15450:	orr	r6, r1, #1
   15454:	cmn	r6, #1
   15458:	bne	1546c <__mempcpy_chk@plt+0x3ddc>
   1545c:	b	15568 <__mempcpy_chk@plt+0x3ed8>
   15460:	add	r6, r6, #2
   15464:	cmn	r6, #1
   15468:	beq	15568 <__mempcpy_chk@plt+0x3ed8>
   1546c:	mov	r0, #3
   15470:	cmp	r6, #10
   15474:	bcc	154ac <__mempcpy_chk@plt+0x3e1c>
   15478:	mov	r0, #3
   1547c:	mov	r2, #9
   15480:	mov	r1, #12
   15484:	udiv	r3, r6, r0
   15488:	mls	r3, r3, r0, r6
   1548c:	cmp	r3, #0
   15490:	beq	154ac <__mempcpy_chk@plt+0x3e1c>
   15494:	add	r2, r2, r1
   15498:	add	r1, r1, #8
   1549c:	add	r0, r0, #2
   154a0:	add	r2, r2, #4
   154a4:	cmp	r2, r6
   154a8:	bcc	15484 <__mempcpy_chk@plt+0x3df4>
   154ac:	udiv	r1, r6, r0
   154b0:	mls	r0, r1, r0, r6
   154b4:	cmp	r0, #0
   154b8:	beq	15460 <__mempcpy_chk@plt+0x3dd0>
   154bc:	sub	r0, r6, #1
   154c0:	cmn	r0, #-536870910	; 0xe0000002
   154c4:	bhi	15568 <__mempcpy_chk@plt+0x3ed8>
   154c8:	ldr	r0, [r4, #8]
   154cc:	cmp	r6, r0
   154d0:	bne	154e4 <__mempcpy_chk@plt+0x3e54>
   154d4:	mov	r5, #1
   154d8:	mov	r0, r5
   154dc:	sub	sp, fp, #28
   154e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154e4:	mov	r0, r6
   154e8:	mov	r1, #8
   154ec:	bl	196e0 <__mempcpy_chk@plt+0x8050>
   154f0:	cmp	r0, #0
   154f4:	str	r0, [sp, #4]
   154f8:	beq	15568 <__mempcpy_chk@plt+0x3ed8>
   154fc:	mov	r1, #0
   15500:	add	r0, r0, r6, lsl #3
   15504:	str	r6, [sp, #12]
   15508:	add	r5, sp, #4
   1550c:	mov	sl, r4
   15510:	mov	r2, #0
   15514:	str	r1, [sp, #16]
   15518:	str	r1, [sp, #20]
   1551c:	str	r0, [sp, #8]
   15520:	add	r0, r5, #20
   15524:	mov	r1, r4
   15528:	vld1.32	{d16-d17}, [r7]
   1552c:	vst1.32	{d16-d17}, [r0]
   15530:	ldr	r0, [sl, #36]!	; 0x24
   15534:	str	r0, [sp, #40]	; 0x28
   15538:	mov	r0, r5
   1553c:	bl	15668 <__mempcpy_chk@plt+0x3fd8>
   15540:	cmp	r0, #0
   15544:	beq	15574 <__mempcpy_chk@plt+0x3ee4>
   15548:	ldr	r0, [r4]
   1554c:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   15550:	mov	r0, #36	; 0x24
   15554:	vld1.32	{d16-d17}, [r5], r0
   15558:	vst1.32	{d16-d17}, [r4], r0
   1555c:	ldr	r0, [r5]
   15560:	mov	r5, #1
   15564:	str	r0, [r4]
   15568:	mov	r0, r5
   1556c:	sub	sp, fp, #28
   15570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15574:	ldr	r0, [sp, #40]	; 0x28
   15578:	str	r0, [sl]
   1557c:	ldr	r0, [sp, #8]
   15580:	ldr	r8, [sp, #4]
   15584:	cmp	r8, r0
   15588:	str	r0, [sp]
   1558c:	bcs	15630 <__mempcpy_chk@plt+0x3fa0>
   15590:	mov	r9, #0
   15594:	ldr	r0, [r8]
   15598:	cmp	r0, #0
   1559c:	beq	15620 <__mempcpy_chk@plt+0x3f90>
   155a0:	ldr	r6, [r8, #4]
   155a4:	cmp	r6, #0
   155a8:	beq	1561c <__mempcpy_chk@plt+0x3f8c>
   155ac:	ldr	r1, [r4, #8]
   155b0:	ldr	r5, [r6]
   155b4:	ldr	r2, [r4, #24]
   155b8:	mov	r0, r5
   155bc:	blx	r2
   155c0:	ldr	r1, [r4, #8]
   155c4:	cmp	r0, r1
   155c8:	bcs	15660 <__mempcpy_chk@plt+0x3fd0>
   155cc:	ldr	r3, [r4]
   155d0:	ldr	r2, [r6, #4]
   155d4:	ldr	r7, [r3, r0, lsl #3]
   155d8:	cmp	r7, #0
   155dc:	beq	155ec <__mempcpy_chk@plt+0x3f5c>
   155e0:	add	r0, r3, r0, lsl #3
   155e4:	add	r0, r0, #4
   155e8:	b	15604 <__mempcpy_chk@plt+0x3f74>
   155ec:	str	r5, [r3, r0, lsl #3]
   155f0:	ldr	r0, [r4, #12]
   155f4:	add	r0, r0, #1
   155f8:	str	r0, [r4, #12]
   155fc:	mov	r0, sl
   15600:	str	r9, [r6]
   15604:	ldr	r3, [r0]
   15608:	cmp	r2, #0
   1560c:	str	r3, [r6, #4]
   15610:	str	r6, [r0]
   15614:	mov	r6, r2
   15618:	bne	155b0 <__mempcpy_chk@plt+0x3f20>
   1561c:	str	r9, [r8, #4]
   15620:	ldr	r0, [sp]
   15624:	add	r8, r8, #8
   15628:	cmp	r8, r0
   1562c:	bcc	15594 <__mempcpy_chk@plt+0x3f04>
   15630:	add	r1, sp, #4
   15634:	mov	r0, r4
   15638:	mov	r2, #0
   1563c:	mov	r5, #0
   15640:	bl	15668 <__mempcpy_chk@plt+0x3fd8>
   15644:	cmp	r0, #0
   15648:	beq	15660 <__mempcpy_chk@plt+0x3fd0>
   1564c:	ldr	r0, [sp, #4]
   15650:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   15654:	mov	r0, r5
   15658:	sub	sp, fp, #28
   1565c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15660:	bl	11654 <abort@plt>
   15664:	svcmi	0x00800000
   15668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1566c:	add	fp, sp, #28
   15670:	sub	sp, sp, #4
   15674:	ldr	r8, [r1]
   15678:	ldr	r3, [r1, #4]
   1567c:	mov	r6, r0
   15680:	mov	r0, #1
   15684:	str	r1, [sp]
   15688:	cmp	r8, r3
   1568c:	bcs	1588c <__mempcpy_chk@plt+0x41fc>
   15690:	add	r9, r6, #36	; 0x24
   15694:	cmp	r2, #0
   15698:	beq	15744 <__mempcpy_chk@plt+0x40b4>
   1569c:	mov	sl, #0
   156a0:	ldr	r1, [r8]
   156a4:	cmp	r1, #0
   156a8:	beq	15734 <__mempcpy_chk@plt+0x40a4>
   156ac:	ldr	r7, [r8, #4]
   156b0:	cmp	r7, #0
   156b4:	beq	15730 <__mempcpy_chk@plt+0x40a0>
   156b8:	ldr	r1, [r6, #8]
   156bc:	ldr	r4, [r7]
   156c0:	ldr	r2, [r6, #24]
   156c4:	mov	r0, r4
   156c8:	blx	r2
   156cc:	ldr	r1, [r6, #8]
   156d0:	cmp	r0, r1
   156d4:	bcs	158a0 <__mempcpy_chk@plt+0x4210>
   156d8:	ldr	r3, [r6]
   156dc:	ldr	r2, [r7, #4]
   156e0:	ldr	r5, [r3, r0, lsl #3]
   156e4:	cmp	r5, #0
   156e8:	beq	156f8 <__mempcpy_chk@plt+0x4068>
   156ec:	add	r0, r3, r0, lsl #3
   156f0:	add	r0, r0, #4
   156f4:	b	15710 <__mempcpy_chk@plt+0x4080>
   156f8:	str	r4, [r3, r0, lsl #3]
   156fc:	ldr	r0, [r6, #12]
   15700:	add	r0, r0, #1
   15704:	str	r0, [r6, #12]
   15708:	mov	r0, r9
   1570c:	str	sl, [r7]
   15710:	ldr	r3, [r0]
   15714:	cmp	r2, #0
   15718:	str	r3, [r7, #4]
   1571c:	str	r7, [r0]
   15720:	mov	r7, r2
   15724:	bne	156bc <__mempcpy_chk@plt+0x402c>
   15728:	ldr	r0, [sp]
   1572c:	ldr	r3, [r0, #4]
   15730:	str	sl, [r8, #4]
   15734:	add	r8, r8, #8
   15738:	cmp	r8, r3
   1573c:	bcc	156a0 <__mempcpy_chk@plt+0x4010>
   15740:	b	15888 <__mempcpy_chk@plt+0x41f8>
   15744:	mov	r5, #0
   15748:	ldr	sl, [r8]
   1574c:	cmp	sl, #0
   15750:	beq	1587c <__mempcpy_chk@plt+0x41ec>
   15754:	ldr	r7, [r8, #4]
   15758:	ldr	r1, [r6, #8]
   1575c:	cmp	r7, #0
   15760:	beq	157dc <__mempcpy_chk@plt+0x414c>
   15764:	mov	sl, #0
   15768:	ldr	r4, [r7]
   1576c:	ldr	r2, [r6, #24]
   15770:	mov	r0, r4
   15774:	blx	r2
   15778:	ldr	r1, [r6, #8]
   1577c:	cmp	r0, r1
   15780:	bcs	158a0 <__mempcpy_chk@plt+0x4210>
   15784:	ldr	r3, [r6]
   15788:	ldr	r2, [r7, #4]
   1578c:	ldr	r5, [r3, r0, lsl #3]
   15790:	cmp	r5, #0
   15794:	beq	157a4 <__mempcpy_chk@plt+0x4114>
   15798:	add	r0, r3, r0, lsl #3
   1579c:	add	r0, r0, #4
   157a0:	b	157bc <__mempcpy_chk@plt+0x412c>
   157a4:	str	r4, [r3, r0, lsl #3]
   157a8:	ldr	r0, [r6, #12]
   157ac:	add	r0, r0, #1
   157b0:	str	r0, [r6, #12]
   157b4:	mov	r0, r9
   157b8:	str	sl, [r7]
   157bc:	ldr	r3, [r0]
   157c0:	cmp	r2, #0
   157c4:	str	r3, [r7, #4]
   157c8:	str	r7, [r0]
   157cc:	mov	r7, r2
   157d0:	bne	15768 <__mempcpy_chk@plt+0x40d8>
   157d4:	ldr	sl, [r8]
   157d8:	mov	r5, #0
   157dc:	str	r5, [r8, #4]
   157e0:	mov	r0, sl
   157e4:	ldr	r2, [r6, #24]
   157e8:	blx	r2
   157ec:	mov	r4, r0
   157f0:	ldr	r0, [r6, #8]
   157f4:	cmp	r4, r0
   157f8:	bcs	158a0 <__mempcpy_chk@plt+0x4210>
   157fc:	ldr	r7, [r6]
   15800:	ldr	r0, [r7, r4, lsl #3]
   15804:	cmp	r0, #0
   15808:	beq	15828 <__mempcpy_chk@plt+0x4198>
   1580c:	ldr	r0, [r9]
   15810:	cmp	r0, #0
   15814:	beq	1583c <__mempcpy_chk@plt+0x41ac>
   15818:	mov	r1, r0
   1581c:	ldr	r2, [r1, #4]!
   15820:	str	r2, [r9]
   15824:	b	15850 <__mempcpy_chk@plt+0x41c0>
   15828:	str	sl, [r7, r4, lsl #3]
   1582c:	ldr	r0, [r6, #12]
   15830:	add	r0, r0, #1
   15834:	str	r0, [r6, #12]
   15838:	b	15864 <__mempcpy_chk@plt+0x41d4>
   1583c:	mov	r0, #8
   15840:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   15844:	cmp	r0, #0
   15848:	beq	15894 <__mempcpy_chk@plt+0x4204>
   1584c:	add	r1, r0, #4
   15850:	str	sl, [r0]
   15854:	add	r2, r7, r4, lsl #3
   15858:	ldr	r3, [r2, #4]
   1585c:	str	r3, [r1]
   15860:	str	r0, [r2, #4]
   15864:	ldr	r0, [sp]
   15868:	str	r5, [r8]
   1586c:	ldr	r1, [r0, #12]
   15870:	ldr	r3, [r0, #4]
   15874:	sub	r1, r1, #1
   15878:	str	r1, [r0, #12]
   1587c:	add	r8, r8, #8
   15880:	cmp	r8, r3
   15884:	bcc	15748 <__mempcpy_chk@plt+0x40b8>
   15888:	mov	r0, #1
   1588c:	sub	sp, fp, #28
   15890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15894:	mov	r0, #0
   15898:	sub	sp, fp, #28
   1589c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158a0:	bl	11654 <abort@plt>
   158a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158a8:	add	fp, sp, #28
   158ac:	sub	sp, sp, #4
   158b0:	cmp	r1, #0
   158b4:	beq	15bf8 <__mempcpy_chk@plt+0x4568>
   158b8:	mov	r8, r2
   158bc:	mov	sl, r1
   158c0:	ldr	r1, [r0, #8]
   158c4:	ldr	r2, [r0, #24]
   158c8:	mov	r4, r0
   158cc:	mov	r0, sl
   158d0:	blx	r2
   158d4:	mov	r7, r0
   158d8:	ldr	r0, [r4, #8]
   158dc:	cmp	r7, r0
   158e0:	bcs	15bf8 <__mempcpy_chk@plt+0x4568>
   158e4:	ldr	r5, [r4]
   158e8:	mov	r9, r5
   158ec:	ldr	r1, [r9, r7, lsl #3]!
   158f0:	cmp	r1, #0
   158f4:	beq	15988 <__mempcpy_chk@plt+0x42f8>
   158f8:	cmp	r1, sl
   158fc:	beq	15928 <__mempcpy_chk@plt+0x4298>
   15900:	ldr	r2, [r4, #28]
   15904:	mov	r0, sl
   15908:	blx	r2
   1590c:	cmp	r0, #0
   15910:	mov	r6, r9
   15914:	beq	15944 <__mempcpy_chk@plt+0x42b4>
   15918:	ldr	r0, [r6]
   1591c:	cmp	r0, #0
   15920:	bne	1592c <__mempcpy_chk@plt+0x429c>
   15924:	b	15988 <__mempcpy_chk@plt+0x42f8>
   15928:	mov	r0, sl
   1592c:	cmp	r8, #0
   15930:	mov	r7, #0
   15934:	strne	r0, [r8]
   15938:	mov	r0, r7
   1593c:	sub	sp, fp, #28
   15940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15944:	add	r6, r5, r7, lsl #3
   15948:	ldr	r0, [r6, #4]!
   1594c:	cmp	r0, #0
   15950:	beq	15988 <__mempcpy_chk@plt+0x42f8>
   15954:	ldr	r1, [r0]
   15958:	cmp	r1, sl
   1595c:	beq	1597c <__mempcpy_chk@plt+0x42ec>
   15960:	ldr	r2, [r4, #28]
   15964:	mov	r0, sl
   15968:	blx	r2
   1596c:	ldr	r6, [r6]
   15970:	cmp	r0, #0
   15974:	beq	15948 <__mempcpy_chk@plt+0x42b8>
   15978:	b	15918 <__mempcpy_chk@plt+0x4288>
   1597c:	mov	r0, sl
   15980:	cmp	r0, #0
   15984:	bne	1592c <__mempcpy_chk@plt+0x429c>
   15988:	vldr	s0, [r4, #8]
   1598c:	vldr	s2, [r4, #12]
   15990:	ldr	r0, [r4, #20]
   15994:	vcvt.f32.u32	s0, s0
   15998:	vcvt.f32.u32	s4, s2
   1599c:	vldr	s2, [r0, #8]
   159a0:	vmul.f32	s6, s2, s0
   159a4:	vcmpe.f32	s6, s4
   159a8:	vmrs	APSR_nzcv, fpscr
   159ac:	bpl	15b10 <__mempcpy_chk@plt+0x4480>
   159b0:	movw	r1, #46552	; 0xb5d8
   159b4:	movt	r1, #1
   159b8:	cmp	r0, r1
   159bc:	beq	15a58 <__mempcpy_chk@plt+0x43c8>
   159c0:	vldr	s6, [pc, #564]	; 15bfc <__mempcpy_chk@plt+0x456c>
   159c4:	vcmpe.f32	s2, s6
   159c8:	vmrs	APSR_nzcv, fpscr
   159cc:	ble	15a34 <__mempcpy_chk@plt+0x43a4>
   159d0:	vldr	s8, [pc, #552]	; 15c00 <__mempcpy_chk@plt+0x4570>
   159d4:	vcmpe.f32	s2, s8
   159d8:	vmrs	APSR_nzcv, fpscr
   159dc:	bpl	15a34 <__mempcpy_chk@plt+0x43a4>
   159e0:	vldr	s8, [pc, #540]	; 15c04 <__mempcpy_chk@plt+0x4574>
   159e4:	vldr	s10, [r0, #12]
   159e8:	vcmpe.f32	s10, s8
   159ec:	vmrs	APSR_nzcv, fpscr
   159f0:	ble	15a34 <__mempcpy_chk@plt+0x43a4>
   159f4:	vldr	s8, [r0]
   159f8:	vcmpe.f32	s8, #0.0
   159fc:	vmrs	APSR_nzcv, fpscr
   15a00:	blt	15a34 <__mempcpy_chk@plt+0x43a4>
   15a04:	vadd.f32	s6, s8, s6
   15a08:	vcmpe.f32	s6, s2
   15a0c:	vmrs	APSR_nzcv, fpscr
   15a10:	bpl	15a34 <__mempcpy_chk@plt+0x43a4>
   15a14:	vldr	s8, [r0, #4]
   15a18:	vmov.f32	s10, #112	; 0x3f800000  1.0
   15a1c:	vcmpe.f32	s8, s10
   15a20:	vmrs	APSR_nzcv, fpscr
   15a24:	bhi	15a34 <__mempcpy_chk@plt+0x43a4>
   15a28:	vcmpe.f32	s6, s8
   15a2c:	vmrs	APSR_nzcv, fpscr
   15a30:	bmi	15a44 <__mempcpy_chk@plt+0x43b4>
   15a34:	vldr	s2, [pc, #460]	; 15c08 <__mempcpy_chk@plt+0x4578>
   15a38:	movw	r0, #46552	; 0xb5d8
   15a3c:	movt	r0, #1
   15a40:	str	r0, [r4, #20]
   15a44:	vmul.f32	s6, s2, s0
   15a48:	vcmpe.f32	s6, s4
   15a4c:	vmrs	APSR_nzcv, fpscr
   15a50:	bmi	15a6c <__mempcpy_chk@plt+0x43dc>
   15a54:	b	15b10 <__mempcpy_chk@plt+0x4480>
   15a58:	mov	r0, r1
   15a5c:	vmul.f32	s6, s2, s0
   15a60:	vcmpe.f32	s6, s4
   15a64:	vmrs	APSR_nzcv, fpscr
   15a68:	bpl	15b10 <__mempcpy_chk@plt+0x4480>
   15a6c:	vldr	s4, [r0, #12]
   15a70:	ldrb	r0, [r0, #16]
   15a74:	mvn	r7, #0
   15a78:	vmul.f32	s0, s4, s0
   15a7c:	vldr	s4, [pc, #392]	; 15c0c <__mempcpy_chk@plt+0x457c>
   15a80:	cmp	r0, #0
   15a84:	vmul.f32	s2, s2, s0
   15a88:	vseleq.f32	s0, s2, s0
   15a8c:	vcmpe.f32	s0, s4
   15a90:	vmrs	APSR_nzcv, fpscr
   15a94:	bge	15b8c <__mempcpy_chk@plt+0x44fc>
   15a98:	vcvt.u32.f32	s0, s0
   15a9c:	mov	r0, r4
   15aa0:	vmov	r1, s0
   15aa4:	bl	153f4 <__mempcpy_chk@plt+0x3d64>
   15aa8:	cmp	r0, #0
   15aac:	beq	15b8c <__mempcpy_chk@plt+0x44fc>
   15ab0:	ldr	r1, [r4, #8]
   15ab4:	ldr	r2, [r4, #24]
   15ab8:	mov	r0, sl
   15abc:	blx	r2
   15ac0:	mov	r7, r0
   15ac4:	ldr	r0, [r4, #8]
   15ac8:	cmp	r7, r0
   15acc:	bcs	15bf8 <__mempcpy_chk@plt+0x4568>
   15ad0:	ldr	r5, [r4]
   15ad4:	mov	r9, r5
   15ad8:	ldr	r1, [r9, r7, lsl #3]!
   15adc:	cmp	r1, #0
   15ae0:	beq	15b38 <__mempcpy_chk@plt+0x44a8>
   15ae4:	cmp	r1, sl
   15ae8:	mov	r0, sl
   15aec:	beq	15b08 <__mempcpy_chk@plt+0x4478>
   15af0:	ldr	r2, [r4, #28]
   15af4:	mov	r0, sl
   15af8:	blx	r2
   15afc:	cmp	r0, #0
   15b00:	beq	15ba8 <__mempcpy_chk@plt+0x4518>
   15b04:	ldr	r0, [r9]
   15b08:	cmp	r0, #0
   15b0c:	bne	15bf8 <__mempcpy_chk@plt+0x4568>
   15b10:	ldr	r0, [r9]
   15b14:	cmp	r0, #0
   15b18:	beq	15b38 <__mempcpy_chk@plt+0x44a8>
   15b1c:	ldr	r0, [r4, #36]	; 0x24
   15b20:	cmp	r0, #0
   15b24:	beq	15b58 <__mempcpy_chk@plt+0x44c8>
   15b28:	mov	r1, r0
   15b2c:	ldr	r2, [r1, #4]!
   15b30:	str	r2, [r4, #36]	; 0x24
   15b34:	b	15b6c <__mempcpy_chk@plt+0x44dc>
   15b38:	str	sl, [r9]
   15b3c:	ldr	r0, [r4, #12]
   15b40:	ldr	r1, [r4, #16]
   15b44:	add	r0, r0, #1
   15b48:	add	r1, r1, #1
   15b4c:	str	r0, [r4, #12]
   15b50:	str	r1, [r4, #16]
   15b54:	b	15b88 <__mempcpy_chk@plt+0x44f8>
   15b58:	mov	r0, #8
   15b5c:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   15b60:	cmp	r0, #0
   15b64:	beq	15b98 <__mempcpy_chk@plt+0x4508>
   15b68:	add	r1, r0, #4
   15b6c:	str	sl, [r0]
   15b70:	ldr	r2, [r9, #4]
   15b74:	str	r2, [r1]
   15b78:	str	r0, [r9, #4]
   15b7c:	ldr	r0, [r4, #16]
   15b80:	add	r0, r0, #1
   15b84:	str	r0, [r4, #16]
   15b88:	mov	r7, #1
   15b8c:	mov	r0, r7
   15b90:	sub	sp, fp, #28
   15b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b98:	mvn	r7, #0
   15b9c:	mov	r0, r7
   15ba0:	sub	sp, fp, #28
   15ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ba8:	add	r6, r5, r7, lsl #3
   15bac:	ldr	r0, [r6, #4]!
   15bb0:	cmp	r0, #0
   15bb4:	beq	15b10 <__mempcpy_chk@plt+0x4480>
   15bb8:	ldr	r1, [r0]
   15bbc:	cmp	r1, sl
   15bc0:	beq	15bec <__mempcpy_chk@plt+0x455c>
   15bc4:	ldr	r2, [r4, #28]
   15bc8:	mov	r0, sl
   15bcc:	blx	r2
   15bd0:	ldr	r6, [r6]
   15bd4:	cmp	r0, #0
   15bd8:	beq	15bac <__mempcpy_chk@plt+0x451c>
   15bdc:	ldr	r0, [r6]
   15be0:	cmp	r0, #0
   15be4:	beq	15b10 <__mempcpy_chk@plt+0x4480>
   15be8:	b	15bf8 <__mempcpy_chk@plt+0x4568>
   15bec:	mov	r0, sl
   15bf0:	cmp	r0, #0
   15bf4:	beq	15b10 <__mempcpy_chk@plt+0x4480>
   15bf8:	bl	11654 <abort@plt>
   15bfc:	stclcc	12, cr12, [ip, #820]	; 0x334
   15c00:	svccc	0x00666666
   15c04:	svccc	0x008ccccd
   15c08:	svccc	0x004ccccd
   15c0c:	svcmi	0x00800000
   15c10:	push	{r4, sl, fp, lr}
   15c14:	add	fp, sp, #8
   15c18:	sub	sp, sp, #8
   15c1c:	add	r2, sp, #4
   15c20:	mov	r4, r1
   15c24:	bl	158a4 <__mempcpy_chk@plt+0x4214>
   15c28:	cmn	r0, #1
   15c2c:	beq	15c48 <__mempcpy_chk@plt+0x45b8>
   15c30:	ldr	r1, [sp, #4]
   15c34:	cmp	r0, #0
   15c38:	moveq	r4, r1
   15c3c:	mov	r0, r4
   15c40:	sub	sp, fp, #8
   15c44:	pop	{r4, sl, fp, pc}
   15c48:	mov	r4, #0
   15c4c:	mov	r0, r4
   15c50:	sub	sp, fp, #8
   15c54:	pop	{r4, sl, fp, pc}
   15c58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15c5c:	add	fp, sp, #24
   15c60:	mov	r9, r1
   15c64:	ldr	r1, [r0, #8]
   15c68:	ldr	r2, [r0, #24]
   15c6c:	mov	r5, r0
   15c70:	mov	r0, r9
   15c74:	blx	r2
   15c78:	mov	r7, r0
   15c7c:	ldr	r0, [r5, #8]
   15c80:	cmp	r7, r0
   15c84:	bcs	15ef4 <__mempcpy_chk@plt+0x4864>
   15c88:	ldr	r6, [r5]
   15c8c:	mov	r8, #0
   15c90:	mov	r4, r6
   15c94:	ldr	r1, [r4, r7, lsl #3]!
   15c98:	cmp	r1, #0
   15c9c:	beq	15d50 <__mempcpy_chk@plt+0x46c0>
   15ca0:	cmp	r1, r9
   15ca4:	beq	15cc0 <__mempcpy_chk@plt+0x4630>
   15ca8:	ldr	r2, [r5, #28]
   15cac:	mov	r0, r9
   15cb0:	blx	r2
   15cb4:	cmp	r0, #0
   15cb8:	beq	15cf8 <__mempcpy_chk@plt+0x4668>
   15cbc:	ldr	r9, [r4]
   15cc0:	add	r0, r6, r7, lsl #3
   15cc4:	ldr	r0, [r0, #4]
   15cc8:	cmp	r0, #0
   15ccc:	beq	15d40 <__mempcpy_chk@plt+0x46b0>
   15cd0:	ldm	r0, {r1, r2}
   15cd4:	stm	r4, {r1, r2}
   15cd8:	mov	r1, #0
   15cdc:	str	r1, [r0]
   15ce0:	ldr	r1, [r5, #36]	; 0x24
   15ce4:	str	r1, [r0, #4]
   15ce8:	str	r0, [r5, #36]	; 0x24
   15cec:	cmp	r9, #0
   15cf0:	bne	15d88 <__mempcpy_chk@plt+0x46f8>
   15cf4:	b	15d50 <__mempcpy_chk@plt+0x46c0>
   15cf8:	add	r7, r6, r7, lsl #3
   15cfc:	ldr	r0, [r7, #4]!
   15d00:	cmp	r0, #0
   15d04:	beq	15d50 <__mempcpy_chk@plt+0x46c0>
   15d08:	ldr	r1, [r0]
   15d0c:	cmp	r1, r9
   15d10:	beq	15d58 <__mempcpy_chk@plt+0x46c8>
   15d14:	ldr	r2, [r5, #28]
   15d18:	mov	r0, r9
   15d1c:	blx	r2
   15d20:	ldr	r1, [r7]
   15d24:	cmp	r0, #0
   15d28:	bne	15d60 <__mempcpy_chk@plt+0x46d0>
   15d2c:	ldr	r0, [r1, #4]!
   15d30:	cmp	r0, #0
   15d34:	mov	r7, r1
   15d38:	bne	15d08 <__mempcpy_chk@plt+0x4678>
   15d3c:	b	15d50 <__mempcpy_chk@plt+0x46c0>
   15d40:	mov	r0, #0
   15d44:	str	r0, [r4]
   15d48:	cmp	r9, #0
   15d4c:	bne	15d88 <__mempcpy_chk@plt+0x46f8>
   15d50:	mov	r0, r8
   15d54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15d58:	mov	r1, r0
   15d5c:	b	15d64 <__mempcpy_chk@plt+0x46d4>
   15d60:	ldr	r9, [r1]
   15d64:	ldr	r0, [r1, #4]
   15d68:	str	r0, [r7]
   15d6c:	mov	r0, #0
   15d70:	str	r0, [r1]
   15d74:	ldr	r0, [r5, #36]	; 0x24
   15d78:	str	r0, [r1, #4]
   15d7c:	str	r1, [r5, #36]	; 0x24
   15d80:	cmp	r9, #0
   15d84:	beq	15d50 <__mempcpy_chk@plt+0x46c0>
   15d88:	ldr	r0, [r5, #16]
   15d8c:	sub	r0, r0, #1
   15d90:	str	r0, [r5, #16]
   15d94:	ldr	r0, [r4]
   15d98:	cmp	r0, #0
   15d9c:	bne	15eb4 <__mempcpy_chk@plt+0x4824>
   15da0:	ldr	r0, [r5, #12]
   15da4:	vldr	s0, [r5, #8]
   15da8:	sub	r1, r0, #1
   15dac:	str	r1, [r5, #12]
   15db0:	vmov	s2, r1
   15db4:	ldr	r0, [r5, #20]
   15db8:	vcvt.f32.u32	s0, s0
   15dbc:	vcvt.f32.u32	s2, s2
   15dc0:	vldr	s4, [r0]
   15dc4:	vmul.f32	s6, s4, s0
   15dc8:	vcmpe.f32	s6, s2
   15dcc:	vmrs	APSR_nzcv, fpscr
   15dd0:	ble	15eb4 <__mempcpy_chk@plt+0x4824>
   15dd4:	movw	r1, #46552	; 0xb5d8
   15dd8:	movt	r1, #1
   15ddc:	cmp	r0, r1
   15de0:	beq	15e48 <__mempcpy_chk@plt+0x47b8>
   15de4:	vldr	s8, [pc, #268]	; 15ef8 <__mempcpy_chk@plt+0x4868>
   15de8:	vldr	s6, [r0, #8]
   15dec:	vcmpe.f32	s6, s8
   15df0:	vmrs	APSR_nzcv, fpscr
   15df4:	ble	15e24 <__mempcpy_chk@plt+0x4794>
   15df8:	vldr	s10, [pc, #252]	; 15efc <__mempcpy_chk@plt+0x486c>
   15dfc:	vcmpe.f32	s6, s10
   15e00:	vmrs	APSR_nzcv, fpscr
   15e04:	bpl	15e24 <__mempcpy_chk@plt+0x4794>
   15e08:	vcmpe.f32	s4, #0.0
   15e0c:	vmrs	APSR_nzcv, fpscr
   15e10:	vldrge	s10, [r0, #12]
   15e14:	vldrge	s12, [pc, #228]	; 15f00 <__mempcpy_chk@plt+0x4870>
   15e18:	vcmpege.f32	s10, s12
   15e1c:	vmrsge	APSR_nzcv, fpscr
   15e20:	bgt	15ec0 <__mempcpy_chk@plt+0x4830>
   15e24:	vldr	s4, [pc, #216]	; 15f04 <__mempcpy_chk@plt+0x4874>
   15e28:	movw	r0, #46552	; 0xb5d8
   15e2c:	movt	r0, #1
   15e30:	str	r0, [r5, #20]
   15e34:	vmul.f32	s4, s4, s0
   15e38:	vcmpe.f32	s4, s2
   15e3c:	vmrs	APSR_nzcv, fpscr
   15e40:	bgt	15e5c <__mempcpy_chk@plt+0x47cc>
   15e44:	b	15eb4 <__mempcpy_chk@plt+0x4824>
   15e48:	mov	r0, r1
   15e4c:	vmul.f32	s4, s4, s0
   15e50:	vcmpe.f32	s4, s2
   15e54:	vmrs	APSR_nzcv, fpscr
   15e58:	ble	15eb4 <__mempcpy_chk@plt+0x4824>
   15e5c:	ldrb	r1, [r0, #16]
   15e60:	vldr	s2, [r0, #4]
   15e64:	cmp	r1, #0
   15e68:	vmul.f32	s0, s2, s0
   15e6c:	vldreq	s2, [r0, #8]
   15e70:	mov	r0, r5
   15e74:	vmuleq.f32	s0, s0, s2
   15e78:	vcvt.u32.f32	s0, s0
   15e7c:	vmov	r1, s0
   15e80:	bl	153f4 <__mempcpy_chk@plt+0x3d64>
   15e84:	cmp	r0, #0
   15e88:	bne	15eb4 <__mempcpy_chk@plt+0x4824>
   15e8c:	ldr	r0, [r5, #36]	; 0x24
   15e90:	cmp	r0, #0
   15e94:	beq	15eac <__mempcpy_chk@plt+0x481c>
   15e98:	ldr	r4, [r0, #4]
   15e9c:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   15ea0:	cmp	r4, #0
   15ea4:	mov	r0, r4
   15ea8:	bne	15e98 <__mempcpy_chk@plt+0x4808>
   15eac:	mov	r0, #0
   15eb0:	str	r0, [r5, #36]	; 0x24
   15eb4:	mov	r8, r9
   15eb8:	mov	r0, r8
   15ebc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15ec0:	vadd.f32	s8, s4, s8
   15ec4:	vcmpe.f32	s8, s6
   15ec8:	vmrs	APSR_nzcv, fpscr
   15ecc:	bpl	15e24 <__mempcpy_chk@plt+0x4794>
   15ed0:	vldr	s6, [r0, #4]
   15ed4:	vmov.f32	s10, #112	; 0x3f800000  1.0
   15ed8:	vcmpe.f32	s6, s10
   15edc:	vmrs	APSR_nzcv, fpscr
   15ee0:	bhi	15e24 <__mempcpy_chk@plt+0x4794>
   15ee4:	vcmpe.f32	s8, s6
   15ee8:	vmrs	APSR_nzcv, fpscr
   15eec:	bmi	15e4c <__mempcpy_chk@plt+0x47bc>
   15ef0:	b	15e24 <__mempcpy_chk@plt+0x4794>
   15ef4:	bl	11654 <abort@plt>
   15ef8:	stclcc	12, cr12, [ip, #820]	; 0x334
   15efc:	svccc	0x00666666
   15f00:	svccc	0x008ccccd
   15f04:	andeq	r0, r0, r0
   15f08:	b	15c58 <__mempcpy_chk@plt+0x45c8>
   15f0c:	push	{fp, lr}
   15f10:	mov	fp, sp
   15f14:	mov	r2, r1
   15f18:	ldrd	r0, [r0, #8]
   15f1c:	mov	r3, #0
   15f20:	bl	1a1f0 <__mempcpy_chk@plt+0x8b60>
   15f24:	mov	r0, r2
   15f28:	pop	{fp, pc}
   15f2c:	push	{r4, r5, fp, lr}
   15f30:	add	fp, sp, #8
   15f34:	ldrd	r2, [r1, #8]
   15f38:	ldrd	r4, [r0, #8]
   15f3c:	eor	r3, r5, r3
   15f40:	eor	r2, r4, r2
   15f44:	orrs	r2, r2, r3
   15f48:	bne	15f74 <__mempcpy_chk@plt+0x48e4>
   15f4c:	ldrd	r2, [r1, #16]
   15f50:	ldrd	r4, [r0, #16]
   15f54:	eor	r3, r5, r3
   15f58:	eor	r2, r4, r2
   15f5c:	orrs	r2, r2, r3
   15f60:	bne	15f74 <__mempcpy_chk@plt+0x48e4>
   15f64:	ldr	r1, [r1]
   15f68:	ldr	r0, [r0]
   15f6c:	pop	{r4, r5, fp, lr}
   15f70:	b	18274 <__mempcpy_chk@plt+0x6be4>
   15f74:	mov	r0, #0
   15f78:	pop	{r4, r5, fp, pc}
   15f7c:	push	{r4, r5, fp, lr}
   15f80:	add	fp, sp, #8
   15f84:	mov	r5, r0
   15f88:	ldr	r0, [r0]
   15f8c:	mov	r4, r1
   15f90:	bl	19de4 <__mempcpy_chk@plt+0x8754>
   15f94:	ldrd	r2, [r5, #8]
   15f98:	eor	r0, r2, r0
   15f9c:	mov	r1, r3
   15fa0:	mov	r2, r4
   15fa4:	mov	r3, #0
   15fa8:	bl	1a1f0 <__mempcpy_chk@plt+0x8b60>
   15fac:	mov	r0, r2
   15fb0:	pop	{r4, r5, fp, pc}
   15fb4:	push	{r4, r5, r6, r7, fp, lr}
   15fb8:	add	fp, sp, #16
   15fbc:	ldrd	r2, [r1, #8]
   15fc0:	ldrd	r4, [r0, #8]
   15fc4:	eor	r3, r5, r3
   15fc8:	eor	r2, r4, r2
   15fcc:	orrs	r2, r2, r3
   15fd0:	mov	r2, #0
   15fd4:	bne	16004 <__mempcpy_chk@plt+0x4974>
   15fd8:	ldrd	r4, [r1, #16]
   15fdc:	ldrd	r6, [r0, #16]
   15fe0:	eor	r3, r7, r5
   15fe4:	eor	r7, r6, r4
   15fe8:	orrs	r3, r7, r3
   15fec:	bne	16004 <__mempcpy_chk@plt+0x4974>
   15ff0:	ldr	r1, [r1]
   15ff4:	ldr	r0, [r0]
   15ff8:	bl	11348 <strcmp@plt>
   15ffc:	clz	r0, r0
   16000:	lsr	r2, r0, #5
   16004:	mov	r0, r2
   16008:	pop	{r4, r5, r6, r7, fp, pc}
   1600c:	push	{r4, sl, fp, lr}
   16010:	add	fp, sp, #8
   16014:	mov	r4, r0
   16018:	ldr	r0, [r0]
   1601c:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   16020:	mov	r0, r4
   16024:	pop	{r4, sl, fp, lr}
   16028:	b	14a6c <__mempcpy_chk@plt+0x33dc>
   1602c:	sub	sp, sp, #4
   16030:	push	{fp, lr}
   16034:	mov	fp, sp
   16038:	sub	sp, sp, #4
   1603c:	str	r3, [fp, #8]
   16040:	mov	r3, #0
   16044:	tst	r2, #64	; 0x40
   16048:	addne	r3, fp, #8
   1604c:	addne	r3, r3, #4
   16050:	strne	r3, [sp]
   16054:	ldrne	r3, [fp, #8]
   16058:	bl	11510 <openat64@plt>
   1605c:	bl	189bc <__mempcpy_chk@plt+0x732c>
   16060:	mov	sp, fp
   16064:	pop	{fp, lr}
   16068:	add	sp, sp, #4
   1606c:	bx	lr
   16070:	push	{r4, r5, r6, sl, fp, lr}
   16074:	add	fp, sp, #16
   16078:	orr	r2, r2, #18688	; 0x4900
   1607c:	mov	r4, r3
   16080:	orr	r2, r2, #524288	; 0x80000
   16084:	bl	1602c <__mempcpy_chk@plt+0x499c>
   16088:	mov	r5, r0
   1608c:	mov	r0, #0
   16090:	cmp	r5, #0
   16094:	poplt	{r4, r5, r6, sl, fp, pc}
   16098:	mov	r0, r5
   1609c:	bl	11600 <fdopendir@plt>
   160a0:	cmp	r0, #0
   160a4:	strne	r5, [r4]
   160a8:	popne	{r4, r5, r6, sl, fp, pc}
   160ac:	bl	1151c <__errno_location@plt>
   160b0:	ldr	r6, [r0]
   160b4:	mov	r4, r0
   160b8:	mov	r0, r5
   160bc:	bl	11660 <close@plt>
   160c0:	mov	r0, #0
   160c4:	str	r6, [r4]
   160c8:	pop	{r4, r5, r6, sl, fp, pc}
   160cc:	push	{r4, r5, fp, lr}
   160d0:	add	fp, sp, #8
   160d4:	cmp	r0, #0
   160d8:	beq	1616c <__mempcpy_chk@plt+0x4adc>
   160dc:	mov	r1, #47	; 0x2f
   160e0:	mov	r4, r0
   160e4:	bl	115dc <strrchr@plt>
   160e8:	cmp	r0, #0
   160ec:	mov	r5, r4
   160f0:	addne	r5, r0, #1
   160f4:	sub	r0, r5, r4
   160f8:	cmp	r0, #7
   160fc:	blt	16150 <__mempcpy_chk@plt+0x4ac0>
   16100:	movw	r1, #46628	; 0xb624
   16104:	sub	r0, r5, #7
   16108:	mov	r2, #7
   1610c:	movt	r1, #1
   16110:	bl	11648 <strncmp@plt>
   16114:	cmp	r0, #0
   16118:	bne	16150 <__mempcpy_chk@plt+0x4ac0>
   1611c:	movw	r1, #46636	; 0xb62c
   16120:	mov	r0, r5
   16124:	mov	r2, #3
   16128:	movt	r1, #1
   1612c:	bl	11648 <strncmp@plt>
   16130:	cmp	r0, #0
   16134:	beq	16140 <__mempcpy_chk@plt+0x4ab0>
   16138:	mov	r4, r5
   1613c:	b	16150 <__mempcpy_chk@plt+0x4ac0>
   16140:	movw	r0, #49560	; 0xc198
   16144:	add	r4, r5, #3
   16148:	movt	r0, #2
   1614c:	str	r4, [r0]
   16150:	movw	r0, #49564	; 0xc19c
   16154:	movt	r0, #2
   16158:	str	r4, [r0]
   1615c:	movw	r0, #49632	; 0xc1e0
   16160:	movt	r0, #2
   16164:	str	r4, [r0]
   16168:	pop	{r4, r5, fp, pc}
   1616c:	movw	r0, #49576	; 0xc1a8
   16170:	mov	r1, #55	; 0x37
   16174:	mov	r2, #1
   16178:	movt	r0, #2
   1617c:	ldr	r3, [r0]
   16180:	movw	r0, #46572	; 0xb5ec
   16184:	movt	r0, #1
   16188:	bl	11438 <fwrite@plt>
   1618c:	bl	11654 <abort@plt>
   16190:	push	{r4, r5, r6, sl, fp, lr}
   16194:	add	fp, sp, #16
   16198:	mov	r4, r0
   1619c:	movw	r0, #49640	; 0xc1e8
   161a0:	movt	r0, #2
   161a4:	cmp	r4, #0
   161a8:	moveq	r4, r0
   161ac:	bl	1151c <__errno_location@plt>
   161b0:	ldr	r6, [r0]
   161b4:	mov	r5, r0
   161b8:	mov	r0, r4
   161bc:	mov	r1, #48	; 0x30
   161c0:	bl	19520 <__mempcpy_chk@plt+0x7e90>
   161c4:	str	r6, [r5]
   161c8:	pop	{r4, r5, r6, sl, fp, pc}
   161cc:	movw	r1, #49640	; 0xc1e8
   161d0:	cmp	r0, #0
   161d4:	movt	r1, #2
   161d8:	movne	r1, r0
   161dc:	ldr	r0, [r1]
   161e0:	bx	lr
   161e4:	movw	r2, #49640	; 0xc1e8
   161e8:	cmp	r0, #0
   161ec:	movt	r2, #2
   161f0:	movne	r2, r0
   161f4:	str	r1, [r2]
   161f8:	bx	lr
   161fc:	movw	r3, #49640	; 0xc1e8
   16200:	cmp	r0, #0
   16204:	movt	r3, #2
   16208:	movne	r3, r0
   1620c:	ubfx	r0, r1, #5, #3
   16210:	and	r1, r1, #31
   16214:	add	r0, r3, r0, lsl #2
   16218:	ldr	r3, [r0, #8]
   1621c:	eor	r2, r2, r3, lsr r1
   16220:	and	r2, r2, #1
   16224:	eor	r2, r3, r2, lsl r1
   16228:	str	r2, [r0, #8]
   1622c:	mov	r0, #1
   16230:	and	r0, r0, r3, lsr r1
   16234:	bx	lr
   16238:	movw	r2, #49640	; 0xc1e8
   1623c:	cmp	r0, #0
   16240:	movt	r2, #2
   16244:	movne	r2, r0
   16248:	ldr	r0, [r2, #4]
   1624c:	str	r1, [r2, #4]
   16250:	bx	lr
   16254:	movw	r3, #49640	; 0xc1e8
   16258:	cmp	r0, #0
   1625c:	movt	r3, #2
   16260:	movne	r3, r0
   16264:	cmp	r1, #0
   16268:	mov	r0, #10
   1626c:	cmpne	r2, #0
   16270:	str	r0, [r3]
   16274:	bne	16284 <__mempcpy_chk@plt+0x4bf4>
   16278:	push	{fp, lr}
   1627c:	mov	fp, sp
   16280:	bl	11654 <abort@plt>
   16284:	str	r1, [r3, #40]	; 0x28
   16288:	str	r2, [r3, #44]	; 0x2c
   1628c:	bx	lr
   16290:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16294:	add	fp, sp, #28
   16298:	sub	sp, sp, #20
   1629c:	mov	r7, r0
   162a0:	ldr	r0, [fp, #8]
   162a4:	movw	r5, #49640	; 0xc1e8
   162a8:	mov	r8, r3
   162ac:	mov	r9, r2
   162b0:	mov	sl, r1
   162b4:	movt	r5, #2
   162b8:	cmp	r0, #0
   162bc:	movne	r5, r0
   162c0:	bl	1151c <__errno_location@plt>
   162c4:	mov	r4, r0
   162c8:	ldm	r5, {r0, r1}
   162cc:	ldr	r2, [r5, #40]	; 0x28
   162d0:	ldr	r3, [r5, #44]	; 0x2c
   162d4:	add	r5, r5, #8
   162d8:	ldr	r6, [r4]
   162dc:	stm	sp, {r0, r1, r5}
   162e0:	str	r2, [sp, #12]
   162e4:	str	r3, [sp, #16]
   162e8:	mov	r0, r7
   162ec:	mov	r1, sl
   162f0:	mov	r2, r9
   162f4:	mov	r3, r8
   162f8:	bl	16308 <__mempcpy_chk@plt+0x4c78>
   162fc:	str	r6, [r4]
   16300:	sub	sp, fp, #28
   16304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16308:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1630c:	add	fp, sp, #28
   16310:	sub	sp, sp, #156	; 0x9c
   16314:	str	r0, [sp, #76]	; 0x4c
   16318:	ldr	r0, [fp, #12]
   1631c:	mov	r6, r1
   16320:	str	r3, [sp, #84]	; 0x54
   16324:	str	r2, [fp, #-84]	; 0xffffffac
   16328:	and	r1, r0, #4
   1632c:	str	r1, [sp, #24]
   16330:	and	r1, r0, #1
   16334:	str	r1, [sp, #28]
   16338:	ubfx	r8, r0, #1, #1
   1633c:	bl	11450 <__ctype_get_mb_cur_max@plt>
   16340:	str	r0, [sp, #32]
   16344:	ldr	r0, [fp, #24]
   16348:	ldr	r7, [fp, #8]
   1634c:	mov	r1, #0
   16350:	mov	r2, #0
   16354:	mov	r4, #1
   16358:	str	r1, [sp, #52]	; 0x34
   1635c:	str	r0, [sp, #72]	; 0x48
   16360:	ldr	r0, [fp, #20]
   16364:	str	r0, [sp, #68]	; 0x44
   16368:	mov	r0, #0
   1636c:	str	r0, [sp, #48]	; 0x30
   16370:	mov	r0, #0
   16374:	str	r0, [sp, #92]	; 0x5c
   16378:	mov	r0, #0
   1637c:	str	r0, [fp, #-76]	; 0xffffffb4
   16380:	mov	r0, #0
   16384:	cmp	r7, #10
   16388:	bhi	17670 <__mempcpy_chk@plt+0x5fe0>
   1638c:	add	r1, pc, #28
   16390:	mov	sl, r6
   16394:	ldr	r6, [sp, #76]	; 0x4c
   16398:	ldr	ip, [fp, #-84]	; 0xffffffac
   1639c:	ldr	lr, [sp, #84]	; 0x54
   163a0:	mov	r9, #0
   163a4:	mov	r3, #1
   163a8:	mov	r5, #0
   163ac:	ldr	pc, [r1, r7, lsl #2]
   163b0:	andeq	r6, r1, r0, lsl #9
   163b4:			; <UNDEFINED> instruction: 0x000164bc
   163b8:	muleq	r1, r0, r4
   163bc:	andeq	r6, r1, r8, ror r4
   163c0:			; <UNDEFINED> instruction: 0x000164b0
   163c4:	andeq	r6, r1, r4, ror #9
   163c8:	andeq	r6, r1, r0, lsr #9
   163cc:	strdeq	r6, [r1], -r0
   163d0:	ldrdeq	r6, [r1], -ip
   163d4:	ldrdeq	r6, [r1], -ip
   163d8:	andeq	r6, r1, r4, lsl #13
   163dc:	mov	r9, r4
   163e0:	movw	r4, #46718	; 0xb67e
   163e4:	mov	r5, r8
   163e8:	mov	r8, r2
   163ec:	mov	r0, #0
   163f0:	mov	r2, #5
   163f4:	movt	r4, #1
   163f8:	mov	r1, r4
   163fc:	bl	113e4 <dcgettext@plt>
   16400:	cmp	r0, r4
   16404:	str	r0, [sp, #68]	; 0x44
   16408:	bne	16598 <__mempcpy_chk@plt+0x4f08>
   1640c:	bl	19e28 <__mempcpy_chk@plt+0x8798>
   16410:	ldrb	r1, [r0]
   16414:	and	r1, r1, #223	; 0xdf
   16418:	cmp	r1, #71	; 0x47
   1641c:	beq	16564 <__mempcpy_chk@plt+0x4ed4>
   16420:	cmp	r1, #85	; 0x55
   16424:	bne	1657c <__mempcpy_chk@plt+0x4eec>
   16428:	ldrb	r1, [r0, #1]
   1642c:	and	r1, r1, #223	; 0xdf
   16430:	cmp	r1, #84	; 0x54
   16434:	bne	1657c <__mempcpy_chk@plt+0x4eec>
   16438:	ldrb	r1, [r0, #2]
   1643c:	and	r1, r1, #223	; 0xdf
   16440:	cmp	r1, #70	; 0x46
   16444:	bne	1657c <__mempcpy_chk@plt+0x4eec>
   16448:	ldrb	r1, [r0, #3]
   1644c:	cmp	r1, #45	; 0x2d
   16450:	ldrbeq	r1, [r0, #4]
   16454:	cmpeq	r1, #56	; 0x38
   16458:	bne	1657c <__mempcpy_chk@plt+0x4eec>
   1645c:	ldrb	r0, [r0, #5]
   16460:	cmp	r0, #0
   16464:	movw	r0, #46722	; 0xb682
   16468:	movt	r0, #1
   1646c:	str	r0, [sp, #68]	; 0x44
   16470:	bne	1657c <__mempcpy_chk@plt+0x4eec>
   16474:	b	16598 <__mempcpy_chk@plt+0x4f08>
   16478:	mov	r0, #1
   1647c:	b	164bc <__mempcpy_chk@plt+0x4e2c>
   16480:	mov	r7, #0
   16484:	mov	r9, #0
   16488:	mov	r3, r0
   1648c:	b	1655c <__mempcpy_chk@plt+0x4ecc>
   16490:	tst	r8, #1
   16494:	bne	164bc <__mempcpy_chk@plt+0x4e2c>
   16498:	mov	r3, r0
   1649c:	b	16514 <__mempcpy_chk@plt+0x4e84>
   164a0:	mov	r0, #1
   164a4:	mov	r9, #0
   164a8:	mov	r7, #5
   164ac:	b	164f8 <__mempcpy_chk@plt+0x4e68>
   164b0:	mov	r3, #1
   164b4:	tst	r8, #1
   164b8:	beq	16514 <__mempcpy_chk@plt+0x4e84>
   164bc:	mov	r1, #1
   164c0:	mov	r9, #0
   164c4:	mov	r7, #2
   164c8:	mov	r3, r0
   164cc:	mov	r5, #1
   164d0:	str	r1, [fp, #-76]	; 0xffffffb4
   164d4:	movw	r1, #46720	; 0xb680
   164d8:	movt	r1, #1
   164dc:	str	r1, [sp, #92]	; 0x5c
   164e0:	b	166f0 <__mempcpy_chk@plt+0x5060>
   164e4:	mov	r7, #5
   164e8:	tst	r8, #1
   164ec:	beq	16534 <__mempcpy_chk@plt+0x4ea4>
   164f0:	mov	r0, #1
   164f4:	mov	r9, #0
   164f8:	str	r0, [fp, #-76]	; 0xffffffb4
   164fc:	movw	r0, #46716	; 0xb67c
   16500:	mov	r3, #1
   16504:	mov	r5, #1
   16508:	movt	r0, #1
   1650c:	str	r0, [sp, #92]	; 0x5c
   16510:	b	166f0 <__mempcpy_chk@plt+0x5060>
   16514:	cmp	sl, #0
   16518:	mov	r9, #1
   1651c:	mov	r7, #2
   16520:	movne	r0, #39	; 0x27
   16524:	strbne	r0, [r6]
   16528:	movw	r0, #46720	; 0xb680
   1652c:	movt	r0, #1
   16530:	b	16550 <__mempcpy_chk@plt+0x4ec0>
   16534:	cmp	sl, #0
   16538:	mov	r9, #1
   1653c:	mov	r3, #1
   16540:	movne	r0, #34	; 0x22
   16544:	strbne	r0, [r6]
   16548:	movw	r0, #46716	; 0xb67c
   1654c:	movt	r0, #1
   16550:	str	r0, [sp, #92]	; 0x5c
   16554:	mov	r0, #1
   16558:	str	r0, [fp, #-76]	; 0xffffffb4
   1655c:	mov	r5, #0
   16560:	b	166f0 <__mempcpy_chk@plt+0x5060>
   16564:	ldrb	r1, [r0, #1]
   16568:	and	r1, r1, #223	; 0xdf
   1656c:	cmp	r1, #66	; 0x42
   16570:	ldrbeq	r1, [r0, #2]
   16574:	cmpeq	r1, #49	; 0x31
   16578:	beq	17498 <__mempcpy_chk@plt+0x5e08>
   1657c:	movw	r0, #46720	; 0xb680
   16580:	movw	r1, #46716	; 0xb67c
   16584:	cmp	r7, #9
   16588:	movt	r0, #1
   1658c:	movt	r1, #1
   16590:	moveq	r0, r1
   16594:	str	r0, [sp, #68]	; 0x44
   16598:	movw	r4, #46720	; 0xb680
   1659c:	mov	r0, #0
   165a0:	mov	r2, #5
   165a4:	movt	r4, #1
   165a8:	mov	r1, r4
   165ac:	bl	113e4 <dcgettext@plt>
   165b0:	cmp	r0, r4
   165b4:	str	r0, [sp, #72]	; 0x48
   165b8:	beq	165c8 <__mempcpy_chk@plt+0x4f38>
   165bc:	mov	r4, r9
   165c0:	mov	r2, r8
   165c4:	b	16680 <__mempcpy_chk@plt+0x4ff0>
   165c8:	bl	19e28 <__mempcpy_chk@plt+0x8798>
   165cc:	ldrb	r1, [r0]
   165d0:	mov	r4, r9
   165d4:	and	r1, r1, #223	; 0xdf
   165d8:	cmp	r1, #71	; 0x47
   165dc:	beq	16638 <__mempcpy_chk@plt+0x4fa8>
   165e0:	cmp	r1, #85	; 0x55
   165e4:	mov	r2, r8
   165e8:	bne	16660 <__mempcpy_chk@plt+0x4fd0>
   165ec:	ldrb	r1, [r0, #1]
   165f0:	and	r1, r1, #223	; 0xdf
   165f4:	cmp	r1, #84	; 0x54
   165f8:	bne	16660 <__mempcpy_chk@plt+0x4fd0>
   165fc:	ldrb	r1, [r0, #2]
   16600:	and	r1, r1, #223	; 0xdf
   16604:	cmp	r1, #70	; 0x46
   16608:	ldrbeq	r1, [r0, #3]
   1660c:	cmpeq	r1, #45	; 0x2d
   16610:	bne	16660 <__mempcpy_chk@plt+0x4fd0>
   16614:	ldrb	r1, [r0, #4]
   16618:	cmp	r1, #56	; 0x38
   1661c:	ldrbeq	r0, [r0, #5]
   16620:	cmpeq	r0, #0
   16624:	bne	16660 <__mempcpy_chk@plt+0x4fd0>
   16628:	movw	r0, #46726	; 0xb686
   1662c:	movt	r0, #1
   16630:	str	r0, [sp, #72]	; 0x48
   16634:	b	16680 <__mempcpy_chk@plt+0x4ff0>
   16638:	ldrb	r1, [r0, #1]
   1663c:	mov	r2, r8
   16640:	and	r1, r1, #223	; 0xdf
   16644:	cmp	r1, #66	; 0x42
   16648:	bne	16660 <__mempcpy_chk@plt+0x4fd0>
   1664c:	ldrb	r1, [r0, #2]
   16650:	cmp	r1, #49	; 0x31
   16654:	ldrbeq	r1, [r0, #3]
   16658:	cmpeq	r1, #56	; 0x38
   1665c:	beq	174dc <__mempcpy_chk@plt+0x5e4c>
   16660:	movw	r0, #46720	; 0xb680
   16664:	cmp	r7, #9
   16668:	movt	r0, #1
   1666c:	mov	r1, r0
   16670:	movw	r0, #46716	; 0xb67c
   16674:	movt	r0, #1
   16678:	moveq	r1, r0
   1667c:	str	r1, [sp, #72]	; 0x48
   16680:	mov	r8, r5
   16684:	mov	r9, #0
   16688:	tst	r8, #1
   1668c:	mov	r5, r8
   16690:	str	r2, [fp, #-48]	; 0xffffffd0
   16694:	bne	166cc <__mempcpy_chk@plt+0x503c>
   16698:	ldr	r0, [sp, #68]	; 0x44
   1669c:	ldrb	r0, [r0]
   166a0:	cmp	r0, #0
   166a4:	beq	166cc <__mempcpy_chk@plt+0x503c>
   166a8:	ldr	r1, [sp, #68]	; 0x44
   166ac:	mov	r9, #0
   166b0:	add	r1, r1, #1
   166b4:	cmp	r9, sl
   166b8:	strbcc	r0, [r6, r9]
   166bc:	ldrb	r0, [r1, r9]
   166c0:	add	r9, r9, #1
   166c4:	cmp	r0, #0
   166c8:	bne	166b4 <__mempcpy_chk@plt+0x5024>
   166cc:	ldr	r8, [sp, #72]	; 0x48
   166d0:	mov	r0, r8
   166d4:	bl	11504 <strlen@plt>
   166d8:	ldr	ip, [fp, #-84]	; 0xffffffac
   166dc:	ldr	lr, [sp, #84]	; 0x54
   166e0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   166e4:	str	r0, [fp, #-76]	; 0xffffffb4
   166e8:	str	r8, [sp, #92]	; 0x5c
   166ec:	mov	r3, #1
   166f0:	ldr	r0, [fp, #16]
   166f4:	str	r7, [fp, #-64]	; 0xffffffc0
   166f8:	str	r5, [fp, #-72]	; 0xffffffb8
   166fc:	str	r3, [sp, #80]	; 0x50
   16700:	cmp	r0, #0
   16704:	movwne	r0, #1
   16708:	and	r0, r0, r5
   1670c:	str	r0, [fp, #-88]	; 0xffffffa8
   16710:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16714:	cmp	r0, #0
   16718:	movwne	r0, #1
   1671c:	subs	r7, r7, #2
   16720:	and	r1, r0, r5
   16724:	str	r7, [fp, #-80]	; 0xffffffb0
   16728:	and	r1, r3, r1
   1672c:	str	r1, [sp, #40]	; 0x28
   16730:	clz	r1, r7
   16734:	lsr	r1, r1, #5
   16738:	and	r1, r1, r5
   1673c:	eor	r5, r5, #1
   16740:	str	r1, [sp, #36]	; 0x24
   16744:	mov	r1, r7
   16748:	str	r5, [sp, #88]	; 0x58
   1674c:	mov	r7, #0
   16750:	movwne	r1, #1
   16754:	orr	r5, r1, r5
   16758:	and	r1, r1, r3
   1675c:	and	r0, r0, r1
   16760:	str	r5, [sp, #60]	; 0x3c
   16764:	str	r1, [fp, #-68]	; 0xffffffbc
   16768:	str	r0, [fp, #-60]	; 0xffffffc4
   1676c:	eor	r0, r3, #1
   16770:	str	r0, [sp, #44]	; 0x2c
   16774:	cmn	lr, #1
   16778:	beq	16788 <__mempcpy_chk@plt+0x50f8>
   1677c:	cmp	r7, lr
   16780:	bne	16794 <__mempcpy_chk@plt+0x5104>
   16784:	b	1740c <__mempcpy_chk@plt+0x5d7c>
   16788:	ldrb	r0, [ip, r7]
   1678c:	cmp	r0, #0
   16790:	beq	17414 <__mempcpy_chk@plt+0x5d84>
   16794:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16798:	mov	r8, #0
   1679c:	str	r4, [fp, #-52]	; 0xffffffcc
   167a0:	str	r2, [fp, #-48]	; 0xffffffd0
   167a4:	cmp	r0, #0
   167a8:	beq	167dc <__mempcpy_chk@plt+0x514c>
   167ac:	ldr	r0, [fp, #-76]	; 0xffffffb4
   167b0:	add	r4, r7, r0
   167b4:	cmp	r0, #2
   167b8:	bcc	167d4 <__mempcpy_chk@plt+0x5144>
   167bc:	cmn	lr, #1
   167c0:	bne	167d4 <__mempcpy_chk@plt+0x5144>
   167c4:	mov	r0, ip
   167c8:	bl	11504 <strlen@plt>
   167cc:	ldr	ip, [fp, #-84]	; 0xffffffac
   167d0:	mov	lr, r0
   167d4:	cmp	r4, lr
   167d8:	bls	167f4 <__mempcpy_chk@plt+0x5164>
   167dc:	mov	r0, #0
   167e0:	str	r0, [fp, #-56]	; 0xffffffc8
   167e4:	ldrb	r5, [ip, r7]
   167e8:	cmp	r5, #126	; 0x7e
   167ec:	bls	16844 <__mempcpy_chk@plt+0x51b4>
   167f0:	b	16c4c <__mempcpy_chk@plt+0x55bc>
   167f4:	ldr	r1, [sp, #92]	; 0x5c
   167f8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   167fc:	add	r0, ip, r7
   16800:	mov	r4, lr
   16804:	bl	113d8 <memcmp@plt>
   16808:	ldr	r2, [sp, #88]	; 0x58
   1680c:	cmp	r0, #0
   16810:	mov	r1, r0
   16814:	movwne	r1, #1
   16818:	orr	r1, r1, r2
   1681c:	tst	r1, #1
   16820:	beq	17520 <__mempcpy_chk@plt+0x5e90>
   16824:	ldr	ip, [fp, #-84]	; 0xffffffac
   16828:	clz	r0, r0
   1682c:	mov	lr, r4
   16830:	lsr	r0, r0, #5
   16834:	str	r0, [fp, #-56]	; 0xffffffc8
   16838:	ldrb	r5, [ip, r7]
   1683c:	cmp	r5, #126	; 0x7e
   16840:	bhi	16c4c <__mempcpy_chk@plt+0x55bc>
   16844:	add	r3, pc, #16
   16848:	mov	r4, #1
   1684c:	mov	r2, #110	; 0x6e
   16850:	mov	r0, #97	; 0x61
   16854:	mov	r1, #0
   16858:	ldr	pc, [r3, r5, lsl #2]
   1685c:	andeq	r6, r1, ip, lsr #22
   16860:	andeq	r6, r1, ip, asr #24
   16864:	andeq	r6, r1, ip, asr #24
   16868:	andeq	r6, r1, ip, asr #24
   1686c:	andeq	r6, r1, ip, asr #24
   16870:	andeq	r6, r1, ip, asr #24
   16874:	andeq	r6, r1, ip, asr #24
   16878:	andeq	r6, r1, r8, lsr #26
   1687c:	andeq	r6, r1, ip, lsl #22
   16880:	strdeq	r6, [r1], -r4
   16884:	andeq	r6, r1, r8, lsl fp
   16888:	andeq	r6, r1, r8, lsr #23
   1688c:	andeq	r6, r1, ip, ror #21
   16890:	andeq	r6, r1, r4, lsl fp
   16894:	andeq	r6, r1, ip, asr #24
   16898:	andeq	r6, r1, ip, asr #24
   1689c:	andeq	r6, r1, ip, asr #24
   168a0:	andeq	r6, r1, ip, asr #24
   168a4:	andeq	r6, r1, ip, asr #24
   168a8:	andeq	r6, r1, ip, asr #24
   168ac:	andeq	r6, r1, ip, asr #24
   168b0:	andeq	r6, r1, ip, asr #24
   168b4:	andeq	r6, r1, ip, asr #24
   168b8:	andeq	r6, r1, ip, asr #24
   168bc:	andeq	r6, r1, ip, asr #24
   168c0:	andeq	r6, r1, ip, asr #24
   168c4:	andeq	r6, r1, ip, asr #24
   168c8:	andeq	r6, r1, ip, asr #24
   168cc:	andeq	r6, r1, ip, asr #24
   168d0:	andeq	r6, r1, ip, asr #24
   168d4:	andeq	r6, r1, ip, asr #24
   168d8:	andeq	r6, r1, ip, asr #24
   168dc:	andeq	r6, r1, r4, lsr #25
   168e0:	andeq	r6, r1, r8, lsr #25
   168e4:	andeq	r6, r1, r8, lsr #25
   168e8:	andeq	r6, r1, r8, ror sl
   168ec:	andeq	r6, r1, r8, lsr #25
   168f0:	andeq	r6, r1, r8, asr sl
   168f4:	andeq	r6, r1, r8, lsr #25
   168f8:			; <UNDEFINED> instruction: 0x00016bb0
   168fc:	andeq	r6, r1, r8, lsr #25
   16900:	andeq	r6, r1, r8, lsr #25
   16904:	andeq	r6, r1, r8, lsr #25
   16908:	andeq	r6, r1, r8, asr sl
   1690c:	andeq	r6, r1, r8, asr sl
   16910:	andeq	r6, r1, r8, asr sl
   16914:	andeq	r6, r1, r8, asr sl
   16918:	andeq	r6, r1, r8, asr sl
   1691c:	andeq	r6, r1, r8, asr sl
   16920:	andeq	r6, r1, r8, asr sl
   16924:	andeq	r6, r1, r8, asr sl
   16928:	andeq	r6, r1, r8, asr sl
   1692c:	andeq	r6, r1, r8, asr sl
   16930:	andeq	r6, r1, r8, asr sl
   16934:	andeq	r6, r1, r8, asr sl
   16938:	andeq	r6, r1, r8, asr sl
   1693c:	andeq	r6, r1, r8, asr sl
   16940:	andeq	r6, r1, r8, asr sl
   16944:	andeq	r6, r1, r8, asr sl
   16948:	andeq	r6, r1, r8, lsr #25
   1694c:	andeq	r6, r1, r8, lsr #25
   16950:	andeq	r6, r1, r8, lsr #25
   16954:	andeq	r6, r1, r8, lsr #25
   16958:	andeq	r6, r1, ip, ror #22
   1695c:	andeq	r6, r1, ip, asr #24
   16960:	andeq	r6, r1, r8, asr sl
   16964:	andeq	r6, r1, r8, asr sl
   16968:	andeq	r6, r1, r8, asr sl
   1696c:	andeq	r6, r1, r8, asr sl
   16970:	andeq	r6, r1, r8, asr sl
   16974:	andeq	r6, r1, r8, asr sl
   16978:	andeq	r6, r1, r8, asr sl
   1697c:	andeq	r6, r1, r8, asr sl
   16980:	andeq	r6, r1, r8, asr sl
   16984:	andeq	r6, r1, r8, asr sl
   16988:	andeq	r6, r1, r8, asr sl
   1698c:	andeq	r6, r1, r8, asr sl
   16990:	andeq	r6, r1, r8, asr sl
   16994:	andeq	r6, r1, r8, asr sl
   16998:	andeq	r6, r1, r8, asr sl
   1699c:	andeq	r6, r1, r8, asr sl
   169a0:	andeq	r6, r1, r8, asr sl
   169a4:	andeq	r6, r1, r8, asr sl
   169a8:	andeq	r6, r1, r8, asr sl
   169ac:	andeq	r6, r1, r8, asr sl
   169b0:	andeq	r6, r1, r8, asr sl
   169b4:	andeq	r6, r1, r8, asr sl
   169b8:	andeq	r6, r1, r8, asr sl
   169bc:	andeq	r6, r1, r8, asr sl
   169c0:	andeq	r6, r1, r8, asr sl
   169c4:	andeq	r6, r1, r8, asr sl
   169c8:	andeq	r6, r1, r8, lsr #25
   169cc:			; <UNDEFINED> instruction: 0x00016ab8
   169d0:	andeq	r6, r1, r8, asr sl
   169d4:	andeq	r6, r1, r8, lsr #25
   169d8:	andeq	r6, r1, r8, asr sl
   169dc:	andeq	r6, r1, r8, lsr #25
   169e0:	andeq	r6, r1, r8, asr sl
   169e4:	andeq	r6, r1, r8, asr sl
   169e8:	andeq	r6, r1, r8, asr sl
   169ec:	andeq	r6, r1, r8, asr sl
   169f0:	andeq	r6, r1, r8, asr sl
   169f4:	andeq	r6, r1, r8, asr sl
   169f8:	andeq	r6, r1, r8, asr sl
   169fc:	andeq	r6, r1, r8, asr sl
   16a00:	andeq	r6, r1, r8, asr sl
   16a04:	andeq	r6, r1, r8, asr sl
   16a08:	andeq	r6, r1, r8, asr sl
   16a0c:	andeq	r6, r1, r8, asr sl
   16a10:	andeq	r6, r1, r8, asr sl
   16a14:	andeq	r6, r1, r8, asr sl
   16a18:	andeq	r6, r1, r8, asr sl
   16a1c:	andeq	r6, r1, r8, asr sl
   16a20:	andeq	r6, r1, r8, asr sl
   16a24:	andeq	r6, r1, r8, asr sl
   16a28:	andeq	r6, r1, r8, asr sl
   16a2c:	andeq	r6, r1, r8, asr sl
   16a30:	andeq	r6, r1, r8, asr sl
   16a34:	andeq	r6, r1, r8, asr sl
   16a38:	andeq	r6, r1, r8, asr sl
   16a3c:	andeq	r6, r1, r8, asr sl
   16a40:	andeq	r6, r1, r8, asr sl
   16a44:	andeq	r6, r1, r8, asr sl
   16a48:	muleq	r1, r8, sl
   16a4c:	andeq	r6, r1, r8, lsr #25
   16a50:	muleq	r1, r8, sl
   16a54:	andeq	r6, r1, r8, ror sl
   16a58:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16a5c:	cmp	r0, #0
   16a60:	beq	16d3c <__mempcpy_chk@plt+0x56ac>
   16a64:	ldr	r0, [fp, #16]
   16a68:	cmp	r0, #0
   16a6c:	mov	r0, r5
   16a70:	bne	16d4c <__mempcpy_chk@plt+0x56bc>
   16a74:	b	16d6c <__mempcpy_chk@plt+0x56dc>
   16a78:	mov	r4, #0
   16a7c:	cmp	r7, #0
   16a80:	beq	16ca4 <__mempcpy_chk@plt+0x5614>
   16a84:	mov	r8, #0
   16a88:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16a8c:	cmp	r0, #0
   16a90:	bne	16a64 <__mempcpy_chk@plt+0x53d4>
   16a94:	b	16d3c <__mempcpy_chk@plt+0x56ac>
   16a98:	mov	r4, #0
   16a9c:	cmn	lr, #1
   16aa0:	beq	16c7c <__mempcpy_chk@plt+0x55ec>
   16aa4:	cmp	r7, #0
   16aa8:	bne	16a84 <__mempcpy_chk@plt+0x53f4>
   16aac:	cmp	lr, #1
   16ab0:	beq	16ca4 <__mempcpy_chk@plt+0x5614>
   16ab4:	b	16a84 <__mempcpy_chk@plt+0x53f4>
   16ab8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16abc:	cmp	r0, #2
   16ac0:	bne	16cd4 <__mempcpy_chk@plt+0x5644>
   16ac4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16ac8:	tst	r0, #1
   16acc:	bne	17534 <__mempcpy_chk@plt+0x5ea4>
   16ad0:	mov	r8, #0
   16ad4:	mov	r0, #92	; 0x5c
   16ad8:	mov	r4, #0
   16adc:	cmp	r8, #0
   16ae0:	beq	16cf4 <__mempcpy_chk@plt+0x5664>
   16ae4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16ae8:	b	16de8 <__mempcpy_chk@plt+0x5758>
   16aec:	mov	r0, #102	; 0x66
   16af0:	b	16d28 <__mempcpy_chk@plt+0x5698>
   16af4:	mov	r2, #116	; 0x74
   16af8:	ldr	r0, [sp, #60]	; 0x3c
   16afc:	tst	r0, #1
   16b00:	mov	r0, r2
   16b04:	bne	16d28 <__mempcpy_chk@plt+0x5698>
   16b08:	b	17534 <__mempcpy_chk@plt+0x5ea4>
   16b0c:	mov	r0, #98	; 0x62
   16b10:	b	16d28 <__mempcpy_chk@plt+0x5698>
   16b14:	mov	r2, #114	; 0x72
   16b18:	ldr	r0, [sp, #60]	; 0x3c
   16b1c:	tst	r0, #1
   16b20:	mov	r0, r2
   16b24:	bne	16d28 <__mempcpy_chk@plt+0x5698>
   16b28:	b	17534 <__mempcpy_chk@plt+0x5ea4>
   16b2c:	ldr	r0, [sp, #80]	; 0x50
   16b30:	tst	r0, #1
   16b34:	beq	16e10 <__mempcpy_chk@plt+0x5780>
   16b38:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16b3c:	tst	r0, #1
   16b40:	bne	1765c <__mempcpy_chk@plt+0x5fcc>
   16b44:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16b48:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16b4c:	cmp	r0, #2
   16b50:	ldr	r0, [fp, #-80]	; 0xffffffb0
   16b54:	movwne	r0, #1
   16b58:	orr	r0, r0, r2
   16b5c:	tst	r0, #1
   16b60:	beq	17108 <__mempcpy_chk@plt+0x5a78>
   16b64:	mov	r0, r9
   16b68:	b	1713c <__mempcpy_chk@plt+0x5aac>
   16b6c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16b70:	mov	r8, #0
   16b74:	mov	r5, #63	; 0x3f
   16b78:	cmp	r0, #5
   16b7c:	beq	16fc4 <__mempcpy_chk@plt+0x5934>
   16b80:	cmp	r0, #2
   16b84:	bne	17074 <__mempcpy_chk@plt+0x59e4>
   16b88:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16b8c:	tst	r0, #1
   16b90:	bne	17534 <__mempcpy_chk@plt+0x5ea4>
   16b94:	mov	r4, #0
   16b98:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16b9c:	cmp	r0, #0
   16ba0:	bne	16a64 <__mempcpy_chk@plt+0x53d4>
   16ba4:	b	16d3c <__mempcpy_chk@plt+0x56ac>
   16ba8:	mov	r0, #118	; 0x76
   16bac:	b	16d28 <__mempcpy_chk@plt+0x5698>
   16bb0:	mov	r0, #1
   16bb4:	mov	r5, #39	; 0x27
   16bb8:	str	r0, [sp, #52]	; 0x34
   16bbc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16bc0:	cmp	r0, #2
   16bc4:	bne	16c38 <__mempcpy_chk@plt+0x55a8>
   16bc8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16bcc:	tst	r0, #1
   16bd0:	bne	17534 <__mempcpy_chk@plt+0x5ea4>
   16bd4:	ldr	r2, [sp, #48]	; 0x30
   16bd8:	clz	r1, sl
   16bdc:	mov	r8, #0
   16be0:	lsr	r1, r1, #5
   16be4:	cmp	r2, #0
   16be8:	mov	r0, r2
   16bec:	movwne	r0, #1
   16bf0:	orrs	r0, r0, r1
   16bf4:	moveq	r2, sl
   16bf8:	moveq	sl, r0
   16bfc:	cmp	r9, sl
   16c00:	str	r2, [sp, #48]	; 0x30
   16c04:	movcc	r0, #39	; 0x27
   16c08:	strbcc	r0, [r6, r9]
   16c0c:	add	r0, r9, #1
   16c10:	cmp	r0, sl
   16c14:	movcc	r1, #92	; 0x5c
   16c18:	strbcc	r1, [r6, r0]
   16c1c:	add	r0, r9, #2
   16c20:	add	r9, r9, #3
   16c24:	cmp	r0, sl
   16c28:	movcc	r1, #39	; 0x27
   16c2c:	strbcc	r1, [r6, r0]
   16c30:	mov	r0, #0
   16c34:	str	r0, [fp, #-48]	; 0xffffffd0
   16c38:	mov	r4, #1
   16c3c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16c40:	cmp	r0, #0
   16c44:	bne	16a64 <__mempcpy_chk@plt+0x53d4>
   16c48:	b	16d3c <__mempcpy_chk@plt+0x56ac>
   16c4c:	ldr	r0, [sp, #32]
   16c50:	cmp	r0, #1
   16c54:	bne	16e40 <__mempcpy_chk@plt+0x57b0>
   16c58:	str	lr, [sp, #84]	; 0x54
   16c5c:	bl	114e0 <__ctype_b_loc@plt>
   16c60:	ldr	r0, [r0]
   16c64:	ldr	ip, [fp, #-84]	; 0xffffffac
   16c68:	mov	r1, #1
   16c6c:	add	r0, r0, r5, lsl #1
   16c70:	ldrb	r0, [r0, #1]
   16c74:	ubfx	r4, r0, #6, #1
   16c78:	b	17238 <__mempcpy_chk@plt+0x5ba8>
   16c7c:	cmp	r7, #0
   16c80:	ldrbeq	r0, [ip, #1]
   16c84:	cmpeq	r0, #0
   16c88:	beq	16ca4 <__mempcpy_chk@plt+0x5614>
   16c8c:	mvn	lr, #0
   16c90:	mov	r8, #0
   16c94:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16c98:	cmp	r0, #0
   16c9c:	bne	16a64 <__mempcpy_chk@plt+0x53d4>
   16ca0:	b	16d3c <__mempcpy_chk@plt+0x56ac>
   16ca4:	mov	r1, #1
   16ca8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16cac:	cmp	r0, #2
   16cb0:	bne	16cc0 <__mempcpy_chk@plt+0x5630>
   16cb4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16cb8:	tst	r0, #1
   16cbc:	bne	17534 <__mempcpy_chk@plt+0x5ea4>
   16cc0:	mov	r4, r1
   16cc4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16cc8:	cmp	r0, #0
   16ccc:	bne	16a64 <__mempcpy_chk@plt+0x53d4>
   16cd0:	b	16d3c <__mempcpy_chk@plt+0x56ac>
   16cd4:	ldr	r1, [sp, #40]	; 0x28
   16cd8:	mov	r8, #0
   16cdc:	mov	r0, #92	; 0x5c
   16ce0:	cmp	r1, #0
   16ce4:	beq	16d28 <__mempcpy_chk@plt+0x5698>
   16ce8:	mov	r4, #0
   16cec:	cmp	r8, #0
   16cf0:	bne	16ae4 <__mempcpy_chk@plt+0x5454>
   16cf4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16cf8:	tst	r2, #1
   16cfc:	beq	16de8 <__mempcpy_chk@plt+0x5758>
   16d00:	cmp	r9, sl
   16d04:	movcc	r1, #39	; 0x27
   16d08:	strbcc	r1, [r6, r9]
   16d0c:	add	r1, r9, #1
   16d10:	add	r9, r9, #2
   16d14:	cmp	r1, sl
   16d18:	movcc	r2, #39	; 0x27
   16d1c:	strbcc	r2, [r6, r1]
   16d20:	mov	r2, #0
   16d24:	b	16de8 <__mempcpy_chk@plt+0x5758>
   16d28:	ldr	r1, [sp, #80]	; 0x50
   16d2c:	mov	r4, #0
   16d30:	mov	r8, #0
   16d34:	tst	r1, #1
   16d38:	bne	16d78 <__mempcpy_chk@plt+0x56e8>
   16d3c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16d40:	cmp	r0, #0
   16d44:	mov	r0, r5
   16d48:	beq	16d6c <__mempcpy_chk@plt+0x56dc>
   16d4c:	ldr	r1, [fp, #16]
   16d50:	ubfx	r0, r5, #5, #3
   16d54:	mov	r2, #1
   16d58:	ldr	r0, [r1, r0, lsl #2]
   16d5c:	and	r1, r5, #31
   16d60:	tst	r0, r2, lsl r1
   16d64:	mov	r0, r5
   16d68:	bne	16d78 <__mempcpy_chk@plt+0x56e8>
   16d6c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16d70:	cmp	r1, #0
   16d74:	beq	171d0 <__mempcpy_chk@plt+0x5b40>
   16d78:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16d7c:	tst	r1, #1
   16d80:	bne	17514 <__mempcpy_chk@plt+0x5e84>
   16d84:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16d88:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16d8c:	cmp	r1, #2
   16d90:	ldr	r1, [fp, #-80]	; 0xffffffb0
   16d94:	movwne	r1, #1
   16d98:	orr	r1, r1, r2
   16d9c:	tst	r1, #1
   16da0:	bne	16dd8 <__mempcpy_chk@plt+0x5748>
   16da4:	cmp	r9, sl
   16da8:	movcc	r1, #39	; 0x27
   16dac:	strbcc	r1, [r6, r9]
   16db0:	add	r1, r9, #1
   16db4:	cmp	r1, sl
   16db8:	movcc	r2, #36	; 0x24
   16dbc:	strbcc	r2, [r6, r1]
   16dc0:	add	r1, r9, #2
   16dc4:	add	r9, r9, #3
   16dc8:	cmp	r1, sl
   16dcc:	movcc	r2, #39	; 0x27
   16dd0:	strbcc	r2, [r6, r1]
   16dd4:	mov	r2, #1
   16dd8:	cmp	r9, sl
   16ddc:	movcc	r1, #92	; 0x5c
   16de0:	strbcc	r1, [r6, r9]
   16de4:	add	r9, r9, #1
   16de8:	cmp	r9, sl
   16dec:	add	r7, r7, #1
   16df0:	strbcc	r0, [r6, r9]
   16df4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16df8:	add	r9, r9, #1
   16dfc:	and	r0, r0, r4
   16e00:	mov	r4, r0
   16e04:	cmn	lr, #1
   16e08:	bne	1677c <__mempcpy_chk@plt+0x50ec>
   16e0c:	b	16788 <__mempcpy_chk@plt+0x50f8>
   16e10:	ldr	r0, [sp, #28]
   16e14:	mov	r4, #0
   16e18:	mov	r8, #0
   16e1c:	mov	r5, #0
   16e20:	cmp	r0, #0
   16e24:	beq	16d3c <__mempcpy_chk@plt+0x56ac>
   16e28:	ldr	r4, [fp, #-52]	; 0xffffffcc
   16e2c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16e30:	add	r7, r7, #1
   16e34:	cmn	lr, #1
   16e38:	bne	1677c <__mempcpy_chk@plt+0x50ec>
   16e3c:	b	16788 <__mempcpy_chk@plt+0x50f8>
   16e40:	mov	r0, #0
   16e44:	cmn	lr, #1
   16e48:	str	r0, [fp, #-36]	; 0xffffffdc
   16e4c:	str	r0, [fp, #-40]	; 0xffffffd8
   16e50:	bne	16e64 <__mempcpy_chk@plt+0x57d4>
   16e54:	mov	r0, ip
   16e58:	bl	11504 <strlen@plt>
   16e5c:	ldr	ip, [fp, #-84]	; 0xffffffac
   16e60:	mov	lr, r0
   16e64:	ldr	r0, [sp, #36]	; 0x24
   16e68:	str	sl, [sp, #56]	; 0x38
   16e6c:	str	lr, [sp, #84]	; 0x54
   16e70:	cmp	r0, #0
   16e74:	beq	1708c <__mempcpy_chk@plt+0x59fc>
   16e78:	add	r0, ip, r7
   16e7c:	mov	r4, #1
   16e80:	mov	r6, #0
   16e84:	sub	sl, fp, #40	; 0x28
   16e88:	str	r0, [sp, #20]
   16e8c:	str	r6, [sp, #64]	; 0x40
   16e90:	add	r6, r6, r7
   16e94:	sub	r0, fp, #44	; 0x2c
   16e98:	mov	r3, sl
   16e9c:	add	r1, ip, r6
   16ea0:	sub	r2, lr, r6
   16ea4:	bl	19e60 <__mempcpy_chk@plt+0x87d0>
   16ea8:	cmn	r0, #2
   16eac:	beq	171e8 <__mempcpy_chk@plt+0x5b58>
   16eb0:	ldr	sl, [sp, #56]	; 0x38
   16eb4:	cmn	r0, #1
   16eb8:	beq	171dc <__mempcpy_chk@plt+0x5b4c>
   16ebc:	cmp	r0, #0
   16ec0:	beq	171e0 <__mempcpy_chk@plt+0x5b50>
   16ec4:	cmp	r0, #2
   16ec8:	bcc	16f88 <__mempcpy_chk@plt+0x58f8>
   16ecc:	ldr	r1, [sp, #64]	; 0x40
   16ed0:	ldr	r2, [sp, #20]
   16ed4:	add	r1, r2, r1
   16ed8:	mov	r2, #1
   16edc:	ldrb	r3, [r1, r2]
   16ee0:	sub	r3, r3, #91	; 0x5b
   16ee4:	cmp	r3, #33	; 0x21
   16ee8:	bhi	16f7c <__mempcpy_chk@plt+0x58ec>
   16eec:	add	r6, pc, #0
   16ef0:	ldr	pc, [r6, r3, lsl #2]
   16ef4:	andeq	r7, r1, r0, asr #10
   16ef8:	andeq	r7, r1, r0, asr #10
   16efc:	andeq	r6, r1, ip, ror pc
   16f00:	andeq	r7, r1, r0, asr #10
   16f04:	andeq	r6, r1, ip, ror pc
   16f08:	andeq	r7, r1, r0, asr #10
   16f0c:	andeq	r6, r1, ip, ror pc
   16f10:	andeq	r6, r1, ip, ror pc
   16f14:	andeq	r6, r1, ip, ror pc
   16f18:	andeq	r6, r1, ip, ror pc
   16f1c:	andeq	r6, r1, ip, ror pc
   16f20:	andeq	r6, r1, ip, ror pc
   16f24:	andeq	r6, r1, ip, ror pc
   16f28:	andeq	r6, r1, ip, ror pc
   16f2c:	andeq	r6, r1, ip, ror pc
   16f30:	andeq	r6, r1, ip, ror pc
   16f34:	andeq	r6, r1, ip, ror pc
   16f38:	andeq	r6, r1, ip, ror pc
   16f3c:	andeq	r6, r1, ip, ror pc
   16f40:	andeq	r6, r1, ip, ror pc
   16f44:	andeq	r6, r1, ip, ror pc
   16f48:	andeq	r6, r1, ip, ror pc
   16f4c:	andeq	r6, r1, ip, ror pc
   16f50:	andeq	r6, r1, ip, ror pc
   16f54:	andeq	r6, r1, ip, ror pc
   16f58:	andeq	r6, r1, ip, ror pc
   16f5c:	andeq	r6, r1, ip, ror pc
   16f60:	andeq	r6, r1, ip, ror pc
   16f64:	andeq	r6, r1, ip, ror pc
   16f68:	andeq	r6, r1, ip, ror pc
   16f6c:	andeq	r6, r1, ip, ror pc
   16f70:	andeq	r6, r1, ip, ror pc
   16f74:	andeq	r6, r1, ip, ror pc
   16f78:	andeq	r7, r1, r0, asr #10
   16f7c:	add	r2, r2, #1
   16f80:	cmp	r2, r0
   16f84:	bcc	16edc <__mempcpy_chk@plt+0x584c>
   16f88:	ldr	r6, [sp, #64]	; 0x40
   16f8c:	add	r6, r0, r6
   16f90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16f94:	bl	11420 <iswprint@plt>
   16f98:	cmp	r0, #0
   16f9c:	sub	sl, fp, #40	; 0x28
   16fa0:	movwne	r0, #1
   16fa4:	and	r4, r4, r0
   16fa8:	mov	r0, sl
   16fac:	bl	113cc <mbsinit@plt>
   16fb0:	ldr	ip, [fp, #-84]	; 0xffffffac
   16fb4:	ldr	lr, [sp, #84]	; 0x54
   16fb8:	cmp	r0, #0
   16fbc:	beq	16e8c <__mempcpy_chk@plt+0x57fc>
   16fc0:	b	1722c <__mempcpy_chk@plt+0x5b9c>
   16fc4:	ldr	r0, [sp, #24]
   16fc8:	cmp	r0, #0
   16fcc:	beq	17074 <__mempcpy_chk@plt+0x59e4>
   16fd0:	add	r0, r7, #2
   16fd4:	cmp	r0, lr
   16fd8:	bcs	17074 <__mempcpy_chk@plt+0x59e4>
   16fdc:	add	r1, ip, r7
   16fe0:	ldrb	r1, [r1, #1]
   16fe4:	cmp	r1, #63	; 0x3f
   16fe8:	bne	17074 <__mempcpy_chk@plt+0x59e4>
   16fec:	ldrb	r5, [ip, r0]
   16ff0:	sub	r1, r5, #33	; 0x21
   16ff4:	cmp	r1, #29
   16ff8:	bhi	17074 <__mempcpy_chk@plt+0x59e4>
   16ffc:	movw	r3, #20929	; 0x51c1
   17000:	mov	r2, #1
   17004:	movt	r3, #14336	; 0x3800
   17008:	tst	r3, r2, lsl r1
   1700c:	beq	17074 <__mempcpy_chk@plt+0x59e4>
   17010:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17014:	tst	r1, #1
   17018:	bne	17664 <__mempcpy_chk@plt+0x5fd4>
   1701c:	cmp	r9, sl
   17020:	mov	r7, r0
   17024:	mov	r4, #0
   17028:	movcc	r1, #63	; 0x3f
   1702c:	strbcc	r1, [r6, r9]
   17030:	add	r1, r9, #1
   17034:	cmp	r1, sl
   17038:	movcc	r2, #34	; 0x22
   1703c:	strbcc	r2, [r6, r1]
   17040:	add	r1, r9, #2
   17044:	cmp	r1, sl
   17048:	movcc	r2, #34	; 0x22
   1704c:	strbcc	r2, [r6, r1]
   17050:	add	r1, r9, #3
   17054:	add	r9, r9, #4
   17058:	cmp	r1, sl
   1705c:	movcc	r2, #63	; 0x3f
   17060:	strbcc	r2, [r6, r1]
   17064:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17068:	cmp	r0, #0
   1706c:	bne	16a64 <__mempcpy_chk@plt+0x53d4>
   17070:	b	16d3c <__mempcpy_chk@plt+0x56ac>
   17074:	mov	r5, #63	; 0x3f
   17078:	mov	r4, #0
   1707c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17080:	cmp	r0, #0
   17084:	bne	16a64 <__mempcpy_chk@plt+0x53d4>
   17088:	b	16d3c <__mempcpy_chk@plt+0x56ac>
   1708c:	mov	r4, #1
   17090:	mov	r6, #0
   17094:	sub	sl, fp, #40	; 0x28
   17098:	str	r6, [sp, #64]	; 0x40
   1709c:	add	r6, r6, r7
   170a0:	sub	r0, fp, #44	; 0x2c
   170a4:	mov	r3, sl
   170a8:	add	r1, ip, r6
   170ac:	sub	r2, lr, r6
   170b0:	bl	19e60 <__mempcpy_chk@plt+0x87d0>
   170b4:	cmn	r0, #2
   170b8:	beq	171e8 <__mempcpy_chk@plt+0x5b58>
   170bc:	cmn	r0, #1
   170c0:	beq	171dc <__mempcpy_chk@plt+0x5b4c>
   170c4:	ldr	r6, [sp, #64]	; 0x40
   170c8:	cmp	r0, #0
   170cc:	beq	17228 <__mempcpy_chk@plt+0x5b98>
   170d0:	add	r6, r0, r6
   170d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   170d8:	bl	11420 <iswprint@plt>
   170dc:	cmp	r0, #0
   170e0:	sub	sl, fp, #40	; 0x28
   170e4:	movwne	r0, #1
   170e8:	and	r4, r4, r0
   170ec:	mov	r0, sl
   170f0:	bl	113cc <mbsinit@plt>
   170f4:	ldr	ip, [fp, #-84]	; 0xffffffac
   170f8:	ldr	lr, [sp, #84]	; 0x54
   170fc:	cmp	r0, #0
   17100:	beq	17098 <__mempcpy_chk@plt+0x5a08>
   17104:	b	1722c <__mempcpy_chk@plt+0x5b9c>
   17108:	cmp	r9, sl
   1710c:	mov	r2, #1
   17110:	movcc	r0, #39	; 0x27
   17114:	strbcc	r0, [r6, r9]
   17118:	add	r0, r9, #1
   1711c:	cmp	r0, sl
   17120:	movcc	r1, #36	; 0x24
   17124:	strbcc	r1, [r6, r0]
   17128:	add	r0, r9, #2
   1712c:	cmp	r0, sl
   17130:	movcc	r1, #39	; 0x27
   17134:	strbcc	r1, [r6, r0]
   17138:	add	r0, r9, #3
   1713c:	cmp	r0, sl
   17140:	add	r9, r0, #1
   17144:	str	r2, [fp, #-48]	; 0xffffffd0
   17148:	movcc	r1, #92	; 0x5c
   1714c:	strbcc	r1, [r6, r0]
   17150:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17154:	cmp	r1, #2
   17158:	beq	171b8 <__mempcpy_chk@plt+0x5b28>
   1715c:	add	r1, r7, #1
   17160:	mov	r4, #0
   17164:	mov	r8, #1
   17168:	mov	r5, #48	; 0x30
   1716c:	cmp	r1, lr
   17170:	bcs	16a58 <__mempcpy_chk@plt+0x53c8>
   17174:	ldrb	r1, [ip, r1]
   17178:	sub	r1, r1, #48	; 0x30
   1717c:	uxtb	r1, r1
   17180:	cmp	r1, #9
   17184:	bhi	16a58 <__mempcpy_chk@plt+0x53c8>
   17188:	cmp	r9, sl
   1718c:	movcc	r1, #48	; 0x30
   17190:	strbcc	r1, [r6, r9]
   17194:	add	r1, r0, #2
   17198:	add	r9, r0, #3
   1719c:	cmp	r1, sl
   171a0:	movcc	r2, #48	; 0x30
   171a4:	strbcc	r2, [r6, r1]
   171a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   171ac:	cmp	r0, #0
   171b0:	bne	16a64 <__mempcpy_chk@plt+0x53d4>
   171b4:	b	16d3c <__mempcpy_chk@plt+0x56ac>
   171b8:	mov	r0, #48	; 0x30
   171bc:	mov	r8, #1
   171c0:	mov	r4, #0
   171c4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   171c8:	cmp	r1, #0
   171cc:	bne	16d78 <__mempcpy_chk@plt+0x56e8>
   171d0:	cmp	r8, #0
   171d4:	beq	16cf4 <__mempcpy_chk@plt+0x5664>
   171d8:	b	16ae4 <__mempcpy_chk@plt+0x5454>
   171dc:	mov	r4, #0
   171e0:	ldr	ip, [fp, #-84]	; 0xffffffac
   171e4:	b	17220 <__mempcpy_chk@plt+0x5b90>
   171e8:	ldr	r1, [sp, #84]	; 0x54
   171ec:	ldr	ip, [fp, #-84]	; 0xffffffac
   171f0:	mov	r4, #0
   171f4:	cmp	r6, r1
   171f8:	bcs	17220 <__mempcpy_chk@plt+0x5b90>
   171fc:	ldrb	r0, [ip, r6]
   17200:	cmp	r0, #0
   17204:	beq	17220 <__mempcpy_chk@plt+0x5b90>
   17208:	ldr	r0, [sp, #64]	; 0x40
   1720c:	add	r0, r0, #1
   17210:	add	r6, r0, r7
   17214:	str	r0, [sp, #64]	; 0x40
   17218:	cmp	r6, r1
   1721c:	bcc	171fc <__mempcpy_chk@plt+0x5b6c>
   17220:	ldr	r6, [sp, #64]	; 0x40
   17224:	b	1722c <__mempcpy_chk@plt+0x5b9c>
   17228:	ldr	ip, [fp, #-84]	; 0xffffffac
   1722c:	mov	r1, r6
   17230:	ldr	r6, [sp, #76]	; 0x4c
   17234:	ldr	sl, [sp, #56]	; 0x38
   17238:	ldr	r0, [sp, #44]	; 0x2c
   1723c:	cmp	r1, #1
   17240:	orr	r2, r4, r0
   17244:	mov	r0, r1
   17248:	bhi	17268 <__mempcpy_chk@plt+0x5bd8>
   1724c:	tst	r2, #1
   17250:	beq	17268 <__mempcpy_chk@plt+0x5bd8>
   17254:	ldr	lr, [sp, #84]	; 0x54
   17258:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1725c:	cmp	r0, #0
   17260:	bne	16a64 <__mempcpy_chk@plt+0x53d4>
   17264:	b	16d3c <__mempcpy_chk@plt+0x56ac>
   17268:	str	r2, [sp, #64]	; 0x40
   1726c:	add	r0, r0, r7
   17270:	add	r1, r7, #1
   17274:	ldr	lr, [sp, #84]	; 0x54
   17278:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1727c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17280:	mov	r3, #0
   17284:	str	r0, [sp, #56]	; 0x38
   17288:	ldr	r0, [sp, #64]	; 0x40
   1728c:	tst	r0, #1
   17290:	bne	17378 <__mempcpy_chk@plt+0x5ce8>
   17294:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17298:	tst	r0, #1
   1729c:	bne	17518 <__mempcpy_chk@plt+0x5e88>
   172a0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   172a4:	cmp	r7, #2
   172a8:	movwne	r3, #1
   172ac:	orr	r3, r3, r2
   172b0:	tst	r3, #1
   172b4:	bne	172ec <__mempcpy_chk@plt+0x5c5c>
   172b8:	cmp	r9, sl
   172bc:	add	r3, r9, #1
   172c0:	movcc	r2, #39	; 0x27
   172c4:	strbcc	r2, [r6, r9]
   172c8:	cmp	r3, sl
   172cc:	movcc	r2, #36	; 0x24
   172d0:	strbcc	r2, [r6, r3]
   172d4:	add	r3, r9, #2
   172d8:	add	r9, r9, #3
   172dc:	cmp	r3, sl
   172e0:	movcc	r2, #39	; 0x27
   172e4:	strbcc	r2, [r6, r3]
   172e8:	mov	r2, #1
   172ec:	cmp	r9, sl
   172f0:	mov	r0, r2
   172f4:	movcc	r3, #92	; 0x5c
   172f8:	strbcc	r3, [r6, r9]
   172fc:	add	r3, r9, #1
   17300:	cmp	r3, sl
   17304:	andcc	r7, r5, #192	; 0xc0
   17308:	movcc	r2, #48	; 0x30
   1730c:	orrcc	r7, r2, r7, lsr #6
   17310:	strbcc	r7, [r6, r3]
   17314:	add	r3, r9, #2
   17318:	add	r9, r9, #3
   1731c:	cmp	r3, sl
   17320:	lsrcc	r7, r5, #3
   17324:	movcc	r2, #6
   17328:	bficc	r7, r2, #3, #29
   1732c:	mov	r2, #6
   17330:	strbcc	r7, [r6, r3]
   17334:	bfi	r5, r2, #3, #29
   17338:	mov	r3, #1
   1733c:	mov	r2, r0
   17340:	ldr	r0, [sp, #56]	; 0x38
   17344:	and	r8, r3, #1
   17348:	cmp	r0, r1
   1734c:	bhi	173ac <__mempcpy_chk@plt+0x5d1c>
   17350:	b	173ec <__mempcpy_chk@plt+0x5d5c>
   17354:	cmp	r9, sl
   17358:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1735c:	strbcc	r5, [r6, r9]
   17360:	add	r9, r9, #1
   17364:	ldrb	r5, [ip, r1]
   17368:	add	r1, r1, #1
   1736c:	ldr	r0, [sp, #64]	; 0x40
   17370:	tst	r0, #1
   17374:	beq	17294 <__mempcpy_chk@plt+0x5c04>
   17378:	ldr	r7, [fp, #-56]	; 0xffffffc8
   1737c:	tst	r7, #1
   17380:	beq	17394 <__mempcpy_chk@plt+0x5d04>
   17384:	cmp	r9, sl
   17388:	movcc	r7, #92	; 0x5c
   1738c:	strbcc	r7, [r6, r9]
   17390:	add	r9, r9, #1
   17394:	mov	r7, #0
   17398:	str	r7, [fp, #-56]	; 0xffffffc8
   1739c:	ldr	r0, [sp, #56]	; 0x38
   173a0:	and	r8, r3, #1
   173a4:	cmp	r0, r1
   173a8:	bls	173ec <__mempcpy_chk@plt+0x5d5c>
   173ac:	cmp	r8, #0
   173b0:	mvn	r7, r2
   173b4:	movwne	r8, #1
   173b8:	orr	r7, r7, r8
   173bc:	tst	r7, #1
   173c0:	bne	17354 <__mempcpy_chk@plt+0x5cc4>
   173c4:	cmp	r9, sl
   173c8:	movcc	r7, #39	; 0x27
   173cc:	strbcc	r7, [r6, r9]
   173d0:	add	r7, r9, #1
   173d4:	add	r9, r9, #2
   173d8:	cmp	r7, sl
   173dc:	movcc	r2, #39	; 0x27
   173e0:	strbcc	r2, [r6, r7]
   173e4:	mov	r2, #0
   173e8:	b	17354 <__mempcpy_chk@plt+0x5cc4>
   173ec:	cmp	r8, #0
   173f0:	sub	r7, r1, #1
   173f4:	mov	r0, r5
   173f8:	str	r2, [fp, #-48]	; 0xffffffd0
   173fc:	movwne	r8, #1
   17400:	cmp	r8, #0
   17404:	beq	16cf4 <__mempcpy_chk@plt+0x5664>
   17408:	b	16ae4 <__mempcpy_chk@plt+0x5454>
   1740c:	mov	lr, r7
   17410:	b	17418 <__mempcpy_chk@plt+0x5d88>
   17414:	mvn	lr, #0
   17418:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1741c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17420:	eor	r0, r7, #2
   17424:	orr	r0, r0, r9
   17428:	clz	r0, r0
   1742c:	lsr	r0, r0, #5
   17430:	tst	r1, r0
   17434:	bne	17534 <__mempcpy_chk@plt+0x5ea4>
   17438:	mov	r0, r1
   1743c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   17440:	cmp	r7, #2
   17444:	movwne	r1, #1
   17448:	orr	r0, r0, r1
   1744c:	tst	r0, #1
   17450:	ldreq	r0, [sp, #52]	; 0x34
   17454:	streq	lr, [sp, #84]	; 0x54
   17458:	eoreq	r0, r0, #1
   1745c:	tsteq	r0, #1
   17460:	bne	175f8 <__mempcpy_chk@plt+0x5f68>
   17464:	tst	r4, #1
   17468:	bne	175b4 <__mempcpy_chk@plt+0x5f24>
   1746c:	ldr	r6, [sp, #48]	; 0x30
   17470:	mov	r8, #0
   17474:	cmp	r6, #0
   17478:	beq	175f0 <__mempcpy_chk@plt+0x5f60>
   1747c:	ldr	r0, [sp, #80]	; 0x50
   17480:	mov	r1, #0
   17484:	cmp	sl, #0
   17488:	mov	r4, #0
   1748c:	str	r1, [fp, #-72]	; 0xffffffb8
   17490:	beq	16384 <__mempcpy_chk@plt+0x4cf4>
   17494:	b	175f8 <__mempcpy_chk@plt+0x5f68>
   17498:	ldrb	r1, [r0, #3]
   1749c:	cmp	r1, #56	; 0x38
   174a0:	ldrbeq	r1, [r0, #4]
   174a4:	cmpeq	r1, #48	; 0x30
   174a8:	bne	1657c <__mempcpy_chk@plt+0x4eec>
   174ac:	ldrb	r1, [r0, #5]
   174b0:	cmp	r1, #51	; 0x33
   174b4:	ldrbeq	r1, [r0, #6]
   174b8:	cmpeq	r1, #48	; 0x30
   174bc:	bne	1657c <__mempcpy_chk@plt+0x4eec>
   174c0:	ldrb	r0, [r0, #7]
   174c4:	cmp	r0, #0
   174c8:	movw	r0, #46730	; 0xb68a
   174cc:	movt	r0, #1
   174d0:	str	r0, [sp, #68]	; 0x44
   174d4:	bne	1657c <__mempcpy_chk@plt+0x4eec>
   174d8:	b	16598 <__mempcpy_chk@plt+0x4f08>
   174dc:	ldrb	r1, [r0, #4]
   174e0:	cmp	r1, #48	; 0x30
   174e4:	ldrbeq	r1, [r0, #5]
   174e8:	cmpeq	r1, #51	; 0x33
   174ec:	bne	16660 <__mempcpy_chk@plt+0x4fd0>
   174f0:	ldrb	r1, [r0, #6]
   174f4:	cmp	r1, #48	; 0x30
   174f8:	ldrbeq	r0, [r0, #7]
   174fc:	cmpeq	r0, #0
   17500:	bne	16660 <__mempcpy_chk@plt+0x4fd0>
   17504:	movw	r0, #46734	; 0xb68e
   17508:	movt	r0, #1
   1750c:	str	r0, [sp, #72]	; 0x48
   17510:	b	16680 <__mempcpy_chk@plt+0x4ff0>
   17514:	ldr	r7, [fp, #-64]	; 0xffffffc0
   17518:	ldr	r2, [sp, #80]	; 0x50
   1751c:	b	17554 <__mempcpy_chk@plt+0x5ec4>
   17520:	ldr	ip, [fp, #-84]	; 0xffffffac
   17524:	mov	r2, #1
   17528:	mov	lr, r4
   1752c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   17530:	b	17554 <__mempcpy_chk@plt+0x5ec4>
   17534:	ldr	r2, [sp, #80]	; 0x50
   17538:	mov	r7, #2
   1753c:	b	17554 <__mempcpy_chk@plt+0x5ec4>
   17540:	ldr	r6, [sp, #76]	; 0x4c
   17544:	ldr	ip, [fp, #-84]	; 0xffffffac
   17548:	ldr	lr, [sp, #84]	; 0x54
   1754c:	ldr	r2, [sp, #80]	; 0x50
   17550:	mov	r7, #2
   17554:	mov	r0, #0
   17558:	ldr	r1, [fp, #12]
   1755c:	tst	r2, #1
   17560:	mov	r2, r7
   17564:	mov	r3, lr
   17568:	str	r0, [sp, #8]
   1756c:	ldr	r0, [sp, #68]	; 0x44
   17570:	movwne	r2, #4
   17574:	cmp	r7, #2
   17578:	movne	r2, r7
   1757c:	str	r2, [sp]
   17580:	mov	r2, ip
   17584:	bic	r1, r1, #2
   17588:	str	r0, [sp, #12]
   1758c:	ldr	r0, [sp, #72]	; 0x48
   17590:	str	r1, [sp, #4]
   17594:	mov	r1, sl
   17598:	str	r0, [sp, #16]
   1759c:	mov	r0, r6
   175a0:	bl	16308 <__mempcpy_chk@plt+0x4c78>
   175a4:	mov	r9, r0
   175a8:	mov	r0, r9
   175ac:	sub	sp, fp, #28
   175b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   175b4:	mov	r0, #5
   175b8:	ldr	r1, [sp, #48]	; 0x30
   175bc:	ldr	r2, [fp, #-84]	; 0xffffffac
   175c0:	ldr	r3, [sp, #84]	; 0x54
   175c4:	str	r0, [sp]
   175c8:	ldr	r0, [fp, #12]
   175cc:	str	r0, [sp, #4]
   175d0:	ldr	r0, [fp, #16]
   175d4:	str	r0, [sp, #8]
   175d8:	ldr	r0, [sp, #68]	; 0x44
   175dc:	str	r0, [sp, #12]
   175e0:	ldr	r0, [sp, #72]	; 0x48
   175e4:	str	r0, [sp, #16]
   175e8:	ldr	r0, [sp, #76]	; 0x4c
   175ec:	b	175a0 <__mempcpy_chk@plt+0x5f10>
   175f0:	mov	r0, #0
   175f4:	str	r0, [fp, #-72]	; 0xffffffb8
   175f8:	ldr	r1, [sp, #92]	; 0x5c
   175fc:	cmp	r1, #0
   17600:	beq	17640 <__mempcpy_chk@plt+0x5fb0>
   17604:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17608:	ldr	r2, [sp, #76]	; 0x4c
   1760c:	tst	r0, #1
   17610:	bne	17644 <__mempcpy_chk@plt+0x5fb4>
   17614:	ldrb	r0, [r1]
   17618:	cmp	r0, #0
   1761c:	beq	17644 <__mempcpy_chk@plt+0x5fb4>
   17620:	add	r1, r1, #1
   17624:	cmp	r9, sl
   17628:	strbcc	r0, [r2, r9]
   1762c:	add	r9, r9, #1
   17630:	ldrb	r0, [r1], #1
   17634:	cmp	r0, #0
   17638:	bne	17624 <__mempcpy_chk@plt+0x5f94>
   1763c:	b	17644 <__mempcpy_chk@plt+0x5fb4>
   17640:	ldr	r2, [sp, #76]	; 0x4c
   17644:	cmp	r9, sl
   17648:	movcc	r0, #0
   1764c:	strbcc	r0, [r2, r9]
   17650:	mov	r0, r9
   17654:	sub	sp, fp, #28
   17658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1765c:	mov	r2, #1
   17660:	b	1752c <__mempcpy_chk@plt+0x5e9c>
   17664:	ldr	r2, [sp, #80]	; 0x50
   17668:	mov	r7, #5
   1766c:	b	17554 <__mempcpy_chk@plt+0x5ec4>
   17670:	bl	11654 <abort@plt>
   17674:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17678:	add	fp, sp, #28
   1767c:	sub	sp, sp, #28
   17680:	movw	r5, #49640	; 0xc1e8
   17684:	cmp	r2, #0
   17688:	mov	r4, r1
   1768c:	mov	r7, r0
   17690:	str	r0, [sp, #20]
   17694:	movt	r5, #2
   17698:	movne	r5, r2
   1769c:	bl	1151c <__errno_location@plt>
   176a0:	mov	sl, r0
   176a4:	ldm	r5, {r0, r1}
   176a8:	ldr	r2, [r5, #40]	; 0x28
   176ac:	ldr	r3, [r5, #44]	; 0x2c
   176b0:	add	r9, r5, #8
   176b4:	ldr	r6, [sl]
   176b8:	orr	r8, r1, #1
   176bc:	mov	r1, #0
   176c0:	str	r6, [sp, #24]
   176c4:	stm	sp, {r0, r8, r9}
   176c8:	str	r2, [sp, #12]
   176cc:	str	r3, [sp, #16]
   176d0:	mov	r0, #0
   176d4:	mov	r2, r7
   176d8:	mov	r3, r4
   176dc:	mov	r6, r4
   176e0:	bl	16308 <__mempcpy_chk@plt+0x4c78>
   176e4:	add	r7, r0, #1
   176e8:	mov	r0, r7
   176ec:	bl	190f0 <__mempcpy_chk@plt+0x7a60>
   176f0:	mov	r4, r0
   176f4:	ldr	r0, [r5]
   176f8:	ldr	r2, [r5, #44]	; 0x2c
   176fc:	ldr	r1, [r5, #40]	; 0x28
   17700:	mov	r3, r6
   17704:	stm	sp, {r0, r8, r9}
   17708:	str	r2, [sp, #16]
   1770c:	str	r1, [sp, #12]
   17710:	mov	r0, r4
   17714:	mov	r1, r7
   17718:	ldr	r2, [sp, #20]
   1771c:	bl	16308 <__mempcpy_chk@plt+0x4c78>
   17720:	ldr	r0, [sp, #24]
   17724:	str	r0, [sl]
   17728:	mov	r0, r4
   1772c:	sub	sp, fp, #28
   17730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17734:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17738:	add	fp, sp, #28
   1773c:	sub	sp, sp, #36	; 0x24
   17740:	movw	r8, #49640	; 0xc1e8
   17744:	cmp	r3, #0
   17748:	mov	r4, r2
   1774c:	str	r2, [sp, #24]
   17750:	mov	r5, r1
   17754:	mov	r6, r0
   17758:	str	r0, [sp, #20]
   1775c:	movt	r8, #2
   17760:	movne	r8, r3
   17764:	bl	1151c <__errno_location@plt>
   17768:	str	r0, [sp, #28]
   1776c:	cmp	r4, #0
   17770:	add	sl, r8, #8
   17774:	ldm	r8, {r3, r9}
   17778:	ldr	r7, [r0]
   1777c:	ldr	r1, [r8, #40]	; 0x28
   17780:	ldr	r2, [r8, #44]	; 0x2c
   17784:	mov	r0, #0
   17788:	orreq	r9, r9, #1
   1778c:	str	r7, [sp, #32]
   17790:	mov	r7, r5
   17794:	stm	sp, {r3, r9, sl}
   17798:	str	r1, [sp, #12]
   1779c:	str	r2, [sp, #16]
   177a0:	mov	r1, #0
   177a4:	mov	r2, r6
   177a8:	mov	r3, r5
   177ac:	bl	16308 <__mempcpy_chk@plt+0x4c78>
   177b0:	add	r4, r0, #1
   177b4:	mov	r5, r0
   177b8:	mov	r0, r4
   177bc:	bl	190f0 <__mempcpy_chk@plt+0x7a60>
   177c0:	mov	r6, r0
   177c4:	ldr	r0, [r8]
   177c8:	ldr	r2, [r8, #44]	; 0x2c
   177cc:	ldr	r1, [r8, #40]	; 0x28
   177d0:	mov	r3, r7
   177d4:	stm	sp, {r0, r9, sl}
   177d8:	str	r2, [sp, #16]
   177dc:	str	r1, [sp, #12]
   177e0:	mov	r0, r6
   177e4:	mov	r1, r4
   177e8:	ldr	r2, [sp, #20]
   177ec:	bl	16308 <__mempcpy_chk@plt+0x4c78>
   177f0:	ldr	r0, [sp, #24]
   177f4:	ldr	r1, [sp, #32]
   177f8:	ldr	r2, [sp, #28]
   177fc:	cmp	r0, #0
   17800:	str	r1, [r2]
   17804:	strne	r5, [r0]
   17808:	mov	r0, r6
   1780c:	sub	sp, fp, #28
   17810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17814:	push	{r4, r5, r6, r7, fp, lr}
   17818:	add	fp, sp, #16
   1781c:	movw	r4, #49536	; 0xc180
   17820:	movt	r4, #2
   17824:	ldrd	r6, [r4]
   17828:	cmp	r7, #2
   1782c:	blt	17858 <__mempcpy_chk@plt+0x61c8>
   17830:	add	r5, r6, #12
   17834:	mov	r7, #0
   17838:	ldr	r0, [r5, r7, lsl #3]
   1783c:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   17840:	ldr	r1, [r4, #4]
   17844:	add	r2, r7, #2
   17848:	add	r0, r7, #1
   1784c:	mov	r7, r0
   17850:	cmp	r2, r1
   17854:	blt	17838 <__mempcpy_chk@plt+0x61a8>
   17858:	ldr	r0, [r6, #4]
   1785c:	movw	r5, #49688	; 0xc218
   17860:	movt	r5, #2
   17864:	cmp	r0, r5
   17868:	beq	1787c <__mempcpy_chk@plt+0x61ec>
   1786c:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   17870:	mov	r0, #256	; 0x100
   17874:	str	r0, [r4, #8]
   17878:	str	r5, [r4, #12]
   1787c:	add	r5, r4, #8
   17880:	cmp	r6, r5
   17884:	beq	17894 <__mempcpy_chk@plt+0x6204>
   17888:	mov	r0, r6
   1788c:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   17890:	str	r5, [r4]
   17894:	mov	r0, #1
   17898:	str	r0, [r4, #4]
   1789c:	pop	{r4, r5, r6, r7, fp, pc}
   178a0:	movw	r3, #49640	; 0xc1e8
   178a4:	mvn	r2, #0
   178a8:	movt	r3, #2
   178ac:	b	178b0 <__mempcpy_chk@plt+0x6220>
   178b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178b4:	add	fp, sp, #28
   178b8:	sub	sp, sp, #44	; 0x2c
   178bc:	mov	r7, r3
   178c0:	str	r2, [sp, #36]	; 0x24
   178c4:	str	r1, [sp, #32]
   178c8:	mov	r5, r0
   178cc:	bl	1151c <__errno_location@plt>
   178d0:	cmp	r5, #0
   178d4:	blt	17a38 <__mempcpy_chk@plt+0x63a8>
   178d8:	cmn	r5, #-2147483647	; 0x80000001
   178dc:	beq	17a38 <__mempcpy_chk@plt+0x63a8>
   178e0:	movw	r8, #49536	; 0xc180
   178e4:	mov	r4, r0
   178e8:	movt	r8, #2
   178ec:	ldr	r6, [r8]
   178f0:	ldr	r1, [r8, #4]
   178f4:	ldr	r0, [r0]
   178f8:	str	r4, [sp, #28]
   178fc:	cmp	r1, r5
   17900:	str	r0, [sp, #24]
   17904:	ble	17910 <__mempcpy_chk@plt+0x6280>
   17908:	mov	sl, r6
   1790c:	b	17974 <__mempcpy_chk@plt+0x62e4>
   17910:	mov	r0, #8
   17914:	add	r9, r8, #8
   17918:	add	r2, r5, #1
   1791c:	str	r1, [fp, #-32]	; 0xffffffe0
   17920:	mvn	r3, #-2147483648	; 0x80000000
   17924:	str	r0, [sp]
   17928:	subs	r0, r6, r9
   1792c:	sub	r2, r2, r1
   17930:	sub	r1, fp, #32
   17934:	movne	r0, r6
   17938:	bl	192f0 <__mempcpy_chk@plt+0x7c60>
   1793c:	str	r0, [r8]
   17940:	cmp	r6, r9
   17944:	mov	sl, r0
   17948:	ldrdeq	r0, [r8, #8]
   1794c:	stmeq	sl, {r0, r1}
   17950:	ldr	r1, [r8, #4]
   17954:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17958:	add	r0, sl, r1, lsl #3
   1795c:	sub	r1, r2, r1
   17960:	lsl	r2, r1, #3
   17964:	mov	r1, #0
   17968:	bl	11540 <memset@plt>
   1796c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17970:	str	r0, [r8, #4]
   17974:	mov	r9, sl
   17978:	ldr	r6, [r9, r5, lsl #3]!
   1797c:	ldr	r4, [r9, #4]!
   17980:	ldm	r7, {r0, r1}
   17984:	ldr	r2, [r7, #40]	; 0x28
   17988:	ldr	r3, [r7, #44]	; 0x2c
   1798c:	orr	r8, r1, #1
   17990:	add	r1, r7, #8
   17994:	stm	sp, {r0, r8}
   17998:	add	r0, sp, #8
   1799c:	str	r1, [sp, #20]
   179a0:	stm	r0, {r1, r2, r3}
   179a4:	mov	r0, r4
   179a8:	mov	r1, r6
   179ac:	ldr	r2, [sp, #32]
   179b0:	ldr	r3, [sp, #36]	; 0x24
   179b4:	bl	16308 <__mempcpy_chk@plt+0x4c78>
   179b8:	cmp	r6, r0
   179bc:	bhi	17a20 <__mempcpy_chk@plt+0x6390>
   179c0:	add	r6, r0, #1
   179c4:	movw	r0, #49688	; 0xc218
   179c8:	movt	r0, #2
   179cc:	str	r6, [sl, r5, lsl #3]
   179d0:	cmp	r4, r0
   179d4:	beq	179e0 <__mempcpy_chk@plt+0x6350>
   179d8:	mov	r0, r4
   179dc:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   179e0:	mov	r0, r6
   179e4:	bl	190f0 <__mempcpy_chk@plt+0x7a60>
   179e8:	str	r0, [r9]
   179ec:	mov	r4, r0
   179f0:	add	r3, sp, #8
   179f4:	ldr	r0, [r7]
   179f8:	ldr	r1, [r7, #40]	; 0x28
   179fc:	ldr	r2, [r7, #44]	; 0x2c
   17a00:	stm	sp, {r0, r8}
   17a04:	ldr	r0, [sp, #20]
   17a08:	stm	r3, {r0, r1, r2}
   17a0c:	mov	r0, r4
   17a10:	mov	r1, r6
   17a14:	ldr	r2, [sp, #32]
   17a18:	ldr	r3, [sp, #36]	; 0x24
   17a1c:	bl	16308 <__mempcpy_chk@plt+0x4c78>
   17a20:	ldr	r1, [sp, #24]
   17a24:	ldr	r0, [sp, #28]
   17a28:	str	r1, [r0]
   17a2c:	mov	r0, r4
   17a30:	sub	sp, fp, #28
   17a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a38:	bl	11654 <abort@plt>
   17a3c:	movw	r3, #49640	; 0xc1e8
   17a40:	movt	r3, #2
   17a44:	b	178b0 <__mempcpy_chk@plt+0x6220>
   17a48:	movw	r3, #49640	; 0xc1e8
   17a4c:	mov	r1, r0
   17a50:	mov	r0, #0
   17a54:	mvn	r2, #0
   17a58:	movt	r3, #2
   17a5c:	b	178b0 <__mempcpy_chk@plt+0x6220>
   17a60:	movw	r3, #49640	; 0xc1e8
   17a64:	mov	r2, r1
   17a68:	mov	r1, r0
   17a6c:	mov	r0, #0
   17a70:	movt	r3, #2
   17a74:	b	178b0 <__mempcpy_chk@plt+0x6220>
   17a78:	push	{fp, lr}
   17a7c:	mov	fp, sp
   17a80:	sub	sp, sp, #48	; 0x30
   17a84:	vmov.i32	q8, #0	; 0x00000000
   17a88:	mov	ip, #32
   17a8c:	mov	r3, sp
   17a90:	mov	lr, r2
   17a94:	cmp	r1, #10
   17a98:	add	r2, r3, #16
   17a9c:	vst1.64	{d16-d17}, [r3], ip
   17aa0:	vst1.64	{d16-d17}, [r3]
   17aa4:	vst1.64	{d16-d17}, [r2]
   17aa8:	beq	17ac8 <__mempcpy_chk@plt+0x6438>
   17aac:	str	r1, [sp]
   17ab0:	mov	r3, sp
   17ab4:	mov	r1, lr
   17ab8:	mvn	r2, #0
   17abc:	bl	178b0 <__mempcpy_chk@plt+0x6220>
   17ac0:	mov	sp, fp
   17ac4:	pop	{fp, pc}
   17ac8:	bl	11654 <abort@plt>
   17acc:	push	{r4, sl, fp, lr}
   17ad0:	add	fp, sp, #8
   17ad4:	sub	sp, sp, #48	; 0x30
   17ad8:	mov	ip, r3
   17adc:	mov	r3, sp
   17ae0:	vmov.i32	q8, #0	; 0x00000000
   17ae4:	mov	lr, #32
   17ae8:	cmp	r1, #10
   17aec:	add	r4, r3, #16
   17af0:	vst1.64	{d16-d17}, [r3], lr
   17af4:	vst1.64	{d16-d17}, [r3]
   17af8:	vst1.64	{d16-d17}, [r4]
   17afc:	beq	17b1c <__mempcpy_chk@plt+0x648c>
   17b00:	str	r1, [sp]
   17b04:	mov	r1, r2
   17b08:	mov	r3, sp
   17b0c:	mov	r2, ip
   17b10:	bl	178b0 <__mempcpy_chk@plt+0x6220>
   17b14:	sub	sp, fp, #8
   17b18:	pop	{r4, sl, fp, pc}
   17b1c:	bl	11654 <abort@plt>
   17b20:	push	{fp, lr}
   17b24:	mov	fp, sp
   17b28:	sub	sp, sp, #48	; 0x30
   17b2c:	mov	r3, sp
   17b30:	vmov.i32	q8, #0	; 0x00000000
   17b34:	mov	ip, #32
   17b38:	cmp	r0, #10
   17b3c:	add	r2, r3, #16
   17b40:	vst1.64	{d16-d17}, [r3], ip
   17b44:	vst1.64	{d16-d17}, [r3]
   17b48:	vst1.64	{d16-d17}, [r2]
   17b4c:	beq	17b6c <__mempcpy_chk@plt+0x64dc>
   17b50:	str	r0, [sp]
   17b54:	mov	r3, sp
   17b58:	mov	r0, #0
   17b5c:	mvn	r2, #0
   17b60:	bl	178b0 <__mempcpy_chk@plt+0x6220>
   17b64:	mov	sp, fp
   17b68:	pop	{fp, pc}
   17b6c:	bl	11654 <abort@plt>
   17b70:	push	{fp, lr}
   17b74:	mov	fp, sp
   17b78:	sub	sp, sp, #48	; 0x30
   17b7c:	mov	r3, sp
   17b80:	vmov.i32	q8, #0	; 0x00000000
   17b84:	mov	ip, #32
   17b88:	cmp	r0, #10
   17b8c:	add	lr, r3, #16
   17b90:	vst1.64	{d16-d17}, [r3], ip
   17b94:	vst1.64	{d16-d17}, [r3]
   17b98:	vst1.64	{d16-d17}, [lr]
   17b9c:	beq	17bb8 <__mempcpy_chk@plt+0x6528>
   17ba0:	str	r0, [sp]
   17ba4:	mov	r3, sp
   17ba8:	mov	r0, #0
   17bac:	bl	178b0 <__mempcpy_chk@plt+0x6220>
   17bb0:	mov	sp, fp
   17bb4:	pop	{fp, pc}
   17bb8:	bl	11654 <abort@plt>
   17bbc:	push	{r4, sl, fp, lr}
   17bc0:	add	fp, sp, #8
   17bc4:	sub	sp, sp, #48	; 0x30
   17bc8:	mov	lr, r0
   17bcc:	movw	r0, #49640	; 0xc1e8
   17bd0:	mov	r3, #32
   17bd4:	mov	ip, r1
   17bd8:	mov	r4, #1
   17bdc:	movt	r0, #2
   17be0:	add	r1, r0, #16
   17be4:	vld1.64	{d16-d17}, [r0], r3
   17be8:	mov	r3, sp
   17bec:	vld1.64	{d18-d19}, [r1]
   17bf0:	add	r1, r3, #16
   17bf4:	vld1.64	{d20-d21}, [r0]
   17bf8:	add	r0, r3, #32
   17bfc:	vst1.64	{d18-d19}, [r1]
   17c00:	mov	r1, r3
   17c04:	vst1.64	{d20-d21}, [r0]
   17c08:	mov	r0, #28
   17c0c:	and	r0, r0, r2, lsr #3
   17c10:	and	r2, r2, #31
   17c14:	vst1.64	{d16-d17}, [r1], r0
   17c18:	ldr	r0, [r1, #8]
   17c1c:	bic	r4, r4, r0, lsr r2
   17c20:	eor	r0, r0, r4, lsl r2
   17c24:	mov	r2, ip
   17c28:	str	r0, [r1, #8]
   17c2c:	mov	r0, #0
   17c30:	mov	r1, lr
   17c34:	bl	178b0 <__mempcpy_chk@plt+0x6220>
   17c38:	sub	sp, fp, #8
   17c3c:	pop	{r4, sl, fp, pc}
   17c40:	push	{fp, lr}
   17c44:	mov	fp, sp
   17c48:	sub	sp, sp, #48	; 0x30
   17c4c:	mov	ip, r0
   17c50:	movw	r0, #49640	; 0xc1e8
   17c54:	mov	r3, #32
   17c58:	movt	r0, #2
   17c5c:	add	r2, r0, #16
   17c60:	vld1.64	{d16-d17}, [r0], r3
   17c64:	mov	r3, sp
   17c68:	vld1.64	{d18-d19}, [r2]
   17c6c:	add	r2, r3, #16
   17c70:	vld1.64	{d20-d21}, [r0]
   17c74:	add	r0, r3, #32
   17c78:	vst1.64	{d18-d19}, [r2]
   17c7c:	mov	r2, r3
   17c80:	vst1.64	{d20-d21}, [r0]
   17c84:	mov	r0, #28
   17c88:	and	r0, r0, r1, lsr #3
   17c8c:	and	r1, r1, #31
   17c90:	vst1.64	{d16-d17}, [r2], r0
   17c94:	mov	r0, #1
   17c98:	ldr	lr, [r2, #8]
   17c9c:	bic	r0, r0, lr, lsr r1
   17ca0:	eor	r0, lr, r0, lsl r1
   17ca4:	mov	r1, ip
   17ca8:	str	r0, [r2, #8]
   17cac:	mov	r0, #0
   17cb0:	mvn	r2, #0
   17cb4:	bl	178b0 <__mempcpy_chk@plt+0x6220>
   17cb8:	mov	sp, fp
   17cbc:	pop	{fp, pc}
   17cc0:	push	{fp, lr}
   17cc4:	mov	fp, sp
   17cc8:	sub	sp, sp, #48	; 0x30
   17ccc:	movw	r2, #49640	; 0xc1e8
   17cd0:	mov	r3, #32
   17cd4:	mov	r1, r0
   17cd8:	movt	r2, #2
   17cdc:	add	r0, r2, #16
   17ce0:	vld1.64	{d16-d17}, [r2], r3
   17ce4:	mov	r3, sp
   17ce8:	vld1.64	{d18-d19}, [r0]
   17cec:	add	r0, r3, #16
   17cf0:	vld1.64	{d20-d21}, [r2]
   17cf4:	mov	r2, r3
   17cf8:	vst1.64	{d18-d19}, [r0]
   17cfc:	add	r0, r3, #32
   17d00:	vst1.64	{d20-d21}, [r0]
   17d04:	mov	r0, #12
   17d08:	vst1.64	{d16-d17}, [r2], r0
   17d0c:	ldr	r0, [r2]
   17d10:	orr	r0, r0, #67108864	; 0x4000000
   17d14:	str	r0, [r2]
   17d18:	mov	r0, #0
   17d1c:	mvn	r2, #0
   17d20:	bl	178b0 <__mempcpy_chk@plt+0x6220>
   17d24:	mov	sp, fp
   17d28:	pop	{fp, pc}
   17d2c:	push	{fp, lr}
   17d30:	mov	fp, sp
   17d34:	sub	sp, sp, #48	; 0x30
   17d38:	mov	ip, r1
   17d3c:	mov	r1, r0
   17d40:	movw	r0, #49640	; 0xc1e8
   17d44:	mov	r3, #32
   17d48:	movt	r0, #2
   17d4c:	add	r2, r0, #16
   17d50:	vld1.64	{d16-d17}, [r0], r3
   17d54:	mov	r3, sp
   17d58:	vld1.64	{d18-d19}, [r2]
   17d5c:	add	r2, r3, #16
   17d60:	vld1.64	{d20-d21}, [r0]
   17d64:	add	r0, r3, #32
   17d68:	vst1.64	{d18-d19}, [r2]
   17d6c:	mov	r2, r3
   17d70:	vst1.64	{d20-d21}, [r0]
   17d74:	mov	r0, #12
   17d78:	vst1.64	{d16-d17}, [r2], r0
   17d7c:	ldr	r0, [r2]
   17d80:	orr	r0, r0, #67108864	; 0x4000000
   17d84:	str	r0, [r2]
   17d88:	mov	r0, #0
   17d8c:	mov	r2, ip
   17d90:	bl	178b0 <__mempcpy_chk@plt+0x6220>
   17d94:	mov	sp, fp
   17d98:	pop	{fp, pc}
   17d9c:	push	{r4, sl, fp, lr}
   17da0:	add	fp, sp, #8
   17da4:	sub	sp, sp, #96	; 0x60
   17da8:	mov	ip, r2
   17dac:	mov	r2, sp
   17db0:	vmov.i32	q8, #0	; 0x00000000
   17db4:	mov	r4, #28
   17db8:	cmp	r1, #10
   17dbc:	mov	r3, r2
   17dc0:	add	lr, r2, #16
   17dc4:	vst1.64	{d16-d17}, [r3], r4
   17dc8:	vst1.64	{d16-d17}, [lr]
   17dcc:	vst1.32	{d16-d17}, [r3]
   17dd0:	beq	17e20 <__mempcpy_chk@plt+0x6790>
   17dd4:	vld1.64	{d16-d17}, [r2], r4
   17dd8:	vld1.64	{d18-d19}, [lr]
   17ddc:	add	r3, sp, #48	; 0x30
   17de0:	add	r4, r3, #4
   17de4:	vld1.32	{d20-d21}, [r2]
   17de8:	add	r2, r3, #20
   17dec:	vst1.32	{d16-d17}, [r4]
   17df0:	vst1.32	{d18-d19}, [r2]
   17df4:	add	r2, r3, #32
   17df8:	vst1.32	{d20-d21}, [r2]
   17dfc:	str	r1, [sp, #48]	; 0x30
   17e00:	mvn	r2, #0
   17e04:	ldr	r1, [sp, #60]	; 0x3c
   17e08:	orr	r1, r1, #67108864	; 0x4000000
   17e0c:	str	r1, [sp, #60]	; 0x3c
   17e10:	mov	r1, ip
   17e14:	bl	178b0 <__mempcpy_chk@plt+0x6220>
   17e18:	sub	sp, fp, #8
   17e1c:	pop	{r4, sl, fp, pc}
   17e20:	bl	11654 <abort@plt>
   17e24:	push	{r4, r5, fp, lr}
   17e28:	add	fp, sp, #8
   17e2c:	sub	sp, sp, #48	; 0x30
   17e30:	mov	ip, r3
   17e34:	movw	r3, #49640	; 0xc1e8
   17e38:	mov	lr, #32
   17e3c:	cmp	r1, #0
   17e40:	mov	r5, sp
   17e44:	movt	r3, #2
   17e48:	cmpne	r2, #0
   17e4c:	add	r4, r3, #16
   17e50:	vld1.64	{d16-d17}, [r3], lr
   17e54:	vld1.64	{d18-d19}, [r4]
   17e58:	add	r4, r5, #16
   17e5c:	vld1.64	{d20-d21}, [r3]
   17e60:	vst1.64	{d16-d17}, [r5], lr
   17e64:	mov	r3, #10
   17e68:	vst1.64	{d18-d19}, [r4]
   17e6c:	vst1.64	{d20-d21}, [r5]
   17e70:	str	r3, [sp]
   17e74:	bne	17e7c <__mempcpy_chk@plt+0x67ec>
   17e78:	bl	11654 <abort@plt>
   17e7c:	str	r2, [sp, #44]	; 0x2c
   17e80:	str	r1, [sp, #40]	; 0x28
   17e84:	mov	r3, sp
   17e88:	mov	r1, ip
   17e8c:	mvn	r2, #0
   17e90:	bl	178b0 <__mempcpy_chk@plt+0x6220>
   17e94:	sub	sp, fp, #8
   17e98:	pop	{r4, r5, fp, pc}
   17e9c:	push	{r4, r5, fp, lr}
   17ea0:	add	fp, sp, #8
   17ea4:	sub	sp, sp, #48	; 0x30
   17ea8:	mov	lr, r3
   17eac:	movw	r3, #49640	; 0xc1e8
   17eb0:	mov	ip, #32
   17eb4:	cmp	r1, #0
   17eb8:	mov	r5, sp
   17ebc:	movt	r3, #2
   17ec0:	cmpne	r2, #0
   17ec4:	add	r4, r3, #16
   17ec8:	vld1.64	{d16-d17}, [r3], ip
   17ecc:	vld1.64	{d18-d19}, [r4]
   17ed0:	add	r4, r5, #16
   17ed4:	vld1.64	{d20-d21}, [r3]
   17ed8:	vst1.64	{d16-d17}, [r5], ip
   17edc:	mov	r3, #10
   17ee0:	vst1.64	{d18-d19}, [r4]
   17ee4:	vst1.64	{d20-d21}, [r5]
   17ee8:	str	r3, [sp]
   17eec:	bne	17ef4 <__mempcpy_chk@plt+0x6864>
   17ef0:	bl	11654 <abort@plt>
   17ef4:	ldr	ip, [fp, #8]
   17ef8:	str	r2, [sp, #44]	; 0x2c
   17efc:	str	r1, [sp, #40]	; 0x28
   17f00:	mov	r3, sp
   17f04:	mov	r1, lr
   17f08:	mov	r2, ip
   17f0c:	bl	178b0 <__mempcpy_chk@plt+0x6220>
   17f10:	sub	sp, fp, #8
   17f14:	pop	{r4, r5, fp, pc}
   17f18:	push	{r4, sl, fp, lr}
   17f1c:	add	fp, sp, #8
   17f20:	sub	sp, sp, #48	; 0x30
   17f24:	mov	ip, r2
   17f28:	movw	r2, #49640	; 0xc1e8
   17f2c:	mov	lr, #32
   17f30:	cmp	r0, #0
   17f34:	mov	r4, sp
   17f38:	movt	r2, #2
   17f3c:	cmpne	r1, #0
   17f40:	add	r3, r2, #16
   17f44:	vld1.64	{d16-d17}, [r2], lr
   17f48:	vld1.64	{d18-d19}, [r3]
   17f4c:	add	r3, r4, #16
   17f50:	vld1.64	{d20-d21}, [r2]
   17f54:	vst1.64	{d16-d17}, [r4], lr
   17f58:	mov	r2, #10
   17f5c:	vst1.64	{d18-d19}, [r3]
   17f60:	vst1.64	{d20-d21}, [r4]
   17f64:	str	r2, [sp]
   17f68:	bne	17f70 <__mempcpy_chk@plt+0x68e0>
   17f6c:	bl	11654 <abort@plt>
   17f70:	str	r1, [sp, #44]	; 0x2c
   17f74:	str	r0, [sp, #40]	; 0x28
   17f78:	mov	r3, sp
   17f7c:	mov	r0, #0
   17f80:	mov	r1, ip
   17f84:	mvn	r2, #0
   17f88:	bl	178b0 <__mempcpy_chk@plt+0x6220>
   17f8c:	sub	sp, fp, #8
   17f90:	pop	{r4, sl, fp, pc}
   17f94:	push	{r4, r5, fp, lr}
   17f98:	add	fp, sp, #8
   17f9c:	sub	sp, sp, #48	; 0x30
   17fa0:	mov	lr, r2
   17fa4:	movw	r2, #49640	; 0xc1e8
   17fa8:	mov	ip, r3
   17fac:	mov	r3, #32
   17fb0:	cmp	r0, #0
   17fb4:	mov	r5, sp
   17fb8:	movt	r2, #2
   17fbc:	cmpne	r1, #0
   17fc0:	add	r4, r2, #16
   17fc4:	vld1.64	{d16-d17}, [r2], r3
   17fc8:	vld1.64	{d18-d19}, [r4]
   17fcc:	add	r4, r5, #16
   17fd0:	vld1.64	{d20-d21}, [r2]
   17fd4:	vst1.64	{d16-d17}, [r5], r3
   17fd8:	mov	r2, #10
   17fdc:	vst1.64	{d18-d19}, [r4]
   17fe0:	vst1.64	{d20-d21}, [r5]
   17fe4:	str	r2, [sp]
   17fe8:	bne	17ff0 <__mempcpy_chk@plt+0x6960>
   17fec:	bl	11654 <abort@plt>
   17ff0:	str	r1, [sp, #44]	; 0x2c
   17ff4:	str	r0, [sp, #40]	; 0x28
   17ff8:	mov	r3, sp
   17ffc:	mov	r0, #0
   18000:	mov	r1, lr
   18004:	mov	r2, ip
   18008:	bl	178b0 <__mempcpy_chk@plt+0x6220>
   1800c:	sub	sp, fp, #8
   18010:	pop	{r4, r5, fp, pc}
   18014:	movw	r3, #49488	; 0xc150
   18018:	movt	r3, #2
   1801c:	b	178b0 <__mempcpy_chk@plt+0x6220>
   18020:	movw	r3, #49488	; 0xc150
   18024:	mov	r2, r1
   18028:	mov	r1, r0
   1802c:	mov	r0, #0
   18030:	movt	r3, #2
   18034:	b	178b0 <__mempcpy_chk@plt+0x6220>
   18038:	movw	r3, #49488	; 0xc150
   1803c:	mvn	r2, #0
   18040:	movt	r3, #2
   18044:	b	178b0 <__mempcpy_chk@plt+0x6220>
   18048:	movw	r3, #49488	; 0xc150
   1804c:	mov	r1, r0
   18050:	mov	r0, #0
   18054:	mvn	r2, #0
   18058:	movt	r3, #2
   1805c:	b	178b0 <__mempcpy_chk@plt+0x6220>
   18060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18064:	add	fp, sp, #28
   18068:	sub	sp, sp, #220	; 0xdc
   1806c:	ldr	r7, [fp, #8]
   18070:	mov	r4, r3
   18074:	mov	r9, r2
   18078:	mov	r6, r1
   1807c:	mov	sl, r0
   18080:	str	r7, [sp]
   18084:	bl	11558 <renameat2@plt>
   18088:	mov	r5, r0
   1808c:	bl	1151c <__errno_location@plt>
   18090:	cmn	r5, #1
   18094:	bgt	18160 <__mempcpy_chk@plt+0x6ad0>
   18098:	mov	r8, r0
   1809c:	ldr	r0, [r0]
   180a0:	cmp	r0, #22
   180a4:	cmpne	r0, #95	; 0x5f
   180a8:	bne	18100 <__mempcpy_chk@plt+0x6a70>
   180ac:	cmp	r7, #0
   180b0:	beq	1810c <__mempcpy_chk@plt+0x6a7c>
   180b4:	cmp	r7, #1
   180b8:	bne	18154 <__mempcpy_chk@plt+0x6ac4>
   180bc:	mov	r0, #256	; 0x100
   180c0:	add	r3, sp, #8
   180c4:	mov	r1, r9
   180c8:	mov	r2, r4
   180cc:	str	r0, [sp]
   180d0:	mov	r0, #3
   180d4:	bl	11414 <__fxstatat64@plt>
   180d8:	cmp	r0, #0
   180dc:	beq	180f8 <__mempcpy_chk@plt+0x6a68>
   180e0:	ldr	r0, [r8]
   180e4:	cmp	r0, #2
   180e8:	beq	181e0 <__mempcpy_chk@plt+0x6b50>
   180ec:	mvn	r5, #0
   180f0:	cmp	r0, #75	; 0x4b
   180f4:	bne	18160 <__mempcpy_chk@plt+0x6ad0>
   180f8:	mov	r0, #17
   180fc:	b	18158 <__mempcpy_chk@plt+0x6ac8>
   18100:	cmp	r0, #38	; 0x26
   18104:	beq	180ac <__mempcpy_chk@plt+0x6a1c>
   18108:	b	18160 <__mempcpy_chk@plt+0x6ad0>
   1810c:	mov	r7, #0
   18110:	mov	r0, r6
   18114:	bl	11504 <strlen@plt>
   18118:	mov	r5, r0
   1811c:	mov	r0, r4
   18120:	bl	11504 <strlen@plt>
   18124:	cmp	r5, #0
   18128:	cmpne	r0, #0
   1812c:	bne	1816c <__mempcpy_chk@plt+0x6adc>
   18130:	mov	r0, sl
   18134:	mov	r1, r6
   18138:	mov	r2, r9
   1813c:	mov	r3, r4
   18140:	bl	1160c <renameat@plt>
   18144:	mov	r5, r0
   18148:	mov	r0, r5
   1814c:	sub	sp, fp, #28
   18150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18154:	mov	r0, #95	; 0x5f
   18158:	str	r0, [r8]
   1815c:	mvn	r5, #0
   18160:	mov	r0, r5
   18164:	sub	sp, fp, #28
   18168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1816c:	add	r1, r6, r5
   18170:	ldrb	r1, [r1, #-1]
   18174:	cmp	r1, #47	; 0x2f
   18178:	beq	1818c <__mempcpy_chk@plt+0x6afc>
   1817c:	add	r0, r4, r0
   18180:	ldrb	r0, [r0, #-1]
   18184:	cmp	r0, #47	; 0x2f
   18188:	bne	18130 <__mempcpy_chk@plt+0x6aa0>
   1818c:	mov	r0, #256	; 0x100
   18190:	add	r3, sp, #112	; 0x70
   18194:	mov	r1, sl
   18198:	mov	r2, r6
   1819c:	str	r0, [sp]
   181a0:	mov	r0, #3
   181a4:	bl	11414 <__fxstatat64@plt>
   181a8:	mvn	r5, #0
   181ac:	cmp	r0, #0
   181b0:	bne	18160 <__mempcpy_chk@plt+0x6ad0>
   181b4:	cmp	r7, #0
   181b8:	beq	181e8 <__mempcpy_chk@plt+0x6b58>
   181bc:	ldr	r0, [sp, #128]	; 0x80
   181c0:	and	r0, r0, #61440	; 0xf000
   181c4:	cmp	r0, #16384	; 0x4000
   181c8:	beq	18130 <__mempcpy_chk@plt+0x6aa0>
   181cc:	mov	r0, #2
   181d0:	str	r0, [r8]
   181d4:	mov	r0, r5
   181d8:	sub	sp, fp, #28
   181dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   181e0:	mov	r7, #1
   181e4:	b	18110 <__mempcpy_chk@plt+0x6a80>
   181e8:	mov	r0, #256	; 0x100
   181ec:	add	r3, sp, #8
   181f0:	mov	r1, r9
   181f4:	mov	r2, r4
   181f8:	str	r0, [sp]
   181fc:	mov	r0, #3
   18200:	bl	11414 <__fxstatat64@plt>
   18204:	cmp	r0, #0
   18208:	beq	1822c <__mempcpy_chk@plt+0x6b9c>
   1820c:	ldr	r0, [r8]
   18210:	cmp	r0, #2
   18214:	bne	18160 <__mempcpy_chk@plt+0x6ad0>
   18218:	ldr	r0, [sp, #128]	; 0x80
   1821c:	and	r0, r0, #61440	; 0xf000
   18220:	cmp	r0, #16384	; 0x4000
   18224:	beq	18130 <__mempcpy_chk@plt+0x6aa0>
   18228:	b	18160 <__mempcpy_chk@plt+0x6ad0>
   1822c:	ldr	r0, [sp, #24]
   18230:	and	r0, r0, #61440	; 0xf000
   18234:	cmp	r0, #16384	; 0x4000
   18238:	bne	18260 <__mempcpy_chk@plt+0x6bd0>
   1823c:	ldr	r0, [sp, #128]	; 0x80
   18240:	and	r0, r0, #61440	; 0xf000
   18244:	cmp	r0, #16384	; 0x4000
   18248:	beq	18130 <__mempcpy_chk@plt+0x6aa0>
   1824c:	mov	r0, #21
   18250:	str	r0, [r8]
   18254:	mov	r0, r5
   18258:	sub	sp, fp, #28
   1825c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18260:	mov	r0, #20
   18264:	str	r0, [r8]
   18268:	mov	r0, r5
   1826c:	sub	sp, fp, #28
   18270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18274:	mov	r3, r1
   18278:	mov	r1, r0
   1827c:	mvn	r0, #99	; 0x63
   18280:	mvn	r2, #99	; 0x63
   18284:	b	18288 <__mempcpy_chk@plt+0x6bf8>
   18288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1828c:	add	fp, sp, #28
   18290:	sub	sp, sp, #228	; 0xe4
   18294:	mov	sl, r0
   18298:	mov	r0, r1
   1829c:	mov	r9, r3
   182a0:	str	r2, [sp, #12]
   182a4:	mov	r7, r1
   182a8:	bl	13c44 <__mempcpy_chk@plt+0x25b4>
   182ac:	mov	r6, r0
   182b0:	mov	r0, r9
   182b4:	bl	13c44 <__mempcpy_chk@plt+0x25b4>
   182b8:	mov	r5, r0
   182bc:	mov	r0, r6
   182c0:	bl	13ca4 <__mempcpy_chk@plt+0x2614>
   182c4:	mov	r8, r0
   182c8:	mov	r0, r5
   182cc:	bl	13ca4 <__mempcpy_chk@plt+0x2614>
   182d0:	mov	r4, #0
   182d4:	cmp	r8, r0
   182d8:	bne	182f8 <__mempcpy_chk@plt+0x6c68>
   182dc:	mov	r0, r6
   182e0:	mov	r1, r5
   182e4:	mov	r2, r8
   182e8:	stmib	sp, {r9, sl}
   182ec:	bl	113d8 <memcmp@plt>
   182f0:	cmp	r0, #0
   182f4:	beq	18304 <__mempcpy_chk@plt+0x6c74>
   182f8:	mov	r0, r4
   182fc:	sub	sp, fp, #28
   18300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18304:	mov	r0, r7
   18308:	bl	146d0 <__mempcpy_chk@plt+0x3040>
   1830c:	ldr	r1, [sp, #8]
   18310:	mov	r4, r0
   18314:	mov	r6, #256	; 0x100
   18318:	add	r3, sp, #120	; 0x78
   1831c:	mov	r0, #3
   18320:	mov	r2, r4
   18324:	str	r6, [sp]
   18328:	bl	11414 <__fxstatat64@plt>
   1832c:	cmp	r0, #0
   18330:	beq	18350 <__mempcpy_chk@plt+0x6cc0>
   18334:	bl	1151c <__errno_location@plt>
   18338:	ldr	r1, [r0]
   1833c:	movw	r2, #47787	; 0xbaab
   18340:	mov	r0, #1
   18344:	mov	r3, r4
   18348:	movt	r2, #1
   1834c:	bl	11480 <error@plt>
   18350:	mov	r0, r4
   18354:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   18358:	ldr	r0, [sp, #4]
   1835c:	bl	146d0 <__mempcpy_chk@plt+0x3040>
   18360:	ldr	r1, [sp, #12]
   18364:	mov	r5, r0
   18368:	add	r3, sp, #16
   1836c:	mov	r0, #3
   18370:	str	r6, [sp]
   18374:	mov	r2, r5
   18378:	bl	11414 <__fxstatat64@plt>
   1837c:	cmp	r0, #0
   18380:	beq	183a0 <__mempcpy_chk@plt+0x6d10>
   18384:	bl	1151c <__errno_location@plt>
   18388:	ldr	r1, [r0]
   1838c:	movw	r2, #47787	; 0xbaab
   18390:	mov	r0, #1
   18394:	mov	r3, r5
   18398:	movt	r2, #1
   1839c:	bl	11480 <error@plt>
   183a0:	ldr	r0, [sp, #112]	; 0x70
   183a4:	ldr	r2, [sp, #216]	; 0xd8
   183a8:	ldr	r1, [sp, #116]	; 0x74
   183ac:	ldr	r3, [sp, #220]	; 0xdc
   183b0:	mov	r4, #0
   183b4:	eor	r1, r3, r1
   183b8:	eor	r0, r2, r0
   183bc:	orrs	r0, r0, r1
   183c0:	bne	183e8 <__mempcpy_chk@plt+0x6d58>
   183c4:	ldr	r0, [sp, #16]
   183c8:	ldr	r2, [sp, #120]	; 0x78
   183cc:	ldr	r1, [sp, #20]
   183d0:	ldr	r3, [sp, #124]	; 0x7c
   183d4:	eor	r1, r3, r1
   183d8:	eor	r0, r2, r0
   183dc:	orr	r0, r0, r1
   183e0:	clz	r0, r0
   183e4:	lsr	r4, r0, #5
   183e8:	mov	r0, r5
   183ec:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   183f0:	mov	r0, r4
   183f4:	sub	sp, fp, #28
   183f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183fc:	push	{r4, r5, r6, sl, fp, lr}
   18400:	add	fp, sp, #16
   18404:	ldr	r4, [r0], #8
   18408:	mov	r5, r1
   1840c:	cmp	r4, r0
   18410:	beq	18434 <__mempcpy_chk@plt+0x6da4>
   18414:	mov	r0, r4
   18418:	mov	r1, r5
   1841c:	bl	19764 <__mempcpy_chk@plt+0x80d4>
   18420:	mov	r6, r0
   18424:	cmp	r0, #0
   18428:	moveq	r6, r4
   1842c:	mov	r0, r6
   18430:	pop	{r4, r5, r6, sl, fp, pc}
   18434:	mov	r0, r5
   18438:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   1843c:	cmp	r0, #0
   18440:	moveq	r6, #0
   18444:	moveq	r0, r6
   18448:	popeq	{r4, r5, r6, sl, fp, pc}
   1844c:	mov	r1, r4
   18450:	mov	r2, r5
   18454:	mov	r6, r0
   18458:	bl	113c0 <memcpy@plt>
   1845c:	mov	r0, r6
   18460:	pop	{r4, r5, r6, sl, fp, pc}
   18464:	push	{r4, r5, r6, sl, fp, lr}
   18468:	add	fp, sp, #16
   1846c:	mov	r4, r0
   18470:	add	r6, r0, #8
   18474:	ldrd	r0, [r0]
   18478:	lsl	r5, r1, #1
   1847c:	cmp	r0, r6
   18480:	beq	1848c <__mempcpy_chk@plt+0x6dfc>
   18484:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   18488:	ldr	r1, [r4, #4]
   1848c:	cmp	r5, r1
   18490:	bcc	184b4 <__mempcpy_chk@plt+0x6e24>
   18494:	mov	r0, r5
   18498:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   1849c:	cmp	r0, #0
   184a0:	strne	r0, [r4]
   184a4:	movne	r0, #1
   184a8:	strne	r5, [r4, #4]
   184ac:	popne	{r4, r5, r6, sl, fp, pc}
   184b0:	b	184c0 <__mempcpy_chk@plt+0x6e30>
   184b4:	bl	1151c <__errno_location@plt>
   184b8:	mov	r1, #12
   184bc:	str	r1, [r0]
   184c0:	mov	r0, #0
   184c4:	mov	r5, #1024	; 0x400
   184c8:	str	r6, [r4]
   184cc:	str	r5, [r4, #4]
   184d0:	pop	{r4, r5, r6, sl, fp, pc}
   184d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   184d8:	add	fp, sp, #24
   184dc:	ldrd	r8, [r0]
   184e0:	add	r7, r0, #8
   184e4:	mov	r4, r0
   184e8:	lsl	r5, r9, #1
   184ec:	cmp	r8, r7
   184f0:	beq	18524 <__mempcpy_chk@plt+0x6e94>
   184f4:	cmp	r5, r9
   184f8:	bcc	18558 <__mempcpy_chk@plt+0x6ec8>
   184fc:	mov	r0, r8
   18500:	mov	r1, r5
   18504:	bl	19764 <__mempcpy_chk@plt+0x80d4>
   18508:	mov	r6, r0
   1850c:	cmp	r0, #0
   18510:	beq	18568 <__mempcpy_chk@plt+0x6ed8>
   18514:	mov	r0, #1
   18518:	str	r6, [r4]
   1851c:	str	r5, [r4, #4]
   18520:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18524:	mov	r0, r5
   18528:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   1852c:	cmp	r0, #0
   18530:	moveq	r0, #0
   18534:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   18538:	ldr	r2, [r4, #4]
   1853c:	mov	r1, r8
   18540:	mov	r6, r0
   18544:	bl	113c0 <memcpy@plt>
   18548:	mov	r0, #1
   1854c:	str	r6, [r4]
   18550:	str	r5, [r4, #4]
   18554:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18558:	bl	1151c <__errno_location@plt>
   1855c:	mov	r1, #12
   18560:	str	r1, [r0]
   18564:	b	1856c <__mempcpy_chk@plt+0x6edc>
   18568:	ldr	r8, [r4]
   1856c:	mov	r0, r8
   18570:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   18574:	mov	r0, #0
   18578:	mov	r5, #1024	; 0x400
   1857c:	str	r7, [r4]
   18580:	str	r5, [r4, #4]
   18584:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18588:	push	{fp, lr}
   1858c:	mov	fp, sp
   18590:	sub	sp, sp, #8
   18594:	str	r2, [sp, #4]
   18598:	ldr	r2, [fp, #8]
   1859c:	str	r2, [sp]
   185a0:	movw	r2, #46824	; 0xb6e8
   185a4:	movt	r2, #1
   185a8:	ldr	r3, [r2, r3, lsl #2]
   185ac:	add	r2, sp, #4
   185b0:	bl	18628 <__mempcpy_chk@plt+0x6f98>
   185b4:	mov	sp, fp
   185b8:	pop	{fp, pc}
   185bc:	ldr	r1, [r1]
   185c0:	mov	r2, #384	; 0x180
   185c4:	bic	r1, r1, #195	; 0xc3
   185c8:	orr	r1, r1, #194	; 0xc2
   185cc:	b	1148c <open64@plt>
   185d0:	mov	r1, #448	; 0x1c0
   185d4:	b	11534 <mkdir@plt>
   185d8:	push	{r4, sl, fp, lr}
   185dc:	add	fp, sp, #8
   185e0:	sub	sp, sp, #104	; 0x68
   185e4:	mov	r1, r0
   185e8:	mov	r2, sp
   185ec:	mov	r0, #3
   185f0:	bl	1166c <__lxstat64@plt>
   185f4:	mov	r4, r0
   185f8:	bl	1151c <__errno_location@plt>
   185fc:	cmp	r4, #0
   18600:	ldrne	r1, [r0]
   18604:	cmpne	r1, #75	; 0x4b
   18608:	bne	18614 <__mempcpy_chk@plt+0x6f84>
   1860c:	mov	r1, #17
   18610:	str	r1, [r0]
   18614:	ldr	r0, [r0]
   18618:	subs	r0, r0, #2
   1861c:	mvnne	r0, #0
   18620:	sub	sp, fp, #8
   18624:	pop	{r4, sl, fp, pc}
   18628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1862c:	add	fp, sp, #28
   18630:	sub	sp, sp, #68	; 0x44
   18634:	mov	r8, r3
   18638:	mov	r9, r2
   1863c:	mov	r5, r1
   18640:	mov	r6, r0
   18644:	bl	1151c <__errno_location@plt>
   18648:	mov	r7, r0
   1864c:	ldr	sl, [r0]
   18650:	mov	r0, #0
   18654:	str	r0, [sp, #44]	; 0x2c
   18658:	add	r0, sp, #40	; 0x28
   1865c:	lsr	r0, r0, #3
   18660:	str	r0, [sp, #40]	; 0x28
   18664:	ldr	r0, [fp, #8]
   18668:	add	r4, r0, r5
   1866c:	mov	r5, r0
   18670:	mov	r0, r6
   18674:	bl	11504 <strlen@plt>
   18678:	cmp	r0, r4
   1867c:	bcc	186a0 <__mempcpy_chk@plt+0x7010>
   18680:	sub	r0, r0, r4
   18684:	movw	r1, #46263	; 0xb4b7
   18688:	add	r0, r6, r0
   1868c:	movt	r1, #1
   18690:	str	r0, [sp, #32]
   18694:	bl	11684 <strspn@plt>
   18698:	cmp	r0, r5
   1869c:	bcs	186b4 <__mempcpy_chk@plt+0x7024>
   186a0:	mov	r0, #22
   186a4:	str	r0, [r7]
   186a8:	mvn	r0, #0
   186ac:	sub	sp, fp, #28
   186b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   186b4:	cmp	r5, #0
   186b8:	str	r6, [sp, #20]
   186bc:	str	sl, [sp, #4]
   186c0:	beq	18908 <__mempcpy_chk@plt+0x7278>
   186c4:	movw	r0, #34264	; 0x85d8
   186c8:	movw	r4, #39131	; 0x98db
   186cc:	movw	r6, #21503	; 0x53ff
   186d0:	mov	r2, #0
   186d4:	mov	r1, #0
   186d8:	str	r7, [sp, #8]
   186dc:	str	r8, [sp, #16]
   186e0:	str	r9, [sp, #12]
   186e4:	movt	r0, #1
   186e8:	movt	r4, #62617	; 0xf499
   186ec:	movt	r6, #2727	; 0xaa7
   186f0:	sub	r0, r8, r0
   186f4:	clz	r0, r0
   186f8:	lsr	r0, r0, #5
   186fc:	str	r0, [sp, #28]
   18700:	mov	sl, #0
   18704:	sub	r7, fp, #40	; 0x28
   18708:	str	r1, [sp, #24]
   1870c:	ldr	r8, [sp, #40]	; 0x28
   18710:	ldr	r9, [sp, #44]	; 0x2c
   18714:	cmp	r2, #0
   18718:	beq	18724 <__mempcpy_chk@plt+0x7094>
   1871c:	str	r2, [sp, #36]	; 0x24
   18720:	b	18868 <__mempcpy_chk@plt+0x71d8>
   18724:	ldr	r0, [sp, #28]
   18728:	tst	r0, #1
   1872c:	beq	18754 <__mempcpy_chk@plt+0x70c4>
   18730:	mov	r0, r7
   18734:	mov	r1, #8
   18738:	mov	r2, #1
   1873c:	bl	11624 <getrandom@plt>
   18740:	cmp	r0, #8
   18744:	bne	18754 <__mempcpy_chk@plt+0x70c4>
   18748:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1874c:	ldr	r9, [fp, #-36]	; 0xffffffdc
   18750:	b	1879c <__mempcpy_chk@plt+0x710c>
   18754:	mov	r0, #1
   18758:	add	r1, sp, #48	; 0x30
   1875c:	bl	113a8 <clock_gettime@plt>
   18760:	ldr	r0, [sp, #52]	; 0x34
   18764:	movw	r2, #45309	; 0xb0fd
   18768:	movw	r5, #12006	; 0x2ee6
   1876c:	movt	r2, #34736	; 0x87b0
   18770:	movt	r5, #10171	; 0x27bb
   18774:	mov	ip, r2
   18778:	eor	r1, r8, r0
   1877c:	eor	r0, r9, r0, asr #31
   18780:	umull	r2, r3, r1, r2
   18784:	mul	r0, r0, ip
   18788:	mla	r1, r1, r5, r3
   1878c:	movw	r3, #62253	; 0xf32d
   18790:	movt	r3, #46340	; 0xb504
   18794:	adds	r8, r2, r3
   18798:	adc	r9, r1, r0
   1879c:	subs	r0, r6, r8
   187a0:	str	r8, [sp, #40]	; 0x28
   187a4:	str	r9, [sp, #44]	; 0x2c
   187a8:	sbcs	r0, r4, r9
   187ac:	bcs	18858 <__mempcpy_chk@plt+0x71c8>
   187b0:	mov	r0, #10
   187b4:	str	r0, [sp, #36]	; 0x24
   187b8:	mov	r0, #1
   187bc:	str	r0, [sp, #28]
   187c0:	mov	r0, r7
   187c4:	mov	r1, #8
   187c8:	mov	r2, #1
   187cc:	bl	11624 <getrandom@plt>
   187d0:	cmp	r0, #8
   187d4:	bne	187e4 <__mempcpy_chk@plt+0x7154>
   187d8:	ldr	r8, [fp, #-40]	; 0xffffffd8
   187dc:	ldr	r9, [fp, #-36]	; 0xffffffdc
   187e0:	b	18840 <__mempcpy_chk@plt+0x71b0>
   187e4:	mov	r0, #1
   187e8:	add	r1, sp, #48	; 0x30
   187ec:	bl	113a8 <clock_gettime@plt>
   187f0:	ldr	r0, [sp, #52]	; 0x34
   187f4:	movw	r2, #45309	; 0xb0fd
   187f8:	mov	r5, r6
   187fc:	mov	r6, r4
   18800:	movw	r4, #12006	; 0x2ee6
   18804:	movt	r2, #34736	; 0x87b0
   18808:	movt	r4, #10171	; 0x27bb
   1880c:	mov	r7, r2
   18810:	eor	r1, r8, r0
   18814:	eor	r0, r9, r0, asr #31
   18818:	umull	r2, r3, r1, r2
   1881c:	mul	r0, r0, r7
   18820:	sub	r7, fp, #40	; 0x28
   18824:	mla	r1, r1, r4, r3
   18828:	movw	r3, #62253	; 0xf32d
   1882c:	mov	r4, r6
   18830:	mov	r6, r5
   18834:	movt	r3, #46340	; 0xb504
   18838:	adds	r8, r2, r3
   1883c:	adc	r9, r1, r0
   18840:	subs	r0, r6, r8
   18844:	str	r8, [sp, #40]	; 0x28
   18848:	str	r9, [sp, #44]	; 0x2c
   1884c:	sbcs	r0, r4, r9
   18850:	bcc	187c0 <__mempcpy_chk@plt+0x7130>
   18854:	b	18868 <__mempcpy_chk@plt+0x71d8>
   18858:	mov	r0, #10
   1885c:	str	r0, [sp, #36]	; 0x24
   18860:	mov	r0, #1
   18864:	str	r0, [sp, #28]
   18868:	mov	r0, r8
   1886c:	mov	r1, r9
   18870:	mov	r2, #62	; 0x3e
   18874:	mov	r3, #0
   18878:	bl	1a1f0 <__mempcpy_chk@plt+0x8b60>
   1887c:	rsb	r2, r0, r0, lsl #5
   18880:	movw	r3, #46836	; 0xb6f4
   18884:	sub	r2, r8, r2, lsl #1
   18888:	movt	r3, #1
   1888c:	ldrb	r2, [r3, r2]
   18890:	ldr	r3, [sp, #32]
   18894:	strb	r2, [r3, sl]
   18898:	ldr	r2, [sp, #36]	; 0x24
   1889c:	str	r0, [sp, #40]	; 0x28
   188a0:	ldr	r0, [fp, #8]
   188a4:	add	sl, sl, #1
   188a8:	str	r1, [sp, #44]	; 0x2c
   188ac:	sub	r2, r2, #1
   188b0:	cmp	sl, r0
   188b4:	bne	1870c <__mempcpy_chk@plt+0x707c>
   188b8:	ldr	r9, [sp, #12]
   188bc:	ldr	r0, [sp, #20]
   188c0:	ldr	r8, [sp, #16]
   188c4:	mov	r5, r2
   188c8:	mov	r1, r9
   188cc:	blx	r8
   188d0:	cmn	r0, #1
   188d4:	bgt	18954 <__mempcpy_chk@plt+0x72c4>
   188d8:	ldr	r7, [sp, #8]
   188dc:	ldr	r0, [r7]
   188e0:	cmp	r0, #17
   188e4:	bne	186a8 <__mempcpy_chk@plt+0x7018>
   188e8:	ldr	r1, [sp, #24]
   188ec:	movw	r0, #41720	; 0xa2f8
   188f0:	mov	r2, r5
   188f4:	movt	r0, #3
   188f8:	add	r1, r1, #1
   188fc:	cmp	r1, r0
   18900:	bcc	18700 <__mempcpy_chk@plt+0x7070>
   18904:	b	18940 <__mempcpy_chk@plt+0x72b0>
   18908:	movw	r5, #41720	; 0xa2f8
   1890c:	mov	r4, #0
   18910:	movt	r5, #3
   18914:	ldr	r0, [sp, #20]
   18918:	mov	r1, r9
   1891c:	blx	r8
   18920:	cmp	r0, #0
   18924:	bge	18958 <__mempcpy_chk@plt+0x72c8>
   18928:	ldr	r0, [r7]
   1892c:	cmp	r0, #17
   18930:	bne	186a8 <__mempcpy_chk@plt+0x7018>
   18934:	add	r4, r4, #1
   18938:	cmp	r4, r5
   1893c:	bcc	18914 <__mempcpy_chk@plt+0x7284>
   18940:	mov	r0, #17
   18944:	str	r0, [r7]
   18948:	mvn	r0, #0
   1894c:	sub	sp, fp, #28
   18950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18954:	ldr	r7, [sp, #8]
   18958:	ldr	r1, [sp, #4]
   1895c:	str	r1, [r7]
   18960:	sub	sp, fp, #28
   18964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18968:	push	{fp, lr}
   1896c:	mov	fp, sp
   18970:	sub	sp, sp, #8
   18974:	str	r2, [sp, #4]
   18978:	mov	r2, #6
   1897c:	str	r2, [sp]
   18980:	movw	r2, #46824	; 0xb6e8
   18984:	movt	r2, #1
   18988:	ldr	r3, [r2, r3, lsl #2]
   1898c:	add	r2, sp, #4
   18990:	bl	18628 <__mempcpy_chk@plt+0x6f98>
   18994:	mov	sp, fp
   18998:	pop	{fp, pc}
   1899c:	push	{fp, lr}
   189a0:	mov	fp, sp
   189a4:	sub	sp, sp, #8
   189a8:	mov	ip, #6
   189ac:	str	ip, [sp]
   189b0:	bl	18628 <__mempcpy_chk@plt+0x6f98>
   189b4:	mov	sp, fp
   189b8:	pop	{fp, pc}
   189bc:	push	{r4, r5, r6, r7, fp, lr}
   189c0:	add	fp, sp, #16
   189c4:	mov	r4, r0
   189c8:	cmp	r0, #2
   189cc:	movhi	r0, r4
   189d0:	pophi	{r4, r5, r6, r7, fp, pc}
   189d4:	mov	r0, r4
   189d8:	bl	19efc <__mempcpy_chk@plt+0x886c>
   189dc:	mov	r5, r0
   189e0:	bl	1151c <__errno_location@plt>
   189e4:	ldr	r7, [r0]
   189e8:	mov	r6, r0
   189ec:	mov	r0, r4
   189f0:	bl	11660 <close@plt>
   189f4:	mov	r0, r5
   189f8:	str	r7, [r6]
   189fc:	pop	{r4, r5, r6, r7, fp, pc}
   18a00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18a04:	add	fp, sp, #24
   18a08:	sub	sp, sp, #32
   18a0c:	ldr	r6, [fp, #12]
   18a10:	ldr	r7, [fp, #8]
   18a14:	mov	r4, r2
   18a18:	mov	r8, r0
   18a1c:	cmp	r1, #0
   18a20:	beq	18a48 <__mempcpy_chk@plt+0x73b8>
   18a24:	movw	r2, #46899	; 0xb733
   18a28:	mov	r5, r1
   18a2c:	str	r3, [sp, #4]
   18a30:	str	r4, [sp]
   18a34:	mov	r0, r8
   18a38:	mov	r1, #1
   18a3c:	movt	r2, #1
   18a40:	mov	r3, r5
   18a44:	b	18a60 <__mempcpy_chk@plt+0x73d0>
   18a48:	movw	r2, #46911	; 0xb73f
   18a4c:	str	r3, [sp]
   18a50:	mov	r0, r8
   18a54:	mov	r1, #1
   18a58:	mov	r3, r4
   18a5c:	movt	r2, #1
   18a60:	bl	1157c <__fprintf_chk@plt>
   18a64:	movw	r1, #46918	; 0xb746
   18a68:	mov	r0, #0
   18a6c:	mov	r2, #5
   18a70:	movt	r1, #1
   18a74:	bl	113e4 <dcgettext@plt>
   18a78:	movw	r2, #47636	; 0xba14
   18a7c:	mov	r3, r0
   18a80:	movw	r0, #2022	; 0x7e6
   18a84:	mov	r1, #1
   18a88:	str	r0, [sp]
   18a8c:	movt	r2, #1
   18a90:	mov	r0, r8
   18a94:	bl	1157c <__fprintf_chk@plt>
   18a98:	movw	r4, #44851	; 0xaf33
   18a9c:	mov	r1, r8
   18aa0:	movt	r4, #1
   18aa4:	mov	r0, r4
   18aa8:	bl	11324 <fputs_unlocked@plt>
   18aac:	movw	r1, #46922	; 0xb74a
   18ab0:	mov	r0, #0
   18ab4:	mov	r2, #5
   18ab8:	movt	r1, #1
   18abc:	bl	113e4 <dcgettext@plt>
   18ac0:	movw	r3, #47093	; 0xb7f5
   18ac4:	mov	r2, r0
   18ac8:	mov	r0, r8
   18acc:	mov	r1, #1
   18ad0:	movt	r3, #1
   18ad4:	bl	1157c <__fprintf_chk@plt>
   18ad8:	mov	r0, r4
   18adc:	mov	r1, r8
   18ae0:	bl	11324 <fputs_unlocked@plt>
   18ae4:	cmp	r6, #9
   18ae8:	bhi	18b24 <__mempcpy_chk@plt+0x7494>
   18aec:	add	r0, pc, #0
   18af0:	ldr	pc, [r0, r6, lsl #2]
   18af4:	andeq	r8, r1, ip, lsl fp
   18af8:	andeq	r8, r1, r0, lsr fp
   18afc:	andeq	r8, r1, r0, ror #22
   18b00:	andeq	r8, r1, r8, lsl #23
   18b04:			; <UNDEFINED> instruction: 0x00018bb0
   18b08:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18b0c:	andeq	r8, r1, r0, lsl #24
   18b10:	andeq	r8, r1, r8, lsr ip
   18b14:	andeq	r8, r1, r0, ror #25
   18b18:	andeq	r8, r1, r8, lsl #25
   18b1c:	sub	sp, fp, #24
   18b20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18b24:	movw	r1, #47446	; 0xb956
   18b28:	movt	r1, #1
   18b2c:	b	18c90 <__mempcpy_chk@plt+0x7600>
   18b30:	movw	r1, #47127	; 0xb817
   18b34:	mov	r0, #0
   18b38:	mov	r2, #5
   18b3c:	movt	r1, #1
   18b40:	bl	113e4 <dcgettext@plt>
   18b44:	ldr	r3, [r7]
   18b48:	mov	r2, r0
   18b4c:	mov	r0, r8
   18b50:	mov	r1, #1
   18b54:	sub	sp, fp, #24
   18b58:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   18b5c:	b	1157c <__fprintf_chk@plt>
   18b60:	movw	r1, #47143	; 0xb827
   18b64:	mov	r0, #0
   18b68:	mov	r2, #5
   18b6c:	movt	r1, #1
   18b70:	bl	113e4 <dcgettext@plt>
   18b74:	mov	r2, r0
   18b78:	ldr	r3, [r7]
   18b7c:	ldr	r0, [r7, #4]
   18b80:	str	r0, [sp]
   18b84:	b	18c74 <__mempcpy_chk@plt+0x75e4>
   18b88:	movw	r1, #47166	; 0xb83e
   18b8c:	mov	r0, #0
   18b90:	mov	r2, #5
   18b94:	movt	r1, #1
   18b98:	bl	113e4 <dcgettext@plt>
   18b9c:	ldr	r3, [r7]
   18ba0:	mov	r2, r0
   18ba4:	ldmib	r7, {r0, r1}
   18ba8:	stm	sp, {r0, r1}
   18bac:	b	18c74 <__mempcpy_chk@plt+0x75e4>
   18bb0:	movw	r1, #47194	; 0xb85a
   18bb4:	mov	r0, #0
   18bb8:	mov	r2, #5
   18bbc:	movt	r1, #1
   18bc0:	bl	113e4 <dcgettext@plt>
   18bc4:	ldr	r3, [r7]
   18bc8:	mov	r2, r0
   18bcc:	ldmib	r7, {r0, r1, r7}
   18bd0:	stm	sp, {r0, r1, r7}
   18bd4:	b	18c74 <__mempcpy_chk@plt+0x75e4>
   18bd8:	movw	r1, #47226	; 0xb87a
   18bdc:	mov	r0, #0
   18be0:	mov	r2, #5
   18be4:	movt	r1, #1
   18be8:	bl	113e4 <dcgettext@plt>
   18bec:	ldr	r3, [r7]
   18bf0:	mov	r2, r0
   18bf4:	ldmib	r7, {r0, r1, r6, r7}
   18bf8:	stm	sp, {r0, r1, r6, r7}
   18bfc:	b	18c74 <__mempcpy_chk@plt+0x75e4>
   18c00:	movw	r1, #47262	; 0xb89e
   18c04:	mov	r0, #0
   18c08:	mov	r2, #5
   18c0c:	movt	r1, #1
   18c10:	bl	113e4 <dcgettext@plt>
   18c14:	ldr	r3, [r7]
   18c18:	mov	r2, r0
   18c1c:	ldmib	r7, {r0, r1, r6}
   18c20:	ldr	r5, [r7, #16]
   18c24:	ldr	r7, [r7, #20]
   18c28:	stm	sp, {r0, r1, r6}
   18c2c:	str	r5, [sp, #12]
   18c30:	str	r7, [sp, #16]
   18c34:	b	18c74 <__mempcpy_chk@plt+0x75e4>
   18c38:	movw	r1, #47302	; 0xb8c6
   18c3c:	mov	r0, #0
   18c40:	mov	r2, #5
   18c44:	movt	r1, #1
   18c48:	bl	113e4 <dcgettext@plt>
   18c4c:	ldr	r3, [r7]
   18c50:	mov	r2, r0
   18c54:	ldmib	r7, {r0, r1, r6}
   18c58:	ldr	r5, [r7, #16]
   18c5c:	ldr	r4, [r7, #20]
   18c60:	ldr	r7, [r7, #24]
   18c64:	stm	sp, {r0, r1, r6}
   18c68:	str	r5, [sp, #12]
   18c6c:	str	r4, [sp, #16]
   18c70:	str	r7, [sp, #20]
   18c74:	mov	r0, r8
   18c78:	mov	r1, #1
   18c7c:	bl	1157c <__fprintf_chk@plt>
   18c80:	sub	sp, fp, #24
   18c84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18c88:	movw	r1, #47394	; 0xb922
   18c8c:	movt	r1, #1
   18c90:	mov	r0, #0
   18c94:	mov	r2, #5
   18c98:	bl	113e4 <dcgettext@plt>
   18c9c:	mov	ip, r0
   18ca0:	ldr	r3, [r7]
   18ca4:	ldr	r0, [r7, #4]
   18ca8:	ldr	r1, [r7, #8]
   18cac:	ldr	r6, [r7, #12]
   18cb0:	ldr	r5, [r7, #16]
   18cb4:	ldr	r4, [r7, #20]
   18cb8:	ldr	r2, [r7, #24]
   18cbc:	ldr	lr, [r7, #28]
   18cc0:	ldr	r7, [r7, #32]
   18cc4:	stm	sp, {r0, r1, r6}
   18cc8:	str	r5, [sp, #12]
   18ccc:	str	r4, [sp, #16]
   18cd0:	str	r2, [sp, #20]
   18cd4:	str	lr, [sp, #24]
   18cd8:	str	r7, [sp, #28]
   18cdc:	b	18d24 <__mempcpy_chk@plt+0x7694>
   18ce0:	movw	r1, #47346	; 0xb8f2
   18ce4:	mov	r0, #0
   18ce8:	mov	r2, #5
   18cec:	movt	r1, #1
   18cf0:	bl	113e4 <dcgettext@plt>
   18cf4:	mov	ip, r0
   18cf8:	ldr	r3, [r7]
   18cfc:	ldmib	r7, {r0, r1, r6}
   18d00:	ldr	r5, [r7, #16]
   18d04:	ldr	r4, [r7, #20]
   18d08:	ldr	r2, [r7, #24]
   18d0c:	ldr	r7, [r7, #28]
   18d10:	stm	sp, {r0, r1, r6}
   18d14:	str	r5, [sp, #12]
   18d18:	str	r4, [sp, #16]
   18d1c:	str	r2, [sp, #20]
   18d20:	str	r7, [sp, #24]
   18d24:	mov	r0, r8
   18d28:	mov	r1, #1
   18d2c:	mov	r2, ip
   18d30:	bl	1157c <__fprintf_chk@plt>
   18d34:	sub	sp, fp, #24
   18d38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18d3c:	push	{r4, sl, fp, lr}
   18d40:	add	fp, sp, #8
   18d44:	sub	sp, sp, #8
   18d48:	ldr	ip, [fp, #8]
   18d4c:	mov	lr, #0
   18d50:	ldr	r4, [ip, lr, lsl #2]
   18d54:	add	lr, lr, #1
   18d58:	cmp	r4, #0
   18d5c:	bne	18d50 <__mempcpy_chk@plt+0x76c0>
   18d60:	sub	r4, lr, #1
   18d64:	str	ip, [sp]
   18d68:	str	r4, [sp, #4]
   18d6c:	bl	18a00 <__mempcpy_chk@plt+0x7370>
   18d70:	sub	sp, fp, #8
   18d74:	pop	{r4, sl, fp, pc}
   18d78:	push	{fp, lr}
   18d7c:	mov	fp, sp
   18d80:	sub	sp, sp, #48	; 0x30
   18d84:	ldr	ip, [fp, #8]
   18d88:	ldr	lr, [ip]
   18d8c:	cmp	lr, #0
   18d90:	str	lr, [sp, #8]
   18d94:	beq	18e30 <__mempcpy_chk@plt+0x77a0>
   18d98:	ldr	lr, [ip, #4]
   18d9c:	cmp	lr, #0
   18da0:	str	lr, [sp, #12]
   18da4:	beq	18e38 <__mempcpy_chk@plt+0x77a8>
   18da8:	ldr	lr, [ip, #8]
   18dac:	cmp	lr, #0
   18db0:	str	lr, [sp, #16]
   18db4:	beq	18e40 <__mempcpy_chk@plt+0x77b0>
   18db8:	ldr	lr, [ip, #12]
   18dbc:	cmp	lr, #0
   18dc0:	str	lr, [sp, #20]
   18dc4:	beq	18e48 <__mempcpy_chk@plt+0x77b8>
   18dc8:	ldr	lr, [ip, #16]
   18dcc:	cmp	lr, #0
   18dd0:	str	lr, [sp, #24]
   18dd4:	beq	18e50 <__mempcpy_chk@plt+0x77c0>
   18dd8:	ldr	lr, [ip, #20]
   18ddc:	cmp	lr, #0
   18de0:	str	lr, [sp, #28]
   18de4:	beq	18e58 <__mempcpy_chk@plt+0x77c8>
   18de8:	ldr	lr, [ip, #24]
   18dec:	cmp	lr, #0
   18df0:	str	lr, [sp, #32]
   18df4:	beq	18e60 <__mempcpy_chk@plt+0x77d0>
   18df8:	ldr	lr, [ip, #28]
   18dfc:	cmp	lr, #0
   18e00:	str	lr, [sp, #36]	; 0x24
   18e04:	beq	18e68 <__mempcpy_chk@plt+0x77d8>
   18e08:	ldr	lr, [ip, #32]
   18e0c:	cmp	lr, #0
   18e10:	str	lr, [sp, #40]	; 0x28
   18e14:	beq	18e70 <__mempcpy_chk@plt+0x77e0>
   18e18:	ldr	lr, [ip, #36]	; 0x24
   18e1c:	mov	ip, #10
   18e20:	cmp	lr, #0
   18e24:	str	lr, [sp, #44]	; 0x2c
   18e28:	movweq	ip, #9
   18e2c:	b	18e74 <__mempcpy_chk@plt+0x77e4>
   18e30:	mov	ip, #0
   18e34:	b	18e74 <__mempcpy_chk@plt+0x77e4>
   18e38:	mov	ip, #1
   18e3c:	b	18e74 <__mempcpy_chk@plt+0x77e4>
   18e40:	mov	ip, #2
   18e44:	b	18e74 <__mempcpy_chk@plt+0x77e4>
   18e48:	mov	ip, #3
   18e4c:	b	18e74 <__mempcpy_chk@plt+0x77e4>
   18e50:	mov	ip, #4
   18e54:	b	18e74 <__mempcpy_chk@plt+0x77e4>
   18e58:	mov	ip, #5
   18e5c:	b	18e74 <__mempcpy_chk@plt+0x77e4>
   18e60:	mov	ip, #6
   18e64:	b	18e74 <__mempcpy_chk@plt+0x77e4>
   18e68:	mov	ip, #7
   18e6c:	b	18e74 <__mempcpy_chk@plt+0x77e4>
   18e70:	mov	ip, #8
   18e74:	add	lr, sp, #8
   18e78:	str	ip, [sp, #4]
   18e7c:	str	lr, [sp]
   18e80:	bl	18a00 <__mempcpy_chk@plt+0x7370>
   18e84:	mov	sp, fp
   18e88:	pop	{fp, pc}
   18e8c:	push	{fp, lr}
   18e90:	mov	fp, sp
   18e94:	sub	sp, sp, #56	; 0x38
   18e98:	add	ip, fp, #8
   18e9c:	str	ip, [sp, #12]
   18ea0:	ldr	lr, [fp, #8]
   18ea4:	cmp	lr, #0
   18ea8:	str	lr, [sp, #16]
   18eac:	beq	18f48 <__mempcpy_chk@plt+0x78b8>
   18eb0:	ldr	lr, [ip, #4]
   18eb4:	cmp	lr, #0
   18eb8:	str	lr, [sp, #20]
   18ebc:	beq	18f50 <__mempcpy_chk@plt+0x78c0>
   18ec0:	ldr	lr, [ip, #8]
   18ec4:	cmp	lr, #0
   18ec8:	str	lr, [sp, #24]
   18ecc:	beq	18f58 <__mempcpy_chk@plt+0x78c8>
   18ed0:	ldr	lr, [ip, #12]
   18ed4:	cmp	lr, #0
   18ed8:	str	lr, [sp, #28]
   18edc:	beq	18f60 <__mempcpy_chk@plt+0x78d0>
   18ee0:	ldr	lr, [ip, #16]
   18ee4:	cmp	lr, #0
   18ee8:	str	lr, [sp, #32]
   18eec:	beq	18f68 <__mempcpy_chk@plt+0x78d8>
   18ef0:	ldr	lr, [ip, #20]
   18ef4:	cmp	lr, #0
   18ef8:	str	lr, [sp, #36]	; 0x24
   18efc:	beq	18f70 <__mempcpy_chk@plt+0x78e0>
   18f00:	ldr	lr, [ip, #24]
   18f04:	cmp	lr, #0
   18f08:	str	lr, [sp, #40]	; 0x28
   18f0c:	beq	18f78 <__mempcpy_chk@plt+0x78e8>
   18f10:	ldr	lr, [ip, #28]
   18f14:	cmp	lr, #0
   18f18:	str	lr, [sp, #44]	; 0x2c
   18f1c:	beq	18f80 <__mempcpy_chk@plt+0x78f0>
   18f20:	ldr	lr, [ip, #32]
   18f24:	cmp	lr, #0
   18f28:	str	lr, [sp, #48]	; 0x30
   18f2c:	beq	18f88 <__mempcpy_chk@plt+0x78f8>
   18f30:	ldr	lr, [ip, #36]	; 0x24
   18f34:	mov	ip, #10
   18f38:	cmp	lr, #0
   18f3c:	str	lr, [sp, #52]	; 0x34
   18f40:	movweq	ip, #9
   18f44:	b	18f8c <__mempcpy_chk@plt+0x78fc>
   18f48:	mov	ip, #0
   18f4c:	b	18f8c <__mempcpy_chk@plt+0x78fc>
   18f50:	mov	ip, #1
   18f54:	b	18f8c <__mempcpy_chk@plt+0x78fc>
   18f58:	mov	ip, #2
   18f5c:	b	18f8c <__mempcpy_chk@plt+0x78fc>
   18f60:	mov	ip, #3
   18f64:	b	18f8c <__mempcpy_chk@plt+0x78fc>
   18f68:	mov	ip, #4
   18f6c:	b	18f8c <__mempcpy_chk@plt+0x78fc>
   18f70:	mov	ip, #5
   18f74:	b	18f8c <__mempcpy_chk@plt+0x78fc>
   18f78:	mov	ip, #6
   18f7c:	b	18f8c <__mempcpy_chk@plt+0x78fc>
   18f80:	mov	ip, #7
   18f84:	b	18f8c <__mempcpy_chk@plt+0x78fc>
   18f88:	mov	ip, #8
   18f8c:	add	lr, sp, #16
   18f90:	str	ip, [sp, #4]
   18f94:	str	lr, [sp]
   18f98:	bl	18a00 <__mempcpy_chk@plt+0x7370>
   18f9c:	mov	sp, fp
   18fa0:	pop	{fp, pc}
   18fa4:	push	{fp, lr}
   18fa8:	mov	fp, sp
   18fac:	movw	r0, #49588	; 0xc1b4
   18fb0:	movt	r0, #2
   18fb4:	ldr	r1, [r0]
   18fb8:	movw	r0, #44851	; 0xaf33
   18fbc:	movt	r0, #1
   18fc0:	bl	11324 <fputs_unlocked@plt>
   18fc4:	movw	r1, #47506	; 0xb992
   18fc8:	mov	r0, #0
   18fcc:	mov	r2, #5
   18fd0:	movt	r1, #1
   18fd4:	bl	113e4 <dcgettext@plt>
   18fd8:	movw	r2, #47526	; 0xb9a6
   18fdc:	mov	r1, r0
   18fe0:	mov	r0, #1
   18fe4:	movt	r2, #1
   18fe8:	bl	11564 <__printf_chk@plt>
   18fec:	movw	r1, #47548	; 0xb9bc
   18ff0:	mov	r0, #0
   18ff4:	mov	r2, #5
   18ff8:	movt	r1, #1
   18ffc:	bl	113e4 <dcgettext@plt>
   19000:	movw	r2, #44313	; 0xad19
   19004:	movw	r3, #45193	; 0xb089
   19008:	mov	r1, r0
   1900c:	mov	r0, #1
   19010:	movt	r2, #1
   19014:	movt	r3, #1
   19018:	bl	11564 <__printf_chk@plt>
   1901c:	movw	r1, #47568	; 0xb9d0
   19020:	mov	r0, #0
   19024:	mov	r2, #5
   19028:	movt	r1, #1
   1902c:	bl	113e4 <dcgettext@plt>
   19030:	movw	r2, #47607	; 0xb9f7
   19034:	mov	r1, r0
   19038:	mov	r0, #1
   1903c:	movt	r2, #1
   19040:	pop	{fp, lr}
   19044:	b	11564 <__printf_chk@plt>
   19048:	push	{r4, r5, r6, sl, fp, lr}
   1904c:	add	fp, sp, #16
   19050:	mov	r4, r2
   19054:	mov	r5, r1
   19058:	mov	r6, r0
   1905c:	bl	19ec0 <__mempcpy_chk@plt+0x8830>
   19060:	cmp	r0, #0
   19064:	popne	{r4, r5, r6, sl, fp, pc}
   19068:	cmp	r6, #0
   1906c:	beq	19080 <__mempcpy_chk@plt+0x79f0>
   19070:	cmp	r5, #0
   19074:	cmpne	r4, #0
   19078:	bne	19080 <__mempcpy_chk@plt+0x79f0>
   1907c:	pop	{r4, r5, r6, sl, fp, pc}
   19080:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   19084:	push	{r4, r5, r6, sl, fp, lr}
   19088:	add	fp, sp, #16
   1908c:	mov	r4, r2
   19090:	mov	r5, r1
   19094:	mov	r6, r0
   19098:	bl	19ec0 <__mempcpy_chk@plt+0x8830>
   1909c:	cmp	r0, #0
   190a0:	popne	{r4, r5, r6, sl, fp, pc}
   190a4:	cmp	r6, #0
   190a8:	beq	190bc <__mempcpy_chk@plt+0x7a2c>
   190ac:	cmp	r5, #0
   190b0:	cmpne	r4, #0
   190b4:	bne	190bc <__mempcpy_chk@plt+0x7a2c>
   190b8:	pop	{r4, r5, r6, sl, fp, pc}
   190bc:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   190c0:	push	{fp, lr}
   190c4:	mov	fp, sp
   190c8:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   190cc:	cmp	r0, #0
   190d0:	popne	{fp, pc}
   190d4:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   190d8:	push	{fp, lr}
   190dc:	mov	fp, sp
   190e0:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   190e4:	cmp	r0, #0
   190e8:	popne	{fp, pc}
   190ec:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   190f0:	push	{fp, lr}
   190f4:	mov	fp, sp
   190f8:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   190fc:	cmp	r0, #0
   19100:	popne	{fp, pc}
   19104:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   19108:	push	{r4, r5, fp, lr}
   1910c:	add	fp, sp, #8
   19110:	mov	r4, r1
   19114:	mov	r5, r0
   19118:	bl	19764 <__mempcpy_chk@plt+0x80d4>
   1911c:	cmp	r0, #0
   19120:	popne	{r4, r5, fp, pc}
   19124:	cmp	r5, #0
   19128:	beq	19138 <__mempcpy_chk@plt+0x7aa8>
   1912c:	cmp	r4, #0
   19130:	bne	19138 <__mempcpy_chk@plt+0x7aa8>
   19134:	pop	{r4, r5, fp, pc}
   19138:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   1913c:	push	{fp, lr}
   19140:	mov	fp, sp
   19144:	cmp	r1, #0
   19148:	orreq	r1, r1, #1
   1914c:	bl	19764 <__mempcpy_chk@plt+0x80d4>
   19150:	cmp	r0, #0
   19154:	popne	{fp, pc}
   19158:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   1915c:	push	{fp, lr}
   19160:	mov	fp, sp
   19164:	clz	r3, r2
   19168:	lsr	ip, r3, #5
   1916c:	clz	r3, r1
   19170:	lsr	r3, r3, #5
   19174:	orrs	r3, r3, ip
   19178:	movwne	r1, #1
   1917c:	movwne	r2, #1
   19180:	bl	19ec0 <__mempcpy_chk@plt+0x8830>
   19184:	cmp	r0, #0
   19188:	popne	{fp, pc}
   1918c:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   19190:	push	{fp, lr}
   19194:	mov	fp, sp
   19198:	mov	r2, r1
   1919c:	mov	r1, r0
   191a0:	mov	r0, #0
   191a4:	bl	19ec0 <__mempcpy_chk@plt+0x8830>
   191a8:	cmp	r0, #0
   191ac:	popne	{fp, pc}
   191b0:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   191b4:	push	{fp, lr}
   191b8:	mov	fp, sp
   191bc:	mov	r2, r1
   191c0:	mov	r1, r0
   191c4:	clz	r0, r2
   191c8:	clz	r3, r1
   191cc:	lsr	r0, r0, #5
   191d0:	lsr	r3, r3, #5
   191d4:	orrs	r0, r3, r0
   191d8:	movwne	r1, #1
   191dc:	movwne	r2, #1
   191e0:	mov	r0, #0
   191e4:	bl	19ec0 <__mempcpy_chk@plt+0x8830>
   191e8:	cmp	r0, #0
   191ec:	popne	{fp, pc}
   191f0:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   191f4:	push	{r4, r5, r6, sl, fp, lr}
   191f8:	add	fp, sp, #16
   191fc:	ldr	r5, [r1]
   19200:	mov	r4, r1
   19204:	mov	r6, r0
   19208:	cmp	r0, #0
   1920c:	beq	19224 <__mempcpy_chk@plt+0x7b94>
   19210:	mov	r0, #1
   19214:	add	r0, r0, r5, lsr #1
   19218:	adds	r5, r5, r0
   1921c:	bcc	1922c <__mempcpy_chk@plt+0x7b9c>
   19220:	b	19268 <__mempcpy_chk@plt+0x7bd8>
   19224:	cmp	r5, #0
   19228:	movweq	r5, #64	; 0x40
   1922c:	mov	r0, r6
   19230:	mov	r1, r5
   19234:	mov	r2, #1
   19238:	bl	19ec0 <__mempcpy_chk@plt+0x8830>
   1923c:	cmp	r5, #0
   19240:	mov	r1, r5
   19244:	movwne	r1, #1
   19248:	cmp	r0, #0
   1924c:	bne	19260 <__mempcpy_chk@plt+0x7bd0>
   19250:	clz	r2, r6
   19254:	lsr	r2, r2, #5
   19258:	orrs	r1, r2, r1
   1925c:	bne	19268 <__mempcpy_chk@plt+0x7bd8>
   19260:	str	r5, [r4]
   19264:	pop	{r4, r5, r6, sl, fp, pc}
   19268:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   1926c:	push	{r4, r5, r6, r7, fp, lr}
   19270:	add	fp, sp, #16
   19274:	ldr	r5, [r1]
   19278:	mov	r6, r2
   1927c:	mov	r4, r1
   19280:	mov	r7, r0
   19284:	cmp	r0, #0
   19288:	beq	192a0 <__mempcpy_chk@plt+0x7c10>
   1928c:	mov	r0, #1
   19290:	add	r0, r0, r5, lsr #1
   19294:	adds	r5, r5, r0
   19298:	bcc	192b8 <__mempcpy_chk@plt+0x7c28>
   1929c:	b	192ec <__mempcpy_chk@plt+0x7c5c>
   192a0:	cmp	r5, #0
   192a4:	bne	192b8 <__mempcpy_chk@plt+0x7c28>
   192a8:	mov	r0, #64	; 0x40
   192ac:	cmp	r6, #64	; 0x40
   192b0:	udiv	r5, r0, r6
   192b4:	addhi	r5, r5, #1
   192b8:	mov	r0, r7
   192bc:	mov	r1, r5
   192c0:	mov	r2, r6
   192c4:	bl	19ec0 <__mempcpy_chk@plt+0x8830>
   192c8:	cmp	r0, #0
   192cc:	bne	192e4 <__mempcpy_chk@plt+0x7c54>
   192d0:	cmp	r7, #0
   192d4:	beq	192ec <__mempcpy_chk@plt+0x7c5c>
   192d8:	cmp	r6, #0
   192dc:	cmpne	r5, #0
   192e0:	bne	192ec <__mempcpy_chk@plt+0x7c5c>
   192e4:	str	r5, [r4]
   192e8:	pop	{r4, r5, r6, r7, fp, pc}
   192ec:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   192f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   192f4:	add	fp, sp, #24
   192f8:	mov	r8, r1
   192fc:	ldr	r1, [r1]
   19300:	mov	r5, r0
   19304:	add	r0, r1, r1, asr #1
   19308:	cmp	r0, r1
   1930c:	mvnvs	r0, #-2147483648	; 0x80000000
   19310:	cmp	r0, r3
   19314:	mov	r7, r0
   19318:	movgt	r7, r3
   1931c:	cmn	r3, #1
   19320:	movle	r7, r0
   19324:	ldr	r0, [fp, #8]
   19328:	cmn	r0, #1
   1932c:	ble	19354 <__mempcpy_chk@plt+0x7cc4>
   19330:	cmp	r0, #0
   19334:	beq	193a8 <__mempcpy_chk@plt+0x7d18>
   19338:	cmn	r7, #1
   1933c:	ble	1937c <__mempcpy_chk@plt+0x7cec>
   19340:	mvn	r4, #-2147483648	; 0x80000000
   19344:	udiv	r6, r4, r0
   19348:	cmp	r6, r7
   1934c:	bge	193a8 <__mempcpy_chk@plt+0x7d18>
   19350:	b	193b8 <__mempcpy_chk@plt+0x7d28>
   19354:	cmn	r7, #1
   19358:	ble	19398 <__mempcpy_chk@plt+0x7d08>
   1935c:	cmn	r0, #1
   19360:	beq	193a8 <__mempcpy_chk@plt+0x7d18>
   19364:	mov	r6, #-2147483648	; 0x80000000
   19368:	mvn	r4, #-2147483648	; 0x80000000
   1936c:	sdiv	r6, r6, r0
   19370:	cmp	r6, r7
   19374:	bge	193a8 <__mempcpy_chk@plt+0x7d18>
   19378:	b	193b8 <__mempcpy_chk@plt+0x7d28>
   1937c:	beq	193a8 <__mempcpy_chk@plt+0x7d18>
   19380:	mov	r6, #-2147483648	; 0x80000000
   19384:	mvn	r4, #-2147483648	; 0x80000000
   19388:	sdiv	r6, r6, r7
   1938c:	cmp	r6, r0
   19390:	bge	193a8 <__mempcpy_chk@plt+0x7d18>
   19394:	b	193b8 <__mempcpy_chk@plt+0x7d28>
   19398:	mvn	r4, #-2147483648	; 0x80000000
   1939c:	sdiv	r6, r4, r0
   193a0:	cmp	r7, r6
   193a4:	blt	193b8 <__mempcpy_chk@plt+0x7d28>
   193a8:	mul	r6, r7, r0
   193ac:	mov	r4, #64	; 0x40
   193b0:	cmp	r6, #63	; 0x3f
   193b4:	bgt	193c0 <__mempcpy_chk@plt+0x7d30>
   193b8:	sdiv	r7, r4, r0
   193bc:	mul	r6, r7, r0
   193c0:	cmp	r5, #0
   193c4:	moveq	r4, #0
   193c8:	streq	r4, [r8]
   193cc:	sub	r4, r7, r1
   193d0:	cmp	r4, r2
   193d4:	bge	19480 <__mempcpy_chk@plt+0x7df0>
   193d8:	add	r7, r1, r2
   193dc:	mov	r6, #0
   193e0:	mov	r2, #0
   193e4:	cmp	r7, r3
   193e8:	movwgt	r6, #1
   193ec:	cmn	r3, #1
   193f0:	movwgt	r2, #1
   193f4:	cmp	r7, r1
   193f8:	bvs	194b4 <__mempcpy_chk@plt+0x7e24>
   193fc:	ands	r1, r2, r6
   19400:	bne	194b4 <__mempcpy_chk@plt+0x7e24>
   19404:	cmn	r0, #1
   19408:	ble	19430 <__mempcpy_chk@plt+0x7da0>
   1940c:	cmp	r0, #0
   19410:	beq	1947c <__mempcpy_chk@plt+0x7dec>
   19414:	cmn	r7, #1
   19418:	ble	19454 <__mempcpy_chk@plt+0x7dc4>
   1941c:	mvn	r1, #-2147483648	; 0x80000000
   19420:	udiv	r1, r1, r0
   19424:	cmp	r1, r7
   19428:	bge	1947c <__mempcpy_chk@plt+0x7dec>
   1942c:	b	194b4 <__mempcpy_chk@plt+0x7e24>
   19430:	cmn	r7, #1
   19434:	ble	1946c <__mempcpy_chk@plt+0x7ddc>
   19438:	cmn	r0, #1
   1943c:	beq	1947c <__mempcpy_chk@plt+0x7dec>
   19440:	mov	r1, #-2147483648	; 0x80000000
   19444:	sdiv	r1, r1, r0
   19448:	cmp	r1, r7
   1944c:	bge	1947c <__mempcpy_chk@plt+0x7dec>
   19450:	b	194b4 <__mempcpy_chk@plt+0x7e24>
   19454:	beq	1947c <__mempcpy_chk@plt+0x7dec>
   19458:	mov	r1, #-2147483648	; 0x80000000
   1945c:	sdiv	r1, r1, r7
   19460:	cmp	r1, r0
   19464:	bge	1947c <__mempcpy_chk@plt+0x7dec>
   19468:	b	194b4 <__mempcpy_chk@plt+0x7e24>
   1946c:	mvn	r1, #-2147483648	; 0x80000000
   19470:	sdiv	r1, r1, r0
   19474:	cmp	r7, r1
   19478:	blt	194b4 <__mempcpy_chk@plt+0x7e24>
   1947c:	mul	r6, r7, r0
   19480:	mov	r0, r5
   19484:	mov	r1, r6
   19488:	bl	19764 <__mempcpy_chk@plt+0x80d4>
   1948c:	cmp	r6, #0
   19490:	movwne	r6, #1
   19494:	cmp	r0, #0
   19498:	bne	194ac <__mempcpy_chk@plt+0x7e1c>
   1949c:	clz	r1, r5
   194a0:	lsr	r1, r1, #5
   194a4:	orrs	r1, r1, r6
   194a8:	bne	194b4 <__mempcpy_chk@plt+0x7e24>
   194ac:	str	r7, [r8]
   194b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   194b4:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   194b8:	push	{fp, lr}
   194bc:	mov	fp, sp
   194c0:	mov	r1, #1
   194c4:	bl	196e0 <__mempcpy_chk@plt+0x8050>
   194c8:	cmp	r0, #0
   194cc:	popne	{fp, pc}
   194d0:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   194d4:	push	{fp, lr}
   194d8:	mov	fp, sp
   194dc:	bl	196e0 <__mempcpy_chk@plt+0x8050>
   194e0:	cmp	r0, #0
   194e4:	popne	{fp, pc}
   194e8:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   194ec:	push	{fp, lr}
   194f0:	mov	fp, sp
   194f4:	mov	r1, #1
   194f8:	bl	196e0 <__mempcpy_chk@plt+0x8050>
   194fc:	cmp	r0, #0
   19500:	popne	{fp, pc}
   19504:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   19508:	push	{fp, lr}
   1950c:	mov	fp, sp
   19510:	bl	196e0 <__mempcpy_chk@plt+0x8050>
   19514:	cmp	r0, #0
   19518:	popne	{fp, pc}
   1951c:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   19520:	push	{r4, r5, r6, sl, fp, lr}
   19524:	add	fp, sp, #16
   19528:	mov	r5, r0
   1952c:	mov	r0, r1
   19530:	mov	r4, r1
   19534:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   19538:	cmp	r0, #0
   1953c:	beq	19558 <__mempcpy_chk@plt+0x7ec8>
   19540:	mov	r1, r5
   19544:	mov	r2, r4
   19548:	mov	r6, r0
   1954c:	bl	113c0 <memcpy@plt>
   19550:	mov	r0, r6
   19554:	pop	{r4, r5, r6, sl, fp, pc}
   19558:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   1955c:	push	{r4, r5, r6, sl, fp, lr}
   19560:	add	fp, sp, #16
   19564:	mov	r5, r0
   19568:	mov	r0, r1
   1956c:	mov	r4, r1
   19570:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   19574:	cmp	r0, #0
   19578:	beq	19594 <__mempcpy_chk@plt+0x7f04>
   1957c:	mov	r1, r5
   19580:	mov	r2, r4
   19584:	mov	r6, r0
   19588:	bl	113c0 <memcpy@plt>
   1958c:	mov	r0, r6
   19590:	pop	{r4, r5, r6, sl, fp, pc}
   19594:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   19598:	push	{r4, r5, r6, sl, fp, lr}
   1959c:	add	fp, sp, #16
   195a0:	mov	r5, r0
   195a4:	add	r0, r1, #1
   195a8:	mov	r4, r1
   195ac:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   195b0:	cmp	r0, #0
   195b4:	beq	195dc <__mempcpy_chk@plt+0x7f4c>
   195b8:	mov	r6, r0
   195bc:	mov	r0, #0
   195c0:	mov	r1, r5
   195c4:	mov	r2, r4
   195c8:	strb	r0, [r6, r4]
   195cc:	mov	r0, r6
   195d0:	bl	113c0 <memcpy@plt>
   195d4:	mov	r0, r6
   195d8:	pop	{r4, r5, r6, sl, fp, pc}
   195dc:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   195e0:	push	{r4, r5, r6, sl, fp, lr}
   195e4:	add	fp, sp, #16
   195e8:	mov	r4, r0
   195ec:	bl	11504 <strlen@plt>
   195f0:	add	r5, r0, #1
   195f4:	mov	r0, r5
   195f8:	bl	19734 <__mempcpy_chk@plt+0x80a4>
   195fc:	cmp	r0, #0
   19600:	beq	1961c <__mempcpy_chk@plt+0x7f8c>
   19604:	mov	r1, r4
   19608:	mov	r2, r5
   1960c:	mov	r6, r0
   19610:	bl	113c0 <memcpy@plt>
   19614:	mov	r0, r6
   19618:	pop	{r4, r5, r6, sl, fp, pc}
   1961c:	bl	19620 <__mempcpy_chk@plt+0x7f90>
   19620:	push	{fp, lr}
   19624:	mov	fp, sp
   19628:	movw	r0, #49484	; 0xc14c
   1962c:	movw	r1, #47683	; 0xba43
   19630:	mov	r2, #5
   19634:	movt	r0, #2
   19638:	movt	r1, #1
   1963c:	ldr	r4, [r0]
   19640:	mov	r0, #0
   19644:	bl	113e4 <dcgettext@plt>
   19648:	movw	r2, #47787	; 0xbaab
   1964c:	mov	r3, r0
   19650:	mov	r0, r4
   19654:	mov	r1, #0
   19658:	movt	r2, #1
   1965c:	bl	11480 <error@plt>
   19660:	bl	11654 <abort@plt>
   19664:	push	{r4, sl, fp, lr}
   19668:	add	fp, sp, #8
   1966c:	sub	sp, sp, #8
   19670:	movw	r0, #49584	; 0xc1b0
   19674:	mov	r4, #0
   19678:	mov	r1, sp
   1967c:	mov	r2, #10
   19680:	movt	r0, #2
   19684:	str	r4, [sp, #4]
   19688:	str	r4, [sp]
   1968c:	ldr	r3, [r0]
   19690:	add	r0, sp, #4
   19694:	bl	1133c <__getdelim@plt>
   19698:	cmp	r0, #1
   1969c:	blt	196cc <__mempcpy_chk@plt+0x803c>
   196a0:	sub	r1, r0, #1
   196a4:	ldr	r0, [sp, #4]
   196a8:	ldrb	r2, [r0, r1]
   196ac:	cmp	r2, #10
   196b0:	moveq	r2, #0
   196b4:	strbeq	r2, [r0, r1]
   196b8:	ldreq	r0, [sp, #4]
   196bc:	bl	115b8 <rpmatch@plt>
   196c0:	mov	r4, #0
   196c4:	cmp	r0, #0
   196c8:	movwgt	r4, #1
   196cc:	ldr	r0, [sp, #4]
   196d0:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   196d4:	mov	r0, r4
   196d8:	sub	sp, fp, #8
   196dc:	pop	{r4, sl, fp, pc}
   196e0:	clz	r2, r1
   196e4:	clz	r3, r0
   196e8:	lsr	r2, r2, #5
   196ec:	lsr	r3, r3, #5
   196f0:	orrs	r2, r3, r2
   196f4:	movwne	r1, #1
   196f8:	movwne	r0, #1
   196fc:	cmp	r1, #0
   19700:	beq	19730 <__mempcpy_chk@plt+0x80a0>
   19704:	mvn	r2, #-2147483648	; 0x80000000
   19708:	udiv	r2, r2, r1
   1970c:	cmp	r2, r0
   19710:	bcs	19730 <__mempcpy_chk@plt+0x80a0>
   19714:	push	{fp, lr}
   19718:	mov	fp, sp
   1971c:	bl	1151c <__errno_location@plt>
   19720:	mov	r1, #12
   19724:	str	r1, [r0]
   19728:	mov	r0, #0
   1972c:	pop	{fp, pc}
   19730:	b	11318 <calloc@plt>
   19734:	cmp	r0, #0
   19738:	movweq	r0, #1
   1973c:	cmn	r0, #1
   19740:	ble	19748 <__mempcpy_chk@plt+0x80b8>
   19744:	b	114a4 <malloc@plt>
   19748:	push	{fp, lr}
   1974c:	mov	fp, sp
   19750:	bl	1151c <__errno_location@plt>
   19754:	mov	r1, #12
   19758:	str	r1, [r0]
   1975c:	mov	r0, #0
   19760:	pop	{fp, pc}
   19764:	push	{fp, lr}
   19768:	mov	fp, sp
   1976c:	cmp	r0, #0
   19770:	beq	1978c <__mempcpy_chk@plt+0x80fc>
   19774:	cmp	r1, #0
   19778:	beq	19798 <__mempcpy_chk@plt+0x8108>
   1977c:	cmn	r1, #1
   19780:	ble	197a4 <__mempcpy_chk@plt+0x8114>
   19784:	pop	{fp, lr}
   19788:	b	113f0 <realloc@plt>
   1978c:	mov	r0, r1
   19790:	pop	{fp, lr}
   19794:	b	19734 <__mempcpy_chk@plt+0x80a4>
   19798:	bl	14a6c <__mempcpy_chk@plt+0x33dc>
   1979c:	mov	r0, #0
   197a0:	pop	{fp, pc}
   197a4:	bl	1151c <__errno_location@plt>
   197a8:	mov	r1, #12
   197ac:	str	r1, [r0]
   197b0:	mov	r0, #0
   197b4:	pop	{fp, pc}
   197b8:	mov	r0, #1
   197bc:	b	11790 <__mempcpy_chk@plt+0x100>
   197c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   197c4:	add	fp, sp, #28
   197c8:	sub	sp, sp, #12
   197cc:	mov	r4, r3
   197d0:	mov	r9, r2
   197d4:	mov	r7, r1
   197d8:	mov	r8, r0
   197dc:	bl	11504 <strlen@plt>
   197e0:	ldr	r6, [r7]
   197e4:	cmp	r6, #0
   197e8:	beq	19894 <__mempcpy_chk@plt+0x8204>
   197ec:	mov	r5, r0
   197f0:	cmp	r9, #0
   197f4:	beq	198a4 <__mempcpy_chk@plt+0x8214>
   197f8:	add	r0, r7, #4
   197fc:	mvn	sl, #0
   19800:	mov	r7, #0
   19804:	str	r9, [sp]
   19808:	str	r0, [sp, #8]
   1980c:	mov	r0, #0
   19810:	str	r0, [sp, #4]
   19814:	mov	r0, r9
   19818:	mov	r0, r6
   1981c:	mov	r1, r8
   19820:	mov	r2, r5
   19824:	bl	11648 <strncmp@plt>
   19828:	cmp	r0, #0
   1982c:	bne	19878 <__mempcpy_chk@plt+0x81e8>
   19830:	mov	r0, r6
   19834:	bl	11504 <strlen@plt>
   19838:	cmp	r0, r5
   1983c:	beq	19898 <__mempcpy_chk@plt+0x8208>
   19840:	cmn	sl, #1
   19844:	beq	19874 <__mempcpy_chk@plt+0x81e4>
   19848:	ldr	r0, [sp]
   1984c:	mov	r1, r9
   19850:	mov	r2, r4
   19854:	mla	r0, sl, r4, r0
   19858:	bl	113d8 <memcmp@plt>
   1985c:	ldr	r1, [sp, #4]
   19860:	cmp	r0, #0
   19864:	movwne	r0, #1
   19868:	orr	r1, r1, r0
   1986c:	str	r1, [sp, #4]
   19870:	b	19878 <__mempcpy_chk@plt+0x81e8>
   19874:	mov	sl, r7
   19878:	ldr	r0, [sp, #8]
   1987c:	add	r9, r9, r4
   19880:	ldr	r6, [r0, r7, lsl #2]
   19884:	add	r7, r7, #1
   19888:	cmp	r6, #0
   1988c:	bne	19818 <__mempcpy_chk@plt+0x8188>
   19890:	b	1990c <__mempcpy_chk@plt+0x827c>
   19894:	mvn	r7, #0
   19898:	mov	r0, r7
   1989c:	sub	sp, fp, #28
   198a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198a4:	add	r4, r7, #4
   198a8:	mov	r0, #0
   198ac:	mvn	sl, #0
   198b0:	mov	r7, #0
   198b4:	str	r0, [sp, #4]
   198b8:	mov	r0, r6
   198bc:	mov	r1, r8
   198c0:	mov	r2, r5
   198c4:	bl	11648 <strncmp@plt>
   198c8:	cmp	r0, #0
   198cc:	bne	198fc <__mempcpy_chk@plt+0x826c>
   198d0:	mov	r0, r6
   198d4:	bl	11504 <strlen@plt>
   198d8:	cmp	r0, r5
   198dc:	beq	19898 <__mempcpy_chk@plt+0x8208>
   198e0:	ldr	r1, [sp, #4]
   198e4:	cmn	sl, #1
   198e8:	add	r0, sl, #1
   198ec:	movwne	r0, #1
   198f0:	moveq	sl, r7
   198f4:	orr	r1, r1, r0
   198f8:	str	r1, [sp, #4]
   198fc:	ldr	r6, [r4, r7, lsl #2]
   19900:	add	r7, r7, #1
   19904:	cmp	r6, #0
   19908:	bne	198b8 <__mempcpy_chk@plt+0x8228>
   1990c:	ldr	r0, [sp, #4]
   19910:	tst	r0, #1
   19914:	mvnne	sl, #1
   19918:	mov	r0, sl
   1991c:	sub	sp, fp, #28
   19920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19924:	push	{r4, r5, r6, r7, fp, lr}
   19928:	add	fp, sp, #16
   1992c:	mov	r5, r0
   19930:	ldr	r0, [r1]
   19934:	mvn	r4, #0
   19938:	cmp	r0, #0
   1993c:	beq	1996c <__mempcpy_chk@plt+0x82dc>
   19940:	add	r7, r1, #4
   19944:	mov	r6, #0
   19948:	mov	r1, r5
   1994c:	bl	11348 <strcmp@plt>
   19950:	cmp	r0, #0
   19954:	moveq	r0, r6
   19958:	popeq	{r4, r5, r6, r7, fp, pc}
   1995c:	ldr	r0, [r7, r6, lsl #2]
   19960:	add	r6, r6, #1
   19964:	cmp	r0, #0
   19968:	bne	19948 <__mempcpy_chk@plt+0x82b8>
   1996c:	mov	r0, r4
   19970:	pop	{r4, r5, r6, r7, fp, pc}
   19974:	push	{r4, r5, r6, sl, fp, lr}
   19978:	add	fp, sp, #16
   1997c:	sub	sp, sp, #8
   19980:	mov	r4, r1
   19984:	movw	r1, #47727	; 0xba6f
   19988:	mov	r5, r0
   1998c:	movw	r0, #47700	; 0xba54
   19990:	cmn	r2, #1
   19994:	mov	r2, #5
   19998:	movt	r0, #1
   1999c:	movt	r1, #1
   199a0:	moveq	r1, r0
   199a4:	mov	r0, #0
   199a8:	bl	113e4 <dcgettext@plt>
   199ac:	mov	r6, r0
   199b0:	mov	r0, #0
   199b4:	mov	r1, #8
   199b8:	mov	r2, r4
   199bc:	bl	17a78 <__mempcpy_chk@plt+0x63e8>
   199c0:	mov	r4, r0
   199c4:	mov	r0, #1
   199c8:	mov	r1, r5
   199cc:	bl	18038 <__mempcpy_chk@plt+0x69a8>
   199d0:	str	r0, [sp]
   199d4:	mov	r0, #0
   199d8:	mov	r1, #0
   199dc:	mov	r2, r6
   199e0:	mov	r3, r4
   199e4:	bl	11480 <error@plt>
   199e8:	sub	sp, fp, #16
   199ec:	pop	{r4, r5, r6, sl, fp, pc}
   199f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   199f4:	add	fp, sp, #28
   199f8:	sub	sp, sp, #4
   199fc:	mov	r5, r1
   19a00:	movw	r1, #47756	; 0xba8c
   19a04:	mov	sl, r2
   19a08:	mov	r7, r0
   19a0c:	mov	r0, #0
   19a10:	mov	r2, #5
   19a14:	mov	r8, #0
   19a18:	movt	r1, #1
   19a1c:	bl	113e4 <dcgettext@plt>
   19a20:	movw	r4, #49576	; 0xc1a8
   19a24:	movt	r4, #2
   19a28:	ldr	r1, [r4]
   19a2c:	bl	11324 <fputs_unlocked@plt>
   19a30:	ldr	r6, [r7]
   19a34:	cmp	r6, #0
   19a38:	beq	19ad8 <__mempcpy_chk@plt+0x8448>
   19a3c:	add	r9, r7, #4
   19a40:	mov	r7, #0
   19a44:	str	sl, [sp]
   19a48:	cmp	r8, #0
   19a4c:	beq	19a68 <__mempcpy_chk@plt+0x83d8>
   19a50:	mov	r0, r7
   19a54:	mov	r1, r5
   19a58:	mov	r2, sl
   19a5c:	bl	113d8 <memcmp@plt>
   19a60:	cmp	r0, #0
   19a64:	beq	19a94 <__mempcpy_chk@plt+0x8404>
   19a68:	ldr	r7, [r4]
   19a6c:	mov	r0, r6
   19a70:	bl	18048 <__mempcpy_chk@plt+0x69b8>
   19a74:	movw	r2, #47777	; 0xbaa1
   19a78:	mov	r3, r0
   19a7c:	mov	r0, r7
   19a80:	mov	r1, #1
   19a84:	movt	r2, #1
   19a88:	bl	1157c <__fprintf_chk@plt>
   19a8c:	mov	r7, r5
   19a90:	b	19ac4 <__mempcpy_chk@plt+0x8434>
   19a94:	mov	sl, r9
   19a98:	ldr	r9, [r4]
   19a9c:	mov	r0, r6
   19aa0:	bl	18048 <__mempcpy_chk@plt+0x69b8>
   19aa4:	mov	r3, r0
   19aa8:	mov	r0, r9
   19aac:	mov	r9, sl
   19ab0:	ldr	sl, [sp]
   19ab4:	movw	r2, #47785	; 0xbaa9
   19ab8:	mov	r1, #1
   19abc:	movt	r2, #1
   19ac0:	bl	1157c <__fprintf_chk@plt>
   19ac4:	ldr	r6, [r9, -r8, lsl #2]
   19ac8:	add	r5, r5, sl
   19acc:	sub	r8, r8, #1
   19ad0:	cmp	r6, #0
   19ad4:	bne	19a48 <__mempcpy_chk@plt+0x83b8>
   19ad8:	ldr	r0, [r4]
   19adc:	ldr	r1, [r0, #20]
   19ae0:	ldr	r2, [r0, #24]
   19ae4:	cmp	r1, r2
   19ae8:	addcc	r2, r1, #1
   19aec:	strcc	r2, [r0, #20]
   19af0:	movcc	r0, #10
   19af4:	strbcc	r0, [r1]
   19af8:	subcc	sp, fp, #28
   19afc:	popcc	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b00:	mov	r1, #10
   19b04:	sub	sp, fp, #28
   19b08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b0c:	b	115c4 <__overflow@plt>
   19b10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b14:	add	fp, sp, #28
   19b18:	sub	sp, sp, #12
   19b1c:	mov	sl, r0
   19b20:	ldr	r0, [fp, #16]
   19b24:	ldr	r9, [fp, #8]
   19b28:	mov	r5, r3
   19b2c:	mov	r8, r2
   19b30:	mov	r6, r1
   19b34:	cmp	r0, #0
   19b38:	beq	19b68 <__mempcpy_chk@plt+0x84d8>
   19b3c:	mov	r0, r6
   19b40:	mov	r1, r8
   19b44:	mov	r2, r5
   19b48:	mov	r3, r9
   19b4c:	bl	197c0 <__mempcpy_chk@plt+0x8130>
   19b50:	mov	r4, r0
   19b54:	cmn	r4, #1
   19b58:	ble	19bb8 <__mempcpy_chk@plt+0x8528>
   19b5c:	mov	r0, r4
   19b60:	sub	sp, fp, #28
   19b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b68:	ldr	r0, [r8]
   19b6c:	movw	r7, #47700	; 0xba54
   19b70:	str	r5, [sp, #8]
   19b74:	movt	r7, #1
   19b78:	cmp	r0, #0
   19b7c:	beq	19bd0 <__mempcpy_chk@plt+0x8540>
   19b80:	add	r5, r8, #4
   19b84:	mov	r4, #0
   19b88:	mov	r1, r6
   19b8c:	bl	11348 <strcmp@plt>
   19b90:	cmp	r0, #0
   19b94:	beq	19bac <__mempcpy_chk@plt+0x851c>
   19b98:	ldr	r0, [r5, r4, lsl #2]
   19b9c:	add	r4, r4, #1
   19ba0:	cmp	r0, #0
   19ba4:	bne	19b88 <__mempcpy_chk@plt+0x84f8>
   19ba8:	b	19bd0 <__mempcpy_chk@plt+0x8540>
   19bac:	ldr	r5, [sp, #8]
   19bb0:	cmn	r4, #1
   19bb4:	bgt	19b5c <__mempcpy_chk@plt+0x84cc>
   19bb8:	movw	r0, #47700	; 0xba54
   19bbc:	movw	r7, #47727	; 0xba6f
   19bc0:	str	r5, [sp, #8]
   19bc4:	movt	r0, #1
   19bc8:	movt	r7, #1
   19bcc:	moveq	r7, r0
   19bd0:	ldr	r5, [fp, #12]
   19bd4:	mov	r0, #0
   19bd8:	mov	r1, r7
   19bdc:	mov	r2, #5
   19be0:	bl	113e4 <dcgettext@plt>
   19be4:	mov	r4, r0
   19be8:	mov	r0, #0
   19bec:	mov	r1, #8
   19bf0:	mov	r2, r6
   19bf4:	bl	17a78 <__mempcpy_chk@plt+0x63e8>
   19bf8:	mov	r6, r0
   19bfc:	mov	r0, #1
   19c00:	mov	r1, sl
   19c04:	bl	18038 <__mempcpy_chk@plt+0x69a8>
   19c08:	str	r0, [sp]
   19c0c:	mov	r0, #0
   19c10:	mov	r1, #0
   19c14:	mov	r2, r4
   19c18:	mov	r3, r6
   19c1c:	bl	11480 <error@plt>
   19c20:	ldr	r1, [sp, #8]
   19c24:	mov	r0, r8
   19c28:	mov	r2, r9
   19c2c:	bl	199f0 <__mempcpy_chk@plt+0x8360>
   19c30:	blx	r5
   19c34:	mvn	r4, #0
   19c38:	mov	r0, r4
   19c3c:	sub	sp, fp, #28
   19c40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19c48:	add	fp, sp, #24
   19c4c:	ldr	r6, [r1]
   19c50:	cmp	r6, #0
   19c54:	beq	19cb8 <__mempcpy_chk@plt+0x8628>
   19c58:	mov	r8, r1
   19c5c:	mov	r7, r2
   19c60:	mov	r1, r2
   19c64:	mov	r2, r3
   19c68:	mov	r4, r3
   19c6c:	mov	r9, r0
   19c70:	bl	113d8 <memcmp@plt>
   19c74:	cmp	r0, #0
   19c78:	beq	19cb0 <__mempcpy_chk@plt+0x8620>
   19c7c:	add	r7, r7, r4
   19c80:	add	r5, r8, #4
   19c84:	ldr	r6, [r5]
   19c88:	cmp	r6, #0
   19c8c:	beq	19cb8 <__mempcpy_chk@plt+0x8628>
   19c90:	mov	r0, r9
   19c94:	mov	r1, r7
   19c98:	mov	r2, r4
   19c9c:	bl	113d8 <memcmp@plt>
   19ca0:	add	r7, r7, r4
   19ca4:	add	r5, r5, #4
   19ca8:	cmp	r0, #0
   19cac:	bne	19c84 <__mempcpy_chk@plt+0x85f4>
   19cb0:	mov	r0, r6
   19cb4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19cb8:	mov	r6, #0
   19cbc:	mov	r0, r6
   19cc0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19cc4:	push	{r4, r5, r6, sl, fp, lr}
   19cc8:	add	fp, sp, #16
   19ccc:	mov	r4, r0
   19cd0:	bl	11468 <__fpending@plt>
   19cd4:	ldr	r6, [r4]
   19cd8:	mov	r5, r0
   19cdc:	mov	r0, r4
   19ce0:	bl	19d48 <__mempcpy_chk@plt+0x86b8>
   19ce4:	tst	r6, #32
   19ce8:	bne	19d20 <__mempcpy_chk@plt+0x8690>
   19cec:	cmp	r0, #0
   19cf0:	mov	r4, r0
   19cf4:	mvnne	r4, #0
   19cf8:	cmp	r5, #0
   19cfc:	bne	19d2c <__mempcpy_chk@plt+0x869c>
   19d00:	cmp	r0, #0
   19d04:	beq	19d2c <__mempcpy_chk@plt+0x869c>
   19d08:	bl	1151c <__errno_location@plt>
   19d0c:	ldr	r0, [r0]
   19d10:	subs	r4, r0, #9
   19d14:	mvnne	r4, #0
   19d18:	mov	r0, r4
   19d1c:	pop	{r4, r5, r6, sl, fp, pc}
   19d20:	mvn	r4, #0
   19d24:	cmp	r0, #0
   19d28:	beq	19d34 <__mempcpy_chk@plt+0x86a4>
   19d2c:	mov	r0, r4
   19d30:	pop	{r4, r5, r6, sl, fp, pc}
   19d34:	bl	1151c <__errno_location@plt>
   19d38:	mov	r1, #0
   19d3c:	str	r1, [r0]
   19d40:	mov	r0, r4
   19d44:	pop	{r4, r5, r6, sl, fp, pc}
   19d48:	push	{r4, r5, r6, sl, fp, lr}
   19d4c:	add	fp, sp, #16
   19d50:	sub	sp, sp, #8
   19d54:	mov	r4, r0
   19d58:	bl	11570 <fileno@plt>
   19d5c:	cmn	r0, #1
   19d60:	ble	19dd4 <__mempcpy_chk@plt+0x8744>
   19d64:	mov	r0, r4
   19d68:	bl	114bc <__freading@plt>
   19d6c:	cmp	r0, #0
   19d70:	beq	19d9c <__mempcpy_chk@plt+0x870c>
   19d74:	mov	r0, r4
   19d78:	bl	11570 <fileno@plt>
   19d7c:	mov	r1, #1
   19d80:	mov	r2, #0
   19d84:	mov	r3, #0
   19d88:	str	r1, [sp]
   19d8c:	bl	11444 <lseek64@plt>
   19d90:	and	r0, r0, r1
   19d94:	cmn	r0, #1
   19d98:	beq	19dd4 <__mempcpy_chk@plt+0x8744>
   19d9c:	mov	r0, r4
   19da0:	bl	14808 <__mempcpy_chk@plt+0x3178>
   19da4:	cmp	r0, #0
   19da8:	beq	19dd4 <__mempcpy_chk@plt+0x8744>
   19dac:	bl	1151c <__errno_location@plt>
   19db0:	ldr	r6, [r0]
   19db4:	mov	r5, r0
   19db8:	mov	r0, r4
   19dbc:	bl	11588 <fclose@plt>
   19dc0:	cmp	r6, #0
   19dc4:	strne	r6, [r5]
   19dc8:	mvnne	r0, #0
   19dcc:	sub	sp, fp, #16
   19dd0:	pop	{r4, r5, r6, sl, fp, pc}
   19dd4:	mov	r0, r4
   19dd8:	sub	sp, fp, #16
   19ddc:	pop	{r4, r5, r6, sl, fp, lr}
   19de0:	b	11588 <fclose@plt>
   19de4:	ldrb	r2, [r0]
   19de8:	cmp	r2, #0
   19dec:	beq	19e18 <__mempcpy_chk@plt+0x8788>
   19df0:	add	r3, r0, #1
   19df4:	mov	r0, #0
   19df8:	ror	r0, r0, #23
   19dfc:	uxtab	r0, r0, r2
   19e00:	ldrb	r2, [r3], #1
   19e04:	cmp	r2, #0
   19e08:	bne	19df8 <__mempcpy_chk@plt+0x8768>
   19e0c:	udiv	r2, r0, r1
   19e10:	mls	r0, r2, r1, r0
   19e14:	bx	lr
   19e18:	mov	r0, #0
   19e1c:	udiv	r2, r0, r1
   19e20:	mls	r0, r2, r1, r0
   19e24:	bx	lr
   19e28:	push	{fp, lr}
   19e2c:	mov	fp, sp
   19e30:	mov	r0, #14
   19e34:	bl	115e8 <nl_langinfo@plt>
   19e38:	movw	r1, #44852	; 0xaf34
   19e3c:	cmp	r0, #0
   19e40:	movt	r1, #1
   19e44:	movne	r1, r0
   19e48:	movw	r0, #47790	; 0xbaae
   19e4c:	ldrb	r2, [r1]
   19e50:	movt	r0, #1
   19e54:	cmp	r2, #0
   19e58:	movne	r0, r1
   19e5c:	pop	{fp, pc}
   19e60:	push	{r4, r5, r6, r7, fp, lr}
   19e64:	add	fp, sp, #16
   19e68:	sub	sp, sp, #8
   19e6c:	add	r5, sp, #4
   19e70:	cmp	r0, #0
   19e74:	mov	r7, r2
   19e78:	mov	r4, r1
   19e7c:	movne	r5, r0
   19e80:	mov	r0, r5
   19e84:	bl	11474 <mbrtowc@plt>
   19e88:	mov	r6, r0
   19e8c:	cmp	r7, #0
   19e90:	beq	19eb4 <__mempcpy_chk@plt+0x8824>
   19e94:	cmn	r6, #2
   19e98:	bcc	19eb4 <__mempcpy_chk@plt+0x8824>
   19e9c:	mov	r0, #0
   19ea0:	bl	1a0e8 <__mempcpy_chk@plt+0x8a58>
   19ea4:	cmp	r0, #0
   19ea8:	ldrbeq	r0, [r4]
   19eac:	moveq	r6, #1
   19eb0:	streq	r0, [r5]
   19eb4:	mov	r0, r6
   19eb8:	sub	sp, fp, #16
   19ebc:	pop	{r4, r5, r6, r7, fp, pc}
   19ec0:	cmp	r2, #0
   19ec4:	beq	19ef4 <__mempcpy_chk@plt+0x8864>
   19ec8:	mvn	r3, #0
   19ecc:	udiv	r3, r3, r2
   19ed0:	cmp	r3, r1
   19ed4:	bcs	19ef4 <__mempcpy_chk@plt+0x8864>
   19ed8:	push	{fp, lr}
   19edc:	mov	fp, sp
   19ee0:	bl	1151c <__errno_location@plt>
   19ee4:	mov	r1, #12
   19ee8:	str	r1, [r0]
   19eec:	mov	r0, #0
   19ef0:	pop	{fp, pc}
   19ef4:	mul	r1, r2, r1
   19ef8:	b	19764 <__mempcpy_chk@plt+0x80d4>
   19efc:	mov	r1, #0
   19f00:	mov	r2, #3
   19f04:	b	19f08 <__mempcpy_chk@plt+0x8878>
   19f08:	sub	sp, sp, #8
   19f0c:	push	{r4, r5, r6, r7, fp, lr}
   19f10:	add	fp, sp, #16
   19f14:	sub	sp, sp, #8
   19f18:	mov	r5, r0
   19f1c:	add	r0, fp, #8
   19f20:	cmp	r1, #11
   19f24:	str	r3, [fp, #12]
   19f28:	str	r2, [fp, #8]
   19f2c:	str	r0, [sp, #4]
   19f30:	bhi	19f6c <__mempcpy_chk@plt+0x88dc>
   19f34:	mov	r0, #1
   19f38:	movw	r2, #1300	; 0x514
   19f3c:	tst	r2, r0, lsl r1
   19f40:	bne	1a02c <__mempcpy_chk@plt+0x899c>
   19f44:	movw	r2, #2570	; 0xa0a
   19f48:	tst	r2, r0, lsl r1
   19f4c:	bne	19f94 <__mempcpy_chk@plt+0x8904>
   19f50:	cmp	r1, #0
   19f54:	bne	19f6c <__mempcpy_chk@plt+0x88dc>
   19f58:	ldr	r0, [sp, #4]
   19f5c:	add	r1, r0, #4
   19f60:	str	r1, [sp, #4]
   19f64:	mov	r1, #0
   19f68:	b	1a038 <__mempcpy_chk@plt+0x89a8>
   19f6c:	sub	r0, r1, #1024	; 0x400
   19f70:	cmp	r0, #10
   19f74:	bhi	1a02c <__mempcpy_chk@plt+0x899c>
   19f78:	mov	r2, #1
   19f7c:	movw	r3, #645	; 0x285
   19f80:	tst	r3, r2, lsl r0
   19f84:	bne	1a02c <__mempcpy_chk@plt+0x899c>
   19f88:	movw	r3, #1282	; 0x502
   19f8c:	tst	r3, r2, lsl r0
   19f90:	beq	19fa0 <__mempcpy_chk@plt+0x8910>
   19f94:	mov	r0, r5
   19f98:	bl	115ac <fcntl64@plt>
   19f9c:	b	1a044 <__mempcpy_chk@plt+0x89b4>
   19fa0:	cmp	r0, #6
   19fa4:	bne	1a02c <__mempcpy_chk@plt+0x899c>
   19fa8:	ldr	r0, [sp, #4]
   19fac:	movw	r7, #49944	; 0xc318
   19fb0:	movt	r7, #2
   19fb4:	add	r1, r0, #4
   19fb8:	str	r1, [sp, #4]
   19fbc:	ldr	r6, [r0]
   19fc0:	ldr	r0, [r7]
   19fc4:	cmp	r0, #0
   19fc8:	blt	1a068 <__mempcpy_chk@plt+0x89d8>
   19fcc:	mov	r0, r5
   19fd0:	movw	r1, #1030	; 0x406
   19fd4:	mov	r2, r6
   19fd8:	bl	115ac <fcntl64@plt>
   19fdc:	mov	r4, r0
   19fe0:	cmn	r0, #1
   19fe4:	bgt	1a05c <__mempcpy_chk@plt+0x89cc>
   19fe8:	bl	1151c <__errno_location@plt>
   19fec:	ldr	r0, [r0]
   19ff0:	cmp	r0, #22
   19ff4:	bne	1a05c <__mempcpy_chk@plt+0x89cc>
   19ff8:	mov	r0, r5
   19ffc:	mov	r1, #0
   1a000:	mov	r2, r6
   1a004:	bl	115ac <fcntl64@plt>
   1a008:	mov	r4, r0
   1a00c:	cmp	r0, #0
   1a010:	blt	1a048 <__mempcpy_chk@plt+0x89b8>
   1a014:	mvn	r0, #0
   1a018:	str	r0, [r7]
   1a01c:	mov	r0, #1
   1a020:	cmp	r0, #0
   1a024:	bne	1a094 <__mempcpy_chk@plt+0x8a04>
   1a028:	b	1a048 <__mempcpy_chk@plt+0x89b8>
   1a02c:	ldr	r0, [sp, #4]
   1a030:	add	r2, r0, #4
   1a034:	str	r2, [sp, #4]
   1a038:	ldr	r2, [r0]
   1a03c:	mov	r0, r5
   1a040:	bl	115ac <fcntl64@plt>
   1a044:	mov	r4, r0
   1a048:	mov	r0, r4
   1a04c:	sub	sp, fp, #16
   1a050:	pop	{r4, r5, r6, r7, fp, lr}
   1a054:	add	sp, sp, #8
   1a058:	bx	lr
   1a05c:	mov	r0, #1
   1a060:	str	r0, [r7]
   1a064:	b	1a048 <__mempcpy_chk@plt+0x89b8>
   1a068:	mov	r0, r5
   1a06c:	mov	r1, #0
   1a070:	mov	r2, r6
   1a074:	bl	115ac <fcntl64@plt>
   1a078:	mov	r4, r0
   1a07c:	ldr	r0, [r7]
   1a080:	add	r0, r0, #1
   1a084:	clz	r0, r0
   1a088:	lsr	r0, r0, #5
   1a08c:	cmp	r0, #0
   1a090:	beq	1a048 <__mempcpy_chk@plt+0x89b8>
   1a094:	cmp	r4, #0
   1a098:	blt	1a048 <__mempcpy_chk@plt+0x89b8>
   1a09c:	mov	r0, r4
   1a0a0:	mov	r1, #1
   1a0a4:	bl	115ac <fcntl64@plt>
   1a0a8:	cmp	r0, #0
   1a0ac:	blt	1a0c8 <__mempcpy_chk@plt+0x8a38>
   1a0b0:	orr	r2, r0, #1
   1a0b4:	mov	r0, r4
   1a0b8:	mov	r1, #2
   1a0bc:	bl	115ac <fcntl64@plt>
   1a0c0:	cmn	r0, #1
   1a0c4:	bne	1a048 <__mempcpy_chk@plt+0x89b8>
   1a0c8:	bl	1151c <__errno_location@plt>
   1a0cc:	ldr	r6, [r0]
   1a0d0:	mov	r5, r0
   1a0d4:	mov	r0, r4
   1a0d8:	bl	11660 <close@plt>
   1a0dc:	str	r6, [r5]
   1a0e0:	mvn	r4, #0
   1a0e4:	b	1a048 <__mempcpy_chk@plt+0x89b8>
   1a0e8:	push	{r4, sl, fp, lr}
   1a0ec:	add	fp, sp, #8
   1a0f0:	sub	sp, sp, #264	; 0x108
   1a0f4:	add	r1, sp, #7
   1a0f8:	movw	r2, #257	; 0x101
   1a0fc:	bl	1a14c <__mempcpy_chk@plt+0x8abc>
   1a100:	mov	r4, #0
   1a104:	cmp	r0, #0
   1a108:	bne	1a140 <__mempcpy_chk@plt+0x8ab0>
   1a10c:	movw	r1, #47796	; 0xbab4
   1a110:	add	r0, sp, #7
   1a114:	movt	r1, #1
   1a118:	bl	11348 <strcmp@plt>
   1a11c:	cmp	r0, #0
   1a120:	beq	1a140 <__mempcpy_chk@plt+0x8ab0>
   1a124:	movw	r1, #47798	; 0xbab6
   1a128:	add	r0, sp, #7
   1a12c:	movt	r1, #1
   1a130:	bl	11348 <strcmp@plt>
   1a134:	mov	r4, r0
   1a138:	cmp	r0, #0
   1a13c:	movwne	r4, #1
   1a140:	mov	r0, r4
   1a144:	sub	sp, fp, #8
   1a148:	pop	{r4, sl, fp, pc}
   1a14c:	push	{r4, r5, r6, r7, fp, lr}
   1a150:	add	fp, sp, #16
   1a154:	mov	r4, r1
   1a158:	mov	r1, #0
   1a15c:	mov	r6, r2
   1a160:	bl	115d0 <setlocale@plt>
   1a164:	cmp	r0, #0
   1a168:	beq	1a198 <__mempcpy_chk@plt+0x8b08>
   1a16c:	mov	r7, r0
   1a170:	bl	11504 <strlen@plt>
   1a174:	cmp	r0, r6
   1a178:	bcs	1a1b8 <__mempcpy_chk@plt+0x8b28>
   1a17c:	add	r2, r0, #1
   1a180:	mov	r0, r4
   1a184:	mov	r1, r7
   1a188:	bl	113c0 <memcpy@plt>
   1a18c:	mov	r5, #0
   1a190:	mov	r0, r5
   1a194:	pop	{r4, r5, r6, r7, fp, pc}
   1a198:	cmp	r6, #0
   1a19c:	mov	r5, #22
   1a1a0:	movne	r0, #0
   1a1a4:	strbne	r0, [r4]
   1a1a8:	movne	r0, r5
   1a1ac:	popne	{r4, r5, r6, r7, fp, pc}
   1a1b0:	mov	r0, r5
   1a1b4:	pop	{r4, r5, r6, r7, fp, pc}
   1a1b8:	mov	r5, #34	; 0x22
   1a1bc:	cmp	r6, #0
   1a1c0:	beq	1a1e0 <__mempcpy_chk@plt+0x8b50>
   1a1c4:	sub	r6, r6, #1
   1a1c8:	mov	r0, r4
   1a1cc:	mov	r1, r7
   1a1d0:	mov	r2, r6
   1a1d4:	bl	113c0 <memcpy@plt>
   1a1d8:	mov	r0, #0
   1a1dc:	strb	r0, [r4, r6]
   1a1e0:	mov	r0, r5
   1a1e4:	pop	{r4, r5, r6, r7, fp, pc}
   1a1e8:	mov	r1, #0
   1a1ec:	b	115d0 <setlocale@plt>
   1a1f0:	cmp	r3, #0
   1a1f4:	cmpeq	r2, #0
   1a1f8:	bne	1a210 <__mempcpy_chk@plt+0x8b80>
   1a1fc:	cmp	r1, #0
   1a200:	cmpeq	r0, #0
   1a204:	mvnne	r1, #0
   1a208:	mvnne	r0, #0
   1a20c:	b	1a22c <__mempcpy_chk@plt+0x8b9c>
   1a210:	sub	sp, sp, #8
   1a214:	push	{sp, lr}
   1a218:	bl	1a23c <__mempcpy_chk@plt+0x8bac>
   1a21c:	ldr	lr, [sp, #4]
   1a220:	add	sp, sp, #8
   1a224:	pop	{r2, r3}
   1a228:	bx	lr
   1a22c:	push	{r1, lr}
   1a230:	mov	r0, #8
   1a234:	bl	11330 <raise@plt>
   1a238:	pop	{r1, pc}
   1a23c:	cmp	r1, r3
   1a240:	cmpeq	r0, r2
   1a244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a248:	mov	r4, r0
   1a24c:	movcc	r0, #0
   1a250:	mov	r5, r1
   1a254:	ldr	lr, [sp, #36]	; 0x24
   1a258:	movcc	r1, r0
   1a25c:	bcc	1a358 <__mempcpy_chk@plt+0x8cc8>
   1a260:	cmp	r3, #0
   1a264:	clzeq	ip, r2
   1a268:	clzne	ip, r3
   1a26c:	addeq	ip, ip, #32
   1a270:	cmp	r5, #0
   1a274:	clzeq	r1, r4
   1a278:	addeq	r1, r1, #32
   1a27c:	clzne	r1, r5
   1a280:	sub	ip, ip, r1
   1a284:	sub	sl, ip, #32
   1a288:	lsl	r9, r3, ip
   1a28c:	rsb	fp, ip, #32
   1a290:	orr	r9, r9, r2, lsl sl
   1a294:	orr	r9, r9, r2, lsr fp
   1a298:	lsl	r8, r2, ip
   1a29c:	cmp	r5, r9
   1a2a0:	cmpeq	r4, r8
   1a2a4:	movcc	r0, #0
   1a2a8:	movcc	r1, r0
   1a2ac:	bcc	1a2c8 <__mempcpy_chk@plt+0x8c38>
   1a2b0:	mov	r0, #1
   1a2b4:	subs	r4, r4, r8
   1a2b8:	lsl	r1, r0, sl
   1a2bc:	orr	r1, r1, r0, lsr fp
   1a2c0:	lsl	r0, r0, ip
   1a2c4:	sbc	r5, r5, r9
   1a2c8:	cmp	ip, #0
   1a2cc:	beq	1a358 <__mempcpy_chk@plt+0x8cc8>
   1a2d0:	lsr	r6, r8, #1
   1a2d4:	orr	r6, r6, r9, lsl #31
   1a2d8:	lsr	r7, r9, #1
   1a2dc:	mov	r2, ip
   1a2e0:	b	1a304 <__mempcpy_chk@plt+0x8c74>
   1a2e4:	subs	r3, r4, r6
   1a2e8:	sbc	r8, r5, r7
   1a2ec:	adds	r3, r3, r3
   1a2f0:	adc	r8, r8, r8
   1a2f4:	adds	r4, r3, #1
   1a2f8:	adc	r5, r8, #0
   1a2fc:	subs	r2, r2, #1
   1a300:	beq	1a320 <__mempcpy_chk@plt+0x8c90>
   1a304:	cmp	r5, r7
   1a308:	cmpeq	r4, r6
   1a30c:	bcs	1a2e4 <__mempcpy_chk@plt+0x8c54>
   1a310:	adds	r4, r4, r4
   1a314:	adc	r5, r5, r5
   1a318:	subs	r2, r2, #1
   1a31c:	bne	1a304 <__mempcpy_chk@plt+0x8c74>
   1a320:	lsr	r3, r4, ip
   1a324:	orr	r3, r3, r5, lsl fp
   1a328:	lsr	r2, r5, ip
   1a32c:	orr	r3, r3, r5, lsr sl
   1a330:	adds	r0, r0, r4
   1a334:	mov	r4, r3
   1a338:	lsl	r3, r2, ip
   1a33c:	orr	r3, r3, r4, lsl sl
   1a340:	lsl	ip, r4, ip
   1a344:	orr	r3, r3, r4, lsr fp
   1a348:	adc	r1, r1, r5
   1a34c:	subs	r0, r0, ip
   1a350:	mov	r5, r2
   1a354:	sbc	r1, r1, r3
   1a358:	cmp	lr, #0
   1a35c:	strdne	r4, [lr]
   1a360:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a364:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a368:	mov	r7, r0
   1a36c:	ldr	r6, [pc, #72]	; 1a3bc <__mempcpy_chk@plt+0x8d2c>
   1a370:	ldr	r5, [pc, #72]	; 1a3c0 <__mempcpy_chk@plt+0x8d30>
   1a374:	add	r6, pc, r6
   1a378:	add	r5, pc, r5
   1a37c:	sub	r6, r6, r5
   1a380:	mov	r8, r1
   1a384:	mov	r9, r2
   1a388:	bl	112f8 <calloc@plt-0x20>
   1a38c:	asrs	r6, r6, #2
   1a390:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a394:	mov	r4, #0
   1a398:	add	r4, r4, #1
   1a39c:	ldr	r3, [r5], #4
   1a3a0:	mov	r2, r9
   1a3a4:	mov	r1, r8
   1a3a8:	mov	r0, r7
   1a3ac:	blx	r3
   1a3b0:	cmp	r6, r4
   1a3b4:	bne	1a398 <__mempcpy_chk@plt+0x8d08>
   1a3b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a3bc:	muleq	r1, r0, fp
   1a3c0:	andeq	r1, r1, r8, lsl #23
   1a3c4:	bx	lr
   1a3c8:	ldr	r3, [pc, #12]	; 1a3dc <__mempcpy_chk@plt+0x8d4c>
   1a3cc:	mov	r1, #0
   1a3d0:	add	r3, pc, r3
   1a3d4:	ldr	r2, [r3]
   1a3d8:	b	11528 <__cxa_atexit@plt>
   1a3dc:	andeq	r1, r1, ip, ror #26

Disassembly of section .fini:

0001a3e0 <.fini>:
   1a3e0:	push	{r3, lr}
   1a3e4:	pop	{r3, pc}
