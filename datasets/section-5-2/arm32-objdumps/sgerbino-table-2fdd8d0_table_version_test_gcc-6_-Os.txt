
../repos/sgerbino-table-2fdd8d0/bin/table_version_test:     file format elf32-littlearm


Disassembly of section .init:

00011a74 <.init>:
   11a74:	push	{r3, lr}
   11a78:	bl	11bc8 <_start@@Base+0x3c>
   11a7c:	pop	{r3, pc}

Disassembly of section .plt:

00011a80 <raise@plt-0x14>:
   11a80:	push	{lr}		; (str lr, [sp, #-4]!)
   11a84:	ldr	lr, [pc, #4]	; 11a90 <raise@plt-0x4>
   11a88:	add	lr, pc, lr
   11a8c:	ldr	pc, [lr, #8]!
   11a90:	andeq	r3, r1, r0, ror r5

00011a94 <raise@plt>:
   11a94:	add	ip, pc, #0, 12
   11a98:	add	ip, ip, #77824	; 0x13000
   11a9c:	ldr	pc, [ip, #1392]!	; 0x570

00011aa0 <strcmp@plt>:
   11aa0:	add	ip, pc, #0, 12
   11aa4:	add	ip, ip, #77824	; 0x13000
   11aa8:	ldr	pc, [ip, #1384]!	; 0x568

00011aac <printf@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #77824	; 0x13000
   11ab4:	ldr	pc, [ip, #1376]!	; 0x560

00011ab8 <free@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #77824	; 0x13000
   11ac0:	ldr	pc, [ip, #1368]!	; 0x558

00011ac4 <realloc@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #77824	; 0x13000
   11acc:	ldr	pc, [ip, #1360]!	; 0x550

00011ad0 <strcpy@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #77824	; 0x13000
   11ad8:	ldr	pc, [ip, #1352]!	; 0x548

00011adc <malloc@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #77824	; 0x13000
   11ae4:	ldr	pc, [ip, #1344]!	; 0x540

00011ae8 <__libc_start_main@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #77824	; 0x13000
   11af0:	ldr	pc, [ip, #1336]!	; 0x538

00011af4 <__gmon_start__@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #77824	; 0x13000
   11afc:	ldr	pc, [ip, #1328]!	; 0x530

00011b00 <strlen@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #77824	; 0x13000
   11b08:	ldr	pc, [ip, #1320]!	; 0x528

00011b0c <snprintf@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #77824	; 0x13000
   11b14:	ldr	pc, [ip, #1312]!	; 0x520

00011b18 <__isoc99_sscanf@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #77824	; 0x13000
   11b20:	ldr	pc, [ip, #1304]!	; 0x518

00011b24 <abort@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #77824	; 0x13000
   11b2c:	ldr	pc, [ip, #1296]!	; 0x510

Disassembly of section .text:

00011b30 <main@@Base>:
   11b30:	push	{r4, lr}
   11b34:	bl	122bc <table_get_major_version@@Base>
   11b38:	mov	r1, r0
   11b3c:	ldr	r0, [pc, #56]	; 11b7c <main@@Base+0x4c>
   11b40:	bl	11aac <printf@plt>
   11b44:	bl	122c4 <table_get_minor_version@@Base>
   11b48:	mov	r1, r0
   11b4c:	ldr	r0, [pc, #44]	; 11b80 <main@@Base+0x50>
   11b50:	bl	11aac <printf@plt>
   11b54:	bl	122cc <table_get_patch_version@@Base>
   11b58:	mov	r1, r0
   11b5c:	ldr	r0, [pc, #32]	; 11b84 <main@@Base+0x54>
   11b60:	bl	11aac <printf@plt>
   11b64:	bl	122d4 <table_get_version@@Base>
   11b68:	mov	r1, r0
   11b6c:	ldr	r0, [pc, #20]	; 11b88 <main@@Base+0x58>
   11b70:	bl	11aac <printf@plt>
   11b74:	mov	r0, #0
   11b78:	pop	{r4, pc}
   11b7c:	andeq	r4, r1, r4, lsl #4
   11b80:	andeq	r4, r1, sp, lsl r2
   11b84:	andeq	r4, r1, r6, lsr r2
   11b88:	andeq	r4, r1, pc, asr #4

00011b8c <_start@@Base>:
   11b8c:	mov	fp, #0
   11b90:	mov	lr, #0
   11b94:	pop	{r1}		; (ldr r1, [sp], #4)
   11b98:	mov	r2, sp
   11b9c:	push	{r2}		; (str r2, [sp, #-4]!)
   11ba0:	push	{r0}		; (str r0, [sp, #-4]!)
   11ba4:	ldr	ip, [pc, #16]	; 11bbc <_start@@Base+0x30>
   11ba8:	push	{ip}		; (str ip, [sp, #-4]!)
   11bac:	ldr	r0, [pc, #12]	; 11bc0 <_start@@Base+0x34>
   11bb0:	ldr	r3, [pc, #12]	; 11bc4 <_start@@Base+0x38>
   11bb4:	bl	11ae8 <__libc_start_main@plt>
   11bb8:	bl	11b24 <abort@plt>
   11bbc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11bc0:	andeq	r1, r1, r0, lsr fp
   11bc4:	muleq	r1, r4, r1
   11bc8:	ldr	r3, [pc, #20]	; 11be4 <_start@@Base+0x58>
   11bcc:	ldr	r2, [pc, #20]	; 11be8 <_start@@Base+0x5c>
   11bd0:	add	r3, pc, r3
   11bd4:	ldr	r2, [r3, r2]
   11bd8:	cmp	r2, #0
   11bdc:	bxeq	lr
   11be0:	b	11af4 <__gmon_start__@plt>
   11be4:	andeq	r3, r1, r8, lsr #8
   11be8:	andeq	r0, r0, r0, asr #32
   11bec:	ldr	r3, [pc, #28]	; 11c10 <_start@@Base+0x84>
   11bf0:	ldr	r0, [pc, #28]	; 11c14 <_start@@Base+0x88>
   11bf4:	sub	r3, r3, r0
   11bf8:	cmp	r3, #6
   11bfc:	bxls	lr
   11c00:	ldr	r3, [pc, #16]	; 11c18 <_start@@Base+0x8c>
   11c04:	cmp	r3, #0
   11c08:	bxeq	lr
   11c0c:	bx	r3
   11c10:	andeq	r5, r2, pc, asr #32
   11c14:	andeq	r5, r2, ip, asr #32
   11c18:	andeq	r0, r0, r0
   11c1c:	ldr	r1, [pc, #36]	; 11c48 <_start@@Base+0xbc>
   11c20:	ldr	r0, [pc, #36]	; 11c4c <_start@@Base+0xc0>
   11c24:	sub	r1, r1, r0
   11c28:	asr	r1, r1, #2
   11c2c:	add	r1, r1, r1, lsr #31
   11c30:	asrs	r1, r1, #1
   11c34:	bxeq	lr
   11c38:	ldr	r3, [pc, #16]	; 11c50 <_start@@Base+0xc4>
   11c3c:	cmp	r3, #0
   11c40:	bxeq	lr
   11c44:	bx	r3
   11c48:	andeq	r5, r2, ip, asr #32
   11c4c:	andeq	r5, r2, ip, asr #32
   11c50:	andeq	r0, r0, r0
   11c54:	push	{r4, lr}
   11c58:	ldr	r4, [pc, #24]	; 11c78 <_start@@Base+0xec>
   11c5c:	ldrb	r3, [r4]
   11c60:	cmp	r3, #0
   11c64:	popne	{r4, pc}
   11c68:	bl	11bec <_start@@Base+0x60>
   11c6c:	mov	r3, #1
   11c70:	strb	r3, [r4]
   11c74:	pop	{r4, pc}
   11c78:	andeq	r5, r2, ip, asr #32
   11c7c:	ldr	r0, [pc, #40]	; 11cac <_start@@Base+0x120>
   11c80:	ldr	r3, [r0]
   11c84:	cmp	r3, #0
   11c88:	bne	11c90 <_start@@Base+0x104>
   11c8c:	b	11c1c <_start@@Base+0x90>
   11c90:	ldr	r3, [pc, #24]	; 11cb0 <_start@@Base+0x124>
   11c94:	cmp	r3, #0
   11c98:	beq	11c8c <_start@@Base+0x100>
   11c9c:	push	{r4, lr}
   11ca0:	blx	r3
   11ca4:	pop	{r4, lr}
   11ca8:	b	11c1c <_start@@Base+0x90>
   11cac:	andeq	r4, r2, r4, lsl pc
   11cb0:	andeq	r0, r0, r0

00011cb4 <table_init@@Base>:
   11cb4:	mov	r3, #0
   11cb8:	mov	r2, #10
   11cbc:	mov	r1, #20
   11cc0:	str	r3, [r0]
   11cc4:	str	r3, [r0, #4]
   11cc8:	str	r3, [r0, #12]
   11ccc:	str	r2, [r0, #8]
   11cd0:	str	r3, [r0, #16]
   11cd4:	str	r3, [r0, #20]
   11cd8:	str	r3, [r0, #28]
   11cdc:	str	r1, [r0, #24]
   11ce0:	str	r3, [r0, #36]	; 0x24
   11ce4:	str	r3, [r0, #40]	; 0x28
   11ce8:	str	r3, [r0, #44]	; 0x2c
   11cec:	str	r3, [r0, #32]
   11cf0:	str	r3, [r0, #52]	; 0x34
   11cf4:	str	r2, [r0, #48]	; 0x30
   11cf8:	bx	lr

00011cfc <table_new@@Base>:
   11cfc:	push	{r4, lr}
   11d00:	mov	r0, #56	; 0x38
   11d04:	bl	11adc <malloc@plt>
   11d08:	mov	r4, r0
   11d0c:	bl	11cb4 <table_init@@Base>
   11d10:	pop	{r4, pc}

00011d14 <table_destroy@@Base>:
   11d14:	push	{r4, r5, r6, lr}
   11d18:	subs	r4, r0, #0
   11d1c:	popeq	{r4, r5, r6, pc}
   11d20:	mvn	r2, #0
   11d24:	mov	r3, #64	; 0x40
   11d28:	mov	r1, r2
   11d2c:	bl	124f0 <table_notify@@Base>
   11d30:	mov	r0, r4
   11d34:	bl	12ea0 <table_get_row_length@@Base>
   11d38:	mov	r5, #0
   11d3c:	mov	r6, r0
   11d40:	cmp	r6, r5
   11d44:	bgt	11db4 <table_destroy@@Base+0xa0>
   11d48:	ldr	r0, [r4, #16]
   11d4c:	cmp	r0, #0
   11d50:	beq	11d58 <table_destroy@@Base+0x44>
   11d54:	bl	11ab8 <free@plt>
   11d58:	mov	r0, r4
   11d5c:	bl	125c8 <table_get_column_length@@Base>
   11d60:	mov	r5, #0
   11d64:	mov	r6, r0
   11d68:	cmp	r6, r5
   11d6c:	bgt	11dc8 <table_destroy@@Base+0xb4>
   11d70:	ldr	r0, [r4]
   11d74:	cmp	r0, #0
   11d78:	beq	11d80 <table_destroy@@Base+0x6c>
   11d7c:	bl	11ab8 <free@plt>
   11d80:	ldr	r0, [r4, #36]	; 0x24
   11d84:	cmp	r0, #0
   11d88:	beq	11d90 <table_destroy@@Base+0x7c>
   11d8c:	bl	11ab8 <free@plt>
   11d90:	ldr	r0, [r4, #40]	; 0x28
   11d94:	cmp	r0, #0
   11d98:	beq	11da0 <table_destroy@@Base+0x8c>
   11d9c:	bl	11ab8 <free@plt>
   11da0:	ldr	r0, [r4, #44]	; 0x2c
   11da4:	cmp	r0, #0
   11da8:	popeq	{r4, r5, r6, pc}
   11dac:	pop	{r4, r5, r6, lr}
   11db0:	b	11ab8 <free@plt>
   11db4:	mov	r1, r5
   11db8:	mov	r0, r4
   11dbc:	bl	12e50 <table_row_destroy@@Base>
   11dc0:	add	r5, r5, #1
   11dc4:	b	11d40 <table_destroy@@Base+0x2c>
   11dc8:	mov	r1, r5
   11dcc:	mov	r0, r4
   11dd0:	bl	125ac <table_column_destroy@@Base>
   11dd4:	add	r5, r5, #1
   11dd8:	b	11d68 <table_destroy@@Base+0x54>

00011ddc <table_delete@@Base>:
   11ddc:	push	{r4, lr}
   11de0:	mov	r4, r0
   11de4:	bl	11d14 <table_destroy@@Base>
   11de8:	mov	r0, r4
   11dec:	pop	{r4, lr}
   11df0:	b	11ab8 <free@plt>

00011df4 <table_dupe@@Base>:
   11df4:	push	{r4, r5, r6, r7, r8, r9, lr}
   11df8:	sub	sp, sp, #20
   11dfc:	mov	r6, r0
   11e00:	bl	12ea0 <table_get_row_length@@Base>
   11e04:	mov	r4, #0
   11e08:	mov	r9, r0
   11e0c:	mov	r0, r6
   11e10:	bl	125c8 <table_get_column_length@@Base>
   11e14:	mov	r8, r0
   11e18:	bl	11cfc <table_new@@Base>
   11e1c:	mov	r7, r0
   11e20:	cmp	r4, r8
   11e24:	blt	11e40 <table_dupe@@Base+0x4c>
   11e28:	mov	r5, #0
   11e2c:	cmp	r5, r9
   11e30:	mov	r0, r7
   11e34:	blt	11e74 <table_dupe@@Base+0x80>
   11e38:	add	sp, sp, #20
   11e3c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11e40:	mov	r1, r4
   11e44:	mov	r0, r6
   11e48:	bl	1289c <table_get_column_name@@Base>
   11e4c:	mov	r1, r4
   11e50:	add	r4, r4, #1
   11e54:	mov	r5, r0
   11e58:	mov	r0, r6
   11e5c:	bl	12620 <table_get_column_data_type@@Base>
   11e60:	mov	r1, r5
   11e64:	mov	r2, r0
   11e68:	mov	r0, r7
   11e6c:	bl	12634 <table_add_column@@Base>
   11e70:	b	11e20 <table_dupe@@Base+0x2c>
   11e74:	bl	12ea8 <table_add_row@@Base>
   11e78:	mov	r4, #0
   11e7c:	cmp	r4, r8
   11e80:	addge	r5, r5, #1
   11e84:	bge	11e2c <table_dupe@@Base+0x38>
   11e88:	mov	r1, r4
   11e8c:	mov	r0, r6
   11e90:	bl	12620 <table_get_column_data_type@@Base>
   11e94:	cmp	r0, #23
   11e98:	ldrls	pc, [pc, r0, lsl #2]
   11e9c:	b	11f24 <table_dupe@@Base+0x130>
   11ea0:	andeq	r1, r1, r0, lsl #30
   11ea4:	andeq	r1, r1, ip, lsr #30
   11ea8:	andeq	r1, r1, r4, asr pc
   11eac:	andeq	r1, r1, ip, ror pc
   11eb0:	andeq	r1, r1, r4, lsr #31
   11eb4:	andeq	r1, r1, ip, asr #31
   11eb8:	strdeq	r1, [r1], -r4
   11ebc:	andeq	r2, r1, ip, lsl r0
   11ec0:	andeq	r2, r1, r4, asr #32
   11ec4:	andeq	r2, r1, ip, rrx
   11ec8:	muleq	r1, r4, r0
   11ecc:	strheq	r2, [r1], -ip
   11ed0:	andeq	r2, r1, r4, ror #1
   11ed4:	andeq	r2, r1, ip, lsl #2
   11ed8:	andeq	r2, r1, r4, lsr r1
   11edc:	andeq	r2, r1, ip, asr r1
   11ee0:	andeq	r2, r1, ip, lsr #3
   11ee4:	ldrdeq	r2, [r1], -r0
   11ee8:	strdeq	r2, [r1], -r4
   11eec:	andeq	r2, r1, r0, asr #4
   11ef0:	andeq	r2, r1, r8, ror #4
   11ef4:	andeq	r2, r1, r4, lsl #3
   11ef8:	andeq	r2, r1, r8, lsl r2
   11efc:	muleq	r1, r0, r2
   11f00:	mov	r2, r4
   11f04:	mov	r1, r5
   11f08:	mov	r0, r6
   11f0c:	bl	12d58 <table_get_int@@Base>
   11f10:	mov	r2, r4
   11f14:	mov	r1, r5
   11f18:	mov	r3, r0
   11f1c:	mov	r0, r7
   11f20:	bl	13364 <table_set_int@@Base>
   11f24:	add	r4, r4, #1
   11f28:	b	11e7c <table_dupe@@Base+0x88>
   11f2c:	mov	r2, r4
   11f30:	mov	r1, r5
   11f34:	mov	r0, r6
   11f38:	bl	12d6c <table_get_uint@@Base>
   11f3c:	mov	r2, r4
   11f40:	mov	r1, r5
   11f44:	mov	r3, r0
   11f48:	mov	r0, r7
   11f4c:	bl	13388 <table_set_uint@@Base>
   11f50:	b	11f24 <table_dupe@@Base+0x130>
   11f54:	mov	r2, r4
   11f58:	mov	r1, r5
   11f5c:	mov	r0, r6
   11f60:	bl	12d38 <table_get_int8@@Base>
   11f64:	mov	r2, r4
   11f68:	mov	r1, r5
   11f6c:	mov	r3, r0
   11f70:	mov	r0, r7
   11f74:	bl	133ac <table_set_int8@@Base>
   11f78:	b	11f24 <table_dupe@@Base+0x130>
   11f7c:	mov	r2, r4
   11f80:	mov	r1, r5
   11f84:	mov	r0, r6
   11f88:	bl	12e24 <table_get_uint8@@Base>
   11f8c:	mov	r2, r4
   11f90:	mov	r1, r5
   11f94:	mov	r3, r0
   11f98:	mov	r0, r7
   11f9c:	bl	133d0 <table_set_uint8@@Base>
   11fa0:	b	11f24 <table_dupe@@Base+0x130>
   11fa4:	mov	r2, r4
   11fa8:	mov	r1, r5
   11fac:	mov	r0, r6
   11fb0:	bl	12d80 <table_get_int16@@Base>
   11fb4:	mov	r2, r4
   11fb8:	mov	r1, r5
   11fbc:	mov	r3, r0
   11fc0:	mov	r0, r7
   11fc4:	bl	133f4 <table_set_int16@@Base>
   11fc8:	b	11f24 <table_dupe@@Base+0x130>
   11fcc:	mov	r2, r4
   11fd0:	mov	r1, r5
   11fd4:	mov	r0, r6
   11fd8:	bl	12d94 <table_get_uint16@@Base>
   11fdc:	mov	r2, r4
   11fe0:	mov	r1, r5
   11fe4:	mov	r3, r0
   11fe8:	mov	r0, r7
   11fec:	bl	13418 <table_set_uint16@@Base>
   11ff0:	b	11f24 <table_dupe@@Base+0x130>
   11ff4:	mov	r2, r4
   11ff8:	mov	r1, r5
   11ffc:	mov	r0, r6
   12000:	bl	12d48 <table_get_int32@@Base>
   12004:	mov	r2, r4
   12008:	mov	r1, r5
   1200c:	mov	r3, r0
   12010:	mov	r0, r7
   12014:	bl	1343c <table_set_int32@@Base>
   12018:	b	11f24 <table_dupe@@Base+0x130>
   1201c:	mov	r2, r4
   12020:	mov	r1, r5
   12024:	mov	r0, r6
   12028:	bl	12d5c <table_get_uint32@@Base>
   1202c:	mov	r2, r4
   12030:	mov	r1, r5
   12034:	mov	r3, r0
   12038:	mov	r0, r7
   1203c:	bl	13460 <table_set_uint32@@Base>
   12040:	b	11f24 <table_dupe@@Base+0x130>
   12044:	mov	r2, r4
   12048:	mov	r1, r5
   1204c:	mov	r0, r6
   12050:	bl	12dc8 <table_get_int64@@Base>
   12054:	mov	r2, r4
   12058:	strd	r0, [sp]
   1205c:	mov	r1, r5
   12060:	mov	r0, r7
   12064:	bl	13484 <table_set_int64@@Base>
   12068:	b	11f24 <table_dupe@@Base+0x130>
   1206c:	mov	r2, r4
   12070:	mov	r1, r5
   12074:	mov	r0, r6
   12078:	bl	12ddc <table_get_uint64@@Base>
   1207c:	mov	r2, r4
   12080:	strd	r0, [sp]
   12084:	mov	r1, r5
   12088:	mov	r0, r7
   1208c:	bl	134a0 <table_set_uint64@@Base>
   12090:	b	11f24 <table_dupe@@Base+0x130>
   12094:	mov	r2, r4
   12098:	mov	r1, r5
   1209c:	mov	r0, r6
   120a0:	bl	12d70 <table_get_short@@Base>
   120a4:	mov	r2, r4
   120a8:	mov	r1, r5
   120ac:	mov	r3, r0
   120b0:	mov	r0, r7
   120b4:	bl	134bc <table_set_short@@Base>
   120b8:	b	11f24 <table_dupe@@Base+0x130>
   120bc:	mov	r2, r4
   120c0:	mov	r1, r5
   120c4:	mov	r0, r6
   120c8:	bl	12d84 <table_get_ushort@@Base>
   120cc:	mov	r2, r4
   120d0:	mov	r1, r5
   120d4:	mov	r3, r0
   120d8:	mov	r0, r7
   120dc:	bl	134e0 <table_set_ushort@@Base>
   120e0:	b	11f24 <table_dupe@@Base+0x130>
   120e4:	mov	r2, r4
   120e8:	mov	r1, r5
   120ec:	mov	r0, r6
   120f0:	bl	12d98 <table_get_long@@Base>
   120f4:	mov	r2, r4
   120f8:	mov	r1, r5
   120fc:	mov	r3, r0
   12100:	mov	r0, r7
   12104:	bl	13504 <table_set_long@@Base>
   12108:	b	11f24 <table_dupe@@Base+0x130>
   1210c:	mov	r2, r4
   12110:	mov	r1, r5
   12114:	mov	r0, r6
   12118:	bl	12da8 <table_get_ulong@@Base>
   1211c:	mov	r2, r4
   12120:	mov	r1, r5
   12124:	mov	r3, r0
   12128:	mov	r0, r7
   1212c:	bl	13528 <table_set_ulong@@Base>
   12130:	b	11f24 <table_dupe@@Base+0x130>
   12134:	mov	r2, r4
   12138:	mov	r1, r5
   1213c:	mov	r0, r6
   12140:	bl	12db8 <table_get_llong@@Base>
   12144:	mov	r2, r4
   12148:	strd	r0, [sp]
   1214c:	mov	r1, r5
   12150:	mov	r0, r7
   12154:	bl	1354c <table_set_llong@@Base>
   12158:	b	11f24 <table_dupe@@Base+0x130>
   1215c:	mov	r2, r4
   12160:	mov	r1, r5
   12164:	mov	r0, r6
   12168:	bl	12dcc <table_get_ullong@@Base>
   1216c:	mov	r2, r4
   12170:	strd	r0, [sp]
   12174:	mov	r1, r5
   12178:	mov	r0, r7
   1217c:	bl	13568 <table_set_ullong@@Base>
   12180:	b	11f24 <table_dupe@@Base+0x130>
   12184:	mov	r2, r4
   12188:	mov	r1, r5
   1218c:	mov	r0, r6
   12190:	bl	12e28 <table_get_string@@Base>
   12194:	mov	r2, r4
   12198:	mov	r1, r5
   1219c:	mov	r3, r0
   121a0:	mov	r0, r7
   121a4:	bl	135e4 <table_set_string@@Base>
   121a8:	b	11f24 <table_dupe@@Base+0x130>
   121ac:	mov	r2, r4
   121b0:	mov	r1, r5
   121b4:	mov	r0, r6
   121b8:	bl	12de0 <table_get_float@@Base>
   121bc:	mov	r2, r4
   121c0:	mov	r1, r5
   121c4:	mov	r0, r7
   121c8:	bl	13584 <table_set_float@@Base>
   121cc:	b	11f24 <table_dupe@@Base+0x130>
   121d0:	mov	r2, r4
   121d4:	mov	r1, r5
   121d8:	mov	r0, r6
   121dc:	bl	12df0 <table_get_double@@Base>
   121e0:	mov	r2, r4
   121e4:	mov	r1, r5
   121e8:	mov	r0, r7
   121ec:	bl	135a4 <table_set_double@@Base>
   121f0:	b	11f24 <table_dupe@@Base+0x130>
   121f4:	mov	r2, r4
   121f8:	mov	r1, r5
   121fc:	mov	r0, r6
   12200:	bl	12e00 <table_get_ldouble@@Base>
   12204:	mov	r2, r4
   12208:	mov	r1, r5
   1220c:	mov	r0, r7
   12210:	bl	135c4 <table_set_ldouble@@Base>
   12214:	b	11f24 <table_dupe@@Base+0x130>
   12218:	mov	r2, r4
   1221c:	mov	r1, r5
   12220:	mov	r0, r6
   12224:	bl	12d28 <table_get_bool@@Base>
   12228:	mov	r2, r4
   1222c:	mov	r1, r5
   12230:	mov	r3, r0
   12234:	mov	r0, r7
   12238:	bl	13340 <table_set_bool@@Base>
   1223c:	b	11f24 <table_dupe@@Base+0x130>
   12240:	mov	r2, r4
   12244:	mov	r1, r5
   12248:	mov	r0, r6
   1224c:	bl	12e20 <table_get_char@@Base>
   12250:	mov	r2, r4
   12254:	mov	r1, r5
   12258:	mov	r3, r0
   1225c:	mov	r0, r7
   12260:	bl	135fc <table_set_char@@Base>
   12264:	b	11f24 <table_dupe@@Base+0x130>
   12268:	mov	r2, r4
   1226c:	mov	r1, r5
   12270:	mov	r0, r6
   12274:	bl	12e10 <table_get_uchar@@Base>
   12278:	mov	r2, r4
   1227c:	mov	r1, r5
   12280:	mov	r3, r0
   12284:	mov	r0, r7
   12288:	bl	13620 <table_set_uchar@@Base>
   1228c:	b	11f24 <table_dupe@@Base+0x130>
   12290:	mov	r2, r4
   12294:	mov	r1, r5
   12298:	mov	r0, r6
   1229c:	bl	12e2c <table_get_ptr@@Base>
   122a0:	add	r3, sp, #12
   122a4:	mov	r2, r4
   122a8:	mov	r1, r5
   122ac:	str	r0, [sp, #12]
   122b0:	mov	r0, r7
   122b4:	bl	13644 <table_set_ptr@@Base>
   122b8:	b	11f24 <table_dupe@@Base+0x130>

000122bc <table_get_major_version@@Base>:
   122bc:	mov	r0, #0
   122c0:	bx	lr

000122c4 <table_get_minor_version@@Base>:
   122c4:	mov	r0, #0
   122c8:	bx	lr

000122cc <table_get_patch_version@@Base>:
   122cc:	mov	r0, #0
   122d0:	bx	lr

000122d4 <table_get_version@@Base>:
   122d4:	ldr	r0, [pc]	; 122dc <table_get_version@@Base+0x8>
   122d8:	bx	lr
   122dc:	andeq	r4, r1, lr, asr #4

000122e0 <table_get_callback_length@@Base>:
   122e0:	ldr	r0, [r0, #32]
   122e4:	bx	lr

000122e8 <table_register_callback@@Base>:
   122e8:	push	{r4, r5, r6, r7, r8, lr}
   122ec:	mov	r4, r0
   122f0:	ldr	r0, [r0, #32]
   122f4:	mov	ip, #0
   122f8:	cmp	ip, r0
   122fc:	blt	12390 <table_register_callback@@Base+0xa8>
   12300:	ldr	r5, [r4, #48]	; 0x30
   12304:	mov	r8, r1
   12308:	mov	r1, r5
   1230c:	mov	r6, r3
   12310:	mov	r7, r2
   12314:	bl	14164 <table_cell_nullify@@Base+0x218>
   12318:	cmp	r1, #0
   1231c:	bne	12364 <table_register_callback@@Base+0x7c>
   12320:	ldr	r1, [r4, #52]	; 0x34
   12324:	ldr	r0, [r4, #36]	; 0x24
   12328:	add	r1, r5, r1
   1232c:	str	r1, [r4, #52]	; 0x34
   12330:	lsl	r1, r1, #2
   12334:	bl	11ac4 <realloc@plt>
   12338:	ldr	r1, [r4, #52]	; 0x34
   1233c:	lsl	r1, r1, #2
   12340:	str	r0, [r4, #36]	; 0x24
   12344:	ldr	r0, [r4, #40]	; 0x28
   12348:	bl	11ac4 <realloc@plt>
   1234c:	ldr	r1, [r4, #52]	; 0x34
   12350:	lsl	r1, r1, #2
   12354:	str	r0, [r4, #40]	; 0x28
   12358:	ldr	r0, [r4, #44]	; 0x2c
   1235c:	bl	11ac4 <realloc@plt>
   12360:	str	r0, [r4, #44]	; 0x2c
   12364:	ldr	r3, [r4, #32]
   12368:	ldr	r2, [r4, #36]	; 0x24
   1236c:	str	r8, [r2, r3, lsl #2]
   12370:	ldr	r2, [r4, #40]	; 0x28
   12374:	str	r7, [r2, r3, lsl #2]
   12378:	ldr	r2, [r4, #44]	; 0x2c
   1237c:	str	r6, [r2, r3, lsl #2]
   12380:	ldr	r3, [r4, #32]
   12384:	add	r3, r3, #1
   12388:	str	r3, [r4, #32]
   1238c:	pop	{r4, r5, r6, r7, r8, pc}
   12390:	ldr	r5, [r4, #36]	; 0x24
   12394:	lsl	lr, ip, #2
   12398:	ldr	r5, [r5, ip, lsl #2]
   1239c:	cmp	r1, r5
   123a0:	bne	123b4 <table_register_callback@@Base+0xcc>
   123a4:	ldr	r5, [r4, #40]	; 0x28
   123a8:	ldr	r5, [r5, ip, lsl #2]
   123ac:	cmp	r2, r5
   123b0:	beq	123bc <table_register_callback@@Base+0xd4>
   123b4:	add	ip, ip, #1
   123b8:	b	122f8 <table_register_callback@@Base+0x10>
   123bc:	cmp	ip, #0
   123c0:	ble	12300 <table_register_callback@@Base+0x18>
   123c4:	ldr	r1, [r4, #44]	; 0x2c
   123c8:	ldr	r2, [r1, lr]
   123cc:	orr	r3, r2, r3
   123d0:	str	r3, [r1, lr]
   123d4:	pop	{r4, r5, r6, r7, r8, pc}

000123d8 <table_unregister_callback@@Base>:
   123d8:	push	{r4, r5, r6, lr}
   123dc:	mov	r4, r0
   123e0:	ldr	r0, [r0, #32]
   123e4:	mov	r3, #0
   123e8:	cmp	r3, r0
   123ec:	blt	123f4 <table_unregister_callback@@Base+0x1c>
   123f0:	pop	{r4, r5, r6, pc}
   123f4:	ldr	lr, [r4, #36]	; 0x24
   123f8:	lsl	ip, r3, #2
   123fc:	ldr	lr, [lr, r3, lsl #2]
   12400:	cmp	r1, lr
   12404:	bne	12418 <table_unregister_callback@@Base+0x40>
   12408:	ldr	lr, [r4, #40]	; 0x28
   1240c:	ldr	lr, [lr, r3, lsl #2]
   12410:	cmp	r2, lr
   12414:	beq	1244c <table_unregister_callback@@Base+0x74>
   12418:	add	r3, r3, #1
   1241c:	b	123e8 <table_unregister_callback@@Base+0x10>
   12420:	ldr	r1, [r4, #36]	; 0x24
   12424:	add	r3, r3, #1
   12428:	ldr	r0, [r1, r2]
   1242c:	str	r0, [r1, ip]
   12430:	ldr	r1, [r4, #40]	; 0x28
   12434:	ldr	r0, [r1, r2]
   12438:	str	r0, [r1, ip]
   1243c:	ldr	r1, [r4, #44]	; 0x2c
   12440:	ldr	r0, [r1, r2]
   12444:	str	r0, [r1, ip]
   12448:	mov	ip, r2
   1244c:	ldr	r0, [r4, #32]
   12450:	add	r2, ip, #4
   12454:	sub	r0, r0, #1
   12458:	cmp	r3, r0
   1245c:	blt	12420 <table_unregister_callback@@Base+0x48>
   12460:	ldr	r6, [r4, #48]	; 0x30
   12464:	str	r0, [r4, #32]
   12468:	mov	r1, r6
   1246c:	bl	14164 <table_cell_nullify@@Base+0x218>
   12470:	cmp	r1, #0
   12474:	popne	{r4, r5, r6, pc}
   12478:	ldr	r5, [r4, #52]	; 0x34
   1247c:	sub	r5, r5, r6
   12480:	cmp	r5, #0
   12484:	str	r5, [r4, #52]	; 0x34
   12488:	beq	124c8 <table_unregister_callback@@Base+0xf0>
   1248c:	lsl	r1, r5, #2
   12490:	ldr	r0, [r4, #36]	; 0x24
   12494:	bl	11ac4 <realloc@plt>
   12498:	ldr	r1, [r4, #52]	; 0x34
   1249c:	lsl	r1, r1, #2
   124a0:	str	r0, [r4, #36]	; 0x24
   124a4:	ldr	r0, [r4, #40]	; 0x28
   124a8:	bl	11ac4 <realloc@plt>
   124ac:	ldr	r1, [r4, #52]	; 0x34
   124b0:	lsl	r1, r1, #2
   124b4:	str	r0, [r4, #40]	; 0x28
   124b8:	ldr	r0, [r4, #44]	; 0x2c
   124bc:	bl	11ac4 <realloc@plt>
   124c0:	str	r0, [r4, #44]	; 0x2c
   124c4:	pop	{r4, r5, r6, pc}
   124c8:	ldr	r0, [r4, #36]	; 0x24
   124cc:	bl	11ab8 <free@plt>
   124d0:	ldr	r0, [r4, #40]	; 0x28
   124d4:	bl	11ab8 <free@plt>
   124d8:	ldr	r0, [r4, #44]	; 0x2c
   124dc:	bl	11ab8 <free@plt>
   124e0:	str	r5, [r4, #36]	; 0x24
   124e4:	str	r5, [r4, #40]	; 0x28
   124e8:	str	r5, [r4, #44]	; 0x2c
   124ec:	pop	{r4, r5, r6, pc}

000124f0 <table_notify@@Base>:
   124f0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   124f4:	mov	r5, r0
   124f8:	mov	r7, r1
   124fc:	mov	r8, r2
   12500:	mov	r6, r3
   12504:	mov	r4, #0
   12508:	ldr	r3, [r5, #32]
   1250c:	cmp	r4, r3
   12510:	blt	1251c <table_notify@@Base+0x2c>
   12514:	add	sp, sp, #12
   12518:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1251c:	ldr	r3, [r5, #44]	; 0x2c
   12520:	ldr	r3, [r3, r4, lsl #2]
   12524:	tst	r6, r3
   12528:	beq	12554 <table_notify@@Base+0x64>
   1252c:	ldr	r2, [r5, #40]	; 0x28
   12530:	ldr	r3, [r5, #36]	; 0x24
   12534:	mov	r1, r7
   12538:	ldr	r2, [r2, r4, lsl #2]
   1253c:	mov	r0, r5
   12540:	str	r2, [sp]
   12544:	mov	r2, r8
   12548:	ldr	r9, [r3, r4, lsl #2]
   1254c:	mov	r3, r6
   12550:	blx	r9
   12554:	add	r4, r4, #1
   12558:	b	12508 <table_notify@@Base+0x18>

0001255c <table_column_init@@Base>:
   1255c:	push	{r4, r5, r6, r7, r8, lr}
   12560:	mov	r4, #12
   12564:	ldr	r7, [r0]
   12568:	mov	r0, r2
   1256c:	mul	r4, r4, r1
   12570:	mov	r6, r2
   12574:	mov	r8, r3
   12578:	bl	11b00 <strlen@plt>
   1257c:	add	r5, r7, r4
   12580:	add	r0, r0, #1
   12584:	bl	11adc <malloc@plt>
   12588:	cmp	r0, #0
   1258c:	str	r0, [r7, r4]
   12590:	beq	1259c <table_column_init@@Base+0x40>
   12594:	mov	r1, r6
   12598:	bl	11ad0 <strcpy@plt>
   1259c:	ldr	r3, [sp, #24]
   125a0:	str	r8, [r5, #4]
   125a4:	str	r3, [r5, #8]
   125a8:	pop	{r4, r5, r6, r7, r8, pc}

000125ac <table_column_destroy@@Base>:
   125ac:	mov	r3, #12
   125b0:	ldr	r2, [r0]
   125b4:	mul	r1, r3, r1
   125b8:	ldr	r0, [r2, r1]
   125bc:	cmp	r0, #0
   125c0:	bxeq	lr
   125c4:	b	11ab8 <free@plt>

000125c8 <table_get_column_length@@Base>:
   125c8:	ldr	r0, [r0, #4]
   125cc:	bx	lr

000125d0 <table_get_column@@Base>:
   125d0:	push	{r4, r5, r6, r7, r8, lr}
   125d4:	mov	r5, r0
   125d8:	ldr	r6, [r0, #4]
   125dc:	mov	r7, r1
   125e0:	mov	r4, #0
   125e4:	mov	r8, #12
   125e8:	cmp	r4, r6
   125ec:	blt	125fc <table_get_column@@Base+0x2c>
   125f0:	mvneq	r4, #0
   125f4:	mov	r0, r4
   125f8:	pop	{r4, r5, r6, r7, r8, pc}
   125fc:	mul	r3, r8, r4
   12600:	ldr	r2, [r5]
   12604:	mov	r1, r7
   12608:	ldr	r0, [r2, r3]
   1260c:	bl	11aa0 <strcmp@plt>
   12610:	cmp	r0, #0
   12614:	beq	125f4 <table_get_column@@Base+0x24>
   12618:	add	r4, r4, #1
   1261c:	b	125e8 <table_get_column@@Base+0x18>

00012620 <table_get_column_data_type@@Base>:
   12620:	ldr	r2, [r0]
   12624:	mov	r3, #12
   12628:	mla	r1, r3, r1, r2
   1262c:	ldr	r0, [r1, #4]
   12630:	bx	lr

00012634 <table_add_column@@Base>:
   12634:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12638:	mov	r4, r0
   1263c:	ldr	r6, [r0, #8]
   12640:	mov	r8, r1
   12644:	ldr	r0, [r0, #4]
   12648:	mov	r1, r6
   1264c:	mov	r7, r2
   12650:	bl	14164 <table_cell_nullify@@Base+0x218>
   12654:	subs	r5, r1, #0
   12658:	beq	126c0 <table_add_column@@Base+0x8c>
   1265c:	mov	r0, r4
   12660:	bl	12ea0 <table_get_row_length@@Base>
   12664:	ldr	r6, [r4, #4]
   12668:	mov	r5, #0
   1266c:	mov	r9, r0
   12670:	mov	r0, r7
   12674:	bl	12d00 <table_get_default_compare_function_for_data_type@@Base>
   12678:	mov	r3, r7
   1267c:	mov	r2, r8
   12680:	mov	r1, r6
   12684:	str	r0, [sp]
   12688:	mov	r0, r4
   1268c:	bl	1255c <table_column_init@@Base>
   12690:	cmp	r9, r5
   12694:	bgt	12720 <table_add_column@@Base+0xec>
   12698:	mov	r0, r4
   1269c:	mov	r3, #8
   126a0:	ldr	r2, [r4, #4]
   126a4:	mvn	r1, #0
   126a8:	bl	124f0 <table_notify@@Base>
   126ac:	ldr	r0, [r4, #4]
   126b0:	add	r3, r0, #1
   126b4:	str	r3, [r4, #4]
   126b8:	add	sp, sp, #12
   126bc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   126c0:	ldr	r1, [r4, #12]
   126c4:	ldr	r0, [r4]
   126c8:	add	r6, r6, r1
   126cc:	mov	r1, #12
   126d0:	str	r6, [r4, #12]
   126d4:	mul	r1, r1, r6
   126d8:	bl	11ac4 <realloc@plt>
   126dc:	str	r0, [r4]
   126e0:	mov	r0, r4
   126e4:	bl	12ea0 <table_get_row_length@@Base>
   126e8:	mov	r9, r0
   126ec:	cmp	r9, r5
   126f0:	ble	1265c <table_add_column@@Base+0x28>
   126f4:	mov	r1, r5
   126f8:	mov	r0, r4
   126fc:	bl	13044 <table_get_row_ptr@@Base>
   12700:	ldr	r1, [r4, #12]
   12704:	add	r5, r5, #1
   12708:	lsl	r1, r1, #2
   1270c:	mov	r6, r0
   12710:	ldr	r0, [r0]
   12714:	bl	11ac4 <realloc@plt>
   12718:	str	r0, [r6]
   1271c:	b	126ec <table_add_column@@Base+0xb8>
   12720:	mov	r1, r5
   12724:	mov	r2, r6
   12728:	mov	r0, r4
   1272c:	bl	13ef4 <table_cell_init@@Base>
   12730:	add	r5, r5, #1
   12734:	b	12690 <table_add_column@@Base+0x5c>

00012738 <table_remove_column@@Base>:
   12738:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1273c:	mov	r5, r1
   12740:	mov	r4, r0
   12744:	bl	125ac <table_column_destroy@@Base>
   12748:	mov	r3, #12
   1274c:	ldr	r7, [r4, #4]
   12750:	mul	r3, r3, r5
   12754:	mov	r1, r5
   12758:	sub	r7, r7, #1
   1275c:	cmp	r1, r7
   12760:	add	lr, r3, #12
   12764:	blt	127f4 <table_remove_column@@Base+0xbc>
   12768:	mov	r0, r4
   1276c:	bl	12ea0 <table_get_row_length@@Base>
   12770:	lsl	r9, r5, #2
   12774:	mov	r6, #0
   12778:	mov	r8, r0
   1277c:	cmp	r8, r6
   12780:	bgt	12824 <table_remove_column@@Base+0xec>
   12784:	ldr	r0, [r4, #4]
   12788:	ldr	r7, [r4, #8]
   1278c:	sub	r0, r0, #1
   12790:	str	r0, [r4, #4]
   12794:	mov	r1, r7
   12798:	bl	14164 <table_cell_nullify@@Base+0x218>
   1279c:	subs	r6, r1, #0
   127a0:	bne	127d8 <table_remove_column@@Base+0xa0>
   127a4:	ldr	r1, [r4, #12]
   127a8:	mov	r3, #12
   127ac:	sub	r1, r1, r7
   127b0:	str	r1, [r4, #12]
   127b4:	ldr	r0, [r4]
   127b8:	mul	r1, r3, r1
   127bc:	bl	11ac4 <realloc@plt>
   127c0:	str	r0, [r4]
   127c4:	mov	r0, r4
   127c8:	bl	12ea0 <table_get_row_length@@Base>
   127cc:	mov	r8, r0
   127d0:	cmp	r8, r6
   127d4:	bgt	12870 <table_remove_column@@Base+0x138>
   127d8:	mov	r0, r4
   127dc:	mov	r3, #16
   127e0:	mov	r2, r5
   127e4:	mvn	r1, #0
   127e8:	bl	124f0 <table_notify@@Base>
   127ec:	mov	r0, #0
   127f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   127f4:	ldr	ip, [r4]
   127f8:	add	r1, r1, #1
   127fc:	add	r0, ip, lr
   12800:	add	r6, ip, r3
   12804:	ldr	r2, [r0]
   12808:	str	r2, [ip, r3]
   1280c:	ldr	r2, [r0, #4]
   12810:	mov	r3, lr
   12814:	str	r2, [r6, #4]
   12818:	ldr	r2, [r0, #8]
   1281c:	str	r2, [r6, #8]
   12820:	b	1275c <table_remove_column@@Base+0x24>
   12824:	mov	r2, r5
   12828:	mov	r1, r6
   1282c:	mov	r0, r4
   12830:	bl	13f08 <table_cell_destroy@@Base>
   12834:	mov	r1, r6
   12838:	mov	r0, r4
   1283c:	bl	13044 <table_get_row_ptr@@Base>
   12840:	mov	r2, r9
   12844:	mov	r3, r5
   12848:	cmp	r7, r3
   1284c:	add	r1, r2, #4
   12850:	addle	r6, r6, #1
   12854:	ble	1277c <table_remove_column@@Base+0x44>
   12858:	ldr	ip, [r0]
   1285c:	add	r3, r3, #1
   12860:	ldr	lr, [ip, r1]
   12864:	str	lr, [ip, r2]
   12868:	mov	r2, r1
   1286c:	b	12848 <table_remove_column@@Base+0x110>
   12870:	mov	r1, r6
   12874:	mov	r0, r4
   12878:	bl	13044 <table_get_row_ptr@@Base>
   1287c:	ldr	r1, [r4, #12]
   12880:	add	r6, r6, #1
   12884:	lsl	r1, r1, #2
   12888:	mov	r7, r0
   1288c:	ldr	r0, [r0]
   12890:	bl	11ac4 <realloc@plt>
   12894:	str	r0, [r7]
   12898:	b	127d0 <table_remove_column@@Base+0x98>

0001289c <table_get_column_name@@Base>:
   1289c:	mov	r3, #12
   128a0:	ldr	r2, [r0]
   128a4:	mul	r1, r3, r1
   128a8:	ldr	r0, [r2, r1]
   128ac:	bx	lr

000128b0 <table_get_col_ptr@@Base>:
   128b0:	ldr	r3, [r0]
   128b4:	mov	r0, #12
   128b8:	mla	r0, r0, r1, r3
   128bc:	bx	lr

000128c0 <table_get_column_compare_function@@Base>:
   128c0:	ldr	r2, [r0]
   128c4:	mov	r3, #12
   128c8:	mla	r1, r3, r1, r2
   128cc:	ldr	r0, [r1, #8]
   128d0:	bx	lr

000128d4 <table_set_column_compare_function@@Base>:
   128d4:	ldr	r0, [r0]
   128d8:	mov	r3, #12
   128dc:	mla	r1, r3, r1, r0
   128e0:	str	r2, [r1, #8]
   128e4:	bx	lr

000128e8 <table_compare_bool@@Base>:
   128e8:	cmp	r0, #0
   128ec:	bne	128fc <table_compare_bool@@Base+0x14>
   128f0:	adds	r0, r1, #0
   128f4:	mvnne	r0, #0
   128f8:	bx	lr
   128fc:	cmp	r1, #0
   12900:	beq	12920 <table_compare_bool@@Base+0x38>
   12904:	ldrb	r2, [r0]
   12908:	ldrb	r3, [r1]
   1290c:	cmp	r2, r3
   12910:	bgt	12920 <table_compare_bool@@Base+0x38>
   12914:	mvnlt	r0, #0
   12918:	movge	r0, #0
   1291c:	bx	lr
   12920:	mov	r0, #1
   12924:	bx	lr

00012928 <table_compare_int8@@Base>:
   12928:	cmp	r0, #0
   1292c:	bne	1293c <table_compare_int8@@Base+0x14>
   12930:	adds	r0, r1, #0
   12934:	mvnne	r0, #0
   12938:	bx	lr
   1293c:	cmp	r1, #0
   12940:	beq	12960 <table_compare_int8@@Base+0x38>
   12944:	ldrsb	r2, [r0]
   12948:	ldrsb	r3, [r1]
   1294c:	cmp	r2, r3
   12950:	bgt	12960 <table_compare_int8@@Base+0x38>
   12954:	mvnlt	r0, #0
   12958:	movge	r0, #0
   1295c:	bx	lr
   12960:	mov	r0, #1
   12964:	bx	lr

00012968 <table_compare_int32@@Base>:
   12968:	cmp	r0, #0
   1296c:	bne	1297c <table_compare_int32@@Base+0x14>
   12970:	adds	r0, r1, #0
   12974:	mvnne	r0, #0
   12978:	bx	lr
   1297c:	cmp	r1, #0
   12980:	beq	129a0 <table_compare_int32@@Base+0x38>
   12984:	ldr	r2, [r0]
   12988:	ldr	r3, [r1]
   1298c:	cmp	r2, r3
   12990:	bgt	129a0 <table_compare_int32@@Base+0x38>
   12994:	mvnlt	r0, #0
   12998:	movge	r0, #0
   1299c:	bx	lr
   129a0:	mov	r0, #1
   129a4:	bx	lr

000129a8 <table_compare_int@@Base>:
   129a8:	b	12968 <table_compare_int32@@Base>

000129ac <table_compare_uint32@@Base>:
   129ac:	cmp	r0, #0
   129b0:	bne	129c0 <table_compare_uint32@@Base+0x14>
   129b4:	adds	r0, r1, #0
   129b8:	mvnne	r0, #0
   129bc:	bx	lr
   129c0:	cmp	r1, #0
   129c4:	beq	129e4 <table_compare_uint32@@Base+0x38>
   129c8:	ldr	r2, [r0]
   129cc:	ldr	r3, [r1]
   129d0:	cmp	r2, r3
   129d4:	bhi	129e4 <table_compare_uint32@@Base+0x38>
   129d8:	mvncc	r0, #0
   129dc:	movcs	r0, #0
   129e0:	bx	lr
   129e4:	mov	r0, #1
   129e8:	bx	lr

000129ec <table_compare_uint@@Base>:
   129ec:	b	129ac <table_compare_uint32@@Base>

000129f0 <table_compare_uint64@@Base>:
   129f0:	cmp	r0, #0
   129f4:	bne	12a04 <table_compare_uint64@@Base+0x14>
   129f8:	adds	r0, r1, #0
   129fc:	mvnne	r0, #0
   12a00:	bx	lr
   12a04:	cmp	r1, #0
   12a08:	beq	12a30 <table_compare_uint64@@Base+0x40>
   12a0c:	ldrd	r2, [r1]
   12a10:	push	{r4, r5, lr}
   12a14:	ldrd	r4, [r0]
   12a18:	cmp	r5, r3
   12a1c:	cmpeq	r4, r2
   12a20:	bhi	12a38 <table_compare_uint64@@Base+0x48>
   12a24:	mvncc	r0, #0
   12a28:	movcs	r0, #0
   12a2c:	pop	{r4, r5, pc}
   12a30:	mov	r0, #1
   12a34:	bx	lr
   12a38:	mov	r0, #1
   12a3c:	pop	{r4, r5, pc}

00012a40 <table_compare_short@@Base>:
   12a40:	cmp	r0, #0
   12a44:	bne	12a54 <table_compare_short@@Base+0x14>
   12a48:	adds	r0, r1, #0
   12a4c:	mvnne	r0, #0
   12a50:	bx	lr
   12a54:	cmp	r1, #0
   12a58:	beq	12a78 <table_compare_short@@Base+0x38>
   12a5c:	ldrsh	r2, [r0]
   12a60:	ldrsh	r3, [r1]
   12a64:	cmp	r2, r3
   12a68:	bgt	12a78 <table_compare_short@@Base+0x38>
   12a6c:	mvnlt	r0, #0
   12a70:	movge	r0, #0
   12a74:	bx	lr
   12a78:	mov	r0, #1
   12a7c:	bx	lr

00012a80 <table_compare_int16@@Base>:
   12a80:	b	12a40 <table_compare_short@@Base>

00012a84 <table_compare_ushort@@Base>:
   12a84:	cmp	r0, #0
   12a88:	bne	12a98 <table_compare_ushort@@Base+0x14>
   12a8c:	adds	r0, r1, #0
   12a90:	mvnne	r0, #0
   12a94:	bx	lr
   12a98:	cmp	r1, #0
   12a9c:	beq	12abc <table_compare_ushort@@Base+0x38>
   12aa0:	ldrh	r2, [r0]
   12aa4:	ldrh	r3, [r1]
   12aa8:	cmp	r2, r3
   12aac:	bhi	12abc <table_compare_ushort@@Base+0x38>
   12ab0:	mvncc	r0, #0
   12ab4:	movcs	r0, #0
   12ab8:	bx	lr
   12abc:	mov	r0, #1
   12ac0:	bx	lr

00012ac4 <table_compare_uint16@@Base>:
   12ac4:	b	12a84 <table_compare_ushort@@Base>

00012ac8 <table_compare_long@@Base>:
   12ac8:	cmp	r0, #0
   12acc:	bne	12adc <table_compare_long@@Base+0x14>
   12ad0:	adds	r0, r1, #0
   12ad4:	mvnne	r0, #0
   12ad8:	bx	lr
   12adc:	cmp	r1, #0
   12ae0:	beq	12b00 <table_compare_long@@Base+0x38>
   12ae4:	ldr	r2, [r0]
   12ae8:	ldr	r3, [r1]
   12aec:	cmp	r2, r3
   12af0:	bgt	12b00 <table_compare_long@@Base+0x38>
   12af4:	mvnlt	r0, #0
   12af8:	movge	r0, #0
   12afc:	bx	lr
   12b00:	mov	r0, #1
   12b04:	bx	lr

00012b08 <table_compare_llong@@Base>:
   12b08:	cmp	r0, #0
   12b0c:	bne	12b1c <table_compare_llong@@Base+0x14>
   12b10:	adds	r0, r1, #0
   12b14:	mvnne	r0, #0
   12b18:	bx	lr
   12b1c:	cmp	r1, #0
   12b20:	beq	12b50 <table_compare_llong@@Base+0x48>
   12b24:	ldrd	r2, [r1]
   12b28:	push	{r4, r5, lr}
   12b2c:	ldrd	r4, [r0]
   12b30:	cmp	r2, r4
   12b34:	sbcs	r1, r3, r5
   12b38:	blt	12b58 <table_compare_llong@@Base+0x50>
   12b3c:	cmp	r4, r2
   12b40:	sbcs	r3, r5, r3
   12b44:	mvnlt	r0, #0
   12b48:	movge	r0, #0
   12b4c:	pop	{r4, r5, pc}
   12b50:	mov	r0, #1
   12b54:	bx	lr
   12b58:	mov	r0, #1
   12b5c:	pop	{r4, r5, pc}

00012b60 <table_compare_int64@@Base>:
   12b60:	b	12b08 <table_compare_llong@@Base>

00012b64 <table_compare_ullong@@Base>:
   12b64:	cmp	r0, #0
   12b68:	bne	12b78 <table_compare_ullong@@Base+0x14>
   12b6c:	adds	r0, r1, #0
   12b70:	mvnne	r0, #0
   12b74:	bx	lr
   12b78:	cmp	r1, #0
   12b7c:	beq	12b9c <table_compare_ullong@@Base+0x38>
   12b80:	ldr	r2, [r0]
   12b84:	ldr	r3, [r1]
   12b88:	cmp	r2, r3
   12b8c:	bhi	12b9c <table_compare_ullong@@Base+0x38>
   12b90:	mvncc	r0, #0
   12b94:	movcs	r0, #0
   12b98:	bx	lr
   12b9c:	mov	r0, #1
   12ba0:	bx	lr

00012ba4 <table_compare_ulong@@Base>:
   12ba4:	b	12b64 <table_compare_ullong@@Base>

00012ba8 <table_compare_float@@Base>:
   12ba8:	cmp	r0, #0
   12bac:	bne	12bbc <table_compare_float@@Base+0x14>
   12bb0:	adds	r0, r1, #0
   12bb4:	mvnne	r0, #0
   12bb8:	bx	lr
   12bbc:	cmp	r1, #0
   12bc0:	beq	12be4 <table_compare_float@@Base+0x3c>
   12bc4:	vldr	s14, [r0]
   12bc8:	vldr	s15, [r1]
   12bcc:	vcmpe.f32	s14, s15
   12bd0:	vmrs	APSR_nzcv, fpscr
   12bd4:	bgt	12be4 <table_compare_float@@Base+0x3c>
   12bd8:	mvnmi	r0, #0
   12bdc:	movpl	r0, #0
   12be0:	bx	lr
   12be4:	mov	r0, #1
   12be8:	bx	lr

00012bec <table_compare_double@@Base>:
   12bec:	cmp	r0, #0
   12bf0:	bne	12c00 <table_compare_double@@Base+0x14>
   12bf4:	adds	r0, r1, #0
   12bf8:	mvnne	r0, #0
   12bfc:	bx	lr
   12c00:	cmp	r1, #0
   12c04:	beq	12c28 <table_compare_double@@Base+0x3c>
   12c08:	vldr	d6, [r0]
   12c0c:	vldr	d7, [r1]
   12c10:	vcmpe.f64	d6, d7
   12c14:	vmrs	APSR_nzcv, fpscr
   12c18:	bgt	12c28 <table_compare_double@@Base+0x3c>
   12c1c:	mvnmi	r0, #0
   12c20:	movpl	r0, #0
   12c24:	bx	lr
   12c28:	mov	r0, #1
   12c2c:	bx	lr

00012c30 <table_compare_ldouble@@Base>:
   12c30:	cmp	r0, #0
   12c34:	bne	12c44 <table_compare_ldouble@@Base+0x14>
   12c38:	adds	r0, r1, #0
   12c3c:	mvnne	r0, #0
   12c40:	bx	lr
   12c44:	cmp	r1, #0
   12c48:	beq	12c6c <table_compare_ldouble@@Base+0x3c>
   12c4c:	vldr	d6, [r0]
   12c50:	vldr	d7, [r1]
   12c54:	vcmpe.f64	d6, d7
   12c58:	vmrs	APSR_nzcv, fpscr
   12c5c:	bgt	12c6c <table_compare_ldouble@@Base+0x3c>
   12c60:	mvnmi	r0, #0
   12c64:	movpl	r0, #0
   12c68:	bx	lr
   12c6c:	mov	r0, #1
   12c70:	bx	lr

00012c74 <table_compare_uchar@@Base>:
   12c74:	cmp	r0, #0
   12c78:	bne	12c88 <table_compare_uchar@@Base+0x14>
   12c7c:	adds	r0, r1, #0
   12c80:	mvnne	r0, #0
   12c84:	bx	lr
   12c88:	cmp	r1, #0
   12c8c:	beq	12cac <table_compare_uchar@@Base+0x38>
   12c90:	ldrb	r2, [r0]
   12c94:	ldrb	r3, [r1]
   12c98:	cmp	r2, r3
   12c9c:	bhi	12cac <table_compare_uchar@@Base+0x38>
   12ca0:	mvncc	r0, #0
   12ca4:	movcs	r0, #0
   12ca8:	bx	lr
   12cac:	mov	r0, #1
   12cb0:	bx	lr

00012cb4 <table_compare_char@@Base>:
   12cb4:	b	12c74 <table_compare_uchar@@Base>

00012cb8 <table_compare_uint8@@Base>:
   12cb8:	b	12c74 <table_compare_uchar@@Base>

00012cbc <table_compare_ptr@@Base>:
   12cbc:	cmp	r0, r1
   12cc0:	bhi	12cd0 <table_compare_ptr@@Base+0x14>
   12cc4:	mvncc	r0, #0
   12cc8:	movcs	r0, #0
   12ccc:	bx	lr
   12cd0:	mov	r0, #1
   12cd4:	bx	lr

00012cd8 <table_compare_string@@Base>:
   12cd8:	cmp	r0, #0
   12cdc:	bne	12cec <table_compare_string@@Base+0x14>
   12ce0:	adds	r0, r1, #0
   12ce4:	mvnne	r0, #0
   12ce8:	bx	lr
   12cec:	cmp	r1, #0
   12cf0:	beq	12cf8 <table_compare_string@@Base+0x20>
   12cf4:	b	11aa0 <strcmp@plt>
   12cf8:	mov	r0, #1
   12cfc:	bx	lr

00012d00 <table_get_default_compare_function_for_data_type@@Base>:
   12d00:	cmp	r0, #23
   12d04:	ldrls	r3, [pc, #8]	; 12d14 <table_get_default_compare_function_for_data_type@@Base+0x14>
   12d08:	ldrls	r0, [r3, r0, lsl #2]
   12d0c:	movhi	r0, #0
   12d10:	bx	lr
   12d14:	andeq	r4, r1, r4, ror #4

00012d18 <table_get@@Base>:
   12d18:	push	{r4, lr}
   12d1c:	bl	13edc <table_get_cell_ptr@@Base>
   12d20:	ldr	r0, [r0]
   12d24:	pop	{r4, pc}

00012d28 <table_get_bool@@Base>:
   12d28:	push	{r4, lr}
   12d2c:	bl	12d18 <table_get@@Base>
   12d30:	ldrb	r0, [r0]
   12d34:	pop	{r4, pc}

00012d38 <table_get_int8@@Base>:
   12d38:	push	{r4, lr}
   12d3c:	bl	12d18 <table_get@@Base>
   12d40:	ldrsb	r0, [r0]
   12d44:	pop	{r4, pc}

00012d48 <table_get_int32@@Base>:
   12d48:	push	{r4, lr}
   12d4c:	bl	12d18 <table_get@@Base>
   12d50:	ldr	r0, [r0]
   12d54:	pop	{r4, pc}

00012d58 <table_get_int@@Base>:
   12d58:	b	12d48 <table_get_int32@@Base>

00012d5c <table_get_uint32@@Base>:
   12d5c:	push	{r4, lr}
   12d60:	bl	12d18 <table_get@@Base>
   12d64:	ldr	r0, [r0]
   12d68:	pop	{r4, pc}

00012d6c <table_get_uint@@Base>:
   12d6c:	b	12d5c <table_get_uint32@@Base>

00012d70 <table_get_short@@Base>:
   12d70:	push	{r4, lr}
   12d74:	bl	12d18 <table_get@@Base>
   12d78:	ldrsh	r0, [r0]
   12d7c:	pop	{r4, pc}

00012d80 <table_get_int16@@Base>:
   12d80:	b	12d70 <table_get_short@@Base>

00012d84 <table_get_ushort@@Base>:
   12d84:	push	{r4, lr}
   12d88:	bl	12d18 <table_get@@Base>
   12d8c:	ldrh	r0, [r0]
   12d90:	pop	{r4, pc}

00012d94 <table_get_uint16@@Base>:
   12d94:	b	12d84 <table_get_ushort@@Base>

00012d98 <table_get_long@@Base>:
   12d98:	push	{r4, lr}
   12d9c:	bl	12d18 <table_get@@Base>
   12da0:	ldr	r0, [r0]
   12da4:	pop	{r4, pc}

00012da8 <table_get_ulong@@Base>:
   12da8:	push	{r4, lr}
   12dac:	bl	12d18 <table_get@@Base>
   12db0:	ldr	r0, [r0]
   12db4:	pop	{r4, pc}

00012db8 <table_get_llong@@Base>:
   12db8:	push	{r4, lr}
   12dbc:	bl	12d18 <table_get@@Base>
   12dc0:	ldrd	r0, [r0]
   12dc4:	pop	{r4, pc}

00012dc8 <table_get_int64@@Base>:
   12dc8:	b	12db8 <table_get_llong@@Base>

00012dcc <table_get_ullong@@Base>:
   12dcc:	push	{r4, lr}
   12dd0:	bl	12d18 <table_get@@Base>
   12dd4:	ldrd	r0, [r0]
   12dd8:	pop	{r4, pc}

00012ddc <table_get_uint64@@Base>:
   12ddc:	b	12dcc <table_get_ullong@@Base>

00012de0 <table_get_float@@Base>:
   12de0:	push	{r4, lr}
   12de4:	bl	12d18 <table_get@@Base>
   12de8:	vldr	s0, [r0]
   12dec:	pop	{r4, pc}

00012df0 <table_get_double@@Base>:
   12df0:	push	{r4, lr}
   12df4:	bl	12d18 <table_get@@Base>
   12df8:	vldr	d0, [r0]
   12dfc:	pop	{r4, pc}

00012e00 <table_get_ldouble@@Base>:
   12e00:	push	{r4, lr}
   12e04:	bl	12d18 <table_get@@Base>
   12e08:	vldr	d0, [r0]
   12e0c:	pop	{r4, pc}

00012e10 <table_get_uchar@@Base>:
   12e10:	push	{r4, lr}
   12e14:	bl	12d18 <table_get@@Base>
   12e18:	ldrb	r0, [r0]
   12e1c:	pop	{r4, pc}

00012e20 <table_get_char@@Base>:
   12e20:	b	12e10 <table_get_uchar@@Base>

00012e24 <table_get_uint8@@Base>:
   12e24:	b	12e10 <table_get_uchar@@Base>

00012e28 <table_get_string@@Base>:
   12e28:	b	12d18 <table_get@@Base>

00012e2c <table_get_ptr@@Base>:
   12e2c:	b	12d18 <table_get@@Base>

00012e30 <table_row_init@@Base>:
   12e30:	push	{r4, r5, r6, lr}
   12e34:	mov	r5, r1
   12e38:	ldr	r4, [r0, #16]
   12e3c:	ldr	r0, [r0, #12]
   12e40:	lsl	r0, r0, #2
   12e44:	bl	11adc <malloc@plt>
   12e48:	str	r0, [r4, r5, lsl #2]
   12e4c:	pop	{r4, r5, r6, pc}

00012e50 <table_row_destroy@@Base>:
   12e50:	push	{r4, r5, r6, r7, r8, lr}
   12e54:	mov	r6, r0
   12e58:	mov	r5, r1
   12e5c:	bl	125c8 <table_get_column_length@@Base>
   12e60:	ldr	r7, [r6, #16]
   12e64:	mov	r4, #0
   12e68:	mov	r8, r0
   12e6c:	cmp	r4, r8
   12e70:	blt	12e88 <table_row_destroy@@Base+0x38>
   12e74:	ldr	r0, [r7, r5, lsl #2]
   12e78:	cmp	r0, #0
   12e7c:	popeq	{r4, r5, r6, r7, r8, pc}
   12e80:	pop	{r4, r5, r6, r7, r8, lr}
   12e84:	b	11ab8 <free@plt>
   12e88:	mov	r2, r4
   12e8c:	mov	r1, r5
   12e90:	mov	r0, r6
   12e94:	bl	13f08 <table_cell_destroy@@Base>
   12e98:	add	r4, r4, #1
   12e9c:	b	12e6c <table_row_destroy@@Base+0x1c>

00012ea0 <table_get_row_length@@Base>:
   12ea0:	ldr	r0, [r0, #20]
   12ea4:	bx	lr

00012ea8 <table_add_row@@Base>:
   12ea8:	push	{r4, r5, r6, r7, r8, lr}
   12eac:	mov	r4, r0
   12eb0:	ldr	r5, [r0, #24]
   12eb4:	ldr	r0, [r0, #20]
   12eb8:	mov	r1, r5
   12ebc:	bl	14164 <table_cell_nullify@@Base+0x218>
   12ec0:	cmp	r1, #0
   12ec4:	bne	12ee4 <table_add_row@@Base+0x3c>
   12ec8:	ldr	r1, [r4, #28]
   12ecc:	ldr	r0, [r4, #16]
   12ed0:	add	r1, r5, r1
   12ed4:	str	r1, [r4, #28]
   12ed8:	lsl	r1, r1, #2
   12edc:	bl	11ac4 <realloc@plt>
   12ee0:	str	r0, [r4, #16]
   12ee4:	mov	r0, r4
   12ee8:	ldr	r6, [r4, #20]
   12eec:	bl	125c8 <table_get_column_length@@Base>
   12ef0:	mov	r1, r6
   12ef4:	mov	r5, #0
   12ef8:	mov	r7, r0
   12efc:	mov	r0, r4
   12f00:	bl	12e30 <table_row_init@@Base>
   12f04:	cmp	r7, r5
   12f08:	bgt	12f30 <table_add_row@@Base+0x88>
   12f0c:	mov	r0, r4
   12f10:	mov	r3, #2
   12f14:	mvn	r2, #0
   12f18:	ldr	r1, [r4, #20]
   12f1c:	bl	124f0 <table_notify@@Base>
   12f20:	ldr	r0, [r4, #20]
   12f24:	add	r3, r0, #1
   12f28:	str	r3, [r4, #20]
   12f2c:	pop	{r4, r5, r6, r7, r8, pc}
   12f30:	mov	r2, r5
   12f34:	mov	r1, r6
   12f38:	mov	r0, r4
   12f3c:	bl	13ef4 <table_cell_init@@Base>
   12f40:	add	r5, r5, #1
   12f44:	b	12f04 <table_add_row@@Base+0x5c>

00012f48 <table_remove_row@@Base>:
   12f48:	push	{r4, r5, r6, r7, r8, lr}
   12f4c:	mov	r4, r0
   12f50:	mov	r5, r1
   12f54:	ldr	r7, [r0, #20]
   12f58:	bl	125c8 <table_get_column_length@@Base>
   12f5c:	mov	r6, #0
   12f60:	mov	r8, r0
   12f64:	cmp	r8, r6
   12f68:	bgt	12ff0 <table_remove_row@@Base+0xa8>
   12f6c:	ldr	r3, [r4, #16]
   12f70:	lsl	r6, r5, #2
   12f74:	ldr	r0, [r3, r5, lsl #2]
   12f78:	cmp	r0, #0
   12f7c:	beq	12f84 <table_remove_row@@Base+0x3c>
   12f80:	bl	11ab8 <free@plt>
   12f84:	mov	r3, r5
   12f88:	sub	r7, r7, #1
   12f8c:	cmp	r3, r7
   12f90:	add	r2, r6, #4
   12f94:	blt	1302c <table_remove_row@@Base+0xe4>
   12f98:	ldr	r0, [r4, #20]
   12f9c:	ldr	r6, [r4, #24]
   12fa0:	sub	r0, r0, #1
   12fa4:	str	r0, [r4, #20]
   12fa8:	mov	r1, r6
   12fac:	bl	14164 <table_cell_nullify@@Base+0x218>
   12fb0:	cmp	r1, #0
   12fb4:	bne	12fd4 <table_remove_row@@Base+0x8c>
   12fb8:	ldr	r1, [r4, #28]
   12fbc:	ldr	r0, [r4, #16]
   12fc0:	sub	r1, r1, r6
   12fc4:	str	r1, [r4, #28]
   12fc8:	lsl	r1, r1, #2
   12fcc:	bl	11ac4 <realloc@plt>
   12fd0:	str	r0, [r4, #16]
   12fd4:	mov	r0, r4
   12fd8:	mov	r3, #4
   12fdc:	mvn	r2, #0
   12fe0:	mov	r1, r5
   12fe4:	bl	124f0 <table_notify@@Base>
   12fe8:	mov	r0, #0
   12fec:	pop	{r4, r5, r6, r7, r8, pc}
   12ff0:	mov	r1, r6
   12ff4:	mov	r0, r4
   12ff8:	bl	12620 <table_get_column_data_type@@Base>
   12ffc:	cmp	r0, #23
   13000:	beq	13024 <table_remove_row@@Base+0xdc>
   13004:	mov	r2, r6
   13008:	mov	r1, r5
   1300c:	mov	r0, r4
   13010:	bl	13edc <table_get_cell_ptr@@Base>
   13014:	ldr	r0, [r0]
   13018:	cmp	r0, #0
   1301c:	beq	13024 <table_remove_row@@Base+0xdc>
   13020:	bl	11ab8 <free@plt>
   13024:	add	r6, r6, #1
   13028:	b	12f64 <table_remove_row@@Base+0x1c>
   1302c:	ldr	r1, [r4, #16]
   13030:	add	r3, r3, #1
   13034:	ldr	r0, [r1, r2]
   13038:	str	r0, [r1, r6]
   1303c:	mov	r6, r2
   13040:	b	12f8c <table_remove_row@@Base+0x44>

00013044 <table_get_row_ptr@@Base>:
   13044:	ldr	r0, [r0, #16]
   13048:	add	r0, r0, r1, lsl #2
   1304c:	bx	lr

00013050 <table_set_row_ptr@@Base>:
   13050:	ldr	r3, [r0, #16]
   13054:	ldr	r2, [r2]
   13058:	str	r2, [r3, r1, lsl #2]
   1305c:	bx	lr

00013060 <table_set@@Base>:
   13060:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13064:	mov	r6, r0
   13068:	mov	r8, r1
   1306c:	mov	r7, r2
   13070:	ldr	r9, [sp, #32]
   13074:	mov	r5, r3
   13078:	bl	13edc <table_get_cell_ptr@@Base>
   1307c:	mov	r1, r7
   13080:	mov	r4, r0
   13084:	mov	r0, r6
   13088:	bl	128b0 <table_get_col_ptr@@Base>
   1308c:	cmp	r9, #23
   13090:	ldrls	pc, [pc, r9, lsl #2]
   13094:	b	1316c <table_set@@Base+0x10c>
   13098:	andeq	r3, r1, r4, lsr r1
   1309c:	andeq	r3, r1, r4, ror r1
   130a0:	andeq	r3, r1, r0, lsl #3
   130a4:	andeq	r3, r1, ip, lsl #3
   130a8:	muleq	r1, r8, r1
   130ac:	andeq	r3, r1, ip, ror #3
   130b0:	strdeq	r3, [r1], -r8
   130b4:	andeq	r3, r1, r4, lsl #4
   130b8:	andeq	r3, r1, r0, lsl r2
   130bc:	andeq	r3, r1, r0, asr r2
   130c0:	andeq	r3, r1, r0, ror r2
   130c4:	andeq	r3, r1, ip, ror r2
   130c8:	andeq	r3, r1, r8, lsl #5
   130cc:	muleq	r1, r4, r2
   130d0:	andeq	r3, r1, r0, lsr #5
   130d4:	andeq	r3, r1, ip, lsr #5
   130d8:			; <UNDEFINED> instruction: 0x000132b8
   130dc:	andeq	r3, r1, r4, asr #5
   130e0:	ldrdeq	r3, [r1], -r0
   130e4:	andeq	r3, r1, r4, lsl r3
   130e8:	andeq	r3, r1, r0, lsr #6
   130ec:	ldrdeq	r3, [r1], -ip
   130f0:	strdeq	r3, [r1], -r8
   130f4:	andeq	r3, r1, ip, lsr #6
   130f8:	ldr	r3, [r0, #4]
   130fc:	cmp	r3, #22
   13100:	bne	1316c <table_set@@Base+0x10c>
   13104:	ldr	r3, [r4]
   13108:	cmp	r3, #0
   1310c:	bne	1311c <table_set@@Base+0xbc>
   13110:	mov	r0, #1
   13114:	bl	11adc <malloc@plt>
   13118:	str	r0, [r4]
   1311c:	ldr	r3, [r4]
   13120:	cmp	r3, #0
   13124:	ldrbne	r2, [r5]
   13128:	strbne	r2, [r3]
   1312c:	bne	131d0 <table_set@@Base+0x170>
   13130:	b	1316c <table_set@@Base+0x10c>
   13134:	ldr	r3, [r0, #4]
   13138:	cmp	r3, #0
   1313c:	bne	1316c <table_set@@Base+0x10c>
   13140:	ldr	r3, [r4]
   13144:	cmp	r3, #0
   13148:	bne	13158 <table_set@@Base+0xf8>
   1314c:	mov	r0, #4
   13150:	bl	11adc <malloc@plt>
   13154:	str	r0, [r4]
   13158:	ldr	r3, [r4]
   1315c:	cmp	r3, #0
   13160:	ldrne	r2, [r5]
   13164:	strne	r2, [r3]
   13168:	bne	131d0 <table_set@@Base+0x170>
   1316c:	mvn	r0, #0
   13170:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13174:	ldr	r3, [r0, #4]
   13178:	cmp	r3, #1
   1317c:	b	1313c <table_set@@Base+0xdc>
   13180:	ldr	r3, [r0, #4]
   13184:	cmp	r3, #2
   13188:	b	13100 <table_set@@Base+0xa0>
   1318c:	ldr	r3, [r0, #4]
   13190:	cmp	r3, #3
   13194:	b	13100 <table_set@@Base+0xa0>
   13198:	ldr	r3, [r0, #4]
   1319c:	cmp	r3, #4
   131a0:	bne	1316c <table_set@@Base+0x10c>
   131a4:	ldr	r3, [r4]
   131a8:	cmp	r3, #0
   131ac:	bne	131bc <table_set@@Base+0x15c>
   131b0:	mov	r0, #2
   131b4:	bl	11adc <malloc@plt>
   131b8:	str	r0, [r4]
   131bc:	ldr	r3, [r4]
   131c0:	cmp	r3, #0
   131c4:	beq	1316c <table_set@@Base+0x10c>
   131c8:	ldrh	r2, [r5]
   131cc:	strh	r2, [r3]
   131d0:	mov	r0, r6
   131d4:	mov	r3, #1
   131d8:	mov	r2, r7
   131dc:	mov	r1, r8
   131e0:	bl	124f0 <table_notify@@Base>
   131e4:	mov	r0, #0
   131e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131ec:	ldr	r3, [r0, #4]
   131f0:	cmp	r3, #5
   131f4:	b	131a0 <table_set@@Base+0x140>
   131f8:	ldr	r3, [r0, #4]
   131fc:	cmp	r3, #6
   13200:	b	1313c <table_set@@Base+0xdc>
   13204:	ldr	r3, [r0, #4]
   13208:	cmp	r3, #7
   1320c:	b	1313c <table_set@@Base+0xdc>
   13210:	ldr	r0, [r0, #4]
   13214:	cmp	r0, #8
   13218:	bne	1316c <table_set@@Base+0x10c>
   1321c:	ldr	r3, [r4]
   13220:	cmp	r3, #0
   13224:	bne	13230 <table_set@@Base+0x1d0>
   13228:	bl	11adc <malloc@plt>
   1322c:	str	r0, [r4]
   13230:	ldr	r3, [r4]
   13234:	cmp	r3, #0
   13238:	beq	1316c <table_set@@Base+0x10c>
   1323c:	ldr	r2, [r5]
   13240:	str	r2, [r3]
   13244:	ldr	r2, [r5, #4]
   13248:	str	r2, [r3, #4]
   1324c:	b	131d0 <table_set@@Base+0x170>
   13250:	ldr	r3, [r0, #4]
   13254:	cmp	r3, #9
   13258:	bne	1316c <table_set@@Base+0x10c>
   1325c:	ldr	r3, [r4]
   13260:	cmp	r3, #0
   13264:	bne	13230 <table_set@@Base+0x1d0>
   13268:	mov	r0, #8
   1326c:	b	13228 <table_set@@Base+0x1c8>
   13270:	ldr	r3, [r0, #4]
   13274:	cmp	r3, #10
   13278:	b	131a0 <table_set@@Base+0x140>
   1327c:	ldr	r3, [r0, #4]
   13280:	cmp	r3, #11
   13284:	b	131a0 <table_set@@Base+0x140>
   13288:	ldr	r3, [r0, #4]
   1328c:	cmp	r3, #12
   13290:	b	1313c <table_set@@Base+0xdc>
   13294:	ldr	r3, [r0, #4]
   13298:	cmp	r3, #13
   1329c:	b	1313c <table_set@@Base+0xdc>
   132a0:	ldr	r3, [r0, #4]
   132a4:	cmp	r3, #14
   132a8:	b	13258 <table_set@@Base+0x1f8>
   132ac:	ldr	r3, [r0, #4]
   132b0:	cmp	r3, #15
   132b4:	b	13258 <table_set@@Base+0x1f8>
   132b8:	ldr	r3, [r0, #4]
   132bc:	cmp	r3, #16
   132c0:	b	1313c <table_set@@Base+0xdc>
   132c4:	ldr	r3, [r0, #4]
   132c8:	cmp	r3, #17
   132cc:	b	13258 <table_set@@Base+0x1f8>
   132d0:	ldr	r3, [r0, #4]
   132d4:	cmp	r3, #18
   132d8:	b	13258 <table_set@@Base+0x1f8>
   132dc:	ldr	r3, [r0, #4]
   132e0:	cmp	r3, #21
   132e4:	bne	1316c <table_set@@Base+0x10c>
   132e8:	mov	r0, r5
   132ec:	bl	11b00 <strlen@plt>
   132f0:	add	r1, r0, #1
   132f4:	ldr	r0, [r4]
   132f8:	bl	11ac4 <realloc@plt>
   132fc:	cmp	r0, #0
   13300:	str	r0, [r4]
   13304:	beq	1316c <table_set@@Base+0x10c>
   13308:	mov	r1, r5
   1330c:	bl	11ad0 <strcpy@plt>
   13310:	b	131d0 <table_set@@Base+0x170>
   13314:	ldr	r3, [r0, #4]
   13318:	cmp	r3, #19
   1331c:	b	13100 <table_set@@Base+0xa0>
   13320:	ldr	r3, [r0, #4]
   13324:	cmp	r3, #20
   13328:	b	13100 <table_set@@Base+0xa0>
   1332c:	ldr	r3, [r0, #4]
   13330:	cmp	r3, #23
   13334:	streq	r5, [r4]
   13338:	beq	131d0 <table_set@@Base+0x170>
   1333c:	b	1316c <table_set@@Base+0x10c>

00013340 <table_set_bool@@Base>:
   13340:	push	{r0, r1, r2, r3, r4, lr}
   13344:	add	ip, sp, #16
   13348:	strb	r3, [ip, #-1]!
   1334c:	mov	r3, #22
   13350:	str	r3, [sp]
   13354:	mov	r3, ip
   13358:	bl	13060 <table_set@@Base>
   1335c:	add	sp, sp, #20
   13360:	pop	{pc}		; (ldr pc, [sp], #4)

00013364 <table_set_int@@Base>:
   13364:	push	{r0, r1, r2, r3, r4, lr}
   13368:	add	ip, sp, #16
   1336c:	str	r3, [ip, #-4]!
   13370:	mov	r3, #0
   13374:	str	r3, [sp]
   13378:	mov	r3, ip
   1337c:	bl	13060 <table_set@@Base>
   13380:	add	sp, sp, #20
   13384:	pop	{pc}		; (ldr pc, [sp], #4)

00013388 <table_set_uint@@Base>:
   13388:	push	{r0, r1, r2, r3, r4, lr}
   1338c:	add	ip, sp, #16
   13390:	str	r3, [ip, #-4]!
   13394:	mov	r3, #1
   13398:	str	r3, [sp]
   1339c:	mov	r3, ip
   133a0:	bl	13060 <table_set@@Base>
   133a4:	add	sp, sp, #20
   133a8:	pop	{pc}		; (ldr pc, [sp], #4)

000133ac <table_set_int8@@Base>:
   133ac:	push	{r0, r1, r2, r3, r4, lr}
   133b0:	add	ip, sp, #16
   133b4:	strb	r3, [ip, #-1]!
   133b8:	mov	r3, #2
   133bc:	str	r3, [sp]
   133c0:	mov	r3, ip
   133c4:	bl	13060 <table_set@@Base>
   133c8:	add	sp, sp, #20
   133cc:	pop	{pc}		; (ldr pc, [sp], #4)

000133d0 <table_set_uint8@@Base>:
   133d0:	push	{r0, r1, r2, r3, r4, lr}
   133d4:	add	ip, sp, #16
   133d8:	strb	r3, [ip, #-1]!
   133dc:	mov	r3, #3
   133e0:	str	r3, [sp]
   133e4:	mov	r3, ip
   133e8:	bl	13060 <table_set@@Base>
   133ec:	add	sp, sp, #20
   133f0:	pop	{pc}		; (ldr pc, [sp], #4)

000133f4 <table_set_int16@@Base>:
   133f4:	push	{r0, r1, r2, r3, r4, lr}
   133f8:	add	ip, sp, #16
   133fc:	strh	r3, [ip, #-2]!
   13400:	mov	r3, #4
   13404:	str	r3, [sp]
   13408:	mov	r3, ip
   1340c:	bl	13060 <table_set@@Base>
   13410:	add	sp, sp, #20
   13414:	pop	{pc}		; (ldr pc, [sp], #4)

00013418 <table_set_uint16@@Base>:
   13418:	push	{r0, r1, r2, r3, r4, lr}
   1341c:	add	ip, sp, #16
   13420:	strh	r3, [ip, #-2]!
   13424:	mov	r3, #5
   13428:	str	r3, [sp]
   1342c:	mov	r3, ip
   13430:	bl	13060 <table_set@@Base>
   13434:	add	sp, sp, #20
   13438:	pop	{pc}		; (ldr pc, [sp], #4)

0001343c <table_set_int32@@Base>:
   1343c:	push	{r0, r1, r2, r3, r4, lr}
   13440:	add	ip, sp, #16
   13444:	str	r3, [ip, #-4]!
   13448:	mov	r3, #6
   1344c:	str	r3, [sp]
   13450:	mov	r3, ip
   13454:	bl	13060 <table_set@@Base>
   13458:	add	sp, sp, #20
   1345c:	pop	{pc}		; (ldr pc, [sp], #4)

00013460 <table_set_uint32@@Base>:
   13460:	push	{r0, r1, r2, r3, r4, lr}
   13464:	add	ip, sp, #16
   13468:	str	r3, [ip, #-4]!
   1346c:	mov	r3, #7
   13470:	str	r3, [sp]
   13474:	mov	r3, ip
   13478:	bl	13060 <table_set@@Base>
   1347c:	add	sp, sp, #20
   13480:	pop	{pc}		; (ldr pc, [sp], #4)

00013484 <table_set_int64@@Base>:
   13484:	mov	r3, #8
   13488:	push	{r0, r1, r2, lr}
   1348c:	str	r3, [sp]
   13490:	add	r3, sp, #16
   13494:	bl	13060 <table_set@@Base>
   13498:	add	sp, sp, #12
   1349c:	pop	{pc}		; (ldr pc, [sp], #4)

000134a0 <table_set_uint64@@Base>:
   134a0:	mov	r3, #9
   134a4:	push	{r0, r1, r2, lr}
   134a8:	str	r3, [sp]
   134ac:	add	r3, sp, #16
   134b0:	bl	13060 <table_set@@Base>
   134b4:	add	sp, sp, #12
   134b8:	pop	{pc}		; (ldr pc, [sp], #4)

000134bc <table_set_short@@Base>:
   134bc:	push	{r0, r1, r2, r3, r4, lr}
   134c0:	add	ip, sp, #16
   134c4:	strh	r3, [ip, #-2]!
   134c8:	mov	r3, #10
   134cc:	str	r3, [sp]
   134d0:	mov	r3, ip
   134d4:	bl	13060 <table_set@@Base>
   134d8:	add	sp, sp, #20
   134dc:	pop	{pc}		; (ldr pc, [sp], #4)

000134e0 <table_set_ushort@@Base>:
   134e0:	push	{r0, r1, r2, r3, r4, lr}
   134e4:	add	ip, sp, #16
   134e8:	strh	r3, [ip, #-2]!
   134ec:	mov	r3, #11
   134f0:	str	r3, [sp]
   134f4:	mov	r3, ip
   134f8:	bl	13060 <table_set@@Base>
   134fc:	add	sp, sp, #20
   13500:	pop	{pc}		; (ldr pc, [sp], #4)

00013504 <table_set_long@@Base>:
   13504:	push	{r0, r1, r2, r3, r4, lr}
   13508:	add	ip, sp, #16
   1350c:	str	r3, [ip, #-4]!
   13510:	mov	r3, #12
   13514:	str	r3, [sp]
   13518:	mov	r3, ip
   1351c:	bl	13060 <table_set@@Base>
   13520:	add	sp, sp, #20
   13524:	pop	{pc}		; (ldr pc, [sp], #4)

00013528 <table_set_ulong@@Base>:
   13528:	push	{r0, r1, r2, r3, r4, lr}
   1352c:	add	ip, sp, #16
   13530:	str	r3, [ip, #-4]!
   13534:	mov	r3, #13
   13538:	str	r3, [sp]
   1353c:	mov	r3, ip
   13540:	bl	13060 <table_set@@Base>
   13544:	add	sp, sp, #20
   13548:	pop	{pc}		; (ldr pc, [sp], #4)

0001354c <table_set_llong@@Base>:
   1354c:	mov	r3, #14
   13550:	push	{r0, r1, r2, lr}
   13554:	str	r3, [sp]
   13558:	add	r3, sp, #16
   1355c:	bl	13060 <table_set@@Base>
   13560:	add	sp, sp, #12
   13564:	pop	{pc}		; (ldr pc, [sp], #4)

00013568 <table_set_ullong@@Base>:
   13568:	mov	r3, #15
   1356c:	push	{r0, r1, r2, lr}
   13570:	str	r3, [sp]
   13574:	add	r3, sp, #16
   13578:	bl	13060 <table_set@@Base>
   1357c:	add	sp, sp, #12
   13580:	pop	{pc}		; (ldr pc, [sp], #4)

00013584 <table_set_float@@Base>:
   13584:	push	{r0, r1, r2, r3, r4, lr}
   13588:	add	r3, sp, #16
   1358c:	mov	ip, #16
   13590:	vstmdb	r3!, {s0}
   13594:	str	ip, [sp]
   13598:	bl	13060 <table_set@@Base>
   1359c:	add	sp, sp, #20
   135a0:	pop	{pc}		; (ldr pc, [sp], #4)

000135a4 <table_set_double@@Base>:
   135a4:	push	{r0, r1, r2, r3, r4, lr}
   135a8:	add	r3, sp, #16
   135ac:	mov	ip, #17
   135b0:	vstmdb	r3!, {d0}
   135b4:	str	ip, [sp]
   135b8:	bl	13060 <table_set@@Base>
   135bc:	add	sp, sp, #20
   135c0:	pop	{pc}		; (ldr pc, [sp], #4)

000135c4 <table_set_ldouble@@Base>:
   135c4:	push	{r0, r1, r2, r3, r4, lr}
   135c8:	add	r3, sp, #16
   135cc:	mov	ip, #18
   135d0:	vstmdb	r3!, {d0}
   135d4:	str	ip, [sp]
   135d8:	bl	13060 <table_set@@Base>
   135dc:	add	sp, sp, #20
   135e0:	pop	{pc}		; (ldr pc, [sp], #4)

000135e4 <table_set_string@@Base>:
   135e4:	mov	ip, #21
   135e8:	push	{r0, r1, r2, lr}
   135ec:	str	ip, [sp]
   135f0:	bl	13060 <table_set@@Base>
   135f4:	add	sp, sp, #12
   135f8:	pop	{pc}		; (ldr pc, [sp], #4)

000135fc <table_set_char@@Base>:
   135fc:	push	{r0, r1, r2, r3, r4, lr}
   13600:	add	ip, sp, #16
   13604:	strb	r3, [ip, #-1]!
   13608:	mov	r3, #19
   1360c:	str	r3, [sp]
   13610:	mov	r3, ip
   13614:	bl	13060 <table_set@@Base>
   13618:	add	sp, sp, #20
   1361c:	pop	{pc}		; (ldr pc, [sp], #4)

00013620 <table_set_uchar@@Base>:
   13620:	push	{r0, r1, r2, r3, r4, lr}
   13624:	add	ip, sp, #16
   13628:	strb	r3, [ip, #-1]!
   1362c:	mov	r3, #20
   13630:	str	r3, [sp]
   13634:	mov	r3, ip
   13638:	bl	13060 <table_set@@Base>
   1363c:	add	sp, sp, #20
   13640:	pop	{pc}		; (ldr pc, [sp], #4)

00013644 <table_set_ptr@@Base>:
   13644:	mov	ip, #23
   13648:	push	{r0, r1, r2, lr}
   1364c:	str	ip, [sp]
   13650:	bl	13060 <table_set@@Base>
   13654:	add	sp, sp, #12
   13658:	pop	{pc}		; (ldr pc, [sp], #4)

0001365c <table_cell_to_buffer@@Base>:
   1365c:	push	{r4, r5, r6, r7, lr}
   13660:	sub	sp, sp, #20
   13664:	mov	r7, r1
   13668:	mov	r1, r2
   1366c:	str	r2, [sp, #12]
   13670:	mov	r6, r0
   13674:	mov	r4, r3
   13678:	ldr	r5, [sp, #40]	; 0x28
   1367c:	bl	12620 <table_get_column_data_type@@Base>
   13680:	ldr	r2, [sp, #12]
   13684:	cmp	r0, #23
   13688:	ldrls	pc, [pc, r0, lsl #2]
   1368c:	b	137ac <table_cell_to_buffer@@Base+0x150>
   13690:	strdeq	r3, [r1], -r0
   13694:	andeq	r3, r1, r8, lsl #14
   13698:	andeq	r3, r1, ip, lsr #14
   1369c:	andeq	r3, r1, ip, lsr r7
   136a0:	andeq	r3, r1, ip, asr #14
   136a4:	andeq	r3, r1, ip, asr r7
   136a8:	andeq	r3, r1, ip, ror #14
   136ac:	andeq	r3, r1, ip, ror r7
   136b0:	andeq	r3, r1, ip, lsl #15
   136b4:			; <UNDEFINED> instruction: 0x000137b8
   136b8:	ldrdeq	r3, [r1], -r0
   136bc:	andeq	r3, r1, r8, ror #15
   136c0:	andeq	r3, r1, r0, lsl #16
   136c4:	andeq	r3, r1, r8, lsl r8
   136c8:	andeq	r3, r1, r0, lsr r8
   136cc:	andeq	r3, r1, r0, asr #16
   136d0:	andeq	r3, r1, r8, ror #16
   136d4:	muleq	r1, r0, r8
   136d8:	andeq	r3, r1, r8, lsr #17
   136dc:	ldrdeq	r3, [r1], -r0
   136e0:	andeq	r3, r1, r8, ror #17
   136e4:	andeq	r3, r1, r0, asr r8
   136e8:	andeq	r3, r1, r0, asr #17
   136ec:	strdeq	r3, [r1], -r8
   136f0:	mov	r1, r7
   136f4:	mov	r0, r6
   136f8:	bl	12d58 <table_get_int@@Base>
   136fc:	mov	r3, r0
   13700:	ldr	r2, [pc, #520]	; 13910 <table_cell_to_buffer@@Base+0x2b4>
   13704:	b	1371c <table_cell_to_buffer@@Base+0xc0>
   13708:	mov	r1, r7
   1370c:	mov	r0, r6
   13710:	bl	12d6c <table_get_uint@@Base>
   13714:	ldr	r2, [pc, #504]	; 13914 <table_cell_to_buffer@@Base+0x2b8>
   13718:	mov	r3, r0
   1371c:	mov	r1, r5
   13720:	mov	r0, r4
   13724:	bl	11b0c <snprintf@plt>
   13728:	b	137ac <table_cell_to_buffer@@Base+0x150>
   1372c:	mov	r1, r7
   13730:	mov	r0, r6
   13734:	bl	12d38 <table_get_int8@@Base>
   13738:	b	136fc <table_cell_to_buffer@@Base+0xa0>
   1373c:	mov	r1, r7
   13740:	mov	r0, r6
   13744:	bl	12e24 <table_get_uint8@@Base>
   13748:	b	13714 <table_cell_to_buffer@@Base+0xb8>
   1374c:	mov	r1, r7
   13750:	mov	r0, r6
   13754:	bl	12d80 <table_get_int16@@Base>
   13758:	b	136fc <table_cell_to_buffer@@Base+0xa0>
   1375c:	mov	r1, r7
   13760:	mov	r0, r6
   13764:	bl	12d94 <table_get_uint16@@Base>
   13768:	b	13714 <table_cell_to_buffer@@Base+0xb8>
   1376c:	mov	r1, r7
   13770:	mov	r0, r6
   13774:	bl	12d48 <table_get_int32@@Base>
   13778:	b	136fc <table_cell_to_buffer@@Base+0xa0>
   1377c:	mov	r1, r7
   13780:	mov	r0, r6
   13784:	bl	12d5c <table_get_uint32@@Base>
   13788:	b	13714 <table_cell_to_buffer@@Base+0xb8>
   1378c:	mov	r1, r7
   13790:	mov	r0, r6
   13794:	bl	12dc8 <table_get_int64@@Base>
   13798:	ldr	r2, [pc, #376]	; 13918 <table_cell_to_buffer@@Base+0x2bc>
   1379c:	strd	r0, [sp]
   137a0:	mov	r1, r5
   137a4:	mov	r0, r4
   137a8:	bl	11b0c <snprintf@plt>
   137ac:	mov	r0, #0
   137b0:	add	sp, sp, #20
   137b4:	pop	{r4, r5, r6, r7, pc}
   137b8:	mov	r1, r7
   137bc:	mov	r0, r6
   137c0:	bl	12ddc <table_get_uint64@@Base>
   137c4:	strd	r0, [sp]
   137c8:	ldr	r2, [pc, #332]	; 1391c <table_cell_to_buffer@@Base+0x2c0>
   137cc:	b	137a0 <table_cell_to_buffer@@Base+0x144>
   137d0:	mov	r1, r7
   137d4:	mov	r0, r6
   137d8:	bl	12d70 <table_get_short@@Base>
   137dc:	ldr	r2, [pc, #316]	; 13920 <table_cell_to_buffer@@Base+0x2c4>
   137e0:	mov	r3, r0
   137e4:	b	1371c <table_cell_to_buffer@@Base+0xc0>
   137e8:	mov	r1, r7
   137ec:	mov	r0, r6
   137f0:	bl	12d84 <table_get_ushort@@Base>
   137f4:	ldr	r2, [pc, #296]	; 13924 <table_cell_to_buffer@@Base+0x2c8>
   137f8:	mov	r3, r0
   137fc:	b	1371c <table_cell_to_buffer@@Base+0xc0>
   13800:	mov	r1, r7
   13804:	mov	r0, r6
   13808:	bl	12d98 <table_get_long@@Base>
   1380c:	ldr	r2, [pc, #276]	; 13928 <table_cell_to_buffer@@Base+0x2cc>
   13810:	mov	r3, r0
   13814:	b	1371c <table_cell_to_buffer@@Base+0xc0>
   13818:	mov	r1, r7
   1381c:	mov	r0, r6
   13820:	bl	12da8 <table_get_ulong@@Base>
   13824:	ldr	r2, [pc, #256]	; 1392c <table_cell_to_buffer@@Base+0x2d0>
   13828:	mov	r3, r0
   1382c:	b	1371c <table_cell_to_buffer@@Base+0xc0>
   13830:	mov	r1, r7
   13834:	mov	r0, r6
   13838:	bl	12db8 <table_get_llong@@Base>
   1383c:	b	13798 <table_cell_to_buffer@@Base+0x13c>
   13840:	mov	r1, r7
   13844:	mov	r0, r6
   13848:	bl	12dcc <table_get_ullong@@Base>
   1384c:	b	137c4 <table_cell_to_buffer@@Base+0x168>
   13850:	mov	r1, r7
   13854:	mov	r0, r6
   13858:	bl	12e28 <table_get_string@@Base>
   1385c:	ldr	r2, [pc, #204]	; 13930 <table_cell_to_buffer@@Base+0x2d4>
   13860:	mov	r3, r0
   13864:	b	1371c <table_cell_to_buffer@@Base+0xc0>
   13868:	mov	r1, r7
   1386c:	mov	r0, r6
   13870:	bl	12de0 <table_get_float@@Base>
   13874:	ldr	r2, [pc, #184]	; 13934 <table_cell_to_buffer@@Base+0x2d8>
   13878:	vcvt.f64.f32	d0, s0
   1387c:	vstr	d0, [sp]
   13880:	mov	r1, r5
   13884:	mov	r0, r4
   13888:	bl	11b0c <snprintf@plt>
   1388c:	b	137ac <table_cell_to_buffer@@Base+0x150>
   13890:	mov	r1, r7
   13894:	mov	r0, r6
   13898:	bl	12df0 <table_get_double@@Base>
   1389c:	ldr	r2, [pc, #148]	; 13938 <table_cell_to_buffer@@Base+0x2dc>
   138a0:	vstr	d0, [sp]
   138a4:	b	13880 <table_cell_to_buffer@@Base+0x224>
   138a8:	mov	r1, r7
   138ac:	mov	r0, r6
   138b0:	bl	12e00 <table_get_ldouble@@Base>
   138b4:	ldr	r2, [pc, #128]	; 1393c <table_cell_to_buffer@@Base+0x2e0>
   138b8:	vstr	d0, [sp]
   138bc:	b	13880 <table_cell_to_buffer@@Base+0x224>
   138c0:	mov	r1, r7
   138c4:	mov	r0, r6
   138c8:	bl	12d28 <table_get_bool@@Base>
   138cc:	b	136fc <table_cell_to_buffer@@Base+0xa0>
   138d0:	mov	r1, r7
   138d4:	mov	r0, r6
   138d8:	bl	12e20 <table_get_char@@Base>
   138dc:	mov	r3, r0
   138e0:	ldr	r2, [pc, #88]	; 13940 <table_cell_to_buffer@@Base+0x2e4>
   138e4:	b	1371c <table_cell_to_buffer@@Base+0xc0>
   138e8:	mov	r1, r7
   138ec:	mov	r0, r6
   138f0:	bl	12e10 <table_get_uchar@@Base>
   138f4:	b	138dc <table_cell_to_buffer@@Base+0x280>
   138f8:	mov	r1, r7
   138fc:	mov	r0, r6
   13900:	bl	12e2c <table_get_ptr@@Base>
   13904:	ldr	r2, [pc, #56]	; 13944 <table_cell_to_buffer@@Base+0x2e8>
   13908:	mov	r3, r0
   1390c:	b	1371c <table_cell_to_buffer@@Base+0xc0>
   13910:	andeq	r4, r1, r4, asr #5
   13914:	andeq	r4, r1, r7, asr #5
   13918:	andeq	r4, r1, sl, asr #5
   1391c:	andeq	r4, r1, pc, asr #5
   13920:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13924:	ldrdeq	r4, [r1], -r8
   13928:	ldrdeq	r4, [r1], -ip
   1392c:	andeq	r4, r1, r0, ror #5
   13930:	andeq	r4, r1, r4, ror #5
   13934:	andeq	r4, r1, r7, ror #5
   13938:	andeq	r4, r1, sl, ror #5
   1393c:	andeq	r4, r1, lr, ror #5
   13940:	strdeq	r4, [r1], -r2
   13944:	strdeq	r4, [r1], -r5

00013948 <table_cell_from_buffer@@Base>:
   13948:	push	{r4, r5, r6, r7, lr}
   1394c:	mov	r7, r1
   13950:	sub	sp, sp, #268	; 0x10c
   13954:	mov	r1, r2
   13958:	mov	r6, r0
   1395c:	mov	r5, r2
   13960:	mov	r4, r3
   13964:	bl	12620 <table_get_column_data_type@@Base>
   13968:	cmp	r0, #23
   1396c:	ldrls	pc, [pc, r0, lsl #2]
   13970:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13974:	ldrdeq	r3, [r1], -r4
   13978:	andeq	r3, r1, r8, lsl #20
   1397c:	andeq	r3, r1, r8, lsr sl
   13980:	andeq	r3, r1, r8, ror #20
   13984:	muleq	r1, r8, sl
   13988:	andeq	r3, r1, r8, asr #21
   1398c:	strdeq	r3, [r1], -r8
   13990:	andeq	r3, r1, r8, lsr #22
   13994:	andeq	r3, r1, r8, asr fp
   13998:	andeq	r3, r1, ip, lsl #23
   1399c:	andeq	r3, r1, r0, asr #23
   139a0:	strdeq	r3, [r1], -r0
   139a4:	andeq	r3, r1, r0, lsr #24
   139a8:	andeq	r3, r1, r0, asr ip
   139ac:	andeq	r3, r1, r0, lsl #25
   139b0:			; <UNDEFINED> instruction: 0x00013cb4
   139b4:	andeq	r3, r1, r8, lsl sp
   139b8:	andeq	r3, r1, r8, asr #26
   139bc:	andeq	r3, r1, r8, ror sp
   139c0:	andeq	r3, r1, r4, lsl #28
   139c4:	andeq	r3, r1, r4, lsr lr
   139c8:	andeq	r3, r1, r8, ror #25
   139cc:	andeq	r3, r1, r8, lsr #27
   139d0:	andeq	r3, r1, r4, ror #28
   139d4:	add	r2, sp, #8
   139d8:	ldr	r1, [pc, #1212]	; 13e9c <table_cell_from_buffer@@Base+0x554>
   139dc:	mov	r0, r4
   139e0:	bl	11b18 <__isoc99_sscanf@plt>
   139e4:	cmp	r0, #1
   139e8:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   139ec:	ldr	r3, [sp, #8]
   139f0:	mov	r2, r5
   139f4:	mov	r1, r7
   139f8:	mov	r0, r6
   139fc:	bl	13364 <table_set_int@@Base>
   13a00:	mov	r4, #0
   13a04:	b	13df8 <table_cell_from_buffer@@Base+0x4b0>
   13a08:	add	r2, sp, #8
   13a0c:	ldr	r1, [pc, #1164]	; 13ea0 <table_cell_from_buffer@@Base+0x558>
   13a10:	mov	r0, r4
   13a14:	bl	11b18 <__isoc99_sscanf@plt>
   13a18:	cmp	r0, #1
   13a1c:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13a20:	ldr	r3, [sp, #8]
   13a24:	mov	r2, r5
   13a28:	mov	r1, r7
   13a2c:	mov	r0, r6
   13a30:	bl	13388 <table_set_uint@@Base>
   13a34:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13a38:	add	r2, sp, #8
   13a3c:	ldr	r1, [pc, #1120]	; 13ea4 <table_cell_from_buffer@@Base+0x55c>
   13a40:	mov	r0, r4
   13a44:	bl	11b18 <__isoc99_sscanf@plt>
   13a48:	cmp	r0, #1
   13a4c:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13a50:	ldrsb	r3, [sp, #8]
   13a54:	mov	r2, r5
   13a58:	mov	r1, r7
   13a5c:	mov	r0, r6
   13a60:	bl	133ac <table_set_int8@@Base>
   13a64:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13a68:	add	r2, sp, #8
   13a6c:	ldr	r1, [pc, #1076]	; 13ea8 <table_cell_from_buffer@@Base+0x560>
   13a70:	mov	r0, r4
   13a74:	bl	11b18 <__isoc99_sscanf@plt>
   13a78:	cmp	r0, #1
   13a7c:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13a80:	ldrb	r3, [sp, #8]
   13a84:	mov	r2, r5
   13a88:	mov	r1, r7
   13a8c:	mov	r0, r6
   13a90:	bl	133d0 <table_set_uint8@@Base>
   13a94:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13a98:	add	r2, sp, #8
   13a9c:	ldr	r1, [pc, #1032]	; 13eac <table_cell_from_buffer@@Base+0x564>
   13aa0:	mov	r0, r4
   13aa4:	bl	11b18 <__isoc99_sscanf@plt>
   13aa8:	cmp	r0, #1
   13aac:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13ab0:	ldrsh	r3, [sp, #8]
   13ab4:	mov	r2, r5
   13ab8:	mov	r1, r7
   13abc:	mov	r0, r6
   13ac0:	bl	133f4 <table_set_int16@@Base>
   13ac4:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13ac8:	add	r2, sp, #8
   13acc:	ldr	r1, [pc, #988]	; 13eb0 <table_cell_from_buffer@@Base+0x568>
   13ad0:	mov	r0, r4
   13ad4:	bl	11b18 <__isoc99_sscanf@plt>
   13ad8:	cmp	r0, #1
   13adc:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13ae0:	ldrh	r3, [sp, #8]
   13ae4:	mov	r2, r5
   13ae8:	mov	r1, r7
   13aec:	mov	r0, r6
   13af0:	bl	13418 <table_set_uint16@@Base>
   13af4:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13af8:	add	r2, sp, #8
   13afc:	ldr	r1, [pc, #920]	; 13e9c <table_cell_from_buffer@@Base+0x554>
   13b00:	mov	r0, r4
   13b04:	bl	11b18 <__isoc99_sscanf@plt>
   13b08:	cmp	r0, #1
   13b0c:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13b10:	ldr	r3, [sp, #8]
   13b14:	mov	r2, r5
   13b18:	mov	r1, r7
   13b1c:	mov	r0, r6
   13b20:	bl	1343c <table_set_int32@@Base>
   13b24:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13b28:	add	r2, sp, #8
   13b2c:	ldr	r1, [pc, #876]	; 13ea0 <table_cell_from_buffer@@Base+0x558>
   13b30:	mov	r0, r4
   13b34:	bl	11b18 <__isoc99_sscanf@plt>
   13b38:	cmp	r0, #1
   13b3c:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13b40:	ldr	r3, [sp, #8]
   13b44:	mov	r2, r5
   13b48:	mov	r1, r7
   13b4c:	mov	r0, r6
   13b50:	bl	13460 <table_set_uint32@@Base>
   13b54:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13b58:	add	r2, sp, #8
   13b5c:	ldr	r1, [pc, #848]	; 13eb4 <table_cell_from_buffer@@Base+0x56c>
   13b60:	mov	r0, r4
   13b64:	bl	11b18 <__isoc99_sscanf@plt>
   13b68:	cmp	r0, #1
   13b6c:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13b70:	ldrd	r2, [sp, #8]
   13b74:	mov	r1, r7
   13b78:	mov	r0, r6
   13b7c:	strd	r2, [sp]
   13b80:	mov	r2, r5
   13b84:	bl	13484 <table_set_int64@@Base>
   13b88:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13b8c:	add	r2, sp, #8
   13b90:	ldr	r1, [pc, #800]	; 13eb8 <table_cell_from_buffer@@Base+0x570>
   13b94:	mov	r0, r4
   13b98:	bl	11b18 <__isoc99_sscanf@plt>
   13b9c:	cmp	r0, #1
   13ba0:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13ba4:	ldrd	r2, [sp, #8]
   13ba8:	mov	r1, r7
   13bac:	mov	r0, r6
   13bb0:	strd	r2, [sp]
   13bb4:	mov	r2, r5
   13bb8:	bl	134a0 <table_set_uint64@@Base>
   13bbc:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13bc0:	add	r2, sp, #8
   13bc4:	ldr	r1, [pc, #736]	; 13eac <table_cell_from_buffer@@Base+0x564>
   13bc8:	mov	r0, r4
   13bcc:	bl	11b18 <__isoc99_sscanf@plt>
   13bd0:	cmp	r0, #1
   13bd4:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13bd8:	ldrsh	r3, [sp, #8]
   13bdc:	mov	r2, r5
   13be0:	mov	r1, r7
   13be4:	mov	r0, r6
   13be8:	bl	134bc <table_set_short@@Base>
   13bec:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13bf0:	add	r2, sp, #8
   13bf4:	ldr	r1, [pc, #692]	; 13eb0 <table_cell_from_buffer@@Base+0x568>
   13bf8:	mov	r0, r4
   13bfc:	bl	11b18 <__isoc99_sscanf@plt>
   13c00:	cmp	r0, #1
   13c04:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13c08:	ldrh	r3, [sp, #8]
   13c0c:	mov	r2, r5
   13c10:	mov	r1, r7
   13c14:	mov	r0, r6
   13c18:	bl	134e0 <table_set_ushort@@Base>
   13c1c:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13c20:	add	r2, sp, #8
   13c24:	ldr	r1, [pc, #656]	; 13ebc <table_cell_from_buffer@@Base+0x574>
   13c28:	mov	r0, r4
   13c2c:	bl	11b18 <__isoc99_sscanf@plt>
   13c30:	cmp	r0, #1
   13c34:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13c38:	ldr	r3, [sp, #8]
   13c3c:	mov	r2, r5
   13c40:	mov	r1, r7
   13c44:	mov	r0, r6
   13c48:	bl	13504 <table_set_long@@Base>
   13c4c:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13c50:	add	r2, sp, #8
   13c54:	ldr	r1, [pc, #612]	; 13ec0 <table_cell_from_buffer@@Base+0x578>
   13c58:	mov	r0, r4
   13c5c:	bl	11b18 <__isoc99_sscanf@plt>
   13c60:	cmp	r0, #1
   13c64:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13c68:	ldr	r3, [sp, #8]
   13c6c:	mov	r2, r5
   13c70:	mov	r1, r7
   13c74:	mov	r0, r6
   13c78:	bl	13528 <table_set_ulong@@Base>
   13c7c:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13c80:	add	r2, sp, #8
   13c84:	ldr	r1, [pc, #552]	; 13eb4 <table_cell_from_buffer@@Base+0x56c>
   13c88:	mov	r0, r4
   13c8c:	bl	11b18 <__isoc99_sscanf@plt>
   13c90:	cmp	r0, #1
   13c94:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13c98:	ldrd	r2, [sp, #8]
   13c9c:	mov	r1, r7
   13ca0:	mov	r0, r6
   13ca4:	strd	r2, [sp]
   13ca8:	mov	r2, r5
   13cac:	bl	1354c <table_set_llong@@Base>
   13cb0:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13cb4:	add	r2, sp, #8
   13cb8:	ldr	r1, [pc, #504]	; 13eb8 <table_cell_from_buffer@@Base+0x570>
   13cbc:	mov	r0, r4
   13cc0:	bl	11b18 <__isoc99_sscanf@plt>
   13cc4:	cmp	r0, #1
   13cc8:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13ccc:	ldrd	r2, [sp, #8]
   13cd0:	mov	r1, r7
   13cd4:	mov	r0, r6
   13cd8:	strd	r2, [sp]
   13cdc:	mov	r2, r5
   13ce0:	bl	13568 <table_set_ullong@@Base>
   13ce4:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13ce8:	add	r2, sp, #8
   13cec:	ldr	r1, [pc, #464]	; 13ec4 <table_cell_from_buffer@@Base+0x57c>
   13cf0:	mov	r0, r4
   13cf4:	bl	11b18 <__isoc99_sscanf@plt>
   13cf8:	cmp	r0, #1
   13cfc:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13d00:	add	r3, sp, #8
   13d04:	mov	r2, r5
   13d08:	mov	r1, r7
   13d0c:	mov	r0, r6
   13d10:	bl	135e4 <table_set_string@@Base>
   13d14:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13d18:	add	r2, sp, #8
   13d1c:	ldr	r1, [pc, #420]	; 13ec8 <table_cell_from_buffer@@Base+0x580>
   13d20:	mov	r0, r4
   13d24:	bl	11b18 <__isoc99_sscanf@plt>
   13d28:	cmp	r0, #1
   13d2c:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13d30:	vldr	s0, [sp, #8]
   13d34:	mov	r2, r5
   13d38:	mov	r1, r7
   13d3c:	mov	r0, r6
   13d40:	bl	13584 <table_set_float@@Base>
   13d44:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13d48:	add	r2, sp, #8
   13d4c:	ldr	r1, [pc, #376]	; 13ecc <table_cell_from_buffer@@Base+0x584>
   13d50:	mov	r0, r4
   13d54:	bl	11b18 <__isoc99_sscanf@plt>
   13d58:	cmp	r0, #1
   13d5c:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13d60:	vldr	d0, [sp, #8]
   13d64:	mov	r2, r5
   13d68:	mov	r1, r7
   13d6c:	mov	r0, r6
   13d70:	bl	135a4 <table_set_double@@Base>
   13d74:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13d78:	add	r2, sp, #8
   13d7c:	ldr	r1, [pc, #332]	; 13ed0 <table_cell_from_buffer@@Base+0x588>
   13d80:	mov	r0, r4
   13d84:	bl	11b18 <__isoc99_sscanf@plt>
   13d88:	cmp	r0, #1
   13d8c:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13d90:	vldr	d0, [sp, #8]
   13d94:	mov	r2, r5
   13d98:	mov	r1, r7
   13d9c:	mov	r0, r6
   13da0:	bl	135c4 <table_set_ldouble@@Base>
   13da4:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13da8:	add	r2, sp, #8
   13dac:	ldr	r1, [pc, #232]	; 13e9c <table_cell_from_buffer@@Base+0x554>
   13db0:	mov	r0, r4
   13db4:	bl	11b18 <__isoc99_sscanf@plt>
   13db8:	cmp	r0, #1
   13dbc:	mov	r3, r0
   13dc0:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13dc4:	ldr	r4, [sp, #8]
   13dc8:	cmp	r4, #0
   13dcc:	beq	13de4 <table_cell_from_buffer@@Base+0x49c>
   13dd0:	mov	r2, r5
   13dd4:	mov	r1, r7
   13dd8:	mov	r0, r6
   13ddc:	bl	13340 <table_set_bool@@Base>
   13de0:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13de4:	mov	r3, r4
   13de8:	mov	r2, r5
   13dec:	mov	r1, r7
   13df0:	mov	r0, r6
   13df4:	bl	13340 <table_set_bool@@Base>
   13df8:	mov	r0, r4
   13dfc:	add	sp, sp, #268	; 0x10c
   13e00:	pop	{r4, r5, r6, r7, pc}
   13e04:	add	r2, sp, #8
   13e08:	ldr	r1, [pc, #196]	; 13ed4 <table_cell_from_buffer@@Base+0x58c>
   13e0c:	mov	r0, r4
   13e10:	bl	11b18 <__isoc99_sscanf@plt>
   13e14:	cmp	r0, #1
   13e18:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13e1c:	ldrb	r3, [sp, #8]
   13e20:	mov	r2, r5
   13e24:	mov	r1, r7
   13e28:	mov	r0, r6
   13e2c:	bl	135fc <table_set_char@@Base>
   13e30:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13e34:	add	r2, sp, #8
   13e38:	ldr	r1, [pc, #148]	; 13ed4 <table_cell_from_buffer@@Base+0x58c>
   13e3c:	mov	r0, r4
   13e40:	bl	11b18 <__isoc99_sscanf@plt>
   13e44:	cmp	r0, #1
   13e48:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13e4c:	ldrb	r3, [sp, #8]
   13e50:	mov	r2, r5
   13e54:	mov	r1, r7
   13e58:	mov	r0, r6
   13e5c:	bl	13620 <table_set_uchar@@Base>
   13e60:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13e64:	add	r2, sp, #8
   13e68:	ldr	r1, [pc, #104]	; 13ed8 <table_cell_from_buffer@@Base+0x590>
   13e6c:	mov	r0, r4
   13e70:	bl	11b18 <__isoc99_sscanf@plt>
   13e74:	cmp	r0, #1
   13e78:	bne	13e94 <table_cell_from_buffer@@Base+0x54c>
   13e7c:	ldr	r3, [sp, #8]
   13e80:	mov	r2, r5
   13e84:	mov	r1, r7
   13e88:	mov	r0, r6
   13e8c:	bl	13644 <table_set_ptr@@Base>
   13e90:	b	13a00 <table_cell_from_buffer@@Base+0xb8>
   13e94:	mvn	r4, #0
   13e98:	b	13df8 <table_cell_from_buffer@@Base+0x4b0>
   13e9c:	andeq	r4, r1, r4, asr #5
   13ea0:	andeq	r4, r1, r7, asr #5
   13ea4:	strdeq	r4, [r1], -r8
   13ea8:	strdeq	r4, [r1], -sp
   13eac:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13eb0:	ldrdeq	r4, [r1], -r8
   13eb4:	andeq	r4, r1, sl, asr #5
   13eb8:	andeq	r4, r1, pc, asr #5
   13ebc:	ldrdeq	r4, [r1], -ip
   13ec0:	andeq	r4, r1, r0, ror #5
   13ec4:	andeq	r4, r1, r4, ror #5
   13ec8:	andeq	r4, r1, r7, ror #5
   13ecc:	andeq	r4, r1, sl, ror #5
   13ed0:	andeq	r4, r1, lr, ror #5
   13ed4:	strdeq	r4, [r1], -r2
   13ed8:	strdeq	r4, [r1], -r5

00013edc <table_get_cell_ptr@@Base>:
   13edc:	push	{r4, lr}
   13ee0:	mov	r4, r2
   13ee4:	bl	13044 <table_get_row_ptr@@Base>
   13ee8:	ldr	r0, [r0]
   13eec:	add	r0, r0, r4, lsl #2
   13ef0:	pop	{r4, pc}

00013ef4 <table_cell_init@@Base>:
   13ef4:	push	{r4, lr}
   13ef8:	bl	13edc <table_get_cell_ptr@@Base>
   13efc:	mov	r3, #0
   13f00:	str	r3, [r0]
   13f04:	pop	{r4, pc}

00013f08 <table_cell_destroy@@Base>:
   13f08:	push	{r4, r5, r6, lr}
   13f0c:	mov	r6, r1
   13f10:	mov	r1, r2
   13f14:	mov	r5, r0
   13f18:	mov	r4, r2
   13f1c:	bl	12620 <table_get_column_data_type@@Base>
   13f20:	cmp	r0, #23
   13f24:	popeq	{r4, r5, r6, pc}
   13f28:	mov	r2, r4
   13f2c:	mov	r1, r6
   13f30:	mov	r0, r5
   13f34:	bl	13edc <table_get_cell_ptr@@Base>
   13f38:	ldr	r0, [r0]
   13f3c:	cmp	r0, #0
   13f40:	popeq	{r4, r5, r6, pc}
   13f44:	pop	{r4, r5, r6, lr}
   13f48:	b	11ab8 <free@plt>

00013f4c <table_cell_nullify@@Base>:
   13f4c:	push	{r4, lr}
   13f50:	bl	13edc <table_get_cell_ptr@@Base>
   13f54:	mov	r4, r0
   13f58:	ldr	r0, [r0]
   13f5c:	cmp	r0, #0
   13f60:	beq	13f70 <table_cell_nullify@@Base+0x24>
   13f64:	bl	11ab8 <free@plt>
   13f68:	mov	r3, #0
   13f6c:	str	r3, [r4]
   13f70:	mov	r0, #0
   13f74:	pop	{r4, pc}
   13f78:	subs	r2, r1, #1
   13f7c:	bxeq	lr
   13f80:	bcc	14158 <table_cell_nullify@@Base+0x20c>
   13f84:	cmp	r0, r1
   13f88:	bls	1413c <table_cell_nullify@@Base+0x1f0>
   13f8c:	tst	r1, r2
   13f90:	beq	14148 <table_cell_nullify@@Base+0x1fc>
   13f94:	clz	r3, r0
   13f98:	clz	r2, r1
   13f9c:	sub	r3, r2, r3
   13fa0:	rsbs	r3, r3, #31
   13fa4:	addne	r3, r3, r3, lsl #1
   13fa8:	mov	r2, #0
   13fac:	addne	pc, pc, r3, lsl #2
   13fb0:	nop			; (mov r0, r0)
   13fb4:	cmp	r0, r1, lsl #31
   13fb8:	adc	r2, r2, r2
   13fbc:	subcs	r0, r0, r1, lsl #31
   13fc0:	cmp	r0, r1, lsl #30
   13fc4:	adc	r2, r2, r2
   13fc8:	subcs	r0, r0, r1, lsl #30
   13fcc:	cmp	r0, r1, lsl #29
   13fd0:	adc	r2, r2, r2
   13fd4:	subcs	r0, r0, r1, lsl #29
   13fd8:	cmp	r0, r1, lsl #28
   13fdc:	adc	r2, r2, r2
   13fe0:	subcs	r0, r0, r1, lsl #28
   13fe4:	cmp	r0, r1, lsl #27
   13fe8:	adc	r2, r2, r2
   13fec:	subcs	r0, r0, r1, lsl #27
   13ff0:	cmp	r0, r1, lsl #26
   13ff4:	adc	r2, r2, r2
   13ff8:	subcs	r0, r0, r1, lsl #26
   13ffc:	cmp	r0, r1, lsl #25
   14000:	adc	r2, r2, r2
   14004:	subcs	r0, r0, r1, lsl #25
   14008:	cmp	r0, r1, lsl #24
   1400c:	adc	r2, r2, r2
   14010:	subcs	r0, r0, r1, lsl #24
   14014:	cmp	r0, r1, lsl #23
   14018:	adc	r2, r2, r2
   1401c:	subcs	r0, r0, r1, lsl #23
   14020:	cmp	r0, r1, lsl #22
   14024:	adc	r2, r2, r2
   14028:	subcs	r0, r0, r1, lsl #22
   1402c:	cmp	r0, r1, lsl #21
   14030:	adc	r2, r2, r2
   14034:	subcs	r0, r0, r1, lsl #21
   14038:	cmp	r0, r1, lsl #20
   1403c:	adc	r2, r2, r2
   14040:	subcs	r0, r0, r1, lsl #20
   14044:	cmp	r0, r1, lsl #19
   14048:	adc	r2, r2, r2
   1404c:	subcs	r0, r0, r1, lsl #19
   14050:	cmp	r0, r1, lsl #18
   14054:	adc	r2, r2, r2
   14058:	subcs	r0, r0, r1, lsl #18
   1405c:	cmp	r0, r1, lsl #17
   14060:	adc	r2, r2, r2
   14064:	subcs	r0, r0, r1, lsl #17
   14068:	cmp	r0, r1, lsl #16
   1406c:	adc	r2, r2, r2
   14070:	subcs	r0, r0, r1, lsl #16
   14074:	cmp	r0, r1, lsl #15
   14078:	adc	r2, r2, r2
   1407c:	subcs	r0, r0, r1, lsl #15
   14080:	cmp	r0, r1, lsl #14
   14084:	adc	r2, r2, r2
   14088:	subcs	r0, r0, r1, lsl #14
   1408c:	cmp	r0, r1, lsl #13
   14090:	adc	r2, r2, r2
   14094:	subcs	r0, r0, r1, lsl #13
   14098:	cmp	r0, r1, lsl #12
   1409c:	adc	r2, r2, r2
   140a0:	subcs	r0, r0, r1, lsl #12
   140a4:	cmp	r0, r1, lsl #11
   140a8:	adc	r2, r2, r2
   140ac:	subcs	r0, r0, r1, lsl #11
   140b0:	cmp	r0, r1, lsl #10
   140b4:	adc	r2, r2, r2
   140b8:	subcs	r0, r0, r1, lsl #10
   140bc:	cmp	r0, r1, lsl #9
   140c0:	adc	r2, r2, r2
   140c4:	subcs	r0, r0, r1, lsl #9
   140c8:	cmp	r0, r1, lsl #8
   140cc:	adc	r2, r2, r2
   140d0:	subcs	r0, r0, r1, lsl #8
   140d4:	cmp	r0, r1, lsl #7
   140d8:	adc	r2, r2, r2
   140dc:	subcs	r0, r0, r1, lsl #7
   140e0:	cmp	r0, r1, lsl #6
   140e4:	adc	r2, r2, r2
   140e8:	subcs	r0, r0, r1, lsl #6
   140ec:	cmp	r0, r1, lsl #5
   140f0:	adc	r2, r2, r2
   140f4:	subcs	r0, r0, r1, lsl #5
   140f8:	cmp	r0, r1, lsl #4
   140fc:	adc	r2, r2, r2
   14100:	subcs	r0, r0, r1, lsl #4
   14104:	cmp	r0, r1, lsl #3
   14108:	adc	r2, r2, r2
   1410c:	subcs	r0, r0, r1, lsl #3
   14110:	cmp	r0, r1, lsl #2
   14114:	adc	r2, r2, r2
   14118:	subcs	r0, r0, r1, lsl #2
   1411c:	cmp	r0, r1, lsl #1
   14120:	adc	r2, r2, r2
   14124:	subcs	r0, r0, r1, lsl #1
   14128:	cmp	r0, r1
   1412c:	adc	r2, r2, r2
   14130:	subcs	r0, r0, r1
   14134:	mov	r0, r2
   14138:	bx	lr
   1413c:	moveq	r0, #1
   14140:	movne	r0, #0
   14144:	bx	lr
   14148:	clz	r2, r1
   1414c:	rsb	r2, r2, #31
   14150:	lsr	r0, r0, r2
   14154:	bx	lr
   14158:	cmp	r0, #0
   1415c:	mvnne	r0, #0
   14160:	b	14184 <table_cell_nullify@@Base+0x238>
   14164:	cmp	r1, #0
   14168:	beq	14158 <table_cell_nullify@@Base+0x20c>
   1416c:	push	{r0, r1, lr}
   14170:	bl	13f78 <table_cell_nullify@@Base+0x2c>
   14174:	pop	{r1, r2, lr}
   14178:	mul	r3, r2, r0
   1417c:	sub	r1, r1, r3
   14180:	bx	lr
   14184:	push	{r1, lr}
   14188:	mov	r0, #8
   1418c:	bl	11a94 <raise@plt>
   14190:	pop	{r1, pc}

00014194 <__libc_csu_init@@Base>:
   14194:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14198:	mov	r7, r0
   1419c:	ldr	r6, [pc, #72]	; 141ec <__libc_csu_init@@Base+0x58>
   141a0:	ldr	r5, [pc, #72]	; 141f0 <__libc_csu_init@@Base+0x5c>
   141a4:	add	r6, pc, r6
   141a8:	add	r5, pc, r5
   141ac:	sub	r6, r6, r5
   141b0:	mov	r8, r1
   141b4:	mov	r9, r2
   141b8:	bl	11a74 <raise@plt-0x20>
   141bc:	asrs	r6, r6, #2
   141c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   141c4:	mov	r4, #0
   141c8:	add	r4, r4, #1
   141cc:	ldr	r3, [r5], #4
   141d0:	mov	r2, r9
   141d4:	mov	r1, r8
   141d8:	mov	r0, r7
   141dc:	blx	r3
   141e0:	cmp	r6, r4
   141e4:	bne	141c8 <__libc_csu_init@@Base+0x34>
   141e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   141ec:	andeq	r0, r1, r4, ror #26
   141f0:	andeq	r0, r1, ip, asr sp

000141f4 <__libc_csu_fini@@Base>:
   141f4:	bx	lr

Disassembly of section .fini:

000141f8 <.fini>:
   141f8:	push	{r3, lr}
   141fc:	pop	{r3, pc}
