
../repos/prog2/3.1:     file format elf32-littlearm


Disassembly of section .init:

00010a24 <.init>:
   10a24:	push	{r3, lr}
   10a28:	bl	10cdc <_start@@Base+0x3c>
   10a2c:	pop	{r3, pc}

Disassembly of section .plt:

00010a30 <calloc@plt-0x14>:
   10a30:	push	{lr}		; (str lr, [sp, #-4]!)
   10a34:	ldr	lr, [pc, #4]	; 10a40 <calloc@plt-0x4>
   10a38:	add	lr, pc, lr
   10a3c:	ldr	pc, [lr, #8]!
   10a40:	andeq	r1, r1, r0, asr #11

00010a44 <calloc@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #69632	; 0x11000
   10a4c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a50 <strstr@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a5c <strcmp@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a68 <printf@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a74 <fopen@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a80 <free@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1432]!	; 0x598

00010a8c <fgets@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1424]!	; 0x590

00010a98 <time@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #69632	; 0x11000
   10aa0:	ldr	pc, [ip, #1416]!	; 0x588

00010aa4 <realloc@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #69632	; 0x11000
   10aac:	ldr	pc, [ip, #1408]!	; 0x580

00010ab0 <strcat@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #69632	; 0x11000
   10ab8:	ldr	pc, [ip, #1400]!	; 0x578

00010abc <strcpy@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #69632	; 0x11000
   10ac4:	ldr	pc, [ip, #1392]!	; 0x570

00010ac8 <puts@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #69632	; 0x11000
   10ad0:	ldr	pc, [ip, #1384]!	; 0x568

00010ad4 <malloc@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #69632	; 0x11000
   10adc:	ldr	pc, [ip, #1376]!	; 0x560

00010ae0 <__libc_start_main@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #69632	; 0x11000
   10ae8:	ldr	pc, [ip, #1368]!	; 0x558

00010aec <__gmon_start__@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #69632	; 0x11000
   10af4:	ldr	pc, [ip, #1360]!	; 0x550

00010af8 <strlen@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #69632	; 0x11000
   10b00:	ldr	pc, [ip, #1352]!	; 0x548

00010b04 <srand@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #69632	; 0x11000
   10b0c:	ldr	pc, [ip, #1344]!	; 0x540

00010b10 <rand@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1336]!	; 0x538

00010b1c <fclose@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1328]!	; 0x530

00010b28 <abort@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1320]!	; 0x528

Disassembly of section .text:

00010b34 <main@@Base>:
   10b34:	push	{r4, r5, r6, r7, r8, lr}
   10b38:	sub	sp, sp, #104	; 0x68
   10b3c:	mov	r5, #0
   10b40:	mov	r8, r5
   10b44:	bl	10f48 <vetor_novo@@Base>
   10b48:	mov	r4, r0
   10b4c:	ldr	r1, [pc, #288]	; 10c74 <main@@Base+0x140>
   10b50:	ldr	r0, [pc, #288]	; 10c78 <main@@Base+0x144>
   10b54:	bl	10a74 <fopen@plt>
   10b58:	mov	r7, r0
   10b5c:	mov	r2, r7
   10b60:	mov	r1, #100	; 0x64
   10b64:	add	r0, sp, #4
   10b68:	bl	10a8c <fgets@plt>
   10b6c:	cmp	r0, #0
   10b70:	bne	10c1c <main@@Base+0xe8>
   10b74:	mov	r1, r5
   10b78:	ldr	r0, [pc, #252]	; 10c7c <main@@Base+0x148>
   10b7c:	bl	10a68 <printf@plt>
   10b80:	mov	r0, r4
   10b84:	bl	10d90 <vetor_imprime@@Base>
   10b88:	ldr	r1, [pc, #240]	; 10c80 <main@@Base+0x14c>
   10b8c:	mov	r0, r4
   10b90:	bl	111d4 <vetor_pesquisa@@Base>
   10b94:	mov	r1, r0
   10b98:	ldr	r0, [pc, #228]	; 10c84 <main@@Base+0x150>
   10b9c:	bl	10a68 <printf@plt>
   10ba0:	mov	r0, r4
   10ba4:	bl	11220 <vetor_ordena@@Base>
   10ba8:	cmp	r0, #0
   10bac:	bne	10c68 <main@@Base+0x134>
   10bb0:	mov	r0, r4
   10bb4:	bl	10d90 <vetor_imprime@@Base>
   10bb8:	ldr	r1, [pc, #200]	; 10c88 <main@@Base+0x154>
   10bbc:	mov	r0, r4
   10bc0:	mov	r6, #0
   10bc4:	bl	10dd4 <vetor_num_ocorrencias@@Base>
   10bc8:	mov	r1, r0
   10bcc:	ldr	r0, [pc, #184]	; 10c8c <main@@Base+0x158>
   10bd0:	bl	10a68 <printf@plt>
   10bd4:	mov	r0, r4
   10bd8:	bl	10e24 <vetor_remove_repetidas@@Base>
   10bdc:	ldr	r1, [r4]
   10be0:	ldr	r0, [pc, #168]	; 10c90 <main@@Base+0x15c>
   10be4:	sub	r1, r1, #1
   10be8:	bl	10a68 <printf@plt>
   10bec:	ldr	r1, [pc, #160]	; 10c94 <main@@Base+0x160>
   10bf0:	mov	r0, r4
   10bf4:	bl	10ec4 <vetor_pesquisa_parcial@@Base>
   10bf8:	mov	r5, r0
   10bfc:	bl	10d90 <vetor_imprime@@Base>
   10c00:	mov	r0, r5
   10c04:	bl	10f6c <vetor_apaga@@Base>
   10c08:	mov	r0, r4
   10c0c:	bl	10f6c <vetor_apaga@@Base>
   10c10:	mov	r0, r7
   10c14:	bl	10b1c <fclose@plt>
   10c18:	b	10c54 <main@@Base+0x120>
   10c1c:	add	r0, sp, #4
   10c20:	bl	10af8 <strlen@plt>
   10c24:	add	r3, sp, #104	; 0x68
   10c28:	mov	r2, r5
   10c2c:	add	r0, r3, r0
   10c30:	add	r1, sp, #4
   10c34:	strb	r8, [r0, #-101]	; 0xffffff9b
   10c38:	mov	r0, r4
   10c3c:	bl	1108c <vetor_insere@@Base>
   10c40:	cmn	r0, #1
   10c44:	mov	r6, r0
   10c48:	bne	10c60 <main@@Base+0x12c>
   10c4c:	ldr	r0, [pc, #68]	; 10c98 <main@@Base+0x164>
   10c50:	bl	10ac8 <puts@plt>
   10c54:	mov	r0, r6
   10c58:	add	sp, sp, #104	; 0x68
   10c5c:	pop	{r4, r5, r6, r7, r8, pc}
   10c60:	add	r5, r5, #1
   10c64:	b	10b5c <main@@Base+0x28>
   10c68:	ldr	r0, [pc, #44]	; 10c9c <main@@Base+0x168>
   10c6c:	bl	10ac8 <puts@plt>
   10c70:	b	10bb8 <main@@Base+0x84>
   10c74:	andeq	r1, r1, pc, ror r5
   10c78:	muleq	r1, r5, r4
   10c7c:	ldrdeq	r1, [r1], -r8
   10c80:	strdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   10c84:	andeq	r1, r1, r4, lsl r5
   10c88:	andeq	r1, r1, r1, lsl #11
   10c8c:	muleq	r1, r4, r5
   10c90:	andeq	r1, r1, ip, asr #11
   10c94:	andeq	r1, r1, r9, lsl #12
   10c98:	andeq	r1, r1, fp, lsr #9
   10c9c:	andeq	r1, r1, fp, asr r5

00010ca0 <_start@@Base>:
   10ca0:	mov	fp, #0
   10ca4:	mov	lr, #0
   10ca8:	pop	{r1}		; (ldr r1, [sp], #4)
   10cac:	mov	r2, sp
   10cb0:	push	{r2}		; (str r2, [sp, #-4]!)
   10cb4:	push	{r0}		; (str r0, [sp, #-4]!)
   10cb8:	ldr	ip, [pc, #16]	; 10cd0 <_start@@Base+0x30>
   10cbc:	push	{ip}		; (str ip, [sp, #-4]!)
   10cc0:	ldr	r0, [pc, #12]	; 10cd4 <_start@@Base+0x34>
   10cc4:	ldr	r3, [pc, #12]	; 10cd8 <_start@@Base+0x38>
   10cc8:	bl	10ae0 <__libc_start_main@plt>
   10ccc:	bl	10b28 <abort@plt>
   10cd0:	andeq	r1, r1, r4, lsl r4
   10cd4:	andeq	r0, r1, r4, lsr fp
   10cd8:			; <UNDEFINED> instruction: 0x000113b4
   10cdc:	ldr	r3, [pc, #20]	; 10cf8 <_start@@Base+0x58>
   10ce0:	ldr	r2, [pc, #20]	; 10cfc <_start@@Base+0x5c>
   10ce4:	add	r3, pc, r3
   10ce8:	ldr	r2, [r3, r2]
   10cec:	cmp	r2, #0
   10cf0:	bxeq	lr
   10cf4:	b	10aec <__gmon_start__@plt>
   10cf8:	andeq	r1, r1, r4, lsl r3
   10cfc:	andeq	r0, r0, ip, asr r0
   10d00:	ldr	r0, [pc, #24]	; 10d20 <_start@@Base+0x80>
   10d04:	ldr	r3, [pc, #24]	; 10d24 <_start@@Base+0x84>
   10d08:	cmp	r3, r0
   10d0c:	bxeq	lr
   10d10:	ldr	r3, [pc, #16]	; 10d28 <_start@@Base+0x88>
   10d14:	cmp	r3, #0
   10d18:	bxeq	lr
   10d1c:	bx	r3
   10d20:	andeq	r2, r2, r8, rrx
   10d24:	andeq	r2, r2, r8, rrx
   10d28:	andeq	r0, r0, r0
   10d2c:	ldr	r0, [pc, #36]	; 10d58 <_start@@Base+0xb8>
   10d30:	ldr	r1, [pc, #36]	; 10d5c <_start@@Base+0xbc>
   10d34:	sub	r1, r1, r0
   10d38:	asr	r1, r1, #2
   10d3c:	add	r1, r1, r1, lsr #31
   10d40:	asrs	r1, r1, #1
   10d44:	bxeq	lr
   10d48:	ldr	r3, [pc, #16]	; 10d60 <_start@@Base+0xc0>
   10d4c:	cmp	r3, #0
   10d50:	bxeq	lr
   10d54:	bx	r3
   10d58:	andeq	r2, r2, r8, rrx
   10d5c:	andeq	r2, r2, r8, rrx
   10d60:	andeq	r0, r0, r0
   10d64:	push	{r4, lr}
   10d68:	ldr	r4, [pc, #24]	; 10d88 <_start@@Base+0xe8>
   10d6c:	ldrb	r3, [r4]
   10d70:	cmp	r3, #0
   10d74:	popne	{r4, pc}
   10d78:	bl	10d00 <_start@@Base+0x60>
   10d7c:	mov	r3, #1
   10d80:	strb	r3, [r4]
   10d84:	pop	{r4, pc}
   10d88:	andeq	r2, r2, r8, rrx
   10d8c:	b	10d2c <_start@@Base+0x8c>

00010d90 <vetor_imprime@@Base>:
   10d90:	push	{r4, r5, r6, r7, r8, lr}
   10d94:	mov	r5, r0
   10d98:	mov	r4, #0
   10d9c:	ldr	r7, [pc, #44]	; 10dd0 <vetor_imprime@@Base+0x40>
   10da0:	ldr	r6, [r0]
   10da4:	cmp	r4, r6
   10da8:	popge	{r4, r5, r6, r7, r8, pc}
   10dac:	mov	r1, r4
   10db0:	mov	r0, r5
   10db4:	bl	11058 <vetor_elemento@@Base>
   10db8:	mov	r2, r0
   10dbc:	mov	r1, r4
   10dc0:	mov	r0, r7
   10dc4:	add	r4, r4, #1
   10dc8:	bl	10a68 <printf@plt>
   10dcc:	b	10da4 <vetor_imprime@@Base+0x14>
   10dd0:	andeq	r1, r1, r4, lsr #8

00010dd4 <vetor_num_ocorrencias@@Base>:
   10dd4:	push	{r4, r5, r6, r7, r8, lr}
   10dd8:	mov	r4, #0
   10ddc:	mov	r6, r0
   10de0:	mov	r8, r1
   10de4:	mov	r5, r4
   10de8:	ldr	r7, [r0]
   10dec:	cmp	r4, r7
   10df0:	blt	10dfc <vetor_num_ocorrencias@@Base+0x28>
   10df4:	mov	r0, r5
   10df8:	pop	{r4, r5, r6, r7, r8, pc}
   10dfc:	mov	r1, r4
   10e00:	mov	r0, r6
   10e04:	bl	11058 <vetor_elemento@@Base>
   10e08:	mov	r1, r0
   10e0c:	mov	r0, r8
   10e10:	bl	10a5c <strcmp@plt>
   10e14:	cmp	r0, #0
   10e18:	add	r4, r4, #1
   10e1c:	addeq	r5, r5, #1
   10e20:	b	10dec <vetor_num_ocorrencias@@Base+0x18>

00010e24 <vetor_remove_repetidas@@Base>:
   10e24:	push	{r4, r5, r6, r7, lr}
   10e28:	mov	r6, r0
   10e2c:	sub	sp, sp, #108	; 0x6c
   10e30:	mov	r5, #0
   10e34:	ldr	r7, [pc, #132]	; 10ec0 <vetor_remove_repetidas@@Base+0x9c>
   10e38:	ldr	r3, [r6]
   10e3c:	cmp	r3, r5
   10e40:	bgt	10e4c <vetor_remove_repetidas@@Base+0x28>
   10e44:	add	sp, sp, #108	; 0x6c
   10e48:	pop	{r4, r5, r6, r7, pc}
   10e4c:	mov	r1, r5
   10e50:	mov	r0, r6
   10e54:	bl	11058 <vetor_elemento@@Base>
   10e58:	add	r5, r5, #1
   10e5c:	mov	r1, r0
   10e60:	mov	r4, r5
   10e64:	add	r0, sp, #4
   10e68:	bl	10abc <strcpy@plt>
   10e6c:	ldr	r3, [r6]
   10e70:	cmp	r3, r4
   10e74:	ble	10e38 <vetor_remove_repetidas@@Base+0x14>
   10e78:	mov	r1, r4
   10e7c:	mov	r0, r6
   10e80:	bl	11058 <vetor_elemento@@Base>
   10e84:	mov	r1, r0
   10e88:	add	r0, sp, #4
   10e8c:	bl	10a5c <strcmp@plt>
   10e90:	cmp	r0, #0
   10e94:	bne	10eb8 <vetor_remove_repetidas@@Base+0x94>
   10e98:	mov	r1, r4
   10e9c:	mov	r0, r6
   10ea0:	bl	1115c <vetor_remove@@Base>
   10ea4:	cmn	r0, #1
   10ea8:	subne	r4, r4, #1
   10eac:	bne	10eb8 <vetor_remove_repetidas@@Base+0x94>
   10eb0:	mov	r0, r7
   10eb4:	bl	10ac8 <puts@plt>
   10eb8:	add	r4, r4, #1
   10ebc:	b	10e6c <vetor_remove_repetidas@@Base+0x48>
   10ec0:	andeq	r1, r1, r1, lsr r4

00010ec4 <vetor_pesquisa_parcial@@Base>:
   10ec4:	push	{r4, r5, r6, r7, r8, lr}
   10ec8:	mov	r5, r0
   10ecc:	mov	r7, r1
   10ed0:	mov	r4, #0
   10ed4:	ldr	r8, [pc, #104]	; 10f44 <vetor_pesquisa_parcial@@Base+0x80>
   10ed8:	bl	10f48 <vetor_novo@@Base>
   10edc:	mov	r6, r0
   10ee0:	ldr	r3, [r5]
   10ee4:	cmp	r3, r4
   10ee8:	bgt	10ef4 <vetor_pesquisa_parcial@@Base+0x30>
   10eec:	mov	r0, r6
   10ef0:	pop	{r4, r5, r6, r7, r8, pc}
   10ef4:	mov	r1, r4
   10ef8:	mov	r0, r5
   10efc:	bl	11058 <vetor_elemento@@Base>
   10f00:	mov	r1, r7
   10f04:	bl	10a50 <strstr@plt>
   10f08:	cmp	r0, #0
   10f0c:	beq	10f3c <vetor_pesquisa_parcial@@Base+0x78>
   10f10:	mov	r1, r4
   10f14:	mov	r0, r5
   10f18:	bl	11058 <vetor_elemento@@Base>
   10f1c:	mov	r1, r0
   10f20:	mov	r2, #0
   10f24:	mov	r0, r6
   10f28:	bl	1108c <vetor_insere@@Base>
   10f2c:	cmn	r0, #1
   10f30:	bne	10f3c <vetor_pesquisa_parcial@@Base+0x78>
   10f34:	mov	r0, r8
   10f38:	bl	10ac8 <puts@plt>
   10f3c:	add	r4, r4, #1
   10f40:	b	10ee0 <vetor_pesquisa_parcial@@Base+0x1c>
   10f44:	andeq	r1, r1, fp, asr r4

00010f48 <vetor_novo@@Base>:
   10f48:	push	{r4, lr}
   10f4c:	mov	r0, #12
   10f50:	bl	10ad4 <malloc@plt>
   10f54:	cmp	r0, #0
   10f58:	movne	r3, #0
   10f5c:	strne	r3, [r0]
   10f60:	strne	r3, [r0, #4]
   10f64:	strne	r3, [r0, #8]
   10f68:	pop	{r4, pc}

00010f6c <vetor_apaga@@Base>:
   10f6c:	push	{r4, r5, r6, lr}
   10f70:	subs	r4, r0, #0
   10f74:	movne	r5, #0
   10f78:	popeq	{r4, r5, r6, pc}
   10f7c:	ldr	r3, [r4]
   10f80:	ldr	r0, [r4, #8]
   10f84:	cmp	r3, r5
   10f88:	bgt	10f9c <vetor_apaga@@Base+0x30>
   10f8c:	bl	10a80 <free@plt>
   10f90:	mov	r0, r4
   10f94:	pop	{r4, r5, r6, lr}
   10f98:	b	10a80 <free@plt>
   10f9c:	ldr	r0, [r0, r5, lsl #2]
   10fa0:	add	r5, r5, #1
   10fa4:	bl	10a80 <free@plt>
   10fa8:	b	10f7c <vetor_apaga@@Base+0x10>

00010fac <vetor_atribui@@Base>:
   10fac:	cmp	r0, #0
   10fb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10fb4:	lsrne	r3, r1, #31
   10fb8:	moveq	r3, #1
   10fbc:	cmp	r3, #0
   10fc0:	beq	10fd0 <vetor_atribui@@Base+0x24>
   10fc4:	mvn	r4, #0
   10fc8:	mov	r0, r4
   10fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10fd0:	ldr	r3, [r0]
   10fd4:	mov	r4, r1
   10fd8:	mov	r5, r0
   10fdc:	cmp	r3, r1
   10fe0:	ble	10fc4 <vetor_atribui@@Base+0x18>
   10fe4:	mov	r0, r2
   10fe8:	mov	r9, r2
   10fec:	lsl	sl, r4, #2
   10ff0:	bl	10af8 <strlen@plt>
   10ff4:	ldr	r6, [r5, #8]
   10ff8:	mov	r8, r0
   10ffc:	ldr	r7, [r6, r4, lsl #2]
   11000:	mov	r0, r7
   11004:	bl	10af8 <strlen@plt>
   11008:	cmp	r0, r8
   1100c:	bcc	11024 <vetor_atribui@@Base+0x78>
   11010:	ldr	r3, [r5, #8]
   11014:	mov	r1, r9
   11018:	ldr	r0, [r3, sl]
   1101c:	bl	10abc <strcpy@plt>
   11020:	b	10fc8 <vetor_atribui@@Base+0x1c>
   11024:	add	r1, r8, #1
   11028:	mov	r0, r7
   1102c:	bl	10aa4 <realloc@plt>
   11030:	ldr	r3, [r5, #8]
   11034:	str	r0, [r6, r4, lsl #2]
   11038:	ldr	r3, [r3, r4, lsl #2]
   1103c:	cmp	r3, #0
   11040:	bne	11010 <vetor_atribui@@Base+0x64>
   11044:	b	10fc4 <vetor_atribui@@Base+0x18>

00011048 <vetor_tamanho@@Base>:
   11048:	cmp	r0, #0
   1104c:	ldrne	r0, [r0]
   11050:	mvneq	r0, #0
   11054:	bx	lr

00011058 <vetor_elemento@@Base>:
   11058:	cmp	r0, #0
   1105c:	lsrne	r3, r1, #31
   11060:	moveq	r3, #1
   11064:	cmp	r3, #0
   11068:	bne	11084 <vetor_elemento@@Base+0x2c>
   1106c:	ldr	r2, [r0]
   11070:	cmp	r2, r1
   11074:	ble	11084 <vetor_elemento@@Base+0x2c>
   11078:	ldr	r3, [r0, #8]
   1107c:	ldr	r0, [r3, r1, lsl #2]
   11080:	bx	lr
   11084:	mov	r0, #0
   11088:	bx	lr

0001108c <vetor_insere@@Base>:
   1108c:	cmp	r0, #0
   11090:	push	{r4, r5, r6, r7, r8, lr}
   11094:	lsrne	r3, r2, #31
   11098:	moveq	r3, #1
   1109c:	cmp	r3, #0
   110a0:	beq	110b0 <vetor_insere@@Base+0x24>
   110a4:	mvn	r5, #0
   110a8:	mov	r0, r5
   110ac:	pop	{r4, r5, r6, r7, r8, pc}
   110b0:	mov	r8, r1
   110b4:	ldr	r1, [r0]
   110b8:	mov	r5, r2
   110bc:	mov	r4, r0
   110c0:	cmp	r1, r2
   110c4:	blt	110a4 <vetor_insere@@Base+0x18>
   110c8:	ldr	r3, [r0, #4]
   110cc:	cmp	r1, r3
   110d0:	beq	1111c <vetor_insere@@Base+0x90>
   110d4:	ldr	r6, [r4]
   110d8:	sub	r3, r6, #1
   110dc:	cmp	r3, r5
   110e0:	ldr	r7, [r4, #8]
   110e4:	bge	11148 <vetor_insere@@Base+0xbc>
   110e8:	mov	r0, r8
   110ec:	bl	10af8 <strlen@plt>
   110f0:	mov	r1, #1
   110f4:	add	r0, r0, r1
   110f8:	bl	10a44 <calloc@plt>
   110fc:	cmp	r0, #0
   11100:	str	r0, [r7, r5, lsl #2]
   11104:	beq	110a4 <vetor_insere@@Base+0x18>
   11108:	add	r6, r6, #1
   1110c:	mov	r1, r8
   11110:	bl	10abc <strcpy@plt>
   11114:	str	r6, [r4]
   11118:	b	110a8 <vetor_insere@@Base+0x1c>
   1111c:	cmp	r1, #0
   11120:	ldr	r0, [r0, #8]
   11124:	lslne	r1, r1, #1
   11128:	moveq	r1, #1
   1112c:	str	r1, [r4, #4]
   11130:	lsl	r1, r1, #2
   11134:	bl	10aa4 <realloc@plt>
   11138:	cmp	r0, #0
   1113c:	str	r0, [r4, #8]
   11140:	bne	110d4 <vetor_insere@@Base+0x48>
   11144:	b	110a4 <vetor_insere@@Base+0x18>
   11148:	ldr	r1, [r7, r3, lsl #2]
   1114c:	add	r2, r7, r3, lsl #2
   11150:	sub	r3, r3, #1
   11154:	str	r1, [r2, #4]
   11158:	b	110dc <vetor_insere@@Base+0x50>

0001115c <vetor_remove@@Base>:
   1115c:	cmp	r0, #0
   11160:	lsrne	r3, r1, #31
   11164:	moveq	r3, #1
   11168:	cmp	r3, #0
   1116c:	bne	111cc <vetor_remove@@Base+0x70>
   11170:	ldr	r3, [r0]
   11174:	cmp	r3, r1
   11178:	ble	111cc <vetor_remove@@Base+0x70>
   1117c:	ldr	r3, [r0, #8]
   11180:	push	{r4, r5, r6, lr}
   11184:	mov	r4, r1
   11188:	mov	r5, r0
   1118c:	ldr	r0, [r3, r1, lsl #2]
   11190:	bl	10a80 <free@plt>
   11194:	add	r1, r4, #1
   11198:	ldr	r3, [r5]
   1119c:	cmp	r3, r1
   111a0:	bgt	111b4 <vetor_remove@@Base+0x58>
   111a4:	sub	r3, r3, #1
   111a8:	mov	r0, #0
   111ac:	str	r3, [r5]
   111b0:	pop	{r4, r5, r6, pc}
   111b4:	ldr	r3, [r5, #8]
   111b8:	add	r2, r3, r1, lsl #2
   111bc:	ldr	r3, [r3, r1, lsl #2]
   111c0:	add	r1, r1, #1
   111c4:	str	r3, [r2, #-4]
   111c8:	b	11198 <vetor_remove@@Base+0x3c>
   111cc:	mvn	r0, #0
   111d0:	bx	lr

000111d4 <vetor_pesquisa@@Base>:
   111d4:	push	{r4, r5, r6, r7, r8, lr}
   111d8:	subs	r5, r0, #0
   111dc:	movne	r6, r1
   111e0:	movne	r4, #0
   111e4:	ldrne	r7, [r5]
   111e8:	bne	11214 <vetor_pesquisa@@Base+0x40>
   111ec:	mvn	r4, #0
   111f0:	mov	r0, r4
   111f4:	pop	{r4, r5, r6, r7, r8, pc}
   111f8:	ldr	r3, [r5, #8]
   111fc:	mov	r1, r6
   11200:	ldr	r0, [r3, r4, lsl #2]
   11204:	bl	10a5c <strcmp@plt>
   11208:	cmp	r0, #0
   1120c:	beq	111f0 <vetor_pesquisa@@Base+0x1c>
   11210:	add	r4, r4, #1
   11214:	cmp	r7, r4
   11218:	bgt	111f8 <vetor_pesquisa@@Base+0x24>
   1121c:	b	111ec <vetor_pesquisa@@Base+0x18>

00011220 <vetor_ordena@@Base>:
   11220:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11224:	subs	r5, r0, #0
   11228:	movne	r4, #1
   1122c:	bne	11274 <vetor_ordena@@Base+0x54>
   11230:	mvn	r0, #0
   11234:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11238:	ldr	r8, [r5, #8]
   1123c:	mov	r6, r4
   11240:	ldr	r9, [r8, r4, lsl #2]
   11244:	add	r7, r8, r4, lsl #2
   11248:	mov	r0, r9
   1124c:	ldr	r1, [r7, #-4]
   11250:	bl	10a5c <strcmp@plt>
   11254:	cmp	r0, #0
   11258:	bge	1126c <vetor_ordena@@Base+0x4c>
   1125c:	ldr	r3, [r7, #-4]
   11260:	subs	r6, r6, #1
   11264:	str	r3, [r7], #-4
   11268:	bne	11248 <vetor_ordena@@Base+0x28>
   1126c:	add	r4, r4, #1
   11270:	str	r9, [r8, r6, lsl #2]
   11274:	ldr	r3, [r5]
   11278:	cmp	r3, r4
   1127c:	bgt	11238 <vetor_ordena@@Base+0x18>
   11280:	mov	r0, #0
   11284:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011288 <vetor_concatena@@Base>:
   11288:	cmp	r1, #0
   1128c:	cmpne	r0, #0
   11290:	push	{r4, r5, r6, lr}
   11294:	moveq	r6, #0
   11298:	beq	112ec <vetor_concatena@@Base+0x64>
   1129c:	mov	r5, r0
   112a0:	mov	r4, r1
   112a4:	bl	10f48 <vetor_novo@@Base>
   112a8:	mov	r6, r0
   112ac:	ldr	r2, [r5]
   112b0:	ldrd	r0, [r4]
   112b4:	add	r3, r2, r0, lsl #2
   112b8:	ldr	r0, [r2, r0, lsl #2]
   112bc:	str	r3, [r6, #8]
   112c0:	ldr	r3, [r5, #4]
   112c4:	add	r3, r3, r1
   112c8:	str	r3, [r6, #4]
   112cc:	ldr	r3, [r5, #8]
   112d0:	ldr	r1, [r3]
   112d4:	bl	10abc <strcpy@plt>
   112d8:	ldr	r2, [r4, #8]
   112dc:	ldr	r3, [r6, #8]
   112e0:	ldr	r1, [r2]
   112e4:	ldr	r0, [r3]
   112e8:	bl	10ab0 <strcat@plt>
   112ec:	mov	r0, r6
   112f0:	pop	{r4, r5, r6, pc}

000112f4 <vetor_inverte@@Base>:
   112f4:	cmp	r0, #0
   112f8:	beq	1134c <vetor_inverte@@Base+0x58>
   112fc:	ldr	r1, [r0]
   11300:	cmp	r1, #0
   11304:	ble	1134c <vetor_inverte@@Base+0x58>
   11308:	mov	r3, r1
   1130c:	mov	r2, #0
   11310:	push	{r4, lr}
   11314:	ldr	ip, [r0, #8]
   11318:	ldr	lr, [ip, r2, lsl #2]
   1131c:	ldr	r4, [ip, r3, lsl #2]
   11320:	str	r4, [ip, r2, lsl #2]
   11324:	add	r2, r2, #1
   11328:	str	lr, [ip, r3, lsl #2]
   1132c:	sub	r3, r3, #1
   11330:	cmp	r1, r3
   11334:	movlt	ip, r1
   11338:	movge	ip, r3
   1133c:	cmp	r2, ip
   11340:	blt	11314 <vetor_inverte@@Base+0x20>
   11344:	mov	r0, #0
   11348:	pop	{r4, pc}
   1134c:	mov	r0, #0
   11350:	bx	lr

00011354 <vetor_baralha@@Base>:
   11354:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   11358:	mov	r4, #0
   1135c:	ldr	r6, [r0]
   11360:	bl	10f48 <vetor_novo@@Base>
   11364:	mov	r5, r0
   11368:	add	r0, sp, #4
   1136c:	bl	10a98 <time@plt>
   11370:	bl	10b04 <srand@plt>
   11374:	add	r7, r6, #1
   11378:	cmp	r4, r6
   1137c:	blt	1138c <vetor_baralha@@Base+0x38>
   11380:	mov	r0, r5
   11384:	add	sp, sp, #12
   11388:	pop	{r4, r5, r6, r7, pc}
   1138c:	bl	10b10 <rand@plt>
   11390:	sdiv	r2, r0, r7
   11394:	ldr	r3, [r5, #8]
   11398:	ldr	r1, [r3, r4, lsl #2]
   1139c:	mls	r0, r2, r7, r0
   113a0:	ldr	r2, [r3, r0, lsl #2]
   113a4:	str	r2, [r3, r4, lsl #2]
   113a8:	add	r4, r4, #1
   113ac:	str	r1, [r3, r0, lsl #2]
   113b0:	b	11378 <vetor_baralha@@Base+0x24>

000113b4 <__libc_csu_init@@Base>:
   113b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   113b8:	mov	r7, r0
   113bc:	ldr	r6, [pc, #72]	; 1140c <__libc_csu_init@@Base+0x58>
   113c0:	ldr	r5, [pc, #72]	; 11410 <__libc_csu_init@@Base+0x5c>
   113c4:	add	r6, pc, r6
   113c8:	add	r5, pc, r5
   113cc:	sub	r6, r6, r5
   113d0:	mov	r8, r1
   113d4:	mov	r9, r2
   113d8:	bl	10a24 <calloc@plt-0x20>
   113dc:	asrs	r6, r6, #2
   113e0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   113e4:	mov	r4, #0
   113e8:	add	r4, r4, #1
   113ec:	ldr	r3, [r5], #4
   113f0:	mov	r2, r9
   113f4:	mov	r1, r8
   113f8:	mov	r0, r7
   113fc:	blx	r3
   11400:	cmp	r6, r4
   11404:	bne	113e8 <__libc_csu_init@@Base+0x34>
   11408:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1140c:	andeq	r0, r1, r8, asr #22
   11410:	andeq	r0, r1, r0, asr #22

00011414 <__libc_csu_fini@@Base>:
   11414:	bx	lr

Disassembly of section .fini:

00011418 <.fini>:
   11418:	push	{r3, lr}
   1141c:	pop	{r3, pc}
