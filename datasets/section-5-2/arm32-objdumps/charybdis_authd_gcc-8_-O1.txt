
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

000111e0 <.init>:
   111e0:	push	{r3, lr}
   111e4:	bl	11620 <sprintf@plt+0x48>
   111e8:	pop	{r3, pc}

Disassembly of section .plt:

000111ec <sigemptyset@plt-0x14>:
   111ec:	push	{lr}		; (str lr, [sp, #-4]!)
   111f0:	ldr	lr, [pc, #4]	; 111fc <sigemptyset@plt-0x4>
   111f4:	add	lr, pc, lr
   111f8:	ldr	pc, [lr, #8]!
   111fc:	andeq	r9, r1, r4, lsl #28

00011200 <sigemptyset@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #102400	; 0x19000
   11208:	ldr	pc, [ip, #3588]!	; 0xe04

0001120c <strerror@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #102400	; 0x19000
   11214:	ldr	pc, [ip, #3580]!	; 0xdfc

00011218 <rb_helper_loop@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #102400	; 0x19000
   11220:	ldr	pc, [ip, #3572]!	; 0xdf4

00011224 <abort@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #102400	; 0x19000
   1122c:	ldr	pc, [ip, #3564]!	; 0xdec

00011230 <rb_event_addish@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #102400	; 0x19000
   11238:	ldr	pc, [ip, #3556]!	; 0xde4

0001123c <getsockname@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #102400	; 0x19000
   11244:	ldr	pc, [ip, #3548]!	; 0xddc

00011248 <rb_ignore_errno@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #102400	; 0x19000
   11250:	ldr	pc, [ip, #3540]!	; 0xdd4

00011254 <rb_connect_tcp_ssl@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #102400	; 0x19000
   1125c:	ldr	pc, [ip, #3532]!	; 0xdcc

00011260 <rb_connect_tcp@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #102400	; 0x19000
   11268:	ldr	pc, [ip, #3524]!	; 0xdc4

0001126c <memcmp@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #102400	; 0x19000
   11274:	ldr	pc, [ip, #3516]!	; 0xdbc

00011278 <__libc_start_main@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #102400	; 0x19000
   11280:	ldr	pc, [ip, #3508]!	; 0xdb4

00011284 <rb_event_delete@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #102400	; 0x19000
   1128c:	ldr	pc, [ip, #3500]!	; 0xdac

00011290 <rb_setselect@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #102400	; 0x19000
   11298:	ldr	pc, [ip, #3492]!	; 0xda4

0001129c <rb_get_fd@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #102400	; 0x19000
   112a4:	ldr	pc, [ip, #3484]!	; 0xd9c

000112a8 <__gmon_start__@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #102400	; 0x19000
   112b0:	ldr	pc, [ip, #3476]!	; 0xd94

000112b4 <vsnprintf@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #102400	; 0x19000
   112bc:	ldr	pc, [ip, #3468]!	; 0xd8c

000112c0 <rb_socket@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #102400	; 0x19000
   112c8:	ldr	pc, [ip, #3460]!	; 0xd84

000112cc <fclose@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #102400	; 0x19000
   112d4:	ldr	pc, [ip, #3452]!	; 0xd7c

000112d8 <fgets@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #102400	; 0x19000
   112e0:	ldr	pc, [ip, #3444]!	; 0xd74

000112e4 <rb_strtok_r@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #102400	; 0x19000
   112ec:	ldr	pc, [ip, #3436]!	; 0xd6c

000112f0 <strchr@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #102400	; 0x19000
   112f8:	ldr	pc, [ip, #3428]!	; 0xd64

000112fc <rb_dictionary_foreach_cur@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #102400	; 0x19000
   11304:	ldr	pc, [ip, #3420]!	; 0xd5c

00011308 <strcasecmp@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #102400	; 0x19000
   11310:	ldr	pc, [ip, #3412]!	; 0xd54

00011314 <calloc@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #102400	; 0x19000
   1131c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011320 <rb_helper_child@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #102400	; 0x19000
   11328:	ldr	pc, [ip, #3396]!	; 0xd44

0001132c <sendto@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #102400	; 0x19000
   11334:	ldr	pc, [ip, #3388]!	; 0xd3c

00011338 <fopen@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #102400	; 0x19000
   11340:	ldr	pc, [ip, #3380]!	; 0xd34

00011344 <memset@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #102400	; 0x19000
   1134c:	ldr	pc, [ip, #3372]!	; 0xd2c

00011350 <freeaddrinfo@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #102400	; 0x19000
   11358:	ldr	pc, [ip, #3364]!	; 0xd24

0001135c <strrchr@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #102400	; 0x19000
   11364:	ldr	pc, [ip, #3356]!	; 0xd1c

00011368 <rb_write@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #102400	; 0x19000
   11370:	ldr	pc, [ip, #3348]!	; 0xd14

00011374 <__assert_fail@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #102400	; 0x19000
   1137c:	ldr	pc, [ip, #3340]!	; 0xd0c

00011380 <rb_strlcpy@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #102400	; 0x19000
   11388:	ldr	pc, [ip, #3332]!	; 0xd04

0001138c <strtoull@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #102400	; 0x19000
   11394:	ldr	pc, [ip, #3324]!	; 0xcfc

00011398 <rb_dictionary_foreach_next@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #102400	; 0x19000
   113a0:	ldr	pc, [ip, #3316]!	; 0xcf4

000113a4 <free@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #102400	; 0x19000
   113ac:	ldr	pc, [ip, #3308]!	; 0xcec

000113b0 <rb_string_to_array@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #102400	; 0x19000
   113b8:	ldr	pc, [ip, #3300]!	; 0xce4

000113bc <rb_read@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #102400	; 0x19000
   113c4:	ldr	pc, [ip, #3292]!	; 0xcdc

000113c8 <rb_strcasecmp@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #102400	; 0x19000
   113d0:	ldr	pc, [ip, #3284]!	; 0xcd4

000113d4 <getaddrinfo@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #102400	; 0x19000
   113dc:	ldr	pc, [ip, #3276]!	; 0xccc

000113e0 <rb_dictionary_foreach_start@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #102400	; 0x19000
   113e8:	ldr	pc, [ip, #3268]!	; 0xcc4

000113ec <rb_inet_pton_sock@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #102400	; 0x19000
   113f4:	ldr	pc, [ip, #3260]!	; 0xcbc

000113f8 <strlen@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #102400	; 0x19000
   11400:	ldr	pc, [ip, #3252]!	; 0xcb4

00011404 <rb_current_time@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #102400	; 0x19000
   1140c:	ldr	pc, [ip, #3244]!	; 0xcac

00011410 <rb_dictionary_delete@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #102400	; 0x19000
   11418:	ldr	pc, [ip, #3236]!	; 0xca4

0001141c <memcpy@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #102400	; 0x19000
   11424:	ldr	pc, [ip, #3228]!	; 0xc9c

00011428 <rb_free_rb_dlink_node@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #102400	; 0x19000
   11430:	ldr	pc, [ip, #3220]!	; 0xc94

00011434 <rb_close@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #102400	; 0x19000
   1143c:	ldr	pc, [ip, #3212]!	; 0xc8c

00011440 <strtol@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #102400	; 0x19000
   11448:	ldr	pc, [ip, #3204]!	; 0xc84

0001144c <sigaddset@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #102400	; 0x19000
   11454:	ldr	pc, [ip, #3196]!	; 0xc7c

00011458 <strcpy@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #102400	; 0x19000
   11460:	ldr	pc, [ip, #3188]!	; 0xc74

00011464 <rb_dictionary_destroy@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #102400	; 0x19000
   1146c:	ldr	pc, [ip, #3180]!	; 0xc6c

00011470 <bind@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #102400	; 0x19000
   11478:	ldr	pc, [ip, #3172]!	; 0xc64

0001147c <strstr@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #102400	; 0x19000
   11484:	ldr	pc, [ip, #3164]!	; 0xc5c

00011488 <fwrite@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #102400	; 0x19000
   11490:	ldr	pc, [ip, #3156]!	; 0xc54

00011494 <rb_init_prng@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #102400	; 0x19000
   1149c:	ldr	pc, [ip, #3148]!	; 0xc4c

000114a0 <rb_dictionary_retrieve@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #102400	; 0x19000
   114a8:	ldr	pc, [ip, #3140]!	; 0xc44

000114ac <rb_outofmemory@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #102400	; 0x19000
   114b4:	ldr	pc, [ip, #3132]!	; 0xc3c

000114b8 <__ctype_b_loc@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #102400	; 0x19000
   114c0:	ldr	pc, [ip, #3124]!	; 0xc34

000114c4 <rb_dictionary_add@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #102400	; 0x19000
   114cc:	ldr	pc, [ip, #3116]!	; 0xc2c

000114d0 <rb_set_time@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #102400	; 0x19000
   114d8:	ldr	pc, [ip, #3108]!	; 0xc24

000114dc <malloc@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #102400	; 0x19000
   114e4:	ldr	pc, [ip, #3100]!	; 0xc1c

000114e8 <sigaction@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #102400	; 0x19000
   114f0:	ldr	pc, [ip, #3092]!	; 0xc14

000114f4 <rb_helper_read@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #102400	; 0x19000
   114fc:	ldr	pc, [ip, #3084]!	; 0xc0c

00011500 <rb_inet_ntop_sock@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #102400	; 0x19000
   11508:	ldr	pc, [ip, #3076]!	; 0xc04

0001150c <rb_dictionary_find@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #102400	; 0x19000
   11514:	ldr	pc, [ip, #3068]!	; 0xbfc

00011518 <rb_dictionary_create@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #102400	; 0x19000
   11520:	ldr	pc, [ip, #3060]!	; 0xbf4

00011524 <memmove@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #102400	; 0x19000
   1152c:	ldr	pc, [ip, #3052]!	; 0xbec

00011530 <rb_accept_tcp@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #102400	; 0x19000
   11538:	ldr	pc, [ip, #3044]!	; 0xbe4

0001153c <rb_helper_write@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #102400	; 0x19000
   11544:	ldr	pc, [ip, #3036]!	; 0xbdc

00011548 <rb_event_add@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #102400	; 0x19000
   11550:	ldr	pc, [ip, #3028]!	; 0xbd4

00011554 <rb_get_random@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #102400	; 0x19000
   1155c:	ldr	pc, [ip, #3020]!	; 0xbcc

00011560 <rb_make_rb_dlink_node@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #102400	; 0x19000
   11568:	ldr	pc, [ip, #3012]!	; 0xbc4

0001156c <snprintf@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #102400	; 0x19000
   11574:	ldr	pc, [ip, #3004]!	; 0xbbc

00011578 <rb_listen@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #102400	; 0x19000
   11580:	ldr	pc, [ip, #2996]!	; 0xbb4

00011584 <strncmp@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #102400	; 0x19000
   1158c:	ldr	pc, [ip, #2988]!	; 0xbac

00011590 <recvfrom@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #102400	; 0x19000
   11598:	ldr	pc, [ip, #2980]!	; 0xba4

0001159c <setsockopt@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #102400	; 0x19000
   115a4:	ldr	pc, [ip, #2972]!	; 0xb9c

000115a8 <strpbrk@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #102400	; 0x19000
   115b0:	ldr	pc, [ip, #2964]!	; 0xb94

000115b4 <strcmp@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #102400	; 0x19000
   115bc:	ldr	pc, [ip, #2956]!	; 0xb8c

000115c0 <exit@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #102400	; 0x19000
   115c8:	ldr	pc, [ip, #2948]!	; 0xb84

000115cc <__errno_location@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #102400	; 0x19000
   115d4:	ldr	pc, [ip, #2940]!	; 0xb7c

000115d8 <sprintf@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #102400	; 0x19000
   115e0:	ldr	pc, [ip, #2932]!	; 0xb74

Disassembly of section .text:

000115e4 <.text>:
   115e4:	mov	fp, #0
   115e8:	mov	lr, #0
   115ec:	pop	{r1}		; (ldr r1, [sp], #4)
   115f0:	mov	r2, sp
   115f4:	push	{r2}		; (str r2, [sp, #-4]!)
   115f8:	push	{r0}		; (str r0, [sp, #-4]!)
   115fc:	ldr	ip, [pc, #16]	; 11614 <sprintf@plt+0x3c>
   11600:	push	{ip}		; (str ip, [sp, #-4]!)
   11604:	ldr	r0, [pc, #12]	; 11618 <sprintf@plt+0x40>
   11608:	ldr	r3, [pc, #12]	; 1161c <sprintf@plt+0x44>
   1160c:	bl	11278 <__libc_start_main@plt>
   11610:	bl	11224 <abort@plt>
   11614:	muleq	r1, r8, r0
   11618:	andeq	r1, r1, ip, lsl #20
   1161c:	andeq	r9, r1, r8, lsr r0
   11620:	ldr	r3, [pc, #20]	; 1163c <sprintf@plt+0x64>
   11624:	ldr	r2, [pc, #20]	; 11640 <sprintf@plt+0x68>
   11628:	add	r3, pc, r3
   1162c:	ldr	r2, [r3, r2]
   11630:	cmp	r2, #0
   11634:	bxeq	lr
   11638:	b	112a8 <__gmon_start__@plt>
   1163c:	ldrdeq	r9, [r1], -r0
   11640:	andeq	r0, r0, r8, asr r1
   11644:	ldr	r0, [pc, #24]	; 11664 <sprintf@plt+0x8c>
   11648:	ldr	r3, [pc, #24]	; 11668 <sprintf@plt+0x90>
   1164c:	cmp	r3, r0
   11650:	bxeq	lr
   11654:	ldr	r3, [pc, #16]	; 1166c <sprintf@plt+0x94>
   11658:	cmp	r3, #0
   1165c:	bxeq	lr
   11660:	bx	r3
   11664:	andeq	fp, r2, r0, asr #30
   11668:	andeq	fp, r2, r0, asr #30
   1166c:	andeq	r0, r0, r0
   11670:	ldr	r0, [pc, #36]	; 1169c <sprintf@plt+0xc4>
   11674:	ldr	r1, [pc, #36]	; 116a0 <sprintf@plt+0xc8>
   11678:	sub	r1, r1, r0
   1167c:	asr	r1, r1, #2
   11680:	add	r1, r1, r1, lsr #31
   11684:	asrs	r1, r1, #1
   11688:	bxeq	lr
   1168c:	ldr	r3, [pc, #16]	; 116a4 <sprintf@plt+0xcc>
   11690:	cmp	r3, #0
   11694:	bxeq	lr
   11698:	bx	r3
   1169c:	andeq	fp, r2, r0, asr #30
   116a0:	andeq	fp, r2, r0, asr #30
   116a4:	andeq	r0, r0, r0
   116a8:	push	{r4, lr}
   116ac:	ldr	r4, [pc, #24]	; 116cc <sprintf@plt+0xf4>
   116b0:	ldrb	r3, [r4]
   116b4:	cmp	r3, #0
   116b8:	popne	{r4, pc}
   116bc:	bl	11644 <sprintf@plt+0x6c>
   116c0:	mov	r3, #1
   116c4:	strb	r3, [r4]
   116c8:	pop	{r4, pc}
   116cc:	andeq	fp, r2, r4, asr #30
   116d0:	b	11670 <sprintf@plt+0x98>
   116d4:	strd	r4, [sp, #-16]!
   116d8:	str	r6, [sp, #8]
   116dc:	str	lr, [sp, #12]
   116e0:	cmp	r0, #2
   116e4:	ble	11718 <sprintf@plt+0x140>
   116e8:	ldr	r3, [r1, #4]
   116ec:	ldrb	r0, [r3]
   116f0:	movw	r3, #45412	; 0xb164
   116f4:	movt	r3, #2
   116f8:	ldr	r3, [r3, r0, lsl #2]
   116fc:	cmp	r3, #0
   11700:	beq	11708 <sprintf@plt+0x130>
   11704:	blx	r3
   11708:	ldrd	r4, [sp]
   1170c:	ldr	r6, [sp, #8]
   11710:	add	sp, sp, #12
   11714:	pop	{pc}		; (ldr pc, [sp], #4)
   11718:	mov	r4, #0
   1171c:	movw	r5, #45412	; 0xb164
   11720:	movt	r5, #2
   11724:	mov	r6, r4
   11728:	b	11738 <sprintf@plt+0x160>
   1172c:	add	r4, r4, #1
   11730:	cmp	r4, #256	; 0x100
   11734:	beq	11708 <sprintf@plt+0x130>
   11738:	uxtb	r3, r4
   1173c:	ldr	r3, [r5, r3, lsl #2]
   11740:	cmp	r3, #0
   11744:	beq	1172c <sprintf@plt+0x154>
   11748:	mov	r0, r6
   1174c:	blx	r3
   11750:	b	1172c <sprintf@plt+0x154>
   11754:	bx	lr
   11758:	str	r4, [sp, #-16]!
   1175c:	strd	r6, [sp, #4]
   11760:	str	lr, [sp, #12]
   11764:	cmp	r0, #2
   11768:	ble	117d4 <sprintf@plt+0x1fc>
   1176c:	mov	r4, r1
   11770:	mov	r2, #16
   11774:	mov	r1, #0
   11778:	ldr	r0, [r4, #4]
   1177c:	bl	1138c <strtoull@plt>
   11780:	mov	r6, r0
   11784:	mvn	r2, #0
   11788:	mov	r3, #0
   1178c:	cmp	r1, r3
   11790:	cmpeq	r0, r2
   11794:	bhi	117ec <sprintf@plt+0x214>
   11798:	ldr	r3, [r4, #8]
   1179c:	ldrb	r2, [r3]
   117a0:	movw	r3, #45412	; 0xb164
   117a4:	movt	r3, #2
   117a8:	add	r3, r3, r2, lsl #2
   117ac:	ldr	r3, [r3, #1024]	; 0x400
   117b0:	cmp	r3, #0
   117b4:	beq	117c4 <sprintf@plt+0x1ec>
   117b8:	mov	r1, r2
   117bc:	mov	r0, r6
   117c0:	blx	r3
   117c4:	ldr	r4, [sp]
   117c8:	ldrd	r6, [sp, #4]
   117cc:	add	sp, sp, #12
   117d0:	pop	{pc}		; (ldr pc, [sp], #4)
   117d4:	mov	r2, r0
   117d8:	movw	r1, #37032	; 0x90a8
   117dc:	movt	r1, #1
   117e0:	mov	r0, #67	; 0x43
   117e4:	bl	122a0 <sprintf@plt+0xcc8>
   117e8:	b	117c4 <sprintf@plt+0x1ec>
   117ec:	ldr	r2, [r4, #4]
   117f0:	movw	r1, #37108	; 0x90f4
   117f4:	movt	r1, #1
   117f8:	mov	r0, #67	; 0x43
   117fc:	bl	122a0 <sprintf@plt+0xcc8>
   11800:	b	117c4 <sprintf@plt+0x1ec>
   11804:	strd	r4, [sp, #-16]!
   11808:	str	r6, [sp, #8]
   1180c:	str	lr, [sp, #12]
   11810:	mov	r4, r0
   11814:	cmp	r0, #1
   11818:	ble	11870 <sprintf@plt+0x298>
   1181c:	mov	r5, r1
   11820:	movw	r3, #364	; 0x16c
   11824:	movt	r3, #3
   11828:	ldr	r1, [r1, #4]
   1182c:	ldr	r0, [r3]
   11830:	bl	114a0 <rb_dictionary_retrieve@plt>
   11834:	cmp	r0, #0
   11838:	beq	11888 <sprintf@plt+0x2b0>
   1183c:	ldr	r2, [r0, #4]
   11840:	sub	r3, r4, #1
   11844:	cmp	r3, r2
   11848:	ble	118a0 <sprintf@plt+0x2c8>
   1184c:	ldr	r3, [r0, #8]
   11850:	add	r2, r5, #8
   11854:	sub	r1, r4, #2
   11858:	ldr	r0, [r5, #4]
   1185c:	blx	r3
   11860:	ldrd	r4, [sp]
   11864:	ldr	r6, [sp, #8]
   11868:	add	sp, sp, #12
   1186c:	pop	{pc}		; (ldr pc, [sp], #4)
   11870:	mov	r2, r0
   11874:	movw	r1, #37160	; 0x9128
   11878:	movt	r1, #1
   1187c:	mov	r0, #67	; 0x43
   11880:	bl	122a0 <sprintf@plt+0xcc8>
   11884:	b	11860 <sprintf@plt+0x288>
   11888:	ldr	r2, [r5, #4]
   1188c:	movw	r1, #37240	; 0x9178
   11890:	movt	r1, #1
   11894:	mov	r0, #67	; 0x43
   11898:	bl	122a0 <sprintf@plt+0xcc8>
   1189c:	b	11860 <sprintf@plt+0x288>
   118a0:	mov	r3, r4
   118a4:	movw	r1, #37288	; 0x91a8
   118a8:	movt	r1, #1
   118ac:	mov	r0, #67	; 0x43
   118b0:	bl	122a0 <sprintf@plt+0xcc8>
   118b4:	b	11860 <sprintf@plt+0x288>
   118b8:	str	r4, [sp, #-8]!
   118bc:	str	lr, [sp, #4]
   118c0:	mov	r0, #1
   118c4:	bl	115c0 <exit@plt>
   118c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   118cc:	strd	r6, [sp, #8]
   118d0:	str	r8, [sp, #16]
   118d4:	str	lr, [sp, #20]
   118d8:	mov	r6, r0
   118dc:	movw	r5, #49016	; 0xbf78
   118e0:	movt	r5, #2
   118e4:	movw	r4, #48968	; 0xbf48
   118e8:	movt	r4, #2
   118ec:	movw	r7, #45412	; 0xb164
   118f0:	movt	r7, #2
   118f4:	mov	r2, #16384	; 0x4000
   118f8:	mov	r1, r5
   118fc:	mov	r0, r6
   11900:	bl	114f4 <rb_helper_read@plt>
   11904:	cmp	r0, #0
   11908:	ble	11948 <sprintf@plt+0x370>
   1190c:	mov	r2, #10
   11910:	mov	r1, r4
   11914:	mov	r0, r5
   11918:	bl	113b0 <rb_string_to_array@plt>
   1191c:	cmp	r0, #0
   11920:	ble	118f4 <sprintf@plt+0x31c>
   11924:	ldr	r3, [r4]
   11928:	ldrb	r3, [r3]
   1192c:	add	r3, r7, r3, lsl #2
   11930:	ldr	r3, [r3, #2048]	; 0x800
   11934:	cmp	r3, #0
   11938:	beq	118f4 <sprintf@plt+0x31c>
   1193c:	mov	r1, r4
   11940:	blx	r3
   11944:	b	118f4 <sprintf@plt+0x31c>
   11948:	ldrd	r4, [sp]
   1194c:	ldrd	r6, [sp, #8]
   11950:	ldr	r8, [sp, #16]
   11954:	add	sp, sp, #20
   11958:	pop	{pc}		; (ldr pc, [sp], #4)
   1195c:	str	r4, [sp, #-8]!
   11960:	str	lr, [sp, #4]
   11964:	sub	sp, sp, #144	; 0x90
   11968:	mov	r4, #0
   1196c:	str	r4, [sp, #136]	; 0x88
   11970:	mov	r3, #1
   11974:	str	r3, [sp, #4]
   11978:	add	r0, sp, #8
   1197c:	bl	11200 <sigemptyset@plt>
   11980:	mov	r1, #13
   11984:	add	r0, sp, #8
   11988:	bl	1144c <sigaddset@plt>
   1198c:	mov	r1, #14
   11990:	add	r0, sp, #8
   11994:	bl	1144c <sigaddset@plt>
   11998:	mov	r1, #5
   1199c:	add	r0, sp, #8
   119a0:	bl	1144c <sigaddset@plt>
   119a4:	mov	r1, #28
   119a8:	add	r0, sp, #8
   119ac:	bl	1144c <sigaddset@plt>
   119b0:	mov	r2, r4
   119b4:	add	r1, sp, #4
   119b8:	mov	r0, #28
   119bc:	bl	114e8 <sigaction@plt>
   119c0:	mov	r2, r4
   119c4:	add	r1, sp, #4
   119c8:	mov	r0, #13
   119cc:	bl	114e8 <sigaction@plt>
   119d0:	mov	r2, r4
   119d4:	add	r1, sp, #4
   119d8:	mov	r0, #5
   119dc:	bl	114e8 <sigaction@plt>
   119e0:	movw	r3, #5972	; 0x1754
   119e4:	movt	r3, #1
   119e8:	str	r3, [sp, #4]
   119ec:	mov	r2, r4
   119f0:	add	r1, sp, #4
   119f4:	mov	r0, #14
   119f8:	bl	114e8 <sigaction@plt>
   119fc:	add	sp, sp, #144	; 0x90
   11a00:	ldr	r4, [sp]
   11a04:	add	sp, sp, #4
   11a08:	pop	{pc}		; (ldr pc, [sp], #4)
   11a0c:	push	{lr}		; (str lr, [sp, #-4]!)
   11a10:	sub	sp, sp, #20
   11a14:	bl	1195c <sprintf@plt+0x384>
   11a18:	mov	r3, #256	; 0x100
   11a1c:	str	r3, [sp, #12]
   11a20:	str	r3, [sp, #8]
   11a24:	str	r3, [sp, #4]
   11a28:	mov	r2, #0
   11a2c:	str	r2, [sp]
   11a30:	mov	r3, r2
   11a34:	movw	r1, #6328	; 0x18b8
   11a38:	movt	r1, #1
   11a3c:	movw	r0, #6344	; 0x18c8
   11a40:	movt	r0, #1
   11a44:	bl	11320 <rb_helper_child@plt>
   11a48:	movw	r3, #48968	; 0xbf48
   11a4c:	movt	r3, #2
   11a50:	str	r0, [r3, #44]	; 0x2c
   11a54:	cmp	r0, #0
   11a58:	beq	11aac <sprintf@plt+0x4d4>
   11a5c:	bl	114d0 <rb_set_time@plt>
   11a60:	bl	1195c <sprintf@plt+0x384>
   11a64:	movw	r1, #5064	; 0x13c8
   11a68:	movt	r1, #1
   11a6c:	movw	r0, #37416	; 0x9228
   11a70:	movt	r0, #1
   11a74:	bl	11518 <rb_dictionary_create@plt>
   11a78:	movw	r3, #364	; 0x16c
   11a7c:	movt	r3, #3
   11a80:	str	r0, [r3]
   11a84:	bl	1373c <sprintf@plt+0x2164>
   11a88:	bl	125ec <sprintf@plt+0x1014>
   11a8c:	mov	r1, #1
   11a90:	mov	r0, #0
   11a94:	bl	11494 <rb_init_prng@plt>
   11a98:	movw	r3, #48968	; 0xbf48
   11a9c:	movt	r3, #2
   11aa0:	mov	r1, #0
   11aa4:	ldr	r0, [r3, #44]	; 0x2c
   11aa8:	bl	11218 <rb_helper_loop@plt>
   11aac:	movw	r3, #48960	; 0xbf40
   11ab0:	movt	r3, #2
   11ab4:	ldr	r3, [r3]
   11ab8:	mov	r2, #46	; 0x2e
   11abc:	mov	r1, #1
   11ac0:	movw	r0, #37368	; 0x91f8
   11ac4:	movt	r0, #1
   11ac8:	bl	11488 <fwrite@plt>
   11acc:	mov	r0, #1
   11ad0:	bl	115c0 <exit@plt>
   11ad4:	strd	r4, [sp, #-12]!
   11ad8:	str	lr, [sp, #8]
   11adc:	sub	sp, sp, #60	; 0x3c
   11ae0:	mov	r4, r0
   11ae4:	mov	r5, r1
   11ae8:	mov	r3, #42	; 0x2a
   11aec:	str	r3, [sp]
   11af0:	mov	r2, #49	; 0x31
   11af4:	mov	r1, #0
   11af8:	add	r0, sp, #4
   11afc:	bl	11344 <memset@plt>
   11b00:	cmp	r4, #0
   11b04:	beq	11b70 <sprintf@plt+0x598>
   11b08:	cmp	r5, #0
   11b0c:	beq	11b94 <sprintf@plt+0x5bc>
   11b10:	ldr	r2, [r4, #8]
   11b14:	cmp	r2, #52	; 0x34
   11b18:	beq	11b88 <sprintf@plt+0x5b0>
   11b1c:	cmp	r2, #54	; 0x36
   11b20:	bne	11be8 <sprintf@plt+0x610>
   11b24:	ldrh	r3, [r5, #4]
   11b28:	cmp	r3, #10
   11b2c:	bne	11b94 <sprintf@plt+0x5bc>
   11b30:	mov	r2, #53	; 0x35
   11b34:	mov	r1, sp
   11b38:	add	r0, r5, #4
   11b3c:	bl	11500 <rb_inet_ntop_sock@plt>
   11b40:	ldrb	r3, [sp]
   11b44:	cmp	r3, #58	; 0x3a
   11b48:	bne	11b94 <sprintf@plt+0x5bc>
   11b4c:	mov	r0, sp
   11b50:	bl	113f8 <strlen@plt>
   11b54:	mov	r2, r0
   11b58:	mov	r1, sp
   11b5c:	add	r0, sp, #1
   11b60:	bl	11524 <memmove@plt>
   11b64:	mov	r3, #48	; 0x30
   11b68:	strb	r3, [sp]
   11b6c:	b	11b94 <sprintf@plt+0x5bc>
   11b70:	movw	r1, #37440	; 0x9240
   11b74:	movt	r1, #1
   11b78:	mov	r0, #67	; 0x43
   11b7c:	bl	122a0 <sprintf@plt+0xcc8>
   11b80:	mov	r0, #2
   11b84:	bl	115c0 <exit@plt>
   11b88:	ldrh	r3, [r5, #4]
   11b8c:	cmp	r3, #2
   11b90:	beq	11bd4 <sprintf@plt+0x5fc>
   11b94:	ldr	r5, [r4, #152]	; 0x98
   11b98:	cmp	r5, #0
   11b9c:	beq	11bbc <sprintf@plt+0x5e4>
   11ba0:	ldrb	r1, [sp]
   11ba4:	ldr	r3, [r4, #156]	; 0x9c
   11ba8:	ldr	r2, [r4, #8]
   11bac:	subs	r1, r1, #42	; 0x2a
   11bb0:	movne	r1, #1
   11bb4:	mov	r0, sp
   11bb8:	blx	r5
   11bbc:	mov	r0, r4
   11bc0:	bl	113a4 <free@plt>
   11bc4:	add	sp, sp, #60	; 0x3c
   11bc8:	ldrd	r4, [sp]
   11bcc:	add	sp, sp, #8
   11bd0:	pop	{pc}		; (ldr pc, [sp], #4)
   11bd4:	mov	r2, #53	; 0x35
   11bd8:	mov	r1, sp
   11bdc:	add	r0, r5, #4
   11be0:	bl	11500 <rb_inet_ntop_sock@plt>
   11be4:	b	11b94 <sprintf@plt+0x5bc>
   11be8:	movw	r1, #37484	; 0x926c
   11bec:	movt	r1, #1
   11bf0:	mov	r0, #67	; 0x43
   11bf4:	bl	122a0 <sprintf@plt+0xcc8>
   11bf8:	mov	r0, #2
   11bfc:	bl	115c0 <exit@plt>
   11c00:	strd	r4, [sp, #-16]!
   11c04:	str	r6, [sp, #8]
   11c08:	str	lr, [sp, #12]
   11c0c:	subs	r4, r0, #0
   11c10:	beq	11c8c <sprintf@plt+0x6b4>
   11c14:	mov	r5, r1
   11c18:	cmp	r1, #0
   11c1c:	beq	11c50 <sprintf@plt+0x678>
   11c20:	ldr	r2, [r4, #8]
   11c24:	cmp	r2, #82	; 0x52
   11c28:	beq	11ca4 <sprintf@plt+0x6cc>
   11c2c:	cmp	r2, #83	; 0x53
   11c30:	bne	11cbc <sprintf@plt+0x6e4>
   11c34:	mov	r2, #16
   11c38:	add	r1, r1, #12
   11c3c:	add	r0, r4, #20
   11c40:	bl	1126c <memcmp@plt>
   11c44:	cmp	r0, #0
   11c48:	movne	r5, #0
   11c4c:	ldreq	r5, [r5]
   11c50:	ldr	r6, [r4, #152]	; 0x98
   11c54:	cmp	r6, #0
   11c58:	beq	11c74 <sprintf@plt+0x69c>
   11c5c:	ldr	r3, [r4, #156]	; 0x9c
   11c60:	ldr	r2, [r4, #8]
   11c64:	adds	r1, r5, #0
   11c68:	movne	r1, #1
   11c6c:	mov	r0, r5
   11c70:	blx	r6
   11c74:	mov	r0, r4
   11c78:	bl	113a4 <free@plt>
   11c7c:	ldrd	r4, [sp]
   11c80:	ldr	r6, [sp, #8]
   11c84:	add	sp, sp, #12
   11c88:	pop	{pc}		; (ldr pc, [sp], #4)
   11c8c:	movw	r1, #37536	; 0x92a0
   11c90:	movt	r1, #1
   11c94:	mov	r0, #67	; 0x43
   11c98:	bl	122a0 <sprintf@plt+0xcc8>
   11c9c:	mov	r0, #2
   11ca0:	bl	115c0 <exit@plt>
   11ca4:	ldr	r2, [r4, #16]
   11ca8:	ldr	r3, [r1, #8]
   11cac:	cmp	r2, r3
   11cb0:	movne	r5, #0
   11cb4:	ldreq	r5, [r5]
   11cb8:	b	11c50 <sprintf@plt+0x678>
   11cbc:	movw	r1, #37588	; 0x92d4
   11cc0:	movt	r1, #1
   11cc4:	mov	r0, #67	; 0x43
   11cc8:	bl	122a0 <sprintf@plt+0xcc8>
   11ccc:	mov	r0, #2
   11cd0:	bl	115c0 <exit@plt>
   11cd4:	str	r4, [sp, #-8]!
   11cd8:	str	lr, [sp, #4]
   11cdc:	sub	sp, sp, #8
   11ce0:	cmp	r2, #0
   11ce4:	cmpne	r3, #0
   11ce8:	beq	11d40 <sprintf@plt+0x768>
   11cec:	mov	r4, r3
   11cf0:	eor	r1, r1, #1
   11cf4:	cmp	r0, #0
   11cf8:	orreq	r1, r1, #1
   11cfc:	cmp	r1, #0
   11d00:	bne	11d58 <sprintf@plt+0x780>
   11d04:	movw	ip, #49012	; 0xbf74
   11d08:	movt	ip, #2
   11d0c:	str	r0, [sp]
   11d10:	mov	r3, r2
   11d14:	mov	r2, r4
   11d18:	movw	r1, #37704	; 0x9348
   11d1c:	movt	r1, #1
   11d20:	ldr	r0, [ip]
   11d24:	bl	1153c <rb_helper_write@plt>
   11d28:	mov	r0, r4
   11d2c:	bl	113a4 <free@plt>
   11d30:	add	sp, sp, #8
   11d34:	ldr	r4, [sp]
   11d38:	add	sp, sp, #4
   11d3c:	pop	{pc}		; (ldr pc, [sp], #4)
   11d40:	movw	r1, #37648	; 0x9310
   11d44:	movt	r1, #1
   11d48:	mov	r0, #67	; 0x43
   11d4c:	bl	122a0 <sprintf@plt+0xcc8>
   11d50:	mov	r0, #2
   11d54:	bl	115c0 <exit@plt>
   11d58:	movw	r0, #49012	; 0xbf74
   11d5c:	movt	r0, #2
   11d60:	mov	r3, r2
   11d64:	mov	r2, r4
   11d68:	movw	r1, #37692	; 0x933c
   11d6c:	movt	r1, #1
   11d70:	ldr	r0, [r0]
   11d74:	bl	1153c <rb_helper_write@plt>
   11d78:	mov	r0, r4
   11d7c:	bl	113a4 <free@plt>
   11d80:	b	11d30 <sprintf@plt+0x758>
   11d84:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11d88:	strd	r6, [sp, #8]
   11d8c:	str	r8, [sp, #16]
   11d90:	str	lr, [sp, #20]
   11d94:	mov	r6, r0
   11d98:	mov	r5, r1
   11d9c:	mov	r8, r2
   11da0:	mov	r7, r3
   11da4:	mov	r1, #160	; 0xa0
   11da8:	mov	r0, #1
   11dac:	bl	11314 <calloc@plt>
   11db0:	subs	r4, r0, #0
   11db4:	beq	11e44 <sprintf@plt+0x86c>
   11db8:	cmp	r5, #2
   11dbc:	moveq	r3, #52	; 0x34
   11dc0:	streq	r3, [r4, #8]
   11dc4:	moveq	r2, #1
   11dc8:	beq	11de0 <sprintf@plt+0x808>
   11dcc:	cmp	r5, #10
   11dd0:	bne	11e48 <sprintf@plt+0x870>
   11dd4:	mov	r3, #54	; 0x36
   11dd8:	str	r3, [r4, #8]
   11ddc:	mov	r2, #28
   11de0:	movw	r3, #65400	; 0xff78
   11de4:	movt	r3, #2
   11de8:	ldr	r1, [r3]
   11dec:	ldr	r0, [r3, #4]
   11df0:	adds	lr, r1, #1
   11df4:	adc	ip, r0, #0
   11df8:	str	lr, [r3]
   11dfc:	str	ip, [r3, #4]
   11e00:	str	r1, [r4, #144]	; 0x90
   11e04:	str	r0, [r4, #148]	; 0x94
   11e08:	str	r8, [r4, #152]	; 0x98
   11e0c:	str	r7, [r4, #156]	; 0x9c
   11e10:	str	r4, [r4]
   11e14:	movw	r3, #6868	; 0x1ad4
   11e18:	movt	r3, #1
   11e1c:	str	r3, [r4, #4]
   11e20:	mov	r1, r4
   11e24:	mov	r0, r6
   11e28:	bl	1378c <sprintf@plt+0x21b4>
   11e2c:	mov	r0, r4
   11e30:	ldrd	r4, [sp]
   11e34:	ldrd	r6, [sp, #8]
   11e38:	ldr	r8, [sp, #16]
   11e3c:	add	sp, sp, #20
   11e40:	pop	{pc}		; (ldr pc, [sp], #4)
   11e44:	bl	114ac <rb_outofmemory@plt>
   11e48:	mov	r0, r4
   11e4c:	bl	113a4 <free@plt>
   11e50:	mov	r4, #0
   11e54:	b	11e2c <sprintf@plt+0x854>
   11e58:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11e5c:	strd	r6, [sp, #8]
   11e60:	str	r8, [sp, #16]
   11e64:	str	lr, [sp, #20]
   11e68:	mov	r6, r0
   11e6c:	mov	r8, r1
   11e70:	mov	r7, r2
   11e74:	mov	r1, #160	; 0xa0
   11e78:	mov	r0, #1
   11e7c:	bl	11314 <calloc@plt>
   11e80:	subs	r4, r0, #0
   11e84:	beq	11f28 <sprintf@plt+0x950>
   11e88:	add	r5, r4, #12
   11e8c:	mov	r1, r5
   11e90:	mov	r0, r6
   11e94:	bl	113ec <rb_inet_pton_sock@plt>
   11e98:	cmp	r0, #0
   11e9c:	beq	11f2c <sprintf@plt+0x954>
   11ea0:	ldrh	r3, [r4, #12]
   11ea4:	cmp	r3, #2
   11ea8:	moveq	r3, #82	; 0x52
   11eac:	streq	r3, [r4, #8]
   11eb0:	beq	11ec4 <sprintf@plt+0x8ec>
   11eb4:	cmp	r3, #10
   11eb8:	bne	11f3c <sprintf@plt+0x964>
   11ebc:	mov	r3, #83	; 0x53
   11ec0:	str	r3, [r4, #8]
   11ec4:	movw	r3, #65400	; 0xff78
   11ec8:	movt	r3, #2
   11ecc:	ldr	r2, [r3]
   11ed0:	ldr	r1, [r3, #4]
   11ed4:	adds	ip, r2, #1
   11ed8:	adc	r0, r1, #0
   11edc:	str	ip, [r3]
   11ee0:	str	r0, [r3, #4]
   11ee4:	str	r2, [r4, #144]	; 0x90
   11ee8:	str	r1, [r4, #148]	; 0x94
   11eec:	str	r8, [r4, #152]	; 0x98
   11ef0:	str	r7, [r4, #156]	; 0x9c
   11ef4:	str	r4, [r4]
   11ef8:	movw	r3, #7168	; 0x1c00
   11efc:	movt	r3, #1
   11f00:	str	r3, [r4, #4]
   11f04:	mov	r1, r4
   11f08:	mov	r0, r5
   11f0c:	bl	14288 <sprintf@plt+0x2cb0>
   11f10:	mov	r0, r4
   11f14:	ldrd	r4, [sp]
   11f18:	ldrd	r6, [sp, #8]
   11f1c:	ldr	r8, [sp, #16]
   11f20:	add	sp, sp, #20
   11f24:	pop	{pc}		; (ldr pc, [sp], #4)
   11f28:	bl	114ac <rb_outofmemory@plt>
   11f2c:	mov	r0, r4
   11f30:	bl	113a4 <free@plt>
   11f34:	mov	r4, #0
   11f38:	b	11f10 <sprintf@plt+0x938>
   11f3c:	mov	r0, r4
   11f40:	bl	113a4 <free@plt>
   11f44:	mov	r4, #0
   11f48:	b	11f10 <sprintf@plt+0x938>
   11f4c:	mov	r3, #0
   11f50:	str	r3, [r0, #156]	; 0x9c
   11f54:	str	r3, [r0, #152]	; 0x98
   11f58:	bx	lr
   11f5c:	strd	r4, [sp, #-16]!
   11f60:	str	r6, [sp, #8]
   11f64:	str	lr, [sp, #12]
   11f68:	mov	r4, r1
   11f6c:	ldr	r5, [r1, #4]
   11f70:	mov	r0, r5
   11f74:	bl	113f8 <strlen@plt>
   11f78:	add	r0, r0, #1
   11f7c:	bl	114dc <malloc@plt>
   11f80:	subs	r6, r0, #0
   11f84:	beq	12030 <sprintf@plt+0xa58>
   11f88:	mov	r1, r5
   11f8c:	mov	r0, r6
   11f90:	bl	11458 <strcpy@plt>
   11f94:	ldr	r3, [r4, #8]
   11f98:	ldrb	r5, [r3]
   11f9c:	ldr	r0, [r4, #12]
   11fa0:	sub	r3, r5, #52	; 0x34
   11fa4:	cmp	r3, #31
   11fa8:	ldrls	pc, [pc, r3, lsl #2]
   11fac:	b	120b0 <sprintf@plt+0xad8>
   11fb0:	andeq	r2, r1, ip, lsr r0
   11fb4:	strheq	r2, [r1], -r0
   11fb8:	andeq	r2, r1, r4, lsr r0
   11fbc:	strheq	r2, [r1], -r0
   11fc0:	strheq	r2, [r1], -r0
   11fc4:	strheq	r2, [r1], -r0
   11fc8:	strheq	r2, [r1], -r0
   11fcc:	strheq	r2, [r1], -r0
   11fd0:	strheq	r2, [r1], -r0
   11fd4:	strheq	r2, [r1], -r0
   11fd8:	strheq	r2, [r1], -r0
   11fdc:	strheq	r2, [r1], -r0
   11fe0:	strheq	r2, [r1], -r0
   11fe4:	strheq	r2, [r1], -r0
   11fe8:	strheq	r2, [r1], -r0
   11fec:	strheq	r2, [r1], -r0
   11ff0:	strheq	r2, [r1], -r0
   11ff4:	strheq	r2, [r1], -r0
   11ff8:	strheq	r2, [r1], -r0
   11ffc:	strheq	r2, [r1], -r0
   12000:	strheq	r2, [r1], -r0
   12004:	strheq	r2, [r1], -r0
   12008:	strheq	r2, [r1], -r0
   1200c:	strheq	r2, [r1], -r0
   12010:	strheq	r2, [r1], -r0
   12014:	strheq	r2, [r1], -r0
   12018:	strheq	r2, [r1], -r0
   1201c:	strheq	r2, [r1], -r0
   12020:	strheq	r2, [r1], -r0
   12024:	strheq	r2, [r1], -r0
   12028:	andeq	r2, r1, r0, lsl #1
   1202c:	andeq	r2, r1, r0, lsl #1
   12030:	bl	114ac <rb_outofmemory@plt>
   12034:	mov	r1, #10
   12038:	b	12040 <sprintf@plt+0xa68>
   1203c:	mov	r1, #2
   12040:	mov	r3, r6
   12044:	movw	r2, #7380	; 0x1cd4
   12048:	movt	r2, #1
   1204c:	bl	11d84 <sprintf@plt+0x7ac>
   12050:	cmp	r0, #0
   12054:	beq	12068 <sprintf@plt+0xa90>
   12058:	ldrd	r4, [sp]
   1205c:	ldr	r6, [sp, #8]
   12060:	add	sp, sp, #12
   12064:	pop	{pc}		; (ldr pc, [sp], #4)
   12068:	mov	r3, #0
   1206c:	mov	r2, r5
   12070:	mov	r1, r3
   12074:	mov	r0, r3
   12078:	bl	11cd4 <sprintf@plt+0x6fc>
   1207c:	b	12058 <sprintf@plt+0xa80>
   12080:	mov	r2, r6
   12084:	movw	r1, #7380	; 0x1cd4
   12088:	movt	r1, #1
   1208c:	bl	11e58 <sprintf@plt+0x880>
   12090:	cmp	r0, #0
   12094:	bne	12058 <sprintf@plt+0xa80>
   12098:	mov	r3, #0
   1209c:	mov	r2, r5
   120a0:	mov	r1, r3
   120a4:	mov	r0, r3
   120a8:	bl	11cd4 <sprintf@plt+0x6fc>
   120ac:	b	12058 <sprintf@plt+0xa80>
   120b0:	mov	r2, r5
   120b4:	movw	r1, #37720	; 0x9358
   120b8:	movt	r1, #1
   120bc:	mov	r0, #67	; 0x43
   120c0:	bl	122a0 <sprintf@plt+0xcc8>
   120c4:	mov	r0, #2
   120c8:	bl	115c0 <exit@plt>
   120cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   120d0:	strd	r6, [sp, #8]
   120d4:	strd	r8, [sp, #16]
   120d8:	strd	sl, [sp, #24]
   120dc:	str	lr, [sp, #32]
   120e0:	sub	sp, sp, #604	; 0x25c
   120e4:	mov	r9, r0
   120e8:	mov	sl, r1
   120ec:	movw	r3, #65492	; 0xffd4
   120f0:	movt	r3, #2
   120f4:	ldr	r3, [r3]
   120f8:	cmp	r3, #0
   120fc:	beq	121cc <sprintf@plt+0xbf4>
   12100:	ble	12198 <sprintf@plt+0xbc0>
   12104:	movw	r6, #660	; 0x294
   12108:	movt	r6, #3
   1210c:	mov	r7, #0
   12110:	mov	r4, r7
   12114:	movw	fp, #37856	; 0x93e0
   12118:	movt	fp, #1
   1211c:	movw	r8, #65492	; 0xffd4
   12120:	movt	r8, #2
   12124:	mov	r2, #53	; 0x35
   12128:	add	r1, sp, #4
   1212c:	mov	r0, r6
   12130:	bl	11500 <rb_inet_ntop_sock@plt>
   12134:	ldrb	r3, [sp, #4]
   12138:	cmp	r3, #0
   1213c:	beq	121f8 <sprintf@plt+0xc20>
   12140:	add	r0, sp, #4
   12144:	bl	113f8 <strlen@plt>
   12148:	mov	r5, r0
   1214c:	add	r3, sp, #4
   12150:	mov	r2, fp
   12154:	rsb	r1, r4, #540	; 0x21c
   12158:	add	r0, sp, #60	; 0x3c
   1215c:	add	r0, r0, r4
   12160:	bl	1156c <snprintf@plt>
   12164:	add	r5, r5, #1
   12168:	add	r4, r4, r5
   1216c:	add	r7, r7, #1
   12170:	add	r6, r6, #128	; 0x80
   12174:	ldr	r3, [r8]
   12178:	cmp	r3, r7
   1217c:	bgt	12124 <sprintf@plt+0xb4c>
   12180:	cmp	r4, #0
   12184:	beq	12198 <sprintf@plt+0xbc0>
   12188:	add	r3, sp, #600	; 0x258
   1218c:	add	r4, r3, r4
   12190:	mov	r3, #0
   12194:	strb	r3, [r4, #-541]	; 0xfffffde3
   12198:	add	r3, sp, #60	; 0x3c
   1219c:	movw	r2, #40664	; 0x9ed8
   121a0:	movt	r2, #1
   121a4:	mov	r1, sl
   121a8:	mov	r0, r9
   121ac:	bl	12304 <sprintf@plt+0xd2c>
   121b0:	add	sp, sp, #604	; 0x25c
   121b4:	ldrd	r4, [sp]
   121b8:	ldrd	r6, [sp, #8]
   121bc:	ldrd	r8, [sp, #16]
   121c0:	ldrd	sl, [sp, #24]
   121c4:	add	sp, sp, #32
   121c8:	pop	{pc}		; (ldr pc, [sp], #4)
   121cc:	movw	r1, #37772	; 0x938c
   121d0:	movt	r1, #1
   121d4:	mov	r0, #67	; 0x43
   121d8:	bl	122a0 <sprintf@plt+0xcc8>
   121dc:	movw	r2, #37796	; 0x93a4
   121e0:	movt	r2, #1
   121e4:	mov	r1, sl
   121e8:	mov	r0, r9
   121ec:	bl	1237c <sprintf@plt+0xda4>
   121f0:	mov	r0, #2
   121f4:	bl	115c0 <exit@plt>
   121f8:	movw	r1, #37812	; 0x93b4
   121fc:	movt	r1, #1
   12200:	mov	r0, #67	; 0x43
   12204:	bl	122a0 <sprintf@plt+0xcc8>
   12208:	movw	r2, #37836	; 0x93cc
   1220c:	movt	r2, #1
   12210:	mov	r1, sl
   12214:	mov	r0, r9
   12218:	bl	1237c <sprintf@plt+0xda4>
   1221c:	mov	r0, #2
   12220:	bl	115c0 <exit@plt>
   12224:	str	r4, [sp, #-8]!
   12228:	str	lr, [sp, #4]
   1222c:	bl	13754 <sprintf@plt+0x217c>
   12230:	ldr	r4, [sp]
   12234:	add	sp, sp, #4
   12238:	pop	{pc}		; (ldr pc, [sp], #4)
   1223c:	push	{r1, r2, r3}
   12240:	str	r4, [sp, #-8]!
   12244:	str	lr, [sp, #4]
   12248:	sub	sp, sp, #524	; 0x20c
   1224c:	mov	r4, r0
   12250:	add	r3, sp, #536	; 0x218
   12254:	str	r3, [sp, #4]
   12258:	ldr	r2, [sp, #532]	; 0x214
   1225c:	mov	r1, #512	; 0x200
   12260:	add	r0, sp, #8
   12264:	bl	112b4 <vsnprintf@plt>
   12268:	movw	r0, #49012	; 0xbf74
   1226c:	movt	r0, #2
   12270:	add	r3, sp, #8
   12274:	mov	r2, r4
   12278:	movw	r1, #37860	; 0x93e4
   1227c:	movt	r1, #1
   12280:	ldr	r0, [r0]
   12284:	bl	1153c <rb_helper_write@plt>
   12288:	add	sp, sp, #524	; 0x20c
   1228c:	ldr	r4, [sp]
   12290:	ldr	lr, [sp, #4]
   12294:	add	sp, sp, #8
   12298:	add	sp, sp, #12
   1229c:	bx	lr
   122a0:	push	{r1, r2, r3}
   122a4:	str	r4, [sp, #-8]!
   122a8:	str	lr, [sp, #4]
   122ac:	sub	sp, sp, #524	; 0x20c
   122b0:	mov	r4, r0
   122b4:	add	r3, sp, #536	; 0x218
   122b8:	str	r3, [sp, #4]
   122bc:	ldr	r2, [sp, #532]	; 0x214
   122c0:	mov	r1, #512	; 0x200
   122c4:	add	r0, sp, #8
   122c8:	bl	112b4 <vsnprintf@plt>
   122cc:	movw	r0, #49012	; 0xbf74
   122d0:	movt	r0, #2
   122d4:	add	r3, sp, #8
   122d8:	mov	r2, r4
   122dc:	movw	r1, #37872	; 0x93f0
   122e0:	movt	r1, #1
   122e4:	ldr	r0, [r0]
   122e8:	bl	1153c <rb_helper_write@plt>
   122ec:	add	sp, sp, #524	; 0x20c
   122f0:	ldr	r4, [sp]
   122f4:	ldr	lr, [sp, #4]
   122f8:	add	sp, sp, #8
   122fc:	add	sp, sp, #12
   12300:	bx	lr
   12304:	push	{r2, r3}
   12308:	strd	r4, [sp, #-16]!
   1230c:	str	r6, [sp, #8]
   12310:	str	lr, [sp, #12]
   12314:	sub	sp, sp, #528	; 0x210
   12318:	mov	r5, r0
   1231c:	mov	r6, r1
   12320:	add	r3, sp, #548	; 0x224
   12324:	str	r3, [sp, #12]
   12328:	add	r4, sp, #16
   1232c:	ldr	r2, [sp, #544]	; 0x220
   12330:	mov	r1, #512	; 0x200
   12334:	mov	r0, r4
   12338:	bl	112b4 <vsnprintf@plt>
   1233c:	movw	r0, #49012	; 0xbf74
   12340:	movt	r0, #2
   12344:	str	r4, [sp]
   12348:	mov	r3, r6
   1234c:	mov	r2, r5
   12350:	movw	r1, #37884	; 0x93fc
   12354:	movt	r1, #1
   12358:	ldr	r0, [r0]
   1235c:	bl	1153c <rb_helper_write@plt>
   12360:	add	sp, sp, #528	; 0x210
   12364:	ldrd	r4, [sp]
   12368:	ldr	r6, [sp, #8]
   1236c:	ldr	lr, [sp, #12]
   12370:	add	sp, sp, #16
   12374:	add	sp, sp, #8
   12378:	bx	lr
   1237c:	push	{r2, r3}
   12380:	strd	r4, [sp, #-16]!
   12384:	str	r6, [sp, #8]
   12388:	str	lr, [sp, #12]
   1238c:	sub	sp, sp, #528	; 0x210
   12390:	mov	r5, r0
   12394:	mov	r6, r1
   12398:	add	r3, sp, #548	; 0x224
   1239c:	str	r3, [sp, #12]
   123a0:	add	r4, sp, #16
   123a4:	ldr	r2, [sp, #544]	; 0x220
   123a8:	mov	r1, #512	; 0x200
   123ac:	mov	r0, r4
   123b0:	bl	112b4 <vsnprintf@plt>
   123b4:	movw	r0, #49012	; 0xbf74
   123b8:	movt	r0, #2
   123bc:	str	r4, [sp]
   123c0:	mov	r3, r6
   123c4:	mov	r2, r5
   123c8:	movw	r1, #37896	; 0x9408
   123cc:	movt	r1, #1
   123d0:	ldr	r0, [r0]
   123d4:	bl	1153c <rb_helper_write@plt>
   123d8:	add	sp, sp, #528	; 0x210
   123dc:	ldrd	r4, [sp]
   123e0:	ldr	r6, [sp, #8]
   123e4:	ldr	lr, [sp, #12]
   123e8:	add	sp, sp, #16
   123ec:	add	sp, sp, #8
   123f0:	bx	lr
   123f4:	str	r4, [sp, #-8]!
   123f8:	str	lr, [sp, #4]
   123fc:	movw	ip, #49012	; 0xbf74
   12400:	movt	ip, #2
   12404:	mov	r3, r1
   12408:	mov	r2, r0
   1240c:	movw	r1, #37908	; 0x9414
   12410:	movt	r1, #1
   12414:	ldr	r0, [ip]
   12418:	bl	1153c <rb_helper_write@plt>
   1241c:	ldr	r4, [sp]
   12420:	add	sp, sp, #4
   12424:	pop	{pc}		; (ldr pc, [sp], #4)
   12428:	sub	r0, r1, r0
   1242c:	bx	lr
   12430:	strd	r4, [sp, #-16]!
   12434:	str	r6, [sp, #8]
   12438:	str	lr, [sp, #12]
   1243c:	mov	r5, r0
   12440:	movw	r3, #65408	; 0xff80
   12444:	movt	r3, #2
   12448:	ldr	r3, [r3, #8]
   1244c:	cmp	r3, #0
   12450:	bne	12534 <sprintf@plt+0xf5c>
   12454:	movw	r3, #65408	; 0xff80
   12458:	movt	r3, #2
   1245c:	ldr	r3, [r3, #12]
   12460:	cmn	r3, #1
   12464:	cmpne	r3, #32
   12468:	beq	125b4 <sprintf@plt+0xfdc>
   1246c:	movw	r2, #65408	; 0xff80
   12470:	movt	r2, #2
   12474:	add	r1, r3, #1
   12478:	str	r1, [r2, #12]
   1247c:	str	r3, [r0, #12]
   12480:	ldr	r4, [r5, #56]	; 0x38
   12484:	cmp	r4, #0
   12488:	beq	124b8 <sprintf@plt+0xee0>
   1248c:	ldr	r1, [r4]
   12490:	cmp	r1, #0
   12494:	beq	124b8 <sprintf@plt+0xee0>
   12498:	movw	r6, #364	; 0x16c
   1249c:	movt	r6, #3
   124a0:	mov	r2, r4
   124a4:	ldr	r0, [r6]
   124a8:	bl	114c4 <rb_dictionary_add@plt>
   124ac:	ldr	r1, [r4, #12]!
   124b0:	cmp	r1, #0
   124b4:	bne	124a0 <sprintf@plt+0xec8>
   124b8:	ldrb	r3, [r5, #48]	; 0x30
   124bc:	cmp	r3, #0
   124c0:	beq	124d4 <sprintf@plt+0xefc>
   124c4:	ldr	r1, [r5, #52]	; 0x34
   124c8:	movw	r2, #46436	; 0xb564
   124cc:	movt	r2, #2
   124d0:	str	r1, [r2, r3, lsl #2]
   124d4:	ldr	r3, [r5, #24]
   124d8:	cmp	r3, #0
   124dc:	beq	124e4 <sprintf@plt+0xf0c>
   124e0:	blx	r3
   124e4:	str	r5, [r5]
   124e8:	mov	r3, #0
   124ec:	str	r3, [r5, #4]
   124f0:	movw	r3, #372	; 0x174
   124f4:	movt	r3, #3
   124f8:	ldr	r3, [r3]
   124fc:	str	r3, [r5, #8]
   12500:	cmp	r3, #0
   12504:	strne	r5, [r3, #4]
   12508:	beq	125c8 <sprintf@plt+0xff0>
   1250c:	movw	r3, #372	; 0x174
   12510:	movt	r3, #3
   12514:	str	r5, [r3]
   12518:	ldr	r2, [r3, #8]
   1251c:	add	r2, r2, #1
   12520:	str	r2, [r3, #8]
   12524:	ldrd	r4, [sp]
   12528:	ldr	r6, [sp, #8]
   1252c:	add	sp, sp, #12
   12530:	pop	{pc}		; (ldr pc, [sp], #4)
   12534:	movw	r3, #65408	; 0xff80
   12538:	movt	r3, #2
   1253c:	ldr	r3, [r3]
   12540:	ldr	r2, [r3]
   12544:	str	r2, [r0, #12]
   12548:	ldr	r2, [r3, #8]
   1254c:	cmp	r2, #0
   12550:	ldr	r1, [r3, #4]
   12554:	movweq	r2, #65408	; 0xff80
   12558:	movteq	r2, #2
   1255c:	str	r1, [r2, #4]
   12560:	ldr	r2, [r3, #4]
   12564:	cmp	r2, #0
   12568:	beq	125a0 <sprintf@plt+0xfc8>
   1256c:	ldr	r1, [r3, #8]
   12570:	str	r1, [r2, #8]
   12574:	mov	r2, #0
   12578:	str	r2, [r3, #4]
   1257c:	str	r2, [r3, #8]
   12580:	movw	r3, #65408	; 0xff80
   12584:	movt	r3, #2
   12588:	ldr	r2, [r3, #8]
   1258c:	sub	r2, r2, #1
   12590:	str	r2, [r3, #8]
   12594:	ldr	r0, [r3]
   12598:	bl	11428 <rb_free_rb_dlink_node@plt>
   1259c:	b	12480 <sprintf@plt+0xea8>
   125a0:	movw	r2, #65408	; 0xff80
   125a4:	movt	r2, #2
   125a8:	ldr	r1, [r3, #8]
   125ac:	str	r1, [r2]
   125b0:	b	12574 <sprintf@plt+0xf9c>
   125b4:	movw	r1, #37928	; 0x9428
   125b8:	movt	r1, #1
   125bc:	mov	r0, #87	; 0x57
   125c0:	bl	122a0 <sprintf@plt+0xcc8>
   125c4:	b	12524 <sprintf@plt+0xf4c>
   125c8:	movw	r3, #372	; 0x174
   125cc:	movt	r3, #3
   125d0:	ldr	r3, [r3, #4]
   125d4:	cmp	r3, #0
   125d8:	bne	1250c <sprintf@plt+0xf34>
   125dc:	movw	r3, #372	; 0x174
   125e0:	movt	r3, #3
   125e4:	str	r5, [r3, #4]
   125e8:	b	1250c <sprintf@plt+0xf34>
   125ec:	str	r4, [sp, #-8]!
   125f0:	str	lr, [sp, #4]
   125f4:	movw	r1, #9256	; 0x2428
   125f8:	movt	r1, #1
   125fc:	movw	r0, #37976	; 0x9458
   12600:	movt	r0, #1
   12604:	bl	11518 <rb_dictionary_create@plt>
   12608:	movw	r3, #368	; 0x170
   1260c:	movt	r3, #3
   12610:	str	r0, [r3]
   12614:	mov	r3, #1
   12618:	mov	r2, #0
   1261c:	movw	r1, #10328	; 0x2858
   12620:	movt	r1, #1
   12624:	movw	r0, #38000	; 0x9470
   12628:	movt	r0, #1
   1262c:	bl	11230 <rb_event_addish@plt>
   12630:	movw	r3, #65408	; 0xff80
   12634:	movt	r3, #2
   12638:	str	r0, [r3, #16]
   1263c:	movw	r0, #48488	; 0xbd68
   12640:	movt	r0, #2
   12644:	bl	12430 <sprintf@plt+0xe58>
   12648:	movw	r0, #48800	; 0xbea0
   1264c:	movt	r0, #2
   12650:	bl	12430 <sprintf@plt+0xe58>
   12654:	movw	r0, #48716	; 0xbe4c
   12658:	movt	r0, #2
   1265c:	bl	12430 <sprintf@plt+0xe58>
   12660:	movw	r0, #48616	; 0xbde8
   12664:	movt	r0, #2
   12668:	bl	12430 <sprintf@plt+0xe58>
   1266c:	ldr	r4, [sp]
   12670:	add	sp, sp, #4
   12674:	pop	{pc}		; (ldr pc, [sp], #4)
   12678:	strd	r4, [sp, #-16]!
   1267c:	str	r6, [sp, #8]
   12680:	str	lr, [sp, #12]
   12684:	mov	r5, r0
   12688:	ldr	r4, [r0, #56]	; 0x38
   1268c:	cmp	r4, #0
   12690:	beq	126bc <sprintf@plt+0x10e4>
   12694:	ldr	r1, [r4]
   12698:	cmp	r1, #0
   1269c:	beq	126bc <sprintf@plt+0x10e4>
   126a0:	movw	r6, #364	; 0x16c
   126a4:	movt	r6, #3
   126a8:	ldr	r0, [r6]
   126ac:	bl	11410 <rb_dictionary_delete@plt>
   126b0:	ldr	r1, [r4, #12]!
   126b4:	cmp	r1, #0
   126b8:	bne	126a8 <sprintf@plt+0x10d0>
   126bc:	ldrb	r3, [r5, #48]	; 0x30
   126c0:	cmp	r3, #0
   126c4:	beq	126d8 <sprintf@plt+0x1100>
   126c8:	movw	r2, #46436	; 0xb564
   126cc:	movt	r2, #2
   126d0:	mov	r1, #0
   126d4:	str	r1, [r2, r3, lsl #2]
   126d8:	ldr	r3, [r5, #28]
   126dc:	cmp	r3, #0
   126e0:	beq	126e8 <sprintf@plt+0x1110>
   126e4:	blx	r3
   126e8:	ldr	r3, [r5, #8]
   126ec:	cmp	r3, #0
   126f0:	ldr	r2, [r5, #4]
   126f4:	movweq	r3, #372	; 0x174
   126f8:	movteq	r3, #3
   126fc:	str	r2, [r3, #4]
   12700:	ldr	r3, [r5, #4]
   12704:	cmp	r3, #0
   12708:	beq	1279c <sprintf@plt+0x11c4>
   1270c:	ldr	r2, [r5, #8]
   12710:	str	r2, [r3, #8]
   12714:	mov	r3, #0
   12718:	str	r3, [r5, #4]
   1271c:	str	r3, [r5, #8]
   12720:	movw	r3, #372	; 0x174
   12724:	movt	r3, #3
   12728:	ldr	r2, [r3, #8]
   1272c:	sub	r2, r2, #1
   12730:	str	r2, [r3, #8]
   12734:	ldr	r4, [r5, #12]
   12738:	bl	11560 <rb_make_rb_dlink_node@plt>
   1273c:	cmp	r4, #0
   12740:	beq	127b0 <sprintf@plt+0x11d8>
   12744:	cmp	r0, #0
   12748:	beq	127d0 <sprintf@plt+0x11f8>
   1274c:	str	r4, [r0]
   12750:	mov	r3, #0
   12754:	str	r3, [r0, #4]
   12758:	movw	r3, #65408	; 0xff80
   1275c:	movt	r3, #2
   12760:	ldr	r3, [r3]
   12764:	str	r3, [r0, #8]
   12768:	cmp	r3, #0
   1276c:	strne	r0, [r3, #4]
   12770:	beq	127f0 <sprintf@plt+0x1218>
   12774:	movw	r3, #65408	; 0xff80
   12778:	movt	r3, #2
   1277c:	str	r0, [r3]
   12780:	ldr	r2, [r3, #8]
   12784:	add	r2, r2, #1
   12788:	str	r2, [r3, #8]
   1278c:	ldrd	r4, [sp]
   12790:	ldr	r6, [sp, #8]
   12794:	add	sp, sp, #12
   12798:	pop	{pc}		; (ldr pc, [sp], #4)
   1279c:	movw	r3, #372	; 0x174
   127a0:	movt	r3, #3
   127a4:	ldr	r2, [r5, #8]
   127a8:	str	r2, [r3]
   127ac:	b	12714 <sprintf@plt+0x113c>
   127b0:	movw	r3, #37916	; 0x941c
   127b4:	movt	r3, #1
   127b8:	mov	r2, #143	; 0x8f
   127bc:	movw	r1, #38024	; 0x9488
   127c0:	movt	r1, #1
   127c4:	movw	r0, #38052	; 0x94a4
   127c8:	movt	r0, #1
   127cc:	bl	11374 <__assert_fail@plt>
   127d0:	movw	r3, #37916	; 0x941c
   127d4:	movt	r3, #1
   127d8:	mov	r2, #144	; 0x90
   127dc:	movw	r1, #38024	; 0x9488
   127e0:	movt	r1, #1
   127e4:	movw	r0, #38068	; 0x94b4
   127e8:	movt	r0, #1
   127ec:	bl	11374 <__assert_fail@plt>
   127f0:	movw	r3, #65408	; 0xff80
   127f4:	movt	r3, #2
   127f8:	ldr	r3, [r3, #4]
   127fc:	cmp	r3, #0
   12800:	bne	12774 <sprintf@plt+0x119c>
   12804:	movw	r3, #65408	; 0xff80
   12808:	movt	r3, #2
   1280c:	str	r0, [r3, #4]
   12810:	b	12774 <sprintf@plt+0x119c>
   12814:	str	r4, [sp, #-8]!
   12818:	str	lr, [sp, #4]
   1281c:	mov	r4, r0
   12820:	movw	r3, #368	; 0x170
   12824:	movt	r3, #3
   12828:	ldr	r1, [r0]
   1282c:	ldr	r0, [r3]
   12830:	bl	11410 <rb_dictionary_delete@plt>
   12834:	ldr	r0, [r4, #464]	; 0x1d0
   12838:	cmp	r0, #0
   1283c:	beq	12844 <sprintf@plt+0x126c>
   12840:	bl	113a4 <free@plt>
   12844:	mov	r0, r4
   12848:	bl	113a4 <free@plt>
   1284c:	ldr	r4, [sp]
   12850:	add	sp, sp, #4
   12854:	pop	{pc}		; (ldr pc, [sp], #4)
   12858:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1285c:	strd	r6, [sp, #8]
   12860:	str	r8, [sp, #16]
   12864:	str	lr, [sp, #20]
   12868:	sub	sp, sp, #8
   1286c:	bl	11404 <rb_current_time@plt>
   12870:	mov	r7, r0
   12874:	movw	r3, #368	; 0x170
   12878:	movt	r3, #3
   1287c:	mov	r1, sp
   12880:	ldr	r0, [r3]
   12884:	bl	113e0 <rb_dictionary_foreach_start@plt>
   12888:	movw	r6, #368	; 0x170
   1288c:	movt	r6, #3
   12890:	movw	r8, #372	; 0x174
   12894:	movt	r8, #3
   12898:	b	1290c <sprintf@plt+0x1334>
   1289c:	ldr	r4, [r4, #8]
   128a0:	cmp	r4, #0
   128a4:	beq	128ec <sprintf@plt+0x1314>
   128a8:	ldr	r2, [r4]
   128ac:	ldr	r1, [r2, #12]
   128b0:	ldr	r3, [r5, #464]	; 0x1d0
   128b4:	add	r3, r3, r1, lsl #4
   128b8:	ldr	r1, [r3, #12]
   128bc:	cmp	r1, #1
   128c0:	bne	1289c <sprintf@plt+0x12c4>
   128c4:	ldr	r2, [r2, #40]	; 0x28
   128c8:	cmp	r2, #0
   128cc:	beq	1289c <sprintf@plt+0x12c4>
   128d0:	ldr	r3, [r3, #4]
   128d4:	cmp	r3, #0
   128d8:	cmpgt	r7, r3
   128dc:	ble	1289c <sprintf@plt+0x12c4>
   128e0:	mov	r0, r5
   128e4:	blx	r2
   128e8:	b	1289c <sprintf@plt+0x12c4>
   128ec:	ldr	r3, [r5, #460]	; 0x1cc
   128f0:	sub	r3, r3, #1
   128f4:	str	r3, [r5, #460]	; 0x1cc
   128f8:	cmp	r3, #0
   128fc:	beq	1293c <sprintf@plt+0x1364>
   12900:	mov	r1, sp
   12904:	ldr	r0, [r6]
   12908:	bl	11398 <rb_dictionary_foreach_next@plt>
   1290c:	mov	r1, sp
   12910:	ldr	r0, [r6]
   12914:	bl	112fc <rb_dictionary_foreach_cur@plt>
   12918:	subs	r5, r0, #0
   1291c:	beq	12948 <sprintf@plt+0x1370>
   12920:	ldr	r3, [r5, #460]	; 0x1cc
   12924:	add	r3, r3, #1
   12928:	str	r3, [r5, #460]	; 0x1cc
   1292c:	ldr	r4, [r8]
   12930:	cmp	r4, #0
   12934:	bne	128a8 <sprintf@plt+0x12d0>
   12938:	b	128ec <sprintf@plt+0x1314>
   1293c:	mov	r0, r5
   12940:	bl	12814 <sprintf@plt+0x123c>
   12944:	b	12900 <sprintf@plt+0x1328>
   12948:	add	sp, sp, #8
   1294c:	ldrd	r4, [sp]
   12950:	ldrd	r6, [sp, #8]
   12954:	ldr	r8, [sp, #16]
   12958:	add	sp, sp, #20
   1295c:	pop	{pc}		; (ldr pc, [sp], #4)
   12960:	ldrb	r3, [r0, #452]	; 0x1c4
   12964:	cmp	r3, #0
   12968:	bxne	lr
   1296c:	mov	r3, #1
   12970:	strb	r3, [r0, #452]	; 0x1c4
   12974:	ldr	r3, [r0, #456]	; 0x1c8
   12978:	cmp	r3, #0
   1297c:	bxeq	lr
   12980:	strd	r4, [sp, #-16]!
   12984:	str	r6, [sp, #8]
   12988:	str	lr, [sp, #12]
   1298c:	mov	r5, r0
   12990:	movw	r3, #372	; 0x174
   12994:	movt	r3, #3
   12998:	ldr	r4, [r3]
   1299c:	cmp	r4, #0
   129a0:	bne	129c0 <sprintf@plt+0x13e8>
   129a4:	ldrd	r4, [sp]
   129a8:	ldr	r6, [sp, #8]
   129ac:	add	sp, sp, #12
   129b0:	pop	{pc}		; (ldr pc, [sp], #4)
   129b4:	ldr	r4, [r4, #8]
   129b8:	cmp	r4, #0
   129bc:	beq	129a4 <sprintf@plt+0x13cc>
   129c0:	ldr	r3, [r4]
   129c4:	ldr	r2, [r3, #36]	; 0x24
   129c8:	cmp	r2, #0
   129cc:	beq	129b4 <sprintf@plt+0x13dc>
   129d0:	ldr	r1, [r3, #12]
   129d4:	ldr	r3, [r5, #464]	; 0x1d0
   129d8:	add	r3, r3, r1, lsl #4
   129dc:	ldr	r3, [r3, #12]
   129e0:	cmp	r3, #1
   129e4:	bne	129b4 <sprintf@plt+0x13dc>
   129e8:	mov	r0, r5
   129ec:	blx	r2
   129f0:	b	129b4 <sprintf@plt+0x13dc>
   129f4:	push	{r3}		; (str r3, [sp, #-4]!)
   129f8:	strd	r4, [sp, #-16]!
   129fc:	str	r6, [sp, #8]
   12a00:	str	lr, [sp, #12]
   12a04:	sub	sp, sp, #540	; 0x21c
   12a08:	mov	r4, r0
   12a0c:	mov	r5, r1
   12a10:	mov	r6, r2
   12a14:	add	r3, sp, #560	; 0x230
   12a18:	str	r3, [sp, #20]
   12a1c:	ldr	r2, [sp, #556]	; 0x22c
   12a20:	mov	r1, #512	; 0x200
   12a24:	add	r0, sp, #24
   12a28:	bl	112b4 <vsnprintf@plt>
   12a2c:	movw	r3, #49012	; 0xbf74
   12a30:	movt	r3, #2
   12a34:	ldr	r0, [r3]
   12a38:	ldr	r2, [r4]
   12a3c:	cmn	r5, #1
   12a40:	beq	12af0 <sprintf@plt+0x1518>
   12a44:	ldr	r3, [r4, #464]	; 0x1d0
   12a48:	ldr	r3, [r3, r5, lsl #4]
   12a4c:	ldrb	r3, [r3, #20]
   12a50:	add	r1, r4, #440	; 0x1b8
   12a54:	add	ip, r4, #376	; 0x178
   12a58:	cmp	r6, #0
   12a5c:	beq	12b28 <sprintf@plt+0x1550>
   12a60:	add	lr, sp, #24
   12a64:	str	lr, [sp, #12]
   12a68:	str	r6, [sp, #8]
   12a6c:	str	ip, [sp, #4]
   12a70:	str	r1, [sp]
   12a74:	movw	r1, #38080	; 0x94c0
   12a78:	movt	r1, #1
   12a7c:	bl	1153c <rb_helper_write@plt>
   12a80:	ldr	r3, [r4, #464]	; 0x1d0
   12a84:	add	r5, r3, r5, lsl #4
   12a88:	mov	r3, #2
   12a8c:	str	r3, [r5, #12]
   12a90:	ldr	r3, [r4, #456]	; 0x1c8
   12a94:	sub	r3, r3, #1
   12a98:	str	r3, [r4, #456]	; 0x1c8
   12a9c:	mov	r0, r4
   12aa0:	bl	12960 <sprintf@plt+0x1388>
   12aa4:	add	sp, sp, #540	; 0x21c
   12aa8:	ldrd	r4, [sp]
   12aac:	ldr	r6, [sp, #8]
   12ab0:	ldr	lr, [sp, #12]
   12ab4:	add	sp, sp, #16
   12ab8:	add	sp, sp, #4
   12abc:	bx	lr
   12ac0:	add	ip, sp, #24
   12ac4:	str	ip, [sp, #12]
   12ac8:	movw	ip, #38104	; 0x94d8
   12acc:	movt	ip, #1
   12ad0:	str	ip, [sp, #8]
   12ad4:	str	r1, [sp, #4]
   12ad8:	str	r3, [sp]
   12adc:	mov	r3, #42	; 0x2a
   12ae0:	movw	r1, #38080	; 0x94c0
   12ae4:	movt	r1, #1
   12ae8:	bl	1153c <rb_helper_write@plt>
   12aec:	b	12a9c <sprintf@plt+0x14c4>
   12af0:	add	r3, r4, #440	; 0x1b8
   12af4:	add	r1, r4, #376	; 0x178
   12af8:	cmp	r6, #0
   12afc:	beq	12ac0 <sprintf@plt+0x14e8>
   12b00:	add	ip, sp, #24
   12b04:	str	ip, [sp, #12]
   12b08:	str	r6, [sp, #8]
   12b0c:	str	r1, [sp, #4]
   12b10:	str	r3, [sp]
   12b14:	mov	r3, #42	; 0x2a
   12b18:	movw	r1, #38080	; 0x94c0
   12b1c:	movt	r1, #1
   12b20:	bl	1153c <rb_helper_write@plt>
   12b24:	b	12a9c <sprintf@plt+0x14c4>
   12b28:	add	lr, sp, #24
   12b2c:	str	lr, [sp, #12]
   12b30:	movw	lr, #38104	; 0x94d8
   12b34:	movt	lr, #1
   12b38:	str	lr, [sp, #8]
   12b3c:	str	ip, [sp, #4]
   12b40:	str	r1, [sp]
   12b44:	movw	r1, #38080	; 0x94c0
   12b48:	movt	r1, #1
   12b4c:	bl	1153c <rb_helper_write@plt>
   12b50:	b	12a80 <sprintf@plt+0x14a8>
   12b54:	strd	r4, [sp, #-20]!	; 0xffffffec
   12b58:	strd	r6, [sp, #8]
   12b5c:	str	lr, [sp, #16]
   12b60:	sub	sp, sp, #12
   12b64:	movw	r3, #368	; 0x170
   12b68:	movt	r3, #3
   12b6c:	mov	r1, sp
   12b70:	ldr	r0, [r3]
   12b74:	bl	113e0 <rb_dictionary_foreach_start@plt>
   12b78:	movw	r5, #368	; 0x170
   12b7c:	movt	r5, #3
   12b80:	movw	r7, #38108	; 0x94dc
   12b84:	movt	r7, #1
   12b88:	movw	r6, #38176	; 0x9520
   12b8c:	movt	r6, #1
   12b90:	b	12ba8 <sprintf@plt+0x15d0>
   12b94:	mov	r0, r4
   12b98:	bl	12814 <sprintf@plt+0x123c>
   12b9c:	mov	r1, sp
   12ba0:	ldr	r0, [r5]
   12ba4:	bl	11398 <rb_dictionary_foreach_next@plt>
   12ba8:	mov	r1, sp
   12bac:	ldr	r0, [r5]
   12bb0:	bl	112fc <rb_dictionary_foreach_cur@plt>
   12bb4:	subs	r4, r0, #0
   12bb8:	beq	12bf4 <sprintf@plt+0x161c>
   12bbc:	ldr	r3, [r4, #460]	; 0x1cc
   12bc0:	add	r3, r3, #1
   12bc4:	str	r3, [r4, #460]	; 0x1cc
   12bc8:	mov	r3, r7
   12bcc:	mov	r2, r6
   12bd0:	mvn	r1, #0
   12bd4:	mov	r0, r4
   12bd8:	bl	129f4 <sprintf@plt+0x141c>
   12bdc:	ldr	r3, [r4, #460]	; 0x1cc
   12be0:	sub	r3, r3, #1
   12be4:	str	r3, [r4, #460]	; 0x1cc
   12be8:	cmp	r3, #0
   12bec:	bne	12b9c <sprintf@plt+0x15c4>
   12bf0:	b	12b94 <sprintf@plt+0x15bc>
   12bf4:	movw	r3, #372	; 0x174
   12bf8:	movt	r3, #3
   12bfc:	ldr	r4, [r3]
   12c00:	cmp	r4, #0
   12c04:	beq	12c80 <sprintf@plt+0x16a8>
   12c08:	ldr	r5, [r4, #8]
   12c0c:	mov	r6, r3
   12c10:	mov	r7, #0
   12c14:	ldr	r3, [r4]
   12c18:	ldr	r3, [r3, #28]
   12c1c:	cmp	r3, #0
   12c20:	beq	12c28 <sprintf@plt+0x1650>
   12c24:	blx	r3
   12c28:	ldr	r3, [r4, #8]
   12c2c:	cmp	r3, #0
   12c30:	ldrne	r2, [r4, #4]
   12c34:	strne	r2, [r3, #4]
   12c38:	ldreq	r3, [r4, #4]
   12c3c:	streq	r3, [r6, #4]
   12c40:	ldr	r3, [r4, #4]
   12c44:	cmp	r3, #0
   12c48:	ldrne	r2, [r4, #8]
   12c4c:	strne	r2, [r3, #8]
   12c50:	ldreq	r3, [r4, #8]
   12c54:	streq	r3, [r6]
   12c58:	str	r7, [r4, #4]
   12c5c:	str	r7, [r4, #8]
   12c60:	ldr	r3, [r6, #8]
   12c64:	sub	r3, r3, #1
   12c68:	str	r3, [r6, #8]
   12c6c:	cmp	r5, #0
   12c70:	beq	12c80 <sprintf@plt+0x16a8>
   12c74:	mov	r4, r5
   12c78:	ldr	r5, [r5, #8]
   12c7c:	b	12c14 <sprintf@plt+0x163c>
   12c80:	movw	r3, #368	; 0x170
   12c84:	movt	r3, #3
   12c88:	mov	r2, #0
   12c8c:	mov	r1, r2
   12c90:	ldr	r0, [r3]
   12c94:	bl	11464 <rb_dictionary_destroy@plt>
   12c98:	movw	r3, #65408	; 0xff80
   12c9c:	movt	r3, #2
   12ca0:	ldr	r0, [r3, #16]
   12ca4:	bl	11284 <rb_event_delete@plt>
   12ca8:	add	sp, sp, #12
   12cac:	ldrd	r4, [sp]
   12cb0:	ldrd	r6, [sp, #8]
   12cb4:	add	sp, sp, #16
   12cb8:	pop	{pc}		; (ldr pc, [sp], #4)
   12cbc:	str	r4, [sp, #-8]!
   12cc0:	str	lr, [sp, #4]
   12cc4:	sub	sp, sp, #8
   12cc8:	mov	r4, r0
   12ccc:	mov	r3, r0
   12cd0:	ldr	r2, [r3], #376	; 0x178
   12cd4:	movw	r0, #49012	; 0xbf74
   12cd8:	movt	r0, #2
   12cdc:	str	r3, [sp]
   12ce0:	add	r3, r4, #440	; 0x1b8
   12ce4:	movw	r1, #38184	; 0x9528
   12ce8:	movt	r1, #1
   12cec:	ldr	r0, [r0]
   12cf0:	bl	1153c <rb_helper_write@plt>
   12cf4:	mov	r0, r4
   12cf8:	bl	12960 <sprintf@plt+0x1388>
   12cfc:	add	sp, sp, #8
   12d00:	ldr	r4, [sp]
   12d04:	add	sp, sp, #4
   12d08:	pop	{pc}		; (ldr pc, [sp], #4)
   12d0c:	strd	r4, [sp, #-16]!
   12d10:	str	r6, [sp, #8]
   12d14:	str	lr, [sp, #12]
   12d18:	mov	r5, r0
   12d1c:	mov	r6, r1
   12d20:	ldr	r3, [r0, #464]	; 0x1d0
   12d24:	add	r3, r3, r1, lsl #4
   12d28:	mov	r2, #2
   12d2c:	str	r2, [r3, #12]
   12d30:	ldr	r3, [r0, #456]	; 0x1c8
   12d34:	sub	r3, r3, #1
   12d38:	str	r3, [r0, #456]	; 0x1c8
   12d3c:	cmp	r3, #0
   12d40:	bne	12d50 <sprintf@plt+0x1778>
   12d44:	ldrb	r3, [r0, #451]	; 0x1c3
   12d48:	cmp	r3, #0
   12d4c:	beq	12d68 <sprintf@plt+0x1790>
   12d50:	movw	r3, #372	; 0x174
   12d54:	movt	r3, #3
   12d58:	ldr	r4, [r3]
   12d5c:	cmp	r4, #0
   12d60:	bne	12d88 <sprintf@plt+0x17b0>
   12d64:	b	12d6c <sprintf@plt+0x1794>
   12d68:	bl	12cbc <sprintf@plt+0x16e4>
   12d6c:	ldrd	r4, [sp]
   12d70:	ldr	r6, [sp, #8]
   12d74:	add	sp, sp, #12
   12d78:	pop	{pc}		; (ldr pc, [sp], #4)
   12d7c:	ldr	r4, [r4, #8]
   12d80:	cmp	r4, #0
   12d84:	beq	12d6c <sprintf@plt+0x1794>
   12d88:	ldr	r3, [r4]
   12d8c:	ldr	r2, [r3, #44]	; 0x2c
   12d90:	cmp	r2, #0
   12d94:	beq	12d7c <sprintf@plt+0x17a4>
   12d98:	ldr	r1, [r3, #12]
   12d9c:	ldr	r3, [r5, #464]	; 0x1d0
   12da0:	add	r3, r3, r1, lsl #4
   12da4:	ldr	r3, [r3, #12]
   12da8:	cmp	r3, #1
   12dac:	bne	12d7c <sprintf@plt+0x17a4>
   12db0:	mov	r1, r6
   12db4:	mov	r0, r5
   12db8:	blx	r2
   12dbc:	b	12d7c <sprintf@plt+0x17a4>
   12dc0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12dc4:	strd	r6, [sp, #8]
   12dc8:	strd	r8, [sp, #16]
   12dcc:	strd	sl, [sp, #24]
   12dd0:	str	lr, [sp, #32]
   12dd4:	sub	sp, sp, #12
   12dd8:	cmp	r0, #5
   12ddc:	ble	12e54 <sprintf@plt+0x187c>
   12de0:	ldr	sl, [r1, #4]
   12de4:	ldr	r9, [r1, #8]
   12de8:	ldr	fp, [r1, #12]
   12dec:	ldr	r8, [r1, #16]
   12df0:	ldr	r3, [r1, #20]
   12df4:	str	r3, [sp, #4]
   12df8:	cmp	r0, #6
   12dfc:	ldrgt	r5, [r1, #24]
   12e00:	movwle	r5, #38588	; 0x96bc
   12e04:	movtle	r5, #1
   12e08:	mov	r2, #16
   12e0c:	mov	r1, #0
   12e10:	mov	r0, sl
   12e14:	bl	1138c <strtoull@plt>
   12e18:	mov	r4, r0
   12e1c:	subs	r6, r0, #1
   12e20:	sbc	r7, r1, #0
   12e24:	mvn	r2, #1
   12e28:	mov	r3, #0
   12e2c:	cmp	r7, r3
   12e30:	cmpeq	r6, r2
   12e34:	bls	12e70 <sprintf@plt+0x1898>
   12e38:	add	sp, sp, #12
   12e3c:	ldrd	r4, [sp]
   12e40:	ldrd	r6, [sp, #8]
   12e44:	ldrd	r8, [sp, #16]
   12e48:	ldrd	sl, [sp, #24]
   12e4c:	add	sp, sp, #32
   12e50:	pop	{pc}		; (ldr pc, [sp], #4)
   12e54:	mov	r2, r0
   12e58:	movw	r1, #38196	; 0x9534
   12e5c:	movt	r1, #1
   12e60:	mov	r0, #67	; 0x43
   12e64:	bl	122a0 <sprintf@plt+0xcc8>
   12e68:	mov	r0, #3
   12e6c:	bl	115c0 <exit@plt>
   12e70:	mov	r1, #468	; 0x1d4
   12e74:	mov	r0, #1
   12e78:	bl	11314 <calloc@plt>
   12e7c:	subs	r6, r0, #0
   12e80:	beq	13058 <sprintf@plt+0x1a80>
   12e84:	ldr	r3, [r6, #460]	; 0x1cc
   12e88:	add	r3, r3, #1
   12e8c:	str	r3, [r6, #460]	; 0x1cc
   12e90:	str	r4, [r6]
   12e94:	movw	r3, #368	; 0x170
   12e98:	movt	r3, #3
   12e9c:	mov	r1, r4
   12ea0:	ldr	r0, [r3]
   12ea4:	bl	1150c <rb_dictionary_find@plt>
   12ea8:	cmp	r0, #0
   12eac:	bne	1305c <sprintf@plt+0x1a84>
   12eb0:	movw	r3, #368	; 0x170
   12eb4:	movt	r3, #3
   12eb8:	mov	r2, r6
   12ebc:	ldr	r1, [r6]
   12ec0:	ldr	r0, [r3]
   12ec4:	bl	114c4 <rb_dictionary_add@plt>
   12ec8:	mov	r2, #16
   12ecc:	mov	r1, #0
   12ed0:	mov	r0, r5
   12ed4:	bl	1138c <strtoull@plt>
   12ed8:	str	r0, [r6, #4]
   12edc:	mov	r2, #54	; 0x36
   12ee0:	mov	r1, r9
   12ee4:	add	r0, r6, #8
   12ee8:	bl	11380 <rb_strlcpy@plt>
   12eec:	mov	r2, #10
   12ef0:	mov	r1, #0
   12ef4:	mov	r0, fp
   12ef8:	bl	11440 <strtol@plt>
   12efc:	strh	r0, [r6, #62]	; 0x3e
   12f00:	add	r1, r6, #64	; 0x40
   12f04:	mov	r0, r9
   12f08:	bl	113ec <rb_inet_pton_sock@plt>
   12f0c:	ldrh	r3, [r6, #64]	; 0x40
   12f10:	cmp	r3, #2
   12f14:	beq	13078 <sprintf@plt+0x1aa0>
   12f18:	ldrh	r3, [r6, #62]	; 0x3e
   12f1c:	rev16	r3, r3
   12f20:	strh	r3, [r6, #66]	; 0x42
   12f24:	mov	r2, #54	; 0x36
   12f28:	mov	r1, r8
   12f2c:	add	r0, r6, #192	; 0xc0
   12f30:	bl	11380 <rb_strlcpy@plt>
   12f34:	mov	r2, #10
   12f38:	mov	r1, #0
   12f3c:	ldr	r0, [sp, #4]
   12f40:	bl	11440 <strtol@plt>
   12f44:	strh	r0, [r6, #246]	; 0xf6
   12f48:	add	r1, r6, #248	; 0xf8
   12f4c:	mov	r0, r8
   12f50:	bl	113ec <rb_inet_pton_sock@plt>
   12f54:	ldrh	r3, [r6, #246]	; 0xf6
   12f58:	rev16	r3, r3
   12f5c:	strh	r3, [r6, #250]	; 0xfa
   12f60:	movw	r4, #38104	; 0x94d8
   12f64:	movt	r4, #1
   12f68:	mov	r2, #64	; 0x40
   12f6c:	mov	r1, r4
   12f70:	add	r0, r6, #376	; 0x178
   12f74:	bl	11380 <rb_strlcpy@plt>
   12f78:	mov	r2, #11
   12f7c:	mov	r1, r4
   12f80:	add	r0, r6, #440	; 0x1b8
   12f84:	bl	11380 <rb_strlcpy@plt>
   12f88:	movw	r3, #65408	; 0xff80
   12f8c:	movt	r3, #2
   12f90:	ldr	r1, [r3, #12]
   12f94:	lsl	r1, r1, #4
   12f98:	mov	r0, #1
   12f9c:	bl	11314 <calloc@plt>
   12fa0:	cmp	r0, #0
   12fa4:	beq	13088 <sprintf@plt+0x1ab0>
   12fa8:	str	r0, [r6, #464]	; 0x1d0
   12fac:	mov	r3, #1
   12fb0:	strb	r3, [r6, #451]	; 0x1c3
   12fb4:	movw	r3, #372	; 0x174
   12fb8:	movt	r3, #3
   12fbc:	ldr	r4, [r3]
   12fc0:	cmp	r4, #0
   12fc4:	beq	13024 <sprintf@plt+0x1a4c>
   12fc8:	mov	r5, #1
   12fcc:	ldr	r3, [r4]
   12fd0:	ldr	r1, [r3, #12]
   12fd4:	ldr	r2, [r6, #464]	; 0x1d0
   12fd8:	str	r3, [r2, r1, lsl #4]
   12fdc:	ldr	r0, [r3, #12]
   12fe0:	ldr	r1, [r6, #456]	; 0x1c8
   12fe4:	add	r1, r1, #1
   12fe8:	str	r1, [r6, #456]	; 0x1c8
   12fec:	ldr	r2, [r6, #464]	; 0x1d0
   12ff0:	add	r2, r2, r0, lsl #4
   12ff4:	str	r5, [r2, #12]
   12ff8:	ldr	r3, [r3, #32]
   12ffc:	mov	r0, r6
   13000:	blx	r3
   13004:	cmp	r0, #0
   13008:	beq	13038 <sprintf@plt+0x1a60>
   1300c:	ldrb	r3, [r6, #452]	; 0x1c4
   13010:	cmp	r3, #0
   13014:	bne	13024 <sprintf@plt+0x1a4c>
   13018:	ldr	r4, [r4, #8]
   1301c:	cmp	r4, #0
   13020:	bne	12fcc <sprintf@plt+0x19f4>
   13024:	mov	r3, #0
   13028:	strb	r3, [r6, #451]	; 0x1c3
   1302c:	ldr	r3, [r6, #456]	; 0x1c8
   13030:	cmp	r3, #0
   13034:	beq	1308c <sprintf@plt+0x1ab4>
   13038:	ldr	r3, [r6, #460]	; 0x1cc
   1303c:	sub	r3, r3, #1
   13040:	str	r3, [r6, #460]	; 0x1cc
   13044:	cmp	r3, #0
   13048:	bne	12e38 <sprintf@plt+0x1860>
   1304c:	mov	r0, r6
   13050:	bl	12814 <sprintf@plt+0x123c>
   13054:	b	12e38 <sprintf@plt+0x1860>
   13058:	bl	114ac <rb_outofmemory@plt>
   1305c:	mov	r2, sl
   13060:	movw	r1, #38272	; 0x9580
   13064:	movt	r1, #1
   13068:	mov	r0, #67	; 0x43
   1306c:	bl	122a0 <sprintf@plt+0xcc8>
   13070:	mov	r0, #3
   13074:	bl	115c0 <exit@plt>
   13078:	ldrh	r3, [r6, #62]	; 0x3e
   1307c:	rev16	r3, r3
   13080:	strh	r3, [r6, #66]	; 0x42
   13084:	b	12f24 <sprintf@plt+0x194c>
   13088:	bl	114ac <rb_outofmemory@plt>
   1308c:	mov	r0, r6
   13090:	bl	12cbc <sprintf@plt+0x16e4>
   13094:	b	13038 <sprintf@plt+0x1a60>
   13098:	strd	r4, [sp, #-16]!
   1309c:	str	r6, [sp, #8]
   130a0:	str	lr, [sp, #12]
   130a4:	cmp	r0, #1
   130a8:	ble	13130 <sprintf@plt+0x1b58>
   130ac:	mov	r6, r1
   130b0:	mov	r2, #16
   130b4:	mov	r1, #0
   130b8:	ldr	r0, [r6, #4]
   130bc:	bl	1138c <strtoull@plt>
   130c0:	subs	r4, r0, #1
   130c4:	sbc	r5, r1, #0
   130c8:	mvn	r2, #1
   130cc:	mov	r3, #0
   130d0:	cmp	r5, r3
   130d4:	cmpeq	r4, r2
   130d8:	bhi	1314c <sprintf@plt+0x1b74>
   130dc:	movw	r3, #368	; 0x170
   130e0:	movt	r3, #3
   130e4:	mov	r1, r0
   130e8:	ldr	r0, [r3]
   130ec:	bl	114a0 <rb_dictionary_retrieve@plt>
   130f0:	subs	r4, r0, #0
   130f4:	beq	13120 <sprintf@plt+0x1b48>
   130f8:	ldr	r3, [r4, #460]	; 0x1cc
   130fc:	add	r3, r3, #1
   13100:	str	r3, [r4, #460]	; 0x1cc
   13104:	mov	r0, r4
   13108:	bl	12960 <sprintf@plt+0x1388>
   1310c:	ldr	r3, [r4, #460]	; 0x1cc
   13110:	sub	r3, r3, #1
   13114:	str	r3, [r4, #460]	; 0x1cc
   13118:	cmp	r3, #0
   1311c:	beq	13168 <sprintf@plt+0x1b90>
   13120:	ldrd	r4, [sp]
   13124:	ldr	r6, [sp, #8]
   13128:	add	sp, sp, #12
   1312c:	pop	{pc}		; (ldr pc, [sp], #4)
   13130:	mov	r2, r0
   13134:	movw	r1, #38324	; 0x95b4
   13138:	movt	r1, #1
   1313c:	mov	r0, #67	; 0x43
   13140:	bl	122a0 <sprintf@plt+0xcc8>
   13144:	mov	r0, #3
   13148:	bl	115c0 <exit@plt>
   1314c:	ldr	r2, [r6, #4]
   13150:	movw	r1, #38400	; 0x9600
   13154:	movt	r1, #1
   13158:	mov	r0, #67	; 0x43
   1315c:	bl	122a0 <sprintf@plt+0xcc8>
   13160:	mov	r0, #3
   13164:	bl	115c0 <exit@plt>
   13168:	mov	r0, r4
   1316c:	bl	12814 <sprintf@plt+0x123c>
   13170:	b	13120 <sprintf@plt+0x1b48>
   13174:	str	r4, [sp, #-8]!
   13178:	str	lr, [sp, #4]
   1317c:	bl	14ac4 <sprintf@plt+0x34ec>
   13180:	movw	r3, #65492	; 0xffd4
   13184:	movt	r3, #2
   13188:	ldr	r2, [r3]
   1318c:	cmp	r2, #0
   13190:	ble	131b0 <sprintf@plt+0x1bd8>
   13194:	movw	r3, #65428	; 0xff94
   13198:	movt	r3, #2
   1319c:	add	r2, r3, r2, lsl #2
   131a0:	mov	r1, #0
   131a4:	str	r1, [r3], #4
   131a8:	cmp	r3, r2
   131ac:	bne	131a4 <sprintf@plt+0x1bcc>
   131b0:	movw	r3, #65428	; 0xff94
   131b4:	movt	r3, #2
   131b8:	ldr	r3, [r3, #40]	; 0x28
   131bc:	cmp	r3, #0
   131c0:	beq	131d0 <sprintf@plt+0x1bf8>
   131c4:	ldr	r4, [sp]
   131c8:	add	sp, sp, #4
   131cc:	pop	{pc}		; (ldr pc, [sp], #4)
   131d0:	movw	r0, #660	; 0x294
   131d4:	movt	r0, #3
   131d8:	movw	r3, #38532	; 0x9684
   131dc:	movt	r3, #1
   131e0:	mov	r2, #0
   131e4:	mov	r1, #2
   131e8:	ldrh	r0, [r0]
   131ec:	bl	112c0 <rb_socket@plt>
   131f0:	movw	r3, #65428	; 0xff94
   131f4:	movt	r3, #2
   131f8:	str	r0, [r3, #40]	; 0x28
   131fc:	cmp	r0, #0
   13200:	beq	131c4 <sprintf@plt+0x1bec>
   13204:	mov	r3, #0
   13208:	movw	r2, #16952	; 0x4238
   1320c:	movt	r2, #1
   13210:	mov	r1, #1
   13214:	bl	11290 <rb_setselect@plt>
   13218:	mov	r3, #1
   1321c:	mov	r2, #0
   13220:	movw	r1, #15232	; 0x3b80
   13224:	movt	r1, #1
   13228:	movw	r0, #38552	; 0x9698
   1322c:	movt	r0, #1
   13230:	bl	11548 <rb_event_add@plt>
   13234:	movw	r3, #65428	; 0xff94
   13238:	movt	r3, #2
   1323c:	str	r0, [r3, #44]	; 0x2c
   13240:	b	131c4 <sprintf@plt+0x1bec>
   13244:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13248:	strd	r6, [sp, #8]
   1324c:	strd	r8, [sp, #16]
   13250:	strd	sl, [sp, #24]
   13254:	str	lr, [sp, #32]
   13258:	sub	sp, sp, #1040	; 0x410
   1325c:	sub	sp, sp, #4
   13260:	mov	r6, r0
   13264:	mov	r4, #1024	; 0x400
   13268:	mov	r2, r4
   1326c:	mov	r1, #0
   13270:	add	r0, sp, #16
   13274:	bl	11344 <memset@plt>
   13278:	str	r4, [sp]
   1327c:	add	r3, sp, #16
   13280:	ldrb	r2, [r6, #20]
   13284:	mov	r1, #1
   13288:	add	r0, r6, #21
   1328c:	bl	14e34 <sprintf@plt+0x385c>
   13290:	subs	r5, r0, #0
   13294:	bgt	132b8 <sprintf@plt+0x1ce0>
   13298:	add	sp, sp, #1040	; 0x410
   1329c:	add	sp, sp, #4
   132a0:	ldrd	r4, [sp]
   132a4:	ldrd	r6, [sp, #8]
   132a8:	ldrd	r8, [sp, #16]
   132ac:	ldrd	sl, [sp, #24]
   132b0:	add	sp, sp, #32
   132b4:	pop	{pc}		; (ldr pc, [sp], #4)
   132b8:	ldr	r3, [r6, #12]
   132bc:	strh	r3, [sp, #16]
   132c0:	ldrb	r3, [r6, #278]	; 0x116
   132c4:	add	r3, r3, #1
   132c8:	uxtb	r3, r3
   132cc:	str	r3, [sp, #12]
   132d0:	strb	r3, [r6, #278]	; 0x116
   132d4:	movw	r3, #65428	; 0xff94
   132d8:	movt	r3, #2
   132dc:	ldr	r2, [r3, #48]	; 0x30
   132e0:	add	r2, r2, #1
   132e4:	str	r2, [r3, #48]	; 0x30
   132e8:	movw	r3, #65492	; 0xffd4
   132ec:	movt	r3, #2
   132f0:	ldr	r3, [r3]
   132f4:	cmp	r3, #0
   132f8:	ble	13298 <sprintf@plt+0x1cc0>
   132fc:	mov	r7, #0
   13300:	movw	r8, #65428	; 0xff94
   13304:	movt	r8, #2
   13308:	movw	r9, #660	; 0x294
   1330c:	movt	r9, #3
   13310:	movw	fp, #65492	; 0xffd4
   13314:	movt	fp, #2
   13318:	b	133a0 <sprintf@plt+0x1dc8>
   1331c:	mov	r3, #9
   13320:	b	13340 <sprintf@plt+0x1d68>
   13324:	mov	r3, #27
   13328:	b	13340 <sprintf@plt+0x1d68>
   1332c:	mov	r3, #81	; 0x51
   13330:	b	13340 <sprintf@plt+0x1d68>
   13334:	mov	r3, #243	; 0xf3
   13338:	b	13340 <sprintf@plt+0x1d68>
   1333c:	mov	r3, #3
   13340:	sdiv	r2, r1, r3
   13344:	mls	r3, r3, r2, r1
   13348:	cmp	r3, #0
   1334c:	bne	13390 <sprintf@plt+0x1db8>
   13350:	ldr	r0, [r8, #40]	; 0x28
   13354:	bl	1129c <rb_get_fd@plt>
   13358:	lsl	r3, r4, #7
   1335c:	add	r2, r3, r9
   13360:	ldrh	r3, [r3, r9]
   13364:	cmp	r3, #2
   13368:	moveq	r3, #16
   1336c:	movne	r3, #28
   13370:	str	r3, [sp, #4]
   13374:	str	r2, [sp]
   13378:	mov	r3, #0
   1337c:	mov	r2, r5
   13380:	add	r1, sp, #16
   13384:	bl	1132c <sendto@plt>
   13388:	cmp	r5, r0
   1338c:	beq	13474 <sprintf@plt+0x1e9c>
   13390:	add	r7, r7, #1
   13394:	ldr	r3, [fp]
   13398:	cmp	r3, r7
   1339c:	ble	133e4 <sprintf@plt+0x1e0c>
   133a0:	ldr	r2, [sp, #12]
   133a4:	sub	sl, r2, #1
   133a8:	add	r4, r7, sl
   133ac:	sdiv	r2, r4, r3
   133b0:	mls	r4, r3, r2, r4
   133b4:	ldr	r3, [r8, r4, lsl #2]
   133b8:	cmp	r3, #0
   133bc:	beq	13350 <sprintf@plt+0x1d78>
   133c0:	ldr	r1, [r8, #48]	; 0x30
   133c4:	sub	r3, r3, #1
   133c8:	cmp	r3, #3
   133cc:	ldrls	pc, [pc, r3, lsl #2]
   133d0:	b	13334 <sprintf@plt+0x1d5c>
   133d4:	andeq	r3, r1, ip, lsr r3
   133d8:	andeq	r3, r1, ip, lsl r3
   133dc:	andeq	r3, r1, r4, lsr #6
   133e0:	andeq	r3, r1, ip, lsr #6
   133e4:	cmp	r3, #0
   133e8:	ble	13298 <sprintf@plt+0x1cc0>
   133ec:	mov	r7, #0
   133f0:	movw	r9, #65428	; 0xff94
   133f4:	movt	r9, #2
   133f8:	movw	r8, #660	; 0x294
   133fc:	movt	r8, #3
   13400:	movw	fp, #65492	; 0xffd4
   13404:	movt	fp, #2
   13408:	b	1341c <sprintf@plt+0x1e44>
   1340c:	add	r7, r7, #1
   13410:	ldr	r3, [fp]
   13414:	cmp	r3, r7
   13418:	ble	13298 <sprintf@plt+0x1cc0>
   1341c:	add	r4, r7, sl
   13420:	sdiv	r2, r4, r3
   13424:	mls	r4, r3, r2, r4
   13428:	ldr	r3, [r9, r4, lsl #2]
   1342c:	cmp	r3, #0
   13430:	beq	1340c <sprintf@plt+0x1e34>
   13434:	ldr	r0, [r9, #40]	; 0x28
   13438:	bl	1129c <rb_get_fd@plt>
   1343c:	lsl	r3, r4, #7
   13440:	add	r2, r3, r8
   13444:	ldrh	r3, [r3, r8]
   13448:	cmp	r3, #2
   1344c:	moveq	r3, #16
   13450:	movne	r3, #28
   13454:	str	r3, [sp, #4]
   13458:	str	r2, [sp]
   1345c:	mov	r3, #0
   13460:	mov	r2, r5
   13464:	add	r1, sp, #16
   13468:	bl	1132c <sendto@plt>
   1346c:	cmp	r5, r0
   13470:	bne	1340c <sprintf@plt+0x1e34>
   13474:	cmn	r4, #1
   13478:	strne	r4, [r6, #288]	; 0x120
   1347c:	b	13298 <sprintf@plt+0x1cc0>
   13480:	str	r4, [sp, #-8]!
   13484:	str	lr, [sp, #4]
   13488:	subs	r4, r0, #0
   1348c:	beq	13504 <sprintf@plt+0x1f2c>
   13490:	ldr	r3, [r4, #8]
   13494:	cmp	r3, #0
   13498:	ldr	r2, [r4, #4]
   1349c:	strne	r2, [r3, #4]
   134a0:	movweq	r3, #65428	; 0xff94
   134a4:	movteq	r3, #2
   134a8:	streq	r2, [r3, #56]	; 0x38
   134ac:	ldr	r3, [r4, #4]
   134b0:	cmp	r3, #0
   134b4:	beq	13524 <sprintf@plt+0x1f4c>
   134b8:	ldr	r2, [r4, #8]
   134bc:	str	r2, [r3, #8]
   134c0:	mov	r3, #0
   134c4:	str	r3, [r4, #4]
   134c8:	str	r3, [r4, #8]
   134cc:	movw	r3, #65428	; 0xff94
   134d0:	movt	r3, #2
   134d4:	ldr	r2, [r3, #60]	; 0x3c
   134d8:	sub	r2, r2, #1
   134dc:	str	r2, [r3, #60]	; 0x3c
   134e0:	ldr	r0, [r4, #420]	; 0x1a4
   134e4:	cmp	r0, #0
   134e8:	beq	134f0 <sprintf@plt+0x1f18>
   134ec:	bl	113a4 <free@plt>
   134f0:	mov	r0, r4
   134f4:	bl	113a4 <free@plt>
   134f8:	ldr	r4, [sp]
   134fc:	add	sp, sp, #4
   13500:	pop	{pc}		; (ldr pc, [sp], #4)
   13504:	movw	r3, #38468	; 0x9644
   13508:	movt	r3, #1
   1350c:	mov	r2, #235	; 0xeb
   13510:	movw	r1, #38024	; 0x9488
   13514:	movt	r1, #1
   13518:	movw	r0, #38068	; 0x94b4
   1351c:	movt	r0, #1
   13520:	bl	11374 <__assert_fail@plt>
   13524:	movw	r3, #65428	; 0xff94
   13528:	movt	r3, #2
   1352c:	ldr	r2, [r4, #8]
   13530:	str	r2, [r3, #52]	; 0x34
   13534:	b	134c0 <sprintf@plt+0x1ee8>
   13538:	strd	r4, [sp, #-16]!
   1353c:	str	r6, [sp, #8]
   13540:	str	lr, [sp, #12]
   13544:	sub	sp, sp, #8
   13548:	mov	r5, r0
   1354c:	mov	r1, #428	; 0x1ac
   13550:	mov	r0, #1
   13554:	bl	11314 <calloc@plt>
   13558:	subs	r4, r0, #0
   1355c:	beq	135d8 <sprintf@plt+0x2000>
   13560:	bl	11404 <rb_current_time@plt>
   13564:	str	r0, [r4, #280]	; 0x118
   13568:	mov	r3, #3
   1356c:	strb	r3, [r4, #277]	; 0x115
   13570:	mov	r3, #4
   13574:	str	r3, [r4, #284]	; 0x11c
   13578:	str	r5, [r4, #424]	; 0x1a8
   1357c:	mov	r6, #2
   13580:	movw	r5, #65428	; 0xff94
   13584:	movt	r5, #2
   13588:	mov	r1, r6
   1358c:	add	r0, sp, #6
   13590:	bl	11554 <rb_get_random@plt>
   13594:	ldrh	r1, [sp, #6]
   13598:	ldr	r3, [r5, #52]	; 0x34
   1359c:	cmp	r3, #0
   135a0:	beq	13628 <sprintf@plt+0x2050>
   135a4:	ldr	r2, [r3]
   135a8:	ldr	r2, [r2, #12]
   135ac:	cmp	r1, r2
   135b0:	beq	13588 <sprintf@plt+0x1fb0>
   135b4:	mov	r2, r3
   135b8:	ldr	r2, [r2, #8]
   135bc:	cmp	r2, #0
   135c0:	beq	135dc <sprintf@plt+0x2004>
   135c4:	ldr	r0, [r2]
   135c8:	ldr	r0, [r0, #12]
   135cc:	cmp	r1, r0
   135d0:	bne	135b8 <sprintf@plt+0x1fe0>
   135d4:	b	13588 <sprintf@plt+0x1fb0>
   135d8:	bl	114ac <rb_outofmemory@plt>
   135dc:	str	r1, [r4, #12]
   135e0:	mov	r2, r4
   135e4:	str	r4, [r4]
   135e8:	mov	r1, #0
   135ec:	str	r1, [r4, #4]
   135f0:	str	r3, [r4, #8]
   135f4:	str	r4, [r3, #4]
   135f8:	movw	r3, #65428	; 0xff94
   135fc:	movt	r3, #2
   13600:	str	r2, [r3, #52]	; 0x34
   13604:	ldr	r2, [r3, #60]	; 0x3c
   13608:	add	r2, r2, #1
   1360c:	str	r2, [r3, #60]	; 0x3c
   13610:	mov	r0, r4
   13614:	add	sp, sp, #8
   13618:	ldrd	r4, [sp]
   1361c:	ldr	r6, [sp, #8]
   13620:	add	sp, sp, #12
   13624:	pop	{pc}		; (ldr pc, [sp], #4)
   13628:	str	r1, [r4, #12]
   1362c:	mov	r2, r4
   13630:	str	r4, [r4]
   13634:	mov	r3, #0
   13638:	str	r3, [r4, #4]
   1363c:	str	r3, [r4, #8]
   13640:	movw	r3, #65428	; 0xff94
   13644:	movt	r3, #2
   13648:	ldr	r3, [r3, #56]	; 0x38
   1364c:	cmp	r3, #0
   13650:	bne	135f8 <sprintf@plt+0x2020>
   13654:	movw	r3, #65428	; 0xff94
   13658:	movt	r3, #2
   1365c:	str	r4, [r3, #56]	; 0x38
   13660:	b	135f8 <sprintf@plt+0x2020>
   13664:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13668:	strd	r6, [sp, #8]
   1366c:	str	r8, [sp, #16]
   13670:	str	lr, [sp, #20]
   13674:	mov	r5, r1
   13678:	mov	r6, r3
   1367c:	subs	r4, r2, #0
   13680:	beq	136b4 <sprintf@plt+0x20dc>
   13684:	mov	r2, #256	; 0x100
   13688:	mov	r1, r5
   1368c:	add	r0, r4, #21
   13690:	bl	11380 <rb_strlcpy@plt>
   13694:	strb	r6, [r4, #20]
   13698:	mov	r0, r4
   1369c:	bl	13244 <sprintf@plt+0x1c6c>
   136a0:	ldrd	r4, [sp]
   136a4:	ldrd	r6, [sp, #8]
   136a8:	ldr	r8, [sp, #16]
   136ac:	add	sp, sp, #20
   136b0:	pop	{pc}		; (ldr pc, [sp], #4)
   136b4:	bl	13538 <sprintf@plt+0x1f60>
   136b8:	mov	r4, r0
   136bc:	mov	r0, r5
   136c0:	bl	113f8 <strlen@plt>
   136c4:	add	r0, r0, #1
   136c8:	bl	114dc <malloc@plt>
   136cc:	subs	r7, r0, #0
   136d0:	beq	136e8 <sprintf@plt+0x2110>
   136d4:	mov	r1, r5
   136d8:	mov	r0, r7
   136dc:	bl	11458 <strcpy@plt>
   136e0:	str	r7, [r4, #420]	; 0x1a4
   136e4:	b	13684 <sprintf@plt+0x20ac>
   136e8:	bl	114ac <rb_outofmemory@plt>
   136ec:	str	r4, [sp, #-8]!
   136f0:	str	lr, [sp, #4]
   136f4:	mov	ip, r1
   136f8:	subs	r1, r0, #0
   136fc:	beq	1371c <sprintf@plt+0x2144>
   13700:	mov	r3, r2
   13704:	mov	r2, #0
   13708:	mov	r0, ip
   1370c:	bl	13664 <sprintf@plt+0x208c>
   13710:	ldr	r4, [sp]
   13714:	add	sp, sp, #4
   13718:	pop	{pc}		; (ldr pc, [sp], #4)
   1371c:	ldr	r3, [pc, #20]	; 13738 <sprintf@plt+0x2160>
   13720:	movw	r2, #425	; 0x1a9
   13724:	movw	r1, #38572	; 0x96ac
   13728:	movt	r1, #1
   1372c:	movw	r0, #38580	; 0x96b4
   13730:	movt	r0, #1
   13734:	bl	11374 <__assert_fail@plt>
   13738:	andeq	r9, r1, r4, asr r6
   1373c:	str	r4, [sp, #-8]!
   13740:	str	lr, [sp, #4]
   13744:	bl	13174 <sprintf@plt+0x1b9c>
   13748:	ldr	r4, [sp]
   1374c:	add	sp, sp, #4
   13750:	pop	{pc}		; (ldr pc, [sp], #4)
   13754:	str	r4, [sp, #-8]!
   13758:	str	lr, [sp, #4]
   1375c:	movw	r4, #65428	; 0xff94
   13760:	movt	r4, #2
   13764:	ldr	r0, [r4, #40]	; 0x28
   13768:	bl	11434 <rb_close@plt>
   1376c:	mov	r3, #0
   13770:	str	r3, [r4, #40]	; 0x28
   13774:	ldr	r0, [r4, #44]	; 0x2c
   13778:	bl	11284 <rb_event_delete@plt>
   1377c:	bl	13174 <sprintf@plt+0x1b9c>
   13780:	ldr	r4, [sp]
   13784:	add	sp, sp, #4
   13788:	pop	{pc}		; (ldr pc, [sp], #4)
   1378c:	strd	r4, [sp, #-16]!
   13790:	str	r6, [sp, #8]
   13794:	str	lr, [sp, #12]
   13798:	sub	sp, sp, #256	; 0x100
   1379c:	mov	r4, r1
   137a0:	subs	r1, r0, #0
   137a4:	beq	137f0 <sprintf@plt+0x2218>
   137a8:	mov	r5, r2
   137ac:	mov	r2, #256	; 0x100
   137b0:	mov	r0, sp
   137b4:	bl	11380 <rb_strlcpy@plt>
   137b8:	mov	r1, #46	; 0x2e
   137bc:	mov	r0, sp
   137c0:	bl	112f0 <strchr@plt>
   137c4:	cmp	r0, #0
   137c8:	beq	1380c <sprintf@plt+0x2234>
   137cc:	mov	r2, r5
   137d0:	mov	r1, r4
   137d4:	mov	r0, sp
   137d8:	bl	136ec <sprintf@plt+0x2114>
   137dc:	add	sp, sp, #256	; 0x100
   137e0:	ldrd	r4, [sp]
   137e4:	ldr	r6, [sp, #8]
   137e8:	add	sp, sp, #12
   137ec:	pop	{pc}		; (ldr pc, [sp], #4)
   137f0:	ldr	r3, [pc, #124]	; 13874 <sprintf@plt+0x229c>
   137f4:	mov	r2, #412	; 0x19c
   137f8:	movw	r1, #38572	; 0x96ac
   137fc:	movt	r1, #1
   13800:	movw	r0, #38580	; 0x96b4
   13804:	movt	r0, #1
   13808:	bl	11374 <__assert_fail@plt>
   1380c:	movw	r3, #404	; 0x194
   13810:	movt	r3, #3
   13814:	ldrb	r3, [r3]
   13818:	cmp	r3, #0
   1381c:	beq	137cc <sprintf@plt+0x21f4>
   13820:	mov	r0, sp
   13824:	bl	113f8 <strlen@plt>
   13828:	mov	r6, r0
   1382c:	movw	r0, #404	; 0x194
   13830:	movt	r0, #3
   13834:	bl	113f8 <strlen@plt>
   13838:	add	r0, r6, r0
   1383c:	add	r0, r0, #2
   13840:	cmp	r0, #254	; 0xfe
   13844:	bhi	137cc <sprintf@plt+0x21f4>
   13848:	add	r3, sp, #256	; 0x100
   1384c:	add	r3, r3, r6
   13850:	mov	r2, #46	; 0x2e
   13854:	strb	r2, [r3, #-256]	; 0xffffff00
   13858:	add	r3, sp, #256	; 0x100
   1385c:	add	r0, r3, r6
   13860:	movw	r1, #404	; 0x194
   13864:	movt	r1, #3
   13868:	sub	r0, r0, #255	; 0xff
   1386c:	bl	11458 <strcpy@plt>
   13870:	b	137cc <sprintf@plt+0x21f4>
   13874:	andeq	r9, r1, r0, ror r6
   13878:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1387c:	strd	r6, [sp, #8]
   13880:	strd	r8, [sp, #16]
   13884:	strd	sl, [sp, #24]
   13888:	str	lr, [sp, #32]
   1388c:	sub	sp, sp, #140	; 0x8c
   13890:	str	r0, [sp, #132]	; 0x84
   13894:	ldrh	r0, [r2]
   13898:	cmp	r0, #2
   1389c:	beq	138c4 <sprintf@plt+0x22ec>
   138a0:	cmp	r0, #10
   138a4:	beq	13908 <sprintf@plt+0x2330>
   138a8:	add	sp, sp, #140	; 0x8c
   138ac:	ldrd	r4, [sp]
   138b0:	ldrd	r6, [sp, #8]
   138b4:	ldrd	r8, [sp, #16]
   138b8:	ldrd	sl, [sp, #24]
   138bc:	add	sp, sp, #32
   138c0:	pop	{pc}		; (ldr pc, [sp], #4)
   138c4:	ldrb	ip, [r2, #6]
   138c8:	ldrb	lr, [r2, #5]
   138cc:	ldrb	r4, [r2, #4]
   138d0:	movw	r0, #38592	; 0x96c0
   138d4:	movt	r0, #1
   138d8:	cmp	r3, #0
   138dc:	moveq	r3, r0
   138e0:	str	r3, [sp, #12]
   138e4:	str	r4, [sp, #8]
   138e8:	str	lr, [sp, #4]
   138ec:	str	ip, [sp]
   138f0:	ldrb	r3, [r2, #7]
   138f4:	movw	r2, #38620	; 0x96dc
   138f8:	movt	r2, #1
   138fc:	ldr	r0, [sp, #132]	; 0x84
   13900:	bl	1156c <snprintf@plt>
   13904:	b	138a8 <sprintf@plt+0x22d0>
   13908:	ldrb	r7, [r2, #23]
   1390c:	lsr	r0, r7, #4
   13910:	str	r0, [sp]
   13914:	ldrb	r0, [r2, #22]
   13918:	and	ip, r0, #15
   1391c:	str	ip, [sp, #4]
   13920:	lsr	r0, r0, #4
   13924:	str	r0, [sp, #8]
   13928:	ldrb	r0, [r2, #21]
   1392c:	and	ip, r0, #15
   13930:	str	ip, [sp, #12]
   13934:	lsr	r0, r0, #4
   13938:	str	r0, [sp, #16]
   1393c:	ldrb	r0, [r2, #20]
   13940:	and	ip, r0, #15
   13944:	str	ip, [sp, #20]
   13948:	lsr	r0, r0, #4
   1394c:	str	r0, [sp, #24]
   13950:	ldrb	r0, [r2, #19]
   13954:	and	ip, r0, #15
   13958:	str	ip, [sp, #28]
   1395c:	lsr	r0, r0, #4
   13960:	str	r0, [sp, #32]
   13964:	ldrb	r0, [r2, #18]
   13968:	and	ip, r0, #15
   1396c:	str	ip, [sp, #36]	; 0x24
   13970:	lsr	r0, r0, #4
   13974:	str	r0, [sp, #40]	; 0x28
   13978:	ldrb	r0, [r2, #17]
   1397c:	and	ip, r0, #15
   13980:	str	ip, [sp, #44]	; 0x2c
   13984:	lsr	r0, r0, #4
   13988:	str	r0, [sp, #48]	; 0x30
   1398c:	ldrb	r0, [r2, #16]
   13990:	and	ip, r0, #15
   13994:	str	ip, [sp, #52]	; 0x34
   13998:	lsr	r0, r0, #4
   1399c:	str	r0, [sp, #56]	; 0x38
   139a0:	ldrb	r0, [r2, #15]
   139a4:	and	ip, r0, #15
   139a8:	str	ip, [sp, #60]	; 0x3c
   139ac:	lsr	r0, r0, #4
   139b0:	str	r0, [sp, #64]	; 0x40
   139b4:	ldrb	r0, [r2, #14]
   139b8:	and	ip, r0, #15
   139bc:	str	ip, [sp, #68]	; 0x44
   139c0:	lsr	r0, r0, #4
   139c4:	str	r0, [sp, #72]	; 0x48
   139c8:	ldrb	r0, [r2, #13]
   139cc:	and	ip, r0, #15
   139d0:	str	ip, [sp, #76]	; 0x4c
   139d4:	lsr	r0, r0, #4
   139d8:	ldrb	ip, [r2, #12]
   139dc:	and	lr, ip, #15
   139e0:	str	lr, [sp, #84]	; 0x54
   139e4:	lsr	ip, ip, #4
   139e8:	ldrb	lr, [r2, #11]
   139ec:	and	r8, lr, #15
   139f0:	lsr	lr, lr, #4
   139f4:	ldrb	r4, [r2, #10]
   139f8:	and	r9, r4, #15
   139fc:	lsr	r4, r4, #4
   13a00:	ldrb	r5, [r2, #9]
   13a04:	and	sl, r5, #15
   13a08:	lsr	r5, r5, #4
   13a0c:	ldrb	r2, [r2, #8]
   13a10:	and	fp, r2, #15
   13a14:	lsr	r2, r2, #4
   13a18:	movw	r6, #38608	; 0x96d0
   13a1c:	movt	r6, #1
   13a20:	cmp	r3, #0
   13a24:	moveq	r3, r6
   13a28:	str	r3, [sp, #124]	; 0x7c
   13a2c:	str	r2, [sp, #120]	; 0x78
   13a30:	str	fp, [sp, #116]	; 0x74
   13a34:	str	r5, [sp, #112]	; 0x70
   13a38:	str	sl, [sp, #108]	; 0x6c
   13a3c:	str	r4, [sp, #104]	; 0x68
   13a40:	str	r9, [sp, #100]	; 0x64
   13a44:	str	lr, [sp, #96]	; 0x60
   13a48:	str	r8, [sp, #92]	; 0x5c
   13a4c:	str	ip, [sp, #88]	; 0x58
   13a50:	str	r0, [sp, #80]	; 0x50
   13a54:	and	r3, r7, #15
   13a58:	movw	r2, #38636	; 0x96ec
   13a5c:	movt	r2, #1
   13a60:	ldr	r0, [sp, #132]	; 0x84
   13a64:	bl	1156c <snprintf@plt>
   13a68:	b	138a8 <sprintf@plt+0x22d0>
   13a6c:	strd	r4, [sp, #-16]!
   13a70:	str	r6, [sp, #8]
   13a74:	str	lr, [sp, #12]
   13a78:	mov	r5, r1
   13a7c:	subs	r4, r2, #0
   13a80:	beq	13ab8 <sprintf@plt+0x24e0>
   13a84:	mov	r3, #0
   13a88:	mov	r2, r5
   13a8c:	mov	r1, #256	; 0x100
   13a90:	add	r0, r4, #21
   13a94:	bl	13878 <sprintf@plt+0x22a0>
   13a98:	mov	r3, #12
   13a9c:	strb	r3, [r4, #20]
   13aa0:	mov	r0, r4
   13aa4:	bl	13244 <sprintf@plt+0x1c6c>
   13aa8:	ldrd	r4, [sp]
   13aac:	ldr	r6, [sp, #8]
   13ab0:	add	sp, sp, #12
   13ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ab8:	bl	13538 <sprintf@plt+0x1f60>
   13abc:	mov	r4, r0
   13ac0:	mov	r2, #128	; 0x80
   13ac4:	mov	r1, r5
   13ac8:	add	r0, r0, #292	; 0x124
   13acc:	bl	1141c <memcpy@plt>
   13ad0:	mov	r1, #256	; 0x100
   13ad4:	mov	r0, #1
   13ad8:	bl	11314 <calloc@plt>
   13adc:	cmp	r0, #0
   13ae0:	strne	r0, [r4, #420]	; 0x1a4
   13ae4:	bne	13a84 <sprintf@plt+0x24ac>
   13ae8:	bl	114ac <rb_outofmemory@plt>
   13aec:	str	r4, [sp, #-8]!
   13af0:	str	lr, [sp, #4]
   13af4:	mov	r4, r0
   13af8:	ldrb	r3, [r0, #277]	; 0x115
   13afc:	sub	r3, r3, #1
   13b00:	uxtb	r3, r3
   13b04:	strb	r3, [r0, #277]	; 0x115
   13b08:	cmp	r3, #0
   13b0c:	beq	13b38 <sprintf@plt+0x2560>
   13b10:	ldrb	r3, [r0, #20]
   13b14:	cmp	r3, #12
   13b18:	beq	13b58 <sprintf@plt+0x2580>
   13b1c:	cmp	r3, #28
   13b20:	beq	13b6c <sprintf@plt+0x2594>
   13b24:	cmp	r3, #1
   13b28:	beq	13b6c <sprintf@plt+0x2594>
   13b2c:	ldr	r4, [sp]
   13b30:	add	sp, sp, #4
   13b34:	pop	{pc}		; (ldr pc, [sp], #4)
   13b38:	ldr	r3, [r0, #424]	; 0x1a8
   13b3c:	ldr	r2, [r3, #4]
   13b40:	mov	r1, #0
   13b44:	ldr	r0, [r3]
   13b48:	blx	r2
   13b4c:	mov	r0, r4
   13b50:	bl	13480 <sprintf@plt+0x1ea8>
   13b54:	b	13b2c <sprintf@plt+0x2554>
   13b58:	mov	r2, r0
   13b5c:	add	r1, r0, #292	; 0x124
   13b60:	mov	r0, #0
   13b64:	bl	13a6c <sprintf@plt+0x2494>
   13b68:	b	13b2c <sprintf@plt+0x2554>
   13b6c:	mov	r2, r4
   13b70:	ldr	r1, [r4, #420]	; 0x1a4
   13b74:	mov	r0, #0
   13b78:	bl	13664 <sprintf@plt+0x208c>
   13b7c:	b	13b2c <sprintf@plt+0x2554>
   13b80:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13b84:	strd	r6, [sp, #8]
   13b88:	str	r8, [sp, #16]
   13b8c:	str	lr, [sp, #20]
   13b90:	bl	11404 <rb_current_time@plt>
   13b94:	movw	r3, #65428	; 0xff94
   13b98:	movt	r3, #2
   13b9c:	ldr	r3, [r3, #52]	; 0x34
   13ba0:	cmp	r3, #0
   13ba4:	beq	13c28 <sprintf@plt+0x2650>
   13ba8:	mov	r8, r0
   13bac:	ldr	r6, [r3, #8]
   13bb0:	mov	r5, #0
   13bb4:	movw	r7, #65428	; 0xff94
   13bb8:	movt	r7, #2
   13bbc:	b	13c0c <sprintf@plt+0x2634>
   13bc0:	ldr	r1, [r0, #288]	; 0x120
   13bc4:	ldr	r2, [r7, r1, lsl #2]
   13bc8:	add	r2, r2, #1
   13bcc:	str	r2, [r7, r1, lsl #2]
   13bd0:	str	r8, [r0, #280]	; 0x118
   13bd4:	lsl	r3, r3, #1
   13bd8:	str	r3, [r0, #284]	; 0x11c
   13bdc:	bl	13aec <sprintf@plt+0x2514>
   13be0:	cmp	r4, r5
   13be4:	movge	r3, #0
   13be8:	movlt	r3, #1
   13bec:	cmp	r5, #0
   13bf0:	moveq	r3, #1
   13bf4:	cmp	r3, #0
   13bf8:	movne	r5, r4
   13bfc:	cmp	r6, #0
   13c00:	beq	13c28 <sprintf@plt+0x2650>
   13c04:	mov	r3, r6
   13c08:	ldr	r6, [r6, #8]
   13c0c:	ldr	r0, [r3]
   13c10:	ldr	r3, [r0, #284]	; 0x11c
   13c14:	ldr	r4, [r0, #280]	; 0x118
   13c18:	add	r4, r3, r4
   13c1c:	cmp	r8, r4
   13c20:	blt	13be0 <sprintf@plt+0x2608>
   13c24:	b	13bc0 <sprintf@plt+0x25e8>
   13c28:	ldrd	r4, [sp]
   13c2c:	ldrd	r6, [sp, #8]
   13c30:	ldr	r8, [sp, #16]
   13c34:	add	sp, sp, #20
   13c38:	pop	{pc}		; (ldr pc, [sp], #4)
   13c3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13c40:	strd	r6, [sp, #8]
   13c44:	strd	r8, [sp, #16]
   13c48:	strd	sl, [sp, #24]
   13c4c:	str	lr, [sp, #32]
   13c50:	sub	sp, sp, #1552	; 0x610
   13c54:	sub	sp, sp, #4
   13c58:	mov	r3, #128	; 0x80
   13c5c:	str	r3, [sp, #512]	; 0x200
   13c60:	bl	1129c <rb_get_fd@plt>
   13c64:	add	r3, sp, #512	; 0x200
   13c68:	str	r3, [sp, #4]
   13c6c:	add	r3, sp, #384	; 0x180
   13c70:	str	r3, [sp]
   13c74:	mov	r3, #0
   13c78:	movw	r2, #1036	; 0x40c
   13c7c:	add	r1, sp, #516	; 0x204
   13c80:	bl	11590 <recvfrom@plt>
   13c84:	add	r3, r0, #1
   13c88:	cmp	r3, #1
   13c8c:	bls	1421c <sprintf@plt+0x2c44>
   13c90:	mov	r6, r0
   13c94:	cmp	r0, #12
   13c98:	movle	r0, #1
   13c9c:	bgt	13cc0 <sprintf@plt+0x26e8>
   13ca0:	add	sp, sp, #1552	; 0x610
   13ca4:	add	sp, sp, #4
   13ca8:	ldrd	r4, [sp]
   13cac:	ldrd	r6, [sp, #8]
   13cb0:	ldrd	r8, [sp, #16]
   13cb4:	ldrd	sl, [sp, #24]
   13cb8:	add	sp, sp, #32
   13cbc:	pop	{pc}		; (ldr pc, [sp], #4)
   13cc0:	add	r1, sp, #528	; 0x210
   13cc4:	ldrh	r2, [r1, #-6]
   13cc8:	rev16	r2, r2
   13ccc:	strh	r2, [r1, #-6]
   13cd0:	ldrh	r2, [r1, #-8]
   13cd4:	rev16	r2, r2
   13cd8:	uxth	r0, r2
   13cdc:	str	r0, [sp, #20]
   13ce0:	strh	r2, [r1, #-8]
   13ce4:	ldrh	r2, [r1, #-4]
   13ce8:	rev16	r2, r2
   13cec:	strh	r2, [r1, #-4]
   13cf0:	ldrh	r2, [r1, #-2]
   13cf4:	rev16	r2, r2
   13cf8:	strh	r2, [r1, #-2]
   13cfc:	ldrh	r1, [r1, #-12]
   13d00:	movw	r3, #65428	; 0xff94
   13d04:	movt	r3, #2
   13d08:	ldr	r3, [r3, #52]	; 0x34
   13d0c:	cmp	r3, #0
   13d10:	beq	14224 <sprintf@plt+0x2c4c>
   13d14:	ldr	r7, [r3]
   13d18:	ldr	r2, [r7, #12]
   13d1c:	cmp	r1, r2
   13d20:	beq	13d40 <sprintf@plt+0x2768>
   13d24:	ldr	r3, [r3, #8]
   13d28:	cmp	r3, #0
   13d2c:	beq	13d84 <sprintf@plt+0x27ac>
   13d30:	ldr	r7, [r3]
   13d34:	ldr	r2, [r7, #12]
   13d38:	cmp	r1, r2
   13d3c:	bne	13d24 <sprintf@plt+0x274c>
   13d40:	movw	r3, #65492	; 0xffd4
   13d44:	movt	r3, #2
   13d48:	ldr	fp, [r3]
   13d4c:	cmp	fp, #0
   13d50:	movle	r5, #0
   13d54:	ble	13e38 <sprintf@plt+0x2860>
   13d58:	add	r3, sp, #384	; 0x180
   13d5c:	ldrh	sl, [r3]
   13d60:	ldrh	r9, [r3, #2]
   13d64:	ldr	r3, [sp, #388]	; 0x184
   13d68:	str	r3, [sp, #12]
   13d6c:	ldr	r5, [pc, #1216]	; 14234 <sprintf@plt+0x2c5c>
   13d70:	mov	r8, #0
   13d74:	movw	r3, #44784	; 0xaef0
   13d78:	movt	r3, #2
   13d7c:	str	r3, [sp, #16]
   13d80:	b	13da4 <sprintf@plt+0x27cc>
   13d84:	mov	r0, #1
   13d88:	b	13ca0 <sprintf@plt+0x26c8>
   13d8c:	cmp	sl, #2
   13d90:	beq	13e08 <sprintf@plt+0x2830>
   13d94:	add	r8, r8, #1
   13d98:	add	r5, r5, #128	; 0x80
   13d9c:	cmp	fp, r8
   13da0:	beq	13e34 <sprintf@plt+0x285c>
   13da4:	mov	r4, r5
   13da8:	ldrh	r3, [r5, #-8]
   13dac:	cmp	r3, #2
   13db0:	beq	13d8c <sprintf@plt+0x27b4>
   13db4:	cmp	r3, #10
   13db8:	bne	13d94 <sprintf@plt+0x27bc>
   13dbc:	cmp	sl, #10
   13dc0:	bne	13d94 <sprintf@plt+0x27bc>
   13dc4:	ldrh	r3, [r5, #-6]
   13dc8:	cmp	r3, r9
   13dcc:	bne	13d94 <sprintf@plt+0x27bc>
   13dd0:	mov	r2, #16
   13dd4:	add	r1, sp, #392	; 0x188
   13dd8:	mov	r0, r5
   13ddc:	bl	1126c <memcmp@plt>
   13de0:	cmp	r0, #0
   13de4:	beq	13e6c <sprintf@plt+0x2894>
   13de8:	mov	r2, #16
   13dec:	ldr	r1, [sp, #16]
   13df0:	mov	r0, r5
   13df4:	bl	1126c <memcmp@plt>
   13df8:	cmp	r0, #0
   13dfc:	bne	13d94 <sprintf@plt+0x27bc>
   13e00:	mov	r5, #1
   13e04:	b	13e38 <sprintf@plt+0x2860>
   13e08:	ldrh	r3, [r5, #-6]
   13e0c:	cmp	r3, r9
   13e10:	bne	13d94 <sprintf@plt+0x27bc>
   13e14:	ldr	r3, [r5, #-4]
   13e18:	cmp	r3, #0
   13e1c:	beq	13e74 <sprintf@plt+0x289c>
   13e20:	ldr	r2, [sp, #12]
   13e24:	cmp	r3, r2
   13e28:	bne	13d94 <sprintf@plt+0x27bc>
   13e2c:	mov	r5, #1
   13e30:	b	13e38 <sprintf@plt+0x2860>
   13e34:	mov	r5, #0
   13e38:	ldr	r3, [r7, #288]	; 0x120
   13e3c:	cmp	r3, r5
   13e40:	beq	13e58 <sprintf@plt+0x2880>
   13e44:	movw	r3, #65428	; 0xff94
   13e48:	movt	r3, #2
   13e4c:	ldr	r2, [r3, r5, lsl #2]
   13e50:	add	r2, r2, #3
   13e54:	str	r2, [r3, r5, lsl #2]
   13e58:	ldr	r3, [sp, #20]
   13e5c:	cmp	r3, #1
   13e60:	beq	13e7c <sprintf@plt+0x28a4>
   13e64:	mov	r0, #1
   13e68:	b	13ca0 <sprintf@plt+0x26c8>
   13e6c:	mov	r5, #1
   13e70:	b	13e38 <sprintf@plt+0x2860>
   13e74:	mov	r5, #1
   13e78:	b	13e38 <sprintf@plt+0x2860>
   13e7c:	add	r3, sp, #516	; 0x204
   13e80:	add	r6, r3, r6
   13e84:	mov	r3, #256	; 0x100
   13e88:	str	r3, [sp]
   13e8c:	add	r3, sp, #28
   13e90:	add	r2, sp, #528	; 0x210
   13e94:	mov	r1, r6
   13e98:	add	r0, sp, #516	; 0x204
   13e9c:	bl	14ca4 <sprintf@plt+0x36cc>
   13ea0:	cmp	r0, #0
   13ea4:	ble	13e64 <sprintf@plt+0x288c>
   13ea8:	add	r1, r7, #21
   13eac:	add	r0, sp, #28
   13eb0:	bl	113c8 <rb_strcasecmp@plt>
   13eb4:	cmp	r0, #0
   13eb8:	bne	1422c <sprintf@plt+0x2c54>
   13ebc:	ldrb	r3, [sp, #519]	; 0x207
   13ec0:	ands	r3, r3, #15
   13ec4:	bne	14010 <sprintf@plt+0x2a38>
   13ec8:	add	r3, sp, #516	; 0x204
   13ecc:	ldrh	r3, [r3, #6]
   13ed0:	cmp	r3, #0
   13ed4:	bne	13efc <sprintf@plt+0x2924>
   13ed8:	ldr	r3, [r7, #424]	; 0x1a8
   13edc:	ldr	r2, [r3, #4]
   13ee0:	mov	r1, #0
   13ee4:	ldr	r0, [r3]
   13ee8:	blx	r2
   13eec:	mov	r0, r7
   13ef0:	bl	13480 <sprintf@plt+0x1ea8>
   13ef4:	mov	r0, #1
   13ef8:	b	13ca0 <sprintf@plt+0x26c8>
   13efc:	add	r3, sp, #516	; 0x204
   13f00:	ldrh	r3, [r3, #4]
   13f04:	cmp	r3, #0
   13f08:	addeq	r4, sp, #528	; 0x210
   13f0c:	beq	13f4c <sprintf@plt+0x2974>
   13f10:	add	r4, sp, #528	; 0x210
   13f14:	add	r8, sp, #516	; 0x204
   13f18:	mov	r1, r6
   13f1c:	mov	r0, r4
   13f20:	bl	14ce8 <sprintf@plt+0x3710>
   13f24:	cmp	r0, #0
   13f28:	blt	1410c <sprintf@plt+0x2b34>
   13f2c:	add	r0, r0, #4
   13f30:	add	r4, r4, r0
   13f34:	ldrh	r3, [r8, #4]
   13f38:	sub	r3, r3, #1
   13f3c:	uxth	r3, r3
   13f40:	strh	r3, [r8, #4]
   13f44:	cmp	r3, #0
   13f48:	bne	13f18 <sprintf@plt+0x2940>
   13f4c:	add	r3, sp, #516	; 0x204
   13f50:	ldrh	r3, [r3, #6]
   13f54:	cmp	r3, #0
   13f58:	cmpne	r6, r4
   13f5c:	bls	14098 <sprintf@plt+0x2ac0>
   13f60:	movw	r8, #355	; 0x163
   13f64:	sub	r3, r3, #1
   13f68:	add	r2, sp, #520	; 0x208
   13f6c:	add	r2, r2, #2
   13f70:	strh	r3, [r2]
   13f74:	str	r8, [sp]
   13f78:	add	r3, sp, #28
   13f7c:	mov	r2, r4
   13f80:	mov	r1, r6
   13f84:	add	r0, sp, #516	; 0x204
   13f88:	bl	14ca4 <sprintf@plt+0x36cc>
   13f8c:	cmp	r0, #0
   13f90:	ble	1410c <sprintf@plt+0x2b34>
   13f94:	mov	r3, #0
   13f98:	strb	r3, [sp, #283]	; 0x11b
   13f9c:	add	r4, r4, r0
   13fa0:	add	r3, r4, #10
   13fa4:	cmp	r6, r3
   13fa8:	bls	14098 <sprintf@plt+0x2ac0>
   13fac:	mov	r0, r4
   13fb0:	bl	14dd0 <sprintf@plt+0x37f8>
   13fb4:	mov	r9, r0
   13fb8:	add	r0, r4, #2
   13fbc:	bl	14dd0 <sprintf@plt+0x37f8>
   13fc0:	add	r0, r4, #4
   13fc4:	bl	14de0 <sprintf@plt+0x3808>
   13fc8:	str	r0, [r7, #16]
   13fcc:	add	r0, r4, #8
   13fd0:	bl	14dd0 <sprintf@plt+0x37f8>
   13fd4:	add	r2, r4, #10
   13fd8:	cmp	r9, #12
   13fdc:	beq	14160 <sprintf@plt+0x2b88>
   13fe0:	cmp	r9, #28
   13fe4:	beq	140fc <sprintf@plt+0x2b24>
   13fe8:	cmp	r9, #1
   13fec:	beq	14074 <sprintf@plt+0x2a9c>
   13ff0:	add	r4, r2, r0
   13ff4:	add	r3, sp, #520	; 0x208
   13ff8:	add	r3, r3, #2
   13ffc:	ldrh	r3, [r3]
   14000:	cmp	r3, #0
   14004:	cmpne	r6, r4
   14008:	bhi	13f64 <sprintf@plt+0x298c>
   1400c:	b	14098 <sprintf@plt+0x2ac0>
   14010:	sub	r2, r3, #4
   14014:	uxtb	r2, r2
   14018:	cmp	r3, #2
   1401c:	cmpne	r2, #1
   14020:	bhi	14048 <sprintf@plt+0x2a70>
   14024:	movw	r3, #65428	; 0xff94
   14028:	movt	r3, #2
   1402c:	ldr	r2, [r3, r5, lsl #2]
   14030:	add	r2, r2, #1
   14034:	str	r2, [r3, r5, lsl #2]
   14038:	mov	r0, r7
   1403c:	bl	13aec <sprintf@plt+0x2514>
   14040:	mov	r0, #1
   14044:	b	13ca0 <sprintf@plt+0x26c8>
   14048:	cmp	r3, #3
   1404c:	bne	13ed8 <sprintf@plt+0x2900>
   14050:	movw	r2, #65428	; 0xff94
   14054:	movt	r2, #2
   14058:	ldr	r3, [r2, r5, lsl #2]
   1405c:	add	r1, r3, #3
   14060:	cmp	r3, #0
   14064:	movlt	r3, r1
   14068:	asr	r3, r3, #2
   1406c:	str	r3, [r2, r5, lsl #2]
   14070:	b	13ed8 <sprintf@plt+0x2900>
   14074:	ldrb	r2, [r7, #20]
   14078:	cmp	r0, #4
   1407c:	cmpeq	r2, #1
   14080:	bne	1410c <sprintf@plt+0x2b34>
   14084:	add	r3, r7, #292	; 0x124
   14088:	mov	r2, #2
   1408c:	strh	r2, [r3]
   14090:	ldr	r3, [r4, #10]
   14094:	str	r3, [r7, #296]	; 0x128
   14098:	ldrb	r3, [r7, #20]
   1409c:	cmp	r3, #12
   140a0:	bne	141c4 <sprintf@plt+0x2bec>
   140a4:	ldr	r0, [r7, #420]	; 0x1a4
   140a8:	cmp	r0, #0
   140ac:	beq	141a0 <sprintf@plt+0x2bc8>
   140b0:	add	r3, r7, #292	; 0x124
   140b4:	ldrh	r3, [r3]
   140b8:	cmp	r3, #10
   140bc:	moveq	r2, #28
   140c0:	movne	r2, #1
   140c4:	ldr	r1, [r7, #424]	; 0x1a8
   140c8:	bl	136ec <sprintf@plt+0x2114>
   140cc:	mov	r0, r7
   140d0:	bl	13480 <sprintf@plt+0x1ea8>
   140d4:	movw	r2, #65428	; 0xff94
   140d8:	movt	r2, #2
   140dc:	ldr	r3, [r2, r5, lsl #2]
   140e0:	add	r1, r3, #3
   140e4:	cmp	r3, #0
   140e8:	movlt	r3, r1
   140ec:	asr	r3, r3, #2
   140f0:	str	r3, [r2, r5, lsl #2]
   140f4:	mov	r0, #1
   140f8:	b	13ca0 <sprintf@plt+0x26c8>
   140fc:	ldrb	r1, [r7, #20]
   14100:	cmp	r0, #16
   14104:	cmpeq	r1, #28
   14108:	beq	14130 <sprintf@plt+0x2b58>
   1410c:	movw	r3, #65428	; 0xff94
   14110:	movt	r3, #2
   14114:	ldr	r2, [r3, r5, lsl #2]
   14118:	add	r2, r2, #1
   1411c:	str	r2, [r3, r5, lsl #2]
   14120:	mov	r0, r7
   14124:	bl	13aec <sprintf@plt+0x2514>
   14128:	mov	r0, #1
   1412c:	b	13ca0 <sprintf@plt+0x26c8>
   14130:	add	r3, r7, #292	; 0x124
   14134:	mov	r1, #10
   14138:	strh	r1, [r3]
   1413c:	ldr	ip, [r2]
   14140:	ldr	r0, [r2, #4]
   14144:	ldr	r1, [r2, #8]
   14148:	ldr	r2, [r2, #12]
   1414c:	str	ip, [r7, #300]	; 0x12c
   14150:	str	r0, [r7, #304]	; 0x130
   14154:	str	r1, [r7, #308]	; 0x134
   14158:	str	r2, [r7, #312]	; 0x138
   1415c:	b	14098 <sprintf@plt+0x2ac0>
   14160:	ldrb	r3, [r7, #20]
   14164:	cmp	r3, #12
   14168:	bne	1410c <sprintf@plt+0x2b34>
   1416c:	movw	r3, #355	; 0x163
   14170:	str	r3, [sp]
   14174:	add	r3, sp, #28
   14178:	mov	r1, r6
   1417c:	add	r0, sp, #516	; 0x204
   14180:	bl	14ca4 <sprintf@plt+0x36cc>
   14184:	cmp	r0, #0
   14188:	ble	1410c <sprintf@plt+0x2b34>
   1418c:	mov	r2, #256	; 0x100
   14190:	add	r1, sp, #28
   14194:	ldr	r0, [r7, #420]	; 0x1a4
   14198:	bl	11380 <rb_strlcpy@plt>
   1419c:	b	14098 <sprintf@plt+0x2ac0>
   141a0:	movw	r3, #65428	; 0xff94
   141a4:	movt	r3, #2
   141a8:	ldr	r2, [r3, r5, lsl #2]
   141ac:	add	r2, r2, #1
   141b0:	str	r2, [r3, r5, lsl #2]
   141b4:	mov	r0, r7
   141b8:	bl	13aec <sprintf@plt+0x2514>
   141bc:	mov	r0, #1
   141c0:	b	13ca0 <sprintf@plt+0x26c8>
   141c4:	mov	r1, #132	; 0x84
   141c8:	mov	r0, #1
   141cc:	bl	11314 <calloc@plt>
   141d0:	subs	r4, r0, #0
   141d4:	beq	14218 <sprintf@plt+0x2c40>
   141d8:	ldr	r3, [r7, #420]	; 0x1a4
   141dc:	mov	r0, r4
   141e0:	str	r3, [r0], #4
   141e4:	mov	r2, #128	; 0x80
   141e8:	add	r1, r7, #292	; 0x124
   141ec:	bl	1141c <memcpy@plt>
   141f0:	ldr	r3, [r7, #424]	; 0x1a8
   141f4:	ldr	r2, [r3, #4]
   141f8:	mov	r1, r4
   141fc:	ldr	r0, [r3]
   14200:	blx	r2
   14204:	mov	r0, r4
   14208:	bl	113a4 <free@plt>
   1420c:	mov	r0, r7
   14210:	bl	13480 <sprintf@plt+0x1ea8>
   14214:	b	140d4 <sprintf@plt+0x2afc>
   14218:	bl	114ac <rb_outofmemory@plt>
   1421c:	mov	r0, #0
   14220:	b	13ca0 <sprintf@plt+0x26c8>
   14224:	mov	r0, #1
   14228:	b	13ca0 <sprintf@plt+0x26c8>
   1422c:	mov	r0, #1
   14230:	b	13ca0 <sprintf@plt+0x26c8>
   14234:	muleq	r3, ip, r2
   14238:	strd	r4, [sp, #-16]!
   1423c:	str	r6, [sp, #8]
   14240:	str	lr, [sp, #12]
   14244:	mov	r4, r0
   14248:	mov	r5, r1
   1424c:	mov	r1, r5
   14250:	mov	r0, r4
   14254:	bl	13c3c <sprintf@plt+0x2664>
   14258:	cmp	r0, #0
   1425c:	bne	1424c <sprintf@plt+0x2c74>
   14260:	mov	r3, #0
   14264:	movw	r2, #16952	; 0x4238
   14268:	movt	r2, #1
   1426c:	mov	r1, #1
   14270:	mov	r0, r4
   14274:	bl	11290 <rb_setselect@plt>
   14278:	ldrd	r4, [sp]
   1427c:	ldr	r6, [sp, #8]
   14280:	add	sp, sp, #12
   14284:	pop	{pc}		; (ldr pc, [sp], #4)
   14288:	str	r4, [sp, #-8]!
   1428c:	str	lr, [sp, #4]
   14290:	mov	r3, r1
   14294:	mov	r2, #0
   14298:	mov	r1, r0
   1429c:	mov	r0, r3
   142a0:	bl	13a6c <sprintf@plt+0x2494>
   142a4:	ldr	r4, [sp]
   142a8:	add	sp, sp, #4
   142ac:	pop	{pc}		; (ldr pc, [sp], #4)
   142b0:	ldrb	r3, [r0]
   142b4:	and	r2, r3, #192	; 0xc0
   142b8:	cmp	r2, #192	; 0xc0
   142bc:	beq	142fc <sprintf@plt+0x2d24>
   142c0:	cmp	r2, #64	; 0x40
   142c4:	beq	142d0 <sprintf@plt+0x2cf8>
   142c8:	mov	r0, r3
   142cc:	bx	lr
   142d0:	cmp	r3, #65	; 0x41
   142d4:	bne	14304 <sprintf@plt+0x2d2c>
   142d8:	ldrb	r0, [r0, #1]
   142dc:	cmp	r0, #0
   142e0:	moveq	r0, #256	; 0x100
   142e4:	add	r3, r0, #7
   142e8:	cmp	r3, #0
   142ec:	addlt	r3, r0, #14
   142f0:	asr	r3, r3, #3
   142f4:	add	r0, r3, #1
   142f8:	bx	lr
   142fc:	mvn	r0, #0
   14300:	bx	lr
   14304:	mvn	r0, #0
   14308:	bx	lr
   1430c:	movw	r3, #65492	; 0xffd4
   14310:	movt	r3, #2
   14314:	ldr	r3, [r3]
   14318:	cmp	r3, #9
   1431c:	bxgt	lr
   14320:	strd	r4, [sp, #-16]!
   14324:	str	r6, [sp, #8]
   14328:	str	lr, [sp, #12]
   1432c:	sub	sp, sp, #40	; 0x28
   14330:	mov	r3, #0
   14334:	str	r3, [sp, #12]
   14338:	str	r3, [sp, #20]
   1433c:	str	r3, [sp, #24]
   14340:	str	r3, [sp, #28]
   14344:	str	r3, [sp, #32]
   14348:	str	r3, [sp, #36]	; 0x24
   1434c:	mov	r3, #2
   14350:	str	r3, [sp, #16]
   14354:	mov	r3, #5
   14358:	str	r3, [sp, #8]
   1435c:	add	r3, sp, #4
   14360:	add	r2, sp, #8
   14364:	movw	r1, #39004	; 0x985c
   14368:	movt	r1, #1
   1436c:	bl	113d4 <getaddrinfo@plt>
   14370:	cmp	r0, #0
   14374:	bne	143b8 <sprintf@plt+0x2de0>
   14378:	ldr	r4, [sp, #4]
   1437c:	cmp	r4, #0
   14380:	beq	143b8 <sprintf@plt+0x2de0>
   14384:	movw	r5, #65492	; 0xffd4
   14388:	movt	r5, #2
   1438c:	ldr	r6, [r5]
   14390:	movw	r0, #660	; 0x294
   14394:	movt	r0, #3
   14398:	ldr	r2, [r4, #16]
   1439c:	ldr	r1, [r4, #20]
   143a0:	add	r0, r0, r6, lsl #7
   143a4:	bl	1141c <memcpy@plt>
   143a8:	add	r6, r6, #1
   143ac:	str	r6, [r5]
   143b0:	mov	r0, r4
   143b4:	bl	11350 <freeaddrinfo@plt>
   143b8:	add	sp, sp, #40	; 0x28
   143bc:	ldrd	r4, [sp]
   143c0:	ldr	r6, [sp, #8]
   143c4:	add	sp, sp, #12
   143c8:	pop	{pc}		; (ldr pc, [sp], #4)
   143cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   143d0:	strd	r6, [sp, #8]
   143d4:	strd	r8, [sp, #16]
   143d8:	strd	sl, [sp, #24]
   143dc:	str	lr, [sp, #32]
   143e0:	sub	sp, sp, #292	; 0x124
   143e4:	str	r2, [sp, #12]
   143e8:	str	r3, [sp, #8]
   143ec:	cmp	r0, r2
   143f0:	cmpls	r2, r1
   143f4:	bcs	14460 <sprintf@plt+0x2e88>
   143f8:	mov	r8, r0
   143fc:	mov	fp, r1
   14400:	ldr	r4, [sp, #12]
   14404:	mov	r9, #0
   14408:	mvn	r3, #0
   1440c:	str	r3, [sp, #4]
   14410:	add	r6, sp, #32
   14414:	sub	r3, r1, r0
   14418:	str	r3, [sp, #16]
   1441c:	mov	r7, r4
   14420:	ldrb	r5, [r7], #1
   14424:	cmp	r5, #0
   14428:	beq	1457c <sprintf@plt+0x2fa4>
   1442c:	and	r3, r5, #192	; 0xc0
   14430:	cmp	r3, #64	; 0x40
   14434:	beq	14470 <sprintf@plt+0x2e98>
   14438:	cmp	r3, #192	; 0xc0
   1443c:	beq	144e8 <sprintf@plt+0x2f10>
   14440:	cmp	r3, #0
   14444:	beq	14470 <sprintf@plt+0x2e98>
   14448:	bl	115cc <__errno_location@plt>
   1444c:	mov	r3, #90	; 0x5a
   14450:	str	r3, [r0]
   14454:	mvn	r3, #0
   14458:	str	r3, [sp, #4]
   1445c:	b	1491c <sprintf@plt+0x3344>
   14460:	bl	115cc <__errno_location@plt>
   14464:	mov	r3, #90	; 0x5a
   14468:	str	r3, [r0]
   1446c:	b	14454 <sprintf@plt+0x2e7c>
   14470:	mov	r0, r4
   14474:	bl	142b0 <sprintf@plt+0x2cd8>
   14478:	subs	sl, r0, #0
   1447c:	blt	144c8 <sprintf@plt+0x2ef0>
   14480:	add	r3, sl, #1
   14484:	add	r3, r6, r3
   14488:	add	r2, sp, #284	; 0x11c
   1448c:	add	r2, r2, #3
   14490:	cmp	r2, r3
   14494:	bls	144d8 <sprintf@plt+0x2f00>
   14498:	add	r4, r7, sl
   1449c:	cmp	fp, r4
   144a0:	bls	144d8 <sprintf@plt+0x2f00>
   144a4:	add	r3, sl, #1
   144a8:	add	r9, r9, r3
   144ac:	strb	r5, [r6], #1
   144b0:	mov	r2, sl
   144b4:	mov	r1, r7
   144b8:	mov	r0, r6
   144bc:	bl	1141c <memcpy@plt>
   144c0:	add	r6, r6, sl
   144c4:	b	1441c <sprintf@plt+0x2e44>
   144c8:	bl	115cc <__errno_location@plt>
   144cc:	mov	r3, #90	; 0x5a
   144d0:	str	r3, [r0]
   144d4:	b	14454 <sprintf@plt+0x2e7c>
   144d8:	bl	115cc <__errno_location@plt>
   144dc:	mov	r3, #90	; 0x5a
   144e0:	str	r3, [r0]
   144e4:	b	14454 <sprintf@plt+0x2e7c>
   144e8:	cmp	fp, r7
   144ec:	bls	14548 <sprintf@plt+0x2f70>
   144f0:	ldr	r3, [sp, #4]
   144f4:	cmp	r3, #0
   144f8:	blt	14558 <sprintf@plt+0x2f80>
   144fc:	lsl	r5, r5, #8
   14500:	and	r5, r5, #16128	; 0x3f00
   14504:	ldrb	r4, [r4, #1]
   14508:	orr	r4, r5, r4
   1450c:	adds	r4, r8, r4
   14510:	movcs	r3, #1
   14514:	movcc	r3, #0
   14518:	cmp	fp, r4
   1451c:	orrls	r3, r3, #1
   14520:	cmp	r3, #0
   14524:	bne	1456c <sprintf@plt+0x2f94>
   14528:	add	r9, r9, #2
   1452c:	ldr	r3, [sp, #16]
   14530:	cmp	r9, r3
   14534:	blt	1441c <sprintf@plt+0x2e44>
   14538:	bl	115cc <__errno_location@plt>
   1453c:	mov	r3, #90	; 0x5a
   14540:	str	r3, [r0]
   14544:	b	14454 <sprintf@plt+0x2e7c>
   14548:	bl	115cc <__errno_location@plt>
   1454c:	mov	r3, #90	; 0x5a
   14550:	str	r3, [r0]
   14554:	b	14454 <sprintf@plt+0x2e7c>
   14558:	ldr	r3, [sp, #12]
   1455c:	sub	r7, r7, r3
   14560:	add	r3, r7, #1
   14564:	str	r3, [sp, #4]
   14568:	b	144fc <sprintf@plt+0x2f24>
   1456c:	bl	115cc <__errno_location@plt>
   14570:	mov	r3, #90	; 0x5a
   14574:	str	r3, [r0]
   14578:	b	14454 <sprintf@plt+0x2e7c>
   1457c:	mov	r3, #0
   14580:	strb	r3, [r6]
   14584:	ldr	r3, [sp, #4]
   14588:	cmp	r3, #0
   1458c:	blt	145dc <sprintf@plt+0x3004>
   14590:	ldr	r3, [sp, #4]
   14594:	cmn	r3, #1
   14598:	beq	1491c <sprintf@plt+0x3344>
   1459c:	ldr	r6, [sp, #328]	; 0x148
   145a0:	ldr	fp, [sp, #8]
   145a4:	add	r6, fp, r6
   145a8:	add	r5, sp, #32
   145ac:	movw	r3, #39012	; 0x9864
   145b0:	movt	r3, #1
   145b4:	str	r3, [sp, #16]
   145b8:	movw	sl, #38736	; 0x9750
   145bc:	movt	sl, #1
   145c0:	movw	r3, #34079	; 0x851f
   145c4:	movt	r3, #20971	; 0x51eb
   145c8:	str	r3, [sp, #24]
   145cc:	movw	r9, #52429	; 0xcccd
   145d0:	movt	r9, #52428	; 0xcccc
   145d4:	str	r9, [sp, #28]
   145d8:	b	14a34 <sprintf@plt+0x345c>
   145dc:	ldr	r3, [sp, #12]
   145e0:	sub	r3, r7, r3
   145e4:	str	r3, [sp, #4]
   145e8:	b	14590 <sprintf@plt+0x2fb8>
   145ec:	bl	115cc <__errno_location@plt>
   145f0:	mov	r3, #90	; 0x5a
   145f4:	str	r3, [r0]
   145f8:	b	14840 <sprintf@plt+0x3268>
   145fc:	bl	115cc <__errno_location@plt>
   14600:	mov	r3, #90	; 0x5a
   14604:	str	r3, [r0]
   14608:	b	14840 <sprintf@plt+0x3268>
   1460c:	bl	115cc <__errno_location@plt>
   14610:	mov	r3, #90	; 0x5a
   14614:	str	r3, [r0]
   14618:	b	14840 <sprintf@plt+0x3268>
   1461c:	bl	115cc <__errno_location@plt>
   14620:	mov	r3, #90	; 0x5a
   14624:	str	r3, [r0]
   14628:	b	14840 <sprintf@plt+0x3268>
   1462c:	add	r2, r5, #1
   14630:	cmp	r0, #0
   14634:	movle	r5, r2
   14638:	movle	r0, fp
   1463c:	ble	14a30 <sprintf@plt+0x3458>
   14640:	add	r0, r0, #1
   14644:	add	r5, r5, r0
   14648:	mov	r0, fp
   1464c:	mov	r1, #92	; 0x5c
   14650:	mov	ip, #100	; 0x64
   14654:	ldr	r4, [sp, #28]
   14658:	b	14734 <sprintf@plt+0x315c>
   1465c:	bl	115cc <__errno_location@plt>
   14660:	mov	r3, #22
   14664:	str	r3, [r0]
   14668:	b	14840 <sprintf@plt+0x3268>
   1466c:	mov	r2, #9
   14670:	add	r3, r3, r2
   14674:	add	r3, fp, r3
   14678:	cmp	r6, r3
   1467c:	bls	14700 <sprintf@plt+0x3128>
   14680:	add	r3, r5, #2
   14684:	str	r3, [sp, #12]
   14688:	ldr	r3, [sp, #16]
   1468c:	ldr	r3, [r3]
   14690:	mov	r4, fp
   14694:	str	r3, [r4], #3
   14698:	cmp	r7, #7
   1469c:	bgt	149a8 <sprintf@plt+0x33d0>
   146a0:	mov	r8, r7
   146a4:	ldr	r5, [sp, #12]
   146a8:	b	149fc <sprintf@plt+0x3424>
   146ac:	rsb	r8, r8, #8
   146b0:	ldrb	r3, [r5], #1
   146b4:	mov	r2, #255	; 0xff
   146b8:	and	r2, r3, r2, lsl r8
   146bc:	movw	r1, #39016	; 0x9868
   146c0:	movt	r1, #1
   146c4:	mov	r0, r4
   146c8:	bl	115d8 <sprintf@plt>
   146cc:	add	r4, r4, #2
   146d0:	b	14a0c <sprintf@plt+0x3434>
   146d4:	ldrb	r2, [r5], #1
   146d8:	rsb	r8, r8, #4
   146dc:	mov	r3, #15
   146e0:	lsl	r8, r3, r8
   146e4:	and	r2, r8, r2, lsr #4
   146e8:	movw	r1, #39024	; 0x9870
   146ec:	movt	r1, #1
   146f0:	mov	r0, r4
   146f4:	bl	115d8 <sprintf@plt>
   146f8:	add	r4, r4, #1
   146fc:	b	14a0c <sprintf@plt+0x3434>
   14700:	bl	115cc <__errno_location@plt>
   14704:	mov	r3, #90	; 0x5a
   14708:	str	r3, [r0]
   1470c:	b	14840 <sprintf@plt+0x3268>
   14710:	add	r3, r0, #1
   14714:	cmp	r6, r3
   14718:	bls	14834 <sprintf@plt+0x325c>
   1471c:	mov	r3, r0
   14720:	strb	r1, [r3], #2
   14724:	strb	lr, [r0, #1]
   14728:	mov	r0, r3
   1472c:	cmp	r2, r5
   14730:	beq	14a30 <sprintf@plt+0x3458>
   14734:	ldrb	lr, [r2], #1
   14738:	sub	r3, lr, #34	; 0x22
   1473c:	cmp	r3, #58	; 0x3a
   14740:	ldrls	pc, [pc, r3, lsl #2]
   14744:	b	1484c <sprintf@plt+0x3274>
   14748:	andeq	r4, r1, r0, lsl r7
   1474c:	andeq	r4, r1, ip, asr #16
   14750:	andeq	r4, r1, r0, lsl r7
   14754:	andeq	r4, r1, ip, asr #16
   14758:	andeq	r4, r1, ip, asr #16
   1475c:	andeq	r4, r1, ip, asr #16
   14760:	andeq	r4, r1, r0, lsl r7
   14764:	andeq	r4, r1, r0, lsl r7
   14768:	andeq	r4, r1, ip, asr #16
   1476c:	andeq	r4, r1, ip, asr #16
   14770:	andeq	r4, r1, ip, asr #16
   14774:	andeq	r4, r1, ip, asr #16
   14778:	andeq	r4, r1, r0, lsl r7
   1477c:	andeq	r4, r1, ip, asr #16
   14780:	andeq	r4, r1, ip, asr #16
   14784:	andeq	r4, r1, ip, asr #16
   14788:	andeq	r4, r1, ip, asr #16
   1478c:	andeq	r4, r1, ip, asr #16
   14790:	andeq	r4, r1, ip, asr #16
   14794:	andeq	r4, r1, ip, asr #16
   14798:	andeq	r4, r1, ip, asr #16
   1479c:	andeq	r4, r1, ip, asr #16
   147a0:	andeq	r4, r1, ip, asr #16
   147a4:	andeq	r4, r1, ip, asr #16
   147a8:	andeq	r4, r1, ip, asr #16
   147ac:	andeq	r4, r1, r0, lsl r7
   147b0:	andeq	r4, r1, ip, asr #16
   147b4:	andeq	r4, r1, ip, asr #16
   147b8:	andeq	r4, r1, ip, asr #16
   147bc:	andeq	r4, r1, ip, asr #16
   147c0:	andeq	r4, r1, r0, lsl r7
   147c4:	andeq	r4, r1, ip, asr #16
   147c8:	andeq	r4, r1, ip, asr #16
   147cc:	andeq	r4, r1, ip, asr #16
   147d0:	andeq	r4, r1, ip, asr #16
   147d4:	andeq	r4, r1, ip, asr #16
   147d8:	andeq	r4, r1, ip, asr #16
   147dc:	andeq	r4, r1, ip, asr #16
   147e0:	andeq	r4, r1, ip, asr #16
   147e4:	andeq	r4, r1, ip, asr #16
   147e8:	andeq	r4, r1, ip, asr #16
   147ec:	andeq	r4, r1, ip, asr #16
   147f0:	andeq	r4, r1, ip, asr #16
   147f4:	andeq	r4, r1, ip, asr #16
   147f8:	andeq	r4, r1, ip, asr #16
   147fc:	andeq	r4, r1, ip, asr #16
   14800:	andeq	r4, r1, ip, asr #16
   14804:	andeq	r4, r1, ip, asr #16
   14808:	andeq	r4, r1, ip, asr #16
   1480c:	andeq	r4, r1, ip, asr #16
   14810:	andeq	r4, r1, ip, asr #16
   14814:	andeq	r4, r1, ip, asr #16
   14818:	andeq	r4, r1, ip, asr #16
   1481c:	andeq	r4, r1, ip, asr #16
   14820:	andeq	r4, r1, ip, asr #16
   14824:	andeq	r4, r1, ip, asr #16
   14828:	andeq	r4, r1, ip, asr #16
   1482c:	andeq	r4, r1, ip, asr #16
   14830:	andeq	r4, r1, r0, lsl r7
   14834:	bl	115cc <__errno_location@plt>
   14838:	mov	r3, #90	; 0x5a
   1483c:	str	r3, [r0]
   14840:	mvn	r3, #0
   14844:	str	r3, [sp, #4]
   14848:	b	1491c <sprintf@plt+0x3344>
   1484c:	sub	r3, lr, #33	; 0x21
   14850:	cmp	r3, #93	; 0x5d
   14854:	bls	148c4 <sprintf@plt+0x32ec>
   14858:	add	r3, r0, #3
   1485c:	cmp	r6, r3
   14860:	bls	148b4 <sprintf@plt+0x32dc>
   14864:	strb	r1, [r0]
   14868:	ldr	r3, [sp, #24]
   1486c:	umull	r3, r7, r3, lr
   14870:	lsr	r3, r7, #5
   14874:	ldrb	r7, [sl, r7, lsr #5]
   14878:	strb	r7, [r0, #1]
   1487c:	mls	r3, ip, r3, lr
   14880:	uxtb	r3, r3
   14884:	umull	r7, r3, r4, r3
   14888:	ldrb	r3, [sl, r3, lsr #3]
   1488c:	strb	r3, [r0, #2]
   14890:	umull	r7, r3, r4, lr
   14894:	lsr	r3, r3, #3
   14898:	add	r3, r3, r3, lsl #2
   1489c:	sub	r3, lr, r3, lsl #1
   148a0:	uxtb	r3, r3
   148a4:	ldrb	r3, [sl, r3]
   148a8:	strb	r3, [r0, #3]
   148ac:	add	r0, r0, #4
   148b0:	b	1472c <sprintf@plt+0x3154>
   148b4:	bl	115cc <__errno_location@plt>
   148b8:	mov	r3, #90	; 0x5a
   148bc:	str	r3, [r0]
   148c0:	b	14840 <sprintf@plt+0x3268>
   148c4:	cmp	r6, r0
   148c8:	bls	148d4 <sprintf@plt+0x32fc>
   148cc:	strb	lr, [r0], #1
   148d0:	b	1472c <sprintf@plt+0x3154>
   148d4:	bl	115cc <__errno_location@plt>
   148d8:	mov	r3, #90	; 0x5a
   148dc:	str	r3, [r0]
   148e0:	b	14840 <sprintf@plt+0x3268>
   148e4:	ldr	r3, [sp, #8]
   148e8:	cmp	r3, fp
   148ec:	beq	1493c <sprintf@plt+0x3364>
   148f0:	cmp	r6, fp
   148f4:	bls	14964 <sprintf@plt+0x338c>
   148f8:	mov	r3, fp
   148fc:	mov	r2, #0
   14900:	strb	r2, [r3], #1
   14904:	ldr	r2, [sp, #8]
   14908:	sub	r3, r3, r2
   1490c:	cmn	r3, #1
   14910:	ldr	r2, [sp, #4]
   14914:	moveq	r2, r3
   14918:	str	r2, [sp, #4]
   1491c:	ldr	r0, [sp, #4]
   14920:	add	sp, sp, #292	; 0x124
   14924:	ldrd	r4, [sp]
   14928:	ldrd	r6, [sp, #8]
   1492c:	ldrd	r8, [sp, #16]
   14930:	ldrd	sl, [sp, #24]
   14934:	add	sp, sp, #32
   14938:	pop	{pc}		; (ldr pc, [sp], #4)
   1493c:	cmp	r6, fp
   14940:	movhi	r3, fp
   14944:	movhi	r2, #46	; 0x2e
   14948:	strbhi	r2, [r3], #1
   1494c:	movhi	fp, r3
   14950:	bhi	148f0 <sprintf@plt+0x3318>
   14954:	bl	115cc <__errno_location@plt>
   14958:	mov	r3, #90	; 0x5a
   1495c:	str	r3, [r0]
   14960:	b	14840 <sprintf@plt+0x3268>
   14964:	bl	115cc <__errno_location@plt>
   14968:	mov	r3, #90	; 0x5a
   1496c:	str	r3, [r0]
   14970:	b	14840 <sprintf@plt+0x3268>
   14974:	mov	r3, #64	; 0x40
   14978:	mov	r7, #256	; 0x100
   1497c:	mov	r2, #9
   14980:	add	r3, r3, r2
   14984:	add	r3, fp, r3
   14988:	cmp	r6, r3
   1498c:	bls	14700 <sprintf@plt+0x3128>
   14990:	add	r3, r5, #2
   14994:	str	r3, [sp, #12]
   14998:	ldr	r3, [sp, #16]
   1499c:	ldr	r3, [r3]
   149a0:	mov	r4, fp
   149a4:	str	r3, [r4], #3
   149a8:	sub	r8, r7, #8
   149ac:	lsr	r8, r8, #3
   149b0:	add	r3, r8, #3
   149b4:	add	r3, r5, r3
   149b8:	str	r3, [sp, #20]
   149bc:	ldr	r9, [sp, #12]
   149c0:	movw	r5, #39016	; 0x9868
   149c4:	movt	r5, #1
   149c8:	ldrb	r2, [r9], #1
   149cc:	mov	r1, r5
   149d0:	mov	r0, r4
   149d4:	bl	115d8 <sprintf@plt>
   149d8:	add	r4, r4, #2
   149dc:	ldr	r3, [sp, #20]
   149e0:	cmp	r9, r3
   149e4:	bne	149c8 <sprintf@plt+0x33f0>
   149e8:	add	r5, r8, #1
   149ec:	ldr	r3, [sp, #12]
   149f0:	add	r5, r3, r5
   149f4:	sub	r2, r7, #8
   149f8:	sub	r8, r2, r8, lsl #3
   149fc:	cmp	r8, #4
   14a00:	bgt	146ac <sprintf@plt+0x30d4>
   14a04:	cmp	r8, #0
   14a08:	bgt	146d4 <sprintf@plt+0x30fc>
   14a0c:	mov	r2, r7
   14a10:	movw	r1, #39028	; 0x9874
   14a14:	movt	r1, #1
   14a18:	mov	r0, r4
   14a1c:	bl	115d8 <sprintf@plt>
   14a20:	add	r0, r4, r0
   14a24:	sub	fp, r0, fp
   14a28:	cmp	fp, #0
   14a2c:	blt	14700 <sprintf@plt+0x3128>
   14a30:	mov	fp, r0
   14a34:	ldrb	r4, [r5]
   14a38:	cmp	r4, #0
   14a3c:	beq	148e4 <sprintf@plt+0x330c>
   14a40:	and	r7, r4, #192	; 0xc0
   14a44:	cmp	r7, #192	; 0xc0
   14a48:	beq	145ec <sprintf@plt+0x3014>
   14a4c:	ldr	r3, [sp, #8]
   14a50:	cmp	r3, fp
   14a54:	beq	14a68 <sprintf@plt+0x3490>
   14a58:	cmp	r6, fp
   14a5c:	bls	145fc <sprintf@plt+0x3024>
   14a60:	mov	r3, #46	; 0x2e
   14a64:	strb	r3, [fp], #1
   14a68:	mov	r0, r5
   14a6c:	bl	142b0 <sprintf@plt+0x2cd8>
   14a70:	cmp	r0, #0
   14a74:	blt	1460c <sprintf@plt+0x3034>
   14a78:	add	r3, fp, r0
   14a7c:	cmp	r6, r3
   14a80:	bls	1461c <sprintf@plt+0x3044>
   14a84:	cmp	r7, #64	; 0x40
   14a88:	bne	1462c <sprintf@plt+0x3054>
   14a8c:	cmp	r4, #65	; 0x41
   14a90:	bne	1465c <sprintf@plt+0x3084>
   14a94:	ldrb	r7, [r5, #1]
   14a98:	cmp	r7, #0
   14a9c:	beq	14974 <sprintf@plt+0x339c>
   14aa0:	add	r3, r7, #3
   14aa4:	asr	r3, r3, #2
   14aa8:	cmp	r7, #99	; 0x63
   14aac:	bgt	1466c <sprintf@plt+0x3094>
   14ab0:	cmp	r7, #9
   14ab4:	movle	r2, #7
   14ab8:	ble	14670 <sprintf@plt+0x3098>
   14abc:	mov	r2, #8
   14ac0:	b	14980 <sprintf@plt+0x33a8>
   14ac4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14ac8:	strd	r6, [sp, #8]
   14acc:	strd	r8, [sp, #16]
   14ad0:	str	lr, [sp, #24]
   14ad4:	sub	sp, sp, #132	; 0x84
   14ad8:	movw	r3, #65492	; 0xffd4
   14adc:	movt	r3, #2
   14ae0:	mov	r2, #0
   14ae4:	str	r2, [r3]
   14ae8:	movw	r1, #39036	; 0x987c
   14aec:	movt	r1, #1
   14af0:	movw	r0, #39040	; 0x9880
   14af4:	movt	r0, #1
   14af8:	bl	11338 <fopen@plt>
   14afc:	subs	r8, r0, #0
   14b00:	beq	14c64 <sprintf@plt+0x368c>
   14b04:	movw	r4, #39060	; 0x9894
   14b08:	movt	r4, #1
   14b0c:	movw	r6, #39064	; 0x9898
   14b10:	movt	r6, #1
   14b14:	movw	r5, #39004	; 0x985c
   14b18:	movt	r5, #1
   14b1c:	b	14b54 <sprintf@plt+0x357c>
   14b20:	mov	r0, ip
   14b24:	add	ip, r0, #1
   14b28:	ldrb	r1, [r0, #1]
   14b2c:	lsl	r3, r1, #1
   14b30:	ldrh	r3, [r2, r3]
   14b34:	eor	r3, r3, #8192	; 0x2000
   14b38:	ubfx	r3, r3, #13, #1
   14b3c:	cmp	r1, #0
   14b40:	moveq	r3, #0
   14b44:	cmp	r3, #0
   14b48:	bne	14b20 <sprintf@plt+0x3548>
   14b4c:	cmp	r1, #0
   14b50:	bne	14bc4 <sprintf@plt+0x35ec>
   14b54:	mov	r2, r8
   14b58:	mov	r1, #128	; 0x80
   14b5c:	mov	r0, sp
   14b60:	bl	112d8 <fgets@plt>
   14b64:	cmp	r0, #0
   14b68:	beq	14c5c <sprintf@plt+0x3684>
   14b6c:	mov	r1, r4
   14b70:	mov	r0, sp
   14b74:	bl	115a8 <strpbrk@plt>
   14b78:	cmp	r0, #0
   14b7c:	movne	r3, #0
   14b80:	strbne	r3, [r0]
   14b84:	bl	114b8 <__ctype_b_loc@plt>
   14b88:	ldr	r2, [r0]
   14b8c:	mov	r1, sp
   14b90:	mov	r7, r1
   14b94:	ldrb	r3, [r1], #1
   14b98:	lsl	r0, r3, #1
   14b9c:	ldrh	r0, [r2, r0]
   14ba0:	tst	r0, #8192	; 0x2000
   14ba4:	bne	14b90 <sprintf@plt+0x35b8>
   14ba8:	cmp	r3, #0
   14bac:	beq	14b54 <sprintf@plt+0x357c>
   14bb0:	cmp	r3, #59	; 0x3b
   14bb4:	cmpne	r3, #35	; 0x23
   14bb8:	movne	r0, r7
   14bbc:	beq	14b54 <sprintf@plt+0x357c>
   14bc0:	b	14b24 <sprintf@plt+0x354c>
   14bc4:	add	r9, r0, #2
   14bc8:	strb	r3, [ip]
   14bcc:	ldrb	r3, [ip, #1]
   14bd0:	lsl	r3, r3, #1
   14bd4:	ldrh	r3, [r2, r3]
   14bd8:	tst	r3, #8192	; 0x2000
   14bdc:	beq	14bf4 <sprintf@plt+0x361c>
   14be0:	ldrb	r3, [r9, #1]!
   14be4:	lsl	r3, r3, #1
   14be8:	ldrh	r3, [r2, r3]
   14bec:	tst	r3, #8192	; 0x2000
   14bf0:	bne	14be0 <sprintf@plt+0x3608>
   14bf4:	mov	r1, r6
   14bf8:	mov	r0, r9
   14bfc:	bl	115a8 <strpbrk@plt>
   14c00:	cmp	r0, #0
   14c04:	movne	r3, #0
   14c08:	strbne	r3, [r0]
   14c0c:	mov	r1, r5
   14c10:	mov	r0, r7
   14c14:	bl	113c8 <rb_strcasecmp@plt>
   14c18:	cmp	r0, #0
   14c1c:	bne	14c38 <sprintf@plt+0x3660>
   14c20:	mov	r2, #256	; 0x100
   14c24:	mov	r1, r9
   14c28:	movw	r0, #404	; 0x194
   14c2c:	movt	r0, #3
   14c30:	bl	11380 <rb_strlcpy@plt>
   14c34:	b	14b54 <sprintf@plt+0x357c>
   14c38:	movw	r1, #39068	; 0x989c
   14c3c:	movt	r1, #1
   14c40:	mov	r0, r7
   14c44:	bl	113c8 <rb_strcasecmp@plt>
   14c48:	cmp	r0, #0
   14c4c:	bne	14b54 <sprintf@plt+0x357c>
   14c50:	mov	r0, r9
   14c54:	bl	1430c <sprintf@plt+0x2d34>
   14c58:	b	14b54 <sprintf@plt+0x357c>
   14c5c:	mov	r0, r8
   14c60:	bl	112cc <fclose@plt>
   14c64:	movw	r3, #65492	; 0xffd4
   14c68:	movt	r3, #2
   14c6c:	ldr	r3, [r3]
   14c70:	cmp	r3, #0
   14c74:	beq	14c94 <sprintf@plt+0x36bc>
   14c78:	mov	r0, #0
   14c7c:	add	sp, sp, #132	; 0x84
   14c80:	ldrd	r4, [sp]
   14c84:	ldrd	r6, [sp, #8]
   14c88:	ldrd	r8, [sp, #16]
   14c8c:	add	sp, sp, #24
   14c90:	pop	{pc}		; (ldr pc, [sp], #4)
   14c94:	movw	r0, #39080	; 0x98a8
   14c98:	movt	r0, #1
   14c9c:	bl	1430c <sprintf@plt+0x2d34>
   14ca0:	b	14c78 <sprintf@plt+0x36a0>
   14ca4:	str	r4, [sp, #-8]!
   14ca8:	str	lr, [sp, #4]
   14cac:	sub	sp, sp, #8
   14cb0:	mov	r4, r3
   14cb4:	ldr	ip, [sp, #16]
   14cb8:	str	ip, [sp]
   14cbc:	bl	143cc <sprintf@plt+0x2df4>
   14cc0:	cmp	r0, #0
   14cc4:	ble	14cd8 <sprintf@plt+0x3700>
   14cc8:	ldrb	r3, [r4]
   14ccc:	cmp	r3, #46	; 0x2e
   14cd0:	moveq	r3, #0
   14cd4:	strbeq	r3, [r4]
   14cd8:	add	sp, sp, #8
   14cdc:	ldr	r4, [sp]
   14ce0:	add	sp, sp, #4
   14ce4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ce8:	strd	r4, [sp, #-16]!
   14cec:	str	r6, [sp, #8]
   14cf0:	str	lr, [sp, #12]
   14cf4:	mov	r5, r0
   14cf8:	mov	r6, r1
   14cfc:	cmp	r1, r0
   14d00:	bls	14db0 <sprintf@plt+0x37d8>
   14d04:	mov	r4, r0
   14d08:	ldrb	r3, [r4], #1
   14d0c:	mov	r2, r3
   14d10:	cmp	r3, #0
   14d14:	beq	14d94 <sprintf@plt+0x37bc>
   14d18:	and	r3, r3, #192	; 0xc0
   14d1c:	cmp	r3, #64	; 0x40
   14d20:	beq	14d6c <sprintf@plt+0x3794>
   14d24:	cmp	r3, #192	; 0xc0
   14d28:	beq	14d90 <sprintf@plt+0x37b8>
   14d2c:	cmp	r3, #0
   14d30:	beq	14d48 <sprintf@plt+0x3770>
   14d34:	bl	115cc <__errno_location@plt>
   14d38:	mov	r3, #90	; 0x5a
   14d3c:	str	r3, [r0]
   14d40:	mvn	r0, #0
   14d44:	b	14da0 <sprintf@plt+0x37c8>
   14d48:	add	r0, r4, r2
   14d4c:	cmp	r6, r0
   14d50:	bls	14db8 <sprintf@plt+0x37e0>
   14d54:	mov	r4, r0
   14d58:	ldrb	r3, [r4], #1
   14d5c:	mov	r2, r3
   14d60:	cmp	r3, #0
   14d64:	bne	14d18 <sprintf@plt+0x3740>
   14d68:	b	14d94 <sprintf@plt+0x37bc>
   14d6c:	bl	142b0 <sprintf@plt+0x2cd8>
   14d70:	cmp	r0, #0
   14d74:	blt	14d80 <sprintf@plt+0x37a8>
   14d78:	add	r0, r4, r0
   14d7c:	b	14d4c <sprintf@plt+0x3774>
   14d80:	bl	115cc <__errno_location@plt>
   14d84:	mov	r3, #90	; 0x5a
   14d88:	str	r3, [r0]
   14d8c:	b	14d40 <sprintf@plt+0x3768>
   14d90:	add	r4, r0, #2
   14d94:	cmp	r6, r4
   14d98:	subcs	r0, r4, r5
   14d9c:	bcc	14dc0 <sprintf@plt+0x37e8>
   14da0:	ldrd	r4, [sp]
   14da4:	ldr	r6, [sp, #8]
   14da8:	add	sp, sp, #12
   14dac:	pop	{pc}		; (ldr pc, [sp], #4)
   14db0:	mov	r4, r0
   14db4:	b	14d94 <sprintf@plt+0x37bc>
   14db8:	mov	r4, r0
   14dbc:	b	14d94 <sprintf@plt+0x37bc>
   14dc0:	bl	115cc <__errno_location@plt>
   14dc4:	mov	r3, #90	; 0x5a
   14dc8:	str	r3, [r0]
   14dcc:	b	14d40 <sprintf@plt+0x3768>
   14dd0:	ldrb	r2, [r0]
   14dd4:	ldrb	r0, [r0, #1]
   14dd8:	orr	r0, r0, r2, lsl #8
   14ddc:	bx	lr
   14de0:	ldrb	r2, [r0]
   14de4:	ldrb	r3, [r0, #1]
   14de8:	lsl	r3, r3, #16
   14dec:	orr	r3, r3, r2, lsl #24
   14df0:	ldrb	r2, [r0, #3]
   14df4:	orr	r3, r3, r2
   14df8:	ldrb	r0, [r0, #2]
   14dfc:	orr	r0, r3, r0, lsl #8
   14e00:	bx	lr
   14e04:	ubfx	r3, r0, #8, #8
   14e08:	strb	r3, [r1]
   14e0c:	strb	r0, [r1, #1]
   14e10:	bx	lr
   14e14:	lsr	r3, r0, #24
   14e18:	strb	r3, [r1]
   14e1c:	lsr	r3, r0, #16
   14e20:	strb	r3, [r1, #1]
   14e24:	lsr	r3, r0, #8
   14e28:	strb	r3, [r1, #2]
   14e2c:	strb	r0, [r1, #3]
   14e30:	bx	lr
   14e34:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14e38:	strd	r6, [sp, #8]
   14e3c:	strd	r8, [sp, #16]
   14e40:	strd	sl, [sp, #24]
   14e44:	str	lr, [sp, #32]
   14e48:	sub	sp, sp, #404	; 0x194
   14e4c:	str	r1, [sp, #12]
   14e50:	str	r2, [sp, #16]
   14e54:	ldr	r1, [sp, #440]	; 0x1b8
   14e58:	cmp	r3, #0
   14e5c:	cmpne	r1, #11
   14e60:	ble	157b0 <sprintf@plt+0x41d8>
   14e64:	mov	r8, r0
   14e68:	mov	sl, r3
   14e6c:	mov	r3, #0
   14e70:	str	r3, [sl, #2]
   14e74:	str	r3, [sl, #6]
   14e78:	strh	r3, [sl, #10]
   14e7c:	strh	r3, [sl]
   14e80:	ldrb	r2, [sl, #2]
   14e84:	and	r2, r2, #135	; 0x87
   14e88:	orr	r2, r2, #1
   14e8c:	strb	r2, [sl, #2]
   14e90:	ldrb	r2, [sl, #3]
   14e94:	bfi	r2, r3, #0, #4
   14e98:	strb	r2, [sl, #3]
   14e9c:	str	sl, [sp, #320]	; 0x140
   14ea0:	str	r3, [sp, #324]	; 0x144
   14ea4:	subs	r3, r1, #16
   14ea8:	str	r3, [sp, #4]
   14eac:	bmi	157b8 <sprintf@plt+0x41e0>
   14eb0:	add	r3, sp, #65	; 0x41
   14eb4:	str	r3, [sp, #56]	; 0x38
   14eb8:	add	r3, sp, #64	; 0x40
   14ebc:	mov	fp, #0
   14ec0:	add	r7, sp, #316	; 0x13c
   14ec4:	add	r7, r7, #3
   14ec8:	movw	r5, #38736	; 0x9750
   14ecc:	movt	r5, #1
   14ed0:	mov	r4, fp
   14ed4:	str	sl, [sp, #8]
   14ed8:	mov	sl, r3
   14edc:	b	15178 <sprintf@plt+0x3ba0>
   14ee0:	mov	r1, #93	; 0x5d
   14ee4:	mov	r0, fp
   14ee8:	bl	112f0 <strchr@plt>
   14eec:	cmp	r0, #0
   14ef0:	beq	14f6c <sprintf@plt+0x3994>
   14ef4:	add	r6, r0, #2
   14ef8:	mov	r3, #0
   14efc:	str	r3, [sp, #60]	; 0x3c
   14f00:	sub	fp, r6, fp
   14f04:	cmp	fp, #1
   14f08:	ble	157c8 <sprintf@plt+0x41f0>
   14f0c:	ldrb	r3, [r8, #1]
   14f10:	cmp	r3, #120	; 0x78
   14f14:	bne	157d0 <sprintf@plt+0x41f8>
   14f18:	bl	114b8 <__ctype_b_loc@plt>
   14f1c:	ldr	ip, [r0]
   14f20:	ldrb	r3, [r8, #2]
   14f24:	lsl	r3, r3, #1
   14f28:	ldrh	r3, [ip, r3]
   14f2c:	tst	r3, #4096	; 0x1000
   14f30:	beq	157e0 <sprintf@plt+0x4208>
   14f34:	add	r2, r8, #2
   14f38:	add	r3, sp, #60	; 0x3c
   14f3c:	cmp	r6, r2
   14f40:	cmphi	r7, r3
   14f44:	bls	15828 <sprintf@plt+0x4250>
   14f48:	mov	r3, r2
   14f4c:	mov	r8, #0
   14f50:	add	r9, sp, #60	; 0x3c
   14f54:	str	r8, [sp, #20]
   14f58:	mov	fp, r8
   14f5c:	mov	r0, r8
   14f60:	mov	r1, r8
   14f64:	str	r4, [sp, #24]
   14f68:	b	150c8 <sprintf@plt+0x3af0>
   14f6c:	bl	115cc <__errno_location@plt>
   14f70:	mov	r3, #22
   14f74:	str	r3, [r0]
   14f78:	b	15028 <sprintf@plt+0x3a50>
   14f7c:	cmp	fp, #0
   14f80:	beq	14f90 <sprintf@plt+0x39b8>
   14f84:	ldr	r3, [sp, #20]
   14f88:	lsl	r3, r3, #4
   14f8c:	strb	r3, [r9], #1
   14f90:	add	r2, r4, #1
   14f94:	cmp	r9, r7
   14f98:	movcc	r0, #0
   14f9c:	movcs	r0, #1
   14fa0:	cmp	r6, r2
   14fa4:	movhi	r6, r0
   14fa8:	orrls	r6, r0, #1
   14fac:	cmp	r6, #0
   14fb0:	bne	157f0 <sprintf@plt+0x4218>
   14fb4:	cmp	r1, #0
   14fb8:	ble	14fe8 <sprintf@plt+0x3a10>
   14fbc:	add	r3, r1, #3
   14fc0:	bic	r3, r3, #3
   14fc4:	cmp	r3, r8
   14fc8:	bne	15818 <sprintf@plt+0x4240>
   14fcc:	sub	r3, r8, r1
   14fd0:	rsb	r3, r3, #8
   14fd4:	ldr	r0, [sp, #20]
   14fd8:	lsl	r3, r0, r3
   14fdc:	tst	r3, #255	; 0xff
   14fe0:	bne	15820 <sprintf@plt+0x4248>
   14fe4:	mov	r8, r1
   14fe8:	cmp	r8, #256	; 0x100
   14fec:	moveq	r8, #0
   14ff0:	mov	r3, #65	; 0x41
   14ff4:	strb	r3, [sl]
   14ff8:	ldr	r3, [sp, #56]	; 0x38
   14ffc:	strb	r8, [r3]
   15000:	add	r3, r9, #1
   15004:	str	r3, [sp, #56]	; 0x38
   15008:	ldrb	r3, [r2]
   1500c:	cmp	r3, #0
   15010:	beq	15460 <sprintf@plt+0x3e88>
   15014:	cmp	r3, #46	; 0x2e
   15018:	beq	15118 <sprintf@plt+0x3b40>
   1501c:	bl	115cc <__errno_location@plt>
   15020:	mov	r3, #22
   15024:	str	r3, [r0]
   15028:	mvn	r0, #0
   1502c:	b	15784 <sprintf@plt+0x41ac>
   15030:	cmp	r1, #0
   15034:	beq	15060 <sprintf@plt+0x3a88>
   15038:	lsl	lr, r2, #1
   1503c:	ldrh	lr, [ip, lr]
   15040:	tst	lr, #2048	; 0x800
   15044:	beq	157f8 <sprintf@plt+0x4220>
   15048:	cmp	r0, #0
   1504c:	bne	150a8 <sprintf@plt+0x3ad0>
   15050:	cmp	r2, #48	; 0x30
   15054:	beq	15800 <sprintf@plt+0x4228>
   15058:	mov	r0, r4
   1505c:	b	150a8 <sprintf@plt+0x3ad0>
   15060:	lsl	lr, r2, #1
   15064:	ldrh	lr, [ip, lr]
   15068:	tst	lr, #4096	; 0x1000
   1506c:	beq	15808 <sprintf@plt+0x4230>
   15070:	add	r2, r5, r2
   15074:	ldrb	r2, [r2, #12]
   15078:	ldr	lr, [sp, #20]
   1507c:	add	r2, r2, lr, lsl #4
   15080:	str	r2, [sp, #20]
   15084:	add	fp, fp, #4
   15088:	add	r8, r8, #4
   1508c:	cmp	r8, #256	; 0x100
   15090:	bgt	15810 <sprintf@plt+0x4238>
   15094:	cmp	fp, #8
   15098:	strbeq	r2, [r9], #1
   1509c:	moveq	fp, r1
   150a0:	b	150a8 <sprintf@plt+0x3ad0>
   150a4:	ldr	r1, [sp, #24]
   150a8:	mov	r2, r3
   150ac:	cmp	r6, r3
   150b0:	movls	lr, #0
   150b4:	movhi	lr, #1
   150b8:	cmp	r9, r7
   150bc:	movcs	lr, #0
   150c0:	cmp	lr, #0
   150c4:	beq	15830 <sprintf@plt+0x4258>
   150c8:	mov	r4, r3
   150cc:	ldrb	r2, [r3], #1
   150d0:	cmp	r2, #47	; 0x2f
   150d4:	beq	150a4 <sprintf@plt+0x3acc>
   150d8:	cmp	r2, #93	; 0x5d
   150dc:	bne	15030 <sprintf@plt+0x3a58>
   150e0:	cmp	r1, #0
   150e4:	beq	14f7c <sprintf@plt+0x39a4>
   150e8:	cmp	r0, #0
   150ec:	beq	157e8 <sprintf@plt+0x4210>
   150f0:	mov	r2, #10
   150f4:	add	r1, sp, #60	; 0x3c
   150f8:	bl	11440 <strtol@plt>
   150fc:	mov	r1, r0
   15100:	ldr	r3, [sp, #60]	; 0x3c
   15104:	ldrb	r3, [r3]
   15108:	cmp	r3, #93	; 0x5d
   1510c:	beq	14f7c <sprintf@plt+0x39a4>
   15110:	mov	r4, #22
   15114:	b	157d4 <sprintf@plt+0x41fc>
   15118:	add	fp, r2, #1
   1511c:	mov	sl, r9
   15120:	mov	r4, #0
   15124:	b	15174 <sprintf@plt+0x3b9c>
   15128:	bl	115cc <__errno_location@plt>
   1512c:	mov	r3, #90	; 0x5a
   15130:	str	r3, [r0]
   15134:	b	15028 <sprintf@plt+0x3a50>
   15138:	bl	115cc <__errno_location@plt>
   1513c:	mov	r3, #90	; 0x5a
   15140:	str	r3, [r0]
   15144:	b	15028 <sprintf@plt+0x3a50>
   15148:	cmp	r6, #92	; 0x5c
   1514c:	beq	1530c <sprintf@plt+0x3d34>
   15150:	cmp	r6, #46	; 0x2e
   15154:	beq	15220 <sprintf@plt+0x3c48>
   15158:	ldr	r3, [sp, #56]	; 0x38
   1515c:	cmp	r3, r7
   15160:	bcs	152fc <sprintf@plt+0x3d24>
   15164:	add	r2, r3, #1
   15168:	str	r2, [sp, #56]	; 0x38
   1516c:	strb	r6, [r3]
   15170:	mov	r4, #0
   15174:	mov	r8, fp
   15178:	mov	fp, r8
   1517c:	ldrb	r6, [fp], #1
   15180:	cmp	r6, #0
   15184:	beq	15314 <sprintf@plt+0x3d3c>
   15188:	cmp	r4, #0
   1518c:	beq	15148 <sprintf@plt+0x3b70>
   15190:	cmp	r6, #91	; 0x5b
   15194:	beq	14ee0 <sprintf@plt+0x3908>
   15198:	mov	r1, r6
   1519c:	mov	r0, r5
   151a0:	bl	112f0 <strchr@plt>
   151a4:	cmp	r0, #0
   151a8:	beq	15158 <sprintf@plt+0x3b80>
   151ac:	sub	r0, r0, r5
   151b0:	mov	r4, #100	; 0x64
   151b4:	mul	r4, r4, r0
   151b8:	ldrb	r1, [r8, #1]
   151bc:	cmp	r1, #0
   151c0:	beq	15128 <sprintf@plt+0x3b50>
   151c4:	mov	r0, r5
   151c8:	bl	112f0 <strchr@plt>
   151cc:	cmp	r0, #0
   151d0:	beq	15128 <sprintf@plt+0x3b50>
   151d4:	sub	r0, r0, r5
   151d8:	add	r0, r0, r0, lsl #2
   151dc:	add	r4, r4, r0, lsl #1
   151e0:	add	fp, r8, #3
   151e4:	ldrb	r1, [r8, #2]
   151e8:	cmp	r1, #0
   151ec:	beq	15138 <sprintf@plt+0x3b60>
   151f0:	mov	r0, r5
   151f4:	bl	112f0 <strchr@plt>
   151f8:	cmp	r0, #0
   151fc:	beq	15138 <sprintf@plt+0x3b60>
   15200:	sub	r0, r0, r5
   15204:	add	r6, r0, r4
   15208:	cmp	r6, #255	; 0xff
   1520c:	ble	15158 <sprintf@plt+0x3b80>
   15210:	bl	115cc <__errno_location@plt>
   15214:	mov	r3, #90	; 0x5a
   15218:	str	r3, [r0]
   1521c:	b	15028 <sprintf@plt+0x3a50>
   15220:	ldr	r3, [sp, #56]	; 0x38
   15224:	sub	r3, r3, sl
   15228:	sub	r3, r3, #1
   1522c:	ands	r4, r3, #192	; 0xc0
   15230:	bne	15268 <sprintf@plt+0x3c90>
   15234:	cmp	sl, r7
   15238:	bcs	15278 <sprintf@plt+0x3ca0>
   1523c:	strb	r3, [sl]
   15240:	ldrb	r2, [r8, #1]
   15244:	cmp	r2, #0
   15248:	beq	15288 <sprintf@plt+0x3cb0>
   1524c:	cmp	r2, #46	; 0x2e
   15250:	cmpne	r3, #0
   15254:	beq	152ec <sprintf@plt+0x3d14>
   15258:	ldr	sl, [sp, #56]	; 0x38
   1525c:	add	r3, sl, #1
   15260:	str	r3, [sp, #56]	; 0x38
   15264:	b	15174 <sprintf@plt+0x3b9c>
   15268:	bl	115cc <__errno_location@plt>
   1526c:	mov	r3, #90	; 0x5a
   15270:	str	r3, [r0]
   15274:	b	15028 <sprintf@plt+0x3a50>
   15278:	bl	115cc <__errno_location@plt>
   1527c:	mov	r3, #90	; 0x5a
   15280:	str	r3, [r0]
   15284:	b	15028 <sprintf@plt+0x3a50>
   15288:	ldr	sl, [sp, #8]
   1528c:	cmp	r3, #0
   15290:	beq	152b8 <sprintf@plt+0x3ce0>
   15294:	ldr	r3, [sp, #56]	; 0x38
   15298:	add	r2, sp, #316	; 0x13c
   1529c:	add	r2, r2, #3
   152a0:	cmp	r3, r2
   152a4:	bcs	152dc <sprintf@plt+0x3d04>
   152a8:	add	r2, r3, #1
   152ac:	str	r2, [sp, #56]	; 0x38
   152b0:	mov	r2, #0
   152b4:	strb	r2, [r3]
   152b8:	add	r2, sp, #64	; 0x40
   152bc:	ldr	r3, [sp, #56]	; 0x38
   152c0:	sub	r3, r3, r2
   152c4:	cmp	r3, #255	; 0xff
   152c8:	ble	15388 <sprintf@plt+0x3db0>
   152cc:	bl	115cc <__errno_location@plt>
   152d0:	mov	r3, #90	; 0x5a
   152d4:	str	r3, [r0]
   152d8:	b	15028 <sprintf@plt+0x3a50>
   152dc:	bl	115cc <__errno_location@plt>
   152e0:	mov	r3, #90	; 0x5a
   152e4:	str	r3, [r0]
   152e8:	b	15028 <sprintf@plt+0x3a50>
   152ec:	bl	115cc <__errno_location@plt>
   152f0:	mov	r3, #90	; 0x5a
   152f4:	str	r3, [r0]
   152f8:	b	15028 <sprintf@plt+0x3a50>
   152fc:	bl	115cc <__errno_location@plt>
   15300:	mov	r3, #90	; 0x5a
   15304:	str	r3, [r0]
   15308:	b	15028 <sprintf@plt+0x3a50>
   1530c:	mov	r4, #1
   15310:	b	15174 <sprintf@plt+0x3b9c>
   15314:	mov	r2, sl
   15318:	mov	r1, sl
   1531c:	ldr	sl, [sp, #8]
   15320:	ldr	r3, [sp, #56]	; 0x38
   15324:	sub	r3, r3, r2
   15328:	sub	r3, r3, #1
   1532c:	tst	r3, #192	; 0xc0
   15330:	bne	15440 <sprintf@plt+0x3e68>
   15334:	add	r2, sp, #316	; 0x13c
   15338:	add	r2, r2, #3
   1533c:	cmp	r1, r2
   15340:	bcs	15450 <sprintf@plt+0x3e78>
   15344:	strb	r3, [r1]
   15348:	cmp	r3, #0
   1534c:	beq	15374 <sprintf@plt+0x3d9c>
   15350:	ldr	r3, [sp, #56]	; 0x38
   15354:	add	r2, sp, #316	; 0x13c
   15358:	add	r2, r2, #3
   1535c:	cmp	r3, r2
   15360:	bcs	1546c <sprintf@plt+0x3e94>
   15364:	add	r2, r3, #1
   15368:	str	r2, [sp, #56]	; 0x38
   1536c:	mov	r2, #0
   15370:	strb	r2, [r3]
   15374:	add	r2, sp, #64	; 0x40
   15378:	ldr	r3, [sp, #56]	; 0x38
   1537c:	sub	r3, r3, r2
   15380:	cmp	r3, #255	; 0xff
   15384:	bgt	1547c <sprintf@plt+0x3ea4>
   15388:	ldr	fp, [sp, #320]	; 0x140
   1538c:	cmp	fp, #0
   15390:	streq	fp, [sp, #8]
   15394:	beq	153b8 <sprintf@plt+0x3de0>
   15398:	ldr	r3, [sp, #324]	; 0x144
   1539c:	cmp	r3, #0
   153a0:	beq	1548c <sprintf@plt+0x3eb4>
   153a4:	add	r3, sp, #324	; 0x144
   153a8:	ldr	r2, [r3, #4]!
   153ac:	cmp	r2, #0
   153b0:	bne	153a8 <sprintf@plt+0x3dd0>
   153b4:	str	r3, [sp, #8]
   153b8:	mov	r5, #0
   153bc:	add	r4, sp, #64	; 0x40
   153c0:	ldrb	r6, [r4]
   153c4:	and	r3, r6, #192	; 0xc0
   153c8:	cmp	r3, #192	; 0xc0
   153cc:	beq	15498 <sprintf@plt+0x3ec0>
   153d0:	mov	r0, r4
   153d4:	bl	142b0 <sprintf@plt+0x2cd8>
   153d8:	cmp	r0, #0
   153dc:	blt	154a8 <sprintf@plt+0x3ed0>
   153e0:	add	r3, r0, #1
   153e4:	add	r5, r5, r3
   153e8:	cmp	r5, #255	; 0xff
   153ec:	bgt	154b8 <sprintf@plt+0x3ee0>
   153f0:	add	r0, r0, #1
   153f4:	add	r4, r4, r0
   153f8:	cmp	r6, #0
   153fc:	bne	153c0 <sprintf@plt+0x3de8>
   15400:	add	r3, sl, #12
   15404:	str	r3, [sp, #32]
   15408:	ldr	r2, [sp, #4]
   1540c:	add	r2, r3, r2
   15410:	str	r2, [sp, #28]
   15414:	ldr	r2, [sp, #8]
   15418:	str	r2, [sp, #36]	; 0x24
   1541c:	str	r3, [sp, #4]
   15420:	mov	r3, #1
   15424:	str	r3, [sp, #44]	; 0x2c
   15428:	add	r9, sp, #64	; 0x40
   1542c:	mov	r3, #0
   15430:	str	r3, [sp, #48]	; 0x30
   15434:	str	sl, [sp, #52]	; 0x34
   15438:	mov	sl, r9
   1543c:	b	15648 <sprintf@plt+0x4070>
   15440:	bl	115cc <__errno_location@plt>
   15444:	mov	r3, #90	; 0x5a
   15448:	str	r3, [r0]
   1544c:	b	15028 <sprintf@plt+0x3a50>
   15450:	bl	115cc <__errno_location@plt>
   15454:	mov	r3, #90	; 0x5a
   15458:	str	r3, [r0]
   1545c:	b	15028 <sprintf@plt+0x3a50>
   15460:	ldr	sl, [sp, #8]
   15464:	mov	r1, r9
   15468:	b	15344 <sprintf@plt+0x3d6c>
   1546c:	bl	115cc <__errno_location@plt>
   15470:	mov	r3, #90	; 0x5a
   15474:	str	r3, [r0]
   15478:	b	15028 <sprintf@plt+0x3a50>
   1547c:	bl	115cc <__errno_location@plt>
   15480:	mov	r3, #90	; 0x5a
   15484:	str	r3, [r0]
   15488:	b	15028 <sprintf@plt+0x3a50>
   1548c:	add	r3, sp, #324	; 0x144
   15490:	str	r3, [sp, #8]
   15494:	b	153b8 <sprintf@plt+0x3de0>
   15498:	bl	115cc <__errno_location@plt>
   1549c:	mov	r3, #90	; 0x5a
   154a0:	str	r3, [r0]
   154a4:	b	15028 <sprintf@plt+0x3a50>
   154a8:	bl	115cc <__errno_location@plt>
   154ac:	mov	r3, #22
   154b0:	str	r3, [r0]
   154b4:	b	15028 <sprintf@plt+0x3a50>
   154b8:	bl	115cc <__errno_location@plt>
   154bc:	mov	r3, #90	; 0x5a
   154c0:	str	r3, [r0]
   154c4:	b	15028 <sprintf@plt+0x3a50>
   154c8:	mov	r0, r4
   154cc:	bl	142b0 <sprintf@plt+0x2cd8>
   154d0:	ldrb	ip, [r5], #1
   154d4:	cmp	ip, r0
   154d8:	bne	15538 <sprintf@plt+0x3f60>
   154dc:	add	r1, r4, #1
   154e0:	cmp	ip, #0
   154e4:	beq	15520 <sprintf@plt+0x3f48>
   154e8:	ldrb	r3, [r5], #1
   154ec:	sub	r2, r3, #65	; 0x41
   154f0:	cmp	r2, #25
   154f4:	addls	r3, r3, #32
   154f8:	ldrb	r2, [r1], #1
   154fc:	sub	r0, r2, #65	; 0x41
   15500:	cmp	r0, #25
   15504:	addls	r2, r2, #32
   15508:	cmp	r2, r3
   1550c:	bne	15538 <sprintf@plt+0x3f60>
   15510:	rsb	r3, r1, #1
   15514:	add	r3, r4, r3
   15518:	cmn	r3, ip
   1551c:	bne	154e8 <sprintf@plt+0x3f10>
   15520:	ldrb	r3, [r5]
   15524:	cmp	r3, #0
   15528:	bne	155a0 <sprintf@plt+0x3fc8>
   1552c:	ldrb	r3, [r1]
   15530:	cmp	r3, #0
   15534:	beq	155a8 <sprintf@plt+0x3fd0>
   15538:	add	r6, r6, #1
   1553c:	ldrb	r6, [r7, r6]!
   15540:	cmp	r6, #0
   15544:	beq	1555c <sprintf@plt+0x3f84>
   15548:	tst	r6, #192	; 0xc0
   1554c:	bne	1555c <sprintf@plt+0x3f84>
   15550:	sub	r8, r7, fp
   15554:	cmp	r8, #16384	; 0x4000
   15558:	blt	156a4 <sprintf@plt+0x40cc>
   1555c:	ldr	r3, [sp, #20]
   15560:	add	r3, r3, #8
   15564:	ldr	r2, [sp, #40]	; 0x28
   15568:	str	r2, [sp, #20]
   1556c:	ldr	r2, [sp, #8]
   15570:	cmp	r2, r3
   15574:	bhi	15674 <sprintf@plt+0x409c>
   15578:	bl	115cc <__errno_location@plt>
   1557c:	mov	r3, #2
   15580:	str	r3, [r0]
   15584:	b	156d4 <sprintf@plt+0x40fc>
   15588:	lsl	r3, r3, #8
   1558c:	and	r3, r3, #16128	; 0x3f00
   15590:	ldrb	r4, [r4, #1]
   15594:	orr	r4, r3, r4
   15598:	add	r4, fp, r4
   1559c:	b	156ac <sprintf@plt+0x40d4>
   155a0:	mov	r4, r1
   155a4:	b	156ac <sprintf@plt+0x40d4>
   155a8:	cmp	r8, #0
   155ac:	blt	156d4 <sprintf@plt+0x40fc>
   155b0:	ldr	sl, [sp, #52]	; 0x34
   155b4:	ldr	r2, [sp, #4]
   155b8:	add	r3, r2, #1
   155bc:	ldr	r1, [sp, #28]
   155c0:	cmp	r1, r3
   155c4:	bls	157a0 <sprintf@plt+0x41c8>
   155c8:	mvn	r3, #63	; 0x3f
   155cc:	orr	r3, r3, r8, asr #8
   155d0:	mov	r1, r2
   155d4:	strb	r3, [r2]
   155d8:	rsbs	r2, r8, #0
   155dc:	uxtb	r3, r8
   155e0:	uxtb	r2, r2
   155e4:	rsbpl	r3, r2, #0
   155e8:	strb	r3, [r1, #1]
   155ec:	add	r4, r1, #2
   155f0:	ldr	r3, [sp, #32]
   155f4:	sub	r4, r4, r3
   155f8:	b	15744 <sprintf@plt+0x416c>
   155fc:	and	r3, r9, #192	; 0xc0
   15600:	cmp	r3, #192	; 0xc0
   15604:	beq	157a0 <sprintf@plt+0x41c8>
   15608:	mov	r0, sl
   1560c:	bl	142b0 <sprintf@plt+0x2cd8>
   15610:	mov	r6, r0
   15614:	add	r5, r0, #1
   15618:	ldr	r0, [sp, #4]
   1561c:	add	r4, r0, r5
   15620:	ldr	r3, [sp, #28]
   15624:	cmp	r3, r4
   15628:	bls	157a0 <sprintf@plt+0x41c8>
   1562c:	mov	r2, r5
   15630:	mov	r1, sl
   15634:	bl	1141c <memcpy@plt>
   15638:	add	sl, sl, r5
   1563c:	str	r4, [sp, #4]
   15640:	cmp	r6, #0
   15644:	beq	1572c <sprintf@plt+0x4154>
   15648:	ldrb	r9, [sl]
   1564c:	cmp	r9, #0
   15650:	cmpne	fp, #0
   15654:	beq	155fc <sprintf@plt+0x4024>
   15658:	ldr	r3, [sp, #8]
   1565c:	add	r2, sp, #324	; 0x144
   15660:	cmp	r3, r2
   15664:	bls	15578 <sprintf@plt+0x3fa0>
   15668:	add	r3, sp, #320	; 0x140
   1566c:	str	r3, [sp, #20]
   15670:	str	sl, [sp, #24]
   15674:	ldr	r3, [sp, #20]
   15678:	add	r2, r3, #4
   1567c:	str	r2, [sp, #40]	; 0x28
   15680:	ldr	r7, [r3, #4]
   15684:	ldrb	r6, [r7]
   15688:	cmp	r6, #0
   1568c:	beq	1555c <sprintf@plt+0x3f84>
   15690:	tst	r6, #192	; 0xc0
   15694:	bne	1555c <sprintf@plt+0x3f84>
   15698:	sub	r8, r7, fp
   1569c:	cmp	r8, #16384	; 0x4000
   156a0:	bge	1555c <sprintf@plt+0x3f84>
   156a4:	mov	r4, r7
   156a8:	ldr	r5, [sp, #24]
   156ac:	ldrb	r3, [r4]
   156b0:	cmp	r3, #0
   156b4:	beq	15538 <sprintf@plt+0x3f60>
   156b8:	ands	r2, r3, #192	; 0xc0
   156bc:	beq	154c8 <sprintf@plt+0x3ef0>
   156c0:	cmp	r2, #192	; 0xc0
   156c4:	beq	15588 <sprintf@plt+0x3fb0>
   156c8:	bl	115cc <__errno_location@plt>
   156cc:	mov	r3, #90	; 0x5a
   156d0:	str	r3, [r0]
   156d4:	add	r3, sp, #396	; 0x18c
   156d8:	ldr	r2, [sp, #36]	; 0x24
   156dc:	cmp	r2, r3
   156e0:	bcs	155fc <sprintf@plt+0x4024>
   156e4:	ldr	r3, [sp, #4]
   156e8:	sub	r3, r3, fp
   156ec:	ldr	r2, [sp, #44]	; 0x2c
   156f0:	cmp	r3, #16384	; 0x4000
   156f4:	movge	r2, #0
   156f8:	andlt	r2, r2, #1
   156fc:	cmp	r2, #0
   15700:	beq	155fc <sprintf@plt+0x4024>
   15704:	ldr	r2, [sp, #36]	; 0x24
   15708:	mov	r3, r2
   1570c:	ldr	r1, [sp, #4]
   15710:	str	r1, [r3], #4
   15714:	mov	r1, #0
   15718:	str	r1, [r2, #4]
   1571c:	str	r3, [sp, #36]	; 0x24
   15720:	ldr	r3, [sp, #48]	; 0x30
   15724:	str	r3, [sp, #44]	; 0x2c
   15728:	b	155fc <sprintf@plt+0x4024>
   1572c:	ldr	sl, [sp, #52]	; 0x34
   15730:	ldr	r3, [sp, #28]
   15734:	cmp	r3, r4
   15738:	bcc	157a0 <sprintf@plt+0x41c8>
   1573c:	ldr	r3, [sp, #32]
   15740:	sub	r4, r4, r3
   15744:	cmp	r4, #0
   15748:	blt	157c0 <sprintf@plt+0x41e8>
   1574c:	ldr	r2, [sp, #32]
   15750:	add	r0, r2, r4
   15754:	ldr	r1, [sp, #16]
   15758:	ubfx	r3, r1, #8, #8
   1575c:	strb	r3, [r2, r4]
   15760:	strb	r1, [r0, #1]
   15764:	ldr	r2, [sp, #12]
   15768:	ubfx	r3, r2, #8, #8
   1576c:	strb	r3, [r0, #2]
   15770:	strb	r2, [r0, #3]
   15774:	mov	r3, #256	; 0x100
   15778:	strh	r3, [sl, #4]
   1577c:	add	r0, r0, #4
   15780:	sub	r0, r0, sl
   15784:	add	sp, sp, #404	; 0x194
   15788:	ldrd	r4, [sp]
   1578c:	ldrd	r6, [sp, #8]
   15790:	ldrd	r8, [sp, #16]
   15794:	ldrd	sl, [sp, #24]
   15798:	add	sp, sp, #32
   1579c:	pop	{pc}		; (ldr pc, [sp], #4)
   157a0:	bl	115cc <__errno_location@plt>
   157a4:	mov	r3, #90	; 0x5a
   157a8:	str	r3, [r0]
   157ac:	b	15028 <sprintf@plt+0x3a50>
   157b0:	mvn	r0, #0
   157b4:	b	15784 <sprintf@plt+0x41ac>
   157b8:	mvn	r0, #0
   157bc:	b	15784 <sprintf@plt+0x41ac>
   157c0:	mvn	r0, #0
   157c4:	b	15784 <sprintf@plt+0x41ac>
   157c8:	mov	r4, #22
   157cc:	b	157d4 <sprintf@plt+0x41fc>
   157d0:	mov	r4, #22
   157d4:	bl	115cc <__errno_location@plt>
   157d8:	str	r4, [r0]
   157dc:	b	15028 <sprintf@plt+0x3a50>
   157e0:	mov	r4, #22
   157e4:	b	157d4 <sprintf@plt+0x41fc>
   157e8:	mov	r4, #22
   157ec:	b	157d4 <sprintf@plt+0x41fc>
   157f0:	mov	r4, #90	; 0x5a
   157f4:	b	157d4 <sprintf@plt+0x41fc>
   157f8:	mov	r4, #22
   157fc:	b	157d4 <sprintf@plt+0x41fc>
   15800:	mov	r4, #22
   15804:	b	157d4 <sprintf@plt+0x41fc>
   15808:	mov	r4, #22
   1580c:	b	157d4 <sprintf@plt+0x41fc>
   15810:	mov	r4, #22
   15814:	b	157d4 <sprintf@plt+0x41fc>
   15818:	mov	r4, #22
   1581c:	b	157d4 <sprintf@plt+0x41fc>
   15820:	mov	r4, #22
   15824:	b	157d4 <sprintf@plt+0x41fc>
   15828:	mov	r8, #0
   1582c:	add	r9, sp, #60	; 0x3c
   15830:	cmp	r9, r7
   15834:	movcc	r3, #0
   15838:	movcs	r3, #1
   1583c:	cmp	r6, r2
   15840:	movhi	r6, r3
   15844:	orrls	r6, r3, #1
   15848:	cmp	r6, #0
   1584c:	beq	14fe8 <sprintf@plt+0x3a10>
   15850:	mov	r4, #90	; 0x5a
   15854:	b	157d4 <sprintf@plt+0x41fc>
   15858:	str	r4, [sp, #-8]!
   1585c:	str	lr, [sp, #4]
   15860:	ldr	r0, [r2]
   15864:	mov	r2, #10
   15868:	mov	r1, #0
   1586c:	bl	11440 <strtol@plt>
   15870:	cmp	r0, #0
   15874:	blt	15890 <sprintf@plt+0x42b8>
   15878:	movw	r3, #48484	; 0xbd64
   1587c:	movt	r3, #2
   15880:	str	r0, [r3]
   15884:	ldr	r4, [sp]
   15888:	add	sp, sp, #4
   1588c:	pop	{pc}		; (ldr pc, [sp], #4)
   15890:	mov	r2, r0
   15894:	movw	r1, #39104	; 0x98c0
   15898:	movt	r1, #1
   1589c:	mov	r0, #67	; 0x43
   158a0:	bl	122a0 <sprintf@plt+0xcc8>
   158a4:	mov	r0, #3
   158a8:	bl	115c0 <exit@plt>
   158ac:	strd	r4, [sp, #-16]!
   158b0:	str	r6, [sp, #8]
   158b4:	str	lr, [sp, #12]
   158b8:	mov	r6, r0
   158bc:	movw	r3, #65496	; 0xffd8
   158c0:	movt	r3, #2
   158c4:	ldr	r4, [r3]
   158c8:	cmp	r4, #0
   158cc:	beq	1590c <sprintf@plt+0x4334>
   158d0:	ldr	r5, [r4]
   158d4:	mov	r1, r6
   158d8:	mov	r0, r5
   158dc:	bl	11308 <strcasecmp@plt>
   158e0:	cmp	r0, #0
   158e4:	beq	158f8 <sprintf@plt+0x4320>
   158e8:	ldr	r4, [r4, #8]
   158ec:	cmp	r4, #0
   158f0:	bne	158d0 <sprintf@plt+0x42f8>
   158f4:	mov	r5, r4
   158f8:	mov	r0, r5
   158fc:	ldrd	r4, [sp]
   15900:	ldr	r6, [sp, #8]
   15904:	add	sp, sp, #12
   15908:	pop	{pc}		; (ldr pc, [sp], #4)
   1590c:	mov	r5, r4
   15910:	b	158f8 <sprintf@plt+0x4320>
   15914:	movw	r3, #65496	; 0xffd8
   15918:	movt	r3, #2
   1591c:	ldr	r3, [r3]
   15920:	cmp	r3, #0
   15924:	bxeq	lr
   15928:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1592c:	strd	r6, [sp, #8]
   15930:	str	r8, [sp, #16]
   15934:	str	lr, [sp, #20]
   15938:	ldr	r5, [r3, #8]
   1593c:	movw	r6, #65496	; 0xffd8
   15940:	movt	r6, #2
   15944:	mov	r8, #0
   15948:	mov	r7, #1
   1594c:	ldr	r4, [r3]
   15950:	ldr	r3, [r4, #788]	; 0x314
   15954:	cmp	r3, #0
   15958:	strbgt	r7, [r4, #784]	; 0x310
   1595c:	ble	15974 <sprintf@plt+0x439c>
   15960:	cmp	r5, #0
   15964:	beq	159f8 <sprintf@plt+0x4420>
   15968:	mov	r3, r5
   1596c:	ldr	r5, [r5, #8]
   15970:	b	1594c <sprintf@plt+0x4374>
   15974:	ldr	r0, [r6]
   15978:	cmp	r0, #0
   1597c:	beq	159ec <sprintf@plt+0x4414>
   15980:	ldr	r3, [r0]
   15984:	cmp	r4, r3
   15988:	beq	159a4 <sprintf@plt+0x43cc>
   1598c:	ldr	r0, [r0, #8]
   15990:	cmp	r0, #0
   15994:	beq	159ec <sprintf@plt+0x4414>
   15998:	ldr	r3, [r0]
   1599c:	cmp	r4, r3
   159a0:	bne	1598c <sprintf@plt+0x43b4>
   159a4:	ldr	r3, [r0, #8]
   159a8:	cmp	r3, #0
   159ac:	ldrne	r2, [r0, #4]
   159b0:	strne	r2, [r3, #4]
   159b4:	ldreq	r3, [r0, #4]
   159b8:	streq	r3, [r6, #4]
   159bc:	ldr	r3, [r0, #4]
   159c0:	cmp	r3, #0
   159c4:	ldrne	r2, [r0, #8]
   159c8:	strne	r2, [r3, #8]
   159cc:	ldreq	r3, [r0, #8]
   159d0:	streq	r3, [r6]
   159d4:	str	r8, [r0, #4]
   159d8:	str	r8, [r0, #8]
   159dc:	ldr	r3, [r6, #8]
   159e0:	sub	r3, r3, #1
   159e4:	str	r3, [r6, #8]
   159e8:	bl	11428 <rb_free_rb_dlink_node@plt>
   159ec:	mov	r0, r4
   159f0:	bl	113a4 <free@plt>
   159f4:	b	15960 <sprintf@plt+0x4388>
   159f8:	ldrd	r4, [sp]
   159fc:	ldrd	r6, [sp, #8]
   15a00:	ldr	r8, [sp, #16]
   15a04:	add	sp, sp, #20
   15a08:	pop	{pc}		; (ldr pc, [sp], #4)
   15a0c:	str	r4, [sp, #-8]!
   15a10:	str	lr, [sp, #4]
   15a14:	bl	15914 <sprintf@plt+0x433c>
   15a18:	ldr	r4, [sp]
   15a1c:	add	sp, sp, #4
   15a20:	pop	{pc}		; (ldr pc, [sp], #4)
   15a24:	strd	r4, [sp, #-16]!
   15a28:	str	r6, [sp, #8]
   15a2c:	str	lr, [sp, #12]
   15a30:	ldr	r5, [r2]
   15a34:	mov	r0, r5
   15a38:	bl	158ac <sprintf@plt+0x42d4>
   15a3c:	subs	r4, r0, #0
   15a40:	beq	15a68 <sprintf@plt+0x4490>
   15a44:	ldr	r3, [r4, #788]	; 0x314
   15a48:	cmp	r3, #0
   15a4c:	ble	15a80 <sprintf@plt+0x44a8>
   15a50:	mov	r3, #1
   15a54:	strb	r3, [r4, #784]	; 0x310
   15a58:	ldrd	r4, [sp]
   15a5c:	ldr	r6, [sp, #8]
   15a60:	add	sp, sp, #12
   15a64:	pop	{pc}		; (ldr pc, [sp], #4)
   15a68:	mov	r2, r5
   15a6c:	movw	r1, #39144	; 0x98e8
   15a70:	movt	r1, #1
   15a74:	mov	r0, #87	; 0x57
   15a78:	bl	122a0 <sprintf@plt+0xcc8>
   15a7c:	b	15a58 <sprintf@plt+0x4480>
   15a80:	movw	r3, #65496	; 0xffd8
   15a84:	movt	r3, #2
   15a88:	ldr	r0, [r3]
   15a8c:	cmp	r0, #0
   15a90:	beq	15b08 <sprintf@plt+0x4530>
   15a94:	ldr	r3, [r0]
   15a98:	cmp	r4, r3
   15a9c:	beq	15ab8 <sprintf@plt+0x44e0>
   15aa0:	ldr	r0, [r0, #8]
   15aa4:	cmp	r0, #0
   15aa8:	beq	15b08 <sprintf@plt+0x4530>
   15aac:	ldr	r3, [r0]
   15ab0:	cmp	r4, r3
   15ab4:	bne	15aa0 <sprintf@plt+0x44c8>
   15ab8:	ldr	r3, [r0, #8]
   15abc:	cmp	r3, #0
   15ac0:	ldr	r2, [r0, #4]
   15ac4:	movweq	r3, #65496	; 0xffd8
   15ac8:	movteq	r3, #2
   15acc:	str	r2, [r3, #4]
   15ad0:	ldr	r3, [r0, #4]
   15ad4:	cmp	r3, #0
   15ad8:	beq	15b14 <sprintf@plt+0x453c>
   15adc:	ldr	r2, [r0, #8]
   15ae0:	str	r2, [r3, #8]
   15ae4:	mov	r3, #0
   15ae8:	str	r3, [r0, #4]
   15aec:	str	r3, [r0, #8]
   15af0:	movw	r3, #65496	; 0xffd8
   15af4:	movt	r3, #2
   15af8:	ldr	r2, [r3, #8]
   15afc:	sub	r2, r2, #1
   15b00:	str	r2, [r3, #8]
   15b04:	bl	11428 <rb_free_rb_dlink_node@plt>
   15b08:	mov	r0, r4
   15b0c:	bl	113a4 <free@plt>
   15b10:	b	15a58 <sprintf@plt+0x4480>
   15b14:	movw	r3, #65496	; 0xffd8
   15b18:	movt	r3, #2
   15b1c:	ldr	r2, [r0, #8]
   15b20:	str	r2, [r3]
   15b24:	b	15ae4 <sprintf@plt+0x450c>
   15b28:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15b2c:	strd	r6, [sp, #8]
   15b30:	strd	r8, [sp, #16]
   15b34:	strd	sl, [sp, #24]
   15b38:	str	lr, [sp, #32]
   15b3c:	sub	sp, sp, #36	; 0x24
   15b40:	str	r2, [sp, #20]
   15b44:	ldr	r4, [r2, #8]
   15b48:	mov	r0, r4
   15b4c:	bl	113f8 <strlen@plt>
   15b50:	add	r0, r0, #1
   15b54:	bl	114dc <malloc@plt>
   15b58:	subs	r3, r0, #0
   15b5c:	str	r3, [sp, #16]
   15b60:	beq	15bc0 <sprintf@plt+0x45e8>
   15b64:	mov	r1, r4
   15b68:	ldr	r4, [sp, #16]
   15b6c:	mov	r0, r4
   15b70:	bl	11458 <strcpy@plt>
   15b74:	mov	r0, r4
   15b78:	ldrb	r3, [r4]
   15b7c:	cmp	r3, #42	; 0x2a
   15b80:	beq	15cfc <sprintf@plt+0x4724>
   15b84:	add	r2, sp, #28
   15b88:	movw	r1, #39188	; 0x9914
   15b8c:	movt	r1, #1
   15b90:	bl	112e4 <rb_strtok_r@plt>
   15b94:	subs	r9, r0, #0
   15b98:	beq	15de0 <sprintf@plt+0x4808>
   15b9c:	mov	fp, #0
   15ba0:	str	fp, [sp, #8]
   15ba4:	mov	sl, fp
   15ba8:	mov	r3, #1
   15bac:	str	r3, [sp, #4]
   15bb0:	movw	r3, #39188	; 0x9914
   15bb4:	movt	r3, #1
   15bb8:	str	r3, [sp, #12]
   15bbc:	b	15c98 <sprintf@plt+0x46c0>
   15bc0:	bl	114ac <rb_outofmemory@plt>
   15bc4:	bl	114ac <rb_outofmemory@plt>
   15bc8:	add	r6, r6, #1
   15bcc:	cmp	r6, #3
   15bd0:	bgt	15c20 <sprintf@plt+0x4648>
   15bd4:	ldr	r7, [sp, #4]
   15bd8:	ldrb	r4, [r5, #1]!
   15bdc:	cmp	r4, #0
   15be0:	beq	15c38 <sprintf@plt+0x4660>
   15be4:	cmp	r4, #46	; 0x2e
   15be8:	beq	15bc8 <sprintf@plt+0x45f0>
   15bec:	bl	114b8 <__ctype_b_loc@plt>
   15bf0:	ldr	r2, [r0]
   15bf4:	lsl	r3, r4, #1
   15bf8:	ldrh	r3, [r2, r3]
   15bfc:	tst	r3, #2048	; 0x800
   15c00:	bne	15bd8 <sprintf@plt+0x4600>
   15c04:	mov	r2, r4
   15c08:	movw	r1, #39252	; 0x9954
   15c0c:	movt	r1, #1
   15c10:	mov	r0, #67	; 0x43
   15c14:	bl	122a0 <sprintf@plt+0xcc8>
   15c18:	mov	r0, #3
   15c1c:	bl	115c0 <exit@plt>
   15c20:	movw	r1, #39192	; 0x9918
   15c24:	movt	r1, #1
   15c28:	mov	r0, #67	; 0x43
   15c2c:	bl	122a0 <sprintf@plt+0xcc8>
   15c30:	mov	r0, #3
   15c34:	bl	115c0 <exit@plt>
   15c38:	sub	r6, r6, #1
   15c3c:	cmp	r6, #1
   15c40:	bls	15ccc <sprintf@plt+0x46f4>
   15c44:	mov	r0, r8
   15c48:	str	r7, [r0], #4
   15c4c:	mov	r2, #53	; 0x35
   15c50:	mov	r1, r9
   15c54:	bl	11380 <rb_strlcpy@plt>
   15c58:	add	r4, r8, #60	; 0x3c
   15c5c:	str	r8, [r8, #60]	; 0x3c
   15c60:	mov	r3, #0
   15c64:	str	r3, [r8, #64]	; 0x40
   15c68:	str	sl, [r8, #68]	; 0x44
   15c6c:	cmp	sl, r3
   15c70:	strne	r4, [sl, #4]
   15c74:	beq	15ce4 <sprintf@plt+0x470c>
   15c78:	add	fp, fp, #1
   15c7c:	add	r2, sp, #28
   15c80:	ldr	r1, [sp, #12]
   15c84:	mov	r0, #0
   15c88:	bl	112e4 <rb_strtok_r@plt>
   15c8c:	mov	sl, r4
   15c90:	subs	r9, r0, #0
   15c94:	beq	15d08 <sprintf@plt+0x4730>
   15c98:	mov	r1, #72	; 0x48
   15c9c:	mov	r0, #1
   15ca0:	bl	11314 <calloc@plt>
   15ca4:	subs	r8, r0, #0
   15ca8:	beq	15bc4 <sprintf@plt+0x45ec>
   15cac:	ldrb	r4, [r9]
   15cb0:	cmp	r4, #0
   15cb4:	moveq	r7, #2
   15cb8:	beq	15c44 <sprintf@plt+0x466c>
   15cbc:	mov	r5, r9
   15cc0:	mov	r7, #2
   15cc4:	mov	r6, #0
   15cc8:	b	15be4 <sprintf@plt+0x460c>
   15ccc:	movw	r1, #39332	; 0x99a4
   15cd0:	movt	r1, #1
   15cd4:	mov	r0, #67	; 0x43
   15cd8:	bl	122a0 <sprintf@plt+0xcc8>
   15cdc:	mov	r0, #3
   15ce0:	bl	115c0 <exit@plt>
   15ce4:	ldr	r2, [sp, #8]
   15ce8:	mov	r3, r2
   15cec:	cmp	r2, #0
   15cf0:	moveq	r3, r4
   15cf4:	str	r3, [sp, #8]
   15cf8:	b	15c78 <sprintf@plt+0x46a0>
   15cfc:	mov	fp, #0
   15d00:	str	fp, [sp, #8]
   15d04:	mov	r4, fp
   15d08:	ldr	r0, [sp, #16]
   15d0c:	bl	113a4 <free@plt>
   15d10:	mov	r2, #10
   15d14:	mov	r1, #0
   15d18:	ldr	r5, [sp, #20]
   15d1c:	ldr	r0, [r5, #4]
   15d20:	bl	11440 <strtol@plt>
   15d24:	ldr	r6, [r5]
   15d28:	ldr	r7, [r5, #12]
   15d2c:	clz	r3, r7
   15d30:	lsr	r3, r3, #5
   15d34:	cmp	r6, #0
   15d38:	moveq	r3, #1
   15d3c:	ands	r8, r0, #3
   15d40:	moveq	r3, #1
   15d44:	cmp	r3, #0
   15d48:	bne	15eb0 <sprintf@plt+0x48d8>
   15d4c:	mov	r0, r6
   15d50:	bl	158ac <sprintf@plt+0x42d4>
   15d54:	subs	r5, r0, #0
   15d58:	movne	r3, #0
   15d5c:	strbne	r3, [r5, #784]	; 0x310
   15d60:	beq	15df0 <sprintf@plt+0x4818>
   15d64:	mov	r2, #256	; 0x100
   15d68:	mov	r1, r6
   15d6c:	mov	r0, r5
   15d70:	bl	11380 <rb_strlcpy@plt>
   15d74:	mov	r2, #512	; 0x200
   15d78:	mov	r1, r7
   15d7c:	add	r0, r5, #256	; 0x100
   15d80:	bl	11380 <rb_strlcpy@plt>
   15d84:	strb	r8, [r5, #768]	; 0x300
   15d88:	cmp	r4, #0
   15d8c:	beq	15dbc <sprintf@plt+0x47e4>
   15d90:	ldr	r3, [r5, #772]	; 0x304
   15d94:	cmp	r3, #0
   15d98:	beq	15e9c <sprintf@plt+0x48c4>
   15d9c:	ldr	r2, [sp, #8]
   15da0:	str	r3, [r2, #8]
   15da4:	ldr	r3, [r5, #772]	; 0x304
   15da8:	str	r2, [r3, #4]
   15dac:	str	r4, [r5, #772]	; 0x304
   15db0:	ldr	r3, [r5, #780]	; 0x30c
   15db4:	add	fp, r3, fp
   15db8:	str	fp, [r5, #780]	; 0x30c
   15dbc:	mov	r3, #0
   15dc0:	str	r3, [r5, #796]	; 0x31c
   15dc4:	add	sp, sp, #36	; 0x24
   15dc8:	ldrd	r4, [sp]
   15dcc:	ldrd	r6, [sp, #8]
   15dd0:	ldrd	r8, [sp, #16]
   15dd4:	ldrd	sl, [sp, #24]
   15dd8:	add	sp, sp, #32
   15ddc:	pop	{pc}		; (ldr pc, [sp], #4)
   15de0:	str	r9, [sp, #8]
   15de4:	mov	r4, r9
   15de8:	mov	fp, #0
   15dec:	b	15d08 <sprintf@plt+0x4730>
   15df0:	mov	r1, #800	; 0x320
   15df4:	mov	r0, #1
   15df8:	bl	11314 <calloc@plt>
   15dfc:	subs	r5, r0, #0
   15e00:	beq	15e54 <sprintf@plt+0x487c>
   15e04:	bl	11560 <rb_make_rb_dlink_node@plt>
   15e08:	cmp	r0, #0
   15e0c:	beq	15e58 <sprintf@plt+0x4880>
   15e10:	str	r5, [r0]
   15e14:	mov	r3, #0
   15e18:	str	r3, [r0, #4]
   15e1c:	movw	r3, #65496	; 0xffd8
   15e20:	movt	r3, #2
   15e24:	ldr	r3, [r3]
   15e28:	str	r3, [r0, #8]
   15e2c:	cmp	r3, #0
   15e30:	strne	r0, [r3, #4]
   15e34:	beq	15e78 <sprintf@plt+0x48a0>
   15e38:	movw	r3, #65496	; 0xffd8
   15e3c:	movt	r3, #2
   15e40:	str	r0, [r3]
   15e44:	ldr	r2, [r3, #8]
   15e48:	add	r2, r2, #1
   15e4c:	str	r2, [r3, #8]
   15e50:	b	15d64 <sprintf@plt+0x478c>
   15e54:	bl	114ac <rb_outofmemory@plt>
   15e58:	movw	r3, #39092	; 0x98b4
   15e5c:	movt	r3, #1
   15e60:	mov	r2, #144	; 0x90
   15e64:	movw	r1, #38024	; 0x9488
   15e68:	movt	r1, #1
   15e6c:	movw	r0, #38068	; 0x94b4
   15e70:	movt	r0, #1
   15e74:	bl	11374 <__assert_fail@plt>
   15e78:	movw	r3, #65496	; 0xffd8
   15e7c:	movt	r3, #2
   15e80:	ldr	r3, [r3, #4]
   15e84:	cmp	r3, #0
   15e88:	bne	15e38 <sprintf@plt+0x4860>
   15e8c:	movw	r3, #65496	; 0xffd8
   15e90:	movt	r3, #2
   15e94:	str	r0, [r3, #4]
   15e98:	b	15e38 <sprintf@plt+0x4860>
   15e9c:	str	r4, [r5, #772]	; 0x304
   15ea0:	ldr	r3, [sp, #8]
   15ea4:	str	r3, [r5, #776]	; 0x308
   15ea8:	str	fp, [r5, #780]	; 0x30c
   15eac:	b	15dbc <sprintf@plt+0x47e4>
   15eb0:	movw	r1, #39396	; 0x99e4
   15eb4:	movt	r1, #1
   15eb8:	mov	r0, #67	; 0x43
   15ebc:	bl	122a0 <sprintf@plt+0xcc8>
   15ec0:	mov	r0, #3
   15ec4:	bl	115c0 <exit@plt>
   15ec8:	ldr	r3, [r0, #788]	; 0x314
   15ecc:	sub	r3, r3, #1
   15ed0:	str	r3, [r0, #788]	; 0x314
   15ed4:	ldrb	r2, [r0, #784]	; 0x310
   15ed8:	cmp	r3, #0
   15edc:	movgt	r3, #0
   15ee0:	andle	r3, r2, #1
   15ee4:	cmp	r3, #0
   15ee8:	bxeq	lr
   15eec:	strd	r4, [sp, #-16]!
   15ef0:	str	r6, [sp, #8]
   15ef4:	str	lr, [sp, #12]
   15ef8:	mov	r4, r0
   15efc:	ldr	r0, [r0, #772]	; 0x304
   15f00:	cmp	r0, #0
   15f04:	beq	15f6c <sprintf@plt+0x4994>
   15f08:	ldr	r5, [r0, #8]
   15f0c:	mov	r6, #0
   15f10:	b	15f1c <sprintf@plt+0x4944>
   15f14:	mov	r0, r5
   15f18:	ldr	r5, [r5, #8]
   15f1c:	ldr	r3, [r0, #8]
   15f20:	cmp	r3, #0
   15f24:	ldrne	r2, [r0, #4]
   15f28:	strne	r2, [r3, #4]
   15f2c:	ldreq	r3, [r0, #4]
   15f30:	streq	r3, [r4, #776]	; 0x308
   15f34:	ldr	r3, [r0, #4]
   15f38:	cmp	r3, #0
   15f3c:	ldrne	r2, [r0, #8]
   15f40:	strne	r2, [r3, #8]
   15f44:	ldreq	r3, [r0, #8]
   15f48:	streq	r3, [r4, #772]	; 0x304
   15f4c:	str	r6, [r0, #4]
   15f50:	str	r6, [r0, #8]
   15f54:	ldr	r3, [r4, #780]	; 0x30c
   15f58:	sub	r3, r3, #1
   15f5c:	str	r3, [r4, #780]	; 0x30c
   15f60:	bl	113a4 <free@plt>
   15f64:	cmp	r5, #0
   15f68:	bne	15f14 <sprintf@plt+0x493c>
   15f6c:	movw	r3, #65496	; 0xffd8
   15f70:	movt	r3, #2
   15f74:	ldr	r0, [r3]
   15f78:	cmp	r0, #0
   15f7c:	beq	15ff4 <sprintf@plt+0x4a1c>
   15f80:	ldr	r3, [r0]
   15f84:	cmp	r3, r4
   15f88:	beq	15fa4 <sprintf@plt+0x49cc>
   15f8c:	ldr	r0, [r0, #8]
   15f90:	cmp	r0, #0
   15f94:	beq	15ff4 <sprintf@plt+0x4a1c>
   15f98:	ldr	r3, [r0]
   15f9c:	cmp	r4, r3
   15fa0:	bne	15f8c <sprintf@plt+0x49b4>
   15fa4:	ldr	r3, [r0, #8]
   15fa8:	cmp	r3, #0
   15fac:	ldr	r2, [r0, #4]
   15fb0:	movweq	r3, #65496	; 0xffd8
   15fb4:	movteq	r3, #2
   15fb8:	str	r2, [r3, #4]
   15fbc:	ldr	r3, [r0, #4]
   15fc0:	cmp	r3, #0
   15fc4:	beq	1600c <sprintf@plt+0x4a34>
   15fc8:	ldr	r2, [r0, #8]
   15fcc:	str	r2, [r3, #8]
   15fd0:	mov	r3, #0
   15fd4:	str	r3, [r0, #4]
   15fd8:	str	r3, [r0, #8]
   15fdc:	movw	r3, #65496	; 0xffd8
   15fe0:	movt	r3, #2
   15fe4:	ldr	r2, [r3, #8]
   15fe8:	sub	r2, r2, #1
   15fec:	str	r2, [r3, #8]
   15ff0:	bl	11428 <rb_free_rb_dlink_node@plt>
   15ff4:	mov	r0, r4
   15ff8:	bl	113a4 <free@plt>
   15ffc:	ldrd	r4, [sp]
   16000:	ldr	r6, [sp, #8]
   16004:	add	sp, sp, #12
   16008:	pop	{pc}		; (ldr pc, [sp], #4)
   1600c:	movw	r3, #65496	; 0xffd8
   16010:	movt	r3, #2
   16014:	ldr	r2, [r0, #8]
   16018:	str	r2, [r3]
   1601c:	b	15fd0 <sprintf@plt+0x49f8>
   16020:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16024:	strd	r6, [sp, #8]
   16028:	str	r8, [sp, #16]
   1602c:	str	lr, [sp, #20]
   16030:	movw	r3, #48484	; 0xbd64
   16034:	movt	r3, #2
   16038:	ldr	r2, [r3, #16]
   1603c:	ldr	r3, [r0, #464]	; 0x1d0
   16040:	add	r3, r3, r2, lsl #4
   16044:	ldr	r6, [r3, #8]
   16048:	cmp	r6, #0
   1604c:	beq	160b4 <sprintf@plt+0x4adc>
   16050:	mov	r5, r0
   16054:	ldr	r3, [r6, #12]
   16058:	cmp	r3, #0
   1605c:	bne	160c8 <sprintf@plt+0x4af0>
   16060:	mov	r0, r6
   16064:	bl	113a4 <free@plt>
   16068:	movw	r3, #48484	; 0xbd64
   1606c:	movt	r3, #2
   16070:	ldr	r1, [r3, #16]
   16074:	ldr	r2, [r5, #464]	; 0x1d0
   16078:	add	r2, r2, r1, lsl #4
   1607c:	mov	r1, #0
   16080:	str	r1, [r2, #8]
   16084:	ldr	r0, [r3, #16]
   16088:	ldr	r2, [r5, #464]	; 0x1d0
   1608c:	add	r2, r2, r0, lsl #4
   16090:	str	r1, [r2, #4]
   16094:	ldr	r1, [r3, #16]
   16098:	mov	r0, r5
   1609c:	bl	12d0c <sprintf@plt+0x1734>
   160a0:	ldr	r3, [r5, #460]	; 0x1cc
   160a4:	sub	r3, r3, #1
   160a8:	str	r3, [r5, #460]	; 0x1cc
   160ac:	cmp	r3, #0
   160b0:	beq	16160 <sprintf@plt+0x4b88>
   160b4:	ldrd	r4, [sp]
   160b8:	ldrd	r6, [sp, #8]
   160bc:	ldr	r8, [sp, #16]
   160c0:	add	sp, sp, #20
   160c4:	pop	{pc}		; (ldr pc, [sp], #4)
   160c8:	movw	r1, #39444	; 0x9a14
   160cc:	movt	r1, #1
   160d0:	ldr	r0, [r0]
   160d4:	bl	1223c <sprintf@plt+0xc64>
   160d8:	ldr	r3, [r6, #4]
   160dc:	cmp	r3, #0
   160e0:	beq	16060 <sprintf@plt+0x4a88>
   160e4:	ldr	r7, [r3, #8]
   160e8:	mov	r8, #0
   160ec:	ldr	r4, [r3]
   160f0:	ldr	r0, [r4, #8]
   160f4:	bl	11f4c <sprintf@plt+0x974>
   160f8:	ldr	r0, [r4]
   160fc:	bl	15ec8 <sprintf@plt+0x48f0>
   16100:	ldr	r3, [r4, #20]
   16104:	cmp	r3, #0
   16108:	ldrne	r2, [r4, #16]
   1610c:	strne	r2, [r3, #4]
   16110:	ldreq	r3, [r4, #16]
   16114:	streq	r3, [r6, #8]
   16118:	ldr	r3, [r4, #16]
   1611c:	cmp	r3, #0
   16120:	ldrne	r2, [r4, #20]
   16124:	strne	r2, [r3, #8]
   16128:	ldreq	r3, [r4, #20]
   1612c:	streq	r3, [r6, #4]
   16130:	str	r8, [r4, #16]
   16134:	str	r8, [r4, #20]
   16138:	ldr	r3, [r6, #12]
   1613c:	sub	r3, r3, #1
   16140:	str	r3, [r6, #12]
   16144:	mov	r0, r4
   16148:	bl	113a4 <free@plt>
   1614c:	cmp	r7, #0
   16150:	beq	16060 <sprintf@plt+0x4a88>
   16154:	mov	r3, r7
   16158:	ldr	r7, [r7, #8]
   1615c:	b	160ec <sprintf@plt+0x4b14>
   16160:	mov	r0, r5
   16164:	bl	12814 <sprintf@plt+0x123c>
   16168:	b	160b4 <sprintf@plt+0x4adc>
   1616c:	strd	r4, [sp, #-20]!	; 0xffffffec
   16170:	strd	r6, [sp, #8]
   16174:	str	lr, [sp, #16]
   16178:	sub	sp, sp, #260	; 0x104
   1617c:	mov	r5, r0
   16180:	mov	r7, r1
   16184:	mov	r1, #24
   16188:	mov	r0, #1
   1618c:	bl	11314 <calloc@plt>
   16190:	subs	r4, r0, #0
   16194:	beq	16264 <sprintf@plt+0x4c8c>
   16198:	movw	r3, #48484	; 0xbd64
   1619c:	movt	r3, #2
   161a0:	ldr	r2, [r3, #16]
   161a4:	ldr	r3, [r7, #464]	; 0x1d0
   161a8:	add	r3, r3, r2, lsl #4
   161ac:	ldr	r6, [r3, #8]
   161b0:	str	r5, [r4]
   161b4:	str	r7, [r4, #4]
   161b8:	ldrh	r3, [r7, #248]	; 0xf8
   161bc:	cmp	r3, #2
   161c0:	beq	16268 <sprintf@plt+0x4c90>
   161c4:	cmp	r3, #10
   161c8:	bne	161d8 <sprintf@plt+0x4c00>
   161cc:	ldrb	r3, [r5, #768]	; 0x300
   161d0:	tst	r3, #2
   161d4:	beq	16274 <sprintf@plt+0x4c9c>
   161d8:	mov	r3, r5
   161dc:	add	r2, r7, #248	; 0xf8
   161e0:	mov	r1, #256	; 0x100
   161e4:	mov	r0, sp
   161e8:	bl	13878 <sprintf@plt+0x22a0>
   161ec:	mov	r3, r4
   161f0:	movw	r2, #25596	; 0x63fc
   161f4:	movt	r2, #1
   161f8:	mov	r1, #2
   161fc:	mov	r0, sp
   16200:	bl	11d84 <sprintf@plt+0x7ac>
   16204:	str	r0, [r4, #8]
   16208:	add	r2, r4, #12
   1620c:	cmn	r6, #4
   16210:	beq	16280 <sprintf@plt+0x4ca8>
   16214:	str	r4, [r4, #12]
   16218:	mov	r3, #0
   1621c:	str	r3, [r4, #16]
   16220:	ldr	r3, [r6, #4]
   16224:	str	r3, [r4, #20]
   16228:	cmp	r3, #0
   1622c:	strne	r2, [r3, #4]
   16230:	beq	162a0 <sprintf@plt+0x4cc8>
   16234:	str	r2, [r6, #4]
   16238:	ldr	r3, [r6, #12]
   1623c:	add	r3, r3, #1
   16240:	str	r3, [r6, #12]
   16244:	ldr	r3, [r5, #788]	; 0x314
   16248:	add	r3, r3, #1
   1624c:	str	r3, [r5, #788]	; 0x314
   16250:	add	sp, sp, #260	; 0x104
   16254:	ldrd	r4, [sp]
   16258:	ldrd	r6, [sp, #8]
   1625c:	add	sp, sp, #16
   16260:	pop	{pc}		; (ldr pc, [sp], #4)
   16264:	bl	114ac <rb_outofmemory@plt>
   16268:	ldrb	r3, [r5, #768]	; 0x300
   1626c:	tst	r3, #1
   16270:	bne	161d8 <sprintf@plt+0x4c00>
   16274:	mov	r0, r4
   16278:	bl	113a4 <free@plt>
   1627c:	b	16250 <sprintf@plt+0x4c78>
   16280:	movw	r3, #39092	; 0x98b4
   16284:	movt	r3, #1
   16288:	mov	r2, #145	; 0x91
   1628c:	movw	r1, #38024	; 0x9488
   16290:	movt	r1, #1
   16294:	movw	r0, #39472	; 0x9a30
   16298:	movt	r0, #1
   1629c:	bl	11374 <__assert_fail@plt>
   162a0:	ldr	r3, [r6, #8]
   162a4:	cmp	r3, #0
   162a8:	streq	r2, [r6, #8]
   162ac:	b	16234 <sprintf@plt+0x4c5c>
   162b0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   162b4:	strd	r6, [sp, #8]
   162b8:	str	r8, [sp, #16]
   162bc:	str	lr, [sp, #20]
   162c0:	movw	r3, #48484	; 0xbd64
   162c4:	movt	r3, #2
   162c8:	ldr	r2, [r3, #16]
   162cc:	ldr	r3, [r0, #464]	; 0x1d0
   162d0:	add	r3, r3, r2, lsl #4
   162d4:	ldr	r6, [r3, #8]
   162d8:	cmp	r6, #0
   162dc:	beq	16344 <sprintf@plt+0x4d6c>
   162e0:	mov	r5, r0
   162e4:	ldr	r3, [r6, #12]
   162e8:	cmp	r3, #0
   162ec:	bne	16358 <sprintf@plt+0x4d80>
   162f0:	mov	r0, r6
   162f4:	bl	113a4 <free@plt>
   162f8:	movw	r3, #48484	; 0xbd64
   162fc:	movt	r3, #2
   16300:	ldr	r1, [r3, #16]
   16304:	ldr	r2, [r5, #464]	; 0x1d0
   16308:	add	r2, r2, r1, lsl #4
   1630c:	mov	r1, #0
   16310:	str	r1, [r2, #8]
   16314:	ldr	r0, [r3, #16]
   16318:	ldr	r2, [r5, #464]	; 0x1d0
   1631c:	add	r2, r2, r0, lsl #4
   16320:	str	r1, [r2, #4]
   16324:	ldr	r1, [r3, #16]
   16328:	mov	r0, r5
   1632c:	bl	12d0c <sprintf@plt+0x1734>
   16330:	ldr	r3, [r5, #460]	; 0x1cc
   16334:	sub	r3, r3, #1
   16338:	str	r3, [r5, #460]	; 0x1cc
   1633c:	cmp	r3, #0
   16340:	beq	163f0 <sprintf@plt+0x4e18>
   16344:	ldrd	r4, [sp]
   16348:	ldrd	r6, [sp, #8]
   1634c:	ldr	r8, [sp, #16]
   16350:	add	sp, sp, #20
   16354:	pop	{pc}		; (ldr pc, [sp], #4)
   16358:	movw	r1, #39488	; 0x9a40
   1635c:	movt	r1, #1
   16360:	ldr	r0, [r0]
   16364:	bl	1223c <sprintf@plt+0xc64>
   16368:	ldr	r3, [r6, #4]
   1636c:	cmp	r3, #0
   16370:	beq	162f0 <sprintf@plt+0x4d18>
   16374:	ldr	r7, [r3, #8]
   16378:	mov	r8, #0
   1637c:	ldr	r4, [r3]
   16380:	ldr	r0, [r4, #8]
   16384:	bl	11f4c <sprintf@plt+0x974>
   16388:	ldr	r0, [r4]
   1638c:	bl	15ec8 <sprintf@plt+0x48f0>
   16390:	ldr	r3, [r4, #20]
   16394:	cmp	r3, #0
   16398:	ldrne	r2, [r4, #16]
   1639c:	strne	r2, [r3, #4]
   163a0:	ldreq	r3, [r4, #16]
   163a4:	streq	r3, [r6, #8]
   163a8:	ldr	r3, [r4, #16]
   163ac:	cmp	r3, #0
   163b0:	ldrne	r2, [r4, #20]
   163b4:	strne	r2, [r3, #8]
   163b8:	ldreq	r3, [r4, #20]
   163bc:	streq	r3, [r6, #4]
   163c0:	str	r8, [r4, #16]
   163c4:	str	r8, [r4, #20]
   163c8:	ldr	r3, [r6, #12]
   163cc:	sub	r3, r3, #1
   163d0:	str	r3, [r6, #12]
   163d4:	mov	r0, r4
   163d8:	bl	113a4 <free@plt>
   163dc:	cmp	r7, #0
   163e0:	beq	162f0 <sprintf@plt+0x4d18>
   163e4:	mov	r3, r7
   163e8:	ldr	r7, [r7, #8]
   163ec:	b	1637c <sprintf@plt+0x4da4>
   163f0:	mov	r0, r5
   163f4:	bl	12814 <sprintf@plt+0x123c>
   163f8:	b	16344 <sprintf@plt+0x4d6c>
   163fc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16400:	strd	r6, [sp, #8]
   16404:	strd	r8, [sp, #16]
   16408:	strd	sl, [sp, #24]
   1640c:	str	lr, [sp, #32]
   16410:	sub	sp, sp, #4
   16414:	ldr	r7, [r3, #4]
   16418:	movw	r2, #48484	; 0xbd64
   1641c:	movt	r2, #2
   16420:	ldr	r8, [r2, #16]
   16424:	ldr	r2, [r7, #464]	; 0x1d0
   16428:	add	r2, r2, r8, lsl #4
   1642c:	ldr	r5, [r2, #8]
   16430:	cmp	r5, #0
   16434:	beq	16514 <sprintf@plt+0x4f3c>
   16438:	mov	r4, r3
   1643c:	mov	r6, r0
   16440:	ldr	r9, [r3]
   16444:	cmp	r0, #0
   16448:	moveq	r1, #0
   1644c:	andne	r1, r1, #1
   16450:	cmp	r1, #0
   16454:	beq	164a8 <sprintf@plt+0x4ed0>
   16458:	ldr	r3, [r9, #780]	; 0x30c
   1645c:	cmp	r3, #0
   16460:	beq	16620 <sprintf@plt+0x5048>
   16464:	mov	r1, #46	; 0x2e
   16468:	bl	1135c <strrchr@plt>
   1646c:	cmp	r0, #0
   16470:	beq	16494 <sprintf@plt+0x4ebc>
   16474:	ldrb	r3, [r0, #1]
   16478:	cmp	r3, #0
   1647c:	beq	16494 <sprintf@plt+0x4ebc>
   16480:	ldr	sl, [r9, #772]	; 0x304
   16484:	cmp	sl, #0
   16488:	beq	164a8 <sprintf@plt+0x4ed0>
   1648c:	add	fp, r0, #1
   16490:	b	1656c <sprintf@plt+0x4f94>
   16494:	ldr	r8, [r9, #796]	; 0x31c
   16498:	add	r8, r8, #3600	; 0xe10
   1649c:	bl	11404 <rb_current_time@plt>
   164a0:	cmp	r8, r0
   164a4:	blt	1658c <sprintf@plt+0x4fb4>
   164a8:	mov	r0, r9
   164ac:	bl	15ec8 <sprintf@plt+0x48f0>
   164b0:	ldr	r0, [r4, #8]
   164b4:	bl	11f4c <sprintf@plt+0x974>
   164b8:	ldr	r3, [r4, #20]
   164bc:	cmp	r3, #0
   164c0:	ldrne	r2, [r4, #16]
   164c4:	strne	r2, [r3, #4]
   164c8:	ldreq	r3, [r4, #16]
   164cc:	streq	r3, [r5, #8]
   164d0:	ldr	r3, [r4, #16]
   164d4:	cmp	r3, #0
   164d8:	ldrne	r2, [r4, #20]
   164dc:	strne	r2, [r3, #8]
   164e0:	ldreq	r3, [r4, #20]
   164e4:	streq	r3, [r5, #4]
   164e8:	mov	r3, #0
   164ec:	str	r3, [r4, #16]
   164f0:	str	r3, [r4, #20]
   164f4:	ldr	r3, [r5, #12]
   164f8:	sub	r3, r3, #1
   164fc:	str	r3, [r5, #12]
   16500:	mov	r0, r4
   16504:	bl	113a4 <free@plt>
   16508:	ldr	r3, [r5, #12]
   1650c:	cmp	r3, #0
   16510:	beq	165b0 <sprintf@plt+0x4fd8>
   16514:	add	sp, sp, #4
   16518:	ldrd	r4, [sp]
   1651c:	ldrd	r6, [sp, #8]
   16520:	ldrd	r8, [sp, #16]
   16524:	ldrd	sl, [sp, #24]
   16528:	add	sp, sp, #32
   1652c:	pop	{pc}		; (ldr pc, [sp], #4)
   16530:	mov	r2, r9
   16534:	movw	r1, #39516	; 0x9a5c
   16538:	movt	r1, #1
   1653c:	mov	r0, #67	; 0x43
   16540:	bl	122a0 <sprintf@plt+0xcc8>
   16544:	mov	r0, #3
   16548:	bl	115c0 <exit@plt>
   1654c:	mov	r0, r6
   16550:	add	r1, r1, #4
   16554:	bl	115b4 <strcmp@plt>
   16558:	cmp	r0, #0
   1655c:	beq	16620 <sprintf@plt+0x5048>
   16560:	ldr	sl, [sl, #8]
   16564:	cmp	sl, #0
   16568:	beq	164a8 <sprintf@plt+0x4ed0>
   1656c:	ldr	r1, [sl]
   16570:	ldr	r3, [r1]
   16574:	cmp	r3, #1
   16578:	beq	1654c <sprintf@plt+0x4f74>
   1657c:	cmp	r3, #2
   16580:	bne	16530 <sprintf@plt+0x4f58>
   16584:	mov	r0, fp
   16588:	b	16550 <sprintf@plt+0x4f78>
   1658c:	mov	r3, r6
   16590:	mov	r2, r9
   16594:	movw	r1, #39564	; 0x9a8c
   16598:	movt	r1, #1
   1659c:	mov	r0, #87	; 0x57
   165a0:	bl	122a0 <sprintf@plt+0xcc8>
   165a4:	bl	11404 <rb_current_time@plt>
   165a8:	str	r0, [r9, #796]	; 0x31c
   165ac:	b	164a8 <sprintf@plt+0x4ed0>
   165b0:	movw	r1, #39628	; 0x9acc
   165b4:	movt	r1, #1
   165b8:	ldr	r0, [r7]
   165bc:	bl	1223c <sprintf@plt+0xc64>
   165c0:	mov	r0, r5
   165c4:	bl	113a4 <free@plt>
   165c8:	movw	r3, #48484	; 0xbd64
   165cc:	movt	r3, #2
   165d0:	ldr	r1, [r3, #16]
   165d4:	ldr	r2, [r7, #464]	; 0x1d0
   165d8:	add	r2, r2, r1, lsl #4
   165dc:	mov	r1, #0
   165e0:	str	r1, [r2, #8]
   165e4:	ldr	r0, [r3, #16]
   165e8:	ldr	r2, [r7, #464]	; 0x1d0
   165ec:	add	r2, r2, r0, lsl #4
   165f0:	str	r1, [r2, #4]
   165f4:	ldr	r1, [r3, #16]
   165f8:	mov	r0, r7
   165fc:	bl	12d0c <sprintf@plt+0x1734>
   16600:	ldr	r3, [r7, #460]	; 0x1cc
   16604:	sub	r3, r3, #1
   16608:	str	r3, [r7, #460]	; 0x1cc
   1660c:	cmp	r3, #0
   16610:	bne	16514 <sprintf@plt+0x4f3c>
   16614:	mov	r0, r7
   16618:	bl	12814 <sprintf@plt+0x123c>
   1661c:	b	16514 <sprintf@plt+0x4f3c>
   16620:	ldr	r3, [r9, #792]	; 0x318
   16624:	add	r3, r3, #1
   16628:	str	r3, [r9, #792]	; 0x318
   1662c:	add	r3, r9, #256	; 0x100
   16630:	mov	r2, r9
   16634:	mov	r1, r8
   16638:	mov	r0, r7
   1663c:	bl	129f4 <sprintf@plt+0x141c>
   16640:	mov	r0, r7
   16644:	bl	162b0 <sprintf@plt+0x4cd8>
   16648:	b	16514 <sprintf@plt+0x4f3c>
   1664c:	str	r4, [sp, #-8]!
   16650:	str	lr, [sp, #4]
   16654:	sub	sp, sp, #8
   16658:	movw	r3, #368	; 0x170
   1665c:	movt	r3, #3
   16660:	mov	r1, sp
   16664:	ldr	r0, [r3]
   16668:	bl	113e0 <rb_dictionary_foreach_start@plt>
   1666c:	movw	r4, #368	; 0x170
   16670:	movt	r4, #3
   16674:	mov	r1, sp
   16678:	ldr	r0, [r4]
   1667c:	bl	112fc <rb_dictionary_foreach_cur@plt>
   16680:	cmp	r0, #0
   16684:	beq	1669c <sprintf@plt+0x50c4>
   16688:	bl	162b0 <sprintf@plt+0x4cd8>
   1668c:	mov	r1, sp
   16690:	ldr	r0, [r4]
   16694:	bl	11398 <rb_dictionary_foreach_next@plt>
   16698:	b	16674 <sprintf@plt+0x509c>
   1669c:	bl	15914 <sprintf@plt+0x433c>
   166a0:	add	sp, sp, #8
   166a4:	ldr	r4, [sp]
   166a8:	add	sp, sp, #4
   166ac:	pop	{pc}		; (ldr pc, [sp], #4)
   166b0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   166b4:	strd	r6, [sp, #8]
   166b8:	str	r8, [sp, #16]
   166bc:	str	lr, [sp, #20]
   166c0:	movw	r3, #48484	; 0xbd64
   166c4:	movt	r3, #2
   166c8:	ldr	r2, [r3, #16]
   166cc:	ldr	r3, [r0, #464]	; 0x1d0
   166d0:	add	r3, r3, r2, lsl #4
   166d4:	ldr	r6, [r3, #8]
   166d8:	cmp	r6, #0
   166dc:	beq	16744 <sprintf@plt+0x516c>
   166e0:	mov	r5, r0
   166e4:	ldr	r3, [r6, #12]
   166e8:	cmp	r3, #0
   166ec:	bne	16758 <sprintf@plt+0x5180>
   166f0:	mov	r0, r6
   166f4:	bl	113a4 <free@plt>
   166f8:	movw	r3, #48484	; 0xbd64
   166fc:	movt	r3, #2
   16700:	ldr	r1, [r3, #16]
   16704:	ldr	r2, [r5, #464]	; 0x1d0
   16708:	add	r2, r2, r1, lsl #4
   1670c:	mov	r1, #0
   16710:	str	r1, [r2, #8]
   16714:	ldr	r0, [r3, #16]
   16718:	ldr	r2, [r5, #464]	; 0x1d0
   1671c:	add	r2, r2, r0, lsl #4
   16720:	str	r1, [r2, #4]
   16724:	ldr	r1, [r3, #16]
   16728:	mov	r0, r5
   1672c:	bl	12d0c <sprintf@plt+0x1734>
   16730:	ldr	r3, [r5, #460]	; 0x1cc
   16734:	sub	r3, r3, #1
   16738:	str	r3, [r5, #460]	; 0x1cc
   1673c:	cmp	r3, #0
   16740:	beq	167f0 <sprintf@plt+0x5218>
   16744:	ldrd	r4, [sp]
   16748:	ldrd	r6, [sp, #8]
   1674c:	ldr	r8, [sp, #16]
   16750:	add	sp, sp, #20
   16754:	pop	{pc}		; (ldr pc, [sp], #4)
   16758:	movw	r1, #39668	; 0x9af4
   1675c:	movt	r1, #1
   16760:	ldr	r0, [r0]
   16764:	bl	1223c <sprintf@plt+0xc64>
   16768:	ldr	r3, [r6, #4]
   1676c:	cmp	r3, #0
   16770:	beq	166f0 <sprintf@plt+0x5118>
   16774:	ldr	r7, [r3, #8]
   16778:	mov	r8, #0
   1677c:	ldr	r4, [r3]
   16780:	ldr	r0, [r4, #8]
   16784:	bl	11f4c <sprintf@plt+0x974>
   16788:	ldr	r0, [r4]
   1678c:	bl	15ec8 <sprintf@plt+0x48f0>
   16790:	ldr	r3, [r4, #20]
   16794:	cmp	r3, #0
   16798:	ldrne	r2, [r4, #16]
   1679c:	strne	r2, [r3, #4]
   167a0:	ldreq	r3, [r4, #16]
   167a4:	streq	r3, [r6, #8]
   167a8:	ldr	r3, [r4, #16]
   167ac:	cmp	r3, #0
   167b0:	ldrne	r2, [r4, #20]
   167b4:	strne	r2, [r3, #8]
   167b8:	ldreq	r3, [r4, #20]
   167bc:	streq	r3, [r6, #4]
   167c0:	str	r8, [r4, #16]
   167c4:	str	r8, [r4, #20]
   167c8:	ldr	r3, [r6, #12]
   167cc:	sub	r3, r3, #1
   167d0:	str	r3, [r6, #12]
   167d4:	mov	r0, r4
   167d8:	bl	113a4 <free@plt>
   167dc:	cmp	r7, #0
   167e0:	beq	166f0 <sprintf@plt+0x5118>
   167e4:	mov	r3, r7
   167e8:	ldr	r7, [r7, #8]
   167ec:	b	1677c <sprintf@plt+0x51a4>
   167f0:	mov	r0, r5
   167f4:	bl	12814 <sprintf@plt+0x123c>
   167f8:	b	16744 <sprintf@plt+0x516c>
   167fc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16800:	strd	r6, [sp, #8]
   16804:	strd	r8, [sp, #16]
   16808:	str	sl, [sp, #24]
   1680c:	str	lr, [sp, #28]
   16810:	ldr	r7, [r0, #464]	; 0x1d0
   16814:	movw	r3, #48484	; 0xbd64
   16818:	movt	r3, #2
   1681c:	ldr	r3, [r3, #16]
   16820:	add	r3, r7, r3, lsl #4
   16824:	ldr	r8, [r3, #8]
   16828:	cmp	r8, #0
   1682c:	beq	1683c <sprintf@plt+0x5264>
   16830:	ldrb	r3, [r8]
   16834:	cmp	r3, #0
   16838:	beq	16854 <sprintf@plt+0x527c>
   1683c:	ldrd	r4, [sp]
   16840:	ldrd	r6, [sp, #8]
   16844:	ldrd	r8, [sp, #16]
   16848:	ldr	sl, [sp, #24]
   1684c:	add	sp, sp, #28
   16850:	pop	{pc}		; (ldr pc, [sp], #4)
   16854:	mov	r6, r0
   16858:	movw	r3, #372	; 0x174
   1685c:	movt	r3, #3
   16860:	ldr	r4, [r3]
   16864:	cmp	r4, #0
   16868:	beq	168c8 <sprintf@plt+0x52f0>
   1686c:	mov	r5, r4
   16870:	movw	sl, #39696	; 0x9b10
   16874:	movt	sl, #1
   16878:	ldr	r9, [r5]
   1687c:	mov	r1, sl
   16880:	ldr	r0, [r9, #16]
   16884:	bl	11308 <strcasecmp@plt>
   16888:	cmp	r0, #0
   1688c:	beq	1699c <sprintf@plt+0x53c4>
   16890:	ldr	r5, [r5, #8]
   16894:	cmp	r5, #0
   16898:	bne	16878 <sprintf@plt+0x52a0>
   1689c:	movw	r9, #39704	; 0x9b18
   168a0:	movt	r9, #1
   168a4:	ldr	r5, [r4]
   168a8:	mov	r1, r9
   168ac:	ldr	r0, [r5, #16]
   168b0:	bl	11308 <strcasecmp@plt>
   168b4:	cmp	r0, #0
   168b8:	beq	16984 <sprintf@plt+0x53ac>
   168bc:	ldr	r4, [r4, #8]
   168c0:	cmp	r4, #0
   168c4:	bne	168a4 <sprintf@plt+0x52cc>
   168c8:	ldrh	r3, [r6, #248]	; 0xf8
   168cc:	cmp	r3, #2
   168d0:	beq	168ec <sprintf@plt+0x5314>
   168d4:	cmp	r3, #10
   168d8:	moveq	r5, #2
   168dc:	beq	168f0 <sprintf@plt+0x5318>
   168e0:	mov	r0, r6
   168e4:	bl	166b0 <sprintf@plt+0x50d8>
   168e8:	b	1683c <sprintf@plt+0x5264>
   168ec:	mov	r5, #1
   168f0:	mov	r3, #1
   168f4:	strb	r3, [r8]
   168f8:	movw	r1, #39712	; 0x9b20
   168fc:	movt	r1, #1
   16900:	ldr	r0, [r6]
   16904:	bl	1223c <sprintf@plt+0xc64>
   16908:	movw	r3, #65496	; 0xffd8
   1690c:	movt	r3, #2
   16910:	ldr	r4, [r3]
   16914:	cmp	r4, #0
   16918:	bne	16964 <sprintf@plt+0x538c>
   1691c:	ldr	r3, [r8, #12]
   16920:	cmp	r3, #0
   16924:	beq	168e0 <sprintf@plt+0x5308>
   16928:	movw	r3, #48484	; 0xbd64
   1692c:	movt	r3, #2
   16930:	ldr	r5, [r3, #16]
   16934:	ldr	r4, [r3]
   16938:	bl	11404 <rb_current_time@plt>
   1693c:	ldr	r3, [r6, #464]	; 0x1d0
   16940:	add	r3, r3, r5, lsl #4
   16944:	add	r0, r4, r0
   16948:	str	r0, [r3, #4]
   1694c:	b	1683c <sprintf@plt+0x5264>
   16950:	mov	r1, r6
   16954:	bl	1616c <sprintf@plt+0x4b94>
   16958:	ldr	r4, [r4, #8]
   1695c:	cmp	r4, #0
   16960:	beq	1691c <sprintf@plt+0x5344>
   16964:	ldr	r0, [r4]
   16968:	ldrb	r3, [r0, #784]	; 0x310
   1696c:	cmp	r3, #0
   16970:	bne	16958 <sprintf@plt+0x5380>
   16974:	ldrb	r3, [r0, #768]	; 0x300
   16978:	tst	r3, r5
   1697c:	beq	16958 <sprintf@plt+0x5380>
   16980:	b	16950 <sprintf@plt+0x5378>
   16984:	ldr	r3, [r5, #12]
   16988:	add	r7, r7, r3, lsl #4
   1698c:	ldr	r3, [r7, #12]
   16990:	cmp	r3, #2
   16994:	beq	168c8 <sprintf@plt+0x52f0>
   16998:	b	1683c <sprintf@plt+0x5264>
   1699c:	ldr	r3, [r9, #12]
   169a0:	add	r3, r7, r3, lsl #4
   169a4:	ldr	r3, [r3, #12]
   169a8:	cmp	r3, #2
   169ac:	beq	1689c <sprintf@plt+0x52c4>
   169b0:	b	1683c <sprintf@plt+0x5264>
   169b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   169b8:	strd	r6, [sp, #8]
   169bc:	str	r8, [sp, #16]
   169c0:	str	lr, [sp, #20]
   169c4:	mov	r5, r0
   169c8:	movw	r3, #65496	; 0xffd8
   169cc:	movt	r3, #2
   169d0:	ldr	r3, [r3, #8]
   169d4:	cmp	r3, #0
   169d8:	beq	16aa8 <sprintf@plt+0x54d0>
   169dc:	ldr	r3, [r0, #460]	; 0x1cc
   169e0:	add	r3, r3, #1
   169e4:	str	r3, [r0, #460]	; 0x1cc
   169e8:	movw	r3, #48484	; 0xbd64
   169ec:	movt	r3, #2
   169f0:	ldr	r4, [r3, #16]
   169f4:	mov	r1, #16
   169f8:	mov	r0, #1
   169fc:	bl	11314 <calloc@plt>
   16a00:	cmp	r0, #0
   16a04:	beq	16ad0 <sprintf@plt+0x54f8>
   16a08:	ldr	r3, [r5, #464]	; 0x1d0
   16a0c:	add	r3, r3, r4, lsl #4
   16a10:	str	r0, [r3, #8]
   16a14:	movw	r3, #372	; 0x174
   16a18:	movt	r3, #3
   16a1c:	ldr	r4, [r3]
   16a20:	cmp	r4, #0
   16a24:	beq	16a84 <sprintf@plt+0x54ac>
   16a28:	mov	r6, r4
   16a2c:	movw	r7, #39696	; 0x9b10
   16a30:	movt	r7, #1
   16a34:	ldr	r8, [r6]
   16a38:	mov	r1, r7
   16a3c:	ldr	r0, [r8, #16]
   16a40:	bl	11308 <strcasecmp@plt>
   16a44:	cmp	r0, #0
   16a48:	beq	16ba0 <sprintf@plt+0x55c8>
   16a4c:	ldr	r6, [r6, #8]
   16a50:	cmp	r6, #0
   16a54:	bne	16a34 <sprintf@plt+0x545c>
   16a58:	movw	r6, #39704	; 0x9b18
   16a5c:	movt	r6, #1
   16a60:	ldr	r7, [r4]
   16a64:	mov	r1, r6
   16a68:	ldr	r0, [r7, #16]
   16a6c:	bl	11308 <strcasecmp@plt>
   16a70:	cmp	r0, #0
   16a74:	beq	16b84 <sprintf@plt+0x55ac>
   16a78:	ldr	r4, [r4, #8]
   16a7c:	cmp	r4, #0
   16a80:	bne	16a60 <sprintf@plt+0x5488>
   16a84:	ldrh	r3, [r5, #248]	; 0xf8
   16a88:	cmp	r3, #2
   16a8c:	beq	16ad4 <sprintf@plt+0x54fc>
   16a90:	cmp	r3, #10
   16a94:	moveq	r6, #2
   16a98:	beq	16ad8 <sprintf@plt+0x5500>
   16a9c:	mov	r0, r5
   16aa0:	bl	166b0 <sprintf@plt+0x50d8>
   16aa4:	b	16ab8 <sprintf@plt+0x54e0>
   16aa8:	movw	r3, #48484	; 0xbd64
   16aac:	movt	r3, #2
   16ab0:	ldr	r1, [r3, #16]
   16ab4:	bl	12d0c <sprintf@plt+0x1734>
   16ab8:	mov	r0, #1
   16abc:	ldrd	r4, [sp]
   16ac0:	ldrd	r6, [sp, #8]
   16ac4:	ldr	r8, [sp, #16]
   16ac8:	add	sp, sp, #20
   16acc:	pop	{pc}		; (ldr pc, [sp], #4)
   16ad0:	bl	114ac <rb_outofmemory@plt>
   16ad4:	mov	r6, #1
   16ad8:	movw	r3, #48484	; 0xbd64
   16adc:	movt	r3, #2
   16ae0:	ldr	r2, [r3, #16]
   16ae4:	ldr	r3, [r5, #464]	; 0x1d0
   16ae8:	add	r3, r3, r2, lsl #4
   16aec:	ldr	r7, [r3, #8]
   16af0:	mov	r3, #1
   16af4:	strb	r3, [r7]
   16af8:	movw	r1, #39712	; 0x9b20
   16afc:	movt	r1, #1
   16b00:	ldr	r0, [r5]
   16b04:	bl	1223c <sprintf@plt+0xc64>
   16b08:	movw	r3, #65496	; 0xffd8
   16b0c:	movt	r3, #2
   16b10:	ldr	r4, [r3]
   16b14:	cmp	r4, #0
   16b18:	bne	16b64 <sprintf@plt+0x558c>
   16b1c:	ldr	r3, [r7, #12]
   16b20:	cmp	r3, #0
   16b24:	beq	16a9c <sprintf@plt+0x54c4>
   16b28:	movw	r3, #48484	; 0xbd64
   16b2c:	movt	r3, #2
   16b30:	ldr	r6, [r3, #16]
   16b34:	ldr	r4, [r3]
   16b38:	bl	11404 <rb_current_time@plt>
   16b3c:	ldr	r3, [r5, #464]	; 0x1d0
   16b40:	add	r3, r3, r6, lsl #4
   16b44:	add	r0, r4, r0
   16b48:	str	r0, [r3, #4]
   16b4c:	b	16ab8 <sprintf@plt+0x54e0>
   16b50:	mov	r1, r5
   16b54:	bl	1616c <sprintf@plt+0x4b94>
   16b58:	ldr	r4, [r4, #8]
   16b5c:	cmp	r4, #0
   16b60:	beq	16b1c <sprintf@plt+0x5544>
   16b64:	ldr	r0, [r4]
   16b68:	ldrb	r3, [r0, #784]	; 0x310
   16b6c:	cmp	r3, #0
   16b70:	bne	16b58 <sprintf@plt+0x5580>
   16b74:	ldrb	r3, [r0, #768]	; 0x300
   16b78:	tst	r3, r6
   16b7c:	beq	16b58 <sprintf@plt+0x5580>
   16b80:	b	16b50 <sprintf@plt+0x5578>
   16b84:	ldr	r2, [r7, #12]
   16b88:	ldr	r3, [r5, #464]	; 0x1d0
   16b8c:	add	r3, r3, r2, lsl #4
   16b90:	ldr	r3, [r3, #12]
   16b94:	cmp	r3, #2
   16b98:	beq	16a84 <sprintf@plt+0x54ac>
   16b9c:	b	16ab8 <sprintf@plt+0x54e0>
   16ba0:	ldr	r2, [r8, #12]
   16ba4:	ldr	r3, [r5, #464]	; 0x1d0
   16ba8:	add	r3, r3, r2, lsl #4
   16bac:	ldr	r3, [r3, #12]
   16bb0:	cmp	r3, #2
   16bb4:	beq	16a58 <sprintf@plt+0x5480>
   16bb8:	b	16ab8 <sprintf@plt+0x54e0>
   16bbc:	movw	r3, #48608	; 0xbde0
   16bc0:	movt	r3, #2
   16bc4:	ldr	r2, [r2]
   16bc8:	ldrb	r2, [r2]
   16bcc:	cmp	r2, #49	; 0x31
   16bd0:	movne	r2, #0
   16bd4:	moveq	r2, #1
   16bd8:	strb	r2, [r3]
   16bdc:	bx	lr
   16be0:	str	r4, [sp, #-8]!
   16be4:	str	lr, [sp, #4]
   16be8:	ldr	r0, [r2]
   16bec:	mov	r2, #10
   16bf0:	mov	r1, #0
   16bf4:	bl	11440 <strtol@plt>
   16bf8:	cmp	r0, #0
   16bfc:	blt	16c18 <sprintf@plt+0x5640>
   16c00:	movw	r3, #48608	; 0xbde0
   16c04:	movt	r3, #2
   16c08:	str	r0, [r3, #4]
   16c0c:	ldr	r4, [sp]
   16c10:	add	sp, sp, #4
   16c14:	pop	{pc}		; (ldr pc, [sp], #4)
   16c18:	mov	r2, r0
   16c1c:	movw	r1, #39812	; 0x9b84
   16c20:	movt	r1, #1
   16c24:	mov	r0, #67	; 0x43
   16c28:	bl	122a0 <sprintf@plt+0xcc8>
   16c2c:	mov	r0, #3
   16c30:	bl	115c0 <exit@plt>
   16c34:	strd	r4, [sp, #-16]!
   16c38:	str	r6, [sp, #8]
   16c3c:	str	lr, [sp, #12]
   16c40:	mov	r4, r0
   16c44:	mov	r6, r1
   16c48:	movw	r3, #48608	; 0xbde0
   16c4c:	movt	r3, #2
   16c50:	ldr	r2, [r3, #20]
   16c54:	ldr	r3, [r0, #464]	; 0x1d0
   16c58:	add	r3, r3, r2, lsl #4
   16c5c:	ldr	r5, [r3, #8]
   16c60:	mov	r2, #11
   16c64:	movw	r1, #38104	; 0x94d8
   16c68:	movt	r1, #1
   16c6c:	add	r0, r0, #440	; 0x1b8
   16c70:	bl	11380 <rb_strlcpy@plt>
   16c74:	ldr	r0, [r5]
   16c78:	cmp	r0, #0
   16c7c:	beq	16c84 <sprintf@plt+0x56ac>
   16c80:	bl	11434 <rb_close@plt>
   16c84:	mov	r0, r5
   16c88:	bl	113a4 <free@plt>
   16c8c:	movw	r5, #48608	; 0xbde0
   16c90:	movt	r5, #2
   16c94:	ldr	r2, [r5, #20]
   16c98:	ldr	r3, [r4, #464]	; 0x1d0
   16c9c:	add	r3, r3, r2, lsl #4
   16ca0:	mov	r2, #0
   16ca4:	str	r2, [r3, #8]
   16ca8:	ldr	r1, [r5, #20]
   16cac:	ldr	r3, [r4, #464]	; 0x1d0
   16cb0:	add	r3, r3, r1, lsl #4
   16cb4:	str	r2, [r3, #4]
   16cb8:	movw	r3, #39792	; 0x9b70
   16cbc:	movt	r3, #1
   16cc0:	ldr	r1, [r3, r6, lsl #2]
   16cc4:	ldr	r0, [r4]
   16cc8:	bl	1223c <sprintf@plt+0xc64>
   16ccc:	ldr	r1, [r5, #20]
   16cd0:	mov	r0, r4
   16cd4:	bl	12d0c <sprintf@plt+0x1734>
   16cd8:	ldr	r3, [r4, #460]	; 0x1cc
   16cdc:	sub	r3, r3, #1
   16ce0:	str	r3, [r4, #460]	; 0x1cc
   16ce4:	cmp	r3, #0
   16ce8:	beq	16cfc <sprintf@plt+0x5724>
   16cec:	ldrd	r4, [sp]
   16cf0:	ldr	r6, [sp, #8]
   16cf4:	add	sp, sp, #12
   16cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   16cfc:	mov	r0, r4
   16d00:	bl	12814 <sprintf@plt+0x123c>
   16d04:	b	16cec <sprintf@plt+0x5714>
   16d08:	movw	r3, #48608	; 0xbde0
   16d0c:	movt	r3, #2
   16d10:	ldr	r2, [r3, #20]
   16d14:	ldr	r3, [r0, #464]	; 0x1d0
   16d18:	add	r3, r3, r2, lsl #4
   16d1c:	ldr	r3, [r3, #8]
   16d20:	cmp	r3, #0
   16d24:	bxeq	lr
   16d28:	str	r4, [sp, #-8]!
   16d2c:	str	lr, [sp, #4]
   16d30:	mov	r1, #2
   16d34:	bl	16c34 <sprintf@plt+0x565c>
   16d38:	ldr	r4, [sp]
   16d3c:	add	sp, sp, #4
   16d40:	pop	{pc}		; (ldr pc, [sp], #4)
   16d44:	strd	r4, [sp, #-20]!	; 0xffffffec
   16d48:	strd	r6, [sp, #8]
   16d4c:	str	lr, [sp, #16]
   16d50:	sub	sp, sp, #140	; 0x8c
   16d54:	mov	r5, r0
   16d58:	mov	r4, r1
   16d5c:	mov	r2, #129	; 0x81
   16d60:	mov	r1, #0
   16d64:	add	r0, sp, #4
   16d68:	bl	11344 <memset@plt>
   16d6c:	mov	r2, #128	; 0x80
   16d70:	add	r1, sp, #4
   16d74:	mov	r0, r5
   16d78:	bl	113bc <rb_read@plt>
   16d7c:	cmp	r0, #0
   16d80:	blt	16e90 <sprintf@plt+0x58b8>
   16d84:	cmp	r0, #0
   16d88:	ble	16f44 <sprintf@plt+0x596c>
   16d8c:	mov	r1, #58	; 0x3a
   16d90:	add	r0, sp, #4
   16d94:	bl	112f0 <strchr@plt>
   16d98:	subs	r5, r0, #0
   16d9c:	beq	16f4c <sprintf@plt+0x5974>
   16da0:	mov	r3, #0
   16da4:	strb	r3, [r5], #1
   16da8:	mov	r1, #58	; 0x3a
   16dac:	mov	r0, r5
   16db0:	bl	112f0 <strchr@plt>
   16db4:	subs	r6, r0, #0
   16db8:	beq	16f4c <sprintf@plt+0x5974>
   16dbc:	mov	r3, #0
   16dc0:	strb	r3, [r6]
   16dc4:	mov	r1, #44	; 0x2c
   16dc8:	add	r0, sp, #4
   16dcc:	bl	112f0 <strchr@plt>
   16dd0:	subs	r7, r0, #0
   16dd4:	beq	16f4c <sprintf@plt+0x5974>
   16dd8:	mov	r1, #0
   16ddc:	strb	r1, [r7]
   16de0:	mov	r2, #10
   16de4:	add	r0, sp, #4
   16de8:	bl	11440 <strtol@plt>
   16dec:	cmp	r0, #0
   16df0:	beq	16f4c <sprintf@plt+0x5974>
   16df4:	mov	r2, #10
   16df8:	mov	r1, #0
   16dfc:	add	r0, r7, #1
   16e00:	bl	11440 <strtol@plt>
   16e04:	cmp	r0, #0
   16e08:	beq	16f4c <sprintf@plt+0x5974>
   16e0c:	movw	r1, #39852	; 0x9bac
   16e10:	movt	r1, #1
   16e14:	mov	r0, r5
   16e18:	bl	1147c <strstr@plt>
   16e1c:	cmp	r0, #0
   16e20:	beq	16f4c <sprintf@plt+0x5974>
   16e24:	mov	r1, #58	; 0x3a
   16e28:	add	r0, r6, #1
   16e2c:	bl	112f0 <strchr@plt>
   16e30:	cmp	r0, #0
   16e34:	beq	16f4c <sprintf@plt+0x5974>
   16e38:	mov	r2, r0
   16e3c:	mov	r3, #0
   16e40:	strb	r3, [r2], #1
   16e44:	cmp	r2, r3
   16e48:	beq	16f4c <sprintf@plt+0x5974>
   16e4c:	add	ip, r4, #440	; 0x1b8
   16e50:	ldrb	r3, [r0, #1]
   16e54:	and	r3, r3, #223	; 0xdf
   16e58:	cmp	r3, #94	; 0x5e
   16e5c:	bne	16e70 <sprintf@plt+0x5898>
   16e60:	ldrb	r3, [r2, #1]!
   16e64:	and	r3, r3, #223	; 0xdf
   16e68:	cmp	r3, #94	; 0x5e
   16e6c:	beq	16e60 <sprintf@plt+0x5888>
   16e70:	ldrb	r3, [r2]
   16e74:	tst	r3, #191	; 0xbf
   16e78:	beq	16f54 <sprintf@plt+0x597c>
   16e7c:	cmp	r3, #10
   16e80:	cmpne	r3, #13
   16e84:	beq	16f54 <sprintf@plt+0x597c>
   16e88:	mov	r0, #10
   16e8c:	b	16f1c <sprintf@plt+0x5944>
   16e90:	bl	115cc <__errno_location@plt>
   16e94:	ldr	r0, [r0]
   16e98:	bl	11248 <rb_ignore_errno@plt>
   16e9c:	cmp	r0, #0
   16ea0:	moveq	r1, #2
   16ea4:	bne	16ec4 <sprintf@plt+0x58ec>
   16ea8:	mov	r0, r4
   16eac:	bl	16c34 <sprintf@plt+0x565c>
   16eb0:	add	sp, sp, #140	; 0x8c
   16eb4:	ldrd	r4, [sp]
   16eb8:	ldrd	r6, [sp, #8]
   16ebc:	add	sp, sp, #16
   16ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ec4:	mov	r3, r4
   16ec8:	movw	r2, #27972	; 0x6d44
   16ecc:	movt	r2, #1
   16ed0:	mov	r1, #1
   16ed4:	mov	r0, r5
   16ed8:	bl	11290 <rb_setselect@plt>
   16edc:	b	16eb0 <sprintf@plt+0x58d8>
   16ee0:	mov	r1, ip
   16ee4:	strb	r3, [r1], #1
   16ee8:	sub	r0, r0, #1
   16eec:	mov	ip, r1
   16ef0:	ldrb	r3, [r2, #1]!
   16ef4:	tst	r3, #191	; 0xbf
   16ef8:	movne	r1, #1
   16efc:	moveq	r1, #0
   16f00:	cmp	r0, #0
   16f04:	moveq	r1, #0
   16f08:	cmp	r1, #0
   16f0c:	beq	16f54 <sprintf@plt+0x597c>
   16f10:	cmp	r3, #10
   16f14:	cmpne	r3, #13
   16f18:	beq	16f54 <sprintf@plt+0x597c>
   16f1c:	cmp	r3, #32
   16f20:	cmpne	r3, #58	; 0x3a
   16f24:	movne	r1, #1
   16f28:	moveq	r1, #0
   16f2c:	cmp	r3, #91	; 0x5b
   16f30:	moveq	r1, #0
   16f34:	andne	r1, r1, #1
   16f38:	cmp	r1, #0
   16f3c:	beq	16ef0 <sprintf@plt+0x5918>
   16f40:	b	16ee0 <sprintf@plt+0x5908>
   16f44:	mov	r1, #2
   16f48:	b	16ea8 <sprintf@plt+0x58d0>
   16f4c:	mov	r1, #3
   16f50:	b	16ea8 <sprintf@plt+0x58d0>
   16f54:	mov	r3, #0
   16f58:	strb	r3, [ip]
   16f5c:	movw	r3, #48608	; 0xbde0
   16f60:	movt	r3, #2
   16f64:	ldr	r2, [r3, #20]
   16f68:	ldr	r3, [r4, #464]	; 0x1d0
   16f6c:	add	r3, r3, r2, lsl #4
   16f70:	ldr	r5, [r3, #8]
   16f74:	ldr	r0, [r5]
   16f78:	cmp	r0, #0
   16f7c:	beq	16f84 <sprintf@plt+0x59ac>
   16f80:	bl	11434 <rb_close@plt>
   16f84:	mov	r0, r5
   16f88:	bl	113a4 <free@plt>
   16f8c:	movw	r5, #48608	; 0xbde0
   16f90:	movt	r5, #2
   16f94:	ldr	r2, [r5, #20]
   16f98:	ldr	r3, [r4, #464]	; 0x1d0
   16f9c:	add	r3, r3, r2, lsl #4
   16fa0:	mov	r2, #0
   16fa4:	str	r2, [r3, #8]
   16fa8:	ldr	r1, [r5, #20]
   16fac:	ldr	r3, [r4, #464]	; 0x1d0
   16fb0:	add	r3, r3, r1, lsl #4
   16fb4:	str	r2, [r3, #4]
   16fb8:	movw	r1, #39860	; 0x9bb4
   16fbc:	movt	r1, #1
   16fc0:	ldr	r0, [r4]
   16fc4:	bl	1223c <sprintf@plt+0xc64>
   16fc8:	ldr	r1, [r5, #20]
   16fcc:	mov	r0, r4
   16fd0:	bl	12d0c <sprintf@plt+0x1734>
   16fd4:	ldr	r3, [r4, #460]	; 0x1cc
   16fd8:	sub	r3, r3, #1
   16fdc:	str	r3, [r4, #460]	; 0x1cc
   16fe0:	cmp	r3, #0
   16fe4:	bne	16eb0 <sprintf@plt+0x58d8>
   16fe8:	mov	r0, r4
   16fec:	bl	12814 <sprintf@plt+0x123c>
   16ff0:	b	16eb0 <sprintf@plt+0x58d8>
   16ff4:	strd	r4, [sp, #-16]!
   16ff8:	str	r6, [sp, #8]
   16ffc:	str	lr, [sp, #12]
   17000:	sub	sp, sp, #40	; 0x28
   17004:	mov	r4, r2
   17008:	cmp	r1, #0
   1700c:	bne	1707c <sprintf@plt+0x5aa4>
   17010:	movw	r3, #48608	; 0xbde0
   17014:	movt	r3, #2
   17018:	ldr	r2, [r3, #20]
   1701c:	ldr	r3, [r4, #464]	; 0x1d0
   17020:	add	r3, r3, r2, lsl #4
   17024:	ldr	r6, [r3, #8]
   17028:	ldrh	r3, [r4, #62]	; 0x3e
   1702c:	str	r3, [sp]
   17030:	ldrh	r3, [r4, #246]	; 0xf6
   17034:	movw	r2, #39884	; 0x9bcc
   17038:	movt	r2, #1
   1703c:	mov	r1, #32
   17040:	add	r0, sp, #8
   17044:	bl	1156c <snprintf@plt>
   17048:	add	r0, sp, #8
   1704c:	bl	113f8 <strlen@plt>
   17050:	mov	r5, r0
   17054:	mov	r2, r0
   17058:	add	r1, sp, #8
   1705c:	ldr	r0, [r6]
   17060:	bl	11368 <rb_write@plt>
   17064:	cmp	r0, r5
   17068:	beq	1709c <sprintf@plt+0x5ac4>
   1706c:	mov	r1, #2
   17070:	mov	r0, r4
   17074:	bl	16c34 <sprintf@plt+0x565c>
   17078:	b	17088 <sprintf@plt+0x5ab0>
   1707c:	mov	r1, #2
   17080:	mov	r0, r2
   17084:	bl	16c34 <sprintf@plt+0x565c>
   17088:	add	sp, sp, #40	; 0x28
   1708c:	ldrd	r4, [sp]
   17090:	ldr	r6, [sp, #8]
   17094:	add	sp, sp, #12
   17098:	pop	{pc}		; (ldr pc, [sp], #4)
   1709c:	mov	r1, r4
   170a0:	ldr	r0, [r6]
   170a4:	bl	16d44 <sprintf@plt+0x576c>
   170a8:	b	17088 <sprintf@plt+0x5ab0>
   170ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   170b0:	strd	r6, [sp, #8]
   170b4:	str	r8, [sp, #16]
   170b8:	str	lr, [sp, #20]
   170bc:	sub	sp, sp, #264	; 0x108
   170c0:	mov	r4, r0
   170c4:	mov	r1, #4
   170c8:	mov	r0, #1
   170cc:	bl	11314 <calloc@plt>
   170d0:	subs	r5, r0, #0
   170d4:	beq	17134 <sprintf@plt+0x5b5c>
   170d8:	movw	r3, #48608	; 0xbde0
   170dc:	movt	r3, #2
   170e0:	ldrb	r3, [r3]
   170e4:	cmp	r3, #0
   170e8:	bne	17138 <sprintf@plt+0x5b60>
   170ec:	mov	r0, r5
   170f0:	bl	113a4 <free@plt>
   170f4:	movw	r1, #39896	; 0x9bd8
   170f8:	movt	r1, #1
   170fc:	ldr	r0, [r4]
   17100:	bl	1223c <sprintf@plt+0xc64>
   17104:	movw	r3, #48608	; 0xbde0
   17108:	movt	r3, #2
   1710c:	ldr	r1, [r3, #20]
   17110:	mov	r0, r4
   17114:	bl	12d0c <sprintf@plt+0x1734>
   17118:	mov	r0, #1
   1711c:	add	sp, sp, #264	; 0x108
   17120:	ldrd	r4, [sp]
   17124:	ldrd	r6, [sp, #8]
   17128:	ldr	r8, [sp, #16]
   1712c:	add	sp, sp, #20
   17130:	pop	{pc}		; (ldr pc, [sp], #4)
   17134:	bl	114ac <rb_outofmemory@plt>
   17138:	ldrh	r7, [r4, #248]	; 0xf8
   1713c:	ldr	r3, [r4, #460]	; 0x1cc
   17140:	add	r3, r3, #1
   17144:	str	r3, [r4, #460]	; 0x1cc
   17148:	movw	r1, #39936	; 0x9c00
   1714c:	movt	r1, #1
   17150:	ldr	r0, [r4]
   17154:	bl	1223c <sprintf@plt+0xc64>
   17158:	movw	r3, #48608	; 0xbde0
   1715c:	movt	r3, #2
   17160:	ldr	r1, [r3, #20]
   17164:	ldr	r2, [r4, #464]	; 0x1d0
   17168:	add	r2, r2, r1, lsl #4
   1716c:	str	r5, [r2, #8]
   17170:	ldr	r8, [r3, #20]
   17174:	ldr	r6, [r3, #4]
   17178:	bl	11404 <rb_current_time@plt>
   1717c:	ldr	r3, [r4, #464]	; 0x1d0
   17180:	add	r3, r3, r8, lsl #4
   17184:	add	r0, r6, r0
   17188:	str	r0, [r3, #4]
   1718c:	movw	r3, #39704	; 0x9b18
   17190:	movt	r3, #1
   17194:	ldr	r2, [r4, #4]
   17198:	mov	r1, #1
   1719c:	mov	r0, r7
   171a0:	bl	112c0 <rb_socket@plt>
   171a4:	str	r0, [r5]
   171a8:	cmp	r0, #0
   171ac:	beq	17214 <sprintf@plt+0x5c3c>
   171b0:	mov	r6, #128	; 0x80
   171b4:	mov	r2, r6
   171b8:	add	r1, r4, #64	; 0x40
   171bc:	add	r0, sp, #136	; 0x88
   171c0:	bl	1141c <memcpy@plt>
   171c4:	mov	r2, r6
   171c8:	add	r1, r4, #248	; 0xf8
   171cc:	add	r0, sp, #8
   171d0:	bl	1141c <memcpy@plt>
   171d4:	mov	r3, #0
   171d8:	strh	r3, [sp, #138]	; 0x8a
   171dc:	mov	r3, #28928	; 0x7100
   171e0:	strh	r3, [sp, #10]
   171e4:	movw	r3, #48608	; 0xbde0
   171e8:	movt	r3, #2
   171ec:	ldr	r3, [r3, #4]
   171f0:	str	r3, [sp, #4]
   171f4:	str	r4, [sp]
   171f8:	movw	r3, #28660	; 0x6ff4
   171fc:	movt	r3, #1
   17200:	add	r2, sp, #136	; 0x88
   17204:	add	r1, sp, #8
   17208:	ldr	r0, [r5]
   1720c:	bl	11260 <rb_connect_tcp@plt>
   17210:	b	17118 <sprintf@plt+0x5b40>
   17214:	bl	115cc <__errno_location@plt>
   17218:	ldr	r0, [r0]
   1721c:	bl	1120c <strerror@plt>
   17220:	mov	r2, r0
   17224:	movw	r1, #39956	; 0x9c14
   17228:	movt	r1, #1
   1722c:	mov	r0, #68	; 0x44
   17230:	bl	122a0 <sprintf@plt+0xcc8>
   17234:	mov	r1, #2
   17238:	mov	r0, r4
   1723c:	bl	16c34 <sprintf@plt+0x565c>
   17240:	b	17118 <sprintf@plt+0x5b40>
   17244:	strd	r4, [sp, #-12]!
   17248:	str	lr, [sp, #8]
   1724c:	sub	sp, sp, #12
   17250:	movw	r3, #368	; 0x170
   17254:	movt	r3, #3
   17258:	mov	r1, sp
   1725c:	ldr	r0, [r3]
   17260:	bl	113e0 <rb_dictionary_foreach_start@plt>
   17264:	movw	r4, #368	; 0x170
   17268:	movt	r4, #3
   1726c:	movw	r5, #48608	; 0xbde0
   17270:	movt	r5, #2
   17274:	b	1728c <sprintf@plt+0x5cb4>
   17278:	mov	r1, #2
   1727c:	bl	16c34 <sprintf@plt+0x565c>
   17280:	mov	r1, sp
   17284:	ldr	r0, [r4]
   17288:	bl	11398 <rb_dictionary_foreach_next@plt>
   1728c:	mov	r1, sp
   17290:	ldr	r0, [r4]
   17294:	bl	112fc <rb_dictionary_foreach_cur@plt>
   17298:	cmp	r0, #0
   1729c:	beq	172bc <sprintf@plt+0x5ce4>
   172a0:	ldr	r2, [r5, #20]
   172a4:	ldr	r3, [r0, #464]	; 0x1d0
   172a8:	add	r3, r3, r2, lsl #4
   172ac:	ldr	r3, [r3, #8]
   172b0:	cmp	r3, #0
   172b4:	bne	17278 <sprintf@plt+0x5ca0>
   172b8:	b	17280 <sprintf@plt+0x5ca8>
   172bc:	add	sp, sp, #12
   172c0:	ldrd	r4, [sp]
   172c4:	add	sp, sp, #8
   172c8:	pop	{pc}		; (ldr pc, [sp], #4)
   172cc:	str	r4, [sp, #-8]!
   172d0:	str	lr, [sp, #4]
   172d4:	ldr	r0, [r2]
   172d8:	mov	r2, #10
   172dc:	mov	r1, #0
   172e0:	bl	11440 <strtol@plt>
   172e4:	cmp	r0, #0
   172e8:	blt	17304 <sprintf@plt+0x5d2c>
   172ec:	movw	r3, #48712	; 0xbe48
   172f0:	movt	r3, #2
   172f4:	str	r0, [r3]
   172f8:	ldr	r4, [sp]
   172fc:	add	sp, sp, #4
   17300:	pop	{pc}		; (ldr pc, [sp], #4)
   17304:	mov	r2, r0
   17308:	movw	r1, #40112	; 0x9cb0
   1730c:	movt	r1, #1
   17310:	mov	r0, #67	; 0x43
   17314:	bl	122a0 <sprintf@plt+0xcc8>
   17318:	mov	r0, #3
   1731c:	bl	115c0 <exit@plt>
   17320:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17324:	strd	r6, [sp, #8]
   17328:	str	r8, [sp, #16]
   1732c:	str	lr, [sp, #20]
   17330:	mov	r4, r0
   17334:	mov	r7, r1
   17338:	movw	r5, #48712	; 0xbe48
   1733c:	movt	r5, #2
   17340:	ldr	r2, [r5, #16]
   17344:	ldr	r3, [r0, #464]	; 0x1d0
   17348:	add	r3, r3, r2, lsl #4
   1734c:	ldr	r6, [r3, #8]
   17350:	mov	r2, #64	; 0x40
   17354:	movw	r1, #38104	; 0x94d8
   17358:	movt	r1, #1
   1735c:	add	r0, r0, #376	; 0x178
   17360:	bl	11380 <rb_strlcpy@plt>
   17364:	movw	r3, #40100	; 0x9ca4
   17368:	movt	r3, #1
   1736c:	ldr	r1, [r3, r7, lsl #2]
   17370:	ldr	r0, [r4]
   17374:	bl	1223c <sprintf@plt+0xc64>
   17378:	ldr	r0, [r6]
   1737c:	bl	11f4c <sprintf@plt+0x974>
   17380:	mov	r0, r6
   17384:	bl	113a4 <free@plt>
   17388:	ldr	r2, [r5, #16]
   1738c:	ldr	r3, [r4, #464]	; 0x1d0
   17390:	add	r3, r3, r2, lsl #4
   17394:	mov	r2, #0
   17398:	str	r2, [r3, #8]
   1739c:	ldr	r1, [r5, #16]
   173a0:	ldr	r3, [r4, #464]	; 0x1d0
   173a4:	add	r3, r3, r1, lsl #4
   173a8:	str	r2, [r3, #4]
   173ac:	ldr	r1, [r5, #16]
   173b0:	mov	r0, r4
   173b4:	bl	12d0c <sprintf@plt+0x1734>
   173b8:	ldr	r3, [r4, #460]	; 0x1cc
   173bc:	sub	r3, r3, #1
   173c0:	str	r3, [r4, #460]	; 0x1cc
   173c4:	cmp	r3, #0
   173c8:	beq	173e0 <sprintf@plt+0x5e08>
   173cc:	ldrd	r4, [sp]
   173d0:	ldrd	r6, [sp, #8]
   173d4:	ldr	r8, [sp, #16]
   173d8:	add	sp, sp, #20
   173dc:	pop	{pc}		; (ldr pc, [sp], #4)
   173e0:	mov	r0, r4
   173e4:	bl	12814 <sprintf@plt+0x123c>
   173e8:	b	173cc <sprintf@plt+0x5df4>
   173ec:	movw	r3, #48712	; 0xbe48
   173f0:	movt	r3, #2
   173f4:	ldr	r2, [r3, #16]
   173f8:	ldr	r3, [r0, #464]	; 0x1d0
   173fc:	add	r3, r3, r2, lsl #4
   17400:	ldr	r3, [r3, #8]
   17404:	cmp	r3, #0
   17408:	bxeq	lr
   1740c:	str	r4, [sp, #-8]!
   17410:	str	lr, [sp, #4]
   17414:	mov	r1, #1
   17418:	bl	17320 <sprintf@plt+0x5d48>
   1741c:	ldr	r4, [sp]
   17420:	add	sp, sp, #4
   17424:	pop	{pc}		; (ldr pc, [sp], #4)
   17428:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1742c:	strd	r6, [sp, #8]
   17430:	str	r8, [sp, #16]
   17434:	str	lr, [sp, #20]
   17438:	mov	r4, r3
   1743c:	eor	r1, r1, #1
   17440:	cmp	r0, #0
   17444:	orreq	r1, r1, #1
   17448:	cmp	r1, #0
   1744c:	bne	17480 <sprintf@plt+0x5ea8>
   17450:	mov	r5, r0
   17454:	bl	113f8 <strlen@plt>
   17458:	cmp	r0, #63	; 0x3f
   1745c:	bls	17490 <sprintf@plt+0x5eb8>
   17460:	mov	r1, #2
   17464:	mov	r0, r4
   17468:	bl	17320 <sprintf@plt+0x5d48>
   1746c:	ldrd	r4, [sp]
   17470:	ldrd	r6, [sp, #8]
   17474:	ldr	r8, [sp, #16]
   17478:	add	sp, sp, #20
   1747c:	pop	{pc}		; (ldr pc, [sp], #4)
   17480:	mov	r1, #1
   17484:	mov	r0, r3
   17488:	bl	17320 <sprintf@plt+0x5d48>
   1748c:	b	1746c <sprintf@plt+0x5e94>
   17490:	add	r6, r4, #376	; 0x178
   17494:	mov	r2, #64	; 0x40
   17498:	mov	r1, r5
   1749c:	mov	r0, r6
   174a0:	bl	11380 <rb_strlcpy@plt>
   174a4:	movw	r5, #48712	; 0xbe48
   174a8:	movt	r5, #2
   174ac:	ldr	r2, [r5, #16]
   174b0:	ldr	r3, [r4, #464]	; 0x1d0
   174b4:	add	r3, r3, r2, lsl #4
   174b8:	ldr	r7, [r3, #8]
   174bc:	mov	r2, r6
   174c0:	movw	r1, #40148	; 0x9cd4
   174c4:	movt	r1, #1
   174c8:	ldr	r0, [r4]
   174cc:	bl	1223c <sprintf@plt+0xc64>
   174d0:	ldr	r0, [r7]
   174d4:	bl	11f4c <sprintf@plt+0x974>
   174d8:	mov	r0, r7
   174dc:	bl	113a4 <free@plt>
   174e0:	ldr	r2, [r5, #16]
   174e4:	ldr	r3, [r4, #464]	; 0x1d0
   174e8:	add	r3, r3, r2, lsl #4
   174ec:	mov	r2, #0
   174f0:	str	r2, [r3, #8]
   174f4:	ldr	r1, [r5, #16]
   174f8:	ldr	r3, [r4, #464]	; 0x1d0
   174fc:	add	r3, r3, r1, lsl #4
   17500:	str	r2, [r3, #4]
   17504:	ldr	r1, [r5, #16]
   17508:	mov	r0, r4
   1750c:	bl	12d0c <sprintf@plt+0x1734>
   17510:	ldr	r3, [r4, #460]	; 0x1cc
   17514:	sub	r3, r3, #1
   17518:	str	r3, [r4, #460]	; 0x1cc
   1751c:	cmp	r3, #0
   17520:	bne	1746c <sprintf@plt+0x5e94>
   17524:	mov	r0, r4
   17528:	bl	12814 <sprintf@plt+0x123c>
   1752c:	b	1746c <sprintf@plt+0x5e94>
   17530:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17534:	strd	r6, [sp, #8]
   17538:	str	r8, [sp, #16]
   1753c:	str	lr, [sp, #20]
   17540:	mov	r4, r0
   17544:	mov	r1, #4
   17548:	mov	r0, #1
   1754c:	bl	11314 <calloc@plt>
   17550:	subs	r6, r0, #0
   17554:	beq	175d8 <sprintf@plt+0x6000>
   17558:	ldr	r3, [r4, #460]	; 0x1cc
   1755c:	add	r3, r3, #1
   17560:	str	r3, [r4, #460]	; 0x1cc
   17564:	movw	r3, #48712	; 0xbe48
   17568:	movt	r3, #2
   1756c:	ldr	r1, [r3, #16]
   17570:	ldr	r2, [r4, #464]	; 0x1d0
   17574:	add	r2, r2, r1, lsl #4
   17578:	str	r6, [r2, #8]
   1757c:	ldr	r7, [r3, #16]
   17580:	ldr	r5, [r3]
   17584:	bl	11404 <rb_current_time@plt>
   17588:	ldr	r3, [r4, #464]	; 0x1d0
   1758c:	add	r3, r3, r7, lsl #4
   17590:	add	r0, r5, r0
   17594:	str	r0, [r3, #4]
   17598:	mov	r2, r4
   1759c:	movw	r1, #29736	; 0x7428
   175a0:	movt	r1, #1
   175a4:	add	r0, r4, #192	; 0xc0
   175a8:	bl	11e58 <sprintf@plt+0x880>
   175ac:	str	r0, [r6]
   175b0:	movw	r1, #40176	; 0x9cf0
   175b4:	movt	r1, #1
   175b8:	ldr	r0, [r4]
   175bc:	bl	1223c <sprintf@plt+0xc64>
   175c0:	mov	r0, #1
   175c4:	ldrd	r4, [sp]
   175c8:	ldrd	r6, [sp, #8]
   175cc:	ldr	r8, [sp, #16]
   175d0:	add	sp, sp, #20
   175d4:	pop	{pc}		; (ldr pc, [sp], #4)
   175d8:	bl	114ac <rb_outofmemory@plt>
   175dc:	strd	r4, [sp, #-12]!
   175e0:	str	lr, [sp, #8]
   175e4:	sub	sp, sp, #12
   175e8:	movw	r3, #368	; 0x170
   175ec:	movt	r3, #3
   175f0:	mov	r1, sp
   175f4:	ldr	r0, [r3]
   175f8:	bl	113e0 <rb_dictionary_foreach_start@plt>
   175fc:	movw	r4, #368	; 0x170
   17600:	movt	r4, #3
   17604:	movw	r5, #48712	; 0xbe48
   17608:	movt	r5, #2
   1760c:	b	17624 <sprintf@plt+0x604c>
   17610:	mov	r1, #1
   17614:	bl	17320 <sprintf@plt+0x5d48>
   17618:	mov	r1, sp
   1761c:	ldr	r0, [r4]
   17620:	bl	11398 <rb_dictionary_foreach_next@plt>
   17624:	mov	r1, sp
   17628:	ldr	r0, [r4]
   1762c:	bl	112fc <rb_dictionary_foreach_cur@plt>
   17630:	cmp	r0, #0
   17634:	beq	17654 <sprintf@plt+0x607c>
   17638:	ldr	r2, [r5, #16]
   1763c:	ldr	r3, [r0, #464]	; 0x1d0
   17640:	add	r3, r3, r2, lsl #4
   17644:	ldr	r3, [r3, #8]
   17648:	cmp	r3, #0
   1764c:	bne	17610 <sprintf@plt+0x6038>
   17650:	b	17618 <sprintf@plt+0x6040>
   17654:	add	sp, sp, #12
   17658:	ldrd	r4, [sp]
   1765c:	add	sp, sp, #8
   17660:	pop	{pc}		; (ldr pc, [sp], #4)
   17664:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17668:	strd	r6, [sp, #8]
   1766c:	str	r8, [sp, #16]
   17670:	str	lr, [sp, #20]
   17674:	movw	r3, #48800	; 0xbea0
   17678:	movt	r3, #2
   1767c:	ldr	r2, [r3, #12]
   17680:	ldr	r3, [r0, #464]	; 0x1d0
   17684:	add	r3, r3, r2, lsl #4
   17688:	ldr	r7, [r3, #8]
   1768c:	cmp	r7, #0
   17690:	beq	17734 <sprintf@plt+0x615c>
   17694:	mov	r6, r0
   17698:	movw	r1, #40348	; 0x9d9c
   1769c:	movt	r1, #1
   176a0:	ldr	r0, [r0]
   176a4:	bl	1223c <sprintf@plt+0xc64>
   176a8:	ldr	r3, [r7]
   176ac:	cmp	r3, #0
   176b0:	beq	176e0 <sprintf@plt+0x6108>
   176b4:	ldr	r4, [r3, #8]
   176b8:	ldr	r5, [r3]
   176bc:	ldr	r0, [r5, #4]
   176c0:	bl	11434 <rb_close@plt>
   176c4:	mov	r0, r5
   176c8:	bl	113a4 <free@plt>
   176cc:	cmp	r4, #0
   176d0:	beq	176e0 <sprintf@plt+0x6108>
   176d4:	mov	r3, r4
   176d8:	ldr	r4, [r4, #8]
   176dc:	b	176b8 <sprintf@plt+0x60e0>
   176e0:	mov	r0, r7
   176e4:	bl	113a4 <free@plt>
   176e8:	movw	r3, #48800	; 0xbea0
   176ec:	movt	r3, #2
   176f0:	ldr	r1, [r3, #12]
   176f4:	ldr	r2, [r6, #464]	; 0x1d0
   176f8:	add	r2, r2, r1, lsl #4
   176fc:	mov	r1, #0
   17700:	str	r1, [r2, #8]
   17704:	ldr	r0, [r3, #12]
   17708:	ldr	r2, [r6, #464]	; 0x1d0
   1770c:	add	r2, r2, r0, lsl #4
   17710:	str	r1, [r2, #4]
   17714:	ldr	r1, [r3, #12]
   17718:	mov	r0, r6
   1771c:	bl	12d0c <sprintf@plt+0x1734>
   17720:	ldr	r3, [r6, #460]	; 0x1cc
   17724:	sub	r3, r3, #1
   17728:	str	r3, [r6, #460]	; 0x1cc
   1772c:	cmp	r3, #0
   17730:	beq	17748 <sprintf@plt+0x6170>
   17734:	ldrd	r4, [sp]
   17738:	ldrd	r6, [sp, #8]
   1773c:	ldr	r8, [sp, #16]
   17740:	add	sp, sp, #20
   17744:	pop	{pc}		; (ldr pc, [sp], #4)
   17748:	mov	r0, r6
   1774c:	bl	12814 <sprintf@plt+0x123c>
   17750:	b	17734 <sprintf@plt+0x615c>
   17754:	str	r4, [sp, #-8]!
   17758:	str	lr, [sp, #4]
   1775c:	sub	sp, sp, #8
   17760:	movw	r3, #368	; 0x170
   17764:	movt	r3, #3
   17768:	mov	r1, sp
   1776c:	ldr	r0, [r3]
   17770:	bl	113e0 <rb_dictionary_foreach_start@plt>
   17774:	movw	r4, #368	; 0x170
   17778:	movt	r4, #3
   1777c:	mov	r1, sp
   17780:	ldr	r0, [r4]
   17784:	bl	112fc <rb_dictionary_foreach_cur@plt>
   17788:	cmp	r0, #0
   1778c:	beq	177a4 <sprintf@plt+0x61cc>
   17790:	bl	17664 <sprintf@plt+0x608c>
   17794:	mov	r1, sp
   17798:	ldr	r0, [r4]
   1779c:	bl	11398 <rb_dictionary_foreach_next@plt>
   177a0:	b	1777c <sprintf@plt+0x61a4>
   177a4:	add	sp, sp, #8
   177a8:	ldr	r4, [sp]
   177ac:	add	sp, sp, #4
   177b0:	pop	{pc}		; (ldr pc, [sp], #4)
   177b4:	str	r4, [sp, #-8]!
   177b8:	str	lr, [sp, #4]
   177bc:	ldr	r0, [r2]
   177c0:	mov	r2, #10
   177c4:	mov	r1, #0
   177c8:	bl	11440 <strtol@plt>
   177cc:	subs	r2, r0, #0
   177d0:	movwge	r3, #48800	; 0xbea0
   177d4:	movtge	r3, #2
   177d8:	strge	r2, [r3, #60]	; 0x3c
   177dc:	blt	177ec <sprintf@plt+0x6214>
   177e0:	ldr	r4, [sp]
   177e4:	add	sp, sp, #4
   177e8:	pop	{pc}		; (ldr pc, [sp], #4)
   177ec:	movw	r1, #40380	; 0x9dbc
   177f0:	movt	r1, #1
   177f4:	mov	r0, #67	; 0x43
   177f8:	bl	122a0 <sprintf@plt+0xcc8>
   177fc:	b	177e0 <sprintf@plt+0x6208>
   17800:	strd	r4, [sp, #-12]!
   17804:	str	lr, [sp, #8]
   17808:	sub	sp, sp, #140	; 0x8c
   1780c:	mov	r4, r0
   17810:	ldr	r3, [r0, #12]
   17814:	ldrh	r2, [r3, #54]	; 0x36
   17818:	str	r2, [sp]
   1781c:	movw	r2, #40416	; 0x9de0
   17820:	movt	r2, #1
   17824:	mov	r1, #128	; 0x80
   17828:	add	r0, sp, #8
   1782c:	bl	1156c <snprintf@plt>
   17830:	add	r0, sp, #8
   17834:	bl	113f8 <strlen@plt>
   17838:	mov	r2, r0
   1783c:	add	r1, sp, #8
   17840:	ldr	r0, [r4, #4]
   17844:	bl	11368 <rb_write@plt>
   17848:	cmp	r0, #0
   1784c:	ble	17888 <sprintf@plt+0x62b0>
   17850:	ldr	r5, [r4, #8]
   17854:	mov	r0, r5
   17858:	bl	113f8 <strlen@plt>
   1785c:	add	r2, r0, #1
   17860:	mov	r1, r5
   17864:	ldr	r0, [r4, #4]
   17868:	bl	11368 <rb_write@plt>
   1786c:	cmp	r0, #0
   17870:	ble	17888 <sprintf@plt+0x62b0>
   17874:	mov	r2, #2
   17878:	movw	r1, #39060	; 0x9894
   1787c:	movt	r1, #1
   17880:	ldr	r0, [r4, #4]
   17884:	bl	11368 <rb_write@plt>
   17888:	add	sp, sp, #140	; 0x8c
   1788c:	ldrd	r4, [sp]
   17890:	add	sp, sp, #8
   17894:	pop	{pc}		; (ldr pc, [sp], #4)
   17898:	strd	r4, [sp, #-12]!
   1789c:	str	lr, [sp, #8]
   178a0:	sub	sp, sp, #36	; 0x24
   178a4:	ldr	r2, [r0]
   178a8:	movw	r3, #40312	; 0x9d78
   178ac:	movt	r3, #1
   178b0:	ldr	r1, [r3]
   178b4:	str	r1, [sp, #4]
   178b8:	ldrh	r3, [r3, #4]
   178bc:	strh	r3, [sp, #8]
   178c0:	ldrh	r3, [r2, #248]	; 0xf8
   178c4:	cmp	r3, #2
   178c8:	beq	178e4 <sprintf@plt+0x630c>
   178cc:	cmp	r3, #10
   178d0:	beq	17940 <sprintf@plt+0x6368>
   178d4:	add	sp, sp, #36	; 0x24
   178d8:	ldrd	r4, [sp]
   178dc:	add	sp, sp, #8
   178e0:	pop	{pc}		; (ldr pc, [sp], #4)
   178e4:	mov	r3, #1
   178e8:	strb	r3, [sp, #10]
   178ec:	ldr	r3, [r0, #12]
   178f0:	ldr	r2, [r3, #60]	; 0x3c
   178f4:	str	r2, [sp, #11]
   178f8:	ldrh	r3, [r3, #58]	; 0x3a
   178fc:	strh	r3, [sp, #15]
   17900:	add	r2, sp, #17
   17904:	mov	r4, r0
   17908:	add	r1, sp, #4
   1790c:	sub	r2, r1, r2
   17910:	ldr	r0, [r0, #4]
   17914:	bl	11368 <rb_write@plt>
   17918:	cmp	r0, #0
   1791c:	ble	178d4 <sprintf@plt+0x62fc>
   17920:	ldr	r5, [r4, #8]
   17924:	mov	r0, r5
   17928:	bl	113f8 <strlen@plt>
   1792c:	add	r2, r0, #1
   17930:	mov	r1, r5
   17934:	ldr	r0, [r4, #4]
   17938:	bl	11368 <rb_write@plt>
   1793c:	b	178d4 <sprintf@plt+0x62fc>
   17940:	mov	r3, #4
   17944:	strb	r3, [sp, #10]
   17948:	ldr	r2, [r0, #12]
   1794c:	mov	r3, r2
   17950:	ldr	lr, [r3, #64]!	; 0x40
   17954:	ldr	ip, [r3, #4]
   17958:	ldr	r1, [r3, #8]
   1795c:	ldr	r3, [r3, #12]
   17960:	str	lr, [sp, #11]
   17964:	str	ip, [sp, #15]
   17968:	str	r1, [sp, #19]
   1796c:	str	r3, [sp, #23]
   17970:	ldrh	r3, [r2, #58]	; 0x3a
   17974:	strh	r3, [sp, #27]
   17978:	add	r2, sp, #29
   1797c:	b	17904 <sprintf@plt+0x632c>
   17980:	strd	r4, [sp, #-12]!
   17984:	str	lr, [sp, #8]
   17988:	sub	sp, sp, #20
   1798c:	mov	r4, r0
   17990:	mov	r3, #260	; 0x104
   17994:	strh	r3, [sp, #4]
   17998:	ldr	r3, [r0, #12]
   1799c:	ldrh	r2, [r3, #58]	; 0x3a
   179a0:	strh	r2, [sp, #6]
   179a4:	ldr	r3, [r3, #60]	; 0x3c
   179a8:	str	r3, [sp, #8]
   179ac:	mov	r3, #0
   179b0:	strb	r3, [sp, #12]
   179b4:	mov	r2, #9
   179b8:	add	r1, sp, #4
   179bc:	ldr	r0, [r0, #4]
   179c0:	bl	11368 <rb_write@plt>
   179c4:	cmp	r0, #0
   179c8:	blt	179e8 <sprintf@plt+0x6410>
   179cc:	ldr	r5, [r4, #8]
   179d0:	mov	r0, r5
   179d4:	bl	113f8 <strlen@plt>
   179d8:	add	r2, r0, #1
   179dc:	mov	r1, r5
   179e0:	ldr	r0, [r4, #4]
   179e4:	bl	11368 <rb_write@plt>
   179e8:	add	sp, sp, #20
   179ec:	ldrd	r4, [sp]
   179f0:	add	sp, sp, #8
   179f4:	pop	{pc}		; (ldr pc, [sp], #4)
   179f8:	str	r4, [sp, #-8]!
   179fc:	str	lr, [sp, #4]
   17a00:	movw	r3, #65508	; 0xffe4
   17a04:	movt	r3, #2
   17a08:	ldr	r0, [r3, #184]	; 0xb8
   17a0c:	cmp	r0, #0
   17a10:	beq	17a18 <sprintf@plt+0x6440>
   17a14:	bl	11434 <rb_close@plt>
   17a18:	movw	r3, #65508	; 0xffe4
   17a1c:	movt	r3, #2
   17a20:	ldr	r0, [r3, #372]	; 0x174
   17a24:	cmp	r0, #0
   17a28:	beq	17a30 <sprintf@plt+0x6458>
   17a2c:	bl	11434 <rb_close@plt>
   17a30:	mov	r2, #376	; 0x178
   17a34:	mov	r1, #0
   17a38:	movw	r0, #65508	; 0xffe4
   17a3c:	movt	r0, #2
   17a40:	bl	11344 <memset@plt>
   17a44:	ldr	r4, [sp]
   17a48:	add	sp, sp, #4
   17a4c:	pop	{pc}		; (ldr pc, [sp], #4)
   17a50:	strd	r4, [sp, #-12]!
   17a54:	str	lr, [sp, #8]
   17a58:	sub	sp, sp, #148	; 0x94
   17a5c:	mov	r5, r0
   17a60:	mov	r3, #128	; 0x80
   17a64:	str	r3, [sp, #12]
   17a68:	ldr	r3, [sp, #160]	; 0xa0
   17a6c:	clz	r3, r3
   17a70:	lsr	r3, r3, #5
   17a74:	cmp	r1, #0
   17a78:	moveq	r1, r3
   17a7c:	movne	r1, #1
   17a80:	cmp	r1, #0
   17a84:	bne	17ac0 <sprintf@plt+0x64e8>
   17a88:	bl	1129c <rb_get_fd@plt>
   17a8c:	add	r2, sp, #12
   17a90:	add	r1, sp, #16
   17a94:	bl	1123c <getsockname@plt>
   17a98:	cmp	r0, #0
   17a9c:	bne	17ac8 <sprintf@plt+0x64f0>
   17aa0:	movw	r3, #368	; 0x170
   17aa4:	movt	r3, #3
   17aa8:	add	r1, sp, #4
   17aac:	ldr	r0, [r3]
   17ab0:	bl	113e0 <rb_dictionary_foreach_start@plt>
   17ab4:	movw	r4, #368	; 0x170
   17ab8:	movt	r4, #3
   17abc:	b	17af0 <sprintf@plt+0x6518>
   17ac0:	bl	11434 <rb_close@plt>
   17ac4:	b	17bbc <sprintf@plt+0x65e4>
   17ac8:	mov	r0, r5
   17acc:	bl	11434 <rb_close@plt>
   17ad0:	b	17bbc <sprintf@plt+0x65e4>
   17ad4:	ldr	r3, [r0, #252]	; 0xfc
   17ad8:	ldr	r2, [sp, #20]
   17adc:	cmp	r2, r3
   17ae0:	beq	17b80 <sprintf@plt+0x65a8>
   17ae4:	add	r1, sp, #4
   17ae8:	ldr	r0, [r4]
   17aec:	bl	11398 <rb_dictionary_foreach_next@plt>
   17af0:	add	r1, sp, #4
   17af4:	ldr	r0, [r4]
   17af8:	bl	112fc <rb_dictionary_foreach_cur@plt>
   17afc:	cmp	r0, #0
   17b00:	beq	17bb4 <sprintf@plt+0x65dc>
   17b04:	ldrh	r2, [sp, #16]
   17b08:	ldrh	r3, [r0, #248]	; 0xf8
   17b0c:	cmp	r3, r2
   17b10:	bne	17ae4 <sprintf@plt+0x650c>
   17b14:	cmp	r2, #2
   17b18:	beq	17ad4 <sprintf@plt+0x64fc>
   17b1c:	cmp	r2, #10
   17b20:	bne	17b9c <sprintf@plt+0x65c4>
   17b24:	ldr	r3, [r0, #256]	; 0x100
   17b28:	ldr	r2, [sp, #24]
   17b2c:	cmp	r2, r3
   17b30:	bne	17ae4 <sprintf@plt+0x650c>
   17b34:	ldr	r3, [r0, #260]	; 0x104
   17b38:	ldr	r2, [sp, #28]
   17b3c:	cmp	r2, r3
   17b40:	bne	17ae4 <sprintf@plt+0x650c>
   17b44:	ldr	r3, [r0, #264]	; 0x108
   17b48:	ldr	r2, [sp, #32]
   17b4c:	cmp	r2, r3
   17b50:	bne	17ae4 <sprintf@plt+0x650c>
   17b54:	ldr	r3, [r0, #268]	; 0x10c
   17b58:	ldr	r2, [sp, #36]	; 0x24
   17b5c:	cmp	r2, r3
   17b60:	bne	17ae4 <sprintf@plt+0x650c>
   17b64:	mov	r3, r0
   17b68:	movw	r2, #31692	; 0x7bcc
   17b6c:	movt	r2, #1
   17b70:	mov	r1, #1
   17b74:	mov	r0, r5
   17b78:	bl	11290 <rb_setselect@plt>
   17b7c:	b	17bbc <sprintf@plt+0x65e4>
   17b80:	mov	r3, r0
   17b84:	movw	r2, #31692	; 0x7bcc
   17b88:	movt	r2, #1
   17b8c:	mov	r1, #1
   17b90:	mov	r0, r5
   17b94:	bl	11290 <rb_setselect@plt>
   17b98:	b	17bbc <sprintf@plt+0x65e4>
   17b9c:	movw	r1, #40444	; 0x9dfc
   17ba0:	movt	r1, #1
   17ba4:	mov	r0, #67	; 0x43
   17ba8:	bl	122a0 <sprintf@plt+0xcc8>
   17bac:	mov	r0, #3
   17bb0:	bl	115c0 <exit@plt>
   17bb4:	mov	r0, r5
   17bb8:	bl	11434 <rb_close@plt>
   17bbc:	add	sp, sp, #148	; 0x94
   17bc0:	ldrd	r4, [sp]
   17bc4:	add	sp, sp, #8
   17bc8:	pop	{pc}		; (ldr pc, [sp], #4)
   17bcc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17bd0:	strd	r6, [sp, #8]
   17bd4:	str	r8, [sp, #16]
   17bd8:	str	lr, [sp, #20]
   17bdc:	sub	sp, sp, #128	; 0x80
   17be0:	mov	r7, r0
   17be4:	mov	r6, r1
   17be8:	movw	r3, #48800	; 0xbea0
   17bec:	movt	r3, #2
   17bf0:	ldr	r2, [r3, #12]
   17bf4:	ldr	r3, [r1, #464]	; 0x1d0
   17bf8:	add	r3, r3, r2, lsl #4
   17bfc:	ldr	r8, [r3, #8]
   17c00:	mov	r2, #128	; 0x80
   17c04:	mov	r1, sp
   17c08:	bl	113bc <rb_read@plt>
   17c0c:	cmp	r0, #0
   17c10:	blt	17c64 <sprintf@plt+0x668c>
   17c14:	cmp	r0, #0
   17c18:	beq	17c78 <sprintf@plt+0x66a0>
   17c1c:	movw	r3, #65508	; 0xffe4
   17c20:	movt	r3, #2
   17c24:	ldr	r4, [r3, #376]	; 0x178
   17c28:	cmp	r4, #0
   17c2c:	beq	17d00 <sprintf@plt+0x6728>
   17c30:	ldr	r5, [r4]
   17c34:	mov	r0, r5
   17c38:	bl	113f8 <strlen@plt>
   17c3c:	mov	r2, r0
   17c40:	mov	r1, sp
   17c44:	mov	r0, r5
   17c48:	bl	11584 <strncmp@plt>
   17c4c:	cmp	r0, #0
   17c50:	beq	17ca0 <sprintf@plt+0x66c8>
   17c54:	ldr	r4, [r4, #8]
   17c58:	cmp	r4, #0
   17c5c:	bne	17c30 <sprintf@plt+0x6658>
   17c60:	b	17d00 <sprintf@plt+0x6728>
   17c64:	bl	115cc <__errno_location@plt>
   17c68:	ldr	r0, [r0]
   17c6c:	bl	11248 <rb_ignore_errno@plt>
   17c70:	cmp	r0, #0
   17c74:	bne	17c84 <sprintf@plt+0x66ac>
   17c78:	mov	r0, r7
   17c7c:	bl	11434 <rb_close@plt>
   17c80:	b	17d08 <sprintf@plt+0x6730>
   17c84:	mov	r3, r6
   17c88:	movw	r2, #31692	; 0x7bcc
   17c8c:	movt	r2, #1
   17c90:	mov	r1, #1
   17c94:	mov	r0, r7
   17c98:	bl	11290 <rb_setselect@plt>
   17c9c:	b	17d08 <sprintf@plt+0x6730>
   17ca0:	ldr	r3, [r8]
   17ca4:	cmp	r3, #0
   17ca8:	beq	17cd8 <sprintf@plt+0x6700>
   17cac:	ldr	r4, [r3, #8]
   17cb0:	ldr	r5, [r3]
   17cb4:	ldr	r0, [r5, #4]
   17cb8:	bl	11434 <rb_close@plt>
   17cbc:	mov	r0, r5
   17cc0:	bl	113a4 <free@plt>
   17cc4:	cmp	r4, #0
   17cc8:	beq	17cd8 <sprintf@plt+0x6700>
   17ccc:	mov	r3, r4
   17cd0:	ldr	r4, [r4, #8]
   17cd4:	b	17cb0 <sprintf@plt+0x66d8>
   17cd8:	mov	r0, r8
   17cdc:	bl	113a4 <free@plt>
   17ce0:	movw	r1, #48800	; 0xbea0
   17ce4:	movt	r1, #2
   17ce8:	movw	r3, #40492	; 0x9e2c
   17cec:	movt	r3, #1
   17cf0:	mov	r2, sp
   17cf4:	ldr	r1, [r1, #12]
   17cf8:	mov	r0, r6
   17cfc:	bl	129f4 <sprintf@plt+0x141c>
   17d00:	mov	r0, r7
   17d04:	bl	11434 <rb_close@plt>
   17d08:	add	sp, sp, #128	; 0x80
   17d0c:	ldrd	r4, [sp]
   17d10:	ldrd	r6, [sp, #8]
   17d14:	ldr	r8, [sp, #16]
   17d18:	add	sp, sp, #20
   17d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   17d20:	strd	r4, [sp, #-20]!	; 0xffffffec
   17d24:	strd	r6, [sp, #8]
   17d28:	str	lr, [sp, #16]
   17d2c:	sub	sp, sp, #156	; 0x9c
   17d30:	mov	r7, r0
   17d34:	mov	r6, r1
   17d38:	mov	r3, #1
   17d3c:	str	r3, [sp, #12]
   17d40:	add	r1, sp, #24
   17d44:	bl	113ec <rb_inet_pton_sock@plt>
   17d48:	cmp	r0, #0
   17d4c:	beq	17e18 <sprintf@plt+0x6840>
   17d50:	ldrh	r0, [sp, #24]
   17d54:	cmp	r0, #2
   17d58:	beq	17e38 <sprintf@plt+0x6860>
   17d5c:	rev16	r3, r6
   17d60:	uxth	r1, r3
   17d64:	strh	r3, [sp, #26]
   17d68:	cmp	r0, #10
   17d6c:	bne	18058 <sprintf@plt+0x6a80>
   17d70:	movw	r3, #65508	; 0xffe4
   17d74:	movt	r3, #2
   17d78:	ldr	r3, [r3, #252]	; 0xfc
   17d7c:	ldr	r2, [sp, #32]
   17d80:	cmp	r2, r3
   17d84:	ldrne	r5, [pc, #816]	; 180bc <sprintf@plt+0x6ae4>
   17d88:	bne	17e60 <sprintf@plt+0x6888>
   17d8c:	movw	r3, #65508	; 0xffe4
   17d90:	movt	r3, #2
   17d94:	ldr	r3, [r3, #256]	; 0x100
   17d98:	ldr	r2, [sp, #36]	; 0x24
   17d9c:	cmp	r2, r3
   17da0:	ldrne	r5, [pc, #788]	; 180bc <sprintf@plt+0x6ae4>
   17da4:	bne	17e60 <sprintf@plt+0x6888>
   17da8:	movw	r3, #65508	; 0xffe4
   17dac:	movt	r3, #2
   17db0:	ldr	r3, [r3, #260]	; 0x104
   17db4:	ldr	r2, [sp, #40]	; 0x28
   17db8:	cmp	r2, r3
   17dbc:	ldrne	r5, [pc, #760]	; 180bc <sprintf@plt+0x6ae4>
   17dc0:	bne	17e60 <sprintf@plt+0x6888>
   17dc4:	movw	r3, #65508	; 0xffe4
   17dc8:	movt	r3, #2
   17dcc:	ldr	r3, [r3, #264]	; 0x108
   17dd0:	ldr	r2, [sp, #44]	; 0x2c
   17dd4:	cmp	r2, r3
   17dd8:	ldrne	r5, [pc, #732]	; 180bc <sprintf@plt+0x6ae4>
   17ddc:	bne	17e60 <sprintf@plt+0x6888>
   17de0:	movw	r3, #65508	; 0xffe4
   17de4:	movt	r3, #2
   17de8:	ldrh	r3, [r3, #246]	; 0xf6
   17dec:	cmp	r3, r1
   17df0:	ldrne	r5, [pc, #708]	; 180bc <sprintf@plt+0x6ae4>
   17df4:	bne	17e60 <sprintf@plt+0x6888>
   17df8:	movw	r3, #65508	; 0xffe4
   17dfc:	movt	r3, #2
   17e00:	ldr	r3, [r3, #372]	; 0x174
   17e04:	cmp	r3, #0
   17e08:	ldreq	r5, [pc, #684]	; 180bc <sprintf@plt+0x6ae4>
   17e0c:	beq	17e60 <sprintf@plt+0x6888>
   17e10:	mov	r0, #0
   17e14:	b	18044 <sprintf@plt+0x6a6c>
   17e18:	mov	r3, r6
   17e1c:	mov	r2, r7
   17e20:	movw	r1, #40512	; 0x9e40
   17e24:	movt	r1, #1
   17e28:	mov	r0, #67	; 0x43
   17e2c:	bl	122a0 <sprintf@plt+0xcc8>
   17e30:	mov	r0, #3
   17e34:	bl	115c0 <exit@plt>
   17e38:	rev16	r3, r6
   17e3c:	strh	r3, [sp, #26]
   17e40:	movw	r3, #65508	; 0xffe4
   17e44:	movt	r3, #2
   17e48:	ldr	r3, [r3, #60]	; 0x3c
   17e4c:	ldr	r2, [sp, #28]
   17e50:	cmp	r2, r3
   17e54:	beq	17f3c <sprintf@plt+0x6964>
   17e58:	movw	r5, #65508	; 0xffe4
   17e5c:	movt	r5, #2
   17e60:	movw	r3, #40544	; 0x9e60
   17e64:	movt	r3, #1
   17e68:	mov	r2, #0
   17e6c:	mov	r1, #1
   17e70:	bl	112c0 <rb_socket@plt>
   17e74:	subs	r4, r0, #0
   17e78:	beq	17f44 <sprintf@plt+0x696c>
   17e7c:	mov	r0, r4
   17e80:	bl	1129c <rb_get_fd@plt>
   17e84:	mov	r3, #4
   17e88:	str	r3, [sp]
   17e8c:	add	r3, sp, #12
   17e90:	mov	r2, #2
   17e94:	mov	r1, #1
   17e98:	bl	1159c <setsockopt@plt>
   17e9c:	cmp	r0, #0
   17ea0:	bne	17f6c <sprintf@plt+0x6994>
   17ea4:	mov	r0, r4
   17ea8:	bl	1129c <rb_get_fd@plt>
   17eac:	ldrh	r3, [sp, #24]
   17eb0:	cmp	r3, #2
   17eb4:	moveq	r2, #16
   17eb8:	movne	r2, #28
   17ebc:	add	r1, sp, #24
   17ec0:	bl	11470 <bind@plt>
   17ec4:	cmp	r0, #0
   17ec8:	bne	17f94 <sprintf@plt+0x69bc>
   17ecc:	mov	r2, #0
   17ed0:	mov	r1, #128	; 0x80
   17ed4:	mov	r0, r4
   17ed8:	bl	11578 <rb_listen@plt>
   17edc:	cmp	r0, #0
   17ee0:	bne	17fc4 <sprintf@plt+0x69ec>
   17ee4:	ldr	r0, [r5, #184]	; 0xb8
   17ee8:	cmp	r0, #0
   17eec:	beq	17ef4 <sprintf@plt+0x691c>
   17ef0:	bl	11434 <rb_close@plt>
   17ef4:	str	r4, [r5, #184]	; 0xb8
   17ef8:	movw	r3, #368	; 0x170
   17efc:	movt	r3, #3
   17f00:	add	r1, sp, #16
   17f04:	ldr	r0, [r3]
   17f08:	bl	113e0 <rb_dictionary_foreach_start@plt>
   17f0c:	movw	r4, #368	; 0x170
   17f10:	movt	r4, #3
   17f14:	add	r1, sp, #16
   17f18:	ldr	r0, [r4]
   17f1c:	bl	112fc <rb_dictionary_foreach_cur@plt>
   17f20:	cmp	r0, #0
   17f24:	beq	17ff4 <sprintf@plt+0x6a1c>
   17f28:	bl	17664 <sprintf@plt+0x608c>
   17f2c:	add	r1, sp, #16
   17f30:	ldr	r0, [r4]
   17f34:	bl	11398 <rb_dictionary_foreach_next@plt>
   17f38:	b	17f14 <sprintf@plt+0x693c>
   17f3c:	ldrh	r2, [sp, #26]
   17f40:	b	1807c <sprintf@plt+0x6aa4>
   17f44:	bl	115cc <__errno_location@plt>
   17f48:	ldr	r0, [r0]
   17f4c:	bl	1120c <strerror@plt>
   17f50:	mov	r2, r0
   17f54:	movw	r1, #40564	; 0x9e74
   17f58:	movt	r1, #1
   17f5c:	mov	r0, #67	; 0x43
   17f60:	bl	122a0 <sprintf@plt+0xcc8>
   17f64:	mov	r0, #3
   17f68:	bl	115c0 <exit@plt>
   17f6c:	bl	115cc <__errno_location@plt>
   17f70:	ldr	r0, [r0]
   17f74:	bl	1120c <strerror@plt>
   17f78:	mov	r2, r0
   17f7c:	movw	r1, #40596	; 0x9e94
   17f80:	movt	r1, #1
   17f84:	mov	r0, #67	; 0x43
   17f88:	bl	122a0 <sprintf@plt+0xcc8>
   17f8c:	mov	r0, #3
   17f90:	bl	115c0 <exit@plt>
   17f94:	bl	115cc <__errno_location@plt>
   17f98:	ldr	r0, [r0]
   17f9c:	bl	1120c <strerror@plt>
   17fa0:	mov	r2, r0
   17fa4:	movw	r1, #40636	; 0x9ebc
   17fa8:	movt	r1, #1
   17fac:	mov	r0, #87	; 0x57
   17fb0:	bl	122a0 <sprintf@plt+0xcc8>
   17fb4:	mov	r0, r4
   17fb8:	bl	11434 <rb_close@plt>
   17fbc:	mov	r0, #0
   17fc0:	b	18044 <sprintf@plt+0x6a6c>
   17fc4:	bl	115cc <__errno_location@plt>
   17fc8:	ldr	r0, [r0]
   17fcc:	bl	1120c <strerror@plt>
   17fd0:	mov	r2, r0
   17fd4:	movw	r1, #40668	; 0x9edc
   17fd8:	movt	r1, #1
   17fdc:	mov	r0, #87	; 0x57
   17fe0:	bl	122a0 <sprintf@plt+0xcc8>
   17fe4:	mov	r0, r4
   17fe8:	bl	11434 <rb_close@plt>
   17fec:	mov	r0, #0
   17ff0:	b	18044 <sprintf@plt+0x6a6c>
   17ff4:	mov	r2, #53	; 0x35
   17ff8:	mov	r1, r7
   17ffc:	mov	r0, r5
   18000:	bl	11380 <rb_strlcpy@plt>
   18004:	strh	r6, [r5, #54]	; 0x36
   18008:	mov	r2, #128	; 0x80
   1800c:	add	r1, sp, #24
   18010:	add	r0, r5, #56	; 0x38
   18014:	bl	1141c <memcpy@plt>
   18018:	movw	r3, #65508	; 0xffe4
   1801c:	movt	r3, #2
   18020:	mov	r4, #1
   18024:	strb	r4, [r3, #388]	; 0x184
   18028:	mov	r3, r5
   1802c:	movw	r2, #31312	; 0x7a50
   18030:	movt	r2, #1
   18034:	mov	r1, #0
   18038:	ldr	r0, [r5, #184]	; 0xb8
   1803c:	bl	11530 <rb_accept_tcp@plt>
   18040:	mov	r0, r4
   18044:	add	sp, sp, #156	; 0x9c
   18048:	ldrd	r4, [sp]
   1804c:	ldrd	r6, [sp, #8]
   18050:	add	sp, sp, #16
   18054:	pop	{pc}		; (ldr pc, [sp], #4)
   18058:	movw	r3, #65508	; 0xffe4
   1805c:	movt	r3, #2
   18060:	ldr	r3, [r3, #60]	; 0x3c
   18064:	ldr	r2, [sp, #28]
   18068:	cmp	r2, r3
   1806c:	movwne	r5, #65508	; 0xffe4
   18070:	movtne	r5, #2
   18074:	bne	17e60 <sprintf@plt+0x6888>
   18078:	ldrh	r2, [sp, #26]
   1807c:	movw	r3, #65508	; 0xffe4
   18080:	movt	r3, #2
   18084:	ldrh	r3, [r3, #58]	; 0x3a
   18088:	cmp	r2, r3
   1808c:	movwne	r5, #65508	; 0xffe4
   18090:	movtne	r5, #2
   18094:	bne	17e60 <sprintf@plt+0x6888>
   18098:	movw	r3, #65508	; 0xffe4
   1809c:	movt	r3, #2
   180a0:	ldr	r3, [r3, #184]	; 0xb8
   180a4:	cmp	r3, #0
   180a8:	movweq	r5, #65508	; 0xffe4
   180ac:	movteq	r5, #2
   180b0:	beq	17e60 <sprintf@plt+0x6888>
   180b4:	mov	r0, #0
   180b8:	b	18044 <sprintf@plt+0x6a6c>
   180bc:	andeq	r0, r3, r0, lsr #1
   180c0:	strd	r4, [sp, #-16]!
   180c4:	str	r6, [sp, #8]
   180c8:	str	lr, [sp, #12]
   180cc:	mov	r4, r2
   180d0:	ldr	r5, [r2]
   180d4:	mov	r2, #10
   180d8:	mov	r1, #0
   180dc:	ldr	r0, [r4, #4]
   180e0:	bl	11440 <strtol@plt>
   180e4:	sub	r2, r0, #1
   180e8:	movw	r3, #65534	; 0xfffe
   180ec:	cmp	r2, r3
   180f0:	bhi	18110 <sprintf@plt+0x6b38>
   180f4:	uxth	r1, r0
   180f8:	mov	r0, r5
   180fc:	bl	17d20 <sprintf@plt+0x6748>
   18100:	ldrd	r4, [sp]
   18104:	ldr	r6, [sp, #8]
   18108:	add	sp, sp, #12
   1810c:	pop	{pc}		; (ldr pc, [sp], #4)
   18110:	ldr	r3, [r4, #4]
   18114:	ldr	r2, [r4]
   18118:	movw	r1, #40704	; 0x9f00
   1811c:	movt	r1, #1
   18120:	mov	r0, #67	; 0x43
   18124:	bl	122a0 <sprintf@plt+0xcc8>
   18128:	mov	r0, #3
   1812c:	bl	115c0 <exit@plt>
   18130:	strd	r4, [sp, #-12]!
   18134:	str	lr, [sp, #8]
   18138:	sub	sp, sp, #12
   1813c:	ldr	r3, [r2]
   18140:	ldrb	r3, [r3]
   18144:	cmp	r3, #49	; 0x31
   18148:	moveq	r5, #1
   1814c:	movne	r5, #0
   18150:	beq	18200 <sprintf@plt+0x6c28>
   18154:	movw	r3, #65508	; 0xffe4
   18158:	movt	r3, #2
   1815c:	ldr	r0, [r3, #184]	; 0xb8
   18160:	cmp	r0, #0
   18164:	beq	181dc <sprintf@plt+0x6c04>
   18168:	bl	11434 <rb_close@plt>
   1816c:	movw	r3, #65508	; 0xffe4
   18170:	movt	r3, #2
   18174:	ldr	r0, [r3, #372]	; 0x174
   18178:	cmp	r0, #0
   1817c:	beq	18184 <sprintf@plt+0x6bac>
   18180:	bl	11434 <rb_close@plt>
   18184:	movw	r3, #65508	; 0xffe4
   18188:	movt	r3, #2
   1818c:	mov	r2, #0
   18190:	str	r2, [r3, #372]	; 0x174
   18194:	str	r2, [r3, #184]	; 0xb8
   18198:	movw	r3, #368	; 0x170
   1819c:	movt	r3, #3
   181a0:	mov	r1, sp
   181a4:	ldr	r0, [r3]
   181a8:	bl	113e0 <rb_dictionary_foreach_start@plt>
   181ac:	movw	r4, #368	; 0x170
   181b0:	movt	r4, #3
   181b4:	mov	r1, sp
   181b8:	ldr	r0, [r4]
   181bc:	bl	112fc <rb_dictionary_foreach_cur@plt>
   181c0:	cmp	r0, #0
   181c4:	beq	18278 <sprintf@plt+0x6ca0>
   181c8:	bl	17664 <sprintf@plt+0x608c>
   181cc:	mov	r1, sp
   181d0:	ldr	r0, [r4]
   181d4:	bl	11398 <rb_dictionary_foreach_next@plt>
   181d8:	b	181b4 <sprintf@plt+0x6bdc>
   181dc:	movw	r3, #65508	; 0xffe4
   181e0:	movt	r3, #2
   181e4:	ldr	r3, [r3, #372]	; 0x174
   181e8:	cmp	r3, #0
   181ec:	beq	18278 <sprintf@plt+0x6ca0>
   181f0:	movw	r3, #65508	; 0xffe4
   181f4:	movt	r3, #2
   181f8:	ldr	r0, [r3, #372]	; 0x174
   181fc:	b	18180 <sprintf@plt+0x6ba8>
   18200:	movw	r3, #65508	; 0xffe4
   18204:	movt	r3, #2
   18208:	ldrb	r3, [r3]
   1820c:	cmp	r3, #0
   18210:	beq	1823c <sprintf@plt+0x6c64>
   18214:	movw	r3, #65508	; 0xffe4
   18218:	movt	r3, #2
   1821c:	ldrh	r1, [r3, #54]	; 0x36
   18220:	cmp	r1, #0
   18224:	beq	1823c <sprintf@plt+0x6c64>
   18228:	movw	r3, #65508	; 0xffe4
   1822c:	movt	r3, #2
   18230:	ldr	r3, [r3, #184]	; 0xb8
   18234:	cmp	r3, #0
   18238:	beq	18294 <sprintf@plt+0x6cbc>
   1823c:	movw	r3, #65508	; 0xffe4
   18240:	movt	r3, #2
   18244:	ldrb	r3, [r3, #188]	; 0xbc
   18248:	cmp	r3, #0
   1824c:	beq	18278 <sprintf@plt+0x6ca0>
   18250:	movw	r3, #65508	; 0xffe4
   18254:	movt	r3, #2
   18258:	ldrh	r1, [r3, #242]	; 0xf2
   1825c:	cmp	r1, #0
   18260:	beq	18278 <sprintf@plt+0x6ca0>
   18264:	movw	r3, #65508	; 0xffe4
   18268:	movt	r3, #2
   1826c:	ldr	r3, [r3, #372]	; 0x174
   18270:	cmp	r3, #0
   18274:	beq	182a4 <sprintf@plt+0x6ccc>
   18278:	movw	r3, #65508	; 0xffe4
   1827c:	movt	r3, #2
   18280:	strb	r5, [r3, #388]	; 0x184
   18284:	add	sp, sp, #12
   18288:	ldrd	r4, [sp]
   1828c:	add	sp, sp, #8
   18290:	pop	{pc}		; (ldr pc, [sp], #4)
   18294:	movw	r0, #65508	; 0xffe4
   18298:	movt	r0, #2
   1829c:	bl	17d20 <sprintf@plt+0x6748>
   182a0:	b	1823c <sprintf@plt+0x6c64>
   182a4:	ldr	r0, [pc, #4]	; 182b0 <sprintf@plt+0x6cd8>
   182a8:	bl	17d20 <sprintf@plt+0x6748>
   182ac:	b	18278 <sprintf@plt+0x6ca0>
   182b0:	andeq	r0, r3, r0, lsr #1
   182b4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   182b8:	strd	r6, [sp, #8]
   182bc:	strd	r8, [sp, #16]
   182c0:	str	sl, [sp, #24]
   182c4:	str	lr, [sp, #28]
   182c8:	sub	sp, sp, #272	; 0x110
   182cc:	mov	r5, r0
   182d0:	mov	r8, r1
   182d4:	movw	r3, #48800	; 0xbea0
   182d8:	movt	r3, #2
   182dc:	ldr	r2, [r3, #12]
   182e0:	ldr	r3, [r0, #464]	; 0x1d0
   182e4:	add	r3, r3, r2, lsl #4
   182e8:	ldr	r7, [r3, #8]
   182ec:	mov	r1, #28
   182f0:	mov	r0, #1
   182f4:	bl	11314 <calloc@plt>
   182f8:	subs	r4, r0, #0
   182fc:	beq	18420 <sprintf@plt+0x6e48>
   18300:	mov	r3, #1
   18304:	str	r3, [sp, #12]
   18308:	ldrh	r9, [r5, #248]	; 0xf8
   1830c:	cmp	r9, #10
   18310:	movwne	r6, #65508	; 0xffe4
   18314:	movtne	r6, #2
   18318:	beq	18424 <sprintf@plt+0x6e4c>
   1831c:	ldr	r3, [r6, #184]	; 0xb8
   18320:	cmp	r3, #0
   18324:	beq	18440 <sprintf@plt+0x6e68>
   18328:	mov	sl, #128	; 0x80
   1832c:	mov	r2, sl
   18330:	add	r1, r5, #248	; 0xf8
   18334:	add	r0, sp, #144	; 0x90
   18338:	bl	1141c <memcpy@plt>
   1833c:	mov	r2, sl
   18340:	add	r1, r6, #56	; 0x38
   18344:	add	r0, sp, #16
   18348:	bl	1141c <memcpy@plt>
   1834c:	str	r5, [r4]
   18350:	str	r8, [r4, #8]
   18354:	str	r6, [r4, #12]
   18358:	mov	r3, r8
   1835c:	mov	r2, #0
   18360:	mov	r1, #1
   18364:	mov	r0, r9
   18368:	bl	112c0 <rb_socket@plt>
   1836c:	str	r0, [r4, #4]
   18370:	cmp	r0, #0
   18374:	beq	18464 <sprintf@plt+0x6e8c>
   18378:	bl	1129c <rb_get_fd@plt>
   1837c:	mov	r3, #4
   18380:	str	r3, [sp]
   18384:	add	r3, sp, #12
   18388:	mov	r2, #1
   1838c:	mov	r1, #6
   18390:	bl	1159c <setsockopt@plt>
   18394:	mov	r3, #0
   18398:	strh	r3, [sp, #18]
   1839c:	ldrh	r3, [r8, #20]
   183a0:	rev16	r3, r3
   183a4:	strh	r3, [sp, #146]	; 0x92
   183a8:	add	r2, r4, #16
   183ac:	cmp	r7, #0
   183b0:	beq	18494 <sprintf@plt+0x6ebc>
   183b4:	str	r4, [r4, #16]
   183b8:	mov	r3, #0
   183bc:	str	r3, [r4, #20]
   183c0:	ldr	r3, [r7]
   183c4:	str	r3, [r4, #24]
   183c8:	cmp	r3, #0
   183cc:	strne	r2, [r3, #4]
   183d0:	beq	184b0 <sprintf@plt+0x6ed8>
   183d4:	str	r2, [r7]
   183d8:	ldr	r3, [r7, #8]
   183dc:	add	r3, r3, #1
   183e0:	str	r3, [r7, #8]
   183e4:	ldrb	r3, [r8, #22]
   183e8:	cmp	r3, #0
   183ec:	bne	184c0 <sprintf@plt+0x6ee8>
   183f0:	movw	r3, #48800	; 0xbea0
   183f4:	movt	r3, #2
   183f8:	ldr	r3, [r3, #60]	; 0x3c
   183fc:	str	r3, [sp, #4]
   18400:	str	r4, [sp]
   18404:	movw	r3, #35772	; 0x8bbc
   18408:	movt	r3, #1
   1840c:	add	r2, sp, #16
   18410:	add	r1, sp, #144	; 0x90
   18414:	ldr	r0, [r4, #4]
   18418:	bl	11260 <rb_connect_tcp@plt>
   1841c:	b	18448 <sprintf@plt+0x6e70>
   18420:	bl	114ac <rb_outofmemory@plt>
   18424:	ldr	r3, [r8, #16]
   18428:	cmp	r3, #1
   1842c:	ldrne	r6, [pc, #188]	; 184f0 <sprintf@plt+0x6f18>
   18430:	bne	1831c <sprintf@plt+0x6d44>
   18434:	mov	r0, r4
   18438:	bl	113a4 <free@plt>
   1843c:	b	18448 <sprintf@plt+0x6e70>
   18440:	mov	r0, r4
   18444:	bl	113a4 <free@plt>
   18448:	add	sp, sp, #272	; 0x110
   1844c:	ldrd	r4, [sp]
   18450:	ldrd	r6, [sp, #8]
   18454:	ldrd	r8, [sp, #16]
   18458:	ldr	sl, [sp, #24]
   1845c:	add	sp, sp, #28
   18460:	pop	{pc}		; (ldr pc, [sp], #4)
   18464:	bl	115cc <__errno_location@plt>
   18468:	ldr	r0, [r0]
   1846c:	bl	1120c <strerror@plt>
   18470:	mov	r3, r0
   18474:	mov	r2, r8
   18478:	movw	r1, #40736	; 0x9f20
   1847c:	movt	r1, #1
   18480:	mov	r0, #87	; 0x57
   18484:	bl	122a0 <sprintf@plt+0xcc8>
   18488:	mov	r0, r4
   1848c:	bl	113a4 <free@plt>
   18490:	b	18448 <sprintf@plt+0x6e70>
   18494:	ldr	r3, [pc, #88]	; 184f4 <sprintf@plt+0x6f1c>
   18498:	mov	r2, #145	; 0x91
   1849c:	movw	r1, #38024	; 0x9488
   184a0:	movt	r1, #1
   184a4:	movw	r0, #39472	; 0x9a30
   184a8:	movt	r0, #1
   184ac:	bl	11374 <__assert_fail@plt>
   184b0:	ldr	r3, [r7, #4]
   184b4:	cmp	r3, #0
   184b8:	streq	r2, [r7, #4]
   184bc:	b	183d4 <sprintf@plt+0x6dfc>
   184c0:	movw	r3, #48800	; 0xbea0
   184c4:	movt	r3, #2
   184c8:	ldr	r3, [r3, #60]	; 0x3c
   184cc:	str	r3, [sp, #4]
   184d0:	str	r4, [sp]
   184d4:	movw	r3, #35772	; 0x8bbc
   184d8:	movt	r3, #1
   184dc:	add	r2, sp, #16
   184e0:	add	r1, sp, #144	; 0x90
   184e4:	ldr	r0, [r4, #4]
   184e8:	bl	11254 <rb_connect_tcp_ssl@plt>
   184ec:	b	18448 <sprintf@plt+0x6e70>
   184f0:	andeq	r0, r3, r0, lsr #1
   184f4:	andeq	r9, r1, r0, lsl #27
   184f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   184fc:	strd	r6, [sp, #8]
   18500:	str	r8, [sp, #16]
   18504:	str	lr, [sp, #20]
   18508:	mov	r5, r0
   1850c:	movw	r3, #48800	; 0xbea0
   18510:	movt	r3, #2
   18514:	ldr	r4, [r3, #12]
   18518:	lsl	r4, r4, #4
   1851c:	ldr	r2, [r0, #464]	; 0x1d0
   18520:	add	r2, r2, r4
   18524:	ldr	r7, [r2, #8]
   18528:	ldr	r6, [r3, #60]	; 0x3c
   1852c:	bl	11404 <rb_current_time@plt>
   18530:	ldr	r3, [r5, #464]	; 0x1d0
   18534:	add	r4, r3, r4
   18538:	add	r0, r6, r0
   1853c:	str	r0, [r4, #4]
   18540:	mov	r3, #1
   18544:	strb	r3, [r7, #12]
   18548:	movw	r3, #65508	; 0xffe4
   1854c:	movt	r3, #2
   18550:	ldr	r4, [r3, #376]	; 0x178
   18554:	cmp	r4, #0
   18558:	beq	18574 <sprintf@plt+0x6f9c>
   1855c:	ldr	r1, [r4]
   18560:	mov	r0, r5
   18564:	bl	182b4 <sprintf@plt+0x6cdc>
   18568:	ldr	r4, [r4, #8]
   1856c:	cmp	r4, #0
   18570:	bne	1855c <sprintf@plt+0x6f84>
   18574:	movw	r1, #40784	; 0x9f50
   18578:	movt	r1, #1
   1857c:	ldr	r0, [r5]
   18580:	bl	1223c <sprintf@plt+0xc64>
   18584:	ldrd	r4, [sp]
   18588:	ldrd	r6, [sp, #8]
   1858c:	ldr	r8, [sp, #16]
   18590:	add	sp, sp, #20
   18594:	pop	{pc}		; (ldr pc, [sp], #4)
   18598:	strd	r4, [sp, #-20]!	; 0xffffffec
   1859c:	strd	r6, [sp, #8]
   185a0:	str	lr, [sp, #16]
   185a4:	sub	sp, sp, #12
   185a8:	movw	r3, #65508	; 0xffe4
   185ac:	movt	r3, #2
   185b0:	ldr	r4, [r3, #376]	; 0x178
   185b4:	cmp	r4, #0
   185b8:	beq	18630 <sprintf@plt+0x7058>
   185bc:	ldr	r5, [r4, #8]
   185c0:	mov	r6, r3
   185c4:	mov	r7, #0
   185c8:	ldr	r0, [r4]
   185cc:	cmp	r0, #0
   185d0:	beq	185d8 <sprintf@plt+0x7000>
   185d4:	bl	113a4 <free@plt>
   185d8:	ldr	r3, [r4, #8]
   185dc:	cmp	r3, #0
   185e0:	ldrne	r2, [r4, #4]
   185e4:	strne	r2, [r3, #4]
   185e8:	ldreq	r3, [r4, #4]
   185ec:	streq	r3, [r6, #380]	; 0x17c
   185f0:	ldr	r3, [r4, #4]
   185f4:	cmp	r3, #0
   185f8:	ldrne	r2, [r4, #8]
   185fc:	strne	r2, [r3, #8]
   18600:	ldreq	r3, [r4, #8]
   18604:	streq	r3, [r6, #376]	; 0x178
   18608:	str	r7, [r4, #4]
   1860c:	str	r7, [r4, #8]
   18610:	ldr	r3, [r6, #384]	; 0x180
   18614:	sub	r3, r3, #1
   18618:	str	r3, [r6, #384]	; 0x180
   1861c:	cmp	r5, #0
   18620:	beq	18630 <sprintf@plt+0x7058>
   18624:	mov	r4, r5
   18628:	ldr	r5, [r5, #8]
   1862c:	b	185c8 <sprintf@plt+0x6ff0>
   18630:	movw	r3, #368	; 0x170
   18634:	movt	r3, #3
   18638:	mov	r1, sp
   1863c:	ldr	r0, [r3]
   18640:	bl	113e0 <rb_dictionary_foreach_start@plt>
   18644:	movw	r4, #368	; 0x170
   18648:	movt	r4, #3
   1864c:	mov	r1, sp
   18650:	ldr	r0, [r4]
   18654:	bl	112fc <rb_dictionary_foreach_cur@plt>
   18658:	cmp	r0, #0
   1865c:	beq	18674 <sprintf@plt+0x709c>
   18660:	bl	17664 <sprintf@plt+0x608c>
   18664:	mov	r1, sp
   18668:	ldr	r0, [r4]
   1866c:	bl	11398 <rb_dictionary_foreach_next@plt>
   18670:	b	1864c <sprintf@plt+0x7074>
   18674:	movw	r3, #65508	; 0xffe4
   18678:	movt	r3, #2
   1867c:	mov	r2, #0
   18680:	strb	r2, [r3, #388]	; 0x184
   18684:	add	sp, sp, #12
   18688:	ldrd	r4, [sp]
   1868c:	ldrd	r6, [sp, #8]
   18690:	add	sp, sp, #16
   18694:	pop	{pc}		; (ldr pc, [sp], #4)
   18698:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1869c:	strd	r6, [sp, #8]
   186a0:	str	r8, [sp, #16]
   186a4:	str	lr, [sp, #20]
   186a8:	mov	r5, r2
   186ac:	mov	r2, #10
   186b0:	mov	r1, #0
   186b4:	ldr	r0, [r5, #4]
   186b8:	bl	11440 <strtol@plt>
   186bc:	mov	r6, r0
   186c0:	mov	r1, #40	; 0x28
   186c4:	mov	r0, #1
   186c8:	bl	11314 <calloc@plt>
   186cc:	subs	r4, r0, #0
   186d0:	beq	18774 <sprintf@plt+0x719c>
   186d4:	sub	r2, r6, #1
   186d8:	movw	r3, #65534	; 0xfffe
   186dc:	cmp	r2, r3
   186e0:	bhi	18778 <sprintf@plt+0x71a0>
   186e4:	strh	r6, [r4, #20]
   186e8:	ldr	r7, [r5]
   186ec:	movw	r1, #40860	; 0x9f9c
   186f0:	movt	r1, #1
   186f4:	mov	r0, r7
   186f8:	bl	11308 <strcasecmp@plt>
   186fc:	cmp	r0, #0
   18700:	beq	18880 <sprintf@plt+0x72a8>
   18704:	movw	r1, #40868	; 0x9fa4
   18708:	movt	r1, #1
   1870c:	mov	r0, r7
   18710:	bl	11308 <strcasecmp@plt>
   18714:	cmp	r0, #0
   18718:	beq	188b8 <sprintf@plt+0x72e0>
   1871c:	movw	r1, #40876	; 0x9fac
   18720:	movt	r1, #1
   18724:	mov	r0, r7
   18728:	bl	11308 <strcasecmp@plt>
   1872c:	cmp	r0, #0
   18730:	beq	187f0 <sprintf@plt+0x7218>
   18734:	movw	r1, #40888	; 0x9fb8
   18738:	movt	r1, #1
   1873c:	mov	r0, r7
   18740:	bl	11308 <strcasecmp@plt>
   18744:	cmp	r0, #0
   18748:	beq	18848 <sprintf@plt+0x7270>
   1874c:	mov	r3, #0
   18750:	str	r3, [r4, #16]
   18754:	uxth	r3, r6
   18758:	mov	r2, r7
   1875c:	movw	r1, #40984	; 0xa018
   18760:	movt	r1, #1
   18764:	mov	r0, #67	; 0x43
   18768:	bl	122a0 <sprintf@plt+0xcc8>
   1876c:	mov	r0, #3
   18770:	bl	115c0 <exit@plt>
   18774:	bl	114ac <rb_outofmemory@plt>
   18778:	ldr	r3, [r5, #4]
   1877c:	ldr	r2, [r5]
   18780:	movw	r1, #40820	; 0x9f74
   18784:	movt	r1, #1
   18788:	mov	r0, #67	; 0x43
   1878c:	bl	122a0 <sprintf@plt+0xcc8>
   18790:	mov	r0, #3
   18794:	bl	115c0 <exit@plt>
   18798:	ldr	r2, [r2, #8]
   1879c:	cmp	r2, #0
   187a0:	beq	188f0 <sprintf@plt+0x7318>
   187a4:	ldr	r1, [r2]
   187a8:	ldr	r0, [r1, #16]
   187ac:	cmp	ip, r0
   187b0:	bne	18798 <sprintf@plt+0x71c0>
   187b4:	ldrh	r1, [r1, #20]
   187b8:	cmp	r1, r3
   187bc:	bne	18798 <sprintf@plt+0x71c0>
   187c0:	ldr	r2, [r5]
   187c4:	movw	r1, #40904	; 0x9fc8
   187c8:	movt	r1, #1
   187cc:	mov	r0, #67	; 0x43
   187d0:	bl	122a0 <sprintf@plt+0xcc8>
   187d4:	mov	r0, r4
   187d8:	bl	113a4 <free@plt>
   187dc:	ldrd	r4, [sp]
   187e0:	ldrd	r6, [sp, #8]
   187e4:	ldr	r8, [sp, #16]
   187e8:	add	sp, sp, #20
   187ec:	pop	{pc}		; (ldr pc, [sp], #4)
   187f0:	mov	r3, #3
   187f4:	str	r3, [r4, #16]
   187f8:	uxth	r3, r6
   187fc:	movw	r2, #40948	; 0x9ff4
   18800:	movt	r2, #1
   18804:	mov	r1, #16
   18808:	mov	r0, r4
   1880c:	bl	1156c <snprintf@plt>
   18810:	mov	r3, #0
   18814:	strb	r3, [r4, #22]
   18818:	movw	r3, #30720	; 0x7800
   1881c:	movt	r3, #1
   18820:	str	r3, [r4, #24]
   18824:	ldr	ip, [r4, #16]
   18828:	ldrh	r3, [r4, #20]
   1882c:	movw	r2, #65508	; 0xffe4
   18830:	movt	r2, #2
   18834:	ldr	lr, [r2, #376]	; 0x178
   18838:	cmp	lr, #0
   1883c:	beq	18924 <sprintf@plt+0x734c>
   18840:	mov	r2, lr
   18844:	b	187a4 <sprintf@plt+0x71cc>
   18848:	mov	r3, #4
   1884c:	str	r3, [r4, #16]
   18850:	uxth	r3, r6
   18854:	movw	r2, #40964	; 0xa004
   18858:	movt	r2, #1
   1885c:	mov	r1, #16
   18860:	mov	r0, r4
   18864:	bl	1156c <snprintf@plt>
   18868:	movw	r3, #30720	; 0x7800
   1886c:	movt	r3, #1
   18870:	str	r3, [r4, #24]
   18874:	mov	r3, #1
   18878:	strb	r3, [r4, #22]
   1887c:	b	18824 <sprintf@plt+0x724c>
   18880:	mov	r3, #1
   18884:	str	r3, [r4, #16]
   18888:	uxth	r3, r6
   1888c:	movw	r2, #41032	; 0xa048
   18890:	movt	r2, #1
   18894:	mov	r1, #16
   18898:	mov	r0, r4
   1889c:	bl	1156c <snprintf@plt>
   188a0:	mov	r3, #0
   188a4:	strb	r3, [r4, #22]
   188a8:	movw	r3, #31104	; 0x7980
   188ac:	movt	r3, #1
   188b0:	str	r3, [r4, #24]
   188b4:	b	18824 <sprintf@plt+0x724c>
   188b8:	mov	r3, #2
   188bc:	str	r3, [r4, #16]
   188c0:	uxth	r3, r6
   188c4:	movw	r2, #41044	; 0xa054
   188c8:	movt	r2, #1
   188cc:	mov	r1, #16
   188d0:	mov	r0, r4
   188d4:	bl	1156c <snprintf@plt>
   188d8:	mov	r3, #0
   188dc:	strb	r3, [r4, #22]
   188e0:	movw	r3, #30872	; 0x7898
   188e4:	movt	r3, #1
   188e8:	str	r3, [r4, #24]
   188ec:	b	18824 <sprintf@plt+0x724c>
   188f0:	add	r2, r4, #28
   188f4:	str	r4, [r4, #28]
   188f8:	mov	r3, #0
   188fc:	str	r3, [r4, #32]
   18900:	str	lr, [r4, #36]	; 0x24
   18904:	str	r2, [lr, #4]
   18908:	movw	r3, #65508	; 0xffe4
   1890c:	movt	r3, #2
   18910:	str	r2, [r3, #376]	; 0x178
   18914:	ldr	r2, [r3, #384]	; 0x180
   18918:	add	r2, r2, #1
   1891c:	str	r2, [r3, #384]	; 0x180
   18920:	b	187dc <sprintf@plt+0x7204>
   18924:	add	r2, r4, #28
   18928:	str	r4, [r4, #28]
   1892c:	mov	r3, #0
   18930:	str	r3, [r4, #32]
   18934:	str	lr, [r4, #36]	; 0x24
   18938:	movw	r3, #65508	; 0xffe4
   1893c:	movt	r3, #2
   18940:	ldr	r3, [r3, #380]	; 0x17c
   18944:	cmp	r3, #0
   18948:	bne	18908 <sprintf@plt+0x7330>
   1894c:	movw	r3, #65508	; 0xffe4
   18950:	movt	r3, #2
   18954:	str	r2, [r3, #380]	; 0x17c
   18958:	b	18908 <sprintf@plt+0x7330>
   1895c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18960:	strd	r6, [sp, #8]
   18964:	str	r8, [sp, #16]
   18968:	str	lr, [sp, #20]
   1896c:	mov	r6, r0
   18970:	movw	r3, #65508	; 0xffe4
   18974:	movt	r3, #2
   18978:	ldrb	r3, [r3, #388]	; 0x184
   1897c:	cmp	r3, #0
   18980:	beq	18998 <sprintf@plt+0x73c0>
   18984:	movw	r3, #65508	; 0xffe4
   18988:	movt	r3, #2
   1898c:	ldr	r3, [r3, #384]	; 0x180
   18990:	cmp	r3, #0
   18994:	bne	189c4 <sprintf@plt+0x73ec>
   18998:	movw	r3, #48800	; 0xbea0
   1899c:	movt	r3, #2
   189a0:	ldr	r1, [r3, #12]
   189a4:	mov	r0, r6
   189a8:	bl	12d0c <sprintf@plt+0x1734>
   189ac:	mov	r0, #1
   189b0:	ldrd	r4, [sp]
   189b4:	ldrd	r6, [sp, #8]
   189b8:	ldr	r8, [sp, #16]
   189bc:	add	sp, sp, #20
   189c0:	pop	{pc}		; (ldr pc, [sp], #4)
   189c4:	ldr	r3, [r0, #460]	; 0x1cc
   189c8:	add	r3, r3, #1
   189cc:	str	r3, [r0, #460]	; 0x1cc
   189d0:	movw	r3, #48800	; 0xbea0
   189d4:	movt	r3, #2
   189d8:	ldr	r4, [r3, #12]
   189dc:	mov	r1, #16
   189e0:	mov	r0, #1
   189e4:	bl	11314 <calloc@plt>
   189e8:	cmp	r0, #0
   189ec:	beq	18a78 <sprintf@plt+0x74a0>
   189f0:	ldr	r3, [r6, #464]	; 0x1d0
   189f4:	add	r3, r3, r4, lsl #4
   189f8:	str	r0, [r3, #8]
   189fc:	movw	r3, #372	; 0x174
   18a00:	movt	r3, #3
   18a04:	ldr	r4, [r3]
   18a08:	cmp	r4, #0
   18a0c:	beq	18a6c <sprintf@plt+0x7494>
   18a10:	mov	r5, r4
   18a14:	movw	r8, #39696	; 0x9b10
   18a18:	movt	r8, #1
   18a1c:	ldr	r7, [r5]
   18a20:	mov	r1, r8
   18a24:	ldr	r0, [r7, #16]
   18a28:	bl	11308 <strcasecmp@plt>
   18a2c:	cmp	r0, #0
   18a30:	beq	18a98 <sprintf@plt+0x74c0>
   18a34:	ldr	r5, [r5, #8]
   18a38:	cmp	r5, #0
   18a3c:	bne	18a1c <sprintf@plt+0x7444>
   18a40:	movw	r7, #39704	; 0x9b18
   18a44:	movt	r7, #1
   18a48:	ldr	r5, [r4]
   18a4c:	mov	r1, r7
   18a50:	ldr	r0, [r5, #16]
   18a54:	bl	11308 <strcasecmp@plt>
   18a58:	cmp	r0, #0
   18a5c:	beq	18a7c <sprintf@plt+0x74a4>
   18a60:	ldr	r4, [r4, #8]
   18a64:	cmp	r4, #0
   18a68:	bne	18a48 <sprintf@plt+0x7470>
   18a6c:	mov	r0, r6
   18a70:	bl	184f8 <sprintf@plt+0x6f20>
   18a74:	b	189ac <sprintf@plt+0x73d4>
   18a78:	bl	114ac <rb_outofmemory@plt>
   18a7c:	ldr	r2, [r5, #12]
   18a80:	ldr	r3, [r6, #464]	; 0x1d0
   18a84:	add	r3, r3, r2, lsl #4
   18a88:	ldr	r3, [r3, #12]
   18a8c:	cmp	r3, #2
   18a90:	beq	18a6c <sprintf@plt+0x7494>
   18a94:	b	189ac <sprintf@plt+0x73d4>
   18a98:	ldr	r2, [r7, #12]
   18a9c:	ldr	r3, [r6, #464]	; 0x1d0
   18aa0:	add	r3, r3, r2, lsl #4
   18aa4:	ldr	r3, [r3, #12]
   18aa8:	cmp	r3, #2
   18aac:	beq	18a40 <sprintf@plt+0x7468>
   18ab0:	b	189ac <sprintf@plt+0x73d4>
   18ab4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18ab8:	strd	r6, [sp, #8]
   18abc:	strd	r8, [sp, #16]
   18ac0:	str	sl, [sp, #24]
   18ac4:	str	lr, [sp, #28]
   18ac8:	ldr	r6, [r0, #464]	; 0x1d0
   18acc:	movw	r3, #48800	; 0xbea0
   18ad0:	movt	r3, #2
   18ad4:	ldr	r3, [r3, #12]
   18ad8:	add	r3, r6, r3, lsl #4
   18adc:	ldr	r3, [r3, #8]
   18ae0:	cmp	r3, #0
   18ae4:	beq	18af4 <sprintf@plt+0x751c>
   18ae8:	ldrb	r3, [r3, #12]
   18aec:	cmp	r3, #0
   18af0:	beq	18b0c <sprintf@plt+0x7534>
   18af4:	ldrd	r4, [sp]
   18af8:	ldrd	r6, [sp, #8]
   18afc:	ldrd	r8, [sp, #16]
   18b00:	ldr	sl, [sp, #24]
   18b04:	add	sp, sp, #28
   18b08:	pop	{pc}		; (ldr pc, [sp], #4)
   18b0c:	mov	r7, r0
   18b10:	movw	r3, #372	; 0x174
   18b14:	movt	r3, #3
   18b18:	ldr	r4, [r3]
   18b1c:	cmp	r4, #0
   18b20:	beq	18b80 <sprintf@plt+0x75a8>
   18b24:	mov	r5, r4
   18b28:	movw	r9, #39696	; 0x9b10
   18b2c:	movt	r9, #1
   18b30:	ldr	r8, [r5]
   18b34:	mov	r1, r9
   18b38:	ldr	r0, [r8, #16]
   18b3c:	bl	11308 <strcasecmp@plt>
   18b40:	cmp	r0, #0
   18b44:	beq	18ba4 <sprintf@plt+0x75cc>
   18b48:	ldr	r5, [r5, #8]
   18b4c:	cmp	r5, #0
   18b50:	bne	18b30 <sprintf@plt+0x7558>
   18b54:	movw	r8, #39704	; 0x9b18
   18b58:	movt	r8, #1
   18b5c:	ldr	r5, [r4]
   18b60:	mov	r1, r8
   18b64:	ldr	r0, [r5, #16]
   18b68:	bl	11308 <strcasecmp@plt>
   18b6c:	cmp	r0, #0
   18b70:	beq	18b8c <sprintf@plt+0x75b4>
   18b74:	ldr	r4, [r4, #8]
   18b78:	cmp	r4, #0
   18b7c:	bne	18b5c <sprintf@plt+0x7584>
   18b80:	mov	r0, r7
   18b84:	bl	184f8 <sprintf@plt+0x6f20>
   18b88:	b	18af4 <sprintf@plt+0x751c>
   18b8c:	ldr	r3, [r5, #12]
   18b90:	add	r6, r6, r3, lsl #4
   18b94:	ldr	r3, [r6, #12]
   18b98:	cmp	r3, #2
   18b9c:	beq	18b80 <sprintf@plt+0x75a8>
   18ba0:	b	18af4 <sprintf@plt+0x751c>
   18ba4:	ldr	r3, [r8, #12]
   18ba8:	add	r3, r6, r3, lsl #4
   18bac:	ldr	r3, [r3, #12]
   18bb0:	cmp	r3, #2
   18bb4:	beq	18b54 <sprintf@plt+0x757c>
   18bb8:	b	18af4 <sprintf@plt+0x751c>
   18bbc:	strd	r4, [sp, #-16]!
   18bc0:	str	r6, [sp, #8]
   18bc4:	str	lr, [sp, #12]
   18bc8:	mov	r4, r2
   18bcc:	ldr	r2, [r2]
   18bd0:	movw	r3, #48800	; 0xbea0
   18bd4:	movt	r3, #2
   18bd8:	ldr	r0, [r3, #12]
   18bdc:	ldr	r3, [r2, #464]	; 0x1d0
   18be0:	add	r3, r3, r0, lsl #4
   18be4:	ldr	r5, [r3, #8]
   18be8:	cmp	r1, #0
   18bec:	bne	18c1c <sprintf@plt+0x7644>
   18bf0:	movw	r3, #65508	; 0xffe4
   18bf4:	movt	r3, #2
   18bf8:	ldrb	r3, [r3, #388]	; 0x184
   18bfc:	cmp	r3, #0
   18c00:	beq	18c1c <sprintf@plt+0x7644>
   18c04:	ldr	r1, [r4, #8]
   18c08:	ldrh	r3, [r2, #248]	; 0xf8
   18c0c:	cmp	r3, #2
   18c10:	beq	18c8c <sprintf@plt+0x76b4>
   18c14:	cmp	r3, #10
   18c18:	beq	18cb0 <sprintf@plt+0x76d8>
   18c1c:	ldr	r0, [r4, #4]
   18c20:	bl	11434 <rb_close@plt>
   18c24:	cmp	r5, #0
   18c28:	beq	18cd4 <sprintf@plt+0x76fc>
   18c2c:	ldr	r3, [r4, #24]
   18c30:	cmp	r3, #0
   18c34:	ldrne	r2, [r4, #20]
   18c38:	strne	r2, [r3, #4]
   18c3c:	ldreq	r3, [r4, #20]
   18c40:	streq	r3, [r5, #4]
   18c44:	ldr	r3, [r4, #20]
   18c48:	cmp	r3, #0
   18c4c:	ldrne	r2, [r4, #24]
   18c50:	strne	r2, [r3, #8]
   18c54:	ldreq	r3, [r4, #24]
   18c58:	streq	r3, [r5]
   18c5c:	mov	r3, #0
   18c60:	str	r3, [r4, #20]
   18c64:	str	r3, [r4, #24]
   18c68:	ldr	r3, [r5, #8]
   18c6c:	sub	r3, r3, #1
   18c70:	str	r3, [r5, #8]
   18c74:	mov	r0, r4
   18c78:	bl	113a4 <free@plt>
   18c7c:	ldrd	r4, [sp]
   18c80:	ldr	r6, [sp, #8]
   18c84:	add	sp, sp, #12
   18c88:	pop	{pc}		; (ldr pc, [sp], #4)
   18c8c:	movw	r3, #65508	; 0xffe4
   18c90:	movt	r3, #2
   18c94:	ldr	r3, [r3, #184]	; 0xb8
   18c98:	cmp	r3, #0
   18c9c:	beq	18c1c <sprintf@plt+0x7644>
   18ca0:	ldr	r3, [r1, #24]
   18ca4:	mov	r0, r4
   18ca8:	blx	r3
   18cac:	b	18c1c <sprintf@plt+0x7644>
   18cb0:	ldrb	r3, [r1, #23]
   18cb4:	cmp	r3, #0
   18cb8:	beq	18c1c <sprintf@plt+0x7644>
   18cbc:	movw	r3, #65508	; 0xffe4
   18cc0:	movt	r3, #2
   18cc4:	ldr	r3, [r3, #372]	; 0x174
   18cc8:	cmp	r3, #0
   18ccc:	bne	18ca0 <sprintf@plt+0x76c8>
   18cd0:	b	18c1c <sprintf@plt+0x7644>
   18cd4:	ldr	r3, [pc, #20]	; 18cf0 <sprintf@plt+0x7718>
   18cd8:	mov	r2, #236	; 0xec
   18cdc:	movw	r1, #38024	; 0x9488
   18ce0:	movt	r1, #1
   18ce4:	movw	r0, #39472	; 0x9a30
   18ce8:	movt	r0, #1
   18cec:	bl	11374 <__assert_fail@plt>
   18cf0:	andeq	r9, r1, ip, lsl #27
   18cf4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18cf8:	strd	r6, [sp, #8]
   18cfc:	str	r8, [sp, #16]
   18d00:	str	lr, [sp, #20]
   18d04:	sub	sp, sp, #8
   18d08:	mov	r6, r2
   18d0c:	ldr	r4, [r2]
   18d10:	movw	r1, #40860	; 0x9f9c
   18d14:	movt	r1, #1
   18d18:	mov	r0, r4
   18d1c:	bl	11308 <strcasecmp@plt>
   18d20:	cmp	r0, #0
   18d24:	beq	18fc4 <sprintf@plt+0x79ec>
   18d28:	movw	r1, #40868	; 0x9fa4
   18d2c:	movt	r1, #1
   18d30:	mov	r0, r4
   18d34:	bl	11308 <strcasecmp@plt>
   18d38:	cmp	r0, #0
   18d3c:	beq	19020 <sprintf@plt+0x7a48>
   18d40:	movw	r1, #40876	; 0x9fac
   18d44:	movt	r1, #1
   18d48:	mov	r0, r4
   18d4c:	bl	11308 <strcasecmp@plt>
   18d50:	cmp	r0, #0
   18d54:	beq	19028 <sprintf@plt+0x7a50>
   18d58:	movw	r1, #40888	; 0x9fb8
   18d5c:	movt	r1, #1
   18d60:	mov	r0, r4
   18d64:	bl	11308 <strcasecmp@plt>
   18d68:	cmp	r0, #0
   18d6c:	beq	19030 <sprintf@plt+0x7a58>
   18d70:	mov	r2, #10
   18d74:	mov	r1, #0
   18d78:	ldr	r0, [r6, #4]
   18d7c:	bl	11440 <strtol@plt>
   18d80:	sub	r2, r0, #1
   18d84:	movw	r3, #65534	; 0xfffe
   18d88:	cmp	r2, r3
   18d8c:	bls	18db0 <sprintf@plt+0x77d8>
   18d90:	ldr	r3, [r6, #4]
   18d94:	ldr	r2, [r6]
   18d98:	movw	r1, #41056	; 0xa060
   18d9c:	movt	r1, #1
   18da0:	mov	r0, #67	; 0x43
   18da4:	bl	122a0 <sprintf@plt+0xcc8>
   18da8:	mov	r0, #3
   18dac:	bl	115c0 <exit@plt>
   18db0:	mov	r3, r0
   18db4:	ldr	r2, [r6]
   18db8:	movw	r1, #41104	; 0xa090
   18dbc:	movt	r1, #1
   18dc0:	mov	r0, #67	; 0x43
   18dc4:	bl	122a0 <sprintf@plt+0xcc8>
   18dc8:	mov	r0, #3
   18dcc:	bl	115c0 <exit@plt>
   18dd0:	ldr	r2, [r2, #8]
   18dd4:	cmp	r2, #0
   18dd8:	beq	19000 <sprintf@plt+0x7a28>
   18ddc:	ldr	r4, [r2]
   18de0:	ldr	r1, [r4, #16]
   18de4:	cmp	r1, r5
   18de8:	bne	18dd0 <sprintf@plt+0x77f8>
   18dec:	ldrh	r1, [r4, #20]
   18df0:	cmp	r1, ip
   18df4:	bne	18dd0 <sprintf@plt+0x77f8>
   18df8:	movw	r3, #368	; 0x170
   18dfc:	movt	r3, #3
   18e00:	mov	r1, sp
   18e04:	ldr	r0, [r3]
   18e08:	bl	113e0 <rb_dictionary_foreach_start@plt>
   18e0c:	movw	r7, #368	; 0x170
   18e10:	movt	r7, #3
   18e14:	movw	r8, #48800	; 0xbea0
   18e18:	movt	r8, #2
   18e1c:	b	18ed4 <sprintf@plt+0x78fc>
   18e20:	mov	r0, r5
   18e24:	bl	17664 <sprintf@plt+0x608c>
   18e28:	b	18eb4 <sprintf@plt+0x78dc>
   18e2c:	ldr	r3, [r3, #8]
   18e30:	cmp	r3, #0
   18e34:	beq	18eb4 <sprintf@plt+0x78dc>
   18e38:	ldr	r0, [r3]
   18e3c:	ldr	r2, [r0, #8]
   18e40:	ldrh	r1, [r2, #20]
   18e44:	cmp	r1, ip
   18e48:	bne	18e2c <sprintf@plt+0x7854>
   18e4c:	ldr	r1, [r2, #16]
   18e50:	ldr	r2, [r4, #16]
   18e54:	cmp	r1, r2
   18e58:	bne	18e2c <sprintf@plt+0x7854>
   18e5c:	ldr	r3, [r0, #24]
   18e60:	cmp	r3, #0
   18e64:	ldrne	r2, [r0, #20]
   18e68:	strne	r2, [r3, #4]
   18e6c:	ldreq	r3, [r0, #20]
   18e70:	streq	r3, [r6, #4]
   18e74:	ldr	r3, [r0, #20]
   18e78:	cmp	r3, #0
   18e7c:	ldrne	r2, [r0, #24]
   18e80:	strne	r2, [r3, #8]
   18e84:	ldreq	r3, [r0, #24]
   18e88:	streq	r3, [r6]
   18e8c:	mov	r3, #0
   18e90:	str	r3, [r0, #20]
   18e94:	str	r3, [r0, #24]
   18e98:	ldr	r3, [r6, #8]
   18e9c:	sub	r3, r3, #1
   18ea0:	str	r3, [r6, #8]
   18ea4:	bl	113a4 <free@plt>
   18ea8:	ldr	r3, [r6, #8]
   18eac:	cmp	r3, #0
   18eb0:	beq	18e20 <sprintf@plt+0x7848>
   18eb4:	ldr	r3, [r5, #460]	; 0x1cc
   18eb8:	sub	r3, r3, #1
   18ebc:	str	r3, [r5, #460]	; 0x1cc
   18ec0:	cmp	r3, #0
   18ec4:	beq	18f20 <sprintf@plt+0x7948>
   18ec8:	mov	r1, sp
   18ecc:	ldr	r0, [r7]
   18ed0:	bl	11398 <rb_dictionary_foreach_next@plt>
   18ed4:	mov	r1, sp
   18ed8:	ldr	r0, [r7]
   18edc:	bl	112fc <rb_dictionary_foreach_cur@plt>
   18ee0:	subs	r5, r0, #0
   18ee4:	beq	18f2c <sprintf@plt+0x7954>
   18ee8:	ldr	r2, [r8, #12]
   18eec:	ldr	r3, [r5, #464]	; 0x1d0
   18ef0:	add	r3, r3, r2, lsl #4
   18ef4:	ldr	r6, [r3, #8]
   18ef8:	cmp	r6, #0
   18efc:	beq	18ec8 <sprintf@plt+0x78f0>
   18f00:	ldr	r3, [r5, #460]	; 0x1cc
   18f04:	add	r3, r3, #1
   18f08:	str	r3, [r5, #460]	; 0x1cc
   18f0c:	ldr	r3, [r6]
   18f10:	cmp	r3, #0
   18f14:	beq	18eb4 <sprintf@plt+0x78dc>
   18f18:	ldrh	ip, [r4, #20]
   18f1c:	b	18e38 <sprintf@plt+0x7860>
   18f20:	mov	r0, r5
   18f24:	bl	12814 <sprintf@plt+0x123c>
   18f28:	b	18ec8 <sprintf@plt+0x78f0>
   18f2c:	ldr	r3, [r4, #36]	; 0x24
   18f30:	cmp	r3, #0
   18f34:	beq	18f9c <sprintf@plt+0x79c4>
   18f38:	ldr	r2, [r4, #32]
   18f3c:	str	r2, [r3, #4]
   18f40:	ldr	r3, [r4, #32]
   18f44:	cmp	r3, #0
   18f48:	beq	18fb0 <sprintf@plt+0x79d8>
   18f4c:	ldr	r2, [r4, #36]	; 0x24
   18f50:	str	r2, [r3, #8]
   18f54:	movw	r5, #65508	; 0xffe4
   18f58:	movt	r5, #2
   18f5c:	ldr	r3, [r5, #384]	; 0x180
   18f60:	sub	r3, r3, #1
   18f64:	str	r3, [r5, #384]	; 0x180
   18f68:	mov	r0, r4
   18f6c:	bl	113a4 <free@plt>
   18f70:	ldr	r3, [r5, #384]	; 0x180
   18f74:	cmp	r3, #0
   18f78:	bne	18f84 <sprintf@plt+0x79ac>
   18f7c:	mov	r2, #0
   18f80:	strb	r2, [r5, #388]	; 0x184
   18f84:	add	sp, sp, #8
   18f88:	ldrd	r4, [sp]
   18f8c:	ldrd	r6, [sp, #8]
   18f90:	ldr	r8, [sp, #16]
   18f94:	add	sp, sp, #20
   18f98:	pop	{pc}		; (ldr pc, [sp], #4)
   18f9c:	movw	r3, #65508	; 0xffe4
   18fa0:	movt	r3, #2
   18fa4:	ldr	r2, [r4, #32]
   18fa8:	str	r2, [r3, #380]	; 0x17c
   18fac:	b	18f40 <sprintf@plt+0x7968>
   18fb0:	movw	r3, #65508	; 0xffe4
   18fb4:	movt	r3, #2
   18fb8:	ldr	r2, [r4, #36]	; 0x24
   18fbc:	str	r2, [r3, #376]	; 0x178
   18fc0:	b	18f54 <sprintf@plt+0x797c>
   18fc4:	mov	r5, #1
   18fc8:	mov	r2, #10
   18fcc:	mov	r1, #0
   18fd0:	ldr	r0, [r6, #4]
   18fd4:	bl	11440 <strtol@plt>
   18fd8:	sub	r2, r0, #1
   18fdc:	movw	r3, #65534	; 0xfffe
   18fe0:	cmp	r2, r3
   18fe4:	bhi	18d90 <sprintf@plt+0x77b8>
   18fe8:	uxth	ip, r0
   18fec:	movw	r2, #65508	; 0xffe4
   18ff0:	movt	r2, #2
   18ff4:	ldr	r2, [r2, #376]	; 0x178
   18ff8:	cmp	r2, #0
   18ffc:	bne	18ddc <sprintf@plt+0x7804>
   19000:	mov	r3, r0
   19004:	ldr	r2, [r6]
   19008:	movw	r1, #41160	; 0xa0c8
   1900c:	movt	r1, #1
   19010:	mov	r0, #67	; 0x43
   19014:	bl	122a0 <sprintf@plt+0xcc8>
   19018:	mov	r0, #3
   1901c:	bl	115c0 <exit@plt>
   19020:	mov	r5, #2
   19024:	b	18fc8 <sprintf@plt+0x79f0>
   19028:	mov	r5, #3
   1902c:	b	18fc8 <sprintf@plt+0x79f0>
   19030:	mov	r5, #4
   19034:	b	18fc8 <sprintf@plt+0x79f0>
   19038:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1903c:	mov	r7, r0
   19040:	ldr	r6, [pc, #72]	; 19090 <sprintf@plt+0x7ab8>
   19044:	ldr	r5, [pc, #72]	; 19094 <sprintf@plt+0x7abc>
   19048:	add	r6, pc, r6
   1904c:	add	r5, pc, r5
   19050:	sub	r6, r6, r5
   19054:	mov	r8, r1
   19058:	mov	r9, r2
   1905c:	bl	111e0 <sigemptyset@plt-0x20>
   19060:	asrs	r6, r6, #2
   19064:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19068:	mov	r4, #0
   1906c:	add	r4, r4, #1
   19070:	ldr	r3, [r5], #4
   19074:	mov	r2, r9
   19078:	mov	r1, r8
   1907c:	mov	r0, r7
   19080:	blx	r3
   19084:	cmp	r6, r4
   19088:	bne	1906c <sprintf@plt+0x7a94>
   1908c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19090:	muleq	r1, ip, lr
   19094:	muleq	r1, r4, lr
   19098:	bx	lr

Disassembly of section .fini:

0001909c <.fini>:
   1909c:	push	{r3, lr}
   190a0:	pop	{r3, pc}
