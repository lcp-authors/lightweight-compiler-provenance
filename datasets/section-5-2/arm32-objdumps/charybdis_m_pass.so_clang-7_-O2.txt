
../repos/charybdis/modules/.libs/m_pass.so:     file format elf32-littlearm


Disassembly of section .init:

000005a4 <_init>:
 5a4:	push	{r3, lr}
 5a8:	bl	63c <call_weak_fn>
 5ac:	pop	{r3, pc}

Disassembly of section .plt:

000005b0 <.plt>:
 5b0:	push	{lr}		; (str lr, [sp, #-4]!)
 5b4:	ldr	lr, [pc, #4]	; 5c0 <.plt+0x10>
 5b8:	add	lr, pc, lr
 5bc:	ldr	pc, [lr, #8]!
 5c0:	.word	0x00010a40

000005c4 <__cxa_finalize@plt>:
 5c4:	add	ip, pc, #0, 12
 5c8:	add	ip, ip, #16, 20	; 0x10000
 5cc:	ldr	pc, [ip, #2624]!	; 0xa40

000005d0 <strtol@plt>:
 5d0:	add	ip, pc, #0, 12
 5d4:	add	ip, ip, #16, 20	; 0x10000
 5d8:	ldr	pc, [ip, #2616]!	; 0xa38

000005dc <rb_outofmemory@plt>:
 5dc:	add	ip, pc, #0, 12
 5e0:	add	ip, ip, #16, 20	; 0x10000
 5e4:	ldr	pc, [ip, #2608]!	; 0xa30

000005e8 <strcpy@plt>:
 5e8:	add	ip, pc, #0, 12
 5ec:	add	ip, ip, #16, 20	; 0x10000
 5f0:	ldr	pc, [ip, #2600]!	; 0xa28

000005f4 <malloc@plt>:
 5f4:	add	ip, pc, #0, 12
 5f8:	add	ip, ip, #16, 20	; 0x10000
 5fc:	ldr	pc, [ip, #2592]!	; 0xa20

00000600 <__gmon_start__@plt>:
 600:	add	ip, pc, #0, 12
 604:	add	ip, ip, #16, 20	; 0x10000
 608:	ldr	pc, [ip, #2584]!	; 0xa18

0000060c <strlen@plt>:
 60c:	add	ip, pc, #0, 12
 610:	add	ip, ip, #16, 20	; 0x10000
 614:	ldr	pc, [ip, #2576]!	; 0xa10

00000618 <strchr@plt>:
 618:	add	ip, pc, #0, 12
 61c:	add	ip, ip, #16, 20	; 0x10000
 620:	ldr	pc, [ip, #2568]!	; 0xa08

00000624 <rb_strlcpy@plt>:
 624:	add	ip, pc, #0, 12
 628:	add	ip, ip, #16, 20	; 0x10000
 62c:	ldr	pc, [ip, #2560]!	; 0xa00

00000630 <irccmp@plt>:
 630:	add	ip, pc, #0, 12
 634:	add	ip, ip, #16, 20	; 0x10000
 638:	ldr	pc, [ip, #2552]!	; 0x9f8

Disassembly of section .text:

0000063c <call_weak_fn>:
 63c:	ldr	r3, [pc, #20]	; 658 <call_weak_fn+0x1c>
 640:	ldr	r2, [pc, #20]	; 65c <call_weak_fn+0x20>
 644:	add	r3, pc, r3
 648:	ldr	r2, [r3, r2]
 64c:	cmp	r2, #0
 650:	bxeq	lr
 654:	b	600 <__gmon_start__@plt>
 658:	.word	0x000109b4
 65c:	.word	0x00000040

00000660 <deregister_tm_clones>:
 660:	ldr	r0, [pc, #44]	; 694 <deregister_tm_clones+0x34>
 664:	ldr	r3, [pc, #44]	; 698 <deregister_tm_clones+0x38>
 668:	add	r0, pc, r0
 66c:	add	r3, pc, r3
 670:	cmp	r3, r0
 674:	ldr	r3, [pc, #32]	; 69c <deregister_tm_clones+0x3c>
 678:	add	r3, pc, r3
 67c:	bxeq	lr
 680:	ldr	r2, [pc, #24]	; 6a0 <deregister_tm_clones+0x40>
 684:	ldr	r3, [r3, r2]
 688:	cmp	r3, #0
 68c:	bxeq	lr
 690:	bx	r3
 694:	.word	0x00010a54
 698:	.word	0x00010a50
 69c:	.word	0x00010980
 6a0:	.word	0x00000038

000006a4 <register_tm_clones>:
 6a4:	ldr	r0, [pc, #56]	; 6e4 <register_tm_clones+0x40>
 6a8:	ldr	r3, [pc, #56]	; 6e8 <register_tm_clones+0x44>
 6ac:	add	r0, pc, r0
 6b0:	add	r3, pc, r3
 6b4:	sub	r1, r3, r0
 6b8:	ldr	r3, [pc, #44]	; 6ec <register_tm_clones+0x48>
 6bc:	asr	r1, r1, #2
 6c0:	add	r3, pc, r3
 6c4:	add	r1, r1, r1, lsr #31
 6c8:	asrs	r1, r1, #1
 6cc:	bxeq	lr
 6d0:	ldr	r2, [pc, #24]	; 6f0 <register_tm_clones+0x4c>
 6d4:	ldr	r3, [r3, r2]
 6d8:	cmp	r3, #0
 6dc:	bxeq	lr
 6e0:	bx	r3
 6e4:	.word	0x00010a10
 6e8:	.word	0x00010a0c
 6ec:	.word	0x00010938
 6f0:	.word	0x00000048

000006f4 <__do_global_dtors_aux>:
 6f4:	ldr	r3, [pc, #76]	; 748 <__do_global_dtors_aux+0x54>
 6f8:	ldr	r2, [pc, #76]	; 74c <__do_global_dtors_aux+0x58>
 6fc:	add	r3, pc, r3
 700:	add	r2, pc, r2
 704:	ldrb	r3, [r3]
 708:	cmp	r3, #0
 70c:	bxne	lr
 710:	ldr	r3, [pc, #56]	; 750 <__do_global_dtors_aux+0x5c>
 714:	push	{r4, lr}
 718:	ldr	r3, [r2, r3]
 71c:	cmp	r3, #0
 720:	beq	730 <__do_global_dtors_aux+0x3c>
 724:	ldr	r3, [pc, #40]	; 754 <__do_global_dtors_aux+0x60>
 728:	ldr	r0, [pc, r3]
 72c:	bl	5c4 <__cxa_finalize@plt>
 730:	bl	660 <deregister_tm_clones>
 734:	ldr	r3, [pc, #28]	; 758 <__do_global_dtors_aux+0x64>
 738:	mov	r2, #1
 73c:	add	r3, pc, r3
 740:	strb	r2, [r3]
 744:	pop	{r4, pc}
 748:	.word	0x000109c0
 74c:	.word	0x000108f8
 750:	.word	0x00000034
 754:	.word	0x0001091c
 758:	.word	0x00010980

0000075c <frame_dummy>:
 75c:	b	6a4 <register_tm_clones>

00000760 <mr_pass>:
 760:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 764:	add	fp, sp, #24
 768:	sub	sp, sp, #8
 76c:	ldr	r9, [fp, #8]
 770:	mov	r8, r3
 774:	mov	r4, r1
 778:	ldr	r5, [r9, #4]
 77c:	mov	r0, r5
 780:	bl	60c <strlen@plt>
 784:	add	r0, r0, #8
 788:	bic	r0, r0, #7
 78c:	sub	r6, sp, r0
 790:	mov	sp, r6
 794:	mov	r0, r6
 798:	mov	r1, r5
 79c:	bl	5e8 <strcpy@plt>
 7a0:	ldr	r0, [r4, #432]	; 0x1b0
 7a4:	ldr	r1, [r0, #276]	; 0x114
 7a8:	cmp	r1, #0
 7ac:	bne	878 <mr_pass+0x118>
 7b0:	ldr	r0, [r0, #280]	; 0x118
 7b4:	cmp	r0, #0
 7b8:	bne	878 <mr_pass+0x118>
 7bc:	mov	r0, r6
 7c0:	mov	r1, #58	; 0x3a
 7c4:	bl	618 <strchr@plt>
 7c8:	mov	r7, #0
 7cc:	cmp	r0, #0
 7d0:	beq	7e4 <mr_pass+0x84>
 7d4:	mov	r5, r0
 7d8:	mov	r0, #0
 7dc:	strb	r0, [r5], #1
 7e0:	b	7ec <mr_pass+0x8c>
 7e4:	mov	r5, r6
 7e8:	mov	r6, #0
 7ec:	ldrb	r0, [r5]
 7f0:	cmp	r0, #0
 7f4:	beq	818 <mr_pass+0xb8>
 7f8:	mov	r0, #128	; 0x80
 7fc:	bl	5f4 <malloc@plt>
 800:	cmp	r0, #0
 804:	beq	960 <mr_pass+0x200>
 808:	mov	r1, r5
 80c:	mov	r2, #128	; 0x80
 810:	mov	r7, r0
 814:	bl	624 <rb_strlcpy@plt>
 818:	ldr	r0, [r4, #432]	; 0x1b0
 81c:	cmp	r6, #0
 820:	str	r7, [r0, #276]	; 0x114
 824:	ldrbne	r0, [r6]
 828:	cmpne	r0, #0
 82c:	bne	83c <mr_pass+0xdc>
 830:	cmp	r8, #3
 834:	bge	86c <mr_pass+0x10c>
 838:	b	878 <mr_pass+0x118>
 83c:	mov	r0, #128	; 0x80
 840:	bl	5f4 <malloc@plt>
 844:	cmp	r0, #0
 848:	beq	960 <mr_pass+0x200>
 84c:	mov	r1, r6
 850:	mov	r2, #128	; 0x80
 854:	mov	r5, r0
 858:	bl	624 <rb_strlcpy@plt>
 85c:	ldr	r0, [r4, #432]	; 0x1b0
 860:	str	r5, [r0, #280]	; 0x118
 864:	cmp	r8, #3
 868:	blt	878 <mr_pass+0x118>
 86c:	ldr	r0, [r4, #24]
 870:	cmp	r0, #0
 874:	beq	880 <mr_pass+0x120>
 878:	sub	sp, fp, #24
 87c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 880:	ldr	r0, [r4, #436]	; 0x1b4
 884:	cmp	r0, #0
 888:	beq	878 <mr_pass+0x118>
 88c:	ldr	r0, [r9, #8]
 890:	ldr	r1, [pc, #204]	; 964 <mr_pass+0x204>
 894:	add	r1, pc, r1
 898:	bl	630 <irccmp@plt>
 89c:	cmp	r0, #0
 8a0:	bne	8b4 <mr_pass+0x154>
 8a4:	ldr	r0, [r4, #52]	; 0x34
 8a8:	cmp	r0, #0
 8ac:	moveq	r0, #268435456	; 0x10000000
 8b0:	streq	r0, [r4, #52]	; 0x34
 8b4:	cmp	r8, #5
 8b8:	bne	878 <mr_pass+0x118>
 8bc:	ldr	r0, [r9, #12]
 8c0:	mov	r1, #0
 8c4:	mov	r2, #10
 8c8:	bl	5d0 <strtol@plt>
 8cc:	cmp	r0, #6
 8d0:	blt	878 <mr_pass+0x118>
 8d4:	ldr	r1, [r9, #16]
 8d8:	ldrb	r2, [r1]
 8dc:	ldr	r0, [pc, #132]	; 968 <mr_pass+0x208>
 8e0:	ldr	r0, [pc, r0]
 8e4:	ldrb	r2, [r0, r2, lsl #2]
 8e8:	tst	r2, #16
 8ec:	beq	878 <mr_pass+0x118>
 8f0:	ldrb	r2, [r1, #1]
 8f4:	ldr	r3, [r0, r2, lsl #2]
 8f8:	movw	r2, #16
 8fc:	movt	r2, #1
 900:	tst	r3, r2
 904:	beq	878 <mr_pass+0x118>
 908:	ldrb	r3, [r1, #2]
 90c:	ldr	r0, [r0, r3, lsl #2]
 910:	tst	r0, r2
 914:	beq	878 <mr_pass+0x118>
 918:	ldrb	r0, [r1, #3]
 91c:	cmp	r0, #0
 920:	bne	878 <mr_pass+0x118>
 924:	ldr	r0, [r4, #436]	; 0x1b4
 928:	ldrb	r2, [r0, #260]!	; 0x104
 92c:	cmp	r2, #0
 930:	bne	878 <mr_pass+0x118>
 934:	ldr	r2, [pc, #48]	; 96c <mr_pass+0x20c>
 938:	ldr	r2, [pc, r2]
 93c:	ldr	r3, [r4, #432]	; 0x1b0
 940:	ldr	r2, [r2]
 944:	ldr	r7, [r3, #296]	; 0x128
 948:	orr	r2, r7, r2
 94c:	str	r2, [r3, #296]	; 0x128
 950:	mov	r2, #10
 954:	bl	624 <rb_strlcpy@plt>
 958:	sub	sp, fp, #24
 95c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 960:	bl	5dc <rb_outofmemory@plt>
 964:	.word	0x000000e1
 968:	.word	0x0001075c
 96c:	.word	0x000106fc

Disassembly of section .fini:

00000970 <_fini>:
 970:	push	{r3, lr}
 974:	pop	{r3, pc}
