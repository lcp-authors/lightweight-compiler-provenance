
../repos/myhtml/libmyhtml.so.4.0.6:     file format elf32-littlearm


Disassembly of section .init:

0000fba0 <.init>:
    fba0:	push	{r3, lr}
    fba4:	bl	110b4 <mythread_init@plt+0xc>
    fba8:	pop	{r3, pc}

Disassembly of section .plt:

0000fbac <pthread_mutex_unlock@plt-0x14>:
    fbac:	push	{lr}		; (str lr, [sp, #-4]!)
    fbb0:	ldr	lr, [pc, #4]	; fbbc <pthread_mutex_unlock@plt-0x4>
    fbb4:	add	lr, pc, lr
    fbb8:	ldr	pc, [lr, #8]!
    fbbc:	andseq	r6, r0, r4, asr #8

0000fbc0 <pthread_mutex_unlock@plt>:
    fbc0:	add	ip, pc, #1048576	; 0x100000
    fbc4:	add	ip, ip, #24576	; 0x6000
    fbc8:	ldr	pc, [ip, #1092]!	; 0x444

0000fbcc <myhtml_get_nodes_by_attribute_value_recursion@plt>:
    fbcc:	add	ip, pc, #1048576	; 0x100000
    fbd0:	add	ip, ip, #24576	; 0x6000
    fbd4:	ldr	pc, [ip, #1084]!	; 0x43c

0000fbd8 <mycore_realloc@plt>:
    fbd8:	add	ip, pc, #1048576	; 0x100000
    fbdc:	add	ip, ip, #24576	; 0x6000
    fbe0:	ldr	pc, [ip, #1076]!	; 0x434

0000fbe4 <calloc@plt>:
    fbe4:	add	ip, pc, #1048576	; 0x100000
    fbe8:	add	ip, ip, #24576	; 0x6000
    fbec:	ldr	pc, [ip, #1068]!	; 0x42c

0000fbf0 <mycore_strcmp@plt>:
    fbf0:	add	ip, pc, #1048576	; 0x100000
    fbf4:	add	ip, ip, #24576	; 0x6000
    fbf8:	ldr	pc, [ip, #1060]!	; 0x424

0000fbfc <myhtml_tree_node_insert_root@plt>:
    fbfc:	add	ip, pc, #1048576	; 0x100000
    fc00:	add	ip, ip, #24576	; 0x6000
    fc04:	ldr	pc, [ip, #1052]!	; 0x41c

0000fc08 <mythread_queue_list_entry_delete@plt>:
    fc08:	add	ip, pc, #1048576	; 0x100000
    fc0c:	add	ip, ip, #24576	; 0x6000
    fc10:	ldr	pc, [ip, #1044]!	; 0x414

0000fc14 <myencoding_string_append_chunk@plt>:
    fc14:	add	ip, pc, #1048576	; 0x100000
    fc18:	add	ip, ip, #24576	; 0x6000
    fc1c:	ldr	pc, [ip, #1036]!	; 0x40c

0000fc20 <myhtml_token_release_and_check_doctype_attributes@plt>:
    fc20:	add	ip, pc, #1048576	; 0x100000
    fc24:	add	ip, ip, #24576	; 0x6000
    fc28:	ldr	pc, [ip, #1028]!	; 0x404

0000fc2c <raise@plt>:
    fc2c:	add	ip, pc, #1048576	; 0x100000
    fc30:	add	ip, ip, #24576	; 0x6000
    fc34:	ldr	pc, [ip, #1020]!	; 0x3fc

0000fc38 <myhtml_token_doctype_check_xhtml_1_1@plt>:
    fc38:	add	ip, pc, #1048576	; 0x100000
    fc3c:	add	ip, ip, #24576	; 0x6000
    fc40:	ldr	pc, [ip, #1012]!	; 0x3f4

0000fc44 <myencoding_detect_unicode@plt>:
    fc44:	add	ip, pc, #1048576	; 0x100000
    fc48:	add	ip, ip, #24576	; 0x6000
    fc4c:	ldr	pc, [ip, #1004]!	; 0x3ec

0000fc50 <myhtml_tree_element_in_scope_by_node@plt>:
    fc50:	add	ip, pc, #1048576	; 0x100000
    fc54:	add	ip, ip, #24576	; 0x6000
    fc58:	ldr	pc, [ip, #996]!	; 0x3e4

0000fc5c <mythread_nanosleep_clean@plt>:
    fc5c:	add	ip, pc, #1048576	; 0x100000
    fc60:	add	ip, ip, #24576	; 0x6000
    fc64:	ldr	pc, [ip, #988]!	; 0x3dc

0000fc68 <myhtml_tree_node_insert_html_element@plt>:
    fc68:	add	ip, pc, #1048576	; 0x100000
    fc6c:	add	ip, ip, #24576	; 0x6000
    fc70:	ldr	pc, [ip, #980]!	; 0x3d4

0000fc74 <myhtml_tree_token_list_destroy@plt>:
    fc74:	add	ip, pc, #1048576	; 0x100000
    fc78:	add	ip, ip, #24576	; 0x6000
    fc7c:	ldr	pc, [ip, #972]!	; 0x3cc

0000fc80 <mcobject_async_init@plt>:
    fc80:	add	ip, pc, #1048576	; 0x100000
    fc84:	add	ip, ip, #24576	; 0x6000
    fc88:	ldr	pc, [ip, #964]!	; 0x3c4

0000fc8c <myhtml_tree_temp_tag_name_append@plt>:
    fc8c:	add	ip, pc, #1048576	; 0x100000
    fc90:	add	ip, ip, #24576	; 0x6000
    fc94:	ldr	pc, [ip, #956]!	; 0x3bc

0000fc98 <myhtml_tokenizer_fragment_init@plt>:
    fc98:	add	ip, pc, #1048576	; 0x100000
    fc9c:	add	ip, ip, #24576	; 0x6000
    fca0:	ldr	pc, [ip, #948]!	; 0x3b4

0000fca4 <mythread_nanosleep_create@plt>:
    fca4:	add	ip, pc, #1048576	; 0x100000
    fca8:	add	ip, ip, #24576	; 0x6000
    fcac:	ldr	pc, [ip, #940]!	; 0x3ac

0000fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>:
    fcb0:	add	ip, pc, #1048576	; 0x100000
    fcb4:	add	ip, ip, #24576	; 0x6000
    fcb8:	ldr	pc, [ip, #932]!	; 0x3a4

0000fcbc <myhtml_tokenizer_state_init@plt>:
    fcbc:	add	ip, pc, #1048576	; 0x100000
    fcc0:	add	ip, ip, #24576	; 0x6000
    fcc4:	ldr	pc, [ip, #924]!	; 0x39c

0000fcc8 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>:
    fcc8:	add	ip, pc, #1048576	; 0x100000
    fccc:	add	ip, ip, #24576	; 0x6000
    fcd0:	ldr	pc, [ip, #916]!	; 0x394

0000fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>:
    fcd4:	add	ip, pc, #1048576	; 0x100000
    fcd8:	add	ip, ip, #24576	; 0x6000
    fcdc:	ldr	pc, [ip, #908]!	; 0x38c

0000fce0 <myhtml_tree_wait_for_last_done_token@plt>:
    fce0:	add	ip, pc, #1048576	; 0x100000
    fce4:	add	ip, ip, #24576	; 0x6000
    fce8:	ldr	pc, [ip, #900]!	; 0x384

0000fcec <mythread_queue_get_prev_node@plt>:
    fcec:	add	ip, pc, #1048576	; 0x100000
    fcf0:	add	ip, ip, #24576	; 0x6000
    fcf4:	ldr	pc, [ip, #892]!	; 0x37c

0000fcf8 <myhtml_insertion_mode_in_foreign_content_end_other@plt>:
    fcf8:	add	ip, pc, #1048576	; 0x100000
    fcfc:	add	ip, ip, #24576	; 0x6000
    fd00:	ldr	pc, [ip, #884]!	; 0x374

0000fd04 <setbuf@plt>:
    fd04:	add	ip, pc, #1048576	; 0x100000
    fd08:	add	ip, ip, #24576	; 0x6000
    fd0c:	ldr	pc, [ip, #876]!	; 0x36c

0000fd10 <mycore_utils_avl_tree_find_min@plt>:
    fd10:	add	ip, pc, #1048576	; 0x100000
    fd14:	add	ip, ip, #24576	; 0x6000
    fd18:	ldr	pc, [ip, #868]!	; 0x364

0000fd1c <myhtml_insertion_mode_in_body_other_end_tag@plt>:
    fd1c:	add	ip, pc, #1048576	; 0x100000
    fd20:	add	ip, ip, #24576	; 0x6000
    fd24:	ldr	pc, [ip, #860]!	; 0x35c

0000fd28 <myhtml_stream_buffer_destroy@plt>:
    fd28:	add	ip, pc, #1048576	; 0x100000
    fd2c:	add	ip, ip, #24576	; 0x6000
    fd30:	ldr	pc, [ip, #852]!	; 0x354

0000fd34 <myhtml_token_attr_match_case@plt>:
    fd34:	add	ip, pc, #1048576	; 0x100000
    fd38:	add	ip, ip, #24576	; 0x6000
    fd3c:	ldr	pc, [ip, #844]!	; 0x34c

0000fd40 <__cxa_finalize@plt>:
    fd40:	add	ip, pc, #1048576	; 0x100000
    fd44:	add	ip, ip, #24576	; 0x6000
    fd48:	ldr	pc, [ip, #836]!	; 0x344

0000fd4c <mycore_utils_avl_tree_node_rotate_right@plt>:
    fd4c:	add	ip, pc, #1048576	; 0x100000
    fd50:	add	ip, ip, #24576	; 0x6000
    fd54:	ldr	pc, [ip, #828]!	; 0x33c

0000fd58 <mcobject_async_create@plt>:
    fd58:	add	ip, pc, #1048576	; 0x100000
    fd5c:	add	ip, ip, #24576	; 0x6000
    fd60:	ldr	pc, [ip, #820]!	; 0x334

0000fd64 <mythread_queue_clean@plt>:
    fd64:	add	ip, pc, #1048576	; 0x100000
    fd68:	add	ip, ip, #24576	; 0x6000
    fd6c:	ldr	pc, [ip, #812]!	; 0x32c

0000fd70 <mcsync_mutex_destroy@plt>:
    fd70:	add	ip, pc, #1048576	; 0x100000
    fd74:	add	ip, ip, #24576	; 0x6000
    fd78:	ldr	pc, [ip, #804]!	; 0x324

0000fd7c <myhtml_parser_worker@plt>:
    fd7c:	add	ip, pc, #1048576	; 0x100000
    fd80:	add	ip, ip, #24576	; 0x6000
    fd84:	ldr	pc, [ip, #796]!	; 0x31c

0000fd88 <mythread_thread_create@plt>:
    fd88:	add	ip, pc, #1048576	; 0x100000
    fd8c:	add	ip, ip, #24576	; 0x6000
    fd90:	ldr	pc, [ip, #788]!	; 0x314

0000fd94 <mcsync_create@plt>:
    fd94:	add	ip, pc, #1048576	; 0x100000
    fd98:	add	ip, ip, #24576	; 0x6000
    fd9c:	ldr	pc, [ip, #780]!	; 0x30c

0000fda0 <myhtml_insertion_mode_in_template@plt>:
    fda0:	add	ip, pc, #1048576	; 0x100000
    fda4:	add	ip, ip, #24576	; 0x6000
    fda8:	ldr	pc, [ip, #772]!	; 0x304

0000fdac <mycore_utils_avl_tree_node_balance_factor@plt>:
    fdac:	add	ip, pc, #1048576	; 0x100000
    fdb0:	add	ip, ip, #24576	; 0x6000
    fdb4:	ldr	pc, [ip, #764]!	; 0x2fc

0000fdb8 <fopen@plt>:
    fdb8:	add	ip, pc, #1048576	; 0x100000
    fdbc:	add	ip, ip, #24576	; 0x6000
    fdc0:	ldr	pc, [ip, #756]!	; 0x2f4

0000fdc4 <mcobject_async_mem_malloc@plt>:
    fdc4:	add	ip, pc, #1048576	; 0x100000
    fdc8:	add	ip, ip, #24576	; 0x6000
    fdcc:	ldr	pc, [ip, #748]!	; 0x2ec

0000fdd0 <mcobject_destroy@plt>:
    fdd0:	add	ip, pc, #1048576	; 0x100000
    fdd4:	add	ip, ip, #24576	; 0x6000
    fdd8:	ldr	pc, [ip, #740]!	; 0x2e4

0000fddc <pthread_attr_destroy@plt>:
    fddc:	add	ip, pc, #1048576	; 0x100000
    fde0:	add	ip, ip, #24576	; 0x6000
    fde4:	ldr	pc, [ip, #732]!	; 0x2dc

0000fde8 <myhtml_clean@plt>:
    fde8:	add	ip, pc, #1048576	; 0x100000
    fdec:	add	ip, ip, #24576	; 0x6000
    fdf0:	ldr	pc, [ip, #724]!	; 0x2d4

0000fdf4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>:
    fdf4:	add	ip, pc, #1048576	; 0x100000
    fdf8:	add	ip, ip, #24576	; 0x6000
    fdfc:	ldr	pc, [ip, #716]!	; 0x2cc

0000fe00 <pthread_mutex_destroy@plt>:
    fe00:	add	ip, pc, #1048576	; 0x100000
    fe04:	add	ip, ip, #24576	; 0x6000
    fe08:	ldr	pc, [ip, #708]!	; 0x2c4

0000fe0c <fflush@plt>:
    fe0c:	add	ip, pc, #1048576	; 0x100000
    fe10:	add	ip, ip, #24576	; 0x6000
    fe14:	ldr	pc, [ip, #700]!	; 0x2bc

0000fe18 <mythread_create@plt>:
    fe18:	add	ip, pc, #1048576	; 0x100000
    fe1c:	add	ip, ip, #24576	; 0x6000
    fe20:	ldr	pc, [ip, #692]!	; 0x2b4

0000fe24 <myhtml_insertion_mode_in_foreign_content@plt>:
    fe24:	add	ip, pc, #1048576	; 0x100000
    fe28:	add	ip, ip, #24576	; 0x6000
    fe2c:	ldr	pc, [ip, #684]!	; 0x2ac

0000fe30 <myhtml_tree_generate_all_implied_end_tags@plt>:
    fe30:	add	ip, pc, #1048576	; 0x100000
    fe34:	add	ip, ip, #24576	; 0x6000
    fe38:	ldr	pc, [ip, #676]!	; 0x2a4

0000fe3c <myencoding_string_append_lowercase_ascii@plt>:
    fe3c:	add	ip, pc, #1048576	; 0x100000
    fe40:	add	ip, ip, #24576	; 0x6000
    fe44:	ldr	pc, [ip, #668]!	; 0x29c

0000fe48 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>:
    fe48:	add	ip, pc, #1048576	; 0x100000
    fe4c:	add	ip, ip, #24576	; 0x6000
    fe50:	ldr	pc, [ip, #660]!	; 0x294

0000fe54 <myhread_increase_id_by_entry_id@plt>:
    fe54:	add	ip, pc, #1048576	; 0x100000
    fe58:	add	ip, ip, #24576	; 0x6000
    fe5c:	ldr	pc, [ip, #652]!	; 0x28c

0000fe60 <myhtml_tree_incomming_buffer_make_data@plt>:
    fe60:	add	ip, pc, #1048576	; 0x100000
    fe64:	add	ip, ip, #24576	; 0x6000
    fe68:	ldr	pc, [ip, #644]!	; 0x284

0000fe6c <_myhtml_token_create_copy_srt@plt>:
    fe6c:	add	ip, pc, #1048576	; 0x100000
    fe70:	add	ip, ip, #24576	; 0x6000
    fe74:	ldr	pc, [ip, #636]!	; 0x27c

0000fe78 <memmove@plt>:
    fe78:	add	ip, pc, #1048576	; 0x100000
    fe7c:	add	ip, ip, #24576	; 0x6000
    fe80:	ldr	pc, [ip, #628]!	; 0x274

0000fe84 <mythread_thread_attr_init@plt>:
    fe84:	add	ip, pc, #1048576	; 0x100000
    fe88:	add	ip, ip, #24576	; 0x6000
    fe8c:	ldr	pc, [ip, #620]!	; 0x26c

0000fe90 <myhtml_insertion_mode_in_foreign_content_start_other@plt>:
    fe90:	add	ip, pc, #1048576	; 0x100000
    fe94:	add	ip, ip, #24576	; 0x6000
    fe98:	ldr	pc, [ip, #612]!	; 0x264

0000fe9c <myhtml_rules_tree_dispatcher@plt>:
    fe9c:	add	ip, pc, #1048576	; 0x100000
    fea0:	add	ip, ip, #24576	; 0x6000
    fea4:	ldr	pc, [ip, #604]!	; 0x25c

0000fea8 <myhtml_get_nodes_by_attribute_key_recursion@plt>:
    fea8:	add	ip, pc, #1048576	; 0x100000
    feac:	add	ip, ip, #24576	; 0x6000
    feb0:	ldr	pc, [ip, #596]!	; 0x254

0000feb4 <free@plt>:
    feb4:	add	ip, pc, #1048576	; 0x100000
    feb8:	add	ip, ip, #24576	; 0x6000
    febc:	ldr	pc, [ip, #588]!	; 0x24c

0000fec0 <mchar_async_cache_malloc@plt>:
    fec0:	add	ip, pc, #1048576	; 0x100000
    fec4:	add	ip, ip, #24576	; 0x6000
    fec8:	ldr	pc, [ip, #580]!	; 0x244

0000fecc <mythread_function_see_opt@plt>:
    fecc:	add	ip, pc, #1048576	; 0x100000
    fed0:	add	ip, ip, #24576	; 0x6000
    fed4:	ldr	pc, [ip, #572]!	; 0x23c

0000fed8 <myencoding_detect_utf_16@plt>:
    fed8:	add	ip, pc, #1048576	; 0x100000
    fedc:	add	ip, ip, #24576	; 0x6000
    fee0:	ldr	pc, [ip, #564]!	; 0x234

0000fee4 <mcobject_chunk_malloc@plt>:
    fee4:	add	ip, pc, #1048576	; 0x100000
    fee8:	add	ip, ip, #24576	; 0x6000
    feec:	ldr	pc, [ip, #556]!	; 0x22c

0000fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>:
    fef0:	add	ip, pc, #1048576	; 0x100000
    fef4:	add	ip, ip, #24576	; 0x6000
    fef8:	ldr	pc, [ip, #548]!	; 0x224

0000fefc <mcsync_mutex_unlock@plt>:
    fefc:	add	ip, pc, #1048576	; 0x100000
    ff00:	add	ip, ip, #24576	; 0x6000
    ff04:	ldr	pc, [ip, #540]!	; 0x21c

0000ff08 <pthread_mutex_lock@plt>:
    ff08:	add	ip, pc, #1048576	; 0x100000
    ff0c:	add	ip, ip, #24576	; 0x6000
    ff10:	ldr	pc, [ip, #532]!	; 0x214

0000ff14 <mycore_calloc@plt>:
    ff14:	add	ip, pc, #1048576	; 0x100000
    ff18:	add	ip, ip, #24576	; 0x6000
    ff1c:	ldr	pc, [ip, #524]!	; 0x20c

0000ff20 <nanosleep@plt>:
    ff20:	add	ip, pc, #1048576	; 0x100000
    ff24:	add	ip, ip, #24576	; 0x6000
    ff28:	ldr	pc, [ip, #516]!	; 0x204

0000ff2c <myhtml_token_node_clone@plt>:
    ff2c:	add	ip, pc, #1048576	; 0x100000
    ff30:	add	ip, ip, #24576	; 0x6000
    ff34:	ldr	pc, [ip, #508]!	; 0x1fc

0000ff38 <myhtml_get_nodes_by_tag_id_in_scope@plt>:
    ff38:	add	ip, pc, #1048576	; 0x100000
    ff3c:	add	ip, ip, #24576	; 0x6000
    ff40:	ldr	pc, [ip, #500]!	; 0x1f4

0000ff44 <mchar_sync_chunk_insert_after@plt>:
    ff44:	add	ip, pc, #1048576	; 0x100000
    ff48:	add	ip, ip, #24576	; 0x6000
    ff4c:	ldr	pc, [ip, #492]!	; 0x1ec

0000ff50 <ferror@plt>:
    ff50:	add	ip, pc, #1048576	; 0x100000
    ff54:	add	ip, ip, #24576	; 0x6000
    ff58:	ldr	pc, [ip, #484]!	; 0x1e4

0000ff5c <memcpy@plt>:
    ff5c:	add	ip, pc, #1048576	; 0x100000
    ff60:	add	ip, ip, #24576	; 0x6000
    ff64:	ldr	pc, [ip, #476]!	; 0x1dc

0000ff68 <myencoding_name_entry_by_name@plt>:
    ff68:	add	ip, pc, #1048576	; 0x100000
    ff6c:	add	ip, ip, #24576	; 0x6000
    ff70:	ldr	pc, [ip, #468]!	; 0x1d4

0000ff74 <myhtml_token_adjust_mathml_attributes@plt>:
    ff74:	add	ip, pc, #1048576	; 0x100000
    ff78:	add	ip, ip, #24576	; 0x6000
    ff7c:	ldr	pc, [ip, #460]!	; 0x1cc

0000ff80 <mcobject_free@plt>:
    ff80:	add	ip, pc, #1048576	; 0x100000
    ff84:	add	ip, ip, #24576	; 0x6000
    ff88:	ldr	pc, [ip, #452]!	; 0x1c4

0000ff8c <myhtml_tree_node_insert_text@plt>:
    ff8c:	add	ip, pc, #1048576	; 0x100000
    ff90:	add	ip, ip, #24576	; 0x6000
    ff94:	ldr	pc, [ip, #444]!	; 0x1bc

0000ff98 <myhtml_tag_set_category@plt>:
    ff98:	add	ip, pc, #1048576	; 0x100000
    ff9c:	add	ip, ip, #24576	; 0x6000
    ffa0:	ldr	pc, [ip, #436]!	; 0x1b4

0000ffa4 <mcsync_spin_destroy@plt>:
    ffa4:	add	ip, pc, #1048576	; 0x100000
    ffa8:	add	ip, ip, #24576	; 0x6000
    ffac:	ldr	pc, [ip, #428]!	; 0x1ac

0000ffb0 <myhtml_tree_template_insertion_append@plt>:
    ffb0:	add	ip, pc, #1048576	; 0x100000
    ffb4:	add	ip, ip, #24576	; 0x6000
    ffb8:	ldr	pc, [ip, #420]!	; 0x1a4

0000ffbc <mchar_async_realloc@plt>:
    ffbc:	add	ip, pc, #1048576	; 0x100000
    ffc0:	add	ip, ip, #24576	; 0x6000
    ffc4:	ldr	pc, [ip, #412]!	; 0x19c

0000ffc8 <pthread_mutex_init@plt>:
    ffc8:	add	ip, pc, #1048576	; 0x100000
    ffcc:	add	ip, ip, #24576	; 0x6000
    ffd0:	ldr	pc, [ip, #404]!	; 0x194

0000ffd4 <myhtml_tokenizer_state_bogus_comment@plt>:
    ffd4:	add	ip, pc, #1048576	; 0x100000
    ffd8:	add	ip, ip, #24576	; 0x6000
    ffdc:	ldr	pc, [ip, #396]!	; 0x18c

0000ffe0 <myhtml_tree_node_create@plt>:
    ffe0:	add	ip, pc, #1048576	; 0x100000
    ffe4:	add	ip, ip, #24576	; 0x6000
    ffe8:	ldr	pc, [ip, #388]!	; 0x184

0000ffec <myhtml_tree_node_delete_recursive@plt>:
    ffec:	add	ip, pc, #1048576	; 0x100000
    fff0:	add	ip, ip, #24576	; 0x6000
    fff4:	ldr	pc, [ip, #380]!	; 0x17c

0000fff8 <myhtml_tag_static_get_by_id@plt>:
    fff8:	add	ip, pc, #1048576	; 0x100000
    fffc:	add	ip, ip, #24576	; 0x6000
   10000:	ldr	pc, [ip, #372]!	; 0x174

00010004 <myhtml_token_attr_clean@plt>:
   10004:	add	ip, pc, #1048576	; 0x100000
   10008:	add	ip, ip, #24576	; 0x6000
   1000c:	ldr	pc, [ip, #364]!	; 0x16c

00010010 <myhtml_tag_add@plt>:
   10010:	add	ip, pc, #1048576	; 0x100000
   10014:	add	ip, ip, #24576	; 0x6000
   10018:	ldr	pc, [ip, #356]!	; 0x164

0001001c <mcobject_create@plt>:
   1001c:	add	ip, pc, #1048576	; 0x100000
   10020:	add	ip, ip, #24576	; 0x6000
   10024:	ldr	pc, [ip, #348]!	; 0x15c

00010028 <myhtml_queue_add@plt>:
   10028:	add	ip, pc, #1048576	; 0x100000
   1002c:	add	ip, ip, #24576	; 0x6000
   10030:	ldr	pc, [ip, #340]!	; 0x154

00010034 <pthread_mutex_trylock@plt>:
   10034:	add	ip, pc, #1048576	; 0x100000
   10038:	add	ip, ip, #24576	; 0x6000
   1003c:	ldr	pc, [ip, #332]!	; 0x14c

00010040 <myhtml_tree_is_mathml_integration_point@plt>:
   10040:	add	ip, pc, #1048576	; 0x100000
   10044:	add	ip, ip, #24576	; 0x6000
   10048:	ldr	pc, [ip, #324]!	; 0x144

0001004c <mcobject_async_free@plt>:
   1004c:	add	ip, pc, #1048576	; 0x100000
   10050:	add	ip, ip, #24576	; 0x6000
   10054:	ldr	pc, [ip, #316]!	; 0x13c

00010058 <myhtml_insertion_mode_in_head@plt>:
   10058:	add	ip, pc, #1048576	; 0x100000
   1005c:	add	ip, ip, #24576	; 0x6000
   10060:	ldr	pc, [ip, #308]!	; 0x134

00010064 <ftell@plt>:
   10064:	add	ip, pc, #1048576	; 0x100000
   10068:	add	ip, ip, #24576	; 0x6000
   1006c:	ldr	pc, [ip, #300]!	; 0x12c

00010070 <memcmp@plt>:
   10070:	add	ip, pc, #1048576	; 0x100000
   10074:	add	ip, ip, #24576	; 0x6000
   10078:	ldr	pc, [ip, #292]!	; 0x124

0001007c <mycore_utils_mhash_hash@plt>:
   1007c:	add	ip, pc, #1048576	; 0x100000
   10080:	add	ip, ip, #24576	; 0x6000
   10084:	ldr	pc, [ip, #284]!	; 0x11c

00010088 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>:
   10088:	add	ip, pc, #1048576	; 0x100000
   1008c:	add	ip, ip, #24576	; 0x6000
   10090:	ldr	pc, [ip, #276]!	; 0x114

00010094 <mycore_incoming_buffer_add@plt>:
   10094:	add	ip, pc, #1048576	; 0x100000
   10098:	add	ip, ip, #24576	; 0x6000
   1009c:	ldr	pc, [ip, #268]!	; 0x10c

000100a0 <mythread_nanosleep_sleep@plt>:
   100a0:	add	ip, pc, #1048576	; 0x100000
   100a4:	add	ip, ip, #24576	; 0x6000
   100a8:	ldr	pc, [ip, #260]!	; 0x104

000100ac <mctree_insert_before@plt>:
   100ac:	add	ip, pc, #1048576	; 0x100000
   100b0:	add	ip, ip, #24576	; 0x6000
   100b4:	ldr	pc, [ip, #252]!	; 0xfc

000100b8 <mctree_destroy@plt>:
   100b8:	add	ip, pc, #1048576	; 0x100000
   100bc:	add	ip, ip, #24576	; 0x6000
   100c0:	ldr	pc, [ip, #244]!	; 0xf4

000100c4 <myhtml_tokenizer_chunk@plt>:
   100c4:	add	ip, pc, #1048576	; 0x100000
   100c8:	add	ip, ip, #24576	; 0x6000
   100cc:	ldr	pc, [ip, #236]!	; 0xec

000100d0 <myhtml_tree_active_formatting_append@plt>:
   100d0:	add	ip, pc, #1048576	; 0x100000
   100d4:	add	ip, ip, #24576	; 0x6000
   100d8:	ldr	pc, [ip, #228]!	; 0xe4

000100dc <myhtml_tree_active_formatting_destroy@plt>:
   100dc:	add	ip, pc, #1048576	; 0x100000
   100e0:	add	ip, ip, #24576	; 0x6000
   100e4:	ldr	pc, [ip, #220]!	; 0xdc

000100e8 <mythread_suspend@plt>:
   100e8:	add	ip, pc, #1048576	; 0x100000
   100ec:	add	ip, ip, #24576	; 0x6000
   100f0:	ldr	pc, [ip, #212]!	; 0xd4

000100f4 <myhtml_tokenizer_state_destroy@plt>:
   100f4:	add	ip, pc, #1048576	; 0x100000
   100f8:	add	ip, ip, #24576	; 0x6000
   100fc:	ldr	pc, [ip, #204]!	; 0xcc

00010100 <mycore_incoming_buffer_find_by_position@plt>:
   10100:	add	ip, pc, #1048576	; 0x100000
   10104:	add	ip, ip, #24576	; 0x6000
   10108:	ldr	pc, [ip, #196]!	; 0xc4

0001010c <mcobject_async_chunk_malloc@plt>:
   1010c:	add	ip, pc, #1048576	; 0x100000
   10110:	add	ip, ip, #24576	; 0x6000
   10114:	ldr	pc, [ip, #188]!	; 0xbc

00010118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>:
   10118:	add	ip, pc, #1048576	; 0x100000
   1011c:	add	ip, ip, #24576	; 0x6000
   10120:	ldr	pc, [ip, #180]!	; 0xb4

00010124 <myhtml_tree_active_formatting_find@plt>:
   10124:	add	ip, pc, #1048576	; 0x100000
   10128:	add	ip, ip, #24576	; 0x6000
   1012c:	ldr	pc, [ip, #172]!	; 0xac

00010130 <mythread_queue_list_destroy@plt>:
   10130:	add	ip, pc, #1048576	; 0x100000
   10134:	add	ip, ip, #24576	; 0x6000
   10138:	ldr	pc, [ip, #164]!	; 0xa4

0001013c <myhtml_tree_open_elements_pop_until_by_node@plt>:
   1013c:	add	ip, pc, #1048576	; 0x100000
   10140:	add	ip, ip, #24576	; 0x6000
   10144:	ldr	pc, [ip, #156]!	; 0x9c

00010148 <myhtml_stream_buffer_entry_destroy@plt>:
   10148:	add	ip, pc, #1048576	; 0x100000
   1014c:	add	ip, ip, #24576	; 0x6000
   10150:	ldr	pc, [ip, #148]!	; 0x94

00010154 <myhtml_tokenizer_begin@plt>:
   10154:	add	ip, pc, #1048576	; 0x100000
   10158:	add	ip, ip, #24576	; 0x6000
   1015c:	ldr	pc, [ip, #140]!	; 0x8c

00010160 <mchar_async_create@plt>:
   10160:	add	ip, pc, #1048576	; 0x100000
   10164:	add	ip, ip, #24576	; 0x6000
   10168:	ldr	pc, [ip, #132]!	; 0x84

0001016c <mycore_string_copy@plt>:
   1016c:	add	ip, pc, #1048576	; 0x100000
   10170:	add	ip, ip, #24576	; 0x6000
   10174:	ldr	pc, [ip, #124]!	; 0x7c

00010178 <myhtml_insertion_mode_in_table@plt>:
   10178:	add	ip, pc, #1048576	; 0x100000
   1017c:	add	ip, ip, #24576	; 0x6000
   10180:	ldr	pc, [ip, #116]!	; 0x74

00010184 <mythread_queue_list_entry_push@plt>:
   10184:	add	ip, pc, #1048576	; 0x100000
   10188:	add	ip, ip, #24576	; 0x6000
   1018c:	ldr	pc, [ip, #108]!	; 0x6c

00010190 <mythread_queue_get_current_node@plt>:
   10190:	add	ip, pc, #1048576	; 0x100000
   10194:	add	ip, ip, #24576	; 0x6000
   10198:	ldr	pc, [ip, #100]!	; 0x64

0001019c <mcobject_async_chunk_up@plt>:
   1019c:	add	ip, pc, #1048576	; 0x100000
   101a0:	add	ip, ip, #24576	; 0x6000
   101a4:	ldr	pc, [ip, #92]!	; 0x5c

000101a8 <myhtml_tree_open_elements_pop@plt>:
   101a8:	add	ip, pc, #1048576	; 0x100000
   101ac:	add	ip, ip, #24576	; 0x6000
   101b0:	ldr	pc, [ip, #84]!	; 0x54

000101b4 <mcsync_destroy@plt>:
   101b4:	add	ip, pc, #1048576	; 0x100000
   101b8:	add	ip, ip, #24576	; 0x6000
   101bc:	ldr	pc, [ip, #76]!	; 0x4c

000101c0 <myencoding_result_clean@plt>:
   101c0:	add	ip, pc, #1048576	; 0x100000
   101c4:	add	ip, ip, #24576	; 0x6000
   101c8:	ldr	pc, [ip, #68]!	; 0x44

000101cc <myhtml_string_append_with_preprocessing@plt>:
   101cc:	add	ip, pc, #1048576	; 0x100000
   101d0:	add	ip, ip, #24576	; 0x6000
   101d4:	ldr	pc, [ip, #60]!	; 0x3c

000101d8 <myhtml_token_adjust_svg_attributes@plt>:
   101d8:	add	ip, pc, #1048576	; 0x100000
   101dc:	add	ip, ip, #24576	; 0x6000
   101e0:	ldr	pc, [ip, #52]!	; 0x34

000101e4 <realloc@plt>:
   101e4:	add	ip, pc, #1048576	; 0x100000
   101e8:	add	ip, ip, #24576	; 0x6000
   101ec:	ldr	pc, [ip, #44]!	; 0x2c

000101f0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>:
   101f0:	add	ip, pc, #1048576	; 0x100000
   101f4:	add	ip, ip, #24576	; 0x6000
   101f8:	ldr	pc, [ip, #36]!	; 0x24

000101fc <myhtml_tree_is_html_integration_point@plt>:
   101fc:	add	ip, pc, #1048576	; 0x100000
   10200:	add	ip, ip, #24576	; 0x6000
   10204:	ldr	pc, [ip, #28]!

00010208 <myhtml_namespace_name_entry_by_name@plt>:
   10208:	add	ip, pc, #1048576	; 0x100000
   1020c:	add	ip, ip, #24576	; 0x6000
   10210:	ldr	pc, [ip, #20]!

00010214 <myencoding_detect_bom@plt>:
   10214:	add	ip, pc, #1048576	; 0x100000
   10218:	add	ip, ip, #24576	; 0x6000
   1021c:	ldr	pc, [ip, #12]!

00010220 <myhtml_tree_list_append@plt>:
   10220:	add	ip, pc, #1048576	; 0x100000
   10224:	add	ip, ip, #24576	; 0x6000
   10228:	ldr	pc, [ip, #4]!

0001022c <myhtml_tokenizer_calc_current_namespace@plt>:
   1022c:	add	ip, pc, #1048576	; 0x100000
   10230:	add	ip, ip, #20480	; 0x5000
   10234:	ldr	pc, [ip, #4092]!	; 0xffc

00010238 <myhtml_tree_open_elements_remove@plt>:
   10238:	add	ip, pc, #1048576	; 0x100000
   1023c:	add	ip, ip, #20480	; 0x5000
   10240:	ldr	pc, [ip, #4084]!	; 0xff4

00010244 <mctree_insert_child@plt>:
   10244:	add	ip, pc, #1048576	; 0x100000
   10248:	add	ip, ip, #20480	; 0x5000
   1024c:	ldr	pc, [ip, #4076]!	; 0xfec

00010250 <mcsimple_clean@plt>:
   10250:	add	ip, pc, #1048576	; 0x100000
   10254:	add	ip, ip, #20480	; 0x5000
   10258:	ldr	pc, [ip, #4068]!	; 0xfe4

0001025c <myhtml_tree_node_insert_comment@plt>:
   1025c:	add	ip, pc, #1048576	; 0x100000
   10260:	add	ip, ip, #20480	; 0x5000
   10264:	ldr	pc, [ip, #4060]!	; 0xfdc

00010268 <myhtml_tokenizer_end@plt>:
   10268:	add	ip, pc, #1048576	; 0x100000
   1026c:	add	ip, ip, #20480	; 0x5000
   10270:	ldr	pc, [ip, #4052]!	; 0xfd4

00010274 <mycore_utils_avl_tree_list_all_nodes@plt>:
   10274:	add	ip, pc, #1048576	; 0x100000
   10278:	add	ip, ip, #20480	; 0x5000
   1027c:	ldr	pc, [ip, #4044]!	; 0xfcc

00010280 <myhtml_tree_temp_tag_name_clean@plt>:
   10280:	add	ip, pc, #1048576	; 0x100000
   10284:	add	ip, ip, #20480	; 0x5000
   10288:	ldr	pc, [ip, #4036]!	; 0xfc4

0001028c <myhtml_tree_list_clean@plt>:
   1028c:	add	ip, pc, #1048576	; 0x100000
   10290:	add	ip, ip, #20480	; 0x5000
   10294:	ldr	pc, [ip, #4028]!	; 0xfbc

00010298 <mchar_async_node_add@plt>:
   10298:	add	ip, pc, #1048576	; 0x100000
   1029c:	add	ip, ip, #20480	; 0x5000
   102a0:	ldr	pc, [ip, #4020]!	; 0xfb4

000102a4 <mycore_strncasecmp@plt>:
   102a4:	add	ip, pc, #1048576	; 0x100000
   102a8:	add	ip, ip, #20480	; 0x5000
   102ac:	ldr	pc, [ip, #4012]!	; 0xfac

000102b0 <myhtml_tokenizer_post@plt>:
   102b0:	add	ip, pc, #1048576	; 0x100000
   102b4:	add	ip, ip, #20480	; 0x5000
   102b8:	ldr	pc, [ip, #4004]!	; 0xfa4

000102bc <myhtml_tree_list_insert_by_index@plt>:
   102bc:	add	ip, pc, #1048576	; 0x100000
   102c0:	add	ip, ip, #20480	; 0x5000
   102c4:	ldr	pc, [ip, #3996]!	; 0xf9c

000102c8 <mcsimple_create@plt>:
   102c8:	add	ip, pc, #1048576	; 0x100000
   102cc:	add	ip, ip, #20480	; 0x5000
   102d0:	ldr	pc, [ip, #3988]!	; 0xf94

000102d4 <mythread_queue_destroy@plt>:
   102d4:	add	ip, pc, #1048576	; 0x100000
   102d8:	add	ip, ip, #20480	; 0x5000
   102dc:	ldr	pc, [ip, #3980]!	; 0xf8c

000102e0 <mycore_string_raw_copy@plt>:
   102e0:	add	ip, pc, #1048576	; 0x100000
   102e4:	add	ip, ip, #20480	; 0x5000
   102e8:	ldr	pc, [ip, #3972]!	; 0xf84

000102ec <mycore_string_stay_only_whitespace@plt>:
   102ec:	add	ip, pc, #1048576	; 0x100000
   102f0:	add	ip, ip, #20480	; 0x5000
   102f4:	ldr	pc, [ip, #3964]!	; 0xf7c

000102f8 <mctree_clean@plt>:
   102f8:	add	ip, pc, #1048576	; 0x100000
   102fc:	add	ip, ip, #20480	; 0x5000
   10300:	ldr	pc, [ip, #3956]!	; 0xf74

00010304 <myhtml_collection_create@plt>:
   10304:	add	ip, pc, #1048576	; 0x100000
   10308:	add	ip, ip, #20480	; 0x5000
   1030c:	ldr	pc, [ip, #3948]!	; 0xf6c

00010310 <myhtml_rules_stop_parsing@plt>:
   10310:	add	ip, pc, #1048576	; 0x100000
   10314:	add	ip, ip, #20480	; 0x5000
   10318:	ldr	pc, [ip, #3940]!	; 0xf64

0001031c <myhtml_get_nodes_by_tag_id@plt>:
   1031c:	add	ip, pc, #1048576	; 0x100000
   10320:	add	ip, ip, #20480	; 0x5000
   10324:	ldr	pc, [ip, #3932]!	; 0xf5c

00010328 <myhtml_serialization_tree_buffer@plt>:
   10328:	add	ip, pc, #1048576	; 0x100000
   1032c:	add	ip, ip, #20480	; 0x5000
   10330:	ldr	pc, [ip, #3924]!	; 0xf54

00010334 <myhtml_token_set_replacement_character_for_null_token@plt>:
   10334:	add	ip, pc, #1048576	; 0x100000
   10338:	add	ip, ip, #20480	; 0x5000
   1033c:	ldr	pc, [ip, #3916]!	; 0xf4c

00010340 <fwrite@plt>:
   10340:	add	ip, pc, #1048576	; 0x100000
   10344:	add	ip, ip, #20480	; 0x5000
   10348:	ldr	pc, [ip, #3908]!	; 0xf44

0001034c <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>:
   1034c:	add	ip, pc, #1048576	; 0x100000
   10350:	add	ip, ip, #20480	; 0x5000
   10354:	ldr	pc, [ip, #3900]!	; 0xf3c

00010358 <myhtml_tree_node_insert_by_mode@plt>:
   10358:	add	ip, pc, #1048576	; 0x100000
   1035c:	add	ip, ip, #20480	; 0x5000
   10360:	ldr	pc, [ip, #3892]!	; 0xf34

00010364 <myhtml_tree_node_insert_after@plt>:
   10364:	add	ip, pc, #1048576	; 0x100000
   10368:	add	ip, ip, #20480	; 0x5000
   1036c:	ldr	pc, [ip, #3884]!	; 0xf2c

00010370 <myhtml_data_process_state_end@plt>:
   10370:	add	ip, pc, #1048576	; 0x100000
   10374:	add	ip, ip, #20480	; 0x5000
   10378:	ldr	pc, [ip, #3876]!	; 0xf24

0001037c <myhtml_serialization_reallocate@plt>:
   1037c:	add	ip, pc, #1048576	; 0x100000
   10380:	add	ip, ip, #20480	; 0x5000
   10384:	ldr	pc, [ip, #3868]!	; 0xf1c

00010388 <mycore_string_append_with_replacement_null_characters@plt>:
   10388:	add	ip, pc, #1048576	; 0x100000
   1038c:	add	ip, ip, #20480	; 0x5000
   10390:	ldr	pc, [ip, #3860]!	; 0xf14

00010394 <myhtml_tree_clear_stack_back_table_body_context@plt>:
   10394:	add	ip, pc, #1048576	; 0x100000
   10398:	add	ip, ip, #20480	; 0x5000
   1039c:	ldr	pc, [ip, #3852]!	; 0xf0c

000103a0 <mcsimple_destroy@plt>:
   103a0:	add	ip, pc, #1048576	; 0x100000
   103a4:	add	ip, ip, #20480	; 0x5000
   103a8:	ldr	pc, [ip, #3844]!	; 0xf04

000103ac <myhtml_token_doctype_check_html_4_01@plt>:
   103ac:	add	ip, pc, #1048576	; 0x100000
   103b0:	add	ip, ip, #20480	; 0x5000
   103b4:	ldr	pc, [ip, #3836]!	; 0xefc

000103b8 <__mtree_insert_to_start@plt>:
   103b8:	add	ip, pc, #1048576	; 0x100000
   103bc:	add	ip, ip, #20480	; 0x5000
   103c0:	ldr	pc, [ip, #3828]!	; 0xef4

000103c4 <myhtml_insertion_mode_in_select@plt>:
   103c4:	add	ip, pc, #1048576	; 0x100000
   103c8:	add	ip, ip, #20480	; 0x5000
   103cc:	ldr	pc, [ip, #3820]!	; 0xeec

000103d0 <fread@plt>:
   103d0:	add	ip, pc, #1048576	; 0x100000
   103d4:	add	ip, ip, #20480	; 0x5000
   103d8:	ldr	pc, [ip, #3812]!	; 0xee4

000103dc <pthread_create@plt>:
   103dc:	add	ip, pc, #1048576	; 0x100000
   103e0:	add	ip, ip, #20480	; 0x5000
   103e4:	ldr	pc, [ip, #3804]!	; 0xedc

000103e8 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>:
   103e8:	add	ip, pc, #1048576	; 0x100000
   103ec:	add	ip, ip, #20480	; 0x5000
   103f0:	ldr	pc, [ip, #3796]!	; 0xed4

000103f4 <myhtml_tree_node_insert_before@plt>:
   103f4:	add	ip, pc, #1048576	; 0x100000
   103f8:	add	ip, ip, #20480	; 0x5000
   103fc:	ldr	pc, [ip, #3788]!	; 0xecc

00010400 <myhtml_parser_token_data_to_string_charef@plt>:
   10400:	add	ip, pc, #1048576	; 0x100000
   10404:	add	ip, ip, #20480	; 0x5000
   10408:	ldr	pc, [ip, #3780]!	; 0xec4

0001040c <mythread_thread_attr_clean@plt>:
   1040c:	add	ip, pc, #1048576	; 0x100000
   10410:	add	ip, ip, #20480	; 0x5000
   10414:	ldr	pc, [ip, #3772]!	; 0xebc

00010418 <myhtml_tree_clear_stack_back_table_row_context@plt>:
   10418:	add	ip, pc, #1048576	; 0x100000
   1041c:	add	ip, ip, #20480	; 0x5000
   10420:	ldr	pc, [ip, #3764]!	; 0xeb4

00010424 <myhtml_tree_template_insertion_clean@plt>:
   10424:	add	ip, pc, #1048576	; 0x100000
   10428:	add	ip, ip, #20480	; 0x5000
   1042c:	ldr	pc, [ip, #3756]!	; 0xeac

00010430 <myhtml_tokenizer_chunk_process@plt>:
   10430:	add	ip, pc, #1048576	; 0x100000
   10434:	add	ip, ip, #20480	; 0x5000
   10438:	ldr	pc, [ip, #3748]!	; 0xea4

0001043c <myhtml_stream_create@plt>:
   1043c:	add	ip, pc, #1048576	; 0x100000
   10440:	add	ip, ip, #20480	; 0x5000
   10444:	ldr	pc, [ip, #3740]!	; 0xe9c

00010448 <myhtml_tree_tags_close_p@plt>:
   10448:	add	ip, pc, #1048576	; 0x100000
   1044c:	add	ip, ip, #20480	; 0x5000
   10450:	ldr	pc, [ip, #3732]!	; 0xe94

00010454 <mcsimple_init@plt>:
   10454:	add	ip, pc, #1048576	; 0x100000
   10458:	add	ip, ip, #20480	; 0x5000
   1045c:	ldr	pc, [ip, #3724]!	; 0xe8c

00010460 <myencoding_string_append@plt>:
   10460:	add	ip, pc, #1048576	; 0x100000
   10464:	add	ip, ip, #20480	; 0x5000
   10468:	ldr	pc, [ip, #3716]!	; 0xe84

0001046c <myhtml_stream_buffer_clean@plt>:
   1046c:	add	ip, pc, #1048576	; 0x100000
   10470:	add	ip, ip, #20480	; 0x5000
   10474:	ldr	pc, [ip, #3708]!	; 0xe7c

00010478 <mycore_utils_avl_tree_rotate_for_delete@plt>:
   10478:	add	ip, pc, #1048576	; 0x100000
   1047c:	add	ip, ip, #20480	; 0x5000
   10480:	ldr	pc, [ip, #3700]!	; 0xe74

00010484 <myhtml_token_merged_two_token_string@plt>:
   10484:	add	ip, pc, #1048576	; 0x100000
   10488:	add	ip, ip, #20480	; 0x5000
   1048c:	ldr	pc, [ip, #3692]!	; 0xe6c

00010490 <myhtml_attribute_value@plt>:
   10490:	add	ip, pc, #1048576	; 0x100000
   10494:	add	ip, ip, #20480	; 0x5000
   10498:	ldr	pc, [ip, #3684]!	; 0xe64

0001049c <myhtml_token_strict_doctype_by_token@plt>:
   1049c:	add	ip, pc, #1048576	; 0x100000
   104a0:	add	ip, ip, #20480	; 0x5000
   104a4:	ldr	pc, [ip, #3676]!	; 0xe5c

000104a8 <mchar_async_init@plt>:
   104a8:	add	ip, pc, #1048576	; 0x100000
   104ac:	add	ip, ip, #20480	; 0x5000
   104b0:	ldr	pc, [ip, #3668]!	; 0xe54

000104b4 <mycore_string_crop_whitespace_from_begin@plt>:
   104b4:	add	ip, pc, #1048576	; 0x100000
   104b8:	add	ip, ip, #20480	; 0x5000
   104bc:	ldr	pc, [ip, #3660]!	; 0xe4c

000104c0 <mythread_resume@plt>:
   104c0:	add	ip, pc, #1048576	; 0x100000
   104c4:	add	ip, ip, #20480	; 0x5000
   104c8:	ldr	pc, [ip, #3652]!	; 0xe44

000104cc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>:
   104cc:	add	ip, pc, #1048576	; 0x100000
   104d0:	add	ip, ip, #20480	; 0x5000
   104d4:	ldr	pc, [ip, #3644]!	; 0xe3c

000104d8 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>:
   104d8:	add	ip, pc, #1048576	; 0x100000
   104dc:	add	ip, ip, #20480	; 0x5000
   104e0:	ldr	pc, [ip, #3636]!	; 0xe34

000104e4 <myhtml_create_stream_and_batch@plt>:
   104e4:	add	ip, pc, #1048576	; 0x100000
   104e8:	add	ip, ip, #20480	; 0x5000
   104ec:	ldr	pc, [ip, #3628]!	; 0xe2c

000104f0 <myhtml_data_process_entry_clean@plt>:
   104f0:	add	ip, pc, #1048576	; 0x100000
   104f4:	add	ip, ip, #20480	; 0x5000
   104f8:	ldr	pc, [ip, #3620]!	; 0xe24

000104fc <mcsync_spin_init@plt>:
   104fc:	add	ip, pc, #1048576	; 0x100000
   10500:	add	ip, ip, #20480	; 0x5000
   10504:	ldr	pc, [ip, #3612]!	; 0xe1c

00010508 <malloc@plt>:
   10508:	add	ip, pc, #1048576	; 0x100000
   1050c:	add	ip, ip, #20480	; 0x5000
   10510:	ldr	pc, [ip, #3604]!	; 0xe14

00010514 <mythread_check_status@plt>:
   10514:	add	ip, pc, #1048576	; 0x100000
   10518:	add	ip, ip, #20480	; 0x5000
   1051c:	ldr	pc, [ip, #3596]!	; 0xe0c

00010520 <myhtml_token_doctype_check_html_4_0@plt>:
   10520:	add	ip, pc, #1048576	; 0x100000
   10524:	add	ip, ip, #20480	; 0x5000
   10528:	ldr	pc, [ip, #3588]!	; 0xe04

0001052c <mycore_strcasecmp@plt>:
   1052c:	add	ip, pc, #1048576	; 0x100000
   10530:	add	ip, ip, #20480	; 0x5000
   10534:	ldr	pc, [ip, #3580]!	; 0xdfc

00010538 <mythread_queue_node_malloc_round@plt>:
   10538:	add	ip, pc, #1048576	; 0x100000
   1053c:	add	ip, ip, #20480	; 0x5000
   10540:	ldr	pc, [ip, #3572]!	; 0xdf4

00010544 <myhtml_tree_active_formatting_reconstruction@plt>:
   10544:	add	ip, pc, #1048576	; 0x100000
   10548:	add	ip, ip, #20480	; 0x5000
   1054c:	ldr	pc, [ip, #3564]!	; 0xdec

00010550 <myhtml_token_set_done@plt>:
   10550:	add	ip, pc, #1048576	; 0x100000
   10554:	add	ip, ip, #20480	; 0x5000
   10558:	ldr	pc, [ip, #3556]!	; 0xde4

0001055c <mcsync_spin_create@plt>:
   1055c:	add	ip, pc, #1048576	; 0x100000
   10560:	add	ip, ip, #20480	; 0x5000
   10564:	ldr	pc, [ip, #3548]!	; 0xddc

00010568 <mythread_thread_join@plt>:
   10568:	add	ip, pc, #1048576	; 0x100000
   1056c:	add	ip, ip, #20480	; 0x5000
   10570:	ldr	pc, [ip, #3540]!	; 0xdd4

00010574 <myhtml_token_attr_remove@plt>:
   10574:	add	ip, pc, #1048576	; 0x100000
   10578:	add	ip, ip, #20480	; 0x5000
   1057c:	ldr	pc, [ip, #3532]!	; 0xdcc

00010580 <myhtml_token_node_attr_copy@plt>:
   10580:	add	ip, pc, #1048576	; 0x100000
   10584:	add	ip, ip, #20480	; 0x5000
   10588:	ldr	pc, [ip, #3524]!	; 0xdc4

0001058c <mythread_quit@plt>:
   1058c:	add	ip, pc, #1048576	; 0x100000
   10590:	add	ip, ip, #20480	; 0x5000
   10594:	ldr	pc, [ip, #3516]!	; 0xdbc

00010598 <myhtml_batch_create@plt>:
   10598:	add	ip, pc, #1048576	; 0x100000
   1059c:	add	ip, ip, #20480	; 0x5000
   105a0:	ldr	pc, [ip, #3508]!	; 0xdb4

000105a4 <myhtml_parse_chunk_fragment@plt>:
   105a4:	add	ip, pc, #1048576	; 0x100000
   105a8:	add	ip, ip, #20480	; 0x5000
   105ac:	ldr	pc, [ip, #3500]!	; 0xdac

000105b0 <mcsync_spin_lock@plt>:
   105b0:	add	ip, pc, #1048576	; 0x100000
   105b4:	add	ip, ip, #20480	; 0x5000
   105b8:	ldr	pc, [ip, #3492]!	; 0xda4

000105bc <myhtml_token_clean@plt>:
   105bc:	add	ip, pc, #1048576	; 0x100000
   105c0:	add	ip, ip, #20480	; 0x5000
   105c4:	ldr	pc, [ip, #3484]!	; 0xd9c

000105c8 <mythread_queue_list_get_count@plt>:
   105c8:	add	ip, pc, #1048576	; 0x100000
   105cc:	add	ip, ip, #20480	; 0x5000
   105d0:	ldr	pc, [ip, #3476]!	; 0xd94

000105d4 <mythread_queue_list_see_for_done_by_thread@plt>:
   105d4:	add	ip, pc, #1048576	; 0x100000
   105d8:	add	ip, ip, #20480	; 0x5000
   105dc:	ldr	pc, [ip, #3468]!	; 0xd8c

000105e0 <__gmon_start__@plt>:
   105e0:	add	ip, pc, #1048576	; 0x100000
   105e4:	add	ip, ip, #20480	; 0x5000
   105e8:	ldr	pc, [ip, #3460]!	; 0xd84

000105ec <myhtml_tokenizer_pause@plt>:
   105ec:	add	ip, pc, #1048576	; 0x100000
   105f0:	add	ip, ip, #20480	; 0x5000
   105f4:	ldr	pc, [ip, #3452]!	; 0xd7c

000105f8 <myhtml_tokenizer_set_first_settings@plt>:
   105f8:	add	ip, pc, #1048576	; 0x100000
   105fc:	add	ip, ip, #20480	; 0x5000
   10600:	ldr	pc, [ip, #3444]!	; 0xd74

00010604 <myhtml_tree_temp_tag_name_init@plt>:
   10604:	add	ip, pc, #1048576	; 0x100000
   10608:	add	ip, ip, #20480	; 0x5000
   1060c:	ldr	pc, [ip, #3436]!	; 0xd6c

00010610 <mycore_string_init@plt>:
   10610:	add	ip, pc, #1048576	; 0x100000
   10614:	add	ip, ip, #20480	; 0x5000
   10618:	ldr	pc, [ip, #3428]!	; 0xd64

0001061c <myhtml_tree_node_find_parent_by_tag_id@plt>:
   1061c:	add	ip, pc, #1048576	; 0x100000
   10620:	add	ip, ip, #20480	; 0x5000
   10624:	ldr	pc, [ip, #3420]!	; 0xd5c

00010628 <myhtml_tree_current_node@plt>:
   10628:	add	ip, pc, #1048576	; 0x100000
   1062c:	add	ip, ip, #20480	; 0x5000
   10630:	ldr	pc, [ip, #3412]!	; 0xd54

00010634 <mythread_mutex_close@plt>:
   10634:	add	ip, pc, #1048576	; 0x100000
   10638:	add	ip, ip, #20480	; 0x5000
   1063c:	ldr	pc, [ip, #3404]!	; 0xd4c

00010640 <myhtml_insertion_mode_in_body@plt>:
   10640:	add	ip, pc, #1048576	; 0x100000
   10644:	add	ip, ip, #20480	; 0x5000
   10648:	ldr	pc, [ip, #3396]!	; 0xd44

0001064c <myhtml_tree_active_formatting_between_last_marker@plt>:
   1064c:	add	ip, pc, #1048576	; 0x100000
   10650:	add	ip, ip, #20480	; 0x5000
   10654:	ldr	pc, [ip, #3388]!	; 0xd3c

00010658 <mctree_create@plt>:
   10658:	add	ip, pc, #1048576	; 0x100000
   1065c:	add	ip, ip, #20480	; 0x5000
   10660:	ldr	pc, [ip, #3380]!	; 0xd34

00010664 <myhtml_token_doctype_check_xhtml_1_0@plt>:
   10664:	add	ip, pc, #1048576	; 0x100000
   10668:	add	ip, ip, #20480	; 0x5000
   1066c:	ldr	pc, [ip, #3372]!	; 0xd2c

00010670 <strlen@plt>:
   10670:	add	ip, pc, #1048576	; 0x100000
   10674:	add	ip, ip, #20480	; 0x5000
   10678:	ldr	pc, [ip, #3364]!	; 0xd24

0001067c <myhtml_token_node_wait_for_done@plt>:
   1067c:	add	ip, pc, #1048576	; 0x100000
   10680:	add	ip, ip, #20480	; 0x5000
   10684:	ldr	pc, [ip, #3356]!	; 0xd1c

00010688 <mycore_string_append_lowercase@plt>:
   10688:	add	ip, pc, #1048576	; 0x100000
   1068c:	add	ip, ip, #20480	; 0x5000
   10690:	ldr	pc, [ip, #3348]!	; 0xd14

00010694 <myhtml_token_node_attr_copy_with_check@plt>:
   10694:	add	ip, pc, #1048576	; 0x100000
   10698:	add	ip, ip, #20480	; 0x5000
   1069c:	ldr	pc, [ip, #3340]!	; 0xd0c

000106a0 <myhtml_encoding_set@plt>:
   106a0:	add	ip, pc, #1048576	; 0x100000
   106a4:	add	ip, ip, #20480	; 0x5000
   106a8:	ldr	pc, [ip, #3332]!	; 0xd04

000106ac <mythread_queue_init@plt>:
   106ac:	add	ip, pc, #1048576	; 0x100000
   106b0:	add	ip, ip, #20480	; 0x5000
   106b4:	ldr	pc, [ip, #3324]!	; 0xcfc

000106b8 <myhtml_tree_node_add_child@plt>:
   106b8:	add	ip, pc, #1048576	; 0x100000
   106bc:	add	ip, ip, #20480	; 0x5000
   106c0:	ldr	pc, [ip, #3316]!	; 0xcf4

000106c4 <mycore_utils_avl_tree_node_set_height@plt>:
   106c4:	add	ip, pc, #1048576	; 0x100000
   106c8:	add	ip, ip, #20480	; 0x5000
   106cc:	ldr	pc, [ip, #3308]!	; 0xcec

000106d0 <myhtml_tree_clean@plt>:
   106d0:	add	ip, pc, #1048576	; 0x100000
   106d4:	add	ip, ip, #20480	; 0x5000
   106d8:	ldr	pc, [ip, #3300]!	; 0xce4

000106dc <myhtml_tree_generate_implied_end_tags@plt>:
   106dc:	add	ip, pc, #1048576	; 0x100000
   106e0:	add	ip, ip, #20480	; 0x5000
   106e4:	ldr	pc, [ip, #3292]!	; 0xcdc

000106e8 <mchar_async_node_clean@plt>:
   106e8:	add	ip, pc, #1048576	; 0x100000
   106ec:	add	ip, ip, #20480	; 0x5000
   106f0:	ldr	pc, [ip, #3284]!	; 0xcd4

000106f4 <myhtml_tree_list_destroy@plt>:
   106f4:	add	ip, pc, #1048576	; 0x100000
   106f8:	add	ip, ip, #20480	; 0x5000
   106fc:	ldr	pc, [ip, #3276]!	; 0xccc

00010700 <myhtml_serialization_node_callback@plt>:
   10700:	add	ip, pc, #1048576	; 0x100000
   10704:	add	ip, ip, #20480	; 0x5000
   10708:	ldr	pc, [ip, #3268]!	; 0xcc4

0001070c <myencoding_detect_by_trigram@plt>:
   1070c:	add	ip, pc, #1048576	; 0x100000
   10710:	add	ip, ip, #20480	; 0x5000
   10714:	ldr	pc, [ip, #3260]!	; 0xcbc

00010718 <mchar_async_free@plt>:
   10718:	add	ip, pc, #1048576	; 0x100000
   1071c:	add	ip, ip, #20480	; 0x5000
   10720:	ldr	pc, [ip, #3252]!	; 0xcb4

00010724 <mchar_async_cache_clean@plt>:
   10724:	add	ip, pc, #1048576	; 0x100000
   10728:	add	ip, ip, #20480	; 0x5000
   1072c:	ldr	pc, [ip, #3244]!	; 0xcac

00010730 <myhtml_tree_reset_insertion_mode_appropriately@plt>:
   10730:	add	ip, pc, #1048576	; 0x100000
   10734:	add	ip, ip, #20480	; 0x5000
   10738:	ldr	pc, [ip, #3236]!	; 0xca4

0001073c <mcsimple_malloc@plt>:
   1073c:	add	ip, pc, #1048576	; 0x100000
   10740:	add	ip, ip, #20480	; 0x5000
   10744:	ldr	pc, [ip, #3228]!	; 0xc9c

00010748 <mctree_search_lowercase@plt>:
   10748:	add	ip, pc, #1048576	; 0x100000
   1074c:	add	ip, ip, #20480	; 0x5000
   10750:	ldr	pc, [ip, #3220]!	; 0xc94

00010754 <myhtml_data_process@plt>:
   10754:	add	ip, pc, #1048576	; 0x100000
   10758:	add	ip, ip, #20480	; 0x5000
   1075c:	ldr	pc, [ip, #3212]!	; 0xc8c

00010760 <myhtml_token_attr_copy@plt>:
   10760:	add	ip, pc, #1048576	; 0x100000
   10764:	add	ip, ip, #20480	; 0x5000
   10768:	ldr	pc, [ip, #3204]!	; 0xc84

0001076c <myhtml_tree_node_insert_by_node@plt>:
   1076c:	add	ip, pc, #1048576	; 0x100000
   10770:	add	ip, ip, #20480	; 0x5000
   10774:	ldr	pc, [ip, #3196]!	; 0xc7c

00010778 <mcobject_init@plt>:
   10778:	add	ip, pc, #1048576	; 0x100000
   1077c:	add	ip, ip, #20480	; 0x5000
   10780:	ldr	pc, [ip, #3188]!	; 0xc74

00010784 <myhtml_token_destroy@plt>:
   10784:	add	ip, pc, #1048576	; 0x100000
   10788:	add	ip, ip, #20480	; 0x5000
   1078c:	ldr	pc, [ip, #3180]!	; 0xc6c

00010790 <myhtml_destroy_marker@plt>:
   10790:	add	ip, pc, #1048576	; 0x100000
   10794:	add	ip, ip, #20480	; 0x5000
   10798:	ldr	pc, [ip, #3172]!	; 0xc64

0001079c <pthread_attr_init@plt>:
   1079c:	add	ip, pc, #1048576	; 0x100000
   107a0:	add	ip, ip, #20480	; 0x5000
   107a4:	ldr	pc, [ip, #3164]!	; 0xc5c

000107a8 <myhtml_attribute_free@plt>:
   107a8:	add	ip, pc, #1048576	; 0x100000
   107ac:	add	ip, ip, #20480	; 0x5000
   107b0:	ldr	pc, [ip, #3156]!	; 0xc54

000107b4 <myhtml_serialization_node_buffer@plt>:
   107b4:	add	ip, pc, #1048576	; 0x100000
   107b8:	add	ip, ip, #20480	; 0x5000
   107bc:	ldr	pc, [ip, #3148]!	; 0xc4c

000107c0 <myhtml_charef_find_by_pos@plt>:
   107c0:	add	ip, pc, #1048576	; 0x100000
   107c4:	add	ip, ip, #20480	; 0x5000
   107c8:	ldr	pc, [ip, #3140]!	; 0xc44

000107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>:
   107cc:	add	ip, pc, #1048576	; 0x100000
   107d0:	add	ip, ip, #20480	; 0x5000
   107d4:	ldr	pc, [ip, #3132]!	; 0xc3c

000107d8 <mythread_queue_list_create@plt>:
   107d8:	add	ip, pc, #1048576	; 0x100000
   107dc:	add	ip, ip, #20480	; 0x5000
   107e0:	ldr	pc, [ip, #3124]!	; 0xc34

000107e4 <myhtml_token_attr_delete_all@plt>:
   107e4:	add	ip, pc, #1048576	; 0x100000
   107e8:	add	ip, ip, #20480	; 0x5000
   107ec:	ldr	pc, [ip, #3116]!	; 0xc2c

000107f0 <myhtml_token_node_attr_append_with_convert_encoding@plt>:
   107f0:	add	ip, pc, #1048576	; 0x100000
   107f4:	add	ip, ip, #20480	; 0x5000
   107f8:	ldr	pc, [ip, #3108]!	; 0xc24

000107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>:
   107fc:	add	ip, pc, #1048576	; 0x100000
   10800:	add	ip, ip, #20480	; 0x5000
   10804:	ldr	pc, [ip, #3100]!	; 0xc1c

00010808 <myhtml_stream_buffer_entry_init@plt>:
   10808:	add	ip, pc, #1048576	; 0x100000
   1080c:	add	ip, ip, #20480	; 0x5000
   10810:	ldr	pc, [ip, #3092]!	; 0xc14

00010814 <myhtml_tree_active_formatting_append_with_check@plt>:
   10814:	add	ip, pc, #1048576	; 0x100000
   10818:	add	ip, ip, #20480	; 0x5000
   1081c:	ldr	pc, [ip, #3084]!	; 0xc0c

00010820 <myhtml_tree_active_formatting_clean@plt>:
   10820:	add	ip, pc, #1048576	; 0x100000
   10824:	add	ip, ip, #20480	; 0x5000
   10828:	ldr	pc, [ip, #3076]!	; 0xc04

0001082c <myencoding_get_function_by_id@plt>:
   1082c:	add	ip, pc, #1048576	; 0x100000
   10830:	add	ip, ip, #20480	; 0x5000
   10834:	ldr	pc, [ip, #3068]!	; 0xbfc

00010838 <myencoding_extracting_character_encoding_from_charset_with_found@plt>:
   10838:	add	ip, pc, #1048576	; 0x100000
   1083c:	add	ip, ip, #20480	; 0x5000
   10840:	ldr	pc, [ip, #3060]!	; 0xbf4

00010844 <myhtml_tree_active_formatting_remove_by_index@plt>:
   10844:	add	ip, pc, #1048576	; 0x100000
   10848:	add	ip, ip, #20480	; 0x5000
   1084c:	ldr	pc, [ip, #3052]!	; 0xbec

00010850 <mcsync_lock@plt>:
   10850:	add	ip, pc, #1048576	; 0x100000
   10854:	add	ip, ip, #20480	; 0x5000
   10858:	ldr	pc, [ip, #3044]!	; 0xbe4

0001085c <myhtml_tree_list_init@plt>:
   1085c:	add	ip, pc, #1048576	; 0x100000
   10860:	add	ip, ip, #20480	; 0x5000
   10864:	ldr	pc, [ip, #3036]!	; 0xbdc

00010868 <mcsync_init@plt>:
   10868:	add	ip, pc, #1048576	; 0x100000
   1086c:	add	ip, ip, #20480	; 0x5000
   10870:	ldr	pc, [ip, #3028]!	; 0xbd4

00010874 <myhtml_tree_active_formatting_is_marker@plt>:
   10874:	add	ip, pc, #1048576	; 0x100000
   10878:	add	ip, ip, #20480	; 0x5000
   1087c:	ldr	pc, [ip, #3020]!	; 0xbcc

00010880 <mcobject_async_node_clean@plt>:
   10880:	add	ip, pc, #1048576	; 0x100000
   10884:	add	ip, ip, #20480	; 0x5000
   10888:	ldr	pc, [ip, #3012]!	; 0xbc4

0001088c <mchar_async_cache_destroy@plt>:
   1088c:	add	ip, pc, #1048576	; 0x100000
   10890:	add	ip, ip, #20480	; 0x5000
   10894:	ldr	pc, [ip, #3004]!	; 0xbbc

00010898 <myhtml_tree_adoption_agency_algorithm@plt>:
   10898:	add	ip, pc, #1048576	; 0x100000
   1089c:	add	ip, ip, #20480	; 0x5000
   108a0:	ldr	pc, [ip, #2996]!	; 0xbb4

000108a4 <myhtml_tree_active_formatting_remove@plt>:
   108a4:	add	ip, pc, #1048576	; 0x100000
   108a8:	add	ip, ip, #20480	; 0x5000
   108ac:	ldr	pc, [ip, #2988]!	; 0xbac

000108b0 <memset@plt>:
   108b0:	add	ip, pc, #1048576	; 0x100000
   108b4:	add	ip, ip, #20480	; 0x5000
   108b8:	ldr	pc, [ip, #2980]!	; 0xba4

000108bc <myhread_entry_create@plt>:
   108bc:	add	ip, pc, #1048576	; 0x100000
   108c0:	add	ip, ip, #20480	; 0x5000
   108c4:	ldr	pc, [ip, #2972]!	; 0xb9c

000108c8 <mcsync_mutex_create@plt>:
   108c8:	add	ip, pc, #1048576	; 0x100000
   108cc:	add	ip, ip, #20480	; 0x5000
   108d0:	ldr	pc, [ip, #2964]!	; 0xb94

000108d4 <mycore_string_append@plt>:
   108d4:	add	ip, pc, #1048576	; 0x100000
   108d8:	add	ip, ip, #20480	; 0x5000
   108dc:	ldr	pc, [ip, #2956]!	; 0xb8c

000108e0 <mcobject_async_chunk_malloc_without_lock@plt>:
   108e0:	add	ip, pc, #1048576	; 0x100000
   108e4:	add	ip, ip, #20480	; 0x5000
   108e8:	ldr	pc, [ip, #2948]!	; 0xb84

000108ec <strncpy@plt>:
   108ec:	add	ip, pc, #1048576	; 0x100000
   108f0:	add	ip, ip, #20480	; 0x5000
   108f4:	ldr	pc, [ip, #2940]!	; 0xb7c

000108f8 <pthread_cancel@plt>:
   108f8:	add	ip, pc, #1048576	; 0x100000
   108fc:	add	ip, ip, #20480	; 0x5000
   10900:	ldr	pc, [ip, #2932]!	; 0xb74

00010904 <myhtml_token_attr_create@plt>:
   10904:	add	ip, pc, #1048576	; 0x100000
   10908:	add	ip, ip, #20480	; 0x5000
   1090c:	ldr	pc, [ip, #2924]!	; 0xb6c

00010910 <mchar_async_malloc@plt>:
   10910:	add	ip, pc, #1048576	; 0x100000
   10914:	add	ip, ip, #20480	; 0x5000
   10918:	ldr	pc, [ip, #2916]!	; 0xb64

0001091c <myhtml_tag_static_search@plt>:
   1091c:	add	ip, pc, #1048576	; 0x100000
   10920:	add	ip, ip, #20480	; 0x5000
   10924:	ldr	pc, [ip, #2908]!	; 0xb5c

00010928 <myhtml_data_process_end@plt>:
   10928:	add	ip, pc, #1048576	; 0x100000
   1092c:	add	ip, ip, #20480	; 0x5000
   10930:	ldr	pc, [ip, #2900]!	; 0xb54

00010934 <myhtml_stream_buffer_add_entry@plt>:
   10934:	add	ip, pc, #1048576	; 0x100000
   10938:	add	ip, ip, #20480	; 0x5000
   1093c:	ldr	pc, [ip, #2892]!	; 0xb4c

00010940 <myhtml_tree_temp_tag_name_destroy@plt>:
   10940:	add	ip, pc, #1048576	; 0x100000
   10944:	add	ip, ip, #20480	; 0x5000
   10948:	ldr	pc, [ip, #2884]!	; 0xb44

0001094c <myhtml_tree_open_elements_pop_until@plt>:
   1094c:	add	ip, pc, #1048576	; 0x100000
   10950:	add	ip, ip, #20480	; 0x5000
   10954:	ldr	pc, [ip, #2876]!	; 0xb3c

00010958 <mctree_insert@plt>:
   10958:	add	ip, pc, #1048576	; 0x100000
   1095c:	add	ip, ip, #20480	; 0x5000
   10960:	ldr	pc, [ip, #2868]!	; 0xb34

00010964 <mycore_string_realloc@plt>:
   10964:	add	ip, pc, #1048576	; 0x100000
   10968:	add	ip, ip, #20480	; 0x5000
   1096c:	ldr	pc, [ip, #2860]!	; 0xb2c

00010970 <myhtml_tree_node_insert@plt>:
   10970:	add	ip, pc, #1048576	; 0x100000
   10974:	add	ip, ip, #20480	; 0x5000
   10978:	ldr	pc, [ip, #2852]!	; 0xb24

0001097c <mythread_queue_list_entry_wait_for_done@plt>:
   1097c:	add	ip, pc, #1048576	; 0x100000
   10980:	add	ip, ip, #20480	; 0x5000
   10984:	ldr	pc, [ip, #2844]!	; 0xb1c

00010988 <myhtml_tree_open_elements_append@plt>:
   10988:	add	ip, pc, #1048576	; 0x100000
   1098c:	add	ip, ip, #20480	; 0x5000
   10990:	ldr	pc, [ip, #2836]!	; 0xb14

00010994 <mcsimple_init_list_entries@plt>:
   10994:	add	ip, pc, #1048576	; 0x100000
   10998:	add	ip, ip, #20480	; 0x5000
   1099c:	ldr	pc, [ip, #2828]!	; 0xb0c

000109a0 <mythread_queue_list_entry_clean@plt>:
   109a0:	add	ip, pc, #1048576	; 0x100000
   109a4:	add	ip, ip, #20480	; 0x5000
   109a8:	ldr	pc, [ip, #2820]!	; 0xb04

000109ac <mythread_destroy@plt>:
   109ac:	add	ip, pc, #1048576	; 0x100000
   109b0:	add	ip, ip, #20480	; 0x5000
   109b4:	ldr	pc, [ip, #2812]!	; 0xafc

000109b8 <myhtml_tree_token_list_init@plt>:
   109b8:	add	ip, pc, #1048576	; 0x100000
   109bc:	add	ip, ip, #20480	; 0x5000
   109c0:	ldr	pc, [ip, #2804]!	; 0xaf4

000109c4 <myhtml_tree_list_append_after_index@plt>:
   109c4:	add	ip, pc, #1048576	; 0x100000
   109c8:	add	ip, ip, #20480	; 0x5000
   109cc:	ldr	pc, [ip, #2796]!	; 0xaec

000109d0 <mchar_async_chunk_malloc@plt>:
   109d0:	add	ip, pc, #1048576	; 0x100000
   109d4:	add	ip, ip, #20480	; 0x5000
   109d8:	ldr	pc, [ip, #2788]!	; 0xae4

000109dc <myhtml_tree_template_insertion_pop@plt>:
   109dc:	add	ip, pc, #1048576	; 0x100000
   109e0:	add	ip, ip, #20480	; 0x5000
   109e4:	ldr	pc, [ip, #2780]!	; 0xadc

000109e8 <__mtree_search_to_start@plt>:
   109e8:	add	ip, pc, #1048576	; 0x100000
   109ec:	add	ip, ip, #20480	; 0x5000
   109f0:	ldr	pc, [ip, #2772]!	; 0xad4

000109f4 <mythread_thread_destroy@plt>:
   109f4:	add	ip, pc, #1048576	; 0x100000
   109f8:	add	ip, ip, #20480	; 0x5000
   109fc:	ldr	pc, [ip, #2764]!	; 0xacc

00010a00 <fclose@plt>:
   10a00:	add	ip, pc, #1048576	; 0x100000
   10a04:	add	ip, ip, #20480	; 0x5000
   10a08:	ldr	pc, [ip, #2756]!	; 0xac4

00010a0c <myhtml_token_node_create@plt>:
   10a0c:	add	ip, pc, #1048576	; 0x100000
   10a10:	add	ip, ip, #20480	; 0x5000
   10a14:	ldr	pc, [ip, #2748]!	; 0xabc

00010a18 <mycore_utils_avl_tree_node_balance@plt>:
   10a18:	add	ip, pc, #1048576	; 0x100000
   10a1c:	add	ip, ip, #20480	; 0x5000
   10a20:	ldr	pc, [ip, #2740]!	; 0xab4

00010a24 <myhtml_tag_get_by_id@plt>:
   10a24:	add	ip, pc, #1048576	; 0x100000
   10a28:	add	ip, ip, #20480	; 0x5000
   10a2c:	ldr	pc, [ip, #2732]!	; 0xaac

00010a30 <myhtml_tree_appropriate_place_inserting_in_tree@plt>:
   10a30:	add	ip, pc, #1048576	; 0x100000
   10a34:	add	ip, ip, #20480	; 0x5000
   10a38:	ldr	pc, [ip, #2724]!	; 0xaa4

00010a3c <myhtml_parse_chunk@plt>:
   10a3c:	add	ip, pc, #1048576	; 0x100000
   10a40:	add	ip, ip, #20480	; 0x5000
   10a44:	ldr	pc, [ip, #2716]!	; 0xa9c

00010a48 <mycore_utils_mhash_rebuld@plt>:
   10a48:	add	ip, pc, #1048576	; 0x100000
   10a4c:	add	ip, ip, #20480	; 0x5000
   10a50:	ldr	pc, [ip, #2708]!	; 0xa94

00010a54 <myhtml_charef_get_first_position@plt>:
   10a54:	add	ip, pc, #1048576	; 0x100000
   10a58:	add	ip, ip, #20480	; 0x5000
   10a5c:	ldr	pc, [ip, #2700]!	; 0xa8c

00010a60 <mcobject_malloc@plt>:
   10a60:	add	ip, pc, #1048576	; 0x100000
   10a64:	add	ip, ip, #20480	; 0x5000
   10a68:	ldr	pc, [ip, #2692]!	; 0xa84

00010a6c <myencoding_detect_unicode_has_end@plt>:
   10a6c:	add	ip, pc, #1048576	; 0x100000
   10a70:	add	ip, ip, #20480	; 0x5000
   10a74:	ldr	pc, [ip, #2684]!	; 0xa7c

00010a78 <mcsync_spin_clean@plt>:
   10a78:	add	ip, pc, #1048576	; 0x100000
   10a7c:	add	ip, ip, #20480	; 0x5000
   10a80:	ldr	pc, [ip, #2676]!	; 0xa74

00010a84 <mythread_queue_create@plt>:
   10a84:	add	ip, pc, #1048576	; 0x100000
   10a88:	add	ip, ip, #20480	; 0x5000
   10a8c:	ldr	pc, [ip, #2668]!	; 0xa6c

00010a90 <mcobject_async_node_add@plt>:
   10a90:	add	ip, pc, #1048576	; 0x100000
   10a94:	add	ip, ip, #20480	; 0x5000
   10a98:	ldr	pc, [ip, #2660]!	; 0xa64

00010a9c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>:
   10a9c:	add	ip, pc, #1048576	; 0x100000
   10aa0:	add	ip, ip, #20480	; 0x5000
   10aa4:	ldr	pc, [ip, #2652]!	; 0xa5c

00010aa8 <myhtml_is_html_node@plt>:
   10aa8:	add	ip, pc, #1048576	; 0x100000
   10aac:	add	ip, ip, #20480	; 0x5000
   10ab0:	ldr	pc, [ip, #2644]!	; 0xa54

00010ab4 <myhtml_init_marker@plt>:
   10ab4:	add	ip, pc, #1048576	; 0x100000
   10ab8:	add	ip, ip, #20480	; 0x5000
   10abc:	ldr	pc, [ip, #2636]!	; 0xa4c

00010ac0 <myhtml_tree_active_formatting_init@plt>:
   10ac0:	add	ip, pc, #1048576	; 0x100000
   10ac4:	add	ip, ip, #20480	; 0x5000
   10ac8:	ldr	pc, [ip, #2628]!	; 0xa44

00010acc <myhtml_parser_token_data_to_string@plt>:
   10acc:	add	ip, pc, #1048576	; 0x100000
   10ad0:	add	ip, ip, #20480	; 0x5000
   10ad4:	ldr	pc, [ip, #2620]!	; 0xa3c

00010ad8 <mythread_stop@plt>:
   10ad8:	add	ip, pc, #1048576	; 0x100000
   10adc:	add	ip, ip, #20480	; 0x5000
   10ae0:	ldr	pc, [ip, #2612]!	; 0xa34

00010ae4 <mythread_option_set@plt>:
   10ae4:	add	ip, pc, #1048576	; 0x100000
   10ae8:	add	ip, ip, #20480	; 0x5000
   10aec:	ldr	pc, [ip, #2604]!	; 0xa2c

00010af0 <myhtml_tag_name_by_id@plt>:
   10af0:	add	ip, pc, #1048576	; 0x100000
   10af4:	add	ip, ip, #20480	; 0x5000
   10af8:	ldr	pc, [ip, #2596]!	; 0xa24

00010afc <mythread_mutex_create@plt>:
   10afc:	add	ip, pc, #1048576	; 0x100000
   10b00:	add	ip, ip, #20480	; 0x5000
   10b04:	ldr	pc, [ip, #2588]!	; 0xa1c

00010b08 <myhtml_attribute_key@plt>:
   10b08:	add	ip, pc, #1048576	; 0x100000
   10b0c:	add	ip, ip, #20480	; 0x5000
   10b10:	ldr	pc, [ip, #2580]!	; 0xa14

00010b14 <mchar_sync_chunk_find_by_size@plt>:
   10b14:	add	ip, pc, #1048576	; 0x100000
   10b18:	add	ip, ip, #20480	; 0x5000
   10b1c:	ldr	pc, [ip, #2572]!	; 0xa0c

00010b20 <mcobject_async_destroy@plt>:
   10b20:	add	ip, pc, #1048576	; 0x100000
   10b24:	add	ip, ip, #20480	; 0x5000
   10b28:	ldr	pc, [ip, #2564]!	; 0xa04

00010b2c <myhtml_token_attr_compare@plt>:
   10b2c:	add	ip, pc, #1048576	; 0x100000
   10b30:	add	ip, ip, #20480	; 0x5000
   10b34:	ldr	pc, [ip, #2556]!	; 0x9fc

00010b38 <_myhtml_get_nodes_by_attribute_value@plt>:
   10b38:	add	ip, pc, #1048576	; 0x100000
   10b3c:	add	ip, ip, #20480	; 0x5000
   10b40:	ldr	pc, [ip, #2548]!	; 0x9f4

00010b44 <myhtml_tokenizer_set_state@plt>:
   10b44:	add	ip, pc, #1048576	; 0x100000
   10b48:	add	ip, ip, #20480	; 0x5000
   10b4c:	ldr	pc, [ip, #2540]!	; 0x9ec

00010b50 <mcsync_mutex_init@plt>:
   10b50:	add	ip, pc, #1048576	; 0x100000
   10b54:	add	ip, ip, #20480	; 0x5000
   10b58:	ldr	pc, [ip, #2532]!	; 0x9e4

00010b5c <myhtml_tag_init@plt>:
   10b5c:	add	ip, pc, #1048576	; 0x100000
   10b60:	add	ip, ip, #20480	; 0x5000
   10b64:	ldr	pc, [ip, #2524]!	; 0x9dc

00010b68 <pthread_join@plt>:
   10b68:	add	ip, pc, #1048576	; 0x100000
   10b6c:	add	ip, ip, #20480	; 0x5000
   10b70:	ldr	pc, [ip, #2516]!	; 0x9d4

00010b74 <myhtml_tag_get_by_name@plt>:
   10b74:	add	ip, pc, #1048576	; 0x100000
   10b78:	add	ip, ip, #20480	; 0x5000
   10b7c:	ldr	pc, [ip, #2508]!	; 0x9cc

00010b80 <myhtml_stream_buffer_current_entry@plt>:
   10b80:	add	ip, pc, #1048576	; 0x100000
   10b84:	add	ip, ip, #20480	; 0x5000
   10b88:	ldr	pc, [ip, #2500]!	; 0x9c4

00010b8c <myencoding_prescan_stream_to_determine_encoding_with_found@plt>:
   10b8c:	add	ip, pc, #1048576	; 0x100000
   10b90:	add	ip, ip, #20480	; 0x5000
   10b94:	ldr	pc, [ip, #2492]!	; 0x9bc

00010b98 <myhtml_tokenizer_chunk_with_stream_buffer@plt>:
   10b98:	add	ip, pc, #1048576	; 0x100000
   10b9c:	add	ip, ip, #20480	; 0x5000
   10ba0:	ldr	pc, [ip, #2484]!	; 0x9b4

00010ba4 <mchar_async_chunk_malloc_without_lock@plt>:
   10ba4:	add	ip, pc, #1048576	; 0x100000
   10ba8:	add	ip, ip, #20480	; 0x5000
   10bac:	ldr	pc, [ip, #2476]!	; 0x9ac

00010bb0 <myhtml_tree_open_elements_init@plt>:
   10bb0:	add	ip, pc, #1048576	; 0x100000
   10bb4:	add	ip, ip, #20480	; 0x5000
   10bb8:	ldr	pc, [ip, #2468]!	; 0x9a4

00010bbc <mcobject_async_malloc@plt>:
   10bbc:	add	ip, pc, #1048576	; 0x100000
   10bc0:	add	ip, ip, #20480	; 0x5000
   10bc4:	ldr	pc, [ip, #2460]!	; 0x99c

00010bc8 <mchar_async_clean@plt>:
   10bc8:	add	ip, pc, #1048576	; 0x100000
   10bcc:	add	ip, ip, #20480	; 0x5000
   10bd0:	ldr	pc, [ip, #2452]!	; 0x994

00010bd4 <myencoding_decode_shared_utf_16@plt>:
   10bd4:	add	ip, pc, #1048576	; 0x100000
   10bd8:	add	ip, ip, #20480	; 0x5000
   10bdc:	ldr	pc, [ip, #2444]!	; 0x98c

00010be0 <myhtml_token_adjust_foreign_attributes@plt>:
   10be0:	add	ip, pc, #1048576	; 0x100000
   10be4:	add	ip, ip, #20480	; 0x5000
   10be8:	ldr	pc, [ip, #2436]!	; 0x984

00010bec <myhtml_rules_init@plt>:
   10bec:	add	ip, pc, #1048576	; 0x100000
   10bf0:	add	ip, ip, #20480	; 0x5000
   10bf4:	ldr	pc, [ip, #2428]!	; 0x97c

00010bf8 <myencoding_decode_gb18030@plt>:
   10bf8:	add	ip, pc, #1048576	; 0x100000
   10bfc:	add	ip, ip, #20480	; 0x5000
   10c00:	ldr	pc, [ip, #2420]!	; 0x974

00010c04 <mythread_nanosleep_destroy@plt>:
   10c04:	add	ip, pc, #1048576	; 0x100000
   10c08:	add	ip, ip, #20480	; 0x5000
   10c0c:	ldr	pc, [ip, #2412]!	; 0x96c

00010c10 <mycore_utils_avl_tree_node_rotate_left@plt>:
   10c10:	add	ip, pc, #1048576	; 0x100000
   10c14:	add	ip, ip, #20480	; 0x5000
   10c18:	ldr	pc, [ip, #2404]!	; 0x964

00010c1c <myhtml_string_before_append_any_preprocessing@plt>:
   10c1c:	add	ip, pc, #1048576	; 0x100000
   10c20:	add	ip, ip, #20480	; 0x5000
   10c24:	ldr	pc, [ip, #2396]!	; 0x95c

00010c28 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>:
   10c28:	add	ip, pc, #1048576	; 0x100000
   10c2c:	add	ip, ip, #20480	; 0x5000
   10c30:	ldr	pc, [ip, #2388]!	; 0x954

00010c34 <mchar_async_cache_init@plt>:
   10c34:	add	ip, pc, #1048576	; 0x100000
   10c38:	add	ip, ip, #20480	; 0x5000
   10c3c:	ldr	pc, [ip, #2380]!	; 0x94c

00010c40 <myhtml_check_tag_parser@plt>:
   10c40:	add	ip, pc, #1048576	; 0x100000
   10c44:	add	ip, ip, #20480	; 0x5000
   10c48:	ldr	pc, [ip, #2372]!	; 0x944

00010c4c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>:
   10c4c:	add	ip, pc, #1048576	; 0x100000
   10c50:	add	ip, ip, #20480	; 0x5000
   10c54:	ldr	pc, [ip, #2364]!	; 0x93c

00010c58 <mchar_async_node_delete@plt>:
   10c58:	add	ip, pc, #1048576	; 0x100000
   10c5c:	add	ip, ip, #20480	; 0x5000
   10c60:	ldr	pc, [ip, #2356]!	; 0x934

00010c64 <mchar_async_crop_first_chars_without_cache@plt>:
   10c64:	add	ip, pc, #1048576	; 0x100000
   10c68:	add	ip, ip, #20480	; 0x5000
   10c6c:	ldr	pc, [ip, #2348]!	; 0x92c

00010c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>:
   10c70:	add	ip, pc, #1048576	; 0x100000
   10c74:	add	ip, ip, #20480	; 0x5000
   10c78:	ldr	pc, [ip, #2340]!	; 0x924

00010c7c <mchar_async_cache_add@plt>:
   10c7c:	add	ip, pc, #1048576	; 0x100000
   10c80:	add	ip, ip, #20480	; 0x5000
   10c84:	ldr	pc, [ip, #2332]!	; 0x91c

00010c88 <myencoding_string_append_chunk_lowercase_ascii@plt>:
   10c88:	add	ip, pc, #1048576	; 0x100000
   10c8c:	add	ip, ip, #20480	; 0x5000
   10c90:	ldr	pc, [ip, #2324]!	; 0x914

00010c94 <mycore_malloc@plt>:
   10c94:	add	ip, pc, #1048576	; 0x100000
   10c98:	add	ip, ip, #20480	; 0x5000
   10c9c:	ldr	pc, [ip, #2316]!	; 0x90c

00010ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>:
   10ca0:	add	ip, pc, #1048576	; 0x100000
   10ca4:	add	ip, ip, #20480	; 0x5000
   10ca8:	ldr	pc, [ip, #2308]!	; 0x904

00010cac <mythread_queue_node_malloc_limit@plt>:
   10cac:	add	ip, pc, #1048576	; 0x100000
   10cb0:	add	ip, ip, #20480	; 0x5000
   10cb4:	ldr	pc, [ip, #2300]!	; 0x8fc

00010cb8 <myhtml_tree_node_insert_by_token@plt>:
   10cb8:	add	ip, pc, #1048576	; 0x100000
   10cbc:	add	ip, ip, #20480	; 0x5000
   10cc0:	ldr	pc, [ip, #2292]!	; 0x8f4

00010cc4 <mctree_insert_after@plt>:
   10cc4:	add	ip, pc, #1048576	; 0x100000
   10cc8:	add	ip, ip, #20480	; 0x5000
   10ccc:	ldr	pc, [ip, #2284]!	; 0x8ec

00010cd0 <myencoding_by_name@plt>:
   10cd0:	add	ip, pc, #1048576	; 0x100000
   10cd4:	add	ip, ip, #20480	; 0x5000
   10cd8:	ldr	pc, [ip, #2276]!	; 0x8e4

00010cdc <myhtml_tree_template_insertion_init@plt>:
   10cdc:	add	ip, pc, #1048576	; 0x100000
   10ce0:	add	ip, ip, #20480	; 0x5000
   10ce4:	ldr	pc, [ip, #2268]!	; 0x8dc

00010ce8 <myhtml_tree_open_elements_destroy@plt>:
   10ce8:	add	ip, pc, #1048576	; 0x100000
   10cec:	add	ip, ip, #20480	; 0x5000
   10cf0:	ldr	pc, [ip, #2260]!	; 0x8d4

00010cf4 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>:
   10cf4:	add	ip, pc, #1048576	; 0x100000
   10cf8:	add	ip, ip, #20480	; 0x5000
   10cfc:	ldr	pc, [ip, #2252]!	; 0x8cc

00010d00 <myhtml_tree_node_free@plt>:
   10d00:	add	ip, pc, #1048576	; 0x100000
   10d04:	add	ip, ip, #20480	; 0x5000
   10d08:	ldr	pc, [ip, #2244]!	; 0x8c4

00010d0c <mythread_mutex_post@plt>:
   10d0c:	add	ip, pc, #1048576	; 0x100000
   10d10:	add	ip, ip, #20480	; 0x5000
   10d14:	ldr	pc, [ip, #2236]!	; 0x8bc

00010d18 <mycore_string_clean@plt>:
   10d18:	add	ip, pc, #1048576	; 0x100000
   10d1c:	add	ip, ip, #20480	; 0x5000
   10d20:	ldr	pc, [ip, #2228]!	; 0x8b4

00010d24 <mythread_queue_list_entry_make_batch@plt>:
   10d24:	add	ip, pc, #1048576	; 0x100000
   10d28:	add	ip, ip, #20480	; 0x5000
   10d2c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010d30 <myhtml_tag_create@plt>:
   10d30:	add	ip, pc, #1048576	; 0x100000
   10d34:	add	ip, ip, #20480	; 0x5000
   10d38:	ldr	pc, [ip, #2212]!	; 0x8a4

00010d3c <myhtml_tree_close_cell@plt>:
   10d3c:	add	ip, pc, #1048576	; 0x100000
   10d40:	add	ip, ip, #20480	; 0x5000
   10d44:	ldr	pc, [ip, #2204]!	; 0x89c

00010d48 <myhtml_tree_adjusted_current_node@plt>:
   10d48:	add	ip, pc, #1048576	; 0x100000
   10d4c:	add	ip, ip, #20480	; 0x5000
   10d50:	ldr	pc, [ip, #2196]!	; 0x894

00010d54 <myencoding_detect_russian_has_end@plt>:
   10d54:	add	ip, pc, #1048576	; 0x100000
   10d58:	add	ip, ip, #20480	; 0x5000
   10d5c:	ldr	pc, [ip, #2188]!	; 0x88c

00010d60 <myhtml_rules_check_for_first_newline@plt>:
   10d60:	add	ip, pc, #1048576	; 0x100000
   10d64:	add	ip, ip, #20480	; 0x5000
   10d68:	ldr	pc, [ip, #2180]!	; 0x884

00010d6c <myhtml_stream_buffer_init@plt>:
   10d6c:	add	ip, pc, #1048576	; 0x100000
   10d70:	add	ip, ip, #20480	; 0x5000
   10d74:	ldr	pc, [ip, #2172]!	; 0x87c

00010d78 <mythread_queue_node_clean@plt>:
   10d78:	add	ip, pc, #1048576	; 0x100000
   10d7c:	add	ip, ip, #20480	; 0x5000
   10d80:	ldr	pc, [ip, #2164]!	; 0x874

00010d84 <myhtml_tree_node_insert_foreign_element@plt>:
   10d84:	add	ip, pc, #1048576	; 0x100000
   10d88:	add	ip, ip, #20480	; 0x5000
   10d8c:	ldr	pc, [ip, #2156]!	; 0x86c

00010d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>:
   10d90:	add	ip, pc, #1048576	; 0x100000
   10d94:	add	ip, ip, #20480	; 0x5000
   10d98:	ldr	pc, [ip, #2148]!	; 0x864

00010d9c <mythread_mutex_wait@plt>:
   10d9c:	add	ip, pc, #1048576	; 0x100000
   10da0:	add	ip, ip, #20480	; 0x5000
   10da4:	ldr	pc, [ip, #2140]!	; 0x85c

00010da8 <mchar_async_destroy@plt>:
   10da8:	add	ip, pc, #1048576	; 0x100000
   10dac:	add	ip, ip, #20480	; 0x5000
   10db0:	ldr	pc, [ip, #2132]!	; 0x854

00010db4 <mycore_utils_mhash_add_with_choice@plt>:
   10db4:	add	ip, pc, #1048576	; 0x100000
   10db8:	add	ip, ip, #20480	; 0x5000
   10dbc:	ldr	pc, [ip, #2124]!	; 0x84c

00010dc0 <myhtml_tree_node_delete@plt>:
   10dc0:	add	ip, pc, #1048576	; 0x100000
   10dc4:	add	ip, ip, #20480	; 0x5000
   10dc8:	ldr	pc, [ip, #2116]!	; 0x844

00010dcc <mycore_free@plt>:
   10dcc:	add	ip, pc, #1048576	; 0x100000
   10dd0:	add	ip, ip, #20480	; 0x5000
   10dd4:	ldr	pc, [ip, #2108]!	; 0x83c

00010dd8 <mythread_queue_list_wait_for_done@plt>:
   10dd8:	add	ip, pc, #1048576	; 0x100000
   10ddc:	add	ip, ip, #20480	; 0x5000
   10de0:	ldr	pc, [ip, #2100]!	; 0x834

00010de4 <mycore_string_whitespace_from_begin@plt>:
   10de4:	add	ip, pc, #1048576	; 0x100000
   10de8:	add	ip, ip, #20480	; 0x5000
   10dec:	ldr	pc, [ip, #2092]!	; 0x82c

00010df0 <myhtml_tree_node_remove@plt>:
   10df0:	add	ip, pc, #1048576	; 0x100000
   10df4:	add	ip, ip, #20480	; 0x5000
   10df8:	ldr	pc, [ip, #2084]!	; 0x824

00010dfc <myhtml_collection_check_size@plt>:
   10dfc:	add	ip, pc, #1048576	; 0x100000
   10e00:	add	ip, ip, #20480	; 0x5000
   10e04:	ldr	pc, [ip, #2076]!	; 0x81c

00010e08 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>:
   10e08:	add	ip, pc, #1048576	; 0x100000
   10e0c:	add	ip, ip, #20480	; 0x5000
   10e10:	ldr	pc, [ip, #2068]!	; 0x814

00010e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>:
   10e14:	add	ip, pc, #1048576	; 0x100000
   10e18:	add	ip, ip, #20480	; 0x5000
   10e1c:	ldr	pc, [ip, #2060]!	; 0x80c

00010e20 <myhtml_tree_open_elements_clean@plt>:
   10e20:	add	ip, pc, #1048576	; 0x100000
   10e24:	add	ip, ip, #20480	; 0x5000
   10e28:	ldr	pc, [ip, #2052]!	; 0x804

00010e2c <myhtml_tree_node_insert_doctype@plt>:
   10e2c:	add	ip, pc, #1048576	; 0x100000
   10e30:	add	ip, ip, #20480	; 0x5000
   10e34:	ldr	pc, [ip, #2044]!	; 0x7fc

00010e38 <myhtml_tree_template_insertion_destroy@plt>:
   10e38:	add	ip, pc, #1048576	; 0x100000
   10e3c:	add	ip, ip, #20480	; 0x5000
   10e40:	ldr	pc, [ip, #2036]!	; 0x7f4

00010e44 <myhtml_tag_destroy@plt>:
   10e44:	add	ip, pc, #1048576	; 0x100000
   10e48:	add	ip, ip, #20480	; 0x5000
   10e4c:	ldr	pc, [ip, #2028]!	; 0x7ec

00010e50 <mcsync_mutex_clean@plt>:
   10e50:	add	ip, pc, #1048576	; 0x100000
   10e54:	add	ip, ip, #20480	; 0x5000
   10e58:	ldr	pc, [ip, #2020]!	; 0x7e4

00010e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>:
   10e5c:	add	ip, pc, #1048576	; 0x100000
   10e60:	add	ip, ip, #20480	; 0x5000
   10e64:	ldr	pc, [ip, #2012]!	; 0x7dc

00010e68 <myhtml_serialization_tree_callback@plt>:
   10e68:	add	ip, pc, #1048576	; 0x100000
   10e6c:	add	ip, ip, #20480	; 0x5000
   10e70:	ldr	pc, [ip, #2004]!	; 0x7d4

00010e74 <myhtml_stream_buffer_create@plt>:
   10e74:	add	ip, pc, #1048576	; 0x100000
   10e78:	add	ip, ip, #20480	; 0x5000
   10e7c:	ldr	pc, [ip, #1996]!	; 0x7cc

00010e80 <myhtml_tree_appropriate_place_inserting@plt>:
   10e80:	add	ip, pc, #1048576	; 0x100000
   10e84:	add	ip, ip, #20480	; 0x5000
   10e88:	ldr	pc, [ip, #1988]!	; 0x7c4

00010e8c <myencoding_codepoint_to_ascii_utf_8@plt>:
   10e8c:	add	ip, pc, #1048576	; 0x100000
   10e90:	add	ip, ip, #20480	; 0x5000
   10e94:	ldr	pc, [ip, #1980]!	; 0x7bc

00010e98 <myhtml_token_attr_remove_by_name@plt>:
   10e98:	add	ip, pc, #1048576	; 0x100000
   10e9c:	add	ip, ip, #20480	; 0x5000
   10ea0:	ldr	pc, [ip, #1972]!	; 0x7b4

00010ea4 <mycore_utils_mhash_rebuild_add_entry@plt>:
   10ea4:	add	ip, pc, #1048576	; 0x100000
   10ea8:	add	ip, ip, #20480	; 0x5000
   10eac:	ldr	pc, [ip, #1964]!	; 0x7ac

00010eb0 <myhtml_token_attr_by_name@plt>:
   10eb0:	add	ip, pc, #1048576	; 0x100000
   10eb4:	add	ip, ip, #20480	; 0x5000
   10eb8:	ldr	pc, [ip, #1956]!	; 0x7a4

00010ebc <mcsync_unlock@plt>:
   10ebc:	add	ip, pc, #1048576	; 0x100000
   10ec0:	add	ip, ip, #20480	; 0x5000
   10ec4:	ldr	pc, [ip, #1948]!	; 0x79c

00010ec8 <myhtml_tree_token_list_append@plt>:
   10ec8:	add	ip, pc, #1048576	; 0x100000
   10ecc:	add	ip, ip, #20480	; 0x5000
   10ed0:	ldr	pc, [ip, #1940]!	; 0x794

00010ed4 <mycore_utils_avl_tree_node_create_root@plt>:
   10ed4:	add	ip, pc, #1048576	; 0x100000
   10ed8:	add	ip, ip, #20480	; 0x5000
   10edc:	ldr	pc, [ip, #1932]!	; 0x78c

00010ee0 <mythread_queue_list_entry_make_stream@plt>:
   10ee0:	add	ip, pc, #1048576	; 0x100000
   10ee4:	add	ip, ip, #20480	; 0x5000
   10ee8:	ldr	pc, [ip, #1924]!	; 0x784

00010eec <mycore_strncmp@plt>:
   10eec:	add	ip, pc, #1048576	; 0x100000
   10ef0:	add	ip, ip, #20480	; 0x5000
   10ef4:	ldr	pc, [ip, #1916]!	; 0x77c

00010ef8 <mycore_utils_mhash_create_entry@plt>:
   10ef8:	add	ip, pc, #1048576	; 0x100000
   10efc:	add	ip, ip, #20480	; 0x5000
   10f00:	ldr	pc, [ip, #1908]!	; 0x774

00010f04 <myhtml_tree_element_in_scope@plt>:
   10f04:	add	ip, pc, #1048576	; 0x100000
   10f08:	add	ip, ip, #20480	; 0x5000
   10f0c:	ldr	pc, [ip, #1900]!	; 0x76c

00010f10 <myencoding_index_gb18030_ranges_code_point@plt>:
   10f10:	add	ip, pc, #1048576	; 0x100000
   10f14:	add	ip, ip, #20480	; 0x5000
   10f18:	ldr	pc, [ip, #1892]!	; 0x764

00010f1c <__mtree_search_lowercase_to_start@plt>:
   10f1c:	add	ip, pc, #1048576	; 0x100000
   10f20:	add	ip, ip, #20480	; 0x5000
   10f24:	ldr	pc, [ip, #1884]!	; 0x75c

00010f28 <fseek@plt>:
   10f28:	add	ip, pc, #1048576	; 0x100000
   10f2c:	add	ip, ip, #20480	; 0x5000
   10f30:	ldr	pc, [ip, #1876]!	; 0x754

00010f34 <myhtml_node_clone@plt>:
   10f34:	add	ip, pc, #1048576	; 0x100000
   10f38:	add	ip, ip, #20480	; 0x5000
   10f3c:	ldr	pc, [ip, #1868]!	; 0x74c

00010f40 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>:
   10f40:	add	ip, pc, #1048576	; 0x100000
   10f44:	add	ip, ip, #20480	; 0x5000
   10f48:	ldr	pc, [ip, #1860]!	; 0x744

00010f4c <myencoding_detect_russian@plt>:
   10f4c:	add	ip, pc, #1048576	; 0x100000
   10f50:	add	ip, ip, #20480	; 0x5000
   10f54:	ldr	pc, [ip, #1852]!	; 0x73c

00010f58 <pthread_attr_setdetachstate@plt>:
   10f58:	add	ip, pc, #1048576	; 0x100000
   10f5c:	add	ip, ip, #20480	; 0x5000
   10f60:	ldr	pc, [ip, #1844]!	; 0x734

00010f64 <mchar_async_cache_delete@plt>:
   10f64:	add	ip, pc, #1048576	; 0x100000
   10f68:	add	ip, ip, #20480	; 0x5000
   10f6c:	ldr	pc, [ip, #1836]!	; 0x72c

00010f70 <mcobject_clean@plt>:
   10f70:	add	ip, pc, #1048576	; 0x100000
   10f74:	add	ip, ip, #20480	; 0x5000
   10f78:	ldr	pc, [ip, #1828]!	; 0x724

00010f7c <myhtml_token_node_clean@plt>:
   10f7c:	add	ip, pc, #1048576	; 0x100000
   10f80:	add	ip, ip, #20480	; 0x5000
   10f84:	ldr	pc, [ip, #1820]!	; 0x71c

00010f88 <myhtml_token_delete@plt>:
   10f88:	add	ip, pc, #1048576	; 0x100000
   10f8c:	add	ip, ip, #20480	; 0x5000
   10f90:	ldr	pc, [ip, #1812]!	; 0x714

00010f94 <strncmp@plt>:
   10f94:	add	ip, pc, #1048576	; 0x100000
   10f98:	add	ip, ip, #20480	; 0x5000
   10f9c:	ldr	pc, [ip, #1804]!	; 0x70c

00010fa0 <mcsimple_get_by_absolute_position@plt>:
   10fa0:	add	ip, pc, #1048576	; 0x100000
   10fa4:	add	ip, ip, #20480	; 0x5000
   10fa8:	ldr	pc, [ip, #1796]!	; 0x704

00010fac <mcsync_mutex_try_lock@plt>:
   10fac:	add	ip, pc, #1048576	; 0x100000
   10fb0:	add	ip, ip, #20480	; 0x5000
   10fb4:	ldr	pc, [ip, #1788]!	; 0x6fc

00010fb8 <mycore_utils_avl_tree_node_height@plt>:
   10fb8:	add	ip, pc, #1048576	; 0x100000
   10fbc:	add	ip, ip, #20480	; 0x5000
   10fc0:	ldr	pc, [ip, #1780]!	; 0x6f4

00010fc4 <mycore_utils_avl_tree_node_clean@plt>:
   10fc4:	add	ip, pc, #1048576	; 0x100000
   10fc8:	add	ip, ip, #20480	; 0x5000
   10fcc:	ldr	pc, [ip, #1772]!	; 0x6ec

00010fd0 <myhtml_tree_clear_stack_back_table_context@plt>:
   10fd0:	add	ip, pc, #1048576	; 0x100000
   10fd4:	add	ip, ip, #20480	; 0x5000
   10fd8:	ldr	pc, [ip, #1764]!	; 0x6e4

00010fdc <myhtml_tree_node_clone@plt>:
   10fdc:	add	ip, pc, #1048576	; 0x100000
   10fe0:	add	ip, ip, #20480	; 0x5000
   10fe4:	ldr	pc, [ip, #1756]!	; 0x6dc

00010fe8 <myhtml_tree_token_list_clean@plt>:
   10fe8:	add	ip, pc, #1048576	; 0x100000
   10fec:	add	ip, ip, #20480	; 0x5000
   10ff0:	ldr	pc, [ip, #1748]!	; 0x6d4

00010ff4 <myhtml_parser_stream@plt>:
   10ff4:	add	ip, pc, #1048576	; 0x100000
   10ff8:	add	ip, ip, #20480	; 0x5000
   10ffc:	ldr	pc, [ip, #1740]!	; 0x6cc

00011000 <myhtml_token_create@plt>:
   11000:	add	ip, pc, #1048576	; 0x100000
   11004:	add	ip, ip, #20480	; 0x5000
   11008:	ldr	pc, [ip, #1732]!	; 0x6c4

0001100c <myhtml_parser_token_data_to_string_lowercase@plt>:
   1100c:	add	ip, pc, #1048576	; 0x100000
   11010:	add	ip, ip, #20480	; 0x5000
   11014:	ldr	pc, [ip, #1724]!	; 0x6bc

00011018 <myencoding_detect_utf_8@plt>:
   11018:	add	ip, pc, #1048576	; 0x100000
   1101c:	add	ip, ip, #20480	; 0x5000
   11020:	ldr	pc, [ip, #1716]!	; 0x6b4

00011024 <mcsync_spin_unlock@plt>:
   11024:	add	ip, pc, #1048576	; 0x100000
   11028:	add	ip, ip, #20480	; 0x5000
   1102c:	ldr	pc, [ip, #1708]!	; 0x6ac

00011030 <myhtml_string_append_lowercase_with_preprocessing@plt>:
   11030:	add	ip, pc, #1048576	; 0x100000
   11034:	add	ip, ip, #20480	; 0x5000
   11038:	ldr	pc, [ip, #1700]!	; 0x6a4

0001103c <mcsync_mutex_lock@plt>:
   1103c:	add	ip, pc, #1048576	; 0x100000
   11040:	add	ip, ip, #20480	; 0x5000
   11044:	ldr	pc, [ip, #1692]!	; 0x69c

00011048 <myhtml_tree_open_elements_find@plt>:
   11048:	add	ip, pc, #1048576	; 0x100000
   1104c:	add	ip, ip, #20480	; 0x5000
   11050:	ldr	pc, [ip, #1684]!	; 0x694

00011054 <mcobject_async_clean@plt>:
   11054:	add	ip, pc, #1048576	; 0x100000
   11058:	add	ip, ip, #20480	; 0x5000
   1105c:	ldr	pc, [ip, #1676]!	; 0x68c

00011060 <mchar_async_mem_malloc@plt>:
   11060:	add	ip, pc, #1048576	; 0x100000
   11064:	add	ip, ip, #20480	; 0x5000
   11068:	ldr	pc, [ip, #1668]!	; 0x684

0001106c <myhtml_data_process_string_append_char@plt>:
   1106c:	add	ip, pc, #1048576	; 0x100000
   11070:	add	ip, ip, #20480	; 0x5000
   11074:	ldr	pc, [ip, #1660]!	; 0x67c

00011078 <myhtml_tag_clean@plt>:
   11078:	add	ip, pc, #1048576	; 0x100000
   1107c:	add	ip, ip, #20480	; 0x5000
   11080:	ldr	pc, [ip, #1652]!	; 0x674

00011084 <mythread_thread_attr_destroy@plt>:
   11084:	add	ip, pc, #1048576	; 0x100000
   11088:	add	ip, ip, #20480	; 0x5000
   1108c:	ldr	pc, [ip, #1644]!	; 0x66c

00011090 <mycore_string_clean_all@plt>:
   11090:	add	ip, pc, #1048576	; 0x100000
   11094:	add	ip, ip, #20480	; 0x5000
   11098:	ldr	pc, [ip, #1636]!	; 0x664

0001109c <myhtml_tree_node_clean@plt>:
   1109c:	add	ip, pc, #1048576	; 0x100000
   110a0:	add	ip, ip, #20480	; 0x5000
   110a4:	ldr	pc, [ip, #1628]!	; 0x65c

000110a8 <mythread_init@plt>:
   110a8:	add	ip, pc, #1048576	; 0x100000
   110ac:	add	ip, ip, #20480	; 0x5000
   110b0:	ldr	pc, [ip, #1620]!	; 0x654

Disassembly of section .text:

000110b4 <mycore_incoming_buffer_add@@Base-0x174>:
   110b4:	ldr	r3, [pc, #20]	; 110d0 <mythread_init@plt+0x28>
   110b8:	ldr	r2, [pc, #20]	; 110d4 <mythread_init@plt+0x2c>
   110bc:	add	r3, pc, r3
   110c0:	ldr	r2, [r3, r2]
   110c4:	cmp	r2, #0
   110c8:	bxeq	lr
   110cc:	b	105e0 <__gmon_start__@plt>
   110d0:	andseq	r4, r0, ip, lsr pc
   110d4:	andeq	r0, r0, r8, ror r8
   110d8:	ldr	r3, [pc, #52]	; 11114 <mythread_init@plt+0x6c>
   110dc:	ldr	r0, [pc, #52]	; 11118 <mythread_init@plt+0x70>
   110e0:	add	r3, pc, r3
   110e4:	add	r0, pc, r0
   110e8:	add	r3, r3, #3
   110ec:	sub	r3, r3, r0
   110f0:	cmp	r3, #6
   110f4:	ldr	r3, [pc, #32]	; 1111c <mythread_init@plt+0x74>
   110f8:	add	r3, pc, r3
   110fc:	bxls	lr
   11100:	ldr	r2, [pc, #24]	; 11120 <mythread_init@plt+0x78>
   11104:	ldr	r3, [r3, r2]
   11108:	cmp	r3, #0
   1110c:	bxeq	lr
   11110:	bx	r3
   11114:			; <UNDEFINED> instruction: 0x001058f0
   11118:	andseq	r5, r0, ip, ror #17
   1111c:	andseq	r4, r0, r0, lsl #30
   11120:	andeq	r0, r0, r4, asr #14
   11124:	ldr	r1, [pc, #56]	; 11164 <mythread_init@plt+0xbc>
   11128:	ldr	r0, [pc, #56]	; 11168 <mythread_init@plt+0xc0>
   1112c:	add	r1, pc, r1
   11130:	add	r0, pc, r0
   11134:	sub	r1, r1, r0
   11138:	ldr	r3, [pc, #44]	; 1116c <mythread_init@plt+0xc4>
   1113c:	asr	r1, r1, #2
   11140:	add	r3, pc, r3
   11144:	add	r1, r1, r1, lsr #31
   11148:	asrs	r1, r1, #1
   1114c:	bxeq	lr
   11150:	ldr	r2, [pc, #24]	; 11170 <mythread_init@plt+0xc8>
   11154:	ldr	r3, [r3, r2]
   11158:	cmp	r3, #0
   1115c:	bxeq	lr
   11160:	bx	r3
   11164:	andseq	r5, r0, r4, lsr #17
   11168:	andseq	r5, r0, r0, lsr #17
   1116c:			; <UNDEFINED> instruction: 0x00104eb8
   11170:	andeq	r0, r0, ip, lsl #19
   11174:	ldr	r3, [pc, #76]	; 111c8 <mythread_init@plt+0x120>
   11178:	ldr	r2, [pc, #76]	; 111cc <mythread_init@plt+0x124>
   1117c:	add	r3, pc, r3
   11180:	add	r2, pc, r2
   11184:	ldrb	r3, [r3]
   11188:	cmp	r3, #0
   1118c:	bxne	lr
   11190:	ldr	r3, [pc, #56]	; 111d0 <mythread_init@plt+0x128>
   11194:	push	{r4, lr}
   11198:	ldr	r3, [r2, r3]
   1119c:	cmp	r3, #0
   111a0:	beq	111b0 <mythread_init@plt+0x108>
   111a4:	ldr	r3, [pc, #40]	; 111d4 <mythread_init@plt+0x12c>
   111a8:	ldr	r0, [pc, r3]
   111ac:	bl	fd40 <__cxa_finalize@plt>
   111b0:	bl	110d8 <mythread_init@plt+0x30>
   111b4:	ldr	r3, [pc, #28]	; 111d8 <mythread_init@plt+0x130>
   111b8:	mov	r2, #1
   111bc:	add	r3, pc, r3
   111c0:	strb	r2, [r3]
   111c4:	pop	{r4, pc}
   111c8:	andseq	r5, r0, r4, asr r8
   111cc:	andseq	r4, r0, r8, ror lr
   111d0:	andeq	r0, r0, r0, lsr r7
   111d4:	andseq	r5, r0, r4, lsr #16
   111d8:	andseq	r5, r0, r4, lsl r8
   111dc:	ldr	r0, [pc, #56]	; 1121c <mythread_init@plt+0x174>
   111e0:	ldr	r3, [pc, #56]	; 11220 <mythread_init@plt+0x178>
   111e4:	add	r0, pc, r0
   111e8:	ldr	r2, [r0]
   111ec:	add	r3, pc, r3
   111f0:	cmp	r2, #0
   111f4:	bne	111fc <mythread_init@plt+0x154>
   111f8:	b	11124 <mythread_init@plt+0x7c>
   111fc:	ldr	r2, [pc, #32]	; 11224 <mythread_init@plt+0x17c>
   11200:	ldr	r3, [r3, r2]
   11204:	cmp	r3, #0
   11208:	beq	111f8 <mythread_init@plt+0x150>
   1120c:	push	{r4, lr}
   11210:	blx	r3
   11214:	pop	{r4, lr}
   11218:	b	11124 <mythread_init@plt+0x7c>
   1121c:	strdeq	ip, [pc], -ip	; <UNPREDICTABLE>
   11220:	andseq	r4, r0, ip, lsl #28
   11224:	andeq	r0, r0, ip, lsr r9

00011228 <mycore_incoming_buffer_add@@Base>:
   11228:	mov	ip, r1
   1122c:	push	{r4, r5, r6, lr}
   11230:	mov	r1, #0
   11234:	mov	r4, r0
   11238:	mov	r0, ip
   1123c:	mov	r6, r3
   11240:	mov	r5, r2
   11244:	bl	10a60 <mcobject_malloc@plt>
   11248:	cmp	r4, #0
   1124c:	mov	r1, #0
   11250:	ldrne	r3, [r4, #12]
   11254:	str	r6, [r0, #8]
   11258:	ldrne	r2, [r4, #8]
   1125c:	str	r5, [r0]
   11260:	addne	r3, r3, r2
   11264:	strne	r3, [r0, #12]
   11268:	mov	r3, #0
   1126c:	str	r1, [r0, #4]
   11270:	streq	r4, [r0, #12]
   11274:	strne	r0, [r4, #20]
   11278:	str	r4, [r0, #16]
   1127c:	str	r3, [r0, #20]
   11280:	pop	{r4, r5, r6, pc}

00011284 <mycore_incoming_buffer_clean@@Base>:
   11284:	mov	r3, #0
   11288:	str	r3, [r0]
   1128c:	str	r3, [r0, #4]
   11290:	str	r3, [r0, #8]
   11294:	str	r3, [r0, #12]
   11298:	str	r3, [r0, #16]
   1129c:	str	r3, [r0, #20]
   112a0:	bx	lr

000112a4 <mycore_incoming_buffer_split@@Base>:
   112a4:	push	{r4, r5, r6, lr}
   112a8:	mov	r4, r0
   112ac:	ldr	r5, [r0, #12]
   112b0:	mov	r0, r1
   112b4:	mov	r1, #0
   112b8:	sub	r5, r2, r5
   112bc:	bl	10a60 <mcobject_malloc@plt>
   112c0:	ldr	r2, [r4, #8]
   112c4:	ldr	ip, [r4]
   112c8:	ldr	r1, [r4, #12]
   112cc:	sub	r2, r2, r5
   112d0:	add	ip, ip, r5
   112d4:	add	r1, r1, r5
   112d8:	mov	lr, #0
   112dc:	str	r2, [r0, #8]
   112e0:	str	r2, [r0, #4]
   112e4:	str	ip, [r0]
   112e8:	str	r1, [r0, #12]
   112ec:	str	r4, [r0, #16]
   112f0:	str	lr, [r0, #20]
   112f4:	str	r5, [r4, #8]
   112f8:	str	r5, [r4, #4]
   112fc:	str	r0, [r4, #20]
   11300:	pop	{r4, r5, r6, pc}

00011304 <mycore_incoming_buffer_find_by_position@@Base>:
   11304:	ldr	r3, [r0, #12]
   11308:	cmp	r3, r1
   1130c:	bcs	11348 <mycore_incoming_buffer_find_by_position@@Base+0x44>
   11310:	b	11324 <mycore_incoming_buffer_find_by_position@@Base+0x20>
   11314:	ldr	r0, [r0, #20]
   11318:	cmp	r0, #0
   1131c:	bxeq	lr
   11320:	ldr	r3, [r0, #12]
   11324:	ldr	r2, [r0, #8]
   11328:	add	r3, r3, r2
   1132c:	cmp	r1, r3
   11330:	bhi	11314 <mycore_incoming_buffer_find_by_position@@Base+0x10>
   11334:	bx	lr
   11338:	ldr	r0, [r0, #16]
   1133c:	cmp	r0, #0
   11340:	bxeq	lr
   11344:	ldr	r3, [r0, #12]
   11348:	cmp	r1, r3
   1134c:	bcc	11338 <mycore_incoming_buffer_find_by_position@@Base+0x34>
   11350:	bx	lr

00011354 <mycore_incoming_buffer_data@@Base>:
   11354:	ldr	r0, [r0]
   11358:	bx	lr

0001135c <mycore_incoming_buffer_length@@Base>:
   1135c:	ldr	r0, [r0, #4]
   11360:	bx	lr

00011364 <mycore_incoming_buffer_size@@Base>:
   11364:	ldr	r0, [r0, #8]
   11368:	bx	lr

0001136c <mycore_incoming_buffer_offset@@Base>:
   1136c:	ldr	r0, [r0, #12]
   11370:	bx	lr

00011374 <mycore_incoming_buffer_relative_begin@@Base>:
   11374:	ldr	r0, [r0, #12]
   11378:	sub	r0, r1, r0
   1137c:	bx	lr

00011380 <mycore_incoming_buffer_available_length@@Base>:
   11380:	ldr	r0, [r0, #8]
   11384:	add	r3, r1, r2
   11388:	cmp	r3, r0
   1138c:	subhi	r0, r0, r1
   11390:	movls	r0, r2
   11394:	bx	lr

00011398 <mycore_incoming_buffer_next@@Base>:
   11398:	ldr	r0, [r0, #20]
   1139c:	bx	lr

000113a0 <mycore_incoming_buffer_prev@@Base>:
   113a0:	ldr	r0, [r0, #16]
   113a4:	bx	lr

000113a8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base>:
   113a8:	ldr	r2, [r0]
   113ac:	push	{r4, r5, r6, r7, r8, lr}
   113b0:	mov	r7, r0
   113b4:	ldr	r3, [r1]
   113b8:	ldr	r0, [r2, #8]
   113bc:	ldr	r4, [pc, #128]	; 11444 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x9c>
   113c0:	cmp	r3, r0
   113c4:	movcs	r0, #0
   113c8:	ldrcs	r2, [r2, #20]
   113cc:	movcs	r3, r0
   113d0:	strcs	r0, [r1]
   113d4:	ldr	r6, [r2]
   113d8:	mov	r0, #0
   113dc:	mov	ip, r0
   113e0:	mov	r8, r0
   113e4:	add	r4, pc, r4
   113e8:	ldrb	lr, [r6, r3]
   113ec:	add	r3, r3, #1
   113f0:	add	r5, r4, lr
   113f4:	ldrb	r5, [r5, #256]	; 0x100
   113f8:	cmp	r5, #255	; 0xff
   113fc:	cmpne	ip, #6
   11400:	beq	1143c <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x94>
   11404:	str	r3, [r1]
   11408:	ldrb	lr, [r4, lr]
   1140c:	ldr	r5, [r2, #8]
   11410:	add	ip, ip, #1
   11414:	cmp	r3, r5
   11418:	orr	r0, lr, r0, lsl #4
   1141c:	bcc	113e8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x40>
   11420:	ldr	lr, [r2, #20]
   11424:	mov	r3, #0
   11428:	cmp	lr, r3
   1142c:	ldrne	r6, [r2]
   11430:	movne	r2, lr
   11434:	strne	r8, [r1]
   11438:	bne	113e8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x40>
   1143c:	str	r2, [r7]
   11440:	pop	{r4, r5, r6, r7, r8, pc}
   11444:	andeq	ip, r1, r0, lsr #31

00011448 <mycore_incoming_buffer_escaped_case_cmp@@Base>:
   11448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1144c:	sub	sp, sp, #20
   11450:	ldr	lr, [r0]
   11454:	ldr	ip, [r3]
   11458:	str	lr, [sp, #12]
   1145c:	ldr	r4, [lr, #8]
   11460:	cmp	ip, r4
   11464:	bcc	11484 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x3c>
   11468:	ldr	lr, [lr, #20]
   1146c:	cmp	lr, #0
   11470:	beq	1158c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x144>
   11474:	mov	r4, #0
   11478:	mov	ip, r4
   1147c:	str	lr, [sp, #12]
   11480:	str	r4, [r3]
   11484:	cmp	r2, #0
   11488:	str	r0, [sp, #4]
   1148c:	mov	r8, r2
   11490:	mov	r6, r3
   11494:	ldr	r0, [lr]
   11498:	beq	11594 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x14c>
   1149c:	ldr	r7, [pc, #248]	; 1159c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x154>
   114a0:	ldr	r9, [pc, #248]	; 115a0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x158>
   114a4:	mov	r5, #0
   114a8:	add	r7, pc, r7
   114ac:	add	r9, pc, r9
   114b0:	mov	r4, r1
   114b4:	mov	fp, r5
   114b8:	add	sl, sp, #12
   114bc:	b	1151c <mycore_incoming_buffer_escaped_case_cmp@@Base+0xd4>
   114c0:	ldrb	r2, [r4]
   114c4:	ldrb	r1, [r1, #512]	; 0x200
   114c8:	add	ip, ip, #1
   114cc:	add	r2, r7, r2
   114d0:	ldrb	r2, [r2, #512]	; 0x200
   114d4:	cmp	r1, r2
   114d8:	bne	11578 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x130>
   114dc:	str	ip, [r6]
   114e0:	ldr	r2, [lr, #8]
   114e4:	add	r5, r5, #1
   114e8:	cmp	r2, ip
   114ec:	bhi	11510 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xc8>
   114f0:	ldr	r2, [lr, #20]
   114f4:	mov	ip, #0
   114f8:	cmp	r2, ip
   114fc:	beq	11578 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x130>
   11500:	mov	lr, r2
   11504:	ldr	r0, [r2]
   11508:	str	r2, [sp, #12]
   1150c:	str	fp, [r6]
   11510:	cmp	r8, r5
   11514:	add	r4, r4, #1
   11518:	beq	11578 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x130>
   1151c:	ldrb	r2, [r0, ip]
   11520:	cmp	r2, #92	; 0x5c
   11524:	add	r1, r7, r2
   11528:	bne	114c0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x78>
   1152c:	add	ip, ip, #1
   11530:	mov	r1, r6
   11534:	str	ip, [r6]
   11538:	mov	r0, sl
   1153c:	bl	101f0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>
   11540:	cmp	r0, #255	; 0xff
   11544:	add	r1, r9, r0
   11548:	bhi	11574 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x12c>
   1154c:	ldrb	r2, [r4]
   11550:	ldrb	r1, [r1, #512]	; 0x200
   11554:	ldr	lr, [sp, #12]
   11558:	add	r2, r9, r2
   1155c:	ldrb	r2, [r2, #512]	; 0x200
   11560:	cmp	r1, r2
   11564:	bne	11578 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x130>
   11568:	ldr	ip, [r6]
   1156c:	ldr	r0, [lr]
   11570:	b	114e0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x98>
   11574:	ldr	lr, [sp, #12]
   11578:	ldr	r3, [sp, #4]
   1157c:	sub	r0, r8, r5
   11580:	str	lr, [r3]
   11584:	add	sp, sp, #20
   11588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1158c:	mov	r0, r2
   11590:	b	11584 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x13c>
   11594:	mov	r5, r2
   11598:	b	11578 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x130>
   1159c:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   115a0:	ldrdeq	ip, [r1], -r8

000115a4 <mycore_string_clean@@Base>:
   115a4:	mov	r3, #0
   115a8:	str	r3, [r0, #8]
   115ac:	bx	lr

000115b0 <mycore_string_init@@Base>:
   115b0:	push	{r4, r5, r6, r7, r8, lr}
   115b4:	mov	r4, r2
   115b8:	mov	r2, r3
   115bc:	mov	r5, r3
   115c0:	mov	r7, r1
   115c4:	mov	r6, r0
   115c8:	bl	10910 <mchar_async_malloc@plt>
   115cc:	str	r5, [r4, #4]
   115d0:	str	r7, [r4, #16]
   115d4:	str	r6, [r4, #12]
   115d8:	str	r0, [r4]
   115dc:	mov	r0, r4
   115e0:	bl	10d18 <mycore_string_clean@plt>
   115e4:	ldr	r0, [r4]
   115e8:	pop	{r4, r5, r6, r7, r8, pc}

000115ec <mycore_string_clean_all@@Base>:
   115ec:	mov	r3, #0
   115f0:	str	r3, [r0]
   115f4:	str	r3, [r0, #4]
   115f8:	str	r3, [r0, #8]
   115fc:	str	r3, [r0, #12]
   11600:	str	r3, [r0, #16]
   11604:	bx	lr

00011608 <mycore_string_destroy@@Base>:
   11608:	push	{r4, r5, r6, lr}
   1160c:	subs	r4, r0, #0
   11610:	beq	11640 <mycore_string_destroy@@Base+0x38>
   11614:	ldr	r2, [r4]
   11618:	mov	r5, r1
   1161c:	cmp	r2, #0
   11620:	beq	11638 <mycore_string_destroy@@Base+0x30>
   11624:	ldr	r0, [r4, #12]
   11628:	cmp	r0, #0
   1162c:	beq	11638 <mycore_string_destroy@@Base+0x30>
   11630:	ldr	r1, [r4, #16]
   11634:	bl	10718 <mchar_async_free@plt>
   11638:	cmp	r5, #0
   1163c:	bne	11648 <mycore_string_destroy@@Base+0x40>
   11640:	mov	r0, r4
   11644:	pop	{r4, r5, r6, pc}
   11648:	mov	r0, r4
   1164c:	bl	10dcc <mycore_free@plt>
   11650:	mov	r4, #0
   11654:	b	11640 <mycore_string_destroy@@Base+0x38>

00011658 <mycore_string_raw_clean@@Base>:
   11658:	mov	r3, #0
   1165c:	str	r3, [r0, #8]
   11660:	bx	lr

00011664 <mycore_string_raw_clean_all@@Base>:
   11664:	mov	r3, #0
   11668:	str	r3, [r0]
   1166c:	str	r3, [r0, #4]
   11670:	str	r3, [r0, #8]
   11674:	bx	lr

00011678 <mycore_string_raw_destroy@@Base>:
   11678:	push	{r4, r5, r6, lr}
   1167c:	subs	r4, r0, #0
   11680:	beq	116a8 <mycore_string_raw_destroy@@Base+0x30>
   11684:	ldr	r0, [r4]
   11688:	mov	r5, r1
   1168c:	cmp	r0, #0
   11690:	beq	116a0 <mycore_string_raw_destroy@@Base+0x28>
   11694:	bl	10dcc <mycore_free@plt>
   11698:	mov	r3, #0
   1169c:	str	r3, [r4]
   116a0:	cmp	r5, #0
   116a4:	bne	116b0 <mycore_string_raw_destroy@@Base+0x38>
   116a8:	mov	r0, r4
   116ac:	pop	{r4, r5, r6, pc}
   116b0:	mov	r0, r4
   116b4:	bl	10dcc <mycore_free@plt>
   116b8:	mov	r4, #0
   116bc:	b	116a8 <mycore_string_raw_destroy@@Base+0x30>

000116c0 <mycore_string_realloc@@Base>:
   116c0:	push	{r4, r5, lr}
   116c4:	subs	r4, r0, #0
   116c8:	sub	sp, sp, #12
   116cc:	beq	116fc <mycore_string_realloc@@Base+0x3c>
   116d0:	mov	r5, r1
   116d4:	ldr	r3, [r4, #8]
   116d8:	ldr	r2, [r4]
   116dc:	ldr	r1, [r4, #16]
   116e0:	ldr	r0, [r4, #12]
   116e4:	str	r5, [sp]
   116e8:	bl	ffbc <mchar_async_realloc@plt>
   116ec:	cmp	r0, #0
   116f0:	stmne	r4, {r0, r5}
   116f4:	add	sp, sp, #12
   116f8:	pop	{r4, r5, pc}
   116fc:	mov	r0, r4
   11700:	b	116f4 <mycore_string_realloc@@Base+0x34>

00011704 <mycore_string_data_alloc@@Base>:
   11704:	b	10910 <mchar_async_malloc@plt>

00011708 <mycore_string_data_realloc@@Base>:
   11708:	b	ffbc <mchar_async_realloc@plt>

0001170c <mycore_string_data_free@@Base>:
   1170c:	b	10718 <mchar_async_free@plt>

00011710 <mycore_string_data@@Base>:
   11710:	cmp	r0, #0
   11714:	ldrne	r0, [r0]
   11718:	bx	lr

0001171c <mycore_string_length@@Base>:
   1171c:	cmp	r0, #0
   11720:	ldrne	r0, [r0, #8]
   11724:	bx	lr

00011728 <mycore_string_size@@Base>:
   11728:	cmp	r0, #0
   1172c:	ldrne	r0, [r0, #4]
   11730:	bx	lr

00011734 <mycore_string_data_set@@Base>:
   11734:	cmp	r0, #0
   11738:	strne	r1, [r0]
   1173c:	movne	r0, r1
   11740:	bx	lr

00011744 <mycore_string_size_set@@Base>:
   11744:	cmp	r0, #0
   11748:	strne	r1, [r0, #4]
   1174c:	movne	r0, r1
   11750:	bx	lr

00011754 <mycore_string_length_set@@Base>:
   11754:	cmp	r0, #0
   11758:	strne	r1, [r0, #8]
   1175c:	movne	r0, r1
   11760:	bx	lr

00011764 <mycore_string_append@@Base>:
   11764:	push	{r4, r5, r6, lr}
   11768:	mov	r5, r2
   1176c:	ldr	r2, [r0, #8]
   11770:	add	r3, r5, #1
   11774:	ldr	ip, [r0, #4]
   11778:	add	r3, r3, r2
   1177c:	cmp	r3, ip
   11780:	mov	r4, r0
   11784:	mov	r6, r1
   11788:	bcc	11798 <mycore_string_append@@Base+0x34>
   1178c:	mov	r1, r3
   11790:	bl	10964 <mycore_string_realloc@plt>
   11794:	ldr	r2, [r4, #8]
   11798:	ldr	r0, [r4]
   1179c:	mov	r1, r6
   117a0:	add	r0, r0, r2
   117a4:	mov	r2, r5
   117a8:	bl	ff5c <memcpy@plt>
   117ac:	ldr	r2, [r4, #8]
   117b0:	ldr	r3, [r4]
   117b4:	add	r5, r5, r2
   117b8:	mov	r2, #0
   117bc:	str	r5, [r4, #8]
   117c0:	strb	r2, [r3, r5]
   117c4:	pop	{r4, r5, r6, pc}

000117c8 <mycore_string_append_one@@Base>:
   117c8:	push	{r4, r5, r6, lr}
   117cc:	mov	r5, r1
   117d0:	ldr	r1, [r0, #8]
   117d4:	ldr	r3, [r0, #4]
   117d8:	add	r2, r1, #2
   117dc:	cmp	r2, r3
   117e0:	mov	r4, r0
   117e4:	bcc	117f4 <mycore_string_append_one@@Base+0x2c>
   117e8:	add	r1, r1, #3
   117ec:	bl	10964 <mycore_string_realloc@plt>
   117f0:	ldr	r1, [r4, #8]
   117f4:	ldr	r3, [r4]
   117f8:	mov	r0, #0
   117fc:	strb	r5, [r3, r1]
   11800:	ldr	r3, [r4, #8]
   11804:	ldr	r2, [r4]
   11808:	add	r3, r3, #1
   1180c:	str	r3, [r4, #8]
   11810:	strb	r0, [r2, r3]
   11814:	pop	{r4, r5, r6, pc}

00011818 <mycore_string_append_lowercase@@Base>:
   11818:	ldr	ip, [r0, #8]
   1181c:	push	{r4, r5, r6, lr}
   11820:	add	r3, r2, #1
   11824:	mov	r6, r2
   11828:	ldr	r2, [r0, #4]
   1182c:	add	r3, r3, ip
   11830:	cmp	r3, r2
   11834:	mov	r5, r0
   11838:	mov	r4, r1
   1183c:	bcs	11890 <mycore_string_append_lowercase@@Base+0x78>
   11840:	ldr	r2, [r5]
   11844:	cmp	r6, #0
   11848:	add	r2, r2, ip
   1184c:	beq	11878 <mycore_string_append_lowercase@@Base+0x60>
   11850:	ldr	lr, [pc, #72]	; 118a0 <mycore_string_append_lowercase@@Base+0x88>
   11854:	mov	r1, r4
   11858:	add	lr, pc, lr
   1185c:	add	ip, r4, r6
   11860:	sub	r3, r2, #1
   11864:	ldrb	r0, [r1], #1
   11868:	cmp	ip, r1
   1186c:	ldrb	r0, [lr, r0]
   11870:	strb	r0, [r3, #1]!
   11874:	bne	11864 <mycore_string_append_lowercase@@Base+0x4c>
   11878:	mov	r3, #0
   1187c:	strb	r3, [r2, r6]
   11880:	ldr	r2, [r5, #8]
   11884:	add	r6, r2, r6
   11888:	str	r6, [r5, #8]
   1188c:	pop	{r4, r5, r6, pc}
   11890:	mov	r1, r3
   11894:	bl	10964 <mycore_string_realloc@plt>
   11898:	ldr	ip, [r5, #8]
   1189c:	b	11840 <mycore_string_append_lowercase@@Base+0x28>
   118a0:	andeq	ip, r1, ip, lsr #28

000118a4 <mycore_string_copy@@Base>:
   118a4:	ldr	r2, [r1, #8]
   118a8:	ldr	r1, [r1]
   118ac:	b	108d4 <mycore_string_append@plt>

000118b0 <mycore_string_raw_copy@@Base>:
   118b0:	mov	r3, #0
   118b4:	cmp	r2, #0
   118b8:	strb	r3, [r0, r2]
   118bc:	add	r0, r0, r2
   118c0:	beq	118d8 <mycore_string_raw_copy@@Base+0x28>
   118c4:	add	r2, r1, r2
   118c8:	ldrb	r3, [r2, #-1]!
   118cc:	cmp	r2, r1
   118d0:	strb	r3, [r0, #-1]!
   118d4:	bne	118c8 <mycore_string_raw_copy@@Base+0x18>
   118d8:	mov	r0, #0
   118dc:	bx	lr

000118e0 <mycore_string_raw_set_replacement_character@@Base>:
   118e0:	ldr	r2, [r0]
   118e4:	mov	r3, r0
   118e8:	mvn	r0, #16
   118ec:	push	{lr}		; (str lr, [sp, #-4]!)
   118f0:	mvn	lr, #64	; 0x40
   118f4:	strb	r0, [r2, r1]
   118f8:	ldr	r2, [r3]
   118fc:	mvn	ip, #66	; 0x42
   11900:	add	r2, r2, r1
   11904:	mov	r0, #3
   11908:	strb	lr, [r2, #1]
   1190c:	ldr	r3, [r3]
   11910:	add	r1, r3, r1
   11914:	strb	ip, [r1, #2]
   11918:	pop	{pc}		; (ldr pc, [sp], #4)

0001191c <mycore_string_append_with_replacement_null_characters@@Base>:
   1191c:	ldr	ip, [r0, #8]
   11920:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11924:	add	r3, r2, #1
   11928:	mov	r9, r2
   1192c:	ldr	r2, [r0, #4]
   11930:	add	r3, r3, ip
   11934:	cmp	r3, r2
   11938:	mov	r4, r0
   1193c:	mov	r5, r1
   11940:	bcs	119f0 <mycore_string_append_with_replacement_null_characters@@Base+0xd4>
   11944:	cmp	r9, #0
   11948:	ldr	r1, [r4]
   1194c:	ldreq	r3, [r4, #8]
   11950:	beq	11990 <mycore_string_append_with_replacement_null_characters@@Base+0x74>
   11954:	add	r9, r5, r9
   11958:	mvn	r8, #16
   1195c:	mvn	r7, #64	; 0x40
   11960:	mvn	r6, #66	; 0x42
   11964:	ldrb	r3, [r5], #1
   11968:	cmp	r3, #0
   1196c:	beq	1199c <mycore_string_append_with_replacement_null_characters@@Base+0x80>
   11970:	ldr	r2, [r4, #8]
   11974:	cmp	r9, r5
   11978:	strb	r3, [r1, r2]
   1197c:	ldr	r3, [r4, #8]
   11980:	add	r3, r3, #1
   11984:	str	r3, [r4, #8]
   11988:	bne	11964 <mycore_string_append_with_replacement_null_characters@@Base+0x48>
   1198c:	ldr	r1, [r4]
   11990:	mov	r2, #0
   11994:	strb	r2, [r1, r3]
   11998:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1199c:	ldr	r1, [r4, #4]
   119a0:	mov	r0, r4
   119a4:	add	r1, r1, #5
   119a8:	bl	10964 <mycore_string_realloc@plt>
   119ac:	ldr	r3, [r4, #8]
   119b0:	ldr	r1, [r4]
   119b4:	cmp	r9, r5
   119b8:	strb	r8, [r1, r3]
   119bc:	ldr	r3, [r4, #8]
   119c0:	add	r3, r3, #1
   119c4:	str	r3, [r4, #8]
   119c8:	strb	r7, [r1, r3]
   119cc:	ldr	r3, [r4, #8]
   119d0:	add	r3, r3, #1
   119d4:	str	r3, [r4, #8]
   119d8:	strb	r6, [r1, r3]
   119dc:	ldr	r3, [r4, #8]
   119e0:	add	r3, r3, #1
   119e4:	str	r3, [r4, #8]
   119e8:	bne	11964 <mycore_string_append_with_replacement_null_characters@@Base+0x48>
   119ec:	b	1198c <mycore_string_append_with_replacement_null_characters@@Base+0x70>
   119f0:	mov	r1, r3
   119f4:	bl	10964 <mycore_string_realloc@plt>
   119f8:	b	11944 <mycore_string_append_with_replacement_null_characters@@Base+0x28>

000119fc <mycore_string_stay_only_whitespace@@Base>:
   119fc:	push	{r4, r5, r6, lr}
   11a00:	ldr	lr, [r0, #8]
   11a04:	ldr	r6, [r0]
   11a08:	cmp	lr, #0
   11a0c:	beq	11a5c <mycore_string_stay_only_whitespace@@Base+0x60>
   11a10:	mov	r2, #0
   11a14:	ldr	r5, [pc, #72]	; 11a64 <mycore_string_stay_only_whitespace@@Base+0x68>
   11a18:	mov	ip, r2
   11a1c:	sub	r4, r6, #1
   11a20:	ldrb	r1, [r4, #1]!
   11a24:	add	r2, r2, #1
   11a28:	sub	r3, r1, #9
   11a2c:	uxtb	r3, r3
   11a30:	cmp	r3, #23
   11a34:	mvn	r3, r5, lsr r3
   11a38:	bhi	11a4c <mycore_string_stay_only_whitespace@@Base+0x50>
   11a3c:	tst	r3, #1
   11a40:	strbeq	r1, [r6, ip]
   11a44:	ldreq	lr, [r0, #8]
   11a48:	addeq	ip, ip, #1
   11a4c:	cmp	lr, r2
   11a50:	bhi	11a20 <mycore_string_stay_only_whitespace@@Base+0x24>
   11a54:	str	ip, [r0, #8]
   11a58:	pop	{r4, r5, r6, pc}
   11a5c:	mov	ip, lr
   11a60:	b	11a54 <mycore_string_stay_only_whitespace@@Base+0x58>
   11a64:	addeq	r0, r0, fp, lsl r0

00011a68 <mycore_string_crop_whitespace_from_begin@@Base>:
   11a68:	ldr	ip, [r0, #8]
   11a6c:	push	{r4, r5, r6, lr}
   11a70:	cmp	ip, #0
   11a74:	mov	r5, r0
   11a78:	ldr	r0, [r0]
   11a7c:	beq	11aec <mycore_string_crop_whitespace_from_begin@@Base+0x84>
   11a80:	ldrb	r4, [r0]
   11a84:	sub	r4, r4, #9
   11a88:	uxtb	r4, r4
   11a8c:	cmp	r4, #23
   11a90:	bhi	11aec <mycore_string_crop_whitespace_from_begin@@Base+0x84>
   11a94:	ldr	r1, [pc, #100]	; 11b00 <mycore_string_crop_whitespace_from_begin@@Base+0x98>
   11a98:	mvn	r4, r1, lsr r4
   11a9c:	ands	r4, r4, #1
   11aa0:	moveq	r2, r0
   11aa4:	bne	11aec <mycore_string_crop_whitespace_from_begin@@Base+0x84>
   11aa8:	add	r4, r4, #1
   11aac:	cmp	r4, ip
   11ab0:	beq	11acc <mycore_string_crop_whitespace_from_begin@@Base+0x64>
   11ab4:	ldrb	r3, [r2, #1]!
   11ab8:	sub	r3, r3, #9
   11abc:	uxtb	r3, r3
   11ac0:	cmp	r3, #23
   11ac4:	mvn	r3, r1, lsr r3
   11ac8:	bls	11af4 <mycore_string_crop_whitespace_from_begin@@Base+0x8c>
   11acc:	mov	r1, r4
   11ad0:	bl	10c64 <mchar_async_crop_first_chars_without_cache@plt>
   11ad4:	ldr	ip, [r5, #8]
   11ad8:	str	r0, [r5]
   11adc:	sub	ip, ip, r4
   11ae0:	str	ip, [r5, #8]
   11ae4:	mov	r0, r4
   11ae8:	pop	{r4, r5, r6, pc}
   11aec:	mov	r4, #0
   11af0:	b	11adc <mycore_string_crop_whitespace_from_begin@@Base+0x74>
   11af4:	tst	r3, #1
   11af8:	beq	11aa8 <mycore_string_crop_whitespace_from_begin@@Base+0x40>
   11afc:	b	11acc <mycore_string_crop_whitespace_from_begin@@Base+0x64>
   11b00:	addeq	r0, r0, fp, lsl r0

00011b04 <mycore_string_whitespace_from_begin@@Base>:
   11b04:	ldr	ip, [r0, #8]
   11b08:	ldr	r2, [r0]
   11b0c:	cmp	ip, #0
   11b10:	beq	11b6c <mycore_string_whitespace_from_begin@@Base+0x68>
   11b14:	ldrb	r0, [r2]
   11b18:	sub	r0, r0, #9
   11b1c:	uxtb	r0, r0
   11b20:	cmp	r0, #23
   11b24:	bhi	11b6c <mycore_string_whitespace_from_begin@@Base+0x68>
   11b28:	ldr	r1, [pc, #68]	; 11b74 <mycore_string_whitespace_from_begin@@Base+0x70>
   11b2c:	mvn	r0, r1, lsr r0
   11b30:	ands	r0, r0, #1
   11b34:	beq	11b5c <mycore_string_whitespace_from_begin@@Base+0x58>
   11b38:	b	11b6c <mycore_string_whitespace_from_begin@@Base+0x68>
   11b3c:	ldrb	r3, [r2, #1]!
   11b40:	sub	r3, r3, #9
   11b44:	uxtb	r3, r3
   11b48:	cmp	r3, #23
   11b4c:	mvn	r3, r1, lsr r3
   11b50:	bxhi	lr
   11b54:	tst	r3, #1
   11b58:	bxne	lr
   11b5c:	add	r0, r0, #1
   11b60:	cmp	r0, ip
   11b64:	bne	11b3c <mycore_string_whitespace_from_begin@@Base+0x38>
   11b68:	bx	lr
   11b6c:	mov	r0, #0
   11b70:	bx	lr
   11b74:	addeq	r0, r0, fp, lsl r0

00011b78 <mythread_create@@Base>:
   11b78:	mov	r1, #40	; 0x28
   11b7c:	mov	r0, #1
   11b80:	b	ff14 <mycore_calloc@plt>

00011b84 <mythread_init@@Base>:
   11b84:	cmp	r2, #0
   11b88:	push	{r4, r5, r6, lr}
   11b8c:	moveq	r5, #1
   11b90:	bne	11b9c <mythread_init@@Base+0x18>
   11b94:	mov	r0, r5
   11b98:	pop	{r4, r5, r6, pc}
   11b9c:	mov	r4, r0
   11ba0:	mov	r5, #0
   11ba4:	str	r1, [r4, #32]
   11ba8:	str	r5, [r4, #4]
   11bac:	mov	r0, r2
   11bb0:	str	r2, [r4, #8]
   11bb4:	str	r3, [r4, #12]
   11bb8:	mov	r1, #40	; 0x28
   11bbc:	bl	ff14 <mycore_calloc@plt>
   11bc0:	cmp	r0, r5
   11bc4:	str	r0, [r4]
   11bc8:	moveq	r5, #2
   11bcc:	beq	11b94 <mythread_init@@Base+0x10>
   11bd0:	mov	r0, r4
   11bd4:	bl	fe84 <mythread_thread_attr_init@plt>
   11bd8:	cmp	r0, r5
   11bdc:	str	r0, [r4, #20]
   11be0:	moveq	r5, #12
   11be4:	beq	11b94 <mythread_init@@Base+0x10>
   11be8:	mov	r0, r4
   11bec:	bl	fca4 <mythread_nanosleep_create@plt>
   11bf0:	str	r0, [r4, #24]
   11bf4:	mov	r0, r5
   11bf8:	pop	{r4, r5, r6, pc}

00011bfc <mythread_clean@@Base>:
   11bfc:	push	{r4, lr}
   11c00:	mov	r4, r0
   11c04:	ldr	r1, [r0, #20]
   11c08:	bl	1040c <mythread_thread_attr_clean@plt>
   11c0c:	ldr	r0, [r4, #24]
   11c10:	bl	fc5c <mythread_nanosleep_clean@plt>
   11c14:	mov	r3, #0
   11c18:	str	r3, [r4, #28]
   11c1c:	pop	{r4, pc}

00011c20 <myhread_entry_create@@Base>:
   11c20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11c24:	mov	r5, #0
   11c28:	ldr	lr, [r0, #4]
   11c2c:	ldr	r6, [r0, #8]
   11c30:	str	r5, [r0, #28]
   11c34:	cmp	lr, r6
   11c38:	movcs	r5, #15
   11c3c:	bcc	11c48 <myhread_entry_create@@Base+0x28>
   11c40:	mov	r0, r5
   11c44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c48:	add	r8, lr, lr, lsl #2
   11c4c:	ldr	r9, [r0]
   11c50:	lsl	r8, r8, #3
   11c54:	add	sl, r9, r8
   11c58:	mov	r4, r0
   11c5c:	str	r6, [sl, #12]
   11c60:	str	r2, [sl, #8]
   11c64:	str	lr, [sl, #4]
   11c68:	str	r3, [sl, #16]
   11c6c:	str	r5, [sl, #20]
   11c70:	str	r0, [sl, #32]
   11c74:	mov	r7, r1
   11c78:	bl	fca4 <mythread_nanosleep_create@plt>
   11c7c:	str	r0, [sl, #28]
   11c80:	mov	r0, r4
   11c84:	bl	10afc <mythread_mutex_create@plt>
   11c88:	cmp	r0, r5
   11c8c:	str	r0, [sl, #24]
   11c90:	moveq	r5, #71	; 0x47
   11c94:	beq	11c40 <myhread_entry_create@@Base+0x20>
   11c98:	mov	r1, r0
   11c9c:	mov	r0, r4
   11ca0:	bl	10d9c <mythread_mutex_wait@plt>
   11ca4:	subs	r5, r0, #0
   11ca8:	beq	11cc0 <myhread_entry_create@@Base+0xa0>
   11cac:	ldr	r1, [sl, #24]
   11cb0:	mov	r0, r4
   11cb4:	bl	10634 <mythread_mutex_close@plt>
   11cb8:	mov	r5, #72	; 0x48
   11cbc:	b	11c40 <myhread_entry_create@@Base+0x20>
   11cc0:	mov	r1, r7
   11cc4:	add	r2, sl, #4
   11cc8:	mov	r0, r4
   11ccc:	bl	fd88 <mythread_thread_create@plt>
   11cd0:	cmp	r0, #0
   11cd4:	str	r0, [r9, r8]
   11cd8:	ldrne	r3, [r4, #4]
   11cdc:	addne	r3, r3, #1
   11ce0:	strne	r3, [r4, #4]
   11ce4:	bne	11c40 <myhread_entry_create@@Base+0x20>
   11ce8:	ldr	r1, [sl, #24]
   11cec:	mov	r0, r4
   11cf0:	bl	10634 <mythread_mutex_close@plt>
   11cf4:	mov	r5, #1
   11cf8:	b	11c40 <myhread_entry_create@@Base+0x20>

00011cfc <myhread_increase_id_by_entry_id@@Base>:
   11cfc:	ldr	r0, [r0, #12]
   11d00:	add	r0, r1, r0
   11d04:	bx	lr

00011d08 <mythread_join@@Base>:
   11d08:	ldr	r3, [r0, #4]
   11d0c:	cmp	r3, #0
   11d10:	beq	11dc4 <mythread_join@@Base+0xbc>
   11d14:	cmp	r1, #0
   11d18:	push	{r4, r5, r6, r7, r8, lr}
   11d1c:	movne	r5, #0
   11d20:	mov	r8, r2
   11d24:	mov	r7, r1
   11d28:	mov	r4, r0
   11d2c:	movne	r6, r5
   11d30:	bne	11d44 <mythread_join@@Base+0x3c>
   11d34:	b	11d88 <mythread_join@@Base+0x80>
   11d38:	ldr	r3, [r4, #4]
   11d3c:	cmp	r3, r6
   11d40:	bls	11d80 <mythread_join@@Base+0x78>
   11d44:	ldr	r1, [r4]
   11d48:	mov	r2, r8
   11d4c:	add	r1, r1, r5
   11d50:	mov	r0, r4
   11d54:	blx	r7
   11d58:	ldr	r3, [r4]
   11d5c:	mov	r0, r4
   11d60:	add	r6, r6, #1
   11d64:	ldr	r1, [r3, r5]
   11d68:	bl	10568 <mythread_thread_join@plt>
   11d6c:	add	r5, r5, #40	; 0x28
   11d70:	cmp	r0, #0
   11d74:	beq	11d38 <mythread_join@@Base+0x30>
   11d78:	mov	r0, #1
   11d7c:	pop	{r4, r5, r6, r7, r8, pc}
   11d80:	mov	r0, #0
   11d84:	pop	{r4, r5, r6, r7, r8, pc}
   11d88:	mov	r6, r1
   11d8c:	b	11d9c <mythread_join@@Base+0x94>
   11d90:	ldr	r3, [r4, #4]
   11d94:	cmp	r6, r3
   11d98:	bcs	11d80 <mythread_join@@Base+0x78>
   11d9c:	ldr	r3, [r4]
   11da0:	mov	r0, r4
   11da4:	add	r6, r6, #1
   11da8:	ldr	r1, [r3, r7]
   11dac:	bl	10568 <mythread_thread_join@plt>
   11db0:	add	r7, r7, #40	; 0x28
   11db4:	cmp	r0, #0
   11db8:	beq	11d90 <mythread_join@@Base+0x88>
   11dbc:	mov	r0, #1
   11dc0:	pop	{r4, r5, r6, r7, r8, pc}
   11dc4:	mov	r0, #0
   11dc8:	bx	lr

00011dcc <mythread_check_status@@Base>:
   11dcc:	ldr	ip, [r0, #4]
   11dd0:	cmp	ip, #0
   11dd4:	beq	11e18 <mythread_check_status@@Base+0x4c>
   11dd8:	ldr	r3, [r0]
   11ddc:	ldr	r0, [r3, #20]
   11de0:	cmp	r0, #0
   11de4:	bxne	lr
   11de8:	mov	r2, r0
   11dec:	b	11dfc <mythread_check_status@@Base+0x30>
   11df0:	ldr	r1, [r3, #20]
   11df4:	cmp	r1, #0
   11df8:	bne	11e10 <mythread_check_status@@Base+0x44>
   11dfc:	add	r2, r2, #1
   11e00:	cmp	r2, ip
   11e04:	add	r3, r3, #40	; 0x28
   11e08:	bne	11df0 <mythread_check_status@@Base+0x24>
   11e0c:	bx	lr
   11e10:	mov	r0, r1
   11e14:	bx	lr
   11e18:	mov	r0, ip
   11e1c:	bx	lr

00011e20 <mythread_option@@Base>:
   11e20:	ldr	r0, [r0, #36]	; 0x24
   11e24:	bx	lr

00011e28 <mythread_option_set@@Base>:
   11e28:	str	r1, [r0, #36]	; 0x24
   11e2c:	bx	lr

00011e30 <mythread_quit@@Base>:
   11e30:	push	{r4, r5, r6, r7, r8, lr}
   11e34:	mov	r4, r0
   11e38:	mov	r6, r1
   11e3c:	mov	r1, #2
   11e40:	mov	r8, r2
   11e44:	bl	10ae4 <mythread_option_set@plt>
   11e48:	ldr	r3, [r4, #4]
   11e4c:	cmp	r3, #0
   11e50:	beq	11ec8 <mythread_quit@@Base+0x98>
   11e54:	cmp	r6, #0
   11e58:	movne	r5, #0
   11e5c:	movne	r7, r5
   11e60:	bne	11e8c <mythread_quit@@Base+0x5c>
   11e64:	b	11ed0 <mythread_quit@@Base+0xa0>
   11e68:	ldr	r3, [r4]
   11e6c:	ldr	r1, [r3, r5]
   11e70:	bl	109f4 <mythread_thread_destroy@plt>
   11e74:	add	r5, r5, #40	; 0x28
   11e78:	cmp	r0, #0
   11e7c:	bne	11ec0 <mythread_quit@@Base+0x90>
   11e80:	ldr	r3, [r4, #4]
   11e84:	cmp	r3, r7
   11e88:	bls	11ec8 <mythread_quit@@Base+0x98>
   11e8c:	ldr	r1, [r4]
   11e90:	mov	r2, r8
   11e94:	add	r1, r1, r5
   11e98:	mov	r0, r4
   11e9c:	blx	r6
   11ea0:	ldr	r3, [r4]
   11ea4:	mov	r0, r4
   11ea8:	add	r7, r7, #1
   11eac:	ldr	r1, [r3, r5]
   11eb0:	bl	10568 <mythread_thread_join@plt>
   11eb4:	cmp	r0, #0
   11eb8:	mov	r0, r4
   11ebc:	beq	11e68 <mythread_quit@@Base+0x38>
   11ec0:	mov	r0, #1
   11ec4:	pop	{r4, r5, r6, r7, r8, pc}
   11ec8:	mov	r0, #0
   11ecc:	pop	{r4, r5, r6, r7, r8, pc}
   11ed0:	mov	r5, r6
   11ed4:	b	11efc <mythread_quit@@Base+0xcc>
   11ed8:	ldr	r3, [r4]
   11edc:	ldr	r1, [r3, r6]
   11ee0:	bl	109f4 <mythread_thread_destroy@plt>
   11ee4:	add	r6, r6, #40	; 0x28
   11ee8:	cmp	r0, #0
   11eec:	bne	11ec0 <mythread_quit@@Base+0x90>
   11ef0:	ldr	r3, [r4, #4]
   11ef4:	cmp	r5, r3
   11ef8:	bcs	11ec8 <mythread_quit@@Base+0x98>
   11efc:	ldr	r3, [r4]
   11f00:	mov	r0, r4
   11f04:	add	r5, r5, #1
   11f08:	ldr	r1, [r3, r6]
   11f0c:	bl	10568 <mythread_thread_join@plt>
   11f10:	cmp	r0, #0
   11f14:	mov	r0, r4
   11f18:	beq	11ed8 <mythread_quit@@Base+0xa8>
   11f1c:	mov	r0, #1
   11f20:	pop	{r4, r5, r6, r7, r8, pc}

00011f24 <mythread_stop@@Base>:
   11f24:	push	{r4, r5, r6, lr}
   11f28:	ldr	r5, [r0, #36]	; 0x24
   11f2c:	ands	r5, r5, #4
   11f30:	beq	11f3c <mythread_stop@@Base+0x18>
   11f34:	mov	r0, #0
   11f38:	pop	{r4, r5, r6, pc}
   11f3c:	mov	r4, r0
   11f40:	mov	r1, #4
   11f44:	bl	10ae4 <mythread_option_set@plt>
   11f48:	ldr	r2, [r4, #4]
   11f4c:	cmp	r2, #0
   11f50:	beq	11f34 <mythread_stop@@Base+0x10>
   11f54:	ldr	r3, [r4]
   11f58:	mov	r6, r5
   11f5c:	add	r1, r3, r5
   11f60:	ldr	r1, [r1, #16]
   11f64:	tst	r1, #4
   11f68:	bne	11f8c <mythread_stop@@Base+0x68>
   11f6c:	ldr	r0, [r4, #24]
   11f70:	bl	100a0 <mythread_nanosleep_sleep@plt>
   11f74:	ldr	r3, [r4]
   11f78:	add	r2, r3, r5
   11f7c:	ldr	r2, [r2, #16]
   11f80:	tst	r2, #4
   11f84:	beq	11f6c <mythread_stop@@Base+0x48>
   11f88:	ldr	r2, [r4, #4]
   11f8c:	add	r6, r6, #1
   11f90:	cmp	r6, r2
   11f94:	add	r5, r5, #40	; 0x28
   11f98:	bcc	11f5c <mythread_stop@@Base+0x38>
   11f9c:	mov	r0, #0
   11fa0:	pop	{r4, r5, r6, pc}

00011fa4 <mythread_suspend@@Base>:
   11fa4:	push	{r4, r5, r6, lr}
   11fa8:	ldr	r5, [r0, #36]	; 0x24
   11fac:	ands	r5, r5, #1
   11fb0:	beq	11fbc <mythread_suspend@@Base+0x18>
   11fb4:	mov	r0, #0
   11fb8:	pop	{r4, r5, r6, pc}
   11fbc:	mov	r4, r0
   11fc0:	mov	r1, #1
   11fc4:	bl	10ae4 <mythread_option_set@plt>
   11fc8:	ldr	r1, [r4, #4]
   11fcc:	cmp	r1, #0
   11fd0:	beq	11fb4 <mythread_suspend@@Base+0x10>
   11fd4:	ldr	r2, [r4]
   11fd8:	mov	r6, r5
   11fdc:	add	r3, r2, r5
   11fe0:	ldr	r0, [r3, #16]
   11fe4:	tst	r0, #4
   11fe8:	bne	12028 <mythread_suspend@@Base+0x84>
   11fec:	ldr	r3, [r3, #16]
   11ff0:	tst	r3, #1
   11ff4:	beq	12008 <mythread_suspend@@Base+0x64>
   11ff8:	b	12028 <mythread_suspend@@Base+0x84>
   11ffc:	ldr	r3, [r3, #16]
   12000:	tst	r3, #1
   12004:	bne	12024 <mythread_suspend@@Base+0x80>
   12008:	ldr	r0, [r4, #24]
   1200c:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12010:	ldr	r2, [r4]
   12014:	add	r3, r2, r5
   12018:	ldr	r1, [r3, #16]
   1201c:	tst	r1, #4
   12020:	beq	11ffc <mythread_suspend@@Base+0x58>
   12024:	ldr	r1, [r4, #4]
   12028:	add	r6, r6, #1
   1202c:	cmp	r6, r1
   12030:	add	r5, r5, #40	; 0x28
   12034:	bcc	11fdc <mythread_suspend@@Base+0x38>
   12038:	mov	r0, #0
   1203c:	pop	{r4, r5, r6, pc}

00012040 <mythread_resume@@Base>:
   12040:	push	{r4, r5, r6, r7, r8, lr}
   12044:	ldr	r4, [r0, #36]	; 0x24
   12048:	ands	r4, r4, #1
   1204c:	bne	120c0 <mythread_resume@@Base+0x80>
   12050:	mov	r7, r0
   12054:	mov	r6, r1
   12058:	bl	10ae4 <mythread_option_set@plt>
   1205c:	ldr	r1, [r7, #4]
   12060:	cmp	r1, #0
   12064:	movne	r5, r4
   12068:	bne	12078 <mythread_resume@@Base+0x38>
   1206c:	b	120b8 <mythread_resume@@Base+0x78>
   12070:	cmp	r5, r1
   12074:	bcs	120b8 <mythread_resume@@Base+0x78>
   12078:	ldr	r3, [r7]
   1207c:	add	r5, r5, #1
   12080:	add	r3, r3, r4
   12084:	add	r4, r4, #40	; 0x28
   12088:	ldr	r2, [r3, #16]
   1208c:	tst	r2, #4
   12090:	beq	12070 <mythread_resume@@Base+0x30>
   12094:	str	r6, [r3, #16]
   12098:	ldr	r1, [r3, #24]
   1209c:	mov	r0, r7
   120a0:	bl	10d0c <mythread_mutex_post@plt>
   120a4:	cmp	r0, #0
   120a8:	bne	120cc <mythread_resume@@Base+0x8c>
   120ac:	ldr	r1, [r7, #4]
   120b0:	cmp	r5, r1
   120b4:	bcc	12078 <mythread_resume@@Base+0x38>
   120b8:	mov	r0, #0
   120bc:	pop	{r4, r5, r6, r7, r8, pc}
   120c0:	bl	10ae4 <mythread_option_set@plt>
   120c4:	mov	r0, #0
   120c8:	pop	{r4, r5, r6, r7, r8, pc}
   120cc:	mov	r0, #1
   120d0:	pop	{r4, r5, r6, r7, r8, pc}

000120d4 <mythread_destroy@@Base>:
   120d4:	push	{r4, r5, r6, r7, r8, lr}
   120d8:	subs	r4, r0, #0
   120dc:	beq	12134 <mythread_destroy@@Base+0x60>
   120e0:	mov	r5, r3
   120e4:	ldr	r3, [r4]
   120e8:	cmp	r3, #0
   120ec:	beq	12118 <mythread_destroy@@Base+0x44>
   120f0:	mov	r6, r1
   120f4:	mov	r7, r2
   120f8:	mov	r1, #2
   120fc:	bl	104c0 <mythread_resume@plt>
   12100:	mov	r2, r7
   12104:	mov	r1, r6
   12108:	mov	r0, r4
   1210c:	bl	1058c <mythread_quit@plt>
   12110:	ldr	r0, [r4]
   12114:	bl	10dcc <mycore_free@plt>
   12118:	ldr	r1, [r4, #20]
   1211c:	mov	r0, r4
   12120:	bl	11084 <mythread_thread_attr_destroy@plt>
   12124:	ldr	r0, [r4, #24]
   12128:	bl	10c04 <mythread_nanosleep_destroy@plt>
   1212c:	cmp	r5, #0
   12130:	bne	1213c <mythread_destroy@@Base+0x68>
   12134:	mov	r0, r4
   12138:	pop	{r4, r5, r6, r7, r8, pc}
   1213c:	mov	r0, r4
   12140:	bl	10dcc <mycore_free@plt>
   12144:	mov	r4, #0
   12148:	b	12134 <mythread_destroy@@Base+0x60>

0001214c <mythread_entry_join@@Base>:
   1214c:	subs	r3, r1, #0
   12150:	push	{r4, lr}
   12154:	mov	r4, r0
   12158:	beq	12168 <mythread_entry_join@@Base+0x1c>
   1215c:	mov	r1, r0
   12160:	ldr	r0, [r0, #32]
   12164:	blx	r3
   12168:	ldr	r1, [r4]
   1216c:	ldr	r0, [r4, #32]
   12170:	bl	10568 <mythread_thread_join@plt>
   12174:	adds	r0, r0, #0
   12178:	movne	r0, #1
   1217c:	pop	{r4, pc}

00012180 <mythread_entry_quit@@Base>:
   12180:	subs	r3, r1, #0
   12184:	push	{r4, lr}
   12188:	mov	r4, r0
   1218c:	beq	1219c <mythread_entry_quit@@Base+0x1c>
   12190:	mov	r1, r0
   12194:	ldr	r0, [r0, #32]
   12198:	blx	r3
   1219c:	ldr	r1, [r4]
   121a0:	ldr	r0, [r4, #32]
   121a4:	bl	10568 <mythread_thread_join@plt>
   121a8:	cmp	r0, #0
   121ac:	beq	121b8 <mythread_entry_quit@@Base+0x38>
   121b0:	mov	r0, #1
   121b4:	pop	{r4, pc}
   121b8:	ldr	r1, [r4]
   121bc:	ldr	r0, [r4, #32]
   121c0:	bl	109f4 <mythread_thread_destroy@plt>
   121c4:	adds	r0, r0, #0
   121c8:	movne	r0, #1
   121cc:	pop	{r4, pc}

000121d0 <mythread_entry_stop@@Base>:
   121d0:	ldr	r3, [r0, #16]
   121d4:	tst	r3, #4
   121d8:	bne	12218 <mythread_entry_stop@@Base+0x48>
   121dc:	mov	r3, #4
   121e0:	push	{r4, lr}
   121e4:	mov	r4, r0
   121e8:	str	r3, [r0, #16]
   121ec:	ldr	r3, [r0, #16]
   121f0:	tst	r3, #4
   121f4:	bne	12210 <mythread_entry_stop@@Base+0x40>
   121f8:	ldr	r3, [r4, #32]
   121fc:	ldr	r0, [r3, #24]
   12200:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12204:	ldr	r3, [r4, #16]
   12208:	tst	r3, #4
   1220c:	beq	121f8 <mythread_entry_stop@@Base+0x28>
   12210:	mov	r0, #0
   12214:	pop	{r4, pc}
   12218:	mov	r0, #0
   1221c:	bx	lr

00012220 <mythread_entry_suspend@@Base>:
   12220:	ldr	r3, [r0, #16]
   12224:	tst	r3, #1
   12228:	bne	12278 <mythread_entry_suspend@@Base+0x58>
   1222c:	mov	r3, #1
   12230:	str	r3, [r0, #16]
   12234:	ldr	r3, [r0, #16]
   12238:	tst	r3, #4
   1223c:	bne	12278 <mythread_entry_suspend@@Base+0x58>
   12240:	push	{r4, lr}
   12244:	mov	r4, r0
   12248:	b	12264 <mythread_entry_suspend@@Base+0x44>
   1224c:	ldr	r3, [r4, #32]
   12250:	ldr	r0, [r3, #24]
   12254:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12258:	ldr	r3, [r4, #16]
   1225c:	tst	r3, #4
   12260:	bne	12270 <mythread_entry_suspend@@Base+0x50>
   12264:	ldr	r3, [r4, #16]
   12268:	tst	r3, #1
   1226c:	beq	1224c <mythread_entry_suspend@@Base+0x2c>
   12270:	mov	r0, #0
   12274:	pop	{r4, pc}
   12278:	mov	r0, #0
   1227c:	bx	lr

00012280 <mythread_entry_resume@@Base>:
   12280:	ldr	r3, [r0, #16]
   12284:	mov	r2, r0
   12288:	tst	r3, #1
   1228c:	bne	122c8 <mythread_entry_resume@@Base+0x48>
   12290:	ldr	r3, [r0, #16]
   12294:	ands	r3, r3, #4
   12298:	bne	122a8 <mythread_entry_resume@@Base+0x28>
   1229c:	mov	r0, r3
   122a0:	str	r1, [r2, #16]
   122a4:	bx	lr
   122a8:	push	{r4, lr}
   122ac:	str	r1, [r0, #16]
   122b0:	ldr	r1, [r0, #24]
   122b4:	ldr	r0, [r0, #32]
   122b8:	bl	10d0c <mythread_mutex_post@plt>
   122bc:	adds	r0, r0, #0
   122c0:	movne	r0, #1
   122c4:	pop	{r4, pc}
   122c8:	str	r1, [r0, #16]
   122cc:	mov	r0, #0
   122d0:	bx	lr

000122d4 <mythread_entry_status@@Base>:
   122d4:	ldr	r0, [r0, #20]
   122d8:	bx	lr

000122dc <mythread_entry_mythread@@Base>:
   122dc:	ldr	r0, [r0, #32]
   122e0:	bx	lr

000122e4 <mythread_callback_quit@@Base>:
   122e4:	ldr	r3, [r1, #16]
   122e8:	tst	r3, #2
   122ec:	bxne	lr
   122f0:	push	{r4, r5, r6, lr}
   122f4:	mov	r4, r1
   122f8:	mov	r5, r0
   122fc:	ldr	r0, [r5, #24]
   12300:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12304:	ldr	r3, [r4, #16]
   12308:	tst	r3, #2
   1230c:	beq	122fc <mythread_callback_quit@@Base+0x18>
   12310:	pop	{r4, r5, r6, pc}

00012314 <mythread_queue_create@@Base>:
   12314:	mov	r1, #28
   12318:	mov	r0, #1
   1231c:	b	ff14 <mycore_calloc@plt>

00012320 <mythread_queue_init@@Base>:
   12320:	push	{r4, r5, r6, lr}
   12324:	cmp	r1, #32
   12328:	mov	r4, r0
   1232c:	movcc	r1, #32
   12330:	mov	r0, #512	; 0x200
   12334:	str	r1, [r4, #20]
   12338:	str	r0, [r4, #8]
   1233c:	mov	r1, #4
   12340:	bl	ff14 <mycore_calloc@plt>
   12344:	cmp	r0, #0
   12348:	str	r0, [r4]
   1234c:	moveq	r3, #61	; 0x3d
   12350:	beq	12388 <mythread_queue_init@@Base+0x68>
   12354:	mov	r5, r0
   12358:	ldr	r0, [r4, #20]
   1235c:	ldr	r6, [r4, #4]
   12360:	add	r0, r0, r0, lsl #1
   12364:	lsl	r0, r0, #2
   12368:	bl	10c94 <mycore_malloc@plt>
   1236c:	ldr	r3, [r4]
   12370:	ldr	r2, [r4, #4]
   12374:	str	r0, [r5, r6, lsl #2]
   12378:	ldr	r2, [r3, r2, lsl #2]
   1237c:	cmp	r2, #0
   12380:	movne	r3, #0
   12384:	beq	12390 <mythread_queue_init@@Base+0x70>
   12388:	mov	r0, r3
   1238c:	pop	{r4, r5, r6, pc}
   12390:	mov	r0, r3
   12394:	bl	10dcc <mycore_free@plt>
   12398:	mov	r3, #62	; 0x3e
   1239c:	str	r0, [r4]
   123a0:	b	12388 <mythread_queue_init@@Base+0x68>

000123a4 <mythread_queue_clean@@Base>:
   123a4:	mov	r3, #0
   123a8:	str	r3, [r0, #24]
   123ac:	str	r3, [r0, #12]
   123b0:	str	r3, [r0, #4]
   123b4:	str	r3, [r0, #16]
   123b8:	bx	lr

000123bc <mythread_queue_destroy@@Base>:
   123bc:	push	{r4, r5, r6, lr}
   123c0:	subs	r5, r0, #0
   123c4:	beq	12408 <mythread_queue_destroy@@Base+0x4c>
   123c8:	ldr	r3, [r5]
   123cc:	cmp	r3, #0
   123d0:	beq	12400 <mythread_queue_destroy@@Base+0x44>
   123d4:	mov	r4, #0
   123d8:	b	123e0 <mythread_queue_destroy@@Base+0x24>
   123dc:	ldr	r3, [r5]
   123e0:	ldr	r0, [r3, r4, lsl #2]
   123e4:	bl	10dcc <mycore_free@plt>
   123e8:	ldr	r3, [r5, #4]
   123ec:	add	r4, r4, #1
   123f0:	cmp	r3, r4
   123f4:	bcs	123dc <mythread_queue_destroy@@Base+0x20>
   123f8:	ldr	r0, [r5]
   123fc:	bl	10dcc <mycore_free@plt>
   12400:	mov	r0, r5
   12404:	bl	10dcc <mycore_free@plt>
   12408:	mov	r0, #0
   1240c:	pop	{r4, r5, r6, pc}

00012410 <mythread_queue_node_clean@@Base>:
   12410:	mov	r3, #0
   12414:	str	r3, [r0]
   12418:	str	r3, [r0, #4]
   1241c:	str	r3, [r0, #8]
   12420:	bx	lr

00012424 <mythread_queue_get_prev_node@@Base>:
   12424:	ldr	r0, [r0, #8]
   12428:	bx	lr

0001242c <mythread_queue_get_current_node@@Base>:
   1242c:	ldr	r3, [r0, #12]
   12430:	ldr	r1, [r0, #4]
   12434:	ldr	r2, [r0]
   12438:	add	r3, r3, r3, lsl #1
   1243c:	ldr	r0, [r2, r1, lsl #2]
   12440:	add	r0, r0, r3, lsl #2
   12444:	bx	lr

00012448 <mythread_queue_get_first_node@@Base>:
   12448:	ldr	r3, [r0]
   1244c:	ldr	r0, [r3]
   12450:	bx	lr

00012454 <mythread_queue_count_used_node@@Base>:
   12454:	ldr	r0, [r0, #16]
   12458:	bx	lr

0001245c <mythread_queue_list_create@@Base>:
   1245c:	mov	r1, #12
   12460:	mov	r0, #1
   12464:	b	ff14 <mycore_calloc@plt>

00012468 <mythread_queue_list_destroy@@Base>:
   12468:	cmp	r0, #0
   1246c:	bxeq	lr
   12470:	b	10dcc <mycore_free@plt>

00012474 <mythread_queue_list_get_count@@Base>:
   12474:	ldr	r0, [r0, #8]
   12478:	bx	lr

0001247c <mythread_queue_list_wait_for_done@@Base>:
   1247c:	cmp	r1, #0
   12480:	bxeq	lr
   12484:	push	{r4, r5, r6, r7, r8, lr}
   12488:	ldr	r4, [r1]
   1248c:	cmp	r4, #0
   12490:	popeq	{r4, r5, r6, r7, r8, pc}
   12494:	ldr	r1, [r0, #4]
   12498:	mov	r6, r0
   1249c:	cmp	r1, #0
   124a0:	beq	12508 <mythread_queue_list_wait_for_done@@Base+0x8c>
   124a4:	ldr	r2, [r4, #4]
   124a8:	ldr	r3, [r4]
   124ac:	mov	r7, #0
   124b0:	ldr	ip, [r2, r7, lsl #2]
   124b4:	ldr	r0, [r3, #16]
   124b8:	lsl	r5, r7, #2
   124bc:	cmp	ip, r0
   124c0:	bcs	124e8 <mythread_queue_list_wait_for_done@@Base+0x6c>
   124c4:	ldr	r0, [r6, #24]
   124c8:	bl	100a0 <mythread_nanosleep_sleep@plt>
   124cc:	ldr	r2, [r4, #4]
   124d0:	ldr	r3, [r4]
   124d4:	ldr	r0, [r2, r5]
   124d8:	ldr	r1, [r3, #16]
   124dc:	cmp	r0, r1
   124e0:	bcc	124c4 <mythread_queue_list_wait_for_done@@Base+0x48>
   124e4:	ldr	r1, [r6, #4]
   124e8:	add	r7, r7, #1
   124ec:	cmp	r7, r1
   124f0:	bcc	124b0 <mythread_queue_list_wait_for_done@@Base+0x34>
   124f4:	ldr	r4, [r4, #12]
   124f8:	cmp	r4, #0
   124fc:	popeq	{r4, r5, r6, r7, r8, pc}
   12500:	cmp	r1, #0
   12504:	bne	124a4 <mythread_queue_list_wait_for_done@@Base+0x28>
   12508:	ldr	r3, [r4, #12]
   1250c:	cmp	r3, #0
   12510:	popeq	{r4, r5, r6, r7, r8, pc}
   12514:	ldr	r4, [r3, #12]
   12518:	cmp	r4, #0
   1251c:	bne	12508 <mythread_queue_list_wait_for_done@@Base+0x8c>
   12520:	pop	{r4, r5, r6, r7, r8, pc}

00012524 <mythread_queue_node_malloc@@Base>:
   12524:	ldr	r3, [r1, #12]
   12528:	push	{r4, r5, r6, r7, r8, lr}
   1252c:	mov	r6, r2
   12530:	ldr	r2, [r1, #20]
   12534:	add	r3, r3, #1
   12538:	cmp	r3, r2
   1253c:	mov	r4, r1
   12540:	str	r3, [r1, #12]
   12544:	bcs	12570 <mythread_queue_node_malloc@@Base+0x4c>
   12548:	ldr	r1, [r1, #4]
   1254c:	ldr	r2, [r4]
   12550:	add	r3, r3, r3, lsl #1
   12554:	ldr	r0, [r2, r1, lsl #2]
   12558:	lsl	r3, r3, #2
   1255c:	ldr	r2, [r4, #16]
   12560:	add	r0, r0, r3
   12564:	add	r3, r2, #1
   12568:	str	r3, [r4, #16]
   1256c:	pop	{r4, r5, r6, r7, r8, pc}
   12570:	ldr	r5, [r1, #4]
   12574:	ldr	r3, [r1, #8]
   12578:	add	r5, r5, #1
   1257c:	cmp	r5, r3
   12580:	str	r5, [r1, #4]
   12584:	bcs	125a8 <mythread_queue_node_malloc@@Base+0x84>
   12588:	ldr	r7, [r1]
   1258c:	ldr	r0, [r7, r5, lsl #2]
   12590:	cmp	r0, #0
   12594:	beq	12614 <mythread_queue_node_malloc@@Base+0xf0>
   12598:	mov	r2, #0
   1259c:	mov	r3, r2
   125a0:	str	r2, [r4, #12]
   125a4:	b	1255c <mythread_queue_node_malloc@@Base+0x38>
   125a8:	cmp	r0, #0
   125ac:	beq	125bc <mythread_queue_node_malloc@@Base+0x98>
   125b0:	ldr	r1, [r0, #16]
   125b4:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   125b8:	ldr	r3, [r4, #8]
   125bc:	add	r5, r3, #512	; 0x200
   125c0:	ldr	r0, [r4]
   125c4:	lsl	r1, r5, #2
   125c8:	bl	fbd8 <mycore_realloc@plt>
   125cc:	subs	r7, r0, #0
   125d0:	beq	125fc <mythread_queue_node_malloc@@Base+0xd8>
   125d4:	ldr	r0, [r4, #4]
   125d8:	mov	r1, #0
   125dc:	sub	r2, r5, r0
   125e0:	add	r0, r7, r0, lsl #2
   125e4:	lsl	r2, r2, #2
   125e8:	bl	108b0 <memset@plt>
   125ec:	str	r5, [r4, #8]
   125f0:	str	r7, [r4]
   125f4:	ldr	r5, [r4, #4]
   125f8:	b	1258c <mythread_queue_node_malloc@@Base+0x68>
   125fc:	cmp	r6, #0
   12600:	beq	12650 <mythread_queue_node_malloc@@Base+0x12c>
   12604:	mov	r3, #61	; 0x3d
   12608:	mov	r0, r7
   1260c:	str	r3, [r6]
   12610:	pop	{r4, r5, r6, r7, r8, pc}
   12614:	ldr	r0, [r4, #20]
   12618:	add	r0, r0, r0, lsl #1
   1261c:	lsl	r0, r0, #2
   12620:	bl	10c94 <mycore_malloc@plt>
   12624:	ldr	r2, [r4, #4]
   12628:	ldr	r3, [r4]
   1262c:	str	r0, [r7, r5, lsl #2]
   12630:	ldr	r0, [r3, r2, lsl #2]
   12634:	cmp	r0, #0
   12638:	bne	12598 <mythread_queue_node_malloc@@Base+0x74>
   1263c:	cmp	r6, #0
   12640:	beq	12650 <mythread_queue_node_malloc@@Base+0x12c>
   12644:	mov	r3, #62	; 0x3e
   12648:	str	r3, [r6]
   1264c:	pop	{r4, r5, r6, r7, r8, pc}
   12650:	mov	r0, #0
   12654:	pop	{r4, r5, r6, r7, r8, pc}

00012658 <mythread_queue_node_malloc_limit@@Base>:
   12658:	push	{r4, r5, r6, r7, r8, lr}
   1265c:	mov	r4, r1
   12660:	ldr	r1, [r1, #12]
   12664:	ldr	ip, [r4, #16]
   12668:	add	r1, r1, #1
   1266c:	cmp	ip, r2
   12670:	str	r1, [r4, #12]
   12674:	bcc	126c4 <mythread_queue_node_malloc_limit@@Base+0x6c>
   12678:	ldr	r3, [r4, #16]
   1267c:	cmp	r0, #0
   12680:	add	r3, r3, #1
   12684:	str	r3, [r4, #16]
   12688:	beq	12694 <mythread_queue_node_malloc_limit@@Base+0x3c>
   1268c:	ldr	r1, [r0, #16]
   12690:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   12694:	ldr	r3, [r4]
   12698:	mov	r1, #0
   1269c:	str	r1, [r4, #24]
   126a0:	ldr	r0, [r3]
   126a4:	str	r1, [r4, #12]
   126a8:	str	r1, [r4, #4]
   126ac:	str	r1, [r4, #16]
   126b0:	ldr	r3, [r4, #16]
   126b4:	add	r0, r0, r1
   126b8:	add	r3, r3, #1
   126bc:	str	r3, [r4, #16]
   126c0:	pop	{r4, r5, r6, r7, r8, pc}
   126c4:	mov	r6, r3
   126c8:	ldr	r3, [r4, #20]
   126cc:	cmp	r1, r3
   126d0:	bcc	12740 <mythread_queue_node_malloc_limit@@Base+0xe8>
   126d4:	ldr	r5, [r4, #4]
   126d8:	ldr	r3, [r4, #8]
   126dc:	add	r5, r5, #1
   126e0:	cmp	r5, r3
   126e4:	str	r5, [r4, #4]
   126e8:	bcc	12758 <mythread_queue_node_malloc_limit@@Base+0x100>
   126ec:	cmp	r0, #0
   126f0:	beq	12700 <mythread_queue_node_malloc_limit@@Base+0xa8>
   126f4:	ldr	r1, [r0, #16]
   126f8:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   126fc:	ldr	r3, [r4, #8]
   12700:	add	r5, r3, #512	; 0x200
   12704:	ldr	r0, [r4]
   12708:	lsl	r1, r5, #2
   1270c:	bl	fbd8 <mycore_realloc@plt>
   12710:	subs	r7, r0, #0
   12714:	beq	12778 <mythread_queue_node_malloc_limit@@Base+0x120>
   12718:	ldr	r0, [r4, #4]
   1271c:	mov	r1, #0
   12720:	sub	r2, r5, r0
   12724:	add	r0, r7, r0, lsl #2
   12728:	lsl	r2, r2, #2
   1272c:	bl	108b0 <memset@plt>
   12730:	str	r5, [r4, #8]
   12734:	str	r7, [r4]
   12738:	ldr	r5, [r4, #4]
   1273c:	b	1275c <mythread_queue_node_malloc_limit@@Base+0x104>
   12740:	ldr	r2, [r4, #4]
   12744:	ldr	r3, [r4]
   12748:	add	r1, r1, r1, lsl #1
   1274c:	ldr	r0, [r3, r2, lsl #2]
   12750:	lsl	r1, r1, #2
   12754:	b	126b0 <mythread_queue_node_malloc_limit@@Base+0x58>
   12758:	ldr	r7, [r4]
   1275c:	ldr	r0, [r7, r5, lsl #2]
   12760:	cmp	r0, #0
   12764:	beq	12790 <mythread_queue_node_malloc_limit@@Base+0x138>
   12768:	mov	r3, #0
   1276c:	mov	r1, r3
   12770:	str	r3, [r4, #12]
   12774:	b	126b0 <mythread_queue_node_malloc_limit@@Base+0x58>
   12778:	cmp	r6, #0
   1277c:	beq	127cc <mythread_queue_node_malloc_limit@@Base+0x174>
   12780:	mov	r3, #61	; 0x3d
   12784:	mov	r0, r7
   12788:	str	r3, [r6]
   1278c:	pop	{r4, r5, r6, r7, r8, pc}
   12790:	ldr	r0, [r4, #20]
   12794:	add	r0, r0, r0, lsl #1
   12798:	lsl	r0, r0, #2
   1279c:	bl	10c94 <mycore_malloc@plt>
   127a0:	ldr	r2, [r4, #4]
   127a4:	ldr	r3, [r4]
   127a8:	str	r0, [r7, r5, lsl #2]
   127ac:	ldr	r0, [r3, r2, lsl #2]
   127b0:	cmp	r0, #0
   127b4:	bne	12768 <mythread_queue_node_malloc_limit@@Base+0x110>
   127b8:	cmp	r6, #0
   127bc:	beq	127cc <mythread_queue_node_malloc_limit@@Base+0x174>
   127c0:	mov	r3, #62	; 0x3e
   127c4:	str	r3, [r6]
   127c8:	pop	{r4, r5, r6, r7, r8, pc}
   127cc:	mov	r0, #0
   127d0:	pop	{r4, r5, r6, r7, r8, pc}

000127d4 <mythread_queue_list_see_for_done@@Base>:
   127d4:	cmp	r1, #0
   127d8:	beq	12854 <mythread_queue_list_see_for_done@@Base+0x80>
   127dc:	push	{r4, lr}
   127e0:	ldr	r4, [r1]
   127e4:	cmp	r4, #0
   127e8:	beq	12844 <mythread_queue_list_see_for_done@@Base+0x70>
   127ec:	ldr	ip, [r0, #4]
   127f0:	cmp	ip, #0
   127f4:	beq	12838 <mythread_queue_list_see_for_done@@Base+0x64>
   127f8:	ldr	r2, [r4, #4]
   127fc:	ldr	lr, [r4]
   12800:	ldr	r1, [r2]
   12804:	ldr	r3, [lr, #16]
   12808:	cmp	r1, r3
   1280c:	bcc	1284c <mythread_queue_list_see_for_done@@Base+0x78>
   12810:	add	r2, r2, #4
   12814:	mov	r3, #0
   12818:	b	1282c <mythread_queue_list_see_for_done@@Base+0x58>
   1281c:	ldr	r0, [r2], #4
   12820:	ldr	r1, [lr, #16]
   12824:	cmp	r0, r1
   12828:	bcc	1284c <mythread_queue_list_see_for_done@@Base+0x78>
   1282c:	add	r3, r3, #1
   12830:	cmp	ip, r3
   12834:	bne	1281c <mythread_queue_list_see_for_done@@Base+0x48>
   12838:	ldr	r4, [r4, #12]
   1283c:	cmp	r4, #0
   12840:	bne	127f0 <mythread_queue_list_see_for_done@@Base+0x1c>
   12844:	mov	r0, #1
   12848:	pop	{r4, pc}
   1284c:	mov	r0, #0
   12850:	pop	{r4, pc}
   12854:	mov	r0, #1
   12858:	bx	lr

0001285c <mythread_queue_list_see_for_done_by_thread@@Base>:
   1285c:	cmp	r1, #0
   12860:	beq	128b4 <mythread_queue_list_see_for_done_by_thread@@Base+0x58>
   12864:	ldr	r3, [r1]
   12868:	cmp	r3, #0
   1286c:	beq	128b4 <mythread_queue_list_see_for_done_by_thread@@Base+0x58>
   12870:	ldr	r1, [r3, #4]
   12874:	ldr	ip, [r3]
   12878:	lsl	r0, r2, #2
   1287c:	ldr	r1, [r1, r2, lsl #2]
   12880:	ldr	r2, [ip, #16]
   12884:	cmp	r1, r2
   12888:	bcs	128a8 <mythread_queue_list_see_for_done_by_thread@@Base+0x4c>
   1288c:	b	128bc <mythread_queue_list_see_for_done_by_thread@@Base+0x60>
   12890:	ldr	r1, [r3, #4]
   12894:	ldr	r2, [r3]
   12898:	ldr	r1, [r1, r0]
   1289c:	ldr	r2, [r2, #16]
   128a0:	cmp	r1, r2
   128a4:	bcc	128bc <mythread_queue_list_see_for_done_by_thread@@Base+0x60>
   128a8:	ldr	r3, [r3, #12]
   128ac:	cmp	r3, #0
   128b0:	bne	12890 <mythread_queue_list_see_for_done_by_thread@@Base+0x34>
   128b4:	mov	r0, #1
   128b8:	bx	lr
   128bc:	mov	r0, #0
   128c0:	bx	lr

000128c4 <mythread_queue_list_entry_delete@@Base>:
   128c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   128c8:	subs	r6, r1, #0
   128cc:	mov	r5, r0
   128d0:	mov	sl, r2
   128d4:	mov	r7, r3
   128d8:	ldrb	r8, [sp, #32]
   128dc:	subne	r9, r0, #4
   128e0:	movne	r4, #0
   128e4:	beq	12904 <mythread_queue_list_entry_delete@@Base+0x40>
   128e8:	ldr	r3, [r9, #4]!
   128ec:	add	r4, r4, #1
   128f0:	subs	r0, r3, #0
   128f4:	beq	128fc <mythread_queue_list_entry_delete@@Base+0x38>
   128f8:	bl	100e8 <mythread_suspend@plt>
   128fc:	cmp	r6, r4
   12900:	bne	128e8 <mythread_queue_list_entry_delete@@Base+0x24>
   12904:	ldr	r3, [r7, #16]
   12908:	ldr	r2, [r7, #12]
   1290c:	cmp	r3, #0
   12910:	ldr	r1, [sl]
   12914:	strne	r2, [r3, #12]
   12918:	cmp	r2, #0
   1291c:	strne	r3, [r2, #16]
   12920:	cmp	r7, r1
   12924:	streq	r2, [sl]
   12928:	ldr	r2, [sl, #4]
   1292c:	cmp	r7, r2
   12930:	streq	r3, [sl, #4]
   12934:	ldr	r3, [sl, #8]
   12938:	cmp	r6, #0
   1293c:	sub	r3, r3, #1
   12940:	movne	r4, #0
   12944:	str	r3, [sl, #8]
   12948:	subne	r5, r5, #4
   1294c:	movne	r9, r4
   12950:	beq	12974 <mythread_queue_list_entry_delete@@Base+0xb0>
   12954:	ldr	r3, [r5, #4]!
   12958:	mov	r1, r9
   1295c:	subs	r0, r3, #0
   12960:	add	r4, r4, #1
   12964:	beq	1296c <mythread_queue_list_entry_delete@@Base+0xa8>
   12968:	bl	104c0 <mythread_resume@plt>
   1296c:	cmp	r6, r4
   12970:	bne	12954 <mythread_queue_list_entry_delete@@Base+0x90>
   12974:	cmp	r8, #0
   12978:	beq	1298c <mythread_queue_list_entry_delete@@Base+0xc8>
   1297c:	ldr	r0, [r7]
   12980:	cmp	r0, #0
   12984:	beq	1298c <mythread_queue_list_entry_delete@@Base+0xc8>
   12988:	bl	102d4 <mythread_queue_destroy@plt>
   1298c:	ldr	r0, [r7, #4]
   12990:	cmp	r0, #0
   12994:	beq	1299c <mythread_queue_list_entry_delete@@Base+0xd8>
   12998:	bl	10dcc <mycore_free@plt>
   1299c:	mov	r0, r7
   129a0:	bl	10dcc <mycore_free@plt>
   129a4:	mov	r0, #0
   129a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000129ac <mythread_queue_list_entry_clean@@Base>:
   129ac:	cmp	r0, #0
   129b0:	bxeq	lr
   129b4:	ldr	r0, [r0]
   129b8:	b	fd64 <mythread_queue_clean@plt>

000129bc <mythread_queue_list_entry_wait_for_done@@Base>:
   129bc:	push	{r4, r5, r6, r7, r8, lr}
   129c0:	subs	r4, r1, #0
   129c4:	popeq	{r4, r5, r6, r7, r8, pc}
   129c8:	ldr	r1, [r4, #8]
   129cc:	cmp	r1, #0
   129d0:	popeq	{r4, r5, r6, r7, r8, pc}
   129d4:	ldr	r2, [r4, #4]
   129d8:	ldr	r3, [r4]
   129dc:	mov	r6, r0
   129e0:	mov	r7, #0
   129e4:	ldr	ip, [r2, r7, lsl #2]
   129e8:	ldr	r0, [r3, #16]
   129ec:	lsl	r5, r7, #2
   129f0:	cmp	ip, r0
   129f4:	bcs	12a1c <mythread_queue_list_entry_wait_for_done@@Base+0x60>
   129f8:	ldr	r0, [r6, #24]
   129fc:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12a00:	ldr	r2, [r4, #4]
   12a04:	ldr	r3, [r4]
   12a08:	ldr	ip, [r2, r5]
   12a0c:	ldr	r1, [r3, #16]
   12a10:	cmp	ip, r1
   12a14:	bcc	129f8 <mythread_queue_list_entry_wait_for_done@@Base+0x3c>
   12a18:	ldr	r1, [r4, #8]
   12a1c:	add	r7, r7, #1
   12a20:	cmp	r7, r1
   12a24:	bcc	129e4 <mythread_queue_list_entry_wait_for_done@@Base+0x28>
   12a28:	pop	{r4, r5, r6, r7, r8, pc}

00012a2c <mythread_queue_node_malloc_round@@Base>:
   12a2c:	push	{r4, r5, r6, lr}
   12a30:	ldr	r4, [r1]
   12a34:	ldr	r3, [r4, #12]
   12a38:	ldr	lr, [r4, #20]
   12a3c:	add	r3, r3, #1
   12a40:	cmp	r3, lr
   12a44:	str	r3, [r4, #12]
   12a48:	bcc	12a8c <mythread_queue_node_malloc_round@@Base+0x60>
   12a4c:	ldr	r3, [r4, #16]
   12a50:	cmp	r0, #0
   12a54:	add	r3, r3, #1
   12a58:	mov	r5, r1
   12a5c:	str	r3, [r4, #16]
   12a60:	beq	12a68 <mythread_queue_node_malloc_round@@Base+0x3c>
   12a64:	bl	1097c <mythread_queue_list_entry_wait_for_done@plt>
   12a68:	mov	r0, r5
   12a6c:	bl	109a0 <mythread_queue_list_entry_clean@plt>
   12a70:	ldr	r3, [r4, #12]
   12a74:	ldr	r1, [r4, #4]
   12a78:	ldr	r2, [r4]
   12a7c:	add	r3, r3, r3, lsl #1
   12a80:	ldr	r0, [r2, r1, lsl #2]
   12a84:	add	r0, r0, r3, lsl #2
   12a88:	pop	{r4, r5, r6, pc}
   12a8c:	ldr	r2, [r4, #16]
   12a90:	add	r2, r2, #1
   12a94:	str	r2, [r4, #16]
   12a98:	b	12a74 <mythread_queue_node_malloc_round@@Base+0x48>

00012a9c <mythread_queue_list_entry_see_for_done@@Base>:
   12a9c:	cmp	r0, #0
   12aa0:	beq	12b04 <mythread_queue_list_entry_see_for_done@@Base+0x68>
   12aa4:	ldr	ip, [r0, #8]
   12aa8:	cmp	ip, #0
   12aac:	beq	12b04 <mythread_queue_list_entry_see_for_done@@Base+0x68>
   12ab0:	push	{lr}		; (str lr, [sp, #-4]!)
   12ab4:	ldr	r2, [r0, #4]
   12ab8:	ldr	lr, [r0]
   12abc:	ldr	r1, [r2]
   12ac0:	ldr	r3, [lr, #16]
   12ac4:	cmp	r1, r3
   12ac8:	bcc	12afc <mythread_queue_list_entry_see_for_done@@Base+0x60>
   12acc:	add	r2, r2, #4
   12ad0:	mov	r3, #0
   12ad4:	b	12ae8 <mythread_queue_list_entry_see_for_done@@Base+0x4c>
   12ad8:	ldr	r0, [r2], #4
   12adc:	ldr	r1, [lr, #16]
   12ae0:	cmp	r0, r1
   12ae4:	bcc	12afc <mythread_queue_list_entry_see_for_done@@Base+0x60>
   12ae8:	add	r3, r3, #1
   12aec:	cmp	r3, ip
   12af0:	bne	12ad8 <mythread_queue_list_entry_see_for_done@@Base+0x3c>
   12af4:	mov	r0, #1
   12af8:	pop	{pc}		; (ldr pc, [sp], #4)
   12afc:	mov	r0, #0
   12b00:	pop	{pc}		; (ldr pc, [sp], #4)
   12b04:	mov	r0, #1
   12b08:	bx	lr

00012b0c <mythread_queue_list_entry_make_batch@@Base>:
   12b0c:	cmp	r1, #0
   12b10:	bxeq	lr
   12b14:	ldr	ip, [r0, #12]
   12b18:	ldr	r0, [r0, #4]
   12b1c:	cmp	ip, r0
   12b20:	bxhi	lr
   12b24:	ldr	r2, [r1, #4]
   12b28:	mov	r3, #0
   12b2c:	add	r2, r2, ip, lsl #2
   12b30:	str	r3, [r2], #4
   12b34:	add	r3, r3, #1
   12b38:	add	r1, ip, r3
   12b3c:	cmp	r1, r0
   12b40:	bls	12b30 <mythread_queue_list_entry_make_batch@@Base+0x24>
   12b44:	bx	lr

00012b48 <mythread_queue_list_entry_make_stream@@Base>:
   12b48:	cmp	r1, #0
   12b4c:	bxeq	lr
   12b50:	ldr	r3, [r0, #12]
   12b54:	ldr	r0, [r0, #4]
   12b58:	cmp	r3, r0
   12b5c:	bxhi	lr
   12b60:	ldr	r2, [r1, #4]
   12b64:	mov	r1, #0
   12b68:	add	r2, r2, r3, lsl #2
   12b6c:	add	r3, r3, #1
   12b70:	cmp	r3, r0
   12b74:	str	r1, [r2], #4
   12b78:	bls	12b6c <mythread_queue_list_entry_make_stream@@Base+0x24>
   12b7c:	bx	lr

00012b80 <mythread_queue_list_entry_push@@Base>:
   12b80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b84:	mov	r8, r0
   12b88:	ldr	r5, [sp, #36]	; 0x24
   12b8c:	mov	r6, r1
   12b90:	cmp	r5, #0
   12b94:	mov	r9, r2
   12b98:	mov	sl, r3
   12b9c:	ldr	r4, [sp, #32]
   12ba0:	beq	12cc8 <mythread_queue_list_entry_push@@Base+0x148>
   12ba4:	mov	r3, #0
   12ba8:	str	r3, [r5]
   12bac:	mov	r1, #20
   12bb0:	mov	r0, #1
   12bb4:	bl	ff14 <mycore_calloc@plt>
   12bb8:	subs	r7, r0, #0
   12bbc:	beq	12cb4 <mythread_queue_list_entry_push@@Base+0x134>
   12bc0:	cmp	r4, #0
   12bc4:	str	r4, [r7, #8]
   12bc8:	streq	r4, [r7, #4]
   12bcc:	bne	12c8c <mythread_queue_list_entry_push@@Base+0x10c>
   12bd0:	cmp	r6, #0
   12bd4:	str	sl, [r7]
   12bd8:	subne	r5, r8, #4
   12bdc:	movne	r4, #0
   12be0:	bne	12c08 <mythread_queue_list_entry_push@@Base+0x88>
   12be4:	b	12c28 <mythread_queue_list_entry_push@@Base+0xa8>
   12be8:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   12bec:	ldr	r3, [r5, #4]!
   12bf0:	add	r4, r4, #1
   12bf4:	subs	r0, r3, #0
   12bf8:	beq	12c00 <mythread_queue_list_entry_push@@Base+0x80>
   12bfc:	bl	100e8 <mythread_suspend@plt>
   12c00:	cmp	r6, r4
   12c04:	beq	12c28 <mythread_queue_list_entry_push@@Base+0xa8>
   12c08:	ldr	r3, [r5, #4]
   12c0c:	mov	r1, r7
   12c10:	mov	r0, r3
   12c14:	ldr	r2, [r3, #32]
   12c18:	cmp	r2, #1
   12c1c:	bne	12be8 <mythread_queue_list_entry_push@@Base+0x68>
   12c20:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   12c24:	b	12bec <mythread_queue_list_entry_push@@Base+0x6c>
   12c28:	ldr	r3, [r9]
   12c2c:	cmp	r3, #0
   12c30:	beq	12ce4 <mythread_queue_list_entry_push@@Base+0x164>
   12c34:	ldr	r3, [r9, #4]
   12c38:	str	r7, [r3, #12]
   12c3c:	str	r3, [r7, #16]
   12c40:	str	r7, [r9, #4]
   12c44:	ldr	r3, [r9, #8]
   12c48:	cmp	r6, #0
   12c4c:	add	r3, r3, #1
   12c50:	str	r3, [r9, #8]
   12c54:	beq	12c84 <mythread_queue_list_entry_push@@Base+0x104>
   12c58:	mov	r4, #0
   12c5c:	sub	r5, r8, #4
   12c60:	mov	r8, r4
   12c64:	ldr	r3, [r5, #4]!
   12c68:	mov	r1, r8
   12c6c:	subs	r0, r3, #0
   12c70:	add	r4, r4, #1
   12c74:	beq	12c7c <mythread_queue_list_entry_push@@Base+0xfc>
   12c78:	bl	104c0 <mythread_resume@plt>
   12c7c:	cmp	r6, r4
   12c80:	bne	12c64 <mythread_queue_list_entry_push@@Base+0xe4>
   12c84:	mov	r0, r7
   12c88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c8c:	mov	r0, r4
   12c90:	mov	r1, #4
   12c94:	bl	ff14 <mycore_calloc@plt>
   12c98:	cmp	r0, #0
   12c9c:	str	r0, [r7, #4]
   12ca0:	bne	12bd0 <mythread_queue_list_entry_push@@Base+0x50>
   12ca4:	mov	r0, r7
   12ca8:	bl	10dcc <mycore_free@plt>
   12cac:	cmp	r5, #0
   12cb0:	beq	12cdc <mythread_queue_list_entry_push@@Base+0x15c>
   12cb4:	mov	r3, #60	; 0x3c
   12cb8:	mov	r7, #0
   12cbc:	str	r3, [r5]
   12cc0:	mov	r0, r7
   12cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12cc8:	mov	r1, #20
   12ccc:	mov	r0, #1
   12cd0:	bl	ff14 <mycore_calloc@plt>
   12cd4:	subs	r7, r0, #0
   12cd8:	bne	12bc0 <mythread_queue_list_entry_push@@Base+0x40>
   12cdc:	mov	r7, #0
   12ce0:	b	12c84 <mythread_queue_list_entry_push@@Base+0x104>
   12ce4:	str	r7, [r9]
   12ce8:	str	r7, [r9, #4]
   12cec:	b	12c44 <mythread_queue_list_entry_push@@Base+0xc4>

00012cf0 <mythread_function_see_opt@@Base>:
   12cf0:	push	{r4, r5, r6, lr}
   12cf4:	sub	sp, sp, #8
   12cf8:	ldr	r5, [r0, #28]
   12cfc:	str	r1, [sp, #4]
   12d00:	ldr	r1, [r5, #16]
   12d04:	ldr	ip, [r1, #8]
   12d08:	cmp	ip, r3
   12d0c:	movne	r6, #0
   12d10:	beq	12d20 <mythread_function_see_opt@@Base+0x30>
   12d14:	mov	r0, r6
   12d18:	add	sp, sp, #8
   12d1c:	pop	{r4, r5, r6, pc}
   12d20:	ldr	r3, [sp, #4]
   12d24:	mov	r4, r0
   12d28:	tst	r3, #4
   12d2c:	bne	12d84 <mythread_function_see_opt@@Base+0x94>
   12d30:	ldr	r3, [sp, #4]
   12d34:	tst	r3, #2
   12d38:	bne	12d54 <mythread_function_see_opt@@Base+0x64>
   12d3c:	ldr	r0, [sp, #24]
   12d40:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12d44:	mov	r6, #0
   12d48:	mov	r0, r6
   12d4c:	add	sp, sp, #8
   12d50:	pop	{r4, r5, r6, pc}
   12d54:	mov	r0, r5
   12d58:	bl	105d4 <mythread_queue_list_see_for_done_by_thread@plt>
   12d5c:	subs	r6, r0, #0
   12d60:	beq	12d3c <mythread_function_see_opt@@Base+0x4c>
   12d64:	mov	r0, r5
   12d68:	ldr	r1, [r4, #20]
   12d6c:	bl	10634 <mythread_mutex_close@plt>
   12d70:	ldr	r0, [r4, #24]
   12d74:	bl	10c04 <mythread_nanosleep_destroy@plt>
   12d78:	mov	r3, #2
   12d7c:	str	r3, [r4, #12]
   12d80:	b	12d14 <mythread_function_see_opt@@Base+0x24>
   12d84:	mov	r0, r5
   12d88:	bl	105d4 <mythread_queue_list_see_for_done_by_thread@plt>
   12d8c:	cmp	r0, #0
   12d90:	beq	12d3c <mythread_function_see_opt@@Base+0x4c>
   12d94:	mov	r3, #4
   12d98:	mov	r0, r5
   12d9c:	str	r3, [r4, #12]
   12da0:	ldr	r1, [r4, #20]
   12da4:	mov	r6, #0
   12da8:	bl	10d9c <mythread_mutex_wait@plt>
   12dac:	str	r6, [r4, #12]
   12db0:	b	12d14 <mythread_function_see_opt@@Base+0x24>

00012db4 <mythread_function_queue_batch@@Base>:
   12db4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12db8:	sub	sp, sp, #28
   12dbc:	ldr	sl, [r0, #28]
   12dc0:	ldr	r1, [r0]
   12dc4:	mov	r9, r0
   12dc8:	ldr	r3, [sl, #16]
   12dcc:	mov	r0, sl
   12dd0:	str	r3, [sp, #16]
   12dd4:	bl	fe54 <myhread_increase_id_by_entry_id@plt>
   12dd8:	ldr	r1, [r9, #20]
   12ddc:	mov	r4, r0
   12de0:	str	r0, [sp, #20]
   12de4:	mov	r0, sl
   12de8:	bl	10d9c <mythread_mutex_wait@plt>
   12dec:	lsl	r7, r4, #2
   12df0:	ldr	r3, [sl, #36]	; 0x24
   12df4:	tst	r3, #1
   12df8:	beq	12e2c <mythread_function_queue_batch@@Base+0x78>
   12dfc:	mov	r3, #1
   12e00:	str	r3, [r9, #12]
   12e04:	ldr	r3, [sl, #36]	; 0x24
   12e08:	tst	r3, #1
   12e0c:	beq	12e24 <mythread_function_queue_batch@@Base+0x70>
   12e10:	ldr	r0, [r9, #24]
   12e14:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12e18:	ldr	r3, [sl, #36]	; 0x24
   12e1c:	tst	r3, #1
   12e20:	bne	12e10 <mythread_function_queue_batch@@Base+0x5c>
   12e24:	mov	r3, #0
   12e28:	str	r3, [r9, #12]
   12e2c:	ldr	r3, [sp, #16]
   12e30:	ldr	r4, [r3]
   12e34:	cmp	r4, #0
   12e38:	beq	12f18 <mythread_function_queue_batch@@Base+0x164>
   12e3c:	mov	r8, #0
   12e40:	ldr	r5, [r4, #4]
   12e44:	ldr	r6, [r4]
   12e48:	ldr	r2, [r5, r7]
   12e4c:	ldr	r3, [r6, #16]
   12e50:	cmp	r2, r3
   12e54:	bcc	12ea8 <mythread_function_queue_batch@@Base+0xf4>
   12e58:	ldr	r4, [r4, #12]
   12e5c:	add	r8, r8, #1
   12e60:	cmp	r4, #0
   12e64:	bne	12e40 <mythread_function_queue_batch@@Base+0x8c>
   12e68:	ldr	r3, [sp, #16]
   12e6c:	ldr	r3, [r3, #8]
   12e70:	cmp	r3, r8
   12e74:	bne	12df0 <mythread_function_queue_batch@@Base+0x3c>
   12e78:	ldr	r2, [r9, #24]
   12e7c:	ldr	r1, [sl, #36]	; 0x24
   12e80:	mov	r3, r8
   12e84:	str	r2, [sp]
   12e88:	mov	r0, r9
   12e8c:	ldr	r2, [sp, #20]
   12e90:	bl	fecc <mythread_function_see_opt@plt>
   12e94:	cmp	r0, #0
   12e98:	beq	12df0 <mythread_function_queue_batch@@Base+0x3c>
   12e9c:	mov	r0, #0
   12ea0:	add	sp, sp, #28
   12ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ea8:	ldr	r0, [r5, r7]
   12eac:	ldr	r1, [r6, #20]
   12eb0:	ldr	r3, [r5, r7]
   12eb4:	ldr	r2, [r6, #20]
   12eb8:	str	r3, [sp, #12]
   12ebc:	str	r2, [sp, #8]
   12ec0:	bl	2e168 <mcsync_mutex_unlock@@Base+0x14>
   12ec4:	ldr	r2, [sp, #8]
   12ec8:	ldr	r3, [sp, #12]
   12ecc:	mov	r1, r2
   12ed0:	mov	fp, r0
   12ed4:	mov	r0, r3
   12ed8:	bl	2e354 <mcsync_mutex_unlock@@Base+0x200>
   12edc:	ldr	r2, [r6]
   12ee0:	ldr	r3, [r9, #4]
   12ee4:	ldr	r0, [r9]
   12ee8:	ldr	r2, [r2, fp, lsl #2]
   12eec:	add	r1, r1, r1, lsl #1
   12ef0:	add	r1, r2, r1, lsl #2
   12ef4:	blx	r3
   12ef8:	ldr	r4, [r4, #12]
   12efc:	ldr	r3, [r5, r7]
   12f00:	ldr	r2, [sl, #4]
   12f04:	cmp	r4, #0
   12f08:	add	r3, r3, r2
   12f0c:	str	r3, [r5, r7]
   12f10:	bne	12e40 <mythread_function_queue_batch@@Base+0x8c>
   12f14:	b	12e68 <mythread_function_queue_batch@@Base+0xb4>
   12f18:	mov	r8, r4
   12f1c:	b	12e6c <mythread_function_queue_batch@@Base+0xb8>

00012f20 <mythread_function_queue_stream@@Base>:
   12f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f24:	sub	sp, sp, #28
   12f28:	ldr	sl, [r0, #28]
   12f2c:	ldr	r1, [r0]
   12f30:	mov	r9, r0
   12f34:	ldr	r3, [sl, #16]
   12f38:	mov	r0, sl
   12f3c:	str	r3, [sp, #16]
   12f40:	bl	fe54 <myhread_increase_id_by_entry_id@plt>
   12f44:	ldr	r1, [r9, #20]
   12f48:	mov	r4, r0
   12f4c:	str	r0, [sp, #20]
   12f50:	mov	r0, sl
   12f54:	bl	10d9c <mythread_mutex_wait@plt>
   12f58:	lsl	r7, r4, #2
   12f5c:	ldr	r3, [sl, #36]	; 0x24
   12f60:	tst	r3, #1
   12f64:	beq	12f98 <mythread_function_queue_stream@@Base+0x78>
   12f68:	mov	r3, #1
   12f6c:	str	r3, [r9, #12]
   12f70:	ldr	r3, [sl, #36]	; 0x24
   12f74:	tst	r3, #1
   12f78:	beq	12f90 <mythread_function_queue_stream@@Base+0x70>
   12f7c:	ldr	r0, [r9, #24]
   12f80:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12f84:	ldr	r3, [sl, #36]	; 0x24
   12f88:	tst	r3, #1
   12f8c:	bne	12f7c <mythread_function_queue_stream@@Base+0x5c>
   12f90:	mov	r3, #0
   12f94:	str	r3, [r9, #12]
   12f98:	ldr	r3, [sp, #16]
   12f9c:	ldr	r4, [r3]
   12fa0:	cmp	r4, #0
   12fa4:	beq	13080 <mythread_function_queue_stream@@Base+0x160>
   12fa8:	mov	r8, #0
   12fac:	ldr	r5, [r4, #4]
   12fb0:	ldr	r6, [r4]
   12fb4:	ldr	r2, [r5, r7]
   12fb8:	ldr	r3, [r6, #16]
   12fbc:	cmp	r2, r3
   12fc0:	bcc	13014 <mythread_function_queue_stream@@Base+0xf4>
   12fc4:	ldr	r4, [r4, #12]
   12fc8:	add	r8, r8, #1
   12fcc:	cmp	r4, #0
   12fd0:	bne	12fac <mythread_function_queue_stream@@Base+0x8c>
   12fd4:	ldr	r3, [sp, #16]
   12fd8:	ldr	r3, [r3, #8]
   12fdc:	cmp	r3, r8
   12fe0:	bne	12f5c <mythread_function_queue_stream@@Base+0x3c>
   12fe4:	ldr	r2, [r9, #24]
   12fe8:	ldr	r1, [sl, #36]	; 0x24
   12fec:	mov	r3, r8
   12ff0:	str	r2, [sp]
   12ff4:	mov	r0, r9
   12ff8:	ldr	r2, [sp, #20]
   12ffc:	bl	fecc <mythread_function_see_opt@plt>
   13000:	cmp	r0, #0
   13004:	beq	12f5c <mythread_function_queue_stream@@Base+0x3c>
   13008:	mov	r0, #0
   1300c:	add	sp, sp, #28
   13010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13014:	ldr	r0, [r5, r7]
   13018:	ldr	r1, [r6, #20]
   1301c:	ldr	r3, [r5, r7]
   13020:	ldr	r2, [r6, #20]
   13024:	str	r3, [sp, #12]
   13028:	str	r2, [sp, #8]
   1302c:	bl	2e168 <mcsync_mutex_unlock@@Base+0x14>
   13030:	ldr	r2, [sp, #8]
   13034:	ldr	r3, [sp, #12]
   13038:	mov	r1, r2
   1303c:	mov	fp, r0
   13040:	mov	r0, r3
   13044:	bl	2e354 <mcsync_mutex_unlock@@Base+0x200>
   13048:	ldr	r2, [r6]
   1304c:	ldr	r3, [r9, #4]
   13050:	ldr	r0, [r9]
   13054:	ldr	r2, [r2, fp, lsl #2]
   13058:	add	r1, r1, r1, lsl #1
   1305c:	add	r1, r2, r1, lsl #2
   13060:	blx	r3
   13064:	ldr	r4, [r4, #12]
   13068:	ldr	r3, [r5, r7]
   1306c:	cmp	r4, #0
   13070:	add	r3, r3, #1
   13074:	str	r3, [r5, r7]
   13078:	bne	12fac <mythread_function_queue_stream@@Base+0x8c>
   1307c:	b	12fd4 <mythread_function_queue_stream@@Base+0xb4>
   13080:	mov	r8, r4
   13084:	b	12fd8 <mythread_function_queue_stream@@Base+0xb8>

00013088 <mythread_function@@Base>:
   13088:	push	{r4, r5, r6, lr}
   1308c:	mov	r4, r0
   13090:	ldr	r5, [r0, #28]
   13094:	ldr	r1, [r0, #20]
   13098:	mov	r0, r5
   1309c:	bl	10d9c <mythread_mutex_wait@plt>
   130a0:	ldr	r3, [r4, #4]
   130a4:	mov	r1, r4
   130a8:	ldr	r0, [r4]
   130ac:	blx	r3
   130b0:	ldr	r3, [r4, #12]
   130b4:	orr	r3, r3, #8
   130b8:	str	r3, [r4, #12]
   130bc:	ldr	r3, [r4, #12]
   130c0:	tst	r3, #1
   130c4:	ldr	r3, [r4, #12]
   130c8:	beq	13108 <mythread_function@@Base+0x80>
   130cc:	tst	r3, #1
   130d0:	beq	130e8 <mythread_function@@Base+0x60>
   130d4:	ldr	r0, [r4, #24]
   130d8:	bl	100a0 <mythread_nanosleep_sleep@plt>
   130dc:	ldr	r3, [r4, #12]
   130e0:	tst	r3, #1
   130e4:	bne	130d4 <mythread_function@@Base+0x4c>
   130e8:	ldr	r3, [r5, #36]	; 0x24
   130ec:	tst	r3, #2
   130f0:	bne	13128 <mythread_function@@Base+0xa0>
   130f4:	ldr	r3, [r4, #12]
   130f8:	ands	r3, r3, #2
   130fc:	bne	13128 <mythread_function@@Base+0xa0>
   13100:	str	r3, [r4, #12]
   13104:	b	130a0 <mythread_function@@Base+0x18>
   13108:	orr	r3, r3, #4
   1310c:	str	r3, [r4, #12]
   13110:	ldr	r1, [r4, #20]
   13114:	mov	r0, r5
   13118:	bl	10d9c <mythread_mutex_wait@plt>
   1311c:	ldr	r3, [r5, #36]	; 0x24
   13120:	tst	r3, #2
   13124:	beq	130f4 <mythread_function@@Base+0x6c>
   13128:	mov	r0, r5
   1312c:	ldr	r1, [r4, #20]
   13130:	bl	10634 <mythread_mutex_close@plt>
   13134:	ldr	r0, [r4, #24]
   13138:	bl	10c04 <mythread_nanosleep_destroy@plt>
   1313c:	mov	r3, #2
   13140:	str	r3, [r4, #12]
   13144:	mov	r0, #0
   13148:	pop	{r4, r5, r6, pc}

0001314c <mycore_power@@Base>:
   1314c:	cmp	r1, #0
   13150:	mov	r3, r0
   13154:	mov	r0, #1
   13158:	beq	13178 <mycore_power@@Base+0x2c>
   1315c:	mul	r2, r0, r3
   13160:	tst	r1, #1
   13164:	movne	r0, r2
   13168:	lsrs	r1, r1, #1
   1316c:	mul	r3, r3, r3
   13170:	bne	1315c <mycore_power@@Base+0x10>
   13174:	bx	lr
   13178:	bx	lr

0001317c <mycore_strncasecmp@@Base>:
   1317c:	cmp	r1, #0
   13180:	cmpne	r0, #0
   13184:	push	{r4, r5, r6, lr}
   13188:	moveq	r5, #1
   1318c:	movne	r5, #0
   13190:	beq	131fc <mycore_strncasecmp@@Base+0x80>
   13194:	cmp	r2, #0
   13198:	beq	131f4 <mycore_strncasecmp@@Base+0x78>
   1319c:	ldrb	ip, [r0]
   131a0:	ldrb	lr, [r1]
   131a4:	ldr	r3, [pc, #100]	; 13210 <mycore_strncasecmp@@Base+0x94>
   131a8:	add	r3, pc, r3
   131ac:	ldrb	ip, [r3, ip]
   131b0:	ldrb	r3, [r3, lr]
   131b4:	cmp	ip, r3
   131b8:	bne	13208 <mycore_strncasecmp@@Base+0x8c>
   131bc:	ldr	ip, [pc, #80]	; 13214 <mycore_strncasecmp@@Base+0x98>
   131c0:	add	r3, r0, #1
   131c4:	add	ip, pc, ip
   131c8:	add	r6, r0, r2
   131cc:	b	131e8 <mycore_strncasecmp@@Base+0x6c>
   131d0:	ldrb	r4, [r3], #1
   131d4:	ldrb	lr, [r1, #1]!
   131d8:	ldrb	r4, [ip, r4]
   131dc:	ldrb	lr, [ip, lr]
   131e0:	cmp	r4, lr
   131e4:	bne	13208 <mycore_strncasecmp@@Base+0x8c>
   131e8:	cmp	r3, r6
   131ec:	sub	r5, r3, r0
   131f0:	bne	131d0 <mycore_strncasecmp@@Base+0x54>
   131f4:	mov	r0, #0
   131f8:	pop	{r4, r5, r6, pc}
   131fc:	subs	r0, r0, r1
   13200:	movne	r0, #1
   13204:	pop	{r4, r5, r6, pc}
   13208:	sub	r0, r2, r5
   1320c:	pop	{r4, r5, r6, pc}
   13210:	ldrdeq	fp, [r1], -ip
   13214:	andeq	fp, r1, r0, asr #11

00013218 <mycore_strcasecmp@@Base>:
   13218:	cmp	r1, #0
   1321c:	cmpne	r0, #0
   13220:	push	{r4, r5, lr}
   13224:	moveq	lr, #1
   13228:	movne	lr, #0
   1322c:	beq	13290 <mycore_strcasecmp@@Base+0x78>
   13230:	ldrb	r2, [r0]
   13234:	ldrb	r3, [r1]
   13238:	ldr	ip, [pc, #116]	; 132b4 <mycore_strcasecmp@@Base+0x9c>
   1323c:	add	ip, pc, ip
   13240:	ldrb	r4, [ip, r2]
   13244:	ldrb	r3, [ip, r3]
   13248:	cmp	r4, r3
   1324c:	bne	132a4 <mycore_strcasecmp@@Base+0x8c>
   13250:	cmp	r2, #0
   13254:	movne	r2, ip
   13258:	bne	1326c <mycore_strcasecmp@@Base+0x54>
   1325c:	b	132ac <mycore_strcasecmp@@Base+0x94>
   13260:	cmp	r3, #0
   13264:	mov	lr, r5
   13268:	beq	1329c <mycore_strcasecmp@@Base+0x84>
   1326c:	ldrb	r3, [r0, #1]!
   13270:	ldrb	ip, [r1, #1]!
   13274:	add	r5, lr, #1
   13278:	ldrb	r4, [r2, r3]
   1327c:	ldrb	ip, [r2, ip]
   13280:	cmp	r4, ip
   13284:	beq	13260 <mycore_strcasecmp@@Base+0x48>
   13288:	add	r0, lr, #2
   1328c:	pop	{r4, r5, pc}
   13290:	subs	r0, r0, r1
   13294:	movne	r0, #1
   13298:	pop	{r4, r5, pc}
   1329c:	mov	r0, r3
   132a0:	pop	{r4, r5, pc}
   132a4:	mov	r0, #1
   132a8:	pop	{r4, r5, pc}
   132ac:	mov	r0, r2
   132b0:	pop	{r4, r5, pc}
   132b4:	andeq	fp, r1, r8, asr #10

000132b8 <mycore_strncmp@@Base>:
   132b8:	cmp	r1, #0
   132bc:	cmpne	r0, #0
   132c0:	push	{r4, r5, lr}
   132c4:	moveq	r4, #1
   132c8:	movne	r4, #0
   132cc:	beq	13318 <mycore_strncmp@@Base+0x60>
   132d0:	cmp	r2, #0
   132d4:	beq	13310 <mycore_strncmp@@Base+0x58>
   132d8:	ldrb	r3, [r0]
   132dc:	ldrb	ip, [r1]
   132e0:	cmp	ip, r3
   132e4:	addeq	r3, r0, #1
   132e8:	addeq	r5, r0, r2
   132ec:	beq	13304 <mycore_strncmp@@Base+0x4c>
   132f0:	b	13324 <mycore_strncmp@@Base+0x6c>
   132f4:	ldrb	ip, [r3], #1
   132f8:	ldrb	lr, [r1, #1]!
   132fc:	cmp	lr, ip
   13300:	bne	13324 <mycore_strncmp@@Base+0x6c>
   13304:	cmp	r3, r5
   13308:	sub	r4, r3, r0
   1330c:	bne	132f4 <mycore_strncmp@@Base+0x3c>
   13310:	mov	r0, #0
   13314:	pop	{r4, r5, pc}
   13318:	subs	r0, r0, r1
   1331c:	movne	r0, #1
   13320:	pop	{r4, r5, pc}
   13324:	sub	r0, r2, r4
   13328:	pop	{r4, r5, pc}

0001332c <mycore_strcmp@@Base>:
   1332c:	cmp	r1, #0
   13330:	cmpne	r0, #0
   13334:	moveq	r3, #1
   13338:	movne	r3, #0
   1333c:	beq	1338c <mycore_strcmp@@Base+0x60>
   13340:	ldrb	ip, [r0]
   13344:	ldrb	r2, [r1]
   13348:	cmp	r2, ip
   1334c:	bne	133a0 <mycore_strcmp@@Base+0x74>
   13350:	cmp	r2, #0
   13354:	beq	133a8 <mycore_strcmp@@Base+0x7c>
   13358:	push	{lr}		; (str lr, [sp, #-4]!)
   1335c:	mov	r2, r3
   13360:	b	13370 <mycore_strcmp@@Base+0x44>
   13364:	cmp	r3, #0
   13368:	mov	r2, lr
   1336c:	beq	13398 <mycore_strcmp@@Base+0x6c>
   13370:	ldrb	ip, [r0, #1]!
   13374:	ldrb	r3, [r1, #1]!
   13378:	add	lr, r2, #1
   1337c:	cmp	r3, ip
   13380:	beq	13364 <mycore_strcmp@@Base+0x38>
   13384:	add	r0, r2, #2
   13388:	pop	{pc}		; (ldr pc, [sp], #4)
   1338c:	subs	r0, r0, r1
   13390:	movne	r0, #1
   13394:	bx	lr
   13398:	mov	r0, r3
   1339c:	pop	{pc}		; (ldr pc, [sp], #4)
   133a0:	mov	r0, #1
   133a4:	bx	lr
   133a8:	mov	r0, r2
   133ac:	bx	lr

000133b0 <mycore_strcmp_ws@@Base>:
   133b0:	cmp	r1, #0
   133b4:	cmpne	r0, #0
   133b8:	beq	13444 <mycore_strcmp_ws@@Base+0x94>
   133bc:	ldrb	ip, [r0]
   133c0:	ldrb	r3, [r1]
   133c4:	cmp	r3, ip
   133c8:	bne	13458 <mycore_strcmp_ws@@Base+0xa8>
   133cc:	sub	ip, r3, #9
   133d0:	push	{r4, r5, lr}
   133d4:	sub	lr, r3, #12
   133d8:	cmp	lr, #1
   133dc:	cmphi	ip, #1
   133e0:	movls	ip, #1
   133e4:	movhi	ip, #0
   133e8:	tst	r3, #223	; 0xdf
   133ec:	orreq	ip, ip, #1
   133f0:	cmp	ip, #0
   133f4:	beq	13420 <mycore_strcmp_ws@@Base+0x70>
   133f8:	b	13450 <mycore_strcmp_ws@@Base+0xa0>
   133fc:	cmp	r4, #1
   13400:	cmphi	r3, #1
   13404:	movls	r3, #1
   13408:	movhi	r3, #0
   1340c:	tst	r2, #223	; 0xdf
   13410:	orreq	r3, r3, #1
   13414:	cmp	r3, #0
   13418:	mov	ip, r5
   1341c:	bne	13450 <mycore_strcmp_ws@@Base+0xa0>
   13420:	ldrb	r2, [r1, #1]!
   13424:	ldrb	lr, [r0, #1]!
   13428:	add	r5, ip, #1
   1342c:	sub	r3, r2, #9
   13430:	cmp	r2, lr
   13434:	sub	r4, r2, #12
   13438:	beq	133fc <mycore_strcmp_ws@@Base+0x4c>
   1343c:	add	r0, ip, #2
   13440:	pop	{r4, r5, pc}
   13444:	subs	r0, r0, r1
   13448:	movne	r0, #1
   1344c:	bx	lr
   13450:	mov	r0, #0
   13454:	pop	{r4, r5, pc}
   13458:	mov	r0, #1
   1345c:	bx	lr

00013460 <mycore_ustrcasecmp_without_checks_by_secondary@@Base>:
   13460:	ldrb	r3, [r0]
   13464:	cmp	r3, #0
   13468:	beq	134d4 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x74>
   1346c:	ldrb	ip, [r1]
   13470:	ldr	r2, [pc, #108]	; 134e4 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x84>
   13474:	add	r2, pc, r2
   13478:	ldrb	ip, [r2, ip]
   1347c:	ldrb	r3, [r2, r3]
   13480:	cmp	r3, ip
   13484:	bne	134dc <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x7c>
   13488:	ldrb	r3, [r0, #1]!
   1348c:	ldr	r2, [pc, #84]	; 134e8 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x88>
   13490:	cmp	r3, #0
   13494:	add	r2, pc, r2
   13498:	beq	134d4 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x74>
   1349c:	push	{lr}		; (str lr, [sp, #-4]!)
   134a0:	b	134b0 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x50>
   134a4:	ldrb	r3, [r0, #1]!
   134a8:	cmp	r3, #0
   134ac:	beq	134cc <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x6c>
   134b0:	ldrb	lr, [r1, #1]!
   134b4:	ldrb	ip, [r2, r3]
   134b8:	ldrb	r3, [r2, lr]
   134bc:	cmp	ip, r3
   134c0:	beq	134a4 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x44>
   134c4:	mov	r0, #0
   134c8:	pop	{pc}		; (ldr pc, [sp], #4)
   134cc:	mov	r0, #1
   134d0:	pop	{pc}		; (ldr pc, [sp], #4)
   134d4:	mov	r0, #1
   134d8:	bx	lr
   134dc:	mov	r0, #0
   134e0:	bx	lr
   134e4:	andeq	fp, r1, r0, lsl r3
   134e8:	strdeq	fp, [r1], -r0

000134ec <mycore_utils_avl_tree_create@@Base>:
   134ec:	mov	r1, #4
   134f0:	mov	r0, #1
   134f4:	b	ff14 <mycore_calloc@plt>

000134f8 <mycore_utils_avl_tree_init@@Base>:
   134f8:	push	{r4, lr}
   134fc:	mov	r4, r0
   13500:	bl	1001c <mcobject_create@plt>
   13504:	subs	r3, r0, #0
   13508:	str	r0, [r4]
   1350c:	beq	13528 <mycore_utils_avl_tree_init@@Base+0x30>
   13510:	mov	r2, #24
   13514:	mov	r1, #256	; 0x100
   13518:	bl	10778 <mcobject_init@plt>
   1351c:	adds	r0, r0, #0
   13520:	movne	r0, #1
   13524:	pop	{r4, pc}
   13528:	mov	r0, #2
   1352c:	pop	{r4, pc}

00013530 <mycore_utils_avl_tree_clean@@Base>:
   13530:	ldr	r0, [r0]
   13534:	b	10f70 <mcobject_clean@plt>

00013538 <mycore_utils_avl_tree_destroy@@Base>:
   13538:	push	{r4, r5, r6, lr}
   1353c:	subs	r4, r0, #0
   13540:	beq	1355c <mycore_utils_avl_tree_destroy@@Base+0x24>
   13544:	mov	r5, r1
   13548:	ldr	r0, [r4]
   1354c:	mov	r1, #1
   13550:	bl	fdd0 <mcobject_destroy@plt>
   13554:	cmp	r5, #0
   13558:	bne	13564 <mycore_utils_avl_tree_destroy@@Base+0x2c>
   1355c:	mov	r0, r4
   13560:	pop	{r4, r5, r6, pc}
   13564:	mov	r0, r4
   13568:	bl	10dcc <mycore_free@plt>
   1356c:	mov	r4, #0
   13570:	b	1355c <mycore_utils_avl_tree_destroy@@Base+0x24>

00013574 <mycore_utils_avl_tree_node_create_root@@Base>:
   13574:	push	{r4, r5, r6, lr}
   13578:	mov	r5, r1
   1357c:	ldr	r0, [r0]
   13580:	mov	r1, #0
   13584:	mov	r4, r2
   13588:	bl	10a60 <mcobject_malloc@plt>
   1358c:	mov	r1, #0
   13590:	stm	r0, {r4, r5}
   13594:	str	r1, [r0, #8]
   13598:	str	r1, [r0, #12]
   1359c:	str	r1, [r0, #16]
   135a0:	str	r1, [r0, #20]
   135a4:	pop	{r4, r5, r6, pc}

000135a8 <mycore_utils_avl_tree_node_clean@@Base>:
   135a8:	mov	r3, #0
   135ac:	str	r3, [r0]
   135b0:	str	r3, [r0, #4]
   135b4:	str	r3, [r0, #8]
   135b8:	str	r3, [r0, #12]
   135bc:	str	r3, [r0, #16]
   135c0:	str	r3, [r0, #20]
   135c4:	bx	lr

000135c8 <mycore_utils_avl_tree_node_height@@Base>:
   135c8:	cmp	r0, #0
   135cc:	ldrshne	r0, [r0, #20]
   135d0:	bx	lr

000135d4 <mycore_utils_avl_tree_node_balance_factor@@Base>:
   135d4:	push	{r4, r5, r6, lr}
   135d8:	mov	r5, r0
   135dc:	ldr	r0, [r0, #12]
   135e0:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   135e4:	mov	r4, r0
   135e8:	ldr	r0, [r5, #8]
   135ec:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   135f0:	sub	r0, r4, r0
   135f4:	sxth	r0, r0
   135f8:	pop	{r4, r5, r6, pc}

000135fc <mycore_utils_avl_tree_node_set_height@@Base>:
   135fc:	push	{r4, r5, r6, lr}
   13600:	mov	r5, r0
   13604:	ldr	r0, [r0, #8]
   13608:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   1360c:	mov	r4, r0
   13610:	ldr	r0, [r5, #12]
   13614:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   13618:	cmp	r4, r0
   1361c:	movge	r0, r4
   13620:	add	r0, r0, #1
   13624:	strh	r0, [r5, #20]
   13628:	pop	{r4, r5, r6, pc}

0001362c <mycore_utils_avl_tree_node_rotate_right@@Base>:
   1362c:	push	{r4, lr}
   13630:	ldr	r4, [r0, #8]
   13634:	ldr	r1, [r0, #16]
   13638:	ldr	r2, [r4, #12]
   1363c:	str	r1, [r4, #16]
   13640:	cmp	r2, #0
   13644:	strne	r0, [r2, #16]
   13648:	str	r2, [r0, #8]
   1364c:	str	r4, [r0, #16]
   13650:	str	r0, [r4, #12]
   13654:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   13658:	mov	r0, r4
   1365c:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   13660:	mov	r0, r4
   13664:	pop	{r4, pc}

00013668 <mycore_utils_avl_tree_node_rotate_left@@Base>:
   13668:	push	{r4, lr}
   1366c:	ldr	r4, [r0, #12]
   13670:	ldr	r1, [r0, #16]
   13674:	ldr	r2, [r4, #8]
   13678:	str	r1, [r4, #16]
   1367c:	cmp	r2, #0
   13680:	strne	r0, [r2, #16]
   13684:	str	r2, [r0, #12]
   13688:	str	r4, [r0, #16]
   1368c:	str	r0, [r4, #8]
   13690:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   13694:	mov	r0, r4
   13698:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   1369c:	mov	r0, r4
   136a0:	pop	{r4, pc}

000136a4 <mycore_utils_avl_tree_node_balance@@Base>:
   136a4:	push	{r4, r5, r6, lr}
   136a8:	mov	r4, r0
   136ac:	ldr	r0, [r0, #8]
   136b0:	mov	r6, r1
   136b4:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   136b8:	mov	r5, r0
   136bc:	ldr	r0, [r4, #12]
   136c0:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   136c4:	cmp	r5, r0
   136c8:	movlt	r3, r0
   136cc:	movge	r3, r5
   136d0:	sub	r0, r0, r5
   136d4:	add	r3, r3, #1
   136d8:	cmn	r0, #2
   136dc:	strh	r3, [r4, #20]
   136e0:	beq	1373c <mycore_utils_avl_tree_node_balance@@Base+0x98>
   136e4:	cmp	r0, #2
   136e8:	bne	13724 <mycore_utils_avl_tree_node_balance@@Base+0x80>
   136ec:	ldr	r0, [r4, #12]
   136f0:	bl	fdac <mycore_utils_avl_tree_node_balance_factor@plt>
   136f4:	cmp	r0, #0
   136f8:	blt	13798 <mycore_utils_avl_tree_node_balance@@Base+0xf4>
   136fc:	ldr	r5, [r4, #16]
   13700:	cmp	r5, #0
   13704:	beq	137a8 <mycore_utils_avl_tree_node_balance@@Base+0x104>
   13708:	ldr	r3, [r5, #12]
   1370c:	mov	r0, r4
   13710:	cmp	r4, r3
   13714:	beq	13780 <mycore_utils_avl_tree_node_balance@@Base+0xdc>
   13718:	bl	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   1371c:	str	r0, [r5, #8]
   13720:	pop	{r4, r5, r6, pc}
   13724:	ldr	r0, [r4, #16]
   13728:	cmp	r0, #0
   1372c:	popne	{r4, r5, r6, pc}
   13730:	str	r4, [r6]
   13734:	ldr	r0, [r4, #16]
   13738:	pop	{r4, r5, r6, pc}
   1373c:	ldr	r0, [r4, #8]
   13740:	bl	fdac <mycore_utils_avl_tree_node_balance_factor@plt>
   13744:	cmp	r0, #0
   13748:	ble	13758 <mycore_utils_avl_tree_node_balance@@Base+0xb4>
   1374c:	ldr	r0, [r4, #8]
   13750:	bl	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   13754:	str	r0, [r4, #8]
   13758:	ldr	r5, [r4, #16]
   1375c:	cmp	r5, #0
   13760:	beq	137b4 <mycore_utils_avl_tree_node_balance@@Base+0x110>
   13764:	ldr	r3, [r5, #12]
   13768:	mov	r0, r4
   1376c:	cmp	r4, r3
   13770:	beq	1378c <mycore_utils_avl_tree_node_balance@@Base+0xe8>
   13774:	bl	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>
   13778:	str	r0, [r5, #8]
   1377c:	pop	{r4, r5, r6, pc}
   13780:	bl	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   13784:	str	r0, [r5, #12]
   13788:	pop	{r4, r5, r6, pc}
   1378c:	bl	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>
   13790:	str	r0, [r5, #12]
   13794:	pop	{r4, r5, r6, pc}
   13798:	ldr	r0, [r4, #12]
   1379c:	bl	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>
   137a0:	str	r0, [r4, #12]
   137a4:	b	136fc <mycore_utils_avl_tree_node_balance@@Base+0x58>
   137a8:	mov	r0, r4
   137ac:	pop	{r4, r5, r6, lr}
   137b0:	b	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   137b4:	mov	r0, r4
   137b8:	pop	{r4, r5, r6, lr}
   137bc:	b	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>

000137c0 <mycore_utils_avl_tree_add@@Base>:
   137c0:	push	{r4, r5, r6, r7, r8, lr}
   137c4:	mov	r7, r1
   137c8:	ldr	r4, [r1]
   137cc:	mov	r5, r2
   137d0:	cmp	r4, #0
   137d4:	mov	r8, r3
   137d8:	beq	13864 <mycore_utils_avl_tree_add@@Base+0xa4>
   137dc:	mov	r1, #0
   137e0:	ldr	r0, [r0]
   137e4:	bl	10a60 <mcobject_malloc@plt>
   137e8:	mov	r6, r0
   137ec:	bl	10fc4 <mycore_utils_avl_tree_node_clean@plt>
   137f0:	b	13804 <mycore_utils_avl_tree_add@@Base+0x44>
   137f4:	ldr	r1, [r4, #8]
   137f8:	cmp	r1, #0
   137fc:	beq	13850 <mycore_utils_avl_tree_add@@Base+0x90>
   13800:	mov	r4, r1
   13804:	ldr	r1, [r4, #4]
   13808:	cmp	r5, r1
   1380c:	beq	13848 <mycore_utils_avl_tree_add@@Base+0x88>
   13810:	bcc	137f4 <mycore_utils_avl_tree_add@@Base+0x34>
   13814:	ldr	r1, [r4, #12]
   13818:	cmp	r1, #0
   1381c:	bne	13800 <mycore_utils_avl_tree_add@@Base+0x40>
   13820:	str	r6, [r4, #12]
   13824:	str	r4, [r6, #16]
   13828:	str	r5, [r6, #4]
   1382c:	str	r8, [r6]
   13830:	mov	r0, r6
   13834:	mov	r1, r7
   13838:	bl	10a18 <mycore_utils_avl_tree_node_balance@plt>
   1383c:	subs	r6, r0, #0
   13840:	bne	13830 <mycore_utils_avl_tree_add@@Base+0x70>
   13844:	pop	{r4, r5, r6, r7, r8, pc}
   13848:	str	r8, [r4]
   1384c:	pop	{r4, r5, r6, r7, r8, pc}
   13850:	str	r6, [r4, #8]
   13854:	str	r4, [r6, #16]
   13858:	str	r5, [r6, #4]
   1385c:	str	r8, [r6]
   13860:	b	13830 <mycore_utils_avl_tree_add@@Base+0x70>
   13864:	mov	r2, r3
   13868:	mov	r1, r5
   1386c:	bl	10ed4 <mycore_utils_avl_tree_node_create_root@plt>
   13870:	str	r0, [r7]
   13874:	pop	{r4, r5, r6, r7, r8, pc}

00013878 <mycore_utils_avl_tree_find_min@@Base>:
   13878:	cmp	r0, #0
   1387c:	bne	13888 <mycore_utils_avl_tree_find_min@@Base+0x10>
   13880:	b	13898 <mycore_utils_avl_tree_find_min@@Base+0x20>
   13884:	mov	r0, r3
   13888:	ldr	r3, [r0, #12]
   1388c:	cmp	r3, #0
   13890:	bne	13884 <mycore_utils_avl_tree_find_min@@Base+0xc>
   13894:	bx	lr
   13898:	bx	lr

0001389c <mycore_utils_avl_tree_rotate_for_delete@@Base>:
   1389c:	cmp	r1, #0
   138a0:	push	{r4, lr}
   138a4:	mov	r3, r0
   138a8:	mov	r4, r2
   138ac:	beq	13934 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x98>
   138b0:	ldr	r2, [r0, #8]
   138b4:	cmp	r1, r2
   138b8:	beq	13958 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xbc>
   138bc:	ldr	ip, [r1, #16]
   138c0:	mov	lr, #0
   138c4:	ldr	r0, [r0, #16]
   138c8:	str	lr, [ip, #12]
   138cc:	ldr	ip, [r3, #12]
   138d0:	str	r2, [r1, #8]
   138d4:	ldr	r2, [r3, #8]
   138d8:	str	ip, [r1, #12]
   138dc:	cmp	r2, lr
   138e0:	str	r0, [r1, #16]
   138e4:	strne	r1, [r2, #16]
   138e8:	ldr	r2, [r3, #12]
   138ec:	mov	r0, r1
   138f0:	cmp	r2, #0
   138f4:	strne	r1, [r2, #16]
   138f8:	ldr	r2, [r3, #16]
   138fc:	cmp	r2, #0
   13900:	streq	r1, [r4]
   13904:	beq	13918 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x7c>
   13908:	ldr	ip, [r2, #8]
   1390c:	cmp	r3, ip
   13910:	streq	r1, [r2, #8]
   13914:	strne	r1, [r2, #12]
   13918:	cmp	r0, #0
   1391c:	beq	13984 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xe8>
   13920:	mov	r1, r4
   13924:	bl	10a18 <mycore_utils_avl_tree_node_balance@plt>
   13928:	cmp	r0, #0
   1392c:	bne	13920 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x84>
   13930:	pop	{r4, pc}
   13934:	ldr	r0, [r0, #16]
   13938:	cmp	r0, #0
   1393c:	beq	13988 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xec>
   13940:	ldr	r2, [r0, #8]
   13944:	cmp	r3, r2
   13948:	ldr	r3, [r3, #12]
   1394c:	streq	r3, [r0, #8]
   13950:	strne	r3, [r0, #12]
   13954:	b	13920 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x84>
   13958:	ldr	r2, [r0, #12]
   1395c:	ldr	ip, [r0, #16]
   13960:	ldr	r0, [r1, #8]
   13964:	str	r2, [r1, #12]
   13968:	ldr	r2, [r3, #12]
   1396c:	cmp	r0, #0
   13970:	moveq	r0, r1
   13974:	cmp	r2, #0
   13978:	str	ip, [r1, #16]
   1397c:	strne	r1, [r2, #16]
   13980:	b	138f8 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x5c>
   13984:	pop	{r4, pc}
   13988:	ldr	r3, [r3, #12]
   1398c:	str	r3, [r2]
   13990:	pop	{r4, pc}

00013994 <mycore_utils_avl_tree_delete@@Base>:
   13994:	push	{r4, r5, r6, lr}
   13998:	ldr	r4, [r1]
   1399c:	cmp	r4, #0
   139a0:	beq	139d8 <mycore_utils_avl_tree_delete@@Base+0x44>
   139a4:	ldr	r3, [r4, #4]
   139a8:	cmp	r2, r3
   139ac:	bne	139c0 <mycore_utils_avl_tree_delete@@Base+0x2c>
   139b0:	b	139e0 <mycore_utils_avl_tree_delete@@Base+0x4c>
   139b4:	ldr	r3, [r4, #4]
   139b8:	cmp	r3, r2
   139bc:	beq	139e0 <mycore_utils_avl_tree_delete@@Base+0x4c>
   139c0:	ldr	ip, [r4, #8]
   139c4:	cmp	r2, r3
   139c8:	ldr	r4, [r4, #12]
   139cc:	movcc	r4, ip
   139d0:	cmp	r4, #0
   139d4:	bne	139b4 <mycore_utils_avl_tree_delete@@Base+0x20>
   139d8:	mov	r0, r4
   139dc:	pop	{r4, r5, r6, pc}
   139e0:	mov	r6, r0
   139e4:	ldr	r0, [r4, #8]
   139e8:	mov	r5, r1
   139ec:	bl	fd10 <mycore_utils_avl_tree_find_min@plt>
   139f0:	mov	r2, r5
   139f4:	mov	r1, r0
   139f8:	mov	r0, r4
   139fc:	bl	10478 <mycore_utils_avl_tree_rotate_for_delete@plt>
   13a00:	mov	r1, r4
   13a04:	ldr	r4, [r4]
   13a08:	ldr	r0, [r6]
   13a0c:	bl	ff80 <mcobject_free@plt>
   13a10:	mov	r0, r4
   13a14:	pop	{r4, r5, r6, pc}

00013a18 <mycore_utils_avl_tree_search_by_type@@Base>:
   13a18:	subs	r0, r1, #0
   13a1c:	bxeq	lr
   13a20:	ldr	r3, [r0, #4]
   13a24:	cmp	r2, r3
   13a28:	bne	13a3c <mycore_utils_avl_tree_search_by_type@@Base+0x24>
   13a2c:	b	13a58 <mycore_utils_avl_tree_search_by_type@@Base+0x40>
   13a30:	ldr	r3, [r0, #4]
   13a34:	cmp	r3, r2
   13a38:	bxeq	lr
   13a3c:	ldr	r1, [r0, #8]
   13a40:	cmp	r2, r3
   13a44:	ldr	r0, [r0, #12]
   13a48:	movcc	r0, r1
   13a4c:	cmp	r0, #0
   13a50:	bne	13a30 <mycore_utils_avl_tree_search_by_type@@Base+0x18>
   13a54:	bx	lr
   13a58:	bx	lr

00013a5c <mycore_utils_avl_tree_list_all_nodes@@Base>:
   13a5c:	push	{r4, r5, r6, r7, r8, lr}
   13a60:	subs	r4, r1, #0
   13a64:	popeq	{r4, r5, r6, r7, r8, pc}
   13a68:	mov	r7, r0
   13a6c:	mov	r6, r2
   13a70:	mov	r5, r3
   13a74:	mov	r0, r4
   13a78:	mov	r1, r5
   13a7c:	blx	r6
   13a80:	ldr	r1, [r4, #8]
   13a84:	mov	r3, r5
   13a88:	mov	r2, r6
   13a8c:	mov	r0, r7
   13a90:	bl	10274 <mycore_utils_avl_tree_list_all_nodes@plt>
   13a94:	ldr	r4, [r4, #12]
   13a98:	cmp	r4, #0
   13a9c:	bne	13a74 <mycore_utils_avl_tree_list_all_nodes@@Base+0x18>
   13aa0:	pop	{r4, r5, r6, r7, r8, pc}

00013aa4 <mchar_async_create@@Base>:
   13aa4:	mov	r1, #84	; 0x54
   13aa8:	mov	r0, #1
   13aac:	b	ff14 <mycore_calloc@plt>

00013ab0 <mchar_async_mem_malloc@@Base>:
   13ab0:	push	{r4, r5, r6, lr}
   13ab4:	subs	r4, r2, #0
   13ab8:	popeq	{r4, r5, r6, pc}
   13abc:	mov	r6, r0
   13ac0:	ldr	r0, [r4]
   13ac4:	mov	r5, r3
   13ac8:	cmp	r0, #0
   13acc:	beq	13b04 <mchar_async_mem_malloc@@Base+0x54>
   13ad0:	ldr	r3, [r4, #8]
   13ad4:	cmp	r3, r5
   13ad8:	bcc	13ae8 <mchar_async_mem_malloc@@Base+0x38>
   13adc:	mov	r3, #0
   13ae0:	str	r3, [r4, #4]
   13ae4:	pop	{r4, r5, r6, pc}
   13ae8:	bl	10dcc <mycore_free@plt>
   13aec:	ldr	r0, [r6]
   13af0:	add	r0, r5, r0
   13af4:	str	r0, [r4, #8]
   13af8:	bl	10c94 <mycore_malloc@plt>
   13afc:	str	r0, [r4]
   13b00:	b	13adc <mchar_async_mem_malloc@@Base+0x2c>
   13b04:	ldr	r0, [r6]
   13b08:	cmp	r3, r0
   13b0c:	strls	r0, [r4, #8]
   13b10:	movhi	r0, r3
   13b14:	strhi	r3, [r4, #8]
   13b18:	bl	10c94 <mycore_malloc@plt>
   13b1c:	str	r0, [r4]
   13b20:	b	13adc <mchar_async_mem_malloc@@Base+0x2c>

00013b24 <mchar_sync_chunk_find_by_size@@Base>:
   13b24:	ldr	r3, [r0]
   13b28:	ldr	r0, [r3, #12]
   13b2c:	cmp	r0, #0
   13b30:	bxeq	lr
   13b34:	ldr	r3, [r0, #8]
   13b38:	cmp	r1, r3
   13b3c:	bhi	13b50 <mchar_sync_chunk_find_by_size@@Base+0x2c>
   13b40:	b	13b60 <mchar_sync_chunk_find_by_size@@Base+0x3c>
   13b44:	ldr	r3, [r0, #8]
   13b48:	cmp	r3, r1
   13b4c:	bxcs	lr
   13b50:	ldr	r0, [r0, #12]
   13b54:	cmp	r0, #0
   13b58:	bne	13b44 <mchar_sync_chunk_find_by_size@@Base+0x20>
   13b5c:	bx	lr
   13b60:	bx	lr

00013b64 <mchar_sync_chunk_insert_after@@Base>:
   13b64:	ldr	r3, [r0, #12]
   13b68:	cmp	r3, r1
   13b6c:	bxeq	lr
   13b70:	ldr	r2, [r1, #16]
   13b74:	cmp	r2, #0
   13b78:	ldrne	r3, [r1, #12]
   13b7c:	strne	r3, [r2, #12]
   13b80:	ldr	ip, [r1, #12]
   13b84:	ldrne	r3, [r0, #12]
   13b88:	cmp	ip, #0
   13b8c:	strne	r2, [ip, #16]
   13b90:	cmp	r3, #0
   13b94:	strne	r1, [r3, #16]
   13b98:	str	r3, [r1, #12]
   13b9c:	str	r0, [r1, #16]
   13ba0:	str	r1, [r0, #12]
   13ba4:	bx	lr

00013ba8 <mchar_async_crop_first_chars_without_cache@@Base>:
   13ba8:	cmp	r0, #0
   13bac:	ldrne	r3, [r0, #-4]
   13bb0:	addne	r0, r0, r1
   13bb4:	subne	r1, r3, r1
   13bb8:	strne	r1, [r0, #-4]
   13bbc:	bx	lr

00013bc0 <mchar_async_get_size_by_data@@Base>:
   13bc0:	cmp	r0, #0
   13bc4:	ldrne	r0, [r0, #-4]
   13bc8:	bx	lr

00013bcc <mchar_async_cache_init@@Base>:
   13bcc:	push	{r4, r5, r6, lr}
   13bd0:	mov	r2, #1
   13bd4:	mov	r5, #0
   13bd8:	mov	r3, #1024	; 0x400
   13bdc:	str	r5, [r0, #16]
   13be0:	str	r5, [r0, #12]
   13be4:	mov	r4, r0
   13be8:	str	r2, [r0, #8]
   13bec:	str	r3, [r0, #4]
   13bf0:	mov	r0, #20480	; 0x5000
   13bf4:	bl	10c94 <mycore_malloc@plt>
   13bf8:	cmp	r0, r5
   13bfc:	str	r0, [r4]
   13c00:	moveq	r5, #2
   13c04:	beq	13c38 <mchar_async_cache_init@@Base+0x6c>
   13c08:	ldr	r3, [r4, #4]
   13c0c:	str	r5, [r0, #8]
   13c10:	str	r5, [r0, #12]
   13c14:	str	r5, [r0, #4]
   13c18:	str	r5, [r0]
   13c1c:	lsl	r0, r3, #2
   13c20:	str	r5, [r4, #24]
   13c24:	str	r3, [r4, #28]
   13c28:	bl	10c94 <mycore_malloc@plt>
   13c2c:	cmp	r0, r5
   13c30:	str	r0, [r4, #20]
   13c34:	beq	13c40 <mchar_async_cache_init@@Base+0x74>
   13c38:	mov	r0, r5
   13c3c:	pop	{r4, r5, r6, pc}
   13c40:	ldr	r0, [r4]
   13c44:	bl	10dcc <mycore_free@plt>
   13c48:	mov	r5, #2
   13c4c:	str	r0, [r4]
   13c50:	b	13c38 <mchar_async_cache_init@@Base+0x6c>

00013c54 <mchar_async_cache_clean@@Base>:
   13c54:	ldr	r2, [r0]
   13c58:	mov	r3, #0
   13c5c:	cmp	r2, r3
   13c60:	mov	r1, #1
   13c64:	str	r1, [r0, #8]
   13c68:	str	r3, [r0, #16]
   13c6c:	str	r3, [r0, #12]
   13c70:	str	r3, [r0, #24]
   13c74:	strne	r3, [r2, #8]
   13c78:	strne	r3, [r2, #12]
   13c7c:	strne	r3, [r2, #4]
   13c80:	strne	r3, [r2]
   13c84:	bx	lr

00013c88 <mchar_async_node_clean@@Base>:
   13c88:	ldr	r3, [r0, #60]	; 0x3c
   13c8c:	cmp	r3, r1
   13c90:	bxls	lr
   13c94:	add	r1, r1, r1, lsl #3
   13c98:	ldr	ip, [r0, #56]	; 0x38
   13c9c:	lsl	r1, r1, #2
   13ca0:	add	r0, ip, r1
   13ca4:	ldr	r3, [ip, r1]
   13ca8:	ldr	r2, [r3, #16]
   13cac:	cmp	r2, #0
   13cb0:	bne	13cbc <mchar_async_node_clean@@Base+0x34>
   13cb4:	b	13cdc <mchar_async_node_clean@@Base+0x54>
   13cb8:	mov	r2, r3
   13cbc:	ldr	r3, [r2, #16]
   13cc0:	cmp	r3, #0
   13cc4:	bne	13cb8 <mchar_async_node_clean@@Base+0x30>
   13cc8:	str	r2, [ip, r1]
   13ccc:	mov	r3, #0
   13cd0:	add	r0, r0, #4
   13cd4:	str	r3, [r2, #4]
   13cd8:	b	10724 <mchar_async_cache_clean@plt>
   13cdc:	mov	r2, r3
   13ce0:	b	13ccc <mchar_async_node_clean@@Base+0x44>

00013ce4 <mchar_async_cache_destroy@@Base>:
   13ce4:	push	{r4, r5, r6, lr}
   13ce8:	subs	r4, r0, #0
   13cec:	beq	13d1c <mchar_async_cache_destroy@@Base+0x38>
   13cf0:	ldr	r0, [r4]
   13cf4:	mov	r5, r1
   13cf8:	cmp	r0, #0
   13cfc:	beq	13d04 <mchar_async_cache_destroy@@Base+0x20>
   13d00:	bl	10dcc <mycore_free@plt>
   13d04:	ldr	r0, [r4, #20]
   13d08:	cmp	r0, #0
   13d0c:	beq	13d14 <mchar_async_cache_destroy@@Base+0x30>
   13d10:	bl	10dcc <mycore_free@plt>
   13d14:	cmp	r5, #0
   13d18:	bne	13d24 <mchar_async_cache_destroy@@Base+0x40>
   13d1c:	mov	r0, r4
   13d20:	pop	{r4, r5, r6, pc}
   13d24:	mov	r0, r4
   13d28:	bl	10dcc <mycore_free@plt>
   13d2c:	mov	r4, #0
   13d30:	b	13d1c <mchar_async_cache_destroy@@Base+0x38>

00013d34 <mchar_async_destroy@@Base>:
   13d34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d38:	subs	r6, r0, #0
   13d3c:	beq	13e70 <mchar_async_destroy@@Base+0x13c>
   13d40:	ldr	r0, [r6, #56]	; 0x38
   13d44:	mov	r9, r1
   13d48:	cmp	r0, #0
   13d4c:	beq	13d9c <mchar_async_destroy@@Base+0x68>
   13d50:	ldr	r3, [r6, #60]	; 0x3c
   13d54:	cmp	r3, #0
   13d58:	beq	13d90 <mchar_async_destroy@@Base+0x5c>
   13d5c:	mov	r4, #0
   13d60:	mov	r5, r4
   13d64:	mov	r7, r4
   13d68:	add	r0, r0, r4
   13d6c:	add	r0, r0, #4
   13d70:	mov	r1, r7
   13d74:	bl	1088c <mchar_async_cache_destroy@plt>
   13d78:	ldr	r3, [r6, #60]	; 0x3c
   13d7c:	add	r5, r5, #1
   13d80:	cmp	r3, r5
   13d84:	ldr	r0, [r6, #56]	; 0x38
   13d88:	add	r4, r4, #36	; 0x24
   13d8c:	bhi	13d68 <mchar_async_destroy@@Base+0x34>
   13d90:	bl	10dcc <mycore_free@plt>
   13d94:	mov	r3, #0
   13d98:	str	r3, [r6, #56]	; 0x38
   13d9c:	ldr	r0, [r6, #68]	; 0x44
   13da0:	cmp	r0, #0
   13da4:	beq	13dac <mchar_async_destroy@@Base+0x78>
   13da8:	bl	10dcc <mycore_free@plt>
   13dac:	ldr	r0, [r6, #4]
   13db0:	cmp	r0, #0
   13db4:	beq	13e40 <mchar_async_destroy@@Base+0x10c>
   13db8:	ldr	r3, [r6, #12]
   13dbc:	cmp	r3, #0
   13dc0:	beq	13e34 <mchar_async_destroy@@Base+0x100>
   13dc4:	mov	r8, #0
   13dc8:	ldr	r2, [r0, r8, lsl #2]
   13dcc:	lsl	r7, r8, #2
   13dd0:	cmp	r2, #0
   13dd4:	beq	13e28 <mchar_async_destroy@@Base+0xf4>
   13dd8:	ldr	r1, [r6, #16]
   13ddc:	cmp	r1, #0
   13de0:	beq	13e18 <mchar_async_destroy@@Base+0xe4>
   13de4:	mov	r4, #0
   13de8:	mov	r5, r4
   13dec:	ldr	r3, [r2, r4]
   13df0:	add	r5, r5, #1
   13df4:	subs	r0, r3, #0
   13df8:	beq	13e0c <mchar_async_destroy@@Base+0xd8>
   13dfc:	bl	10dcc <mycore_free@plt>
   13e00:	ldr	r3, [r6, #4]
   13e04:	ldr	r1, [r6, #16]
   13e08:	ldr	r2, [r3, r7]
   13e0c:	cmp	r5, r1
   13e10:	add	r4, r4, #20
   13e14:	bcc	13dec <mchar_async_destroy@@Base+0xb8>
   13e18:	mov	r0, r2
   13e1c:	bl	10dcc <mycore_free@plt>
   13e20:	ldr	r3, [r6, #12]
   13e24:	ldr	r0, [r6, #4]
   13e28:	add	r8, r8, #1
   13e2c:	cmp	r8, r3
   13e30:	bcc	13dc8 <mchar_async_destroy@@Base+0x94>
   13e34:	bl	10dcc <mycore_free@plt>
   13e38:	mov	r3, #0
   13e3c:	str	r3, [r6, #4]
   13e40:	mov	r1, #0
   13e44:	add	r0, r6, #24
   13e48:	bl	1088c <mchar_async_cache_destroy@plt>
   13e4c:	mov	r1, #1
   13e50:	ldr	r0, [r6, #80]	; 0x50
   13e54:	bl	101b4 <mcsync_destroy@plt>
   13e58:	mov	r2, #84	; 0x54
   13e5c:	mov	r1, #0
   13e60:	mov	r0, r6
   13e64:	bl	108b0 <memset@plt>
   13e68:	cmp	r9, #0
   13e6c:	bne	13e78 <mchar_async_destroy@@Base+0x144>
   13e70:	mov	r0, r6
   13e74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e78:	mov	r0, r6
   13e7c:	bl	10dcc <mycore_free@plt>
   13e80:	mov	r6, #0
   13e84:	b	13e70 <mchar_async_destroy@@Base+0x13c>

00013e88 <mchar_async_cache_malloc@@Base>:
   13e88:	ldr	r3, [r0, #24]
   13e8c:	cmp	r3, #0
   13e90:	bne	13eb0 <mchar_async_cache_malloc@@Base+0x28>
   13e94:	ldmib	r0, {r1, r3}
   13e98:	add	r3, r3, #1
   13e9c:	cmp	r3, r1
   13ea0:	str	r3, [r0, #8]
   13ea4:	bcs	13ec4 <mchar_async_cache_malloc@@Base+0x3c>
   13ea8:	sub	r0, r3, #1
   13eac:	bx	lr
   13eb0:	ldr	r2, [r0, #20]
   13eb4:	sub	r3, r3, #1
   13eb8:	str	r3, [r0, #24]
   13ebc:	ldr	r0, [r2, r3, lsl #2]
   13ec0:	bx	lr
   13ec4:	lsl	r3, r1, #1
   13ec8:	add	r1, r3, r1, lsl #3
   13ecc:	push	{r4, lr}
   13ed0:	lsl	r1, r1, #2
   13ed4:	mov	r4, r0
   13ed8:	str	r3, [r0, #4]
   13edc:	ldr	r0, [r0]
   13ee0:	bl	fbd8 <mycore_realloc@plt>
   13ee4:	ldr	r3, [r4, #8]
   13ee8:	cmp	r0, #0
   13eec:	strne	r0, [r4]
   13ef0:	sub	r0, r3, #1
   13ef4:	pop	{r4, pc}

00013ef8 <mchar_async_cache_delete@@Base>:
   13ef8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13efc:	ldr	r4, [r0, #12]
   13f00:	ldr	lr, [r0]
   13f04:	cmp	r4, #0
   13f08:	beq	13f4c <mchar_async_cache_delete@@Base+0x54>
   13f0c:	lsl	r3, r4, #2
   13f10:	add	r2, r3, r4
   13f14:	add	r2, lr, r2, lsl #2
   13f18:	ldr	ip, [r2, #4]
   13f1c:	cmp	r1, ip
   13f20:	bhi	13f38 <mchar_async_cache_delete@@Base+0x40>
   13f24:	b	13f5c <mchar_async_cache_delete@@Base+0x64>
   13f28:	add	r2, lr, r2, lsl #2
   13f2c:	ldr	ip, [r2, #4]
   13f30:	cmp	ip, r1
   13f34:	bcs	13f5c <mchar_async_cache_delete@@Base+0x64>
   13f38:	ldr	r4, [r2, #12]
   13f3c:	cmp	r4, #0
   13f40:	lsl	r3, r4, #2
   13f44:	add	r2, r3, r4
   13f48:	bne	13f28 <mchar_async_cache_delete@@Base+0x30>
   13f4c:	mov	r4, #0
   13f50:	mov	r0, r4
   13f54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13f58:	mov	r4, r5
   13f5c:	add	r3, r3, r4
   13f60:	add	r6, lr, r3, lsl #2
   13f64:	ldr	r5, [r6, #12]
   13f68:	lsl	r3, r5, #2
   13f6c:	add	r2, r3, r5
   13f70:	add	r2, lr, r2, lsl #2
   13f74:	ldr	ip, [r2, #4]
   13f78:	cmp	r1, ip
   13f7c:	beq	13f58 <mchar_async_cache_delete@@Base+0x60>
   13f80:	ldr	r1, [r6, #16]
   13f84:	cmp	r1, #0
   13f88:	beq	1403c <mchar_async_cache_delete@@Base+0x144>
   13f8c:	add	r7, r1, r1, lsl #2
   13f90:	add	r7, lr, r7, lsl #2
   13f94:	ldr	r3, [r7, #8]
   13f98:	cmp	r4, r3
   13f9c:	beq	140ac <mchar_async_cache_delete@@Base+0x1b4>
   13fa0:	ldr	r8, [r6, #8]
   13fa4:	cmp	r8, #0
   13fa8:	beq	14128 <mchar_async_cache_delete@@Base+0x230>
   13fac:	add	r9, r8, r8, lsl #2
   13fb0:	cmp	r5, #0
   13fb4:	add	r9, lr, r9, lsl #2
   13fb8:	beq	13ff8 <mchar_async_cache_delete@@Base+0x100>
   13fbc:	ldr	r2, [r9, #12]
   13fc0:	b	13fc8 <mchar_async_cache_delete@@Base+0xd0>
   13fc4:	mov	r2, ip
   13fc8:	add	r3, r2, r2, lsl #2
   13fcc:	add	r3, lr, r3, lsl #2
   13fd0:	ldr	ip, [r3, #12]
   13fd4:	cmp	ip, #0
   13fd8:	bne	13fc4 <mchar_async_cache_delete@@Base+0xcc>
   13fdc:	cmp	r2, #0
   13fe0:	strne	r5, [r3, #12]
   13fe4:	ldrne	r3, [r6, #12]
   13fe8:	streq	r5, [r9, #12]
   13fec:	addne	r3, r3, r3, lsl #2
   13ff0:	addne	r3, lr, r3, lsl #2
   13ff4:	strne	r2, [r3, #16]
   13ff8:	str	r8, [r7, #12]
   13ffc:	str	r1, [r9, #16]
   14000:	mov	r5, r0
   14004:	ldr	r0, [r0, #20]
   14008:	ldr	r3, [r5, #24]
   1400c:	str	r4, [r0, r3, lsl #2]
   14010:	ldr	r3, [r5, #24]
   14014:	ldr	r2, [r5, #28]
   14018:	add	r3, r3, #1
   1401c:	cmp	r3, r2
   14020:	str	r3, [r5, #24]
   14024:	bcs	14108 <mchar_async_cache_delete@@Base+0x210>
   14028:	ldr	r3, [r5, #16]
   1402c:	mov	r0, r4
   14030:	sub	r3, r3, #1
   14034:	str	r3, [r5, #16]
   14038:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1403c:	ldr	ip, [r6, #8]
   14040:	cmp	ip, #0
   14044:	streq	r5, [r0, #12]
   14048:	streq	ip, [r2, #16]
   1404c:	beq	14000 <mchar_async_cache_delete@@Base+0x108>
   14050:	add	r7, ip, ip, lsl #2
   14054:	cmp	r5, #0
   14058:	add	r7, lr, r7, lsl #2
   1405c:	beq	1409c <mchar_async_cache_delete@@Base+0x1a4>
   14060:	ldr	r2, [r7, #12]
   14064:	b	1406c <mchar_async_cache_delete@@Base+0x174>
   14068:	mov	r2, r1
   1406c:	add	r3, r2, r2, lsl #2
   14070:	add	r3, lr, r3, lsl #2
   14074:	ldr	r1, [r3, #12]
   14078:	cmp	r1, #0
   1407c:	bne	14068 <mchar_async_cache_delete@@Base+0x170>
   14080:	cmp	r2, #0
   14084:	strne	r5, [r3, #12]
   14088:	ldrne	r3, [r6, #12]
   1408c:	streq	r5, [r7, #12]
   14090:	addne	r3, r3, r3, lsl #2
   14094:	addne	r3, lr, r3, lsl #2
   14098:	strne	r2, [r3, #16]
   1409c:	mov	r3, #0
   140a0:	str	ip, [r0, #12]
   140a4:	str	r3, [r7, #16]
   140a8:	b	14000 <mchar_async_cache_delete@@Base+0x108>
   140ac:	cmp	r5, #0
   140b0:	beq	14140 <mchar_async_cache_delete@@Base+0x248>
   140b4:	ldr	r9, [r6, #8]
   140b8:	cmp	r9, #0
   140bc:	beq	140fc <mchar_async_cache_delete@@Base+0x204>
   140c0:	ldr	ip, [r2, #8]
   140c4:	b	140cc <mchar_async_cache_delete@@Base+0x1d4>
   140c8:	mov	ip, r8
   140cc:	add	r3, ip, ip, lsl #2
   140d0:	add	r3, lr, r3, lsl #2
   140d4:	ldr	r8, [r3, #8]
   140d8:	cmp	r8, #0
   140dc:	bne	140c8 <mchar_async_cache_delete@@Base+0x1d0>
   140e0:	cmp	ip, #0
   140e4:	strne	r9, [r3, #8]
   140e8:	ldrne	r3, [r6, #8]
   140ec:	streq	r9, [r2, #8]
   140f0:	addne	r3, r3, r3, lsl #2
   140f4:	addne	r3, lr, r3, lsl #2
   140f8:	strne	ip, [r3, #16]
   140fc:	str	r5, [r7, #8]
   14100:	str	r1, [r2, #16]
   14104:	b	14000 <mchar_async_cache_delete@@Base+0x108>
   14108:	lsl	r1, r2, #3
   1410c:	lsl	r6, r2, #1
   14110:	bl	fbd8 <mycore_realloc@plt>
   14114:	cmp	r0, #0
   14118:	beq	13f4c <mchar_async_cache_delete@@Base+0x54>
   1411c:	str	r0, [r5, #20]
   14120:	str	r6, [r5, #28]
   14124:	b	14028 <mchar_async_cache_delete@@Base+0x130>
   14128:	str	r5, [r7, #12]
   1412c:	ldr	r3, [r6, #12]
   14130:	add	r3, r3, r3, lsl #2
   14134:	add	r3, lr, r3, lsl #2
   14138:	str	r1, [r3, #16]
   1413c:	b	14000 <mchar_async_cache_delete@@Base+0x108>
   14140:	ldr	r3, [r6, #8]
   14144:	str	r3, [r7, #8]
   14148:	ldr	r3, [r6, #8]
   1414c:	add	r3, r3, r3, lsl #2
   14150:	add	r3, lr, r3, lsl #2
   14154:	str	r1, [r3, #16]
   14158:	b	14000 <mchar_async_cache_delete@@Base+0x108>

0001415c <mchar_async_chunk_malloc_without_lock@@Base>:
   1415c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14160:	mov	r4, r0
   14164:	ldr	r5, [r0, #40]	; 0x28
   14168:	mov	r8, r2
   1416c:	cmp	r5, #0
   14170:	bne	141f0 <mchar_async_chunk_malloc_without_lock@@Base+0x94>
   14174:	ldr	r2, [r0, #20]
   14178:	ldr	r3, [r0, #16]
   1417c:	mov	r7, r1
   14180:	cmp	r2, r3
   14184:	bcc	14218 <mchar_async_chunk_malloc_without_lock@@Base+0xbc>
   14188:	ldr	r9, [r0, #12]
   1418c:	ldr	r1, [r0, #8]
   14190:	add	r3, r9, #1
   14194:	cmp	r3, r1
   14198:	str	r3, [r0, #12]
   1419c:	bcs	1422c <mchar_async_chunk_malloc_without_lock@@Base+0xd0>
   141a0:	ldr	r6, [r0, #4]
   141a4:	ldr	r3, [r6, r9, lsl #2]
   141a8:	cmp	r3, #0
   141ac:	beq	14274 <mchar_async_chunk_malloc_without_lock@@Base+0x118>
   141b0:	mov	r2, #1
   141b4:	ldr	r0, [r4, #12]
   141b8:	mov	r1, r7
   141bc:	sub	r0, r0, #-1073741823	; 0xc0000001
   141c0:	mov	r3, r8
   141c4:	ldr	r7, [r6, r0, lsl #2]
   141c8:	str	r2, [r4, #20]
   141cc:	add	r6, r7, r5
   141d0:	mov	r0, r4
   141d4:	mov	r2, r6
   141d8:	bl	11060 <mchar_async_mem_malloc@plt>
   141dc:	ldr	r3, [r7, r5]
   141e0:	cmp	r3, #0
   141e4:	beq	1426c <mchar_async_chunk_malloc_without_lock@@Base+0x110>
   141e8:	mov	r0, r6
   141ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   141f0:	mov	r1, r2
   141f4:	add	r0, r0, #24
   141f8:	bl	10f64 <mchar_async_cache_delete@plt>
   141fc:	cmp	r0, #0
   14200:	beq	1426c <mchar_async_chunk_malloc_without_lock@@Base+0x110>
   14204:	ldr	r3, [r4, #24]
   14208:	add	r0, r0, r0, lsl #2
   1420c:	ldr	r6, [r3, r0, lsl #2]
   14210:	mov	r0, r6
   14214:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14218:	add	r5, r2, r2, lsl #2
   1421c:	ldr	r6, [r0, #4]
   14220:	add	r2, r2, #1
   14224:	lsl	r5, r5, #2
   14228:	b	141b4 <mchar_async_chunk_malloc_without_lock@@Base+0x58>
   1422c:	lsl	r3, r1, #1
   14230:	str	r3, [r0, #8]
   14234:	lsl	r1, r1, #3
   14238:	ldr	r0, [r0, #4]
   1423c:	bl	fbd8 <mycore_realloc@plt>
   14240:	subs	r6, r0, #0
   14244:	beq	1426c <mchar_async_chunk_malloc_without_lock@@Base+0x110>
   14248:	ldr	r0, [r4, #12]
   1424c:	ldr	r2, [r4, #8]
   14250:	mov	r1, r5
   14254:	sub	r2, r2, r0
   14258:	add	r0, r6, r0, lsl #2
   1425c:	lsl	r2, r2, #2
   14260:	bl	108b0 <memset@plt>
   14264:	str	r6, [r4, #4]
   14268:	b	141a4 <mchar_async_chunk_malloc_without_lock@@Base+0x48>
   1426c:	mov	r6, #0
   14270:	b	141e8 <mchar_async_chunk_malloc_without_lock@@Base+0x8c>
   14274:	mov	r1, #20
   14278:	ldr	r0, [r4, #16]
   1427c:	bl	ff14 <mycore_calloc@plt>
   14280:	cmp	r0, #0
   14284:	beq	1426c <mchar_async_chunk_malloc_without_lock@@Base+0x110>
   14288:	ldr	r6, [r4, #4]
   1428c:	str	r0, [r6, r9, lsl #2]
   14290:	b	141b0 <mchar_async_chunk_malloc_without_lock@@Base+0x54>

00014294 <mchar_async_chunk_malloc@@Base>:
   14294:	push	{r4, r5, r6, lr}
   14298:	mov	r4, r0
   1429c:	mov	r5, r1
   142a0:	mov	r6, r2
   142a4:	ldr	r0, [r0, #80]	; 0x50
   142a8:	bl	10850 <mcsync_lock@plt>
   142ac:	mov	r1, r5
   142b0:	mov	r2, r6
   142b4:	mov	r0, r4
   142b8:	bl	10ba4 <mchar_async_chunk_malloc_without_lock@plt>
   142bc:	mov	r5, r0
   142c0:	ldr	r0, [r4, #80]	; 0x50
   142c4:	bl	10ebc <mcsync_unlock@plt>
   142c8:	mov	r0, r5
   142cc:	pop	{r4, r5, r6, pc}

000142d0 <mchar_async_clean@@Base>:
   142d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   142d4:	mov	r3, #1
   142d8:	mov	r4, #0
   142dc:	mov	r5, r0
   142e0:	str	r3, [r0, #12]
   142e4:	str	r4, [r0, #20]
   142e8:	add	r0, r0, #24
   142ec:	bl	10724 <mchar_async_cache_clean@plt>
   142f0:	ldr	r3, [r5, #60]	; 0x3c
   142f4:	cmp	r3, r4
   142f8:	movne	r6, r4
   142fc:	movne	r9, r4
   14300:	bne	1431c <mchar_async_clean@@Base+0x4c>
   14304:	b	14354 <mchar_async_clean@@Base+0x84>
   14308:	ldr	r3, [r5, #60]	; 0x3c
   1430c:	add	r4, r4, #36	; 0x24
   14310:	cmp	r3, r6
   14314:	str	r9, [r0, #16]
   14318:	bls	14354 <mchar_async_clean@@Base+0x84>
   1431c:	ldr	r7, [r5, #56]	; 0x38
   14320:	add	r6, r6, #1
   14324:	add	r8, r7, r4
   14328:	add	r0, r8, #4
   1432c:	bl	10724 <mchar_async_cache_clean@plt>
   14330:	mov	r1, r8
   14334:	ldr	r2, [r5]
   14338:	mov	r0, r5
   1433c:	bl	109d0 <mchar_async_chunk_malloc@plt>
   14340:	cmp	r0, #0
   14344:	str	r0, [r7, r4]
   14348:	bne	14308 <mchar_async_clean@@Base+0x38>
   1434c:	mov	r0, #2
   14350:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14354:	mov	r0, #0
   14358:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0001435c <mchar_async_init@@Base>:
   1435c:	push	{r4, r5, r6, lr}
   14360:	cmp	r2, #4096	; 0x1000
   14364:	mov	r4, r0
   14368:	movcc	r2, #4096	; 0x1000
   1436c:	mov	r0, #1024	; 0x400
   14370:	str	r1, [r4, #16]
   14374:	str	r2, [r4]
   14378:	str	r0, [r4, #8]
   1437c:	mov	r1, #4
   14380:	bl	ff14 <mycore_calloc@plt>
   14384:	cmp	r0, #0
   14388:	str	r0, [r4, #4]
   1438c:	beq	14424 <mchar_async_init@@Base+0xc8>
   14390:	mov	r5, r0
   14394:	mov	r1, #20
   14398:	ldr	r0, [r4, #16]
   1439c:	bl	ff14 <mycore_calloc@plt>
   143a0:	ldr	r3, [r4, #4]
   143a4:	str	r0, [r5]
   143a8:	ldr	r2, [r3]
   143ac:	cmp	r2, #0
   143b0:	beq	14430 <mchar_async_init@@Base+0xd4>
   143b4:	add	r0, r4, #24
   143b8:	bl	10c34 <mchar_async_cache_init@plt>
   143bc:	subs	r5, r0, #0
   143c0:	bne	14448 <mchar_async_init@@Base+0xec>
   143c4:	mov	r0, #64	; 0x40
   143c8:	str	r5, [r4, #60]	; 0x3c
   143cc:	str	r0, [r4, #64]	; 0x40
   143d0:	mov	r1, #36	; 0x24
   143d4:	bl	ff14 <mycore_calloc@plt>
   143d8:	cmp	r0, #0
   143dc:	str	r0, [r4, #56]	; 0x38
   143e0:	beq	14428 <mchar_async_init@@Base+0xcc>
   143e4:	ldr	r0, [r4, #64]	; 0x40
   143e8:	str	r5, [r4, #72]	; 0x48
   143ec:	str	r0, [r4, #76]	; 0x4c
   143f0:	lsl	r0, r0, #2
   143f4:	bl	10c94 <mycore_malloc@plt>
   143f8:	cmp	r0, #0
   143fc:	str	r0, [r4, #68]	; 0x44
   14400:	beq	14428 <mchar_async_init@@Base+0xcc>
   14404:	mov	r0, r4
   14408:	bl	10bc8 <mchar_async_clean@plt>
   1440c:	bl	fd94 <mcsync_create@plt>
   14410:	cmp	r0, #0
   14414:	str	r0, [r4, #80]	; 0x50
   14418:	beq	14424 <mchar_async_init@@Base+0xc8>
   1441c:	pop	{r4, r5, r6, lr}
   14420:	b	10868 <mcsync_init@plt>
   14424:	mov	r5, #2
   14428:	mov	r0, r5
   1442c:	pop	{r4, r5, r6, pc}
   14430:	mov	r0, r3
   14434:	bl	10dcc <mycore_free@plt>
   14438:	mov	r5, #2
   1443c:	str	r0, [r4, #4]
   14440:	mov	r0, r5
   14444:	pop	{r4, r5, r6, pc}
   14448:	ldr	r3, [r4, #4]
   1444c:	ldr	r0, [r3]
   14450:	bl	10dcc <mycore_free@plt>
   14454:	ldr	r0, [r4, #4]
   14458:	bl	10dcc <mycore_free@plt>
   1445c:	str	r0, [r4, #4]
   14460:	mov	r0, r5
   14464:	pop	{r4, r5, r6, pc}

00014468 <mchar_async_node_add@@Base>:
   14468:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1446c:	mov	r4, r0
   14470:	ldr	r0, [r0, #80]	; 0x50
   14474:	mov	r6, r1
   14478:	bl	10850 <mcsync_lock@plt>
   1447c:	cmp	r0, #0
   14480:	beq	1449c <mchar_async_node_add@@Base+0x34>
   14484:	cmp	r6, #0
   14488:	mov	r5, #0
   1448c:	movne	r3, #96	; 0x60
   14490:	strne	r3, [r6]
   14494:	mov	r0, r5
   14498:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1449c:	ldr	r5, [r4, #72]	; 0x48
   144a0:	cmp	r5, #0
   144a4:	beq	144f8 <mchar_async_node_add@@Base+0x90>
   144a8:	ldr	r3, [r4, #68]	; 0x44
   144ac:	sub	r5, r5, #1
   144b0:	str	r5, [r4, #72]	; 0x48
   144b4:	ldr	r7, [r3, r5, lsl #2]
   144b8:	add	r5, r7, r7, lsl #3
   144bc:	ldr	r8, [r4, #56]	; 0x38
   144c0:	lsl	r5, r5, #2
   144c4:	add	r9, r8, r5
   144c8:	add	r0, r9, #4
   144cc:	bl	10c34 <mchar_async_cache_init@plt>
   144d0:	subs	sl, r0, #0
   144d4:	beq	14530 <mchar_async_node_add@@Base+0xc8>
   144d8:	cmp	r6, #0
   144dc:	movne	r3, #2
   144e0:	strne	r3, [r6]
   144e4:	ldr	r0, [r4, #80]	; 0x50
   144e8:	mov	r5, #0
   144ec:	bl	10ebc <mcsync_unlock@plt>
   144f0:	mov	r0, r5
   144f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   144f8:	ldr	r7, [r4, #60]	; 0x3c
   144fc:	ldr	r3, [r4, #64]	; 0x40
   14500:	cmp	r7, r3
   14504:	bcc	14524 <mchar_async_node_add@@Base+0xbc>
   14508:	cmp	r6, #0
   1450c:	movne	r3, #98	; 0x62
   14510:	strne	r3, [r6]
   14514:	ldr	r0, [r4, #80]	; 0x50
   14518:	bl	10ebc <mcsync_unlock@plt>
   1451c:	mov	r0, r5
   14520:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14524:	add	r3, r7, #1
   14528:	str	r3, [r4, #60]	; 0x3c
   1452c:	b	144b8 <mchar_async_node_add@@Base+0x50>
   14530:	mov	r1, r9
   14534:	ldr	r2, [r4]
   14538:	mov	r0, r4
   1453c:	bl	10ba4 <mchar_async_chunk_malloc_without_lock@plt>
   14540:	cmp	r0, #0
   14544:	str	r0, [r8, r5]
   14548:	beq	144d8 <mchar_async_node_add@@Base+0x70>
   1454c:	str	sl, [r0, #12]
   14550:	str	sl, [r0, #16]
   14554:	ldr	r0, [r4, #80]	; 0x50
   14558:	bl	10ebc <mcsync_unlock@plt>
   1455c:	cmp	r6, #0
   14560:	strne	sl, [r6]
   14564:	mov	r5, r7
   14568:	b	14494 <mchar_async_node_add@@Base+0x2c>

0001456c <mchar_async_cache_add@@Base>:
   1456c:	push	{r4, r5, r6, r7, r8, lr}
   14570:	mov	r6, r0
   14574:	ldr	r3, [r0, #16]
   14578:	ldr	r4, [r0, #12]
   1457c:	add	r3, r3, #1
   14580:	cmp	r4, #0
   14584:	mov	r7, r1
   14588:	mov	r5, r2
   1458c:	str	r3, [r0, #16]
   14590:	beq	14608 <mchar_async_cache_add@@Base+0x9c>
   14594:	bl	fec0 <mchar_async_cache_malloc@plt>
   14598:	ldr	r2, [r6]
   1459c:	b	145b4 <mchar_async_cache_add@@Base+0x48>
   145a0:	bcc	14638 <mchar_async_cache_add@@Base+0xcc>
   145a4:	ldr	ip, [r3, #12]
   145a8:	cmp	ip, #0
   145ac:	beq	14684 <mchar_async_cache_add@@Base+0x118>
   145b0:	mov	r4, ip
   145b4:	add	r3, r4, r4, lsl #2
   145b8:	add	r3, r2, r3, lsl #2
   145bc:	ldr	ip, [r3, #4]
   145c0:	cmp	r5, ip
   145c4:	bne	145a0 <mchar_async_cache_add@@Base+0x34>
   145c8:	ldr	ip, [r3, #12]
   145cc:	add	r1, r0, r0, lsl #2
   145d0:	cmp	ip, #0
   145d4:	add	r1, r2, r1, lsl #2
   145d8:	str	ip, [r1, #12]
   145dc:	ldrne	ip, [r3, #12]
   145e0:	addne	ip, ip, ip, lsl #2
   145e4:	addne	r2, r2, ip, lsl #2
   145e8:	strne	r0, [r2, #16]
   145ec:	mov	r2, #0
   145f0:	str	r0, [r3, #12]
   145f4:	str	r4, [r1, #16]
   145f8:	str	r5, [r1, #4]
   145fc:	str	r7, [r1]
   14600:	str	r2, [r1, #8]
   14604:	pop	{r4, r5, r6, r7, r8, pc}
   14608:	ldr	r8, [r0]
   1460c:	bl	fec0 <mchar_async_cache_malloc@plt>
   14610:	str	r0, [r6, #12]
   14614:	add	r0, r0, r0, lsl #2
   14618:	lsl	r0, r0, #2
   1461c:	add	r3, r8, r0
   14620:	str	r4, [r3, #16]
   14624:	str	r4, [r3, #8]
   14628:	str	r4, [r3, #12]
   1462c:	str	r5, [r3, #4]
   14630:	str	r7, [r8, r0]
   14634:	pop	{r4, r5, r6, r7, r8, pc}
   14638:	ldr	ip, [r3, #16]
   1463c:	cmp	ip, #0
   14640:	beq	146ac <mchar_async_cache_add@@Base+0x140>
   14644:	add	r1, ip, ip, lsl #2
   14648:	add	r1, r2, r1, lsl #2
   1464c:	ldr	lr, [r1, #8]
   14650:	cmp	r4, lr
   14654:	streq	r0, [r1, #8]
   14658:	strne	r0, [r1, #12]
   1465c:	add	r1, r0, r0, lsl #2
   14660:	add	r2, r2, r1, lsl #2
   14664:	str	ip, [r2, #16]
   14668:	mov	r1, #0
   1466c:	str	r0, [r3, #16]
   14670:	str	r4, [r2, #12]
   14674:	str	r5, [r2, #4]
   14678:	str	r7, [r2]
   1467c:	str	r1, [r2, #8]
   14680:	pop	{r4, r5, r6, r7, r8, pc}
   14684:	add	r1, r0, r0, lsl #2
   14688:	str	r0, [r3, #12]
   1468c:	lsl	r3, r1, #2
   14690:	add	r1, r2, r3
   14694:	str	ip, [r1, #12]
   14698:	str	ip, [r1, #8]
   1469c:	str	r4, [r1, #16]
   146a0:	str	r5, [r1, #4]
   146a4:	str	r7, [r2, r3]
   146a8:	pop	{r4, r5, r6, r7, r8, pc}
   146ac:	add	r1, r0, r0, lsl #2
   146b0:	str	r0, [r6, #12]
   146b4:	add	r2, r2, r1, lsl #2
   146b8:	str	ip, [r2, #16]
   146bc:	b	14668 <mchar_async_cache_add@@Base+0xfc>

000146c0 <mchar_async_node_delete@@Base>:
   146c0:	push	{r4, r5, r6, r7, r8, lr}
   146c4:	mov	r5, r0
   146c8:	ldr	r0, [r0, #80]	; 0x50
   146cc:	mov	r7, r1
   146d0:	bl	10850 <mcsync_lock@plt>
   146d4:	ldr	r3, [r5, #60]	; 0x3c
   146d8:	cmp	r3, r7
   146dc:	bls	147ac <mchar_async_node_delete@@Base+0xec>
   146e0:	add	r3, r7, r7, lsl #3
   146e4:	ldr	r2, [r5, #56]	; 0x38
   146e8:	lsl	r3, r3, #2
   146ec:	add	r8, r2, r3
   146f0:	ldr	r4, [r2, r3]
   146f4:	b	146fc <mchar_async_node_delete@@Base+0x3c>
   146f8:	mov	r4, r3
   146fc:	ldr	r3, [r4, #12]
   14700:	cmp	r3, #0
   14704:	bne	146f8 <mchar_async_node_delete@@Base+0x38>
   14708:	add	r6, r5, #24
   1470c:	ldr	r2, [r4, #8]
   14710:	mov	r1, r4
   14714:	mov	r0, r6
   14718:	bl	10c7c <mchar_async_cache_add@plt>
   1471c:	ldr	r4, [r4, #16]
   14720:	cmp	r4, #0
   14724:	bne	1470c <mchar_async_node_delete@@Base+0x4c>
   14728:	ldr	r3, [r8, #4]
   1472c:	cmp	r3, #0
   14730:	beq	14740 <mchar_async_node_delete@@Base+0x80>
   14734:	mov	r1, r4
   14738:	add	r0, r8, #4
   1473c:	bl	1088c <mchar_async_cache_destroy@plt>
   14740:	mov	r2, #36	; 0x24
   14744:	mov	r0, r8
   14748:	mov	r1, #0
   1474c:	bl	108b0 <memset@plt>
   14750:	ldr	r3, [r5, #72]	; 0x48
   14754:	ldr	r2, [r5, #76]	; 0x4c
   14758:	cmp	r3, r2
   1475c:	bcs	14780 <mchar_async_node_delete@@Base+0xc0>
   14760:	ldr	r0, [r5, #68]	; 0x44
   14764:	str	r7, [r0, r3, lsl #2]
   14768:	ldr	r3, [r5, #72]	; 0x48
   1476c:	ldr	r0, [r5, #80]	; 0x50
   14770:	add	r3, r3, #1
   14774:	str	r3, [r5, #72]	; 0x48
   14778:	pop	{r4, r5, r6, r7, r8, lr}
   1477c:	b	10ebc <mcsync_unlock@plt>
   14780:	lsl	r1, r2, #2
   14784:	ldr	r0, [r5, #68]	; 0x44
   14788:	lsl	r4, r2, #1
   1478c:	bl	fbd8 <mycore_realloc@plt>
   14790:	cmp	r0, #0
   14794:	strne	r0, [r5, #68]	; 0x44
   14798:	ldreq	r0, [r5, #68]	; 0x44
   1479c:	ldreq	r3, [r5, #72]	; 0x48
   147a0:	ldrne	r3, [r5, #72]	; 0x48
   147a4:	strne	r4, [r5, #76]	; 0x4c
   147a8:	b	14764 <mchar_async_node_delete@@Base+0xa4>
   147ac:	ldr	r0, [r5, #80]	; 0x50
   147b0:	pop	{r4, r5, r6, r7, r8, lr}
   147b4:	b	10ebc <mcsync_unlock@plt>

000147b8 <mchar_async_malloc@@Base>:
   147b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   147bc:	subs	r6, r2, #0
   147c0:	beq	148b0 <mchar_async_malloc@@Base+0xf8>
   147c4:	add	r1, r1, r1, lsl #3
   147c8:	ldr	r8, [r0, #56]	; 0x38
   147cc:	lsl	r4, r1, #2
   147d0:	add	sl, r8, r4
   147d4:	mov	r7, r0
   147d8:	ldr	r3, [sl, #20]
   147dc:	ldr	r5, [r8, r4]
   147e0:	cmp	r3, #0
   147e4:	bne	1485c <mchar_async_malloc@@Base+0xa4>
   147e8:	ldr	r3, [r5, #4]
   147ec:	add	r9, r6, #4
   147f0:	ldr	r2, [r5, #8]
   147f4:	add	r1, r3, r9
   147f8:	cmp	r1, r2
   147fc:	bls	1483c <mchar_async_malloc@@Base+0x84>
   14800:	add	r1, r3, #4
   14804:	cmp	r2, r1
   14808:	bhi	14880 <mchar_async_malloc@@Base+0xc8>
   1480c:	mov	r1, r9
   14810:	mov	r0, sl
   14814:	bl	10b14 <mchar_sync_chunk_find_by_size@plt>
   14818:	subs	r5, r0, #0
   1481c:	beq	148b8 <mchar_async_malloc@@Base+0x100>
   14820:	mov	r3, #0
   14824:	str	r3, [r5, #4]
   14828:	mov	r1, r5
   1482c:	ldr	r0, [r8, r4]
   14830:	bl	ff44 <mchar_sync_chunk_insert_after@plt>
   14834:	ldr	r3, [r5, #4]
   14838:	str	r5, [r8, r4]
   1483c:	ldr	r2, [r5]
   14840:	add	r0, r3, #4
   14844:	add	r0, r2, r0
   14848:	str	r6, [r2, r3]
   1484c:	ldr	r1, [r5, #4]
   14850:	add	r1, r1, r9
   14854:	str	r1, [r5, #4]
   14858:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1485c:	mov	r1, r6
   14860:	add	r0, sl, #4
   14864:	bl	10f64 <mchar_async_cache_delete@plt>
   14868:	cmp	r0, #0
   1486c:	beq	147e8 <mchar_async_malloc@@Base+0x30>
   14870:	ldr	r3, [sl, #4]
   14874:	add	r0, r0, r0, lsl #2
   14878:	ldr	r0, [r3, r0, lsl #2]
   1487c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14880:	sub	r2, r2, #4
   14884:	subs	r0, r2, r3
   14888:	beq	1480c <mchar_async_malloc@@Base+0x54>
   1488c:	ldr	ip, [r5]
   14890:	mov	r2, r0
   14894:	add	r1, ip, r1
   14898:	str	r0, [ip, r3]
   1489c:	ldr	r3, [r5, #8]
   148a0:	add	r0, sl, #4
   148a4:	str	r3, [r5, #4]
   148a8:	bl	10c7c <mchar_async_cache_add@plt>
   148ac:	b	1480c <mchar_async_malloc@@Base+0x54>
   148b0:	mov	r0, r6
   148b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   148b8:	ldr	r2, [r7]
   148bc:	mov	r1, sl
   148c0:	cmp	r2, r9
   148c4:	addcc	r2, r2, r9
   148c8:	mov	r0, r7
   148cc:	bl	109d0 <mchar_async_chunk_malloc@plt>
   148d0:	mov	r5, r0
   148d4:	b	14828 <mchar_async_malloc@@Base+0x70>

000148d8 <mchar_async_realloc@@Base>:
   148d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   148dc:	subs	ip, r2, #0
   148e0:	ldr	r2, [sp, #32]
   148e4:	beq	14964 <mchar_async_realloc@@Base+0x8c>
   148e8:	ldr	r4, [ip, #-4]
   148ec:	ldr	r5, [ip, #-4]
   148f0:	cmp	r4, r2
   148f4:	bcs	14964 <mchar_async_realloc@@Base+0x8c>
   148f8:	add	lr, r1, r1, lsl #3
   148fc:	ldr	r8, [r0, #56]	; 0x38
   14900:	lsl	lr, lr, #2
   14904:	add	r6, r8, lr
   14908:	ldr	r9, [r8, lr]
   1490c:	ldr	r7, [r9, #4]
   14910:	cmp	r4, r7
   14914:	bhi	1492c <mchar_async_realloc@@Base+0x54>
   14918:	ldr	sl, [r9]
   1491c:	sub	r4, r7, r4
   14920:	add	r7, sl, r4
   14924:	cmp	ip, r7
   14928:	beq	14970 <mchar_async_realloc@@Base+0x98>
   1492c:	mov	r7, r3
   14930:	mov	r8, ip
   14934:	bl	10910 <mchar_async_malloc@plt>
   14938:	subs	r4, r0, #0
   1493c:	beq	1495c <mchar_async_realloc@@Base+0x84>
   14940:	mov	r2, r7
   14944:	mov	r1, r8
   14948:	bl	ff5c <memcpy@plt>
   1494c:	mov	r2, r5
   14950:	mov	r1, r8
   14954:	add	r0, r6, #4
   14958:	bl	10c7c <mchar_async_cache_add@plt>
   1495c:	mov	r0, r4
   14960:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14964:	mov	r4, ip
   14968:	mov	r0, r4
   1496c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14970:	ldr	r9, [r9, #8]
   14974:	add	r7, r4, r2
   14978:	cmp	r7, r9
   1497c:	bhi	1492c <mchar_async_realloc@@Base+0x54>
   14980:	str	r2, [ip, #-4]
   14984:	ldr	r3, [r8, lr]
   14988:	mov	r4, ip
   1498c:	str	r7, [r3, #4]
   14990:	b	1495c <mchar_async_realloc@@Base+0x84>

00014994 <mchar_async_crop_first_chars@@Base>:
   14994:	cmp	r2, #0
   14998:	push	{r4, lr}
   1499c:	beq	149e8 <mchar_async_crop_first_chars@@Base+0x54>
   149a0:	ldr	ip, [r2, #-4]
   149a4:	add	r4, r2, r3
   149a8:	add	lr, r3, #4
   149ac:	sub	ip, ip, r3
   149b0:	cmp	lr, #4
   149b4:	str	ip, [r4, #-4]
   149b8:	bls	149e0 <mchar_async_crop_first_chars@@Base+0x4c>
   149bc:	mov	ip, r1
   149c0:	mov	r1, r2
   149c4:	sub	r2, r3, #4
   149c8:	str	r2, [r1, #-4]
   149cc:	add	ip, ip, ip, lsl #3
   149d0:	ldr	r0, [r0, #56]	; 0x38
   149d4:	add	r0, r0, ip, lsl #2
   149d8:	add	r0, r0, #4
   149dc:	bl	10c7c <mchar_async_cache_add@plt>
   149e0:	mov	r0, r4
   149e4:	pop	{r4, pc}
   149e8:	mov	r4, r2
   149ec:	b	149e0 <mchar_async_crop_first_chars@@Base+0x4c>

000149f0 <mchar_async_free@@Base>:
   149f0:	subs	r3, r2, #0
   149f4:	bxeq	lr
   149f8:	add	r1, r1, r1, lsl #3
   149fc:	ldr	r0, [r0, #56]	; 0x38
   14a00:	ldr	r2, [r3, #-4]
   14a04:	add	r0, r0, r1, lsl #2
   14a08:	add	r0, r0, #4
   14a0c:	mov	r1, r3
   14a10:	b	10c7c <mchar_async_cache_add@plt>

00014a14 <mcobject_create@@Base>:
   14a14:	mov	r1, #24
   14a18:	mov	r0, #1
   14a1c:	b	ff14 <mycore_calloc@plt>

00014a20 <mcobject_init@@Base>:
   14a20:	push	{r4, lr}
   14a24:	mov	r4, r0
   14a28:	mov	r3, #0
   14a2c:	str	r2, [r0, #16]
   14a30:	str	r1, [r0, #20]
   14a34:	str	r1, [r0, #8]
   14a38:	lsl	r0, r1, #2
   14a3c:	str	r3, [r4]
   14a40:	str	r3, [r4, #12]
   14a44:	bl	10c94 <mycore_malloc@plt>
   14a48:	cmp	r0, #0
   14a4c:	str	r0, [r4, #4]
   14a50:	moveq	r0, #85	; 0x55
   14a54:	movne	r0, #0
   14a58:	pop	{r4, pc}

00014a5c <mcobject_clean@@Base>:
   14a5c:	push	{r4, r5, r6, lr}
   14a60:	ldr	r4, [r0]
   14a64:	cmp	r4, #0
   14a68:	movne	r6, r0
   14a6c:	bne	14a78 <mcobject_clean@@Base+0x1c>
   14a70:	b	14ab8 <mcobject_clean@@Base+0x5c>
   14a74:	mov	r4, r3
   14a78:	ldr	r3, [r4, #12]
   14a7c:	cmp	r3, #0
   14a80:	bne	14a74 <mcobject_clean@@Base+0x18>
   14a84:	ldr	r3, [r4]
   14a88:	ldr	r5, [r4, #16]
   14a8c:	subs	r0, r3, #0
   14a90:	beq	14a98 <mcobject_clean@@Base+0x3c>
   14a94:	bl	10dcc <mycore_free@plt>
   14a98:	mov	r0, r4
   14a9c:	bl	10dcc <mycore_free@plt>
   14aa0:	cmp	r5, #0
   14aa4:	mov	r4, r5
   14aa8:	bne	14a84 <mcobject_clean@@Base+0x28>
   14aac:	str	r5, [r6]
   14ab0:	str	r5, [r6, #12]
   14ab4:	pop	{r4, r5, r6, pc}
   14ab8:	pop	{r4, r5, r6, pc}

00014abc <mcobject_destroy@@Base>:
   14abc:	push	{r4, r5, r6, lr}
   14ac0:	subs	r4, r0, #0
   14ac4:	beq	14af0 <mcobject_destroy@@Base+0x34>
   14ac8:	mov	r5, r1
   14acc:	bl	10f70 <mcobject_clean@plt>
   14ad0:	ldr	r0, [r4, #4]
   14ad4:	cmp	r0, #0
   14ad8:	beq	14ae8 <mcobject_destroy@@Base+0x2c>
   14adc:	bl	10dcc <mycore_free@plt>
   14ae0:	mov	r3, #0
   14ae4:	str	r3, [r4, #4]
   14ae8:	cmp	r5, #0
   14aec:	bne	14af8 <mcobject_destroy@@Base+0x3c>
   14af0:	mov	r0, r4
   14af4:	pop	{r4, r5, r6, pc}
   14af8:	mov	r0, r4
   14afc:	bl	10dcc <mycore_free@plt>
   14b00:	mov	r4, #0
   14b04:	b	14af0 <mcobject_destroy@@Base+0x34>

00014b08 <mcobject_chunk_malloc@@Base>:
   14b08:	push	{r4, r5, r6, lr}
   14b0c:	subs	r5, r1, #0
   14b10:	movne	r3, #0
   14b14:	strne	r3, [r5]
   14b18:	ldr	r3, [r0]
   14b1c:	cmp	r3, #0
   14b20:	beq	14b40 <mcobject_chunk_malloc@@Base+0x38>
   14b24:	ldr	r3, [r3, #12]
   14b28:	cmp	r3, #0
   14b2c:	beq	14b40 <mcobject_chunk_malloc@@Base+0x38>
   14b30:	mov	r2, #0
   14b34:	str	r3, [r0]
   14b38:	str	r2, [r3, #4]
   14b3c:	pop	{r4, r5, r6, pc}
   14b40:	mov	r4, r0
   14b44:	mov	r1, #20
   14b48:	mov	r0, #1
   14b4c:	bl	ff14 <mycore_calloc@plt>
   14b50:	subs	r6, r0, #0
   14b54:	beq	14b94 <mcobject_chunk_malloc@@Base+0x8c>
   14b58:	ldr	r3, [r4, #16]
   14b5c:	ldr	r0, [r4, #20]
   14b60:	mul	r0, r0, r3
   14b64:	bl	10c94 <mycore_malloc@plt>
   14b68:	cmp	r0, #0
   14b6c:	str	r0, [r6]
   14b70:	beq	14ba4 <mcobject_chunk_malloc@@Base+0x9c>
   14b74:	ldr	r3, [r4]
   14b78:	ldr	r2, [r4, #20]
   14b7c:	cmp	r3, #0
   14b80:	str	r2, [r6, #8]
   14b84:	strne	r3, [r6, #16]
   14b88:	strne	r6, [r3, #12]
   14b8c:	str	r6, [r4]
   14b90:	pop	{r4, r5, r6, pc}
   14b94:	cmp	r5, #0
   14b98:	movne	r3, #86	; 0x56
   14b9c:	strne	r3, [r5]
   14ba0:	pop	{r4, r5, r6, pc}
   14ba4:	cmp	r5, #0
   14ba8:	movne	r3, #87	; 0x57
   14bac:	strne	r3, [r5]
   14bb0:	mov	r0, r6
   14bb4:	pop	{r4, r5, r6, lr}
   14bb8:	b	10dcc <mycore_free@plt>

00014bbc <mcobject_malloc@@Base>:
   14bbc:	ldr	r3, [r0, #12]
   14bc0:	cmp	r3, #0
   14bc4:	beq	14bec <mcobject_malloc@@Base+0x30>
   14bc8:	cmp	r1, #0
   14bcc:	movne	r3, #0
   14bd0:	strne	r3, [r1]
   14bd4:	ldrne	r3, [r0, #12]
   14bd8:	ldr	r2, [r0, #4]
   14bdc:	sub	r3, r3, #1
   14be0:	str	r3, [r0, #12]
   14be4:	ldr	r0, [r2, r3, lsl #2]
   14be8:	bx	lr
   14bec:	ldr	r3, [r0]
   14bf0:	push	{r4, r5, lr}
   14bf4:	cmp	r3, #0
   14bf8:	sub	sp, sp, #12
   14bfc:	mov	r5, r1
   14c00:	mov	r4, r0
   14c04:	beq	14c14 <mcobject_malloc@@Base+0x58>
   14c08:	ldmib	r3, {r1, r2}
   14c0c:	cmp	r1, r2
   14c10:	bcc	14c30 <mcobject_malloc@@Base+0x74>
   14c14:	add	r1, sp, #4
   14c18:	mov	r0, r4
   14c1c:	bl	fee4 <mcobject_chunk_malloc@plt>
   14c20:	ldr	r3, [sp, #4]
   14c24:	cmp	r3, #0
   14c28:	ldreq	r3, [r4]
   14c2c:	bne	14c5c <mcobject_malloc@@Base+0xa0>
   14c30:	cmp	r5, #0
   14c34:	movne	r2, #0
   14c38:	strne	r2, [r5]
   14c3c:	ldr	r0, [r3, #4]
   14c40:	ldr	ip, [r4, #16]
   14c44:	ldr	r1, [r3]
   14c48:	add	r2, r0, #1
   14c4c:	mla	r0, ip, r0, r1
   14c50:	str	r2, [r3, #4]
   14c54:	add	sp, sp, #12
   14c58:	pop	{r4, r5, pc}
   14c5c:	cmp	r5, #0
   14c60:	strne	r3, [r5]
   14c64:	mov	r0, #0
   14c68:	b	14c54 <mcobject_malloc@@Base+0x98>

00014c6c <mcobject_free@@Base>:
   14c6c:	ldr	r3, [r0, #12]
   14c70:	ldr	r2, [r0, #8]
   14c74:	push	{r4, r5, r6, lr}
   14c78:	cmp	r3, r2
   14c7c:	mov	r4, r0
   14c80:	mov	r6, r1
   14c84:	bcs	14ca0 <mcobject_free@@Base+0x34>
   14c88:	ldr	r0, [r0, #4]
   14c8c:	add	r2, r3, #1
   14c90:	str	r6, [r0, r3, lsl #2]
   14c94:	mov	r0, #0
   14c98:	str	r2, [r4, #12]
   14c9c:	pop	{r4, r5, r6, pc}
   14ca0:	lsl	r1, r2, #3
   14ca4:	ldr	r0, [r0, #4]
   14ca8:	lsl	r5, r2, #1
   14cac:	bl	fbd8 <mycore_realloc@plt>
   14cb0:	cmp	r0, #0
   14cb4:	ldrne	r3, [r4, #12]
   14cb8:	stmibne	r4, {r0, r5}
   14cbc:	bne	14c8c <mcobject_free@@Base+0x20>
   14cc0:	mov	r0, #88	; 0x58
   14cc4:	pop	{r4, r5, r6, pc}

00014cc8 <mcobject_async_create@@Base>:
   14cc8:	mov	r1, #72	; 0x48
   14ccc:	mov	r0, #1
   14cd0:	b	ff14 <mycore_calloc@plt>

00014cd4 <mcobject_async_chunk_up@@Base>:
   14cd4:	push	{r4, r5, r6, lr}
   14cd8:	mov	r3, #0
   14cdc:	ldr	r6, [r0, #32]
   14ce0:	ldr	r5, [r0, #24]
   14ce4:	str	r3, [r0, #40]	; 0x28
   14ce8:	ldr	r3, [r5, r6, lsl #2]
   14cec:	cmp	r3, #0
   14cf0:	beq	14cfc <mcobject_async_chunk_up@@Base+0x28>
   14cf4:	mov	r0, #0
   14cf8:	pop	{r4, r5, r6, pc}
   14cfc:	mov	r4, r0
   14d00:	mov	r1, #20
   14d04:	ldr	r0, [r0, #36]	; 0x24
   14d08:	bl	ff14 <mycore_calloc@plt>
   14d0c:	ldr	r2, [r4, #32]
   14d10:	ldr	r3, [r4, #24]
   14d14:	str	r0, [r5, r6, lsl #2]
   14d18:	ldr	r3, [r3, r2, lsl #2]
   14d1c:	cmp	r3, #0
   14d20:	bne	14cf4 <mcobject_async_chunk_up@@Base+0x20>
   14d24:	mov	r0, #2
   14d28:	pop	{r4, r5, r6, pc}

00014d2c <mcobject_async_destroy@@Base>:
   14d2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14d30:	subs	r6, r0, #0
   14d34:	beq	14e58 <mcobject_async_destroy@@Base+0x12c>
   14d38:	ldr	r2, [r6, #44]	; 0x2c
   14d3c:	mov	r9, r1
   14d40:	cmp	r2, #0
   14d44:	beq	14d88 <mcobject_async_destroy@@Base+0x5c>
   14d48:	ldr	r1, [r6, #48]	; 0x30
   14d4c:	cmp	r1, #0
   14d50:	beq	14d80 <mcobject_async_destroy@@Base+0x54>
   14d54:	mov	r4, #0
   14d58:	add	r3, r2, r4, lsl #4
   14d5c:	add	r4, r4, #1
   14d60:	ldr	r3, [r3, #4]
   14d64:	subs	r0, r3, #0
   14d68:	beq	14d78 <mcobject_async_destroy@@Base+0x4c>
   14d6c:	bl	10dcc <mycore_free@plt>
   14d70:	ldr	r1, [r6, #48]	; 0x30
   14d74:	ldr	r2, [r6, #44]	; 0x2c
   14d78:	cmp	r4, r1
   14d7c:	bcc	14d58 <mcobject_async_destroy@@Base+0x2c>
   14d80:	mov	r0, r2
   14d84:	bl	10dcc <mycore_free@plt>
   14d88:	ldr	r0, [r6, #56]	; 0x38
   14d8c:	cmp	r0, #0
   14d90:	beq	14d98 <mcobject_async_destroy@@Base+0x6c>
   14d94:	bl	10dcc <mycore_free@plt>
   14d98:	ldr	r0, [r6, #24]
   14d9c:	cmp	r0, #0
   14da0:	beq	14e24 <mcobject_async_destroy@@Base+0xf8>
   14da4:	ldr	r3, [r6, #32]
   14da8:	cmp	r3, #0
   14dac:	beq	14e20 <mcobject_async_destroy@@Base+0xf4>
   14db0:	mov	r8, #0
   14db4:	ldr	r2, [r0, r8, lsl #2]
   14db8:	lsl	r7, r8, #2
   14dbc:	cmp	r2, #0
   14dc0:	beq	14e14 <mcobject_async_destroy@@Base+0xe8>
   14dc4:	ldr	r1, [r6, #36]	; 0x24
   14dc8:	cmp	r1, #0
   14dcc:	beq	14e04 <mcobject_async_destroy@@Base+0xd8>
   14dd0:	mov	r4, #0
   14dd4:	mov	r5, r4
   14dd8:	ldr	r3, [r2, r4]
   14ddc:	add	r5, r5, #1
   14de0:	subs	r0, r3, #0
   14de4:	beq	14df8 <mcobject_async_destroy@@Base+0xcc>
   14de8:	bl	10dcc <mycore_free@plt>
   14dec:	ldr	r3, [r6, #24]
   14df0:	ldr	r1, [r6, #36]	; 0x24
   14df4:	ldr	r2, [r3, r7]
   14df8:	cmp	r5, r1
   14dfc:	add	r4, r4, #20
   14e00:	bcc	14dd8 <mcobject_async_destroy@@Base+0xac>
   14e04:	mov	r0, r2
   14e08:	bl	10dcc <mycore_free@plt>
   14e0c:	ldr	r3, [r6, #32]
   14e10:	ldr	r0, [r6, #24]
   14e14:	add	r8, r8, #1
   14e18:	cmp	r8, r3
   14e1c:	bcc	14db4 <mcobject_async_destroy@@Base+0x88>
   14e20:	bl	10dcc <mycore_free@plt>
   14e24:	ldr	r0, [r6, #12]
   14e28:	cmp	r0, #0
   14e2c:	beq	14e34 <mcobject_async_destroy@@Base+0x108>
   14e30:	bl	10dcc <mycore_free@plt>
   14e34:	mov	r1, #1
   14e38:	ldr	r0, [r6, #68]	; 0x44
   14e3c:	bl	101b4 <mcsync_destroy@plt>
   14e40:	mov	r2, #72	; 0x48
   14e44:	mov	r1, #0
   14e48:	mov	r0, r6
   14e4c:	bl	108b0 <memset@plt>
   14e50:	cmp	r9, #0
   14e54:	bne	14e60 <mcobject_async_destroy@@Base+0x134>
   14e58:	mov	r0, r6
   14e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e60:	mov	r0, r6
   14e64:	bl	10dcc <mycore_free@plt>
   14e68:	mov	r6, #0
   14e6c:	b	14e58 <mcobject_async_destroy@@Base+0x12c>

00014e70 <mcobject_async_mem_malloc@@Base>:
   14e70:	push	{r4, r5, r6, lr}
   14e74:	mov	r6, r0
   14e78:	ldr	r0, [r1]
   14e7c:	mov	r4, r1
   14e80:	cmp	r0, #0
   14e84:	mov	r5, r2
   14e88:	beq	14ee4 <mcobject_async_mem_malloc@@Base+0x74>
   14e8c:	ldr	r3, [r1, #8]
   14e90:	cmp	r3, r2
   14e94:	bcc	14ea8 <mcobject_async_mem_malloc@@Base+0x38>
   14e98:	mov	r3, #0
   14e9c:	mov	r0, r3
   14ea0:	str	r3, [r1, #4]
   14ea4:	pop	{r4, r5, r6, pc}
   14ea8:	bl	10dcc <mycore_free@plt>
   14eac:	ldr	r2, [r6]
   14eb0:	ldr	r0, [r6, #8]
   14eb4:	add	r5, r5, r2
   14eb8:	str	r5, [r4, #8]
   14ebc:	mul	r0, r0, r5
   14ec0:	bl	10c94 <mycore_malloc@plt>
   14ec4:	mov	r3, r0
   14ec8:	str	r0, [r4]
   14ecc:	mov	r2, #0
   14ed0:	cmp	r3, r2
   14ed4:	moveq	r0, #2
   14ed8:	movne	r0, r2
   14edc:	str	r2, [r4, #4]
   14ee0:	pop	{r4, r5, r6, pc}
   14ee4:	ldr	r3, [r6]
   14ee8:	ldr	r0, [r6, #8]
   14eec:	cmp	r2, r3
   14ef0:	addhi	r3, r3, r2
   14ef4:	str	r3, [r1, #8]
   14ef8:	mul	r0, r0, r3
   14efc:	bl	10c94 <mycore_malloc@plt>
   14f00:	mov	r3, r0
   14f04:	str	r0, [r4]
   14f08:	b	14ecc <mcobject_async_mem_malloc@@Base+0x5c>

00014f0c <mcobject_async_chunk_malloc_without_lock@@Base>:
   14f0c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14f10:	subs	r7, r2, #0
   14f14:	ldr	r5, [r0, #20]
   14f18:	movne	r3, #0
   14f1c:	strne	r3, [r7]
   14f20:	cmp	r5, #0
   14f24:	bne	15008 <mcobject_async_chunk_malloc_without_lock@@Base+0xfc>
   14f28:	ldr	r3, [r0, #40]	; 0x28
   14f2c:	ldr	r2, [r0, #36]	; 0x24
   14f30:	mov	r6, r1
   14f34:	cmp	r3, r2
   14f38:	mov	r4, r0
   14f3c:	bcs	14f90 <mcobject_async_chunk_malloc_without_lock@@Base+0x84>
   14f40:	ldr	r2, [r0, #32]
   14f44:	ldr	r0, [r4, #24]
   14f48:	sub	r2, r2, #-1073741823	; 0xc0000001
   14f4c:	add	r1, r3, r3, lsl #2
   14f50:	ldr	r5, [r0, r2, lsl #2]
   14f54:	add	r3, r3, #1
   14f58:	add	r5, r5, r1, lsl #2
   14f5c:	mov	r2, #0
   14f60:	cmp	r7, #0
   14f64:	str	r3, [r4, #40]	; 0x28
   14f68:	mov	r0, r4
   14f6c:	str	r2, [r5, #12]
   14f70:	str	r2, [r5, #16]
   14f74:	mov	r1, r5
   14f78:	mov	r2, r6
   14f7c:	beq	1504c <mcobject_async_chunk_malloc_without_lock@@Base+0x140>
   14f80:	bl	fdc4 <mcobject_async_mem_malloc@plt>
   14f84:	str	r0, [r7]
   14f88:	mov	r0, r5
   14f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f90:	ldr	r3, [r0, #28]
   14f94:	ldr	r2, [r0, #32]
   14f98:	cmp	r2, r3
   14f9c:	bcc	14fd8 <mcobject_async_chunk_malloc_without_lock@@Base+0xcc>
   14fa0:	lsl	r1, r3, #3
   14fa4:	ldr	r0, [r0, #24]
   14fa8:	lsl	r8, r3, #1
   14fac:	bl	fbd8 <mycore_realloc@plt>
   14fb0:	subs	r9, r0, #0
   14fb4:	beq	14fe8 <mcobject_async_chunk_malloc_without_lock@@Base+0xdc>
   14fb8:	ldr	r0, [r4, #32]
   14fbc:	mov	r1, r5
   14fc0:	sub	r2, r8, r0
   14fc4:	add	r0, r9, r0, lsl #2
   14fc8:	lsl	r2, r2, #2
   14fcc:	bl	108b0 <memset@plt>
   14fd0:	str	r8, [r4, #28]
   14fd4:	str	r9, [r4, #24]
   14fd8:	mov	r0, r4
   14fdc:	bl	1019c <mcobject_async_chunk_up@plt>
   14fe0:	cmp	r0, #0
   14fe4:	beq	15038 <mcobject_async_chunk_malloc_without_lock@@Base+0x12c>
   14fe8:	cmp	r7, #0
   14fec:	moveq	r5, r7
   14ff0:	beq	14f88 <mcobject_async_chunk_malloc_without_lock@@Base+0x7c>
   14ff4:	mov	r3, #2
   14ff8:	mov	r5, #0
   14ffc:	str	r3, [r7]
   15000:	mov	r0, r5
   15004:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15008:	ldr	r3, [r0, #12]
   1500c:	sub	r5, r5, #1
   15010:	mov	r2, #0
   15014:	ldr	r1, [r3, r5, lsl #2]
   15018:	str	r5, [r0, #20]
   1501c:	str	r2, [r1, #12]
   15020:	ldr	r0, [r3, r5, lsl #2]
   15024:	str	r2, [r1, #4]
   15028:	str	r2, [r0, #16]
   1502c:	ldr	r5, [r3, r5, lsl #2]
   15030:	mov	r0, r5
   15034:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15038:	ldr	r2, [r4, #32]
   1503c:	ldr	r3, [r4, #40]	; 0x28
   15040:	add	r2, r2, #1
   15044:	str	r2, [r4, #32]
   15048:	b	14f44 <mcobject_async_chunk_malloc_without_lock@@Base+0x38>
   1504c:	bl	fdc4 <mcobject_async_mem_malloc@plt>
   15050:	b	14f88 <mcobject_async_chunk_malloc_without_lock@@Base+0x7c>

00015054 <mcobject_async_chunk_malloc@@Base>:
   15054:	push	{r4, r5, r6, lr}
   15058:	mov	r5, r0
   1505c:	ldr	r0, [r0, #68]	; 0x44
   15060:	mov	r6, r1
   15064:	mov	r4, r2
   15068:	bl	10850 <mcsync_lock@plt>
   1506c:	cmp	r0, #0
   15070:	beq	1508c <mcobject_async_chunk_malloc@@Base+0x38>
   15074:	cmp	r4, #0
   15078:	movne	r3, #1
   1507c:	strne	r3, [r4]
   15080:	movne	r4, #0
   15084:	mov	r0, r4
   15088:	pop	{r4, r5, r6, pc}
   1508c:	mov	r2, r4
   15090:	mov	r1, r6
   15094:	mov	r0, r5
   15098:	bl	108e0 <mcobject_async_chunk_malloc_without_lock@plt>
   1509c:	mov	r4, r0
   150a0:	ldr	r0, [r5, #68]	; 0x44
   150a4:	bl	10ebc <mcsync_unlock@plt>
   150a8:	mov	r0, r4
   150ac:	pop	{r4, r5, r6, pc}

000150b0 <mcobject_async_clean@@Base>:
   150b0:	ldr	r3, [r0, #24]
   150b4:	push	{r4, r5, r6, r7, r8, lr}
   150b8:	mov	r4, #0
   150bc:	ldr	r3, [r3]
   150c0:	ldr	ip, [r0, #48]	; 0x30
   150c4:	subs	r3, r3, r4
   150c8:	movne	r3, #1
   150cc:	cmp	ip, r4
   150d0:	str	r4, [r0, #40]	; 0x28
   150d4:	str	r3, [r0, #32]
   150d8:	str	r4, [r0, #20]
   150dc:	popeq	{r4, r5, r6, r7, r8, pc}
   150e0:	mov	r5, r0
   150e4:	mov	r7, r4
   150e8:	ldr	r6, [r5, #44]	; 0x2c
   150ec:	mov	r2, r7
   150f0:	add	r1, r6, r4, lsl #4
   150f4:	ldr	r3, [r6, r4, lsl #4]
   150f8:	mov	r0, r5
   150fc:	cmp	r3, #0
   15100:	str	r7, [r1, #12]
   15104:	beq	15118 <mcobject_async_clean@@Base+0x68>
   15108:	ldr	r1, [r5]
   1510c:	bl	1010c <mcobject_async_chunk_malloc@plt>
   15110:	ldr	ip, [r5, #48]	; 0x30
   15114:	str	r0, [r6, r4, lsl #4]
   15118:	add	r4, r4, #1
   1511c:	cmp	r4, ip
   15120:	bcc	150e8 <mcobject_async_clean@@Base+0x38>
   15124:	pop	{r4, r5, r6, r7, r8, pc}

00015128 <mcobject_async_init@@Base>:
   15128:	push	{r4, r5, r6, lr}
   1512c:	add	ip, r3, #4
   15130:	mov	r4, r0
   15134:	mov	r5, #0
   15138:	mov	r0, #128	; 0x80
   1513c:	str	r1, [r4, #36]	; 0x24
   15140:	stm	r4, {r2, r3, ip}
   15144:	mov	r1, #4
   15148:	str	r5, [r4, #32]
   1514c:	str	r0, [r4, #28]
   15150:	bl	ff14 <mycore_calloc@plt>
   15154:	cmp	r0, r5
   15158:	str	r0, [r4, #24]
   1515c:	beq	151fc <mcobject_async_init@@Base+0xd4>
   15160:	mov	r0, r4
   15164:	bl	1019c <mcobject_async_chunk_up@plt>
   15168:	ldr	r0, [r4, #36]	; 0x24
   1516c:	mov	r1, #4
   15170:	str	r0, [r4, #16]
   15174:	bl	ff14 <mycore_calloc@plt>
   15178:	cmp	r0, r5
   1517c:	str	r0, [r4, #12]
   15180:	beq	151ec <mcobject_async_init@@Base+0xc4>
   15184:	mov	r0, #64	; 0x40
   15188:	str	r5, [r4, #48]	; 0x30
   1518c:	str	r0, [r4, #52]	; 0x34
   15190:	mov	r1, #16
   15194:	bl	ff14 <mycore_calloc@plt>
   15198:	cmp	r0, r5
   1519c:	str	r0, [r4, #44]	; 0x2c
   151a0:	beq	151f4 <mcobject_async_init@@Base+0xcc>
   151a4:	ldr	r0, [r4, #52]	; 0x34
   151a8:	str	r5, [r4, #60]	; 0x3c
   151ac:	str	r0, [r4, #64]	; 0x40
   151b0:	lsl	r0, r0, #2
   151b4:	bl	10c94 <mycore_malloc@plt>
   151b8:	cmp	r0, #0
   151bc:	str	r0, [r4, #56]	; 0x38
   151c0:	beq	151f4 <mcobject_async_init@@Base+0xcc>
   151c4:	mov	r0, r4
   151c8:	bl	11054 <mcobject_async_clean@plt>
   151cc:	bl	fd94 <mcsync_create@plt>
   151d0:	cmp	r0, #0
   151d4:	str	r0, [r4, #68]	; 0x44
   151d8:	beq	15204 <mcobject_async_init@@Base+0xdc>
   151dc:	bl	10868 <mcsync_init@plt>
   151e0:	adds	r0, r0, #0
   151e4:	movne	r0, #1
   151e8:	pop	{r4, r5, r6, pc}
   151ec:	mov	r0, #3
   151f0:	pop	{r4, r5, r6, pc}
   151f4:	mov	r0, #4
   151f8:	pop	{r4, r5, r6, pc}
   151fc:	mov	r0, #2
   15200:	pop	{r4, r5, r6, pc}
   15204:	mov	r0, #1
   15208:	pop	{r4, r5, r6, pc}

0001520c <mcobject_async_node_add@@Base>:
   1520c:	push	{r4, r5, r6, r7, r8, lr}
   15210:	mov	r4, r0
   15214:	ldr	r0, [r0, #68]	; 0x44
   15218:	mov	r5, r1
   1521c:	bl	10850 <mcsync_lock@plt>
   15220:	cmp	r5, #0
   15224:	ldr	r6, [r4, #60]	; 0x3c
   15228:	movne	r3, #0
   1522c:	strne	r3, [r5]
   15230:	cmp	r6, #0
   15234:	beq	152b0 <mcobject_async_node_add@@Base+0xa4>
   15238:	ldr	r3, [r4, #56]	; 0x38
   1523c:	sub	r6, r6, #1
   15240:	str	r6, [r4, #60]	; 0x3c
   15244:	ldr	r7, [r3, r6, lsl #2]
   15248:	mov	r2, r5
   1524c:	ldr	r1, [r4]
   15250:	mov	r0, r4
   15254:	ldr	r6, [r4, #44]	; 0x2c
   15258:	bl	108e0 <mcobject_async_chunk_malloc_without_lock@plt>
   1525c:	cmp	r5, #0
   15260:	str	r0, [r6, r7, lsl #4]
   15264:	add	r6, r6, r7, lsl #4
   15268:	beq	152e8 <mcobject_async_node_add@@Base+0xdc>
   1526c:	ldr	r3, [r5]
   15270:	cmp	r3, #0
   15274:	bne	152d4 <mcobject_async_node_add@@Base+0xc8>
   15278:	ldr	r2, [r4]
   1527c:	str	r3, [r0, #12]
   15280:	str	r3, [r0, #16]
   15284:	lsl	r0, r2, #2
   15288:	str	r3, [r6, #12]
   1528c:	str	r2, [r6, #8]
   15290:	bl	10c94 <mycore_malloc@plt>
   15294:	cmp	r0, #0
   15298:	str	r0, [r6, #4]
   1529c:	beq	152cc <mcobject_async_node_add@@Base+0xc0>
   152a0:	ldr	r0, [r4, #68]	; 0x44
   152a4:	bl	10ebc <mcsync_unlock@plt>
   152a8:	mov	r0, r7
   152ac:	pop	{r4, r5, r6, r7, r8, pc}
   152b0:	ldr	r7, [r4, #48]	; 0x30
   152b4:	ldr	r3, [r4, #52]	; 0x34
   152b8:	cmp	r7, r3
   152bc:	bcs	152d4 <mcobject_async_node_add@@Base+0xc8>
   152c0:	add	r3, r7, #1
   152c4:	str	r3, [r4, #48]	; 0x30
   152c8:	b	15248 <mcobject_async_node_add@@Base+0x3c>
   152cc:	mov	r3, #3
   152d0:	str	r3, [r5]
   152d4:	ldr	r0, [r4, #68]	; 0x44
   152d8:	mov	r7, #0
   152dc:	bl	10ebc <mcsync_unlock@plt>
   152e0:	mov	r0, r7
   152e4:	pop	{r4, r5, r6, r7, r8, pc}
   152e8:	ldr	r3, [r4]
   152ec:	str	r5, [r0, #12]
   152f0:	str	r5, [r0, #16]
   152f4:	lsl	r0, r3, #2
   152f8:	str	r5, [r6, #12]
   152fc:	str	r3, [r6, #8]
   15300:	bl	10c94 <mycore_malloc@plt>
   15304:	cmp	r0, #0
   15308:	str	r0, [r6, #4]
   1530c:	bne	152a0 <mcobject_async_node_add@@Base+0x94>
   15310:	b	152d4 <mcobject_async_node_add@@Base+0xc8>

00015314 <mcobject_async_node_clean@@Base>:
   15314:	ldr	r3, [r0, #48]	; 0x30
   15318:	cmp	r3, r1
   1531c:	bxls	lr
   15320:	ldr	r0, [r0, #44]	; 0x2c
   15324:	mov	r2, #0
   15328:	add	ip, r0, r1, lsl #4
   1532c:	ldr	r3, [r0, r1, lsl #4]
   15330:	str	r2, [ip, #12]
   15334:	cmp	r3, r2
   15338:	bxeq	lr
   1533c:	ldr	r2, [r3, #16]
   15340:	cmp	r2, #0
   15344:	bne	15354 <mcobject_async_node_clean@@Base+0x40>
   15348:	mov	r2, r3
   1534c:	b	15364 <mcobject_async_node_clean@@Base+0x50>
   15350:	mov	r2, r3
   15354:	ldr	r3, [r2, #16]
   15358:	cmp	r3, #0
   1535c:	bne	15350 <mcobject_async_node_clean@@Base+0x3c>
   15360:	str	r2, [r0, r1, lsl #4]
   15364:	mov	r3, #0
   15368:	str	r3, [r2, #4]
   1536c:	str	r3, [ip, #12]
   15370:	bx	lr

00015374 <mcobject_async_node_all_clean@@Base>:
   15374:	ldr	r3, [r0, #48]	; 0x30
   15378:	cmp	r3, #0
   1537c:	bxeq	lr
   15380:	push	{r4, r5, r6, lr}
   15384:	mov	r5, r0
   15388:	mov	r4, #0
   1538c:	mov	r1, r4
   15390:	mov	r0, r5
   15394:	bl	10880 <mcobject_async_node_clean@plt>
   15398:	ldr	r3, [r5, #48]	; 0x30
   1539c:	add	r4, r4, #1
   153a0:	cmp	r3, r4
   153a4:	bhi	1538c <mcobject_async_node_all_clean@@Base+0x18>
   153a8:	pop	{r4, r5, r6, pc}

000153ac <mcobject_async_node_delete@@Base>:
   153ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   153b0:	mov	r5, r0
   153b4:	ldr	r0, [r0, #68]	; 0x44
   153b8:	mov	r7, r1
   153bc:	bl	10850 <mcsync_lock@plt>
   153c0:	ldr	r3, [r5, #48]	; 0x30
   153c4:	cmp	r3, r7
   153c8:	bls	15494 <mcobject_async_node_delete@@Base+0xe8>
   153cc:	ldr	r9, [r5, #44]	; 0x2c
   153d0:	add	r8, r9, r7, lsl #4
   153d4:	ldr	r4, [r9, r7, lsl #4]
   153d8:	b	153e0 <mcobject_async_node_delete@@Base+0x34>
   153dc:	mov	r4, r3
   153e0:	ldr	r3, [r4, #12]
   153e4:	cmp	r3, #0
   153e8:	bne	153dc <mcobject_async_node_delete@@Base+0x30>
   153ec:	ldr	r3, [r5, #20]
   153f0:	ldr	r0, [r5, #12]
   153f4:	ldr	r6, [r5, #16]
   153f8:	b	15414 <mcobject_async_node_delete@@Base+0x68>
   153fc:	str	r4, [r0, r3, lsl #2]
   15400:	ldr	r4, [r4, #16]
   15404:	add	r3, r3, #1
   15408:	cmp	r4, #0
   1540c:	str	r3, [r5, #20]
   15410:	beq	15440 <mcobject_async_node_delete@@Base+0x94>
   15414:	cmp	r3, r6
   15418:	bcc	153fc <mcobject_async_node_delete@@Base+0x50>
   1541c:	lsl	r6, r6, #1
   15420:	lsl	r1, r6, #2
   15424:	bl	fbd8 <mycore_realloc@plt>
   15428:	cmp	r0, #0
   1542c:	beq	15494 <mcobject_async_node_delete@@Base+0xe8>
   15430:	str	r6, [r5, #16]
   15434:	str	r0, [r5, #12]
   15438:	ldr	r3, [r5, #20]
   1543c:	b	153fc <mcobject_async_node_delete@@Base+0x50>
   15440:	ldr	r0, [r8, #4]
   15444:	cmp	r0, #0
   15448:	beq	15450 <mcobject_async_node_delete@@Base+0xa4>
   1544c:	bl	10dcc <mycore_free@plt>
   15450:	mov	r3, #0
   15454:	str	r3, [r9, r7, lsl #4]
   15458:	str	r3, [r8, #4]
   1545c:	str	r3, [r8, #8]
   15460:	str	r3, [r8, #12]
   15464:	ldr	r3, [r5, #60]	; 0x3c
   15468:	ldr	r2, [r5, #64]	; 0x40
   1546c:	cmp	r3, r2
   15470:	bcs	154a0 <mcobject_async_node_delete@@Base+0xf4>
   15474:	ldr	r0, [r5, #56]	; 0x38
   15478:	str	r7, [r0, r3, lsl #2]
   1547c:	ldr	r3, [r5, #60]	; 0x3c
   15480:	ldr	r0, [r5, #68]	; 0x44
   15484:	add	r3, r3, #1
   15488:	str	r3, [r5, #60]	; 0x3c
   1548c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   15490:	b	10ebc <mcsync_unlock@plt>
   15494:	ldr	r0, [r5, #68]	; 0x44
   15498:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1549c:	b	10ebc <mcsync_unlock@plt>
   154a0:	lsl	r1, r2, #2
   154a4:	ldr	r0, [r5, #56]	; 0x38
   154a8:	lsl	r4, r2, #1
   154ac:	bl	fbd8 <mycore_realloc@plt>
   154b0:	cmp	r0, #0
   154b4:	strne	r0, [r5, #56]	; 0x38
   154b8:	ldreq	r0, [r5, #56]	; 0x38
   154bc:	ldreq	r3, [r5, #60]	; 0x3c
   154c0:	ldrne	r3, [r5, #60]	; 0x3c
   154c4:	strne	r4, [r5, #64]	; 0x40
   154c8:	b	15478 <mcobject_async_node_delete@@Base+0xcc>

000154cc <mcobject_async_malloc@@Base>:
   154cc:	push	{r4, r5, r6, r7, lr}
   154d0:	sub	sp, sp, #12
   154d4:	ldr	r6, [r0, #44]	; 0x2c
   154d8:	add	ip, r6, r1, lsl #4
   154dc:	ldr	r3, [ip, #12]
   154e0:	cmp	r3, #0
   154e4:	beq	1550c <mcobject_async_malloc@@Base+0x40>
   154e8:	cmp	r2, #0
   154ec:	movne	r1, #0
   154f0:	strne	r1, [r2]
   154f4:	ldr	r2, [ip, #4]
   154f8:	sub	r3, r3, #1
   154fc:	str	r3, [ip, #12]
   15500:	ldr	r0, [r2, r3, lsl #2]
   15504:	add	sp, sp, #12
   15508:	pop	{r4, r5, r6, r7, pc}
   1550c:	mov	r5, r1
   15510:	ldr	r1, [r6, r1, lsl #4]
   15514:	mov	r7, r2
   15518:	mov	r4, r0
   1551c:	ldmib	r1, {r2, ip}
   15520:	cmp	r2, ip
   15524:	bcc	15540 <mcobject_async_malloc@@Base+0x74>
   15528:	ldr	r1, [r1, #12]
   1552c:	cmp	r1, #0
   15530:	beq	15578 <mcobject_async_malloc@@Base+0xac>
   15534:	mov	r2, r3
   15538:	str	r1, [r6, r5, lsl #4]
   1553c:	str	r3, [r1, #4]
   15540:	cmp	r7, #0
   15544:	movne	r3, #0
   15548:	strne	r3, [r7]
   1554c:	ldr	r3, [r4, #8]
   15550:	ldr	r0, [r1]
   15554:	mul	r3, r3, r2
   15558:	add	r2, r3, #4
   1555c:	str	r5, [r0, r3]
   15560:	ldr	r3, [r1, #4]
   15564:	add	r0, r0, r2
   15568:	add	r3, r3, #1
   1556c:	str	r3, [r1, #4]
   15570:	add	sp, sp, #12
   15574:	pop	{r4, r5, r6, r7, pc}
   15578:	ldr	r1, [r0]
   1557c:	add	r2, sp, #4
   15580:	bl	1010c <mcobject_async_chunk_malloc@plt>
   15584:	ldr	r3, [sp, #4]
   15588:	cmp	r3, #0
   1558c:	mov	r1, r0
   15590:	bne	155ac <mcobject_async_malloc@@Base+0xe0>
   15594:	ldr	r3, [r6, r5, lsl #4]
   15598:	ldr	r2, [r0, #4]
   1559c:	str	r3, [r0, #16]
   155a0:	str	r0, [r3, #12]
   155a4:	str	r0, [r6, r5, lsl #4]
   155a8:	b	15540 <mcobject_async_malloc@@Base+0x74>
   155ac:	cmp	r7, #0
   155b0:	strne	r3, [r7]
   155b4:	mov	r0, #0
   155b8:	b	15504 <mcobject_async_malloc@@Base+0x38>

000155bc <mcobject_async_free@@Base>:
   155bc:	ldr	r2, [r0, #48]	; 0x30
   155c0:	ldr	r3, [r1, #-4]
   155c4:	cmp	r3, r2
   155c8:	bcc	155d4 <mcobject_async_free@@Base+0x18>
   155cc:	mov	r0, #5
   155d0:	bx	lr
   155d4:	push	{r4, r5, r6, lr}
   155d8:	mov	r5, r1
   155dc:	ldr	r4, [r0, #44]	; 0x2c
   155e0:	add	r4, r4, r3, lsl #4
   155e4:	ldr	r3, [r4, #12]
   155e8:	ldr	r2, [r4, #8]
   155ec:	cmp	r3, r2
   155f0:	bcs	1560c <mcobject_async_free@@Base+0x50>
   155f4:	ldr	r0, [r4, #4]
   155f8:	add	r2, r3, #1
   155fc:	str	r5, [r0, r3, lsl #2]
   15600:	mov	r0, #0
   15604:	str	r2, [r4, #12]
   15608:	pop	{r4, r5, r6, pc}
   1560c:	lsl	r1, r2, #3
   15610:	ldr	r0, [r4, #4]
   15614:	lsl	r6, r2, #1
   15618:	bl	fbd8 <mycore_realloc@plt>
   1561c:	cmp	r0, #0
   15620:	ldrne	r3, [r4, #12]
   15624:	stmibne	r4, {r0, r6}
   15628:	bne	155f8 <mcobject_async_free@@Base+0x3c>
   1562c:	mov	r0, #6
   15630:	pop	{r4, r5, r6, pc}

00015634 <mcsimple_create@@Base>:
   15634:	mov	r1, #28
   15638:	mov	r0, #1
   1563c:	b	ff14 <mycore_calloc@plt>

00015640 <mcsimple_clean@@Base>:
   15640:	mov	r3, #0
   15644:	str	r3, [r0, #24]
   15648:	str	r3, [r0, #12]
   1564c:	bx	lr

00015650 <mcsimple_destroy@@Base>:
   15650:	push	{r4, r5, r6, lr}
   15654:	subs	r5, r0, #0
   15658:	beq	156b0 <mcsimple_destroy@@Base+0x60>
   1565c:	ldr	r2, [r5, #4]
   15660:	mov	r6, r1
   15664:	cmp	r2, #0
   15668:	beq	156a8 <mcsimple_destroy@@Base+0x58>
   1566c:	ldr	r1, [r5, #16]
   15670:	cmp	r1, #0
   15674:	beq	156a0 <mcsimple_destroy@@Base+0x50>
   15678:	mov	r4, #0
   1567c:	ldr	r3, [r2, r4, lsl #2]
   15680:	add	r4, r4, #1
   15684:	subs	r0, r3, #0
   15688:	beq	15698 <mcsimple_destroy@@Base+0x48>
   1568c:	bl	10dcc <mycore_free@plt>
   15690:	ldr	r1, [r5, #16]
   15694:	ldr	r2, [r5, #4]
   15698:	cmp	r4, r1
   1569c:	bcc	1567c <mcsimple_destroy@@Base+0x2c>
   156a0:	mov	r0, r2
   156a4:	bl	10dcc <mycore_free@plt>
   156a8:	cmp	r6, #0
   156ac:	bne	156b8 <mcsimple_destroy@@Base+0x68>
   156b0:	mov	r0, r5
   156b4:	pop	{r4, r5, r6, pc}
   156b8:	mov	r0, r5
   156bc:	bl	10dcc <mycore_free@plt>
   156c0:	mov	r5, #0
   156c4:	b	156b0 <mcsimple_destroy@@Base+0x60>

000156c8 <mcsimple_init_list_entries@@Base>:
   156c8:	ldr	r3, [r0, #8]
   156cc:	ldr	r2, [r0, #12]
   156d0:	push	{r4, r5, r6, lr}
   156d4:	cmp	r2, r3
   156d8:	mov	r5, r1
   156dc:	mov	r4, r0
   156e0:	lslcc	r5, r1, #2
   156e4:	bcs	15724 <mcsimple_init_list_entries@@Base+0x5c>
   156e8:	ldr	r6, [r4, #4]
   156ec:	mov	r3, #0
   156f0:	str	r3, [r4, #24]
   156f4:	ldr	r0, [r6, r5]
   156f8:	cmp	r0, r3
   156fc:	popne	{r4, r5, r6, pc}
   15700:	ldr	r3, [r4, #16]
   15704:	ldr	r0, [r4, #20]
   15708:	add	r3, r3, #1
   1570c:	str	r3, [r4, #16]
   15710:	bl	10c94 <mycore_malloc@plt>
   15714:	ldr	r3, [r4, #4]
   15718:	str	r0, [r6, r5]
   1571c:	ldr	r0, [r3, r5]
   15720:	pop	{r4, r5, r6, pc}
   15724:	lsl	r1, r3, #2
   15728:	ldr	r0, [r0, #4]
   1572c:	add	r6, r3, #128	; 0x80
   15730:	bl	fbd8 <mycore_realloc@plt>
   15734:	cmp	r0, #0
   15738:	popeq	{r4, r5, r6, pc}
   1573c:	ldr	r2, [r4, #8]
   15740:	lsl	r5, r5, #2
   15744:	sub	r2, r6, r2
   15748:	str	r0, [r4, #4]
   1574c:	lsl	r2, r2, #2
   15750:	add	r0, r0, r5
   15754:	mov	r1, #0
   15758:	bl	108b0 <memset@plt>
   1575c:	str	r6, [r4, #8]
   15760:	b	156e8 <mcsimple_init_list_entries@@Base+0x20>

00015764 <mcsimple_init@@Base>:
   15764:	push	{r4, r5, r6, lr}
   15768:	mov	r4, r0
   1576c:	mov	ip, #0
   15770:	str	r1, [r0, #8]
   15774:	mov	r0, r1
   15778:	str	r3, [r4]
   1577c:	str	ip, [r4, #16]
   15780:	str	ip, [r4, #12]
   15784:	mov	r1, #4
   15788:	mov	r6, r3
   1578c:	mov	r5, r2
   15790:	bl	ff14 <mycore_calloc@plt>
   15794:	cmp	r0, #0
   15798:	str	r0, [r4, #4]
   1579c:	popeq	{r4, r5, r6, pc}
   157a0:	mul	r5, r5, r6
   157a4:	ldr	r1, [r4, #12]
   157a8:	str	r5, [r4, #20]
   157ac:	mov	r0, r4
   157b0:	pop	{r4, r5, r6, lr}
   157b4:	b	10994 <mcsimple_init_list_entries@plt>

000157b8 <mcsimple_malloc@@Base>:
   157b8:	ldr	r3, [r0, #24]
   157bc:	ldr	r2, [r0, #20]
   157c0:	push	{r4, lr}
   157c4:	cmp	r3, r2
   157c8:	mov	r4, r0
   157cc:	bcs	157f0 <mcsimple_malloc@@Base+0x38>
   157d0:	ldr	r0, [r4, #12]
   157d4:	ldr	r1, [r4, #4]
   157d8:	ldr	r2, [r4]
   157dc:	ldr	r0, [r1, r0, lsl #2]
   157e0:	add	r2, r2, r3
   157e4:	add	r0, r0, r3
   157e8:	str	r2, [r4, #24]
   157ec:	pop	{r4, pc}
   157f0:	ldr	r1, [r0, #12]
   157f4:	add	r1, r1, #1
   157f8:	str	r1, [r0, #12]
   157fc:	bl	10994 <mcsimple_init_list_entries@plt>
   15800:	cmp	r0, #0
   15804:	popeq	{r4, pc}
   15808:	ldr	r3, [r4, #24]
   1580c:	b	157d0 <mcsimple_malloc@@Base+0x18>

00015810 <mcsimple_get_by_absolute_position@@Base>:
   15810:	push	{r4, r5, r6, r7, r8, lr}
   15814:	mov	r4, r0
   15818:	ldr	r5, [r0]
   1581c:	ldr	r7, [r0, #20]
   15820:	mul	r5, r5, r1
   15824:	mov	r1, r7
   15828:	mov	r0, r5
   1582c:	bl	2e168 <mcsync_mutex_unlock@@Base+0x14>
   15830:	ldr	r3, [r4, #16]
   15834:	cmp	r0, r3
   15838:	bcs	1585c <mcsimple_get_by_absolute_position@@Base+0x4c>
   1583c:	mov	r6, r0
   15840:	mov	r1, r7
   15844:	mov	r0, r5
   15848:	bl	2e354 <mcsync_mutex_unlock@@Base+0x200>
   1584c:	ldr	r3, [r4, #4]
   15850:	ldr	r0, [r3, r6, lsl #2]
   15854:	add	r0, r0, r1
   15858:	pop	{r4, r5, r6, r7, r8, pc}
   1585c:	mov	r0, #0
   15860:	pop	{r4, r5, r6, r7, r8, pc}

00015864 <mcsync_create@@Base>:
   15864:	mov	r1, #8
   15868:	mov	r0, #1
   1586c:	b	ff14 <mycore_calloc@plt>

00015870 <mcsync_init@@Base>:
   15870:	push	{r4, r5, r6, lr}
   15874:	mov	r4, r0
   15878:	bl	1055c <mcsync_spin_create@plt>
   1587c:	cmp	r0, #0
   15880:	str	r0, [r4]
   15884:	beq	158d8 <mcsync_init@@Base+0x68>
   15888:	bl	104fc <mcsync_spin_init@plt>
   1588c:	subs	r5, r0, #0
   15890:	bne	158c8 <mcsync_init@@Base+0x58>
   15894:	bl	108c8 <mcsync_mutex_create@plt>
   15898:	cmp	r0, #0
   1589c:	str	r0, [r4, #4]
   158a0:	beq	158d8 <mcsync_init@@Base+0x68>
   158a4:	bl	10b50 <mcsync_mutex_init@plt>
   158a8:	subs	r5, r0, #0
   158ac:	beq	158c0 <mcsync_init@@Base+0x50>
   158b0:	ldr	r0, [r4]
   158b4:	bl	ffa4 <mcsync_spin_destroy@plt>
   158b8:	ldr	r0, [r4, #4]
   158bc:	bl	fd70 <mcsync_mutex_destroy@plt>
   158c0:	mov	r0, r5
   158c4:	pop	{r4, r5, r6, pc}
   158c8:	ldr	r0, [r4]
   158cc:	bl	ffa4 <mcsync_spin_destroy@plt>
   158d0:	mov	r0, r5
   158d4:	pop	{r4, r5, r6, pc}
   158d8:	mov	r5, #1
   158dc:	mov	r0, r5
   158e0:	pop	{r4, r5, r6, pc}

000158e4 <mcsync_clean@@Base>:
   158e4:	push	{r4, lr}
   158e8:	mov	r4, r0
   158ec:	ldr	r0, [r0]
   158f0:	bl	10a78 <mcsync_spin_clean@plt>
   158f4:	ldr	r0, [r4, #4]
   158f8:	pop	{r4, lr}
   158fc:	b	10e50 <mcsync_mutex_clean@plt>

00015900 <mcsync_destroy@@Base>:
   15900:	push	{r4, r5, r6, lr}
   15904:	subs	r4, r0, #0
   15908:	beq	15928 <mcsync_destroy@@Base+0x28>
   1590c:	ldr	r0, [r4]
   15910:	mov	r5, r1
   15914:	bl	ffa4 <mcsync_spin_destroy@plt>
   15918:	ldr	r0, [r4, #4]
   1591c:	bl	fd70 <mcsync_mutex_destroy@plt>
   15920:	cmp	r5, #0
   15924:	bne	15930 <mcsync_destroy@@Base+0x30>
   15928:	mov	r0, r4
   1592c:	pop	{r4, r5, r6, pc}
   15930:	mov	r0, r4
   15934:	bl	10dcc <mycore_free@plt>
   15938:	mov	r4, #0
   1593c:	b	15928 <mcsync_destroy@@Base+0x28>

00015940 <mcsync_lock@@Base>:
   15940:	ldr	r0, [r0]
   15944:	b	105b0 <mcsync_spin_lock@plt>

00015948 <mcsync_unlock@@Base>:
   15948:	ldr	r0, [r0]
   1594c:	b	11024 <mcsync_spin_unlock@plt>

00015950 <mctree_create@@Base>:
   15950:	push	{r4, r5, r6, lr}
   15954:	mov	r5, r0
   15958:	mov	r0, #16
   1595c:	bl	10c94 <mycore_malloc@plt>
   15960:	subs	r4, r0, #0
   15964:	beq	15994 <mctree_create@@Base+0x44>
   15968:	add	r0, r5, #512	; 0x200
   1596c:	add	r3, r5, #1
   15970:	str	r0, [r4, #8]
   15974:	str	r3, [r4, #4]
   15978:	mov	r1, #28
   1597c:	bl	ff14 <mycore_calloc@plt>
   15980:	cmp	r0, #0
   15984:	mov	r6, r0
   15988:	str	r0, [r4]
   1598c:	strne	r5, [r4, #12]
   15990:	beq	1599c <mctree_create@@Base+0x4c>
   15994:	mov	r0, r4
   15998:	pop	{r4, r5, r6, pc}
   1599c:	mov	r0, r4
   159a0:	bl	10dcc <mycore_free@plt>
   159a4:	mov	r4, r6
   159a8:	b	15994 <mctree_create@@Base+0x44>

000159ac <mctree_clean@@Base>:
   159ac:	ldr	r2, [r0, #8]
   159b0:	ldr	ip, [r0, #12]
   159b4:	mov	r3, r0
   159b8:	rsb	r2, r2, r2, lsl #3
   159bc:	add	ip, ip, #1
   159c0:	ldr	r0, [r0]
   159c4:	mov	r1, #0
   159c8:	str	ip, [r3, #4]
   159cc:	lsl	r2, r2, #2
   159d0:	b	108b0 <memset@plt>

000159d4 <mctree_destroy@@Base>:
   159d4:	push	{r4, lr}
   159d8:	subs	r4, r0, #0
   159dc:	beq	159f8 <mctree_destroy@@Base+0x24>
   159e0:	ldr	r0, [r4]
   159e4:	cmp	r0, #0
   159e8:	beq	159f0 <mctree_destroy@@Base+0x1c>
   159ec:	bl	10dcc <mycore_free@plt>
   159f0:	mov	r0, r4
   159f4:	bl	10dcc <mycore_free@plt>
   159f8:	mov	r0, #0
   159fc:	pop	{r4, pc}

00015a00 <__mtree_search_lowercase_to_start@@Base>:
   15a00:	push	{r4, r5, r6, r7, r8, lr}
   15a04:	subs	r4, r1, #0
   15a08:	ldr	r6, [r0]
   15a0c:	movne	r8, r2
   15a10:	movne	r7, r3
   15a14:	bne	15a3c <__mtree_search_lowercase_to_start@@Base+0x3c>
   15a18:	b	15a6c <__mtree_search_lowercase_to_start@@Base+0x6c>
   15a1c:	ldr	r4, [r5, #20]
   15a20:	rsb	r3, r4, r4, lsl #3
   15a24:	add	r3, r6, r3, lsl #2
   15a28:	ldr	r3, [r3, #4]
   15a2c:	cmp	r7, r3
   15a30:	bcc	15a6c <__mtree_search_lowercase_to_start@@Base+0x6c>
   15a34:	cmp	r4, #0
   15a38:	beq	15a6c <__mtree_search_lowercase_to_start@@Base+0x6c>
   15a3c:	rsb	r2, r4, r4, lsl #3
   15a40:	add	r5, r6, r2, lsl #2
   15a44:	ldr	r3, [r5, #4]
   15a48:	cmp	r3, r7
   15a4c:	beq	15a74 <__mtree_search_lowercase_to_start@@Base+0x74>
   15a50:	bcc	15a1c <__mtree_search_lowercase_to_start@@Base+0x1c>
   15a54:	ldr	r4, [r5, #16]
   15a58:	rsb	r3, r4, r4, lsl #3
   15a5c:	add	r3, r6, r3, lsl #2
   15a60:	ldr	r3, [r3, #4]
   15a64:	cmp	r7, r3
   15a68:	bls	15a34 <__mtree_search_lowercase_to_start@@Base+0x34>
   15a6c:	mov	r0, #0
   15a70:	pop	{r4, r5, r6, r7, r8, pc}
   15a74:	ldr	r1, [r6, r2, lsl #2]
   15a78:	mov	r0, r8
   15a7c:	mov	r2, r7
   15a80:	bl	102a4 <mycore_strncasecmp@plt>
   15a84:	cmp	r0, #0
   15a88:	ldrne	r4, [r5, #24]
   15a8c:	bne	15a34 <__mtree_search_lowercase_to_start@@Base+0x34>
   15a90:	mov	r0, r4
   15a94:	pop	{r4, r5, r6, r7, r8, pc}

00015a98 <__mtree_search_to_start@@Base>:
   15a98:	push	{r4, r5, r6, r7, r8, lr}
   15a9c:	subs	r4, r1, #0
   15aa0:	ldr	r6, [r0]
   15aa4:	beq	15b04 <__mtree_search_to_start@@Base+0x6c>
   15aa8:	mov	r8, r2
   15aac:	mov	r7, r3
   15ab0:	b	15ad4 <__mtree_search_to_start@@Base+0x3c>
   15ab4:	ldr	r4, [r5, #20]
   15ab8:	rsb	r3, r4, r4, lsl #3
   15abc:	add	r3, r6, r3, lsl #2
   15ac0:	ldr	r3, [r3, #4]
   15ac4:	cmp	r7, r3
   15ac8:	bcc	15b04 <__mtree_search_to_start@@Base+0x6c>
   15acc:	cmp	r4, #0
   15ad0:	beq	15b04 <__mtree_search_to_start@@Base+0x6c>
   15ad4:	rsb	r2, r4, r4, lsl #3
   15ad8:	add	r5, r6, r2, lsl #2
   15adc:	ldr	r3, [r5, #4]
   15ae0:	cmp	r3, r7
   15ae4:	beq	15b0c <__mtree_search_to_start@@Base+0x74>
   15ae8:	bcc	15ab4 <__mtree_search_to_start@@Base+0x1c>
   15aec:	ldr	r4, [r5, #16]
   15af0:	rsb	r3, r4, r4, lsl #3
   15af4:	add	r3, r6, r3, lsl #2
   15af8:	ldr	r3, [r3, #4]
   15afc:	cmp	r7, r3
   15b00:	bls	15acc <__mtree_search_to_start@@Base+0x34>
   15b04:	mov	r0, #0
   15b08:	pop	{r4, r5, r6, r7, r8, pc}
   15b0c:	ldr	r1, [r6, r2, lsl #2]
   15b10:	mov	r0, r8
   15b14:	mov	r2, r7
   15b18:	bl	10070 <memcmp@plt>
   15b1c:	cmp	r0, #0
   15b20:	ldrne	r4, [r5, #24]
   15b24:	bne	15acc <__mtree_search_to_start@@Base+0x34>
   15b28:	mov	r0, r4
   15b2c:	pop	{r4, r5, r6, r7, r8, pc}

00015b30 <mctree_insert_child@@Base>:
   15b30:	push	{r4, r5, r6, lr}
   15b34:	rsb	r1, r1, r1, lsl #3
   15b38:	ldr	r5, [r0, #4]
   15b3c:	ldr	ip, [r0]
   15b40:	ldr	r6, [r0, #8]
   15b44:	rsb	lr, r5, r5, lsl #3
   15b48:	add	r4, ip, r1, lsl #2
   15b4c:	lsl	r1, lr, #2
   15b50:	add	lr, ip, r1
   15b54:	str	r5, [r4, #24]
   15b58:	str	r2, [ip, r1]
   15b5c:	str	r3, [lr, #4]
   15b60:	ldr	r2, [sp, #16]
   15b64:	add	r3, r5, #1
   15b68:	cmp	r3, r6
   15b6c:	str	r2, [lr, #8]
   15b70:	str	r3, [r0, #4]
   15b74:	bcc	15ba4 <mctree_insert_child@@Base+0x74>
   15b78:	mov	r4, r0
   15b7c:	add	r3, r5, #4096	; 0x1000
   15b80:	add	r3, r3, #1
   15b84:	add	r1, r1, #114688	; 0x1c000
   15b88:	mov	r0, ip
   15b8c:	str	r3, [r4, #8]
   15b90:	add	r1, r1, #28
   15b94:	bl	fbd8 <mycore_realloc@plt>
   15b98:	ldr	r3, [r4, #4]
   15b9c:	mov	ip, r0
   15ba0:	str	r0, [r4]
   15ba4:	rsb	r3, r3, r3, lsl #3
   15ba8:	mov	r2, #0
   15bac:	lsl	r3, r3, #2
   15bb0:	add	r1, ip, r3
   15bb4:	str	r2, [ip, r3]
   15bb8:	mov	r0, r5
   15bbc:	str	r2, [r1, #8]
   15bc0:	str	r2, [r1, #12]
   15bc4:	str	r2, [r1, #16]
   15bc8:	str	r2, [r1, #20]
   15bcc:	str	r2, [r1, #24]
   15bd0:	pop	{r4, r5, r6, pc}

00015bd4 <mctree_insert_after@@Base>:
   15bd4:	push	{r4, r5, r6, r7, r8, lr}
   15bd8:	rsb	ip, r1, r1, lsl #3
   15bdc:	ldr	r5, [r0]
   15be0:	ldr	r4, [r0, #4]
   15be4:	add	ip, r5, ip, lsl #2
   15be8:	ldr	r7, [sp, #24]
   15bec:	ldr	r6, [ip, #20]
   15bf0:	cmp	r6, #0
   15bf4:	rsbne	lr, r4, r4, lsl #3
   15bf8:	rsbne	r8, r6, r6, lsl #3
   15bfc:	addne	lr, r5, lr, lsl #2
   15c00:	addne	r8, r5, r8, lsl #2
   15c04:	rsbeq	lr, r4, r4, lsl #3
   15c08:	strne	r4, [r8, #16]
   15c0c:	strne	r6, [lr, #20]
   15c10:	ldr	r6, [r0, #8]
   15c14:	addeq	lr, r5, lr, lsl #2
   15c18:	str	r4, [ip, #20]
   15c1c:	add	ip, r4, #1
   15c20:	cmp	ip, r6
   15c24:	str	r1, [lr, #16]
   15c28:	stm	lr, {r2, r3, r7}
   15c2c:	str	ip, [r0, #4]
   15c30:	bcc	15c60 <mctree_insert_after@@Base+0x8c>
   15c34:	add	r3, r4, #4096	; 0x1000
   15c38:	add	r3, r3, #1
   15c3c:	mov	r6, r0
   15c40:	rsb	r1, r3, r3, lsl #3
   15c44:	mov	r0, r5
   15c48:	str	r3, [r6, #8]
   15c4c:	lsl	r1, r1, #2
   15c50:	bl	fbd8 <mycore_realloc@plt>
   15c54:	ldr	ip, [r6, #4]
   15c58:	mov	r5, r0
   15c5c:	str	r0, [r6]
   15c60:	rsb	ip, ip, ip, lsl #3
   15c64:	mov	r3, #0
   15c68:	lsl	ip, ip, #2
   15c6c:	add	r2, r5, ip
   15c70:	str	r3, [r5, ip]
   15c74:	mov	r0, r4
   15c78:	str	r3, [r2, #8]
   15c7c:	str	r3, [r2, #12]
   15c80:	str	r3, [r2, #16]
   15c84:	str	r3, [r2, #20]
   15c88:	str	r3, [r2, #24]
   15c8c:	pop	{r4, r5, r6, r7, r8, pc}

00015c90 <mctree_insert_before@@Base>:
   15c90:	push	{r4, r5, r6, r7, r8, lr}
   15c94:	rsb	ip, r1, r1, lsl #3
   15c98:	ldr	r5, [r0]
   15c9c:	ldr	r4, [r0, #4]
   15ca0:	add	ip, r5, ip, lsl #2
   15ca4:	ldr	r7, [sp, #24]
   15ca8:	ldr	r6, [ip, #16]
   15cac:	cmp	r6, #0
   15cb0:	rsbne	lr, r4, r4, lsl #3
   15cb4:	rsbne	r8, r6, r6, lsl #3
   15cb8:	addne	lr, r5, lr, lsl #2
   15cbc:	addne	r8, r5, r8, lsl #2
   15cc0:	rsbeq	lr, r4, r4, lsl #3
   15cc4:	strne	r4, [r8, #20]
   15cc8:	strne	r6, [lr, #16]
   15ccc:	ldr	r6, [r0, #8]
   15cd0:	addeq	lr, r5, lr, lsl #2
   15cd4:	str	r4, [ip, #16]
   15cd8:	add	ip, r4, #1
   15cdc:	cmp	ip, r6
   15ce0:	str	r1, [lr, #20]
   15ce4:	stm	lr, {r2, r3, r7}
   15ce8:	str	ip, [r0, #4]
   15cec:	bcc	15d1c <mctree_insert_before@@Base+0x8c>
   15cf0:	add	r3, r4, #4096	; 0x1000
   15cf4:	add	r3, r3, #1
   15cf8:	mov	r6, r0
   15cfc:	rsb	r1, r3, r3, lsl #3
   15d00:	mov	r0, r5
   15d04:	str	r3, [r6, #8]
   15d08:	lsl	r1, r1, #2
   15d0c:	bl	fbd8 <mycore_realloc@plt>
   15d10:	ldr	ip, [r6, #4]
   15d14:	mov	r5, r0
   15d18:	str	r0, [r6]
   15d1c:	rsb	ip, ip, ip, lsl #3
   15d20:	mov	r3, #0
   15d24:	lsl	ip, ip, #2
   15d28:	add	r2, r5, ip
   15d2c:	str	r3, [r5, ip]
   15d30:	mov	r0, r4
   15d34:	str	r3, [r2, #8]
   15d38:	str	r3, [r2, #12]
   15d3c:	str	r3, [r2, #16]
   15d40:	str	r3, [r2, #20]
   15d44:	str	r3, [r2, #24]
   15d48:	pop	{r4, r5, r6, r7, r8, pc}

00015d4c <__mtree_insert_to_start@@Base>:
   15d4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15d50:	subs	r4, r1, #0
   15d54:	sub	sp, sp, #8
   15d58:	ldr	r6, [r0]
   15d5c:	beq	15ee8 <__mtree_insert_to_start@@Base+0x19c>
   15d60:	mov	r8, r2
   15d64:	lsl	r2, r4, #3
   15d68:	mov	r7, r3
   15d6c:	sub	r3, r2, r4
   15d70:	mov	r9, r0
   15d74:	add	r3, r6, r3, lsl #2
   15d78:	ldr	r5, [r3, #4]
   15d7c:	b	15da8 <__mtree_insert_to_start@@Base+0x5c>
   15d80:	ldr	r3, [sl, #20]
   15d84:	cmp	r3, #0
   15d88:	beq	15e54 <__mtree_insert_to_start@@Base+0x108>
   15d8c:	rsb	r2, r3, r3, lsl #3
   15d90:	add	r2, r6, r2, lsl #2
   15d94:	ldr	r5, [r2, #4]
   15d98:	cmp	r7, r5
   15d9c:	bcc	15e54 <__mtree_insert_to_start@@Base+0x108>
   15da0:	mov	r4, r3
   15da4:	lsl	r2, r4, #3
   15da8:	sub	r2, r2, r4
   15dac:	cmp	r7, r5
   15db0:	add	sl, r6, r2, lsl #2
   15db4:	beq	15e1c <__mtree_insert_to_start@@Base+0xd0>
   15db8:	bhi	15d80 <__mtree_insert_to_start@@Base+0x34>
   15dbc:	ldr	r3, [sl, #16]
   15dc0:	cmp	r3, #0
   15dc4:	beq	15ddc <__mtree_insert_to_start@@Base+0x90>
   15dc8:	rsb	r2, r3, r3, lsl #3
   15dcc:	add	r2, r6, r2, lsl #2
   15dd0:	ldr	r5, [r2, #4]
   15dd4:	cmp	r7, r5
   15dd8:	bls	15da0 <__mtree_insert_to_start@@Base+0x54>
   15ddc:	ldr	r3, [sp, #44]	; 0x2c
   15de0:	cmp	r3, #0
   15de4:	beq	15df8 <__mtree_insert_to_start@@Base+0xac>
   15de8:	add	r2, sp, #40	; 0x28
   15dec:	mov	r1, r7
   15df0:	mov	r0, r8
   15df4:	blx	r3
   15df8:	ldr	ip, [sp, #40]	; 0x28
   15dfc:	mov	r3, r7
   15e00:	mov	r2, r8
   15e04:	mov	r1, r4
   15e08:	mov	r0, r9
   15e0c:	str	ip, [sp]
   15e10:	bl	100ac <mctree_insert_before@plt>
   15e14:	add	sp, sp, #8
   15e18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15e1c:	ldr	r1, [r6, r2, lsl #2]
   15e20:	mov	r0, r8
   15e24:	mov	r2, r7
   15e28:	bl	10070 <memcmp@plt>
   15e2c:	cmp	r0, #0
   15e30:	beq	15e94 <__mtree_insert_to_start@@Base+0x148>
   15e34:	ldr	r3, [sl, #24]
   15e38:	cmp	r3, #0
   15e3c:	beq	15eac <__mtree_insert_to_start@@Base+0x160>
   15e40:	rsb	r2, r3, r3, lsl #3
   15e44:	mov	r4, r3
   15e48:	add	r3, r6, r2, lsl #2
   15e4c:	ldr	r5, [r3, #4]
   15e50:	b	15da4 <__mtree_insert_to_start@@Base+0x58>
   15e54:	ldr	r3, [sp, #44]	; 0x2c
   15e58:	cmp	r3, #0
   15e5c:	beq	15e70 <__mtree_insert_to_start@@Base+0x124>
   15e60:	add	r2, sp, #40	; 0x28
   15e64:	mov	r1, r7
   15e68:	mov	r0, r8
   15e6c:	blx	r3
   15e70:	ldr	ip, [sp, #40]	; 0x28
   15e74:	mov	r3, r7
   15e78:	mov	r2, r8
   15e7c:	mov	r1, r4
   15e80:	mov	r0, r9
   15e84:	str	ip, [sp]
   15e88:	bl	10cc4 <mctree_insert_after@plt>
   15e8c:	add	sp, sp, #8
   15e90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15e94:	ldr	r3, [sp, #40]	; 0x28
   15e98:	cmp	r3, #0
   15e9c:	beq	15ee8 <__mtree_insert_to_start@@Base+0x19c>
   15ea0:	str	r3, [sl, #8]
   15ea4:	mov	r0, r4
   15ea8:	b	15e14 <__mtree_insert_to_start@@Base+0xc8>
   15eac:	ldr	r3, [sp, #44]	; 0x2c
   15eb0:	cmp	r3, #0
   15eb4:	beq	15ec8 <__mtree_insert_to_start@@Base+0x17c>
   15eb8:	add	r2, sp, #40	; 0x28
   15ebc:	mov	r1, r5
   15ec0:	mov	r0, r8
   15ec4:	blx	r3
   15ec8:	ldr	ip, [sp, #40]	; 0x28
   15ecc:	mov	r3, r5
   15ed0:	mov	r2, r8
   15ed4:	mov	r1, r4
   15ed8:	mov	r0, r9
   15edc:	str	ip, [sp]
   15ee0:	bl	10244 <mctree_insert_child@plt>
   15ee4:	b	15e14 <__mtree_insert_to_start@@Base+0xc8>
   15ee8:	mov	r0, r4
   15eec:	b	15e14 <__mtree_insert_to_start@@Base+0xc8>

00015ef0 <mctree_insert@@Base>:
   15ef0:	push	{r4, r5, r6, r7, lr}
   15ef4:	sub	sp, sp, #20
   15ef8:	subs	r4, r2, #0
   15efc:	str	r3, [sp, #12]
   15f00:	moveq	r0, r4
   15f04:	beq	15f8c <mctree_insert@@Base+0x9c>
   15f08:	add	r3, r1, r4
   15f0c:	ldrb	r2, [r1]
   15f10:	mov	r6, r0
   15f14:	ldrb	r0, [r3, #-1]
   15f18:	ldr	r3, [pc, #156]	; 15fbc <mctree_insert@@Base+0xcc>
   15f1c:	mov	r5, r1
   15f20:	add	r3, pc, r3
   15f24:	ldr	r1, [r6, #12]
   15f28:	ldrb	r0, [r3, r0]
   15f2c:	ldrb	r3, [r3, r2]
   15f30:	add	r0, r0, r3
   15f34:	bl	2e354 <mcsync_mutex_unlock@@Base+0x200>
   15f38:	ldr	r3, [r6]
   15f3c:	add	r7, r1, #1
   15f40:	rsb	r2, r7, r7, lsl #3
   15f44:	add	r3, r3, r2, lsl #2
   15f48:	ldr	r1, [r3, #24]
   15f4c:	cmp	r1, #0
   15f50:	bne	15f94 <mctree_insert@@Base+0xa4>
   15f54:	ldr	r3, [sp, #40]	; 0x28
   15f58:	cmp	r3, #0
   15f5c:	beq	15f70 <mctree_insert@@Base+0x80>
   15f60:	add	r2, sp, #12
   15f64:	mov	r1, r4
   15f68:	mov	r0, r5
   15f6c:	blx	r3
   15f70:	ldr	ip, [sp, #12]
   15f74:	mov	r3, r4
   15f78:	mov	r2, r5
   15f7c:	mov	r1, r7
   15f80:	mov	r0, r6
   15f84:	str	ip, [sp]
   15f88:	bl	10244 <mctree_insert_child@plt>
   15f8c:	add	sp, sp, #20
   15f90:	pop	{r4, r5, r6, r7, pc}
   15f94:	ldr	r3, [sp, #40]	; 0x28
   15f98:	ldr	ip, [sp, #12]
   15f9c:	str	r3, [sp, #4]
   15fa0:	mov	r2, r5
   15fa4:	mov	r3, r4
   15fa8:	mov	r0, r6
   15fac:	str	ip, [sp]
   15fb0:	bl	103b8 <__mtree_insert_to_start@plt>
   15fb4:	add	sp, sp, #20
   15fb8:	pop	{r4, r5, r6, r7, pc}
   15fbc:	andeq	r8, r1, r4, ror #18

00015fc0 <mctree_search@@Base>:
   15fc0:	push	{r4, r5, r6, lr}
   15fc4:	subs	r6, r2, #0
   15fc8:	beq	16030 <mctree_search@@Base+0x70>
   15fcc:	add	r3, r1, r6
   15fd0:	mov	r4, r0
   15fd4:	ldrb	r2, [r1]
   15fd8:	ldrb	r0, [r3, #-1]
   15fdc:	ldr	r3, [pc, #84]	; 16038 <mctree_search@@Base+0x78>
   15fe0:	mov	r5, r1
   15fe4:	add	r3, pc, r3
   15fe8:	ldr	r1, [r4, #12]
   15fec:	ldrb	r0, [r3, r0]
   15ff0:	ldrb	r3, [r3, r2]
   15ff4:	add	r0, r0, r3
   15ff8:	bl	2e354 <mcsync_mutex_unlock@@Base+0x200>
   15ffc:	ldr	r3, [r4]
   16000:	add	r1, r1, #1
   16004:	rsb	r1, r1, r1, lsl #3
   16008:	add	r1, r3, r1, lsl #2
   1600c:	ldr	r0, [r1, #24]
   16010:	cmp	r0, #0
   16014:	popeq	{r4, r5, r6, pc}
   16018:	mov	r3, r6
   1601c:	mov	r2, r5
   16020:	mov	r1, r0
   16024:	mov	r0, r4
   16028:	pop	{r4, r5, r6, lr}
   1602c:	b	109e8 <__mtree_search_to_start@plt>
   16030:	mov	r0, r6
   16034:	pop	{r4, r5, r6, pc}
   16038:	andeq	r8, r1, r0, lsr #17

0001603c <mctree_search_lowercase@@Base>:
   1603c:	push	{r4, r5, r6, lr}
   16040:	subs	r6, r2, #0
   16044:	beq	160ac <mctree_search_lowercase@@Base+0x70>
   16048:	add	r3, r1, r6
   1604c:	mov	r4, r0
   16050:	ldrb	r2, [r1]
   16054:	ldrb	r0, [r3, #-1]
   16058:	ldr	r3, [pc, #84]	; 160b4 <mctree_search_lowercase@@Base+0x78>
   1605c:	mov	r5, r1
   16060:	add	r3, pc, r3
   16064:	ldr	r1, [r4, #12]
   16068:	ldrb	r0, [r3, r0]
   1606c:	ldrb	r3, [r3, r2]
   16070:	add	r0, r0, r3
   16074:	bl	2e354 <mcsync_mutex_unlock@@Base+0x200>
   16078:	ldr	r3, [r4]
   1607c:	add	r1, r1, #1
   16080:	rsb	r1, r1, r1, lsl #3
   16084:	add	r1, r3, r1, lsl #2
   16088:	ldr	r0, [r1, #24]
   1608c:	cmp	r0, #0
   16090:	popeq	{r4, r5, r6, pc}
   16094:	mov	r3, r6
   16098:	mov	r2, r5
   1609c:	mov	r1, r0
   160a0:	mov	r0, r4
   160a4:	pop	{r4, r5, r6, lr}
   160a8:	b	10f1c <__mtree_search_lowercase_to_start@plt>
   160ac:	mov	r0, r6
   160b0:	pop	{r4, r5, r6, pc}
   160b4:	andeq	r8, r1, r4, lsr #16

000160b8 <mycore_utils_mhash_hash@@Base>:
   160b8:	cmp	r1, #0
   160bc:	beq	16100 <mycore_utils_mhash_hash@@Base+0x48>
   160c0:	push	{r4, lr}
   160c4:	mov	r3, #0
   160c8:	add	lr, r0, r1
   160cc:	ldrb	ip, [r0], #1
   160d0:	add	r3, ip, r3
   160d4:	cmp	lr, r0
   160d8:	add	r3, r3, r3, lsl #10
   160dc:	eor	r3, r3, r3, lsr #6
   160e0:	bne	160cc <mycore_utils_mhash_hash@@Base+0x14>
   160e4:	add	r3, r3, r3, lsl #3
   160e8:	mov	r1, r2
   160ec:	eor	r0, r3, r3, lsr #11
   160f0:	add	r0, r0, r0, lsl #15
   160f4:	bl	2e354 <mcsync_mutex_unlock@@Base+0x200>
   160f8:	mov	r0, r1
   160fc:	pop	{r4, pc}
   16100:	mov	r0, r1
   16104:	bx	lr

00016108 <mycore_utils_mhash_create@@Base>:
   16108:	mov	r1, #24
   1610c:	mov	r0, #1
   16110:	b	ff14 <mycore_calloc@plt>

00016114 <mycore_utils_mhash_init@@Base>:
   16114:	push	{r4, r5, r6, r7, lr}
   16118:	sub	sp, sp, #12
   1611c:	mov	r5, r0
   16120:	mov	r6, r1
   16124:	mov	r7, r2
   16128:	bl	10160 <mchar_async_create@plt>
   1612c:	cmp	r0, #0
   16130:	str	r0, [r5]
   16134:	beq	16160 <mycore_utils_mhash_init@@Base+0x4c>
   16138:	mov	r2, #4096	; 0x1000
   1613c:	mov	r1, #128	; 0x80
   16140:	bl	104a8 <mchar_async_init@plt>
   16144:	cmp	r0, #0
   16148:	mov	r4, r0
   1614c:	str	r0, [sp, #4]
   16150:	beq	16170 <mycore_utils_mhash_init@@Base+0x5c>
   16154:	mov	r0, r4
   16158:	add	sp, sp, #12
   1615c:	pop	{r4, r5, r6, r7, pc}
   16160:	mov	r4, #2
   16164:	mov	r0, r4
   16168:	add	sp, sp, #12
   1616c:	pop	{r4, r5, r6, r7, pc}
   16170:	add	r1, sp, #4
   16174:	ldr	r0, [r5]
   16178:	bl	10298 <mchar_async_node_add@plt>
   1617c:	ldr	r4, [sp, #4]
   16180:	cmp	r4, #0
   16184:	str	r0, [r5, #4]
   16188:	bne	16154 <mycore_utils_mhash_init@@Base+0x40>
   1618c:	cmp	r6, #128	; 0x80
   16190:	movcc	r6, #128	; 0x80
   16194:	mov	r0, r6
   16198:	mov	r1, #4
   1619c:	bl	ff14 <mycore_calloc@plt>
   161a0:	cmp	r0, #0
   161a4:	str	r0, [r5, #8]
   161a8:	beq	16160 <mycore_utils_mhash_init@@Base+0x4c>
   161ac:	cmp	r7, #0
   161b0:	moveq	r7, #1
   161b4:	str	r7, [r5, #20]
   161b8:	str	r6, [r5, #12]
   161bc:	b	16154 <mycore_utils_mhash_init@@Base+0x40>

000161c0 <mycore_utils_mhash_clean@@Base>:
   161c0:	push	{r4, lr}
   161c4:	mov	r4, r0
   161c8:	ldr	r0, [r0]
   161cc:	bl	10bc8 <mchar_async_clean@plt>
   161d0:	ldr	r2, [r4, #12]
   161d4:	ldr	r0, [r4, #8]
   161d8:	mov	r1, #0
   161dc:	lsl	r2, r2, #2
   161e0:	pop	{r4, lr}
   161e4:	b	108b0 <memset@plt>

000161e8 <mycore_utils_mhash_destroy@@Base>:
   161e8:	push	{r4, r5, r6, lr}
   161ec:	subs	r4, r0, #0
   161f0:	beq	16218 <mycore_utils_mhash_destroy@@Base+0x30>
   161f4:	ldr	r0, [r4, #8]
   161f8:	mov	r5, r1
   161fc:	cmp	r0, #0
   16200:	beq	16210 <mycore_utils_mhash_destroy@@Base+0x28>
   16204:	bl	10dcc <mycore_free@plt>
   16208:	mov	r3, #0
   1620c:	str	r3, [r4, #8]
   16210:	cmp	r5, #0
   16214:	bne	16220 <mycore_utils_mhash_destroy@@Base+0x38>
   16218:	mov	r0, r4
   1621c:	pop	{r4, r5, r6, pc}
   16220:	mov	r0, #0
   16224:	bl	10dcc <mycore_free@plt>
   16228:	mov	r4, #0
   1622c:	b	16218 <mycore_utils_mhash_destroy@@Base+0x30>

00016230 <mycore_utils_mhash_create_entry@@Base>:
   16230:	push	{r4, r5, r6, r7, r8, lr}
   16234:	mov	r5, r0
   16238:	mov	r6, r2
   1623c:	mov	r8, r1
   16240:	mov	r2, #16
   16244:	ldm	r0, {r0, r1}
   16248:	mov	r7, r3
   1624c:	bl	10910 <mchar_async_malloc@plt>
   16250:	add	r2, r6, #1
   16254:	mov	r4, r0
   16258:	ldm	r5, {r0, r1}
   1625c:	bl	10910 <mchar_async_malloc@plt>
   16260:	cmp	r0, #0
   16264:	str	r0, [r4]
   16268:	beq	16294 <mycore_utils_mhash_create_entry@@Base+0x64>
   1626c:	mov	r2, r6
   16270:	mov	r1, r8
   16274:	bl	ff5c <memcpy@plt>
   16278:	ldr	r2, [r4]
   1627c:	mov	r3, #0
   16280:	strb	r3, [r2, r6]
   16284:	str	r3, [r4, #12]
   16288:	stmib	r4, {r6, r7}
   1628c:	mov	r0, r4
   16290:	pop	{r4, r5, r6, r7, r8, pc}
   16294:	mov	r3, r0
   16298:	mov	r2, r4
   1629c:	ldm	r5, {r0, r1}
   162a0:	mov	r4, r3
   162a4:	bl	10718 <mchar_async_free@plt>
   162a8:	b	1628c <mycore_utils_mhash_create_entry@@Base+0x5c>

000162ac <mycore_utils_mhash_search@@Base>:
   162ac:	cmp	r2, #0
   162b0:	cmpne	r1, #0
   162b4:	push	{r4, r5, r6, lr}
   162b8:	beq	16324 <mycore_utils_mhash_search@@Base+0x78>
   162bc:	mov	r5, r2
   162c0:	mov	r6, r1
   162c4:	mov	r4, r0
   162c8:	ldr	r2, [r0, #12]
   162cc:	mov	r1, r5
   162d0:	mov	r0, r6
   162d4:	bl	1007c <mycore_utils_mhash_hash@plt>
   162d8:	ldr	r3, [r4, #8]
   162dc:	ldr	r4, [r3, r0, lsl #2]
   162e0:	cmp	r4, #0
   162e4:	bne	162f8 <mycore_utils_mhash_search@@Base+0x4c>
   162e8:	b	16324 <mycore_utils_mhash_search@@Base+0x78>
   162ec:	ldr	r4, [r4, #12]
   162f0:	cmp	r4, #0
   162f4:	beq	16324 <mycore_utils_mhash_search@@Base+0x78>
   162f8:	ldr	r3, [r4, #4]
   162fc:	cmp	r5, r3
   16300:	bne	162ec <mycore_utils_mhash_search@@Base+0x40>
   16304:	mov	r2, r5
   16308:	mov	r1, r6
   1630c:	ldr	r0, [r4]
   16310:	bl	10f94 <strncmp@plt>
   16314:	cmp	r0, #0
   16318:	bne	162ec <mycore_utils_mhash_search@@Base+0x40>
   1631c:	mov	r0, r4
   16320:	pop	{r4, r5, r6, pc}
   16324:	mov	r4, #0
   16328:	mov	r0, r4
   1632c:	pop	{r4, r5, r6, pc}

00016330 <mycore_utils_mhash_entry_by_id@@Base>:
   16330:	ldr	r3, [r0, #12]
   16334:	cmp	r3, r1
   16338:	ldrhi	r3, [r0, #8]
   1633c:	ldrhi	r0, [r3, r1, lsl #2]
   16340:	movls	r0, #0
   16344:	bx	lr

00016348 <mycore_utils_mhash_get_table_size@@Base>:
   16348:	ldr	r0, [r0, #12]
   1634c:	bx	lr

00016350 <mycore_utils_mhash_rebuild_add_entry@@Base>:
   16350:	cmp	r2, #0
   16354:	cmpne	r1, #0
   16358:	moveq	ip, #1
   1635c:	movne	ip, #0
   16360:	beq	163b4 <mycore_utils_mhash_rebuild_add_entry@@Base+0x64>
   16364:	push	{r4, r5, r6, lr}
   16368:	mov	r5, r0
   1636c:	str	ip, [r3, #12]
   16370:	mov	r0, r1
   16374:	mov	r1, r2
   16378:	ldr	r2, [r5, #12]
   1637c:	mov	r4, r3
   16380:	bl	1007c <mycore_utils_mhash_hash@plt>
   16384:	ldr	r3, [r5, #8]
   16388:	ldr	r1, [r3, r0, lsl #2]
   1638c:	cmp	r1, #0
   16390:	bne	1639c <mycore_utils_mhash_rebuild_add_entry@@Base+0x4c>
   16394:	b	163bc <mycore_utils_mhash_rebuild_add_entry@@Base+0x6c>
   16398:	mov	r1, r2
   1639c:	ldr	r2, [r1, #12]
   163a0:	cmp	r2, #0
   163a4:	bne	16398 <mycore_utils_mhash_rebuild_add_entry@@Base+0x48>
   163a8:	str	r4, [r1, #12]
   163ac:	mov	r0, r4
   163b0:	pop	{r4, r5, r6, pc}
   163b4:	mov	r0, #0
   163b8:	bx	lr
   163bc:	str	r4, [r3, r0, lsl #2]
   163c0:	mov	r0, r4
   163c4:	pop	{r4, r5, r6, pc}

000163c8 <mycore_utils_mhash_rebuld@@Base>:
   163c8:	push	{r4, r5, r6, r7, r8, lr}
   163cc:	mov	r5, r0
   163d0:	ldr	r4, [r0, #12]
   163d4:	ldr	r8, [r0, #8]
   163d8:	mov	r1, #4
   163dc:	lsl	r0, r4, #1
   163e0:	str	r0, [r5, #12]
   163e4:	bl	ff14 <mycore_calloc@plt>
   163e8:	cmp	r0, #0
   163ec:	str	r0, [r5, #8]
   163f0:	beq	16450 <mycore_utils_mhash_rebuld@@Base+0x88>
   163f4:	ldr	r3, [r5, #12]
   163f8:	cmp	r3, #0
   163fc:	subne	r7, r8, #4
   16400:	movne	r6, #0
   16404:	beq	16440 <mycore_utils_mhash_rebuld@@Base+0x78>
   16408:	ldr	r4, [r7, #4]!
   1640c:	cmp	r4, #0
   16410:	beq	16434 <mycore_utils_mhash_rebuld@@Base+0x6c>
   16414:	mov	r3, r4
   16418:	ldm	r4, {r1, r2}
   1641c:	mov	r0, r5
   16420:	bl	10ea4 <mycore_utils_mhash_rebuild_add_entry@plt>
   16424:	ldr	r4, [r4, #12]
   16428:	cmp	r4, #0
   1642c:	bne	16414 <mycore_utils_mhash_rebuld@@Base+0x4c>
   16430:	ldr	r3, [r5, #12]
   16434:	add	r6, r6, #1
   16438:	cmp	r6, r3
   1643c:	bcc	16408 <mycore_utils_mhash_rebuld@@Base+0x40>
   16440:	mov	r0, r8
   16444:	bl	10dcc <mycore_free@plt>
   16448:	ldr	r0, [r5, #8]
   1644c:	pop	{r4, r5, r6, r7, r8, pc}
   16450:	str	r8, [r5, #8]
   16454:	str	r4, [r5, #12]
   16458:	pop	{r4, r5, r6, r7, r8, pc}

0001645c <mycore_utils_mhash_add_with_choice@@Base>:
   1645c:	cmp	r2, #0
   16460:	cmpne	r1, #0
   16464:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16468:	moveq	r5, #1
   1646c:	movne	r5, #0
   16470:	moveq	r6, #0
   16474:	beq	164f0 <mycore_utils_mhash_add_with_choice@@Base+0x94>
   16478:	mov	r6, r2
   1647c:	mov	r7, r1
   16480:	mov	r8, r0
   16484:	ldr	r2, [r0, #12]
   16488:	mov	r1, r6
   1648c:	mov	r0, r7
   16490:	bl	1007c <mycore_utils_mhash_hash@plt>
   16494:	ldr	r3, [r8, #8]
   16498:	ldr	r4, [r3, r0, lsl #2]
   1649c:	lsl	fp, r0, #2
   164a0:	cmp	r4, #0
   164a4:	mov	r9, r0
   164a8:	add	sl, r3, fp
   164ac:	bne	164c8 <mycore_utils_mhash_add_with_choice@@Base+0x6c>
   164b0:	b	1652c <mycore_utils_mhash_add_with_choice@@Base+0xd0>
   164b4:	ldr	r3, [r4, #12]
   164b8:	cmp	r3, #0
   164bc:	beq	164f8 <mycore_utils_mhash_add_with_choice@@Base+0x9c>
   164c0:	add	r5, r5, #1
   164c4:	mov	r4, r3
   164c8:	ldr	r3, [r4, #4]
   164cc:	cmp	r6, r3
   164d0:	bne	164b4 <mycore_utils_mhash_add_with_choice@@Base+0x58>
   164d4:	mov	r2, r6
   164d8:	mov	r1, r7
   164dc:	ldr	r0, [r4]
   164e0:	bl	10f94 <strncmp@plt>
   164e4:	cmp	r0, #0
   164e8:	bne	164b4 <mycore_utils_mhash_add_with_choice@@Base+0x58>
   164ec:	mov	r6, r4
   164f0:	mov	r0, r6
   164f4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164f8:	mov	r2, r6
   164fc:	mov	r1, r7
   16500:	mov	r0, r8
   16504:	bl	10ef8 <mycore_utils_mhash_create_entry@plt>
   16508:	ldr	r3, [r8, #20]
   1650c:	cmp	r5, r3
   16510:	mov	r6, r0
   16514:	str	r0, [r4, #12]
   16518:	bls	164f0 <mycore_utils_mhash_add_with_choice@@Base+0x94>
   1651c:	mov	r0, r8
   16520:	bl	10a48 <mycore_utils_mhash_rebuld@plt>
   16524:	mov	r0, r6
   16528:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1652c:	ldr	r3, [r8, #12]
   16530:	ldr	r2, [r8, #16]
   16534:	sub	r3, r3, r3, lsr #2
   16538:	cmp	r2, r3
   1653c:	bcc	16550 <mycore_utils_mhash_add_with_choice@@Base+0xf4>
   16540:	mov	r0, r8
   16544:	bl	10a48 <mycore_utils_mhash_rebuld@plt>
   16548:	ldr	sl, [r8, #8]
   1654c:	add	sl, sl, fp
   16550:	mov	r2, r6
   16554:	mov	r1, r7
   16558:	mov	r3, #0
   1655c:	mov	r0, r8
   16560:	bl	10ef8 <mycore_utils_mhash_create_entry@plt>
   16564:	ldr	r3, [r8, #8]
   16568:	str	r0, [sl]
   1656c:	ldr	r6, [r3, r9, lsl #2]
   16570:	mov	r0, r6
   16574:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016578 <mycore_utils_mhash_add@@Base>:
   16578:	push	{r4, lr}
   1657c:	mov	r4, r3
   16580:	bl	10db4 <mycore_utils_mhash_add_with_choice@plt>
   16584:	cmp	r0, #0
   16588:	strne	r4, [r0, #8]
   1658c:	pop	{r4, pc}

00016590 <myencoding_detect_by_trigram@@Base>:
   16590:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16594:	sub	sp, sp, #28
   16598:	subs	sl, r2, #3
   1659c:	str	r2, [sp, #16]
   165a0:	str	r0, [sp, #20]
   165a4:	str	r3, [sp, #12]
   165a8:	ldr	r7, [sp, #64]	; 0x40
   165ac:	beq	1667c <myencoding_detect_by_trigram@@Base+0xec>
   165b0:	mov	r3, #0
   165b4:	mov	r9, r1
   165b8:	str	r3, [sp, #8]
   165bc:	str	r3, [sp, #4]
   165c0:	mov	r5, r3
   165c4:	mov	r8, #3
   165c8:	b	165d8 <myencoding_detect_by_trigram@@Base+0x48>
   165cc:	add	r5, r5, #1
   165d0:	cmp	r5, sl
   165d4:	bcs	1665c <myencoding_detect_by_trigram@@Base+0xcc>
   165d8:	ldrsb	r3, [r9, r5]
   165dc:	add	r6, r9, r5
   165e0:	cmp	r3, #0
   165e4:	bge	165cc <myencoding_detect_by_trigram@@Base+0x3c>
   165e8:	cmp	r7, #0
   165ec:	beq	165cc <myencoding_detect_by_trigram@@Base+0x3c>
   165f0:	ldr	r4, [sp, #12]
   165f4:	mov	fp, #0
   165f8:	b	16608 <myencoding_detect_by_trigram@@Base+0x78>
   165fc:	cmp	r7, fp
   16600:	add	r4, r4, #8
   16604:	beq	165cc <myencoding_detect_by_trigram@@Base+0x3c>
   16608:	mov	r2, r8
   1660c:	mov	r1, r6
   16610:	mov	r0, r4
   16614:	bl	10070 <memcmp@plt>
   16618:	add	fp, fp, #1
   1661c:	cmp	r0, #0
   16620:	bne	165fc <myencoding_detect_by_trigram@@Base+0x6c>
   16624:	ldr	r2, [sp, #4]
   16628:	ldr	r3, [r4, #4]
   1662c:	add	r2, r2, #1
   16630:	str	r2, [sp, #4]
   16634:	ldr	r2, [sp, #8]
   16638:	ldr	r1, [sp, #68]	; 0x44
   1663c:	add	r3, r2, r3
   16640:	ldr	r2, [sp, #16]
   16644:	cmp	r3, r1
   16648:	movcs	r5, r2
   1664c:	add	r5, r5, #1
   16650:	cmp	r5, sl
   16654:	str	r3, [sp, #8]
   16658:	bcc	165d8 <myencoding_detect_by_trigram@@Base+0x48>
   1665c:	ldr	r3, [sp, #20]
   16660:	ldr	r2, [sp, #4]
   16664:	mov	r0, r3
   16668:	str	r2, [r3]
   1666c:	ldr	r2, [sp, #8]
   16670:	str	r2, [r3, #4]
   16674:	add	sp, sp, #28
   16678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1667c:	str	sl, [sp, #8]
   16680:	str	sl, [sp, #4]
   16684:	mov	r3, r0
   16688:	b	16660 <myencoding_detect_by_trigram@@Base+0xd0>

0001668c <myencoding_detect_russian_has_end@@Base>:
   1668c:	ldr	r3, [r0, #4]
   16690:	cmp	r3, r2
   16694:	bcs	166ac <myencoding_detect_russian_has_end@@Base+0x20>
   16698:	ldr	r0, [r0]
   1669c:	cmp	r0, r1
   166a0:	movcc	r0, #0
   166a4:	movcs	r0, #1
   166a8:	bx	lr
   166ac:	mov	r0, #1
   166b0:	bx	lr

000166b4 <myencoding_detect_unicode_has_end@@Base>:
   166b4:	ldr	r3, [r0, #4]
   166b8:	cmp	r3, #0
   166bc:	bne	166d0 <myencoding_detect_unicode_has_end@@Base+0x1c>
   166c0:	ldr	r0, [r0, #8]
   166c4:	clz	r0, r0
   166c8:	lsr	r0, r0, #5
   166cc:	bx	lr
   166d0:	ldr	r2, [r0, #8]
   166d4:	cmp	r2, #0
   166d8:	beq	16704 <myencoding_detect_unicode_has_end@@Base+0x50>
   166dc:	mov	r0, #100	; 0x64
   166e0:	push	{r4, lr}
   166e4:	mul	r0, r0, r2
   166e8:	mov	r4, r1
   166ec:	mov	r1, r3
   166f0:	bl	2e168 <mcsync_mutex_unlock@@Base+0x14>
   166f4:	cmp	r0, r4
   166f8:	movcs	r0, #0
   166fc:	movcc	r0, #1
   16700:	pop	{r4, pc}
   16704:	mov	r0, #1
   16708:	bx	lr

0001670c <myencoding_detect_utf_8@@Base>:
   1670c:	cmp	r2, #0
   16710:	push	{r4, r5, r6, lr}
   16714:	beq	16800 <myencoding_detect_utf_8@@Base+0xf4>
   16718:	mov	r4, #0
   1671c:	mov	r6, r4
   16720:	mov	lr, r4
   16724:	mov	r3, r4
   16728:	b	1673c <myencoding_detect_utf_8@@Base+0x30>
   1672c:	add	r3, r3, #1
   16730:	add	lr, lr, #1
   16734:	cmp	r2, r3
   16738:	bls	1680c <myencoding_detect_utf_8@@Base+0x100>
   1673c:	ldrb	ip, [r1, r3]
   16740:	tst	ip, #128	; 0x80
   16744:	beq	1672c <myencoding_detect_utf_8@@Base+0x20>
   16748:	and	r5, ip, #224	; 0xe0
   1674c:	cmp	r5, #192	; 0xc0
   16750:	beq	1679c <myencoding_detect_utf_8@@Base+0x90>
   16754:	and	r5, ip, #240	; 0xf0
   16758:	cmp	r5, #224	; 0xe0
   1675c:	beq	167cc <myencoding_detect_utf_8@@Base+0xc0>
   16760:	and	ip, ip, #248	; 0xf8
   16764:	cmp	ip, #240	; 0xf0
   16768:	addne	r3, r3, #1
   1676c:	addne	r4, r4, #1
   16770:	bne	16734 <myencoding_detect_utf_8@@Base+0x28>
   16774:	add	ip, r3, #4
   16778:	cmp	r2, ip
   1677c:	bls	1680c <myencoding_detect_utf_8@@Base+0x100>
   16780:	add	r3, r1, r3
   16784:	ldrb	r5, [r3, #3]
   16788:	tst	r5, #128	; 0x80
   1678c:	bne	1681c <myencoding_detect_utf_8@@Base+0x110>
   16790:	add	r4, r4, #1
   16794:	mov	r3, ip
   16798:	b	1673c <myencoding_detect_utf_8@@Base+0x30>
   1679c:	add	ip, r3, #2
   167a0:	cmp	r2, ip
   167a4:	bls	1680c <myencoding_detect_utf_8@@Base+0x100>
   167a8:	add	r3, r1, r3
   167ac:	ldrb	r3, [r3, #1]
   167b0:	tst	r3, #128	; 0x80
   167b4:	beq	16790 <myencoding_detect_utf_8@@Base+0x84>
   167b8:	tst	r3, #64	; 0x40
   167bc:	addeq	r6, r6, #1
   167c0:	moveq	r3, ip
   167c4:	beq	1673c <myencoding_detect_utf_8@@Base+0x30>
   167c8:	b	16790 <myencoding_detect_utf_8@@Base+0x84>
   167cc:	add	ip, r3, #3
   167d0:	cmp	r2, ip
   167d4:	bls	1680c <myencoding_detect_utf_8@@Base+0x100>
   167d8:	add	r3, r1, r3
   167dc:	ldrb	r5, [r3, #2]
   167e0:	tst	r5, #128	; 0x80
   167e4:	beq	16790 <myencoding_detect_utf_8@@Base+0x84>
   167e8:	tst	r5, #64	; 0x40
   167ec:	bne	16790 <myencoding_detect_utf_8@@Base+0x84>
   167f0:	ldrb	r3, [r3, #1]
   167f4:	tst	r3, #128	; 0x80
   167f8:	beq	16790 <myencoding_detect_utf_8@@Base+0x84>
   167fc:	b	167b8 <myencoding_detect_utf_8@@Base+0xac>
   16800:	mov	r4, r2
   16804:	mov	r6, r2
   16808:	mov	lr, r2
   1680c:	str	lr, [r0]
   16810:	str	r6, [r0, #4]
   16814:	str	r4, [r0, #8]
   16818:	pop	{r4, r5, r6, pc}
   1681c:	tst	r5, #64	; 0x40
   16820:	bne	16790 <myencoding_detect_utf_8@@Base+0x84>
   16824:	ldrb	r5, [r3, #2]
   16828:	tst	r5, #128	; 0x80
   1682c:	beq	16790 <myencoding_detect_utf_8@@Base+0x84>
   16830:	b	167e8 <myencoding_detect_utf_8@@Base+0xdc>

00016834 <myencoding_detect_utf_16@@Base>:
   16834:	cmp	r2, #0
   16838:	push	{r4, r5, lr}
   1683c:	beq	168b4 <myencoding_detect_utf_16@@Base+0x80>
   16840:	mov	r4, #0
   16844:	mov	r5, r4
   16848:	mov	r3, #1
   1684c:	b	1686c <myencoding_detect_utf_16@@Base+0x38>
   16850:	ldrb	ip, [r1]
   16854:	sub	ip, ip, #32
   16858:	cmp	ip, #94	; 0x5e
   1685c:	addls	r4, r4, #1
   16860:	cmp	r3, r2
   16864:	add	r3, r3, #1
   16868:	bcs	168a0 <myencoding_detect_utf_16@@Base+0x6c>
   1686c:	ldrb	ip, [r1], #1
   16870:	sub	lr, r3, #1
   16874:	cmp	ip, #0
   16878:	bne	16860 <myencoding_detect_utf_16@@Base+0x2c>
   1687c:	tst	lr, #1
   16880:	beq	16850 <myencoding_detect_utf_16@@Base+0x1c>
   16884:	ldrb	ip, [r1, #-2]
   16888:	sub	ip, ip, #32
   1688c:	cmp	ip, #94	; 0x5e
   16890:	addls	r5, r5, #1
   16894:	cmp	r3, r2
   16898:	add	r3, r3, #1
   1689c:	bcc	1686c <myencoding_detect_utf_16@@Base+0x38>
   168a0:	mov	r3, #0
   168a4:	str	r5, [r0, #4]
   168a8:	str	r4, [r0, #8]
   168ac:	str	r3, [r0]
   168b0:	pop	{r4, r5, pc}
   168b4:	mov	r4, r2
   168b8:	mov	r5, r2
   168bc:	b	168a0 <myencoding_detect_utf_16@@Base+0x6c>

000168c0 <myencoding_detect_bom@@Base>:
   168c0:	cmp	r1, #2
   168c4:	bls	168f8 <myencoding_detect_bom@@Base+0x38>
   168c8:	ldrb	r3, [r0]
   168cc:	cmp	r3, #239	; 0xef
   168d0:	beq	16924 <myencoding_detect_bom@@Base+0x64>
   168d4:	cmp	r3, #254	; 0xfe
   168d8:	beq	16908 <myencoding_detect_bom@@Base+0x48>
   168dc:	cmp	r3, #255	; 0xff
   168e0:	bne	168f0 <myencoding_detect_bom@@Base+0x30>
   168e4:	ldrb	r3, [r0, #1]
   168e8:	cmp	r3, #254	; 0xfe
   168ec:	beq	1694c <myencoding_detect_bom@@Base+0x8c>
   168f0:	mov	r0, #0
   168f4:	bx	lr
   168f8:	bne	168f0 <myencoding_detect_bom@@Base+0x30>
   168fc:	ldrb	r3, [r0]
   16900:	cmp	r3, #254	; 0xfe
   16904:	bne	168dc <myencoding_detect_bom@@Base+0x1c>
   16908:	ldrb	r3, [r0, #1]
   1690c:	cmp	r3, #255	; 0xff
   16910:	bne	168f0 <myencoding_detect_bom@@Base+0x30>
   16914:	mov	r3, #5
   16918:	str	r3, [r2]
   1691c:	mov	r0, #1
   16920:	bx	lr
   16924:	ldrb	r3, [r0, #1]
   16928:	cmp	r3, #187	; 0xbb
   1692c:	bne	168f0 <myencoding_detect_bom@@Base+0x30>
   16930:	ldrb	r3, [r0, #2]
   16934:	cmp	r3, #191	; 0xbf
   16938:	bne	168f0 <myencoding_detect_bom@@Base+0x30>
   1693c:	mov	r3, #0
   16940:	str	r3, [r2]
   16944:	mov	r0, #1
   16948:	bx	lr
   1694c:	mov	r3, #4
   16950:	str	r3, [r2]
   16954:	mov	r0, #1
   16958:	bx	lr

0001695c <myencoding_detect_and_cut_bom@@Base>:
   1695c:	push	{r4, r5, r6, r7, r8, lr}
   16960:	mov	r7, r3
   16964:	mov	r5, r0
   16968:	mov	r4, r1
   1696c:	mov	r6, r2
   16970:	bl	10214 <myencoding_detect_bom@plt>
   16974:	cmp	r0, #0
   16978:	popeq	{r4, r5, r6, r7, r8, pc}
   1697c:	ldr	r3, [r6]
   16980:	cmp	r3, #0
   16984:	ldr	r3, [sp, #24]
   16988:	addeq	r5, r5, #3
   1698c:	subeq	r4, r4, #3
   16990:	addne	r5, r5, #2
   16994:	subne	r4, r4, #2
   16998:	str	r5, [r7]
   1699c:	str	r4, [r3]
   169a0:	pop	{r4, r5, r6, r7, r8, pc}

000169a4 <myencoding_detect_unicode@@Base>:
   169a4:	push	{r4, r5, r6, r7, lr}
   169a8:	sub	sp, sp, #36	; 0x24
   169ac:	mov	r3, #0
   169b0:	add	r4, sp, #20
   169b4:	str	r3, [r2]
   169b8:	mov	r6, r2
   169bc:	mov	r5, r0
   169c0:	mov	r2, r1
   169c4:	mov	r7, r1
   169c8:	mov	r1, r0
   169cc:	mov	r0, r4
   169d0:	bl	fed8 <myencoding_detect_utf_16@plt>
   169d4:	ldr	r3, [sp, #28]
   169d8:	cmp	r3, #0
   169dc:	bne	16a24 <myencoding_detect_unicode@@Base+0x80>
   169e0:	ldr	r3, [sp, #24]
   169e4:	cmp	r3, #2
   169e8:	bhi	16a4c <myencoding_detect_unicode@@Base+0xa8>
   169ec:	mov	r2, r7
   169f0:	mov	r1, r5
   169f4:	mov	r0, sp
   169f8:	bl	11018 <myencoding_detect_utf_8@plt>
   169fc:	ldm	sp, {r0, r1, r2}
   16a00:	stm	r4, {r0, r1, r2}
   16a04:	mov	r0, r4
   16a08:	mov	r1, #10
   16a0c:	bl	10a6c <myencoding_detect_unicode_has_end@plt>
   16a10:	cmp	r0, #0
   16a14:	movne	r3, #0
   16a18:	strne	r3, [r6]
   16a1c:	add	sp, sp, #36	; 0x24
   16a20:	pop	{r4, r5, r6, r7, pc}
   16a24:	cmp	r3, #2
   16a28:	bls	169ec <myencoding_detect_unicode@@Base+0x48>
   16a2c:	ldr	r3, [sp, #24]
   16a30:	cmp	r3, #0
   16a34:	bne	169ec <myencoding_detect_unicode@@Base+0x48>
   16a38:	mov	r3, #5
   16a3c:	mov	r0, #1
   16a40:	str	r3, [r6]
   16a44:	add	sp, sp, #36	; 0x24
   16a48:	pop	{r4, r5, r6, r7, pc}
   16a4c:	mov	r3, #4
   16a50:	mov	r0, #1
   16a54:	str	r3, [r6]
   16a58:	add	sp, sp, #36	; 0x24
   16a5c:	pop	{r4, r5, r6, r7, pc}

00016a60 <myencoding_detect_russian@@Base>:
   16a60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16a64:	mov	r6, r2
   16a68:	sub	sp, sp, #24
   16a6c:	mov	r2, #0
   16a70:	mov	r3, #1000	; 0x3e8
   16a74:	str	r2, [r6]
   16a78:	ldr	r5, [pc, #496]	; 16c70 <myencoding_detect_russian@@Base+0x210>
   16a7c:	str	r3, [sp]
   16a80:	ldr	r3, [pc, #492]	; 16c74 <myencoding_detect_russian@@Base+0x214>
   16a84:	add	r4, sp, #16
   16a88:	add	r3, pc, r3
   16a8c:	mov	r2, r1
   16a90:	mov	r7, r0
   16a94:	mov	r8, r1
   16a98:	str	r5, [sp, #4]
   16a9c:	mov	r1, r0
   16aa0:	mov	r0, r4
   16aa4:	bl	1070c <myencoding_detect_by_trigram@plt>
   16aa8:	mov	r2, r5
   16aac:	mov	r0, r4
   16ab0:	mov	r1, #50	; 0x32
   16ab4:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   16ab8:	cmp	r0, #0
   16abc:	movne	r3, #32
   16ac0:	strne	r3, [r6]
   16ac4:	bne	16c68 <myencoding_detect_russian@@Base+0x208>
   16ac8:	ldr	r9, [sp, #20]
   16acc:	ldr	sl, [pc, #412]	; 16c70 <myencoding_detect_russian@@Base+0x210>
   16ad0:	cmp	r9, #0
   16ad4:	movne	r3, #32
   16ad8:	strne	r3, [r6]
   16adc:	ldr	r3, [pc, #404]	; 16c78 <myencoding_detect_russian@@Base+0x218>
   16ae0:	add	r5, sp, #8
   16ae4:	mov	r2, #1000	; 0x3e8
   16ae8:	add	r3, pc, r3
   16aec:	sub	r3, r3, #136	; 0x88
   16af0:	mov	r0, r5
   16af4:	str	r2, [sp]
   16af8:	mov	r1, r7
   16afc:	mov	r2, r8
   16b00:	str	sl, [sp, #4]
   16b04:	bl	1070c <myencoding_detect_by_trigram@plt>
   16b08:	ldm	r5, {r0, r1}
   16b0c:	mov	r2, sl
   16b10:	stm	r4, {r0, r1}
   16b14:	mov	r1, #50	; 0x32
   16b18:	mov	r0, r4
   16b1c:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   16b20:	cmp	r0, #0
   16b24:	movne	r3, #27
   16b28:	strne	r3, [r6]
   16b2c:	bne	16c68 <myencoding_detect_russian@@Base+0x208>
   16b30:	ldr	r3, [sp, #20]
   16b34:	ldr	sl, [pc, #308]	; 16c70 <myencoding_detect_russian@@Base+0x210>
   16b38:	cmp	r9, r3
   16b3c:	movcc	r9, r3
   16b40:	movcc	r3, #27
   16b44:	strcc	r3, [r6]
   16b48:	ldr	r3, [pc, #300]	; 16c7c <myencoding_detect_russian@@Base+0x21c>
   16b4c:	mov	r2, #1000	; 0x3e8
   16b50:	add	r3, pc, r3
   16b54:	sub	r3, r3, #272	; 0x110
   16b58:	stm	sp, {r2, sl}
   16b5c:	mov	r1, r7
   16b60:	mov	r2, r8
   16b64:	mov	r0, r5
   16b68:	bl	1070c <myencoding_detect_by_trigram@plt>
   16b6c:	ldm	r5, {r0, r1}
   16b70:	mov	r2, sl
   16b74:	stm	r4, {r0, r1}
   16b78:	mov	r1, #50	; 0x32
   16b7c:	mov	r0, r4
   16b80:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   16b84:	cmp	r0, #0
   16b88:	movne	r3, #22
   16b8c:	strne	r3, [r6]
   16b90:	bne	16c68 <myencoding_detect_russian@@Base+0x208>
   16b94:	ldr	r3, [sp, #20]
   16b98:	ldr	sl, [pc, #208]	; 16c70 <myencoding_detect_russian@@Base+0x210>
   16b9c:	cmp	r9, r3
   16ba0:	movcc	r9, r3
   16ba4:	movcc	r3, #22
   16ba8:	strcc	r3, [r6]
   16bac:	ldr	r3, [pc, #204]	; 16c80 <myencoding_detect_russian@@Base+0x220>
   16bb0:	mov	r2, #1000	; 0x3e8
   16bb4:	add	r3, pc, r3
   16bb8:	sub	r3, r3, #408	; 0x198
   16bbc:	stm	sp, {r2, sl}
   16bc0:	mov	r1, r7
   16bc4:	mov	r2, r8
   16bc8:	mov	r0, r5
   16bcc:	bl	1070c <myencoding_detect_by_trigram@plt>
   16bd0:	ldm	r5, {r0, r1}
   16bd4:	mov	r2, sl
   16bd8:	stm	r4, {r0, r1}
   16bdc:	mov	r1, #50	; 0x32
   16be0:	mov	r0, r4
   16be4:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   16be8:	cmp	r0, #0
   16bec:	movne	r3, #41	; 0x29
   16bf0:	strne	r3, [r6]
   16bf4:	bne	16c68 <myencoding_detect_russian@@Base+0x208>
   16bf8:	ldr	r3, [sp, #20]
   16bfc:	ldr	sl, [pc, #108]	; 16c70 <myencoding_detect_russian@@Base+0x210>
   16c00:	cmp	r9, r3
   16c04:	movcc	r9, r3
   16c08:	movcc	r3, #41	; 0x29
   16c0c:	strcc	r3, [r6]
   16c10:	ldr	r3, [pc, #108]	; 16c84 <myencoding_detect_russian@@Base+0x224>
   16c14:	mov	r0, #1000	; 0x3e8
   16c18:	add	r3, pc, r3
   16c1c:	mov	r2, r8
   16c20:	mov	r1, r7
   16c24:	sub	r3, r3, #544	; 0x220
   16c28:	stm	sp, {r0, sl}
   16c2c:	mov	r0, r5
   16c30:	bl	1070c <myencoding_detect_by_trigram@plt>
   16c34:	ldm	r5, {r0, r1}
   16c38:	mov	r2, sl
   16c3c:	stm	r4, {r0, r1}
   16c40:	mov	r0, r4
   16c44:	mov	r1, #50	; 0x32
   16c48:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   16c4c:	cmp	r0, #0
   16c50:	bne	16c60 <myencoding_detect_russian@@Base+0x200>
   16c54:	ldr	r3, [sp, #20]
   16c58:	cmp	r9, r3
   16c5c:	bcs	16c68 <myencoding_detect_russian@@Base+0x208>
   16c60:	mov	r3, #12
   16c64:	str	r3, [r6]
   16c68:	add	sp, sp, #24
   16c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16c70:	andeq	r8, r1, r0, lsr #13
   16c74:	strdeq	r7, [r1], -ip
   16c78:	muleq	r1, r4, lr
   16c7c:	andeq	fp, r1, r4, lsr #28
   16c80:			; <UNDEFINED> instruction: 0x0001ddb8
   16c84:	andeq	pc, r1, ip, asr #26

00016c88 <myencoding_detect@@Base>:
   16c88:	mov	r3, #0
   16c8c:	push	{r4, r5, r6, lr}
   16c90:	mov	r4, r2
   16c94:	str	r3, [r2]
   16c98:	mov	r5, r0
   16c9c:	mov	r6, r1
   16ca0:	bl	fc44 <myencoding_detect_unicode@plt>
   16ca4:	cmp	r0, #0
   16ca8:	popne	{r4, r5, r6, pc}
   16cac:	mov	r2, r4
   16cb0:	mov	r1, r6
   16cb4:	mov	r0, r5
   16cb8:	pop	{r4, r5, r6, lr}
   16cbc:	b	10f4c <myencoding_detect_russian@plt>

00016cc0 <myencoding_name_entry_by_name@@Base>:
   16cc0:	add	r3, r0, r1
   16cc4:	push	{r4, r5, r6, r7, r8, lr}
   16cc8:	mov	r5, r1
   16ccc:	mov	r7, r0
   16cd0:	ldrb	r1, [r3, #-1]
   16cd4:	ldrb	r0, [r0]
   16cd8:	ldr	r2, [pc, #164]	; 16d84 <myencoding_name_entry_by_name@@Base+0xc4>
   16cdc:	ldr	r3, [pc, #164]	; 16d88 <myencoding_name_entry_by_name@@Base+0xc8>
   16ce0:	add	r2, pc, r2
   16ce4:	add	r1, r2, r1
   16ce8:	add	r2, r2, r0
   16cec:	ldrb	r4, [r1, #-680]	; 0xfffffd58
   16cf0:	ldrb	r2, [r2, #-680]	; 0xfffffd58
   16cf4:	ldr	r6, [pc, #144]	; 16d8c <myencoding_name_entry_by_name@@Base+0xcc>
   16cf8:	add	r6, pc, r6
   16cfc:	smulbb	r4, r4, r2
   16d00:	mul	r4, r5, r4
   16d04:	umull	r2, r3, r3, r4
   16d08:	sub	r2, r4, r3
   16d0c:	add	r3, r3, r2, lsr #1
   16d10:	lsr	r3, r3, #8
   16d14:	rsb	r2, r3, r3, lsl #3
   16d18:	rsb	r2, r2, r2, lsl #4
   16d1c:	rsb	r3, r3, r2, lsl #2
   16d20:	sub	r4, r4, r3
   16d24:	add	r4, r4, #1
   16d28:	b	16d34 <myencoding_name_entry_by_name@@Base+0x74>
   16d2c:	bcc	16d74 <myencoding_name_entry_by_name@@Base+0xb4>
   16d30:	ldr	r4, [r4, #20]
   16d34:	rsb	r4, r4, r4, lsl #3
   16d38:	add	r4, r6, r4, lsl #2
   16d3c:	ldr	r0, [r4, #8]
   16d40:	cmp	r0, #0
   16d44:	beq	16d74 <myencoding_name_entry_by_name@@Base+0xb4>
   16d48:	ldr	r3, [r4, #12]
   16d4c:	cmp	r5, r3
   16d50:	bne	16d2c <myencoding_name_entry_by_name@@Base+0x6c>
   16d54:	mov	r2, r5
   16d58:	mov	r1, r7
   16d5c:	bl	102a4 <mycore_strncasecmp@plt>
   16d60:	cmp	r0, #0
   16d64:	beq	16d7c <myencoding_name_entry_by_name@@Base+0xbc>
   16d68:	ldr	r4, [r4, #20]
   16d6c:	cmp	r4, #0
   16d70:	bne	16d34 <myencoding_name_entry_by_name@@Base+0x74>
   16d74:	mov	r0, #0
   16d78:	pop	{r4, r5, r6, r7, r8, pc}
   16d7c:	mov	r0, r4
   16d80:	pop	{r4, r5, r6, r7, r8, pc}
   16d84:	andeq	r1, r2, ip, ror ip
   16d88:	ldmcc	r2, {r0, r1, r2, r4, r5, r8, sl, fp, sp}^
   16d8c:	andeq	r6, pc, ip, ror #29

00016d90 <myencoding_by_name@@Base>:
   16d90:	push	{r4, lr}
   16d94:	mov	r4, r2
   16d98:	bl	ff68 <myencoding_name_entry_by_name@plt>
   16d9c:	cmp	r0, #0
   16da0:	popeq	{r4, pc}
   16da4:	cmp	r4, #0
   16da8:	ldrne	r3, [r0, #16]
   16dac:	movne	r0, #1
   16db0:	strne	r3, [r4]
   16db4:	moveq	r0, #1
   16db8:	pop	{r4, pc}

00016dbc <myencoding_name_by_id@@Base>:
   16dbc:	cmp	r0, #41	; 0x29
   16dc0:	bls	16dd8 <myencoding_name_by_id@@Base+0x1c>
   16dc4:	cmp	r1, #0
   16dc8:	beq	16e10 <myencoding_name_by_id@@Base+0x54>
   16dcc:	mov	r0, #0
   16dd0:	str	r0, [r1]
   16dd4:	bx	lr
   16dd8:	cmp	r1, #0
   16ddc:	lsleq	r0, r0, #3
   16de0:	beq	16dfc <myencoding_name_by_id@@Base+0x40>
   16de4:	ldr	r3, [pc, #44]	; 16e18 <myencoding_name_by_id@@Base+0x5c>
   16de8:	lsl	r0, r0, #3
   16dec:	add	r3, pc, r3
   16df0:	add	r3, r3, r0
   16df4:	ldr	r3, [r3, #-2532]	; 0xfffff61c
   16df8:	str	r3, [r1]
   16dfc:	ldr	r3, [pc, #24]	; 16e1c <myencoding_name_by_id@@Base+0x60>
   16e00:	add	r3, pc, r3
   16e04:	add	r0, r3, r0
   16e08:	ldr	r0, [r0, #-2536]	; 0xfffff618
   16e0c:	bx	lr
   16e10:	mov	r0, r1
   16e14:	bx	lr
   16e18:	andeq	sl, pc, r8, ror #27
   16e1c:	ldrdeq	sl, [pc], -r4

00016e20 <myencoding_extracting_character_encoding_from_charset_with_found@@Base>:
   16e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e24:	sub	sp, sp, #12
   16e28:	subs	r7, r3, #0
   16e2c:	ldr	r9, [sp, #48]	; 0x30
   16e30:	mov	r3, #2
   16e34:	str	r3, [r2]
   16e38:	movne	r3, #0
   16e3c:	strne	r3, [r7]
   16e40:	cmp	r9, #0
   16e44:	movne	r3, #0
   16e48:	strne	r3, [r9]
   16e4c:	cmp	r1, #7
   16e50:	bls	16ed8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16e54:	ldr	r6, [pc, #660]	; 170f0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2d0>
   16e58:	mov	r5, r1
   16e5c:	mov	fp, r0
   16e60:	str	r2, [sp, #4]
   16e64:	add	r6, pc, r6
   16e68:	ldr	sl, [pc, #644]	; 170f4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2d4>
   16e6c:	mov	r4, #7
   16e70:	mov	r8, #0
   16e74:	b	16eb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x90>
   16e78:	cmp	r5, r4
   16e7c:	ldrb	r2, [fp, r4]
   16e80:	bls	16e98 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x78>
   16e84:	sub	r3, r2, #9
   16e88:	add	r1, fp, r4
   16e8c:	uxtb	r3, r3
   16e90:	cmp	r3, #23
   16e94:	bls	16ee4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc4>
   16e98:	cmp	r2, #61	; 0x3d
   16e9c:	beq	16f2c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x10c>
   16ea0:	add	r8, r4, #1
   16ea4:	add	r4, r4, #8
   16ea8:	cmp	r4, r5
   16eac:	bcs	16ed8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16eb0:	add	r1, fp, r8
   16eb4:	mov	r0, r6
   16eb8:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   16ebc:	cmp	r0, #0
   16ec0:	bne	16e78 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x58>
   16ec4:	mov	r4, r8
   16ec8:	add	r8, r4, #1
   16ecc:	add	r4, r4, #8
   16ed0:	cmp	r4, r5
   16ed4:	bcc	16eb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x90>
   16ed8:	mov	r0, #0
   16edc:	add	sp, sp, #12
   16ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ee4:	mvn	r3, sl, lsr r3
   16ee8:	tst	r3, #1
   16eec:	beq	16f14 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xf4>
   16ef0:	b	16ea0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x80>
   16ef4:	ldrb	r2, [r1, #1]!
   16ef8:	sub	r3, r2, #9
   16efc:	uxtb	r3, r3
   16f00:	cmp	r3, #23
   16f04:	mvn	r3, sl, lsr r3
   16f08:	bhi	16e98 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x78>
   16f0c:	tst	r3, #1
   16f10:	bne	16ea0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x80>
   16f14:	add	r4, r4, #1
   16f18:	cmp	r5, r4
   16f1c:	bhi	16ef4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xd4>
   16f20:	ldrb	r2, [fp, r4]
   16f24:	cmp	r2, #61	; 0x3d
   16f28:	bne	16ea0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x80>
   16f2c:	add	r1, r4, #1
   16f30:	cmp	r5, r1
   16f34:	bls	16ed8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16f38:	ldrb	ip, [fp, r1]
   16f3c:	add	r0, fp, r1
   16f40:	sub	r2, ip, #9
   16f44:	uxtb	r2, r2
   16f48:	cmp	r2, #23
   16f4c:	bhi	16f94 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x174>
   16f50:	ldr	lr, [pc, #412]	; 170f4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2d4>
   16f54:	mvn	r3, lr, lsr r2
   16f58:	tst	r3, #1
   16f5c:	addeq	r3, r4, #2
   16f60:	addeq	r3, fp, r3
   16f64:	moveq	r4, lr
   16f68:	bne	16fe8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1c8>
   16f6c:	add	r1, r1, #1
   16f70:	cmp	r5, r1
   16f74:	mov	r0, r3
   16f78:	bls	16ed8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16f7c:	ldrb	ip, [r3], #1
   16f80:	sub	r2, ip, #9
   16f84:	uxtb	r2, r2
   16f88:	cmp	r2, #23
   16f8c:	mvn	lr, r4, lsr r2
   16f90:	bls	16fe0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1c0>
   16f94:	cmp	ip, #34	; 0x22
   16f98:	bne	16fe8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1c8>
   16f9c:	add	r1, r1, #1
   16fa0:	cmp	r5, r1
   16fa4:	bls	16ed8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16fa8:	ldrb	r3, [fp, r1]
   16fac:	add	r0, fp, r1
   16fb0:	cmp	r3, #34	; 0x22
   16fb4:	movne	r2, r0
   16fb8:	movne	r3, r1
   16fbc:	bne	16fd0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1b0>
   16fc0:	b	170d8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2b8>
   16fc4:	ldrb	ip, [r2, #1]!
   16fc8:	cmp	ip, #34	; 0x22
   16fcc:	beq	17064 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x244>
   16fd0:	add	r3, r3, #1
   16fd4:	cmp	r5, r3
   16fd8:	bhi	16fc4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1a4>
   16fdc:	b	16ed8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16fe0:	tst	lr, #1
   16fe4:	beq	16f6c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x14c>
   16fe8:	cmp	ip, #39	; 0x27
   16fec:	beq	17094 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x274>
   16ff0:	cmp	r2, #23
   16ff4:	bhi	1703c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x21c>
   16ff8:	ldr	r4, [pc, #244]	; 170f4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2d4>
   16ffc:	mvn	r2, r4, lsr r2
   17000:	tst	r2, #1
   17004:	addeq	r2, r1, #1
   17008:	addeq	lr, fp, r2
   1700c:	bne	1703c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x21c>
   17010:	cmp	r5, r2
   17014:	mov	r0, lr
   17018:	mov	r1, r2
   1701c:	bls	16ed8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   17020:	ldrb	ip, [lr], #1
   17024:	add	r2, r2, #1
   17028:	sub	r3, ip, #9
   1702c:	uxtb	r3, r3
   17030:	cmp	r3, #23
   17034:	mvn	r3, r4, lsr r3
   17038:	bls	17088 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x268>
   1703c:	cmp	ip, #59	; 0x3b
   17040:	beq	170d8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2b8>
   17044:	add	fp, fp, r1
   17048:	mov	r3, r1
   1704c:	add	r3, r3, #1
   17050:	cmp	r5, r3
   17054:	bls	170e0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2c0>
   17058:	ldrb	r2, [fp, #1]!
   1705c:	cmp	r2, #59	; 0x3b
   17060:	bne	1704c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x22c>
   17064:	sub	r1, r3, r1
   17068:	cmp	r7, #0
   1706c:	strne	r0, [r7]
   17070:	cmp	r9, #0
   17074:	strne	r1, [r9]
   17078:	ldr	r2, [sp, #4]
   1707c:	add	sp, sp, #12
   17080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17084:	b	10cd0 <myencoding_by_name@plt>
   17088:	tst	r3, #1
   1708c:	beq	17010 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1f0>
   17090:	b	17044 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x224>
   17094:	add	r1, r1, #1
   17098:	cmp	r5, r1
   1709c:	bls	16ed8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   170a0:	ldrb	r3, [fp, r1]
   170a4:	add	r0, fp, r1
   170a8:	cmp	r3, #39	; 0x27
   170ac:	movne	r2, r0
   170b0:	movne	r3, r1
   170b4:	bne	170c8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2a8>
   170b8:	b	170d8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2b8>
   170bc:	ldrb	ip, [r2, #1]!
   170c0:	cmp	ip, #39	; 0x27
   170c4:	beq	17064 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x244>
   170c8:	add	r3, r3, #1
   170cc:	cmp	r5, r3
   170d0:	bhi	170bc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x29c>
   170d4:	b	16ed8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   170d8:	mov	r1, #0
   170dc:	b	17068 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x248>
   170e0:	cmp	r7, #0
   170e4:	strne	r0, [r7]
   170e8:	sub	r1, r3, r1
   170ec:	b	17070 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x250>
   170f0:	andeq	r1, r2, r0, asr sl
   170f4:	addeq	r0, r0, fp, lsl r0

000170f8 <myencoding_extracting_character_encoding_from_charset@@Base>:
   170f8:	push	{lr}		; (str lr, [sp, #-4]!)
   170fc:	sub	sp, sp, #12
   17100:	mov	r3, #0
   17104:	str	r3, [sp]
   17108:	bl	10838 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   1710c:	add	sp, sp, #12
   17110:	pop	{pc}		; (ldr pc, [sp], #4)

00017114 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base>:
   17114:	push	{r4, r5, r6, lr}
   17118:	ldr	ip, [r3]
   1711c:	ldr	lr, [r1]
   17120:	sub	ip, lr, ip
   17124:	cmp	lr, r2
   17128:	str	ip, [r3, #4]
   1712c:	bcs	171a8 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x94>
   17130:	ldrb	r4, [r0, lr]
   17134:	add	r0, r0, lr
   17138:	sub	r3, r4, #9
   1713c:	uxtb	ip, r3
   17140:	cmp	ip, #23
   17144:	movhi	r3, #1
   17148:	ldrls	r3, [pc, #124]	; 171cc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xb8>
   1714c:	mvnls	r3, r3, lsr ip
   17150:	cmp	r4, #47	; 0x2f
   17154:	moveq	r3, #0
   17158:	andne	r3, r3, #1
   1715c:	cmp	r3, #0
   17160:	moveq	r5, #1
   17164:	ldreq	r6, [pc, #96]	; 171cc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xb8>
   17168:	beq	17198 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x84>
   1716c:	b	171b4 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xa0>
   17170:	ldrb	r4, [r0, #1]!
   17174:	sub	ip, r4, #9
   17178:	uxtb	ip, ip
   1717c:	cmp	ip, #23
   17180:	mvnls	r3, r6, lsr ip
   17184:	cmp	r4, #47	; 0x2f
   17188:	moveq	r3, #0
   1718c:	andne	r3, r3, #1
   17190:	cmp	r3, #0
   17194:	bne	171b4 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xa0>
   17198:	add	lr, lr, #1
   1719c:	cmp	r2, lr
   171a0:	mov	r3, r5
   171a4:	bne	17170 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x5c>
   171a8:	str	lr, [r1]
   171ac:	mov	r0, #0
   171b0:	pop	{r4, r5, r6, pc}
   171b4:	cmp	r4, #61	; 0x3d
   171b8:	bne	171a8 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x94>
   171bc:	add	lr, lr, #1
   171c0:	str	lr, [r1]
   171c4:	mov	r0, #1
   171c8:	pop	{r4, r5, r6, pc}
   171cc:	addeq	r0, r0, fp, lsl r0

000171d0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>:
   171d0:	cmp	r1, r2
   171d4:	push	{r4, r5, r6, r7, lr}
   171d8:	bcs	172b8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xe8>
   171dc:	ldrb	r5, [r0, r1]
   171e0:	add	r7, r0, r1
   171e4:	sub	ip, r5, #9
   171e8:	uxtb	ip, ip
   171ec:	cmp	ip, #23
   171f0:	bhi	17238 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x68>
   171f4:	ldr	r6, [pc, #468]	; 173d0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x200>
   171f8:	mvn	ip, r6, lsr ip
   171fc:	tst	ip, #1
   17200:	addeq	lr, r1, #1
   17204:	addeq	r4, r0, lr
   17208:	bne	17238 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x68>
   1720c:	cmp	r2, lr
   17210:	mov	r7, r4
   17214:	mov	r1, lr
   17218:	beq	172b8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xe8>
   1721c:	ldrb	r5, [r4], #1
   17220:	add	lr, lr, #1
   17224:	sub	ip, r5, #9
   17228:	uxtb	ip, ip
   1722c:	cmp	ip, #23
   17230:	mvn	ip, r6, lsr ip
   17234:	bls	172a0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xd0>
   17238:	cmp	r5, #39	; 0x27
   1723c:	beq	17380 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1b0>
   17240:	cmp	r5, #62	; 0x3e
   17244:	beq	17318 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x148>
   17248:	cmp	r5, #34	; 0x22
   1724c:	beq	1733c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x16c>
   17250:	str	r1, [r3, #8]
   17254:	ldrb	lr, [r7]
   17258:	sub	ip, lr, #9
   1725c:	uxtb	ip, ip
   17260:	cmp	ip, #23
   17264:	movhi	r5, #0
   17268:	ldrls	r5, [pc, #352]	; 173d0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x200>
   1726c:	mvnls	r5, r5, lsr ip
   17270:	andls	r5, r5, #1
   17274:	eorls	r5, r5, #1
   17278:	cmp	lr, #62	; 0x3e
   1727c:	orreq	r5, r5, #1
   17280:	cmp	r5, #0
   17284:	addeq	r7, r0, r1
   17288:	ldreq	r6, [pc, #320]	; 173d0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x200>
   1728c:	moveq	r0, r1
   17290:	beq	172fc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x12c>
   17294:	mov	r0, r1
   17298:	mov	r1, #0
   1729c:	b	17330 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x160>
   172a0:	tst	ip, #1
   172a4:	bne	17238 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x68>
   172a8:	cmp	r2, lr
   172ac:	mov	r7, r4
   172b0:	mov	r1, lr
   172b4:	bne	1721c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x4c>
   172b8:	ldr	r2, [sp, #20]
   172bc:	mov	r3, #1
   172c0:	mov	r0, r1
   172c4:	strb	r3, [r2]
   172c8:	pop	{r4, r5, r6, r7, pc}
   172cc:	ldrb	r4, [r7, #1]!
   172d0:	sub	ip, r4, #9
   172d4:	uxtb	ip, ip
   172d8:	cmp	ip, #23
   172dc:	mvn	ip, r6, lsr ip
   172e0:	andls	ip, ip, #1
   172e4:	eorls	lr, ip, #1
   172e8:	cmp	r4, #62	; 0x3e
   172ec:	movne	ip, lr
   172f0:	orreq	ip, lr, #1
   172f4:	cmp	ip, #0
   172f8:	bne	1732c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x15c>
   172fc:	add	r0, r0, #1
   17300:	cmp	r2, r0
   17304:	mov	lr, r5
   17308:	bhi	172cc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xfc>
   1730c:	sub	r1, r0, r1
   17310:	str	r1, [r3, #12]
   17314:	pop	{r4, r5, r6, r7, pc}
   17318:	ldr	r2, [sp, #20]
   1731c:	mov	r3, #1
   17320:	add	r0, r1, r3
   17324:	strb	r3, [r2]
   17328:	pop	{r4, r5, r6, r7, pc}
   1732c:	sub	r1, r0, r1
   17330:	str	r1, [r3, #12]
   17334:	add	r0, r0, #1
   17338:	pop	{r4, r5, r6, r7, pc}
   1733c:	add	r1, r1, #1
   17340:	cmp	r2, r1
   17344:	str	r1, [r3, #8]
   17348:	bls	173c4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1f4>
   1734c:	ldrb	lr, [r0, r1]
   17350:	add	ip, r0, r1
   17354:	cmp	lr, #34	; 0x22
   17358:	movne	r0, r1
   1735c:	bne	17370 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1a0>
   17360:	b	17294 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xc4>
   17364:	ldrb	lr, [ip, #1]!
   17368:	cmp	lr, #34	; 0x22
   1736c:	beq	1732c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x15c>
   17370:	add	r0, r0, #1
   17374:	cmp	r2, r0
   17378:	bhi	17364 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x194>
   1737c:	b	1730c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x13c>
   17380:	add	r1, r1, #1
   17384:	cmp	r2, r1
   17388:	str	r1, [r3, #8]
   1738c:	bls	173c4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1f4>
   17390:	ldrb	lr, [r0, r1]
   17394:	add	ip, r0, r1
   17398:	cmp	lr, #39	; 0x27
   1739c:	movne	r0, r1
   173a0:	bne	173b4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1e4>
   173a4:	b	17294 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xc4>
   173a8:	ldrb	lr, [ip, #1]!
   173ac:	cmp	lr, #39	; 0x27
   173b0:	beq	1732c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x15c>
   173b4:	add	r0, r0, #1
   173b8:	cmp	r2, r0
   173bc:	bhi	173a8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1d8>
   173c0:	b	1730c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x13c>
   173c4:	mov	r0, r1
   173c8:	mov	r1, #0
   173cc:	b	17310 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x140>
   173d0:	addeq	r0, r0, fp, lsl r0

000173d4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base>:
   173d4:	push	{r4, r5, r6, r7, lr}
   173d8:	mov	r5, r3
   173dc:	sub	sp, sp, #20
   173e0:	mov	r3, #0
   173e4:	cmp	r2, r1
   173e8:	mov	ip, r1
   173ec:	str	r1, [sp, #12]
   173f0:	str	r3, [r5]
   173f4:	str	r3, [r5, #4]
   173f8:	str	r3, [r5, #8]
   173fc:	str	r3, [r5, #12]
   17400:	str	r3, [r5, #16]
   17404:	bls	17490 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xbc>
   17408:	ldrb	r1, [r0, r1]
   1740c:	mov	r4, r2
   17410:	mov	r6, r0
   17414:	sub	r3, r1, #9
   17418:	add	r0, r0, ip
   1741c:	uxtb	r2, r3
   17420:	cmp	r2, #23
   17424:	movhi	r3, #1
   17428:	ldrls	r3, [pc, #680]	; 176d8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x304>
   1742c:	mvnls	r3, r3, lsr r2
   17430:	cmp	r1, #47	; 0x2f
   17434:	moveq	r3, #0
   17438:	andne	r3, r3, #1
   1743c:	cmp	r3, #0
   17440:	addeq	ip, ip, #1
   17444:	moveq	lr, #1
   17448:	ldreq	r7, [pc, #648]	; 176d8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x304>
   1744c:	beq	17484 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xb0>
   17450:	b	176c4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   17454:	ldrb	r1, [r0, #1]!
   17458:	sub	r2, r1, #9
   1745c:	uxtb	r2, r2
   17460:	cmp	r2, #23
   17464:	mvnls	r3, r7, lsr r2
   17468:	cmp	r1, #47	; 0x2f
   1746c:	moveq	r3, #0
   17470:	andne	r3, r3, #1
   17474:	cmp	r3, #0
   17478:	add	r3, ip, #1
   1747c:	bne	174a8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xd4>
   17480:	mov	ip, r3
   17484:	cmp	r4, ip
   17488:	mov	r3, lr
   1748c:	bne	17454 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x80>
   17490:	ldr	r2, [sp, #40]	; 0x28
   17494:	mov	r3, #1
   17498:	strb	r3, [r2]
   1749c:	mov	r0, ip
   174a0:	add	sp, sp, #20
   174a4:	pop	{r4, r5, r6, r7, pc}
   174a8:	cmp	r1, #62	; 0x3e
   174ac:	str	ip, [sp, #12]
   174b0:	beq	176a8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2d4>
   174b4:	cmp	r4, ip
   174b8:	str	ip, [r5]
   174bc:	bls	17668 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x294>
   174c0:	add	r0, r6, ip
   174c4:	mov	r2, ip
   174c8:	ldrb	r3, [r0], #1
   174cc:	sub	r3, r3, #9
   174d0:	cmp	r3, #53	; 0x35
   174d4:	addls	pc, pc, r3, lsl #2
   174d8:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174dc:	b	175b4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1e0>
   174e0:	b	175b4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1e0>
   174e4:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174e8:	b	175b4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1e0>
   174ec:	b	175b4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1e0>
   174f0:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174f4:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174f8:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174fc:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17500:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17504:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17508:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1750c:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17510:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17514:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17518:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1751c:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17520:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17524:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17528:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1752c:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17530:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17534:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17538:	b	175b4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1e0>
   1753c:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17540:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17544:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17548:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1754c:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17550:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17554:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17558:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1755c:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17560:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17564:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17568:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1756c:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17570:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17574:	b	17634 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x260>
   17578:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1757c:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17580:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17584:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17588:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1758c:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17590:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17594:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17598:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1759c:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   175a0:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   175a4:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   175a8:	b	17658 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   175ac:	b	175f4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x220>
   175b0:	b	17634 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x260>
   175b4:	add	r1, sp, #16
   175b8:	add	r2, r2, #1
   175bc:	str	r2, [r1, #-4]!
   175c0:	mov	r3, r5
   175c4:	mov	r2, r4
   175c8:	mov	r0, r6
   175cc:	bl	104cc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   175d0:	cmp	r0, #0
   175d4:	bne	17684 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2b0>
   175d8:	ldr	r2, [sp, #40]	; 0x28
   175dc:	ldr	ip, [sp, #12]
   175e0:	mov	r3, #1
   175e4:	mov	r0, ip
   175e8:	strb	r3, [r2]
   175ec:	add	sp, sp, #20
   175f0:	pop	{r4, r5, r6, r7, pc}
   175f4:	sub	r3, r2, #1
   175f8:	cmp	r3, ip
   175fc:	beq	175b4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1e0>
   17600:	ldr	r3, [sp, #40]	; 0x28
   17604:	sub	ip, r2, ip
   17608:	add	lr, r2, #1
   1760c:	str	ip, [r5, #4]
   17610:	mov	r1, lr
   17614:	str	r3, [sp]
   17618:	mov	r2, r4
   1761c:	mov	r3, r5
   17620:	mov	r0, r6
   17624:	str	lr, [sp, #12]
   17628:	bl	fe48 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>
   1762c:	mov	ip, r0
   17630:	b	1749c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xc8>
   17634:	mov	r1, #1
   17638:	sub	r3, r2, ip
   1763c:	add	ip, r2, r1
   17640:	ldr	r2, [sp, #40]	; 0x28
   17644:	mov	r0, ip
   17648:	strb	r1, [r2]
   1764c:	str	r3, [r5, #4]
   17650:	add	sp, sp, #20
   17654:	pop	{r4, r5, r6, r7, pc}
   17658:	add	r2, r2, #1
   1765c:	cmp	r4, r2
   17660:	bne	174c8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xf4>
   17664:	str	r4, [sp, #12]
   17668:	mov	r3, r5
   1766c:	mov	r2, r4
   17670:	add	r1, sp, #12
   17674:	mov	r0, r6
   17678:	bl	104cc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   1767c:	cmp	r0, #0
   17680:	beq	175d8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x204>
   17684:	ldr	r3, [sp, #40]	; 0x28
   17688:	ldr	r1, [sp, #12]
   1768c:	str	r3, [sp]
   17690:	mov	r2, r4
   17694:	mov	r3, r5
   17698:	mov	r0, r6
   1769c:	bl	fe48 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>
   176a0:	mov	ip, r0
   176a4:	b	1749c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xc8>
   176a8:	mov	ip, r3
   176ac:	ldr	r3, [sp, #40]	; 0x28
   176b0:	mov	r2, #1
   176b4:	mov	r0, ip
   176b8:	strb	r2, [r3]
   176bc:	add	sp, sp, #20
   176c0:	pop	{r4, r5, r6, r7, pc}
   176c4:	cmp	r1, #62	; 0x3e
   176c8:	addeq	r3, ip, #1
   176cc:	beq	176a8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2d4>
   176d0:	str	ip, [r5]
   176d4:	b	174c4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xf0>
   176d8:	addeq	r0, r0, fp, lsl r0

000176dc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base>:
   176dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176e0:	mov	fp, r3
   176e4:	ldr	r3, [pc, #544]	; 1790c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x230>
   176e8:	sub	sp, sp, #60	; 0x3c
   176ec:	add	r3, pc, r3
   176f0:	str	r3, [sp, #16]
   176f4:	ldr	r3, [pc, #532]	; 17910 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x234>
   176f8:	mov	ip, #0
   176fc:	add	r3, pc, r3
   17700:	str	r3, [sp, #20]
   17704:	ldr	r3, [pc, #520]	; 17914 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x238>
   17708:	mov	r9, ip
   1770c:	add	r3, pc, r3
   17710:	str	r3, [sp, #12]
   17714:	ldr	r3, [pc, #508]	; 17918 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x23c>
   17718:	mov	r6, r0
   1771c:	add	r3, pc, r3
   17720:	mov	r5, r1
   17724:	mov	r4, r2
   17728:	strb	ip, [sp, #35]	; 0x23
   1772c:	mov	sl, ip
   17730:	str	ip, [sp, #24]
   17734:	add	r8, sp, #36	; 0x24
   17738:	add	r7, sp, #35	; 0x23
   1773c:	str	r3, [sp, #28]
   17740:	b	17758 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x7c>
   17744:	cmp	r3, #7
   17748:	beq	177ac <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xd0>
   1774c:	ldrb	r3, [sp, #35]	; 0x23
   17750:	cmp	r3, #0
   17754:	bne	17804 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x128>
   17758:	ldr	r1, [r5]
   1775c:	cmp	r1, r4
   17760:	bcs	17804 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x128>
   17764:	mov	r3, r8
   17768:	str	r7, [sp]
   1776c:	mov	r2, r4
   17770:	mov	r0, r6
   17774:	bl	10cf4 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   17778:	ldr	r3, [sp, #40]	; 0x28
   1777c:	cmp	r3, #10
   17780:	str	r0, [r5]
   17784:	bne	17744 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x68>
   17788:	ldr	r1, [sp, #36]	; 0x24
   1778c:	ldr	r0, [sp, #12]
   17790:	add	r1, r6, r1
   17794:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   17798:	cmp	r0, #0
   1779c:	bne	1786c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x190>
   177a0:	ldr	r3, [sp, #40]	; 0x28
   177a4:	cmp	r3, #7
   177a8:	bne	1774c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   177ac:	ldr	r1, [sp, #36]	; 0x24
   177b0:	ldr	r0, [sp, #16]
   177b4:	add	r1, r6, r1
   177b8:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   177bc:	cmp	r0, #0
   177c0:	beq	178a8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1cc>
   177c4:	tst	r9, #2
   177c8:	bne	1774c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   177cc:	ldr	r3, [sp, #100]	; 0x64
   177d0:	ldr	r0, [sp, #44]	; 0x2c
   177d4:	str	r3, [sp]
   177d8:	ldr	r1, [sp, #48]	; 0x30
   177dc:	ldr	r3, [sp, #96]	; 0x60
   177e0:	add	r0, r6, r0
   177e4:	mov	r2, fp
   177e8:	bl	10838 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   177ec:	ldrb	r3, [sp, #35]	; 0x23
   177f0:	orr	r9, r9, #2
   177f4:	cmp	r0, #0
   177f8:	movne	sl, #2
   177fc:	cmp	r3, #0
   17800:	beq	17758 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x7c>
   17804:	cmp	sl, #0
   17808:	beq	17858 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x17c>
   1780c:	ldr	r3, [sp, #24]
   17810:	eor	r3, r3, #1
   17814:	cmp	sl, #2
   17818:	movne	sl, #0
   1781c:	andeq	sl, r3, #1
   17820:	cmp	sl, #0
   17824:	bne	17858 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x17c>
   17828:	ldr	r3, [fp]
   1782c:	sub	r2, r3, #4
   17830:	cmp	r2, #1
   17834:	strls	sl, [fp]
   17838:	movls	r0, #1
   1783c:	bls	17864 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x188>
   17840:	cmp	r3, #6
   17844:	moveq	r3, #33	; 0x21
   17848:	mov	r0, #1
   1784c:	streq	r3, [fp]
   17850:	add	sp, sp, #60	; 0x3c
   17854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17858:	mov	r0, #0
   1785c:	mov	r3, #2
   17860:	str	r3, [fp]
   17864:	add	sp, sp, #60	; 0x3c
   17868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1786c:	tst	r9, #1
   17870:	bne	1774c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   17874:	ldr	r3, [sp, #48]	; 0x30
   17878:	orr	r9, r9, #1
   1787c:	cmp	r3, #12
   17880:	bne	1774c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   17884:	ldr	r1, [sp, #44]	; 0x2c
   17888:	ldr	r0, [sp, #28]
   1788c:	add	r1, r6, r1
   17890:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   17894:	ldr	r3, [sp, #24]
   17898:	cmp	r0, #0
   1789c:	movne	r3, r0
   178a0:	str	r3, [sp, #24]
   178a4:	b	1774c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   178a8:	ldr	r3, [sp, #40]	; 0x28
   178ac:	cmp	r3, #7
   178b0:	bne	1774c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   178b4:	ldr	r1, [sp, #36]	; 0x24
   178b8:	ldr	r0, [sp, #20]
   178bc:	add	r1, r6, r1
   178c0:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   178c4:	cmp	r0, #0
   178c8:	beq	1774c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   178cc:	tst	r9, #4
   178d0:	bne	1774c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   178d4:	ldr	r3, [sp, #96]	; 0x60
   178d8:	ldr	r0, [sp, #44]	; 0x2c
   178dc:	cmp	r3, #0
   178e0:	add	r0, r6, r0
   178e4:	strne	r0, [r3]
   178e8:	ldr	r3, [sp, #100]	; 0x64
   178ec:	ldr	r1, [sp, #48]	; 0x30
   178f0:	cmp	r3, #0
   178f4:	strne	r1, [r3]
   178f8:	mov	r2, fp
   178fc:	orr	r9, r9, #4
   17900:	bl	10cd0 <myencoding_by_name@plt>
   17904:	mov	sl, #1
   17908:	b	1774c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   1790c:	andeq	r1, r2, ip, ror #3
   17910:			; <UNDEFINED> instruction: 0x000211b8
   17914:			; <UNDEFINED> instruction: 0x000211b0
   17918:	andeq	r1, r2, ip, lsr #3

0001791c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>:
   1791c:	cmp	r1, r2
   17920:	bcs	179f0 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xd4>
   17924:	push	{r4, r5, r6, r7, lr}
   17928:	add	ip, r0, r1
   1792c:	ldrb	lr, [r0, r1]
   17930:	sub	sp, sp, #36	; 0x24
   17934:	sub	r3, lr, #9
   17938:	uxtb	r3, r3
   1793c:	cmp	r3, #23
   17940:	bhi	17978 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x5c>
   17944:	ldr	r4, [pc, #172]	; 179f8 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xdc>
   17948:	mvn	r3, r4, lsr r3
   1794c:	tst	r3, #1
   17950:	bne	17980 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x64>
   17954:	add	r1, r1, #1
   17958:	cmp	r2, r1
   1795c:	beq	179c8 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xac>
   17960:	ldrb	lr, [ip, #1]!
   17964:	sub	r3, lr, #9
   17968:	uxtb	r3, r3
   1796c:	cmp	r3, #23
   17970:	mvn	r3, r4, lsr r3
   17974:	bls	179d4 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xb8>
   17978:	cmp	lr, #62	; 0x3e
   1797c:	beq	179e0 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xc4>
   17980:	mov	r3, #0
   17984:	mov	r7, r0
   17988:	mov	r4, r2
   1798c:	add	r6, sp, #12
   17990:	add	r5, sp, #11
   17994:	strb	r3, [sp, #11]
   17998:	b	179a4 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x88>
   1799c:	cmp	r4, r0
   179a0:	bls	179c8 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xac>
   179a4:	mov	r3, r6
   179a8:	str	r5, [sp]
   179ac:	mov	r2, r4
   179b0:	mov	r0, r7
   179b4:	bl	10cf4 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   179b8:	ldrb	r3, [sp, #11]
   179bc:	cmp	r3, #0
   179c0:	mov	r1, r0
   179c4:	beq	1799c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x80>
   179c8:	mov	r0, r1
   179cc:	add	sp, sp, #36	; 0x24
   179d0:	pop	{r4, r5, r6, r7, pc}
   179d4:	tst	r3, #1
   179d8:	beq	17954 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x38>
   179dc:	b	17980 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x64>
   179e0:	add	r1, r1, #1
   179e4:	mov	r0, r1
   179e8:	add	sp, sp, #36	; 0x24
   179ec:	pop	{r4, r5, r6, r7, pc}
   179f0:	mov	r0, r1
   179f4:	bx	lr
   179f8:	addeq	r0, r0, fp, lsl r0

000179fc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base>:
   179fc:	push	{r4, r5, lr}
   17a00:	mov	r3, r0
   17a04:	ldrb	r4, [r0, r1]
   17a08:	add	r5, r0, r1
   17a0c:	mov	lr, r2
   17a10:	cmp	r4, #47	; 0x2f
   17a14:	beq	17aac <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xb0>
   17a18:	cmp	r4, #33	; 0x21
   17a1c:	beq	17a70 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x74>
   17a20:	cmp	r4, #63	; 0x3f
   17a24:	beq	17a30 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x34>
   17a28:	pop	{r4, r5, lr}
   17a2c:	b	10088 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>
   17a30:	add	r1, r1, #1
   17a34:	cmp	r2, r1
   17a38:	bls	17a68 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17a3c:	ldrb	r2, [r0, r1]
   17a40:	add	r3, r0, r1
   17a44:	cmp	r2, #62	; 0x3e
   17a48:	beq	17a5c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x60>
   17a4c:	b	17aa0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa4>
   17a50:	ldrb	r2, [r3, #1]!
   17a54:	cmp	r2, #62	; 0x3e
   17a58:	bne	17aa0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa4>
   17a5c:	add	r1, r1, #1
   17a60:	cmp	lr, r1
   17a64:	bhi	17a50 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x54>
   17a68:	mov	r0, r1
   17a6c:	pop	{r4, r5, pc}
   17a70:	add	r2, r1, #3
   17a74:	cmp	lr, r2
   17a78:	add	r1, r1, #1
   17a7c:	bls	17b00 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x104>
   17a80:	ldrb	r2, [r0, r1]
   17a84:	cmp	r2, #45	; 0x2d
   17a88:	bne	17b00 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x104>
   17a8c:	ldrb	r3, [r5, #2]
   17a90:	cmp	r3, #45	; 0x2d
   17a94:	beq	17b38 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x13c>
   17a98:	cmp	lr, r1
   17a9c:	bls	17a68 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17aa0:	add	r1, r1, #1
   17aa4:	mov	r0, r1
   17aa8:	pop	{r4, r5, pc}
   17aac:	add	r1, r1, #1
   17ab0:	cmp	r1, r2
   17ab4:	bcs	17a68 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17ab8:	ldrb	r4, [r0, r1]
   17abc:	ldr	ip, [pc, #184]	; 17b7c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x180>
   17ac0:	add	r3, r0, r1
   17ac4:	add	ip, pc, ip
   17ac8:	add	ip, ip, r4
   17acc:	ldrb	ip, [ip, #-424]	; 0xfffffe58
   17ad0:	cmp	ip, #1
   17ad4:	beq	17a28 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   17ad8:	cmp	r4, #62	; 0x3e
   17adc:	beq	17af0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xf4>
   17ae0:	b	17aa0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa4>
   17ae4:	ldrb	r2, [r3, #1]!
   17ae8:	cmp	r2, #62	; 0x3e
   17aec:	bne	17aa0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa4>
   17af0:	add	r1, r1, #1
   17af4:	cmp	lr, r1
   17af8:	bhi	17ae4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe8>
   17afc:	b	17a68 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17b00:	cmp	lr, r1
   17b04:	bls	17a68 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17b08:	ldrb	r2, [r3, r1]
   17b0c:	add	r3, r3, r1
   17b10:	cmp	r2, #62	; 0x3e
   17b14:	beq	17b28 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x12c>
   17b18:	b	17aa0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa4>
   17b1c:	ldrb	r2, [r3, #1]!
   17b20:	cmp	r2, #62	; 0x3e
   17b24:	bne	17aa0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa4>
   17b28:	add	r1, r1, #1
   17b2c:	cmp	lr, r1
   17b30:	bhi	17b1c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   17b34:	b	17a68 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17b38:	cmp	lr, r1
   17b3c:	bhi	17b54 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x158>
   17b40:	b	17a68 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17b44:	add	r1, r1, #1
   17b48:	cmp	lr, r1
   17b4c:	add	r5, r5, #1
   17b50:	bls	17a68 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17b54:	ldrb	r3, [r5, #1]
   17b58:	cmp	r3, #62	; 0x3e
   17b5c:	beq	17b44 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x148>
   17b60:	ldrb	r3, [r5]
   17b64:	cmp	r3, #45	; 0x2d
   17b68:	bne	17b44 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x148>
   17b6c:	ldrb	r3, [r5, #-1]
   17b70:	cmp	r3, #45	; 0x2d
   17b74:	bne	17b44 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x148>
   17b78:	b	17aa0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa4>
   17b7c:	muleq	r2, r8, lr

00017b80 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>:
   17b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b84:	subs	r8, r2, #0
   17b88:	ldr	r6, [pc, #288]	; 17cb0 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x130>
   17b8c:	mov	r7, r3
   17b90:	sub	sp, sp, #20
   17b94:	movne	r3, #0
   17b98:	ldr	r9, [pc, #276]	; 17cb4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x134>
   17b9c:	strne	r3, [r8]
   17ba0:	mov	r4, r0
   17ba4:	cmp	r7, #0
   17ba8:	mov	r5, r1
   17bac:	mov	r0, #0
   17bb0:	add	r6, pc, r6
   17bb4:	add	fp, sp, #8
   17bb8:	add	sl, sp, #12
   17bbc:	mov	r2, #2
   17bc0:	movne	r3, #0
   17bc4:	str	r2, [sp, #8]
   17bc8:	strne	r3, [r7]
   17bcc:	cmp	r5, r0
   17bd0:	bls	17c28 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xa8>
   17bd4:	ldrb	r3, [r4, r0]
   17bd8:	cmp	r3, #60	; 0x3c
   17bdc:	addne	r0, r0, #1
   17be0:	bne	17bcc <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x4c>
   17be4:	add	r3, r0, #5
   17be8:	cmp	r5, r3
   17bec:	bls	17c28 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xa8>
   17bf0:	add	r0, r0, #1
   17bf4:	str	r0, [sp, #12]
   17bf8:	ldrb	r3, [r4, r0]
   17bfc:	add	r1, r4, r0
   17c00:	cmp	r3, #77	; 0x4d
   17c04:	beq	17c34 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xb4>
   17c08:	cmp	r3, #109	; 0x6d
   17c0c:	beq	17c34 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xb4>
   17c10:	mov	r1, r0
   17c14:	mov	r2, r5
   17c18:	mov	r0, r4
   17c1c:	bl	1034c <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>
   17c20:	cmp	r5, r0
   17c24:	bhi	17bd4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x54>
   17c28:	ldr	r0, [sp, #8]
   17c2c:	add	sp, sp, #20
   17c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c34:	mov	r0, r6
   17c38:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   17c3c:	cmp	r0, #0
   17c40:	beq	17ca8 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x128>
   17c44:	ldr	r2, [sp, #12]
   17c48:	add	r0, r2, #4
   17c4c:	ldrb	r1, [r4, r0]
   17c50:	sub	r3, r1, #9
   17c54:	uxtb	r3, r3
   17c58:	cmp	r3, #23
   17c5c:	mvnls	r3, r9, lsr r3
   17c60:	andls	r3, r3, #1
   17c64:	eorls	r3, r3, #1
   17c68:	movhi	r3, #0
   17c6c:	cmp	r1, #47	; 0x2f
   17c70:	orreq	r3, r3, #1
   17c74:	cmp	r3, #0
   17c78:	beq	17bcc <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x4c>
   17c7c:	add	ip, r2, #5
   17c80:	str	r7, [sp, #4]
   17c84:	str	r8, [sp]
   17c88:	mov	r3, fp
   17c8c:	mov	r2, r5
   17c90:	mov	r1, sl
   17c94:	mov	r0, r4
   17c98:	str	ip, [sp, #12]
   17c9c:	bl	103e8 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>
   17ca0:	cmp	r0, #0
   17ca4:	bne	17c28 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xa8>
   17ca8:	ldr	r0, [sp, #12]
   17cac:	b	17bcc <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x4c>
   17cb0:	andeq	r0, r2, r0, lsr sp
   17cb4:	addeq	r0, r0, fp, lsl r0

00017cb8 <myencoding_prescan_stream_to_determine_encoding@@Base>:
   17cb8:	mov	r3, #0
   17cbc:	mov	r2, r3
   17cc0:	b	10b8c <myencoding_prescan_stream_to_determine_encoding_with_found@plt>

00017cc4 <myencoding_decode_ibm866@@Base>:
   17cc4:	tst	r0, #128	; 0x80
   17cc8:	ldrne	r3, [pc, #20]	; 17ce4 <myencoding_decode_ibm866@@Base+0x20>
   17ccc:	subne	r0, r0, #128	; 0x80
   17cd0:	addne	r3, pc, r3
   17cd4:	ldrne	r0, [r3, r0, lsl #2]
   17cd8:	str	r0, [r1, #12]
   17cdc:	mov	r0, #0
   17ce0:	bx	lr
   17ce4:	andeq	r1, r2, r4, ror r7

00017ce8 <myencoding_decode_iso_8859_2@@Base>:
   17ce8:	tst	r0, #128	; 0x80
   17cec:	ldrne	r3, [pc, #16]	; 17d04 <myencoding_decode_iso_8859_2@@Base+0x1c>
   17cf0:	addne	r3, pc, r3
   17cf4:	ldrne	r0, [r3, r0, lsl #2]
   17cf8:	str	r0, [r1, #12]
   17cfc:	mov	r0, #0
   17d00:	bx	lr
   17d04:	andeq	r1, r2, r4, asr r7

00017d08 <myencoding_decode_iso_8859_3@@Base>:
   17d08:	tst	r0, #128	; 0x80
   17d0c:	ldrne	r3, [pc, #20]	; 17d28 <myencoding_decode_iso_8859_3@@Base+0x20>
   17d10:	addne	r3, pc, r3
   17d14:	addne	r0, r3, r0, lsl #2
   17d18:	ldrne	r0, [r0, #512]	; 0x200
   17d1c:	str	r0, [r1, #12]
   17d20:	mov	r0, #0
   17d24:	bx	lr
   17d28:	andeq	r1, r2, r4, lsr r7

00017d2c <myencoding_decode_iso_8859_4@@Base>:
   17d2c:	tst	r0, #128	; 0x80
   17d30:	ldrne	r3, [pc, #20]	; 17d4c <myencoding_decode_iso_8859_4@@Base+0x20>
   17d34:	addne	r3, pc, r3
   17d38:	addne	r0, r3, r0, lsl #2
   17d3c:	ldrne	r0, [r0, #1024]	; 0x400
   17d40:	str	r0, [r1, #12]
   17d44:	mov	r0, #0
   17d48:	bx	lr
   17d4c:	andeq	r1, r2, r0, lsl r7

00017d50 <myencoding_decode_iso_8859_5@@Base>:
   17d50:	tst	r0, #128	; 0x80
   17d54:	ldrne	r3, [pc, #20]	; 17d70 <myencoding_decode_iso_8859_5@@Base+0x20>
   17d58:	addne	r3, pc, r3
   17d5c:	addne	r0, r3, r0, lsl #2
   17d60:	ldrne	r0, [r0, #1536]	; 0x600
   17d64:	str	r0, [r1, #12]
   17d68:	mov	r0, #0
   17d6c:	bx	lr
   17d70:	andeq	r1, r2, ip, ror #13

00017d74 <myencoding_decode_iso_8859_6@@Base>:
   17d74:	tst	r0, #128	; 0x80
   17d78:	ldrne	r3, [pc, #20]	; 17d94 <myencoding_decode_iso_8859_6@@Base+0x20>
   17d7c:	addne	r3, pc, r3
   17d80:	addne	r0, r3, r0, lsl #2
   17d84:	ldrne	r0, [r0, #2048]	; 0x800
   17d88:	str	r0, [r1, #12]
   17d8c:	mov	r0, #0
   17d90:	bx	lr
   17d94:	andeq	r1, r2, r8, asr #13

00017d98 <myencoding_decode_iso_8859_7@@Base>:
   17d98:	tst	r0, #128	; 0x80
   17d9c:	ldrne	r3, [pc, #20]	; 17db8 <myencoding_decode_iso_8859_7@@Base+0x20>
   17da0:	addne	r3, pc, r3
   17da4:	addne	r0, r3, r0, lsl #2
   17da8:	ldrne	r0, [r0, #2560]	; 0xa00
   17dac:	str	r0, [r1, #12]
   17db0:	mov	r0, #0
   17db4:	bx	lr
   17db8:	andeq	r1, r2, r4, lsr #13

00017dbc <myencoding_decode_iso_8859_8_i@@Base>:
   17dbc:	tst	r0, #128	; 0x80
   17dc0:	ldrne	r3, [pc, #20]	; 17ddc <myencoding_decode_iso_8859_8_i@@Base+0x20>
   17dc4:	addne	r3, pc, r3
   17dc8:	addne	r0, r3, r0, lsl #2
   17dcc:	ldrne	r0, [r0, #3072]	; 0xc00
   17dd0:	str	r0, [r1, #12]
   17dd4:	mov	r0, #0
   17dd8:	bx	lr
   17ddc:	andeq	r1, r2, r0, lsl #13

00017de0 <myencoding_decode_iso_8859_10@@Base>:
   17de0:	tst	r0, #128	; 0x80
   17de4:	beq	17dfc <myencoding_decode_iso_8859_10@@Base+0x1c>
   17de8:	ldr	r3, [pc, #24]	; 17e08 <myencoding_decode_iso_8859_10@@Base+0x28>
   17dec:	sub	r0, r0, #128	; 0x80
   17df0:	add	r3, pc, r3
   17df4:	add	r0, r3, r0, lsl #2
   17df8:	ldr	r0, [r0, #-4088]	; 0xfffff008
   17dfc:	str	r0, [r1, #12]
   17e00:	mov	r0, #0
   17e04:	bx	lr
   17e08:	andeq	r3, r2, ip, asr #12

00017e0c <myencoding_decode_iso_8859_13@@Base>:
   17e0c:	tst	r0, #128	; 0x80
   17e10:	ldrne	r3, [pc, #20]	; 17e2c <myencoding_decode_iso_8859_13@@Base+0x20>
   17e14:	addne	r3, pc, r3
   17e18:	addne	r0, r3, r0, lsl #2
   17e1c:	ldrne	r0, [r0, #-4088]	; 0xfffff008
   17e20:	str	r0, [r1, #12]
   17e24:	mov	r0, #0
   17e28:	bx	lr
   17e2c:	andeq	r3, r2, r8, lsr #12

00017e30 <myencoding_decode_iso_8859_14@@Base>:
   17e30:	tst	r0, #128	; 0x80
   17e34:	ldrne	r3, [pc, #20]	; 17e50 <myencoding_decode_iso_8859_14@@Base+0x20>
   17e38:	addne	r3, pc, r3
   17e3c:	addne	r0, r3, r0, lsl #2
   17e40:	ldrne	r0, [r0, #-3576]	; 0xfffff208
   17e44:	str	r0, [r1, #12]
   17e48:	mov	r0, #0
   17e4c:	bx	lr
   17e50:	andeq	r3, r2, r4, lsl #12

00017e54 <myencoding_decode_iso_8859_15@@Base>:
   17e54:	tst	r0, #128	; 0x80
   17e58:	ldrne	r3, [pc, #20]	; 17e74 <myencoding_decode_iso_8859_15@@Base+0x20>
   17e5c:	addne	r3, pc, r3
   17e60:	addne	r0, r3, r0, lsl #2
   17e64:	ldrne	r0, [r0, #-3064]	; 0xfffff408
   17e68:	str	r0, [r1, #12]
   17e6c:	mov	r0, #0
   17e70:	bx	lr
   17e74:	andeq	r3, r2, r0, ror #11

00017e78 <myencoding_decode_iso_8859_16@@Base>:
   17e78:	tst	r0, #128	; 0x80
   17e7c:	ldrne	r3, [pc, #20]	; 17e98 <myencoding_decode_iso_8859_16@@Base+0x20>
   17e80:	addne	r3, pc, r3
   17e84:	addne	r0, r3, r0, lsl #2
   17e88:	ldrne	r0, [r0, #-2552]	; 0xfffff608
   17e8c:	str	r0, [r1, #12]
   17e90:	mov	r0, #0
   17e94:	bx	lr
   17e98:			; <UNDEFINED> instruction: 0x000235bc

00017e9c <myencoding_decode_koi8_r@@Base>:
   17e9c:	tst	r0, #128	; 0x80
   17ea0:	ldrne	r3, [pc, #20]	; 17ebc <myencoding_decode_koi8_r@@Base+0x20>
   17ea4:	addne	r3, pc, r3
   17ea8:	addne	r0, r3, r0, lsl #2
   17eac:	ldrne	r0, [r0, #-2040]	; 0xfffff808
   17eb0:	str	r0, [r1, #12]
   17eb4:	mov	r0, #0
   17eb8:	bx	lr
   17ebc:	muleq	r2, r8, r5

00017ec0 <myencoding_decode_koi8_u@@Base>:
   17ec0:	tst	r0, #128	; 0x80
   17ec4:	ldrne	r3, [pc, #20]	; 17ee0 <myencoding_decode_koi8_u@@Base+0x20>
   17ec8:	addne	r3, pc, r3
   17ecc:	addne	r0, r3, r0, lsl #2
   17ed0:	ldrne	r0, [r0, #-1528]	; 0xfffffa08
   17ed4:	str	r0, [r1, #12]
   17ed8:	mov	r0, #0
   17edc:	bx	lr
   17ee0:	andeq	r3, r2, r4, ror r5

00017ee4 <myencoding_decode_macintosh@@Base>:
   17ee4:	tst	r0, #128	; 0x80
   17ee8:	ldrne	r3, [pc, #20]	; 17f04 <myencoding_decode_macintosh@@Base+0x20>
   17eec:	addne	r3, pc, r3
   17ef0:	addne	r0, r3, r0, lsl #2
   17ef4:	ldrne	r0, [r0, #-1016]	; 0xfffffc08
   17ef8:	str	r0, [r1, #12]
   17efc:	mov	r0, #0
   17f00:	bx	lr
   17f04:	andeq	r3, r2, r0, asr r5

00017f08 <myencoding_decode_windows_874@@Base>:
   17f08:	tst	r0, #128	; 0x80
   17f0c:	ldrne	r3, [pc, #20]	; 17f28 <myencoding_decode_windows_874@@Base+0x20>
   17f10:	addne	r3, pc, r3
   17f14:	addne	r0, r3, r0, lsl #2
   17f18:	ldrne	r0, [r0, #-504]	; 0xfffffe08
   17f1c:	str	r0, [r1, #12]
   17f20:	mov	r0, #0
   17f24:	bx	lr
   17f28:	andeq	r3, r2, ip, lsr #10

00017f2c <myencoding_decode_windows_1250@@Base>:
   17f2c:	tst	r0, #128	; 0x80
   17f30:	ldrne	r3, [pc, #20]	; 17f4c <myencoding_decode_windows_1250@@Base+0x20>
   17f34:	addne	r3, pc, r3
   17f38:	addne	r0, r3, r0, lsl #2
   17f3c:	ldrne	r0, [r0, #8]
   17f40:	str	r0, [r1, #12]
   17f44:	mov	r0, #0
   17f48:	bx	lr
   17f4c:	andeq	r3, r2, r8, lsl #10

00017f50 <myencoding_decode_windows_1251@@Base>:
   17f50:	tst	r0, #128	; 0x80
   17f54:	ldrne	r3, [pc, #20]	; 17f70 <myencoding_decode_windows_1251@@Base+0x20>
   17f58:	addne	r3, pc, r3
   17f5c:	addne	r0, r3, r0, lsl #2
   17f60:	ldrne	r0, [r0, #520]	; 0x208
   17f64:	str	r0, [r1, #12]
   17f68:	mov	r0, #0
   17f6c:	bx	lr
   17f70:	andeq	r3, r2, r4, ror #9

00017f74 <myencoding_decode_windows_1252@@Base>:
   17f74:	tst	r0, #128	; 0x80
   17f78:	ldrne	r3, [pc, #20]	; 17f94 <myencoding_decode_windows_1252@@Base+0x20>
   17f7c:	addne	r3, pc, r3
   17f80:	addne	r0, r3, r0, lsl #2
   17f84:	ldrne	r0, [r0, #1032]	; 0x408
   17f88:	str	r0, [r1, #12]
   17f8c:	mov	r0, #0
   17f90:	bx	lr
   17f94:	andeq	r3, r2, r0, asr #9

00017f98 <myencoding_decode_windows_1253@@Base>:
   17f98:	tst	r0, #128	; 0x80
   17f9c:	ldrne	r3, [pc, #20]	; 17fb8 <myencoding_decode_windows_1253@@Base+0x20>
   17fa0:	addne	r3, pc, r3
   17fa4:	addne	r0, r3, r0, lsl #2
   17fa8:	ldrne	r0, [r0, #1544]	; 0x608
   17fac:	str	r0, [r1, #12]
   17fb0:	mov	r0, #0
   17fb4:	bx	lr
   17fb8:	muleq	r2, ip, r4

00017fbc <myencoding_decode_windows_1254@@Base>:
   17fbc:	tst	r0, #128	; 0x80
   17fc0:	ldrne	r3, [pc, #20]	; 17fdc <myencoding_decode_windows_1254@@Base+0x20>
   17fc4:	addne	r3, pc, r3
   17fc8:	addne	r0, r3, r0, lsl #2
   17fcc:	ldrne	r0, [r0, #2056]	; 0x808
   17fd0:	str	r0, [r1, #12]
   17fd4:	mov	r0, #0
   17fd8:	bx	lr
   17fdc:	andeq	r3, r2, r8, ror r4

00017fe0 <myencoding_decode_windows_1255@@Base>:
   17fe0:	tst	r0, #128	; 0x80
   17fe4:	ldrne	r3, [pc, #20]	; 18000 <myencoding_decode_windows_1255@@Base+0x20>
   17fe8:	addne	r3, pc, r3
   17fec:	addne	r0, r3, r0, lsl #2
   17ff0:	ldrne	r0, [r0, #2568]	; 0xa08
   17ff4:	str	r0, [r1, #12]
   17ff8:	mov	r0, #0
   17ffc:	bx	lr
   18000:	andeq	r3, r2, r4, asr r4

00018004 <myencoding_decode_windows_1256@@Base>:
   18004:	tst	r0, #128	; 0x80
   18008:	ldrne	r3, [pc, #20]	; 18024 <myencoding_decode_windows_1256@@Base+0x20>
   1800c:	addne	r3, pc, r3
   18010:	addne	r0, r3, r0, lsl #2
   18014:	ldrne	r0, [r0, #3080]	; 0xc08
   18018:	str	r0, [r1, #12]
   1801c:	mov	r0, #0
   18020:	bx	lr
   18024:	andeq	r3, r2, r0, lsr r4

00018028 <myencoding_decode_windows_1257@@Base>:
   18028:	tst	r0, #128	; 0x80
   1802c:	beq	18044 <myencoding_decode_windows_1257@@Base+0x1c>
   18030:	ldr	r3, [pc, #24]	; 18050 <myencoding_decode_windows_1257@@Base+0x28>
   18034:	sub	r0, r0, #128	; 0x80
   18038:	add	r3, pc, r3
   1803c:	add	r0, r3, r0, lsl #2
   18040:	ldr	r0, [r0, #-4080]	; 0xfffff010
   18044:	str	r0, [r1, #12]
   18048:	mov	r0, #0
   1804c:	bx	lr
   18050:	strdeq	r5, [r2], -ip

00018054 <myencoding_decode_windows_1258@@Base>:
   18054:	tst	r0, #128	; 0x80
   18058:	ldrne	r3, [pc, #20]	; 18074 <myencoding_decode_windows_1258@@Base+0x20>
   1805c:	addne	r3, pc, r3
   18060:	addne	r0, r3, r0, lsl #2
   18064:	ldrne	r0, [r0, #-4080]	; 0xfffff010
   18068:	str	r0, [r1, #12]
   1806c:	mov	r0, #0
   18070:	bx	lr
   18074:	ldrdeq	r5, [r2], -r8

00018078 <myencoding_decode_x_mac_cyrillic@@Base>:
   18078:	tst	r0, #128	; 0x80
   1807c:	ldrne	r3, [pc, #20]	; 18098 <myencoding_decode_x_mac_cyrillic@@Base+0x20>
   18080:	addne	r3, pc, r3
   18084:	addne	r0, r3, r0, lsl #2
   18088:	ldrne	r0, [r0, #-3568]	; 0xfffff210
   1808c:	str	r0, [r1, #12]
   18090:	mov	r0, #0
   18094:	bx	lr
   18098:			; <UNDEFINED> instruction: 0x000253b4

0001809c <myencoding_decode_big5@@Base>:
   1809c:	ldr	r3, [r1]
   180a0:	cmp	r3, #0
   180a4:	beq	180e4 <myencoding_decode_big5@@Base+0x48>
   180a8:	add	r2, r0, #95	; 0x5f
   180ac:	cmp	r0, #126	; 0x7e
   180b0:	sub	ip, r0, #64	; 0x40
   180b4:	uxtb	r2, r2
   180b8:	push	{r4, lr}
   180bc:	movls	lr, #64	; 0x40
   180c0:	movhi	lr, #98	; 0x62
   180c4:	mov	r4, #0
   180c8:	cmp	r2, #93	; 0x5d
   180cc:	cmphi	ip, #62	; 0x3e
   180d0:	str	r4, [r1]
   180d4:	bls	180f8 <myencoding_decode_big5@@Base+0x5c>
   180d8:	mov	r3, #1
   180dc:	mov	r0, r3
   180e0:	pop	{r4, pc}
   180e4:	tst	r0, #128	; 0x80
   180e8:	streq	r0, [r1, #12]
   180ec:	bne	181a8 <myencoding_decode_big5@@Base+0x10c>
   180f0:	mov	r0, r3
   180f4:	bx	lr
   180f8:	sub	r0, r0, #20224	; 0x4f00
   180fc:	mov	r2, #157	; 0x9d
   18100:	sub	r0, r0, #29
   18104:	mla	r3, r2, r3, r0
   18108:	sub	lr, r3, lr
   1810c:	sub	r3, lr, #1120	; 0x460
   18110:	sub	r3, r3, #13
   18114:	cmp	r3, #33	; 0x21
   18118:	addls	pc, pc, r3, lsl #2
   1811c:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18120:	b	18220 <myencoding_decode_big5@@Base+0x184>
   18124:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18128:	b	18204 <myencoding_decode_big5@@Base+0x168>
   1812c:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18130:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18134:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18138:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   1813c:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18140:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18144:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18148:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   1814c:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18150:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18154:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18158:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   1815c:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18160:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18164:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18168:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   1816c:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18170:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18174:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18178:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   1817c:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18180:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18184:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18188:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   1818c:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18190:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18194:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   18198:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   1819c:	b	181e8 <myencoding_decode_big5@@Base+0x14c>
   181a0:	b	1823c <myencoding_decode_big5@@Base+0x1a0>
   181a4:	b	181cc <myencoding_decode_big5@@Base+0x130>
   181a8:	add	r3, r0, #127	; 0x7f
   181ac:	uxtb	r3, r3
   181b0:	cmp	r3, #125	; 0x7d
   181b4:	movhi	r3, #1
   181b8:	bhi	180f0 <myencoding_decode_big5@@Base+0x54>
   181bc:	mov	r3, #2
   181c0:	str	r0, [r1]
   181c4:	mov	r0, r3
   181c8:	bx	lr
   181cc:	mov	r3, #780	; 0x30c
   181d0:	mov	r2, #234	; 0xea
   181d4:	str	r3, [r1, #16]
   181d8:	mov	r3, #0
   181dc:	str	r2, [r1, #12]
   181e0:	mov	r0, r3
   181e4:	pop	{r4, pc}
   181e8:	mov	r3, #772	; 0x304
   181ec:	mov	r2, #234	; 0xea
   181f0:	str	r3, [r1, #16]
   181f4:	mov	r3, #0
   181f8:	str	r2, [r1, #12]
   181fc:	mov	r0, r3
   18200:	pop	{r4, pc}
   18204:	mov	r3, #780	; 0x30c
   18208:	mov	r2, #202	; 0xca
   1820c:	str	r3, [r1, #16]
   18210:	mov	r3, #0
   18214:	str	r2, [r1, #12]
   18218:	mov	r0, r3
   1821c:	pop	{r4, pc}
   18220:	mov	r3, #772	; 0x304
   18224:	mov	r2, #202	; 0xca
   18228:	str	r3, [r1, #16]
   1822c:	mov	r3, #0
   18230:	str	r2, [r1, #12]
   18234:	mov	r0, r3
   18238:	pop	{r4, pc}
   1823c:	cmp	lr, #0
   18240:	beq	180d8 <myencoding_decode_big5@@Base+0x3c>
   18244:	ldr	r2, [pc, #24]	; 18264 <myencoding_decode_big5@@Base+0x1c8>
   18248:	mov	r3, #0
   1824c:	add	r2, pc, r2
   18250:	add	lr, r2, lr, lsl #2
   18254:	str	r3, [r1, #16]
   18258:	ldr	r2, [lr, #-2544]	; 0xfffff610
   1825c:	str	r2, [r1, #12]
   18260:	b	180dc <myencoding_decode_big5@@Base+0x40>
   18264:	andeq	r5, r2, r8, ror #3

00018268 <myencoding_decode_euc_jp@@Base>:
   18268:	ldr	r3, [r1]
   1826c:	cmp	r3, #142	; 0x8e
   18270:	beq	182bc <myencoding_decode_euc_jp@@Base+0x54>
   18274:	cmp	r3, #143	; 0x8f
   18278:	beq	18298 <myencoding_decode_euc_jp@@Base+0x30>
   1827c:	cmp	r3, #0
   18280:	bne	1831c <myencoding_decode_euc_jp@@Base+0xb4>
   18284:	tst	r0, #128	; 0x80
   18288:	bne	182dc <myencoding_decode_euc_jp@@Base+0x74>
   1828c:	str	r0, [r1, #12]
   18290:	mov	r0, #0
   18294:	bx	lr
   18298:	add	r3, r0, #95	; 0x5f
   1829c:	uxtb	r3, r3
   182a0:	cmp	r3, #93	; 0x5d
   182a4:	bhi	182cc <myencoding_decode_euc_jp@@Base+0x64>
   182a8:	mov	r3, #1
   182ac:	str	r0, [r1]
   182b0:	str	r3, [r1, #20]
   182b4:	mov	r0, #2
   182b8:	bx	lr
   182bc:	add	r3, r0, #95	; 0x5f
   182c0:	uxtb	r3, r3
   182c4:	cmp	r3, #62	; 0x3e
   182c8:	bls	18304 <myencoding_decode_euc_jp@@Base+0x9c>
   182cc:	mov	r3, #0
   182d0:	tst	r0, #128	; 0x80
   182d4:	str	r3, [r1]
   182d8:	beq	1828c <myencoding_decode_euc_jp@@Base+0x24>
   182dc:	add	r2, r0, #114	; 0x72
   182e0:	add	r3, r0, #95	; 0x5f
   182e4:	uxtb	r2, r2
   182e8:	uxtb	r3, r3
   182ec:	cmp	r3, #93	; 0x5d
   182f0:	cmphi	r2, #1
   182f4:	strls	r0, [r1]
   182f8:	movls	r0, #2
   182fc:	movhi	r0, #1
   18300:	bx	lr
   18304:	add	r0, r0, #65024	; 0xfe00
   18308:	add	r3, r0, #192	; 0xc0
   1830c:	mov	r0, #0
   18310:	str	r3, [r1, #12]
   18314:	str	r0, [r1]
   18318:	bx	lr
   1831c:	sub	r2, r3, #161	; 0xa1
   18320:	cmp	r2, #93	; 0x5d
   18324:	mov	r2, #0
   18328:	str	r2, [r1]
   1832c:	bhi	18284 <myencoding_decode_euc_jp@@Base+0x1c>
   18330:	add	r2, r0, #95	; 0x5f
   18334:	uxtb	r2, r2
   18338:	cmp	r2, #93	; 0x5d
   1833c:	bhi	18284 <myencoding_decode_euc_jp@@Base+0x1c>
   18340:	ldr	ip, [r1, #20]
   18344:	sub	r0, r0, #15232	; 0x3b80
   18348:	mov	r2, #94	; 0x5e
   1834c:	sub	r0, r0, #63	; 0x3f
   18350:	cmp	ip, #0
   18354:	mla	r3, r2, r3, r0
   18358:	bne	18384 <myencoding_decode_euc_jp@@Base+0x11c>
   1835c:	ldr	r2, [pc, #52]	; 18398 <myencoding_decode_euc_jp@@Base+0x130>
   18360:	add	r2, pc, r2
   18364:	add	r3, r2, r3, lsl #2
   18368:	ldr	r0, [r3, #-2648]	; 0xfffff5a8
   1836c:	mov	r3, #0
   18370:	str	r0, [r1, #12]
   18374:	str	r3, [r1, #20]
   18378:	clz	r0, r0
   1837c:	lsr	r0, r0, #5
   18380:	bx	lr
   18384:	ldr	r2, [pc, #16]	; 1839c <myencoding_decode_euc_jp@@Base+0x134>
   18388:	add	r2, pc, r2
   1838c:	add	r3, r2, r3, lsl #2
   18390:	ldr	r0, [r3, #2928]	; 0xb70
   18394:	b	1836c <myencoding_decode_euc_jp@@Base+0x104>
   18398:	andeq	r1, r4, r4, rrx
   1839c:	andeq	r7, r3, r4, rrx

000183a0 <myencoding_decode_iso_2022_jp@@Base>:
   183a0:	ldr	r3, [r1, #4]
   183a4:	cmp	r3, #7
   183a8:	addls	pc, pc, r3, lsl #2
   183ac:	b	185a0 <myencoding_decode_iso_2022_jp@@Base+0x200>
   183b0:	b	18464 <myencoding_decode_iso_2022_jp@@Base+0xc4>
   183b4:	b	1849c <myencoding_decode_iso_2022_jp@@Base+0xfc>
   183b8:	b	185a0 <myencoding_decode_iso_2022_jp@@Base+0x200>
   183bc:	b	184c8 <myencoding_decode_iso_2022_jp@@Base+0x128>
   183c0:	b	184f4 <myencoding_decode_iso_2022_jp@@Base+0x154>
   183c4:	b	18524 <myencoding_decode_iso_2022_jp@@Base+0x184>
   183c8:	b	18574 <myencoding_decode_iso_2022_jp@@Base+0x1d4>
   183cc:	b	183d0 <myencoding_decode_iso_2022_jp@@Base+0x30>
   183d0:	ldr	r3, [r1]
   183d4:	mov	r2, #0
   183d8:	cmp	r0, #66	; 0x42
   183dc:	cmpeq	r3, #40	; 0x28
   183e0:	sub	ip, r3, #40	; 0x28
   183e4:	str	r2, [r1]
   183e8:	clz	ip, ip
   183ec:	str	r2, [r1, #4]
   183f0:	lsr	ip, ip, #5
   183f4:	beq	1844c <myencoding_decode_iso_2022_jp@@Base+0xac>
   183f8:	cmp	r0, #74	; 0x4a
   183fc:	movne	r2, #0
   18400:	andeq	r2, ip, #1
   18404:	cmp	r2, #0
   18408:	movne	r3, #1
   1840c:	strne	r3, [r1, #4]
   18410:	bne	185a8 <myencoding_decode_iso_2022_jp@@Base+0x208>
   18414:	cmp	r0, #73	; 0x49
   18418:	movne	ip, #0
   1841c:	andeq	ip, ip, #1
   18420:	cmp	ip, #0
   18424:	movne	r3, #2
   18428:	strne	r3, [r1, #4]
   1842c:	bne	185a8 <myencoding_decode_iso_2022_jp@@Base+0x208>
   18430:	cmp	r3, #36	; 0x24
   18434:	bne	1844c <myencoding_decode_iso_2022_jp@@Base+0xac>
   18438:	and	r0, r0, #253	; 0xfd
   1843c:	cmp	r0, #64	; 0x40
   18440:	moveq	r3, #4
   18444:	streq	r3, [r1, #4]
   18448:	beq	185a8 <myencoding_decode_iso_2022_jp@@Base+0x208>
   1844c:	ldr	r2, [r1, #8]
   18450:	mov	r3, #0
   18454:	mov	r0, #1
   18458:	str	r2, [r1, #4]
   1845c:	str	r3, [r1, #20]
   18460:	bx	lr
   18464:	cmp	r0, #27
   18468:	beq	185c8 <myencoding_decode_iso_2022_jp@@Base+0x228>
   1846c:	eor	r2, r0, #128	; 0x80
   18470:	sub	r3, r0, #14
   18474:	lsr	r2, r2, #7
   18478:	cmp	r3, #1
   1847c:	movls	r3, #0
   18480:	andhi	r3, r2, #1
   18484:	cmp	r3, #0
   18488:	bne	185f8 <myencoding_decode_iso_2022_jp@@Base+0x258>
   1848c:	mov	r3, #0
   18490:	str	r3, [r1, #20]
   18494:	mov	r0, #1
   18498:	bx	lr
   1849c:	cmp	r0, #27
   184a0:	beq	185c8 <myencoding_decode_iso_2022_jp@@Base+0x228>
   184a4:	cmp	r0, #92	; 0x5c
   184a8:	beq	1860c <myencoding_decode_iso_2022_jp@@Base+0x26c>
   184ac:	cmp	r0, #126	; 0x7e
   184b0:	bne	1846c <myencoding_decode_iso_2022_jp@@Base+0xcc>
   184b4:	ldr	r3, [pc, #356]	; 18620 <myencoding_decode_iso_2022_jp@@Base+0x280>
   184b8:	mov	r0, #0
   184bc:	str	r3, [r1, #12]
   184c0:	str	r0, [r1, #20]
   184c4:	bx	lr
   184c8:	cmp	r0, #27
   184cc:	beq	185c8 <myencoding_decode_iso_2022_jp@@Base+0x228>
   184d0:	sub	r3, r0, #33	; 0x21
   184d4:	cmp	r3, #62	; 0x3e
   184d8:	bhi	1848c <myencoding_decode_iso_2022_jp@@Base+0xec>
   184dc:	add	r0, r0, #65280	; 0xff00
   184e0:	add	r3, r0, #64	; 0x40
   184e4:	mov	r0, #0
   184e8:	str	r3, [r1, #12]
   184ec:	str	r0, [r1, #20]
   184f0:	bx	lr
   184f4:	cmp	r0, #27
   184f8:	beq	185c8 <myencoding_decode_iso_2022_jp@@Base+0x228>
   184fc:	sub	r3, r0, #33	; 0x21
   18500:	cmp	r3, #93	; 0x5d
   18504:	bhi	1848c <myencoding_decode_iso_2022_jp@@Base+0xec>
   18508:	mov	r2, #0
   1850c:	mov	r3, #5
   18510:	str	r0, [r1]
   18514:	str	r2, [r1, #20]
   18518:	str	r3, [r1, #4]
   1851c:	mov	r0, #2
   18520:	bx	lr
   18524:	cmp	r0, #27
   18528:	beq	185d8 <myencoding_decode_iso_2022_jp@@Base+0x238>
   1852c:	sub	r3, r0, #33	; 0x21
   18530:	cmp	r3, #93	; 0x5d
   18534:	bhi	185e8 <myencoding_decode_iso_2022_jp@@Base+0x248>
   18538:	ldr	r3, [r1]
   1853c:	sub	r2, r0, #3120	; 0xc30
   18540:	mov	r0, #94	; 0x5e
   18544:	sub	r2, r2, #15
   18548:	mla	r2, r0, r3, r2
   1854c:	ldr	r3, [pc, #208]	; 18624 <myencoding_decode_iso_2022_jp@@Base+0x284>
   18550:	mov	r0, #4
   18554:	add	r3, pc, r3
   18558:	add	r3, r3, r2, lsl #2
   1855c:	str	r0, [r1, #4]
   18560:	ldr	r3, [r3, #-2648]	; 0xfffff5a8
   18564:	clz	r0, r3
   18568:	str	r3, [r1, #12]
   1856c:	lsr	r0, r0, #5
   18570:	bx	lr
   18574:	sub	r3, r0, #36	; 0x24
   18578:	tst	r3, #251	; 0xfb
   1857c:	moveq	r3, #7
   18580:	ldrne	r2, [r1, #8]
   18584:	movne	r3, #0
   18588:	stmeq	r1, {r0, r3}
   1858c:	strne	r2, [r1, #4]
   18590:	moveq	r0, #2
   18594:	strne	r3, [r1, #20]
   18598:	movne	r0, #1
   1859c:	bx	lr
   185a0:	mov	r0, #0
   185a4:	bx	lr
   185a8:	ldr	r0, [r1, #20]
   185ac:	mov	r2, #1
   185b0:	cmp	r0, #0
   185b4:	str	r3, [r1, #8]
   185b8:	moveq	r0, #2
   185bc:	movne	r0, r2
   185c0:	str	r2, [r1, #20]
   185c4:	bx	lr
   185c8:	mov	r3, #6
   185cc:	str	r3, [r1, #4]
   185d0:	mov	r0, #2
   185d4:	bx	lr
   185d8:	mov	r3, #6
   185dc:	str	r3, [r1, #4]
   185e0:	mov	r0, #3
   185e4:	bx	lr
   185e8:	mov	r3, #4
   185ec:	str	r3, [r1, #4]
   185f0:	mov	r0, #1
   185f4:	bx	lr
   185f8:	mov	r3, #0
   185fc:	str	r0, [r1, #12]
   18600:	str	r3, [r1, #20]
   18604:	mov	r0, r3
   18608:	bx	lr
   1860c:	mov	r0, #0
   18610:	mov	r3, #165	; 0xa5
   18614:	str	r0, [r1, #20]
   18618:	str	r3, [r1, #12]
   1861c:	bx	lr
   18620:	andeq	r2, r0, lr, lsr r0
   18624:	andeq	r0, r4, r0, ror lr

00018628 <myencoding_decode_x_user_defined@@Base>:
   18628:	tst	r0, #128	; 0x80
   1862c:	addne	r0, r0, #63232	; 0xf700
   18630:	str	r0, [r1, #12]
   18634:	mov	r0, #0
   18638:	bx	lr

0001863c <myencoding_decode_utf_8@@Base>:
   1863c:	ldr	r3, [r1, #20]
   18640:	cmp	r3, #0
   18644:	bne	1865c <myencoding_decode_utf_8@@Base+0x20>
   18648:	tst	r0, #128	; 0x80
   1864c:	bne	186e0 <myencoding_decode_utf_8@@Base+0xa4>
   18650:	str	r0, [r1, #12]
   18654:	mov	r0, r3
   18658:	bx	lr
   1865c:	ldr	r2, [r1]
   18660:	cmp	r0, r2
   18664:	bcc	186b4 <myencoding_decode_utf_8@@Base+0x78>
   18668:	ldr	ip, [r1, #8]
   1866c:	push	{r4, lr}
   18670:	add	ip, ip, #1
   18674:	sub	r2, r3, ip
   18678:	ldr	lr, [r1, #12]
   1867c:	add	r2, r2, r2, lsl #1
   18680:	sub	r0, r0, #128	; 0x80
   18684:	lsl	r2, r2, #1
   18688:	cmp	r3, ip
   1868c:	add	r0, lr, r0, lsl r2
   18690:	mov	r4, #128	; 0x80
   18694:	mov	r3, #191	; 0xbf
   18698:	str	ip, [r1, #8]
   1869c:	str	r0, [r1, #12]
   186a0:	str	r4, [r1]
   186a4:	str	r3, [r1, #4]
   186a8:	beq	18750 <myencoding_decode_utf_8@@Base+0x114>
   186ac:	mov	r0, #2
   186b0:	pop	{r4, pc}
   186b4:	ldr	r2, [r1, #4]
   186b8:	cmp	r0, r2
   186bc:	bls	18668 <myencoding_decode_utf_8@@Base+0x2c>
   186c0:	mov	r3, #0
   186c4:	mov	r0, #128	; 0x80
   186c8:	mov	r2, #191	; 0xbf
   186cc:	str	r3, [r1, #12]
   186d0:	stm	r1, {r0, r2, r3}
   186d4:	mov	r0, #5
   186d8:	str	r3, [r1, #20]
   186dc:	bx	lr
   186e0:	add	r3, r0, #62	; 0x3e
   186e4:	uxtb	r3, r3
   186e8:	cmp	r3, #29
   186ec:	bhi	18710 <myencoding_decode_utf_8@@Base+0xd4>
   186f0:	mov	r3, #1
   186f4:	str	r3, [r1, #20]
   186f8:	sub	r0, r0, #192	; 0xc0
   186fc:	mov	r3, #6
   18700:	lsl	r3, r0, r3
   18704:	mov	r0, #2
   18708:	str	r3, [r1, #12]
   1870c:	bx	lr
   18710:	add	r3, r0, #32
   18714:	uxtb	r3, r3
   18718:	cmp	r3, #15
   1871c:	bhi	18760 <myencoding_decode_utf_8@@Base+0x124>
   18720:	cmp	r0, #224	; 0xe0
   18724:	moveq	r3, #160	; 0xa0
   18728:	streq	r3, [r1]
   1872c:	beq	1873c <myencoding_decode_utf_8@@Base+0x100>
   18730:	cmp	r0, #237	; 0xed
   18734:	moveq	r3, #159	; 0x9f
   18738:	streq	r3, [r1, #4]
   1873c:	mov	r3, #2
   18740:	str	r3, [r1, #20]
   18744:	sub	r0, r0, #224	; 0xe0
   18748:	mov	r3, #12
   1874c:	b	18700 <myencoding_decode_utf_8@@Base+0xc4>
   18750:	mov	r0, #0
   18754:	str	r0, [r1, #20]
   18758:	str	r0, [r1, #8]
   1875c:	pop	{r4, pc}
   18760:	add	r3, r0, #16
   18764:	uxtb	r3, r3
   18768:	cmp	r3, #4
   1876c:	bhi	187a0 <myencoding_decode_utf_8@@Base+0x164>
   18770:	cmp	r0, #240	; 0xf0
   18774:	moveq	r3, #144	; 0x90
   18778:	streq	r3, [r1]
   1877c:	beq	1878c <myencoding_decode_utf_8@@Base+0x150>
   18780:	cmp	r0, #244	; 0xf4
   18784:	moveq	r3, #143	; 0x8f
   18788:	streq	r3, [r1, #4]
   1878c:	mov	r2, #2
   18790:	sub	r0, r0, #240	; 0xf0
   18794:	mov	r3, #12
   18798:	str	r2, [r1, #20]
   1879c:	b	18700 <myencoding_decode_utf_8@@Base+0xc4>
   187a0:	mov	r0, #1
   187a4:	bx	lr

000187a8 <myencoding_decode_shift_jis@@Base>:
   187a8:	ldr	r3, [r1]
   187ac:	cmp	r3, #0
   187b0:	beq	18838 <myencoding_decode_shift_jis@@Base+0x90>
   187b4:	cmp	r0, #126	; 0x7e
   187b8:	sub	r2, r0, #64	; 0x40
   187bc:	push	{r4, lr}
   187c0:	eor	ip, r0, #128	; 0x80
   187c4:	movhi	lr, #65	; 0x41
   187c8:	movls	lr, #64	; 0x40
   187cc:	cmp	r3, #159	; 0x9f
   187d0:	movhi	r4, #193	; 0xc1
   187d4:	movls	r4, #129	; 0x81
   187d8:	cmp	ip, #124	; 0x7c
   187dc:	cmphi	r2, #62	; 0x3e
   187e0:	movhi	r2, #0
   187e4:	movls	r2, #1
   187e8:	strhi	r2, [r1, #12]
   187ec:	movhi	r0, r2
   187f0:	bhi	1882c <myencoding_decode_shift_jis@@Base+0x84>
   187f4:	sub	r3, r3, r4
   187f8:	mov	r2, #188	; 0xbc
   187fc:	sub	r0, r0, lr
   18800:	mlas	r3, r2, r3, r0
   18804:	streq	r3, [r1, #12]
   18808:	moveq	r0, r3
   1880c:	beq	1882c <myencoding_decode_shift_jis@@Base+0x84>
   18810:	ldr	r2, [pc, #148]	; 188ac <myencoding_decode_shift_jis@@Base+0x104>
   18814:	add	r2, pc, r2
   18818:	add	r2, r2, r3, lsl #2
   1881c:	ldr	r0, [r2, #-2648]	; 0xfffff5a8
   18820:	cmp	r0, #0
   18824:	str	r0, [r1, #12]
   18828:	beq	1888c <myencoding_decode_shift_jis@@Base+0xe4>
   1882c:	clz	r0, r0
   18830:	lsr	r0, r0, #5
   18834:	pop	{r4, pc}
   18838:	cmp	r0, #128	; 0x80
   1883c:	bls	18880 <myencoding_decode_shift_jis@@Base+0xd8>
   18840:	add	r2, r0, #95	; 0x5f
   18844:	uxtb	r2, r2
   18848:	cmp	r2, #62	; 0x3e
   1884c:	bls	18878 <myencoding_decode_shift_jis@@Base+0xd0>
   18850:	add	r2, r0, #127	; 0x7f
   18854:	add	r3, r0, #32
   18858:	uxtb	r2, r2
   1885c:	uxtb	r3, r3
   18860:	cmp	r3, #28
   18864:	cmphi	r2, #30
   18868:	strls	r0, [r1]
   1886c:	movls	r0, #2
   18870:	movhi	r0, #1
   18874:	bx	lr
   18878:	add	r0, r0, #65024	; 0xfe00
   1887c:	add	r0, r0, #192	; 0xc0
   18880:	str	r0, [r1, #12]
   18884:	mov	r0, r3
   18888:	bx	lr
   1888c:	sub	r2, r3, #8832	; 0x2280
   18890:	ldr	ip, [pc, #24]	; 188b0 <myencoding_decode_shift_jis@@Base+0x108>
   18894:	sub	r2, r2, #4
   18898:	cmp	r2, ip
   1889c:	addls	r3, r3, #48384	; 0xbd00
   188a0:	addls	r0, r3, #124	; 0x7c
   188a4:	strls	r0, [r1, #12]
   188a8:	b	1882c <myencoding_decode_shift_jis@@Base+0x84>
   188ac:			; <UNDEFINED> instruction: 0x00040bb0
   188b0:	muleq	r0, ip, r6

000188b4 <myencoding_decode_euc_kr@@Base>:
   188b4:	ldr	r3, [r1]
   188b8:	cmp	r3, #0
   188bc:	beq	18904 <myencoding_decode_euc_kr@@Base+0x50>
   188c0:	sub	r2, r0, #65	; 0x41
   188c4:	mov	ip, #0
   188c8:	uxtb	r2, r2
   188cc:	cmp	r2, #189	; 0xbd
   188d0:	str	ip, [r1]
   188d4:	bhi	18918 <myencoding_decode_euc_kr@@Base+0x64>
   188d8:	sub	r0, r0, #24320	; 0x5f00
   188dc:	mov	r2, #190	; 0xbe
   188e0:	sub	r0, r0, #255	; 0xff
   188e4:	mlas	r0, r2, r3, r0
   188e8:	beq	18918 <myencoding_decode_euc_kr@@Base+0x64>
   188ec:	ldr	r3, [pc, #80]	; 18944 <myencoding_decode_euc_kr@@Base+0x90>
   188f0:	add	r3, pc, r3
   188f4:	add	r0, r3, r0, lsl #2
   188f8:	ldr	r0, [r0, #1552]	; 0x610
   188fc:	str	r0, [r1, #12]
   18900:	b	1891c <myencoding_decode_euc_kr@@Base+0x68>
   18904:	tst	r0, #128	; 0x80
   18908:	bne	18928 <myencoding_decode_euc_kr@@Base+0x74>
   1890c:	str	r0, [r1, #12]
   18910:	mov	r0, r3
   18914:	bx	lr
   18918:	ldr	r0, [r1, #12]
   1891c:	clz	r0, r0
   18920:	lsr	r0, r0, #5
   18924:	bx	lr
   18928:	add	r3, r0, #127	; 0x7f
   1892c:	uxtb	r3, r3
   18930:	cmp	r3, #125	; 0x7d
   18934:	strls	r0, [r1]
   18938:	movls	r0, #2
   1893c:	movhi	r0, #1
   18940:	bx	lr
   18944:	andeq	sl, r4, ip, lsr #21

00018948 <myencoding_decode_iso_8859_8@@Base>:
   18948:	tst	r0, #128	; 0x80
   1894c:	ldrne	r3, [pc, #20]	; 18968 <myencoding_decode_iso_8859_8@@Base+0x20>
   18950:	addne	r3, pc, r3
   18954:	addne	r0, r3, r0, lsl #2
   18958:	ldrne	r0, [r0, #3072]	; 0xc00
   1895c:	str	r0, [r1, #12]
   18960:	mov	r0, #0
   18964:	bx	lr
   18968:	strdeq	r0, [r2], -r4

0001896c <myencoding_get_function_by_id@@Base>:
   1896c:	ldr	r3, [pc, #8]	; 1897c <myencoding_get_function_by_id@@Base+0x10>
   18970:	add	r3, pc, r3
   18974:	ldr	r0, [r3, r0, lsl #2]
   18978:	bx	lr
   1897c:	andeq	sp, pc, ip, ror #9

00018980 <myencoding_index_gb18030_ranges_code_point@@Base>:
   18980:	ldr	r3, [pc, #144]	; 18a18 <myencoding_index_gb18030_ranges_code_point@@Base+0x98>
   18984:	sub	r2, r0, #39168	; 0x9900
   18988:	cmp	r0, r3
   1898c:	ldr	r1, [pc, #136]	; 18a1c <myencoding_index_gb18030_ranges_code_point@@Base+0x9c>
   18990:	movls	r3, #0
   18994:	movhi	r3, #1
   18998:	sub	r2, r2, #252	; 0xfc
   1899c:	cmp	r2, r1
   189a0:	orrls	r3, r3, #1
   189a4:	cmp	r3, #0
   189a8:	bne	18a08 <myencoding_index_gb18030_ranges_code_point@@Base+0x88>
   189ac:	ldr	r3, [pc, #108]	; 18a20 <myencoding_index_gb18030_ranges_code_point@@Base+0xa0>
   189b0:	cmp	r0, r3
   189b4:	beq	18a00 <myencoding_index_gb18030_ranges_code_point@@Base+0x80>
   189b8:	push	{lr}		; (str lr, [sp, #-4]!)
   189bc:	mov	r3, #207	; 0xcf
   189c0:	ldr	lr, [pc, #92]	; 18a24 <myencoding_index_gb18030_ranges_code_point@@Base+0xa4>
   189c4:	add	lr, pc, lr
   189c8:	sub	r1, lr, #896	; 0x380
   189cc:	b	189d8 <myencoding_index_gb18030_ranges_code_point@@Base+0x58>
   189d0:	cmp	r3, #0
   189d4:	beq	18a10 <myencoding_index_gb18030_ranges_code_point@@Base+0x90>
   189d8:	sub	r3, r3, #1
   189dc:	ldr	r2, [r1, r3, lsl #3]
   189e0:	lsl	ip, r3, #3
   189e4:	cmp	r0, r2
   189e8:	bcc	189d0 <myencoding_index_gb18030_ranges_code_point@@Base+0x50>
   189ec:	add	ip, lr, ip
   189f0:	ldr	r2, [ip, #-892]	; 0xfffffc84
   189f4:	add	r0, r0, r2
   189f8:	sub	r0, r0, r3
   189fc:	pop	{pc}		; (ldr pc, [sp], #4)
   18a00:	ldr	r0, [pc, #32]	; 18a28 <myencoding_index_gb18030_ranges_code_point@@Base+0xa8>
   18a04:	bx	lr
   18a08:	mov	r0, #0
   18a0c:	bx	lr
   18a10:	mov	r2, r3
   18a14:	b	189f4 <myencoding_index_gb18030_ranges_code_point@@Base+0x74>
   18a18:	andseq	lr, r2, r7, asr #4
   18a1c:	andeq	r4, r2, fp, asr #16
   18a20:	andeq	r1, r0, r1, lsr #26
   18a24:	andeq	r2, r6, r8, ror r9
   18a28:	andeq	lr, r0, r7, asr #15

00018a2c <myencoding_decode_gb18030@@Base>:
   18a2c:	ldr	ip, [r1, #8]
   18a30:	push	{r4, lr}
   18a34:	cmp	ip, #0
   18a38:	mov	r2, r0
   18a3c:	beq	18a70 <myencoding_decode_gb18030@@Base+0x44>
   18a40:	sub	r3, r0, #48	; 0x30
   18a44:	cmp	r3, #9
   18a48:	mov	r4, r1
   18a4c:	bls	18ac4 <myencoding_decode_gb18030@@Base+0x98>
   18a50:	ldr	r0, [r1, #12]
   18a54:	mov	r3, #0
   18a58:	clz	r0, r0
   18a5c:	str	r3, [r4]
   18a60:	lsr	r0, r0, #5
   18a64:	str	r3, [r4, #4]
   18a68:	str	r3, [r4, #8]
   18a6c:	pop	{r4, pc}
   18a70:	ldr	r0, [r1, #4]
   18a74:	cmp	r0, #0
   18a78:	beq	18aa0 <myencoding_decode_gb18030@@Base+0x74>
   18a7c:	add	r3, r2, #127	; 0x7f
   18a80:	uxtb	r3, r3
   18a84:	cmp	r3, #125	; 0x7d
   18a88:	movls	r0, #2
   18a8c:	strls	r2, [r1, #8]
   18a90:	strhi	ip, [r1]
   18a94:	strhi	ip, [r1, #4]
   18a98:	movhi	r0, #1
   18a9c:	pop	{r4, pc}
   18aa0:	ldr	r3, [r1]
   18aa4:	cmp	r3, #0
   18aa8:	beq	18af8 <myencoding_decode_gb18030@@Base+0xcc>
   18aac:	sub	ip, r2, #48	; 0x30
   18ab0:	cmp	ip, #9
   18ab4:	bhi	18b28 <myencoding_decode_gb18030@@Base+0xfc>
   18ab8:	str	r2, [r1, #4]
   18abc:	mov	r0, #2
   18ac0:	pop	{r4, pc}
   18ac4:	ldr	r3, [r1]
   18ac8:	ldr	r1, [r1, #4]
   18acc:	ldr	r0, [pc, #180]	; 18b88 <myencoding_decode_gb18030@@Base+0x15c>
   18ad0:	add	r3, r3, r3, lsl #2
   18ad4:	add	r0, r2, r0
   18ad8:	add	r3, r1, r3, lsl #1
   18adc:	rsb	r3, r3, r3, lsl #6
   18ae0:	add	r3, ip, r3, lsl #1
   18ae4:	add	r3, r3, r3, lsl #2
   18ae8:	add	r0, r0, r3, lsl #1
   18aec:	bl	10f10 <myencoding_index_gb18030_ranges_code_point@plt>
   18af0:	str	r0, [r4, #12]
   18af4:	b	18a54 <myencoding_decode_gb18030@@Base+0x28>
   18af8:	tst	r2, #128	; 0x80
   18afc:	bne	18b0c <myencoding_decode_gb18030@@Base+0xe0>
   18b00:	str	r2, [r1, #12]
   18b04:	mov	r0, r3
   18b08:	pop	{r4, pc}
   18b0c:	cmp	r2, #128	; 0x80
   18b10:	beq	18b78 <myencoding_decode_gb18030@@Base+0x14c>
   18b14:	cmp	r2, #255	; 0xff
   18b18:	beq	18b70 <myencoding_decode_gb18030@@Base+0x144>
   18b1c:	mov	r0, #2
   18b20:	str	r2, [r1]
   18b24:	pop	{r4, pc}
   18b28:	cmp	r2, #126	; 0x7e
   18b2c:	sub	lr, r2, #64	; 0x40
   18b30:	eor	ip, r2, #128	; 0x80
   18b34:	movhi	r4, #65	; 0x41
   18b38:	movls	r4, #64	; 0x40
   18b3c:	cmp	ip, #126	; 0x7e
   18b40:	cmphi	lr, #62	; 0x3e
   18b44:	str	r0, [r1]
   18b48:	bhi	18b70 <myencoding_decode_gb18030@@Base+0x144>
   18b4c:	mov	ip, #190	; 0xbe
   18b50:	sub	r2, r2, r4
   18b54:	mla	r3, ip, r3, r2
   18b58:	ldr	r2, [pc, #44]	; 18b8c <myencoding_decode_gb18030@@Base+0x160>
   18b5c:	sub	r3, r3, #24320	; 0x5f00
   18b60:	add	r2, pc, r2
   18b64:	ldr	r3, [r2, r3, lsl #2]
   18b68:	str	r3, [r1, #12]
   18b6c:	pop	{r4, pc}
   18b70:	mov	r0, #1
   18b74:	pop	{r4, pc}
   18b78:	ldr	r2, [pc, #16]	; 18b90 <myencoding_decode_gb18030@@Base+0x164>
   18b7c:	mov	r0, r3
   18b80:	str	r2, [r1, #12]
   18b84:	pop	{r4, pc}
   18b88:			; <UNDEFINED> instruction: 0xffe6414e
   18b8c:	ldrdeq	r2, [r6], -ip
   18b90:	andeq	r2, r0, ip, lsr #1

00018b94 <myencoding_decode_gbk@@Base>:
   18b94:	b	10bf8 <myencoding_decode_gb18030@plt>

00018b98 <myencoding_decode_shared_utf_16@@Base>:
   18b98:	ldr	r3, [r1]
   18b9c:	cmp	r3, #0
   18ba0:	bne	18bb0 <myencoding_decode_shared_utf_16@@Base+0x18>
   18ba4:	str	r0, [r1]
   18ba8:	mov	r0, #2
   18bac:	bx	lr
   18bb0:	ldr	ip, [r1, #20]
   18bb4:	ldr	r2, [r1, #4]
   18bb8:	cmp	ip, #0
   18bbc:	addne	r3, r0, r3, lsl #8
   18bc0:	addeq	r3, r3, r0, lsl #8
   18bc4:	mov	r0, #0
   18bc8:	cmp	r2, r0
   18bcc:	str	r0, [r1]
   18bd0:	beq	18c18 <myencoding_decode_shared_utf_16@@Base+0x80>
   18bd4:	push	{lr}		; (str lr, [sp, #-4]!)
   18bd8:	sub	lr, r3, #56320	; 0xdc00
   18bdc:	cmp	lr, #1024	; 0x400
   18be0:	str	r0, [r1, #4]
   18be4:	bcc	18c34 <myencoding_decode_shared_utf_16@@Base+0x9c>
   18be8:	lsr	r2, r3, #8
   18bec:	cmp	ip, #0
   18bf0:	uxtbne	r2, r2
   18bf4:	uxtbne	r3, r3
   18bf8:	uxtbeq	r3, r3
   18bfc:	uxtbeq	r2, r2
   18c00:	strne	r2, [r1, #12]
   18c04:	strne	r3, [r1, #16]
   18c08:	streq	r3, [r1, #12]
   18c0c:	streq	r2, [r1, #16]
   18c10:	mov	r0, #5
   18c14:	pop	{pc}		; (ldr pc, [sp], #4)
   18c18:	ldr	r0, [pc, #64]	; 18c60 <myencoding_decode_shared_utf_16@@Base+0xc8>
   18c1c:	sub	ip, r3, #55296	; 0xd800
   18c20:	cmp	ip, r0
   18c24:	bhi	18c48 <myencoding_decode_shared_utf_16@@Base+0xb0>
   18c28:	str	r3, [r1, #4]
   18c2c:	mov	r0, #2
   18c30:	bx	lr
   18c34:	sub	r2, r2, #55296	; 0xd800
   18c38:	add	r3, r3, r2, lsl #10
   18c3c:	add	r3, r3, #9216	; 0x2400
   18c40:	str	r3, [r1, #12]
   18c44:	pop	{pc}		; (ldr pc, [sp], #4)
   18c48:	sub	ip, r3, #56320	; 0xdc00
   18c4c:	cmp	ip, r0
   18c50:	movhi	r0, r2
   18c54:	strhi	r3, [r1, #12]
   18c58:	movls	r0, #1
   18c5c:	bx	lr
   18c60:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

00018c64 <myencoding_decode_utf_16be@@Base>:
   18c64:	ldr	r3, [r1, #20]
   18c68:	cmp	r3, #0
   18c6c:	moveq	r3, #1
   18c70:	streq	r3, [r1, #20]
   18c74:	b	10bd4 <myencoding_decode_shared_utf_16@plt>

00018c78 <myencoding_decode_utf_16le@@Base>:
   18c78:	ldr	r3, [r1, #20]
   18c7c:	cmp	r3, #0
   18c80:	movne	r3, #0
   18c84:	strne	r3, [r1, #20]
   18c88:	b	10bd4 <myencoding_decode_shared_utf_16@plt>

00018c8c <myencoding_result_clean@@Base>:
   18c8c:	mov	r3, #0
   18c90:	str	r3, [r0]
   18c94:	str	r3, [r0, #4]
   18c98:	str	r3, [r0, #8]
   18c9c:	str	r3, [r0, #12]
   18ca0:	str	r3, [r0, #16]
   18ca4:	str	r3, [r0, #20]
   18ca8:	bx	lr

00018cac <myencoding_codepoint_ascii_length@@Base>:
   18cac:	cmp	r0, #127	; 0x7f
   18cb0:	bls	18cd4 <myencoding_codepoint_ascii_length@@Base+0x28>
   18cb4:	cmp	r0, #2048	; 0x800
   18cb8:	bcs	18cc4 <myencoding_codepoint_ascii_length@@Base+0x18>
   18cbc:	mov	r0, #2
   18cc0:	bx	lr
   18cc4:	cmp	r0, #65536	; 0x10000
   18cc8:	bcs	18cdc <myencoding_codepoint_ascii_length@@Base+0x30>
   18ccc:	mov	r0, #3
   18cd0:	bx	lr
   18cd4:	mov	r0, #1
   18cd8:	bx	lr
   18cdc:	cmp	r0, #2097152	; 0x200000
   18ce0:	bcs	18cec <myencoding_codepoint_ascii_length@@Base+0x40>
   18ce4:	mov	r0, #4
   18ce8:	bx	lr
   18cec:	cmn	r0, #-67108863	; 0xfc000001
   18cf0:	bhi	18cfc <myencoding_codepoint_ascii_length@@Base+0x50>
   18cf4:	mov	r0, #5
   18cf8:	bx	lr
   18cfc:	cmp	r0, #0
   18d00:	movge	r0, #6
   18d04:	movlt	r0, #0
   18d08:	bx	lr

00018d0c <myencoding_ascii_utf_8_length@@Base>:
   18d0c:	tst	r0, #128	; 0x80
   18d10:	bne	18d1c <myencoding_ascii_utf_8_length@@Base+0x10>
   18d14:	mov	r0, #1
   18d18:	bx	lr
   18d1c:	and	r3, r0, #224	; 0xe0
   18d20:	cmp	r3, #192	; 0xc0
   18d24:	beq	18d64 <myencoding_ascii_utf_8_length@@Base+0x58>
   18d28:	and	r3, r0, #240	; 0xf0
   18d2c:	cmp	r3, #224	; 0xe0
   18d30:	beq	18d5c <myencoding_ascii_utf_8_length@@Base+0x50>
   18d34:	and	r3, r0, #248	; 0xf8
   18d38:	cmp	r3, #240	; 0xf0
   18d3c:	beq	18d6c <myencoding_ascii_utf_8_length@@Base+0x60>
   18d40:	and	r3, r0, #252	; 0xfc
   18d44:	cmp	r3, #248	; 0xf8
   18d48:	beq	18d74 <myencoding_ascii_utf_8_length@@Base+0x68>
   18d4c:	cmp	r0, #252	; 0xfc
   18d50:	moveq	r0, #6
   18d54:	movne	r0, #0
   18d58:	bx	lr
   18d5c:	mov	r0, #3
   18d60:	bx	lr
   18d64:	mov	r0, #2
   18d68:	bx	lr
   18d6c:	mov	r0, #4
   18d70:	bx	lr
   18d74:	mov	r0, #5
   18d78:	bx	lr

00018d7c <myencoding_codepoint_to_ascii_utf_8@@Base>:
   18d7c:	cmp	r0, #127	; 0x7f
   18d80:	bls	18dec <myencoding_codepoint_to_ascii_utf_8@@Base+0x70>
   18d84:	cmp	r0, #2048	; 0x800
   18d88:	bcs	18db0 <myencoding_codepoint_to_ascii_utf_8@@Base+0x34>
   18d8c:	and	r3, r0, #63	; 0x3f
   18d90:	mvn	r2, #63	; 0x3f
   18d94:	mvn	r3, r3, lsl #25
   18d98:	orr	r0, r2, r0, lsr #6
   18d9c:	mvn	r3, r3, lsr #25
   18da0:	strb	r0, [r1]
   18da4:	strb	r3, [r1, #1]
   18da8:	mov	r0, #2
   18dac:	bx	lr
   18db0:	cmp	r0, #65536	; 0x10000
   18db4:	push	{r4, lr}
   18db8:	bcs	18df8 <myencoding_codepoint_to_ascii_utf_8@@Base+0x7c>
   18dbc:	lsl	ip, r0, #20
   18dc0:	mvn	lr, #127	; 0x7f
   18dc4:	and	r2, r0, #63	; 0x3f
   18dc8:	mvn	r3, #31
   18dcc:	orr	r0, r3, r0, lsr #12
   18dd0:	orr	ip, lr, ip, lsr #26
   18dd4:	orr	r2, r2, lr
   18dd8:	strb	r0, [r1]
   18ddc:	strb	ip, [r1, #1]
   18de0:	strb	r2, [r1, #2]
   18de4:	mov	r0, #3
   18de8:	pop	{r4, pc}
   18dec:	strb	r0, [r1]
   18df0:	mov	r0, #1
   18df4:	bx	lr
   18df8:	cmp	r0, #2097152	; 0x200000
   18dfc:	bcs	18e3c <myencoding_codepoint_to_ascii_utf_8@@Base+0xc0>
   18e00:	lsl	lr, r0, #14
   18e04:	lsl	ip, r0, #20
   18e08:	mvn	r4, #127	; 0x7f
   18e0c:	and	r2, r0, #63	; 0x3f
   18e10:	mvn	r3, #15
   18e14:	orr	r0, r3, r0, lsr #18
   18e18:	orr	lr, r4, lr, lsr #26
   18e1c:	orr	ip, r4, ip, lsr #26
   18e20:	orr	r2, r2, r4
   18e24:	strb	r0, [r1]
   18e28:	strb	lr, [r1, #1]
   18e2c:	strb	ip, [r1, #2]
   18e30:	strb	r2, [r1, #3]
   18e34:	mov	r0, #4
   18e38:	pop	{r4, pc}
   18e3c:	mov	r0, #0
   18e40:	pop	{r4, pc}

00018e44 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base>:
   18e44:	cmp	r0, #127	; 0x7f
   18e48:	mov	r3, r0
   18e4c:	bls	18eb8 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x74>
   18e50:	cmp	r0, #2048	; 0x800
   18e54:	bcs	18e7c <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x38>
   18e58:	and	r2, r0, #63	; 0x3f
   18e5c:	mvn	r0, #63	; 0x3f
   18e60:	mvn	r2, r2, lsl #25
   18e64:	orr	r3, r0, r3, lsr #6
   18e68:	mvn	r2, r2, lsr #25
   18e6c:	strb	r2, [r1, #1]
   18e70:	strb	r3, [r1]
   18e74:	mov	r0, #2
   18e78:	bx	lr
   18e7c:	cmp	r0, #65536	; 0x10000
   18e80:	push	{r4, lr}
   18e84:	bcs	18ed4 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x90>
   18e88:	lsl	ip, r0, #20
   18e8c:	mvn	lr, #127	; 0x7f
   18e90:	and	r2, r0, #63	; 0x3f
   18e94:	mvn	r0, #31
   18e98:	orr	r3, r0, r3, lsr #12
   18e9c:	orr	ip, lr, ip, lsr #26
   18ea0:	orr	r2, r2, lr
   18ea4:	strb	ip, [r1, #1]
   18ea8:	strb	r2, [r1, #2]
   18eac:	strb	r3, [r1]
   18eb0:	mov	r0, #3
   18eb4:	pop	{r4, pc}
   18eb8:	ldr	r2, [pc, #96]	; 18f20 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xdc>
   18ebc:	mov	r0, #1
   18ec0:	add	r2, pc, r2
   18ec4:	add	r3, r2, r3
   18ec8:	ldrb	r3, [r3, #-1688]	; 0xfffff968
   18ecc:	strb	r3, [r1]
   18ed0:	bx	lr
   18ed4:	cmp	r0, #2097152	; 0x200000
   18ed8:	bcs	18f18 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xd4>
   18edc:	lsl	lr, r0, #14
   18ee0:	lsl	ip, r0, #20
   18ee4:	mvn	r4, #127	; 0x7f
   18ee8:	and	r2, r0, #63	; 0x3f
   18eec:	mvn	r0, #15
   18ef0:	orr	r3, r0, r3, lsr #18
   18ef4:	orr	lr, r4, lr, lsr #26
   18ef8:	orr	ip, r4, ip, lsr #26
   18efc:	orr	r2, r2, r4
   18f00:	strb	lr, [r1, #1]
   18f04:	strb	ip, [r1, #2]
   18f08:	strb	r2, [r1, #3]
   18f0c:	strb	r3, [r1]
   18f10:	mov	r0, #4
   18f14:	pop	{r4, pc}
   18f18:	mov	r0, #0
   18f1c:	pop	{r4, pc}
   18f20:	andeq	sl, r7, ip, lsl r4

00018f24 <myencoding_ascii_utf_8_to_codepoint@@Base>:
   18f24:	ldrb	r3, [r0]
   18f28:	mov	r2, r0
   18f2c:	tst	r3, #128	; 0x80
   18f30:	bne	18f40 <myencoding_ascii_utf_8_to_codepoint@@Base+0x1c>
   18f34:	str	r3, [r1]
   18f38:	mov	r0, #1
   18f3c:	bx	lr
   18f40:	and	r0, r3, #224	; 0xe0
   18f44:	cmp	r0, #192	; 0xc0
   18f48:	beq	18fa4 <myencoding_ascii_utf_8_to_codepoint@@Base+0x80>
   18f4c:	and	r0, r3, #240	; 0xf0
   18f50:	cmp	r0, #224	; 0xe0
   18f54:	beq	18f6c <myencoding_ascii_utf_8_to_codepoint@@Base+0x48>
   18f58:	and	r0, r3, #248	; 0xf8
   18f5c:	cmp	r0, #240	; 0xf0
   18f60:	beq	18fc8 <myencoding_ascii_utf_8_to_codepoint@@Base+0xa4>
   18f64:	mov	r0, #0
   18f68:	bx	lr
   18f6c:	lsl	r3, r3, #12
   18f70:	and	r3, r3, #126976	; 0x1f000
   18f74:	str	r3, [r1]
   18f78:	ldrb	ip, [r2, #1]
   18f7c:	mov	r0, #3
   18f80:	lsl	ip, ip, #6
   18f84:	and	ip, ip, #8128	; 0x1fc0
   18f88:	orr	r3, ip, r3
   18f8c:	str	r3, [r1]
   18f90:	ldrb	r2, [r2, #2]
   18f94:	and	r2, r2, #127	; 0x7f
   18f98:	orr	r3, r2, r3
   18f9c:	str	r3, [r1]
   18fa0:	bx	lr
   18fa4:	lsl	r3, r3, #6
   18fa8:	and	r3, r3, #4032	; 0xfc0
   18fac:	str	r3, [r1]
   18fb0:	ldrb	r2, [r2, #1]
   18fb4:	mov	r0, #2
   18fb8:	and	r2, r2, #127	; 0x7f
   18fbc:	orr	r3, r2, r3
   18fc0:	str	r3, [r1]
   18fc4:	bx	lr
   18fc8:	lsl	r3, r3, #18
   18fcc:	and	r3, r3, #3932160	; 0x3c0000
   18fd0:	str	r3, [r1]
   18fd4:	ldrb	ip, [r2, #1]
   18fd8:	mov	r0, #4
   18fdc:	lsl	ip, ip, #12
   18fe0:	and	ip, ip, #520192	; 0x7f000
   18fe4:	orr	ip, ip, r3
   18fe8:	str	ip, [r1]
   18fec:	ldrb	r3, [r2, #2]
   18ff0:	lsl	r3, r3, #6
   18ff4:	and	r3, r3, #8128	; 0x1fc0
   18ff8:	orr	r3, r3, ip
   18ffc:	str	r3, [r1]
   19000:	ldrb	r2, [r2, #3]
   19004:	and	r2, r2, #127	; 0x7f
   19008:	orr	r3, r2, r3
   1900c:	str	r3, [r1]
   19010:	bx	lr

00019014 <myencoding_codepoint_to_ascii_utf_16@@Base>:
   19014:	lsrs	r3, r0, #16
   19018:	bne	19038 <myencoding_codepoint_to_ascii_utf_16@@Base+0x24>
   1901c:	lsr	r2, r0, #8
   19020:	uxtb	r3, r0
   19024:	uxtb	r2, r2
   19028:	mov	r0, #2
   1902c:	strb	r3, [r1, #1]
   19030:	strb	r2, [r1]
   19034:	bx	lr
   19038:	sub	r3, r0, #65536	; 0x10000
   1903c:	push	{lr}		; (str lr, [sp, #-4]!)
   19040:	lsl	r2, r3, #22
   19044:	lsr	r3, r3, #10
   19048:	orr	r3, r3, #55296	; 0xd800
   1904c:	lsr	r2, r2, #22
   19050:	orr	ip, r2, #56320	; 0xdc00
   19054:	lsr	r2, r3, #8
   19058:	lsr	lr, ip, #8
   1905c:	uxtb	r2, r2
   19060:	uxtb	r3, r3
   19064:	mov	r0, #4
   19068:	strb	ip, [r1, #3]
   1906c:	strb	lr, [r1, #2]
   19070:	strb	r3, [r1, #1]
   19074:	strb	r2, [r1]
   19078:	pop	{pc}		; (ldr pc, [sp], #4)

0001907c <myencoding_convert_to_ascii_utf_8@@Base>:
   1907c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19080:	mov	r8, r1
   19084:	ldr	r1, [r0]
   19088:	sub	sp, sp, #36	; 0x24
   1908c:	cmp	r1, #0
   19090:	mov	r5, r0
   19094:	mov	r7, r2
   19098:	beq	19154 <myencoding_convert_to_ascii_utf_8@@Base+0xd8>
   1909c:	add	r6, sp, #8
   190a0:	mov	r0, r3
   190a4:	mov	r3, #0
   190a8:	str	r3, [r6, #4]
   190ac:	str	r3, [sp, #8]
   190b0:	str	r3, [r6, #8]
   190b4:	str	r3, [r6, #12]
   190b8:	str	r3, [r6, #16]
   190bc:	str	r3, [r6, #20]
   190c0:	bl	1082c <myencoding_get_function_by_id@plt>
   190c4:	cmp	r7, #0
   190c8:	lsrne	sl, r7, #1
   190cc:	addne	sl, sl, #6
   190d0:	addne	r7, r8, r7
   190d4:	movne	r4, r8
   190d8:	mov	r9, r0
   190dc:	bne	1910c <myencoding_convert_to_ascii_utf_8@@Base+0x90>
   190e0:	b	19174 <myencoding_convert_to_ascii_utf_8@@Base+0xf8>
   190e4:	ldr	r1, [r5]
   190e8:	add	r1, r1, r3
   190ec:	ldr	r0, [sp, #20]
   190f0:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   190f4:	ldr	r3, [r5, #8]
   190f8:	add	r0, r3, r0
   190fc:	str	r0, [r5, #8]
   19100:	cmp	r4, r7
   19104:	sub	r0, r4, r8
   19108:	beq	19178 <myencoding_convert_to_ascii_utf_8@@Base+0xfc>
   1910c:	mov	r1, r6
   19110:	ldrb	r0, [r4], #1
   19114:	blx	r9
   19118:	cmp	r0, #0
   1911c:	bne	19100 <myencoding_convert_to_ascii_utf_8@@Base+0x84>
   19120:	ldmib	r5, {r2, r3}
   19124:	add	r0, r3, #6
   19128:	add	fp, sl, r3
   1912c:	cmp	r0, r2
   19130:	mov	r1, fp
   19134:	bcc	190e4 <myencoding_convert_to_ascii_utf_8@@Base+0x68>
   19138:	ldr	r0, [r5]
   1913c:	bl	fbd8 <mycore_realloc@plt>
   19140:	subs	r1, r0, #0
   19144:	beq	19174 <myencoding_convert_to_ascii_utf_8@@Base+0xf8>
   19148:	ldr	r3, [r5, #8]
   1914c:	stm	r5, {r1, fp}
   19150:	b	190e8 <myencoding_convert_to_ascii_utf_8@@Base+0x6c>
   19154:	add	r0, r2, #1
   19158:	str	r3, [sp, #4]
   1915c:	stmib	r5, {r0, r1}
   19160:	bl	10c94 <mycore_malloc@plt>
   19164:	ldr	r3, [sp, #4]
   19168:	cmp	r0, #0
   1916c:	str	r0, [r5]
   19170:	bne	1909c <myencoding_convert_to_ascii_utf_8@@Base+0x20>
   19174:	mov	r0, #0
   19178:	add	sp, sp, #36	; 0x24
   1917c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019180 <myencoding_string_append_chunk@@Base>:
   19180:	push	{r4, r5, r6, r7, r8, lr}
   19184:	mov	r5, r0
   19188:	ldr	r0, [sp, #24]
   1918c:	mov	r7, r3
   19190:	mov	r4, r2
   19194:	mov	r6, r1
   19198:	bl	1082c <myencoding_get_function_by_id@plt>
   1919c:	cmp	r7, #0
   191a0:	addne	r7, r4, r7
   191a4:	movne	r8, r0
   191a8:	bne	191d4 <myencoding_string_append_chunk@@Base+0x54>
   191ac:	b	1920c <myencoding_string_append_chunk@@Base+0x8c>
   191b0:	ldr	r1, [r5]
   191b4:	ldr	r0, [r6, #12]
   191b8:	add	r1, r1, r2
   191bc:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   191c0:	ldr	r2, [r5, #8]
   191c4:	add	r0, r2, r0
   191c8:	str	r0, [r5, #8]
   191cc:	cmp	r4, r7
   191d0:	beq	1920c <myencoding_string_append_chunk@@Base+0x8c>
   191d4:	mov	r1, r6
   191d8:	ldrb	r0, [r4], #1
   191dc:	blx	r8
   191e0:	cmp	r0, #0
   191e4:	bne	191cc <myencoding_string_append_chunk@@Base+0x4c>
   191e8:	ldr	r2, [r5, #8]
   191ec:	ldr	r3, [r5, #4]
   191f0:	add	r1, r2, #5
   191f4:	cmp	r1, r3
   191f8:	bcc	191b0 <myencoding_string_append_chunk@@Base+0x30>
   191fc:	mov	r0, r5
   19200:	bl	10964 <mycore_string_realloc@plt>
   19204:	ldr	r2, [r5, #8]
   19208:	b	191b0 <myencoding_string_append_chunk@@Base+0x30>
   1920c:	ldr	r1, [r5, #8]
   19210:	ldr	r3, [r5, #4]
   19214:	cmp	r1, r3
   19218:	bcc	1922c <myencoding_string_append_chunk@@Base+0xac>
   1921c:	add	r1, r1, #1
   19220:	mov	r0, r5
   19224:	bl	10964 <mycore_string_realloc@plt>
   19228:	ldr	r1, [r5, #8]
   1922c:	ldr	r3, [r5]
   19230:	mov	r2, #0
   19234:	strb	r2, [r3, r1]
   19238:	pop	{r4, r5, r6, r7, r8, pc}

0001923c <myencoding_string_append@@Base>:
   1923c:	push	{r4, r5, r6, r7, r8, lr}
   19240:	sub	sp, sp, #32
   19244:	add	r4, sp, #8
   19248:	mov	r6, r1
   1924c:	mov	r7, r2
   19250:	mov	r8, r3
   19254:	mov	r5, r0
   19258:	mov	r0, r4
   1925c:	bl	101c0 <myencoding_result_clean@plt>
   19260:	str	r8, [sp]
   19264:	mov	r3, r7
   19268:	mov	r2, r6
   1926c:	mov	r1, r4
   19270:	mov	r0, r5
   19274:	bl	fc14 <myencoding_string_append_chunk@plt>
   19278:	add	sp, sp, #32
   1927c:	pop	{r4, r5, r6, r7, r8, pc}

00019280 <myencoding_string_append_one@@Base>:
   19280:	push	{r4, r5, r6, lr}
   19284:	mov	r4, r0
   19288:	mov	r0, r3
   1928c:	mov	r6, r2
   19290:	mov	r5, r1
   19294:	bl	1082c <myencoding_get_function_by_id@plt>
   19298:	mov	r1, r5
   1929c:	mov	r3, r0
   192a0:	mov	r0, r6
   192a4:	blx	r3
   192a8:	cmp	r0, #0
   192ac:	popne	{r4, r5, r6, pc}
   192b0:	ldmib	r4, {r2, r3}
   192b4:	add	r1, r3, #5
   192b8:	cmp	r1, r2
   192bc:	bcs	192ec <myencoding_string_append_one@@Base+0x6c>
   192c0:	ldr	r1, [r4]
   192c4:	ldr	r0, [r5, #12]
   192c8:	add	r1, r1, r3
   192cc:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   192d0:	ldr	r3, [r4, #8]
   192d4:	ldr	r2, [r4]
   192d8:	mov	r1, #0
   192dc:	add	r0, r0, r3
   192e0:	str	r0, [r4, #8]
   192e4:	strb	r1, [r2, r0]
   192e8:	pop	{r4, r5, r6, pc}
   192ec:	mov	r0, r4
   192f0:	bl	10964 <mycore_string_realloc@plt>
   192f4:	ldr	r3, [r4, #8]
   192f8:	b	192c0 <myencoding_string_append_one@@Base+0x40>

000192fc <myencoding_string_append_chunk_lowercase_ascii@@Base>:
   192fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19300:	mov	r7, r3
   19304:	mov	r5, r0
   19308:	ldr	r0, [sp, #32]
   1930c:	mov	r6, r1
   19310:	mov	r4, r2
   19314:	bl	1082c <myencoding_get_function_by_id@plt>
   19318:	cmp	r7, #0
   1931c:	beq	193b0 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xb4>
   19320:	ldr	r9, [pc, #184]	; 193e0 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xe4>
   19324:	mov	r8, r0
   19328:	add	r9, pc, r9
   1932c:	add	r7, r4, r7
   19330:	b	19374 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x78>
   19334:	ldr	r3, [r5]
   19338:	ldr	r0, [r6, #12]
   1933c:	add	r1, r3, r1
   19340:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   19344:	cmp	r0, #1
   19348:	ldrbeq	r1, [r4]
   1934c:	ldreq	r2, [r5]
   19350:	ldreq	r3, [r5, #8]
   19354:	ldrbeq	r1, [r9, r1]
   19358:	strbeq	r1, [r2, r3]
   1935c:	ldr	r2, [r5, #8]
   19360:	add	r0, r2, r0
   19364:	str	r0, [r5, #8]
   19368:	add	r4, r4, #1
   1936c:	cmp	r7, r4
   19370:	beq	193b0 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xb4>
   19374:	mov	r1, r6
   19378:	ldrb	r0, [r4]
   1937c:	blx	r8
   19380:	cmp	r0, #0
   19384:	bne	19368 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x6c>
   19388:	ldr	r1, [r5, #8]
   1938c:	ldr	r3, [r5, #4]
   19390:	add	r2, r1, #5
   19394:	cmp	r2, r3
   19398:	bcc	19334 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x38>
   1939c:	add	r1, r1, #6
   193a0:	mov	r0, r5
   193a4:	bl	10964 <mycore_string_realloc@plt>
   193a8:	ldr	r1, [r5, #8]
   193ac:	b	19334 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x38>
   193b0:	ldr	r1, [r5, #8]
   193b4:	ldr	r3, [r5, #4]
   193b8:	cmp	r1, r3
   193bc:	bcc	193d0 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xd4>
   193c0:	add	r1, r1, #1
   193c4:	mov	r0, r5
   193c8:	bl	10964 <mycore_string_realloc@plt>
   193cc:	ldr	r1, [r5, #8]
   193d0:	ldr	r3, [r5]
   193d4:	mov	r2, #0
   193d8:	strb	r2, [r3, r1]
   193dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   193e0:	andeq	r9, r7, ip, lsl sl

000193e4 <myencoding_string_append_lowercase_ascii@@Base>:
   193e4:	push	{r4, r5, r6, r7, r8, lr}
   193e8:	sub	sp, sp, #32
   193ec:	add	r4, sp, #8
   193f0:	mov	r6, r1
   193f4:	mov	r7, r2
   193f8:	mov	r8, r3
   193fc:	mov	r5, r0
   19400:	mov	r0, r4
   19404:	bl	101c0 <myencoding_result_clean@plt>
   19408:	str	r8, [sp]
   1940c:	mov	r3, r7
   19410:	mov	r2, r6
   19414:	mov	r1, r4
   19418:	mov	r0, r5
   1941c:	bl	10c88 <myencoding_string_append_chunk_lowercase_ascii@plt>
   19420:	add	sp, sp, #32
   19424:	pop	{r4, r5, r6, r7, r8, pc}

00019428 <myhtml_callback_before_token_done@@Base>:
   19428:	ldr	r0, [r0, #220]	; 0xdc
   1942c:	bx	lr

00019430 <myhtml_callback_after_token_done@@Base>:
   19430:	ldr	r0, [r0, #224]	; 0xe0
   19434:	bx	lr

00019438 <myhtml_callback_before_token_done_set@@Base>:
   19438:	str	r1, [r0, #220]	; 0xdc
   1943c:	str	r2, [r0, #228]	; 0xe4
   19440:	bx	lr

00019444 <myhtml_callback_after_token_done_set@@Base>:
   19444:	str	r1, [r0, #224]	; 0xe0
   19448:	str	r2, [r0, #232]	; 0xe8
   1944c:	bx	lr

00019450 <myhtml_callback_tree_node_insert@@Base>:
   19450:	ldr	r0, [r0, #236]	; 0xec
   19454:	bx	lr

00019458 <myhtml_callback_tree_node_remove@@Base>:
   19458:	ldr	r0, [r0, #240]	; 0xf0
   1945c:	bx	lr

00019460 <myhtml_callback_tree_node_insert_set@@Base>:
   19460:	str	r1, [r0, #236]	; 0xec
   19464:	str	r2, [r0, #244]	; 0xf4
   19468:	bx	lr

0001946c <myhtml_callback_tree_node_remove_set@@Base>:
   1946c:	str	r1, [r0, #240]	; 0xf0
   19470:	str	r2, [r0, #248]	; 0xf8
   19474:	bx	lr

00019478 <myhtml_charef_find@@Base>:
   19478:	push	{r4, r5, r6, r7, r8, lr}
   1947c:	ldr	r7, [pc, #172]	; 19530 <myhtml_charef_find@@Base+0xb8>
   19480:	ldrb	lr, [r0]
   19484:	add	r7, pc, r7
   19488:	lsl	r6, lr, #1
   1948c:	add	ip, r6, lr
   19490:	ldrb	r5, [r7, ip, lsl #3]
   19494:	add	ip, r7, ip, lsl #3
   19498:	cmp	r5, #0
   1949c:	beq	194dc <myhtml_charef_find@@Base+0x64>
   194a0:	ldr	r4, [r1]
   194a4:	ldrb	r8, [r0, r4]
   194a8:	cmp	r5, r8
   194ac:	beq	194bc <myhtml_charef_find@@Base+0x44>
   194b0:	bcs	194dc <myhtml_charef_find@@Base+0x64>
   194b4:	add	lr, lr, #1
   194b8:	b	19488 <myhtml_charef_find@@Base+0x10>
   194bc:	ldr	r5, [ip, #4]
   194c0:	add	r4, r4, #1
   194c4:	cmp	r5, #0
   194c8:	cmpne	r4, r2
   194cc:	str	r4, [r1]
   194d0:	bcs	19510 <myhtml_charef_find@@Base+0x98>
   194d4:	mov	lr, r5
   194d8:	b	19488 <myhtml_charef_find@@Base+0x10>
   194dc:	cmp	r3, #0
   194e0:	beq	194fc <myhtml_charef_find@@Base+0x84>
   194e4:	ldr	r2, [pc, #72]	; 19534 <myhtml_charef_find@@Base+0xbc>
   194e8:	add	r1, r6, lr
   194ec:	add	r2, pc, r2
   194f0:	add	r2, r2, r1, lsl #3
   194f4:	ldr	r2, [r2, #20]
   194f8:	str	r2, [r3]
   194fc:	ldr	r0, [pc, #52]	; 19538 <myhtml_charef_find@@Base+0xc0>
   19500:	add	lr, r6, lr
   19504:	add	r0, pc, r0
   19508:	add	r0, r0, lr, lsl #3
   1950c:	pop	{r4, r5, r6, r7, r8, pc}
   19510:	cmp	r3, #0
   19514:	ldr	r0, [pc, #32]	; 1953c <myhtml_charef_find@@Base+0xc4>
   19518:	ldrne	r2, [ip, #20]
   1951c:	add	lr, r6, lr
   19520:	add	r0, pc, r0
   19524:	strne	r2, [r3]
   19528:	add	r0, r0, lr, lsl #3
   1952c:	pop	{r4, r5, r6, r7, r8, pc}
   19530:	andeq	r9, r7, r0, asr #19
   19534:	andeq	r9, r7, r8, asr r9
   19538:	andeq	r9, r7, r0, asr #18
   1953c:	andeq	r9, r7, r4, lsr #18

00019540 <myhtml_charef_get_first_position@@Base>:
   19540:	ldr	r3, [pc, #12]	; 19554 <myhtml_charef_get_first_position@@Base+0x14>
   19544:	add	r0, r0, r0, lsl #1
   19548:	add	r3, pc, r3
   1954c:	add	r0, r3, r0, lsl #3
   19550:	bx	lr
   19554:	strdeq	r9, [r7], -ip

00019558 <myhtml_charef_find_by_pos@@Base>:
   19558:	ldr	ip, [r2]
   1955c:	push	{r4, r5, r6, r7, lr}
   19560:	ldrb	ip, [r1, ip]
   19564:	ldr	r7, [sp, #20]
   19568:	cmp	ip, #38	; 0x26
   1956c:	beq	19610 <myhtml_charef_find_by_pos@@Base+0xb8>
   19570:	ldr	r6, [pc, #292]	; 1969c <myhtml_charef_find_by_pos@@Base+0x144>
   19574:	mov	ip, #0
   19578:	add	r6, pc, r6
   1957c:	str	ip, [r7, #12]
   19580:	add	ip, r0, r0, lsl #1
   19584:	ldrb	lr, [r6, ip, lsl #3]
   19588:	add	r4, r6, ip, lsl #3
   1958c:	cmp	lr, #0
   19590:	beq	195f0 <myhtml_charef_find_by_pos@@Base+0x98>
   19594:	ldr	ip, [r2]
   19598:	ldrb	r5, [r1, ip]
   1959c:	cmp	lr, r5
   195a0:	beq	195b0 <myhtml_charef_find_by_pos@@Base+0x58>
   195a4:	bcs	195f0 <myhtml_charef_find_by_pos@@Base+0x98>
   195a8:	add	r0, r0, #1
   195ac:	b	19580 <myhtml_charef_find_by_pos@@Base+0x28>
   195b0:	cmp	lr, #59	; 0x3b
   195b4:	beq	19640 <myhtml_charef_find_by_pos@@Base+0xe8>
   195b8:	ldr	r0, [r4, #4]
   195bc:	add	ip, ip, #1
   195c0:	cmp	r0, #0
   195c4:	str	ip, [r2]
   195c8:	beq	19654 <myhtml_charef_find_by_pos@@Base+0xfc>
   195cc:	cmp	ip, r3
   195d0:	bcs	19664 <myhtml_charef_find_by_pos@@Base+0x10c>
   195d4:	ldrb	lr, [r1, ip]
   195d8:	cmp	lr, #38	; 0x26
   195dc:	beq	1967c <myhtml_charef_find_by_pos@@Base+0x124>
   195e0:	ldr	lr, [r4, #20]
   195e4:	cmp	lr, #0
   195e8:	stmibne	r7, {r4, ip}
   195ec:	b	19580 <myhtml_charef_find_by_pos@@Base+0x28>
   195f0:	ldr	r0, [r7, #4]
   195f4:	mov	r3, #1
   195f8:	cmp	r0, #0
   195fc:	str	r3, [r7, #12]
   19600:	beq	19634 <myhtml_charef_find_by_pos@@Base+0xdc>
   19604:	ldr	r3, [r7, #8]
   19608:	str	r3, [r2]
   1960c:	pop	{r4, r5, r6, r7, pc}
   19610:	ldr	r0, [r7]
   19614:	mov	r3, #1
   19618:	str	r3, [r7, #12]
   1961c:	ldr	r3, [r0, #20]
   19620:	cmp	r3, #0
   19624:	popne	{r4, r5, r6, r7, pc}
   19628:	ldr	r0, [r7, #4]
   1962c:	cmp	r0, #0
   19630:	bne	19604 <myhtml_charef_find_by_pos@@Base+0xac>
   19634:	ldr	r0, [pc, #100]	; 196a0 <myhtml_charef_find_by_pos@@Base+0x148>
   19638:	add	r0, pc, r0
   1963c:	pop	{r4, r5, r6, r7, pc}
   19640:	mov	r3, #1
   19644:	mov	r0, r4
   19648:	str	r4, [r7]
   1964c:	str	r3, [r7, #12]
   19650:	pop	{r4, r5, r6, r7, pc}
   19654:	mov	r3, #1
   19658:	mov	r0, r4
   1965c:	str	r3, [r7, #12]
   19660:	pop	{r4, r5, r6, r7, pc}
   19664:	ldr	r3, [r4, #20]
   19668:	mov	r0, r4
   1966c:	cmp	r3, #0
   19670:	str	r4, [r7]
   19674:	stmibne	r7, {r0, ip}
   19678:	pop	{r4, r5, r6, r7, pc}
   1967c:	ldr	r1, [r4, #20]
   19680:	mov	r3, #1
   19684:	cmp	r1, #0
   19688:	str	r4, [r7]
   1968c:	str	r3, [r7, #12]
   19690:	mov	r0, r4
   19694:	beq	19628 <myhtml_charef_find_by_pos@@Base+0xd0>
   19698:	pop	{r4, r5, r6, r7, pc}
   1969c:	andeq	r9, r7, ip, asr #17
   196a0:	andeq	r9, r7, ip, lsl #16

000196a4 <myhtml_data_process_state_ampersand_data@@Base>:
   196a4:	push	{r4, r5, r6, r7, r8, lr}
   196a8:	mov	lr, r0
   196ac:	sub	sp, sp, #16
   196b0:	mov	r4, r0
   196b4:	ldr	r0, [lr, #44]!	; 0x2c
   196b8:	add	ip, sp, #16
   196bc:	mov	r7, r2
   196c0:	str	r3, [ip, #-4]!
   196c4:	ldr	r0, [r0, #4]
   196c8:	mov	r5, r1
   196cc:	str	lr, [sp]
   196d0:	mov	r1, r7
   196d4:	mov	r2, ip
   196d8:	mov	r6, r3
   196dc:	ldr	r3, [sp, #40]	; 0x28
   196e0:	bl	107c0 <myhtml_charef_find_by_pos@plt>
   196e4:	ldr	r3, [r4, #56]	; 0x38
   196e8:	ldr	r1, [pc, #508]	; 198ec <myhtml_data_process_state_ampersand_data@@Base+0x248>
   196ec:	cmp	r3, #0
   196f0:	add	r1, pc, r1
   196f4:	beq	197d4 <myhtml_data_process_state_ampersand_data@@Base+0x130>
   196f8:	ldr	r3, [pc, #496]	; 198f0 <myhtml_data_process_state_ampersand_data@@Base+0x24c>
   196fc:	ldr	r2, [sp, #12]
   19700:	mov	r8, r0
   19704:	ldr	r3, [r1, r3]
   19708:	str	r3, [r4]
   1970c:	ldrb	r3, [r7, r2]
   19710:	cmp	r3, #59	; 0x3b
   19714:	addeq	r2, r2, #1
   19718:	streq	r2, [sp, #12]
   1971c:	beq	19754 <myhtml_data_process_state_ampersand_data@@Base+0xb0>
   19720:	ldrb	r1, [r4, #60]	; 0x3c
   19724:	cmp	r1, #0
   19728:	beq	19754 <myhtml_data_process_state_ampersand_data@@Base+0xb0>
   1972c:	cmp	r3, #61	; 0x3d
   19730:	beq	19748 <myhtml_data_process_state_ampersand_data@@Base+0xa4>
   19734:	ldr	r1, [pc, #440]	; 198f4 <myhtml_data_process_state_ampersand_data@@Base+0x250>
   19738:	add	r1, pc, r1
   1973c:	ldr	r3, [r1, r3, lsl #2]
   19740:	cmp	r3, #255	; 0xff
   19744:	beq	19754 <myhtml_data_process_state_ampersand_data@@Base+0xb0>
   19748:	sub	r2, r2, r6
   1974c:	ldr	r3, [r4, #32]
   19750:	b	197e0 <myhtml_data_process_state_ampersand_data@@Base+0x13c>
   19754:	ldr	r3, [r8, #20]
   19758:	cmp	r3, #0
   1975c:	beq	19870 <myhtml_data_process_state_ampersand_data@@Base+0x1cc>
   19760:	add	r6, r8, #12
   19764:	mov	r7, #0
   19768:	ldr	r1, [r5, #8]
   1976c:	ldr	r3, [r5, #4]
   19770:	add	r1, r1, #5
   19774:	cmp	r1, r3
   19778:	add	r7, r7, #1
   1977c:	bcs	19830 <myhtml_data_process_state_ampersand_data@@Base+0x18c>
   19780:	ldr	r3, [r4, #36]	; 0x24
   19784:	ldr	r1, [r5]
   19788:	ldr	r0, [r6], #4
   1978c:	add	r1, r1, r3
   19790:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   19794:	ldr	r3, [r4, #36]	; 0x24
   19798:	ldr	r2, [r8, #20]
   1979c:	cmp	r2, r7
   197a0:	add	r0, r0, r3
   197a4:	str	r0, [r4, #36]	; 0x24
   197a8:	bhi	19768 <myhtml_data_process_state_ampersand_data@@Base+0xc4>
   197ac:	ldr	r3, [r5]
   197b0:	mov	r2, #0
   197b4:	str	r0, [r5, #8]
   197b8:	strb	r2, [r3, r0]
   197bc:	ldr	r3, [sp, #12]
   197c0:	mov	r2, #0
   197c4:	str	r2, [r4, #48]	; 0x30
   197c8:	mov	r0, r3
   197cc:	add	sp, sp, #16
   197d0:	pop	{r4, r5, r6, r7, r8, pc}
   197d4:	ldr	r2, [sp, #12]
   197d8:	ldr	r3, [r4, #32]
   197dc:	sub	r2, r2, r6
   197e0:	add	r1, r7, r6
   197e4:	mov	r0, r5
   197e8:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   197ec:	ldr	r3, [sp, #12]
   197f0:	add	r0, r6, r0
   197f4:	cmp	r0, r3
   197f8:	beq	197c8 <myhtml_data_process_state_ampersand_data@@Base+0x124>
   197fc:	ldr	r2, [r4, #4]
   19800:	cmp	r2, #0
   19804:	bne	1983c <myhtml_data_process_state_ampersand_data@@Base+0x198>
   19808:	sub	r2, r3, r0
   1980c:	add	r1, r7, r0
   19810:	ldrb	r3, [r4, #61]	; 0x3d
   19814:	mov	r0, r5
   19818:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1981c:	ldr	r3, [sp, #12]
   19820:	str	r0, [r4, #32]
   19824:	mov	r0, r3
   19828:	add	sp, sp, #16
   1982c:	pop	{r4, r5, r6, r7, r8, pc}
   19830:	mov	r0, r5
   19834:	bl	10964 <mycore_string_realloc@plt>
   19838:	b	19780 <myhtml_data_process_state_ampersand_data@@Base+0xdc>
   1983c:	ldrb	r1, [r4, #61]	; 0x3d
   19840:	sub	r3, r3, r0
   19844:	str	r2, [sp]
   19848:	str	r1, [sp, #4]
   1984c:	add	r2, r7, r0
   19850:	add	r1, r4, #8
   19854:	mov	r0, r5
   19858:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1985c:	ldr	r3, [sp, #12]
   19860:	str	r0, [r4, #32]
   19864:	mov	r0, r3
   19868:	add	sp, sp, #16
   1986c:	pop	{r4, r5, r6, r7, r8, pc}
   19870:	ldr	r3, [r4, #32]
   19874:	sub	r2, r2, r6
   19878:	add	r1, r7, r6
   1987c:	mov	r0, r5
   19880:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   19884:	ldr	r3, [sp, #12]
   19888:	add	r0, r6, r0
   1988c:	cmp	r0, r3
   19890:	beq	197c0 <myhtml_data_process_state_ampersand_data@@Base+0x11c>
   19894:	ldr	r2, [r4, #4]
   19898:	cmp	r2, #0
   1989c:	bne	198c0 <myhtml_data_process_state_ampersand_data@@Base+0x21c>
   198a0:	sub	r2, r3, r0
   198a4:	add	r1, r7, r0
   198a8:	ldrb	r3, [r4, #61]	; 0x3d
   198ac:	mov	r0, r5
   198b0:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   198b4:	ldr	r3, [sp, #12]
   198b8:	str	r0, [r4, #32]
   198bc:	b	197c0 <myhtml_data_process_state_ampersand_data@@Base+0x11c>
   198c0:	ldrb	r1, [r4, #61]	; 0x3d
   198c4:	sub	r3, r3, r0
   198c8:	str	r2, [sp]
   198cc:	str	r1, [sp, #4]
   198d0:	add	r2, r7, r0
   198d4:	add	r1, r4, #8
   198d8:	mov	r0, r5
   198dc:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   198e0:	ldr	r3, [sp, #12]
   198e4:	str	r0, [r4, #32]
   198e8:	b	197c0 <myhtml_data_process_state_ampersand_data@@Base+0x11c>
   198ec:	andeq	ip, pc, r8, lsl #18
   198f0:			; <UNDEFINED> instruction: 0x000009b8
   198f4:	andeq	r1, lr, ip, ror sl

000198f8 <myhtml_data_process_entry_clean@@Base>:
   198f8:	push	{r4, r5, r6, lr}
   198fc:	mov	r2, #64	; 0x40
   19900:	mov	r1, #0
   19904:	ldr	r4, [pc, #28]	; 19928 <myhtml_data_process_entry_clean@@Base+0x30>
   19908:	mov	r5, r0
   1990c:	bl	108b0 <memset@plt>
   19910:	ldr	r2, [pc, #20]	; 1992c <myhtml_data_process_entry_clean@@Base+0x34>
   19914:	add	r4, pc, r4
   19918:	mov	r3, r4
   1991c:	ldr	r3, [r4, r2]
   19920:	str	r3, [r5]
   19924:	pop	{r4, r5, r6, pc}
   19928:	andeq	ip, pc, r4, ror #13
   1992c:			; <UNDEFINED> instruction: 0x000009b8

00019930 <myhtml_data_process_string_append_char@@Base>:
   19930:	ldmib	r0, {r2, r3}
   19934:	push	{r4, r5, r6, lr}
   19938:	mov	r5, r1
   1993c:	add	r1, r3, #2
   19940:	cmp	r1, r2
   19944:	mov	r4, r0
   19948:	bcc	19954 <myhtml_data_process_string_append_char@@Base+0x24>
   1994c:	bl	10964 <mycore_string_realloc@plt>
   19950:	ldr	r3, [r4, #8]
   19954:	ldr	r2, [r4]
   19958:	mov	r1, #0
   1995c:	strb	r5, [r2, r3]
   19960:	ldr	r3, [r4, #8]
   19964:	ldr	r2, [r4]
   19968:	add	r3, r3, #1
   1996c:	str	r3, [r4, #8]
   19970:	strb	r1, [r2, r3]
   19974:	pop	{r4, r5, r6, pc}

00019978 <myhtml_data_process_state_data@@Base>:
   19978:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1997c:	sub	sp, sp, #8
   19980:	ldr	sl, [pc, #408]	; 19b20 <myhtml_data_process_state_data@@Base+0x1a8>
   19984:	ldr	ip, [sp, #40]	; 0x28
   19988:	mov	r9, r1
   1998c:	cmp	r3, ip
   19990:	mov	r8, r2
   19994:	add	sl, pc, sl
   19998:	addcs	r1, r2, r3
   1999c:	mov	r6, r3
   199a0:	mov	r7, r0
   199a4:	movcs	r4, r3
   199a8:	movcs	r2, #0
   199ac:	bcs	199f4 <myhtml_data_process_state_data@@Base+0x7c>
   199b0:	ldrb	r3, [r8, r3]
   199b4:	add	r1, r8, r6
   199b8:	cmp	r3, #38	; 0x26
   199bc:	addne	r3, r6, #1
   199c0:	addne	r3, r8, r3
   199c4:	movne	r4, r6
   199c8:	bne	199e0 <myhtml_data_process_state_data@@Base+0x68>
   199cc:	b	19b10 <myhtml_data_process_state_data@@Base+0x198>
   199d0:	ldrb	r2, [r5]
   199d4:	add	r3, r5, #1
   199d8:	cmp	r2, #38	; 0x26
   199dc:	beq	19a48 <myhtml_data_process_state_data@@Base+0xd0>
   199e0:	add	r4, r4, #1
   199e4:	cmp	ip, r4
   199e8:	mov	r5, r3
   199ec:	bne	199d0 <myhtml_data_process_state_data@@Base+0x58>
   199f0:	sub	r2, r4, r6
   199f4:	ldr	r3, [r7, #32]
   199f8:	mov	r0, r9
   199fc:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   19a00:	add	r0, r6, r0
   19a04:	cmp	r0, r4
   19a08:	beq	19a3c <myhtml_data_process_state_data@@Base+0xc4>
   19a0c:	ldr	r3, [r7, #4]
   19a10:	cmp	r3, #0
   19a14:	beq	19aec <myhtml_data_process_state_data@@Base+0x174>
   19a18:	ldrb	r1, [r7, #61]	; 0x3d
   19a1c:	add	r2, r8, r0
   19a20:	str	r3, [sp]
   19a24:	str	r1, [sp, #4]
   19a28:	sub	r3, r4, r0
   19a2c:	add	r1, r7, #8
   19a30:	mov	r0, r9
   19a34:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   19a38:	str	r0, [r7, #32]
   19a3c:	mov	r0, r4
   19a40:	add	sp, sp, #8
   19a44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19a48:	sub	r2, r4, r6
   19a4c:	ldr	r3, [r7, #32]
   19a50:	mov	r0, r9
   19a54:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   19a58:	add	r6, r6, r0
   19a5c:	cmp	r6, r4
   19a60:	beq	19a88 <myhtml_data_process_state_data@@Base+0x110>
   19a64:	ldr	r3, [r7, #4]
   19a68:	cmp	r3, #0
   19a6c:	bne	19ab8 <myhtml_data_process_state_data@@Base+0x140>
   19a70:	add	r1, r8, r6
   19a74:	sub	r2, r4, r6
   19a78:	ldrb	r3, [r7, #61]	; 0x3d
   19a7c:	mov	r0, r9
   19a80:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   19a84:	str	r0, [r7, #32]
   19a88:	ldr	r3, [pc, #148]	; 19b24 <myhtml_data_process_state_data@@Base+0x1ac>
   19a8c:	ldr	r2, [r9, #8]
   19a90:	mov	r0, r9
   19a94:	str	r2, [r7, #36]	; 0x24
   19a98:	ldr	r3, [sl, r3]
   19a9c:	add	r4, r4, #1
   19aa0:	str	r3, [r7]
   19aa4:	ldrb	r1, [r5]
   19aa8:	bl	1106c <myhtml_data_process_string_append_char@plt>
   19aac:	mov	r0, r4
   19ab0:	add	sp, sp, #8
   19ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19ab8:	ldrb	r0, [r7, #61]	; 0x3d
   19abc:	add	r1, r7, #8
   19ac0:	str	r3, [sp]
   19ac4:	add	r2, r8, r6
   19ac8:	sub	r3, r4, r6
   19acc:	str	r0, [sp, #4]
   19ad0:	mov	r0, r9
   19ad4:	mov	r6, r1
   19ad8:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   19adc:	str	r0, [r7, #32]
   19ae0:	mov	r0, r6
   19ae4:	bl	101c0 <myencoding_result_clean@plt>
   19ae8:	b	19a88 <myhtml_data_process_state_data@@Base+0x110>
   19aec:	add	r1, r8, r0
   19af0:	sub	r2, r4, r0
   19af4:	ldrb	r3, [r7, #61]	; 0x3d
   19af8:	mov	r0, r9
   19afc:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   19b00:	str	r0, [r7, #32]
   19b04:	mov	r0, r4
   19b08:	add	sp, sp, #8
   19b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19b10:	mov	r5, r1
   19b14:	mov	r4, r6
   19b18:	mov	r2, #0
   19b1c:	b	19a4c <myhtml_data_process_state_data@@Base+0xd4>
   19b20:	andeq	ip, pc, r4, ror #12
   19b24:	andeq	r0, r0, ip, ror r9

00019b28 <myhtml_data_process_state_ampersand@@Base>:
   19b28:	push	{r4, r5, r6, r7, r8, lr}
   19b2c:	mov	r4, r3
   19b30:	ldrb	r3, [r2, r3]
   19b34:	ldr	r7, [pc, #216]	; 19c14 <myhtml_data_process_state_ampersand@@Base+0xec>
   19b38:	mov	r6, r2
   19b3c:	cmp	r3, #35	; 0x23
   19b40:	mov	r5, r0
   19b44:	mov	r8, r1
   19b48:	add	r7, pc, r7
   19b4c:	beq	19ba4 <myhtml_data_process_state_ampersand@@Base+0x7c>
   19b50:	mov	r3, #0
   19b54:	str	r3, [r0, #48]	; 0x30
   19b58:	ldrb	r0, [r2, r4]
   19b5c:	bl	10a54 <myhtml_charef_get_first_position@plt>
   19b60:	str	r0, [r5, #44]	; 0x2c
   19b64:	ldrb	r3, [r0]
   19b68:	cmp	r3, #0
   19b6c:	bne	19b84 <myhtml_data_process_state_ampersand@@Base+0x5c>
   19b70:	ldr	r3, [pc, #160]	; 19c18 <myhtml_data_process_state_ampersand@@Base+0xf0>
   19b74:	mov	r0, r4
   19b78:	ldr	r3, [r7, r3]
   19b7c:	str	r3, [r5]
   19b80:	pop	{r4, r5, r6, r7, r8, pc}
   19b84:	ldr	r3, [pc, #144]	; 19c1c <myhtml_data_process_state_ampersand@@Base+0xf4>
   19b88:	mov	r0, r8
   19b8c:	ldr	r3, [r7, r3]
   19b90:	str	r3, [r5]
   19b94:	ldrb	r1, [r6, r4]
   19b98:	bl	1106c <myhtml_data_process_string_append_char@plt>
   19b9c:	add	r0, r4, #1
   19ba0:	pop	{r4, r5, r6, r7, r8, pc}
   19ba4:	mov	r1, r3
   19ba8:	mov	r0, r8
   19bac:	bl	1106c <myhtml_data_process_string_append_char@plt>
   19bb0:	ldr	r3, [sp, #24]
   19bb4:	add	r0, r4, #1
   19bb8:	cmp	r0, r3
   19bbc:	mov	r3, #0
   19bc0:	str	r3, [r5, #40]	; 0x28
   19bc4:	bcs	19be8 <myhtml_data_process_state_ampersand@@Base+0xc0>
   19bc8:	ldrb	r1, [r6, r0]
   19bcc:	and	r3, r1, #223	; 0xdf
   19bd0:	cmp	r3, #88	; 0x58
   19bd4:	beq	19bf8 <myhtml_data_process_state_ampersand@@Base+0xd0>
   19bd8:	ldr	r3, [pc, #64]	; 19c20 <myhtml_data_process_state_ampersand@@Base+0xf8>
   19bdc:	ldr	r3, [r7, r3]
   19be0:	str	r3, [r5]
   19be4:	pop	{r4, r5, r6, r7, r8, pc}
   19be8:	ldr	r3, [pc, #52]	; 19c24 <myhtml_data_process_state_ampersand@@Base+0xfc>
   19bec:	ldr	r3, [r7, r3]
   19bf0:	str	r3, [r5]
   19bf4:	pop	{r4, r5, r6, r7, r8, pc}
   19bf8:	mov	r0, r8
   19bfc:	bl	1106c <myhtml_data_process_string_append_char@plt>
   19c00:	ldr	r3, [pc, #32]	; 19c28 <myhtml_data_process_state_ampersand@@Base+0x100>
   19c04:	add	r0, r4, #2
   19c08:	ldr	r3, [r7, r3]
   19c0c:	str	r3, [r5]
   19c10:	pop	{r4, r5, r6, r7, r8, pc}
   19c14:			; <UNDEFINED> instruction: 0x000fc4b0
   19c18:			; <UNDEFINED> instruction: 0x000009b8
   19c1c:	andeq	r0, r0, ip, asr #16
   19c20:	andeq	r0, r0, r0, lsr #19
   19c24:	andeq	r0, r0, r0, ror r7
   19c28:	andeq	r0, r0, r8, ror r7

00019c2c <myhtml_data_process_state_ampersand_hash@@Base>:
   19c2c:	push	{r4, r5, r6, lr}
   19c30:	ldrb	r2, [r2, r3]
   19c34:	ldr	r5, [pc, #80]	; 19c8c <myhtml_data_process_state_ampersand_hash@@Base+0x60>
   19c38:	and	ip, r2, #223	; 0xdf
   19c3c:	cmp	ip, #88	; 0x58
   19c40:	add	r5, pc, r5
   19c44:	beq	19c5c <myhtml_data_process_state_ampersand_hash@@Base+0x30>
   19c48:	ldr	r2, [pc, #64]	; 19c90 <myhtml_data_process_state_ampersand_hash@@Base+0x64>
   19c4c:	ldr	r2, [r5, r2]
   19c50:	str	r2, [r0]
   19c54:	mov	r0, r3
   19c58:	pop	{r4, r5, r6, pc}
   19c5c:	mov	ip, r1
   19c60:	mov	r6, r0
   19c64:	mov	r1, r2
   19c68:	mov	r0, ip
   19c6c:	mov	r4, r3
   19c70:	bl	1106c <myhtml_data_process_string_append_char@plt>
   19c74:	ldr	r2, [pc, #24]	; 19c94 <myhtml_data_process_state_ampersand_hash@@Base+0x68>
   19c78:	add	r3, r4, #1
   19c7c:	mov	r0, r3
   19c80:	ldr	r2, [r5, r2]
   19c84:	str	r2, [r6]
   19c88:	pop	{r4, r5, r6, pc}
   19c8c:			; <UNDEFINED> instruction: 0x000fc3b8
   19c90:	andeq	r0, r0, r0, lsr #19
   19c94:	andeq	r0, r0, r8, ror r7

00019c98 <myhtml_data_process_state_end@@Base>:
   19c98:	push	{r4, r5, r6, lr}
   19c9c:	mov	r4, r1
   19ca0:	ldr	r1, [r1, #8]
   19ca4:	ldr	r3, [r4, #4]
   19ca8:	add	r1, r1, #5
   19cac:	cmp	r1, r3
   19cb0:	mov	r5, r0
   19cb4:	bcs	19d20 <myhtml_data_process_state_end@@Base+0x88>
   19cb8:	ldr	r0, [r5, #40]	; 0x28
   19cbc:	cmp	r0, #159	; 0x9f
   19cc0:	bls	19d08 <myhtml_data_process_state_end@@Base+0x70>
   19cc4:	sub	r3, r0, #55296	; 0xd800
   19cc8:	cmp	r3, #2048	; 0x800
   19ccc:	bcc	19cd8 <myhtml_data_process_state_end@@Base+0x40>
   19cd0:	cmp	r0, #1114112	; 0x110000
   19cd4:	bcc	19ce0 <myhtml_data_process_state_end@@Base+0x48>
   19cd8:	ldr	r0, [pc, #76]	; 19d2c <myhtml_data_process_state_end@@Base+0x94>
   19cdc:	str	r0, [r5, #40]	; 0x28
   19ce0:	ldr	r5, [r5, #36]	; 0x24
   19ce4:	ldr	r1, [r4]
   19ce8:	add	r1, r1, r5
   19cec:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   19cf0:	ldr	r3, [r4]
   19cf4:	mov	r2, #0
   19cf8:	add	r0, r5, r0
   19cfc:	str	r0, [r4, #8]
   19d00:	strb	r2, [r3, r0]
   19d04:	pop	{r4, r5, r6, pc}
   19d08:	ldr	r3, [pc, #32]	; 19d30 <myhtml_data_process_state_end@@Base+0x98>
   19d0c:	add	r3, pc, r3
   19d10:	add	r0, r3, r0, lsl #2
   19d14:	ldr	r0, [r0, #1024]	; 0x400
   19d18:	str	r0, [r5, #40]	; 0x28
   19d1c:	b	19ce0 <myhtml_data_process_state_end@@Base+0x48>
   19d20:	mov	r0, r4
   19d24:	bl	10964 <mycore_string_realloc@plt>
   19d28:	b	19cb8 <myhtml_data_process_state_end@@Base+0x20>
   19d2c:	strdeq	pc, [r0], -sp
   19d30:	andeq	r1, lr, r8, lsr #9

00019d34 <myhtml_data_process_state_ampersand_hash_data@@Base>:
   19d34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d38:	sub	sp, sp, #20
   19d3c:	mov	r6, r3
   19d40:	ldr	ip, [sp, #56]	; 0x38
   19d44:	mov	r8, r1
   19d48:	cmp	r3, ip
   19d4c:	ldr	r3, [pc, #476]	; 19f30 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1fc>
   19d50:	mov	r7, r2
   19d54:	add	r3, pc, r3
   19d58:	addcs	r1, r2, r6
   19d5c:	mov	r5, r0
   19d60:	str	r3, [sp, #8]
   19d64:	movcs	r4, r6
   19d68:	movcs	r2, #0
   19d6c:	bcs	19df8 <myhtml_data_process_state_ampersand_hash_data@@Base+0xc4>
   19d70:	ldrb	r2, [r7, r6]
   19d74:	ldr	r3, [pc, #440]	; 19f34 <myhtml_data_process_state_ampersand_hash_data@@Base+0x200>
   19d78:	add	r1, r7, r6
   19d7c:	add	r3, pc, r3
   19d80:	add	r3, r3, r2
   19d84:	str	r1, [sp, #12]
   19d88:	ldrb	r0, [r3, #1664]	; 0x680
   19d8c:	cmp	r0, #255	; 0xff
   19d90:	beq	19eac <myhtml_data_process_state_ampersand_hash_data@@Base+0x178>
   19d94:	ldr	fp, [pc, #412]	; 19f38 <myhtml_data_process_state_ampersand_hash_data@@Base+0x204>
   19d98:	add	r2, r6, #1
   19d9c:	add	r2, r7, r2
   19da0:	ldr	r3, [r5, #40]	; 0x28
   19da4:	mov	lr, r6
   19da8:	ldr	sl, [pc, #396]	; 19f3c <myhtml_data_process_state_ampersand_hash_data@@Base+0x208>
   19dac:	add	fp, pc, fp
   19db0:	b	19dd0 <myhtml_data_process_state_ampersand_hash_data@@Base+0x9c>
   19db4:	ldrb	r0, [r1]
   19db8:	add	r2, r2, #1
   19dbc:	add	r0, fp, r0
   19dc0:	ldrb	r0, [r0, #1664]	; 0x680
   19dc4:	cmp	r0, #255	; 0xff
   19dc8:	beq	19e4c <myhtml_data_process_state_ampersand_hash_data@@Base+0x118>
   19dcc:	mov	lr, r4
   19dd0:	add	r9, r3, r3, lsl #2
   19dd4:	cmp	r3, sl
   19dd8:	addls	r3, r0, r9, lsl #1
   19ddc:	add	r4, lr, #1
   19de0:	strls	r3, [r5, #40]	; 0x28
   19de4:	cmp	ip, r4
   19de8:	mov	r1, r2
   19dec:	bne	19db4 <myhtml_data_process_state_ampersand_hash_data@@Base+0x80>
   19df0:	ldr	r1, [sp, #12]
   19df4:	sub	r2, r4, r6
   19df8:	ldr	r3, [r5, #32]
   19dfc:	mov	r0, r8
   19e00:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   19e04:	add	r0, r6, r0
   19e08:	cmp	r0, r4
   19e0c:	beq	19e40 <myhtml_data_process_state_ampersand_hash_data@@Base+0x10c>
   19e10:	ldr	r3, [r5, #4]
   19e14:	cmp	r3, #0
   19e18:	beq	19e88 <myhtml_data_process_state_ampersand_hash_data@@Base+0x154>
   19e1c:	ldrb	r1, [r5, #61]	; 0x3d
   19e20:	add	r2, r7, r0
   19e24:	str	r3, [sp]
   19e28:	str	r1, [sp, #4]
   19e2c:	sub	r3, r4, r0
   19e30:	add	r1, r5, #8
   19e34:	mov	r0, r8
   19e38:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   19e3c:	str	r0, [r5, #32]
   19e40:	mov	r0, r4
   19e44:	add	sp, sp, #20
   19e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e4c:	ldr	r3, [pc, #236]	; 19f40 <myhtml_data_process_state_ampersand_hash_data@@Base+0x20c>
   19e50:	ldr	r2, [sp, #8]
   19e54:	cmp	r6, r4
   19e58:	ldr	r3, [r2, r3]
   19e5c:	str	r3, [r5]
   19e60:	beq	19ec4 <myhtml_data_process_state_ampersand_hash_data@@Base+0x190>
   19e64:	ldrb	r3, [r1]
   19e68:	mov	r0, r5
   19e6c:	mov	r1, r8
   19e70:	cmp	r3, #59	; 0x3b
   19e74:	addeq	r4, lr, #2
   19e78:	bl	10370 <myhtml_data_process_state_end@plt>
   19e7c:	mov	r0, r4
   19e80:	add	sp, sp, #20
   19e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e88:	add	r1, r7, r0
   19e8c:	sub	r2, r4, r0
   19e90:	ldrb	r3, [r5, #61]	; 0x3d
   19e94:	mov	r0, r8
   19e98:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   19e9c:	str	r0, [r5, #32]
   19ea0:	mov	r0, r4
   19ea4:	add	sp, sp, #20
   19ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19eac:	ldr	r3, [pc, #140]	; 19f40 <myhtml_data_process_state_ampersand_hash_data@@Base+0x20c>
   19eb0:	ldr	r2, [sp, #8]
   19eb4:	add	r1, r7, r6
   19eb8:	mov	r4, r6
   19ebc:	ldr	r3, [r2, r3]
   19ec0:	str	r3, [r5]
   19ec4:	ldr	r3, [r5, #32]
   19ec8:	mov	r2, #0
   19ecc:	mov	r0, r8
   19ed0:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   19ed4:	add	r1, r0, r4
   19ed8:	cmp	r1, r4
   19edc:	beq	19e40 <myhtml_data_process_state_ampersand_hash_data@@Base+0x10c>
   19ee0:	ldr	r3, [r5, #4]
   19ee4:	cmp	r3, #0
   19ee8:	bne	19f08 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1d4>
   19eec:	rsb	r2, r0, #0
   19ef0:	add	r1, r7, r1
   19ef4:	mov	r0, r8
   19ef8:	ldrb	r3, [r5, #61]	; 0x3d
   19efc:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   19f00:	str	r0, [r5, #32]
   19f04:	b	19e40 <myhtml_data_process_state_ampersand_hash_data@@Base+0x10c>
   19f08:	ldrb	ip, [r5, #61]	; 0x3d
   19f0c:	add	r2, r7, r1
   19f10:	str	r3, [sp]
   19f14:	str	ip, [sp, #4]
   19f18:	rsb	r3, r0, #0
   19f1c:	add	r1, r5, #8
   19f20:	mov	r0, r8
   19f24:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   19f28:	str	r0, [r5, #32]
   19f2c:	b	19e40 <myhtml_data_process_state_ampersand_hash_data@@Base+0x10c>
   19f30:	andeq	ip, pc, r4, lsr #5
   19f34:	andeq	r1, lr, r8, lsr r4
   19f38:	andeq	r1, lr, r8, lsl #8
   19f3c:			; <UNDEFINED> instruction: 0x0010ffff
   19f40:			; <UNDEFINED> instruction: 0x000009b8

00019f44 <myhtml_data_process_state_ampersand_hash_x_data@@Base>:
   19f44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f48:	sub	sp, sp, #28
   19f4c:	mov	r7, r3
   19f50:	ldr	lr, [sp, #64]	; 0x40
   19f54:	str	r1, [sp, #8]
   19f58:	cmp	r3, lr
   19f5c:	ldr	r3, [pc, #536]	; 1a17c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x238>
   19f60:	mov	r6, r2
   19f64:	add	r3, pc, r3
   19f68:	addcs	r1, r2, r7
   19f6c:	mov	r5, r0
   19f70:	str	r3, [sp, #16]
   19f74:	movcs	r4, r7
   19f78:	movcs	r2, #0
   19f7c:	bcs	1a03c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xf8>
   19f80:	ldrb	r2, [r6, r7]
   19f84:	ldr	r3, [pc, #500]	; 1a180 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x23c>
   19f88:	add	r1, r6, r7
   19f8c:	add	r3, pc, r3
   19f90:	add	r3, r3, r2
   19f94:	str	r1, [sp, #20]
   19f98:	ldrb	r3, [r3, #1920]	; 0x780
   19f9c:	cmp	r3, #255	; 0xff
   19fa0:	beq	1a0f4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1b0>
   19fa4:	ldr	r2, [pc, #472]	; 1a184 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x240>
   19fa8:	ldr	fp, [pc, #472]	; 1a188 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x244>
   19fac:	add	r0, r6, r7
   19fb0:	add	r9, r7, #1
   19fb4:	add	r2, pc, r2
   19fb8:	mov	ip, r7
   19fbc:	str	r7, [sp, #12]
   19fc0:	sub	r9, r9, r0
   19fc4:	ldr	r3, [r5, #40]	; 0x28
   19fc8:	mov	r8, r0
   19fcc:	ldr	sl, [pc, #440]	; 1a18c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x248>
   19fd0:	add	fp, pc, fp
   19fd4:	mov	r7, r2
   19fd8:	b	19ffc <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xb8>
   19fdc:	ldrb	r2, [r8, #1]!
   19fe0:	add	r1, r6, r1
   19fe4:	mov	r0, r1
   19fe8:	add	r2, fp, r2
   19fec:	ldrb	r2, [r2, #1920]	; 0x780
   19ff0:	cmp	r2, #255	; 0xff
   19ff4:	beq	1a090 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x14c>
   19ff8:	mov	ip, r4
   19ffc:	cmp	r3, sl
   1a000:	lsl	r2, r3, #4
   1a004:	add	r4, ip, #1
   1a008:	add	r1, r0, r9
   1a00c:	bhi	1a028 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xe4>
   1a010:	str	r2, [r5, #40]	; 0x28
   1a014:	ldrb	r3, [r0]
   1a018:	add	r3, r7, r3
   1a01c:	ldrb	r3, [r3, #1920]	; 0x780
   1a020:	orr	r3, r3, r2
   1a024:	str	r3, [r5, #40]	; 0x28
   1a028:	cmp	lr, r4
   1a02c:	bne	19fdc <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x98>
   1a030:	ldr	r7, [sp, #12]
   1a034:	ldr	r1, [sp, #20]
   1a038:	sub	r2, r4, r7
   1a03c:	ldr	r3, [r5, #32]
   1a040:	ldr	r0, [sp, #8]
   1a044:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1a048:	add	r0, r7, r0
   1a04c:	cmp	r0, r4
   1a050:	beq	1a084 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x140>
   1a054:	ldr	r3, [r5, #4]
   1a058:	cmp	r3, #0
   1a05c:	beq	1a0d0 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x18c>
   1a060:	ldrb	r1, [r5, #61]	; 0x3d
   1a064:	add	r2, r6, r0
   1a068:	str	r3, [sp]
   1a06c:	str	r1, [sp, #4]
   1a070:	sub	r3, r4, r0
   1a074:	add	r1, r5, #8
   1a078:	ldr	r0, [sp, #8]
   1a07c:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a080:	str	r0, [r5, #32]
   1a084:	mov	r0, r4
   1a088:	add	sp, sp, #28
   1a08c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a090:	ldr	r3, [pc, #248]	; 1a190 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x24c>
   1a094:	ldr	r2, [sp, #16]
   1a098:	ldr	r7, [sp, #12]
   1a09c:	ldr	r3, [r2, r3]
   1a0a0:	cmp	r7, r4
   1a0a4:	str	r3, [r5]
   1a0a8:	beq	1a10c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1c8>
   1a0ac:	ldrb	r3, [r1]
   1a0b0:	mov	r0, r5
   1a0b4:	ldr	r1, [sp, #8]
   1a0b8:	cmp	r3, #59	; 0x3b
   1a0bc:	addeq	r4, ip, #2
   1a0c0:	bl	10370 <myhtml_data_process_state_end@plt>
   1a0c4:	mov	r0, r4
   1a0c8:	add	sp, sp, #28
   1a0cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0d0:	add	r1, r6, r0
   1a0d4:	sub	r2, r4, r0
   1a0d8:	ldrb	r3, [r5, #61]	; 0x3d
   1a0dc:	ldr	r0, [sp, #8]
   1a0e0:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1a0e4:	str	r0, [r5, #32]
   1a0e8:	mov	r0, r4
   1a0ec:	add	sp, sp, #28
   1a0f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0f4:	ldr	r3, [pc, #148]	; 1a190 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x24c>
   1a0f8:	ldr	r2, [sp, #16]
   1a0fc:	add	r1, r6, r7
   1a100:	mov	r4, r7
   1a104:	ldr	r3, [r2, r3]
   1a108:	str	r3, [r0]
   1a10c:	ldr	r7, [sp, #8]
   1a110:	ldr	r3, [r5, #32]
   1a114:	mov	r2, #0
   1a118:	mov	r0, r7
   1a11c:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1a120:	add	r1, r0, r4
   1a124:	cmp	r1, r4
   1a128:	beq	1a084 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x140>
   1a12c:	ldr	r3, [r5, #4]
   1a130:	cmp	r3, #0
   1a134:	bne	1a154 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x210>
   1a138:	rsb	r2, r0, #0
   1a13c:	add	r1, r6, r1
   1a140:	mov	r0, r7
   1a144:	ldrb	r3, [r5, #61]	; 0x3d
   1a148:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1a14c:	str	r0, [r5, #32]
   1a150:	b	1a084 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x140>
   1a154:	ldrb	ip, [r5, #61]	; 0x3d
   1a158:	add	r2, r6, r1
   1a15c:	str	r3, [sp]
   1a160:	str	ip, [sp, #4]
   1a164:	rsb	r3, r0, #0
   1a168:	add	r1, r5, #8
   1a16c:	ldr	r0, [sp, #8]
   1a170:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a174:	str	r0, [r5, #32]
   1a178:	b	1a084 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x140>
   1a17c:	muleq	pc, r4, r0	; <UNPREDICTABLE>
   1a180:	andeq	r1, lr, r8, lsr #4
   1a184:	andeq	r1, lr, r0, lsl #4
   1a188:	andeq	r1, lr, r4, ror #3
   1a18c:			; <UNDEFINED> instruction: 0x0010ffff
   1a190:			; <UNDEFINED> instruction: 0x000009b8

0001a194 <myhtml_data_process@@Base>:
   1a194:	push	{r4, r5, r6, r7, r8, lr}
   1a198:	subs	r4, r3, #0
   1a19c:	sub	sp, sp, #8
   1a1a0:	beq	1a1d8 <myhtml_data_process@@Base+0x44>
   1a1a4:	mov	r8, r2
   1a1a8:	mov	r7, r1
   1a1ac:	mov	r5, r0
   1a1b0:	mov	r3, #0
   1a1b4:	str	r4, [sp]
   1a1b8:	mov	r2, r8
   1a1bc:	ldr	r6, [r5]
   1a1c0:	mov	r1, r7
   1a1c4:	mov	r0, r5
   1a1c8:	blx	r6
   1a1cc:	cmp	r4, r0
   1a1d0:	mov	r3, r0
   1a1d4:	bhi	1a1b4 <myhtml_data_process@@Base+0x20>
   1a1d8:	add	sp, sp, #8
   1a1dc:	pop	{r4, r5, r6, r7, r8, pc}

0001a1e0 <myhtml_data_process_end@@Base>:
   1a1e0:	ldr	r3, [pc, #256]	; 1a2e8 <myhtml_data_process_end@@Base+0x108>
   1a1e4:	ldr	r2, [pc, #256]	; 1a2ec <myhtml_data_process_end@@Base+0x10c>
   1a1e8:	add	r3, pc, r3
   1a1ec:	push	{r4, r5, r6, r7, r8, lr}
   1a1f0:	ldr	ip, [r0]
   1a1f4:	ldr	r2, [r3, r2]
   1a1f8:	cmp	ip, r2
   1a1fc:	beq	1a240 <myhtml_data_process_end@@Base+0x60>
   1a200:	ldr	r2, [pc, #232]	; 1a2f0 <myhtml_data_process_end@@Base+0x110>
   1a204:	ldr	r2, [r3, r2]
   1a208:	cmp	ip, r2
   1a20c:	beq	1a2c4 <myhtml_data_process_end@@Base+0xe4>
   1a210:	ldr	r2, [pc, #220]	; 1a2f4 <myhtml_data_process_end@@Base+0x114>
   1a214:	ldr	r3, [r3, r2]
   1a218:	cmp	ip, r3
   1a21c:	popne	{r4, r5, r6, r7, r8, pc}
   1a220:	ldr	r3, [r1, #8]
   1a224:	ldr	r2, [r0, #36]	; 0x24
   1a228:	sub	r3, r3, r2
   1a22c:	cmp	r3, #3
   1a230:	beq	1a23c <myhtml_data_process_end@@Base+0x5c>
   1a234:	pop	{r4, r5, r6, r7, r8, lr}
   1a238:	b	10370 <myhtml_data_process_state_end@plt>
   1a23c:	pop	{r4, r5, r6, r7, r8, pc}
   1a240:	ldr	r5, [r0, #48]	; 0x30
   1a244:	cmp	r5, #0
   1a248:	beq	1a200 <myhtml_data_process_end@@Base+0x20>
   1a24c:	ldr	r3, [r5, #20]
   1a250:	mov	r6, r0
   1a254:	cmp	r3, #0
   1a258:	mov	r4, r1
   1a25c:	ldreq	r0, [r0, #36]	; 0x24
   1a260:	beq	1a2b0 <myhtml_data_process_end@@Base+0xd0>
   1a264:	add	r7, r5, #12
   1a268:	mov	r8, #0
   1a26c:	ldr	r1, [r4, #8]
   1a270:	ldr	r3, [r4, #4]
   1a274:	add	r1, r1, #5
   1a278:	cmp	r1, r3
   1a27c:	add	r8, r8, #1
   1a280:	bcs	1a2dc <myhtml_data_process_end@@Base+0xfc>
   1a284:	ldr	r3, [r6, #36]	; 0x24
   1a288:	ldr	r1, [r4]
   1a28c:	ldr	r0, [r7], #4
   1a290:	add	r1, r1, r3
   1a294:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   1a298:	ldr	r3, [r6, #36]	; 0x24
   1a29c:	ldr	r2, [r5, #20]
   1a2a0:	cmp	r2, r8
   1a2a4:	add	r0, r0, r3
   1a2a8:	str	r0, [r6, #36]	; 0x24
   1a2ac:	bhi	1a26c <myhtml_data_process_end@@Base+0x8c>
   1a2b0:	ldr	r3, [r4]
   1a2b4:	mov	r2, #0
   1a2b8:	str	r0, [r4, #8]
   1a2bc:	strb	r2, [r3, r0]
   1a2c0:	pop	{r4, r5, r6, r7, r8, pc}
   1a2c4:	ldr	r3, [r1, #8]
   1a2c8:	ldr	r2, [r0, #36]	; 0x24
   1a2cc:	sub	r3, r3, r2
   1a2d0:	cmp	r3, #2
   1a2d4:	bne	1a234 <myhtml_data_process_end@@Base+0x54>
   1a2d8:	pop	{r4, r5, r6, r7, r8, pc}
   1a2dc:	mov	r0, r4
   1a2e0:	bl	10964 <mycore_string_realloc@plt>
   1a2e4:	b	1a284 <myhtml_data_process_end@@Base+0xa4>
   1a2e8:	andeq	fp, pc, r0, lsl lr	; <UNPREDICTABLE>
   1a2ec:	andeq	r0, r0, ip, asr #16
   1a2f0:	andeq	r0, r0, r0, lsr #19
   1a2f4:	andeq	r0, r0, r8, ror r7

0001a2f8 <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base>:
   1a2f8:	ldr	r3, [r0, #8]
   1a2fc:	cmp	r3, r2
   1a300:	beq	1a30c <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base+0x14>
   1a304:	mov	r0, #0
   1a308:	bx	lr
   1a30c:	push	{r4, lr}
   1a310:	ldr	r0, [r0]
   1a314:	bl	102a4 <mycore_strncasecmp@plt>
   1a318:	clz	r0, r0
   1a31c:	lsr	r0, r0, #5
   1a320:	pop	{r4, pc}

0001a324 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base>:
   1a324:	ldr	r3, [r0, #8]
   1a328:	cmp	r3, r2
   1a32c:	bcs	1a338 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base+0x14>
   1a330:	mov	r0, #0
   1a334:	bx	lr
   1a338:	ldr	r0, [r0]
   1a33c:	sub	r3, r3, r2
   1a340:	push	{r4, lr}
   1a344:	add	r0, r0, r3
   1a348:	bl	102a4 <mycore_strncasecmp@plt>
   1a34c:	clz	r0, r0
   1a350:	lsr	r0, r0, #5
   1a354:	pop	{r4, pc}

0001a358 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base>:
   1a358:	push	{r4, r5, r6, lr}
   1a35c:	ldr	lr, [r0, #8]
   1a360:	cmp	lr, r2
   1a364:	bcc	1a39c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x44>
   1a368:	mov	r4, r2
   1a36c:	mov	r5, r1
   1a370:	ldr	r6, [r0]
   1a374:	beq	1a3a4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x4c>
   1a378:	mov	r1, r5
   1a37c:	mov	r2, r4
   1a380:	mov	r0, r6
   1a384:	bl	102a4 <mycore_strncasecmp@plt>
   1a388:	cmp	r0, #0
   1a38c:	bne	1a39c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x44>
   1a390:	ldrb	r3, [r6, r4]
   1a394:	cmp	r3, #45	; 0x2d
   1a398:	beq	1a3b4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x5c>
   1a39c:	mov	r0, #0
   1a3a0:	pop	{r4, r5, r6, pc}
   1a3a4:	mov	r0, r6
   1a3a8:	bl	102a4 <mycore_strncasecmp@plt>
   1a3ac:	cmp	r0, #0
   1a3b0:	bne	1a378 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x20>
   1a3b4:	mov	r0, #1
   1a3b8:	pop	{r4, r5, r6, pc}

0001a3bc <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base>:
   1a3bc:	ldr	r3, [r0, #8]
   1a3c0:	cmp	r3, r2
   1a3c4:	beq	1a3d0 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base+0x14>
   1a3c8:	mov	r0, #0
   1a3cc:	bx	lr
   1a3d0:	push	{r4, lr}
   1a3d4:	ldr	r0, [r0]
   1a3d8:	bl	10eec <mycore_strncmp@plt>
   1a3dc:	clz	r0, r0
   1a3e0:	lsr	r0, r0, #5
   1a3e4:	pop	{r4, pc}

0001a3e8 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base>:
   1a3e8:	ldr	r3, [r0, #8]
   1a3ec:	cmp	r3, r2
   1a3f0:	bcs	1a3fc <myhtml_get_nodes_by_attribute_value_recursion_end@@Base+0x14>
   1a3f4:	mov	r0, #0
   1a3f8:	bx	lr
   1a3fc:	ldr	r0, [r0]
   1a400:	sub	r3, r3, r2
   1a404:	push	{r4, lr}
   1a408:	add	r0, r0, r3
   1a40c:	bl	10eec <mycore_strncmp@plt>
   1a410:	clz	r0, r0
   1a414:	lsr	r0, r0, #5
   1a418:	pop	{r4, pc}

0001a41c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base>:
   1a41c:	push	{r4, r5, r6, lr}
   1a420:	ldr	lr, [r0, #8]
   1a424:	cmp	lr, r2
   1a428:	bcc	1a460 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x44>
   1a42c:	mov	r4, r2
   1a430:	mov	r5, r1
   1a434:	ldr	r6, [r0]
   1a438:	beq	1a468 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x4c>
   1a43c:	mov	r1, r5
   1a440:	mov	r2, r4
   1a444:	mov	r0, r6
   1a448:	bl	10eec <mycore_strncmp@plt>
   1a44c:	cmp	r0, #0
   1a450:	bne	1a460 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x44>
   1a454:	ldrb	r3, [r6, r4]
   1a458:	cmp	r3, #45	; 0x2d
   1a45c:	beq	1a478 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x5c>
   1a460:	mov	r0, #0
   1a464:	pop	{r4, r5, r6, pc}
   1a468:	mov	r0, r6
   1a46c:	bl	10eec <mycore_strncmp@plt>
   1a470:	cmp	r0, #0
   1a474:	bne	1a43c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x20>
   1a478:	mov	r0, #1
   1a47c:	pop	{r4, r5, r6, pc}

0001a480 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base>:
   1a480:	ldr	r3, [r0, #8]
   1a484:	cmp	r3, r2
   1a488:	bcs	1a494 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x14>
   1a48c:	mov	r0, #0
   1a490:	bx	lr
   1a494:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a498:	mov	r7, r0
   1a49c:	ldr	r5, [r0]
   1a4a0:	mov	sl, r2
   1a4a4:	mov	r0, r5
   1a4a8:	mov	r8, r1
   1a4ac:	bl	102a4 <mycore_strncasecmp@plt>
   1a4b0:	ldr	r2, [r7, #8]
   1a4b4:	cmp	r0, #0
   1a4b8:	beq	1a57c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xfc>
   1a4bc:	sub	r3, r2, #1
   1a4c0:	cmp	sl, r3
   1a4c4:	addls	r9, r5, sl
   1a4c8:	ldrls	r6, [pc, #228]	; 1a5b4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x134>
   1a4cc:	movls	r4, #1
   1a4d0:	bls	1a4e8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x68>
   1a4d4:	b	1a534 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb4>
   1a4d8:	add	r4, r4, #1
   1a4dc:	sub	r3, r2, r4
   1a4e0:	cmp	sl, r3
   1a4e4:	bhi	1a534 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb4>
   1a4e8:	ldrb	r3, [r5], #1
   1a4ec:	sub	r3, r3, #9
   1a4f0:	uxtb	r3, r3
   1a4f4:	cmp	r3, #23
   1a4f8:	mvn	r3, r6, lsr r3
   1a4fc:	bhi	1a4d8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x58>
   1a500:	tst	r3, #1
   1a504:	bne	1a4d8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x58>
   1a508:	mov	r2, sl
   1a50c:	mov	r1, r8
   1a510:	mov	r0, r5
   1a514:	bl	102a4 <mycore_strncasecmp@plt>
   1a518:	cmp	r0, #0
   1a51c:	beq	1a53c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xbc>
   1a520:	ldr	r2, [r7, #8]
   1a524:	add	r4, r4, #1
   1a528:	sub	r3, r2, r4
   1a52c:	cmp	sl, r3
   1a530:	bls	1a4e8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x68>
   1a534:	mov	r0, #0
   1a538:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a53c:	cmp	sl, r4
   1a540:	bcs	1a564 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xe4>
   1a544:	ldrb	r3, [r9, r4]
   1a548:	sub	r3, r3, #9
   1a54c:	uxtb	r3, r3
   1a550:	cmp	r3, #23
   1a554:	mvn	r3, r6, lsr r3
   1a558:	bhi	1a564 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xe4>
   1a55c:	tst	r3, #1
   1a560:	beq	1a574 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xf4>
   1a564:	ldr	r2, [r7, #8]
   1a568:	sub	r3, r2, r4
   1a56c:	cmp	sl, r3
   1a570:	bne	1a4d8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x58>
   1a574:	mov	r0, #1
   1a578:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a57c:	cmp	sl, r2
   1a580:	bcc	1a58c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x10c>
   1a584:	beq	1a574 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xf4>
   1a588:	b	1a4bc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x3c>
   1a58c:	ldrb	r3, [r5, sl]
   1a590:	sub	r3, r3, #9
   1a594:	uxtb	r3, r3
   1a598:	cmp	r3, #23
   1a59c:	bhi	1a4bc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x3c>
   1a5a0:	ldr	r1, [pc, #12]	; 1a5b4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x134>
   1a5a4:	mvn	r3, r1, lsr r3
   1a5a8:	tst	r3, #1
   1a5ac:	bne	1a4bc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x3c>
   1a5b0:	b	1a574 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xf4>
   1a5b4:	addeq	r0, r0, fp, lsl r0

0001a5b8 <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base>:
   1a5b8:	ldr	r3, [r0, #8]
   1a5bc:	cmp	r3, r2
   1a5c0:	bcs	1a5cc <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base+0x14>
   1a5c4:	mov	r0, #0
   1a5c8:	bx	lr
   1a5cc:	push	{r4, lr}
   1a5d0:	ldr	r0, [r0]
   1a5d4:	bl	102a4 <mycore_strncasecmp@plt>
   1a5d8:	clz	r0, r0
   1a5dc:	lsr	r0, r0, #5
   1a5e0:	pop	{r4, pc}

0001a5e4 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base>:
   1a5e4:	ldr	r3, [r0, #8]
   1a5e8:	cmp	r3, r2
   1a5ec:	bcc	1a648 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x64>
   1a5f0:	push	{r4, r5, r6, r7, r8, lr}
   1a5f4:	mov	r7, r1
   1a5f8:	mov	r5, r2
   1a5fc:	mov	r6, r0
   1a600:	ldr	r8, [r0]
   1a604:	mov	r4, #0
   1a608:	b	1a61c <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x38>
   1a60c:	ldr	r3, [r6, #8]
   1a610:	sub	r3, r3, r4
   1a614:	cmp	r5, r3
   1a618:	bhi	1a640 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x5c>
   1a61c:	add	r0, r8, r4
   1a620:	mov	r2, r5
   1a624:	mov	r1, r7
   1a628:	bl	102a4 <mycore_strncasecmp@plt>
   1a62c:	add	r4, r4, #1
   1a630:	cmp	r0, #0
   1a634:	bne	1a60c <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x28>
   1a638:	mov	r0, #1
   1a63c:	pop	{r4, r5, r6, r7, r8, pc}
   1a640:	mov	r0, #0
   1a644:	pop	{r4, r5, r6, r7, r8, pc}
   1a648:	mov	r0, #0
   1a64c:	bx	lr

0001a650 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base>:
   1a650:	ldr	r3, [r0, #8]
   1a654:	cmp	r3, r2
   1a658:	bcs	1a664 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x14>
   1a65c:	mov	r0, #0
   1a660:	bx	lr
   1a664:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a668:	mov	r7, r0
   1a66c:	ldr	r5, [r0]
   1a670:	mov	sl, r2
   1a674:	mov	r0, r5
   1a678:	mov	r8, r1
   1a67c:	bl	10eec <mycore_strncmp@plt>
   1a680:	ldr	r2, [r7, #8]
   1a684:	cmp	r0, #0
   1a688:	beq	1a74c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xfc>
   1a68c:	sub	r3, r2, #1
   1a690:	cmp	sl, r3
   1a694:	addls	r9, r5, sl
   1a698:	ldrls	r6, [pc, #228]	; 1a784 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x134>
   1a69c:	movls	r4, #1
   1a6a0:	bls	1a6b8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x68>
   1a6a4:	b	1a704 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb4>
   1a6a8:	add	r4, r4, #1
   1a6ac:	sub	r3, r2, r4
   1a6b0:	cmp	sl, r3
   1a6b4:	bhi	1a704 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb4>
   1a6b8:	ldrb	r3, [r5], #1
   1a6bc:	sub	r3, r3, #9
   1a6c0:	uxtb	r3, r3
   1a6c4:	cmp	r3, #23
   1a6c8:	mvn	r3, r6, lsr r3
   1a6cc:	bhi	1a6a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x58>
   1a6d0:	tst	r3, #1
   1a6d4:	bne	1a6a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x58>
   1a6d8:	mov	r2, sl
   1a6dc:	mov	r1, r8
   1a6e0:	mov	r0, r5
   1a6e4:	bl	10eec <mycore_strncmp@plt>
   1a6e8:	cmp	r0, #0
   1a6ec:	beq	1a70c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xbc>
   1a6f0:	ldr	r2, [r7, #8]
   1a6f4:	add	r4, r4, #1
   1a6f8:	sub	r3, r2, r4
   1a6fc:	cmp	sl, r3
   1a700:	bls	1a6b8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x68>
   1a704:	mov	r0, #0
   1a708:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a70c:	cmp	sl, r4
   1a710:	bcs	1a734 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xe4>
   1a714:	ldrb	r3, [r9, r4]
   1a718:	sub	r3, r3, #9
   1a71c:	uxtb	r3, r3
   1a720:	cmp	r3, #23
   1a724:	mvn	r3, r6, lsr r3
   1a728:	bhi	1a734 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xe4>
   1a72c:	tst	r3, #1
   1a730:	beq	1a744 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xf4>
   1a734:	ldr	r2, [r7, #8]
   1a738:	sub	r3, r2, r4
   1a73c:	cmp	sl, r3
   1a740:	bne	1a6a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x58>
   1a744:	mov	r0, #1
   1a748:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a74c:	cmp	sl, r2
   1a750:	bcc	1a75c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x10c>
   1a754:	beq	1a744 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xf4>
   1a758:	b	1a68c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x3c>
   1a75c:	ldrb	r3, [r5, sl]
   1a760:	sub	r3, r3, #9
   1a764:	uxtb	r3, r3
   1a768:	cmp	r3, #23
   1a76c:	bhi	1a68c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x3c>
   1a770:	ldr	r1, [pc, #12]	; 1a784 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x134>
   1a774:	mvn	r3, r1, lsr r3
   1a778:	tst	r3, #1
   1a77c:	bne	1a68c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x3c>
   1a780:	b	1a744 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xf4>
   1a784:	addeq	r0, r0, fp, lsl r0

0001a788 <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base>:
   1a788:	ldr	r3, [r0, #8]
   1a78c:	cmp	r3, r2
   1a790:	bcs	1a79c <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base+0x14>
   1a794:	mov	r0, #0
   1a798:	bx	lr
   1a79c:	push	{r4, lr}
   1a7a0:	ldr	r0, [r0]
   1a7a4:	bl	10eec <mycore_strncmp@plt>
   1a7a8:	clz	r0, r0
   1a7ac:	lsr	r0, r0, #5
   1a7b0:	pop	{r4, pc}

0001a7b4 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base>:
   1a7b4:	ldr	r3, [r0, #8]
   1a7b8:	cmp	r3, r2
   1a7bc:	bcc	1a818 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x64>
   1a7c0:	push	{r4, r5, r6, r7, r8, lr}
   1a7c4:	mov	r7, r1
   1a7c8:	mov	r5, r2
   1a7cc:	mov	r6, r0
   1a7d0:	ldr	r8, [r0]
   1a7d4:	mov	r4, #0
   1a7d8:	b	1a7ec <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x38>
   1a7dc:	ldr	r3, [r6, #8]
   1a7e0:	sub	r3, r3, r4
   1a7e4:	cmp	r5, r3
   1a7e8:	bhi	1a810 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x5c>
   1a7ec:	add	r0, r8, r4
   1a7f0:	mov	r2, r5
   1a7f4:	mov	r1, r7
   1a7f8:	bl	10eec <mycore_strncmp@plt>
   1a7fc:	add	r4, r4, #1
   1a800:	cmp	r0, #0
   1a804:	bne	1a7dc <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x28>
   1a808:	mov	r0, #1
   1a80c:	pop	{r4, r5, r6, r7, r8, pc}
   1a810:	mov	r0, #0
   1a814:	pop	{r4, r5, r6, r7, r8, pc}
   1a818:	mov	r0, #0
   1a81c:	bx	lr

0001a820 <myhtml_init_marker@@Base>:
   1a820:	push	{r4, lr}
   1a824:	mov	r4, r0
   1a828:	mov	r0, #44	; 0x2c
   1a82c:	bl	10c94 <mycore_malloc@plt>
   1a830:	subs	r3, r0, #0
   1a834:	str	r0, [r4, #36]	; 0x24
   1a838:	popeq	{r4, pc}
   1a83c:	pop	{r4, lr}
   1a840:	b	1109c <myhtml_tree_node_clean@plt>

0001a844 <myhtml_destroy_marker@@Base>:
   1a844:	ldr	r0, [r0, #36]	; 0x24
   1a848:	cmp	r0, #0
   1a84c:	bxeq	lr
   1a850:	b	10dcc <mycore_free@plt>

0001a854 <myhtml_stream_create@@Base>:
   1a854:	push	{r4, r5, r6, r7, r8, lr}
   1a858:	subs	r4, r2, #0
   1a85c:	bne	1a874 <myhtml_stream_create@@Base+0x20>
   1a860:	mov	r3, r4
   1a864:	str	r4, [r0]
   1a868:	str	r4, [r1]
   1a86c:	mov	r0, r3
   1a870:	pop	{r4, r5, r6, r7, r8, pc}
   1a874:	mov	r7, r1
   1a878:	mov	r6, r3
   1a87c:	mov	r5, r0
   1a880:	bl	fe18 <mythread_create@plt>
   1a884:	mov	r2, r4
   1a888:	mov	r1, #0
   1a88c:	cmp	r0, #0
   1a890:	moveq	r3, #9
   1a894:	str	r0, [r5]
   1a898:	streq	r3, [r7]
   1a89c:	mov	r3, r6
   1a8a0:	bl	110a8 <mythread_init@plt>
   1a8a4:	cmp	r0, #0
   1a8a8:	mov	r3, r0
   1a8ac:	str	r0, [r7]
   1a8b0:	beq	1a86c <myhtml_stream_create@@Base+0x18>
   1a8b4:	mov	r2, #0
   1a8b8:	mov	r1, r2
   1a8bc:	mov	r3, #1
   1a8c0:	ldr	r0, [r5]
   1a8c4:	bl	109ac <mythread_destroy@plt>
   1a8c8:	ldr	r3, [r7]
   1a8cc:	str	r0, [r5]
   1a8d0:	mov	r0, r3
   1a8d4:	pop	{r4, r5, r6, r7, r8, pc}

0001a8d8 <myhtml_batch_create@@Base>:
   1a8d8:	push	{r4, r5, r6, r7, r8, lr}
   1a8dc:	subs	r4, r2, #0
   1a8e0:	bne	1a8f8 <myhtml_batch_create@@Base+0x20>
   1a8e4:	mov	r3, r4
   1a8e8:	str	r4, [r0, #4]
   1a8ec:	str	r4, [r1]
   1a8f0:	mov	r0, r3
   1a8f4:	pop	{r4, r5, r6, r7, r8, pc}
   1a8f8:	mov	r5, r0
   1a8fc:	mov	r6, r1
   1a900:	mov	r7, r3
   1a904:	bl	fe18 <mythread_create@plt>
   1a908:	ldr	r2, [r5]
   1a90c:	cmp	r2, #0
   1a910:	mov	r1, r0
   1a914:	str	r0, [r5, #4]
   1a918:	beq	1a964 <myhtml_batch_create@@Base+0x8c>
   1a91c:	mov	r3, r7
   1a920:	mov	r0, r1
   1a924:	mov	r2, r4
   1a928:	mov	r1, #1
   1a92c:	bl	110a8 <mythread_init@plt>
   1a930:	cmp	r0, #0
   1a934:	mov	r3, r0
   1a938:	str	r0, [r6]
   1a93c:	beq	1a8f0 <myhtml_batch_create@@Base+0x18>
   1a940:	mov	r2, #0
   1a944:	mov	r1, r2
   1a948:	mov	r3, #1
   1a94c:	ldr	r0, [r5, #4]
   1a950:	bl	109ac <mythread_destroy@plt>
   1a954:	ldr	r3, [r6]
   1a958:	str	r0, [r5, #4]
   1a95c:	mov	r0, r3
   1a960:	pop	{r4, r5, r6, r7, r8, pc}
   1a964:	mov	r3, #1
   1a968:	mov	r1, r2
   1a96c:	mov	r0, r2
   1a970:	bl	109ac <mythread_destroy@plt>
   1a974:	mov	r3, #9
   1a978:	ldr	r1, [r5, #4]
   1a97c:	str	r0, [r5]
   1a980:	str	r3, [r6]
   1a984:	b	1a91c <myhtml_batch_create@@Base+0x44>

0001a988 <myhtml_create_stream_and_batch@@Base>:
   1a988:	push	{r4, r5, r6, r7, r8, lr}
   1a98c:	sub	sp, sp, #8
   1a990:	mov	r5, r1
   1a994:	add	r4, sp, #4
   1a998:	mov	r7, r2
   1a99c:	mov	r1, r4
   1a9a0:	mov	r2, r5
   1a9a4:	mov	r3, #0
   1a9a8:	mov	r6, r0
   1a9ac:	bl	1043c <myhtml_stream_create@plt>
   1a9b0:	subs	r8, r0, #0
   1a9b4:	beq	1a9c8 <myhtml_create_stream_and_batch@@Base+0x40>
   1a9b8:	ldr	r3, [sp, #4]
   1a9bc:	mov	r0, r3
   1a9c0:	add	sp, sp, #8
   1a9c4:	pop	{r4, r5, r6, r7, r8, pc}
   1a9c8:	mov	r3, r5
   1a9cc:	mov	r2, r7
   1a9d0:	mov	r1, r4
   1a9d4:	mov	r0, r6
   1a9d8:	bl	10598 <myhtml_batch_create@plt>
   1a9dc:	cmp	r0, #0
   1a9e0:	beq	1a9b8 <myhtml_create_stream_and_batch@@Base+0x30>
   1a9e4:	mov	r3, #1
   1a9e8:	mov	r2, r8
   1a9ec:	mov	r1, r8
   1a9f0:	ldr	r0, [r6]
   1a9f4:	bl	109ac <mythread_destroy@plt>
   1a9f8:	ldr	r3, [sp, #4]
   1a9fc:	str	r0, [r6]
   1aa00:	b	1a9bc <myhtml_create_stream_and_batch@@Base+0x34>

0001aa04 <myhtml_create@@Base>:
   1aa04:	mov	r1, #40	; 0x28
   1aa08:	mov	r0, #1
   1aa0c:	b	ff14 <mycore_calloc@plt>

0001aa10 <myhtml_clean@@Base>:
   1aa10:	bx	lr

0001aa14 <myhtml_init@@Base>:
   1aa14:	push	{r4, r5, r6, r7, r8, r9, lr}
   1aa18:	mov	r4, r0
   1aa1c:	sub	sp, sp, #12
   1aa20:	str	r1, [r0, #32]
   1aa24:	mov	r5, r1
   1aa28:	mov	r7, r2
   1aa2c:	bl	10ab4 <myhtml_init_marker@plt>
   1aa30:	mov	r0, r4
   1aa34:	bl	fcbc <myhtml_tokenizer_state_init@plt>
   1aa38:	ldr	r6, [pc, #492]	; 1ac2c <myhtml_init@@Base+0x218>
   1aa3c:	add	r6, pc, r6
   1aa40:	cmp	r0, #0
   1aa44:	str	r0, [sp, #4]
   1aa48:	beq	1aa54 <myhtml_init@@Base+0x40>
   1aa4c:	add	sp, sp, #12
   1aa50:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1aa54:	mov	r0, r4
   1aa58:	bl	10bec <myhtml_rules_init@plt>
   1aa5c:	cmp	r0, #0
   1aa60:	str	r0, [sp, #4]
   1aa64:	bne	1aa4c <myhtml_init@@Base+0x38>
   1aa68:	cmp	r7, #0
   1aa6c:	beq	1ab4c <myhtml_init@@Base+0x138>
   1aa70:	cmp	r5, #1
   1aa74:	beq	1abd8 <myhtml_init@@Base+0x1c4>
   1aa78:	cmp	r5, #2
   1aa7c:	beq	1ab60 <myhtml_init@@Base+0x14c>
   1aa80:	cmp	r7, #2
   1aa84:	movcc	r7, #2
   1aa88:	sub	r2, r7, #1
   1aa8c:	mov	r1, #1
   1aa90:	mov	r0, r4
   1aa94:	bl	104e4 <myhtml_create_stream_and_batch@plt>
   1aa98:	cmp	r0, #0
   1aa9c:	str	r0, [sp, #4]
   1aaa0:	bne	1aa4c <myhtml_init@@Base+0x38>
   1aaa4:	add	r0, sp, #4
   1aaa8:	ldr	r5, [r4]
   1aaac:	bl	107d8 <mythread_queue_list_create@plt>
   1aab0:	ldm	r4, {ip, lr}
   1aab4:	ldr	r2, [pc, #372]	; 1ac30 <myhtml_init@@Base+0x21c>
   1aab8:	ldr	r1, [pc, #372]	; 1ac34 <myhtml_init@@Base+0x220>
   1aabc:	mov	r3, #4
   1aac0:	str	r0, [r5, #16]
   1aac4:	ldr	r5, [ip, #16]
   1aac8:	mov	r0, ip
   1aacc:	str	r5, [lr, #16]
   1aad0:	ldr	r2, [r6, r2]
   1aad4:	ldr	r1, [r6, r1]
   1aad8:	bl	108bc <myhread_entry_create@plt>
   1aadc:	cmp	r0, #0
   1aae0:	str	r0, [sp, #4]
   1aae4:	bne	1aa4c <myhtml_init@@Base+0x38>
   1aae8:	ldr	r3, [r4, #4]
   1aaec:	ldr	r2, [r3, #8]
   1aaf0:	cmp	r2, #0
   1aaf4:	beq	1abf8 <myhtml_init@@Base+0x1e4>
   1aaf8:	ldr	r1, [pc, #312]	; 1ac38 <myhtml_init@@Base+0x224>
   1aafc:	ldr	r2, [pc, #312]	; 1ac3c <myhtml_init@@Base+0x228>
   1ab00:	mov	r5, r0
   1ab04:	ldr	r8, [r6, r1]
   1ab08:	ldr	r9, [r6, r2]
   1ab0c:	mov	r6, #4
   1ab10:	b	1ab24 <myhtml_init@@Base+0x110>
   1ab14:	ldr	r3, [r4, #4]
   1ab18:	ldr	r2, [r3, #8]
   1ab1c:	cmp	r2, r5
   1ab20:	bls	1abf8 <myhtml_init@@Base+0x1e4>
   1ab24:	mov	r0, r3
   1ab28:	mov	r2, r8
   1ab2c:	mov	r3, r6
   1ab30:	mov	r1, r9
   1ab34:	bl	108bc <myhread_entry_create@plt>
   1ab38:	add	r5, r5, #1
   1ab3c:	cmp	r0, #0
   1ab40:	str	r0, [sp, #4]
   1ab44:	beq	1ab14 <myhtml_init@@Base+0x100>
   1ab48:	b	1aa4c <myhtml_init@@Base+0x38>
   1ab4c:	cmp	r5, #1
   1ab50:	beq	1abd4 <myhtml_init@@Base+0x1c0>
   1ab54:	cmp	r5, #2
   1ab58:	moveq	r7, #1
   1ab5c:	bne	1ac20 <myhtml_init@@Base+0x20c>
   1ab60:	mov	r2, #0
   1ab64:	mov	r1, #1
   1ab68:	mov	r0, r4
   1ab6c:	bl	104e4 <myhtml_create_stream_and_batch@plt>
   1ab70:	cmp	r0, #0
   1ab74:	str	r0, [sp, #4]
   1ab78:	bne	1aa4c <myhtml_init@@Base+0x38>
   1ab7c:	add	r0, sp, #4
   1ab80:	ldr	r5, [r4]
   1ab84:	bl	107d8 <mythread_queue_list_create@plt>
   1ab88:	ldr	r2, [pc, #176]	; 1ac40 <myhtml_init@@Base+0x22c>
   1ab8c:	ldr	r1, [pc, #160]	; 1ac34 <myhtml_init@@Base+0x220>
   1ab90:	mov	r3, #4
   1ab94:	str	r0, [r5, #16]
   1ab98:	ldr	r0, [r4]
   1ab9c:	ldr	r2, [r6, r2]
   1aba0:	ldr	r1, [r6, r1]
   1aba4:	bl	108bc <myhread_entry_create@plt>
   1aba8:	ldr	r1, [r4, #4]
   1abac:	ldr	r2, [r4]
   1abb0:	mov	r3, #0
   1abb4:	str	r7, [r4, #20]
   1abb8:	str	r1, [r4, #12]
   1abbc:	str	r2, [r4, #8]
   1abc0:	str	r3, [r4, #16]
   1abc4:	cmp	r0, #0
   1abc8:	str	r0, [sp, #4]
   1abcc:	bne	1aa4c <myhtml_init@@Base+0x38>
   1abd0:	b	1ac10 <myhtml_init@@Base+0x1fc>
   1abd4:	mov	r7, r5
   1abd8:	mov	r2, #0
   1abdc:	mov	r1, r2
   1abe0:	mov	r0, r4
   1abe4:	bl	104e4 <myhtml_create_stream_and_batch@plt>
   1abe8:	cmp	r0, #0
   1abec:	str	r0, [sp, #4]
   1abf0:	bne	1aa4c <myhtml_init@@Base+0x38>
   1abf4:	ldr	r3, [r4, #4]
   1abf8:	ldr	r1, [r4]
   1abfc:	mov	r2, #0
   1ac00:	str	r7, [r4, #20]
   1ac04:	str	r3, [r4, #12]
   1ac08:	str	r1, [r4, #8]
   1ac0c:	str	r2, [r4, #16]
   1ac10:	mov	r0, r4
   1ac14:	bl	fde8 <myhtml_clean@plt>
   1ac18:	ldr	r0, [sp, #4]
   1ac1c:	b	1aa4c <myhtml_init@@Base+0x38>
   1ac20:	mov	r2, #1
   1ac24:	mov	r7, #2
   1ac28:	b	1aa8c <myhtml_init@@Base+0x78>
   1ac2c:			; <UNDEFINED> instruction: 0x000fb5bc
   1ac30:	andeq	r0, r0, ip, asr #19
   1ac34:	andeq	r0, r0, r0, asr #14
   1ac38:	andeq	r0, r0, r4, asr r7
   1ac3c:	andeq	r0, r0, r4, lsr r7
   1ac40:	andeq	r0, r0, ip, asr #14

0001ac44 <myhtml_destroy@@Base>:
   1ac44:	push	{r4, r5, r6, lr}
   1ac48:	subs	r4, r0, #0
   1ac4c:	ldr	r5, [pc, #224]	; 1ad34 <myhtml_destroy@@Base+0xf0>
   1ac50:	add	r5, pc, r5
   1ac54:	beq	1ace8 <myhtml_destroy@@Base+0xa4>
   1ac58:	bl	10790 <myhtml_destroy_marker@plt>
   1ac5c:	ldr	r0, [r4]
   1ac60:	cmp	r0, #0
   1ac64:	beq	1acc8 <myhtml_destroy@@Base+0x84>
   1ac68:	ldr	r6, [r0, #16]
   1ac6c:	cmp	r6, #0
   1ac70:	beq	1acf0 <myhtml_destroy@@Base+0xac>
   1ac74:	mov	r1, r6
   1ac78:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   1ac7c:	ldr	r1, [pc, #180]	; 1ad38 <myhtml_destroy@@Base+0xf4>
   1ac80:	mov	r3, #1
   1ac84:	mov	r2, #0
   1ac88:	ldr	r5, [r5, r1]
   1ac8c:	ldr	r0, [r4]
   1ac90:	mov	r1, r5
   1ac94:	bl	109ac <mythread_destroy@plt>
   1ac98:	ldr	r3, [r4, #4]
   1ac9c:	cmp	r3, #0
   1aca0:	str	r0, [r4]
   1aca4:	beq	1acc0 <myhtml_destroy@@Base+0x7c>
   1aca8:	mov	r0, r3
   1acac:	mov	r1, r5
   1acb0:	mov	r3, #1
   1acb4:	mov	r2, #0
   1acb8:	bl	109ac <mythread_destroy@plt>
   1acbc:	str	r0, [r4, #4]
   1acc0:	mov	r0, r6
   1acc4:	bl	10130 <mythread_queue_list_destroy@plt>
   1acc8:	mov	r0, r4
   1accc:	bl	100f4 <myhtml_tokenizer_state_destroy@plt>
   1acd0:	ldr	r0, [r4, #28]
   1acd4:	cmp	r0, #0
   1acd8:	beq	1ace0 <myhtml_destroy@@Base+0x9c>
   1acdc:	bl	10dcc <mycore_free@plt>
   1ace0:	mov	r0, r4
   1ace4:	bl	10dcc <mycore_free@plt>
   1ace8:	mov	r0, #0
   1acec:	pop	{r4, r5, r6, pc}
   1acf0:	ldr	r2, [pc, #64]	; 1ad38 <myhtml_destroy@@Base+0xf4>
   1acf4:	mov	r3, #1
   1acf8:	ldr	r5, [r5, r2]
   1acfc:	mov	r2, r6
   1ad00:	mov	r1, r5
   1ad04:	bl	109ac <mythread_destroy@plt>
   1ad08:	ldr	r3, [r4, #4]
   1ad0c:	cmp	r3, #0
   1ad10:	str	r0, [r4]
   1ad14:	beq	1acc8 <myhtml_destroy@@Base+0x84>
   1ad18:	mov	r0, r3
   1ad1c:	mov	r2, r6
   1ad20:	mov	r1, r5
   1ad24:	mov	r3, #1
   1ad28:	bl	109ac <mythread_destroy@plt>
   1ad2c:	str	r0, [r4, #4]
   1ad30:	b	1acc8 <myhtml_destroy@@Base+0x84>
   1ad34:	andeq	fp, pc, r8, lsr #7
   1ad38:	andeq	r0, r0, r8, ror #16

0001ad3c <myhtml_parse_chunk@@Base>:
   1ad3c:	ldr	r3, [r0, #180]	; 0xb4
   1ad40:	push	{r4, lr}
   1ad44:	tst	r3, #32
   1ad48:	sub	sp, sp, #8
   1ad4c:	mov	r4, r0
   1ad50:	beq	1ad60 <myhtml_parse_chunk@@Base+0x24>
   1ad54:	stm	sp, {r1, r2}
   1ad58:	bl	106d0 <myhtml_tree_clean@plt>
   1ad5c:	ldm	sp, {r1, r2}
   1ad60:	mov	r0, r4
   1ad64:	add	sp, sp, #8
   1ad68:	pop	{r4, lr}
   1ad6c:	b	100c4 <myhtml_tokenizer_chunk@plt>

0001ad70 <myhtml_parse_chunk_fragment@@Base>:
   1ad70:	push	{r4, r5, r6, r7, r8, lr}
   1ad74:	mov	r7, r1
   1ad78:	ldr	r1, [r0, #180]	; 0xb4
   1ad7c:	mov	r4, r0
   1ad80:	tst	r1, #32
   1ad84:	mov	r8, r2
   1ad88:	mov	r5, r3
   1ad8c:	ldr	r6, [sp, #24]
   1ad90:	bne	1add8 <myhtml_parse_chunk_fragment@@Base+0x68>
   1ad94:	cmp	r6, #0
   1ad98:	movne	r2, r6
   1ad9c:	moveq	r2, #1
   1ada0:	cmp	r5, #0
   1ada4:	movne	r1, r5
   1ada8:	moveq	r1, #42	; 0x2a
   1adac:	mov	r0, r4
   1adb0:	bl	fc98 <myhtml_tokenizer_fragment_init@plt>
   1adb4:	cmp	r0, #0
   1adb8:	beq	1add0 <myhtml_parse_chunk_fragment@@Base+0x60>
   1adbc:	mov	r2, r8
   1adc0:	mov	r1, r7
   1adc4:	mov	r0, r4
   1adc8:	pop	{r4, r5, r6, r7, r8, lr}
   1adcc:	b	100c4 <myhtml_tokenizer_chunk@plt>
   1add0:	ldr	r0, [pc, #8]	; 1ade0 <myhtml_parse_chunk_fragment@@Base+0x70>
   1add4:	pop	{r4, r5, r6, r7, r8, pc}
   1add8:	bl	106d0 <myhtml_tree_clean@plt>
   1addc:	b	1ad94 <myhtml_parse_chunk_fragment@@Base+0x24>
   1ade0:	andeq	r9, r0, sp, lsr #2

0001ade4 <myhtml_parse_chunk_single@@Base>:
   1ade4:	ldr	r3, [r0, #180]	; 0xb4
   1ade8:	tst	r3, #16
   1adec:	ldreq	r3, [r0, #180]	; 0xb4
   1adf0:	orreq	r3, r3, #16
   1adf4:	streq	r3, [r0, #180]	; 0xb4
   1adf8:	b	10a3c <myhtml_parse_chunk@plt>

0001adfc <myhtml_parse_chunk_fragment_single@@Base>:
   1adfc:	ldr	ip, [r0, #180]	; 0xb4
   1ae00:	push	{lr}		; (str lr, [sp, #-4]!)
   1ae04:	tst	ip, #16
   1ae08:	ldr	lr, [sp, #4]
   1ae0c:	ldreq	ip, [r0, #180]	; 0xb4
   1ae10:	orreq	ip, ip, #16
   1ae14:	streq	ip, [r0, #180]	; 0xb4
   1ae18:	str	lr, [sp, #4]
   1ae1c:	pop	{lr}		; (ldr lr, [sp], #4)
   1ae20:	b	105a4 <myhtml_parse_chunk_fragment@plt>

0001ae24 <myhtml_parse_chunk_end@@Base>:
   1ae24:	b	10268 <myhtml_tokenizer_end@plt>

0001ae28 <myhtml_encoding_set@@Base>:
   1ae28:	cmp	r1, #41	; 0x29
   1ae2c:	strls	r1, [r0, #204]	; 0xcc
   1ae30:	strls	r1, [r0, #200]	; 0xc8
   1ae34:	bx	lr

0001ae38 <myhtml_parse@@Base>:
   1ae38:	ldr	ip, [r0, #180]	; 0xb4
   1ae3c:	push	{r4, r5, r6, lr}
   1ae40:	tst	ip, #32
   1ae44:	sub	sp, sp, #8
   1ae48:	mov	r4, r0
   1ae4c:	mov	r5, r2
   1ae50:	mov	r6, r3
   1ae54:	bne	1ae90 <myhtml_parse@@Base+0x58>
   1ae58:	mov	r0, r4
   1ae5c:	bl	106a0 <myhtml_encoding_set@plt>
   1ae60:	mov	r2, r6
   1ae64:	mov	r1, r5
   1ae68:	mov	r0, r4
   1ae6c:	bl	10154 <myhtml_tokenizer_begin@plt>
   1ae70:	cmp	r0, #0
   1ae74:	beq	1ae80 <myhtml_parse@@Base+0x48>
   1ae78:	add	sp, sp, #8
   1ae7c:	pop	{r4, r5, r6, pc}
   1ae80:	mov	r0, r4
   1ae84:	add	sp, sp, #8
   1ae88:	pop	{r4, r5, r6, lr}
   1ae8c:	b	10268 <myhtml_tokenizer_end@plt>
   1ae90:	str	r1, [sp, #4]
   1ae94:	bl	106d0 <myhtml_tree_clean@plt>
   1ae98:	ldr	r1, [sp, #4]
   1ae9c:	b	1ae58 <myhtml_parse@@Base+0x20>

0001aea0 <myhtml_parse_fragment@@Base>:
   1aea0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1aea4:	mov	r9, r1
   1aea8:	ldr	r1, [r0, #180]	; 0xb4
   1aeac:	mov	r4, r0
   1aeb0:	tst	r1, #32
   1aeb4:	mov	r7, r2
   1aeb8:	mov	r8, r3
   1aebc:	ldr	r5, [sp, #32]
   1aec0:	ldr	r6, [sp, #36]	; 0x24
   1aec4:	bne	1af28 <myhtml_parse_fragment@@Base+0x88>
   1aec8:	cmp	r6, #0
   1aecc:	movne	r2, r6
   1aed0:	moveq	r2, #1
   1aed4:	cmp	r5, #0
   1aed8:	movne	r1, r5
   1aedc:	moveq	r1, #42	; 0x2a
   1aee0:	mov	r0, r4
   1aee4:	bl	fc98 <myhtml_tokenizer_fragment_init@plt>
   1aee8:	cmp	r0, #0
   1aeec:	beq	1af20 <myhtml_parse_fragment@@Base+0x80>
   1aef0:	mov	r1, r9
   1aef4:	mov	r0, r4
   1aef8:	bl	106a0 <myhtml_encoding_set@plt>
   1aefc:	mov	r2, r8
   1af00:	mov	r1, r7
   1af04:	mov	r0, r4
   1af08:	bl	10154 <myhtml_tokenizer_begin@plt>
   1af0c:	cmp	r0, #0
   1af10:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   1af14:	mov	r0, r4
   1af18:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1af1c:	b	10268 <myhtml_tokenizer_end@plt>
   1af20:	ldr	r0, [pc, #8]	; 1af30 <myhtml_parse_fragment@@Base+0x90>
   1af24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1af28:	bl	106d0 <myhtml_tree_clean@plt>
   1af2c:	b	1aec8 <myhtml_parse_fragment@@Base+0x28>
   1af30:	andeq	r9, r0, sp, lsr #2

0001af34 <myhtml_parse_single@@Base>:
   1af34:	ldr	ip, [r0, #180]	; 0xb4
   1af38:	push	{r4, r5, r6, lr}
   1af3c:	tst	ip, #32
   1af40:	sub	sp, sp, #8
   1af44:	mov	r4, r0
   1af48:	mov	r5, r2
   1af4c:	mov	r6, r3
   1af50:	bne	1af98 <myhtml_parse_single@@Base+0x64>
   1af54:	ldr	r3, [r4, #180]	; 0xb4
   1af58:	mov	r0, r4
   1af5c:	orr	r3, r3, #16
   1af60:	str	r3, [r4, #180]	; 0xb4
   1af64:	bl	106a0 <myhtml_encoding_set@plt>
   1af68:	mov	r2, r6
   1af6c:	mov	r1, r5
   1af70:	mov	r0, r4
   1af74:	bl	10154 <myhtml_tokenizer_begin@plt>
   1af78:	cmp	r0, #0
   1af7c:	beq	1af88 <myhtml_parse_single@@Base+0x54>
   1af80:	add	sp, sp, #8
   1af84:	pop	{r4, r5, r6, pc}
   1af88:	mov	r0, r4
   1af8c:	add	sp, sp, #8
   1af90:	pop	{r4, r5, r6, lr}
   1af94:	b	10268 <myhtml_tokenizer_end@plt>
   1af98:	str	r1, [sp, #4]
   1af9c:	bl	106d0 <myhtml_tree_clean@plt>
   1afa0:	ldr	r1, [sp, #4]
   1afa4:	b	1af54 <myhtml_parse_single@@Base+0x20>

0001afa8 <myhtml_parse_fragment_single@@Base>:
   1afa8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1afac:	mov	r8, r1
   1afb0:	ldr	r1, [r0, #180]	; 0xb4
   1afb4:	mov	r4, r0
   1afb8:	tst	r1, #32
   1afbc:	mov	r7, r2
   1afc0:	mov	r9, r3
   1afc4:	ldr	r5, [sp, #32]
   1afc8:	ldr	r6, [sp, #36]	; 0x24
   1afcc:	bne	1b03c <myhtml_parse_fragment_single@@Base+0x94>
   1afd0:	ldr	r3, [r4, #180]	; 0xb4
   1afd4:	cmp	r6, #0
   1afd8:	movne	r2, r6
   1afdc:	moveq	r2, #1
   1afe0:	orr	r3, r3, #16
   1afe4:	cmp	r5, #0
   1afe8:	movne	r1, r5
   1afec:	moveq	r1, #42	; 0x2a
   1aff0:	str	r3, [r4, #180]	; 0xb4
   1aff4:	mov	r0, r4
   1aff8:	bl	fc98 <myhtml_tokenizer_fragment_init@plt>
   1affc:	cmp	r0, #0
   1b000:	beq	1b034 <myhtml_parse_fragment_single@@Base+0x8c>
   1b004:	mov	r1, r8
   1b008:	mov	r0, r4
   1b00c:	bl	106a0 <myhtml_encoding_set@plt>
   1b010:	mov	r2, r9
   1b014:	mov	r1, r7
   1b018:	mov	r0, r4
   1b01c:	bl	10154 <myhtml_tokenizer_begin@plt>
   1b020:	cmp	r0, #0
   1b024:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b028:	mov	r0, r4
   1b02c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b030:	b	10268 <myhtml_tokenizer_end@plt>
   1b034:	ldr	r0, [pc, #8]	; 1b044 <myhtml_parse_fragment_single@@Base+0x9c>
   1b038:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b03c:	bl	106d0 <myhtml_tree_clean@plt>
   1b040:	b	1afd0 <myhtml_parse_fragment_single@@Base+0x28>
   1b044:	andeq	r9, r0, sp, lsr #2

0001b048 <myhtml_encoding_get@@Base>:
   1b048:	ldr	r0, [r0, #200]	; 0xc8
   1b04c:	bx	lr

0001b050 <myhtml_node_first@@Base>:
   1b050:	ldr	r3, [r0, #88]	; 0x58
   1b054:	ldr	r0, [r0, #84]	; 0x54
   1b058:	cmp	r3, #0
   1b05c:	beq	1b07c <myhtml_node_first@@Base+0x2c>
   1b060:	cmp	r0, #0
   1b064:	bxeq	lr
   1b068:	ldr	r0, [r0, #20]
   1b06c:	cmp	r0, #0
   1b070:	beq	1b08c <myhtml_node_first@@Base+0x3c>
   1b074:	ldr	r0, [r0, #20]
   1b078:	bx	lr
   1b07c:	cmp	r0, #0
   1b080:	bxeq	lr
   1b084:	ldr	r0, [r0, #20]
   1b088:	bx	lr
   1b08c:	bx	lr

0001b090 <myhtml_node_next@@Base>:
   1b090:	ldr	r0, [r0, #16]
   1b094:	bx	lr

0001b098 <myhtml_node_prev@@Base>:
   1b098:	ldr	r0, [r0, #12]
   1b09c:	bx	lr

0001b0a0 <myhtml_node_parent@@Base>:
   1b0a0:	ldr	r0, [r0, #24]
   1b0a4:	bx	lr

0001b0a8 <myhtml_node_child@@Base>:
   1b0a8:	ldr	r0, [r0, #20]
   1b0ac:	bx	lr

0001b0b0 <myhtml_node_last_child@@Base>:
   1b0b0:	ldr	r0, [r0, #28]
   1b0b4:	bx	lr

0001b0b8 <myhtml_node_create@@Base>:
   1b0b8:	push	{r4, r5, r6, lr}
   1b0bc:	mov	r5, r1
   1b0c0:	mov	r4, r2
   1b0c4:	bl	ffe0 <myhtml_tree_node_create@plt>
   1b0c8:	str	r5, [r0, #4]
   1b0cc:	str	r4, [r0, #8]
   1b0d0:	pop	{r4, r5, r6, pc}

0001b0d4 <myhtml_node_remove@@Base>:
   1b0d4:	b	10df0 <myhtml_tree_node_remove@plt>

0001b0d8 <myhtml_node_delete@@Base>:
   1b0d8:	b	10dc0 <myhtml_tree_node_delete@plt>

0001b0dc <myhtml_node_delete_recursive@@Base>:
   1b0dc:	b	ffec <myhtml_tree_node_delete_recursive@plt>

0001b0e0 <myhtml_node_free@@Base>:
   1b0e0:	b	10d00 <myhtml_tree_node_free@plt>

0001b0e4 <myhtml_node_insert_before@@Base>:
   1b0e4:	cmp	r1, #0
   1b0e8:	cmpne	r0, #0
   1b0ec:	beq	1b104 <myhtml_node_insert_before@@Base+0x20>
   1b0f0:	push	{r4, lr}
   1b0f4:	mov	r4, r1
   1b0f8:	bl	103f4 <myhtml_tree_node_insert_before@plt>
   1b0fc:	mov	r0, r4
   1b100:	pop	{r4, pc}
   1b104:	mov	r0, #0
   1b108:	bx	lr

0001b10c <myhtml_node_insert_after@@Base>:
   1b10c:	cmp	r1, #0
   1b110:	cmpne	r0, #0
   1b114:	beq	1b12c <myhtml_node_insert_after@@Base+0x20>
   1b118:	push	{r4, lr}
   1b11c:	mov	r4, r1
   1b120:	bl	10364 <myhtml_tree_node_insert_after@plt>
   1b124:	mov	r0, r4
   1b128:	pop	{r4, pc}
   1b12c:	mov	r0, #0
   1b130:	bx	lr

0001b134 <myhtml_node_append_child@@Base>:
   1b134:	cmp	r1, #0
   1b138:	cmpne	r0, #0
   1b13c:	beq	1b154 <myhtml_node_append_child@@Base+0x20>
   1b140:	push	{r4, lr}
   1b144:	mov	r4, r1
   1b148:	bl	106b8 <myhtml_tree_node_add_child@plt>
   1b14c:	mov	r0, r4
   1b150:	pop	{r4, pc}
   1b154:	mov	r0, #0
   1b158:	bx	lr

0001b15c <myhtml_node_insert_to_appropriate_place@@Base>:
   1b15c:	cmp	r1, #0
   1b160:	cmpne	r0, #0
   1b164:	push	{r4, r5, lr}
   1b168:	moveq	r0, #0
   1b16c:	sub	sp, sp, #12
   1b170:	moveq	r5, #1
   1b174:	movne	r5, #0
   1b178:	beq	1b1ac <myhtml_node_insert_to_appropriate_place@@Base+0x50>
   1b17c:	ldr	r3, [r0, #40]	; 0x28
   1b180:	mov	r2, #1
   1b184:	mov	r4, r1
   1b188:	strb	r2, [r3, #188]	; 0xbc
   1b18c:	add	r1, sp, #4
   1b190:	bl	10a30 <myhtml_tree_appropriate_place_inserting_in_tree@plt>
   1b194:	ldr	r2, [sp, #4]
   1b198:	mov	r1, r4
   1b19c:	ldr	r3, [r0, #40]	; 0x28
   1b1a0:	strb	r5, [r3, #188]	; 0xbc
   1b1a4:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   1b1a8:	mov	r0, r4
   1b1ac:	add	sp, sp, #12
   1b1b0:	pop	{r4, r5, pc}

0001b1b4 <myhtml_node_text_set@@Base>:
   1b1b4:	cmp	r3, #41	; 0x29
   1b1b8:	movls	ip, #0
   1b1bc:	movhi	ip, #1
   1b1c0:	cmp	r0, #0
   1b1c4:	orreq	ip, ip, #1
   1b1c8:	cmp	ip, #0
   1b1cc:	bne	1b2d0 <myhtml_node_text_set@@Base+0x11c>
   1b1d0:	push	{r4, r5, r6, r7, r8, lr}
   1b1d4:	mov	r4, r0
   1b1d8:	ldr	r0, [r0, #32]
   1b1dc:	mov	r6, r2
   1b1e0:	cmp	r0, #0
   1b1e4:	mov	r7, r1
   1b1e8:	mov	r5, r3
   1b1ec:	ldr	r8, [r4, #40]	; 0x28
   1b1f0:	beq	1b288 <myhtml_node_text_set@@Base+0xd4>
   1b1f4:	ldr	r2, [r0, #4]
   1b1f8:	cmp	r2, #0
   1b1fc:	beq	1b2b4 <myhtml_node_text_set@@Base+0x100>
   1b200:	ldr	r3, [r0, #8]
   1b204:	cmp	r6, r3
   1b208:	movls	r3, #0
   1b20c:	strls	r3, [r0, #12]
   1b210:	bhi	1b25c <myhtml_node_text_set@@Base+0xa8>
   1b214:	cmp	r5, #0
   1b218:	bne	1b244 <myhtml_node_text_set@@Base+0x90>
   1b21c:	mov	r2, r6
   1b220:	mov	r1, r7
   1b224:	add	r0, r0, #4
   1b228:	bl	108d4 <mycore_string_append@plt>
   1b22c:	ldr	r3, [r4, #32]
   1b230:	mov	r2, #0
   1b234:	add	r0, r3, #4
   1b238:	str	r2, [r3, #24]
   1b23c:	str	r2, [r3, #28]
   1b240:	pop	{r4, r5, r6, r7, r8, pc}
   1b244:	mov	r3, r5
   1b248:	mov	r2, r6
   1b24c:	mov	r1, r7
   1b250:	add	r0, r0, #4
   1b254:	bl	10460 <myencoding_string_append@plt>
   1b258:	b	1b22c <myhtml_node_text_set@@Base+0x78>
   1b25c:	ldr	r1, [r0, #20]
   1b260:	ldr	r0, [r8, #4]
   1b264:	bl	10718 <mchar_async_free@plt>
   1b268:	ldr	r2, [r4, #32]
   1b26c:	mov	r3, r6
   1b270:	add	r2, r2, #4
   1b274:	ldr	r1, [r8, #52]	; 0x34
   1b278:	ldr	r0, [r8, #4]
   1b27c:	bl	10610 <mycore_string_init@plt>
   1b280:	ldr	r0, [r4, #32]
   1b284:	b	1b214 <myhtml_node_text_set@@Base+0x60>
   1b288:	ldr	r1, [r8, #40]	; 0x28
   1b28c:	ldr	r0, [r8, #8]
   1b290:	bl	10a0c <myhtml_token_node_create@plt>
   1b294:	cmp	r0, #0
   1b298:	str	r0, [r4, #32]
   1b29c:	ldrne	r3, [r0, #48]	; 0x30
   1b2a0:	orrne	r3, r3, #4
   1b2a4:	strne	r3, [r0, #48]	; 0x30
   1b2a8:	bne	1b1f4 <myhtml_node_text_set@@Base+0x40>
   1b2ac:	mov	r0, #0
   1b2b0:	pop	{r4, r5, r6, r7, r8, pc}
   1b2b4:	add	r2, r0, #4
   1b2b8:	add	r3, r6, #2
   1b2bc:	ldr	r1, [r8, #52]	; 0x34
   1b2c0:	ldr	r0, [r8, #4]
   1b2c4:	bl	10610 <mycore_string_init@plt>
   1b2c8:	ldr	r0, [r4, #32]
   1b2cc:	b	1b214 <myhtml_node_text_set@@Base+0x60>
   1b2d0:	mov	r0, #0
   1b2d4:	bx	lr

0001b2d8 <myhtml_node_text_set_with_charef@@Base>:
   1b2d8:	cmp	r3, #41	; 0x29
   1b2dc:	movls	ip, #0
   1b2e0:	movhi	ip, #1
   1b2e4:	cmp	r0, #0
   1b2e8:	orreq	ip, ip, #1
   1b2ec:	cmp	ip, #0
   1b2f0:	bne	1b400 <myhtml_node_text_set_with_charef@@Base+0x128>
   1b2f4:	push	{r4, r5, r6, r7, r8, lr}
   1b2f8:	mov	r4, r0
   1b2fc:	ldr	r0, [r0, #32]
   1b300:	sub	sp, sp, #64	; 0x40
   1b304:	cmp	r0, #0
   1b308:	mov	r5, r2
   1b30c:	mov	r8, r1
   1b310:	mov	r7, r3
   1b314:	ldr	r6, [r4, #40]	; 0x28
   1b318:	beq	1b3bc <myhtml_node_text_set_with_charef@@Base+0xe4>
   1b31c:	ldr	r2, [r0, #4]
   1b320:	cmp	r2, #0
   1b324:	beq	1b3e8 <myhtml_node_text_set_with_charef@@Base+0x110>
   1b328:	ldr	r3, [r0, #8]
   1b32c:	cmp	r5, r3
   1b330:	movls	r3, #0
   1b334:	strls	r3, [r0, #12]
   1b338:	bhi	1b394 <myhtml_node_text_set_with_charef@@Base+0xbc>
   1b33c:	mov	r0, sp
   1b340:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1b344:	add	r0, sp, #8
   1b348:	str	r7, [sp, #4]
   1b34c:	bl	101c0 <myencoding_result_clean@plt>
   1b350:	ldr	r1, [r4, #32]
   1b354:	mov	r3, r5
   1b358:	mov	r2, r8
   1b35c:	mov	r0, sp
   1b360:	add	r1, r1, #4
   1b364:	bl	10754 <myhtml_data_process@plt>
   1b368:	ldr	r1, [r4, #32]
   1b36c:	mov	r0, sp
   1b370:	add	r1, r1, #4
   1b374:	bl	10928 <myhtml_data_process_end@plt>
   1b378:	ldr	r3, [r4, #32]
   1b37c:	mov	r2, #0
   1b380:	add	r0, r3, #4
   1b384:	str	r2, [r3, #24]
   1b388:	str	r2, [r3, #28]
   1b38c:	add	sp, sp, #64	; 0x40
   1b390:	pop	{r4, r5, r6, r7, r8, pc}
   1b394:	ldr	r1, [r0, #20]
   1b398:	ldr	r0, [r6, #4]
   1b39c:	bl	10718 <mchar_async_free@plt>
   1b3a0:	ldr	r2, [r4, #32]
   1b3a4:	mov	r3, r5
   1b3a8:	add	r2, r2, #4
   1b3ac:	ldr	r1, [r6, #52]	; 0x34
   1b3b0:	ldr	r0, [r6, #4]
   1b3b4:	bl	10610 <mycore_string_init@plt>
   1b3b8:	b	1b33c <myhtml_node_text_set_with_charef@@Base+0x64>
   1b3bc:	ldr	r1, [r6, #40]	; 0x28
   1b3c0:	ldr	r0, [r6, #8]
   1b3c4:	bl	10a0c <myhtml_token_node_create@plt>
   1b3c8:	cmp	r0, #0
   1b3cc:	str	r0, [r4, #32]
   1b3d0:	ldrne	r3, [r0, #48]	; 0x30
   1b3d4:	orrne	r3, r3, #4
   1b3d8:	strne	r3, [r0, #48]	; 0x30
   1b3dc:	bne	1b31c <myhtml_node_text_set_with_charef@@Base+0x44>
   1b3e0:	mov	r0, #0
   1b3e4:	b	1b38c <myhtml_node_text_set_with_charef@@Base+0xb4>
   1b3e8:	add	r2, r0, #4
   1b3ec:	add	r3, r5, #2
   1b3f0:	ldr	r1, [r6, #52]	; 0x34
   1b3f4:	ldr	r0, [r6, #4]
   1b3f8:	bl	10610 <mycore_string_init@plt>
   1b3fc:	b	1b33c <myhtml_node_text_set_with_charef@@Base+0x64>
   1b400:	mov	r0, #0
   1b404:	bx	lr

0001b408 <myhtml_node_token@@Base>:
   1b408:	ldr	r0, [r0, #32]
   1b40c:	bx	lr

0001b410 <myhtml_node_namespace@@Base>:
   1b410:	ldr	r0, [r0, #8]
   1b414:	bx	lr

0001b418 <myhtml_node_namespace_set@@Base>:
   1b418:	str	r1, [r0, #8]
   1b41c:	bx	lr

0001b420 <myhtml_node_tag_id@@Base>:
   1b420:	ldr	r0, [r0, #4]
   1b424:	bx	lr

0001b428 <myhtml_tag_name_by_id@@Base>:
   1b428:	push	{r4, lr}
   1b42c:	subs	r4, r2, #0
   1b430:	movne	r3, #0
   1b434:	strne	r3, [r4]
   1b438:	cmp	r0, #0
   1b43c:	beq	1b46c <myhtml_tag_name_by_id@@Base+0x44>
   1b440:	ldr	r0, [r0, #28]
   1b444:	cmp	r0, #0
   1b448:	beq	1b46c <myhtml_tag_name_by_id@@Base+0x44>
   1b44c:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1b450:	cmp	r0, #0
   1b454:	beq	1b46c <myhtml_tag_name_by_id@@Base+0x44>
   1b458:	cmp	r4, #0
   1b45c:	ldrne	r3, [r0, #8]
   1b460:	ldr	r0, [r0, #4]
   1b464:	strne	r3, [r4]
   1b468:	pop	{r4, pc}
   1b46c:	mov	r0, #0
   1b470:	pop	{r4, pc}

0001b474 <myhtml_tag_id_by_name@@Base>:
   1b474:	cmp	r0, #0
   1b478:	beq	1b4a8 <myhtml_tag_id_by_name@@Base+0x34>
   1b47c:	ldr	r0, [r0, #28]
   1b480:	cmp	r0, #0
   1b484:	beq	1b4a8 <myhtml_tag_id_by_name@@Base+0x34>
   1b488:	push	{r4, lr}
   1b48c:	bl	10b74 <myhtml_tag_get_by_name@plt>
   1b490:	cmp	r0, #0
   1b494:	beq	1b4a0 <myhtml_tag_id_by_name@@Base+0x2c>
   1b498:	ldr	r0, [r0]
   1b49c:	pop	{r4, pc}
   1b4a0:	mov	r0, #0
   1b4a4:	pop	{r4, pc}
   1b4a8:	mov	r0, #0
   1b4ac:	bx	lr

0001b4b0 <myhtml_node_is_close_self@@Base>:
   1b4b0:	ldr	r0, [r0, #32]
   1b4b4:	cmp	r0, #0
   1b4b8:	ldrne	r0, [r0, #48]	; 0x30
   1b4bc:	lsrne	r0, r0, #1
   1b4c0:	andne	r0, r0, #1
   1b4c4:	bx	lr

0001b4c8 <myhtml_node_is_void_element@@Base>:
   1b4c8:	ldr	r3, [r0, #4]
   1b4cc:	sub	r3, r3, #10
   1b4d0:	cmp	r3, #132	; 0x84
   1b4d4:	addls	pc, pc, r3, lsl #2
   1b4d8:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b4dc:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b4e0:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b4e4:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b4e8:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b4ec:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b4f0:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b4f4:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b4f8:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b4fc:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b500:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b504:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b508:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b50c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b510:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b514:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b518:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b51c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b520:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b524:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b528:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b52c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b530:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b534:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b538:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b53c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b540:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b544:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b548:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b54c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b550:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b554:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b558:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b55c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b560:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b564:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b568:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b56c:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b570:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b574:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b578:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b57c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b580:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b584:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b588:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b58c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b590:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b594:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b598:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b59c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5a0:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5a4:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5a8:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5ac:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5b0:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5b4:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b5b8:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5bc:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5c0:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5c4:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5c8:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b5cc:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b5d0:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5d4:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5d8:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5dc:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b5e0:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5e4:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5e8:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5ec:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b5f0:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5f4:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5f8:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b5fc:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b600:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b604:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b608:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b60c:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b610:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b614:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b618:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b61c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b620:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b624:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b628:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b62c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b630:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b634:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b638:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b63c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b640:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b644:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b648:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b64c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b650:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b654:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b658:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b65c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b660:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b664:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b668:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b66c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b670:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b674:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b678:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b67c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b680:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b684:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b688:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b68c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b690:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b694:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b698:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b69c:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6a0:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6a4:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6a8:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6ac:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6b0:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6b4:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6b8:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6bc:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6c0:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6c4:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6c8:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6cc:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6d0:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6d4:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b6d8:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6dc:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6e0:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6e4:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6e8:	b	1b6f0 <myhtml_node_is_void_element@@Base+0x228>
   1b6ec:	b	1b6f8 <myhtml_node_is_void_element@@Base+0x230>
   1b6f0:	mov	r0, #0
   1b6f4:	bx	lr
   1b6f8:	mov	r0, #1
   1b6fc:	bx	lr

0001b700 <myhtml_node_attribute_first@@Base>:
   1b700:	ldr	r0, [r0, #32]
   1b704:	cmp	r0, #0
   1b708:	ldrne	r0, [r0, #40]	; 0x28
   1b70c:	bx	lr

0001b710 <myhtml_node_attribute_last@@Base>:
   1b710:	ldr	r0, [r0, #32]
   1b714:	cmp	r0, #0
   1b718:	ldrne	r0, [r0, #44]	; 0x2c
   1b71c:	bx	lr

0001b720 <myhtml_node_text@@Base>:
   1b720:	ldr	r3, [r0, #32]
   1b724:	cmp	r3, #0
   1b728:	beq	1b750 <myhtml_node_text@@Base+0x30>
   1b72c:	ldr	r2, [r3, #12]
   1b730:	cmp	r2, #0
   1b734:	beq	1b750 <myhtml_node_text@@Base+0x30>
   1b738:	ldr	r0, [r3, #4]
   1b73c:	cmp	r0, #0
   1b740:	beq	1b750 <myhtml_node_text@@Base+0x30>
   1b744:	cmp	r1, #0
   1b748:	strne	r2, [r1]
   1b74c:	bx	lr
   1b750:	cmp	r1, #0
   1b754:	movne	r0, #0
   1b758:	strne	r0, [r1]
   1b75c:	moveq	r0, r1
   1b760:	bx	lr

0001b764 <myhtml_node_string@@Base>:
   1b764:	cmp	r0, #0
   1b768:	bxeq	lr
   1b76c:	ldr	r0, [r0, #32]
   1b770:	cmp	r0, #0
   1b774:	addne	r0, r0, #4
   1b778:	bx	lr

0001b77c <myhtml_node_raw_position@@Base>:
   1b77c:	cmp	r1, #0
   1b780:	beq	1b7a4 <myhtml_node_raw_position@@Base+0x28>
   1b784:	ldr	r1, [r1, #32]
   1b788:	cmp	r1, #0
   1b78c:	beq	1b7a4 <myhtml_node_raw_position@@Base+0x28>
   1b790:	ldr	r3, [r1, #24]
   1b794:	ldr	r1, [r1, #28]
   1b798:	str	r1, [r0, #4]
   1b79c:	str	r3, [r0]
   1b7a0:	bx	lr
   1b7a4:	mov	r3, r1
   1b7a8:	b	1b798 <myhtml_node_raw_position@@Base+0x1c>

0001b7ac <myhtml_node_element_position@@Base>:
   1b7ac:	cmp	r1, #0
   1b7b0:	beq	1b7d4 <myhtml_node_element_position@@Base+0x28>
   1b7b4:	ldr	r1, [r1, #32]
   1b7b8:	cmp	r1, #0
   1b7bc:	beq	1b7d4 <myhtml_node_element_position@@Base+0x28>
   1b7c0:	ldr	r3, [r1, #32]
   1b7c4:	ldr	r1, [r1, #36]	; 0x24
   1b7c8:	str	r1, [r0, #4]
   1b7cc:	str	r3, [r0]
   1b7d0:	bx	lr
   1b7d4:	mov	r3, r1
   1b7d8:	b	1b7c8 <myhtml_node_element_position@@Base+0x1c>

0001b7dc <myhtml_node_set_data@@Base>:
   1b7dc:	str	r1, [r0, #36]	; 0x24
   1b7e0:	bx	lr

0001b7e4 <myhtml_node_get_data@@Base>:
   1b7e4:	ldr	r0, [r0, #36]	; 0x24
   1b7e8:	bx	lr

0001b7ec <myhtml_node_tree@@Base>:
   1b7ec:	ldr	r0, [r0, #40]	; 0x28
   1b7f0:	bx	lr

0001b7f4 <myhtml_attribute_next@@Base>:
   1b7f4:	ldr	r0, [r0]
   1b7f8:	bx	lr

0001b7fc <myhtml_attribute_prev@@Base>:
   1b7fc:	ldr	r0, [r0, #4]
   1b800:	bx	lr

0001b804 <myhtml_attribute_namespace@@Base>:
   1b804:	ldr	r0, [r0, #64]	; 0x40
   1b808:	bx	lr

0001b80c <myhtml_attribute_namespace_set@@Base>:
   1b80c:	str	r1, [r0, #64]	; 0x40
   1b810:	bx	lr

0001b814 <myhtml_attribute_key@@Base>:
   1b814:	ldr	r3, [r0, #8]
   1b818:	cmp	r3, #0
   1b81c:	beq	1b840 <myhtml_attribute_key@@Base+0x2c>
   1b820:	ldr	r2, [r0, #16]
   1b824:	cmp	r2, #0
   1b828:	beq	1b840 <myhtml_attribute_key@@Base+0x2c>
   1b82c:	cmp	r1, #0
   1b830:	beq	1b860 <myhtml_attribute_key@@Base+0x4c>
   1b834:	str	r2, [r1]
   1b838:	mov	r0, r3
   1b83c:	bx	lr
   1b840:	cmp	r1, #0
   1b844:	beq	1b858 <myhtml_attribute_key@@Base+0x44>
   1b848:	mov	r3, #0
   1b84c:	str	r3, [r1]
   1b850:	mov	r0, r3
   1b854:	bx	lr
   1b858:	mov	r0, r1
   1b85c:	bx	lr
   1b860:	mov	r0, r3
   1b864:	bx	lr

0001b868 <myhtml_attribute_value@@Base>:
   1b868:	ldr	r3, [r0, #28]
   1b86c:	cmp	r3, #0
   1b870:	beq	1b894 <myhtml_attribute_value@@Base+0x2c>
   1b874:	ldr	r2, [r0, #36]	; 0x24
   1b878:	cmp	r2, #0
   1b87c:	beq	1b894 <myhtml_attribute_value@@Base+0x2c>
   1b880:	cmp	r1, #0
   1b884:	beq	1b8b4 <myhtml_attribute_value@@Base+0x4c>
   1b888:	str	r2, [r1]
   1b88c:	mov	r0, r3
   1b890:	bx	lr
   1b894:	cmp	r1, #0
   1b898:	beq	1b8ac <myhtml_attribute_value@@Base+0x44>
   1b89c:	mov	r3, #0
   1b8a0:	str	r3, [r1]
   1b8a4:	mov	r0, r3
   1b8a8:	bx	lr
   1b8ac:	mov	r0, r1
   1b8b0:	bx	lr
   1b8b4:	mov	r0, r3
   1b8b8:	bx	lr

0001b8bc <myhtml_attribute_key_string@@Base>:
   1b8bc:	cmp	r0, #0
   1b8c0:	addne	r0, r0, #8
   1b8c4:	bx	lr

0001b8c8 <myhtml_attribute_value_string@@Base>:
   1b8c8:	cmp	r0, #0
   1b8cc:	addne	r0, r0, #28
   1b8d0:	bx	lr

0001b8d4 <myhtml_attribute_by_key@@Base>:
   1b8d4:	cmp	r0, #0
   1b8d8:	bxeq	lr
   1b8dc:	ldr	r0, [r0, #32]
   1b8e0:	cmp	r0, #0
   1b8e4:	bxeq	lr
   1b8e8:	b	10eb0 <myhtml_token_attr_by_name@plt>

0001b8ec <myhtml_attribute_add@@Base>:
   1b8ec:	push	{r4, r5, r6, lr}
   1b8f0:	subs	r4, r0, #0
   1b8f4:	sub	sp, sp, #24
   1b8f8:	beq	1b97c <myhtml_attribute_add@@Base+0x90>
   1b8fc:	mov	r5, r3
   1b900:	mov	r3, r2
   1b904:	mov	r2, r1
   1b908:	ldr	r1, [r4, #32]
   1b90c:	ldr	r6, [r4, #40]	; 0x28
   1b910:	cmp	r1, #0
   1b914:	beq	1b940 <myhtml_attribute_add@@Base+0x54>
   1b918:	ldr	ip, [sp, #44]	; 0x2c
   1b91c:	ldr	r0, [r6, #8]
   1b920:	str	ip, [sp, #12]
   1b924:	ldr	ip, [r6, #40]	; 0x28
   1b928:	str	ip, [sp, #8]
   1b92c:	ldr	ip, [sp, #40]	; 0x28
   1b930:	stm	sp, {r5, ip}
   1b934:	bl	107f0 <myhtml_token_node_attr_append_with_convert_encoding@plt>
   1b938:	add	sp, sp, #24
   1b93c:	pop	{r4, r5, r6, pc}
   1b940:	ldr	r1, [r6, #40]	; 0x28
   1b944:	ldr	r0, [r6, #8]
   1b948:	str	r3, [sp, #20]
   1b94c:	str	r2, [sp, #16]
   1b950:	bl	10a0c <myhtml_token_node_create@plt>
   1b954:	cmp	r0, #0
   1b958:	mov	r1, r0
   1b95c:	str	r0, [r4, #32]
   1b960:	beq	1b97c <myhtml_attribute_add@@Base+0x90>
   1b964:	ldr	r0, [r0, #48]	; 0x30
   1b968:	ldr	r3, [sp, #20]
   1b96c:	orr	r0, r0, #4
   1b970:	str	r0, [r1, #48]	; 0x30
   1b974:	ldr	r2, [sp, #16]
   1b978:	b	1b918 <myhtml_attribute_add@@Base+0x2c>
   1b97c:	mov	r0, #0
   1b980:	b	1b938 <myhtml_attribute_add@@Base+0x4c>

0001b984 <myhtml_attribute_remove@@Base>:
   1b984:	cmp	r0, #0
   1b988:	bxeq	lr
   1b98c:	ldr	r0, [r0, #32]
   1b990:	cmp	r0, #0
   1b994:	bxeq	lr
   1b998:	b	10574 <myhtml_token_attr_remove@plt>

0001b99c <myhtml_attribute_remove_by_key@@Base>:
   1b99c:	cmp	r0, #0
   1b9a0:	bxeq	lr
   1b9a4:	ldr	r0, [r0, #32]
   1b9a8:	cmp	r0, #0
   1b9ac:	bxeq	lr
   1b9b0:	b	10e98 <myhtml_token_attr_remove_by_name@plt>

0001b9b4 <myhtml_attribute_free@@Base>:
   1b9b4:	ldr	r2, [r1, #8]
   1b9b8:	push	{r4, r5, r6, lr}
   1b9bc:	cmp	r2, #0
   1b9c0:	mov	r4, r1
   1b9c4:	mov	r5, r0
   1b9c8:	beq	1b9d8 <myhtml_attribute_free@@Base+0x24>
   1b9cc:	ldr	r1, [r1, #24]
   1b9d0:	ldr	r0, [r4, #20]
   1b9d4:	bl	10718 <mchar_async_free@plt>
   1b9d8:	ldr	r2, [r4, #28]
   1b9dc:	cmp	r2, #0
   1b9e0:	beq	1b9f0 <myhtml_attribute_free@@Base+0x3c>
   1b9e4:	ldr	r1, [r4, #44]	; 0x2c
   1b9e8:	ldr	r0, [r4, #40]	; 0x28
   1b9ec:	bl	10718 <mchar_async_free@plt>
   1b9f0:	ldr	r3, [r5, #8]
   1b9f4:	mov	r1, r4
   1b9f8:	pop	{r4, r5, r6, lr}
   1b9fc:	ldr	r0, [r3, #8]
   1ba00:	b	1004c <mcobject_async_free@plt>

0001ba04 <myhtml_attribute_delete@@Base>:
   1ba04:	cmp	r1, #0
   1ba08:	bxeq	lr
   1ba0c:	ldr	r3, [r1, #32]
   1ba10:	cmp	r3, #0
   1ba14:	bxeq	lr
   1ba18:	push	{r4, r5, r6, lr}
   1ba1c:	mov	r1, r2
   1ba20:	mov	r4, r2
   1ba24:	mov	r5, r0
   1ba28:	mov	r0, r3
   1ba2c:	bl	10574 <myhtml_token_attr_remove@plt>
   1ba30:	mov	r1, r4
   1ba34:	mov	r0, r5
   1ba38:	pop	{r4, r5, r6, lr}
   1ba3c:	b	107a8 <myhtml_attribute_free@plt>

0001ba40 <myhtml_attribute_key_raw_position@@Base>:
   1ba40:	cmp	r1, #0
   1ba44:	moveq	r3, r1
   1ba48:	ldrne	r3, [r1, #48]	; 0x30
   1ba4c:	ldrne	r1, [r1, #52]	; 0x34
   1ba50:	str	r3, [r0]
   1ba54:	str	r1, [r0, #4]
   1ba58:	bx	lr

0001ba5c <myhtml_attribute_value_raw_position@@Base>:
   1ba5c:	cmp	r1, #0
   1ba60:	moveq	r3, r1
   1ba64:	ldrne	r3, [r1, #56]	; 0x38
   1ba68:	ldrne	r1, [r1, #60]	; 0x3c
   1ba6c:	str	r3, [r0]
   1ba70:	str	r1, [r0, #4]
   1ba74:	bx	lr

0001ba78 <myhtml_collection_create@@Base>:
   1ba78:	push	{r4, r5, r6, r7, r8, lr}
   1ba7c:	mov	r6, r0
   1ba80:	mov	r0, #12
   1ba84:	mov	r5, r1
   1ba88:	bl	10c94 <mycore_malloc@plt>
   1ba8c:	subs	r4, r0, #0
   1ba90:	beq	1bac4 <myhtml_collection_create@@Base+0x4c>
   1ba94:	mov	r7, #0
   1ba98:	str	r6, [r4, #4]
   1ba9c:	lsl	r0, r6, #2
   1baa0:	str	r7, [r4, #8]
   1baa4:	bl	10c94 <mycore_malloc@plt>
   1baa8:	cmp	r0, r7
   1baac:	str	r0, [r4]
   1bab0:	beq	1bae0 <myhtml_collection_create@@Base+0x68>
   1bab4:	cmp	r5, #0
   1bab8:	strne	r7, [r5]
   1babc:	mov	r0, r4
   1bac0:	pop	{r4, r5, r6, r7, r8, pc}
   1bac4:	cmp	r5, #0
   1bac8:	beq	1bad4 <myhtml_collection_create@@Base+0x5c>
   1bacc:	mov	r3, #2
   1bad0:	str	r3, [r5]
   1bad4:	mov	r4, #0
   1bad8:	mov	r0, r4
   1badc:	pop	{r4, r5, r6, r7, r8, pc}
   1bae0:	mov	r0, r4
   1bae4:	bl	10dcc <mycore_free@plt>
   1bae8:	cmp	r5, r7
   1baec:	bne	1bacc <myhtml_collection_create@@Base+0x54>
   1baf0:	b	1bad4 <myhtml_collection_create@@Base+0x5c>

0001baf4 <myhtml_collection_check_size@@Base>:
   1baf4:	ldr	r3, [r0, #8]
   1baf8:	ldr	ip, [r0, #4]
   1bafc:	add	r1, r1, r3
   1bb00:	cmp	r1, ip
   1bb04:	bcs	1bb10 <myhtml_collection_check_size@@Base+0x1c>
   1bb08:	mov	r0, #0
   1bb0c:	bx	lr
   1bb10:	push	{r4, r5, r6, lr}
   1bb14:	add	r5, r2, #1
   1bb18:	add	r5, r5, r1
   1bb1c:	mov	r4, r0
   1bb20:	lsl	r1, r5, #2
   1bb24:	ldr	r0, [r0]
   1bb28:	bl	fbd8 <mycore_realloc@plt>
   1bb2c:	cmp	r0, #0
   1bb30:	beq	1bb40 <myhtml_collection_check_size@@Base+0x4c>
   1bb34:	stm	r4, {r0, r5}
   1bb38:	mov	r0, #0
   1bb3c:	pop	{r4, r5, r6, pc}
   1bb40:	mov	r0, #2
   1bb44:	pop	{r4, r5, r6, pc}

0001bb48 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>:
   1bb48:	push	{r4, r5, r6, r7, r8, lr}
   1bb4c:	subs	r4, r0, #0
   1bb50:	movne	r5, r1
   1bb54:	movne	r6, r2
   1bb58:	movne	r8, #0
   1bb5c:	movne	r7, #1024	; 0x400
   1bb60:	bne	1bb8c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x44>
   1bb64:	b	1bbd4 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x8c>
   1bb68:	ldr	r3, [r4, #20]
   1bb6c:	mov	r2, r6
   1bb70:	subs	r0, r3, #0
   1bb74:	mov	r1, r5
   1bb78:	beq	1bb80 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x38>
   1bb7c:	bl	10c4c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1bb80:	ldr	r4, [r4, #16]
   1bb84:	cmp	r4, #0
   1bb88:	beq	1bbd4 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x8c>
   1bb8c:	ldr	r3, [r4, #4]
   1bb90:	cmp	r3, r6
   1bb94:	bne	1bb68 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x20>
   1bb98:	ldr	r2, [r5, #8]
   1bb9c:	ldr	r0, [r5, #4]
   1bba0:	ldr	r1, [r5]
   1bba4:	add	r3, r2, #1
   1bba8:	cmp	r3, r0
   1bbac:	str	r4, [r1, r2, lsl #2]
   1bbb0:	str	r3, [r5, #8]
   1bbb4:	bcc	1bb68 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x20>
   1bbb8:	mov	r2, r8
   1bbbc:	mov	r1, r7
   1bbc0:	mov	r0, r5
   1bbc4:	bl	10dfc <myhtml_collection_check_size@plt>
   1bbc8:	cmp	r0, #0
   1bbcc:	beq	1bb68 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x20>
   1bbd0:	pop	{r4, r5, r6, r7, r8, pc}
   1bbd4:	mov	r0, #0
   1bbd8:	pop	{r4, r5, r6, r7, r8, pc}

0001bbdc <myhtml_get_nodes_by_tag_id_in_scope@@Base>:
   1bbdc:	push	{r4, r5, r6, lr}
   1bbe0:	sub	sp, sp, #16
   1bbe4:	subs	r6, r2, #0
   1bbe8:	ldr	r5, [sp, #32]
   1bbec:	beq	1bc80 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xa4>
   1bbf0:	mov	r4, r1
   1bbf4:	cmp	r1, #0
   1bbf8:	mov	r1, #0
   1bbfc:	str	r1, [sp, #12]
   1bc00:	beq	1bc48 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x6c>
   1bc04:	ldr	r0, [r6, #20]
   1bc08:	cmp	r0, #0
   1bc0c:	beq	1bc20 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x44>
   1bc10:	mov	r2, r3
   1bc14:	mov	r1, r4
   1bc18:	bl	10c4c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1bc1c:	str	r0, [sp, #12]
   1bc20:	ldr	r2, [r4, #8]
   1bc24:	ldr	r3, [r4]
   1bc28:	mov	r1, #0
   1bc2c:	cmp	r5, #0
   1bc30:	str	r1, [r3, r2, lsl #2]
   1bc34:	beq	1bc78 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x9c>
   1bc38:	str	r0, [r5]
   1bc3c:	mov	r0, r4
   1bc40:	add	sp, sp, #16
   1bc44:	pop	{r4, r5, r6, pc}
   1bc48:	add	r1, sp, #12
   1bc4c:	mov	r0, #1024	; 0x400
   1bc50:	str	r3, [sp, #4]
   1bc54:	bl	10304 <myhtml_collection_create@plt>
   1bc58:	ldr	r2, [sp, #12]
   1bc5c:	ldr	r3, [sp, #4]
   1bc60:	cmp	r2, #0
   1bc64:	beq	1bc88 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xac>
   1bc68:	cmp	r5, #0
   1bc6c:	strne	r2, [r5]
   1bc70:	add	sp, sp, #16
   1bc74:	pop	{r4, r5, r6, pc}
   1bc78:	mov	r0, r4
   1bc7c:	b	1bc40 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x64>
   1bc80:	mov	r0, r6
   1bc84:	b	1bc40 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x64>
   1bc88:	mov	r4, r0
   1bc8c:	b	1bc04 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x28>

0001bc90 <myhtml_get_nodes_by_name_in_scope@@Base>:
   1bc90:	push	{r4, r5, r6, r7, r8, lr}
   1bc94:	mov	r4, r0
   1bc98:	mov	r5, r1
   1bc9c:	mov	r7, r2
   1bca0:	mov	r1, r3
   1bca4:	ldr	r0, [r0, #28]
   1bca8:	ldr	r2, [sp, #24]
   1bcac:	ldr	r6, [sp, #28]
   1bcb0:	bl	10b74 <myhtml_tag_get_by_name@plt>
   1bcb4:	subs	r3, r0, #0
   1bcb8:	popeq	{r4, r5, r6, r7, r8, pc}
   1bcbc:	ldr	r3, [r3]
   1bcc0:	mov	r2, r7
   1bcc4:	str	r6, [sp, #24]
   1bcc8:	mov	r1, r5
   1bccc:	mov	r0, r4
   1bcd0:	pop	{r4, r5, r6, r7, r8, lr}
   1bcd4:	b	ff38 <myhtml_get_nodes_by_tag_id_in_scope@plt>

0001bcd8 <myhtml_get_nodes_by_tag_id@@Base>:
   1bcd8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bcdc:	subs	r6, r1, #0
   1bce0:	mov	r7, r0
   1bce4:	mov	r5, r2
   1bce8:	mov	sl, r3
   1bcec:	beq	1bdb8 <myhtml_get_nodes_by_tag_id@@Base+0xe0>
   1bcf0:	ldr	r4, [r7, #96]	; 0x60
   1bcf4:	cmp	r4, #0
   1bcf8:	beq	1bd48 <myhtml_get_nodes_by_tag_id@@Base+0x70>
   1bcfc:	mov	r9, #1024	; 0x400
   1bd00:	mov	r8, #1
   1bd04:	b	1bd0c <myhtml_get_nodes_by_tag_id@@Base+0x34>
   1bd08:	mov	r4, r3
   1bd0c:	ldr	r3, [r4, #4]
   1bd10:	cmp	r3, r5
   1bd14:	beq	1bd74 <myhtml_get_nodes_by_tag_id@@Base+0x9c>
   1bd18:	ldr	r3, [r4, #20]
   1bd1c:	cmp	r3, #0
   1bd20:	bne	1bd08 <myhtml_get_nodes_by_tag_id@@Base+0x30>
   1bd24:	ldr	r2, [r7, #96]	; 0x60
   1bd28:	cmp	r2, r4
   1bd2c:	beq	1bd48 <myhtml_get_nodes_by_tag_id@@Base+0x70>
   1bd30:	ldr	r3, [r4, #16]
   1bd34:	cmp	r3, #0
   1bd38:	bne	1bd08 <myhtml_get_nodes_by_tag_id@@Base+0x30>
   1bd3c:	ldr	r4, [r4, #24]
   1bd40:	cmp	r2, r4
   1bd44:	bne	1bd30 <myhtml_get_nodes_by_tag_id@@Base+0x58>
   1bd48:	mov	r2, #1024	; 0x400
   1bd4c:	mov	r1, #1
   1bd50:	mov	r0, r6
   1bd54:	bl	10dfc <myhtml_collection_check_size@plt>
   1bd58:	cmp	r0, #0
   1bd5c:	beq	1bda4 <myhtml_get_nodes_by_tag_id@@Base+0xcc>
   1bd60:	cmp	sl, #0
   1bd64:	movne	r3, #2
   1bd68:	strne	r3, [sl]
   1bd6c:	mov	r0, r6
   1bd70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bd74:	mov	r2, r9
   1bd78:	mov	r1, r8
   1bd7c:	mov	r0, r6
   1bd80:	bl	10dfc <myhtml_collection_check_size@plt>
   1bd84:	cmp	r0, #0
   1bd88:	bne	1bd60 <myhtml_get_nodes_by_tag_id@@Base+0x88>
   1bd8c:	ldr	r3, [r6, #8]
   1bd90:	ldr	r1, [r6]
   1bd94:	add	r2, r3, #1
   1bd98:	str	r4, [r1, r3, lsl #2]
   1bd9c:	str	r2, [r6, #8]
   1bda0:	b	1bd18 <myhtml_get_nodes_by_tag_id@@Base+0x40>
   1bda4:	ldr	r2, [r6, #8]
   1bda8:	ldr	r3, [r6]
   1bdac:	str	r0, [r3, r2, lsl #2]
   1bdb0:	mov	r0, r6
   1bdb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bdb8:	mov	r0, #1024	; 0x400
   1bdbc:	bl	10304 <myhtml_collection_create@plt>
   1bdc0:	subs	r6, r0, #0
   1bdc4:	bne	1bcf0 <myhtml_get_nodes_by_tag_id@@Base+0x18>
   1bdc8:	b	1bd6c <myhtml_get_nodes_by_tag_id@@Base+0x94>

0001bdcc <myhtml_get_nodes_by_name@@Base>:
   1bdcc:	push	{r4, r5, r6, lr}
   1bdd0:	mov	r4, r0
   1bdd4:	mov	r0, r2
   1bdd8:	mov	r5, r1
   1bddc:	mov	r2, r3
   1bde0:	mov	r1, r0
   1bde4:	ldr	r0, [r4, #28]
   1bde8:	ldr	r6, [sp, #16]
   1bdec:	bl	10b74 <myhtml_tag_get_by_name@plt>
   1bdf0:	subs	r2, r0, #0
   1bdf4:	popeq	{r4, r5, r6, pc}
   1bdf8:	mov	r3, r6
   1bdfc:	mov	r1, r5
   1be00:	mov	r0, r4
   1be04:	ldr	r2, [r2]
   1be08:	pop	{r4, r5, r6, lr}
   1be0c:	b	1031c <myhtml_get_nodes_by_tag_id@plt>

0001be10 <myhtml_get_nodes_by_attribute_key_recursion@@Base>:
   1be10:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be14:	subs	r8, r0, #0
   1be18:	beq	1bee8 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xd8>
   1be1c:	mov	r5, r3
   1be20:	mov	r7, r2
   1be24:	mov	fp, r1
   1be28:	mov	r6, r8
   1be2c:	mov	sl, #0
   1be30:	mov	r9, #1024	; 0x400
   1be34:	ldr	r3, [r6, #32]
   1be38:	cmp	r3, #0
   1be3c:	beq	1bebc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1be40:	ldr	r4, [r3, #40]	; 0x28
   1be44:	cmp	r4, #0
   1be48:	bne	1be5c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1be4c:	b	1bebc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1be50:	ldr	r4, [r4]
   1be54:	cmp	r4, #0
   1be58:	beq	1bebc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1be5c:	ldr	r0, [r4, #16]
   1be60:	cmp	r0, r5
   1be64:	bne	1be50 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1be68:	mov	r2, r5
   1be6c:	mov	r1, r7
   1be70:	ldr	r0, [r4, #8]
   1be74:	bl	102a4 <mycore_strncasecmp@plt>
   1be78:	cmp	r0, #0
   1be7c:	bne	1be50 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1be80:	ldr	r2, [fp, #8]
   1be84:	ldr	r0, [fp, #4]
   1be88:	ldr	r1, [fp]
   1be8c:	add	r3, r2, #1
   1be90:	cmp	r3, r0
   1be94:	str	r6, [r1, r2, lsl #2]
   1be98:	str	r3, [fp, #8]
   1be9c:	bcc	1be50 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1bea0:	mov	r2, sl
   1bea4:	mov	r1, r9
   1bea8:	mov	r0, fp
   1beac:	bl	10dfc <myhtml_collection_check_size@plt>
   1beb0:	cmp	r0, #0
   1beb4:	beq	1be50 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1beb8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bebc:	ldr	r3, [r6, #20]
   1bec0:	cmp	r3, #0
   1bec4:	beq	1bed0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xc0>
   1bec8:	mov	r6, r3
   1becc:	b	1be34 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x24>
   1bed0:	ldr	r3, [r6, #16]
   1bed4:	cmp	r3, #0
   1bed8:	bne	1bec8 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xb8>
   1bedc:	ldr	r6, [r6, #24]
   1bee0:	cmp	r8, r6
   1bee4:	bne	1bed0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xc0>
   1bee8:	mov	r0, #0
   1beec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001bef0 <myhtml_get_nodes_by_attribute_key@@Base>:
   1bef0:	push	{r4, r5, r6, r7, lr}
   1bef4:	sub	sp, sp, #12
   1bef8:	subs	r5, r1, #0
   1befc:	mov	r7, r0
   1bf00:	mov	r4, r2
   1bf04:	ldr	r6, [sp, #36]	; 0x24
   1bf08:	beq	1bf40 <myhtml_get_nodes_by_attribute_key@@Base+0x50>
   1bf0c:	cmp	r4, #0
   1bf10:	mov	r2, r3
   1bf14:	ldreq	r4, [r7, #96]	; 0x60
   1bf18:	ldr	r3, [sp, #32]
   1bf1c:	mov	r0, r4
   1bf20:	mov	r1, r5
   1bf24:	bl	fea8 <myhtml_get_nodes_by_attribute_key_recursion@plt>
   1bf28:	cmp	r0, #0
   1bf2c:	cmpne	r6, #0
   1bf30:	strne	r0, [r6]
   1bf34:	mov	r0, r5
   1bf38:	add	sp, sp, #12
   1bf3c:	pop	{r4, r5, r6, r7, pc}
   1bf40:	mov	r1, r6
   1bf44:	mov	r0, #1024	; 0x400
   1bf48:	str	r3, [sp, #4]
   1bf4c:	bl	10304 <myhtml_collection_create@plt>
   1bf50:	cmp	r6, #0
   1bf54:	ldr	r3, [sp, #4]
   1bf58:	beq	1bf68 <myhtml_get_nodes_by_attribute_key@@Base+0x78>
   1bf5c:	ldr	r2, [r6]
   1bf60:	cmp	r2, #0
   1bf64:	bne	1bf34 <myhtml_get_nodes_by_attribute_key@@Base+0x44>
   1bf68:	subs	r5, r0, #0
   1bf6c:	bne	1bf0c <myhtml_get_nodes_by_attribute_key@@Base+0x1c>
   1bf70:	b	1bf34 <myhtml_get_nodes_by_attribute_key@@Base+0x44>

0001bf74 <myhtml_get_nodes_by_attribute_value_recursion@@Base>:
   1bf74:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf78:	subs	r9, r0, #0
   1bf7c:	ldr	r8, [sp, #40]	; 0x28
   1bf80:	beq	1c03c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc8>
   1bf84:	mov	r7, r3
   1bf88:	mov	r6, r2
   1bf8c:	mov	sl, r1
   1bf90:	mov	r5, r9
   1bf94:	mov	fp, #0
   1bf98:	ldr	r2, [r5, #32]
   1bf9c:	cmp	r2, #0
   1bfa0:	beq	1c010 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x9c>
   1bfa4:	ldr	r4, [r2, #40]	; 0x28
   1bfa8:	cmp	r4, #0
   1bfac:	bne	1bfc0 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x4c>
   1bfb0:	b	1c010 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x9c>
   1bfb4:	ldr	r4, [r4]
   1bfb8:	cmp	r4, #0
   1bfbc:	beq	1c010 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x9c>
   1bfc0:	mov	r2, r8
   1bfc4:	mov	r1, r7
   1bfc8:	add	r0, r4, #28
   1bfcc:	blx	r6
   1bfd0:	cmp	r0, #0
   1bfd4:	beq	1bfb4 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x40>
   1bfd8:	ldr	r1, [sl, #8]
   1bfdc:	ldm	sl, {r0, ip}
   1bfe0:	add	r2, r1, #1
   1bfe4:	cmp	r2, ip
   1bfe8:	str	r5, [r0, r1, lsl #2]
   1bfec:	str	r2, [sl, #8]
   1bff0:	bcc	1bfb4 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x40>
   1bff4:	mov	r2, fp
   1bff8:	mov	r1, #1024	; 0x400
   1bffc:	mov	r0, sl
   1c000:	bl	10dfc <myhtml_collection_check_size@plt>
   1c004:	cmp	r0, #0
   1c008:	beq	1bfb4 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x40>
   1c00c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c010:	ldr	r2, [r5, #20]
   1c014:	cmp	r2, #0
   1c018:	beq	1c024 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xb0>
   1c01c:	mov	r5, r2
   1c020:	b	1bf98 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x24>
   1c024:	ldr	r2, [r5, #16]
   1c028:	cmp	r2, #0
   1c02c:	bne	1c01c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xa8>
   1c030:	ldr	r5, [r5, #24]
   1c034:	cmp	r9, r5
   1c038:	bne	1c024 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xb0>
   1c03c:	mov	r0, #0
   1c040:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c044 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base>:
   1c044:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c048:	subs	r7, r0, #0
   1c04c:	ldr	r5, [sp, #40]	; 0x28
   1c050:	beq	1c130 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xec>
   1c054:	mov	r6, r3
   1c058:	mov	r9, r2
   1c05c:	mov	r8, r1
   1c060:	mov	sl, r7
   1c064:	mov	fp, #0
   1c068:	ldr	r2, [sl, #32]
   1c06c:	cmp	r2, #0
   1c070:	beq	1c104 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xc0>
   1c074:	ldr	r4, [r2, #40]	; 0x28
   1c078:	cmp	r4, #0
   1c07c:	bne	1c090 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x4c>
   1c080:	b	1c104 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xc0>
   1c084:	ldr	r4, [r4]
   1c088:	cmp	r4, #0
   1c08c:	beq	1c104 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xc0>
   1c090:	ldr	r2, [r4, #16]
   1c094:	cmp	r2, r5
   1c098:	bne	1c084 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x40>
   1c09c:	mov	r2, r5
   1c0a0:	mov	r1, r6
   1c0a4:	ldr	r0, [r4, #8]
   1c0a8:	bl	102a4 <mycore_strncasecmp@plt>
   1c0ac:	cmp	r0, #0
   1c0b0:	bne	1c084 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x40>
   1c0b4:	ldr	r2, [sp, #48]	; 0x30
   1c0b8:	ldr	r1, [sp, #44]	; 0x2c
   1c0bc:	add	r0, r4, #28
   1c0c0:	blx	r9
   1c0c4:	cmp	r0, #0
   1c0c8:	beq	1c084 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x40>
   1c0cc:	ldr	r1, [r8, #8]
   1c0d0:	ldm	r8, {r0, ip}
   1c0d4:	add	r2, r1, #1
   1c0d8:	cmp	r2, ip
   1c0dc:	str	sl, [r0, r1, lsl #2]
   1c0e0:	str	r2, [r8, #8]
   1c0e4:	bcc	1c084 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x40>
   1c0e8:	mov	r2, fp
   1c0ec:	mov	r1, #1024	; 0x400
   1c0f0:	mov	r0, r8
   1c0f4:	bl	10dfc <myhtml_collection_check_size@plt>
   1c0f8:	cmp	r0, #0
   1c0fc:	beq	1c084 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x40>
   1c100:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c104:	ldr	r2, [sl, #20]
   1c108:	cmp	r2, #0
   1c10c:	beq	1c118 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xd4>
   1c110:	mov	sl, r2
   1c114:	b	1c068 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x24>
   1c118:	ldr	r2, [sl, #16]
   1c11c:	cmp	r2, #0
   1c120:	bne	1c110 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xcc>
   1c124:	ldr	sl, [sl, #24]
   1c128:	cmp	r7, sl
   1c12c:	bne	1c118 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xd4>
   1c130:	mov	r0, #0
   1c134:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c138 <_myhtml_get_nodes_by_attribute_value@@Base>:
   1c138:	push	{r4, r5, r6, r7, r8, lr}
   1c13c:	sub	sp, sp, #24
   1c140:	subs	r5, r1, #0
   1c144:	mov	r4, r2
   1c148:	mov	r8, r0
   1c14c:	mov	r2, r3
   1c150:	ldr	r7, [sp, #52]	; 0x34
   1c154:	ldr	r3, [sp, #48]	; 0x30
   1c158:	ldr	r6, [sp, #64]	; 0x40
   1c15c:	beq	1c1c8 <_myhtml_get_nodes_by_attribute_value@@Base+0x90>
   1c160:	cmp	r4, #0
   1c164:	ldreq	r4, [r8, #96]	; 0x60
   1c168:	cmp	r3, #0
   1c16c:	cmpne	r7, #0
   1c170:	bne	1c1a4 <_myhtml_get_nodes_by_attribute_value@@Base+0x6c>
   1c174:	ldr	r3, [sp, #60]	; 0x3c
   1c178:	mov	r0, r4
   1c17c:	str	r3, [sp]
   1c180:	mov	r1, r5
   1c184:	ldr	r3, [sp, #56]	; 0x38
   1c188:	bl	fbcc <myhtml_get_nodes_by_attribute_value_recursion@plt>
   1c18c:	cmp	r0, #0
   1c190:	cmpne	r6, #0
   1c194:	strne	r0, [r6]
   1c198:	mov	r0, r5
   1c19c:	add	sp, sp, #24
   1c1a0:	pop	{r4, r5, r6, r7, r8, pc}
   1c1a4:	ldr	r1, [sp, #60]	; 0x3c
   1c1a8:	str	r7, [sp]
   1c1ac:	str	r1, [sp, #8]
   1c1b0:	ldr	r1, [sp, #56]	; 0x38
   1c1b4:	mov	r0, r4
   1c1b8:	str	r1, [sp, #4]
   1c1bc:	mov	r1, r5
   1c1c0:	bl	fdf4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>
   1c1c4:	b	1c18c <_myhtml_get_nodes_by_attribute_value@@Base+0x54>
   1c1c8:	mov	r1, r6
   1c1cc:	mov	r0, #1024	; 0x400
   1c1d0:	str	r3, [sp, #20]
   1c1d4:	str	r2, [sp, #16]
   1c1d8:	bl	10304 <myhtml_collection_create@plt>
   1c1dc:	cmp	r6, #0
   1c1e0:	ldr	r2, [sp, #16]
   1c1e4:	ldr	r3, [sp, #20]
   1c1e8:	beq	1c1f8 <_myhtml_get_nodes_by_attribute_value@@Base+0xc0>
   1c1ec:	ldr	r1, [r6]
   1c1f0:	cmp	r1, #0
   1c1f4:	bne	1c198 <_myhtml_get_nodes_by_attribute_value@@Base+0x60>
   1c1f8:	subs	r5, r0, #0
   1c1fc:	bne	1c160 <_myhtml_get_nodes_by_attribute_value@@Base+0x28>
   1c200:	b	1c198 <_myhtml_get_nodes_by_attribute_value@@Base+0x60>

0001c204 <myhtml_get_nodes_by_attribute_value@@Base>:
   1c204:	push	{r4, r5, r6, r7, lr}
   1c208:	cmp	r3, #0
   1c20c:	add	r4, sp, #28
   1c210:	ldr	r3, [pc, #68]	; 1c25c <myhtml_get_nodes_by_attribute_value@@Base+0x58>
   1c214:	ldr	ip, [sp, #20]
   1c218:	add	r3, pc, r3
   1c21c:	ldr	lr, [sp, #24]
   1c220:	ldm	r4, {r4, r5, r6}
   1c224:	bne	1c24c <myhtml_get_nodes_by_attribute_value@@Base+0x48>
   1c228:	ldr	r7, [pc, #48]	; 1c260 <myhtml_get_nodes_by_attribute_value@@Base+0x5c>
   1c22c:	ldr	r3, [r3, r7]
   1c230:	str	r6, [sp, #36]	; 0x24
   1c234:	str	r5, [sp, #32]
   1c238:	str	r4, [sp, #28]
   1c23c:	str	lr, [sp, #24]
   1c240:	str	ip, [sp, #20]
   1c244:	pop	{r4, r5, r6, r7, lr}
   1c248:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c24c:	ldr	r7, [pc, #16]	; 1c264 <myhtml_get_nodes_by_attribute_value@@Base+0x60>
   1c250:	ldr	r3, [r3, r7]
   1c254:	pop	{r4, r5, r6, r7, lr}
   1c258:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c25c:	andeq	r9, pc, r0, ror #27
   1c260:	andeq	r0, r0, ip, lsr #17
   1c264:	andeq	r0, r0, r4, lsl #17

0001c268 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base>:
   1c268:	push	{r4, r5, r6, r7, lr}
   1c26c:	cmp	r3, #0
   1c270:	add	r4, sp, #28
   1c274:	ldr	r3, [pc, #68]	; 1c2c0 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x58>
   1c278:	ldr	ip, [sp, #20]
   1c27c:	add	r3, pc, r3
   1c280:	ldr	lr, [sp, #24]
   1c284:	ldm	r4, {r4, r5, r6}
   1c288:	bne	1c2b0 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x48>
   1c28c:	ldr	r7, [pc, #48]	; 1c2c4 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x5c>
   1c290:	ldr	r3, [r3, r7]
   1c294:	str	r6, [sp, #36]	; 0x24
   1c298:	str	r5, [sp, #32]
   1c29c:	str	r4, [sp, #28]
   1c2a0:	str	lr, [sp, #24]
   1c2a4:	str	ip, [sp, #20]
   1c2a8:	pop	{r4, r5, r6, r7, lr}
   1c2ac:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c2b0:	ldr	r7, [pc, #16]	; 1c2c8 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x60>
   1c2b4:	ldr	r3, [r3, r7]
   1c2b8:	pop	{r4, r5, r6, r7, lr}
   1c2bc:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c2c0:	andeq	r9, pc, ip, ror sp	; <UNPREDICTABLE>
   1c2c4:	andeq	r0, r0, r8, lsr #18
   1c2c8:	andeq	r0, r0, r8, lsl r7

0001c2cc <myhtml_get_nodes_by_attribute_value_begin@@Base>:
   1c2cc:	push	{r4, r5, r6, r7, lr}
   1c2d0:	cmp	r3, #0
   1c2d4:	add	r4, sp, #28
   1c2d8:	ldr	r3, [pc, #68]	; 1c324 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x58>
   1c2dc:	ldr	ip, [sp, #20]
   1c2e0:	add	r3, pc, r3
   1c2e4:	ldr	lr, [sp, #24]
   1c2e8:	ldm	r4, {r4, r5, r6}
   1c2ec:	bne	1c314 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x48>
   1c2f0:	ldr	r7, [pc, #48]	; 1c328 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x5c>
   1c2f4:	ldr	r3, [r3, r7]
   1c2f8:	str	r6, [sp, #36]	; 0x24
   1c2fc:	str	r5, [sp, #32]
   1c300:	str	r4, [sp, #28]
   1c304:	str	lr, [sp, #24]
   1c308:	str	ip, [sp, #20]
   1c30c:	pop	{r4, r5, r6, r7, lr}
   1c310:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c314:	ldr	r7, [pc, #16]	; 1c32c <myhtml_get_nodes_by_attribute_value_begin@@Base+0x60>
   1c318:	ldr	r3, [r3, r7]
   1c31c:	pop	{r4, r5, r6, r7, lr}
   1c320:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c324:	andeq	r9, pc, r8, lsl sp	; <UNPREDICTABLE>
   1c328:	andeq	r0, r0, r4, ror #14
   1c32c:	andeq	r0, r0, r4, ror r7

0001c330 <myhtml_get_nodes_by_attribute_value_end@@Base>:
   1c330:	push	{r4, r5, r6, r7, lr}
   1c334:	cmp	r3, #0
   1c338:	add	r4, sp, #28
   1c33c:	ldr	r3, [pc, #68]	; 1c388 <myhtml_get_nodes_by_attribute_value_end@@Base+0x58>
   1c340:	ldr	ip, [sp, #20]
   1c344:	add	r3, pc, r3
   1c348:	ldr	lr, [sp, #24]
   1c34c:	ldm	r4, {r4, r5, r6}
   1c350:	bne	1c378 <myhtml_get_nodes_by_attribute_value_end@@Base+0x48>
   1c354:	ldr	r7, [pc, #48]	; 1c38c <myhtml_get_nodes_by_attribute_value_end@@Base+0x5c>
   1c358:	ldr	r3, [r3, r7]
   1c35c:	str	r6, [sp, #36]	; 0x24
   1c360:	str	r5, [sp, #32]
   1c364:	str	r4, [sp, #28]
   1c368:	str	lr, [sp, #24]
   1c36c:	str	ip, [sp, #20]
   1c370:	pop	{r4, r5, r6, r7, lr}
   1c374:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c378:	ldr	r7, [pc, #16]	; 1c390 <myhtml_get_nodes_by_attribute_value_end@@Base+0x60>
   1c37c:	ldr	r3, [r3, r7]
   1c380:	pop	{r4, r5, r6, r7, lr}
   1c384:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c388:			; <UNDEFINED> instruction: 0x000f9cb4
   1c38c:	strdeq	r0, [r0], -r4
   1c390:	andeq	r0, r0, r4, lsl #19

0001c394 <myhtml_get_nodes_by_attribute_value_contain@@Base>:
   1c394:	push	{r4, r5, r6, r7, lr}
   1c398:	cmp	r3, #0
   1c39c:	add	r4, sp, #28
   1c3a0:	ldr	r3, [pc, #68]	; 1c3ec <myhtml_get_nodes_by_attribute_value_contain@@Base+0x58>
   1c3a4:	ldr	ip, [sp, #20]
   1c3a8:	add	r3, pc, r3
   1c3ac:	ldr	lr, [sp, #24]
   1c3b0:	ldm	r4, {r4, r5, r6}
   1c3b4:	bne	1c3dc <myhtml_get_nodes_by_attribute_value_contain@@Base+0x48>
   1c3b8:	ldr	r7, [pc, #48]	; 1c3f0 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x5c>
   1c3bc:	ldr	r3, [r3, r7]
   1c3c0:	str	r6, [sp, #36]	; 0x24
   1c3c4:	str	r5, [sp, #32]
   1c3c8:	str	r4, [sp, #28]
   1c3cc:	str	lr, [sp, #24]
   1c3d0:	str	ip, [sp, #20]
   1c3d4:	pop	{r4, r5, r6, r7, lr}
   1c3d8:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c3dc:	ldr	r7, [pc, #16]	; 1c3f4 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x60>
   1c3e0:	ldr	r3, [r3, r7]
   1c3e4:	pop	{r4, r5, r6, r7, lr}
   1c3e8:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c3ec:	andeq	r9, pc, r0, asr ip	; <UNPREDICTABLE>
   1c3f0:	andeq	r0, r0, r8, lsl #17
   1c3f4:	andeq	r0, r0, r8, ror #14

0001c3f8 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base>:
   1c3f8:	push	{r4, r5, r6, r7, lr}
   1c3fc:	cmp	r3, #0
   1c400:	add	r4, sp, #28
   1c404:	ldr	r3, [pc, #68]	; 1c450 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x58>
   1c408:	ldr	ip, [sp, #20]
   1c40c:	add	r3, pc, r3
   1c410:	ldr	lr, [sp, #24]
   1c414:	ldm	r4, {r4, r5, r6}
   1c418:	bne	1c440 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x48>
   1c41c:	ldr	r7, [pc, #48]	; 1c454 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x5c>
   1c420:	ldr	r3, [r3, r7]
   1c424:	str	r6, [sp, #36]	; 0x24
   1c428:	str	r5, [sp, #32]
   1c42c:	str	r4, [sp, #28]
   1c430:	str	lr, [sp, #24]
   1c434:	str	ip, [sp, #20]
   1c438:	pop	{r4, r5, r6, r7, lr}
   1c43c:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c440:	ldr	r7, [pc, #16]	; 1c458 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x60>
   1c444:	ldr	r3, [r3, r7]
   1c448:	pop	{r4, r5, r6, r7, lr}
   1c44c:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c450:	andeq	r9, pc, ip, ror #23
   1c454:	andeq	r0, r0, r0, ror r8
   1c458:	andeq	r0, r0, r4, lsl #16

0001c45c <myhtml_collection_clean@@Base>:
   1c45c:	cmp	r0, #0
   1c460:	movne	r3, #0
   1c464:	strne	r3, [r0, #8]
   1c468:	bx	lr

0001c46c <myhtml_collection_destroy@@Base>:
   1c46c:	push	{r4, lr}
   1c470:	subs	r4, r0, #0
   1c474:	beq	1c490 <myhtml_collection_destroy@@Base+0x24>
   1c478:	ldr	r0, [r4]
   1c47c:	cmp	r0, #0
   1c480:	beq	1c488 <myhtml_collection_destroy@@Base+0x1c>
   1c484:	bl	10dcc <mycore_free@plt>
   1c488:	mov	r0, r4
   1c48c:	bl	10dcc <mycore_free@plt>
   1c490:	mov	r0, #0
   1c494:	pop	{r4, pc}

0001c498 <myhtml_queue_add@@Base>:
   1c498:	ldr	r3, [r0, #184]	; 0xb8
   1c49c:	push	{r4, r5, r6, r7, r8, lr}
   1c4a0:	adds	r5, r2, #0
   1c4a4:	movne	r5, #1
   1c4a8:	ands	r3, r5, r3, lsr #2
   1c4ac:	mov	r4, r0
   1c4b0:	mov	r7, r1
   1c4b4:	mov	r8, r2
   1c4b8:	ldr	r6, [r0, #68]	; 0x44
   1c4bc:	beq	1c4cc <myhtml_queue_add@@Base+0x34>
   1c4c0:	ldr	r3, [r2]
   1c4c4:	cmp	r3, #1
   1c4c8:	beq	1c5b4 <myhtml_queue_add@@Base+0x11c>
   1c4cc:	ldr	r3, [r4, #180]	; 0xb4
   1c4d0:	tst	r3, #16
   1c4d4:	bne	1c564 <myhtml_queue_add@@Base+0xcc>
   1c4d8:	ldr	r3, [r4]
   1c4dc:	cmp	r6, #0
   1c4e0:	strne	r8, [r6, #4]
   1c4e4:	ldr	r1, [r4, #20]
   1c4e8:	ldr	r0, [r3]
   1c4ec:	bl	10538 <mythread_queue_node_malloc_round@plt>
   1c4f0:	ldr	r1, [r4, #20]
   1c4f4:	ldr	r3, [r1]
   1c4f8:	ldr	r3, [r3, #12]
   1c4fc:	cmp	r3, #0
   1c500:	str	r0, [r4, #68]	; 0x44
   1c504:	beq	1c600 <myhtml_queue_add@@Base+0x168>
   1c508:	cmp	r0, #0
   1c50c:	beq	1c59c <myhtml_queue_add@@Base+0x104>
   1c510:	cmp	r6, #0
   1c514:	moveq	r5, #0
   1c518:	andne	r5, r5, #1
   1c51c:	cmp	r5, #0
   1c520:	str	r4, [r0]
   1c524:	str	r6, [r0, #8]
   1c528:	bne	1c5a4 <myhtml_queue_add@@Base+0x10c>
   1c52c:	ldr	r3, [r4, #8]
   1c530:	mov	r0, r3
   1c534:	ldr	r1, [r3, #12]
   1c538:	bl	10a0c <myhtml_token_node_create@plt>
   1c53c:	cmp	r0, #0
   1c540:	mov	r3, r0
   1c544:	str	r0, [r4, #64]	; 0x40
   1c548:	beq	1c59c <myhtml_queue_add@@Base+0x104>
   1c54c:	ldr	r1, [r4, #192]	; 0xc0
   1c550:	mov	r0, #0
   1c554:	add	r1, r7, r1
   1c558:	str	r1, [r3, #32]
   1c55c:	str	r1, [r3, #24]
   1c560:	pop	{r4, r5, r6, r7, r8, pc}
   1c564:	cmp	r6, #0
   1c568:	moveq	r3, #0
   1c56c:	andne	r3, r5, #1
   1c570:	cmp	r3, #0
   1c574:	bne	1c5e0 <myhtml_queue_add@@Base+0x148>
   1c578:	ldr	r1, [r4]
   1c57c:	mov	r3, #0
   1c580:	mov	r2, #4
   1c584:	ldr	r0, [r1]
   1c588:	ldr	r1, [r4, #24]
   1c58c:	bl	10cac <mythread_queue_node_malloc_limit@plt>
   1c590:	cmp	r0, #0
   1c594:	str	r0, [r4, #68]	; 0x44
   1c598:	bne	1c510 <myhtml_queue_add@@Base+0x78>
   1c59c:	mov	r0, #2
   1c5a0:	pop	{r4, r5, r6, r7, r8, pc}
   1c5a4:	mov	r1, r8
   1c5a8:	mov	r0, r4
   1c5ac:	bl	1022c <myhtml_tokenizer_calc_current_namespace@plt>
   1c5b0:	b	1c52c <myhtml_queue_add@@Base+0x94>
   1c5b4:	ldr	r3, [r2, #48]	; 0x30
   1c5b8:	tst	r3, #8
   1c5bc:	beq	1c4cc <myhtml_queue_add@@Base+0x34>
   1c5c0:	mov	r0, r2
   1c5c4:	bl	10f7c <myhtml_token_node_clean@plt>
   1c5c8:	ldr	r1, [r4, #192]	; 0xc0
   1c5cc:	mov	r0, #0
   1c5d0:	add	r1, r7, r1
   1c5d4:	str	r1, [r8, #32]
   1c5d8:	str	r1, [r8, #24]
   1c5dc:	pop	{r4, r5, r6, r7, r8, pc}
   1c5e0:	mov	r1, r6
   1c5e4:	str	r8, [r6, #4]
   1c5e8:	mov	r0, #0
   1c5ec:	bl	fd7c <myhtml_parser_worker@plt>
   1c5f0:	mov	r1, r6
   1c5f4:	mov	r0, #0
   1c5f8:	bl	10ff4 <myhtml_parser_stream@plt>
   1c5fc:	b	1c578 <myhtml_queue_add@@Base+0xe0>
   1c600:	ldr	r3, [r4]
   1c604:	ldr	r0, [r3, #4]
   1c608:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   1c60c:	ldr	r3, [r4]
   1c610:	ldr	r1, [r4, #20]
   1c614:	ldr	r0, [r3]
   1c618:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   1c61c:	ldr	r0, [r4, #68]	; 0x44
   1c620:	b	1c508 <myhtml_queue_add@@Base+0x70>

0001c624 <myhtml_utils_strcmp@@Base>:
   1c624:	cmp	r2, #0
   1c628:	beq	1c674 <myhtml_utils_strcmp@@Base+0x50>
   1c62c:	push	{lr}		; (str lr, [sp, #-4]!)
   1c630:	add	r2, r1, r2
   1c634:	sub	r0, r0, #1
   1c638:	b	1c644 <myhtml_utils_strcmp@@Base+0x20>
   1c63c:	cmp	r1, r2
   1c640:	beq	1c66c <myhtml_utils_strcmp@@Base+0x48>
   1c644:	ldrb	r3, [r1], #1
   1c648:	sub	lr, r3, #65	; 0x41
   1c64c:	cmp	lr, #25
   1c650:	mov	ip, r3
   1c654:	orrls	ip, r3, #96	; 0x60
   1c658:	ldrb	r3, [r0, #1]!
   1c65c:	cmp	ip, r3
   1c660:	beq	1c63c <myhtml_utils_strcmp@@Base+0x18>
   1c664:	mov	r0, #0
   1c668:	pop	{pc}		; (ldr pc, [sp], #4)
   1c66c:	mov	r0, #1
   1c670:	pop	{pc}		; (ldr pc, [sp], #4)
   1c674:	mov	r0, #1
   1c678:	bx	lr

0001c67c <myhtml_is_html_node@@Base>:
   1c67c:	cmp	r0, #0
   1c680:	bxeq	lr
   1c684:	ldr	r3, [r0, #4]
   1c688:	cmp	r3, r1
   1c68c:	ldreq	r0, [r0, #8]
   1c690:	subeq	r0, r0, #1
   1c694:	clzeq	r0, r0
   1c698:	lsreq	r0, r0, #5
   1c69c:	movne	r0, #0
   1c6a0:	bx	lr

0001c6a4 <myhtml_version@@Base>:
   1c6a4:	ldr	r3, [pc, #20]	; 1c6c0 <myhtml_version@@Base+0x1c>
   1c6a8:	mov	ip, r0
   1c6ac:	add	r3, pc, r3
   1c6b0:	ldm	r3, {r0, r1, r2}
   1c6b4:	stm	ip, {r0, r1, r2}
   1c6b8:	mov	r0, ip
   1c6bc:	bx	lr
   1c6c0:	andeq	pc, sp, r8, lsl #7

0001c6c4 <myhtml_node_clone@@Base>:
   1c6c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c6c8:	sub	sp, sp, #12
   1c6cc:	mov	r5, r1
   1c6d0:	mov	r6, r0
   1c6d4:	bl	ffe0 <myhtml_tree_node_create@plt>
   1c6d8:	ldr	r7, [r5, #4]
   1c6dc:	cmp	r7, #251	; 0xfb
   1c6e0:	mov	r4, r0
   1c6e4:	bhi	1c72c <myhtml_node_clone@@Base+0x68>
   1c6e8:	ldr	r3, [r6, #44]	; 0x2c
   1c6ec:	ldr	r2, [r6, #40]	; 0x28
   1c6f0:	ldr	r0, [r6, #8]
   1c6f4:	ldr	r1, [r5, #32]
   1c6f8:	bl	ff2c <myhtml_token_node_clone@plt>
   1c6fc:	ldr	r3, [r5, #8]
   1c700:	str	r7, [r4, #4]
   1c704:	str	r3, [r4, #8]
   1c708:	cmp	r0, #0
   1c70c:	str	r0, [r4, #32]
   1c710:	ldrne	r3, [r0, #48]	; 0x30
   1c714:	strne	r7, [r0]
   1c718:	orrne	r3, r3, #4
   1c71c:	strne	r3, [r0, #48]	; 0x30
   1c720:	mov	r0, r4
   1c724:	add	sp, sp, #12
   1c728:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c72c:	mov	r1, r7
   1c730:	ldr	r0, [r6, #28]
   1c734:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1c738:	ldr	r3, [r5, #40]	; 0x28
   1c73c:	ldr	r1, [r5, #4]
   1c740:	mov	r9, r0
   1c744:	ldr	r0, [r3, #28]
   1c748:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1c74c:	cmp	r9, #0
   1c750:	mov	r8, r0
   1c754:	ldr	r2, [r0, #8]
   1c758:	beq	1c768 <myhtml_node_clone@@Base+0xa4>
   1c75c:	ldr	r3, [r9, #8]
   1c760:	cmp	r3, r2
   1c764:	beq	1c788 <myhtml_node_clone@@Base+0xc4>
   1c768:	mov	r3, #1
   1c76c:	ldr	r1, [r8, #4]
   1c770:	ldr	r0, [r6, #28]
   1c774:	str	r3, [sp]
   1c778:	mov	r3, #0
   1c77c:	bl	10010 <myhtml_tag_add@plt>
   1c780:	mov	r7, r0
   1c784:	b	1c6e8 <myhtml_node_clone@@Base+0x24>
   1c788:	ldr	r0, [r9, #4]
   1c78c:	ldr	r1, [r8, #4]
   1c790:	bl	10eec <mycore_strncmp@plt>
   1c794:	cmp	r0, #0
   1c798:	beq	1c6e8 <myhtml_node_clone@@Base+0x24>
   1c79c:	ldr	r2, [r8, #8]
   1c7a0:	b	1c768 <myhtml_node_clone@@Base+0xa4>

0001c7a4 <myhtml_node_clone_deep@@Base>:
   1c7a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c7a8:	subs	r7, r1, #0
   1c7ac:	mov	r8, r0
   1c7b0:	beq	1c7d0 <myhtml_node_clone_deep@@Base+0x2c>
   1c7b4:	ldr	r3, [r7, #40]	; 0x28
   1c7b8:	cmp	r3, #0
   1c7bc:	beq	1c7d0 <myhtml_node_clone_deep@@Base+0x2c>
   1c7c0:	ldr	r3, [r3, #84]	; 0x54
   1c7c4:	cmp	r7, r3
   1c7c8:	ldreq	r4, [r7, #20]
   1c7cc:	beq	1c7d4 <myhtml_node_clone_deep@@Base+0x30>
   1c7d0:	mov	r4, r7
   1c7d4:	mov	r1, r4
   1c7d8:	mov	r0, r8
   1c7dc:	bl	10f34 <myhtml_node_clone@plt>
   1c7e0:	subs	r9, r0, #0
   1c7e4:	beq	1c860 <myhtml_node_clone_deep@@Base+0xbc>
   1c7e8:	ldr	r4, [r4, #20]
   1c7ec:	cmp	r4, #0
   1c7f0:	beq	1c864 <myhtml_node_clone_deep@@Base+0xc0>
   1c7f4:	mov	r5, r9
   1c7f8:	b	1c804 <myhtml_node_clone_deep@@Base+0x60>
   1c7fc:	mov	r5, r6
   1c800:	mov	r4, r3
   1c804:	mov	r1, r4
   1c808:	mov	r0, r8
   1c80c:	bl	10f34 <myhtml_node_clone@plt>
   1c810:	subs	r6, r0, #0
   1c814:	beq	1c860 <myhtml_node_clone_deep@@Base+0xbc>
   1c818:	mov	r1, r6
   1c81c:	mov	r0, r5
   1c820:	bl	106b8 <myhtml_tree_node_add_child@plt>
   1c824:	ldr	r3, [r4, #20]
   1c828:	cmp	r3, #0
   1c82c:	bne	1c7fc <myhtml_node_clone_deep@@Base+0x58>
   1c830:	cmp	r7, r4
   1c834:	bne	1c84c <myhtml_node_clone_deep@@Base+0xa8>
   1c838:	b	1c864 <myhtml_node_clone_deep@@Base+0xc0>
   1c83c:	ldr	r4, [r4, #24]
   1c840:	ldr	r5, [r5, #24]
   1c844:	cmp	r7, r4
   1c848:	beq	1c864 <myhtml_node_clone_deep@@Base+0xc0>
   1c84c:	ldr	r3, [r4, #16]
   1c850:	cmp	r3, #0
   1c854:	beq	1c83c <myhtml_node_clone_deep@@Base+0x98>
   1c858:	mov	r6, r5
   1c85c:	b	1c7fc <myhtml_node_clone_deep@@Base+0x58>
   1c860:	mov	r9, #0
   1c864:	mov	r0, r9
   1c868:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0001c86c <myhtml_namespace_name_entry_by_name@@Base>:
   1c86c:	add	r3, r0, r1
   1c870:	push	{r4, r5, r6, r7, r8, lr}
   1c874:	mov	r6, r1
   1c878:	mov	r7, r0
   1c87c:	ldrb	r1, [r0]
   1c880:	ldr	r2, [pc, #156]	; 1c924 <myhtml_namespace_name_entry_by_name@@Base+0xb8>
   1c884:	ldrb	r0, [r3, #-1]
   1c888:	add	r2, pc, r2
   1c88c:	ldr	r3, [pc, #148]	; 1c928 <myhtml_namespace_name_entry_by_name@@Base+0xbc>
   1c890:	ldr	r5, [pc, #148]	; 1c92c <myhtml_namespace_name_entry_by_name@@Base+0xc0>
   1c894:	ldrb	r0, [r2, r0]
   1c898:	ldrb	r2, [r2, r1]
   1c89c:	add	r5, pc, r5
   1c8a0:	smulbb	r0, r0, r2
   1c8a4:	mul	r0, r6, r0
   1c8a8:	umull	r2, r3, r3, r0
   1c8ac:	sub	r2, r0, r3
   1c8b0:	add	r3, r3, r2, lsr #1
   1c8b4:	lsr	r3, r3, #4
   1c8b8:	add	r2, r3, r3, lsl #3
   1c8bc:	add	r3, r3, r2, lsl #1
   1c8c0:	sub	r0, r0, r3
   1c8c4:	add	r0, r0, #1
   1c8c8:	b	1c8d4 <myhtml_namespace_name_entry_by_name@@Base+0x68>
   1c8cc:	bcc	1c914 <myhtml_namespace_name_entry_by_name@@Base+0xa8>
   1c8d0:	ldr	r0, [r4, #12]
   1c8d4:	add	r3, r0, r0, lsl #2
   1c8d8:	ldr	r0, [r5, r3, lsl #2]
   1c8dc:	add	r4, r5, r3, lsl #2
   1c8e0:	cmp	r0, #0
   1c8e4:	beq	1c914 <myhtml_namespace_name_entry_by_name@@Base+0xa8>
   1c8e8:	ldr	r3, [r4, #4]
   1c8ec:	cmp	r6, r3
   1c8f0:	bne	1c8cc <myhtml_namespace_name_entry_by_name@@Base+0x60>
   1c8f4:	mov	r2, r6
   1c8f8:	mov	r1, r7
   1c8fc:	bl	102a4 <mycore_strncasecmp@plt>
   1c900:	cmp	r0, #0
   1c904:	beq	1c91c <myhtml_namespace_name_entry_by_name@@Base+0xb0>
   1c908:	ldr	r0, [r4, #12]
   1c90c:	cmp	r0, #0
   1c910:	bne	1c8d4 <myhtml_namespace_name_entry_by_name@@Base+0x68>
   1c914:	mov	r0, #0
   1c918:	pop	{r4, r5, r6, r7, r8, pc}
   1c91c:	mov	r0, r4
   1c920:	pop	{r4, r5, r6, r7, r8, pc}
   1c924:			; <UNDEFINED> instruction: 0x000df1b8
   1c928:	svcge	0x00286bcb
   1c92c:	andeq	r4, pc, r8, lsr #21

0001c930 <myhtml_namespace_id_by_name@@Base>:
   1c930:	push	{r4, lr}
   1c934:	mov	r4, r2
   1c938:	bl	10208 <myhtml_namespace_name_entry_by_name@plt>
   1c93c:	cmp	r0, #0
   1c940:	popeq	{r4, pc}
   1c944:	cmp	r4, #0
   1c948:	ldrne	r3, [r0, #8]
   1c94c:	movne	r0, #1
   1c950:	strne	r3, [r4]
   1c954:	moveq	r0, #1
   1c958:	pop	{r4, pc}

0001c95c <myhtml_namespace_name_by_id@@Base>:
   1c95c:	cmp	r0, #7
   1c960:	push	{r4, r5, r6, lr}
   1c964:	bls	1c980 <myhtml_namespace_name_by_id@@Base+0x24>
   1c968:	cmp	r1, #0
   1c96c:	moveq	r4, r1
   1c970:	movne	r4, #0
   1c974:	strne	r4, [r1]
   1c978:	mov	r0, r4
   1c97c:	pop	{r4, r5, r6, pc}
   1c980:	ldr	r4, [pc, #40]	; 1c9b0 <myhtml_namespace_name_by_id@@Base+0x54>
   1c984:	cmp	r1, #0
   1c988:	add	r4, pc, r4
   1c98c:	add	r4, r4, #256	; 0x100
   1c990:	add	r4, r4, r0, lsl #3
   1c994:	beq	1c978 <myhtml_namespace_name_by_id@@Base+0x1c>
   1c998:	mov	r0, r4
   1c99c:	mov	r5, r1
   1c9a0:	bl	10670 <strlen@plt>
   1c9a4:	str	r0, [r5]
   1c9a8:	mov	r0, r4
   1c9ac:	pop	{r4, r5, r6, pc}
   1c9b0:	strheq	pc, [sp], -r8	; <UNPREDICTABLE>

0001c9b4 <myhtml_namespace_url_by_id@@Base>:
   1c9b4:	cmp	r0, #7
   1c9b8:	bls	1c9d0 <myhtml_namespace_url_by_id@@Base+0x1c>
   1c9bc:	cmp	r1, #0
   1c9c0:	beq	1ca0c <myhtml_namespace_url_by_id@@Base+0x58>
   1c9c4:	mov	r0, #0
   1c9c8:	str	r0, [r1]
   1c9cc:	bx	lr
   1c9d0:	cmp	r1, #0
   1c9d4:	lsl	r3, r0, #1
   1c9d8:	beq	1c9f4 <myhtml_namespace_url_by_id@@Base+0x40>
   1c9dc:	ldr	r2, [pc, #48]	; 1ca14 <myhtml_namespace_url_by_id@@Base+0x60>
   1c9e0:	add	ip, r3, r0
   1c9e4:	add	r2, pc, r2
   1c9e8:	add	r2, r2, ip, lsl #2
   1c9ec:	ldr	r2, [r2, #404]	; 0x194
   1c9f0:	str	r2, [r1]
   1c9f4:	add	r0, r3, r0
   1c9f8:	ldr	r3, [pc, #24]	; 1ca18 <myhtml_namespace_url_by_id@@Base+0x64>
   1c9fc:	add	r3, pc, r3
   1ca00:	add	r0, r3, r0, lsl #2
   1ca04:	ldr	r0, [r0, #400]	; 0x190
   1ca08:	bx	lr
   1ca0c:	mov	r0, r1
   1ca10:	bx	lr
   1ca14:	andeq	r4, pc, r0, ror #18
   1ca18:	andeq	r4, pc, r8, asr #18

0001ca1c <myhtml_namespace_id_by_url@@Base>:
   1ca1c:	mov	r0, #0
   1ca20:	bx	lr

0001ca24 <myhtml_string_append_with_preprocessing@@Base>:
   1ca24:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ca28:	mov	r7, r2
   1ca2c:	ldr	lr, [r0, #8]
   1ca30:	add	r2, r2, #1
   1ca34:	ldr	ip, [r0, #4]
   1ca38:	add	r2, r2, lr
   1ca3c:	cmp	r2, ip
   1ca40:	mov	r5, r0
   1ca44:	mov	r6, r1
   1ca48:	mov	fp, r3
   1ca4c:	bcs	1cb30 <myhtml_string_append_with_preprocessing@@Base+0x10c>
   1ca50:	cmp	r7, #0
   1ca54:	ldr	r0, [r5]
   1ca58:	beq	1cb7c <myhtml_string_append_with_preprocessing@@Base+0x158>
   1ca5c:	mov	r4, #0
   1ca60:	mvn	sl, #16
   1ca64:	mvn	r9, #64	; 0x40
   1ca68:	mov	r8, #10
   1ca6c:	ldrb	r2, [r6, r4]
   1ca70:	cmp	r2, #13
   1ca74:	beq	1cabc <myhtml_string_append_with_preprocessing@@Base+0x98>
   1ca78:	cmp	r2, #0
   1ca7c:	moveq	r1, fp
   1ca80:	orrne	r1, fp, #1
   1ca84:	cmp	r1, #0
   1ca88:	beq	1caec <myhtml_string_append_with_preprocessing@@Base+0xc8>
   1ca8c:	ldr	r1, [r5, #8]
   1ca90:	strb	r2, [r0, r1]
   1ca94:	ldr	r1, [r5, #8]
   1ca98:	add	r4, r4, #1
   1ca9c:	add	r1, r1, #1
   1caa0:	cmp	r7, r4
   1caa4:	str	r1, [r5, #8]
   1caa8:	bhi	1ca6c <myhtml_string_append_with_preprocessing@@Base+0x48>
   1caac:	ldr	r3, [r5]
   1cab0:	mov	r0, #0
   1cab4:	strb	r0, [r3, r1]
   1cab8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cabc:	ldr	r2, [r5, #8]
   1cac0:	add	r4, r4, #1
   1cac4:	cmp	r7, r4
   1cac8:	strb	r8, [r0, r2]
   1cacc:	bls	1cb3c <myhtml_string_append_with_preprocessing@@Base+0x118>
   1cad0:	ldrb	r2, [r6, r4]
   1cad4:	cmp	r2, #10
   1cad8:	beq	1ca94 <myhtml_string_append_with_preprocessing@@Base+0x70>
   1cadc:	ldr	r2, [r5, #8]
   1cae0:	add	r2, r2, #1
   1cae4:	str	r2, [r5, #8]
   1cae8:	b	1ca6c <myhtml_string_append_with_preprocessing@@Base+0x48>
   1caec:	ldr	r1, [r5, #4]
   1caf0:	mov	r0, r5
   1caf4:	add	r1, r1, #5
   1caf8:	bl	10964 <mycore_string_realloc@plt>
   1cafc:	ldr	r2, [r5, #8]
   1cb00:	ldr	r0, [r5]
   1cb04:	mvn	r3, #66	; 0x42
   1cb08:	strb	sl, [r0, r2]
   1cb0c:	ldr	r2, [r5, #8]
   1cb10:	add	r2, r2, #1
   1cb14:	str	r2, [r5, #8]
   1cb18:	strb	r9, [r0, r2]
   1cb1c:	ldr	r2, [r5, #8]
   1cb20:	add	r2, r2, #1
   1cb24:	str	r2, [r5, #8]
   1cb28:	strb	r3, [r0, r2]
   1cb2c:	b	1ca94 <myhtml_string_append_with_preprocessing@@Base+0x70>
   1cb30:	mov	r1, r2
   1cb34:	bl	10964 <mycore_string_realloc@plt>
   1cb38:	b	1ca50 <myhtml_string_append_with_preprocessing@@Base+0x2c>
   1cb3c:	ldr	r1, [r5, #8]
   1cb40:	ldr	r2, [r5, #4]
   1cb44:	add	r3, r1, #1
   1cb48:	cmp	r3, r2
   1cb4c:	str	r3, [r5, #8]
   1cb50:	bcs	1cb68 <myhtml_string_append_with_preprocessing@@Base+0x144>
   1cb54:	ldr	r2, [r5]
   1cb58:	mov	r1, #0
   1cb5c:	strb	r1, [r2, r3]
   1cb60:	ldr	r0, [r5, #8]
   1cb64:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb68:	add	r1, r1, #3
   1cb6c:	mov	r0, r5
   1cb70:	bl	10964 <mycore_string_realloc@plt>
   1cb74:	ldr	r3, [r5, #8]
   1cb78:	b	1cb54 <myhtml_string_append_with_preprocessing@@Base+0x130>
   1cb7c:	ldr	r1, [r5, #8]
   1cb80:	mov	r3, r0
   1cb84:	b	1cab0 <myhtml_string_append_with_preprocessing@@Base+0x8c>

0001cb88 <myhtml_string_append_lowercase_with_preprocessing@@Base>:
   1cb88:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb8c:	mov	r7, r2
   1cb90:	ldr	lr, [r0, #8]
   1cb94:	add	r2, r2, #1
   1cb98:	ldr	ip, [r0, #4]
   1cb9c:	add	r2, r2, lr
   1cba0:	cmp	r2, ip
   1cba4:	mov	r5, r0
   1cba8:	mov	r6, r1
   1cbac:	mov	sl, r3
   1cbb0:	bcs	1cca0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x118>
   1cbb4:	cmp	r7, #0
   1cbb8:	ldr	r0, [r5]
   1cbbc:	beq	1ccec <myhtml_string_append_lowercase_with_preprocessing@@Base+0x164>
   1cbc0:	ldr	r8, [pc, #304]	; 1ccf8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x170>
   1cbc4:	mov	r4, #0
   1cbc8:	add	r8, pc, r8
   1cbcc:	mvn	fp, #16
   1cbd0:	mov	r9, #10
   1cbd4:	ldrb	r1, [r6, r4]
   1cbd8:	cmp	r1, #13
   1cbdc:	beq	1cc28 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xa0>
   1cbe0:	cmp	r1, #0
   1cbe4:	moveq	ip, sl
   1cbe8:	orrne	ip, sl, #1
   1cbec:	cmp	ip, #0
   1cbf0:	beq	1cc58 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xd0>
   1cbf4:	ldrb	ip, [r8, r1]
   1cbf8:	ldr	r1, [r5, #8]
   1cbfc:	strb	ip, [r0, r1]
   1cc00:	ldr	r1, [r5, #8]
   1cc04:	add	r4, r4, #1
   1cc08:	add	r1, r1, #1
   1cc0c:	cmp	r7, r4
   1cc10:	str	r1, [r5, #8]
   1cc14:	bhi	1cbd4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x4c>
   1cc18:	ldr	r3, [r5]
   1cc1c:	mov	r0, #0
   1cc20:	strb	r0, [r3, r1]
   1cc24:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc28:	ldr	r1, [r5, #8]
   1cc2c:	add	r4, r4, #1
   1cc30:	cmp	r7, r4
   1cc34:	strb	r9, [r0, r1]
   1cc38:	bls	1ccac <myhtml_string_append_lowercase_with_preprocessing@@Base+0x124>
   1cc3c:	ldrb	r1, [r6, r4]
   1cc40:	cmp	r1, #10
   1cc44:	beq	1cc00 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x78>
   1cc48:	ldr	r1, [r5, #8]
   1cc4c:	add	r1, r1, #1
   1cc50:	str	r1, [r5, #8]
   1cc54:	b	1cbd4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x4c>
   1cc58:	ldr	r1, [r5, #4]
   1cc5c:	mov	r0, r5
   1cc60:	add	r1, r1, #5
   1cc64:	bl	10964 <mycore_string_realloc@plt>
   1cc68:	ldr	r1, [r5, #8]
   1cc6c:	ldr	r0, [r5]
   1cc70:	mvn	r3, #64	; 0x40
   1cc74:	strb	fp, [r0, r1]
   1cc78:	ldr	r1, [r5, #8]
   1cc7c:	add	r1, r1, #1
   1cc80:	str	r1, [r5, #8]
   1cc84:	strb	r3, [r0, r1]
   1cc88:	ldr	r1, [r5, #8]
   1cc8c:	mvn	r3, #66	; 0x42
   1cc90:	add	r1, r1, #1
   1cc94:	str	r1, [r5, #8]
   1cc98:	strb	r3, [r0, r1]
   1cc9c:	b	1cc00 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x78>
   1cca0:	mov	r1, r2
   1cca4:	bl	10964 <mycore_string_realloc@plt>
   1cca8:	b	1cbb4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x2c>
   1ccac:	ldr	r1, [r5, #8]
   1ccb0:	ldr	r2, [r5, #4]
   1ccb4:	add	r3, r1, #1
   1ccb8:	cmp	r3, r2
   1ccbc:	str	r3, [r5, #8]
   1ccc0:	bcs	1ccd8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x150>
   1ccc4:	ldr	r2, [r5]
   1ccc8:	mov	r1, #0
   1cccc:	strb	r1, [r2, r3]
   1ccd0:	ldr	r0, [r5, #8]
   1ccd4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ccd8:	add	r1, r1, #3
   1ccdc:	mov	r0, r5
   1cce0:	bl	10964 <mycore_string_realloc@plt>
   1cce4:	ldr	r3, [r5, #8]
   1cce8:	b	1ccc4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x13c>
   1ccec:	ldr	r1, [r5, #8]
   1ccf0:	mov	r3, r0
   1ccf4:	b	1cc1c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x94>
   1ccf8:	strheq	pc, [sp], -r0	; <UNPREDICTABLE>

0001ccfc <myhtml_string_before_append_any_preprocessing@@Base>:
   1ccfc:	cmp	r2, #0
   1cd00:	cmpne	r3, #0
   1cd04:	ldrbne	r0, [r1]
   1cd08:	subne	r0, r0, #10
   1cd0c:	clzne	r0, r0
   1cd10:	lsrne	r0, r0, #5
   1cd14:	moveq	r0, #0
   1cd18:	bx	lr

0001cd1c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1cd1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd20:	mov	r6, r3
   1cd24:	ldr	lr, [r0, #8]
   1cd28:	add	r3, r3, #1
   1cd2c:	ldr	ip, [r0, #4]
   1cd30:	sub	sp, sp, #12
   1cd34:	add	r3, r3, lr
   1cd38:	cmp	r3, ip
   1cd3c:	mov	r4, r0
   1cd40:	mov	r5, r1
   1cd44:	mov	r7, r2
   1cd48:	ldrb	r9, [sp, #52]	; 0x34
   1cd4c:	bcs	1cec4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1a8>
   1cd50:	ldr	r0, [sp, #48]	; 0x30
   1cd54:	bl	1082c <myencoding_get_function_by_id@plt>
   1cd58:	cmp	r6, #0
   1cd5c:	movne	fp, #0
   1cd60:	movne	sl, #10
   1cd64:	mov	r8, r0
   1cd68:	bne	1cda4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x88>
   1cd6c:	b	1ce74 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x158>
   1cd70:	ldr	r3, [r4]
   1cd74:	ldr	r0, [r5, #12]
   1cd78:	add	r1, r3, r1
   1cd7c:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   1cd80:	cmp	r0, #1
   1cd84:	mov	r3, r0
   1cd88:	beq	1cde4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xc8>
   1cd8c:	ldr	r2, [r4, #8]
   1cd90:	add	fp, fp, #1
   1cd94:	add	r3, r3, r2
   1cd98:	str	r3, [r4, #8]
   1cd9c:	cmp	r6, fp
   1cda0:	bls	1ce74 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x158>
   1cda4:	ldrb	r0, [r7, fp]
   1cda8:	mov	r1, r5
   1cdac:	blx	r8
   1cdb0:	cmp	r0, #0
   1cdb4:	addne	fp, fp, #1
   1cdb8:	bne	1cd9c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x80>
   1cdbc:	ldr	r1, [r4, #8]
   1cdc0:	ldr	r3, [r4, #4]
   1cdc4:	add	r2, r1, #5
   1cdc8:	cmp	r2, r3
   1cdcc:	bcc	1cd70 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x54>
   1cdd0:	add	r1, r1, #6
   1cdd4:	mov	r0, r4
   1cdd8:	bl	10964 <mycore_string_realloc@plt>
   1cddc:	ldr	r1, [r4, #8]
   1cde0:	b	1cd70 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x54>
   1cde4:	ldr	r2, [r4, #8]
   1cde8:	ldr	r0, [r4]
   1cdec:	ldrb	r1, [r0, r2]
   1cdf0:	cmp	r1, #13
   1cdf4:	beq	1ce9c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x180>
   1cdf8:	cmp	r1, #0
   1cdfc:	moveq	r1, r9
   1ce00:	orrne	r1, r9, #1
   1ce04:	cmp	r1, #0
   1ce08:	addne	fp, fp, #1
   1ce0c:	bne	1cd94 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1ce10:	ldr	r1, [r4, #4]
   1ce14:	mov	r0, r4
   1ce18:	add	r1, r1, #5
   1ce1c:	str	r3, [sp, #4]
   1ce20:	bl	10964 <mycore_string_realloc@plt>
   1ce24:	ldr	r2, [r4, #8]
   1ce28:	ldr	r1, [r4]
   1ce2c:	mvn	r3, #16
   1ce30:	add	fp, fp, #1
   1ce34:	strb	r3, [r1, r2]
   1ce38:	ldr	r2, [r4, #8]
   1ce3c:	ldr	r1, [r4]
   1ce40:	add	r2, r2, #1
   1ce44:	mvn	r3, #64	; 0x40
   1ce48:	str	r2, [r4, #8]
   1ce4c:	strb	r3, [r1, r2]
   1ce50:	ldr	r2, [r4, #8]
   1ce54:	ldr	r1, [r4]
   1ce58:	add	r2, r2, #1
   1ce5c:	mvn	r3, #66	; 0x42
   1ce60:	str	r2, [r4, #8]
   1ce64:	strb	r3, [r1, r2]
   1ce68:	ldr	r3, [sp, #4]
   1ce6c:	ldr	r2, [r4, #8]
   1ce70:	b	1cd94 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1ce74:	ldr	r1, [r4, #8]
   1ce78:	ldr	r3, [r4, #4]
   1ce7c:	cmp	r1, r3
   1ce80:	bcs	1ced0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b4>
   1ce84:	mov	r3, #0
   1ce88:	ldr	r2, [r4]
   1ce8c:	mov	r0, r3
   1ce90:	strb	r3, [r2, r1]
   1ce94:	add	sp, sp, #12
   1ce98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce9c:	add	r1, fp, #1
   1cea0:	cmp	r6, r1
   1cea4:	strb	sl, [r0, r2]
   1cea8:	bls	1cee4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1c8>
   1ceac:	ldrb	r2, [r7, r1]
   1ceb0:	cmp	r2, #10
   1ceb4:	movne	fp, r1
   1ceb8:	addeq	fp, fp, #2
   1cebc:	ldr	r2, [r4, #8]
   1cec0:	b	1cd94 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1cec4:	mov	r1, r3
   1cec8:	bl	10964 <mycore_string_realloc@plt>
   1cecc:	b	1cd50 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x34>
   1ced0:	add	r1, r1, #1
   1ced4:	mov	r0, r4
   1ced8:	bl	10964 <mycore_string_realloc@plt>
   1cedc:	ldr	r1, [r4, #8]
   1cee0:	b	1ce84 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x168>
   1cee4:	ldr	r1, [r4, #8]
   1cee8:	ldr	r2, [r4, #4]
   1ceec:	add	r3, r1, #1
   1cef0:	cmp	r3, r2
   1cef4:	str	r3, [r4, #8]
   1cef8:	bcc	1cf0c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1f0>
   1cefc:	add	r1, r1, #3
   1cf00:	mov	r0, r4
   1cf04:	bl	10964 <mycore_string_realloc@plt>
   1cf08:	ldr	r3, [r4, #8]
   1cf0c:	ldr	r2, [r4]
   1cf10:	mov	r1, #0
   1cf14:	strb	r1, [r2, r3]
   1cf18:	ldr	r0, [r4, #8]
   1cf1c:	b	1ce94 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x178>

0001cf20 <myhtml_string_append_with_convert_encoding_with_preprocessing@@Base>:
   1cf20:	push	{r4, r5, r6, r7, r8, r9, lr}
   1cf24:	sub	sp, sp, #36	; 0x24
   1cf28:	add	r4, sp, #8
   1cf2c:	ldrb	r8, [sp, #64]	; 0x40
   1cf30:	mov	r6, r1
   1cf34:	mov	r7, r2
   1cf38:	mov	r9, r3
   1cf3c:	mov	r5, r0
   1cf40:	mov	r0, r4
   1cf44:	bl	101c0 <myencoding_result_clean@plt>
   1cf48:	str	r9, [sp]
   1cf4c:	str	r8, [sp, #4]
   1cf50:	mov	r3, r7
   1cf54:	mov	r2, r6
   1cf58:	mov	r1, r4
   1cf5c:	mov	r0, r5
   1cf60:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1cf64:	add	sp, sp, #36	; 0x24
   1cf68:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001cf6c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1cf6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cf70:	mov	r6, r3
   1cf74:	ldr	lr, [r0, #8]
   1cf78:	add	r3, r3, #1
   1cf7c:	ldr	ip, [r0, #4]
   1cf80:	sub	sp, sp, #12
   1cf84:	add	r3, r3, lr
   1cf88:	cmp	r3, ip
   1cf8c:	mov	r4, r0
   1cf90:	mov	r5, r1
   1cf94:	mov	r7, r2
   1cf98:	ldrb	r9, [sp, #52]	; 0x34
   1cf9c:	bcs	1d114 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1a8>
   1cfa0:	ldr	r0, [sp, #48]	; 0x30
   1cfa4:	bl	1082c <myencoding_get_function_by_id@plt>
   1cfa8:	cmp	r6, #0
   1cfac:	movne	fp, #0
   1cfb0:	movne	sl, #10
   1cfb4:	mov	r8, r0
   1cfb8:	bne	1cff4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x88>
   1cfbc:	b	1d0c4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x158>
   1cfc0:	ldr	r3, [r4]
   1cfc4:	ldr	r0, [r5, #12]
   1cfc8:	add	r1, r3, r1
   1cfcc:	bl	fcc8 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   1cfd0:	cmp	r0, #1
   1cfd4:	mov	r3, r0
   1cfd8:	beq	1d034 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xc8>
   1cfdc:	ldr	r2, [r4, #8]
   1cfe0:	add	fp, fp, #1
   1cfe4:	add	r3, r3, r2
   1cfe8:	str	r3, [r4, #8]
   1cfec:	cmp	r6, fp
   1cff0:	bls	1d0c4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x158>
   1cff4:	ldrb	r0, [r7, fp]
   1cff8:	mov	r1, r5
   1cffc:	blx	r8
   1d000:	cmp	r0, #0
   1d004:	addne	fp, fp, #1
   1d008:	bne	1cfec <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x80>
   1d00c:	ldr	r1, [r4, #8]
   1d010:	ldr	r3, [r4, #4]
   1d014:	add	r2, r1, #5
   1d018:	cmp	r2, r3
   1d01c:	bcc	1cfc0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x54>
   1d020:	add	r1, r1, #6
   1d024:	mov	r0, r4
   1d028:	bl	10964 <mycore_string_realloc@plt>
   1d02c:	ldr	r1, [r4, #8]
   1d030:	b	1cfc0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x54>
   1d034:	ldr	r2, [r4, #8]
   1d038:	ldr	r0, [r4]
   1d03c:	ldrb	r1, [r0, r2]
   1d040:	cmp	r1, #13
   1d044:	beq	1d0ec <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x180>
   1d048:	cmp	r1, #0
   1d04c:	moveq	r1, r9
   1d050:	orrne	r1, r9, #1
   1d054:	cmp	r1, #0
   1d058:	addne	fp, fp, #1
   1d05c:	bne	1cfe4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1d060:	ldr	r1, [r4, #4]
   1d064:	mov	r0, r4
   1d068:	add	r1, r1, #5
   1d06c:	str	r3, [sp, #4]
   1d070:	bl	10964 <mycore_string_realloc@plt>
   1d074:	ldr	r2, [r4, #8]
   1d078:	ldr	r1, [r4]
   1d07c:	mvn	r3, #16
   1d080:	add	fp, fp, #1
   1d084:	strb	r3, [r1, r2]
   1d088:	ldr	r2, [r4, #8]
   1d08c:	ldr	r1, [r4]
   1d090:	add	r2, r2, #1
   1d094:	mvn	r3, #64	; 0x40
   1d098:	str	r2, [r4, #8]
   1d09c:	strb	r3, [r1, r2]
   1d0a0:	ldr	r2, [r4, #8]
   1d0a4:	ldr	r1, [r4]
   1d0a8:	add	r2, r2, #1
   1d0ac:	mvn	r3, #66	; 0x42
   1d0b0:	str	r2, [r4, #8]
   1d0b4:	strb	r3, [r1, r2]
   1d0b8:	ldr	r3, [sp, #4]
   1d0bc:	ldr	r2, [r4, #8]
   1d0c0:	b	1cfe4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1d0c4:	ldr	r1, [r4, #8]
   1d0c8:	ldr	r3, [r4, #4]
   1d0cc:	cmp	r1, r3
   1d0d0:	bcs	1d120 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b4>
   1d0d4:	mov	r3, #0
   1d0d8:	ldr	r2, [r4]
   1d0dc:	mov	r0, r3
   1d0e0:	strb	r3, [r2, r1]
   1d0e4:	add	sp, sp, #12
   1d0e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d0ec:	add	r1, fp, #1
   1d0f0:	cmp	r6, r1
   1d0f4:	strb	sl, [r0, r2]
   1d0f8:	bls	1d134 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1c8>
   1d0fc:	ldrb	r2, [r7, r1]
   1d100:	cmp	r2, #10
   1d104:	movne	fp, r1
   1d108:	addeq	fp, fp, #2
   1d10c:	ldr	r2, [r4, #8]
   1d110:	b	1cfe4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1d114:	mov	r1, r3
   1d118:	bl	10964 <mycore_string_realloc@plt>
   1d11c:	b	1cfa0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x34>
   1d120:	add	r1, r1, #1
   1d124:	mov	r0, r4
   1d128:	bl	10964 <mycore_string_realloc@plt>
   1d12c:	ldr	r1, [r4, #8]
   1d130:	b	1d0d4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x168>
   1d134:	ldr	r1, [r4, #8]
   1d138:	ldr	r2, [r4, #4]
   1d13c:	add	r3, r1, #1
   1d140:	cmp	r3, r2
   1d144:	str	r3, [r4, #8]
   1d148:	bcc	1d15c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1f0>
   1d14c:	add	r1, r1, #3
   1d150:	mov	r0, r4
   1d154:	bl	10964 <mycore_string_realloc@plt>
   1d158:	ldr	r3, [r4, #8]
   1d15c:	ldr	r2, [r4]
   1d160:	mov	r1, #0
   1d164:	strb	r1, [r2, r3]
   1d168:	ldr	r0, [r4, #8]
   1d16c:	b	1d0e4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x178>

0001d170 <myhtml_string_append_lowercase_with_convert_encoding_with_preprocessing@@Base>:
   1d170:	push	{r4, r5, r6, r7, r8, r9, lr}
   1d174:	sub	sp, sp, #36	; 0x24
   1d178:	add	r4, sp, #8
   1d17c:	ldrb	r8, [sp, #64]	; 0x40
   1d180:	mov	r6, r1
   1d184:	mov	r7, r2
   1d188:	mov	r9, r3
   1d18c:	mov	r5, r0
   1d190:	mov	r0, r4
   1d194:	bl	101c0 <myencoding_result_clean@plt>
   1d198:	str	r9, [sp]
   1d19c:	str	r8, [sp, #4]
   1d1a0:	mov	r3, r7
   1d1a4:	mov	r2, r6
   1d1a8:	mov	r1, r4
   1d1ac:	mov	r0, r5
   1d1b0:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1d1b4:	add	sp, sp, #36	; 0x24
   1d1b8:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001d1bc <myhtml_parser_stream@@Base>:
   1d1bc:	ldr	r0, [r1]
   1d1c0:	ldr	r3, [r0, #184]	; 0xb8
   1d1c4:	tst	r3, #1
   1d1c8:	bxne	lr
   1d1cc:	push	{r4, lr}
   1d1d0:	mov	r4, r1
   1d1d4:	ldr	r1, [r4, #4]
   1d1d8:	bl	fe9c <myhtml_rules_tree_dispatcher@plt>
   1d1dc:	cmp	r0, #0
   1d1e0:	popeq	{r4, pc}
   1d1e4:	ldr	r0, [r4]
   1d1e8:	b	1d1d4 <myhtml_parser_stream@@Base+0x18>

0001d1ec <myhtml_parser_token_data_to_string_lowercase@@Base>:
   1d1ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d1f0:	sub	sp, sp, #20
   1d1f4:	mov	fp, r0
   1d1f8:	mov	r8, r1
   1d1fc:	ldr	r0, [r0, #80]	; 0x50
   1d200:	mov	r1, r3
   1d204:	mov	r6, r3
   1d208:	ldr	r7, [sp, #56]	; 0x38
   1d20c:	mov	sl, r2
   1d210:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   1d214:	ldr	r3, [r0, #12]
   1d218:	ldr	r4, [r0, #8]
   1d21c:	sub	r6, r6, r3
   1d220:	add	r3, r6, r7
   1d224:	cmp	r3, r4
   1d228:	mov	r5, r0
   1d22c:	bhi	1d260 <myhtml_parser_token_data_to_string_lowercase@@Base+0x74>
   1d230:	ldr	r3, [fp, #200]	; 0xc8
   1d234:	cmp	r3, #0
   1d238:	bne	1d30c <myhtml_parser_token_data_to_string_lowercase@@Base+0x120>
   1d23c:	ldr	r1, [r0]
   1d240:	ldrb	r3, [sl, #61]	; 0x3d
   1d244:	add	r1, r1, r6
   1d248:	mov	r2, r7
   1d24c:	mov	r0, r8
   1d250:	bl	11030 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1d254:	ldr	r0, [r8, #8]
   1d258:	add	sp, sp, #20
   1d25c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d260:	add	r3, sl, #8
   1d264:	mov	r9, #0
   1d268:	str	r3, [sp, #12]
   1d26c:	b	1d2a0 <myhtml_parser_token_data_to_string_lowercase@@Base+0xb4>
   1d270:	ldr	r1, [r5]
   1d274:	ldrb	r3, [sl, #61]	; 0x3d
   1d278:	add	r1, r1, ip
   1d27c:	bl	11030 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1d280:	mov	r9, r0
   1d284:	ldr	r5, [r5, #20]
   1d288:	mov	r6, #0
   1d28c:	cmp	r5, r6
   1d290:	beq	1d254 <myhtml_parser_token_data_to_string_lowercase@@Base+0x68>
   1d294:	ldr	r4, [r5, #8]
   1d298:	cmp	r4, r7
   1d29c:	bcs	1d340 <myhtml_parser_token_data_to_string_lowercase@@Base+0x154>
   1d2a0:	ldr	r1, [r5]
   1d2a4:	sub	r4, r4, r6
   1d2a8:	mov	r2, r4
   1d2ac:	add	r1, r1, r6
   1d2b0:	mov	r3, r9
   1d2b4:	mov	r0, r8
   1d2b8:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1d2bc:	cmp	r4, #0
   1d2c0:	sub	r7, r7, r4
   1d2c4:	beq	1d284 <myhtml_parser_token_data_to_string_lowercase@@Base+0x98>
   1d2c8:	ldr	lr, [fp, #200]	; 0xc8
   1d2cc:	sub	r3, r4, r0
   1d2d0:	cmp	lr, #0
   1d2d4:	add	ip, r0, r6
   1d2d8:	ldr	r1, [sp, #12]
   1d2dc:	mov	r0, r8
   1d2e0:	mov	r2, r3
   1d2e4:	beq	1d270 <myhtml_parser_token_data_to_string_lowercase@@Base+0x84>
   1d2e8:	ldrb	r4, [sl, #61]	; 0x3d
   1d2ec:	ldr	r2, [r5]
   1d2f0:	ldr	lr, [sl, #4]
   1d2f4:	add	r2, r2, ip
   1d2f8:	str	r4, [sp, #4]
   1d2fc:	str	lr, [sp]
   1d300:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1d304:	mov	r9, r0
   1d308:	b	1d284 <myhtml_parser_token_data_to_string_lowercase@@Base+0x98>
   1d30c:	ldrb	r0, [sl, #61]	; 0x3d
   1d310:	ldr	r2, [r5]
   1d314:	ldr	r1, [sl, #4]
   1d318:	add	r2, r2, r6
   1d31c:	str	r0, [sp, #4]
   1d320:	str	r1, [sp]
   1d324:	mov	r3, r7
   1d328:	add	r1, sl, #8
   1d32c:	mov	r0, r8
   1d330:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1d334:	ldr	r0, [r8, #8]
   1d338:	add	sp, sp, #20
   1d33c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d340:	mov	r3, r9
   1d344:	mov	r2, r7
   1d348:	ldr	r1, [r5]
   1d34c:	mov	r0, r8
   1d350:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1d354:	cmp	r7, #0
   1d358:	beq	1d254 <myhtml_parser_token_data_to_string_lowercase@@Base+0x68>
   1d35c:	ldr	r3, [fp, #200]	; 0xc8
   1d360:	cmp	r3, #0
   1d364:	bne	1d384 <myhtml_parser_token_data_to_string_lowercase@@Base+0x198>
   1d368:	ldr	r1, [r5]
   1d36c:	sub	r2, r7, r0
   1d370:	add	r1, r1, r0
   1d374:	ldrb	r3, [sl, #61]	; 0x3d
   1d378:	mov	r0, r8
   1d37c:	bl	11030 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1d380:	b	1d254 <myhtml_parser_token_data_to_string_lowercase@@Base+0x68>
   1d384:	ldrb	ip, [sl, #61]	; 0x3d
   1d388:	ldr	r1, [sl, #4]
   1d38c:	ldr	r2, [r5]
   1d390:	sub	r3, r7, r0
   1d394:	add	r2, r2, r0
   1d398:	stm	sp, {r1, ip}
   1d39c:	mov	r0, r8
   1d3a0:	add	r1, sl, #8
   1d3a4:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1d3a8:	b	1d254 <myhtml_parser_token_data_to_string_lowercase@@Base+0x68>

0001d3ac <myhtml_parser_token_data_to_string@@Base>:
   1d3ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d3b0:	sub	sp, sp, #20
   1d3b4:	mov	fp, r0
   1d3b8:	mov	r8, r1
   1d3bc:	ldr	r0, [r0, #80]	; 0x50
   1d3c0:	mov	r1, r3
   1d3c4:	mov	r6, r3
   1d3c8:	ldr	r7, [sp, #56]	; 0x38
   1d3cc:	mov	sl, r2
   1d3d0:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   1d3d4:	ldr	r3, [r0, #12]
   1d3d8:	ldr	r4, [r0, #8]
   1d3dc:	sub	r6, r6, r3
   1d3e0:	add	r3, r6, r7
   1d3e4:	cmp	r3, r4
   1d3e8:	mov	r5, r0
   1d3ec:	bhi	1d420 <myhtml_parser_token_data_to_string@@Base+0x74>
   1d3f0:	ldr	r3, [fp, #200]	; 0xc8
   1d3f4:	cmp	r3, #0
   1d3f8:	bne	1d4cc <myhtml_parser_token_data_to_string@@Base+0x120>
   1d3fc:	ldr	r1, [r0]
   1d400:	ldrb	r3, [sl, #61]	; 0x3d
   1d404:	add	r1, r1, r6
   1d408:	mov	r2, r7
   1d40c:	mov	r0, r8
   1d410:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1d414:	ldr	r0, [r8, #8]
   1d418:	add	sp, sp, #20
   1d41c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d420:	add	r3, sl, #8
   1d424:	mov	r9, #0
   1d428:	str	r3, [sp, #12]
   1d42c:	b	1d460 <myhtml_parser_token_data_to_string@@Base+0xb4>
   1d430:	ldr	r1, [r5]
   1d434:	ldrb	r3, [sl, #61]	; 0x3d
   1d438:	add	r1, r1, ip
   1d43c:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1d440:	mov	r9, r0
   1d444:	ldr	r5, [r5, #20]
   1d448:	mov	r6, #0
   1d44c:	cmp	r5, r6
   1d450:	beq	1d414 <myhtml_parser_token_data_to_string@@Base+0x68>
   1d454:	ldr	r4, [r5, #8]
   1d458:	cmp	r4, r7
   1d45c:	bcs	1d500 <myhtml_parser_token_data_to_string@@Base+0x154>
   1d460:	ldr	r1, [r5]
   1d464:	sub	r4, r4, r6
   1d468:	mov	r2, r4
   1d46c:	add	r1, r1, r6
   1d470:	mov	r3, r9
   1d474:	mov	r0, r8
   1d478:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1d47c:	cmp	r4, #0
   1d480:	sub	r7, r7, r4
   1d484:	beq	1d444 <myhtml_parser_token_data_to_string@@Base+0x98>
   1d488:	ldr	lr, [fp, #200]	; 0xc8
   1d48c:	sub	r3, r4, r0
   1d490:	cmp	lr, #0
   1d494:	add	ip, r0, r6
   1d498:	ldr	r1, [sp, #12]
   1d49c:	mov	r0, r8
   1d4a0:	mov	r2, r3
   1d4a4:	beq	1d430 <myhtml_parser_token_data_to_string@@Base+0x84>
   1d4a8:	ldrb	r4, [sl, #61]	; 0x3d
   1d4ac:	ldr	r2, [r5]
   1d4b0:	ldr	lr, [sl, #4]
   1d4b4:	add	r2, r2, ip
   1d4b8:	str	r4, [sp, #4]
   1d4bc:	str	lr, [sp]
   1d4c0:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d4c4:	mov	r9, r0
   1d4c8:	b	1d444 <myhtml_parser_token_data_to_string@@Base+0x98>
   1d4cc:	ldrb	r0, [sl, #61]	; 0x3d
   1d4d0:	ldr	r2, [r5]
   1d4d4:	ldr	r1, [sl, #4]
   1d4d8:	add	r2, r2, r6
   1d4dc:	str	r0, [sp, #4]
   1d4e0:	str	r1, [sp]
   1d4e4:	mov	r3, r7
   1d4e8:	add	r1, sl, #8
   1d4ec:	mov	r0, r8
   1d4f0:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d4f4:	ldr	r0, [r8, #8]
   1d4f8:	add	sp, sp, #20
   1d4fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d500:	mov	r3, r9
   1d504:	mov	r2, r7
   1d508:	ldr	r1, [r5]
   1d50c:	mov	r0, r8
   1d510:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1d514:	cmp	r7, #0
   1d518:	beq	1d414 <myhtml_parser_token_data_to_string@@Base+0x68>
   1d51c:	ldr	r3, [fp, #200]	; 0xc8
   1d520:	cmp	r3, #0
   1d524:	bne	1d544 <myhtml_parser_token_data_to_string@@Base+0x198>
   1d528:	ldr	r1, [r5]
   1d52c:	sub	r2, r7, r0
   1d530:	add	r1, r1, r0
   1d534:	ldrb	r3, [sl, #61]	; 0x3d
   1d538:	mov	r0, r8
   1d53c:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1d540:	b	1d414 <myhtml_parser_token_data_to_string@@Base+0x68>
   1d544:	ldrb	ip, [sl, #61]	; 0x3d
   1d548:	ldr	r1, [sl, #4]
   1d54c:	ldr	r2, [r5]
   1d550:	sub	r3, r7, r0
   1d554:	add	r2, r2, r0
   1d558:	stm	sp, {r1, ip}
   1d55c:	mov	r0, r8
   1d560:	add	r1, sl, #8
   1d564:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d568:	b	1d414 <myhtml_parser_token_data_to_string@@Base+0x68>

0001d56c <myhtml_parser_token_data_to_string_charef@@Base>:
   1d56c:	push	{r4, r5, r6, r7, r8, lr}
   1d570:	mov	r7, r1
   1d574:	ldr	r0, [r0, #80]	; 0x50
   1d578:	mov	r1, r3
   1d57c:	mov	r5, r3
   1d580:	ldr	r6, [sp, #24]
   1d584:	mov	r8, r2
   1d588:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   1d58c:	ldr	r1, [r0, #12]
   1d590:	mov	r4, r0
   1d594:	sub	r1, r5, r1
   1d598:	ldr	r0, [r0, #8]
   1d59c:	add	r3, r1, r6
   1d5a0:	cmp	r3, r0
   1d5a4:	movhi	r5, #0
   1d5a8:	bhi	1d5bc <myhtml_parser_token_data_to_string_charef@@Base+0x50>
   1d5ac:	b	1d618 <myhtml_parser_token_data_to_string_charef@@Base+0xac>
   1d5b0:	ldr	r0, [r4, #8]
   1d5b4:	cmp	r0, r6
   1d5b8:	bcs	1d600 <myhtml_parser_token_data_to_string_charef@@Base+0x94>
   1d5bc:	ldr	r2, [r4]
   1d5c0:	sub	ip, r0, r1
   1d5c4:	add	r2, r2, r1
   1d5c8:	mov	r3, ip
   1d5cc:	mov	r1, r7
   1d5d0:	mov	r0, r8
   1d5d4:	sub	r6, r6, ip
   1d5d8:	bl	10754 <myhtml_data_process@plt>
   1d5dc:	ldr	r4, [r4, #20]
   1d5e0:	mov	r1, r5
   1d5e4:	cmp	r4, #0
   1d5e8:	bne	1d5b0 <myhtml_parser_token_data_to_string_charef@@Base+0x44>
   1d5ec:	mov	r0, r8
   1d5f0:	mov	r1, r7
   1d5f4:	bl	10928 <myhtml_data_process_end@plt>
   1d5f8:	ldr	r0, [r7, #8]
   1d5fc:	pop	{r4, r5, r6, r7, r8, pc}
   1d600:	mov	r3, r6
   1d604:	ldr	r2, [r4]
   1d608:	mov	r1, r7
   1d60c:	mov	r0, r8
   1d610:	bl	10754 <myhtml_data_process@plt>
   1d614:	b	1d5ec <myhtml_parser_token_data_to_string_charef@@Base+0x80>
   1d618:	ldr	r2, [r4]
   1d61c:	mov	r3, r6
   1d620:	add	r2, r2, r1
   1d624:	mov	r0, r8
   1d628:	mov	r1, r7
   1d62c:	bl	10754 <myhtml_data_process@plt>
   1d630:	mov	r0, r8
   1d634:	mov	r1, r7
   1d638:	bl	10928 <myhtml_data_process_end@plt>
   1d63c:	ldr	r0, [r7, #8]
   1d640:	pop	{r4, r5, r6, r7, r8, pc}

0001d644 <myhtml_parser_worker@@Base>:
   1d644:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d648:	sub	sp, sp, #72	; 0x48
   1d64c:	ldm	r1, {r5, r8}
   1d650:	ldr	r3, [r5, #184]	; 0xb8
   1d654:	tst	r3, #3
   1d658:	beq	1d668 <myhtml_parser_worker@@Base+0x24>
   1d65c:	ldr	r3, [r5, #184]	; 0xb8
   1d660:	tst	r3, #2
   1d664:	bne	1d7f0 <myhtml_parser_worker@@Base+0x1ac>
   1d668:	ldr	r3, [r5]
   1d66c:	ldr	r3, [r3, #4]
   1d670:	cmp	r3, #0
   1d674:	ldrne	r2, [r3, #12]
   1d678:	ldreq	r3, [r5, #144]	; 0x90
   1d67c:	ldrne	r3, [r5, #144]	; 0x90
   1d680:	addne	r0, r0, r2
   1d684:	ldr	r9, [r3, r0, lsl #2]
   1d688:	ldr	r3, [r5, #220]	; 0xdc
   1d68c:	cmp	r3, #0
   1d690:	beq	1d6a8 <myhtml_parser_worker@@Base+0x64>
   1d694:	ldr	r2, [r5, #228]	; 0xe4
   1d698:	mov	r1, r8
   1d69c:	mov	r0, r5
   1d6a0:	blx	r3
   1d6a4:	str	r0, [r5, #228]	; 0xe4
   1d6a8:	ldr	r3, [r8]
   1d6ac:	sub	r3, r3, #1
   1d6b0:	cmp	r3, #1
   1d6b4:	bls	1d814 <myhtml_parser_worker@@Base+0x1d0>
   1d6b8:	ldr	r3, [r8, #40]	; 0x28
   1d6bc:	cmp	r3, #0
   1d6c0:	beq	1d894 <myhtml_parser_worker@@Base+0x250>
   1d6c4:	add	r0, r8, #4
   1d6c8:	bl	11090 <mycore_string_clean_all@plt>
   1d6cc:	ldr	r4, [r8, #40]	; 0x28
   1d6d0:	cmp	r4, #0
   1d6d4:	beq	1d79c <myhtml_parser_worker@@Base+0x158>
   1d6d8:	add	r6, sp, #8
   1d6dc:	mov	sl, #1
   1d6e0:	ldr	r3, [r4, #52]	; 0x34
   1d6e4:	add	r0, r4, #8
   1d6e8:	cmp	r3, #0
   1d6ec:	mov	r7, r0
   1d6f0:	beq	1d7e8 <myhtml_parser_worker@@Base+0x1a4>
   1d6f4:	mov	r0, r6
   1d6f8:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1d6fc:	ldr	r3, [r4, #52]	; 0x34
   1d700:	ldr	ip, [r5, #200]	; 0xc8
   1d704:	add	r3, r3, #1
   1d708:	mov	r2, r7
   1d70c:	mov	r1, r9
   1d710:	ldr	r0, [r5, #4]
   1d714:	str	ip, [sp, #12]
   1d718:	bl	10610 <mycore_string_init@plt>
   1d71c:	ldr	r2, [r4, #52]	; 0x34
   1d720:	ldr	r3, [r4, #48]	; 0x30
   1d724:	mov	r1, r7
   1d728:	str	r2, [sp]
   1d72c:	mov	r0, r5
   1d730:	mov	r2, r6
   1d734:	bl	1100c <myhtml_parser_token_data_to_string_lowercase@plt>
   1d738:	ldr	r3, [r4, #60]	; 0x3c
   1d73c:	mov	r0, r6
   1d740:	cmp	r3, #0
   1d744:	add	r7, r4, #28
   1d748:	beq	1d7d0 <myhtml_parser_worker@@Base+0x18c>
   1d74c:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1d750:	ldr	r3, [r4, #60]	; 0x3c
   1d754:	ldr	ip, [r5, #200]	; 0xc8
   1d758:	ldr	r0, [r5, #4]
   1d75c:	add	r3, r3, #1
   1d760:	mov	r2, r7
   1d764:	mov	r1, r9
   1d768:	str	ip, [sp, #12]
   1d76c:	strb	sl, [sp, #68]	; 0x44
   1d770:	bl	10610 <mycore_string_init@plt>
   1d774:	ldr	r2, [r4, #60]	; 0x3c
   1d778:	ldr	r3, [r4, #56]	; 0x38
   1d77c:	mov	r1, r7
   1d780:	str	r2, [sp]
   1d784:	mov	r0, r5
   1d788:	mov	r2, r6
   1d78c:	bl	10400 <myhtml_parser_token_data_to_string_charef@plt>
   1d790:	ldr	r4, [r4]
   1d794:	cmp	r4, #0
   1d798:	bne	1d6e0 <myhtml_parser_worker@@Base+0x9c>
   1d79c:	ldr	r3, [r8, #48]	; 0x30
   1d7a0:	ldr	r4, [r5, #224]	; 0xe0
   1d7a4:	orr	r3, r3, #4
   1d7a8:	cmp	r4, #0
   1d7ac:	str	r3, [r8, #48]	; 0x30
   1d7b0:	beq	1d7c8 <myhtml_parser_worker@@Base+0x184>
   1d7b4:	mov	r1, r8
   1d7b8:	ldr	r2, [r5, #232]	; 0xe8
   1d7bc:	mov	r0, r5
   1d7c0:	blx	r4
   1d7c4:	str	r0, [r5, #232]	; 0xe8
   1d7c8:	add	sp, sp, #72	; 0x48
   1d7cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d7d0:	add	r0, r4, #28
   1d7d4:	bl	11090 <mycore_string_clean_all@plt>
   1d7d8:	ldr	r4, [r4]
   1d7dc:	cmp	r4, #0
   1d7e0:	bne	1d6e0 <myhtml_parser_worker@@Base+0x9c>
   1d7e4:	b	1d79c <myhtml_parser_worker@@Base+0x158>
   1d7e8:	bl	11090 <mycore_string_clean_all@plt>
   1d7ec:	b	1d738 <myhtml_parser_worker@@Base+0xf4>
   1d7f0:	ldr	r3, [r5, #220]	; 0xdc
   1d7f4:	cmp	r3, #0
   1d7f8:	beq	1d79c <myhtml_parser_worker@@Base+0x158>
   1d7fc:	ldr	r2, [r5, #228]	; 0xe4
   1d800:	mov	r1, r8
   1d804:	mov	r0, r5
   1d808:	blx	r3
   1d80c:	str	r0, [r5, #228]	; 0xe4
   1d810:	b	1d79c <myhtml_parser_worker@@Base+0x158>
   1d814:	ldr	r3, [r8, #28]
   1d818:	add	r4, r8, #4
   1d81c:	mov	r2, r4
   1d820:	mov	r1, r9
   1d824:	add	r3, r3, #1
   1d828:	ldr	r0, [r5, #4]
   1d82c:	bl	10610 <mycore_string_init@plt>
   1d830:	add	r6, sp, #8
   1d834:	mov	r3, #0
   1d838:	str	r3, [r8, #40]	; 0x28
   1d83c:	str	r3, [r8, #44]	; 0x2c
   1d840:	mov	r0, r6
   1d844:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1d848:	ldr	r2, [r8, #48]	; 0x30
   1d84c:	ldr	r3, [r5, #200]	; 0xc8
   1d850:	tst	r2, #512	; 0x200
   1d854:	str	r3, [sp, #12]
   1d858:	bne	1d8c4 <myhtml_parser_worker@@Base+0x280>
   1d85c:	ldr	r3, [r8, #48]	; 0x30
   1d860:	tst	r3, #16
   1d864:	bne	1d874 <myhtml_parser_worker@@Base+0x230>
   1d868:	ldr	r3, [r8, #48]	; 0x30
   1d86c:	tst	r3, #256	; 0x100
   1d870:	beq	1d8a4 <myhtml_parser_worker@@Base+0x260>
   1d874:	ldr	r0, [r8, #28]
   1d878:	ldr	r3, [r8, #24]
   1d87c:	mov	r2, r6
   1d880:	str	r0, [sp]
   1d884:	mov	r1, r4
   1d888:	mov	r0, r5
   1d88c:	bl	10400 <myhtml_parser_token_data_to_string_charef@plt>
   1d890:	b	1d79c <myhtml_parser_worker@@Base+0x158>
   1d894:	str	r3, [r8, #44]	; 0x2c
   1d898:	add	r0, r8, #4
   1d89c:	bl	11090 <mycore_string_clean_all@plt>
   1d8a0:	b	1d79c <myhtml_parser_worker@@Base+0x158>
   1d8a4:	ldr	r0, [r8, #28]
   1d8a8:	ldr	r3, [r8, #24]
   1d8ac:	mov	r2, r6
   1d8b0:	str	r0, [sp]
   1d8b4:	mov	r1, r4
   1d8b8:	mov	r0, r5
   1d8bc:	bl	10acc <myhtml_parser_token_data_to_string@plt>
   1d8c0:	b	1d79c <myhtml_parser_worker@@Base+0x158>
   1d8c4:	ldr	r0, [r8, #28]
   1d8c8:	ldr	r3, [r8, #24]
   1d8cc:	mov	ip, #1
   1d8d0:	str	r0, [sp]
   1d8d4:	mov	r2, r6
   1d8d8:	mov	r1, r4
   1d8dc:	mov	r0, r5
   1d8e0:	strb	ip, [sp, #69]	; 0x45
   1d8e4:	bl	10400 <myhtml_parser_token_data_to_string_charef@plt>
   1d8e8:	b	1d79c <myhtml_parser_worker@@Base+0x158>

0001d8ec <myhtml_parser_worker_stream@@Base>:
   1d8ec:	push	{r4, r5, r6, lr}
   1d8f0:	mov	r4, r0
   1d8f4:	mov	r5, r1
   1d8f8:	bl	fd7c <myhtml_parser_worker@plt>
   1d8fc:	mov	r1, r5
   1d900:	mov	r0, r4
   1d904:	pop	{r4, r5, r6, lr}
   1d908:	b	10ff4 <myhtml_parser_stream@plt>

0001d90c <myhtml_insertion_mode_text@@Base>:
   1d90c:	ldr	r3, [r1, #48]	; 0x30
   1d910:	push	{r4, r5, r6, lr}
   1d914:	ands	r4, r3, #1
   1d918:	mov	r5, r0
   1d91c:	ldr	r3, [r1]
   1d920:	beq	1d938 <myhtml_insertion_mode_text@@Base+0x2c>
   1d924:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1d928:	ldr	r3, [r5, #172]	; 0xac
   1d92c:	mov	r0, #0
   1d930:	str	r3, [r5, #168]	; 0xa8
   1d934:	pop	{r4, r5, r6, pc}
   1d938:	cmp	r3, #251	; 0xfb
   1d93c:	beq	1d94c <myhtml_insertion_mode_text@@Base+0x40>
   1d940:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1d944:	mov	r0, r4
   1d948:	pop	{r4, r5, r6, pc}
   1d94c:	bl	10628 <myhtml_tree_current_node@plt>
   1d950:	ldr	r3, [r0, #4]
   1d954:	cmp	r3, #112	; 0x70
   1d958:	ldreq	r3, [r0]
   1d95c:	orreq	r3, r3, #8
   1d960:	streq	r3, [r0]
   1d964:	mov	r0, r5
   1d968:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1d96c:	ldr	r3, [r5, #172]	; 0xac
   1d970:	mov	r0, #1
   1d974:	str	r3, [r5, #168]	; 0xa8
   1d978:	pop	{r4, r5, r6, pc}

0001d97c <myhtml_insertion_fix_emit_for_text_begin_ws@@Base>:
   1d97c:	push	{r4, lr}
   1d980:	mov	r4, r1
   1d984:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1d988:	add	r0, r4, #4
   1d98c:	pop	{r4, lr}
   1d990:	b	104b4 <mycore_string_crop_whitespace_from_begin@plt>

0001d994 <myhtml_insertion_mode_initial@@Base>:
   1d994:	push	{r4, r5, r6, lr}
   1d998:	mov	r5, r0
   1d99c:	ldr	r4, [r1]
   1d9a0:	cmp	r4, #2
   1d9a4:	beq	1da38 <myhtml_insertion_mode_initial@@Base+0xa4>
   1d9a8:	cmp	r4, #3
   1d9ac:	mov	r6, r1
   1d9b0:	beq	1d9e0 <myhtml_insertion_mode_initial@@Base+0x4c>
   1d9b4:	cmp	r4, #1
   1d9b8:	beq	1d9cc <myhtml_insertion_mode_initial@@Base+0x38>
   1d9bc:	mov	r0, #1
   1d9c0:	str	r0, [r5, #176]	; 0xb0
   1d9c4:	str	r0, [r5, #168]	; 0xa8
   1d9c8:	pop	{r4, r5, r6, pc}
   1d9cc:	ldr	r3, [r1, #48]	; 0x30
   1d9d0:	tst	r3, #8
   1d9d4:	beq	1da58 <myhtml_insertion_mode_initial@@Base+0xc4>
   1d9d8:	mov	r0, #0
   1d9dc:	pop	{r4, r5, r6, pc}
   1d9e0:	ldr	r0, [r0, #8]
   1d9e4:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1d9e8:	add	r2, r5, #108	; 0x6c
   1d9ec:	mov	r1, r6
   1d9f0:	ldr	r0, [r5, #8]
   1d9f4:	bl	fc20 <myhtml_token_release_and_check_doctype_attributes@plt>
   1d9f8:	ldr	r3, [r5, #184]	; 0xb8
   1d9fc:	tst	r3, #8
   1da00:	beq	1da48 <myhtml_insertion_mode_initial@@Base+0xb4>
   1da04:	ldrb	r3, [r5, #108]	; 0x6c
   1da08:	cmp	r3, #0
   1da0c:	bne	1da28 <myhtml_insertion_mode_initial@@Base+0x94>
   1da10:	ldr	r3, [r5, #116]	; 0x74
   1da14:	cmp	r3, #0
   1da18:	beq	1da70 <myhtml_insertion_mode_initial@@Base+0xdc>
   1da1c:	ldr	r3, [r5, #120]	; 0x78
   1da20:	cmp	r3, #0
   1da24:	beq	1da70 <myhtml_insertion_mode_initial@@Base+0xdc>
   1da28:	mov	r3, #1
   1da2c:	str	r3, [r5, #168]	; 0xa8
   1da30:	mov	r0, #0
   1da34:	pop	{r4, r5, r6, pc}
   1da38:	ldr	r2, [r0, #84]	; 0x54
   1da3c:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1da40:	mov	r0, #0
   1da44:	pop	{r4, r5, r6, pc}
   1da48:	mov	r1, r6
   1da4c:	mov	r0, r5
   1da50:	bl	10e2c <myhtml_tree_node_insert_doctype@plt>
   1da54:	b	1da04 <myhtml_insertion_mode_initial@@Base+0x70>
   1da58:	ldr	r0, [r0, #8]
   1da5c:	bl	10118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1da60:	str	r4, [r5, #176]	; 0xb0
   1da64:	str	r4, [r5, #168]	; 0xa8
   1da68:	mov	r0, r4
   1da6c:	pop	{r4, r5, r6, pc}
   1da70:	mov	r3, #1
   1da74:	str	r3, [r5, #176]	; 0xb0
   1da78:	b	1da28 <myhtml_insertion_mode_initial@@Base+0x94>

0001da7c <myhtml_insertion_mode_before_html@@Base>:
   1da7c:	ldr	r3, [r1, #48]	; 0x30
   1da80:	push	{r4, r5, r6, r7, r8, lr}
   1da84:	ands	r4, r3, #1
   1da88:	mov	r5, r0
   1da8c:	beq	1dab4 <myhtml_insertion_mode_before_html@@Base+0x38>
   1da90:	ldr	r3, [r1]
   1da94:	cmp	r3, #61	; 0x3d
   1da98:	beq	1daf4 <myhtml_insertion_mode_before_html@@Base+0x78>
   1da9c:	bhi	1daec <myhtml_insertion_mode_before_html@@Base+0x70>
   1daa0:	sub	r3, r3, #23
   1daa4:	cmp	r3, #1
   1daa8:	bls	1daf4 <myhtml_insertion_mode_before_html@@Base+0x78>
   1daac:	mov	r0, #0
   1dab0:	pop	{r4, r5, r6, r7, r8, pc}
   1dab4:	ldr	r6, [r1]
   1dab8:	cmp	r6, #2
   1dabc:	beq	1db14 <myhtml_insertion_mode_before_html@@Base+0x98>
   1dac0:	bls	1db24 <myhtml_insertion_mode_before_html@@Base+0xa8>
   1dac4:	cmp	r6, #3
   1dac8:	beq	1daac <myhtml_insertion_mode_before_html@@Base+0x30>
   1dacc:	cmp	r6, #65	; 0x41
   1dad0:	bne	1daf4 <myhtml_insertion_mode_before_html@@Base+0x78>
   1dad4:	mov	r2, #1
   1dad8:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   1dadc:	mov	r3, #2
   1dae0:	mov	r0, r4
   1dae4:	str	r3, [r5, #168]	; 0xa8
   1dae8:	pop	{r4, r5, r6, r7, r8, pc}
   1daec:	cmp	r3, #65	; 0x41
   1daf0:	bne	1daac <myhtml_insertion_mode_before_html@@Base+0x30>
   1daf4:	mov	r2, #1
   1daf8:	mov	r1, #0
   1dafc:	mov	r0, r5
   1db00:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   1db04:	mov	r3, #2
   1db08:	str	r3, [r5, #168]	; 0xa8
   1db0c:	mov	r0, #1
   1db10:	pop	{r4, r5, r6, r7, r8, pc}
   1db14:	ldr	r2, [r0, #84]	; 0x54
   1db18:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1db1c:	mov	r0, r4
   1db20:	pop	{r4, r5, r6, r7, r8, pc}
   1db24:	cmp	r6, #1
   1db28:	bne	1daf4 <myhtml_insertion_mode_before_html@@Base+0x78>
   1db2c:	ldr	r3, [r1, #48]	; 0x30
   1db30:	ands	r7, r3, #8
   1db34:	bne	1daac <myhtml_insertion_mode_before_html@@Base+0x30>
   1db38:	ldr	r0, [r0, #8]
   1db3c:	bl	10118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1db40:	mov	r2, r6
   1db44:	mov	r1, r7
   1db48:	mov	r0, r5
   1db4c:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   1db50:	mov	r3, #2
   1db54:	mov	r0, r6
   1db58:	str	r3, [r5, #168]	; 0xa8
   1db5c:	pop	{r4, r5, r6, r7, r8, pc}

0001db60 <myhtml_insertion_fix_split_for_text_begin_ws@@Base>:
   1db60:	push	{r4, r5, r6, r7, r8, lr}
   1db64:	mov	r4, r1
   1db68:	mov	r5, r0
   1db6c:	ldr	r0, [r0, #8]
   1db70:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1db74:	add	r0, r4, #4
   1db78:	bl	10de4 <mycore_string_whitespace_from_begin@plt>
   1db7c:	subs	r7, r0, #0
   1db80:	moveq	r6, r7
   1db84:	beq	1dbec <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x8c>
   1db88:	ldr	r1, [r5, #40]	; 0x28
   1db8c:	ldr	r0, [r5, #8]
   1db90:	bl	10a0c <myhtml_token_node_create@plt>
   1db94:	subs	r6, r0, #0
   1db98:	beq	1dbec <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x8c>
   1db9c:	add	r8, r6, #4
   1dba0:	add	r3, r7, #2
   1dba4:	mov	r2, r8
   1dba8:	ldr	r1, [r5, #52]	; 0x34
   1dbac:	ldr	r0, [r5, #4]
   1dbb0:	bl	10610 <mycore_string_init@plt>
   1dbb4:	mov	r2, r7
   1dbb8:	mov	r0, r8
   1dbbc:	ldr	r1, [r4, #4]
   1dbc0:	bl	108d4 <mycore_string_append@plt>
   1dbc4:	ldr	r3, [r6, #48]	; 0x30
   1dbc8:	mov	r1, r7
   1dbcc:	orr	r3, r3, #4
   1dbd0:	str	r3, [r6, #48]	; 0x30
   1dbd4:	ldr	r0, [r4, #4]
   1dbd8:	bl	10c64 <mchar_async_crop_first_chars_without_cache@plt>
   1dbdc:	ldr	r3, [r4, #12]
   1dbe0:	sub	r7, r3, r7
   1dbe4:	str	r7, [r4, #12]
   1dbe8:	str	r0, [r4, #4]
   1dbec:	mov	r0, r6
   1dbf0:	pop	{r4, r5, r6, r7, r8, pc}

0001dbf4 <myhtml_insertion_fix_for_null_char_drop_all@@Base>:
   1dbf4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1dbf8:	mov	r6, r1
   1dbfc:	ldr	r0, [r0, #8]
   1dc00:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1dc04:	ldr	r5, [r6, #12]
   1dc08:	cmp	r5, #0
   1dc0c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dc10:	mov	lr, #0
   1dc14:	mov	r8, lr
   1dc18:	mov	r7, lr
   1dc1c:	ldr	r9, [r6, #4]
   1dc20:	add	r1, r9, lr
   1dc24:	ldrb	r3, [r9, lr]
   1dc28:	cmp	r3, #0
   1dc2c:	bne	1dc98 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xa4>
   1dc30:	cmp	r5, lr
   1dc34:	bls	1dcf8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x104>
   1dc38:	add	r3, lr, #1
   1dc3c:	add	r3, r9, r3
   1dc40:	mov	r2, lr
   1dc44:	b	1dc58 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x64>
   1dc48:	ldrb	r0, [r3]
   1dc4c:	add	r3, r3, #1
   1dc50:	cmp	r0, #0
   1dc54:	bne	1dca8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xb4>
   1dc58:	add	r2, r2, #1
   1dc5c:	cmp	r5, r2
   1dc60:	mov	r1, r3
   1dc64:	bne	1dc48 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x54>
   1dc68:	add	r1, r9, r5
   1dc6c:	mov	r4, r5
   1dc70:	ldr	r3, [r6, #12]
   1dc74:	mov	r2, r7
   1dc78:	add	r3, lr, r3
   1dc7c:	sub	r3, r3, r4
   1dc80:	str	r3, [r6, #12]
   1dc84:	sub	r0, lr, r8
   1dc88:	add	r0, r9, r0
   1dc8c:	bl	fe78 <memmove@plt>
   1dc90:	add	r8, r8, #1
   1dc94:	sub	lr, r4, #1
   1dc98:	add	lr, lr, #1
   1dc9c:	cmp	r5, lr
   1dca0:	bhi	1dc1c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x28>
   1dca4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dca8:	ldr	r3, [r6, #12]
   1dcac:	add	r3, lr, r3
   1dcb0:	sub	r3, r3, r2
   1dcb4:	str	r3, [r6, #12]
   1dcb8:	ldrb	r3, [r1]
   1dcbc:	cmp	r3, #0
   1dcc0:	moveq	r4, r2
   1dcc4:	moveq	r2, r7
   1dcc8:	beq	1dc84 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x90>
   1dccc:	add	r3, r9, r2
   1dcd0:	mov	r4, r2
   1dcd4:	b	1dce4 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xf0>
   1dcd8:	ldrb	ip, [r3, #1]!
   1dcdc:	cmp	ip, #0
   1dce0:	beq	1dcf0 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xfc>
   1dce4:	add	r4, r4, #1
   1dce8:	cmp	r5, r4
   1dcec:	bhi	1dcd8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xe4>
   1dcf0:	sub	r2, r4, r2
   1dcf4:	b	1dc84 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x90>
   1dcf8:	mov	r4, lr
   1dcfc:	b	1dc70 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x7c>

0001dd00 <myhtml_insertion_mode_in_body_other_end_tag@@Base>:
   1dd00:	ldr	r3, [r0, #128]	; 0x80
   1dd04:	push	{r4, r5, r6, r7, r8, lr}
   1dd08:	ldr	r6, [r3, #4]
   1dd0c:	cmp	r6, #0
   1dd10:	beq	1dd80 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x80>
   1dd14:	sub	r5, r6, #-1073741823	; 0xc0000001
   1dd18:	mov	r8, r1
   1dd1c:	mov	r7, r0
   1dd20:	lsl	r5, r5, #2
   1dd24:	b	1dd34 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x34>
   1dd28:	cmp	r6, #0
   1dd2c:	beq	1dd80 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x80>
   1dd30:	ldr	r3, [r7, #128]	; 0x80
   1dd34:	ldr	r3, [r3]
   1dd38:	ldr	r2, [r8]
   1dd3c:	sub	r6, r6, #1
   1dd40:	ldr	r4, [r3, r5]
   1dd44:	sub	r5, r5, #4
   1dd48:	ldr	r3, [r4, #4]
   1dd4c:	cmp	r3, r2
   1dd50:	mov	r1, r3
   1dd54:	bne	1dd64 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x64>
   1dd58:	ldr	r2, [r4, #8]
   1dd5c:	cmp	r2, #1
   1dd60:	beq	1dd88 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x88>
   1dd64:	ldr	r0, [r7, #28]
   1dd68:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1dd6c:	ldr	r3, [r4, #8]
   1dd70:	add	r3, r3, #4
   1dd74:	ldr	r3, [r0, r3, lsl #2]
   1dd78:	tst	r3, #2
   1dd7c:	beq	1dd28 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x28>
   1dd80:	mov	r0, #0
   1dd84:	pop	{r4, r5, r6, r7, r8, pc}
   1dd88:	mov	r0, r7
   1dd8c:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1dd90:	mov	r0, r7
   1dd94:	bl	10628 <myhtml_tree_current_node@plt>
   1dd98:	mov	r0, r7
   1dd9c:	mov	r1, r4
   1dda0:	mov	r2, #0
   1dda4:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   1dda8:	mov	r0, #0
   1ddac:	pop	{r4, r5, r6, r7, r8, pc}

0001ddb0 <myhtml_insertion_mode_in_foreign_content_end_other@@Base>:
   1ddb0:	ldr	r3, [r0, #128]	; 0x80
   1ddb4:	push	{r4, r5, r6, lr}
   1ddb8:	ldr	r1, [r3, #4]
   1ddbc:	cmp	r1, #0
   1ddc0:	beq	1de3c <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x8c>
   1ddc4:	ldr	r4, [r3, #4]
   1ddc8:	ldr	r3, [r3]
   1ddcc:	subs	ip, r4, #1
   1ddd0:	beq	1de3c <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x8c>
   1ddd4:	ldr	r1, [r3, ip, lsl #2]
   1ddd8:	ldr	r5, [r2]
   1dddc:	lsl	ip, ip, #2
   1dde0:	ldr	lr, [r1, #4]
   1dde4:	cmp	r5, lr
   1dde8:	beq	1de58 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xa8>
   1ddec:	add	lr, r3, ip
   1ddf0:	sub	ip, r4, #2
   1ddf4:	ldr	r1, [lr, #-4]
   1ddf8:	ldr	r1, [r1, #8]
   1ddfc:	cmp	r1, #1
   1de00:	beq	1de3c <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x8c>
   1de04:	sub	r4, r4, #-1073741822	; 0xc0000002
   1de08:	add	r3, r3, r4, lsl #2
   1de0c:	b	1de34 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x84>
   1de10:	ldr	r1, [r3]
   1de14:	sub	ip, ip, #1
   1de18:	ldr	r4, [r1, #4]
   1de1c:	cmp	r5, r4
   1de20:	beq	1de58 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xa8>
   1de24:	ldr	lr, [r3, #-4]!
   1de28:	ldr	lr, [lr, #8]
   1de2c:	cmp	lr, #1
   1de30:	beq	1de3c <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x8c>
   1de34:	cmp	ip, #0
   1de38:	bne	1de10 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x60>
   1de3c:	ldr	r3, [r0]
   1de40:	ldr	ip, [r0, #168]	; 0xa8
   1de44:	mov	r1, r2
   1de48:	ldr	r3, [r3, #28]
   1de4c:	pop	{r4, r5, r6, lr}
   1de50:	ldr	r3, [r3, ip, lsl #2]
   1de54:	bx	r3
   1de58:	mov	r2, #0
   1de5c:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   1de60:	mov	r0, #0
   1de64:	pop	{r4, r5, r6, pc}

0001de68 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>:
   1de68:	push	{r4, r5, r6, lr}
   1de6c:	mov	r5, r1
   1de70:	mov	r6, r0
   1de74:	bl	10d48 <myhtml_tree_adjusted_current_node@plt>
   1de78:	mov	r1, r5
   1de7c:	mov	r4, r0
   1de80:	ldr	r0, [r6, #8]
   1de84:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1de88:	ldr	r3, [r4, #8]
   1de8c:	cmp	r3, #2
   1de90:	beq	1deec <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x84>
   1de94:	cmp	r3, #3
   1de98:	beq	1def8 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x90>
   1de9c:	mov	r0, r5
   1dea0:	bl	10be0 <myhtml_token_adjust_foreign_attributes@plt>
   1dea4:	mov	r1, r5
   1dea8:	mov	r0, r6
   1deac:	bl	10d84 <myhtml_tree_node_insert_foreign_element@plt>
   1deb0:	ldr	r3, [r5, #48]	; 0x30
   1deb4:	ldr	r2, [r4, #8]
   1deb8:	ands	r4, r3, #2
   1debc:	str	r2, [r0, #8]
   1dec0:	beq	1dee4 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x7c>
   1dec4:	ldr	r4, [r5]
   1dec8:	mov	r0, r6
   1decc:	cmp	r4, #112	; 0x70
   1ded0:	cmpeq	r2, #3
   1ded4:	moveq	r4, #1
   1ded8:	movne	r4, #0
   1dedc:	beq	1df04 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x9c>
   1dee0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1dee4:	mov	r0, r4
   1dee8:	pop	{r4, r5, r6, pc}
   1deec:	mov	r0, r5
   1def0:	bl	ff74 <myhtml_token_adjust_mathml_attributes@plt>
   1def4:	b	1de9c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x34>
   1def8:	mov	r0, r5
   1defc:	bl	101d8 <myhtml_token_adjust_svg_attributes@plt>
   1df00:	b	1de9c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x34>
   1df04:	bl	10628 <myhtml_tree_current_node@plt>
   1df08:	mov	r2, r5
   1df0c:	mov	r1, r0
   1df10:	mov	r0, r6
   1df14:	pop	{r4, r5, r6, lr}
   1df18:	b	fcf8 <myhtml_insertion_mode_in_foreign_content_end_other@plt>

0001df1c <myhtml_insertion_mode_in_foreign_content@@Base>:
   1df1c:	ldr	r3, [r1, #48]	; 0x30
   1df20:	push	{r4, r5, r6, lr}
   1df24:	tst	r3, #1
   1df28:	mov	r4, r1
   1df2c:	mov	r5, r0
   1df30:	bne	1e1a4 <myhtml_insertion_mode_in_foreign_content@@Base+0x288>
   1df34:	ldr	r2, [r1]
   1df38:	sub	r3, r2, #1
   1df3c:	cmp	r3, #139	; 0x8b
   1df40:	addls	pc, pc, r3, lsl #2
   1df44:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df48:	b	1e234 <myhtml_insertion_mode_in_foreign_content@@Base+0x318>
   1df4c:	b	1e270 <myhtml_insertion_mode_in_foreign_content@@Base+0x354>
   1df50:	b	1e178 <myhtml_insertion_mode_in_foreign_content@@Base+0x25c>
   1df54:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df58:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df5c:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df60:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df64:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df68:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df6c:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df70:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df74:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df78:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df7c:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1df80:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df84:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df88:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df8c:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df90:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df94:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1df98:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df9c:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dfa0:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dfa4:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dfa8:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfac:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfb0:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfb4:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dfb8:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfbc:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dfc0:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfc4:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfc8:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfcc:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfd0:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfd4:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dfd8:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfdc:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfe0:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfe4:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfe8:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfec:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dff0:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dff4:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dff8:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dffc:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e000:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e004:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e008:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e00c:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e010:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e014:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e018:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e01c:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e020:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e024:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e028:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e02c:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e030:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e034:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e038:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e03c:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e040:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e044:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e048:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e04c:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e050:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e054:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e058:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e05c:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e060:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e064:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e068:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e06c:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e070:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e074:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e078:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e07c:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e080:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e084:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e088:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e08c:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e090:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e094:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e098:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e09c:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e0a0:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0a4:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0a8:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0ac:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e0b0:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0b4:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0b8:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0bc:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0c0:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e0c4:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0c8:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0cc:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0d0:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e0d4:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0d8:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0dc:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e0e0:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0e4:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0e8:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0ec:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0f0:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0f4:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0f8:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e0fc:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e100:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e104:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e108:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e10c:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e110:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e114:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e118:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e11c:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e120:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e124:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e128:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e12c:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e130:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e134:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e138:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e13c:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e140:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e144:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e148:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e14c:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e150:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e154:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e158:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e15c:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e160:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e164:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e168:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e16c:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e170:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e174:	b	1e180 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e178:	mov	r0, #0
   1e17c:	pop	{r4, r5, r6, pc}
   1e180:	cmp	r2, #50	; 0x32
   1e184:	beq	1e2a8 <myhtml_insertion_mode_in_foreign_content@@Base+0x38c>
   1e188:	ldr	r3, [r5, #88]	; 0x58
   1e18c:	cmp	r3, #0
   1e190:	beq	1e20c <myhtml_insertion_mode_in_foreign_content@@Base+0x2f0>
   1e194:	mov	r1, r4
   1e198:	mov	r0, r5
   1e19c:	pop	{r4, r5, r6, lr}
   1e1a0:	b	fe90 <myhtml_insertion_mode_in_foreign_content_start_other@plt>
   1e1a4:	bl	10628 <myhtml_tree_current_node@plt>
   1e1a8:	ldr	r3, [r4]
   1e1ac:	cmp	r3, #112	; 0x70
   1e1b0:	bne	1e1cc <myhtml_insertion_mode_in_foreign_content@@Base+0x2b0>
   1e1b4:	ldr	r3, [r0, #4]
   1e1b8:	cmp	r3, #112	; 0x70
   1e1bc:	bne	1e1cc <myhtml_insertion_mode_in_foreign_content@@Base+0x2b0>
   1e1c0:	ldr	r3, [r0, #8]
   1e1c4:	cmp	r3, #3
   1e1c8:	beq	1e280 <myhtml_insertion_mode_in_foreign_content@@Base+0x364>
   1e1cc:	mov	r2, r4
   1e1d0:	mov	r1, r0
   1e1d4:	mov	r0, r5
   1e1d8:	pop	{r4, r5, r6, lr}
   1e1dc:	b	fcf8 <myhtml_insertion_mode_in_foreign_content_end_other@plt>
   1e1e0:	bl	10040 <myhtml_tree_is_mathml_integration_point@plt>
   1e1e4:	mov	r1, r4
   1e1e8:	cmp	r0, #0
   1e1ec:	mov	r0, r5
   1e1f0:	bne	1e22c <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1e1f4:	bl	101fc <myhtml_tree_is_html_integration_point@plt>
   1e1f8:	cmp	r0, #0
   1e1fc:	bne	1e22c <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1e200:	ldr	r3, [r4, #8]
   1e204:	cmp	r3, #1
   1e208:	beq	1e22c <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1e20c:	mov	r0, r5
   1e210:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1e214:	mov	r0, r5
   1e218:	bl	10628 <myhtml_tree_current_node@plt>
   1e21c:	subs	r4, r0, #0
   1e220:	mov	r1, r4
   1e224:	mov	r0, r5
   1e228:	bne	1e1e0 <myhtml_insertion_mode_in_foreign_content@@Base+0x2c4>
   1e22c:	mov	r0, #1
   1e230:	pop	{r4, r5, r6, pc}
   1e234:	ldr	r3, [r1, #48]	; 0x30
   1e238:	tst	r3, #2048	; 0x800
   1e23c:	bne	1e290 <myhtml_insertion_mode_in_foreign_content@@Base+0x374>
   1e240:	mov	r1, r4
   1e244:	mov	r0, r5
   1e248:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1e24c:	ldr	r0, [r4, #48]	; 0x30
   1e250:	ands	r0, r0, #8
   1e254:	bne	1e178 <myhtml_insertion_mode_in_foreign_content@@Base+0x25c>
   1e258:	ldr	r3, [r5, #180]	; 0xb4
   1e25c:	ldr	r2, [r5, #180]	; 0xb4
   1e260:	and	r3, r3, #2
   1e264:	eor	r3, r3, r2
   1e268:	str	r3, [r5, #180]	; 0xb4
   1e26c:	pop	{r4, r5, r6, pc}
   1e270:	mov	r2, #0
   1e274:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1e278:	mov	r0, #0
   1e27c:	pop	{r4, r5, r6, pc}
   1e280:	mov	r0, r5
   1e284:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1e288:	mov	r0, #0
   1e28c:	pop	{r4, r5, r6, pc}
   1e290:	ldr	r0, [r0, #8]
   1e294:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1e298:	mov	r1, r4
   1e29c:	mov	r0, r5
   1e2a0:	bl	10334 <myhtml_token_set_replacement_character_for_null_token@plt>
   1e2a4:	b	1e240 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1e2a8:	ldr	r0, [r0, #8]
   1e2ac:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1e2b0:	ldr	r1, [pc, #80]	; 1e308 <myhtml_insertion_mode_in_foreign_content@@Base+0x3ec>
   1e2b4:	mov	r2, #5
   1e2b8:	add	r1, pc, r1
   1e2bc:	mov	r0, r4
   1e2c0:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   1e2c4:	cmp	r0, #0
   1e2c8:	bne	1e188 <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   1e2cc:	ldr	r1, [pc, #56]	; 1e30c <myhtml_insertion_mode_in_foreign_content@@Base+0x3f0>
   1e2d0:	mov	r2, #4
   1e2d4:	add	r1, pc, r1
   1e2d8:	mov	r0, r4
   1e2dc:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   1e2e0:	cmp	r0, #0
   1e2e4:	bne	1e188 <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   1e2e8:	ldr	r1, [pc, #32]	; 1e310 <myhtml_insertion_mode_in_foreign_content@@Base+0x3f4>
   1e2ec:	mov	r2, #4
   1e2f0:	add	r1, pc, r1
   1e2f4:	mov	r0, r4
   1e2f8:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   1e2fc:	cmp	r0, #0
   1e300:	bne	1e188 <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   1e304:	b	1e194 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e308:	andeq	sp, sp, r0, asr #21
   1e30c:	andeq	sp, sp, ip, lsr #21
   1e310:	muleq	sp, r8, sl

0001e314 <myhtml_rules_stop_parsing@@Base>:
   1e314:	bx	lr

0001e318 <myhtml_insertion_mode_in_body@@Base>:
   1e318:	ldr	r3, [r1, #48]	; 0x30
   1e31c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e320:	tst	r3, #1
   1e324:	sub	sp, sp, #20
   1e328:	mov	r5, r1
   1e32c:	mov	r4, r0
   1e330:	beq	1e568 <myhtml_insertion_mode_in_body@@Base+0x250>
   1e334:	ldr	r1, [r1]
   1e338:	sub	r3, r1, #4
   1e33c:	cmp	r3, #135	; 0x87
   1e340:	addls	pc, pc, r3, lsl #2
   1e344:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e348:	b	1e9f0 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e34c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e350:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e354:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e358:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e35c:	b	1ebe0 <myhtml_insertion_mode_in_body@@Base+0x8c8>
   1e360:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e364:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e368:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e36c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e370:	b	1e9f0 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e374:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e378:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e37c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e380:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e384:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e388:	b	1e9f0 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e38c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e390:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e394:	b	1eb94 <myhtml_insertion_mode_in_body@@Base+0x87c>
   1e398:	b	1eb3c <myhtml_insertion_mode_in_body@@Base+0x824>
   1e39c:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3a0:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3a4:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3a8:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3ac:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3b0:	b	1e9f0 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e3b4:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3b8:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3bc:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3c0:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3c4:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3c8:	b	1ecf4 <myhtml_insertion_mode_in_body@@Base+0x9dc>
   1e3cc:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3d0:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3d4:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3d8:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3dc:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3e0:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3e4:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3e8:	b	1ecf4 <myhtml_insertion_mode_in_body@@Base+0x9dc>
   1e3ec:	b	1e9f0 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e3f0:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3f4:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3f8:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3fc:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e400:	b	1e9f0 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e404:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e408:	b	1ec84 <myhtml_insertion_mode_in_body@@Base+0x96c>
   1e40c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e410:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e414:	b	1ead0 <myhtml_insertion_mode_in_body@@Base+0x7b8>
   1e418:	b	1ead0 <myhtml_insertion_mode_in_body@@Base+0x7b8>
   1e41c:	b	1ead0 <myhtml_insertion_mode_in_body@@Base+0x7b8>
   1e420:	b	1ead0 <myhtml_insertion_mode_in_body@@Base+0x7b8>
   1e424:	b	1ead0 <myhtml_insertion_mode_in_body@@Base+0x7b8>
   1e428:	b	1ead0 <myhtml_insertion_mode_in_body@@Base+0x7b8>
   1e42c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e430:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e434:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e438:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e43c:	b	1ea84 <myhtml_insertion_mode_in_body@@Base+0x76c>
   1e440:	b	1e9f0 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e444:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e448:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e44c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e450:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e454:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e458:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e45c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e460:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e464:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e468:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e46c:	b	1ea30 <myhtml_insertion_mode_in_body@@Base+0x718>
   1e470:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e474:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e478:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e47c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e480:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e484:	b	1ebe0 <myhtml_insertion_mode_in_body@@Base+0x8c8>
   1e488:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e48c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e490:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e494:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e498:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e49c:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e4a0:	b	1e9f0 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e4a4:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4a8:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4ac:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4b0:	b	1ebe0 <myhtml_insertion_mode_in_body@@Base+0x8c8>
   1e4b4:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e4b8:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4bc:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4c0:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4c4:	b	1ea04 <myhtml_insertion_mode_in_body@@Base+0x6ec>
   1e4c8:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4cc:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4d0:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e4d4:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4d8:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4dc:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4e0:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4e4:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4e8:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4ec:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4f0:	b	1e9f0 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e4f4:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4f8:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4fc:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e500:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e504:	b	1e9f0 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e508:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e50c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e510:	b	1e9f0 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e514:	b	1e9f0 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e518:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e51c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e520:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e524:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e528:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e52c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e530:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e534:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e538:	b	1e9dc <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e53c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e540:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e544:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e548:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e54c:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e550:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e554:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e558:	b	1ed14 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e55c:	b	1e9f0 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e560:	b	1e9f0 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e564:	b	1ec38 <myhtml_insertion_mode_in_body@@Base+0x920>
   1e568:	ldr	r3, [r1]
   1e56c:	sub	r3, r3, #1
   1e570:	cmp	r3, #250	; 0xfa
   1e574:	addls	pc, pc, r3, lsl #2
   1e578:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e57c:	b	1f6c0 <myhtml_insertion_mode_in_body@@Base+0x13a8>
   1e580:	b	1f39c <myhtml_insertion_mode_in_body@@Base+0x1084>
   1e584:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e588:	b	1ee48 <myhtml_insertion_mode_in_body@@Base+0xb30>
   1e58c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e590:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e594:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e598:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e59c:	b	1f324 <myhtml_insertion_mode_in_body@@Base+0x100c>
   1e5a0:	b	1f308 <myhtml_insertion_mode_in_body@@Base+0xff0>
   1e5a4:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e5a8:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e5ac:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e5b0:	b	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e5b4:	b	1e9dc <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e5b8:	b	1e9dc <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e5bc:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e5c0:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e5c4:	b	1e9dc <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e5c8:	b	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e5cc:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e5d0:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e5d4:	b	1ef8c <myhtml_insertion_mode_in_body@@Base+0xc74>
   1e5d8:	b	1f308 <myhtml_insertion_mode_in_body@@Base+0xff0>
   1e5dc:	b	1e968 <myhtml_insertion_mode_in_body@@Base+0x650>
   1e5e0:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e5e4:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e5e8:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e5ec:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e5f0:	b	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e5f4:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e5f8:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e5fc:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e600:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e604:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e608:	b	1f1b8 <myhtml_insertion_mode_in_body@@Base+0xea0>
   1e60c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e610:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e614:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e618:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e61c:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e620:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e624:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e628:	b	1f1b8 <myhtml_insertion_mode_in_body@@Base+0xea0>
   1e62c:	b	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e630:	b	1f308 <myhtml_insertion_mode_in_body@@Base+0xff0>
   1e634:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e638:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e63c:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e640:	b	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e644:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e648:	b	1f144 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   1e64c:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e650:	b	1f0d4 <myhtml_insertion_mode_in_body@@Base+0xdbc>
   1e654:	b	1f080 <myhtml_insertion_mode_in_body@@Base+0xd68>
   1e658:	b	1f080 <myhtml_insertion_mode_in_body@@Base+0xd68>
   1e65c:	b	1f080 <myhtml_insertion_mode_in_body@@Base+0xd68>
   1e660:	b	1f080 <myhtml_insertion_mode_in_body@@Base+0xd68>
   1e664:	b	1f080 <myhtml_insertion_mode_in_body@@Base+0xd68>
   1e668:	b	1f080 <myhtml_insertion_mode_in_body@@Base+0xd68>
   1e66c:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e670:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e674:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e678:	b	1f678 <myhtml_insertion_mode_in_body@@Base+0x1360>
   1e67c:	b	1f60c <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1e680:	b	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e684:	b	1eef0 <myhtml_insertion_mode_in_body@@Base+0xbd8>
   1e688:	b	1f438 <myhtml_insertion_mode_in_body@@Base+0x1120>
   1e68c:	b	1f308 <myhtml_insertion_mode_in_body@@Base+0xff0>
   1e690:	b	1f718 <myhtml_insertion_mode_in_body@@Base+0x1400>
   1e694:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e698:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e69c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6a0:	b	1f308 <myhtml_insertion_mode_in_body@@Base+0xff0>
   1e6a4:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6a8:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6ac:	b	1ed24 <myhtml_insertion_mode_in_body@@Base+0xa0c>
   1e6b0:	b	1e9dc <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e6b4:	b	1f548 <myhtml_insertion_mode_in_body@@Base+0x1230>
   1e6b8:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e6bc:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6c0:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6c4:	b	1f324 <myhtml_insertion_mode_in_body@@Base+0x100c>
   1e6c8:	b	1f508 <myhtml_insertion_mode_in_body@@Base+0x11f0>
   1e6cc:	b	1f47c <myhtml_insertion_mode_in_body@@Base+0x1164>
   1e6d0:	b	1e9dc <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e6d4:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6d8:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6dc:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e6e0:	b	1f448 <myhtml_insertion_mode_in_body@@Base+0x1130>
   1e6e4:	b	1ef2c <myhtml_insertion_mode_in_body@@Base+0xc14>
   1e6e8:	b	1e9dc <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e6ec:	b	1ef20 <myhtml_insertion_mode_in_body@@Base+0xc08>
   1e6f0:	b	1f324 <myhtml_insertion_mode_in_body@@Base+0x100c>
   1e6f4:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e6f8:	b	1ef5c <myhtml_insertion_mode_in_body@@Base+0xc44>
   1e6fc:	b	1ef5c <myhtml_insertion_mode_in_body@@Base+0xc44>
   1e700:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e704:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e708:	b	1ef48 <myhtml_insertion_mode_in_body@@Base+0xc30>
   1e70c:	b	1f4c8 <myhtml_insertion_mode_in_body@@Base+0x11b0>
   1e710:	b	1f548 <myhtml_insertion_mode_in_body@@Base+0x1230>
   1e714:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e718:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e71c:	b	1f49c <myhtml_insertion_mode_in_body@@Base+0x1184>
   1e720:	b	1f404 <myhtml_insertion_mode_in_body@@Base+0x10ec>
   1e724:	b	1f404 <myhtml_insertion_mode_in_body@@Base+0x10ec>
   1e728:	b	1f49c <myhtml_insertion_mode_in_body@@Base+0x1184>
   1e72c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e730:	b	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e734:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e738:	b	1e9dc <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e73c:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e740:	b	1f3ac <myhtml_insertion_mode_in_body@@Base+0x1094>
   1e744:	b	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e748:	b	1ef48 <myhtml_insertion_mode_in_body@@Base+0xc30>
   1e74c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e750:	b	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e754:	b	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e758:	b	1e9dc <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e75c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e760:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e764:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e768:	b	1f5c8 <myhtml_insertion_mode_in_body@@Base+0x12b0>
   1e76c:	b	1f58c <myhtml_insertion_mode_in_body@@Base+0x1274>
   1e770:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e774:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e778:	b	1e9dc <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e77c:	b	1f2c4 <myhtml_insertion_mode_in_body@@Base+0xfac>
   1e780:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e784:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e788:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e78c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e790:	b	1e9dc <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e794:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e798:	b	1ef48 <myhtml_insertion_mode_in_body@@Base+0xc30>
   1e79c:	b	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e7a0:	b	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e7a4:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e7a8:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7ac:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7b0:	b	1f308 <myhtml_insertion_mode_in_body@@Base+0xff0>
   1e7b4:	b	1eec4 <myhtml_insertion_mode_in_body@@Base+0xbac>
   1e7b8:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7bc:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7c0:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7c4:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7c8:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7cc:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7d0:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7d4:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7d8:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7dc:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7e0:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7e4:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7e8:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7ec:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7f0:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7f4:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7f8:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7fc:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e800:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e804:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e808:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e80c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e810:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e814:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e818:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e81c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e820:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e824:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e828:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e82c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e830:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e834:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e838:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e83c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e840:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e844:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e848:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e84c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e850:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e854:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e858:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e85c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e860:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e864:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e868:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e86c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e870:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e874:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e878:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e87c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e880:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e884:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e888:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e88c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e890:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e894:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e898:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e89c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8a0:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8a4:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8a8:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8ac:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8b0:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8b4:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8b8:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8bc:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8c0:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8c4:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8c8:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8cc:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8d0:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8d4:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8d8:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8dc:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8e0:	b	1f34c <myhtml_insertion_mode_in_body@@Base+0x1034>
   1e8e4:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8e8:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8ec:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8f0:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8f4:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8f8:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8fc:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e900:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e904:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e908:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e90c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e910:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e914:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e918:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e91c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e920:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e924:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e928:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e92c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e930:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e934:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e938:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e93c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e940:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e944:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e948:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e94c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e950:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e954:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e958:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e95c:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e960:	b	1f78c <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e964:	b	1f040 <myhtml_insertion_mode_in_body@@Base+0xd28>
   1e968:	mov	r3, #8
   1e96c:	mov	r2, #1
   1e970:	mov	r1, #25
   1e974:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1e978:	cmp	r0, #0
   1e97c:	beq	1e9a4 <myhtml_insertion_mode_in_body@@Base+0x68c>
   1e980:	mov	r2, #0
   1e984:	mov	r1, r2
   1e988:	mov	r0, r4
   1e98c:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1e990:	mov	r3, #0
   1e994:	mov	r2, #1
   1e998:	mov	r1, #25
   1e99c:	mov	r0, r4
   1e9a0:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1e9a4:	mov	r0, r4
   1e9a8:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1e9ac:	mov	r1, r5
   1e9b0:	mov	r0, r4
   1e9b4:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1e9b8:	ldr	r3, [r4, #180]	; 0xb4
   1e9bc:	ldr	r2, [r4, #180]	; 0xb4
   1e9c0:	and	r3, r3, #2
   1e9c4:	eor	r3, r3, r2
   1e9c8:	str	r3, [r4, #180]	; 0xb4
   1e9cc:	mov	r6, #0
   1e9d0:	mov	r0, r6
   1e9d4:	add	sp, sp, #20
   1e9d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e9dc:	mov	r1, r5
   1e9e0:	mov	r0, r4
   1e9e4:	add	sp, sp, #20
   1e9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e9ec:	b	10058 <myhtml_insertion_mode_in_head@plt>
   1e9f0:	mov	r2, r1
   1e9f4:	mov	r1, r5
   1e9f8:	bl	10898 <myhtml_tree_adoption_agency_algorithm@plt>
   1e9fc:	mov	r6, #0
   1ea00:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ea04:	mov	r3, #32
   1ea08:	mov	r2, #1
   1ea0c:	mov	r1, #99	; 0x63
   1ea10:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ea14:	cmp	r0, #0
   1ea18:	beq	1f900 <myhtml_insertion_mode_in_body@@Base+0x15e8>
   1ea1c:	mov	r1, r5
   1ea20:	mov	r0, r4
   1ea24:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1ea28:	mov	r6, #0
   1ea2c:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ea30:	mov	r3, #16
   1ea34:	mov	r2, #1
   1ea38:	mov	r1, #77	; 0x4d
   1ea3c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ea40:	cmp	r0, #0
   1ea44:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ea48:	mov	r2, #1
   1ea4c:	mov	r1, #77	; 0x4d
   1ea50:	mov	r0, r4
   1ea54:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1ea58:	mov	r0, r4
   1ea5c:	bl	10628 <myhtml_tree_current_node@plt>
   1ea60:	mov	r1, #77	; 0x4d
   1ea64:	bl	10aa8 <myhtml_is_html_node@plt>
   1ea68:	mov	r0, r4
   1ea6c:	mov	r3, #0
   1ea70:	mov	r2, #1
   1ea74:	mov	r1, #77	; 0x4d
   1ea78:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1ea7c:	mov	r6, #0
   1ea80:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ea84:	mov	r3, #8
   1ea88:	mov	r2, #1
   1ea8c:	mov	r1, #23
   1ea90:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ea94:	cmp	r0, #0
   1ea98:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ea9c:	ldr	r1, [r4, #128]	; 0x80
   1eaa0:	ldr	r3, [r1, #4]
   1eaa4:	cmp	r3, #0
   1eaa8:	beq	1eac0 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1eaac:	mov	r3, #0
   1eab0:	ldr	r2, [r1, #4]
   1eab4:	add	r3, r3, #1
   1eab8:	cmp	r2, r3
   1eabc:	bhi	1eab0 <myhtml_insertion_mode_in_body@@Base+0x798>
   1eac0:	mov	r3, #18
   1eac4:	str	r3, [r4, #168]	; 0xa8
   1eac8:	mov	r6, #1
   1eacc:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ead0:	ldr	r3, [r0, #128]	; 0x80
   1ead4:	ldr	r6, [r3, #4]
   1ead8:	ldr	r7, [r3]
   1eadc:	cmp	r6, #0
   1eae0:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1eae4:	add	r8, r7, r6, lsl #2
   1eae8:	b	1eaf4 <myhtml_insertion_mode_in_body@@Base+0x7dc>
   1eaec:	cmp	r6, #0
   1eaf0:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1eaf4:	ldr	r3, [r8, #-4]
   1eaf8:	ldr	r0, [r4, #28]
   1eafc:	sub	r6, r6, #1
   1eb00:	ldr	r1, [r3, #4]
   1eb04:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1eb08:	ldr	r2, [r8, #-4]!
   1eb0c:	ldr	r3, [r2, #4]
   1eb10:	sub	r3, r3, #55	; 0x37
   1eb14:	cmp	r3, #5
   1eb18:	ldr	r3, [r2, #8]
   1eb1c:	bhi	1eb28 <myhtml_insertion_mode_in_body@@Base+0x810>
   1eb20:	cmp	r3, #1
   1eb24:	beq	1f7a0 <myhtml_insertion_mode_in_body@@Base+0x1488>
   1eb28:	add	r3, r3, #4
   1eb2c:	ldr	r3, [r0, r3, lsl #2]
   1eb30:	tst	r3, #8
   1eb34:	beq	1eaec <myhtml_insertion_mode_in_body@@Base+0x7d4>
   1eb38:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1eb3c:	ldr	r3, [r5, #40]	; 0x28
   1eb40:	mov	r6, #0
   1eb44:	cmp	r3, #0
   1eb48:	movne	r3, #0
   1eb4c:	strne	r3, [r5, #40]	; 0x28
   1eb50:	ldr	r3, [r5, #44]	; 0x2c
   1eb54:	cmp	r3, #0
   1eb58:	movne	r3, #0
   1eb5c:	strne	r3, [r5, #44]	; 0x2c
   1eb60:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1eb64:	str	r6, [r5, #48]	; 0x30
   1eb68:	mov	r1, r5
   1eb6c:	mov	r0, r4
   1eb70:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1eb74:	mov	r0, r4
   1eb78:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1eb7c:	ldr	r3, [r4, #180]	; 0xb4
   1eb80:	ldr	r2, [r4, #180]	; 0xb4
   1eb84:	and	r3, r3, #2
   1eb88:	eor	r3, r3, r2
   1eb8c:	str	r3, [r4, #180]	; 0xb4
   1eb90:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1eb94:	mov	r3, #8
   1eb98:	mov	r2, #1
   1eb9c:	mov	r1, #23
   1eba0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1eba4:	cmp	r0, #0
   1eba8:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ebac:	ldr	r1, [r4, #128]	; 0x80
   1ebb0:	ldr	r3, [r1, #4]
   1ebb4:	cmp	r3, #0
   1ebb8:	beq	1ebd0 <myhtml_insertion_mode_in_body@@Base+0x8b8>
   1ebbc:	mov	r3, #0
   1ebc0:	ldr	r2, [r1, #4]
   1ebc4:	add	r3, r3, #1
   1ebc8:	cmp	r2, r3
   1ebcc:	bhi	1ebc0 <myhtml_insertion_mode_in_body@@Base+0x8a8>
   1ebd0:	mov	r3, #18
   1ebd4:	str	r3, [r4, #168]	; 0xa8
   1ebd8:	mov	r6, #0
   1ebdc:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ebe0:	mov	r3, #8
   1ebe4:	mov	r2, #1
   1ebe8:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ebec:	cmp	r0, #0
   1ebf0:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ebf4:	mov	r2, #0
   1ebf8:	mov	r1, r2
   1ebfc:	mov	r0, r4
   1ec00:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1ec04:	mov	r0, r4
   1ec08:	bl	10628 <myhtml_tree_current_node@plt>
   1ec0c:	ldr	r1, [r5]
   1ec10:	bl	10aa8 <myhtml_is_html_node@plt>
   1ec14:	ldr	r1, [r5]
   1ec18:	mov	r3, #0
   1ec1c:	mov	r2, #1
   1ec20:	mov	r0, r4
   1ec24:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1ec28:	mov	r0, r4
   1ec2c:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1ec30:	mov	r6, #0
   1ec34:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ec38:	mov	r3, #8
   1ec3c:	mov	r2, #1
   1ec40:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ec44:	cmp	r0, #0
   1ec48:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ec4c:	mov	r2, #0
   1ec50:	mov	r1, r2
   1ec54:	mov	r0, r4
   1ec58:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1ec5c:	mov	r0, r4
   1ec60:	bl	10628 <myhtml_tree_current_node@plt>
   1ec64:	ldr	r1, [r5]
   1ec68:	bl	10aa8 <myhtml_is_html_node@plt>
   1ec6c:	ldr	r1, [r5]
   1ec70:	mov	r0, r4
   1ec74:	mov	r3, #0
   1ec78:	mov	r2, #1
   1ec7c:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1ec80:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ec84:	mov	r3, #0
   1ec88:	mov	r2, #1
   1ec8c:	mov	r1, #128	; 0x80
   1ec90:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1ec94:	subs	r6, r0, #0
   1ec98:	beq	1f86c <myhtml_insertion_mode_in_body@@Base+0x1554>
   1ec9c:	mov	r3, #8
   1eca0:	mov	r2, #1
   1eca4:	mov	r1, #52	; 0x34
   1eca8:	mov	r0, r4
   1ecac:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ecb0:	cmp	r0, #0
   1ecb4:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ecb8:	mov	r2, #0
   1ecbc:	mov	r1, r2
   1ecc0:	mov	r0, r4
   1ecc4:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1ecc8:	mov	r0, r4
   1eccc:	bl	10628 <myhtml_tree_current_node@plt>
   1ecd0:	mov	r1, #52	; 0x34
   1ecd4:	bl	10aa8 <myhtml_is_html_node@plt>
   1ecd8:	mov	r0, r4
   1ecdc:	mov	r3, #0
   1ece0:	mov	r2, #1
   1ece4:	mov	r1, #52	; 0x34
   1ece8:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1ecec:	mov	r6, #0
   1ecf0:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ecf4:	mov	r3, #8
   1ecf8:	mov	r2, #1
   1ecfc:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ed00:	cmp	r0, #0
   1ed04:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ed08:	mov	r2, #1
   1ed0c:	ldr	r1, [r5]
   1ed10:	b	1ec54 <myhtml_insertion_mode_in_body@@Base+0x93c>
   1ed14:	mov	r1, r5
   1ed18:	add	sp, sp, #20
   1ed1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed20:	b	fd1c <myhtml_insertion_mode_in_body_other_end_tag@plt>
   1ed24:	ldr	r2, [r0, #180]	; 0xb4
   1ed28:	ldr	r3, [r0, #128]	; 0x80
   1ed2c:	ldr	r1, [r0, #180]	; 0xb4
   1ed30:	and	r2, r2, #2
   1ed34:	eor	r2, r2, r1
   1ed38:	str	r2, [r0, #180]	; 0xb4
   1ed3c:	ldr	r8, [r3, #4]
   1ed40:	cmp	r8, #0
   1ed44:	beq	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1ed48:	sub	r7, r8, #-1073741823	; 0xc0000001
   1ed4c:	mov	r9, #77	; 0x4d
   1ed50:	lsl	r7, r7, #2
   1ed54:	b	1eda8 <myhtml_insertion_mode_in_body@@Base+0xa90>
   1ed58:	ldr	r3, [r6, #8]
   1ed5c:	add	r2, r3, #4
   1ed60:	ldr	r2, [sl, r2, lsl #2]
   1ed64:	tst	r2, #2
   1ed68:	beq	1ed9c <myhtml_insertion_mode_in_body@@Base+0xa84>
   1ed6c:	ldr	r1, [r6, #4]
   1ed70:	cmp	r1, #7
   1ed74:	cmpne	r1, #42	; 0x2a
   1ed78:	movne	r2, #1
   1ed7c:	moveq	r2, #0
   1ed80:	cmp	r1, #99	; 0x63
   1ed84:	moveq	r2, #0
   1ed88:	andne	r2, r2, #1
   1ed8c:	cmp	r2, #0
   1ed90:	bne	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1ed94:	cmp	r3, #1
   1ed98:	bne	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1ed9c:	cmp	r8, #0
   1eda0:	beq	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1eda4:	ldr	r3, [r4, #128]	; 0x80
   1eda8:	ldr	r3, [r3]
   1edac:	ldr	r0, [r4, #28]
   1edb0:	sub	r8, r8, #1
   1edb4:	ldr	r6, [r3, r7]
   1edb8:	sub	r7, r7, #4
   1edbc:	ldr	r1, [r6, #4]
   1edc0:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1edc4:	mov	r1, r9
   1edc8:	mov	sl, r0
   1edcc:	mov	r0, r6
   1edd0:	bl	10aa8 <myhtml_is_html_node@plt>
   1edd4:	cmp	r0, #0
   1edd8:	beq	1ed58 <myhtml_insertion_mode_in_body@@Base+0xa40>
   1eddc:	mov	r2, #1
   1ede0:	mov	r1, #77	; 0x4d
   1ede4:	mov	r0, r4
   1ede8:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1edec:	mov	r0, r4
   1edf0:	bl	10628 <myhtml_tree_current_node@plt>
   1edf4:	mov	r1, #77	; 0x4d
   1edf8:	bl	10aa8 <myhtml_is_html_node@plt>
   1edfc:	mov	r3, #0
   1ee00:	mov	r2, #1
   1ee04:	mov	r1, #77	; 0x4d
   1ee08:	mov	r0, r4
   1ee0c:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1ee10:	mov	r3, #32
   1ee14:	mov	r2, #1
   1ee18:	mov	r1, #99	; 0x63
   1ee1c:	mov	r0, r4
   1ee20:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ee24:	cmp	r0, #0
   1ee28:	beq	1ee38 <myhtml_insertion_mode_in_body@@Base+0xb20>
   1ee2c:	mov	r1, r5
   1ee30:	mov	r0, r4
   1ee34:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1ee38:	mov	r1, r5
   1ee3c:	mov	r0, r4
   1ee40:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1ee44:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ee48:	mov	r2, #0
   1ee4c:	mov	r1, #4
   1ee50:	bl	1064c <myhtml_tree_active_formatting_between_last_marker@plt>
   1ee54:	cmp	r0, #0
   1ee58:	beq	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1ee5c:	mov	r2, #4
   1ee60:	mov	r1, r5
   1ee64:	mov	r0, r4
   1ee68:	bl	10898 <myhtml_tree_adoption_agency_algorithm@plt>
   1ee6c:	mov	r2, #0
   1ee70:	mov	r1, #4
   1ee74:	mov	r0, r4
   1ee78:	bl	1064c <myhtml_tree_active_formatting_between_last_marker@plt>
   1ee7c:	subs	r6, r0, #0
   1ee80:	beq	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1ee84:	mov	r1, r6
   1ee88:	mov	r0, r4
   1ee8c:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   1ee90:	mov	r1, r6
   1ee94:	mov	r0, r4
   1ee98:	bl	108a4 <myhtml_tree_active_formatting_remove@plt>
   1ee9c:	mov	r0, r4
   1eea0:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1eea4:	mov	r1, r5
   1eea8:	mov	r0, r4
   1eeac:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1eeb0:	mov	r6, #0
   1eeb4:	mov	r1, r0
   1eeb8:	mov	r0, r4
   1eebc:	bl	10814 <myhtml_tree_active_formatting_append_with_check@plt>
   1eec0:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1eec4:	mov	r3, #32
   1eec8:	mov	r2, #1
   1eecc:	mov	r1, #99	; 0x63
   1eed0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1eed4:	cmp	r0, #0
   1eed8:	beq	1eee8 <myhtml_insertion_mode_in_body@@Base+0xbd0>
   1eedc:	mov	r1, r5
   1eee0:	mov	r0, r4
   1eee4:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1eee8:	mov	r0, r4
   1eeec:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1eef0:	ldr	r3, [r4, #180]	; 0xb4
   1eef4:	ldr	r2, [r4, #180]	; 0xb4
   1eef8:	and	r3, r3, #2
   1eefc:	eor	r3, r3, r2
   1ef00:	mov	r2, #4
   1ef04:	mov	r1, r5
   1ef08:	str	r3, [r4, #180]	; 0xb4
   1ef0c:	str	r2, [r4, #164]	; 0xa4
   1ef10:	mov	r0, r4
   1ef14:	bl	10f40 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   1ef18:	mov	r6, #0
   1ef1c:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ef20:	ldr	r3, [r0, #180]	; 0xb4
   1ef24:	tst	r3, #1
   1ef28:	beq	1ef70 <myhtml_insertion_mode_in_body@@Base+0xc58>
   1ef2c:	mov	r3, #4
   1ef30:	mov	r1, r5
   1ef34:	str	r3, [r4, #164]	; 0xa4
   1ef38:	mov	r0, r4
   1ef3c:	bl	10f40 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   1ef40:	mov	r6, #0
   1ef44:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ef48:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1ef4c:	mov	r0, r4
   1ef50:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1ef54:	mov	r6, #0
   1ef58:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ef5c:	bl	10628 <myhtml_tree_current_node@plt>
   1ef60:	mov	r1, #97	; 0x61
   1ef64:	bl	10aa8 <myhtml_is_html_node@plt>
   1ef68:	cmp	r0, #0
   1ef6c:	bne	1f490 <myhtml_insertion_mode_in_body@@Base+0x1178>
   1ef70:	mov	r0, r4
   1ef74:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1ef78:	mov	r1, r5
   1ef7c:	mov	r0, r4
   1ef80:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1ef84:	mov	r6, #0
   1ef88:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ef8c:	ldr	r3, [r0, #128]	; 0x80
   1ef90:	ldr	r2, [r3, #4]
   1ef94:	cmp	r2, #1
   1ef98:	bls	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ef9c:	ldr	r3, [r3]
   1efa0:	ldr	r3, [r3, #4]
   1efa4:	ldr	r2, [r3, #4]
   1efa8:	cmp	r2, #23
   1efac:	bne	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1efb0:	ldr	r2, [r3, #8]
   1efb4:	cmp	r2, #1
   1efb8:	bne	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1efbc:	mov	r3, #0
   1efc0:	mov	r1, #128	; 0x80
   1efc4:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1efc8:	subs	r8, r0, #0
   1efcc:	bne	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1efd0:	ldr	r3, [r4, #180]	; 0xb4
   1efd4:	ldr	r2, [r4, #128]	; 0x80
   1efd8:	ldr	r1, [r4, #180]	; 0xb4
   1efdc:	and	r3, r3, #2
   1efe0:	eor	r3, r3, r1
   1efe4:	str	r3, [r4, #180]	; 0xb4
   1efe8:	ldr	r3, [r2, #4]
   1efec:	cmp	r3, #1
   1eff0:	bls	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1eff4:	ldr	r3, [r2]
   1eff8:	ldr	r7, [r3, #4]
   1effc:	ldr	r6, [r7, #32]
   1f000:	cmp	r6, #0
   1f004:	streq	r5, [r7, #32]
   1f008:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f00c:	mov	r1, r5
   1f010:	ldr	r0, [r4, #8]
   1f014:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f018:	ldr	r1, [r7, #32]
   1f01c:	ldr	r0, [r4, #8]
   1f020:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f024:	ldr	r2, [r7, #32]
   1f028:	mov	r1, r5
   1f02c:	ldr	r3, [r4, #44]	; 0x2c
   1f030:	ldr	r0, [r4, #8]
   1f034:	mov	r6, r8
   1f038:	bl	10694 <myhtml_token_node_attr_copy_with_check@plt>
   1f03c:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f040:	ldr	r3, [r0, #140]	; 0x8c
   1f044:	ldr	r3, [r3, #4]
   1f048:	cmp	r3, #0
   1f04c:	bne	1f94c <myhtml_insertion_mode_in_body@@Base+0x1634>
   1f050:	ldr	r1, [r0, #128]	; 0x80
   1f054:	ldr	r2, [r1, #4]
   1f058:	cmp	r2, #0
   1f05c:	beq	1f070 <myhtml_insertion_mode_in_body@@Base+0xd58>
   1f060:	ldr	r2, [r1, #4]
   1f064:	add	r3, r3, #1
   1f068:	cmp	r2, r3
   1f06c:	bhi	1f060 <myhtml_insertion_mode_in_body@@Base+0xd48>
   1f070:	mov	r0, r4
   1f074:	bl	10310 <myhtml_rules_stop_parsing@plt>
   1f078:	mov	r6, #0
   1f07c:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f080:	mov	r3, #32
   1f084:	mov	r2, #1
   1f088:	mov	r1, #99	; 0x63
   1f08c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f090:	cmp	r0, #0
   1f094:	beq	1f0a4 <myhtml_insertion_mode_in_body@@Base+0xd8c>
   1f098:	mov	r1, r5
   1f09c:	mov	r0, r4
   1f0a0:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f0a4:	mov	r0, r4
   1f0a8:	bl	10628 <myhtml_tree_current_node@plt>
   1f0ac:	ldr	r3, [r0, #4]
   1f0b0:	sub	r3, r3, #55	; 0x37
   1f0b4:	cmp	r3, #5
   1f0b8:	bhi	1ee38 <myhtml_insertion_mode_in_body@@Base+0xb20>
   1f0bc:	ldr	r3, [r0, #8]
   1f0c0:	cmp	r3, #1
   1f0c4:	bne	1ee38 <myhtml_insertion_mode_in_body@@Base+0xb20>
   1f0c8:	mov	r0, r4
   1f0cc:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f0d0:	b	1ee38 <myhtml_insertion_mode_in_body@@Base+0xb20>
   1f0d4:	ldr	r3, [r0, #128]	; 0x80
   1f0d8:	ldr	r2, [r3, #4]
   1f0dc:	cmp	r2, #1
   1f0e0:	bls	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f0e4:	ldr	r3, [r3]
   1f0e8:	ldr	r0, [r3, #4]
   1f0ec:	ldr	r3, [r0, #4]
   1f0f0:	cmp	r3, #23
   1f0f4:	bne	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f0f8:	ldr	r6, [r0, #8]
   1f0fc:	cmp	r6, #1
   1f100:	bne	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f104:	ldr	r3, [r4, #180]	; 0xb4
   1f108:	tst	r3, #2
   1f10c:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f110:	bl	10df0 <myhtml_tree_node_remove@plt>
   1f114:	mov	r3, r6
   1f118:	mov	r2, r6
   1f11c:	mov	r1, #65	; 0x41
   1f120:	mov	r0, r4
   1f124:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f128:	mov	r1, r5
   1f12c:	mov	r0, r4
   1f130:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f134:	mov	r3, #19
   1f138:	str	r3, [r4, #168]	; 0xa8
   1f13c:	mov	r6, #0
   1f140:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f144:	mov	r3, #0
   1f148:	mov	r2, #1
   1f14c:	mov	r1, #128	; 0x80
   1f150:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1f154:	ldr	r6, [r4, #104]	; 0x68
   1f158:	adds	r6, r6, #0
   1f15c:	movne	r6, #1
   1f160:	cmp	r0, #0
   1f164:	movne	r6, #0
   1f168:	cmp	r6, #0
   1f16c:	mov	r7, r0
   1f170:	bne	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f174:	mov	r3, #32
   1f178:	mov	r2, #1
   1f17c:	mov	r1, #99	; 0x63
   1f180:	mov	r0, r4
   1f184:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f188:	cmp	r0, #0
   1f18c:	beq	1f19c <myhtml_insertion_mode_in_body@@Base+0xe84>
   1f190:	mov	r1, r5
   1f194:	mov	r0, r4
   1f198:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f19c:	mov	r1, r5
   1f1a0:	mov	r0, r4
   1f1a4:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f1a8:	cmp	r7, #0
   1f1ac:	streq	r0, [r4, #104]	; 0x68
   1f1b0:	bne	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f1b4:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f1b8:	ldr	r2, [r0, #180]	; 0xb4
   1f1bc:	ldr	r3, [r0, #128]	; 0x80
   1f1c0:	ldr	r1, [r0, #180]	; 0xb4
   1f1c4:	and	r2, r2, #2
   1f1c8:	eor	r2, r2, r1
   1f1cc:	str	r2, [r0, #180]	; 0xb4
   1f1d0:	ldr	r8, [r3, #4]
   1f1d4:	cmp	r8, #0
   1f1d8:	beq	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1f1dc:	sub	r7, r8, #-1073741823	; 0xc0000001
   1f1e0:	mov	fp, #36	; 0x24
   1f1e4:	lsl	r7, r7, #2
   1f1e8:	mov	sl, #44	; 0x2c
   1f1ec:	b	1f24c <myhtml_insertion_mode_in_body@@Base+0xf34>
   1f1f0:	bl	10aa8 <myhtml_is_html_node@plt>
   1f1f4:	cmp	r0, #0
   1f1f8:	bne	1f914 <myhtml_insertion_mode_in_body@@Base+0x15fc>
   1f1fc:	ldr	r3, [r6, #8]
   1f200:	add	r2, r3, #4
   1f204:	ldr	r2, [r9, r2, lsl #2]
   1f208:	tst	r2, #2
   1f20c:	beq	1f240 <myhtml_insertion_mode_in_body@@Base+0xf28>
   1f210:	ldr	r1, [r6, #4]
   1f214:	cmp	r1, #7
   1f218:	cmpne	r1, #42	; 0x2a
   1f21c:	movne	r2, #1
   1f220:	moveq	r2, #0
   1f224:	cmp	r1, #99	; 0x63
   1f228:	moveq	r2, #0
   1f22c:	andne	r2, r2, #1
   1f230:	cmp	r2, #0
   1f234:	bne	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1f238:	cmp	r3, #1
   1f23c:	bne	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1f240:	cmp	r8, #0
   1f244:	beq	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1f248:	ldr	r3, [r4, #128]	; 0x80
   1f24c:	ldr	r3, [r3]
   1f250:	ldr	r0, [r4, #28]
   1f254:	sub	r8, r8, #1
   1f258:	ldr	r6, [r3, r7]
   1f25c:	sub	r7, r7, #4
   1f260:	ldr	r1, [r6, #4]
   1f264:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1f268:	mov	r1, fp
   1f26c:	mov	r9, r0
   1f270:	mov	r0, r6
   1f274:	bl	10aa8 <myhtml_is_html_node@plt>
   1f278:	mov	r1, sl
   1f27c:	subs	r3, r0, #0
   1f280:	str	r3, [sp, #12]
   1f284:	mov	r0, r6
   1f288:	beq	1f1f0 <myhtml_insertion_mode_in_body@@Base+0xed8>
   1f28c:	mov	r2, #1
   1f290:	mov	r1, #36	; 0x24
   1f294:	mov	r0, r4
   1f298:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f29c:	mov	r0, r4
   1f2a0:	bl	10628 <myhtml_tree_current_node@plt>
   1f2a4:	mov	r1, #36	; 0x24
   1f2a8:	bl	10aa8 <myhtml_is_html_node@plt>
   1f2ac:	mov	r3, #0
   1f2b0:	mov	r2, #1
   1f2b4:	mov	r1, #36	; 0x24
   1f2b8:	mov	r0, r4
   1f2bc:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f2c0:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1f2c4:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f2c8:	ldr	r3, [r4, #180]	; 0xb4
   1f2cc:	ldr	r0, [r4, #168]	; 0xa8
   1f2d0:	orr	r3, r3, #192	; 0xc0
   1f2d4:	str	r3, [r4, #180]	; 0xb4
   1f2d8:	ldr	r3, [r4, #180]	; 0xb4
   1f2dc:	ldr	r2, [r4, #180]	; 0xb4
   1f2e0:	and	r3, r3, #2
   1f2e4:	eor	r3, r3, r2
   1f2e8:	mov	r1, #7
   1f2ec:	mov	r2, #2
   1f2f0:	str	r3, [r4, #180]	; 0xb4
   1f2f4:	str	r0, [r4, #172]	; 0xac
   1f2f8:	str	r1, [r4, #168]	; 0xa8
   1f2fc:	str	r2, [r4, #164]	; 0xa4
   1f300:	mov	r6, #0
   1f304:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f308:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f30c:	mov	r1, r5
   1f310:	mov	r0, r4
   1f314:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f318:	mov	r0, r4
   1f31c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f320:	b	1e9b8 <myhtml_insertion_mode_in_body@@Base+0x6a0>
   1f324:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f328:	mov	r1, r5
   1f32c:	mov	r0, r4
   1f330:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f334:	ldr	r3, [r4]
   1f338:	mov	r0, r4
   1f33c:	mov	r6, #0
   1f340:	ldr	r1, [r3, #36]	; 0x24
   1f344:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   1f348:	b	1eb7c <myhtml_insertion_mode_in_body@@Base+0x864>
   1f34c:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f350:	mov	r1, r5
   1f354:	ldr	r0, [r4, #8]
   1f358:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f35c:	mov	r0, r5
   1f360:	bl	ff74 <myhtml_token_adjust_mathml_attributes@plt>
   1f364:	mov	r0, r5
   1f368:	bl	10be0 <myhtml_token_adjust_foreign_attributes@plt>
   1f36c:	mov	r1, r5
   1f370:	mov	r0, r4
   1f374:	bl	10d84 <myhtml_tree_node_insert_foreign_element@plt>
   1f378:	ldr	r2, [r5, #48]	; 0x30
   1f37c:	mov	r3, #2
   1f380:	tst	r2, #2
   1f384:	str	r3, [r0, #8]
   1f388:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f38c:	mov	r0, r4
   1f390:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f394:	mov	r6, #0
   1f398:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f39c:	mov	r2, #0
   1f3a0:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1f3a4:	mov	r6, #0
   1f3a8:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f3ac:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f3b0:	mov	r1, r5
   1f3b4:	mov	r0, r4
   1f3b8:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f3bc:	ldr	r2, [r4, #168]	; 0xa8
   1f3c0:	ldr	r3, [r4, #180]	; 0xb4
   1f3c4:	ldr	r1, [r4, #180]	; 0xb4
   1f3c8:	bic	r6, r2, #2
   1f3cc:	and	r3, r3, #2
   1f3d0:	sub	r2, r2, #12
   1f3d4:	cmp	r6, #8
   1f3d8:	cmpne	r2, #2
   1f3dc:	eor	r3, r3, r1
   1f3e0:	str	r3, [r4, #180]	; 0xb4
   1f3e4:	movls	r3, #16
   1f3e8:	movhi	r3, #15
   1f3ec:	movls	r6, #1
   1f3f0:	movhi	r6, #0
   1f3f4:	strls	r3, [r4, #168]	; 0xa8
   1f3f8:	movls	r6, #0
   1f3fc:	strhi	r3, [r4, #168]	; 0xa8
   1f400:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f404:	mov	r3, #8
   1f408:	mov	r2, #1
   1f40c:	mov	r1, #109	; 0x6d
   1f410:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f414:	cmp	r0, #0
   1f418:	beq	1f42c <myhtml_insertion_mode_in_body@@Base+0x1114>
   1f41c:	mov	r2, #1
   1f420:	mov	r1, #108	; 0x6c
   1f424:	mov	r0, r4
   1f428:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f42c:	mov	r0, r4
   1f430:	bl	10628 <myhtml_tree_current_node@plt>
   1f434:	b	1ee38 <myhtml_insertion_mode_in_body@@Base+0xb20>
   1f438:	mov	r3, #69	; 0x45
   1f43c:	str	r3, [r1]
   1f440:	mov	r6, #1
   1f444:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f448:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f44c:	mov	r3, #8
   1f450:	mov	r2, #1
   1f454:	mov	r1, #90	; 0x5a
   1f458:	mov	r0, r4
   1f45c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f460:	cmp	r0, #0
   1f464:	beq	1eea4 <myhtml_insertion_mode_in_body@@Base+0xb8c>
   1f468:	mov	r2, #90	; 0x5a
   1f46c:	mov	r1, r5
   1f470:	mov	r0, r4
   1f474:	bl	10898 <myhtml_tree_adoption_agency_algorithm@plt>
   1f478:	b	1ee9c <myhtml_insertion_mode_in_body@@Base+0xb84>
   1f47c:	bl	10628 <myhtml_tree_current_node@plt>
   1f480:	mov	r1, #85	; 0x55
   1f484:	bl	10aa8 <myhtml_is_html_node@plt>
   1f488:	cmp	r0, #0
   1f48c:	beq	1ef70 <myhtml_insertion_mode_in_body@@Base+0xc58>
   1f490:	mov	r0, r4
   1f494:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f498:	b	1ef70 <myhtml_insertion_mode_in_body@@Base+0xc58>
   1f49c:	mov	r3, #8
   1f4a0:	mov	r2, #1
   1f4a4:	mov	r1, #109	; 0x6d
   1f4a8:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f4ac:	cmp	r0, #0
   1f4b0:	beq	1f42c <myhtml_insertion_mode_in_body@@Base+0x1114>
   1f4b4:	mov	r2, #0
   1f4b8:	mov	r1, r2
   1f4bc:	mov	r0, r4
   1f4c0:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f4c4:	b	1f42c <myhtml_insertion_mode_in_body@@Base+0x1114>
   1f4c8:	mov	r3, #32
   1f4cc:	mov	r2, #1
   1f4d0:	mov	r1, #99	; 0x63
   1f4d4:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f4d8:	cmp	r0, #0
   1f4dc:	beq	1f4ec <myhtml_insertion_mode_in_body@@Base+0x11d4>
   1f4e0:	mov	r1, r5
   1f4e4:	mov	r0, r4
   1f4e8:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f4ec:	mov	r1, r5
   1f4f0:	mov	r0, r4
   1f4f4:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f4f8:	mov	r3, #6
   1f4fc:	str	r3, [r4, #164]	; 0xa4
   1f500:	mov	r6, #0
   1f504:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f508:	mov	r3, #32
   1f50c:	mov	r2, #1
   1f510:	mov	r1, #99	; 0x63
   1f514:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f518:	cmp	r0, #0
   1f51c:	beq	1f52c <myhtml_insertion_mode_in_body@@Base+0x1214>
   1f520:	mov	r1, r5
   1f524:	mov	r0, r4
   1f528:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f52c:	mov	r0, r4
   1f530:	bl	10628 <myhtml_tree_current_node@plt>
   1f534:	mov	r1, #85	; 0x55
   1f538:	bl	10aa8 <myhtml_is_html_node@plt>
   1f53c:	cmp	r0, #0
   1f540:	beq	1ee38 <myhtml_insertion_mode_in_body@@Base+0xb20>
   1f544:	b	1f0c8 <myhtml_insertion_mode_in_body@@Base+0xdb0>
   1f548:	mov	r3, #32
   1f54c:	mov	r2, #1
   1f550:	mov	r1, #99	; 0x63
   1f554:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f558:	cmp	r0, #0
   1f55c:	beq	1f56c <myhtml_insertion_mode_in_body@@Base+0x1254>
   1f560:	mov	r1, r5
   1f564:	mov	r0, r4
   1f568:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f56c:	mov	r1, r5
   1f570:	mov	r0, r4
   1f574:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f578:	ldr	r3, [r4, #180]	; 0xb4
   1f57c:	mov	r6, #0
   1f580:	orr	r3, r3, #192	; 0xc0
   1f584:	str	r3, [r4, #180]	; 0xb4
   1f588:	b	1eb7c <myhtml_insertion_mode_in_body@@Base+0x864>
   1f58c:	ldr	r3, [r0, #176]	; 0xb0
   1f590:	tst	r3, #1
   1f594:	beq	1f8d8 <myhtml_insertion_mode_in_body@@Base+0x15c0>
   1f598:	mov	r1, r5
   1f59c:	mov	r0, r4
   1f5a0:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f5a4:	ldr	r3, [r4, #180]	; 0xb4
   1f5a8:	ldr	r2, [r4, #180]	; 0xb4
   1f5ac:	and	r3, r3, #2
   1f5b0:	eor	r3, r3, r2
   1f5b4:	mov	r2, #8
   1f5b8:	str	r3, [r4, #180]	; 0xb4
   1f5bc:	str	r2, [r4, #168]	; 0xa8
   1f5c0:	mov	r6, #0
   1f5c4:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f5c8:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f5cc:	mov	r1, r5
   1f5d0:	ldr	r0, [r4, #8]
   1f5d4:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f5d8:	mov	r0, r5
   1f5dc:	bl	101d8 <myhtml_token_adjust_svg_attributes@plt>
   1f5e0:	mov	r0, r5
   1f5e4:	bl	10be0 <myhtml_token_adjust_foreign_attributes@plt>
   1f5e8:	mov	r1, r5
   1f5ec:	mov	r0, r4
   1f5f0:	bl	10d84 <myhtml_tree_node_insert_foreign_element@plt>
   1f5f4:	ldr	r2, [r5, #48]	; 0x30
   1f5f8:	mov	r3, #3
   1f5fc:	tst	r2, #2
   1f600:	str	r3, [r0, #8]
   1f604:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f608:	b	1f38c <myhtml_insertion_mode_in_body@@Base+0x1074>
   1f60c:	mov	r3, #0
   1f610:	mov	r2, #1
   1f614:	mov	r1, #128	; 0x80
   1f618:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1f61c:	subs	r6, r0, #0
   1f620:	bne	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f624:	ldr	r3, [r4, #128]	; 0x80
   1f628:	ldr	r2, [r3, #4]
   1f62c:	cmp	r2, #0
   1f630:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f634:	ldr	r3, [r3]
   1f638:	ldr	r7, [r3]
   1f63c:	ldr	r3, [r7, #32]
   1f640:	cmp	r3, #0
   1f644:	beq	1f958 <myhtml_insertion_mode_in_body@@Base+0x1640>
   1f648:	mov	r1, r5
   1f64c:	ldr	r0, [r4, #8]
   1f650:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f654:	ldr	r1, [r7, #32]
   1f658:	ldr	r0, [r4, #8]
   1f65c:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f660:	ldr	r2, [r7, #32]
   1f664:	mov	r1, r5
   1f668:	ldr	r3, [r4, #44]	; 0x2c
   1f66c:	ldr	r0, [r4, #8]
   1f670:	bl	10694 <myhtml_token_node_attr_copy_with_check@plt>
   1f674:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f678:	mov	r3, #32
   1f67c:	mov	r2, #1
   1f680:	mov	r1, #99	; 0x63
   1f684:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f688:	cmp	r0, #0
   1f68c:	beq	1f69c <myhtml_insertion_mode_in_body@@Base+0x1384>
   1f690:	mov	r1, r5
   1f694:	mov	r0, r4
   1f698:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f69c:	mov	r0, r4
   1f6a0:	bl	10628 <myhtml_tree_current_node@plt>
   1f6a4:	mov	r1, #85	; 0x55
   1f6a8:	bl	10aa8 <myhtml_is_html_node@plt>
   1f6ac:	cmp	r0, #0
   1f6b0:	beq	1f30c <myhtml_insertion_mode_in_body@@Base+0xff4>
   1f6b4:	mov	r0, r4
   1f6b8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f6bc:	b	1f30c <myhtml_insertion_mode_in_body@@Base+0xff4>
   1f6c0:	ldr	r3, [r1, #48]	; 0x30
   1f6c4:	tst	r3, #2048	; 0x800
   1f6c8:	beq	1f8b8 <myhtml_insertion_mode_in_body@@Base+0x15a0>
   1f6cc:	bl	107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   1f6d0:	ldr	r3, [r5, #12]
   1f6d4:	cmp	r3, #0
   1f6d8:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f6dc:	mov	r0, r4
   1f6e0:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f6e4:	mov	r1, r5
   1f6e8:	mov	r0, r4
   1f6ec:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1f6f0:	ldr	r3, [r5, #48]	; 0x30
   1f6f4:	ands	r3, r3, #8
   1f6f8:	bne	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f6fc:	ldr	r2, [r4, #180]	; 0xb4
   1f700:	ldr	r1, [r4, #180]	; 0xb4
   1f704:	and	r2, r2, #2
   1f708:	eor	r2, r2, r1
   1f70c:	mov	r6, r3
   1f710:	str	r2, [r4, #180]	; 0xb4
   1f714:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f718:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f71c:	mov	r1, r5
   1f720:	mov	r0, r4
   1f724:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f728:	mov	r0, r4
   1f72c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f730:	mov	r1, r5
   1f734:	ldr	r0, [r4, #8]
   1f738:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f73c:	mov	r2, #6
   1f740:	ldr	r3, [pc, #540]	; 1f964 <myhtml_insertion_mode_in_body@@Base+0x164c>
   1f744:	ldr	r0, [r4, #8]
   1f748:	str	r2, [sp, #4]
   1f74c:	ldr	r2, [pc, #532]	; 1f968 <myhtml_insertion_mode_in_body@@Base+0x1650>
   1f750:	add	r3, pc, r3
   1f754:	str	r3, [sp]
   1f758:	mov	r1, r5
   1f75c:	mov	r3, #4
   1f760:	add	r2, pc, r2
   1f764:	bl	fd34 <myhtml_token_attr_match_case@plt>
   1f768:	cmp	r0, #0
   1f76c:	bne	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f770:	ldr	r3, [r4, #180]	; 0xb4
   1f774:	ldr	r2, [r4, #180]	; 0xb4
   1f778:	and	r3, r3, #2
   1f77c:	eor	r3, r3, r2
   1f780:	mov	r6, r0
   1f784:	str	r3, [r4, #180]	; 0xb4
   1f788:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f78c:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f790:	mov	r1, r5
   1f794:	mov	r0, r4
   1f798:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f79c:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f7a0:	mov	r2, #0
   1f7a4:	mov	r1, r2
   1f7a8:	mov	r0, r4
   1f7ac:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f7b0:	mov	r0, r4
   1f7b4:	bl	10628 <myhtml_tree_current_node@plt>
   1f7b8:	ldr	r1, [r5]
   1f7bc:	bl	10aa8 <myhtml_is_html_node@plt>
   1f7c0:	ldr	r3, [r4, #128]	; 0x80
   1f7c4:	ldr	r2, [r3, #4]
   1f7c8:	cmp	r2, #0
   1f7cc:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f7d0:	ldr	r2, [r3, #4]
   1f7d4:	sub	r2, r2, #1
   1f7d8:	str	r2, [r3, #4]
   1f7dc:	ldr	r2, [r3, #4]
   1f7e0:	ldr	r2, [r7, r2, lsl #2]
   1f7e4:	ldr	r2, [r2, #4]
   1f7e8:	cmp	r2, #55	; 0x37
   1f7ec:	beq	1f854 <myhtml_insertion_mode_in_body@@Base+0x153c>
   1f7f0:	ldr	r2, [r3, #4]
   1f7f4:	ldr	r2, [r7, r2, lsl #2]
   1f7f8:	ldr	r2, [r2, #4]
   1f7fc:	cmp	r2, #56	; 0x38
   1f800:	beq	1f854 <myhtml_insertion_mode_in_body@@Base+0x153c>
   1f804:	ldr	r2, [r3, #4]
   1f808:	ldr	r2, [r7, r2, lsl #2]
   1f80c:	ldr	r2, [r2, #4]
   1f810:	cmp	r2, #57	; 0x39
   1f814:	beq	1f854 <myhtml_insertion_mode_in_body@@Base+0x153c>
   1f818:	ldr	r2, [r3, #4]
   1f81c:	ldr	r2, [r7, r2, lsl #2]
   1f820:	ldr	r2, [r2, #4]
   1f824:	cmp	r2, #58	; 0x3a
   1f828:	beq	1f854 <myhtml_insertion_mode_in_body@@Base+0x153c>
   1f82c:	ldr	r2, [r3, #4]
   1f830:	ldr	r2, [r7, r2, lsl #2]
   1f834:	ldr	r2, [r2, #4]
   1f838:	cmp	r2, #59	; 0x3b
   1f83c:	beq	1f854 <myhtml_insertion_mode_in_body@@Base+0x153c>
   1f840:	ldr	r2, [r3, #4]
   1f844:	ldr	r2, [r7, r2, lsl #2]
   1f848:	ldr	r2, [r2, #4]
   1f84c:	cmp	r2, #60	; 0x3c
   1f850:	bne	1f7c4 <myhtml_insertion_mode_in_body@@Base+0x14ac>
   1f854:	ldr	r2, [r3, #4]
   1f858:	ldr	r2, [r7, r2, lsl #2]
   1f85c:	ldr	r2, [r2, #8]
   1f860:	cmp	r2, #1
   1f864:	bne	1f7c4 <myhtml_insertion_mode_in_body@@Base+0x14ac>
   1f868:	b	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f86c:	ldr	r5, [r4, #104]	; 0x68
   1f870:	str	r6, [r4, #104]	; 0x68
   1f874:	cmp	r5, #0
   1f878:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f87c:	mov	r1, #8
   1f880:	mov	r0, r5
   1f884:	bl	fc50 <myhtml_tree_element_in_scope_by_node@plt>
   1f888:	cmp	r0, #0
   1f88c:	beq	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f890:	mov	r1, r6
   1f894:	mov	r2, r6
   1f898:	mov	r0, r4
   1f89c:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f8a0:	mov	r0, r4
   1f8a4:	bl	10628 <myhtml_tree_current_node@plt>
   1f8a8:	mov	r1, r5
   1f8ac:	mov	r0, r4
   1f8b0:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   1f8b4:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f8b8:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f8bc:	mov	r1, r5
   1f8c0:	mov	r0, r4
   1f8c4:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1f8c8:	ldr	r3, [r5, #48]	; 0x30
   1f8cc:	ands	r6, r3, #8
   1f8d0:	bne	1e9cc <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f8d4:	b	1eb7c <myhtml_insertion_mode_in_body@@Base+0x864>
   1f8d8:	mov	r3, #32
   1f8dc:	mov	r2, #1
   1f8e0:	mov	r1, #99	; 0x63
   1f8e4:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f8e8:	cmp	r0, #0
   1f8ec:	beq	1f598 <myhtml_insertion_mode_in_body@@Base+0x1280>
   1f8f0:	mov	r1, r5
   1f8f4:	mov	r0, r4
   1f8f8:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f8fc:	b	1f598 <myhtml_insertion_mode_in_body@@Base+0x1280>
   1f900:	mov	r2, #1
   1f904:	mov	r1, #99	; 0x63
   1f908:	mov	r0, r4
   1f90c:	bl	10970 <myhtml_tree_node_insert@plt>
   1f910:	b	1ea1c <myhtml_insertion_mode_in_body@@Base+0x704>
   1f914:	mov	r2, #1
   1f918:	mov	r1, #44	; 0x2c
   1f91c:	mov	r0, r4
   1f920:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f924:	mov	r0, r4
   1f928:	bl	10628 <myhtml_tree_current_node@plt>
   1f92c:	mov	r1, #44	; 0x2c
   1f930:	bl	10aa8 <myhtml_is_html_node@plt>
   1f934:	ldr	r3, [sp, #12]
   1f938:	mov	r2, #1
   1f93c:	mov	r1, #44	; 0x2c
   1f940:	mov	r0, r4
   1f944:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f948:	b	1ee10 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1f94c:	add	sp, sp, #20
   1f950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f954:	b	fda0 <myhtml_insertion_mode_in_template@plt>
   1f958:	str	r5, [r7, #32]
   1f95c:	mov	r6, r3
   1f960:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f964:	andeq	ip, sp, r0, asr #12
   1f968:	andeq	r9, r1, r0, ror r1

0001f96c <myhtml_insertion_mode_before_head@@Base>:
   1f96c:	ldr	r2, [r1, #48]	; 0x30
   1f970:	push	{r4, r5, r6, lr}
   1f974:	ands	r4, r2, #1
   1f978:	mov	r5, r0
   1f97c:	beq	1f9a8 <myhtml_insertion_mode_before_head@@Base+0x3c>
   1f980:	ldr	r3, [r1]
   1f984:	cmp	r3, #61	; 0x3d
   1f988:	beq	1f9dc <myhtml_insertion_mode_before_head@@Base+0x70>
   1f98c:	bhi	1f9d4 <myhtml_insertion_mode_before_head@@Base+0x68>
   1f990:	sub	r3, r3, #23
   1f994:	cmp	r3, #1
   1f998:	bls	1f9dc <myhtml_insertion_mode_before_head@@Base+0x70>
   1f99c:	mov	r4, #0
   1f9a0:	mov	r0, r4
   1f9a4:	pop	{r4, r5, r6, pc}
   1f9a8:	ldr	r6, [r1]
   1f9ac:	cmp	r6, #3
   1f9b0:	beq	1f9a0 <myhtml_insertion_mode_before_head@@Base+0x34>
   1f9b4:	bhi	1fa04 <myhtml_insertion_mode_before_head@@Base+0x98>
   1f9b8:	cmp	r6, #1
   1f9bc:	beq	1fa1c <myhtml_insertion_mode_before_head@@Base+0xb0>
   1f9c0:	cmp	r6, #2
   1f9c4:	bne	1f9dc <myhtml_insertion_mode_before_head@@Base+0x70>
   1f9c8:	mov	r2, r4
   1f9cc:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1f9d0:	b	1f9a0 <myhtml_insertion_mode_before_head@@Base+0x34>
   1f9d4:	cmp	r3, #65	; 0x41
   1f9d8:	bne	1f99c <myhtml_insertion_mode_before_head@@Base+0x30>
   1f9dc:	mov	r2, #1
   1f9e0:	mov	r1, #61	; 0x3d
   1f9e4:	mov	r0, r5
   1f9e8:	bl	10970 <myhtml_tree_node_insert@plt>
   1f9ec:	mov	r4, #1
   1f9f0:	mov	r3, #3
   1f9f4:	str	r3, [r5, #168]	; 0xa8
   1f9f8:	str	r0, [r5, #92]	; 0x5c
   1f9fc:	mov	r0, r4
   1fa00:	pop	{r4, r5, r6, pc}
   1fa04:	cmp	r6, #61	; 0x3d
   1fa08:	beq	1fa54 <myhtml_insertion_mode_before_head@@Base+0xe8>
   1fa0c:	cmp	r6, #65	; 0x41
   1fa10:	bne	1f9dc <myhtml_insertion_mode_before_head@@Base+0x70>
   1fa14:	pop	{r4, r5, r6, lr}
   1fa18:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1fa1c:	ldr	r3, [r1, #48]	; 0x30
   1fa20:	tst	r3, #8
   1fa24:	bne	1f9a0 <myhtml_insertion_mode_before_head@@Base+0x34>
   1fa28:	ldr	r0, [r0, #8]
   1fa2c:	bl	10118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1fa30:	mov	r2, r6
   1fa34:	mov	r1, #61	; 0x3d
   1fa38:	mov	r0, r5
   1fa3c:	bl	10970 <myhtml_tree_node_insert@plt>
   1fa40:	mov	r3, #3
   1fa44:	mov	r4, r6
   1fa48:	str	r3, [r5, #168]	; 0xa8
   1fa4c:	str	r0, [r5, #92]	; 0x5c
   1fa50:	b	1f9a0 <myhtml_insertion_mode_before_head@@Base+0x34>
   1fa54:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fa58:	mov	r3, #3
   1fa5c:	str	r3, [r5, #168]	; 0xa8
   1fa60:	str	r0, [r5, #92]	; 0x5c
   1fa64:	b	1f9a0 <myhtml_insertion_mode_before_head@@Base+0x34>

0001fa68 <myhtml_insertion_mode_in_head@@Base>:
   1fa68:	ldr	r3, [r1, #48]	; 0x30
   1fa6c:	push	{r4, r5, r6, r7, lr}
   1fa70:	tst	r3, #1
   1fa74:	sub	sp, sp, #12
   1fa78:	mov	r5, r1
   1fa7c:	mov	r4, r0
   1fa80:	beq	1fb0c <myhtml_insertion_mode_in_head@@Base+0xa4>
   1fa84:	ldr	r5, [r1]
   1fa88:	cmp	r5, #61	; 0x3d
   1fa8c:	beq	1fd38 <myhtml_insertion_mode_in_head@@Base+0x2d0>
   1fa90:	bls	1fda0 <myhtml_insertion_mode_in_head@@Base+0x338>
   1fa94:	cmp	r5, #65	; 0x41
   1fa98:	beq	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fa9c:	cmp	r5, #128	; 0x80
   1faa0:	bne	1fdac <myhtml_insertion_mode_in_head@@Base+0x344>
   1faa4:	mov	r3, #0
   1faa8:	mov	r2, #1
   1faac:	mov	r1, r5
   1fab0:	bl	fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   1fab4:	cmp	r0, #0
   1fab8:	beq	1fb04 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fabc:	mov	r2, #0
   1fac0:	mov	r1, r2
   1fac4:	mov	r0, r4
   1fac8:	bl	fe30 <myhtml_tree_generate_all_implied_end_tags@plt>
   1facc:	mov	r0, r4
   1fad0:	bl	10628 <myhtml_tree_current_node@plt>
   1fad4:	mov	r1, r5
   1fad8:	mov	r3, #0
   1fadc:	mov	r2, #1
   1fae0:	mov	r0, r4
   1fae4:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1fae8:	mov	r0, r4
   1faec:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1faf0:	mov	r0, r4
   1faf4:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   1faf8:	mov	r0, r4
   1fafc:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1fb00:	mov	r0, #0
   1fb04:	add	sp, sp, #12
   1fb08:	pop	{r4, r5, r6, r7, pc}
   1fb0c:	ldr	r3, [r1]
   1fb10:	sub	r3, r3, #1
   1fb14:	cmp	r3, #133	; 0x85
   1fb18:	addls	pc, pc, r3, lsl #2
   1fb1c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb20:	b	1fd64 <myhtml_insertion_mode_in_head@@Base+0x2fc>
   1fb24:	b	1fe64 <myhtml_insertion_mode_in_head@@Base+0x3fc>
   1fb28:	b	1fdac <myhtml_insertion_mode_in_head@@Base+0x344>
   1fb2c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb30:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb34:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb38:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb3c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb40:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb44:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb48:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb4c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb50:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb54:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb58:	b	1fd50 <myhtml_insertion_mode_in_head@@Base+0x2e8>
   1fb5c:	b	1fd50 <myhtml_insertion_mode_in_head@@Base+0x2e8>
   1fb60:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb64:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb68:	b	1fd50 <myhtml_insertion_mode_in_head@@Base+0x2e8>
   1fb6c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb70:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb74:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb78:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb7c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb80:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb84:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb88:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb8c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb90:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb94:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb98:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb9c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fba0:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fba4:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fba8:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbac:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbb0:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbb4:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbb8:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbbc:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbc0:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbc4:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbc8:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbcc:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbd0:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbd4:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbd8:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbdc:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbe0:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbe4:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbe8:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbec:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbf0:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbf4:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbf8:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbfc:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc00:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc04:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc08:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc0c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc10:	b	1fdac <myhtml_insertion_mode_in_head@@Base+0x344>
   1fc14:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc18:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc1c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc20:	b	1fe74 <myhtml_insertion_mode_in_head@@Base+0x40c>
   1fc24:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc28:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc2c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc30:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc34:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc38:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc3c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc40:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc44:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc48:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc4c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc50:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc54:	b	1fd50 <myhtml_insertion_mode_in_head@@Base+0x2e8>
   1fc58:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc5c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc60:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc64:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc68:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc6c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc70:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc74:	b	1fd50 <myhtml_insertion_mode_in_head@@Base+0x2e8>
   1fc78:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc7c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc80:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc84:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc88:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc8c:	b	1fdb8 <myhtml_insertion_mode_in_head@@Base+0x350>
   1fc90:	b	1fddc <myhtml_insertion_mode_in_head@@Base+0x374>
   1fc94:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc98:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc9c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fca0:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fca4:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fca8:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcac:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcb0:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcb4:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcb8:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcbc:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcc0:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcc4:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcc8:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fccc:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcd0:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcd4:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcd8:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcdc:	b	1fe7c <myhtml_insertion_mode_in_head@@Base+0x414>
   1fce0:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fce4:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fce8:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcec:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcf0:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcf4:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcf8:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcfc:	b	1fdb8 <myhtml_insertion_mode_in_head@@Base+0x350>
   1fd00:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd04:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd08:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd0c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd10:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd14:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd18:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd1c:	b	1fe24 <myhtml_insertion_mode_in_head@@Base+0x3bc>
   1fd20:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd24:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd28:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd2c:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd30:	b	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd34:	b	1fe00 <myhtml_insertion_mode_in_head@@Base+0x398>
   1fd38:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1fd3c:	mov	r3, #5
   1fd40:	mov	r0, #0
   1fd44:	str	r3, [r4, #168]	; 0xa8
   1fd48:	add	sp, sp, #12
   1fd4c:	pop	{r4, r5, r6, r7, pc}
   1fd50:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fd54:	mov	r0, r4
   1fd58:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1fd5c:	mov	r0, #0
   1fd60:	b	1fb04 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fd64:	ldr	r3, [r1, #48]	; 0x30
   1fd68:	tst	r3, #8
   1fd6c:	bne	1feec <myhtml_insertion_mode_in_head@@Base+0x484>
   1fd70:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   1fd74:	subs	r1, r0, #0
   1fd78:	beq	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd7c:	mov	r0, r4
   1fd80:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1fd84:	mov	r0, r4
   1fd88:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1fd8c:	mov	r3, #5
   1fd90:	mov	r0, #1
   1fd94:	str	r3, [r4, #168]	; 0xa8
   1fd98:	add	sp, sp, #12
   1fd9c:	pop	{r4, r5, r6, r7, pc}
   1fda0:	sub	r5, r5, #23
   1fda4:	cmp	r5, #1
   1fda8:	bls	1fd84 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fdac:	mov	r0, #0
   1fdb0:	add	sp, sp, #12
   1fdb4:	pop	{r4, r5, r6, r7, pc}
   1fdb8:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fdbc:	ldr	r1, [r4, #168]	; 0xa8
   1fdc0:	mov	r2, #7
   1fdc4:	mov	r3, #4
   1fdc8:	str	r1, [r4, #172]	; 0xac
   1fdcc:	str	r2, [r4, #168]	; 0xa8
   1fdd0:	str	r3, [r4, #164]	; 0xa4
   1fdd4:	mov	r0, #0
   1fdd8:	b	1fb04 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fddc:	ldr	r0, [r0, #180]	; 0xb4
   1fde0:	ands	r6, r0, #1
   1fde4:	mov	r0, r4
   1fde8:	bne	1fdb8 <myhtml_insertion_mode_in_head@@Base+0x350>
   1fdec:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fdf0:	mov	r3, #4
   1fdf4:	mov	r0, r6
   1fdf8:	str	r3, [r4, #168]	; 0xa8
   1fdfc:	b	1fb04 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fe00:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fe04:	ldr	r1, [r4, #168]	; 0xa8
   1fe08:	mov	r2, #7
   1fe0c:	mov	r3, #2
   1fe10:	str	r1, [r4, #172]	; 0xac
   1fe14:	str	r2, [r4, #168]	; 0xa8
   1fe18:	str	r3, [r4, #164]	; 0xa4
   1fe1c:	mov	r0, #0
   1fe20:	b	1fb04 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fe24:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fe28:	ldr	r3, [r4]
   1fe2c:	mov	r0, r4
   1fe30:	ldr	r1, [r3, #36]	; 0x24
   1fe34:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   1fe38:	ldr	r3, [r4, #180]	; 0xb4
   1fe3c:	ldr	r2, [r4, #180]	; 0xb4
   1fe40:	and	r3, r3, #2
   1fe44:	eor	r3, r3, r2
   1fe48:	mov	r1, #17
   1fe4c:	mov	r0, r4
   1fe50:	str	r3, [r4, #180]	; 0xb4
   1fe54:	str	r1, [r4, #168]	; 0xa8
   1fe58:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   1fe5c:	mov	r0, #0
   1fe60:	b	1fb04 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fe64:	mov	r2, #0
   1fe68:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1fe6c:	mov	r0, #0
   1fe70:	b	1fb04 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fe74:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   1fe78:	b	1fb04 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fe7c:	add	r2, sp, #4
   1fe80:	mov	r1, #0
   1fe84:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   1fe88:	mov	r7, r0
   1fe8c:	mov	r0, r4
   1fe90:	bl	ffe0 <myhtml_tree_node_create@plt>
   1fe94:	mov	r1, #112	; 0x70
   1fe98:	mov	r2, #1
   1fe9c:	mov	r3, #3
   1fea0:	mov	r6, r0
   1fea4:	str	r5, [r0, #32]
   1fea8:	stmib	r6, {r1, r2}
   1feac:	str	r3, [r6]
   1feb0:	ldr	r2, [sp, #4]
   1feb4:	mov	r0, r7
   1feb8:	mov	r1, r6
   1febc:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   1fec0:	mov	r1, r6
   1fec4:	mov	r0, r4
   1fec8:	bl	10988 <myhtml_tree_open_elements_append@plt>
   1fecc:	ldr	r1, [r4, #168]	; 0xa8
   1fed0:	mov	r2, #7
   1fed4:	mov	r3, #5
   1fed8:	str	r1, [r4, #172]	; 0xac
   1fedc:	str	r2, [r4, #168]	; 0xa8
   1fee0:	str	r3, [r4, #164]	; 0xa4
   1fee4:	mov	r0, #0
   1fee8:	b	1fb04 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1feec:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1fef0:	mov	r0, #0
   1fef4:	b	1fb04 <myhtml_insertion_mode_in_head@@Base+0x9c>

0001fef8 <myhtml_insertion_mode_in_template@@Base>:
   1fef8:	ldr	r3, [r1, #48]	; 0x30
   1fefc:	mov	r2, r1
   1ff00:	ands	r3, r3, #1
   1ff04:	beq	1ff1c <myhtml_insertion_mode_in_template@@Base+0x24>
   1ff08:	ldr	r3, [r1]
   1ff0c:	cmp	r3, #128	; 0x80
   1ff10:	beq	1ffc0 <myhtml_insertion_mode_in_template@@Base+0xc8>
   1ff14:	mov	r0, #0
   1ff18:	bx	lr
   1ff1c:	ldr	ip, [r1]
   1ff20:	push	{r4, lr}
   1ff24:	cmp	ip, #92	; 0x5c
   1ff28:	mov	lr, r0
   1ff2c:	beq	20050 <myhtml_insertion_mode_in_template@@Base+0x158>
   1ff30:	mov	r4, r0
   1ff34:	bls	1ffa0 <myhtml_insertion_mode_in_template@@Base+0xa8>
   1ff38:	cmp	ip, #130	; 0x82
   1ff3c:	beq	20070 <myhtml_insertion_mode_in_template@@Base+0x178>
   1ff40:	bls	20000 <myhtml_insertion_mode_in_template@@Base+0x108>
   1ff44:	cmp	ip, #134	; 0x86
   1ff48:	beq	20050 <myhtml_insertion_mode_in_template@@Base+0x158>
   1ff4c:	bls	20060 <myhtml_insertion_mode_in_template@@Base+0x168>
   1ff50:	cmp	ip, #135	; 0x87
   1ff54:	beq	20094 <myhtml_insertion_mode_in_template@@Base+0x19c>
   1ff58:	cmp	ip, #251	; 0xfb
   1ff5c:	bne	2001c <myhtml_insertion_mode_in_template@@Base+0x124>
   1ff60:	mov	r1, #128	; 0x80
   1ff64:	mov	r2, #1
   1ff68:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1ff6c:	subs	r1, r0, #0
   1ff70:	beq	200fc <myhtml_insertion_mode_in_template@@Base+0x204>
   1ff74:	mov	r2, #0
   1ff78:	mov	r0, r4
   1ff7c:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   1ff80:	mov	r0, r4
   1ff84:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1ff88:	mov	r0, r4
   1ff8c:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   1ff90:	mov	r0, r4
   1ff94:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1ff98:	mov	r0, #1
   1ff9c:	pop	{r4, pc}
   1ffa0:	cmp	ip, #19
   1ffa4:	beq	20050 <myhtml_insertion_mode_in_template@@Base+0x158>
   1ffa8:	bhi	1ffc4 <myhtml_insertion_mode_in_template@@Base+0xcc>
   1ffac:	cmp	ip, #1
   1ffb0:	bcc	2001c <myhtml_insertion_mode_in_template@@Base+0x124>
   1ffb4:	cmp	ip, #3
   1ffb8:	bhi	200ec <myhtml_insertion_mode_in_template@@Base+0x1f4>
   1ffbc:	pop	{r4, lr}
   1ffc0:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1ffc4:	cmp	ip, #32
   1ffc8:	beq	20070 <myhtml_insertion_mode_in_template@@Base+0x178>
   1ffcc:	bhi	200d8 <myhtml_insertion_mode_in_template@@Base+0x1e0>
   1ffd0:	cmp	ip, #27
   1ffd4:	beq	20070 <myhtml_insertion_mode_in_template@@Base+0x178>
   1ffd8:	cmp	ip, #31
   1ffdc:	bne	2001c <myhtml_insertion_mode_in_template@@Base+0x124>
   1ffe0:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   1ffe4:	mov	r0, r4
   1ffe8:	mov	r1, #11
   1ffec:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   1fff0:	mov	r3, #11
   1fff4:	str	r3, [r4, #168]	; 0xa8
   1fff8:	mov	r0, #1
   1fffc:	pop	{r4, pc}
   20000:	cmp	ip, #126	; 0x7e
   20004:	beq	20070 <myhtml_insertion_mode_in_template@@Base+0x178>
   20008:	bls	20040 <myhtml_insertion_mode_in_template@@Base+0x148>
   2000c:	cmp	ip, #127	; 0x7f
   20010:	beq	200b4 <myhtml_insertion_mode_in_template@@Base+0x1bc>
   20014:	cmp	ip, #128	; 0x80
   20018:	beq	20050 <myhtml_insertion_mode_in_template@@Base+0x158>
   2001c:	mov	r0, r4
   20020:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   20024:	mov	r0, r4
   20028:	mov	r1, #6
   2002c:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   20030:	mov	r3, #6
   20034:	str	r3, [r4, #168]	; 0xa8
   20038:	mov	r0, #1
   2003c:	pop	{r4, pc}
   20040:	cmp	ip, #112	; 0x70
   20044:	beq	20050 <myhtml_insertion_mode_in_template@@Base+0x158>
   20048:	cmp	ip, #120	; 0x78
   2004c:	bne	2001c <myhtml_insertion_mode_in_template@@Base+0x124>
   20050:	mov	r0, lr
   20054:	mov	r1, r2
   20058:	pop	{r4, lr}
   2005c:	b	10058 <myhtml_insertion_mode_in_head@plt>
   20060:	cmp	ip, #131	; 0x83
   20064:	beq	200b4 <myhtml_insertion_mode_in_template@@Base+0x1bc>
   20068:	cmp	ip, #132	; 0x84
   2006c:	bne	2001c <myhtml_insertion_mode_in_template@@Base+0x124>
   20070:	mov	r0, r4
   20074:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   20078:	mov	r0, r4
   2007c:	mov	r1, #8
   20080:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   20084:	mov	r3, #8
   20088:	str	r3, [r4, #168]	; 0xa8
   2008c:	mov	r0, #1
   20090:	pop	{r4, pc}
   20094:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   20098:	mov	r0, r4
   2009c:	mov	r1, #12
   200a0:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   200a4:	mov	r3, #12
   200a8:	str	r3, [r4, #168]	; 0xa8
   200ac:	mov	r0, #1
   200b0:	pop	{r4, pc}
   200b4:	mov	r0, r4
   200b8:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   200bc:	mov	r0, r4
   200c0:	mov	r1, #13
   200c4:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   200c8:	mov	r3, #13
   200cc:	str	r3, [r4, #168]	; 0xa8
   200d0:	mov	r0, #1
   200d4:	pop	{r4, pc}
   200d8:	cmp	ip, #78	; 0x4e
   200dc:	beq	20050 <myhtml_insertion_mode_in_template@@Base+0x158>
   200e0:	cmp	ip, #86	; 0x56
   200e4:	bne	2001c <myhtml_insertion_mode_in_template@@Base+0x124>
   200e8:	b	20050 <myhtml_insertion_mode_in_template@@Base+0x158>
   200ec:	sub	ip, ip, #15
   200f0:	cmp	ip, #1
   200f4:	bhi	2001c <myhtml_insertion_mode_in_template@@Base+0x124>
   200f8:	b	20050 <myhtml_insertion_mode_in_template@@Base+0x158>
   200fc:	mov	r0, r4
   20100:	bl	10310 <myhtml_rules_stop_parsing@plt>
   20104:	mov	r0, #0
   20108:	pop	{r4, pc}

0002010c <myhtml_insertion_mode_in_head_noscript@@Base>:
   2010c:	ldr	r3, [r1, #48]	; 0x30
   20110:	push	{r4, lr}
   20114:	tst	r3, #1
   20118:	mov	r4, r0
   2011c:	ldr	r3, [r1]
   20120:	beq	20148 <myhtml_insertion_mode_in_head_noscript@@Base+0x3c>
   20124:	cmp	r3, #24
   20128:	beq	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2012c:	cmp	r3, #93	; 0x5d
   20130:	bne	20358 <myhtml_insertion_mode_in_head_noscript@@Base+0x24c>
   20134:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20138:	mov	r3, #3
   2013c:	str	r3, [r4, #168]	; 0xa8
   20140:	mov	r0, #0
   20144:	pop	{r4, pc}
   20148:	sub	r3, r3, #1
   2014c:	cmp	r3, #119	; 0x77
   20150:	addls	pc, pc, r3, lsl #2
   20154:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20158:	b	20338 <myhtml_insertion_mode_in_head_noscript@@Base+0x22c>
   2015c:	b	20360 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   20160:	b	20358 <myhtml_insertion_mode_in_head_noscript@@Base+0x24c>
   20164:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20168:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2016c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20170:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20174:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20178:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2017c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20180:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20184:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20188:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2018c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20190:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20194:	b	20360 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   20198:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2019c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201a0:	b	20360 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   201a4:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201a8:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201ac:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201b0:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201b4:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201b8:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201bc:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201c0:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201c4:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201c8:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201cc:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201d0:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201d4:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201d8:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201dc:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201e0:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201e4:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201e8:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201ec:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201f0:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201f4:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201f8:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201fc:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20200:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20204:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20208:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2020c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20210:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20214:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20218:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2021c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20220:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20224:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20228:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2022c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20230:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20234:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20238:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2023c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20240:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20244:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20248:	b	20358 <myhtml_insertion_mode_in_head_noscript@@Base+0x24c>
   2024c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20250:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20254:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20258:	b	20368 <myhtml_insertion_mode_in_head_noscript@@Base+0x25c>
   2025c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20260:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20264:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20268:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2026c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20270:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20274:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20278:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2027c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20280:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20284:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20288:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2028c:	b	20360 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   20290:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20294:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20298:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2029c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202a0:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202a4:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202a8:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202ac:	b	20360 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   202b0:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202b4:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202b8:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202bc:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202c0:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202c4:	b	20360 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   202c8:	b	20358 <myhtml_insertion_mode_in_head_noscript@@Base+0x24c>
   202cc:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202d0:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202d4:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202d8:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202dc:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202e0:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202e4:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202e8:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202ec:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202f0:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202f4:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202f8:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202fc:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20300:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20304:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20308:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2030c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20310:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20314:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20318:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2031c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20320:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20324:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20328:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2032c:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20330:	b	20344 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20334:	b	20360 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   20338:	ldr	r3, [r1, #48]	; 0x30
   2033c:	tst	r3, #8
   20340:	bne	20360 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   20344:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20348:	mov	r3, #3
   2034c:	str	r3, [r4, #168]	; 0xa8
   20350:	mov	r0, #1
   20354:	pop	{r4, pc}
   20358:	mov	r0, #0
   2035c:	pop	{r4, pc}
   20360:	pop	{r4, lr}
   20364:	b	10058 <myhtml_insertion_mode_in_head@plt>
   20368:	pop	{r4, lr}
   2036c:	b	10640 <myhtml_insertion_mode_in_body@plt>

00020370 <myhtml_insertion_mode_after_head@@Base>:
   20370:	ldr	r3, [r1, #48]	; 0x30
   20374:	push	{r4, r5, r6, lr}
   20378:	tst	r3, #1
   2037c:	mov	r4, r1
   20380:	mov	r5, r0
   20384:	ldr	r3, [r1]
   20388:	beq	203a8 <myhtml_insertion_mode_after_head@@Base+0x38>
   2038c:	cmp	r3, #65	; 0x41
   20390:	beq	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20394:	bls	20618 <myhtml_insertion_mode_after_head@@Base+0x2a8>
   20398:	cmp	r3, #128	; 0x80
   2039c:	bne	20624 <myhtml_insertion_mode_after_head@@Base+0x2b4>
   203a0:	pop	{r4, r5, r6, lr}
   203a4:	b	10058 <myhtml_insertion_mode_in_head@plt>
   203a8:	sub	r3, r3, #1
   203ac:	cmp	r3, #133	; 0x85
   203b0:	addls	pc, pc, r3, lsl #2
   203b4:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   203b8:	b	205d0 <myhtml_insertion_mode_after_head@@Base+0x260>
   203bc:	b	20630 <myhtml_insertion_mode_after_head@@Base+0x2c0>
   203c0:	b	20624 <myhtml_insertion_mode_after_head@@Base+0x2b4>
   203c4:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   203c8:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   203cc:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   203d0:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   203d4:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   203d8:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   203dc:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   203e0:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   203e4:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   203e8:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   203ec:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   203f0:	b	20640 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   203f4:	b	20640 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   203f8:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   203fc:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20400:	b	20640 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   20404:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20408:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2040c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20410:	b	20670 <myhtml_insertion_mode_after_head@@Base+0x300>
   20414:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20418:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2041c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20420:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20424:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20428:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2042c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20430:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20434:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20438:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2043c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20440:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20444:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20448:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2044c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20450:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20454:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20458:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2045c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20460:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20464:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20468:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2046c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20470:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20474:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20478:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2047c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20480:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20484:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20488:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2048c:	b	2069c <myhtml_insertion_mode_after_head@@Base+0x32c>
   20490:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20494:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20498:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2049c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204a0:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204a4:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204a8:	b	20624 <myhtml_insertion_mode_after_head@@Base+0x2b4>
   204ac:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204b0:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204b4:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204b8:	b	20668 <myhtml_insertion_mode_after_head@@Base+0x2f8>
   204bc:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204c0:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204c4:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204c8:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204cc:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204d0:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204d4:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204d8:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204dc:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204e0:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204e4:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204e8:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204ec:	b	20640 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   204f0:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204f4:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204f8:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   204fc:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20500:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20504:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20508:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2050c:	b	20640 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   20510:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20514:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20518:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2051c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20520:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20524:	b	20640 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   20528:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2052c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20530:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20534:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20538:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2053c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20540:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20544:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20548:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2054c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20550:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20554:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20558:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2055c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20560:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20564:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20568:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2056c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20570:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20574:	b	20640 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   20578:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2057c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20580:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20584:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20588:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2058c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20590:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20594:	b	20640 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   20598:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   2059c:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   205a0:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   205a4:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   205a8:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   205ac:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   205b0:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   205b4:	b	20640 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   205b8:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   205bc:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   205c0:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   205c4:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   205c8:	b	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   205cc:	b	20640 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   205d0:	ldr	r3, [r1, #48]	; 0x30
   205d4:	tst	r3, #8
   205d8:	bne	206b0 <myhtml_insertion_mode_after_head@@Base+0x340>
   205dc:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   205e0:	subs	r1, r0, #0
   205e4:	beq	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   205e8:	mov	r0, r5
   205ec:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   205f0:	mov	r2, #1
   205f4:	mov	r1, #23
   205f8:	mov	r0, r5
   205fc:	bl	10970 <myhtml_tree_node_insert@plt>
   20600:	mov	r3, #6
   20604:	str	r3, [r5, #168]	; 0xa8
   20608:	mov	r3, #1
   2060c:	str	r0, [r5, #100]	; 0x64
   20610:	mov	r0, r3
   20614:	pop	{r4, r5, r6, pc}
   20618:	sub	r3, r3, #23
   2061c:	cmp	r3, #1
   20620:	bls	205f0 <myhtml_insertion_mode_after_head@@Base+0x280>
   20624:	mov	r3, #0
   20628:	mov	r0, r3
   2062c:	pop	{r4, r5, r6, pc}
   20630:	mov	r2, #0
   20634:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   20638:	mov	r3, #0
   2063c:	b	20610 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   20640:	ldr	r1, [r0, #92]	; 0x5c
   20644:	bl	10988 <myhtml_tree_open_elements_append@plt>
   20648:	mov	r1, r4
   2064c:	mov	r0, r5
   20650:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   20654:	ldr	r1, [r5, #92]	; 0x5c
   20658:	mov	r0, r5
   2065c:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   20660:	mov	r3, #0
   20664:	b	20610 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   20668:	pop	{r4, r5, r6, lr}
   2066c:	b	10640 <myhtml_insertion_mode_in_body@plt>
   20670:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20674:	ldr	r3, [r5, #180]	; 0xb4
   20678:	ldr	r2, [r5, #180]	; 0xb4
   2067c:	and	r3, r3, #2
   20680:	eor	r3, r3, r2
   20684:	mov	r2, #6
   20688:	str	r3, [r5, #180]	; 0xb4
   2068c:	str	r2, [r5, #168]	; 0xa8
   20690:	mov	r3, #0
   20694:	str	r0, [r5, #100]	; 0x64
   20698:	b	20610 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   2069c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   206a0:	mov	r3, #19
   206a4:	str	r3, [r5, #168]	; 0xa8
   206a8:	mov	r3, #0
   206ac:	b	20610 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   206b0:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   206b4:	mov	r3, #0
   206b8:	b	20610 <myhtml_insertion_mode_after_head@@Base+0x2a0>

000206bc <myhtml_insertion_mode_in_table@@Base>:
   206bc:	ldr	r3, [r1, #48]	; 0x30
   206c0:	push	{r4, r5, r6, r7, lr}
   206c4:	ands	r4, r3, #1
   206c8:	sub	sp, sp, #12
   206cc:	mov	r6, r1
   206d0:	mov	r5, r0
   206d4:	beq	208b0 <myhtml_insertion_mode_in_table@@Base+0x1f4>
   206d8:	ldr	r3, [r1]
   206dc:	sub	r3, r3, #23
   206e0:	cmp	r3, #112	; 0x70
   206e4:	addls	pc, pc, r3, lsl #2
   206e8:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   206ec:	b	2091c <myhtml_insertion_mode_in_table@@Base+0x260>
   206f0:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   206f4:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   206f8:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   206fc:	b	2091c <myhtml_insertion_mode_in_table@@Base+0x260>
   20700:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20704:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20708:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2070c:	b	2091c <myhtml_insertion_mode_in_table@@Base+0x260>
   20710:	b	2091c <myhtml_insertion_mode_in_table@@Base+0x260>
   20714:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20718:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2071c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20720:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20724:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20728:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2072c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20730:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20734:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20738:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2073c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20740:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20744:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20748:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2074c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20750:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20754:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20758:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2075c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20760:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20764:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20768:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2076c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20770:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20774:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20778:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2077c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20780:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20784:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20788:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2078c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20790:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20794:	b	2091c <myhtml_insertion_mode_in_table@@Base+0x260>
   20798:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2079c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207a0:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207a4:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207a8:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207ac:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207b0:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207b4:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207b8:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207bc:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207c0:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207c4:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207c8:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207cc:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207d0:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207d4:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207d8:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207dc:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207e0:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207e4:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207e8:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207ec:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207f0:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207f4:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207f8:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   207fc:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20800:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20804:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20808:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2080c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20810:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20814:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20818:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2081c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20820:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20824:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20828:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2082c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20830:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20834:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20838:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2083c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20840:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20844:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20848:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2084c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20850:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20854:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20858:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2085c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20860:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20864:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20868:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2086c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20870:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20874:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20878:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   2087c:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20880:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20884:	b	20964 <myhtml_insertion_mode_in_table@@Base+0x2a8>
   20888:	b	2091c <myhtml_insertion_mode_in_table@@Base+0x260>
   2088c:	b	2091c <myhtml_insertion_mode_in_table@@Base+0x260>
   20890:	b	20950 <myhtml_insertion_mode_in_table@@Base+0x294>
   20894:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20898:	b	2091c <myhtml_insertion_mode_in_table@@Base+0x260>
   2089c:	b	2091c <myhtml_insertion_mode_in_table@@Base+0x260>
   208a0:	b	2091c <myhtml_insertion_mode_in_table@@Base+0x260>
   208a4:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   208a8:	b	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   208ac:	b	2091c <myhtml_insertion_mode_in_table@@Base+0x260>
   208b0:	ldr	r7, [r1]
   208b4:	cmp	r7, #120	; 0x78
   208b8:	beq	20950 <myhtml_insertion_mode_in_table@@Base+0x294>
   208bc:	bhi	20928 <myhtml_insertion_mode_in_table@@Base+0x26c>
   208c0:	cmp	r7, #31
   208c4:	beq	20bc8 <myhtml_insertion_mode_in_table@@Base+0x50c>
   208c8:	bhi	20998 <myhtml_insertion_mode_in_table@@Base+0x2dc>
   208cc:	cmp	r7, #2
   208d0:	beq	20bb8 <myhtml_insertion_mode_in_table@@Base+0x4fc>
   208d4:	bls	20b00 <myhtml_insertion_mode_in_table@@Base+0x444>
   208d8:	cmp	r7, #3
   208dc:	moveq	r0, r4
   208e0:	beq	20920 <myhtml_insertion_mode_in_table@@Base+0x264>
   208e4:	cmp	r7, #27
   208e8:	bne	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   208ec:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   208f0:	mov	r1, r6
   208f4:	mov	r0, r5
   208f8:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   208fc:	ldr	r3, [r5]
   20900:	mov	r0, r5
   20904:	ldr	r1, [r3, #36]	; 0x24
   20908:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   2090c:	mov	r3, #10
   20910:	mov	r0, r4
   20914:	str	r3, [r5, #168]	; 0xa8
   20918:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x264>
   2091c:	mov	r0, #0
   20920:	add	sp, sp, #12
   20924:	pop	{r4, r5, r6, r7, pc}
   20928:	cmp	r7, #130	; 0x82
   2092c:	beq	20b94 <myhtml_insertion_mode_in_table@@Base+0x4d8>
   20930:	bhi	20a3c <myhtml_insertion_mode_in_table@@Base+0x380>
   20934:	cmp	r7, #126	; 0x7e
   20938:	beq	20b94 <myhtml_insertion_mode_in_table@@Base+0x4d8>
   2093c:	bls	20a6c <myhtml_insertion_mode_in_table@@Base+0x3b0>
   20940:	cmp	r7, #127	; 0x7f
   20944:	beq	20ab0 <myhtml_insertion_mode_in_table@@Base+0x3f4>
   20948:	cmp	r7, #128	; 0x80
   2094c:	bne	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20950:	mov	r1, r6
   20954:	mov	r0, r5
   20958:	add	sp, sp, #12
   2095c:	pop	{r4, r5, r6, r7, lr}
   20960:	b	10058 <myhtml_insertion_mode_in_head@plt>
   20964:	mov	r1, #125	; 0x7d
   20968:	mov	r3, #64	; 0x40
   2096c:	mov	r2, #1
   20970:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20974:	subs	r1, r0, #0
   20978:	beq	2091c <myhtml_insertion_mode_in_table@@Base+0x260>
   2097c:	mov	r2, #0
   20980:	mov	r0, r5
   20984:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   20988:	mov	r0, r5
   2098c:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   20990:	mov	r0, #0
   20994:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x264>
   20998:	cmp	r7, #52	; 0x34
   2099c:	beq	20b58 <myhtml_insertion_mode_in_table@@Base+0x49c>
   209a0:	bls	20ad8 <myhtml_insertion_mode_in_table@@Base+0x41c>
   209a4:	cmp	r7, #70	; 0x46
   209a8:	bne	20a10 <myhtml_insertion_mode_in_table@@Base+0x354>
   209ac:	ldr	r0, [r0, #8]
   209b0:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   209b4:	mov	r2, #6
   209b8:	ldr	r3, [pc, #556]	; 20bec <myhtml_insertion_mode_in_table@@Base+0x530>
   209bc:	ldr	r0, [r5, #8]
   209c0:	str	r2, [sp, #4]
   209c4:	ldr	r2, [pc, #548]	; 20bf0 <myhtml_insertion_mode_in_table@@Base+0x534>
   209c8:	add	r3, pc, r3
   209cc:	str	r3, [sp]
   209d0:	add	r2, pc, r2
   209d4:	mov	r3, #4
   209d8:	mov	r1, r6
   209dc:	bl	fd34 <myhtml_token_attr_match_case@plt>
   209e0:	cmp	r0, #0
   209e4:	beq	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   209e8:	mov	r1, r6
   209ec:	mov	r0, r5
   209f0:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   209f4:	mov	r0, r5
   209f8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   209fc:	ldr	r3, [r6, #48]	; 0x30
   20a00:	mov	r0, r4
   20a04:	orr	r3, r3, #2
   20a08:	str	r3, [r6, #48]	; 0x30
   20a0c:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x264>
   20a10:	cmp	r7, #112	; 0x70
   20a14:	beq	20950 <myhtml_insertion_mode_in_table@@Base+0x294>
   20a18:	mov	r3, #1
   20a1c:	mov	r1, r6
   20a20:	strb	r3, [r5, #188]	; 0xbc
   20a24:	mov	r0, r5
   20a28:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   20a2c:	mov	r0, #0
   20a30:	strb	r0, [r5, #188]	; 0xbc
   20a34:	add	sp, sp, #12
   20a38:	pop	{r4, r5, r6, r7, pc}
   20a3c:	cmp	r7, #132	; 0x84
   20a40:	beq	20b94 <myhtml_insertion_mode_in_table@@Base+0x4d8>
   20a44:	bcc	20ab0 <myhtml_insertion_mode_in_table@@Base+0x3f4>
   20a48:	cmp	r7, #135	; 0x87
   20a4c:	beq	20ab0 <myhtml_insertion_mode_in_table@@Base+0x3f4>
   20a50:	cmp	r7, #251	; 0xfb
   20a54:	bne	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20a58:	mov	r1, r6
   20a5c:	mov	r0, r5
   20a60:	add	sp, sp, #12
   20a64:	pop	{r4, r5, r6, r7, lr}
   20a68:	b	10640 <myhtml_insertion_mode_in_body@plt>
   20a6c:	cmp	r7, #125	; 0x7d
   20a70:	bne	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20a74:	mov	r3, #64	; 0x40
   20a78:	mov	r2, #1
   20a7c:	mov	r1, r7
   20a80:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20a84:	cmp	r0, #0
   20a88:	beq	2091c <myhtml_insertion_mode_in_table@@Base+0x260>
   20a8c:	mov	r3, r4
   20a90:	mov	r1, r7
   20a94:	mov	r2, #1
   20a98:	mov	r0, r5
   20a9c:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   20aa0:	mov	r0, r5
   20aa4:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   20aa8:	mov	r0, #1
   20aac:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x264>
   20ab0:	mov	r0, r5
   20ab4:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   20ab8:	mov	r2, #1
   20abc:	mov	r1, #126	; 0x7e
   20ac0:	mov	r0, r5
   20ac4:	bl	10970 <myhtml_tree_node_insert@plt>
   20ac8:	mov	r3, #12
   20acc:	str	r3, [r5, #168]	; 0xa8
   20ad0:	mov	r0, #1
   20ad4:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x264>
   20ad8:	cmp	r7, #32
   20adc:	bne	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20ae0:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   20ae4:	mov	r1, r6
   20ae8:	mov	r0, r5
   20aec:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20af0:	mov	r3, #11
   20af4:	mov	r0, r4
   20af8:	str	r3, [r5, #168]	; 0xa8
   20afc:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x264>
   20b00:	cmp	r7, #1
   20b04:	bne	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20b08:	bl	10628 <myhtml_tree_current_node@plt>
   20b0c:	ldr	r3, [r0, #4]
   20b10:	sub	r3, r3, #125	; 0x7d
   20b14:	cmp	r3, #10
   20b18:	bhi	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20b1c:	ldr	r2, [pc, #208]	; 20bf4 <myhtml_insertion_mode_in_table@@Base+0x538>
   20b20:	mvn	r3, r2, lsr r3
   20b24:	tst	r3, #1
   20b28:	bne	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20b2c:	ldr	r4, [r0, #8]
   20b30:	cmp	r4, #1
   20b34:	bne	20a18 <myhtml_insertion_mode_in_table@@Base+0x35c>
   20b38:	ldr	r0, [r5, #136]	; 0x88
   20b3c:	bl	10fe8 <myhtml_tree_token_list_clean@plt>
   20b40:	ldr	r2, [r5, #168]	; 0xa8
   20b44:	mov	r3, #9
   20b48:	mov	r0, r4
   20b4c:	str	r2, [r5, #172]	; 0xac
   20b50:	str	r3, [r5, #168]	; 0xa8
   20b54:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x264>
   20b58:	mov	r3, r4
   20b5c:	mov	r2, #1
   20b60:	mov	r1, #128	; 0x80
   20b64:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   20b68:	ldr	r3, [r5, #104]	; 0x68
   20b6c:	cmp	r0, #0
   20b70:	cmpeq	r3, #0
   20b74:	bne	2091c <myhtml_insertion_mode_in_table@@Base+0x260>
   20b78:	mov	r1, r6
   20b7c:	mov	r0, r5
   20b80:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20b84:	str	r0, [r5, #104]	; 0x68
   20b88:	mov	r0, r5
   20b8c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20b90:	b	20a58 <myhtml_insertion_mode_in_table@@Base+0x39c>
   20b94:	mov	r0, r5
   20b98:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   20b9c:	mov	r1, r6
   20ba0:	mov	r0, r5
   20ba4:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20ba8:	mov	r3, #12
   20bac:	str	r3, [r5, #168]	; 0xa8
   20bb0:	mov	r0, #0
   20bb4:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x264>
   20bb8:	mov	r2, r4
   20bbc:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   20bc0:	mov	r0, r4
   20bc4:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x264>
   20bc8:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   20bcc:	mov	r2, #1
   20bd0:	mov	r1, #32
   20bd4:	mov	r0, r5
   20bd8:	bl	10970 <myhtml_tree_node_insert@plt>
   20bdc:	mov	r3, #11
   20be0:	str	r3, [r5, #168]	; 0xa8
   20be4:	mov	r0, #1
   20be8:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x264>
   20bec:	andeq	fp, sp, r8, asr #7
   20bf0:	andeq	r7, r1, r0, lsl #30
   20bf4:	andeq	r0, r0, r3, lsr #9

00020bf8 <myhtml_insertion_mode_in_table_body@@Base>:
   20bf8:	ldr	r3, [r1, #48]	; 0x30
   20bfc:	push	{r4, r5, r6, lr}
   20c00:	ands	r4, r3, #1
   20c04:	sub	sp, sp, #8
   20c08:	mov	r5, r0
   20c0c:	beq	20de8 <myhtml_insertion_mode_in_table_body@@Base+0x1f0>
   20c10:	ldr	r2, [r1]
   20c14:	sub	r3, r2, #23
   20c18:	cmp	r3, #112	; 0x70
   20c1c:	addls	pc, pc, r3, lsl #2
   20c20:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c24:	b	20ee0 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20c28:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c2c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c30:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c34:	b	20ee0 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20c38:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c3c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c40:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c44:	b	20ee0 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20c48:	b	20ee0 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20c4c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c50:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c54:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c58:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c5c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c60:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c64:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c68:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c6c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c70:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c74:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c78:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c7c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c80:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c84:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c88:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c8c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c90:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c94:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c98:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c9c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20ca0:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20ca4:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20ca8:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cac:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cb0:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cb4:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cb8:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cbc:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cc0:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cc4:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cc8:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20ccc:	b	20ee0 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20cd0:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cd4:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cd8:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cdc:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20ce0:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20ce4:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20ce8:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cec:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cf0:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cf4:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cf8:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cfc:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d00:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d04:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d08:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d0c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d10:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d14:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d18:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d1c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d20:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d24:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d28:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d2c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d30:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d34:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d38:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d3c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d40:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d44:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d48:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d4c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d50:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d54:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d58:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d5c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d60:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d64:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d68:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d6c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d70:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d74:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d78:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d7c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d80:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d84:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d88:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d8c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d90:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d94:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d98:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d9c:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20da0:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20da4:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20da8:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20dac:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20db0:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20db4:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20db8:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20dbc:	b	20e54 <myhtml_insertion_mode_in_table_body@@Base+0x25c>
   20dc0:	b	20f04 <myhtml_insertion_mode_in_table_body@@Base+0x30c>
   20dc4:	b	20ee0 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20dc8:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20dcc:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20dd0:	b	20f04 <myhtml_insertion_mode_in_table_body@@Base+0x30c>
   20dd4:	b	20ee0 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20dd8:	b	20f04 <myhtml_insertion_mode_in_table_body@@Base+0x30c>
   20ddc:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20de0:	b	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20de4:	b	20ee0 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20de8:	ldr	r3, [r1]
   20dec:	cmp	r3, #127	; 0x7f
   20df0:	beq	20f3c <myhtml_insertion_mode_in_table_body@@Base+0x344>
   20df4:	bls	20e3c <myhtml_insertion_mode_in_table_body@@Base+0x244>
   20df8:	cmp	r3, #131	; 0x83
   20dfc:	beq	20f3c <myhtml_insertion_mode_in_table_body@@Base+0x344>
   20e00:	bls	20f68 <myhtml_insertion_mode_in_table_body@@Base+0x370>
   20e04:	cmp	r3, #132	; 0x84
   20e08:	beq	20e54 <myhtml_insertion_mode_in_table_body@@Base+0x25c>
   20e0c:	cmp	r3, #135	; 0x87
   20e10:	bne	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20e14:	str	r1, [sp, #4]
   20e18:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   20e1c:	ldr	r1, [sp, #4]
   20e20:	mov	r0, r5
   20e24:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20e28:	mov	r3, #13
   20e2c:	mov	r0, r4
   20e30:	str	r3, [r5, #168]	; 0xa8
   20e34:	add	sp, sp, #8
   20e38:	pop	{r4, r5, r6, pc}
   20e3c:	cmp	r3, #32
   20e40:	bhi	20eec <myhtml_insertion_mode_in_table_body@@Base+0x2f4>
   20e44:	cmp	r3, #31
   20e48:	bcs	20e54 <myhtml_insertion_mode_in_table_body@@Base+0x25c>
   20e4c:	cmp	r3, #27
   20e50:	bne	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20e54:	mov	r3, #64	; 0x40
   20e58:	mov	r2, #1
   20e5c:	mov	r1, #126	; 0x7e
   20e60:	mov	r0, r5
   20e64:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20e68:	mov	r3, #64	; 0x40
   20e6c:	mov	r2, #1
   20e70:	mov	r1, #130	; 0x82
   20e74:	mov	r4, r0
   20e78:	mov	r0, r5
   20e7c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20e80:	mov	r3, #64	; 0x40
   20e84:	mov	r2, #1
   20e88:	mov	r1, #132	; 0x84
   20e8c:	mov	r6, r0
   20e90:	mov	r0, r5
   20e94:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20e98:	cmp	r4, #0
   20e9c:	cmpeq	r6, #0
   20ea0:	moveq	r4, #1
   20ea4:	movne	r4, #0
   20ea8:	cmp	r0, #0
   20eac:	movne	r4, #0
   20eb0:	andeq	r4, r4, #1
   20eb4:	cmp	r4, #0
   20eb8:	bne	20ee0 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20ebc:	mov	r0, r5
   20ec0:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   20ec4:	mov	r0, r5
   20ec8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20ecc:	mov	r0, #1
   20ed0:	mov	r3, #8
   20ed4:	str	r3, [r5, #168]	; 0xa8
   20ed8:	add	sp, sp, #8
   20edc:	pop	{r4, r5, r6, pc}
   20ee0:	mov	r0, #0
   20ee4:	add	sp, sp, #8
   20ee8:	pop	{r4, r5, r6, pc}
   20eec:	cmp	r3, #126	; 0x7e
   20ef0:	beq	20e54 <myhtml_insertion_mode_in_table_body@@Base+0x25c>
   20ef4:	mov	r0, r5
   20ef8:	add	sp, sp, #8
   20efc:	pop	{r4, r5, r6, lr}
   20f00:	b	10178 <myhtml_insertion_mode_in_table@plt>
   20f04:	mov	r1, r2
   20f08:	mov	r3, #64	; 0x40
   20f0c:	mov	r2, #1
   20f10:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20f14:	cmp	r0, #0
   20f18:	beq	20ee0 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20f1c:	mov	r0, r5
   20f20:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   20f24:	mov	r0, r5
   20f28:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20f2c:	mov	r3, #8
   20f30:	str	r3, [r5, #168]	; 0xa8
   20f34:	mov	r0, #0
   20f38:	b	20ed8 <myhtml_insertion_mode_in_table_body@@Base+0x2e0>
   20f3c:	mov	r0, r5
   20f40:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   20f44:	mov	r2, #1
   20f48:	mov	r1, #135	; 0x87
   20f4c:	mov	r0, r5
   20f50:	bl	10970 <myhtml_tree_node_insert@plt>
   20f54:	mov	r3, #13
   20f58:	mov	r0, #1
   20f5c:	str	r3, [r5, #168]	; 0xa8
   20f60:	add	sp, sp, #8
   20f64:	pop	{r4, r5, r6, pc}
   20f68:	cmp	r3, #130	; 0x82
   20f6c:	bne	20ef4 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20f70:	b	20e54 <myhtml_insertion_mode_in_table_body@@Base+0x25c>

00020f74 <myhtml_insertion_mode_in_row@@Base>:
   20f74:	ldr	r3, [r1, #48]	; 0x30
   20f78:	push	{r4, lr}
   20f7c:	tst	r3, #1
   20f80:	sub	sp, sp, #8
   20f84:	mov	r4, r0
   20f88:	beq	21164 <myhtml_insertion_mode_in_row@@Base+0x1f0>
   20f8c:	ldr	r2, [r1]
   20f90:	sub	r3, r2, #23
   20f94:	cmp	r3, #112	; 0x70
   20f98:	addls	pc, pc, r3, lsl #2
   20f9c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fa0:	b	211f8 <myhtml_insertion_mode_in_row@@Base+0x284>
   20fa4:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fa8:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fac:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fb0:	b	211f8 <myhtml_insertion_mode_in_row@@Base+0x284>
   20fb4:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fb8:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fbc:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fc0:	b	211f8 <myhtml_insertion_mode_in_row@@Base+0x284>
   20fc4:	b	211f8 <myhtml_insertion_mode_in_row@@Base+0x284>
   20fc8:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fcc:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fd0:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fd4:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fd8:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fdc:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fe0:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fe4:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fe8:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fec:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20ff0:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20ff4:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20ff8:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20ffc:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21000:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21004:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21008:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2100c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21010:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21014:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21018:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2101c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21020:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21024:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21028:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2102c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21030:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21034:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21038:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2103c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21040:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21044:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21048:	b	211f8 <myhtml_insertion_mode_in_row@@Base+0x284>
   2104c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21050:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21054:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21058:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2105c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21060:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21064:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21068:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2106c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21070:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21074:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21078:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2107c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21080:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21084:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21088:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2108c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21090:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21094:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21098:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2109c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210a0:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210a4:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210a8:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210ac:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210b0:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210b4:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210b8:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210bc:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210c0:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210c4:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210c8:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210cc:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210d0:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210d4:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210d8:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210dc:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210e0:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210e4:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210e8:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210ec:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210f0:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210f4:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210f8:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210fc:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21100:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21104:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21108:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2110c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21110:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21114:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21118:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2111c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21120:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21124:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21128:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2112c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21130:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21134:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21138:	b	211b8 <myhtml_insertion_mode_in_row@@Base+0x244>
   2113c:	b	211a0 <myhtml_insertion_mode_in_row@@Base+0x22c>
   21140:	b	211f8 <myhtml_insertion_mode_in_row@@Base+0x284>
   21144:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21148:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2114c:	b	211a0 <myhtml_insertion_mode_in_row@@Base+0x22c>
   21150:	b	211f8 <myhtml_insertion_mode_in_row@@Base+0x284>
   21154:	b	211a0 <myhtml_insertion_mode_in_row@@Base+0x22c>
   21158:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2115c:	b	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21160:	b	21204 <myhtml_insertion_mode_in_row@@Base+0x290>
   21164:	ldr	r3, [r1]
   21168:	cmp	r3, #127	; 0x7f
   2116c:	beq	2123c <myhtml_insertion_mode_in_row@@Base+0x2c8>
   21170:	bls	21278 <myhtml_insertion_mode_in_row@@Base+0x304>
   21174:	cmp	r3, #131	; 0x83
   21178:	beq	2123c <myhtml_insertion_mode_in_row@@Base+0x2c8>
   2117c:	bls	21294 <myhtml_insertion_mode_in_row@@Base+0x320>
   21180:	cmp	r3, #132	; 0x84
   21184:	beq	211b8 <myhtml_insertion_mode_in_row@@Base+0x244>
   21188:	cmp	r3, #135	; 0x87
   2118c:	beq	211b8 <myhtml_insertion_mode_in_row@@Base+0x244>
   21190:	mov	r0, r4
   21194:	add	sp, sp, #8
   21198:	pop	{r4, lr}
   2119c:	b	10178 <myhtml_insertion_mode_in_table@plt>
   211a0:	mov	r1, r2
   211a4:	mov	r3, #64	; 0x40
   211a8:	mov	r2, #1
   211ac:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   211b0:	cmp	r0, #0
   211b4:	beq	211f8 <myhtml_insertion_mode_in_row@@Base+0x284>
   211b8:	mov	r3, #64	; 0x40
   211bc:	mov	r2, #1
   211c0:	mov	r1, #135	; 0x87
   211c4:	mov	r0, r4
   211c8:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   211cc:	cmp	r0, #0
   211d0:	beq	211f8 <myhtml_insertion_mode_in_row@@Base+0x284>
   211d4:	mov	r0, r4
   211d8:	bl	10418 <myhtml_tree_clear_stack_back_table_row_context@plt>
   211dc:	mov	r0, r4
   211e0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   211e4:	mov	r0, #1
   211e8:	mov	r3, #12
   211ec:	str	r3, [r4, #168]	; 0xa8
   211f0:	add	sp, sp, #8
   211f4:	pop	{r4, pc}
   211f8:	mov	r0, #0
   211fc:	add	sp, sp, #8
   21200:	pop	{r4, pc}
   21204:	mov	r3, #64	; 0x40
   21208:	mov	r2, #1
   2120c:	mov	r1, #135	; 0x87
   21210:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21214:	cmp	r0, #0
   21218:	beq	211f8 <myhtml_insertion_mode_in_row@@Base+0x284>
   2121c:	mov	r0, r4
   21220:	bl	10418 <myhtml_tree_clear_stack_back_table_row_context@plt>
   21224:	mov	r0, r4
   21228:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2122c:	mov	r3, #12
   21230:	str	r3, [r4, #168]	; 0xa8
   21234:	mov	r0, #0
   21238:	b	211f0 <myhtml_insertion_mode_in_row@@Base+0x27c>
   2123c:	mov	r0, r4
   21240:	str	r1, [sp, #4]
   21244:	bl	10418 <myhtml_tree_clear_stack_back_table_row_context@plt>
   21248:	ldr	r1, [sp, #4]
   2124c:	mov	r0, r4
   21250:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   21254:	ldr	r3, [r4]
   21258:	mov	r0, r4
   2125c:	ldr	r1, [r3, #36]	; 0x24
   21260:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   21264:	mov	r3, #14
   21268:	mov	r0, #0
   2126c:	str	r3, [r4, #168]	; 0xa8
   21270:	add	sp, sp, #8
   21274:	pop	{r4, pc}
   21278:	cmp	r3, #32
   2127c:	bhi	212a0 <myhtml_insertion_mode_in_row@@Base+0x32c>
   21280:	cmp	r3, #31
   21284:	bcs	211b8 <myhtml_insertion_mode_in_row@@Base+0x244>
   21288:	cmp	r3, #27
   2128c:	bne	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21290:	b	211b8 <myhtml_insertion_mode_in_row@@Base+0x244>
   21294:	cmp	r3, #130	; 0x82
   21298:	bne	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2129c:	b	211b8 <myhtml_insertion_mode_in_row@@Base+0x244>
   212a0:	cmp	r3, #126	; 0x7e
   212a4:	bne	21190 <myhtml_insertion_mode_in_row@@Base+0x21c>
   212a8:	b	211b8 <myhtml_insertion_mode_in_row@@Base+0x244>

000212ac <myhtml_insertion_mode_in_table_text@@Base>:
   212ac:	ldr	r3, [r1]
   212b0:	push	{r4, r5, r6, r7, r8, lr}
   212b4:	cmp	r3, #1
   212b8:	mov	r5, r0
   212bc:	beq	21380 <myhtml_insertion_mode_in_table_text@@Base+0xd4>
   212c0:	ldr	r6, [r0, #136]	; 0x88
   212c4:	ldr	ip, [r6, #4]
   212c8:	cmp	ip, #0
   212cc:	beq	21334 <myhtml_insertion_mode_in_table_text@@Base+0x88>
   212d0:	ldr	r1, [r6]
   212d4:	ldr	r3, [r1]
   212d8:	ldr	r4, [r3, #48]	; 0x30
   212dc:	ands	r4, r4, #8
   212e0:	movne	r0, r1
   212e4:	movne	r2, #0
   212e8:	bne	21300 <myhtml_insertion_mode_in_table_text@@Base+0x54>
   212ec:	b	21348 <myhtml_insertion_mode_in_table_text@@Base+0x9c>
   212f0:	ldr	r3, [r0, #4]!
   212f4:	ldr	r3, [r3, #48]	; 0x30
   212f8:	ands	r3, r3, #8
   212fc:	beq	21344 <myhtml_insertion_mode_in_table_text@@Base+0x98>
   21300:	add	r2, r2, #1
   21304:	cmp	r2, ip
   21308:	bne	212f0 <myhtml_insertion_mode_in_table_text@@Base+0x44>
   2130c:	mov	r4, #0
   21310:	b	21318 <myhtml_insertion_mode_in_table_text@@Base+0x6c>
   21314:	ldr	r1, [r6]
   21318:	ldr	r1, [r1, r4, lsl #2]
   2131c:	mov	r0, r5
   21320:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   21324:	ldr	r3, [r6, #4]
   21328:	add	r4, r4, #1
   2132c:	cmp	r3, r4
   21330:	bhi	21314 <myhtml_insertion_mode_in_table_text@@Base+0x68>
   21334:	ldr	r3, [r5, #172]	; 0xac
   21338:	mov	r0, #1
   2133c:	str	r3, [r5, #168]	; 0xa8
   21340:	pop	{r4, r5, r6, r7, r8, pc}
   21344:	mov	r4, r3
   21348:	mov	r8, #1
   2134c:	mov	r7, #0
   21350:	b	21358 <myhtml_insertion_mode_in_table_text@@Base+0xac>
   21354:	ldr	r1, [r6]
   21358:	ldr	r1, [r1, r4, lsl #2]
   2135c:	strb	r8, [r5, #188]	; 0xbc
   21360:	mov	r0, r5
   21364:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   21368:	ldr	r3, [r6, #4]
   2136c:	add	r4, r4, #1
   21370:	cmp	r3, r4
   21374:	strb	r7, [r5, #188]	; 0xbc
   21378:	bhi	21354 <myhtml_insertion_mode_in_table_text@@Base+0xa8>
   2137c:	b	21334 <myhtml_insertion_mode_in_table_text@@Base+0x88>
   21380:	ldr	r3, [r1, #48]	; 0x30
   21384:	mov	r6, r1
   21388:	ands	r4, r3, #2048	; 0x800
   2138c:	beq	213a4 <myhtml_insertion_mode_in_table_text@@Base+0xf8>
   21390:	bl	107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   21394:	ldr	r0, [r6, #12]
   21398:	cmp	r0, #0
   2139c:	popeq	{r4, r5, r6, r7, r8, pc}
   213a0:	mov	r1, r6
   213a4:	ldr	r0, [r5, #136]	; 0x88
   213a8:	bl	10ec8 <myhtml_tree_token_list_append@plt>
   213ac:	mov	r0, #0
   213b0:	pop	{r4, r5, r6, r7, r8, pc}

000213b4 <myhtml_insertion_mode_in_caption@@Base>:
   213b4:	ldr	r3, [r1, #48]	; 0x30
   213b8:	push	{r4, r5, r6, lr}
   213bc:	tst	r3, #1
   213c0:	mov	r4, r0
   213c4:	beq	2145c <myhtml_insertion_mode_in_caption@@Base+0xa8>
   213c8:	ldr	r5, [r1]
   213cc:	cmp	r5, #125	; 0x7d
   213d0:	beq	21534 <myhtml_insertion_mode_in_caption@@Base+0x180>
   213d4:	bhi	21514 <myhtml_insertion_mode_in_caption@@Base+0x160>
   213d8:	cmp	r5, #32
   213dc:	bhi	21550 <myhtml_insertion_mode_in_caption@@Base+0x19c>
   213e0:	cmp	r5, #31
   213e4:	bcs	2152c <myhtml_insertion_mode_in_caption@@Base+0x178>
   213e8:	cmp	r5, #23
   213ec:	beq	2152c <myhtml_insertion_mode_in_caption@@Base+0x178>
   213f0:	cmp	r5, #27
   213f4:	bne	21488 <myhtml_insertion_mode_in_caption@@Base+0xd4>
   213f8:	mov	r3, #64	; 0x40
   213fc:	mov	r2, #1
   21400:	mov	r1, r5
   21404:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21408:	cmp	r0, #0
   2140c:	beq	2152c <myhtml_insertion_mode_in_caption@@Base+0x178>
   21410:	mov	r2, #0
   21414:	mov	r1, r2
   21418:	mov	r0, r4
   2141c:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   21420:	mov	r0, r4
   21424:	bl	10628 <myhtml_tree_current_node@plt>
   21428:	mov	r1, r5
   2142c:	bl	10aa8 <myhtml_is_html_node@plt>
   21430:	mov	r1, r5
   21434:	mov	r3, #0
   21438:	mov	r2, #1
   2143c:	mov	r0, r4
   21440:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   21444:	mov	r0, r4
   21448:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   2144c:	mov	r3, #8
   21450:	str	r3, [r4, #168]	; 0xa8
   21454:	mov	r0, #0
   21458:	pop	{r4, r5, r6, pc}
   2145c:	ldr	r3, [r1]
   21460:	cmp	r3, #127	; 0x7f
   21464:	bhi	21494 <myhtml_insertion_mode_in_caption@@Base+0xe0>
   21468:	cmp	r3, #126	; 0x7e
   2146c:	bcs	214ac <myhtml_insertion_mode_in_caption@@Base+0xf8>
   21470:	cmp	r3, #27
   21474:	beq	214ac <myhtml_insertion_mode_in_caption@@Base+0xf8>
   21478:	bcc	21488 <myhtml_insertion_mode_in_caption@@Base+0xd4>
   2147c:	sub	r3, r3, #31
   21480:	cmp	r3, #1
   21484:	bls	214ac <myhtml_insertion_mode_in_caption@@Base+0xf8>
   21488:	mov	r0, r4
   2148c:	pop	{r4, r5, r6, lr}
   21490:	b	10640 <myhtml_insertion_mode_in_body@plt>
   21494:	cmp	r3, #130	; 0x82
   21498:	bcc	21488 <myhtml_insertion_mode_in_caption@@Base+0xd4>
   2149c:	cmp	r3, #132	; 0x84
   214a0:	bls	214ac <myhtml_insertion_mode_in_caption@@Base+0xf8>
   214a4:	cmp	r3, #135	; 0x87
   214a8:	bne	21488 <myhtml_insertion_mode_in_caption@@Base+0xd4>
   214ac:	mov	r3, #64	; 0x40
   214b0:	mov	r2, #1
   214b4:	mov	r1, #27
   214b8:	mov	r0, r4
   214bc:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   214c0:	cmp	r0, #0
   214c4:	beq	2152c <myhtml_insertion_mode_in_caption@@Base+0x178>
   214c8:	mov	r2, #0
   214cc:	mov	r1, r2
   214d0:	mov	r0, r4
   214d4:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   214d8:	mov	r0, r4
   214dc:	bl	10628 <myhtml_tree_current_node@plt>
   214e0:	mov	r1, #27
   214e4:	bl	10aa8 <myhtml_is_html_node@plt>
   214e8:	mov	r3, #0
   214ec:	mov	r2, #1
   214f0:	mov	r1, #27
   214f4:	mov	r0, r4
   214f8:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   214fc:	mov	r0, r4
   21500:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   21504:	mov	r3, #8
   21508:	str	r3, [r4, #168]	; 0xa8
   2150c:	mov	r0, #1
   21510:	pop	{r4, r5, r6, pc}
   21514:	cmp	r5, #132	; 0x84
   21518:	bhi	2155c <myhtml_insertion_mode_in_caption@@Base+0x1a8>
   2151c:	cmp	r5, #130	; 0x82
   21520:	bcs	2152c <myhtml_insertion_mode_in_caption@@Base+0x178>
   21524:	cmp	r5, #127	; 0x7f
   21528:	bhi	21488 <myhtml_insertion_mode_in_caption@@Base+0xd4>
   2152c:	mov	r0, #0
   21530:	pop	{r4, r5, r6, pc}
   21534:	mov	r3, #64	; 0x40
   21538:	mov	r2, #1
   2153c:	mov	r1, #27
   21540:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21544:	cmp	r0, #0
   21548:	bne	214c8 <myhtml_insertion_mode_in_caption@@Base+0x114>
   2154c:	b	2152c <myhtml_insertion_mode_in_caption@@Base+0x178>
   21550:	cmp	r5, #65	; 0x41
   21554:	bne	21488 <myhtml_insertion_mode_in_caption@@Base+0xd4>
   21558:	b	2152c <myhtml_insertion_mode_in_caption@@Base+0x178>
   2155c:	cmp	r5, #135	; 0x87
   21560:	bne	21488 <myhtml_insertion_mode_in_caption@@Base+0xd4>
   21564:	b	2152c <myhtml_insertion_mode_in_caption@@Base+0x178>

00021568 <myhtml_insertion_mode_in_column_group@@Base>:
   21568:	ldr	r2, [r1, #48]	; 0x30
   2156c:	push	{r4, r5, r6, lr}
   21570:	ands	r4, r2, #1
   21574:	mov	r5, r0
   21578:	beq	215cc <myhtml_insertion_mode_in_column_group@@Base+0x64>
   2157c:	ldr	r4, [r1]
   21580:	cmp	r4, #32
   21584:	beq	2162c <myhtml_insertion_mode_in_column_group@@Base+0xc4>
   21588:	cmp	r4, #128	; 0x80
   2158c:	beq	21660 <myhtml_insertion_mode_in_column_group@@Base+0xf8>
   21590:	cmp	r4, #31
   21594:	beq	21604 <myhtml_insertion_mode_in_column_group@@Base+0x9c>
   21598:	bl	10628 <myhtml_tree_current_node@plt>
   2159c:	cmp	r0, #0
   215a0:	beq	21604 <myhtml_insertion_mode_in_column_group@@Base+0x9c>
   215a4:	mov	r1, #32
   215a8:	bl	10aa8 <myhtml_is_html_node@plt>
   215ac:	cmp	r0, #0
   215b0:	beq	21604 <myhtml_insertion_mode_in_column_group@@Base+0x9c>
   215b4:	mov	r0, r5
   215b8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   215bc:	mov	r3, #8
   215c0:	str	r3, [r5, #168]	; 0xa8
   215c4:	mov	r0, #1
   215c8:	pop	{r4, r5, r6, pc}
   215cc:	ldr	r2, [r1]
   215d0:	cmp	r2, #31
   215d4:	beq	21678 <myhtml_insertion_mode_in_column_group@@Base+0x110>
   215d8:	bhi	2160c <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   215dc:	cmp	r2, #2
   215e0:	beq	21668 <myhtml_insertion_mode_in_column_group@@Base+0x100>
   215e4:	cmp	r2, #3
   215e8:	beq	21604 <myhtml_insertion_mode_in_column_group@@Base+0x9c>
   215ec:	cmp	r2, #1
   215f0:	beq	2168c <myhtml_insertion_mode_in_column_group@@Base+0x124>
   215f4:	mov	r0, r5
   215f8:	bl	10628 <myhtml_tree_current_node@plt>
   215fc:	cmp	r0, #0
   21600:	bne	215a4 <myhtml_insertion_mode_in_column_group@@Base+0x3c>
   21604:	mov	r0, #0
   21608:	pop	{r4, r5, r6, pc}
   2160c:	cmp	r2, #128	; 0x80
   21610:	beq	21660 <myhtml_insertion_mode_in_column_group@@Base+0xf8>
   21614:	cmp	r2, #251	; 0xfb
   21618:	beq	21624 <myhtml_insertion_mode_in_column_group@@Base+0xbc>
   2161c:	cmp	r2, #65	; 0x41
   21620:	bne	215f4 <myhtml_insertion_mode_in_column_group@@Base+0x8c>
   21624:	pop	{r4, r5, r6, lr}
   21628:	b	10640 <myhtml_insertion_mode_in_body@plt>
   2162c:	bl	10628 <myhtml_tree_current_node@plt>
   21630:	cmp	r0, #0
   21634:	beq	21604 <myhtml_insertion_mode_in_column_group@@Base+0x9c>
   21638:	mov	r1, r4
   2163c:	bl	10aa8 <myhtml_is_html_node@plt>
   21640:	cmp	r0, #0
   21644:	beq	21604 <myhtml_insertion_mode_in_column_group@@Base+0x9c>
   21648:	mov	r0, r5
   2164c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21650:	mov	r3, #8
   21654:	str	r3, [r5, #168]	; 0xa8
   21658:	mov	r0, #0
   2165c:	pop	{r4, r5, r6, pc}
   21660:	pop	{r4, r5, r6, lr}
   21664:	b	10058 <myhtml_insertion_mode_in_head@plt>
   21668:	mov	r2, r4
   2166c:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   21670:	mov	r0, r4
   21674:	pop	{r4, r5, r6, pc}
   21678:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   2167c:	mov	r0, r5
   21680:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21684:	mov	r0, r4
   21688:	pop	{r4, r5, r6, pc}
   2168c:	ldr	r3, [r1, #48]	; 0x30
   21690:	tst	r3, #8
   21694:	bne	216b0 <myhtml_insertion_mode_in_column_group@@Base+0x148>
   21698:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   2169c:	subs	r1, r0, #0
   216a0:	beq	215f4 <myhtml_insertion_mode_in_column_group@@Base+0x8c>
   216a4:	mov	r0, r5
   216a8:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   216ac:	b	215f4 <myhtml_insertion_mode_in_column_group@@Base+0x8c>
   216b0:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   216b4:	mov	r0, r4
   216b8:	pop	{r4, r5, r6, pc}

000216bc <myhtml_insertion_mode_in_cell@@Base>:
   216bc:	ldr	r3, [r1, #48]	; 0x30
   216c0:	push	{r4, r5, r6, lr}
   216c4:	tst	r3, #1
   216c8:	mov	r4, r1
   216cc:	mov	r5, r0
   216d0:	beq	218ac <myhtml_insertion_mode_in_cell@@Base+0x1f0>
   216d4:	ldr	r1, [r1]
   216d8:	sub	r3, r1, #23
   216dc:	cmp	r3, #112	; 0x70
   216e0:	addls	pc, pc, r3, lsl #2
   216e4:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   216e8:	b	21958 <myhtml_insertion_mode_in_cell@@Base+0x29c>
   216ec:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   216f0:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   216f4:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   216f8:	b	21958 <myhtml_insertion_mode_in_cell@@Base+0x29c>
   216fc:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21700:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21704:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21708:	b	21958 <myhtml_insertion_mode_in_cell@@Base+0x29c>
   2170c:	b	21958 <myhtml_insertion_mode_in_cell@@Base+0x29c>
   21710:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21714:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21718:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2171c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21720:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21724:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21728:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2172c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21730:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21734:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21738:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2173c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21740:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21744:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21748:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2174c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21750:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21754:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21758:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2175c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21760:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21764:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21768:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2176c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21770:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21774:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21778:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2177c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21780:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21784:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21788:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2178c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21790:	b	21958 <myhtml_insertion_mode_in_cell@@Base+0x29c>
   21794:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21798:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2179c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217a0:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217a4:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217a8:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217ac:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217b0:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217b4:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217b8:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217bc:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217c0:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217c4:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217c8:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217cc:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217d0:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217d4:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217d8:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217dc:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217e0:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217e4:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217e8:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217ec:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217f0:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217f4:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217f8:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217fc:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21800:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21804:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21808:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2180c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21810:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21814:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21818:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2181c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21820:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21824:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21828:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2182c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21830:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21834:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21838:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2183c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21840:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21844:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21848:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2184c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21850:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21854:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21858:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2185c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21860:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21864:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21868:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2186c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21870:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21874:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21878:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2187c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21880:	b	219c0 <myhtml_insertion_mode_in_cell@@Base+0x304>
   21884:	b	219c0 <myhtml_insertion_mode_in_cell@@Base+0x304>
   21888:	b	21960 <myhtml_insertion_mode_in_cell@@Base+0x2a4>
   2188c:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21890:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21894:	b	219c0 <myhtml_insertion_mode_in_cell@@Base+0x304>
   21898:	b	21960 <myhtml_insertion_mode_in_cell@@Base+0x2a4>
   2189c:	b	219c0 <myhtml_insertion_mode_in_cell@@Base+0x304>
   218a0:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   218a4:	b	21a04 <myhtml_insertion_mode_in_cell@@Base+0x348>
   218a8:	b	219c0 <myhtml_insertion_mode_in_cell@@Base+0x304>
   218ac:	ldr	r3, [r1]
   218b0:	cmp	r3, #127	; 0x7f
   218b4:	bhi	218e8 <myhtml_insertion_mode_in_cell@@Base+0x22c>
   218b8:	cmp	r3, #126	; 0x7e
   218bc:	bcs	21900 <myhtml_insertion_mode_in_cell@@Base+0x244>
   218c0:	cmp	r3, #27
   218c4:	beq	21900 <myhtml_insertion_mode_in_cell@@Base+0x244>
   218c8:	bcc	218d8 <myhtml_insertion_mode_in_cell@@Base+0x21c>
   218cc:	sub	r3, r3, #31
   218d0:	cmp	r3, #1
   218d4:	bls	21900 <myhtml_insertion_mode_in_cell@@Base+0x244>
   218d8:	mov	r1, r4
   218dc:	mov	r0, r5
   218e0:	pop	{r4, r5, r6, lr}
   218e4:	b	10640 <myhtml_insertion_mode_in_body@plt>
   218e8:	cmp	r3, #130	; 0x82
   218ec:	bcc	218d8 <myhtml_insertion_mode_in_cell@@Base+0x21c>
   218f0:	cmp	r3, #132	; 0x84
   218f4:	bls	21900 <myhtml_insertion_mode_in_cell@@Base+0x244>
   218f8:	cmp	r3, #135	; 0x87
   218fc:	bne	218d8 <myhtml_insertion_mode_in_cell@@Base+0x21c>
   21900:	mov	r3, #64	; 0x40
   21904:	mov	r2, #1
   21908:	mov	r1, #127	; 0x7f
   2190c:	mov	r0, r5
   21910:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21914:	mov	r3, #64	; 0x40
   21918:	mov	r2, #1
   2191c:	mov	r1, #131	; 0x83
   21920:	mov	r6, r0
   21924:	mov	r0, r5
   21928:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   2192c:	cmp	r6, #0
   21930:	cmpeq	r0, #0
   21934:	beq	21958 <myhtml_insertion_mode_in_cell@@Base+0x29c>
   21938:	cmp	r6, #0
   2193c:	moveq	r1, r0
   21940:	mov	r2, r4
   21944:	mov	r0, r5
   21948:	movne	r1, r6
   2194c:	bl	10d3c <myhtml_tree_close_cell@plt>
   21950:	mov	r0, #1
   21954:	pop	{r4, r5, r6, pc}
   21958:	mov	r0, #0
   2195c:	pop	{r4, r5, r6, pc}
   21960:	mov	r3, #64	; 0x40
   21964:	mov	r2, #1
   21968:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   2196c:	cmp	r0, #0
   21970:	beq	21958 <myhtml_insertion_mode_in_cell@@Base+0x29c>
   21974:	mov	r2, #0
   21978:	mov	r1, r2
   2197c:	mov	r0, r5
   21980:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   21984:	mov	r0, r5
   21988:	bl	10628 <myhtml_tree_current_node@plt>
   2198c:	ldr	r1, [r4]
   21990:	bl	10aa8 <myhtml_is_html_node@plt>
   21994:	ldr	r1, [r4]
   21998:	mov	r3, #0
   2199c:	mov	r2, #1
   219a0:	mov	r0, r5
   219a4:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   219a8:	mov	r0, r5
   219ac:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   219b0:	mov	r3, #13
   219b4:	str	r3, [r5, #168]	; 0xa8
   219b8:	mov	r0, #0
   219bc:	pop	{r4, r5, r6, pc}
   219c0:	mov	r3, #64	; 0x40
   219c4:	mov	r2, #1
   219c8:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   219cc:	cmp	r0, #0
   219d0:	beq	21958 <myhtml_insertion_mode_in_cell@@Base+0x29c>
   219d4:	mov	r1, #127	; 0x7f
   219d8:	mov	r3, #64	; 0x40
   219dc:	mov	r2, #1
   219e0:	mov	r0, r5
   219e4:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   219e8:	subs	r1, r0, #0
   219ec:	beq	21a10 <myhtml_insertion_mode_in_cell@@Base+0x354>
   219f0:	mov	r0, r5
   219f4:	mov	r2, r4
   219f8:	bl	10d3c <myhtml_tree_close_cell@plt>
   219fc:	mov	r0, #1
   21a00:	pop	{r4, r5, r6, pc}
   21a04:	mov	r1, r4
   21a08:	pop	{r4, r5, r6, lr}
   21a0c:	b	10178 <myhtml_insertion_mode_in_table@plt>
   21a10:	mov	r1, #131	; 0x83
   21a14:	mov	r3, #64	; 0x40
   21a18:	mov	r2, #1
   21a1c:	mov	r0, r5
   21a20:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21a24:	subs	r1, r0, #0
   21a28:	bne	219f0 <myhtml_insertion_mode_in_cell@@Base+0x334>
   21a2c:	mov	r0, #1
   21a30:	pop	{r4, r5, r6, pc}

00021a34 <myhtml_insertion_mode_in_select@@Base>:
   21a34:	ldr	r2, [r1, #48]	; 0x30
   21a38:	push	{r4, r5, r6, lr}
   21a3c:	ands	r4, r2, #1
   21a40:	mov	r5, r1
   21a44:	mov	r6, r0
   21a48:	ldr	r3, [r1]
   21a4c:	beq	21ae4 <myhtml_insertion_mode_in_select@@Base+0xb0>
   21a50:	sub	r3, r3, #96	; 0x60
   21a54:	cmp	r3, #32
   21a58:	addls	pc, pc, r3, lsl #2
   21a5c:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21a60:	b	21b88 <myhtml_insertion_mode_in_select@@Base+0x154>
   21a64:	b	21bfc <myhtml_insertion_mode_in_select@@Base+0x1c8>
   21a68:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21a6c:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21a70:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21a74:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21a78:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21a7c:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21a80:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21a84:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21a88:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21a8c:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21a90:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21a94:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21a98:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21a9c:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21aa0:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21aa4:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21aa8:	b	21c14 <myhtml_insertion_mode_in_select@@Base+0x1e0>
   21aac:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21ab0:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21ab4:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21ab8:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21abc:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21ac0:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21ac4:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21ac8:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21acc:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21ad0:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21ad4:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21ad8:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21adc:	b	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21ae0:	b	21b78 <myhtml_insertion_mode_in_select@@Base+0x144>
   21ae4:	cmp	r3, #96	; 0x60
   21ae8:	beq	21c48 <myhtml_insertion_mode_in_select@@Base+0x214>
   21aec:	bls	21b44 <myhtml_insertion_mode_in_select@@Base+0x110>
   21af0:	cmp	r3, #114	; 0x72
   21af4:	beq	21c84 <myhtml_insertion_mode_in_select@@Base+0x250>
   21af8:	bls	21cb8 <myhtml_insertion_mode_in_select@@Base+0x284>
   21afc:	cmp	r3, #129	; 0x81
   21b00:	beq	21cf0 <myhtml_insertion_mode_in_select@@Base+0x2bc>
   21b04:	cmp	r3, #251	; 0xfb
   21b08:	bne	21d50 <myhtml_insertion_mode_in_select@@Base+0x31c>
   21b0c:	pop	{r4, r5, r6, lr}
   21b10:	b	10640 <myhtml_insertion_mode_in_body@plt>
   21b14:	ldr	r3, [r1, #48]	; 0x30
   21b18:	tst	r3, #2048	; 0x800
   21b1c:	beq	21b30 <myhtml_insertion_mode_in_select@@Base+0xfc>
   21b20:	bl	107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   21b24:	ldr	r3, [r5, #12]
   21b28:	cmp	r3, #0
   21b2c:	beq	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21b30:	mov	r1, r5
   21b34:	mov	r0, r6
   21b38:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   21b3c:	mov	r0, #0
   21b40:	pop	{r4, r5, r6, pc}
   21b44:	cmp	r3, #65	; 0x41
   21b48:	beq	21b0c <myhtml_insertion_mode_in_select@@Base+0xd8>
   21b4c:	bhi	21ce0 <myhtml_insertion_mode_in_select@@Base+0x2ac>
   21b50:	cmp	r3, #1
   21b54:	beq	21b14 <myhtml_insertion_mode_in_select@@Base+0xe0>
   21b58:	cmp	r3, #2
   21b5c:	bne	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21b60:	mov	r2, r4
   21b64:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   21b68:	mov	r0, r4
   21b6c:	pop	{r4, r5, r6, pc}
   21b70:	cmp	r3, #112	; 0x70
   21b74:	bne	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21b78:	mov	r1, r5
   21b7c:	mov	r0, r6
   21b80:	pop	{r4, r5, r6, lr}
   21b84:	b	10058 <myhtml_insertion_mode_in_head@plt>
   21b88:	bl	10628 <myhtml_tree_current_node@plt>
   21b8c:	mov	r1, #97	; 0x61
   21b90:	bl	10aa8 <myhtml_is_html_node@plt>
   21b94:	cmp	r0, #0
   21b98:	beq	21bd4 <myhtml_insertion_mode_in_select@@Base+0x1a0>
   21b9c:	ldr	r3, [r6, #128]	; 0x80
   21ba0:	ldr	r2, [r3, #4]
   21ba4:	cmp	r2, #1
   21ba8:	bls	21bd4 <myhtml_insertion_mode_in_select@@Base+0x1a0>
   21bac:	ldr	r2, [r3, #4]
   21bb0:	ldr	r0, [r3]
   21bb4:	sub	r3, r2, #-1073741822	; 0xc0000002
   21bb8:	mov	r1, #96	; 0x60
   21bbc:	ldr	r0, [r0, r3, lsl #2]
   21bc0:	bl	10aa8 <myhtml_is_html_node@plt>
   21bc4:	cmp	r0, #0
   21bc8:	beq	21bd4 <myhtml_insertion_mode_in_select@@Base+0x1a0>
   21bcc:	mov	r0, r6
   21bd0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21bd4:	mov	r0, r6
   21bd8:	bl	10628 <myhtml_tree_current_node@plt>
   21bdc:	mov	r1, #96	; 0x60
   21be0:	bl	10aa8 <myhtml_is_html_node@plt>
   21be4:	cmp	r0, #0
   21be8:	beq	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21bec:	mov	r0, r6
   21bf0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21bf4:	mov	r0, #0
   21bf8:	pop	{r4, r5, r6, pc}
   21bfc:	bl	10628 <myhtml_tree_current_node@plt>
   21c00:	mov	r1, #97	; 0x61
   21c04:	bl	10aa8 <myhtml_is_html_node@plt>
   21c08:	cmp	r0, #0
   21c0c:	beq	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21c10:	b	21bec <myhtml_insertion_mode_in_select@@Base+0x1b8>
   21c14:	mov	r1, #114	; 0x72
   21c18:	mov	r3, #128	; 0x80
   21c1c:	mov	r2, #1
   21c20:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21c24:	subs	r1, r0, #0
   21c28:	beq	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21c2c:	mov	r2, #0
   21c30:	mov	r0, r6
   21c34:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   21c38:	mov	r0, r6
   21c3c:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21c40:	mov	r0, #0
   21c44:	pop	{r4, r5, r6, pc}
   21c48:	bl	10628 <myhtml_tree_current_node@plt>
   21c4c:	ldr	r3, [r0, #4]
   21c50:	cmp	r3, #97	; 0x61
   21c54:	beq	21d38 <myhtml_insertion_mode_in_select@@Base+0x304>
   21c58:	mov	r0, r6
   21c5c:	bl	10628 <myhtml_tree_current_node@plt>
   21c60:	ldr	r3, [r5]
   21c64:	ldr	r2, [r0, #4]
   21c68:	cmp	r2, r3
   21c6c:	beq	21d28 <myhtml_insertion_mode_in_select@@Base+0x2f4>
   21c70:	mov	r1, r5
   21c74:	mov	r0, r6
   21c78:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   21c7c:	mov	r0, #0
   21c80:	pop	{r4, r5, r6, pc}
   21c84:	mov	r1, r3
   21c88:	mov	r2, #1
   21c8c:	mov	r3, #128	; 0x80
   21c90:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21c94:	subs	r1, r0, #0
   21c98:	beq	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21c9c:	mov	r2, r4
   21ca0:	mov	r0, r6
   21ca4:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   21ca8:	mov	r0, r6
   21cac:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21cb0:	mov	r0, r4
   21cb4:	pop	{r4, r5, r6, pc}
   21cb8:	cmp	r3, #97	; 0x61
   21cbc:	bne	21b70 <myhtml_insertion_mode_in_select@@Base+0x13c>
   21cc0:	bl	10628 <myhtml_tree_current_node@plt>
   21cc4:	ldr	r1, [r5]
   21cc8:	bl	10aa8 <myhtml_is_html_node@plt>
   21ccc:	cmp	r0, #0
   21cd0:	beq	21c70 <myhtml_insertion_mode_in_select@@Base+0x23c>
   21cd4:	mov	r0, r6
   21cd8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21cdc:	b	21c70 <myhtml_insertion_mode_in_select@@Base+0x23c>
   21ce0:	cmp	r3, #70	; 0x46
   21ce4:	beq	21cf0 <myhtml_insertion_mode_in_select@@Base+0x2bc>
   21ce8:	cmp	r3, #74	; 0x4a
   21cec:	bne	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21cf0:	mov	r1, #114	; 0x72
   21cf4:	mov	r3, #128	; 0x80
   21cf8:	mov	r2, #1
   21cfc:	mov	r0, r6
   21d00:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21d04:	subs	r1, r0, #0
   21d08:	beq	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21d0c:	mov	r2, #0
   21d10:	mov	r0, r6
   21d14:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   21d18:	mov	r0, r6
   21d1c:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21d20:	mov	r0, #1
   21d24:	pop	{r4, r5, r6, pc}
   21d28:	ldr	r3, [r0, #8]
   21d2c:	cmp	r3, #1
   21d30:	bne	21c70 <myhtml_insertion_mode_in_select@@Base+0x23c>
   21d34:	b	21cd4 <myhtml_insertion_mode_in_select@@Base+0x2a0>
   21d38:	ldr	r3, [r0, #8]
   21d3c:	cmp	r3, #1
   21d40:	bne	21c58 <myhtml_insertion_mode_in_select@@Base+0x224>
   21d44:	mov	r0, r6
   21d48:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21d4c:	b	21c58 <myhtml_insertion_mode_in_select@@Base+0x224>
   21d50:	cmp	r3, #128	; 0x80
   21d54:	bne	21b3c <myhtml_insertion_mode_in_select@@Base+0x108>
   21d58:	b	21b78 <myhtml_insertion_mode_in_select@@Base+0x144>

00021d5c <myhtml_insertion_mode_in_select_in_table@@Base>:
   21d5c:	ldr	r3, [r1, #48]	; 0x30
   21d60:	push	{r4, lr}
   21d64:	tst	r3, #1
   21d68:	mov	r4, r0
   21d6c:	ldr	r3, [r1]
   21d70:	beq	21dd4 <myhtml_insertion_mode_in_select_in_table@@Base+0x78>
   21d74:	cmp	r3, #127	; 0x7f
   21d78:	bls	21e14 <myhtml_insertion_mode_in_select_in_table@@Base+0xb8>
   21d7c:	cmp	r3, #130	; 0x82
   21d80:	bcc	21dec <myhtml_insertion_mode_in_select_in_table@@Base+0x90>
   21d84:	cmp	r3, #132	; 0x84
   21d88:	bls	21d94 <myhtml_insertion_mode_in_select_in_table@@Base+0x38>
   21d8c:	cmp	r3, #135	; 0x87
   21d90:	bne	21dec <myhtml_insertion_mode_in_select_in_table@@Base+0x90>
   21d94:	mov	r1, r3
   21d98:	mov	r2, #1
   21d9c:	mov	r3, #64	; 0x40
   21da0:	mov	r0, r4
   21da4:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21da8:	cmp	r0, #0
   21dac:	beq	21e30 <myhtml_insertion_mode_in_select_in_table@@Base+0xd4>
   21db0:	mov	r3, #0
   21db4:	mov	r2, #1
   21db8:	mov	r1, #114	; 0x72
   21dbc:	mov	r0, r4
   21dc0:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   21dc4:	mov	r0, r4
   21dc8:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21dcc:	mov	r0, #1
   21dd0:	pop	{r4, pc}
   21dd4:	cmp	r3, #127	; 0x7f
   21dd8:	bhi	21df8 <myhtml_insertion_mode_in_select_in_table@@Base+0x9c>
   21ddc:	cmp	r3, #125	; 0x7d
   21de0:	bcs	21db0 <myhtml_insertion_mode_in_select_in_table@@Base+0x54>
   21de4:	cmp	r3, #27
   21de8:	beq	21db0 <myhtml_insertion_mode_in_select_in_table@@Base+0x54>
   21dec:	mov	r0, r4
   21df0:	pop	{r4, lr}
   21df4:	b	103c4 <myhtml_insertion_mode_in_select@plt>
   21df8:	cmp	r3, #130	; 0x82
   21dfc:	bcc	21dec <myhtml_insertion_mode_in_select_in_table@@Base+0x90>
   21e00:	cmp	r3, #132	; 0x84
   21e04:	bls	21db0 <myhtml_insertion_mode_in_select_in_table@@Base+0x54>
   21e08:	cmp	r3, #135	; 0x87
   21e0c:	bne	21dec <myhtml_insertion_mode_in_select_in_table@@Base+0x90>
   21e10:	b	21db0 <myhtml_insertion_mode_in_select_in_table@@Base+0x54>
   21e14:	cmp	r3, #125	; 0x7d
   21e18:	bcs	21d94 <myhtml_insertion_mode_in_select_in_table@@Base+0x38>
   21e1c:	cmp	r3, #27
   21e20:	beq	21d94 <myhtml_insertion_mode_in_select_in_table@@Base+0x38>
   21e24:	mov	r0, r4
   21e28:	pop	{r4, lr}
   21e2c:	b	103c4 <myhtml_insertion_mode_in_select@plt>
   21e30:	pop	{r4, pc}

00021e34 <myhtml_insertion_mode_after_body@@Base>:
   21e34:	ldr	r2, [r1, #48]	; 0x30
   21e38:	push	{r4, r5, r6, lr}
   21e3c:	ands	r4, r2, #1
   21e40:	sub	sp, sp, #8
   21e44:	mov	r3, r1
   21e48:	mov	ip, r0
   21e4c:	beq	21e7c <myhtml_insertion_mode_after_body@@Base+0x48>
   21e50:	ldr	r3, [r1]
   21e54:	cmp	r3, #65	; 0x41
   21e58:	bne	21ee8 <myhtml_insertion_mode_after_body@@Base+0xb4>
   21e5c:	ldr	r0, [r0, #88]	; 0x58
   21e60:	cmp	r0, #0
   21e64:	moveq	r3, #21
   21e68:	streq	r3, [ip, #168]	; 0xa8
   21e6c:	beq	21e74 <myhtml_insertion_mode_after_body@@Base+0x40>
   21e70:	mov	r0, #0
   21e74:	add	sp, sp, #8
   21e78:	pop	{r4, r5, r6, pc}
   21e7c:	ldr	r5, [r1]
   21e80:	cmp	r5, #3
   21e84:	beq	21e70 <myhtml_insertion_mode_after_body@@Base+0x3c>
   21e88:	bhi	21efc <myhtml_insertion_mode_after_body@@Base+0xc8>
   21e8c:	cmp	r5, #1
   21e90:	beq	21f24 <myhtml_insertion_mode_after_body@@Base+0xf0>
   21e94:	cmp	r5, #2
   21e98:	bne	21ee8 <myhtml_insertion_mode_after_body@@Base+0xb4>
   21e9c:	ldr	r1, [r0, #128]	; 0x80
   21ea0:	ldr	r2, [r1, #4]
   21ea4:	cmp	r2, #0
   21ea8:	moveq	r0, r2
   21eac:	beq	21e74 <myhtml_insertion_mode_after_body@@Base+0x40>
   21eb0:	ldr	r2, [r1]
   21eb4:	str	r3, [sp, #4]
   21eb8:	ldr	r6, [r2]
   21ebc:	bl	ffe0 <myhtml_tree_node_create@plt>
   21ec0:	ldr	r3, [sp, #4]
   21ec4:	ldr	r2, [r6, #8]
   21ec8:	mov	r1, r0
   21ecc:	str	r5, [r0, #4]
   21ed0:	str	r3, [r0, #32]
   21ed4:	str	r2, [r0, #8]
   21ed8:	mov	r0, r6
   21edc:	bl	106b8 <myhtml_tree_node_add_child@plt>
   21ee0:	mov	r0, r4
   21ee4:	b	21e74 <myhtml_insertion_mode_after_body@@Base+0x40>
   21ee8:	mov	r3, #6
   21eec:	mov	r0, #1
   21ef0:	str	r3, [ip, #168]	; 0xa8
   21ef4:	add	sp, sp, #8
   21ef8:	pop	{r4, r5, r6, pc}
   21efc:	cmp	r5, #65	; 0x41
   21f00:	beq	21f18 <myhtml_insertion_mode_after_body@@Base+0xe4>
   21f04:	cmp	r5, #251	; 0xfb
   21f08:	bne	21ee8 <myhtml_insertion_mode_after_body@@Base+0xb4>
   21f0c:	bl	10310 <myhtml_rules_stop_parsing@plt>
   21f10:	mov	r0, r4
   21f14:	b	21e74 <myhtml_insertion_mode_after_body@@Base+0x40>
   21f18:	add	sp, sp, #8
   21f1c:	pop	{r4, r5, r6, lr}
   21f20:	b	10640 <myhtml_insertion_mode_in_body@plt>
   21f24:	ldr	r3, [r1, #48]	; 0x30
   21f28:	tst	r3, #8
   21f2c:	bne	21f18 <myhtml_insertion_mode_after_body@@Base+0xe4>
   21f30:	mov	r3, #6
   21f34:	mov	r0, r5
   21f38:	str	r3, [ip, #168]	; 0xa8
   21f3c:	b	21e74 <myhtml_insertion_mode_after_body@@Base+0x40>

00021f40 <myhtml_insertion_mode_in_frameset@@Base>:
   21f40:	ldr	r2, [r1, #48]	; 0x30
   21f44:	push	{r4, r5, r6, lr}
   21f48:	ands	r4, r2, #1
   21f4c:	mov	r5, r1
   21f50:	mov	r6, r0
   21f54:	ldr	r3, [r1]
   21f58:	beq	21f6c <myhtml_insertion_mode_in_frameset@@Base+0x2c>
   21f5c:	cmp	r3, #54	; 0x36
   21f60:	beq	21fec <myhtml_insertion_mode_in_frameset@@Base+0xac>
   21f64:	mov	r0, #0
   21f68:	pop	{r4, r5, r6, pc}
   21f6c:	cmp	r3, #54	; 0x36
   21f70:	beq	22050 <myhtml_insertion_mode_in_frameset@@Base+0x110>
   21f74:	bhi	21fcc <myhtml_insertion_mode_in_frameset@@Base+0x8c>
   21f78:	cmp	r3, #2
   21f7c:	beq	22038 <myhtml_insertion_mode_in_frameset@@Base+0xf8>
   21f80:	cmp	r3, #53	; 0x35
   21f84:	beq	22070 <myhtml_insertion_mode_in_frameset@@Base+0x130>
   21f88:	cmp	r3, #1
   21f8c:	bne	21f64 <myhtml_insertion_mode_in_frameset@@Base+0x24>
   21f90:	ldr	r3, [r1, #48]	; 0x30
   21f94:	tst	r3, #8
   21f98:	bne	21fb8 <myhtml_insertion_mode_in_frameset@@Base+0x78>
   21f9c:	ldr	r0, [r0, #8]
   21fa0:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   21fa4:	add	r0, r5, #4
   21fa8:	bl	102ec <mycore_string_stay_only_whitespace@plt>
   21fac:	ldr	r3, [r5, #12]
   21fb0:	cmp	r3, #0
   21fb4:	beq	21f64 <myhtml_insertion_mode_in_frameset@@Base+0x24>
   21fb8:	mov	r1, r5
   21fbc:	mov	r0, r6
   21fc0:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   21fc4:	mov	r0, #0
   21fc8:	pop	{r4, r5, r6, pc}
   21fcc:	cmp	r3, #92	; 0x5c
   21fd0:	beq	22048 <myhtml_insertion_mode_in_frameset@@Base+0x108>
   21fd4:	cmp	r3, #251	; 0xfb
   21fd8:	beq	2205c <myhtml_insertion_mode_in_frameset@@Base+0x11c>
   21fdc:	cmp	r3, #65	; 0x41
   21fe0:	bne	21f64 <myhtml_insertion_mode_in_frameset@@Base+0x24>
   21fe4:	pop	{r4, r5, r6, lr}
   21fe8:	b	10640 <myhtml_insertion_mode_in_body@plt>
   21fec:	bl	10628 <myhtml_tree_current_node@plt>
   21ff0:	ldr	r3, [r6, #84]	; 0x54
   21ff4:	ldr	r3, [r3, #20]
   21ff8:	cmp	r3, r0
   21ffc:	beq	21f64 <myhtml_insertion_mode_in_frameset@@Base+0x24>
   22000:	mov	r0, r6
   22004:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   22008:	mov	r0, r6
   2200c:	bl	10628 <myhtml_tree_current_node@plt>
   22010:	ldr	r3, [r6, #88]	; 0x58
   22014:	cmp	r3, #0
   22018:	bne	21f64 <myhtml_insertion_mode_in_frameset@@Base+0x24>
   2201c:	ldr	r3, [r0, #4]
   22020:	cmp	r3, #54	; 0x36
   22024:	beq	22084 <myhtml_insertion_mode_in_frameset@@Base+0x144>
   22028:	mov	r3, #20
   2202c:	str	r3, [r6, #168]	; 0xa8
   22030:	mov	r0, #0
   22034:	pop	{r4, r5, r6, pc}
   22038:	mov	r2, r4
   2203c:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   22040:	mov	r0, r4
   22044:	pop	{r4, r5, r6, pc}
   22048:	pop	{r4, r5, r6, lr}
   2204c:	b	10058 <myhtml_insertion_mode_in_head@plt>
   22050:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   22054:	mov	r0, r4
   22058:	pop	{r4, r5, r6, pc}
   2205c:	bl	10628 <myhtml_tree_current_node@plt>
   22060:	mov	r0, r6
   22064:	bl	10310 <myhtml_rules_stop_parsing@plt>
   22068:	mov	r0, r4
   2206c:	pop	{r4, r5, r6, pc}
   22070:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   22074:	mov	r0, r6
   22078:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2207c:	mov	r0, r4
   22080:	pop	{r4, r5, r6, pc}
   22084:	ldr	r3, [r0, #8]
   22088:	cmp	r3, #1
   2208c:	bne	22028 <myhtml_insertion_mode_in_frameset@@Base+0xe8>
   22090:	b	21f64 <myhtml_insertion_mode_in_frameset@@Base+0x24>

00022094 <myhtml_insertion_mode_after_frameset@@Base>:
   22094:	ldr	r2, [r1, #48]	; 0x30
   22098:	push	{r4, r5, r6, lr}
   2209c:	ands	r4, r2, #1
   220a0:	mov	r5, r1
   220a4:	mov	r6, r0
   220a8:	beq	220c4 <myhtml_insertion_mode_after_frameset@@Base+0x30>
   220ac:	ldr	r3, [r1]
   220b0:	cmp	r3, #65	; 0x41
   220b4:	moveq	r3, #22
   220b8:	streq	r3, [r0, #168]	; 0xa8
   220bc:	mov	r0, #0
   220c0:	pop	{r4, r5, r6, pc}
   220c4:	ldr	r2, [r1]
   220c8:	cmp	r2, #65	; 0x41
   220cc:	beq	2214c <myhtml_insertion_mode_after_frameset@@Base+0xb8>
   220d0:	bhi	220f4 <myhtml_insertion_mode_after_frameset@@Base+0x60>
   220d4:	cmp	r2, #1
   220d8:	beq	22110 <myhtml_insertion_mode_after_frameset@@Base+0x7c>
   220dc:	cmp	r2, #2
   220e0:	bne	220bc <myhtml_insertion_mode_after_frameset@@Base+0x28>
   220e4:	mov	r2, r4
   220e8:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   220ec:	mov	r0, r4
   220f0:	pop	{r4, r5, r6, pc}
   220f4:	cmp	r2, #92	; 0x5c
   220f8:	beq	22154 <myhtml_insertion_mode_after_frameset@@Base+0xc0>
   220fc:	cmp	r2, #251	; 0xfb
   22100:	bne	220bc <myhtml_insertion_mode_after_frameset@@Base+0x28>
   22104:	bl	10310 <myhtml_rules_stop_parsing@plt>
   22108:	mov	r0, r4
   2210c:	pop	{r4, r5, r6, pc}
   22110:	ldr	r3, [r1, #48]	; 0x30
   22114:	tst	r3, #8
   22118:	bne	22138 <myhtml_insertion_mode_after_frameset@@Base+0xa4>
   2211c:	ldr	r0, [r0, #8]
   22120:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   22124:	add	r0, r5, #4
   22128:	bl	102ec <mycore_string_stay_only_whitespace@plt>
   2212c:	ldr	r2, [r5, #12]
   22130:	cmp	r2, #0
   22134:	beq	220bc <myhtml_insertion_mode_after_frameset@@Base+0x28>
   22138:	mov	r1, r5
   2213c:	mov	r0, r6
   22140:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   22144:	mov	r0, #0
   22148:	pop	{r4, r5, r6, pc}
   2214c:	pop	{r4, r5, r6, lr}
   22150:	b	10640 <myhtml_insertion_mode_in_body@plt>
   22154:	pop	{r4, r5, r6, lr}
   22158:	b	10058 <myhtml_insertion_mode_in_head@plt>

0002215c <myhtml_insertion_mode_after_after_body@@Base>:
   2215c:	ldr	r3, [r1, #48]	; 0x30
   22160:	push	{r4, r5, r6, r7, r8, lr}
   22164:	ands	r4, r3, #1
   22168:	mov	ip, r0
   2216c:	bne	221f0 <myhtml_insertion_mode_after_after_body@@Base+0x94>
   22170:	ldr	r5, [r1]
   22174:	mov	r2, r1
   22178:	cmp	r5, #3
   2217c:	beq	22200 <myhtml_insertion_mode_after_after_body@@Base+0xa4>
   22180:	mov	r3, r0
   22184:	mov	r6, r1
   22188:	bhi	221c8 <myhtml_insertion_mode_after_after_body@@Base+0x6c>
   2218c:	cmp	r5, #1
   22190:	beq	221e4 <myhtml_insertion_mode_after_after_body@@Base+0x88>
   22194:	cmp	r5, #2
   22198:	bne	22210 <myhtml_insertion_mode_after_after_body@@Base+0xb4>
   2219c:	ldr	r7, [r0, #84]	; 0x54
   221a0:	bl	ffe0 <myhtml_tree_node_create@plt>
   221a4:	ldr	r3, [r7, #8]
   221a8:	mov	r1, r0
   221ac:	str	r5, [r0, #4]
   221b0:	str	r6, [r0, #32]
   221b4:	str	r3, [r0, #8]
   221b8:	mov	r0, r7
   221bc:	bl	106b8 <myhtml_tree_node_add_child@plt>
   221c0:	mov	r0, r4
   221c4:	pop	{r4, r5, r6, r7, r8, pc}
   221c8:	cmp	r5, #65	; 0x41
   221cc:	beq	22200 <myhtml_insertion_mode_after_after_body@@Base+0xa4>
   221d0:	cmp	r5, #251	; 0xfb
   221d4:	bne	22210 <myhtml_insertion_mode_after_after_body@@Base+0xb4>
   221d8:	bl	10310 <myhtml_rules_stop_parsing@plt>
   221dc:	mov	r0, r4
   221e0:	pop	{r4, r5, r6, r7, r8, pc}
   221e4:	ldr	r3, [r1, #48]	; 0x30
   221e8:	tst	r3, #8
   221ec:	bne	22208 <myhtml_insertion_mode_after_after_body@@Base+0xac>
   221f0:	mov	r3, #6
   221f4:	str	r3, [ip, #168]	; 0xa8
   221f8:	mov	r0, #1
   221fc:	pop	{r4, r5, r6, r7, r8, pc}
   22200:	mov	r1, r2
   22204:	mov	r0, ip
   22208:	pop	{r4, r5, r6, r7, r8, lr}
   2220c:	b	10640 <myhtml_insertion_mode_in_body@plt>
   22210:	mov	r2, #6
   22214:	mov	r0, #1
   22218:	str	r2, [r3, #168]	; 0xa8
   2221c:	pop	{r4, r5, r6, r7, r8, pc}

00022220 <myhtml_insertion_mode_after_after_frameset@@Base>:
   22220:	ldr	r3, [r1, #48]	; 0x30
   22224:	push	{r4, r5, r6, r7, r8, lr}
   22228:	ands	r4, r3, #1
   2222c:	bne	22274 <myhtml_insertion_mode_after_after_frameset@@Base+0x54>
   22230:	ldr	r5, [r1]
   22234:	mov	r2, r1
   22238:	cmp	r5, #3
   2223c:	mov	ip, r0
   22240:	beq	222dc <myhtml_insertion_mode_after_after_frameset@@Base+0xbc>
   22244:	mov	r7, r0
   22248:	mov	r6, r1
   2224c:	bls	2227c <myhtml_insertion_mode_after_after_frameset@@Base+0x5c>
   22250:	cmp	r5, #92	; 0x5c
   22254:	beq	222ec <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   22258:	cmp	r5, #251	; 0xfb
   2225c:	bne	2226c <myhtml_insertion_mode_after_after_frameset@@Base+0x4c>
   22260:	bl	10310 <myhtml_rules_stop_parsing@plt>
   22264:	mov	r0, r4
   22268:	pop	{r4, r5, r6, r7, r8, pc}
   2226c:	cmp	r5, #65	; 0x41
   22270:	beq	222dc <myhtml_insertion_mode_after_after_frameset@@Base+0xbc>
   22274:	mov	r0, #0
   22278:	pop	{r4, r5, r6, r7, r8, pc}
   2227c:	cmp	r5, #1
   22280:	beq	222b8 <myhtml_insertion_mode_after_after_frameset@@Base+0x98>
   22284:	cmp	r5, #2
   22288:	bne	22274 <myhtml_insertion_mode_after_after_frameset@@Base+0x54>
   2228c:	ldr	r7, [r0, #84]	; 0x54
   22290:	bl	ffe0 <myhtml_tree_node_create@plt>
   22294:	ldr	r3, [r7, #8]
   22298:	mov	r1, r0
   2229c:	str	r5, [r0, #4]
   222a0:	str	r6, [r0, #32]
   222a4:	str	r3, [r0, #8]
   222a8:	mov	r0, r7
   222ac:	bl	106b8 <myhtml_tree_node_add_child@plt>
   222b0:	mov	r0, r4
   222b4:	pop	{r4, r5, r6, r7, r8, pc}
   222b8:	ldr	r3, [r1, #48]	; 0x30
   222bc:	tst	r3, #8
   222c0:	bne	222d4 <myhtml_insertion_mode_after_after_frameset@@Base+0xb4>
   222c4:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   222c8:	subs	r1, r0, #0
   222cc:	beq	22274 <myhtml_insertion_mode_after_after_frameset@@Base+0x54>
   222d0:	mov	r0, r7
   222d4:	pop	{r4, r5, r6, r7, r8, lr}
   222d8:	b	10640 <myhtml_insertion_mode_in_body@plt>
   222dc:	mov	r1, r2
   222e0:	mov	r0, ip
   222e4:	pop	{r4, r5, r6, r7, r8, lr}
   222e8:	b	10640 <myhtml_insertion_mode_in_body@plt>
   222ec:	pop	{r4, r5, r6, r7, r8, lr}
   222f0:	b	10058 <myhtml_insertion_mode_in_head@plt>

000222f4 <myhtml_rules_check_for_first_newline@@Base>:
   222f4:	ldr	r3, [r0, #180]	; 0xb4
   222f8:	ands	r3, r3, #64	; 0x40
   222fc:	beq	223b4 <myhtml_rules_check_for_first_newline@@Base+0xc0>
   22300:	ldr	r3, [r0, #180]	; 0xb4
   22304:	push	{r4, r5, lr}
   22308:	tst	r3, #128	; 0x80
   2230c:	sub	sp, sp, #12
   22310:	mov	r5, r0
   22314:	bne	22338 <myhtml_rules_check_for_first_newline@@Base+0x44>
   22318:	ldr	r3, [r5, #180]	; 0xb4
   2231c:	ldr	r2, [r5, #180]	; 0xb4
   22320:	and	r3, r3, #64	; 0x40
   22324:	mov	r0, #0
   22328:	eor	r3, r3, r2
   2232c:	str	r3, [r5, #180]	; 0xb4
   22330:	add	sp, sp, #12
   22334:	pop	{r4, r5, pc}
   22338:	ldr	r4, [r1]
   2233c:	cmp	r4, #1
   22340:	bne	22318 <myhtml_rules_check_for_first_newline@@Base+0x24>
   22344:	ldr	r0, [r0, #8]
   22348:	str	r1, [sp, #4]
   2234c:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   22350:	ldr	r2, [sp, #4]
   22354:	ldr	r3, [r2, #12]
   22358:	cmp	r3, #0
   2235c:	moveq	r0, r4
   22360:	beq	22330 <myhtml_rules_check_for_first_newline@@Base+0x3c>
   22364:	ldr	r0, [r2, #4]
   22368:	ldrb	r3, [r0]
   2236c:	cmp	r3, #10
   22370:	bne	22318 <myhtml_rules_check_for_first_newline@@Base+0x24>
   22374:	mov	r1, r4
   22378:	bl	10c64 <mchar_async_crop_first_chars_without_cache@plt>
   2237c:	ldr	r2, [sp, #4]
   22380:	ldr	r3, [r2, #12]
   22384:	sub	r3, r3, #1
   22388:	cmp	r3, #0
   2238c:	str	r3, [r2, #12]
   22390:	str	r0, [r2, #4]
   22394:	bne	22318 <myhtml_rules_check_for_first_newline@@Base+0x24>
   22398:	ldr	r3, [r5, #180]	; 0xb4
   2239c:	ldr	r2, [r5, #180]	; 0xb4
   223a0:	and	r3, r3, #64	; 0x40
   223a4:	eor	r3, r3, r2
   223a8:	mov	r0, r4
   223ac:	str	r3, [r5, #180]	; 0xb4
   223b0:	b	22330 <myhtml_rules_check_for_first_newline@@Base+0x3c>
   223b4:	mov	r0, r3
   223b8:	bx	lr

000223bc <myhtml_rules_tree_dispatcher@@Base>:
   223bc:	push	{r4, r5, r6, lr}
   223c0:	mov	r4, r0
   223c4:	mov	r5, r1
   223c8:	bl	10d60 <myhtml_rules_check_for_first_newline@plt>
   223cc:	cmp	r0, #0
   223d0:	bne	224dc <myhtml_rules_tree_dispatcher@@Base+0x120>
   223d4:	ldr	r3, [r4, #164]	; 0xa4
   223d8:	cmp	r3, #0
   223dc:	strne	r0, [r4, #164]	; 0xa4
   223e0:	mov	r0, r4
   223e4:	bl	10d48 <myhtml_tree_adjusted_current_node@plt>
   223e8:	ldr	r3, [r4, #128]	; 0x80
   223ec:	ldr	r3, [r3, #4]
   223f0:	cmp	r3, #0
   223f4:	mov	r6, r0
   223f8:	beq	224b4 <myhtml_rules_tree_dispatcher@@Base+0xf8>
   223fc:	ldr	r3, [r0, #8]
   22400:	cmp	r3, #1
   22404:	beq	224b4 <myhtml_rules_tree_dispatcher@@Base+0xf8>
   22408:	mov	r1, r0
   2240c:	mov	r0, r4
   22410:	bl	10040 <myhtml_tree_is_mathml_integration_point@plt>
   22414:	cmp	r0, #0
   22418:	beq	22440 <myhtml_rules_tree_dispatcher@@Base+0x84>
   2241c:	ldr	r3, [r5]
   22420:	cmp	r3, #1
   22424:	beq	22434 <myhtml_rules_tree_dispatcher@@Base+0x78>
   22428:	cmp	r3, #226	; 0xe2
   2242c:	cmpne	r3, #221	; 0xdd
   22430:	beq	22440 <myhtml_rules_tree_dispatcher@@Base+0x84>
   22434:	ldr	r3, [r5, #48]	; 0x30
   22438:	tst	r3, #1
   2243c:	beq	224b4 <myhtml_rules_tree_dispatcher@@Base+0xf8>
   22440:	ldr	r3, [r6, #4]
   22444:	cmp	r3, #8
   22448:	beq	22490 <myhtml_rules_tree_dispatcher@@Base+0xd4>
   2244c:	mov	r1, r6
   22450:	mov	r0, r4
   22454:	bl	101fc <myhtml_tree_is_html_integration_point@plt>
   22458:	cmp	r0, #0
   2245c:	beq	224e8 <myhtml_rules_tree_dispatcher@@Base+0x12c>
   22460:	ldr	r3, [r5, #48]	; 0x30
   22464:	tst	r3, #1
   22468:	beq	224b4 <myhtml_rules_tree_dispatcher@@Base+0xf8>
   2246c:	ldr	r3, [r5]
   22470:	cmp	r3, #1
   22474:	beq	224b4 <myhtml_rules_tree_dispatcher@@Base+0xf8>
   22478:	cmp	r3, #251	; 0xfb
   2247c:	beq	224b4 <myhtml_rules_tree_dispatcher@@Base+0xf8>
   22480:	mov	r1, r5
   22484:	mov	r0, r4
   22488:	bl	fe24 <myhtml_insertion_mode_in_foreign_content@plt>
   2248c:	b	224d0 <myhtml_rules_tree_dispatcher@@Base+0x114>
   22490:	ldr	r3, [r6, #8]
   22494:	cmp	r3, #2
   22498:	bne	2244c <myhtml_rules_tree_dispatcher@@Base+0x90>
   2249c:	ldr	r3, [r5]
   224a0:	cmp	r3, #124	; 0x7c
   224a4:	bne	2244c <myhtml_rules_tree_dispatcher@@Base+0x90>
   224a8:	ldr	r3, [r5, #48]	; 0x30
   224ac:	tst	r3, #1
   224b0:	bne	2244c <myhtml_rules_tree_dispatcher@@Base+0x90>
   224b4:	ldr	r3, [r4]
   224b8:	ldr	r2, [r4, #168]	; 0xa8
   224bc:	mov	r1, r5
   224c0:	ldr	r3, [r3, #28]
   224c4:	mov	r0, r4
   224c8:	ldr	r3, [r3, r2, lsl #2]
   224cc:	blx	r3
   224d0:	cmp	r0, #0
   224d4:	streq	r5, [r4, #152]	; 0x98
   224d8:	pop	{r4, r5, r6, pc}
   224dc:	str	r5, [r4, #152]	; 0x98
   224e0:	mov	r0, #0
   224e4:	pop	{r4, r5, r6, pc}
   224e8:	ldr	r3, [r5]
   224ec:	b	22478 <myhtml_rules_tree_dispatcher@@Base+0xbc>

000224f0 <myhtml_rules_init@@Base>:
   224f0:	push	{r4, lr}
   224f4:	mov	r4, r0
   224f8:	mov	r0, #92	; 0x5c
   224fc:	bl	10c94 <mycore_malloc@plt>
   22500:	ldr	r2, [pc, #308]	; 2263c <myhtml_rules_init@@Base+0x14c>
   22504:	add	r2, pc, r2
   22508:	cmp	r0, #0
   2250c:	str	r0, [r4, #28]
   22510:	beq	22634 <myhtml_rules_init@@Base+0x144>
   22514:	ldr	ip, [pc, #292]	; 22640 <myhtml_rules_init@@Base+0x150>
   22518:	ldr	r1, [pc, #292]	; 22644 <myhtml_rules_init@@Base+0x154>
   2251c:	mov	r3, r0
   22520:	ldr	lr, [r2, ip]
   22524:	ldr	r0, [pc, #284]	; 22648 <myhtml_rules_init@@Base+0x158>
   22528:	str	lr, [r3]
   2252c:	ldr	lr, [r2, r1]
   22530:	ldr	ip, [pc, #276]	; 2264c <myhtml_rules_init@@Base+0x15c>
   22534:	str	lr, [r3, #4]
   22538:	ldr	lr, [r2, r0]
   2253c:	ldr	r1, [pc, #268]	; 22650 <myhtml_rules_init@@Base+0x160>
   22540:	str	lr, [r3, #8]
   22544:	ldr	lr, [r2, ip]
   22548:	ldr	r0, [pc, #260]	; 22654 <myhtml_rules_init@@Base+0x164>
   2254c:	str	lr, [r3, #12]
   22550:	ldr	lr, [r2, r1]
   22554:	ldr	ip, [pc, #252]	; 22658 <myhtml_rules_init@@Base+0x168>
   22558:	str	lr, [r3, #16]
   2255c:	ldr	lr, [r2, r0]
   22560:	ldr	r1, [pc, #244]	; 2265c <myhtml_rules_init@@Base+0x16c>
   22564:	str	lr, [r3, #20]
   22568:	ldr	lr, [r2, ip]
   2256c:	ldr	r0, [pc, #236]	; 22660 <myhtml_rules_init@@Base+0x170>
   22570:	str	lr, [r3, #24]
   22574:	ldr	lr, [r2, r1]
   22578:	ldr	ip, [pc, #228]	; 22664 <myhtml_rules_init@@Base+0x174>
   2257c:	str	lr, [r3, #28]
   22580:	ldr	lr, [r2, r0]
   22584:	ldr	r1, [pc, #220]	; 22668 <myhtml_rules_init@@Base+0x178>
   22588:	str	lr, [r3, #32]
   2258c:	ldr	lr, [r2, ip]
   22590:	ldr	r0, [pc, #212]	; 2266c <myhtml_rules_init@@Base+0x17c>
   22594:	str	lr, [r3, #36]	; 0x24
   22598:	ldr	lr, [r2, r1]
   2259c:	ldr	ip, [pc, #204]	; 22670 <myhtml_rules_init@@Base+0x180>
   225a0:	str	lr, [r3, #40]	; 0x28
   225a4:	ldr	lr, [r2, r0]
   225a8:	ldr	r1, [pc, #196]	; 22674 <myhtml_rules_init@@Base+0x184>
   225ac:	str	lr, [r3, #44]	; 0x2c
   225b0:	ldr	lr, [r2, ip]
   225b4:	ldr	r0, [pc, #188]	; 22678 <myhtml_rules_init@@Base+0x188>
   225b8:	str	lr, [r3, #48]	; 0x30
   225bc:	ldr	lr, [r2, r1]
   225c0:	ldr	ip, [pc, #180]	; 2267c <myhtml_rules_init@@Base+0x18c>
   225c4:	str	lr, [r3, #52]	; 0x34
   225c8:	ldr	lr, [r2, r0]
   225cc:	ldr	r1, [pc, #172]	; 22680 <myhtml_rules_init@@Base+0x190>
   225d0:	str	lr, [r3, #56]	; 0x38
   225d4:	ldr	lr, [r2, ip]
   225d8:	ldr	r0, [pc, #164]	; 22684 <myhtml_rules_init@@Base+0x194>
   225dc:	str	lr, [r3, #60]	; 0x3c
   225e0:	ldr	lr, [r2, r1]
   225e4:	ldr	ip, [pc, #156]	; 22688 <myhtml_rules_init@@Base+0x198>
   225e8:	str	lr, [r3, #64]	; 0x40
   225ec:	ldr	lr, [r2, r0]
   225f0:	ldr	r1, [pc, #148]	; 2268c <myhtml_rules_init@@Base+0x19c>
   225f4:	str	lr, [r3, #68]	; 0x44
   225f8:	ldr	lr, [r2, ip]
   225fc:	ldr	r0, [pc, #140]	; 22690 <myhtml_rules_init@@Base+0x1a0>
   22600:	str	lr, [r3, #72]	; 0x48
   22604:	ldr	lr, [r2, r1]
   22608:	ldr	ip, [pc, #132]	; 22694 <myhtml_rules_init@@Base+0x1a4>
   2260c:	str	lr, [r3, #76]	; 0x4c
   22610:	ldr	lr, [r2, r0]
   22614:	ldr	r1, [pc, #124]	; 22698 <myhtml_rules_init@@Base+0x1a8>
   22618:	str	lr, [r3, #80]	; 0x50
   2261c:	ldr	ip, [r2, ip]
   22620:	mov	r0, #0
   22624:	str	ip, [r3, #84]	; 0x54
   22628:	ldr	r2, [r2, r1]
   2262c:	str	r2, [r3, #88]	; 0x58
   22630:	pop	{r4, pc}
   22634:	ldr	r0, [pc, #96]	; 2269c <myhtml_rules_init@@Base+0x1ac>
   22638:	pop	{r4, pc}
   2263c:	strdeq	r3, [pc], -r4
   22640:	andeq	r0, r0, r8, lsr #16
   22644:	andeq	r0, r0, r8, asr r9
   22648:	andeq	r0, r0, r4, ror #18
   2264c:	andeq	r0, r0, ip, lsr #15
   22650:	andeq	r0, r0, r0, lsl #18
   22654:	andeq	r0, r0, ip, lsr #18
   22658:	muleq	r0, r8, r8
   2265c:	andeq	r0, r0, r0, lsl #16
   22660:	ldrdeq	r0, [r0], -ip
   22664:	andeq	r0, r0, r4, ror #17
   22668:	andeq	r0, r0, r4, lsr #18
   2266c:	andeq	r0, r0, r4, lsl r9
   22670:	andeq	r0, r0, ip, lsl r9
   22674:	andeq	r0, r0, r8, lsr #15
   22678:	andeq	r0, r0, r8, lsr #19
   2267c:	andeq	r0, r0, r8, lsr r8
   22680:	muleq	r0, ip, r8
   22684:	andeq	r0, r0, r0, ror #14
   22688:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2268c:	andeq	r0, r0, r4, ror r9
   22690:	andeq	r0, r0, r4, lsr #14
   22694:	andeq	r0, r0, r0, lsr #14
   22698:	andeq	r0, r0, r0, lsr #16
   2269c:	andeq	r9, r0, r4, rrx
   226a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   226a4:	subs	r5, r1, #0
   226a8:	sub	sp, sp, #20
   226ac:	beq	22798 <myhtml_rules_init@@Base+0x2a8>
   226b0:	mov	r7, r3
   226b4:	ldr	r3, [pc, #452]	; 22880 <myhtml_rules_init@@Base+0x390>
   226b8:	ldr	fp, [pc, #452]	; 22884 <myhtml_rules_init@@Base+0x394>
   226bc:	add	r3, pc, r3
   226c0:	str	r3, [sp, #4]
   226c4:	ldr	r3, [pc, #444]	; 22888 <myhtml_rules_init@@Base+0x398>
   226c8:	mov	r4, #0
   226cc:	add	r3, pc, r3
   226d0:	str	r3, [sp, #12]
   226d4:	ldr	r3, [pc, #432]	; 2288c <myhtml_rules_init@@Base+0x39c>
   226d8:	mov	r6, r2
   226dc:	add	r3, pc, r3
   226e0:	mov	r8, r0
   226e4:	add	fp, pc, fp
   226e8:	str	r3, [sp, #8]
   226ec:	mov	r1, r4
   226f0:	sub	sl, r0, #1
   226f4:	mov	r9, #4
   226f8:	b	22730 <myhtml_rules_init@@Base+0x240>
   226fc:	cmp	r2, #62	; 0x3e
   22700:	beq	227e8 <myhtml_rules_init@@Base+0x2f8>
   22704:	cmp	r2, #160	; 0xa0
   22708:	bne	22720 <myhtml_rules_init@@Base+0x230>
   2270c:	cmp	r4, #0
   22710:	beq	22720 <myhtml_rules_init@@Base+0x230>
   22714:	ldrb	r2, [sl, #-1]
   22718:	cmp	r2, #194	; 0xc2
   2271c:	beq	22824 <myhtml_rules_init@@Base+0x334>
   22720:	add	r4, r4, #1
   22724:	cmp	r5, r4
   22728:	add	r1, r1, #1
   2272c:	beq	22790 <myhtml_rules_init@@Base+0x2a0>
   22730:	ldrb	r2, [sl, #1]!
   22734:	cmp	r2, #60	; 0x3c
   22738:	beq	227a4 <myhtml_rules_init@@Base+0x2b4>
   2273c:	bhi	226fc <myhtml_rules_init@@Base+0x20c>
   22740:	cmp	r2, #38	; 0x26
   22744:	bne	22720 <myhtml_rules_init@@Base+0x230>
   22748:	cmp	r1, #0
   2274c:	beq	22768 <myhtml_rules_init@@Base+0x278>
   22750:	sub	r0, r4, r1
   22754:	add	r0, r8, r0
   22758:	mov	r2, r7
   2275c:	blx	r6
   22760:	cmp	r0, #0
   22764:	bne	227dc <myhtml_rules_init@@Base+0x2ec>
   22768:	mov	r2, r7
   2276c:	mov	r1, #5
   22770:	ldr	r0, [sp, #8]
   22774:	blx	r6
   22778:	cmp	r0, #0
   2277c:	bne	227dc <myhtml_rules_init@@Base+0x2ec>
   22780:	add	r4, r4, #1
   22784:	cmp	r5, r4
   22788:	mov	r1, #0
   2278c:	bne	22730 <myhtml_rules_init@@Base+0x240>
   22790:	cmp	r1, #0
   22794:	bne	22864 <myhtml_rules_init@@Base+0x374>
   22798:	mov	r0, #0
   2279c:	add	sp, sp, #20
   227a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   227a4:	cmp	r1, #0
   227a8:	beq	227c4 <myhtml_rules_init@@Base+0x2d4>
   227ac:	sub	r0, r4, r1
   227b0:	add	r0, r8, r0
   227b4:	mov	r2, r7
   227b8:	blx	r6
   227bc:	cmp	r0, #0
   227c0:	bne	227dc <myhtml_rules_init@@Base+0x2ec>
   227c4:	mov	r2, r7
   227c8:	mov	r1, r9
   227cc:	mov	r0, fp
   227d0:	blx	r6
   227d4:	cmp	r0, #0
   227d8:	beq	22780 <myhtml_rules_init@@Base+0x290>
   227dc:	mov	r0, #2
   227e0:	add	sp, sp, #20
   227e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   227e8:	cmp	r1, #0
   227ec:	beq	22808 <myhtml_rules_init@@Base+0x318>
   227f0:	sub	r0, r4, r1
   227f4:	add	r0, r8, r0
   227f8:	mov	r2, r7
   227fc:	blx	r6
   22800:	cmp	r0, #0
   22804:	bne	227dc <myhtml_rules_init@@Base+0x2ec>
   22808:	mov	r2, r7
   2280c:	mov	r1, r9
   22810:	ldr	r0, [sp, #4]
   22814:	blx	r6
   22818:	cmp	r0, #0
   2281c:	beq	22780 <myhtml_rules_init@@Base+0x290>
   22820:	b	227dc <myhtml_rules_init@@Base+0x2ec>
   22824:	cmp	r1, #0
   22828:	beq	22848 <myhtml_rules_init@@Base+0x358>
   2282c:	sub	r0, r4, r1
   22830:	add	r0, r8, r0
   22834:	sub	r1, r1, #1
   22838:	mov	r2, r7
   2283c:	blx	r6
   22840:	cmp	r0, #0
   22844:	bne	227dc <myhtml_rules_init@@Base+0x2ec>
   22848:	mov	r2, r7
   2284c:	mov	r1, #6
   22850:	ldr	r0, [sp, #12]
   22854:	blx	r6
   22858:	cmp	r0, #0
   2285c:	beq	22780 <myhtml_rules_init@@Base+0x290>
   22860:	b	227dc <myhtml_rules_init@@Base+0x2ec>
   22864:	sub	r0, r5, r1
   22868:	add	r0, r8, r0
   2286c:	mov	r2, r7
   22870:	blx	r6
   22874:	cmp	r0, #0
   22878:	bne	227dc <myhtml_rules_init@@Base+0x2ec>
   2287c:	b	22798 <myhtml_rules_init@@Base+0x2a8>
   22880:	andeq	r9, sp, ip, ror #13
   22884:			; <UNDEFINED> instruction: 0x000d96bc
   22888:	andeq	r9, sp, r4, ror #13
   2288c:			; <UNDEFINED> instruction: 0x000d96bc
   22890:	ldr	ip, [r0, #4]
   22894:	sub	r3, ip, #1
   22898:	cmp	r3, #141	; 0x8d
   2289c:	addls	pc, pc, r3, lsl #2
   228a0:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228a4:	b	22b34 <myhtml_rules_init@@Base+0x644>
   228a8:	b	22b34 <myhtml_rules_init@@Base+0x644>
   228ac:	b	22b34 <myhtml_rules_init@@Base+0x644>
   228b0:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228b4:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228b8:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228bc:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228c0:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228c4:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228c8:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   228cc:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228d0:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228d4:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228d8:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228dc:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   228e0:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228e4:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228e8:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228ec:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   228f0:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228f4:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228f8:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   228fc:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22900:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   22904:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22908:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   2290c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22910:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22914:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22918:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   2291c:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   22920:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22924:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22928:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   2292c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22930:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22934:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22938:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   2293c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22940:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22944:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22948:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   2294c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22950:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22954:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22958:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   2295c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22960:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22964:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22968:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   2296c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22970:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22974:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   22978:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   2297c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22980:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22984:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22988:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   2298c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22990:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22994:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22998:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   2299c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229a0:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   229a4:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229a8:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229ac:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229b0:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229b4:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   229b8:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   229bc:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229c0:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229c4:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229c8:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   229cc:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229d0:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229d4:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229d8:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   229dc:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229e0:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229e4:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229e8:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229ec:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229f0:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229f4:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   229f8:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   229fc:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a00:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a04:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a08:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a0c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a10:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a14:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a18:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a1c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a20:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a24:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a28:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a2c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a30:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   22a34:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a38:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a3c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a40:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a44:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a48:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a4c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a50:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a54:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a58:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a5c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a60:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a64:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a68:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a6c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a70:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   22a74:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a78:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a7c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a80:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a84:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a88:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a8c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a90:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a94:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a98:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22a9c:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22aa0:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22aa4:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22aa8:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22aac:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22ab0:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22ab4:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22ab8:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22abc:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22ac0:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   22ac4:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22ac8:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22acc:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22ad0:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22ad4:	b	22ae8 <myhtml_rules_init@@Base+0x5f8>
   22ad8:	b	22adc <myhtml_rules_init@@Base+0x5ec>
   22adc:	ldr	r3, [r0, #8]
   22ae0:	cmp	r3, #1
   22ae4:	beq	22b34 <myhtml_rules_init@@Base+0x644>
   22ae8:	push	{r4, r5, r6, lr}
   22aec:	sub	sp, sp, #8
   22af0:	mov	r5, r2
   22af4:	mov	r4, r1
   22af8:	add	r2, sp, #4
   22afc:	mov	r1, ip
   22b00:	ldr	r0, [r0, #40]	; 0x28
   22b04:	bl	10af0 <myhtml_tag_name_by_id@plt>
   22b08:	mov	r2, r5
   22b0c:	mov	r1, #2
   22b10:	mov	r6, r0
   22b14:	ldr	r0, [pc, #92]	; 22b78 <myhtml_rules_init@@Base+0x688>
   22b18:	add	r0, pc, r0
   22b1c:	blx	r4
   22b20:	cmp	r0, #0
   22b24:	beq	22b3c <myhtml_rules_init@@Base+0x64c>
   22b28:	mov	r0, #2
   22b2c:	add	sp, sp, #8
   22b30:	pop	{r4, r5, r6, pc}
   22b34:	mov	r0, #0
   22b38:	bx	lr
   22b3c:	mov	r0, r6
   22b40:	mov	r2, r5
   22b44:	ldr	r1, [sp, #4]
   22b48:	blx	r4
   22b4c:	cmp	r0, #0
   22b50:	bne	22b28 <myhtml_rules_init@@Base+0x638>
   22b54:	ldr	r0, [pc, #32]	; 22b7c <myhtml_rules_init@@Base+0x68c>
   22b58:	mov	r2, r5
   22b5c:	mov	r1, #1
   22b60:	add	r0, pc, r0
   22b64:	blx	r4
   22b68:	cmp	r0, #0
   22b6c:	bne	22b28 <myhtml_rules_init@@Base+0x638>
   22b70:	mov	r0, #0
   22b74:	b	22b2c <myhtml_rules_init@@Base+0x63c>
   22b78:	andeq	r9, sp, r0, lsr #5
   22b7c:	andeq	r9, sp, ip, asr r2

00022b80 <myhtml_serialization_node_callback@@Base>:
   22b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b84:	mov	fp, r1
   22b88:	ldr	r1, [r0, #4]
   22b8c:	sub	sp, sp, #52	; 0x34
   22b90:	cmp	r1, #2
   22b94:	mov	r4, r0
   22b98:	mov	r8, r2
   22b9c:	beq	22cdc <myhtml_serialization_node_callback@@Base+0x15c>
   22ba0:	cmp	r1, #3
   22ba4:	beq	22c58 <myhtml_serialization_node_callback@@Base+0xd8>
   22ba8:	cmp	r1, #1
   22bac:	beq	22be8 <myhtml_serialization_node_callback@@Base+0x68>
   22bb0:	add	r2, sp, #40	; 0x28
   22bb4:	ldr	r0, [r0, #40]	; 0x28
   22bb8:	bl	10af0 <myhtml_tag_name_by_id@plt>
   22bbc:	mov	r2, r8
   22bc0:	mov	r1, #1
   22bc4:	mov	r5, r0
   22bc8:	ldr	r0, [pc, #1616]	; 23220 <myhtml_serialization_node_callback@@Base+0x6a0>
   22bcc:	add	r0, pc, r0
   22bd0:	blx	fp
   22bd4:	cmp	r0, #0
   22bd8:	beq	22d70 <myhtml_serialization_node_callback@@Base+0x1f0>
   22bdc:	mov	r0, #2
   22be0:	add	sp, sp, #52	; 0x34
   22be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22be8:	ldr	r1, [r0, #32]
   22bec:	cmp	r1, #0
   22bf0:	beq	22c4c <myhtml_serialization_node_callback@@Base+0xcc>
   22bf4:	ldr	r0, [r1, #4]
   22bf8:	cmp	r0, #0
   22bfc:	beq	22c4c <myhtml_serialization_node_callback@@Base+0xcc>
   22c00:	ldr	r3, [r4, #24]
   22c04:	cmp	r3, #0
   22c08:	beq	22c34 <myhtml_serialization_node_callback@@Base+0xb4>
   22c0c:	ldr	r3, [r3, #4]
   22c10:	cmp	r3, #101	; 0x65
   22c14:	beq	22d58 <myhtml_serialization_node_callback@@Base+0x1d8>
   22c18:	bls	22d40 <myhtml_serialization_node_callback@@Base+0x1c0>
   22c1c:	cmp	r3, #120	; 0x78
   22c20:	beq	22d58 <myhtml_serialization_node_callback@@Base+0x1d8>
   22c24:	cmp	r3, #143	; 0x8f
   22c28:	beq	22d58 <myhtml_serialization_node_callback@@Base+0x1d8>
   22c2c:	cmp	r3, #112	; 0x70
   22c30:	beq	22d58 <myhtml_serialization_node_callback@@Base+0x1d8>
   22c34:	mov	r3, r8
   22c38:	mov	r2, fp
   22c3c:	ldr	r1, [r1, #12]
   22c40:	bl	226a0 <myhtml_rules_init@@Base+0x1b0>
   22c44:	cmp	r0, #0
   22c48:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22c4c:	mov	r0, #0
   22c50:	add	sp, sp, #52	; 0x34
   22c54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c58:	ldr	r0, [pc, #1476]	; 23224 <myhtml_serialization_node_callback@@Base+0x6a4>
   22c5c:	mov	r1, #9
   22c60:	add	r0, pc, r0
   22c64:	blx	fp
   22c68:	cmp	r0, #0
   22c6c:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22c70:	ldr	r0, [pc, #1456]	; 23228 <myhtml_serialization_node_callback@@Base+0x6a8>
   22c74:	mov	r2, r8
   22c78:	mov	r1, #1
   22c7c:	add	r0, pc, r0
   22c80:	blx	fp
   22c84:	cmp	r0, #0
   22c88:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22c8c:	ldr	r3, [r4, #32]
   22c90:	cmp	r3, #0
   22c94:	beq	22cbc <myhtml_serialization_node_callback@@Base+0x13c>
   22c98:	ldr	r4, [r3, #40]	; 0x28
   22c9c:	cmp	r4, #0
   22ca0:	beq	22cbc <myhtml_serialization_node_callback@@Base+0x13c>
   22ca4:	ldr	r0, [r4, #8]
   22ca8:	cmp	r0, #0
   22cac:	beq	22cbc <myhtml_serialization_node_callback@@Base+0x13c>
   22cb0:	ldr	r1, [r4, #16]
   22cb4:	cmp	r1, #0
   22cb8:	bne	230a0 <myhtml_serialization_node_callback@@Base+0x520>
   22cbc:	ldr	r0, [pc, #1384]	; 2322c <myhtml_serialization_node_callback@@Base+0x6ac>
   22cc0:	mov	r2, r8
   22cc4:	mov	r1, #1
   22cc8:	add	r0, pc, r0
   22ccc:	blx	fp
   22cd0:	cmp	r0, #0
   22cd4:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22cd8:	b	22c4c <myhtml_serialization_node_callback@@Base+0xcc>
   22cdc:	ldr	r0, [pc, #1356]	; 23230 <myhtml_serialization_node_callback@@Base+0x6b0>
   22ce0:	mov	r1, #4
   22ce4:	add	r0, pc, r0
   22ce8:	blx	fp
   22cec:	cmp	r0, #0
   22cf0:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22cf4:	ldr	r3, [r4, #32]
   22cf8:	cmp	r3, #0
   22cfc:	beq	22d20 <myhtml_serialization_node_callback@@Base+0x1a0>
   22d00:	ldr	r0, [r3, #4]
   22d04:	cmp	r0, #0
   22d08:	beq	22d20 <myhtml_serialization_node_callback@@Base+0x1a0>
   22d0c:	ldr	r1, [r3, #12]
   22d10:	mov	r2, r8
   22d14:	blx	fp
   22d18:	cmp	r0, #0
   22d1c:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22d20:	ldr	r0, [pc, #1292]	; 23234 <myhtml_serialization_node_callback@@Base+0x6b4>
   22d24:	mov	r2, r8
   22d28:	mov	r1, #3
   22d2c:	add	r0, pc, r0
   22d30:	blx	fp
   22d34:	cmp	r0, #0
   22d38:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22d3c:	b	22c4c <myhtml_serialization_node_callback@@Base+0xcc>
   22d40:	cmp	r3, #67	; 0x43
   22d44:	beq	22d58 <myhtml_serialization_node_callback@@Base+0x1d8>
   22d48:	bcc	22c34 <myhtml_serialization_node_callback@@Base+0xb4>
   22d4c:	sub	r3, r3, #91	; 0x5b
   22d50:	cmp	r3, #1
   22d54:	bhi	22c34 <myhtml_serialization_node_callback@@Base+0xb4>
   22d58:	mov	r2, r8
   22d5c:	ldr	r1, [r1, #12]
   22d60:	blx	fp
   22d64:	cmp	r0, #0
   22d68:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22d6c:	b	22c4c <myhtml_serialization_node_callback@@Base+0xcc>
   22d70:	mov	r0, r5
   22d74:	mov	r2, r8
   22d78:	ldr	r1, [sp, #40]	; 0x28
   22d7c:	blx	fp
   22d80:	cmp	r0, #0
   22d84:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22d88:	ldr	r3, [r4, #32]
   22d8c:	cmp	r3, #0
   22d90:	beq	23004 <myhtml_serialization_node_callback@@Base+0x484>
   22d94:	ldr	r9, [r3, #40]	; 0x28
   22d98:	cmp	r9, #0
   22d9c:	beq	23004 <myhtml_serialization_node_callback@@Base+0x484>
   22da0:	ldr	r3, [pc, #1168]	; 23238 <myhtml_serialization_node_callback@@Base+0x6b8>
   22da4:	add	r3, pc, r3
   22da8:	str	r3, [sp, #16]
   22dac:	ldr	r3, [pc, #1160]	; 2323c <myhtml_serialization_node_callback@@Base+0x6bc>
   22db0:	add	r3, pc, r3
   22db4:	str	r3, [sp, #24]
   22db8:	ldr	r3, [pc, #1152]	; 23240 <myhtml_serialization_node_callback@@Base+0x6c0>
   22dbc:	add	r3, pc, r3
   22dc0:	str	r3, [sp, #32]
   22dc4:	ldr	r3, [pc, #1144]	; 23244 <myhtml_serialization_node_callback@@Base+0x6c4>
   22dc8:	add	r3, pc, r3
   22dcc:	str	r3, [sp, #36]	; 0x24
   22dd0:	ldr	r3, [pc, #1136]	; 23248 <myhtml_serialization_node_callback@@Base+0x6c8>
   22dd4:	add	r3, pc, r3
   22dd8:	str	r3, [sp, #28]
   22ddc:	ldr	r3, [pc, #1128]	; 2324c <myhtml_serialization_node_callback@@Base+0x6cc>
   22de0:	add	r3, pc, r3
   22de4:	str	r3, [sp, #20]
   22de8:	mov	r2, r8
   22dec:	mov	r1, #1
   22df0:	ldr	r0, [sp, #16]
   22df4:	blx	fp
   22df8:	cmp	r0, #0
   22dfc:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22e00:	ldr	r4, [r9, #64]	; 0x40
   22e04:	cmp	r4, #5
   22e08:	beq	23084 <myhtml_serialization_node_callback@@Base+0x504>
   22e0c:	cmp	r4, #6
   22e10:	beq	23040 <myhtml_serialization_node_callback@@Base+0x4c0>
   22e14:	cmp	r4, #4
   22e18:	beq	23024 <myhtml_serialization_node_callback@@Base+0x4a4>
   22e1c:	add	r5, sp, #44	; 0x2c
   22e20:	mov	r1, r5
   22e24:	mov	r0, r9
   22e28:	bl	10b08 <myhtml_attribute_key@plt>
   22e2c:	cmp	r0, #0
   22e30:	beq	22e48 <myhtml_serialization_node_callback@@Base+0x2c8>
   22e34:	mov	r2, r8
   22e38:	ldr	r1, [sp, #44]	; 0x2c
   22e3c:	blx	fp
   22e40:	cmp	r0, #0
   22e44:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22e48:	mov	r2, r8
   22e4c:	mov	r1, #2
   22e50:	ldr	r0, [sp, #20]
   22e54:	blx	fp
   22e58:	subs	r4, r0, #0
   22e5c:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22e60:	mov	r1, r5
   22e64:	mov	r0, r9
   22e68:	bl	10490 <myhtml_attribute_value@plt>
   22e6c:	subs	r6, r0, #0
   22e70:	beq	22fdc <myhtml_serialization_node_callback@@Base+0x45c>
   22e74:	ldr	r5, [sp, #44]	; 0x2c
   22e78:	cmp	r5, #0
   22e7c:	beq	22fdc <myhtml_serialization_node_callback@@Base+0x45c>
   22e80:	ldr	r3, [pc, #968]	; 23250 <myhtml_serialization_node_callback@@Base+0x6d0>
   22e84:	sub	sl, r6, #1
   22e88:	add	r3, pc, r3
   22e8c:	str	r3, [sp, #4]
   22e90:	ldr	r3, [pc, #956]	; 23254 <myhtml_serialization_node_callback@@Base+0x6d4>
   22e94:	str	r9, [sp, #12]
   22e98:	add	r3, pc, r3
   22e9c:	str	r3, [sp, #8]
   22ea0:	ldr	r3, [pc, #944]	; 23258 <myhtml_serialization_node_callback@@Base+0x6d8>
   22ea4:	mov	r9, sl
   22ea8:	add	r3, pc, r3
   22eac:	mov	r1, r4
   22eb0:	mov	r7, #6
   22eb4:	mov	sl, r3
   22eb8:	b	22edc <myhtml_serialization_node_callback@@Base+0x35c>
   22ebc:	cmp	r2, #160	; 0xa0
   22ec0:	beq	22f64 <myhtml_serialization_node_callback@@Base+0x3e4>
   22ec4:	cmp	r2, #34	; 0x22
   22ec8:	beq	22f28 <myhtml_serialization_node_callback@@Base+0x3a8>
   22ecc:	add	r1, r1, #1
   22ed0:	add	r4, r4, #1
   22ed4:	cmp	r5, r4
   22ed8:	beq	22fb8 <myhtml_serialization_node_callback@@Base+0x438>
   22edc:	ldrb	r2, [r9, #1]!
   22ee0:	cmp	r2, #38	; 0x26
   22ee4:	bne	22ebc <myhtml_serialization_node_callback@@Base+0x33c>
   22ee8:	cmp	r1, #0
   22eec:	beq	22f08 <myhtml_serialization_node_callback@@Base+0x388>
   22ef0:	sub	r0, r4, r1
   22ef4:	add	r0, r6, r0
   22ef8:	mov	r2, r8
   22efc:	blx	fp
   22f00:	cmp	r0, #0
   22f04:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22f08:	mov	r2, r8
   22f0c:	mov	r1, #5
   22f10:	ldr	r0, [sp, #4]
   22f14:	blx	fp
   22f18:	cmp	r0, #0
   22f1c:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22f20:	mov	r1, #0
   22f24:	b	22ed0 <myhtml_serialization_node_callback@@Base+0x350>
   22f28:	cmp	r1, #0
   22f2c:	beq	22f48 <myhtml_serialization_node_callback@@Base+0x3c8>
   22f30:	sub	r0, r4, r1
   22f34:	add	r0, r6, r0
   22f38:	mov	r2, r8
   22f3c:	blx	fp
   22f40:	cmp	r0, #0
   22f44:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22f48:	mov	r2, r8
   22f4c:	mov	r1, r7
   22f50:	mov	r0, sl
   22f54:	blx	fp
   22f58:	cmp	r0, #0
   22f5c:	beq	22f20 <myhtml_serialization_node_callback@@Base+0x3a0>
   22f60:	b	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22f64:	cmp	r4, #0
   22f68:	beq	22ecc <myhtml_serialization_node_callback@@Base+0x34c>
   22f6c:	ldrb	r2, [r9, #-1]
   22f70:	cmp	r2, #194	; 0xc2
   22f74:	bne	22ecc <myhtml_serialization_node_callback@@Base+0x34c>
   22f78:	cmp	r1, #0
   22f7c:	beq	22f9c <myhtml_serialization_node_callback@@Base+0x41c>
   22f80:	sub	r0, r4, r1
   22f84:	add	r0, r6, r0
   22f88:	sub	r1, r1, #1
   22f8c:	mov	r2, r8
   22f90:	blx	fp
   22f94:	cmp	r0, #0
   22f98:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22f9c:	mov	r2, r8
   22fa0:	mov	r1, r7
   22fa4:	ldr	r0, [sp, #8]
   22fa8:	blx	fp
   22fac:	cmp	r0, #0
   22fb0:	beq	22f20 <myhtml_serialization_node_callback@@Base+0x3a0>
   22fb4:	b	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22fb8:	cmp	r1, #0
   22fbc:	ldr	r9, [sp, #12]
   22fc0:	beq	22fdc <myhtml_serialization_node_callback@@Base+0x45c>
   22fc4:	sub	r0, r5, r1
   22fc8:	add	r0, r6, r0
   22fcc:	mov	r2, r8
   22fd0:	blx	fp
   22fd4:	cmp	r0, #0
   22fd8:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22fdc:	ldr	r0, [pc, #632]	; 2325c <myhtml_serialization_node_callback@@Base+0x6dc>
   22fe0:	mov	r2, r8
   22fe4:	mov	r1, #1
   22fe8:	add	r0, pc, r0
   22fec:	blx	fp
   22ff0:	cmp	r0, #0
   22ff4:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   22ff8:	ldr	r9, [r9]
   22ffc:	cmp	r9, #0
   23000:	bne	22de8 <myhtml_serialization_node_callback@@Base+0x268>
   23004:	ldr	r0, [pc, #596]	; 23260 <myhtml_serialization_node_callback@@Base+0x6e0>
   23008:	mov	r2, r8
   2300c:	mov	r1, #1
   23010:	add	r0, pc, r0
   23014:	blx	fp
   23018:	cmp	r0, #0
   2301c:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   23020:	b	22be0 <myhtml_serialization_node_callback@@Base+0x60>
   23024:	mov	r2, r8
   23028:	mov	r1, #6
   2302c:	ldr	r0, [sp, #28]
   23030:	blx	fp
   23034:	cmp	r0, #0
   23038:	beq	22e1c <myhtml_serialization_node_callback@@Base+0x29c>
   2303c:	b	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   23040:	ldr	r0, [r9, #8]
   23044:	cmp	r0, #0
   23048:	beq	22e1c <myhtml_serialization_node_callback@@Base+0x29c>
   2304c:	ldr	r3, [r9, #16]
   23050:	cmp	r3, #5
   23054:	bne	22e1c <myhtml_serialization_node_callback@@Base+0x29c>
   23058:	ldr	r1, [sp, #32]
   2305c:	bl	fbf0 <mycore_strcmp@plt>
   23060:	cmp	r0, #0
   23064:	beq	22e1c <myhtml_serialization_node_callback@@Base+0x29c>
   23068:	mov	r1, r4
   2306c:	mov	r2, r8
   23070:	ldr	r0, [sp, #36]	; 0x24
   23074:	blx	fp
   23078:	cmp	r0, #0
   2307c:	beq	22e1c <myhtml_serialization_node_callback@@Base+0x29c>
   23080:	b	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   23084:	mov	r2, r8
   23088:	mov	r1, #4
   2308c:	ldr	r0, [sp, #24]
   23090:	blx	fp
   23094:	cmp	r0, #0
   23098:	beq	22e1c <myhtml_serialization_node_callback@@Base+0x29c>
   2309c:	b	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   230a0:	mov	r2, r8
   230a4:	blx	fp
   230a8:	cmp	r0, #0
   230ac:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   230b0:	ldr	r4, [r4]
   230b4:	cmp	r4, #0
   230b8:	beq	22cbc <myhtml_serialization_node_callback@@Base+0x13c>
   230bc:	ldr	r3, [r4, #36]	; 0x24
   230c0:	cmp	r3, #6
   230c4:	bne	22cbc <myhtml_serialization_node_callback@@Base+0x13c>
   230c8:	ldr	r1, [pc, #404]	; 23264 <myhtml_serialization_node_callback@@Base+0x6e4>
   230cc:	ldr	r0, [r4, #28]
   230d0:	add	r1, pc, r1
   230d4:	bl	1052c <mycore_strcasecmp@plt>
   230d8:	cmp	r0, #0
   230dc:	bne	23184 <myhtml_serialization_node_callback@@Base+0x604>
   230e0:	ldr	r5, [r4]
   230e4:	mov	r4, r0
   230e8:	cmp	r5, #0
   230ec:	beq	22cbc <myhtml_serialization_node_callback@@Base+0x13c>
   230f0:	ldr	r3, [r5, #36]	; 0x24
   230f4:	cmp	r3, #0
   230f8:	beq	22cbc <myhtml_serialization_node_callback@@Base+0x13c>
   230fc:	cmp	r4, #0
   23100:	beq	23164 <myhtml_serialization_node_callback@@Base+0x5e4>
   23104:	ldr	r3, [r4, #36]	; 0x24
   23108:	cmp	r3, #0
   2310c:	beq	23164 <myhtml_serialization_node_callback@@Base+0x5e4>
   23110:	ldr	r0, [pc, #336]	; 23268 <myhtml_serialization_node_callback@@Base+0x6e8>
   23114:	mov	r2, r8
   23118:	mov	r1, #2
   2311c:	add	r0, pc, r0
   23120:	blx	fp
   23124:	cmp	r0, #0
   23128:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   2312c:	ldr	r0, [r5, #28]
   23130:	cmp	r0, #0
   23134:	beq	23144 <myhtml_serialization_node_callback@@Base+0x5c4>
   23138:	ldr	r1, [r5, #36]	; 0x24
   2313c:	cmp	r1, #0
   23140:	bne	2320c <myhtml_serialization_node_callback@@Base+0x68c>
   23144:	ldr	r0, [pc, #288]	; 2326c <myhtml_serialization_node_callback@@Base+0x6ec>
   23148:	mov	r2, r8
   2314c:	mov	r1, #1
   23150:	add	r0, pc, r0
   23154:	blx	fp
   23158:	cmp	r0, #0
   2315c:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   23160:	b	22cbc <myhtml_serialization_node_callback@@Base+0x13c>
   23164:	ldr	r0, [pc, #260]	; 23270 <myhtml_serialization_node_callback@@Base+0x6f0>
   23168:	mov	r2, r8
   2316c:	mov	r1, #7
   23170:	add	r0, pc, r0
   23174:	blx	fp
   23178:	cmp	r0, #0
   2317c:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   23180:	b	23110 <myhtml_serialization_node_callback@@Base+0x590>
   23184:	ldr	r1, [pc, #232]	; 23274 <myhtml_serialization_node_callback@@Base+0x6f4>
   23188:	ldr	r0, [r4, #28]
   2318c:	add	r1, pc, r1
   23190:	bl	1052c <mycore_strcasecmp@plt>
   23194:	cmp	r0, #0
   23198:	bne	22cbc <myhtml_serialization_node_callback@@Base+0x13c>
   2319c:	ldr	r4, [r4]
   231a0:	cmp	r4, #0
   231a4:	beq	22cbc <myhtml_serialization_node_callback@@Base+0x13c>
   231a8:	ldr	r3, [r4, #36]	; 0x24
   231ac:	ldr	r5, [r4]
   231b0:	cmp	r3, #0
   231b4:	beq	230e8 <myhtml_serialization_node_callback@@Base+0x568>
   231b8:	ldr	r0, [pc, #184]	; 23278 <myhtml_serialization_node_callback@@Base+0x6f8>
   231bc:	mov	r2, r8
   231c0:	mov	r1, #9
   231c4:	add	r0, pc, r0
   231c8:	blx	fp
   231cc:	cmp	r0, #0
   231d0:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   231d4:	mov	r2, r8
   231d8:	ldr	r1, [r4, #36]	; 0x24
   231dc:	ldr	r0, [r4, #28]
   231e0:	blx	fp
   231e4:	cmp	r0, #0
   231e8:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   231ec:	ldr	r0, [pc, #136]	; 2327c <myhtml_serialization_node_callback@@Base+0x6fc>
   231f0:	mov	r2, r8
   231f4:	mov	r1, #1
   231f8:	add	r0, pc, r0
   231fc:	blx	fp
   23200:	cmp	r0, #0
   23204:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   23208:	b	230e8 <myhtml_serialization_node_callback@@Base+0x568>
   2320c:	mov	r2, r8
   23210:	blx	fp
   23214:	cmp	r0, #0
   23218:	bne	22bdc <myhtml_serialization_node_callback@@Base+0x5c>
   2321c:	b	23144 <myhtml_serialization_node_callback@@Base+0x5c4>
   23220:	andeq	r9, sp, r8, lsr r2
   23224:	andeq	r9, sp, ip, ror #2
   23228:	andeq	r9, sp, ip, asr r1
   2322c:	strdeq	r9, [sp], -r4
   23230:	ldrdeq	r9, [sp], -ip
   23234:	muleq	sp, ip, r0
   23238:	andeq	r9, sp, r4, lsr r0
   2323c:	andeq	r9, sp, r8, asr r0
   23240:	andeq	r9, sp, r4, asr r0
   23244:	andeq	r9, sp, r0, asr r0
   23248:	andeq	r9, sp, ip, asr #32
   2324c:	andeq	r9, sp, r8, asr #32
   23250:	andeq	r8, sp, r0, lsl pc
   23254:	andeq	r8, sp, r8, lsl pc
   23258:	andeq	r8, sp, r4, lsl #31
   2325c:	andeq	r8, sp, ip, lsl #28
   23260:	andeq	r8, sp, ip, lsr #27
   23264:	andeq	r8, sp, ip, lsl #26
   23268:	ldrdeq	r8, [sp], -ip
   2326c:	andeq	r8, sp, r4, lsr #25
   23270:	andeq	r8, sp, ip, lsl #25
   23274:	andeq	r8, sp, r8, asr ip
   23278:	andeq	r8, sp, r8, lsr #24
   2327c:	strdeq	r8, [sp], -ip

00023280 <myhtml_serialization_tree_callback@@Base>:
   23280:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23284:	subs	r6, r0, #0
   23288:	sub	sp, sp, #20
   2328c:	beq	2362c <myhtml_serialization_tree_callback@@Base+0x3ac>
   23290:	ldr	r3, [r6, #40]	; 0x28
   23294:	cmp	r3, #0
   23298:	beq	232ac <myhtml_serialization_tree_callback@@Base+0x2c>
   2329c:	ldr	r3, [r3, #84]	; 0x54
   232a0:	cmp	r6, r3
   232a4:	ldreq	fp, [r6, #20]
   232a8:	beq	232b0 <myhtml_serialization_tree_callback@@Base+0x30>
   232ac:	mov	fp, r6
   232b0:	ldr	r9, [pc, #896]	; 23638 <myhtml_serialization_tree_callback@@Base+0x3b8>
   232b4:	ldr	r3, [pc, #896]	; 2363c <myhtml_serialization_tree_callback@@Base+0x3bc>
   232b8:	mov	r5, r2
   232bc:	mov	r4, r1
   232c0:	add	r7, sp, #12
   232c4:	add	r9, pc, r9
   232c8:	mov	r8, #2
   232cc:	add	r3, pc, r3
   232d0:	str	r3, [sp, #4]
   232d4:	cmp	fp, #0
   232d8:	bne	232f0 <myhtml_serialization_tree_callback@@Base+0x70>
   232dc:	b	2362c <myhtml_serialization_tree_callback@@Base+0x3ac>
   232e0:	ldr	r3, [fp, #20]
   232e4:	cmp	r3, #0
   232e8:	beq	23340 <myhtml_serialization_tree_callback@@Base+0xc0>
   232ec:	mov	fp, r3
   232f0:	mov	r2, r5
   232f4:	mov	r1, r4
   232f8:	mov	r0, fp
   232fc:	bl	10700 <myhtml_serialization_node_callback@plt>
   23300:	cmp	r0, #0
   23304:	beq	232e0 <myhtml_serialization_tree_callback@@Base+0x60>
   23308:	b	235d8 <myhtml_serialization_tree_callback@@Base+0x358>
   2330c:	mov	r0, sl
   23310:	mov	r2, r5
   23314:	ldr	r1, [sp, #12]
   23318:	blx	r4
   2331c:	cmp	r0, #0
   23320:	bne	235d8 <myhtml_serialization_tree_callback@@Base+0x358>
   23324:	mov	r2, r5
   23328:	mov	r1, #1
   2332c:	ldr	r0, [sp, #4]
   23330:	blx	r4
   23334:	cmp	r0, #0
   23338:	bne	235d8 <myhtml_serialization_tree_callback@@Base+0x358>
   2333c:	ldr	fp, [fp, #24]
   23340:	cmp	r6, fp
   23344:	beq	23604 <myhtml_serialization_tree_callback@@Base+0x384>
   23348:	ldr	r3, [fp, #16]
   2334c:	cmp	r3, #0
   23350:	bne	235e4 <myhtml_serialization_tree_callback@@Base+0x364>
   23354:	ldr	r3, [fp, #4]
   23358:	mov	r2, r7
   2335c:	mov	r1, r3
   23360:	sub	r3, r3, #1
   23364:	cmp	r3, #141	; 0x8d
   23368:	addls	pc, pc, r3, lsl #2
   2336c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23370:	b	2333c <myhtml_serialization_tree_callback@@Base+0xbc>
   23374:	b	2333c <myhtml_serialization_tree_callback@@Base+0xbc>
   23378:	b	2333c <myhtml_serialization_tree_callback@@Base+0xbc>
   2337c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23380:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23384:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23388:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2338c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23390:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23394:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   23398:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2339c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233a0:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233a4:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233a8:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   233ac:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233b0:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233b4:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233b8:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   233bc:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233c0:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233c4:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233c8:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233cc:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   233d0:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233d4:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233d8:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233dc:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233e0:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233e4:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233e8:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   233ec:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233f0:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233f4:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233f8:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   233fc:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23400:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23404:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23408:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2340c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23410:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23414:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23418:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2341c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23420:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23424:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   23428:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2342c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23430:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23434:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23438:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2343c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23440:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   23444:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23448:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2344c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23450:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23454:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23458:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2345c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23460:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23464:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23468:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2346c:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   23470:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23474:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23478:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2347c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23480:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   23484:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   23488:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2348c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23490:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23494:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   23498:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2349c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234a0:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234a4:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   234a8:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234ac:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234b0:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234b4:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234b8:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234bc:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234c0:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234c4:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   234c8:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234cc:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234d0:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234d4:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234d8:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234dc:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234e0:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234e4:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234e8:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234ec:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234f0:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234f4:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234f8:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   234fc:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   23500:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23504:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23508:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2350c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23510:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23514:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23518:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2351c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23520:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23524:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23528:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2352c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23530:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23534:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23538:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2353c:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   23540:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23544:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23548:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2354c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23550:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23554:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23558:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2355c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23560:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23564:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23568:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2356c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23570:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23574:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23578:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2357c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23580:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23584:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23588:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2358c:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   23590:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23594:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   23598:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   2359c:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   235a0:	b	235b4 <myhtml_serialization_tree_callback@@Base+0x334>
   235a4:	b	235a8 <myhtml_serialization_tree_callback@@Base+0x328>
   235a8:	ldr	r3, [fp, #8]
   235ac:	cmp	r3, #1
   235b0:	beq	2333c <myhtml_serialization_tree_callback@@Base+0xbc>
   235b4:	ldr	r0, [fp, #40]	; 0x28
   235b8:	bl	10af0 <myhtml_tag_name_by_id@plt>
   235bc:	mov	r2, r5
   235c0:	mov	r1, r8
   235c4:	mov	sl, r0
   235c8:	mov	r0, r9
   235cc:	blx	r4
   235d0:	cmp	r0, #0
   235d4:	beq	2330c <myhtml_serialization_tree_callback@@Base+0x8c>
   235d8:	mov	r0, #2
   235dc:	add	sp, sp, #20
   235e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   235e4:	mov	r2, r5
   235e8:	mov	r1, r4
   235ec:	mov	r0, fp
   235f0:	bl	22890 <myhtml_rules_init@@Base+0x3a0>
   235f4:	cmp	r0, #0
   235f8:	bne	235d8 <myhtml_serialization_tree_callback@@Base+0x358>
   235fc:	ldr	fp, [fp, #16]
   23600:	b	232d4 <myhtml_serialization_tree_callback@@Base+0x54>
   23604:	ldr	r3, [r6, #40]	; 0x28
   23608:	ldr	r3, [r3, #84]	; 0x54
   2360c:	cmp	r6, r3
   23610:	beq	2362c <myhtml_serialization_tree_callback@@Base+0x3ac>
   23614:	mov	r2, r5
   23618:	mov	r1, r4
   2361c:	mov	r0, r6
   23620:	bl	22890 <myhtml_rules_init@@Base+0x3a0>
   23624:	cmp	r0, #0
   23628:	bne	235d8 <myhtml_serialization_tree_callback@@Base+0x358>
   2362c:	mov	r0, #0
   23630:	add	sp, sp, #20
   23634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23638:	strdeq	r8, [sp], -r4
   2363c:	strdeq	r8, [sp], -r0

00023640 <myhtml_serialization_reallocate@@Base>:
   23640:	push	{r4, r5, r6, lr}
   23644:	mov	r4, r0
   23648:	ldr	r0, [r0]
   2364c:	mov	r5, r1
   23650:	bl	fbd8 <mycore_realloc@plt>
   23654:	subs	r3, r0, #0
   23658:	moveq	r0, #2
   2365c:	streq	r3, [r4]
   23660:	streq	r3, [r4, #4]
   23664:	streq	r3, [r4, #8]
   23668:	movne	r0, #0
   2366c:	stmne	r4, {r3, r5}
   23670:	pop	{r4, r5, r6, pc}

00023674 <myhtml_serialization_concatenate@@Base>:
   23674:	push	{r4, r5, r6, lr}
   23678:	mov	r4, r2
   2367c:	ldmib	r2, {r2, r3}
   23680:	mov	r5, r1
   23684:	mov	r6, r0
   23688:	add	r1, r3, r1
   2368c:	cmp	r1, r2
   23690:	bcc	236b4 <myhtml_serialization_concatenate@@Base+0x40>
   23694:	add	r1, r1, #4096	; 0x1000
   23698:	mov	r0, r4
   2369c:	bl	1037c <myhtml_serialization_reallocate@plt>
   236a0:	cmp	r0, #0
   236a4:	beq	236b0 <myhtml_serialization_concatenate@@Base+0x3c>
   236a8:	mov	r0, #2
   236ac:	pop	{r4, r5, r6, pc}
   236b0:	ldr	r3, [r4, #8]
   236b4:	ldr	r0, [r4]
   236b8:	mov	r2, r5
   236bc:	mov	r1, r6
   236c0:	add	r0, r0, r3
   236c4:	bl	108ec <strncpy@plt>
   236c8:	ldr	r3, [r4, #8]
   236cc:	ldr	r2, [r4]
   236d0:	add	r5, r5, r3
   236d4:	mov	r3, #0
   236d8:	str	r5, [r4, #8]
   236dc:	mov	r0, r3
   236e0:	strb	r3, [r2, r5]
   236e4:	pop	{r4, r5, r6, pc}

000236e8 <myhtml_serialization_tree_buffer@@Base>:
   236e8:	push	{r4, r5, lr}
   236ec:	subs	r2, r1, #0
   236f0:	ldr	r5, [pc, #108]	; 23764 <myhtml_serialization_tree_buffer@@Base+0x7c>
   236f4:	sub	sp, sp, #12
   236f8:	add	r5, pc, r5
   236fc:	beq	23758 <myhtml_serialization_tree_buffer@@Base+0x70>
   23700:	ldr	r3, [r2]
   23704:	mov	r4, r0
   23708:	cmp	r3, #0
   2370c:	beq	23728 <myhtml_serialization_tree_buffer@@Base+0x40>
   23710:	ldr	r3, [pc, #80]	; 23768 <myhtml_serialization_tree_buffer@@Base+0x80>
   23714:	mov	r0, r4
   23718:	ldr	r1, [r5, r3]
   2371c:	add	sp, sp, #12
   23720:	pop	{r4, r5, lr}
   23724:	b	10e68 <myhtml_serialization_tree_callback@plt>
   23728:	ldr	r0, [pc, #60]	; 2376c <myhtml_serialization_tree_buffer@@Base+0x84>
   2372c:	str	r2, [sp, #4]
   23730:	stmib	r2, {r0, r3}
   23734:	bl	10c94 <mycore_malloc@plt>
   23738:	ldr	r2, [sp, #4]
   2373c:	cmp	r0, #0
   23740:	str	r0, [r2]
   23744:	streq	r0, [r2, #4]
   23748:	moveq	r0, #2
   2374c:	bne	23710 <myhtml_serialization_tree_buffer@@Base+0x28>
   23750:	add	sp, sp, #12
   23754:	pop	{r4, r5, pc}
   23758:	mov	r0, r2
   2375c:	add	sp, sp, #12
   23760:	pop	{r4, r5, pc}
   23764:	andeq	r2, pc, r0, lsl #18
   23768:	andeq	r0, r0, r8, lsr #17
   2376c:	andeq	r5, r0, sl

00023770 <myhtml_serialization@@Base>:
   23770:	b	10328 <myhtml_serialization_tree_buffer@plt>

00023774 <myhtml_serialization_node_buffer@@Base>:
   23774:	push	{r4, r5, lr}
   23778:	subs	r2, r1, #0
   2377c:	ldr	r5, [pc, #104]	; 237ec <myhtml_serialization_node_buffer@@Base+0x78>
   23780:	sub	sp, sp, #12
   23784:	add	r5, pc, r5
   23788:	beq	237e0 <myhtml_serialization_node_buffer@@Base+0x6c>
   2378c:	ldr	r3, [r2]
   23790:	mov	r4, r0
   23794:	cmp	r3, #0
   23798:	beq	237b4 <myhtml_serialization_node_buffer@@Base+0x40>
   2379c:	ldr	r3, [pc, #76]	; 237f0 <myhtml_serialization_node_buffer@@Base+0x7c>
   237a0:	mov	r0, r4
   237a4:	ldr	r1, [r5, r3]
   237a8:	add	sp, sp, #12
   237ac:	pop	{r4, r5, lr}
   237b0:	b	10700 <myhtml_serialization_node_callback@plt>
   237b4:	mov	r0, #2048	; 0x800
   237b8:	str	r2, [sp, #4]
   237bc:	stmib	r2, {r0, r3}
   237c0:	bl	10c94 <mycore_malloc@plt>
   237c4:	ldr	r2, [sp, #4]
   237c8:	cmp	r0, #0
   237cc:	str	r0, [r2]
   237d0:	streq	r0, [r2, #4]
   237d4:	bne	2379c <myhtml_serialization_node_buffer@@Base+0x28>
   237d8:	add	sp, sp, #12
   237dc:	pop	{r4, r5, pc}
   237e0:	mov	r0, r2
   237e4:	add	sp, sp, #12
   237e8:	pop	{r4, r5, pc}
   237ec:	andeq	r2, pc, r4, ror r8	; <UNPREDICTABLE>
   237f0:	andeq	r0, r0, r8, lsr #17

000237f4 <myhtml_serialization_node@@Base>:
   237f4:	b	107b4 <myhtml_serialization_node_buffer@plt>

000237f8 <myhtml_stream_buffer_create@@Base>:
   237f8:	mov	r1, #36	; 0x24
   237fc:	mov	r0, #1
   23800:	b	ff14 <mycore_calloc@plt>

00023804 <myhtml_stream_buffer_init@@Base>:
   23804:	push	{r4, lr}
   23808:	mov	r4, r0
   2380c:	mov	r3, #0
   23810:	str	r1, [r0, #8]
   23814:	str	r3, [r4, #4]
   23818:	mov	r0, r1
   2381c:	mov	r1, #12
   23820:	bl	ff14 <mycore_calloc@plt>
   23824:	ldr	r3, [pc, #16]	; 2383c <myhtml_stream_buffer_init@@Base+0x38>
   23828:	cmp	r0, #0
   2382c:	str	r0, [r4]
   23830:	moveq	r0, r3
   23834:	movne	r0, #0
   23838:	pop	{r4, pc}
   2383c:	andeq	r9, r0, r1, lsl #6

00023840 <myhtml_stream_buffer_entry_init@@Base>:
   23840:	push	{r4, r5, r6, lr}
   23844:	mov	r4, r0
   23848:	ldr	r0, [r0]
   2384c:	mov	r5, r1
   23850:	cmp	r0, #0
   23854:	beq	23870 <myhtml_stream_buffer_entry_init@@Base+0x30>
   23858:	ldr	r3, [r4, #8]
   2385c:	cmp	r3, r1
   23860:	bcc	2386c <myhtml_stream_buffer_entry_init@@Base+0x2c>
   23864:	mov	r0, #0
   23868:	pop	{r4, r5, r6, pc}
   2386c:	bl	10dcc <mycore_free@plt>
   23870:	mov	r3, #0
   23874:	str	r5, [r4, #8]
   23878:	mov	r0, r5
   2387c:	str	r3, [r4, #4]
   23880:	bl	10c94 <mycore_malloc@plt>
   23884:	cmp	r0, #0
   23888:	str	r0, [r4]
   2388c:	bne	23864 <myhtml_stream_buffer_entry_init@@Base+0x24>
   23890:	ldr	r0, [pc]	; 23898 <myhtml_stream_buffer_entry_init@@Base+0x58>
   23894:	pop	{r4, r5, r6, pc}
   23898:	andeq	r9, r0, r3, lsl #6

0002389c <myhtml_stream_buffer_entry_clean@@Base>:
   2389c:	cmp	r0, #0
   238a0:	movne	r3, #0
   238a4:	strne	r3, [r0, #4]
   238a8:	bx	lr

000238ac <myhtml_stream_buffer_entry_destroy@@Base>:
   238ac:	push	{r4, r5, r6, lr}
   238b0:	subs	r4, r0, #0
   238b4:	beq	238d4 <myhtml_stream_buffer_entry_destroy@@Base+0x28>
   238b8:	ldr	r0, [r4]
   238bc:	mov	r5, r1
   238c0:	cmp	r0, #0
   238c4:	beq	238cc <myhtml_stream_buffer_entry_destroy@@Base+0x20>
   238c8:	bl	10dcc <mycore_free@plt>
   238cc:	cmp	r5, #0
   238d0:	bne	238dc <myhtml_stream_buffer_entry_destroy@@Base+0x30>
   238d4:	mov	r0, r4
   238d8:	pop	{r4, r5, r6, pc}
   238dc:	mov	r0, r4
   238e0:	bl	10dcc <mycore_free@plt>
   238e4:	mov	r4, #0
   238e8:	b	238d4 <myhtml_stream_buffer_entry_destroy@@Base+0x28>

000238ec <myhtml_stream_buffer_clean@@Base>:
   238ec:	cmp	r0, #0
   238f0:	movne	r3, #0
   238f4:	strne	r3, [r0, #4]
   238f8:	bx	lr

000238fc <myhtml_stream_buffer_destroy@@Base>:
   238fc:	push	{r4, r5, r6, r7, r8, lr}
   23900:	subs	r6, r0, #0
   23904:	beq	23960 <myhtml_stream_buffer_destroy@@Base+0x64>
   23908:	ldr	r0, [r6]
   2390c:	mov	r8, r1
   23910:	cmp	r0, #0
   23914:	beq	23958 <myhtml_stream_buffer_destroy@@Base+0x5c>
   23918:	ldr	r3, [r6, #4]
   2391c:	cmp	r3, #0
   23920:	beq	23954 <myhtml_stream_buffer_destroy@@Base+0x58>
   23924:	mov	r4, #0
   23928:	mov	r5, r4
   2392c:	mov	r7, r4
   23930:	add	r0, r0, r4
   23934:	mov	r1, r7
   23938:	bl	10148 <myhtml_stream_buffer_entry_destroy@plt>
   2393c:	ldr	r3, [r6, #4]
   23940:	add	r5, r5, #1
   23944:	cmp	r3, r5
   23948:	ldr	r0, [r6]
   2394c:	add	r4, r4, #12
   23950:	bhi	23930 <myhtml_stream_buffer_destroy@@Base+0x34>
   23954:	bl	10dcc <mycore_free@plt>
   23958:	cmp	r8, #0
   2395c:	bne	23968 <myhtml_stream_buffer_destroy@@Base+0x6c>
   23960:	mov	r0, r6
   23964:	pop	{r4, r5, r6, r7, r8, pc}
   23968:	mov	r0, r6
   2396c:	bl	10dcc <mycore_free@plt>
   23970:	mov	r6, #0
   23974:	b	23960 <myhtml_stream_buffer_destroy@@Base+0x64>

00023978 <myhtml_stream_buffer_add_entry@@Base>:
   23978:	push	{r4, r5, r6, r7, r8, lr}
   2397c:	mov	r6, r1
   23980:	ldr	r3, [r0, #4]
   23984:	ldr	r1, [r0, #8]
   23988:	mov	r4, r0
   2398c:	cmp	r3, r1
   23990:	bcs	239c8 <myhtml_stream_buffer_add_entry@@Base+0x50>
   23994:	ldr	r5, [r0]
   23998:	add	r3, r3, r3, lsl #1
   2399c:	mov	r1, r6
   239a0:	add	r5, r5, r3, lsl #2
   239a4:	mov	r0, r5
   239a8:	bl	10808 <myhtml_stream_buffer_entry_init@plt>
   239ac:	cmp	r0, #0
   239b0:	bne	23a08 <myhtml_stream_buffer_add_entry@@Base+0x90>
   239b4:	ldr	r3, [r4, #4]
   239b8:	mov	r0, r5
   239bc:	add	r3, r3, #1
   239c0:	str	r3, [r4, #4]
   239c4:	pop	{r4, r5, r6, r7, r8, pc}
   239c8:	lsl	r7, r1, #1
   239cc:	add	r1, r7, r1, lsl #2
   239d0:	lsl	r1, r1, #2
   239d4:	bl	fbd8 <mycore_realloc@plt>
   239d8:	subs	r5, r0, #0
   239dc:	beq	23a08 <myhtml_stream_buffer_add_entry@@Base+0x90>
   239e0:	ldr	r0, [r4, #8]
   239e4:	mov	r1, #0
   239e8:	sub	r2, r7, r0
   239ec:	add	r0, r0, r0, lsl #1
   239f0:	add	r0, r5, r0, lsl #2
   239f4:	bl	108b0 <memset@plt>
   239f8:	ldr	r3, [r4, #4]
   239fc:	str	r5, [r4]
   23a00:	str	r7, [r4, #8]
   23a04:	b	23998 <myhtml_stream_buffer_add_entry@@Base+0x20>
   23a08:	mov	r5, #0
   23a0c:	mov	r0, r5
   23a10:	pop	{r4, r5, r6, r7, r8, pc}

00023a14 <myhtml_stream_buffer_current_entry@@Base>:
   23a14:	ldr	r3, [r0, #4]
   23a18:	cmp	r3, #0
   23a1c:	addne	r3, r3, r3, lsl #1
   23a20:	ldrne	r2, [r0]
   23a24:	lslne	r0, r3, #2
   23a28:	subne	r0, r0, #12
   23a2c:	addne	r0, r2, r0
   23a30:	moveq	r0, r3
   23a34:	bx	lr

00023a38 <myhtml_tag_create@@Base>:
   23a38:	mov	r0, #20
   23a3c:	b	10c94 <mycore_malloc@plt>

00023a40 <myhtml_tag_clean@@Base>:
   23a40:	push	{r4, lr}
   23a44:	mov	r3, #252	; 0xfc
   23a48:	mov	r4, r0
   23a4c:	str	r3, [r0, #8]
   23a50:	ldr	r0, [r0, #4]
   23a54:	bl	10250 <mcsimple_clean@plt>
   23a58:	ldr	r0, [r4, #16]
   23a5c:	ldr	r1, [r4, #12]
   23a60:	bl	106e8 <mchar_async_node_clean@plt>
   23a64:	ldr	r0, [r4]
   23a68:	pop	{r4, lr}
   23a6c:	b	102f8 <mctree_clean@plt>

00023a70 <myhtml_tag_init@@Base>:
   23a70:	push	{r4, r5, r6, lr}
   23a74:	sub	sp, sp, #8
   23a78:	mov	r4, r1
   23a7c:	mov	r6, r0
   23a80:	bl	102c8 <mcsimple_create@plt>
   23a84:	cmp	r0, #0
   23a88:	str	r0, [r4, #4]
   23a8c:	ldreq	r5, [pc, #104]	; 23afc <myhtml_tag_init@@Base+0x8c>
   23a90:	beq	23af0 <myhtml_tag_init@@Base+0x80>
   23a94:	mov	r3, #44	; 0x2c
   23a98:	mov	r2, #1024	; 0x400
   23a9c:	mov	r1, #128	; 0x80
   23aa0:	bl	10454 <mcsimple_init@plt>
   23aa4:	add	r1, sp, #4
   23aa8:	ldr	r0, [r6, #4]
   23aac:	bl	10298 <mchar_async_node_add@plt>
   23ab0:	str	r0, [r4, #12]
   23ab4:	mov	r0, #2
   23ab8:	bl	10658 <mctree_create@plt>
   23abc:	ldr	r5, [sp, #4]
   23ac0:	ldr	r2, [r6, #4]
   23ac4:	mov	r3, #252	; 0xfc
   23ac8:	cmp	r5, #0
   23acc:	str	r2, [r4, #16]
   23ad0:	str	r3, [r4, #8]
   23ad4:	str	r0, [r4]
   23ad8:	bne	23af0 <myhtml_tag_init@@Base+0x80>
   23adc:	cmp	r0, #0
   23ae0:	moveq	r5, #2
   23ae4:	beq	23af0 <myhtml_tag_init@@Base+0x80>
   23ae8:	mov	r0, r4
   23aec:	bl	11078 <myhtml_tag_clean@plt>
   23af0:	mov	r0, r5
   23af4:	add	sp, sp, #8
   23af8:	pop	{r4, r5, r6, pc}
   23afc:	muleq	r0, r0, r1

00023b00 <myhtml_tag_destroy@@Base>:
   23b00:	push	{r4, lr}
   23b04:	subs	r4, r0, #0
   23b08:	beq	23b3c <myhtml_tag_destroy@@Base+0x3c>
   23b0c:	ldr	r0, [r4]
   23b10:	bl	100b8 <mctree_destroy@plt>
   23b14:	mov	r1, #1
   23b18:	str	r0, [r4]
   23b1c:	ldr	r0, [r4, #4]
   23b20:	bl	103a0 <mcsimple_destroy@plt>
   23b24:	ldr	r1, [r4, #12]
   23b28:	str	r0, [r4, #4]
   23b2c:	ldr	r0, [r4, #16]
   23b30:	bl	10c58 <mchar_async_node_delete@plt>
   23b34:	mov	r0, r4
   23b38:	bl	10dcc <mycore_free@plt>
   23b3c:	mov	r0, #0
   23b40:	pop	{r4, pc}

00023b44 <myhtml_tag_add@@Base>:
   23b44:	push	{r4, r5, r6, r7, r8, r9, lr}
   23b48:	sub	sp, sp, #12
   23b4c:	mov	r5, r0
   23b50:	mov	r6, r2
   23b54:	mov	r4, r1
   23b58:	add	r2, r2, #1
   23b5c:	ldr	r1, [r0, #12]
   23b60:	ldr	r0, [r0, #16]
   23b64:	ldrb	r9, [sp, #40]	; 0x28
   23b68:	mov	r8, r3
   23b6c:	bl	10910 <mchar_async_malloc@plt>
   23b70:	cmp	r9, #0
   23b74:	mov	r7, r0
   23b78:	beq	23c1c <myhtml_tag_add@@Base+0xd8>
   23b7c:	cmp	r6, #0
   23b80:	beq	23bb0 <myhtml_tag_add@@Base+0x6c>
   23b84:	mov	r1, r4
   23b88:	add	lr, r4, r6
   23b8c:	sub	r2, r0, #1
   23b90:	ldrb	r3, [r1], #1
   23b94:	sub	ip, r3, #65	; 0x41
   23b98:	cmp	ip, #25
   23b9c:	orr	r0, r3, #96	; 0x60
   23ba0:	movls	r3, r0
   23ba4:	cmp	r1, lr
   23ba8:	strb	r3, [r2, #1]!
   23bac:	bne	23b90 <myhtml_tag_add@@Base+0x4c>
   23bb0:	mov	r3, #0
   23bb4:	strb	r3, [r7, r6]
   23bb8:	ldr	r0, [r5, #4]
   23bbc:	bl	1073c <mcsimple_malloc@plt>
   23bc0:	mov	r4, #0
   23bc4:	mov	r2, r6
   23bc8:	mov	r1, r7
   23bcc:	mov	r9, r0
   23bd0:	mov	r3, r9
   23bd4:	ldr	r0, [r5]
   23bd8:	str	r4, [sp]
   23bdc:	bl	10958 <mctree_insert@plt>
   23be0:	ldr	r0, [r5, #8]
   23be4:	str	r8, [r9, #12]
   23be8:	add	r2, r0, #1
   23bec:	stm	r9, {r0, r7}
   23bf0:	str	r6, [r9, #8]
   23bf4:	str	r2, [r5, #8]
   23bf8:	str	r4, [r9, #16]
   23bfc:	str	r4, [r9, #20]
   23c00:	str	r4, [r9, #24]
   23c04:	str	r4, [r9, #28]
   23c08:	str	r4, [r9, #32]
   23c0c:	str	r4, [r9, #36]	; 0x24
   23c10:	str	r4, [r9, #40]	; 0x28
   23c14:	add	sp, sp, #12
   23c18:	pop	{r4, r5, r6, r7, r8, r9, pc}
   23c1c:	mov	r1, r4
   23c20:	mov	r2, r6
   23c24:	bl	108ec <strncpy@plt>
   23c28:	strb	r9, [r7, r6]
   23c2c:	b	23bb8 <myhtml_tag_add@@Base+0x74>

00023c30 <myhtml_tag_set_category@@Base>:
   23c30:	cmp	r1, #251	; 0xfb
   23c34:	bxls	lr
   23c38:	push	{r4, r5, r6, lr}
   23c3c:	sub	r1, r1, #252	; 0xfc
   23c40:	ldr	r0, [r0, #4]
   23c44:	mov	r5, r3
   23c48:	mov	r4, r2
   23c4c:	bl	10fa0 <mcsimple_get_by_absolute_position@plt>
   23c50:	add	r2, r4, #4
   23c54:	str	r5, [r0, r2, lsl #2]
   23c58:	pop	{r4, r5, r6, pc}

00023c5c <myhtml_tag_get_by_id@@Base>:
   23c5c:	cmp	r1, #251	; 0xfb
   23c60:	bhi	23c6c <myhtml_tag_get_by_id@@Base+0x10>
   23c64:	mov	r0, r1
   23c68:	b	fff8 <myhtml_tag_static_get_by_id@plt>
   23c6c:	sub	r1, r1, #252	; 0xfc
   23c70:	ldr	r0, [r0, #4]
   23c74:	b	10fa0 <mcsimple_get_by_absolute_position@plt>

00023c78 <myhtml_tag_get_by_name@@Base>:
   23c78:	push	{r4, r5, r6, lr}
   23c7c:	mov	r4, r1
   23c80:	mov	r6, r0
   23c84:	mov	r1, r2
   23c88:	mov	r0, r4
   23c8c:	mov	r5, r2
   23c90:	bl	1091c <myhtml_tag_static_search@plt>
   23c94:	cmp	r0, #0
   23c98:	popne	{r4, r5, r6, pc}
   23c9c:	mov	r2, r5
   23ca0:	mov	r1, r4
   23ca4:	ldr	r0, [r6]
   23ca8:	bl	10748 <mctree_search_lowercase@plt>
   23cac:	ldr	r3, [r6]
   23cb0:	ldr	r3, [r3]
   23cb4:	rsb	r0, r0, r0, lsl #3
   23cb8:	add	r3, r3, r0, lsl #2
   23cbc:	ldr	r0, [r3, #8]
   23cc0:	pop	{r4, r5, r6, pc}

00023cc4 <myhtml_tag_static_search@@Base>:
   23cc4:	add	r3, r0, r1
   23cc8:	push	{r4, r5, r6, r7, r8, lr}
   23ccc:	mov	r6, r1
   23cd0:	mov	r7, r0
   23cd4:	ldrb	r3, [r3, #-1]
   23cd8:	ldrb	r0, [r0]
   23cdc:	ldr	r1, [pc, #152]	; 23d7c <myhtml_tag_static_search@@Base+0xb8>
   23ce0:	ldr	r2, [pc, #152]	; 23d80 <myhtml_tag_static_search@@Base+0xbc>
   23ce4:	add	r1, pc, r1
   23ce8:	ldr	r5, [pc, #148]	; 23d84 <myhtml_tag_static_search@@Base+0xc0>
   23cec:	ldrb	r3, [r1, r3]
   23cf0:	ldrb	r1, [r1, r0]
   23cf4:	add	r5, pc, r5
   23cf8:	smulbb	r3, r3, r1
   23cfc:	mul	r3, r6, r3
   23d00:	umull	r1, r2, r2, r3
   23d04:	sub	r1, r3, r2
   23d08:	add	r2, r2, r1, lsr #1
   23d0c:	lsr	r2, r2, #8
   23d10:	rsb	r1, r2, r2, lsl #4
   23d14:	rsb	r2, r2, r1, lsl #5
   23d18:	sub	r3, r3, r2
   23d1c:	add	r3, r3, #1
   23d20:	b	23d2c <myhtml_tag_static_search@@Base+0x68>
   23d24:	bcc	23d70 <myhtml_tag_static_search@@Base+0xac>
   23d28:	ldr	r3, [r4, #4]
   23d2c:	add	r3, r3, r3, lsl #1
   23d30:	ldr	r8, [r5, r3, lsl #2]
   23d34:	add	r4, r5, r3, lsl #2
   23d38:	cmp	r8, #0
   23d3c:	beq	23d70 <myhtml_tag_static_search@@Base+0xac>
   23d40:	ldr	r3, [r8, #8]
   23d44:	cmp	r6, r3
   23d48:	bne	23d24 <myhtml_tag_static_search@@Base+0x60>
   23d4c:	mov	r2, r6
   23d50:	mov	r1, r7
   23d54:	ldr	r0, [r8, #4]
   23d58:	bl	102a4 <mycore_strncasecmp@plt>
   23d5c:	cmp	r0, #0
   23d60:	beq	23d74 <myhtml_tag_static_search@@Base+0xb0>
   23d64:	ldr	r3, [r4, #4]
   23d68:	cmp	r3, #0
   23d6c:	bne	23d2c <myhtml_tag_static_search@@Base+0x68>
   23d70:	mov	r8, #0
   23d74:	mov	r0, r8
   23d78:	pop	{r4, r5, r6, r7, r8, pc}
   23d7c:	andeq	r8, sp, r0, asr r1
   23d80:			; <UNDEFINED> instruction: 0x11a3019b
   23d84:	andeq	sp, lr, r0, asr #16

00023d88 <myhtml_tag_static_get_by_id@@Base>:
   23d88:	ldr	r3, [pc, #20]	; 23da4 <myhtml_tag_static_get_by_id@@Base+0x1c>
   23d8c:	mov	r2, #44	; 0x2c
   23d90:	add	r3, pc, r3
   23d94:	sub	r3, r3, #1680	; 0x690
   23d98:	sub	r3, r3, #12
   23d9c:	mla	r0, r2, r0, r3
   23da0:	bx	lr
   23da4:	muleq	lr, ip, r7

00023da8 <myhtml_token_create@@Base>:
   23da8:	push	{r4, r5, r6, r7, r8, lr}
   23dac:	cmp	r1, #0
   23db0:	mov	r7, r0
   23db4:	mov	r0, #24
   23db8:	movne	r6, r1
   23dbc:	moveq	r6, #4096	; 0x1000
   23dc0:	bl	10c94 <mycore_malloc@plt>
   23dc4:	subs	r4, r0, #0
   23dc8:	beq	23e40 <myhtml_token_create@@Base+0x98>
   23dcc:	bl	fd58 <mcobject_async_create@plt>
   23dd0:	cmp	r0, #0
   23dd4:	mov	r5, r0
   23dd8:	str	r0, [r4, #4]
   23ddc:	beq	23e50 <myhtml_token_create@@Base+0xa8>
   23de0:	bl	fd58 <mcobject_async_create@plt>
   23de4:	cmp	r0, #0
   23de8:	mov	r5, r0
   23dec:	str	r0, [r4, #8]
   23df0:	beq	23e48 <myhtml_token_create@@Base+0xa0>
   23df4:	mov	r3, #52	; 0x34
   23df8:	mov	r2, r6
   23dfc:	mov	r1, #128	; 0x80
   23e00:	ldr	r0, [r4, #4]
   23e04:	bl	fc80 <mcobject_async_init@plt>
   23e08:	mov	r2, r6
   23e0c:	mov	r3, #68	; 0x44
   23e10:	mov	r1, #128	; 0x80
   23e14:	ldr	r0, [r4, #8]
   23e18:	bl	fc80 <mcobject_async_init@plt>
   23e1c:	mov	r1, #0
   23e20:	ldr	r0, [r4, #4]
   23e24:	bl	10a90 <mcobject_async_node_add@plt>
   23e28:	mov	r1, #0
   23e2c:	str	r0, [r4, #12]
   23e30:	ldr	r0, [r4, #8]
   23e34:	bl	10a90 <mcobject_async_node_add@plt>
   23e38:	str	r7, [r4]
   23e3c:	str	r0, [r4, #16]
   23e40:	mov	r0, r4
   23e44:	pop	{r4, r5, r6, r7, r8, pc}
   23e48:	ldr	r0, [r4, #4]
   23e4c:	bl	10dcc <mycore_free@plt>
   23e50:	mov	r0, r4
   23e54:	bl	10dcc <mycore_free@plt>
   23e58:	mov	r4, r5
   23e5c:	b	23e40 <myhtml_token_create@@Base+0x98>

00023e60 <myhtml_token_clean@@Base>:
   23e60:	push	{r4, lr}
   23e64:	mov	r4, r0
   23e68:	ldr	r1, [r0, #12]
   23e6c:	ldr	r0, [r0, #4]
   23e70:	bl	10880 <mcobject_async_node_clean@plt>
   23e74:	ldr	r1, [r4, #16]
   23e78:	ldr	r0, [r4, #8]
   23e7c:	pop	{r4, lr}
   23e80:	b	10880 <mcobject_async_node_clean@plt>

00023e84 <myhtml_token_clean_all@@Base>:
   23e84:	push	{r4, lr}
   23e88:	mov	r4, r0
   23e8c:	ldr	r0, [r0, #4]
   23e90:	bl	11054 <mcobject_async_clean@plt>
   23e94:	ldr	r0, [r4, #8]
   23e98:	pop	{r4, lr}
   23e9c:	b	11054 <mcobject_async_clean@plt>

00023ea0 <myhtml_token_destroy@@Base>:
   23ea0:	push	{r4, lr}
   23ea4:	subs	r4, r0, #0
   23ea8:	beq	23ee4 <myhtml_token_destroy@@Base+0x44>
   23eac:	ldr	r0, [r4, #4]
   23eb0:	cmp	r0, #0
   23eb4:	beq	23ec4 <myhtml_token_destroy@@Base+0x24>
   23eb8:	mov	r1, #1
   23ebc:	bl	10b20 <mcobject_async_destroy@plt>
   23ec0:	str	r0, [r4, #4]
   23ec4:	ldr	r0, [r4, #8]
   23ec8:	cmp	r0, #0
   23ecc:	beq	23edc <myhtml_token_destroy@@Base+0x3c>
   23ed0:	mov	r1, #1
   23ed4:	bl	10b20 <mcobject_async_destroy@plt>
   23ed8:	str	r0, [r4, #8]
   23edc:	mov	r0, r4
   23ee0:	bl	10dcc <mycore_free@plt>
   23ee4:	mov	r0, #0
   23ee8:	pop	{r4, pc}

00023eec <myhtml_token_node_clean@@Base>:
   23eec:	push	{r4, lr}
   23ef0:	mov	r2, #52	; 0x34
   23ef4:	mov	r4, r0
   23ef8:	mov	r1, #0
   23efc:	bl	108b0 <memset@plt>
   23f00:	mov	r3, #8
   23f04:	str	r3, [r4, #48]	; 0x30
   23f08:	add	r0, r4, #4
   23f0c:	pop	{r4, lr}
   23f10:	b	11090 <mycore_string_clean_all@plt>

00023f14 <myhtml_token_node_create@@Base>:
   23f14:	push	{r4, lr}
   23f18:	mov	r2, #0
   23f1c:	ldr	r0, [r0, #4]
   23f20:	bl	10bbc <mcobject_async_malloc@plt>
   23f24:	subs	r4, r0, #0
   23f28:	beq	23f30 <myhtml_token_node_create@@Base+0x1c>
   23f2c:	bl	10f7c <myhtml_token_node_clean@plt>
   23f30:	mov	r0, r4
   23f34:	pop	{r4, pc}

00023f38 <myhtml_token_attr_clean@@Base>:
   23f38:	push	{r4, lr}
   23f3c:	mov	r2, #68	; 0x44
   23f40:	mov	r4, r0
   23f44:	mov	r1, #0
   23f48:	bl	108b0 <memset@plt>
   23f4c:	mov	r3, #1
   23f50:	add	r0, r4, #8
   23f54:	str	r3, [r4, #64]	; 0x40
   23f58:	bl	11090 <mycore_string_clean_all@plt>
   23f5c:	add	r0, r4, #28
   23f60:	pop	{r4, lr}
   23f64:	b	11090 <mycore_string_clean_all@plt>

00023f68 <myhtml_token_attr_create@@Base>:
   23f68:	push	{r4, lr}
   23f6c:	mov	r2, #0
   23f70:	ldr	r0, [r0, #8]
   23f74:	bl	10bbc <mcobject_async_malloc@plt>
   23f78:	subs	r4, r0, #0
   23f7c:	beq	23f84 <myhtml_token_attr_create@@Base+0x1c>
   23f80:	bl	10004 <myhtml_token_attr_clean@plt>
   23f84:	mov	r0, r4
   23f88:	pop	{r4, pc}

00023f8c <myhtml_token_node_tag_id@@Base>:
   23f8c:	ldr	r0, [r0]
   23f90:	bx	lr

00023f94 <myhtml_token_node_raw_position@@Base>:
   23f94:	cmp	r1, #0
   23f98:	moveq	r3, r1
   23f9c:	ldrne	r3, [r1, #24]
   23fa0:	ldrne	r1, [r1, #28]
   23fa4:	str	r3, [r0]
   23fa8:	str	r1, [r0, #4]
   23fac:	bx	lr

00023fb0 <myhtml_token_node_element_position@@Base>:
   23fb0:	cmp	r1, #0
   23fb4:	moveq	r3, r1
   23fb8:	ldrne	r3, [r1, #32]
   23fbc:	ldrne	r1, [r1, #36]	; 0x24
   23fc0:	str	r3, [r0]
   23fc4:	str	r1, [r0, #4]
   23fc8:	bx	lr

00023fcc <myhtml_token_node_attribute_first@@Base>:
   23fcc:	ldr	r0, [r0, #40]	; 0x28
   23fd0:	bx	lr

00023fd4 <myhtml_token_node_attribute_last@@Base>:
   23fd4:	ldr	r0, [r0, #44]	; 0x2c
   23fd8:	bx	lr

00023fdc <myhtml_token_node_text@@Base>:
   23fdc:	cmp	r1, #0
   23fe0:	ldrne	r3, [r0, #12]
   23fe4:	ldr	r0, [r0, #4]
   23fe8:	strne	r3, [r1]
   23fec:	bx	lr

00023ff0 <myhtml_token_node_string@@Base>:
   23ff0:	add	r0, r0, #4
   23ff4:	bx	lr

00023ff8 <myhtml_token_node_is_close@@Base>:
   23ff8:	ldr	r0, [r0, #48]	; 0x30
   23ffc:	and	r0, r0, #1
   24000:	bx	lr

00024004 <myhtml_token_node_is_close_self@@Base>:
   24004:	ldr	r0, [r0, #48]	; 0x30
   24008:	lsr	r0, r0, #1
   2400c:	and	r0, r0, #1
   24010:	bx	lr

00024014 <myhtml_token_node_wait_for_done@@Base>:
   24014:	ldr	r3, [r1, #48]	; 0x30
   24018:	tst	r3, #4
   2401c:	bxne	lr
   24020:	push	{r4, r5, r6, lr}
   24024:	mov	r4, r1
   24028:	mov	r5, r0
   2402c:	ldr	r3, [r5]
   24030:	ldr	r3, [r3]
   24034:	ldr	r3, [r3]
   24038:	ldr	r0, [r3, #24]
   2403c:	bl	100a0 <mythread_nanosleep_sleep@plt>
   24040:	ldr	r3, [r4, #48]	; 0x30
   24044:	tst	r3, #4
   24048:	beq	2402c <myhtml_token_node_wait_for_done@@Base+0x18>
   2404c:	pop	{r4, r5, r6, pc}

00024050 <myhtml_token_set_done@@Base>:
   24050:	ldr	r3, [r0, #48]	; 0x30
   24054:	orr	r3, r3, #4
   24058:	str	r3, [r0, #48]	; 0x30
   2405c:	bx	lr

00024060 <myhtml_token_node_text_append@@Base>:
   24060:	ldr	r0, [r0]
   24064:	push	{r4, r5, r6, lr}
   24068:	add	r4, r1, #4
   2406c:	mov	r5, r3
   24070:	mov	r6, r2
   24074:	ldr	r1, [r0, #52]	; 0x34
   24078:	mov	r2, r4
   2407c:	add	r3, r3, #2
   24080:	ldr	r0, [r0, #4]
   24084:	bl	10610 <mycore_string_init@plt>
   24088:	mov	r2, r5
   2408c:	mov	r1, r6
   24090:	mov	r0, r4
   24094:	pop	{r4, r5, r6, lr}
   24098:	b	108d4 <mycore_string_append@plt>

0002409c <myhtml_token_node_attr_append@@Base>:
   2409c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   240a0:	mov	r7, r0
   240a4:	mov	r5, r1
   240a8:	mov	sl, r2
   240ac:	ldr	r0, [r0, #8]
   240b0:	mov	r2, #0
   240b4:	ldr	r1, [sp, #40]	; 0x28
   240b8:	mov	r8, r3
   240bc:	ldr	r6, [sp, #36]	; 0x24
   240c0:	bl	10bbc <mcobject_async_malloc@plt>
   240c4:	mov	r3, #0
   240c8:	cmp	r8, #0
   240cc:	mov	r4, r0
   240d0:	str	r3, [r0]
   240d4:	beq	24168 <myhtml_token_node_attr_append@@Base+0xcc>
   240d8:	ldr	r3, [r7]
   240dc:	add	r9, r0, #8
   240e0:	mov	r2, r9
   240e4:	ldr	r1, [r3, #52]	; 0x34
   240e8:	ldr	r0, [r3, #4]
   240ec:	add	r3, r8, #1
   240f0:	bl	10610 <mycore_string_init@plt>
   240f4:	mov	r2, r8
   240f8:	mov	r1, sl
   240fc:	mov	r0, r9
   24100:	bl	10688 <mycore_string_append_lowercase@plt>
   24104:	cmp	r6, #0
   24108:	beq	24178 <myhtml_token_node_attr_append@@Base+0xdc>
   2410c:	ldr	r3, [r7]
   24110:	add	r7, r4, #28
   24114:	mov	r2, r7
   24118:	ldr	r1, [r3, #52]	; 0x34
   2411c:	ldr	r0, [r3, #4]
   24120:	add	r3, r6, #1
   24124:	bl	10610 <mycore_string_init@plt>
   24128:	mov	r2, r6
   2412c:	ldr	r1, [sp, #32]
   24130:	mov	r0, r7
   24134:	bl	108d4 <mycore_string_append@plt>
   24138:	ldr	r3, [r5, #40]	; 0x28
   2413c:	mov	r0, r4
   24140:	cmp	r3, #0
   24144:	streq	r3, [r4, #4]
   24148:	ldrne	r3, [r5, #44]	; 0x2c
   2414c:	streq	r4, [r5, #40]	; 0x28
   24150:	strne	r4, [r3]
   24154:	strne	r3, [r4, #4]
   24158:	mov	r3, #1
   2415c:	str	r4, [r5, #44]	; 0x2c
   24160:	str	r3, [r4, #64]	; 0x40
   24164:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24168:	add	r0, r0, #8
   2416c:	bl	11090 <mycore_string_clean_all@plt>
   24170:	cmp	r6, #0
   24174:	bne	2410c <myhtml_token_node_attr_append@@Base+0x70>
   24178:	add	r0, r4, #28
   2417c:	bl	11090 <mycore_string_clean_all@plt>
   24180:	b	24138 <myhtml_token_node_attr_append@@Base+0x9c>

00024184 <myhtml_token_node_attr_append_with_convert_encoding@@Base>:
   24184:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24188:	mov	r7, r0
   2418c:	mov	r5, r1
   24190:	mov	sl, r2
   24194:	ldr	r0, [r0, #8]
   24198:	mov	r2, #0
   2419c:	ldr	r1, [sp, #40]	; 0x28
   241a0:	mov	r8, r3
   241a4:	ldr	r6, [sp, #36]	; 0x24
   241a8:	bl	10bbc <mcobject_async_malloc@plt>
   241ac:	mov	r3, #0
   241b0:	cmp	r8, #0
   241b4:	mov	r4, r0
   241b8:	str	r3, [r0]
   241bc:	beq	24238 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xb4>
   241c0:	ldr	r3, [r7]
   241c4:	add	r9, r0, #8
   241c8:	mov	r2, r9
   241cc:	ldr	r1, [r3, #52]	; 0x34
   241d0:	ldr	r0, [r3, #4]
   241d4:	add	r3, r8, #1
   241d8:	bl	10610 <mycore_string_init@plt>
   241dc:	ldr	r3, [sp, #44]	; 0x2c
   241e0:	mov	r2, r8
   241e4:	cmp	r3, #0
   241e8:	mov	r1, sl
   241ec:	mov	r0, r9
   241f0:	bne	24284 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x100>
   241f4:	bl	10688 <mycore_string_append_lowercase@plt>
   241f8:	cmp	r6, #0
   241fc:	bne	242c4 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x140>
   24200:	add	r0, r4, #28
   24204:	bl	11090 <mycore_string_clean_all@plt>
   24208:	ldr	r3, [r5, #40]	; 0x28
   2420c:	mov	r0, r4
   24210:	cmp	r3, #0
   24214:	streq	r3, [r4, #4]
   24218:	ldrne	r3, [r5, #44]	; 0x2c
   2421c:	streq	r4, [r5, #40]	; 0x28
   24220:	strne	r4, [r3]
   24224:	strne	r3, [r4, #4]
   24228:	mov	r3, #1
   2422c:	str	r4, [r5, #44]	; 0x2c
   24230:	str	r3, [r4, #64]	; 0x40
   24234:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24238:	add	r0, r0, #8
   2423c:	bl	11090 <mycore_string_clean_all@plt>
   24240:	cmp	r6, #0
   24244:	beq	24200 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x7c>
   24248:	ldr	r3, [r7]
   2424c:	add	r7, r4, #28
   24250:	mov	r2, r7
   24254:	ldr	r1, [r3, #52]	; 0x34
   24258:	ldr	r0, [r3, #4]
   2425c:	add	r3, r6, #1
   24260:	bl	10610 <mycore_string_init@plt>
   24264:	ldr	r3, [sp, #44]	; 0x2c
   24268:	cmp	r3, #0
   2426c:	bne	242b0 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x12c>
   24270:	mov	r2, r6
   24274:	mov	r0, r7
   24278:	ldr	r1, [sp, #32]
   2427c:	bl	108d4 <mycore_string_append@plt>
   24280:	b	24208 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x84>
   24284:	bl	fe3c <myencoding_string_append_lowercase_ascii@plt>
   24288:	cmp	r6, #0
   2428c:	beq	24200 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x7c>
   24290:	ldr	r3, [r7]
   24294:	add	r7, r4, #28
   24298:	mov	r2, r7
   2429c:	ldr	r1, [r3, #52]	; 0x34
   242a0:	ldr	r0, [r3, #4]
   242a4:	add	r3, r6, #1
   242a8:	bl	10610 <mycore_string_init@plt>
   242ac:	ldr	r3, [sp, #44]	; 0x2c
   242b0:	mov	r2, r6
   242b4:	mov	r0, r7
   242b8:	ldr	r1, [sp, #32]
   242bc:	bl	10460 <myencoding_string_append@plt>
   242c0:	b	24208 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x84>
   242c4:	ldr	r3, [r7]
   242c8:	add	r7, r4, #28
   242cc:	mov	r2, r7
   242d0:	ldr	r1, [r3, #52]	; 0x34
   242d4:	ldr	r0, [r3, #4]
   242d8:	add	r3, r6, #1
   242dc:	bl	10610 <mycore_string_init@plt>
   242e0:	mov	r2, r6
   242e4:	mov	r0, r7
   242e8:	ldr	r1, [sp, #32]
   242ec:	bl	108d4 <mycore_string_append@plt>
   242f0:	b	24208 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x84>

000242f4 <myhtml_token_attr_copy@@Base>:
   242f4:	push	{r4, r5, r6, r7, r8, lr}
   242f8:	mov	r5, r1
   242fc:	mov	r7, r0
   24300:	mov	r1, r3
   24304:	mov	r6, r2
   24308:	ldr	r0, [r0, #8]
   2430c:	mov	r2, #0
   24310:	bl	10bbc <mcobject_async_malloc@plt>
   24314:	ldr	r3, [r5, #16]
   24318:	mov	r2, #0
   2431c:	cmp	r3, r2
   24320:	mov	r4, r0
   24324:	str	r2, [r0]
   24328:	beq	243c0 <myhtml_token_attr_copy@@Base+0xcc>
   2432c:	ldr	r2, [r7]
   24330:	add	r8, r0, #8
   24334:	add	r3, r3, #1
   24338:	ldr	r1, [r2, #52]	; 0x34
   2433c:	ldr	r0, [r2, #4]
   24340:	mov	r2, r8
   24344:	bl	10610 <mycore_string_init@plt>
   24348:	mov	r0, r8
   2434c:	ldr	r2, [r5, #16]
   24350:	ldr	r1, [r5, #8]
   24354:	bl	10688 <mycore_string_append_lowercase@plt>
   24358:	ldr	r3, [r5, #36]	; 0x24
   2435c:	cmp	r3, #0
   24360:	beq	243d4 <myhtml_token_attr_copy@@Base+0xe0>
   24364:	ldr	r2, [r7]
   24368:	add	r7, r4, #28
   2436c:	add	r3, r3, #1
   24370:	ldr	r1, [r2, #52]	; 0x34
   24374:	ldr	r0, [r2, #4]
   24378:	mov	r2, r7
   2437c:	bl	10610 <mycore_string_init@plt>
   24380:	mov	r0, r7
   24384:	ldr	r2, [r5, #36]	; 0x24
   24388:	ldr	r1, [r5, #28]
   2438c:	bl	108d4 <mycore_string_append@plt>
   24390:	ldr	r3, [r6, #40]	; 0x28
   24394:	mov	r0, #1
   24398:	cmp	r3, #0
   2439c:	streq	r3, [r4, #4]
   243a0:	ldrne	r3, [r6, #44]	; 0x2c
   243a4:	streq	r4, [r6, #40]	; 0x28
   243a8:	strne	r4, [r3]
   243ac:	strne	r3, [r4, #4]
   243b0:	ldr	r3, [r5, #64]	; 0x40
   243b4:	str	r4, [r6, #44]	; 0x2c
   243b8:	str	r3, [r4, #64]	; 0x40
   243bc:	pop	{r4, r5, r6, r7, r8, pc}
   243c0:	add	r0, r0, #8
   243c4:	bl	11090 <mycore_string_clean_all@plt>
   243c8:	ldr	r3, [r5, #36]	; 0x24
   243cc:	cmp	r3, #0
   243d0:	bne	24364 <myhtml_token_attr_copy@@Base+0x70>
   243d4:	add	r0, r4, #28
   243d8:	bl	11090 <mycore_string_clean_all@plt>
   243dc:	b	24390 <myhtml_token_attr_copy@@Base+0x9c>

000243e0 <myhtml_token_node_attr_copy@@Base>:
   243e0:	push	{r4, r5, r6, r7, r8, lr}
   243e4:	ldr	r4, [r1, #40]	; 0x28
   243e8:	cmp	r4, #0
   243ec:	popeq	{r4, r5, r6, r7, r8, pc}
   243f0:	mov	r7, r0
   243f4:	mov	r6, r2
   243f8:	mov	r5, r3
   243fc:	mov	r1, r4
   24400:	mov	r3, r5
   24404:	mov	r2, r6
   24408:	mov	r0, r7
   2440c:	bl	10760 <myhtml_token_attr_copy@plt>
   24410:	ldr	r4, [r4]
   24414:	cmp	r4, #0
   24418:	bne	243fc <myhtml_token_node_attr_copy@@Base+0x1c>
   2441c:	pop	{r4, r5, r6, r7, r8, pc}

00024420 <myhtml_token_node_clone@@Base>:
   24420:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24424:	subs	r5, r1, #0
   24428:	beq	244e0 <myhtml_token_node_clone@@Base+0xc0>
   2442c:	mov	r1, r2
   24430:	mov	r6, r0
   24434:	mov	r7, r3
   24438:	ldr	r9, [r0]
   2443c:	bl	10a0c <myhtml_token_node_create@plt>
   24440:	subs	r4, r0, #0
   24444:	beq	244e0 <myhtml_token_node_clone@@Base+0xc0>
   24448:	ldr	r2, [r5]
   2444c:	ldr	r1, [r5, #48]	; 0x30
   24450:	ldr	r3, [r5, #12]
   24454:	str	r2, [r4]
   24458:	ldr	r2, [r5, #24]
   2445c:	str	r1, [r4, #48]	; 0x30
   24460:	ldr	r1, [r5, #28]
   24464:	str	r2, [r4, #24]
   24468:	ldr	r2, [r5, #32]
   2446c:	str	r1, [r4, #28]
   24470:	ldr	r1, [r5, #36]	; 0x24
   24474:	cmp	r3, #0
   24478:	str	r2, [r4, #32]
   2447c:	mov	r2, #0
   24480:	str	r1, [r4, #36]	; 0x24
   24484:	str	r2, [r4, #40]	; 0x28
   24488:	str	r2, [r4, #44]	; 0x2c
   2448c:	bne	244b4 <myhtml_token_node_clone@@Base+0x94>
   24490:	add	r0, r4, #4
   24494:	bl	11090 <mycore_string_clean_all@plt>
   24498:	mov	r3, r7
   2449c:	mov	r1, r5
   244a0:	mov	r0, r6
   244a4:	mov	r2, r4
   244a8:	bl	10580 <myhtml_token_node_attr_copy@plt>
   244ac:	mov	r0, r4
   244b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   244b4:	add	r8, r4, #4
   244b8:	mov	r2, r8
   244bc:	ldr	r1, [r9, #52]	; 0x34
   244c0:	add	r3, r3, #1
   244c4:	ldr	r0, [r9, #4]
   244c8:	bl	10610 <mycore_string_init@plt>
   244cc:	mov	r0, r8
   244d0:	ldr	r2, [r5, #12]
   244d4:	ldr	r1, [r5, #4]
   244d8:	bl	108d4 <mycore_string_append@plt>
   244dc:	b	24498 <myhtml_token_node_clone@@Base+0x78>
   244e0:	mov	r4, #0
   244e4:	b	244ac <myhtml_token_node_clone@@Base+0x8c>

000244e8 <myhtml_token_attr_match@@Base>:
   244e8:	push	{r4, r5, r6, r7, r8, lr}
   244ec:	ldr	r4, [r1, #40]	; 0x28
   244f0:	ldr	r6, [sp, #28]
   244f4:	cmp	r4, #0
   244f8:	beq	24554 <myhtml_token_attr_match@@Base+0x6c>
   244fc:	mov	r7, r2
   24500:	mov	r5, r3
   24504:	b	24514 <myhtml_token_attr_match@@Base+0x2c>
   24508:	ldr	r4, [r4]
   2450c:	cmp	r4, #0
   24510:	beq	24554 <myhtml_token_attr_match@@Base+0x6c>
   24514:	ldr	r1, [r4, #16]
   24518:	cmp	r1, r5
   2451c:	bne	24508 <myhtml_token_attr_match@@Base+0x20>
   24520:	ldr	r3, [r4, #36]	; 0x24
   24524:	cmp	r3, r6
   24528:	bne	24508 <myhtml_token_attr_match@@Base+0x20>
   2452c:	mov	r1, r7
   24530:	ldr	r0, [r4, #8]
   24534:	bl	fbf0 <mycore_strcmp@plt>
   24538:	cmp	r0, #0
   2453c:	bne	24508 <myhtml_token_attr_match@@Base+0x20>
   24540:	ldr	r1, [sp, #24]
   24544:	ldr	r0, [r4, #28]
   24548:	bl	fbf0 <mycore_strcmp@plt>
   2454c:	cmp	r0, #0
   24550:	beq	24558 <myhtml_token_attr_match@@Base+0x70>
   24554:	mov	r4, #0
   24558:	mov	r0, r4
   2455c:	pop	{r4, r5, r6, r7, r8, pc}

00024560 <myhtml_token_attr_match_case@@Base>:
   24560:	push	{r4, r5, r6, r7, r8, lr}
   24564:	ldr	r4, [r1, #40]	; 0x28
   24568:	ldr	r6, [sp, #28]
   2456c:	cmp	r4, #0
   24570:	beq	245cc <myhtml_token_attr_match_case@@Base+0x6c>
   24574:	mov	r7, r2
   24578:	mov	r5, r3
   2457c:	b	2458c <myhtml_token_attr_match_case@@Base+0x2c>
   24580:	ldr	r4, [r4]
   24584:	cmp	r4, #0
   24588:	beq	245cc <myhtml_token_attr_match_case@@Base+0x6c>
   2458c:	ldr	r1, [r4, #16]
   24590:	cmp	r1, r5
   24594:	bne	24580 <myhtml_token_attr_match_case@@Base+0x20>
   24598:	ldr	r3, [r4, #36]	; 0x24
   2459c:	cmp	r3, r6
   245a0:	bne	24580 <myhtml_token_attr_match_case@@Base+0x20>
   245a4:	mov	r1, r7
   245a8:	ldr	r0, [r4, #8]
   245ac:	bl	fbf0 <mycore_strcmp@plt>
   245b0:	cmp	r0, #0
   245b4:	bne	24580 <myhtml_token_attr_match_case@@Base+0x20>
   245b8:	ldr	r1, [sp, #24]
   245bc:	ldr	r0, [r4, #28]
   245c0:	bl	1052c <mycore_strcasecmp@plt>
   245c4:	cmp	r0, #0
   245c8:	beq	245d0 <myhtml_token_attr_match_case@@Base+0x70>
   245cc:	mov	r4, #0
   245d0:	mov	r0, r4
   245d4:	pop	{r4, r5, r6, r7, r8, pc}

000245d8 <_myhtml_token_create_copy_srt@@Base>:
   245d8:	ldr	r0, [r0]
   245dc:	push	{r4, r5, r6, lr}
   245e0:	mov	r4, r2
   245e4:	mov	r6, r1
   245e8:	add	r2, r2, #2
   245ec:	ldr	r1, [r0, #52]	; 0x34
   245f0:	ldr	r0, [r0, #4]
   245f4:	mov	r5, r3
   245f8:	bl	10910 <mchar_async_malloc@plt>
   245fc:	mov	r2, r4
   24600:	mov	r1, r6
   24604:	str	r0, [r5]
   24608:	pop	{r4, r5, r6, lr}
   2460c:	b	102e0 <mycore_string_raw_copy@plt>

00024610 <myhtml_token_strict_doctype_by_token@@Base>:
   24610:	push	{r4, r5, r6, lr}
   24614:	mov	r4, r2
   24618:	ldr	r5, [r1, #40]	; 0x28
   2461c:	mov	r6, r0
   24620:	cmp	r5, #0
   24624:	beq	24634 <myhtml_token_strict_doctype_by_token@@Base+0x24>
   24628:	ldr	r2, [r5, #16]
   2462c:	cmp	r2, #0
   24630:	bne	24688 <myhtml_token_strict_doctype_by_token@@Base+0x78>
   24634:	mov	r3, r4
   24638:	ldr	r1, [pc, #392]	; 247c8 <myhtml_token_strict_doctype_by_token@@Base+0x1b8>
   2463c:	mov	r2, #0
   24640:	strb	r2, [r3], #4
   24644:	mov	r0, r6
   24648:	mov	r2, #1
   2464c:	add	r1, pc, r1
   24650:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   24654:	ldr	r0, [r4, #8]
   24658:	cmp	r0, #0
   2465c:	beq	24664 <myhtml_token_strict_doctype_by_token@@Base+0x54>
   24660:	bl	10dcc <mycore_free@plt>
   24664:	ldr	r0, [r4, #12]
   24668:	mov	r3, #0
   2466c:	cmp	r0, r3
   24670:	str	r3, [r4, #8]
   24674:	beq	2467c <myhtml_token_strict_doctype_by_token@@Base+0x6c>
   24678:	bl	10dcc <mycore_free@plt>
   2467c:	mov	r3, #0
   24680:	str	r3, [r4, #12]
   24684:	pop	{r4, r5, r6, pc}
   24688:	ldr	r1, [r5, #8]
   2468c:	add	r3, r4, #4
   24690:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   24694:	ldr	r0, [pc, #304]	; 247cc <myhtml_token_strict_doctype_by_token@@Base+0x1bc>
   24698:	ldr	r1, [r4, #4]
   2469c:	add	r0, pc, r0
   246a0:	bl	fbf0 <mycore_strcmp@plt>
   246a4:	ldr	r5, [r5]
   246a8:	cmp	r5, #0
   246ac:	clz	r0, r0
   246b0:	lsr	r0, r0, #5
   246b4:	strb	r0, [r4]
   246b8:	beq	247b0 <myhtml_token_strict_doctype_by_token@@Base+0x1a0>
   246bc:	ldr	r3, [r5, #36]	; 0x24
   246c0:	cmp	r3, #0
   246c4:	popeq	{r4, r5, r6, pc}
   246c8:	ldr	r1, [pc, #256]	; 247d0 <myhtml_token_strict_doctype_by_token@@Base+0x1c0>
   246cc:	ldr	r0, [r5, #28]
   246d0:	add	r1, pc, r1
   246d4:	bl	1052c <mycore_strcasecmp@plt>
   246d8:	cmp	r0, #0
   246dc:	bne	2474c <myhtml_token_strict_doctype_by_token@@Base+0x13c>
   246e0:	ldr	r5, [r5]
   246e4:	cmp	r5, #0
   246e8:	beq	24654 <myhtml_token_strict_doctype_by_token@@Base+0x44>
   246ec:	ldr	r2, [r5, #36]	; 0x24
   246f0:	cmp	r2, #0
   246f4:	beq	24654 <myhtml_token_strict_doctype_by_token@@Base+0x44>
   246f8:	ldr	r1, [r5, #28]
   246fc:	add	r3, r4, #8
   24700:	mov	r0, r6
   24704:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   24708:	ldr	r1, [r5]
   2470c:	cmp	r1, #0
   24710:	beq	24720 <myhtml_token_strict_doctype_by_token@@Base+0x110>
   24714:	ldr	r2, [r1, #36]	; 0x24
   24718:	cmp	r2, #0
   2471c:	bne	247b4 <myhtml_token_strict_doctype_by_token@@Base+0x1a4>
   24720:	ldr	r0, [r4, #12]
   24724:	cmp	r0, #0
   24728:	beq	24730 <myhtml_token_strict_doctype_by_token@@Base+0x120>
   2472c:	bl	10dcc <mycore_free@plt>
   24730:	ldr	r1, [pc, #156]	; 247d4 <myhtml_token_strict_doctype_by_token@@Base+0x1c4>
   24734:	add	r3, r4, #12
   24738:	mov	r0, r6
   2473c:	mov	r2, #1
   24740:	add	r1, pc, r1
   24744:	pop	{r4, r5, r6, lr}
   24748:	b	fe6c <_myhtml_token_create_copy_srt@plt>
   2474c:	ldr	r1, [pc, #132]	; 247d8 <myhtml_token_strict_doctype_by_token@@Base+0x1c8>
   24750:	ldr	r2, [r5, #36]	; 0x24
   24754:	add	r1, pc, r1
   24758:	ldr	r0, [r5, #28]
   2475c:	bl	102a4 <mycore_strncasecmp@plt>
   24760:	cmp	r0, #0
   24764:	bne	24654 <myhtml_token_strict_doctype_by_token@@Base+0x44>
   24768:	ldr	r5, [r5]
   2476c:	cmp	r5, #0
   24770:	beq	24654 <myhtml_token_strict_doctype_by_token@@Base+0x44>
   24774:	ldr	r3, [r5, #36]	; 0x24
   24778:	cmp	r3, #0
   2477c:	beq	24654 <myhtml_token_strict_doctype_by_token@@Base+0x44>
   24780:	ldr	r1, [pc, #84]	; 247dc <myhtml_token_strict_doctype_by_token@@Base+0x1cc>
   24784:	add	r3, r4, #8
   24788:	mov	r0, r6
   2478c:	mov	r2, #1
   24790:	add	r1, pc, r1
   24794:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   24798:	add	r3, r4, #12
   2479c:	mov	r0, r6
   247a0:	ldr	r2, [r5, #36]	; 0x24
   247a4:	ldr	r1, [r5, #28]
   247a8:	pop	{r4, r5, r6, lr}
   247ac:	b	fe6c <_myhtml_token_create_copy_srt@plt>
   247b0:	pop	{r4, r5, r6, pc}
   247b4:	add	r3, r4, #12
   247b8:	mov	r0, r6
   247bc:	ldr	r1, [r1, #28]
   247c0:	pop	{r4, r5, r6, lr}
   247c4:	b	fe6c <_myhtml_token_create_copy_srt@plt>
   247c8:	andeq	r8, sp, r4, lsl #2
   247cc:	andeq	r7, sp, r4, lsl #10
   247d0:	andeq	r7, sp, r4, lsl r7
   247d4:	andeq	r8, sp, r0, lsl r0
   247d8:	andeq	r7, sp, r8, lsl #13
   247dc:	andeq	r7, sp, r0, asr #31

000247e0 <myhtml_token_doctype_check_html_4_0@@Base>:
   247e0:	ldr	r1, [pc, #68]	; 2482c <myhtml_token_doctype_check_html_4_0@@Base+0x4c>
   247e4:	push	{r4, lr}
   247e8:	add	r1, pc, r1
   247ec:	mov	r4, r0
   247f0:	ldr	r0, [r0, #8]
   247f4:	bl	fbf0 <mycore_strcmp@plt>
   247f8:	cmp	r0, #0
   247fc:	popeq	{r4, pc}
   24800:	ldr	r0, [r4, #12]
   24804:	cmp	r0, #0
   24808:	beq	24824 <myhtml_token_doctype_check_html_4_0@@Base+0x44>
   2480c:	ldr	r1, [pc, #28]	; 24830 <myhtml_token_doctype_check_html_4_0@@Base+0x50>
   24810:	add	r1, pc, r1
   24814:	bl	fbf0 <mycore_strcmp@plt>
   24818:	adds	r0, r0, #0
   2481c:	movne	r0, #1
   24820:	pop	{r4, pc}
   24824:	mov	r0, #1
   24828:	pop	{r4, pc}
   2482c:	andeq	r7, sp, ip, ror #30
   24830:	andeq	r7, sp, r0, ror #30

00024834 <myhtml_token_doctype_check_html_4_01@@Base>:
   24834:	ldr	r1, [pc, #68]	; 24880 <myhtml_token_doctype_check_html_4_01@@Base+0x4c>
   24838:	push	{r4, lr}
   2483c:	add	r1, pc, r1
   24840:	mov	r4, r0
   24844:	ldr	r0, [r0, #8]
   24848:	bl	fbf0 <mycore_strcmp@plt>
   2484c:	cmp	r0, #0
   24850:	popeq	{r4, pc}
   24854:	ldr	r0, [r4, #12]
   24858:	cmp	r0, #0
   2485c:	beq	24878 <myhtml_token_doctype_check_html_4_01@@Base+0x44>
   24860:	ldr	r1, [pc, #28]	; 24884 <myhtml_token_doctype_check_html_4_01@@Base+0x50>
   24864:	add	r1, pc, r1
   24868:	bl	fbf0 <mycore_strcmp@plt>
   2486c:	adds	r0, r0, #0
   24870:	movne	r0, #1
   24874:	pop	{r4, pc}
   24878:	mov	r0, #1
   2487c:	pop	{r4, pc}
   24880:	andeq	r7, sp, r0, ror #30
   24884:	andeq	r7, sp, r4, asr pc

00024888 <myhtml_token_doctype_check_xhtml_1_0@@Base>:
   24888:	ldr	r3, [r0, #12]
   2488c:	cmp	r3, #0
   24890:	beq	248d0 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x48>
   24894:	ldr	r1, [pc, #60]	; 248d8 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x50>
   24898:	push	{r4, lr}
   2489c:	add	r1, pc, r1
   248a0:	mov	r4, r0
   248a4:	ldr	r0, [r0, #8]
   248a8:	bl	fbf0 <mycore_strcmp@plt>
   248ac:	cmp	r0, #0
   248b0:	popeq	{r4, pc}
   248b4:	ldr	r1, [pc, #32]	; 248dc <myhtml_token_doctype_check_xhtml_1_0@@Base+0x54>
   248b8:	ldr	r0, [r4, #12]
   248bc:	add	r1, pc, r1
   248c0:	bl	fbf0 <mycore_strcmp@plt>
   248c4:	adds	r0, r0, #0
   248c8:	movne	r0, #1
   248cc:	pop	{r4, pc}
   248d0:	mov	r0, #1
   248d4:	bx	lr
   248d8:	andeq	r7, sp, r4, asr #30
   248dc:	andeq	r7, sp, r8, asr #30

000248e0 <myhtml_token_doctype_check_xhtml_1_1@@Base>:
   248e0:	ldr	r3, [r0, #12]
   248e4:	cmp	r3, #0
   248e8:	beq	24928 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x48>
   248ec:	ldr	r1, [pc, #60]	; 24930 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x50>
   248f0:	push	{r4, lr}
   248f4:	add	r1, pc, r1
   248f8:	mov	r4, r0
   248fc:	ldr	r0, [r0, #8]
   24900:	bl	fbf0 <mycore_strcmp@plt>
   24904:	cmp	r0, #0
   24908:	popeq	{r4, pc}
   2490c:	ldr	r1, [pc, #32]	; 24934 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x54>
   24910:	ldr	r0, [r4, #12]
   24914:	add	r1, pc, r1
   24918:	bl	fbf0 <mycore_strcmp@plt>
   2491c:	adds	r0, r0, #0
   24920:	movne	r0, #1
   24924:	pop	{r4, pc}
   24928:	mov	r0, #1
   2492c:	bx	lr
   24930:	andeq	r7, sp, r4, asr #30
   24934:	andeq	r7, sp, r0, asr #30

00024938 <myhtml_token_release_and_check_doctype_attributes@@Base>:
   24938:	push	{r4, lr}
   2493c:	subs	r4, r2, #0
   24940:	beq	249c0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x88>
   24944:	bl	1049c <myhtml_token_strict_doctype_by_token@plt>
   24948:	ldr	r3, [r4, #4]
   2494c:	cmp	r3, #0
   24950:	beq	249c0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x88>
   24954:	ldrb	r3, [r4]
   24958:	cmp	r3, #0
   2495c:	ldr	r3, [r4, #8]
   24960:	beq	249b0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x78>
   24964:	cmp	r3, #0
   24968:	beq	249c0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x88>
   2496c:	mov	r0, r4
   24970:	bl	10520 <myhtml_token_doctype_check_html_4_0@plt>
   24974:	cmp	r0, #0
   24978:	beq	249b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x80>
   2497c:	mov	r0, r4
   24980:	bl	103ac <myhtml_token_doctype_check_html_4_01@plt>
   24984:	cmp	r0, #0
   24988:	beq	249b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x80>
   2498c:	mov	r0, r4
   24990:	bl	10664 <myhtml_token_doctype_check_xhtml_1_0@plt>
   24994:	cmp	r0, #0
   24998:	beq	249b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x80>
   2499c:	mov	r0, r4
   249a0:	bl	fc38 <myhtml_token_doctype_check_xhtml_1_1@plt>
   249a4:	eor	r0, r0, #1
   249a8:	uxtb	r0, r0
   249ac:	pop	{r4, pc}
   249b0:	cmp	r3, #0
   249b4:	beq	249c8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x90>
   249b8:	mov	r0, #1
   249bc:	pop	{r4, pc}
   249c0:	mov	r0, #0
   249c4:	pop	{r4, pc}
   249c8:	ldr	r0, [r4, #12]
   249cc:	cmp	r0, #0
   249d0:	beq	249b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x80>
   249d4:	ldr	r1, [pc, #40]	; 24a04 <myhtml_token_release_and_check_doctype_attributes@@Base+0xcc>
   249d8:	add	r1, pc, r1
   249dc:	bl	fbf0 <mycore_strcmp@plt>
   249e0:	cmp	r0, #0
   249e4:	beq	249b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x80>
   249e8:	ldr	r3, [r4, #8]
   249ec:	cmp	r3, #0
   249f0:	beq	249c0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x88>
   249f4:	ldrb	r3, [r4]
   249f8:	cmp	r3, #0
   249fc:	beq	249b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x80>
   24a00:	b	2496c <myhtml_token_release_and_check_doctype_attributes@@Base+0x34>
   24a04:	andeq	r7, sp, ip, lsr #29

00024a08 <myhtml_token_attr_compare@@Base>:
   24a08:	cmp	r1, #0
   24a0c:	cmpne	r0, #0
   24a10:	beq	24ab4 <myhtml_token_attr_compare@@Base+0xac>
   24a14:	push	{r4, r5, r6, lr}
   24a18:	ldr	r4, [r0, #40]	; 0x28
   24a1c:	ldr	r5, [r1, #40]	; 0x28
   24a20:	cmp	r5, #0
   24a24:	cmpne	r4, #0
   24a28:	beq	24abc <myhtml_token_attr_compare@@Base+0xb4>
   24a2c:	ldr	r2, [r4, #16]
   24a30:	ldr	r3, [r5, #16]
   24a34:	cmp	r2, r3
   24a38:	bne	24aac <myhtml_token_attr_compare@@Base+0xa4>
   24a3c:	ldr	r2, [r5, #36]	; 0x24
   24a40:	ldr	r3, [r4, #36]	; 0x24
   24a44:	cmp	r2, r3
   24a48:	beq	24a98 <myhtml_token_attr_compare@@Base+0x90>
   24a4c:	b	24aac <myhtml_token_attr_compare@@Base+0xa4>
   24a50:	ldr	r1, [r5, #28]
   24a54:	ldr	r0, [r4, #28]
   24a58:	bl	1052c <mycore_strcasecmp@plt>
   24a5c:	cmp	r0, #0
   24a60:	bne	24aac <myhtml_token_attr_compare@@Base+0xa4>
   24a64:	ldr	r4, [r4]
   24a68:	ldr	r5, [r5]
   24a6c:	cmp	r4, #0
   24a70:	cmpne	r5, #0
   24a74:	beq	24abc <myhtml_token_attr_compare@@Base+0xb4>
   24a78:	ldr	r2, [r4, #16]
   24a7c:	ldr	r3, [r5, #16]
   24a80:	cmp	r2, r3
   24a84:	bne	24aac <myhtml_token_attr_compare@@Base+0xa4>
   24a88:	ldr	r2, [r4, #36]	; 0x24
   24a8c:	ldr	r3, [r5, #36]	; 0x24
   24a90:	cmp	r2, r3
   24a94:	bne	24aac <myhtml_token_attr_compare@@Base+0xa4>
   24a98:	ldr	r1, [r5, #8]
   24a9c:	ldr	r0, [r4, #8]
   24aa0:	bl	fbf0 <mycore_strcmp@plt>
   24aa4:	cmp	r0, #0
   24aa8:	beq	24a50 <myhtml_token_attr_compare@@Base+0x48>
   24aac:	mov	r0, #0
   24ab0:	pop	{r4, r5, r6, pc}
   24ab4:	mov	r0, #0
   24ab8:	bx	lr
   24abc:	cmp	r4, #0
   24ac0:	cmpeq	r5, #0
   24ac4:	moveq	r0, #1
   24ac8:	movne	r0, #0
   24acc:	pop	{r4, r5, r6, pc}

00024ad0 <myhtml_token_attr_by_name@@Base>:
   24ad0:	push	{r4, r5, r6, lr}
   24ad4:	ldr	r4, [r0, #40]	; 0x28
   24ad8:	cmp	r4, #0
   24adc:	movne	r6, r1
   24ae0:	movne	r5, r2
   24ae4:	bne	24af8 <myhtml_token_attr_by_name@@Base+0x28>
   24ae8:	b	24b20 <myhtml_token_attr_by_name@@Base+0x50>
   24aec:	ldr	r4, [r4]
   24af0:	cmp	r4, #0
   24af4:	beq	24b20 <myhtml_token_attr_by_name@@Base+0x50>
   24af8:	ldr	r3, [r4, #16]
   24afc:	cmp	r3, r5
   24b00:	bne	24aec <myhtml_token_attr_by_name@@Base+0x1c>
   24b04:	mov	r1, r6
   24b08:	ldr	r0, [r4, #8]
   24b0c:	bl	fbf0 <mycore_strcmp@plt>
   24b10:	cmp	r0, #0
   24b14:	bne	24aec <myhtml_token_attr_by_name@@Base+0x1c>
   24b18:	mov	r0, r4
   24b1c:	pop	{r4, r5, r6, pc}
   24b20:	mov	r4, #0
   24b24:	mov	r0, r4
   24b28:	pop	{r4, r5, r6, pc}

00024b2c <myhtml_token_node_attr_copy_with_check@@Base>:
   24b2c:	push	{r4, r5, r6, r7, r8, lr}
   24b30:	ldr	r4, [r1, #40]	; 0x28
   24b34:	cmp	r4, #0
   24b38:	popeq	{r4, r5, r6, r7, r8, pc}
   24b3c:	mov	r7, r0
   24b40:	mov	r5, r2
   24b44:	mov	r6, r3
   24b48:	b	24b58 <myhtml_token_node_attr_copy_with_check@@Base+0x2c>
   24b4c:	ldr	r4, [r4]
   24b50:	cmp	r4, #0
   24b54:	beq	24b98 <myhtml_token_node_attr_copy_with_check@@Base+0x6c>
   24b58:	ldr	r2, [r4, #16]
   24b5c:	cmp	r2, #0
   24b60:	beq	24b4c <myhtml_token_node_attr_copy_with_check@@Base+0x20>
   24b64:	ldr	r1, [r4, #8]
   24b68:	mov	r0, r5
   24b6c:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   24b70:	cmp	r0, #0
   24b74:	bne	24b4c <myhtml_token_node_attr_copy_with_check@@Base+0x20>
   24b78:	mov	r1, r4
   24b7c:	mov	r3, r6
   24b80:	mov	r2, r5
   24b84:	mov	r0, r7
   24b88:	bl	10760 <myhtml_token_attr_copy@plt>
   24b8c:	ldr	r4, [r4]
   24b90:	cmp	r4, #0
   24b94:	bne	24b58 <myhtml_token_node_attr_copy_with_check@@Base+0x2c>
   24b98:	pop	{r4, r5, r6, r7, r8, pc}

00024b9c <myhtml_token_adjust_mathml_attributes@@Base>:
   24b9c:	ldr	r1, [pc, #60]	; 24be0 <myhtml_token_adjust_mathml_attributes@@Base+0x44>
   24ba0:	push	{r4, lr}
   24ba4:	mov	r2, #13
   24ba8:	add	r1, pc, r1
   24bac:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   24bb0:	cmp	r0, #0
   24bb4:	popeq	{r4, pc}
   24bb8:	ldr	r3, [pc, #36]	; 24be4 <myhtml_token_adjust_mathml_attributes@@Base+0x48>
   24bbc:	ldr	ip, [r0, #8]
   24bc0:	add	r3, pc, r3
   24bc4:	ldm	r3!, {r0, r1, r2}
   24bc8:	ldrb	r3, [r3]
   24bcc:	str	r0, [ip]
   24bd0:	str	r1, [ip, #4]
   24bd4:	strb	r3, [ip, #12]
   24bd8:	str	r2, [ip, #8]
   24bdc:	pop	{r4, pc}
   24be0:	strdeq	r7, [sp], -r0
   24be4:	andeq	r7, sp, r8, ror #25

00024be8 <myhtml_token_adjust_svg_attributes@@Base>:
   24be8:	push	{r4, r5, r6, r7, r8, lr}
   24bec:	mov	r7, r0
   24bf0:	ldr	r4, [pc, #68]	; 24c3c <myhtml_token_adjust_svg_attributes@@Base+0x54>
   24bf4:	add	r4, pc, r4
   24bf8:	add	r6, r4, #928	; 0x3a0
   24bfc:	ldm	r4, {r1, r2}
   24c00:	mov	r0, r7
   24c04:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   24c08:	cmp	r0, #0
   24c0c:	add	r5, r0, #8
   24c10:	mov	r0, r5
   24c14:	beq	24c2c <myhtml_token_adjust_svg_attributes@@Base+0x44>
   24c18:	bl	10d18 <mycore_string_clean@plt>
   24c1c:	mov	r0, r5
   24c20:	ldr	r2, [r4, #12]
   24c24:	ldr	r1, [r4, #8]
   24c28:	bl	108d4 <mycore_string_append@plt>
   24c2c:	add	r4, r4, #16
   24c30:	cmp	r4, r6
   24c34:	bne	24bfc <myhtml_token_adjust_svg_attributes@@Base+0x14>
   24c38:	pop	{r4, r5, r6, r7, r8, pc}
   24c3c:	andeq	r0, pc, ip, ror #27

00024c40 <myhtml_token_adjust_foreign_attributes@@Base>:
   24c40:	push	{r4, r5, r6, r7, r8, lr}
   24c44:	mov	r8, r0
   24c48:	ldr	r4, [pc, #80]	; 24ca0 <myhtml_token_adjust_foreign_attributes@@Base+0x60>
   24c4c:	add	r4, pc, r4
   24c50:	add	r4, r4, #928	; 0x3a0
   24c54:	add	r7, r4, #220	; 0xdc
   24c58:	ldm	r4, {r1, r2}
   24c5c:	mov	r0, r8
   24c60:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   24c64:	subs	r5, r0, #0
   24c68:	add	r6, r5, #8
   24c6c:	mov	r0, r6
   24c70:	beq	24c90 <myhtml_token_adjust_foreign_attributes@@Base+0x50>
   24c74:	bl	10d18 <mycore_string_clean@plt>
   24c78:	mov	r0, r6
   24c7c:	ldr	r2, [r4, #12]
   24c80:	ldr	r1, [r4, #8]
   24c84:	bl	108d4 <mycore_string_append@plt>
   24c88:	ldr	r3, [r4, #16]
   24c8c:	str	r3, [r5, #64]	; 0x40
   24c90:	add	r4, r4, #20
   24c94:	cmp	r4, r7
   24c98:	bne	24c58 <myhtml_token_adjust_foreign_attributes@@Base+0x18>
   24c9c:	pop	{r4, r5, r6, r7, r8, pc}
   24ca0:	muleq	pc, r4, sp	; <UNPREDICTABLE>

00024ca4 <myhtml_token_delete@@Base>:
   24ca4:	ldr	r2, [r1, #4]
   24ca8:	push	{r4, r5, r6, lr}
   24cac:	cmp	r2, #0
   24cb0:	mov	r4, r1
   24cb4:	mov	r5, r0
   24cb8:	beq	24cd0 <myhtml_token_delete@@Base+0x2c>
   24cbc:	ldr	r0, [r1, #16]
   24cc0:	cmp	r0, #0
   24cc4:	beq	24cd0 <myhtml_token_delete@@Base+0x2c>
   24cc8:	ldr	r1, [r1, #20]
   24ccc:	bl	10718 <mchar_async_free@plt>
   24cd0:	mov	r1, r4
   24cd4:	ldr	r0, [r5, #4]
   24cd8:	pop	{r4, r5, r6, lr}
   24cdc:	b	1004c <mcobject_async_free@plt>

00024ce0 <myhtml_token_attr_delete_all@@Base>:
   24ce0:	push	{r4, lr}
   24ce4:	ldr	r4, [r1, #40]	; 0x28
   24ce8:	cmp	r4, #0
   24cec:	popeq	{r4, pc}
   24cf0:	ldr	r3, [r4, #8]
   24cf4:	subs	r2, r3, #0
   24cf8:	beq	24d10 <myhtml_token_attr_delete_all@@Base+0x30>
   24cfc:	ldr	r3, [r4, #20]
   24d00:	subs	r0, r3, #0
   24d04:	beq	24d10 <myhtml_token_attr_delete_all@@Base+0x30>
   24d08:	ldr	r1, [r4, #24]
   24d0c:	bl	10718 <mchar_async_free@plt>
   24d10:	ldr	r3, [r4, #28]
   24d14:	subs	r2, r3, #0
   24d18:	beq	24d30 <myhtml_token_attr_delete_all@@Base+0x50>
   24d1c:	ldr	r3, [r4, #40]	; 0x28
   24d20:	subs	r0, r3, #0
   24d24:	beq	24d30 <myhtml_token_attr_delete_all@@Base+0x50>
   24d28:	ldr	r1, [r4, #44]	; 0x2c
   24d2c:	bl	10718 <mchar_async_free@plt>
   24d30:	ldr	r4, [r4]
   24d34:	cmp	r4, #0
   24d38:	bne	24cf0 <myhtml_token_attr_delete_all@@Base+0x10>
   24d3c:	pop	{r4, pc}

00024d40 <myhtml_token_attr_remove@@Base>:
   24d40:	cmp	r1, #0
   24d44:	beq	24d74 <myhtml_token_attr_remove@@Base+0x34>
   24d48:	ldm	r1, {r2, r3}
   24d4c:	cmp	r3, #0
   24d50:	strne	r2, [r3]
   24d54:	ldrne	r2, [r1]
   24d58:	streq	r2, [r0, #40]	; 0x28
   24d5c:	cmp	r2, #0
   24d60:	strne	r3, [r2, #4]
   24d64:	streq	r3, [r0, #44]	; 0x2c
   24d68:	mov	r3, #0
   24d6c:	str	r3, [r1]
   24d70:	str	r3, [r1, #4]
   24d74:	mov	r0, r1
   24d78:	bx	lr

00024d7c <myhtml_token_attr_remove_by_name@@Base>:
   24d7c:	push	{r4, lr}
   24d80:	mov	r4, r0
   24d84:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   24d88:	mov	r1, r0
   24d8c:	mov	r0, r4
   24d90:	pop	{r4, lr}
   24d94:	b	10574 <myhtml_token_attr_remove@plt>

00024d98 <myhtml_token_merged_two_token_string@@Base>:
   24d98:	push	{r4, r5, r6, r7, r8, r9, lr}
   24d9c:	mov	r7, r0
   24da0:	mov	r4, r1
   24da4:	mov	r6, r2
   24da8:	sub	sp, sp, #28
   24dac:	ldr	r0, [r0, #8]
   24db0:	mov	r8, r3
   24db4:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   24db8:	mov	r1, r6
   24dbc:	ldr	r0, [r7, #8]
   24dc0:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   24dc4:	ldr	r1, [r7, #52]	; 0x34
   24dc8:	ldr	r2, [r4, #20]
   24dcc:	mov	r3, #0
   24dd0:	cmp	r2, r1
   24dd4:	add	r5, r4, #4
   24dd8:	add	r9, r6, #4
   24ddc:	str	r3, [r4, #24]
   24de0:	str	r3, [r4, #28]
   24de4:	beq	24e80 <myhtml_token_merged_two_token_string@@Base+0xe8>
   24de8:	ldr	r3, [r6, #20]
   24dec:	cmp	r1, r3
   24df0:	beq	24e58 <myhtml_token_merged_two_token_string@@Base+0xc0>
   24df4:	ldr	r3, [r6, #12]
   24df8:	ldr	r2, [r4, #12]
   24dfc:	add	r3, r3, #2
   24e00:	add	r6, sp, #4
   24e04:	add	r3, r3, r2
   24e08:	ldr	r0, [r7, #4]
   24e0c:	mov	r2, r6
   24e10:	bl	10610 <mycore_string_init@plt>
   24e14:	cmp	r8, #0
   24e18:	bne	24e98 <myhtml_token_merged_two_token_string@@Base+0x100>
   24e1c:	mov	r1, r5
   24e20:	mov	r0, r6
   24e24:	bl	1016c <mycore_string_copy@plt>
   24e28:	mov	r1, r9
   24e2c:	mov	r0, r6
   24e30:	bl	1016c <mycore_string_copy@plt>
   24e34:	mov	lr, r6
   24e38:	mov	ip, r5
   24e3c:	ldm	lr!, {r0, r1, r2, r3}
   24e40:	ldr	lr, [lr]
   24e44:	stmia	ip!, {r0, r1, r2, r3}
   24e48:	mov	r0, r4
   24e4c:	str	lr, [ip]
   24e50:	add	sp, sp, #28
   24e54:	pop	{r4, r5, r6, r7, r8, r9, pc}
   24e58:	cmp	r8, #0
   24e5c:	movne	r1, r5
   24e60:	movne	r0, r9
   24e64:	moveq	r1, r9
   24e68:	moveq	r0, r5
   24e6c:	bl	1016c <mycore_string_copy@plt>
   24e70:	mov	r4, r6
   24e74:	mov	r0, r4
   24e78:	add	sp, sp, #28
   24e7c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   24e80:	cmp	r8, r3
   24e84:	bne	24e74 <myhtml_token_merged_two_token_string@@Base+0xdc>
   24e88:	mov	r1, r9
   24e8c:	mov	r0, r5
   24e90:	bl	1016c <mycore_string_copy@plt>
   24e94:	b	24e74 <myhtml_token_merged_two_token_string@@Base+0xdc>
   24e98:	mov	r1, r9
   24e9c:	mov	r0, r6
   24ea0:	bl	1016c <mycore_string_copy@plt>
   24ea4:	mov	r1, r5
   24ea8:	mov	r0, r6
   24eac:	bl	1016c <mycore_string_copy@plt>
   24eb0:	b	24e34 <myhtml_token_merged_two_token_string@@Base+0x9c>

00024eb4 <myhtml_token_set_replacement_character_for_null_token@@Base>:
   24eb4:	push	{r4, r5, lr}
   24eb8:	mov	r4, r1
   24ebc:	sub	sp, sp, #28
   24ec0:	mov	r5, r0
   24ec4:	ldr	r0, [r0, #8]
   24ec8:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   24ecc:	ldr	r3, [r4, #12]
   24ed0:	ldr	r1, [r5, #52]	; 0x34
   24ed4:	ldr	r0, [r5, #4]
   24ed8:	add	r5, sp, #4
   24edc:	add	r3, r3, #2
   24ee0:	mov	r2, r5
   24ee4:	bl	10610 <mycore_string_init@plt>
   24ee8:	ldr	r2, [r4, #12]
   24eec:	mov	r0, r5
   24ef0:	ldr	r1, [r4, #4]!
   24ef4:	bl	10388 <mycore_string_append_with_replacement_null_characters@plt>
   24ef8:	mov	ip, r5
   24efc:	ldm	ip!, {r0, r1, r2, r3}
   24f00:	ldr	ip, [ip]
   24f04:	stmia	r4!, {r0, r1, r2, r3}
   24f08:	str	ip, [r4]
   24f0c:	add	sp, sp, #28
   24f10:	pop	{r4, r5, pc}

00024f14 <myhtml_tokenizer_state_rcdata_less_than_sign@@Base>:
   24f14:	ldrb	r2, [r2, r3]
   24f18:	cmp	r2, #47	; 0x2f
   24f1c:	addeq	r3, r3, #1
   24f20:	moveq	r2, #11
   24f24:	movne	r2, #2
   24f28:	str	r2, [r0, #160]	; 0xa0
   24f2c:	mov	r0, r3
   24f30:	bx	lr

00024f34 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base>:
   24f34:	ldrb	r2, [r2, r3]
   24f38:	ldr	r1, [pc, #28]	; 24f5c <myhtml_tokenizer_state_rcdata_end_tag_open@@Base+0x28>
   24f3c:	add	r1, pc, r1
   24f40:	ldrb	r2, [r1, r2]
   24f44:	cmp	r2, #1
   24f48:	moveq	r2, #12
   24f4c:	movne	r2, #2
   24f50:	str	r2, [r0, #160]	; 0xa0
   24f54:	mov	r0, r3
   24f58:	bx	lr
   24f5c:	strheq	r8, [sp], -r0

00024f60 <myhtml_tokenizer_state_rawtext_less_than_sign@@Base>:
   24f60:	ldrb	r2, [r2, r3]
   24f64:	cmp	r2, #47	; 0x2f
   24f68:	addeq	r3, r3, #1
   24f6c:	moveq	r2, #14
   24f70:	movne	r2, #4
   24f74:	str	r2, [r0, #160]	; 0xa0
   24f78:	mov	r0, r3
   24f7c:	bx	lr

00024f80 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base>:
   24f80:	ldrb	r2, [r2, r3]
   24f84:	ldr	r1, [pc, #28]	; 24fa8 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base+0x28>
   24f88:	add	r1, pc, r1
   24f8c:	ldrb	r2, [r1, r2]
   24f90:	cmp	r2, #1
   24f94:	moveq	r2, #15
   24f98:	movne	r2, #4
   24f9c:	str	r2, [r0, #160]	; 0xa0
   24fa0:	mov	r0, r3
   24fa4:	bx	lr
   24fa8:	andeq	r8, sp, r4, rrx

00024fac <myhtml_tokenizer_state_data@@Base>:
   24fac:	push	{r4, r5, lr}
   24fb0:	ldr	lr, [sp, #12]
   24fb4:	cmp	r3, lr
   24fb8:	bcs	2505c <myhtml_tokenizer_state_data@@Base+0xb0>
   24fbc:	ldrb	ip, [r2, r3]
   24fc0:	add	r2, r2, r3
   24fc4:	cmp	ip, #60	; 0x3c
   24fc8:	beq	25064 <myhtml_tokenizer_state_data@@Base+0xb8>
   24fcc:	ldr	r5, [pc, #176]	; 25084 <myhtml_tokenizer_state_data@@Base+0xd8>
   24fd0:	add	r5, pc, r5
   24fd4:	b	25030 <myhtml_tokenizer_state_data@@Base+0x84>
   24fd8:	ldr	ip, [r1, #48]	; 0x30
   24fdc:	tst	ip, #2048	; 0x800
   24fe0:	ldr	ip, [r1, #48]	; 0x30
   24fe4:	orreq	ip, ip, #2048	; 0x800
   24fe8:	streq	ip, [r1, #48]	; 0x30
   24fec:	beq	25018 <myhtml_tokenizer_state_data@@Base+0x6c>
   24ff0:	tst	ip, #8
   24ff4:	beq	25018 <myhtml_tokenizer_state_data@@Base+0x6c>
   24ff8:	ldr	ip, [r1, #48]	; 0x30
   24ffc:	ldr	r4, [r1, #48]	; 0x30
   25000:	and	ip, ip, #8
   25004:	eor	ip, ip, r4
   25008:	str	ip, [r1, #48]	; 0x30
   2500c:	ldr	ip, [r1, #48]	; 0x30
   25010:	orr	ip, ip, #512	; 0x200
   25014:	str	ip, [r1, #48]	; 0x30
   25018:	add	r3, r3, #1
   2501c:	cmp	lr, r3
   25020:	beq	2505c <myhtml_tokenizer_state_data@@Base+0xb0>
   25024:	ldrb	ip, [r2, #1]!
   25028:	cmp	ip, #60	; 0x3c
   2502c:	beq	25064 <myhtml_tokenizer_state_data@@Base+0xb8>
   25030:	cmp	ip, #0
   25034:	beq	24fd8 <myhtml_tokenizer_state_data@@Base+0x2c>
   25038:	ldr	r4, [r1, #48]	; 0x30
   2503c:	tst	r4, #8
   25040:	beq	25018 <myhtml_tokenizer_state_data@@Base+0x6c>
   25044:	ldrb	ip, [r5, ip]
   25048:	cmp	ip, #2
   2504c:	bne	24ff8 <myhtml_tokenizer_state_data@@Base+0x4c>
   25050:	add	r3, r3, #1
   25054:	cmp	lr, r3
   25058:	bne	25024 <myhtml_tokenizer_state_data@@Base+0x78>
   2505c:	mov	r0, r3
   25060:	pop	{r4, r5, pc}
   25064:	ldr	r2, [r0, #192]	; 0xc0
   25068:	mov	ip, #7
   2506c:	add	r2, r2, r3
   25070:	add	r3, r3, #1
   25074:	str	r2, [r1, #32]
   25078:	str	ip, [r0, #160]	; 0xa0
   2507c:	mov	r0, r3
   25080:	pop	{r4, r5, pc}
   25084:	andeq	r8, sp, ip, lsl r0

00025088 <myhtml_tokenizer_state_comment@@Base>:
   25088:	push	{lr}		; (str lr, [sp, #-4]!)
   2508c:	mov	lr, #2
   25090:	ldr	ip, [sp, #4]
   25094:	str	lr, [r1]
   25098:	cmp	r3, ip
   2509c:	bcs	250cc <myhtml_tokenizer_state_comment@@Base+0x44>
   250a0:	ldrb	r1, [r2, r3]
   250a4:	add	r2, r2, r3
   250a8:	cmp	r1, #45	; 0x2d
   250ac:	bne	250c0 <myhtml_tokenizer_state_comment@@Base+0x38>
   250b0:	b	250d4 <myhtml_tokenizer_state_comment@@Base+0x4c>
   250b4:	ldrb	r1, [r2, #1]!
   250b8:	cmp	r1, #45	; 0x2d
   250bc:	beq	250d4 <myhtml_tokenizer_state_comment@@Base+0x4c>
   250c0:	add	r3, r3, #1
   250c4:	cmp	ip, r3
   250c8:	bne	250b4 <myhtml_tokenizer_state_comment@@Base+0x2c>
   250cc:	mov	r0, r3
   250d0:	pop	{pc}		; (ldr pc, [sp], #4)
   250d4:	mov	r2, #48	; 0x30
   250d8:	add	r3, r3, #1
   250dc:	str	r2, [r0, #160]	; 0xa0
   250e0:	mov	r0, r3
   250e4:	pop	{pc}		; (ldr pc, [sp], #4)

000250e8 <myhtml_tokenizer_state_comment_end_dash@@Base>:
   250e8:	ldrb	r2, [r2, r3]
   250ec:	add	r3, r3, #1
   250f0:	cmp	r2, #45	; 0x2d
   250f4:	moveq	r2, #49	; 0x31
   250f8:	movne	r2, #47	; 0x2f
   250fc:	str	r2, [r0, #160]	; 0xa0
   25100:	mov	r0, r3
   25104:	bx	lr

00025108 <myhtml_tokenizer_state_parse_error_stop@@Base>:
   25108:	ldr	r3, [pc, #8]	; 25118 <myhtml_tokenizer_state_parse_error_stop@@Base+0x10>
   2510c:	str	r3, [r0, #196]	; 0xc4
   25110:	ldr	r0, [sp]
   25114:	bx	lr
   25118:	andeq	r9, r0, ip, lsr #2

0002511c <myhtml_tokenizer_state_plaintext@@Base>:
   2511c:	mov	r2, r1
   25120:	ldr	r1, [r1, #48]	; 0x30
   25124:	push	{r4, r5, r6, lr}
   25128:	tst	r1, #128	; 0x80
   2512c:	ldr	r5, [sp, #16]
   25130:	ldreq	r1, [r2, #48]	; 0x30
   25134:	mov	r4, r0
   25138:	orreq	r1, r1, #128	; 0x80
   2513c:	streq	r1, [r2, #48]	; 0x30
   25140:	ldr	r1, [r0, #192]	; 0xc0
   25144:	ldr	ip, [r2, #48]	; 0x30
   25148:	ldr	r0, [r2, #48]	; 0x30
   2514c:	add	r3, r1, r3
   25150:	and	ip, ip, #8
   25154:	add	r1, r1, r5
   25158:	sub	r1, r1, r3
   2515c:	eor	ip, ip, r0
   25160:	mov	r6, #0
   25164:	mov	r0, #1
   25168:	str	r1, [r2, #36]	; 0x24
   2516c:	str	r1, [r2, #28]
   25170:	str	r3, [r2, #24]
   25174:	str	r0, [r2]
   25178:	str	ip, [r2, #48]	; 0x30
   2517c:	mov	r1, r5
   25180:	str	r6, [r4, #160]	; 0xa0
   25184:	mov	r0, r4
   25188:	bl	10028 <myhtml_queue_add@plt>
   2518c:	cmp	r0, r6
   25190:	movne	r3, #69	; 0x45
   25194:	movne	r0, r6
   25198:	strne	r3, [r4, #160]	; 0xa0
   2519c:	moveq	r0, r5
   251a0:	pop	{r4, r5, r6, pc}

000251a4 <myhtml_tokenizer_state_bogus_comment@@Base>:
   251a4:	push	{r4, r5, r6, lr}
   251a8:	mov	r4, #2
   251ac:	ldr	lr, [r1, #48]	; 0x30
   251b0:	ldr	ip, [sp, #16]
   251b4:	orr	lr, lr, #1024	; 0x400
   251b8:	cmp	r3, ip
   251bc:	str	r4, [r1]
   251c0:	str	lr, [r1, #48]	; 0x30
   251c4:	bcs	2525c <myhtml_tokenizer_state_bogus_comment@@Base+0xb8>
   251c8:	ldrb	lr, [r2, r3]
   251cc:	add	r2, r2, r3
   251d0:	cmp	lr, #62	; 0x3e
   251d4:	movne	r4, r3
   251d8:	bne	251ec <myhtml_tokenizer_state_bogus_comment@@Base+0x48>
   251dc:	b	25200 <myhtml_tokenizer_state_bogus_comment@@Base+0x5c>
   251e0:	ldrb	r3, [r2, #1]!
   251e4:	cmp	r3, #62	; 0x3e
   251e8:	beq	25204 <myhtml_tokenizer_state_bogus_comment@@Base+0x60>
   251ec:	add	r4, r4, #1
   251f0:	cmp	ip, r4
   251f4:	bne	251e0 <myhtml_tokenizer_state_bogus_comment@@Base+0x3c>
   251f8:	mov	r0, r4
   251fc:	pop	{r4, r5, r6, pc}
   25200:	mov	r4, r3
   25204:	mov	r2, r1
   25208:	ldr	r3, [r0, #192]	; 0xc0
   2520c:	ldr	r1, [r1, #24]
   25210:	mov	r5, r0
   25214:	ldr	r0, [r2, #32]
   25218:	sub	r1, r3, r1
   2521c:	add	r1, r1, r4
   25220:	sub	r3, r3, r0
   25224:	add	r4, r4, #1
   25228:	add	r3, r3, r4
   2522c:	str	r1, [r2, #28]
   25230:	str	r3, [r2, #36]	; 0x24
   25234:	mov	r1, r4
   25238:	mov	r0, r5
   2523c:	bl	10028 <myhtml_queue_add@plt>
   25240:	cmp	r0, #0
   25244:	movne	r3, #69	; 0x45
   25248:	movne	r4, #0
   2524c:	streq	r0, [r5, #160]	; 0xa0
   25250:	strne	r3, [r5, #160]	; 0xa0
   25254:	mov	r0, r4
   25258:	pop	{r4, r5, r6, pc}
   2525c:	mov	r4, r3
   25260:	b	251f8 <myhtml_tokenizer_state_bogus_comment@@Base+0x54>

00025264 <myhtml_tokenizer_state_cdata_section@@Base>:
   25264:	ldr	ip, [r1, #48]	; 0x30
   25268:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2526c:	tst	ip, #256	; 0x100
   25270:	ldr	r6, [sp, #32]
   25274:	ldreq	ip, [r1, #48]	; 0x30
   25278:	mov	r4, r3
   2527c:	orreq	ip, ip, #256	; 0x100
   25280:	streq	ip, [r1, #48]	; 0x30
   25284:	cmp	r3, r6
   25288:	bcs	25318 <myhtml_tokenizer_state_cdata_section@@Base+0xb4>
   2528c:	mov	r8, r0
   25290:	mov	r7, r1
   25294:	add	r2, r2, r3
   25298:	mov	r9, #2
   2529c:	b	252b0 <myhtml_tokenizer_state_cdata_section@@Base+0x4c>
   252a0:	add	r4, r4, #1
   252a4:	cmp	r6, r4
   252a8:	mov	r2, r5
   252ac:	beq	25318 <myhtml_tokenizer_state_cdata_section@@Base+0xb4>
   252b0:	ldrb	r3, [r2]
   252b4:	add	r5, r2, #1
   252b8:	cmp	r3, #62	; 0x3e
   252bc:	bne	252a0 <myhtml_tokenizer_state_cdata_section@@Base+0x3c>
   252c0:	cmp	r4, #1
   252c4:	sub	r0, r2, #2
   252c8:	bls	25320 <myhtml_tokenizer_state_cdata_section@@Base+0xbc>
   252cc:	ldrb	r3, [r0]
   252d0:	cmp	r3, #93	; 0x5d
   252d4:	bne	252a0 <myhtml_tokenizer_state_cdata_section@@Base+0x3c>
   252d8:	ldrb	r3, [r0, #1]
   252dc:	cmp	r3, #93	; 0x5d
   252e0:	bne	252a0 <myhtml_tokenizer_state_cdata_section@@Base+0x3c>
   252e4:	ldr	r1, [r8, #192]	; 0xc0
   252e8:	ldr	r2, [r7, #24]
   252ec:	sub	r3, r1, #2
   252f0:	sub	r3, r3, r2
   252f4:	add	r3, r3, r4
   252f8:	cmp	r3, #0
   252fc:	add	r4, r4, #1
   25300:	addeq	r1, r1, r4
   25304:	str	r3, [r7, #28]
   25308:	streq	r1, [r7, #24]
   2530c:	bne	2533c <myhtml_tokenizer_state_cdata_section@@Base+0xd8>
   25310:	mov	r3, #0
   25314:	str	r3, [r8, #160]	; 0xa0
   25318:	mov	r0, r4
   2531c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25320:	ldr	r1, [r8, #192]	; 0xc0
   25324:	mov	r2, r9
   25328:	sub	r1, r1, #2
   2532c:	add	r1, r1, r4
   25330:	mov	r0, r8
   25334:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   25338:	b	252cc <myhtml_tokenizer_state_cdata_section@@Base+0x68>
   2533c:	ldr	r3, [r7, #32]
   25340:	mov	r2, r7
   25344:	sub	r3, r1, r3
   25348:	add	r3, r3, r4
   2534c:	str	r3, [r7, #36]	; 0x24
   25350:	mov	r1, r4
   25354:	mov	r0, r8
   25358:	bl	10028 <myhtml_queue_add@plt>
   2535c:	cmp	r0, #0
   25360:	beq	25310 <myhtml_tokenizer_state_cdata_section@@Base+0xac>
   25364:	mov	r3, #69	; 0x45
   25368:	str	r3, [r8, #160]	; 0xa0
   2536c:	mov	r4, #0
   25370:	b	25318 <myhtml_tokenizer_state_cdata_section@@Base+0xb4>

00025374 <myhtml_tokenizer_state_rcdata@@Base>:
   25374:	push	{r4, r5, r6, r7, r8, lr}
   25378:	mov	r8, r1
   2537c:	ldr	r1, [r0, #60]	; 0x3c
   25380:	mov	r7, r0
   25384:	cmp	r1, #0
   25388:	mov	r5, r2
   2538c:	mov	r4, r3
   25390:	ldr	r6, [sp, #24]
   25394:	beq	253f4 <myhtml_tokenizer_state_rcdata@@Base+0x80>
   25398:	cmp	r4, r6
   2539c:	bcs	25438 <myhtml_tokenizer_state_rcdata@@Base+0xc4>
   253a0:	ldrb	r3, [r5, r4]
   253a4:	add	r2, r5, r4
   253a8:	cmp	r3, #60	; 0x3c
   253ac:	movne	r0, r4
   253b0:	bne	253c4 <myhtml_tokenizer_state_rcdata@@Base+0x50>
   253b4:	b	253d4 <myhtml_tokenizer_state_rcdata@@Base+0x60>
   253b8:	ldrb	r3, [r2, #1]!
   253bc:	cmp	r3, #60	; 0x3c
   253c0:	beq	253d8 <myhtml_tokenizer_state_rcdata@@Base+0x64>
   253c4:	add	r0, r0, #1
   253c8:	cmp	r6, r0
   253cc:	bne	253b8 <myhtml_tokenizer_state_rcdata@@Base+0x44>
   253d0:	pop	{r4, r5, r6, r7, r8, pc}
   253d4:	mov	r0, r4
   253d8:	ldr	r3, [r7, #192]	; 0xc0
   253dc:	mov	r2, #10
   253e0:	add	r3, r3, r0
   253e4:	str	r3, [r8, #32]
   253e8:	add	r0, r0, #1
   253ec:	str	r2, [r7, #160]	; 0xa0
   253f0:	pop	{r4, r5, r6, r7, r8, pc}
   253f4:	ldr	r3, [r0, #192]	; 0xc0
   253f8:	ldr	r0, [r0, #68]	; 0x44
   253fc:	add	r3, r3, r4
   25400:	str	r3, [r8, #24]
   25404:	bl	fcec <mythread_queue_get_prev_node@plt>
   25408:	cmp	r0, #0
   2540c:	beq	25424 <myhtml_tokenizer_state_rcdata@@Base+0xb0>
   25410:	ldr	r3, [r0, #4]
   25414:	cmp	r3, #0
   25418:	ldrne	r3, [r3]
   2541c:	strne	r3, [r7, #60]	; 0x3c
   25420:	bne	25398 <myhtml_tokenizer_state_rcdata@@Base+0x24>
   25424:	ldr	r3, [r7, #88]	; 0x58
   25428:	cmp	r3, #0
   2542c:	ldrne	r3, [r3, #4]
   25430:	strne	r3, [r7, #60]	; 0x3c
   25434:	b	25398 <myhtml_tokenizer_state_rcdata@@Base+0x24>
   25438:	mov	r0, r4
   2543c:	pop	{r4, r5, r6, r7, r8, pc}

00025440 <myhtml_tokenizer_state_rawtext@@Base>:
   25440:	push	{r4, r5, r6, r7, r8, lr}
   25444:	mov	r8, r1
   25448:	ldr	r1, [r0, #60]	; 0x3c
   2544c:	mov	r7, r0
   25450:	cmp	r1, #0
   25454:	mov	r5, r2
   25458:	mov	r4, r3
   2545c:	ldr	r6, [sp, #24]
   25460:	beq	254c0 <myhtml_tokenizer_state_rawtext@@Base+0x80>
   25464:	cmp	r4, r6
   25468:	bcs	25504 <myhtml_tokenizer_state_rawtext@@Base+0xc4>
   2546c:	ldrb	r3, [r5, r4]
   25470:	add	r2, r5, r4
   25474:	cmp	r3, #60	; 0x3c
   25478:	movne	r0, r4
   2547c:	bne	25490 <myhtml_tokenizer_state_rawtext@@Base+0x50>
   25480:	b	254a0 <myhtml_tokenizer_state_rawtext@@Base+0x60>
   25484:	ldrb	r3, [r2, #1]!
   25488:	cmp	r3, #60	; 0x3c
   2548c:	beq	254a4 <myhtml_tokenizer_state_rawtext@@Base+0x64>
   25490:	add	r0, r0, #1
   25494:	cmp	r6, r0
   25498:	bne	25484 <myhtml_tokenizer_state_rawtext@@Base+0x44>
   2549c:	pop	{r4, r5, r6, r7, r8, pc}
   254a0:	mov	r0, r4
   254a4:	ldr	r3, [r7, #192]	; 0xc0
   254a8:	mov	r2, #13
   254ac:	add	r3, r3, r0
   254b0:	str	r3, [r8, #32]
   254b4:	add	r0, r0, #1
   254b8:	str	r2, [r7, #160]	; 0xa0
   254bc:	pop	{r4, r5, r6, r7, r8, pc}
   254c0:	ldr	r3, [r0, #192]	; 0xc0
   254c4:	ldr	r0, [r0, #68]	; 0x44
   254c8:	add	r3, r3, r4
   254cc:	str	r3, [r8, #24]
   254d0:	bl	fcec <mythread_queue_get_prev_node@plt>
   254d4:	cmp	r0, #0
   254d8:	beq	254f0 <myhtml_tokenizer_state_rawtext@@Base+0xb0>
   254dc:	ldr	r3, [r0, #4]
   254e0:	cmp	r3, #0
   254e4:	ldrne	r3, [r3]
   254e8:	strne	r3, [r7, #60]	; 0x3c
   254ec:	bne	25464 <myhtml_tokenizer_state_rawtext@@Base+0x24>
   254f0:	ldr	r3, [r7, #88]	; 0x58
   254f4:	cmp	r3, #0
   254f8:	ldrne	r3, [r3, #4]
   254fc:	strne	r3, [r7, #60]	; 0x3c
   25500:	b	25464 <myhtml_tokenizer_state_rawtext@@Base+0x24>
   25504:	mov	r0, r4
   25508:	pop	{r4, r5, r6, r7, r8, pc}

0002550c <myhtml_tokenizer_state_attribute_value_double_quoted@@Base>:
   2550c:	push	{r4, r5, r6, lr}
   25510:	ldr	r1, [sp, #16]
   25514:	cmp	r3, r1
   25518:	bcs	255a8 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x9c>
   2551c:	ldrb	ip, [r2, r3]
   25520:	add	r2, r2, r3
   25524:	cmp	ip, #34	; 0x22
   25528:	movne	r4, r3
   2552c:	bne	25540 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x34>
   25530:	b	25554 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x48>
   25534:	ldrb	r3, [r2, #1]!
   25538:	cmp	r3, #34	; 0x22
   2553c:	beq	25558 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x4c>
   25540:	add	r4, r4, #1
   25544:	cmp	r1, r4
   25548:	bne	25534 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x28>
   2554c:	mov	r0, r4
   25550:	pop	{r4, r5, r6, pc}
   25554:	mov	r4, r3
   25558:	ldr	r1, [r0, #56]	; 0x38
   2555c:	ldr	r3, [r0, #192]	; 0xc0
   25560:	ldr	r2, [r0, #8]
   25564:	ldr	ip, [r1, #56]	; 0x38
   25568:	mov	r5, r0
   2556c:	sub	r3, r3, ip
   25570:	add	r3, r3, r4
   25574:	str	r3, [r1, #60]	; 0x3c
   25578:	mov	r0, r2
   2557c:	ldr	r1, [r2, #16]
   25580:	bl	10904 <myhtml_token_attr_create@plt>
   25584:	cmp	r0, #0
   25588:	moveq	r3, #69	; 0x45
   2558c:	moveq	r4, r0
   25590:	movne	r3, #41	; 0x29
   25594:	addne	r4, r4, #1
   25598:	str	r0, [r5, #56]	; 0x38
   2559c:	str	r3, [r5, #160]	; 0xa0
   255a0:	mov	r0, r4
   255a4:	pop	{r4, r5, r6, pc}
   255a8:	mov	r4, r3
   255ac:	b	2554c <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x40>

000255b0 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base>:
   255b0:	push	{r4, r5, r6, lr}
   255b4:	ldr	r1, [sp, #16]
   255b8:	cmp	r3, r1
   255bc:	bcs	2564c <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x9c>
   255c0:	ldrb	ip, [r2, r3]
   255c4:	add	r2, r2, r3
   255c8:	cmp	ip, #39	; 0x27
   255cc:	movne	r4, r3
   255d0:	bne	255e4 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x34>
   255d4:	b	255f8 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x48>
   255d8:	ldrb	r3, [r2, #1]!
   255dc:	cmp	r3, #39	; 0x27
   255e0:	beq	255fc <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x4c>
   255e4:	add	r4, r4, #1
   255e8:	cmp	r1, r4
   255ec:	bne	255d8 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x28>
   255f0:	mov	r0, r4
   255f4:	pop	{r4, r5, r6, pc}
   255f8:	mov	r4, r3
   255fc:	ldr	r1, [r0, #56]	; 0x38
   25600:	ldr	r3, [r0, #192]	; 0xc0
   25604:	ldr	r2, [r0, #8]
   25608:	ldr	ip, [r1, #56]	; 0x38
   2560c:	mov	r5, r0
   25610:	sub	r3, r3, ip
   25614:	add	r3, r3, r4
   25618:	str	r3, [r1, #60]	; 0x3c
   2561c:	mov	r0, r2
   25620:	ldr	r1, [r2, #16]
   25624:	bl	10904 <myhtml_token_attr_create@plt>
   25628:	cmp	r0, #0
   2562c:	moveq	r3, #69	; 0x45
   25630:	moveq	r4, r0
   25634:	movne	r3, #41	; 0x29
   25638:	addne	r4, r4, #1
   2563c:	str	r0, [r5, #56]	; 0x38
   25640:	str	r3, [r5, #160]	; 0xa0
   25644:	mov	r0, r4
   25648:	pop	{r4, r5, r6, pc}
   2564c:	mov	r4, r3
   25650:	b	255f0 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x40>

00025654 <myhtml_tokenizer_state_comment_start_dash@@Base>:
   25654:	mov	ip, #2
   25658:	push	{r4, r5, r6, lr}
   2565c:	mov	r5, r0
   25660:	str	ip, [r1]
   25664:	ldrb	ip, [r2, r3]
   25668:	cmp	ip, #45	; 0x2d
   2566c:	moveq	r1, #49	; 0x31
   25670:	streq	r1, [r0, #160]	; 0xa0
   25674:	beq	25688 <myhtml_tokenizer_state_comment_start_dash@@Base+0x34>
   25678:	cmp	ip, #62	; 0x3e
   2567c:	movne	r1, #47	; 0x2f
   25680:	strne	r1, [r0, #160]	; 0xa0
   25684:	beq	25694 <myhtml_tokenizer_state_comment_start_dash@@Base+0x40>
   25688:	add	r4, r3, #1
   2568c:	mov	r0, r4
   25690:	pop	{r4, r5, r6, pc}
   25694:	mov	r2, r1
   25698:	ldr	r1, [r0, #192]	; 0xc0
   2569c:	add	r4, r3, #1
   256a0:	ldr	ip, [r2, #32]
   256a4:	add	r3, r4, r1
   256a8:	sub	r3, r3, ip
   256ac:	mov	r6, #0
   256b0:	str	r3, [r2, #36]	; 0x24
   256b4:	mov	r1, r4
   256b8:	str	r6, [r2, #28]
   256bc:	bl	10028 <myhtml_queue_add@plt>
   256c0:	cmp	r0, #0
   256c4:	movne	r3, #69	; 0x45
   256c8:	movne	r4, r6
   256cc:	strne	r3, [r5, #160]	; 0xa0
   256d0:	streq	r0, [r5, #160]	; 0xa0
   256d4:	b	2568c <myhtml_tokenizer_state_comment_start_dash@@Base+0x38>

000256d8 <myhtml_tokenizer_state_comment_end@@Base>:
   256d8:	push	{r4, r5, r6, lr}
   256dc:	ldrb	ip, [r2, r3]
   256e0:	cmp	ip, #62	; 0x3e
   256e4:	beq	25714 <myhtml_tokenizer_state_comment_end@@Base+0x3c>
   256e8:	cmp	ip, #33	; 0x21
   256ec:	moveq	r2, #50	; 0x32
   256f0:	addeq	r4, r3, #1
   256f4:	streq	r2, [r0, #160]	; 0xa0
   256f8:	beq	2570c <myhtml_tokenizer_state_comment_end@@Base+0x34>
   256fc:	cmp	ip, #45	; 0x2d
   25700:	add	r4, r3, #1
   25704:	movne	r3, #47	; 0x2f
   25708:	strne	r3, [r0, #160]	; 0xa0
   2570c:	mov	r0, r4
   25710:	pop	{r4, r5, r6, pc}
   25714:	ldr	lr, [r0, #192]	; 0xc0
   25718:	ldr	r2, [r1, #24]
   2571c:	add	r4, r3, #1
   25720:	sub	r2, lr, r2
   25724:	add	r2, r2, r3
   25728:	cmp	r2, #1
   2572c:	subhi	ip, r2, #2
   25730:	mov	r2, r1
   25734:	ldr	r1, [r1, #32]
   25738:	movls	ip, #0
   2573c:	sub	lr, lr, r1
   25740:	add	lr, lr, r4
   25744:	mov	r1, r4
   25748:	str	ip, [r2, #28]
   2574c:	str	lr, [r2, #36]	; 0x24
   25750:	mov	r5, r0
   25754:	bl	10028 <myhtml_queue_add@plt>
   25758:	cmp	r0, #0
   2575c:	movne	r3, #69	; 0x45
   25760:	movne	r4, #0
   25764:	streq	r0, [r5, #160]	; 0xa0
   25768:	strne	r3, [r5, #160]	; 0xa0
   2576c:	mov	r0, r4
   25770:	pop	{r4, r5, r6, pc}

00025774 <myhtml_tokenizer_state_comment_end_bang@@Base>:
   25774:	push	{r4, r5, r6, r7, r8, lr}
   25778:	mov	r5, r0
   2577c:	ldrb	ip, [r2, r3]
   25780:	cmp	ip, #62	; 0x3e
   25784:	beq	257ac <myhtml_tokenizer_state_comment_end_bang@@Base+0x38>
   25788:	cmp	ip, #45	; 0x2d
   2578c:	addne	r4, r3, #1
   25790:	moveq	r1, #48	; 0x30
   25794:	addeq	r4, r3, #1
   25798:	movne	r3, #47	; 0x2f
   2579c:	streq	r1, [r0, #160]	; 0xa0
   257a0:	strne	r3, [r0, #160]	; 0xa0
   257a4:	mov	r0, r4
   257a8:	pop	{r4, r5, r6, r7, r8, pc}
   257ac:	mov	r2, r1
   257b0:	ldr	r1, [r0, #192]	; 0xc0
   257b4:	ldr	r6, [r2, #24]
   257b8:	add	lr, r3, r1
   257bc:	sub	ip, lr, #3
   257c0:	cmp	ip, r6
   257c4:	bcc	25810 <myhtml_tokenizer_state_comment_end_bang@@Base+0x9c>
   257c8:	ldr	r7, [r2, #32]
   257cc:	mvn	ip, #2
   257d0:	add	r4, r3, #1
   257d4:	sub	r1, r1, r7
   257d8:	sub	ip, ip, r6
   257dc:	add	r1, r1, r4
   257e0:	add	ip, ip, lr
   257e4:	str	r1, [r2, #36]	; 0x24
   257e8:	str	ip, [r2, #28]
   257ec:	mov	r1, r4
   257f0:	bl	10028 <myhtml_queue_add@plt>
   257f4:	cmp	r0, #0
   257f8:	beq	2583c <myhtml_tokenizer_state_comment_end_bang@@Base+0xc8>
   257fc:	mov	r3, #69	; 0x45
   25800:	mov	r4, #0
   25804:	str	r3, [r5, #160]	; 0xa0
   25808:	mov	r0, r4
   2580c:	pop	{r4, r5, r6, r7, r8, pc}
   25810:	ldr	ip, [r2, #32]
   25814:	add	r4, r3, #1
   25818:	sub	r1, r1, ip
   2581c:	add	r1, r1, r4
   25820:	mov	r3, #0
   25824:	str	r1, [r2, #36]	; 0x24
   25828:	str	r3, [r2, #28]
   2582c:	mov	r1, r4
   25830:	bl	10028 <myhtml_queue_add@plt>
   25834:	cmp	r0, #0
   25838:	bne	257fc <myhtml_tokenizer_state_comment_end_bang@@Base+0x88>
   2583c:	mov	r3, #0
   25840:	str	r3, [r5, #160]	; 0xa0
   25844:	mov	r0, r4
   25848:	pop	{r4, r5, r6, r7, r8, pc}

0002584c <myhtml_tokenizer_state_markup_declaration_open@@Base>:
   2584c:	push	{r4, r5, r6, r7, r8, lr}
   25850:	ldr	r2, [r0, #192]	; 0xc0
   25854:	ldr	lr, [r1, #24]
   25858:	ldr	r4, [sp, #24]
   2585c:	add	r5, lr, #2
   25860:	add	r2, r4, r2
   25864:	cmp	r5, r2
   25868:	bls	2587c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x30>
   2586c:	ldr	r2, [r0, #76]	; 0x4c
   25870:	mov	r0, r4
   25874:	str	r3, [r2, #4]
   25878:	pop	{r4, r5, r6, r7, r8, pc}
   2587c:	mov	r6, r1
   25880:	mov	r2, #2
   25884:	mov	r1, lr
   25888:	mov	r7, r3
   2588c:	mov	r5, r0
   25890:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   25894:	ldrb	r3, [r0]
   25898:	cmp	r3, #45	; 0x2d
   2589c:	beq	259a8 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x15c>
   258a0:	ldr	r1, [r6, #24]
   258a4:	ldr	r3, [r5, #192]	; 0xc0
   258a8:	add	r2, r1, #7
   258ac:	add	r3, r4, r3
   258b0:	cmp	r2, r3
   258b4:	bls	258c8 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x7c>
   258b8:	ldr	r3, [r5, #76]	; 0x4c
   258bc:	mov	r0, r4
   258c0:	str	r7, [r3, #4]
   258c4:	pop	{r4, r5, r6, r7, r8, pc}
   258c8:	mov	r2, #7
   258cc:	mov	r0, r5
   258d0:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   258d4:	ldr	r1, [pc, #296]	; 25a04 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1b8>
   258d8:	mov	r2, #7
   258dc:	add	r1, pc, r1
   258e0:	mov	r4, r0
   258e4:	bl	102a4 <mycore_strncasecmp@plt>
   258e8:	cmp	r0, #0
   258ec:	beq	259d4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x188>
   258f0:	ldr	r1, [pc, #272]	; 25a08 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1bc>
   258f4:	mov	r0, r4
   258f8:	mov	r2, #7
   258fc:	add	r1, pc, r1
   25900:	bl	10f94 <strncmp@plt>
   25904:	subs	r8, r0, #0
   25908:	bne	25990 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x144>
   2590c:	ldr	r3, [r5, #68]	; 0x44
   25910:	ldr	r3, [r3, #8]
   25914:	cmp	r3, #0
   25918:	beq	25990 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x144>
   2591c:	ldr	r1, [r3, #4]
   25920:	cmp	r1, #0
   25924:	beq	25990 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x144>
   25928:	mov	r0, r5
   2592c:	bl	fce0 <myhtml_tree_wait_for_last_done_token@plt>
   25930:	mov	r0, r5
   25934:	bl	10d48 <myhtml_tree_adjusted_current_node@plt>
   25938:	cmp	r0, #0
   2593c:	beq	25990 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x144>
   25940:	ldr	r3, [r0, #8]
   25944:	cmp	r3, #1
   25948:	beq	25990 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x144>
   2594c:	ldr	r0, [r5, #76]	; 0x4c
   25950:	ldr	r3, [r6, #48]	; 0x30
   25954:	ldr	r2, [r6, #24]
   25958:	ldr	r1, [r6, #48]	; 0x30
   2595c:	ldr	r4, [r0, #12]
   25960:	and	r3, r3, #8
   25964:	eor	r3, r3, r1
   25968:	add	r2, r2, #7
   2596c:	mov	r0, #67	; 0x43
   25970:	mov	r1, #1
   25974:	str	r0, [r5, #160]	; 0xa0
   25978:	sub	r0, r2, r4
   2597c:	str	r3, [r6, #48]	; 0x30
   25980:	str	r8, [r6, #28]
   25984:	str	r2, [r6, #24]
   25988:	str	r1, [r6]
   2598c:	pop	{r4, r5, r6, r7, r8, pc}
   25990:	mov	r2, #0
   25994:	mov	r3, #43	; 0x2b
   25998:	str	r2, [r6, #28]
   2599c:	mov	r0, r7
   259a0:	str	r3, [r5, #160]	; 0xa0
   259a4:	pop	{r4, r5, r6, r7, r8, pc}
   259a8:	ldrb	r3, [r0, #1]
   259ac:	cmp	r3, #45	; 0x2d
   259b0:	bne	258a0 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x54>
   259b4:	ldr	r2, [r5, #192]	; 0xc0
   259b8:	add	r0, r7, #2
   259bc:	add	r2, r2, r0
   259c0:	mov	r1, #0
   259c4:	str	r3, [r5, #160]	; 0xa0
   259c8:	str	r2, [r6, #24]
   259cc:	str	r1, [r6, #28]
   259d0:	pop	{r4, r5, r6, r7, r8, pc}
   259d4:	ldr	r3, [r5, #76]	; 0x4c
   259d8:	ldr	r0, [r6, #24]
   259dc:	mov	r1, #51	; 0x33
   259e0:	ldr	ip, [r3, #12]
   259e4:	add	r4, r0, #7
   259e8:	mov	r2, #7
   259ec:	mov	r3, #3
   259f0:	str	r1, [r5, #160]	; 0xa0
   259f4:	sub	r0, r4, ip
   259f8:	str	r2, [r6, #28]
   259fc:	str	r3, [r6]
   25a00:	pop	{r4, r5, r6, r7, r8, pc}
   25a04:	andeq	r7, sp, r0, lsl r8
   25a08:	strdeq	r7, [sp], -r8

00025a0c <myhtml_tokenizer_state_comment_start@@Base>:
   25a0c:	mov	ip, #2
   25a10:	push	{r4, r5, r6, lr}
   25a14:	mov	r5, r0
   25a18:	str	ip, [r1]
   25a1c:	ldrb	ip, [r2, r3]
   25a20:	cmp	ip, #45	; 0x2d
   25a24:	moveq	r1, #46	; 0x2e
   25a28:	streq	r1, [r0, #160]	; 0xa0
   25a2c:	beq	25a40 <myhtml_tokenizer_state_comment_start@@Base+0x34>
   25a30:	cmp	ip, #62	; 0x3e
   25a34:	movne	r1, #47	; 0x2f
   25a38:	strne	r1, [r0, #160]	; 0xa0
   25a3c:	beq	25a4c <myhtml_tokenizer_state_comment_start@@Base+0x40>
   25a40:	add	r4, r3, #1
   25a44:	mov	r0, r4
   25a48:	pop	{r4, r5, r6, pc}
   25a4c:	mov	r2, r1
   25a50:	ldr	r1, [r0, #192]	; 0xc0
   25a54:	add	r4, r3, #1
   25a58:	ldr	ip, [r2, #32]
   25a5c:	add	r3, r4, r1
   25a60:	sub	r3, r3, ip
   25a64:	mov	r6, #0
   25a68:	str	r3, [r2, #36]	; 0x24
   25a6c:	mov	r1, r4
   25a70:	str	r6, [r2, #28]
   25a74:	bl	10028 <myhtml_queue_add@plt>
   25a78:	cmp	r0, #0
   25a7c:	movne	r3, #69	; 0x45
   25a80:	movne	r4, r6
   25a84:	strne	r3, [r5, #160]	; 0xa0
   25a88:	streq	r0, [r5, #160]	; 0xa0
   25a8c:	b	25a44 <myhtml_tokenizer_state_comment_start@@Base+0x38>

00025a90 <myhtml_tokenizer_set_first_settings@@Base>:
   25a90:	push	{r4, lr}
   25a94:	mov	r4, r0
   25a98:	ldr	r0, [r0, #24]
   25a9c:	bl	10190 <mythread_queue_get_current_node@plt>
   25aa0:	str	r0, [r4, #68]	; 0x44
   25aa4:	bl	10d78 <mythread_queue_node_clean@plt>
   25aa8:	ldr	r3, [r4, #68]	; 0x44
   25aac:	ldr	r0, [r4, #8]
   25ab0:	str	r4, [r3]
   25ab4:	ldr	r1, [r0, #12]
   25ab8:	bl	10a0c <myhtml_token_node_create@plt>
   25abc:	cmp	r0, #0
   25ac0:	str	r0, [r4, #64]	; 0x40
   25ac4:	ldrne	r3, [r4, #76]	; 0x4c
   25ac8:	movne	r0, #0
   25acc:	strne	r3, [r4, #80]	; 0x50
   25ad0:	moveq	r0, #2
   25ad4:	pop	{r4, pc}

00025ad8 <myhtml_tokenizer_fragment_init@@Base>:
   25ad8:	push	{r4, r5, r6, r7, r8, lr}
   25adc:	mov	r7, r2
   25ae0:	mov	r6, r1
   25ae4:	mov	r4, r0
   25ae8:	bl	ffe0 <myhtml_tree_node_create@plt>
   25aec:	cmp	r7, #1
   25af0:	str	r0, [r4, #88]	; 0x58
   25af4:	mov	r5, r0
   25af8:	stmib	r0, {r6, r7}
   25afc:	beq	25b60 <myhtml_tokenizer_fragment_init@@Base+0x88>
   25b00:	ldr	r3, [r4, #8]
   25b04:	mov	r0, r3
   25b08:	ldr	r1, [r3, #12]
   25b0c:	bl	10a0c <myhtml_token_node_create@plt>
   25b10:	ldr	r3, [r4, #88]	; 0x58
   25b14:	str	r0, [r5, #32]
   25b18:	ldr	r0, [r3, #32]
   25b1c:	cmp	r0, #0
   25b20:	beq	25bac <myhtml_tokenizer_fragment_init@@Base+0xd4>
   25b24:	bl	10550 <myhtml_token_set_done@plt>
   25b28:	ldr	r3, [r4, #88]	; 0x58
   25b2c:	mov	r2, #1
   25b30:	mov	r1, #0
   25b34:	ldr	r3, [r3, #32]
   25b38:	mov	r0, r4
   25b3c:	str	r3, [r4, #156]	; 0x9c
   25b40:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   25b44:	cmp	r6, #128	; 0x80
   25b48:	mov	r5, r0
   25b4c:	beq	25b9c <myhtml_tokenizer_fragment_init@@Base+0xc4>
   25b50:	mov	r0, r4
   25b54:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   25b58:	mov	r0, r5
   25b5c:	pop	{r4, r5, r6, r7, r8, pc}
   25b60:	cmp	r6, #93	; 0x5d
   25b64:	beq	25b84 <myhtml_tokenizer_fragment_init@@Base+0xac>
   25b68:	mov	r1, r6
   25b6c:	ldr	r0, [r4, #28]
   25b70:	bl	10a24 <myhtml_tag_get_by_id@plt>
   25b74:	ldr	r5, [r4, #88]	; 0x58
   25b78:	ldr	r3, [r0, #12]
   25b7c:	str	r3, [r4, #160]	; 0xa0
   25b80:	b	25b00 <myhtml_tokenizer_fragment_init@@Base+0x28>
   25b84:	ldr	r3, [r4, #180]	; 0xb4
   25b88:	ands	r3, r3, #1
   25b8c:	movne	r3, #4
   25b90:	strne	r3, [r4, #160]	; 0xa0
   25b94:	bne	25b00 <myhtml_tokenizer_fragment_init@@Base+0x28>
   25b98:	b	25b7c <myhtml_tokenizer_fragment_init@@Base+0xa4>
   25b9c:	mov	r1, #17
   25ba0:	mov	r0, r4
   25ba4:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   25ba8:	b	25b50 <myhtml_tokenizer_fragment_init@@Base+0x78>
   25bac:	mov	r5, r0
   25bb0:	b	25b58 <myhtml_tokenizer_fragment_init@@Base+0x80>

00025bb4 <myhtml_tokenizer_wait@@Base>:
   25bb4:	ldr	r3, [r0]
   25bb8:	ldr	r3, [r3]
   25bbc:	cmp	r3, #0
   25bc0:	bxeq	lr
   25bc4:	ldr	r1, [r0, #20]
   25bc8:	mov	r0, r3
   25bcc:	b	1097c <mythread_queue_list_entry_wait_for_done@plt>

00025bd0 <myhtml_tokenizer_post@@Base>:
   25bd0:	ldr	r3, [r0]
   25bd4:	ldr	r2, [r3]
   25bd8:	cmp	r2, #0
   25bdc:	beq	25c10 <myhtml_tokenizer_post@@Base+0x40>
   25be0:	push	{r4, lr}
   25be4:	mov	r4, r0
   25be8:	mov	r1, #0
   25bec:	mov	r0, r2
   25bf0:	bl	104c0 <mythread_resume@plt>
   25bf4:	ldr	r3, [r4]
   25bf8:	ldr	r0, [r3, #4]
   25bfc:	cmp	r0, #0
   25c00:	popeq	{r4, pc}
   25c04:	mov	r1, #0
   25c08:	pop	{r4, lr}
   25c0c:	b	104c0 <mythread_resume@plt>
   25c10:	ldr	r0, [r3, #4]
   25c14:	cmp	r0, #0
   25c18:	bxeq	lr
   25c1c:	mov	r1, #0
   25c20:	b	104c0 <mythread_resume@plt>

00025c24 <myhtml_tokenizer_chunk_process@@Base>:
   25c24:	push	{r4, r5, r6, r7, r8, lr}
   25c28:	mov	r3, r2
   25c2c:	ldr	r6, [r0]
   25c30:	mov	r4, r0
   25c34:	sub	sp, sp, #16
   25c38:	mov	r7, r1
   25c3c:	mov	r5, r2
   25c40:	mov	r2, r1
   25c44:	ldr	r1, [r0, #72]	; 0x48
   25c48:	ldr	r0, [r0, #76]	; 0x4c
   25c4c:	ldr	r8, [r6, #24]
   25c50:	bl	10094 <mycore_incoming_buffer_add@plt>
   25c54:	ldr	r3, [r6, #32]
   25c58:	tst	r3, #1
   25c5c:	ldrne	r3, [r4, #180]	; 0xb4
   25c60:	orrne	r3, r3, #16
   25c64:	strne	r3, [r4, #180]	; 0xb4
   25c68:	ldr	r3, [r4, #180]	; 0xb4
   25c6c:	tst	r3, #16
   25c70:	str	r0, [r4, #76]	; 0x4c
   25c74:	bne	25c8c <myhtml_tokenizer_chunk_process@@Base+0x68>
   25c78:	ldr	r3, [r4, #20]
   25c7c:	cmp	r3, #0
   25c80:	beq	25ce8 <myhtml_tokenizer_chunk_process@@Base+0xc4>
   25c84:	mov	r0, r4
   25c88:	bl	102b0 <myhtml_tokenizer_post@plt>
   25c8c:	ldr	r3, [r4, #68]	; 0x44
   25c90:	cmp	r3, #0
   25c94:	beq	25d28 <myhtml_tokenizer_chunk_process@@Base+0x104>
   25c98:	cmp	r5, #0
   25c9c:	movne	r3, #0
   25ca0:	beq	25ccc <myhtml_tokenizer_chunk_process@@Base+0xa8>
   25ca4:	ldr	r2, [r4, #160]	; 0xa0
   25ca8:	ldr	r1, [r4, #64]	; 0x40
   25cac:	mov	r0, r4
   25cb0:	str	r5, [sp]
   25cb4:	ldr	r6, [r8, r2, lsl #2]
   25cb8:	mov	r2, r7
   25cbc:	blx	r6
   25cc0:	cmp	r5, r0
   25cc4:	mov	r3, r0
   25cc8:	bhi	25ca4 <myhtml_tokenizer_chunk_process@@Base+0x80>
   25ccc:	ldr	r3, [r4, #192]	; 0xc0
   25cd0:	mov	r2, #0
   25cd4:	add	r5, r3, r5
   25cd8:	str	r5, [r4, #192]	; 0xc0
   25cdc:	mov	r0, r2
   25ce0:	add	sp, sp, #16
   25ce4:	pop	{r4, r5, r6, r7, r8, pc}
   25ce8:	mov	r0, r6
   25cec:	add	r1, sp, #16
   25cf0:	ldr	r2, [r0], #8
   25cf4:	str	r3, [r1, #-4]!
   25cf8:	ldr	r3, [r4, #24]
   25cfc:	ldr	r2, [r2, #16]
   25d00:	str	r1, [sp, #4]
   25d04:	ldr	r1, [r6, #20]
   25d08:	str	r1, [sp]
   25d0c:	mov	r1, #2
   25d10:	bl	10184 <mythread_queue_list_entry_push@plt>
   25d14:	ldr	r2, [sp, #12]
   25d18:	cmp	r2, #0
   25d1c:	str	r0, [r4, #20]
   25d20:	beq	25c84 <myhtml_tokenizer_chunk_process@@Base+0x60>
   25d24:	b	25cdc <myhtml_tokenizer_chunk_process@@Base+0xb8>
   25d28:	mov	r2, r5
   25d2c:	mov	r1, r7
   25d30:	mov	r0, r4
   25d34:	bl	105f8 <myhtml_tokenizer_set_first_settings@plt>
   25d38:	subs	r2, r0, #0
   25d3c:	beq	25c98 <myhtml_tokenizer_chunk_process@@Base+0x74>
   25d40:	b	25cdc <myhtml_tokenizer_chunk_process@@Base+0xb8>

00025d44 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>:
   25d44:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25d48:	mov	sl, r0
   25d4c:	ldr	r0, [r0, #200]	; 0xc8
   25d50:	mov	r5, r1
   25d54:	mov	r7, r2
   25d58:	bl	1082c <myencoding_get_function_by_id@plt>
   25d5c:	ldr	fp, [sl, #148]	; 0x94
   25d60:	cmp	fp, #0
   25d64:	mov	r8, r0
   25d68:	beq	25e44 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x100>
   25d6c:	mov	r0, fp
   25d70:	bl	10b80 <myhtml_stream_buffer_current_entry@plt>
   25d74:	cmp	r7, #0
   25d78:	addne	r7, r5, r7
   25d7c:	addne	r9, fp, #12
   25d80:	mov	r4, r0
   25d84:	ldr	r6, [r0, #4]
   25d88:	beq	25e3c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xf8>
   25d8c:	mov	r1, r9
   25d90:	ldrb	r0, [r5], #1
   25d94:	blx	r8
   25d98:	subs	ip, r0, #0
   25d9c:	bne	25e04 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xc0>
   25da0:	ldr	r3, [r4, #4]
   25da4:	ldr	r1, [r4, #8]
   25da8:	add	lr, r3, #4
   25dac:	cmp	lr, r1
   25db0:	mov	r0, sl
   25db4:	sub	r2, r3, r6
   25db8:	bcc	25de8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xa4>
   25dbc:	ldr	r1, [r4]
   25dc0:	str	ip, [sl, #200]	; 0xc8
   25dc4:	add	r1, r1, r6
   25dc8:	bl	10430 <myhtml_tokenizer_chunk_process@plt>
   25dcc:	mov	r1, #16384	; 0x4000
   25dd0:	mov	r0, fp
   25dd4:	bl	10934 <myhtml_stream_buffer_add_entry@plt>
   25dd8:	subs	r4, r0, #0
   25ddc:	beq	25e7c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x138>
   25de0:	ldr	r6, [r4, #4]
   25de4:	mov	r3, r6
   25de8:	ldr	r1, [r4]
   25dec:	ldr	r0, [fp, #24]
   25df0:	add	r1, r1, r3
   25df4:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   25df8:	ldr	r3, [r4, #4]
   25dfc:	add	r0, r3, r0
   25e00:	str	r0, [r4, #4]
   25e04:	cmp	r5, r7
   25e08:	bne	25d8c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x48>
   25e0c:	ldr	r2, [r4, #4]
   25e10:	cmp	r6, r2
   25e14:	beq	25e3c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xf8>
   25e18:	ldr	r1, [r4]
   25e1c:	mov	r4, #0
   25e20:	add	r1, r1, r6
   25e24:	sub	r2, r2, r6
   25e28:	str	r4, [sl, #200]	; 0xc8
   25e2c:	mov	r0, sl
   25e30:	bl	10430 <myhtml_tokenizer_chunk_process@plt>
   25e34:	mov	r0, r4
   25e38:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25e3c:	mov	r0, #0
   25e40:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25e44:	bl	10e74 <myhtml_stream_buffer_create@plt>
   25e48:	cmp	r0, #0
   25e4c:	str	r0, [sl, #148]	; 0x94
   25e50:	beq	25e84 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x140>
   25e54:	mov	r1, #1024	; 0x400
   25e58:	bl	10d6c <myhtml_stream_buffer_init@plt>
   25e5c:	cmp	r0, #0
   25e60:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25e64:	mov	r1, #16384	; 0x4000
   25e68:	ldr	r0, [sl, #148]	; 0x94
   25e6c:	bl	10934 <myhtml_stream_buffer_add_entry@plt>
   25e70:	cmp	r0, #0
   25e74:	ldrne	fp, [sl, #148]	; 0x94
   25e78:	bne	25d6c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x28>
   25e7c:	ldr	r0, [pc, #8]	; 25e8c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x148>
   25e80:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25e84:	mov	r0, #37632	; 0x9300
   25e88:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25e8c:	andeq	r9, r0, r4, lsl #6

00025e90 <myhtml_tokenizer_chunk@@Base>:
   25e90:	ldr	r3, [r0, #204]	; 0xcc
   25e94:	sub	r3, r3, #4
   25e98:	cmp	r3, #1
   25e9c:	bls	25ea4 <myhtml_tokenizer_chunk@@Base+0x14>
   25ea0:	b	10430 <myhtml_tokenizer_chunk_process@plt>
   25ea4:	b	10b98 <myhtml_tokenizer_chunk_with_stream_buffer@plt>

00025ea8 <myhtml_tokenizer_begin@@Base>:
   25ea8:	b	100c4 <myhtml_tokenizer_chunk@plt>

00025eac <myhtml_tokenizer_pause@@Base>:
   25eac:	ldr	r3, [r0]
   25eb0:	ldr	r2, [r3]
   25eb4:	cmp	r2, #0
   25eb8:	beq	25ee4 <myhtml_tokenizer_pause@@Base+0x38>
   25ebc:	push	{r4, lr}
   25ec0:	mov	r4, r0
   25ec4:	mov	r0, r2
   25ec8:	bl	10ad8 <mythread_stop@plt>
   25ecc:	ldr	r3, [r4]
   25ed0:	ldr	r0, [r3, #4]
   25ed4:	cmp	r0, #0
   25ed8:	popeq	{r4, pc}
   25edc:	pop	{r4, lr}
   25ee0:	b	10ad8 <mythread_stop@plt>
   25ee4:	ldr	r0, [r3, #4]
   25ee8:	cmp	r0, #0
   25eec:	bxeq	lr
   25ef0:	b	10ad8 <mythread_stop@plt>

00025ef4 <myhtml_tokenizer_end@@Base>:
   25ef4:	ldr	r2, [r0, #76]	; 0x4c
   25ef8:	push	{r4, r5, r6, lr}
   25efc:	cmp	r2, #0
   25f00:	sub	sp, sp, #8
   25f04:	mov	r4, r0
   25f08:	beq	25f40 <myhtml_tokenizer_end@@Base+0x4c>
   25f0c:	ldr	r1, [r0]
   25f10:	ldr	lr, [r0, #160]	; 0xa0
   25f14:	ldr	r3, [r2, #8]
   25f18:	ldr	r5, [r1, #24]
   25f1c:	ldr	ip, [r0, #192]	; 0xc0
   25f20:	add	lr, lr, #70	; 0x46
   25f24:	sub	ip, ip, r3
   25f28:	ldr	r2, [r2]
   25f2c:	ldr	r1, [r0, #64]	; 0x40
   25f30:	str	r3, [sp]
   25f34:	ldr	r5, [r5, lr, lsl #2]
   25f38:	str	ip, [r0, #192]	; 0xc0
   25f3c:	blx	r5
   25f40:	ldr	r3, [r4, #64]	; 0x40
   25f44:	mov	r1, #251	; 0xfb
   25f48:	mov	r2, r3
   25f4c:	str	r1, [r3]
   25f50:	mov	r0, r4
   25f54:	mov	r1, #0
   25f58:	bl	10028 <myhtml_queue_add@plt>
   25f5c:	cmp	r0, #0
   25f60:	movne	r3, #2
   25f64:	movne	r6, r3
   25f68:	strne	r3, [r4, #196]	; 0xc4
   25f6c:	ldr	r3, [r4, #180]	; 0xb4
   25f70:	ldreq	r6, [r4, #196]	; 0xc4
   25f74:	ands	r5, r3, #16
   25f78:	beq	25f94 <myhtml_tokenizer_end@@Base+0xa0>
   25f7c:	ldr	r3, [r4, #180]	; 0xb4
   25f80:	mov	r0, r6
   25f84:	orr	r3, r3, #32
   25f88:	str	r3, [r4, #180]	; 0xb4
   25f8c:	add	sp, sp, #8
   25f90:	pop	{r4, r5, r6, pc}
   25f94:	ldr	r3, [r4]
   25f98:	ldr	r1, [r4, #20]
   25f9c:	ldr	r0, [r3]
   25fa0:	bl	1097c <mythread_queue_list_entry_wait_for_done@plt>
   25fa4:	ldr	r0, [r4]
   25fa8:	ldr	r3, [r4, #20]
   25fac:	mov	r1, #2
   25fb0:	ldr	r2, [r0], #8
   25fb4:	ldr	r2, [r2, #16]
   25fb8:	str	r5, [sp]
   25fbc:	bl	fc08 <mythread_queue_list_entry_delete@plt>
   25fc0:	ldr	r3, [r4]
   25fc4:	ldr	r3, [r3]
   25fc8:	str	r0, [r4, #20]
   25fcc:	ldr	r0, [r3, #16]
   25fd0:	bl	105c8 <mythread_queue_list_get_count@plt>
   25fd4:	cmp	r0, #0
   25fd8:	beq	25ff8 <myhtml_tokenizer_end@@Base+0x104>
   25fdc:	cmp	r6, #0
   25fe0:	bne	25f7c <myhtml_tokenizer_end@@Base+0x88>
   25fe4:	ldr	r3, [r4]
   25fe8:	ldr	r0, [r3]
   25fec:	bl	10514 <mythread_check_status@plt>
   25ff0:	mov	r6, r0
   25ff4:	b	25f7c <myhtml_tokenizer_end@@Base+0x88>
   25ff8:	mov	r0, r4
   25ffc:	bl	105ec <myhtml_tokenizer_pause@plt>
   26000:	b	25fdc <myhtml_tokenizer_end@@Base+0xe8>

00026004 <myhtml_tokenizer_calc_current_namespace@@Base>:
   26004:	ldr	r3, [r0, #184]	; 0xb8
   26008:	tst	r3, #1
   2600c:	bxne	lr
   26010:	ldr	r3, [r0, #180]	; 0xb4
   26014:	tst	r3, #16
   26018:	bne	26094 <myhtml_tokenizer_calc_current_namespace@@Base+0x90>
   2601c:	ldr	r3, [r1]
   26020:	cmp	r3, #124	; 0x7c
   26024:	cmpne	r3, #218	; 0xda
   26028:	moveq	r2, #1
   2602c:	movne	r2, #0
   26030:	cmp	r3, #54	; 0x36
   26034:	orreq	r2, r2, #1
   26038:	cmp	r2, #0
   2603c:	bne	260a0 <myhtml_tokenizer_calc_current_namespace@@Base+0x9c>
   26040:	ldr	r2, [r0, #156]	; 0x9c
   26044:	cmp	r2, #0
   26048:	bxeq	lr
   2604c:	ldr	r2, [r1, #48]	; 0x30
   26050:	tst	r2, #1
   26054:	bxne	lr
   26058:	push	{r4, r5, r6, lr}
   2605c:	mov	r5, r1
   26060:	mov	r4, r0
   26064:	mov	r1, r3
   26068:	ldr	r0, [r0, #28]
   2606c:	bl	10a24 <myhtml_tag_get_by_id@plt>
   26070:	ldr	r3, [r0, #12]
   26074:	cmp	r3, #0
   26078:	popeq	{r4, r5, r6, pc}
   2607c:	mov	r1, r5
   26080:	mov	r0, r4
   26084:	bl	fce0 <myhtml_tree_wait_for_last_done_token@plt>
   26088:	ldr	r3, [r4, #164]	; 0xa4
   2608c:	str	r3, [r4, #160]	; 0xa0
   26090:	pop	{r4, r5, r6, pc}
   26094:	ldr	r3, [r0, #164]	; 0xa4
   26098:	str	r3, [r0, #160]	; 0xa0
   2609c:	bx	lr
   260a0:	str	r1, [r0, #156]	; 0x9c
   260a4:	bx	lr

000260a8 <myhtml_check_tag_parser@@Base>:
   260a8:	ldr	ip, [r1, #28]
   260ac:	push	{r4, r5, r6, r7, r8, r9, lr}
   260b0:	cmp	ip, r3
   260b4:	sub	sp, sp, #12
   260b8:	mov	r4, r1
   260bc:	mov	r8, r3
   260c0:	mov	r6, r0
   260c4:	mov	r9, r2
   260c8:	ldr	r7, [r0, #28]
   260cc:	bls	26108 <myhtml_check_tag_parser@@Base+0x60>
   260d0:	mov	r2, ip
   260d4:	ldr	r1, [r1, #24]
   260d8:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   260dc:	ldr	r2, [r4, #28]
   260e0:	mov	r1, r0
   260e4:	mov	r0, r7
   260e8:	bl	10b74 <myhtml_tag_get_by_name@plt>
   260ec:	mov	r5, r0
   260f0:	cmp	r5, #0
   260f4:	beq	26130 <myhtml_check_tag_parser@@Base+0x88>
   260f8:	ldr	r3, [r5]
   260fc:	str	r3, [r4]
   26100:	add	sp, sp, #12
   26104:	pop	{r4, r5, r6, r7, r8, r9, pc}
   26108:	ldr	r3, [r0, #192]	; 0xc0
   2610c:	ldr	r1, [r1, #24]
   26110:	mov	r2, ip
   26114:	sub	r1, r1, r3
   26118:	add	r1, r9, r1
   2611c:	mov	r0, r7
   26120:	bl	10b74 <myhtml_tag_get_by_name@plt>
   26124:	mov	r5, r0
   26128:	cmp	r5, #0
   2612c:	bne	260f8 <myhtml_check_tag_parser@@Base+0x50>
   26130:	ldr	r2, [r4, #28]
   26134:	cmp	r8, r2
   26138:	bcc	26180 <myhtml_check_tag_parser@@Base+0xd8>
   2613c:	ldr	r3, [r6, #192]	; 0xc0
   26140:	ldr	r1, [r4, #24]
   26144:	mov	r0, #1
   26148:	sub	r1, r1, r3
   2614c:	add	r1, r9, r1
   26150:	str	r0, [sp]
   26154:	mov	r3, r5
   26158:	mov	r0, r7
   2615c:	bl	10010 <myhtml_tag_add@plt>
   26160:	mov	r1, r0
   26164:	str	r0, [r4]
   26168:	mov	r3, #1
   2616c:	mov	r0, r7
   26170:	mov	r2, r3
   26174:	add	sp, sp, #12
   26178:	pop	{r4, r5, r6, r7, r8, r9, lr}
   2617c:	b	ff98 <myhtml_tag_set_category@plt>
   26180:	ldr	r1, [r4, #24]
   26184:	mov	r0, r6
   26188:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2618c:	mov	r1, #1
   26190:	ldr	r2, [r4, #28]
   26194:	mov	r3, r5
   26198:	str	r1, [sp]
   2619c:	mov	r1, r0
   261a0:	mov	r0, r7
   261a4:	bl	10010 <myhtml_tag_add@plt>
   261a8:	mov	r1, r0
   261ac:	str	r0, [r4]
   261b0:	b	26168 <myhtml_check_tag_parser@@Base+0xc0>

000261b4 <myhtml_tokenizer_queue_create_text_node_if_need@@Base>:
   261b4:	push	{r4, r5, r6, lr}
   261b8:	mov	r2, r1
   261bc:	ldr	r4, [r1]
   261c0:	cmp	r4, #0
   261c4:	bne	261d4 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x20>
   261c8:	ldr	lr, [r1, #24]
   261cc:	cmp	r3, lr
   261d0:	bhi	261dc <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x28>
   261d4:	mov	r0, r2
   261d8:	pop	{r4, r5, r6, pc}
   261dc:	ldr	ip, [r1, #48]	; 0x30
   261e0:	ldr	r6, [sp, #16]
   261e4:	sub	r3, r3, lr
   261e8:	ldr	r1, [r1, #32]
   261ec:	orr	ip, r6, ip
   261f0:	str	r3, [r2, #36]	; 0x24
   261f4:	str	r3, [r2, #28]
   261f8:	mov	r3, #1
   261fc:	str	ip, [r2, #48]	; 0x30
   26200:	str	lr, [r2, #32]
   26204:	str	r3, [r2]
   26208:	mov	r5, r0
   2620c:	bl	10028 <myhtml_queue_add@plt>
   26210:	cmp	r0, #0
   26214:	movne	r2, r4
   26218:	ldreq	r2, [r5, #64]	; 0x40
   2621c:	mov	r0, r2
   26220:	pop	{r4, r5, r6, pc}

00026224 <myhtml_tokenizer_state_tag_open@@Base>:
   26224:	push	{r4, r5, lr}
   26228:	mov	r4, r3
   2622c:	ldr	ip, [pc, #308]	; 26368 <myhtml_tokenizer_state_tag_open@@Base+0x144>
   26230:	ldrb	r3, [r2, r3]
   26234:	add	ip, pc, ip
   26238:	sub	sp, sp, #12
   2623c:	mov	r5, r0
   26240:	ldrb	ip, [ip, r3]
   26244:	cmp	ip, #1
   26248:	beq	2629c <myhtml_tokenizer_state_tag_open@@Base+0x78>
   2624c:	cmp	r3, #33	; 0x21
   26250:	beq	262dc <myhtml_tokenizer_state_tag_open@@Base+0xb8>
   26254:	cmp	r3, #47	; 0x2f
   26258:	moveq	r3, #8
   2625c:	addeq	r0, r4, #1
   26260:	streq	r3, [r5, #160]	; 0xa0
   26264:	beq	26294 <myhtml_tokenizer_state_tag_open@@Base+0x70>
   26268:	cmp	r3, #63	; 0x3f
   2626c:	beq	2631c <myhtml_tokenizer_state_tag_open@@Base+0xf8>
   26270:	ldr	r3, [r1, #48]	; 0x30
   26274:	ldr	r2, [r1, #48]	; 0x30
   26278:	and	r3, r3, #8
   2627c:	mov	lr, r1
   26280:	mov	r0, r4
   26284:	eor	r3, r3, r2
   26288:	mov	r2, #0
   2628c:	str	r3, [r1, #48]	; 0x30
   26290:	str	r2, [r5, #160]	; 0xa0
   26294:	add	sp, sp, #12
   26298:	pop	{r4, r5, pc}
   2629c:	ldr	r3, [r0, #192]	; 0xc0
   262a0:	mov	ip, #512	; 0x200
   262a4:	sub	r3, r3, #1
   262a8:	add	r3, r3, r4
   262ac:	str	ip, [sp]
   262b0:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   262b4:	cmp	r0, #0
   262b8:	beq	26358 <myhtml_tokenizer_state_tag_open@@Base+0x134>
   262bc:	ldr	r3, [r5, #192]	; 0xc0
   262c0:	mov	r2, #9
   262c4:	add	r3, r3, r4
   262c8:	str	r3, [r0, #24]
   262cc:	mov	r0, r4
   262d0:	str	r2, [r5, #160]	; 0xa0
   262d4:	add	sp, sp, #12
   262d8:	pop	{r4, r5, pc}
   262dc:	ldr	r3, [r0, #192]	; 0xc0
   262e0:	mov	ip, #512	; 0x200
   262e4:	sub	r3, r3, #1
   262e8:	add	r3, r3, r4
   262ec:	str	ip, [sp]
   262f0:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   262f4:	subs	r2, r0, #0
   262f8:	beq	26358 <myhtml_tokenizer_state_tag_open@@Base+0x134>
   262fc:	ldr	r3, [r5, #192]	; 0xc0
   26300:	add	r0, r4, #1
   26304:	add	r3, r3, r0
   26308:	mov	r1, #44	; 0x2c
   2630c:	str	r3, [r2, #24]
   26310:	str	r1, [r5, #160]	; 0xa0
   26314:	add	sp, sp, #12
   26318:	pop	{r4, r5, pc}
   2631c:	ldr	r3, [r5, #192]	; 0xc0
   26320:	mov	ip, #512	; 0x200
   26324:	sub	r3, r3, #1
   26328:	add	r3, r3, r4
   2632c:	str	ip, [sp]
   26330:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   26334:	cmp	r0, #0
   26338:	beq	26358 <myhtml_tokenizer_state_tag_open@@Base+0x134>
   2633c:	ldr	r3, [r5, #192]	; 0xc0
   26340:	mov	r2, #43	; 0x2b
   26344:	add	r3, r3, r4
   26348:	str	r3, [r0, #24]
   2634c:	mov	r0, r4
   26350:	str	r2, [r5, #160]	; 0xa0
   26354:	b	26294 <myhtml_tokenizer_state_tag_open@@Base+0x70>
   26358:	mov	r3, #69	; 0x45
   2635c:	str	r3, [r5, #160]	; 0xa0
   26360:	mov	r0, #0
   26364:	b	26294 <myhtml_tokenizer_state_tag_open@@Base+0x70>
   26368:			; <UNDEFINED> instruction: 0x000d6db8

0002636c <myhtml_tokenizer_state_end_tag_open@@Base>:
   2636c:	push	{r4, r5, r6, lr}
   26370:	mov	r4, r3
   26374:	ldr	r3, [pc, #200]	; 26444 <myhtml_tokenizer_state_end_tag_open@@Base+0xd8>
   26378:	ldrb	ip, [r2, r4]
   2637c:	add	r3, pc, r3
   26380:	sub	sp, sp, #8
   26384:	mov	r5, r0
   26388:	ldrb	r6, [r3, ip]
   2638c:	cmp	r6, #1
   26390:	beq	26400 <myhtml_tokenizer_state_end_tag_open@@Base+0x94>
   26394:	cmp	ip, #62	; 0x3e
   26398:	beq	263dc <myhtml_tokenizer_state_end_tag_open@@Base+0x70>
   2639c:	ldr	r3, [r0, #192]	; 0xc0
   263a0:	mov	ip, #512	; 0x200
   263a4:	sub	r3, r3, #2
   263a8:	add	r3, r3, r4
   263ac:	str	ip, [sp]
   263b0:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   263b4:	subs	r2, r0, #0
   263b8:	beq	263f0 <myhtml_tokenizer_state_end_tag_open@@Base+0x84>
   263bc:	ldr	r3, [r5, #192]	; 0xc0
   263c0:	mov	r0, r4
   263c4:	add	r4, r3, r4
   263c8:	mov	r3, #43	; 0x2b
   263cc:	str	r4, [r2, #24]
   263d0:	str	r3, [r5, #160]	; 0xa0
   263d4:	add	sp, sp, #8
   263d8:	pop	{r4, r5, r6, pc}
   263dc:	mov	r3, #0
   263e0:	add	r0, r4, #1
   263e4:	str	r3, [r5, #160]	; 0xa0
   263e8:	add	sp, sp, #8
   263ec:	pop	{r4, r5, r6, pc}
   263f0:	mov	r3, #69	; 0x45
   263f4:	str	r3, [r5, #160]	; 0xa0
   263f8:	mov	r0, #0
   263fc:	b	263d4 <myhtml_tokenizer_state_end_tag_open@@Base+0x68>
   26400:	ldr	r3, [r0, #192]	; 0xc0
   26404:	mov	ip, #512	; 0x200
   26408:	sub	r3, r3, #2
   2640c:	add	r3, r3, r4
   26410:	str	ip, [sp]
   26414:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   26418:	cmp	r0, #0
   2641c:	beq	263f0 <myhtml_tokenizer_state_end_tag_open@@Base+0x84>
   26420:	ldr	r3, [r5, #192]	; 0xc0
   26424:	mov	r2, #9
   26428:	add	r3, r3, r4
   2642c:	str	r3, [r0, #24]
   26430:	str	r6, [r0, #48]	; 0x30
   26434:	mov	r0, r4
   26438:	str	r2, [r5, #160]	; 0xa0
   2643c:	add	sp, sp, #8
   26440:	pop	{r4, r5, r6, pc}
   26444:	andeq	r6, sp, r0, ror ip

00026448 <myhtml_tokenizer_set_state@@Base>:
   26448:	ldr	r3, [r1, #48]	; 0x30
   2644c:	tst	r3, #1
   26450:	bne	2646c <myhtml_tokenizer_set_state@@Base+0x24>
   26454:	ldr	r1, [r1]
   26458:	cmp	r1, #93	; 0x5d
   2645c:	bne	26478 <myhtml_tokenizer_set_state@@Base+0x30>
   26460:	ldr	r3, [r0, #180]	; 0xb4
   26464:	tst	r3, #1
   26468:	bne	26478 <myhtml_tokenizer_set_state@@Base+0x30>
   2646c:	mov	r3, #0
   26470:	str	r3, [r0, #160]	; 0xa0
   26474:	bx	lr
   26478:	push	{r4, lr}
   2647c:	mov	r4, r0
   26480:	ldr	r0, [r0, #28]
   26484:	bl	10a24 <myhtml_tag_get_by_id@plt>
   26488:	ldr	r3, [r0, #12]
   2648c:	str	r3, [r4, #160]	; 0xa0
   26490:	pop	{r4, pc}

00026494 <myhtml_tokenizer_state_tag_name@@Base>:
   26494:	push	{r4, r5, r6, lr}
   26498:	mov	r4, r3
   2649c:	ldr	lr, [sp, #16]
   264a0:	cmp	r3, lr
   264a4:	bcs	26518 <myhtml_tokenizer_state_tag_name@@Base+0x84>
   264a8:	mov	r6, r0
   264ac:	ldrb	r0, [r2, r3]
   264b0:	ldr	r3, [pc, #332]	; 26604 <myhtml_tokenizer_state_tag_name@@Base+0x170>
   264b4:	mov	r5, r1
   264b8:	add	r3, pc, r3
   264bc:	add	r1, r2, r4
   264c0:	ldrb	r3, [r3, r0]
   264c4:	cmp	r3, #2
   264c8:	beq	26520 <myhtml_tokenizer_state_tag_name@@Base+0x8c>
   264cc:	cmp	r0, #47	; 0x2f
   264d0:	beq	26558 <myhtml_tokenizer_state_tag_name@@Base+0xc4>
   264d4:	cmp	r0, #62	; 0x3e
   264d8:	beq	26590 <myhtml_tokenizer_state_tag_name@@Base+0xfc>
   264dc:	ldr	r0, [pc, #292]	; 26608 <myhtml_tokenizer_state_tag_name@@Base+0x174>
   264e0:	add	r0, pc, r0
   264e4:	b	26508 <myhtml_tokenizer_state_tag_name@@Base+0x74>
   264e8:	ldrb	r3, [r1, #1]!
   264ec:	ldrb	ip, [r0, r3]
   264f0:	cmp	ip, #2
   264f4:	beq	26520 <myhtml_tokenizer_state_tag_name@@Base+0x8c>
   264f8:	cmp	r3, #47	; 0x2f
   264fc:	beq	26558 <myhtml_tokenizer_state_tag_name@@Base+0xc4>
   26500:	cmp	r3, #62	; 0x3e
   26504:	beq	26590 <myhtml_tokenizer_state_tag_name@@Base+0xfc>
   26508:	add	r4, r4, #1
   2650c:	cmp	lr, r4
   26510:	bne	264e8 <myhtml_tokenizer_state_tag_name@@Base+0x54>
   26514:	mov	r4, lr
   26518:	mov	r0, r4
   2651c:	pop	{r4, r5, r6, pc}
   26520:	ldr	r3, [r6, #192]	; 0xc0
   26524:	ldr	r1, [r5, #24]
   26528:	mov	r0, r6
   2652c:	sub	r3, r3, r1
   26530:	add	r3, r3, r4
   26534:	str	r3, [r5, #28]
   26538:	mov	r1, r5
   2653c:	mov	r3, r4
   26540:	bl	10c40 <myhtml_check_tag_parser@plt>
   26544:	add	r4, r4, #1
   26548:	mov	r3, #33	; 0x21
   2654c:	str	r3, [r6, #160]	; 0xa0
   26550:	mov	r0, r4
   26554:	pop	{r4, r5, r6, pc}
   26558:	ldr	r3, [r6, #192]	; 0xc0
   2655c:	ldr	r1, [r5, #24]
   26560:	mov	r0, r6
   26564:	sub	r3, r3, r1
   26568:	add	r3, r3, r4
   2656c:	str	r3, [r5, #28]
   26570:	mov	r1, r5
   26574:	mov	r3, r4
   26578:	bl	10c40 <myhtml_check_tag_parser@plt>
   2657c:	add	r4, r4, #1
   26580:	mov	r3, #42	; 0x2a
   26584:	str	r3, [r6, #160]	; 0xa0
   26588:	mov	r0, r4
   2658c:	pop	{r4, r5, r6, pc}
   26590:	ldr	r3, [r6, #192]	; 0xc0
   26594:	ldr	r1, [r5, #24]
   26598:	mov	r0, r6
   2659c:	sub	r3, r3, r1
   265a0:	add	r3, r3, r4
   265a4:	str	r3, [r5, #28]
   265a8:	mov	r1, r5
   265ac:	mov	r3, r4
   265b0:	bl	10c40 <myhtml_check_tag_parser@plt>
   265b4:	mov	r1, r5
   265b8:	mov	r0, r6
   265bc:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   265c0:	ldr	r3, [r6, #192]	; 0xc0
   265c4:	ldr	r2, [r5, #32]
   265c8:	add	r4, r4, #1
   265cc:	sub	r3, r3, r2
   265d0:	add	r3, r3, r4
   265d4:	str	r3, [r5, #36]	; 0x24
   265d8:	mov	r2, r5
   265dc:	mov	r1, r4
   265e0:	mov	r0, r6
   265e4:	bl	10028 <myhtml_queue_add@plt>
   265e8:	cmp	r0, #0
   265ec:	beq	26518 <myhtml_tokenizer_state_tag_name@@Base+0x84>
   265f0:	mov	r3, #69	; 0x45
   265f4:	mov	r4, #0
   265f8:	str	r3, [r6, #160]	; 0xa0
   265fc:	mov	r0, r4
   26600:	pop	{r4, r5, r6, pc}
   26604:	andeq	r6, sp, r4, lsr fp
   26608:	andeq	r6, sp, ip, lsl #22

0002660c <myhtml_tokenizer_state_self_closing_start_tag@@Base>:
   2660c:	push	{r4, r5, r6, lr}
   26610:	mov	r5, r0
   26614:	ldrb	lr, [r2, r3]
   26618:	cmp	lr, #62	; 0x3e
   2661c:	movne	r4, r3
   26620:	movne	r3, #33	; 0x21
   26624:	strne	r3, [r0, #160]	; 0xa0
   26628:	beq	26634 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x28>
   2662c:	mov	r0, r4
   26630:	pop	{r4, r5, r6, pc}
   26634:	ldr	r2, [r1, #48]	; 0x30
   26638:	add	r4, r3, #1
   2663c:	mov	r6, r1
   26640:	orr	r3, r2, #2
   26644:	str	r3, [r1, #48]	; 0x30
   26648:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   2664c:	ldr	r3, [r5, #192]	; 0xc0
   26650:	ldr	r1, [r6, #32]
   26654:	mov	r2, r6
   26658:	sub	r3, r3, r1
   2665c:	add	r3, r3, r4
   26660:	str	r3, [r6, #36]	; 0x24
   26664:	mov	r1, r4
   26668:	mov	r0, r5
   2666c:	bl	10028 <myhtml_queue_add@plt>
   26670:	cmp	r0, #0
   26674:	movne	r3, #69	; 0x45
   26678:	movne	r4, #0
   2667c:	strne	r3, [r5, #160]	; 0xa0
   26680:	mov	r0, r4
   26684:	pop	{r4, r5, r6, pc}

00026688 <myhtml_tokenizer_state_before_attribute_name@@Base>:
   26688:	push	{r4, r5, r6, r7, r8, lr}
   2668c:	add	r6, r2, r3
   26690:	ldrb	lr, [r2, r3]
   26694:	ldr	r7, [sp, #24]
   26698:	sub	ip, lr, #9
   2669c:	uxtb	ip, ip
   266a0:	cmp	ip, #23
   266a4:	bls	266bc <myhtml_tokenizer_state_before_attribute_name@@Base+0x34>
   266a8:	cmp	r3, r7
   266ac:	mov	r4, r3
   266b0:	bcc	26708 <myhtml_tokenizer_state_before_attribute_name@@Base+0x80>
   266b4:	mov	r0, r4
   266b8:	pop	{r4, r5, r6, r7, r8, pc}
   266bc:	ldr	r5, [pc, #332]	; 26810 <myhtml_tokenizer_state_before_attribute_name@@Base+0x188>
   266c0:	mvn	ip, r5, lsr ip
   266c4:	tst	ip, #1
   266c8:	bne	266a8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x20>
   266cc:	cmp	r3, r7
   266d0:	bcs	26808 <myhtml_tokenizer_state_before_attribute_name@@Base+0x180>
   266d4:	add	ip, r3, #1
   266d8:	add	r2, r2, ip
   266dc:	mov	r4, r3
   266e0:	add	r4, r4, #1
   266e4:	cmp	r7, r4
   266e8:	mov	r6, r2
   266ec:	beq	266b4 <myhtml_tokenizer_state_before_attribute_name@@Base+0x2c>
   266f0:	ldrb	lr, [r2], #1
   266f4:	sub	ip, lr, #9
   266f8:	uxtb	ip, ip
   266fc:	cmp	ip, #23
   26700:	mvn	ip, r5, lsr ip
   26704:	bls	2677c <myhtml_tokenizer_state_before_attribute_name@@Base+0xf4>
   26708:	cmp	lr, #62	; 0x3e
   2670c:	beq	267a4 <myhtml_tokenizer_state_before_attribute_name@@Base+0x11c>
   26710:	cmp	lr, #47	; 0x2f
   26714:	beq	2678c <myhtml_tokenizer_state_before_attribute_name@@Base+0x104>
   26718:	ldr	r2, [r1, #40]	; 0x28
   2671c:	cmp	r2, #0
   26720:	beq	267ec <myhtml_tokenizer_state_before_attribute_name@@Base+0x164>
   26724:	ldr	r2, [r1, #44]	; 0x2c
   26728:	ldr	r3, [r0, #56]	; 0x38
   2672c:	mov	ip, #0
   26730:	str	r3, [r2]
   26734:	str	r2, [r3, #4]
   26738:	str	r3, [r1, #44]	; 0x2c
   2673c:	str	ip, [r3]
   26740:	str	r3, [r0, #56]	; 0x38
   26744:	ldr	r1, [r0, #192]	; 0xc0
   26748:	mov	r2, #0
   2674c:	add	r1, r1, r4
   26750:	str	r1, [r3, #48]	; 0x30
   26754:	str	r2, [r3, #52]	; 0x34
   26758:	str	r2, [r3, #56]	; 0x38
   2675c:	str	r2, [r3, #60]	; 0x3c
   26760:	ldrb	r3, [r6]
   26764:	cmp	r3, #61	; 0x3d
   26768:	addeq	r4, r4, #1
   2676c:	mov	r3, #34	; 0x22
   26770:	str	r3, [r0, #160]	; 0xa0
   26774:	mov	r0, r4
   26778:	pop	{r4, r5, r6, r7, r8, pc}
   2677c:	tst	ip, #1
   26780:	beq	266e0 <myhtml_tokenizer_state_before_attribute_name@@Base+0x58>
   26784:	cmp	lr, #47	; 0x2f
   26788:	bne	26718 <myhtml_tokenizer_state_before_attribute_name@@Base+0x90>
   2678c:	ldr	r3, [r1, #48]	; 0x30
   26790:	add	r4, r4, #1
   26794:	orr	r3, r3, #2
   26798:	str	r3, [r1, #48]	; 0x30
   2679c:	mov	r0, r4
   267a0:	pop	{r4, r5, r6, r7, r8, pc}
   267a4:	mov	r5, r1
   267a8:	mov	r6, r0
   267ac:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   267b0:	ldr	r3, [r6, #192]	; 0xc0
   267b4:	ldr	r2, [r5, #32]
   267b8:	add	r4, r4, #1
   267bc:	sub	r3, r3, r2
   267c0:	add	r3, r3, r4
   267c4:	str	r3, [r5, #36]	; 0x24
   267c8:	mov	r2, r5
   267cc:	mov	r1, r4
   267d0:	mov	r0, r6
   267d4:	bl	10028 <myhtml_queue_add@plt>
   267d8:	cmp	r0, #0
   267dc:	movne	r3, #69	; 0x45
   267e0:	strne	r3, [r6, #160]	; 0xa0
   267e4:	movne	r4, #0
   267e8:	b	266b4 <myhtml_tokenizer_state_before_attribute_name@@Base+0x2c>
   267ec:	ldr	r3, [r0, #56]	; 0x38
   267f0:	str	r3, [r1, #40]	; 0x28
   267f4:	str	r3, [r1, #44]	; 0x2c
   267f8:	str	r3, [r0, #56]	; 0x38
   267fc:	str	r2, [r3]
   26800:	str	r2, [r3, #4]
   26804:	b	26744 <myhtml_tokenizer_state_before_attribute_name@@Base+0xbc>
   26808:	mov	r4, r3
   2680c:	b	266b4 <myhtml_tokenizer_state_before_attribute_name@@Base+0x2c>
   26810:	addeq	r0, r0, fp, lsl r0

00026814 <myhtml_tokenizer_state_attribute_name@@Base>:
   26814:	push	{r4, r5, r6, r7, r8, lr}
   26818:	mov	r4, r3
   2681c:	ldr	lr, [sp, #24]
   26820:	cmp	r3, lr
   26824:	bcs	269cc <myhtml_tokenizer_state_attribute_name@@Base+0x1b8>
   26828:	ldrb	ip, [r2, r3]
   2682c:	add	r2, r2, r3
   26830:	mov	r5, r0
   26834:	sub	r3, ip, #9
   26838:	mov	r6, r1
   2683c:	uxtb	r3, r3
   26840:	cmp	r3, #23
   26844:	bhi	268d8 <myhtml_tokenizer_state_attribute_name@@Base+0xc4>
   26848:	ldr	r1, [pc, #388]	; 269d4 <myhtml_tokenizer_state_attribute_name@@Base+0x1c0>
   2684c:	mvn	r3, r1, lsr r3
   26850:	tst	r3, #1
   26854:	beq	268ac <myhtml_tokenizer_state_attribute_name@@Base+0x98>
   26858:	cmp	ip, #62	; 0x3e
   2685c:	ldrne	r3, [pc, #368]	; 269d4 <myhtml_tokenizer_state_attribute_name@@Base+0x1c0>
   26860:	bne	26878 <myhtml_tokenizer_state_attribute_name@@Base+0x64>
   26864:	b	268f0 <myhtml_tokenizer_state_attribute_name@@Base+0xdc>
   26868:	cmp	ip, #61	; 0x3d
   2686c:	beq	268e0 <myhtml_tokenizer_state_attribute_name@@Base+0xcc>
   26870:	cmp	ip, #62	; 0x3e
   26874:	beq	268f0 <myhtml_tokenizer_state_attribute_name@@Base+0xdc>
   26878:	cmp	ip, #47	; 0x2f
   2687c:	beq	26954 <myhtml_tokenizer_state_attribute_name@@Base+0x140>
   26880:	add	r4, r4, #1
   26884:	cmp	lr, r4
   26888:	beq	269a0 <myhtml_tokenizer_state_attribute_name@@Base+0x18c>
   2688c:	ldrb	ip, [r2, #1]!
   26890:	sub	r1, ip, #9
   26894:	uxtb	r1, r1
   26898:	cmp	r1, #23
   2689c:	mvn	r1, r3, lsr r1
   268a0:	bhi	26868 <myhtml_tokenizer_state_attribute_name@@Base+0x54>
   268a4:	tst	r1, #1
   268a8:	bne	26870 <myhtml_tokenizer_state_attribute_name@@Base+0x5c>
   268ac:	ldr	r2, [r5, #56]	; 0x38
   268b0:	ldr	r3, [r5, #192]	; 0xc0
   268b4:	mov	r1, #35	; 0x23
   268b8:	ldr	r0, [r2, #48]	; 0x30
   268bc:	add	r7, r4, #1
   268c0:	sub	r3, r3, r0
   268c4:	add	r4, r3, r4
   268c8:	str	r4, [r2, #52]	; 0x34
   268cc:	str	r1, [r5, #160]	; 0xa0
   268d0:	mov	r0, r7
   268d4:	pop	{r4, r5, r6, r7, r8, pc}
   268d8:	cmp	ip, #61	; 0x3d
   268dc:	bne	26858 <myhtml_tokenizer_state_attribute_name@@Base+0x44>
   268e0:	ldr	r2, [r5, #56]	; 0x38
   268e4:	ldr	r3, [r5, #192]	; 0xc0
   268e8:	mov	r1, #36	; 0x24
   268ec:	b	268b8 <myhtml_tokenizer_state_attribute_name@@Base+0xa4>
   268f0:	ldr	r2, [r5, #56]	; 0x38
   268f4:	ldr	r3, [r5, #192]	; 0xc0
   268f8:	mov	r1, r6
   268fc:	ldr	ip, [r2, #48]	; 0x30
   26900:	mov	r0, r5
   26904:	sub	r3, r3, ip
   26908:	add	r3, r3, r4
   2690c:	str	r3, [r2, #52]	; 0x34
   26910:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   26914:	ldr	r3, [r5, #192]	; 0xc0
   26918:	ldr	r2, [r6, #32]
   2691c:	add	r7, r4, #1
   26920:	sub	r3, r3, r2
   26924:	add	r3, r3, r7
   26928:	str	r3, [r6, #36]	; 0x24
   2692c:	mov	r2, r6
   26930:	mov	r1, r7
   26934:	mov	r0, r5
   26938:	bl	10028 <myhtml_queue_add@plt>
   2693c:	cmp	r0, #0
   26940:	beq	269ac <myhtml_tokenizer_state_attribute_name@@Base+0x198>
   26944:	mov	r3, #69	; 0x45
   26948:	str	r3, [r5, #160]	; 0xa0
   2694c:	mov	r7, #0
   26950:	b	268d0 <myhtml_tokenizer_state_attribute_name@@Base+0xbc>
   26954:	ldr	r1, [r5, #56]	; 0x38
   26958:	ldr	r3, [r5, #192]	; 0xc0
   2695c:	ldr	r2, [r6, #48]	; 0x30
   26960:	ldr	ip, [r1, #48]	; 0x30
   26964:	ldr	r0, [r5, #8]
   26968:	sub	r3, r3, ip
   2696c:	add	r3, r3, r4
   26970:	orr	r2, r2, #2
   26974:	mov	ip, #33	; 0x21
   26978:	str	r3, [r1, #52]	; 0x34
   2697c:	ldr	r1, [r0, #16]
   26980:	str	r2, [r6, #48]	; 0x30
   26984:	str	ip, [r5, #160]	; 0xa0
   26988:	bl	10904 <myhtml_token_attr_create@plt>
   2698c:	cmp	r0, #0
   26990:	str	r0, [r5, #56]	; 0x38
   26994:	addne	r7, r4, #1
   26998:	bne	268d0 <myhtml_tokenizer_state_attribute_name@@Base+0xbc>
   2699c:	b	26944 <myhtml_tokenizer_state_attribute_name@@Base+0x130>
   269a0:	mov	r7, lr
   269a4:	mov	r0, r7
   269a8:	pop	{r4, r5, r6, r7, r8, pc}
   269ac:	ldr	r3, [r5, #8]
   269b0:	mov	r0, r3
   269b4:	ldr	r1, [r3, #16]
   269b8:	bl	10904 <myhtml_token_attr_create@plt>
   269bc:	cmp	r0, #0
   269c0:	str	r0, [r5, #56]	; 0x38
   269c4:	bne	268d0 <myhtml_tokenizer_state_attribute_name@@Base+0xbc>
   269c8:	b	26944 <myhtml_tokenizer_state_attribute_name@@Base+0x130>
   269cc:	mov	r7, r3
   269d0:	b	268d0 <myhtml_tokenizer_state_attribute_name@@Base+0xbc>
   269d4:	addeq	r0, r0, fp, lsl r0

000269d8 <myhtml_tokenizer_state_after_attribute_name@@Base>:
   269d8:	push	{r4, r5, r6, r7, r8, lr}
   269dc:	mov	r4, r3
   269e0:	ldr	r7, [sp, #24]
   269e4:	cmp	r3, r7
   269e8:	bcs	26ab0 <myhtml_tokenizer_state_after_attribute_name@@Base+0xd8>
   269ec:	ldrb	ip, [r2, r3]
   269f0:	mov	r5, r0
   269f4:	add	r2, r2, r3
   269f8:	cmp	ip, #61	; 0x3d
   269fc:	beq	26bdc <myhtml_tokenizer_state_after_attribute_name@@Base+0x204>
   26a00:	cmp	ip, #62	; 0x3e
   26a04:	mov	r6, r1
   26a08:	beq	26b70 <myhtml_tokenizer_state_after_attribute_name@@Base+0x198>
   26a0c:	sub	r3, ip, #34	; 0x22
   26a10:	uxtb	r3, r3
   26a14:	cmp	r3, #26
   26a18:	bhi	26a2c <myhtml_tokenizer_state_after_attribute_name@@Base+0x54>
   26a1c:	ldr	r1, [pc, #524]	; 26c30 <myhtml_tokenizer_state_after_attribute_name@@Base+0x258>
   26a20:	mvn	r3, r1, lsr r3
   26a24:	tst	r3, #1
   26a28:	beq	26afc <myhtml_tokenizer_state_after_attribute_name@@Base+0x124>
   26a2c:	ldr	r3, [pc, #512]	; 26c34 <myhtml_tokenizer_state_after_attribute_name@@Base+0x25c>
   26a30:	ldr	r1, [pc, #504]	; 26c30 <myhtml_tokenizer_state_after_attribute_name@@Base+0x258>
   26a34:	sub	ip, ip, #9
   26a38:	uxtb	ip, ip
   26a3c:	cmp	ip, #23
   26a40:	mvn	ip, r3, lsr ip
   26a44:	bls	26ab8 <myhtml_tokenizer_state_after_attribute_name@@Base+0xe0>
   26a48:	ldr	r3, [r5, #8]
   26a4c:	mov	r0, r3
   26a50:	ldr	r1, [r3, #16]
   26a54:	bl	10904 <myhtml_token_attr_create@plt>
   26a58:	cmp	r0, #0
   26a5c:	str	r0, [r5, #56]	; 0x38
   26a60:	beq	26bc8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f0>
   26a64:	ldr	r3, [r6, #40]	; 0x28
   26a68:	cmp	r3, #0
   26a6c:	beq	26c18 <myhtml_tokenizer_state_after_attribute_name@@Base+0x240>
   26a70:	ldr	r3, [r6, #44]	; 0x2c
   26a74:	mov	r2, #0
   26a78:	str	r0, [r3]
   26a7c:	str	r3, [r0, #4]
   26a80:	str	r0, [r6, #44]	; 0x2c
   26a84:	str	r2, [r0]
   26a88:	str	r0, [r5, #56]	; 0x38
   26a8c:	ldr	r2, [r5, #192]	; 0xc0
   26a90:	mov	r3, #0
   26a94:	add	r2, r2, r4
   26a98:	mov	r1, #34	; 0x22
   26a9c:	str	r2, [r0, #48]	; 0x30
   26aa0:	str	r3, [r0, #52]	; 0x34
   26aa4:	str	r3, [r0, #56]	; 0x38
   26aa8:	str	r3, [r0, #60]	; 0x3c
   26aac:	str	r1, [r5, #160]	; 0xa0
   26ab0:	mov	r0, r4
   26ab4:	pop	{r4, r5, r6, r7, r8, pc}
   26ab8:	tst	ip, #1
   26abc:	bne	26a48 <myhtml_tokenizer_state_after_attribute_name@@Base+0x70>
   26ac0:	add	r4, r4, #1
   26ac4:	cmp	r7, r4
   26ac8:	beq	26bf0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x218>
   26acc:	ldrb	ip, [r2, #1]!
   26ad0:	sub	lr, ip, #34	; 0x22
   26ad4:	cmp	ip, #61	; 0x3d
   26ad8:	uxtb	lr, lr
   26adc:	beq	26bdc <myhtml_tokenizer_state_after_attribute_name@@Base+0x204>
   26ae0:	cmp	ip, #62	; 0x3e
   26ae4:	mvn	r0, r1, lsr lr
   26ae8:	beq	26b70 <myhtml_tokenizer_state_after_attribute_name@@Base+0x198>
   26aec:	cmp	lr, #26
   26af0:	bhi	26a34 <myhtml_tokenizer_state_after_attribute_name@@Base+0x5c>
   26af4:	tst	r0, #1
   26af8:	bne	26a34 <myhtml_tokenizer_state_after_attribute_name@@Base+0x5c>
   26afc:	ldr	r3, [r5, #8]
   26b00:	mov	r0, r3
   26b04:	ldr	r1, [r3, #16]
   26b08:	bl	10904 <myhtml_token_attr_create@plt>
   26b0c:	cmp	r0, #0
   26b10:	str	r0, [r5, #56]	; 0x38
   26b14:	beq	26bc8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f0>
   26b18:	ldr	r3, [r6, #40]	; 0x28
   26b1c:	cmp	r3, #0
   26b20:	beq	26bfc <myhtml_tokenizer_state_after_attribute_name@@Base+0x224>
   26b24:	ldr	r3, [r6, #44]	; 0x2c
   26b28:	mov	r2, #0
   26b2c:	str	r0, [r3]
   26b30:	str	r3, [r0, #4]
   26b34:	mov	r3, r0
   26b38:	str	r0, [r6, #44]	; 0x2c
   26b3c:	str	r2, [r0]
   26b40:	str	r0, [r5, #56]	; 0x38
   26b44:	ldr	r1, [r5, #192]	; 0xc0
   26b48:	mov	r2, #0
   26b4c:	add	r1, r1, r4
   26b50:	mov	r0, #34	; 0x22
   26b54:	str	r1, [r3, #48]	; 0x30
   26b58:	str	r2, [r3, #52]	; 0x34
   26b5c:	str	r2, [r3, #56]	; 0x38
   26b60:	str	r2, [r3, #60]	; 0x3c
   26b64:	str	r0, [r5, #160]	; 0xa0
   26b68:	mov	r0, r4
   26b6c:	pop	{r4, r5, r6, r7, r8, pc}
   26b70:	mov	r1, r6
   26b74:	mov	r0, r5
   26b78:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   26b7c:	ldr	r3, [r5, #192]	; 0xc0
   26b80:	ldr	r2, [r6, #32]
   26b84:	add	r4, r4, #1
   26b88:	sub	r3, r3, r2
   26b8c:	add	r3, r3, r4
   26b90:	str	r3, [r6, #36]	; 0x24
   26b94:	mov	r2, r6
   26b98:	mov	r1, r4
   26b9c:	mov	r0, r5
   26ba0:	bl	10028 <myhtml_queue_add@plt>
   26ba4:	cmp	r0, #0
   26ba8:	bne	26bc8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f0>
   26bac:	ldr	r3, [r5, #8]
   26bb0:	mov	r0, r3
   26bb4:	ldr	r1, [r3, #16]
   26bb8:	bl	10904 <myhtml_token_attr_create@plt>
   26bbc:	cmp	r0, #0
   26bc0:	str	r0, [r5, #56]	; 0x38
   26bc4:	bne	26ab0 <myhtml_tokenizer_state_after_attribute_name@@Base+0xd8>
   26bc8:	mov	r3, #69	; 0x45
   26bcc:	mov	r4, #0
   26bd0:	str	r3, [r5, #160]	; 0xa0
   26bd4:	mov	r0, r4
   26bd8:	pop	{r4, r5, r6, r7, r8, pc}
   26bdc:	mov	r3, #36	; 0x24
   26be0:	add	r4, r4, #1
   26be4:	str	r3, [r5, #160]	; 0xa0
   26be8:	mov	r0, r4
   26bec:	pop	{r4, r5, r6, r7, r8, pc}
   26bf0:	mov	r4, r7
   26bf4:	mov	r0, r4
   26bf8:	pop	{r4, r5, r6, r7, r8, pc}
   26bfc:	str	r0, [r6, #40]	; 0x28
   26c00:	str	r0, [r6, #44]	; 0x2c
   26c04:	str	r0, [r5, #56]	; 0x38
   26c08:	str	r3, [r0]
   26c0c:	str	r3, [r0, #4]
   26c10:	mov	r3, r0
   26c14:	b	26b44 <myhtml_tokenizer_state_after_attribute_name@@Base+0x16c>
   26c18:	str	r0, [r6, #40]	; 0x28
   26c1c:	str	r0, [r6, #44]	; 0x2c
   26c20:	str	r0, [r5, #56]	; 0x38
   26c24:	str	r3, [r0]
   26c28:	str	r3, [r0, #4]
   26c2c:	b	26a8c <myhtml_tokenizer_state_after_attribute_name@@Base+0xb4>
   26c30:	streq	r0, [r0], #-33	; 0xffffffdf
   26c34:	addeq	r0, r0, fp, lsl r0

00026c38 <myhtml_tokenizer_state_before_attribute_value@@Base>:
   26c38:	push	{r4, r5, r6, lr}
   26c3c:	mov	r4, r3
   26c40:	ldr	lr, [sp, #16]
   26c44:	cmp	r3, lr
   26c48:	bcs	26cf4 <myhtml_tokenizer_state_before_attribute_value@@Base+0xbc>
   26c4c:	ldrb	r3, [r2, r3]
   26c50:	mov	r5, r0
   26c54:	mov	r6, r1
   26c58:	cmp	r3, #62	; 0x3e
   26c5c:	add	r2, r2, r4
   26c60:	beq	26cfc <myhtml_tokenizer_state_before_attribute_value@@Base+0xc4>
   26c64:	sub	r1, r3, #9
   26c68:	uxtb	r1, r1
   26c6c:	cmp	r1, #23
   26c70:	bhi	26cb0 <myhtml_tokenizer_state_before_attribute_value@@Base+0x78>
   26c74:	ldr	r0, [pc, #256]	; 26d7c <myhtml_tokenizer_state_before_attribute_value@@Base+0x144>
   26c78:	mvn	r1, r0, lsr r1
   26c7c:	tst	r1, #1
   26c80:	bne	26cd0 <myhtml_tokenizer_state_before_attribute_value@@Base+0x98>
   26c84:	add	r4, r4, #1
   26c88:	cmp	lr, r4
   26c8c:	beq	26d4c <myhtml_tokenizer_state_before_attribute_value@@Base+0x114>
   26c90:	ldrb	r3, [r2, #1]!
   26c94:	sub	ip, r3, #9
   26c98:	cmp	r3, #62	; 0x3e
   26c9c:	uxtb	ip, ip
   26ca0:	beq	26cfc <myhtml_tokenizer_state_before_attribute_value@@Base+0xc4>
   26ca4:	cmp	ip, #23
   26ca8:	mvn	r1, r0, lsr ip
   26cac:	bls	26cc8 <myhtml_tokenizer_state_before_attribute_value@@Base+0x90>
   26cb0:	cmp	r3, #34	; 0x22
   26cb4:	bne	26cd0 <myhtml_tokenizer_state_before_attribute_value@@Base+0x98>
   26cb8:	mov	r3, #37	; 0x25
   26cbc:	add	r4, r4, #1
   26cc0:	str	r3, [r5, #160]	; 0xa0
   26cc4:	b	26ce4 <myhtml_tokenizer_state_before_attribute_value@@Base+0xac>
   26cc8:	tst	r1, #1
   26ccc:	beq	26c84 <myhtml_tokenizer_state_before_attribute_value@@Base+0x4c>
   26cd0:	cmp	r3, #39	; 0x27
   26cd4:	addeq	r4, r4, #1
   26cd8:	moveq	r3, #38	; 0x26
   26cdc:	movne	r3, #39	; 0x27
   26ce0:	str	r3, [r5, #160]	; 0xa0
   26ce4:	ldr	r3, [r5, #192]	; 0xc0
   26ce8:	ldr	r2, [r5, #56]	; 0x38
   26cec:	add	r3, r3, r4
   26cf0:	str	r3, [r2, #56]	; 0x38
   26cf4:	mov	r0, r4
   26cf8:	pop	{r4, r5, r6, pc}
   26cfc:	mov	r1, r6
   26d00:	mov	r0, r5
   26d04:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   26d08:	ldr	r3, [r5, #192]	; 0xc0
   26d0c:	ldr	r2, [r6, #32]
   26d10:	add	r4, r4, #1
   26d14:	sub	r3, r3, r2
   26d18:	add	r3, r3, r4
   26d1c:	str	r3, [r6, #36]	; 0x24
   26d20:	mov	r2, r6
   26d24:	mov	r1, r4
   26d28:	mov	r0, r5
   26d2c:	bl	10028 <myhtml_queue_add@plt>
   26d30:	cmp	r0, #0
   26d34:	beq	26d58 <myhtml_tokenizer_state_before_attribute_value@@Base+0x120>
   26d38:	mov	r3, #69	; 0x45
   26d3c:	mov	r4, #0
   26d40:	str	r3, [r5, #160]	; 0xa0
   26d44:	mov	r0, r4
   26d48:	pop	{r4, r5, r6, pc}
   26d4c:	mov	r4, lr
   26d50:	mov	r0, r4
   26d54:	pop	{r4, r5, r6, pc}
   26d58:	ldr	r3, [r5, #8]
   26d5c:	mov	r0, r3
   26d60:	ldr	r1, [r3, #16]
   26d64:	bl	10904 <myhtml_token_attr_create@plt>
   26d68:	cmp	r0, #0
   26d6c:	str	r0, [r5, #56]	; 0x38
   26d70:	beq	26d38 <myhtml_tokenizer_state_before_attribute_value@@Base+0x100>
   26d74:	mov	r0, r4
   26d78:	pop	{r4, r5, r6, pc}
   26d7c:	addeq	r0, r0, fp, lsl r0

00026d80 <myhtml_tokenizer_state_attribute_value_unquoted@@Base>:
   26d80:	push	{r4, r5, r6, lr}
   26d84:	mov	r4, r3
   26d88:	ldr	ip, [sp, #16]
   26d8c:	cmp	r3, ip
   26d90:	bcs	26ebc <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x13c>
   26d94:	mov	r6, r1
   26d98:	ldrb	r1, [r2, r3]
   26d9c:	add	r2, r2, r3
   26da0:	mov	r5, r0
   26da4:	sub	r3, r1, #9
   26da8:	uxtb	r3, r3
   26dac:	cmp	r3, #23
   26db0:	bhi	26ec4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x144>
   26db4:	ldr	r1, [pc, #288]	; 26edc <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x15c>
   26db8:	mvn	r3, r1, lsr r3
   26dbc:	tst	r3, #1
   26dc0:	beq	26e80 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x100>
   26dc4:	ldr	r0, [pc, #272]	; 26edc <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x15c>
   26dc8:	add	r4, r4, #1
   26dcc:	cmp	ip, r4
   26dd0:	beq	26ed0 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x150>
   26dd4:	ldrb	r3, [r2, #1]!
   26dd8:	sub	r1, r3, #9
   26ddc:	uxtb	r1, r1
   26de0:	cmp	r1, #23
   26de4:	mvn	r1, r0, lsr r1
   26de8:	bls	26e78 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xf8>
   26dec:	cmp	r3, #62	; 0x3e
   26df0:	bne	26dc8 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x48>
   26df4:	ldr	r2, [r5, #56]	; 0x38
   26df8:	ldr	r3, [r5, #192]	; 0xc0
   26dfc:	mov	r1, r6
   26e00:	ldr	ip, [r2, #56]	; 0x38
   26e04:	mov	r0, r5
   26e08:	sub	r3, r3, ip
   26e0c:	add	r3, r3, r4
   26e10:	str	r3, [r2, #60]	; 0x3c
   26e14:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   26e18:	ldr	r3, [r5, #192]	; 0xc0
   26e1c:	ldr	r2, [r6, #32]
   26e20:	add	r4, r4, #1
   26e24:	sub	r3, r3, r2
   26e28:	add	r3, r3, r4
   26e2c:	str	r3, [r6, #36]	; 0x24
   26e30:	mov	r2, r6
   26e34:	mov	r1, r4
   26e38:	mov	r0, r5
   26e3c:	bl	10028 <myhtml_queue_add@plt>
   26e40:	cmp	r0, #0
   26e44:	bne	26e64 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xe4>
   26e48:	ldr	r3, [r5, #8]
   26e4c:	mov	r0, r3
   26e50:	ldr	r1, [r3, #16]
   26e54:	bl	10904 <myhtml_token_attr_create@plt>
   26e58:	cmp	r0, #0
   26e5c:	str	r0, [r5, #56]	; 0x38
   26e60:	bne	26ebc <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x13c>
   26e64:	mov	r3, #69	; 0x45
   26e68:	mov	r4, #0
   26e6c:	str	r3, [r5, #160]	; 0xa0
   26e70:	mov	r0, r4
   26e74:	pop	{r4, r5, r6, pc}
   26e78:	tst	r1, #1
   26e7c:	bne	26dc8 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x48>
   26e80:	ldr	r2, [r5, #56]	; 0x38
   26e84:	ldr	r3, [r5, #192]	; 0xc0
   26e88:	ldr	r0, [r5, #8]
   26e8c:	ldr	ip, [r2, #56]	; 0x38
   26e90:	mov	r1, #33	; 0x21
   26e94:	sub	r3, r3, ip
   26e98:	add	r3, r3, r4
   26e9c:	str	r1, [r5, #160]	; 0xa0
   26ea0:	ldr	r1, [r0, #16]
   26ea4:	str	r3, [r2, #60]	; 0x3c
   26ea8:	bl	10904 <myhtml_token_attr_create@plt>
   26eac:	cmp	r0, #0
   26eb0:	str	r0, [r5, #56]	; 0x38
   26eb4:	addne	r4, r4, #1
   26eb8:	beq	26e64 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xe4>
   26ebc:	mov	r0, r4
   26ec0:	pop	{r4, r5, r6, pc}
   26ec4:	cmp	r1, #62	; 0x3e
   26ec8:	bne	26dc4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x44>
   26ecc:	b	26df4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x74>
   26ed0:	mov	r4, ip
   26ed4:	mov	r0, r4
   26ed8:	pop	{r4, r5, r6, pc}
   26edc:	addeq	r0, r0, fp, lsl r0

00026ee0 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base>:
   26ee0:	push	{r4, r5, r6, lr}
   26ee4:	ldrb	r4, [r2, r3]
   26ee8:	sub	ip, r4, #9
   26eec:	uxtb	ip, ip
   26ef0:	cmp	ip, #23
   26ef4:	bls	26f14 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x34>
   26ef8:	cmp	r4, #47	; 0x2f
   26efc:	moveq	r2, #42	; 0x2a
   26f00:	addeq	r6, r3, #1
   26f04:	streq	r2, [r0, #160]	; 0xa0
   26f08:	bne	26f24 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x44>
   26f0c:	mov	r0, r6
   26f10:	pop	{r4, r5, r6, pc}
   26f14:	ldr	lr, [pc, #124]	; 26f98 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0xb8>
   26f18:	mvn	ip, lr, lsr ip
   26f1c:	tst	ip, #1
   26f20:	beq	26f84 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0xa4>
   26f24:	cmp	r4, #62	; 0x3e
   26f28:	movne	r2, #33	; 0x21
   26f2c:	movne	r6, r3
   26f30:	strne	r2, [r0, #160]	; 0xa0
   26f34:	bne	26f0c <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x2c>
   26f38:	mov	r4, r1
   26f3c:	mov	r5, r0
   26f40:	mov	r6, r3
   26f44:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   26f48:	ldr	r2, [r5, #192]	; 0xc0
   26f4c:	ldr	r1, [r4, #32]
   26f50:	add	r6, r6, #1
   26f54:	sub	r2, r2, r1
   26f58:	add	r2, r2, r6
   26f5c:	str	r2, [r4, #36]	; 0x24
   26f60:	mov	r1, r6
   26f64:	mov	r2, r4
   26f68:	mov	r0, r5
   26f6c:	bl	10028 <myhtml_queue_add@plt>
   26f70:	cmp	r0, #0
   26f74:	movne	r3, #69	; 0x45
   26f78:	strne	r3, [r5, #160]	; 0xa0
   26f7c:	movne	r6, #0
   26f80:	b	26f0c <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x2c>
   26f84:	mov	r2, #33	; 0x21
   26f88:	add	r6, r3, #1
   26f8c:	str	r2, [r0, #160]	; 0xa0
   26f90:	mov	r0, r6
   26f94:	pop	{r4, r5, r6, pc}
   26f98:	addeq	r0, r0, fp, lsl r0

00026f9c <_myhtml_tokenizer_state_andata_end_tag_name@@Base>:
   26f9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   26fa0:	mov	r5, r3
   26fa4:	ldr	lr, [r1, #24]
   26fa8:	ldr	r3, [r0, #192]	; 0xc0
   26fac:	ldr	ip, [r5]
   26fb0:	sub	r3, r3, lr
   26fb4:	add	r3, r3, ip
   26fb8:	mov	r6, r0
   26fbc:	mov	r4, r1
   26fc0:	str	r3, [r1, #28]
   26fc4:	ldr	r3, [r5]
   26fc8:	ldr	r7, [sp, #32]
   26fcc:	bl	10c40 <myhtml_check_tag_parser@plt>
   26fd0:	ldr	r3, [r4]
   26fd4:	ldr	r2, [r6, #60]	; 0x3c
   26fd8:	cmp	r3, r2
   26fdc:	beq	27004 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0x68>
   26fe0:	mov	r0, #0
   26fe4:	str	r7, [r4, #24]
   26fe8:	str	r0, [r4, #28]
   26fec:	ldr	r3, [r5]
   26ff0:	mov	r2, #2
   26ff4:	add	r3, r3, #1
   26ff8:	str	r2, [r6, #160]	; 0xa0
   26ffc:	str	r3, [r5]
   27000:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27004:	ldr	r8, [r4, #24]
   27008:	sub	r2, r8, #2
   2700c:	cmp	r7, r2
   27010:	bcc	27040 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xa4>
   27014:	str	r3, [r4]
   27018:	ldr	r3, [r5]
   2701c:	ldr	r1, [r6, #192]	; 0xc0
   27020:	ldr	r2, [r4, #48]	; 0x30
   27024:	sub	r3, r3, r8
   27028:	mov	r0, #1
   2702c:	add	r3, r3, r1
   27030:	orr	r2, r2, r0
   27034:	str	r3, [r4, #28]
   27038:	str	r2, [r4, #48]	; 0x30
   2703c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27040:	ldr	r3, [r4, #48]	; 0x30
   27044:	ldr	r2, [sp, #36]	; 0x24
   27048:	ldr	r9, [r4, #32]
   2704c:	orr	r3, r2, r3
   27050:	str	r3, [r4, #48]	; 0x30
   27054:	ldr	r2, [r4, #48]	; 0x30
   27058:	mvn	r3, #1
   2705c:	ldr	r1, [r4, #48]	; 0x30
   27060:	and	r2, r2, #8
   27064:	sub	r3, r3, r7
   27068:	add	r3, r3, r8
   2706c:	eor	r2, r2, r1
   27070:	mov	r1, #1
   27074:	str	r3, [r4, #28]
   27078:	str	r3, [r4, #36]	; 0x24
   2707c:	str	r7, [r4, #24]
   27080:	str	r2, [r4, #48]	; 0x30
   27084:	str	r1, [r4]
   27088:	str	r7, [r4, #32]
   2708c:	mov	r2, r4
   27090:	mov	r0, r6
   27094:	ldr	r1, [r5]
   27098:	bl	10028 <myhtml_queue_add@plt>
   2709c:	ldr	r4, [r6, #64]	; 0x40
   270a0:	ldr	r3, [r6, #60]	; 0x3c
   270a4:	str	r9, [r4, #32]
   270a8:	str	r8, [r4, #24]
   270ac:	b	27014 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0x78>

000270b0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base>:
   270b0:	push	{r4, r5, r6, r7, r8, lr}
   270b4:	sub	sp, sp, #16
   270b8:	ldr	ip, [r0, #192]	; 0xc0
   270bc:	ldr	r7, [sp, #40]	; 0x28
   270c0:	add	ip, ip, r3
   270c4:	cmp	r3, r7
   270c8:	mov	r5, r0
   270cc:	ldr	r6, [r1, #24]
   270d0:	mov	r4, r1
   270d4:	mov	r0, r3
   270d8:	str	r3, [sp, #12]
   270dc:	str	ip, [r1, #24]
   270e0:	bcs	27160 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xb0>
   270e4:	ldrb	r1, [r2, r3]
   270e8:	ldr	r3, [pc, #336]	; 27240 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x190>
   270ec:	add	ip, r2, r0
   270f0:	add	r3, pc, r3
   270f4:	ldrb	r3, [r3, r1]
   270f8:	cmp	r3, #2
   270fc:	beq	27170 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc0>
   27100:	cmp	r1, #62	; 0x3e
   27104:	beq	271a0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xf0>
   27108:	cmp	r1, #47	; 0x2f
   2710c:	beq	27170 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc0>
   27110:	cmp	r3, #1
   27114:	bne	27214 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x164>
   27118:	ldr	r8, [pc, #292]	; 27244 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x194>
   2711c:	add	r0, r0, #1
   27120:	add	r8, pc, r8
   27124:	b	27158 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xa8>
   27128:	ldrb	r3, [ip, #1]!
   2712c:	add	lr, r0, #1
   27130:	ldrb	r1, [r8, r3]
   27134:	cmp	r1, #2
   27138:	beq	2716c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xbc>
   2713c:	cmp	r3, #62	; 0x3e
   27140:	beq	2719c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xec>
   27144:	cmp	r3, #47	; 0x2f
   27148:	beq	2716c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xbc>
   2714c:	cmp	r1, #1
   27150:	bne	27214 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x164>
   27154:	mov	r0, lr
   27158:	cmp	r7, r0
   2715c:	bne	27128 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x78>
   27160:	str	r6, [r4, #24]
   27164:	add	sp, sp, #16
   27168:	pop	{r4, r5, r6, r7, r8, pc}
   2716c:	str	r0, [sp, #12]
   27170:	mov	r3, #16
   27174:	str	r3, [sp, #4]
   27178:	str	r6, [sp]
   2717c:	add	r3, sp, #12
   27180:	mov	r1, r4
   27184:	mov	r0, r5
   27188:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2718c:	cmp	r0, #0
   27190:	bne	27220 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x170>
   27194:	ldr	r0, [sp, #12]
   27198:	b	27160 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xb0>
   2719c:	str	r0, [sp, #12]
   271a0:	mov	r3, #16
   271a4:	str	r3, [sp, #4]
   271a8:	str	r6, [sp]
   271ac:	add	r3, sp, #12
   271b0:	mov	r1, r4
   271b4:	mov	r0, r5
   271b8:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   271bc:	cmp	r0, #0
   271c0:	beq	27194 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xe4>
   271c4:	ldr	r2, [r5, #64]	; 0x40
   271c8:	ldr	r3, [sp, #12]
   271cc:	ldr	r0, [r5, #192]	; 0xc0
   271d0:	add	r3, r3, #1
   271d4:	ldr	r1, [r2, #32]
   271d8:	add	r0, r3, r0
   271dc:	sub	r0, r0, r1
   271e0:	str	r0, [r2, #36]	; 0x24
   271e4:	mov	r1, r3
   271e8:	mov	r0, r5
   271ec:	str	r3, [sp, #12]
   271f0:	bl	10028 <myhtml_queue_add@plt>
   271f4:	cmp	r0, #0
   271f8:	movne	r3, #69	; 0x45
   271fc:	streq	r0, [r5, #60]	; 0x3c
   27200:	streq	r0, [r5, #160]	; 0xa0
   27204:	strne	r3, [r5, #160]	; 0xa0
   27208:	movne	r0, #0
   2720c:	ldreq	r0, [sp, #12]
   27210:	b	27164 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xb4>
   27214:	mov	r3, #2
   27218:	str	r3, [r5, #160]	; 0xa0
   2721c:	b	27160 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xb0>
   27220:	ldr	r0, [sp, #12]
   27224:	mov	r2, #33	; 0x21
   27228:	mov	r3, #0
   2722c:	add	r0, r0, #1
   27230:	str	r2, [r5, #160]	; 0xa0
   27234:	str	r3, [r5, #60]	; 0x3c
   27238:	add	sp, sp, #16
   2723c:	pop	{r4, r5, r6, r7, r8, pc}
   27240:	strdeq	r5, [sp], -ip
   27244:	andeq	r5, sp, ip, asr #29

00027248 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base>:
   27248:	push	{r4, r5, r6, r7, r8, lr}
   2724c:	sub	sp, sp, #16
   27250:	ldr	ip, [r0, #192]	; 0xc0
   27254:	ldr	r5, [sp, #40]	; 0x28
   27258:	add	ip, ip, r3
   2725c:	cmp	r3, r5
   27260:	mov	r6, r0
   27264:	ldr	r8, [r1, #24]
   27268:	mov	r0, r3
   2726c:	str	r3, [sp, #12]
   27270:	str	ip, [r1, #24]
   27274:	bcs	272f4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xac>
   27278:	ldrb	ip, [r2, r3]
   2727c:	ldr	r3, [pc, #340]	; 273d8 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x190>
   27280:	add	lr, r2, r0
   27284:	add	r3, pc, r3
   27288:	ldrb	r3, [r3, ip]
   2728c:	cmp	r3, #2
   27290:	beq	27304 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xbc>
   27294:	cmp	ip, #62	; 0x3e
   27298:	beq	27348 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x100>
   2729c:	cmp	ip, #47	; 0x2f
   272a0:	beq	27304 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xbc>
   272a4:	cmp	r3, #1
   272a8:	bne	273c4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x17c>
   272ac:	ldr	r7, [pc, #296]	; 273dc <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x194>
   272b0:	add	r0, r0, #1
   272b4:	add	r7, pc, r7
   272b8:	b	272ec <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xa4>
   272bc:	ldrb	r3, [lr, #1]!
   272c0:	add	r4, r0, #1
   272c4:	ldrb	ip, [r7, r3]
   272c8:	cmp	ip, #2
   272cc:	beq	27300 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xb8>
   272d0:	cmp	r3, #62	; 0x3e
   272d4:	beq	27344 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xfc>
   272d8:	cmp	r3, #47	; 0x2f
   272dc:	beq	27300 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xb8>
   272e0:	cmp	ip, #1
   272e4:	bne	273c4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x17c>
   272e8:	mov	r0, r4
   272ec:	cmp	r5, r0
   272f0:	bne	272bc <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x74>
   272f4:	str	r8, [r1, #24]
   272f8:	add	sp, sp, #16
   272fc:	pop	{r4, r5, r6, r7, r8, pc}
   27300:	str	r0, [sp, #12]
   27304:	mov	r3, #32
   27308:	str	r3, [sp, #4]
   2730c:	str	r8, [sp]
   27310:	add	r3, sp, #12
   27314:	mov	r0, r6
   27318:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2731c:	cmp	r0, #0
   27320:	beq	27368 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x120>
   27324:	ldr	r0, [sp, #12]
   27328:	mov	r2, #33	; 0x21
   2732c:	mov	r3, #0
   27330:	add	r0, r0, #1
   27334:	str	r2, [r6, #160]	; 0xa0
   27338:	str	r3, [r6, #60]	; 0x3c
   2733c:	add	sp, sp, #16
   27340:	pop	{r4, r5, r6, r7, r8, pc}
   27344:	str	r0, [sp, #12]
   27348:	mov	r3, #32
   2734c:	str	r3, [sp, #4]
   27350:	str	r8, [sp]
   27354:	add	r3, sp, #12
   27358:	mov	r0, r6
   2735c:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   27360:	cmp	r0, #0
   27364:	bne	27374 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x12c>
   27368:	ldr	r0, [sp, #12]
   2736c:	add	sp, sp, #16
   27370:	pop	{r4, r5, r6, r7, r8, pc}
   27374:	ldr	r2, [r6, #64]	; 0x40
   27378:	ldr	r3, [sp, #12]
   2737c:	ldr	r0, [r6, #192]	; 0xc0
   27380:	add	r3, r3, #1
   27384:	ldr	r1, [r2, #32]
   27388:	add	r0, r3, r0
   2738c:	sub	r0, r0, r1
   27390:	str	r0, [r2, #36]	; 0x24
   27394:	mov	r1, r3
   27398:	mov	r0, r6
   2739c:	str	r3, [sp, #12]
   273a0:	bl	10028 <myhtml_queue_add@plt>
   273a4:	cmp	r0, #0
   273a8:	streq	r0, [r6, #60]	; 0x3c
   273ac:	streq	r0, [r6, #160]	; 0xa0
   273b0:	beq	27368 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x120>
   273b4:	mov	r3, #69	; 0x45
   273b8:	str	r3, [r6, #160]	; 0xa0
   273bc:	mov	r0, #0
   273c0:	b	272f8 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xb0>
   273c4:	mov	r3, #4
   273c8:	str	r8, [r1, #24]
   273cc:	str	r3, [r6, #160]	; 0xa0
   273d0:	add	sp, sp, #16
   273d4:	pop	{r4, r5, r6, r7, r8, pc}
   273d8:	andeq	r5, sp, r8, ror #26
   273dc:	andeq	r5, sp, r8, lsr sp

000273e0 <myhtml_tokenizer_state_init@@Base>:
   273e0:	push	{r4, lr}
   273e4:	mov	r4, r0
   273e8:	ldr	r0, [pc, #1552]	; 27a00 <myhtml_tokenizer_state_init@@Base+0x620>
   273ec:	bl	10c94 <mycore_malloc@plt>
   273f0:	ldr	r2, [pc, #1548]	; 27a04 <myhtml_tokenizer_state_init@@Base+0x624>
   273f4:	add	r2, pc, r2
   273f8:	cmp	r0, #0
   273fc:	str	r0, [r4, #24]
   27400:	beq	279f8 <myhtml_tokenizer_state_init@@Base+0x618>
   27404:	mov	r3, r0
   27408:	ldr	r0, [pc, #1528]	; 27a08 <myhtml_tokenizer_state_init@@Base+0x628>
   2740c:	ldr	ip, [pc, #1528]	; 27a0c <myhtml_tokenizer_state_init@@Base+0x62c>
   27410:	ldr	r1, [pc, #1528]	; 27a10 <myhtml_tokenizer_state_init@@Base+0x630>
   27414:	ldr	lr, [r2, r0]
   27418:	ldr	r0, [pc, #1524]	; 27a14 <myhtml_tokenizer_state_init@@Base+0x634>
   2741c:	str	lr, [r3]
   27420:	ldr	lr, [r2, ip]
   27424:	ldr	ip, [pc, #1516]	; 27a18 <myhtml_tokenizer_state_init@@Base+0x638>
   27428:	str	lr, [r3, #28]
   2742c:	ldr	lr, [r2, r1]
   27430:	ldr	r1, [pc, #1508]	; 27a1c <myhtml_tokenizer_state_init@@Base+0x63c>
   27434:	str	lr, [r3, #36]	; 0x24
   27438:	ldr	lr, [r2, r0]
   2743c:	ldr	r0, [pc, #1500]	; 27a20 <myhtml_tokenizer_state_init@@Base+0x640>
   27440:	str	lr, [r3, #32]
   27444:	ldr	lr, [r2, ip]
   27448:	ldr	ip, [pc, #1492]	; 27a24 <myhtml_tokenizer_state_init@@Base+0x644>
   2744c:	str	lr, [r3, #168]	; 0xa8
   27450:	ldr	lr, [r2, r1]
   27454:	ldr	r1, [pc, #1484]	; 27a28 <myhtml_tokenizer_state_init@@Base+0x648>
   27458:	str	lr, [r3, #176]	; 0xb0
   2745c:	ldr	lr, [r2, r0]
   27460:	ldr	r0, [pc, #1476]	; 27a2c <myhtml_tokenizer_state_init@@Base+0x64c>
   27464:	str	lr, [r3, #132]	; 0x84
   27468:	ldr	lr, [r2, ip]
   2746c:	ldr	ip, [pc, #1468]	; 27a30 <myhtml_tokenizer_state_init@@Base+0x650>
   27470:	str	lr, [r3, #136]	; 0x88
   27474:	ldr	lr, [r2, r1]
   27478:	ldr	r1, [pc, #1460]	; 27a34 <myhtml_tokenizer_state_init@@Base+0x654>
   2747c:	str	lr, [r3, #140]	; 0x8c
   27480:	ldr	lr, [r2, r0]
   27484:	ldr	r0, [pc, #1452]	; 27a38 <myhtml_tokenizer_state_init@@Base+0x658>
   27488:	str	lr, [r3, #144]	; 0x90
   2748c:	ldr	lr, [r2, ip]
   27490:	ldr	ip, [pc, #1444]	; 27a3c <myhtml_tokenizer_state_init@@Base+0x65c>
   27494:	str	lr, [r3, #164]	; 0xa4
   27498:	ldr	lr, [r2, r1]
   2749c:	ldr	r1, [pc, #1436]	; 27a40 <myhtml_tokenizer_state_init@@Base+0x660>
   274a0:	str	lr, [r3, #148]	; 0x94
   274a4:	ldr	lr, [r2, r0]
   274a8:	ldr	r0, [pc, #1428]	; 27a44 <myhtml_tokenizer_state_init@@Base+0x664>
   274ac:	str	lr, [r3, #152]	; 0x98
   274b0:	ldr	lr, [r2, ip]
   274b4:	ldr	ip, [pc, #1420]	; 27a48 <myhtml_tokenizer_state_init@@Base+0x668>
   274b8:	str	lr, [r3, #156]	; 0x9c
   274bc:	ldr	lr, [r2, r1]
   274c0:	ldr	r1, [pc, #1412]	; 27a4c <myhtml_tokenizer_state_init@@Base+0x66c>
   274c4:	str	lr, [r3, #180]	; 0xb4
   274c8:	ldr	lr, [r2, r0]
   274cc:	ldr	r0, [pc, #1404]	; 27a50 <myhtml_tokenizer_state_init@@Base+0x670>
   274d0:	str	lr, [r3, #184]	; 0xb8
   274d4:	ldr	lr, [r2, ip]
   274d8:	ldr	ip, [pc, #1396]	; 27a54 <myhtml_tokenizer_state_init@@Base+0x674>
   274dc:	str	lr, [r3, #188]	; 0xbc
   274e0:	ldr	lr, [r2, r1]
   274e4:	ldr	r1, [pc, #1388]	; 27a58 <myhtml_tokenizer_state_init@@Base+0x678>
   274e8:	str	lr, [r3, #196]	; 0xc4
   274ec:	ldr	lr, [r2, r0]
   274f0:	ldr	r0, [pc, #1380]	; 27a5c <myhtml_tokenizer_state_init@@Base+0x67c>
   274f4:	str	lr, [r3, #192]	; 0xc0
   274f8:	ldr	lr, [r2, ip]
   274fc:	ldr	ip, [pc, #1372]	; 27a60 <myhtml_tokenizer_state_init@@Base+0x680>
   27500:	str	lr, [r3, #200]	; 0xc8
   27504:	ldr	lr, [r2, r1]
   27508:	ldr	r1, [pc, #1364]	; 27a64 <myhtml_tokenizer_state_init@@Base+0x684>
   2750c:	str	lr, [r3, #172]	; 0xac
   27510:	ldr	lr, [r2, r0]
   27514:	ldr	r0, [pc, #1356]	; 27a68 <myhtml_tokenizer_state_init@@Base+0x688>
   27518:	str	lr, [r3, #268]	; 0x10c
   2751c:	ldr	lr, [r2, ip]
   27520:	ldr	ip, [pc, #1348]	; 27a6c <myhtml_tokenizer_state_init@@Base+0x68c>
   27524:	str	lr, [r3, #8]
   27528:	ldr	lr, [r2, r1]
   2752c:	ldr	r1, [pc, #1340]	; 27a70 <myhtml_tokenizer_state_init@@Base+0x690>
   27530:	str	lr, [r3, #40]	; 0x28
   27534:	ldr	lr, [r2, r0]
   27538:	ldr	r0, [pc, #1332]	; 27a74 <myhtml_tokenizer_state_init@@Base+0x694>
   2753c:	str	lr, [r3, #44]	; 0x2c
   27540:	ldr	lr, [r2, ip]
   27544:	ldr	ip, [pc, #1324]	; 27a78 <myhtml_tokenizer_state_init@@Base+0x698>
   27548:	str	lr, [r3, #48]	; 0x30
   2754c:	ldr	lr, [r2, r1]
   27550:	ldr	r1, [pc, #1316]	; 27a7c <myhtml_tokenizer_state_init@@Base+0x69c>
   27554:	str	lr, [r3, #16]
   27558:	ldr	lr, [r2, r0]
   2755c:	ldr	r0, [pc, #1308]	; 27a80 <myhtml_tokenizer_state_init@@Base+0x6a0>
   27560:	str	lr, [r3, #52]	; 0x34
   27564:	ldr	lr, [r2, ip]
   27568:	ldr	ip, [pc, #1300]	; 27a84 <myhtml_tokenizer_state_init@@Base+0x6a4>
   2756c:	str	lr, [r3, #56]	; 0x38
   27570:	ldr	lr, [r2, r1]
   27574:	ldr	r1, [pc, #1292]	; 27a88 <myhtml_tokenizer_state_init@@Base+0x6a8>
   27578:	str	lr, [r3, #60]	; 0x3c
   2757c:	ldr	lr, [r2, r0]
   27580:	ldr	r0, [pc, #1284]	; 27a8c <myhtml_tokenizer_state_init@@Base+0x6ac>
   27584:	str	lr, [r3, #24]
   27588:	ldr	lr, [r2, ip]
   2758c:	ldr	ip, [pc, #1276]	; 27a90 <myhtml_tokenizer_state_init@@Base+0x6b0>
   27590:	str	lr, [r3, #204]	; 0xcc
   27594:	ldr	lr, [r2, r1]
   27598:	ldr	r1, [pc, #1268]	; 27a94 <myhtml_tokenizer_state_init@@Base+0x6b4>
   2759c:	str	lr, [r3, #208]	; 0xd0
   275a0:	ldr	lr, [r2, r0]
   275a4:	ldr	r0, [pc, #1260]	; 27a98 <myhtml_tokenizer_state_init@@Base+0x6b8>
   275a8:	str	lr, [r3, #212]	; 0xd4
   275ac:	ldr	lr, [r2, ip]
   275b0:	ldr	ip, [pc, #1252]	; 27a9c <myhtml_tokenizer_state_init@@Base+0x6bc>
   275b4:	str	lr, [r3, #216]	; 0xd8
   275b8:	ldr	lr, [r2, r1]
   275bc:	ldr	r1, [pc, #1244]	; 27aa0 <myhtml_tokenizer_state_init@@Base+0x6c0>
   275c0:	str	lr, [r3, #272]	; 0x110
   275c4:	ldr	lr, [r2, r0]
   275c8:	ldr	r0, [pc, #1236]	; 27aa4 <myhtml_tokenizer_state_init@@Base+0x6c4>
   275cc:	str	lr, [r3, #224]	; 0xe0
   275d0:	ldr	lr, [r2, ip]
   275d4:	ldr	ip, [pc, #1228]	; 27aa8 <myhtml_tokenizer_state_init@@Base+0x6c8>
   275d8:	str	lr, [r3, #228]	; 0xe4
   275dc:	ldr	lr, [r2, r1]
   275e0:	ldr	r1, [pc, #1220]	; 27aac <myhtml_tokenizer_state_init@@Base+0x6cc>
   275e4:	str	lr, [r3, #232]	; 0xe8
   275e8:	ldr	lr, [r2, r0]
   275ec:	ldr	r0, [pc, #1212]	; 27ab0 <myhtml_tokenizer_state_init@@Base+0x6d0>
   275f0:	str	lr, [r3, #236]	; 0xec
   275f4:	ldr	lr, [r2, ip]
   275f8:	ldr	ip, [pc, #1204]	; 27ab4 <myhtml_tokenizer_state_init@@Base+0x6d4>
   275fc:	str	lr, [r3, #252]	; 0xfc
   27600:	ldr	lr, [r2, r1]
   27604:	ldr	r1, [pc, #1196]	; 27ab8 <myhtml_tokenizer_state_init@@Base+0x6d8>
   27608:	str	lr, [r3, #256]	; 0x100
   2760c:	ldr	lr, [r2, r0]
   27610:	ldr	r0, [pc, #1188]	; 27abc <myhtml_tokenizer_state_init@@Base+0x6dc>
   27614:	str	lr, [r3, #260]	; 0x104
   27618:	ldr	lr, [r2, ip]
   2761c:	ldr	ip, [pc, #1180]	; 27ac0 <myhtml_tokenizer_state_init@@Base+0x6e0>
   27620:	str	lr, [r3, #264]	; 0x108
   27624:	ldr	lr, [r2, r1]
   27628:	ldr	r1, [pc, #1172]	; 27ac4 <myhtml_tokenizer_state_init@@Base+0x6e4>
   2762c:	str	lr, [r3, #20]
   27630:	ldr	lr, [r2, r0]
   27634:	ldr	r0, [pc, #1164]	; 27ac8 <myhtml_tokenizer_state_init@@Base+0x6e8>
   27638:	str	lr, [r3, #64]	; 0x40
   2763c:	ldr	lr, [r2, ip]
   27640:	ldr	ip, [pc, #1156]	; 27acc <myhtml_tokenizer_state_init@@Base+0x6ec>
   27644:	str	lr, [r3, #68]	; 0x44
   27648:	ldr	lr, [r2, r1]
   2764c:	ldr	r1, [pc, #1148]	; 27ad0 <myhtml_tokenizer_state_init@@Base+0x6f0>
   27650:	str	lr, [r3, #72]	; 0x48
   27654:	ldr	lr, [r2, r0]
   27658:	ldr	r0, [pc, #1140]	; 27ad4 <myhtml_tokenizer_state_init@@Base+0x6f4>
   2765c:	str	lr, [r3, #76]	; 0x4c
   27660:	ldr	lr, [r2, ip]
   27664:	ldr	ip, [pc, #1132]	; 27ad8 <myhtml_tokenizer_state_init@@Base+0x6f8>
   27668:	str	lr, [r3, #80]	; 0x50
   2766c:	ldr	lr, [r2, r1]
   27670:	ldr	r1, [pc, #1124]	; 27adc <myhtml_tokenizer_state_init@@Base+0x6fc>
   27674:	str	lr, [r3, #84]	; 0x54
   27678:	ldr	lr, [r2, r0]
   2767c:	ldr	r0, [pc, #1116]	; 27ae0 <myhtml_tokenizer_state_init@@Base+0x700>
   27680:	str	lr, [r3, #88]	; 0x58
   27684:	ldr	lr, [r2, ip]
   27688:	ldr	ip, [pc, #1108]	; 27ae4 <myhtml_tokenizer_state_init@@Base+0x704>
   2768c:	str	lr, [r3, #92]	; 0x5c
   27690:	ldr	lr, [r2, r1]
   27694:	ldr	r1, [pc, #1100]	; 27ae8 <myhtml_tokenizer_state_init@@Base+0x708>
   27698:	str	lr, [r3, #96]	; 0x60
   2769c:	ldr	lr, [r2, r0]
   276a0:	ldr	r0, [pc, #1092]	; 27aec <myhtml_tokenizer_state_init@@Base+0x70c>
   276a4:	str	lr, [r3, #100]	; 0x64
   276a8:	ldr	lr, [r2, ip]
   276ac:	ldr	ip, [pc, #1084]	; 27af0 <myhtml_tokenizer_state_init@@Base+0x710>
   276b0:	str	lr, [r3, #104]	; 0x68
   276b4:	ldr	lr, [r2, r1]
   276b8:	ldr	r1, [pc, #1076]	; 27af4 <myhtml_tokenizer_state_init@@Base+0x714>
   276bc:	str	lr, [r3, #108]	; 0x6c
   276c0:	ldr	lr, [r2, r0]
   276c4:	ldr	r0, [pc, #1068]	; 27af8 <myhtml_tokenizer_state_init@@Base+0x718>
   276c8:	str	lr, [r3, #112]	; 0x70
   276cc:	ldr	lr, [r2, ip]
   276d0:	ldr	ip, [pc, #1060]	; 27afc <myhtml_tokenizer_state_init@@Base+0x71c>
   276d4:	str	lr, [r3, #116]	; 0x74
   276d8:	ldr	lr, [r2, r1]
   276dc:	ldr	r1, [pc, #1052]	; 27b00 <myhtml_tokenizer_state_init@@Base+0x720>
   276e0:	str	lr, [r3, #120]	; 0x78
   276e4:	ldr	lr, [r2, r0]
   276e8:	ldr	r0, [pc, #1044]	; 27b04 <myhtml_tokenizer_state_init@@Base+0x724>
   276ec:	str	lr, [r3, #124]	; 0x7c
   276f0:	ldr	lr, [r2, ip]
   276f4:	ldr	ip, [pc, #1036]	; 27b08 <myhtml_tokenizer_state_init@@Base+0x728>
   276f8:	str	lr, [r3, #128]	; 0x80
   276fc:	ldr	lr, [r2, r1]
   27700:	ldr	r1, [pc, #1028]	; 27b0c <myhtml_tokenizer_state_init@@Base+0x72c>
   27704:	str	lr, [r3, #276]	; 0x114
   27708:	ldr	lr, [r2, r0]
   2770c:	ldr	r0, [pc, #1020]	; 27b10 <myhtml_tokenizer_state_init@@Base+0x730>
   27710:	str	lr, [r3, #280]	; 0x118
   27714:	ldr	lr, [r2, ip]
   27718:	ldr	ip, [pc, #1012]	; 27b14 <myhtml_tokenizer_state_init@@Base+0x734>
   2771c:	str	lr, [r3, #308]	; 0x134
   27720:	ldr	lr, [r2, r1]
   27724:	ldr	r1, [pc, #1004]	; 27b18 <myhtml_tokenizer_state_init@@Base+0x738>
   27728:	str	lr, [r3, #316]	; 0x13c
   2772c:	ldr	lr, [r2, r0]
   27730:	ldr	r0, [pc, #996]	; 27b1c <myhtml_tokenizer_state_init@@Base+0x73c>
   27734:	str	lr, [r3, #312]	; 0x138
   27738:	ldr	lr, [r2, ip]
   2773c:	ldr	ip, [pc, #988]	; 27b20 <myhtml_tokenizer_state_init@@Base+0x740>
   27740:	str	lr, [r3, #448]	; 0x1c0
   27744:	ldr	lr, [r2, r1]
   27748:	ldr	r1, [pc, #980]	; 27b24 <myhtml_tokenizer_state_init@@Base+0x744>
   2774c:	str	lr, [r3, #456]	; 0x1c8
   27750:	ldr	lr, [r2, r0]
   27754:	ldr	r0, [pc, #972]	; 27b28 <myhtml_tokenizer_state_init@@Base+0x748>
   27758:	str	lr, [r3, #412]	; 0x19c
   2775c:	ldr	lr, [r2, ip]
   27760:	ldr	ip, [pc, #964]	; 27b2c <myhtml_tokenizer_state_init@@Base+0x74c>
   27764:	str	lr, [r3, #416]	; 0x1a0
   27768:	ldr	lr, [r2, r1]
   2776c:	ldr	r1, [pc, #956]	; 27b30 <myhtml_tokenizer_state_init@@Base+0x750>
   27770:	str	lr, [r3, #420]	; 0x1a4
   27774:	ldr	lr, [r2, r0]
   27778:	ldr	r0, [pc, #948]	; 27b34 <myhtml_tokenizer_state_init@@Base+0x754>
   2777c:	str	lr, [r3, #424]	; 0x1a8
   27780:	ldr	lr, [r2, ip]
   27784:	ldr	ip, [pc, #940]	; 27b38 <myhtml_tokenizer_state_init@@Base+0x758>
   27788:	str	lr, [r3, #428]	; 0x1ac
   2778c:	ldr	lr, [r2, r1]
   27790:	ldr	r1, [pc, #932]	; 27b3c <myhtml_tokenizer_state_init@@Base+0x75c>
   27794:	str	lr, [r3, #432]	; 0x1b0
   27798:	ldr	lr, [r2, r0]
   2779c:	ldr	r0, [pc, #924]	; 27b40 <myhtml_tokenizer_state_init@@Base+0x760>
   277a0:	str	lr, [r3, #436]	; 0x1b4
   277a4:	ldr	lr, [r2, ip]
   277a8:	ldr	ip, [pc, #916]	; 27b44 <myhtml_tokenizer_state_init@@Base+0x764>
   277ac:	str	lr, [r3, #444]	; 0x1bc
   277b0:	ldr	lr, [r2, r1]
   277b4:	ldr	r1, [pc, #908]	; 27b48 <myhtml_tokenizer_state_init@@Base+0x768>
   277b8:	str	lr, [r3, #460]	; 0x1cc
   277bc:	ldr	lr, [r2, r0]
   277c0:	ldr	r0, [pc, #900]	; 27b4c <myhtml_tokenizer_state_init@@Base+0x76c>
   277c4:	str	lr, [r3, #464]	; 0x1d0
   277c8:	ldr	lr, [r2, ip]
   277cc:	ldr	ip, [pc, #892]	; 27b50 <myhtml_tokenizer_state_init@@Base+0x770>
   277d0:	str	lr, [r3, #468]	; 0x1d4
   277d4:	ldr	lr, [r2, r1]
   277d8:	ldr	r1, [pc, #884]	; 27b54 <myhtml_tokenizer_state_init@@Base+0x774>
   277dc:	str	lr, [r3, #476]	; 0x1dc
   277e0:	ldr	lr, [r2, r0]
   277e4:	ldr	r0, [pc, #876]	; 27b58 <myhtml_tokenizer_state_init@@Base+0x778>
   277e8:	str	lr, [r3, #472]	; 0x1d8
   277ec:	ldr	lr, [r2, ip]
   277f0:	ldr	ip, [pc, #868]	; 27b5c <myhtml_tokenizer_state_init@@Base+0x77c>
   277f4:	str	lr, [r3, #480]	; 0x1e0
   277f8:	ldr	lr, [r2, r1]
   277fc:	ldr	r1, [pc, #860]	; 27b60 <myhtml_tokenizer_state_init@@Base+0x780>
   27800:	str	lr, [r3, #452]	; 0x1c4
   27804:	ldr	lr, [r2, r0]
   27808:	ldr	r0, [pc, #852]	; 27b64 <myhtml_tokenizer_state_init@@Base+0x784>
   2780c:	str	lr, [r3, #548]	; 0x224
   27810:	ldr	lr, [r2, ip]
   27814:	ldr	ip, [pc, #844]	; 27b68 <myhtml_tokenizer_state_init@@Base+0x788>
   27818:	str	lr, [r3, #288]	; 0x120
   2781c:	ldr	lr, [r2, r1]
   27820:	ldr	r1, [pc, #836]	; 27b6c <myhtml_tokenizer_state_init@@Base+0x78c>
   27824:	str	lr, [r3, #320]	; 0x140
   27828:	ldr	lr, [r2, r0]
   2782c:	ldr	r0, [pc, #828]	; 27b70 <myhtml_tokenizer_state_init@@Base+0x790>
   27830:	str	lr, [r3, #324]	; 0x144
   27834:	ldr	lr, [r2, ip]
   27838:	ldr	ip, [pc, #820]	; 27b74 <myhtml_tokenizer_state_init@@Base+0x794>
   2783c:	str	lr, [r3, #328]	; 0x148
   27840:	ldr	lr, [r2, r1]
   27844:	ldr	r1, [pc, #812]	; 27b78 <myhtml_tokenizer_state_init@@Base+0x798>
   27848:	str	lr, [r3, #296]	; 0x128
   2784c:	ldr	lr, [r2, r0]
   27850:	ldr	r0, [pc, #804]	; 27b7c <myhtml_tokenizer_state_init@@Base+0x79c>
   27854:	str	lr, [r3, #332]	; 0x14c
   27858:	ldr	lr, [r2, ip]
   2785c:	ldr	ip, [pc, #796]	; 27b80 <myhtml_tokenizer_state_init@@Base+0x7a0>
   27860:	str	lr, [r3, #336]	; 0x150
   27864:	ldr	lr, [r2, r1]
   27868:	ldr	r1, [pc, #788]	; 27b84 <myhtml_tokenizer_state_init@@Base+0x7a4>
   2786c:	str	lr, [r3, #340]	; 0x154
   27870:	ldr	lr, [r2, r0]
   27874:	ldr	r0, [pc, #780]	; 27b88 <myhtml_tokenizer_state_init@@Base+0x7a8>
   27878:	str	lr, [r3, #304]	; 0x130
   2787c:	ldr	lr, [r2, ip]
   27880:	ldr	ip, [pc, #772]	; 27b8c <myhtml_tokenizer_state_init@@Base+0x7ac>
   27884:	str	lr, [r3, #484]	; 0x1e4
   27888:	ldr	lr, [r2, r1]
   2788c:	ldr	r1, [pc, #764]	; 27b90 <myhtml_tokenizer_state_init@@Base+0x7b0>
   27890:	str	lr, [r3, #488]	; 0x1e8
   27894:	ldr	lr, [r2, r0]
   27898:	ldr	r0, [pc, #756]	; 27b94 <myhtml_tokenizer_state_init@@Base+0x7b4>
   2789c:	str	lr, [r3, #492]	; 0x1ec
   278a0:	ldr	lr, [r2, ip]
   278a4:	ldr	ip, [pc, #748]	; 27b98 <myhtml_tokenizer_state_init@@Base+0x7b8>
   278a8:	str	lr, [r3, #496]	; 0x1f0
   278ac:	ldr	lr, [r2, r1]
   278b0:	ldr	r1, [pc, #740]	; 27b9c <myhtml_tokenizer_state_init@@Base+0x7bc>
   278b4:	str	lr, [r3, #552]	; 0x228
   278b8:	ldr	lr, [r2, r0]
   278bc:	ldr	r0, [pc, #732]	; 27ba0 <myhtml_tokenizer_state_init@@Base+0x7c0>
   278c0:	str	lr, [r3, #504]	; 0x1f8
   278c4:	ldr	lr, [r2, ip]
   278c8:	ldr	ip, [pc, #724]	; 27ba4 <myhtml_tokenizer_state_init@@Base+0x7c4>
   278cc:	str	lr, [r3, #508]	; 0x1fc
   278d0:	ldr	lr, [r2, r1]
   278d4:	ldr	r1, [pc, #716]	; 27ba8 <myhtml_tokenizer_state_init@@Base+0x7c8>
   278d8:	str	lr, [r3, #512]	; 0x200
   278dc:	ldr	lr, [r2, r0]
   278e0:	ldr	r0, [pc, #708]	; 27bac <myhtml_tokenizer_state_init@@Base+0x7cc>
   278e4:	str	lr, [r3, #516]	; 0x204
   278e8:	ldr	lr, [r2, ip]
   278ec:	ldr	ip, [pc, #700]	; 27bb0 <myhtml_tokenizer_state_init@@Base+0x7d0>
   278f0:	str	lr, [r3, #532]	; 0x214
   278f4:	ldr	lr, [r2, r1]
   278f8:	ldr	r1, [pc, #692]	; 27bb4 <myhtml_tokenizer_state_init@@Base+0x7d4>
   278fc:	str	lr, [r3, #536]	; 0x218
   27900:	ldr	lr, [r2, r0]
   27904:	ldr	r0, [pc, #684]	; 27bb8 <myhtml_tokenizer_state_init@@Base+0x7d8>
   27908:	str	lr, [r3, #540]	; 0x21c
   2790c:	ldr	lr, [r2, ip]
   27910:	ldr	ip, [pc, #676]	; 27bbc <myhtml_tokenizer_state_init@@Base+0x7dc>
   27914:	str	lr, [r3, #544]	; 0x220
   27918:	ldr	lr, [r2, r1]
   2791c:	ldr	r1, [pc, #668]	; 27bc0 <myhtml_tokenizer_state_init@@Base+0x7e0>
   27920:	str	lr, [r3, #300]	; 0x12c
   27924:	ldr	lr, [r2, r0]
   27928:	ldr	r0, [pc, #660]	; 27bc4 <myhtml_tokenizer_state_init@@Base+0x7e4>
   2792c:	str	lr, [r3, #344]	; 0x158
   27930:	ldr	lr, [r2, ip]
   27934:	ldr	ip, [pc, #652]	; 27bc8 <myhtml_tokenizer_state_init@@Base+0x7e8>
   27938:	str	lr, [r3, #348]	; 0x15c
   2793c:	ldr	lr, [r2, r1]
   27940:	ldr	r1, [pc, #644]	; 27bcc <myhtml_tokenizer_state_init@@Base+0x7ec>
   27944:	str	lr, [r3, #352]	; 0x160
   27948:	ldr	lr, [r2, r0]
   2794c:	ldr	r0, [pc, #636]	; 27bd0 <myhtml_tokenizer_state_init@@Base+0x7f0>
   27950:	str	lr, [r3, #356]	; 0x164
   27954:	ldr	lr, [r2, ip]
   27958:	ldr	ip, [pc, #628]	; 27bd4 <myhtml_tokenizer_state_init@@Base+0x7f4>
   2795c:	str	lr, [r3, #360]	; 0x168
   27960:	ldr	lr, [r2, r1]
   27964:	ldr	r1, [pc, #620]	; 27bd8 <myhtml_tokenizer_state_init@@Base+0x7f8>
   27968:	str	lr, [r3, #364]	; 0x16c
   2796c:	ldr	lr, [r2, r0]
   27970:	ldr	r0, [pc, #612]	; 27bdc <myhtml_tokenizer_state_init@@Base+0x7fc>
   27974:	str	lr, [r3, #368]	; 0x170
   27978:	ldr	lr, [r2, ip]
   2797c:	ldr	ip, [pc, #604]	; 27be0 <myhtml_tokenizer_state_init@@Base+0x800>
   27980:	str	lr, [r3, #372]	; 0x174
   27984:	ldr	lr, [r2, r1]
   27988:	ldr	r1, [pc, #596]	; 27be4 <myhtml_tokenizer_state_init@@Base+0x804>
   2798c:	str	lr, [r3, #376]	; 0x178
   27990:	ldr	lr, [r2, r0]
   27994:	ldr	r0, [pc, #588]	; 27be8 <myhtml_tokenizer_state_init@@Base+0x808>
   27998:	str	lr, [r3, #380]	; 0x17c
   2799c:	ldr	lr, [r2, ip]
   279a0:	ldr	ip, [pc, #580]	; 27bec <myhtml_tokenizer_state_init@@Base+0x80c>
   279a4:	str	lr, [r3, #384]	; 0x180
   279a8:	ldr	lr, [r2, r1]
   279ac:	ldr	r1, [pc, #572]	; 27bf0 <myhtml_tokenizer_state_init@@Base+0x810>
   279b0:	str	lr, [r3, #388]	; 0x184
   279b4:	ldr	lr, [r2, r0]
   279b8:	ldr	r0, [pc, #564]	; 27bf4 <myhtml_tokenizer_state_init@@Base+0x814>
   279bc:	str	lr, [r3, #392]	; 0x188
   279c0:	ldr	lr, [r2, ip]
   279c4:	ldr	ip, [pc, #556]	; 27bf8 <myhtml_tokenizer_state_init@@Base+0x818>
   279c8:	str	lr, [r3, #396]	; 0x18c
   279cc:	ldr	lr, [r2, r1]
   279d0:	ldr	r1, [pc, #548]	; 27bfc <myhtml_tokenizer_state_init@@Base+0x81c>
   279d4:	str	lr, [r3, #400]	; 0x190
   279d8:	ldr	lr, [r2, r0]
   279dc:	mov	r0, #0
   279e0:	str	lr, [r3, #404]	; 0x194
   279e4:	ldr	ip, [r2, ip]
   279e8:	str	ip, [r3, #408]	; 0x198
   279ec:	ldr	r2, [r2, r1]
   279f0:	str	r2, [r3, #556]	; 0x22c
   279f4:	pop	{r4, pc}
   279f8:	ldr	r0, [pc, #512]	; 27c00 <myhtml_tokenizer_state_init@@Base+0x820>
   279fc:	pop	{r4, pc}
   27a00:	muleq	r0, r4, ip
   27a04:	andeq	lr, lr, r4, lsl #24
   27a08:	muleq	r0, r0, r7
   27a0c:	andeq	r0, r0, r0, lsr r9
   27a10:	andeq	r0, r0, ip, ror #17
   27a14:	andeq	r0, r0, ip, asr r9
   27a18:	andeq	r0, r0, r0, lsl #15
   27a1c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27a20:	andeq	r0, r0, ip, asr #17
   27a24:	andeq	r0, r0, r8, lsl #14
   27a28:	andeq	r0, r0, r8, lsr r9
   27a2c:	andeq	r0, r0, r8, ror r9
   27a30:	andeq	r0, r0, r0, lsr #18
   27a34:	andeq	r0, r0, ip, lsl #18
   27a38:	andeq	r0, r0, r4, asr r9
   27a3c:	andeq	r0, r0, ip, lsr r8
   27a40:	andeq	r0, r0, ip, ror #18
   27a44:	andeq	r0, r0, ip, asr r8
   27a48:	andeq	r0, r0, r8, lsl #18
   27a4c:	andeq	r0, r0, ip, lsl #14
   27a50:			; <UNDEFINED> instruction: 0x000007b0
   27a54:	muleq	r0, r4, r8
   27a58:	muleq	r0, r8, r7
   27a5c:	andeq	r0, r0, r8, asr #19
   27a60:	andeq	r0, r0, r4, lsr #17
   27a64:	andeq	r0, r0, r8, asr #15
   27a68:	andeq	r0, r0, ip, lsr #14
   27a6c:	andeq	r0, r0, ip, asr #15
   27a70:	andeq	r0, r0, ip, ror r7
   27a74:	andeq	r0, r0, ip, ror #15
   27a78:	andeq	r0, r0, r8, asr r7
   27a7c:	andeq	r0, r0, r0, ror #18
   27a80:			; <UNDEFINED> instruction: 0x000009b0
   27a84:	andeq	r0, r0, ip, lsl #16
   27a88:	andeq	r0, r0, r4, lsl r7
   27a8c:	andeq	r0, r0, r4, asr r8
   27a90:	muleq	r0, r0, r9
   27a94:	andeq	r0, r0, ip, ror r8
   27a98:			; <UNDEFINED> instruction: 0x000007b4
   27a9c:	andeq	r0, r0, ip, ror #16
   27aa0:	andeq	r0, r0, r0, lsl #17
   27aa4:	andeq	r0, r0, r0, asr #19
   27aa8:	andeq	r0, r0, ip, ror #14
   27aac:	andeq	r0, r0, ip, lsl r8
   27ab0:	andeq	r0, r0, r0, asr #15
   27ab4:	andeq	r0, r0, ip, lsr #16
   27ab8:			; <UNDEFINED> instruction: 0x000007bc
   27abc:	andeq	r0, r0, r4, lsr #16
   27ac0:	andeq	r0, r0, r0, ror #15
   27ac4:	andeq	r0, r0, r8, ror #18
   27ac8:	strdeq	r0, [r0], -ip
   27acc:	andeq	r0, r0, r8, asr r8
   27ad0:	andeq	r0, r0, r4, lsl #18
   27ad4:	andeq	r0, r0, r0, lsr r8
   27ad8:	andeq	r0, r0, r0, asr r8
   27adc:	muleq	r0, ip, r9
   27ae0:	muleq	r0, r4, r7
   27ae4:	andeq	r0, r0, r0, lsr #15
   27ae8:	andeq	r0, r0, r8, lsl r8
   27aec:	andeq	r0, r0, ip, asr #18
   27af0:	andeq	r0, r0, r8, lsr r7
   27af4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27af8:	andeq	r0, r0, r4, asr #15
   27afc:	andeq	r0, r0, r0, lsl r9
   27b00:	andeq	r0, r0, r4, lsr #15
   27b04:	andeq	r0, r0, r8, ror #15
   27b08:	andeq	r0, r0, r0, lsl r8
   27b0c:	muleq	r0, r4, r9
   27b10:	muleq	r0, r8, r9
   27b14:	ldrdeq	r0, [r0], -r4
   27b18:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27b1c:	strdeq	r0, [r0], -r4
   27b20:	andeq	r0, r0, r0, asr #18
   27b24:	andeq	r0, r0, ip, asr r7
   27b28:			; <UNDEFINED> instruction: 0x000008b0
   27b2c:	andeq	r0, r0, r4, lsr r8
   27b30:	strdeq	r0, [r0], -ip
   27b34:	andeq	r0, r0, r4, ror #15
   27b38:	andeq	r0, r0, r4, asr #17
   27b3c:	andeq	r0, r0, r0, ror r9
   27b40:	ldrdeq	r0, [r0], -r8
   27b44:	andeq	r0, r0, r0, lsr #17
   27b48:	andeq	r0, r0, ip, lsl #15
   27b4c:	andeq	r0, r0, ip, lsr #19
   27b50:	andeq	r0, r0, r4, lsl #15
   27b54:	andeq	r0, r0, r4, ror #16
   27b58:	strdeq	r0, [r0], -r8
   27b5c:	andeq	r0, r0, r0, asr r9
   27b60:	muleq	r0, ip, r7
   27b64:	andeq	r0, r0, r0, ror #17
   27b68:			; <UNDEFINED> instruction: 0x000008bc
   27b6c:	andeq	r0, r0, r4, ror r8
   27b70:	andeq	r0, r0, r4, asr #19
   27b74:	andeq	r0, r0, r8, ror #17
   27b78:			; <UNDEFINED> instruction: 0x000008b4
   27b7c:	andeq	r0, r0, r8, asr #16
   27b80:	andeq	r0, r0, ip, lsl r7
   27b84:	andeq	r0, r0, r8, lsl r9
   27b88:	andeq	r0, r0, r8, lsr #14
   27b8c:	andeq	r0, r0, ip, lsr r7
   27b90:	andeq	r0, r0, r8, asr #14
   27b94:	andeq	r0, r0, ip, lsl #17
   27b98:	andeq	r0, r0, r8, asr #18
   27b9c:	andeq	r0, r0, r8, lsl #15
   27ba0:			; <UNDEFINED> instruction: 0x000009b4
   27ba4:	andeq	r0, r0, r8, lsl #19
   27ba8:			; <UNDEFINED> instruction: 0x000008b8
   27bac:	andeq	r0, r0, r0, lsl #19
   27bb0:	andeq	r0, r0, r0, ror #16
   27bb4:			; <UNDEFINED> instruction: 0x000007b8
   27bb8:	muleq	r0, r0, r8
   27bbc:	ldrdeq	r0, [r0], -ip
   27bc0:	ldrdeq	r0, [r0], -r8
   27bc4:	andeq	r0, r0, r4, lsr r9
   27bc8:	andeq	r0, r0, r4, lsl r8
   27bcc:	andeq	r0, r0, r0, lsl r7
   27bd0:	andeq	r0, r0, r4, lsr #19
   27bd4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27bd8:			; <UNDEFINED> instruction: 0x000009bc
   27bdc:	andeq	r0, r0, r0, asr r7
   27be0:	andeq	r0, r0, r8, asr #17
   27be4:	strdeq	r0, [r0], -r8
   27be8:	andeq	r0, r0, r4, asr #16
   27bec:	andeq	r0, r0, r4, asr #18
   27bf0:	andeq	r0, r0, r0, asr #16
   27bf4:	andeq	r0, r0, r0, asr #17
   27bf8:	ldrdeq	r0, [r0], -r4
   27bfc:	andeq	r0, r0, r8, lsl #16
   27c00:	andeq	r9, r0, ip, lsr #2

00027c04 <myhtml_tokenizer_state_destroy@@Base>:
   27c04:	ldr	r0, [r0, #24]
   27c08:	cmp	r0, #0
   27c0c:	bxeq	lr
   27c10:	b	10dcc <mycore_free@plt>

00027c14 <myhtml_tokenizer_state_doctype@@Base>:
   27c14:	mov	r2, #52	; 0x34
   27c18:	str	r2, [r0, #160]	; 0xa0
   27c1c:	mov	r0, r3
   27c20:	bx	lr

00027c24 <myhtml_tokenizer_state_before_doctype_name@@Base>:
   27c24:	push	{r4, r5, r6, lr}
   27c28:	add	ip, r2, r3
   27c2c:	ldrb	lr, [r2, r3]
   27c30:	ldr	r5, [sp, #16]
   27c34:	mov	r4, r3
   27c38:	sub	r6, lr, #9
   27c3c:	uxtb	r6, r6
   27c40:	cmp	r6, #23
   27c44:	bls	27c58 <myhtml_tokenizer_state_before_doctype_name@@Base+0x34>
   27c48:	cmp	r3, r5
   27c4c:	bcc	27c98 <myhtml_tokenizer_state_before_doctype_name@@Base+0x74>
   27c50:	mov	r0, r4
   27c54:	pop	{r4, r5, r6, pc}
   27c58:	ldr	r2, [pc, #284]	; 27d7c <myhtml_tokenizer_state_before_doctype_name@@Base+0x158>
   27c5c:	mvn	r6, r2, lsr r6
   27c60:	tst	r6, #1
   27c64:	bne	27c48 <myhtml_tokenizer_state_before_doctype_name@@Base+0x24>
   27c68:	cmp	r3, r5
   27c6c:	bcs	27c50 <myhtml_tokenizer_state_before_doctype_name@@Base+0x2c>
   27c70:	mov	r3, r2
   27c74:	add	r4, r4, #1
   27c78:	cmp	r5, r4
   27c7c:	beq	27c50 <myhtml_tokenizer_state_before_doctype_name@@Base+0x2c>
   27c80:	ldrb	lr, [ip, #1]!
   27c84:	sub	r2, lr, #9
   27c88:	uxtb	r2, r2
   27c8c:	cmp	r2, #23
   27c90:	mvn	r2, r3, lsr r2
   27c94:	bls	27ce8 <myhtml_tokenizer_state_before_doctype_name@@Base+0xc4>
   27c98:	cmp	lr, #62	; 0x3e
   27c9c:	beq	27cf4 <myhtml_tokenizer_state_before_doctype_name@@Base+0xd0>
   27ca0:	ldr	r2, [r1, #40]	; 0x28
   27ca4:	cmp	r2, #0
   27ca8:	beq	27d3c <myhtml_tokenizer_state_before_doctype_name@@Base+0x118>
   27cac:	ldr	r2, [r1, #44]	; 0x2c
   27cb0:	ldr	r3, [r0, #56]	; 0x38
   27cb4:	mov	ip, #0
   27cb8:	str	r3, [r2]
   27cbc:	str	r2, [r3, #4]
   27cc0:	str	r3, [r1, #44]	; 0x2c
   27cc4:	str	ip, [r3]
   27cc8:	str	r3, [r0, #56]	; 0x38
   27ccc:	ldr	r2, [r0, #192]	; 0xc0
   27cd0:	mov	r1, #53	; 0x35
   27cd4:	add	r2, r2, r4
   27cd8:	str	r2, [r3, #48]	; 0x30
   27cdc:	str	r1, [r0, #160]	; 0xa0
   27ce0:	mov	r0, r4
   27ce4:	pop	{r4, r5, r6, pc}
   27ce8:	tst	r2, #1
   27cec:	beq	27c74 <myhtml_tokenizer_state_before_doctype_name@@Base+0x50>
   27cf0:	b	27ca0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x7c>
   27cf4:	ldr	r2, [r1, #32]
   27cf8:	ldr	r3, [r0, #192]	; 0xc0
   27cfc:	add	r4, r4, #1
   27d00:	sub	r3, r3, r2
   27d04:	add	r3, r3, r4
   27d08:	mov	r2, #1
   27d0c:	str	r2, [r0, #176]	; 0xb0
   27d10:	mov	r2, r1
   27d14:	str	r3, [r1, #36]	; 0x24
   27d18:	mov	r1, r4
   27d1c:	mov	r5, r0
   27d20:	bl	10028 <myhtml_queue_add@plt>
   27d24:	subs	r6, r0, #0
   27d28:	beq	27d58 <myhtml_tokenizer_state_before_doctype_name@@Base+0x134>
   27d2c:	mov	r3, #69	; 0x45
   27d30:	str	r3, [r5, #160]	; 0xa0
   27d34:	mov	r4, #0
   27d38:	b	27c50 <myhtml_tokenizer_state_before_doctype_name@@Base+0x2c>
   27d3c:	ldr	r3, [r0, #56]	; 0x38
   27d40:	str	r3, [r1, #40]	; 0x28
   27d44:	str	r3, [r1, #44]	; 0x2c
   27d48:	str	r3, [r0, #56]	; 0x38
   27d4c:	str	r2, [r3]
   27d50:	str	r2, [r3, #4]
   27d54:	b	27ccc <myhtml_tokenizer_state_before_doctype_name@@Base+0xa8>
   27d58:	ldr	r3, [r5, #8]
   27d5c:	mov	r0, r3
   27d60:	ldr	r1, [r3, #16]
   27d64:	bl	10904 <myhtml_token_attr_create@plt>
   27d68:	cmp	r0, #0
   27d6c:	str	r0, [r5, #56]	; 0x38
   27d70:	strne	r6, [r5, #160]	; 0xa0
   27d74:	bne	27c50 <myhtml_tokenizer_state_before_doctype_name@@Base+0x2c>
   27d78:	b	27d2c <myhtml_tokenizer_state_before_doctype_name@@Base+0x108>
   27d7c:	addeq	r0, r0, fp, lsl r0

00027d80 <myhtml_tokenizer_state_doctype_name@@Base>:
   27d80:	push	{r4, r5, r6, lr}
   27d84:	mov	r4, r3
   27d88:	ldr	lr, [sp, #16]
   27d8c:	cmp	r3, lr
   27d90:	bcs	27ed0 <myhtml_tokenizer_state_doctype_name@@Base+0x150>
   27d94:	ldrb	r3, [r2, r3]
   27d98:	mov	r5, r0
   27d9c:	add	r2, r2, r4
   27da0:	cmp	r3, #62	; 0x3e
   27da4:	beq	27e58 <myhtml_tokenizer_state_doctype_name@@Base+0xd8>
   27da8:	sub	r3, r3, #9
   27dac:	uxtb	r3, r3
   27db0:	cmp	r3, #23
   27db4:	bhi	27dc8 <myhtml_tokenizer_state_doctype_name@@Base+0x48>
   27db8:	ldr	r0, [pc, #280]	; 27ed8 <myhtml_tokenizer_state_doctype_name@@Base+0x158>
   27dbc:	mvn	r3, r0, lsr r3
   27dc0:	tst	r3, #1
   27dc4:	beq	27e10 <myhtml_tokenizer_state_doctype_name@@Base+0x90>
   27dc8:	ldr	r0, [pc, #264]	; 27ed8 <myhtml_tokenizer_state_doctype_name@@Base+0x158>
   27dcc:	b	27df8 <myhtml_tokenizer_state_doctype_name@@Base+0x78>
   27dd0:	ldrb	r3, [r2, #1]!
   27dd4:	sub	ip, r3, #9
   27dd8:	cmp	r3, #62	; 0x3e
   27ddc:	uxtb	ip, ip
   27de0:	beq	27e58 <myhtml_tokenizer_state_doctype_name@@Base+0xd8>
   27de4:	cmp	ip, #23
   27de8:	mvn	r3, r0, lsr ip
   27dec:	bhi	27df8 <myhtml_tokenizer_state_doctype_name@@Base+0x78>
   27df0:	tst	r3, #1
   27df4:	beq	27e10 <myhtml_tokenizer_state_doctype_name@@Base+0x90>
   27df8:	add	r4, r4, #1
   27dfc:	cmp	lr, r4
   27e00:	bne	27dd0 <myhtml_tokenizer_state_doctype_name@@Base+0x50>
   27e04:	mov	r6, lr
   27e08:	mov	r0, r6
   27e0c:	pop	{r4, r5, r6, pc}
   27e10:	ldr	r1, [r5, #56]	; 0x38
   27e14:	ldr	r3, [r5, #192]	; 0xc0
   27e18:	ldr	r2, [r5, #8]
   27e1c:	ldr	ip, [r1, #48]	; 0x30
   27e20:	mov	r0, r2
   27e24:	sub	r3, r3, ip
   27e28:	add	r3, r3, r4
   27e2c:	str	r3, [r1, #52]	; 0x34
   27e30:	ldr	r1, [r2, #16]
   27e34:	bl	10904 <myhtml_token_attr_create@plt>
   27e38:	cmp	r0, #0
   27e3c:	str	r0, [r5, #56]	; 0x38
   27e40:	beq	27ebc <myhtml_tokenizer_state_doctype_name@@Base+0x13c>
   27e44:	add	r6, r4, #1
   27e48:	mov	r3, #54	; 0x36
   27e4c:	str	r3, [r5, #160]	; 0xa0
   27e50:	mov	r0, r6
   27e54:	pop	{r4, r5, r6, pc}
   27e58:	ldr	r0, [r5, #56]	; 0x38
   27e5c:	ldr	r3, [r5, #192]	; 0xc0
   27e60:	ldr	r2, [r1, #32]
   27e64:	ldr	ip, [r0, #48]	; 0x30
   27e68:	sub	r2, r3, r2
   27e6c:	add	r6, r4, #1
   27e70:	sub	r3, r3, ip
   27e74:	add	r4, r3, r4
   27e78:	add	r3, r2, r6
   27e7c:	str	r4, [r0, #52]	; 0x34
   27e80:	mov	r2, r1
   27e84:	str	r3, [r1, #36]	; 0x24
   27e88:	mov	r0, r5
   27e8c:	mov	r1, r6
   27e90:	bl	10028 <myhtml_queue_add@plt>
   27e94:	subs	r4, r0, #0
   27e98:	bne	27ebc <myhtml_tokenizer_state_doctype_name@@Base+0x13c>
   27e9c:	ldr	r3, [r5, #8]
   27ea0:	mov	r0, r3
   27ea4:	ldr	r1, [r3, #16]
   27ea8:	bl	10904 <myhtml_token_attr_create@plt>
   27eac:	cmp	r0, #0
   27eb0:	str	r0, [r5, #56]	; 0x38
   27eb4:	strne	r4, [r5, #160]	; 0xa0
   27eb8:	bne	27e50 <myhtml_tokenizer_state_doctype_name@@Base+0xd0>
   27ebc:	mov	r3, #69	; 0x45
   27ec0:	mov	r6, #0
   27ec4:	str	r3, [r5, #160]	; 0xa0
   27ec8:	mov	r0, r6
   27ecc:	pop	{r4, r5, r6, pc}
   27ed0:	mov	r6, r3
   27ed4:	b	27e50 <myhtml_tokenizer_state_doctype_name@@Base+0xd0>
   27ed8:	addeq	r0, r0, fp, lsl r0

00027edc <myhtml_tokenizer_state_after_doctype_name@@Base>:
   27edc:	push	{r4, r5, r6, lr}
   27ee0:	mov	r4, r3
   27ee4:	ldrb	lr, [r2, r3]
   27ee8:	ldr	r5, [sp, #16]
   27eec:	add	r2, r2, r3
   27ef0:	sub	r6, lr, #9
   27ef4:	uxtb	r6, r6
   27ef8:	cmp	r6, #23
   27efc:	bls	27f10 <myhtml_tokenizer_state_after_doctype_name@@Base+0x34>
   27f00:	cmp	r3, r5
   27f04:	bcc	27f50 <myhtml_tokenizer_state_after_doctype_name@@Base+0x74>
   27f08:	mov	r0, r4
   27f0c:	pop	{r4, r5, r6, pc}
   27f10:	ldr	ip, [pc, #168]	; 27fc0 <myhtml_tokenizer_state_after_doctype_name@@Base+0xe4>
   27f14:	mvn	r6, ip, lsr r6
   27f18:	tst	r6, #1
   27f1c:	bne	27f00 <myhtml_tokenizer_state_after_doctype_name@@Base+0x24>
   27f20:	cmp	r3, r5
   27f24:	bcs	27f08 <myhtml_tokenizer_state_after_doctype_name@@Base+0x2c>
   27f28:	mov	r3, ip
   27f2c:	add	r4, r4, #1
   27f30:	cmp	r5, r4
   27f34:	beq	27f08 <myhtml_tokenizer_state_after_doctype_name@@Base+0x2c>
   27f38:	ldrb	lr, [r2, #1]!
   27f3c:	sub	ip, lr, #9
   27f40:	uxtb	ip, ip
   27f44:	cmp	ip, #23
   27f48:	mvn	ip, r3, lsr ip
   27f4c:	bls	27f74 <myhtml_tokenizer_state_after_doctype_name@@Base+0x98>
   27f50:	cmp	lr, #62	; 0x3e
   27f54:	beq	27f80 <myhtml_tokenizer_state_after_doctype_name@@Base+0xa4>
   27f58:	ldr	r3, [r0, #192]	; 0xc0
   27f5c:	mov	r2, #68	; 0x44
   27f60:	add	r3, r3, r4
   27f64:	str	r3, [r1, #12]
   27f68:	str	r2, [r0, #160]	; 0xa0
   27f6c:	mov	r0, r4
   27f70:	pop	{r4, r5, r6, pc}
   27f74:	tst	ip, #1
   27f78:	beq	27f2c <myhtml_tokenizer_state_after_doctype_name@@Base+0x50>
   27f7c:	b	27f58 <myhtml_tokenizer_state_after_doctype_name@@Base+0x7c>
   27f80:	mov	r2, r1
   27f84:	ldr	r3, [r0, #192]	; 0xc0
   27f88:	ldr	r1, [r1, #32]
   27f8c:	add	r4, r4, #1
   27f90:	sub	r3, r3, r1
   27f94:	add	r3, r3, r4
   27f98:	str	r3, [r2, #36]	; 0x24
   27f9c:	mov	r1, r4
   27fa0:	mov	r5, r0
   27fa4:	bl	10028 <myhtml_queue_add@plt>
   27fa8:	cmp	r0, #0
   27fac:	movne	r3, #69	; 0x45
   27fb0:	strne	r3, [r5, #160]	; 0xa0
   27fb4:	movne	r4, #0
   27fb8:	streq	r0, [r5, #160]	; 0xa0
   27fbc:	b	27f08 <myhtml_tokenizer_state_after_doctype_name@@Base+0x2c>
   27fc0:	addeq	r0, r0, fp, lsl r0

00027fc4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base>:
   27fc4:	push	{r4, r5, r6, r7, r8, lr}
   27fc8:	ldr	ip, [r0, #192]	; 0xc0
   27fcc:	ldr	lr, [r1, #12]
   27fd0:	ldr	r7, [sp, #24]
   27fd4:	add	r5, lr, #6
   27fd8:	add	ip, r7, ip
   27fdc:	cmp	r5, ip
   27fe0:	bls	27fec <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x28>
   27fe4:	mov	r0, r7
   27fe8:	pop	{r4, r5, r6, r7, r8, pc}
   27fec:	mov	r2, #6
   27ff0:	mov	r5, r1
   27ff4:	mov	r1, lr
   27ff8:	mov	r7, r3
   27ffc:	mov	r4, r0
   28000:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   28004:	ldr	r1, [pc, #368]	; 2817c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1b8>
   28008:	mov	r2, #6
   2800c:	add	r1, pc, r1
   28010:	mov	r6, r0
   28014:	bl	102a4 <mycore_strncasecmp@plt>
   28018:	cmp	r0, #0
   2801c:	bne	28094 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xd0>
   28020:	ldr	r2, [r5, #40]	; 0x28
   28024:	cmp	r2, #0
   28028:	beq	28160 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x19c>
   2802c:	ldr	r2, [r5, #44]	; 0x2c
   28030:	ldr	r3, [r4, #56]	; 0x38
   28034:	str	r3, [r2]
   28038:	str	r2, [r3, #4]
   2803c:	str	r3, [r5, #44]	; 0x2c
   28040:	str	r0, [r3]
   28044:	str	r3, [r4, #56]	; 0x38
   28048:	ldr	r0, [r4, #8]
   2804c:	ldr	ip, [r5, #12]
   28050:	mov	r2, #6
   28054:	ldr	r1, [r0, #16]
   28058:	str	ip, [r3, #56]	; 0x38
   2805c:	str	r2, [r3, #60]	; 0x3c
   28060:	bl	10904 <myhtml_token_attr_create@plt>
   28064:	cmp	r0, #0
   28068:	str	r0, [r4, #56]	; 0x38
   2806c:	beq	28134 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x170>
   28070:	ldr	r1, [r4, #76]	; 0x4c
   28074:	ldr	r2, [r5, #12]
   28078:	mov	r3, #56	; 0x38
   2807c:	ldr	r1, [r1, #12]
   28080:	add	r2, r2, #6
   28084:	sub	r7, r2, r1
   28088:	str	r3, [r4, #160]	; 0xa0
   2808c:	mov	r0, r7
   28090:	pop	{r4, r5, r6, r7, r8, pc}
   28094:	ldr	r1, [pc, #228]	; 28180 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1bc>
   28098:	mov	r0, r6
   2809c:	mov	r2, #6
   280a0:	add	r1, pc, r1
   280a4:	bl	102a4 <mycore_strncasecmp@plt>
   280a8:	cmp	r0, #0
   280ac:	bne	28120 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x15c>
   280b0:	ldr	r2, [r5, #40]	; 0x28
   280b4:	cmp	r2, #0
   280b8:	beq	28144 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x180>
   280bc:	ldr	r2, [r5, #44]	; 0x2c
   280c0:	ldr	r3, [r4, #56]	; 0x38
   280c4:	str	r3, [r2]
   280c8:	str	r2, [r3, #4]
   280cc:	str	r3, [r5, #44]	; 0x2c
   280d0:	str	r0, [r3]
   280d4:	str	r3, [r4, #56]	; 0x38
   280d8:	ldr	r0, [r4, #8]
   280dc:	ldr	ip, [r5, #12]
   280e0:	mov	r2, #6
   280e4:	ldr	r1, [r0, #16]
   280e8:	str	ip, [r3, #56]	; 0x38
   280ec:	str	r2, [r3, #60]	; 0x3c
   280f0:	bl	10904 <myhtml_token_attr_create@plt>
   280f4:	cmp	r0, #0
   280f8:	str	r0, [r4, #56]	; 0x38
   280fc:	beq	28134 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x170>
   28100:	ldr	r1, [r4, #76]	; 0x4c
   28104:	ldr	r2, [r5, #12]
   28108:	mov	r3, #59	; 0x3b
   2810c:	ldr	r1, [r1, #12]
   28110:	add	r2, r2, #6
   28114:	sub	r7, r2, r1
   28118:	str	r3, [r4, #160]	; 0xa0
   2811c:	b	27fe4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x20>
   28120:	mov	r1, #1
   28124:	mov	r3, #66	; 0x42
   28128:	str	r1, [r4, #176]	; 0xb0
   2812c:	str	r3, [r4, #160]	; 0xa0
   28130:	b	27fe4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x20>
   28134:	mov	r3, #69	; 0x45
   28138:	str	r3, [r4, #160]	; 0xa0
   2813c:	mov	r7, #0
   28140:	b	27fe4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x20>
   28144:	ldr	r3, [r4, #56]	; 0x38
   28148:	str	r3, [r5, #40]	; 0x28
   2814c:	str	r3, [r5, #44]	; 0x2c
   28150:	str	r3, [r4, #56]	; 0x38
   28154:	str	r2, [r3]
   28158:	str	r2, [r3, #4]
   2815c:	b	280d8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x114>
   28160:	ldr	r3, [r4, #56]	; 0x38
   28164:	str	r3, [r5, #40]	; 0x28
   28168:	str	r3, [r5, #44]	; 0x2c
   2816c:	str	r3, [r4, #56]	; 0x38
   28170:	str	r2, [r3]
   28174:	str	r2, [r3, #4]
   28178:	b	28048 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x84>
   2817c:	ldrdeq	r3, [sp], -r8
   28180:	andeq	r3, sp, ip, lsr sp

00028184 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base>:
   28184:	push	{r4, r5, r6, lr}
   28188:	add	ip, r2, r3
   2818c:	ldrb	lr, [r2, r3]
   28190:	ldr	r5, [sp, #16]
   28194:	mov	r4, r3
   28198:	sub	r6, lr, #9
   2819c:	uxtb	r6, r6
   281a0:	cmp	r6, #23
   281a4:	bls	281b8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x34>
   281a8:	cmp	r3, r5
   281ac:	bcc	281f8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x74>
   281b0:	mov	r0, r4
   281b4:	pop	{r4, r5, r6, pc}
   281b8:	ldr	r2, [pc, #268]	; 282cc <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x148>
   281bc:	mvn	r6, r2, lsr r6
   281c0:	tst	r6, #1
   281c4:	bne	281a8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x24>
   281c8:	cmp	r3, r5
   281cc:	bcs	281b0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x2c>
   281d0:	mov	r3, r2
   281d4:	add	r4, r4, #1
   281d8:	cmp	r5, r4
   281dc:	beq	281b0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x2c>
   281e0:	ldrb	lr, [ip, #1]!
   281e4:	sub	r2, lr, #9
   281e8:	uxtb	r2, r2
   281ec:	cmp	r2, #23
   281f0:	mvn	r2, r3, lsr r2
   281f4:	bls	28228 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xa4>
   281f8:	cmp	lr, #34	; 0x22
   281fc:	bne	28230 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xac>
   28200:	ldr	r3, [r0, #192]	; 0xc0
   28204:	ldr	r2, [r0, #56]	; 0x38
   28208:	add	r3, r3, #1
   2820c:	add	r3, r3, r4
   28210:	mov	ip, #0
   28214:	mov	r1, #57	; 0x39
   28218:	str	r3, [r2, #56]	; 0x38
   2821c:	str	ip, [r2, #60]	; 0x3c
   28220:	str	r1, [r0, #160]	; 0xa0
   28224:	b	28250 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xcc>
   28228:	tst	r2, #1
   2822c:	beq	281d4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x50>
   28230:	cmp	lr, #39	; 0x27
   28234:	beq	2825c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xd8>
   28238:	cmp	lr, #62	; 0x3e
   2823c:	beq	28284 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x100>
   28240:	mov	r2, #1
   28244:	mov	r3, #66	; 0x42
   28248:	str	r2, [r0, #176]	; 0xb0
   2824c:	str	r3, [r0, #160]	; 0xa0
   28250:	add	r4, r4, #1
   28254:	mov	r0, r4
   28258:	pop	{r4, r5, r6, pc}
   2825c:	ldr	r3, [r0, #192]	; 0xc0
   28260:	ldr	r2, [r0, #56]	; 0x38
   28264:	add	r3, r3, #1
   28268:	add	r3, r3, r4
   2826c:	mov	ip, #0
   28270:	mov	r1, #58	; 0x3a
   28274:	str	r3, [r2, #56]	; 0x38
   28278:	str	ip, [r2, #60]	; 0x3c
   2827c:	str	r1, [r0, #160]	; 0xa0
   28280:	b	28250 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xcc>
   28284:	ldr	r2, [r1, #32]
   28288:	ldr	r3, [r0, #192]	; 0xc0
   2828c:	add	r4, r4, #1
   28290:	sub	r3, r3, r2
   28294:	add	r3, r3, r4
   28298:	mov	r2, #1
   2829c:	str	r2, [r0, #176]	; 0xb0
   282a0:	str	r3, [r1, #36]	; 0x24
   282a4:	mov	r2, r1
   282a8:	mov	r1, r4
   282ac:	mov	r5, r0
   282b0:	bl	10028 <myhtml_queue_add@plt>
   282b4:	cmp	r0, #0
   282b8:	movne	r3, #69	; 0x45
   282bc:	strne	r3, [r5, #160]	; 0xa0
   282c0:	movne	r4, #0
   282c4:	streq	r0, [r5, #160]	; 0xa0
   282c8:	b	281b0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x2c>
   282cc:	addeq	r0, r0, fp, lsl r0

000282d0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base>:
   282d0:	push	{r4, r5, r6, lr}
   282d4:	mov	r6, r1
   282d8:	ldr	ip, [sp, #16]
   282dc:	mov	r4, r3
   282e0:	cmp	r3, ip
   282e4:	ldrb	r1, [sp, #20]
   282e8:	bcs	283c4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xf4>
   282ec:	ldrb	r3, [r2, r3]
   282f0:	mov	r5, r0
   282f4:	add	r2, r2, r4
   282f8:	cmp	r1, r3
   282fc:	bne	2831c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x4c>
   28300:	b	283cc <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xfc>
   28304:	add	r4, r4, #1
   28308:	cmp	ip, r4
   2830c:	beq	28448 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x178>
   28310:	ldrb	r3, [r2, #1]!
   28314:	cmp	r3, r1
   28318:	beq	283cc <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xfc>
   2831c:	cmp	r3, #62	; 0x3e
   28320:	bne	28304 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x34>
   28324:	ldr	r3, [r5, #56]	; 0x38
   28328:	ldr	r1, [r5, #192]	; 0xc0
   2832c:	mov	ip, #1
   28330:	ldr	r0, [r3, #56]	; 0x38
   28334:	add	r2, r1, r4
   28338:	cmp	r0, r2
   2833c:	str	ip, [r5, #176]	; 0xb0
   28340:	bcs	28394 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xc4>
   28344:	ldr	r1, [r6, #40]	; 0x28
   28348:	sub	r2, r2, r0
   2834c:	cmp	r1, #0
   28350:	str	r2, [r3, #60]	; 0x3c
   28354:	beq	2846c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x19c>
   28358:	ldr	r2, [r6, #44]	; 0x2c
   2835c:	mov	r1, #0
   28360:	str	r3, [r2]
   28364:	str	r2, [r3, #4]
   28368:	str	r3, [r6, #44]	; 0x2c
   2836c:	str	r1, [r3]
   28370:	str	r3, [r5, #56]	; 0x38
   28374:	ldr	r3, [r5, #8]
   28378:	mov	r0, r3
   2837c:	ldr	r1, [r3, #16]
   28380:	bl	10904 <myhtml_token_attr_create@plt>
   28384:	cmp	r0, #0
   28388:	str	r0, [r5, #56]	; 0x38
   2838c:	beq	28434 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x164>
   28390:	ldr	r1, [r5, #192]	; 0xc0
   28394:	ldr	r3, [r6, #32]
   28398:	add	r4, r4, #1
   2839c:	sub	r3, r4, r3
   283a0:	add	r3, r3, r1
   283a4:	str	r3, [r6, #36]	; 0x24
   283a8:	mov	r2, r6
   283ac:	mov	r1, r4
   283b0:	mov	r0, r5
   283b4:	bl	10028 <myhtml_queue_add@plt>
   283b8:	cmp	r0, #0
   283bc:	streq	r0, [r5, #160]	; 0xa0
   283c0:	bne	28434 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x164>
   283c4:	mov	r0, r4
   283c8:	pop	{r4, r5, r6, pc}
   283cc:	ldr	r3, [r5, #56]	; 0x38
   283d0:	ldr	r2, [r5, #192]	; 0xc0
   283d4:	ldr	r1, [r6, #40]	; 0x28
   283d8:	ldr	r0, [r3, #56]	; 0x38
   283dc:	cmp	r1, #0
   283e0:	sub	r2, r2, r0
   283e4:	add	r2, r2, r4
   283e8:	str	r2, [r3, #60]	; 0x3c
   283ec:	beq	28454 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x184>
   283f0:	ldr	r2, [r6, #44]	; 0x2c
   283f4:	mov	r1, #0
   283f8:	str	r3, [r2]
   283fc:	str	r2, [r3, #4]
   28400:	str	r3, [r6, #44]	; 0x2c
   28404:	str	r1, [r3]
   28408:	str	r3, [r5, #56]	; 0x38
   2840c:	ldr	r3, [r5, #8]
   28410:	mov	r0, r3
   28414:	ldr	r1, [r3, #16]
   28418:	bl	10904 <myhtml_token_attr_create@plt>
   2841c:	cmp	r0, #0
   28420:	movne	r3, #59	; 0x3b
   28424:	str	r0, [r5, #56]	; 0x38
   28428:	addne	r4, r4, #1
   2842c:	strne	r3, [r5, #160]	; 0xa0
   28430:	bne	283c4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xf4>
   28434:	mov	r3, #69	; 0x45
   28438:	mov	r4, #0
   2843c:	str	r3, [r5, #160]	; 0xa0
   28440:	mov	r0, r4
   28444:	pop	{r4, r5, r6, pc}
   28448:	mov	r4, ip
   2844c:	mov	r0, r4
   28450:	pop	{r4, r5, r6, pc}
   28454:	str	r3, [r6, #40]	; 0x28
   28458:	str	r3, [r6, #44]	; 0x2c
   2845c:	str	r3, [r5, #56]	; 0x38
   28460:	str	r1, [r3]
   28464:	str	r1, [r3, #4]
   28468:	b	2840c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x13c>
   2846c:	str	r3, [r6, #40]	; 0x28
   28470:	str	r3, [r6, #44]	; 0x2c
   28474:	str	r3, [r5, #56]	; 0x38
   28478:	str	r1, [r3]
   2847c:	str	r1, [r3, #4]
   28480:	b	28374 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xa4>

00028484 <myhtml_tokenizer_state_doctype_public_identifier_double_quoted@@Base>:
   28484:	push	{lr}		; (str lr, [sp, #-4]!)
   28488:	sub	sp, sp, #12
   2848c:	mov	ip, #34	; 0x22
   28490:	ldr	lr, [sp, #16]
   28494:	str	ip, [sp, #4]
   28498:	str	lr, [sp]
   2849c:	bl	104d8 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   284a0:	add	sp, sp, #12
   284a4:	pop	{pc}		; (ldr pc, [sp], #4)

000284a8 <myhtml_tokenizer_state_doctype_public_identifier_single_quoted@@Base>:
   284a8:	push	{lr}		; (str lr, [sp, #-4]!)
   284ac:	sub	sp, sp, #12
   284b0:	mov	ip, #39	; 0x27
   284b4:	ldr	lr, [sp, #16]
   284b8:	str	ip, [sp, #4]
   284bc:	str	lr, [sp]
   284c0:	bl	104d8 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   284c4:	add	sp, sp, #12
   284c8:	pop	{pc}		; (ldr pc, [sp], #4)

000284cc <myhtml_tokenizer_state_after_doctype_public_identifier@@Base>:
   284cc:	push	{r4, r5, r6, lr}
   284d0:	mov	r4, r3
   284d4:	ldrb	lr, [r2, r3]
   284d8:	ldr	r5, [sp, #16]
   284dc:	add	r2, r2, r3
   284e0:	sub	r6, lr, #9
   284e4:	uxtb	r6, r6
   284e8:	cmp	r6, #23
   284ec:	bls	28500 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x34>
   284f0:	cmp	r3, r5
   284f4:	bcc	28540 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x74>
   284f8:	mov	r0, r4
   284fc:	pop	{r4, r5, r6, pc}
   28500:	ldr	ip, [pc, #264]	; 28610 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x144>
   28504:	mvn	r6, ip, lsr r6
   28508:	tst	r6, #1
   2850c:	bne	284f0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x24>
   28510:	cmp	r3, r5
   28514:	bcs	284f8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x2c>
   28518:	mov	r3, ip
   2851c:	add	r4, r4, #1
   28520:	cmp	r5, r4
   28524:	beq	284f8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x2c>
   28528:	ldrb	lr, [r2, #1]!
   2852c:	sub	ip, lr, #9
   28530:	uxtb	ip, ip
   28534:	cmp	ip, #23
   28538:	mvn	ip, r3, lsr ip
   2853c:	bls	28578 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xac>
   28540:	cmp	lr, #34	; 0x22
   28544:	bne	28580 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xb4>
   28548:	ldr	r3, [r0, #192]	; 0xc0
   2854c:	ldr	r2, [r0, #56]	; 0x38
   28550:	add	r3, r3, #1
   28554:	add	r3, r3, r4
   28558:	mov	ip, #0
   2855c:	mov	r1, #63	; 0x3f
   28560:	str	r3, [r2, #56]	; 0x38
   28564:	str	ip, [r2, #60]	; 0x3c
   28568:	str	r1, [r0, #160]	; 0xa0
   2856c:	add	r4, r4, #1
   28570:	mov	r0, r4
   28574:	pop	{r4, r5, r6, pc}
   28578:	tst	ip, #1
   2857c:	beq	2851c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x50>
   28580:	cmp	lr, #39	; 0x27
   28584:	beq	285a8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xdc>
   28588:	cmp	lr, #62	; 0x3e
   2858c:	beq	285d0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x104>
   28590:	mov	r2, #1
   28594:	mov	r3, #66	; 0x42
   28598:	str	r2, [r0, #176]	; 0xb0
   2859c:	str	r3, [r0, #160]	; 0xa0
   285a0:	mov	r0, r4
   285a4:	pop	{r4, r5, r6, pc}
   285a8:	ldr	r3, [r0, #192]	; 0xc0
   285ac:	ldr	r2, [r0, #56]	; 0x38
   285b0:	add	r3, r3, #1
   285b4:	add	r3, r3, r4
   285b8:	mov	ip, #0
   285bc:	mov	r1, #64	; 0x40
   285c0:	str	r3, [r2, #56]	; 0x38
   285c4:	str	ip, [r2, #60]	; 0x3c
   285c8:	str	r1, [r0, #160]	; 0xa0
   285cc:	b	2856c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xa0>
   285d0:	mov	r2, r1
   285d4:	ldr	r3, [r0, #192]	; 0xc0
   285d8:	ldr	r1, [r1, #32]
   285dc:	add	r4, r4, #1
   285e0:	sub	r3, r3, r1
   285e4:	add	r3, r3, r4
   285e8:	str	r3, [r2, #36]	; 0x24
   285ec:	mov	r1, r4
   285f0:	mov	r5, r0
   285f4:	bl	10028 <myhtml_queue_add@plt>
   285f8:	cmp	r0, #0
   285fc:	movne	r3, #69	; 0x45
   28600:	strne	r3, [r5, #160]	; 0xa0
   28604:	movne	r4, #0
   28608:	streq	r0, [r5, #160]	; 0xa0
   2860c:	b	284f8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x2c>
   28610:	addeq	r0, r0, fp, lsl r0

00028614 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base>:
   28614:	push	{r4, r5, r6, lr}
   28618:	mov	r6, r1
   2861c:	ldr	ip, [sp, #16]
   28620:	mov	r4, r3
   28624:	cmp	r3, ip
   28628:	ldrb	r1, [sp, #20]
   2862c:	bcs	28708 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xf4>
   28630:	ldrb	r3, [r2, r3]
   28634:	mov	r5, r0
   28638:	add	r2, r2, r4
   2863c:	cmp	r1, r3
   28640:	bne	28660 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x4c>
   28644:	b	28710 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xfc>
   28648:	add	r4, r4, #1
   2864c:	cmp	ip, r4
   28650:	beq	2878c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x178>
   28654:	ldrb	r3, [r2, #1]!
   28658:	cmp	r3, r1
   2865c:	beq	28710 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xfc>
   28660:	cmp	r3, #62	; 0x3e
   28664:	bne	28648 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x34>
   28668:	ldr	r3, [r5, #56]	; 0x38
   2866c:	ldr	r1, [r5, #192]	; 0xc0
   28670:	mov	ip, #1
   28674:	ldr	r0, [r3, #56]	; 0x38
   28678:	add	r2, r1, r4
   2867c:	cmp	r0, r2
   28680:	str	ip, [r5, #176]	; 0xb0
   28684:	bcs	286d8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xc4>
   28688:	ldr	r1, [r6, #40]	; 0x28
   2868c:	sub	r2, r2, r0
   28690:	cmp	r1, #0
   28694:	str	r2, [r3, #60]	; 0x3c
   28698:	beq	287b0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x19c>
   2869c:	ldr	r2, [r6, #44]	; 0x2c
   286a0:	mov	r1, #0
   286a4:	str	r3, [r2]
   286a8:	str	r2, [r3, #4]
   286ac:	str	r3, [r6, #44]	; 0x2c
   286b0:	str	r1, [r3]
   286b4:	str	r3, [r5, #56]	; 0x38
   286b8:	ldr	r3, [r5, #8]
   286bc:	mov	r0, r3
   286c0:	ldr	r1, [r3, #16]
   286c4:	bl	10904 <myhtml_token_attr_create@plt>
   286c8:	cmp	r0, #0
   286cc:	str	r0, [r5, #56]	; 0x38
   286d0:	beq	28778 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x164>
   286d4:	ldr	r1, [r5, #192]	; 0xc0
   286d8:	ldr	r3, [r6, #32]
   286dc:	add	r4, r4, #1
   286e0:	sub	r3, r4, r3
   286e4:	add	r3, r3, r1
   286e8:	str	r3, [r6, #36]	; 0x24
   286ec:	mov	r2, r6
   286f0:	mov	r1, r4
   286f4:	mov	r0, r5
   286f8:	bl	10028 <myhtml_queue_add@plt>
   286fc:	cmp	r0, #0
   28700:	streq	r0, [r5, #160]	; 0xa0
   28704:	bne	28778 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x164>
   28708:	mov	r0, r4
   2870c:	pop	{r4, r5, r6, pc}
   28710:	ldr	r3, [r5, #56]	; 0x38
   28714:	ldr	r2, [r5, #192]	; 0xc0
   28718:	ldr	r1, [r6, #40]	; 0x28
   2871c:	ldr	r0, [r3, #56]	; 0x38
   28720:	cmp	r1, #0
   28724:	sub	r2, r2, r0
   28728:	add	r2, r2, r4
   2872c:	str	r2, [r3, #60]	; 0x3c
   28730:	beq	28798 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x184>
   28734:	ldr	r2, [r6, #44]	; 0x2c
   28738:	mov	r1, #0
   2873c:	str	r3, [r2]
   28740:	str	r2, [r3, #4]
   28744:	str	r3, [r6, #44]	; 0x2c
   28748:	str	r1, [r3]
   2874c:	str	r3, [r5, #56]	; 0x38
   28750:	ldr	r3, [r5, #8]
   28754:	mov	r0, r3
   28758:	ldr	r1, [r3, #16]
   2875c:	bl	10904 <myhtml_token_attr_create@plt>
   28760:	cmp	r0, #0
   28764:	movne	r3, #65	; 0x41
   28768:	str	r0, [r5, #56]	; 0x38
   2876c:	addne	r4, r4, #1
   28770:	strne	r3, [r5, #160]	; 0xa0
   28774:	bne	28708 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xf4>
   28778:	mov	r3, #69	; 0x45
   2877c:	mov	r4, #0
   28780:	str	r3, [r5, #160]	; 0xa0
   28784:	mov	r0, r4
   28788:	pop	{r4, r5, r6, pc}
   2878c:	mov	r4, ip
   28790:	mov	r0, r4
   28794:	pop	{r4, r5, r6, pc}
   28798:	str	r3, [r6, #40]	; 0x28
   2879c:	str	r3, [r6, #44]	; 0x2c
   287a0:	str	r3, [r5, #56]	; 0x38
   287a4:	str	r1, [r3]
   287a8:	str	r1, [r3, #4]
   287ac:	b	28750 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x13c>
   287b0:	str	r3, [r6, #40]	; 0x28
   287b4:	str	r3, [r6, #44]	; 0x2c
   287b8:	str	r3, [r5, #56]	; 0x38
   287bc:	str	r1, [r3]
   287c0:	str	r1, [r3, #4]
   287c4:	b	286b8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xa4>

000287c8 <myhtml_tokenizer_state_doctype_system_identifier_double_quoted@@Base>:
   287c8:	push	{lr}		; (str lr, [sp, #-4]!)
   287cc:	sub	sp, sp, #12
   287d0:	mov	ip, #34	; 0x22
   287d4:	ldr	lr, [sp, #16]
   287d8:	str	ip, [sp, #4]
   287dc:	str	lr, [sp]
   287e0:	bl	10a9c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   287e4:	add	sp, sp, #12
   287e8:	pop	{pc}		; (ldr pc, [sp], #4)

000287ec <myhtml_tokenizer_state_doctype_system_identifier_single_quoted@@Base>:
   287ec:	push	{lr}		; (str lr, [sp, #-4]!)
   287f0:	sub	sp, sp, #12
   287f4:	mov	ip, #39	; 0x27
   287f8:	ldr	lr, [sp, #16]
   287fc:	str	ip, [sp, #4]
   28800:	str	lr, [sp]
   28804:	bl	10a9c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   28808:	add	sp, sp, #12
   2880c:	pop	{pc}		; (ldr pc, [sp], #4)

00028810 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base>:
   28810:	push	{r4, r5, r6, lr}
   28814:	mov	r4, r3
   28818:	ldrb	lr, [r2, r3]
   2881c:	ldr	r5, [sp, #16]
   28820:	add	r2, r2, r3
   28824:	sub	r6, lr, #9
   28828:	uxtb	r6, r6
   2882c:	cmp	r6, #23
   28830:	bls	28844 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x34>
   28834:	cmp	r3, r5
   28838:	bcc	28884 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x74>
   2883c:	mov	r0, r4
   28840:	pop	{r4, r5, r6, pc}
   28844:	ldr	ip, [pc, #156]	; 288e8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xd8>
   28848:	mvn	r6, ip, lsr r6
   2884c:	tst	r6, #1
   28850:	bne	28834 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x24>
   28854:	cmp	r3, r5
   28858:	bcs	2883c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x2c>
   2885c:	mov	r3, ip
   28860:	add	r4, r4, #1
   28864:	cmp	r5, r4
   28868:	beq	2883c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x2c>
   2886c:	ldrb	lr, [r2, #1]!
   28870:	sub	ip, lr, #9
   28874:	uxtb	ip, ip
   28878:	cmp	ip, #23
   2887c:	mvn	ip, r3, lsr ip
   28880:	bls	2889c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x8c>
   28884:	cmp	lr, #62	; 0x3e
   28888:	beq	288a8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x98>
   2888c:	mov	r3, #66	; 0x42
   28890:	str	r3, [r0, #160]	; 0xa0
   28894:	mov	r0, r4
   28898:	pop	{r4, r5, r6, pc}
   2889c:	tst	ip, #1
   288a0:	beq	28860 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x50>
   288a4:	b	2888c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x7c>
   288a8:	mov	r2, r1
   288ac:	ldr	r3, [r0, #192]	; 0xc0
   288b0:	ldr	r1, [r1, #32]
   288b4:	add	r4, r4, #1
   288b8:	sub	r3, r3, r1
   288bc:	add	r3, r3, r4
   288c0:	str	r3, [r2, #36]	; 0x24
   288c4:	mov	r1, r4
   288c8:	mov	r5, r0
   288cc:	bl	10028 <myhtml_queue_add@plt>
   288d0:	cmp	r0, #0
   288d4:	movne	r3, #69	; 0x45
   288d8:	strne	r3, [r5, #160]	; 0xa0
   288dc:	movne	r4, #0
   288e0:	streq	r0, [r5, #160]	; 0xa0
   288e4:	b	2883c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x2c>
   288e8:	addeq	r0, r0, fp, lsl r0

000288ec <myhtml_tokenizer_state_bogus_doctype@@Base>:
   288ec:	push	{r4, r5, r6, lr}
   288f0:	ldr	ip, [sp, #16]
   288f4:	cmp	r3, ip
   288f8:	bcs	2897c <myhtml_tokenizer_state_bogus_doctype@@Base+0x90>
   288fc:	ldrb	lr, [r2, r3]
   28900:	add	r2, r2, r3
   28904:	cmp	lr, #62	; 0x3e
   28908:	movne	r4, r3
   2890c:	bne	28920 <myhtml_tokenizer_state_bogus_doctype@@Base+0x34>
   28910:	b	28934 <myhtml_tokenizer_state_bogus_doctype@@Base+0x48>
   28914:	ldrb	r3, [r2, #1]!
   28918:	cmp	r3, #62	; 0x3e
   2891c:	beq	28938 <myhtml_tokenizer_state_bogus_doctype@@Base+0x4c>
   28920:	add	r4, r4, #1
   28924:	cmp	ip, r4
   28928:	bne	28914 <myhtml_tokenizer_state_bogus_doctype@@Base+0x28>
   2892c:	mov	r0, r4
   28930:	pop	{r4, r5, r6, pc}
   28934:	mov	r4, r3
   28938:	mov	r2, r1
   2893c:	ldr	r3, [r0, #192]	; 0xc0
   28940:	ldr	r1, [r1, #32]
   28944:	add	r4, r4, #1
   28948:	sub	r3, r3, r1
   2894c:	add	r3, r3, r4
   28950:	str	r3, [r2, #36]	; 0x24
   28954:	mov	r1, r4
   28958:	mov	r5, r0
   2895c:	bl	10028 <myhtml_queue_add@plt>
   28960:	cmp	r0, #0
   28964:	movne	r3, #69	; 0x45
   28968:	movne	r4, #0
   2896c:	streq	r0, [r5, #160]	; 0xa0
   28970:	strne	r3, [r5, #160]	; 0xa0
   28974:	mov	r0, r4
   28978:	pop	{r4, r5, r6, pc}
   2897c:	mov	r4, r3
   28980:	b	2892c <myhtml_tokenizer_state_bogus_doctype@@Base+0x40>

00028984 <myhtml_tokenizer_end_state_data@@Base>:
   28984:	push	{r4, r5, r6, lr}
   28988:	sub	sp, sp, #8
   2898c:	ldr	r5, [r0, #192]	; 0xc0
   28990:	ldr	ip, [sp, #24]
   28994:	ldr	lr, [r1, #32]
   28998:	add	ip, ip, r5
   2899c:	sub	lr, ip, lr
   289a0:	mov	r6, #512	; 0x200
   289a4:	mov	r5, r3
   289a8:	str	lr, [r1, #36]	; 0x24
   289ac:	mov	r3, ip
   289b0:	str	r6, [sp]
   289b4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   289b8:	mov	r0, r5
   289bc:	add	sp, sp, #8
   289c0:	pop	{r4, r5, r6, pc}

000289c4 <myhtml_tokenizer_end_state_tag_open@@Base>:
   289c4:	push	{r4, r5, r6, r7, lr}
   289c8:	sub	sp, sp, #12
   289cc:	ldr	r7, [r0, #192]	; 0xc0
   289d0:	ldr	ip, [sp, #32]
   289d4:	ldr	r5, [r1, #32]
   289d8:	ldr	lr, [r1, #24]
   289dc:	add	ip, r7, ip
   289e0:	sub	r5, ip, r5
   289e4:	cmp	ip, lr
   289e8:	str	r5, [r1, #36]	; 0x24
   289ec:	mov	r5, r3
   289f0:	bls	28a2c <myhtml_tokenizer_end_state_tag_open@@Base+0x68>
   289f4:	cmp	lr, #0
   289f8:	mov	r4, r1
   289fc:	beq	28a38 <myhtml_tokenizer_end_state_tag_open@@Base+0x74>
   28a00:	sub	lr, r3, lr
   28a04:	add	lr, lr, r7
   28a08:	str	lr, [r1, #28]
   28a0c:	mov	r6, r0
   28a10:	bl	10c40 <myhtml_check_tag_parser@plt>
   28a14:	mov	r2, r4
   28a18:	mov	r1, r5
   28a1c:	mov	r0, r6
   28a20:	bl	10028 <myhtml_queue_add@plt>
   28a24:	cmp	r0, #0
   28a28:	bne	28a60 <myhtml_tokenizer_end_state_tag_open@@Base+0x9c>
   28a2c:	mov	r0, r5
   28a30:	add	sp, sp, #12
   28a34:	pop	{r4, r5, r6, r7, pc}
   28a38:	ldr	lr, [r1, #48]	; 0x30
   28a3c:	ldr	r3, [r1, #48]	; 0x30
   28a40:	and	lr, lr, #8
   28a44:	eor	lr, lr, r3
   28a48:	mov	r6, #512	; 0x200
   28a4c:	str	lr, [r1, #48]	; 0x30
   28a50:	mov	r3, ip
   28a54:	str	r6, [sp]
   28a58:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28a5c:	b	28a2c <myhtml_tokenizer_end_state_tag_open@@Base+0x68>
   28a60:	mov	r3, #69	; 0x45
   28a64:	mov	r0, #0
   28a68:	str	r3, [r6, #160]	; 0xa0
   28a6c:	add	sp, sp, #12
   28a70:	pop	{r4, r5, r6, r7, pc}

00028a74 <myhtml_tokenizer_end_state_tag_name@@Base>:
   28a74:	push	{r4, r5, r6, lr}
   28a78:	sub	sp, sp, #8
   28a7c:	ldr	r5, [r0, #192]	; 0xc0
   28a80:	ldr	ip, [sp, #24]
   28a84:	ldr	lr, [r1, #32]
   28a88:	add	ip, ip, r5
   28a8c:	sub	lr, ip, lr
   28a90:	mov	r6, #512	; 0x200
   28a94:	mov	r5, r3
   28a98:	str	lr, [r1, #36]	; 0x24
   28a9c:	mov	r3, ip
   28aa0:	str	r6, [sp]
   28aa4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28aa8:	mov	r0, r5
   28aac:	add	sp, sp, #8
   28ab0:	pop	{r4, r5, r6, pc}

00028ab4 <myhtml_tokenizer_end_state_end_tag_open@@Base>:
   28ab4:	push	{r4, r5, r6, r7, lr}
   28ab8:	sub	sp, sp, #12
   28abc:	ldr	r7, [r0, #192]	; 0xc0
   28ac0:	ldr	lr, [sp, #32]
   28ac4:	ldr	r4, [r1, #32]
   28ac8:	ldr	r5, [r1, #24]
   28acc:	add	lr, r7, lr
   28ad0:	sub	r4, lr, r4
   28ad4:	cmp	lr, r5
   28ad8:	mov	r6, r3
   28adc:	str	r4, [r1, #36]	; 0x24
   28ae0:	bls	28b14 <myhtml_tokenizer_end_state_end_tag_open@@Base+0x60>
   28ae4:	ldr	r4, [r1, #48]	; 0x30
   28ae8:	sub	r5, r3, r5
   28aec:	ldr	r3, [r1, #48]	; 0x30
   28af0:	add	r5, r5, r7
   28af4:	and	r4, r4, #8
   28af8:	eor	r4, r4, r3
   28afc:	str	r5, [r1, #28]
   28b00:	mov	r5, #512	; 0x200
   28b04:	mov	r3, lr
   28b08:	str	r4, [r1, #48]	; 0x30
   28b0c:	str	r5, [sp]
   28b10:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28b14:	mov	r0, r6
   28b18:	add	sp, sp, #12
   28b1c:	pop	{r4, r5, r6, r7, pc}

00028b20 <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>:
   28b20:	push	{r4, r5, r6, lr}
   28b24:	sub	sp, sp, #8
   28b28:	ldr	r5, [r0, #192]	; 0xc0
   28b2c:	ldr	ip, [sp, #24]
   28b30:	ldr	lr, [r1, #32]
   28b34:	add	ip, ip, r5
   28b38:	sub	lr, ip, lr
   28b3c:	mov	r6, #512	; 0x200
   28b40:	mov	r5, r3
   28b44:	str	lr, [r1, #36]	; 0x24
   28b48:	mov	r3, ip
   28b4c:	str	r6, [sp]
   28b50:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28b54:	mov	r0, r5
   28b58:	add	sp, sp, #8
   28b5c:	pop	{r4, r5, r6, pc}

00028b60 <myhtml_tokenizer_end_state_markup_declaration_open@@Base>:
   28b60:	push	{r4, r5, r6, r7, r8, lr}
   28b64:	sub	sp, sp, #8
   28b68:	ldr	ip, [r1, #32]
   28b6c:	ldr	r7, [sp, #32]
   28b70:	ldr	r6, [r0, #192]	; 0xc0
   28b74:	ldr	lr, [r1, #24]
   28b78:	sub	ip, r7, ip
   28b7c:	add	ip, ip, r6
   28b80:	cmp	lr, #1
   28b84:	mov	r6, r3
   28b88:	str	ip, [r1, #36]	; 0x24
   28b8c:	bls	28bd4 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x74>
   28b90:	str	r7, [sp]
   28b94:	mov	r3, lr
   28b98:	mov	r4, r1
   28b9c:	mov	r5, r0
   28ba0:	ldr	r8, [r0, #76]	; 0x4c
   28ba4:	bl	ffd4 <myhtml_tokenizer_state_bogus_comment@plt>
   28ba8:	ldr	r2, [r5, #64]	; 0x40
   28bac:	cmp	r4, r2
   28bb0:	str	r0, [r8, #4]
   28bb4:	beq	28c30 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xd0>
   28bb8:	ldr	r3, [r5, #192]	; 0xc0
   28bbc:	ldr	r1, [r2, #24]
   28bc0:	add	r3, r7, r3
   28bc4:	sub	r3, r3, r1
   28bc8:	cmp	r3, #0
   28bcc:	str	r3, [r2, #28]
   28bd0:	bne	28be0 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x80>
   28bd4:	mov	r0, r6
   28bd8:	add	sp, sp, #8
   28bdc:	pop	{r4, r5, r6, r7, r8, pc}
   28be0:	ldr	r3, [r2, #48]	; 0x30
   28be4:	ldr	r1, [r2, #48]	; 0x30
   28be8:	and	r3, r3, #8
   28bec:	eor	r3, r3, r1
   28bf0:	str	r3, [r2, #48]	; 0x30
   28bf4:	ldr	r3, [r2, #48]	; 0x30
   28bf8:	mov	r1, #1
   28bfc:	orr	r3, r3, #512	; 0x200
   28c00:	str	r3, [r2, #48]	; 0x30
   28c04:	str	r1, [r2]
   28c08:	mov	r1, r6
   28c0c:	mov	r0, r5
   28c10:	bl	10028 <myhtml_queue_add@plt>
   28c14:	cmp	r0, #0
   28c18:	beq	28bd4 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x74>
   28c1c:	mov	r3, #69	; 0x45
   28c20:	mov	r0, #0
   28c24:	str	r3, [r5, #160]	; 0xa0
   28c28:	add	sp, sp, #8
   28c2c:	pop	{r4, r5, r6, r7, r8, pc}
   28c30:	ldr	r2, [r4, #48]	; 0x30
   28c34:	ldr	r3, [r4, #48]	; 0x30
   28c38:	and	r2, r2, #8
   28c3c:	eor	r2, r2, r3
   28c40:	ldr	r3, [r5, #192]	; 0xc0
   28c44:	ldr	r1, [r4, #24]
   28c48:	str	r2, [r4, #48]	; 0x30
   28c4c:	ldr	r2, [r4, #48]	; 0x30
   28c50:	add	r3, r7, r3
   28c54:	orr	r2, r2, #1024	; 0x400
   28c58:	sub	r3, r3, r1
   28c5c:	mov	r1, #2
   28c60:	str	r2, [r4, #48]	; 0x30
   28c64:	str	r3, [r4, #28]
   28c68:	str	r1, [r4]
   28c6c:	mov	r2, r4
   28c70:	b	28c08 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xa8>

00028c74 <myhtml_tokenizer_end_state_before_attribute_name@@Base>:
   28c74:	push	{r4, r5, r6, lr}
   28c78:	mov	r2, r1
   28c7c:	ldr	lr, [r1, #32]
   28c80:	ldr	ip, [r0, #192]	; 0xc0
   28c84:	ldr	r1, [sp, #16]
   28c88:	sub	ip, ip, lr
   28c8c:	add	ip, ip, r1
   28c90:	str	ip, [r2, #36]	; 0x24
   28c94:	mov	r1, r3
   28c98:	mov	r4, r3
   28c9c:	mov	r5, r0
   28ca0:	bl	10028 <myhtml_queue_add@plt>
   28ca4:	cmp	r0, #0
   28ca8:	movne	r3, #69	; 0x45
   28cac:	movne	r0, #0
   28cb0:	strne	r3, [r5, #160]	; 0xa0
   28cb4:	moveq	r0, r4
   28cb8:	pop	{r4, r5, r6, pc}

00028cbc <myhtml_tokenizer_end_state_attribute_name@@Base>:
   28cbc:	mov	r2, r1
   28cc0:	push	{r4, r5, r6, lr}
   28cc4:	mov	r4, r3
   28cc8:	ldr	r1, [r0, #56]	; 0x38
   28ccc:	ldr	ip, [r0, #192]	; 0xc0
   28cd0:	ldr	lr, [r2, #32]
   28cd4:	ldr	r3, [sp, #16]
   28cd8:	sub	lr, ip, lr
   28cdc:	add	lr, lr, r3
   28ce0:	ldr	r3, [r1, #48]	; 0x30
   28ce4:	add	ip, r4, ip
   28ce8:	sub	ip, ip, r3
   28cec:	str	lr, [r2, #36]	; 0x24
   28cf0:	str	ip, [r1, #52]	; 0x34
   28cf4:	mov	r1, r4
   28cf8:	mov	r5, r0
   28cfc:	bl	10028 <myhtml_queue_add@plt>
   28d00:	cmp	r0, #0
   28d04:	movne	r3, #69	; 0x45
   28d08:	movne	r0, #0
   28d0c:	strne	r3, [r5, #160]	; 0xa0
   28d10:	moveq	r0, r4
   28d14:	pop	{r4, r5, r6, pc}

00028d18 <myhtml_tokenizer_end_state_after_attribute_name@@Base>:
   28d18:	push	{r4, r5, r6, lr}
   28d1c:	mov	r2, r1
   28d20:	ldr	lr, [r1, #32]
   28d24:	ldr	ip, [r0, #192]	; 0xc0
   28d28:	ldr	r1, [sp, #16]
   28d2c:	sub	ip, ip, lr
   28d30:	add	ip, ip, r1
   28d34:	str	ip, [r2, #36]	; 0x24
   28d38:	mov	r1, r3
   28d3c:	mov	r4, r3
   28d40:	mov	r5, r0
   28d44:	bl	10028 <myhtml_queue_add@plt>
   28d48:	cmp	r0, #0
   28d4c:	movne	r3, #69	; 0x45
   28d50:	movne	r0, #0
   28d54:	strne	r3, [r5, #160]	; 0xa0
   28d58:	moveq	r0, r4
   28d5c:	pop	{r4, r5, r6, pc}

00028d60 <myhtml_tokenizer_end_state_before_attribute_value@@Base>:
   28d60:	push	{r4, r5, r6, lr}
   28d64:	mov	r2, r1
   28d68:	ldr	lr, [r1, #32]
   28d6c:	ldr	ip, [sp, #16]
   28d70:	ldr	r1, [r0, #192]	; 0xc0
   28d74:	sub	ip, ip, lr
   28d78:	add	ip, ip, r1
   28d7c:	str	ip, [r2, #36]	; 0x24
   28d80:	mov	r1, r3
   28d84:	mov	r5, r0
   28d88:	mov	r4, r3
   28d8c:	bl	10028 <myhtml_queue_add@plt>
   28d90:	cmp	r0, #0
   28d94:	beq	28da8 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x48>
   28d98:	mov	r3, #69	; 0x45
   28d9c:	str	r3, [r5, #160]	; 0xa0
   28da0:	mov	r0, #0
   28da4:	pop	{r4, r5, r6, pc}
   28da8:	ldr	r3, [r5, #8]
   28dac:	mov	r0, r3
   28db0:	ldr	r1, [r3, #16]
   28db4:	bl	10904 <myhtml_token_attr_create@plt>
   28db8:	cmp	r0, #0
   28dbc:	str	r0, [r5, #56]	; 0x38
   28dc0:	beq	28d98 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x38>
   28dc4:	mov	r0, r4
   28dc8:	pop	{r4, r5, r6, pc}

00028dcc <myhtml_tokenizer_end_state_attribute_value_double_quoted@@Base>:
   28dcc:	ldr	r2, [r0, #192]	; 0xc0
   28dd0:	ldr	ip, [r1, #32]
   28dd4:	ldr	r0, [sp]
   28dd8:	sub	r2, r2, ip
   28ddc:	add	r2, r2, r0
   28de0:	str	r2, [r1, #36]	; 0x24
   28de4:	mov	r0, r3
   28de8:	bx	lr

00028dec <myhtml_tokenizer_end_state_attribute_value_single_quoted@@Base>:
   28dec:	ldr	r2, [r0, #192]	; 0xc0
   28df0:	ldr	ip, [r1, #32]
   28df4:	ldr	r0, [sp]
   28df8:	sub	r2, r2, ip
   28dfc:	add	r2, r2, r0
   28e00:	str	r2, [r1, #36]	; 0x24
   28e04:	mov	r0, r3
   28e08:	bx	lr

00028e0c <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base>:
   28e0c:	mov	r2, r1
   28e10:	push	{r4, r5, r6, lr}
   28e14:	mov	r4, r3
   28e18:	ldr	r1, [r0, #56]	; 0x38
   28e1c:	ldr	r6, [r2, #32]
   28e20:	ldr	lr, [sp, #16]
   28e24:	ldr	ip, [r0, #192]	; 0xc0
   28e28:	ldr	r3, [r1, #56]	; 0x38
   28e2c:	sub	lr, lr, r6
   28e30:	add	lr, lr, ip
   28e34:	add	ip, ip, r4
   28e38:	sub	ip, ip, r3
   28e3c:	str	lr, [r2, #36]	; 0x24
   28e40:	str	ip, [r1, #60]	; 0x3c
   28e44:	mov	r1, r4
   28e48:	mov	r5, r0
   28e4c:	bl	10028 <myhtml_queue_add@plt>
   28e50:	cmp	r0, #0
   28e54:	beq	28e68 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x5c>
   28e58:	mov	r3, #69	; 0x45
   28e5c:	str	r3, [r5, #160]	; 0xa0
   28e60:	mov	r0, #0
   28e64:	pop	{r4, r5, r6, pc}
   28e68:	ldr	r3, [r5, #8]
   28e6c:	mov	r0, r3
   28e70:	ldr	r1, [r3, #16]
   28e74:	bl	10904 <myhtml_token_attr_create@plt>
   28e78:	cmp	r0, #0
   28e7c:	str	r0, [r5, #56]	; 0x38
   28e80:	beq	28e58 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x4c>
   28e84:	mov	r0, r4
   28e88:	pop	{r4, r5, r6, pc}

00028e8c <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>:
   28e8c:	mov	r2, r1
   28e90:	push	{r4, r5, r6, lr}
   28e94:	mov	r5, r3
   28e98:	ldr	ip, [r0, #192]	; 0xc0
   28e9c:	ldr	r1, [r1, #32]
   28ea0:	ldr	r6, [r2, #24]
   28ea4:	ldr	lr, [sp, #16]
   28ea8:	sub	r1, ip, r1
   28eac:	sub	ip, ip, r6
   28eb0:	add	r1, r1, lr
   28eb4:	add	ip, ip, r3
   28eb8:	str	r1, [r2, #36]	; 0x24
   28ebc:	str	ip, [r2, #28]
   28ec0:	mov	r1, r3
   28ec4:	mov	r4, r0
   28ec8:	bl	10028 <myhtml_queue_add@plt>
   28ecc:	cmp	r0, #0
   28ed0:	movne	r3, #69	; 0x45
   28ed4:	movne	r0, #0
   28ed8:	strne	r3, [r4, #160]	; 0xa0
   28edc:	moveq	r0, r5
   28ee0:	pop	{r4, r5, r6, pc}

00028ee4 <myhtml_tokenizer_end_state_comment_start@@Base>:
   28ee4:	mov	r2, r1
   28ee8:	push	{r4, r5, r6, lr}
   28eec:	mov	r5, r3
   28ef0:	ldr	ip, [r0, #192]	; 0xc0
   28ef4:	ldr	r1, [r1, #32]
   28ef8:	ldr	r6, [r2, #24]
   28efc:	ldr	lr, [sp, #16]
   28f00:	sub	r1, ip, r1
   28f04:	sub	ip, ip, r6
   28f08:	add	r1, r1, lr
   28f0c:	add	ip, ip, r3
   28f10:	str	r1, [r2, #36]	; 0x24
   28f14:	str	ip, [r2, #28]
   28f18:	mov	r1, r3
   28f1c:	mov	r4, r0
   28f20:	bl	10028 <myhtml_queue_add@plt>
   28f24:	cmp	r0, #0
   28f28:	movne	r3, #69	; 0x45
   28f2c:	movne	r0, #0
   28f30:	strne	r3, [r4, #160]	; 0xa0
   28f34:	moveq	r0, r5
   28f38:	pop	{r4, r5, r6, pc}

00028f3c <myhtml_tokenizer_end_state_comment_start_dash@@Base>:
   28f3c:	mov	r2, r1
   28f40:	push	{r4, r5, r6, lr}
   28f44:	mov	r5, r3
   28f48:	ldr	ip, [r0, #192]	; 0xc0
   28f4c:	ldr	r1, [r1, #32]
   28f50:	ldr	r6, [r2, #24]
   28f54:	ldr	lr, [sp, #16]
   28f58:	sub	r1, ip, r1
   28f5c:	sub	ip, ip, r6
   28f60:	add	r1, r1, lr
   28f64:	add	ip, ip, r3
   28f68:	str	r1, [r2, #36]	; 0x24
   28f6c:	str	ip, [r2, #28]
   28f70:	mov	r1, r3
   28f74:	mov	r4, r0
   28f78:	bl	10028 <myhtml_queue_add@plt>
   28f7c:	cmp	r0, #0
   28f80:	movne	r3, #69	; 0x45
   28f84:	movne	r0, #0
   28f88:	strne	r3, [r4, #160]	; 0xa0
   28f8c:	moveq	r0, r5
   28f90:	pop	{r4, r5, r6, pc}

00028f94 <myhtml_tokenizer_end_state_comment@@Base>:
   28f94:	mov	r2, r1
   28f98:	push	{r4, r5, r6, lr}
   28f9c:	mov	r5, r3
   28fa0:	ldr	ip, [r0, #192]	; 0xc0
   28fa4:	ldr	r1, [r1, #32]
   28fa8:	ldr	r6, [r2, #24]
   28fac:	ldr	lr, [sp, #16]
   28fb0:	sub	r1, ip, r1
   28fb4:	sub	ip, ip, r6
   28fb8:	add	r1, r1, lr
   28fbc:	add	ip, ip, r3
   28fc0:	str	r1, [r2, #36]	; 0x24
   28fc4:	str	ip, [r2, #28]
   28fc8:	mov	r1, r3
   28fcc:	mov	r4, r0
   28fd0:	bl	10028 <myhtml_queue_add@plt>
   28fd4:	cmp	r0, #0
   28fd8:	movne	r3, #69	; 0x45
   28fdc:	movne	r0, #0
   28fe0:	strne	r3, [r4, #160]	; 0xa0
   28fe4:	moveq	r0, r5
   28fe8:	pop	{r4, r5, r6, pc}

00028fec <myhtml_tokenizer_end_state_comment_end@@Base>:
   28fec:	push	{r4, r5, r6, lr}
   28ff0:	mov	r5, r3
   28ff4:	ldr	ip, [r1, #24]
   28ff8:	ldr	r3, [r0, #192]	; 0xc0
   28ffc:	ldr	r2, [r1, #32]
   29000:	ldr	lr, [sp, #16]
   29004:	sub	ip, r5, ip
   29008:	sub	lr, lr, r2
   2900c:	add	ip, ip, r3
   29010:	add	lr, lr, r3
   29014:	cmp	ip, #2
   29018:	str	lr, [r1, #36]	; 0x24
   2901c:	bhi	2902c <myhtml_tokenizer_end_state_comment_end@@Base+0x40>
   29020:	str	ip, [r1, #28]
   29024:	mov	r0, r5
   29028:	pop	{r4, r5, r6, pc}
   2902c:	sub	ip, ip, #2
   29030:	str	ip, [r1, #28]
   29034:	mov	r2, r1
   29038:	mov	r1, r5
   2903c:	mov	r4, r0
   29040:	bl	10028 <myhtml_queue_add@plt>
   29044:	cmp	r0, #0
   29048:	beq	29024 <myhtml_tokenizer_end_state_comment_end@@Base+0x38>
   2904c:	mov	r3, #69	; 0x45
   29050:	mov	r0, #0
   29054:	str	r3, [r4, #160]	; 0xa0
   29058:	pop	{r4, r5, r6, pc}

0002905c <myhtml_tokenizer_end_state_comment_end_dash@@Base>:
   2905c:	mov	r2, r1
   29060:	push	{r4, r5, r6, lr}
   29064:	mov	r5, r3
   29068:	ldr	ip, [r0, #192]	; 0xc0
   2906c:	ldr	r1, [r1, #32]
   29070:	ldr	r6, [r2, #24]
   29074:	ldr	lr, [sp, #16]
   29078:	sub	r1, ip, r1
   2907c:	sub	ip, ip, r6
   29080:	add	r1, r1, lr
   29084:	add	ip, ip, r3
   29088:	str	r1, [r2, #36]	; 0x24
   2908c:	str	ip, [r2, #28]
   29090:	mov	r1, r3
   29094:	mov	r4, r0
   29098:	bl	10028 <myhtml_queue_add@plt>
   2909c:	cmp	r0, #0
   290a0:	movne	r3, #69	; 0x45
   290a4:	movne	r0, #0
   290a8:	strne	r3, [r4, #160]	; 0xa0
   290ac:	moveq	r0, r5
   290b0:	pop	{r4, r5, r6, pc}

000290b4 <myhtml_tokenizer_end_state_comment_end_bang@@Base>:
   290b4:	mov	r2, r1
   290b8:	push	{r4, r5, r6, lr}
   290bc:	mov	r5, r3
   290c0:	ldr	ip, [r0, #192]	; 0xc0
   290c4:	ldr	r1, [r1, #32]
   290c8:	ldr	r6, [r2, #24]
   290cc:	ldr	lr, [sp, #16]
   290d0:	sub	r1, ip, r1
   290d4:	sub	ip, ip, r6
   290d8:	add	r1, r1, lr
   290dc:	add	ip, ip, r3
   290e0:	str	r1, [r2, #36]	; 0x24
   290e4:	str	ip, [r2, #28]
   290e8:	mov	r1, r3
   290ec:	mov	r4, r0
   290f0:	bl	10028 <myhtml_queue_add@plt>
   290f4:	cmp	r0, #0
   290f8:	movne	r3, #69	; 0x45
   290fc:	movne	r0, #0
   29100:	strne	r3, [r4, #160]	; 0xa0
   29104:	moveq	r0, r5
   29108:	pop	{r4, r5, r6, pc}

0002910c <myhtml_tokenizer_end_state_bogus_comment@@Base>:
   2910c:	push	{r4, r5, r6, lr}
   29110:	mov	r2, r1
   29114:	ldr	lr, [r1, #32]
   29118:	ldr	ip, [sp, #16]
   2911c:	ldr	r1, [r1, #24]
   29120:	mov	r5, r3
   29124:	ldr	r3, [r0, #192]	; 0xc0
   29128:	sub	ip, ip, lr
   2912c:	sub	r1, r5, r1
   29130:	add	r1, r1, r3
   29134:	add	ip, ip, r3
   29138:	str	r1, [r2, #28]
   2913c:	str	ip, [r2, #36]	; 0x24
   29140:	mov	r1, r5
   29144:	mov	r4, r0
   29148:	bl	10028 <myhtml_queue_add@plt>
   2914c:	cmp	r0, #0
   29150:	movne	r3, #69	; 0x45
   29154:	movne	r0, #0
   29158:	strne	r3, [r4, #160]	; 0xa0
   2915c:	moveq	r0, r5
   29160:	pop	{r4, r5, r6, pc}

00029164 <myhtml_tokenizer_end_state_cdata_section@@Base>:
   29164:	push	{r4, r5, r6, lr}
   29168:	mov	r5, r3
   2916c:	ldr	ip, [r1, #24]
   29170:	ldr	r3, [r0, #192]	; 0xc0
   29174:	ldr	r2, [r1, #32]
   29178:	ldr	lr, [sp, #16]
   2917c:	sub	ip, r5, ip
   29180:	add	ip, ip, r3
   29184:	sub	lr, lr, r2
   29188:	add	lr, lr, r3
   2918c:	cmp	ip, #0
   29190:	str	lr, [r1, #36]	; 0x24
   29194:	str	ip, [r1, #28]
   29198:	bne	291a4 <myhtml_tokenizer_end_state_cdata_section@@Base+0x40>
   2919c:	mov	r0, r5
   291a0:	pop	{r4, r5, r6, pc}
   291a4:	mov	r2, r1
   291a8:	mov	r1, r5
   291ac:	mov	r4, r0
   291b0:	bl	10028 <myhtml_queue_add@plt>
   291b4:	cmp	r0, #0
   291b8:	beq	2919c <myhtml_tokenizer_end_state_cdata_section@@Base+0x38>
   291bc:	mov	r3, #69	; 0x45
   291c0:	mov	r0, #0
   291c4:	str	r3, [r4, #160]	; 0xa0
   291c8:	pop	{r4, r5, r6, pc}

000291cc <myhtml_tokenizer_end_state_rcdata@@Base>:
   291cc:	push	{r4, r5, r6, lr}
   291d0:	ldr	ip, [sp, #16]
   291d4:	ldr	r5, [r0, #192]	; 0xc0
   291d8:	ldr	r2, [r1, #32]
   291dc:	ldr	lr, [r1, #24]
   291e0:	add	ip, ip, r5
   291e4:	sub	r2, ip, r2
   291e8:	cmp	ip, lr
   291ec:	mov	r5, r3
   291f0:	str	r2, [r1, #36]	; 0x24
   291f4:	bhi	29200 <myhtml_tokenizer_end_state_rcdata@@Base+0x34>
   291f8:	mov	r0, r5
   291fc:	pop	{r4, r5, r6, pc}
   29200:	ldr	r3, [r1, #48]	; 0x30
   29204:	sub	ip, ip, lr
   29208:	orr	r3, r3, #16
   2920c:	mov	r2, #1
   29210:	str	r2, [r1]
   29214:	str	ip, [r1, #28]
   29218:	str	r3, [r1, #48]	; 0x30
   2921c:	mov	r2, r1
   29220:	mov	r1, #0
   29224:	mov	r4, r0
   29228:	bl	10028 <myhtml_queue_add@plt>
   2922c:	cmp	r0, #0
   29230:	beq	291f8 <myhtml_tokenizer_end_state_rcdata@@Base+0x2c>
   29234:	mov	r3, #69	; 0x45
   29238:	mov	r0, #0
   2923c:	str	r3, [r4, #160]	; 0xa0
   29240:	pop	{r4, r5, r6, pc}

00029244 <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>:
   29244:	push	{r4, r5, r6, lr}
   29248:	sub	sp, sp, #8
   2924c:	ldr	r5, [r0, #192]	; 0xc0
   29250:	ldr	ip, [r1, #32]
   29254:	ldr	r6, [sp, #24]
   29258:	sub	ip, r5, ip
   2925c:	add	ip, ip, r6
   29260:	mov	r6, #16
   29264:	mov	r4, r3
   29268:	str	ip, [r1, #36]	; 0x24
   2926c:	add	r3, r3, r5
   29270:	str	r6, [sp]
   29274:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29278:	mov	r0, r4
   2927c:	add	sp, sp, #8
   29280:	pop	{r4, r5, r6, pc}

00029284 <myhtml_tokenizer_end_state_rcdata_end_tag_open@@Base>:
   29284:	push	{r4, r5, r6, lr}
   29288:	sub	sp, sp, #8
   2928c:	ldr	r5, [r0, #192]	; 0xc0
   29290:	ldr	ip, [r1, #32]
   29294:	ldr	r6, [sp, #24]
   29298:	sub	ip, r5, ip
   2929c:	add	ip, ip, r6
   292a0:	mov	r6, #16
   292a4:	mov	r4, r3
   292a8:	str	ip, [r1, #36]	; 0x24
   292ac:	add	r3, r3, r5
   292b0:	str	r6, [sp]
   292b4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   292b8:	mov	r0, r4
   292bc:	add	sp, sp, #8
   292c0:	pop	{r4, r5, r6, pc}

000292c4 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>:
   292c4:	push	{r4, r5, r6, lr}
   292c8:	sub	sp, sp, #8
   292cc:	ldr	r4, [r1, #32]
   292d0:	ldr	ip, [sp, #24]
   292d4:	ldr	lr, [r0, #192]	; 0xc0
   292d8:	sub	ip, ip, r4
   292dc:	add	ip, ip, lr
   292e0:	mov	r6, #16
   292e4:	mov	r4, r3
   292e8:	str	ip, [r1, #36]	; 0x24
   292ec:	add	r3, lr, r3
   292f0:	str	r6, [sp]
   292f4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   292f8:	mov	r0, r4
   292fc:	add	sp, sp, #8
   29300:	pop	{r4, r5, r6, pc}

00029304 <myhtml_tokenizer_end_state_rawtext@@Base>:
   29304:	push	{r4, r5, r6, lr}
   29308:	sub	sp, sp, #8
   2930c:	ldr	r5, [r0, #192]	; 0xc0
   29310:	ldr	ip, [r1, #32]
   29314:	ldr	r6, [sp, #24]
   29318:	sub	ip, r5, ip
   2931c:	add	ip, ip, r6
   29320:	mov	r6, #32
   29324:	mov	r4, r3
   29328:	str	ip, [r1, #36]	; 0x24
   2932c:	add	r3, r3, r5
   29330:	str	r6, [sp]
   29334:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29338:	mov	r0, r4
   2933c:	add	sp, sp, #8
   29340:	pop	{r4, r5, r6, pc}

00029344 <myhtml_tokenizer_end_state_rawtext_less_than_sign@@Base>:
   29344:	push	{r4, r5, r6, lr}
   29348:	sub	sp, sp, #8
   2934c:	ldr	r5, [r0, #192]	; 0xc0
   29350:	ldr	ip, [r1, #32]
   29354:	ldr	r6, [sp, #24]
   29358:	sub	ip, r5, ip
   2935c:	add	ip, ip, r6
   29360:	mov	r6, #32
   29364:	mov	r4, r3
   29368:	str	ip, [r1, #36]	; 0x24
   2936c:	add	r3, r3, r5
   29370:	str	r6, [sp]
   29374:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29378:	mov	r0, r4
   2937c:	add	sp, sp, #8
   29380:	pop	{r4, r5, r6, pc}

00029384 <myhtml_tokenizer_end_state_rawtext_end_tag_open@@Base>:
   29384:	push	{r4, r5, r6, lr}
   29388:	sub	sp, sp, #8
   2938c:	ldr	r5, [r0, #192]	; 0xc0
   29390:	ldr	ip, [r1, #32]
   29394:	ldr	r6, [sp, #24]
   29398:	sub	ip, r5, ip
   2939c:	add	ip, ip, r6
   293a0:	mov	r6, #32
   293a4:	mov	r4, r3
   293a8:	str	ip, [r1, #36]	; 0x24
   293ac:	add	r3, r3, r5
   293b0:	str	r6, [sp]
   293b4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   293b8:	mov	r0, r4
   293bc:	add	sp, sp, #8
   293c0:	pop	{r4, r5, r6, pc}

000293c4 <myhtml_tokenizer_end_state_rawtext_end_tag_name@@Base>:
   293c4:	push	{r4, r5, r6, lr}
   293c8:	sub	sp, sp, #8
   293cc:	ldr	r5, [r0, #192]	; 0xc0
   293d0:	ldr	ip, [r1, #32]
   293d4:	ldr	r6, [sp, #24]
   293d8:	sub	ip, r5, ip
   293dc:	add	ip, ip, r6
   293e0:	mov	r6, #32
   293e4:	mov	r4, r3
   293e8:	str	ip, [r1, #36]	; 0x24
   293ec:	add	r3, r3, r5
   293f0:	str	r6, [sp]
   293f4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   293f8:	mov	r0, r4
   293fc:	add	sp, sp, #8
   29400:	pop	{r4, r5, r6, pc}

00029404 <myhtml_tokenizer_end_state_plaintext@@Base>:
   29404:	ldr	ip, [sp]
   29408:	ldr	r2, [r1, #32]
   2940c:	ldr	r0, [r0, #192]	; 0xc0
   29410:	sub	r2, ip, r2
   29414:	add	r2, r2, r0
   29418:	str	r2, [r1, #36]	; 0x24
   2941c:	mov	r0, r3
   29420:	bx	lr

00029424 <myhtml_tokenizer_end_state_doctype@@Base>:
   29424:	push	{r4, r5, r6, lr}
   29428:	sub	sp, sp, #8
   2942c:	ldr	r4, [r1, #32]
   29430:	ldr	ip, [sp, #24]
   29434:	ldr	lr, [r0, #192]	; 0xc0
   29438:	sub	ip, ip, r4
   2943c:	add	ip, ip, lr
   29440:	mov	r6, #32
   29444:	mov	r4, r3
   29448:	str	ip, [r1, #36]	; 0x24
   2944c:	add	r3, lr, r3
   29450:	str	r6, [sp]
   29454:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29458:	mov	r0, r4
   2945c:	add	sp, sp, #8
   29460:	pop	{r4, r5, r6, pc}

00029464 <myhtml_tokenizer_end_state_before_doctype_name@@Base>:
   29464:	push	{r4, r5, r6, lr}
   29468:	mov	r2, r1
   2946c:	ldr	lr, [r1, #32]
   29470:	ldr	ip, [r0, #192]	; 0xc0
   29474:	ldr	r1, [sp, #16]
   29478:	sub	ip, ip, lr
   2947c:	mov	r4, r3
   29480:	add	ip, ip, r1
   29484:	mov	r3, #1
   29488:	str	ip, [r2, #36]	; 0x24
   2948c:	mov	r1, r4
   29490:	str	r3, [r0, #176]	; 0xb0
   29494:	mov	r5, r0
   29498:	bl	10028 <myhtml_queue_add@plt>
   2949c:	cmp	r0, #0
   294a0:	movne	r3, #69	; 0x45
   294a4:	movne	r0, #0
   294a8:	strne	r3, [r5, #160]	; 0xa0
   294ac:	moveq	r0, r4
   294b0:	pop	{r4, r5, r6, pc}

000294b4 <myhtml_tokenizer_end_state_doctype_name@@Base>:
   294b4:	mov	r2, r1
   294b8:	push	{r4, r5, r6, lr}
   294bc:	mov	r4, r3
   294c0:	ldr	r1, [r0, #56]	; 0x38
   294c4:	ldr	r6, [r2, #32]
   294c8:	ldr	lr, [sp, #16]
   294cc:	ldr	ip, [r0, #192]	; 0xc0
   294d0:	ldr	r3, [r1, #48]	; 0x30
   294d4:	sub	lr, lr, r6
   294d8:	add	lr, lr, ip
   294dc:	add	ip, ip, r4
   294e0:	sub	ip, ip, r3
   294e4:	str	lr, [r2, #36]	; 0x24
   294e8:	str	ip, [r1, #52]	; 0x34
   294ec:	mov	r1, r4
   294f0:	mov	r5, r0
   294f4:	bl	10028 <myhtml_queue_add@plt>
   294f8:	cmp	r0, #0
   294fc:	movne	r3, #69	; 0x45
   29500:	movne	r0, #0
   29504:	strne	r3, [r5, #160]	; 0xa0
   29508:	moveq	r0, r4
   2950c:	pop	{r4, r5, r6, pc}

00029510 <myhtml_tokenizer_end_state_after_doctype_name@@Base>:
   29510:	push	{r4, r5, r6, lr}
   29514:	mov	r2, r1
   29518:	ldr	lr, [r1, #32]
   2951c:	ldr	ip, [r0, #192]	; 0xc0
   29520:	ldr	r1, [sp, #16]
   29524:	sub	ip, ip, lr
   29528:	add	ip, ip, r1
   2952c:	str	ip, [r2, #36]	; 0x24
   29530:	mov	r1, r3
   29534:	mov	r4, r3
   29538:	mov	r5, r0
   2953c:	bl	10028 <myhtml_queue_add@plt>
   29540:	cmp	r0, #0
   29544:	movne	r3, #69	; 0x45
   29548:	movne	r0, #0
   2954c:	strne	r3, [r5, #160]	; 0xa0
   29550:	moveq	r0, r4
   29554:	pop	{r4, r5, r6, pc}

00029558 <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base>:
   29558:	push	{r4, r5, r6, lr}
   2955c:	mov	r2, r1
   29560:	ldr	lr, [r1, #32]
   29564:	ldr	ip, [r0, #192]	; 0xc0
   29568:	ldr	r1, [sp, #16]
   2956c:	sub	ip, ip, lr
   29570:	add	ip, ip, r1
   29574:	str	ip, [r2, #36]	; 0x24
   29578:	mov	r1, r3
   2957c:	mov	r4, r3
   29580:	mov	r5, r0
   29584:	bl	10028 <myhtml_queue_add@plt>
   29588:	cmp	r0, #0
   2958c:	movne	r3, #69	; 0x45
   29590:	movne	r0, #0
   29594:	strne	r3, [r5, #160]	; 0xa0
   29598:	moveq	r0, r4
   2959c:	pop	{r4, r5, r6, pc}

000295a0 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>:
   295a0:	push	{r4, r5, r6, lr}
   295a4:	mov	r2, r1
   295a8:	ldr	lr, [r1, #32]
   295ac:	ldr	ip, [sp, #16]
   295b0:	ldr	r1, [r0, #192]	; 0xc0
   295b4:	sub	ip, ip, lr
   295b8:	mov	r4, r3
   295bc:	add	ip, ip, r1
   295c0:	mov	r3, #1
   295c4:	str	ip, [r2, #36]	; 0x24
   295c8:	mov	r1, r4
   295cc:	str	r3, [r0, #176]	; 0xb0
   295d0:	mov	r5, r0
   295d4:	bl	10028 <myhtml_queue_add@plt>
   295d8:	cmp	r0, #0
   295dc:	movne	r3, #69	; 0x45
   295e0:	movne	r0, #0
   295e4:	strne	r3, [r5, #160]	; 0xa0
   295e8:	moveq	r0, r4
   295ec:	pop	{r4, r5, r6, pc}

000295f0 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base>:
   295f0:	push	{r4, r5, r6, lr}
   295f4:	mov	r2, r1
   295f8:	ldr	lr, [r0, #56]	; 0x38
   295fc:	ldr	r1, [r0, #192]	; 0xc0
   29600:	mov	r4, r0
   29604:	ldr	r6, [lr, #48]	; 0x30
   29608:	ldr	r0, [sp, #16]
   2960c:	ldr	ip, [r2, #32]
   29610:	cmp	r6, #0
   29614:	cmpne	r0, #0
   29618:	sub	ip, r1, ip
   2961c:	addne	r1, r3, r1
   29620:	subne	r1, r1, r6
   29624:	add	ip, ip, r0
   29628:	mov	r0, #1
   2962c:	str	ip, [r2, #36]	; 0x24
   29630:	str	r0, [r4, #176]	; 0xb0
   29634:	strne	r1, [lr, #52]	; 0x34
   29638:	mov	r0, r4
   2963c:	mov	r1, r3
   29640:	mov	r5, r3
   29644:	bl	10028 <myhtml_queue_add@plt>
   29648:	cmp	r0, #0
   2964c:	movne	r3, #69	; 0x45
   29650:	movne	r0, #0
   29654:	strne	r3, [r4, #160]	; 0xa0
   29658:	moveq	r0, r5
   2965c:	pop	{r4, r5, r6, pc}

00029660 <myhtml_tokenizer_end_state_doctype_public_identifier_single_quoted@@Base>:
   29660:	push	{r4, r5, r6, lr}
   29664:	sub	sp, sp, #8
   29668:	ldr	ip, [r1, #32]
   2966c:	ldr	r5, [sp, #24]
   29670:	ldr	lr, [r0, #192]	; 0xc0
   29674:	sub	ip, r5, ip
   29678:	add	ip, ip, lr
   2967c:	mov	r4, r3
   29680:	str	ip, [r1, #36]	; 0x24
   29684:	str	r5, [sp]
   29688:	add	r3, lr, r3
   2968c:	bl	10c28 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>
   29690:	mov	r0, r4
   29694:	add	sp, sp, #8
   29698:	pop	{r4, r5, r6, pc}

0002969c <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base>:
   2969c:	push	{r4, r5, r6, lr}
   296a0:	mov	r2, r1
   296a4:	ldr	lr, [r1, #32]
   296a8:	ldr	ip, [r0, #192]	; 0xc0
   296ac:	ldr	r1, [sp, #16]
   296b0:	sub	ip, ip, lr
   296b4:	add	ip, ip, r1
   296b8:	str	ip, [r2, #36]	; 0x24
   296bc:	mov	r1, r3
   296c0:	mov	r4, r3
   296c4:	mov	r5, r0
   296c8:	bl	10028 <myhtml_queue_add@plt>
   296cc:	cmp	r0, #0
   296d0:	movne	r3, #69	; 0x45
   296d4:	movne	r0, #0
   296d8:	strne	r3, [r5, #160]	; 0xa0
   296dc:	moveq	r0, r4
   296e0:	pop	{r4, r5, r6, pc}

000296e4 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>:
   296e4:	push	{r4, r5, r6, lr}
   296e8:	mov	r4, r0
   296ec:	ldr	lr, [r0, #56]	; 0x38
   296f0:	ldr	ip, [r1, #32]
   296f4:	ldr	r0, [sp, #16]
   296f8:	ldr	r6, [lr, #48]	; 0x30
   296fc:	mov	r2, r1
   29700:	ldr	r1, [r4, #192]	; 0xc0
   29704:	cmp	r6, #0
   29708:	cmpne	r0, #0
   2970c:	sub	ip, r0, ip
   29710:	add	ip, ip, r1
   29714:	addne	r1, r1, r3
   29718:	subne	r1, r1, r6
   2971c:	mov	r0, #1
   29720:	str	ip, [r2, #36]	; 0x24
   29724:	str	r0, [r4, #176]	; 0xb0
   29728:	strne	r1, [lr, #52]	; 0x34
   2972c:	mov	r0, r4
   29730:	mov	r1, r3
   29734:	mov	r5, r3
   29738:	bl	10028 <myhtml_queue_add@plt>
   2973c:	cmp	r0, #0
   29740:	movne	r3, #69	; 0x45
   29744:	movne	r0, #0
   29748:	strne	r3, [r4, #160]	; 0xa0
   2974c:	moveq	r0, r5
   29750:	pop	{r4, r5, r6, pc}

00029754 <myhtml_tokenizer_end_state_doctype_system_identifier_single_quoted@@Base>:
   29754:	push	{r4, r5, r6, lr}
   29758:	sub	sp, sp, #8
   2975c:	ldr	ip, [r1, #32]
   29760:	ldr	r5, [sp, #24]
   29764:	ldr	lr, [r0, #192]	; 0xc0
   29768:	sub	ip, r5, ip
   2976c:	add	ip, ip, lr
   29770:	mov	r4, r3
   29774:	str	ip, [r1, #36]	; 0x24
   29778:	str	r5, [sp]
   2977c:	add	r3, lr, r3
   29780:	bl	10e08 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>
   29784:	mov	r0, r4
   29788:	add	sp, sp, #8
   2978c:	pop	{r4, r5, r6, pc}

00029790 <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base>:
   29790:	push	{r4, r5, r6, lr}
   29794:	mov	r2, r1
   29798:	ldr	lr, [r1, #32]
   2979c:	ldr	ip, [r0, #192]	; 0xc0
   297a0:	ldr	r1, [sp, #16]
   297a4:	sub	ip, ip, lr
   297a8:	add	ip, ip, r1
   297ac:	str	ip, [r2, #36]	; 0x24
   297b0:	mov	r1, r3
   297b4:	mov	r4, r3
   297b8:	mov	r5, r0
   297bc:	bl	10028 <myhtml_queue_add@plt>
   297c0:	cmp	r0, #0
   297c4:	movne	r3, #69	; 0x45
   297c8:	movne	r0, #0
   297cc:	strne	r3, [r5, #160]	; 0xa0
   297d0:	moveq	r0, r4
   297d4:	pop	{r4, r5, r6, pc}

000297d8 <myhtml_tokenizer_end_state_bogus_doctype@@Base>:
   297d8:	push	{r4, r5, r6, lr}
   297dc:	mov	r2, r1
   297e0:	ldr	lr, [r1, #32]
   297e4:	ldr	ip, [sp, #16]
   297e8:	ldr	r1, [r0, #192]	; 0xc0
   297ec:	sub	ip, ip, lr
   297f0:	add	ip, ip, r1
   297f4:	str	ip, [r2, #36]	; 0x24
   297f8:	mov	r1, r3
   297fc:	mov	r4, r3
   29800:	mov	r5, r0
   29804:	bl	10028 <myhtml_queue_add@plt>
   29808:	cmp	r0, #0
   2980c:	movne	r3, #69	; 0x45
   29810:	movne	r0, #0
   29814:	strne	r3, [r5, #160]	; 0xa0
   29818:	moveq	r0, r4
   2981c:	pop	{r4, r5, r6, pc}

00029820 <myhtml_tokenizer_end_state_script_data@@Base>:
   29820:	push	{r4, r5, r6, lr}
   29824:	sub	sp, sp, #8
   29828:	ldr	r5, [r0, #192]	; 0xc0
   2982c:	ldr	ip, [r1, #32]
   29830:	ldr	r6, [sp, #24]
   29834:	sub	ip, r5, ip
   29838:	add	ip, ip, r6
   2983c:	mov	r6, #64	; 0x40
   29840:	mov	r4, r3
   29844:	str	ip, [r1, #36]	; 0x24
   29848:	add	r3, r3, r5
   2984c:	str	r6, [sp]
   29850:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29854:	mov	r0, r4
   29858:	add	sp, sp, #8
   2985c:	pop	{r4, r5, r6, pc}

00029860 <myhtml_tokenizer_end_state_script_data_less_than_sign@@Base>:
   29860:	push	{r4, r5, r6, lr}
   29864:	sub	sp, sp, #8
   29868:	ldr	r5, [r0, #192]	; 0xc0
   2986c:	ldr	ip, [r1, #32]
   29870:	ldr	r6, [sp, #24]
   29874:	sub	ip, r5, ip
   29878:	add	ip, ip, r6
   2987c:	mov	r6, #64	; 0x40
   29880:	mov	r4, r3
   29884:	str	ip, [r1, #36]	; 0x24
   29888:	add	r3, r3, r5
   2988c:	str	r6, [sp]
   29890:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29894:	mov	r0, r4
   29898:	add	sp, sp, #8
   2989c:	pop	{r4, r5, r6, pc}

000298a0 <myhtml_tokenizer_end_state_script_data_end_tag_open@@Base>:
   298a0:	push	{r4, r5, r6, lr}
   298a4:	sub	sp, sp, #8
   298a8:	ldr	r5, [r0, #192]	; 0xc0
   298ac:	ldr	ip, [r1, #32]
   298b0:	ldr	r6, [sp, #24]
   298b4:	sub	ip, r5, ip
   298b8:	add	ip, ip, r6
   298bc:	mov	r6, #64	; 0x40
   298c0:	mov	r4, r3
   298c4:	str	ip, [r1, #36]	; 0x24
   298c8:	add	r3, r3, r5
   298cc:	str	r6, [sp]
   298d0:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   298d4:	mov	r0, r4
   298d8:	add	sp, sp, #8
   298dc:	pop	{r4, r5, r6, pc}

000298e0 <myhtml_tokenizer_end_state_script_data_end_tag_name@@Base>:
   298e0:	push	{r4, r5, r6, lr}
   298e4:	sub	sp, sp, #8
   298e8:	ldr	r5, [r0, #192]	; 0xc0
   298ec:	ldr	ip, [r1, #32]
   298f0:	ldr	r6, [sp, #24]
   298f4:	sub	ip, r5, ip
   298f8:	add	ip, ip, r6
   298fc:	mov	r6, #64	; 0x40
   29900:	mov	r4, r3
   29904:	str	ip, [r1, #36]	; 0x24
   29908:	add	r3, r3, r5
   2990c:	str	r6, [sp]
   29910:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29914:	mov	r0, r4
   29918:	add	sp, sp, #8
   2991c:	pop	{r4, r5, r6, pc}

00029920 <myhtml_tokenizer_end_state_script_data_escape_start@@Base>:
   29920:	push	{r4, r5, r6, lr}
   29924:	sub	sp, sp, #8
   29928:	ldr	r5, [r0, #192]	; 0xc0
   2992c:	ldr	ip, [r1, #32]
   29930:	ldr	r6, [sp, #24]
   29934:	sub	ip, r5, ip
   29938:	add	ip, ip, r6
   2993c:	mov	r6, #64	; 0x40
   29940:	mov	r4, r3
   29944:	str	ip, [r1, #36]	; 0x24
   29948:	add	r3, r3, r5
   2994c:	str	r6, [sp]
   29950:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29954:	mov	r0, r4
   29958:	add	sp, sp, #8
   2995c:	pop	{r4, r5, r6, pc}

00029960 <myhtml_tokenizer_end_state_script_data_escape_start_dash@@Base>:
   29960:	push	{r4, r5, r6, lr}
   29964:	sub	sp, sp, #8
   29968:	ldr	r5, [r0, #192]	; 0xc0
   2996c:	ldr	ip, [r1, #32]
   29970:	ldr	r6, [sp, #24]
   29974:	sub	ip, r5, ip
   29978:	add	ip, ip, r6
   2997c:	mov	r6, #64	; 0x40
   29980:	mov	r4, r3
   29984:	str	ip, [r1, #36]	; 0x24
   29988:	add	r3, r3, r5
   2998c:	str	r6, [sp]
   29990:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29994:	mov	r0, r4
   29998:	add	sp, sp, #8
   2999c:	pop	{r4, r5, r6, pc}

000299a0 <myhtml_tokenizer_end_state_script_data_escaped@@Base>:
   299a0:	push	{r4, r5, r6, lr}
   299a4:	sub	sp, sp, #8
   299a8:	ldr	r5, [r0, #192]	; 0xc0
   299ac:	ldr	ip, [r1, #32]
   299b0:	ldr	r6, [sp, #24]
   299b4:	sub	ip, r5, ip
   299b8:	add	ip, ip, r6
   299bc:	mov	r6, #64	; 0x40
   299c0:	mov	r4, r3
   299c4:	str	ip, [r1, #36]	; 0x24
   299c8:	add	r3, r3, r5
   299cc:	str	r6, [sp]
   299d0:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   299d4:	mov	r0, r4
   299d8:	add	sp, sp, #8
   299dc:	pop	{r4, r5, r6, pc}

000299e0 <myhtml_tokenizer_end_state_script_data_escaped_dash@@Base>:
   299e0:	push	{r4, r5, r6, lr}
   299e4:	sub	sp, sp, #8
   299e8:	ldr	r5, [r0, #192]	; 0xc0
   299ec:	ldr	ip, [r1, #32]
   299f0:	ldr	r6, [sp, #24]
   299f4:	sub	ip, r5, ip
   299f8:	add	ip, ip, r6
   299fc:	mov	r6, #64	; 0x40
   29a00:	mov	r4, r3
   29a04:	str	ip, [r1, #36]	; 0x24
   29a08:	add	r3, r3, r5
   29a0c:	str	r6, [sp]
   29a10:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29a14:	mov	r0, r4
   29a18:	add	sp, sp, #8
   29a1c:	pop	{r4, r5, r6, pc}

00029a20 <myhtml_tokenizer_end_state_script_data_escaped_dash_dash@@Base>:
   29a20:	push	{r4, r5, r6, lr}
   29a24:	sub	sp, sp, #8
   29a28:	ldr	r5, [r0, #192]	; 0xc0
   29a2c:	ldr	ip, [r1, #32]
   29a30:	ldr	r6, [sp, #24]
   29a34:	sub	ip, r5, ip
   29a38:	add	ip, ip, r6
   29a3c:	mov	r6, #64	; 0x40
   29a40:	mov	r4, r3
   29a44:	str	ip, [r1, #36]	; 0x24
   29a48:	add	r3, r3, r5
   29a4c:	str	r6, [sp]
   29a50:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29a54:	mov	r0, r4
   29a58:	add	sp, sp, #8
   29a5c:	pop	{r4, r5, r6, pc}

00029a60 <myhtml_tokenizer_end_state_script_data_escaped_less_than_sign@@Base>:
   29a60:	push	{r4, r5, r6, lr}
   29a64:	sub	sp, sp, #8
   29a68:	ldr	r5, [r0, #192]	; 0xc0
   29a6c:	ldr	ip, [r1, #32]
   29a70:	ldr	r6, [sp, #24]
   29a74:	sub	ip, r5, ip
   29a78:	add	ip, ip, r6
   29a7c:	mov	r6, #64	; 0x40
   29a80:	mov	r4, r3
   29a84:	str	ip, [r1, #36]	; 0x24
   29a88:	add	r3, r3, r5
   29a8c:	str	r6, [sp]
   29a90:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29a94:	mov	r0, r4
   29a98:	add	sp, sp, #8
   29a9c:	pop	{r4, r5, r6, pc}

00029aa0 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_open@@Base>:
   29aa0:	push	{r4, r5, r6, lr}
   29aa4:	sub	sp, sp, #8
   29aa8:	ldr	r5, [r0, #192]	; 0xc0
   29aac:	ldr	ip, [r1, #32]
   29ab0:	ldr	r6, [sp, #24]
   29ab4:	sub	ip, r5, ip
   29ab8:	add	ip, ip, r6
   29abc:	mov	r6, #64	; 0x40
   29ac0:	mov	r4, r3
   29ac4:	str	ip, [r1, #36]	; 0x24
   29ac8:	add	r3, r3, r5
   29acc:	str	r6, [sp]
   29ad0:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29ad4:	mov	r0, r4
   29ad8:	add	sp, sp, #8
   29adc:	pop	{r4, r5, r6, pc}

00029ae0 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_name@@Base>:
   29ae0:	push	{r4, r5, r6, lr}
   29ae4:	sub	sp, sp, #8
   29ae8:	ldr	r5, [r0, #192]	; 0xc0
   29aec:	ldr	ip, [r1, #32]
   29af0:	ldr	r6, [sp, #24]
   29af4:	sub	ip, r5, ip
   29af8:	add	ip, ip, r6
   29afc:	mov	r6, #64	; 0x40
   29b00:	mov	r4, r3
   29b04:	str	ip, [r1, #36]	; 0x24
   29b08:	add	r3, r3, r5
   29b0c:	str	r6, [sp]
   29b10:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29b14:	mov	r0, r4
   29b18:	add	sp, sp, #8
   29b1c:	pop	{r4, r5, r6, pc}

00029b20 <myhtml_tokenizer_end_state_script_data_double_escape_start@@Base>:
   29b20:	push	{r4, r5, r6, lr}
   29b24:	sub	sp, sp, #8
   29b28:	ldr	r5, [r0, #192]	; 0xc0
   29b2c:	ldr	ip, [r1, #32]
   29b30:	ldr	r6, [sp, #24]
   29b34:	sub	ip, r5, ip
   29b38:	add	ip, ip, r6
   29b3c:	mov	r6, #64	; 0x40
   29b40:	mov	r4, r3
   29b44:	str	ip, [r1, #36]	; 0x24
   29b48:	add	r3, r3, r5
   29b4c:	str	r6, [sp]
   29b50:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29b54:	mov	r0, r4
   29b58:	add	sp, sp, #8
   29b5c:	pop	{r4, r5, r6, pc}

00029b60 <myhtml_tokenizer_end_state_script_data_double_escaped@@Base>:
   29b60:	push	{r4, r5, r6, lr}
   29b64:	sub	sp, sp, #8
   29b68:	ldr	r5, [r0, #192]	; 0xc0
   29b6c:	ldr	ip, [r1, #32]
   29b70:	ldr	r6, [sp, #24]
   29b74:	sub	ip, r5, ip
   29b78:	add	ip, ip, r6
   29b7c:	mov	r6, #64	; 0x40
   29b80:	mov	r4, r3
   29b84:	str	ip, [r1, #36]	; 0x24
   29b88:	add	r3, r3, r5
   29b8c:	str	r6, [sp]
   29b90:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29b94:	mov	r0, r4
   29b98:	add	sp, sp, #8
   29b9c:	pop	{r4, r5, r6, pc}

00029ba0 <myhtml_tokenizer_end_state_script_data_double_escaped_dash@@Base>:
   29ba0:	push	{r4, r5, r6, lr}
   29ba4:	sub	sp, sp, #8
   29ba8:	ldr	r5, [r0, #192]	; 0xc0
   29bac:	ldr	ip, [r1, #32]
   29bb0:	ldr	r6, [sp, #24]
   29bb4:	sub	ip, r5, ip
   29bb8:	add	ip, ip, r6
   29bbc:	mov	r6, #64	; 0x40
   29bc0:	mov	r4, r3
   29bc4:	str	ip, [r1, #36]	; 0x24
   29bc8:	add	r3, r3, r5
   29bcc:	str	r6, [sp]
   29bd0:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29bd4:	mov	r0, r4
   29bd8:	add	sp, sp, #8
   29bdc:	pop	{r4, r5, r6, pc}

00029be0 <myhtml_tokenizer_end_state_script_data_double_escaped_dash_dash@@Base>:
   29be0:	push	{r4, r5, r6, lr}
   29be4:	sub	sp, sp, #8
   29be8:	ldr	r5, [r0, #192]	; 0xc0
   29bec:	ldr	ip, [r1, #32]
   29bf0:	ldr	r6, [sp, #24]
   29bf4:	sub	ip, r5, ip
   29bf8:	add	ip, ip, r6
   29bfc:	mov	r6, #64	; 0x40
   29c00:	mov	r4, r3
   29c04:	str	ip, [r1, #36]	; 0x24
   29c08:	add	r3, r3, r5
   29c0c:	str	r6, [sp]
   29c10:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29c14:	mov	r0, r4
   29c18:	add	sp, sp, #8
   29c1c:	pop	{r4, r5, r6, pc}

00029c20 <myhtml_tokenizer_end_state_script_data_double_escaped_less_than_sign@@Base>:
   29c20:	push	{r4, r5, r6, lr}
   29c24:	sub	sp, sp, #8
   29c28:	ldr	r5, [r0, #192]	; 0xc0
   29c2c:	ldr	ip, [r1, #32]
   29c30:	ldr	r6, [sp, #24]
   29c34:	sub	ip, r5, ip
   29c38:	add	ip, ip, r6
   29c3c:	mov	r6, #64	; 0x40
   29c40:	mov	r4, r3
   29c44:	str	ip, [r1, #36]	; 0x24
   29c48:	add	r3, r3, r5
   29c4c:	str	r6, [sp]
   29c50:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29c54:	mov	r0, r4
   29c58:	add	sp, sp, #8
   29c5c:	pop	{r4, r5, r6, pc}

00029c60 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>:
   29c60:	push	{r4, r5, r6, lr}
   29c64:	sub	sp, sp, #8
   29c68:	ldr	r4, [r1, #32]
   29c6c:	ldr	ip, [sp, #24]
   29c70:	ldr	lr, [r0, #192]	; 0xc0
   29c74:	sub	ip, ip, r4
   29c78:	add	ip, ip, lr
   29c7c:	mov	r6, #64	; 0x40
   29c80:	mov	r4, r3
   29c84:	str	ip, [r1, #36]	; 0x24
   29c88:	add	r3, lr, r3
   29c8c:	str	r6, [sp]
   29c90:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29c94:	mov	r0, r4
   29c98:	add	sp, sp, #8
   29c9c:	pop	{r4, r5, r6, pc}

00029ca0 <myhtml_tokenizer_end_state_parse_error_stop@@Base>:
   29ca0:	ldr	r0, [sp]
   29ca4:	bx	lr

00029ca8 <myhtml_tokenizer_state_script_data@@Base>:
   29ca8:	push	{lr}		; (str lr, [sp, #-4]!)
   29cac:	ldr	lr, [sp, #4]
   29cb0:	cmp	r3, lr
   29cb4:	bcs	29ce4 <myhtml_tokenizer_state_script_data@@Base+0x3c>
   29cb8:	ldrb	ip, [r2, r3]
   29cbc:	add	r2, r2, r3
   29cc0:	cmp	ip, #60	; 0x3c
   29cc4:	bne	29cd8 <myhtml_tokenizer_state_script_data@@Base+0x30>
   29cc8:	b	29cec <myhtml_tokenizer_state_script_data@@Base+0x44>
   29ccc:	ldrb	ip, [r2, #1]!
   29cd0:	cmp	ip, #60	; 0x3c
   29cd4:	beq	29cec <myhtml_tokenizer_state_script_data@@Base+0x44>
   29cd8:	add	r3, r3, #1
   29cdc:	cmp	lr, r3
   29ce0:	bne	29ccc <myhtml_tokenizer_state_script_data@@Base+0x24>
   29ce4:	mov	r0, r3
   29ce8:	pop	{pc}		; (ldr pc, [sp], #4)
   29cec:	ldr	r2, [r0, #192]	; 0xc0
   29cf0:	mov	ip, #16
   29cf4:	add	r2, r2, r3
   29cf8:	add	r3, r3, #1
   29cfc:	str	r2, [r1, #32]
   29d00:	str	ip, [r0, #160]	; 0xa0
   29d04:	mov	r0, r3
   29d08:	pop	{pc}		; (ldr pc, [sp], #4)

00029d0c <myhtml_tokenizer_state_script_data_less_than_sign@@Base>:
   29d0c:	ldrb	r2, [r2, r3]
   29d10:	cmp	r2, #47	; 0x2f
   29d14:	moveq	r2, #17
   29d18:	addeq	r3, r3, #1
   29d1c:	streq	r2, [r0, #160]	; 0xa0
   29d20:	beq	29d38 <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x2c>
   29d24:	cmp	r2, #33	; 0x21
   29d28:	addeq	r3, r3, #1
   29d2c:	moveq	r2, #19
   29d30:	movne	r2, #5
   29d34:	str	r2, [r0, #160]	; 0xa0
   29d38:	mov	r0, r3
   29d3c:	bx	lr

00029d40 <myhtml_tokenizer_state_script_data_escape_start@@Base>:
   29d40:	ldrb	r2, [r2, r3]
   29d44:	cmp	r2, #45	; 0x2d
   29d48:	addeq	r3, r3, #1
   29d4c:	moveq	r2, #20
   29d50:	movne	r2, #5
   29d54:	str	r2, [r0, #160]	; 0xa0
   29d58:	mov	r0, r3
   29d5c:	bx	lr

00029d60 <myhtml_tokenizer_state_script_data_escape_start_dash@@Base>:
   29d60:	ldrb	r2, [r2, r3]
   29d64:	cmp	r2, #45	; 0x2d
   29d68:	addeq	r3, r3, #1
   29d6c:	moveq	r2, #23
   29d70:	movne	r2, #5
   29d74:	str	r2, [r0, #160]	; 0xa0
   29d78:	mov	r0, r3
   29d7c:	bx	lr

00029d80 <myhtml_tokenizer_state_script_data_end_tag_open@@Base>:
   29d80:	ldrb	r2, [r2, r3]
   29d84:	bic	r2, r2, #32
   29d88:	sub	r2, r2, #65	; 0x41
   29d8c:	cmp	r2, #25
   29d90:	movls	ip, #18
   29d94:	ldrls	r2, [r0, #192]	; 0xc0
   29d98:	movhi	r2, #5
   29d9c:	addls	r2, r2, r3
   29da0:	strls	r2, [r1, #12]
   29da4:	strhi	r2, [r0, #160]	; 0xa0
   29da8:	strls	ip, [r0, #160]	; 0xa0
   29dac:	mov	r0, r3
   29db0:	bx	lr

00029db4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base>:
   29db4:	push	{r4, r5, r6, r7, r8, r9, lr}
   29db8:	sub	sp, sp, #12
   29dbc:	mov	r4, r3
   29dc0:	ldr	ip, [sp, #40]	; 0x28
   29dc4:	cmp	r3, ip
   29dc8:	bcs	29e80 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xcc>
   29dcc:	ldrb	r3, [r2, r3]
   29dd0:	mov	r7, r1
   29dd4:	mov	r5, r2
   29dd8:	add	r1, r2, r4
   29ddc:	sub	r2, r3, #9
   29de0:	mov	r6, r0
   29de4:	uxtb	r2, r2
   29de8:	cmp	r2, #23
   29dec:	bhi	29e8c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xd8>
   29df0:	ldr	r0, [pc, #652]	; 2a084 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2d0>
   29df4:	mvn	r2, r0, lsr r2
   29df8:	tst	r2, #1
   29dfc:	beq	29e5c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xa8>
   29e00:	cmp	r3, #62	; 0x3e
   29e04:	ldrne	r0, [pc, #632]	; 2a084 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2d0>
   29e08:	bne	29e20 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x6c>
   29e0c:	b	29f64 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1b0>
   29e10:	cmp	r3, #47	; 0x2f
   29e14:	beq	29e94 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xe0>
   29e18:	cmp	r3, #62	; 0x3e
   29e1c:	beq	29f64 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1b0>
   29e20:	bic	r3, r3, #32
   29e24:	sub	r3, r3, #65	; 0x41
   29e28:	cmp	r3, #25
   29e2c:	bhi	2a028 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x274>
   29e30:	add	r4, r4, #1
   29e34:	cmp	ip, r4
   29e38:	beq	2a03c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x288>
   29e3c:	ldrb	r3, [r1, #1]!
   29e40:	sub	r2, r3, #9
   29e44:	uxtb	r2, r2
   29e48:	cmp	r2, #23
   29e4c:	mvn	r2, r0, lsr r2
   29e50:	bhi	29e10 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x5c>
   29e54:	tst	r2, #1
   29e58:	bne	29e18 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x64>
   29e5c:	ldr	r9, [r7, #12]
   29e60:	ldr	r8, [r6, #192]	; 0xc0
   29e64:	sub	r8, r8, r9
   29e68:	add	r8, r8, r4
   29e6c:	cmp	r8, #6
   29e70:	beq	29f24 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x170>
   29e74:	add	r4, r4, #1
   29e78:	mov	r3, #5
   29e7c:	str	r3, [r6, #160]	; 0xa0
   29e80:	mov	r0, r4
   29e84:	add	sp, sp, #12
   29e88:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29e8c:	cmp	r3, #47	; 0x2f
   29e90:	bne	29e00 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x4c>
   29e94:	ldr	r9, [r7, #12]
   29e98:	ldr	r8, [r6, #192]	; 0xc0
   29e9c:	sub	r8, r8, r9
   29ea0:	add	r8, r8, r4
   29ea4:	cmp	r8, #6
   29ea8:	bne	29e74 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xc0>
   29eac:	mov	r2, r8
   29eb0:	mov	r1, r9
   29eb4:	mov	r0, r6
   29eb8:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   29ebc:	ldr	r1, [pc, #452]	; 2a088 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2d4>
   29ec0:	mov	r2, r8
   29ec4:	add	r1, pc, r1
   29ec8:	bl	102a4 <mycore_strncasecmp@plt>
   29ecc:	cmp	r0, #0
   29ed0:	bne	29f4c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x198>
   29ed4:	ldr	r3, [r6, #192]	; 0xc0
   29ed8:	mov	r0, #64	; 0x40
   29edc:	sub	r3, r3, #8
   29ee0:	str	r0, [sp]
   29ee4:	mov	r2, r5
   29ee8:	mov	r1, r7
   29eec:	add	r3, r3, r4
   29ef0:	mov	r0, r6
   29ef4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29ef8:	cmp	r0, #0
   29efc:	beq	2a018 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x264>
   29f00:	mov	r1, #112	; 0x70
   29f04:	mov	r2, #3
   29f08:	mov	r3, #33	; 0x21
   29f0c:	str	r9, [r0, #24]
   29f10:	str	r8, [r0, #28]
   29f14:	str	r1, [r0]
   29f18:	str	r2, [r0, #48]	; 0x30
   29f1c:	str	r3, [r6, #160]	; 0xa0
   29f20:	b	29f54 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1a0>
   29f24:	mov	r2, r8
   29f28:	mov	r1, r9
   29f2c:	mov	r0, r6
   29f30:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   29f34:	ldr	r1, [pc, #336]	; 2a08c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2d8>
   29f38:	mov	r2, r8
   29f3c:	add	r1, pc, r1
   29f40:	bl	102a4 <mycore_strncasecmp@plt>
   29f44:	cmp	r0, #0
   29f48:	beq	2a04c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x298>
   29f4c:	mov	r3, #5
   29f50:	str	r3, [r6, #160]	; 0xa0
   29f54:	add	r4, r4, #1
   29f58:	mov	r0, r4
   29f5c:	add	sp, sp, #12
   29f60:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29f64:	ldr	r9, [r7, #12]
   29f68:	ldr	r8, [r6, #192]	; 0xc0
   29f6c:	sub	r8, r8, r9
   29f70:	add	r8, r8, r4
   29f74:	cmp	r8, #6
   29f78:	bne	29e74 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xc0>
   29f7c:	mov	r2, r8
   29f80:	mov	r1, r9
   29f84:	mov	r0, r6
   29f88:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   29f8c:	ldr	r1, [pc, #252]	; 2a090 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2dc>
   29f90:	mov	r2, r8
   29f94:	add	r1, pc, r1
   29f98:	bl	102a4 <mycore_strncasecmp@plt>
   29f9c:	cmp	r0, #0
   29fa0:	bne	29e74 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xc0>
   29fa4:	ldr	r3, [r6, #192]	; 0xc0
   29fa8:	mov	r0, #64	; 0x40
   29fac:	sub	r3, r3, #8
   29fb0:	mov	r2, r5
   29fb4:	str	r0, [sp]
   29fb8:	mov	r1, r7
   29fbc:	add	r3, r3, r4
   29fc0:	mov	r0, r6
   29fc4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29fc8:	subs	r2, r0, #0
   29fcc:	beq	2a018 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x264>
   29fd0:	ldr	r3, [r6, #192]	; 0xc0
   29fd4:	ldr	r1, [r2, #32]
   29fd8:	add	r4, r4, #1
   29fdc:	add	r3, r4, r3
   29fe0:	sub	r3, r3, r1
   29fe4:	mov	ip, #112	; 0x70
   29fe8:	mov	r0, #1
   29fec:	str	r0, [r2, #48]	; 0x30
   29ff0:	str	r9, [r2, #24]
   29ff4:	str	r8, [r2, #28]
   29ff8:	str	r3, [r2, #36]	; 0x24
   29ffc:	mov	r1, r4
   2a000:	str	ip, [r2]
   2a004:	mov	r0, r6
   2a008:	bl	10028 <myhtml_queue_add@plt>
   2a00c:	cmp	r0, #0
   2a010:	streq	r0, [r6, #160]	; 0xa0
   2a014:	beq	29e80 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xcc>
   2a018:	mov	r3, #69	; 0x45
   2a01c:	str	r3, [r6, #160]	; 0xa0
   2a020:	mov	r4, #0
   2a024:	b	29e80 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xcc>
   2a028:	mov	r3, #5
   2a02c:	mov	r0, r4
   2a030:	str	r3, [r6, #160]	; 0xa0
   2a034:	add	sp, sp, #12
   2a038:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2a03c:	mov	r4, ip
   2a040:	mov	r0, r4
   2a044:	add	sp, sp, #12
   2a048:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2a04c:	ldr	r3, [r6, #192]	; 0xc0
   2a050:	mov	r0, #64	; 0x40
   2a054:	sub	r3, r3, #8
   2a058:	mov	r2, r5
   2a05c:	mov	r1, r7
   2a060:	str	r0, [sp]
   2a064:	add	r3, r3, r4
   2a068:	mov	r0, r6
   2a06c:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a070:	cmp	r0, #0
   2a074:	movne	r1, #112	; 0x70
   2a078:	movne	r2, #1
   2a07c:	bne	29f08 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x154>
   2a080:	b	2a018 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x264>
   2a084:	addeq	r0, r0, fp, lsl r0
   2a088:	andeq	r2, sp, r8, asr r3
   2a08c:	andeq	r2, sp, r0, ror #5
   2a090:	andeq	r2, sp, r8, lsl #5

0002a094 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base>:
   2a094:	ldrb	r2, [r2, r3]
   2a098:	cmp	r2, #45	; 0x2d
   2a09c:	beq	2a0c0 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x2c>
   2a0a0:	cmp	r2, #60	; 0x3c
   2a0a4:	moveq	r2, #24
   2a0a8:	streq	r2, [r0, #160]	; 0xa0
   2a0ac:	beq	2a0c0 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x2c>
   2a0b0:	cmp	r2, #62	; 0x3e
   2a0b4:	moveq	r2, #5
   2a0b8:	movne	r2, #21
   2a0bc:	str	r2, [r0, #160]	; 0xa0
   2a0c0:	add	r0, r3, #1
   2a0c4:	bx	lr

0002a0c8 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base>:
   2a0c8:	ldrb	r2, [r2, r3]
   2a0cc:	cmp	r2, #47	; 0x2f
   2a0d0:	moveq	r2, #25
   2a0d4:	addeq	r3, r3, #1
   2a0d8:	streq	r2, [r0, #160]	; 0xa0
   2a0dc:	beq	2a108 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x40>
   2a0e0:	bic	r2, r2, #32
   2a0e4:	sub	r2, r2, #65	; 0x41
   2a0e8:	cmp	r2, #25
   2a0ec:	movls	ip, #27
   2a0f0:	ldrls	r2, [r0, #192]	; 0xc0
   2a0f4:	movhi	r2, #21
   2a0f8:	addls	r2, r2, r3
   2a0fc:	strls	r2, [r1, #12]
   2a100:	strhi	r2, [r0, #160]	; 0xa0
   2a104:	strls	ip, [r0, #160]	; 0xa0
   2a108:	mov	r0, r3
   2a10c:	bx	lr

0002a110 <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base>:
   2a110:	ldrb	r2, [r2, r3]
   2a114:	bic	r2, r2, #32
   2a118:	sub	r2, r2, #65	; 0x41
   2a11c:	cmp	r2, #25
   2a120:	movls	ip, #26
   2a124:	ldrls	r2, [r0, #192]	; 0xc0
   2a128:	movhi	r2, #21
   2a12c:	addls	r2, r2, r3
   2a130:	strls	r2, [r1, #12]
   2a134:	strhi	r2, [r0, #160]	; 0xa0
   2a138:	strls	ip, [r0, #160]	; 0xa0
   2a13c:	mov	r0, r3
   2a140:	bx	lr

0002a144 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base>:
   2a144:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a148:	sub	sp, sp, #8
   2a14c:	mov	r4, r3
   2a150:	ldr	ip, [sp, #40]	; 0x28
   2a154:	cmp	r3, ip
   2a158:	bcs	2a210 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xcc>
   2a15c:	ldrb	r3, [r2, r3]
   2a160:	mov	r7, r1
   2a164:	mov	r5, r2
   2a168:	add	r1, r2, r4
   2a16c:	sub	r2, r3, #9
   2a170:	mov	r6, r0
   2a174:	uxtb	r2, r2
   2a178:	cmp	r2, #23
   2a17c:	bhi	2a21c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xd8>
   2a180:	ldr	r0, [pc, #656]	; 2a418 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2d4>
   2a184:	mvn	r2, r0, lsr r2
   2a188:	tst	r2, #1
   2a18c:	beq	2a1ec <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xa8>
   2a190:	cmp	r3, #62	; 0x3e
   2a194:	ldrne	r0, [pc, #636]	; 2a418 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2d4>
   2a198:	bne	2a1b0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x6c>
   2a19c:	b	2a2f4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1b0>
   2a1a0:	cmp	r3, #47	; 0x2f
   2a1a4:	beq	2a224 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xe0>
   2a1a8:	cmp	r3, #62	; 0x3e
   2a1ac:	beq	2a2f4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1b0>
   2a1b0:	bic	r3, r3, #32
   2a1b4:	sub	r3, r3, #65	; 0x41
   2a1b8:	cmp	r3, #25
   2a1bc:	bhi	2a3bc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x278>
   2a1c0:	add	r4, r4, #1
   2a1c4:	cmp	ip, r4
   2a1c8:	beq	2a3d0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x28c>
   2a1cc:	ldrb	r3, [r1, #1]!
   2a1d0:	sub	r2, r3, #9
   2a1d4:	uxtb	r2, r2
   2a1d8:	cmp	r2, #23
   2a1dc:	mvn	r2, r0, lsr r2
   2a1e0:	bhi	2a1a0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x5c>
   2a1e4:	tst	r2, #1
   2a1e8:	bne	2a1a8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x64>
   2a1ec:	ldr	r9, [r7, #12]
   2a1f0:	ldr	r8, [r6, #192]	; 0xc0
   2a1f4:	sub	r8, r8, r9
   2a1f8:	add	r8, r8, r4
   2a1fc:	cmp	r8, #6
   2a200:	beq	2a2b4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x170>
   2a204:	add	r4, r4, #1
   2a208:	mov	r3, #21
   2a20c:	str	r3, [r6, #160]	; 0xa0
   2a210:	mov	r0, r4
   2a214:	add	sp, sp, #8
   2a218:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a21c:	cmp	r3, #47	; 0x2f
   2a220:	bne	2a190 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x4c>
   2a224:	ldr	r9, [r7, #12]
   2a228:	ldr	r8, [r6, #192]	; 0xc0
   2a22c:	sub	r8, r8, r9
   2a230:	add	r8, r8, r4
   2a234:	cmp	r8, #6
   2a238:	bne	2a204 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xc0>
   2a23c:	mov	r2, r8
   2a240:	mov	r1, r9
   2a244:	mov	r0, r6
   2a248:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2a24c:	ldr	r1, [pc, #456]	; 2a41c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2d8>
   2a250:	mov	r2, r8
   2a254:	add	r1, pc, r1
   2a258:	bl	102a4 <mycore_strncasecmp@plt>
   2a25c:	cmp	r0, #0
   2a260:	bne	2a2dc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x198>
   2a264:	ldr	r3, [r6, #192]	; 0xc0
   2a268:	mov	r0, #64	; 0x40
   2a26c:	sub	r3, r3, #8
   2a270:	str	r0, [sp]
   2a274:	mov	r2, r5
   2a278:	mov	r1, r7
   2a27c:	add	r3, r3, r4
   2a280:	mov	r0, r6
   2a284:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a288:	cmp	r0, #0
   2a28c:	beq	2a3ac <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x268>
   2a290:	mov	r1, #112	; 0x70
   2a294:	mov	r2, #3
   2a298:	mov	r3, #33	; 0x21
   2a29c:	str	r9, [r0, #24]
   2a2a0:	str	r8, [r0, #28]
   2a2a4:	str	r1, [r0]
   2a2a8:	str	r2, [r0, #48]	; 0x30
   2a2ac:	str	r3, [r6, #160]	; 0xa0
   2a2b0:	b	2a2e4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1a0>
   2a2b4:	mov	r2, r8
   2a2b8:	mov	r1, r9
   2a2bc:	mov	r0, r6
   2a2c0:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2a2c4:	ldr	r1, [pc, #340]	; 2a420 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2dc>
   2a2c8:	mov	r2, r8
   2a2cc:	add	r1, pc, r1
   2a2d0:	bl	102a4 <mycore_strncasecmp@plt>
   2a2d4:	cmp	r0, #0
   2a2d8:	beq	2a3e0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x29c>
   2a2dc:	mov	r3, #21
   2a2e0:	str	r3, [r6, #160]	; 0xa0
   2a2e4:	add	r4, r4, #1
   2a2e8:	mov	r0, r4
   2a2ec:	add	sp, sp, #8
   2a2f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a2f4:	ldr	r9, [r7, #12]
   2a2f8:	ldr	r8, [r6, #192]	; 0xc0
   2a2fc:	sub	r8, r8, r9
   2a300:	add	r8, r8, r4
   2a304:	cmp	r8, #6
   2a308:	bne	2a204 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xc0>
   2a30c:	mov	r2, r8
   2a310:	mov	r1, r9
   2a314:	mov	r0, r6
   2a318:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2a31c:	ldr	r1, [pc, #256]	; 2a424 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2e0>
   2a320:	mov	r2, r8
   2a324:	add	r1, pc, r1
   2a328:	bl	102a4 <mycore_strncasecmp@plt>
   2a32c:	subs	sl, r0, #0
   2a330:	bne	2a204 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xc0>
   2a334:	ldr	r3, [r6, #192]	; 0xc0
   2a338:	mov	r0, #64	; 0x40
   2a33c:	sub	r3, r3, #8
   2a340:	str	r0, [sp]
   2a344:	mov	r2, r5
   2a348:	mov	r1, r7
   2a34c:	add	r3, r3, r4
   2a350:	mov	r0, r6
   2a354:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a358:	cmp	r0, #0
   2a35c:	beq	2a3ac <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x268>
   2a360:	ldr	r3, [r6, #192]	; 0xc0
   2a364:	ldr	r2, [r0, #32]
   2a368:	add	r4, r4, #1
   2a36c:	add	r3, r4, r3
   2a370:	sub	r3, r3, r2
   2a374:	mov	r1, #112	; 0x70
   2a378:	mov	r2, #1
   2a37c:	str	r1, [r0]
   2a380:	str	r2, [r0, #48]	; 0x30
   2a384:	str	r9, [r0, #24]
   2a388:	str	r8, [r0, #28]
   2a38c:	mov	r2, r0
   2a390:	str	sl, [r6, #160]	; 0xa0
   2a394:	mov	r1, r4
   2a398:	str	r3, [r0, #36]	; 0x24
   2a39c:	mov	r0, r6
   2a3a0:	bl	10028 <myhtml_queue_add@plt>
   2a3a4:	cmp	r0, #0
   2a3a8:	beq	2a210 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xcc>
   2a3ac:	mov	r3, #69	; 0x45
   2a3b0:	str	r3, [r6, #160]	; 0xa0
   2a3b4:	mov	r4, #0
   2a3b8:	b	2a210 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xcc>
   2a3bc:	mov	r3, #21
   2a3c0:	mov	r0, r4
   2a3c4:	str	r3, [r6, #160]	; 0xa0
   2a3c8:	add	sp, sp, #8
   2a3cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a3d0:	mov	r4, ip
   2a3d4:	mov	r0, r4
   2a3d8:	add	sp, sp, #8
   2a3dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a3e0:	ldr	r3, [r6, #192]	; 0xc0
   2a3e4:	mov	r0, #64	; 0x40
   2a3e8:	sub	r3, r3, #8
   2a3ec:	mov	r2, r5
   2a3f0:	mov	r1, r7
   2a3f4:	str	r0, [sp]
   2a3f8:	add	r3, r3, r4
   2a3fc:	mov	r0, r6
   2a400:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a404:	cmp	r0, #0
   2a408:	movne	r1, #112	; 0x70
   2a40c:	movne	r2, #1
   2a410:	bne	2a298 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x154>
   2a414:	b	2a3ac <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x268>
   2a418:	addeq	r0, r0, fp, lsl r0
   2a41c:	andeq	r1, sp, r8, asr #31
   2a420:	andeq	r1, sp, r0, asr pc
   2a424:	strdeq	r1, [sp], -r8

0002a428 <myhtml_tokenizer_state_script_data_escaped@@Base>:
   2a428:	ldr	ip, [sp]
   2a42c:	cmp	r3, ip
   2a430:	bcs	2a490 <myhtml_tokenizer_state_script_data_escaped@@Base+0x68>
   2a434:	ldrb	r1, [r2, r3]
   2a438:	add	r2, r2, r3
   2a43c:	cmp	r1, #45	; 0x2d
   2a440:	bne	2a460 <myhtml_tokenizer_state_script_data_escaped@@Base+0x38>
   2a444:	b	2a47c <myhtml_tokenizer_state_script_data_escaped@@Base+0x54>
   2a448:	add	r3, r3, #1
   2a44c:	cmp	ip, r3
   2a450:	beq	2a474 <myhtml_tokenizer_state_script_data_escaped@@Base+0x4c>
   2a454:	ldrb	r1, [r2, #1]!
   2a458:	cmp	r1, #45	; 0x2d
   2a45c:	beq	2a47c <myhtml_tokenizer_state_script_data_escaped@@Base+0x54>
   2a460:	cmp	r1, #60	; 0x3c
   2a464:	bne	2a448 <myhtml_tokenizer_state_script_data_escaped@@Base+0x20>
   2a468:	add	ip, r3, #1
   2a46c:	mov	r2, #24
   2a470:	str	r2, [r0, #160]	; 0xa0
   2a474:	mov	r0, ip
   2a478:	bx	lr
   2a47c:	mov	r2, #22
   2a480:	add	ip, r3, #1
   2a484:	str	r2, [r0, #160]	; 0xa0
   2a488:	mov	r0, ip
   2a48c:	bx	lr
   2a490:	mov	ip, r3
   2a494:	b	2a474 <myhtml_tokenizer_state_script_data_escaped@@Base+0x4c>

0002a498 <myhtml_tokenizer_state_script_data_escaped_dash@@Base>:
   2a498:	ldrb	r2, [r2, r3]
   2a49c:	cmp	r2, #45	; 0x2d
   2a4a0:	moveq	r2, #23
   2a4a4:	addeq	r3, r3, #1
   2a4a8:	streq	r2, [r0, #160]	; 0xa0
   2a4ac:	beq	2a4d0 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x38>
   2a4b0:	cmp	r2, #60	; 0x3c
   2a4b4:	moveq	r2, #24
   2a4b8:	streq	r2, [r0, #160]	; 0xa0
   2a4bc:	beq	2a4d0 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x38>
   2a4c0:	cmp	r2, #0
   2a4c4:	addne	r3, r3, #1
   2a4c8:	mov	r2, #21
   2a4cc:	str	r2, [r0, #160]	; 0xa0
   2a4d0:	mov	r0, r3
   2a4d4:	bx	lr

0002a4d8 <myhtml_tokenizer_state_script_data_double_escape_start@@Base>:
   2a4d8:	push	{r4, r5, r6, r7, lr}
   2a4dc:	sub	sp, sp, #12
   2a4e0:	ldr	r5, [sp, #32]
   2a4e4:	cmp	r3, r5
   2a4e8:	bcs	2a594 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xbc>
   2a4ec:	ldrb	ip, [r2, r3]
   2a4f0:	mov	r4, r0
   2a4f4:	add	r2, r2, r3
   2a4f8:	sub	r0, ip, #9
   2a4fc:	uxtb	lr, r0
   2a500:	cmp	lr, #23
   2a504:	movhi	r0, #0
   2a508:	ldrls	r0, [pc, #276]	; 2a624 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x14c>
   2a50c:	mvnls	r0, r0, lsr lr
   2a510:	andls	r0, r0, #1
   2a514:	eorls	r0, r0, #1
   2a518:	cmp	ip, #62	; 0x3e
   2a51c:	cmpne	ip, #47	; 0x2f
   2a520:	moveq	lr, #1
   2a524:	movne	lr, #0
   2a528:	orrs	r0, r0, lr
   2a52c:	ldreq	r6, [pc, #240]	; 2a624 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x14c>
   2a530:	beq	2a578 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xa0>
   2a534:	b	2a5a0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xc8>
   2a538:	add	r3, r3, #1
   2a53c:	cmp	r5, r3
   2a540:	beq	2a614 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x13c>
   2a544:	ldrb	ip, [r2, #1]!
   2a548:	sub	lr, ip, #9
   2a54c:	uxtb	lr, lr
   2a550:	cmp	lr, #23
   2a554:	mvn	lr, r6, lsr lr
   2a558:	andls	lr, lr, #1
   2a55c:	eorls	r7, lr, #1
   2a560:	cmp	ip, #62	; 0x3e
   2a564:	cmpne	ip, #47	; 0x2f
   2a568:	moveq	lr, #1
   2a56c:	movne	lr, #0
   2a570:	orrs	lr, r7, lr
   2a574:	bne	2a5a0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xc8>
   2a578:	bic	ip, ip, #32
   2a57c:	sub	ip, ip, #65	; 0x41
   2a580:	cmp	ip, #25
   2a584:	mov	r7, r0
   2a588:	bls	2a538 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x60>
   2a58c:	mov	r2, #21
   2a590:	str	r2, [r4, #160]	; 0xa0
   2a594:	mov	r0, r3
   2a598:	add	sp, sp, #12
   2a59c:	pop	{r4, r5, r6, r7, pc}
   2a5a0:	ldr	r1, [r1, #12]
   2a5a4:	ldr	r5, [r4, #192]	; 0xc0
   2a5a8:	sub	r5, r5, r1
   2a5ac:	add	r5, r5, r3
   2a5b0:	cmp	r5, #6
   2a5b4:	beq	2a5d0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xf8>
   2a5b8:	mov	r2, #21
   2a5bc:	add	r3, r3, #1
   2a5c0:	mov	r0, r3
   2a5c4:	str	r2, [r4, #160]	; 0xa0
   2a5c8:	add	sp, sp, #12
   2a5cc:	pop	{r4, r5, r6, r7, pc}
   2a5d0:	mov	r2, r5
   2a5d4:	mov	r0, r4
   2a5d8:	str	r3, [sp, #4]
   2a5dc:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2a5e0:	ldr	r1, [pc, #64]	; 2a628 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x150>
   2a5e4:	mov	r2, r5
   2a5e8:	add	r1, pc, r1
   2a5ec:	bl	102a4 <mycore_strncasecmp@plt>
   2a5f0:	ldr	r3, [sp, #4]
   2a5f4:	add	r3, r3, #1
   2a5f8:	cmp	r0, #0
   2a5fc:	movne	r0, #21
   2a600:	moveq	r0, #28
   2a604:	str	r0, [r4, #160]	; 0xa0
   2a608:	mov	r0, r3
   2a60c:	add	sp, sp, #12
   2a610:	pop	{r4, r5, r6, r7, pc}
   2a614:	mov	r3, r5
   2a618:	mov	r0, r3
   2a61c:	add	sp, sp, #12
   2a620:	pop	{r4, r5, r6, r7, pc}
   2a624:	addeq	r0, r0, fp, lsl r0
   2a628:	andeq	r1, sp, r4, lsr ip

0002a62c <myhtml_tokenizer_state_script_data_double_escaped@@Base>:
   2a62c:	ldr	ip, [sp]
   2a630:	cmp	r3, ip
   2a634:	bcs	2a694 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x68>
   2a638:	ldrb	r1, [r2, r3]
   2a63c:	add	r2, r2, r3
   2a640:	cmp	r1, #45	; 0x2d
   2a644:	bne	2a664 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x38>
   2a648:	b	2a680 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x54>
   2a64c:	add	r3, r3, #1
   2a650:	cmp	ip, r3
   2a654:	beq	2a678 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x4c>
   2a658:	ldrb	r1, [r2, #1]!
   2a65c:	cmp	r1, #45	; 0x2d
   2a660:	beq	2a680 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x54>
   2a664:	cmp	r1, #60	; 0x3c
   2a668:	bne	2a64c <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x20>
   2a66c:	add	ip, r3, #1
   2a670:	mov	r2, #31
   2a674:	str	r2, [r0, #160]	; 0xa0
   2a678:	mov	r0, ip
   2a67c:	bx	lr
   2a680:	mov	r2, #29
   2a684:	add	ip, r3, #1
   2a688:	str	r2, [r0, #160]	; 0xa0
   2a68c:	mov	r0, ip
   2a690:	bx	lr
   2a694:	mov	ip, r3
   2a698:	b	2a678 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x4c>

0002a69c <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base>:
   2a69c:	ldrb	r2, [r2, r3]
   2a6a0:	cmp	r2, #45	; 0x2d
   2a6a4:	moveq	r2, #30
   2a6a8:	streq	r2, [r0, #160]	; 0xa0
   2a6ac:	beq	2a6c0 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x24>
   2a6b0:	cmp	r2, #60	; 0x3c
   2a6b4:	moveq	r2, #31
   2a6b8:	movne	r2, #28
   2a6bc:	str	r2, [r0, #160]	; 0xa0
   2a6c0:	add	r0, r3, #1
   2a6c4:	bx	lr

0002a6c8 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base>:
   2a6c8:	ldrb	r2, [r2, r3]
   2a6cc:	cmp	r2, #45	; 0x2d
   2a6d0:	beq	2a6f4 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x2c>
   2a6d4:	cmp	r2, #60	; 0x3c
   2a6d8:	moveq	r2, #31
   2a6dc:	streq	r2, [r0, #160]	; 0xa0
   2a6e0:	beq	2a6f4 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x2c>
   2a6e4:	cmp	r2, #62	; 0x3e
   2a6e8:	moveq	r2, #5
   2a6ec:	movne	r2, #28
   2a6f0:	str	r2, [r0, #160]	; 0xa0
   2a6f4:	add	r0, r3, #1
   2a6f8:	bx	lr

0002a6fc <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base>:
   2a6fc:	ldrb	r2, [r2, r3]
   2a700:	cmp	r2, #47	; 0x2f
   2a704:	addeq	r3, r3, #1
   2a708:	ldreq	r2, [r0, #192]	; 0xc0
   2a70c:	moveq	ip, #32
   2a710:	addeq	r2, r2, r3
   2a714:	movne	r2, #28
   2a718:	streq	ip, [r0, #160]	; 0xa0
   2a71c:	strne	r2, [r0, #160]	; 0xa0
   2a720:	streq	r2, [r1, #12]
   2a724:	mov	r0, r3
   2a728:	bx	lr

0002a72c <myhtml_tokenizer_state_script_data_double_escape_end@@Base>:
   2a72c:	push	{r4, r5, r6, r7, lr}
   2a730:	sub	sp, sp, #12
   2a734:	ldr	r5, [sp, #32]
   2a738:	cmp	r3, r5
   2a73c:	bcs	2a7e8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xbc>
   2a740:	ldrb	ip, [r2, r3]
   2a744:	mov	r4, r0
   2a748:	add	r2, r2, r3
   2a74c:	sub	r0, ip, #9
   2a750:	uxtb	lr, r0
   2a754:	cmp	lr, #23
   2a758:	movhi	r0, #0
   2a75c:	ldrls	r0, [pc, #276]	; 2a878 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x14c>
   2a760:	mvnls	r0, r0, lsr lr
   2a764:	andls	r0, r0, #1
   2a768:	eorls	r0, r0, #1
   2a76c:	cmp	ip, #62	; 0x3e
   2a770:	cmpne	ip, #47	; 0x2f
   2a774:	moveq	lr, #1
   2a778:	movne	lr, #0
   2a77c:	orrs	r0, r0, lr
   2a780:	ldreq	r6, [pc, #240]	; 2a878 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x14c>
   2a784:	beq	2a7cc <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xa0>
   2a788:	b	2a7f4 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xc8>
   2a78c:	add	r3, r3, #1
   2a790:	cmp	r5, r3
   2a794:	beq	2a868 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x13c>
   2a798:	ldrb	ip, [r2, #1]!
   2a79c:	sub	lr, ip, #9
   2a7a0:	uxtb	lr, lr
   2a7a4:	cmp	lr, #23
   2a7a8:	mvn	lr, r6, lsr lr
   2a7ac:	andls	lr, lr, #1
   2a7b0:	eorls	r7, lr, #1
   2a7b4:	cmp	ip, #62	; 0x3e
   2a7b8:	cmpne	ip, #47	; 0x2f
   2a7bc:	moveq	lr, #1
   2a7c0:	movne	lr, #0
   2a7c4:	orrs	lr, r7, lr
   2a7c8:	bne	2a7f4 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xc8>
   2a7cc:	bic	ip, ip, #32
   2a7d0:	sub	ip, ip, #65	; 0x41
   2a7d4:	cmp	ip, #25
   2a7d8:	mov	r7, r0
   2a7dc:	bls	2a78c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x60>
   2a7e0:	mov	r2, #28
   2a7e4:	str	r2, [r4, #160]	; 0xa0
   2a7e8:	mov	r0, r3
   2a7ec:	add	sp, sp, #12
   2a7f0:	pop	{r4, r5, r6, r7, pc}
   2a7f4:	ldr	r1, [r1, #12]
   2a7f8:	ldr	r5, [r4, #192]	; 0xc0
   2a7fc:	sub	r5, r5, r1
   2a800:	add	r5, r5, r3
   2a804:	cmp	r5, #6
   2a808:	beq	2a824 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xf8>
   2a80c:	mov	r2, #28
   2a810:	add	r3, r3, #1
   2a814:	mov	r0, r3
   2a818:	str	r2, [r4, #160]	; 0xa0
   2a81c:	add	sp, sp, #12
   2a820:	pop	{r4, r5, r6, r7, pc}
   2a824:	mov	r2, r5
   2a828:	mov	r0, r4
   2a82c:	str	r3, [sp, #4]
   2a830:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2a834:	ldr	r1, [pc, #64]	; 2a87c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x150>
   2a838:	mov	r2, r5
   2a83c:	add	r1, pc, r1
   2a840:	bl	102a4 <mycore_strncasecmp@plt>
   2a844:	ldr	r3, [sp, #4]
   2a848:	add	r3, r3, #1
   2a84c:	cmp	r0, #0
   2a850:	movne	r0, #28
   2a854:	moveq	r0, #21
   2a858:	str	r0, [r4, #160]	; 0xa0
   2a85c:	mov	r0, r3
   2a860:	add	sp, sp, #12
   2a864:	pop	{r4, r5, r6, r7, pc}
   2a868:	mov	r3, r5
   2a86c:	mov	r0, r3
   2a870:	add	sp, sp, #12
   2a874:	pop	{r4, r5, r6, r7, pc}
   2a878:	addeq	r0, r0, fp, lsl r0
   2a87c:	andeq	r1, sp, r0, ror #19

0002a880 <myhtml_tree_create@@Base>:
   2a880:	mov	r1, #252	; 0xfc
   2a884:	mov	r0, #1
   2a888:	b	ff14 <mycore_calloc@plt>

0002a88c <myhtml_tree_node_clean@@Base>:
   2a88c:	push	{r4, lr}
   2a890:	mov	r2, #44	; 0x2c
   2a894:	mov	r4, r0
   2a898:	mov	r1, #0
   2a89c:	bl	108b0 <memset@plt>
   2a8a0:	mov	r3, #1
   2a8a4:	str	r3, [r4, #8]
   2a8a8:	pop	{r4, pc}

0002a8ac <myhtml_tree_parse_flags@@Base>:
   2a8ac:	ldr	r0, [r0, #184]	; 0xb8
   2a8b0:	bx	lr

0002a8b4 <myhtml_tree_parse_flags_set@@Base>:
   2a8b4:	str	r1, [r0, #184]	; 0xb8
   2a8b8:	bx	lr

0002a8bc <myhtml_tree_get_myhtml@@Base>:
   2a8bc:	cmp	r0, #0
   2a8c0:	ldrne	r0, [r0]
   2a8c4:	bx	lr

0002a8c8 <myhtml_tree_get_tag@@Base>:
   2a8c8:	cmp	r0, #0
   2a8cc:	ldrne	r0, [r0, #28]
   2a8d0:	bx	lr

0002a8d4 <myhtml_tree_get_document@@Base>:
   2a8d4:	ldr	r0, [r0, #84]	; 0x54
   2a8d8:	bx	lr

0002a8dc <myhtml_tree_get_node_html@@Base>:
   2a8dc:	ldr	r0, [r0, #96]	; 0x60
   2a8e0:	bx	lr

0002a8e4 <myhtml_tree_get_node_body@@Base>:
   2a8e4:	ldr	r0, [r0, #100]	; 0x64
   2a8e8:	bx	lr

0002a8ec <myhtml_tree_get_node_head@@Base>:
   2a8ec:	ldr	r0, [r0, #92]	; 0x5c
   2a8f0:	bx	lr

0002a8f4 <myhtml_tree_get_mchar@@Base>:
   2a8f4:	ldr	r0, [r0, #4]
   2a8f8:	bx	lr

0002a8fc <myhtml_tree_get_mchar_node_id@@Base>:
   2a8fc:	ldr	r0, [r0, #52]	; 0x34
   2a900:	bx	lr

0002a904 <myhtml_tree_node_create@@Base>:
   2a904:	push	{r4, r5, r6, lr}
   2a908:	mov	r2, #0
   2a90c:	ldr	r1, [r0, #48]	; 0x30
   2a910:	mov	r4, r0
   2a914:	ldr	r0, [r0, #12]
   2a918:	bl	10bbc <mcobject_async_malloc@plt>
   2a91c:	mov	r5, r0
   2a920:	bl	1109c <myhtml_tree_node_clean@plt>
   2a924:	str	r4, [r5, #40]	; 0x28
   2a928:	mov	r0, r5
   2a92c:	pop	{r4, r5, r6, pc}

0002a930 <myhtml_tree_node_add_child@@Base>:
   2a930:	ldr	r3, [r0, #28]
   2a934:	push	{lr}		; (str lr, [sp, #-4]!)
   2a938:	cmp	r3, #0
   2a93c:	strne	r1, [r3, #16]
   2a940:	strne	r3, [r1, #12]
   2a944:	ldr	r3, [r1, #40]	; 0x28
   2a948:	streq	r1, [r0, #20]
   2a94c:	str	r0, [r1, #24]
   2a950:	ldr	lr, [r3, #236]	; 0xec
   2a954:	str	r1, [r0, #28]
   2a958:	cmp	lr, #0
   2a95c:	popeq	{pc}		; (ldreq pc, [sp], #4)
   2a960:	ldr	r2, [r3, #244]	; 0xf4
   2a964:	mov	r0, r3
   2a968:	mov	r3, lr
   2a96c:	pop	{lr}		; (ldr lr, [sp], #4)
   2a970:	bx	r3

0002a974 <myhtml_tree_node_insert_before@@Base>:
   2a974:	ldr	r3, [r0, #12]
   2a978:	push	{lr}		; (str lr, [sp, #-4]!)
   2a97c:	cmp	r3, #0
   2a980:	strne	r1, [r3, #16]
   2a984:	ldrne	r2, [r0, #24]
   2a988:	strne	r3, [r1, #12]
   2a98c:	ldr	r3, [r1, #40]	; 0x28
   2a990:	ldreq	r2, [r0, #24]
   2a994:	ldr	lr, [r3, #236]	; 0xec
   2a998:	streq	r1, [r2, #20]
   2a99c:	cmp	lr, #0
   2a9a0:	str	r2, [r1, #24]
   2a9a4:	str	r0, [r1, #16]
   2a9a8:	str	r1, [r0, #12]
   2a9ac:	popeq	{pc}		; (ldreq pc, [sp], #4)
   2a9b0:	ldr	r2, [r3, #244]	; 0xf4
   2a9b4:	mov	r0, r3
   2a9b8:	mov	r3, lr
   2a9bc:	pop	{lr}		; (ldr lr, [sp], #4)
   2a9c0:	bx	r3

0002a9c4 <myhtml_tree_node_insert_after@@Base>:
   2a9c4:	ldr	r3, [r0, #16]
   2a9c8:	push	{lr}		; (str lr, [sp, #-4]!)
   2a9cc:	cmp	r3, #0
   2a9d0:	strne	r1, [r3, #12]
   2a9d4:	ldrne	r2, [r0, #24]
   2a9d8:	strne	r3, [r1, #16]
   2a9dc:	ldr	r3, [r1, #40]	; 0x28
   2a9e0:	ldreq	r2, [r0, #24]
   2a9e4:	ldr	lr, [r3, #236]	; 0xec
   2a9e8:	streq	r1, [r2, #28]
   2a9ec:	cmp	lr, #0
   2a9f0:	str	r2, [r1, #24]
   2a9f4:	str	r0, [r1, #12]
   2a9f8:	str	r1, [r0, #16]
   2a9fc:	popeq	{pc}		; (ldreq pc, [sp], #4)
   2aa00:	ldr	r2, [r3, #244]	; 0xf4
   2aa04:	mov	r0, r3
   2aa08:	mov	r3, lr
   2aa0c:	pop	{lr}		; (ldr lr, [sp], #4)
   2aa10:	bx	r3

0002aa14 <myhtml_tree_node_find_parent_by_tag_id@@Base>:
   2aa14:	ldr	r0, [r0, #24]
   2aa18:	cmp	r0, #0
   2aa1c:	bxeq	lr
   2aa20:	ldr	r3, [r0, #4]
   2aa24:	cmp	r1, r3
   2aa28:	bxeq	lr
   2aa2c:	ldr	r0, [r0, #24]
   2aa30:	cmp	r0, #0
   2aa34:	bxeq	lr
   2aa38:	ldr	r3, [r0, #4]
   2aa3c:	cmp	r3, r1
   2aa40:	bne	2aa2c <myhtml_tree_node_find_parent_by_tag_id@@Base+0x18>
   2aa44:	bx	lr

0002aa48 <myhtml_tree_node_remove@@Base>:
   2aa48:	ldr	r3, [r0, #16]
   2aa4c:	push	{r4, lr}
   2aa50:	cmp	r3, #0
   2aa54:	mov	r4, r0
   2aa58:	beq	2aaa8 <myhtml_tree_node_remove@@Base+0x60>
   2aa5c:	ldr	r2, [r0, #12]
   2aa60:	str	r2, [r3, #12]
   2aa64:	ldr	r2, [r0, #12]
   2aa68:	cmp	r2, #0
   2aa6c:	beq	2aacc <myhtml_tree_node_remove@@Base+0x84>
   2aa70:	str	r3, [r2, #16]
   2aa74:	ldr	r0, [r4, #40]	; 0x28
   2aa78:	ldr	r3, [r0, #240]	; 0xf0
   2aa7c:	cmp	r3, #0
   2aa80:	beq	2aa90 <myhtml_tree_node_remove@@Base+0x48>
   2aa84:	ldr	r2, [r0, #248]	; 0xf8
   2aa88:	mov	r1, r4
   2aa8c:	blx	r3
   2aa90:	mov	r3, #0
   2aa94:	str	r3, [r4, #16]
   2aa98:	str	r3, [r4, #12]
   2aa9c:	str	r3, [r4, #24]
   2aaa0:	mov	r0, r4
   2aaa4:	pop	{r4, pc}
   2aaa8:	ldr	r1, [r0, #24]
   2aaac:	ldr	r2, [r0, #12]
   2aab0:	cmp	r1, #0
   2aab4:	beq	2aadc <myhtml_tree_node_remove@@Base+0x94>
   2aab8:	cmp	r2, #0
   2aabc:	str	r2, [r1, #28]
   2aac0:	bne	2aa70 <myhtml_tree_node_remove@@Base+0x28>
   2aac4:	str	r3, [r1, #20]
   2aac8:	b	2aa74 <myhtml_tree_node_remove@@Base+0x2c>
   2aacc:	ldr	r1, [r0, #24]
   2aad0:	cmp	r1, #0
   2aad4:	strne	r3, [r1, #20]
   2aad8:	b	2aa74 <myhtml_tree_node_remove@@Base+0x2c>
   2aadc:	cmp	r2, #0
   2aae0:	bne	2aa70 <myhtml_tree_node_remove@@Base+0x28>
   2aae4:	b	2aa74 <myhtml_tree_node_remove@@Base+0x2c>

0002aae8 <myhtml_tree_node_free@@Base>:
   2aae8:	push	{r4, lr}
   2aaec:	subs	r4, r0, #0
   2aaf0:	popeq	{r4, pc}
   2aaf4:	ldr	r1, [r4, #32]
   2aaf8:	cmp	r1, #0
   2aafc:	beq	2ab1c <myhtml_tree_node_free@@Base+0x34>
   2ab00:	ldr	r3, [r4, #40]	; 0x28
   2ab04:	ldr	r0, [r3, #8]
   2ab08:	bl	107e4 <myhtml_token_attr_delete_all@plt>
   2ab0c:	ldr	r3, [r4, #40]	; 0x28
   2ab10:	ldr	r1, [r4, #32]
   2ab14:	ldr	r0, [r3, #8]
   2ab18:	bl	10f88 <myhtml_token_delete@plt>
   2ab1c:	ldr	r3, [r4, #40]	; 0x28
   2ab20:	mov	r1, r4
   2ab24:	pop	{r4, lr}
   2ab28:	ldr	r0, [r3, #12]
   2ab2c:	b	1004c <mcobject_async_free@plt>

0002ab30 <myhtml_tree_node_delete@@Base>:
   2ab30:	subs	r3, r0, #0
   2ab34:	bxeq	lr
   2ab38:	push	{r4, lr}
   2ab3c:	mov	r4, r3
   2ab40:	bl	10df0 <myhtml_tree_node_remove@plt>
   2ab44:	mov	r0, r4
   2ab48:	pop	{r4, lr}
   2ab4c:	b	10d00 <myhtml_tree_node_free@plt>
   2ab50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ab54:	sub	sp, sp, #12
   2ab58:	subs	r3, r0, #0
   2ab5c:	str	r3, [sp, #4]
   2ab60:	beq	2ac98 <myhtml_tree_node_delete@@Base+0x168>
   2ab64:	ldr	r3, [sp, #4]
   2ab68:	ldr	r7, [r3, #20]
   2ab6c:	cmp	r7, #0
   2ab70:	beq	2ac7c <myhtml_tree_node_delete@@Base+0x14c>
   2ab74:	ldr	r8, [r7, #20]
   2ab78:	cmp	r8, #0
   2ab7c:	beq	2ac64 <myhtml_tree_node_delete@@Base+0x134>
   2ab80:	ldr	r9, [r8, #20]
   2ab84:	cmp	r9, #0
   2ab88:	beq	2ac50 <myhtml_tree_node_delete@@Base+0x120>
   2ab8c:	ldr	sl, [r9, #20]
   2ab90:	cmp	sl, #0
   2ab94:	beq	2ac3c <myhtml_tree_node_delete@@Base+0x10c>
   2ab98:	ldr	r6, [sl, #20]
   2ab9c:	cmp	r6, #0
   2aba0:	beq	2ac28 <myhtml_tree_node_delete@@Base+0xf8>
   2aba4:	ldr	r5, [r6, #20]
   2aba8:	cmp	r5, #0
   2abac:	beq	2ac14 <myhtml_tree_node_delete@@Base+0xe4>
   2abb0:	ldr	r4, [r5, #20]
   2abb4:	cmp	r4, #0
   2abb8:	beq	2ac00 <myhtml_tree_node_delete@@Base+0xd0>
   2abbc:	ldr	fp, [r4, #20]
   2abc0:	cmp	fp, #0
   2abc4:	beq	2abec <myhtml_tree_node_delete@@Base+0xbc>
   2abc8:	ldr	r2, [fp, #20]
   2abcc:	subs	r0, r2, #0
   2abd0:	beq	2abd8 <myhtml_tree_node_delete@@Base+0xa8>
   2abd4:	bl	2ab50 <myhtml_tree_node_delete@@Base+0x20>
   2abd8:	ldr	fp, [fp, #16]
   2abdc:	mov	r0, fp
   2abe0:	bl	10dc0 <myhtml_tree_node_delete@plt>
   2abe4:	cmp	fp, #0
   2abe8:	bne	2abc8 <myhtml_tree_node_delete@@Base+0x98>
   2abec:	ldr	r4, [r4, #16]
   2abf0:	mov	r0, r4
   2abf4:	bl	10dc0 <myhtml_tree_node_delete@plt>
   2abf8:	cmp	r4, #0
   2abfc:	bne	2abbc <myhtml_tree_node_delete@@Base+0x8c>
   2ac00:	ldr	r5, [r5, #16]
   2ac04:	mov	r0, r5
   2ac08:	bl	10dc0 <myhtml_tree_node_delete@plt>
   2ac0c:	cmp	r5, #0
   2ac10:	bne	2abb0 <myhtml_tree_node_delete@@Base+0x80>
   2ac14:	ldr	r6, [r6, #16]
   2ac18:	mov	r0, r6
   2ac1c:	bl	10dc0 <myhtml_tree_node_delete@plt>
   2ac20:	cmp	r6, #0
   2ac24:	bne	2aba4 <myhtml_tree_node_delete@@Base+0x74>
   2ac28:	ldr	sl, [sl, #16]
   2ac2c:	mov	r0, sl
   2ac30:	bl	10dc0 <myhtml_tree_node_delete@plt>
   2ac34:	cmp	sl, #0
   2ac38:	bne	2ab98 <myhtml_tree_node_delete@@Base+0x68>
   2ac3c:	ldr	r9, [r9, #16]
   2ac40:	mov	r0, r9
   2ac44:	bl	10dc0 <myhtml_tree_node_delete@plt>
   2ac48:	cmp	r9, #0
   2ac4c:	bne	2ab8c <myhtml_tree_node_delete@@Base+0x5c>
   2ac50:	ldr	r8, [r8, #16]
   2ac54:	mov	r0, r8
   2ac58:	bl	10dc0 <myhtml_tree_node_delete@plt>
   2ac5c:	cmp	r8, #0
   2ac60:	bne	2ab80 <myhtml_tree_node_delete@@Base+0x50>
   2ac64:	ldr	r7, [r7, #16]
   2ac68:	mov	r0, r7
   2ac6c:	bl	10dc0 <myhtml_tree_node_delete@plt>
   2ac70:	cmp	r7, #0
   2ac74:	bne	2ab74 <myhtml_tree_node_delete@@Base+0x44>
   2ac78:	ldr	r3, [sp, #4]
   2ac7c:	ldr	r3, [r3, #16]
   2ac80:	mov	r4, r3
   2ac84:	mov	r0, r3
   2ac88:	str	r3, [sp, #4]
   2ac8c:	bl	10dc0 <myhtml_tree_node_delete@plt>
   2ac90:	cmp	r4, #0
   2ac94:	bne	2ab64 <myhtml_tree_node_delete@@Base+0x34>
   2ac98:	add	sp, sp, #12
   2ac9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002aca0 <myhtml_tree_node_delete_recursive@@Base>:
   2aca0:	push	{r4, r5, r6, lr}
   2aca4:	subs	r5, r0, #0
   2aca8:	popeq	{r4, r5, r6, pc}
   2acac:	ldr	r4, [r5, #20]
   2acb0:	cmp	r4, #0
   2acb4:	beq	2acdc <myhtml_tree_node_delete_recursive@@Base+0x3c>
   2acb8:	ldr	r3, [r4, #20]
   2acbc:	subs	r0, r3, #0
   2acc0:	beq	2acc8 <myhtml_tree_node_delete_recursive@@Base+0x28>
   2acc4:	bl	2ab50 <myhtml_tree_node_delete@@Base+0x20>
   2acc8:	ldr	r4, [r4, #16]
   2accc:	mov	r0, r4
   2acd0:	bl	10dc0 <myhtml_tree_node_delete@plt>
   2acd4:	cmp	r4, #0
   2acd8:	bne	2acb8 <myhtml_tree_node_delete_recursive@@Base+0x18>
   2acdc:	mov	r0, r5
   2ace0:	pop	{r4, r5, r6, lr}
   2ace4:	b	10dc0 <myhtml_tree_node_delete@plt>

0002ace8 <myhtml_tree_node_clone@@Base>:
   2ace8:	push	{r4, r5, r6, lr}
   2acec:	mov	r4, r0
   2acf0:	ldr	r0, [r0, #40]	; 0x28
   2acf4:	bl	ffe0 <myhtml_tree_node_create@plt>
   2acf8:	ldr	r1, [r4, #32]
   2acfc:	cmp	r1, #0
   2ad00:	mov	r5, r0
   2ad04:	beq	2ad18 <myhtml_tree_node_clone@@Base+0x30>
   2ad08:	ldr	r3, [r4, #40]	; 0x28
   2ad0c:	ldr	r0, [r3, #8]
   2ad10:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   2ad14:	ldr	r1, [r4, #32]
   2ad18:	ldr	r0, [r4, #40]	; 0x28
   2ad1c:	ldr	r3, [r0, #44]	; 0x2c
   2ad20:	ldr	r2, [r0, #40]	; 0x28
   2ad24:	ldr	r0, [r0, #8]
   2ad28:	bl	ff2c <myhtml_token_node_clone@plt>
   2ad2c:	ldmib	r4, {r2, r3}
   2ad30:	stmib	r5, {r2, r3}
   2ad34:	cmp	r0, #0
   2ad38:	str	r0, [r5, #32]
   2ad3c:	ldrne	r3, [r0, #48]	; 0x30
   2ad40:	orrne	r3, r3, #4
   2ad44:	strne	r3, [r0, #48]	; 0x30
   2ad48:	mov	r0, r5
   2ad4c:	pop	{r4, r5, r6, pc}

0002ad50 <myhtml_tree_node_insert_by_mode@@Base>:
   2ad50:	cmp	r2, #0
   2ad54:	beq	2ad64 <myhtml_tree_node_insert_by_mode@@Base+0x14>
   2ad58:	cmp	r2, #1
   2ad5c:	beq	2ad68 <myhtml_tree_node_insert_by_mode@@Base+0x18>
   2ad60:	b	10364 <myhtml_tree_node_insert_after@plt>
   2ad64:	b	106b8 <myhtml_tree_node_add_child@plt>
   2ad68:	b	103f4 <myhtml_tree_node_insert_before@plt>

0002ad6c <myhtml_tree_node_insert_doctype@@Base>:
   2ad6c:	push	{r4, r5, r6, lr}
   2ad70:	mov	r6, r1
   2ad74:	mov	r5, r0
   2ad78:	bl	ffe0 <myhtml_tree_node_create@plt>
   2ad7c:	mov	r2, #1
   2ad80:	mov	r3, #3
   2ad84:	mov	r4, r0
   2ad88:	str	r6, [r0, #32]
   2ad8c:	mov	r1, r4
   2ad90:	ldr	r0, [r5, #84]	; 0x54
   2ad94:	str	r2, [r4, #8]
   2ad98:	str	r3, [r4, #4]
   2ad9c:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2ada0:	mov	r0, r4
   2ada4:	pop	{r4, r5, r6, pc}

0002ada8 <myhtml_tree_element_in_scope@@Base>:
   2ada8:	ldr	ip, [r0, #128]	; 0x80
   2adac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2adb0:	ldr	r5, [ip, #4]
   2adb4:	ldr	r4, [ip]
   2adb8:	cmp	r5, #0
   2adbc:	beq	2ae38 <myhtml_tree_element_in_scope@@Base+0x90>
   2adc0:	cmp	r3, #128	; 0x80
   2adc4:	mov	r8, r3
   2adc8:	mov	r9, r2
   2adcc:	mov	r7, r1
   2add0:	mov	r6, r0
   2add4:	add	r4, r4, r5, lsl #2
   2add8:	beq	2ae88 <myhtml_tree_element_in_scope@@Base+0xe0>
   2addc:	cmp	r2, #0
   2ade0:	bne	2ae00 <myhtml_tree_element_in_scope@@Base+0x58>
   2ade4:	b	2ae60 <myhtml_tree_element_in_scope@@Base+0xb8>
   2ade8:	add	r2, r2, #4
   2adec:	ldr	r3, [r0, r2, lsl #2]
   2adf0:	tst	r8, r3
   2adf4:	bne	2ae38 <myhtml_tree_element_in_scope@@Base+0x90>
   2adf8:	cmp	r5, #0
   2adfc:	beq	2ae38 <myhtml_tree_element_in_scope@@Base+0x90>
   2ae00:	ldr	r3, [r4, #-4]
   2ae04:	ldr	r0, [r6, #28]
   2ae08:	sub	r5, r5, #1
   2ae0c:	ldr	r1, [r3, #4]
   2ae10:	bl	10a24 <myhtml_tag_get_by_id@plt>
   2ae14:	ldr	r3, [r4, #-4]!
   2ae18:	ldr	r2, [r3, #4]
   2ae1c:	cmp	r7, r2
   2ae20:	ldr	r2, [r3, #8]
   2ae24:	bne	2ade8 <myhtml_tree_element_in_scope@@Base+0x40>
   2ae28:	cmp	r9, r2
   2ae2c:	bne	2ade8 <myhtml_tree_element_in_scope@@Base+0x40>
   2ae30:	mov	r0, r3
   2ae34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ae38:	mov	r3, #0
   2ae3c:	mov	r0, r3
   2ae40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ae44:	ldr	r3, [r3, #8]
   2ae48:	add	r3, r3, #4
   2ae4c:	ldr	r3, [r0, r3, lsl #2]
   2ae50:	tst	r8, r3
   2ae54:	bne	2ae38 <myhtml_tree_element_in_scope@@Base+0x90>
   2ae58:	cmp	r5, #0
   2ae5c:	beq	2ae38 <myhtml_tree_element_in_scope@@Base+0x90>
   2ae60:	ldr	r3, [r4, #-4]
   2ae64:	ldr	r0, [r6, #28]
   2ae68:	sub	r5, r5, #1
   2ae6c:	ldr	r1, [r3, #4]
   2ae70:	bl	10a24 <myhtml_tag_get_by_id@plt>
   2ae74:	ldr	r3, [r4, #-4]!
   2ae78:	ldr	r2, [r3, #4]
   2ae7c:	cmp	r7, r2
   2ae80:	bne	2ae44 <myhtml_tree_element_in_scope@@Base+0x9c>
   2ae84:	b	2ae30 <myhtml_tree_element_in_scope@@Base+0x88>
   2ae88:	cmp	r2, #0
   2ae8c:	bne	2aeac <myhtml_tree_element_in_scope@@Base+0x104>
   2ae90:	b	2aefc <myhtml_tree_element_in_scope@@Base+0x154>
   2ae94:	add	r2, r2, #4
   2ae98:	ldr	r3, [r0, r2, lsl #2]
   2ae9c:	tst	r3, #128	; 0x80
   2aea0:	beq	2ae38 <myhtml_tree_element_in_scope@@Base+0x90>
   2aea4:	cmp	r5, #0
   2aea8:	beq	2ae38 <myhtml_tree_element_in_scope@@Base+0x90>
   2aeac:	ldr	r3, [r4, #-4]
   2aeb0:	ldr	r0, [r6, #28]
   2aeb4:	sub	r5, r5, #1
   2aeb8:	ldr	r1, [r3, #4]
   2aebc:	bl	10a24 <myhtml_tag_get_by_id@plt>
   2aec0:	ldr	r3, [r4, #-4]!
   2aec4:	ldr	r2, [r3, #4]
   2aec8:	cmp	r7, r2
   2aecc:	ldr	r2, [r3, #8]
   2aed0:	bne	2ae94 <myhtml_tree_element_in_scope@@Base+0xec>
   2aed4:	cmp	r9, r2
   2aed8:	bne	2ae94 <myhtml_tree_element_in_scope@@Base+0xec>
   2aedc:	b	2ae30 <myhtml_tree_element_in_scope@@Base+0x88>
   2aee0:	ldr	r3, [r3, #8]
   2aee4:	add	r3, r3, #4
   2aee8:	ldr	r3, [r0, r3, lsl #2]
   2aeec:	tst	r3, #128	; 0x80
   2aef0:	beq	2ae38 <myhtml_tree_element_in_scope@@Base+0x90>
   2aef4:	cmp	r5, #0
   2aef8:	beq	2ae38 <myhtml_tree_element_in_scope@@Base+0x90>
   2aefc:	ldr	r3, [r4, #-4]
   2af00:	ldr	r0, [r6, #28]
   2af04:	sub	r5, r5, #1
   2af08:	ldr	r1, [r3, #4]
   2af0c:	bl	10a24 <myhtml_tag_get_by_id@plt>
   2af10:	ldr	r3, [r4, #-4]!
   2af14:	ldr	r2, [r3, #4]
   2af18:	cmp	r2, r7
   2af1c:	bne	2aee0 <myhtml_tree_element_in_scope@@Base+0x138>
   2af20:	b	2ae30 <myhtml_tree_element_in_scope@@Base+0x88>

0002af24 <myhtml_tree_element_in_scope_by_node@@Base>:
   2af24:	push	{r4, r5, r6, r7, r8, lr}
   2af28:	ldr	r7, [r0, #40]	; 0x28
   2af2c:	ldr	r3, [r7, #128]	; 0x80
   2af30:	ldr	r5, [r3, #4]
   2af34:	ldr	r4, [r3]
   2af38:	cmp	r5, #0
   2af3c:	beq	2afdc <myhtml_tree_element_in_scope_by_node@@Base+0xb8>
   2af40:	cmp	r1, #128	; 0x80
   2af44:	mov	r8, r1
   2af48:	mov	r6, r0
   2af4c:	add	r4, r4, r5, lsl #2
   2af50:	bne	2af74 <myhtml_tree_element_in_scope_by_node@@Base+0x50>
   2af54:	b	2afb8 <myhtml_tree_element_in_scope_by_node@@Base+0x94>
   2af58:	ldr	r3, [r3, #8]
   2af5c:	add	r3, r3, #4
   2af60:	ldr	r3, [r0, r3, lsl #2]
   2af64:	tst	r8, r3
   2af68:	bne	2afdc <myhtml_tree_element_in_scope_by_node@@Base+0xb8>
   2af6c:	cmp	r5, #0
   2af70:	beq	2afdc <myhtml_tree_element_in_scope_by_node@@Base+0xb8>
   2af74:	ldr	r3, [r4, #-4]
   2af78:	ldr	r0, [r7, #28]
   2af7c:	sub	r5, r5, #1
   2af80:	ldr	r1, [r3, #4]
   2af84:	bl	10a24 <myhtml_tag_get_by_id@plt>
   2af88:	ldr	r3, [r4, #-4]!
   2af8c:	cmp	r6, r3
   2af90:	bne	2af58 <myhtml_tree_element_in_scope_by_node@@Base+0x34>
   2af94:	mov	r0, #1
   2af98:	pop	{r4, r5, r6, r7, r8, pc}
   2af9c:	ldr	r3, [r3, #8]
   2afa0:	add	r3, r3, #4
   2afa4:	ldr	r3, [r0, r3, lsl #2]
   2afa8:	tst	r3, #128	; 0x80
   2afac:	beq	2afdc <myhtml_tree_element_in_scope_by_node@@Base+0xb8>
   2afb0:	cmp	r5, #0
   2afb4:	beq	2afdc <myhtml_tree_element_in_scope_by_node@@Base+0xb8>
   2afb8:	ldr	r3, [r4, #-4]
   2afbc:	ldr	r0, [r7, #28]
   2afc0:	sub	r5, r5, #1
   2afc4:	ldr	r1, [r3, #4]
   2afc8:	bl	10a24 <myhtml_tag_get_by_id@plt>
   2afcc:	ldr	r3, [r4, #-4]!
   2afd0:	cmp	r6, r3
   2afd4:	bne	2af9c <myhtml_tree_element_in_scope_by_node@@Base+0x78>
   2afd8:	b	2af94 <myhtml_tree_element_in_scope_by_node@@Base+0x70>
   2afdc:	mov	r0, #0
   2afe0:	pop	{r4, r5, r6, r7, r8, pc}

0002afe4 <myhtml_tree_list_init@@Base>:
   2afe4:	push	{r4, lr}
   2afe8:	mov	r0, #12
   2afec:	bl	10c94 <mycore_malloc@plt>
   2aff0:	mov	r2, #0
   2aff4:	mov	r3, #4096	; 0x1000
   2aff8:	mov	r4, r0
   2affc:	str	r2, [r0, #4]
   2b000:	str	r3, [r0, #8]
   2b004:	mov	r0, #16384	; 0x4000
   2b008:	bl	10c94 <mycore_malloc@plt>
   2b00c:	str	r0, [r4]
   2b010:	mov	r0, r4
   2b014:	pop	{r4, pc}

0002b018 <myhtml_tree_list_clean@@Base>:
   2b018:	mov	r3, #0
   2b01c:	str	r3, [r0, #4]
   2b020:	bx	lr

0002b024 <myhtml_tree_list_destroy@@Base>:
   2b024:	push	{r4, r5, r6, lr}
   2b028:	subs	r4, r0, #0
   2b02c:	beq	2b04c <myhtml_tree_list_destroy@@Base+0x28>
   2b030:	ldr	r0, [r4]
   2b034:	mov	r5, r1
   2b038:	cmp	r0, #0
   2b03c:	beq	2b044 <myhtml_tree_list_destroy@@Base+0x20>
   2b040:	bl	10dcc <mycore_free@plt>
   2b044:	cmp	r5, #0
   2b048:	bne	2b054 <myhtml_tree_list_destroy@@Base+0x30>
   2b04c:	mov	r0, r4
   2b050:	pop	{r4, r5, r6, pc}
   2b054:	mov	r0, r4
   2b058:	bl	10dcc <mycore_free@plt>
   2b05c:	mov	r4, #0
   2b060:	b	2b04c <myhtml_tree_list_destroy@@Base+0x28>

0002b064 <myhtml_tree_list_append@@Base>:
   2b064:	push	{r4, r5, r6, lr}
   2b068:	mov	r5, r1
   2b06c:	ldr	r3, [r0, #4]
   2b070:	ldr	r1, [r0, #8]
   2b074:	mov	r4, r0
   2b078:	cmp	r3, r1
   2b07c:	bcs	2b09c <myhtml_tree_list_append@@Base+0x38>
   2b080:	ldr	r0, [r4]
   2b084:	ldr	r2, [r4, #4]
   2b088:	ldr	r3, [r4, #4]
   2b08c:	add	r3, r3, #1
   2b090:	str	r5, [r0, r2, lsl #2]
   2b094:	str	r3, [r4, #4]
   2b098:	pop	{r4, r5, r6, pc}
   2b09c:	lsl	r3, r1, #1
   2b0a0:	str	r3, [r0, #8]
   2b0a4:	lsl	r1, r1, #3
   2b0a8:	ldr	r0, [r0]
   2b0ac:	bl	fbd8 <mycore_realloc@plt>
   2b0b0:	cmp	r0, #0
   2b0b4:	strne	r0, [r4]
   2b0b8:	bne	2b084 <myhtml_tree_list_append@@Base+0x20>
   2b0bc:	b	2b080 <myhtml_tree_list_append@@Base+0x1c>

0002b0c0 <myhtml_tree_list_insert_by_index@@Base>:
   2b0c0:	push	{r4, r5, r6, lr}
   2b0c4:	mov	r5, r1
   2b0c8:	ldr	r3, [r0, #4]
   2b0cc:	ldr	r1, [r0, #8]
   2b0d0:	mov	r4, r0
   2b0d4:	cmp	r3, r1
   2b0d8:	mov	r6, r2
   2b0dc:	bcs	2b120 <myhtml_tree_list_insert_by_index@@Base+0x60>
   2b0e0:	ldr	r1, [r4]
   2b0e4:	ldr	r3, [r4, #4]
   2b0e8:	add	r0, r6, #1
   2b0ec:	sub	r2, r3, r6
   2b0f0:	lsl	r0, r0, #2
   2b0f4:	sub	r6, r0, #4
   2b0f8:	lsl	r2, r2, #2
   2b0fc:	add	r0, r1, r0
   2b100:	add	r1, r1, r6
   2b104:	bl	fe78 <memmove@plt>
   2b108:	ldr	r3, [r4, #4]
   2b10c:	ldr	r2, [r4]
   2b110:	add	r3, r3, #1
   2b114:	str	r5, [r2, r6]
   2b118:	str	r3, [r4, #4]
   2b11c:	pop	{r4, r5, r6, pc}
   2b120:	lsl	r3, r1, #1
   2b124:	str	r3, [r0, #8]
   2b128:	lsl	r1, r1, #3
   2b12c:	ldr	r0, [r0]
   2b130:	bl	fbd8 <mycore_realloc@plt>
   2b134:	subs	r1, r0, #0
   2b138:	strne	r1, [r4]
   2b13c:	bne	2b0e4 <myhtml_tree_list_insert_by_index@@Base+0x24>
   2b140:	b	2b0e0 <myhtml_tree_list_insert_by_index@@Base+0x20>

0002b144 <myhtml_tree_list_append_after_index@@Base>:
   2b144:	add	r2, r2, #1
   2b148:	b	102bc <myhtml_tree_list_insert_by_index@plt>

0002b14c <myhtml_tree_list_current_node@@Base>:
   2b14c:	ldr	r3, [r0, #4]
   2b150:	cmp	r3, #0
   2b154:	ldrne	r3, [r0, #4]
   2b158:	ldrne	r2, [r0]
   2b15c:	subne	r3, r3, #-1073741823	; 0xc0000001
   2b160:	ldrne	r0, [r2, r3, lsl #2]
   2b164:	moveq	r0, r3
   2b168:	bx	lr

0002b16c <myhtml_tree_open_elements_init@@Base>:
   2b16c:	b	1085c <myhtml_tree_list_init@plt>

0002b170 <myhtml_tree_open_elements_clean@@Base>:
   2b170:	ldr	r3, [r0, #128]	; 0x80
   2b174:	mov	r2, #0
   2b178:	str	r2, [r3, #4]
   2b17c:	bx	lr

0002b180 <myhtml_tree_open_elements_destroy@@Base>:
   2b180:	ldr	r0, [r0, #128]	; 0x80
   2b184:	mov	r1, #1
   2b188:	b	106f4 <myhtml_tree_list_destroy@plt>

0002b18c <myhtml_tree_current_node@@Base>:
   2b18c:	ldr	r3, [r0, #128]	; 0x80
   2b190:	ldr	r0, [r3, #4]
   2b194:	cmp	r0, #0
   2b198:	ldrne	r2, [r3, #4]
   2b19c:	ldrne	r1, [r3]
   2b1a0:	subne	r3, r2, #-1073741823	; 0xc0000001
   2b1a4:	ldrne	r0, [r1, r3, lsl #2]
   2b1a8:	bx	lr

0002b1ac <myhtml_tree_adjusted_current_node@@Base>:
   2b1ac:	ldr	r3, [r0, #128]	; 0x80
   2b1b0:	ldr	r3, [r3, #4]
   2b1b4:	cmp	r3, #1
   2b1b8:	beq	2b1c0 <myhtml_tree_adjusted_current_node@@Base+0x14>
   2b1bc:	b	10628 <myhtml_tree_current_node@plt>
   2b1c0:	ldr	r3, [r0, #88]	; 0x58
   2b1c4:	cmp	r3, #0
   2b1c8:	beq	2b1bc <myhtml_tree_adjusted_current_node@@Base+0x10>
   2b1cc:	mov	r0, r3
   2b1d0:	bx	lr

0002b1d4 <myhtml_tree_open_elements_append@@Base>:
   2b1d4:	ldr	r0, [r0, #128]	; 0x80
   2b1d8:	b	10220 <myhtml_tree_list_append@plt>

0002b1dc <myhtml_tree_node_insert_root@@Base>:
   2b1dc:	push	{r4, r5, r6, r7, r8, lr}
   2b1e0:	mov	r6, r1
   2b1e4:	mov	r7, r2
   2b1e8:	mov	r5, r0
   2b1ec:	bl	ffe0 <myhtml_tree_node_create@plt>
   2b1f0:	cmp	r6, #0
   2b1f4:	moveq	r3, #65	; 0x41
   2b1f8:	ldrne	r3, [r6]
   2b1fc:	mov	r4, r0
   2b200:	str	r3, [r0, #4]
   2b204:	str	r6, [r0, #32]
   2b208:	str	r7, [r0, #8]
   2b20c:	mov	r1, r0
   2b210:	ldr	r0, [r5, #84]	; 0x54
   2b214:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2b218:	mov	r0, r5
   2b21c:	mov	r1, r4
   2b220:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2b224:	str	r4, [r5, #96]	; 0x60
   2b228:	mov	r0, r4
   2b22c:	pop	{r4, r5, r6, r7, r8, pc}

0002b230 <myhtml_tree_open_elements_append_after_index@@Base>:
   2b230:	ldr	r0, [r0, #128]	; 0x80
   2b234:	b	109c4 <myhtml_tree_list_append_after_index@plt>

0002b238 <myhtml_tree_open_elements_pop@@Base>:
   2b238:	ldr	r3, [r0, #128]	; 0x80
   2b23c:	ldr	r2, [r3, #4]
   2b240:	cmp	r2, #0
   2b244:	ldrne	r2, [r3, #4]
   2b248:	subne	r2, r2, #1
   2b24c:	strne	r2, [r3, #4]
   2b250:	bx	lr

0002b254 <myhtml_tree_open_elements_remove@@Base>:
   2b254:	push	{r4, r5, r6, lr}
   2b258:	ldr	r5, [r0, #128]	; 0x80
   2b25c:	ldr	r3, [r5, #4]
   2b260:	ldr	r4, [r5]
   2b264:	cmp	r3, #0
   2b268:	popeq	{r4, r5, r6, pc}
   2b26c:	sub	r2, r3, #1
   2b270:	ldr	lr, [r4, r2, lsl #2]
   2b274:	add	ip, r4, r2, lsl #2
   2b278:	cmp	r1, lr
   2b27c:	subne	r3, r3, #-1073741822	; 0xc0000002
   2b280:	addne	r3, r4, r3, lsl #2
   2b284:	bne	2b2a4 <myhtml_tree_open_elements_remove@@Base+0x50>
   2b288:	b	2b2b4 <myhtml_tree_open_elements_remove@@Base+0x60>
   2b28c:	ldr	lr, [ip]
   2b290:	sub	r3, r3, #4
   2b294:	cmp	lr, r1
   2b298:	sub	lr, r2, #1
   2b29c:	beq	2b2bc <myhtml_tree_open_elements_remove@@Base+0x68>
   2b2a0:	mov	r2, lr
   2b2a4:	cmp	r2, #0
   2b2a8:	mov	ip, r3
   2b2ac:	bne	2b28c <myhtml_tree_open_elements_remove@@Base+0x38>
   2b2b0:	pop	{r4, r5, r6, pc}
   2b2b4:	mov	lr, r2
   2b2b8:	mov	r2, r3
   2b2bc:	ldr	r3, [r5, #4]
   2b2c0:	add	r1, r4, r2, lsl #2
   2b2c4:	sub	r2, r3, lr
   2b2c8:	mov	r6, r0
   2b2cc:	lsl	r2, r2, #2
   2b2d0:	mov	r0, ip
   2b2d4:	bl	fe78 <memmove@plt>
   2b2d8:	ldr	r2, [r6, #128]	; 0x80
   2b2dc:	ldr	r3, [r2, #4]
   2b2e0:	sub	r3, r3, #1
   2b2e4:	str	r3, [r2, #4]
   2b2e8:	pop	{r4, r5, r6, pc}

0002b2ec <myhtml_tree_open_elements_pop_until@@Base>:
   2b2ec:	ldr	r0, [r0, #128]	; 0x80
   2b2f0:	cmp	r2, #0
   2b2f4:	push	{lr}		; (str lr, [sp, #-4]!)
   2b2f8:	ldr	lr, [r0]
   2b2fc:	beq	2b354 <myhtml_tree_open_elements_pop_until@@Base+0x68>
   2b300:	ldr	ip, [r0, #4]
   2b304:	cmp	ip, #0
   2b308:	popeq	{pc}		; (ldreq pc, [sp], #4)
   2b30c:	ldr	ip, [r0, #4]
   2b310:	sub	ip, ip, #1
   2b314:	str	ip, [r0, #4]
   2b318:	ldr	ip, [r0, #4]
   2b31c:	ldr	ip, [lr, ip, lsl #2]
   2b320:	ldr	ip, [ip, #4]
   2b324:	cmp	r1, ip
   2b328:	bne	2b300 <myhtml_tree_open_elements_pop_until@@Base+0x14>
   2b32c:	ldr	ip, [r0, #4]
   2b330:	ldr	ip, [lr, ip, lsl #2]
   2b334:	ldr	ip, [ip, #8]
   2b338:	cmp	r2, ip
   2b33c:	bne	2b300 <myhtml_tree_open_elements_pop_until@@Base+0x14>
   2b340:	cmp	r3, #0
   2b344:	ldrne	r3, [r0, #4]
   2b348:	addne	r3, r3, #1
   2b34c:	strne	r3, [r0, #4]
   2b350:	pop	{pc}		; (ldr pc, [sp], #4)
   2b354:	ldr	r2, [r0, #4]
   2b358:	cmp	r2, #0
   2b35c:	beq	2b384 <myhtml_tree_open_elements_pop_until@@Base+0x98>
   2b360:	ldr	r2, [r0, #4]
   2b364:	sub	r2, r2, #1
   2b368:	str	r2, [r0, #4]
   2b36c:	ldr	r2, [r0, #4]
   2b370:	ldr	r2, [lr, r2, lsl #2]
   2b374:	ldr	r2, [r2, #4]
   2b378:	cmp	r2, r1
   2b37c:	bne	2b354 <myhtml_tree_open_elements_pop_until@@Base+0x68>
   2b380:	b	2b340 <myhtml_tree_open_elements_pop_until@@Base+0x54>
   2b384:	pop	{pc}		; (ldr pc, [sp], #4)

0002b388 <myhtml_tree_open_elements_pop_until_by_node@@Base>:
   2b388:	ldr	r3, [r0, #128]	; 0x80
   2b38c:	ldr	ip, [r3]
   2b390:	b	2b3b0 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x28>
   2b394:	ldr	r0, [r3, #4]
   2b398:	sub	r0, r0, #1
   2b39c:	str	r0, [r3, #4]
   2b3a0:	ldr	r0, [r3, #4]
   2b3a4:	ldr	r0, [ip, r0, lsl #2]
   2b3a8:	cmp	r0, r1
   2b3ac:	beq	2b3c0 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x38>
   2b3b0:	ldr	r0, [r3, #4]
   2b3b4:	cmp	r0, #0
   2b3b8:	bne	2b394 <myhtml_tree_open_elements_pop_until_by_node@@Base+0xc>
   2b3bc:	bx	lr
   2b3c0:	cmp	r2, #0
   2b3c4:	ldrne	r2, [r3, #4]
   2b3c8:	addne	r2, r2, #1
   2b3cc:	strne	r2, [r3, #4]
   2b3d0:	bx	lr

0002b3d4 <myhtml_tree_open_elements_pop_until_by_index@@Base>:
   2b3d4:	ldr	r3, [r0, #128]	; 0x80
   2b3d8:	b	2b3f4 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x20>
   2b3dc:	ldr	r0, [r3, #4]
   2b3e0:	sub	r0, r0, #1
   2b3e4:	str	r0, [r3, #4]
   2b3e8:	ldr	r0, [r3, #4]
   2b3ec:	cmp	r0, r1
   2b3f0:	beq	2b404 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x30>
   2b3f4:	ldr	r0, [r3, #4]
   2b3f8:	cmp	r0, #0
   2b3fc:	bne	2b3dc <myhtml_tree_open_elements_pop_until_by_index@@Base+0x8>
   2b400:	bx	lr
   2b404:	cmp	r2, #0
   2b408:	ldrne	r2, [r3, #4]
   2b40c:	addne	r2, r2, #1
   2b410:	strne	r2, [r3, #4]
   2b414:	bx	lr

0002b418 <myhtml_tree_open_elements_find_reverse@@Base>:
   2b418:	ldr	r3, [r0, #128]	; 0x80
   2b41c:	ldr	ip, [r3, #4]
   2b420:	ldr	r3, [r3]
   2b424:	cmp	ip, #0
   2b428:	beq	2b484 <myhtml_tree_open_elements_find_reverse@@Base+0x6c>
   2b42c:	sub	r0, ip, #1
   2b430:	push	{lr}		; (str lr, [sp, #-4]!)
   2b434:	ldr	lr, [r3, r0, lsl #2]
   2b438:	cmp	r1, lr
   2b43c:	subne	ip, ip, #-1073741823	; 0xc0000001
   2b440:	addne	r3, r3, ip, lsl #2
   2b444:	bne	2b45c <myhtml_tree_open_elements_find_reverse@@Base+0x44>
   2b448:	b	2b468 <myhtml_tree_open_elements_find_reverse@@Base+0x50>
   2b44c:	ldr	ip, [r3, #-4]!
   2b450:	sub	r0, r0, #1
   2b454:	cmp	ip, r1
   2b458:	beq	2b468 <myhtml_tree_open_elements_find_reverse@@Base+0x50>
   2b45c:	cmp	r0, #0
   2b460:	bne	2b44c <myhtml_tree_open_elements_find_reverse@@Base+0x34>
   2b464:	pop	{pc}		; (ldr pc, [sp], #4)
   2b468:	cmp	r2, #0
   2b46c:	beq	2b47c <myhtml_tree_open_elements_find_reverse@@Base+0x64>
   2b470:	str	r0, [r2]
   2b474:	mov	r0, #1
   2b478:	pop	{pc}		; (ldr pc, [sp], #4)
   2b47c:	mov	r0, #1
   2b480:	pop	{pc}		; (ldr pc, [sp], #4)
   2b484:	mov	r0, ip
   2b488:	bx	lr

0002b48c <myhtml_tree_open_elements_find@@Base>:
   2b48c:	push	{lr}		; (str lr, [sp, #-4]!)
   2b490:	ldr	lr, [r0, #128]	; 0x80
   2b494:	ldr	r3, [lr, #4]
   2b498:	ldr	r0, [lr]
   2b49c:	cmp	r3, #0
   2b4a0:	beq	2b4d4 <myhtml_tree_open_elements_find@@Base+0x48>
   2b4a4:	ldr	r3, [r0]
   2b4a8:	cmp	r1, r3
   2b4ac:	movne	r3, #0
   2b4b0:	bne	2b4c4 <myhtml_tree_open_elements_find@@Base+0x38>
   2b4b4:	b	2b4dc <myhtml_tree_open_elements_find@@Base+0x50>
   2b4b8:	ldr	ip, [r0, #4]!
   2b4bc:	cmp	ip, r1
   2b4c0:	beq	2b4e0 <myhtml_tree_open_elements_find@@Base+0x54>
   2b4c4:	ldr	ip, [lr, #4]
   2b4c8:	add	r3, r3, #1
   2b4cc:	cmp	ip, r3
   2b4d0:	bhi	2b4b8 <myhtml_tree_open_elements_find@@Base+0x2c>
   2b4d4:	mov	r0, #0
   2b4d8:	pop	{pc}		; (ldr pc, [sp], #4)
   2b4dc:	mov	r3, #0
   2b4e0:	cmp	r2, #0
   2b4e4:	beq	2b4f4 <myhtml_tree_open_elements_find@@Base+0x68>
   2b4e8:	str	r3, [r2]
   2b4ec:	mov	r0, #1
   2b4f0:	pop	{pc}		; (ldr pc, [sp], #4)
   2b4f4:	mov	r0, #1
   2b4f8:	pop	{pc}		; (ldr pc, [sp], #4)

0002b4fc <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base>:
   2b4fc:	ldr	r0, [r0, #128]	; 0x80
   2b500:	push	{r4, lr}
   2b504:	ldr	ip, [r0, #4]
   2b508:	ldr	lr, [r0]
   2b50c:	cmp	ip, #0
   2b510:	beq	2b578 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x7c>
   2b514:	cmp	r2, #0
   2b518:	add	lr, lr, ip, lsl #2
   2b51c:	bne	2b52c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x30>
   2b520:	b	2b560 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x64>
   2b524:	cmp	ip, #0
   2b528:	beq	2b578 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x7c>
   2b52c:	ldr	r0, [lr, #-4]!
   2b530:	sub	ip, ip, #1
   2b534:	ldr	r4, [r0, #4]
   2b538:	cmp	r4, r1
   2b53c:	bne	2b524 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x28>
   2b540:	ldr	r4, [r0, #8]
   2b544:	cmp	r2, r4
   2b548:	bne	2b524 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x28>
   2b54c:	cmp	r3, #0
   2b550:	strne	ip, [r3]
   2b554:	pop	{r4, pc}
   2b558:	cmp	ip, #0
   2b55c:	beq	2b578 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x7c>
   2b560:	ldr	r0, [lr, #-4]!
   2b564:	sub	ip, ip, #1
   2b568:	ldr	r2, [r0, #4]
   2b56c:	cmp	r2, r1
   2b570:	bne	2b558 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x5c>
   2b574:	b	2b54c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x50>
   2b578:	mov	r0, ip
   2b57c:	pop	{r4, pc}

0002b580 <myhtml_tree_open_elements_find_by_tag_idx@@Base>:
   2b580:	push	{r4, r5, lr}
   2b584:	ldr	r5, [r0, #128]	; 0x80
   2b588:	ldr	r0, [r5, #4]
   2b58c:	ldr	lr, [r5]
   2b590:	cmp	r0, #0
   2b594:	popeq	{r4, r5, pc}
   2b598:	cmp	r2, #0
   2b59c:	sub	lr, lr, #4
   2b5a0:	beq	2b5ec <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x6c>
   2b5a4:	mov	ip, #0
   2b5a8:	b	2b5bc <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x3c>
   2b5ac:	ldr	r0, [r5, #4]
   2b5b0:	add	ip, ip, #1
   2b5b4:	cmp	ip, r0
   2b5b8:	bcs	2b5e4 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x64>
   2b5bc:	ldr	r0, [lr, #4]!
   2b5c0:	ldr	r4, [r0, #4]
   2b5c4:	cmp	r1, r4
   2b5c8:	bne	2b5ac <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x2c>
   2b5cc:	ldr	r4, [r0, #8]
   2b5d0:	cmp	r2, r4
   2b5d4:	bne	2b5ac <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x2c>
   2b5d8:	cmp	r3, #0
   2b5dc:	strne	ip, [r3]
   2b5e0:	pop	{r4, r5, pc}
   2b5e4:	mov	r0, #0
   2b5e8:	pop	{r4, r5, pc}
   2b5ec:	mov	ip, r2
   2b5f0:	b	2b604 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x84>
   2b5f4:	ldr	r2, [r5, #4]
   2b5f8:	add	ip, ip, #1
   2b5fc:	cmp	r2, ip
   2b600:	bls	2b5e4 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x64>
   2b604:	ldr	r0, [lr, #4]!
   2b608:	ldr	r2, [r0, #4]
   2b60c:	cmp	r2, r1
   2b610:	bne	2b5f4 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x74>
   2b614:	b	2b5d8 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x58>

0002b618 <myhtml_tree_generate_implied_end_tags@@Base>:
   2b618:	ldr	r3, [r0, #128]	; 0x80
   2b61c:	ldr	ip, [r3, #4]
   2b620:	cmp	ip, #0
   2b624:	bxeq	lr
   2b628:	ldr	r3, [r3, #4]
   2b62c:	cmp	r3, #0
   2b630:	bxeq	lr
   2b634:	cmp	r2, #0
   2b638:	push	{r4, r5, r6, lr}
   2b63c:	mov	r6, r2
   2b640:	mov	r5, r1
   2b644:	mov	r4, r0
   2b648:	beq	2b7e4 <myhtml_tree_generate_implied_end_tags@@Base+0x1cc>
   2b64c:	mov	r0, r4
   2b650:	bl	10628 <myhtml_tree_current_node@plt>
   2b654:	mov	lr, r0
   2b658:	mov	r0, r4
   2b65c:	ldr	ip, [lr, #4]
   2b660:	sub	r3, ip, #36	; 0x24
   2b664:	cmp	r3, #72	; 0x48
   2b668:	addls	pc, pc, r3, lsl #2
   2b66c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b670:	b	2b794 <myhtml_tree_generate_implied_end_tags@@Base+0x17c>
   2b674:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b678:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b67c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b680:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b684:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b688:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b68c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b690:	b	2b794 <myhtml_tree_generate_implied_end_tags@@Base+0x17c>
   2b694:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b698:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b69c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6a0:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6a4:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6a8:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6ac:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6b0:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6b4:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6b8:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6bc:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6c0:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6c4:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6c8:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6cc:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6d0:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6d4:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6d8:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6dc:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6e0:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6e4:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6e8:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6ec:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6f0:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6f4:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6f8:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b6fc:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b700:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b704:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b708:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b70c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b710:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b714:	b	2b794 <myhtml_tree_generate_implied_end_tags@@Base+0x17c>
   2b718:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b71c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b720:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b724:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b728:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b72c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b730:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b734:	b	2b794 <myhtml_tree_generate_implied_end_tags@@Base+0x17c>
   2b738:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b73c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b740:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b744:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b748:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b74c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b750:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b754:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b758:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b75c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b760:	b	2b794 <myhtml_tree_generate_implied_end_tags@@Base+0x17c>
   2b764:	b	2b794 <myhtml_tree_generate_implied_end_tags@@Base+0x17c>
   2b768:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b76c:	b	2b794 <myhtml_tree_generate_implied_end_tags@@Base+0x17c>
   2b770:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b774:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b778:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b77c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b780:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b784:	b	2b794 <myhtml_tree_generate_implied_end_tags@@Base+0x17c>
   2b788:	b	2b794 <myhtml_tree_generate_implied_end_tags@@Base+0x17c>
   2b78c:	b	2b794 <myhtml_tree_generate_implied_end_tags@@Base+0x17c>
   2b790:	b	2b794 <myhtml_tree_generate_implied_end_tags@@Base+0x17c>
   2b794:	cmp	r5, ip
   2b798:	bne	2b7a8 <myhtml_tree_generate_implied_end_tags@@Base+0x190>
   2b79c:	ldr	r3, [lr, #8]
   2b7a0:	cmp	r6, r3
   2b7a4:	popeq	{r4, r5, r6, pc}
   2b7a8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2b7ac:	ldr	r3, [r4, #128]	; 0x80
   2b7b0:	ldr	r3, [r3, #4]
   2b7b4:	cmp	r3, #0
   2b7b8:	bne	2b64c <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2b7bc:	pop	{r4, r5, r6, pc}
   2b7c0:	cmp	r5, r3
   2b7c4:	mov	r0, r4
   2b7c8:	popeq	{r4, r5, r6, pc}
   2b7cc:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2b7d0:	ldr	r3, [r4, #128]	; 0x80
   2b7d4:	ldr	r3, [r3, #4]
   2b7d8:	cmp	r3, #0
   2b7dc:	bne	2b7e4 <myhtml_tree_generate_implied_end_tags@@Base+0x1cc>
   2b7e0:	pop	{r4, r5, r6, pc}
   2b7e4:	mov	r0, r4
   2b7e8:	bl	10628 <myhtml_tree_current_node@plt>
   2b7ec:	ldr	r3, [r0, #4]
   2b7f0:	sub	r2, r3, #36	; 0x24
   2b7f4:	cmp	r2, #72	; 0x48
   2b7f8:	addls	pc, pc, r2, lsl #2
   2b7fc:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b800:	b	2b7c0 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2b804:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b808:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b80c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b810:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b814:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b818:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b81c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b820:	b	2b7c0 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2b824:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b828:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b82c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b830:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b834:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b838:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b83c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b840:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b844:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b848:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b84c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b850:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b854:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b858:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b85c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b860:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b864:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b868:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b86c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b870:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b874:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b878:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b87c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b880:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b884:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b888:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b88c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b890:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b894:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b898:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b89c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8a0:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8a4:	b	2b7c0 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2b8a8:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8ac:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8b0:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8b4:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8b8:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8bc:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8c0:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8c4:	b	2b7c0 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2b8c8:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8cc:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8d0:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8d4:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8d8:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8dc:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8e0:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8e4:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8e8:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8ec:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8f0:	b	2b7c0 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2b8f4:	b	2b7c0 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2b8f8:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b8fc:	b	2b7c0 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2b900:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b904:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b908:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b90c:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b910:	b	2b7e0 <myhtml_tree_generate_implied_end_tags@@Base+0x1c8>
   2b914:	b	2b7c0 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2b918:	b	2b7c0 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2b91c:	b	2b7c0 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2b920:	b	2b7c0 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>

0002b924 <myhtml_tree_generate_all_implied_end_tags@@Base>:
   2b924:	ldr	r3, [r0, #128]	; 0x80
   2b928:	ldr	ip, [r3, #4]
   2b92c:	cmp	ip, #0
   2b930:	bxeq	lr
   2b934:	ldr	r3, [r3, #4]
   2b938:	cmp	r3, #0
   2b93c:	bxeq	lr
   2b940:	cmp	r2, #0
   2b944:	push	{r4, r5, r6, lr}
   2b948:	mov	r6, r2
   2b94c:	mov	r5, r1
   2b950:	mov	r4, r0
   2b954:	beq	2bb80 <myhtml_tree_generate_all_implied_end_tags@@Base+0x25c>
   2b958:	mov	r0, r4
   2b95c:	bl	10628 <myhtml_tree_current_node@plt>
   2b960:	mov	lr, r0
   2b964:	mov	r0, r4
   2b968:	ldr	ip, [lr, #4]
   2b96c:	sub	r3, ip, #27
   2b970:	cmp	r3, #108	; 0x6c
   2b974:	addls	pc, pc, r3, lsl #2
   2b978:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b97c:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2b980:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b984:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b988:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b98c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b990:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2b994:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b998:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b99c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9a0:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2b9a4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9a8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9ac:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9b0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9b4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9b8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9bc:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9c0:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2b9c4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9c8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9cc:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9d0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9d4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9d8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9dc:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9e0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9e4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9e8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9ec:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9f0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9f4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9f8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2b9fc:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba00:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba04:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba08:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba0c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba10:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba14:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba18:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba1c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba20:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba24:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba28:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba2c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba30:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba34:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba38:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba3c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba40:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba44:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2ba48:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba4c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba50:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba54:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba58:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba5c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba60:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba64:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba68:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba6c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba70:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba74:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba78:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba7c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba80:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba84:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba88:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba8c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba90:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2ba94:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2ba98:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2ba9c:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2baa0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2baa4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2baa8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2baac:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bab0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bab4:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2bab8:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2babc:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2bac0:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2bac4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bac8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bacc:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bad0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bad4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bad8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2badc:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bae0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bae4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bae8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2baec:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2baf0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2baf4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2baf8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bafc:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bb00:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bb04:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bb08:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2bb0c:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2bb10:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bb14:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bb18:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2bb1c:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2bb20:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2bb24:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bb28:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bb2c:	b	2bb30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x20c>
   2bb30:	cmp	r5, ip
   2bb34:	bne	2bb44 <myhtml_tree_generate_all_implied_end_tags@@Base+0x220>
   2bb38:	ldr	r3, [lr, #8]
   2bb3c:	cmp	r6, r3
   2bb40:	popeq	{r4, r5, r6, pc}
   2bb44:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2bb48:	ldr	r3, [r4, #128]	; 0x80
   2bb4c:	ldr	r3, [r3, #4]
   2bb50:	cmp	r3, #0
   2bb54:	bne	2b958 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2bb58:	pop	{r4, r5, r6, pc}
   2bb5c:	cmp	r3, r5
   2bb60:	mov	r0, r4
   2bb64:	popeq	{r4, r5, r6, pc}
   2bb68:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2bb6c:	ldr	r3, [r4, #128]	; 0x80
   2bb70:	ldr	r3, [r3, #4]
   2bb74:	cmp	r3, #0
   2bb78:	bne	2bb80 <myhtml_tree_generate_all_implied_end_tags@@Base+0x25c>
   2bb7c:	pop	{r4, r5, r6, pc}
   2bb80:	mov	r0, r4
   2bb84:	bl	10628 <myhtml_tree_current_node@plt>
   2bb88:	ldr	r3, [r0, #4]
   2bb8c:	sub	r2, r3, #27
   2bb90:	cmp	r2, #108	; 0x6c
   2bb94:	addls	pc, pc, r2, lsl #2
   2bb98:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bb9c:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bba0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bba4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bba8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbac:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbb0:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bbb4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbb8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbbc:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbc0:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bbc4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbc8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbcc:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbd0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbd4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbd8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbdc:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbe0:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bbe4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbe8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbec:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbf0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbf4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbf8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bbfc:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc00:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc04:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc08:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc0c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc10:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc14:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc18:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc1c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc20:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc24:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc28:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc2c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc30:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc34:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc38:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc3c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc40:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc44:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc48:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc4c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc50:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc54:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc58:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc5c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc60:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc64:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bc68:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc6c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc70:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc74:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc78:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc7c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc80:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc84:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc88:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc8c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc90:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc94:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc98:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bc9c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bca0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bca4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bca8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bcac:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bcb0:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bcb4:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bcb8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bcbc:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bcc0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bcc4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bcc8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bccc:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bcd0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bcd4:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bcd8:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bcdc:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bce0:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bce4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bce8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bcec:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bcf0:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bcf4:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bcf8:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bcfc:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd00:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd04:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd08:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd0c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd10:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd14:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd18:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd1c:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd20:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd24:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd28:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bd2c:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bd30:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd34:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd38:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bd3c:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bd40:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2bd44:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd48:	b	2bb7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x258>
   2bd4c:	b	2bb5c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>

0002bd50 <myhtml_tree_reset_insertion_mode_appropriately@@Base>:
   2bd50:	ldr	r2, [r0, #128]	; 0x80
   2bd54:	ldr	r3, [r2, #4]
   2bd58:	cmp	r3, #0
   2bd5c:	bxeq	lr
   2bd60:	ldr	r3, [r2, #4]
   2bd64:	push	{r4, r5, r6, r7, lr}
   2bd68:	cmp	r3, #0
   2bd6c:	ldr	r5, [r2]
   2bd70:	beq	2c060 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x310>
   2bd74:	add	r2, r5, r3, lsl #2
   2bd78:	subs	lr, r3, #1
   2bd7c:	mov	r4, #0
   2bd80:	mov	r7, #1
   2bd84:	ldr	r1, [r2, #-4]!
   2bd88:	beq	2bf8c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x23c>
   2bd8c:	ldr	ip, [r1, #8]
   2bd90:	mov	r6, r4
   2bd94:	cmp	ip, #1
   2bd98:	bne	2bf7c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x22c>
   2bd9c:	ldr	r1, [r1, #4]
   2bda0:	cmp	r1, #114	; 0x72
   2bda4:	sub	ip, r1, #23
   2bda8:	beq	2c06c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x31c>
   2bdac:	cmp	ip, #112	; 0x70
   2bdb0:	addls	pc, pc, ip, lsl #2
   2bdb4:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bdb8:	b	2bfa4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x254>
   2bdbc:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bdc0:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bdc4:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bdc8:	b	2bfbc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2bdcc:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bdd0:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bdd4:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bdd8:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bddc:	b	2bfc8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x278>
   2bde0:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bde4:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bde8:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bdec:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bdf0:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bdf4:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bdf8:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bdfc:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be00:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be04:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be08:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be0c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be10:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be14:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be18:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be1c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be20:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be24:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be28:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be2c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be30:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be34:	b	2bfd4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x284>
   2be38:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be3c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be40:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be44:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be48:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be4c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be50:	b	2bfe0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x290>
   2be54:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be58:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be5c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be60:	b	2bff4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2a4>
   2be64:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be68:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be6c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be70:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be74:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be78:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be7c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be80:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be84:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be88:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be8c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be90:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be94:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be98:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2be9c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bea0:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bea4:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bea8:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2beac:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2beb0:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2beb4:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2beb8:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bebc:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bec0:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bec4:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bec8:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2becc:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bed0:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bed4:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bed8:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bedc:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bee0:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bee4:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bee8:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2beec:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bef0:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bef4:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bef8:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2befc:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf00:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf04:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf08:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf0c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf10:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf14:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf18:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf1c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf20:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf24:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf28:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf2c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf30:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf34:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf38:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf3c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf40:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf44:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf48:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf4c:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf50:	b	2c00c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2bc>
   2bf54:	b	2c018 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c8>
   2bf58:	b	2c024 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2d4>
   2bf5c:	b	2c038 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2e8>
   2bf60:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf64:	b	2c018 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c8>
   2bf68:	b	2c024 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2d4>
   2bf6c:	b	2c018 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c8>
   2bf70:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf74:	b	2c050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2bf78:	b	2bfb0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x260>
   2bf7c:	mov	r3, lr
   2bf80:	subs	lr, r3, #1
   2bf84:	ldr	r1, [r2, #-4]!
   2bf88:	bne	2bd8c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3c>
   2bf8c:	ldr	ip, [r0, #88]	; 0x58
   2bf90:	cmp	ip, #0
   2bf94:	moveq	ip, r1
   2bf98:	ldr	r1, [ip, #8]
   2bf9c:	cmp	r1, #1
   2bfa0:	beq	2c0e0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x390>
   2bfa4:	mov	r3, #6
   2bfa8:	str	r3, [r0, #168]	; 0xa8
   2bfac:	pop	{r4, r5, r6, r7, pc}
   2bfb0:	mov	r3, #13
   2bfb4:	str	r3, [r0, #168]	; 0xa8
   2bfb8:	pop	{r4, r5, r6, r7, pc}
   2bfbc:	mov	r3, #10
   2bfc0:	str	r3, [r0, #168]	; 0xa8
   2bfc4:	pop	{r4, r5, r6, r7, pc}
   2bfc8:	mov	r3, #11
   2bfcc:	str	r3, [r0, #168]	; 0xa8
   2bfd0:	pop	{r4, r5, r6, r7, pc}
   2bfd4:	mov	r3, #19
   2bfd8:	str	r3, [r0, #168]	; 0xa8
   2bfdc:	pop	{r4, r5, r6, r7, pc}
   2bfe0:	cmp	r6, #0
   2bfe4:	bne	2bfa4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x254>
   2bfe8:	mov	r3, #3
   2bfec:	str	r3, [r0, #168]	; 0xa8
   2bff0:	pop	{r4, r5, r6, r7, pc}
   2bff4:	ldr	r3, [r0, #92]	; 0x5c
   2bff8:	cmp	r3, #0
   2bffc:	movne	r3, #5
   2c000:	moveq	r3, #2
   2c004:	str	r3, [r0, #168]	; 0xa8
   2c008:	pop	{r4, r5, r6, r7, pc}
   2c00c:	mov	r3, #8
   2c010:	str	r3, [r0, #168]	; 0xa8
   2c014:	pop	{r4, r5, r6, r7, pc}
   2c018:	mov	r3, #12
   2c01c:	str	r3, [r0, #168]	; 0xa8
   2c020:	pop	{r4, r5, r6, r7, pc}
   2c024:	cmp	r6, #0
   2c028:	bne	2bfa4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x254>
   2c02c:	mov	r3, #14
   2c030:	str	r3, [r0, #168]	; 0xa8
   2c034:	pop	{r4, r5, r6, r7, pc}
   2c038:	ldr	r2, [r0, #140]	; 0x8c
   2c03c:	ldm	r2, {r2, r3}
   2c040:	sub	r3, r3, #-1073741823	; 0xc0000001
   2c044:	ldr	r3, [r2, r3, lsl #2]
   2c048:	str	r3, [r0, #168]	; 0xa8
   2c04c:	pop	{r4, r5, r6, r7, pc}
   2c050:	cmp	r6, #0
   2c054:	bne	2bfa4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x254>
   2c058:	cmp	lr, #0
   2c05c:	bne	2bf7c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x22c>
   2c060:	mov	r3, #0
   2c064:	str	r3, [r0, #168]	; 0xa8
   2c068:	pop	{r4, r5, r6, r7, pc}
   2c06c:	cmp	r6, #0
   2c070:	bne	2c0c8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x378>
   2c074:	cmp	lr, #0
   2c078:	beq	2c0c8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x378>
   2c07c:	sub	r2, r3, #2
   2c080:	ldr	r1, [r5, r2, lsl #2]
   2c084:	ldr	r1, [r1, #4]
   2c088:	cmp	r1, #128	; 0x80
   2c08c:	beq	2c0c8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x378>
   2c090:	cmp	r1, #125	; 0x7d
   2c094:	subne	r3, r3, #-1073741822	; 0xc0000002
   2c098:	addne	r3, r5, r3, lsl #2
   2c09c:	bne	2c0c0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x370>
   2c0a0:	b	2c0d4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x384>
   2c0a4:	ldr	r1, [r3, #-4]!
   2c0a8:	sub	r2, r2, #1
   2c0ac:	ldr	r1, [r1, #4]
   2c0b0:	cmp	r1, #128	; 0x80
   2c0b4:	beq	2c0c8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x378>
   2c0b8:	cmp	r1, #125	; 0x7d
   2c0bc:	beq	2c0d4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x384>
   2c0c0:	cmp	r2, #0
   2c0c4:	bne	2c0a4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x354>
   2c0c8:	mov	r3, #15
   2c0cc:	str	r3, [r0, #168]	; 0xa8
   2c0d0:	pop	{r4, r5, r6, r7, pc}
   2c0d4:	mov	r3, #16
   2c0d8:	str	r3, [r0, #168]	; 0xa8
   2c0dc:	pop	{r4, r5, r6, r7, pc}
   2c0e0:	mov	r1, ip
   2c0e4:	mov	r6, r7
   2c0e8:	b	2bd9c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x4c>

0002c0ec <myhtml_tree_active_formatting_init@@Base>:
   2c0ec:	b	1085c <myhtml_tree_list_init@plt>

0002c0f0 <myhtml_tree_active_formatting_clean@@Base>:
   2c0f0:	ldr	r3, [r0, #124]	; 0x7c
   2c0f4:	mov	r2, #0
   2c0f8:	str	r2, [r3, #4]
   2c0fc:	bx	lr

0002c100 <myhtml_tree_active_formatting_destroy@@Base>:
   2c100:	ldr	r0, [r0, #124]	; 0x7c
   2c104:	mov	r1, #1
   2c108:	b	106f4 <myhtml_tree_list_destroy@plt>

0002c10c <myhtml_tree_active_formatting_is_marker@@Base>:
   2c10c:	ldr	r3, [r0]
   2c110:	ldr	r3, [r3, #36]	; 0x24
   2c114:	cmp	r3, r1
   2c118:	beq	2c164 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2c11c:	ldr	r3, [r1, #4]
   2c120:	cmp	r3, #83	; 0x53
   2c124:	beq	2c164 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2c128:	bhi	2c14c <myhtml_tree_active_formatting_is_marker@@Base+0x40>
   2c12c:	cmp	r3, #25
   2c130:	beq	2c164 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2c134:	cmp	r3, #27
   2c138:	beq	2c164 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2c13c:	cmp	r3, #9
   2c140:	beq	2c164 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2c144:	mov	r0, #0
   2c148:	bx	lr
   2c14c:	cmp	r3, #127	; 0x7f
   2c150:	beq	2c164 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2c154:	cmp	r3, #131	; 0x83
   2c158:	beq	2c164 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2c15c:	cmp	r3, #94	; 0x5e
   2c160:	bne	2c144 <myhtml_tree_active_formatting_is_marker@@Base+0x38>
   2c164:	mov	r0, #1
   2c168:	bx	lr

0002c16c <myhtml_tree_active_formatting_append@@Base>:
   2c16c:	ldr	r0, [r0, #124]	; 0x7c
   2c170:	b	10220 <myhtml_tree_list_append@plt>

0002c174 <myhtml_tree_active_formatting_pop@@Base>:
   2c174:	ldr	r3, [r0, #124]	; 0x7c
   2c178:	ldr	r2, [r3, #4]
   2c17c:	cmp	r2, #0
   2c180:	ldrne	r2, [r3, #4]
   2c184:	subne	r2, r2, #1
   2c188:	strne	r2, [r3, #4]
   2c18c:	bx	lr

0002c190 <myhtml_tree_active_formatting_remove@@Base>:
   2c190:	push	{r4, r5, r6, lr}
   2c194:	ldr	r5, [r0, #124]	; 0x7c
   2c198:	ldr	r3, [r5, #4]
   2c19c:	ldr	r4, [r5]
   2c1a0:	cmp	r3, #0
   2c1a4:	popeq	{r4, r5, r6, pc}
   2c1a8:	sub	r2, r3, #1
   2c1ac:	ldr	lr, [r4, r2, lsl #2]
   2c1b0:	add	ip, r4, r2, lsl #2
   2c1b4:	cmp	r1, lr
   2c1b8:	subne	r3, r3, #-1073741822	; 0xc0000002
   2c1bc:	addne	r3, r4, r3, lsl #2
   2c1c0:	bne	2c1e0 <myhtml_tree_active_formatting_remove@@Base+0x50>
   2c1c4:	b	2c1f0 <myhtml_tree_active_formatting_remove@@Base+0x60>
   2c1c8:	ldr	lr, [ip]
   2c1cc:	sub	r3, r3, #4
   2c1d0:	cmp	lr, r1
   2c1d4:	sub	lr, r2, #1
   2c1d8:	beq	2c1f8 <myhtml_tree_active_formatting_remove@@Base+0x68>
   2c1dc:	mov	r2, lr
   2c1e0:	cmp	r2, #0
   2c1e4:	mov	ip, r3
   2c1e8:	bne	2c1c8 <myhtml_tree_active_formatting_remove@@Base+0x38>
   2c1ec:	pop	{r4, r5, r6, pc}
   2c1f0:	mov	lr, r2
   2c1f4:	mov	r2, r3
   2c1f8:	ldr	r3, [r5, #4]
   2c1fc:	add	r1, r4, r2, lsl #2
   2c200:	sub	r2, r3, lr
   2c204:	mov	r6, r0
   2c208:	lsl	r2, r2, #2
   2c20c:	mov	r0, ip
   2c210:	bl	fe78 <memmove@plt>
   2c214:	ldr	r2, [r6, #124]	; 0x7c
   2c218:	ldr	r3, [r2, #4]
   2c21c:	sub	r3, r3, #1
   2c220:	str	r3, [r2, #4]
   2c224:	pop	{r4, r5, r6, pc}

0002c228 <myhtml_tree_active_formatting_remove_by_index@@Base>:
   2c228:	push	{r4, lr}
   2c22c:	mov	r4, r0
   2c230:	ldr	r0, [r0, #124]	; 0x7c
   2c234:	lsl	r3, r1, #2
   2c238:	add	ip, r3, #4
   2c23c:	ldr	r2, [r0, #4]
   2c240:	ldr	r0, [r0]
   2c244:	sub	r2, r2, r1
   2c248:	add	r1, r0, ip
   2c24c:	lsl	r2, r2, #2
   2c250:	add	r0, r0, r3
   2c254:	bl	fe78 <memmove@plt>
   2c258:	ldr	r2, [r4, #124]	; 0x7c
   2c25c:	ldr	r3, [r2, #4]
   2c260:	sub	r3, r3, #1
   2c264:	str	r3, [r2, #4]
   2c268:	pop	{r4, pc}

0002c26c <myhtml_tree_active_formatting_append_with_check@@Base>:
   2c26c:	ldr	r2, [r0, #124]	; 0x7c
   2c270:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2c274:	mov	r6, r0
   2c278:	ldr	r3, [r2, #4]
   2c27c:	mov	r7, r1
   2c280:	cmp	r3, #0
   2c284:	ldr	r4, [r2]
   2c288:	beq	2c350 <myhtml_tree_active_formatting_append_with_check@@Base+0xe4>
   2c28c:	sub	r5, r3, #1
   2c290:	add	r4, r4, r3, lsl #2
   2c294:	mov	r9, r5
   2c298:	mov	r8, #0
   2c29c:	b	2c2b0 <myhtml_tree_active_formatting_append_with_check@@Base+0x44>
   2c2a0:	cmp	r5, #0
   2c2a4:	sub	r4, r4, #4
   2c2a8:	beq	2c33c <myhtml_tree_active_formatting_append_with_check@@Base+0xd0>
   2c2ac:	sub	r5, r5, #1
   2c2b0:	ldr	r1, [r4, #-4]
   2c2b4:	mov	r0, r6
   2c2b8:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2c2bc:	cmp	r0, #0
   2c2c0:	bne	2c33c <myhtml_tree_active_formatting_append_with_check@@Base+0xd0>
   2c2c4:	ldr	r3, [r4, #-4]
   2c2c8:	ldr	r3, [r3, #32]
   2c2cc:	subs	r1, r3, #0
   2c2d0:	beq	2c2a0 <myhtml_tree_active_formatting_append_with_check@@Base+0x34>
   2c2d4:	ldr	r3, [r7, #32]
   2c2d8:	cmp	r3, #0
   2c2dc:	beq	2c2a0 <myhtml_tree_active_formatting_append_with_check@@Base+0x34>
   2c2e0:	ldr	r0, [r6, #8]
   2c2e4:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   2c2e8:	ldr	r1, [r7, #32]
   2c2ec:	ldr	r0, [r6, #8]
   2c2f0:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   2c2f4:	ldr	r3, [r4, #-4]
   2c2f8:	ldr	r2, [r7, #8]
   2c2fc:	ldr	r1, [r3, #8]
   2c300:	cmp	r1, r2
   2c304:	bne	2c2a0 <myhtml_tree_active_formatting_append_with_check@@Base+0x34>
   2c308:	ldr	r1, [r3, #4]
   2c30c:	ldr	r2, [r7, #4]
   2c310:	cmp	r1, r2
   2c314:	bne	2c2a0 <myhtml_tree_active_formatting_append_with_check@@Base+0x34>
   2c318:	ldr	r0, [r3, #32]
   2c31c:	ldr	r1, [r7, #32]
   2c320:	bl	10b2c <myhtml_token_attr_compare@plt>
   2c324:	sub	r4, r4, #4
   2c328:	cmp	r0, #0
   2c32c:	addne	r8, r8, #1
   2c330:	movne	r9, r5
   2c334:	cmp	r5, #0
   2c338:	bne	2c2ac <myhtml_tree_active_formatting_append_with_check@@Base+0x40>
   2c33c:	cmp	r8, #2
   2c340:	bls	2c350 <myhtml_tree_active_formatting_append_with_check@@Base+0xe4>
   2c344:	mov	r1, r9
   2c348:	mov	r0, r6
   2c34c:	bl	10844 <myhtml_tree_active_formatting_remove_by_index@plt>
   2c350:	mov	r1, r7
   2c354:	mov	r0, r6
   2c358:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2c35c:	b	100d0 <myhtml_tree_active_formatting_append@plt>

0002c360 <myhtml_tree_active_formatting_current_node@@Base>:
   2c360:	ldr	r3, [r0, #124]	; 0x7c
   2c364:	ldr	r0, [r3, #4]
   2c368:	cmp	r0, #0
   2c36c:	ldrne	r2, [r3, #4]
   2c370:	ldrne	r1, [r3]
   2c374:	subne	r3, r2, #-1073741823	; 0xc0000001
   2c378:	ldrne	r0, [r1, r3, lsl #2]
   2c37c:	bx	lr

0002c380 <myhtml_tree_active_formatting_find@@Base>:
   2c380:	ldr	r3, [r0, #124]	; 0x7c
   2c384:	ldr	ip, [r3, #4]
   2c388:	ldr	r3, [r3]
   2c38c:	cmp	ip, #0
   2c390:	beq	2c3ec <myhtml_tree_active_formatting_find@@Base+0x6c>
   2c394:	sub	r0, ip, #1
   2c398:	push	{lr}		; (str lr, [sp, #-4]!)
   2c39c:	ldr	lr, [r3, r0, lsl #2]
   2c3a0:	cmp	r1, lr
   2c3a4:	subne	ip, ip, #-1073741823	; 0xc0000001
   2c3a8:	addne	r3, r3, ip, lsl #2
   2c3ac:	bne	2c3c4 <myhtml_tree_active_formatting_find@@Base+0x44>
   2c3b0:	b	2c3d0 <myhtml_tree_active_formatting_find@@Base+0x50>
   2c3b4:	ldr	ip, [r3, #-4]!
   2c3b8:	sub	r0, r0, #1
   2c3bc:	cmp	ip, r1
   2c3c0:	beq	2c3d0 <myhtml_tree_active_formatting_find@@Base+0x50>
   2c3c4:	cmp	r0, #0
   2c3c8:	bne	2c3b4 <myhtml_tree_active_formatting_find@@Base+0x34>
   2c3cc:	pop	{pc}		; (ldr pc, [sp], #4)
   2c3d0:	cmp	r2, #0
   2c3d4:	beq	2c3e4 <myhtml_tree_active_formatting_find@@Base+0x64>
   2c3d8:	str	r0, [r2]
   2c3dc:	mov	r0, #1
   2c3e0:	pop	{pc}		; (ldr pc, [sp], #4)
   2c3e4:	mov	r0, #1
   2c3e8:	pop	{pc}		; (ldr pc, [sp], #4)
   2c3ec:	mov	r0, ip
   2c3f0:	bx	lr

0002c3f4 <myhtml_tree_active_formatting_up_to_last_marker@@Base>:
   2c3f4:	ldr	r3, [r0, #124]	; 0x7c
   2c3f8:	ldr	r2, [r3, #4]
   2c3fc:	cmp	r2, #0
   2c400:	bxeq	lr
   2c404:	push	{r4, r5, r6, lr}
   2c408:	mov	r4, r0
   2c40c:	ldr	r5, [r3]
   2c410:	b	2c438 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x44>
   2c414:	ldr	r2, [r3, #4]
   2c418:	sub	r2, r2, #1
   2c41c:	str	r2, [r3, #4]
   2c420:	ldr	r3, [r3, #4]
   2c424:	ldr	r1, [r5, r3, lsl #2]
   2c428:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2c42c:	cmp	r0, #0
   2c430:	popne	{r4, r5, r6, pc}
   2c434:	ldr	r3, [r4, #124]	; 0x7c
   2c438:	ldr	r2, [r3, #4]
   2c43c:	mov	r0, r4
   2c440:	cmp	r2, #0
   2c444:	bne	2c414 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x20>
   2c448:	pop	{r4, r5, r6, pc}

0002c44c <myhtml_tree_active_formatting_between_last_marker@@Base>:
   2c44c:	ldr	r3, [r0, #124]	; 0x7c
   2c450:	push	{r4, r5, r6, r7, r8, lr}
   2c454:	ldr	r4, [r3, #4]
   2c458:	ldr	r5, [r3]
   2c45c:	cmp	r4, #0
   2c460:	movne	r8, r2
   2c464:	movne	r7, r1
   2c468:	movne	r6, r0
   2c46c:	addne	r5, r5, r4, lsl #2
   2c470:	bne	2c480 <myhtml_tree_active_formatting_between_last_marker@@Base+0x34>
   2c474:	b	2c4c0 <myhtml_tree_active_formatting_between_last_marker@@Base+0x74>
   2c478:	cmp	r4, #0
   2c47c:	beq	2c4c0 <myhtml_tree_active_formatting_between_last_marker@@Base+0x74>
   2c480:	ldr	r1, [r5, #-4]
   2c484:	mov	r0, r6
   2c488:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2c48c:	sub	r4, r4, #1
   2c490:	cmp	r0, #0
   2c494:	bne	2c4c0 <myhtml_tree_active_formatting_between_last_marker@@Base+0x74>
   2c498:	ldr	r0, [r5, #-4]!
   2c49c:	ldr	r3, [r0, #4]
   2c4a0:	cmp	r3, r7
   2c4a4:	bne	2c478 <myhtml_tree_active_formatting_between_last_marker@@Base+0x2c>
   2c4a8:	ldr	r3, [r0, #8]
   2c4ac:	cmp	r3, #1
   2c4b0:	bne	2c478 <myhtml_tree_active_formatting_between_last_marker@@Base+0x2c>
   2c4b4:	cmp	r8, #0
   2c4b8:	strne	r4, [r8]
   2c4bc:	pop	{r4, r5, r6, r7, r8, pc}
   2c4c0:	mov	r0, #0
   2c4c4:	pop	{r4, r5, r6, r7, r8, pc}

0002c4c8 <myhtml_tree_appropriate_place_inserting@@Base>:
   2c4c8:	push	{r4, r5, r6, r7, lr}
   2c4cc:	mov	r3, #0
   2c4d0:	subs	r4, r1, #0
   2c4d4:	sub	sp, sp, #12
   2c4d8:	mov	r6, r2
   2c4dc:	str	r3, [r2]
   2c4e0:	mov	r5, r0
   2c4e4:	beq	2c598 <myhtml_tree_appropriate_place_inserting@@Base+0xd0>
   2c4e8:	ldrb	r3, [r5, #188]	; 0xbc
   2c4ec:	cmp	r3, #0
   2c4f0:	beq	2c500 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2c4f4:	ldr	r7, [r4, #8]
   2c4f8:	cmp	r7, #1
   2c4fc:	beq	2c50c <myhtml_tree_appropriate_place_inserting@@Base+0x44>
   2c500:	mov	r0, r4
   2c504:	add	sp, sp, #12
   2c508:	pop	{r4, r5, r6, r7, pc}
   2c50c:	ldr	r3, [r4, #4]
   2c510:	sub	r3, r3, #125	; 0x7d
   2c514:	cmp	r3, #10
   2c518:	bhi	2c500 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2c51c:	ldr	r2, [pc, #176]	; 2c5d4 <myhtml_tree_appropriate_place_inserting@@Base+0x10c>
   2c520:	ands	r3, r2, r7, lsl r3
   2c524:	beq	2c500 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2c528:	mov	r3, sp
   2c52c:	mov	r2, r7
   2c530:	mov	r1, #128	; 0x80
   2c534:	mov	r0, r5
   2c538:	bl	fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   2c53c:	mov	r2, r7
   2c540:	add	r3, sp, #4
   2c544:	mov	r1, #125	; 0x7d
   2c548:	mov	r4, r0
   2c54c:	mov	r0, r5
   2c550:	bl	fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   2c554:	cmp	r4, #0
   2c558:	beq	2c5a4 <myhtml_tree_appropriate_place_inserting@@Base+0xdc>
   2c55c:	cmp	r0, #0
   2c560:	beq	2c500 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2c564:	ldm	sp, {r2, r3}
   2c568:	cmp	r2, r3
   2c56c:	bhi	2c500 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2c570:	ldr	r3, [r0, #24]
   2c574:	cmp	r3, #0
   2c578:	beq	2c5bc <myhtml_tree_appropriate_place_inserting@@Base+0xf4>
   2c57c:	ldr	r4, [r0, #12]
   2c580:	cmp	r4, #0
   2c584:	movne	r3, #2
   2c588:	moveq	r3, #1
   2c58c:	moveq	r4, r0
   2c590:	str	r3, [r6]
   2c594:	b	2c500 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2c598:	bl	10628 <myhtml_tree_current_node@plt>
   2c59c:	mov	r4, r0
   2c5a0:	b	2c4e8 <myhtml_tree_appropriate_place_inserting@@Base+0x20>
   2c5a4:	cmp	r0, #0
   2c5a8:	bne	2c570 <myhtml_tree_appropriate_place_inserting@@Base+0xa8>
   2c5ac:	ldr	r3, [r5, #128]	; 0x80
   2c5b0:	ldr	r3, [r3]
   2c5b4:	ldr	r4, [r3]
   2c5b8:	b	2c500 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2c5bc:	ldr	r2, [r5, #128]	; 0x80
   2c5c0:	ldr	r3, [sp, #4]
   2c5c4:	ldr	r2, [r2]
   2c5c8:	sub	r3, r3, #-1073741823	; 0xc0000001
   2c5cc:	ldr	r4, [r2, r3, lsl #2]
   2c5d0:	b	2c500 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2c5d4:	andeq	r0, r0, r3, lsr #9

0002c5d8 <myhtml_tree_node_insert_by_token@@Base>:
   2c5d8:	push	{r4, r5, r6, r7, lr}
   2c5dc:	sub	sp, sp, #12
   2c5e0:	mov	r6, r1
   2c5e4:	mov	r7, r2
   2c5e8:	mov	r5, r0
   2c5ec:	bl	ffe0 <myhtml_tree_node_create@plt>
   2c5f0:	ldr	r3, [r6]
   2c5f4:	add	r2, sp, #4
   2c5f8:	mov	r1, #0
   2c5fc:	mov	r4, r0
   2c600:	mov	r0, r5
   2c604:	stmib	r4, {r3, r7}
   2c608:	str	r6, [r4, #32]
   2c60c:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2c610:	mov	r1, r4
   2c614:	ldr	r2, [sp, #4]
   2c618:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2c61c:	mov	r0, r5
   2c620:	mov	r1, r4
   2c624:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2c628:	mov	r0, r4
   2c62c:	add	sp, sp, #12
   2c630:	pop	{r4, r5, r6, r7, pc}

0002c634 <myhtml_tree_node_insert@@Base>:
   2c634:	push	{r4, r5, r6, r7, lr}
   2c638:	sub	sp, sp, #12
   2c63c:	mov	r7, r1
   2c640:	mov	r6, r2
   2c644:	mov	r5, r0
   2c648:	bl	ffe0 <myhtml_tree_node_create@plt>
   2c64c:	mov	r1, #0
   2c650:	add	r2, sp, #4
   2c654:	mov	r4, r0
   2c658:	str	r7, [r0, #4]
   2c65c:	str	r6, [r0, #8]
   2c660:	str	r1, [r0, #32]
   2c664:	mov	r0, r5
   2c668:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2c66c:	mov	r1, r4
   2c670:	ldr	r2, [sp, #4]
   2c674:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2c678:	mov	r0, r5
   2c67c:	mov	r1, r4
   2c680:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2c684:	mov	r0, r4
   2c688:	add	sp, sp, #12
   2c68c:	pop	{r4, r5, r6, r7, pc}

0002c690 <myhtml_tree_node_insert_comment@@Base>:
   2c690:	push	{r4, r5, r6, r7, lr}
   2c694:	sub	sp, sp, #12
   2c698:	mov	r5, r2
   2c69c:	mov	r6, r1
   2c6a0:	mov	r7, r0
   2c6a4:	bl	ffe0 <myhtml_tree_node_create@plt>
   2c6a8:	mov	r3, #2
   2c6ac:	mov	r2, #0
   2c6b0:	cmp	r5, #0
   2c6b4:	str	r2, [sp, #4]
   2c6b8:	mov	r4, r0
   2c6bc:	str	r6, [r0, #32]
   2c6c0:	str	r3, [r0, #4]
   2c6c4:	beq	2c6e8 <myhtml_tree_node_insert_comment@@Base+0x58>
   2c6c8:	mov	r0, r5
   2c6cc:	mov	r1, r4
   2c6d0:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2c6d4:	ldr	r3, [r5, #8]
   2c6d8:	mov	r0, r4
   2c6dc:	str	r3, [r4, #8]
   2c6e0:	add	sp, sp, #12
   2c6e4:	pop	{r4, r5, r6, r7, pc}
   2c6e8:	mov	r1, r5
   2c6ec:	add	r2, sp, #4
   2c6f0:	mov	r0, r7
   2c6f4:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2c6f8:	ldr	r2, [sp, #4]
   2c6fc:	mov	r5, r0
   2c700:	b	2c6c8 <myhtml_tree_node_insert_comment@@Base+0x38>

0002c704 <myhtml_tree_node_insert_text@@Base>:
   2c704:	push	{r4, r5, r6, lr}
   2c708:	sub	sp, sp, #8
   2c70c:	mov	r6, r1
   2c710:	add	r2, sp, #4
   2c714:	mov	r1, #0
   2c718:	mov	r4, r0
   2c71c:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2c720:	ldr	r3, [r4, #84]	; 0x54
   2c724:	cmp	r0, r3
   2c728:	beq	2c814 <myhtml_tree_node_insert_text@@Base+0x110>
   2c72c:	ldr	r3, [sp, #4]
   2c730:	mov	r5, r0
   2c734:	cmp	r3, #2
   2c738:	beq	2c794 <myhtml_tree_node_insert_text@@Base+0x90>
   2c73c:	cmp	r3, #1
   2c740:	beq	2c7e8 <myhtml_tree_node_insert_text@@Base+0xe4>
   2c744:	ldr	r3, [r0, #28]
   2c748:	cmp	r3, #0
   2c74c:	beq	2c75c <myhtml_tree_node_insert_text@@Base+0x58>
   2c750:	ldr	r2, [r3, #4]
   2c754:	cmp	r2, #1
   2c758:	beq	2c7c4 <myhtml_tree_node_insert_text@@Base+0xc0>
   2c75c:	mov	r0, r4
   2c760:	bl	ffe0 <myhtml_tree_node_create@plt>
   2c764:	ldr	r3, [r5, #8]
   2c768:	mov	r2, #1
   2c76c:	mov	r4, r0
   2c770:	stmib	r0, {r2, r3}
   2c774:	str	r6, [r0, #32]
   2c778:	mov	r1, r4
   2c77c:	mov	r0, r5
   2c780:	ldr	r2, [sp, #4]
   2c784:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2c788:	mov	r0, r4
   2c78c:	add	sp, sp, #8
   2c790:	pop	{r4, r5, r6, pc}
   2c794:	ldr	r3, [r0, #4]
   2c798:	cmp	r3, #1
   2c79c:	bne	2c75c <myhtml_tree_node_insert_text@@Base+0x58>
   2c7a0:	ldr	r1, [r0, #32]
   2c7a4:	cmp	r1, #0
   2c7a8:	beq	2c75c <myhtml_tree_node_insert_text@@Base+0x58>
   2c7ac:	mov	r2, r6
   2c7b0:	mov	r0, r4
   2c7b4:	mov	r3, #0
   2c7b8:	mov	r4, r5
   2c7bc:	bl	10484 <myhtml_token_merged_two_token_string@plt>
   2c7c0:	b	2c788 <myhtml_tree_node_insert_text@@Base+0x84>
   2c7c4:	ldr	r1, [r3, #32]
   2c7c8:	cmp	r1, #0
   2c7cc:	beq	2c75c <myhtml_tree_node_insert_text@@Base+0x58>
   2c7d0:	mov	r0, r4
   2c7d4:	mov	r2, r6
   2c7d8:	mov	r3, #0
   2c7dc:	bl	10484 <myhtml_token_merged_two_token_string@plt>
   2c7e0:	ldr	r4, [r5, #28]
   2c7e4:	b	2c788 <myhtml_tree_node_insert_text@@Base+0x84>
   2c7e8:	ldr	r3, [r0, #4]
   2c7ec:	cmp	r3, #1
   2c7f0:	bne	2c75c <myhtml_tree_node_insert_text@@Base+0x58>
   2c7f4:	ldr	r2, [r0, #32]
   2c7f8:	cmp	r2, #0
   2c7fc:	beq	2c75c <myhtml_tree_node_insert_text@@Base+0x58>
   2c800:	mov	r0, r4
   2c804:	mov	r1, r6
   2c808:	bl	10484 <myhtml_token_merged_two_token_string@plt>
   2c80c:	mov	r4, r5
   2c810:	b	2c788 <myhtml_tree_node_insert_text@@Base+0x84>
   2c814:	mov	r4, #0
   2c818:	b	2c788 <myhtml_tree_node_insert_text@@Base+0x84>

0002c81c <myhtml_tree_node_insert_by_node@@Base>:
   2c81c:	push	{r4, r5, lr}
   2c820:	sub	sp, sp, #12
   2c824:	mov	r4, r1
   2c828:	add	r2, sp, #4
   2c82c:	mov	r1, #0
   2c830:	mov	r5, r0
   2c834:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2c838:	mov	r1, r4
   2c83c:	ldr	r2, [sp, #4]
   2c840:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2c844:	mov	r0, r5
   2c848:	mov	r1, r4
   2c84c:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2c850:	mov	r0, r4
   2c854:	add	sp, sp, #12
   2c858:	pop	{r4, r5, pc}

0002c85c <myhtml_tree_active_formatting_reconstruction@@Base>:
   2c85c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2c860:	ldr	r8, [r0, #124]	; 0x7c
   2c864:	ldr	r3, [r8, #4]
   2c868:	cmp	r3, #0
   2c86c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c870:	ldr	r6, [r8, #4]
   2c874:	ldr	r7, [r8]
   2c878:	sub	r4, r6, #1
   2c87c:	mov	r5, r0
   2c880:	ldr	r1, [r7, r4, lsl #2]
   2c884:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2c888:	subs	r2, r0, #0
   2c88c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c890:	ldr	r1, [r7, r4, lsl #2]
   2c894:	mov	r0, r5
   2c898:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2c89c:	subs	sl, r0, #0
   2c8a0:	bne	2c930 <myhtml_tree_active_formatting_reconstruction@@Base+0xd4>
   2c8a4:	cmp	r4, #0
   2c8a8:	subne	r6, r6, #-1073741823	; 0xc0000001
   2c8ac:	addne	r6, r7, r6, lsl #2
   2c8b0:	bne	2c8d0 <myhtml_tree_active_formatting_reconstruction@@Base+0x74>
   2c8b4:	b	2c934 <myhtml_tree_active_formatting_reconstruction@@Base+0xd8>
   2c8b8:	ldr	r1, [r6, #-4]!
   2c8bc:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2c8c0:	cmp	r0, #0
   2c8c4:	bne	2c8f0 <myhtml_tree_active_formatting_reconstruction@@Base+0x94>
   2c8c8:	subs	r4, r9, #0
   2c8cc:	beq	2c934 <myhtml_tree_active_formatting_reconstruction@@Base+0xd8>
   2c8d0:	ldr	r1, [r6, #-4]
   2c8d4:	mov	r0, r5
   2c8d8:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2c8dc:	sub	r9, r4, #1
   2c8e0:	mov	r2, sl
   2c8e4:	cmp	r0, #0
   2c8e8:	mov	r0, r5
   2c8ec:	beq	2c8b8 <myhtml_tree_active_formatting_reconstruction@@Base+0x5c>
   2c8f0:	ldr	r3, [r8, #4]
   2c8f4:	cmp	r4, r3
   2c8f8:	addcc	r6, r7, r4, lsl #2
   2c8fc:	bcs	2c93c <myhtml_tree_active_formatting_reconstruction@@Base+0xe0>
   2c900:	ldr	r0, [r6]
   2c904:	bl	10fdc <myhtml_tree_node_clone@plt>
   2c908:	add	r4, r4, #1
   2c90c:	mov	r7, r0
   2c910:	mov	r1, r0
   2c914:	mov	r0, r5
   2c918:	bl	1076c <myhtml_tree_node_insert_by_node@plt>
   2c91c:	ldr	r3, [r8, #4]
   2c920:	str	r7, [r6], #4
   2c924:	cmp	r3, r4
   2c928:	bhi	2c900 <myhtml_tree_active_formatting_reconstruction@@Base+0xa4>
   2c92c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c930:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c934:	mov	r4, #0
   2c938:	b	2c8f0 <myhtml_tree_active_formatting_reconstruction@@Base+0x94>
   2c93c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0002c940 <myhtml_tree_node_insert_foreign_element@@Base>:
   2c940:	push	{r4, r5, r6, r7, lr}
   2c944:	sub	sp, sp, #12
   2c948:	mov	r7, r1
   2c94c:	add	r2, sp, #4
   2c950:	mov	r1, #0
   2c954:	mov	r5, r0
   2c958:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2c95c:	mov	r6, r0
   2c960:	mov	r0, r5
   2c964:	bl	ffe0 <myhtml_tree_node_create@plt>
   2c968:	ldr	r2, [r7]
   2c96c:	ldr	r3, [r6, #8]
   2c970:	mov	r4, r0
   2c974:	str	r3, [r0, #8]
   2c978:	str	r2, [r0, #4]
   2c97c:	str	r7, [r0, #32]
   2c980:	mov	r1, r4
   2c984:	mov	r0, r6
   2c988:	ldr	r2, [sp, #4]
   2c98c:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2c990:	mov	r0, r5
   2c994:	mov	r1, r4
   2c998:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2c99c:	mov	r0, r4
   2c9a0:	add	sp, sp, #12
   2c9a4:	pop	{r4, r5, r6, r7, pc}

0002c9a8 <myhtml_tree_node_insert_html_element@@Base>:
   2c9a8:	push	{r4, r5, r6, r7, lr}
   2c9ac:	sub	sp, sp, #12
   2c9b0:	mov	r6, r1
   2c9b4:	add	r2, sp, #4
   2c9b8:	mov	r1, #0
   2c9bc:	mov	r5, r0
   2c9c0:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2c9c4:	mov	r7, r0
   2c9c8:	mov	r0, r5
   2c9cc:	bl	ffe0 <myhtml_tree_node_create@plt>
   2c9d0:	ldr	r2, [r6]
   2c9d4:	mov	r3, #1
   2c9d8:	mov	r4, r0
   2c9dc:	mov	r1, r4
   2c9e0:	mov	r0, r7
   2c9e4:	str	r2, [r4, #4]
   2c9e8:	str	r3, [r4, #8]
   2c9ec:	ldr	r2, [sp, #4]
   2c9f0:	str	r6, [r4, #32]
   2c9f4:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2c9f8:	mov	r0, r5
   2c9fc:	mov	r1, r4
   2ca00:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2ca04:	mov	r0, r4
   2ca08:	add	sp, sp, #12
   2ca0c:	pop	{r4, r5, r6, r7, pc}

0002ca10 <myhtml_tree_adoption_agency_algorithm@@Base>:
   2ca10:	ldr	r3, [r0, #128]	; 0x80
   2ca14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ca18:	sub	sp, sp, #68	; 0x44
   2ca1c:	ldr	r1, [r3, #4]
   2ca20:	cmp	r1, #0
   2ca24:	beq	2cacc <myhtml_tree_adoption_agency_algorithm@@Base+0xbc>
   2ca28:	str	r2, [sp, #24]
   2ca2c:	ldr	r2, [r3, #4]
   2ca30:	ldr	sl, [r3]
   2ca34:	sub	r3, r2, #1
   2ca38:	ldr	r2, [r0, #124]	; 0x7c
   2ca3c:	ldr	r1, [sl, r3, lsl #2]
   2ca40:	mov	r5, r0
   2ca44:	ldr	r3, [r2]
   2ca48:	str	r3, [sp, #16]
   2ca4c:	ldr	r3, [r1, #8]
   2ca50:	cmp	r3, #1
   2ca54:	beq	2cdac <myhtml_tree_adoption_agency_algorithm@@Base+0x39c>
   2ca58:	ldr	r7, [sp, #16]
   2ca5c:	mov	r3, #8
   2ca60:	str	r3, [sp, #32]
   2ca64:	add	r3, sp, #48	; 0x30
   2ca68:	str	r3, [sp, #28]
   2ca6c:	add	r3, sp, #56	; 0x38
   2ca70:	str	r3, [sp, #4]
   2ca74:	add	r3, sp, #60	; 0x3c
   2ca78:	str	r3, [sp, #8]
   2ca7c:	ldr	r4, [r2, #4]
   2ca80:	mov	r3, #0
   2ca84:	cmp	r4, r3
   2ca88:	str	r3, [sp, #44]	; 0x2c
   2ca8c:	beq	2cc98 <myhtml_tree_adoption_agency_algorithm@@Base+0x288>
   2ca90:	add	r7, r7, r4, lsl #2
   2ca94:	ldr	r8, [sp, #24]
   2ca98:	b	2cab4 <myhtml_tree_adoption_agency_algorithm@@Base+0xa4>
   2ca9c:	ldr	r6, [r7, #-4]!
   2caa0:	ldr	r3, [r6, #4]
   2caa4:	cmp	r8, r3
   2caa8:	beq	2cae0 <myhtml_tree_adoption_agency_algorithm@@Base+0xd0>
   2caac:	cmp	r4, #0
   2cab0:	beq	2cc98 <myhtml_tree_adoption_agency_algorithm@@Base+0x288>
   2cab4:	ldr	r1, [r7, #-4]
   2cab8:	mov	r0, r5
   2cabc:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2cac0:	sub	r4, r4, #1
   2cac4:	cmp	r0, #0
   2cac8:	beq	2ca9c <myhtml_tree_adoption_agency_algorithm@@Base+0x8c>
   2cacc:	mov	r3, #0
   2cad0:	str	r3, [sp, #20]
   2cad4:	ldr	r0, [sp, #20]
   2cad8:	add	sp, sp, #68	; 0x44
   2cadc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cae0:	str	r0, [sp, #20]
   2cae4:	ldr	r2, [sp, #28]
   2cae8:	mov	r1, r6
   2caec:	mov	r0, r5
   2caf0:	str	r4, [sp, #44]	; 0x2c
   2caf4:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2caf8:	cmp	r0, #0
   2cafc:	beq	2cdf8 <myhtml_tree_adoption_agency_algorithm@@Base+0x3e8>
   2cb00:	mov	r1, #8
   2cb04:	mov	r0, r6
   2cb08:	bl	fc50 <myhtml_tree_element_in_scope_by_node@plt>
   2cb0c:	cmp	r0, #0
   2cb10:	beq	2cacc <myhtml_tree_adoption_agency_algorithm@@Base+0xbc>
   2cb14:	mov	r0, r5
   2cb18:	bl	10628 <myhtml_tree_current_node@plt>
   2cb1c:	ldr	r2, [r5, #128]	; 0x80
   2cb20:	ldr	r3, [sp, #48]	; 0x30
   2cb24:	ldr	r2, [r2, #4]
   2cb28:	str	r3, [sp, #52]	; 0x34
   2cb2c:	cmp	r2, r3
   2cb30:	bhi	2cb4c <myhtml_tree_adoption_agency_algorithm@@Base+0x13c>
   2cb34:	b	2cde0 <myhtml_tree_adoption_agency_algorithm@@Base+0x3d0>
   2cb38:	ldr	r2, [r5, #128]	; 0x80
   2cb3c:	str	r3, [sp, #52]	; 0x34
   2cb40:	ldr	r2, [r2, #4]
   2cb44:	cmp	r2, r3
   2cb48:	bls	2cde0 <myhtml_tree_adoption_agency_algorithm@@Base+0x3d0>
   2cb4c:	ldr	r3, [sl, r3, lsl #2]
   2cb50:	ldr	r0, [r5, #28]
   2cb54:	ldr	r1, [r3, #4]
   2cb58:	bl	10a24 <myhtml_tag_get_by_id@plt>
   2cb5c:	ldr	r4, [sp, #52]	; 0x34
   2cb60:	add	r3, r4, #1
   2cb64:	ldr	r8, [sl, r4, lsl #2]
   2cb68:	ldr	r2, [r8, #8]
   2cb6c:	add	r2, r2, #4
   2cb70:	ldr	r2, [r0, r2, lsl #2]
   2cb74:	tst	r2, #2
   2cb78:	beq	2cb38 <myhtml_tree_adoption_agency_algorithm@@Base+0x128>
   2cb7c:	ldr	r3, [sp, #48]	; 0x30
   2cb80:	ldr	r2, [sp, #44]	; 0x2c
   2cb84:	sub	r3, r3, #-1073741823	; 0xc0000001
   2cb88:	mov	r9, r8
   2cb8c:	ldr	r3, [sl, r3, lsl #2]
   2cb90:	mov	fp, r8
   2cb94:	mov	r7, #0
   2cb98:	add	r2, r2, #1
   2cb9c:	str	r2, [sp, #12]
   2cba0:	str	r3, [sp, #36]	; 0x24
   2cba4:	mov	r1, fp
   2cba8:	ldr	r2, [sp, #4]
   2cbac:	mov	r0, r5
   2cbb0:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2cbb4:	add	r7, r7, #1
   2cbb8:	cmp	r0, #0
   2cbbc:	ldrne	r4, [sp, #56]	; 0x38
   2cbc0:	cmp	r4, #0
   2cbc4:	beq	2cad4 <myhtml_tree_adoption_agency_algorithm@@Base+0xc4>
   2cbc8:	sub	r4, r4, #1
   2cbcc:	str	r4, [sp, #56]	; 0x38
   2cbd0:	ldr	fp, [sl, r4, lsl #2]
   2cbd4:	cmp	fp, r6
   2cbd8:	beq	2ccac <myhtml_tree_adoption_agency_algorithm@@Base+0x29c>
   2cbdc:	ldr	r2, [sp, #8]
   2cbe0:	mov	r1, fp
   2cbe4:	mov	r0, r5
   2cbe8:	bl	10124 <myhtml_tree_active_formatting_find@plt>
   2cbec:	cmp	r7, #3
   2cbf0:	movle	r3, #0
   2cbf4:	andgt	r3, r0, #1
   2cbf8:	cmp	r3, #0
   2cbfc:	bne	2cc74 <myhtml_tree_adoption_agency_algorithm@@Base+0x264>
   2cc00:	cmp	r0, #0
   2cc04:	bne	2cc18 <myhtml_tree_adoption_agency_algorithm@@Base+0x208>
   2cc08:	mov	r1, fp
   2cc0c:	mov	r0, r5
   2cc10:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   2cc14:	b	2cba4 <myhtml_tree_adoption_agency_algorithm@@Base+0x194>
   2cc18:	mov	r0, fp
   2cc1c:	bl	10fdc <myhtml_tree_node_clone@plt>
   2cc20:	mov	r1, #1
   2cc24:	ldr	r3, [sp, #60]	; 0x3c
   2cc28:	ldr	r2, [sp, #56]	; 0x38
   2cc2c:	cmp	r9, r8
   2cc30:	str	r1, [r0, #8]
   2cc34:	ldr	r1, [sp, #16]
   2cc38:	mov	fp, r0
   2cc3c:	str	r0, [r1, r3, lsl #2]
   2cc40:	addeq	r3, r3, #1
   2cc44:	streq	r3, [sp, #12]
   2cc48:	str	r0, [sl, r2, lsl #2]
   2cc4c:	ldr	r3, [r9, #24]
   2cc50:	cmp	r3, #0
   2cc54:	beq	2cc60 <myhtml_tree_adoption_agency_algorithm@@Base+0x250>
   2cc58:	mov	r0, r9
   2cc5c:	bl	10df0 <myhtml_tree_node_remove@plt>
   2cc60:	mov	r1, r9
   2cc64:	mov	r0, fp
   2cc68:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2cc6c:	mov	r9, fp
   2cc70:	b	2cba4 <myhtml_tree_adoption_agency_algorithm@@Base+0x194>
   2cc74:	ldr	r1, [sp, #60]	; 0x3c
   2cc78:	mov	r0, r5
   2cc7c:	bl	10844 <myhtml_tree_active_formatting_remove_by_index@plt>
   2cc80:	ldr	r3, [sp, #60]	; 0x3c
   2cc84:	ldr	r2, [sp, #12]
   2cc88:	cmp	r2, r3
   2cc8c:	subhi	r3, r2, #1
   2cc90:	strhi	r3, [sp, #12]
   2cc94:	b	2cba4 <myhtml_tree_adoption_agency_algorithm@@Base+0x194>
   2cc98:	mov	r3, #1
   2cc9c:	str	r3, [sp, #20]
   2cca0:	ldr	r0, [sp, #20]
   2cca4:	add	sp, sp, #68	; 0x44
   2cca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ccac:	ldr	r2, [r9, #24]
   2ccb0:	cmp	r2, #0
   2ccb4:	beq	2ccc0 <myhtml_tree_adoption_agency_algorithm@@Base+0x2b0>
   2ccb8:	mov	r0, r9
   2ccbc:	bl	10df0 <myhtml_tree_node_remove@plt>
   2ccc0:	ldr	r1, [sp, #36]	; 0x24
   2ccc4:	ldr	r2, [sp, #8]
   2ccc8:	mov	r0, r5
   2cccc:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2ccd0:	mov	r1, r9
   2ccd4:	ldr	r2, [sp, #60]	; 0x3c
   2ccd8:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2ccdc:	mov	r0, fp
   2cce0:	bl	10fdc <myhtml_tree_node_clone@plt>
   2cce4:	ldr	r7, [r8, #20]
   2cce8:	mov	r3, #1
   2ccec:	cmp	r7, #0
   2ccf0:	mov	r4, r0
   2ccf4:	str	r3, [r0, #8]
   2ccf8:	beq	2cd1c <myhtml_tree_adoption_agency_algorithm@@Base+0x30c>
   2ccfc:	ldr	r6, [r7, #16]
   2cd00:	mov	r0, r7
   2cd04:	bl	10df0 <myhtml_tree_node_remove@plt>
   2cd08:	mov	r1, r7
   2cd0c:	mov	r0, r4
   2cd10:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2cd14:	subs	r7, r6, #0
   2cd18:	bne	2ccfc <myhtml_tree_adoption_agency_algorithm@@Base+0x2ec>
   2cd1c:	mov	r1, r4
   2cd20:	mov	r0, r8
   2cd24:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2cd28:	add	r2, sp, #44	; 0x2c
   2cd2c:	mov	r1, fp
   2cd30:	mov	r0, r5
   2cd34:	bl	10124 <myhtml_tree_active_formatting_find@plt>
   2cd38:	cmp	r0, #0
   2cd3c:	beq	2cacc <myhtml_tree_adoption_agency_algorithm@@Base+0xbc>
   2cd40:	ldr	r3, [sp, #12]
   2cd44:	ldr	r1, [sp, #44]	; 0x2c
   2cd48:	mov	r0, r5
   2cd4c:	cmp	r3, r1
   2cd50:	subhi	r3, r3, #1
   2cd54:	strhi	r3, [sp, #12]
   2cd58:	bl	10844 <myhtml_tree_active_formatting_remove_by_index@plt>
   2cd5c:	ldr	r2, [sp, #12]
   2cd60:	mov	r1, r4
   2cd64:	ldr	r0, [r5, #124]	; 0x7c
   2cd68:	bl	102bc <myhtml_tree_list_insert_by_index@plt>
   2cd6c:	mov	r1, fp
   2cd70:	mov	r0, r5
   2cd74:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   2cd78:	mov	r1, r8
   2cd7c:	add	r2, sp, #52	; 0x34
   2cd80:	mov	r0, r5
   2cd84:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2cd88:	cmp	r0, #0
   2cd8c:	bne	2ce08 <myhtml_tree_adoption_agency_algorithm@@Base+0x3f8>
   2cd90:	ldr	r3, [sp, #32]
   2cd94:	subs	r3, r3, #1
   2cd98:	str	r3, [sp, #32]
   2cd9c:	beq	2cacc <myhtml_tree_adoption_agency_algorithm@@Base+0xbc>
   2cda0:	ldr	r2, [r5, #124]	; 0x7c
   2cda4:	ldr	r7, [r2]
   2cda8:	b	2ca7c <myhtml_tree_adoption_agency_algorithm@@Base+0x6c>
   2cdac:	ldr	r3, [r1, #4]
   2cdb0:	ldr	ip, [sp, #24]
   2cdb4:	cmp	r3, ip
   2cdb8:	bne	2ca58 <myhtml_tree_adoption_agency_algorithm@@Base+0x48>
   2cdbc:	mov	r2, #0
   2cdc0:	bl	10124 <myhtml_tree_active_formatting_find@plt>
   2cdc4:	subs	r3, r0, #0
   2cdc8:	str	r3, [sp, #20]
   2cdcc:	beq	2ce20 <myhtml_tree_adoption_agency_algorithm@@Base+0x410>
   2cdd0:	ldr	r2, [r5, #124]	; 0x7c
   2cdd4:	ldr	r7, [r2]
   2cdd8:	b	2ca5c <myhtml_tree_adoption_agency_algorithm@@Base+0x4c>
   2cddc:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2cde0:	mov	r0, r5
   2cde4:	bl	10628 <myhtml_tree_current_node@plt>
   2cde8:	cmp	r6, r0
   2cdec:	mov	r0, r5
   2cdf0:	bne	2cddc <myhtml_tree_adoption_agency_algorithm@@Base+0x3cc>
   2cdf4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2cdf8:	mov	r1, r6
   2cdfc:	mov	r0, r5
   2ce00:	bl	108a4 <myhtml_tree_active_formatting_remove@plt>
   2ce04:	b	2cad4 <myhtml_tree_adoption_agency_algorithm@@Base+0xc4>
   2ce08:	ldr	r2, [sp, #52]	; 0x34
   2ce0c:	mov	r1, r4
   2ce10:	add	r2, r2, #1
   2ce14:	ldr	r0, [r5, #128]	; 0x80
   2ce18:	bl	102bc <myhtml_tree_list_insert_by_index@plt>
   2ce1c:	b	2cd90 <myhtml_tree_adoption_agency_algorithm@@Base+0x380>
   2ce20:	mov	r0, r5
   2ce24:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2ce28:	b	2cad4 <myhtml_tree_adoption_agency_algorithm@@Base+0xc4>

0002ce2c <myhtml_tree_appropriate_place_inserting_in_tree@@Base>:
   2ce2c:	ldr	r2, [r0, #40]	; 0x28
   2ce30:	mov	ip, #1
   2ce34:	push	{r4, r5, r6, r7, r8, lr}
   2ce38:	mov	r4, r0
   2ce3c:	ldrb	r2, [r2, #188]	; 0xbc
   2ce40:	str	ip, [r1]
   2ce44:	cmp	r2, #0
   2ce48:	streq	r2, [r1]
   2ce4c:	beq	2ce68 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x3c>
   2ce50:	ldr	r3, [r0, #8]
   2ce54:	mov	r5, r1
   2ce58:	cmp	r3, ip
   2ce5c:	mov	r6, r0
   2ce60:	beq	2ce70 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x44>
   2ce64:	mov	r4, r6
   2ce68:	mov	r0, r4
   2ce6c:	pop	{r4, r5, r6, r7, r8, pc}
   2ce70:	ldr	r2, [r0, #4]
   2ce74:	sub	r2, r2, #125	; 0x7d
   2ce78:	cmp	r2, #10
   2ce7c:	bhi	2ce8c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x60>
   2ce80:	ldr	r1, [pc, #152]	; 2cf20 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xf4>
   2ce84:	ands	r3, r1, r3, lsl r2
   2ce88:	bne	2cea0 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x74>
   2ce8c:	mov	r3, #0
   2ce90:	mov	r4, r6
   2ce94:	str	r3, [r5]
   2ce98:	mov	r0, r4
   2ce9c:	pop	{r4, r5, r6, r7, r8, pc}
   2cea0:	mov	r1, #128	; 0x80
   2cea4:	bl	1061c <myhtml_tree_node_find_parent_by_tag_id@plt>
   2cea8:	mov	r1, #125	; 0x7d
   2ceac:	mov	r4, r0
   2ceb0:	mov	r0, r6
   2ceb4:	bl	1061c <myhtml_tree_node_find_parent_by_tag_id@plt>
   2ceb8:	cmp	r4, #0
   2cebc:	mov	r7, r0
   2cec0:	beq	2cf14 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xe8>
   2cec4:	mov	r1, #125	; 0x7d
   2cec8:	mov	r0, r4
   2cecc:	bl	1061c <myhtml_tree_node_find_parent_by_tag_id@plt>
   2ced0:	subs	r0, r7, r0
   2ced4:	movne	r0, #1
   2ced8:	cmp	r7, #0
   2cedc:	orreq	r0, r0, #1
   2cee0:	cmp	r0, #0
   2cee4:	movne	r3, #0
   2cee8:	strne	r3, [r5]
   2ceec:	bne	2ce68 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x3c>
   2cef0:	ldr	r3, [r7, #24]
   2cef4:	cmp	r3, #0
   2cef8:	beq	2ce64 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x38>
   2cefc:	ldr	r4, [r7, #12]
   2cf00:	cmp	r4, #0
   2cf04:	moveq	r4, r7
   2cf08:	movne	r3, #2
   2cf0c:	strne	r3, [r5]
   2cf10:	b	2ce68 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x3c>
   2cf14:	cmp	r0, #0
   2cf18:	bne	2cef0 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xc4>
   2cf1c:	b	2ce64 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x38>
   2cf20:	andeq	r0, r0, r3, lsr #9

0002cf24 <myhtml_tree_template_insertion_init@@Base>:
   2cf24:	push	{r4, r5, r6, lr}
   2cf28:	mov	r5, r0
   2cf2c:	mov	r0, #12
   2cf30:	bl	10c94 <mycore_malloc@plt>
   2cf34:	mov	r2, #0
   2cf38:	mov	r3, #1024	; 0x400
   2cf3c:	mov	r4, r0
   2cf40:	stmib	r0, {r2, r3}
   2cf44:	mov	r0, #4096	; 0x1000
   2cf48:	bl	10c94 <mycore_malloc@plt>
   2cf4c:	str	r0, [r4]
   2cf50:	str	r4, [r5, #140]	; 0x8c
   2cf54:	mov	r0, r4
   2cf58:	pop	{r4, r5, r6, pc}

0002cf5c <myhtml_tree_template_insertion_clean@@Base>:
   2cf5c:	ldr	r3, [r0, #140]	; 0x8c
   2cf60:	mov	r2, #0
   2cf64:	str	r2, [r3, #4]
   2cf68:	bx	lr

0002cf6c <myhtml_tree_template_insertion_destroy@@Base>:
   2cf6c:	ldr	r3, [r0, #140]	; 0x8c
   2cf70:	cmp	r3, #0
   2cf74:	beq	2cfac <myhtml_tree_template_insertion_destroy@@Base+0x40>
   2cf78:	push	{r4, lr}
   2cf7c:	mov	r4, r0
   2cf80:	ldr	r0, [r3]
   2cf84:	cmp	r0, #0
   2cf88:	beq	2cf9c <myhtml_tree_template_insertion_destroy@@Base+0x30>
   2cf8c:	bl	10dcc <mycore_free@plt>
   2cf90:	ldr	r3, [r4, #140]	; 0x8c
   2cf94:	cmp	r3, #0
   2cf98:	beq	2cfa4 <myhtml_tree_template_insertion_destroy@@Base+0x38>
   2cf9c:	mov	r0, r3
   2cfa0:	bl	10dcc <mycore_free@plt>
   2cfa4:	mov	r0, #0
   2cfa8:	pop	{r4, pc}
   2cfac:	mov	r0, #0
   2cfb0:	bx	lr

0002cfb4 <myhtml_tree_template_insertion_append@@Base>:
   2cfb4:	push	{r4, r5, r6, lr}
   2cfb8:	mov	r5, r1
   2cfbc:	ldr	r4, [r0, #140]	; 0x8c
   2cfc0:	ldr	r3, [r4, #4]
   2cfc4:	ldr	r1, [r4, #8]
   2cfc8:	cmp	r3, r1
   2cfcc:	bcs	2cfe4 <myhtml_tree_template_insertion_append@@Base+0x30>
   2cfd0:	ldr	r0, [r4]
   2cfd4:	add	r2, r3, #1
   2cfd8:	str	r5, [r0, r3, lsl #2]
   2cfdc:	str	r2, [r4, #4]
   2cfe0:	pop	{r4, r5, r6, pc}
   2cfe4:	lsl	r3, r1, #1
   2cfe8:	str	r3, [r4, #8]
   2cfec:	lsl	r1, r1, #3
   2cff0:	ldr	r0, [r4]
   2cff4:	bl	fbd8 <mycore_realloc@plt>
   2cff8:	cmp	r0, #0
   2cffc:	strne	r0, [r4]
   2d000:	ldmeq	r4, {r0, r3}
   2d004:	ldrne	r3, [r4, #4]
   2d008:	b	2cfd4 <myhtml_tree_template_insertion_append@@Base+0x20>

0002d00c <myhtml_tree_template_insertion_pop@@Base>:
   2d00c:	ldr	r2, [r0, #140]	; 0x8c
   2d010:	ldr	r3, [r2, #4]
   2d014:	cmp	r3, #0
   2d018:	subne	r3, r3, #1
   2d01c:	strne	r3, [r2, #4]
   2d020:	bx	lr

0002d024 <myhtml_tree_template_insertion_length@@Base>:
   2d024:	ldr	r3, [r0, #140]	; 0x8c
   2d028:	ldr	r0, [r3, #4]
   2d02c:	bx	lr

0002d030 <myhtml_tree_token_list_init@@Base>:
   2d030:	push	{r4, lr}
   2d034:	mov	r0, #12
   2d038:	bl	10c94 <mycore_malloc@plt>
   2d03c:	mov	r2, #0
   2d040:	mov	r3, #4096	; 0x1000
   2d044:	mov	r4, r0
   2d048:	stmib	r0, {r2, r3}
   2d04c:	mov	r0, #16384	; 0x4000
   2d050:	bl	10c94 <mycore_malloc@plt>
   2d054:	str	r0, [r4]
   2d058:	mov	r0, r4
   2d05c:	pop	{r4, pc}

0002d060 <myhtml_tree_token_list_clean@@Base>:
   2d060:	mov	r3, #0
   2d064:	str	r3, [r0, #4]
   2d068:	bx	lr

0002d06c <myhtml_tree_clean@@Base>:
   2d06c:	push	{r4, r5, r6, lr}
   2d070:	mov	r4, r0
   2d074:	ldr	r6, [r0]
   2d078:	ldr	r3, [r6, #20]
   2d07c:	cmp	r3, #0
   2d080:	movne	r5, #0
   2d084:	beq	2d0a8 <myhtml_tree_clean@@Base+0x3c>
   2d088:	ldr	r3, [r4, #144]	; 0x90
   2d08c:	ldr	r0, [r4, #4]
   2d090:	ldr	r1, [r3, r5, lsl #2]
   2d094:	bl	106e8 <mchar_async_node_clean@plt>
   2d098:	ldr	r3, [r6, #20]
   2d09c:	add	r5, r5, #1
   2d0a0:	cmp	r3, r5
   2d0a4:	bhi	2d088 <myhtml_tree_clean@@Base+0x1c>
   2d0a8:	ldr	r1, [r4, #48]	; 0x30
   2d0ac:	ldr	r0, [r4, #12]
   2d0b0:	bl	10880 <mcobject_async_node_clean@plt>
   2d0b4:	ldr	r3, [r4, #8]
   2d0b8:	ldr	r1, [r4, #40]	; 0x28
   2d0bc:	ldr	r0, [r3, #4]
   2d0c0:	bl	10880 <mcobject_async_node_clean@plt>
   2d0c4:	ldr	r3, [r4, #8]
   2d0c8:	ldr	r1, [r4, #44]	; 0x2c
   2d0cc:	ldr	r0, [r3, #8]
   2d0d0:	bl	10880 <mcobject_async_node_clean@plt>
   2d0d4:	ldr	r0, [r4, #20]
   2d0d8:	bl	109a0 <mythread_queue_list_entry_clean@plt>
   2d0dc:	ldr	r3, [r4]
   2d0e0:	ldr	r1, [r4, #20]
   2d0e4:	ldr	r0, [r3, #4]
   2d0e8:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   2d0ec:	ldr	r3, [r4]
   2d0f0:	ldr	r1, [r4, #20]
   2d0f4:	ldr	r0, [r3]
   2d0f8:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   2d0fc:	ldr	r0, [r4, #8]
   2d100:	bl	105bc <myhtml_token_clean@plt>
   2d104:	mov	r0, r4
   2d108:	bl	ffe0 <myhtml_tree_node_create@plt>
   2d10c:	mov	r0, r4
   2d110:	bl	ffe0 <myhtml_tree_node_create@plt>
   2d114:	mov	r3, #0
   2d118:	mov	r2, #2
   2d11c:	str	r2, [r4, #180]	; 0xb4
   2d120:	str	r3, [r4, #88]	; 0x58
   2d124:	strb	r3, [r4, #108]	; 0x6c
   2d128:	str	r3, [r4, #112]	; 0x70
   2d12c:	str	r3, [r4, #116]	; 0x74
   2d130:	str	r3, [r4, #120]	; 0x78
   2d134:	str	r3, [r4, #96]	; 0x60
   2d138:	str	r3, [r4, #100]	; 0x64
   2d13c:	str	r3, [r4, #92]	; 0x5c
   2d140:	str	r3, [r4, #104]	; 0x68
   2d144:	str	r3, [r4, #160]	; 0xa0
   2d148:	str	r3, [r4, #164]	; 0xa4
   2d14c:	str	r3, [r4, #168]	; 0xa8
   2d150:	str	r3, [r4, #172]	; 0xac
   2d154:	str	r3, [r4, #176]	; 0xb0
   2d158:	str	r3, [r4, #60]	; 0x3c
   2d15c:	strb	r3, [r4, #188]	; 0xbc
   2d160:	str	r3, [r4, #156]	; 0x9c
   2d164:	str	r3, [r4, #76]	; 0x4c
   2d168:	str	r3, [r4, #80]	; 0x50
   2d16c:	str	r3, [r4, #192]	; 0xc0
   2d170:	str	r3, [r4, #68]	; 0x44
   2d174:	str	r3, [r4, #152]	; 0x98
   2d178:	str	r3, [r4, #196]	; 0xc4
   2d17c:	str	r3, [r4, #200]	; 0xc8
   2d180:	str	r3, [r4, #204]	; 0xcc
   2d184:	str	r0, [r4, #84]	; 0x54
   2d188:	ldr	r0, [r4, #148]	; 0x94
   2d18c:	bl	1046c <myhtml_stream_buffer_clean@plt>
   2d190:	mov	r0, r4
   2d194:	bl	10820 <myhtml_tree_active_formatting_clean@plt>
   2d198:	mov	r0, r4
   2d19c:	bl	10e20 <myhtml_tree_open_elements_clean@plt>
   2d1a0:	ldr	r0, [r4, #132]	; 0x84
   2d1a4:	bl	1028c <myhtml_tree_list_clean@plt>
   2d1a8:	ldr	r0, [r4, #136]	; 0x88
   2d1ac:	bl	10fe8 <myhtml_tree_token_list_clean@plt>
   2d1b0:	mov	r0, r4
   2d1b4:	bl	10424 <myhtml_tree_template_insertion_clean@plt>
   2d1b8:	ldr	r0, [r4, #72]	; 0x48
   2d1bc:	bl	10f70 <mcobject_clean@plt>
   2d1c0:	ldr	r0, [r4, #28]
   2d1c4:	bl	11078 <myhtml_tag_clean@plt>
   2d1c8:	ldr	r0, [r4, #24]
   2d1cc:	bl	fd64 <mythread_queue_clean@plt>
   2d1d0:	ldr	r3, [r4, #8]
   2d1d4:	mov	r0, r3
   2d1d8:	ldr	r1, [r3, #16]
   2d1dc:	bl	10904 <myhtml_token_attr_create@plt>
   2d1e0:	str	r0, [r4, #56]	; 0x38
   2d1e4:	pop	{r4, r5, r6, pc}

0002d1e8 <myhtml_tree_init@@Base>:
   2d1e8:	push	{r4, r5, r6, r7, r8, lr}
   2d1ec:	sub	sp, sp, #8
   2d1f0:	str	r1, [r0]
   2d1f4:	mov	r5, #0
   2d1f8:	mov	r6, r1
   2d1fc:	mov	r1, #512	; 0x200
   2d200:	mov	r4, r0
   2d204:	str	r5, [sp]
   2d208:	bl	11000 <myhtml_token_create@plt>
   2d20c:	cmp	r0, r5
   2d210:	str	r0, [r4, #8]
   2d214:	beq	2d36c <myhtml_tree_init@@Base+0x184>
   2d218:	ldr	r0, [sp]
   2d21c:	str	r5, [r4, #208]	; 0xd0
   2d220:	cmp	r0, r5
   2d224:	str	r5, [r4, #148]	; 0x94
   2d228:	str	r5, [r4, #184]	; 0xb8
   2d22c:	str	r5, [r4, #36]	; 0x24
   2d230:	str	r5, [r4, #220]	; 0xdc
   2d234:	str	r5, [r4, #224]	; 0xe0
   2d238:	str	r5, [r4, #228]	; 0xe4
   2d23c:	str	r5, [r4, #232]	; 0xe8
   2d240:	str	r5, [r4, #236]	; 0xec
   2d244:	str	r5, [r4, #240]	; 0xf0
   2d248:	str	r5, [r4, #244]	; 0xf4
   2d24c:	str	r5, [r4, #248]	; 0xf8
   2d250:	beq	2d25c <myhtml_tree_init@@Base+0x74>
   2d254:	add	sp, sp, #8
   2d258:	pop	{r4, r5, r6, r7, r8, pc}
   2d25c:	bl	10a84 <mythread_queue_create@plt>
   2d260:	cmp	r0, r5
   2d264:	str	r0, [r4, #24]
   2d268:	beq	2d378 <myhtml_tree_init@@Base+0x190>
   2d26c:	ldr	r1, [pc, #496]	; 2d464 <myhtml_tree_init@@Base+0x27c>
   2d270:	bl	106ac <mythread_queue_init@plt>
   2d274:	cmp	r0, #0
   2d278:	str	r0, [sp]
   2d27c:	bne	2d254 <myhtml_tree_init@@Base+0x6c>
   2d280:	bl	1001c <mcobject_create@plt>
   2d284:	cmp	r0, #0
   2d288:	str	r0, [r4, #72]	; 0x48
   2d28c:	ldreq	r0, [pc, #468]	; 2d468 <myhtml_tree_init@@Base+0x280>
   2d290:	beq	2d254 <myhtml_tree_init@@Base+0x6c>
   2d294:	mov	r2, #24
   2d298:	mov	r1, #256	; 0x100
   2d29c:	bl	10778 <mcobject_init@plt>
   2d2a0:	cmp	r0, #0
   2d2a4:	str	r0, [sp]
   2d2a8:	bne	2d254 <myhtml_tree_init@@Base+0x6c>
   2d2ac:	bl	fd58 <mcobject_async_create@plt>
   2d2b0:	cmp	r0, #0
   2d2b4:	str	r0, [r4, #12]
   2d2b8:	ldreq	r0, [pc, #428]	; 2d46c <myhtml_tree_init@@Base+0x284>
   2d2bc:	beq	2d254 <myhtml_tree_init@@Base+0x6c>
   2d2c0:	mov	r3, #44	; 0x2c
   2d2c4:	mov	r2, #1024	; 0x400
   2d2c8:	mov	r1, #128	; 0x80
   2d2cc:	bl	fc80 <mcobject_async_init@plt>
   2d2d0:	cmp	r0, #0
   2d2d4:	str	r0, [sp, #4]
   2d2d8:	ldrne	r0, [pc, #400]	; 2d470 <myhtml_tree_init@@Base+0x288>
   2d2dc:	bne	2d254 <myhtml_tree_init@@Base+0x6c>
   2d2e0:	bl	10160 <mchar_async_create@plt>
   2d2e4:	str	r0, [r4, #4]
   2d2e8:	mov	r0, r4
   2d2ec:	bl	10ac0 <myhtml_tree_active_formatting_init@plt>
   2d2f0:	str	r0, [r4, #124]	; 0x7c
   2d2f4:	mov	r0, r4
   2d2f8:	bl	10bb0 <myhtml_tree_open_elements_init@plt>
   2d2fc:	str	r0, [r4, #128]	; 0x80
   2d300:	bl	1085c <myhtml_tree_list_init@plt>
   2d304:	str	r0, [r4, #132]	; 0x84
   2d308:	bl	109b8 <myhtml_tree_token_list_init@plt>
   2d30c:	str	r0, [r4, #136]	; 0x88
   2d310:	mov	r0, r4
   2d314:	bl	10cdc <myhtml_tree_template_insertion_init@plt>
   2d318:	ldr	r3, [r4, #4]
   2d31c:	cmp	r3, #0
   2d320:	str	r0, [r4, #140]	; 0x8c
   2d324:	beq	2d378 <myhtml_tree_init@@Base+0x190>
   2d328:	mov	r0, r3
   2d32c:	mov	r2, #20480	; 0x5000
   2d330:	mov	r1, #128	; 0x80
   2d334:	bl	104a8 <mchar_async_init@plt>
   2d338:	cmp	r0, #0
   2d33c:	str	r0, [sp]
   2d340:	bne	2d254 <myhtml_tree_init@@Base+0x6c>
   2d344:	add	r5, sp, #4
   2d348:	mov	r1, r5
   2d34c:	ldr	r0, [r4, #12]
   2d350:	bl	10a90 <mcobject_async_node_add@plt>
   2d354:	ldr	r3, [sp, #4]
   2d358:	cmp	r3, #0
   2d35c:	str	r0, [r4, #48]	; 0x30
   2d360:	beq	2d384 <myhtml_tree_init@@Base+0x19c>
   2d364:	ldr	r0, [pc, #264]	; 2d474 <myhtml_tree_init@@Base+0x28c>
   2d368:	b	2d254 <myhtml_tree_init@@Base+0x6c>
   2d36c:	ldr	r0, [pc, #260]	; 2d478 <myhtml_tree_init@@Base+0x290>
   2d370:	add	sp, sp, #8
   2d374:	pop	{r4, r5, r6, r7, r8, pc}
   2d378:	mov	r0, #2
   2d37c:	add	sp, sp, #8
   2d380:	pop	{r4, r5, r6, r7, r8, pc}
   2d384:	ldr	r3, [r4, #8]
   2d388:	mov	r1, r5
   2d38c:	ldr	r0, [r3, #4]
   2d390:	bl	10a90 <mcobject_async_node_add@plt>
   2d394:	ldr	r3, [sp, #4]
   2d398:	cmp	r3, #0
   2d39c:	str	r0, [r4, #40]	; 0x28
   2d3a0:	bne	2d364 <myhtml_tree_init@@Base+0x17c>
   2d3a4:	ldr	r3, [r4, #8]
   2d3a8:	mov	r1, r5
   2d3ac:	ldr	r0, [r3, #8]
   2d3b0:	bl	10a90 <mcobject_async_node_add@plt>
   2d3b4:	ldr	r5, [sp, #4]
   2d3b8:	cmp	r5, #0
   2d3bc:	str	r0, [r4, #44]	; 0x2c
   2d3c0:	bne	2d364 <myhtml_tree_init@@Base+0x17c>
   2d3c4:	mov	r1, #4
   2d3c8:	ldr	r0, [r6, #20]
   2d3cc:	bl	ff14 <mycore_calloc@plt>
   2d3d0:	cmp	r0, #0
   2d3d4:	str	r0, [r4, #144]	; 0x90
   2d3d8:	movne	r7, sp
   2d3dc:	beq	2d378 <myhtml_tree_init@@Base+0x190>
   2d3e0:	ldr	r3, [r6, #20]
   2d3e4:	mov	r1, r7
   2d3e8:	cmp	r5, r3
   2d3ec:	bcs	2d414 <myhtml_tree_init@@Base+0x22c>
   2d3f0:	ldr	r0, [r4, #4]
   2d3f4:	ldr	r8, [r4, #144]	; 0x90
   2d3f8:	bl	10298 <mchar_async_node_add@plt>
   2d3fc:	str	r0, [r8, r5, lsl #2]
   2d400:	ldr	r0, [sp]
   2d404:	add	r5, r5, #1
   2d408:	cmp	r0, #0
   2d40c:	beq	2d3e0 <myhtml_tree_init@@Base+0x1f8>
   2d410:	b	2d254 <myhtml_tree_init@@Base+0x6c>
   2d414:	ldr	r3, [r4, #144]	; 0x90
   2d418:	ldr	r3, [r3]
   2d41c:	str	r3, [r4, #52]	; 0x34
   2d420:	bl	fd94 <mcsync_create@plt>
   2d424:	cmp	r0, #0
   2d428:	str	r0, [r4, #16]
   2d42c:	beq	2d378 <myhtml_tree_init@@Base+0x190>
   2d430:	bl	10868 <mcsync_init@plt>
   2d434:	cmp	r0, #0
   2d438:	bne	2d378 <myhtml_tree_init@@Base+0x190>
   2d43c:	bl	10d30 <myhtml_tag_create@plt>
   2d440:	mov	r1, r0
   2d444:	str	r0, [r4, #28]
   2d448:	mov	r0, r4
   2d44c:	bl	10b5c <myhtml_tag_init@plt>
   2d450:	str	r0, [sp]
   2d454:	mov	r0, r4
   2d458:	bl	106d0 <myhtml_tree_clean@plt>
   2d45c:	ldr	r0, [sp]
   2d460:	b	2d254 <myhtml_tree_init@@Base+0x6c>
   2d464:	ldrdeq	r2, [r0], -lr
   2d468:	strdeq	r9, [r0], -r8
   2d46c:	strdeq	r9, [r0], -r5
   2d470:	strdeq	r9, [r0], -r6
   2d474:	strdeq	r9, [r0], -r7
   2d478:	andeq	r9, r0, ip, lsr #2

0002d47c <myhtml_tree_clean_all@@Base>:
   2d47c:	push	{r4, lr}
   2d480:	mov	r4, r0
   2d484:	ldr	r0, [r0, #12]
   2d488:	bl	11054 <mcobject_async_clean@plt>
   2d48c:	ldr	r0, [r4, #8]
   2d490:	bl	105bc <myhtml_token_clean@plt>
   2d494:	ldr	r0, [r4, #4]
   2d498:	bl	10bc8 <mchar_async_clean@plt>
   2d49c:	mov	r0, r4
   2d4a0:	bl	ffe0 <myhtml_tree_node_create@plt>
   2d4a4:	mov	r0, r4
   2d4a8:	bl	ffe0 <myhtml_tree_node_create@plt>
   2d4ac:	mov	r3, #0
   2d4b0:	mov	r2, #2
   2d4b4:	str	r2, [r4, #180]	; 0xb4
   2d4b8:	str	r3, [r4, #88]	; 0x58
   2d4bc:	strb	r3, [r4, #108]	; 0x6c
   2d4c0:	str	r3, [r4, #112]	; 0x70
   2d4c4:	str	r3, [r4, #116]	; 0x74
   2d4c8:	str	r3, [r4, #120]	; 0x78
   2d4cc:	str	r3, [r4, #96]	; 0x60
   2d4d0:	str	r3, [r4, #100]	; 0x64
   2d4d4:	str	r3, [r4, #92]	; 0x5c
   2d4d8:	str	r3, [r4, #104]	; 0x68
   2d4dc:	str	r3, [r4, #160]	; 0xa0
   2d4e0:	str	r3, [r4, #164]	; 0xa4
   2d4e4:	str	r3, [r4, #168]	; 0xa8
   2d4e8:	str	r3, [r4, #172]	; 0xac
   2d4ec:	str	r3, [r4, #176]	; 0xb0
   2d4f0:	str	r3, [r4, #60]	; 0x3c
   2d4f4:	strb	r3, [r4, #188]	; 0xbc
   2d4f8:	str	r3, [r4, #156]	; 0x9c
   2d4fc:	str	r3, [r4, #76]	; 0x4c
   2d500:	str	r3, [r4, #80]	; 0x50
   2d504:	str	r3, [r4, #192]	; 0xc0
   2d508:	str	r3, [r4, #68]	; 0x44
   2d50c:	str	r3, [r4, #152]	; 0x98
   2d510:	str	r3, [r4, #196]	; 0xc4
   2d514:	str	r3, [r4, #200]	; 0xc8
   2d518:	str	r3, [r4, #204]	; 0xcc
   2d51c:	str	r0, [r4, #84]	; 0x54
   2d520:	ldr	r0, [r4, #148]	; 0x94
   2d524:	bl	1046c <myhtml_stream_buffer_clean@plt>
   2d528:	mov	r0, r4
   2d52c:	bl	10820 <myhtml_tree_active_formatting_clean@plt>
   2d530:	mov	r0, r4
   2d534:	bl	10e20 <myhtml_tree_open_elements_clean@plt>
   2d538:	ldr	r0, [r4, #132]	; 0x84
   2d53c:	bl	1028c <myhtml_tree_list_clean@plt>
   2d540:	ldr	r0, [r4, #136]	; 0x88
   2d544:	bl	10fe8 <myhtml_tree_token_list_clean@plt>
   2d548:	mov	r0, r4
   2d54c:	bl	10424 <myhtml_tree_template_insertion_clean@plt>
   2d550:	ldr	r0, [r4, #72]	; 0x48
   2d554:	bl	10f70 <mcobject_clean@plt>
   2d558:	ldr	r0, [r4, #28]
   2d55c:	bl	11078 <myhtml_tag_clean@plt>
   2d560:	ldr	r0, [r4, #20]
   2d564:	bl	109a0 <mythread_queue_list_entry_clean@plt>
   2d568:	ldr	r3, [r4]
   2d56c:	ldr	r1, [r4, #20]
   2d570:	ldr	r0, [r3, #4]
   2d574:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   2d578:	ldr	r3, [r4]
   2d57c:	ldr	r1, [r4, #20]
   2d580:	ldr	r0, [r3]
   2d584:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   2d588:	ldr	r3, [r4, #8]
   2d58c:	mov	r0, r3
   2d590:	ldr	r1, [r3, #16]
   2d594:	bl	10904 <myhtml_token_attr_create@plt>
   2d598:	str	r0, [r4, #56]	; 0x38
   2d59c:	pop	{r4, pc}

0002d5a0 <myhtml_tree_token_list_destroy@@Base>:
   2d5a0:	push	{r4, r5, r6, lr}
   2d5a4:	subs	r4, r0, #0
   2d5a8:	beq	2d5c8 <myhtml_tree_token_list_destroy@@Base+0x28>
   2d5ac:	ldr	r0, [r4]
   2d5b0:	mov	r5, r1
   2d5b4:	cmp	r0, #0
   2d5b8:	beq	2d5c0 <myhtml_tree_token_list_destroy@@Base+0x20>
   2d5bc:	bl	10dcc <mycore_free@plt>
   2d5c0:	cmp	r5, #0
   2d5c4:	bne	2d5d0 <myhtml_tree_token_list_destroy@@Base+0x30>
   2d5c8:	mov	r0, r4
   2d5cc:	pop	{r4, r5, r6, pc}
   2d5d0:	mov	r0, r4
   2d5d4:	bl	10dcc <mycore_free@plt>
   2d5d8:	mov	r4, #0
   2d5dc:	b	2d5c8 <myhtml_tree_token_list_destroy@@Base+0x28>

0002d5e0 <myhtml_tree_token_list_append@@Base>:
   2d5e0:	push	{r4, r5, r6, lr}
   2d5e4:	mov	r5, r1
   2d5e8:	ldr	r3, [r0, #4]
   2d5ec:	ldr	r1, [r0, #8]
   2d5f0:	mov	r4, r0
   2d5f4:	cmp	r3, r1
   2d5f8:	bcs	2d610 <myhtml_tree_token_list_append@@Base+0x30>
   2d5fc:	ldr	r0, [r0]
   2d600:	add	r2, r3, #1
   2d604:	str	r5, [r0, r3, lsl #2]
   2d608:	str	r2, [r4, #4]
   2d60c:	pop	{r4, r5, r6, pc}
   2d610:	lsl	r3, r1, #1
   2d614:	str	r3, [r0, #8]
   2d618:	lsl	r1, r1, #3
   2d61c:	ldr	r0, [r0]
   2d620:	bl	fbd8 <mycore_realloc@plt>
   2d624:	cmp	r0, #0
   2d628:	strne	r0, [r4]
   2d62c:	ldmeq	r4, {r0, r3}
   2d630:	ldrne	r3, [r4, #4]
   2d634:	b	2d600 <myhtml_tree_token_list_append@@Base+0x20>

0002d638 <myhtml_tree_token_list_append_after_index@@Base>:
   2d638:	push	{r4, r5, r6, lr}
   2d63c:	mov	r6, r1
   2d640:	ldr	ip, [r0, #4]
   2d644:	ldr	r1, [r0, #8]
   2d648:	mov	r5, r0
   2d64c:	cmp	ip, r1
   2d650:	mov	r4, r2
   2d654:	bcs	2d694 <myhtml_tree_token_list_append_after_index@@Base+0x5c>
   2d658:	ldr	r0, [r0]
   2d65c:	cmp	r4, ip
   2d660:	bls	2d680 <myhtml_tree_token_list_append_after_index@@Base+0x48>
   2d664:	ldr	lr, [r0, r4, lsl #2]
   2d668:	add	r1, r0, r4, lsl #2
   2d66c:	mov	r3, r4
   2d670:	add	r3, r3, #1
   2d674:	cmp	r3, ip
   2d678:	str	lr, [r1, #4]!
   2d67c:	bhi	2d670 <myhtml_tree_token_list_append_after_index@@Base+0x38>
   2d680:	add	r4, r4, #1
   2d684:	add	ip, ip, #1
   2d688:	str	r6, [r0, r4, lsl #2]
   2d68c:	str	ip, [r5, #4]
   2d690:	pop	{r4, r5, r6, pc}
   2d694:	lsl	r3, r1, #1
   2d698:	str	r3, [r0, #8]
   2d69c:	lsl	r1, r1, #3
   2d6a0:	ldr	r0, [r0]
   2d6a4:	bl	fbd8 <mycore_realloc@plt>
   2d6a8:	cmp	r0, #0
   2d6ac:	strne	r0, [r5]
   2d6b0:	ldmeq	r5, {r0, ip}
   2d6b4:	ldrne	ip, [r5, #4]
   2d6b8:	b	2d65c <myhtml_tree_token_list_append_after_index@@Base+0x24>

0002d6bc <myhtml_tree_token_list_current_node@@Base>:
   2d6bc:	ldr	r3, [r0, #4]
   2d6c0:	cmp	r3, #0
   2d6c4:	subne	r3, r3, #-1073741823	; 0xc0000001
   2d6c8:	ldrne	r2, [r0]
   2d6cc:	ldrne	r0, [r2, r3, lsl #2]
   2d6d0:	moveq	r0, r3
   2d6d4:	bx	lr

0002d6d8 <myhtml_tree_tags_close_p@@Base>:
   2d6d8:	push	{r4, lr}
   2d6dc:	mov	r2, #1
   2d6e0:	mov	r4, r0
   2d6e4:	mov	r1, #99	; 0x63
   2d6e8:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   2d6ec:	mov	r0, r4
   2d6f0:	bl	10628 <myhtml_tree_current_node@plt>
   2d6f4:	mov	r1, #99	; 0x63
   2d6f8:	bl	10aa8 <myhtml_is_html_node@plt>
   2d6fc:	mov	r0, r4
   2d700:	mov	r3, #0
   2d704:	mov	r2, #1
   2d708:	mov	r1, #99	; 0x63
   2d70c:	pop	{r4, lr}
   2d710:	b	1094c <myhtml_tree_open_elements_pop_until@plt>

0002d714 <myhtml_tree_generic_raw_text_element_parsing_algorithm@@Base>:
   2d714:	push	{r4, lr}
   2d718:	mov	r4, r0
   2d71c:	mov	r2, #1
   2d720:	bl	10cb8 <myhtml_tree_node_insert_by_token@plt>
   2d724:	ldr	r2, [r4, #168]	; 0xa8
   2d728:	mov	r3, #7
   2d72c:	str	r2, [r4, #172]	; 0xac
   2d730:	str	r3, [r4, #168]	; 0xa8
   2d734:	pop	{r4, pc}

0002d738 <myhtml_tree_clear_stack_back_table_context@@Base>:
   2d738:	push	{r4, lr}
   2d73c:	mov	r4, r0
   2d740:	bl	10628 <myhtml_tree_current_node@plt>
   2d744:	mov	r1, r0
   2d748:	b	2d75c <myhtml_tree_clear_stack_back_table_context@@Base+0x24>
   2d74c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2d750:	mov	r0, r4
   2d754:	bl	10628 <myhtml_tree_current_node@plt>
   2d758:	mov	r1, r0
   2d75c:	ldr	r2, [r1, #4]
   2d760:	mov	r0, r4
   2d764:	cmp	r2, #125	; 0x7d
   2d768:	cmpne	r2, #128	; 0x80
   2d76c:	movne	r3, #1
   2d770:	moveq	r3, #0
   2d774:	cmp	r2, #65	; 0x41
   2d778:	moveq	r3, #0
   2d77c:	andne	r3, r3, #1
   2d780:	cmp	r3, #0
   2d784:	bne	2d74c <myhtml_tree_clear_stack_back_table_context@@Base+0x14>
   2d788:	ldr	r3, [r1, #8]
   2d78c:	cmp	r3, #1
   2d790:	bne	2d74c <myhtml_tree_clear_stack_back_table_context@@Base+0x14>
   2d794:	pop	{r4, pc}

0002d798 <myhtml_tree_clear_stack_back_table_body_context@@Base>:
   2d798:	push	{r4, r5, r6, lr}
   2d79c:	mov	r4, r0
   2d7a0:	bl	10628 <myhtml_tree_current_node@plt>
   2d7a4:	mov	r6, #1
   2d7a8:	mov	r5, #85	; 0x55
   2d7ac:	mov	ip, r0
   2d7b0:	b	2d7c4 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x2c>
   2d7b4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2d7b8:	mov	r0, r4
   2d7bc:	bl	10628 <myhtml_tree_current_node@plt>
   2d7c0:	mov	ip, r0
   2d7c4:	ldr	r2, [ip, #4]
   2d7c8:	mov	r3, r6
   2d7cc:	sub	r1, r2, #126	; 0x7e
   2d7d0:	cmp	r1, #6
   2d7d4:	mvnls	r3, r5, lsr r1
   2d7d8:	cmp	r2, #65	; 0x41
   2d7dc:	moveq	r3, #0
   2d7e0:	andne	r3, r3, #1
   2d7e4:	cmp	r3, #0
   2d7e8:	mov	r0, r4
   2d7ec:	bne	2d7b4 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x1c>
   2d7f0:	ldr	r3, [ip, #8]
   2d7f4:	cmp	r3, #1
   2d7f8:	bne	2d7b4 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x1c>
   2d7fc:	pop	{r4, r5, r6, pc}

0002d800 <myhtml_tree_clear_stack_back_table_row_context@@Base>:
   2d800:	push	{r4, lr}
   2d804:	mov	r4, r0
   2d808:	bl	10628 <myhtml_tree_current_node@plt>
   2d80c:	mov	r1, r0
   2d810:	b	2d824 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x24>
   2d814:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2d818:	mov	r0, r4
   2d81c:	bl	10628 <myhtml_tree_current_node@plt>
   2d820:	mov	r1, r0
   2d824:	ldr	r2, [r1, #4]
   2d828:	mov	r0, r4
   2d82c:	cmp	r2, #135	; 0x87
   2d830:	cmpne	r2, #128	; 0x80
   2d834:	movne	r3, #1
   2d838:	moveq	r3, #0
   2d83c:	cmp	r2, #65	; 0x41
   2d840:	moveq	r3, #0
   2d844:	andne	r3, r3, #1
   2d848:	cmp	r3, #0
   2d84c:	bne	2d814 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x14>
   2d850:	ldr	r3, [r1, #8]
   2d854:	cmp	r3, #1
   2d858:	bne	2d814 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x14>
   2d85c:	pop	{r4, pc}

0002d860 <myhtml_tree_close_cell@@Base>:
   2d860:	mov	r2, #0
   2d864:	push	{r4, r5, r6, lr}
   2d868:	mov	r4, r0
   2d86c:	mov	r5, r1
   2d870:	mov	r1, r2
   2d874:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   2d878:	mov	r0, r4
   2d87c:	bl	10628 <myhtml_tree_current_node@plt>
   2d880:	mov	r3, #0
   2d884:	ldmib	r5, {r1, r2}
   2d888:	mov	r0, r4
   2d88c:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   2d890:	mov	r0, r4
   2d894:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   2d898:	mov	r3, #13
   2d89c:	str	r3, [r4, #168]	; 0xa8
   2d8a0:	pop	{r4, r5, r6, pc}

0002d8a4 <myhtml_tree_is_mathml_integration_point@@Base>:
   2d8a4:	ldr	r3, [r1, #8]
   2d8a8:	cmp	r3, #2
   2d8ac:	beq	2d8b8 <myhtml_tree_is_mathml_integration_point@@Base+0x14>
   2d8b0:	mov	r0, #0
   2d8b4:	bx	lr
   2d8b8:	ldr	r3, [r1, #4]
   2d8bc:	sub	r2, r3, #227	; 0xe3
   2d8c0:	cmp	r2, #11
   2d8c4:	movhi	r0, #0
   2d8c8:	ldrls	r0, [pc, #20]	; 2d8e4 <myhtml_tree_is_mathml_integration_point@@Base+0x40>
   2d8cc:	mvnls	r0, r0, lsr r2
   2d8d0:	andls	r0, r0, #1
   2d8d4:	eorls	r0, r0, #1
   2d8d8:	cmp	r3, #88	; 0x58
   2d8dc:	orreq	r0, r0, #1
   2d8e0:	bx	lr
   2d8e4:	andeq	r0, r0, r1, lsr r8

0002d8e8 <myhtml_tree_is_html_integration_point@@Base>:
   2d8e8:	ldr	r3, [r1, #8]
   2d8ec:	cmp	r3, #3
   2d8f0:	beq	2d924 <myhtml_tree_is_html_integration_point@@Base+0x3c>
   2d8f4:	cmp	r3, #2
   2d8f8:	beq	2d904 <myhtml_tree_is_html_integration_point@@Base+0x1c>
   2d8fc:	mov	r0, #0
   2d900:	bx	lr
   2d904:	push	{r4, r5, r6, r7, lr}
   2d908:	sub	sp, sp, #12
   2d90c:	ldr	r6, [r1, #4]
   2d910:	cmp	r6, #8
   2d914:	beq	2d944 <myhtml_tree_is_html_integration_point@@Base+0x5c>
   2d918:	mov	r0, #0
   2d91c:	add	sp, sp, #12
   2d920:	pop	{r4, r5, r6, r7, pc}
   2d924:	ldr	r1, [r1, #4]
   2d928:	cmp	r1, #156	; 0x9c
   2d92c:	cmpne	r1, #189	; 0xbd
   2d930:	moveq	r0, #1
   2d934:	movne	r0, #0
   2d938:	cmp	r1, #134	; 0x86
   2d93c:	orreq	r0, r0, #1
   2d940:	bx	lr
   2d944:	ldr	r3, [r1, #32]
   2d948:	cmp	r3, #0
   2d94c:	beq	2d918 <myhtml_tree_is_html_integration_point@@Base+0x30>
   2d950:	ldr	r2, [r3, #48]	; 0x30
   2d954:	tst	r2, #1
   2d958:	bne	2d918 <myhtml_tree_is_html_integration_point@@Base+0x30>
   2d95c:	mov	r5, r0
   2d960:	mov	r4, r1
   2d964:	ldr	r0, [r0, #8]
   2d968:	mov	r1, r3
   2d96c:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   2d970:	ldr	r3, [pc, #96]	; 2d9d8 <myhtml_tree_is_html_integration_point@@Base+0xf0>
   2d974:	ldr	r7, [pc, #96]	; 2d9dc <myhtml_tree_is_html_integration_point@@Base+0xf4>
   2d978:	add	r3, pc, r3
   2d97c:	mov	ip, #9
   2d980:	add	r7, pc, r7
   2d984:	ldr	r1, [r4, #32]
   2d988:	ldr	r0, [r5, #8]
   2d98c:	mov	r2, r7
   2d990:	stm	sp, {r3, ip}
   2d994:	mov	r3, r6
   2d998:	bl	fd34 <myhtml_token_attr_match_case@plt>
   2d99c:	cmp	r0, #0
   2d9a0:	movne	r0, #1
   2d9a4:	bne	2d91c <myhtml_tree_is_html_integration_point@@Base+0x34>
   2d9a8:	ldr	ip, [pc, #48]	; 2d9e0 <myhtml_tree_is_html_integration_point@@Base+0xf8>
   2d9ac:	mov	lr, #21
   2d9b0:	add	ip, pc, ip
   2d9b4:	ldr	r1, [r4, #32]
   2d9b8:	ldr	r0, [r5, #8]
   2d9bc:	mov	r3, r6
   2d9c0:	mov	r2, r7
   2d9c4:	stm	sp, {ip, lr}
   2d9c8:	bl	fd34 <myhtml_token_attr_match_case@plt>
   2d9cc:	adds	r0, r0, #0
   2d9d0:	movne	r0, #1
   2d9d4:	b	2d91c <myhtml_tree_is_html_integration_point@@Base+0x34>
   2d9d8:	muleq	ip, r0, r7
   2d9dc:	andeq	pc, ip, ip, ror r7	; <UNPREDICTABLE>
   2d9e0:	andeq	pc, ip, r4, ror #14

0002d9e4 <myhtml_tree_temp_tag_name_init@@Base>:
   2d9e4:	push	{r4, lr}
   2d9e8:	mov	r4, r0
   2d9ec:	mov	r3, #0
   2d9f0:	mov	r0, #1024	; 0x400
   2d9f4:	str	r3, [r4, #4]
   2d9f8:	str	r0, [r4, #8]
   2d9fc:	bl	10c94 <mycore_malloc@plt>
   2da00:	cmp	r0, #0
   2da04:	str	r0, [r4]
   2da08:	moveq	r0, #2
   2da0c:	movne	r0, #0
   2da10:	pop	{r4, pc}

0002da14 <myhtml_tree_temp_tag_name_clean@@Base>:
   2da14:	mov	r3, #0
   2da18:	str	r3, [r0, #4]
   2da1c:	bx	lr

0002da20 <myhtml_tree_temp_tag_name_destroy@@Base>:
   2da20:	push	{r4, r5, r6, lr}
   2da24:	subs	r4, r0, #0
   2da28:	beq	2da50 <myhtml_tree_temp_tag_name_destroy@@Base+0x30>
   2da2c:	ldr	r0, [r4]
   2da30:	mov	r5, r1
   2da34:	cmp	r0, #0
   2da38:	beq	2da48 <myhtml_tree_temp_tag_name_destroy@@Base+0x28>
   2da3c:	bl	10dcc <mycore_free@plt>
   2da40:	mov	r3, #0
   2da44:	str	r3, [r4]
   2da48:	cmp	r5, #0
   2da4c:	bne	2da58 <myhtml_tree_temp_tag_name_destroy@@Base+0x38>
   2da50:	mov	r0, r4
   2da54:	pop	{r4, r5, r6, pc}
   2da58:	mov	r0, r4
   2da5c:	bl	10dcc <mycore_free@plt>
   2da60:	mov	r4, #0
   2da64:	b	2da50 <myhtml_tree_temp_tag_name_destroy@@Base+0x30>

0002da68 <myhtml_tree_destroy@@Base>:
   2da68:	push	{r4, lr}
   2da6c:	subs	r4, r0, #0
   2da70:	beq	2db48 <myhtml_tree_destroy@@Base+0xe0>
   2da74:	ldr	r0, [r4, #28]
   2da78:	bl	10e44 <myhtml_tag_destroy@plt>
   2da7c:	str	r0, [r4, #28]
   2da80:	mov	r0, r4
   2da84:	bl	100dc <myhtml_tree_active_formatting_destroy@plt>
   2da88:	str	r0, [r4, #124]	; 0x7c
   2da8c:	mov	r0, r4
   2da90:	bl	10ce8 <myhtml_tree_open_elements_destroy@plt>
   2da94:	mov	r1, #1
   2da98:	str	r0, [r4, #128]	; 0x80
   2da9c:	ldr	r0, [r4, #132]	; 0x84
   2daa0:	bl	106f4 <myhtml_tree_list_destroy@plt>
   2daa4:	mov	r1, #1
   2daa8:	str	r0, [r4, #132]	; 0x84
   2daac:	ldr	r0, [r4, #136]	; 0x88
   2dab0:	bl	fc74 <myhtml_tree_token_list_destroy@plt>
   2dab4:	str	r0, [r4, #136]	; 0x88
   2dab8:	mov	r0, r4
   2dabc:	bl	10e38 <myhtml_tree_template_insertion_destroy@plt>
   2dac0:	mov	r1, #1
   2dac4:	str	r0, [r4, #140]	; 0x8c
   2dac8:	ldr	r0, [r4, #16]
   2dacc:	bl	101b4 <mcsync_destroy@plt>
   2dad0:	mov	r1, #1
   2dad4:	str	r0, [r4, #16]
   2dad8:	ldr	r0, [r4, #12]
   2dadc:	bl	10b20 <mcobject_async_destroy@plt>
   2dae0:	str	r0, [r4, #12]
   2dae4:	ldr	r0, [r4, #8]
   2dae8:	bl	10784 <myhtml_token_destroy@plt>
   2daec:	mov	r1, #1
   2daf0:	str	r0, [r4, #8]
   2daf4:	ldr	r0, [r4, #4]
   2daf8:	bl	10da8 <mchar_async_destroy@plt>
   2dafc:	mov	r1, #1
   2db00:	str	r0, [r4, #4]
   2db04:	ldr	r0, [r4, #148]	; 0x94
   2db08:	bl	fd28 <myhtml_stream_buffer_destroy@plt>
   2db0c:	str	r0, [r4, #148]	; 0x94
   2db10:	ldr	r0, [r4, #24]
   2db14:	bl	102d4 <mythread_queue_destroy@plt>
   2db18:	mov	r1, #1
   2db1c:	str	r0, [r4, #24]
   2db20:	ldr	r0, [r4, #72]	; 0x48
   2db24:	bl	fdd0 <mcobject_destroy@plt>
   2db28:	mov	r1, #0
   2db2c:	str	r0, [r4, #72]	; 0x48
   2db30:	add	r0, r4, #208	; 0xd0
   2db34:	bl	10940 <myhtml_tree_temp_tag_name_destroy@plt>
   2db38:	ldr	r0, [r4, #144]	; 0x90
   2db3c:	bl	10dcc <mycore_free@plt>
   2db40:	mov	r0, r4
   2db44:	bl	10dcc <mycore_free@plt>
   2db48:	mov	r0, #0
   2db4c:	pop	{r4, pc}

0002db50 <myhtml_tree_temp_tag_name_append_one@@Base>:
   2db50:	push	{r4, r5, r6, lr}
   2db54:	mov	r6, r1
   2db58:	ldr	r3, [r0, #4]
   2db5c:	ldr	r1, [r0, #8]
   2db60:	mov	r4, r0
   2db64:	cmp	r3, r1
   2db68:	bcs	2db88 <myhtml_tree_temp_tag_name_append_one@@Base+0x38>
   2db6c:	ldr	r0, [r0]
   2db70:	strb	r6, [r0, r3]
   2db74:	ldr	r3, [r4, #4]
   2db78:	mov	r0, #0
   2db7c:	add	r3, r3, #1
   2db80:	str	r3, [r4, #4]
   2db84:	pop	{r4, r5, r6, pc}
   2db88:	lsl	r5, r1, #1
   2db8c:	mov	r1, r5
   2db90:	ldr	r0, [r0]
   2db94:	bl	fbd8 <mycore_realloc@plt>
   2db98:	cmp	r0, #0
   2db9c:	ldrne	r3, [r4, #4]
   2dba0:	strne	r5, [r4, #8]
   2dba4:	strne	r0, [r4]
   2dba8:	bne	2db70 <myhtml_tree_temp_tag_name_append_one@@Base+0x20>
   2dbac:	mov	r0, #2
   2dbb0:	pop	{r4, r5, r6, pc}

0002dbb4 <myhtml_tree_temp_tag_name_append@@Base>:
   2dbb4:	ldr	r3, [r0]
   2dbb8:	cmp	r3, #0
   2dbbc:	cmpne	r2, #0
   2dbc0:	beq	2dc2c <myhtml_tree_temp_tag_name_append@@Base+0x78>
   2dbc4:	push	{r4, r5, r6, r7, r8, lr}
   2dbc8:	mov	r5, r1
   2dbcc:	mov	r4, r0
   2dbd0:	ldmib	r0, {r0, r1}
   2dbd4:	mov	r6, r2
   2dbd8:	add	r2, r2, r0
   2dbdc:	cmp	r2, r1
   2dbe0:	bcc	2dc08 <myhtml_tree_temp_tag_name_append@@Base+0x54>
   2dbe4:	add	r7, r6, r1, lsl #1
   2dbe8:	mov	r0, r3
   2dbec:	mov	r1, r7
   2dbf0:	bl	fbd8 <mycore_realloc@plt>
   2dbf4:	subs	r3, r0, #0
   2dbf8:	beq	2dc34 <myhtml_tree_temp_tag_name_append@@Base+0x80>
   2dbfc:	ldr	r0, [r4, #4]
   2dc00:	str	r7, [r4, #8]
   2dc04:	str	r3, [r4]
   2dc08:	mov	r2, r6
   2dc0c:	mov	r1, r5
   2dc10:	add	r0, r3, r0
   2dc14:	bl	ff5c <memcpy@plt>
   2dc18:	ldr	r2, [r4, #4]
   2dc1c:	mov	r0, #0
   2dc20:	add	r2, r2, r6
   2dc24:	str	r2, [r4, #4]
   2dc28:	pop	{r4, r5, r6, r7, r8, pc}
   2dc2c:	mov	r0, #0
   2dc30:	bx	lr
   2dc34:	mov	r0, #2
   2dc38:	pop	{r4, r5, r6, r7, r8, pc}

0002dc3c <myhtml_tree_wait_for_last_done_token@@Base>:
   2dc3c:	ldr	r3, [r0, #152]	; 0x98
   2dc40:	cmp	r1, r3
   2dc44:	bxeq	lr
   2dc48:	push	{r4, r5, r6, lr}
   2dc4c:	mov	r4, r0
   2dc50:	mov	r5, r1
   2dc54:	ldr	r3, [r4]
   2dc58:	ldr	r3, [r3]
   2dc5c:	ldr	r0, [r3, #24]
   2dc60:	bl	100a0 <mythread_nanosleep_sleep@plt>
   2dc64:	ldr	r3, [r4, #152]	; 0x98
   2dc68:	cmp	r3, r5
   2dc6c:	bne	2dc54 <myhtml_tree_wait_for_last_done_token@@Base+0x18>
   2dc70:	pop	{r4, r5, r6, pc}

0002dc74 <myhtml_tree_special_list_init@@Base>:
   2dc74:	mov	r2, #0
   2dc78:	mov	r3, #1024	; 0x400
   2dc7c:	push	{r4, lr}
   2dc80:	mov	r4, r0
   2dc84:	stmib	r0, {r2, r3}
   2dc88:	mov	r0, #8192	; 0x2000
   2dc8c:	bl	10c94 <mycore_malloc@plt>
   2dc90:	cmp	r0, #0
   2dc94:	str	r0, [r4]
   2dc98:	moveq	r0, #2
   2dc9c:	movne	r0, #0
   2dca0:	pop	{r4, pc}

0002dca4 <myhtml_tree_special_list_clean@@Base>:
   2dca4:	mov	r3, #0
   2dca8:	str	r3, [r0, #4]
   2dcac:	bx	lr

0002dcb0 <myhtml_tree_special_list_destroy@@Base>:
   2dcb0:	push	{r4, r5, r6, lr}
   2dcb4:	subs	r4, r0, #0
   2dcb8:	beq	2dce0 <myhtml_tree_special_list_destroy@@Base+0x30>
   2dcbc:	ldr	r0, [r4]
   2dcc0:	mov	r5, r1
   2dcc4:	cmp	r0, #0
   2dcc8:	beq	2dcd8 <myhtml_tree_special_list_destroy@@Base+0x28>
   2dccc:	bl	10dcc <mycore_free@plt>
   2dcd0:	mov	r3, #0
   2dcd4:	str	r3, [r4]
   2dcd8:	cmp	r5, #0
   2dcdc:	bne	2dce8 <myhtml_tree_special_list_destroy@@Base+0x38>
   2dce0:	mov	r0, r4
   2dce4:	pop	{r4, r5, r6, pc}
   2dce8:	mov	r0, r4
   2dcec:	bl	10dcc <mycore_free@plt>
   2dcf0:	mov	r4, #0
   2dcf4:	b	2dce0 <myhtml_tree_special_list_destroy@@Base+0x30>

0002dcf8 <myhtml_tree_special_list_append@@Base>:
   2dcf8:	ldmib	r0, {r3, ip}
   2dcfc:	push	{r4, r5, r6, r7, r8, lr}
   2dd00:	mov	r4, r0
   2dd04:	cmp	r3, ip
   2dd08:	mov	r6, r1
   2dd0c:	mov	r7, r2
   2dd10:	bcs	2dd34 <myhtml_tree_special_list_append@@Base+0x3c>
   2dd14:	ldr	r1, [r0]
   2dd18:	add	r0, r1, r3, lsl #3
   2dd1c:	add	r2, r3, #1
   2dd20:	str	r7, [r0, #4]
   2dd24:	str	r6, [r1, r3, lsl #3]
   2dd28:	mov	r0, #0
   2dd2c:	str	r2, [r4, #4]
   2dd30:	pop	{r4, r5, r6, r7, r8, pc}
   2dd34:	lsl	r1, ip, #4
   2dd38:	ldr	r0, [r0]
   2dd3c:	lsl	r5, ip, #1
   2dd40:	bl	fbd8 <mycore_realloc@plt>
   2dd44:	subs	r1, r0, #0
   2dd48:	ldrne	r3, [r4, #4]
   2dd4c:	strne	r5, [r4, #8]
   2dd50:	strne	r1, [r4]
   2dd54:	bne	2dd18 <myhtml_tree_special_list_append@@Base+0x20>
   2dd58:	mov	r0, #2
   2dd5c:	pop	{r4, r5, r6, r7, r8, pc}

0002dd60 <myhtml_tree_special_list_length@@Base>:
   2dd60:	ldr	r0, [r0, #4]
   2dd64:	bx	lr

0002dd68 <myhtml_tree_special_list_pop@@Base>:
   2dd68:	ldr	r3, [r0, #4]
   2dd6c:	cmp	r3, #0
   2dd70:	subne	r3, r3, #1
   2dd74:	strne	r3, [r0, #4]
   2dd78:	mov	r0, r3
   2dd7c:	bx	lr

0002dd80 <myhtml_tree_special_list_get_last@@Base>:
   2dd80:	ldr	r3, [r0, #4]
   2dd84:	cmp	r3, #0
   2dd88:	ldrne	r0, [r0]
   2dd8c:	addne	r0, r0, r3, lsl #3
   2dd90:	moveq	r0, r3
   2dd94:	bx	lr

0002dd98 <myhtml_tree_incoming_buffer_first@@Base>:
   2dd98:	ldr	r0, [r0, #80]	; 0x50
   2dd9c:	bx	lr

0002dda0 <myhtml_tree_incomming_buffer_make_data@@Base>:
   2dda0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2dda4:	mov	r9, r0
   2dda8:	ldr	r0, [r0, #80]	; 0x50
   2ddac:	mov	r6, r2
   2ddb0:	mov	r5, r1
   2ddb4:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   2ddb8:	mov	r4, r0
   2ddbc:	ldr	r0, [r0, #12]
   2ddc0:	ldr	r3, [r4, #8]
   2ddc4:	sub	r5, r5, r0
   2ddc8:	add	sl, r5, r6
   2ddcc:	cmp	sl, r3
   2ddd0:	bls	2de38 <myhtml_tree_incomming_buffer_make_data@@Base+0x98>
   2ddd4:	ldr	r3, [r9, #208]	; 0xd0
   2ddd8:	add	r7, r9, #208	; 0xd0
   2dddc:	cmp	r3, #0
   2dde0:	mov	r0, r7
   2dde4:	beq	2de5c <myhtml_tree_incomming_buffer_make_data@@Base+0xbc>
   2dde8:	bl	10280 <myhtml_tree_temp_tag_name_clean@plt>
   2ddec:	mov	r8, #0
   2ddf0:	b	2ddf8 <myhtml_tree_incomming_buffer_make_data@@Base+0x58>
   2ddf4:	mov	sl, r6
   2ddf8:	ldr	r3, [r4, #8]
   2ddfc:	mov	r0, r7
   2de00:	sub	ip, r3, r5
   2de04:	cmp	sl, r3
   2de08:	mov	r2, ip
   2de0c:	ldr	r1, [r4]
   2de10:	bls	2de44 <myhtml_tree_incomming_buffer_make_data@@Base+0xa4>
   2de14:	add	r1, r1, r5
   2de18:	sub	r6, r6, ip
   2de1c:	bl	fc8c <myhtml_tree_temp_tag_name_append@plt>
   2de20:	ldr	r4, [r4, #20]
   2de24:	mov	r5, r8
   2de28:	cmp	r4, #0
   2de2c:	bne	2ddf4 <myhtml_tree_incomming_buffer_make_data@@Base+0x54>
   2de30:	ldr	r0, [r9, #208]	; 0xd0
   2de34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2de38:	ldr	r0, [r4]
   2de3c:	add	r0, r0, r5
   2de40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2de44:	mov	r2, r6
   2de48:	add	r1, r1, r5
   2de4c:	mov	r0, r7
   2de50:	bl	fc8c <myhtml_tree_temp_tag_name_append@plt>
   2de54:	ldr	r0, [r9, #208]	; 0xd0
   2de58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2de5c:	bl	10604 <myhtml_tree_temp_tag_name_init@plt>
   2de60:	b	2ddec <myhtml_tree_incomming_buffer_make_data@@Base+0x4c>

0002de64 <mycore_fopen@@Base>:
   2de64:	b	fdb8 <fopen@plt>

0002de68 <mycore_fclose@@Base>:
   2de68:	b	10a00 <fclose@plt>

0002de6c <mycore_fread@@Base>:
   2de6c:	b	103d0 <fread@plt>

0002de70 <mycore_fwrite@@Base>:
   2de70:	b	10340 <fwrite@plt>

0002de74 <mycore_fflush@@Base>:
   2de74:	b	fe0c <fflush@plt>

0002de78 <mycore_fseek@@Base>:
   2de78:	b	10f28 <fseek@plt>

0002de7c <mycore_ftell@@Base>:
   2de7c:	b	10064 <ftell@plt>

0002de80 <mycore_ferror@@Base>:
   2de80:	b	ff50 <ferror@plt>

0002de84 <mycore_setbuf@@Base>:
   2de84:	b	fd04 <setbuf@plt>

0002de88 <mycore_malloc@@Base>:
   2de88:	b	10508 <malloc@plt>

0002de8c <mycore_realloc@@Base>:
   2de8c:	b	101e4 <realloc@plt>

0002de90 <mycore_calloc@@Base>:
   2de90:	b	fbe4 <calloc@plt>

0002de94 <mycore_free@@Base>:
   2de94:	push	{r4, lr}
   2de98:	bl	feb4 <free@plt>
   2de9c:	mov	r0, #0
   2dea0:	pop	{r4, pc}

0002dea4 <mythread_thread_create@@Base>:
   2dea4:	push	{r4, r5, r6, r7, r8, lr}
   2dea8:	mov	r5, r0
   2deac:	mov	r6, r1
   2deb0:	mov	r0, #1
   2deb4:	mov	r1, #4
   2deb8:	mov	r7, r2
   2debc:	bl	ff14 <mycore_calloc@plt>
   2dec0:	subs	r4, r0, #0
   2dec4:	beq	2dee8 <mythread_thread_create@@Base+0x44>
   2dec8:	mov	r3, r7
   2decc:	mov	r2, r6
   2ded0:	ldr	r1, [r5, #20]
   2ded4:	bl	103dc <pthread_create@plt>
   2ded8:	cmp	r0, #0
   2dedc:	bne	2dee8 <mythread_thread_create@@Base+0x44>
   2dee0:	mov	r0, r4
   2dee4:	pop	{r4, r5, r6, r7, r8, pc}
   2dee8:	mov	r4, #0
   2deec:	mov	r0, r4
   2def0:	pop	{r4, r5, r6, r7, r8, pc}

0002def4 <mythread_thread_join@@Base>:
   2def4:	push	{r4, lr}
   2def8:	ldr	r0, [r1]
   2defc:	mov	r1, #0
   2df00:	bl	10b68 <pthread_join@plt>
   2df04:	adds	r0, r0, #0
   2df08:	movne	r0, #1
   2df0c:	pop	{r4, pc}

0002df10 <mythread_thread_cancel@@Base>:
   2df10:	push	{r4, lr}
   2df14:	ldr	r0, [r1]
   2df18:	bl	108f8 <pthread_cancel@plt>
   2df1c:	adds	r0, r0, #0
   2df20:	movne	r0, #1
   2df24:	pop	{r4, pc}

0002df28 <mythread_thread_destroy@@Base>:
   2df28:	push	{r4, lr}
   2df2c:	mov	r0, r1
   2df30:	bl	10dcc <mycore_free@plt>
   2df34:	mov	r0, #0
   2df38:	pop	{r4, pc}

0002df3c <mythread_thread_attr_init@@Base>:
   2df3c:	push	{r4, r5, r6, lr}
   2df40:	mov	r1, #36	; 0x24
   2df44:	mov	r6, r0
   2df48:	mov	r0, #1
   2df4c:	bl	ff14 <mycore_calloc@plt>
   2df50:	subs	r4, r0, #0
   2df54:	beq	2df94 <mythread_thread_attr_init@@Base+0x58>
   2df58:	bl	1079c <pthread_attr_init@plt>
   2df5c:	cmp	r0, #0
   2df60:	mov	r5, r0
   2df64:	str	r0, [r6, #28]
   2df68:	bne	2df8c <mythread_thread_attr_init@@Base+0x50>
   2df6c:	mov	r1, r0
   2df70:	mov	r0, r4
   2df74:	bl	10f58 <pthread_attr_setdetachstate@plt>
   2df78:	cmp	r0, #0
   2df7c:	str	r0, [r6, #28]
   2df80:	mov	r0, r4
   2df84:	bne	2df90 <mythread_thread_attr_init@@Base+0x54>
   2df88:	pop	{r4, r5, r6, pc}
   2df8c:	mov	r0, r4
   2df90:	bl	10dcc <mycore_free@plt>
   2df94:	mov	r0, #0
   2df98:	pop	{r4, r5, r6, pc}

0002df9c <mythread_thread_attr_clean@@Base>:
   2df9c:	bx	lr

0002dfa0 <mythread_thread_attr_destroy@@Base>:
   2dfa0:	push	{r4, r5, r6, lr}
   2dfa4:	subs	r4, r1, #0
   2dfa8:	popeq	{r4, r5, r6, pc}
   2dfac:	mov	r5, r0
   2dfb0:	mov	r0, r4
   2dfb4:	bl	fddc <pthread_attr_destroy@plt>
   2dfb8:	str	r0, [r5, #28]
   2dfbc:	mov	r0, r4
   2dfc0:	pop	{r4, r5, r6, lr}
   2dfc4:	b	10dcc <mycore_free@plt>

0002dfc8 <mythread_mutex_create@@Base>:
   2dfc8:	push	{r4, lr}
   2dfcc:	bl	108c8 <mcsync_mutex_create@plt>
   2dfd0:	subs	r4, r0, #0
   2dfd4:	beq	2dfe4 <mythread_mutex_create@@Base+0x1c>
   2dfd8:	bl	10b50 <mcsync_mutex_init@plt>
   2dfdc:	cmp	r0, #0
   2dfe0:	bne	2dfec <mythread_mutex_create@@Base+0x24>
   2dfe4:	mov	r0, r4
   2dfe8:	pop	{r4, pc}
   2dfec:	mov	r0, r4
   2dff0:	bl	10dcc <mycore_free@plt>
   2dff4:	mov	r4, #0
   2dff8:	b	2dfe4 <mythread_mutex_create@@Base+0x1c>

0002dffc <mythread_mutex_post@@Base>:
   2dffc:	mov	r0, r1
   2e000:	b	fefc <mcsync_mutex_unlock@plt>

0002e004 <mythread_mutex_wait@@Base>:
   2e004:	mov	r0, r1
   2e008:	b	1103c <mcsync_mutex_lock@plt>

0002e00c <mythread_mutex_try_wait@@Base>:
   2e00c:	mov	r0, r1
   2e010:	b	10fac <mcsync_mutex_try_lock@plt>

0002e014 <mythread_mutex_close@@Base>:
   2e014:	mov	r0, r1
   2e018:	b	fd70 <mcsync_mutex_destroy@plt>

0002e01c <mythread_nanosleep_create@@Base>:
   2e01c:	mov	r1, #8
   2e020:	mov	r0, #1
   2e024:	b	ff14 <mycore_calloc@plt>

0002e028 <mythread_nanosleep_clean@@Base>:
   2e028:	mov	r3, #0
   2e02c:	str	r3, [r0]
   2e030:	str	r3, [r0, #4]
   2e034:	bx	lr

0002e038 <mythread_nanosleep_destroy@@Base>:
   2e038:	b	10dcc <mycore_free@plt>

0002e03c <mythread_nanosleep_sleep@@Base>:
   2e03c:	push	{r4, lr}
   2e040:	mov	r1, #0
   2e044:	bl	ff20 <nanosleep@plt>
   2e048:	adds	r0, r0, #0
   2e04c:	movne	r0, #1
   2e050:	pop	{r4, pc}

0002e054 <mcsync_spin_create@@Base>:
   2e054:	mov	r1, #4
   2e058:	mov	r0, #1
   2e05c:	b	ff14 <mycore_calloc@plt>

0002e060 <mcsync_spin_init@@Base>:
   2e060:	mov	r0, #0
   2e064:	bx	lr

0002e068 <mcsync_spin_clean@@Base>:
   2e068:	mov	r3, #0
   2e06c:	str	r3, [r0]
   2e070:	bx	lr

0002e074 <mcsync_spin_destroy@@Base>:
   2e074:	b	10dcc <mycore_free@plt>

0002e078 <mcsync_spin_lock@@Base>:
   2e078:	push	{lr}		; (str lr, [sp, #-4]!)
   2e07c:	sub	sp, sp, #12
   2e080:	add	r2, sp, #8
   2e084:	mov	r3, #0
   2e088:	str	r3, [r2, #-4]!
   2e08c:	ldr	r3, [r2]
   2e090:	mov	ip, #1
   2e094:	mcr	15, 0, r0, cr7, cr10, {5}
   2e098:	ldrex	r1, [r0]
   2e09c:	cmp	r1, r3
   2e0a0:	bne	2e0b0 <mcsync_spin_lock@@Base+0x38>
   2e0a4:	strex	lr, ip, [r0]
   2e0a8:	cmp	lr, #0
   2e0ac:	bne	2e098 <mcsync_spin_lock@@Base+0x20>
   2e0b0:	mcr	15, 0, r0, cr7, cr10, {5}
   2e0b4:	bne	2e0c4 <mcsync_spin_lock@@Base+0x4c>
   2e0b8:	mov	r0, #0
   2e0bc:	add	sp, sp, #12
   2e0c0:	pop	{pc}		; (ldr pc, [sp], #4)
   2e0c4:	str	r1, [r2]
   2e0c8:	mov	r3, r1
   2e0cc:	b	2e094 <mcsync_spin_lock@@Base+0x1c>

0002e0d0 <mcsync_spin_unlock@@Base>:
   2e0d0:	mov	r2, r0
   2e0d4:	mov	r3, #0
   2e0d8:	mcr	15, 0, r0, cr7, cr10, {5}
   2e0dc:	mov	r0, r3
   2e0e0:	str	r3, [r2]
   2e0e4:	mcr	15, 0, r0, cr7, cr10, {5}
   2e0e8:	bx	lr

0002e0ec <mcsync_mutex_create@@Base>:
   2e0ec:	mov	r1, #24
   2e0f0:	mov	r0, #1
   2e0f4:	b	ff14 <mycore_calloc@plt>

0002e0f8 <mcsync_mutex_init@@Base>:
   2e0f8:	push	{r4, lr}
   2e0fc:	mov	r1, #0
   2e100:	bl	ffc8 <pthread_mutex_init@plt>
   2e104:	adds	r0, r0, #0
   2e108:	movne	r0, #1
   2e10c:	pop	{r4, pc}

0002e110 <mcsync_mutex_clean@@Base>:
   2e110:	bx	lr

0002e114 <mcsync_mutex_destroy@@Base>:
   2e114:	push	{r4, lr}
   2e118:	mov	r4, r0
   2e11c:	bl	fe00 <pthread_mutex_destroy@plt>
   2e120:	mov	r0, r4
   2e124:	pop	{r4, lr}
   2e128:	b	10dcc <mycore_free@plt>

0002e12c <mcsync_mutex_lock@@Base>:
   2e12c:	push	{r4, lr}
   2e130:	bl	ff08 <pthread_mutex_lock@plt>
   2e134:	adds	r0, r0, #0
   2e138:	movne	r0, #1
   2e13c:	pop	{r4, pc}

0002e140 <mcsync_mutex_try_lock@@Base>:
   2e140:	push	{r4, lr}
   2e144:	bl	10034 <pthread_mutex_trylock@plt>
   2e148:	adds	r0, r0, #0
   2e14c:	movne	r0, #1
   2e150:	pop	{r4, pc}

0002e154 <mcsync_mutex_unlock@@Base>:
   2e154:	push	{r4, lr}
   2e158:	bl	fbc0 <pthread_mutex_unlock@plt>
   2e15c:	adds	r0, r0, #0
   2e160:	movne	r0, #1
   2e164:	pop	{r4, pc}
   2e168:	subs	r2, r1, #1
   2e16c:	bxeq	lr
   2e170:	bcc	2e348 <mcsync_mutex_unlock@@Base+0x1f4>
   2e174:	cmp	r0, r1
   2e178:	bls	2e32c <mcsync_mutex_unlock@@Base+0x1d8>
   2e17c:	tst	r1, r2
   2e180:	beq	2e338 <mcsync_mutex_unlock@@Base+0x1e4>
   2e184:	clz	r3, r0
   2e188:	clz	r2, r1
   2e18c:	sub	r3, r2, r3
   2e190:	rsbs	r3, r3, #31
   2e194:	addne	r3, r3, r3, lsl #1
   2e198:	mov	r2, #0
   2e19c:	addne	pc, pc, r3, lsl #2
   2e1a0:	nop			; (mov r0, r0)
   2e1a4:	cmp	r0, r1, lsl #31
   2e1a8:	adc	r2, r2, r2
   2e1ac:	subcs	r0, r0, r1, lsl #31
   2e1b0:	cmp	r0, r1, lsl #30
   2e1b4:	adc	r2, r2, r2
   2e1b8:	subcs	r0, r0, r1, lsl #30
   2e1bc:	cmp	r0, r1, lsl #29
   2e1c0:	adc	r2, r2, r2
   2e1c4:	subcs	r0, r0, r1, lsl #29
   2e1c8:	cmp	r0, r1, lsl #28
   2e1cc:	adc	r2, r2, r2
   2e1d0:	subcs	r0, r0, r1, lsl #28
   2e1d4:	cmp	r0, r1, lsl #27
   2e1d8:	adc	r2, r2, r2
   2e1dc:	subcs	r0, r0, r1, lsl #27
   2e1e0:	cmp	r0, r1, lsl #26
   2e1e4:	adc	r2, r2, r2
   2e1e8:	subcs	r0, r0, r1, lsl #26
   2e1ec:	cmp	r0, r1, lsl #25
   2e1f0:	adc	r2, r2, r2
   2e1f4:	subcs	r0, r0, r1, lsl #25
   2e1f8:	cmp	r0, r1, lsl #24
   2e1fc:	adc	r2, r2, r2
   2e200:	subcs	r0, r0, r1, lsl #24
   2e204:	cmp	r0, r1, lsl #23
   2e208:	adc	r2, r2, r2
   2e20c:	subcs	r0, r0, r1, lsl #23
   2e210:	cmp	r0, r1, lsl #22
   2e214:	adc	r2, r2, r2
   2e218:	subcs	r0, r0, r1, lsl #22
   2e21c:	cmp	r0, r1, lsl #21
   2e220:	adc	r2, r2, r2
   2e224:	subcs	r0, r0, r1, lsl #21
   2e228:	cmp	r0, r1, lsl #20
   2e22c:	adc	r2, r2, r2
   2e230:	subcs	r0, r0, r1, lsl #20
   2e234:	cmp	r0, r1, lsl #19
   2e238:	adc	r2, r2, r2
   2e23c:	subcs	r0, r0, r1, lsl #19
   2e240:	cmp	r0, r1, lsl #18
   2e244:	adc	r2, r2, r2
   2e248:	subcs	r0, r0, r1, lsl #18
   2e24c:	cmp	r0, r1, lsl #17
   2e250:	adc	r2, r2, r2
   2e254:	subcs	r0, r0, r1, lsl #17
   2e258:	cmp	r0, r1, lsl #16
   2e25c:	adc	r2, r2, r2
   2e260:	subcs	r0, r0, r1, lsl #16
   2e264:	cmp	r0, r1, lsl #15
   2e268:	adc	r2, r2, r2
   2e26c:	subcs	r0, r0, r1, lsl #15
   2e270:	cmp	r0, r1, lsl #14
   2e274:	adc	r2, r2, r2
   2e278:	subcs	r0, r0, r1, lsl #14
   2e27c:	cmp	r0, r1, lsl #13
   2e280:	adc	r2, r2, r2
   2e284:	subcs	r0, r0, r1, lsl #13
   2e288:	cmp	r0, r1, lsl #12
   2e28c:	adc	r2, r2, r2
   2e290:	subcs	r0, r0, r1, lsl #12
   2e294:	cmp	r0, r1, lsl #11
   2e298:	adc	r2, r2, r2
   2e29c:	subcs	r0, r0, r1, lsl #11
   2e2a0:	cmp	r0, r1, lsl #10
   2e2a4:	adc	r2, r2, r2
   2e2a8:	subcs	r0, r0, r1, lsl #10
   2e2ac:	cmp	r0, r1, lsl #9
   2e2b0:	adc	r2, r2, r2
   2e2b4:	subcs	r0, r0, r1, lsl #9
   2e2b8:	cmp	r0, r1, lsl #8
   2e2bc:	adc	r2, r2, r2
   2e2c0:	subcs	r0, r0, r1, lsl #8
   2e2c4:	cmp	r0, r1, lsl #7
   2e2c8:	adc	r2, r2, r2
   2e2cc:	subcs	r0, r0, r1, lsl #7
   2e2d0:	cmp	r0, r1, lsl #6
   2e2d4:	adc	r2, r2, r2
   2e2d8:	subcs	r0, r0, r1, lsl #6
   2e2dc:	cmp	r0, r1, lsl #5
   2e2e0:	adc	r2, r2, r2
   2e2e4:	subcs	r0, r0, r1, lsl #5
   2e2e8:	cmp	r0, r1, lsl #4
   2e2ec:	adc	r2, r2, r2
   2e2f0:	subcs	r0, r0, r1, lsl #4
   2e2f4:	cmp	r0, r1, lsl #3
   2e2f8:	adc	r2, r2, r2
   2e2fc:	subcs	r0, r0, r1, lsl #3
   2e300:	cmp	r0, r1, lsl #2
   2e304:	adc	r2, r2, r2
   2e308:	subcs	r0, r0, r1, lsl #2
   2e30c:	cmp	r0, r1, lsl #1
   2e310:	adc	r2, r2, r2
   2e314:	subcs	r0, r0, r1, lsl #1
   2e318:	cmp	r0, r1
   2e31c:	adc	r2, r2, r2
   2e320:	subcs	r0, r0, r1
   2e324:	mov	r0, r2
   2e328:	bx	lr
   2e32c:	moveq	r0, #1
   2e330:	movne	r0, #0
   2e334:	bx	lr
   2e338:	clz	r2, r1
   2e33c:	rsb	r2, r2, #31
   2e340:	lsr	r0, r0, r2
   2e344:	bx	lr
   2e348:	cmp	r0, #0
   2e34c:	mvnne	r0, #0
   2e350:	b	2e374 <mcsync_mutex_unlock@@Base+0x220>
   2e354:	cmp	r1, #0
   2e358:	beq	2e348 <mcsync_mutex_unlock@@Base+0x1f4>
   2e35c:	push	{r0, r1, lr}
   2e360:	bl	2e168 <mcsync_mutex_unlock@@Base+0x14>
   2e364:	pop	{r1, r2, lr}
   2e368:	mul	r3, r2, r0
   2e36c:	sub	r1, r1, r3
   2e370:	bx	lr
   2e374:	push	{r1, lr}
   2e378:	mov	r0, #8
   2e37c:	bl	fc2c <raise@plt>
   2e380:	pop	{r1, pc}

Disassembly of section .fini:

0002e384 <.fini>:
   2e384:	push	{r3, lr}
   2e388:	pop	{r3, pc}
