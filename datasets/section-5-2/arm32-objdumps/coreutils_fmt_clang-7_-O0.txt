
../repos/coreutils/src/fmt:     file format elf32-littlearm


Disassembly of section .init:

00010e28 <.init>:
   10e28:	push	{r3, lr}
   10e2c:	bl	11100 <__assert_fail@plt+0x48>
   10e30:	pop	{r3, pc}

Disassembly of section .plt:

00010e34 <calloc@plt-0x14>:
   10e34:	push	{lr}		; (str lr, [sp, #-4]!)
   10e38:	ldr	lr, [pc, #4]	; 10e44 <calloc@plt-0x4>
   10e3c:	add	lr, pc, lr
   10e40:	ldr	pc, [lr, #8]!
   10e44:			; <UNDEFINED> instruction: 0x0001f1bc

00010e48 <calloc@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #126976	; 0x1f000
   10e50:	ldr	pc, [ip, #444]!	; 0x1bc

00010e54 <fputs_unlocked@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #126976	; 0x1f000
   10e5c:	ldr	pc, [ip, #436]!	; 0x1b4

00010e60 <raise@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #126976	; 0x1f000
   10e68:	ldr	pc, [ip, #428]!	; 0x1ac

00010e6c <strcmp@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #126976	; 0x1f000
   10e74:	ldr	pc, [ip, #420]!	; 0x1a4

00010e78 <posix_fadvise64@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #126976	; 0x1f000
   10e80:	ldr	pc, [ip, #412]!	; 0x19c

00010e84 <printf@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #126976	; 0x1f000
   10e8c:	ldr	pc, [ip, #404]!	; 0x194

00010e90 <fflush@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #126976	; 0x1f000
   10e98:	ldr	pc, [ip, #396]!	; 0x18c

00010e9c <memmove@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #126976	; 0x1f000
   10ea4:	ldr	pc, [ip, #388]!	; 0x184

00010ea8 <free@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #126976	; 0x1f000
   10eb0:	ldr	pc, [ip, #380]!	; 0x17c

00010eb4 <_exit@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #126976	; 0x1f000
   10ebc:	ldr	pc, [ip, #372]!	; 0x174

00010ec0 <memcpy@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #126976	; 0x1f000
   10ec8:	ldr	pc, [ip, #364]!	; 0x16c

00010ecc <mbsinit@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #126976	; 0x1f000
   10ed4:	ldr	pc, [ip, #356]!	; 0x164

00010ed8 <fwrite_unlocked@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #126976	; 0x1f000
   10ee0:	ldr	pc, [ip, #348]!	; 0x15c

00010ee4 <memcmp@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #126976	; 0x1f000
   10eec:	ldr	pc, [ip, #340]!	; 0x154

00010ef0 <getc_unlocked@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #126976	; 0x1f000
   10ef8:	ldr	pc, [ip, #332]!	; 0x14c

00010efc <realloc@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #126976	; 0x1f000
   10f04:	ldr	pc, [ip, #324]!	; 0x144

00010f08 <textdomain@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #126976	; 0x1f000
   10f10:	ldr	pc, [ip, #316]!	; 0x13c

00010f14 <iswprint@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #126976	; 0x1f000
   10f1c:	ldr	pc, [ip, #308]!	; 0x134

00010f20 <lseek64@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #126976	; 0x1f000
   10f28:	ldr	pc, [ip, #300]!	; 0x12c

00010f2c <__ctype_get_mb_cur_max@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #126976	; 0x1f000
   10f34:	ldr	pc, [ip, #292]!	; 0x124

00010f38 <__fpending@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #126976	; 0x1f000
   10f40:	ldr	pc, [ip, #284]!	; 0x11c

00010f44 <ferror_unlocked@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #126976	; 0x1f000
   10f4c:	ldr	pc, [ip, #276]!	; 0x114

00010f50 <mbrtowc@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #126976	; 0x1f000
   10f58:	ldr	pc, [ip, #268]!	; 0x10c

00010f5c <error@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #126976	; 0x1f000
   10f64:	ldr	pc, [ip, #260]!	; 0x104

00010f68 <malloc@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #126976	; 0x1f000
   10f70:	ldr	pc, [ip, #252]!	; 0xfc

00010f74 <__libc_start_main@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #126976	; 0x1f000
   10f7c:	ldr	pc, [ip, #244]!	; 0xf4

00010f80 <__freading@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #126976	; 0x1f000
   10f88:	ldr	pc, [ip, #236]!	; 0xec

00010f8c <__gmon_start__@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #126976	; 0x1f000
   10f94:	ldr	pc, [ip, #228]!	; 0xe4

00010f98 <getopt_long@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #126976	; 0x1f000
   10fa0:	ldr	pc, [ip, #220]!	; 0xdc

00010fa4 <__ctype_b_loc@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #126976	; 0x1f000
   10fac:	ldr	pc, [ip, #212]!	; 0xd4

00010fb0 <exit@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #126976	; 0x1f000
   10fb8:	ldr	pc, [ip, #204]!	; 0xcc

00010fbc <gettext@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #126976	; 0x1f000
   10fc4:	ldr	pc, [ip, #196]!	; 0xc4

00010fc8 <strlen@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #126976	; 0x1f000
   10fd0:	ldr	pc, [ip, #188]!	; 0xbc

00010fd4 <strchr@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #126976	; 0x1f000
   10fdc:	ldr	pc, [ip, #180]!	; 0xb4

00010fe0 <fprintf@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #126976	; 0x1f000
   10fe8:	ldr	pc, [ip, #172]!	; 0xac

00010fec <__errno_location@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #126976	; 0x1f000
   10ff4:	ldr	pc, [ip, #164]!	; 0xa4

00010ff8 <__cxa_atexit@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #126976	; 0x1f000
   11000:	ldr	pc, [ip, #156]!	; 0x9c

00011004 <memset@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #126976	; 0x1f000
   1100c:	ldr	pc, [ip, #148]!	; 0x94

00011010 <fileno@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #126976	; 0x1f000
   11018:	ldr	pc, [ip, #140]!	; 0x8c

0001101c <strtoumax@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #126976	; 0x1f000
   11024:	ldr	pc, [ip, #132]!	; 0x84

00011028 <fclose@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #126976	; 0x1f000
   11030:	ldr	pc, [ip, #124]!	; 0x7c

00011034 <fseeko64@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #126976	; 0x1f000
   1103c:	ldr	pc, [ip, #116]!	; 0x74

00011040 <setlocale@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #126976	; 0x1f000
   11048:	ldr	pc, [ip, #108]!	; 0x6c

0001104c <strrchr@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #126976	; 0x1f000
   11054:	ldr	pc, [ip, #100]!	; 0x64

00011058 <nl_langinfo@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #126976	; 0x1f000
   11060:	ldr	pc, [ip, #92]!	; 0x5c

00011064 <clearerr_unlocked@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #126976	; 0x1f000
   1106c:	ldr	pc, [ip, #84]!	; 0x54

00011070 <fopen64@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #126976	; 0x1f000
   11078:	ldr	pc, [ip, #76]!	; 0x4c

0001107c <bindtextdomain@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #126976	; 0x1f000
   11084:	ldr	pc, [ip, #68]!	; 0x44

00011088 <fputs@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #126976	; 0x1f000
   11090:	ldr	pc, [ip, #60]!	; 0x3c

00011094 <strncmp@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #126976	; 0x1f000
   1109c:	ldr	pc, [ip, #52]!	; 0x34

000110a0 <abort@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #126976	; 0x1f000
   110a8:	ldr	pc, [ip, #44]!	; 0x2c

000110ac <putchar_unlocked@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #126976	; 0x1f000
   110b4:	ldr	pc, [ip, #36]!	; 0x24

000110b8 <__assert_fail@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #126976	; 0x1f000
   110c0:	ldr	pc, [ip, #28]!

Disassembly of section .text:

000110c4 <.text>:
   110c4:	mov	fp, #0
   110c8:	mov	lr, #0
   110cc:	pop	{r1}		; (ldr r1, [sp], #4)
   110d0:	mov	r2, sp
   110d4:	push	{r2}		; (str r2, [sp, #-4]!)
   110d8:	push	{r0}		; (str r0, [sp, #-4]!)
   110dc:	ldr	ip, [pc, #16]	; 110f4 <__assert_fail@plt+0x3c>
   110e0:	push	{ip}		; (str ip, [sp, #-4]!)
   110e4:	ldr	r0, [pc, #12]	; 110f8 <__assert_fail@plt+0x40>
   110e8:	ldr	r3, [pc, #12]	; 110fc <__assert_fail@plt+0x44>
   110ec:	bl	10f74 <__libc_start_main@plt>
   110f0:	bl	110a0 <abort@plt>
   110f4:	andeq	lr, r1, r0, lsl #8
   110f8:	andeq	r1, r1, r8, lsr #10
   110fc:	andeq	lr, r1, r0, lsr #7
   11100:	ldr	r3, [pc, #20]	; 1111c <__assert_fail@plt+0x64>
   11104:	ldr	r2, [pc, #20]	; 11120 <__assert_fail@plt+0x68>
   11108:	add	r3, pc, r3
   1110c:	ldr	r2, [r3, r2]
   11110:	cmp	r2, #0
   11114:	bxeq	lr
   11118:	b	10f8c <__gmon_start__@plt>
   1111c:	strdeq	lr, [r1], -r0
   11120:	andeq	r0, r0, r0, ror #1
   11124:	ldr	r0, [pc, #24]	; 11144 <__assert_fail@plt+0x8c>
   11128:	ldr	r3, [pc, #24]	; 11148 <__assert_fail@plt+0x90>
   1112c:	cmp	r3, r0
   11130:	bxeq	lr
   11134:	ldr	r3, [pc, #16]	; 1114c <__assert_fail@plt+0x94>
   11138:	cmp	r3, #0
   1113c:	bxeq	lr
   11140:	bx	r3
   11144:	andeq	r0, r3, r4, lsr r1
   11148:	andeq	r0, r3, r4, lsr r1
   1114c:	andeq	r0, r0, r0
   11150:	ldr	r0, [pc, #36]	; 1117c <__assert_fail@plt+0xc4>
   11154:	ldr	r1, [pc, #36]	; 11180 <__assert_fail@plt+0xc8>
   11158:	sub	r1, r1, r0
   1115c:	asr	r1, r1, #2
   11160:	add	r1, r1, r1, lsr #31
   11164:	asrs	r1, r1, #1
   11168:	bxeq	lr
   1116c:	ldr	r3, [pc, #16]	; 11184 <__assert_fail@plt+0xcc>
   11170:	cmp	r3, #0
   11174:	bxeq	lr
   11178:	bx	r3
   1117c:	andeq	r0, r3, r4, lsr r1
   11180:	andeq	r0, r3, r4, lsr r1
   11184:	andeq	r0, r0, r0
   11188:	push	{r4, lr}
   1118c:	ldr	r4, [pc, #24]	; 111ac <__assert_fail@plt+0xf4>
   11190:	ldrb	r3, [r4]
   11194:	cmp	r3, #0
   11198:	popne	{r4, pc}
   1119c:	bl	11124 <__assert_fail@plt+0x6c>
   111a0:	mov	r3, #1
   111a4:	strb	r3, [r4]
   111a8:	pop	{r4, pc}
   111ac:	andeq	r0, r3, ip, asr r1
   111b0:	b	11150 <__assert_fail@plt+0x98>
   111b4:	push	{fp, lr}
   111b8:	mov	fp, sp
   111bc:	sub	sp, sp, #40	; 0x28
   111c0:	str	r0, [fp, #-4]
   111c4:	ldr	r0, [fp, #-4]
   111c8:	cmp	r0, #0
   111cc:	beq	1121c <__assert_fail@plt+0x164>
   111d0:	b	111d4 <__assert_fail@plt+0x11c>
   111d4:	movw	r0, #328	; 0x148
   111d8:	movt	r0, #3
   111dc:	ldr	r0, [r0]
   111e0:	movw	r1, #58408	; 0xe428
   111e4:	movt	r1, #1
   111e8:	str	r0, [fp, #-8]
   111ec:	mov	r0, r1
   111f0:	bl	10fbc <gettext@plt>
   111f4:	movw	r1, #33432	; 0x8298
   111f8:	movt	r1, #3
   111fc:	ldr	r2, [r1]
   11200:	ldr	r1, [fp, #-8]
   11204:	str	r0, [fp, #-12]
   11208:	mov	r0, r1
   1120c:	ldr	r1, [fp, #-12]
   11210:	bl	10fe0 <fprintf@plt>
   11214:	str	r0, [fp, #-16]
   11218:	b	11304 <__assert_fail@plt+0x24c>
   1121c:	movw	r0, #58447	; 0xe44f
   11220:	movt	r0, #1
   11224:	bl	10fbc <gettext@plt>
   11228:	movw	lr, #33432	; 0x8298
   1122c:	movt	lr, #3
   11230:	ldr	r1, [lr]
   11234:	bl	10e84 <printf@plt>
   11238:	movw	r1, #58489	; 0xe479
   1123c:	movt	r1, #1
   11240:	str	r0, [sp, #20]
   11244:	mov	r0, r1
   11248:	bl	10fbc <gettext@plt>
   1124c:	movw	r1, #340	; 0x154
   11250:	movt	r1, #3
   11254:	ldr	r1, [r1]
   11258:	bl	10e54 <fputs_unlocked@plt>
   1125c:	str	r0, [sp, #16]
   11260:	bl	1130c <__assert_fail@plt+0x254>
   11264:	bl	11340 <__assert_fail@plt+0x288>
   11268:	movw	r0, #58618	; 0xe4fa
   1126c:	movt	r0, #1
   11270:	bl	10fbc <gettext@plt>
   11274:	movw	r1, #340	; 0x154
   11278:	movt	r1, #3
   1127c:	ldr	r1, [r1]
   11280:	bl	10e54 <fputs_unlocked@plt>
   11284:	movw	r1, #58896	; 0xe610
   11288:	movt	r1, #1
   1128c:	str	r0, [sp, #12]
   11290:	mov	r0, r1
   11294:	bl	10fbc <gettext@plt>
   11298:	movw	r1, #340	; 0x154
   1129c:	movt	r1, #3
   112a0:	ldr	r1, [r1]
   112a4:	bl	10e54 <fputs_unlocked@plt>
   112a8:	movw	r1, #59182	; 0xe72e
   112ac:	movt	r1, #1
   112b0:	str	r0, [sp, #8]
   112b4:	mov	r0, r1
   112b8:	bl	10fbc <gettext@plt>
   112bc:	movw	r1, #340	; 0x154
   112c0:	movt	r1, #3
   112c4:	ldr	r1, [r1]
   112c8:	bl	10e54 <fputs_unlocked@plt>
   112cc:	movw	r1, #59227	; 0xe75b
   112d0:	movt	r1, #1
   112d4:	str	r0, [sp, #4]
   112d8:	mov	r0, r1
   112dc:	bl	10fbc <gettext@plt>
   112e0:	movw	r1, #340	; 0x154
   112e4:	movt	r1, #3
   112e8:	ldr	r1, [r1]
   112ec:	bl	10e54 <fputs_unlocked@plt>
   112f0:	movw	r1, #59281	; 0xe791
   112f4:	movt	r1, #1
   112f8:	str	r0, [sp]
   112fc:	mov	r0, r1
   11300:	bl	11374 <__assert_fail@plt+0x2bc>
   11304:	ldr	r0, [fp, #-4]
   11308:	bl	10fb0 <exit@plt>
   1130c:	push	{fp, lr}
   11310:	mov	fp, sp
   11314:	sub	sp, sp, #8
   11318:	movw	r0, #59516	; 0xe87c
   1131c:	movt	r0, #1
   11320:	bl	10fbc <gettext@plt>
   11324:	movw	lr, #340	; 0x154
   11328:	movt	lr, #3
   1132c:	ldr	r1, [lr]
   11330:	bl	10e54 <fputs_unlocked@plt>
   11334:	str	r0, [sp, #4]
   11338:	mov	sp, fp
   1133c:	pop	{fp, pc}
   11340:	push	{fp, lr}
   11344:	mov	fp, sp
   11348:	sub	sp, sp, #8
   1134c:	movw	r0, #59572	; 0xe8b4
   11350:	movt	r0, #1
   11354:	bl	10fbc <gettext@plt>
   11358:	movw	lr, #340	; 0x154
   1135c:	movt	lr, #3
   11360:	ldr	r1, [lr]
   11364:	bl	10e54 <fputs_unlocked@plt>
   11368:	str	r0, [sp, #4]
   1136c:	mov	sp, fp
   11370:	pop	{fp, pc}
   11374:	push	{fp, lr}
   11378:	mov	fp, sp
   1137c:	sub	sp, sp, #96	; 0x60
   11380:	add	r1, sp, #36	; 0x24
   11384:	movw	r2, #60284	; 0xeb7c
   11388:	movt	r2, #1
   1138c:	str	r0, [fp, #-4]
   11390:	mov	r0, r1
   11394:	str	r1, [sp, #20]
   11398:	mov	r1, r2
   1139c:	movw	r2, #56	; 0x38
   113a0:	bl	10ec0 <memcpy@plt>
   113a4:	ldr	r0, [fp, #-4]
   113a8:	str	r0, [sp, #32]
   113ac:	ldr	r0, [sp, #20]
   113b0:	str	r0, [sp, #28]
   113b4:	ldr	r0, [sp, #28]
   113b8:	ldr	r0, [r0]
   113bc:	movw	r1, #0
   113c0:	cmp	r0, r1
   113c4:	movw	r0, #0
   113c8:	str	r0, [sp, #16]
   113cc:	beq	113f8 <__assert_fail@plt+0x340>
   113d0:	ldr	r0, [fp, #-4]
   113d4:	ldr	r1, [sp, #28]
   113d8:	ldr	r1, [r1]
   113dc:	bl	10e6c <strcmp@plt>
   113e0:	cmp	r0, #0
   113e4:	movw	r0, #0
   113e8:	moveq	r0, #1
   113ec:	mvn	r1, #0
   113f0:	eor	r0, r0, r1
   113f4:	str	r0, [sp, #16]
   113f8:	ldr	r0, [sp, #16]
   113fc:	tst	r0, #1
   11400:	beq	11414 <__assert_fail@plt+0x35c>
   11404:	ldr	r0, [sp, #28]
   11408:	add	r0, r0, #8
   1140c:	str	r0, [sp, #28]
   11410:	b	113b4 <__assert_fail@plt+0x2fc>
   11414:	ldr	r0, [sp, #28]
   11418:	ldr	r0, [r0, #4]
   1141c:	movw	r1, #0
   11420:	cmp	r0, r1
   11424:	beq	11434 <__assert_fail@plt+0x37c>
   11428:	ldr	r0, [sp, #28]
   1142c:	ldr	r0, [r0, #4]
   11430:	str	r0, [sp, #32]
   11434:	movw	r0, #59742	; 0xe95e
   11438:	movt	r0, #1
   1143c:	bl	10fbc <gettext@plt>
   11440:	movw	r1, #59424	; 0xe820
   11444:	movt	r1, #1
   11448:	movw	r2, #59765	; 0xe975
   1144c:	movt	r2, #1
   11450:	bl	10e84 <printf@plt>
   11454:	movw	r1, #5
   11458:	str	r0, [sp, #12]
   1145c:	mov	r0, r1
   11460:	movw	r1, #0
   11464:	bl	11040 <setlocale@plt>
   11468:	str	r0, [sp, #24]
   1146c:	ldr	r0, [sp, #24]
   11470:	movw	r1, #0
   11474:	cmp	r0, r1
   11478:	beq	114b8 <__assert_fail@plt+0x400>
   1147c:	ldr	r0, [sp, #24]
   11480:	movw	r1, #59805	; 0xe99d
   11484:	movt	r1, #1
   11488:	movw	r2, #3
   1148c:	bl	11094 <strncmp@plt>
   11490:	cmp	r0, #0
   11494:	beq	114b8 <__assert_fail@plt+0x400>
   11498:	movw	r0, #59809	; 0xe9a1
   1149c:	movt	r0, #1
   114a0:	bl	10fbc <gettext@plt>
   114a4:	movw	lr, #340	; 0x154
   114a8:	movt	lr, #3
   114ac:	ldr	r1, [lr]
   114b0:	bl	10e54 <fputs_unlocked@plt>
   114b4:	str	r0, [sp, #8]
   114b8:	movw	r0, #59880	; 0xe9e8
   114bc:	movt	r0, #1
   114c0:	bl	10fbc <gettext@plt>
   114c4:	ldr	r2, [fp, #-4]
   114c8:	movw	r1, #59765	; 0xe975
   114cc:	movt	r1, #1
   114d0:	bl	10e84 <printf@plt>
   114d4:	movw	r1, #59907	; 0xea03
   114d8:	movt	r1, #1
   114dc:	str	r0, [sp, #4]
   114e0:	mov	r0, r1
   114e4:	bl	10fbc <gettext@plt>
   114e8:	ldr	r1, [sp, #32]
   114ec:	ldr	r2, [sp, #32]
   114f0:	ldr	lr, [fp, #-4]
   114f4:	cmp	r2, lr
   114f8:	movw	r2, #0
   114fc:	moveq	r2, #1
   11500:	tst	r2, #1
   11504:	movw	r2, #59957	; 0xea35
   11508:	movt	r2, #1
   1150c:	movw	lr, #59675	; 0xe91b
   11510:	movt	lr, #1
   11514:	movne	r2, lr
   11518:	bl	10e84 <printf@plt>
   1151c:	str	r0, [sp]
   11520:	mov	sp, fp
   11524:	pop	{fp, pc}
   11528:	push	{fp, lr}
   1152c:	mov	fp, sp
   11530:	sub	sp, sp, #136	; 0x88
   11534:	movw	r2, #0
   11538:	str	r2, [fp, #-4]
   1153c:	str	r0, [fp, #-8]
   11540:	str	r1, [fp, #-12]
   11544:	movw	r0, #1
   11548:	strb	r0, [fp, #-17]	; 0xffffffef
   1154c:	str	r2, [fp, #-24]	; 0xffffffe8
   11550:	str	r2, [fp, #-28]	; 0xffffffe4
   11554:	ldr	r0, [fp, #-12]
   11558:	ldr	r0, [r0]
   1155c:	bl	13bd4 <__assert_fail@plt+0x2b1c>
   11560:	movw	r0, #6
   11564:	movw	r1, #59957	; 0xea35
   11568:	movt	r1, #1
   1156c:	bl	11040 <setlocale@plt>
   11570:	movw	r1, #59428	; 0xe824
   11574:	movt	r1, #1
   11578:	str	r0, [fp, #-44]	; 0xffffffd4
   1157c:	mov	r0, r1
   11580:	movw	r1, #59285	; 0xe795
   11584:	movt	r1, #1
   11588:	bl	1107c <bindtextdomain@plt>
   1158c:	movw	r1, #59428	; 0xe824
   11590:	movt	r1, #1
   11594:	str	r0, [fp, #-48]	; 0xffffffd0
   11598:	mov	r0, r1
   1159c:	bl	10f08 <textdomain@plt>
   115a0:	movw	r1, #14156	; 0x374c
   115a4:	movt	r1, #1
   115a8:	str	r0, [fp, #-52]	; 0xffffffcc
   115ac:	mov	r0, r1
   115b0:	bl	1e404 <__assert_fail@plt+0xd34c>
   115b4:	movw	r1, #352	; 0x160
   115b8:	movt	r1, #3
   115bc:	movw	r2, #0
   115c0:	strb	r2, [r1]
   115c4:	movw	r1, #353	; 0x161
   115c8:	movt	r1, #3
   115cc:	strb	r2, [r1]
   115d0:	movw	r1, #354	; 0x162
   115d4:	movt	r1, #3
   115d8:	strb	r2, [r1]
   115dc:	movw	r1, #355	; 0x163
   115e0:	movt	r1, #3
   115e4:	strb	r2, [r1]
   115e8:	movw	r1, #356	; 0x164
   115ec:	movt	r1, #3
   115f0:	movw	r2, #75	; 0x4b
   115f4:	str	r2, [r1]
   115f8:	movw	r1, #360	; 0x168
   115fc:	movt	r1, #3
   11600:	movw	r2, #59957	; 0xea35
   11604:	movt	r2, #1
   11608:	str	r2, [r1]
   1160c:	movw	r1, #364	; 0x16c
   11610:	movt	r1, #3
   11614:	movw	r2, #0
   11618:	str	r2, [r1]
   1161c:	movw	r1, #368	; 0x170
   11620:	movt	r1, #3
   11624:	str	r2, [r1]
   11628:	movw	r1, #372	; 0x174
   1162c:	movt	r1, #3
   11630:	str	r2, [r1]
   11634:	ldr	r1, [fp, #-8]
   11638:	cmp	r1, #1
   1163c:	str	r0, [fp, #-56]	; 0xffffffc8
   11640:	ble	116ac <__assert_fail@plt+0x5f4>
   11644:	ldr	r0, [fp, #-12]
   11648:	ldr	r0, [r0, #4]
   1164c:	ldrb	r0, [r0]
   11650:	cmp	r0, #45	; 0x2d
   11654:	bne	116ac <__assert_fail@plt+0x5f4>
   11658:	ldr	r0, [fp, #-12]
   1165c:	ldr	r0, [r0, #4]
   11660:	ldrb	r0, [r0, #1]
   11664:	sub	r0, r0, #48	; 0x30
   11668:	cmp	r0, #9
   1166c:	bhi	116ac <__assert_fail@plt+0x5f4>
   11670:	ldr	r0, [fp, #-12]
   11674:	ldr	r0, [r0, #4]
   11678:	add	r0, r0, #1
   1167c:	str	r0, [fp, #-24]	; 0xffffffe8
   11680:	ldr	r0, [fp, #-12]
   11684:	ldr	r0, [r0]
   11688:	ldr	r1, [fp, #-12]
   1168c:	str	r0, [r1, #4]
   11690:	ldr	r0, [fp, #-12]
   11694:	add	r0, r0, #4
   11698:	str	r0, [fp, #-12]
   1169c:	ldr	r0, [fp, #-8]
   116a0:	mvn	r1, #0
   116a4:	add	r0, r0, r1
   116a8:	str	r0, [fp, #-8]
   116ac:	b	116b0 <__assert_fail@plt+0x5f8>
   116b0:	ldr	r0, [fp, #-8]
   116b4:	ldr	r1, [fp, #-12]
   116b8:	movw	r2, #59309	; 0xe7ad
   116bc:	movt	r2, #1
   116c0:	movw	r3, #60124	; 0xeadc
   116c4:	movt	r3, #1
   116c8:	movw	ip, #0
   116cc:	str	ip, [sp]
   116d0:	bl	10f98 <getopt_long@plt>
   116d4:	str	r0, [fp, #-16]
   116d8:	cmn	r0, #1
   116dc:	beq	11894 <__assert_fail@plt+0x7dc>
   116e0:	ldr	r0, [fp, #-16]
   116e4:	cmn	r0, #3
   116e8:	str	r0, [fp, #-60]	; 0xffffffc4
   116ec:	beq	11848 <__assert_fail@plt+0x790>
   116f0:	b	116f4 <__assert_fail@plt+0x63c>
   116f4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   116f8:	cmn	r0, #2
   116fc:	beq	11840 <__assert_fail@plt+0x788>
   11700:	b	11704 <__assert_fail@plt+0x64c>
   11704:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11708:	cmp	r0, #99	; 0x63
   1170c:	beq	117b4 <__assert_fail@plt+0x6fc>
   11710:	b	11714 <__assert_fail@plt+0x65c>
   11714:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11718:	cmp	r0, #103	; 0x67
   1171c:	beq	11818 <__assert_fail@plt+0x760>
   11720:	b	11724 <__assert_fail@plt+0x66c>
   11724:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11728:	cmp	r0, #112	; 0x70
   1172c:	beq	1182c <__assert_fail@plt+0x774>
   11730:	b	11734 <__assert_fail@plt+0x67c>
   11734:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11738:	cmp	r0, #115	; 0x73
   1173c:	beq	117c8 <__assert_fail@plt+0x710>
   11740:	b	11744 <__assert_fail@plt+0x68c>
   11744:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11748:	cmp	r0, #116	; 0x74
   1174c:	beq	117dc <__assert_fail@plt+0x724>
   11750:	b	11754 <__assert_fail@plt+0x69c>
   11754:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11758:	cmp	r0, #117	; 0x75
   1175c:	beq	117f0 <__assert_fail@plt+0x738>
   11760:	b	11764 <__assert_fail@plt+0x6ac>
   11764:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11768:	cmp	r0, #119	; 0x77
   1176c:	beq	11804 <__assert_fail@plt+0x74c>
   11770:	b	11774 <__assert_fail@plt+0x6bc>
   11774:	ldr	r0, [fp, #-16]
   11778:	sub	r0, r0, #48	; 0x30
   1177c:	cmp	r0, #9
   11780:	bhi	117ac <__assert_fail@plt+0x6f4>
   11784:	movw	r0, #59330	; 0xe7c2
   11788:	movt	r0, #1
   1178c:	bl	10fbc <gettext@plt>
   11790:	ldr	r3, [fp, #-16]
   11794:	movw	lr, #0
   11798:	str	r0, [fp, #-64]	; 0xffffffc0
   1179c:	mov	r0, lr
   117a0:	mov	r1, lr
   117a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   117a8:	bl	10f5c <error@plt>
   117ac:	movw	r0, #1
   117b0:	bl	111b4 <__assert_fail@plt+0xfc>
   117b4:	movw	r0, #355	; 0x163
   117b8:	movt	r0, #3
   117bc:	movw	r1, #1
   117c0:	strb	r1, [r0]
   117c4:	b	11890 <__assert_fail@plt+0x7d8>
   117c8:	movw	r0, #353	; 0x161
   117cc:	movt	r0, #3
   117d0:	movw	r1, #1
   117d4:	strb	r1, [r0]
   117d8:	b	11890 <__assert_fail@plt+0x7d8>
   117dc:	movw	r0, #354	; 0x162
   117e0:	movt	r0, #3
   117e4:	movw	r1, #1
   117e8:	strb	r1, [r0]
   117ec:	b	11890 <__assert_fail@plt+0x7d8>
   117f0:	movw	r0, #352	; 0x160
   117f4:	movt	r0, #3
   117f8:	movw	r1, #1
   117fc:	strb	r1, [r0]
   11800:	b	11890 <__assert_fail@plt+0x7d8>
   11804:	movw	r0, #344	; 0x158
   11808:	movt	r0, #3
   1180c:	ldr	r0, [r0]
   11810:	str	r0, [fp, #-24]	; 0xffffffe8
   11814:	b	11890 <__assert_fail@plt+0x7d8>
   11818:	movw	r0, #344	; 0x158
   1181c:	movt	r0, #3
   11820:	ldr	r0, [r0]
   11824:	str	r0, [fp, #-28]	; 0xffffffe4
   11828:	b	11890 <__assert_fail@plt+0x7d8>
   1182c:	movw	r0, #344	; 0x158
   11830:	movt	r0, #3
   11834:	ldr	r0, [r0]
   11838:	bl	11c08 <__assert_fail@plt+0xb50>
   1183c:	b	11890 <__assert_fail@plt+0x7d8>
   11840:	movw	r0, #0
   11844:	bl	111b4 <__assert_fail@plt+0xfc>
   11848:	movw	r0, #340	; 0x154
   1184c:	movt	r0, #3
   11850:	ldr	r0, [r0]
   11854:	movw	r1, #236	; 0xec
   11858:	movt	r1, #3
   1185c:	ldr	r3, [r1]
   11860:	movw	r1, #59281	; 0xe791
   11864:	movt	r1, #1
   11868:	movw	r2, #59424	; 0xe820
   1186c:	movt	r2, #1
   11870:	movw	ip, #59438	; 0xe82e
   11874:	movt	ip, #1
   11878:	str	ip, [sp]
   1187c:	movw	ip, #0
   11880:	str	ip, [sp, #4]
   11884:	bl	16aec <__assert_fail@plt+0x5a34>
   11888:	movw	r0, #0
   1188c:	bl	10fb0 <exit@plt>
   11890:	b	116b0 <__assert_fail@plt+0x5f8>
   11894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11898:	movw	r1, #0
   1189c:	cmp	r0, r1
   118a0:	beq	11904 <__assert_fail@plt+0x84c>
   118a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118a8:	movw	r1, #59452	; 0xe83c
   118ac:	movt	r1, #1
   118b0:	str	r0, [sp, #68]	; 0x44
   118b4:	mov	r0, r1
   118b8:	bl	10fbc <gettext@plt>
   118bc:	mov	r1, sp
   118c0:	mov	lr, #0
   118c4:	str	lr, [r1, #16]
   118c8:	str	r0, [r1, #12]
   118cc:	movw	r0, #59957	; 0xea35
   118d0:	movt	r0, #1
   118d4:	str	r0, [r1, #8]
   118d8:	str	lr, [r1, #4]
   118dc:	movw	r0, #2500	; 0x9c4
   118e0:	str	r0, [r1]
   118e4:	ldr	r0, [sp, #68]	; 0x44
   118e8:	mov	r2, lr
   118ec:	mov	r3, lr
   118f0:	bl	19cb0 <__assert_fail@plt+0x8bf8>
   118f4:	movw	r2, #356	; 0x164
   118f8:	movt	r2, #3
   118fc:	str	r0, [r2]
   11900:	str	r1, [sp, #64]	; 0x40
   11904:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11908:	movw	r1, #0
   1190c:	cmp	r0, r1
   11910:	beq	119c0 <__assert_fail@plt+0x908>
   11914:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11918:	movw	r1, #356	; 0x164
   1191c:	movt	r1, #3
   11920:	ldr	r1, [r1]
   11924:	asr	r2, r1, #31
   11928:	movw	r3, #59452	; 0xe83c
   1192c:	movt	r3, #1
   11930:	str	r0, [sp, #60]	; 0x3c
   11934:	mov	r0, r3
   11938:	str	r2, [sp, #56]	; 0x38
   1193c:	str	r1, [sp, #52]	; 0x34
   11940:	bl	10fbc <gettext@plt>
   11944:	mov	r1, sp
   11948:	mov	r2, #0
   1194c:	str	r2, [r1, #16]
   11950:	str	r0, [r1, #12]
   11954:	movw	r0, #59957	; 0xea35
   11958:	movt	r0, #1
   1195c:	str	r0, [r1, #8]
   11960:	ldr	r0, [sp, #56]	; 0x38
   11964:	str	r0, [r1, #4]
   11968:	ldr	r0, [sp, #52]	; 0x34
   1196c:	str	r0, [r1]
   11970:	ldr	r0, [sp, #60]	; 0x3c
   11974:	str	r2, [sp, #48]	; 0x30
   11978:	ldr	r3, [sp, #48]	; 0x30
   1197c:	bl	19cb0 <__assert_fail@plt+0x8bf8>
   11980:	movw	r2, #376	; 0x178
   11984:	movt	r2, #3
   11988:	str	r0, [r2]
   1198c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11990:	movw	r2, #0
   11994:	cmp	r0, r2
   11998:	str	r1, [sp, #44]	; 0x2c
   1199c:	bne	119bc <__assert_fail@plt+0x904>
   119a0:	movw	r0, #376	; 0x178
   119a4:	movt	r0, #3
   119a8:	ldr	r0, [r0]
   119ac:	add	r0, r0, #10
   119b0:	movw	r1, #356	; 0x164
   119b4:	movt	r1, #3
   119b8:	str	r0, [r1]
   119bc:	b	119e8 <__assert_fail@plt+0x930>
   119c0:	movw	r0, #356	; 0x164
   119c4:	movt	r0, #3
   119c8:	ldr	r0, [r0]
   119cc:	movw	r1, #187	; 0xbb
   119d0:	mul	r0, r0, r1
   119d4:	movw	r1, #200	; 0xc8
   119d8:	sdiv	r0, r0, r1
   119dc:	movw	r1, #376	; 0x178
   119e0:	movt	r1, #3
   119e4:	str	r0, [r1]
   119e8:	movw	r0, #0
   119ec:	strb	r0, [fp, #-29]	; 0xffffffe3
   119f0:	movw	r0, #320	; 0x140
   119f4:	movt	r0, #3
   119f8:	ldr	r0, [r0]
   119fc:	ldr	r1, [fp, #-8]
   11a00:	cmp	r0, r1
   11a04:	bne	11a34 <__assert_fail@plt+0x97c>
   11a08:	movw	r0, #1
   11a0c:	strb	r0, [fp, #-29]	; 0xffffffe3
   11a10:	movw	r0, #336	; 0x150
   11a14:	movt	r0, #3
   11a18:	ldr	r0, [r0]
   11a1c:	movw	r1, #60440	; 0xec18
   11a20:	movt	r1, #1
   11a24:	bl	11d14 <__assert_fail@plt+0xc5c>
   11a28:	and	r0, r0, #1
   11a2c:	strb	r0, [fp, #-17]	; 0xffffffef
   11a30:	b	11b94 <__assert_fail@plt+0xadc>
   11a34:	b	11a38 <__assert_fail@plt+0x980>
   11a38:	movw	r0, #320	; 0x140
   11a3c:	movt	r0, #3
   11a40:	ldr	r0, [r0]
   11a44:	ldr	r1, [fp, #-8]
   11a48:	cmp	r0, r1
   11a4c:	bge	11b90 <__assert_fail@plt+0xad8>
   11a50:	ldr	r0, [fp, #-12]
   11a54:	movw	r1, #320	; 0x140
   11a58:	movt	r1, #3
   11a5c:	ldr	r1, [r1]
   11a60:	add	r0, r0, r1, lsl #2
   11a64:	ldr	r0, [r0]
   11a68:	str	r0, [fp, #-36]	; 0xffffffdc
   11a6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11a70:	movw	r1, #60440	; 0xec18
   11a74:	movt	r1, #1
   11a78:	bl	10e6c <strcmp@plt>
   11a7c:	cmp	r0, #0
   11a80:	bne	11ac8 <__assert_fail@plt+0xa10>
   11a84:	movw	r0, #336	; 0x150
   11a88:	movt	r0, #3
   11a8c:	ldr	r0, [r0]
   11a90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11a94:	bl	11d14 <__assert_fail@plt+0xc5c>
   11a98:	and	r0, r0, #1
   11a9c:	ldrb	r1, [fp, #-17]	; 0xffffffef
   11aa0:	and	r1, r1, #1
   11aa4:	and	r0, r1, r0
   11aa8:	cmp	r0, #0
   11aac:	movw	r0, #0
   11ab0:	movne	r0, #1
   11ab4:	and	r0, r0, #1
   11ab8:	strb	r0, [fp, #-17]	; 0xffffffef
   11abc:	movw	r0, #1
   11ac0:	strb	r0, [fp, #-29]	; 0xffffffe3
   11ac4:	b	11b74 <__assert_fail@plt+0xabc>
   11ac8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11acc:	movw	r1, #60049	; 0xea91
   11ad0:	movt	r1, #1
   11ad4:	bl	11070 <fopen64@plt>
   11ad8:	str	r0, [fp, #-40]	; 0xffffffd8
   11adc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11ae0:	movw	r1, #0
   11ae4:	cmp	r0, r1
   11ae8:	beq	11b20 <__assert_fail@plt+0xa68>
   11aec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11af0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11af4:	bl	11d14 <__assert_fail@plt+0xc5c>
   11af8:	and	r0, r0, #1
   11afc:	ldrb	r1, [fp, #-17]	; 0xffffffef
   11b00:	and	r1, r1, #1
   11b04:	and	r0, r1, r0
   11b08:	cmp	r0, #0
   11b0c:	movw	r0, #0
   11b10:	movne	r0, #1
   11b14:	and	r0, r0, #1
   11b18:	strb	r0, [fp, #-17]	; 0xffffffef
   11b1c:	b	11b70 <__assert_fail@plt+0xab8>
   11b20:	bl	10fec <__errno_location@plt>
   11b24:	ldr	r1, [r0]
   11b28:	movw	r0, #59466	; 0xe84a
   11b2c:	movt	r0, #1
   11b30:	str	r1, [sp, #40]	; 0x28
   11b34:	bl	10fbc <gettext@plt>
   11b38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11b3c:	movw	lr, #4
   11b40:	str	r0, [sp, #36]	; 0x24
   11b44:	mov	r0, lr
   11b48:	bl	15e98 <__assert_fail@plt+0x4de0>
   11b4c:	movw	r1, #0
   11b50:	str	r0, [sp, #32]
   11b54:	mov	r0, r1
   11b58:	ldr	r1, [sp, #40]	; 0x28
   11b5c:	ldr	r2, [sp, #36]	; 0x24
   11b60:	ldr	r3, [sp, #32]
   11b64:	bl	10f5c <error@plt>
   11b68:	movw	r0, #0
   11b6c:	strb	r0, [fp, #-17]	; 0xffffffef
   11b70:	b	11b74 <__assert_fail@plt+0xabc>
   11b74:	b	11b78 <__assert_fail@plt+0xac0>
   11b78:	movw	r0, #320	; 0x140
   11b7c:	movt	r0, #3
   11b80:	ldr	r1, [r0]
   11b84:	add	r1, r1, #1
   11b88:	str	r1, [r0]
   11b8c:	b	11a38 <__assert_fail@plt+0x980>
   11b90:	b	11b94 <__assert_fail@plt+0xadc>
   11b94:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11b98:	tst	r0, #1
   11b9c:	beq	11bf0 <__assert_fail@plt+0xb38>
   11ba0:	movw	r0, #336	; 0x150
   11ba4:	movt	r0, #3
   11ba8:	ldr	r0, [r0]
   11bac:	bl	1392c <__assert_fail@plt+0x2874>
   11bb0:	cmp	r0, #0
   11bb4:	beq	11bf0 <__assert_fail@plt+0xb38>
   11bb8:	bl	10fec <__errno_location@plt>
   11bbc:	ldr	r1, [r0]
   11bc0:	movw	r0, #59493	; 0xe865
   11bc4:	movt	r0, #1
   11bc8:	str	r1, [sp, #28]
   11bcc:	bl	10fbc <gettext@plt>
   11bd0:	movw	r1, #1
   11bd4:	str	r0, [sp, #24]
   11bd8:	mov	r0, r1
   11bdc:	ldr	r1, [sp, #28]
   11be0:	movw	r2, #60371	; 0xebd3
   11be4:	movt	r2, #1
   11be8:	ldr	r3, [sp, #24]
   11bec:	bl	10f5c <error@plt>
   11bf0:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11bf4:	tst	r0, #1
   11bf8:	movw	r0, #0
   11bfc:	moveq	r0, #1
   11c00:	mov	sp, fp
   11c04:	pop	{fp, pc}
   11c08:	push	{fp, lr}
   11c0c:	mov	fp, sp
   11c10:	sub	sp, sp, #16
   11c14:	str	r0, [fp, #-4]
   11c18:	movw	r0, #368	; 0x170
   11c1c:	movt	r0, #3
   11c20:	movw	r1, #0
   11c24:	str	r1, [r0]
   11c28:	ldr	r0, [fp, #-4]
   11c2c:	ldrb	r0, [r0]
   11c30:	cmp	r0, #32
   11c34:	bne	11c5c <__assert_fail@plt+0xba4>
   11c38:	movw	r0, #368	; 0x170
   11c3c:	movt	r0, #3
   11c40:	ldr	r1, [r0]
   11c44:	add	r1, r1, #1
   11c48:	str	r1, [r0]
   11c4c:	ldr	r0, [fp, #-4]
   11c50:	add	r0, r0, #1
   11c54:	str	r0, [fp, #-4]
   11c58:	b	11c28 <__assert_fail@plt+0xb70>
   11c5c:	ldr	r0, [fp, #-4]
   11c60:	movw	r1, #360	; 0x168
   11c64:	movt	r1, #3
   11c68:	str	r0, [r1]
   11c6c:	ldr	r0, [fp, #-4]
   11c70:	bl	10fc8 <strlen@plt>
   11c74:	movw	r1, #364	; 0x16c
   11c78:	movt	r1, #3
   11c7c:	str	r0, [r1]
   11c80:	ldr	r0, [fp, #-4]
   11c84:	ldr	r1, [r1]
   11c88:	add	r0, r0, r1
   11c8c:	str	r0, [sp, #8]
   11c90:	ldr	r0, [sp, #8]
   11c94:	ldr	r1, [fp, #-4]
   11c98:	cmp	r0, r1
   11c9c:	movw	r0, #0
   11ca0:	str	r0, [sp, #4]
   11ca4:	bls	11cc8 <__assert_fail@plt+0xc10>
   11ca8:	ldr	r0, [sp, #8]
   11cac:	mvn	r1, #0
   11cb0:	add	r0, r0, r1
   11cb4:	ldrb	r0, [r0]
   11cb8:	cmp	r0, #32
   11cbc:	movw	r0, #0
   11cc0:	moveq	r0, #1
   11cc4:	str	r0, [sp, #4]
   11cc8:	ldr	r0, [sp, #4]
   11ccc:	tst	r0, #1
   11cd0:	beq	11ce8 <__assert_fail@plt+0xc30>
   11cd4:	ldr	r0, [sp, #8]
   11cd8:	mvn	r1, #0
   11cdc:	add	r0, r0, r1
   11ce0:	str	r0, [sp, #8]
   11ce4:	b	11c90 <__assert_fail@plt+0xbd8>
   11ce8:	ldr	r0, [sp, #8]
   11cec:	movw	r1, #0
   11cf0:	strb	r1, [r0]
   11cf4:	ldr	r0, [sp, #8]
   11cf8:	ldr	r1, [fp, #-4]
   11cfc:	sub	r0, r0, r1
   11d00:	movw	r1, #372	; 0x174
   11d04:	movt	r1, #3
   11d08:	str	r0, [r1]
   11d0c:	mov	sp, fp
   11d10:	pop	{fp, pc}
   11d14:	push	{fp, lr}
   11d18:	mov	fp, sp
   11d1c:	sub	sp, sp, #32
   11d20:	str	r0, [fp, #-4]
   11d24:	str	r1, [fp, #-8]
   11d28:	ldr	r0, [fp, #-4]
   11d2c:	movw	r1, #2
   11d30:	bl	138d4 <__assert_fail@plt+0x281c>
   11d34:	movw	r0, #380	; 0x17c
   11d38:	movt	r0, #3
   11d3c:	movw	r1, #0
   11d40:	strb	r1, [r0]
   11d44:	movw	r0, #384	; 0x180
   11d48:	movt	r0, #3
   11d4c:	movw	r1, #0
   11d50:	str	r1, [r0]
   11d54:	ldr	r0, [fp, #-4]
   11d58:	bl	11e9c <__assert_fail@plt+0xde4>
   11d5c:	movw	r1, #388	; 0x184
   11d60:	movt	r1, #3
   11d64:	str	r0, [r1]
   11d68:	ldr	r0, [fp, #-4]
   11d6c:	bl	12008 <__assert_fail@plt+0xf50>
   11d70:	tst	r0, #1
   11d74:	beq	11d90 <__assert_fail@plt+0xcd8>
   11d78:	bl	12404 <__assert_fail@plt+0x134c>
   11d7c:	movw	lr, #392	; 0x188
   11d80:	movt	lr, #3
   11d84:	ldr	r0, [lr]
   11d88:	bl	12644 <__assert_fail@plt+0x158c>
   11d8c:	b	11d68 <__assert_fail@plt+0xcb0>
   11d90:	ldr	r0, [fp, #-4]
   11d94:	bl	10f44 <ferror_unlocked@plt>
   11d98:	cmp	r0, #0
   11d9c:	movw	r0, #0
   11da0:	movne	r0, #1
   11da4:	tst	r0, #1
   11da8:	movw	r0, #0
   11dac:	mvneq	r0, #0
   11db0:	str	r0, [fp, #-12]
   11db4:	ldr	r0, [fp, #-4]
   11db8:	movw	lr, #336	; 0x150
   11dbc:	movt	lr, #3
   11dc0:	ldr	lr, [lr]
   11dc4:	cmp	r0, lr
   11dc8:	bne	11dd8 <__assert_fail@plt+0xd20>
   11dcc:	ldr	r0, [fp, #-4]
   11dd0:	bl	11064 <clearerr_unlocked@plt>
   11dd4:	b	11e04 <__assert_fail@plt+0xd4c>
   11dd8:	ldr	r0, [fp, #-4]
   11ddc:	bl	1392c <__assert_fail@plt+0x2874>
   11de0:	cmp	r0, #0
   11de4:	beq	11e00 <__assert_fail@plt+0xd48>
   11de8:	ldr	r0, [fp, #-12]
   11dec:	cmp	r0, #0
   11df0:	bge	11e00 <__assert_fail@plt+0xd48>
   11df4:	bl	10fec <__errno_location@plt>
   11df8:	ldr	r0, [r0]
   11dfc:	str	r0, [fp, #-12]
   11e00:	b	11e04 <__assert_fail@plt+0xd4c>
   11e04:	ldr	r0, [fp, #-12]
   11e08:	movw	r1, #0
   11e0c:	cmp	r1, r0
   11e10:	bgt	11e80 <__assert_fail@plt+0xdc8>
   11e14:	ldr	r1, [fp, #-12]
   11e18:	ldr	r0, [fp, #-12]
   11e1c:	cmp	r0, #0
   11e20:	str	r1, [sp, #16]
   11e24:	beq	11e38 <__assert_fail@plt+0xd80>
   11e28:	movw	r0, #60371	; 0xebd3
   11e2c:	movt	r0, #1
   11e30:	str	r0, [sp, #12]
   11e34:	b	11e48 <__assert_fail@plt+0xd90>
   11e38:	movw	r0, #60040	; 0xea88
   11e3c:	movt	r0, #1
   11e40:	bl	10fbc <gettext@plt>
   11e44:	str	r0, [sp, #12]
   11e48:	ldr	r0, [sp, #12]
   11e4c:	ldr	r2, [fp, #-8]
   11e50:	movw	r1, #0
   11e54:	str	r0, [sp, #8]
   11e58:	mov	r0, r1
   11e5c:	movw	r1, #3
   11e60:	bl	15fec <__assert_fail@plt+0x4f34>
   11e64:	movw	r1, #0
   11e68:	str	r0, [sp, #4]
   11e6c:	mov	r0, r1
   11e70:	ldr	r1, [sp, #16]
   11e74:	ldr	r2, [sp, #8]
   11e78:	ldr	r3, [sp, #4]
   11e7c:	bl	10f5c <error@plt>
   11e80:	ldr	r0, [fp, #-12]
   11e84:	cmp	r0, #0
   11e88:	movw	r0, #0
   11e8c:	movlt	r0, #1
   11e90:	and	r0, r0, #1
   11e94:	mov	sp, fp
   11e98:	pop	{fp, pc}
   11e9c:	push	{fp, lr}
   11ea0:	mov	fp, sp
   11ea4:	sub	sp, sp, #32
   11ea8:	str	r0, [fp, #-8]
   11eac:	movw	r0, #396	; 0x18c
   11eb0:	movt	r0, #3
   11eb4:	movw	r1, #0
   11eb8:	str	r1, [r0]
   11ebc:	ldr	r0, [fp, #-8]
   11ec0:	ldr	r1, [fp, #-8]
   11ec4:	str	r0, [sp, #8]
   11ec8:	mov	r0, r1
   11ecc:	bl	10ef0 <getc_unlocked@plt>
   11ed0:	ldr	r1, [sp, #8]
   11ed4:	str	r0, [sp, #4]
   11ed8:	mov	r0, r1
   11edc:	ldr	r1, [sp, #4]
   11ee0:	bl	126b8 <__assert_fail@plt+0x1600>
   11ee4:	str	r0, [fp, #-12]
   11ee8:	movw	r0, #372	; 0x174
   11eec:	movt	r0, #3
   11ef0:	ldr	r0, [r0]
   11ef4:	cmp	r0, #0
   11ef8:	bne	11f54 <__assert_fail@plt+0xe9c>
   11efc:	movw	r0, #368	; 0x170
   11f00:	movt	r0, #3
   11f04:	ldr	r0, [r0]
   11f08:	movw	r1, #396	; 0x18c
   11f0c:	movt	r1, #3
   11f10:	ldr	r1, [r1]
   11f14:	cmp	r0, r1
   11f18:	bge	11f30 <__assert_fail@plt+0xe78>
   11f1c:	movw	r0, #368	; 0x170
   11f20:	movt	r0, #3
   11f24:	ldr	r0, [r0]
   11f28:	str	r0, [sp]
   11f2c:	b	11f40 <__assert_fail@plt+0xe88>
   11f30:	movw	r0, #396	; 0x18c
   11f34:	movt	r0, #3
   11f38:	ldr	r0, [r0]
   11f3c:	str	r0, [sp]
   11f40:	ldr	r0, [sp]
   11f44:	movw	r1, #400	; 0x190
   11f48:	movt	r1, #3
   11f4c:	str	r0, [r1]
   11f50:	b	11ff4 <__assert_fail@plt+0xf3c>
   11f54:	movw	r0, #396	; 0x18c
   11f58:	movt	r0, #3
   11f5c:	ldr	r0, [r0]
   11f60:	movw	r1, #400	; 0x190
   11f64:	movt	r1, #3
   11f68:	str	r0, [r1]
   11f6c:	movw	r0, #360	; 0x168
   11f70:	movt	r0, #3
   11f74:	ldr	r0, [r0]
   11f78:	str	r0, [sp, #16]
   11f7c:	ldr	r0, [sp, #16]
   11f80:	ldrb	r0, [r0]
   11f84:	cmp	r0, #0
   11f88:	beq	11fe4 <__assert_fail@plt+0xf2c>
   11f8c:	ldr	r0, [sp, #16]
   11f90:	ldrb	r0, [r0]
   11f94:	strb	r0, [sp, #15]
   11f98:	ldr	r0, [fp, #-12]
   11f9c:	ldrb	r1, [sp, #15]
   11fa0:	cmp	r0, r1
   11fa4:	beq	11fb4 <__assert_fail@plt+0xefc>
   11fa8:	ldr	r0, [fp, #-12]
   11fac:	str	r0, [fp, #-4]
   11fb0:	b	11ffc <__assert_fail@plt+0xf44>
   11fb4:	movw	r0, #396	; 0x18c
   11fb8:	movt	r0, #3
   11fbc:	ldr	r1, [r0]
   11fc0:	add	r1, r1, #1
   11fc4:	str	r1, [r0]
   11fc8:	ldr	r0, [fp, #-8]
   11fcc:	bl	10ef0 <getc_unlocked@plt>
   11fd0:	str	r0, [fp, #-12]
   11fd4:	ldr	r0, [sp, #16]
   11fd8:	add	r0, r0, #1
   11fdc:	str	r0, [sp, #16]
   11fe0:	b	11f7c <__assert_fail@plt+0xec4>
   11fe4:	ldr	r0, [fp, #-8]
   11fe8:	ldr	r1, [fp, #-12]
   11fec:	bl	126b8 <__assert_fail@plt+0x1600>
   11ff0:	str	r0, [fp, #-12]
   11ff4:	ldr	r0, [fp, #-12]
   11ff8:	str	r0, [fp, #-4]
   11ffc:	ldr	r0, [fp, #-4]
   12000:	mov	sp, fp
   12004:	pop	{fp, pc}
   12008:	push	{fp, lr}
   1200c:	mov	fp, sp
   12010:	sub	sp, sp, #32
   12014:	str	r0, [fp, #-8]
   12018:	movw	r0, #404	; 0x194
   1201c:	movt	r0, #3
   12020:	movw	r1, #0
   12024:	str	r1, [r0]
   12028:	movw	r0, #388	; 0x184
   1202c:	movt	r0, #3
   12030:	ldr	r0, [r0]
   12034:	str	r0, [fp, #-12]
   12038:	ldr	r0, [fp, #-12]
   1203c:	cmp	r0, #10
   12040:	movw	r0, #1
   12044:	str	r0, [sp, #16]
   12048:	beq	120c0 <__assert_fail@plt+0x1008>
   1204c:	ldr	r0, [fp, #-12]
   12050:	cmn	r0, #1
   12054:	movw	r0, #1
   12058:	str	r0, [sp, #16]
   1205c:	beq	120c0 <__assert_fail@plt+0x1008>
   12060:	movw	r0, #400	; 0x190
   12064:	movt	r0, #3
   12068:	ldr	r0, [r0]
   1206c:	movw	r1, #368	; 0x170
   12070:	movt	r1, #3
   12074:	ldr	r1, [r1]
   12078:	cmp	r0, r1
   1207c:	movw	r0, #1
   12080:	str	r0, [sp, #16]
   12084:	blt	120c0 <__assert_fail@plt+0x1008>
   12088:	movw	r0, #396	; 0x18c
   1208c:	movt	r0, #3
   12090:	ldr	r0, [r0]
   12094:	movw	r1, #400	; 0x190
   12098:	movt	r1, #3
   1209c:	ldr	r1, [r1]
   120a0:	movw	r2, #364	; 0x16c
   120a4:	movt	r2, #3
   120a8:	ldr	r2, [r2]
   120ac:	add	r1, r1, r2
   120b0:	cmp	r0, r1
   120b4:	movw	r0, #0
   120b8:	movlt	r0, #1
   120bc:	str	r0, [sp, #16]
   120c0:	ldr	r0, [sp, #16]
   120c4:	tst	r0, #1
   120c8:	beq	12128 <__assert_fail@plt+0x1070>
   120cc:	ldr	r0, [fp, #-8]
   120d0:	ldr	r1, [fp, #-12]
   120d4:	bl	12758 <__assert_fail@plt+0x16a0>
   120d8:	str	r0, [fp, #-12]
   120dc:	ldr	r0, [fp, #-12]
   120e0:	cmn	r0, #1
   120e4:	bne	12108 <__assert_fail@plt+0x1050>
   120e8:	movw	r0, #388	; 0x184
   120ec:	movt	r0, #3
   120f0:	mvn	r1, #0
   120f4:	str	r1, [r0]
   120f8:	movw	r0, #0
   120fc:	and	r0, r0, #1
   12100:	strb	r0, [fp, #-1]
   12104:	b	123f4 <__assert_fail@plt+0x133c>
   12108:	movw	r0, #10
   1210c:	bl	110ac <putchar_unlocked@plt>
   12110:	ldr	lr, [fp, #-8]
   12114:	str	r0, [sp, #12]
   12118:	mov	r0, lr
   1211c:	bl	11e9c <__assert_fail@plt+0xde4>
   12120:	str	r0, [fp, #-12]
   12124:	b	12038 <__assert_fail@plt+0xf80>
   12128:	movw	r0, #400	; 0x190
   1212c:	movt	r0, #3
   12130:	ldr	r0, [r0]
   12134:	movw	r1, #408	; 0x198
   12138:	movt	r1, #3
   1213c:	str	r0, [r1]
   12140:	movw	r0, #396	; 0x18c
   12144:	movt	r0, #3
   12148:	ldr	r0, [r0]
   1214c:	movw	r1, #412	; 0x19c
   12150:	movt	r1, #3
   12154:	str	r0, [r1]
   12158:	movw	r0, #5416	; 0x1528
   1215c:	movt	r0, #3
   12160:	movw	r1, #416	; 0x1a0
   12164:	movt	r1, #3
   12168:	str	r1, [r0]
   1216c:	movw	r0, #392	; 0x188
   12170:	movt	r0, #3
   12174:	movw	r1, #5420	; 0x152c
   12178:	movt	r1, #3
   1217c:	str	r1, [r0]
   12180:	ldr	r0, [fp, #-8]
   12184:	ldr	r1, [fp, #-12]
   12188:	bl	12938 <__assert_fail@plt+0x1880>
   1218c:	str	r0, [fp, #-12]
   12190:	ldr	r0, [fp, #-12]
   12194:	bl	12dbc <__assert_fail@plt+0x1d04>
   12198:	and	r0, r0, #1
   1219c:	bl	12c4c <__assert_fail@plt+0x1b94>
   121a0:	movw	r0, #353	; 0x161
   121a4:	movt	r0, #3
   121a8:	ldrb	r0, [r0]
   121ac:	tst	r0, #1
   121b0:	beq	121b8 <__assert_fail@plt+0x1100>
   121b4:	b	12360 <__assert_fail@plt+0x12a8>
   121b8:	movw	r0, #355	; 0x163
   121bc:	movt	r0, #3
   121c0:	ldrb	r0, [r0]
   121c4:	tst	r0, #1
   121c8:	beq	12244 <__assert_fail@plt+0x118c>
   121cc:	ldr	r0, [fp, #-12]
   121d0:	bl	12dbc <__assert_fail@plt+0x1d04>
   121d4:	tst	r0, #1
   121d8:	beq	12240 <__assert_fail@plt+0x1188>
   121dc:	b	121e0 <__assert_fail@plt+0x1128>
   121e0:	ldr	r0, [fp, #-8]
   121e4:	ldr	r1, [fp, #-12]
   121e8:	bl	12938 <__assert_fail@plt+0x1880>
   121ec:	str	r0, [fp, #-12]
   121f0:	ldr	r0, [fp, #-12]
   121f4:	bl	12dbc <__assert_fail@plt+0x1d04>
   121f8:	tst	r0, #1
   121fc:	movw	r0, #0
   12200:	str	r0, [sp, #8]
   12204:	beq	12230 <__assert_fail@plt+0x1178>
   12208:	movw	r0, #396	; 0x18c
   1220c:	movt	r0, #3
   12210:	ldr	r0, [r0]
   12214:	movw	r1, #384	; 0x180
   12218:	movt	r1, #3
   1221c:	ldr	r1, [r1]
   12220:	cmp	r0, r1
   12224:	movw	r0, #0
   12228:	moveq	r0, #1
   1222c:	str	r0, [sp, #8]
   12230:	ldr	r0, [sp, #8]
   12234:	tst	r0, #1
   12238:	bne	121e0 <__assert_fail@plt+0x1128>
   1223c:	b	12240 <__assert_fail@plt+0x1188>
   12240:	b	1235c <__assert_fail@plt+0x12a4>
   12244:	movw	r0, #354	; 0x162
   12248:	movt	r0, #3
   1224c:	ldrb	r0, [r0]
   12250:	tst	r0, #1
   12254:	beq	122f0 <__assert_fail@plt+0x1238>
   12258:	ldr	r0, [fp, #-12]
   1225c:	bl	12dbc <__assert_fail@plt+0x1d04>
   12260:	tst	r0, #1
   12264:	beq	122ec <__assert_fail@plt+0x1234>
   12268:	movw	r0, #396	; 0x18c
   1226c:	movt	r0, #3
   12270:	ldr	r0, [r0]
   12274:	movw	r1, #412	; 0x19c
   12278:	movt	r1, #3
   1227c:	ldr	r1, [r1]
   12280:	cmp	r0, r1
   12284:	beq	122ec <__assert_fail@plt+0x1234>
   12288:	b	1228c <__assert_fail@plt+0x11d4>
   1228c:	ldr	r0, [fp, #-8]
   12290:	ldr	r1, [fp, #-12]
   12294:	bl	12938 <__assert_fail@plt+0x1880>
   12298:	str	r0, [fp, #-12]
   1229c:	ldr	r0, [fp, #-12]
   122a0:	bl	12dbc <__assert_fail@plt+0x1d04>
   122a4:	tst	r0, #1
   122a8:	movw	r0, #0
   122ac:	str	r0, [sp, #4]
   122b0:	beq	122dc <__assert_fail@plt+0x1224>
   122b4:	movw	r0, #396	; 0x18c
   122b8:	movt	r0, #3
   122bc:	ldr	r0, [r0]
   122c0:	movw	r1, #384	; 0x180
   122c4:	movt	r1, #3
   122c8:	ldr	r1, [r1]
   122cc:	cmp	r0, r1
   122d0:	movw	r0, #0
   122d4:	moveq	r0, #1
   122d8:	str	r0, [sp, #4]
   122dc:	ldr	r0, [sp, #4]
   122e0:	tst	r0, #1
   122e4:	bne	1228c <__assert_fail@plt+0x11d4>
   122e8:	b	122ec <__assert_fail@plt+0x1234>
   122ec:	b	12358 <__assert_fail@plt+0x12a0>
   122f0:	b	122f4 <__assert_fail@plt+0x123c>
   122f4:	ldr	r0, [fp, #-12]
   122f8:	bl	12dbc <__assert_fail@plt+0x1d04>
   122fc:	tst	r0, #1
   12300:	movw	r0, #0
   12304:	str	r0, [sp]
   12308:	beq	12334 <__assert_fail@plt+0x127c>
   1230c:	movw	r0, #396	; 0x18c
   12310:	movt	r0, #3
   12314:	ldr	r0, [r0]
   12318:	movw	r1, #384	; 0x180
   1231c:	movt	r1, #3
   12320:	ldr	r1, [r1]
   12324:	cmp	r0, r1
   12328:	movw	r0, #0
   1232c:	moveq	r0, #1
   12330:	str	r0, [sp]
   12334:	ldr	r0, [sp]
   12338:	tst	r0, #1
   1233c:	beq	12354 <__assert_fail@plt+0x129c>
   12340:	ldr	r0, [fp, #-8]
   12344:	ldr	r1, [fp, #-12]
   12348:	bl	12938 <__assert_fail@plt+0x1880>
   1234c:	str	r0, [fp, #-12]
   12350:	b	122f4 <__assert_fail@plt+0x123c>
   12354:	b	12358 <__assert_fail@plt+0x12a0>
   12358:	b	1235c <__assert_fail@plt+0x12a4>
   1235c:	b	12360 <__assert_fail@plt+0x12a8>
   12360:	movw	r0, #392	; 0x188
   12364:	movt	r0, #3
   12368:	ldr	r0, [r0]
   1236c:	movw	r1, #5420	; 0x152c
   12370:	movt	r1, #3
   12374:	cmp	r1, r0
   12378:	bcs	12380 <__assert_fail@plt+0x12c8>
   1237c:	b	123a0 <__assert_fail@plt+0x12e8>
   12380:	movw	r0, #60051	; 0xea93
   12384:	movt	r0, #1
   12388:	movw	r1, #60069	; 0xeaa5
   1238c:	movt	r1, #1
   12390:	movw	r2, #623	; 0x26f
   12394:	movw	r3, #60079	; 0xeaaf
   12398:	movt	r3, #1
   1239c:	bl	110b8 <__assert_fail@plt>
   123a0:	movw	r0, #392	; 0x188
   123a4:	movt	r0, #3
   123a8:	ldr	r1, [r0]
   123ac:	ldrb	r2, [r1, #-16]
   123b0:	orr	r2, r2, #8
   123b4:	strb	r2, [r1, #-16]
   123b8:	ldr	r0, [r0]
   123bc:	ldrb	r1, [r0, #-16]
   123c0:	bic	r1, r1, #2
   123c4:	movw	r2, #2
   123c8:	orr	r1, r1, r2
   123cc:	mvn	r2, #15
   123d0:	add	r0, r0, r2
   123d4:	strb	r1, [r0]
   123d8:	ldr	r0, [fp, #-12]
   123dc:	movw	r1, #388	; 0x184
   123e0:	movt	r1, #3
   123e4:	str	r0, [r1]
   123e8:	movw	r0, #1
   123ec:	and	r0, r0, #1
   123f0:	strb	r0, [fp, #-1]
   123f4:	ldrb	r0, [fp, #-1]
   123f8:	and	r0, r0, #1
   123fc:	mov	sp, fp
   12400:	pop	{fp, pc}
   12404:	push	{fp, lr}
   12408:	mov	fp, sp
   1240c:	sub	sp, sp, #32
   12410:	movw	r0, #392	; 0x188
   12414:	movt	r0, #3
   12418:	ldr	r1, [r0]
   1241c:	movw	r2, #0
   12420:	str	r2, [r1, #20]
   12424:	ldr	r1, [r0]
   12428:	ldr	r1, [r1, #4]
   1242c:	str	r1, [sp, #8]
   12430:	movw	r1, #356	; 0x164
   12434:	movt	r1, #3
   12438:	ldr	r1, [r1]
   1243c:	ldr	r2, [r0]
   12440:	str	r1, [r2, #4]
   12444:	ldr	r0, [r0]
   12448:	mvn	r1, #27
   1244c:	add	r0, r0, r1
   12450:	str	r0, [fp, #-4]
   12454:	ldr	r0, [fp, #-4]
   12458:	movw	r1, #5420	; 0x152c
   1245c:	movt	r1, #3
   12460:	cmp	r0, r1
   12464:	bcc	12624 <__assert_fail@plt+0x156c>
   12468:	ldr	r0, [pc, #464]	; 12640 <__assert_fail@plt+0x1588>
   1246c:	str	r0, [sp, #12]
   12470:	ldr	r0, [fp, #-4]
   12474:	movw	r1, #5420	; 0x152c
   12478:	movt	r1, #3
   1247c:	cmp	r0, r1
   12480:	bne	12498 <__assert_fail@plt+0x13e0>
   12484:	movw	r0, #412	; 0x19c
   12488:	movt	r0, #3
   1248c:	ldr	r0, [r0]
   12490:	str	r0, [sp, #4]
   12494:	b	124a8 <__assert_fail@plt+0x13f0>
   12498:	movw	r0, #384	; 0x180
   1249c:	movt	r0, #3
   124a0:	ldr	r0, [r0]
   124a4:	str	r0, [sp, #4]
   124a8:	ldr	r0, [sp, #4]
   124ac:	str	r0, [fp, #-12]
   124b0:	ldr	r0, [fp, #-4]
   124b4:	str	r0, [fp, #-8]
   124b8:	ldr	r0, [fp, #-8]
   124bc:	ldr	r0, [r0, #4]
   124c0:	ldr	r1, [fp, #-12]
   124c4:	add	r0, r1, r0
   124c8:	str	r0, [fp, #-12]
   124cc:	ldr	r0, [fp, #-8]
   124d0:	add	r0, r0, #28
   124d4:	str	r0, [fp, #-8]
   124d8:	ldr	r0, [fp, #-8]
   124dc:	ldr	r1, [fp, #-12]
   124e0:	bl	1332c <__assert_fail@plt+0x2274>
   124e4:	ldr	r1, [fp, #-8]
   124e8:	ldr	r1, [r1, #20]
   124ec:	add	r0, r0, r1
   124f0:	str	r0, [sp, #16]
   124f4:	ldr	r0, [fp, #-4]
   124f8:	movw	r1, #5420	; 0x152c
   124fc:	movt	r1, #3
   12500:	cmp	r0, r1
   12504:	bne	12560 <__assert_fail@plt+0x14a8>
   12508:	movw	r0, #404	; 0x194
   1250c:	movt	r0, #3
   12510:	ldr	r0, [r0]
   12514:	cmp	r0, #0
   12518:	ble	12560 <__assert_fail@plt+0x14a8>
   1251c:	ldr	r0, [fp, #-12]
   12520:	movw	r1, #404	; 0x194
   12524:	movt	r1, #3
   12528:	ldr	r2, [r1]
   1252c:	sub	r0, r0, r2
   12530:	movw	r2, #10
   12534:	mul	r0, r0, r2
   12538:	ldr	r3, [fp, #-12]
   1253c:	ldr	r1, [r1]
   12540:	sub	r1, r3, r1
   12544:	mul	r1, r1, r2
   12548:	mul	r0, r0, r1
   1254c:	movw	r1, #2
   12550:	sdiv	r0, r0, r1
   12554:	ldr	r1, [sp, #16]
   12558:	add	r0, r1, r0
   1255c:	str	r0, [sp, #16]
   12560:	ldr	r0, [sp, #16]
   12564:	ldr	r1, [sp, #12]
   12568:	cmp	r0, r1
   1256c:	bge	12590 <__assert_fail@plt+0x14d8>
   12570:	ldr	r0, [sp, #16]
   12574:	str	r0, [sp, #12]
   12578:	ldr	r0, [fp, #-8]
   1257c:	ldr	r1, [fp, #-4]
   12580:	str	r0, [r1, #24]
   12584:	ldr	r0, [fp, #-12]
   12588:	ldr	r1, [fp, #-4]
   1258c:	str	r0, [r1, #16]
   12590:	ldr	r0, [fp, #-8]
   12594:	movw	r1, #392	; 0x188
   12598:	movt	r1, #3
   1259c:	ldr	r1, [r1]
   125a0:	cmp	r0, r1
   125a4:	bne	125ac <__assert_fail@plt+0x14f4>
   125a8:	b	125ec <__assert_fail@plt+0x1534>
   125ac:	ldr	r0, [fp, #-8]
   125b0:	mvn	r1, #19
   125b4:	add	r0, r0, r1
   125b8:	ldr	r0, [r0]
   125bc:	ldr	r1, [fp, #-8]
   125c0:	ldr	r1, [r1, #4]
   125c4:	add	r0, r0, r1
   125c8:	ldr	r1, [fp, #-12]
   125cc:	add	r0, r1, r0
   125d0:	str	r0, [fp, #-12]
   125d4:	ldr	r0, [fp, #-12]
   125d8:	movw	r1, #356	; 0x164
   125dc:	movt	r1, #3
   125e0:	ldr	r1, [r1]
   125e4:	cmp	r0, r1
   125e8:	blt	124cc <__assert_fail@plt+0x1414>
   125ec:	ldr	r0, [sp, #12]
   125f0:	ldr	r1, [fp, #-4]
   125f4:	str	r0, [sp]
   125f8:	mov	r0, r1
   125fc:	bl	13400 <__assert_fail@plt+0x2348>
   12600:	ldr	r1, [sp]
   12604:	add	r0, r1, r0
   12608:	ldr	r1, [fp, #-4]
   1260c:	str	r0, [r1, #20]
   12610:	ldr	r0, [fp, #-4]
   12614:	mvn	r1, #27
   12618:	add	r0, r0, r1
   1261c:	str	r0, [fp, #-4]
   12620:	b	12454 <__assert_fail@plt+0x139c>
   12624:	ldr	r0, [sp, #8]
   12628:	movw	r1, #392	; 0x188
   1262c:	movt	r1, #3
   12630:	ldr	r1, [r1]
   12634:	str	r0, [r1, #4]
   12638:	mov	sp, fp
   1263c:	pop	{fp, pc}
   12640:	svcvc	0x00ffffff
   12644:	push	{fp, lr}
   12648:	mov	fp, sp
   1264c:	sub	sp, sp, #8
   12650:	str	r0, [sp, #4]
   12654:	movw	r0, #412	; 0x19c
   12658:	movt	r0, #3
   1265c:	ldr	r1, [r0]
   12660:	movw	r0, #5420	; 0x152c
   12664:	movt	r0, #3
   12668:	bl	1357c <__assert_fail@plt+0x24c4>
   1266c:	movw	r0, #5420	; 0x152c
   12670:	movt	r0, #3
   12674:	ldr	r0, [r0, #24]
   12678:	str	r0, [sp]
   1267c:	ldr	r0, [sp]
   12680:	ldr	r1, [sp, #4]
   12684:	cmp	r0, r1
   12688:	beq	126b0 <__assert_fail@plt+0x15f8>
   1268c:	ldr	r0, [sp]
   12690:	movw	r1, #384	; 0x180
   12694:	movt	r1, #3
   12698:	ldr	r1, [r1]
   1269c:	bl	1357c <__assert_fail@plt+0x24c4>
   126a0:	ldr	r0, [sp]
   126a4:	ldr	r0, [r0, #24]
   126a8:	str	r0, [sp]
   126ac:	b	1267c <__assert_fail@plt+0x15c4>
   126b0:	mov	sp, fp
   126b4:	pop	{fp, pc}
   126b8:	push	{fp, lr}
   126bc:	mov	fp, sp
   126c0:	sub	sp, sp, #8
   126c4:	str	r0, [sp, #4]
   126c8:	str	r1, [sp]
   126cc:	ldr	r0, [sp]
   126d0:	cmp	r0, #32
   126d4:	bne	126f0 <__assert_fail@plt+0x1638>
   126d8:	movw	r0, #396	; 0x18c
   126dc:	movt	r0, #3
   126e0:	ldr	r1, [r0]
   126e4:	add	r1, r1, #1
   126e8:	str	r1, [r0]
   126ec:	b	12748 <__assert_fail@plt+0x1690>
   126f0:	ldr	r0, [sp]
   126f4:	cmp	r0, #9
   126f8:	bne	12738 <__assert_fail@plt+0x1680>
   126fc:	movw	r0, #380	; 0x17c
   12700:	movt	r0, #3
   12704:	mov	r1, #1
   12708:	strb	r1, [r0]
   1270c:	movw	r0, #396	; 0x18c
   12710:	movt	r0, #3
   12714:	ldr	r0, [r0]
   12718:	asr	r2, r0, #31
   1271c:	add	r0, r0, r2, lsr #29
   12720:	add	r0, r1, r0, asr #3
   12724:	lsl	r0, r0, #3
   12728:	movw	r1, #396	; 0x18c
   1272c:	movt	r1, #3
   12730:	str	r0, [r1]
   12734:	b	12744 <__assert_fail@plt+0x168c>
   12738:	ldr	r0, [sp]
   1273c:	mov	sp, fp
   12740:	pop	{fp, pc}
   12744:	b	12748 <__assert_fail@plt+0x1690>
   12748:	ldr	r0, [sp, #4]
   1274c:	bl	10ef0 <getc_unlocked@plt>
   12750:	str	r0, [sp]
   12754:	b	126cc <__assert_fail@plt+0x1614>
   12758:	push	{fp, lr}
   1275c:	mov	fp, sp
   12760:	sub	sp, sp, #32
   12764:	str	r0, [fp, #-4]
   12768:	str	r1, [fp, #-8]
   1276c:	movw	r0, #33420	; 0x828c
   12770:	movt	r0, #3
   12774:	movw	r1, #0
   12778:	str	r1, [r0]
   1277c:	movw	r0, #396	; 0x18c
   12780:	movt	r0, #3
   12784:	ldr	r0, [r0]
   12788:	movw	r1, #400	; 0x190
   1278c:	movt	r1, #3
   12790:	ldr	r1, [r1]
   12794:	cmp	r0, r1
   12798:	bgt	127b4 <__assert_fail@plt+0x16fc>
   1279c:	ldr	r0, [fp, #-8]
   127a0:	cmp	r0, #10
   127a4:	beq	128d4 <__assert_fail@plt+0x181c>
   127a8:	ldr	r0, [fp, #-8]
   127ac:	cmn	r0, #1
   127b0:	beq	128d4 <__assert_fail@plt+0x181c>
   127b4:	movw	r0, #400	; 0x190
   127b8:	movt	r0, #3
   127bc:	ldr	r0, [r0]
   127c0:	bl	12e5c <__assert_fail@plt+0x1da4>
   127c4:	movw	r0, #360	; 0x168
   127c8:	movt	r0, #3
   127cc:	ldr	r0, [r0]
   127d0:	str	r0, [fp, #-12]
   127d4:	movw	r0, #33420	; 0x828c
   127d8:	movt	r0, #3
   127dc:	ldr	r0, [r0]
   127e0:	movw	r1, #396	; 0x18c
   127e4:	movt	r1, #3
   127e8:	ldr	r1, [r1]
   127ec:	cmp	r0, r1
   127f0:	movw	r0, #0
   127f4:	str	r0, [sp, #16]
   127f8:	beq	12814 <__assert_fail@plt+0x175c>
   127fc:	ldr	r0, [fp, #-12]
   12800:	ldrb	r0, [r0]
   12804:	cmp	r0, #0
   12808:	movw	r0, #0
   1280c:	movne	r0, #1
   12810:	str	r0, [sp, #16]
   12814:	ldr	r0, [sp, #16]
   12818:	tst	r0, #1
   1281c:	beq	12850 <__assert_fail@plt+0x1798>
   12820:	ldr	r0, [fp, #-12]
   12824:	add	r1, r0, #1
   12828:	str	r1, [fp, #-12]
   1282c:	ldrb	r0, [r0]
   12830:	bl	110ac <putchar_unlocked@plt>
   12834:	str	r0, [sp, #12]
   12838:	movw	r0, #33420	; 0x828c
   1283c:	movt	r0, #3
   12840:	ldr	r1, [r0]
   12844:	add	r1, r1, #1
   12848:	str	r1, [r0]
   1284c:	b	127d4 <__assert_fail@plt+0x171c>
   12850:	ldr	r0, [fp, #-8]
   12854:	cmn	r0, #1
   12858:	beq	12888 <__assert_fail@plt+0x17d0>
   1285c:	ldr	r0, [fp, #-8]
   12860:	cmp	r0, #10
   12864:	beq	12888 <__assert_fail@plt+0x17d0>
   12868:	movw	r0, #396	; 0x18c
   1286c:	movt	r0, #3
   12870:	ldr	r0, [r0]
   12874:	movw	r1, #33420	; 0x828c
   12878:	movt	r1, #3
   1287c:	ldr	r1, [r1]
   12880:	sub	r0, r0, r1
   12884:	bl	12e5c <__assert_fail@plt+0x1da4>
   12888:	ldr	r0, [fp, #-8]
   1288c:	cmn	r0, #1
   12890:	bne	128d0 <__assert_fail@plt+0x1818>
   12894:	movw	r0, #396	; 0x18c
   12898:	movt	r0, #3
   1289c:	ldr	r0, [r0]
   128a0:	movw	r1, #400	; 0x190
   128a4:	movt	r1, #3
   128a8:	ldr	r1, [r1]
   128ac:	movw	r2, #372	; 0x174
   128b0:	movt	r2, #3
   128b4:	ldr	r2, [r2]
   128b8:	add	r1, r1, r2
   128bc:	cmp	r0, r1
   128c0:	blt	128d0 <__assert_fail@plt+0x1818>
   128c4:	movw	r0, #10
   128c8:	bl	110ac <putchar_unlocked@plt>
   128cc:	str	r0, [sp, #8]
   128d0:	b	128d4 <__assert_fail@plt+0x181c>
   128d4:	b	128d8 <__assert_fail@plt+0x1820>
   128d8:	ldr	r0, [fp, #-8]
   128dc:	cmp	r0, #10
   128e0:	movw	r0, #0
   128e4:	str	r0, [sp, #4]
   128e8:	beq	12900 <__assert_fail@plt+0x1848>
   128ec:	ldr	r0, [fp, #-8]
   128f0:	cmn	r0, #1
   128f4:	movw	r0, #0
   128f8:	movne	r0, #1
   128fc:	str	r0, [sp, #4]
   12900:	ldr	r0, [sp, #4]
   12904:	tst	r0, #1
   12908:	beq	1292c <__assert_fail@plt+0x1874>
   1290c:	ldr	r0, [fp, #-8]
   12910:	bl	110ac <putchar_unlocked@plt>
   12914:	ldr	lr, [fp, #-4]
   12918:	str	r0, [sp]
   1291c:	mov	r0, lr
   12920:	bl	10ef0 <getc_unlocked@plt>
   12924:	str	r0, [fp, #-8]
   12928:	b	128d8 <__assert_fail@plt+0x1820>
   1292c:	ldr	r0, [fp, #-8]
   12930:	mov	sp, fp
   12934:	pop	{fp, pc}
   12938:	push	{fp, lr}
   1293c:	mov	fp, sp
   12940:	sub	sp, sp, #40	; 0x28
   12944:	movw	r2, #27944	; 0x6d28
   12948:	movw	r3, #5420	; 0x152c
   1294c:	movt	r3, #3
   12950:	add	r2, r3, r2
   12954:	movw	r3, #5000	; 0x1388
   12958:	movw	ip, #416	; 0x1a0
   1295c:	movt	ip, #3
   12960:	add	r3, ip, r3
   12964:	str	r0, [fp, #-4]
   12968:	str	r1, [fp, #-8]
   1296c:	str	r3, [fp, #-16]
   12970:	str	r2, [sp, #20]
   12974:	movw	r0, #5416	; 0x1528
   12978:	movt	r0, #3
   1297c:	ldr	r0, [r0]
   12980:	movw	r1, #392	; 0x188
   12984:	movt	r1, #3
   12988:	ldr	r1, [r1]
   1298c:	str	r0, [r1]
   12990:	movw	r0, #5416	; 0x1528
   12994:	movt	r0, #3
   12998:	ldr	r0, [r0]
   1299c:	ldr	r1, [fp, #-16]
   129a0:	cmp	r0, r1
   129a4:	bne	129b8 <__assert_fail@plt+0x1900>
   129a8:	movw	r0, #1
   129ac:	and	r0, r0, #1
   129b0:	bl	12c4c <__assert_fail@plt+0x1b94>
   129b4:	bl	12f78 <__assert_fail@plt+0x1ec0>
   129b8:	ldr	r0, [fp, #-8]
   129bc:	movw	r1, #5416	; 0x1528
   129c0:	movt	r1, #3
   129c4:	ldr	r2, [r1]
   129c8:	add	r3, r2, #1
   129cc:	str	r3, [r1]
   129d0:	strb	r0, [r2]
   129d4:	ldr	r0, [fp, #-4]
   129d8:	bl	10ef0 <getc_unlocked@plt>
   129dc:	str	r0, [fp, #-8]
   129e0:	ldr	r0, [fp, #-8]
   129e4:	cmn	r0, #1
   129e8:	movw	r0, #0
   129ec:	str	r0, [sp, #16]
   129f0:	beq	12a24 <__assert_fail@plt+0x196c>
   129f4:	bl	10fa4 <__ctype_b_loc@plt>
   129f8:	ldr	r0, [r0]
   129fc:	ldr	lr, [fp, #-8]
   12a00:	add	r0, r0, lr, lsl #1
   12a04:	ldrh	r0, [r0]
   12a08:	and	r0, r0, #8192	; 0x2000
   12a0c:	cmp	r0, #0
   12a10:	movw	r0, #0
   12a14:	movne	r0, #1
   12a18:	mvn	lr, #0
   12a1c:	eor	r0, r0, lr
   12a20:	str	r0, [sp, #16]
   12a24:	ldr	r0, [sp, #16]
   12a28:	tst	r0, #1
   12a2c:	bne	12990 <__assert_fail@plt+0x18d8>
   12a30:	movw	r0, #5416	; 0x1528
   12a34:	movt	r0, #3
   12a38:	ldr	r0, [r0]
   12a3c:	movw	r1, #392	; 0x188
   12a40:	movt	r1, #3
   12a44:	ldr	r2, [r1]
   12a48:	ldr	r2, [r2]
   12a4c:	sub	r0, r0, r2
   12a50:	ldr	r2, [r1]
   12a54:	str	r0, [r2, #4]
   12a58:	movw	r2, #396	; 0x18c
   12a5c:	movt	r2, #3
   12a60:	ldr	r3, [r2]
   12a64:	add	r0, r3, r0
   12a68:	str	r0, [r2]
   12a6c:	ldr	r0, [r1]
   12a70:	bl	131f4 <__assert_fail@plt+0x213c>
   12a74:	movw	r0, #396	; 0x18c
   12a78:	movt	r0, #3
   12a7c:	ldr	r0, [r0]
   12a80:	str	r0, [fp, #-12]
   12a84:	ldr	r0, [fp, #-4]
   12a88:	ldr	r1, [fp, #-8]
   12a8c:	bl	126b8 <__assert_fail@plt+0x1600>
   12a90:	str	r0, [fp, #-8]
   12a94:	movw	r0, #396	; 0x18c
   12a98:	movt	r0, #3
   12a9c:	ldr	r0, [r0]
   12aa0:	ldr	r1, [fp, #-12]
   12aa4:	sub	r0, r0, r1
   12aa8:	movw	r1, #392	; 0x188
   12aac:	movt	r1, #3
   12ab0:	ldr	r1, [r1]
   12ab4:	str	r0, [r1, #8]
   12ab8:	ldr	r0, [fp, #-8]
   12abc:	cmn	r0, #1
   12ac0:	movw	r0, #1
   12ac4:	str	r0, [sp, #12]
   12ac8:	beq	12b38 <__assert_fail@plt+0x1a80>
   12acc:	movw	r0, #392	; 0x188
   12ad0:	movt	r0, #3
   12ad4:	ldr	r0, [r0]
   12ad8:	ldrb	r0, [r0, #12]
   12adc:	ubfx	r0, r0, #1, #1
   12ae0:	and	r0, r0, #255	; 0xff
   12ae4:	cmp	r0, #0
   12ae8:	movw	r0, #0
   12aec:	str	r0, [sp, #8]
   12af0:	beq	12b30 <__assert_fail@plt+0x1a78>
   12af4:	ldr	r0, [fp, #-8]
   12af8:	cmp	r0, #10
   12afc:	movw	r0, #1
   12b00:	str	r0, [sp, #4]
   12b04:	beq	12b28 <__assert_fail@plt+0x1a70>
   12b08:	movw	r0, #392	; 0x188
   12b0c:	movt	r0, #3
   12b10:	ldr	r0, [r0]
   12b14:	ldr	r0, [r0, #8]
   12b18:	cmp	r0, #1
   12b1c:	movw	r0, #0
   12b20:	movgt	r0, #1
   12b24:	str	r0, [sp, #4]
   12b28:	ldr	r0, [sp, #4]
   12b2c:	str	r0, [sp, #8]
   12b30:	ldr	r0, [sp, #8]
   12b34:	str	r0, [sp, #12]
   12b38:	ldr	r0, [sp, #12]
   12b3c:	movw	r1, #392	; 0x188
   12b40:	movt	r1, #3
   12b44:	ldr	r1, [r1]
   12b48:	and	r0, r0, #1
   12b4c:	ldrb	r2, [r1, #12]
   12b50:	lsl	r0, r0, #3
   12b54:	bic	r2, r2, #8
   12b58:	orr	r0, r2, r0
   12b5c:	strb	r0, [r1, #12]
   12b60:	ldr	r0, [fp, #-8]
   12b64:	cmp	r0, #10
   12b68:	beq	12b8c <__assert_fail@plt+0x1ad4>
   12b6c:	ldr	r0, [fp, #-8]
   12b70:	cmn	r0, #1
   12b74:	beq	12b8c <__assert_fail@plt+0x1ad4>
   12b78:	movw	r0, #352	; 0x160
   12b7c:	movt	r0, #3
   12b80:	ldrb	r0, [r0]
   12b84:	tst	r0, #1
   12b88:	beq	12bcc <__assert_fail@plt+0x1b14>
   12b8c:	movw	r0, #392	; 0x188
   12b90:	movt	r0, #3
   12b94:	ldr	r0, [r0]
   12b98:	ldrb	r0, [r0, #12]
   12b9c:	ubfx	r0, r0, #3, #1
   12ba0:	and	r0, r0, #255	; 0xff
   12ba4:	cmp	r0, #0
   12ba8:	movw	r0, #0
   12bac:	movne	r0, #1
   12bb0:	tst	r0, #1
   12bb4:	movw	r0, #2
   12bb8:	moveq	r0, #1
   12bbc:	movw	r1, #392	; 0x188
   12bc0:	movt	r1, #3
   12bc4:	ldr	r1, [r1]
   12bc8:	str	r0, [r1, #8]
   12bcc:	movw	r0, #392	; 0x188
   12bd0:	movt	r0, #3
   12bd4:	ldr	r0, [r0]
   12bd8:	ldr	r1, [sp, #20]
   12bdc:	cmp	r0, r1
   12be0:	bne	12bf4 <__assert_fail@plt+0x1b3c>
   12be4:	movw	r0, #1
   12be8:	and	r0, r0, #1
   12bec:	bl	12c4c <__assert_fail@plt+0x1b94>
   12bf0:	bl	12f78 <__assert_fail@plt+0x1ec0>
   12bf4:	movw	r0, #392	; 0x188
   12bf8:	movt	r0, #3
   12bfc:	ldr	r1, [r0]
   12c00:	add	r1, r1, #28
   12c04:	str	r1, [r0]
   12c08:	ldr	r0, [fp, #-8]
   12c0c:	cmp	r0, #10
   12c10:	movw	r0, #0
   12c14:	str	r0, [sp]
   12c18:	beq	12c30 <__assert_fail@plt+0x1b78>
   12c1c:	ldr	r0, [fp, #-8]
   12c20:	cmn	r0, #1
   12c24:	movw	r0, #0
   12c28:	movne	r0, #1
   12c2c:	str	r0, [sp]
   12c30:	ldr	r0, [sp]
   12c34:	tst	r0, #1
   12c38:	bne	12974 <__assert_fail@plt+0x18bc>
   12c3c:	ldr	r0, [fp, #-4]
   12c40:	bl	11e9c <__assert_fail@plt+0xde4>
   12c44:	mov	sp, fp
   12c48:	pop	{fp, pc}
   12c4c:	sub	sp, sp, #8
   12c50:	and	r0, r0, #1
   12c54:	strb	r0, [sp, #7]
   12c58:	movw	r0, #353	; 0x161
   12c5c:	movt	r0, #3
   12c60:	ldrb	r0, [r0]
   12c64:	tst	r0, #1
   12c68:	beq	12c88 <__assert_fail@plt+0x1bd0>
   12c6c:	movw	r0, #412	; 0x19c
   12c70:	movt	r0, #3
   12c74:	ldr	r0, [r0]
   12c78:	movw	r1, #384	; 0x180
   12c7c:	movt	r1, #3
   12c80:	str	r0, [r1]
   12c84:	b	12db4 <__assert_fail@plt+0x1cfc>
   12c88:	movw	r0, #355	; 0x163
   12c8c:	movt	r0, #3
   12c90:	ldrb	r0, [r0]
   12c94:	tst	r0, #1
   12c98:	beq	12ce0 <__assert_fail@plt+0x1c28>
   12c9c:	ldrb	r0, [sp, #7]
   12ca0:	tst	r0, #1
   12ca4:	beq	12cbc <__assert_fail@plt+0x1c04>
   12ca8:	movw	r0, #396	; 0x18c
   12cac:	movt	r0, #3
   12cb0:	ldr	r0, [r0]
   12cb4:	str	r0, [sp]
   12cb8:	b	12ccc <__assert_fail@plt+0x1c14>
   12cbc:	movw	r0, #412	; 0x19c
   12cc0:	movt	r0, #3
   12cc4:	ldr	r0, [r0]
   12cc8:	str	r0, [sp]
   12ccc:	ldr	r0, [sp]
   12cd0:	movw	r1, #384	; 0x180
   12cd4:	movt	r1, #3
   12cd8:	str	r0, [r1]
   12cdc:	b	12db0 <__assert_fail@plt+0x1cf8>
   12ce0:	movw	r0, #354	; 0x162
   12ce4:	movt	r0, #3
   12ce8:	ldrb	r0, [r0]
   12cec:	tst	r0, #1
   12cf0:	beq	12d94 <__assert_fail@plt+0x1cdc>
   12cf4:	ldrb	r0, [sp, #7]
   12cf8:	tst	r0, #1
   12cfc:	beq	12d3c <__assert_fail@plt+0x1c84>
   12d00:	movw	r0, #396	; 0x18c
   12d04:	movt	r0, #3
   12d08:	ldr	r0, [r0]
   12d0c:	movw	r1, #412	; 0x19c
   12d10:	movt	r1, #3
   12d14:	ldr	r1, [r1]
   12d18:	cmp	r0, r1
   12d1c:	beq	12d3c <__assert_fail@plt+0x1c84>
   12d20:	movw	r0, #396	; 0x18c
   12d24:	movt	r0, #3
   12d28:	ldr	r0, [r0]
   12d2c:	movw	r1, #384	; 0x180
   12d30:	movt	r1, #3
   12d34:	str	r0, [r1]
   12d38:	b	12d90 <__assert_fail@plt+0x1cd8>
   12d3c:	movw	r0, #384	; 0x180
   12d40:	movt	r0, #3
   12d44:	ldr	r0, [r0]
   12d48:	movw	r1, #412	; 0x19c
   12d4c:	movt	r1, #3
   12d50:	ldr	r1, [r1]
   12d54:	cmp	r0, r1
   12d58:	bne	12d8c <__assert_fail@plt+0x1cd4>
   12d5c:	movw	r0, #412	; 0x19c
   12d60:	movt	r0, #3
   12d64:	ldr	r0, [r0]
   12d68:	cmp	r0, #0
   12d6c:	movw	r0, #0
   12d70:	moveq	r0, #1
   12d74:	tst	r0, #1
   12d78:	movw	r0, #3
   12d7c:	moveq	r0, #0
   12d80:	movw	r1, #384	; 0x180
   12d84:	movt	r1, #3
   12d88:	str	r0, [r1]
   12d8c:	b	12d90 <__assert_fail@plt+0x1cd8>
   12d90:	b	12dac <__assert_fail@plt+0x1cf4>
   12d94:	movw	r0, #412	; 0x19c
   12d98:	movt	r0, #3
   12d9c:	ldr	r0, [r0]
   12da0:	movw	r1, #384	; 0x180
   12da4:	movt	r1, #3
   12da8:	str	r0, [r1]
   12dac:	b	12db0 <__assert_fail@plt+0x1cf8>
   12db0:	b	12db4 <__assert_fail@plt+0x1cfc>
   12db4:	add	sp, sp, #8
   12db8:	bx	lr
   12dbc:	sub	sp, sp, #8
   12dc0:	str	r0, [sp, #4]
   12dc4:	movw	r0, #400	; 0x190
   12dc8:	movt	r0, #3
   12dcc:	ldr	r0, [r0]
   12dd0:	movw	r1, #408	; 0x198
   12dd4:	movt	r1, #3
   12dd8:	ldr	r1, [r1]
   12ddc:	cmp	r0, r1
   12de0:	movw	r0, #0
   12de4:	str	r0, [sp]
   12de8:	bne	12e4c <__assert_fail@plt+0x1d94>
   12dec:	movw	r0, #396	; 0x18c
   12df0:	movt	r0, #3
   12df4:	ldr	r0, [r0]
   12df8:	movw	r1, #400	; 0x190
   12dfc:	movt	r1, #3
   12e00:	ldr	r1, [r1]
   12e04:	movw	r2, #364	; 0x16c
   12e08:	movt	r2, #3
   12e0c:	ldr	r2, [r2]
   12e10:	add	r1, r1, r2
   12e14:	cmp	r0, r1
   12e18:	movw	r0, #0
   12e1c:	str	r0, [sp]
   12e20:	blt	12e4c <__assert_fail@plt+0x1d94>
   12e24:	ldr	r0, [sp, #4]
   12e28:	cmp	r0, #10
   12e2c:	movw	r0, #0
   12e30:	str	r0, [sp]
   12e34:	beq	12e4c <__assert_fail@plt+0x1d94>
   12e38:	ldr	r0, [sp, #4]
   12e3c:	cmn	r0, #1
   12e40:	movw	r0, #0
   12e44:	movne	r0, #1
   12e48:	str	r0, [sp]
   12e4c:	ldr	r0, [sp]
   12e50:	and	r0, r0, #1
   12e54:	add	sp, sp, #8
   12e58:	bx	lr
   12e5c:	push	{fp, lr}
   12e60:	mov	fp, sp
   12e64:	sub	sp, sp, #24
   12e68:	str	r0, [fp, #-4]
   12e6c:	movw	r0, #33420	; 0x828c
   12e70:	movt	r0, #3
   12e74:	ldr	r0, [r0]
   12e78:	ldr	r1, [fp, #-4]
   12e7c:	add	r0, r0, r1
   12e80:	str	r0, [fp, #-8]
   12e84:	movw	r0, #380	; 0x17c
   12e88:	movt	r0, #3
   12e8c:	ldrb	r0, [r0]
   12e90:	tst	r0, #1
   12e94:	beq	12f30 <__assert_fail@plt+0x1e78>
   12e98:	ldr	r0, [fp, #-8]
   12e9c:	asr	r1, r0, #31
   12ea0:	add	r0, r0, r1, lsr #29
   12ea4:	asr	r1, r0, #3
   12ea8:	bic	r0, r0, #7
   12eac:	str	r0, [sp, #12]
   12eb0:	movw	r0, #33420	; 0x828c
   12eb4:	movt	r0, #3
   12eb8:	ldr	r0, [r0]
   12ebc:	add	r0, r0, #1
   12ec0:	ldr	r2, [sp, #12]
   12ec4:	cmp	r0, r2
   12ec8:	str	r1, [sp, #8]
   12ecc:	bge	12f2c <__assert_fail@plt+0x1e74>
   12ed0:	b	12ed4 <__assert_fail@plt+0x1e1c>
   12ed4:	movw	r0, #33420	; 0x828c
   12ed8:	movt	r0, #3
   12edc:	ldr	r0, [r0]
   12ee0:	ldr	r1, [sp, #12]
   12ee4:	cmp	r0, r1
   12ee8:	bge	12f28 <__assert_fail@plt+0x1e70>
   12eec:	mov	r0, #9
   12ef0:	bl	110ac <putchar_unlocked@plt>
   12ef4:	movw	lr, #33420	; 0x828c
   12ef8:	movt	lr, #3
   12efc:	ldr	lr, [lr]
   12f00:	asr	r1, lr, #31
   12f04:	add	r1, lr, r1, lsr #29
   12f08:	mov	lr, #1
   12f0c:	add	r1, lr, r1, asr #3
   12f10:	lsl	r1, r1, #3
   12f14:	movw	lr, #33420	; 0x828c
   12f18:	movt	lr, #3
   12f1c:	str	r1, [lr]
   12f20:	str	r0, [sp, #4]
   12f24:	b	12ed4 <__assert_fail@plt+0x1e1c>
   12f28:	b	12f2c <__assert_fail@plt+0x1e74>
   12f2c:	b	12f30 <__assert_fail@plt+0x1e78>
   12f30:	b	12f34 <__assert_fail@plt+0x1e7c>
   12f34:	movw	r0, #33420	; 0x828c
   12f38:	movt	r0, #3
   12f3c:	ldr	r0, [r0]
   12f40:	ldr	r1, [fp, #-8]
   12f44:	cmp	r0, r1
   12f48:	bge	12f70 <__assert_fail@plt+0x1eb8>
   12f4c:	movw	r0, #32
   12f50:	bl	110ac <putchar_unlocked@plt>
   12f54:	movw	lr, #33420	; 0x828c
   12f58:	movt	lr, #3
   12f5c:	ldr	r1, [lr]
   12f60:	add	r1, r1, #1
   12f64:	str	r1, [lr]
   12f68:	str	r0, [sp]
   12f6c:	b	12f34 <__assert_fail@plt+0x1e7c>
   12f70:	mov	sp, fp
   12f74:	pop	{fp, pc}
   12f78:	push	{fp, lr}
   12f7c:	mov	fp, sp
   12f80:	sub	sp, sp, #40	; 0x28
   12f84:	movw	r0, #392	; 0x188
   12f88:	movt	r0, #3
   12f8c:	ldr	r0, [r0]
   12f90:	movw	r1, #5420	; 0x152c
   12f94:	movt	r1, #3
   12f98:	cmp	r0, r1
   12f9c:	bne	12fec <__assert_fail@plt+0x1f34>
   12fa0:	movw	r0, #5416	; 0x1528
   12fa4:	movt	r0, #3
   12fa8:	ldr	r0, [r0]
   12fac:	movw	r1, #416	; 0x1a0
   12fb0:	movt	r1, #3
   12fb4:	sub	r2, r0, r1
   12fb8:	movw	r0, #340	; 0x154
   12fbc:	movt	r0, #3
   12fc0:	ldr	r3, [r0]
   12fc4:	mov	r0, r1
   12fc8:	movw	r1, #1
   12fcc:	bl	10ed8 <fwrite_unlocked@plt>
   12fd0:	movw	r1, #5416	; 0x1528
   12fd4:	movt	r1, #3
   12fd8:	movw	r2, #416	; 0x1a0
   12fdc:	movt	r2, #3
   12fe0:	str	r2, [r1]
   12fe4:	str	r0, [sp, #20]
   12fe8:	b	131e4 <__assert_fail@plt+0x212c>
   12fec:	bl	12404 <__assert_fail@plt+0x134c>
   12ff0:	ldr	lr, [pc, #500]	; 131ec <__assert_fail@plt+0x2134>
   12ff4:	movw	r0, #392	; 0x188
   12ff8:	movt	r0, #3
   12ffc:	ldr	r0, [r0]
   13000:	str	r0, [fp, #-4]
   13004:	str	lr, [fp, #-16]
   13008:	movw	r0, #5420	; 0x152c
   1300c:	movt	r0, #3
   13010:	ldr	r0, [r0, #24]
   13014:	str	r0, [fp, #-8]
   13018:	ldr	r0, [fp, #-8]
   1301c:	movw	r1, #392	; 0x188
   13020:	movt	r1, #3
   13024:	ldr	r1, [r1]
   13028:	cmp	r0, r1
   1302c:	beq	130a8 <__assert_fail@plt+0x1ff0>
   13030:	ldr	r0, [fp, #-8]
   13034:	ldr	r0, [r0, #20]
   13038:	ldr	r1, [fp, #-8]
   1303c:	ldr	r1, [r1, #24]
   13040:	ldr	r1, [r1, #20]
   13044:	sub	r0, r0, r1
   13048:	ldr	r1, [fp, #-16]
   1304c:	cmp	r0, r1
   13050:	bge	13078 <__assert_fail@plt+0x1fc0>
   13054:	ldr	r0, [fp, #-8]
   13058:	str	r0, [fp, #-4]
   1305c:	ldr	r0, [fp, #-8]
   13060:	ldr	r0, [r0, #20]
   13064:	ldr	r1, [fp, #-8]
   13068:	ldr	r1, [r1, #24]
   1306c:	ldr	r1, [r1, #20]
   13070:	sub	r0, r0, r1
   13074:	str	r0, [fp, #-16]
   13078:	ldr	r0, [pc, #368]	; 131f0 <__assert_fail@plt+0x2138>
   1307c:	ldr	r1, [fp, #-16]
   13080:	cmp	r1, r0
   13084:	bgt	13094 <__assert_fail@plt+0x1fdc>
   13088:	ldr	r0, [fp, #-16]
   1308c:	add	r0, r0, #9
   13090:	str	r0, [fp, #-16]
   13094:	b	13098 <__assert_fail@plt+0x1fe0>
   13098:	ldr	r0, [fp, #-8]
   1309c:	ldr	r0, [r0, #24]
   130a0:	str	r0, [fp, #-8]
   130a4:	b	13018 <__assert_fail@plt+0x1f60>
   130a8:	ldr	r0, [fp, #-4]
   130ac:	bl	12644 <__assert_fail@plt+0x158c>
   130b0:	ldr	r0, [fp, #-4]
   130b4:	ldr	r1, [r0]
   130b8:	movw	r0, #5416	; 0x1528
   130bc:	movt	r0, #3
   130c0:	ldr	lr, [r0]
   130c4:	ldr	r2, [fp, #-4]
   130c8:	ldr	r2, [r2]
   130cc:	sub	r2, lr, r2
   130d0:	movw	lr, #416	; 0x1a0
   130d4:	movt	lr, #3
   130d8:	str	r0, [sp, #16]
   130dc:	mov	r0, lr
   130e0:	str	lr, [sp, #12]
   130e4:	bl	10e9c <memmove@plt>
   130e8:	ldr	r0, [fp, #-4]
   130ec:	ldr	r0, [r0]
   130f0:	ldr	r1, [sp, #12]
   130f4:	sub	r0, r0, r1
   130f8:	str	r0, [fp, #-12]
   130fc:	ldr	r0, [fp, #-12]
   13100:	ldr	r2, [sp, #16]
   13104:	ldr	lr, [r2]
   13108:	movw	r3, #0
   1310c:	sub	r0, r3, r0
   13110:	add	r0, lr, r0
   13114:	str	r0, [r2]
   13118:	ldr	r0, [fp, #-4]
   1311c:	str	r0, [fp, #-8]
   13120:	ldr	r0, [fp, #-8]
   13124:	movw	r1, #392	; 0x188
   13128:	movt	r1, #3
   1312c:	ldr	r1, [r1]
   13130:	cmp	r0, r1
   13134:	bhi	13164 <__assert_fail@plt+0x20ac>
   13138:	ldr	r0, [fp, #-12]
   1313c:	ldr	r1, [fp, #-8]
   13140:	ldr	r2, [r1]
   13144:	movw	r3, #0
   13148:	sub	r0, r3, r0
   1314c:	add	r0, r2, r0
   13150:	str	r0, [r1]
   13154:	ldr	r0, [fp, #-8]
   13158:	add	r0, r0, #28
   1315c:	str	r0, [fp, #-8]
   13160:	b	13120 <__assert_fail@plt+0x2068>
   13164:	movw	r0, #5420	; 0x152c
   13168:	movt	r0, #3
   1316c:	mov	r1, r0
   13170:	ldr	r2, [fp, #-4]
   13174:	movw	r3, #392	; 0x188
   13178:	movt	r3, #3
   1317c:	ldr	ip, [r3]
   13180:	ldr	lr, [fp, #-4]
   13184:	sub	ip, ip, lr
   13188:	movw	lr, #28
   1318c:	sdiv	ip, ip, lr
   13190:	add	ip, ip, #1
   13194:	mul	ip, ip, lr
   13198:	str	r0, [sp, #8]
   1319c:	mov	r0, r1
   131a0:	mov	r1, r2
   131a4:	mov	r2, ip
   131a8:	str	lr, [sp, #4]
   131ac:	str	r3, [sp]
   131b0:	bl	10e9c <memmove@plt>
   131b4:	ldr	r0, [fp, #-4]
   131b8:	ldr	r1, [sp, #8]
   131bc:	sub	r0, r0, r1
   131c0:	ldr	r2, [sp, #4]
   131c4:	sdiv	r0, r0, r2
   131c8:	ldr	r3, [sp]
   131cc:	ldr	ip, [r3]
   131d0:	movw	lr, #0
   131d4:	sub	r0, lr, r0
   131d8:	mul	r0, r0, r2
   131dc:	add	r0, ip, r0
   131e0:	str	r0, [r3]
   131e4:	mov	sp, fp
   131e8:	pop	{fp, pc}
   131ec:	svcvc	0x00ffffff
   131f0:	svcvc	0x00fffff6
   131f4:	push	{fp, lr}
   131f8:	mov	fp, sp
   131fc:	sub	sp, sp, #24
   13200:	str	r0, [fp, #-4]
   13204:	ldr	r0, [fp, #-4]
   13208:	ldr	r0, [r0]
   1320c:	str	r0, [fp, #-8]
   13210:	ldr	r0, [fp, #-8]
   13214:	ldr	r1, [fp, #-4]
   13218:	ldr	r1, [r1, #4]
   1321c:	add	r0, r0, r1
   13220:	sub	r0, r0, #1
   13224:	str	r0, [sp, #12]
   13228:	ldr	r0, [sp, #12]
   1322c:	ldrb	r0, [r0]
   13230:	strb	r0, [sp, #11]
   13234:	ldr	r0, [fp, #-8]
   13238:	ldrb	r1, [r0]
   1323c:	movw	r0, #60107	; 0xeacb
   13240:	movt	r0, #1
   13244:	bl	10fd4 <strchr@plt>
   13248:	cmp	r0, #0
   1324c:	movwne	r0, #1
   13250:	ldr	r1, [fp, #-4]
   13254:	ldrb	lr, [r1, #12]
   13258:	and	lr, lr, #254	; 0xfe
   1325c:	orr	r0, lr, r0
   13260:	strb	r0, [r1, #12]
   13264:	bl	10fa4 <__ctype_b_loc@plt>
   13268:	ldr	r0, [r0]
   1326c:	ldrb	r1, [sp, #11]
   13270:	add	r0, r0, r1, lsl #1
   13274:	ldrh	r0, [r0]
   13278:	and	r0, r0, #4
   1327c:	ldr	r1, [fp, #-4]
   13280:	ldrb	lr, [r1, #12]
   13284:	bic	lr, lr, #4
   13288:	orr	r0, lr, r0
   1328c:	strb	r0, [r1, #12]
   13290:	ldr	r0, [fp, #-8]
   13294:	ldr	r1, [sp, #12]
   13298:	cmp	r0, r1
   1329c:	movw	r0, #0
   132a0:	str	r0, [sp, #4]
   132a4:	bcs	132d0 <__assert_fail@plt+0x2218>
   132a8:	ldr	r0, [sp, #12]
   132ac:	ldrb	r1, [r0]
   132b0:	movw	r0, #60113	; 0xead1
   132b4:	movt	r0, #1
   132b8:	bl	10fd4 <strchr@plt>
   132bc:	movw	r1, #0
   132c0:	cmp	r0, r1
   132c4:	movw	r0, #0
   132c8:	movne	r0, #1
   132cc:	str	r0, [sp, #4]
   132d0:	ldr	r0, [sp, #4]
   132d4:	tst	r0, #1
   132d8:	beq	132f0 <__assert_fail@plt+0x2238>
   132dc:	ldr	r0, [sp, #12]
   132e0:	mvn	r1, #0
   132e4:	add	r0, r0, r1
   132e8:	str	r0, [sp, #12]
   132ec:	b	13290 <__assert_fail@plt+0x21d8>
   132f0:	ldr	r0, [sp, #12]
   132f4:	ldrb	r1, [r0]
   132f8:	movw	r0, #60118	; 0xead6
   132fc:	movt	r0, #1
   13300:	bl	10fd4 <strchr@plt>
   13304:	cmp	r0, #0
   13308:	movwne	r0, #1
   1330c:	ldr	r1, [fp, #-4]
   13310:	ldrb	lr, [r1, #12]
   13314:	lsl	r0, r0, #1
   13318:	bic	lr, lr, #2
   1331c:	orr	r0, lr, r0
   13320:	strb	r0, [r1, #12]
   13324:	mov	sp, fp
   13328:	pop	{fp, pc}
   1332c:	sub	sp, sp, #20
   13330:	str	r0, [sp, #12]
   13334:	str	r1, [sp, #8]
   13338:	ldr	r0, [sp, #12]
   1333c:	movw	r1, #392	; 0x188
   13340:	movt	r1, #3
   13344:	ldr	r1, [r1]
   13348:	cmp	r0, r1
   1334c:	bne	1335c <__assert_fail@plt+0x22a4>
   13350:	movw	r0, #0
   13354:	str	r0, [sp, #16]
   13358:	b	133f4 <__assert_fail@plt+0x233c>
   1335c:	movw	r0, #376	; 0x178
   13360:	movt	r0, #3
   13364:	ldr	r0, [r0]
   13368:	ldr	r1, [sp, #8]
   1336c:	sub	r0, r0, r1
   13370:	str	r0, [sp, #4]
   13374:	ldr	r0, [sp, #4]
   13378:	movw	r1, #10
   1337c:	mul	r0, r0, r1
   13380:	ldr	r2, [sp, #4]
   13384:	mul	r1, r2, r1
   13388:	mul	r0, r0, r1
   1338c:	str	r0, [sp]
   13390:	ldr	r0, [sp, #12]
   13394:	ldr	r0, [r0, #24]
   13398:	movw	r1, #392	; 0x188
   1339c:	movt	r1, #3
   133a0:	ldr	r1, [r1]
   133a4:	cmp	r0, r1
   133a8:	beq	133ec <__assert_fail@plt+0x2334>
   133ac:	ldr	r0, [sp, #8]
   133b0:	ldr	r1, [sp, #12]
   133b4:	ldr	r1, [r1, #16]
   133b8:	sub	r0, r0, r1
   133bc:	str	r0, [sp, #4]
   133c0:	ldr	r0, [sp, #4]
   133c4:	movw	r1, #10
   133c8:	mul	r0, r0, r1
   133cc:	ldr	r2, [sp, #4]
   133d0:	mul	r1, r2, r1
   133d4:	mul	r0, r0, r1
   133d8:	movw	r1, #2
   133dc:	sdiv	r0, r0, r1
   133e0:	ldr	r1, [sp]
   133e4:	add	r0, r1, r0
   133e8:	str	r0, [sp]
   133ec:	ldr	r0, [sp]
   133f0:	str	r0, [sp, #16]
   133f4:	ldr	r0, [sp, #16]
   133f8:	add	sp, sp, #20
   133fc:	bx	lr
   13400:	sub	sp, sp, #8
   13404:	str	r0, [sp, #4]
   13408:	movw	r0, #4900	; 0x1324
   1340c:	str	r0, [sp]
   13410:	ldr	r0, [sp, #4]
   13414:	movw	r1, #5420	; 0x152c
   13418:	movt	r1, #3
   1341c:	cmp	r0, r1
   13420:	bls	13508 <__assert_fail@plt+0x2450>
   13424:	ldr	r0, [sp, #4]
   13428:	ldrb	r0, [r0, #-16]
   1342c:	ubfx	r0, r0, #1, #1
   13430:	and	r0, r0, #255	; 0xff
   13434:	cmp	r0, #0
   13438:	beq	1347c <__assert_fail@plt+0x23c4>
   1343c:	ldr	r0, [sp, #4]
   13440:	ldrb	r0, [r0, #-16]
   13444:	ubfx	r0, r0, #3, #1
   13448:	and	r0, r0, #255	; 0xff
   1344c:	cmp	r0, #0
   13450:	beq	13468 <__assert_fail@plt+0x23b0>
   13454:	ldr	r0, [sp]
   13458:	movw	r1, #2500	; 0x9c4
   1345c:	sub	r0, r0, r1
   13460:	str	r0, [sp]
   13464:	b	13478 <__assert_fail@plt+0x23c0>
   13468:	ldr	r0, [pc, #264]	; 13578 <__assert_fail@plt+0x24c0>
   1346c:	ldr	r1, [sp]
   13470:	add	r0, r1, r0
   13474:	str	r0, [sp]
   13478:	b	13504 <__assert_fail@plt+0x244c>
   1347c:	ldr	r0, [sp, #4]
   13480:	ldrb	r0, [r0, #-16]
   13484:	ubfx	r0, r0, #2, #1
   13488:	and	r0, r0, #255	; 0xff
   1348c:	cmp	r0, #0
   13490:	beq	134a4 <__assert_fail@plt+0x23ec>
   13494:	ldr	r0, [sp]
   13498:	sub	r0, r0, #1600	; 0x640
   1349c:	str	r0, [sp]
   134a0:	b	13500 <__assert_fail@plt+0x2448>
   134a4:	movw	r0, #5420	; 0x152c
   134a8:	movt	r0, #3
   134ac:	add	r0, r0, #28
   134b0:	ldr	r1, [sp, #4]
   134b4:	cmp	r1, r0
   134b8:	bls	134fc <__assert_fail@plt+0x2444>
   134bc:	ldr	r0, [sp, #4]
   134c0:	ldrb	r0, [r0, #-44]	; 0xffffffd4
   134c4:	ubfx	r0, r0, #3, #1
   134c8:	and	r0, r0, #255	; 0xff
   134cc:	cmp	r0, #0
   134d0:	beq	134fc <__assert_fail@plt+0x2444>
   134d4:	ldr	r0, [sp, #4]
   134d8:	mvn	r1, #23
   134dc:	add	r0, r0, r1
   134e0:	ldr	r0, [r0]
   134e4:	add	r0, r0, #2
   134e8:	movw	r1, #40000	; 0x9c40
   134ec:	sdiv	r0, r1, r0
   134f0:	ldr	r1, [sp]
   134f4:	add	r0, r1, r0
   134f8:	str	r0, [sp]
   134fc:	b	13500 <__assert_fail@plt+0x2448>
   13500:	b	13504 <__assert_fail@plt+0x244c>
   13504:	b	13508 <__assert_fail@plt+0x2450>
   13508:	ldr	r0, [sp, #4]
   1350c:	ldrb	r0, [r0, #12]
   13510:	and	r0, r0, #1
   13514:	and	r0, r0, #255	; 0xff
   13518:	cmp	r0, #0
   1351c:	beq	13530 <__assert_fail@plt+0x2478>
   13520:	ldr	r0, [sp]
   13524:	sub	r0, r0, #1600	; 0x640
   13528:	str	r0, [sp]
   1352c:	b	1356c <__assert_fail@plt+0x24b4>
   13530:	ldr	r0, [sp, #4]
   13534:	ldrb	r0, [r0, #12]
   13538:	ubfx	r0, r0, #3, #1
   1353c:	and	r0, r0, #255	; 0xff
   13540:	cmp	r0, #0
   13544:	beq	13568 <__assert_fail@plt+0x24b0>
   13548:	ldr	r0, [sp, #4]
   1354c:	ldr	r0, [r0, #4]
   13550:	add	r0, r0, #2
   13554:	movw	r1, #22500	; 0x57e4
   13558:	sdiv	r0, r1, r0
   1355c:	ldr	r1, [sp]
   13560:	add	r0, r1, r0
   13564:	str	r0, [sp]
   13568:	b	1356c <__assert_fail@plt+0x24b4>
   1356c:	ldr	r0, [sp]
   13570:	add	sp, sp, #8
   13574:	bx	lr
   13578:	andeq	r7, r5, r0, asr #28
   1357c:	push	{fp, lr}
   13580:	mov	fp, sp
   13584:	sub	sp, sp, #24
   13588:	str	r0, [fp, #-4]
   1358c:	str	r1, [fp, #-8]
   13590:	movw	r0, #33420	; 0x828c
   13594:	movt	r0, #3
   13598:	movw	r1, #0
   1359c:	str	r1, [r0]
   135a0:	movw	r0, #408	; 0x198
   135a4:	movt	r0, #3
   135a8:	ldr	r0, [r0]
   135ac:	bl	12e5c <__assert_fail@plt+0x1da4>
   135b0:	movw	r0, #360	; 0x168
   135b4:	movt	r0, #3
   135b8:	ldr	r0, [r0]
   135bc:	movw	r1, #340	; 0x154
   135c0:	movt	r1, #3
   135c4:	ldr	r1, [r1]
   135c8:	bl	10e54 <fputs_unlocked@plt>
   135cc:	movw	r1, #372	; 0x174
   135d0:	movt	r1, #3
   135d4:	ldr	r1, [r1]
   135d8:	movw	lr, #33420	; 0x828c
   135dc:	movt	lr, #3
   135e0:	ldr	r2, [lr]
   135e4:	add	r1, r2, r1
   135e8:	str	r1, [lr]
   135ec:	ldr	r1, [fp, #-8]
   135f0:	ldr	r2, [lr]
   135f4:	sub	r1, r1, r2
   135f8:	str	r0, [sp, #8]
   135fc:	mov	r0, r1
   13600:	bl	12e5c <__assert_fail@plt+0x1da4>
   13604:	ldr	r0, [fp, #-4]
   13608:	ldr	r0, [r0, #24]
   1360c:	mvn	r1, #27
   13610:	add	r0, r0, r1
   13614:	str	r0, [sp, #12]
   13618:	ldr	r0, [fp, #-4]
   1361c:	ldr	r1, [sp, #12]
   13620:	cmp	r0, r1
   13624:	beq	1364c <__assert_fail@plt+0x2594>
   13628:	ldr	r0, [fp, #-4]
   1362c:	bl	13680 <__assert_fail@plt+0x25c8>
   13630:	ldr	r0, [fp, #-4]
   13634:	ldr	r0, [r0, #8]
   13638:	bl	12e5c <__assert_fail@plt+0x1da4>
   1363c:	ldr	r0, [fp, #-4]
   13640:	add	r0, r0, #28
   13644:	str	r0, [fp, #-4]
   13648:	b	13618 <__assert_fail@plt+0x2560>
   1364c:	ldr	r0, [fp, #-4]
   13650:	bl	13680 <__assert_fail@plt+0x25c8>
   13654:	movw	r0, #33420	; 0x828c
   13658:	movt	r0, #3
   1365c:	ldr	r0, [r0]
   13660:	movw	lr, #404	; 0x194
   13664:	movt	lr, #3
   13668:	str	r0, [lr]
   1366c:	movw	r0, #10
   13670:	bl	110ac <putchar_unlocked@plt>
   13674:	str	r0, [sp, #4]
   13678:	mov	sp, fp
   1367c:	pop	{fp, pc}
   13680:	push	{fp, lr}
   13684:	mov	fp, sp
   13688:	sub	sp, sp, #16
   1368c:	str	r0, [fp, #-4]
   13690:	ldr	r0, [fp, #-4]
   13694:	ldr	r0, [r0]
   13698:	str	r0, [sp, #8]
   1369c:	ldr	r0, [fp, #-4]
   136a0:	ldr	r0, [r0, #4]
   136a4:	str	r0, [sp, #4]
   136a8:	ldr	r0, [sp, #4]
   136ac:	cmp	r0, #0
   136b0:	beq	136e0 <__assert_fail@plt+0x2628>
   136b4:	ldr	r0, [sp, #8]
   136b8:	add	r1, r0, #1
   136bc:	str	r1, [sp, #8]
   136c0:	ldrb	r0, [r0]
   136c4:	bl	110ac <putchar_unlocked@plt>
   136c8:	str	r0, [sp]
   136cc:	ldr	r0, [sp, #4]
   136d0:	mvn	r1, #0
   136d4:	add	r0, r0, r1
   136d8:	str	r0, [sp, #4]
   136dc:	b	136a8 <__assert_fail@plt+0x25f0>
   136e0:	ldr	r0, [fp, #-4]
   136e4:	ldr	r0, [r0, #4]
   136e8:	movw	r1, #33420	; 0x828c
   136ec:	movt	r1, #3
   136f0:	ldr	r2, [r1]
   136f4:	add	r0, r2, r0
   136f8:	str	r0, [r1]
   136fc:	mov	sp, fp
   13700:	pop	{fp, pc}
   13704:	sub	sp, sp, #4
   13708:	str	r0, [sp]
   1370c:	ldr	r0, [sp]
   13710:	movw	r1, #33424	; 0x8290
   13714:	movt	r1, #3
   13718:	str	r0, [r1]
   1371c:	add	sp, sp, #4
   13720:	bx	lr
   13724:	sub	sp, sp, #4
   13728:	and	r0, r0, #1
   1372c:	strb	r0, [sp, #3]
   13730:	ldrb	r0, [sp, #3]
   13734:	and	r0, r0, #1
   13738:	movw	r1, #33428	; 0x8294
   1373c:	movt	r1, #3
   13740:	strb	r0, [r1]
   13744:	add	sp, sp, #4
   13748:	bx	lr
   1374c:	push	{fp, lr}
   13750:	mov	fp, sp
   13754:	sub	sp, sp, #24
   13758:	movw	r0, #340	; 0x154
   1375c:	movt	r0, #3
   13760:	ldr	r0, [r0]
   13764:	bl	1c1a0 <__assert_fail@plt+0xb0e8>
   13768:	cmp	r0, #0
   1376c:	beq	1383c <__assert_fail@plt+0x2784>
   13770:	movw	r0, #33428	; 0x8294
   13774:	movt	r0, #3
   13778:	ldrb	r0, [r0]
   1377c:	tst	r0, #1
   13780:	beq	13794 <__assert_fail@plt+0x26dc>
   13784:	bl	10fec <__errno_location@plt>
   13788:	ldr	r0, [r0]
   1378c:	cmp	r0, #32
   13790:	beq	1383c <__assert_fail@plt+0x2784>
   13794:	movw	r0, #60355	; 0xebc3
   13798:	movt	r0, #1
   1379c:	bl	10fbc <gettext@plt>
   137a0:	str	r0, [fp, #-4]
   137a4:	movw	r0, #33424	; 0x8290
   137a8:	movt	r0, #3
   137ac:	ldr	r0, [r0]
   137b0:	movw	lr, #0
   137b4:	cmp	r0, lr
   137b8:	beq	13810 <__assert_fail@plt+0x2758>
   137bc:	bl	10fec <__errno_location@plt>
   137c0:	ldr	r1, [r0]
   137c4:	movw	r0, #33424	; 0x8290
   137c8:	movt	r0, #3
   137cc:	ldr	r0, [r0]
   137d0:	str	r1, [fp, #-8]
   137d4:	bl	15f94 <__assert_fail@plt+0x4edc>
   137d8:	ldr	r1, [fp, #-4]
   137dc:	movw	lr, #0
   137e0:	str	r0, [sp, #12]
   137e4:	mov	r0, lr
   137e8:	ldr	lr, [fp, #-8]
   137ec:	str	r1, [sp, #8]
   137f0:	mov	r1, lr
   137f4:	movw	r2, #60367	; 0xebcf
   137f8:	movt	r2, #1
   137fc:	ldr	r3, [sp, #12]
   13800:	ldr	ip, [sp, #8]
   13804:	str	ip, [sp]
   13808:	bl	10f5c <error@plt>
   1380c:	b	1382c <__assert_fail@plt+0x2774>
   13810:	bl	10fec <__errno_location@plt>
   13814:	ldr	r1, [r0]
   13818:	ldr	r3, [fp, #-4]
   1381c:	movw	r0, #0
   13820:	movw	r2, #60371	; 0xebd3
   13824:	movt	r2, #1
   13828:	bl	10f5c <error@plt>
   1382c:	movw	r0, #240	; 0xf0
   13830:	movt	r0, #3
   13834:	ldr	r0, [r0]
   13838:	bl	10eb4 <_exit@plt>
   1383c:	movw	r0, #328	; 0x148
   13840:	movt	r0, #3
   13844:	ldr	r0, [r0]
   13848:	bl	1c1a0 <__assert_fail@plt+0xb0e8>
   1384c:	cmp	r0, #0
   13850:	beq	13864 <__assert_fail@plt+0x27ac>
   13854:	movw	r0, #240	; 0xf0
   13858:	movt	r0, #3
   1385c:	ldr	r0, [r0]
   13860:	bl	10eb4 <_exit@plt>
   13864:	mov	sp, fp
   13868:	pop	{fp, pc}
   1386c:	push	{r4, r5, fp, lr}
   13870:	add	fp, sp, #8
   13874:	sub	sp, sp, #48	; 0x30
   13878:	ldr	r1, [fp, #12]
   1387c:	ldr	ip, [fp, #8]
   13880:	ldr	lr, [fp, #16]
   13884:	str	r0, [fp, #-12]
   13888:	str	r3, [fp, #-20]	; 0xffffffec
   1388c:	str	r2, [fp, #-24]	; 0xffffffe8
   13890:	str	r1, [sp, #28]
   13894:	str	ip, [sp, #24]
   13898:	ldr	r0, [fp, #-12]
   1389c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   138a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   138a4:	ldr	r1, [sp, #24]
   138a8:	ldr	ip, [sp, #28]
   138ac:	ldr	r4, [fp, #16]
   138b0:	mov	r5, sp
   138b4:	str	r4, [r5, #8]
   138b8:	str	ip, [r5, #4]
   138bc:	str	r1, [r5]
   138c0:	str	lr, [sp, #20]
   138c4:	bl	10e78 <posix_fadvise64@plt>
   138c8:	str	r0, [sp, #16]
   138cc:	sub	sp, fp, #8
   138d0:	pop	{r4, r5, fp, pc}
   138d4:	push	{fp, lr}
   138d8:	mov	fp, sp
   138dc:	sub	sp, sp, #24
   138e0:	str	r0, [fp, #-4]
   138e4:	str	r1, [fp, #-8]
   138e8:	ldr	r0, [fp, #-4]
   138ec:	movw	r1, #0
   138f0:	cmp	r0, r1
   138f4:	beq	13924 <__assert_fail@plt+0x286c>
   138f8:	ldr	r0, [fp, #-4]
   138fc:	bl	11010 <fileno@plt>
   13900:	ldr	lr, [fp, #-8]
   13904:	mov	r1, sp
   13908:	str	lr, [r1, #8]
   1390c:	mov	lr, #0
   13910:	str	lr, [r1, #4]
   13914:	str	lr, [r1]
   13918:	mov	r2, lr
   1391c:	mov	r3, lr
   13920:	bl	1386c <__assert_fail@plt+0x27b4>
   13924:	mov	sp, fp
   13928:	pop	{fp, pc}
   1392c:	push	{fp, lr}
   13930:	mov	fp, sp
   13934:	sub	sp, sp, #32
   13938:	str	r0, [fp, #-8]
   1393c:	movw	r0, #0
   13940:	str	r0, [fp, #-12]
   13944:	str	r0, [sp, #12]
   13948:	ldr	r0, [fp, #-8]
   1394c:	bl	11010 <fileno@plt>
   13950:	str	r0, [sp, #16]
   13954:	ldr	r0, [sp, #16]
   13958:	cmp	r0, #0
   1395c:	bge	13970 <__assert_fail@plt+0x28b8>
   13960:	ldr	r0, [fp, #-8]
   13964:	bl	11028 <fclose@plt>
   13968:	str	r0, [fp, #-4]
   1396c:	b	13a0c <__assert_fail@plt+0x2954>
   13970:	ldr	r0, [fp, #-8]
   13974:	bl	10f80 <__freading@plt>
   13978:	cmp	r0, #0
   1397c:	beq	139b4 <__assert_fail@plt+0x28fc>
   13980:	ldr	r0, [fp, #-8]
   13984:	bl	11010 <fileno@plt>
   13988:	mov	lr, sp
   1398c:	mov	r1, #1
   13990:	str	r1, [lr]
   13994:	mov	r1, #0
   13998:	mov	r2, r1
   1399c:	mov	r3, r1
   139a0:	bl	10f20 <lseek64@plt>
   139a4:	and	r0, r0, r1
   139a8:	cmn	r0, #1
   139ac:	beq	139d0 <__assert_fail@plt+0x2918>
   139b0:	b	139b4 <__assert_fail@plt+0x28fc>
   139b4:	ldr	r0, [fp, #-8]
   139b8:	bl	13a18 <__assert_fail@plt+0x2960>
   139bc:	cmp	r0, #0
   139c0:	beq	139d0 <__assert_fail@plt+0x2918>
   139c4:	bl	10fec <__errno_location@plt>
   139c8:	ldr	r0, [r0]
   139cc:	str	r0, [fp, #-12]
   139d0:	ldr	r0, [fp, #-8]
   139d4:	bl	11028 <fclose@plt>
   139d8:	str	r0, [sp, #12]
   139dc:	ldr	r0, [fp, #-12]
   139e0:	cmp	r0, #0
   139e4:	beq	13a04 <__assert_fail@plt+0x294c>
   139e8:	ldr	r0, [fp, #-12]
   139ec:	str	r0, [sp, #8]
   139f0:	bl	10fec <__errno_location@plt>
   139f4:	ldr	lr, [sp, #8]
   139f8:	str	lr, [r0]
   139fc:	mvn	r0, #0
   13a00:	str	r0, [sp, #12]
   13a04:	ldr	r0, [sp, #12]
   13a08:	str	r0, [fp, #-4]
   13a0c:	ldr	r0, [fp, #-4]
   13a10:	mov	sp, fp
   13a14:	pop	{fp, pc}
   13a18:	push	{fp, lr}
   13a1c:	mov	fp, sp
   13a20:	sub	sp, sp, #8
   13a24:	str	r0, [sp]
   13a28:	ldr	r0, [sp]
   13a2c:	movw	r1, #0
   13a30:	cmp	r0, r1
   13a34:	beq	13a48 <__assert_fail@plt+0x2990>
   13a38:	ldr	r0, [sp]
   13a3c:	bl	10f80 <__freading@plt>
   13a40:	cmp	r0, #0
   13a44:	bne	13a58 <__assert_fail@plt+0x29a0>
   13a48:	ldr	r0, [sp]
   13a4c:	bl	10e90 <fflush@plt>
   13a50:	str	r0, [sp, #4]
   13a54:	b	13a6c <__assert_fail@plt+0x29b4>
   13a58:	ldr	r0, [sp]
   13a5c:	bl	13a78 <__assert_fail@plt+0x29c0>
   13a60:	ldr	r0, [sp]
   13a64:	bl	10e90 <fflush@plt>
   13a68:	str	r0, [sp, #4]
   13a6c:	ldr	r0, [sp, #4]
   13a70:	mov	sp, fp
   13a74:	pop	{fp, pc}
   13a78:	push	{fp, lr}
   13a7c:	mov	fp, sp
   13a80:	sub	sp, sp, #16
   13a84:	str	r0, [fp, #-4]
   13a88:	ldr	r0, [fp, #-4]
   13a8c:	ldr	r0, [r0]
   13a90:	and	r0, r0, #256	; 0x100
   13a94:	cmp	r0, #0
   13a98:	beq	13ac0 <__assert_fail@plt+0x2a08>
   13a9c:	ldr	r0, [fp, #-4]
   13aa0:	mov	r1, sp
   13aa4:	mov	r2, #1
   13aa8:	str	r2, [r1]
   13aac:	mov	r1, #0
   13ab0:	mov	r2, r1
   13ab4:	mov	r3, r1
   13ab8:	bl	13ac8 <__assert_fail@plt+0x2a10>
   13abc:	str	r0, [sp, #8]
   13ac0:	mov	sp, fp
   13ac4:	pop	{fp, pc}
   13ac8:	push	{fp, lr}
   13acc:	mov	fp, sp
   13ad0:	sub	sp, sp, #32
   13ad4:	ldr	r1, [fp, #8]
   13ad8:	str	r0, [fp, #-8]
   13adc:	str	r3, [sp, #20]
   13ae0:	str	r2, [sp, #16]
   13ae4:	ldr	r0, [fp, #-8]
   13ae8:	ldr	r0, [r0, #8]
   13aec:	ldr	r2, [fp, #-8]
   13af0:	ldr	r2, [r2, #4]
   13af4:	cmp	r0, r2
   13af8:	str	r1, [sp, #4]
   13afc:	bne	13ba8 <__assert_fail@plt+0x2af0>
   13b00:	ldr	r0, [fp, #-8]
   13b04:	ldr	r0, [r0, #20]
   13b08:	ldr	r1, [fp, #-8]
   13b0c:	ldr	r1, [r1, #16]
   13b10:	cmp	r0, r1
   13b14:	bne	13ba8 <__assert_fail@plt+0x2af0>
   13b18:	ldr	r0, [fp, #-8]
   13b1c:	ldr	r0, [r0, #36]	; 0x24
   13b20:	movw	r1, #0
   13b24:	cmp	r0, r1
   13b28:	bne	13ba8 <__assert_fail@plt+0x2af0>
   13b2c:	ldr	r0, [fp, #-8]
   13b30:	bl	11010 <fileno@plt>
   13b34:	ldr	r2, [sp, #16]
   13b38:	ldr	r3, [sp, #20]
   13b3c:	ldr	lr, [fp, #8]
   13b40:	mov	r1, sp
   13b44:	str	lr, [r1]
   13b48:	bl	10f20 <lseek64@plt>
   13b4c:	str	r1, [sp, #12]
   13b50:	str	r0, [sp, #8]
   13b54:	ldr	r0, [sp, #8]
   13b58:	ldr	r1, [sp, #12]
   13b5c:	and	r0, r0, r1
   13b60:	cmn	r0, #1
   13b64:	bne	13b78 <__assert_fail@plt+0x2ac0>
   13b68:	b	13b6c <__assert_fail@plt+0x2ab4>
   13b6c:	mvn	r0, #0
   13b70:	str	r0, [fp, #-4]
   13b74:	b	13bc8 <__assert_fail@plt+0x2b10>
   13b78:	ldr	r0, [fp, #-8]
   13b7c:	ldr	r1, [r0]
   13b80:	bic	r1, r1, #16
   13b84:	str	r1, [r0]
   13b88:	ldr	r0, [sp, #8]
   13b8c:	ldr	r1, [sp, #12]
   13b90:	ldr	r2, [fp, #-8]
   13b94:	str	r1, [r2, #84]	; 0x54
   13b98:	str	r0, [r2, #80]	; 0x50
   13b9c:	movw	r0, #0
   13ba0:	str	r0, [fp, #-4]
   13ba4:	b	13bc8 <__assert_fail@plt+0x2b10>
   13ba8:	ldr	r0, [fp, #-8]
   13bac:	ldr	r2, [sp, #16]
   13bb0:	ldr	r3, [sp, #20]
   13bb4:	ldr	r1, [fp, #8]
   13bb8:	mov	ip, sp
   13bbc:	str	r1, [ip]
   13bc0:	bl	11034 <fseeko64@plt>
   13bc4:	str	r0, [fp, #-4]
   13bc8:	ldr	r0, [fp, #-4]
   13bcc:	mov	sp, fp
   13bd0:	pop	{fp, pc}
   13bd4:	push	{fp, lr}
   13bd8:	mov	fp, sp
   13bdc:	sub	sp, sp, #24
   13be0:	str	r0, [fp, #-4]
   13be4:	ldr	r0, [fp, #-4]
   13be8:	movw	r1, #0
   13bec:	cmp	r0, r1
   13bf0:	bne	13c14 <__assert_fail@plt+0x2b5c>
   13bf4:	movw	r0, #328	; 0x148
   13bf8:	movt	r0, #3
   13bfc:	ldr	r1, [r0]
   13c00:	movw	r0, #60374	; 0xebd6
   13c04:	movt	r0, #1
   13c08:	bl	11088 <fputs@plt>
   13c0c:	str	r0, [sp, #8]
   13c10:	bl	110a0 <abort@plt>
   13c14:	ldr	r0, [fp, #-4]
   13c18:	movw	r1, #47	; 0x2f
   13c1c:	bl	1104c <strrchr@plt>
   13c20:	str	r0, [fp, #-8]
   13c24:	ldr	r0, [fp, #-8]
   13c28:	movw	r1, #0
   13c2c:	cmp	r0, r1
   13c30:	beq	13c44 <__assert_fail@plt+0x2b8c>
   13c34:	ldr	r0, [fp, #-8]
   13c38:	add	r0, r0, #1
   13c3c:	str	r0, [sp, #4]
   13c40:	b	13c4c <__assert_fail@plt+0x2b94>
   13c44:	ldr	r0, [fp, #-4]
   13c48:	str	r0, [sp, #4]
   13c4c:	ldr	r0, [sp, #4]
   13c50:	str	r0, [sp, #12]
   13c54:	ldr	r0, [sp, #12]
   13c58:	ldr	r1, [fp, #-4]
   13c5c:	sub	r0, r0, r1
   13c60:	cmp	r0, #7
   13c64:	blt	13cd0 <__assert_fail@plt+0x2c18>
   13c68:	ldr	r0, [sp, #12]
   13c6c:	mvn	r1, #6
   13c70:	add	r0, r0, r1
   13c74:	movw	r1, #60430	; 0xec0e
   13c78:	movt	r1, #1
   13c7c:	movw	r2, #7
   13c80:	bl	11094 <strncmp@plt>
   13c84:	cmp	r0, #0
   13c88:	bne	13cd0 <__assert_fail@plt+0x2c18>
   13c8c:	ldr	r0, [sp, #12]
   13c90:	str	r0, [fp, #-4]
   13c94:	ldr	r0, [sp, #12]
   13c98:	movw	r1, #60438	; 0xec16
   13c9c:	movt	r1, #1
   13ca0:	movw	r2, #3
   13ca4:	bl	11094 <strncmp@plt>
   13ca8:	cmp	r0, #0
   13cac:	bne	13ccc <__assert_fail@plt+0x2c14>
   13cb0:	ldr	r0, [sp, #12]
   13cb4:	add	r0, r0, #3
   13cb8:	str	r0, [fp, #-4]
   13cbc:	ldr	r0, [fp, #-4]
   13cc0:	movw	r1, #312	; 0x138
   13cc4:	movt	r1, #3
   13cc8:	str	r0, [r1]
   13ccc:	b	13cd0 <__assert_fail@plt+0x2c18>
   13cd0:	ldr	r0, [fp, #-4]
   13cd4:	movw	r1, #33432	; 0x8298
   13cd8:	movt	r1, #3
   13cdc:	str	r0, [r1]
   13ce0:	ldr	r0, [fp, #-4]
   13ce4:	movw	r1, #316	; 0x13c
   13ce8:	movt	r1, #3
   13cec:	str	r0, [r1]
   13cf0:	mov	sp, fp
   13cf4:	pop	{fp, pc}
   13cf8:	push	{fp, lr}
   13cfc:	mov	fp, sp
   13d00:	sub	sp, sp, #24
   13d04:	str	r0, [fp, #-4]
   13d08:	bl	10fec <__errno_location@plt>
   13d0c:	ldr	r0, [r0]
   13d10:	str	r0, [fp, #-8]
   13d14:	ldr	r0, [fp, #-4]
   13d18:	movw	lr, #0
   13d1c:	cmp	r0, lr
   13d20:	beq	13d30 <__assert_fail@plt+0x2c78>
   13d24:	ldr	r0, [fp, #-4]
   13d28:	str	r0, [sp, #8]
   13d2c:	b	13d40 <__assert_fail@plt+0x2c88>
   13d30:	movw	r0, #33436	; 0x829c
   13d34:	movt	r0, #3
   13d38:	str	r0, [sp, #8]
   13d3c:	b	13d40 <__assert_fail@plt+0x2c88>
   13d40:	ldr	r0, [sp, #8]
   13d44:	movw	r1, #48	; 0x30
   13d48:	bl	19958 <__assert_fail@plt+0x88a0>
   13d4c:	str	r0, [sp, #12]
   13d50:	ldr	r0, [fp, #-8]
   13d54:	str	r0, [sp, #4]
   13d58:	bl	10fec <__errno_location@plt>
   13d5c:	ldr	r1, [sp, #4]
   13d60:	str	r1, [r0]
   13d64:	ldr	r0, [sp, #12]
   13d68:	mov	sp, fp
   13d6c:	pop	{fp, pc}
   13d70:	sub	sp, sp, #8
   13d74:	str	r0, [sp, #4]
   13d78:	ldr	r0, [sp, #4]
   13d7c:	movw	r1, #0
   13d80:	cmp	r0, r1
   13d84:	beq	13d94 <__assert_fail@plt+0x2cdc>
   13d88:	ldr	r0, [sp, #4]
   13d8c:	str	r0, [sp]
   13d90:	b	13da4 <__assert_fail@plt+0x2cec>
   13d94:	movw	r0, #33436	; 0x829c
   13d98:	movt	r0, #3
   13d9c:	str	r0, [sp]
   13da0:	b	13da4 <__assert_fail@plt+0x2cec>
   13da4:	ldr	r0, [sp]
   13da8:	ldr	r0, [r0]
   13dac:	add	sp, sp, #8
   13db0:	bx	lr
   13db4:	sub	sp, sp, #16
   13db8:	str	r0, [sp, #12]
   13dbc:	str	r1, [sp, #8]
   13dc0:	ldr	r0, [sp, #8]
   13dc4:	ldr	r1, [sp, #12]
   13dc8:	movw	r2, #0
   13dcc:	cmp	r1, r2
   13dd0:	str	r0, [sp, #4]
   13dd4:	beq	13de4 <__assert_fail@plt+0x2d2c>
   13dd8:	ldr	r0, [sp, #12]
   13ddc:	str	r0, [sp]
   13de0:	b	13df4 <__assert_fail@plt+0x2d3c>
   13de4:	movw	r0, #33436	; 0x829c
   13de8:	movt	r0, #3
   13dec:	str	r0, [sp]
   13df0:	b	13df4 <__assert_fail@plt+0x2d3c>
   13df4:	ldr	r0, [sp]
   13df8:	ldr	r1, [sp, #4]
   13dfc:	str	r1, [r0]
   13e00:	add	sp, sp, #16
   13e04:	bx	lr
   13e08:	sub	sp, sp, #32
   13e0c:	str	r0, [sp, #28]
   13e10:	strb	r1, [sp, #27]
   13e14:	str	r2, [sp, #20]
   13e18:	ldrb	r0, [sp, #27]
   13e1c:	strb	r0, [sp, #19]
   13e20:	ldr	r0, [sp, #28]
   13e24:	movw	r1, #0
   13e28:	cmp	r0, r1
   13e2c:	beq	13e3c <__assert_fail@plt+0x2d84>
   13e30:	ldr	r0, [sp, #28]
   13e34:	str	r0, [sp]
   13e38:	b	13e4c <__assert_fail@plt+0x2d94>
   13e3c:	movw	r0, #33436	; 0x829c
   13e40:	movt	r0, #3
   13e44:	str	r0, [sp]
   13e48:	b	13e4c <__assert_fail@plt+0x2d94>
   13e4c:	ldr	r0, [sp]
   13e50:	add	r0, r0, #8
   13e54:	ldrb	r1, [sp, #19]
   13e58:	lsr	r1, r1, #5
   13e5c:	add	r0, r0, r1, lsl #2
   13e60:	str	r0, [sp, #12]
   13e64:	ldrb	r0, [sp, #19]
   13e68:	and	r0, r0, #31
   13e6c:	str	r0, [sp, #8]
   13e70:	ldr	r0, [sp, #12]
   13e74:	ldr	r0, [r0]
   13e78:	ldr	r1, [sp, #8]
   13e7c:	lsr	r0, r0, r1
   13e80:	and	r0, r0, #1
   13e84:	str	r0, [sp, #4]
   13e88:	ldr	r0, [sp, #20]
   13e8c:	and	r0, r0, #1
   13e90:	ldr	r1, [sp, #4]
   13e94:	eor	r0, r0, r1
   13e98:	ldr	r1, [sp, #8]
   13e9c:	lsl	r0, r0, r1
   13ea0:	ldr	r1, [sp, #12]
   13ea4:	ldr	r2, [r1]
   13ea8:	eor	r0, r2, r0
   13eac:	str	r0, [r1]
   13eb0:	ldr	r0, [sp, #4]
   13eb4:	add	sp, sp, #32
   13eb8:	bx	lr
   13ebc:	sub	sp, sp, #12
   13ec0:	str	r0, [sp, #8]
   13ec4:	str	r1, [sp, #4]
   13ec8:	ldr	r0, [sp, #8]
   13ecc:	movw	r1, #0
   13ed0:	cmp	r0, r1
   13ed4:	bne	13ee4 <__assert_fail@plt+0x2e2c>
   13ed8:	movw	r0, #33436	; 0x829c
   13edc:	movt	r0, #3
   13ee0:	str	r0, [sp, #8]
   13ee4:	ldr	r0, [sp, #8]
   13ee8:	ldr	r0, [r0, #4]
   13eec:	str	r0, [sp]
   13ef0:	ldr	r0, [sp, #4]
   13ef4:	ldr	r1, [sp, #8]
   13ef8:	str	r0, [r1, #4]
   13efc:	ldr	r0, [sp]
   13f00:	add	sp, sp, #12
   13f04:	bx	lr
   13f08:	push	{fp, lr}
   13f0c:	mov	fp, sp
   13f10:	sub	sp, sp, #16
   13f14:	str	r0, [fp, #-4]
   13f18:	str	r1, [sp, #8]
   13f1c:	str	r2, [sp, #4]
   13f20:	ldr	r0, [fp, #-4]
   13f24:	movw	r1, #0
   13f28:	cmp	r0, r1
   13f2c:	bne	13f3c <__assert_fail@plt+0x2e84>
   13f30:	movw	r0, #33436	; 0x829c
   13f34:	movt	r0, #3
   13f38:	str	r0, [fp, #-4]
   13f3c:	ldr	r0, [fp, #-4]
   13f40:	movw	r1, #10
   13f44:	str	r1, [r0]
   13f48:	ldr	r0, [sp, #8]
   13f4c:	movw	r1, #0
   13f50:	cmp	r0, r1
   13f54:	beq	13f68 <__assert_fail@plt+0x2eb0>
   13f58:	ldr	r0, [sp, #4]
   13f5c:	movw	r1, #0
   13f60:	cmp	r0, r1
   13f64:	bne	13f6c <__assert_fail@plt+0x2eb4>
   13f68:	bl	110a0 <abort@plt>
   13f6c:	ldr	r0, [sp, #8]
   13f70:	ldr	r1, [fp, #-4]
   13f74:	str	r0, [r1, #40]	; 0x28
   13f78:	ldr	r0, [sp, #4]
   13f7c:	ldr	r1, [fp, #-4]
   13f80:	str	r0, [r1, #44]	; 0x2c
   13f84:	mov	sp, fp
   13f88:	pop	{fp, pc}
   13f8c:	push	{r4, r5, r6, sl, fp, lr}
   13f90:	add	fp, sp, #16
   13f94:	sub	sp, sp, #64	; 0x40
   13f98:	ldr	ip, [fp, #8]
   13f9c:	str	r0, [fp, #-20]	; 0xffffffec
   13fa0:	str	r1, [fp, #-24]	; 0xffffffe8
   13fa4:	str	r2, [fp, #-28]	; 0xffffffe4
   13fa8:	str	r3, [fp, #-32]	; 0xffffffe0
   13fac:	ldr	r0, [fp, #8]
   13fb0:	movw	r1, #0
   13fb4:	cmp	r0, r1
   13fb8:	str	ip, [sp, #32]
   13fbc:	beq	13fcc <__assert_fail@plt+0x2f14>
   13fc0:	ldr	r0, [fp, #8]
   13fc4:	str	r0, [sp, #28]
   13fc8:	b	13fdc <__assert_fail@plt+0x2f24>
   13fcc:	movw	r0, #33436	; 0x829c
   13fd0:	movt	r0, #3
   13fd4:	str	r0, [sp, #28]
   13fd8:	b	13fdc <__assert_fail@plt+0x2f24>
   13fdc:	ldr	r0, [sp, #28]
   13fe0:	str	r0, [fp, #-36]	; 0xffffffdc
   13fe4:	bl	10fec <__errno_location@plt>
   13fe8:	ldr	r0, [r0]
   13fec:	str	r0, [sp, #40]	; 0x28
   13ff0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ff4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13ff8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13ffc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14000:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14004:	ldr	lr, [lr]
   14008:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1400c:	ldr	ip, [ip, #4]
   14010:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14014:	add	r4, r4, #8
   14018:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1401c:	ldr	r5, [r5, #40]	; 0x28
   14020:	ldr	r6, [fp, #-36]	; 0xffffffdc
   14024:	ldr	r6, [r6, #44]	; 0x2c
   14028:	str	lr, [sp]
   1402c:	str	ip, [sp, #4]
   14030:	str	r4, [sp, #8]
   14034:	str	r5, [sp, #12]
   14038:	str	r6, [sp, #16]
   1403c:	bl	14064 <__assert_fail@plt+0x2fac>
   14040:	str	r0, [sp, #36]	; 0x24
   14044:	ldr	r0, [sp, #40]	; 0x28
   14048:	str	r0, [sp, #24]
   1404c:	bl	10fec <__errno_location@plt>
   14050:	ldr	r1, [sp, #24]
   14054:	str	r1, [r0]
   14058:	ldr	r0, [sp, #36]	; 0x24
   1405c:	sub	sp, fp, #16
   14060:	pop	{r4, r5, r6, sl, fp, pc}
   14064:	push	{r4, r5, r6, sl, fp, lr}
   14068:	add	fp, sp, #16
   1406c:	sub	sp, sp, #168	; 0xa8
   14070:	ldr	ip, [fp, #24]
   14074:	ldr	lr, [fp, #20]
   14078:	ldr	r4, [fp, #16]
   1407c:	ldr	r5, [fp, #12]
   14080:	ldr	r6, [fp, #8]
   14084:	str	r0, [fp, #-24]	; 0xffffffe8
   14088:	str	r1, [fp, #-28]	; 0xffffffe4
   1408c:	str	r2, [fp, #-32]	; 0xffffffe0
   14090:	str	r3, [fp, #-36]	; 0xffffffdc
   14094:	movw	r0, #0
   14098:	str	r0, [fp, #-44]	; 0xffffffd4
   1409c:	str	r0, [fp, #-48]	; 0xffffffd0
   140a0:	str	r0, [fp, #-52]	; 0xffffffcc
   140a4:	str	r0, [fp, #-56]	; 0xffffffc8
   140a8:	movw	r0, #0
   140ac:	strb	r0, [fp, #-57]	; 0xffffffc7
   140b0:	str	r6, [sp, #80]	; 0x50
   140b4:	str	lr, [sp, #76]	; 0x4c
   140b8:	str	r4, [sp, #72]	; 0x48
   140bc:	str	r5, [sp, #68]	; 0x44
   140c0:	str	ip, [sp, #64]	; 0x40
   140c4:	bl	10f2c <__ctype_get_mb_cur_max@plt>
   140c8:	cmp	r0, #1
   140cc:	movw	r0, #0
   140d0:	moveq	r0, #1
   140d4:	and	r0, r0, #1
   140d8:	strb	r0, [fp, #-58]	; 0xffffffc6
   140dc:	ldr	r0, [fp, #12]
   140e0:	and	r0, r0, #2
   140e4:	cmp	r0, #0
   140e8:	movw	r0, #0
   140ec:	movne	r0, #1
   140f0:	and	r0, r0, #1
   140f4:	strb	r0, [fp, #-59]	; 0xffffffc5
   140f8:	movw	r0, #0
   140fc:	strb	r0, [fp, #-60]	; 0xffffffc4
   14100:	strb	r0, [fp, #-61]	; 0xffffffc3
   14104:	movw	r0, #1
   14108:	strb	r0, [fp, #-62]	; 0xffffffc2
   1410c:	ldr	r0, [fp, #8]
   14110:	cmp	r0, #10
   14114:	str	r0, [sp, #60]	; 0x3c
   14118:	bhi	14340 <__assert_fail@plt+0x3288>
   1411c:	add	r0, pc, #8
   14120:	ldr	r1, [sp, #60]	; 0x3c
   14124:	ldr	r0, [r0, r1, lsl #2]
   14128:	mov	pc, r0
   1412c:	andeq	r4, r1, r4, lsr r3
   14130:			; <UNDEFINED> instruction: 0x000142b0
   14134:	ldrdeq	r4, [r1], -r0
   14138:	andeq	r4, r1, r8, lsr #5
   1413c:			; <UNDEFINED> instruction: 0x000142b8
   14140:	andeq	r4, r1, r8, ror #2
   14144:	andeq	r4, r1, r8, asr r1
   14148:	andeq	r4, r1, ip, asr #3
   1414c:	andeq	r4, r1, r0, ror #3
   14150:	andeq	r4, r1, r0, ror #3
   14154:	andeq	r4, r1, r0, ror #3
   14158:	movw	r0, #5
   1415c:	str	r0, [fp, #8]
   14160:	movw	r0, #1
   14164:	strb	r0, [fp, #-59]	; 0xffffffc5
   14168:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1416c:	tst	r0, #1
   14170:	bne	141ac <__assert_fail@plt+0x30f4>
   14174:	b	14178 <__assert_fail@plt+0x30c0>
   14178:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1417c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14180:	cmp	r0, r1
   14184:	bcs	1419c <__assert_fail@plt+0x30e4>
   14188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1418c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14190:	add	r0, r0, r1
   14194:	movw	r1, #34	; 0x22
   14198:	strb	r1, [r0]
   1419c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141a0:	add	r0, r0, #1
   141a4:	str	r0, [fp, #-44]	; 0xffffffd4
   141a8:	b	141ac <__assert_fail@plt+0x30f4>
   141ac:	movw	r0, #1
   141b0:	strb	r0, [fp, #-57]	; 0xffffffc7
   141b4:	movw	r0, #60116	; 0xead4
   141b8:	movt	r0, #1
   141bc:	str	r0, [fp, #-52]	; 0xffffffcc
   141c0:	movw	r0, #1
   141c4:	str	r0, [fp, #-56]	; 0xffffffc8
   141c8:	b	14344 <__assert_fail@plt+0x328c>
   141cc:	movw	r0, #1
   141d0:	strb	r0, [fp, #-57]	; 0xffffffc7
   141d4:	movw	r0, #0
   141d8:	strb	r0, [fp, #-59]	; 0xffffffc5
   141dc:	b	14344 <__assert_fail@plt+0x328c>
   141e0:	ldr	r0, [fp, #8]
   141e4:	cmp	r0, #10
   141e8:	beq	14214 <__assert_fail@plt+0x315c>
   141ec:	ldr	r1, [fp, #8]
   141f0:	movw	r0, #60518	; 0xec66
   141f4:	movt	r0, #1
   141f8:	bl	16254 <__assert_fail@plt+0x519c>
   141fc:	str	r0, [fp, #20]
   14200:	ldr	r1, [fp, #8]
   14204:	movw	r0, #60520	; 0xec68
   14208:	movt	r0, #1
   1420c:	bl	16254 <__assert_fail@plt+0x519c>
   14210:	str	r0, [fp, #24]
   14214:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14218:	tst	r0, #1
   1421c:	bne	14288 <__assert_fail@plt+0x31d0>
   14220:	ldr	r0, [fp, #20]
   14224:	str	r0, [fp, #-52]	; 0xffffffcc
   14228:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1422c:	ldrsb	r0, [r0]
   14230:	cmp	r0, #0
   14234:	beq	14284 <__assert_fail@plt+0x31cc>
   14238:	b	1423c <__assert_fail@plt+0x3184>
   1423c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14240:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14244:	cmp	r0, r1
   14248:	bcs	14264 <__assert_fail@plt+0x31ac>
   1424c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14250:	ldrb	r0, [r0]
   14254:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14258:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1425c:	add	r1, r1, r2
   14260:	strb	r0, [r1]
   14264:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14268:	add	r0, r0, #1
   1426c:	str	r0, [fp, #-44]	; 0xffffffd4
   14270:	b	14274 <__assert_fail@plt+0x31bc>
   14274:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14278:	add	r0, r0, #1
   1427c:	str	r0, [fp, #-52]	; 0xffffffcc
   14280:	b	14228 <__assert_fail@plt+0x3170>
   14284:	b	14288 <__assert_fail@plt+0x31d0>
   14288:	movw	r0, #1
   1428c:	strb	r0, [fp, #-57]	; 0xffffffc7
   14290:	ldr	r0, [fp, #24]
   14294:	str	r0, [fp, #-52]	; 0xffffffcc
   14298:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1429c:	bl	10fc8 <strlen@plt>
   142a0:	str	r0, [fp, #-56]	; 0xffffffc8
   142a4:	b	14344 <__assert_fail@plt+0x328c>
   142a8:	movw	r0, #1
   142ac:	strb	r0, [fp, #-57]	; 0xffffffc7
   142b0:	movw	r0, #1
   142b4:	strb	r0, [fp, #-59]	; 0xffffffc5
   142b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   142bc:	tst	r0, #1
   142c0:	bne	142cc <__assert_fail@plt+0x3214>
   142c4:	movw	r0, #1
   142c8:	strb	r0, [fp, #-57]	; 0xffffffc7
   142cc:	b	142d0 <__assert_fail@plt+0x3218>
   142d0:	movw	r0, #2
   142d4:	str	r0, [fp, #8]
   142d8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   142dc:	tst	r0, #1
   142e0:	bne	1431c <__assert_fail@plt+0x3264>
   142e4:	b	142e8 <__assert_fail@plt+0x3230>
   142e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142f0:	cmp	r0, r1
   142f4:	bcs	1430c <__assert_fail@plt+0x3254>
   142f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14300:	add	r0, r0, r1
   14304:	movw	r1, #39	; 0x27
   14308:	strb	r1, [r0]
   1430c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14310:	add	r0, r0, #1
   14314:	str	r0, [fp, #-44]	; 0xffffffd4
   14318:	b	1431c <__assert_fail@plt+0x3264>
   1431c:	movw	r0, #60520	; 0xec68
   14320:	movt	r0, #1
   14324:	str	r0, [fp, #-52]	; 0xffffffcc
   14328:	movw	r0, #1
   1432c:	str	r0, [fp, #-56]	; 0xffffffc8
   14330:	b	14344 <__assert_fail@plt+0x328c>
   14334:	movw	r0, #0
   14338:	strb	r0, [fp, #-59]	; 0xffffffc5
   1433c:	b	14344 <__assert_fail@plt+0x328c>
   14340:	bl	110a0 <abort@plt>
   14344:	movw	r0, #0
   14348:	str	r0, [fp, #-40]	; 0xffffffd8
   1434c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14350:	cmn	r0, #1
   14354:	bne	14380 <__assert_fail@plt+0x32c8>
   14358:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1435c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14360:	add	r0, r0, r1
   14364:	ldrb	r0, [r0]
   14368:	cmp	r0, #0
   1436c:	movw	r0, #0
   14370:	moveq	r0, #1
   14374:	and	r0, r0, #1
   14378:	str	r0, [sp, #56]	; 0x38
   1437c:	b	1439c <__assert_fail@plt+0x32e4>
   14380:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14384:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14388:	cmp	r0, r1
   1438c:	movw	r0, #0
   14390:	moveq	r0, #1
   14394:	and	r0, r0, #1
   14398:	str	r0, [sp, #56]	; 0x38
   1439c:	ldr	r0, [sp, #56]	; 0x38
   143a0:	cmp	r0, #0
   143a4:	movw	r0, #0
   143a8:	movne	r0, #1
   143ac:	mvn	r1, #0
   143b0:	eor	r0, r0, r1
   143b4:	tst	r0, #1
   143b8:	beq	155a8 <__assert_fail@plt+0x44f0>
   143bc:	movw	r0, #0
   143c0:	strb	r0, [fp, #-65]	; 0xffffffbf
   143c4:	strb	r0, [fp, #-66]	; 0xffffffbe
   143c8:	strb	r0, [fp, #-67]	; 0xffffffbd
   143cc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   143d0:	tst	r0, #1
   143d4:	beq	14480 <__assert_fail@plt+0x33c8>
   143d8:	ldr	r0, [fp, #8]
   143dc:	cmp	r0, #2
   143e0:	beq	14480 <__assert_fail@plt+0x33c8>
   143e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   143e8:	cmp	r0, #0
   143ec:	beq	14480 <__assert_fail@plt+0x33c8>
   143f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   143f4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   143f8:	add	r0, r0, r1
   143fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14400:	cmn	r1, #1
   14404:	str	r0, [sp, #52]	; 0x34
   14408:	bne	14430 <__assert_fail@plt+0x3378>
   1440c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14410:	movw	r1, #1
   14414:	cmp	r1, r0
   14418:	bcs	14430 <__assert_fail@plt+0x3378>
   1441c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14420:	bl	10fc8 <strlen@plt>
   14424:	str	r0, [fp, #-36]	; 0xffffffdc
   14428:	str	r0, [sp, #48]	; 0x30
   1442c:	b	14438 <__assert_fail@plt+0x3380>
   14430:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14434:	str	r0, [sp, #48]	; 0x30
   14438:	ldr	r0, [sp, #48]	; 0x30
   1443c:	ldr	r1, [sp, #52]	; 0x34
   14440:	cmp	r1, r0
   14444:	bhi	14480 <__assert_fail@plt+0x33c8>
   14448:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1444c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14450:	add	r0, r0, r1
   14454:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14458:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1445c:	bl	10ee4 <memcmp@plt>
   14460:	cmp	r0, #0
   14464:	bne	14480 <__assert_fail@plt+0x33c8>
   14468:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1446c:	tst	r0, #1
   14470:	beq	14478 <__assert_fail@plt+0x33c0>
   14474:	b	15728 <__assert_fail@plt+0x4670>
   14478:	movw	r0, #1
   1447c:	strb	r0, [fp, #-65]	; 0xffffffbf
   14480:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14484:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14488:	ldrb	r0, [r0, r1]
   1448c:	strb	r0, [fp, #-63]	; 0xffffffc1
   14490:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14494:	mov	r1, r0
   14498:	cmp	r0, #126	; 0x7e
   1449c:	str	r1, [sp, #44]	; 0x2c
   144a0:	bhi	14d10 <__assert_fail@plt+0x3c58>
   144a4:	add	r0, pc, #8
   144a8:	ldr	r1, [sp, #44]	; 0x2c
   144ac:	ldr	r0, [r0, r1, lsl #2]
   144b0:	mov	pc, r0
   144b4:			; <UNDEFINED> instruction: 0x000146b0
   144b8:	andeq	r4, r1, r0, lsl sp
   144bc:	andeq	r4, r1, r0, lsl sp
   144c0:	andeq	r4, r1, r0, lsl sp
   144c4:	andeq	r4, r1, r0, lsl sp
   144c8:	andeq	r4, r1, r0, lsl sp
   144cc:	andeq	r4, r1, r0, lsl sp
   144d0:			; <UNDEFINED> instruction: 0x00014ab8
   144d4:	andeq	r4, r1, r4, asr #21
   144d8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   144dc:	ldrdeq	r4, [r1], -ip
   144e0:	andeq	r4, r1, r0, lsl #22
   144e4:	ldrdeq	r4, [r1], -r0
   144e8:	andeq	r4, r1, r8, ror #21
   144ec:	andeq	r4, r1, r0, lsl sp
   144f0:	andeq	r4, r1, r0, lsl sp
   144f4:	andeq	r4, r1, r0, lsl sp
   144f8:	andeq	r4, r1, r0, lsl sp
   144fc:	andeq	r4, r1, r0, lsl sp
   14500:	andeq	r4, r1, r0, lsl sp
   14504:	andeq	r4, r1, r0, lsl sp
   14508:	andeq	r4, r1, r0, lsl sp
   1450c:	andeq	r4, r1, r0, lsl sp
   14510:	andeq	r4, r1, r0, lsl sp
   14514:	andeq	r4, r1, r0, lsl sp
   14518:	andeq	r4, r1, r0, lsl sp
   1451c:	andeq	r4, r1, r0, lsl sp
   14520:	andeq	r4, r1, r0, lsl sp
   14524:	andeq	r4, r1, r0, lsl sp
   14528:	andeq	r4, r1, r0, lsl sp
   1452c:	andeq	r4, r1, r0, lsl sp
   14530:	andeq	r4, r1, r0, lsl sp
   14534:	andeq	r4, r1, r4, ror #23
   14538:	andeq	r4, r1, ip, ror #23
   1453c:	andeq	r4, r1, ip, ror #23
   14540:	ldrdeq	r4, [r1], -r0
   14544:	andeq	r4, r1, ip, ror #23
   14548:	andeq	r4, r1, r4, lsl #26
   1454c:	andeq	r4, r1, ip, ror #23
   14550:	andeq	r4, r1, ip, lsl #24
   14554:	andeq	r4, r1, ip, ror #23
   14558:	andeq	r4, r1, ip, ror #23
   1455c:	andeq	r4, r1, ip, ror #23
   14560:	andeq	r4, r1, r4, lsl #26
   14564:	andeq	r4, r1, r4, lsl #26
   14568:	andeq	r4, r1, r4, lsl #26
   1456c:	andeq	r4, r1, r4, lsl #26
   14570:	andeq	r4, r1, r4, lsl #26
   14574:	andeq	r4, r1, r4, lsl #26
   14578:	andeq	r4, r1, r4, lsl #26
   1457c:	andeq	r4, r1, r4, lsl #26
   14580:	andeq	r4, r1, r4, lsl #26
   14584:	andeq	r4, r1, r4, lsl #26
   14588:	andeq	r4, r1, r4, lsl #26
   1458c:	andeq	r4, r1, r4, lsl #26
   14590:	andeq	r4, r1, r4, lsl #26
   14594:	andeq	r4, r1, r4, lsl #26
   14598:	andeq	r4, r1, r4, lsl #26
   1459c:	andeq	r4, r1, r4, lsl #26
   145a0:	andeq	r4, r1, ip, ror #23
   145a4:	andeq	r4, r1, ip, ror #23
   145a8:	andeq	r4, r1, ip, ror #23
   145ac:	andeq	r4, r1, ip, ror #23
   145b0:			; <UNDEFINED> instruction: 0x000148bc
   145b4:	andeq	r4, r1, r0, lsl sp
   145b8:	andeq	r4, r1, r4, lsl #26
   145bc:	andeq	r4, r1, r4, lsl #26
   145c0:	andeq	r4, r1, r4, lsl #26
   145c4:	andeq	r4, r1, r4, lsl #26
   145c8:	andeq	r4, r1, r4, lsl #26
   145cc:	andeq	r4, r1, r4, lsl #26
   145d0:	andeq	r4, r1, r4, lsl #26
   145d4:	andeq	r4, r1, r4, lsl #26
   145d8:	andeq	r4, r1, r4, lsl #26
   145dc:	andeq	r4, r1, r4, lsl #26
   145e0:	andeq	r4, r1, r4, lsl #26
   145e4:	andeq	r4, r1, r4, lsl #26
   145e8:	andeq	r4, r1, r4, lsl #26
   145ec:	andeq	r4, r1, r4, lsl #26
   145f0:	andeq	r4, r1, r4, lsl #26
   145f4:	andeq	r4, r1, r4, lsl #26
   145f8:	andeq	r4, r1, r4, lsl #26
   145fc:	andeq	r4, r1, r4, lsl #26
   14600:	andeq	r4, r1, r4, lsl #26
   14604:	andeq	r4, r1, r4, lsl #26
   14608:	andeq	r4, r1, r4, lsl #26
   1460c:	andeq	r4, r1, r4, lsl #26
   14610:	andeq	r4, r1, r4, lsl #26
   14614:	andeq	r4, r1, r4, lsl #26
   14618:	andeq	r4, r1, r4, lsl #26
   1461c:	andeq	r4, r1, r4, lsl #26
   14620:	andeq	r4, r1, ip, ror #23
   14624:	andeq	r4, r1, ip, lsl #22
   14628:	andeq	r4, r1, r4, lsl #26
   1462c:	andeq	r4, r1, ip, ror #23
   14630:	andeq	r4, r1, r4, lsl #26
   14634:	andeq	r4, r1, ip, ror #23
   14638:	andeq	r4, r1, r4, lsl #26
   1463c:	andeq	r4, r1, r4, lsl #26
   14640:	andeq	r4, r1, r4, lsl #26
   14644:	andeq	r4, r1, r4, lsl #26
   14648:	andeq	r4, r1, r4, lsl #26
   1464c:	andeq	r4, r1, r4, lsl #26
   14650:	andeq	r4, r1, r4, lsl #26
   14654:	andeq	r4, r1, r4, lsl #26
   14658:	andeq	r4, r1, r4, lsl #26
   1465c:	andeq	r4, r1, r4, lsl #26
   14660:	andeq	r4, r1, r4, lsl #26
   14664:	andeq	r4, r1, r4, lsl #26
   14668:	andeq	r4, r1, r4, lsl #26
   1466c:	andeq	r4, r1, r4, lsl #26
   14670:	andeq	r4, r1, r4, lsl #26
   14674:	andeq	r4, r1, r4, lsl #26
   14678:	andeq	r4, r1, r4, lsl #26
   1467c:	andeq	r4, r1, r4, lsl #26
   14680:	andeq	r4, r1, r4, lsl #26
   14684:	andeq	r4, r1, r4, lsl #26
   14688:	andeq	r4, r1, r4, lsl #26
   1468c:	andeq	r4, r1, r4, lsl #26
   14690:	andeq	r4, r1, r4, lsl #26
   14694:	andeq	r4, r1, r4, lsl #26
   14698:	andeq	r4, r1, r4, lsl #26
   1469c:	andeq	r4, r1, r4, lsl #26
   146a0:	muleq	r1, ip, fp
   146a4:	andeq	r4, r1, ip, ror #23
   146a8:	muleq	r1, ip, fp
   146ac:	ldrdeq	r4, [r1], -r0
   146b0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   146b4:	tst	r0, #1
   146b8:	beq	148a0 <__assert_fail@plt+0x37e8>
   146bc:	b	146c0 <__assert_fail@plt+0x3608>
   146c0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   146c4:	tst	r0, #1
   146c8:	beq	146d0 <__assert_fail@plt+0x3618>
   146cc:	b	15728 <__assert_fail@plt+0x4670>
   146d0:	movw	r0, #1
   146d4:	strb	r0, [fp, #-66]	; 0xffffffbe
   146d8:	ldr	r0, [fp, #8]
   146dc:	cmp	r0, #2
   146e0:	bne	14794 <__assert_fail@plt+0x36dc>
   146e4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   146e8:	tst	r0, #1
   146ec:	bne	14794 <__assert_fail@plt+0x36dc>
   146f0:	b	146f4 <__assert_fail@plt+0x363c>
   146f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146fc:	cmp	r0, r1
   14700:	bcs	14718 <__assert_fail@plt+0x3660>
   14704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14708:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1470c:	add	r0, r0, r1
   14710:	movw	r1, #39	; 0x27
   14714:	strb	r1, [r0]
   14718:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1471c:	add	r0, r0, #1
   14720:	str	r0, [fp, #-44]	; 0xffffffd4
   14724:	b	14728 <__assert_fail@plt+0x3670>
   14728:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1472c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14730:	cmp	r0, r1
   14734:	bcs	1474c <__assert_fail@plt+0x3694>
   14738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1473c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14740:	add	r0, r0, r1
   14744:	movw	r1, #36	; 0x24
   14748:	strb	r1, [r0]
   1474c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14750:	add	r0, r0, #1
   14754:	str	r0, [fp, #-44]	; 0xffffffd4
   14758:	b	1475c <__assert_fail@plt+0x36a4>
   1475c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14760:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14764:	cmp	r0, r1
   14768:	bcs	14780 <__assert_fail@plt+0x36c8>
   1476c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14770:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14774:	add	r0, r0, r1
   14778:	movw	r1, #39	; 0x27
   1477c:	strb	r1, [r0]
   14780:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14784:	add	r0, r0, #1
   14788:	str	r0, [fp, #-44]	; 0xffffffd4
   1478c:	movw	r0, #1
   14790:	strb	r0, [fp, #-60]	; 0xffffffc4
   14794:	b	14798 <__assert_fail@plt+0x36e0>
   14798:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1479c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   147a0:	cmp	r0, r1
   147a4:	bcs	147bc <__assert_fail@plt+0x3704>
   147a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   147b0:	add	r0, r0, r1
   147b4:	movw	r1, #92	; 0x5c
   147b8:	strb	r1, [r0]
   147bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147c0:	add	r0, r0, #1
   147c4:	str	r0, [fp, #-44]	; 0xffffffd4
   147c8:	b	147cc <__assert_fail@plt+0x3714>
   147cc:	ldr	r0, [fp, #8]
   147d0:	cmp	r0, #2
   147d4:	beq	14894 <__assert_fail@plt+0x37dc>
   147d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   147dc:	add	r0, r0, #1
   147e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   147e4:	cmp	r0, r1
   147e8:	bcs	14894 <__assert_fail@plt+0x37dc>
   147ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   147f4:	add	r1, r1, #1
   147f8:	add	r0, r0, r1
   147fc:	ldrb	r0, [r0]
   14800:	movw	r1, #48	; 0x30
   14804:	cmp	r1, r0
   14808:	bgt	14894 <__assert_fail@plt+0x37dc>
   1480c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14810:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14814:	add	r1, r1, #1
   14818:	add	r0, r0, r1
   1481c:	ldrb	r0, [r0]
   14820:	cmp	r0, #57	; 0x39
   14824:	bgt	14894 <__assert_fail@plt+0x37dc>
   14828:	b	1482c <__assert_fail@plt+0x3774>
   1482c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14830:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14834:	cmp	r0, r1
   14838:	bcs	14850 <__assert_fail@plt+0x3798>
   1483c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14840:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14844:	add	r0, r0, r1
   14848:	movw	r1, #48	; 0x30
   1484c:	strb	r1, [r0]
   14850:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14854:	add	r0, r0, #1
   14858:	str	r0, [fp, #-44]	; 0xffffffd4
   1485c:	b	14860 <__assert_fail@plt+0x37a8>
   14860:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14864:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14868:	cmp	r0, r1
   1486c:	bcs	14884 <__assert_fail@plt+0x37cc>
   14870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14874:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14878:	add	r0, r0, r1
   1487c:	movw	r1, #48	; 0x30
   14880:	strb	r1, [r0]
   14884:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14888:	add	r0, r0, #1
   1488c:	str	r0, [fp, #-44]	; 0xffffffd4
   14890:	b	14894 <__assert_fail@plt+0x37dc>
   14894:	movw	r0, #48	; 0x30
   14898:	strb	r0, [fp, #-63]	; 0xffffffc1
   1489c:	b	148b8 <__assert_fail@plt+0x3800>
   148a0:	ldr	r0, [fp, #12]
   148a4:	and	r0, r0, #1
   148a8:	cmp	r0, #0
   148ac:	beq	148b4 <__assert_fail@plt+0x37fc>
   148b0:	b	15598 <__assert_fail@plt+0x44e0>
   148b4:	b	148b8 <__assert_fail@plt+0x3800>
   148b8:	b	15334 <__assert_fail@plt+0x427c>
   148bc:	ldr	r0, [fp, #8]
   148c0:	cmp	r0, #2
   148c4:	str	r0, [sp, #40]	; 0x28
   148c8:	beq	148e0 <__assert_fail@plt+0x3828>
   148cc:	b	148d0 <__assert_fail@plt+0x3818>
   148d0:	ldr	r0, [sp, #40]	; 0x28
   148d4:	cmp	r0, #5
   148d8:	beq	148f4 <__assert_fail@plt+0x383c>
   148dc:	b	14ab0 <__assert_fail@plt+0x39f8>
   148e0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   148e4:	tst	r0, #1
   148e8:	beq	148f0 <__assert_fail@plt+0x3838>
   148ec:	b	15728 <__assert_fail@plt+0x4670>
   148f0:	b	14ab4 <__assert_fail@plt+0x39fc>
   148f4:	ldr	r0, [fp, #12]
   148f8:	and	r0, r0, #4
   148fc:	cmp	r0, #0
   14900:	beq	14aac <__assert_fail@plt+0x39f4>
   14904:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14908:	add	r0, r0, #2
   1490c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14910:	cmp	r0, r1
   14914:	bcs	14aac <__assert_fail@plt+0x39f4>
   14918:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1491c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14920:	add	r1, r1, #1
   14924:	add	r0, r0, r1
   14928:	ldrb	r0, [r0]
   1492c:	cmp	r0, #63	; 0x3f
   14930:	bne	14aac <__assert_fail@plt+0x39f4>
   14934:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14938:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1493c:	add	r0, r0, r1
   14940:	ldrb	r0, [r0, #2]
   14944:	mov	r1, r0
   14948:	cmp	r0, #33	; 0x21
   1494c:	str	r1, [sp, #36]	; 0x24
   14950:	beq	149a0 <__assert_fail@plt+0x38e8>
   14954:	b	14958 <__assert_fail@plt+0x38a0>
   14958:	ldr	r0, [sp, #36]	; 0x24
   1495c:	sub	r1, r0, #39	; 0x27
   14960:	cmp	r1, #3
   14964:	bcc	149a0 <__assert_fail@plt+0x38e8>
   14968:	b	1496c <__assert_fail@plt+0x38b4>
   1496c:	ldr	r0, [sp, #36]	; 0x24
   14970:	cmp	r0, #45	; 0x2d
   14974:	beq	149a0 <__assert_fail@plt+0x38e8>
   14978:	b	1497c <__assert_fail@plt+0x38c4>
   1497c:	ldr	r0, [sp, #36]	; 0x24
   14980:	cmp	r0, #47	; 0x2f
   14984:	beq	149a0 <__assert_fail@plt+0x38e8>
   14988:	b	1498c <__assert_fail@plt+0x38d4>
   1498c:	ldr	r0, [sp, #36]	; 0x24
   14990:	sub	r1, r0, #60	; 0x3c
   14994:	cmp	r1, #2
   14998:	bhi	14aa4 <__assert_fail@plt+0x39ec>
   1499c:	b	149a0 <__assert_fail@plt+0x38e8>
   149a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   149a4:	tst	r0, #1
   149a8:	beq	149b0 <__assert_fail@plt+0x38f8>
   149ac:	b	15728 <__assert_fail@plt+0x4670>
   149b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   149b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   149b8:	add	r1, r1, #2
   149bc:	add	r0, r0, r1
   149c0:	ldrb	r0, [r0]
   149c4:	strb	r0, [fp, #-63]	; 0xffffffc1
   149c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   149cc:	add	r0, r0, #2
   149d0:	str	r0, [fp, #-40]	; 0xffffffd8
   149d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   149dc:	cmp	r0, r1
   149e0:	bcs	149f8 <__assert_fail@plt+0x3940>
   149e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149ec:	add	r0, r0, r1
   149f0:	movw	r1, #63	; 0x3f
   149f4:	strb	r1, [r0]
   149f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149fc:	add	r0, r0, #1
   14a00:	str	r0, [fp, #-44]	; 0xffffffd4
   14a04:	b	14a08 <__assert_fail@plt+0x3950>
   14a08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a10:	cmp	r0, r1
   14a14:	bcs	14a2c <__assert_fail@plt+0x3974>
   14a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a20:	add	r0, r0, r1
   14a24:	movw	r1, #34	; 0x22
   14a28:	strb	r1, [r0]
   14a2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a30:	add	r0, r0, #1
   14a34:	str	r0, [fp, #-44]	; 0xffffffd4
   14a38:	b	14a3c <__assert_fail@plt+0x3984>
   14a3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a44:	cmp	r0, r1
   14a48:	bcs	14a60 <__assert_fail@plt+0x39a8>
   14a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a54:	add	r0, r0, r1
   14a58:	movw	r1, #34	; 0x22
   14a5c:	strb	r1, [r0]
   14a60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a64:	add	r0, r0, #1
   14a68:	str	r0, [fp, #-44]	; 0xffffffd4
   14a6c:	b	14a70 <__assert_fail@plt+0x39b8>
   14a70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a78:	cmp	r0, r1
   14a7c:	bcs	14a94 <__assert_fail@plt+0x39dc>
   14a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a88:	add	r0, r0, r1
   14a8c:	movw	r1, #63	; 0x3f
   14a90:	strb	r1, [r0]
   14a94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a98:	add	r0, r0, #1
   14a9c:	str	r0, [fp, #-44]	; 0xffffffd4
   14aa0:	b	14aa8 <__assert_fail@plt+0x39f0>
   14aa4:	b	14aa8 <__assert_fail@plt+0x39f0>
   14aa8:	b	14aac <__assert_fail@plt+0x39f4>
   14aac:	b	14ab4 <__assert_fail@plt+0x39fc>
   14ab0:	b	14ab4 <__assert_fail@plt+0x39fc>
   14ab4:	b	15334 <__assert_fail@plt+0x427c>
   14ab8:	movw	r0, #97	; 0x61
   14abc:	strb	r0, [fp, #-64]	; 0xffffffc0
   14ac0:	b	14b80 <__assert_fail@plt+0x3ac8>
   14ac4:	movw	r0, #98	; 0x62
   14ac8:	strb	r0, [fp, #-64]	; 0xffffffc0
   14acc:	b	14b80 <__assert_fail@plt+0x3ac8>
   14ad0:	movw	r0, #102	; 0x66
   14ad4:	strb	r0, [fp, #-64]	; 0xffffffc0
   14ad8:	b	14b80 <__assert_fail@plt+0x3ac8>
   14adc:	movw	r0, #110	; 0x6e
   14ae0:	strb	r0, [fp, #-64]	; 0xffffffc0
   14ae4:	b	14b60 <__assert_fail@plt+0x3aa8>
   14ae8:	movw	r0, #114	; 0x72
   14aec:	strb	r0, [fp, #-64]	; 0xffffffc0
   14af0:	b	14b60 <__assert_fail@plt+0x3aa8>
   14af4:	movw	r0, #116	; 0x74
   14af8:	strb	r0, [fp, #-64]	; 0xffffffc0
   14afc:	b	14b60 <__assert_fail@plt+0x3aa8>
   14b00:	movw	r0, #118	; 0x76
   14b04:	strb	r0, [fp, #-64]	; 0xffffffc0
   14b08:	b	14b80 <__assert_fail@plt+0x3ac8>
   14b0c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14b10:	strb	r0, [fp, #-64]	; 0xffffffc0
   14b14:	ldr	r0, [fp, #8]
   14b18:	cmp	r0, #2
   14b1c:	bne	14b34 <__assert_fail@plt+0x3a7c>
   14b20:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14b24:	tst	r0, #1
   14b28:	beq	14b30 <__assert_fail@plt+0x3a78>
   14b2c:	b	15728 <__assert_fail@plt+0x4670>
   14b30:	b	154bc <__assert_fail@plt+0x4404>
   14b34:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14b38:	tst	r0, #1
   14b3c:	beq	14b5c <__assert_fail@plt+0x3aa4>
   14b40:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14b44:	tst	r0, #1
   14b48:	beq	14b5c <__assert_fail@plt+0x3aa4>
   14b4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14b50:	cmp	r0, #0
   14b54:	beq	14b5c <__assert_fail@plt+0x3aa4>
   14b58:	b	154bc <__assert_fail@plt+0x4404>
   14b5c:	b	14b60 <__assert_fail@plt+0x3aa8>
   14b60:	ldr	r0, [fp, #8]
   14b64:	cmp	r0, #2
   14b68:	bne	14b7c <__assert_fail@plt+0x3ac4>
   14b6c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14b70:	tst	r0, #1
   14b74:	beq	14b7c <__assert_fail@plt+0x3ac4>
   14b78:	b	15728 <__assert_fail@plt+0x4670>
   14b7c:	b	14b80 <__assert_fail@plt+0x3ac8>
   14b80:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14b84:	tst	r0, #1
   14b88:	beq	14b98 <__assert_fail@plt+0x3ae0>
   14b8c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   14b90:	strb	r0, [fp, #-63]	; 0xffffffc1
   14b94:	b	153a8 <__assert_fail@plt+0x42f0>
   14b98:	b	15334 <__assert_fail@plt+0x427c>
   14b9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14ba0:	cmn	r0, #1
   14ba4:	bne	14bbc <__assert_fail@plt+0x3b04>
   14ba8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14bac:	ldrb	r0, [r0, #1]
   14bb0:	cmp	r0, #0
   14bb4:	beq	14bcc <__assert_fail@plt+0x3b14>
   14bb8:	b	14bc8 <__assert_fail@plt+0x3b10>
   14bbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14bc0:	cmp	r0, #1
   14bc4:	beq	14bcc <__assert_fail@plt+0x3b14>
   14bc8:	b	15334 <__assert_fail@plt+0x427c>
   14bcc:	b	14bd0 <__assert_fail@plt+0x3b18>
   14bd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14bd4:	cmp	r0, #0
   14bd8:	beq	14be0 <__assert_fail@plt+0x3b28>
   14bdc:	b	15334 <__assert_fail@plt+0x427c>
   14be0:	b	14be4 <__assert_fail@plt+0x3b2c>
   14be4:	movw	r0, #1
   14be8:	strb	r0, [fp, #-67]	; 0xffffffbd
   14bec:	ldr	r0, [fp, #8]
   14bf0:	cmp	r0, #2
   14bf4:	bne	14c08 <__assert_fail@plt+0x3b50>
   14bf8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14bfc:	tst	r0, #1
   14c00:	beq	14c08 <__assert_fail@plt+0x3b50>
   14c04:	b	15728 <__assert_fail@plt+0x4670>
   14c08:	b	15334 <__assert_fail@plt+0x427c>
   14c0c:	movw	r0, #1
   14c10:	strb	r0, [fp, #-61]	; 0xffffffc3
   14c14:	strb	r0, [fp, #-67]	; 0xffffffbd
   14c18:	ldr	r0, [fp, #8]
   14c1c:	cmp	r0, #2
   14c20:	bne	14d00 <__assert_fail@plt+0x3c48>
   14c24:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14c28:	tst	r0, #1
   14c2c:	beq	14c34 <__assert_fail@plt+0x3b7c>
   14c30:	b	15728 <__assert_fail@plt+0x4670>
   14c34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14c38:	cmp	r0, #0
   14c3c:	beq	14c5c <__assert_fail@plt+0x3ba4>
   14c40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14c44:	cmp	r0, #0
   14c48:	bne	14c5c <__assert_fail@plt+0x3ba4>
   14c4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14c50:	str	r0, [fp, #-48]	; 0xffffffd0
   14c54:	movw	r0, #0
   14c58:	str	r0, [fp, #-28]	; 0xffffffe4
   14c5c:	b	14c60 <__assert_fail@plt+0x3ba8>
   14c60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c68:	cmp	r0, r1
   14c6c:	bcs	14c84 <__assert_fail@plt+0x3bcc>
   14c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c78:	add	r0, r0, r1
   14c7c:	movw	r1, #39	; 0x27
   14c80:	strb	r1, [r0]
   14c84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c88:	add	r0, r0, #1
   14c8c:	str	r0, [fp, #-44]	; 0xffffffd4
   14c90:	b	14c94 <__assert_fail@plt+0x3bdc>
   14c94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c9c:	cmp	r0, r1
   14ca0:	bcs	14cb8 <__assert_fail@plt+0x3c00>
   14ca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ca8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14cac:	add	r0, r0, r1
   14cb0:	movw	r1, #92	; 0x5c
   14cb4:	strb	r1, [r0]
   14cb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cbc:	add	r0, r0, #1
   14cc0:	str	r0, [fp, #-44]	; 0xffffffd4
   14cc4:	b	14cc8 <__assert_fail@plt+0x3c10>
   14cc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ccc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14cd0:	cmp	r0, r1
   14cd4:	bcs	14cec <__assert_fail@plt+0x3c34>
   14cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14cdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ce0:	add	r0, r0, r1
   14ce4:	movw	r1, #39	; 0x27
   14ce8:	strb	r1, [r0]
   14cec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cf0:	add	r0, r0, #1
   14cf4:	str	r0, [fp, #-44]	; 0xffffffd4
   14cf8:	movw	r0, #0
   14cfc:	strb	r0, [fp, #-60]	; 0xffffffc4
   14d00:	b	15334 <__assert_fail@plt+0x427c>
   14d04:	movw	r0, #1
   14d08:	strb	r0, [fp, #-67]	; 0xffffffbd
   14d0c:	b	15334 <__assert_fail@plt+0x427c>
   14d10:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   14d14:	tst	r0, #1
   14d18:	beq	14d5c <__assert_fail@plt+0x3ca4>
   14d1c:	mov	r0, #1
   14d20:	str	r0, [fp, #-72]	; 0xffffffb8
   14d24:	bl	10fa4 <__ctype_b_loc@plt>
   14d28:	ldr	r0, [r0]
   14d2c:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   14d30:	mov	r1, lr
   14d34:	add	r0, r0, lr, lsl #1
   14d38:	ldrh	r0, [r0]
   14d3c:	and	r0, r0, #16384	; 0x4000
   14d40:	cmp	r0, #0
   14d44:	movw	r0, #0
   14d48:	movne	r0, #1
   14d4c:	and	r0, r0, #1
   14d50:	strb	r0, [fp, #-73]	; 0xffffffb7
   14d54:	str	r1, [sp, #32]
   14d58:	b	14fe8 <__assert_fail@plt+0x3f30>
   14d5c:	sub	r0, fp, #84	; 0x54
   14d60:	movw	r1, #0
   14d64:	and	r1, r1, #255	; 0xff
   14d68:	movw	r2, #8
   14d6c:	bl	11004 <memset@plt>
   14d70:	movw	r0, #0
   14d74:	str	r0, [fp, #-72]	; 0xffffffb8
   14d78:	movw	r0, #1
   14d7c:	strb	r0, [fp, #-73]	; 0xffffffb7
   14d80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14d84:	cmn	r0, #1
   14d88:	bne	14d98 <__assert_fail@plt+0x3ce0>
   14d8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d90:	bl	10fc8 <strlen@plt>
   14d94:	str	r0, [fp, #-36]	; 0xffffffdc
   14d98:	b	14d9c <__assert_fail@plt+0x3ce4>
   14d9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14da0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14da4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14da8:	add	r1, r1, r2
   14dac:	add	r1, r0, r1
   14db0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14db4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14db8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14dbc:	add	r2, r2, r3
   14dc0:	sub	r2, r0, r2
   14dc4:	sub	r0, fp, #88	; 0x58
   14dc8:	sub	r3, fp, #84	; 0x54
   14dcc:	bl	1c4e0 <__assert_fail@plt+0xb428>
   14dd0:	str	r0, [sp, #92]	; 0x5c
   14dd4:	ldr	r0, [sp, #92]	; 0x5c
   14dd8:	cmp	r0, #0
   14ddc:	bne	14de4 <__assert_fail@plt+0x3d2c>
   14de0:	b	14fe4 <__assert_fail@plt+0x3f2c>
   14de4:	ldr	r0, [sp, #92]	; 0x5c
   14de8:	cmn	r0, #1
   14dec:	bne	14dfc <__assert_fail@plt+0x3d44>
   14df0:	movw	r0, #0
   14df4:	strb	r0, [fp, #-73]	; 0xffffffb7
   14df8:	b	14fe4 <__assert_fail@plt+0x3f2c>
   14dfc:	ldr	r0, [sp, #92]	; 0x5c
   14e00:	cmn	r0, #2
   14e04:	bne	14e78 <__assert_fail@plt+0x3dc0>
   14e08:	movw	r0, #0
   14e0c:	strb	r0, [fp, #-73]	; 0xffffffb7
   14e10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e14:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14e18:	add	r0, r0, r1
   14e1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14e20:	cmp	r0, r1
   14e24:	movw	r0, #0
   14e28:	str	r0, [sp, #28]
   14e2c:	bcs	14e58 <__assert_fail@plt+0x3da0>
   14e30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14e38:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14e3c:	add	r1, r1, r2
   14e40:	add	r0, r0, r1
   14e44:	ldrb	r0, [r0]
   14e48:	cmp	r0, #0
   14e4c:	movw	r0, #0
   14e50:	movne	r0, #1
   14e54:	str	r0, [sp, #28]
   14e58:	ldr	r0, [sp, #28]
   14e5c:	tst	r0, #1
   14e60:	beq	14e74 <__assert_fail@plt+0x3dbc>
   14e64:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14e68:	add	r0, r0, #1
   14e6c:	str	r0, [fp, #-72]	; 0xffffffb8
   14e70:	b	14e10 <__assert_fail@plt+0x3d58>
   14e74:	b	14fe4 <__assert_fail@plt+0x3f2c>
   14e78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14e7c:	tst	r0, #1
   14e80:	beq	14f8c <__assert_fail@plt+0x3ed4>
   14e84:	ldr	r0, [fp, #8]
   14e88:	cmp	r0, #2
   14e8c:	bne	14f8c <__assert_fail@plt+0x3ed4>
   14e90:	movw	r0, #1
   14e94:	str	r0, [sp, #88]	; 0x58
   14e98:	ldr	r0, [sp, #88]	; 0x58
   14e9c:	ldr	r1, [sp, #92]	; 0x5c
   14ea0:	cmp	r0, r1
   14ea4:	bcs	14f88 <__assert_fail@plt+0x3ed0>
   14ea8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14eac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14eb0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14eb4:	add	r1, r1, r2
   14eb8:	ldr	r2, [sp, #88]	; 0x58
   14ebc:	add	r1, r1, r2
   14ec0:	ldrb	r0, [r0, r1]
   14ec4:	sub	r0, r0, #91	; 0x5b
   14ec8:	cmp	r0, #33	; 0x21
   14ecc:	str	r0, [sp, #24]
   14ed0:	bhi	14f70 <__assert_fail@plt+0x3eb8>
   14ed4:	add	r0, pc, #8
   14ed8:	ldr	r1, [sp, #24]
   14edc:	ldr	r0, [r0, r1, lsl #2]
   14ee0:	mov	pc, r0
   14ee4:	andeq	r4, r1, ip, ror #30
   14ee8:	andeq	r4, r1, ip, ror #30
   14eec:	andeq	r4, r1, r0, ror pc
   14ef0:	andeq	r4, r1, ip, ror #30
   14ef4:	andeq	r4, r1, r0, ror pc
   14ef8:	andeq	r4, r1, ip, ror #30
   14efc:	andeq	r4, r1, r0, ror pc
   14f00:	andeq	r4, r1, r0, ror pc
   14f04:	andeq	r4, r1, r0, ror pc
   14f08:	andeq	r4, r1, r0, ror pc
   14f0c:	andeq	r4, r1, r0, ror pc
   14f10:	andeq	r4, r1, r0, ror pc
   14f14:	andeq	r4, r1, r0, ror pc
   14f18:	andeq	r4, r1, r0, ror pc
   14f1c:	andeq	r4, r1, r0, ror pc
   14f20:	andeq	r4, r1, r0, ror pc
   14f24:	andeq	r4, r1, r0, ror pc
   14f28:	andeq	r4, r1, r0, ror pc
   14f2c:	andeq	r4, r1, r0, ror pc
   14f30:	andeq	r4, r1, r0, ror pc
   14f34:	andeq	r4, r1, r0, ror pc
   14f38:	andeq	r4, r1, r0, ror pc
   14f3c:	andeq	r4, r1, r0, ror pc
   14f40:	andeq	r4, r1, r0, ror pc
   14f44:	andeq	r4, r1, r0, ror pc
   14f48:	andeq	r4, r1, r0, ror pc
   14f4c:	andeq	r4, r1, r0, ror pc
   14f50:	andeq	r4, r1, r0, ror pc
   14f54:	andeq	r4, r1, r0, ror pc
   14f58:	andeq	r4, r1, r0, ror pc
   14f5c:	andeq	r4, r1, r0, ror pc
   14f60:	andeq	r4, r1, r0, ror pc
   14f64:	andeq	r4, r1, r0, ror pc
   14f68:	andeq	r4, r1, ip, ror #30
   14f6c:	b	15728 <__assert_fail@plt+0x4670>
   14f70:	b	14f74 <__assert_fail@plt+0x3ebc>
   14f74:	b	14f78 <__assert_fail@plt+0x3ec0>
   14f78:	ldr	r0, [sp, #88]	; 0x58
   14f7c:	add	r0, r0, #1
   14f80:	str	r0, [sp, #88]	; 0x58
   14f84:	b	14e98 <__assert_fail@plt+0x3de0>
   14f88:	b	14f8c <__assert_fail@plt+0x3ed4>
   14f8c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14f90:	bl	10f14 <iswprint@plt>
   14f94:	cmp	r0, #0
   14f98:	bne	14fa4 <__assert_fail@plt+0x3eec>
   14f9c:	movw	r0, #0
   14fa0:	strb	r0, [fp, #-73]	; 0xffffffb7
   14fa4:	ldr	r0, [sp, #92]	; 0x5c
   14fa8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14fac:	add	r0, r1, r0
   14fb0:	str	r0, [fp, #-72]	; 0xffffffb8
   14fb4:	b	14fb8 <__assert_fail@plt+0x3f00>
   14fb8:	b	14fbc <__assert_fail@plt+0x3f04>
   14fbc:	b	14fc0 <__assert_fail@plt+0x3f08>
   14fc0:	sub	r0, fp, #84	; 0x54
   14fc4:	bl	10ecc <mbsinit@plt>
   14fc8:	cmp	r0, #0
   14fcc:	movw	r0, #0
   14fd0:	movne	r0, #1
   14fd4:	mvn	lr, #0
   14fd8:	eor	r0, r0, lr
   14fdc:	tst	r0, #1
   14fe0:	bne	14d9c <__assert_fail@plt+0x3ce4>
   14fe4:	b	14fe8 <__assert_fail@plt+0x3f30>
   14fe8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14fec:	and	r0, r0, #1
   14ff0:	strb	r0, [fp, #-67]	; 0xffffffbd
   14ff4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14ff8:	movw	r1, #1
   14ffc:	cmp	r1, r0
   15000:	bcc	1501c <__assert_fail@plt+0x3f64>
   15004:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15008:	tst	r0, #1
   1500c:	beq	15330 <__assert_fail@plt+0x4278>
   15010:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15014:	tst	r0, #1
   15018:	bne	15330 <__assert_fail@plt+0x4278>
   1501c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15020:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15024:	add	r0, r0, r1
   15028:	str	r0, [sp, #84]	; 0x54
   1502c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15030:	tst	r0, #1
   15034:	beq	151e4 <__assert_fail@plt+0x412c>
   15038:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1503c:	tst	r0, #1
   15040:	bne	151e4 <__assert_fail@plt+0x412c>
   15044:	b	15048 <__assert_fail@plt+0x3f90>
   15048:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1504c:	tst	r0, #1
   15050:	beq	15058 <__assert_fail@plt+0x3fa0>
   15054:	b	15728 <__assert_fail@plt+0x4670>
   15058:	movw	r0, #1
   1505c:	strb	r0, [fp, #-66]	; 0xffffffbe
   15060:	ldr	r0, [fp, #8]
   15064:	cmp	r0, #2
   15068:	bne	1511c <__assert_fail@plt+0x4064>
   1506c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15070:	tst	r0, #1
   15074:	bne	1511c <__assert_fail@plt+0x4064>
   15078:	b	1507c <__assert_fail@plt+0x3fc4>
   1507c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15080:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15084:	cmp	r0, r1
   15088:	bcs	150a0 <__assert_fail@plt+0x3fe8>
   1508c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15090:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15094:	add	r0, r0, r1
   15098:	movw	r1, #39	; 0x27
   1509c:	strb	r1, [r0]
   150a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150a4:	add	r0, r0, #1
   150a8:	str	r0, [fp, #-44]	; 0xffffffd4
   150ac:	b	150b0 <__assert_fail@plt+0x3ff8>
   150b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   150b8:	cmp	r0, r1
   150bc:	bcs	150d4 <__assert_fail@plt+0x401c>
   150c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   150c8:	add	r0, r0, r1
   150cc:	movw	r1, #36	; 0x24
   150d0:	strb	r1, [r0]
   150d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150d8:	add	r0, r0, #1
   150dc:	str	r0, [fp, #-44]	; 0xffffffd4
   150e0:	b	150e4 <__assert_fail@plt+0x402c>
   150e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   150ec:	cmp	r0, r1
   150f0:	bcs	15108 <__assert_fail@plt+0x4050>
   150f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   150fc:	add	r0, r0, r1
   15100:	movw	r1, #39	; 0x27
   15104:	strb	r1, [r0]
   15108:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1510c:	add	r0, r0, #1
   15110:	str	r0, [fp, #-44]	; 0xffffffd4
   15114:	movw	r0, #1
   15118:	strb	r0, [fp, #-60]	; 0xffffffc4
   1511c:	b	15120 <__assert_fail@plt+0x4068>
   15120:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15124:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15128:	cmp	r0, r1
   1512c:	bcs	15144 <__assert_fail@plt+0x408c>
   15130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15134:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15138:	add	r0, r0, r1
   1513c:	movw	r1, #92	; 0x5c
   15140:	strb	r1, [r0]
   15144:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15148:	add	r0, r0, #1
   1514c:	str	r0, [fp, #-44]	; 0xffffffd4
   15150:	b	15154 <__assert_fail@plt+0x409c>
   15154:	b	15158 <__assert_fail@plt+0x40a0>
   15158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1515c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15160:	cmp	r0, r1
   15164:	bcs	15184 <__assert_fail@plt+0x40cc>
   15168:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1516c:	asr	r0, r0, #6
   15170:	add	r0, r0, #48	; 0x30
   15174:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15178:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1517c:	add	r1, r1, r2
   15180:	strb	r0, [r1]
   15184:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15188:	add	r0, r0, #1
   1518c:	str	r0, [fp, #-44]	; 0xffffffd4
   15190:	b	15194 <__assert_fail@plt+0x40dc>
   15194:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15198:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1519c:	cmp	r0, r1
   151a0:	bcs	151c4 <__assert_fail@plt+0x410c>
   151a4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   151a8:	asr	r0, r0, #3
   151ac:	and	r0, r0, #7
   151b0:	add	r0, r0, #48	; 0x30
   151b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   151b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   151bc:	add	r1, r1, r2
   151c0:	strb	r0, [r1]
   151c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151c8:	add	r0, r0, #1
   151cc:	str	r0, [fp, #-44]	; 0xffffffd4
   151d0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   151d4:	and	r0, r0, #7
   151d8:	add	r0, r0, #48	; 0x30
   151dc:	strb	r0, [fp, #-63]	; 0xffffffc1
   151e0:	b	15230 <__assert_fail@plt+0x4178>
   151e4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   151e8:	tst	r0, #1
   151ec:	beq	1522c <__assert_fail@plt+0x4174>
   151f0:	b	151f4 <__assert_fail@plt+0x413c>
   151f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   151fc:	cmp	r0, r1
   15200:	bcs	15218 <__assert_fail@plt+0x4160>
   15204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15208:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1520c:	add	r0, r0, r1
   15210:	movw	r1, #92	; 0x5c
   15214:	strb	r1, [r0]
   15218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1521c:	add	r0, r0, #1
   15220:	str	r0, [fp, #-44]	; 0xffffffd4
   15224:	movw	r0, #0
   15228:	strb	r0, [fp, #-65]	; 0xffffffbf
   1522c:	b	15230 <__assert_fail@plt+0x4178>
   15230:	ldr	r0, [sp, #84]	; 0x54
   15234:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15238:	add	r1, r1, #1
   1523c:	cmp	r0, r1
   15240:	bhi	15248 <__assert_fail@plt+0x4190>
   15244:	b	1532c <__assert_fail@plt+0x4274>
   15248:	b	1524c <__assert_fail@plt+0x4194>
   1524c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15250:	tst	r0, #1
   15254:	beq	152d4 <__assert_fail@plt+0x421c>
   15258:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1525c:	tst	r0, #1
   15260:	bne	152d4 <__assert_fail@plt+0x421c>
   15264:	b	15268 <__assert_fail@plt+0x41b0>
   15268:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1526c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15270:	cmp	r0, r1
   15274:	bcs	1528c <__assert_fail@plt+0x41d4>
   15278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1527c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15280:	add	r0, r0, r1
   15284:	movw	r1, #39	; 0x27
   15288:	strb	r1, [r0]
   1528c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15290:	add	r0, r0, #1
   15294:	str	r0, [fp, #-44]	; 0xffffffd4
   15298:	b	1529c <__assert_fail@plt+0x41e4>
   1529c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   152a4:	cmp	r0, r1
   152a8:	bcs	152c0 <__assert_fail@plt+0x4208>
   152ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   152b4:	add	r0, r0, r1
   152b8:	movw	r1, #39	; 0x27
   152bc:	strb	r1, [r0]
   152c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152c4:	add	r0, r0, #1
   152c8:	str	r0, [fp, #-44]	; 0xffffffd4
   152cc:	movw	r0, #0
   152d0:	strb	r0, [fp, #-60]	; 0xffffffc4
   152d4:	b	152d8 <__assert_fail@plt+0x4220>
   152d8:	b	152dc <__assert_fail@plt+0x4224>
   152dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   152e4:	cmp	r0, r1
   152e8:	bcs	15300 <__assert_fail@plt+0x4248>
   152ec:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   152f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   152f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   152f8:	add	r1, r1, r2
   152fc:	strb	r0, [r1]
   15300:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15304:	add	r0, r0, #1
   15308:	str	r0, [fp, #-44]	; 0xffffffd4
   1530c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15310:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15314:	add	r1, r1, #1
   15318:	str	r1, [fp, #-40]	; 0xffffffd8
   1531c:	add	r0, r0, r1
   15320:	ldrb	r0, [r0]
   15324:	strb	r0, [fp, #-63]	; 0xffffffc1
   15328:	b	1502c <__assert_fail@plt+0x3f74>
   1532c:	b	154bc <__assert_fail@plt+0x4404>
   15330:	b	15334 <__assert_fail@plt+0x427c>
   15334:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15338:	tst	r0, #1
   1533c:	beq	1534c <__assert_fail@plt+0x4294>
   15340:	ldr	r0, [fp, #8]
   15344:	cmp	r0, #2
   15348:	bne	15358 <__assert_fail@plt+0x42a0>
   1534c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15350:	tst	r0, #1
   15354:	beq	15394 <__assert_fail@plt+0x42dc>
   15358:	ldr	r0, [fp, #16]
   1535c:	movw	r1, #0
   15360:	cmp	r0, r1
   15364:	beq	15394 <__assert_fail@plt+0x42dc>
   15368:	ldr	r0, [fp, #16]
   1536c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15370:	lsr	r1, r1, #5
   15374:	add	r0, r0, r1, lsl #2
   15378:	ldr	r0, [r0]
   1537c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15380:	and	r1, r1, #31
   15384:	lsr	r0, r0, r1
   15388:	and	r0, r0, #1
   1538c:	cmp	r0, #0
   15390:	bne	153a4 <__assert_fail@plt+0x42ec>
   15394:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15398:	tst	r0, #1
   1539c:	bne	153a4 <__assert_fail@plt+0x42ec>
   153a0:	b	154bc <__assert_fail@plt+0x4404>
   153a4:	b	153a8 <__assert_fail@plt+0x42f0>
   153a8:	b	153ac <__assert_fail@plt+0x42f4>
   153ac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   153b0:	tst	r0, #1
   153b4:	beq	153bc <__assert_fail@plt+0x4304>
   153b8:	b	15728 <__assert_fail@plt+0x4670>
   153bc:	movw	r0, #1
   153c0:	strb	r0, [fp, #-66]	; 0xffffffbe
   153c4:	ldr	r0, [fp, #8]
   153c8:	cmp	r0, #2
   153cc:	bne	15480 <__assert_fail@plt+0x43c8>
   153d0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   153d4:	tst	r0, #1
   153d8:	bne	15480 <__assert_fail@plt+0x43c8>
   153dc:	b	153e0 <__assert_fail@plt+0x4328>
   153e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   153e8:	cmp	r0, r1
   153ec:	bcs	15404 <__assert_fail@plt+0x434c>
   153f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   153f8:	add	r0, r0, r1
   153fc:	movw	r1, #39	; 0x27
   15400:	strb	r1, [r0]
   15404:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15408:	add	r0, r0, #1
   1540c:	str	r0, [fp, #-44]	; 0xffffffd4
   15410:	b	15414 <__assert_fail@plt+0x435c>
   15414:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15418:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1541c:	cmp	r0, r1
   15420:	bcs	15438 <__assert_fail@plt+0x4380>
   15424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15428:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1542c:	add	r0, r0, r1
   15430:	movw	r1, #36	; 0x24
   15434:	strb	r1, [r0]
   15438:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1543c:	add	r0, r0, #1
   15440:	str	r0, [fp, #-44]	; 0xffffffd4
   15444:	b	15448 <__assert_fail@plt+0x4390>
   15448:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1544c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15450:	cmp	r0, r1
   15454:	bcs	1546c <__assert_fail@plt+0x43b4>
   15458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1545c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15460:	add	r0, r0, r1
   15464:	movw	r1, #39	; 0x27
   15468:	strb	r1, [r0]
   1546c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15470:	add	r0, r0, #1
   15474:	str	r0, [fp, #-44]	; 0xffffffd4
   15478:	movw	r0, #1
   1547c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15480:	b	15484 <__assert_fail@plt+0x43cc>
   15484:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15488:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1548c:	cmp	r0, r1
   15490:	bcs	154a8 <__assert_fail@plt+0x43f0>
   15494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15498:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1549c:	add	r0, r0, r1
   154a0:	movw	r1, #92	; 0x5c
   154a4:	strb	r1, [r0]
   154a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154ac:	add	r0, r0, #1
   154b0:	str	r0, [fp, #-44]	; 0xffffffd4
   154b4:	b	154b8 <__assert_fail@plt+0x4400>
   154b8:	b	154bc <__assert_fail@plt+0x4404>
   154bc:	b	154c0 <__assert_fail@plt+0x4408>
   154c0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   154c4:	tst	r0, #1
   154c8:	beq	15548 <__assert_fail@plt+0x4490>
   154cc:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   154d0:	tst	r0, #1
   154d4:	bne	15548 <__assert_fail@plt+0x4490>
   154d8:	b	154dc <__assert_fail@plt+0x4424>
   154dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154e4:	cmp	r0, r1
   154e8:	bcs	15500 <__assert_fail@plt+0x4448>
   154ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   154f4:	add	r0, r0, r1
   154f8:	movw	r1, #39	; 0x27
   154fc:	strb	r1, [r0]
   15500:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15504:	add	r0, r0, #1
   15508:	str	r0, [fp, #-44]	; 0xffffffd4
   1550c:	b	15510 <__assert_fail@plt+0x4458>
   15510:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15514:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15518:	cmp	r0, r1
   1551c:	bcs	15534 <__assert_fail@plt+0x447c>
   15520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15524:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15528:	add	r0, r0, r1
   1552c:	movw	r1, #39	; 0x27
   15530:	strb	r1, [r0]
   15534:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15538:	add	r0, r0, #1
   1553c:	str	r0, [fp, #-44]	; 0xffffffd4
   15540:	movw	r0, #0
   15544:	strb	r0, [fp, #-60]	; 0xffffffc4
   15548:	b	1554c <__assert_fail@plt+0x4494>
   1554c:	b	15550 <__assert_fail@plt+0x4498>
   15550:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15554:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15558:	cmp	r0, r1
   1555c:	bcs	15574 <__assert_fail@plt+0x44bc>
   15560:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15564:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15568:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1556c:	add	r1, r1, r2
   15570:	strb	r0, [r1]
   15574:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15578:	add	r0, r0, #1
   1557c:	str	r0, [fp, #-44]	; 0xffffffd4
   15580:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   15584:	tst	r0, #1
   15588:	bne	15594 <__assert_fail@plt+0x44dc>
   1558c:	movw	r0, #0
   15590:	strb	r0, [fp, #-62]	; 0xffffffc2
   15594:	b	15598 <__assert_fail@plt+0x44e0>
   15598:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1559c:	add	r0, r0, #1
   155a0:	str	r0, [fp, #-40]	; 0xffffffd8
   155a4:	b	1434c <__assert_fail@plt+0x3294>
   155a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   155ac:	cmp	r0, #0
   155b0:	bne	155d0 <__assert_fail@plt+0x4518>
   155b4:	ldr	r0, [fp, #8]
   155b8:	cmp	r0, #2
   155bc:	bne	155d0 <__assert_fail@plt+0x4518>
   155c0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   155c4:	tst	r0, #1
   155c8:	beq	155d0 <__assert_fail@plt+0x4518>
   155cc:	b	15728 <__assert_fail@plt+0x4670>
   155d0:	ldr	r0, [fp, #8]
   155d4:	cmp	r0, #2
   155d8:	bne	15678 <__assert_fail@plt+0x45c0>
   155dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   155e0:	tst	r0, #1
   155e4:	bne	15678 <__assert_fail@plt+0x45c0>
   155e8:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   155ec:	tst	r0, #1
   155f0:	beq	15678 <__assert_fail@plt+0x45c0>
   155f4:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   155f8:	tst	r0, #1
   155fc:	beq	15644 <__assert_fail@plt+0x458c>
   15600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15604:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15608:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1560c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15610:	ldr	ip, [fp, #12]
   15614:	ldr	lr, [fp, #16]
   15618:	ldr	r4, [fp, #20]
   1561c:	ldr	r5, [fp, #24]
   15620:	movw	r6, #5
   15624:	str	r6, [sp]
   15628:	str	ip, [sp, #4]
   1562c:	str	lr, [sp, #8]
   15630:	str	r4, [sp, #12]
   15634:	str	r5, [sp, #16]
   15638:	bl	14064 <__assert_fail@plt+0x2fac>
   1563c:	str	r0, [fp, #-20]	; 0xffffffec
   15640:	b	15790 <__assert_fail@plt+0x46d8>
   15644:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15648:	cmp	r0, #0
   1564c:	bne	15670 <__assert_fail@plt+0x45b8>
   15650:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15654:	cmp	r0, #0
   15658:	beq	15670 <__assert_fail@plt+0x45b8>
   1565c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15660:	str	r0, [fp, #-28]	; 0xffffffe4
   15664:	movw	r0, #0
   15668:	str	r0, [fp, #-44]	; 0xffffffd4
   1566c:	b	1410c <__assert_fail@plt+0x3054>
   15670:	b	15674 <__assert_fail@plt+0x45bc>
   15674:	b	15678 <__assert_fail@plt+0x45c0>
   15678:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1567c:	movw	r1, #0
   15680:	cmp	r0, r1
   15684:	beq	156f8 <__assert_fail@plt+0x4640>
   15688:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1568c:	tst	r0, #1
   15690:	bne	156f8 <__assert_fail@plt+0x4640>
   15694:	b	15698 <__assert_fail@plt+0x45e0>
   15698:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1569c:	ldrsb	r0, [r0]
   156a0:	cmp	r0, #0
   156a4:	beq	156f4 <__assert_fail@plt+0x463c>
   156a8:	b	156ac <__assert_fail@plt+0x45f4>
   156ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156b4:	cmp	r0, r1
   156b8:	bcs	156d4 <__assert_fail@plt+0x461c>
   156bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   156c0:	ldrb	r0, [r0]
   156c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   156c8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   156cc:	add	r1, r1, r2
   156d0:	strb	r0, [r1]
   156d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156d8:	add	r0, r0, #1
   156dc:	str	r0, [fp, #-44]	; 0xffffffd4
   156e0:	b	156e4 <__assert_fail@plt+0x462c>
   156e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   156e8:	add	r0, r0, #1
   156ec:	str	r0, [fp, #-52]	; 0xffffffcc
   156f0:	b	15698 <__assert_fail@plt+0x45e0>
   156f4:	b	156f8 <__assert_fail@plt+0x4640>
   156f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15700:	cmp	r0, r1
   15704:	bcs	1571c <__assert_fail@plt+0x4664>
   15708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1570c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15710:	add	r0, r0, r1
   15714:	movw	r1, #0
   15718:	strb	r1, [r0]
   1571c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15720:	str	r0, [fp, #-20]	; 0xffffffec
   15724:	b	15790 <__assert_fail@plt+0x46d8>
   15728:	ldr	r0, [fp, #8]
   1572c:	cmp	r0, #2
   15730:	bne	15748 <__assert_fail@plt+0x4690>
   15734:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15738:	tst	r0, #1
   1573c:	beq	15748 <__assert_fail@plt+0x4690>
   15740:	movw	r0, #4
   15744:	str	r0, [fp, #8]
   15748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1574c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15750:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15754:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15758:	ldr	ip, [fp, #8]
   1575c:	ldr	lr, [fp, #12]
   15760:	mvn	r4, #2
   15764:	and	lr, lr, r4
   15768:	ldr	r4, [fp, #20]
   1576c:	ldr	r5, [fp, #24]
   15770:	str	ip, [sp]
   15774:	str	lr, [sp, #4]
   15778:	movw	ip, #0
   1577c:	str	ip, [sp, #8]
   15780:	str	r4, [sp, #12]
   15784:	str	r5, [sp, #16]
   15788:	bl	14064 <__assert_fail@plt+0x2fac>
   1578c:	str	r0, [fp, #-20]	; 0xffffffec
   15790:	ldr	r0, [fp, #-20]	; 0xffffffec
   15794:	sub	sp, fp, #16
   15798:	pop	{r4, r5, r6, sl, fp, pc}
   1579c:	push	{fp, lr}
   157a0:	mov	fp, sp
   157a4:	sub	sp, sp, #16
   157a8:	str	r0, [fp, #-4]
   157ac:	str	r1, [sp, #8]
   157b0:	str	r2, [sp, #4]
   157b4:	ldr	r0, [fp, #-4]
   157b8:	ldr	r1, [sp, #8]
   157bc:	ldr	r3, [sp, #4]
   157c0:	movw	r2, #0
   157c4:	bl	157d0 <__assert_fail@plt+0x4718>
   157c8:	mov	sp, fp
   157cc:	pop	{fp, pc}
   157d0:	push	{r4, r5, r6, sl, fp, lr}
   157d4:	add	fp, sp, #16
   157d8:	sub	sp, sp, #72	; 0x48
   157dc:	str	r0, [fp, #-20]	; 0xffffffec
   157e0:	str	r1, [fp, #-24]	; 0xffffffe8
   157e4:	str	r2, [fp, #-28]	; 0xffffffe4
   157e8:	str	r3, [fp, #-32]	; 0xffffffe0
   157ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   157f0:	movw	r1, #0
   157f4:	cmp	r0, r1
   157f8:	beq	15808 <__assert_fail@plt+0x4750>
   157fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15800:	str	r0, [sp, #32]
   15804:	b	15818 <__assert_fail@plt+0x4760>
   15808:	movw	r0, #33436	; 0x829c
   1580c:	movt	r0, #3
   15810:	str	r0, [sp, #32]
   15814:	b	15818 <__assert_fail@plt+0x4760>
   15818:	ldr	r0, [sp, #32]
   1581c:	str	r0, [fp, #-36]	; 0xffffffdc
   15820:	bl	10fec <__errno_location@plt>
   15824:	ldr	r0, [r0]
   15828:	str	r0, [fp, #-40]	; 0xffffffd8
   1582c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15830:	ldr	r0, [r0, #4]
   15834:	ldr	lr, [fp, #-28]	; 0xffffffe4
   15838:	movw	r1, #0
   1583c:	cmp	lr, r1
   15840:	movw	lr, #0
   15844:	movne	lr, #1
   15848:	tst	lr, #1
   1584c:	mov	lr, r1
   15850:	moveq	lr, #1
   15854:	orr	r0, r0, lr
   15858:	str	r0, [sp, #44]	; 0x2c
   1585c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15864:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15868:	ldr	r0, [r0]
   1586c:	ldr	lr, [sp, #44]	; 0x2c
   15870:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15874:	add	ip, ip, #8
   15878:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1587c:	ldr	r4, [r4, #40]	; 0x28
   15880:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15884:	ldr	r5, [r5, #44]	; 0x2c
   15888:	str	r0, [sp, #28]
   1588c:	mov	r0, r1
   15890:	ldr	r6, [sp, #28]
   15894:	str	r6, [sp]
   15898:	str	lr, [sp, #4]
   1589c:	str	ip, [sp, #8]
   158a0:	str	r4, [sp, #12]
   158a4:	str	r5, [sp, #16]
   158a8:	bl	14064 <__assert_fail@plt+0x2fac>
   158ac:	add	r0, r0, #1
   158b0:	str	r0, [sp, #40]	; 0x28
   158b4:	ldr	r0, [sp, #40]	; 0x28
   158b8:	bl	16cf4 <__assert_fail@plt+0x5c3c>
   158bc:	str	r0, [sp, #36]	; 0x24
   158c0:	ldr	r0, [sp, #36]	; 0x24
   158c4:	ldr	r1, [sp, #40]	; 0x28
   158c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   158cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   158d0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   158d4:	ldr	ip, [ip]
   158d8:	ldr	lr, [sp, #44]	; 0x2c
   158dc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   158e0:	add	r4, r4, #8
   158e4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   158e8:	ldr	r5, [r5, #40]	; 0x28
   158ec:	ldr	r6, [fp, #-36]	; 0xffffffdc
   158f0:	ldr	r6, [r6, #44]	; 0x2c
   158f4:	str	ip, [sp]
   158f8:	str	lr, [sp, #4]
   158fc:	str	r4, [sp, #8]
   15900:	str	r5, [sp, #12]
   15904:	str	r6, [sp, #16]
   15908:	bl	14064 <__assert_fail@plt+0x2fac>
   1590c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15910:	str	r0, [sp, #24]
   15914:	str	r1, [sp, #20]
   15918:	bl	10fec <__errno_location@plt>
   1591c:	ldr	r1, [sp, #20]
   15920:	str	r1, [r0]
   15924:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15928:	movw	r2, #0
   1592c:	cmp	r0, r2
   15930:	beq	15944 <__assert_fail@plt+0x488c>
   15934:	ldr	r0, [sp, #40]	; 0x28
   15938:	sub	r0, r0, #1
   1593c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15940:	str	r0, [r1]
   15944:	ldr	r0, [sp, #36]	; 0x24
   15948:	sub	sp, fp, #16
   1594c:	pop	{r4, r5, r6, sl, fp, pc}
   15950:	push	{fp, lr}
   15954:	mov	fp, sp
   15958:	sub	sp, sp, #8
   1595c:	movw	r0, #244	; 0xf4
   15960:	movt	r0, #3
   15964:	ldr	r0, [r0]
   15968:	str	r0, [sp, #4]
   1596c:	movw	r0, #1
   15970:	str	r0, [sp]
   15974:	ldr	r0, [sp]
   15978:	movw	r1, #248	; 0xf8
   1597c:	movt	r1, #3
   15980:	ldr	r1, [r1]
   15984:	cmp	r0, r1
   15988:	bge	159b0 <__assert_fail@plt+0x48f8>
   1598c:	ldr	r0, [sp, #4]
   15990:	ldr	r1, [sp]
   15994:	add	r0, r0, r1, lsl #3
   15998:	ldr	r0, [r0, #4]
   1599c:	bl	1c270 <__assert_fail@plt+0xb1b8>
   159a0:	ldr	r0, [sp]
   159a4:	add	r0, r0, #1
   159a8:	str	r0, [sp]
   159ac:	b	15974 <__assert_fail@plt+0x48bc>
   159b0:	ldr	r0, [sp, #4]
   159b4:	ldr	r0, [r0, #4]
   159b8:	movw	r1, #33484	; 0x82cc
   159bc:	movt	r1, #3
   159c0:	cmp	r0, r1
   159c4:	beq	159f0 <__assert_fail@plt+0x4938>
   159c8:	ldr	r0, [sp, #4]
   159cc:	ldr	r0, [r0, #4]
   159d0:	bl	1c270 <__assert_fail@plt+0xb1b8>
   159d4:	movw	r0, #256	; 0x100
   159d8:	movw	lr, #252	; 0xfc
   159dc:	movt	lr, #3
   159e0:	str	r0, [lr]
   159e4:	movw	r0, #33484	; 0x82cc
   159e8:	movt	r0, #3
   159ec:	str	r0, [lr, #4]
   159f0:	ldr	r0, [sp, #4]
   159f4:	movw	r1, #252	; 0xfc
   159f8:	movt	r1, #3
   159fc:	cmp	r0, r1
   15a00:	beq	15a20 <__assert_fail@plt+0x4968>
   15a04:	ldr	r0, [sp, #4]
   15a08:	bl	1c270 <__assert_fail@plt+0xb1b8>
   15a0c:	movw	r0, #244	; 0xf4
   15a10:	movt	r0, #3
   15a14:	movw	lr, #252	; 0xfc
   15a18:	movt	lr, #3
   15a1c:	str	lr, [r0]
   15a20:	movw	r0, #248	; 0xf8
   15a24:	movt	r0, #3
   15a28:	movw	r1, #1
   15a2c:	str	r1, [r0]
   15a30:	mov	sp, fp
   15a34:	pop	{fp, pc}
   15a38:	push	{fp, lr}
   15a3c:	mov	fp, sp
   15a40:	sub	sp, sp, #8
   15a44:	str	r0, [sp, #4]
   15a48:	str	r1, [sp]
   15a4c:	ldr	r0, [sp, #4]
   15a50:	ldr	r1, [sp]
   15a54:	mvn	r2, #0
   15a58:	movw	r3, #33436	; 0x829c
   15a5c:	movt	r3, #3
   15a60:	bl	15a6c <__assert_fail@plt+0x49b4>
   15a64:	mov	sp, fp
   15a68:	pop	{fp, pc}
   15a6c:	push	{r4, r5, r6, sl, fp, lr}
   15a70:	add	fp, sp, #16
   15a74:	sub	sp, sp, #88	; 0x58
   15a78:	str	r0, [fp, #-20]	; 0xffffffec
   15a7c:	str	r1, [fp, #-24]	; 0xffffffe8
   15a80:	str	r2, [fp, #-28]	; 0xffffffe4
   15a84:	str	r3, [fp, #-32]	; 0xffffffe0
   15a88:	bl	10fec <__errno_location@plt>
   15a8c:	ldr	r1, [pc, #676]	; 15d38 <__assert_fail@plt+0x4c80>
   15a90:	ldr	r0, [r0]
   15a94:	str	r0, [fp, #-36]	; 0xffffffdc
   15a98:	movw	r0, #244	; 0xf4
   15a9c:	movt	r0, #3
   15aa0:	ldr	r0, [r0]
   15aa4:	str	r0, [fp, #-40]	; 0xffffffd8
   15aa8:	str	r1, [fp, #-44]	; 0xffffffd4
   15aac:	ldr	r0, [fp, #-20]	; 0xffffffec
   15ab0:	movw	r1, #0
   15ab4:	cmp	r1, r0
   15ab8:	bgt	15acc <__assert_fail@plt+0x4a14>
   15abc:	ldr	r0, [fp, #-20]	; 0xffffffec
   15ac0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ac4:	cmp	r0, r1
   15ac8:	blt	15ad0 <__assert_fail@plt+0x4a18>
   15acc:	bl	110a0 <abort@plt>
   15ad0:	movw	r0, #248	; 0xf8
   15ad4:	movt	r0, #3
   15ad8:	ldr	r0, [r0]
   15adc:	ldr	r1, [fp, #-20]	; 0xffffffec
   15ae0:	cmp	r0, r1
   15ae4:	bgt	15bdc <__assert_fail@plt+0x4b24>
   15ae8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15aec:	movw	r1, #252	; 0xfc
   15af0:	movt	r1, #3
   15af4:	cmp	r0, r1
   15af8:	movw	r0, #0
   15afc:	moveq	r0, #1
   15b00:	and	r0, r0, #1
   15b04:	strb	r0, [fp, #-45]	; 0xffffffd3
   15b08:	movw	r0, #248	; 0xf8
   15b0c:	movt	r0, #3
   15b10:	ldr	r0, [r0]
   15b14:	str	r0, [sp, #52]	; 0x34
   15b18:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15b1c:	tst	r0, #1
   15b20:	beq	15b30 <__assert_fail@plt+0x4a78>
   15b24:	movw	r0, #0
   15b28:	str	r0, [sp, #32]
   15b2c:	b	15b38 <__assert_fail@plt+0x4a80>
   15b30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15b34:	str	r0, [sp, #32]
   15b38:	ldr	r0, [sp, #32]
   15b3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15b40:	movw	r2, #248	; 0xf8
   15b44:	movt	r2, #3
   15b48:	ldr	r2, [r2]
   15b4c:	sub	r1, r1, r2
   15b50:	add	r2, r1, #1
   15b54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b58:	add	r1, sp, #52	; 0x34
   15b5c:	movw	ip, #8
   15b60:	str	ip, [sp]
   15b64:	bl	16f30 <__assert_fail@plt+0x5e78>
   15b68:	str	r0, [fp, #-40]	; 0xffffffd8
   15b6c:	movw	r1, #244	; 0xf4
   15b70:	movt	r1, #3
   15b74:	str	r0, [r1]
   15b78:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15b7c:	tst	r0, #1
   15b80:	beq	15ba0 <__assert_fail@plt+0x4ae8>
   15b84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15b88:	movw	r1, #252	; 0xfc
   15b8c:	movt	r1, #3
   15b90:	ldr	r2, [r1]
   15b94:	str	r2, [r0]
   15b98:	ldr	r1, [r1, #4]
   15b9c:	str	r1, [r0, #4]
   15ba0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15ba4:	movw	r1, #248	; 0xf8
   15ba8:	movt	r1, #3
   15bac:	ldr	r1, [r1]
   15bb0:	add	r0, r0, r1, lsl #3
   15bb4:	ldr	r2, [sp, #52]	; 0x34
   15bb8:	sub	r1, r2, r1
   15bbc:	lsl	r2, r1, #3
   15bc0:	movw	r1, #0
   15bc4:	and	r1, r1, #255	; 0xff
   15bc8:	bl	11004 <memset@plt>
   15bcc:	ldr	r0, [sp, #52]	; 0x34
   15bd0:	movw	r1, #248	; 0xf8
   15bd4:	movt	r1, #3
   15bd8:	str	r0, [r1]
   15bdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15be0:	ldr	r1, [fp, #-20]	; 0xffffffec
   15be4:	ldr	r0, [r0, r1, lsl #3]
   15be8:	str	r0, [sp, #48]	; 0x30
   15bec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15bf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   15bf4:	add	r0, r0, r1, lsl #3
   15bf8:	ldr	r0, [r0, #4]
   15bfc:	str	r0, [sp, #44]	; 0x2c
   15c00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c04:	ldr	r0, [r0, #4]
   15c08:	orr	r0, r0, #1
   15c0c:	str	r0, [sp, #40]	; 0x28
   15c10:	ldr	r0, [sp, #44]	; 0x2c
   15c14:	ldr	r1, [sp, #48]	; 0x30
   15c18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15c1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15c20:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15c24:	ldr	ip, [ip]
   15c28:	ldr	lr, [sp, #40]	; 0x28
   15c2c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15c30:	add	r4, r4, #8
   15c34:	ldr	r5, [fp, #-32]	; 0xffffffe0
   15c38:	ldr	r5, [r5, #40]	; 0x28
   15c3c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   15c40:	ldr	r6, [r6, #44]	; 0x2c
   15c44:	str	ip, [sp]
   15c48:	str	lr, [sp, #4]
   15c4c:	str	r4, [sp, #8]
   15c50:	str	r5, [sp, #12]
   15c54:	str	r6, [sp, #16]
   15c58:	bl	14064 <__assert_fail@plt+0x2fac>
   15c5c:	str	r0, [sp, #36]	; 0x24
   15c60:	ldr	r0, [sp, #48]	; 0x30
   15c64:	ldr	r1, [sp, #36]	; 0x24
   15c68:	cmp	r0, r1
   15c6c:	bhi	15d18 <__assert_fail@plt+0x4c60>
   15c70:	ldr	r0, [sp, #36]	; 0x24
   15c74:	add	r0, r0, #1
   15c78:	str	r0, [sp, #48]	; 0x30
   15c7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15c80:	ldr	r2, [fp, #-20]	; 0xffffffec
   15c84:	add	r1, r1, r2, lsl #3
   15c88:	str	r0, [r1]
   15c8c:	ldr	r0, [sp, #44]	; 0x2c
   15c90:	movw	r1, #33484	; 0x82cc
   15c94:	movt	r1, #3
   15c98:	cmp	r0, r1
   15c9c:	beq	15ca8 <__assert_fail@plt+0x4bf0>
   15ca0:	ldr	r0, [sp, #44]	; 0x2c
   15ca4:	bl	1c270 <__assert_fail@plt+0xb1b8>
   15ca8:	ldr	r0, [sp, #48]	; 0x30
   15cac:	bl	16cf4 <__assert_fail@plt+0x5c3c>
   15cb0:	mov	lr, r0
   15cb4:	str	r0, [sp, #44]	; 0x2c
   15cb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15cbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   15cc0:	add	r0, r0, r1, lsl #3
   15cc4:	str	lr, [r0, #4]
   15cc8:	ldr	r0, [sp, #44]	; 0x2c
   15ccc:	ldr	r1, [sp, #48]	; 0x30
   15cd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15cd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15cd8:	ldr	lr, [fp, #-32]	; 0xffffffe0
   15cdc:	ldr	lr, [lr]
   15ce0:	ldr	ip, [sp, #40]	; 0x28
   15ce4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15ce8:	add	r4, r4, #8
   15cec:	ldr	r5, [fp, #-32]	; 0xffffffe0
   15cf0:	ldr	r5, [r5, #40]	; 0x28
   15cf4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   15cf8:	ldr	r6, [r6, #44]	; 0x2c
   15cfc:	str	lr, [sp]
   15d00:	str	ip, [sp, #4]
   15d04:	str	r4, [sp, #8]
   15d08:	str	r5, [sp, #12]
   15d0c:	str	r6, [sp, #16]
   15d10:	bl	14064 <__assert_fail@plt+0x2fac>
   15d14:	str	r0, [sp, #28]
   15d18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d1c:	str	r0, [sp, #24]
   15d20:	bl	10fec <__errno_location@plt>
   15d24:	ldr	lr, [sp, #24]
   15d28:	str	lr, [r0]
   15d2c:	ldr	r0, [sp, #44]	; 0x2c
   15d30:	sub	sp, fp, #16
   15d34:	pop	{r4, r5, r6, sl, fp, pc}
   15d38:	svcvc	0x00ffffff
   15d3c:	push	{fp, lr}
   15d40:	mov	fp, sp
   15d44:	sub	sp, sp, #16
   15d48:	str	r0, [fp, #-4]
   15d4c:	str	r1, [sp, #8]
   15d50:	str	r2, [sp, #4]
   15d54:	ldr	r0, [fp, #-4]
   15d58:	ldr	r1, [sp, #8]
   15d5c:	ldr	r2, [sp, #4]
   15d60:	movw	r3, #33436	; 0x829c
   15d64:	movt	r3, #3
   15d68:	bl	15a6c <__assert_fail@plt+0x49b4>
   15d6c:	mov	sp, fp
   15d70:	pop	{fp, pc}
   15d74:	push	{fp, lr}
   15d78:	mov	fp, sp
   15d7c:	sub	sp, sp, #8
   15d80:	str	r0, [sp, #4]
   15d84:	ldr	r1, [sp, #4]
   15d88:	movw	r0, #0
   15d8c:	bl	15a38 <__assert_fail@plt+0x4980>
   15d90:	mov	sp, fp
   15d94:	pop	{fp, pc}
   15d98:	push	{fp, lr}
   15d9c:	mov	fp, sp
   15da0:	sub	sp, sp, #8
   15da4:	str	r0, [sp, #4]
   15da8:	str	r1, [sp]
   15dac:	ldr	r1, [sp, #4]
   15db0:	ldr	r2, [sp]
   15db4:	movw	r0, #0
   15db8:	bl	15d3c <__assert_fail@plt+0x4c84>
   15dbc:	mov	sp, fp
   15dc0:	pop	{fp, pc}
   15dc4:	push	{fp, lr}
   15dc8:	mov	fp, sp
   15dcc:	sub	sp, sp, #64	; 0x40
   15dd0:	str	r0, [fp, #-4]
   15dd4:	str	r1, [fp, #-8]
   15dd8:	str	r2, [fp, #-12]
   15ddc:	ldr	r1, [fp, #-8]
   15de0:	add	r0, sp, #4
   15de4:	bl	15e04 <__assert_fail@plt+0x4d4c>
   15de8:	ldr	r0, [fp, #-4]
   15dec:	ldr	r1, [fp, #-12]
   15df0:	mvn	r2, #0
   15df4:	add	r3, sp, #4
   15df8:	bl	15a6c <__assert_fail@plt+0x49b4>
   15dfc:	mov	sp, fp
   15e00:	pop	{fp, pc}
   15e04:	push	{fp, lr}
   15e08:	mov	fp, sp
   15e0c:	sub	sp, sp, #8
   15e10:	str	r1, [sp, #4]
   15e14:	mov	r1, r0
   15e18:	str	r0, [sp]
   15e1c:	mov	r0, r1
   15e20:	movw	r1, #0
   15e24:	and	r1, r1, #255	; 0xff
   15e28:	movw	r2, #48	; 0x30
   15e2c:	bl	11004 <memset@plt>
   15e30:	ldr	r0, [sp, #4]
   15e34:	cmp	r0, #10
   15e38:	bne	15e40 <__assert_fail@plt+0x4d88>
   15e3c:	bl	110a0 <abort@plt>
   15e40:	ldr	r0, [sp, #4]
   15e44:	ldr	r1, [sp]
   15e48:	str	r0, [r1]
   15e4c:	mov	sp, fp
   15e50:	pop	{fp, pc}
   15e54:	push	{fp, lr}
   15e58:	mov	fp, sp
   15e5c:	sub	sp, sp, #64	; 0x40
   15e60:	str	r0, [fp, #-4]
   15e64:	str	r1, [fp, #-8]
   15e68:	str	r2, [fp, #-12]
   15e6c:	str	r3, [fp, #-16]
   15e70:	ldr	r1, [fp, #-8]
   15e74:	mov	r0, sp
   15e78:	bl	15e04 <__assert_fail@plt+0x4d4c>
   15e7c:	ldr	r0, [fp, #-4]
   15e80:	ldr	r1, [fp, #-12]
   15e84:	ldr	r2, [fp, #-16]
   15e88:	mov	r3, sp
   15e8c:	bl	15a6c <__assert_fail@plt+0x49b4>
   15e90:	mov	sp, fp
   15e94:	pop	{fp, pc}
   15e98:	push	{fp, lr}
   15e9c:	mov	fp, sp
   15ea0:	sub	sp, sp, #8
   15ea4:	str	r0, [sp, #4]
   15ea8:	str	r1, [sp]
   15eac:	ldr	r1, [sp, #4]
   15eb0:	ldr	r2, [sp]
   15eb4:	movw	r0, #0
   15eb8:	bl	15dc4 <__assert_fail@plt+0x4d0c>
   15ebc:	mov	sp, fp
   15ec0:	pop	{fp, pc}
   15ec4:	push	{fp, lr}
   15ec8:	mov	fp, sp
   15ecc:	sub	sp, sp, #16
   15ed0:	str	r0, [fp, #-4]
   15ed4:	str	r1, [sp, #8]
   15ed8:	str	r2, [sp, #4]
   15edc:	ldr	r1, [fp, #-4]
   15ee0:	ldr	r2, [sp, #8]
   15ee4:	ldr	r3, [sp, #4]
   15ee8:	movw	r0, #0
   15eec:	bl	15e54 <__assert_fail@plt+0x4d9c>
   15ef0:	mov	sp, fp
   15ef4:	pop	{fp, pc}
   15ef8:	push	{fp, lr}
   15efc:	mov	fp, sp
   15f00:	sub	sp, sp, #72	; 0x48
   15f04:	movw	r3, #33436	; 0x829c
   15f08:	movt	r3, #3
   15f0c:	str	r0, [fp, #-4]
   15f10:	str	r1, [fp, #-8]
   15f14:	strb	r2, [fp, #-9]
   15f18:	add	r0, sp, #12
   15f1c:	mov	r1, r0
   15f20:	str	r0, [sp, #8]
   15f24:	mov	r0, r1
   15f28:	mov	r1, r3
   15f2c:	movw	r2, #48	; 0x30
   15f30:	bl	10ec0 <memcpy@plt>
   15f34:	ldr	r0, [sp, #8]
   15f38:	ldrb	r1, [fp, #-9]
   15f3c:	movw	r2, #1
   15f40:	bl	13e08 <__assert_fail@plt+0x2d50>
   15f44:	ldr	r1, [fp, #-4]
   15f48:	ldr	r2, [fp, #-8]
   15f4c:	movw	r3, #0
   15f50:	str	r0, [sp, #4]
   15f54:	mov	r0, r3
   15f58:	add	r3, sp, #12
   15f5c:	bl	15a6c <__assert_fail@plt+0x49b4>
   15f60:	mov	sp, fp
   15f64:	pop	{fp, pc}
   15f68:	push	{fp, lr}
   15f6c:	mov	fp, sp
   15f70:	sub	sp, sp, #8
   15f74:	str	r0, [sp, #4]
   15f78:	strb	r1, [sp, #3]
   15f7c:	ldr	r0, [sp, #4]
   15f80:	mvn	r1, #0
   15f84:	ldrb	r2, [sp, #3]
   15f88:	bl	15ef8 <__assert_fail@plt+0x4e40>
   15f8c:	mov	sp, fp
   15f90:	pop	{fp, pc}
   15f94:	push	{fp, lr}
   15f98:	mov	fp, sp
   15f9c:	sub	sp, sp, #8
   15fa0:	str	r0, [sp, #4]
   15fa4:	ldr	r0, [sp, #4]
   15fa8:	movw	r1, #58	; 0x3a
   15fac:	and	r1, r1, #255	; 0xff
   15fb0:	bl	15f68 <__assert_fail@plt+0x4eb0>
   15fb4:	mov	sp, fp
   15fb8:	pop	{fp, pc}
   15fbc:	push	{fp, lr}
   15fc0:	mov	fp, sp
   15fc4:	sub	sp, sp, #8
   15fc8:	str	r0, [sp, #4]
   15fcc:	str	r1, [sp]
   15fd0:	ldr	r0, [sp, #4]
   15fd4:	ldr	r1, [sp]
   15fd8:	movw	r2, #58	; 0x3a
   15fdc:	and	r2, r2, #255	; 0xff
   15fe0:	bl	15ef8 <__assert_fail@plt+0x4e40>
   15fe4:	mov	sp, fp
   15fe8:	pop	{fp, pc}
   15fec:	push	{fp, lr}
   15ff0:	mov	fp, sp
   15ff4:	sub	sp, sp, #120	; 0x78
   15ff8:	str	r0, [fp, #-4]
   15ffc:	str	r1, [fp, #-8]
   16000:	str	r2, [fp, #-12]
   16004:	ldr	r1, [fp, #-8]
   16008:	add	r0, sp, #12
   1600c:	bl	15e04 <__assert_fail@plt+0x4d4c>
   16010:	add	r0, sp, #60	; 0x3c
   16014:	mov	r1, r0
   16018:	add	r2, sp, #12
   1601c:	str	r0, [sp, #8]
   16020:	mov	r0, r1
   16024:	mov	r1, r2
   16028:	movw	r2, #48	; 0x30
   1602c:	bl	10ec0 <memcpy@plt>
   16030:	ldr	r0, [sp, #8]
   16034:	movw	r1, #58	; 0x3a
   16038:	and	r1, r1, #255	; 0xff
   1603c:	movw	r2, #1
   16040:	bl	13e08 <__assert_fail@plt+0x2d50>
   16044:	ldr	r1, [fp, #-4]
   16048:	ldr	r2, [fp, #-12]
   1604c:	str	r0, [sp, #4]
   16050:	mov	r0, r1
   16054:	mov	r1, r2
   16058:	mvn	r2, #0
   1605c:	add	r3, sp, #60	; 0x3c
   16060:	bl	15a6c <__assert_fail@plt+0x49b4>
   16064:	mov	sp, fp
   16068:	pop	{fp, pc}
   1606c:	push	{fp, lr}
   16070:	mov	fp, sp
   16074:	sub	sp, sp, #24
   16078:	str	r0, [fp, #-4]
   1607c:	str	r1, [fp, #-8]
   16080:	str	r2, [sp, #12]
   16084:	str	r3, [sp, #8]
   16088:	ldr	r0, [fp, #-4]
   1608c:	ldr	r1, [fp, #-8]
   16090:	ldr	r2, [sp, #12]
   16094:	ldr	r3, [sp, #8]
   16098:	mvn	ip, #0
   1609c:	str	ip, [sp]
   160a0:	bl	160ac <__assert_fail@plt+0x4ff4>
   160a4:	mov	sp, fp
   160a8:	pop	{fp, pc}
   160ac:	push	{fp, lr}
   160b0:	mov	fp, sp
   160b4:	sub	sp, sp, #72	; 0x48
   160b8:	ldr	ip, [fp, #8]
   160bc:	movw	lr, #33436	; 0x829c
   160c0:	movt	lr, #3
   160c4:	str	r0, [fp, #-4]
   160c8:	str	r1, [fp, #-8]
   160cc:	str	r2, [fp, #-12]
   160d0:	str	r3, [fp, #-16]
   160d4:	add	r0, sp, #8
   160d8:	mov	r1, r0
   160dc:	str	r0, [sp, #4]
   160e0:	mov	r0, r1
   160e4:	mov	r1, lr
   160e8:	movw	r2, #48	; 0x30
   160ec:	str	ip, [sp]
   160f0:	bl	10ec0 <memcpy@plt>
   160f4:	ldr	r1, [fp, #-8]
   160f8:	ldr	r2, [fp, #-12]
   160fc:	ldr	r0, [sp, #4]
   16100:	bl	13f08 <__assert_fail@plt+0x2e50>
   16104:	ldr	r0, [fp, #-4]
   16108:	ldr	r1, [fp, #-16]
   1610c:	ldr	r2, [fp, #8]
   16110:	add	r3, sp, #8
   16114:	bl	15a6c <__assert_fail@plt+0x49b4>
   16118:	mov	sp, fp
   1611c:	pop	{fp, pc}
   16120:	push	{fp, lr}
   16124:	mov	fp, sp
   16128:	sub	sp, sp, #16
   1612c:	str	r0, [fp, #-4]
   16130:	str	r1, [sp, #8]
   16134:	str	r2, [sp, #4]
   16138:	ldr	r1, [fp, #-4]
   1613c:	ldr	r2, [sp, #8]
   16140:	ldr	r3, [sp, #4]
   16144:	movw	r0, #0
   16148:	bl	1606c <__assert_fail@plt+0x4fb4>
   1614c:	mov	sp, fp
   16150:	pop	{fp, pc}
   16154:	push	{fp, lr}
   16158:	mov	fp, sp
   1615c:	sub	sp, sp, #24
   16160:	str	r0, [fp, #-4]
   16164:	str	r1, [fp, #-8]
   16168:	str	r2, [sp, #12]
   1616c:	str	r3, [sp, #8]
   16170:	ldr	r1, [fp, #-4]
   16174:	ldr	r2, [fp, #-8]
   16178:	ldr	r3, [sp, #12]
   1617c:	ldr	r0, [sp, #8]
   16180:	movw	ip, #0
   16184:	str	r0, [sp, #4]
   16188:	mov	r0, ip
   1618c:	ldr	ip, [sp, #4]
   16190:	str	ip, [sp]
   16194:	bl	160ac <__assert_fail@plt+0x4ff4>
   16198:	mov	sp, fp
   1619c:	pop	{fp, pc}
   161a0:	push	{fp, lr}
   161a4:	mov	fp, sp
   161a8:	sub	sp, sp, #16
   161ac:	str	r0, [fp, #-4]
   161b0:	str	r1, [sp, #8]
   161b4:	str	r2, [sp, #4]
   161b8:	ldr	r0, [fp, #-4]
   161bc:	ldr	r1, [sp, #8]
   161c0:	ldr	r2, [sp, #4]
   161c4:	movw	r3, #260	; 0x104
   161c8:	movt	r3, #3
   161cc:	bl	15a6c <__assert_fail@plt+0x49b4>
   161d0:	mov	sp, fp
   161d4:	pop	{fp, pc}
   161d8:	push	{fp, lr}
   161dc:	mov	fp, sp
   161e0:	sub	sp, sp, #8
   161e4:	str	r0, [sp, #4]
   161e8:	str	r1, [sp]
   161ec:	ldr	r1, [sp, #4]
   161f0:	ldr	r2, [sp]
   161f4:	movw	r0, #0
   161f8:	bl	161a0 <__assert_fail@plt+0x50e8>
   161fc:	mov	sp, fp
   16200:	pop	{fp, pc}
   16204:	push	{fp, lr}
   16208:	mov	fp, sp
   1620c:	sub	sp, sp, #8
   16210:	str	r0, [sp, #4]
   16214:	str	r1, [sp]
   16218:	ldr	r0, [sp, #4]
   1621c:	ldr	r1, [sp]
   16220:	mvn	r2, #0
   16224:	bl	161a0 <__assert_fail@plt+0x50e8>
   16228:	mov	sp, fp
   1622c:	pop	{fp, pc}
   16230:	push	{fp, lr}
   16234:	mov	fp, sp
   16238:	sub	sp, sp, #8
   1623c:	str	r0, [sp, #4]
   16240:	ldr	r1, [sp, #4]
   16244:	movw	r0, #0
   16248:	bl	16204 <__assert_fail@plt+0x514c>
   1624c:	mov	sp, fp
   16250:	pop	{fp, pc}
   16254:	push	{fp, lr}
   16258:	mov	fp, sp
   1625c:	sub	sp, sp, #24
   16260:	str	r0, [fp, #-8]
   16264:	str	r1, [sp, #12]
   16268:	ldr	r0, [fp, #-8]
   1626c:	bl	10fbc <gettext@plt>
   16270:	str	r0, [sp, #8]
   16274:	ldr	r0, [sp, #8]
   16278:	ldr	r1, [fp, #-8]
   1627c:	cmp	r0, r1
   16280:	beq	16290 <__assert_fail@plt+0x51d8>
   16284:	ldr	r0, [sp, #8]
   16288:	str	r0, [fp, #-4]
   1628c:	b	1635c <__assert_fail@plt+0x52a4>
   16290:	bl	1c484 <__assert_fail@plt+0xb3cc>
   16294:	str	r0, [sp, #4]
   16298:	ldr	r0, [sp, #4]
   1629c:	movw	r1, #60522	; 0xec6a
   162a0:	movt	r1, #1
   162a4:	bl	1c0e8 <__assert_fail@plt+0xb030>
   162a8:	cmp	r0, #0
   162ac:	bne	162e4 <__assert_fail@plt+0x522c>
   162b0:	ldr	r0, [fp, #-8]
   162b4:	ldrb	r0, [r0]
   162b8:	cmp	r0, #96	; 0x60
   162bc:	movw	r0, #0
   162c0:	moveq	r0, #1
   162c4:	tst	r0, #1
   162c8:	movw	r0, #60532	; 0xec74
   162cc:	movt	r0, #1
   162d0:	movw	r1, #60528	; 0xec70
   162d4:	movt	r1, #1
   162d8:	movne	r0, r1
   162dc:	str	r0, [fp, #-4]
   162e0:	b	1635c <__assert_fail@plt+0x52a4>
   162e4:	ldr	r0, [sp, #4]
   162e8:	movw	r1, #60536	; 0xec78
   162ec:	movt	r1, #1
   162f0:	bl	1c0e8 <__assert_fail@plt+0xb030>
   162f4:	cmp	r0, #0
   162f8:	bne	16330 <__assert_fail@plt+0x5278>
   162fc:	ldr	r0, [fp, #-8]
   16300:	ldrb	r0, [r0]
   16304:	cmp	r0, #96	; 0x60
   16308:	movw	r0, #0
   1630c:	moveq	r0, #1
   16310:	tst	r0, #1
   16314:	movw	r0, #60548	; 0xec84
   16318:	movt	r0, #1
   1631c:	movw	r1, #60544	; 0xec80
   16320:	movt	r1, #1
   16324:	movne	r0, r1
   16328:	str	r0, [fp, #-4]
   1632c:	b	1635c <__assert_fail@plt+0x52a4>
   16330:	ldr	r0, [sp, #12]
   16334:	cmp	r0, #9
   16338:	movw	r0, #0
   1633c:	moveq	r0, #1
   16340:	tst	r0, #1
   16344:	movw	r0, #60520	; 0xec68
   16348:	movt	r0, #1
   1634c:	movw	r1, #60116	; 0xead4
   16350:	movt	r1, #1
   16354:	movne	r0, r1
   16358:	str	r0, [fp, #-4]
   1635c:	ldr	r0, [fp, #-4]
   16360:	mov	sp, fp
   16364:	pop	{fp, pc}
   16368:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1636c:	add	fp, sp, #28
   16370:	sub	sp, sp, #260	; 0x104
   16374:	ldr	ip, [fp, #12]
   16378:	ldr	lr, [fp, #8]
   1637c:	str	r0, [fp, #-32]	; 0xffffffe0
   16380:	str	r1, [fp, #-36]	; 0xffffffdc
   16384:	str	r2, [fp, #-40]	; 0xffffffd8
   16388:	str	r3, [fp, #-44]	; 0xffffffd4
   1638c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16390:	movw	r1, #0
   16394:	cmp	r0, r1
   16398:	str	lr, [fp, #-48]	; 0xffffffd0
   1639c:	str	ip, [fp, #-52]	; 0xffffffcc
   163a0:	beq	163d8 <__assert_fail@plt+0x5320>
   163a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   163ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   163b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   163b4:	movw	ip, #60636	; 0xecdc
   163b8:	movt	ip, #1
   163bc:	str	r1, [fp, #-56]	; 0xffffffc8
   163c0:	mov	r1, ip
   163c4:	ldr	ip, [fp, #-56]	; 0xffffffc8
   163c8:	str	ip, [sp]
   163cc:	bl	10fe0 <fprintf@plt>
   163d0:	str	r0, [fp, #-60]	; 0xffffffc4
   163d4:	b	163f4 <__assert_fail@plt+0x533c>
   163d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   163e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   163e4:	movw	r1, #60648	; 0xece8
   163e8:	movt	r1, #1
   163ec:	bl	10fe0 <fprintf@plt>
   163f0:	str	r0, [fp, #-64]	; 0xffffffc0
   163f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163f8:	movw	r1, #60655	; 0xecef
   163fc:	movt	r1, #1
   16400:	str	r0, [fp, #-68]	; 0xffffffbc
   16404:	mov	r0, r1
   16408:	bl	10fbc <gettext@plt>
   1640c:	movw	r1, #61373	; 0xefbd
   16410:	movt	r1, #1
   16414:	movw	r3, #2022	; 0x7e6
   16418:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1641c:	str	r0, [fp, #-72]	; 0xffffffb8
   16420:	mov	r0, lr
   16424:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16428:	bl	10fe0 <fprintf@plt>
   1642c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16430:	movw	r2, #59956	; 0xea34
   16434:	movt	r2, #1
   16438:	str	r0, [fp, #-76]	; 0xffffffb4
   1643c:	mov	r0, r2
   16440:	str	r2, [fp, #-80]	; 0xffffffb0
   16444:	bl	10e54 <fputs_unlocked@plt>
   16448:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1644c:	movw	r2, #60659	; 0xecf3
   16450:	movt	r2, #1
   16454:	str	r0, [fp, #-84]	; 0xffffffac
   16458:	mov	r0, r2
   1645c:	str	r1, [fp, #-88]	; 0xffffffa8
   16460:	bl	10fbc <gettext@plt>
   16464:	movw	r2, #60830	; 0xed9e
   16468:	movt	r2, #1
   1646c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16470:	str	r0, [fp, #-92]	; 0xffffffa4
   16474:	mov	r0, r1
   16478:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1647c:	bl	10fe0 <fprintf@plt>
   16480:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16484:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16488:	str	r0, [fp, #-96]	; 0xffffffa0
   1648c:	mov	r0, r2
   16490:	bl	10e54 <fputs_unlocked@plt>
   16494:	ldr	r1, [fp, #12]
   16498:	cmp	r1, #9
   1649c:	str	r0, [fp, #-100]	; 0xffffff9c
   164a0:	str	r1, [fp, #-104]	; 0xffffff98
   164a4:	bhi	168e4 <__assert_fail@plt+0x582c>
   164a8:	add	r0, pc, #8
   164ac:	ldr	r1, [fp, #-104]	; 0xffffff98
   164b0:	ldr	r0, [r0, r1, lsl #2]
   164b4:	mov	pc, r0
   164b8:	andeq	r6, r1, r0, ror #9
   164bc:	andeq	r6, r1, r4, ror #9
   164c0:	andeq	r6, r1, r0, lsr #10
   164c4:	andeq	r6, r1, r4, ror #10
   164c8:	andeq	r6, r1, r0, asr #11
   164cc:	andeq	r6, r1, r8, lsr #12
   164d0:	muleq	r1, ip, r6
   164d4:	andeq	r6, r1, ip, lsl r7
   164d8:	andeq	r6, r1, r8, lsr #15
   164dc:	andeq	r6, r1, r0, asr #16
   164e0:	b	16984 <__assert_fail@plt+0x58cc>
   164e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   164e8:	movw	r1, #60864	; 0xedc0
   164ec:	movt	r1, #1
   164f0:	str	r0, [fp, #-108]	; 0xffffff94
   164f4:	mov	r0, r1
   164f8:	bl	10fbc <gettext@plt>
   164fc:	ldr	r1, [fp, #8]
   16500:	ldr	r2, [r1]
   16504:	ldr	r1, [fp, #-108]	; 0xffffff94
   16508:	str	r0, [fp, #-112]	; 0xffffff90
   1650c:	mov	r0, r1
   16510:	ldr	r1, [fp, #-112]	; 0xffffff90
   16514:	bl	10fe0 <fprintf@plt>
   16518:	str	r0, [fp, #-116]	; 0xffffff8c
   1651c:	b	16984 <__assert_fail@plt+0x58cc>
   16520:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16524:	movw	r1, #60880	; 0xedd0
   16528:	movt	r1, #1
   1652c:	str	r0, [fp, #-120]	; 0xffffff88
   16530:	mov	r0, r1
   16534:	bl	10fbc <gettext@plt>
   16538:	ldr	r1, [fp, #8]
   1653c:	ldr	r2, [r1]
   16540:	ldr	r1, [fp, #8]
   16544:	ldr	r3, [r1, #4]
   16548:	ldr	r1, [fp, #-120]	; 0xffffff88
   1654c:	str	r0, [fp, #-124]	; 0xffffff84
   16550:	mov	r0, r1
   16554:	ldr	r1, [fp, #-124]	; 0xffffff84
   16558:	bl	10fe0 <fprintf@plt>
   1655c:	str	r0, [fp, #-128]	; 0xffffff80
   16560:	b	16984 <__assert_fail@plt+0x58cc>
   16564:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16568:	movw	r1, #60903	; 0xede7
   1656c:	movt	r1, #1
   16570:	str	r0, [fp, #-132]	; 0xffffff7c
   16574:	mov	r0, r1
   16578:	bl	10fbc <gettext@plt>
   1657c:	ldr	r1, [fp, #8]
   16580:	ldr	r2, [r1]
   16584:	ldr	r1, [fp, #8]
   16588:	ldr	r3, [r1, #4]
   1658c:	ldr	r1, [fp, #8]
   16590:	ldr	r1, [r1, #8]
   16594:	ldr	lr, [fp, #-132]	; 0xffffff7c
   16598:	str	r0, [fp, #-136]	; 0xffffff78
   1659c:	mov	r0, lr
   165a0:	ldr	ip, [fp, #-136]	; 0xffffff78
   165a4:	str	r1, [fp, #-140]	; 0xffffff74
   165a8:	mov	r1, ip
   165ac:	ldr	r4, [fp, #-140]	; 0xffffff74
   165b0:	str	r4, [sp]
   165b4:	bl	10fe0 <fprintf@plt>
   165b8:	str	r0, [sp, #144]	; 0x90
   165bc:	b	16984 <__assert_fail@plt+0x58cc>
   165c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   165c4:	movw	r1, #60931	; 0xee03
   165c8:	movt	r1, #1
   165cc:	str	r0, [sp, #140]	; 0x8c
   165d0:	mov	r0, r1
   165d4:	bl	10fbc <gettext@plt>
   165d8:	ldr	r1, [fp, #8]
   165dc:	ldr	r2, [r1]
   165e0:	ldr	r1, [fp, #8]
   165e4:	ldr	r3, [r1, #4]
   165e8:	ldr	r1, [fp, #8]
   165ec:	ldr	r1, [r1, #8]
   165f0:	ldr	lr, [fp, #8]
   165f4:	ldr	lr, [lr, #12]
   165f8:	ldr	ip, [sp, #140]	; 0x8c
   165fc:	str	r0, [sp, #136]	; 0x88
   16600:	mov	r0, ip
   16604:	ldr	r4, [sp, #136]	; 0x88
   16608:	str	r1, [sp, #132]	; 0x84
   1660c:	mov	r1, r4
   16610:	ldr	r5, [sp, #132]	; 0x84
   16614:	str	r5, [sp]
   16618:	str	lr, [sp, #4]
   1661c:	bl	10fe0 <fprintf@plt>
   16620:	str	r0, [sp, #128]	; 0x80
   16624:	b	16984 <__assert_fail@plt+0x58cc>
   16628:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1662c:	movw	r1, #60963	; 0xee23
   16630:	movt	r1, #1
   16634:	str	r0, [sp, #124]	; 0x7c
   16638:	mov	r0, r1
   1663c:	bl	10fbc <gettext@plt>
   16640:	ldr	r1, [fp, #8]
   16644:	ldr	r2, [r1]
   16648:	ldr	r1, [fp, #8]
   1664c:	ldr	r3, [r1, #4]
   16650:	ldr	r1, [fp, #8]
   16654:	ldr	r1, [r1, #8]
   16658:	ldr	lr, [fp, #8]
   1665c:	ldr	lr, [lr, #12]
   16660:	ldr	ip, [fp, #8]
   16664:	ldr	ip, [ip, #16]
   16668:	ldr	r4, [sp, #124]	; 0x7c
   1666c:	str	r0, [sp, #120]	; 0x78
   16670:	mov	r0, r4
   16674:	ldr	r5, [sp, #120]	; 0x78
   16678:	str	r1, [sp, #116]	; 0x74
   1667c:	mov	r1, r5
   16680:	ldr	r6, [sp, #116]	; 0x74
   16684:	str	r6, [sp]
   16688:	str	lr, [sp, #4]
   1668c:	str	ip, [sp, #8]
   16690:	bl	10fe0 <fprintf@plt>
   16694:	str	r0, [sp, #112]	; 0x70
   16698:	b	16984 <__assert_fail@plt+0x58cc>
   1669c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   166a0:	movw	r1, #60999	; 0xee47
   166a4:	movt	r1, #1
   166a8:	str	r0, [sp, #108]	; 0x6c
   166ac:	mov	r0, r1
   166b0:	bl	10fbc <gettext@plt>
   166b4:	ldr	r1, [fp, #8]
   166b8:	ldr	r2, [r1]
   166bc:	ldr	r1, [fp, #8]
   166c0:	ldr	r3, [r1, #4]
   166c4:	ldr	r1, [fp, #8]
   166c8:	ldr	r1, [r1, #8]
   166cc:	ldr	lr, [fp, #8]
   166d0:	ldr	lr, [lr, #12]
   166d4:	ldr	ip, [fp, #8]
   166d8:	ldr	ip, [ip, #16]
   166dc:	ldr	r4, [fp, #8]
   166e0:	ldr	r4, [r4, #20]
   166e4:	ldr	r5, [sp, #108]	; 0x6c
   166e8:	str	r0, [sp, #104]	; 0x68
   166ec:	mov	r0, r5
   166f0:	ldr	r6, [sp, #104]	; 0x68
   166f4:	str	r1, [sp, #100]	; 0x64
   166f8:	mov	r1, r6
   166fc:	ldr	r7, [sp, #100]	; 0x64
   16700:	str	r7, [sp]
   16704:	str	lr, [sp, #4]
   16708:	str	ip, [sp, #8]
   1670c:	str	r4, [sp, #12]
   16710:	bl	10fe0 <fprintf@plt>
   16714:	str	r0, [sp, #96]	; 0x60
   16718:	b	16984 <__assert_fail@plt+0x58cc>
   1671c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16720:	movw	r1, #61039	; 0xee6f
   16724:	movt	r1, #1
   16728:	str	r0, [sp, #92]	; 0x5c
   1672c:	mov	r0, r1
   16730:	bl	10fbc <gettext@plt>
   16734:	ldr	r1, [fp, #8]
   16738:	ldr	r2, [r1]
   1673c:	ldr	r1, [fp, #8]
   16740:	ldr	r3, [r1, #4]
   16744:	ldr	r1, [fp, #8]
   16748:	ldr	r1, [r1, #8]
   1674c:	ldr	lr, [fp, #8]
   16750:	ldr	lr, [lr, #12]
   16754:	ldr	ip, [fp, #8]
   16758:	ldr	ip, [ip, #16]
   1675c:	ldr	r4, [fp, #8]
   16760:	ldr	r4, [r4, #20]
   16764:	ldr	r5, [fp, #8]
   16768:	ldr	r5, [r5, #24]
   1676c:	ldr	r6, [sp, #92]	; 0x5c
   16770:	str	r0, [sp, #88]	; 0x58
   16774:	mov	r0, r6
   16778:	ldr	r7, [sp, #88]	; 0x58
   1677c:	str	r1, [sp, #84]	; 0x54
   16780:	mov	r1, r7
   16784:	ldr	r8, [sp, #84]	; 0x54
   16788:	str	r8, [sp]
   1678c:	str	lr, [sp, #4]
   16790:	str	ip, [sp, #8]
   16794:	str	r4, [sp, #12]
   16798:	str	r5, [sp, #16]
   1679c:	bl	10fe0 <fprintf@plt>
   167a0:	str	r0, [sp, #80]	; 0x50
   167a4:	b	16984 <__assert_fail@plt+0x58cc>
   167a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   167ac:	movw	r1, #61083	; 0xee9b
   167b0:	movt	r1, #1
   167b4:	str	r0, [sp, #76]	; 0x4c
   167b8:	mov	r0, r1
   167bc:	bl	10fbc <gettext@plt>
   167c0:	ldr	r1, [fp, #8]
   167c4:	ldr	r2, [r1]
   167c8:	ldr	r1, [fp, #8]
   167cc:	ldr	r3, [r1, #4]
   167d0:	ldr	r1, [fp, #8]
   167d4:	ldr	r1, [r1, #8]
   167d8:	ldr	lr, [fp, #8]
   167dc:	ldr	lr, [lr, #12]
   167e0:	ldr	ip, [fp, #8]
   167e4:	ldr	ip, [ip, #16]
   167e8:	ldr	r4, [fp, #8]
   167ec:	ldr	r4, [r4, #20]
   167f0:	ldr	r5, [fp, #8]
   167f4:	ldr	r5, [r5, #24]
   167f8:	ldr	r6, [fp, #8]
   167fc:	ldr	r6, [r6, #28]
   16800:	ldr	r7, [sp, #76]	; 0x4c
   16804:	str	r0, [sp, #72]	; 0x48
   16808:	mov	r0, r7
   1680c:	ldr	r8, [sp, #72]	; 0x48
   16810:	str	r1, [sp, #68]	; 0x44
   16814:	mov	r1, r8
   16818:	ldr	r9, [sp, #68]	; 0x44
   1681c:	str	r9, [sp]
   16820:	str	lr, [sp, #4]
   16824:	str	ip, [sp, #8]
   16828:	str	r4, [sp, #12]
   1682c:	str	r5, [sp, #16]
   16830:	str	r6, [sp, #20]
   16834:	bl	10fe0 <fprintf@plt>
   16838:	str	r0, [sp, #64]	; 0x40
   1683c:	b	16984 <__assert_fail@plt+0x58cc>
   16840:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16844:	movw	r1, #61131	; 0xeecb
   16848:	movt	r1, #1
   1684c:	str	r0, [sp, #60]	; 0x3c
   16850:	mov	r0, r1
   16854:	bl	10fbc <gettext@plt>
   16858:	ldr	r1, [fp, #8]
   1685c:	ldr	r2, [r1]
   16860:	ldr	r1, [fp, #8]
   16864:	ldr	r3, [r1, #4]
   16868:	ldr	r1, [fp, #8]
   1686c:	ldr	r1, [r1, #8]
   16870:	ldr	lr, [fp, #8]
   16874:	ldr	lr, [lr, #12]
   16878:	ldr	ip, [fp, #8]
   1687c:	ldr	ip, [ip, #16]
   16880:	ldr	r4, [fp, #8]
   16884:	ldr	r4, [r4, #20]
   16888:	ldr	r5, [fp, #8]
   1688c:	ldr	r5, [r5, #24]
   16890:	ldr	r6, [fp, #8]
   16894:	ldr	r6, [r6, #28]
   16898:	ldr	r7, [fp, #8]
   1689c:	ldr	r7, [r7, #32]
   168a0:	ldr	r8, [sp, #60]	; 0x3c
   168a4:	str	r0, [sp, #56]	; 0x38
   168a8:	mov	r0, r8
   168ac:	ldr	r9, [sp, #56]	; 0x38
   168b0:	str	r1, [sp, #52]	; 0x34
   168b4:	mov	r1, r9
   168b8:	ldr	sl, [sp, #52]	; 0x34
   168bc:	str	sl, [sp]
   168c0:	str	lr, [sp, #4]
   168c4:	str	ip, [sp, #8]
   168c8:	str	r4, [sp, #12]
   168cc:	str	r5, [sp, #16]
   168d0:	str	r6, [sp, #20]
   168d4:	str	r7, [sp, #24]
   168d8:	bl	10fe0 <fprintf@plt>
   168dc:	str	r0, [sp, #48]	; 0x30
   168e0:	b	16984 <__assert_fail@plt+0x58cc>
   168e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   168e8:	movw	r1, #61183	; 0xeeff
   168ec:	movt	r1, #1
   168f0:	str	r0, [sp, #44]	; 0x2c
   168f4:	mov	r0, r1
   168f8:	bl	10fbc <gettext@plt>
   168fc:	ldr	r1, [fp, #8]
   16900:	ldr	r2, [r1]
   16904:	ldr	r1, [fp, #8]
   16908:	ldr	r3, [r1, #4]
   1690c:	ldr	r1, [fp, #8]
   16910:	ldr	r1, [r1, #8]
   16914:	ldr	lr, [fp, #8]
   16918:	ldr	lr, [lr, #12]
   1691c:	ldr	ip, [fp, #8]
   16920:	ldr	ip, [ip, #16]
   16924:	ldr	r4, [fp, #8]
   16928:	ldr	r4, [r4, #20]
   1692c:	ldr	r5, [fp, #8]
   16930:	ldr	r5, [r5, #24]
   16934:	ldr	r6, [fp, #8]
   16938:	ldr	r6, [r6, #28]
   1693c:	ldr	r7, [fp, #8]
   16940:	ldr	r7, [r7, #32]
   16944:	ldr	r8, [sp, #44]	; 0x2c
   16948:	str	r0, [sp, #40]	; 0x28
   1694c:	mov	r0, r8
   16950:	ldr	r9, [sp, #40]	; 0x28
   16954:	str	r1, [sp, #36]	; 0x24
   16958:	mov	r1, r9
   1695c:	ldr	sl, [sp, #36]	; 0x24
   16960:	str	sl, [sp]
   16964:	str	lr, [sp, #4]
   16968:	str	ip, [sp, #8]
   1696c:	str	r4, [sp, #12]
   16970:	str	r5, [sp, #16]
   16974:	str	r6, [sp, #20]
   16978:	str	r7, [sp, #24]
   1697c:	bl	10fe0 <fprintf@plt>
   16980:	str	r0, [sp, #32]
   16984:	sub	sp, fp, #28
   16988:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1698c:	push	{fp, lr}
   16990:	mov	fp, sp
   16994:	sub	sp, sp, #32
   16998:	ldr	ip, [fp, #8]
   1699c:	str	r0, [fp, #-4]
   169a0:	str	r1, [fp, #-8]
   169a4:	str	r2, [fp, #-12]
   169a8:	str	r3, [sp, #16]
   169ac:	movw	r0, #0
   169b0:	str	r0, [sp, #12]
   169b4:	str	ip, [sp, #8]
   169b8:	ldr	r0, [fp, #8]
   169bc:	ldr	r1, [sp, #12]
   169c0:	add	r0, r0, r1, lsl #2
   169c4:	ldr	r0, [r0]
   169c8:	movw	r1, #0
   169cc:	cmp	r0, r1
   169d0:	beq	169e8 <__assert_fail@plt+0x5930>
   169d4:	b	169d8 <__assert_fail@plt+0x5920>
   169d8:	ldr	r0, [sp, #12]
   169dc:	add	r0, r0, #1
   169e0:	str	r0, [sp, #12]
   169e4:	b	169b8 <__assert_fail@plt+0x5900>
   169e8:	ldr	r0, [fp, #-4]
   169ec:	ldr	r1, [fp, #-8]
   169f0:	ldr	r2, [fp, #-12]
   169f4:	ldr	r3, [sp, #16]
   169f8:	ldr	ip, [fp, #8]
   169fc:	ldr	lr, [sp, #12]
   16a00:	str	ip, [sp]
   16a04:	str	lr, [sp, #4]
   16a08:	bl	16368 <__assert_fail@plt+0x52b0>
   16a0c:	mov	sp, fp
   16a10:	pop	{fp, pc}
   16a14:	push	{fp, lr}
   16a18:	mov	fp, sp
   16a1c:	sub	sp, sp, #80	; 0x50
   16a20:	ldr	ip, [fp, #8]
   16a24:	str	ip, [fp, #-4]
   16a28:	str	r0, [fp, #-8]
   16a2c:	str	r1, [fp, #-12]
   16a30:	str	r2, [fp, #-16]
   16a34:	str	r3, [fp, #-20]	; 0xffffffec
   16a38:	movw	r0, #0
   16a3c:	str	r0, [fp, #-24]	; 0xffffffe8
   16a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a44:	cmp	r0, #10
   16a48:	movw	r0, #0
   16a4c:	str	r0, [sp, #12]
   16a50:	bcs	16a88 <__assert_fail@plt+0x59d0>
   16a54:	ldr	r0, [fp, #-4]
   16a58:	add	r1, r0, #4
   16a5c:	str	r1, [fp, #-4]
   16a60:	ldr	r0, [r0]
   16a64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a68:	add	r2, sp, #16
   16a6c:	add	r1, r2, r1, lsl #2
   16a70:	str	r0, [r1]
   16a74:	movw	r1, #0
   16a78:	cmp	r0, r1
   16a7c:	movw	r0, #0
   16a80:	movne	r0, #1
   16a84:	str	r0, [sp, #12]
   16a88:	ldr	r0, [sp, #12]
   16a8c:	tst	r0, #1
   16a90:	beq	16aa8 <__assert_fail@plt+0x59f0>
   16a94:	b	16a98 <__assert_fail@plt+0x59e0>
   16a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a9c:	add	r0, r0, #1
   16aa0:	str	r0, [fp, #-24]	; 0xffffffe8
   16aa4:	b	16a40 <__assert_fail@plt+0x5988>
   16aa8:	add	r0, sp, #16
   16aac:	ldr	r1, [fp, #-8]
   16ab0:	ldr	r2, [fp, #-12]
   16ab4:	ldr	r3, [fp, #-16]
   16ab8:	ldr	ip, [fp, #-20]	; 0xffffffec
   16abc:	ldr	lr, [fp, #-24]	; 0xffffffe8
   16ac0:	str	r0, [sp, #8]
   16ac4:	mov	r0, r1
   16ac8:	mov	r1, r2
   16acc:	mov	r2, r3
   16ad0:	mov	r3, ip
   16ad4:	ldr	ip, [sp, #8]
   16ad8:	str	ip, [sp]
   16adc:	str	lr, [sp, #4]
   16ae0:	bl	16368 <__assert_fail@plt+0x52b0>
   16ae4:	mov	sp, fp
   16ae8:	pop	{fp, pc}
   16aec:	push	{fp, lr}
   16af0:	mov	fp, sp
   16af4:	sub	sp, sp, #32
   16af8:	str	r0, [fp, #-4]
   16afc:	str	r1, [fp, #-8]
   16b00:	str	r2, [fp, #-12]
   16b04:	str	r3, [sp, #16]
   16b08:	add	r0, fp, #8
   16b0c:	str	r0, [sp, #12]
   16b10:	ldr	r0, [fp, #-4]
   16b14:	ldr	r1, [fp, #-8]
   16b18:	ldr	r2, [fp, #-12]
   16b1c:	ldr	r3, [sp, #16]
   16b20:	ldr	ip, [sp, #12]
   16b24:	mov	lr, sp
   16b28:	str	ip, [lr]
   16b2c:	bl	16a14 <__assert_fail@plt+0x595c>
   16b30:	add	r0, sp, #12
   16b34:	str	r0, [sp, #8]
   16b38:	mov	sp, fp
   16b3c:	pop	{fp, pc}
   16b40:	push	{fp, lr}
   16b44:	mov	fp, sp
   16b48:	sub	sp, sp, #16
   16b4c:	movw	r0, #340	; 0x154
   16b50:	movt	r0, #3
   16b54:	ldr	r1, [r0]
   16b58:	movw	r0, #59956	; 0xea34
   16b5c:	movt	r0, #1
   16b60:	bl	10e54 <fputs_unlocked@plt>
   16b64:	movw	r1, #61243	; 0xef3b
   16b68:	movt	r1, #1
   16b6c:	str	r0, [fp, #-4]
   16b70:	mov	r0, r1
   16b74:	bl	10fbc <gettext@plt>
   16b78:	movw	r1, #61263	; 0xef4f
   16b7c:	movt	r1, #1
   16b80:	bl	10e84 <printf@plt>
   16b84:	movw	r1, #61285	; 0xef65
   16b88:	movt	r1, #1
   16b8c:	str	r0, [sp, #8]
   16b90:	mov	r0, r1
   16b94:	bl	10fbc <gettext@plt>
   16b98:	movw	r1, #59424	; 0xe820
   16b9c:	movt	r1, #1
   16ba0:	movw	r2, #59765	; 0xe975
   16ba4:	movt	r2, #1
   16ba8:	bl	10e84 <printf@plt>
   16bac:	movw	r1, #61305	; 0xef79
   16bb0:	movt	r1, #1
   16bb4:	str	r0, [sp, #4]
   16bb8:	mov	r0, r1
   16bbc:	bl	10fbc <gettext@plt>
   16bc0:	movw	r1, #61344	; 0xefa0
   16bc4:	movt	r1, #1
   16bc8:	bl	10e84 <printf@plt>
   16bcc:	str	r0, [sp]
   16bd0:	mov	sp, fp
   16bd4:	pop	{fp, pc}
   16bd8:	push	{fp, lr}
   16bdc:	mov	fp, sp
   16be0:	sub	sp, sp, #16
   16be4:	str	r0, [fp, #-4]
   16be8:	str	r1, [sp, #8]
   16bec:	str	r2, [sp, #4]
   16bf0:	ldr	r0, [fp, #-4]
   16bf4:	ldr	r1, [sp, #8]
   16bf8:	ldr	r2, [sp, #4]
   16bfc:	bl	16c08 <__assert_fail@plt+0x5b50>
   16c00:	mov	sp, fp
   16c04:	pop	{fp, pc}
   16c08:	push	{fp, lr}
   16c0c:	mov	fp, sp
   16c10:	sub	sp, sp, #16
   16c14:	str	r0, [fp, #-4]
   16c18:	str	r1, [sp, #8]
   16c1c:	str	r2, [sp, #4]
   16c20:	ldr	r0, [fp, #-4]
   16c24:	ldr	r1, [sp, #8]
   16c28:	ldr	r2, [sp, #4]
   16c2c:	bl	1c590 <__assert_fail@plt+0xb4d8>
   16c30:	str	r0, [sp]
   16c34:	ldr	r0, [sp]
   16c38:	movw	r1, #0
   16c3c:	cmp	r0, r1
   16c40:	bne	16c70 <__assert_fail@plt+0x5bb8>
   16c44:	ldr	r0, [fp, #-4]
   16c48:	movw	r1, #0
   16c4c:	cmp	r0, r1
   16c50:	beq	16c6c <__assert_fail@plt+0x5bb4>
   16c54:	ldr	r0, [sp, #8]
   16c58:	cmp	r0, #0
   16c5c:	beq	16c70 <__assert_fail@plt+0x5bb8>
   16c60:	ldr	r0, [sp, #4]
   16c64:	cmp	r0, #0
   16c68:	beq	16c70 <__assert_fail@plt+0x5bb8>
   16c6c:	bl	19a58 <__assert_fail@plt+0x89a0>
   16c70:	ldr	r0, [sp]
   16c74:	mov	sp, fp
   16c78:	pop	{fp, pc}
   16c7c:	push	{fp, lr}
   16c80:	mov	fp, sp
   16c84:	sub	sp, sp, #8
   16c88:	str	r0, [sp, #4]
   16c8c:	ldr	r0, [sp, #4]
   16c90:	bl	1bfd4 <__assert_fail@plt+0xaf1c>
   16c94:	bl	16ca0 <__assert_fail@plt+0x5be8>
   16c98:	mov	sp, fp
   16c9c:	pop	{fp, pc}
   16ca0:	push	{fp, lr}
   16ca4:	mov	fp, sp
   16ca8:	sub	sp, sp, #8
   16cac:	str	r0, [sp, #4]
   16cb0:	ldr	r0, [sp, #4]
   16cb4:	movw	r1, #0
   16cb8:	cmp	r0, r1
   16cbc:	bne	16cc4 <__assert_fail@plt+0x5c0c>
   16cc0:	bl	19a58 <__assert_fail@plt+0x89a0>
   16cc4:	ldr	r0, [sp, #4]
   16cc8:	mov	sp, fp
   16ccc:	pop	{fp, pc}
   16cd0:	push	{fp, lr}
   16cd4:	mov	fp, sp
   16cd8:	sub	sp, sp, #8
   16cdc:	str	r0, [sp, #4]
   16ce0:	ldr	r0, [sp, #4]
   16ce4:	bl	1c2cc <__assert_fail@plt+0xb214>
   16ce8:	bl	16ca0 <__assert_fail@plt+0x5be8>
   16cec:	mov	sp, fp
   16cf0:	pop	{fp, pc}
   16cf4:	push	{fp, lr}
   16cf8:	mov	fp, sp
   16cfc:	sub	sp, sp, #8
   16d00:	str	r0, [sp, #4]
   16d04:	ldr	r0, [sp, #4]
   16d08:	bl	16c7c <__assert_fail@plt+0x5bc4>
   16d0c:	mov	sp, fp
   16d10:	pop	{fp, pc}
   16d14:	push	{fp, lr}
   16d18:	mov	fp, sp
   16d1c:	sub	sp, sp, #16
   16d20:	str	r0, [fp, #-4]
   16d24:	str	r1, [sp, #8]
   16d28:	ldr	r0, [fp, #-4]
   16d2c:	ldr	r1, [sp, #8]
   16d30:	bl	1c044 <__assert_fail@plt+0xaf8c>
   16d34:	str	r0, [sp, #4]
   16d38:	ldr	r0, [sp, #4]
   16d3c:	movw	r1, #0
   16d40:	cmp	r0, r1
   16d44:	bne	16d68 <__assert_fail@plt+0x5cb0>
   16d48:	ldr	r0, [fp, #-4]
   16d4c:	movw	r1, #0
   16d50:	cmp	r0, r1
   16d54:	beq	16d64 <__assert_fail@plt+0x5cac>
   16d58:	ldr	r0, [sp, #8]
   16d5c:	cmp	r0, #0
   16d60:	beq	16d68 <__assert_fail@plt+0x5cb0>
   16d64:	bl	19a58 <__assert_fail@plt+0x89a0>
   16d68:	ldr	r0, [sp, #4]
   16d6c:	mov	sp, fp
   16d70:	pop	{fp, pc}
   16d74:	push	{fp, lr}
   16d78:	mov	fp, sp
   16d7c:	sub	sp, sp, #8
   16d80:	str	r0, [sp, #4]
   16d84:	str	r1, [sp]
   16d88:	ldr	r0, [sp, #4]
   16d8c:	ldr	r1, [sp]
   16d90:	bl	1c30c <__assert_fail@plt+0xb254>
   16d94:	bl	16ca0 <__assert_fail@plt+0x5be8>
   16d98:	mov	sp, fp
   16d9c:	pop	{fp, pc}
   16da0:	push	{fp, lr}
   16da4:	mov	fp, sp
   16da8:	sub	sp, sp, #16
   16dac:	str	r0, [fp, #-4]
   16db0:	str	r1, [sp, #8]
   16db4:	str	r2, [sp, #4]
   16db8:	ldr	r0, [fp, #-4]
   16dbc:	ldr	r1, [sp, #8]
   16dc0:	ldr	r2, [sp, #4]
   16dc4:	bl	1c404 <__assert_fail@plt+0xb34c>
   16dc8:	bl	16ca0 <__assert_fail@plt+0x5be8>
   16dcc:	mov	sp, fp
   16dd0:	pop	{fp, pc}
   16dd4:	push	{fp, lr}
   16dd8:	mov	fp, sp
   16ddc:	sub	sp, sp, #8
   16de0:	str	r0, [sp, #4]
   16de4:	str	r1, [sp]
   16de8:	ldr	r1, [sp, #4]
   16dec:	ldr	r2, [sp]
   16df0:	movw	r0, #0
   16df4:	bl	16c08 <__assert_fail@plt+0x5b50>
   16df8:	mov	sp, fp
   16dfc:	pop	{fp, pc}
   16e00:	push	{fp, lr}
   16e04:	mov	fp, sp
   16e08:	sub	sp, sp, #8
   16e0c:	str	r0, [sp, #4]
   16e10:	str	r1, [sp]
   16e14:	ldr	r1, [sp, #4]
   16e18:	ldr	r2, [sp]
   16e1c:	movw	r0, #0
   16e20:	bl	16da0 <__assert_fail@plt+0x5ce8>
   16e24:	mov	sp, fp
   16e28:	pop	{fp, pc}
   16e2c:	push	{fp, lr}
   16e30:	mov	fp, sp
   16e34:	sub	sp, sp, #8
   16e38:	str	r0, [sp, #4]
   16e3c:	str	r1, [sp]
   16e40:	ldr	r0, [sp, #4]
   16e44:	ldr	r1, [sp]
   16e48:	movw	r2, #1
   16e4c:	bl	16e58 <__assert_fail@plt+0x5da0>
   16e50:	mov	sp, fp
   16e54:	pop	{fp, pc}
   16e58:	push	{fp, lr}
   16e5c:	mov	fp, sp
   16e60:	sub	sp, sp, #16
   16e64:	str	r0, [fp, #-4]
   16e68:	str	r1, [sp, #8]
   16e6c:	str	r2, [sp, #4]
   16e70:	ldr	r0, [sp, #8]
   16e74:	ldr	r0, [r0]
   16e78:	str	r0, [sp]
   16e7c:	ldr	r0, [fp, #-4]
   16e80:	movw	r1, #0
   16e84:	cmp	r0, r1
   16e88:	bne	16ed4 <__assert_fail@plt+0x5e1c>
   16e8c:	ldr	r0, [sp]
   16e90:	cmp	r0, #0
   16e94:	bne	16ed0 <__assert_fail@plt+0x5e18>
   16e98:	ldr	r0, [sp, #4]
   16e9c:	movw	r1, #64	; 0x40
   16ea0:	udiv	r0, r1, r0
   16ea4:	str	r0, [sp]
   16ea8:	ldr	r0, [sp]
   16eac:	cmp	r0, #0
   16eb0:	movw	r0, #0
   16eb4:	movne	r0, #1
   16eb8:	mvn	r1, #0
   16ebc:	eor	r0, r0, r1
   16ec0:	and	r0, r0, #1
   16ec4:	ldr	r1, [sp]
   16ec8:	add	r0, r1, r0
   16ecc:	str	r0, [sp]
   16ed0:	b	16f04 <__assert_fail@plt+0x5e4c>
   16ed4:	ldr	r0, [sp]
   16ed8:	ldr	r1, [sp]
   16edc:	lsr	r1, r1, #1
   16ee0:	add	r1, r1, #1
   16ee4:	adds	r0, r0, r1
   16ee8:	mov	r1, #0
   16eec:	adc	r1, r1, #0
   16ef0:	str	r0, [sp]
   16ef4:	tst	r1, #1
   16ef8:	beq	16f00 <__assert_fail@plt+0x5e48>
   16efc:	bl	19a58 <__assert_fail@plt+0x89a0>
   16f00:	b	16f04 <__assert_fail@plt+0x5e4c>
   16f04:	ldr	r0, [fp, #-4]
   16f08:	ldr	r1, [sp]
   16f0c:	ldr	r2, [sp, #4]
   16f10:	bl	16c08 <__assert_fail@plt+0x5b50>
   16f14:	str	r0, [fp, #-4]
   16f18:	ldr	r0, [sp]
   16f1c:	ldr	r1, [sp, #8]
   16f20:	str	r0, [r1]
   16f24:	ldr	r0, [fp, #-4]
   16f28:	mov	sp, fp
   16f2c:	pop	{fp, pc}
   16f30:	push	{fp, lr}
   16f34:	mov	fp, sp
   16f38:	sub	sp, sp, #376	; 0x178
   16f3c:	ldr	ip, [fp, #8]
   16f40:	str	r0, [fp, #-4]
   16f44:	str	r1, [fp, #-8]
   16f48:	str	r2, [fp, #-12]
   16f4c:	str	r3, [fp, #-16]
   16f50:	ldr	r0, [fp, #-8]
   16f54:	ldr	r0, [r0]
   16f58:	str	r0, [fp, #-20]	; 0xffffffec
   16f5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16f60:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f64:	asr	r1, r1, #1
   16f68:	add	r1, r0, r1
   16f6c:	mov	r2, #1
   16f70:	cmp	r1, r0
   16f74:	movwvc	r2, #0
   16f78:	str	r1, [fp, #-24]	; 0xffffffe8
   16f7c:	tst	r2, #1
   16f80:	str	ip, [fp, #-36]	; 0xffffffdc
   16f84:	beq	16f90 <__assert_fail@plt+0x5ed8>
   16f88:	ldr	r0, [pc, #4044]	; 17f5c <__assert_fail@plt+0x6ea4>
   16f8c:	str	r0, [fp, #-24]	; 0xffffffe8
   16f90:	ldr	r0, [fp, #-16]
   16f94:	movw	r1, #0
   16f98:	cmp	r1, r0
   16f9c:	bgt	16fb8 <__assert_fail@plt+0x5f00>
   16fa0:	ldr	r0, [fp, #-16]
   16fa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fa8:	cmp	r0, r1
   16fac:	bge	16fb8 <__assert_fail@plt+0x5f00>
   16fb0:	ldr	r0, [fp, #-16]
   16fb4:	str	r0, [fp, #-24]	; 0xffffffe8
   16fb8:	b	17390 <__assert_fail@plt+0x62d8>
   16fbc:	b	16fc0 <__assert_fail@plt+0x5f08>
   16fc0:	ldr	r0, [fp, #8]
   16fc4:	cmp	r0, #0
   16fc8:	bge	170dc <__assert_fail@plt+0x6024>
   16fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fd0:	cmp	r0, #0
   16fd4:	bge	17060 <__assert_fail@plt+0x5fa8>
   16fd8:	b	16fdc <__assert_fail@plt+0x5f24>
   16fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fe0:	ldr	r1, [fp, #8]
   16fe4:	movw	r2, #127	; 0x7f
   16fe8:	sdiv	r1, r2, r1
   16fec:	cmp	r0, r1
   16ff0:	blt	1717c <__assert_fail@plt+0x60c4>
   16ff4:	b	17194 <__assert_fail@plt+0x60dc>
   16ff8:	b	16ffc <__assert_fail@plt+0x5f44>
   16ffc:	ldr	r0, [pc, #4076]	; 17ff0 <__assert_fail@plt+0x6f38>
   17000:	ldr	r1, [fp, #8]
   17004:	cmp	r1, r0
   17008:	blt	17020 <__assert_fail@plt+0x5f68>
   1700c:	b	1702c <__assert_fail@plt+0x5f74>
   17010:	ldr	r0, [fp, #8]
   17014:	movw	r1, #0
   17018:	cmp	r1, r0
   1701c:	bge	1702c <__assert_fail@plt+0x5f74>
   17020:	movw	r0, #0
   17024:	str	r0, [fp, #-40]	; 0xffffffd8
   17028:	b	17044 <__assert_fail@plt+0x5f8c>
   1702c:	ldr	r0, [fp, #8]
   17030:	movw	r1, #0
   17034:	sub	r0, r1, r0
   17038:	movw	r1, #127	; 0x7f
   1703c:	sdiv	r0, r1, r0
   17040:	str	r0, [fp, #-40]	; 0xffffffd8
   17044:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17048:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1704c:	mvn	r2, #0
   17050:	sub	r1, r2, r1
   17054:	cmp	r0, r1
   17058:	ble	1717c <__assert_fail@plt+0x60c4>
   1705c:	b	17194 <__assert_fail@plt+0x60dc>
   17060:	b	17064 <__assert_fail@plt+0x5fac>
   17064:	b	170c0 <__assert_fail@plt+0x6008>
   17068:	b	170c0 <__assert_fail@plt+0x6008>
   1706c:	ldr	r0, [fp, #8]
   17070:	cmn	r0, #1
   17074:	bne	170c0 <__assert_fail@plt+0x6008>
   17078:	b	1707c <__assert_fail@plt+0x5fc4>
   1707c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17080:	mvn	r1, #127	; 0x7f
   17084:	add	r0, r0, r1
   17088:	movw	r1, #0
   1708c:	cmp	r1, r0
   17090:	blt	1717c <__assert_fail@plt+0x60c4>
   17094:	b	17194 <__assert_fail@plt+0x60dc>
   17098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1709c:	movw	r1, #0
   170a0:	cmp	r1, r0
   170a4:	bge	17194 <__assert_fail@plt+0x60dc>
   170a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170ac:	sub	r0, r0, #1
   170b0:	movw	r1, #127	; 0x7f
   170b4:	cmp	r1, r0
   170b8:	blt	1717c <__assert_fail@plt+0x60c4>
   170bc:	b	17194 <__assert_fail@plt+0x60dc>
   170c0:	ldr	r0, [fp, #8]
   170c4:	mvn	r1, #127	; 0x7f
   170c8:	sdiv	r0, r1, r0
   170cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170d0:	cmp	r0, r1
   170d4:	blt	1717c <__assert_fail@plt+0x60c4>
   170d8:	b	17194 <__assert_fail@plt+0x60dc>
   170dc:	ldr	r0, [fp, #8]
   170e0:	cmp	r0, #0
   170e4:	bne	170ec <__assert_fail@plt+0x6034>
   170e8:	b	17194 <__assert_fail@plt+0x60dc>
   170ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170f0:	cmp	r0, #0
   170f4:	bge	17164 <__assert_fail@plt+0x60ac>
   170f8:	b	170fc <__assert_fail@plt+0x6044>
   170fc:	b	17148 <__assert_fail@plt+0x6090>
   17100:	b	17148 <__assert_fail@plt+0x6090>
   17104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17108:	cmn	r0, #1
   1710c:	bne	17148 <__assert_fail@plt+0x6090>
   17110:	b	17114 <__assert_fail@plt+0x605c>
   17114:	ldr	r0, [fp, #8]
   17118:	mvn	r1, #127	; 0x7f
   1711c:	add	r0, r0, r1
   17120:	movw	r1, #0
   17124:	cmp	r1, r0
   17128:	blt	1717c <__assert_fail@plt+0x60c4>
   1712c:	b	17194 <__assert_fail@plt+0x60dc>
   17130:	ldr	r0, [fp, #8]
   17134:	sub	r0, r0, #1
   17138:	movw	r1, #127	; 0x7f
   1713c:	cmp	r1, r0
   17140:	blt	1717c <__assert_fail@plt+0x60c4>
   17144:	b	17194 <__assert_fail@plt+0x60dc>
   17148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1714c:	mvn	r1, #127	; 0x7f
   17150:	sdiv	r0, r1, r0
   17154:	ldr	r1, [fp, #8]
   17158:	cmp	r0, r1
   1715c:	blt	1717c <__assert_fail@plt+0x60c4>
   17160:	b	17194 <__assert_fail@plt+0x60dc>
   17164:	ldr	r0, [fp, #8]
   17168:	movw	r1, #127	; 0x7f
   1716c:	sdiv	r0, r1, r0
   17170:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17174:	cmp	r0, r1
   17178:	bge	17194 <__assert_fail@plt+0x60dc>
   1717c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17180:	ldr	r1, [fp, #8]
   17184:	mul	r0, r0, r1
   17188:	sxtb	r0, r0
   1718c:	str	r0, [fp, #-28]	; 0xffffffe4
   17190:	b	183a8 <__assert_fail@plt+0x72f0>
   17194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17198:	ldr	r1, [fp, #8]
   1719c:	mul	r0, r0, r1
   171a0:	sxtb	r0, r0
   171a4:	str	r0, [fp, #-28]	; 0xffffffe4
   171a8:	b	183b8 <__assert_fail@plt+0x7300>
   171ac:	ldr	r0, [fp, #8]
   171b0:	cmp	r0, #0
   171b4:	bge	172c4 <__assert_fail@plt+0x620c>
   171b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171bc:	cmp	r0, #0
   171c0:	bge	1724c <__assert_fail@plt+0x6194>
   171c4:	b	171c8 <__assert_fail@plt+0x6110>
   171c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171cc:	ldr	r1, [fp, #8]
   171d0:	movw	r2, #255	; 0xff
   171d4:	sdiv	r1, r2, r1
   171d8:	cmp	r0, r1
   171dc:	blt	17360 <__assert_fail@plt+0x62a8>
   171e0:	b	17378 <__assert_fail@plt+0x62c0>
   171e4:	b	171e8 <__assert_fail@plt+0x6130>
   171e8:	ldr	r0, [pc, #3584]	; 17ff0 <__assert_fail@plt+0x6f38>
   171ec:	ldr	r1, [fp, #8]
   171f0:	cmp	r1, r0
   171f4:	blt	1720c <__assert_fail@plt+0x6154>
   171f8:	b	17218 <__assert_fail@plt+0x6160>
   171fc:	ldr	r0, [fp, #8]
   17200:	movw	r1, #0
   17204:	cmp	r1, r0
   17208:	bge	17218 <__assert_fail@plt+0x6160>
   1720c:	movw	r0, #0
   17210:	str	r0, [fp, #-44]	; 0xffffffd4
   17214:	b	17230 <__assert_fail@plt+0x6178>
   17218:	ldr	r0, [fp, #8]
   1721c:	movw	r1, #0
   17220:	sub	r0, r1, r0
   17224:	movw	r1, #255	; 0xff
   17228:	sdiv	r0, r1, r0
   1722c:	str	r0, [fp, #-44]	; 0xffffffd4
   17230:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17234:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17238:	mvn	r2, #0
   1723c:	sub	r1, r2, r1
   17240:	cmp	r0, r1
   17244:	ble	17360 <__assert_fail@plt+0x62a8>
   17248:	b	17378 <__assert_fail@plt+0x62c0>
   1724c:	b	17250 <__assert_fail@plt+0x6198>
   17250:	b	172a8 <__assert_fail@plt+0x61f0>
   17254:	b	172a8 <__assert_fail@plt+0x61f0>
   17258:	ldr	r0, [fp, #8]
   1725c:	cmn	r0, #1
   17260:	bne	172a8 <__assert_fail@plt+0x61f0>
   17264:	b	17268 <__assert_fail@plt+0x61b0>
   17268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1726c:	add	r0, r0, #0
   17270:	movw	r1, #0
   17274:	cmp	r1, r0
   17278:	blt	17360 <__assert_fail@plt+0x62a8>
   1727c:	b	17378 <__assert_fail@plt+0x62c0>
   17280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17284:	movw	r1, #0
   17288:	cmp	r1, r0
   1728c:	bge	17378 <__assert_fail@plt+0x62c0>
   17290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17294:	sub	r0, r0, #1
   17298:	mvn	r1, #0
   1729c:	cmp	r1, r0
   172a0:	blt	17360 <__assert_fail@plt+0x62a8>
   172a4:	b	17378 <__assert_fail@plt+0x62c0>
   172a8:	ldr	r0, [fp, #8]
   172ac:	movw	r1, #0
   172b0:	sdiv	r0, r1, r0
   172b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172b8:	cmp	r0, r1
   172bc:	blt	17360 <__assert_fail@plt+0x62a8>
   172c0:	b	17378 <__assert_fail@plt+0x62c0>
   172c4:	ldr	r0, [fp, #8]
   172c8:	cmp	r0, #0
   172cc:	bne	172d4 <__assert_fail@plt+0x621c>
   172d0:	b	17378 <__assert_fail@plt+0x62c0>
   172d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172d8:	cmp	r0, #0
   172dc:	bge	17348 <__assert_fail@plt+0x6290>
   172e0:	b	172e4 <__assert_fail@plt+0x622c>
   172e4:	b	1732c <__assert_fail@plt+0x6274>
   172e8:	b	1732c <__assert_fail@plt+0x6274>
   172ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172f0:	cmn	r0, #1
   172f4:	bne	1732c <__assert_fail@plt+0x6274>
   172f8:	b	172fc <__assert_fail@plt+0x6244>
   172fc:	ldr	r0, [fp, #8]
   17300:	add	r0, r0, #0
   17304:	movw	r1, #0
   17308:	cmp	r1, r0
   1730c:	blt	17360 <__assert_fail@plt+0x62a8>
   17310:	b	17378 <__assert_fail@plt+0x62c0>
   17314:	ldr	r0, [fp, #8]
   17318:	sub	r0, r0, #1
   1731c:	mvn	r1, #0
   17320:	cmp	r1, r0
   17324:	blt	17360 <__assert_fail@plt+0x62a8>
   17328:	b	17378 <__assert_fail@plt+0x62c0>
   1732c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17330:	movw	r1, #0
   17334:	sdiv	r0, r1, r0
   17338:	ldr	r1, [fp, #8]
   1733c:	cmp	r0, r1
   17340:	blt	17360 <__assert_fail@plt+0x62a8>
   17344:	b	17378 <__assert_fail@plt+0x62c0>
   17348:	ldr	r0, [fp, #8]
   1734c:	movw	r1, #255	; 0xff
   17350:	sdiv	r0, r1, r0
   17354:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17358:	cmp	r0, r1
   1735c:	bge	17378 <__assert_fail@plt+0x62c0>
   17360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17364:	ldr	r1, [fp, #8]
   17368:	mul	r0, r0, r1
   1736c:	and	r0, r0, #255	; 0xff
   17370:	str	r0, [fp, #-28]	; 0xffffffe4
   17374:	b	183a8 <__assert_fail@plt+0x72f0>
   17378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1737c:	ldr	r1, [fp, #8]
   17380:	mul	r0, r0, r1
   17384:	and	r0, r0, #255	; 0xff
   17388:	str	r0, [fp, #-28]	; 0xffffffe4
   1738c:	b	183b8 <__assert_fail@plt+0x7300>
   17390:	b	17768 <__assert_fail@plt+0x66b0>
   17394:	b	17398 <__assert_fail@plt+0x62e0>
   17398:	ldr	r0, [fp, #8]
   1739c:	cmp	r0, #0
   173a0:	bge	174b4 <__assert_fail@plt+0x63fc>
   173a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173a8:	cmp	r0, #0
   173ac:	bge	17438 <__assert_fail@plt+0x6380>
   173b0:	b	173b4 <__assert_fail@plt+0x62fc>
   173b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173b8:	ldr	r1, [fp, #8]
   173bc:	movw	r2, #32767	; 0x7fff
   173c0:	sdiv	r1, r2, r1
   173c4:	cmp	r0, r1
   173c8:	blt	17554 <__assert_fail@plt+0x649c>
   173cc:	b	1756c <__assert_fail@plt+0x64b4>
   173d0:	b	173d4 <__assert_fail@plt+0x631c>
   173d4:	ldr	r0, [pc, #3092]	; 17ff0 <__assert_fail@plt+0x6f38>
   173d8:	ldr	r1, [fp, #8]
   173dc:	cmp	r1, r0
   173e0:	blt	173f8 <__assert_fail@plt+0x6340>
   173e4:	b	17404 <__assert_fail@plt+0x634c>
   173e8:	ldr	r0, [fp, #8]
   173ec:	movw	r1, #0
   173f0:	cmp	r1, r0
   173f4:	bge	17404 <__assert_fail@plt+0x634c>
   173f8:	movw	r0, #0
   173fc:	str	r0, [fp, #-48]	; 0xffffffd0
   17400:	b	1741c <__assert_fail@plt+0x6364>
   17404:	ldr	r0, [fp, #8]
   17408:	movw	r1, #0
   1740c:	sub	r0, r1, r0
   17410:	movw	r1, #32767	; 0x7fff
   17414:	sdiv	r0, r1, r0
   17418:	str	r0, [fp, #-48]	; 0xffffffd0
   1741c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17420:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17424:	mvn	r2, #0
   17428:	sub	r1, r2, r1
   1742c:	cmp	r0, r1
   17430:	ble	17554 <__assert_fail@plt+0x649c>
   17434:	b	1756c <__assert_fail@plt+0x64b4>
   17438:	b	1743c <__assert_fail@plt+0x6384>
   1743c:	b	17498 <__assert_fail@plt+0x63e0>
   17440:	b	17498 <__assert_fail@plt+0x63e0>
   17444:	ldr	r0, [fp, #8]
   17448:	cmn	r0, #1
   1744c:	bne	17498 <__assert_fail@plt+0x63e0>
   17450:	b	17454 <__assert_fail@plt+0x639c>
   17454:	ldr	r0, [pc, #3928]	; 183b4 <__assert_fail@plt+0x72fc>
   17458:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1745c:	add	r0, r1, r0
   17460:	movw	r1, #0
   17464:	cmp	r1, r0
   17468:	blt	17554 <__assert_fail@plt+0x649c>
   1746c:	b	1756c <__assert_fail@plt+0x64b4>
   17470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17474:	movw	r1, #0
   17478:	cmp	r1, r0
   1747c:	bge	1756c <__assert_fail@plt+0x64b4>
   17480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17484:	sub	r0, r0, #1
   17488:	movw	r1, #32767	; 0x7fff
   1748c:	cmp	r1, r0
   17490:	blt	17554 <__assert_fail@plt+0x649c>
   17494:	b	1756c <__assert_fail@plt+0x64b4>
   17498:	ldr	r0, [pc, #3860]	; 183b4 <__assert_fail@plt+0x72fc>
   1749c:	ldr	r1, [fp, #8]
   174a0:	sdiv	r0, r0, r1
   174a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   174a8:	cmp	r0, r1
   174ac:	blt	17554 <__assert_fail@plt+0x649c>
   174b0:	b	1756c <__assert_fail@plt+0x64b4>
   174b4:	ldr	r0, [fp, #8]
   174b8:	cmp	r0, #0
   174bc:	bne	174c4 <__assert_fail@plt+0x640c>
   174c0:	b	1756c <__assert_fail@plt+0x64b4>
   174c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174c8:	cmp	r0, #0
   174cc:	bge	1753c <__assert_fail@plt+0x6484>
   174d0:	b	174d4 <__assert_fail@plt+0x641c>
   174d4:	b	17520 <__assert_fail@plt+0x6468>
   174d8:	b	17520 <__assert_fail@plt+0x6468>
   174dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174e0:	cmn	r0, #1
   174e4:	bne	17520 <__assert_fail@plt+0x6468>
   174e8:	b	174ec <__assert_fail@plt+0x6434>
   174ec:	ldr	r0, [pc, #3776]	; 183b4 <__assert_fail@plt+0x72fc>
   174f0:	ldr	r1, [fp, #8]
   174f4:	add	r0, r1, r0
   174f8:	movw	r1, #0
   174fc:	cmp	r1, r0
   17500:	blt	17554 <__assert_fail@plt+0x649c>
   17504:	b	1756c <__assert_fail@plt+0x64b4>
   17508:	ldr	r0, [fp, #8]
   1750c:	sub	r0, r0, #1
   17510:	movw	r1, #32767	; 0x7fff
   17514:	cmp	r1, r0
   17518:	blt	17554 <__assert_fail@plt+0x649c>
   1751c:	b	1756c <__assert_fail@plt+0x64b4>
   17520:	ldr	r0, [pc, #3724]	; 183b4 <__assert_fail@plt+0x72fc>
   17524:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17528:	sdiv	r0, r0, r1
   1752c:	ldr	r1, [fp, #8]
   17530:	cmp	r0, r1
   17534:	blt	17554 <__assert_fail@plt+0x649c>
   17538:	b	1756c <__assert_fail@plt+0x64b4>
   1753c:	ldr	r0, [fp, #8]
   17540:	movw	r1, #32767	; 0x7fff
   17544:	sdiv	r0, r1, r0
   17548:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1754c:	cmp	r0, r1
   17550:	bge	1756c <__assert_fail@plt+0x64b4>
   17554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17558:	ldr	r1, [fp, #8]
   1755c:	mul	r0, r0, r1
   17560:	sxth	r0, r0
   17564:	str	r0, [fp, #-28]	; 0xffffffe4
   17568:	b	183a8 <__assert_fail@plt+0x72f0>
   1756c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17570:	ldr	r1, [fp, #8]
   17574:	mul	r0, r0, r1
   17578:	sxth	r0, r0
   1757c:	str	r0, [fp, #-28]	; 0xffffffe4
   17580:	b	183b8 <__assert_fail@plt+0x7300>
   17584:	ldr	r0, [fp, #8]
   17588:	cmp	r0, #0
   1758c:	bge	1769c <__assert_fail@plt+0x65e4>
   17590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17594:	cmp	r0, #0
   17598:	bge	17624 <__assert_fail@plt+0x656c>
   1759c:	b	175a0 <__assert_fail@plt+0x64e8>
   175a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175a4:	ldr	r1, [fp, #8]
   175a8:	movw	r2, #65535	; 0xffff
   175ac:	sdiv	r1, r2, r1
   175b0:	cmp	r0, r1
   175b4:	blt	17738 <__assert_fail@plt+0x6680>
   175b8:	b	17750 <__assert_fail@plt+0x6698>
   175bc:	b	175c0 <__assert_fail@plt+0x6508>
   175c0:	ldr	r0, [pc, #2600]	; 17ff0 <__assert_fail@plt+0x6f38>
   175c4:	ldr	r1, [fp, #8]
   175c8:	cmp	r1, r0
   175cc:	blt	175e4 <__assert_fail@plt+0x652c>
   175d0:	b	175f0 <__assert_fail@plt+0x6538>
   175d4:	ldr	r0, [fp, #8]
   175d8:	movw	r1, #0
   175dc:	cmp	r1, r0
   175e0:	bge	175f0 <__assert_fail@plt+0x6538>
   175e4:	movw	r0, #0
   175e8:	str	r0, [fp, #-52]	; 0xffffffcc
   175ec:	b	17608 <__assert_fail@plt+0x6550>
   175f0:	ldr	r0, [fp, #8]
   175f4:	movw	r1, #0
   175f8:	sub	r0, r1, r0
   175fc:	movw	r1, #65535	; 0xffff
   17600:	sdiv	r0, r1, r0
   17604:	str	r0, [fp, #-52]	; 0xffffffcc
   17608:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1760c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17610:	mvn	r2, #0
   17614:	sub	r1, r2, r1
   17618:	cmp	r0, r1
   1761c:	ble	17738 <__assert_fail@plt+0x6680>
   17620:	b	17750 <__assert_fail@plt+0x6698>
   17624:	b	17628 <__assert_fail@plt+0x6570>
   17628:	b	17680 <__assert_fail@plt+0x65c8>
   1762c:	b	17680 <__assert_fail@plt+0x65c8>
   17630:	ldr	r0, [fp, #8]
   17634:	cmn	r0, #1
   17638:	bne	17680 <__assert_fail@plt+0x65c8>
   1763c:	b	17640 <__assert_fail@plt+0x6588>
   17640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17644:	add	r0, r0, #0
   17648:	movw	r1, #0
   1764c:	cmp	r1, r0
   17650:	blt	17738 <__assert_fail@plt+0x6680>
   17654:	b	17750 <__assert_fail@plt+0x6698>
   17658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1765c:	movw	r1, #0
   17660:	cmp	r1, r0
   17664:	bge	17750 <__assert_fail@plt+0x6698>
   17668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1766c:	sub	r0, r0, #1
   17670:	mvn	r1, #0
   17674:	cmp	r1, r0
   17678:	blt	17738 <__assert_fail@plt+0x6680>
   1767c:	b	17750 <__assert_fail@plt+0x6698>
   17680:	ldr	r0, [fp, #8]
   17684:	movw	r1, #0
   17688:	sdiv	r0, r1, r0
   1768c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17690:	cmp	r0, r1
   17694:	blt	17738 <__assert_fail@plt+0x6680>
   17698:	b	17750 <__assert_fail@plt+0x6698>
   1769c:	ldr	r0, [fp, #8]
   176a0:	cmp	r0, #0
   176a4:	bne	176ac <__assert_fail@plt+0x65f4>
   176a8:	b	17750 <__assert_fail@plt+0x6698>
   176ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176b0:	cmp	r0, #0
   176b4:	bge	17720 <__assert_fail@plt+0x6668>
   176b8:	b	176bc <__assert_fail@plt+0x6604>
   176bc:	b	17704 <__assert_fail@plt+0x664c>
   176c0:	b	17704 <__assert_fail@plt+0x664c>
   176c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176c8:	cmn	r0, #1
   176cc:	bne	17704 <__assert_fail@plt+0x664c>
   176d0:	b	176d4 <__assert_fail@plt+0x661c>
   176d4:	ldr	r0, [fp, #8]
   176d8:	add	r0, r0, #0
   176dc:	movw	r1, #0
   176e0:	cmp	r1, r0
   176e4:	blt	17738 <__assert_fail@plt+0x6680>
   176e8:	b	17750 <__assert_fail@plt+0x6698>
   176ec:	ldr	r0, [fp, #8]
   176f0:	sub	r0, r0, #1
   176f4:	mvn	r1, #0
   176f8:	cmp	r1, r0
   176fc:	blt	17738 <__assert_fail@plt+0x6680>
   17700:	b	17750 <__assert_fail@plt+0x6698>
   17704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17708:	movw	r1, #0
   1770c:	sdiv	r0, r1, r0
   17710:	ldr	r1, [fp, #8]
   17714:	cmp	r0, r1
   17718:	blt	17738 <__assert_fail@plt+0x6680>
   1771c:	b	17750 <__assert_fail@plt+0x6698>
   17720:	ldr	r0, [fp, #8]
   17724:	movw	r1, #65535	; 0xffff
   17728:	sdiv	r0, r1, r0
   1772c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17730:	cmp	r0, r1
   17734:	bge	17750 <__assert_fail@plt+0x6698>
   17738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1773c:	ldr	r1, [fp, #8]
   17740:	mul	r0, r0, r1
   17744:	uxth	r0, r0
   17748:	str	r0, [fp, #-28]	; 0xffffffe4
   1774c:	b	183a8 <__assert_fail@plt+0x72f0>
   17750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17754:	ldr	r1, [fp, #8]
   17758:	mul	r0, r0, r1
   1775c:	uxth	r0, r0
   17760:	str	r0, [fp, #-28]	; 0xffffffe4
   17764:	b	183b8 <__assert_fail@plt+0x7300>
   17768:	b	1776c <__assert_fail@plt+0x66b4>
   1776c:	b	17770 <__assert_fail@plt+0x66b8>
   17770:	ldr	r0, [fp, #8]
   17774:	cmp	r0, #0
   17778:	bge	1787c <__assert_fail@plt+0x67c4>
   1777c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17780:	cmp	r0, #0
   17784:	bge	17810 <__assert_fail@plt+0x6758>
   17788:	b	1778c <__assert_fail@plt+0x66d4>
   1778c:	ldr	r0, [pc, #1992]	; 17f5c <__assert_fail@plt+0x6ea4>
   17790:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17794:	ldr	r2, [fp, #8]
   17798:	sdiv	r0, r0, r2
   1779c:	cmp	r1, r0
   177a0:	blt	1790c <__assert_fail@plt+0x6854>
   177a4:	b	17920 <__assert_fail@plt+0x6868>
   177a8:	b	177ac <__assert_fail@plt+0x66f4>
   177ac:	ldr	r0, [pc, #2108]	; 17ff0 <__assert_fail@plt+0x6f38>
   177b0:	ldr	r1, [fp, #8]
   177b4:	cmp	r1, r0
   177b8:	blt	177d0 <__assert_fail@plt+0x6718>
   177bc:	b	177dc <__assert_fail@plt+0x6724>
   177c0:	ldr	r0, [fp, #8]
   177c4:	movw	r1, #0
   177c8:	cmp	r1, r0
   177cc:	bge	177dc <__assert_fail@plt+0x6724>
   177d0:	movw	r0, #0
   177d4:	str	r0, [fp, #-56]	; 0xffffffc8
   177d8:	b	177f4 <__assert_fail@plt+0x673c>
   177dc:	ldr	r0, [pc, #1912]	; 17f5c <__assert_fail@plt+0x6ea4>
   177e0:	ldr	r1, [fp, #8]
   177e4:	movw	r2, #0
   177e8:	sub	r1, r2, r1
   177ec:	sdiv	r0, r0, r1
   177f0:	str	r0, [fp, #-56]	; 0xffffffc8
   177f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   177f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   177fc:	mvn	r2, #0
   17800:	sub	r1, r2, r1
   17804:	cmp	r0, r1
   17808:	ble	1790c <__assert_fail@plt+0x6854>
   1780c:	b	17920 <__assert_fail@plt+0x6868>
   17810:	ldr	r0, [fp, #8]
   17814:	cmn	r0, #1
   17818:	bne	17860 <__assert_fail@plt+0x67a8>
   1781c:	b	17820 <__assert_fail@plt+0x6768>
   17820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17824:	add	r0, r0, #-2147483648	; 0x80000000
   17828:	movw	r1, #0
   1782c:	cmp	r1, r0
   17830:	blt	1790c <__assert_fail@plt+0x6854>
   17834:	b	17920 <__assert_fail@plt+0x6868>
   17838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1783c:	movw	r1, #0
   17840:	cmp	r1, r0
   17844:	bge	17920 <__assert_fail@plt+0x6868>
   17848:	ldr	r0, [pc, #1804]	; 17f5c <__assert_fail@plt+0x6ea4>
   1784c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17850:	sub	r1, r1, #1
   17854:	cmp	r0, r1
   17858:	blt	1790c <__assert_fail@plt+0x6854>
   1785c:	b	17920 <__assert_fail@plt+0x6868>
   17860:	ldr	r0, [pc, #4072]	; 18850 <__assert_fail@plt+0x7798>
   17864:	ldr	r1, [fp, #8]
   17868:	sdiv	r0, r0, r1
   1786c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17870:	cmp	r0, r1
   17874:	blt	1790c <__assert_fail@plt+0x6854>
   17878:	b	17920 <__assert_fail@plt+0x6868>
   1787c:	ldr	r0, [fp, #8]
   17880:	cmp	r0, #0
   17884:	bne	1788c <__assert_fail@plt+0x67d4>
   17888:	b	17920 <__assert_fail@plt+0x6868>
   1788c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17890:	cmp	r0, #0
   17894:	bge	178f4 <__assert_fail@plt+0x683c>
   17898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1789c:	cmn	r0, #1
   178a0:	bne	178d8 <__assert_fail@plt+0x6820>
   178a4:	b	178a8 <__assert_fail@plt+0x67f0>
   178a8:	ldr	r0, [fp, #8]
   178ac:	add	r0, r0, #-2147483648	; 0x80000000
   178b0:	movw	r1, #0
   178b4:	cmp	r1, r0
   178b8:	blt	1790c <__assert_fail@plt+0x6854>
   178bc:	b	17920 <__assert_fail@plt+0x6868>
   178c0:	ldr	r0, [pc, #1684]	; 17f5c <__assert_fail@plt+0x6ea4>
   178c4:	ldr	r1, [fp, #8]
   178c8:	sub	r1, r1, #1
   178cc:	cmp	r0, r1
   178d0:	blt	1790c <__assert_fail@plt+0x6854>
   178d4:	b	17920 <__assert_fail@plt+0x6868>
   178d8:	ldr	r0, [pc, #3952]	; 18850 <__assert_fail@plt+0x7798>
   178dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178e0:	sdiv	r0, r0, r1
   178e4:	ldr	r1, [fp, #8]
   178e8:	cmp	r0, r1
   178ec:	blt	1790c <__assert_fail@plt+0x6854>
   178f0:	b	17920 <__assert_fail@plt+0x6868>
   178f4:	ldr	r0, [pc, #1632]	; 17f5c <__assert_fail@plt+0x6ea4>
   178f8:	ldr	r1, [fp, #8]
   178fc:	sdiv	r0, r0, r1
   17900:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17904:	cmp	r0, r1
   17908:	bge	17920 <__assert_fail@plt+0x6868>
   1790c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17910:	ldr	r1, [fp, #8]
   17914:	mul	r0, r0, r1
   17918:	str	r0, [fp, #-28]	; 0xffffffe4
   1791c:	b	183a8 <__assert_fail@plt+0x72f0>
   17920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17924:	ldr	r1, [fp, #8]
   17928:	mul	r0, r0, r1
   1792c:	str	r0, [fp, #-28]	; 0xffffffe4
   17930:	b	183b8 <__assert_fail@plt+0x7300>
   17934:	ldr	r0, [fp, #8]
   17938:	cmp	r0, #0
   1793c:	bge	17a4c <__assert_fail@plt+0x6994>
   17940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17944:	cmp	r0, #0
   17948:	bge	179d4 <__assert_fail@plt+0x691c>
   1794c:	b	1796c <__assert_fail@plt+0x68b4>
   17950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17954:	ldr	r1, [fp, #8]
   17958:	mvn	r2, #0
   1795c:	udiv	r1, r2, r1
   17960:	cmp	r0, r1
   17964:	bcc	17ae8 <__assert_fail@plt+0x6a30>
   17968:	b	17afc <__assert_fail@plt+0x6a44>
   1796c:	b	17970 <__assert_fail@plt+0x68b8>
   17970:	ldr	r0, [pc, #1656]	; 17ff0 <__assert_fail@plt+0x6f38>
   17974:	ldr	r1, [fp, #8]
   17978:	cmp	r1, r0
   1797c:	blt	17994 <__assert_fail@plt+0x68dc>
   17980:	b	179a0 <__assert_fail@plt+0x68e8>
   17984:	ldr	r0, [fp, #8]
   17988:	movw	r1, #0
   1798c:	cmp	r1, r0
   17990:	bge	179a0 <__assert_fail@plt+0x68e8>
   17994:	movw	r0, #1
   17998:	str	r0, [fp, #-60]	; 0xffffffc4
   1799c:	b	179b8 <__assert_fail@plt+0x6900>
   179a0:	ldr	r0, [fp, #8]
   179a4:	movw	r1, #0
   179a8:	sub	r0, r1, r0
   179ac:	mvn	r1, #0
   179b0:	udiv	r0, r1, r0
   179b4:	str	r0, [fp, #-60]	; 0xffffffc4
   179b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   179bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179c0:	mvn	r2, #0
   179c4:	sub	r1, r2, r1
   179c8:	cmp	r0, r1
   179cc:	bls	17ae8 <__assert_fail@plt+0x6a30>
   179d0:	b	17afc <__assert_fail@plt+0x6a44>
   179d4:	b	179d8 <__assert_fail@plt+0x6920>
   179d8:	b	17a30 <__assert_fail@plt+0x6978>
   179dc:	b	17a30 <__assert_fail@plt+0x6978>
   179e0:	ldr	r0, [fp, #8]
   179e4:	cmn	r0, #1
   179e8:	bne	17a30 <__assert_fail@plt+0x6978>
   179ec:	b	179f0 <__assert_fail@plt+0x6938>
   179f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179f4:	add	r0, r0, #0
   179f8:	movw	r1, #0
   179fc:	cmp	r1, r0
   17a00:	blt	17ae8 <__assert_fail@plt+0x6a30>
   17a04:	b	17afc <__assert_fail@plt+0x6a44>
   17a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a0c:	movw	r1, #0
   17a10:	cmp	r1, r0
   17a14:	bge	17afc <__assert_fail@plt+0x6a44>
   17a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a1c:	sub	r0, r0, #1
   17a20:	mvn	r1, #0
   17a24:	cmp	r1, r0
   17a28:	blt	17ae8 <__assert_fail@plt+0x6a30>
   17a2c:	b	17afc <__assert_fail@plt+0x6a44>
   17a30:	ldr	r0, [fp, #8]
   17a34:	movw	r1, #0
   17a38:	sdiv	r0, r1, r0
   17a3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a40:	cmp	r0, r1
   17a44:	blt	17ae8 <__assert_fail@plt+0x6a30>
   17a48:	b	17afc <__assert_fail@plt+0x6a44>
   17a4c:	ldr	r0, [fp, #8]
   17a50:	cmp	r0, #0
   17a54:	bne	17a5c <__assert_fail@plt+0x69a4>
   17a58:	b	17afc <__assert_fail@plt+0x6a44>
   17a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a60:	cmp	r0, #0
   17a64:	bge	17ad0 <__assert_fail@plt+0x6a18>
   17a68:	b	17a6c <__assert_fail@plt+0x69b4>
   17a6c:	b	17ab4 <__assert_fail@plt+0x69fc>
   17a70:	b	17ab4 <__assert_fail@plt+0x69fc>
   17a74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a78:	cmn	r0, #1
   17a7c:	bne	17ab4 <__assert_fail@plt+0x69fc>
   17a80:	b	17a84 <__assert_fail@plt+0x69cc>
   17a84:	ldr	r0, [fp, #8]
   17a88:	add	r0, r0, #0
   17a8c:	movw	r1, #0
   17a90:	cmp	r1, r0
   17a94:	blt	17ae8 <__assert_fail@plt+0x6a30>
   17a98:	b	17afc <__assert_fail@plt+0x6a44>
   17a9c:	ldr	r0, [fp, #8]
   17aa0:	sub	r0, r0, #1
   17aa4:	mvn	r1, #0
   17aa8:	cmp	r1, r0
   17aac:	blt	17ae8 <__assert_fail@plt+0x6a30>
   17ab0:	b	17afc <__assert_fail@plt+0x6a44>
   17ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ab8:	movw	r1, #0
   17abc:	sdiv	r0, r1, r0
   17ac0:	ldr	r1, [fp, #8]
   17ac4:	cmp	r0, r1
   17ac8:	blt	17ae8 <__assert_fail@plt+0x6a30>
   17acc:	b	17afc <__assert_fail@plt+0x6a44>
   17ad0:	ldr	r0, [fp, #8]
   17ad4:	mvn	r1, #0
   17ad8:	udiv	r0, r1, r0
   17adc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ae0:	cmp	r0, r1
   17ae4:	bcs	17afc <__assert_fail@plt+0x6a44>
   17ae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17aec:	ldr	r1, [fp, #8]
   17af0:	mul	r0, r0, r1
   17af4:	str	r0, [fp, #-28]	; 0xffffffe4
   17af8:	b	183a8 <__assert_fail@plt+0x72f0>
   17afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b00:	ldr	r1, [fp, #8]
   17b04:	mul	r0, r0, r1
   17b08:	str	r0, [fp, #-28]	; 0xffffffe4
   17b0c:	b	183b8 <__assert_fail@plt+0x7300>
   17b10:	b	17b14 <__assert_fail@plt+0x6a5c>
   17b14:	b	17b18 <__assert_fail@plt+0x6a60>
   17b18:	ldr	r0, [fp, #8]
   17b1c:	cmp	r0, #0
   17b20:	bge	17c24 <__assert_fail@plt+0x6b6c>
   17b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b28:	cmp	r0, #0
   17b2c:	bge	17bb8 <__assert_fail@plt+0x6b00>
   17b30:	b	17b34 <__assert_fail@plt+0x6a7c>
   17b34:	ldr	r0, [pc, #1056]	; 17f5c <__assert_fail@plt+0x6ea4>
   17b38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b3c:	ldr	r2, [fp, #8]
   17b40:	sdiv	r0, r0, r2
   17b44:	cmp	r1, r0
   17b48:	blt	17cb4 <__assert_fail@plt+0x6bfc>
   17b4c:	b	17cc8 <__assert_fail@plt+0x6c10>
   17b50:	b	17b54 <__assert_fail@plt+0x6a9c>
   17b54:	ldr	r0, [pc, #1172]	; 17ff0 <__assert_fail@plt+0x6f38>
   17b58:	ldr	r1, [fp, #8]
   17b5c:	cmp	r1, r0
   17b60:	blt	17b78 <__assert_fail@plt+0x6ac0>
   17b64:	b	17b84 <__assert_fail@plt+0x6acc>
   17b68:	ldr	r0, [fp, #8]
   17b6c:	movw	r1, #0
   17b70:	cmp	r1, r0
   17b74:	bge	17b84 <__assert_fail@plt+0x6acc>
   17b78:	movw	r0, #0
   17b7c:	str	r0, [fp, #-64]	; 0xffffffc0
   17b80:	b	17b9c <__assert_fail@plt+0x6ae4>
   17b84:	ldr	r0, [pc, #976]	; 17f5c <__assert_fail@plt+0x6ea4>
   17b88:	ldr	r1, [fp, #8]
   17b8c:	movw	r2, #0
   17b90:	sub	r1, r2, r1
   17b94:	sdiv	r0, r0, r1
   17b98:	str	r0, [fp, #-64]	; 0xffffffc0
   17b9c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17ba0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ba4:	mvn	r2, #0
   17ba8:	sub	r1, r2, r1
   17bac:	cmp	r0, r1
   17bb0:	ble	17cb4 <__assert_fail@plt+0x6bfc>
   17bb4:	b	17cc8 <__assert_fail@plt+0x6c10>
   17bb8:	ldr	r0, [fp, #8]
   17bbc:	cmn	r0, #1
   17bc0:	bne	17c08 <__assert_fail@plt+0x6b50>
   17bc4:	b	17bc8 <__assert_fail@plt+0x6b10>
   17bc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bcc:	add	r0, r0, #-2147483648	; 0x80000000
   17bd0:	movw	r1, #0
   17bd4:	cmp	r1, r0
   17bd8:	blt	17cb4 <__assert_fail@plt+0x6bfc>
   17bdc:	b	17cc8 <__assert_fail@plt+0x6c10>
   17be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17be4:	movw	r1, #0
   17be8:	cmp	r1, r0
   17bec:	bge	17cc8 <__assert_fail@plt+0x6c10>
   17bf0:	ldr	r0, [pc, #868]	; 17f5c <__assert_fail@plt+0x6ea4>
   17bf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bf8:	sub	r1, r1, #1
   17bfc:	cmp	r0, r1
   17c00:	blt	17cb4 <__assert_fail@plt+0x6bfc>
   17c04:	b	17cc8 <__assert_fail@plt+0x6c10>
   17c08:	ldr	r0, [pc, #3136]	; 18850 <__assert_fail@plt+0x7798>
   17c0c:	ldr	r1, [fp, #8]
   17c10:	sdiv	r0, r0, r1
   17c14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c18:	cmp	r0, r1
   17c1c:	blt	17cb4 <__assert_fail@plt+0x6bfc>
   17c20:	b	17cc8 <__assert_fail@plt+0x6c10>
   17c24:	ldr	r0, [fp, #8]
   17c28:	cmp	r0, #0
   17c2c:	bne	17c34 <__assert_fail@plt+0x6b7c>
   17c30:	b	17cc8 <__assert_fail@plt+0x6c10>
   17c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c38:	cmp	r0, #0
   17c3c:	bge	17c9c <__assert_fail@plt+0x6be4>
   17c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c44:	cmn	r0, #1
   17c48:	bne	17c80 <__assert_fail@plt+0x6bc8>
   17c4c:	b	17c50 <__assert_fail@plt+0x6b98>
   17c50:	ldr	r0, [fp, #8]
   17c54:	add	r0, r0, #-2147483648	; 0x80000000
   17c58:	movw	r1, #0
   17c5c:	cmp	r1, r0
   17c60:	blt	17cb4 <__assert_fail@plt+0x6bfc>
   17c64:	b	17cc8 <__assert_fail@plt+0x6c10>
   17c68:	ldr	r0, [pc, #748]	; 17f5c <__assert_fail@plt+0x6ea4>
   17c6c:	ldr	r1, [fp, #8]
   17c70:	sub	r1, r1, #1
   17c74:	cmp	r0, r1
   17c78:	blt	17cb4 <__assert_fail@plt+0x6bfc>
   17c7c:	b	17cc8 <__assert_fail@plt+0x6c10>
   17c80:	ldr	r0, [pc, #3016]	; 18850 <__assert_fail@plt+0x7798>
   17c84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c88:	sdiv	r0, r0, r1
   17c8c:	ldr	r1, [fp, #8]
   17c90:	cmp	r0, r1
   17c94:	blt	17cb4 <__assert_fail@plt+0x6bfc>
   17c98:	b	17cc8 <__assert_fail@plt+0x6c10>
   17c9c:	ldr	r0, [pc, #696]	; 17f5c <__assert_fail@plt+0x6ea4>
   17ca0:	ldr	r1, [fp, #8]
   17ca4:	sdiv	r0, r0, r1
   17ca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17cac:	cmp	r0, r1
   17cb0:	bge	17cc8 <__assert_fail@plt+0x6c10>
   17cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cb8:	ldr	r1, [fp, #8]
   17cbc:	mul	r0, r0, r1
   17cc0:	str	r0, [fp, #-28]	; 0xffffffe4
   17cc4:	b	183a8 <__assert_fail@plt+0x72f0>
   17cc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ccc:	ldr	r1, [fp, #8]
   17cd0:	mul	r0, r0, r1
   17cd4:	str	r0, [fp, #-28]	; 0xffffffe4
   17cd8:	b	183b8 <__assert_fail@plt+0x7300>
   17cdc:	ldr	r0, [fp, #8]
   17ce0:	cmp	r0, #0
   17ce4:	bge	17df4 <__assert_fail@plt+0x6d3c>
   17ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cec:	cmp	r0, #0
   17cf0:	bge	17d7c <__assert_fail@plt+0x6cc4>
   17cf4:	b	17d14 <__assert_fail@plt+0x6c5c>
   17cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cfc:	ldr	r1, [fp, #8]
   17d00:	mvn	r2, #0
   17d04:	udiv	r1, r2, r1
   17d08:	cmp	r0, r1
   17d0c:	bcc	17e90 <__assert_fail@plt+0x6dd8>
   17d10:	b	17ea4 <__assert_fail@plt+0x6dec>
   17d14:	b	17d18 <__assert_fail@plt+0x6c60>
   17d18:	ldr	r0, [pc, #720]	; 17ff0 <__assert_fail@plt+0x6f38>
   17d1c:	ldr	r1, [fp, #8]
   17d20:	cmp	r1, r0
   17d24:	blt	17d3c <__assert_fail@plt+0x6c84>
   17d28:	b	17d48 <__assert_fail@plt+0x6c90>
   17d2c:	ldr	r0, [fp, #8]
   17d30:	movw	r1, #0
   17d34:	cmp	r1, r0
   17d38:	bge	17d48 <__assert_fail@plt+0x6c90>
   17d3c:	movw	r0, #1
   17d40:	str	r0, [fp, #-68]	; 0xffffffbc
   17d44:	b	17d60 <__assert_fail@plt+0x6ca8>
   17d48:	ldr	r0, [fp, #8]
   17d4c:	movw	r1, #0
   17d50:	sub	r0, r1, r0
   17d54:	mvn	r1, #0
   17d58:	udiv	r0, r1, r0
   17d5c:	str	r0, [fp, #-68]	; 0xffffffbc
   17d60:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17d64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d68:	mvn	r2, #0
   17d6c:	sub	r1, r2, r1
   17d70:	cmp	r0, r1
   17d74:	bls	17e90 <__assert_fail@plt+0x6dd8>
   17d78:	b	17ea4 <__assert_fail@plt+0x6dec>
   17d7c:	b	17d80 <__assert_fail@plt+0x6cc8>
   17d80:	b	17dd8 <__assert_fail@plt+0x6d20>
   17d84:	b	17dd8 <__assert_fail@plt+0x6d20>
   17d88:	ldr	r0, [fp, #8]
   17d8c:	cmn	r0, #1
   17d90:	bne	17dd8 <__assert_fail@plt+0x6d20>
   17d94:	b	17d98 <__assert_fail@plt+0x6ce0>
   17d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d9c:	add	r0, r0, #0
   17da0:	movw	r1, #0
   17da4:	cmp	r1, r0
   17da8:	blt	17e90 <__assert_fail@plt+0x6dd8>
   17dac:	b	17ea4 <__assert_fail@plt+0x6dec>
   17db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17db4:	movw	r1, #0
   17db8:	cmp	r1, r0
   17dbc:	bge	17ea4 <__assert_fail@plt+0x6dec>
   17dc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dc4:	sub	r0, r0, #1
   17dc8:	mvn	r1, #0
   17dcc:	cmp	r1, r0
   17dd0:	blt	17e90 <__assert_fail@plt+0x6dd8>
   17dd4:	b	17ea4 <__assert_fail@plt+0x6dec>
   17dd8:	ldr	r0, [fp, #8]
   17ddc:	movw	r1, #0
   17de0:	sdiv	r0, r1, r0
   17de4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17de8:	cmp	r0, r1
   17dec:	blt	17e90 <__assert_fail@plt+0x6dd8>
   17df0:	b	17ea4 <__assert_fail@plt+0x6dec>
   17df4:	ldr	r0, [fp, #8]
   17df8:	cmp	r0, #0
   17dfc:	bne	17e04 <__assert_fail@plt+0x6d4c>
   17e00:	b	17ea4 <__assert_fail@plt+0x6dec>
   17e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e08:	cmp	r0, #0
   17e0c:	bge	17e78 <__assert_fail@plt+0x6dc0>
   17e10:	b	17e14 <__assert_fail@plt+0x6d5c>
   17e14:	b	17e5c <__assert_fail@plt+0x6da4>
   17e18:	b	17e5c <__assert_fail@plt+0x6da4>
   17e1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e20:	cmn	r0, #1
   17e24:	bne	17e5c <__assert_fail@plt+0x6da4>
   17e28:	b	17e2c <__assert_fail@plt+0x6d74>
   17e2c:	ldr	r0, [fp, #8]
   17e30:	add	r0, r0, #0
   17e34:	movw	r1, #0
   17e38:	cmp	r1, r0
   17e3c:	blt	17e90 <__assert_fail@plt+0x6dd8>
   17e40:	b	17ea4 <__assert_fail@plt+0x6dec>
   17e44:	ldr	r0, [fp, #8]
   17e48:	sub	r0, r0, #1
   17e4c:	mvn	r1, #0
   17e50:	cmp	r1, r0
   17e54:	blt	17e90 <__assert_fail@plt+0x6dd8>
   17e58:	b	17ea4 <__assert_fail@plt+0x6dec>
   17e5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e60:	movw	r1, #0
   17e64:	sdiv	r0, r1, r0
   17e68:	ldr	r1, [fp, #8]
   17e6c:	cmp	r0, r1
   17e70:	blt	17e90 <__assert_fail@plt+0x6dd8>
   17e74:	b	17ea4 <__assert_fail@plt+0x6dec>
   17e78:	ldr	r0, [fp, #8]
   17e7c:	mvn	r1, #0
   17e80:	udiv	r0, r1, r0
   17e84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e88:	cmp	r0, r1
   17e8c:	bcs	17ea4 <__assert_fail@plt+0x6dec>
   17e90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e94:	ldr	r1, [fp, #8]
   17e98:	mul	r0, r0, r1
   17e9c:	str	r0, [fp, #-28]	; 0xffffffe4
   17ea0:	b	183a8 <__assert_fail@plt+0x72f0>
   17ea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ea8:	ldr	r1, [fp, #8]
   17eac:	mul	r0, r0, r1
   17eb0:	str	r0, [fp, #-28]	; 0xffffffe4
   17eb4:	b	183b8 <__assert_fail@plt+0x7300>
   17eb8:	b	17ebc <__assert_fail@plt+0x6e04>
   17ebc:	ldr	r0, [fp, #8]
   17ec0:	cmp	r0, #0
   17ec4:	bge	18054 <__assert_fail@plt+0x6f9c>
   17ec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ecc:	cmp	r0, #0
   17ed0:	bge	17fbc <__assert_fail@plt+0x6f04>
   17ed4:	b	17ed8 <__assert_fail@plt+0x6e20>
   17ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17edc:	ldr	r1, [fp, #8]
   17ee0:	asr	r3, r1, #31
   17ee4:	mvn	r2, #0
   17ee8:	mvn	ip, #-2147483648	; 0x80000000
   17eec:	str	r0, [fp, #-72]	; 0xffffffb8
   17ef0:	mov	r0, r2
   17ef4:	str	r1, [fp, #-76]	; 0xffffffb4
   17ef8:	mov	r1, ip
   17efc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17f00:	bl	1e158 <__assert_fail@plt+0xd0a0>
   17f04:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17f08:	subs	r0, r2, r0
   17f0c:	rscs	r1, r1, r2, asr #31
   17f10:	str	r0, [fp, #-80]	; 0xffffffb0
   17f14:	str	r1, [fp, #-84]	; 0xffffffac
   17f18:	blt	18134 <__assert_fail@plt+0x707c>
   17f1c:	b	18148 <__assert_fail@plt+0x7090>
   17f20:	b	17f24 <__assert_fail@plt+0x6e6c>
   17f24:	ldr	r0, [pc, #196]	; 17ff0 <__assert_fail@plt+0x6f38>
   17f28:	ldr	r1, [fp, #8]
   17f2c:	cmp	r1, r0
   17f30:	blt	17f48 <__assert_fail@plt+0x6e90>
   17f34:	b	17f60 <__assert_fail@plt+0x6ea8>
   17f38:	ldr	r0, [fp, #8]
   17f3c:	movw	r1, #0
   17f40:	cmp	r1, r0
   17f44:	bge	17f60 <__assert_fail@plt+0x6ea8>
   17f48:	mov	r0, #0
   17f4c:	mvn	r1, #0
   17f50:	str	r1, [fp, #-88]	; 0xffffffa8
   17f54:	str	r0, [fp, #-92]	; 0xffffffa4
   17f58:	b	17f94 <__assert_fail@plt+0x6edc>
   17f5c:	svcvc	0x00ffffff
   17f60:	ldr	r0, [fp, #8]
   17f64:	rsb	r0, r0, #0
   17f68:	asr	r3, r0, #31
   17f6c:	mvn	r1, #0
   17f70:	mvn	r2, #-2147483648	; 0x80000000
   17f74:	str	r0, [fp, #-96]	; 0xffffffa0
   17f78:	mov	r0, r1
   17f7c:	mov	r1, r2
   17f80:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17f84:	bl	1e158 <__assert_fail@plt+0xd0a0>
   17f88:	str	r0, [fp, #-88]	; 0xffffffa8
   17f8c:	str	r1, [fp, #-92]	; 0xffffffa4
   17f90:	b	17f94 <__assert_fail@plt+0x6edc>
   17f94:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17f98:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17f9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17fa0:	mvn	r2, r2
   17fa4:	subs	r1, r2, r1
   17fa8:	rscs	r0, r0, r2, asr #31
   17fac:	str	r1, [fp, #-100]	; 0xffffff9c
   17fb0:	str	r0, [fp, #-104]	; 0xffffff98
   17fb4:	bge	18134 <__assert_fail@plt+0x707c>
   17fb8:	b	18148 <__assert_fail@plt+0x7090>
   17fbc:	ldr	r0, [fp, #8]
   17fc0:	cmn	r0, #1
   17fc4:	bne	18014 <__assert_fail@plt+0x6f5c>
   17fc8:	b	17fcc <__assert_fail@plt+0x6f14>
   17fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fd0:	mov	r1, #-2147483648	; 0x80000000
   17fd4:	add	r1, r1, r0, asr #31
   17fd8:	rsbs	r0, r0, #0
   17fdc:	rscs	r1, r1, #0
   17fe0:	str	r0, [fp, #-108]	; 0xffffff94
   17fe4:	str	r1, [fp, #-112]	; 0xffffff90
   17fe8:	blt	18134 <__assert_fail@plt+0x707c>
   17fec:	b	18148 <__assert_fail@plt+0x7090>
   17ff0:	andhi	r0, r0, r1
   17ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ff8:	movw	r1, #0
   17ffc:	cmp	r1, r0
   18000:	bge	18148 <__assert_fail@plt+0x7090>
   18004:	mov	r0, #0
   18008:	cmp	r0, #0
   1800c:	bne	18134 <__assert_fail@plt+0x707c>
   18010:	b	18148 <__assert_fail@plt+0x7090>
   18014:	ldr	r0, [fp, #8]
   18018:	asr	r3, r0, #31
   1801c:	mov	r1, #0
   18020:	mov	r2, #-2147483648	; 0x80000000
   18024:	str	r0, [fp, #-116]	; 0xffffff8c
   18028:	mov	r0, r1
   1802c:	mov	r1, r2
   18030:	ldr	r2, [fp, #-116]	; 0xffffff8c
   18034:	bl	1e158 <__assert_fail@plt+0xd0a0>
   18038:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1803c:	subs	r0, r0, r2
   18040:	sbcs	r1, r1, r2, asr #31
   18044:	str	r0, [fp, #-120]	; 0xffffff88
   18048:	str	r1, [fp, #-124]	; 0xffffff84
   1804c:	blt	18134 <__assert_fail@plt+0x707c>
   18050:	b	18148 <__assert_fail@plt+0x7090>
   18054:	ldr	r0, [fp, #8]
   18058:	cmp	r0, #0
   1805c:	bne	18064 <__assert_fail@plt+0x6fac>
   18060:	b	18148 <__assert_fail@plt+0x7090>
   18064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18068:	cmp	r0, #0
   1806c:	bge	180f4 <__assert_fail@plt+0x703c>
   18070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18074:	cmn	r0, #1
   18078:	bne	180b4 <__assert_fail@plt+0x6ffc>
   1807c:	b	18080 <__assert_fail@plt+0x6fc8>
   18080:	ldr	r0, [fp, #8]
   18084:	mov	r1, #-2147483648	; 0x80000000
   18088:	add	r1, r1, r0, asr #31
   1808c:	rsbs	r0, r0, #0
   18090:	rscs	r1, r1, #0
   18094:	str	r0, [fp, #-128]	; 0xffffff80
   18098:	str	r1, [fp, #-132]	; 0xffffff7c
   1809c:	blt	18134 <__assert_fail@plt+0x707c>
   180a0:	b	18148 <__assert_fail@plt+0x7090>
   180a4:	mov	r0, #0
   180a8:	cmp	r0, #0
   180ac:	bne	18134 <__assert_fail@plt+0x707c>
   180b0:	b	18148 <__assert_fail@plt+0x7090>
   180b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180b8:	asr	r3, r0, #31
   180bc:	mov	r1, #0
   180c0:	mov	r2, #-2147483648	; 0x80000000
   180c4:	str	r0, [fp, #-136]	; 0xffffff78
   180c8:	mov	r0, r1
   180cc:	mov	r1, r2
   180d0:	ldr	r2, [fp, #-136]	; 0xffffff78
   180d4:	bl	1e158 <__assert_fail@plt+0xd0a0>
   180d8:	ldr	r2, [fp, #8]
   180dc:	subs	r0, r0, r2
   180e0:	sbcs	r1, r1, r2, asr #31
   180e4:	str	r0, [fp, #-140]	; 0xffffff74
   180e8:	str	r1, [fp, #-144]	; 0xffffff70
   180ec:	blt	18134 <__assert_fail@plt+0x707c>
   180f0:	b	18148 <__assert_fail@plt+0x7090>
   180f4:	ldr	r0, [fp, #8]
   180f8:	asr	r3, r0, #31
   180fc:	mvn	r1, #0
   18100:	mvn	r2, #-2147483648	; 0x80000000
   18104:	str	r0, [fp, #-148]	; 0xffffff6c
   18108:	mov	r0, r1
   1810c:	mov	r1, r2
   18110:	ldr	r2, [fp, #-148]	; 0xffffff6c
   18114:	bl	1e158 <__assert_fail@plt+0xd0a0>
   18118:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1811c:	subs	r0, r0, r2
   18120:	sbcs	r1, r1, r2, asr #31
   18124:	str	r0, [fp, #-152]	; 0xffffff68
   18128:	str	r1, [fp, #-156]	; 0xffffff64
   1812c:	bge	18148 <__assert_fail@plt+0x7090>
   18130:	b	18134 <__assert_fail@plt+0x707c>
   18134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18138:	ldr	r1, [fp, #8]
   1813c:	mul	r0, r0, r1
   18140:	str	r0, [fp, #-28]	; 0xffffffe4
   18144:	b	183a8 <__assert_fail@plt+0x72f0>
   18148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1814c:	ldr	r1, [fp, #8]
   18150:	mul	r0, r0, r1
   18154:	str	r0, [fp, #-28]	; 0xffffffe4
   18158:	b	183b8 <__assert_fail@plt+0x7300>
   1815c:	ldr	r0, [fp, #8]
   18160:	cmp	r0, #0
   18164:	bge	182c4 <__assert_fail@plt+0x720c>
   18168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1816c:	cmp	r0, #0
   18170:	bge	1824c <__assert_fail@plt+0x7194>
   18174:	b	181bc <__assert_fail@plt+0x7104>
   18178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1817c:	ldr	r1, [fp, #8]
   18180:	asr	r3, r1, #31
   18184:	mvn	r2, #0
   18188:	str	r0, [fp, #-160]	; 0xffffff60
   1818c:	mov	r0, r2
   18190:	str	r1, [fp, #-164]	; 0xffffff5c
   18194:	mov	r1, r2
   18198:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1819c:	bl	1e22c <__assert_fail@plt+0xd174>
   181a0:	ldr	r2, [fp, #-160]	; 0xffffff60
   181a4:	subs	r0, r2, r0
   181a8:	rscs	r1, r1, r2, asr #31
   181ac:	str	r0, [fp, #-168]	; 0xffffff58
   181b0:	str	r1, [fp, #-172]	; 0xffffff54
   181b4:	bcc	18380 <__assert_fail@plt+0x72c8>
   181b8:	b	18394 <__assert_fail@plt+0x72dc>
   181bc:	b	181c0 <__assert_fail@plt+0x7108>
   181c0:	ldr	r0, [pc, #-472]	; 17ff0 <__assert_fail@plt+0x6f38>
   181c4:	ldr	r1, [fp, #8]
   181c8:	cmp	r1, r0
   181cc:	blt	181e4 <__assert_fail@plt+0x712c>
   181d0:	b	181f8 <__assert_fail@plt+0x7140>
   181d4:	ldr	r0, [fp, #8]
   181d8:	movw	r1, #0
   181dc:	cmp	r1, r0
   181e0:	bge	181f8 <__assert_fail@plt+0x7140>
   181e4:	mov	r0, #1
   181e8:	mvn	r1, #0
   181ec:	str	r1, [fp, #-176]	; 0xffffff50
   181f0:	str	r0, [fp, #-180]	; 0xffffff4c
   181f4:	b	18224 <__assert_fail@plt+0x716c>
   181f8:	ldr	r0, [fp, #8]
   181fc:	rsb	r0, r0, #0
   18200:	asr	r3, r0, #31
   18204:	mvn	r1, #0
   18208:	str	r0, [fp, #-184]	; 0xffffff48
   1820c:	mov	r0, r1
   18210:	ldr	r2, [fp, #-184]	; 0xffffff48
   18214:	bl	1e22c <__assert_fail@plt+0xd174>
   18218:	str	r0, [fp, #-176]	; 0xffffff50
   1821c:	str	r1, [fp, #-180]	; 0xffffff4c
   18220:	b	18224 <__assert_fail@plt+0x716c>
   18224:	ldr	r0, [fp, #-180]	; 0xffffff4c
   18228:	ldr	r1, [fp, #-176]	; 0xffffff50
   1822c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18230:	mvn	r2, r2
   18234:	subs	r1, r2, r1
   18238:	rscs	r0, r0, r2, asr #31
   1823c:	str	r1, [sp, #188]	; 0xbc
   18240:	str	r0, [sp, #184]	; 0xb8
   18244:	bcs	18380 <__assert_fail@plt+0x72c8>
   18248:	b	18394 <__assert_fail@plt+0x72dc>
   1824c:	b	18250 <__assert_fail@plt+0x7198>
   18250:	b	182a8 <__assert_fail@plt+0x71f0>
   18254:	b	182a8 <__assert_fail@plt+0x71f0>
   18258:	ldr	r0, [fp, #8]
   1825c:	cmn	r0, #1
   18260:	bne	182a8 <__assert_fail@plt+0x71f0>
   18264:	b	18268 <__assert_fail@plt+0x71b0>
   18268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1826c:	add	r0, r0, #0
   18270:	movw	r1, #0
   18274:	cmp	r1, r0
   18278:	blt	18380 <__assert_fail@plt+0x72c8>
   1827c:	b	18394 <__assert_fail@plt+0x72dc>
   18280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18284:	movw	r1, #0
   18288:	cmp	r1, r0
   1828c:	bge	18394 <__assert_fail@plt+0x72dc>
   18290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18294:	sub	r0, r0, #1
   18298:	mvn	r1, #0
   1829c:	cmp	r1, r0
   182a0:	blt	18380 <__assert_fail@plt+0x72c8>
   182a4:	b	18394 <__assert_fail@plt+0x72dc>
   182a8:	ldr	r0, [fp, #8]
   182ac:	movw	r1, #0
   182b0:	sdiv	r0, r1, r0
   182b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182b8:	cmp	r0, r1
   182bc:	blt	18380 <__assert_fail@plt+0x72c8>
   182c0:	b	18394 <__assert_fail@plt+0x72dc>
   182c4:	ldr	r0, [fp, #8]
   182c8:	cmp	r0, #0
   182cc:	bne	182d4 <__assert_fail@plt+0x721c>
   182d0:	b	18394 <__assert_fail@plt+0x72dc>
   182d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182d8:	cmp	r0, #0
   182dc:	bge	18348 <__assert_fail@plt+0x7290>
   182e0:	b	182e4 <__assert_fail@plt+0x722c>
   182e4:	b	1832c <__assert_fail@plt+0x7274>
   182e8:	b	1832c <__assert_fail@plt+0x7274>
   182ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182f0:	cmn	r0, #1
   182f4:	bne	1832c <__assert_fail@plt+0x7274>
   182f8:	b	182fc <__assert_fail@plt+0x7244>
   182fc:	ldr	r0, [fp, #8]
   18300:	add	r0, r0, #0
   18304:	movw	r1, #0
   18308:	cmp	r1, r0
   1830c:	blt	18380 <__assert_fail@plt+0x72c8>
   18310:	b	18394 <__assert_fail@plt+0x72dc>
   18314:	ldr	r0, [fp, #8]
   18318:	sub	r0, r0, #1
   1831c:	mvn	r1, #0
   18320:	cmp	r1, r0
   18324:	blt	18380 <__assert_fail@plt+0x72c8>
   18328:	b	18394 <__assert_fail@plt+0x72dc>
   1832c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18330:	movw	r1, #0
   18334:	sdiv	r0, r1, r0
   18338:	ldr	r1, [fp, #8]
   1833c:	cmp	r0, r1
   18340:	blt	18380 <__assert_fail@plt+0x72c8>
   18344:	b	18394 <__assert_fail@plt+0x72dc>
   18348:	ldr	r0, [fp, #8]
   1834c:	asr	r3, r0, #31
   18350:	mvn	r1, #0
   18354:	str	r0, [sp, #180]	; 0xb4
   18358:	mov	r0, r1
   1835c:	ldr	r2, [sp, #180]	; 0xb4
   18360:	bl	1e22c <__assert_fail@plt+0xd174>
   18364:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18368:	subs	r0, r0, r2
   1836c:	sbcs	r1, r1, r2, asr #31
   18370:	str	r0, [sp, #176]	; 0xb0
   18374:	str	r1, [sp, #172]	; 0xac
   18378:	bcs	18394 <__assert_fail@plt+0x72dc>
   1837c:	b	18380 <__assert_fail@plt+0x72c8>
   18380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18384:	ldr	r1, [fp, #8]
   18388:	mul	r0, r0, r1
   1838c:	str	r0, [fp, #-28]	; 0xffffffe4
   18390:	b	183a8 <__assert_fail@plt+0x72f0>
   18394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18398:	ldr	r1, [fp, #8]
   1839c:	mul	r0, r0, r1
   183a0:	str	r0, [fp, #-28]	; 0xffffffe4
   183a4:	b	183b8 <__assert_fail@plt+0x7300>
   183a8:	ldr	r0, [pc, #-1108]	; 17f5c <__assert_fail@plt+0x6ea4>
   183ac:	str	r0, [sp, #168]	; 0xa8
   183b0:	b	183d8 <__assert_fail@plt+0x7320>
   183b4:			; <UNDEFINED> instruction: 0xffff8000
   183b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   183bc:	cmp	r0, #64	; 0x40
   183c0:	movw	r0, #0
   183c4:	movlt	r0, #1
   183c8:	tst	r0, #1
   183cc:	movw	r0, #64	; 0x40
   183d0:	moveq	r0, #0
   183d4:	str	r0, [sp, #168]	; 0xa8
   183d8:	ldr	r0, [sp, #168]	; 0xa8
   183dc:	str	r0, [fp, #-32]	; 0xffffffe0
   183e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   183e4:	cmp	r0, #0
   183e8:	beq	18418 <__assert_fail@plt+0x7360>
   183ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   183f0:	ldr	r1, [fp, #8]
   183f4:	sdiv	r0, r0, r1
   183f8:	str	r0, [fp, #-24]	; 0xffffffe8
   183fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18400:	mov	r1, r0
   18404:	ldr	r2, [fp, #8]
   18408:	sdiv	r3, r0, r2
   1840c:	mls	r0, r3, r2, r0
   18410:	sub	r0, r1, r0
   18414:	str	r0, [fp, #-28]	; 0xffffffe4
   18418:	ldr	r0, [fp, #-4]
   1841c:	movw	r1, #0
   18420:	cmp	r0, r1
   18424:	bne	18434 <__assert_fail@plt+0x737c>
   18428:	ldr	r0, [fp, #-8]
   1842c:	movw	r1, #0
   18430:	str	r1, [r0]
   18434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18438:	ldr	r1, [fp, #-20]	; 0xffffffec
   1843c:	sub	r0, r0, r1
   18440:	ldr	r1, [fp, #-12]
   18444:	cmp	r0, r1
   18448:	bge	19880 <__assert_fail@plt+0x87c8>
   1844c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18450:	ldr	r1, [fp, #-12]
   18454:	add	r1, r0, r1
   18458:	mov	r2, #1
   1845c:	cmp	r1, r0
   18460:	movwvc	r2, #0
   18464:	str	r1, [fp, #-24]	; 0xffffffe8
   18468:	tst	r2, #1
   1846c:	bne	1987c <__assert_fail@plt+0x87c4>
   18470:	ldr	r0, [fp, #-16]
   18474:	movw	r1, #0
   18478:	cmp	r1, r0
   1847c:	bgt	18490 <__assert_fail@plt+0x73d8>
   18480:	ldr	r0, [fp, #-16]
   18484:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18488:	cmp	r0, r1
   1848c:	blt	1987c <__assert_fail@plt+0x87c4>
   18490:	b	1886c <__assert_fail@plt+0x77b4>
   18494:	b	18498 <__assert_fail@plt+0x73e0>
   18498:	ldr	r0, [fp, #8]
   1849c:	cmp	r0, #0
   184a0:	bge	185b4 <__assert_fail@plt+0x74fc>
   184a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184a8:	cmp	r0, #0
   184ac:	bge	18538 <__assert_fail@plt+0x7480>
   184b0:	b	184b4 <__assert_fail@plt+0x73fc>
   184b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184b8:	ldr	r1, [fp, #8]
   184bc:	movw	r2, #127	; 0x7f
   184c0:	sdiv	r1, r2, r1
   184c4:	cmp	r0, r1
   184c8:	blt	18654 <__assert_fail@plt+0x759c>
   184cc:	b	1866c <__assert_fail@plt+0x75b4>
   184d0:	b	184d4 <__assert_fail@plt+0x741c>
   184d4:	ldr	r0, [pc, #-1260]	; 17ff0 <__assert_fail@plt+0x6f38>
   184d8:	ldr	r1, [fp, #8]
   184dc:	cmp	r1, r0
   184e0:	blt	184f8 <__assert_fail@plt+0x7440>
   184e4:	b	18504 <__assert_fail@plt+0x744c>
   184e8:	ldr	r0, [fp, #8]
   184ec:	movw	r1, #0
   184f0:	cmp	r1, r0
   184f4:	bge	18504 <__assert_fail@plt+0x744c>
   184f8:	movw	r0, #0
   184fc:	str	r0, [sp, #164]	; 0xa4
   18500:	b	1851c <__assert_fail@plt+0x7464>
   18504:	ldr	r0, [fp, #8]
   18508:	movw	r1, #0
   1850c:	sub	r0, r1, r0
   18510:	movw	r1, #127	; 0x7f
   18514:	sdiv	r0, r1, r0
   18518:	str	r0, [sp, #164]	; 0xa4
   1851c:	ldr	r0, [sp, #164]	; 0xa4
   18520:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18524:	mvn	r2, #0
   18528:	sub	r1, r2, r1
   1852c:	cmp	r0, r1
   18530:	ble	18654 <__assert_fail@plt+0x759c>
   18534:	b	1866c <__assert_fail@plt+0x75b4>
   18538:	b	1853c <__assert_fail@plt+0x7484>
   1853c:	b	18598 <__assert_fail@plt+0x74e0>
   18540:	b	18598 <__assert_fail@plt+0x74e0>
   18544:	ldr	r0, [fp, #8]
   18548:	cmn	r0, #1
   1854c:	bne	18598 <__assert_fail@plt+0x74e0>
   18550:	b	18554 <__assert_fail@plt+0x749c>
   18554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18558:	mvn	r1, #127	; 0x7f
   1855c:	add	r0, r0, r1
   18560:	movw	r1, #0
   18564:	cmp	r1, r0
   18568:	blt	18654 <__assert_fail@plt+0x759c>
   1856c:	b	1866c <__assert_fail@plt+0x75b4>
   18570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18574:	movw	r1, #0
   18578:	cmp	r1, r0
   1857c:	bge	1866c <__assert_fail@plt+0x75b4>
   18580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18584:	sub	r0, r0, #1
   18588:	movw	r1, #127	; 0x7f
   1858c:	cmp	r1, r0
   18590:	blt	18654 <__assert_fail@plt+0x759c>
   18594:	b	1866c <__assert_fail@plt+0x75b4>
   18598:	ldr	r0, [fp, #8]
   1859c:	mvn	r1, #127	; 0x7f
   185a0:	sdiv	r0, r1, r0
   185a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185a8:	cmp	r0, r1
   185ac:	blt	18654 <__assert_fail@plt+0x759c>
   185b0:	b	1866c <__assert_fail@plt+0x75b4>
   185b4:	ldr	r0, [fp, #8]
   185b8:	cmp	r0, #0
   185bc:	bne	185c4 <__assert_fail@plt+0x750c>
   185c0:	b	1866c <__assert_fail@plt+0x75b4>
   185c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185c8:	cmp	r0, #0
   185cc:	bge	1863c <__assert_fail@plt+0x7584>
   185d0:	b	185d4 <__assert_fail@plt+0x751c>
   185d4:	b	18620 <__assert_fail@plt+0x7568>
   185d8:	b	18620 <__assert_fail@plt+0x7568>
   185dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185e0:	cmn	r0, #1
   185e4:	bne	18620 <__assert_fail@plt+0x7568>
   185e8:	b	185ec <__assert_fail@plt+0x7534>
   185ec:	ldr	r0, [fp, #8]
   185f0:	mvn	r1, #127	; 0x7f
   185f4:	add	r0, r0, r1
   185f8:	movw	r1, #0
   185fc:	cmp	r1, r0
   18600:	blt	18654 <__assert_fail@plt+0x759c>
   18604:	b	1866c <__assert_fail@plt+0x75b4>
   18608:	ldr	r0, [fp, #8]
   1860c:	sub	r0, r0, #1
   18610:	movw	r1, #127	; 0x7f
   18614:	cmp	r1, r0
   18618:	blt	18654 <__assert_fail@plt+0x759c>
   1861c:	b	1866c <__assert_fail@plt+0x75b4>
   18620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18624:	mvn	r1, #127	; 0x7f
   18628:	sdiv	r0, r1, r0
   1862c:	ldr	r1, [fp, #8]
   18630:	cmp	r0, r1
   18634:	blt	18654 <__assert_fail@plt+0x759c>
   18638:	b	1866c <__assert_fail@plt+0x75b4>
   1863c:	ldr	r0, [fp, #8]
   18640:	movw	r1, #127	; 0x7f
   18644:	sdiv	r0, r1, r0
   18648:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1864c:	cmp	r0, r1
   18650:	bge	1866c <__assert_fail@plt+0x75b4>
   18654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18658:	ldr	r1, [fp, #8]
   1865c:	mul	r0, r0, r1
   18660:	sxtb	r0, r0
   18664:	str	r0, [fp, #-28]	; 0xffffffe4
   18668:	b	1987c <__assert_fail@plt+0x87c4>
   1866c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18670:	ldr	r1, [fp, #8]
   18674:	mul	r0, r0, r1
   18678:	sxtb	r0, r0
   1867c:	str	r0, [fp, #-28]	; 0xffffffe4
   18680:	b	19880 <__assert_fail@plt+0x87c8>
   18684:	ldr	r0, [fp, #8]
   18688:	cmp	r0, #0
   1868c:	bge	1879c <__assert_fail@plt+0x76e4>
   18690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18694:	cmp	r0, #0
   18698:	bge	18724 <__assert_fail@plt+0x766c>
   1869c:	b	186a0 <__assert_fail@plt+0x75e8>
   186a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186a4:	ldr	r1, [fp, #8]
   186a8:	movw	r2, #255	; 0xff
   186ac:	sdiv	r1, r2, r1
   186b0:	cmp	r0, r1
   186b4:	blt	18838 <__assert_fail@plt+0x7780>
   186b8:	b	18854 <__assert_fail@plt+0x779c>
   186bc:	b	186c0 <__assert_fail@plt+0x7608>
   186c0:	ldr	r0, [pc, #-1752]	; 17ff0 <__assert_fail@plt+0x6f38>
   186c4:	ldr	r1, [fp, #8]
   186c8:	cmp	r1, r0
   186cc:	blt	186e4 <__assert_fail@plt+0x762c>
   186d0:	b	186f0 <__assert_fail@plt+0x7638>
   186d4:	ldr	r0, [fp, #8]
   186d8:	movw	r1, #0
   186dc:	cmp	r1, r0
   186e0:	bge	186f0 <__assert_fail@plt+0x7638>
   186e4:	movw	r0, #0
   186e8:	str	r0, [sp, #160]	; 0xa0
   186ec:	b	18708 <__assert_fail@plt+0x7650>
   186f0:	ldr	r0, [fp, #8]
   186f4:	movw	r1, #0
   186f8:	sub	r0, r1, r0
   186fc:	movw	r1, #255	; 0xff
   18700:	sdiv	r0, r1, r0
   18704:	str	r0, [sp, #160]	; 0xa0
   18708:	ldr	r0, [sp, #160]	; 0xa0
   1870c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18710:	mvn	r2, #0
   18714:	sub	r1, r2, r1
   18718:	cmp	r0, r1
   1871c:	ble	18838 <__assert_fail@plt+0x7780>
   18720:	b	18854 <__assert_fail@plt+0x779c>
   18724:	b	18728 <__assert_fail@plt+0x7670>
   18728:	b	18780 <__assert_fail@plt+0x76c8>
   1872c:	b	18780 <__assert_fail@plt+0x76c8>
   18730:	ldr	r0, [fp, #8]
   18734:	cmn	r0, #1
   18738:	bne	18780 <__assert_fail@plt+0x76c8>
   1873c:	b	18740 <__assert_fail@plt+0x7688>
   18740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18744:	add	r0, r0, #0
   18748:	movw	r1, #0
   1874c:	cmp	r1, r0
   18750:	blt	18838 <__assert_fail@plt+0x7780>
   18754:	b	18854 <__assert_fail@plt+0x779c>
   18758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1875c:	movw	r1, #0
   18760:	cmp	r1, r0
   18764:	bge	18854 <__assert_fail@plt+0x779c>
   18768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1876c:	sub	r0, r0, #1
   18770:	mvn	r1, #0
   18774:	cmp	r1, r0
   18778:	blt	18838 <__assert_fail@plt+0x7780>
   1877c:	b	18854 <__assert_fail@plt+0x779c>
   18780:	ldr	r0, [fp, #8]
   18784:	movw	r1, #0
   18788:	sdiv	r0, r1, r0
   1878c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18790:	cmp	r0, r1
   18794:	blt	18838 <__assert_fail@plt+0x7780>
   18798:	b	18854 <__assert_fail@plt+0x779c>
   1879c:	ldr	r0, [fp, #8]
   187a0:	cmp	r0, #0
   187a4:	bne	187ac <__assert_fail@plt+0x76f4>
   187a8:	b	18854 <__assert_fail@plt+0x779c>
   187ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187b0:	cmp	r0, #0
   187b4:	bge	18820 <__assert_fail@plt+0x7768>
   187b8:	b	187bc <__assert_fail@plt+0x7704>
   187bc:	b	18804 <__assert_fail@plt+0x774c>
   187c0:	b	18804 <__assert_fail@plt+0x774c>
   187c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187c8:	cmn	r0, #1
   187cc:	bne	18804 <__assert_fail@plt+0x774c>
   187d0:	b	187d4 <__assert_fail@plt+0x771c>
   187d4:	ldr	r0, [fp, #8]
   187d8:	add	r0, r0, #0
   187dc:	movw	r1, #0
   187e0:	cmp	r1, r0
   187e4:	blt	18838 <__assert_fail@plt+0x7780>
   187e8:	b	18854 <__assert_fail@plt+0x779c>
   187ec:	ldr	r0, [fp, #8]
   187f0:	sub	r0, r0, #1
   187f4:	mvn	r1, #0
   187f8:	cmp	r1, r0
   187fc:	blt	18838 <__assert_fail@plt+0x7780>
   18800:	b	18854 <__assert_fail@plt+0x779c>
   18804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18808:	movw	r1, #0
   1880c:	sdiv	r0, r1, r0
   18810:	ldr	r1, [fp, #8]
   18814:	cmp	r0, r1
   18818:	blt	18838 <__assert_fail@plt+0x7780>
   1881c:	b	18854 <__assert_fail@plt+0x779c>
   18820:	ldr	r0, [fp, #8]
   18824:	movw	r1, #255	; 0xff
   18828:	sdiv	r0, r1, r0
   1882c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18830:	cmp	r0, r1
   18834:	bge	18854 <__assert_fail@plt+0x779c>
   18838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1883c:	ldr	r1, [fp, #8]
   18840:	mul	r0, r0, r1
   18844:	and	r0, r0, #255	; 0xff
   18848:	str	r0, [fp, #-28]	; 0xffffffe4
   1884c:	b	1987c <__assert_fail@plt+0x87c4>
   18850:	andhi	r0, r0, r0
   18854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18858:	ldr	r1, [fp, #8]
   1885c:	mul	r0, r0, r1
   18860:	and	r0, r0, #255	; 0xff
   18864:	str	r0, [fp, #-28]	; 0xffffffe4
   18868:	b	19880 <__assert_fail@plt+0x87c8>
   1886c:	b	18c44 <__assert_fail@plt+0x7b8c>
   18870:	b	18874 <__assert_fail@plt+0x77bc>
   18874:	ldr	r0, [fp, #8]
   18878:	cmp	r0, #0
   1887c:	bge	18990 <__assert_fail@plt+0x78d8>
   18880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18884:	cmp	r0, #0
   18888:	bge	18914 <__assert_fail@plt+0x785c>
   1888c:	b	18890 <__assert_fail@plt+0x77d8>
   18890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18894:	ldr	r1, [fp, #8]
   18898:	movw	r2, #32767	; 0x7fff
   1889c:	sdiv	r1, r2, r1
   188a0:	cmp	r0, r1
   188a4:	blt	18a30 <__assert_fail@plt+0x7978>
   188a8:	b	18a48 <__assert_fail@plt+0x7990>
   188ac:	b	188b0 <__assert_fail@plt+0x77f8>
   188b0:	ldr	r0, [pc, #4084]	; 198ac <__assert_fail@plt+0x87f4>
   188b4:	ldr	r1, [fp, #8]
   188b8:	cmp	r1, r0
   188bc:	blt	188d4 <__assert_fail@plt+0x781c>
   188c0:	b	188e0 <__assert_fail@plt+0x7828>
   188c4:	ldr	r0, [fp, #8]
   188c8:	movw	r1, #0
   188cc:	cmp	r1, r0
   188d0:	bge	188e0 <__assert_fail@plt+0x7828>
   188d4:	movw	r0, #0
   188d8:	str	r0, [sp, #156]	; 0x9c
   188dc:	b	188f8 <__assert_fail@plt+0x7840>
   188e0:	ldr	r0, [fp, #8]
   188e4:	movw	r1, #0
   188e8:	sub	r0, r1, r0
   188ec:	movw	r1, #32767	; 0x7fff
   188f0:	sdiv	r0, r1, r0
   188f4:	str	r0, [sp, #156]	; 0x9c
   188f8:	ldr	r0, [sp, #156]	; 0x9c
   188fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18900:	mvn	r2, #0
   18904:	sub	r1, r2, r1
   18908:	cmp	r0, r1
   1890c:	ble	18a30 <__assert_fail@plt+0x7978>
   18910:	b	18a48 <__assert_fail@plt+0x7990>
   18914:	b	18918 <__assert_fail@plt+0x7860>
   18918:	b	18974 <__assert_fail@plt+0x78bc>
   1891c:	b	18974 <__assert_fail@plt+0x78bc>
   18920:	ldr	r0, [fp, #8]
   18924:	cmn	r0, #1
   18928:	bne	18974 <__assert_fail@plt+0x78bc>
   1892c:	b	18930 <__assert_fail@plt+0x7878>
   18930:	ldr	r0, [pc, #3964]	; 198b4 <__assert_fail@plt+0x87fc>
   18934:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18938:	add	r0, r1, r0
   1893c:	movw	r1, #0
   18940:	cmp	r1, r0
   18944:	blt	18a30 <__assert_fail@plt+0x7978>
   18948:	b	18a48 <__assert_fail@plt+0x7990>
   1894c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18950:	movw	r1, #0
   18954:	cmp	r1, r0
   18958:	bge	18a48 <__assert_fail@plt+0x7990>
   1895c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18960:	sub	r0, r0, #1
   18964:	movw	r1, #32767	; 0x7fff
   18968:	cmp	r1, r0
   1896c:	blt	18a30 <__assert_fail@plt+0x7978>
   18970:	b	18a48 <__assert_fail@plt+0x7990>
   18974:	ldr	r0, [pc, #3896]	; 198b4 <__assert_fail@plt+0x87fc>
   18978:	ldr	r1, [fp, #8]
   1897c:	sdiv	r0, r0, r1
   18980:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18984:	cmp	r0, r1
   18988:	blt	18a30 <__assert_fail@plt+0x7978>
   1898c:	b	18a48 <__assert_fail@plt+0x7990>
   18990:	ldr	r0, [fp, #8]
   18994:	cmp	r0, #0
   18998:	bne	189a0 <__assert_fail@plt+0x78e8>
   1899c:	b	18a48 <__assert_fail@plt+0x7990>
   189a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189a4:	cmp	r0, #0
   189a8:	bge	18a18 <__assert_fail@plt+0x7960>
   189ac:	b	189b0 <__assert_fail@plt+0x78f8>
   189b0:	b	189fc <__assert_fail@plt+0x7944>
   189b4:	b	189fc <__assert_fail@plt+0x7944>
   189b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189bc:	cmn	r0, #1
   189c0:	bne	189fc <__assert_fail@plt+0x7944>
   189c4:	b	189c8 <__assert_fail@plt+0x7910>
   189c8:	ldr	r0, [pc, #3812]	; 198b4 <__assert_fail@plt+0x87fc>
   189cc:	ldr	r1, [fp, #8]
   189d0:	add	r0, r1, r0
   189d4:	movw	r1, #0
   189d8:	cmp	r1, r0
   189dc:	blt	18a30 <__assert_fail@plt+0x7978>
   189e0:	b	18a48 <__assert_fail@plt+0x7990>
   189e4:	ldr	r0, [fp, #8]
   189e8:	sub	r0, r0, #1
   189ec:	movw	r1, #32767	; 0x7fff
   189f0:	cmp	r1, r0
   189f4:	blt	18a30 <__assert_fail@plt+0x7978>
   189f8:	b	18a48 <__assert_fail@plt+0x7990>
   189fc:	ldr	r0, [pc, #3760]	; 198b4 <__assert_fail@plt+0x87fc>
   18a00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a04:	sdiv	r0, r0, r1
   18a08:	ldr	r1, [fp, #8]
   18a0c:	cmp	r0, r1
   18a10:	blt	18a30 <__assert_fail@plt+0x7978>
   18a14:	b	18a48 <__assert_fail@plt+0x7990>
   18a18:	ldr	r0, [fp, #8]
   18a1c:	movw	r1, #32767	; 0x7fff
   18a20:	sdiv	r0, r1, r0
   18a24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a28:	cmp	r0, r1
   18a2c:	bge	18a48 <__assert_fail@plt+0x7990>
   18a30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a34:	ldr	r1, [fp, #8]
   18a38:	mul	r0, r0, r1
   18a3c:	sxth	r0, r0
   18a40:	str	r0, [fp, #-28]	; 0xffffffe4
   18a44:	b	1987c <__assert_fail@plt+0x87c4>
   18a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a4c:	ldr	r1, [fp, #8]
   18a50:	mul	r0, r0, r1
   18a54:	sxth	r0, r0
   18a58:	str	r0, [fp, #-28]	; 0xffffffe4
   18a5c:	b	19880 <__assert_fail@plt+0x87c8>
   18a60:	ldr	r0, [fp, #8]
   18a64:	cmp	r0, #0
   18a68:	bge	18b78 <__assert_fail@plt+0x7ac0>
   18a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a70:	cmp	r0, #0
   18a74:	bge	18b00 <__assert_fail@plt+0x7a48>
   18a78:	b	18a7c <__assert_fail@plt+0x79c4>
   18a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a80:	ldr	r1, [fp, #8]
   18a84:	movw	r2, #65535	; 0xffff
   18a88:	sdiv	r1, r2, r1
   18a8c:	cmp	r0, r1
   18a90:	blt	18c14 <__assert_fail@plt+0x7b5c>
   18a94:	b	18c2c <__assert_fail@plt+0x7b74>
   18a98:	b	18a9c <__assert_fail@plt+0x79e4>
   18a9c:	ldr	r0, [pc, #3592]	; 198ac <__assert_fail@plt+0x87f4>
   18aa0:	ldr	r1, [fp, #8]
   18aa4:	cmp	r1, r0
   18aa8:	blt	18ac0 <__assert_fail@plt+0x7a08>
   18aac:	b	18acc <__assert_fail@plt+0x7a14>
   18ab0:	ldr	r0, [fp, #8]
   18ab4:	movw	r1, #0
   18ab8:	cmp	r1, r0
   18abc:	bge	18acc <__assert_fail@plt+0x7a14>
   18ac0:	movw	r0, #0
   18ac4:	str	r0, [sp, #152]	; 0x98
   18ac8:	b	18ae4 <__assert_fail@plt+0x7a2c>
   18acc:	ldr	r0, [fp, #8]
   18ad0:	movw	r1, #0
   18ad4:	sub	r0, r1, r0
   18ad8:	movw	r1, #65535	; 0xffff
   18adc:	sdiv	r0, r1, r0
   18ae0:	str	r0, [sp, #152]	; 0x98
   18ae4:	ldr	r0, [sp, #152]	; 0x98
   18ae8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18aec:	mvn	r2, #0
   18af0:	sub	r1, r2, r1
   18af4:	cmp	r0, r1
   18af8:	ble	18c14 <__assert_fail@plt+0x7b5c>
   18afc:	b	18c2c <__assert_fail@plt+0x7b74>
   18b00:	b	18b04 <__assert_fail@plt+0x7a4c>
   18b04:	b	18b5c <__assert_fail@plt+0x7aa4>
   18b08:	b	18b5c <__assert_fail@plt+0x7aa4>
   18b0c:	ldr	r0, [fp, #8]
   18b10:	cmn	r0, #1
   18b14:	bne	18b5c <__assert_fail@plt+0x7aa4>
   18b18:	b	18b1c <__assert_fail@plt+0x7a64>
   18b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b20:	add	r0, r0, #0
   18b24:	movw	r1, #0
   18b28:	cmp	r1, r0
   18b2c:	blt	18c14 <__assert_fail@plt+0x7b5c>
   18b30:	b	18c2c <__assert_fail@plt+0x7b74>
   18b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b38:	movw	r1, #0
   18b3c:	cmp	r1, r0
   18b40:	bge	18c2c <__assert_fail@plt+0x7b74>
   18b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b48:	sub	r0, r0, #1
   18b4c:	mvn	r1, #0
   18b50:	cmp	r1, r0
   18b54:	blt	18c14 <__assert_fail@plt+0x7b5c>
   18b58:	b	18c2c <__assert_fail@plt+0x7b74>
   18b5c:	ldr	r0, [fp, #8]
   18b60:	movw	r1, #0
   18b64:	sdiv	r0, r1, r0
   18b68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b6c:	cmp	r0, r1
   18b70:	blt	18c14 <__assert_fail@plt+0x7b5c>
   18b74:	b	18c2c <__assert_fail@plt+0x7b74>
   18b78:	ldr	r0, [fp, #8]
   18b7c:	cmp	r0, #0
   18b80:	bne	18b88 <__assert_fail@plt+0x7ad0>
   18b84:	b	18c2c <__assert_fail@plt+0x7b74>
   18b88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b8c:	cmp	r0, #0
   18b90:	bge	18bfc <__assert_fail@plt+0x7b44>
   18b94:	b	18b98 <__assert_fail@plt+0x7ae0>
   18b98:	b	18be0 <__assert_fail@plt+0x7b28>
   18b9c:	b	18be0 <__assert_fail@plt+0x7b28>
   18ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ba4:	cmn	r0, #1
   18ba8:	bne	18be0 <__assert_fail@plt+0x7b28>
   18bac:	b	18bb0 <__assert_fail@plt+0x7af8>
   18bb0:	ldr	r0, [fp, #8]
   18bb4:	add	r0, r0, #0
   18bb8:	movw	r1, #0
   18bbc:	cmp	r1, r0
   18bc0:	blt	18c14 <__assert_fail@plt+0x7b5c>
   18bc4:	b	18c2c <__assert_fail@plt+0x7b74>
   18bc8:	ldr	r0, [fp, #8]
   18bcc:	sub	r0, r0, #1
   18bd0:	mvn	r1, #0
   18bd4:	cmp	r1, r0
   18bd8:	blt	18c14 <__assert_fail@plt+0x7b5c>
   18bdc:	b	18c2c <__assert_fail@plt+0x7b74>
   18be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18be4:	movw	r1, #0
   18be8:	sdiv	r0, r1, r0
   18bec:	ldr	r1, [fp, #8]
   18bf0:	cmp	r0, r1
   18bf4:	blt	18c14 <__assert_fail@plt+0x7b5c>
   18bf8:	b	18c2c <__assert_fail@plt+0x7b74>
   18bfc:	ldr	r0, [fp, #8]
   18c00:	movw	r1, #65535	; 0xffff
   18c04:	sdiv	r0, r1, r0
   18c08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c0c:	cmp	r0, r1
   18c10:	bge	18c2c <__assert_fail@plt+0x7b74>
   18c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c18:	ldr	r1, [fp, #8]
   18c1c:	mul	r0, r0, r1
   18c20:	uxth	r0, r0
   18c24:	str	r0, [fp, #-28]	; 0xffffffe4
   18c28:	b	1987c <__assert_fail@plt+0x87c4>
   18c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c30:	ldr	r1, [fp, #8]
   18c34:	mul	r0, r0, r1
   18c38:	uxth	r0, r0
   18c3c:	str	r0, [fp, #-28]	; 0xffffffe4
   18c40:	b	19880 <__assert_fail@plt+0x87c8>
   18c44:	b	18c48 <__assert_fail@plt+0x7b90>
   18c48:	b	18c4c <__assert_fail@plt+0x7b94>
   18c4c:	ldr	r0, [fp, #8]
   18c50:	cmp	r0, #0
   18c54:	bge	18d58 <__assert_fail@plt+0x7ca0>
   18c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c5c:	cmp	r0, #0
   18c60:	bge	18cec <__assert_fail@plt+0x7c34>
   18c64:	b	18c68 <__assert_fail@plt+0x7bb0>
   18c68:	ldr	r0, [pc, #3128]	; 198a8 <__assert_fail@plt+0x87f0>
   18c6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c70:	ldr	r2, [fp, #8]
   18c74:	sdiv	r0, r0, r2
   18c78:	cmp	r1, r0
   18c7c:	blt	18de8 <__assert_fail@plt+0x7d30>
   18c80:	b	18dfc <__assert_fail@plt+0x7d44>
   18c84:	b	18c88 <__assert_fail@plt+0x7bd0>
   18c88:	ldr	r0, [pc, #3100]	; 198ac <__assert_fail@plt+0x87f4>
   18c8c:	ldr	r1, [fp, #8]
   18c90:	cmp	r1, r0
   18c94:	blt	18cac <__assert_fail@plt+0x7bf4>
   18c98:	b	18cb8 <__assert_fail@plt+0x7c00>
   18c9c:	ldr	r0, [fp, #8]
   18ca0:	movw	r1, #0
   18ca4:	cmp	r1, r0
   18ca8:	bge	18cb8 <__assert_fail@plt+0x7c00>
   18cac:	movw	r0, #0
   18cb0:	str	r0, [sp, #148]	; 0x94
   18cb4:	b	18cd0 <__assert_fail@plt+0x7c18>
   18cb8:	ldr	r0, [pc, #3048]	; 198a8 <__assert_fail@plt+0x87f0>
   18cbc:	ldr	r1, [fp, #8]
   18cc0:	movw	r2, #0
   18cc4:	sub	r1, r2, r1
   18cc8:	sdiv	r0, r0, r1
   18ccc:	str	r0, [sp, #148]	; 0x94
   18cd0:	ldr	r0, [sp, #148]	; 0x94
   18cd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18cd8:	mvn	r2, #0
   18cdc:	sub	r1, r2, r1
   18ce0:	cmp	r0, r1
   18ce4:	ble	18de8 <__assert_fail@plt+0x7d30>
   18ce8:	b	18dfc <__assert_fail@plt+0x7d44>
   18cec:	ldr	r0, [fp, #8]
   18cf0:	cmn	r0, #1
   18cf4:	bne	18d3c <__assert_fail@plt+0x7c84>
   18cf8:	b	18cfc <__assert_fail@plt+0x7c44>
   18cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d00:	add	r0, r0, #-2147483648	; 0x80000000
   18d04:	movw	r1, #0
   18d08:	cmp	r1, r0
   18d0c:	blt	18de8 <__assert_fail@plt+0x7d30>
   18d10:	b	18dfc <__assert_fail@plt+0x7d44>
   18d14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d18:	movw	r1, #0
   18d1c:	cmp	r1, r0
   18d20:	bge	18dfc <__assert_fail@plt+0x7d44>
   18d24:	ldr	r0, [pc, #2940]	; 198a8 <__assert_fail@plt+0x87f0>
   18d28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d2c:	sub	r1, r1, #1
   18d30:	cmp	r0, r1
   18d34:	blt	18de8 <__assert_fail@plt+0x7d30>
   18d38:	b	18dfc <__assert_fail@plt+0x7d44>
   18d3c:	ldr	r0, [pc, #2924]	; 198b0 <__assert_fail@plt+0x87f8>
   18d40:	ldr	r1, [fp, #8]
   18d44:	sdiv	r0, r0, r1
   18d48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d4c:	cmp	r0, r1
   18d50:	blt	18de8 <__assert_fail@plt+0x7d30>
   18d54:	b	18dfc <__assert_fail@plt+0x7d44>
   18d58:	ldr	r0, [fp, #8]
   18d5c:	cmp	r0, #0
   18d60:	bne	18d68 <__assert_fail@plt+0x7cb0>
   18d64:	b	18dfc <__assert_fail@plt+0x7d44>
   18d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d6c:	cmp	r0, #0
   18d70:	bge	18dd0 <__assert_fail@plt+0x7d18>
   18d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d78:	cmn	r0, #1
   18d7c:	bne	18db4 <__assert_fail@plt+0x7cfc>
   18d80:	b	18d84 <__assert_fail@plt+0x7ccc>
   18d84:	ldr	r0, [fp, #8]
   18d88:	add	r0, r0, #-2147483648	; 0x80000000
   18d8c:	movw	r1, #0
   18d90:	cmp	r1, r0
   18d94:	blt	18de8 <__assert_fail@plt+0x7d30>
   18d98:	b	18dfc <__assert_fail@plt+0x7d44>
   18d9c:	ldr	r0, [pc, #2820]	; 198a8 <__assert_fail@plt+0x87f0>
   18da0:	ldr	r1, [fp, #8]
   18da4:	sub	r1, r1, #1
   18da8:	cmp	r0, r1
   18dac:	blt	18de8 <__assert_fail@plt+0x7d30>
   18db0:	b	18dfc <__assert_fail@plt+0x7d44>
   18db4:	ldr	r0, [pc, #2804]	; 198b0 <__assert_fail@plt+0x87f8>
   18db8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18dbc:	sdiv	r0, r0, r1
   18dc0:	ldr	r1, [fp, #8]
   18dc4:	cmp	r0, r1
   18dc8:	blt	18de8 <__assert_fail@plt+0x7d30>
   18dcc:	b	18dfc <__assert_fail@plt+0x7d44>
   18dd0:	ldr	r0, [pc, #2768]	; 198a8 <__assert_fail@plt+0x87f0>
   18dd4:	ldr	r1, [fp, #8]
   18dd8:	sdiv	r0, r0, r1
   18ddc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18de0:	cmp	r0, r1
   18de4:	bge	18dfc <__assert_fail@plt+0x7d44>
   18de8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dec:	ldr	r1, [fp, #8]
   18df0:	mul	r0, r0, r1
   18df4:	str	r0, [fp, #-28]	; 0xffffffe4
   18df8:	b	1987c <__assert_fail@plt+0x87c4>
   18dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e00:	ldr	r1, [fp, #8]
   18e04:	mul	r0, r0, r1
   18e08:	str	r0, [fp, #-28]	; 0xffffffe4
   18e0c:	b	19880 <__assert_fail@plt+0x87c8>
   18e10:	ldr	r0, [fp, #8]
   18e14:	cmp	r0, #0
   18e18:	bge	18f28 <__assert_fail@plt+0x7e70>
   18e1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e20:	cmp	r0, #0
   18e24:	bge	18eb0 <__assert_fail@plt+0x7df8>
   18e28:	b	18e48 <__assert_fail@plt+0x7d90>
   18e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e30:	ldr	r1, [fp, #8]
   18e34:	mvn	r2, #0
   18e38:	udiv	r1, r2, r1
   18e3c:	cmp	r0, r1
   18e40:	bcc	18fc4 <__assert_fail@plt+0x7f0c>
   18e44:	b	18fd8 <__assert_fail@plt+0x7f20>
   18e48:	b	18e4c <__assert_fail@plt+0x7d94>
   18e4c:	ldr	r0, [pc, #2648]	; 198ac <__assert_fail@plt+0x87f4>
   18e50:	ldr	r1, [fp, #8]
   18e54:	cmp	r1, r0
   18e58:	blt	18e70 <__assert_fail@plt+0x7db8>
   18e5c:	b	18e7c <__assert_fail@plt+0x7dc4>
   18e60:	ldr	r0, [fp, #8]
   18e64:	movw	r1, #0
   18e68:	cmp	r1, r0
   18e6c:	bge	18e7c <__assert_fail@plt+0x7dc4>
   18e70:	movw	r0, #1
   18e74:	str	r0, [sp, #144]	; 0x90
   18e78:	b	18e94 <__assert_fail@plt+0x7ddc>
   18e7c:	ldr	r0, [fp, #8]
   18e80:	movw	r1, #0
   18e84:	sub	r0, r1, r0
   18e88:	mvn	r1, #0
   18e8c:	udiv	r0, r1, r0
   18e90:	str	r0, [sp, #144]	; 0x90
   18e94:	ldr	r0, [sp, #144]	; 0x90
   18e98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e9c:	mvn	r2, #0
   18ea0:	sub	r1, r2, r1
   18ea4:	cmp	r0, r1
   18ea8:	bls	18fc4 <__assert_fail@plt+0x7f0c>
   18eac:	b	18fd8 <__assert_fail@plt+0x7f20>
   18eb0:	b	18eb4 <__assert_fail@plt+0x7dfc>
   18eb4:	b	18f0c <__assert_fail@plt+0x7e54>
   18eb8:	b	18f0c <__assert_fail@plt+0x7e54>
   18ebc:	ldr	r0, [fp, #8]
   18ec0:	cmn	r0, #1
   18ec4:	bne	18f0c <__assert_fail@plt+0x7e54>
   18ec8:	b	18ecc <__assert_fail@plt+0x7e14>
   18ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ed0:	add	r0, r0, #0
   18ed4:	movw	r1, #0
   18ed8:	cmp	r1, r0
   18edc:	blt	18fc4 <__assert_fail@plt+0x7f0c>
   18ee0:	b	18fd8 <__assert_fail@plt+0x7f20>
   18ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ee8:	movw	r1, #0
   18eec:	cmp	r1, r0
   18ef0:	bge	18fd8 <__assert_fail@plt+0x7f20>
   18ef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ef8:	sub	r0, r0, #1
   18efc:	mvn	r1, #0
   18f00:	cmp	r1, r0
   18f04:	blt	18fc4 <__assert_fail@plt+0x7f0c>
   18f08:	b	18fd8 <__assert_fail@plt+0x7f20>
   18f0c:	ldr	r0, [fp, #8]
   18f10:	movw	r1, #0
   18f14:	sdiv	r0, r1, r0
   18f18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f1c:	cmp	r0, r1
   18f20:	blt	18fc4 <__assert_fail@plt+0x7f0c>
   18f24:	b	18fd8 <__assert_fail@plt+0x7f20>
   18f28:	ldr	r0, [fp, #8]
   18f2c:	cmp	r0, #0
   18f30:	bne	18f38 <__assert_fail@plt+0x7e80>
   18f34:	b	18fd8 <__assert_fail@plt+0x7f20>
   18f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f3c:	cmp	r0, #0
   18f40:	bge	18fac <__assert_fail@plt+0x7ef4>
   18f44:	b	18f48 <__assert_fail@plt+0x7e90>
   18f48:	b	18f90 <__assert_fail@plt+0x7ed8>
   18f4c:	b	18f90 <__assert_fail@plt+0x7ed8>
   18f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f54:	cmn	r0, #1
   18f58:	bne	18f90 <__assert_fail@plt+0x7ed8>
   18f5c:	b	18f60 <__assert_fail@plt+0x7ea8>
   18f60:	ldr	r0, [fp, #8]
   18f64:	add	r0, r0, #0
   18f68:	movw	r1, #0
   18f6c:	cmp	r1, r0
   18f70:	blt	18fc4 <__assert_fail@plt+0x7f0c>
   18f74:	b	18fd8 <__assert_fail@plt+0x7f20>
   18f78:	ldr	r0, [fp, #8]
   18f7c:	sub	r0, r0, #1
   18f80:	mvn	r1, #0
   18f84:	cmp	r1, r0
   18f88:	blt	18fc4 <__assert_fail@plt+0x7f0c>
   18f8c:	b	18fd8 <__assert_fail@plt+0x7f20>
   18f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f94:	movw	r1, #0
   18f98:	sdiv	r0, r1, r0
   18f9c:	ldr	r1, [fp, #8]
   18fa0:	cmp	r0, r1
   18fa4:	blt	18fc4 <__assert_fail@plt+0x7f0c>
   18fa8:	b	18fd8 <__assert_fail@plt+0x7f20>
   18fac:	ldr	r0, [fp, #8]
   18fb0:	mvn	r1, #0
   18fb4:	udiv	r0, r1, r0
   18fb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fbc:	cmp	r0, r1
   18fc0:	bcs	18fd8 <__assert_fail@plt+0x7f20>
   18fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fc8:	ldr	r1, [fp, #8]
   18fcc:	mul	r0, r0, r1
   18fd0:	str	r0, [fp, #-28]	; 0xffffffe4
   18fd4:	b	1987c <__assert_fail@plt+0x87c4>
   18fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fdc:	ldr	r1, [fp, #8]
   18fe0:	mul	r0, r0, r1
   18fe4:	str	r0, [fp, #-28]	; 0xffffffe4
   18fe8:	b	19880 <__assert_fail@plt+0x87c8>
   18fec:	b	18ff0 <__assert_fail@plt+0x7f38>
   18ff0:	b	18ff4 <__assert_fail@plt+0x7f3c>
   18ff4:	ldr	r0, [fp, #8]
   18ff8:	cmp	r0, #0
   18ffc:	bge	19100 <__assert_fail@plt+0x8048>
   19000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19004:	cmp	r0, #0
   19008:	bge	19094 <__assert_fail@plt+0x7fdc>
   1900c:	b	19010 <__assert_fail@plt+0x7f58>
   19010:	ldr	r0, [pc, #2192]	; 198a8 <__assert_fail@plt+0x87f0>
   19014:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19018:	ldr	r2, [fp, #8]
   1901c:	sdiv	r0, r0, r2
   19020:	cmp	r1, r0
   19024:	blt	19190 <__assert_fail@plt+0x80d8>
   19028:	b	191a4 <__assert_fail@plt+0x80ec>
   1902c:	b	19030 <__assert_fail@plt+0x7f78>
   19030:	ldr	r0, [pc, #2164]	; 198ac <__assert_fail@plt+0x87f4>
   19034:	ldr	r1, [fp, #8]
   19038:	cmp	r1, r0
   1903c:	blt	19054 <__assert_fail@plt+0x7f9c>
   19040:	b	19060 <__assert_fail@plt+0x7fa8>
   19044:	ldr	r0, [fp, #8]
   19048:	movw	r1, #0
   1904c:	cmp	r1, r0
   19050:	bge	19060 <__assert_fail@plt+0x7fa8>
   19054:	movw	r0, #0
   19058:	str	r0, [sp, #140]	; 0x8c
   1905c:	b	19078 <__assert_fail@plt+0x7fc0>
   19060:	ldr	r0, [pc, #2112]	; 198a8 <__assert_fail@plt+0x87f0>
   19064:	ldr	r1, [fp, #8]
   19068:	movw	r2, #0
   1906c:	sub	r1, r2, r1
   19070:	sdiv	r0, r0, r1
   19074:	str	r0, [sp, #140]	; 0x8c
   19078:	ldr	r0, [sp, #140]	; 0x8c
   1907c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19080:	mvn	r2, #0
   19084:	sub	r1, r2, r1
   19088:	cmp	r0, r1
   1908c:	ble	19190 <__assert_fail@plt+0x80d8>
   19090:	b	191a4 <__assert_fail@plt+0x80ec>
   19094:	ldr	r0, [fp, #8]
   19098:	cmn	r0, #1
   1909c:	bne	190e4 <__assert_fail@plt+0x802c>
   190a0:	b	190a4 <__assert_fail@plt+0x7fec>
   190a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190a8:	add	r0, r0, #-2147483648	; 0x80000000
   190ac:	movw	r1, #0
   190b0:	cmp	r1, r0
   190b4:	blt	19190 <__assert_fail@plt+0x80d8>
   190b8:	b	191a4 <__assert_fail@plt+0x80ec>
   190bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190c0:	movw	r1, #0
   190c4:	cmp	r1, r0
   190c8:	bge	191a4 <__assert_fail@plt+0x80ec>
   190cc:	ldr	r0, [pc, #2004]	; 198a8 <__assert_fail@plt+0x87f0>
   190d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190d4:	sub	r1, r1, #1
   190d8:	cmp	r0, r1
   190dc:	blt	19190 <__assert_fail@plt+0x80d8>
   190e0:	b	191a4 <__assert_fail@plt+0x80ec>
   190e4:	ldr	r0, [pc, #1988]	; 198b0 <__assert_fail@plt+0x87f8>
   190e8:	ldr	r1, [fp, #8]
   190ec:	sdiv	r0, r0, r1
   190f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190f4:	cmp	r0, r1
   190f8:	blt	19190 <__assert_fail@plt+0x80d8>
   190fc:	b	191a4 <__assert_fail@plt+0x80ec>
   19100:	ldr	r0, [fp, #8]
   19104:	cmp	r0, #0
   19108:	bne	19110 <__assert_fail@plt+0x8058>
   1910c:	b	191a4 <__assert_fail@plt+0x80ec>
   19110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19114:	cmp	r0, #0
   19118:	bge	19178 <__assert_fail@plt+0x80c0>
   1911c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19120:	cmn	r0, #1
   19124:	bne	1915c <__assert_fail@plt+0x80a4>
   19128:	b	1912c <__assert_fail@plt+0x8074>
   1912c:	ldr	r0, [fp, #8]
   19130:	add	r0, r0, #-2147483648	; 0x80000000
   19134:	movw	r1, #0
   19138:	cmp	r1, r0
   1913c:	blt	19190 <__assert_fail@plt+0x80d8>
   19140:	b	191a4 <__assert_fail@plt+0x80ec>
   19144:	ldr	r0, [pc, #1884]	; 198a8 <__assert_fail@plt+0x87f0>
   19148:	ldr	r1, [fp, #8]
   1914c:	sub	r1, r1, #1
   19150:	cmp	r0, r1
   19154:	blt	19190 <__assert_fail@plt+0x80d8>
   19158:	b	191a4 <__assert_fail@plt+0x80ec>
   1915c:	ldr	r0, [pc, #1868]	; 198b0 <__assert_fail@plt+0x87f8>
   19160:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19164:	sdiv	r0, r0, r1
   19168:	ldr	r1, [fp, #8]
   1916c:	cmp	r0, r1
   19170:	blt	19190 <__assert_fail@plt+0x80d8>
   19174:	b	191a4 <__assert_fail@plt+0x80ec>
   19178:	ldr	r0, [pc, #1832]	; 198a8 <__assert_fail@plt+0x87f0>
   1917c:	ldr	r1, [fp, #8]
   19180:	sdiv	r0, r0, r1
   19184:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19188:	cmp	r0, r1
   1918c:	bge	191a4 <__assert_fail@plt+0x80ec>
   19190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19194:	ldr	r1, [fp, #8]
   19198:	mul	r0, r0, r1
   1919c:	str	r0, [fp, #-28]	; 0xffffffe4
   191a0:	b	1987c <__assert_fail@plt+0x87c4>
   191a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191a8:	ldr	r1, [fp, #8]
   191ac:	mul	r0, r0, r1
   191b0:	str	r0, [fp, #-28]	; 0xffffffe4
   191b4:	b	19880 <__assert_fail@plt+0x87c8>
   191b8:	ldr	r0, [fp, #8]
   191bc:	cmp	r0, #0
   191c0:	bge	192d0 <__assert_fail@plt+0x8218>
   191c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191c8:	cmp	r0, #0
   191cc:	bge	19258 <__assert_fail@plt+0x81a0>
   191d0:	b	191f0 <__assert_fail@plt+0x8138>
   191d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191d8:	ldr	r1, [fp, #8]
   191dc:	mvn	r2, #0
   191e0:	udiv	r1, r2, r1
   191e4:	cmp	r0, r1
   191e8:	bcc	1936c <__assert_fail@plt+0x82b4>
   191ec:	b	19380 <__assert_fail@plt+0x82c8>
   191f0:	b	191f4 <__assert_fail@plt+0x813c>
   191f4:	ldr	r0, [pc, #1712]	; 198ac <__assert_fail@plt+0x87f4>
   191f8:	ldr	r1, [fp, #8]
   191fc:	cmp	r1, r0
   19200:	blt	19218 <__assert_fail@plt+0x8160>
   19204:	b	19224 <__assert_fail@plt+0x816c>
   19208:	ldr	r0, [fp, #8]
   1920c:	movw	r1, #0
   19210:	cmp	r1, r0
   19214:	bge	19224 <__assert_fail@plt+0x816c>
   19218:	movw	r0, #1
   1921c:	str	r0, [sp, #136]	; 0x88
   19220:	b	1923c <__assert_fail@plt+0x8184>
   19224:	ldr	r0, [fp, #8]
   19228:	movw	r1, #0
   1922c:	sub	r0, r1, r0
   19230:	mvn	r1, #0
   19234:	udiv	r0, r1, r0
   19238:	str	r0, [sp, #136]	; 0x88
   1923c:	ldr	r0, [sp, #136]	; 0x88
   19240:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19244:	mvn	r2, #0
   19248:	sub	r1, r2, r1
   1924c:	cmp	r0, r1
   19250:	bls	1936c <__assert_fail@plt+0x82b4>
   19254:	b	19380 <__assert_fail@plt+0x82c8>
   19258:	b	1925c <__assert_fail@plt+0x81a4>
   1925c:	b	192b4 <__assert_fail@plt+0x81fc>
   19260:	b	192b4 <__assert_fail@plt+0x81fc>
   19264:	ldr	r0, [fp, #8]
   19268:	cmn	r0, #1
   1926c:	bne	192b4 <__assert_fail@plt+0x81fc>
   19270:	b	19274 <__assert_fail@plt+0x81bc>
   19274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19278:	add	r0, r0, #0
   1927c:	movw	r1, #0
   19280:	cmp	r1, r0
   19284:	blt	1936c <__assert_fail@plt+0x82b4>
   19288:	b	19380 <__assert_fail@plt+0x82c8>
   1928c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19290:	movw	r1, #0
   19294:	cmp	r1, r0
   19298:	bge	19380 <__assert_fail@plt+0x82c8>
   1929c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192a0:	sub	r0, r0, #1
   192a4:	mvn	r1, #0
   192a8:	cmp	r1, r0
   192ac:	blt	1936c <__assert_fail@plt+0x82b4>
   192b0:	b	19380 <__assert_fail@plt+0x82c8>
   192b4:	ldr	r0, [fp, #8]
   192b8:	movw	r1, #0
   192bc:	sdiv	r0, r1, r0
   192c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192c4:	cmp	r0, r1
   192c8:	blt	1936c <__assert_fail@plt+0x82b4>
   192cc:	b	19380 <__assert_fail@plt+0x82c8>
   192d0:	ldr	r0, [fp, #8]
   192d4:	cmp	r0, #0
   192d8:	bne	192e0 <__assert_fail@plt+0x8228>
   192dc:	b	19380 <__assert_fail@plt+0x82c8>
   192e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192e4:	cmp	r0, #0
   192e8:	bge	19354 <__assert_fail@plt+0x829c>
   192ec:	b	192f0 <__assert_fail@plt+0x8238>
   192f0:	b	19338 <__assert_fail@plt+0x8280>
   192f4:	b	19338 <__assert_fail@plt+0x8280>
   192f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192fc:	cmn	r0, #1
   19300:	bne	19338 <__assert_fail@plt+0x8280>
   19304:	b	19308 <__assert_fail@plt+0x8250>
   19308:	ldr	r0, [fp, #8]
   1930c:	add	r0, r0, #0
   19310:	movw	r1, #0
   19314:	cmp	r1, r0
   19318:	blt	1936c <__assert_fail@plt+0x82b4>
   1931c:	b	19380 <__assert_fail@plt+0x82c8>
   19320:	ldr	r0, [fp, #8]
   19324:	sub	r0, r0, #1
   19328:	mvn	r1, #0
   1932c:	cmp	r1, r0
   19330:	blt	1936c <__assert_fail@plt+0x82b4>
   19334:	b	19380 <__assert_fail@plt+0x82c8>
   19338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1933c:	movw	r1, #0
   19340:	sdiv	r0, r1, r0
   19344:	ldr	r1, [fp, #8]
   19348:	cmp	r0, r1
   1934c:	blt	1936c <__assert_fail@plt+0x82b4>
   19350:	b	19380 <__assert_fail@plt+0x82c8>
   19354:	ldr	r0, [fp, #8]
   19358:	mvn	r1, #0
   1935c:	udiv	r0, r1, r0
   19360:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19364:	cmp	r0, r1
   19368:	bcs	19380 <__assert_fail@plt+0x82c8>
   1936c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19370:	ldr	r1, [fp, #8]
   19374:	mul	r0, r0, r1
   19378:	str	r0, [fp, #-28]	; 0xffffffe4
   1937c:	b	1987c <__assert_fail@plt+0x87c4>
   19380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19384:	ldr	r1, [fp, #8]
   19388:	mul	r0, r0, r1
   1938c:	str	r0, [fp, #-28]	; 0xffffffe4
   19390:	b	19880 <__assert_fail@plt+0x87c8>
   19394:	b	19398 <__assert_fail@plt+0x82e0>
   19398:	ldr	r0, [fp, #8]
   1939c:	cmp	r0, #0
   193a0:	bge	19528 <__assert_fail@plt+0x8470>
   193a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193a8:	cmp	r0, #0
   193ac:	bge	19494 <__assert_fail@plt+0x83dc>
   193b0:	b	193b4 <__assert_fail@plt+0x82fc>
   193b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193b8:	ldr	r1, [fp, #8]
   193bc:	asr	r3, r1, #31
   193c0:	mvn	r2, #0
   193c4:	mvn	ip, #-2147483648	; 0x80000000
   193c8:	str	r0, [sp, #132]	; 0x84
   193cc:	mov	r0, r2
   193d0:	str	r1, [sp, #128]	; 0x80
   193d4:	mov	r1, ip
   193d8:	ldr	r2, [sp, #128]	; 0x80
   193dc:	bl	1e158 <__assert_fail@plt+0xd0a0>
   193e0:	ldr	r2, [sp, #132]	; 0x84
   193e4:	subs	r0, r2, r0
   193e8:	rscs	r1, r1, r2, asr #31
   193ec:	str	r0, [sp, #124]	; 0x7c
   193f0:	str	r1, [sp, #120]	; 0x78
   193f4:	blt	19608 <__assert_fail@plt+0x8550>
   193f8:	b	1961c <__assert_fail@plt+0x8564>
   193fc:	b	19400 <__assert_fail@plt+0x8348>
   19400:	ldr	r0, [pc, #1188]	; 198ac <__assert_fail@plt+0x87f4>
   19404:	ldr	r1, [fp, #8]
   19408:	cmp	r1, r0
   1940c:	blt	19424 <__assert_fail@plt+0x836c>
   19410:	b	19438 <__assert_fail@plt+0x8380>
   19414:	ldr	r0, [fp, #8]
   19418:	movw	r1, #0
   1941c:	cmp	r1, r0
   19420:	bge	19438 <__assert_fail@plt+0x8380>
   19424:	mov	r0, #0
   19428:	mvn	r1, #0
   1942c:	str	r1, [sp, #116]	; 0x74
   19430:	str	r0, [sp, #112]	; 0x70
   19434:	b	1946c <__assert_fail@plt+0x83b4>
   19438:	ldr	r0, [fp, #8]
   1943c:	rsb	r0, r0, #0
   19440:	asr	r3, r0, #31
   19444:	mvn	r1, #0
   19448:	mvn	r2, #-2147483648	; 0x80000000
   1944c:	str	r0, [sp, #108]	; 0x6c
   19450:	mov	r0, r1
   19454:	mov	r1, r2
   19458:	ldr	r2, [sp, #108]	; 0x6c
   1945c:	bl	1e158 <__assert_fail@plt+0xd0a0>
   19460:	str	r0, [sp, #116]	; 0x74
   19464:	str	r1, [sp, #112]	; 0x70
   19468:	b	1946c <__assert_fail@plt+0x83b4>
   1946c:	ldr	r0, [sp, #112]	; 0x70
   19470:	ldr	r1, [sp, #116]	; 0x74
   19474:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19478:	mvn	r2, r2
   1947c:	subs	r1, r2, r1
   19480:	rscs	r0, r0, r2, asr #31
   19484:	str	r1, [sp, #104]	; 0x68
   19488:	str	r0, [sp, #100]	; 0x64
   1948c:	bge	19608 <__assert_fail@plt+0x8550>
   19490:	b	1961c <__assert_fail@plt+0x8564>
   19494:	ldr	r0, [fp, #8]
   19498:	cmn	r0, #1
   1949c:	bne	194e8 <__assert_fail@plt+0x8430>
   194a0:	b	194a4 <__assert_fail@plt+0x83ec>
   194a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194a8:	mov	r1, #-2147483648	; 0x80000000
   194ac:	add	r1, r1, r0, asr #31
   194b0:	rsbs	r0, r0, #0
   194b4:	rscs	r1, r1, #0
   194b8:	str	r0, [sp, #96]	; 0x60
   194bc:	str	r1, [sp, #92]	; 0x5c
   194c0:	blt	19608 <__assert_fail@plt+0x8550>
   194c4:	b	1961c <__assert_fail@plt+0x8564>
   194c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194cc:	movw	r1, #0
   194d0:	cmp	r1, r0
   194d4:	bge	1961c <__assert_fail@plt+0x8564>
   194d8:	mov	r0, #0
   194dc:	cmp	r0, #0
   194e0:	bne	19608 <__assert_fail@plt+0x8550>
   194e4:	b	1961c <__assert_fail@plt+0x8564>
   194e8:	ldr	r0, [fp, #8]
   194ec:	asr	r3, r0, #31
   194f0:	mov	r1, #0
   194f4:	mov	r2, #-2147483648	; 0x80000000
   194f8:	str	r0, [sp, #88]	; 0x58
   194fc:	mov	r0, r1
   19500:	mov	r1, r2
   19504:	ldr	r2, [sp, #88]	; 0x58
   19508:	bl	1e158 <__assert_fail@plt+0xd0a0>
   1950c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19510:	subs	r0, r0, r2
   19514:	sbcs	r1, r1, r2, asr #31
   19518:	str	r0, [sp, #84]	; 0x54
   1951c:	str	r1, [sp, #80]	; 0x50
   19520:	blt	19608 <__assert_fail@plt+0x8550>
   19524:	b	1961c <__assert_fail@plt+0x8564>
   19528:	ldr	r0, [fp, #8]
   1952c:	cmp	r0, #0
   19530:	bne	19538 <__assert_fail@plt+0x8480>
   19534:	b	1961c <__assert_fail@plt+0x8564>
   19538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1953c:	cmp	r0, #0
   19540:	bge	195c8 <__assert_fail@plt+0x8510>
   19544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19548:	cmn	r0, #1
   1954c:	bne	19588 <__assert_fail@plt+0x84d0>
   19550:	b	19554 <__assert_fail@plt+0x849c>
   19554:	ldr	r0, [fp, #8]
   19558:	mov	r1, #-2147483648	; 0x80000000
   1955c:	add	r1, r1, r0, asr #31
   19560:	rsbs	r0, r0, #0
   19564:	rscs	r1, r1, #0
   19568:	str	r0, [sp, #76]	; 0x4c
   1956c:	str	r1, [sp, #72]	; 0x48
   19570:	blt	19608 <__assert_fail@plt+0x8550>
   19574:	b	1961c <__assert_fail@plt+0x8564>
   19578:	mov	r0, #0
   1957c:	cmp	r0, #0
   19580:	bne	19608 <__assert_fail@plt+0x8550>
   19584:	b	1961c <__assert_fail@plt+0x8564>
   19588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1958c:	asr	r3, r0, #31
   19590:	mov	r1, #0
   19594:	mov	r2, #-2147483648	; 0x80000000
   19598:	str	r0, [sp, #68]	; 0x44
   1959c:	mov	r0, r1
   195a0:	mov	r1, r2
   195a4:	ldr	r2, [sp, #68]	; 0x44
   195a8:	bl	1e158 <__assert_fail@plt+0xd0a0>
   195ac:	ldr	r2, [fp, #8]
   195b0:	subs	r0, r0, r2
   195b4:	sbcs	r1, r1, r2, asr #31
   195b8:	str	r0, [sp, #64]	; 0x40
   195bc:	str	r1, [sp, #60]	; 0x3c
   195c0:	blt	19608 <__assert_fail@plt+0x8550>
   195c4:	b	1961c <__assert_fail@plt+0x8564>
   195c8:	ldr	r0, [fp, #8]
   195cc:	asr	r3, r0, #31
   195d0:	mvn	r1, #0
   195d4:	mvn	r2, #-2147483648	; 0x80000000
   195d8:	str	r0, [sp, #56]	; 0x38
   195dc:	mov	r0, r1
   195e0:	mov	r1, r2
   195e4:	ldr	r2, [sp, #56]	; 0x38
   195e8:	bl	1e158 <__assert_fail@plt+0xd0a0>
   195ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   195f0:	subs	r0, r0, r2
   195f4:	sbcs	r1, r1, r2, asr #31
   195f8:	str	r0, [sp, #52]	; 0x34
   195fc:	str	r1, [sp, #48]	; 0x30
   19600:	bge	1961c <__assert_fail@plt+0x8564>
   19604:	b	19608 <__assert_fail@plt+0x8550>
   19608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1960c:	ldr	r1, [fp, #8]
   19610:	mul	r0, r0, r1
   19614:	str	r0, [fp, #-28]	; 0xffffffe4
   19618:	b	1987c <__assert_fail@plt+0x87c4>
   1961c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19620:	ldr	r1, [fp, #8]
   19624:	mul	r0, r0, r1
   19628:	str	r0, [fp, #-28]	; 0xffffffe4
   1962c:	b	19880 <__assert_fail@plt+0x87c8>
   19630:	ldr	r0, [fp, #8]
   19634:	cmp	r0, #0
   19638:	bge	19798 <__assert_fail@plt+0x86e0>
   1963c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19640:	cmp	r0, #0
   19644:	bge	19720 <__assert_fail@plt+0x8668>
   19648:	b	19690 <__assert_fail@plt+0x85d8>
   1964c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19650:	ldr	r1, [fp, #8]
   19654:	asr	r3, r1, #31
   19658:	mvn	r2, #0
   1965c:	str	r0, [sp, #44]	; 0x2c
   19660:	mov	r0, r2
   19664:	str	r1, [sp, #40]	; 0x28
   19668:	mov	r1, r2
   1966c:	ldr	r2, [sp, #40]	; 0x28
   19670:	bl	1e22c <__assert_fail@plt+0xd174>
   19674:	ldr	r2, [sp, #44]	; 0x2c
   19678:	subs	r0, r2, r0
   1967c:	rscs	r1, r1, r2, asr #31
   19680:	str	r0, [sp, #36]	; 0x24
   19684:	str	r1, [sp, #32]
   19688:	bcc	19854 <__assert_fail@plt+0x879c>
   1968c:	b	19868 <__assert_fail@plt+0x87b0>
   19690:	b	19694 <__assert_fail@plt+0x85dc>
   19694:	ldr	r0, [pc, #528]	; 198ac <__assert_fail@plt+0x87f4>
   19698:	ldr	r1, [fp, #8]
   1969c:	cmp	r1, r0
   196a0:	blt	196b8 <__assert_fail@plt+0x8600>
   196a4:	b	196cc <__assert_fail@plt+0x8614>
   196a8:	ldr	r0, [fp, #8]
   196ac:	movw	r1, #0
   196b0:	cmp	r1, r0
   196b4:	bge	196cc <__assert_fail@plt+0x8614>
   196b8:	mov	r0, #1
   196bc:	mvn	r1, #0
   196c0:	str	r1, [sp, #28]
   196c4:	str	r0, [sp, #24]
   196c8:	b	196f8 <__assert_fail@plt+0x8640>
   196cc:	ldr	r0, [fp, #8]
   196d0:	rsb	r0, r0, #0
   196d4:	asr	r3, r0, #31
   196d8:	mvn	r1, #0
   196dc:	str	r0, [sp, #20]
   196e0:	mov	r0, r1
   196e4:	ldr	r2, [sp, #20]
   196e8:	bl	1e22c <__assert_fail@plt+0xd174>
   196ec:	str	r0, [sp, #28]
   196f0:	str	r1, [sp, #24]
   196f4:	b	196f8 <__assert_fail@plt+0x8640>
   196f8:	ldr	r0, [sp, #24]
   196fc:	ldr	r1, [sp, #28]
   19700:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19704:	mvn	r2, r2
   19708:	subs	r1, r2, r1
   1970c:	rscs	r0, r0, r2, asr #31
   19710:	str	r1, [sp, #16]
   19714:	str	r0, [sp, #12]
   19718:	bcs	19854 <__assert_fail@plt+0x879c>
   1971c:	b	19868 <__assert_fail@plt+0x87b0>
   19720:	b	19724 <__assert_fail@plt+0x866c>
   19724:	b	1977c <__assert_fail@plt+0x86c4>
   19728:	b	1977c <__assert_fail@plt+0x86c4>
   1972c:	ldr	r0, [fp, #8]
   19730:	cmn	r0, #1
   19734:	bne	1977c <__assert_fail@plt+0x86c4>
   19738:	b	1973c <__assert_fail@plt+0x8684>
   1973c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19740:	add	r0, r0, #0
   19744:	movw	r1, #0
   19748:	cmp	r1, r0
   1974c:	blt	19854 <__assert_fail@plt+0x879c>
   19750:	b	19868 <__assert_fail@plt+0x87b0>
   19754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19758:	movw	r1, #0
   1975c:	cmp	r1, r0
   19760:	bge	19868 <__assert_fail@plt+0x87b0>
   19764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19768:	sub	r0, r0, #1
   1976c:	mvn	r1, #0
   19770:	cmp	r1, r0
   19774:	blt	19854 <__assert_fail@plt+0x879c>
   19778:	b	19868 <__assert_fail@plt+0x87b0>
   1977c:	ldr	r0, [fp, #8]
   19780:	movw	r1, #0
   19784:	sdiv	r0, r1, r0
   19788:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1978c:	cmp	r0, r1
   19790:	blt	19854 <__assert_fail@plt+0x879c>
   19794:	b	19868 <__assert_fail@plt+0x87b0>
   19798:	ldr	r0, [fp, #8]
   1979c:	cmp	r0, #0
   197a0:	bne	197a8 <__assert_fail@plt+0x86f0>
   197a4:	b	19868 <__assert_fail@plt+0x87b0>
   197a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197ac:	cmp	r0, #0
   197b0:	bge	1981c <__assert_fail@plt+0x8764>
   197b4:	b	197b8 <__assert_fail@plt+0x8700>
   197b8:	b	19800 <__assert_fail@plt+0x8748>
   197bc:	b	19800 <__assert_fail@plt+0x8748>
   197c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197c4:	cmn	r0, #1
   197c8:	bne	19800 <__assert_fail@plt+0x8748>
   197cc:	b	197d0 <__assert_fail@plt+0x8718>
   197d0:	ldr	r0, [fp, #8]
   197d4:	add	r0, r0, #0
   197d8:	movw	r1, #0
   197dc:	cmp	r1, r0
   197e0:	blt	19854 <__assert_fail@plt+0x879c>
   197e4:	b	19868 <__assert_fail@plt+0x87b0>
   197e8:	ldr	r0, [fp, #8]
   197ec:	sub	r0, r0, #1
   197f0:	mvn	r1, #0
   197f4:	cmp	r1, r0
   197f8:	blt	19854 <__assert_fail@plt+0x879c>
   197fc:	b	19868 <__assert_fail@plt+0x87b0>
   19800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19804:	movw	r1, #0
   19808:	sdiv	r0, r1, r0
   1980c:	ldr	r1, [fp, #8]
   19810:	cmp	r0, r1
   19814:	blt	19854 <__assert_fail@plt+0x879c>
   19818:	b	19868 <__assert_fail@plt+0x87b0>
   1981c:	ldr	r0, [fp, #8]
   19820:	asr	r3, r0, #31
   19824:	mvn	r1, #0
   19828:	str	r0, [sp, #8]
   1982c:	mov	r0, r1
   19830:	ldr	r2, [sp, #8]
   19834:	bl	1e22c <__assert_fail@plt+0xd174>
   19838:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1983c:	subs	r0, r0, r2
   19840:	sbcs	r1, r1, r2, asr #31
   19844:	str	r0, [sp, #4]
   19848:	str	r1, [sp]
   1984c:	bcs	19868 <__assert_fail@plt+0x87b0>
   19850:	b	19854 <__assert_fail@plt+0x879c>
   19854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19858:	ldr	r1, [fp, #8]
   1985c:	mul	r0, r0, r1
   19860:	str	r0, [fp, #-28]	; 0xffffffe4
   19864:	b	1987c <__assert_fail@plt+0x87c4>
   19868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1986c:	ldr	r1, [fp, #8]
   19870:	mul	r0, r0, r1
   19874:	str	r0, [fp, #-28]	; 0xffffffe4
   19878:	b	19880 <__assert_fail@plt+0x87c8>
   1987c:	bl	19a58 <__assert_fail@plt+0x89a0>
   19880:	ldr	r0, [fp, #-4]
   19884:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19888:	bl	16d14 <__assert_fail@plt+0x5c5c>
   1988c:	str	r0, [fp, #-4]
   19890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19894:	ldr	r1, [fp, #-8]
   19898:	str	r0, [r1]
   1989c:	ldr	r0, [fp, #-4]
   198a0:	mov	sp, fp
   198a4:	pop	{fp, pc}
   198a8:	svcvc	0x00ffffff
   198ac:	andhi	r0, r0, r1
   198b0:	andhi	r0, r0, r0
   198b4:			; <UNDEFINED> instruction: 0xffff8000
   198b8:	push	{fp, lr}
   198bc:	mov	fp, sp
   198c0:	sub	sp, sp, #8
   198c4:	str	r0, [sp, #4]
   198c8:	ldr	r0, [sp, #4]
   198cc:	movw	r1, #1
   198d0:	bl	198dc <__assert_fail@plt+0x8824>
   198d4:	mov	sp, fp
   198d8:	pop	{fp, pc}
   198dc:	push	{fp, lr}
   198e0:	mov	fp, sp
   198e4:	sub	sp, sp, #8
   198e8:	str	r0, [sp, #4]
   198ec:	str	r1, [sp]
   198f0:	ldr	r0, [sp, #4]
   198f4:	ldr	r1, [sp]
   198f8:	bl	1bf38 <__assert_fail@plt+0xae80>
   198fc:	bl	16ca0 <__assert_fail@plt+0x5be8>
   19900:	mov	sp, fp
   19904:	pop	{fp, pc}
   19908:	push	{fp, lr}
   1990c:	mov	fp, sp
   19910:	sub	sp, sp, #8
   19914:	str	r0, [sp, #4]
   19918:	ldr	r0, [sp, #4]
   1991c:	movw	r1, #1
   19920:	bl	1992c <__assert_fail@plt+0x8874>
   19924:	mov	sp, fp
   19928:	pop	{fp, pc}
   1992c:	push	{fp, lr}
   19930:	mov	fp, sp
   19934:	sub	sp, sp, #8
   19938:	str	r0, [sp, #4]
   1993c:	str	r1, [sp]
   19940:	ldr	r0, [sp, #4]
   19944:	ldr	r1, [sp]
   19948:	bl	1c374 <__assert_fail@plt+0xb2bc>
   1994c:	bl	16ca0 <__assert_fail@plt+0x5be8>
   19950:	mov	sp, fp
   19954:	pop	{fp, pc}
   19958:	push	{fp, lr}
   1995c:	mov	fp, sp
   19960:	sub	sp, sp, #16
   19964:	str	r0, [fp, #-4]
   19968:	str	r1, [sp, #8]
   1996c:	ldr	r0, [sp, #8]
   19970:	bl	16c7c <__assert_fail@plt+0x5bc4>
   19974:	ldr	r1, [fp, #-4]
   19978:	ldr	r2, [sp, #8]
   1997c:	str	r0, [sp, #4]
   19980:	bl	10ec0 <memcpy@plt>
   19984:	ldr	r0, [sp, #4]
   19988:	mov	sp, fp
   1998c:	pop	{fp, pc}
   19990:	push	{fp, lr}
   19994:	mov	fp, sp
   19998:	sub	sp, sp, #16
   1999c:	str	r0, [fp, #-4]
   199a0:	str	r1, [sp, #8]
   199a4:	ldr	r0, [sp, #8]
   199a8:	bl	16cd0 <__assert_fail@plt+0x5c18>
   199ac:	ldr	r1, [fp, #-4]
   199b0:	ldr	r2, [sp, #8]
   199b4:	str	r0, [sp, #4]
   199b8:	bl	10ec0 <memcpy@plt>
   199bc:	ldr	r0, [sp, #4]
   199c0:	mov	sp, fp
   199c4:	pop	{fp, pc}
   199c8:	push	{fp, lr}
   199cc:	mov	fp, sp
   199d0:	sub	sp, sp, #16
   199d4:	str	r0, [fp, #-4]
   199d8:	str	r1, [sp, #8]
   199dc:	ldr	r0, [sp, #8]
   199e0:	add	r0, r0, #1
   199e4:	bl	16cd0 <__assert_fail@plt+0x5c18>
   199e8:	str	r0, [sp, #4]
   199ec:	ldr	r0, [sp, #4]
   199f0:	ldr	r1, [sp, #8]
   199f4:	add	r0, r0, r1
   199f8:	movw	r1, #0
   199fc:	strb	r1, [r0]
   19a00:	ldr	r0, [sp, #4]
   19a04:	ldr	r1, [fp, #-4]
   19a08:	ldr	r2, [sp, #8]
   19a0c:	str	r0, [sp]
   19a10:	bl	10ec0 <memcpy@plt>
   19a14:	ldr	r0, [sp]
   19a18:	mov	sp, fp
   19a1c:	pop	{fp, pc}
   19a20:	push	{fp, lr}
   19a24:	mov	fp, sp
   19a28:	sub	sp, sp, #8
   19a2c:	str	r0, [sp, #4]
   19a30:	ldr	r0, [sp, #4]
   19a34:	ldr	r1, [sp, #4]
   19a38:	str	r0, [sp]
   19a3c:	mov	r0, r1
   19a40:	bl	10fc8 <strlen@plt>
   19a44:	add	r1, r0, #1
   19a48:	ldr	r0, [sp]
   19a4c:	bl	19958 <__assert_fail@plt+0x88a0>
   19a50:	mov	sp, fp
   19a54:	pop	{fp, pc}
   19a58:	push	{fp, lr}
   19a5c:	mov	fp, sp
   19a60:	sub	sp, sp, #8
   19a64:	movw	r0, #240	; 0xf0
   19a68:	movt	r0, #3
   19a6c:	ldr	r0, [r0]
   19a70:	movw	r1, #61420	; 0xefec
   19a74:	movt	r1, #1
   19a78:	str	r0, [sp, #4]
   19a7c:	mov	r0, r1
   19a80:	bl	10fbc <gettext@plt>
   19a84:	ldr	r1, [sp, #4]
   19a88:	str	r0, [sp]
   19a8c:	mov	r0, r1
   19a90:	movw	r1, #0
   19a94:	movw	r2, #60371	; 0xebd3
   19a98:	movt	r2, #1
   19a9c:	ldr	r3, [sp]
   19aa0:	bl	10f5c <error@plt>
   19aa4:	bl	110a0 <abort@plt>
   19aa8:	push	{r4, r5, r6, sl, fp, lr}
   19aac:	add	fp, sp, #16
   19ab0:	sub	sp, sp, #112	; 0x70
   19ab4:	ldr	ip, [fp, #12]
   19ab8:	ldr	lr, [fp, #8]
   19abc:	ldr	r4, [fp, #24]
   19ac0:	ldr	r5, [fp, #20]
   19ac4:	ldr	r6, [fp, #16]
   19ac8:	str	r0, [fp, #-20]	; 0xffffffec
   19acc:	str	r1, [fp, #-24]	; 0xffffffe8
   19ad0:	str	r3, [fp, #-28]	; 0xffffffe4
   19ad4:	str	r2, [fp, #-32]	; 0xffffffe0
   19ad8:	str	ip, [fp, #-36]	; 0xffffffdc
   19adc:	str	lr, [fp, #-40]	; 0xffffffd8
   19ae0:	ldr	r0, [fp, #-20]	; 0xffffffec
   19ae4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ae8:	ldr	r1, [fp, #16]
   19aec:	movw	r3, #0
   19af0:	str	r1, [fp, #-60]	; 0xffffffc4
   19af4:	mov	r1, r3
   19af8:	sub	r3, fp, #56	; 0x38
   19afc:	ldr	ip, [fp, #-60]	; 0xffffffc4
   19b00:	str	ip, [sp]
   19b04:	str	r5, [sp, #64]	; 0x40
   19b08:	str	r4, [sp, #60]	; 0x3c
   19b0c:	str	r6, [sp, #56]	; 0x38
   19b10:	bl	19d38 <__assert_fail@plt+0x8c80>
   19b14:	str	r0, [fp, #-44]	; 0xffffffd4
   19b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b1c:	cmp	r0, #0
   19b20:	bne	19bc0 <__assert_fail@plt+0x8b08>
   19b24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19b28:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19b2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19b30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19b34:	subs	r0, r0, r2
   19b38:	sbcs	r1, r1, r3
   19b3c:	str	r0, [sp, #52]	; 0x34
   19b40:	str	r1, [sp, #48]	; 0x30
   19b44:	bcc	19b74 <__assert_fail@plt+0x8abc>
   19b48:	b	19b4c <__assert_fail@plt+0x8a94>
   19b4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19b50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19b54:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19b58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19b5c:	subs	r0, r0, r2
   19b60:	sbcs	r1, r1, r3
   19b64:	str	r0, [sp, #44]	; 0x2c
   19b68:	str	r1, [sp, #40]	; 0x28
   19b6c:	bcs	19bbc <__assert_fail@plt+0x8b04>
   19b70:	b	19b74 <__assert_fail@plt+0x8abc>
   19b74:	mov	r0, #1
   19b78:	str	r0, [fp, #-44]	; 0xffffffd4
   19b7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19b80:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19b84:	subs	r0, r0, #1073741824	; 0x40000000
   19b88:	sbcs	r1, r1, #0
   19b8c:	str	r0, [sp, #36]	; 0x24
   19b90:	str	r1, [sp, #32]
   19b94:	bcc	19bac <__assert_fail@plt+0x8af4>
   19b98:	b	19b9c <__assert_fail@plt+0x8ae4>
   19b9c:	bl	10fec <__errno_location@plt>
   19ba0:	movw	lr, #75	; 0x4b
   19ba4:	str	lr, [r0]
   19ba8:	b	19bb8 <__assert_fail@plt+0x8b00>
   19bac:	bl	10fec <__errno_location@plt>
   19bb0:	movw	lr, #34	; 0x22
   19bb4:	str	lr, [r0]
   19bb8:	b	19bbc <__assert_fail@plt+0x8b04>
   19bbc:	b	19bfc <__assert_fail@plt+0x8b44>
   19bc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19bc4:	cmp	r0, #1
   19bc8:	bne	19bdc <__assert_fail@plt+0x8b24>
   19bcc:	bl	10fec <__errno_location@plt>
   19bd0:	movw	lr, #75	; 0x4b
   19bd4:	str	lr, [r0]
   19bd8:	b	19bf8 <__assert_fail@plt+0x8b40>
   19bdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19be0:	cmp	r0, #3
   19be4:	bne	19bf4 <__assert_fail@plt+0x8b3c>
   19be8:	bl	10fec <__errno_location@plt>
   19bec:	movw	lr, #0
   19bf0:	str	lr, [r0]
   19bf4:	b	19bf8 <__assert_fail@plt+0x8b40>
   19bf8:	b	19bfc <__assert_fail@plt+0x8b44>
   19bfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c00:	cmp	r0, #0
   19c04:	beq	19ca0 <__assert_fail@plt+0x8be8>
   19c08:	ldr	r0, [fp, #24]
   19c0c:	cmp	r0, #0
   19c10:	beq	19c20 <__assert_fail@plt+0x8b68>
   19c14:	ldr	r0, [fp, #24]
   19c18:	str	r0, [sp, #28]
   19c1c:	b	19c2c <__assert_fail@plt+0x8b74>
   19c20:	movw	r0, #1
   19c24:	str	r0, [sp, #28]
   19c28:	b	19c2c <__assert_fail@plt+0x8b74>
   19c2c:	ldr	r0, [sp, #28]
   19c30:	str	r0, [sp, #24]
   19c34:	bl	10fec <__errno_location@plt>
   19c38:	ldr	r0, [r0]
   19c3c:	cmp	r0, #22
   19c40:	bne	19c50 <__assert_fail@plt+0x8b98>
   19c44:	movw	r0, #0
   19c48:	str	r0, [sp, #20]
   19c4c:	b	19c5c <__assert_fail@plt+0x8ba4>
   19c50:	bl	10fec <__errno_location@plt>
   19c54:	ldr	r0, [r0]
   19c58:	str	r0, [sp, #20]
   19c5c:	ldr	r0, [sp, #20]
   19c60:	ldr	r3, [fp, #20]
   19c64:	ldr	r1, [fp, #-20]	; 0xffffffec
   19c68:	str	r0, [sp, #16]
   19c6c:	mov	r0, r1
   19c70:	str	r3, [sp, #12]
   19c74:	bl	16230 <__assert_fail@plt+0x5178>
   19c78:	ldr	r1, [sp, #24]
   19c7c:	str	r0, [sp, #8]
   19c80:	mov	r0, r1
   19c84:	ldr	r1, [sp, #16]
   19c88:	movw	r2, #60367	; 0xebcf
   19c8c:	movt	r2, #1
   19c90:	ldr	r3, [sp, #12]
   19c94:	ldr	lr, [sp, #8]
   19c98:	str	lr, [sp]
   19c9c:	bl	10f5c <error@plt>
   19ca0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19ca4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19ca8:	sub	sp, fp, #16
   19cac:	pop	{r4, r5, r6, sl, fp, pc}
   19cb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19cb4:	add	fp, sp, #24
   19cb8:	sub	sp, sp, #56	; 0x38
   19cbc:	ldr	r1, [fp, #12]
   19cc0:	ldr	ip, [fp, #8]
   19cc4:	ldr	lr, [fp, #24]
   19cc8:	ldr	r4, [fp, #20]
   19ccc:	ldr	r5, [fp, #16]
   19cd0:	str	r0, [fp, #-28]	; 0xffffffe4
   19cd4:	str	r3, [sp, #44]	; 0x2c
   19cd8:	str	r2, [sp, #40]	; 0x28
   19cdc:	str	r1, [sp, #36]	; 0x24
   19ce0:	str	ip, [sp, #32]
   19ce4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19ce8:	ldr	r2, [sp, #40]	; 0x28
   19cec:	ldr	r3, [sp, #44]	; 0x2c
   19cf0:	ldr	r1, [sp, #32]
   19cf4:	ldr	ip, [sp, #36]	; 0x24
   19cf8:	ldr	r6, [fp, #16]
   19cfc:	ldr	r7, [fp, #20]
   19d00:	ldr	r8, [fp, #24]
   19d04:	mov	r9, sp
   19d08:	str	r8, [r9, #16]
   19d0c:	str	r7, [r9, #12]
   19d10:	str	r6, [r9, #8]
   19d14:	str	ip, [r9, #4]
   19d18:	str	r1, [r9]
   19d1c:	mov	r1, #10
   19d20:	str	lr, [sp, #28]
   19d24:	str	r4, [sp, #24]
   19d28:	str	r5, [sp, #20]
   19d2c:	bl	19aa8 <__assert_fail@plt+0x89f0>
   19d30:	sub	sp, fp, #24
   19d34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19d38:	push	{fp, lr}
   19d3c:	mov	fp, sp
   19d40:	sub	sp, sp, #88	; 0x58
   19d44:	ldr	ip, [fp, #8]
   19d48:	str	r0, [fp, #-8]
   19d4c:	str	r1, [fp, #-12]
   19d50:	str	r2, [fp, #-16]
   19d54:	str	r3, [fp, #-20]	; 0xffffffec
   19d58:	movw	r0, #0
   19d5c:	str	r0, [sp, #44]	; 0x2c
   19d60:	ldr	r1, [fp, #-16]
   19d64:	cmp	r0, r1
   19d68:	str	ip, [sp, #20]
   19d6c:	bgt	19d80 <__assert_fail@plt+0x8cc8>
   19d70:	ldr	r0, [fp, #-16]
   19d74:	cmp	r0, #36	; 0x24
   19d78:	bgt	19d80 <__assert_fail@plt+0x8cc8>
   19d7c:	b	19da0 <__assert_fail@plt+0x8ce8>
   19d80:	movw	r0, #61437	; 0xeffd
   19d84:	movt	r0, #1
   19d88:	movw	r1, #61475	; 0xf023
   19d8c:	movt	r1, #1
   19d90:	movw	r2, #85	; 0x55
   19d94:	movw	r3, #61491	; 0xf033
   19d98:	movt	r3, #1
   19d9c:	bl	110b8 <__assert_fail@plt>
   19da0:	ldr	r0, [fp, #-12]
   19da4:	movw	r1, #0
   19da8:	cmp	r0, r1
   19dac:	beq	19dbc <__assert_fail@plt+0x8d04>
   19db0:	ldr	r0, [fp, #-12]
   19db4:	str	r0, [sp, #16]
   19db8:	b	19dc8 <__assert_fail@plt+0x8d10>
   19dbc:	sub	r0, fp, #24
   19dc0:	str	r0, [sp, #16]
   19dc4:	b	19dc8 <__assert_fail@plt+0x8d10>
   19dc8:	ldr	r0, [sp, #16]
   19dcc:	str	r0, [fp, #-28]	; 0xffffffe4
   19dd0:	bl	10fec <__errno_location@plt>
   19dd4:	movw	lr, #0
   19dd8:	str	lr, [r0]
   19ddc:	ldr	r0, [fp, #-8]
   19de0:	str	r0, [sp, #40]	; 0x28
   19de4:	ldr	r0, [sp, #40]	; 0x28
   19de8:	ldrb	r0, [r0]
   19dec:	strb	r0, [sp, #39]	; 0x27
   19df0:	bl	10fa4 <__ctype_b_loc@plt>
   19df4:	ldr	r0, [r0]
   19df8:	ldrb	lr, [sp, #39]	; 0x27
   19dfc:	mov	r1, lr
   19e00:	add	r0, r0, lr, lsl #1
   19e04:	ldrh	r0, [r0]
   19e08:	and	r0, r0, #8192	; 0x2000
   19e0c:	cmp	r0, #0
   19e10:	str	r1, [sp, #12]
   19e14:	beq	19e30 <__assert_fail@plt+0x8d78>
   19e18:	ldr	r0, [sp, #40]	; 0x28
   19e1c:	add	r1, r0, #1
   19e20:	str	r1, [sp, #40]	; 0x28
   19e24:	ldrb	r0, [r0, #1]
   19e28:	strb	r0, [sp, #39]	; 0x27
   19e2c:	b	19df0 <__assert_fail@plt+0x8d38>
   19e30:	ldrb	r0, [sp, #39]	; 0x27
   19e34:	cmp	r0, #45	; 0x2d
   19e38:	bne	19e48 <__assert_fail@plt+0x8d90>
   19e3c:	movw	r0, #4
   19e40:	str	r0, [fp, #-4]
   19e44:	b	1a3c4 <__assert_fail@plt+0x930c>
   19e48:	ldr	r0, [fp, #-8]
   19e4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19e50:	ldr	r2, [fp, #-16]
   19e54:	bl	1101c <strtoumax@plt>
   19e58:	str	r1, [fp, #-36]	; 0xffffffdc
   19e5c:	str	r0, [fp, #-40]	; 0xffffffd8
   19e60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e64:	ldr	r0, [r0]
   19e68:	ldr	r1, [fp, #-8]
   19e6c:	cmp	r0, r1
   19e70:	bne	19edc <__assert_fail@plt+0x8e24>
   19e74:	ldr	r0, [fp, #8]
   19e78:	movw	r1, #0
   19e7c:	cmp	r0, r1
   19e80:	beq	19ecc <__assert_fail@plt+0x8e14>
   19e84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e88:	ldr	r0, [r0]
   19e8c:	ldrb	r0, [r0]
   19e90:	cmp	r0, #0
   19e94:	beq	19ecc <__assert_fail@plt+0x8e14>
   19e98:	ldr	r0, [fp, #8]
   19e9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ea0:	ldr	r1, [r1]
   19ea4:	ldrb	r1, [r1]
   19ea8:	bl	10fd4 <strchr@plt>
   19eac:	movw	r1, #0
   19eb0:	cmp	r0, r1
   19eb4:	beq	19ecc <__assert_fail@plt+0x8e14>
   19eb8:	mov	r0, #0
   19ebc:	str	r0, [fp, #-36]	; 0xffffffdc
   19ec0:	mov	r0, #1
   19ec4:	str	r0, [fp, #-40]	; 0xffffffd8
   19ec8:	b	19ed8 <__assert_fail@plt+0x8e20>
   19ecc:	movw	r0, #4
   19ed0:	str	r0, [fp, #-4]
   19ed4:	b	1a3c4 <__assert_fail@plt+0x930c>
   19ed8:	b	19f14 <__assert_fail@plt+0x8e5c>
   19edc:	bl	10fec <__errno_location@plt>
   19ee0:	ldr	r0, [r0]
   19ee4:	cmp	r0, #0
   19ee8:	beq	19f10 <__assert_fail@plt+0x8e58>
   19eec:	bl	10fec <__errno_location@plt>
   19ef0:	ldr	r0, [r0]
   19ef4:	cmp	r0, #34	; 0x22
   19ef8:	beq	19f08 <__assert_fail@plt+0x8e50>
   19efc:	movw	r0, #4
   19f00:	str	r0, [fp, #-4]
   19f04:	b	1a3c4 <__assert_fail@plt+0x930c>
   19f08:	movw	r0, #1
   19f0c:	str	r0, [sp, #44]	; 0x2c
   19f10:	b	19f14 <__assert_fail@plt+0x8e5c>
   19f14:	ldr	r0, [fp, #8]
   19f18:	movw	r1, #0
   19f1c:	cmp	r0, r1
   19f20:	bne	19f44 <__assert_fail@plt+0x8e8c>
   19f24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19f28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19f2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19f30:	str	r1, [r2, #4]
   19f34:	str	r0, [r2]
   19f38:	ldr	r0, [sp, #44]	; 0x2c
   19f3c:	str	r0, [fp, #-4]
   19f40:	b	1a3c4 <__assert_fail@plt+0x930c>
   19f44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19f48:	ldr	r0, [r0]
   19f4c:	ldrb	r0, [r0]
   19f50:	cmp	r0, #0
   19f54:	beq	1a3a8 <__assert_fail@plt+0x92f0>
   19f58:	movw	r0, #1024	; 0x400
   19f5c:	str	r0, [sp, #32]
   19f60:	movw	r0, #1
   19f64:	str	r0, [sp, #28]
   19f68:	ldr	r0, [fp, #8]
   19f6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19f70:	ldr	r1, [r1]
   19f74:	ldrb	r1, [r1]
   19f78:	bl	10fd4 <strchr@plt>
   19f7c:	movw	r1, #0
   19f80:	cmp	r0, r1
   19f84:	bne	19fac <__assert_fail@plt+0x8ef4>
   19f88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19f8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19f90:	ldr	r2, [fp, #-20]	; 0xffffffec
   19f94:	str	r1, [r2, #4]
   19f98:	str	r0, [r2]
   19f9c:	ldr	r0, [sp, #44]	; 0x2c
   19fa0:	orr	r0, r0, #2
   19fa4:	str	r0, [fp, #-4]
   19fa8:	b	1a3c4 <__assert_fail@plt+0x930c>
   19fac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19fb0:	ldr	r0, [r0]
   19fb4:	ldrb	r0, [r0]
   19fb8:	sub	r0, r0, #69	; 0x45
   19fbc:	cmp	r0, #47	; 0x2f
   19fc0:	str	r0, [sp, #8]
   19fc4:	bhi	1a130 <__assert_fail@plt+0x9078>
   19fc8:	add	r0, pc, #8
   19fcc:	ldr	r1, [sp, #8]
   19fd0:	ldr	r0, [r0, r1, lsl #2]
   19fd4:	mov	pc, r0
   19fd8:	muleq	r1, r8, r0
   19fdc:	andeq	sl, r1, r0, lsr r1
   19fe0:	muleq	r1, r8, r0
   19fe4:	andeq	sl, r1, r0, lsr r1
   19fe8:	andeq	sl, r1, r0, lsr r1
   19fec:	andeq	sl, r1, r0, lsr r1
   19ff0:	muleq	r1, r8, r0
   19ff4:	andeq	sl, r1, r0, lsr r1
   19ff8:	muleq	r1, r8, r0
   19ffc:	andeq	sl, r1, r0, lsr r1
   1a000:	andeq	sl, r1, r0, lsr r1
   1a004:	muleq	r1, r8, r0
   1a008:	andeq	sl, r1, r0, lsr r1
   1a00c:	andeq	sl, r1, r0, lsr r1
   1a010:	andeq	sl, r1, r0, lsr r1
   1a014:	muleq	r1, r8, r0
   1a018:	andeq	sl, r1, r0, lsr r1
   1a01c:	andeq	sl, r1, r0, lsr r1
   1a020:	andeq	sl, r1, r0, lsr r1
   1a024:	andeq	sl, r1, r0, lsr r1
   1a028:	muleq	r1, r8, r0
   1a02c:	muleq	r1, r8, r0
   1a030:	andeq	sl, r1, r0, lsr r1
   1a034:	andeq	sl, r1, r0, lsr r1
   1a038:	andeq	sl, r1, r0, lsr r1
   1a03c:	andeq	sl, r1, r0, lsr r1
   1a040:	andeq	sl, r1, r0, lsr r1
   1a044:	andeq	sl, r1, r0, lsr r1
   1a048:	andeq	sl, r1, r0, lsr r1
   1a04c:	andeq	sl, r1, r0, lsr r1
   1a050:	andeq	sl, r1, r0, lsr r1
   1a054:	andeq	sl, r1, r0, lsr r1
   1a058:	andeq	sl, r1, r0, lsr r1
   1a05c:	andeq	sl, r1, r0, lsr r1
   1a060:	muleq	r1, r8, r0
   1a064:	andeq	sl, r1, r0, lsr r1
   1a068:	andeq	sl, r1, r0, lsr r1
   1a06c:	andeq	sl, r1, r0, lsr r1
   1a070:	muleq	r1, r8, r0
   1a074:	andeq	sl, r1, r0, lsr r1
   1a078:	muleq	r1, r8, r0
   1a07c:	andeq	sl, r1, r0, lsr r1
   1a080:	andeq	sl, r1, r0, lsr r1
   1a084:	andeq	sl, r1, r0, lsr r1
   1a088:	andeq	sl, r1, r0, lsr r1
   1a08c:	andeq	sl, r1, r0, lsr r1
   1a090:	andeq	sl, r1, r0, lsr r1
   1a094:	muleq	r1, r8, r0
   1a098:	ldr	r0, [fp, #8]
   1a09c:	movw	r1, #48	; 0x30
   1a0a0:	bl	10fd4 <strchr@plt>
   1a0a4:	movw	r1, #0
   1a0a8:	cmp	r0, r1
   1a0ac:	beq	1a12c <__assert_fail@plt+0x9074>
   1a0b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a0b4:	ldr	r0, [r0]
   1a0b8:	ldrb	r0, [r0, #1]
   1a0bc:	mov	r1, r0
   1a0c0:	cmp	r0, #66	; 0x42
   1a0c4:	str	r1, [sp, #4]
   1a0c8:	beq	1a114 <__assert_fail@plt+0x905c>
   1a0cc:	b	1a0d0 <__assert_fail@plt+0x9018>
   1a0d0:	ldr	r0, [sp, #4]
   1a0d4:	cmp	r0, #68	; 0x44
   1a0d8:	beq	1a114 <__assert_fail@plt+0x905c>
   1a0dc:	b	1a0e0 <__assert_fail@plt+0x9028>
   1a0e0:	ldr	r0, [sp, #4]
   1a0e4:	cmp	r0, #105	; 0x69
   1a0e8:	bne	1a128 <__assert_fail@plt+0x9070>
   1a0ec:	b	1a0f0 <__assert_fail@plt+0x9038>
   1a0f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a0f4:	ldr	r0, [r0]
   1a0f8:	ldrb	r0, [r0, #2]
   1a0fc:	cmp	r0, #66	; 0x42
   1a100:	bne	1a110 <__assert_fail@plt+0x9058>
   1a104:	ldr	r0, [sp, #28]
   1a108:	add	r0, r0, #2
   1a10c:	str	r0, [sp, #28]
   1a110:	b	1a128 <__assert_fail@plt+0x9070>
   1a114:	movw	r0, #1000	; 0x3e8
   1a118:	str	r0, [sp, #32]
   1a11c:	ldr	r0, [sp, #28]
   1a120:	add	r0, r0, #1
   1a124:	str	r0, [sp, #28]
   1a128:	b	1a12c <__assert_fail@plt+0x9074>
   1a12c:	b	1a130 <__assert_fail@plt+0x9078>
   1a130:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a134:	ldr	r0, [r0]
   1a138:	ldrb	r0, [r0]
   1a13c:	sub	r0, r0, #66	; 0x42
   1a140:	cmp	r0, #53	; 0x35
   1a144:	str	r0, [sp]
   1a148:	bhi	1a33c <__assert_fail@plt+0x9284>
   1a14c:	add	r0, pc, #8
   1a150:	ldr	r1, [sp]
   1a154:	ldr	r0, [r0, r1, lsl #2]
   1a158:	mov	pc, r0
   1a15c:	andeq	sl, r1, r8, asr #4
   1a160:	andeq	sl, r1, ip, lsr r3
   1a164:	andeq	sl, r1, ip, lsr r3
   1a168:	andeq	sl, r1, r8, ror #4
   1a16c:	andeq	sl, r1, ip, lsr r3
   1a170:	andeq	sl, r1, r0, lsl #5
   1a174:	andeq	sl, r1, ip, lsr r3
   1a178:	andeq	sl, r1, ip, lsr r3
   1a17c:	andeq	sl, r1, ip, lsr r3
   1a180:	muleq	r1, r8, r2
   1a184:	andeq	sl, r1, ip, lsr r3
   1a188:			; <UNDEFINED> instruction: 0x0001a2b0
   1a18c:	andeq	sl, r1, ip, lsr r3
   1a190:	andeq	sl, r1, ip, lsr r3
   1a194:	andeq	sl, r1, r8, asr #5
   1a198:	andeq	sl, r1, ip, lsr r3
   1a19c:	andeq	sl, r1, ip, lsr r3
   1a1a0:	andeq	sl, r1, ip, lsr r3
   1a1a4:	andeq	sl, r1, r0, ror #5
   1a1a8:	andeq	sl, r1, ip, lsr r3
   1a1ac:	andeq	sl, r1, ip, lsr r3
   1a1b0:	andeq	sl, r1, ip, lsr r3
   1a1b4:	andeq	sl, r1, ip, lsr r3
   1a1b8:	andeq	sl, r1, ip, lsl #6
   1a1bc:	andeq	sl, r1, r4, lsr #6
   1a1c0:	andeq	sl, r1, ip, lsr r3
   1a1c4:	andeq	sl, r1, ip, lsr r3
   1a1c8:	andeq	sl, r1, ip, lsr r3
   1a1cc:	andeq	sl, r1, ip, lsr r3
   1a1d0:	andeq	sl, r1, ip, lsr r3
   1a1d4:	andeq	sl, r1, ip, lsr r3
   1a1d8:	andeq	sl, r1, ip, lsr r3
   1a1dc:	andeq	sl, r1, r4, lsr r2
   1a1e0:	andeq	sl, r1, ip, asr r2
   1a1e4:	andeq	sl, r1, ip, lsr r3
   1a1e8:	andeq	sl, r1, ip, lsr r3
   1a1ec:	andeq	sl, r1, ip, lsr r3
   1a1f0:	andeq	sl, r1, r0, lsl #5
   1a1f4:	andeq	sl, r1, ip, lsr r3
   1a1f8:	andeq	sl, r1, ip, lsr r3
   1a1fc:	andeq	sl, r1, ip, lsr r3
   1a200:	muleq	r1, r8, r2
   1a204:	andeq	sl, r1, ip, lsr r3
   1a208:			; <UNDEFINED> instruction: 0x0001a2b0
   1a20c:	andeq	sl, r1, ip, lsr r3
   1a210:	andeq	sl, r1, ip, lsr r3
   1a214:	andeq	sl, r1, ip, lsr r3
   1a218:	andeq	sl, r1, ip, lsr r3
   1a21c:	andeq	sl, r1, ip, lsr r3
   1a220:	andeq	sl, r1, ip, lsr r3
   1a224:	andeq	sl, r1, r0, ror #5
   1a228:	andeq	sl, r1, ip, lsr r3
   1a22c:	andeq	sl, r1, ip, lsr r3
   1a230:	strdeq	sl, [r1], -r8
   1a234:	sub	r0, fp, #40	; 0x28
   1a238:	movw	r1, #512	; 0x200
   1a23c:	bl	1a3d0 <__assert_fail@plt+0x9318>
   1a240:	str	r0, [sp, #24]
   1a244:	b	1a360 <__assert_fail@plt+0x92a8>
   1a248:	sub	r0, fp, #40	; 0x28
   1a24c:	movw	r1, #1024	; 0x400
   1a250:	bl	1a3d0 <__assert_fail@plt+0x9318>
   1a254:	str	r0, [sp, #24]
   1a258:	b	1a360 <__assert_fail@plt+0x92a8>
   1a25c:	movw	r0, #0
   1a260:	str	r0, [sp, #24]
   1a264:	b	1a360 <__assert_fail@plt+0x92a8>
   1a268:	ldr	r1, [sp, #32]
   1a26c:	sub	r0, fp, #40	; 0x28
   1a270:	movw	r2, #6
   1a274:	bl	1bed8 <__assert_fail@plt+0xae20>
   1a278:	str	r0, [sp, #24]
   1a27c:	b	1a360 <__assert_fail@plt+0x92a8>
   1a280:	ldr	r1, [sp, #32]
   1a284:	sub	r0, fp, #40	; 0x28
   1a288:	movw	r2, #3
   1a28c:	bl	1bed8 <__assert_fail@plt+0xae20>
   1a290:	str	r0, [sp, #24]
   1a294:	b	1a360 <__assert_fail@plt+0x92a8>
   1a298:	ldr	r1, [sp, #32]
   1a29c:	sub	r0, fp, #40	; 0x28
   1a2a0:	movw	r2, #1
   1a2a4:	bl	1bed8 <__assert_fail@plt+0xae20>
   1a2a8:	str	r0, [sp, #24]
   1a2ac:	b	1a360 <__assert_fail@plt+0x92a8>
   1a2b0:	ldr	r1, [sp, #32]
   1a2b4:	sub	r0, fp, #40	; 0x28
   1a2b8:	movw	r2, #2
   1a2bc:	bl	1bed8 <__assert_fail@plt+0xae20>
   1a2c0:	str	r0, [sp, #24]
   1a2c4:	b	1a360 <__assert_fail@plt+0x92a8>
   1a2c8:	ldr	r1, [sp, #32]
   1a2cc:	sub	r0, fp, #40	; 0x28
   1a2d0:	movw	r2, #5
   1a2d4:	bl	1bed8 <__assert_fail@plt+0xae20>
   1a2d8:	str	r0, [sp, #24]
   1a2dc:	b	1a360 <__assert_fail@plt+0x92a8>
   1a2e0:	ldr	r1, [sp, #32]
   1a2e4:	sub	r0, fp, #40	; 0x28
   1a2e8:	movw	r2, #4
   1a2ec:	bl	1bed8 <__assert_fail@plt+0xae20>
   1a2f0:	str	r0, [sp, #24]
   1a2f4:	b	1a360 <__assert_fail@plt+0x92a8>
   1a2f8:	sub	r0, fp, #40	; 0x28
   1a2fc:	movw	r1, #2
   1a300:	bl	1a3d0 <__assert_fail@plt+0x9318>
   1a304:	str	r0, [sp, #24]
   1a308:	b	1a360 <__assert_fail@plt+0x92a8>
   1a30c:	ldr	r1, [sp, #32]
   1a310:	sub	r0, fp, #40	; 0x28
   1a314:	movw	r2, #8
   1a318:	bl	1bed8 <__assert_fail@plt+0xae20>
   1a31c:	str	r0, [sp, #24]
   1a320:	b	1a360 <__assert_fail@plt+0x92a8>
   1a324:	ldr	r1, [sp, #32]
   1a328:	sub	r0, fp, #40	; 0x28
   1a32c:	movw	r2, #7
   1a330:	bl	1bed8 <__assert_fail@plt+0xae20>
   1a334:	str	r0, [sp, #24]
   1a338:	b	1a360 <__assert_fail@plt+0x92a8>
   1a33c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a340:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a344:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a348:	str	r1, [r2, #4]
   1a34c:	str	r0, [r2]
   1a350:	ldr	r0, [sp, #44]	; 0x2c
   1a354:	orr	r0, r0, #2
   1a358:	str	r0, [fp, #-4]
   1a35c:	b	1a3c4 <__assert_fail@plt+0x930c>
   1a360:	ldr	r0, [sp, #24]
   1a364:	ldr	r1, [sp, #44]	; 0x2c
   1a368:	orr	r0, r1, r0
   1a36c:	str	r0, [sp, #44]	; 0x2c
   1a370:	ldr	r0, [sp, #28]
   1a374:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a378:	ldr	r2, [r1]
   1a37c:	add	r0, r2, r0
   1a380:	str	r0, [r1]
   1a384:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a388:	ldr	r0, [r0]
   1a38c:	ldrsb	r0, [r0]
   1a390:	cmp	r0, #0
   1a394:	beq	1a3a4 <__assert_fail@plt+0x92ec>
   1a398:	ldr	r0, [sp, #44]	; 0x2c
   1a39c:	orr	r0, r0, #2
   1a3a0:	str	r0, [sp, #44]	; 0x2c
   1a3a4:	b	1a3a8 <__assert_fail@plt+0x92f0>
   1a3a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a3ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a3b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a3b4:	str	r1, [r2, #4]
   1a3b8:	str	r0, [r2]
   1a3bc:	ldr	r0, [sp, #44]	; 0x2c
   1a3c0:	str	r0, [fp, #-4]
   1a3c4:	ldr	r0, [fp, #-4]
   1a3c8:	mov	sp, fp
   1a3cc:	pop	{fp, pc}
   1a3d0:	push	{fp, lr}
   1a3d4:	mov	fp, sp
   1a3d8:	sub	sp, sp, #568	; 0x238
   1a3dc:	str	r0, [fp, #-8]
   1a3e0:	str	r1, [fp, #-12]
   1a3e4:	b	1a918 <__assert_fail@plt+0x9860>
   1a3e8:	b	1a68c <__assert_fail@plt+0x95d4>
   1a3ec:	ldr	r0, [fp, #-12]
   1a3f0:	cmp	r0, #0
   1a3f4:	bge	1a56c <__assert_fail@plt+0x94b4>
   1a3f8:	mov	r0, #1
   1a3fc:	cmp	r0, #0
   1a400:	bne	1a4b8 <__assert_fail@plt+0x9400>
   1a404:	b	1a408 <__assert_fail@plt+0x9350>
   1a408:	b	1a40c <__assert_fail@plt+0x9354>
   1a40c:	ldr	r0, [fp, #-8]
   1a410:	ldr	r1, [r0]
   1a414:	ldr	r0, [r0, #4]
   1a418:	ldr	r2, [fp, #-12]
   1a41c:	mov	r3, #127	; 0x7f
   1a420:	sdiv	r2, r3, r2
   1a424:	subs	r1, r1, r2
   1a428:	sbcs	r0, r0, r2, asr #31
   1a42c:	str	r1, [fp, #-28]	; 0xffffffe4
   1a430:	str	r0, [fp, #-32]	; 0xffffffe0
   1a434:	bcc	1a644 <__assert_fail@plt+0x958c>
   1a438:	b	1a668 <__assert_fail@plt+0x95b0>
   1a43c:	b	1a440 <__assert_fail@plt+0x9388>
   1a440:	ldr	r0, [pc, #4088]	; 1b440 <__assert_fail@plt+0xa388>
   1a444:	ldr	r1, [fp, #-12]
   1a448:	cmp	r1, r0
   1a44c:	blt	1a464 <__assert_fail@plt+0x93ac>
   1a450:	b	1a470 <__assert_fail@plt+0x93b8>
   1a454:	ldr	r0, [fp, #-12]
   1a458:	movw	r1, #0
   1a45c:	cmp	r1, r0
   1a460:	bge	1a470 <__assert_fail@plt+0x93b8>
   1a464:	movw	r0, #0
   1a468:	str	r0, [fp, #-36]	; 0xffffffdc
   1a46c:	b	1a488 <__assert_fail@plt+0x93d0>
   1a470:	ldr	r0, [fp, #-12]
   1a474:	movw	r1, #0
   1a478:	sub	r0, r1, r0
   1a47c:	movw	r1, #127	; 0x7f
   1a480:	sdiv	r0, r1, r0
   1a484:	str	r0, [fp, #-36]	; 0xffffffdc
   1a488:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a48c:	ldr	r1, [fp, #-8]
   1a490:	ldr	r2, [r1]
   1a494:	ldr	r1, [r1, #4]
   1a498:	mvn	r1, r1
   1a49c:	mvn	r2, r2
   1a4a0:	subs	r2, r2, r0
   1a4a4:	sbcs	r0, r1, r0, asr #31
   1a4a8:	str	r2, [fp, #-40]	; 0xffffffd8
   1a4ac:	str	r0, [fp, #-44]	; 0xffffffd4
   1a4b0:	bcs	1a644 <__assert_fail@plt+0x958c>
   1a4b4:	b	1a668 <__assert_fail@plt+0x95b0>
   1a4b8:	b	1a4bc <__assert_fail@plt+0x9404>
   1a4bc:	b	1a53c <__assert_fail@plt+0x9484>
   1a4c0:	b	1a53c <__assert_fail@plt+0x9484>
   1a4c4:	ldr	r0, [fp, #-12]
   1a4c8:	cmn	r0, #1
   1a4cc:	bne	1a53c <__assert_fail@plt+0x9484>
   1a4d0:	b	1a4f4 <__assert_fail@plt+0x943c>
   1a4d4:	ldr	r0, [fp, #-8]
   1a4d8:	ldr	r1, [r0]
   1a4dc:	ldr	r0, [r0, #4]
   1a4e0:	eor	r1, r1, #128	; 0x80
   1a4e4:	orr	r0, r1, r0
   1a4e8:	cmp	r0, #0
   1a4ec:	bne	1a644 <__assert_fail@plt+0x958c>
   1a4f0:	b	1a668 <__assert_fail@plt+0x95b0>
   1a4f4:	ldr	r0, [fp, #-8]
   1a4f8:	ldr	r1, [r0]
   1a4fc:	ldr	r0, [r0, #4]
   1a500:	orr	r0, r1, r0
   1a504:	cmp	r0, #0
   1a508:	beq	1a668 <__assert_fail@plt+0x95b0>
   1a50c:	b	1a510 <__assert_fail@plt+0x9458>
   1a510:	ldr	r0, [fp, #-8]
   1a514:	ldr	r1, [r0]
   1a518:	ldr	r0, [r0, #4]
   1a51c:	subs	r1, r1, #1
   1a520:	sbc	r0, r0, #0
   1a524:	rsbs	r1, r1, #127	; 0x7f
   1a528:	rscs	r0, r0, #0
   1a52c:	str	r1, [fp, #-48]	; 0xffffffd0
   1a530:	str	r0, [fp, #-52]	; 0xffffffcc
   1a534:	bcc	1a644 <__assert_fail@plt+0x958c>
   1a538:	b	1a668 <__assert_fail@plt+0x95b0>
   1a53c:	ldr	r0, [fp, #-12]
   1a540:	mvn	r1, #127	; 0x7f
   1a544:	sdiv	r0, r1, r0
   1a548:	ldr	r1, [fp, #-8]
   1a54c:	ldr	r2, [r1]
   1a550:	ldr	r1, [r1, #4]
   1a554:	subs	r2, r0, r2
   1a558:	rscs	r0, r1, r0, asr #31
   1a55c:	str	r2, [fp, #-56]	; 0xffffffc8
   1a560:	str	r0, [fp, #-60]	; 0xffffffc4
   1a564:	bcc	1a644 <__assert_fail@plt+0x958c>
   1a568:	b	1a668 <__assert_fail@plt+0x95b0>
   1a56c:	ldr	r0, [fp, #-12]
   1a570:	cmp	r0, #0
   1a574:	bne	1a57c <__assert_fail@plt+0x94c4>
   1a578:	b	1a668 <__assert_fail@plt+0x95b0>
   1a57c:	mov	r0, #1
   1a580:	cmp	r0, #0
   1a584:	bne	1a614 <__assert_fail@plt+0x955c>
   1a588:	b	1a58c <__assert_fail@plt+0x94d4>
   1a58c:	ldr	r0, [fp, #-8]
   1a590:	ldr	r1, [r0]
   1a594:	ldr	r0, [r0, #4]
   1a598:	and	r0, r1, r0
   1a59c:	cmn	r0, #1
   1a5a0:	bne	1a5e0 <__assert_fail@plt+0x9528>
   1a5a4:	b	1a5a8 <__assert_fail@plt+0x94f0>
   1a5a8:	b	1a5ac <__assert_fail@plt+0x94f4>
   1a5ac:	ldr	r0, [fp, #-12]
   1a5b0:	mvn	r1, #127	; 0x7f
   1a5b4:	add	r0, r0, r1
   1a5b8:	movw	r1, #0
   1a5bc:	cmp	r1, r0
   1a5c0:	blt	1a644 <__assert_fail@plt+0x958c>
   1a5c4:	b	1a668 <__assert_fail@plt+0x95b0>
   1a5c8:	ldr	r0, [fp, #-12]
   1a5cc:	sub	r0, r0, #1
   1a5d0:	movw	r1, #127	; 0x7f
   1a5d4:	cmp	r1, r0
   1a5d8:	blt	1a644 <__assert_fail@plt+0x958c>
   1a5dc:	b	1a668 <__assert_fail@plt+0x95b0>
   1a5e0:	ldr	r0, [fp, #-8]
   1a5e4:	ldr	r2, [r0]
   1a5e8:	ldr	r3, [r0, #4]
   1a5ec:	mvn	r0, #127	; 0x7f
   1a5f0:	mvn	r1, #0
   1a5f4:	bl	1e22c <__assert_fail@plt+0xd174>
   1a5f8:	ldr	r2, [fp, #-12]
   1a5fc:	subs	r0, r0, r2
   1a600:	sbcs	r1, r1, r2, asr #31
   1a604:	str	r0, [fp, #-64]	; 0xffffffc0
   1a608:	str	r1, [fp, #-68]	; 0xffffffbc
   1a60c:	bcc	1a644 <__assert_fail@plt+0x958c>
   1a610:	b	1a668 <__assert_fail@plt+0x95b0>
   1a614:	ldr	r0, [fp, #-12]
   1a618:	mov	r1, #127	; 0x7f
   1a61c:	sdiv	r0, r1, r0
   1a620:	ldr	r1, [fp, #-8]
   1a624:	ldr	r2, [r1]
   1a628:	ldr	r1, [r1, #4]
   1a62c:	subs	r2, r0, r2
   1a630:	rscs	r0, r1, r0, asr #31
   1a634:	str	r2, [fp, #-72]	; 0xffffffb8
   1a638:	str	r0, [fp, #-76]	; 0xffffffb4
   1a63c:	bcs	1a668 <__assert_fail@plt+0x95b0>
   1a640:	b	1a644 <__assert_fail@plt+0x958c>
   1a644:	ldr	r0, [fp, #-8]
   1a648:	ldr	r0, [r0]
   1a64c:	ldr	r1, [fp, #-12]
   1a650:	mul	r0, r0, r1
   1a654:	sxtb	r0, r0
   1a658:	asr	r1, r0, #31
   1a65c:	str	r0, [fp, #-24]	; 0xffffffe8
   1a660:	str	r1, [fp, #-20]	; 0xffffffec
   1a664:	b	1be8c <__assert_fail@plt+0xadd4>
   1a668:	ldr	r0, [fp, #-8]
   1a66c:	ldr	r0, [r0]
   1a670:	ldr	r1, [fp, #-12]
   1a674:	mul	r0, r0, r1
   1a678:	sxtb	r0, r0
   1a67c:	asr	r1, r0, #31
   1a680:	str	r0, [fp, #-24]	; 0xffffffe8
   1a684:	str	r1, [fp, #-20]	; 0xffffffec
   1a688:	b	1bea8 <__assert_fail@plt+0xadf0>
   1a68c:	ldr	r0, [fp, #-12]
   1a690:	cmp	r0, #0
   1a694:	bge	1a7ec <__assert_fail@plt+0x9734>
   1a698:	mov	r0, #1
   1a69c:	cmp	r0, #0
   1a6a0:	bne	1a758 <__assert_fail@plt+0x96a0>
   1a6a4:	b	1a6a8 <__assert_fail@plt+0x95f0>
   1a6a8:	b	1a6ac <__assert_fail@plt+0x95f4>
   1a6ac:	ldr	r0, [fp, #-8]
   1a6b0:	ldr	r1, [r0]
   1a6b4:	ldr	r0, [r0, #4]
   1a6b8:	ldr	r2, [fp, #-12]
   1a6bc:	mov	r3, #255	; 0xff
   1a6c0:	sdiv	r2, r3, r2
   1a6c4:	subs	r1, r1, r2
   1a6c8:	sbcs	r0, r0, r2, asr #31
   1a6cc:	str	r1, [fp, #-80]	; 0xffffffb0
   1a6d0:	str	r0, [fp, #-84]	; 0xffffffac
   1a6d4:	bcc	1a8d0 <__assert_fail@plt+0x9818>
   1a6d8:	b	1a8f4 <__assert_fail@plt+0x983c>
   1a6dc:	b	1a6e0 <__assert_fail@plt+0x9628>
   1a6e0:	ldr	r0, [pc, #3416]	; 1b440 <__assert_fail@plt+0xa388>
   1a6e4:	ldr	r1, [fp, #-12]
   1a6e8:	cmp	r1, r0
   1a6ec:	blt	1a704 <__assert_fail@plt+0x964c>
   1a6f0:	b	1a710 <__assert_fail@plt+0x9658>
   1a6f4:	ldr	r0, [fp, #-12]
   1a6f8:	movw	r1, #0
   1a6fc:	cmp	r1, r0
   1a700:	bge	1a710 <__assert_fail@plt+0x9658>
   1a704:	movw	r0, #0
   1a708:	str	r0, [fp, #-88]	; 0xffffffa8
   1a70c:	b	1a728 <__assert_fail@plt+0x9670>
   1a710:	ldr	r0, [fp, #-12]
   1a714:	movw	r1, #0
   1a718:	sub	r0, r1, r0
   1a71c:	movw	r1, #255	; 0xff
   1a720:	sdiv	r0, r1, r0
   1a724:	str	r0, [fp, #-88]	; 0xffffffa8
   1a728:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1a72c:	ldr	r1, [fp, #-8]
   1a730:	ldr	r2, [r1]
   1a734:	ldr	r1, [r1, #4]
   1a738:	mvn	r1, r1
   1a73c:	mvn	r2, r2
   1a740:	subs	r2, r2, r0
   1a744:	sbcs	r0, r1, r0, asr #31
   1a748:	str	r2, [fp, #-92]	; 0xffffffa4
   1a74c:	str	r0, [fp, #-96]	; 0xffffffa0
   1a750:	bcs	1a8d0 <__assert_fail@plt+0x9818>
   1a754:	b	1a8f4 <__assert_fail@plt+0x983c>
   1a758:	b	1a75c <__assert_fail@plt+0x96a4>
   1a75c:	b	1a7bc <__assert_fail@plt+0x9704>
   1a760:	b	1a7bc <__assert_fail@plt+0x9704>
   1a764:	ldr	r0, [fp, #-12]
   1a768:	cmn	r0, #1
   1a76c:	bne	1a7bc <__assert_fail@plt+0x9704>
   1a770:	b	1a790 <__assert_fail@plt+0x96d8>
   1a774:	ldr	r0, [fp, #-8]
   1a778:	ldr	r1, [r0]
   1a77c:	ldr	r0, [r0, #4]
   1a780:	orr	r0, r1, r0
   1a784:	cmp	r0, #0
   1a788:	bne	1a8d0 <__assert_fail@plt+0x9818>
   1a78c:	b	1a8f4 <__assert_fail@plt+0x983c>
   1a790:	ldr	r0, [fp, #-8]
   1a794:	ldr	r1, [r0]
   1a798:	ldr	r0, [r0, #4]
   1a79c:	orr	r0, r1, r0
   1a7a0:	cmp	r0, #0
   1a7a4:	beq	1a8f4 <__assert_fail@plt+0x983c>
   1a7a8:	b	1a7ac <__assert_fail@plt+0x96f4>
   1a7ac:	mov	r0, #0
   1a7b0:	cmp	r0, #0
   1a7b4:	bne	1a8d0 <__assert_fail@plt+0x9818>
   1a7b8:	b	1a8f4 <__assert_fail@plt+0x983c>
   1a7bc:	ldr	r0, [fp, #-12]
   1a7c0:	mov	r1, #0
   1a7c4:	sdiv	r0, r1, r0
   1a7c8:	ldr	r1, [fp, #-8]
   1a7cc:	ldr	r2, [r1]
   1a7d0:	ldr	r1, [r1, #4]
   1a7d4:	subs	r2, r0, r2
   1a7d8:	rscs	r0, r1, r0, asr #31
   1a7dc:	str	r2, [fp, #-100]	; 0xffffff9c
   1a7e0:	str	r0, [fp, #-104]	; 0xffffff98
   1a7e4:	bcc	1a8d0 <__assert_fail@plt+0x9818>
   1a7e8:	b	1a8f4 <__assert_fail@plt+0x983c>
   1a7ec:	ldr	r0, [fp, #-12]
   1a7f0:	cmp	r0, #0
   1a7f4:	bne	1a7fc <__assert_fail@plt+0x9744>
   1a7f8:	b	1a8f4 <__assert_fail@plt+0x983c>
   1a7fc:	mov	r0, #1
   1a800:	cmp	r0, #0
   1a804:	bne	1a8a0 <__assert_fail@plt+0x97e8>
   1a808:	b	1a80c <__assert_fail@plt+0x9754>
   1a80c:	b	1a814 <__assert_fail@plt+0x975c>
   1a810:	b	1a818 <__assert_fail@plt+0x9760>
   1a814:	b	1a868 <__assert_fail@plt+0x97b0>
   1a818:	ldr	r0, [fp, #-8]
   1a81c:	ldr	r1, [r0]
   1a820:	ldr	r0, [r0, #4]
   1a824:	and	r0, r1, r0
   1a828:	cmn	r0, #1
   1a82c:	bne	1a868 <__assert_fail@plt+0x97b0>
   1a830:	b	1a834 <__assert_fail@plt+0x977c>
   1a834:	b	1a838 <__assert_fail@plt+0x9780>
   1a838:	ldr	r0, [fp, #-12]
   1a83c:	add	r0, r0, #0
   1a840:	movw	r1, #0
   1a844:	cmp	r1, r0
   1a848:	blt	1a8d0 <__assert_fail@plt+0x9818>
   1a84c:	b	1a8f4 <__assert_fail@plt+0x983c>
   1a850:	ldr	r0, [fp, #-12]
   1a854:	sub	r0, r0, #1
   1a858:	mvn	r1, #0
   1a85c:	cmp	r1, r0
   1a860:	blt	1a8d0 <__assert_fail@plt+0x9818>
   1a864:	b	1a8f4 <__assert_fail@plt+0x983c>
   1a868:	ldr	r0, [fp, #-8]
   1a86c:	ldr	r2, [r0]
   1a870:	ldr	r3, [r0, #4]
   1a874:	mov	r0, #0
   1a878:	str	r0, [fp, #-108]	; 0xffffff94
   1a87c:	ldr	r1, [fp, #-108]	; 0xffffff94
   1a880:	bl	1e22c <__assert_fail@plt+0xd174>
   1a884:	ldr	r2, [fp, #-12]
   1a888:	subs	r0, r0, r2
   1a88c:	sbcs	r1, r1, r2, asr #31
   1a890:	str	r0, [fp, #-112]	; 0xffffff90
   1a894:	str	r1, [fp, #-116]	; 0xffffff8c
   1a898:	bcc	1a8d0 <__assert_fail@plt+0x9818>
   1a89c:	b	1a8f4 <__assert_fail@plt+0x983c>
   1a8a0:	ldr	r0, [fp, #-12]
   1a8a4:	mov	r1, #255	; 0xff
   1a8a8:	sdiv	r0, r1, r0
   1a8ac:	ldr	r1, [fp, #-8]
   1a8b0:	ldr	r2, [r1]
   1a8b4:	ldr	r1, [r1, #4]
   1a8b8:	subs	r2, r0, r2
   1a8bc:	rscs	r0, r1, r0, asr #31
   1a8c0:	str	r2, [fp, #-120]	; 0xffffff88
   1a8c4:	str	r0, [fp, #-124]	; 0xffffff84
   1a8c8:	bcs	1a8f4 <__assert_fail@plt+0x983c>
   1a8cc:	b	1a8d0 <__assert_fail@plt+0x9818>
   1a8d0:	ldr	r0, [fp, #-8]
   1a8d4:	ldr	r0, [r0]
   1a8d8:	ldr	r1, [fp, #-12]
   1a8dc:	mul	r0, r0, r1
   1a8e0:	uxtb	r0, r0
   1a8e4:	mov	r1, #0
   1a8e8:	str	r1, [fp, #-20]	; 0xffffffec
   1a8ec:	str	r0, [fp, #-24]	; 0xffffffe8
   1a8f0:	b	1be8c <__assert_fail@plt+0xadd4>
   1a8f4:	ldr	r0, [fp, #-8]
   1a8f8:	ldr	r0, [r0]
   1a8fc:	ldr	r1, [fp, #-12]
   1a900:	mul	r0, r0, r1
   1a904:	uxtb	r0, r0
   1a908:	mov	r1, #0
   1a90c:	str	r1, [fp, #-20]	; 0xffffffec
   1a910:	str	r0, [fp, #-24]	; 0xffffffe8
   1a914:	b	1bea8 <__assert_fail@plt+0xadf0>
   1a918:	b	1ae54 <__assert_fail@plt+0x9d9c>
   1a91c:	b	1abc8 <__assert_fail@plt+0x9b10>
   1a920:	ldr	r0, [fp, #-12]
   1a924:	cmp	r0, #0
   1a928:	bge	1aaa4 <__assert_fail@plt+0x99ec>
   1a92c:	mov	r0, #1
   1a930:	cmp	r0, #0
   1a934:	bne	1a9ec <__assert_fail@plt+0x9934>
   1a938:	b	1a93c <__assert_fail@plt+0x9884>
   1a93c:	b	1a940 <__assert_fail@plt+0x9888>
   1a940:	ldr	r0, [fp, #-8]
   1a944:	ldr	r1, [r0]
   1a948:	ldr	r0, [r0, #4]
   1a94c:	ldr	r2, [fp, #-12]
   1a950:	movw	r3, #32767	; 0x7fff
   1a954:	sdiv	r2, r3, r2
   1a958:	subs	r1, r1, r2
   1a95c:	sbcs	r0, r0, r2, asr #31
   1a960:	str	r1, [fp, #-128]	; 0xffffff80
   1a964:	str	r0, [fp, #-132]	; 0xffffff7c
   1a968:	bcc	1ab80 <__assert_fail@plt+0x9ac8>
   1a96c:	b	1aba4 <__assert_fail@plt+0x9aec>
   1a970:	b	1a974 <__assert_fail@plt+0x98bc>
   1a974:	ldr	r0, [pc, #2756]	; 1b440 <__assert_fail@plt+0xa388>
   1a978:	ldr	r1, [fp, #-12]
   1a97c:	cmp	r1, r0
   1a980:	blt	1a998 <__assert_fail@plt+0x98e0>
   1a984:	b	1a9a4 <__assert_fail@plt+0x98ec>
   1a988:	ldr	r0, [fp, #-12]
   1a98c:	movw	r1, #0
   1a990:	cmp	r1, r0
   1a994:	bge	1a9a4 <__assert_fail@plt+0x98ec>
   1a998:	movw	r0, #0
   1a99c:	str	r0, [fp, #-136]	; 0xffffff78
   1a9a0:	b	1a9bc <__assert_fail@plt+0x9904>
   1a9a4:	ldr	r0, [fp, #-12]
   1a9a8:	movw	r1, #0
   1a9ac:	sub	r0, r1, r0
   1a9b0:	movw	r1, #32767	; 0x7fff
   1a9b4:	sdiv	r0, r1, r0
   1a9b8:	str	r0, [fp, #-136]	; 0xffffff78
   1a9bc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1a9c0:	ldr	r1, [fp, #-8]
   1a9c4:	ldr	r2, [r1]
   1a9c8:	ldr	r1, [r1, #4]
   1a9cc:	mvn	r1, r1
   1a9d0:	mvn	r2, r2
   1a9d4:	subs	r2, r2, r0
   1a9d8:	sbcs	r0, r1, r0, asr #31
   1a9dc:	str	r2, [fp, #-140]	; 0xffffff74
   1a9e0:	str	r0, [fp, #-144]	; 0xffffff70
   1a9e4:	bcs	1ab80 <__assert_fail@plt+0x9ac8>
   1a9e8:	b	1aba4 <__assert_fail@plt+0x9aec>
   1a9ec:	b	1a9f0 <__assert_fail@plt+0x9938>
   1a9f0:	b	1aa70 <__assert_fail@plt+0x99b8>
   1a9f4:	b	1aa70 <__assert_fail@plt+0x99b8>
   1a9f8:	ldr	r0, [fp, #-12]
   1a9fc:	cmn	r0, #1
   1aa00:	bne	1aa70 <__assert_fail@plt+0x99b8>
   1aa04:	b	1aa28 <__assert_fail@plt+0x9970>
   1aa08:	ldr	r0, [fp, #-8]
   1aa0c:	ldr	r1, [r0]
   1aa10:	ldr	r0, [r0, #4]
   1aa14:	eor	r1, r1, #32768	; 0x8000
   1aa18:	orr	r0, r1, r0
   1aa1c:	cmp	r0, #0
   1aa20:	bne	1ab80 <__assert_fail@plt+0x9ac8>
   1aa24:	b	1aba4 <__assert_fail@plt+0x9aec>
   1aa28:	ldr	r0, [fp, #-8]
   1aa2c:	ldr	r1, [r0]
   1aa30:	ldr	r0, [r0, #4]
   1aa34:	orr	r0, r1, r0
   1aa38:	cmp	r0, #0
   1aa3c:	beq	1aba4 <__assert_fail@plt+0x9aec>
   1aa40:	b	1aa44 <__assert_fail@plt+0x998c>
   1aa44:	ldr	r0, [fp, #-8]
   1aa48:	ldr	r1, [r0]
   1aa4c:	ldr	r0, [r0, #4]
   1aa50:	subs	r1, r1, #1
   1aa54:	sbc	r0, r0, #0
   1aa58:	lsr	r1, r1, #15
   1aa5c:	orr	r1, r1, r0, lsl #17
   1aa60:	orr	r0, r1, r0, lsr #15
   1aa64:	cmp	r0, #0
   1aa68:	bne	1ab80 <__assert_fail@plt+0x9ac8>
   1aa6c:	b	1aba4 <__assert_fail@plt+0x9aec>
   1aa70:	ldr	r0, [fp, #-12]
   1aa74:	movw	r1, #32768	; 0x8000
   1aa78:	movt	r1, #65535	; 0xffff
   1aa7c:	sdiv	r0, r1, r0
   1aa80:	ldr	r1, [fp, #-8]
   1aa84:	ldr	r2, [r1]
   1aa88:	ldr	r1, [r1, #4]
   1aa8c:	subs	r2, r0, r2
   1aa90:	rscs	r0, r1, r0, asr #31
   1aa94:	str	r2, [fp, #-148]	; 0xffffff6c
   1aa98:	str	r0, [fp, #-152]	; 0xffffff68
   1aa9c:	bcc	1ab80 <__assert_fail@plt+0x9ac8>
   1aaa0:	b	1aba4 <__assert_fail@plt+0x9aec>
   1aaa4:	ldr	r0, [fp, #-12]
   1aaa8:	cmp	r0, #0
   1aaac:	bne	1aab4 <__assert_fail@plt+0x99fc>
   1aab0:	b	1aba4 <__assert_fail@plt+0x9aec>
   1aab4:	mov	r0, #1
   1aab8:	cmp	r0, #0
   1aabc:	bne	1ab50 <__assert_fail@plt+0x9a98>
   1aac0:	b	1aac4 <__assert_fail@plt+0x9a0c>
   1aac4:	ldr	r0, [fp, #-8]
   1aac8:	ldr	r1, [r0]
   1aacc:	ldr	r0, [r0, #4]
   1aad0:	and	r0, r1, r0
   1aad4:	cmn	r0, #1
   1aad8:	bne	1ab18 <__assert_fail@plt+0x9a60>
   1aadc:	b	1aae0 <__assert_fail@plt+0x9a28>
   1aae0:	b	1aae4 <__assert_fail@plt+0x9a2c>
   1aae4:	ldr	r0, [pc, #4064]	; 1bacc <__assert_fail@plt+0xaa14>
   1aae8:	ldr	r1, [fp, #-12]
   1aaec:	add	r0, r1, r0
   1aaf0:	movw	r1, #0
   1aaf4:	cmp	r1, r0
   1aaf8:	blt	1ab80 <__assert_fail@plt+0x9ac8>
   1aafc:	b	1aba4 <__assert_fail@plt+0x9aec>
   1ab00:	ldr	r0, [fp, #-12]
   1ab04:	sub	r0, r0, #1
   1ab08:	movw	r1, #32767	; 0x7fff
   1ab0c:	cmp	r1, r0
   1ab10:	blt	1ab80 <__assert_fail@plt+0x9ac8>
   1ab14:	b	1aba4 <__assert_fail@plt+0x9aec>
   1ab18:	ldr	r0, [fp, #-8]
   1ab1c:	ldr	r2, [r0]
   1ab20:	ldr	r3, [r0, #4]
   1ab24:	movw	r0, #32768	; 0x8000
   1ab28:	movt	r0, #65535	; 0xffff
   1ab2c:	mvn	r1, #0
   1ab30:	bl	1e22c <__assert_fail@plt+0xd174>
   1ab34:	ldr	r2, [fp, #-12]
   1ab38:	subs	r0, r0, r2
   1ab3c:	sbcs	r1, r1, r2, asr #31
   1ab40:	str	r0, [fp, #-156]	; 0xffffff64
   1ab44:	str	r1, [fp, #-160]	; 0xffffff60
   1ab48:	bcc	1ab80 <__assert_fail@plt+0x9ac8>
   1ab4c:	b	1aba4 <__assert_fail@plt+0x9aec>
   1ab50:	ldr	r0, [fp, #-12]
   1ab54:	movw	r1, #32767	; 0x7fff
   1ab58:	sdiv	r0, r1, r0
   1ab5c:	ldr	r1, [fp, #-8]
   1ab60:	ldr	r2, [r1]
   1ab64:	ldr	r1, [r1, #4]
   1ab68:	subs	r2, r0, r2
   1ab6c:	rscs	r0, r1, r0, asr #31
   1ab70:	str	r2, [fp, #-164]	; 0xffffff5c
   1ab74:	str	r0, [fp, #-168]	; 0xffffff58
   1ab78:	bcs	1aba4 <__assert_fail@plt+0x9aec>
   1ab7c:	b	1ab80 <__assert_fail@plt+0x9ac8>
   1ab80:	ldr	r0, [fp, #-8]
   1ab84:	ldr	r0, [r0]
   1ab88:	ldr	r1, [fp, #-12]
   1ab8c:	mul	r0, r0, r1
   1ab90:	sxth	r0, r0
   1ab94:	asr	r1, r0, #31
   1ab98:	str	r0, [fp, #-24]	; 0xffffffe8
   1ab9c:	str	r1, [fp, #-20]	; 0xffffffec
   1aba0:	b	1be8c <__assert_fail@plt+0xadd4>
   1aba4:	ldr	r0, [fp, #-8]
   1aba8:	ldr	r0, [r0]
   1abac:	ldr	r1, [fp, #-12]
   1abb0:	mul	r0, r0, r1
   1abb4:	sxth	r0, r0
   1abb8:	asr	r1, r0, #31
   1abbc:	str	r0, [fp, #-24]	; 0xffffffe8
   1abc0:	str	r1, [fp, #-20]	; 0xffffffec
   1abc4:	b	1bea8 <__assert_fail@plt+0xadf0>
   1abc8:	ldr	r0, [fp, #-12]
   1abcc:	cmp	r0, #0
   1abd0:	bge	1ad28 <__assert_fail@plt+0x9c70>
   1abd4:	mov	r0, #1
   1abd8:	cmp	r0, #0
   1abdc:	bne	1ac94 <__assert_fail@plt+0x9bdc>
   1abe0:	b	1abe4 <__assert_fail@plt+0x9b2c>
   1abe4:	b	1abe8 <__assert_fail@plt+0x9b30>
   1abe8:	ldr	r0, [fp, #-8]
   1abec:	ldr	r1, [r0]
   1abf0:	ldr	r0, [r0, #4]
   1abf4:	ldr	r2, [fp, #-12]
   1abf8:	movw	r3, #65535	; 0xffff
   1abfc:	sdiv	r2, r3, r2
   1ac00:	subs	r1, r1, r2
   1ac04:	sbcs	r0, r0, r2, asr #31
   1ac08:	str	r1, [fp, #-172]	; 0xffffff54
   1ac0c:	str	r0, [fp, #-176]	; 0xffffff50
   1ac10:	bcc	1ae0c <__assert_fail@plt+0x9d54>
   1ac14:	b	1ae30 <__assert_fail@plt+0x9d78>
   1ac18:	b	1ac1c <__assert_fail@plt+0x9b64>
   1ac1c:	ldr	r0, [pc, #2076]	; 1b440 <__assert_fail@plt+0xa388>
   1ac20:	ldr	r1, [fp, #-12]
   1ac24:	cmp	r1, r0
   1ac28:	blt	1ac40 <__assert_fail@plt+0x9b88>
   1ac2c:	b	1ac4c <__assert_fail@plt+0x9b94>
   1ac30:	ldr	r0, [fp, #-12]
   1ac34:	movw	r1, #0
   1ac38:	cmp	r1, r0
   1ac3c:	bge	1ac4c <__assert_fail@plt+0x9b94>
   1ac40:	movw	r0, #0
   1ac44:	str	r0, [fp, #-180]	; 0xffffff4c
   1ac48:	b	1ac64 <__assert_fail@plt+0x9bac>
   1ac4c:	ldr	r0, [fp, #-12]
   1ac50:	movw	r1, #0
   1ac54:	sub	r0, r1, r0
   1ac58:	movw	r1, #65535	; 0xffff
   1ac5c:	sdiv	r0, r1, r0
   1ac60:	str	r0, [fp, #-180]	; 0xffffff4c
   1ac64:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1ac68:	ldr	r1, [fp, #-8]
   1ac6c:	ldr	r2, [r1]
   1ac70:	ldr	r1, [r1, #4]
   1ac74:	mvn	r1, r1
   1ac78:	mvn	r2, r2
   1ac7c:	subs	r2, r2, r0
   1ac80:	sbcs	r0, r1, r0, asr #31
   1ac84:	str	r2, [fp, #-184]	; 0xffffff48
   1ac88:	str	r0, [fp, #-188]	; 0xffffff44
   1ac8c:	bcs	1ae0c <__assert_fail@plt+0x9d54>
   1ac90:	b	1ae30 <__assert_fail@plt+0x9d78>
   1ac94:	b	1ac98 <__assert_fail@plt+0x9be0>
   1ac98:	b	1acf8 <__assert_fail@plt+0x9c40>
   1ac9c:	b	1acf8 <__assert_fail@plt+0x9c40>
   1aca0:	ldr	r0, [fp, #-12]
   1aca4:	cmn	r0, #1
   1aca8:	bne	1acf8 <__assert_fail@plt+0x9c40>
   1acac:	b	1accc <__assert_fail@plt+0x9c14>
   1acb0:	ldr	r0, [fp, #-8]
   1acb4:	ldr	r1, [r0]
   1acb8:	ldr	r0, [r0, #4]
   1acbc:	orr	r0, r1, r0
   1acc0:	cmp	r0, #0
   1acc4:	bne	1ae0c <__assert_fail@plt+0x9d54>
   1acc8:	b	1ae30 <__assert_fail@plt+0x9d78>
   1accc:	ldr	r0, [fp, #-8]
   1acd0:	ldr	r1, [r0]
   1acd4:	ldr	r0, [r0, #4]
   1acd8:	orr	r0, r1, r0
   1acdc:	cmp	r0, #0
   1ace0:	beq	1ae30 <__assert_fail@plt+0x9d78>
   1ace4:	b	1ace8 <__assert_fail@plt+0x9c30>
   1ace8:	mov	r0, #0
   1acec:	cmp	r0, #0
   1acf0:	bne	1ae0c <__assert_fail@plt+0x9d54>
   1acf4:	b	1ae30 <__assert_fail@plt+0x9d78>
   1acf8:	ldr	r0, [fp, #-12]
   1acfc:	mov	r1, #0
   1ad00:	sdiv	r0, r1, r0
   1ad04:	ldr	r1, [fp, #-8]
   1ad08:	ldr	r2, [r1]
   1ad0c:	ldr	r1, [r1, #4]
   1ad10:	subs	r2, r0, r2
   1ad14:	rscs	r0, r1, r0, asr #31
   1ad18:	str	r2, [fp, #-192]	; 0xffffff40
   1ad1c:	str	r0, [fp, #-196]	; 0xffffff3c
   1ad20:	bcc	1ae0c <__assert_fail@plt+0x9d54>
   1ad24:	b	1ae30 <__assert_fail@plt+0x9d78>
   1ad28:	ldr	r0, [fp, #-12]
   1ad2c:	cmp	r0, #0
   1ad30:	bne	1ad38 <__assert_fail@plt+0x9c80>
   1ad34:	b	1ae30 <__assert_fail@plt+0x9d78>
   1ad38:	mov	r0, #1
   1ad3c:	cmp	r0, #0
   1ad40:	bne	1addc <__assert_fail@plt+0x9d24>
   1ad44:	b	1ad48 <__assert_fail@plt+0x9c90>
   1ad48:	b	1ad50 <__assert_fail@plt+0x9c98>
   1ad4c:	b	1ad54 <__assert_fail@plt+0x9c9c>
   1ad50:	b	1ada4 <__assert_fail@plt+0x9cec>
   1ad54:	ldr	r0, [fp, #-8]
   1ad58:	ldr	r1, [r0]
   1ad5c:	ldr	r0, [r0, #4]
   1ad60:	and	r0, r1, r0
   1ad64:	cmn	r0, #1
   1ad68:	bne	1ada4 <__assert_fail@plt+0x9cec>
   1ad6c:	b	1ad70 <__assert_fail@plt+0x9cb8>
   1ad70:	b	1ad74 <__assert_fail@plt+0x9cbc>
   1ad74:	ldr	r0, [fp, #-12]
   1ad78:	add	r0, r0, #0
   1ad7c:	movw	r1, #0
   1ad80:	cmp	r1, r0
   1ad84:	blt	1ae0c <__assert_fail@plt+0x9d54>
   1ad88:	b	1ae30 <__assert_fail@plt+0x9d78>
   1ad8c:	ldr	r0, [fp, #-12]
   1ad90:	sub	r0, r0, #1
   1ad94:	mvn	r1, #0
   1ad98:	cmp	r1, r0
   1ad9c:	blt	1ae0c <__assert_fail@plt+0x9d54>
   1ada0:	b	1ae30 <__assert_fail@plt+0x9d78>
   1ada4:	ldr	r0, [fp, #-8]
   1ada8:	ldr	r2, [r0]
   1adac:	ldr	r3, [r0, #4]
   1adb0:	mov	r0, #0
   1adb4:	str	r0, [fp, #-200]	; 0xffffff38
   1adb8:	ldr	r1, [fp, #-200]	; 0xffffff38
   1adbc:	bl	1e22c <__assert_fail@plt+0xd174>
   1adc0:	ldr	r2, [fp, #-12]
   1adc4:	subs	r0, r0, r2
   1adc8:	sbcs	r1, r1, r2, asr #31
   1adcc:	str	r0, [fp, #-204]	; 0xffffff34
   1add0:	str	r1, [fp, #-208]	; 0xffffff30
   1add4:	bcc	1ae0c <__assert_fail@plt+0x9d54>
   1add8:	b	1ae30 <__assert_fail@plt+0x9d78>
   1addc:	ldr	r0, [fp, #-12]
   1ade0:	movw	r1, #65535	; 0xffff
   1ade4:	sdiv	r0, r1, r0
   1ade8:	ldr	r1, [fp, #-8]
   1adec:	ldr	r2, [r1]
   1adf0:	ldr	r1, [r1, #4]
   1adf4:	subs	r2, r0, r2
   1adf8:	rscs	r0, r1, r0, asr #31
   1adfc:	str	r2, [fp, #-212]	; 0xffffff2c
   1ae00:	str	r0, [fp, #-216]	; 0xffffff28
   1ae04:	bcs	1ae30 <__assert_fail@plt+0x9d78>
   1ae08:	b	1ae0c <__assert_fail@plt+0x9d54>
   1ae0c:	ldr	r0, [fp, #-8]
   1ae10:	ldr	r0, [r0]
   1ae14:	ldr	r1, [fp, #-12]
   1ae18:	mul	r0, r0, r1
   1ae1c:	uxth	r0, r0
   1ae20:	mov	r1, #0
   1ae24:	str	r1, [fp, #-20]	; 0xffffffec
   1ae28:	str	r0, [fp, #-24]	; 0xffffffe8
   1ae2c:	b	1be8c <__assert_fail@plt+0xadd4>
   1ae30:	ldr	r0, [fp, #-8]
   1ae34:	ldr	r0, [r0]
   1ae38:	ldr	r1, [fp, #-12]
   1ae3c:	mul	r0, r0, r1
   1ae40:	uxth	r0, r0
   1ae44:	mov	r1, #0
   1ae48:	str	r1, [fp, #-20]	; 0xffffffec
   1ae4c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ae50:	b	1bea8 <__assert_fail@plt+0xadf0>
   1ae54:	b	1b36c <__assert_fail@plt+0xa2b4>
   1ae58:	b	1b0e8 <__assert_fail@plt+0xa030>
   1ae5c:	ldr	r0, [fp, #-12]
   1ae60:	cmp	r0, #0
   1ae64:	bge	1afd4 <__assert_fail@plt+0x9f1c>
   1ae68:	mov	r0, #1
   1ae6c:	cmp	r0, #0
   1ae70:	bne	1af28 <__assert_fail@plt+0x9e70>
   1ae74:	b	1ae78 <__assert_fail@plt+0x9dc0>
   1ae78:	b	1ae7c <__assert_fail@plt+0x9dc4>
   1ae7c:	ldr	r0, [fp, #-8]
   1ae80:	ldr	r1, [r0]
   1ae84:	ldr	r0, [r0, #4]
   1ae88:	ldr	r2, [fp, #-12]
   1ae8c:	mvn	r3, #-2147483648	; 0x80000000
   1ae90:	sdiv	r2, r3, r2
   1ae94:	subs	r1, r1, r2
   1ae98:	sbcs	r0, r0, r2, asr #31
   1ae9c:	str	r1, [fp, #-220]	; 0xffffff24
   1aea0:	str	r0, [fp, #-224]	; 0xffffff20
   1aea4:	bcc	1b0a8 <__assert_fail@plt+0x9ff0>
   1aea8:	b	1b0c8 <__assert_fail@plt+0xa010>
   1aeac:	b	1aeb0 <__assert_fail@plt+0x9df8>
   1aeb0:	ldr	r0, [pc, #1416]	; 1b440 <__assert_fail@plt+0xa388>
   1aeb4:	ldr	r1, [fp, #-12]
   1aeb8:	cmp	r1, r0
   1aebc:	blt	1aed4 <__assert_fail@plt+0x9e1c>
   1aec0:	b	1aee0 <__assert_fail@plt+0x9e28>
   1aec4:	ldr	r0, [fp, #-12]
   1aec8:	movw	r1, #0
   1aecc:	cmp	r1, r0
   1aed0:	bge	1aee0 <__assert_fail@plt+0x9e28>
   1aed4:	movw	r0, #0
   1aed8:	str	r0, [fp, #-228]	; 0xffffff1c
   1aedc:	b	1aef8 <__assert_fail@plt+0x9e40>
   1aee0:	ldr	r0, [pc, #4076]	; 1bed4 <__assert_fail@plt+0xae1c>
   1aee4:	ldr	r1, [fp, #-12]
   1aee8:	movw	r2, #0
   1aeec:	sub	r1, r2, r1
   1aef0:	sdiv	r0, r0, r1
   1aef4:	str	r0, [fp, #-228]	; 0xffffff1c
   1aef8:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1aefc:	ldr	r1, [fp, #-8]
   1af00:	ldr	r2, [r1]
   1af04:	ldr	r1, [r1, #4]
   1af08:	mvn	r1, r1
   1af0c:	mvn	r2, r2
   1af10:	subs	r2, r2, r0
   1af14:	sbcs	r0, r1, r0, asr #31
   1af18:	str	r2, [fp, #-232]	; 0xffffff18
   1af1c:	str	r0, [fp, #-236]	; 0xffffff14
   1af20:	bcs	1b0a8 <__assert_fail@plt+0x9ff0>
   1af24:	b	1b0c8 <__assert_fail@plt+0xa010>
   1af28:	ldr	r0, [fp, #-12]
   1af2c:	cmn	r0, #1
   1af30:	bne	1afa4 <__assert_fail@plt+0x9eec>
   1af34:	b	1af58 <__assert_fail@plt+0x9ea0>
   1af38:	ldr	r0, [fp, #-8]
   1af3c:	ldr	r1, [r0]
   1af40:	ldr	r0, [r0, #4]
   1af44:	eor	r1, r1, #-2147483648	; 0x80000000
   1af48:	orr	r0, r1, r0
   1af4c:	cmp	r0, #0
   1af50:	bne	1b0a8 <__assert_fail@plt+0x9ff0>
   1af54:	b	1b0c8 <__assert_fail@plt+0xa010>
   1af58:	ldr	r0, [fp, #-8]
   1af5c:	ldr	r1, [r0]
   1af60:	ldr	r0, [r0, #4]
   1af64:	orr	r0, r1, r0
   1af68:	cmp	r0, #0
   1af6c:	beq	1b0c8 <__assert_fail@plt+0xa010>
   1af70:	b	1af74 <__assert_fail@plt+0x9ebc>
   1af74:	ldr	r0, [fp, #-8]
   1af78:	ldr	r1, [r0]
   1af7c:	ldr	r0, [r0, #4]
   1af80:	subs	r1, r1, #1
   1af84:	sbc	r0, r0, #0
   1af88:	mvn	r2, #-2147483648	; 0x80000000
   1af8c:	subs	r1, r2, r1
   1af90:	rscs	r0, r0, #0
   1af94:	str	r1, [fp, #-240]	; 0xffffff10
   1af98:	str	r0, [fp, #-244]	; 0xffffff0c
   1af9c:	bcc	1b0a8 <__assert_fail@plt+0x9ff0>
   1afa0:	b	1b0c8 <__assert_fail@plt+0xa010>
   1afa4:	ldr	r0, [fp, #-12]
   1afa8:	mov	r1, #-2147483648	; 0x80000000
   1afac:	sdiv	r0, r1, r0
   1afb0:	ldr	r1, [fp, #-8]
   1afb4:	ldr	r2, [r1]
   1afb8:	ldr	r1, [r1, #4]
   1afbc:	subs	r2, r0, r2
   1afc0:	rscs	r0, r1, r0, asr #31
   1afc4:	str	r2, [fp, #-248]	; 0xffffff08
   1afc8:	str	r0, [fp, #-252]	; 0xffffff04
   1afcc:	bcc	1b0a8 <__assert_fail@plt+0x9ff0>
   1afd0:	b	1b0c8 <__assert_fail@plt+0xa010>
   1afd4:	ldr	r0, [fp, #-12]
   1afd8:	cmp	r0, #0
   1afdc:	bne	1afe4 <__assert_fail@plt+0x9f2c>
   1afe0:	b	1b0c8 <__assert_fail@plt+0xa010>
   1afe4:	mov	r0, #1
   1afe8:	cmp	r0, #0
   1afec:	bne	1b078 <__assert_fail@plt+0x9fc0>
   1aff0:	b	1aff4 <__assert_fail@plt+0x9f3c>
   1aff4:	ldr	r0, [fp, #-8]
   1aff8:	ldr	r1, [r0]
   1affc:	ldr	r0, [r0, #4]
   1b000:	and	r0, r1, r0
   1b004:	cmn	r0, #1
   1b008:	bne	1b044 <__assert_fail@plt+0x9f8c>
   1b00c:	b	1b010 <__assert_fail@plt+0x9f58>
   1b010:	b	1b014 <__assert_fail@plt+0x9f5c>
   1b014:	ldr	r0, [fp, #-12]
   1b018:	add	r0, r0, #-2147483648	; 0x80000000
   1b01c:	movw	r1, #0
   1b020:	cmp	r1, r0
   1b024:	blt	1b0a8 <__assert_fail@plt+0x9ff0>
   1b028:	b	1b0c8 <__assert_fail@plt+0xa010>
   1b02c:	ldr	r0, [pc, #3744]	; 1bed4 <__assert_fail@plt+0xae1c>
   1b030:	ldr	r1, [fp, #-12]
   1b034:	sub	r1, r1, #1
   1b038:	cmp	r0, r1
   1b03c:	blt	1b0a8 <__assert_fail@plt+0x9ff0>
   1b040:	b	1b0c8 <__assert_fail@plt+0xa010>
   1b044:	ldr	r0, [fp, #-8]
   1b048:	ldr	r2, [r0]
   1b04c:	ldr	r3, [r0, #4]
   1b050:	mov	r0, #-2147483648	; 0x80000000
   1b054:	mvn	r1, #0
   1b058:	bl	1e22c <__assert_fail@plt+0xd174>
   1b05c:	ldr	r2, [fp, #-12]
   1b060:	subs	r0, r0, r2
   1b064:	sbcs	r1, r1, r2, asr #31
   1b068:	str	r0, [fp, #-256]	; 0xffffff00
   1b06c:	str	r1, [fp, #-260]	; 0xfffffefc
   1b070:	bcc	1b0a8 <__assert_fail@plt+0x9ff0>
   1b074:	b	1b0c8 <__assert_fail@plt+0xa010>
   1b078:	ldr	r0, [fp, #-12]
   1b07c:	mvn	r1, #-2147483648	; 0x80000000
   1b080:	sdiv	r0, r1, r0
   1b084:	ldr	r1, [fp, #-8]
   1b088:	ldr	r2, [r1]
   1b08c:	ldr	r1, [r1, #4]
   1b090:	subs	r2, r0, r2
   1b094:	rscs	r0, r1, r0, asr #31
   1b098:	str	r2, [fp, #-264]	; 0xfffffef8
   1b09c:	str	r0, [fp, #-268]	; 0xfffffef4
   1b0a0:	bcs	1b0c8 <__assert_fail@plt+0xa010>
   1b0a4:	b	1b0a8 <__assert_fail@plt+0x9ff0>
   1b0a8:	ldr	r0, [fp, #-8]
   1b0ac:	ldr	r0, [r0]
   1b0b0:	ldr	r1, [fp, #-12]
   1b0b4:	mul	r0, r0, r1
   1b0b8:	asr	r1, r0, #31
   1b0bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1b0c0:	str	r1, [fp, #-20]	; 0xffffffec
   1b0c4:	b	1be8c <__assert_fail@plt+0xadd4>
   1b0c8:	ldr	r0, [fp, #-8]
   1b0cc:	ldr	r0, [r0]
   1b0d0:	ldr	r1, [fp, #-12]
   1b0d4:	mul	r0, r0, r1
   1b0d8:	asr	r1, r0, #31
   1b0dc:	str	r0, [fp, #-24]	; 0xffffffe8
   1b0e0:	str	r1, [fp, #-20]	; 0xffffffec
   1b0e4:	b	1bea8 <__assert_fail@plt+0xadf0>
   1b0e8:	ldr	r0, [fp, #-12]
   1b0ec:	cmp	r0, #0
   1b0f0:	bge	1b248 <__assert_fail@plt+0xa190>
   1b0f4:	mov	r0, #1
   1b0f8:	cmp	r0, #0
   1b0fc:	bne	1b1b4 <__assert_fail@plt+0xa0fc>
   1b100:	b	1b104 <__assert_fail@plt+0xa04c>
   1b104:	b	1b138 <__assert_fail@plt+0xa080>
   1b108:	ldr	r0, [fp, #-8]
   1b10c:	ldr	r1, [r0]
   1b110:	ldr	r0, [r0, #4]
   1b114:	ldr	r2, [fp, #-12]
   1b118:	mvn	r3, #0
   1b11c:	udiv	r2, r3, r2
   1b120:	subs	r1, r1, r2
   1b124:	sbcs	r0, r0, #0
   1b128:	str	r1, [fp, #-272]	; 0xfffffef0
   1b12c:	str	r0, [fp, #-276]	; 0xfffffeec
   1b130:	bcc	1b32c <__assert_fail@plt+0xa274>
   1b134:	b	1b34c <__assert_fail@plt+0xa294>
   1b138:	b	1b13c <__assert_fail@plt+0xa084>
   1b13c:	ldr	r0, [pc, #3468]	; 1bed0 <__assert_fail@plt+0xae18>
   1b140:	ldr	r1, [fp, #-12]
   1b144:	cmp	r1, r0
   1b148:	blt	1b160 <__assert_fail@plt+0xa0a8>
   1b14c:	b	1b16c <__assert_fail@plt+0xa0b4>
   1b150:	ldr	r0, [fp, #-12]
   1b154:	movw	r1, #0
   1b158:	cmp	r1, r0
   1b15c:	bge	1b16c <__assert_fail@plt+0xa0b4>
   1b160:	movw	r0, #1
   1b164:	str	r0, [fp, #-280]	; 0xfffffee8
   1b168:	b	1b184 <__assert_fail@plt+0xa0cc>
   1b16c:	ldr	r0, [fp, #-12]
   1b170:	movw	r1, #0
   1b174:	sub	r0, r1, r0
   1b178:	mvn	r1, #0
   1b17c:	udiv	r0, r1, r0
   1b180:	str	r0, [fp, #-280]	; 0xfffffee8
   1b184:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1b188:	ldr	r1, [fp, #-8]
   1b18c:	ldr	r2, [r1]
   1b190:	ldr	r1, [r1, #4]
   1b194:	mvn	r1, r1
   1b198:	mvn	r2, r2
   1b19c:	subs	r0, r2, r0
   1b1a0:	sbcs	r1, r1, #0
   1b1a4:	str	r0, [sp, #284]	; 0x11c
   1b1a8:	str	r1, [sp, #280]	; 0x118
   1b1ac:	bcs	1b32c <__assert_fail@plt+0xa274>
   1b1b0:	b	1b34c <__assert_fail@plt+0xa294>
   1b1b4:	b	1b1b8 <__assert_fail@plt+0xa100>
   1b1b8:	b	1b218 <__assert_fail@plt+0xa160>
   1b1bc:	b	1b218 <__assert_fail@plt+0xa160>
   1b1c0:	ldr	r0, [fp, #-12]
   1b1c4:	cmn	r0, #1
   1b1c8:	bne	1b218 <__assert_fail@plt+0xa160>
   1b1cc:	b	1b1ec <__assert_fail@plt+0xa134>
   1b1d0:	ldr	r0, [fp, #-8]
   1b1d4:	ldr	r1, [r0]
   1b1d8:	ldr	r0, [r0, #4]
   1b1dc:	orr	r0, r1, r0
   1b1e0:	cmp	r0, #0
   1b1e4:	bne	1b32c <__assert_fail@plt+0xa274>
   1b1e8:	b	1b34c <__assert_fail@plt+0xa294>
   1b1ec:	ldr	r0, [fp, #-8]
   1b1f0:	ldr	r1, [r0]
   1b1f4:	ldr	r0, [r0, #4]
   1b1f8:	orr	r0, r1, r0
   1b1fc:	cmp	r0, #0
   1b200:	beq	1b34c <__assert_fail@plt+0xa294>
   1b204:	b	1b208 <__assert_fail@plt+0xa150>
   1b208:	mov	r0, #0
   1b20c:	cmp	r0, #0
   1b210:	bne	1b32c <__assert_fail@plt+0xa274>
   1b214:	b	1b34c <__assert_fail@plt+0xa294>
   1b218:	ldr	r0, [fp, #-12]
   1b21c:	mov	r1, #0
   1b220:	sdiv	r0, r1, r0
   1b224:	ldr	r1, [fp, #-8]
   1b228:	ldr	r2, [r1]
   1b22c:	ldr	r1, [r1, #4]
   1b230:	subs	r2, r0, r2
   1b234:	rscs	r0, r1, r0, asr #31
   1b238:	str	r2, [sp, #276]	; 0x114
   1b23c:	str	r0, [sp, #272]	; 0x110
   1b240:	bcc	1b32c <__assert_fail@plt+0xa274>
   1b244:	b	1b34c <__assert_fail@plt+0xa294>
   1b248:	ldr	r0, [fp, #-12]
   1b24c:	cmp	r0, #0
   1b250:	bne	1b258 <__assert_fail@plt+0xa1a0>
   1b254:	b	1b34c <__assert_fail@plt+0xa294>
   1b258:	mov	r0, #1
   1b25c:	cmp	r0, #0
   1b260:	bne	1b2fc <__assert_fail@plt+0xa244>
   1b264:	b	1b268 <__assert_fail@plt+0xa1b0>
   1b268:	b	1b270 <__assert_fail@plt+0xa1b8>
   1b26c:	b	1b274 <__assert_fail@plt+0xa1bc>
   1b270:	b	1b2c4 <__assert_fail@plt+0xa20c>
   1b274:	ldr	r0, [fp, #-8]
   1b278:	ldr	r1, [r0]
   1b27c:	ldr	r0, [r0, #4]
   1b280:	and	r0, r1, r0
   1b284:	cmn	r0, #1
   1b288:	bne	1b2c4 <__assert_fail@plt+0xa20c>
   1b28c:	b	1b290 <__assert_fail@plt+0xa1d8>
   1b290:	b	1b294 <__assert_fail@plt+0xa1dc>
   1b294:	ldr	r0, [fp, #-12]
   1b298:	add	r0, r0, #0
   1b29c:	movw	r1, #0
   1b2a0:	cmp	r1, r0
   1b2a4:	blt	1b32c <__assert_fail@plt+0xa274>
   1b2a8:	b	1b34c <__assert_fail@plt+0xa294>
   1b2ac:	ldr	r0, [fp, #-12]
   1b2b0:	sub	r0, r0, #1
   1b2b4:	mvn	r1, #0
   1b2b8:	cmp	r1, r0
   1b2bc:	blt	1b32c <__assert_fail@plt+0xa274>
   1b2c0:	b	1b34c <__assert_fail@plt+0xa294>
   1b2c4:	ldr	r0, [fp, #-8]
   1b2c8:	ldr	r2, [r0]
   1b2cc:	ldr	r3, [r0, #4]
   1b2d0:	mov	r0, #0
   1b2d4:	str	r0, [sp, #268]	; 0x10c
   1b2d8:	ldr	r1, [sp, #268]	; 0x10c
   1b2dc:	bl	1e22c <__assert_fail@plt+0xd174>
   1b2e0:	ldr	r2, [fp, #-12]
   1b2e4:	subs	r0, r0, r2
   1b2e8:	sbcs	r1, r1, r2, asr #31
   1b2ec:	str	r0, [sp, #264]	; 0x108
   1b2f0:	str	r1, [sp, #260]	; 0x104
   1b2f4:	bcc	1b32c <__assert_fail@plt+0xa274>
   1b2f8:	b	1b34c <__assert_fail@plt+0xa294>
   1b2fc:	ldr	r0, [fp, #-12]
   1b300:	mvn	r1, #0
   1b304:	udiv	r0, r1, r0
   1b308:	ldr	r1, [fp, #-8]
   1b30c:	ldr	r2, [r1]
   1b310:	ldr	r1, [r1, #4]
   1b314:	subs	r0, r0, r2
   1b318:	rscs	r1, r1, #0
   1b31c:	str	r0, [sp, #256]	; 0x100
   1b320:	str	r1, [sp, #252]	; 0xfc
   1b324:	bcs	1b34c <__assert_fail@plt+0xa294>
   1b328:	b	1b32c <__assert_fail@plt+0xa274>
   1b32c:	ldr	r0, [fp, #-8]
   1b330:	ldr	r0, [r0]
   1b334:	ldr	r1, [fp, #-12]
   1b338:	mul	r0, r0, r1
   1b33c:	mov	r1, #0
   1b340:	str	r1, [fp, #-20]	; 0xffffffec
   1b344:	str	r0, [fp, #-24]	; 0xffffffe8
   1b348:	b	1be8c <__assert_fail@plt+0xadd4>
   1b34c:	ldr	r0, [fp, #-8]
   1b350:	ldr	r0, [r0]
   1b354:	ldr	r1, [fp, #-12]
   1b358:	mul	r0, r0, r1
   1b35c:	mov	r1, #0
   1b360:	str	r1, [fp, #-20]	; 0xffffffec
   1b364:	str	r0, [fp, #-24]	; 0xffffffe8
   1b368:	b	1bea8 <__assert_fail@plt+0xadf0>
   1b36c:	b	1b888 <__assert_fail@plt+0xa7d0>
   1b370:	b	1b604 <__assert_fail@plt+0xa54c>
   1b374:	ldr	r0, [fp, #-12]
   1b378:	cmp	r0, #0
   1b37c:	bge	1b4f0 <__assert_fail@plt+0xa438>
   1b380:	mov	r0, #1
   1b384:	cmp	r0, #0
   1b388:	bne	1b444 <__assert_fail@plt+0xa38c>
   1b38c:	b	1b390 <__assert_fail@plt+0xa2d8>
   1b390:	b	1b394 <__assert_fail@plt+0xa2dc>
   1b394:	ldr	r0, [fp, #-8]
   1b398:	ldr	r1, [r0]
   1b39c:	ldr	r0, [r0, #4]
   1b3a0:	ldr	r2, [fp, #-12]
   1b3a4:	mvn	r3, #-2147483648	; 0x80000000
   1b3a8:	sdiv	r2, r3, r2
   1b3ac:	subs	r1, r1, r2
   1b3b0:	sbcs	r0, r0, r2, asr #31
   1b3b4:	str	r1, [sp, #248]	; 0xf8
   1b3b8:	str	r0, [sp, #244]	; 0xf4
   1b3bc:	bcc	1b5c4 <__assert_fail@plt+0xa50c>
   1b3c0:	b	1b5e4 <__assert_fail@plt+0xa52c>
   1b3c4:	b	1b3c8 <__assert_fail@plt+0xa310>
   1b3c8:	ldr	r0, [pc, #2816]	; 1bed0 <__assert_fail@plt+0xae18>
   1b3cc:	ldr	r1, [fp, #-12]
   1b3d0:	cmp	r1, r0
   1b3d4:	blt	1b3ec <__assert_fail@plt+0xa334>
   1b3d8:	b	1b3f8 <__assert_fail@plt+0xa340>
   1b3dc:	ldr	r0, [fp, #-12]
   1b3e0:	movw	r1, #0
   1b3e4:	cmp	r1, r0
   1b3e8:	bge	1b3f8 <__assert_fail@plt+0xa340>
   1b3ec:	movw	r0, #0
   1b3f0:	str	r0, [sp, #240]	; 0xf0
   1b3f4:	b	1b410 <__assert_fail@plt+0xa358>
   1b3f8:	ldr	r0, [pc, #2772]	; 1bed4 <__assert_fail@plt+0xae1c>
   1b3fc:	ldr	r1, [fp, #-12]
   1b400:	movw	r2, #0
   1b404:	sub	r1, r2, r1
   1b408:	sdiv	r0, r0, r1
   1b40c:	str	r0, [sp, #240]	; 0xf0
   1b410:	ldr	r0, [sp, #240]	; 0xf0
   1b414:	ldr	r1, [fp, #-8]
   1b418:	ldr	r2, [r1]
   1b41c:	ldr	r1, [r1, #4]
   1b420:	mvn	r1, r1
   1b424:	mvn	r2, r2
   1b428:	subs	r2, r2, r0
   1b42c:	sbcs	r0, r1, r0, asr #31
   1b430:	str	r2, [sp, #236]	; 0xec
   1b434:	str	r0, [sp, #232]	; 0xe8
   1b438:	bcs	1b5c4 <__assert_fail@plt+0xa50c>
   1b43c:	b	1b5e4 <__assert_fail@plt+0xa52c>
   1b440:	andhi	r0, r0, r1
   1b444:	ldr	r0, [fp, #-12]
   1b448:	cmn	r0, #1
   1b44c:	bne	1b4c0 <__assert_fail@plt+0xa408>
   1b450:	b	1b474 <__assert_fail@plt+0xa3bc>
   1b454:	ldr	r0, [fp, #-8]
   1b458:	ldr	r1, [r0]
   1b45c:	ldr	r0, [r0, #4]
   1b460:	eor	r1, r1, #-2147483648	; 0x80000000
   1b464:	orr	r0, r1, r0
   1b468:	cmp	r0, #0
   1b46c:	bne	1b5c4 <__assert_fail@plt+0xa50c>
   1b470:	b	1b5e4 <__assert_fail@plt+0xa52c>
   1b474:	ldr	r0, [fp, #-8]
   1b478:	ldr	r1, [r0]
   1b47c:	ldr	r0, [r0, #4]
   1b480:	orr	r0, r1, r0
   1b484:	cmp	r0, #0
   1b488:	beq	1b5e4 <__assert_fail@plt+0xa52c>
   1b48c:	b	1b490 <__assert_fail@plt+0xa3d8>
   1b490:	ldr	r0, [fp, #-8]
   1b494:	ldr	r1, [r0]
   1b498:	ldr	r0, [r0, #4]
   1b49c:	subs	r1, r1, #1
   1b4a0:	sbc	r0, r0, #0
   1b4a4:	mvn	r2, #-2147483648	; 0x80000000
   1b4a8:	subs	r1, r2, r1
   1b4ac:	rscs	r0, r0, #0
   1b4b0:	str	r1, [sp, #228]	; 0xe4
   1b4b4:	str	r0, [sp, #224]	; 0xe0
   1b4b8:	bcc	1b5c4 <__assert_fail@plt+0xa50c>
   1b4bc:	b	1b5e4 <__assert_fail@plt+0xa52c>
   1b4c0:	ldr	r0, [fp, #-12]
   1b4c4:	mov	r1, #-2147483648	; 0x80000000
   1b4c8:	sdiv	r0, r1, r0
   1b4cc:	ldr	r1, [fp, #-8]
   1b4d0:	ldr	r2, [r1]
   1b4d4:	ldr	r1, [r1, #4]
   1b4d8:	subs	r2, r0, r2
   1b4dc:	rscs	r0, r1, r0, asr #31
   1b4e0:	str	r2, [sp, #220]	; 0xdc
   1b4e4:	str	r0, [sp, #216]	; 0xd8
   1b4e8:	bcc	1b5c4 <__assert_fail@plt+0xa50c>
   1b4ec:	b	1b5e4 <__assert_fail@plt+0xa52c>
   1b4f0:	ldr	r0, [fp, #-12]
   1b4f4:	cmp	r0, #0
   1b4f8:	bne	1b500 <__assert_fail@plt+0xa448>
   1b4fc:	b	1b5e4 <__assert_fail@plt+0xa52c>
   1b500:	mov	r0, #1
   1b504:	cmp	r0, #0
   1b508:	bne	1b594 <__assert_fail@plt+0xa4dc>
   1b50c:	b	1b510 <__assert_fail@plt+0xa458>
   1b510:	ldr	r0, [fp, #-8]
   1b514:	ldr	r1, [r0]
   1b518:	ldr	r0, [r0, #4]
   1b51c:	and	r0, r1, r0
   1b520:	cmn	r0, #1
   1b524:	bne	1b560 <__assert_fail@plt+0xa4a8>
   1b528:	b	1b52c <__assert_fail@plt+0xa474>
   1b52c:	b	1b530 <__assert_fail@plt+0xa478>
   1b530:	ldr	r0, [fp, #-12]
   1b534:	add	r0, r0, #-2147483648	; 0x80000000
   1b538:	movw	r1, #0
   1b53c:	cmp	r1, r0
   1b540:	blt	1b5c4 <__assert_fail@plt+0xa50c>
   1b544:	b	1b5e4 <__assert_fail@plt+0xa52c>
   1b548:	ldr	r0, [pc, #2436]	; 1bed4 <__assert_fail@plt+0xae1c>
   1b54c:	ldr	r1, [fp, #-12]
   1b550:	sub	r1, r1, #1
   1b554:	cmp	r0, r1
   1b558:	blt	1b5c4 <__assert_fail@plt+0xa50c>
   1b55c:	b	1b5e4 <__assert_fail@plt+0xa52c>
   1b560:	ldr	r0, [fp, #-8]
   1b564:	ldr	r2, [r0]
   1b568:	ldr	r3, [r0, #4]
   1b56c:	mov	r0, #-2147483648	; 0x80000000
   1b570:	mvn	r1, #0
   1b574:	bl	1e22c <__assert_fail@plt+0xd174>
   1b578:	ldr	r2, [fp, #-12]
   1b57c:	subs	r0, r0, r2
   1b580:	sbcs	r1, r1, r2, asr #31
   1b584:	str	r0, [sp, #212]	; 0xd4
   1b588:	str	r1, [sp, #208]	; 0xd0
   1b58c:	bcc	1b5c4 <__assert_fail@plt+0xa50c>
   1b590:	b	1b5e4 <__assert_fail@plt+0xa52c>
   1b594:	ldr	r0, [fp, #-12]
   1b598:	mvn	r1, #-2147483648	; 0x80000000
   1b59c:	sdiv	r0, r1, r0
   1b5a0:	ldr	r1, [fp, #-8]
   1b5a4:	ldr	r2, [r1]
   1b5a8:	ldr	r1, [r1, #4]
   1b5ac:	subs	r2, r0, r2
   1b5b0:	rscs	r0, r1, r0, asr #31
   1b5b4:	str	r2, [sp, #204]	; 0xcc
   1b5b8:	str	r0, [sp, #200]	; 0xc8
   1b5bc:	bcs	1b5e4 <__assert_fail@plt+0xa52c>
   1b5c0:	b	1b5c4 <__assert_fail@plt+0xa50c>
   1b5c4:	ldr	r0, [fp, #-8]
   1b5c8:	ldr	r0, [r0]
   1b5cc:	ldr	r1, [fp, #-12]
   1b5d0:	mul	r0, r0, r1
   1b5d4:	asr	r1, r0, #31
   1b5d8:	str	r0, [fp, #-24]	; 0xffffffe8
   1b5dc:	str	r1, [fp, #-20]	; 0xffffffec
   1b5e0:	b	1be8c <__assert_fail@plt+0xadd4>
   1b5e4:	ldr	r0, [fp, #-8]
   1b5e8:	ldr	r0, [r0]
   1b5ec:	ldr	r1, [fp, #-12]
   1b5f0:	mul	r0, r0, r1
   1b5f4:	asr	r1, r0, #31
   1b5f8:	str	r0, [fp, #-24]	; 0xffffffe8
   1b5fc:	str	r1, [fp, #-20]	; 0xffffffec
   1b600:	b	1bea8 <__assert_fail@plt+0xadf0>
   1b604:	ldr	r0, [fp, #-12]
   1b608:	cmp	r0, #0
   1b60c:	bge	1b764 <__assert_fail@plt+0xa6ac>
   1b610:	mov	r0, #1
   1b614:	cmp	r0, #0
   1b618:	bne	1b6d0 <__assert_fail@plt+0xa618>
   1b61c:	b	1b620 <__assert_fail@plt+0xa568>
   1b620:	b	1b654 <__assert_fail@plt+0xa59c>
   1b624:	ldr	r0, [fp, #-8]
   1b628:	ldr	r1, [r0]
   1b62c:	ldr	r0, [r0, #4]
   1b630:	ldr	r2, [fp, #-12]
   1b634:	mvn	r3, #0
   1b638:	udiv	r2, r3, r2
   1b63c:	subs	r1, r1, r2
   1b640:	sbcs	r0, r0, #0
   1b644:	str	r1, [sp, #196]	; 0xc4
   1b648:	str	r0, [sp, #192]	; 0xc0
   1b64c:	bcc	1b848 <__assert_fail@plt+0xa790>
   1b650:	b	1b868 <__assert_fail@plt+0xa7b0>
   1b654:	b	1b658 <__assert_fail@plt+0xa5a0>
   1b658:	ldr	r0, [pc, #2160]	; 1bed0 <__assert_fail@plt+0xae18>
   1b65c:	ldr	r1, [fp, #-12]
   1b660:	cmp	r1, r0
   1b664:	blt	1b67c <__assert_fail@plt+0xa5c4>
   1b668:	b	1b688 <__assert_fail@plt+0xa5d0>
   1b66c:	ldr	r0, [fp, #-12]
   1b670:	movw	r1, #0
   1b674:	cmp	r1, r0
   1b678:	bge	1b688 <__assert_fail@plt+0xa5d0>
   1b67c:	movw	r0, #1
   1b680:	str	r0, [sp, #188]	; 0xbc
   1b684:	b	1b6a0 <__assert_fail@plt+0xa5e8>
   1b688:	ldr	r0, [fp, #-12]
   1b68c:	movw	r1, #0
   1b690:	sub	r0, r1, r0
   1b694:	mvn	r1, #0
   1b698:	udiv	r0, r1, r0
   1b69c:	str	r0, [sp, #188]	; 0xbc
   1b6a0:	ldr	r0, [sp, #188]	; 0xbc
   1b6a4:	ldr	r1, [fp, #-8]
   1b6a8:	ldr	r2, [r1]
   1b6ac:	ldr	r1, [r1, #4]
   1b6b0:	mvn	r1, r1
   1b6b4:	mvn	r2, r2
   1b6b8:	subs	r0, r2, r0
   1b6bc:	sbcs	r1, r1, #0
   1b6c0:	str	r0, [sp, #184]	; 0xb8
   1b6c4:	str	r1, [sp, #180]	; 0xb4
   1b6c8:	bcs	1b848 <__assert_fail@plt+0xa790>
   1b6cc:	b	1b868 <__assert_fail@plt+0xa7b0>
   1b6d0:	b	1b6d4 <__assert_fail@plt+0xa61c>
   1b6d4:	b	1b734 <__assert_fail@plt+0xa67c>
   1b6d8:	b	1b734 <__assert_fail@plt+0xa67c>
   1b6dc:	ldr	r0, [fp, #-12]
   1b6e0:	cmn	r0, #1
   1b6e4:	bne	1b734 <__assert_fail@plt+0xa67c>
   1b6e8:	b	1b708 <__assert_fail@plt+0xa650>
   1b6ec:	ldr	r0, [fp, #-8]
   1b6f0:	ldr	r1, [r0]
   1b6f4:	ldr	r0, [r0, #4]
   1b6f8:	orr	r0, r1, r0
   1b6fc:	cmp	r0, #0
   1b700:	bne	1b848 <__assert_fail@plt+0xa790>
   1b704:	b	1b868 <__assert_fail@plt+0xa7b0>
   1b708:	ldr	r0, [fp, #-8]
   1b70c:	ldr	r1, [r0]
   1b710:	ldr	r0, [r0, #4]
   1b714:	orr	r0, r1, r0
   1b718:	cmp	r0, #0
   1b71c:	beq	1b868 <__assert_fail@plt+0xa7b0>
   1b720:	b	1b724 <__assert_fail@plt+0xa66c>
   1b724:	mov	r0, #0
   1b728:	cmp	r0, #0
   1b72c:	bne	1b848 <__assert_fail@plt+0xa790>
   1b730:	b	1b868 <__assert_fail@plt+0xa7b0>
   1b734:	ldr	r0, [fp, #-12]
   1b738:	mov	r1, #0
   1b73c:	sdiv	r0, r1, r0
   1b740:	ldr	r1, [fp, #-8]
   1b744:	ldr	r2, [r1]
   1b748:	ldr	r1, [r1, #4]
   1b74c:	subs	r2, r0, r2
   1b750:	rscs	r0, r1, r0, asr #31
   1b754:	str	r2, [sp, #176]	; 0xb0
   1b758:	str	r0, [sp, #172]	; 0xac
   1b75c:	bcc	1b848 <__assert_fail@plt+0xa790>
   1b760:	b	1b868 <__assert_fail@plt+0xa7b0>
   1b764:	ldr	r0, [fp, #-12]
   1b768:	cmp	r0, #0
   1b76c:	bne	1b774 <__assert_fail@plt+0xa6bc>
   1b770:	b	1b868 <__assert_fail@plt+0xa7b0>
   1b774:	mov	r0, #1
   1b778:	cmp	r0, #0
   1b77c:	bne	1b818 <__assert_fail@plt+0xa760>
   1b780:	b	1b784 <__assert_fail@plt+0xa6cc>
   1b784:	b	1b78c <__assert_fail@plt+0xa6d4>
   1b788:	b	1b790 <__assert_fail@plt+0xa6d8>
   1b78c:	b	1b7e0 <__assert_fail@plt+0xa728>
   1b790:	ldr	r0, [fp, #-8]
   1b794:	ldr	r1, [r0]
   1b798:	ldr	r0, [r0, #4]
   1b79c:	and	r0, r1, r0
   1b7a0:	cmn	r0, #1
   1b7a4:	bne	1b7e0 <__assert_fail@plt+0xa728>
   1b7a8:	b	1b7ac <__assert_fail@plt+0xa6f4>
   1b7ac:	b	1b7b0 <__assert_fail@plt+0xa6f8>
   1b7b0:	ldr	r0, [fp, #-12]
   1b7b4:	add	r0, r0, #0
   1b7b8:	movw	r1, #0
   1b7bc:	cmp	r1, r0
   1b7c0:	blt	1b848 <__assert_fail@plt+0xa790>
   1b7c4:	b	1b868 <__assert_fail@plt+0xa7b0>
   1b7c8:	ldr	r0, [fp, #-12]
   1b7cc:	sub	r0, r0, #1
   1b7d0:	mvn	r1, #0
   1b7d4:	cmp	r1, r0
   1b7d8:	blt	1b848 <__assert_fail@plt+0xa790>
   1b7dc:	b	1b868 <__assert_fail@plt+0xa7b0>
   1b7e0:	ldr	r0, [fp, #-8]
   1b7e4:	ldr	r2, [r0]
   1b7e8:	ldr	r3, [r0, #4]
   1b7ec:	mov	r0, #0
   1b7f0:	str	r0, [sp, #168]	; 0xa8
   1b7f4:	ldr	r1, [sp, #168]	; 0xa8
   1b7f8:	bl	1e22c <__assert_fail@plt+0xd174>
   1b7fc:	ldr	r2, [fp, #-12]
   1b800:	subs	r0, r0, r2
   1b804:	sbcs	r1, r1, r2, asr #31
   1b808:	str	r0, [sp, #164]	; 0xa4
   1b80c:	str	r1, [sp, #160]	; 0xa0
   1b810:	bcc	1b848 <__assert_fail@plt+0xa790>
   1b814:	b	1b868 <__assert_fail@plt+0xa7b0>
   1b818:	ldr	r0, [fp, #-12]
   1b81c:	mvn	r1, #0
   1b820:	udiv	r0, r1, r0
   1b824:	ldr	r1, [fp, #-8]
   1b828:	ldr	r2, [r1]
   1b82c:	ldr	r1, [r1, #4]
   1b830:	subs	r0, r0, r2
   1b834:	rscs	r1, r1, #0
   1b838:	str	r0, [sp, #156]	; 0x9c
   1b83c:	str	r1, [sp, #152]	; 0x98
   1b840:	bcs	1b868 <__assert_fail@plt+0xa7b0>
   1b844:	b	1b848 <__assert_fail@plt+0xa790>
   1b848:	ldr	r0, [fp, #-8]
   1b84c:	ldr	r0, [r0]
   1b850:	ldr	r1, [fp, #-12]
   1b854:	mul	r0, r0, r1
   1b858:	mov	r1, #0
   1b85c:	str	r1, [fp, #-20]	; 0xffffffec
   1b860:	str	r0, [fp, #-24]	; 0xffffffe8
   1b864:	b	1be8c <__assert_fail@plt+0xadd4>
   1b868:	ldr	r0, [fp, #-8]
   1b86c:	ldr	r0, [r0]
   1b870:	ldr	r1, [fp, #-12]
   1b874:	mul	r0, r0, r1
   1b878:	mov	r1, #0
   1b87c:	str	r1, [fp, #-20]	; 0xffffffec
   1b880:	str	r0, [fp, #-24]	; 0xffffffe8
   1b884:	b	1bea8 <__assert_fail@plt+0xadf0>
   1b888:	b	1bba4 <__assert_fail@plt+0xaaec>
   1b88c:	ldr	r0, [fp, #-12]
   1b890:	cmp	r0, #0
   1b894:	bge	1ba58 <__assert_fail@plt+0xa9a0>
   1b898:	mov	r0, #1
   1b89c:	cmp	r0, #0
   1b8a0:	bne	1b9a0 <__assert_fail@plt+0xa8e8>
   1b8a4:	b	1b8a8 <__assert_fail@plt+0xa7f0>
   1b8a8:	b	1b8ac <__assert_fail@plt+0xa7f4>
   1b8ac:	ldr	r0, [fp, #-8]
   1b8b0:	ldr	r1, [r0]
   1b8b4:	ldr	r0, [r0, #4]
   1b8b8:	ldr	r2, [fp, #-12]
   1b8bc:	asr	r3, r2, #31
   1b8c0:	mvn	ip, #0
   1b8c4:	mvn	lr, #-2147483648	; 0x80000000
   1b8c8:	str	r0, [sp, #148]	; 0x94
   1b8cc:	mov	r0, ip
   1b8d0:	str	r1, [sp, #144]	; 0x90
   1b8d4:	mov	r1, lr
   1b8d8:	bl	1e158 <__assert_fail@plt+0xd0a0>
   1b8dc:	ldr	r2, [sp, #144]	; 0x90
   1b8e0:	subs	r0, r2, r0
   1b8e4:	ldr	r2, [sp, #148]	; 0x94
   1b8e8:	sbcs	r1, r2, r1
   1b8ec:	str	r0, [sp, #140]	; 0x8c
   1b8f0:	str	r1, [sp, #136]	; 0x88
   1b8f4:	bcc	1bb4c <__assert_fail@plt+0xaa94>
   1b8f8:	b	1bb78 <__assert_fail@plt+0xaac0>
   1b8fc:	b	1b900 <__assert_fail@plt+0xa848>
   1b900:	ldr	r0, [pc, #1480]	; 1bed0 <__assert_fail@plt+0xae18>
   1b904:	ldr	r1, [fp, #-12]
   1b908:	cmp	r1, r0
   1b90c:	blt	1b924 <__assert_fail@plt+0xa86c>
   1b910:	b	1b938 <__assert_fail@plt+0xa880>
   1b914:	ldr	r0, [fp, #-12]
   1b918:	movw	r1, #0
   1b91c:	cmp	r1, r0
   1b920:	bge	1b938 <__assert_fail@plt+0xa880>
   1b924:	mov	r0, #0
   1b928:	mvn	r1, #0
   1b92c:	str	r1, [sp, #132]	; 0x84
   1b930:	str	r0, [sp, #128]	; 0x80
   1b934:	b	1b96c <__assert_fail@plt+0xa8b4>
   1b938:	ldr	r0, [fp, #-12]
   1b93c:	rsb	r0, r0, #0
   1b940:	asr	r3, r0, #31
   1b944:	mvn	r1, #0
   1b948:	mvn	r2, #-2147483648	; 0x80000000
   1b94c:	str	r0, [sp, #124]	; 0x7c
   1b950:	mov	r0, r1
   1b954:	mov	r1, r2
   1b958:	ldr	r2, [sp, #124]	; 0x7c
   1b95c:	bl	1e158 <__assert_fail@plt+0xd0a0>
   1b960:	str	r0, [sp, #132]	; 0x84
   1b964:	str	r1, [sp, #128]	; 0x80
   1b968:	b	1b96c <__assert_fail@plt+0xa8b4>
   1b96c:	ldr	r0, [sp, #128]	; 0x80
   1b970:	ldr	r1, [sp, #132]	; 0x84
   1b974:	ldr	r2, [fp, #-8]
   1b978:	ldr	r3, [r2]
   1b97c:	ldr	r2, [r2, #4]
   1b980:	mvn	r2, r2
   1b984:	mvn	r3, r3
   1b988:	subs	r1, r3, r1
   1b98c:	sbcs	r0, r2, r0
   1b990:	str	r1, [sp, #120]	; 0x78
   1b994:	str	r0, [sp, #116]	; 0x74
   1b998:	bcs	1bb4c <__assert_fail@plt+0xaa94>
   1b99c:	b	1bb78 <__assert_fail@plt+0xaac0>
   1b9a0:	ldr	r0, [fp, #-12]
   1b9a4:	cmn	r0, #1
   1b9a8:	bne	1ba10 <__assert_fail@plt+0xa958>
   1b9ac:	b	1b9d0 <__assert_fail@plt+0xa918>
   1b9b0:	ldr	r0, [fp, #-8]
   1b9b4:	ldr	r1, [r0]
   1b9b8:	ldr	r0, [r0, #4]
   1b9bc:	eor	r0, r0, #-2147483648	; 0x80000000
   1b9c0:	orr	r0, r1, r0
   1b9c4:	cmp	r0, #0
   1b9c8:	bne	1bb4c <__assert_fail@plt+0xaa94>
   1b9cc:	b	1bb78 <__assert_fail@plt+0xaac0>
   1b9d0:	ldr	r0, [fp, #-8]
   1b9d4:	ldr	r1, [r0]
   1b9d8:	ldr	r0, [r0, #4]
   1b9dc:	orr	r0, r1, r0
   1b9e0:	cmp	r0, #0
   1b9e4:	beq	1bb78 <__assert_fail@plt+0xaac0>
   1b9e8:	b	1b9ec <__assert_fail@plt+0xa934>
   1b9ec:	ldr	r0, [fp, #-8]
   1b9f0:	ldr	r1, [r0]
   1b9f4:	ldr	r0, [r0, #4]
   1b9f8:	subs	r1, r1, #1
   1b9fc:	sbc	r0, r0, #0
   1ba00:	cmp	r0, #0
   1ba04:	str	r1, [sp, #112]	; 0x70
   1ba08:	blt	1bb4c <__assert_fail@plt+0xaa94>
   1ba0c:	b	1bb78 <__assert_fail@plt+0xaac0>
   1ba10:	ldr	r0, [fp, #-12]
   1ba14:	asr	r3, r0, #31
   1ba18:	mov	r1, #0
   1ba1c:	mov	r2, #-2147483648	; 0x80000000
   1ba20:	str	r0, [sp, #108]	; 0x6c
   1ba24:	mov	r0, r1
   1ba28:	mov	r1, r2
   1ba2c:	ldr	r2, [sp, #108]	; 0x6c
   1ba30:	bl	1e158 <__assert_fail@plt+0xd0a0>
   1ba34:	ldr	r2, [fp, #-8]
   1ba38:	ldr	r3, [r2]
   1ba3c:	ldr	r2, [r2, #4]
   1ba40:	subs	r0, r0, r3
   1ba44:	sbcs	r1, r1, r2
   1ba48:	str	r0, [sp, #104]	; 0x68
   1ba4c:	str	r1, [sp, #100]	; 0x64
   1ba50:	bcc	1bb4c <__assert_fail@plt+0xaa94>
   1ba54:	b	1bb78 <__assert_fail@plt+0xaac0>
   1ba58:	ldr	r0, [fp, #-12]
   1ba5c:	cmp	r0, #0
   1ba60:	bne	1ba68 <__assert_fail@plt+0xa9b0>
   1ba64:	b	1bb78 <__assert_fail@plt+0xaac0>
   1ba68:	mov	r0, #1
   1ba6c:	cmp	r0, #0
   1ba70:	bne	1bb04 <__assert_fail@plt+0xaa4c>
   1ba74:	b	1ba78 <__assert_fail@plt+0xa9c0>
   1ba78:	ldr	r0, [fp, #-8]
   1ba7c:	ldr	r1, [r0]
   1ba80:	ldr	r0, [r0, #4]
   1ba84:	and	r0, r1, r0
   1ba88:	cmn	r0, #1
   1ba8c:	bne	1bad0 <__assert_fail@plt+0xaa18>
   1ba90:	b	1ba94 <__assert_fail@plt+0xa9dc>
   1ba94:	b	1ba98 <__assert_fail@plt+0xa9e0>
   1ba98:	ldr	r0, [fp, #-12]
   1ba9c:	mov	r1, #-2147483648	; 0x80000000
   1baa0:	add	r1, r1, r0, asr #31
   1baa4:	rsbs	r0, r0, #0
   1baa8:	rscs	r1, r1, #0
   1baac:	str	r0, [sp, #96]	; 0x60
   1bab0:	str	r1, [sp, #92]	; 0x5c
   1bab4:	blt	1bb4c <__assert_fail@plt+0xaa94>
   1bab8:	b	1bb78 <__assert_fail@plt+0xaac0>
   1babc:	mov	r0, #0
   1bac0:	cmp	r0, #0
   1bac4:	bne	1bb4c <__assert_fail@plt+0xaa94>
   1bac8:	b	1bb78 <__assert_fail@plt+0xaac0>
   1bacc:			; <UNDEFINED> instruction: 0xffff8000
   1bad0:	ldr	r0, [fp, #-8]
   1bad4:	ldr	r2, [r0]
   1bad8:	ldr	r3, [r0, #4]
   1badc:	mov	r0, #0
   1bae0:	mov	r1, #-2147483648	; 0x80000000
   1bae4:	bl	1e22c <__assert_fail@plt+0xd174>
   1bae8:	ldr	r2, [fp, #-12]
   1baec:	subs	r0, r0, r2
   1baf0:	sbcs	r1, r1, r2, asr #31
   1baf4:	str	r0, [sp, #88]	; 0x58
   1baf8:	str	r1, [sp, #84]	; 0x54
   1bafc:	bcc	1bb4c <__assert_fail@plt+0xaa94>
   1bb00:	b	1bb78 <__assert_fail@plt+0xaac0>
   1bb04:	ldr	r0, [fp, #-12]
   1bb08:	asr	r3, r0, #31
   1bb0c:	mvn	r1, #0
   1bb10:	mvn	r2, #-2147483648	; 0x80000000
   1bb14:	str	r0, [sp, #80]	; 0x50
   1bb18:	mov	r0, r1
   1bb1c:	mov	r1, r2
   1bb20:	ldr	r2, [sp, #80]	; 0x50
   1bb24:	bl	1e158 <__assert_fail@plt+0xd0a0>
   1bb28:	ldr	r2, [fp, #-8]
   1bb2c:	ldr	r3, [r2]
   1bb30:	ldr	r2, [r2, #4]
   1bb34:	subs	r0, r0, r3
   1bb38:	sbcs	r1, r1, r2
   1bb3c:	str	r0, [sp, #76]	; 0x4c
   1bb40:	str	r1, [sp, #72]	; 0x48
   1bb44:	bcs	1bb78 <__assert_fail@plt+0xaac0>
   1bb48:	b	1bb4c <__assert_fail@plt+0xaa94>
   1bb4c:	ldr	r0, [fp, #-8]
   1bb50:	ldr	r1, [r0]
   1bb54:	ldr	r0, [r0, #4]
   1bb58:	ldr	r2, [fp, #-12]
   1bb5c:	asr	r3, r2, #31
   1bb60:	umull	ip, lr, r1, r2
   1bb64:	mla	r1, r1, r3, lr
   1bb68:	mla	r0, r0, r2, r1
   1bb6c:	str	ip, [fp, #-24]	; 0xffffffe8
   1bb70:	str	r0, [fp, #-20]	; 0xffffffec
   1bb74:	b	1be8c <__assert_fail@plt+0xadd4>
   1bb78:	ldr	r0, [fp, #-8]
   1bb7c:	ldr	r1, [r0]
   1bb80:	ldr	r0, [r0, #4]
   1bb84:	ldr	r2, [fp, #-12]
   1bb88:	asr	r3, r2, #31
   1bb8c:	umull	ip, lr, r1, r2
   1bb90:	mla	r1, r1, r3, lr
   1bb94:	mla	r0, r0, r2, r1
   1bb98:	str	ip, [fp, #-24]	; 0xffffffe8
   1bb9c:	str	r0, [fp, #-20]	; 0xffffffec
   1bba0:	b	1bea8 <__assert_fail@plt+0xadf0>
   1bba4:	ldr	r0, [fp, #-12]
   1bba8:	cmp	r0, #0
   1bbac:	bge	1bd40 <__assert_fail@plt+0xac88>
   1bbb0:	mov	r0, #1
   1bbb4:	cmp	r0, #0
   1bbb8:	bne	1bcac <__assert_fail@plt+0xabf4>
   1bbbc:	b	1bbc0 <__assert_fail@plt+0xab08>
   1bbc0:	b	1bc10 <__assert_fail@plt+0xab58>
   1bbc4:	ldr	r0, [fp, #-8]
   1bbc8:	ldr	r1, [r0]
   1bbcc:	ldr	r0, [r0, #4]
   1bbd0:	ldr	r2, [fp, #-12]
   1bbd4:	asr	r3, r2, #31
   1bbd8:	mvn	ip, #0
   1bbdc:	str	r0, [sp, #68]	; 0x44
   1bbe0:	mov	r0, ip
   1bbe4:	str	r1, [sp, #64]	; 0x40
   1bbe8:	mov	r1, ip
   1bbec:	bl	1e22c <__assert_fail@plt+0xd174>
   1bbf0:	ldr	r2, [sp, #64]	; 0x40
   1bbf4:	subs	r0, r2, r0
   1bbf8:	ldr	r2, [sp, #68]	; 0x44
   1bbfc:	sbcs	r1, r2, r1
   1bc00:	str	r0, [sp, #60]	; 0x3c
   1bc04:	str	r1, [sp, #56]	; 0x38
   1bc08:	bcc	1be34 <__assert_fail@plt+0xad7c>
   1bc0c:	b	1be60 <__assert_fail@plt+0xada8>
   1bc10:	b	1bc14 <__assert_fail@plt+0xab5c>
   1bc14:	ldr	r0, [pc, #692]	; 1bed0 <__assert_fail@plt+0xae18>
   1bc18:	ldr	r1, [fp, #-12]
   1bc1c:	cmp	r1, r0
   1bc20:	blt	1bc38 <__assert_fail@plt+0xab80>
   1bc24:	b	1bc4c <__assert_fail@plt+0xab94>
   1bc28:	ldr	r0, [fp, #-12]
   1bc2c:	movw	r1, #0
   1bc30:	cmp	r1, r0
   1bc34:	bge	1bc4c <__assert_fail@plt+0xab94>
   1bc38:	mov	r0, #1
   1bc3c:	mvn	r1, #0
   1bc40:	str	r1, [sp, #52]	; 0x34
   1bc44:	str	r0, [sp, #48]	; 0x30
   1bc48:	b	1bc78 <__assert_fail@plt+0xabc0>
   1bc4c:	ldr	r0, [fp, #-12]
   1bc50:	rsb	r0, r0, #0
   1bc54:	asr	r3, r0, #31
   1bc58:	mvn	r1, #0
   1bc5c:	str	r0, [sp, #44]	; 0x2c
   1bc60:	mov	r0, r1
   1bc64:	ldr	r2, [sp, #44]	; 0x2c
   1bc68:	bl	1e22c <__assert_fail@plt+0xd174>
   1bc6c:	str	r0, [sp, #52]	; 0x34
   1bc70:	str	r1, [sp, #48]	; 0x30
   1bc74:	b	1bc78 <__assert_fail@plt+0xabc0>
   1bc78:	ldr	r0, [sp, #48]	; 0x30
   1bc7c:	ldr	r1, [sp, #52]	; 0x34
   1bc80:	ldr	r2, [fp, #-8]
   1bc84:	ldr	r3, [r2]
   1bc88:	ldr	r2, [r2, #4]
   1bc8c:	mvn	r2, r2
   1bc90:	mvn	r3, r3
   1bc94:	subs	r1, r3, r1
   1bc98:	sbcs	r0, r2, r0
   1bc9c:	str	r1, [sp, #40]	; 0x28
   1bca0:	str	r0, [sp, #36]	; 0x24
   1bca4:	bcs	1be34 <__assert_fail@plt+0xad7c>
   1bca8:	b	1be60 <__assert_fail@plt+0xada8>
   1bcac:	b	1bcb0 <__assert_fail@plt+0xabf8>
   1bcb0:	b	1bd10 <__assert_fail@plt+0xac58>
   1bcb4:	b	1bd10 <__assert_fail@plt+0xac58>
   1bcb8:	ldr	r0, [fp, #-12]
   1bcbc:	cmn	r0, #1
   1bcc0:	bne	1bd10 <__assert_fail@plt+0xac58>
   1bcc4:	b	1bce4 <__assert_fail@plt+0xac2c>
   1bcc8:	ldr	r0, [fp, #-8]
   1bccc:	ldr	r1, [r0]
   1bcd0:	ldr	r0, [r0, #4]
   1bcd4:	orr	r0, r1, r0
   1bcd8:	cmp	r0, #0
   1bcdc:	bne	1be34 <__assert_fail@plt+0xad7c>
   1bce0:	b	1be60 <__assert_fail@plt+0xada8>
   1bce4:	ldr	r0, [fp, #-8]
   1bce8:	ldr	r1, [r0]
   1bcec:	ldr	r0, [r0, #4]
   1bcf0:	orr	r0, r1, r0
   1bcf4:	cmp	r0, #0
   1bcf8:	beq	1be60 <__assert_fail@plt+0xada8>
   1bcfc:	b	1bd00 <__assert_fail@plt+0xac48>
   1bd00:	mov	r0, #0
   1bd04:	cmp	r0, #0
   1bd08:	bne	1be34 <__assert_fail@plt+0xad7c>
   1bd0c:	b	1be60 <__assert_fail@plt+0xada8>
   1bd10:	ldr	r0, [fp, #-12]
   1bd14:	mov	r1, #0
   1bd18:	sdiv	r0, r1, r0
   1bd1c:	ldr	r1, [fp, #-8]
   1bd20:	ldr	r2, [r1]
   1bd24:	ldr	r1, [r1, #4]
   1bd28:	subs	r2, r0, r2
   1bd2c:	rscs	r0, r1, r0, asr #31
   1bd30:	str	r2, [sp, #32]
   1bd34:	str	r0, [sp, #28]
   1bd38:	bcc	1be34 <__assert_fail@plt+0xad7c>
   1bd3c:	b	1be60 <__assert_fail@plt+0xada8>
   1bd40:	ldr	r0, [fp, #-12]
   1bd44:	cmp	r0, #0
   1bd48:	bne	1bd50 <__assert_fail@plt+0xac98>
   1bd4c:	b	1be60 <__assert_fail@plt+0xada8>
   1bd50:	mov	r0, #1
   1bd54:	cmp	r0, #0
   1bd58:	bne	1bdf4 <__assert_fail@plt+0xad3c>
   1bd5c:	b	1bd60 <__assert_fail@plt+0xaca8>
   1bd60:	b	1bd68 <__assert_fail@plt+0xacb0>
   1bd64:	b	1bd6c <__assert_fail@plt+0xacb4>
   1bd68:	b	1bdbc <__assert_fail@plt+0xad04>
   1bd6c:	ldr	r0, [fp, #-8]
   1bd70:	ldr	r1, [r0]
   1bd74:	ldr	r0, [r0, #4]
   1bd78:	and	r0, r1, r0
   1bd7c:	cmn	r0, #1
   1bd80:	bne	1bdbc <__assert_fail@plt+0xad04>
   1bd84:	b	1bd88 <__assert_fail@plt+0xacd0>
   1bd88:	b	1bd8c <__assert_fail@plt+0xacd4>
   1bd8c:	ldr	r0, [fp, #-12]
   1bd90:	add	r0, r0, #0
   1bd94:	movw	r1, #0
   1bd98:	cmp	r1, r0
   1bd9c:	blt	1be34 <__assert_fail@plt+0xad7c>
   1bda0:	b	1be60 <__assert_fail@plt+0xada8>
   1bda4:	ldr	r0, [fp, #-12]
   1bda8:	sub	r0, r0, #1
   1bdac:	mvn	r1, #0
   1bdb0:	cmp	r1, r0
   1bdb4:	blt	1be34 <__assert_fail@plt+0xad7c>
   1bdb8:	b	1be60 <__assert_fail@plt+0xada8>
   1bdbc:	ldr	r0, [fp, #-8]
   1bdc0:	ldr	r2, [r0]
   1bdc4:	ldr	r3, [r0, #4]
   1bdc8:	mov	r0, #0
   1bdcc:	str	r0, [sp, #24]
   1bdd0:	ldr	r1, [sp, #24]
   1bdd4:	bl	1e22c <__assert_fail@plt+0xd174>
   1bdd8:	ldr	r2, [fp, #-12]
   1bddc:	subs	r0, r0, r2
   1bde0:	sbcs	r1, r1, r2, asr #31
   1bde4:	str	r0, [sp, #20]
   1bde8:	str	r1, [sp, #16]
   1bdec:	bcc	1be34 <__assert_fail@plt+0xad7c>
   1bdf0:	b	1be60 <__assert_fail@plt+0xada8>
   1bdf4:	ldr	r0, [fp, #-12]
   1bdf8:	asr	r3, r0, #31
   1bdfc:	mvn	r1, #0
   1be00:	str	r0, [sp, #12]
   1be04:	mov	r0, r1
   1be08:	ldr	r2, [sp, #12]
   1be0c:	bl	1e22c <__assert_fail@plt+0xd174>
   1be10:	ldr	r2, [fp, #-8]
   1be14:	ldr	r3, [r2]
   1be18:	ldr	r2, [r2, #4]
   1be1c:	subs	r0, r0, r3
   1be20:	sbcs	r1, r1, r2
   1be24:	str	r0, [sp, #8]
   1be28:	str	r1, [sp, #4]
   1be2c:	bcs	1be60 <__assert_fail@plt+0xada8>
   1be30:	b	1be34 <__assert_fail@plt+0xad7c>
   1be34:	ldr	r0, [fp, #-8]
   1be38:	ldr	r1, [r0]
   1be3c:	ldr	r0, [r0, #4]
   1be40:	ldr	r2, [fp, #-12]
   1be44:	asr	r3, r2, #31
   1be48:	umull	ip, lr, r1, r2
   1be4c:	mla	r1, r1, r3, lr
   1be50:	mla	r0, r0, r2, r1
   1be54:	str	ip, [fp, #-24]	; 0xffffffe8
   1be58:	str	r0, [fp, #-20]	; 0xffffffec
   1be5c:	b	1be8c <__assert_fail@plt+0xadd4>
   1be60:	ldr	r0, [fp, #-8]
   1be64:	ldr	r1, [r0]
   1be68:	ldr	r0, [r0, #4]
   1be6c:	ldr	r2, [fp, #-12]
   1be70:	asr	r3, r2, #31
   1be74:	umull	ip, lr, r1, r2
   1be78:	mla	r1, r1, r3, lr
   1be7c:	mla	r0, r0, r2, r1
   1be80:	str	ip, [fp, #-24]	; 0xffffffe8
   1be84:	str	r0, [fp, #-20]	; 0xffffffec
   1be88:	b	1bea8 <__assert_fail@plt+0xadf0>
   1be8c:	ldr	r0, [fp, #-8]
   1be90:	mvn	r1, #0
   1be94:	str	r1, [r0, #4]
   1be98:	str	r1, [r0]
   1be9c:	movw	r0, #1
   1bea0:	str	r0, [fp, #-4]
   1bea4:	b	1bec4 <__assert_fail@plt+0xae0c>
   1bea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1beac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1beb0:	ldr	r2, [fp, #-8]
   1beb4:	str	r1, [r2, #4]
   1beb8:	str	r0, [r2]
   1bebc:	movw	r0, #0
   1bec0:	str	r0, [fp, #-4]
   1bec4:	ldr	r0, [fp, #-4]
   1bec8:	mov	sp, fp
   1becc:	pop	{fp, pc}
   1bed0:	andhi	r0, r0, r1
   1bed4:	svcvc	0x00ffffff
   1bed8:	push	{fp, lr}
   1bedc:	mov	fp, sp
   1bee0:	sub	sp, sp, #16
   1bee4:	str	r0, [fp, #-4]
   1bee8:	str	r1, [sp, #8]
   1beec:	str	r2, [sp, #4]
   1bef0:	movw	r0, #0
   1bef4:	str	r0, [sp]
   1bef8:	ldr	r0, [sp, #4]
   1befc:	mvn	r1, #0
   1bf00:	add	r1, r0, r1
   1bf04:	str	r1, [sp, #4]
   1bf08:	cmp	r0, #0
   1bf0c:	beq	1bf2c <__assert_fail@plt+0xae74>
   1bf10:	ldr	r0, [fp, #-4]
   1bf14:	ldr	r1, [sp, #8]
   1bf18:	bl	1a3d0 <__assert_fail@plt+0x9318>
   1bf1c:	ldr	r1, [sp]
   1bf20:	orr	r0, r1, r0
   1bf24:	str	r0, [sp]
   1bf28:	b	1bef8 <__assert_fail@plt+0xae40>
   1bf2c:	ldr	r0, [sp]
   1bf30:	mov	sp, fp
   1bf34:	pop	{fp, pc}
   1bf38:	push	{fp, lr}
   1bf3c:	mov	fp, sp
   1bf40:	sub	sp, sp, #16
   1bf44:	str	r0, [sp, #8]
   1bf48:	str	r1, [sp, #4]
   1bf4c:	ldr	r0, [sp, #8]
   1bf50:	cmp	r0, #0
   1bf54:	beq	1bf64 <__assert_fail@plt+0xaeac>
   1bf58:	ldr	r0, [sp, #4]
   1bf5c:	cmp	r0, #0
   1bf60:	bne	1bf70 <__assert_fail@plt+0xaeb8>
   1bf64:	movw	r0, #1
   1bf68:	str	r0, [sp, #4]
   1bf6c:	str	r0, [sp, #8]
   1bf70:	ldr	r0, [sp, #4]
   1bf74:	cmp	r0, #0
   1bf78:	beq	1bfac <__assert_fail@plt+0xaef4>
   1bf7c:	ldr	r0, [pc, #76]	; 1bfd0 <__assert_fail@plt+0xaf18>
   1bf80:	ldr	r1, [sp, #4]
   1bf84:	udiv	r0, r0, r1
   1bf88:	ldr	r1, [sp, #8]
   1bf8c:	cmp	r0, r1
   1bf90:	bcs	1bfac <__assert_fail@plt+0xaef4>
   1bf94:	bl	10fec <__errno_location@plt>
   1bf98:	movw	lr, #12
   1bf9c:	str	lr, [r0]
   1bfa0:	movw	r0, #0
   1bfa4:	str	r0, [fp, #-4]
   1bfa8:	b	1bfc4 <__assert_fail@plt+0xaf0c>
   1bfac:	ldr	r0, [sp, #8]
   1bfb0:	ldr	r1, [sp, #4]
   1bfb4:	bl	10e48 <calloc@plt>
   1bfb8:	str	r0, [sp]
   1bfbc:	ldr	r0, [sp]
   1bfc0:	str	r0, [fp, #-4]
   1bfc4:	ldr	r0, [fp, #-4]
   1bfc8:	mov	sp, fp
   1bfcc:	pop	{fp, pc}
   1bfd0:	svcvc	0x00ffffff
   1bfd4:	push	{fp, lr}
   1bfd8:	mov	fp, sp
   1bfdc:	sub	sp, sp, #16
   1bfe0:	str	r0, [sp, #8]
   1bfe4:	ldr	r0, [sp, #8]
   1bfe8:	cmp	r0, #0
   1bfec:	bne	1bff8 <__assert_fail@plt+0xaf40>
   1bff0:	movw	r0, #1
   1bff4:	str	r0, [sp, #8]
   1bff8:	ldr	r0, [pc, #64]	; 1c040 <__assert_fail@plt+0xaf88>
   1bffc:	ldr	r1, [sp, #8]
   1c000:	cmp	r0, r1
   1c004:	bcs	1c020 <__assert_fail@plt+0xaf68>
   1c008:	bl	10fec <__errno_location@plt>
   1c00c:	movw	lr, #12
   1c010:	str	lr, [r0]
   1c014:	movw	r0, #0
   1c018:	str	r0, [fp, #-4]
   1c01c:	b	1c034 <__assert_fail@plt+0xaf7c>
   1c020:	ldr	r0, [sp, #8]
   1c024:	bl	10f68 <malloc@plt>
   1c028:	str	r0, [sp, #4]
   1c02c:	ldr	r0, [sp, #4]
   1c030:	str	r0, [fp, #-4]
   1c034:	ldr	r0, [fp, #-4]
   1c038:	mov	sp, fp
   1c03c:	pop	{fp, pc}
   1c040:	svcvc	0x00ffffff
   1c044:	push	{fp, lr}
   1c048:	mov	fp, sp
   1c04c:	sub	sp, sp, #16
   1c050:	str	r0, [sp, #8]
   1c054:	str	r1, [sp, #4]
   1c058:	ldr	r0, [sp, #8]
   1c05c:	movw	r1, #0
   1c060:	cmp	r0, r1
   1c064:	bne	1c078 <__assert_fail@plt+0xafc0>
   1c068:	ldr	r0, [sp, #4]
   1c06c:	bl	1bfd4 <__assert_fail@plt+0xaf1c>
   1c070:	str	r0, [fp, #-4]
   1c074:	b	1c0d8 <__assert_fail@plt+0xb020>
   1c078:	ldr	r0, [sp, #4]
   1c07c:	cmp	r0, #0
   1c080:	bne	1c098 <__assert_fail@plt+0xafe0>
   1c084:	ldr	r0, [sp, #8]
   1c088:	bl	1c270 <__assert_fail@plt+0xb1b8>
   1c08c:	movw	r0, #0
   1c090:	str	r0, [fp, #-4]
   1c094:	b	1c0d8 <__assert_fail@plt+0xb020>
   1c098:	ldr	r0, [pc, #68]	; 1c0e4 <__assert_fail@plt+0xb02c>
   1c09c:	ldr	r1, [sp, #4]
   1c0a0:	cmp	r0, r1
   1c0a4:	bcs	1c0c0 <__assert_fail@plt+0xb008>
   1c0a8:	bl	10fec <__errno_location@plt>
   1c0ac:	movw	lr, #12
   1c0b0:	str	lr, [r0]
   1c0b4:	movw	r0, #0
   1c0b8:	str	r0, [fp, #-4]
   1c0bc:	b	1c0d8 <__assert_fail@plt+0xb020>
   1c0c0:	ldr	r0, [sp, #8]
   1c0c4:	ldr	r1, [sp, #4]
   1c0c8:	bl	10efc <realloc@plt>
   1c0cc:	str	r0, [sp]
   1c0d0:	ldr	r0, [sp]
   1c0d4:	str	r0, [fp, #-4]
   1c0d8:	ldr	r0, [fp, #-4]
   1c0dc:	mov	sp, fp
   1c0e0:	pop	{fp, pc}
   1c0e4:	svcvc	0x00ffffff
   1c0e8:	push	{fp, lr}
   1c0ec:	mov	fp, sp
   1c0f0:	sub	sp, sp, #24
   1c0f4:	str	r0, [fp, #-8]
   1c0f8:	str	r1, [sp, #12]
   1c0fc:	ldr	r0, [fp, #-8]
   1c100:	str	r0, [sp, #8]
   1c104:	ldr	r0, [sp, #12]
   1c108:	str	r0, [sp, #4]
   1c10c:	ldr	r0, [sp, #8]
   1c110:	ldr	r1, [sp, #4]
   1c114:	cmp	r0, r1
   1c118:	bne	1c128 <__assert_fail@plt+0xb070>
   1c11c:	movw	r0, #0
   1c120:	str	r0, [fp, #-4]
   1c124:	b	1c194 <__assert_fail@plt+0xb0dc>
   1c128:	b	1c12c <__assert_fail@plt+0xb074>
   1c12c:	ldr	r0, [sp, #8]
   1c130:	ldrb	r0, [r0]
   1c134:	bl	1ded8 <__assert_fail@plt+0xce20>
   1c138:	strb	r0, [sp, #3]
   1c13c:	ldr	r0, [sp, #4]
   1c140:	ldrb	r0, [r0]
   1c144:	bl	1ded8 <__assert_fail@plt+0xce20>
   1c148:	strb	r0, [sp, #2]
   1c14c:	ldrb	r0, [sp, #3]
   1c150:	cmp	r0, #0
   1c154:	bne	1c15c <__assert_fail@plt+0xb0a4>
   1c158:	b	1c184 <__assert_fail@plt+0xb0cc>
   1c15c:	ldr	r0, [sp, #8]
   1c160:	add	r0, r0, #1
   1c164:	str	r0, [sp, #8]
   1c168:	ldr	r0, [sp, #4]
   1c16c:	add	r0, r0, #1
   1c170:	str	r0, [sp, #4]
   1c174:	ldrb	r0, [sp, #3]
   1c178:	ldrb	r1, [sp, #2]
   1c17c:	cmp	r0, r1
   1c180:	beq	1c12c <__assert_fail@plt+0xb074>
   1c184:	ldrb	r0, [sp, #3]
   1c188:	ldrb	r1, [sp, #2]
   1c18c:	sub	r0, r0, r1
   1c190:	str	r0, [fp, #-4]
   1c194:	ldr	r0, [fp, #-4]
   1c198:	mov	sp, fp
   1c19c:	pop	{fp, pc}
   1c1a0:	push	{fp, lr}
   1c1a4:	mov	fp, sp
   1c1a8:	sub	sp, sp, #16
   1c1ac:	str	r0, [sp, #8]
   1c1b0:	ldr	r0, [sp, #8]
   1c1b4:	bl	10f38 <__fpending@plt>
   1c1b8:	cmp	r0, #0
   1c1bc:	movw	r0, #0
   1c1c0:	movne	r0, #1
   1c1c4:	and	r0, r0, #1
   1c1c8:	strb	r0, [sp, #7]
   1c1cc:	ldr	r0, [sp, #8]
   1c1d0:	bl	10f44 <ferror_unlocked@plt>
   1c1d4:	cmp	r0, #0
   1c1d8:	movw	r0, #0
   1c1dc:	movne	r0, #1
   1c1e0:	and	r0, r0, #1
   1c1e4:	strb	r0, [sp, #6]
   1c1e8:	ldr	r0, [sp, #8]
   1c1ec:	bl	1392c <__assert_fail@plt+0x2874>
   1c1f0:	cmp	r0, #0
   1c1f4:	movw	r0, #0
   1c1f8:	movne	r0, #1
   1c1fc:	and	r0, r0, #1
   1c200:	strb	r0, [sp, #5]
   1c204:	ldrb	r0, [sp, #6]
   1c208:	tst	r0, #1
   1c20c:	bne	1c238 <__assert_fail@plt+0xb180>
   1c210:	ldrb	r0, [sp, #5]
   1c214:	tst	r0, #1
   1c218:	beq	1c25c <__assert_fail@plt+0xb1a4>
   1c21c:	ldrb	r0, [sp, #7]
   1c220:	tst	r0, #1
   1c224:	bne	1c238 <__assert_fail@plt+0xb180>
   1c228:	bl	10fec <__errno_location@plt>
   1c22c:	ldr	r0, [r0]
   1c230:	cmp	r0, #9
   1c234:	beq	1c25c <__assert_fail@plt+0xb1a4>
   1c238:	ldrb	r0, [sp, #5]
   1c23c:	tst	r0, #1
   1c240:	bne	1c250 <__assert_fail@plt+0xb198>
   1c244:	bl	10fec <__errno_location@plt>
   1c248:	movw	lr, #0
   1c24c:	str	lr, [r0]
   1c250:	mvn	r0, #0
   1c254:	str	r0, [fp, #-4]
   1c258:	b	1c264 <__assert_fail@plt+0xb1ac>
   1c25c:	movw	r0, #0
   1c260:	str	r0, [fp, #-4]
   1c264:	ldr	r0, [fp, #-4]
   1c268:	mov	sp, fp
   1c26c:	pop	{fp, pc}
   1c270:	push	{fp, lr}
   1c274:	mov	fp, sp
   1c278:	sub	sp, sp, #16
   1c27c:	str	r0, [fp, #-4]
   1c280:	bl	10fec <__errno_location@plt>
   1c284:	ldr	r0, [r0]
   1c288:	str	r0, [sp, #8]
   1c28c:	ldr	r0, [fp, #-4]
   1c290:	bl	10ea8 <free@plt>
   1c294:	ldr	r0, [sp, #8]
   1c298:	str	r0, [sp, #4]
   1c29c:	bl	10fec <__errno_location@plt>
   1c2a0:	ldr	lr, [sp, #4]
   1c2a4:	str	lr, [r0]
   1c2a8:	mov	sp, fp
   1c2ac:	pop	{fp, pc}
   1c2b0:	push	{fp, lr}
   1c2b4:	mov	fp, sp
   1c2b8:	bl	10fec <__errno_location@plt>
   1c2bc:	movw	lr, #12
   1c2c0:	str	lr, [r0]
   1c2c4:	movw	r0, #0
   1c2c8:	pop	{fp, pc}
   1c2cc:	push	{fp, lr}
   1c2d0:	mov	fp, sp
   1c2d4:	sub	sp, sp, #8
   1c2d8:	str	r0, [sp, #4]
   1c2dc:	ldr	r0, [sp, #4]
   1c2e0:	cmn	r0, #1
   1c2e4:	bhi	1c2f8 <__assert_fail@plt+0xb240>
   1c2e8:	ldr	r0, [sp, #4]
   1c2ec:	bl	1bfd4 <__assert_fail@plt+0xaf1c>
   1c2f0:	str	r0, [sp]
   1c2f4:	b	1c300 <__assert_fail@plt+0xb248>
   1c2f8:	bl	1c2b0 <__assert_fail@plt+0xb1f8>
   1c2fc:	str	r0, [sp]
   1c300:	ldr	r0, [sp]
   1c304:	mov	sp, fp
   1c308:	pop	{fp, pc}
   1c30c:	push	{fp, lr}
   1c310:	mov	fp, sp
   1c314:	sub	sp, sp, #16
   1c318:	str	r0, [fp, #-4]
   1c31c:	str	r1, [sp, #8]
   1c320:	ldr	r0, [sp, #8]
   1c324:	cmn	r0, #1
   1c328:	bhi	1c360 <__assert_fail@plt+0xb2a8>
   1c32c:	ldr	r0, [fp, #-4]
   1c330:	ldr	r1, [sp, #8]
   1c334:	ldr	r2, [sp, #8]
   1c338:	cmp	r2, #0
   1c33c:	movw	r2, #0
   1c340:	movne	r2, #1
   1c344:	mvn	r3, #0
   1c348:	eor	r2, r2, r3
   1c34c:	and	r2, r2, #1
   1c350:	orr	r1, r1, r2
   1c354:	bl	1c044 <__assert_fail@plt+0xaf8c>
   1c358:	str	r0, [sp, #4]
   1c35c:	b	1c368 <__assert_fail@plt+0xb2b0>
   1c360:	bl	1c2b0 <__assert_fail@plt+0xb1f8>
   1c364:	str	r0, [sp, #4]
   1c368:	ldr	r0, [sp, #4]
   1c36c:	mov	sp, fp
   1c370:	pop	{fp, pc}
   1c374:	push	{fp, lr}
   1c378:	mov	fp, sp
   1c37c:	sub	sp, sp, #16
   1c380:	str	r0, [sp, #8]
   1c384:	str	r1, [sp, #4]
   1c388:	ldr	r0, [sp, #8]
   1c38c:	mvn	r1, #0
   1c390:	cmp	r1, r0
   1c394:	bcs	1c3b8 <__assert_fail@plt+0xb300>
   1c398:	ldr	r0, [sp, #4]
   1c39c:	cmp	r0, #0
   1c3a0:	beq	1c3b0 <__assert_fail@plt+0xb2f8>
   1c3a4:	bl	1c2b0 <__assert_fail@plt+0xb1f8>
   1c3a8:	str	r0, [fp, #-4]
   1c3ac:	b	1c3f8 <__assert_fail@plt+0xb340>
   1c3b0:	movw	r0, #0
   1c3b4:	str	r0, [sp, #8]
   1c3b8:	ldr	r0, [sp, #4]
   1c3bc:	mvn	r1, #0
   1c3c0:	cmp	r1, r0
   1c3c4:	bcs	1c3e8 <__assert_fail@plt+0xb330>
   1c3c8:	ldr	r0, [sp, #8]
   1c3cc:	cmp	r0, #0
   1c3d0:	beq	1c3e0 <__assert_fail@plt+0xb328>
   1c3d4:	bl	1c2b0 <__assert_fail@plt+0xb1f8>
   1c3d8:	str	r0, [fp, #-4]
   1c3dc:	b	1c3f8 <__assert_fail@plt+0xb340>
   1c3e0:	movw	r0, #0
   1c3e4:	str	r0, [sp, #4]
   1c3e8:	ldr	r0, [sp, #8]
   1c3ec:	ldr	r1, [sp, #4]
   1c3f0:	bl	1bf38 <__assert_fail@plt+0xae80>
   1c3f4:	str	r0, [fp, #-4]
   1c3f8:	ldr	r0, [fp, #-4]
   1c3fc:	mov	sp, fp
   1c400:	pop	{fp, pc}
   1c404:	push	{fp, lr}
   1c408:	mov	fp, sp
   1c40c:	sub	sp, sp, #16
   1c410:	str	r0, [fp, #-4]
   1c414:	str	r1, [sp, #8]
   1c418:	str	r2, [sp, #4]
   1c41c:	ldr	r0, [sp, #8]
   1c420:	cmp	r0, #0
   1c424:	beq	1c434 <__assert_fail@plt+0xb37c>
   1c428:	ldr	r0, [sp, #4]
   1c42c:	cmp	r0, #0
   1c430:	bne	1c440 <__assert_fail@plt+0xb388>
   1c434:	movw	r0, #1
   1c438:	str	r0, [sp, #4]
   1c43c:	str	r0, [sp, #8]
   1c440:	ldr	r0, [sp, #8]
   1c444:	cmn	r0, #1
   1c448:	bhi	1c470 <__assert_fail@plt+0xb3b8>
   1c44c:	ldr	r0, [sp, #4]
   1c450:	cmn	r0, #1
   1c454:	bhi	1c470 <__assert_fail@plt+0xb3b8>
   1c458:	ldr	r0, [fp, #-4]
   1c45c:	ldr	r1, [sp, #8]
   1c460:	ldr	r2, [sp, #4]
   1c464:	bl	1c590 <__assert_fail@plt+0xb4d8>
   1c468:	str	r0, [sp]
   1c46c:	b	1c478 <__assert_fail@plt+0xb3c0>
   1c470:	bl	1c2b0 <__assert_fail@plt+0xb1f8>
   1c474:	str	r0, [sp]
   1c478:	ldr	r0, [sp]
   1c47c:	mov	sp, fp
   1c480:	pop	{fp, pc}
   1c484:	push	{fp, lr}
   1c488:	mov	fp, sp
   1c48c:	sub	sp, sp, #8
   1c490:	movw	r0, #14
   1c494:	bl	11058 <nl_langinfo@plt>
   1c498:	str	r0, [sp, #4]
   1c49c:	ldr	r0, [sp, #4]
   1c4a0:	movw	lr, #0
   1c4a4:	cmp	r0, lr
   1c4a8:	bne	1c4b8 <__assert_fail@plt+0xb400>
   1c4ac:	movw	r0, #59957	; 0xea35
   1c4b0:	movt	r0, #1
   1c4b4:	str	r0, [sp, #4]
   1c4b8:	ldr	r0, [sp, #4]
   1c4bc:	ldrb	r0, [r0]
   1c4c0:	cmp	r0, #0
   1c4c4:	bne	1c4d4 <__assert_fail@plt+0xb41c>
   1c4c8:	movw	r0, #61570	; 0xf082
   1c4cc:	movt	r0, #1
   1c4d0:	str	r0, [sp, #4]
   1c4d4:	ldr	r0, [sp, #4]
   1c4d8:	mov	sp, fp
   1c4dc:	pop	{fp, pc}
   1c4e0:	push	{fp, lr}
   1c4e4:	mov	fp, sp
   1c4e8:	sub	sp, sp, #32
   1c4ec:	str	r0, [fp, #-8]
   1c4f0:	str	r1, [fp, #-12]
   1c4f4:	str	r2, [sp, #16]
   1c4f8:	str	r3, [sp, #12]
   1c4fc:	ldr	r0, [fp, #-8]
   1c500:	movw	r1, #0
   1c504:	cmp	r0, r1
   1c508:	bne	1c514 <__assert_fail@plt+0xb45c>
   1c50c:	add	r0, sp, #4
   1c510:	str	r0, [fp, #-8]
   1c514:	ldr	r0, [fp, #-8]
   1c518:	ldr	r1, [fp, #-12]
   1c51c:	ldr	r2, [sp, #16]
   1c520:	ldr	r3, [sp, #12]
   1c524:	bl	10f50 <mbrtowc@plt>
   1c528:	str	r0, [sp, #8]
   1c52c:	ldr	r0, [sp, #8]
   1c530:	mvn	r1, #1
   1c534:	cmp	r1, r0
   1c538:	bhi	1c57c <__assert_fail@plt+0xb4c4>
   1c53c:	ldr	r0, [sp, #16]
   1c540:	cmp	r0, #0
   1c544:	beq	1c57c <__assert_fail@plt+0xb4c4>
   1c548:	movw	r0, #0
   1c54c:	bl	1df60 <__assert_fail@plt+0xcea8>
   1c550:	tst	r0, #1
   1c554:	bne	1c57c <__assert_fail@plt+0xb4c4>
   1c558:	ldr	r0, [fp, #-12]
   1c55c:	ldrb	r0, [r0]
   1c560:	strb	r0, [sp, #3]
   1c564:	ldrb	r0, [sp, #3]
   1c568:	ldr	r1, [fp, #-8]
   1c56c:	str	r0, [r1]
   1c570:	movw	r0, #1
   1c574:	str	r0, [fp, #-4]
   1c578:	b	1c584 <__assert_fail@plt+0xb4cc>
   1c57c:	ldr	r0, [sp, #8]
   1c580:	str	r0, [fp, #-4]
   1c584:	ldr	r0, [fp, #-4]
   1c588:	mov	sp, fp
   1c58c:	pop	{fp, pc}
   1c590:	push	{fp, lr}
   1c594:	mov	fp, sp
   1c598:	sub	sp, sp, #176	; 0xb0
   1c59c:	str	r0, [fp, #-8]
   1c5a0:	str	r1, [fp, #-12]
   1c5a4:	str	r2, [fp, #-16]
   1c5a8:	b	1c960 <__assert_fail@plt+0xb8a8>
   1c5ac:	b	1c780 <__assert_fail@plt+0xb6c8>
   1c5b0:	ldr	r0, [fp, #-16]
   1c5b4:	cmp	r0, #0
   1c5b8:	bcs	1c6bc <__assert_fail@plt+0xb604>
   1c5bc:	ldr	r0, [fp, #-12]
   1c5c0:	cmp	r0, #0
   1c5c4:	bcs	1c64c <__assert_fail@plt+0xb594>
   1c5c8:	b	1c5e8 <__assert_fail@plt+0xb530>
   1c5cc:	ldr	r0, [fp, #-12]
   1c5d0:	ldr	r1, [fp, #-16]
   1c5d4:	movw	r2, #127	; 0x7f
   1c5d8:	udiv	r1, r2, r1
   1c5dc:	cmp	r0, r1
   1c5e0:	bcc	1c750 <__assert_fail@plt+0xb698>
   1c5e4:	b	1c768 <__assert_fail@plt+0xb6b0>
   1c5e8:	b	1c5fc <__assert_fail@plt+0xb544>
   1c5ec:	ldr	r0, [fp, #-16]
   1c5f0:	cmp	r0, #1
   1c5f4:	bcc	1c60c <__assert_fail@plt+0xb554>
   1c5f8:	b	1c618 <__assert_fail@plt+0xb560>
   1c5fc:	ldr	r0, [fp, #-16]
   1c600:	movw	r1, #0
   1c604:	cmp	r1, r0
   1c608:	bcs	1c618 <__assert_fail@plt+0xb560>
   1c60c:	movw	r0, #0
   1c610:	str	r0, [fp, #-24]	; 0xffffffe8
   1c614:	b	1c630 <__assert_fail@plt+0xb578>
   1c618:	ldr	r0, [fp, #-16]
   1c61c:	movw	r1, #0
   1c620:	sub	r0, r1, r0
   1c624:	movw	r1, #127	; 0x7f
   1c628:	udiv	r0, r1, r0
   1c62c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c634:	ldr	r1, [fp, #-12]
   1c638:	mvn	r2, #0
   1c63c:	sub	r1, r2, r1
   1c640:	cmp	r0, r1
   1c644:	bls	1c750 <__assert_fail@plt+0xb698>
   1c648:	b	1c768 <__assert_fail@plt+0xb6b0>
   1c64c:	ldr	r0, [fp, #-16]
   1c650:	cmn	r0, #1
   1c654:	bne	1c6a0 <__assert_fail@plt+0xb5e8>
   1c658:	b	1c678 <__assert_fail@plt+0xb5c0>
   1c65c:	ldr	r0, [fp, #-12]
   1c660:	mvn	r1, #127	; 0x7f
   1c664:	add	r0, r0, r1
   1c668:	movw	r1, #0
   1c66c:	cmp	r1, r0
   1c670:	bcc	1c750 <__assert_fail@plt+0xb698>
   1c674:	b	1c768 <__assert_fail@plt+0xb6b0>
   1c678:	ldr	r0, [fp, #-12]
   1c67c:	movw	r1, #0
   1c680:	cmp	r1, r0
   1c684:	bcs	1c768 <__assert_fail@plt+0xb6b0>
   1c688:	ldr	r0, [fp, #-12]
   1c68c:	sub	r0, r0, #1
   1c690:	movw	r1, #127	; 0x7f
   1c694:	cmp	r1, r0
   1c698:	bcc	1c750 <__assert_fail@plt+0xb698>
   1c69c:	b	1c768 <__assert_fail@plt+0xb6b0>
   1c6a0:	ldr	r0, [fp, #-16]
   1c6a4:	mvn	r1, #127	; 0x7f
   1c6a8:	udiv	r0, r1, r0
   1c6ac:	ldr	r1, [fp, #-12]
   1c6b0:	cmp	r0, r1
   1c6b4:	bcc	1c750 <__assert_fail@plt+0xb698>
   1c6b8:	b	1c768 <__assert_fail@plt+0xb6b0>
   1c6bc:	ldr	r0, [fp, #-16]
   1c6c0:	cmp	r0, #0
   1c6c4:	bne	1c6cc <__assert_fail@plt+0xb614>
   1c6c8:	b	1c768 <__assert_fail@plt+0xb6b0>
   1c6cc:	ldr	r0, [fp, #-12]
   1c6d0:	cmp	r0, #0
   1c6d4:	bcs	1c738 <__assert_fail@plt+0xb680>
   1c6d8:	ldr	r0, [fp, #-12]
   1c6dc:	cmn	r0, #1
   1c6e0:	bne	1c71c <__assert_fail@plt+0xb664>
   1c6e4:	b	1c704 <__assert_fail@plt+0xb64c>
   1c6e8:	ldr	r0, [fp, #-16]
   1c6ec:	mvn	r1, #127	; 0x7f
   1c6f0:	add	r0, r0, r1
   1c6f4:	movw	r1, #0
   1c6f8:	cmp	r1, r0
   1c6fc:	bcc	1c750 <__assert_fail@plt+0xb698>
   1c700:	b	1c768 <__assert_fail@plt+0xb6b0>
   1c704:	ldr	r0, [fp, #-16]
   1c708:	sub	r0, r0, #1
   1c70c:	movw	r1, #127	; 0x7f
   1c710:	cmp	r1, r0
   1c714:	bcc	1c750 <__assert_fail@plt+0xb698>
   1c718:	b	1c768 <__assert_fail@plt+0xb6b0>
   1c71c:	ldr	r0, [fp, #-12]
   1c720:	mvn	r1, #127	; 0x7f
   1c724:	udiv	r0, r1, r0
   1c728:	ldr	r1, [fp, #-16]
   1c72c:	cmp	r0, r1
   1c730:	bcc	1c750 <__assert_fail@plt+0xb698>
   1c734:	b	1c768 <__assert_fail@plt+0xb6b0>
   1c738:	ldr	r0, [fp, #-16]
   1c73c:	movw	r1, #127	; 0x7f
   1c740:	udiv	r0, r1, r0
   1c744:	ldr	r1, [fp, #-12]
   1c748:	cmp	r0, r1
   1c74c:	bcs	1c768 <__assert_fail@plt+0xb6b0>
   1c750:	ldr	r0, [fp, #-12]
   1c754:	ldr	r1, [fp, #-16]
   1c758:	mul	r0, r0, r1
   1c75c:	sxtb	r0, r0
   1c760:	str	r0, [fp, #-20]	; 0xffffffec
   1c764:	b	1d8e0 <__assert_fail@plt+0xc828>
   1c768:	ldr	r0, [fp, #-12]
   1c76c:	ldr	r1, [fp, #-16]
   1c770:	mul	r0, r0, r1
   1c774:	sxtb	r0, r0
   1c778:	str	r0, [fp, #-20]	; 0xffffffec
   1c77c:	b	1d8f8 <__assert_fail@plt+0xc840>
   1c780:	ldr	r0, [fp, #-16]
   1c784:	cmp	r0, #0
   1c788:	bcs	1c894 <__assert_fail@plt+0xb7dc>
   1c78c:	ldr	r0, [fp, #-12]
   1c790:	cmp	r0, #0
   1c794:	bcs	1c81c <__assert_fail@plt+0xb764>
   1c798:	b	1c7b8 <__assert_fail@plt+0xb700>
   1c79c:	ldr	r0, [fp, #-12]
   1c7a0:	ldr	r1, [fp, #-16]
   1c7a4:	movw	r2, #255	; 0xff
   1c7a8:	udiv	r1, r2, r1
   1c7ac:	cmp	r0, r1
   1c7b0:	bcc	1c930 <__assert_fail@plt+0xb878>
   1c7b4:	b	1c948 <__assert_fail@plt+0xb890>
   1c7b8:	b	1c7cc <__assert_fail@plt+0xb714>
   1c7bc:	ldr	r0, [fp, #-16]
   1c7c0:	cmp	r0, #1
   1c7c4:	bcc	1c7dc <__assert_fail@plt+0xb724>
   1c7c8:	b	1c7e8 <__assert_fail@plt+0xb730>
   1c7cc:	ldr	r0, [fp, #-16]
   1c7d0:	movw	r1, #0
   1c7d4:	cmp	r1, r0
   1c7d8:	bcs	1c7e8 <__assert_fail@plt+0xb730>
   1c7dc:	movw	r0, #0
   1c7e0:	str	r0, [fp, #-28]	; 0xffffffe4
   1c7e4:	b	1c800 <__assert_fail@plt+0xb748>
   1c7e8:	ldr	r0, [fp, #-16]
   1c7ec:	movw	r1, #0
   1c7f0:	sub	r0, r1, r0
   1c7f4:	movw	r1, #255	; 0xff
   1c7f8:	udiv	r0, r1, r0
   1c7fc:	str	r0, [fp, #-28]	; 0xffffffe4
   1c800:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c804:	ldr	r1, [fp, #-12]
   1c808:	mvn	r2, #0
   1c80c:	sub	r1, r2, r1
   1c810:	cmp	r0, r1
   1c814:	bls	1c930 <__assert_fail@plt+0xb878>
   1c818:	b	1c948 <__assert_fail@plt+0xb890>
   1c81c:	b	1c824 <__assert_fail@plt+0xb76c>
   1c820:	b	1c828 <__assert_fail@plt+0xb770>
   1c824:	b	1c878 <__assert_fail@plt+0xb7c0>
   1c828:	ldr	r0, [fp, #-16]
   1c82c:	cmn	r0, #1
   1c830:	bne	1c878 <__assert_fail@plt+0xb7c0>
   1c834:	b	1c850 <__assert_fail@plt+0xb798>
   1c838:	ldr	r0, [fp, #-12]
   1c83c:	add	r0, r0, #0
   1c840:	movw	r1, #0
   1c844:	cmp	r1, r0
   1c848:	bcc	1c930 <__assert_fail@plt+0xb878>
   1c84c:	b	1c948 <__assert_fail@plt+0xb890>
   1c850:	ldr	r0, [fp, #-12]
   1c854:	movw	r1, #0
   1c858:	cmp	r1, r0
   1c85c:	bcs	1c948 <__assert_fail@plt+0xb890>
   1c860:	ldr	r0, [fp, #-12]
   1c864:	sub	r0, r0, #1
   1c868:	mvn	r1, #0
   1c86c:	cmp	r1, r0
   1c870:	bcc	1c930 <__assert_fail@plt+0xb878>
   1c874:	b	1c948 <__assert_fail@plt+0xb890>
   1c878:	ldr	r0, [fp, #-16]
   1c87c:	movw	r1, #0
   1c880:	udiv	r0, r1, r0
   1c884:	ldr	r1, [fp, #-12]
   1c888:	cmp	r0, r1
   1c88c:	bcc	1c930 <__assert_fail@plt+0xb878>
   1c890:	b	1c948 <__assert_fail@plt+0xb890>
   1c894:	ldr	r0, [fp, #-16]
   1c898:	cmp	r0, #0
   1c89c:	bne	1c8a4 <__assert_fail@plt+0xb7ec>
   1c8a0:	b	1c948 <__assert_fail@plt+0xb890>
   1c8a4:	ldr	r0, [fp, #-12]
   1c8a8:	cmp	r0, #0
   1c8ac:	bcs	1c918 <__assert_fail@plt+0xb860>
   1c8b0:	b	1c8b8 <__assert_fail@plt+0xb800>
   1c8b4:	b	1c8bc <__assert_fail@plt+0xb804>
   1c8b8:	b	1c8fc <__assert_fail@plt+0xb844>
   1c8bc:	ldr	r0, [fp, #-12]
   1c8c0:	cmn	r0, #1
   1c8c4:	bne	1c8fc <__assert_fail@plt+0xb844>
   1c8c8:	b	1c8e4 <__assert_fail@plt+0xb82c>
   1c8cc:	ldr	r0, [fp, #-16]
   1c8d0:	add	r0, r0, #0
   1c8d4:	movw	r1, #0
   1c8d8:	cmp	r1, r0
   1c8dc:	bcc	1c930 <__assert_fail@plt+0xb878>
   1c8e0:	b	1c948 <__assert_fail@plt+0xb890>
   1c8e4:	ldr	r0, [fp, #-16]
   1c8e8:	sub	r0, r0, #1
   1c8ec:	mvn	r1, #0
   1c8f0:	cmp	r1, r0
   1c8f4:	bcc	1c930 <__assert_fail@plt+0xb878>
   1c8f8:	b	1c948 <__assert_fail@plt+0xb890>
   1c8fc:	ldr	r0, [fp, #-12]
   1c900:	movw	r1, #0
   1c904:	udiv	r0, r1, r0
   1c908:	ldr	r1, [fp, #-16]
   1c90c:	cmp	r0, r1
   1c910:	bcc	1c930 <__assert_fail@plt+0xb878>
   1c914:	b	1c948 <__assert_fail@plt+0xb890>
   1c918:	ldr	r0, [fp, #-16]
   1c91c:	movw	r1, #255	; 0xff
   1c920:	udiv	r0, r1, r0
   1c924:	ldr	r1, [fp, #-12]
   1c928:	cmp	r0, r1
   1c92c:	bcs	1c948 <__assert_fail@plt+0xb890>
   1c930:	ldr	r0, [fp, #-12]
   1c934:	ldr	r1, [fp, #-16]
   1c938:	mul	r0, r0, r1
   1c93c:	and	r0, r0, #255	; 0xff
   1c940:	str	r0, [fp, #-20]	; 0xffffffec
   1c944:	b	1d8e0 <__assert_fail@plt+0xc828>
   1c948:	ldr	r0, [fp, #-12]
   1c94c:	ldr	r1, [fp, #-16]
   1c950:	mul	r0, r0, r1
   1c954:	and	r0, r0, #255	; 0xff
   1c958:	str	r0, [fp, #-20]	; 0xffffffec
   1c95c:	b	1d8f8 <__assert_fail@plt+0xc840>
   1c960:	b	1cd18 <__assert_fail@plt+0xbc60>
   1c964:	b	1cb38 <__assert_fail@plt+0xba80>
   1c968:	ldr	r0, [fp, #-16]
   1c96c:	cmp	r0, #0
   1c970:	bcs	1ca74 <__assert_fail@plt+0xb9bc>
   1c974:	ldr	r0, [fp, #-12]
   1c978:	cmp	r0, #0
   1c97c:	bcs	1ca04 <__assert_fail@plt+0xb94c>
   1c980:	b	1c9a0 <__assert_fail@plt+0xb8e8>
   1c984:	ldr	r0, [fp, #-12]
   1c988:	ldr	r1, [fp, #-16]
   1c98c:	movw	r2, #32767	; 0x7fff
   1c990:	udiv	r1, r2, r1
   1c994:	cmp	r0, r1
   1c998:	bcc	1cb08 <__assert_fail@plt+0xba50>
   1c99c:	b	1cb20 <__assert_fail@plt+0xba68>
   1c9a0:	b	1c9b4 <__assert_fail@plt+0xb8fc>
   1c9a4:	ldr	r0, [fp, #-16]
   1c9a8:	cmp	r0, #1
   1c9ac:	bcc	1c9c4 <__assert_fail@plt+0xb90c>
   1c9b0:	b	1c9d0 <__assert_fail@plt+0xb918>
   1c9b4:	ldr	r0, [fp, #-16]
   1c9b8:	movw	r1, #0
   1c9bc:	cmp	r1, r0
   1c9c0:	bcs	1c9d0 <__assert_fail@plt+0xb918>
   1c9c4:	movw	r0, #0
   1c9c8:	str	r0, [fp, #-32]	; 0xffffffe0
   1c9cc:	b	1c9e8 <__assert_fail@plt+0xb930>
   1c9d0:	ldr	r0, [fp, #-16]
   1c9d4:	movw	r1, #0
   1c9d8:	sub	r0, r1, r0
   1c9dc:	movw	r1, #32767	; 0x7fff
   1c9e0:	udiv	r0, r1, r0
   1c9e4:	str	r0, [fp, #-32]	; 0xffffffe0
   1c9e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c9ec:	ldr	r1, [fp, #-12]
   1c9f0:	mvn	r2, #0
   1c9f4:	sub	r1, r2, r1
   1c9f8:	cmp	r0, r1
   1c9fc:	bls	1cb08 <__assert_fail@plt+0xba50>
   1ca00:	b	1cb20 <__assert_fail@plt+0xba68>
   1ca04:	ldr	r0, [fp, #-16]
   1ca08:	cmn	r0, #1
   1ca0c:	bne	1ca58 <__assert_fail@plt+0xb9a0>
   1ca10:	b	1ca30 <__assert_fail@plt+0xb978>
   1ca14:	ldr	r0, [pc, #3840]	; 1d91c <__assert_fail@plt+0xc864>
   1ca18:	ldr	r1, [fp, #-12]
   1ca1c:	add	r0, r1, r0
   1ca20:	movw	r1, #0
   1ca24:	cmp	r1, r0
   1ca28:	bcc	1cb08 <__assert_fail@plt+0xba50>
   1ca2c:	b	1cb20 <__assert_fail@plt+0xba68>
   1ca30:	ldr	r0, [fp, #-12]
   1ca34:	movw	r1, #0
   1ca38:	cmp	r1, r0
   1ca3c:	bcs	1cb20 <__assert_fail@plt+0xba68>
   1ca40:	ldr	r0, [fp, #-12]
   1ca44:	sub	r0, r0, #1
   1ca48:	movw	r1, #32767	; 0x7fff
   1ca4c:	cmp	r1, r0
   1ca50:	bcc	1cb08 <__assert_fail@plt+0xba50>
   1ca54:	b	1cb20 <__assert_fail@plt+0xba68>
   1ca58:	ldr	r0, [pc, #3772]	; 1d91c <__assert_fail@plt+0xc864>
   1ca5c:	ldr	r1, [fp, #-16]
   1ca60:	udiv	r0, r0, r1
   1ca64:	ldr	r1, [fp, #-12]
   1ca68:	cmp	r0, r1
   1ca6c:	bcc	1cb08 <__assert_fail@plt+0xba50>
   1ca70:	b	1cb20 <__assert_fail@plt+0xba68>
   1ca74:	ldr	r0, [fp, #-16]
   1ca78:	cmp	r0, #0
   1ca7c:	bne	1ca84 <__assert_fail@plt+0xb9cc>
   1ca80:	b	1cb20 <__assert_fail@plt+0xba68>
   1ca84:	ldr	r0, [fp, #-12]
   1ca88:	cmp	r0, #0
   1ca8c:	bcs	1caf0 <__assert_fail@plt+0xba38>
   1ca90:	ldr	r0, [fp, #-12]
   1ca94:	cmn	r0, #1
   1ca98:	bne	1cad4 <__assert_fail@plt+0xba1c>
   1ca9c:	b	1cabc <__assert_fail@plt+0xba04>
   1caa0:	ldr	r0, [pc, #3700]	; 1d91c <__assert_fail@plt+0xc864>
   1caa4:	ldr	r1, [fp, #-16]
   1caa8:	add	r0, r1, r0
   1caac:	movw	r1, #0
   1cab0:	cmp	r1, r0
   1cab4:	bcc	1cb08 <__assert_fail@plt+0xba50>
   1cab8:	b	1cb20 <__assert_fail@plt+0xba68>
   1cabc:	ldr	r0, [fp, #-16]
   1cac0:	sub	r0, r0, #1
   1cac4:	movw	r1, #32767	; 0x7fff
   1cac8:	cmp	r1, r0
   1cacc:	bcc	1cb08 <__assert_fail@plt+0xba50>
   1cad0:	b	1cb20 <__assert_fail@plt+0xba68>
   1cad4:	ldr	r0, [pc, #3648]	; 1d91c <__assert_fail@plt+0xc864>
   1cad8:	ldr	r1, [fp, #-12]
   1cadc:	udiv	r0, r0, r1
   1cae0:	ldr	r1, [fp, #-16]
   1cae4:	cmp	r0, r1
   1cae8:	bcc	1cb08 <__assert_fail@plt+0xba50>
   1caec:	b	1cb20 <__assert_fail@plt+0xba68>
   1caf0:	ldr	r0, [fp, #-16]
   1caf4:	movw	r1, #32767	; 0x7fff
   1caf8:	udiv	r0, r1, r0
   1cafc:	ldr	r1, [fp, #-12]
   1cb00:	cmp	r0, r1
   1cb04:	bcs	1cb20 <__assert_fail@plt+0xba68>
   1cb08:	ldr	r0, [fp, #-12]
   1cb0c:	ldr	r1, [fp, #-16]
   1cb10:	mul	r0, r0, r1
   1cb14:	sxth	r0, r0
   1cb18:	str	r0, [fp, #-20]	; 0xffffffec
   1cb1c:	b	1d8e0 <__assert_fail@plt+0xc828>
   1cb20:	ldr	r0, [fp, #-12]
   1cb24:	ldr	r1, [fp, #-16]
   1cb28:	mul	r0, r0, r1
   1cb2c:	sxth	r0, r0
   1cb30:	str	r0, [fp, #-20]	; 0xffffffec
   1cb34:	b	1d8f8 <__assert_fail@plt+0xc840>
   1cb38:	ldr	r0, [fp, #-16]
   1cb3c:	cmp	r0, #0
   1cb40:	bcs	1cc4c <__assert_fail@plt+0xbb94>
   1cb44:	ldr	r0, [fp, #-12]
   1cb48:	cmp	r0, #0
   1cb4c:	bcs	1cbd4 <__assert_fail@plt+0xbb1c>
   1cb50:	b	1cb70 <__assert_fail@plt+0xbab8>
   1cb54:	ldr	r0, [fp, #-12]
   1cb58:	ldr	r1, [fp, #-16]
   1cb5c:	movw	r2, #65535	; 0xffff
   1cb60:	udiv	r1, r2, r1
   1cb64:	cmp	r0, r1
   1cb68:	bcc	1cce8 <__assert_fail@plt+0xbc30>
   1cb6c:	b	1cd00 <__assert_fail@plt+0xbc48>
   1cb70:	b	1cb84 <__assert_fail@plt+0xbacc>
   1cb74:	ldr	r0, [fp, #-16]
   1cb78:	cmp	r0, #1
   1cb7c:	bcc	1cb94 <__assert_fail@plt+0xbadc>
   1cb80:	b	1cba0 <__assert_fail@plt+0xbae8>
   1cb84:	ldr	r0, [fp, #-16]
   1cb88:	movw	r1, #0
   1cb8c:	cmp	r1, r0
   1cb90:	bcs	1cba0 <__assert_fail@plt+0xbae8>
   1cb94:	movw	r0, #0
   1cb98:	str	r0, [fp, #-36]	; 0xffffffdc
   1cb9c:	b	1cbb8 <__assert_fail@plt+0xbb00>
   1cba0:	ldr	r0, [fp, #-16]
   1cba4:	movw	r1, #0
   1cba8:	sub	r0, r1, r0
   1cbac:	movw	r1, #65535	; 0xffff
   1cbb0:	udiv	r0, r1, r0
   1cbb4:	str	r0, [fp, #-36]	; 0xffffffdc
   1cbb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cbbc:	ldr	r1, [fp, #-12]
   1cbc0:	mvn	r2, #0
   1cbc4:	sub	r1, r2, r1
   1cbc8:	cmp	r0, r1
   1cbcc:	bls	1cce8 <__assert_fail@plt+0xbc30>
   1cbd0:	b	1cd00 <__assert_fail@plt+0xbc48>
   1cbd4:	b	1cbdc <__assert_fail@plt+0xbb24>
   1cbd8:	b	1cbe0 <__assert_fail@plt+0xbb28>
   1cbdc:	b	1cc30 <__assert_fail@plt+0xbb78>
   1cbe0:	ldr	r0, [fp, #-16]
   1cbe4:	cmn	r0, #1
   1cbe8:	bne	1cc30 <__assert_fail@plt+0xbb78>
   1cbec:	b	1cc08 <__assert_fail@plt+0xbb50>
   1cbf0:	ldr	r0, [fp, #-12]
   1cbf4:	add	r0, r0, #0
   1cbf8:	movw	r1, #0
   1cbfc:	cmp	r1, r0
   1cc00:	bcc	1cce8 <__assert_fail@plt+0xbc30>
   1cc04:	b	1cd00 <__assert_fail@plt+0xbc48>
   1cc08:	ldr	r0, [fp, #-12]
   1cc0c:	movw	r1, #0
   1cc10:	cmp	r1, r0
   1cc14:	bcs	1cd00 <__assert_fail@plt+0xbc48>
   1cc18:	ldr	r0, [fp, #-12]
   1cc1c:	sub	r0, r0, #1
   1cc20:	mvn	r1, #0
   1cc24:	cmp	r1, r0
   1cc28:	bcc	1cce8 <__assert_fail@plt+0xbc30>
   1cc2c:	b	1cd00 <__assert_fail@plt+0xbc48>
   1cc30:	ldr	r0, [fp, #-16]
   1cc34:	movw	r1, #0
   1cc38:	udiv	r0, r1, r0
   1cc3c:	ldr	r1, [fp, #-12]
   1cc40:	cmp	r0, r1
   1cc44:	bcc	1cce8 <__assert_fail@plt+0xbc30>
   1cc48:	b	1cd00 <__assert_fail@plt+0xbc48>
   1cc4c:	ldr	r0, [fp, #-16]
   1cc50:	cmp	r0, #0
   1cc54:	bne	1cc5c <__assert_fail@plt+0xbba4>
   1cc58:	b	1cd00 <__assert_fail@plt+0xbc48>
   1cc5c:	ldr	r0, [fp, #-12]
   1cc60:	cmp	r0, #0
   1cc64:	bcs	1ccd0 <__assert_fail@plt+0xbc18>
   1cc68:	b	1cc70 <__assert_fail@plt+0xbbb8>
   1cc6c:	b	1cc74 <__assert_fail@plt+0xbbbc>
   1cc70:	b	1ccb4 <__assert_fail@plt+0xbbfc>
   1cc74:	ldr	r0, [fp, #-12]
   1cc78:	cmn	r0, #1
   1cc7c:	bne	1ccb4 <__assert_fail@plt+0xbbfc>
   1cc80:	b	1cc9c <__assert_fail@plt+0xbbe4>
   1cc84:	ldr	r0, [fp, #-16]
   1cc88:	add	r0, r0, #0
   1cc8c:	movw	r1, #0
   1cc90:	cmp	r1, r0
   1cc94:	bcc	1cce8 <__assert_fail@plt+0xbc30>
   1cc98:	b	1cd00 <__assert_fail@plt+0xbc48>
   1cc9c:	ldr	r0, [fp, #-16]
   1cca0:	sub	r0, r0, #1
   1cca4:	mvn	r1, #0
   1cca8:	cmp	r1, r0
   1ccac:	bcc	1cce8 <__assert_fail@plt+0xbc30>
   1ccb0:	b	1cd00 <__assert_fail@plt+0xbc48>
   1ccb4:	ldr	r0, [fp, #-12]
   1ccb8:	movw	r1, #0
   1ccbc:	udiv	r0, r1, r0
   1ccc0:	ldr	r1, [fp, #-16]
   1ccc4:	cmp	r0, r1
   1ccc8:	bcc	1cce8 <__assert_fail@plt+0xbc30>
   1cccc:	b	1cd00 <__assert_fail@plt+0xbc48>
   1ccd0:	ldr	r0, [fp, #-16]
   1ccd4:	movw	r1, #65535	; 0xffff
   1ccd8:	udiv	r0, r1, r0
   1ccdc:	ldr	r1, [fp, #-12]
   1cce0:	cmp	r0, r1
   1cce4:	bcs	1cd00 <__assert_fail@plt+0xbc48>
   1cce8:	ldr	r0, [fp, #-12]
   1ccec:	ldr	r1, [fp, #-16]
   1ccf0:	mul	r0, r0, r1
   1ccf4:	uxth	r0, r0
   1ccf8:	str	r0, [fp, #-20]	; 0xffffffec
   1ccfc:	b	1d8e0 <__assert_fail@plt+0xc828>
   1cd00:	ldr	r0, [fp, #-12]
   1cd04:	ldr	r1, [fp, #-16]
   1cd08:	mul	r0, r0, r1
   1cd0c:	uxth	r0, r0
   1cd10:	str	r0, [fp, #-20]	; 0xffffffec
   1cd14:	b	1d8f8 <__assert_fail@plt+0xc840>
   1cd18:	b	1cd1c <__assert_fail@plt+0xbc64>
   1cd1c:	b	1cee0 <__assert_fail@plt+0xbe28>
   1cd20:	ldr	r0, [fp, #-16]
   1cd24:	cmp	r0, #0
   1cd28:	bcs	1ce28 <__assert_fail@plt+0xbd70>
   1cd2c:	ldr	r0, [fp, #-12]
   1cd30:	cmp	r0, #0
   1cd34:	bcs	1cdbc <__assert_fail@plt+0xbd04>
   1cd38:	b	1cd58 <__assert_fail@plt+0xbca0>
   1cd3c:	ldr	r0, [pc, #3024]	; 1d914 <__assert_fail@plt+0xc85c>
   1cd40:	ldr	r1, [fp, #-12]
   1cd44:	ldr	r2, [fp, #-16]
   1cd48:	udiv	r0, r0, r2
   1cd4c:	cmp	r1, r0
   1cd50:	bcc	1ceb8 <__assert_fail@plt+0xbe00>
   1cd54:	b	1cecc <__assert_fail@plt+0xbe14>
   1cd58:	b	1cd6c <__assert_fail@plt+0xbcb4>
   1cd5c:	ldr	r0, [fp, #-16]
   1cd60:	cmp	r0, #1
   1cd64:	bcc	1cd7c <__assert_fail@plt+0xbcc4>
   1cd68:	b	1cd88 <__assert_fail@plt+0xbcd0>
   1cd6c:	ldr	r0, [fp, #-16]
   1cd70:	movw	r1, #0
   1cd74:	cmp	r1, r0
   1cd78:	bcs	1cd88 <__assert_fail@plt+0xbcd0>
   1cd7c:	movw	r0, #0
   1cd80:	str	r0, [fp, #-40]	; 0xffffffd8
   1cd84:	b	1cda0 <__assert_fail@plt+0xbce8>
   1cd88:	ldr	r0, [pc, #2948]	; 1d914 <__assert_fail@plt+0xc85c>
   1cd8c:	ldr	r1, [fp, #-16]
   1cd90:	movw	r2, #0
   1cd94:	sub	r1, r2, r1
   1cd98:	udiv	r0, r0, r1
   1cd9c:	str	r0, [fp, #-40]	; 0xffffffd8
   1cda0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cda4:	ldr	r1, [fp, #-12]
   1cda8:	mvn	r2, #0
   1cdac:	sub	r1, r2, r1
   1cdb0:	cmp	r0, r1
   1cdb4:	bls	1ceb8 <__assert_fail@plt+0xbe00>
   1cdb8:	b	1cecc <__assert_fail@plt+0xbe14>
   1cdbc:	ldr	r0, [fp, #-16]
   1cdc0:	cmn	r0, #1
   1cdc4:	bne	1ce0c <__assert_fail@plt+0xbd54>
   1cdc8:	b	1cde4 <__assert_fail@plt+0xbd2c>
   1cdcc:	ldr	r0, [fp, #-12]
   1cdd0:	add	r0, r0, #-2147483648	; 0x80000000
   1cdd4:	movw	r1, #0
   1cdd8:	cmp	r1, r0
   1cddc:	bcc	1ceb8 <__assert_fail@plt+0xbe00>
   1cde0:	b	1cecc <__assert_fail@plt+0xbe14>
   1cde4:	ldr	r0, [fp, #-12]
   1cde8:	movw	r1, #0
   1cdec:	cmp	r1, r0
   1cdf0:	bcs	1cecc <__assert_fail@plt+0xbe14>
   1cdf4:	ldr	r0, [pc, #2840]	; 1d914 <__assert_fail@plt+0xc85c>
   1cdf8:	ldr	r1, [fp, #-12]
   1cdfc:	sub	r1, r1, #1
   1ce00:	cmp	r0, r1
   1ce04:	bcc	1ceb8 <__assert_fail@plt+0xbe00>
   1ce08:	b	1cecc <__assert_fail@plt+0xbe14>
   1ce0c:	ldr	r0, [pc, #2820]	; 1d918 <__assert_fail@plt+0xc860>
   1ce10:	ldr	r1, [fp, #-16]
   1ce14:	udiv	r0, r0, r1
   1ce18:	ldr	r1, [fp, #-12]
   1ce1c:	cmp	r0, r1
   1ce20:	bcc	1ceb8 <__assert_fail@plt+0xbe00>
   1ce24:	b	1cecc <__assert_fail@plt+0xbe14>
   1ce28:	ldr	r0, [fp, #-16]
   1ce2c:	cmp	r0, #0
   1ce30:	bne	1ce38 <__assert_fail@plt+0xbd80>
   1ce34:	b	1cecc <__assert_fail@plt+0xbe14>
   1ce38:	ldr	r0, [fp, #-12]
   1ce3c:	cmp	r0, #0
   1ce40:	bcs	1cea0 <__assert_fail@plt+0xbde8>
   1ce44:	ldr	r0, [fp, #-12]
   1ce48:	cmn	r0, #1
   1ce4c:	bne	1ce84 <__assert_fail@plt+0xbdcc>
   1ce50:	b	1ce6c <__assert_fail@plt+0xbdb4>
   1ce54:	ldr	r0, [fp, #-16]
   1ce58:	add	r0, r0, #-2147483648	; 0x80000000
   1ce5c:	movw	r1, #0
   1ce60:	cmp	r1, r0
   1ce64:	bcc	1ceb8 <__assert_fail@plt+0xbe00>
   1ce68:	b	1cecc <__assert_fail@plt+0xbe14>
   1ce6c:	ldr	r0, [pc, #2720]	; 1d914 <__assert_fail@plt+0xc85c>
   1ce70:	ldr	r1, [fp, #-16]
   1ce74:	sub	r1, r1, #1
   1ce78:	cmp	r0, r1
   1ce7c:	bcc	1ceb8 <__assert_fail@plt+0xbe00>
   1ce80:	b	1cecc <__assert_fail@plt+0xbe14>
   1ce84:	ldr	r0, [pc, #2700]	; 1d918 <__assert_fail@plt+0xc860>
   1ce88:	ldr	r1, [fp, #-12]
   1ce8c:	udiv	r0, r0, r1
   1ce90:	ldr	r1, [fp, #-16]
   1ce94:	cmp	r0, r1
   1ce98:	bcc	1ceb8 <__assert_fail@plt+0xbe00>
   1ce9c:	b	1cecc <__assert_fail@plt+0xbe14>
   1cea0:	ldr	r0, [pc, #2668]	; 1d914 <__assert_fail@plt+0xc85c>
   1cea4:	ldr	r1, [fp, #-16]
   1cea8:	udiv	r0, r0, r1
   1ceac:	ldr	r1, [fp, #-12]
   1ceb0:	cmp	r0, r1
   1ceb4:	bcs	1cecc <__assert_fail@plt+0xbe14>
   1ceb8:	ldr	r0, [fp, #-12]
   1cebc:	ldr	r1, [fp, #-16]
   1cec0:	mul	r0, r0, r1
   1cec4:	str	r0, [fp, #-20]	; 0xffffffec
   1cec8:	b	1d8e0 <__assert_fail@plt+0xc828>
   1cecc:	ldr	r0, [fp, #-12]
   1ced0:	ldr	r1, [fp, #-16]
   1ced4:	mul	r0, r0, r1
   1ced8:	str	r0, [fp, #-20]	; 0xffffffec
   1cedc:	b	1d8f8 <__assert_fail@plt+0xc840>
   1cee0:	ldr	r0, [fp, #-16]
   1cee4:	cmp	r0, #0
   1cee8:	bcs	1cff4 <__assert_fail@plt+0xbf3c>
   1ceec:	ldr	r0, [fp, #-12]
   1cef0:	cmp	r0, #0
   1cef4:	bcs	1cf7c <__assert_fail@plt+0xbec4>
   1cef8:	b	1cf18 <__assert_fail@plt+0xbe60>
   1cefc:	ldr	r0, [fp, #-12]
   1cf00:	ldr	r1, [fp, #-16]
   1cf04:	mvn	r2, #0
   1cf08:	udiv	r1, r2, r1
   1cf0c:	cmp	r0, r1
   1cf10:	bcc	1d090 <__assert_fail@plt+0xbfd8>
   1cf14:	b	1d0a4 <__assert_fail@plt+0xbfec>
   1cf18:	b	1cf2c <__assert_fail@plt+0xbe74>
   1cf1c:	ldr	r0, [fp, #-16]
   1cf20:	cmp	r0, #1
   1cf24:	bcc	1cf3c <__assert_fail@plt+0xbe84>
   1cf28:	b	1cf48 <__assert_fail@plt+0xbe90>
   1cf2c:	ldr	r0, [fp, #-16]
   1cf30:	movw	r1, #0
   1cf34:	cmp	r1, r0
   1cf38:	bcs	1cf48 <__assert_fail@plt+0xbe90>
   1cf3c:	movw	r0, #1
   1cf40:	str	r0, [fp, #-44]	; 0xffffffd4
   1cf44:	b	1cf60 <__assert_fail@plt+0xbea8>
   1cf48:	ldr	r0, [fp, #-16]
   1cf4c:	movw	r1, #0
   1cf50:	sub	r0, r1, r0
   1cf54:	mvn	r1, #0
   1cf58:	udiv	r0, r1, r0
   1cf5c:	str	r0, [fp, #-44]	; 0xffffffd4
   1cf60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cf64:	ldr	r1, [fp, #-12]
   1cf68:	mvn	r2, #0
   1cf6c:	sub	r1, r2, r1
   1cf70:	cmp	r0, r1
   1cf74:	bls	1d090 <__assert_fail@plt+0xbfd8>
   1cf78:	b	1d0a4 <__assert_fail@plt+0xbfec>
   1cf7c:	b	1cf84 <__assert_fail@plt+0xbecc>
   1cf80:	b	1cf88 <__assert_fail@plt+0xbed0>
   1cf84:	b	1cfd8 <__assert_fail@plt+0xbf20>
   1cf88:	ldr	r0, [fp, #-16]
   1cf8c:	cmn	r0, #1
   1cf90:	bne	1cfd8 <__assert_fail@plt+0xbf20>
   1cf94:	b	1cfb0 <__assert_fail@plt+0xbef8>
   1cf98:	ldr	r0, [fp, #-12]
   1cf9c:	add	r0, r0, #0
   1cfa0:	movw	r1, #0
   1cfa4:	cmp	r1, r0
   1cfa8:	bcc	1d090 <__assert_fail@plt+0xbfd8>
   1cfac:	b	1d0a4 <__assert_fail@plt+0xbfec>
   1cfb0:	ldr	r0, [fp, #-12]
   1cfb4:	movw	r1, #0
   1cfb8:	cmp	r1, r0
   1cfbc:	bcs	1d0a4 <__assert_fail@plt+0xbfec>
   1cfc0:	ldr	r0, [fp, #-12]
   1cfc4:	sub	r0, r0, #1
   1cfc8:	mvn	r1, #0
   1cfcc:	cmp	r1, r0
   1cfd0:	bcc	1d090 <__assert_fail@plt+0xbfd8>
   1cfd4:	b	1d0a4 <__assert_fail@plt+0xbfec>
   1cfd8:	ldr	r0, [fp, #-16]
   1cfdc:	movw	r1, #0
   1cfe0:	udiv	r0, r1, r0
   1cfe4:	ldr	r1, [fp, #-12]
   1cfe8:	cmp	r0, r1
   1cfec:	bcc	1d090 <__assert_fail@plt+0xbfd8>
   1cff0:	b	1d0a4 <__assert_fail@plt+0xbfec>
   1cff4:	ldr	r0, [fp, #-16]
   1cff8:	cmp	r0, #0
   1cffc:	bne	1d004 <__assert_fail@plt+0xbf4c>
   1d000:	b	1d0a4 <__assert_fail@plt+0xbfec>
   1d004:	ldr	r0, [fp, #-12]
   1d008:	cmp	r0, #0
   1d00c:	bcs	1d078 <__assert_fail@plt+0xbfc0>
   1d010:	b	1d018 <__assert_fail@plt+0xbf60>
   1d014:	b	1d01c <__assert_fail@plt+0xbf64>
   1d018:	b	1d05c <__assert_fail@plt+0xbfa4>
   1d01c:	ldr	r0, [fp, #-12]
   1d020:	cmn	r0, #1
   1d024:	bne	1d05c <__assert_fail@plt+0xbfa4>
   1d028:	b	1d044 <__assert_fail@plt+0xbf8c>
   1d02c:	ldr	r0, [fp, #-16]
   1d030:	add	r0, r0, #0
   1d034:	movw	r1, #0
   1d038:	cmp	r1, r0
   1d03c:	bcc	1d090 <__assert_fail@plt+0xbfd8>
   1d040:	b	1d0a4 <__assert_fail@plt+0xbfec>
   1d044:	ldr	r0, [fp, #-16]
   1d048:	sub	r0, r0, #1
   1d04c:	mvn	r1, #0
   1d050:	cmp	r1, r0
   1d054:	bcc	1d090 <__assert_fail@plt+0xbfd8>
   1d058:	b	1d0a4 <__assert_fail@plt+0xbfec>
   1d05c:	ldr	r0, [fp, #-12]
   1d060:	movw	r1, #0
   1d064:	udiv	r0, r1, r0
   1d068:	ldr	r1, [fp, #-16]
   1d06c:	cmp	r0, r1
   1d070:	bcc	1d090 <__assert_fail@plt+0xbfd8>
   1d074:	b	1d0a4 <__assert_fail@plt+0xbfec>
   1d078:	ldr	r0, [fp, #-16]
   1d07c:	mvn	r1, #0
   1d080:	udiv	r0, r1, r0
   1d084:	ldr	r1, [fp, #-12]
   1d088:	cmp	r0, r1
   1d08c:	bcs	1d0a4 <__assert_fail@plt+0xbfec>
   1d090:	ldr	r0, [fp, #-12]
   1d094:	ldr	r1, [fp, #-16]
   1d098:	mul	r0, r0, r1
   1d09c:	str	r0, [fp, #-20]	; 0xffffffec
   1d0a0:	b	1d8e0 <__assert_fail@plt+0xc828>
   1d0a4:	ldr	r0, [fp, #-12]
   1d0a8:	ldr	r1, [fp, #-16]
   1d0ac:	mul	r0, r0, r1
   1d0b0:	str	r0, [fp, #-20]	; 0xffffffec
   1d0b4:	b	1d8f8 <__assert_fail@plt+0xc840>
   1d0b8:	b	1d0bc <__assert_fail@plt+0xc004>
   1d0bc:	b	1d280 <__assert_fail@plt+0xc1c8>
   1d0c0:	ldr	r0, [fp, #-16]
   1d0c4:	cmp	r0, #0
   1d0c8:	bcs	1d1c8 <__assert_fail@plt+0xc110>
   1d0cc:	ldr	r0, [fp, #-12]
   1d0d0:	cmp	r0, #0
   1d0d4:	bcs	1d15c <__assert_fail@plt+0xc0a4>
   1d0d8:	b	1d0f8 <__assert_fail@plt+0xc040>
   1d0dc:	ldr	r0, [pc, #2096]	; 1d914 <__assert_fail@plt+0xc85c>
   1d0e0:	ldr	r1, [fp, #-12]
   1d0e4:	ldr	r2, [fp, #-16]
   1d0e8:	udiv	r0, r0, r2
   1d0ec:	cmp	r1, r0
   1d0f0:	bcc	1d258 <__assert_fail@plt+0xc1a0>
   1d0f4:	b	1d26c <__assert_fail@plt+0xc1b4>
   1d0f8:	b	1d10c <__assert_fail@plt+0xc054>
   1d0fc:	ldr	r0, [fp, #-16]
   1d100:	cmp	r0, #1
   1d104:	bcc	1d11c <__assert_fail@plt+0xc064>
   1d108:	b	1d128 <__assert_fail@plt+0xc070>
   1d10c:	ldr	r0, [fp, #-16]
   1d110:	movw	r1, #0
   1d114:	cmp	r1, r0
   1d118:	bcs	1d128 <__assert_fail@plt+0xc070>
   1d11c:	movw	r0, #0
   1d120:	str	r0, [fp, #-48]	; 0xffffffd0
   1d124:	b	1d140 <__assert_fail@plt+0xc088>
   1d128:	ldr	r0, [pc, #2020]	; 1d914 <__assert_fail@plt+0xc85c>
   1d12c:	ldr	r1, [fp, #-16]
   1d130:	movw	r2, #0
   1d134:	sub	r1, r2, r1
   1d138:	udiv	r0, r0, r1
   1d13c:	str	r0, [fp, #-48]	; 0xffffffd0
   1d140:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d144:	ldr	r1, [fp, #-12]
   1d148:	mvn	r2, #0
   1d14c:	sub	r1, r2, r1
   1d150:	cmp	r0, r1
   1d154:	bls	1d258 <__assert_fail@plt+0xc1a0>
   1d158:	b	1d26c <__assert_fail@plt+0xc1b4>
   1d15c:	ldr	r0, [fp, #-16]
   1d160:	cmn	r0, #1
   1d164:	bne	1d1ac <__assert_fail@plt+0xc0f4>
   1d168:	b	1d184 <__assert_fail@plt+0xc0cc>
   1d16c:	ldr	r0, [fp, #-12]
   1d170:	add	r0, r0, #-2147483648	; 0x80000000
   1d174:	movw	r1, #0
   1d178:	cmp	r1, r0
   1d17c:	bcc	1d258 <__assert_fail@plt+0xc1a0>
   1d180:	b	1d26c <__assert_fail@plt+0xc1b4>
   1d184:	ldr	r0, [fp, #-12]
   1d188:	movw	r1, #0
   1d18c:	cmp	r1, r0
   1d190:	bcs	1d26c <__assert_fail@plt+0xc1b4>
   1d194:	ldr	r0, [pc, #1912]	; 1d914 <__assert_fail@plt+0xc85c>
   1d198:	ldr	r1, [fp, #-12]
   1d19c:	sub	r1, r1, #1
   1d1a0:	cmp	r0, r1
   1d1a4:	bcc	1d258 <__assert_fail@plt+0xc1a0>
   1d1a8:	b	1d26c <__assert_fail@plt+0xc1b4>
   1d1ac:	ldr	r0, [pc, #1892]	; 1d918 <__assert_fail@plt+0xc860>
   1d1b0:	ldr	r1, [fp, #-16]
   1d1b4:	udiv	r0, r0, r1
   1d1b8:	ldr	r1, [fp, #-12]
   1d1bc:	cmp	r0, r1
   1d1c0:	bcc	1d258 <__assert_fail@plt+0xc1a0>
   1d1c4:	b	1d26c <__assert_fail@plt+0xc1b4>
   1d1c8:	ldr	r0, [fp, #-16]
   1d1cc:	cmp	r0, #0
   1d1d0:	bne	1d1d8 <__assert_fail@plt+0xc120>
   1d1d4:	b	1d26c <__assert_fail@plt+0xc1b4>
   1d1d8:	ldr	r0, [fp, #-12]
   1d1dc:	cmp	r0, #0
   1d1e0:	bcs	1d240 <__assert_fail@plt+0xc188>
   1d1e4:	ldr	r0, [fp, #-12]
   1d1e8:	cmn	r0, #1
   1d1ec:	bne	1d224 <__assert_fail@plt+0xc16c>
   1d1f0:	b	1d20c <__assert_fail@plt+0xc154>
   1d1f4:	ldr	r0, [fp, #-16]
   1d1f8:	add	r0, r0, #-2147483648	; 0x80000000
   1d1fc:	movw	r1, #0
   1d200:	cmp	r1, r0
   1d204:	bcc	1d258 <__assert_fail@plt+0xc1a0>
   1d208:	b	1d26c <__assert_fail@plt+0xc1b4>
   1d20c:	ldr	r0, [pc, #1792]	; 1d914 <__assert_fail@plt+0xc85c>
   1d210:	ldr	r1, [fp, #-16]
   1d214:	sub	r1, r1, #1
   1d218:	cmp	r0, r1
   1d21c:	bcc	1d258 <__assert_fail@plt+0xc1a0>
   1d220:	b	1d26c <__assert_fail@plt+0xc1b4>
   1d224:	ldr	r0, [pc, #1772]	; 1d918 <__assert_fail@plt+0xc860>
   1d228:	ldr	r1, [fp, #-12]
   1d22c:	udiv	r0, r0, r1
   1d230:	ldr	r1, [fp, #-16]
   1d234:	cmp	r0, r1
   1d238:	bcc	1d258 <__assert_fail@plt+0xc1a0>
   1d23c:	b	1d26c <__assert_fail@plt+0xc1b4>
   1d240:	ldr	r0, [pc, #1740]	; 1d914 <__assert_fail@plt+0xc85c>
   1d244:	ldr	r1, [fp, #-16]
   1d248:	udiv	r0, r0, r1
   1d24c:	ldr	r1, [fp, #-12]
   1d250:	cmp	r0, r1
   1d254:	bcs	1d26c <__assert_fail@plt+0xc1b4>
   1d258:	ldr	r0, [fp, #-12]
   1d25c:	ldr	r1, [fp, #-16]
   1d260:	mul	r0, r0, r1
   1d264:	str	r0, [fp, #-20]	; 0xffffffec
   1d268:	b	1d8e0 <__assert_fail@plt+0xc828>
   1d26c:	ldr	r0, [fp, #-12]
   1d270:	ldr	r1, [fp, #-16]
   1d274:	mul	r0, r0, r1
   1d278:	str	r0, [fp, #-20]	; 0xffffffec
   1d27c:	b	1d8f8 <__assert_fail@plt+0xc840>
   1d280:	ldr	r0, [fp, #-16]
   1d284:	cmp	r0, #0
   1d288:	bcs	1d394 <__assert_fail@plt+0xc2dc>
   1d28c:	ldr	r0, [fp, #-12]
   1d290:	cmp	r0, #0
   1d294:	bcs	1d31c <__assert_fail@plt+0xc264>
   1d298:	b	1d2b8 <__assert_fail@plt+0xc200>
   1d29c:	ldr	r0, [fp, #-12]
   1d2a0:	ldr	r1, [fp, #-16]
   1d2a4:	mvn	r2, #0
   1d2a8:	udiv	r1, r2, r1
   1d2ac:	cmp	r0, r1
   1d2b0:	bcc	1d430 <__assert_fail@plt+0xc378>
   1d2b4:	b	1d444 <__assert_fail@plt+0xc38c>
   1d2b8:	b	1d2cc <__assert_fail@plt+0xc214>
   1d2bc:	ldr	r0, [fp, #-16]
   1d2c0:	cmp	r0, #1
   1d2c4:	bcc	1d2dc <__assert_fail@plt+0xc224>
   1d2c8:	b	1d2e8 <__assert_fail@plt+0xc230>
   1d2cc:	ldr	r0, [fp, #-16]
   1d2d0:	movw	r1, #0
   1d2d4:	cmp	r1, r0
   1d2d8:	bcs	1d2e8 <__assert_fail@plt+0xc230>
   1d2dc:	movw	r0, #1
   1d2e0:	str	r0, [fp, #-52]	; 0xffffffcc
   1d2e4:	b	1d300 <__assert_fail@plt+0xc248>
   1d2e8:	ldr	r0, [fp, #-16]
   1d2ec:	movw	r1, #0
   1d2f0:	sub	r0, r1, r0
   1d2f4:	mvn	r1, #0
   1d2f8:	udiv	r0, r1, r0
   1d2fc:	str	r0, [fp, #-52]	; 0xffffffcc
   1d300:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d304:	ldr	r1, [fp, #-12]
   1d308:	mvn	r2, #0
   1d30c:	sub	r1, r2, r1
   1d310:	cmp	r0, r1
   1d314:	bls	1d430 <__assert_fail@plt+0xc378>
   1d318:	b	1d444 <__assert_fail@plt+0xc38c>
   1d31c:	b	1d324 <__assert_fail@plt+0xc26c>
   1d320:	b	1d328 <__assert_fail@plt+0xc270>
   1d324:	b	1d378 <__assert_fail@plt+0xc2c0>
   1d328:	ldr	r0, [fp, #-16]
   1d32c:	cmn	r0, #1
   1d330:	bne	1d378 <__assert_fail@plt+0xc2c0>
   1d334:	b	1d350 <__assert_fail@plt+0xc298>
   1d338:	ldr	r0, [fp, #-12]
   1d33c:	add	r0, r0, #0
   1d340:	movw	r1, #0
   1d344:	cmp	r1, r0
   1d348:	bcc	1d430 <__assert_fail@plt+0xc378>
   1d34c:	b	1d444 <__assert_fail@plt+0xc38c>
   1d350:	ldr	r0, [fp, #-12]
   1d354:	movw	r1, #0
   1d358:	cmp	r1, r0
   1d35c:	bcs	1d444 <__assert_fail@plt+0xc38c>
   1d360:	ldr	r0, [fp, #-12]
   1d364:	sub	r0, r0, #1
   1d368:	mvn	r1, #0
   1d36c:	cmp	r1, r0
   1d370:	bcc	1d430 <__assert_fail@plt+0xc378>
   1d374:	b	1d444 <__assert_fail@plt+0xc38c>
   1d378:	ldr	r0, [fp, #-16]
   1d37c:	movw	r1, #0
   1d380:	udiv	r0, r1, r0
   1d384:	ldr	r1, [fp, #-12]
   1d388:	cmp	r0, r1
   1d38c:	bcc	1d430 <__assert_fail@plt+0xc378>
   1d390:	b	1d444 <__assert_fail@plt+0xc38c>
   1d394:	ldr	r0, [fp, #-16]
   1d398:	cmp	r0, #0
   1d39c:	bne	1d3a4 <__assert_fail@plt+0xc2ec>
   1d3a0:	b	1d444 <__assert_fail@plt+0xc38c>
   1d3a4:	ldr	r0, [fp, #-12]
   1d3a8:	cmp	r0, #0
   1d3ac:	bcs	1d418 <__assert_fail@plt+0xc360>
   1d3b0:	b	1d3b8 <__assert_fail@plt+0xc300>
   1d3b4:	b	1d3bc <__assert_fail@plt+0xc304>
   1d3b8:	b	1d3fc <__assert_fail@plt+0xc344>
   1d3bc:	ldr	r0, [fp, #-12]
   1d3c0:	cmn	r0, #1
   1d3c4:	bne	1d3fc <__assert_fail@plt+0xc344>
   1d3c8:	b	1d3e4 <__assert_fail@plt+0xc32c>
   1d3cc:	ldr	r0, [fp, #-16]
   1d3d0:	add	r0, r0, #0
   1d3d4:	movw	r1, #0
   1d3d8:	cmp	r1, r0
   1d3dc:	bcc	1d430 <__assert_fail@plt+0xc378>
   1d3e0:	b	1d444 <__assert_fail@plt+0xc38c>
   1d3e4:	ldr	r0, [fp, #-16]
   1d3e8:	sub	r0, r0, #1
   1d3ec:	mvn	r1, #0
   1d3f0:	cmp	r1, r0
   1d3f4:	bcc	1d430 <__assert_fail@plt+0xc378>
   1d3f8:	b	1d444 <__assert_fail@plt+0xc38c>
   1d3fc:	ldr	r0, [fp, #-12]
   1d400:	movw	r1, #0
   1d404:	udiv	r0, r1, r0
   1d408:	ldr	r1, [fp, #-16]
   1d40c:	cmp	r0, r1
   1d410:	bcc	1d430 <__assert_fail@plt+0xc378>
   1d414:	b	1d444 <__assert_fail@plt+0xc38c>
   1d418:	ldr	r0, [fp, #-16]
   1d41c:	mvn	r1, #0
   1d420:	udiv	r0, r1, r0
   1d424:	ldr	r1, [fp, #-12]
   1d428:	cmp	r0, r1
   1d42c:	bcs	1d444 <__assert_fail@plt+0xc38c>
   1d430:	ldr	r0, [fp, #-12]
   1d434:	ldr	r1, [fp, #-16]
   1d438:	mul	r0, r0, r1
   1d43c:	str	r0, [fp, #-20]	; 0xffffffec
   1d440:	b	1d8e0 <__assert_fail@plt+0xc828>
   1d444:	ldr	r0, [fp, #-12]
   1d448:	ldr	r1, [fp, #-16]
   1d44c:	mul	r0, r0, r1
   1d450:	str	r0, [fp, #-20]	; 0xffffffec
   1d454:	b	1d8f8 <__assert_fail@plt+0xc840>
   1d458:	b	1d6ac <__assert_fail@plt+0xc5f4>
   1d45c:	ldr	r0, [fp, #-16]
   1d460:	cmp	r0, #0
   1d464:	bcs	1d5c4 <__assert_fail@plt+0xc50c>
   1d468:	ldr	r0, [fp, #-12]
   1d46c:	cmp	r0, #0
   1d470:	bcs	1d540 <__assert_fail@plt+0xc488>
   1d474:	b	1d478 <__assert_fail@plt+0xc3c0>
   1d478:	ldr	r0, [fp, #-12]
   1d47c:	ldr	r2, [fp, #-16]
   1d480:	mvn	r1, #0
   1d484:	mvn	r3, #-2147483648	; 0x80000000
   1d488:	mov	ip, #0
   1d48c:	str	r0, [fp, #-56]	; 0xffffffc8
   1d490:	mov	r0, r1
   1d494:	mov	r1, r3
   1d498:	mov	r3, ip
   1d49c:	bl	1e22c <__assert_fail@plt+0xd174>
   1d4a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d4a4:	subs	r0, r2, r0
   1d4a8:	rscs	r1, r1, #0
   1d4ac:	str	r0, [fp, #-60]	; 0xffffffc4
   1d4b0:	str	r1, [fp, #-64]	; 0xffffffc0
   1d4b4:	blt	1d684 <__assert_fail@plt+0xc5cc>
   1d4b8:	b	1d698 <__assert_fail@plt+0xc5e0>
   1d4bc:	b	1d4d0 <__assert_fail@plt+0xc418>
   1d4c0:	ldr	r0, [fp, #-16]
   1d4c4:	cmp	r0, #1
   1d4c8:	bcc	1d4e0 <__assert_fail@plt+0xc428>
   1d4cc:	b	1d4f4 <__assert_fail@plt+0xc43c>
   1d4d0:	ldr	r0, [fp, #-16]
   1d4d4:	movw	r1, #0
   1d4d8:	cmp	r1, r0
   1d4dc:	bcs	1d4f4 <__assert_fail@plt+0xc43c>
   1d4e0:	mov	r0, #0
   1d4e4:	mvn	r1, #0
   1d4e8:	str	r1, [fp, #-68]	; 0xffffffbc
   1d4ec:	str	r0, [fp, #-72]	; 0xffffffb8
   1d4f0:	b	1d518 <__assert_fail@plt+0xc460>
   1d4f4:	ldr	r0, [fp, #-16]
   1d4f8:	rsb	r2, r0, #0
   1d4fc:	mvn	r0, #0
   1d500:	mvn	r1, #-2147483648	; 0x80000000
   1d504:	mov	r3, #0
   1d508:	bl	1e22c <__assert_fail@plt+0xd174>
   1d50c:	str	r0, [fp, #-68]	; 0xffffffbc
   1d510:	str	r1, [fp, #-72]	; 0xffffffb8
   1d514:	b	1d518 <__assert_fail@plt+0xc460>
   1d518:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1d51c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1d520:	ldr	r2, [fp, #-12]
   1d524:	mvn	r2, r2
   1d528:	subs	r1, r2, r1
   1d52c:	rscs	r0, r0, #0
   1d530:	str	r1, [fp, #-76]	; 0xffffffb4
   1d534:	str	r0, [fp, #-80]	; 0xffffffb0
   1d538:	bge	1d684 <__assert_fail@plt+0xc5cc>
   1d53c:	b	1d698 <__assert_fail@plt+0xc5e0>
   1d540:	ldr	r0, [fp, #-16]
   1d544:	cmn	r0, #1
   1d548:	bne	1d590 <__assert_fail@plt+0xc4d8>
   1d54c:	b	1d570 <__assert_fail@plt+0xc4b8>
   1d550:	ldr	r0, [fp, #-12]
   1d554:	rsbs	r0, r0, #0
   1d558:	mov	r1, #0
   1d55c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1d560:	str	r0, [fp, #-84]	; 0xffffffac
   1d564:	str	r1, [sp, #88]	; 0x58
   1d568:	blt	1d684 <__assert_fail@plt+0xc5cc>
   1d56c:	b	1d698 <__assert_fail@plt+0xc5e0>
   1d570:	ldr	r0, [fp, #-12]
   1d574:	movw	r1, #0
   1d578:	cmp	r1, r0
   1d57c:	bcs	1d698 <__assert_fail@plt+0xc5e0>
   1d580:	mov	r0, #0
   1d584:	cmp	r0, #0
   1d588:	bne	1d684 <__assert_fail@plt+0xc5cc>
   1d58c:	b	1d698 <__assert_fail@plt+0xc5e0>
   1d590:	ldr	r2, [fp, #-16]
   1d594:	mov	r1, #-2147483648	; 0x80000000
   1d598:	mov	r0, #0
   1d59c:	str	r0, [sp, #84]	; 0x54
   1d5a0:	ldr	r3, [sp, #84]	; 0x54
   1d5a4:	bl	1e158 <__assert_fail@plt+0xd0a0>
   1d5a8:	ldr	r2, [fp, #-12]
   1d5ac:	subs	r0, r0, r2
   1d5b0:	sbcs	r1, r1, #0
   1d5b4:	str	r0, [sp, #80]	; 0x50
   1d5b8:	str	r1, [sp, #76]	; 0x4c
   1d5bc:	blt	1d684 <__assert_fail@plt+0xc5cc>
   1d5c0:	b	1d698 <__assert_fail@plt+0xc5e0>
   1d5c4:	ldr	r0, [fp, #-16]
   1d5c8:	cmp	r0, #0
   1d5cc:	bne	1d5d4 <__assert_fail@plt+0xc51c>
   1d5d0:	b	1d698 <__assert_fail@plt+0xc5e0>
   1d5d4:	ldr	r0, [fp, #-12]
   1d5d8:	cmp	r0, #0
   1d5dc:	bcs	1d654 <__assert_fail@plt+0xc59c>
   1d5e0:	ldr	r0, [fp, #-12]
   1d5e4:	cmn	r0, #1
   1d5e8:	bne	1d620 <__assert_fail@plt+0xc568>
   1d5ec:	b	1d610 <__assert_fail@plt+0xc558>
   1d5f0:	ldr	r0, [fp, #-16]
   1d5f4:	rsbs	r0, r0, #0
   1d5f8:	mov	r1, #0
   1d5fc:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1d600:	str	r0, [sp, #72]	; 0x48
   1d604:	str	r1, [sp, #68]	; 0x44
   1d608:	blt	1d684 <__assert_fail@plt+0xc5cc>
   1d60c:	b	1d698 <__assert_fail@plt+0xc5e0>
   1d610:	mov	r0, #0
   1d614:	cmp	r0, #0
   1d618:	bne	1d684 <__assert_fail@plt+0xc5cc>
   1d61c:	b	1d698 <__assert_fail@plt+0xc5e0>
   1d620:	ldr	r2, [fp, #-12]
   1d624:	mov	r1, #-2147483648	; 0x80000000
   1d628:	mov	r0, #0
   1d62c:	str	r0, [sp, #64]	; 0x40
   1d630:	ldr	r3, [sp, #64]	; 0x40
   1d634:	bl	1e158 <__assert_fail@plt+0xd0a0>
   1d638:	ldr	r2, [fp, #-16]
   1d63c:	subs	r0, r0, r2
   1d640:	sbcs	r1, r1, #0
   1d644:	str	r0, [sp, #60]	; 0x3c
   1d648:	str	r1, [sp, #56]	; 0x38
   1d64c:	blt	1d684 <__assert_fail@plt+0xc5cc>
   1d650:	b	1d698 <__assert_fail@plt+0xc5e0>
   1d654:	ldr	r2, [fp, #-16]
   1d658:	mvn	r0, #0
   1d65c:	mvn	r1, #-2147483648	; 0x80000000
   1d660:	mov	r3, #0
   1d664:	bl	1e22c <__assert_fail@plt+0xd174>
   1d668:	ldr	r2, [fp, #-12]
   1d66c:	subs	r0, r0, r2
   1d670:	sbcs	r1, r1, #0
   1d674:	str	r0, [sp, #52]	; 0x34
   1d678:	str	r1, [sp, #48]	; 0x30
   1d67c:	bge	1d698 <__assert_fail@plt+0xc5e0>
   1d680:	b	1d684 <__assert_fail@plt+0xc5cc>
   1d684:	ldr	r0, [fp, #-12]
   1d688:	ldr	r1, [fp, #-16]
   1d68c:	mul	r0, r0, r1
   1d690:	str	r0, [fp, #-20]	; 0xffffffec
   1d694:	b	1d8e0 <__assert_fail@plt+0xc828>
   1d698:	ldr	r0, [fp, #-12]
   1d69c:	ldr	r1, [fp, #-16]
   1d6a0:	mul	r0, r0, r1
   1d6a4:	str	r0, [fp, #-20]	; 0xffffffec
   1d6a8:	b	1d8f8 <__assert_fail@plt+0xc840>
   1d6ac:	ldr	r0, [fp, #-16]
   1d6b0:	cmp	r0, #0
   1d6b4:	bcs	1d800 <__assert_fail@plt+0xc748>
   1d6b8:	ldr	r0, [fp, #-12]
   1d6bc:	cmp	r0, #0
   1d6c0:	bcs	1d788 <__assert_fail@plt+0xc6d0>
   1d6c4:	b	1d700 <__assert_fail@plt+0xc648>
   1d6c8:	ldr	r0, [fp, #-12]
   1d6cc:	ldr	r2, [fp, #-16]
   1d6d0:	mvn	r1, #0
   1d6d4:	mov	r3, #0
   1d6d8:	str	r0, [sp, #44]	; 0x2c
   1d6dc:	mov	r0, r1
   1d6e0:	bl	1e22c <__assert_fail@plt+0xd174>
   1d6e4:	ldr	r2, [sp, #44]	; 0x2c
   1d6e8:	subs	r0, r2, r0
   1d6ec:	rscs	r1, r1, #0
   1d6f0:	str	r0, [sp, #40]	; 0x28
   1d6f4:	str	r1, [sp, #36]	; 0x24
   1d6f8:	bcc	1d8b8 <__assert_fail@plt+0xc800>
   1d6fc:	b	1d8cc <__assert_fail@plt+0xc814>
   1d700:	b	1d714 <__assert_fail@plt+0xc65c>
   1d704:	ldr	r0, [fp, #-16]
   1d708:	cmp	r0, #1
   1d70c:	bcc	1d724 <__assert_fail@plt+0xc66c>
   1d710:	b	1d738 <__assert_fail@plt+0xc680>
   1d714:	ldr	r0, [fp, #-16]
   1d718:	movw	r1, #0
   1d71c:	cmp	r1, r0
   1d720:	bcs	1d738 <__assert_fail@plt+0xc680>
   1d724:	mov	r0, #1
   1d728:	mvn	r1, #0
   1d72c:	str	r1, [sp, #32]
   1d730:	str	r0, [sp, #28]
   1d734:	b	1d760 <__assert_fail@plt+0xc6a8>
   1d738:	ldr	r0, [fp, #-16]
   1d73c:	rsb	r2, r0, #0
   1d740:	mvn	r0, #0
   1d744:	mov	r3, #0
   1d748:	str	r0, [sp, #24]
   1d74c:	ldr	r1, [sp, #24]
   1d750:	bl	1e22c <__assert_fail@plt+0xd174>
   1d754:	str	r0, [sp, #32]
   1d758:	str	r1, [sp, #28]
   1d75c:	b	1d760 <__assert_fail@plt+0xc6a8>
   1d760:	ldr	r0, [sp, #28]
   1d764:	ldr	r1, [sp, #32]
   1d768:	ldr	r2, [fp, #-12]
   1d76c:	mvn	r2, r2
   1d770:	subs	r1, r2, r1
   1d774:	rscs	r0, r0, #0
   1d778:	str	r1, [sp, #20]
   1d77c:	str	r0, [sp, #16]
   1d780:	bcs	1d8b8 <__assert_fail@plt+0xc800>
   1d784:	b	1d8cc <__assert_fail@plt+0xc814>
   1d788:	b	1d790 <__assert_fail@plt+0xc6d8>
   1d78c:	b	1d794 <__assert_fail@plt+0xc6dc>
   1d790:	b	1d7e4 <__assert_fail@plt+0xc72c>
   1d794:	ldr	r0, [fp, #-16]
   1d798:	cmn	r0, #1
   1d79c:	bne	1d7e4 <__assert_fail@plt+0xc72c>
   1d7a0:	b	1d7bc <__assert_fail@plt+0xc704>
   1d7a4:	ldr	r0, [fp, #-12]
   1d7a8:	add	r0, r0, #0
   1d7ac:	movw	r1, #0
   1d7b0:	cmp	r1, r0
   1d7b4:	bcc	1d8b8 <__assert_fail@plt+0xc800>
   1d7b8:	b	1d8cc <__assert_fail@plt+0xc814>
   1d7bc:	ldr	r0, [fp, #-12]
   1d7c0:	movw	r1, #0
   1d7c4:	cmp	r1, r0
   1d7c8:	bcs	1d8cc <__assert_fail@plt+0xc814>
   1d7cc:	ldr	r0, [fp, #-12]
   1d7d0:	sub	r0, r0, #1
   1d7d4:	mvn	r1, #0
   1d7d8:	cmp	r1, r0
   1d7dc:	bcc	1d8b8 <__assert_fail@plt+0xc800>
   1d7e0:	b	1d8cc <__assert_fail@plt+0xc814>
   1d7e4:	ldr	r0, [fp, #-16]
   1d7e8:	movw	r1, #0
   1d7ec:	udiv	r0, r1, r0
   1d7f0:	ldr	r1, [fp, #-12]
   1d7f4:	cmp	r0, r1
   1d7f8:	bcc	1d8b8 <__assert_fail@plt+0xc800>
   1d7fc:	b	1d8cc <__assert_fail@plt+0xc814>
   1d800:	ldr	r0, [fp, #-16]
   1d804:	cmp	r0, #0
   1d808:	bne	1d810 <__assert_fail@plt+0xc758>
   1d80c:	b	1d8cc <__assert_fail@plt+0xc814>
   1d810:	ldr	r0, [fp, #-12]
   1d814:	cmp	r0, #0
   1d818:	bcs	1d884 <__assert_fail@plt+0xc7cc>
   1d81c:	b	1d824 <__assert_fail@plt+0xc76c>
   1d820:	b	1d828 <__assert_fail@plt+0xc770>
   1d824:	b	1d868 <__assert_fail@plt+0xc7b0>
   1d828:	ldr	r0, [fp, #-12]
   1d82c:	cmn	r0, #1
   1d830:	bne	1d868 <__assert_fail@plt+0xc7b0>
   1d834:	b	1d850 <__assert_fail@plt+0xc798>
   1d838:	ldr	r0, [fp, #-16]
   1d83c:	add	r0, r0, #0
   1d840:	movw	r1, #0
   1d844:	cmp	r1, r0
   1d848:	bcc	1d8b8 <__assert_fail@plt+0xc800>
   1d84c:	b	1d8cc <__assert_fail@plt+0xc814>
   1d850:	ldr	r0, [fp, #-16]
   1d854:	sub	r0, r0, #1
   1d858:	mvn	r1, #0
   1d85c:	cmp	r1, r0
   1d860:	bcc	1d8b8 <__assert_fail@plt+0xc800>
   1d864:	b	1d8cc <__assert_fail@plt+0xc814>
   1d868:	ldr	r0, [fp, #-12]
   1d86c:	movw	r1, #0
   1d870:	udiv	r0, r1, r0
   1d874:	ldr	r1, [fp, #-16]
   1d878:	cmp	r0, r1
   1d87c:	bcc	1d8b8 <__assert_fail@plt+0xc800>
   1d880:	b	1d8cc <__assert_fail@plt+0xc814>
   1d884:	ldr	r2, [fp, #-16]
   1d888:	mvn	r0, #0
   1d88c:	mov	r3, #0
   1d890:	str	r0, [sp, #12]
   1d894:	ldr	r1, [sp, #12]
   1d898:	bl	1e22c <__assert_fail@plt+0xd174>
   1d89c:	ldr	r2, [fp, #-12]
   1d8a0:	subs	r0, r0, r2
   1d8a4:	sbcs	r1, r1, #0
   1d8a8:	str	r0, [sp, #8]
   1d8ac:	str	r1, [sp, #4]
   1d8b0:	bcs	1d8cc <__assert_fail@plt+0xc814>
   1d8b4:	b	1d8b8 <__assert_fail@plt+0xc800>
   1d8b8:	ldr	r0, [fp, #-12]
   1d8bc:	ldr	r1, [fp, #-16]
   1d8c0:	mul	r0, r0, r1
   1d8c4:	str	r0, [fp, #-20]	; 0xffffffec
   1d8c8:	b	1d8e0 <__assert_fail@plt+0xc828>
   1d8cc:	ldr	r0, [fp, #-12]
   1d8d0:	ldr	r1, [fp, #-16]
   1d8d4:	mul	r0, r0, r1
   1d8d8:	str	r0, [fp, #-20]	; 0xffffffec
   1d8dc:	b	1d8f8 <__assert_fail@plt+0xc840>
   1d8e0:	bl	10fec <__errno_location@plt>
   1d8e4:	movw	lr, #12
   1d8e8:	str	lr, [r0]
   1d8ec:	movw	r0, #0
   1d8f0:	str	r0, [fp, #-4]
   1d8f4:	b	1d908 <__assert_fail@plt+0xc850>
   1d8f8:	ldr	r0, [fp, #-8]
   1d8fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d900:	bl	1c044 <__assert_fail@plt+0xaf8c>
   1d904:	str	r0, [fp, #-4]
   1d908:	ldr	r0, [fp, #-4]
   1d90c:	mov	sp, fp
   1d910:	pop	{fp, pc}
   1d914:	svcvc	0x00ffffff
   1d918:	andhi	r0, r0, r0
   1d91c:			; <UNDEFINED> instruction: 0xffff8000
   1d920:	sub	sp, sp, #12
   1d924:	str	r0, [sp, #4]
   1d928:	ldr	r0, [sp, #4]
   1d92c:	sub	r1, r0, #48	; 0x30
   1d930:	cmp	r1, #10
   1d934:	str	r0, [sp]
   1d938:	bcc	1d968 <__assert_fail@plt+0xc8b0>
   1d93c:	b	1d940 <__assert_fail@plt+0xc888>
   1d940:	ldr	r0, [sp]
   1d944:	sub	r1, r0, #65	; 0x41
   1d948:	cmp	r1, #26
   1d94c:	bcc	1d968 <__assert_fail@plt+0xc8b0>
   1d950:	b	1d954 <__assert_fail@plt+0xc89c>
   1d954:	ldr	r0, [sp]
   1d958:	sub	r1, r0, #97	; 0x61
   1d95c:	cmp	r1, #25
   1d960:	bhi	1d978 <__assert_fail@plt+0xc8c0>
   1d964:	b	1d968 <__assert_fail@plt+0xc8b0>
   1d968:	movw	r0, #1
   1d96c:	and	r0, r0, #1
   1d970:	strb	r0, [sp, #11]
   1d974:	b	1d984 <__assert_fail@plt+0xc8cc>
   1d978:	movw	r0, #0
   1d97c:	and	r0, r0, #1
   1d980:	strb	r0, [sp, #11]
   1d984:	ldrb	r0, [sp, #11]
   1d988:	and	r0, r0, #1
   1d98c:	add	sp, sp, #12
   1d990:	bx	lr
   1d994:	sub	sp, sp, #12
   1d998:	str	r0, [sp, #4]
   1d99c:	ldr	r0, [sp, #4]
   1d9a0:	sub	r1, r0, #65	; 0x41
   1d9a4:	cmp	r1, #26
   1d9a8:	str	r0, [sp]
   1d9ac:	bcc	1d9c8 <__assert_fail@plt+0xc910>
   1d9b0:	b	1d9b4 <__assert_fail@plt+0xc8fc>
   1d9b4:	ldr	r0, [sp]
   1d9b8:	sub	r1, r0, #97	; 0x61
   1d9bc:	cmp	r1, #25
   1d9c0:	bhi	1d9d8 <__assert_fail@plt+0xc920>
   1d9c4:	b	1d9c8 <__assert_fail@plt+0xc910>
   1d9c8:	movw	r0, #1
   1d9cc:	and	r0, r0, #1
   1d9d0:	strb	r0, [sp, #11]
   1d9d4:	b	1d9e4 <__assert_fail@plt+0xc92c>
   1d9d8:	movw	r0, #0
   1d9dc:	and	r0, r0, #1
   1d9e0:	strb	r0, [sp, #11]
   1d9e4:	ldrb	r0, [sp, #11]
   1d9e8:	and	r0, r0, #1
   1d9ec:	add	sp, sp, #12
   1d9f0:	bx	lr
   1d9f4:	sub	sp, sp, #8
   1d9f8:	str	r0, [sp]
   1d9fc:	ldr	r0, [sp]
   1da00:	cmp	r0, #127	; 0x7f
   1da04:	bhi	1da1c <__assert_fail@plt+0xc964>
   1da08:	b	1da0c <__assert_fail@plt+0xc954>
   1da0c:	movw	r0, #1
   1da10:	and	r0, r0, #1
   1da14:	strb	r0, [sp, #7]
   1da18:	b	1da28 <__assert_fail@plt+0xc970>
   1da1c:	movw	r0, #0
   1da20:	and	r0, r0, #1
   1da24:	strb	r0, [sp, #7]
   1da28:	ldrb	r0, [sp, #7]
   1da2c:	and	r0, r0, #1
   1da30:	add	sp, sp, #8
   1da34:	bx	lr
   1da38:	sub	sp, sp, #8
   1da3c:	str	r0, [sp, #4]
   1da40:	ldr	r0, [sp, #4]
   1da44:	cmp	r0, #32
   1da48:	movw	r0, #1
   1da4c:	str	r0, [sp]
   1da50:	beq	1da68 <__assert_fail@plt+0xc9b0>
   1da54:	ldr	r0, [sp, #4]
   1da58:	cmp	r0, #9
   1da5c:	movw	r0, #0
   1da60:	moveq	r0, #1
   1da64:	str	r0, [sp]
   1da68:	ldr	r0, [sp]
   1da6c:	and	r0, r0, #1
   1da70:	add	sp, sp, #8
   1da74:	bx	lr
   1da78:	sub	sp, sp, #12
   1da7c:	str	r0, [sp, #4]
   1da80:	ldr	r0, [sp, #4]
   1da84:	cmp	r0, #32
   1da88:	str	r0, [sp]
   1da8c:	bcc	1daa4 <__assert_fail@plt+0xc9ec>
   1da90:	b	1da94 <__assert_fail@plt+0xc9dc>
   1da94:	ldr	r0, [sp]
   1da98:	cmp	r0, #127	; 0x7f
   1da9c:	bne	1dab4 <__assert_fail@plt+0xc9fc>
   1daa0:	b	1daa4 <__assert_fail@plt+0xc9ec>
   1daa4:	movw	r0, #1
   1daa8:	and	r0, r0, #1
   1daac:	strb	r0, [sp, #11]
   1dab0:	b	1dac0 <__assert_fail@plt+0xca08>
   1dab4:	movw	r0, #0
   1dab8:	and	r0, r0, #1
   1dabc:	strb	r0, [sp, #11]
   1dac0:	ldrb	r0, [sp, #11]
   1dac4:	and	r0, r0, #1
   1dac8:	add	sp, sp, #12
   1dacc:	bx	lr
   1dad0:	sub	sp, sp, #8
   1dad4:	str	r0, [sp]
   1dad8:	ldr	r0, [sp]
   1dadc:	sub	r0, r0, #48	; 0x30
   1dae0:	cmp	r0, #9
   1dae4:	bhi	1dafc <__assert_fail@plt+0xca44>
   1dae8:	b	1daec <__assert_fail@plt+0xca34>
   1daec:	movw	r0, #1
   1daf0:	and	r0, r0, #1
   1daf4:	strb	r0, [sp, #7]
   1daf8:	b	1db08 <__assert_fail@plt+0xca50>
   1dafc:	movw	r0, #0
   1db00:	and	r0, r0, #1
   1db04:	strb	r0, [sp, #7]
   1db08:	ldrb	r0, [sp, #7]
   1db0c:	and	r0, r0, #1
   1db10:	add	sp, sp, #8
   1db14:	bx	lr
   1db18:	sub	sp, sp, #8
   1db1c:	str	r0, [sp]
   1db20:	ldr	r0, [sp]
   1db24:	sub	r0, r0, #33	; 0x21
   1db28:	cmp	r0, #93	; 0x5d
   1db2c:	bhi	1db44 <__assert_fail@plt+0xca8c>
   1db30:	b	1db34 <__assert_fail@plt+0xca7c>
   1db34:	movw	r0, #1
   1db38:	and	r0, r0, #1
   1db3c:	strb	r0, [sp, #7]
   1db40:	b	1db50 <__assert_fail@plt+0xca98>
   1db44:	movw	r0, #0
   1db48:	and	r0, r0, #1
   1db4c:	strb	r0, [sp, #7]
   1db50:	ldrb	r0, [sp, #7]
   1db54:	and	r0, r0, #1
   1db58:	add	sp, sp, #8
   1db5c:	bx	lr
   1db60:	sub	sp, sp, #8
   1db64:	str	r0, [sp]
   1db68:	ldr	r0, [sp]
   1db6c:	sub	r0, r0, #97	; 0x61
   1db70:	cmp	r0, #25
   1db74:	bhi	1db8c <__assert_fail@plt+0xcad4>
   1db78:	b	1db7c <__assert_fail@plt+0xcac4>
   1db7c:	movw	r0, #1
   1db80:	and	r0, r0, #1
   1db84:	strb	r0, [sp, #7]
   1db88:	b	1db98 <__assert_fail@plt+0xcae0>
   1db8c:	movw	r0, #0
   1db90:	and	r0, r0, #1
   1db94:	strb	r0, [sp, #7]
   1db98:	ldrb	r0, [sp, #7]
   1db9c:	and	r0, r0, #1
   1dba0:	add	sp, sp, #8
   1dba4:	bx	lr
   1dba8:	sub	sp, sp, #8
   1dbac:	str	r0, [sp]
   1dbb0:	ldr	r0, [sp]
   1dbb4:	sub	r0, r0, #32
   1dbb8:	cmp	r0, #94	; 0x5e
   1dbbc:	bhi	1dbd4 <__assert_fail@plt+0xcb1c>
   1dbc0:	b	1dbc4 <__assert_fail@plt+0xcb0c>
   1dbc4:	movw	r0, #1
   1dbc8:	and	r0, r0, #1
   1dbcc:	strb	r0, [sp, #7]
   1dbd0:	b	1dbe0 <__assert_fail@plt+0xcb28>
   1dbd4:	movw	r0, #0
   1dbd8:	and	r0, r0, #1
   1dbdc:	strb	r0, [sp, #7]
   1dbe0:	ldrb	r0, [sp, #7]
   1dbe4:	and	r0, r0, #1
   1dbe8:	add	sp, sp, #8
   1dbec:	bx	lr
   1dbf0:	sub	sp, sp, #12
   1dbf4:	str	r0, [sp, #4]
   1dbf8:	ldr	r0, [sp, #4]
   1dbfc:	sub	r0, r0, #33	; 0x21
   1dc00:	cmp	r0, #93	; 0x5d
   1dc04:	str	r0, [sp]
   1dc08:	bhi	1dda4 <__assert_fail@plt+0xccec>
   1dc0c:	add	r0, pc, #8
   1dc10:	ldr	r1, [sp]
   1dc14:	ldr	r0, [r0, r1, lsl #2]
   1dc18:	mov	pc, r0
   1dc1c:	muleq	r1, r4, sp
   1dc20:	muleq	r1, r4, sp
   1dc24:	muleq	r1, r4, sp
   1dc28:	muleq	r1, r4, sp
   1dc2c:	muleq	r1, r4, sp
   1dc30:	muleq	r1, r4, sp
   1dc34:	muleq	r1, r4, sp
   1dc38:	muleq	r1, r4, sp
   1dc3c:	muleq	r1, r4, sp
   1dc40:	muleq	r1, r4, sp
   1dc44:	muleq	r1, r4, sp
   1dc48:	muleq	r1, r4, sp
   1dc4c:	muleq	r1, r4, sp
   1dc50:	muleq	r1, r4, sp
   1dc54:	muleq	r1, r4, sp
   1dc58:	andeq	sp, r1, r4, lsr #27
   1dc5c:	andeq	sp, r1, r4, lsr #27
   1dc60:	andeq	sp, r1, r4, lsr #27
   1dc64:	andeq	sp, r1, r4, lsr #27
   1dc68:	andeq	sp, r1, r4, lsr #27
   1dc6c:	andeq	sp, r1, r4, lsr #27
   1dc70:	andeq	sp, r1, r4, lsr #27
   1dc74:	andeq	sp, r1, r4, lsr #27
   1dc78:	andeq	sp, r1, r4, lsr #27
   1dc7c:	andeq	sp, r1, r4, lsr #27
   1dc80:	muleq	r1, r4, sp
   1dc84:	muleq	r1, r4, sp
   1dc88:	muleq	r1, r4, sp
   1dc8c:	muleq	r1, r4, sp
   1dc90:	muleq	r1, r4, sp
   1dc94:	muleq	r1, r4, sp
   1dc98:	muleq	r1, r4, sp
   1dc9c:	andeq	sp, r1, r4, lsr #27
   1dca0:	andeq	sp, r1, r4, lsr #27
   1dca4:	andeq	sp, r1, r4, lsr #27
   1dca8:	andeq	sp, r1, r4, lsr #27
   1dcac:	andeq	sp, r1, r4, lsr #27
   1dcb0:	andeq	sp, r1, r4, lsr #27
   1dcb4:	andeq	sp, r1, r4, lsr #27
   1dcb8:	andeq	sp, r1, r4, lsr #27
   1dcbc:	andeq	sp, r1, r4, lsr #27
   1dcc0:	andeq	sp, r1, r4, lsr #27
   1dcc4:	andeq	sp, r1, r4, lsr #27
   1dcc8:	andeq	sp, r1, r4, lsr #27
   1dccc:	andeq	sp, r1, r4, lsr #27
   1dcd0:	andeq	sp, r1, r4, lsr #27
   1dcd4:	andeq	sp, r1, r4, lsr #27
   1dcd8:	andeq	sp, r1, r4, lsr #27
   1dcdc:	andeq	sp, r1, r4, lsr #27
   1dce0:	andeq	sp, r1, r4, lsr #27
   1dce4:	andeq	sp, r1, r4, lsr #27
   1dce8:	andeq	sp, r1, r4, lsr #27
   1dcec:	andeq	sp, r1, r4, lsr #27
   1dcf0:	andeq	sp, r1, r4, lsr #27
   1dcf4:	andeq	sp, r1, r4, lsr #27
   1dcf8:	andeq	sp, r1, r4, lsr #27
   1dcfc:	andeq	sp, r1, r4, lsr #27
   1dd00:	andeq	sp, r1, r4, lsr #27
   1dd04:	muleq	r1, r4, sp
   1dd08:	muleq	r1, r4, sp
   1dd0c:	muleq	r1, r4, sp
   1dd10:	muleq	r1, r4, sp
   1dd14:	muleq	r1, r4, sp
   1dd18:	muleq	r1, r4, sp
   1dd1c:	andeq	sp, r1, r4, lsr #27
   1dd20:	andeq	sp, r1, r4, lsr #27
   1dd24:	andeq	sp, r1, r4, lsr #27
   1dd28:	andeq	sp, r1, r4, lsr #27
   1dd2c:	andeq	sp, r1, r4, lsr #27
   1dd30:	andeq	sp, r1, r4, lsr #27
   1dd34:	andeq	sp, r1, r4, lsr #27
   1dd38:	andeq	sp, r1, r4, lsr #27
   1dd3c:	andeq	sp, r1, r4, lsr #27
   1dd40:	andeq	sp, r1, r4, lsr #27
   1dd44:	andeq	sp, r1, r4, lsr #27
   1dd48:	andeq	sp, r1, r4, lsr #27
   1dd4c:	andeq	sp, r1, r4, lsr #27
   1dd50:	andeq	sp, r1, r4, lsr #27
   1dd54:	andeq	sp, r1, r4, lsr #27
   1dd58:	andeq	sp, r1, r4, lsr #27
   1dd5c:	andeq	sp, r1, r4, lsr #27
   1dd60:	andeq	sp, r1, r4, lsr #27
   1dd64:	andeq	sp, r1, r4, lsr #27
   1dd68:	andeq	sp, r1, r4, lsr #27
   1dd6c:	andeq	sp, r1, r4, lsr #27
   1dd70:	andeq	sp, r1, r4, lsr #27
   1dd74:	andeq	sp, r1, r4, lsr #27
   1dd78:	andeq	sp, r1, r4, lsr #27
   1dd7c:	andeq	sp, r1, r4, lsr #27
   1dd80:	andeq	sp, r1, r4, lsr #27
   1dd84:	muleq	r1, r4, sp
   1dd88:	muleq	r1, r4, sp
   1dd8c:	muleq	r1, r4, sp
   1dd90:	muleq	r1, r4, sp
   1dd94:	movw	r0, #1
   1dd98:	and	r0, r0, #1
   1dd9c:	strb	r0, [sp, #11]
   1dda0:	b	1ddb0 <__assert_fail@plt+0xccf8>
   1dda4:	movw	r0, #0
   1dda8:	and	r0, r0, #1
   1ddac:	strb	r0, [sp, #11]
   1ddb0:	ldrb	r0, [sp, #11]
   1ddb4:	and	r0, r0, #1
   1ddb8:	add	sp, sp, #12
   1ddbc:	bx	lr
   1ddc0:	sub	sp, sp, #12
   1ddc4:	str	r0, [sp, #4]
   1ddc8:	ldr	r0, [sp, #4]
   1ddcc:	sub	r1, r0, #9
   1ddd0:	cmp	r1, #5
   1ddd4:	str	r0, [sp]
   1ddd8:	bcc	1ddf0 <__assert_fail@plt+0xcd38>
   1dddc:	b	1dde0 <__assert_fail@plt+0xcd28>
   1dde0:	ldr	r0, [sp]
   1dde4:	cmp	r0, #32
   1dde8:	bne	1de00 <__assert_fail@plt+0xcd48>
   1ddec:	b	1ddf0 <__assert_fail@plt+0xcd38>
   1ddf0:	movw	r0, #1
   1ddf4:	and	r0, r0, #1
   1ddf8:	strb	r0, [sp, #11]
   1ddfc:	b	1de0c <__assert_fail@plt+0xcd54>
   1de00:	movw	r0, #0
   1de04:	and	r0, r0, #1
   1de08:	strb	r0, [sp, #11]
   1de0c:	ldrb	r0, [sp, #11]
   1de10:	and	r0, r0, #1
   1de14:	add	sp, sp, #12
   1de18:	bx	lr
   1de1c:	sub	sp, sp, #8
   1de20:	str	r0, [sp]
   1de24:	ldr	r0, [sp]
   1de28:	sub	r0, r0, #65	; 0x41
   1de2c:	cmp	r0, #25
   1de30:	bhi	1de48 <__assert_fail@plt+0xcd90>
   1de34:	b	1de38 <__assert_fail@plt+0xcd80>
   1de38:	movw	r0, #1
   1de3c:	and	r0, r0, #1
   1de40:	strb	r0, [sp, #7]
   1de44:	b	1de54 <__assert_fail@plt+0xcd9c>
   1de48:	movw	r0, #0
   1de4c:	and	r0, r0, #1
   1de50:	strb	r0, [sp, #7]
   1de54:	ldrb	r0, [sp, #7]
   1de58:	and	r0, r0, #1
   1de5c:	add	sp, sp, #8
   1de60:	bx	lr
   1de64:	sub	sp, sp, #12
   1de68:	str	r0, [sp, #4]
   1de6c:	ldr	r0, [sp, #4]
   1de70:	sub	r1, r0, #48	; 0x30
   1de74:	cmp	r1, #10
   1de78:	str	r0, [sp]
   1de7c:	bcc	1deac <__assert_fail@plt+0xcdf4>
   1de80:	b	1de84 <__assert_fail@plt+0xcdcc>
   1de84:	ldr	r0, [sp]
   1de88:	sub	r1, r0, #65	; 0x41
   1de8c:	cmp	r1, #6
   1de90:	bcc	1deac <__assert_fail@plt+0xcdf4>
   1de94:	b	1de98 <__assert_fail@plt+0xcde0>
   1de98:	ldr	r0, [sp]
   1de9c:	sub	r1, r0, #97	; 0x61
   1dea0:	cmp	r1, #5
   1dea4:	bhi	1debc <__assert_fail@plt+0xce04>
   1dea8:	b	1deac <__assert_fail@plt+0xcdf4>
   1deac:	movw	r0, #1
   1deb0:	and	r0, r0, #1
   1deb4:	strb	r0, [sp, #11]
   1deb8:	b	1dec8 <__assert_fail@plt+0xce10>
   1debc:	movw	r0, #0
   1dec0:	and	r0, r0, #1
   1dec4:	strb	r0, [sp, #11]
   1dec8:	ldrb	r0, [sp, #11]
   1decc:	and	r0, r0, #1
   1ded0:	add	sp, sp, #12
   1ded4:	bx	lr
   1ded8:	sub	sp, sp, #8
   1dedc:	str	r0, [sp]
   1dee0:	ldr	r0, [sp]
   1dee4:	sub	r0, r0, #65	; 0x41
   1dee8:	cmp	r0, #25
   1deec:	bhi	1df08 <__assert_fail@plt+0xce50>
   1def0:	b	1def4 <__assert_fail@plt+0xce3c>
   1def4:	ldr	r0, [sp]
   1def8:	sub	r0, r0, #65	; 0x41
   1defc:	add	r0, r0, #97	; 0x61
   1df00:	str	r0, [sp, #4]
   1df04:	b	1df10 <__assert_fail@plt+0xce58>
   1df08:	ldr	r0, [sp]
   1df0c:	str	r0, [sp, #4]
   1df10:	ldr	r0, [sp, #4]
   1df14:	add	sp, sp, #8
   1df18:	bx	lr
   1df1c:	sub	sp, sp, #8
   1df20:	str	r0, [sp]
   1df24:	ldr	r0, [sp]
   1df28:	sub	r0, r0, #97	; 0x61
   1df2c:	cmp	r0, #25
   1df30:	bhi	1df4c <__assert_fail@plt+0xce94>
   1df34:	b	1df38 <__assert_fail@plt+0xce80>
   1df38:	ldr	r0, [sp]
   1df3c:	sub	r0, r0, #97	; 0x61
   1df40:	add	r0, r0, #65	; 0x41
   1df44:	str	r0, [sp, #4]
   1df48:	b	1df54 <__assert_fail@plt+0xce9c>
   1df4c:	ldr	r0, [sp]
   1df50:	str	r0, [sp, #4]
   1df54:	ldr	r0, [sp, #4]
   1df58:	add	sp, sp, #8
   1df5c:	bx	lr
   1df60:	push	{r4, r5, fp, lr}
   1df64:	add	fp, sp, #8
   1df68:	sub	sp, sp, #272	; 0x110
   1df6c:	add	r1, sp, #7
   1df70:	str	r0, [fp, #-16]
   1df74:	ldr	r0, [fp, #-16]
   1df78:	movw	r2, #257	; 0x101
   1df7c:	bl	1dffc <__assert_fail@plt+0xcf44>
   1df80:	cmp	r0, #0
   1df84:	beq	1df98 <__assert_fail@plt+0xcee0>
   1df88:	movw	r0, #0
   1df8c:	and	r0, r0, #1
   1df90:	strb	r0, [fp, #-9]
   1df94:	b	1dfec <__assert_fail@plt+0xcf34>
   1df98:	add	r0, sp, #7
   1df9c:	movw	r1, #61576	; 0xf088
   1dfa0:	movt	r1, #1
   1dfa4:	bl	10e6c <strcmp@plt>
   1dfa8:	cmp	r0, #0
   1dfac:	movw	r0, #1
   1dfb0:	str	r0, [sp]
   1dfb4:	beq	1dfd8 <__assert_fail@plt+0xcf20>
   1dfb8:	add	r0, sp, #7
   1dfbc:	movw	r1, #61578	; 0xf08a
   1dfc0:	movt	r1, #1
   1dfc4:	bl	10e6c <strcmp@plt>
   1dfc8:	cmp	r0, #0
   1dfcc:	movw	r0, #0
   1dfd0:	moveq	r0, #1
   1dfd4:	str	r0, [sp]
   1dfd8:	ldr	r0, [sp]
   1dfdc:	mvn	r1, #0
   1dfe0:	eor	r0, r0, r1
   1dfe4:	and	r0, r0, #1
   1dfe8:	strb	r0, [fp, #-9]
   1dfec:	ldrb	r0, [fp, #-9]
   1dff0:	and	r0, r0, #1
   1dff4:	sub	sp, fp, #8
   1dff8:	pop	{r4, r5, fp, pc}
   1dffc:	push	{fp, lr}
   1e000:	mov	fp, sp
   1e004:	sub	sp, sp, #16
   1e008:	str	r0, [fp, #-4]
   1e00c:	str	r1, [sp, #8]
   1e010:	str	r2, [sp, #4]
   1e014:	ldr	r0, [fp, #-4]
   1e018:	ldr	r1, [sp, #8]
   1e01c:	ldr	r2, [sp, #4]
   1e020:	bl	1e02c <__assert_fail@plt+0xcf74>
   1e024:	mov	sp, fp
   1e028:	pop	{fp, pc}
   1e02c:	push	{fp, lr}
   1e030:	mov	fp, sp
   1e034:	sub	sp, sp, #24
   1e038:	str	r0, [fp, #-8]
   1e03c:	str	r1, [sp, #12]
   1e040:	str	r2, [sp, #8]
   1e044:	ldr	r0, [fp, #-8]
   1e048:	bl	1e12c <__assert_fail@plt+0xd074>
   1e04c:	str	r0, [sp, #4]
   1e050:	ldr	r0, [sp, #4]
   1e054:	movw	r1, #0
   1e058:	cmp	r0, r1
   1e05c:	bne	1e084 <__assert_fail@plt+0xcfcc>
   1e060:	ldr	r0, [sp, #8]
   1e064:	cmp	r0, #0
   1e068:	bls	1e078 <__assert_fail@plt+0xcfc0>
   1e06c:	ldr	r0, [sp, #12]
   1e070:	movw	r1, #0
   1e074:	strb	r1, [r0]
   1e078:	movw	r0, #22
   1e07c:	str	r0, [fp, #-4]
   1e080:	b	1e100 <__assert_fail@plt+0xd048>
   1e084:	ldr	r0, [sp, #4]
   1e088:	bl	10fc8 <strlen@plt>
   1e08c:	str	r0, [sp]
   1e090:	ldr	r0, [sp]
   1e094:	ldr	lr, [sp, #8]
   1e098:	cmp	r0, lr
   1e09c:	bcs	1e0c0 <__assert_fail@plt+0xd008>
   1e0a0:	ldr	r0, [sp, #12]
   1e0a4:	ldr	r1, [sp, #4]
   1e0a8:	ldr	r2, [sp]
   1e0ac:	add	r2, r2, #1
   1e0b0:	bl	10ec0 <memcpy@plt>
   1e0b4:	movw	r0, #0
   1e0b8:	str	r0, [fp, #-4]
   1e0bc:	b	1e100 <__assert_fail@plt+0xd048>
   1e0c0:	ldr	r0, [sp, #8]
   1e0c4:	cmp	r0, #0
   1e0c8:	bls	1e0f8 <__assert_fail@plt+0xd040>
   1e0cc:	ldr	r0, [sp, #12]
   1e0d0:	ldr	r1, [sp, #4]
   1e0d4:	ldr	r2, [sp, #8]
   1e0d8:	sub	r2, r2, #1
   1e0dc:	bl	10ec0 <memcpy@plt>
   1e0e0:	ldr	r0, [sp, #12]
   1e0e4:	ldr	r1, [sp, #8]
   1e0e8:	sub	r1, r1, #1
   1e0ec:	add	r0, r0, r1
   1e0f0:	movw	r1, #0
   1e0f4:	strb	r1, [r0]
   1e0f8:	movw	r0, #34	; 0x22
   1e0fc:	str	r0, [fp, #-4]
   1e100:	ldr	r0, [fp, #-4]
   1e104:	mov	sp, fp
   1e108:	pop	{fp, pc}
   1e10c:	push	{fp, lr}
   1e110:	mov	fp, sp
   1e114:	sub	sp, sp, #8
   1e118:	str	r0, [sp, #4]
   1e11c:	ldr	r0, [sp, #4]
   1e120:	bl	1e12c <__assert_fail@plt+0xd074>
   1e124:	mov	sp, fp
   1e128:	pop	{fp, pc}
   1e12c:	push	{fp, lr}
   1e130:	mov	fp, sp
   1e134:	sub	sp, sp, #8
   1e138:	str	r0, [sp, #4]
   1e13c:	ldr	r0, [sp, #4]
   1e140:	movw	r1, #0
   1e144:	bl	11040 <setlocale@plt>
   1e148:	str	r0, [sp]
   1e14c:	ldr	r0, [sp]
   1e150:	mov	sp, fp
   1e154:	pop	{fp, pc}
   1e158:	cmp	r3, #0
   1e15c:	cmpeq	r2, #0
   1e160:	bne	1e184 <__assert_fail@plt+0xd0cc>
   1e164:	cmp	r1, #0
   1e168:	movlt	r1, #-2147483648	; 0x80000000
   1e16c:	movlt	r0, #0
   1e170:	blt	1e180 <__assert_fail@plt+0xd0c8>
   1e174:	cmpeq	r0, #0
   1e178:	mvnne	r1, #-2147483648	; 0x80000000
   1e17c:	mvnne	r0, #0
   1e180:	b	1e268 <__assert_fail@plt+0xd1b0>
   1e184:	sub	sp, sp, #8
   1e188:	push	{sp, lr}
   1e18c:	cmp	r1, #0
   1e190:	blt	1e1b0 <__assert_fail@plt+0xd0f8>
   1e194:	cmp	r3, #0
   1e198:	blt	1e1e4 <__assert_fail@plt+0xd12c>
   1e19c:	bl	1e278 <__assert_fail@plt+0xd1c0>
   1e1a0:	ldr	lr, [sp, #4]
   1e1a4:	add	sp, sp, #8
   1e1a8:	pop	{r2, r3}
   1e1ac:	bx	lr
   1e1b0:	rsbs	r0, r0, #0
   1e1b4:	sbc	r1, r1, r1, lsl #1
   1e1b8:	cmp	r3, #0
   1e1bc:	blt	1e208 <__assert_fail@plt+0xd150>
   1e1c0:	bl	1e278 <__assert_fail@plt+0xd1c0>
   1e1c4:	ldr	lr, [sp, #4]
   1e1c8:	add	sp, sp, #8
   1e1cc:	pop	{r2, r3}
   1e1d0:	rsbs	r0, r0, #0
   1e1d4:	sbc	r1, r1, r1, lsl #1
   1e1d8:	rsbs	r2, r2, #0
   1e1dc:	sbc	r3, r3, r3, lsl #1
   1e1e0:	bx	lr
   1e1e4:	rsbs	r2, r2, #0
   1e1e8:	sbc	r3, r3, r3, lsl #1
   1e1ec:	bl	1e278 <__assert_fail@plt+0xd1c0>
   1e1f0:	ldr	lr, [sp, #4]
   1e1f4:	add	sp, sp, #8
   1e1f8:	pop	{r2, r3}
   1e1fc:	rsbs	r0, r0, #0
   1e200:	sbc	r1, r1, r1, lsl #1
   1e204:	bx	lr
   1e208:	rsbs	r2, r2, #0
   1e20c:	sbc	r3, r3, r3, lsl #1
   1e210:	bl	1e278 <__assert_fail@plt+0xd1c0>
   1e214:	ldr	lr, [sp, #4]
   1e218:	add	sp, sp, #8
   1e21c:	pop	{r2, r3}
   1e220:	rsbs	r2, r2, #0
   1e224:	sbc	r3, r3, r3, lsl #1
   1e228:	bx	lr
   1e22c:	cmp	r3, #0
   1e230:	cmpeq	r2, #0
   1e234:	bne	1e24c <__assert_fail@plt+0xd194>
   1e238:	cmp	r1, #0
   1e23c:	cmpeq	r0, #0
   1e240:	mvnne	r1, #0
   1e244:	mvnne	r0, #0
   1e248:	b	1e268 <__assert_fail@plt+0xd1b0>
   1e24c:	sub	sp, sp, #8
   1e250:	push	{sp, lr}
   1e254:	bl	1e278 <__assert_fail@plt+0xd1c0>
   1e258:	ldr	lr, [sp, #4]
   1e25c:	add	sp, sp, #8
   1e260:	pop	{r2, r3}
   1e264:	bx	lr
   1e268:	push	{r1, lr}
   1e26c:	mov	r0, #8
   1e270:	bl	10e60 <raise@plt>
   1e274:	pop	{r1, pc}
   1e278:	cmp	r1, r3
   1e27c:	cmpeq	r0, r2
   1e280:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e284:	mov	r4, r0
   1e288:	movcc	r0, #0
   1e28c:	mov	r5, r1
   1e290:	ldr	lr, [sp, #36]	; 0x24
   1e294:	movcc	r1, r0
   1e298:	bcc	1e394 <__assert_fail@plt+0xd2dc>
   1e29c:	cmp	r3, #0
   1e2a0:	clzeq	ip, r2
   1e2a4:	clzne	ip, r3
   1e2a8:	addeq	ip, ip, #32
   1e2ac:	cmp	r5, #0
   1e2b0:	clzeq	r1, r4
   1e2b4:	addeq	r1, r1, #32
   1e2b8:	clzne	r1, r5
   1e2bc:	sub	ip, ip, r1
   1e2c0:	sub	sl, ip, #32
   1e2c4:	lsl	r9, r3, ip
   1e2c8:	rsb	fp, ip, #32
   1e2cc:	orr	r9, r9, r2, lsl sl
   1e2d0:	orr	r9, r9, r2, lsr fp
   1e2d4:	lsl	r8, r2, ip
   1e2d8:	cmp	r5, r9
   1e2dc:	cmpeq	r4, r8
   1e2e0:	movcc	r0, #0
   1e2e4:	movcc	r1, r0
   1e2e8:	bcc	1e304 <__assert_fail@plt+0xd24c>
   1e2ec:	mov	r0, #1
   1e2f0:	subs	r4, r4, r8
   1e2f4:	lsl	r1, r0, sl
   1e2f8:	orr	r1, r1, r0, lsr fp
   1e2fc:	lsl	r0, r0, ip
   1e300:	sbc	r5, r5, r9
   1e304:	cmp	ip, #0
   1e308:	beq	1e394 <__assert_fail@plt+0xd2dc>
   1e30c:	lsr	r6, r8, #1
   1e310:	orr	r6, r6, r9, lsl #31
   1e314:	lsr	r7, r9, #1
   1e318:	mov	r2, ip
   1e31c:	b	1e340 <__assert_fail@plt+0xd288>
   1e320:	subs	r3, r4, r6
   1e324:	sbc	r8, r5, r7
   1e328:	adds	r3, r3, r3
   1e32c:	adc	r8, r8, r8
   1e330:	adds	r4, r3, #1
   1e334:	adc	r5, r8, #0
   1e338:	subs	r2, r2, #1
   1e33c:	beq	1e35c <__assert_fail@plt+0xd2a4>
   1e340:	cmp	r5, r7
   1e344:	cmpeq	r4, r6
   1e348:	bcs	1e320 <__assert_fail@plt+0xd268>
   1e34c:	adds	r4, r4, r4
   1e350:	adc	r5, r5, r5
   1e354:	subs	r2, r2, #1
   1e358:	bne	1e340 <__assert_fail@plt+0xd288>
   1e35c:	lsr	r3, r4, ip
   1e360:	orr	r3, r3, r5, lsl fp
   1e364:	lsr	r2, r5, ip
   1e368:	orr	r3, r3, r5, lsr sl
   1e36c:	adds	r0, r0, r4
   1e370:	mov	r4, r3
   1e374:	lsl	r3, r2, ip
   1e378:	orr	r3, r3, r4, lsl sl
   1e37c:	lsl	ip, r4, ip
   1e380:	orr	r3, r3, r4, lsr fp
   1e384:	adc	r1, r1, r5
   1e388:	subs	r0, r0, ip
   1e38c:	mov	r5, r2
   1e390:	sbc	r1, r1, r3
   1e394:	cmp	lr, #0
   1e398:	strdne	r4, [lr]
   1e39c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e3a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e3a4:	mov	r7, r0
   1e3a8:	ldr	r6, [pc, #72]	; 1e3f8 <__assert_fail@plt+0xd340>
   1e3ac:	ldr	r5, [pc, #72]	; 1e3fc <__assert_fail@plt+0xd344>
   1e3b0:	add	r6, pc, r6
   1e3b4:	add	r5, pc, r5
   1e3b8:	sub	r6, r6, r5
   1e3bc:	mov	r8, r1
   1e3c0:	mov	r9, r2
   1e3c4:	bl	10e28 <calloc@plt-0x20>
   1e3c8:	asrs	r6, r6, #2
   1e3cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e3d0:	mov	r4, #0
   1e3d4:	add	r4, r4, #1
   1e3d8:	ldr	r3, [r5], #4
   1e3dc:	mov	r2, r9
   1e3e0:	mov	r1, r8
   1e3e4:	mov	r0, r7
   1e3e8:	blx	r3
   1e3ec:	cmp	r6, r4
   1e3f0:	bne	1e3d4 <__assert_fail@plt+0xd31c>
   1e3f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e3f8:	andeq	r1, r1, r4, asr fp
   1e3fc:	andeq	r1, r1, ip, asr #22
   1e400:	bx	lr
   1e404:	ldr	r3, [pc, #12]	; 1e418 <__assert_fail@plt+0xd360>
   1e408:	mov	r1, #0
   1e40c:	add	r3, pc, r3
   1e410:	ldr	r2, [r3]
   1e414:	b	10ff8 <__cxa_atexit@plt>
   1e418:	ldrdeq	r1, [r1], -r4

Disassembly of section .fini:

0001e41c <.fini>:
   1e41c:	push	{r3, lr}
   1e420:	pop	{r3, pc}
