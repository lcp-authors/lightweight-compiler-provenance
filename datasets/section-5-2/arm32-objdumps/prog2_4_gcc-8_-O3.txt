
../repos/prog2/4:     file format elf32-littlearm


Disassembly of section .init:

00010960 <.init>:
   10960:	push	{r3, lr}
   10964:	bl	10b04 <_start@@Base+0x3c>
   10968:	pop	{r3, pc}

Disassembly of section .plt:

0001096c <strcmp@plt-0x14>:
   1096c:	push	{lr}		; (str lr, [sp, #-4]!)
   10970:	ldr	lr, [pc, #4]	; 1097c <strcmp@plt-0x4>
   10974:	add	lr, pc, lr
   10978:	ldr	pc, [lr, #8]!
   1097c:	andeq	r2, r1, r4, lsl #13

00010980 <strcmp@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #73728	; 0x12000
   10988:	ldr	pc, [ip, #1668]!	; 0x684

0001098c <printf@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #73728	; 0x12000
   10994:	ldr	pc, [ip, #1660]!	; 0x67c

00010998 <free@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #73728	; 0x12000
   109a0:	ldr	pc, [ip, #1652]!	; 0x674

000109a4 <memcpy@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #73728	; 0x12000
   109ac:	ldr	pc, [ip, #1644]!	; 0x66c

000109b0 <strdup@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #73728	; 0x12000
   109b8:	ldr	pc, [ip, #1636]!	; 0x664

000109bc <strcpy@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #73728	; 0x12000
   109c4:	ldr	pc, [ip, #1628]!	; 0x65c

000109c8 <puts@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #73728	; 0x12000
   109d0:	ldr	pc, [ip, #1620]!	; 0x654

000109d4 <malloc@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #73728	; 0x12000
   109dc:	ldr	pc, [ip, #1612]!	; 0x64c

000109e0 <__libc_start_main@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #73728	; 0x12000
   109e8:	ldr	pc, [ip, #1604]!	; 0x644

000109ec <__gmon_start__@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #73728	; 0x12000
   109f4:	ldr	pc, [ip, #1596]!	; 0x63c

000109f8 <strlen@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #73728	; 0x12000
   10a00:	ldr	pc, [ip, #1588]!	; 0x634

00010a04 <setvbuf@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #73728	; 0x12000
   10a0c:	ldr	pc, [ip, #1580]!	; 0x62c

00010a10 <putchar@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #73728	; 0x12000
   10a18:	ldr	pc, [ip, #1572]!	; 0x624

00010a1c <abort@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #73728	; 0x12000
   10a24:	ldr	pc, [ip, #1564]!	; 0x61c

Disassembly of section .text:

00010a28 <main@@Base>:
   10a28:	mov	r3, #0
   10a2c:	movw	r1, #12372	; 0x3054
   10a30:	movt	r1, #2
   10a34:	mov	r2, #2
   10a38:	str	r4, [sp, #-8]!
   10a3c:	ldr	r0, [r1]
   10a40:	mov	r1, r3
   10a44:	str	lr, [sp, #4]
   10a48:	bl	10a04 <setvbuf@plt>
   10a4c:	mov	r3, #0
   10a50:	movw	r1, #12368	; 0x3050
   10a54:	movt	r1, #2
   10a58:	mov	r2, #2
   10a5c:	ldr	r0, [r1]
   10a60:	mov	r1, r3
   10a64:	bl	10a04 <setvbuf@plt>
   10a68:	bl	11020 <teste_lista_nova@@Base>
   10a6c:	mov	r4, r0
   10a70:	bl	110b4 <teste_lista_insere@@Base>
   10a74:	add	r4, r4, r0
   10a78:	bl	11428 <teste_lista_remove@@Base>
   10a7c:	add	r4, r4, r0
   10a80:	bl	115e0 <teste_lista_pesquisa@@Base>
   10a84:	add	r4, r4, r0
   10a88:	bl	11788 <teste_lista_ordena@@Base>
   10a8c:	add	r4, r4, r0
   10a90:	bl	11994 <teste_lista_inverte@@Base>
   10a94:	adds	r1, r4, r0
   10a98:	bne	10ab8 <main@@Base+0x90>
   10a9c:	movw	r0, #9580	; 0x256c
   10aa0:	movt	r0, #1
   10aa4:	bl	109c8 <puts@plt>
   10aa8:	ldr	r4, [sp]
   10aac:	add	sp, sp, #4
   10ab0:	mov	r0, #0
   10ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ab8:	movw	r0, #9604	; 0x2584
   10abc:	movt	r0, #1
   10ac0:	bl	1098c <printf@plt>
   10ac4:	b	10aa8 <main@@Base+0x80>

00010ac8 <_start@@Base>:
   10ac8:	mov	fp, #0
   10acc:	mov	lr, #0
   10ad0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ad4:	mov	r2, sp
   10ad8:	push	{r2}		; (str r2, [sp, #-4]!)
   10adc:	push	{r0}		; (str r0, [sp, #-4]!)
   10ae0:	ldr	ip, [pc, #16]	; 10af8 <_start@@Base+0x30>
   10ae4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ae8:	ldr	r0, [pc, #12]	; 10afc <_start@@Base+0x34>
   10aec:	ldr	r3, [pc, #12]	; 10b00 <_start@@Base+0x38>
   10af0:	bl	109e0 <__libc_start_main@plt>
   10af4:	bl	10a1c <abort@plt>
   10af8:	andeq	r2, r1, ip, asr r0
   10afc:	andeq	r0, r1, r8, lsr #20
   10b00:	strdeq	r1, [r1], -ip
   10b04:	ldr	r3, [pc, #20]	; 10b20 <_start@@Base+0x58>
   10b08:	ldr	r2, [pc, #20]	; 10b24 <_start@@Base+0x5c>
   10b0c:	add	r3, pc, r3
   10b10:	ldr	r2, [r3, r2]
   10b14:	cmp	r2, #0
   10b18:	bxeq	lr
   10b1c:	b	109ec <__gmon_start__@plt>
   10b20:	andeq	r2, r1, ip, ror #9
   10b24:	andeq	r0, r0, r4, asr #32
   10b28:	ldr	r0, [pc, #24]	; 10b48 <_start@@Base+0x80>
   10b2c:	ldr	r3, [pc, #24]	; 10b4c <_start@@Base+0x84>
   10b30:	cmp	r3, r0
   10b34:	bxeq	lr
   10b38:	ldr	r3, [pc, #16]	; 10b50 <_start@@Base+0x88>
   10b3c:	cmp	r3, #0
   10b40:	bxeq	lr
   10b44:	bx	r3
   10b48:	andeq	r3, r2, r0, asr r0
   10b4c:	andeq	r3, r2, r0, asr r0
   10b50:	andeq	r0, r0, r0
   10b54:	ldr	r0, [pc, #36]	; 10b80 <_start@@Base+0xb8>
   10b58:	ldr	r1, [pc, #36]	; 10b84 <_start@@Base+0xbc>
   10b5c:	sub	r1, r1, r0
   10b60:	asr	r1, r1, #2
   10b64:	add	r1, r1, r1, lsr #31
   10b68:	asrs	r1, r1, #1
   10b6c:	bxeq	lr
   10b70:	ldr	r3, [pc, #16]	; 10b88 <_start@@Base+0xc0>
   10b74:	cmp	r3, #0
   10b78:	bxeq	lr
   10b7c:	bx	r3
   10b80:	andeq	r3, r2, r0, asr r0
   10b84:	andeq	r3, r2, r0, asr r0
   10b88:	andeq	r0, r0, r0
   10b8c:	push	{r4, lr}
   10b90:	ldr	r4, [pc, #24]	; 10bb0 <_start@@Base+0xe8>
   10b94:	ldrb	r3, [r4]
   10b98:	cmp	r3, #0
   10b9c:	popne	{r4, pc}
   10ba0:	bl	10b28 <_start@@Base+0x60>
   10ba4:	mov	r3, #1
   10ba8:	strb	r3, [r4]
   10bac:	pop	{r4, pc}
   10bb0:	andeq	r3, r2, r8, asr r0
   10bb4:	b	10b54 <_start@@Base+0x8c>
   10bb8:	push	{r0, r1, r2, r3}
   10bbc:	mov	r0, #12
   10bc0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10bc4:	mov	r4, #0
   10bc8:	strd	r6, [sp, #8]
   10bcc:	strd	r8, [sp, #16]
   10bd0:	str	lr, [sp, #24]
   10bd4:	sub	sp, sp, #12
   10bd8:	bl	109d4 <malloc@plt>
   10bdc:	mov	r9, r0
   10be0:	mov	r1, #0
   10be4:	mov	r0, #0
   10be8:	mov	r3, #2
   10bec:	add	r2, sp, #44	; 0x2c
   10bf0:	strd	r0, [r9]
   10bf4:	str	r2, [sp, #4]
   10bf8:	str	r3, [r9, #8]
   10bfc:	b	10c40 <_start@@Base+0x178>
   10c00:	bl	109d4 <malloc@plt>
   10c04:	mov	r5, r0
   10c08:	mov	r0, r6
   10c0c:	mov	r7, r5
   10c10:	str	r5, [r8, #4]
   10c14:	str	r8, [r5, #8]
   10c18:	bl	109f8 <strlen@plt>
   10c1c:	add	r0, r0, #1
   10c20:	bl	109d4 <malloc@plt>
   10c24:	mov	r1, r6
   10c28:	str	r0, [r5]
   10c2c:	bl	109bc <strcpy@plt>
   10c30:	cmp	r4, #1
   10c34:	beq	10c8c <_start@@Base+0x1c4>
   10c38:	add	r4, r4, #1
   10c3c:	mov	r8, r7
   10c40:	ldr	r3, [sp, #4]
   10c44:	cmp	r4, #0
   10c48:	mov	r0, #12
   10c4c:	add	r2, r3, #4
   10c50:	ldr	r6, [r3]
   10c54:	str	r2, [sp, #4]
   10c58:	bne	10c00 <_start@@Base+0x138>
   10c5c:	bl	109d4 <malloc@plt>
   10c60:	mov	r7, r0
   10c64:	mov	r0, r6
   10c68:	str	r4, [r7, #8]
   10c6c:	str	r7, [r9]
   10c70:	bl	109f8 <strlen@plt>
   10c74:	add	r0, r0, #1
   10c78:	bl	109d4 <malloc@plt>
   10c7c:	mov	r1, r6
   10c80:	str	r0, [r7]
   10c84:	bl	109bc <strcpy@plt>
   10c88:	b	10c38 <_start@@Base+0x170>
   10c8c:	mov	r3, #0
   10c90:	mov	r0, r9
   10c94:	str	r5, [r9, #4]
   10c98:	str	r3, [r5, #4]
   10c9c:	add	sp, sp, #12
   10ca0:	ldrd	r4, [sp]
   10ca4:	ldrd	r6, [sp, #8]
   10ca8:	ldrd	r8, [sp, #16]
   10cac:	ldr	lr, [sp, #24]
   10cb0:	add	sp, sp, #28
   10cb4:	add	sp, sp, #16
   10cb8:	bx	lr
   10cbc:	push	{r0, r1, r2, r3}
   10cc0:	mov	r0, #12
   10cc4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10cc8:	mov	r4, #0
   10ccc:	strd	r6, [sp, #8]
   10cd0:	strd	r8, [sp, #16]
   10cd4:	str	lr, [sp, #24]
   10cd8:	sub	sp, sp, #12
   10cdc:	bl	109d4 <malloc@plt>
   10ce0:	mov	r9, r0
   10ce4:	mov	r1, #0
   10ce8:	mov	r0, #0
   10cec:	mov	r3, #7
   10cf0:	add	r2, sp, #44	; 0x2c
   10cf4:	strd	r0, [r9]
   10cf8:	str	r2, [sp, #4]
   10cfc:	str	r3, [r9, #8]
   10d00:	b	10d44 <_start@@Base+0x27c>
   10d04:	bl	109d4 <malloc@plt>
   10d08:	mov	r5, r0
   10d0c:	mov	r0, r6
   10d10:	mov	r7, r5
   10d14:	str	r5, [r8, #4]
   10d18:	str	r8, [r5, #8]
   10d1c:	bl	109f8 <strlen@plt>
   10d20:	add	r0, r0, #1
   10d24:	bl	109d4 <malloc@plt>
   10d28:	mov	r1, r6
   10d2c:	str	r0, [r5]
   10d30:	bl	109bc <strcpy@plt>
   10d34:	cmp	r4, #6
   10d38:	beq	10d90 <_start@@Base+0x2c8>
   10d3c:	add	r4, r4, #1
   10d40:	mov	r8, r7
   10d44:	ldr	r3, [sp, #4]
   10d48:	cmp	r4, #0
   10d4c:	mov	r0, #12
   10d50:	add	r2, r3, #4
   10d54:	ldr	r6, [r3]
   10d58:	str	r2, [sp, #4]
   10d5c:	bne	10d04 <_start@@Base+0x23c>
   10d60:	bl	109d4 <malloc@plt>
   10d64:	mov	r7, r0
   10d68:	mov	r0, r6
   10d6c:	str	r4, [r7, #8]
   10d70:	str	r7, [r9]
   10d74:	bl	109f8 <strlen@plt>
   10d78:	add	r0, r0, #1
   10d7c:	bl	109d4 <malloc@plt>
   10d80:	mov	r1, r6
   10d84:	str	r0, [r7]
   10d88:	bl	109bc <strcpy@plt>
   10d8c:	b	10d3c <_start@@Base+0x274>
   10d90:	mov	r3, #0
   10d94:	mov	r0, r9
   10d98:	str	r5, [r9, #4]
   10d9c:	str	r3, [r5, #4]
   10da0:	add	sp, sp, #12
   10da4:	ldrd	r4, [sp]
   10da8:	ldrd	r6, [sp, #8]
   10dac:	ldrd	r8, [sp, #16]
   10db0:	ldr	lr, [sp, #24]
   10db4:	add	sp, sp, #28
   10db8:	add	sp, sp, #16
   10dbc:	bx	lr
   10dc0:	push	{r0, r1, r2, r3}
   10dc4:	mov	r0, #12
   10dc8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10dcc:	mov	r4, #0
   10dd0:	strd	r6, [sp, #8]
   10dd4:	strd	r8, [sp, #16]
   10dd8:	str	lr, [sp, #24]
   10ddc:	sub	sp, sp, #12
   10de0:	bl	109d4 <malloc@plt>
   10de4:	mov	r9, r0
   10de8:	mov	r1, #0
   10dec:	mov	r0, #0
   10df0:	mov	r3, #5
   10df4:	add	r2, sp, #44	; 0x2c
   10df8:	strd	r0, [r9]
   10dfc:	str	r2, [sp, #4]
   10e00:	str	r3, [r9, #8]
   10e04:	b	10e48 <_start@@Base+0x380>
   10e08:	bl	109d4 <malloc@plt>
   10e0c:	mov	r5, r0
   10e10:	mov	r0, r6
   10e14:	mov	r7, r5
   10e18:	str	r5, [r8, #4]
   10e1c:	str	r8, [r5, #8]
   10e20:	bl	109f8 <strlen@plt>
   10e24:	add	r0, r0, #1
   10e28:	bl	109d4 <malloc@plt>
   10e2c:	mov	r1, r6
   10e30:	str	r0, [r5]
   10e34:	bl	109bc <strcpy@plt>
   10e38:	cmp	r4, #4
   10e3c:	beq	10e94 <_start@@Base+0x3cc>
   10e40:	add	r4, r4, #1
   10e44:	mov	r8, r7
   10e48:	ldr	r3, [sp, #4]
   10e4c:	cmp	r4, #0
   10e50:	mov	r0, #12
   10e54:	add	r2, r3, #4
   10e58:	ldr	r6, [r3]
   10e5c:	str	r2, [sp, #4]
   10e60:	bne	10e08 <_start@@Base+0x340>
   10e64:	bl	109d4 <malloc@plt>
   10e68:	mov	r7, r0
   10e6c:	mov	r0, r6
   10e70:	str	r4, [r7, #8]
   10e74:	str	r7, [r9]
   10e78:	bl	109f8 <strlen@plt>
   10e7c:	add	r0, r0, #1
   10e80:	bl	109d4 <malloc@plt>
   10e84:	mov	r1, r6
   10e88:	str	r0, [r7]
   10e8c:	bl	109bc <strcpy@plt>
   10e90:	b	10e40 <_start@@Base+0x378>
   10e94:	mov	r3, #0
   10e98:	mov	r0, r9
   10e9c:	str	r5, [r9, #4]
   10ea0:	str	r3, [r5, #4]
   10ea4:	add	sp, sp, #12
   10ea8:	ldrd	r4, [sp]
   10eac:	ldrd	r6, [sp, #8]
   10eb0:	ldrd	r8, [sp, #16]
   10eb4:	ldr	lr, [sp, #24]
   10eb8:	add	sp, sp, #28
   10ebc:	add	sp, sp, #16
   10ec0:	bx	lr

00010ec4 <_l@@Base>:
   10ec4:	push	{r0, r1, r2, r3}
   10ec8:	mov	r0, #12
   10ecc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10ed0:	strd	r6, [sp, #8]
   10ed4:	strd	r8, [sp, #16]
   10ed8:	str	lr, [sp, #24]
   10edc:	sub	sp, sp, #12
   10ee0:	ldr	r8, [sp, #40]	; 0x28
   10ee4:	bl	109d4 <malloc@plt>
   10ee8:	mov	r9, r0
   10eec:	mov	r1, #0
   10ef0:	mov	r0, #0
   10ef4:	add	r3, sp, #44	; 0x2c
   10ef8:	cmp	r8, #0
   10efc:	strd	r0, [r9]
   10f00:	str	r3, [sp, #4]
   10f04:	str	r8, [r9, #8]
   10f08:	ble	10f90 <_l@@Base+0xcc>
   10f0c:	mov	r5, #0
   10f10:	b	10f50 <_l@@Base+0x8c>
   10f14:	bl	109d4 <malloc@plt>
   10f18:	mov	r4, r0
   10f1c:	mov	r0, r6
   10f20:	add	r5, r5, #1
   10f24:	str	r4, [r7, #4]
   10f28:	str	r7, [r4, #8]
   10f2c:	bl	109f8 <strlen@plt>
   10f30:	add	r0, r0, #1
   10f34:	bl	109d4 <malloc@plt>
   10f38:	mov	r1, r6
   10f3c:	str	r0, [r4]
   10f40:	bl	109bc <strcpy@plt>
   10f44:	cmp	r8, r5
   10f48:	beq	10f94 <_l@@Base+0xd0>
   10f4c:	mov	r7, r4
   10f50:	ldr	r3, [sp, #4]
   10f54:	cmp	r5, #0
   10f58:	mov	r0, #12
   10f5c:	add	r2, r3, #4
   10f60:	ldr	r6, [r3]
   10f64:	str	r2, [sp, #4]
   10f68:	bne	10f14 <_l@@Base+0x50>
   10f6c:	bl	109d4 <malloc@plt>
   10f70:	mov	r4, r0
   10f74:	mov	r0, r6
   10f78:	str	r5, [r4, #8]
   10f7c:	mov	r5, #1
   10f80:	str	r4, [r9]
   10f84:	bl	109f8 <strlen@plt>
   10f88:	add	r0, r0, r5
   10f8c:	b	10f34 <_l@@Base+0x70>
   10f90:	mov	r4, #0
   10f94:	mov	r3, #0
   10f98:	mov	r0, r9
   10f9c:	str	r4, [r9, #4]
   10fa0:	str	r3, [r4, #4]
   10fa4:	add	sp, sp, #12
   10fa8:	ldrd	r4, [sp]
   10fac:	ldrd	r6, [sp, #8]
   10fb0:	ldrd	r8, [sp, #16]
   10fb4:	ldr	lr, [sp, #24]
   10fb8:	add	sp, sp, #28
   10fbc:	add	sp, sp, #16
   10fc0:	bx	lr

00010fc4 <_f@@Base>:
   10fc4:	cmp	r0, #0
   10fc8:	beq	11014 <_f@@Base+0x50>
   10fcc:	ldr	r2, [r0]
   10fd0:	cmp	r1, #0
   10fd4:	movle	r3, #0
   10fd8:	movgt	r3, #1
   10fdc:	cmp	r2, #0
   10fe0:	moveq	r3, #0
   10fe4:	cmp	r3, #0
   10fe8:	beq	11004 <_f@@Base+0x40>
   10fec:	mov	r3, #0
   10ff0:	ldr	r2, [r2, #4]
   10ff4:	add	r3, r3, #1
   10ff8:	cmp	r2, #0
   10ffc:	cmpne	r1, r3
   11000:	bgt	10ff0 <_f@@Base+0x2c>
   11004:	cmp	r1, r3
   11008:	movwne	r0, #9272	; 0x2438
   1100c:	movtne	r0, #1
   11010:	beq	11018 <_f@@Base+0x54>
   11014:	bx	lr
   11018:	ldr	r0, [r2]
   1101c:	bx	lr

00011020 <teste_lista_nova@@Base>:
   11020:	movw	r0, #8300	; 0x206c
   11024:	movt	r0, #1
   11028:	strd	r4, [sp, #-16]!
   1102c:	str	r6, [sp, #8]
   11030:	str	lr, [sp, #12]
   11034:	bl	1098c <printf@plt>
   11038:	bl	11bbc <lista_nova@@Base>
   1103c:	subs	r5, r0, #0
   11040:	beq	11098 <teste_lista_nova@@Base+0x78>
   11044:	ldr	r4, [r5, #8]
   11048:	cmp	r4, #0
   1104c:	bne	11074 <teste_lista_nova@@Base+0x54>
   11050:	bl	11be4 <lista_apaga@@Base>
   11054:	movw	r0, #8340	; 0x2094
   11058:	movt	r0, #1
   1105c:	bl	109c8 <puts@plt>
   11060:	mov	r0, r4
   11064:	ldrd	r4, [sp]
   11068:	ldr	r6, [sp, #8]
   1106c:	add	sp, sp, #12
   11070:	pop	{pc}		; (ldr pc, [sp], #4)
   11074:	movw	r0, #8344	; 0x2098
   11078:	movt	r0, #1
   1107c:	bl	1098c <printf@plt>
   11080:	mov	r0, r5
   11084:	mov	r4, #1
   11088:	bl	11be4 <lista_apaga@@Base>
   1108c:	mov	r0, #10
   11090:	bl	10a10 <putchar@plt>
   11094:	b	11060 <teste_lista_nova@@Base+0x40>
   11098:	movw	r0, #8316	; 0x207c
   1109c:	movt	r0, #1
   110a0:	bl	1098c <printf@plt>
   110a4:	mov	r0, #10
   110a8:	mov	r4, #1
   110ac:	bl	10a10 <putchar@plt>
   110b0:	b	11060 <teste_lista_nova@@Base+0x40>

000110b4 <teste_lista_insere@@Base>:
   110b4:	movw	r2, #8380	; 0x20bc
   110b8:	movt	r2, #1
   110bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   110c0:	mov	r1, r2
   110c4:	mov	r0, #2
   110c8:	strd	r6, [sp, #8]
   110cc:	str	r8, [sp, #16]
   110d0:	str	lr, [sp, #20]
   110d4:	bl	10bb8 <_start@@Base+0xf0>
   110d8:	mov	r4, r0
   110dc:	movw	r0, #8384	; 0x20c0
   110e0:	movt	r0, #1
   110e4:	bl	1098c <printf@plt>
   110e8:	ldr	r3, [r4]
   110ec:	mov	r0, r4
   110f0:	movw	r1, #8404	; 0x20d4
   110f4:	movt	r1, #1
   110f8:	ldr	r2, [r3, #4]
   110fc:	bl	11c90 <lista_insere@@Base>
   11100:	cmp	r0, #0
   11104:	beq	11370 <teste_lista_insere@@Base+0x2bc>
   11108:	ldr	r3, [r4, #8]
   1110c:	cmp	r3, #3
   11110:	moveq	r5, #0
   11114:	bne	111dc <teste_lista_insere@@Base+0x128>
   11118:	ldr	r6, [r4]
   1111c:	movw	r1, #8380	; 0x20bc
   11120:	movt	r1, #1
   11124:	ldr	r0, [r6]
   11128:	bl	10980 <strcmp@plt>
   1112c:	cmp	r0, #0
   11130:	bne	11150 <teste_lista_insere@@Base+0x9c>
   11134:	ldr	r7, [r6, #4]
   11138:	movw	r1, #8404	; 0x20d4
   1113c:	movt	r1, #1
   11140:	ldr	r0, [r7]
   11144:	bl	10980 <strcmp@plt>
   11148:	cmp	r0, #0
   1114c:	beq	11330 <teste_lista_insere@@Base+0x27c>
   11150:	movw	r0, #8456	; 0x2108
   11154:	movt	r0, #1
   11158:	bl	1098c <printf@plt>
   1115c:	ldr	r6, [r4]
   11160:	add	r5, r5, #1
   11164:	mov	r2, r6
   11168:	movw	r1, #8404	; 0x20d4
   1116c:	movt	r1, #1
   11170:	mov	r0, r4
   11174:	bl	11c90 <lista_insere@@Base>
   11178:	ldr	r3, [r4]
   1117c:	cmp	r3, r0
   11180:	beq	11194 <teste_lista_insere@@Base+0xe0>
   11184:	movw	r0, #8512	; 0x2140
   11188:	movt	r0, #1
   1118c:	add	r5, r5, #1
   11190:	bl	1098c <printf@plt>
   11194:	ldr	r3, [r4, #8]
   11198:	cmp	r3, #4
   1119c:	beq	111fc <teste_lista_insere@@Base+0x148>
   111a0:	movw	r0, #8560	; 0x2170
   111a4:	movt	r0, #1
   111a8:	bl	1098c <printf@plt>
   111ac:	ldr	r3, [r4, #8]
   111b0:	add	r5, r5, #1
   111b4:	cmp	r3, #4
   111b8:	beq	111fc <teste_lista_insere@@Base+0x148>
   111bc:	mov	r0, #10
   111c0:	bl	10a10 <putchar@plt>
   111c4:	mov	r0, r5
   111c8:	ldrd	r4, [sp]
   111cc:	ldrd	r6, [sp, #8]
   111d0:	ldr	r8, [sp, #16]
   111d4:	add	sp, sp, #20
   111d8:	pop	{pc}		; (ldr pc, [sp], #4)
   111dc:	mov	r5, #1
   111e0:	movw	r0, #8740	; 0x2224
   111e4:	movt	r0, #1
   111e8:	bl	1098c <printf@plt>
   111ec:	ldr	r3, [r4, #8]
   111f0:	cmp	r3, #3
   111f4:	beq	11118 <teste_lista_insere@@Base+0x64>
   111f8:	b	111bc <teste_lista_insere@@Base+0x108>
   111fc:	ldr	r6, [r4]
   11200:	movw	r1, #8404	; 0x20d4
   11204:	movt	r1, #1
   11208:	ldr	r0, [r6]
   1120c:	bl	10980 <strcmp@plt>
   11210:	cmp	r0, #0
   11214:	bne	11250 <teste_lista_insere@@Base+0x19c>
   11218:	ldr	r6, [r6, #4]
   1121c:	movw	r1, #8380	; 0x20bc
   11220:	movt	r1, #1
   11224:	ldr	r0, [r6]
   11228:	bl	10980 <strcmp@plt>
   1122c:	cmp	r0, #0
   11230:	bne	11250 <teste_lista_insere@@Base+0x19c>
   11234:	ldr	r6, [r6, #4]
   11238:	movw	r1, #8404	; 0x20d4
   1123c:	movt	r1, #1
   11240:	ldr	r0, [r6]
   11244:	bl	10980 <strcmp@plt>
   11248:	cmp	r0, #0
   1124c:	beq	113e8 <teste_lista_insere@@Base+0x334>
   11250:	movw	r0, #8456	; 0x2108
   11254:	movt	r0, #1
   11258:	add	r5, r5, #1
   1125c:	bl	1098c <printf@plt>
   11260:	movw	r1, #8404	; 0x20d4
   11264:	movt	r1, #1
   11268:	mov	r2, #0
   1126c:	mov	r0, r4
   11270:	bl	11c90 <lista_insere@@Base>
   11274:	ldr	r3, [r4, #8]
   11278:	cmp	r3, #5
   1127c:	bne	11350 <teste_lista_insere@@Base+0x29c>
   11280:	ldr	r3, [r4]
   11284:	movw	r1, #8404	; 0x20d4
   11288:	movt	r1, #1
   1128c:	ldr	r3, [r3, #4]
   11290:	ldr	r3, [r3, #4]
   11294:	ldr	r3, [r3, #4]
   11298:	ldr	r3, [r3, #4]
   1129c:	ldr	r0, [r3]
   112a0:	bl	10980 <strcmp@plt>
   112a4:	cmp	r0, #0
   112a8:	bne	11408 <teste_lista_insere@@Base+0x354>
   112ac:	mov	r0, r4
   112b0:	bl	11be4 <lista_apaga@@Base>
   112b4:	bl	11bbc <lista_nova@@Base>
   112b8:	mov	r4, r0
   112bc:	movw	r1, #8404	; 0x20d4
   112c0:	movt	r1, #1
   112c4:	mov	r2, #0
   112c8:	bl	11c90 <lista_insere@@Base>
   112cc:	ldr	r3, [r4, #8]
   112d0:	cmp	r3, #1
   112d4:	beq	11398 <teste_lista_insere@@Base+0x2e4>
   112d8:	movw	r0, #8680	; 0x21e8
   112dc:	movt	r0, #1
   112e0:	bl	1098c <printf@plt>
   112e4:	mov	r0, r4
   112e8:	add	r5, r5, #1
   112ec:	bl	11c68 <lista_tamanho@@Base>
   112f0:	cmp	r0, #1
   112f4:	bne	111bc <teste_lista_insere@@Base+0x108>
   112f8:	ldr	r3, [r4]
   112fc:	movw	r1, #8404	; 0x20d4
   11300:	movt	r1, #1
   11304:	ldr	r0, [r3]
   11308:	bl	10980 <strcmp@plt>
   1130c:	cmp	r0, #0
   11310:	beq	1141c <teste_lista_insere@@Base+0x368>
   11314:	movw	r0, #8456	; 0x2108
   11318:	movt	r0, #1
   1131c:	bl	1098c <printf@plt>
   11320:	mov	r0, r4
   11324:	add	r5, r5, #1
   11328:	bl	11be4 <lista_apaga@@Base>
   1132c:	b	111bc <teste_lista_insere@@Base+0x108>
   11330:	ldr	r3, [r7, #4]
   11334:	movw	r1, #8380	; 0x20bc
   11338:	movt	r1, #1
   1133c:	ldr	r0, [r3]
   11340:	bl	10980 <strcmp@plt>
   11344:	cmp	r0, #0
   11348:	beq	11164 <teste_lista_insere@@Base+0xb0>
   1134c:	b	11150 <teste_lista_insere@@Base+0x9c>
   11350:	movw	r0, #8620	; 0x21ac
   11354:	movt	r0, #1
   11358:	bl	1098c <printf@plt>
   1135c:	ldr	r3, [r4, #8]
   11360:	add	r5, r5, #1
   11364:	cmp	r3, #5
   11368:	bne	111bc <teste_lista_insere@@Base+0x108>
   1136c:	b	11280 <teste_lista_insere@@Base+0x1cc>
   11370:	movw	r0, #8412	; 0x20dc
   11374:	movt	r0, #1
   11378:	bl	1098c <printf@plt>
   1137c:	ldr	r3, [r4, #8]
   11380:	cmp	r3, #3
   11384:	bne	11390 <teste_lista_insere@@Base+0x2dc>
   11388:	mov	r5, #1
   1138c:	b	11118 <teste_lista_insere@@Base+0x64>
   11390:	mov	r5, #2
   11394:	b	111e0 <teste_lista_insere@@Base+0x12c>
   11398:	mov	r0, r4
   1139c:	bl	11c68 <lista_tamanho@@Base>
   113a0:	cmp	r0, #1
   113a4:	bne	113cc <teste_lista_insere@@Base+0x318>
   113a8:	ldr	r3, [r4]
   113ac:	movw	r1, #8404	; 0x20d4
   113b0:	movt	r1, #1
   113b4:	ldr	r0, [r3]
   113b8:	bl	10980 <strcmp@plt>
   113bc:	cmp	r0, #0
   113c0:	bne	11314 <teste_lista_insere@@Base+0x260>
   113c4:	mov	r0, r4
   113c8:	bl	11be4 <lista_apaga@@Base>
   113cc:	cmp	r5, #0
   113d0:	bne	111bc <teste_lista_insere@@Base+0x108>
   113d4:	movw	r0, #8340	; 0x2094
   113d8:	movt	r0, #1
   113dc:	bl	109c8 <puts@plt>
   113e0:	mov	r5, #0
   113e4:	b	111c4 <teste_lista_insere@@Base+0x110>
   113e8:	ldr	r3, [r6, #4]
   113ec:	movw	r1, #8380	; 0x20bc
   113f0:	movt	r1, #1
   113f4:	ldr	r0, [r3]
   113f8:	bl	10980 <strcmp@plt>
   113fc:	cmp	r0, #0
   11400:	beq	11260 <teste_lista_insere@@Base+0x1ac>
   11404:	b	11250 <teste_lista_insere@@Base+0x19c>
   11408:	movw	r0, #8456	; 0x2108
   1140c:	movt	r0, #1
   11410:	add	r5, r5, #1
   11414:	bl	1098c <printf@plt>
   11418:	b	112ac <teste_lista_insere@@Base+0x1f8>
   1141c:	mov	r0, r4
   11420:	bl	11be4 <lista_apaga@@Base>
   11424:	b	111bc <teste_lista_insere@@Base+0x108>

00011428 <teste_lista_remove@@Base>:
   11428:	movw	r2, #8812	; 0x226c
   1142c:	movt	r2, #1
   11430:	strd	r4, [sp, #-16]!
   11434:	movw	r1, #8816	; 0x2270
   11438:	movt	r1, #1
   1143c:	str	r6, [sp, #8]
   11440:	str	lr, [sp, #12]
   11444:	sub	sp, sp, #8
   11448:	movw	r3, #8800	; 0x2260
   1144c:	movt	r3, #1
   11450:	mov	r0, #5
   11454:	stm	sp, {r1, r2}
   11458:	movw	r2, #8804	; 0x2264
   1145c:	movt	r2, #1
   11460:	movw	r1, #8808	; 0x2268
   11464:	movt	r1, #1
   11468:	bl	10dc0 <_start@@Base+0x2f8>
   1146c:	mov	r4, r0
   11470:	movw	r0, #8820	; 0x2274
   11474:	movt	r0, #1
   11478:	bl	1098c <printf@plt>
   1147c:	ldr	r3, [r4]
   11480:	mov	r0, r4
   11484:	ldr	r3, [r3, #4]
   11488:	ldr	r3, [r3, #4]
   1148c:	ldr	r1, [r3, #4]
   11490:	bl	11d70 <lista_remove@@Base>
   11494:	ldr	r3, [r4, #4]
   11498:	cmp	r3, r0
   1149c:	moveq	r2, #1
   114a0:	moveq	r5, #0
   114a4:	beq	114bc <teste_lista_remove@@Base+0x94>
   114a8:	movw	r0, #8840	; 0x2288
   114ac:	movt	r0, #1
   114b0:	bl	1098c <printf@plt>
   114b4:	mov	r5, #1
   114b8:	mov	r2, #2
   114bc:	ldr	r3, [r4, #8]
   114c0:	cmp	r3, #4
   114c4:	beq	114d8 <teste_lista_remove@@Base+0xb0>
   114c8:	movw	r0, #8900	; 0x22c4
   114cc:	movt	r0, #1
   114d0:	mov	r5, r2
   114d4:	bl	1098c <printf@plt>
   114d8:	ldr	r6, [r4]
   114dc:	movw	r1, #8808	; 0x2268
   114e0:	movt	r1, #1
   114e4:	ldr	r0, [r6]
   114e8:	bl	10980 <strcmp@plt>
   114ec:	cmp	r0, #0
   114f0:	bne	11510 <teste_lista_remove@@Base+0xe8>
   114f4:	ldr	r6, [r6, #4]
   114f8:	movw	r1, #8804	; 0x2264
   114fc:	movt	r1, #1
   11500:	ldr	r0, [r6]
   11504:	bl	10980 <strcmp@plt>
   11508:	cmp	r0, #0
   1150c:	beq	1156c <teste_lista_remove@@Base+0x144>
   11510:	movw	r0, #8960	; 0x2300
   11514:	movt	r0, #1
   11518:	bl	1098c <printf@plt>
   1151c:	mov	r1, #0
   11520:	mov	r0, r4
   11524:	bl	11d70 <lista_remove@@Base>
   11528:	cmp	r0, #0
   1152c:	add	r5, r5, #1
   11530:	beq	115d4 <teste_lista_remove@@Base+0x1ac>
   11534:	movw	r0, #9016	; 0x2338
   11538:	movt	r0, #1
   1153c:	bl	1098c <printf@plt>
   11540:	mov	r0, r4
   11544:	add	r5, r5, #1
   11548:	bl	11be4 <lista_apaga@@Base>
   1154c:	mov	r0, #10
   11550:	bl	10a10 <putchar@plt>
   11554:	mov	r0, r5
   11558:	add	sp, sp, #8
   1155c:	ldrd	r4, [sp]
   11560:	ldr	r6, [sp, #8]
   11564:	add	sp, sp, #12
   11568:	pop	{pc}		; (ldr pc, [sp], #4)
   1156c:	ldr	r6, [r6, #4]
   11570:	movw	r1, #8800	; 0x2260
   11574:	movt	r1, #1
   11578:	ldr	r0, [r6]
   1157c:	bl	10980 <strcmp@plt>
   11580:	cmp	r0, #0
   11584:	bne	11510 <teste_lista_remove@@Base+0xe8>
   11588:	ldr	r3, [r6, #4]
   1158c:	movw	r1, #8812	; 0x226c
   11590:	movt	r1, #1
   11594:	ldr	r0, [r3]
   11598:	bl	10980 <strcmp@plt>
   1159c:	subs	r1, r0, #0
   115a0:	bne	11510 <teste_lista_remove@@Base+0xe8>
   115a4:	mov	r0, r4
   115a8:	bl	11d70 <lista_remove@@Base>
   115ac:	cmp	r0, #0
   115b0:	bne	11534 <teste_lista_remove@@Base+0x10c>
   115b4:	mov	r0, r4
   115b8:	bl	11be4 <lista_apaga@@Base>
   115bc:	cmp	r5, #0
   115c0:	bne	1154c <teste_lista_remove@@Base+0x124>
   115c4:	movw	r0, #8340	; 0x2094
   115c8:	movt	r0, #1
   115cc:	bl	109c8 <puts@plt>
   115d0:	b	11554 <teste_lista_remove@@Base+0x12c>
   115d4:	mov	r0, r4
   115d8:	bl	11be4 <lista_apaga@@Base>
   115dc:	b	1154c <teste_lista_remove@@Base+0x124>

000115e0 <teste_lista_pesquisa@@Base>:
   115e0:	movw	ip, #8380	; 0x20bc
   115e4:	movt	ip, #1
   115e8:	strd	r4, [sp, #-16]!
   115ec:	movw	r5, #9068	; 0x236c
   115f0:	movt	r5, #1
   115f4:	str	r6, [sp, #8]
   115f8:	str	lr, [sp, #12]
   115fc:	sub	sp, sp, #16
   11600:	mov	r3, ip
   11604:	mov	r2, ip
   11608:	mov	r1, ip
   1160c:	mov	r0, #7
   11610:	str	ip, [sp]
   11614:	stmib	sp, {r5, ip}
   11618:	str	ip, [sp, #12]
   1161c:	bl	10cbc <_start@@Base+0x1f4>
   11620:	mov	r4, r0
   11624:	movw	r0, #9072	; 0x2370
   11628:	movt	r0, #1
   1162c:	bl	1098c <printf@plt>
   11630:	mov	r1, r5
   11634:	mov	r0, r4
   11638:	mov	r2, #0
   1163c:	bl	11dfc <lista_pesquisa@@Base>
   11640:	ldr	r3, [r4]
   11644:	ldr	r3, [r3, #4]
   11648:	ldr	r3, [r3, #4]
   1164c:	ldr	r3, [r3, #4]
   11650:	ldr	r3, [r3, #4]
   11654:	cmp	r3, r0
   11658:	moveq	r6, #1
   1165c:	moveq	r5, #0
   11660:	beq	11678 <teste_lista_pesquisa@@Base+0x98>
   11664:	movw	r0, #9092	; 0x2384
   11668:	movt	r0, #1
   1166c:	mov	r6, #2
   11670:	mov	r5, #1
   11674:	bl	1098c <printf@plt>
   11678:	movw	r1, #9164	; 0x23cc
   1167c:	movt	r1, #1
   11680:	mov	r2, #0
   11684:	mov	r0, r4
   11688:	bl	11dfc <lista_pesquisa@@Base>
   1168c:	cmp	r0, #0
   11690:	beq	116a4 <teste_lista_pesquisa@@Base+0xc4>
   11694:	movw	r0, #9172	; 0x23d4
   11698:	movt	r0, #1
   1169c:	mov	r5, r6
   116a0:	bl	1098c <printf@plt>
   116a4:	movw	r1, #8380	; 0x20bc
   116a8:	movt	r1, #1
   116ac:	mov	r2, #1
   116b0:	mov	r0, r4
   116b4:	bl	11dfc <lista_pesquisa@@Base>
   116b8:	ldr	r3, [r4]
   116bc:	ldr	r3, [r3, #4]
   116c0:	ldr	r3, [r3, #4]
   116c4:	ldr	r3, [r3, #4]
   116c8:	ldr	r3, [r3, #4]
   116cc:	ldr	r3, [r3, #4]
   116d0:	ldr	r3, [r3, #4]
   116d4:	cmp	r3, r0
   116d8:	beq	11740 <teste_lista_pesquisa@@Base+0x160>
   116dc:	movw	r0, #9092	; 0x2384
   116e0:	movt	r0, #1
   116e4:	bl	1098c <printf@plt>
   116e8:	movw	r1, #9164	; 0x23cc
   116ec:	movt	r1, #1
   116f0:	mov	r2, #1
   116f4:	mov	r0, r4
   116f8:	bl	11dfc <lista_pesquisa@@Base>
   116fc:	cmp	r0, #0
   11700:	add	r5, r5, #1
   11704:	beq	1177c <teste_lista_pesquisa@@Base+0x19c>
   11708:	movw	r0, #9172	; 0x23d4
   1170c:	movt	r0, #1
   11710:	bl	1098c <printf@plt>
   11714:	mov	r0, r4
   11718:	add	r5, r5, #1
   1171c:	bl	11be4 <lista_apaga@@Base>
   11720:	mov	r0, #10
   11724:	bl	10a10 <putchar@plt>
   11728:	mov	r0, r5
   1172c:	add	sp, sp, #16
   11730:	ldrd	r4, [sp]
   11734:	ldr	r6, [sp, #8]
   11738:	add	sp, sp, #12
   1173c:	pop	{pc}		; (ldr pc, [sp], #4)
   11740:	movw	r1, #9164	; 0x23cc
   11744:	movt	r1, #1
   11748:	mov	r2, #1
   1174c:	mov	r0, r4
   11750:	bl	11dfc <lista_pesquisa@@Base>
   11754:	cmp	r0, #0
   11758:	bne	11708 <teste_lista_pesquisa@@Base+0x128>
   1175c:	mov	r0, r4
   11760:	bl	11be4 <lista_apaga@@Base>
   11764:	cmp	r5, #0
   11768:	bne	11720 <teste_lista_pesquisa@@Base+0x140>
   1176c:	movw	r0, #8340	; 0x2094
   11770:	movt	r0, #1
   11774:	bl	109c8 <puts@plt>
   11778:	b	11728 <teste_lista_pesquisa@@Base+0x148>
   1177c:	mov	r0, r4
   11780:	bl	11be4 <lista_apaga@@Base>
   11784:	b	11720 <teste_lista_pesquisa@@Base+0x140>

00011788 <teste_lista_ordena@@Base>:
   11788:	movw	r2, #9248	; 0x2420
   1178c:	movt	r2, #1
   11790:	strd	r4, [sp, #-20]!	; 0xffffffec
   11794:	movw	r1, #9252	; 0x2424
   11798:	movt	r1, #1
   1179c:	strd	r6, [sp, #8]
   117a0:	str	lr, [sp, #16]
   117a4:	sub	sp, sp, #12
   117a8:	movw	r3, #9236	; 0x2414
   117ac:	movt	r3, #1
   117b0:	mov	r0, #5
   117b4:	stm	sp, {r1, r2}
   117b8:	movw	r2, #9240	; 0x2418
   117bc:	movt	r2, #1
   117c0:	movw	r1, #9244	; 0x241c
   117c4:	movt	r1, #1
   117c8:	bl	10dc0 <_start@@Base+0x2f8>
   117cc:	mov	r4, r0
   117d0:	movw	r0, #9256	; 0x2428
   117d4:	movt	r0, #1
   117d8:	bl	1098c <printf@plt>
   117dc:	mov	r0, #0
   117e0:	bl	11eb4 <lista_ordena@@Base>
   117e4:	cmn	r0, #1
   117e8:	moveq	r5, #1
   117ec:	moveq	r7, #0
   117f0:	beq	11808 <teste_lista_ordena@@Base+0x80>
   117f4:	movw	r0, #9276	; 0x243c
   117f8:	movt	r0, #1
   117fc:	mov	r5, #2
   11800:	mov	r7, #1
   11804:	bl	1098c <printf@plt>
   11808:	mov	r0, r4
   1180c:	bl	11eb4 <lista_ordena@@Base>
   11810:	ldr	r6, [r4]
   11814:	movw	r1, #9244	; 0x241c
   11818:	movt	r1, #1
   1181c:	ldr	r0, [r6]
   11820:	bl	10980 <strcmp@plt>
   11824:	cmp	r0, #0
   11828:	bne	11848 <teste_lista_ordena@@Base+0xc0>
   1182c:	ldr	r6, [r6, #4]
   11830:	movw	r1, #9240	; 0x2418
   11834:	movt	r1, #1
   11838:	ldr	r0, [r6]
   1183c:	bl	10980 <strcmp@plt>
   11840:	cmp	r0, #0
   11844:	beq	11938 <teste_lista_ordena@@Base+0x1b0>
   11848:	movw	r0, #9324	; 0x246c
   1184c:	movt	r0, #1
   11850:	bl	1098c <printf@plt>
   11854:	ldr	r6, [r4, #4]
   11858:	movw	r1, #9236	; 0x2414
   1185c:	movt	r1, #1
   11860:	ldr	r0, [r6]
   11864:	bl	10980 <strcmp@plt>
   11868:	cmp	r0, #0
   1186c:	bne	1188c <teste_lista_ordena@@Base+0x104>
   11870:	ldr	r6, [r6, #8]
   11874:	movw	r1, #9248	; 0x2420
   11878:	movt	r1, #1
   1187c:	ldr	r0, [r6]
   11880:	bl	10980 <strcmp@plt>
   11884:	cmp	r0, #0
   11888:	beq	118c4 <teste_lista_ordena@@Base+0x13c>
   1188c:	movw	r0, #9388	; 0x24ac
   11890:	movt	r0, #1
   11894:	bl	1098c <printf@plt>
   11898:	mov	r0, r4
   1189c:	add	r5, r5, #1
   118a0:	bl	11be4 <lista_apaga@@Base>
   118a4:	mov	r0, #10
   118a8:	bl	10a10 <putchar@plt>
   118ac:	mov	r0, r5
   118b0:	add	sp, sp, #12
   118b4:	ldrd	r4, [sp]
   118b8:	ldrd	r6, [sp, #8]
   118bc:	add	sp, sp, #16
   118c0:	pop	{pc}		; (ldr pc, [sp], #4)
   118c4:	ldr	r6, [r6, #8]
   118c8:	movw	r1, #9252	; 0x2424
   118cc:	movt	r1, #1
   118d0:	ldr	r0, [r6]
   118d4:	bl	10980 <strcmp@plt>
   118d8:	cmp	r0, #0
   118dc:	bne	1188c <teste_lista_ordena@@Base+0x104>
   118e0:	ldr	r6, [r6, #8]
   118e4:	movw	r1, #9240	; 0x2418
   118e8:	movt	r1, #1
   118ec:	ldr	r0, [r6]
   118f0:	bl	10980 <strcmp@plt>
   118f4:	cmp	r0, #0
   118f8:	bne	1188c <teste_lista_ordena@@Base+0x104>
   118fc:	ldr	r3, [r6, #8]
   11900:	movw	r1, #9244	; 0x241c
   11904:	movt	r1, #1
   11908:	ldr	r0, [r3]
   1190c:	bl	10980 <strcmp@plt>
   11910:	cmp	r0, #0
   11914:	bne	1188c <teste_lista_ordena@@Base+0x104>
   11918:	mov	r0, r4
   1191c:	bl	11be4 <lista_apaga@@Base>
   11920:	cmp	r5, #0
   11924:	bne	118a4 <teste_lista_ordena@@Base+0x11c>
   11928:	movw	r0, #8340	; 0x2094
   1192c:	movt	r0, #1
   11930:	bl	109c8 <puts@plt>
   11934:	b	118ac <teste_lista_ordena@@Base+0x124>
   11938:	ldr	r6, [r6, #4]
   1193c:	movw	r1, #9252	; 0x2424
   11940:	movt	r1, #1
   11944:	ldr	r0, [r6]
   11948:	bl	10980 <strcmp@plt>
   1194c:	cmp	r0, #0
   11950:	bne	11848 <teste_lista_ordena@@Base+0xc0>
   11954:	ldr	r6, [r6, #4]
   11958:	movw	r1, #9248	; 0x2420
   1195c:	movt	r1, #1
   11960:	ldr	r0, [r6]
   11964:	bl	10980 <strcmp@plt>
   11968:	cmp	r0, #0
   1196c:	bne	11848 <teste_lista_ordena@@Base+0xc0>
   11970:	ldr	r3, [r6, #4]
   11974:	movw	r1, #9236	; 0x2414
   11978:	movt	r1, #1
   1197c:	ldr	r0, [r3]
   11980:	bl	10980 <strcmp@plt>
   11984:	cmp	r0, #0
   11988:	moveq	r5, r7
   1198c:	beq	11854 <teste_lista_ordena@@Base+0xcc>
   11990:	b	11848 <teste_lista_ordena@@Base+0xc0>

00011994 <teste_lista_inverte@@Base>:
   11994:	movw	r2, #9248	; 0x2420
   11998:	movt	r2, #1
   1199c:	strd	r4, [sp, #-16]!
   119a0:	movw	r1, #9252	; 0x2424
   119a4:	movt	r1, #1
   119a8:	str	r6, [sp, #8]
   119ac:	str	lr, [sp, #12]
   119b0:	sub	sp, sp, #8
   119b4:	movw	r3, #9236	; 0x2414
   119b8:	movt	r3, #1
   119bc:	mov	r0, #5
   119c0:	stm	sp, {r1, r2}
   119c4:	movw	r2, #9240	; 0x2418
   119c8:	movt	r2, #1
   119cc:	movw	r1, #9244	; 0x241c
   119d0:	movt	r1, #1
   119d4:	bl	10dc0 <_start@@Base+0x2f8>
   119d8:	mov	r5, r0
   119dc:	movw	r0, #9452	; 0x24ec
   119e0:	movt	r0, #1
   119e4:	bl	1098c <printf@plt>
   119e8:	mov	r0, #0
   119ec:	bl	11f60 <lista_inverte@@Base>
   119f0:	cmn	r0, #1
   119f4:	moveq	r6, #1
   119f8:	moveq	r4, #0
   119fc:	beq	11a14 <teste_lista_inverte@@Base+0x80>
   11a00:	movw	r0, #9276	; 0x243c
   11a04:	movt	r0, #1
   11a08:	mov	r6, #2
   11a0c:	mov	r4, #1
   11a10:	bl	1098c <printf@plt>
   11a14:	mov	r0, r5
   11a18:	bl	11f60 <lista_inverte@@Base>
   11a1c:	ldr	r3, [r5, #8]
   11a20:	cmp	r3, #5
   11a24:	beq	11a38 <teste_lista_inverte@@Base+0xa4>
   11a28:	movw	r0, #9472	; 0x2500
   11a2c:	movt	r0, #1
   11a30:	mov	r4, r6
   11a34:	bl	1098c <printf@plt>
   11a38:	ldr	r6, [r5]
   11a3c:	movw	r1, #9248	; 0x2420
   11a40:	movt	r1, #1
   11a44:	ldr	r0, [r6]
   11a48:	bl	10980 <strcmp@plt>
   11a4c:	cmp	r0, #0
   11a50:	bne	11a70 <teste_lista_inverte@@Base+0xdc>
   11a54:	ldr	r6, [r6, #4]
   11a58:	movw	r1, #9252	; 0x2424
   11a5c:	movt	r1, #1
   11a60:	ldr	r0, [r6]
   11a64:	bl	10980 <strcmp@plt>
   11a68:	cmp	r0, #0
   11a6c:	beq	11b64 <teste_lista_inverte@@Base+0x1d0>
   11a70:	movw	r0, #9516	; 0x252c
   11a74:	movt	r0, #1
   11a78:	add	r4, r4, #1
   11a7c:	bl	1098c <printf@plt>
   11a80:	ldr	r6, [r5, #4]
   11a84:	movw	r1, #9244	; 0x241c
   11a88:	movt	r1, #1
   11a8c:	ldr	r0, [r6]
   11a90:	bl	10980 <strcmp@plt>
   11a94:	cmp	r0, #0
   11a98:	bne	11ab8 <teste_lista_inverte@@Base+0x124>
   11a9c:	ldr	r6, [r6, #8]
   11aa0:	movw	r1, #9240	; 0x2418
   11aa4:	movt	r1, #1
   11aa8:	ldr	r0, [r6]
   11aac:	bl	10980 <strcmp@plt>
   11ab0:	cmp	r0, #0
   11ab4:	beq	11af0 <teste_lista_inverte@@Base+0x15c>
   11ab8:	movw	r0, #9388	; 0x24ac
   11abc:	movt	r0, #1
   11ac0:	bl	1098c <printf@plt>
   11ac4:	mov	r0, r5
   11ac8:	add	r4, r4, #1
   11acc:	bl	11be4 <lista_apaga@@Base>
   11ad0:	mov	r0, #10
   11ad4:	bl	10a10 <putchar@plt>
   11ad8:	mov	r0, r4
   11adc:	add	sp, sp, #8
   11ae0:	ldrd	r4, [sp]
   11ae4:	ldr	r6, [sp, #8]
   11ae8:	add	sp, sp, #12
   11aec:	pop	{pc}		; (ldr pc, [sp], #4)
   11af0:	ldr	r6, [r6, #8]
   11af4:	movw	r1, #9236	; 0x2414
   11af8:	movt	r1, #1
   11afc:	ldr	r0, [r6]
   11b00:	bl	10980 <strcmp@plt>
   11b04:	cmp	r0, #0
   11b08:	bne	11ab8 <teste_lista_inverte@@Base+0x124>
   11b0c:	ldr	r6, [r6, #8]
   11b10:	movw	r1, #9252	; 0x2424
   11b14:	movt	r1, #1
   11b18:	ldr	r0, [r6]
   11b1c:	bl	10980 <strcmp@plt>
   11b20:	cmp	r0, #0
   11b24:	bne	11ab8 <teste_lista_inverte@@Base+0x124>
   11b28:	ldr	r3, [r6, #8]
   11b2c:	movw	r1, #9248	; 0x2420
   11b30:	movt	r1, #1
   11b34:	ldr	r0, [r3]
   11b38:	bl	10980 <strcmp@plt>
   11b3c:	cmp	r0, #0
   11b40:	bne	11ab8 <teste_lista_inverte@@Base+0x124>
   11b44:	mov	r0, r5
   11b48:	bl	11be4 <lista_apaga@@Base>
   11b4c:	cmp	r4, #0
   11b50:	bne	11ad0 <teste_lista_inverte@@Base+0x13c>
   11b54:	movw	r0, #8340	; 0x2094
   11b58:	movt	r0, #1
   11b5c:	bl	109c8 <puts@plt>
   11b60:	b	11ad8 <teste_lista_inverte@@Base+0x144>
   11b64:	ldr	r6, [r6, #4]
   11b68:	movw	r1, #9236	; 0x2414
   11b6c:	movt	r1, #1
   11b70:	ldr	r0, [r6]
   11b74:	bl	10980 <strcmp@plt>
   11b78:	cmp	r0, #0
   11b7c:	bne	11a70 <teste_lista_inverte@@Base+0xdc>
   11b80:	ldr	r6, [r6, #4]
   11b84:	movw	r1, #9240	; 0x2418
   11b88:	movt	r1, #1
   11b8c:	ldr	r0, [r6]
   11b90:	bl	10980 <strcmp@plt>
   11b94:	cmp	r0, #0
   11b98:	bne	11a70 <teste_lista_inverte@@Base+0xdc>
   11b9c:	ldr	r3, [r6, #4]
   11ba0:	movw	r1, #9244	; 0x241c
   11ba4:	movt	r1, #1
   11ba8:	ldr	r0, [r3]
   11bac:	bl	10980 <strcmp@plt>
   11bb0:	cmp	r0, #0
   11bb4:	beq	11a80 <teste_lista_inverte@@Base+0xec>
   11bb8:	b	11a70 <teste_lista_inverte@@Base+0xdc>

00011bbc <lista_nova@@Base>:
   11bbc:	mov	r0, #12
   11bc0:	str	r4, [sp, #-8]!
   11bc4:	str	lr, [sp, #4]
   11bc8:	bl	109d4 <malloc@plt>
   11bcc:	cmp	r0, #0
   11bd0:	ldr	r4, [sp]
   11bd4:	add	sp, sp, #4
   11bd8:	movne	r3, #0
   11bdc:	strne	r3, [r0, #8]
   11be0:	pop	{pc}		; (ldr pc, [sp], #4)

00011be4 <lista_apaga@@Base>:
   11be4:	strd	r4, [sp, #-16]!
   11be8:	str	r6, [sp, #8]
   11bec:	subs	r6, r0, #0
   11bf0:	str	lr, [sp, #12]
   11bf4:	beq	11c58 <lista_apaga@@Base+0x74>
   11bf8:	ldr	r3, [r6, #8]
   11bfc:	cmp	r3, #0
   11c00:	beq	11c40 <lista_apaga@@Base+0x5c>
   11c04:	ldr	r5, [r6]
   11c08:	cmp	r5, #0
   11c0c:	beq	11c40 <lista_apaga@@Base+0x5c>
   11c10:	ldr	r4, [r5, #4]
   11c14:	cmp	r4, #0
   11c18:	bne	11c24 <lista_apaga@@Base+0x40>
   11c1c:	b	11c40 <lista_apaga@@Base+0x5c>
   11c20:	ldr	r4, [r4, #4]
   11c24:	ldr	r0, [r5]
   11c28:	bl	10998 <free@plt>
   11c2c:	mov	r0, r5
   11c30:	mov	r5, r4
   11c34:	bl	10998 <free@plt>
   11c38:	cmp	r4, #0
   11c3c:	bne	11c20 <lista_apaga@@Base+0x3c>
   11c40:	mov	r0, r6
   11c44:	ldrd	r4, [sp]
   11c48:	ldr	r6, [sp, #8]
   11c4c:	ldr	lr, [sp, #12]
   11c50:	add	sp, sp, #16
   11c54:	b	10998 <free@plt>
   11c58:	ldrd	r4, [sp]
   11c5c:	ldr	r6, [sp, #8]
   11c60:	add	sp, sp, #12
   11c64:	pop	{pc}		; (ldr pc, [sp], #4)

00011c68 <lista_tamanho@@Base>:
   11c68:	cmp	r0, #0
   11c6c:	ldrne	r0, [r0, #8]
   11c70:	mvneq	r0, #0
   11c74:	bx	lr

00011c78 <lista_inicio@@Base>:
   11c78:	cmp	r0, #0
   11c7c:	ldrne	r0, [r0]
   11c80:	bx	lr

00011c84 <lista_fim@@Base>:
   11c84:	cmp	r0, #0
   11c88:	ldrne	r0, [r0, #4]
   11c8c:	bx	lr

00011c90 <lista_insere@@Base>:
   11c90:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11c94:	subs	r5, r0, #0
   11c98:	moveq	r4, r5
   11c9c:	strd	r6, [sp, #8]
   11ca0:	str	r8, [sp, #16]
   11ca4:	str	lr, [sp, #20]
   11ca8:	beq	11d20 <lista_insere@@Base+0x90>
   11cac:	mov	r0, #12
   11cb0:	mov	r6, r1
   11cb4:	mov	r7, r2
   11cb8:	bl	109d4 <malloc@plt>
   11cbc:	mov	r4, r0
   11cc0:	mov	r0, r6
   11cc4:	bl	109f8 <strlen@plt>
   11cc8:	add	r8, r0, #1
   11ccc:	mov	r0, r8
   11cd0:	bl	109d4 <malloc@plt>
   11cd4:	mov	r2, r8
   11cd8:	mov	r1, r6
   11cdc:	str	r0, [r4]
   11ce0:	bl	109a4 <memcpy@plt>
   11ce4:	ldr	r3, [r5, #8]
   11ce8:	cmp	r3, #0
   11cec:	beq	11d38 <lista_insere@@Base+0xa8>
   11cf0:	cmp	r7, #0
   11cf4:	beq	11d4c <lista_insere@@Base+0xbc>
   11cf8:	ldr	r2, [r5]
   11cfc:	cmp	r2, r7
   11d00:	beq	11d64 <lista_insere@@Base+0xd4>
   11d04:	ldr	r2, [r7, #8]
   11d08:	str	r4, [r2, #4]
   11d0c:	str	r7, [r4, #4]
   11d10:	str	r2, [r4, #8]
   11d14:	str	r4, [r7, #8]
   11d18:	add	r3, r3, #1
   11d1c:	str	r3, [r5, #8]
   11d20:	mov	r0, r4
   11d24:	ldrd	r4, [sp]
   11d28:	ldrd	r6, [sp, #8]
   11d2c:	ldr	r8, [sp, #16]
   11d30:	add	sp, sp, #20
   11d34:	pop	{pc}		; (ldr pc, [sp], #4)
   11d38:	str	r4, [r5]
   11d3c:	str	r3, [r4, #4]
   11d40:	str	r4, [r5, #4]
   11d44:	str	r3, [r4, #8]
   11d48:	b	11d18 <lista_insere@@Base+0x88>
   11d4c:	ldr	r2, [r5, #4]
   11d50:	str	r7, [r4, #4]
   11d54:	str	r2, [r4, #8]
   11d58:	str	r4, [r2, #4]
   11d5c:	str	r4, [r5, #4]
   11d60:	b	11d18 <lista_insere@@Base+0x88>
   11d64:	str	r4, [r5]
   11d68:	stmib	r4, {r2, r4}
   11d6c:	b	11d18 <lista_insere@@Base+0x88>

00011d70 <lista_remove@@Base>:
   11d70:	strd	r4, [sp, #-16]!
   11d74:	subs	r4, r1, #0
   11d78:	str	r6, [sp, #8]
   11d7c:	str	lr, [sp, #12]
   11d80:	beq	11df4 <lista_remove@@Base+0x84>
   11d84:	ldr	r3, [r0]
   11d88:	ldr	r6, [r4, #4]
   11d8c:	cmp	r3, r4
   11d90:	moveq	r3, #0
   11d94:	streq	r3, [r6, #8]
   11d98:	streq	r6, [r0]
   11d9c:	beq	11dc0 <lista_remove@@Base+0x50>
   11da0:	ldr	r2, [r0, #4]
   11da4:	ldr	r3, [r4, #8]
   11da8:	cmp	r2, r4
   11dac:	moveq	r2, #0
   11db0:	strne	r6, [r3, #4]
   11db4:	streq	r2, [r3, #4]
   11db8:	strne	r3, [r6, #8]
   11dbc:	streq	r3, [r0, #4]
   11dc0:	mov	r5, r0
   11dc4:	ldr	r0, [r4]
   11dc8:	bl	10998 <free@plt>
   11dcc:	mov	r0, r4
   11dd0:	bl	10998 <free@plt>
   11dd4:	ldr	r3, [r5, #8]
   11dd8:	sub	r3, r3, #1
   11ddc:	str	r3, [r5, #8]
   11de0:	mov	r0, r6
   11de4:	ldrd	r4, [sp]
   11de8:	ldr	r6, [sp, #8]
   11dec:	add	sp, sp, #12
   11df0:	pop	{pc}		; (ldr pc, [sp], #4)
   11df4:	mov	r6, r4
   11df8:	b	11de0 <lista_remove@@Base+0x70>

00011dfc <lista_pesquisa@@Base>:
   11dfc:	cmp	r0, #0
   11e00:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11e04:	strd	r6, [sp, #8]
   11e08:	str	r8, [sp, #16]
   11e0c:	str	lr, [sp, #20]
   11e10:	beq	11e60 <lista_pesquisa@@Base+0x64>
   11e14:	cmp	r2, #0
   11e18:	mov	r6, r1
   11e1c:	mov	r5, r2
   11e20:	beq	11e7c <lista_pesquisa@@Base+0x80>
   11e24:	cmp	r2, #1
   11e28:	bne	11e60 <lista_pesquisa@@Base+0x64>
   11e2c:	ldmib	r0, {r4, r7}
   11e30:	cmp	r7, #0
   11e34:	ble	11e60 <lista_pesquisa@@Base+0x64>
   11e38:	mov	r5, #0
   11e3c:	mov	r1, r6
   11e40:	ldr	r0, [r4]
   11e44:	add	r5, r5, #1
   11e48:	bl	10980 <strcmp@plt>
   11e4c:	cmp	r0, #0
   11e50:	beq	11e64 <lista_pesquisa@@Base+0x68>
   11e54:	cmp	r5, r7
   11e58:	ldr	r4, [r4, #8]
   11e5c:	bne	11e3c <lista_pesquisa@@Base+0x40>
   11e60:	mov	r4, #0
   11e64:	mov	r0, r4
   11e68:	ldrd	r4, [sp]
   11e6c:	ldrd	r6, [sp, #8]
   11e70:	ldr	r8, [sp, #16]
   11e74:	add	sp, sp, #20
   11e78:	pop	{pc}		; (ldr pc, [sp], #4)
   11e7c:	ldr	r4, [r0]
   11e80:	ldr	r7, [r0, #8]
   11e84:	cmp	r7, #0
   11e88:	ble	11e60 <lista_pesquisa@@Base+0x64>
   11e8c:	mov	r1, r6
   11e90:	ldr	r0, [r4]
   11e94:	add	r5, r5, #1
   11e98:	bl	10980 <strcmp@plt>
   11e9c:	cmp	r0, #0
   11ea0:	beq	11e64 <lista_pesquisa@@Base+0x68>
   11ea4:	cmp	r5, r7
   11ea8:	ldr	r4, [r4, #4]
   11eac:	bne	11e8c <lista_pesquisa@@Base+0x90>
   11eb0:	b	11e60 <lista_pesquisa@@Base+0x64>

00011eb4 <lista_ordena@@Base>:
   11eb4:	cmp	r0, #0
   11eb8:	beq	11f58 <lista_ordena@@Base+0xa4>
   11ebc:	ldr	r3, [r0, #8]
   11ec0:	cmp	r3, #0
   11ec4:	beq	11f50 <lista_ordena@@Base+0x9c>
   11ec8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11ecc:	strd	r6, [sp, #8]
   11ed0:	strd	r8, [sp, #16]
   11ed4:	str	sl, [sp, #24]
   11ed8:	ldm	r0, {r8, sl}
   11edc:	str	lr, [sp, #28]
   11ee0:	cmp	r8, sl
   11ee4:	movne	r9, r8
   11ee8:	beq	11f34 <lista_ordena@@Base+0x80>
   11eec:	mov	r4, r9
   11ef0:	ldr	r7, [r9, #4]
   11ef4:	b	11f0c <lista_ordena@@Base+0x58>
   11ef8:	cmp	r4, r8
   11efc:	str	r5, [r4]
   11f00:	ldrne	r4, [r4, #8]
   11f04:	str	r6, [r7]
   11f08:	ldrne	r7, [r4, #4]
   11f0c:	ldr	r6, [r4]
   11f10:	ldr	r5, [r7]
   11f14:	mov	r0, r6
   11f18:	mov	r1, r5
   11f1c:	bl	10980 <strcmp@plt>
   11f20:	cmp	r0, #0
   11f24:	bgt	11ef8 <lista_ordena@@Base+0x44>
   11f28:	ldr	r9, [r9, #4]
   11f2c:	cmp	r9, sl
   11f30:	bne	11eec <lista_ordena@@Base+0x38>
   11f34:	ldrd	r4, [sp]
   11f38:	mov	r0, #0
   11f3c:	ldrd	r6, [sp, #8]
   11f40:	ldrd	r8, [sp, #16]
   11f44:	ldr	sl, [sp, #24]
   11f48:	add	sp, sp, #28
   11f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f50:	mov	r0, #0
   11f54:	bx	lr
   11f58:	mvn	r0, #0
   11f5c:	bx	lr

00011f60 <lista_inverte@@Base>:
   11f60:	cmp	r0, #0
   11f64:	beq	11ff4 <lista_inverte@@Base+0x94>
   11f68:	ldr	r3, [r0, #8]
   11f6c:	cmp	r3, #0
   11f70:	beq	11fec <lista_inverte@@Base+0x8c>
   11f74:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11f78:	cmp	r3, #1
   11f7c:	ldrd	r4, [r0]
   11f80:	strd	r6, [sp, #8]
   11f84:	str	r8, [sp, #16]
   11f88:	add	r8, r3, r3, lsr #31
   11f8c:	str	lr, [sp, #20]
   11f90:	asr	r8, r8, #1
   11f94:	ble	11fd4 <lista_inverte@@Base+0x74>
   11f98:	mov	r6, #0
   11f9c:	ldr	r0, [r4]
   11fa0:	add	r6, r6, #1
   11fa4:	bl	109b0 <strdup@plt>
   11fa8:	mov	r7, r0
   11fac:	ldr	r0, [r5]
   11fb0:	bl	109b0 <strdup@plt>
   11fb4:	str	r0, [r4]
   11fb8:	mov	r0, r7
   11fbc:	bl	109b0 <strdup@plt>
   11fc0:	cmp	r6, r8
   11fc4:	ldr	r4, [r4, #4]
   11fc8:	str	r0, [r5]
   11fcc:	ldr	r5, [r5, #8]
   11fd0:	blt	11f9c <lista_inverte@@Base+0x3c>
   11fd4:	mov	r0, #0
   11fd8:	ldrd	r4, [sp]
   11fdc:	ldrd	r6, [sp, #8]
   11fe0:	ldr	r8, [sp, #16]
   11fe4:	add	sp, sp, #20
   11fe8:	pop	{pc}		; (ldr pc, [sp], #4)
   11fec:	mov	r0, #0
   11ff0:	bx	lr
   11ff4:	mvn	r0, #0
   11ff8:	bx	lr

00011ffc <__libc_csu_init@@Base>:
   11ffc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12000:	mov	r7, r0
   12004:	ldr	r6, [pc, #72]	; 12054 <__libc_csu_init@@Base+0x58>
   12008:	ldr	r5, [pc, #72]	; 12058 <__libc_csu_init@@Base+0x5c>
   1200c:	add	r6, pc, r6
   12010:	add	r5, pc, r5
   12014:	sub	r6, r6, r5
   12018:	mov	r8, r1
   1201c:	mov	r9, r2
   12020:	bl	10960 <strcmp@plt-0x20>
   12024:	asrs	r6, r6, #2
   12028:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1202c:	mov	r4, #0
   12030:	add	r4, r4, #1
   12034:	ldr	r3, [r5], #4
   12038:	mov	r2, r9
   1203c:	mov	r1, r8
   12040:	mov	r0, r7
   12044:	blx	r3
   12048:	cmp	r6, r4
   1204c:	bne	12030 <__libc_csu_init@@Base+0x34>
   12050:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12054:	andeq	r0, r1, r0, lsl #30
   12058:	strdeq	r0, [r1], -r8

0001205c <__libc_csu_fini@@Base>:
   1205c:	bx	lr

Disassembly of section .fini:

00012060 <.fini>:
   12060:	push	{r3, lr}
   12064:	pop	{r3, pc}
