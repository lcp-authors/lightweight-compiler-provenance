
../repos/charybdis/modules/core/.libs/m_mode.so:     file format elf32-littlearm


Disassembly of section .init:

000009a8 <_init>:
 9a8:	push	{r3, lr}
 9ac:	bl	af4 <call_weak_fn>
 9b0:	pop	{r3, pc}

Disassembly of section .plt:

000009b4 <.plt>:
 9b4:	push	{lr}		; (str lr, [sp, #-4]!)
 9b8:	ldr	lr, [pc, #4]	; 9c4 <.plt+0x10>
 9bc:	add	lr, pc, lr
 9c0:	ldr	pc, [lr, #8]!
 9c4:	.word	0x0001163c

000009c8 <sendto_channel_local@plt>:
 9c8:	add	ip, pc, #0, 12
 9cc:	add	ip, ip, #69632	; 0x11000
 9d0:	ldr	pc, [ip, #1596]!	; 0x63c

000009d4 <__cxa_finalize@plt>:
 9d4:	add	ip, pc, #0, 12
 9d8:	add	ip, ip, #69632	; 0x11000
 9dc:	ldr	pc, [ip, #1588]!	; 0x634

000009e0 <add_id@plt>:
 9e0:	add	ip, pc, #0, 12
 9e4:	add	ip, ip, #69632	; 0x11000
 9e8:	ldr	pc, [ip, #1580]!	; 0x62c

000009ec <sendto_one@plt>:
 9ec:	add	ip, pc, #0, 12
 9f0:	add	ip, ip, #69632	; 0x11000
 9f4:	ldr	pc, [ip, #1572]!	; 0x624

000009f8 <check_channel_name@plt>:
 9f8:	add	ip, pc, #0, 12
 9fc:	add	ip, ip, #69632	; 0x11000
 a00:	ldr	pc, [ip, #1564]!	; 0x61c

00000a04 <user_mode@plt>:
 a04:	add	ip, pc, #0, 12
 a08:	add	ip, ip, #69632	; 0x11000
 a0c:	ldr	pc, [ip, #1556]!	; 0x614

00000a10 <find_channel@plt>:
 a10:	add	ip, pc, #0, 12
 a14:	add	ip, ip, #69632	; 0x11000
 a18:	ldr	pc, [ip, #1548]!	; 0x60c

00000a1c <strcpy@plt>:
 a1c:	add	ip, pc, #0, 12
 a20:	add	ip, ip, #69632	; 0x11000
 a24:	ldr	pc, [ip, #1540]!	; 0x604

00000a28 <find_channel_membership@plt>:
 a28:	add	ip, pc, #0, 12
 a2c:	add	ip, ip, #69632	; 0x11000
 a30:	ldr	pc, [ip, #1532]!	; 0x5fc

00000a34 <sendto_server@plt>:
 a34:	add	ip, pc, #0, 12
 a38:	add	ip, ip, #69632	; 0x11000
 a3c:	ldr	pc, [ip, #1524]!	; 0x5f4

00000a40 <channel_modes@plt>:
 a40:	add	ip, pc, #0, 12
 a44:	add	ip, ip, #69632	; 0x11000
 a48:	ldr	pc, [ip, #1516]!	; 0x5ec

00000a4c <__gmon_start__@plt>:
 a4c:	add	ip, pc, #0, 12
 a50:	add	ip, ip, #69632	; 0x11000
 a54:	ldr	pc, [ip, #1508]!	; 0x5e4

00000a58 <sendto_one_numeric@plt>:
 a58:	add	ip, pc, #0, 12
 a5c:	add	ip, ip, #69632	; 0x11000
 a60:	ldr	pc, [ip, #1500]!	; 0x5dc

00000a64 <strlen@plt>:
 a64:	add	ip, pc, #0, 12
 a68:	add	ip, ip, #69632	; 0x11000
 a6c:	ldr	pc, [ip, #1492]!	; 0x5d4

00000a70 <strchr@plt>:
 a70:	add	ip, pc, #0, 12
 a74:	add	ip, ip, #69632	; 0x11000
 a78:	ldr	pc, [ip, #1484]!	; 0x5cc

00000a7c <atol@plt>:
 a7c:	add	ip, pc, #0, 12
 a80:	add	ip, ip, #69632	; 0x11000
 a84:	ldr	pc, [ip, #1476]!	; 0x5c4

00000a88 <report_operspy@plt>:
 a88:	add	ip, pc, #0, 12
 a8c:	add	ip, ip, #69632	; 0x11000
 a90:	ldr	pc, [ip, #1468]!	; 0x5bc

00000a94 <set_channel_mlock@plt>:
 a94:	add	ip, pc, #0, 12
 a98:	add	ip, ip, #69632	; 0x11000
 a9c:	ldr	pc, [ip, #1460]!	; 0x5b4

00000aa0 <set_channel_mode@plt>:
 aa0:	add	ip, pc, #0, 12
 aa4:	add	ip, ip, #69632	; 0x11000
 aa8:	ldr	pc, [ip, #1452]!	; 0x5ac

00000aac <sprintf@plt>:
 aac:	add	ip, pc, #0, 12
 ab0:	add	ip, ip, #69632	; 0x11000
 ab4:	ldr	pc, [ip, #1444]!	; 0x5a4

00000ab8 <free_ban@plt>:
 ab8:	add	ip, pc, #0, 12
 abc:	add	ip, ip, #69632	; 0x11000
 ac0:	ldr	pc, [ip, #1436]!	; 0x59c

00000ac4 <flood_endgrace@plt>:
 ac4:	add	ip, pc, #0, 12
 ac8:	add	ip, ip, #69632	; 0x11000
 acc:	ldr	pc, [ip, #1428]!	; 0x594

00000ad0 <privilegeset_in_set@plt>:
 ad0:	add	ip, pc, #0, 12
 ad4:	add	ip, ip, #69632	; 0x11000
 ad8:	ldr	pc, [ip, #1420]!	; 0x58c

00000adc <irccmp@plt>:
 adc:	add	ip, pc, #0, 12
 ae0:	add	ip, ip, #69632	; 0x11000
 ae4:	ldr	pc, [ip, #1412]!	; 0x584

00000ae8 <__assert_fail@plt>:
 ae8:	add	ip, pc, #0, 12
 aec:	add	ip, ip, #69632	; 0x11000
 af0:	ldr	pc, [ip, #1404]!	; 0x57c

Disassembly of section .text:

00000af4 <call_weak_fn>:
     af4:	ldr	r3, [pc, #20]	; b10 <call_weak_fn+0x1c>
     af8:	ldr	r2, [pc, #20]	; b14 <call_weak_fn+0x20>
     afc:	add	r3, pc, r3
     b00:	ldr	r2, [r3, r2]
     b04:	cmp	r2, #0
     b08:	bxeq	lr
     b0c:	b	a4c <__gmon_start__@plt>
     b10:	.word	0x000114fc
     b14:	.word	0x00000080

00000b18 <deregister_tm_clones>:
     b18:	ldr	r0, [pc, #44]	; b4c <deregister_tm_clones+0x34>
     b1c:	ldr	r3, [pc, #44]	; b50 <deregister_tm_clones+0x38>
     b20:	add	r0, pc, r0
     b24:	add	r3, pc, r3
     b28:	cmp	r3, r0
     b2c:	ldr	r3, [pc, #32]	; b54 <deregister_tm_clones+0x3c>
     b30:	add	r3, pc, r3
     b34:	bxeq	lr
     b38:	ldr	r2, [pc, #24]	; b58 <deregister_tm_clones+0x40>
     b3c:	ldr	r3, [r3, r2]
     b40:	cmp	r3, #0
     b44:	bxeq	lr
     b48:	bx	r3
     b4c:	.word	0x000116c0
     b50:	.word	0x000116bc
     b54:	.word	0x000114c8
     b58:	.word	0x00000074

00000b5c <register_tm_clones>:
     b5c:	ldr	r0, [pc, #56]	; b9c <register_tm_clones+0x40>
     b60:	ldr	r3, [pc, #56]	; ba0 <register_tm_clones+0x44>
     b64:	add	r0, pc, r0
     b68:	add	r3, pc, r3
     b6c:	sub	r1, r3, r0
     b70:	ldr	r3, [pc, #44]	; ba4 <register_tm_clones+0x48>
     b74:	asr	r1, r1, #2
     b78:	add	r3, pc, r3
     b7c:	add	r1, r1, r1, lsr #31
     b80:	asrs	r1, r1, #1
     b84:	bxeq	lr
     b88:	ldr	r2, [pc, #24]	; ba8 <register_tm_clones+0x4c>
     b8c:	ldr	r3, [r3, r2]
     b90:	cmp	r3, #0
     b94:	bxeq	lr
     b98:	bx	r3
     b9c:	.word	0x0001167c
     ba0:	.word	0x00011678
     ba4:	.word	0x00011480
     ba8:	.word	0x00000090

00000bac <__do_global_dtors_aux>:
     bac:	ldr	r3, [pc, #76]	; c00 <__do_global_dtors_aux+0x54>
     bb0:	ldr	r2, [pc, #76]	; c04 <__do_global_dtors_aux+0x58>
     bb4:	add	r3, pc, r3
     bb8:	add	r2, pc, r2
     bbc:	ldrb	r3, [r3]
     bc0:	cmp	r3, #0
     bc4:	bxne	lr
     bc8:	ldr	r3, [pc, #56]	; c08 <__do_global_dtors_aux+0x5c>
     bcc:	push	{r4, lr}
     bd0:	ldr	r3, [r2, r3]
     bd4:	cmp	r3, #0
     bd8:	beq	be8 <__do_global_dtors_aux+0x3c>
     bdc:	ldr	r3, [pc, #40]	; c0c <__do_global_dtors_aux+0x60>
     be0:	ldr	r0, [pc, r3]
     be4:	bl	9d4 <__cxa_finalize@plt>
     be8:	bl	b18 <deregister_tm_clones>
     bec:	ldr	r3, [pc, #28]	; c10 <__do_global_dtors_aux+0x64>
     bf0:	mov	r2, #1
     bf4:	add	r3, pc, r3
     bf8:	strb	r2, [r3]
     bfc:	pop	{r4, pc}
     c00:	.word	0x0001162c
     c04:	.word	0x00011440
     c08:	.word	0x00000070
     c0c:	.word	0x000114b0
     c10:	.word	0x000115ec

00000c14 <frame_dummy>:
     c14:	b	b5c <register_tm_clones>

00000c18 <m_mode>:
     c18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     c1c:	add	fp, sp, #28
     c20:	sub	sp, sp, #12
     c24:	mov	r9, r3
     c28:	mov	r4, r2
     c2c:	mov	sl, r1
     c30:	ldr	r0, [r2, #24]
     c34:	ldr	r8, [fp, #8]
     c38:	ldr	r7, [r8, #4]
     c3c:	mov	r6, #0
     c40:	cmp	r0, #0
     c44:	beq	cb8 <m_mode+0xa0>
     c48:	ldr	r0, [r0, #36]	; 0x24
     c4c:	cmp	r0, #0
     c50:	beq	cb8 <m_mode+0xa0>
     c54:	ldr	r1, [pc, #540]	; e78 <m_mode+0x260>
     c58:	add	r1, pc, r1
     c5c:	bl	ad0 <privilegeset_in_set@plt>
     c60:	cmp	r0, #0
     c64:	beq	cb8 <m_mode+0xa0>
     c68:	ldrb	r0, [r7]
     c6c:	cmp	r0, #33	; 0x21
     c70:	mov	r5, r7
     c74:	bne	cbc <m_mode+0xa4>
     c78:	mov	r5, r7
     c7c:	ldrb	r0, [r5, #1]!
     c80:	mov	r6, #1
     c84:	cmp	r0, #0
     c88:	bne	cbc <m_mode+0xa4>
     c8c:	ldr	r0, [pc, #488]	; e7c <m_mode+0x264>
     c90:	add	r0, pc, r0
     c94:	str	r0, [sp]
     c98:	add	r3, r4, #88	; 0x58
     c9c:	ldr	r0, [pc, #476]	; e80 <m_mode+0x268>
     ca0:	ldr	r0, [pc, r0]
     ca4:	add	r2, r0, #88	; 0x58
     ca8:	ldr	r1, [pc, #468]	; e84 <m_mode+0x26c>
     cac:	add	r1, pc, r1
     cb0:	mov	r0, r4
     cb4:	b	da4 <m_mode+0x18c>
     cb8:	mov	r5, r7
     cbc:	ldrb	r0, [r7, r6]
     cc0:	ldr	r1, [pc, #424]	; e70 <m_mode+0x258>
     cc4:	ldr	r1, [pc, r1]
     cc8:	add	r0, r1, r0, lsl #2
     ccc:	ldrb	r0, [r0, #1]
     cd0:	tst	r0, #2
     cd4:	bne	cf4 <m_mode+0xdc>
     cd8:	mov	r0, sl
     cdc:	mov	r1, r4
     ce0:	mov	r2, r9
     ce4:	mov	r3, r8
     ce8:	sub	sp, fp, #28
     cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     cf0:	b	a04 <user_mode@plt>
     cf4:	mov	r0, r5
     cf8:	bl	9f8 <check_channel_name@plt>
     cfc:	cmp	r0, #0
     d00:	beq	db0 <m_mode+0x198>
     d04:	mov	r0, r5
     d08:	bl	a10 <find_channel@plt>
     d0c:	cmp	r0, #0
     d10:	beq	dc8 <m_mode+0x1b0>
     d14:	mov	r5, r0
     d18:	cmp	r9, #2
     d1c:	bgt	de8 <m_mode+0x1d0>
     d20:	cmp	r6, #0
     d24:	mov	r1, r4
     d28:	beq	d48 <m_mode+0x130>
     d2c:	ldr	r2, [r5, #236]	; 0xec
     d30:	ldr	r1, [pc, #340]	; e8c <m_mode+0x274>
     d34:	add	r1, pc, r1
     d38:	mov	r0, r4
     d3c:	bl	a88 <report_operspy@plt>
     d40:	ldr	r1, [pc, #328]	; e90 <m_mode+0x278>
     d44:	ldr	r1, [pc, r1]
     d48:	ldr	r6, [r8, #4]
     d4c:	mov	r0, r5
     d50:	bl	a40 <channel_modes@plt>
     d54:	str	r6, [sp]
     d58:	str	r0, [sp, #4]
     d5c:	add	r6, r4, #88	; 0x58
     d60:	ldr	r0, [pc, #300]	; e94 <m_mode+0x27c>
     d64:	ldr	r0, [pc, r0]
     d68:	add	r7, r0, #88	; 0x58
     d6c:	ldr	r1, [pc, #292]	; e98 <m_mode+0x280>
     d70:	add	r1, pc, r1
     d74:	mov	r0, r4
     d78:	mov	r2, r7
     d7c:	mov	r3, r6
     d80:	bl	9ec <sendto_one@plt>
     d84:	ldr	r0, [r8, #4]
     d88:	ldr	r1, [r5, #232]	; 0xe8
     d8c:	stm	sp, {r0, r1}
     d90:	ldr	r1, [pc, #260]	; e9c <m_mode+0x284>
     d94:	add	r1, pc, r1
     d98:	mov	r0, r4
     d9c:	mov	r2, r7
     da0:	mov	r3, r6
     da4:	bl	9ec <sendto_one@plt>
     da8:	sub	sp, fp, #28
     dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     db0:	ldr	r3, [r8, #4]
     db4:	ldr	r2, [pc, #184]	; e74 <m_mode+0x25c>
     db8:	add	r2, pc, r2
     dbc:	mov	r0, r4
     dc0:	movw	r1, #479	; 0x1df
     dc4:	b	ddc <m_mode+0x1c4>
     dc8:	ldr	r3, [r8, #4]
     dcc:	ldr	r2, [pc, #180]	; e88 <m_mode+0x270>
     dd0:	add	r2, pc, r2
     dd4:	mov	r0, r4
     dd8:	movw	r1, #403	; 0x193
     ddc:	sub	sp, fp, #28
     de0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     de4:	b	a58 <sendto_one_numeric@plt>
     de8:	mov	r0, r5
     dec:	mov	r1, r4
     df0:	bl	a28 <find_channel_membership@plt>
     df4:	mov	r6, r0
     df8:	ldr	r0, [r4, #64]	; 0x40
     dfc:	tst	r0, #8192	; 0x2000
     e00:	beq	e44 <m_mode+0x22c>
     e04:	tst	r0, #256	; 0x100
     e08:	ldrheq	r0, [r4, #80]	; 0x50
     e0c:	cmpeq	r0, #64	; 0x40
     e10:	bne	e44 <m_mode+0x22c>
     e14:	cmp	r9, #3
     e18:	bne	e3c <m_mode+0x224>
     e1c:	ldr	r0, [r8, #8]
     e20:	ldrb	r1, [r0]
     e24:	cmp	r1, #113	; 0x71
     e28:	cmpne	r1, #98	; 0x62
     e2c:	bne	e3c <m_mode+0x224>
     e30:	ldrb	r0, [r0, #1]
     e34:	cmp	r0, #0
     e38:	beq	e44 <m_mode+0x22c>
     e3c:	mov	r0, r4
     e40:	bl	ac4 <flood_endgrace@plt>
     e44:	add	r0, r8, #8
     e48:	sub	r1, r9, #2
     e4c:	str	r1, [sp]
     e50:	str	r0, [sp, #4]
     e54:	mov	r0, sl
     e58:	mov	r1, r4
     e5c:	mov	r2, r5
     e60:	mov	r3, r6
     e64:	bl	aa0 <set_channel_mode@plt>
     e68:	sub	sp, fp, #28
     e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     e70:	.word	0x000113b8
     e74:	.word	0x00000ad0
     e78:	.word	0x00000c02
     e7c:	.word	0x00000bb9
     e80:	.word	0x000113ec
     e84:	.word	0x00000bb7
     e88:	.word	0x00000ad1
     e8c:	.word	0x00000b15
     e90:	.word	0x00011348
     e94:	.word	0x00011328
     e98:	.word	0x00000b45
     e9c:	.word	0x00000b32

00000ea0 <ms_mode>:
     ea0:	push	{r4, r5, r6, r7, fp, lr}
     ea4:	add	fp, sp, #16
     ea8:	sub	sp, sp, #8
     eac:	mov	r6, r3
     eb0:	mov	r4, r2
     eb4:	mov	r5, r1
     eb8:	ldr	r7, [fp, #8]
     ebc:	ldr	r0, [r7, #4]
     ec0:	bl	a10 <find_channel@plt>
     ec4:	cmp	r0, #0
     ec8:	beq	ef8 <ms_mode+0x58>
     ecc:	mov	r2, r0
     ed0:	add	r0, r7, #8
     ed4:	sub	r1, r6, #2
     ed8:	str	r1, [sp]
     edc:	str	r0, [sp, #4]
     ee0:	mov	r0, r5
     ee4:	mov	r1, r4
     ee8:	mov	r3, #0
     eec:	bl	aa0 <set_channel_mode@plt>
     ef0:	sub	sp, fp, #16
     ef4:	pop	{r4, r5, r6, r7, fp, pc}
     ef8:	ldr	r3, [r7, #4]
     efc:	ldr	r2, [pc, #20]	; f18 <ms_mode+0x78>
     f00:	add	r2, pc, r2
     f04:	mov	r0, r4
     f08:	movw	r1, #403	; 0x193
     f0c:	sub	sp, fp, #16
     f10:	pop	{r4, r5, r6, r7, fp, lr}
     f14:	b	a58 <sendto_one_numeric@plt>
     f18:	.word	0x000009a1

00000f1c <ms_tmode>:
     f1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
     f20:	add	fp, sp, #24
     f24:	sub	sp, sp, #8
     f28:	mov	r4, r2
     f2c:	mov	r5, r1
     f30:	ldr	r7, [fp, #8]
     f34:	ldr	r0, [r7, #8]
     f38:	ldrb	r1, [r0]
     f3c:	ldr	r2, [pc, #240]	; 1034 <ms_tmode+0x118>
     f40:	ldr	r2, [pc, r2]
     f44:	add	r1, r2, r1, lsl #2
     f48:	ldrb	r1, [r1, #1]
     f4c:	tst	r1, #2
     f50:	beq	f94 <ms_tmode+0x78>
     f54:	mov	r6, r3
     f58:	bl	9f8 <check_channel_name@plt>
     f5c:	cmp	r0, #0
     f60:	beq	f94 <ms_tmode+0x78>
     f64:	ldr	r0, [r7, #8]
     f68:	bl	a10 <find_channel@plt>
     f6c:	cmp	r0, #0
     f70:	beq	fb4 <ms_tmode+0x98>
     f74:	mov	r8, r0
     f78:	ldr	r0, [r7, #4]
     f7c:	bl	a7c <atol@plt>
     f80:	ldr	r1, [r8, #232]	; 0xe8
     f84:	cmp	r0, r1
     f88:	ble	fcc <ms_tmode+0xb0>
     f8c:	sub	sp, fp, #24
     f90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
     f94:	ldr	r3, [r7, #8]
     f98:	ldr	r2, [pc, #152]	; 1038 <ms_tmode+0x11c>
     f9c:	add	r2, pc, r2
     fa0:	mov	r0, r4
     fa4:	movw	r1, #479	; 0x1df
     fa8:	sub	sp, fp, #24
     fac:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
     fb0:	b	a58 <sendto_one_numeric@plt>
     fb4:	ldr	r3, [r7, #8]
     fb8:	ldr	r2, [pc, #124]	; 103c <ms_tmode+0x120>
     fbc:	add	r2, pc, r2
     fc0:	mov	r0, r4
     fc4:	movw	r1, #403	; 0x193
     fc8:	b	fa8 <ms_tmode+0x8c>
     fcc:	ldrh	r0, [r4, #80]	; 0x50
     fd0:	cmp	r0, #32
     fd4:	bne	ffc <ms_tmode+0xe0>
     fd8:	add	r0, r7, #12
     fdc:	sub	r1, r6, #3
     fe0:	str	r1, [sp]
     fe4:	str	r0, [sp, #4]
     fe8:	mov	r0, r5
     fec:	mov	r1, r4
     ff0:	mov	r2, r8
     ff4:	mov	r3, #0
     ff8:	b	1028 <ms_tmode+0x10c>
     ffc:	mov	r0, r8
    1000:	mov	r1, r4
    1004:	bl	a28 <find_channel_membership@plt>
    1008:	mov	r3, r0
    100c:	add	r0, r7, #12
    1010:	sub	r1, r6, #3
    1014:	str	r1, [sp]
    1018:	str	r0, [sp, #4]
    101c:	mov	r0, r5
    1020:	mov	r1, r4
    1024:	mov	r2, r8
    1028:	bl	aa0 <set_channel_mode@plt>
    102c:	sub	sp, fp, #24
    1030:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1034:	.word	0x0001113c
    1038:	.word	0x000008ec
    103c:	.word	0x000008e5

00001040 <ms_mlock>:
    1040:	push	{r4, r5, r6, r7, fp, lr}
    1044:	add	fp, sp, #16
    1048:	sub	sp, sp, #8
    104c:	mov	r4, r2
    1050:	mov	r5, r1
    1054:	ldr	r7, [fp, #8]
    1058:	ldr	r0, [r7, #8]
    105c:	ldrb	r1, [r0]
    1060:	ldr	r2, [pc, #172]	; 1114 <ms_mlock+0xd4>
    1064:	ldr	r2, [pc, r2]
    1068:	add	r1, r2, r1, lsl #2
    106c:	ldrb	r1, [r1, #1]
    1070:	tst	r1, #2
    1074:	beq	10dc <ms_mlock+0x9c>
    1078:	bl	9f8 <check_channel_name@plt>
    107c:	cmp	r0, #0
    1080:	beq	10dc <ms_mlock+0x9c>
    1084:	ldr	r0, [r7, #8]
    1088:	bl	a10 <find_channel@plt>
    108c:	cmp	r0, #0
    1090:	beq	10fc <ms_mlock+0xbc>
    1094:	mov	r6, r0
    1098:	ldr	r0, [r7, #4]
    109c:	bl	a7c <atol@plt>
    10a0:	ldr	r1, [r6, #232]	; 0xe8
    10a4:	cmp	r0, r1
    10a8:	bgt	10d4 <ms_mlock+0x94>
    10ac:	ldrh	r0, [r4, #80]	; 0x50
    10b0:	cmp	r0, #32
    10b4:	bne	10d4 <ms_mlock+0x94>
    10b8:	ldr	r3, [r7, #12]
    10bc:	mov	r0, #1
    10c0:	str	r0, [sp]
    10c4:	mov	r0, r5
    10c8:	mov	r1, r4
    10cc:	mov	r2, r6
    10d0:	bl	a94 <set_channel_mlock@plt>
    10d4:	sub	sp, fp, #16
    10d8:	pop	{r4, r5, r6, r7, fp, pc}
    10dc:	ldr	r3, [r7, #8]
    10e0:	ldr	r2, [pc, #48]	; 1118 <ms_mlock+0xd8>
    10e4:	add	r2, pc, r2
    10e8:	mov	r0, r4
    10ec:	movw	r1, #479	; 0x1df
    10f0:	sub	sp, fp, #16
    10f4:	pop	{r4, r5, r6, r7, fp, lr}
    10f8:	b	a58 <sendto_one_numeric@plt>
    10fc:	ldr	r3, [r7, #8]
    1100:	ldr	r2, [pc, #20]	; 111c <ms_mlock+0xdc>
    1104:	add	r2, pc, r2
    1108:	mov	r0, r4
    110c:	movw	r1, #403	; 0x193
    1110:	b	10f0 <ms_mlock+0xb0>
    1114:	.word	0x00011018
    1118:	.word	0x000007a4
    111c:	.word	0x0000079d

00001120 <ms_bmask>:
    1120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1124:	add	fp, sp, #28
    1128:	sub	sp, sp, #60	; 0x3c
    112c:	mov	r5, r2
    1130:	mov	r4, r1
    1134:	ldr	r6, [fp, #8]
    1138:	ldr	r0, [r6, #8]
    113c:	ldrb	r1, [r0]
    1140:	ldr	r2, [pc, #1268]	; 163c <ms_bmask+0x51c>
    1144:	ldr	r2, [pc, r2]
    1148:	add	r1, r2, r1, lsl #2
    114c:	ldrb	r1, [r1, #1]
    1150:	tst	r1, #2
    1154:	beq	1634 <ms_bmask+0x514>
    1158:	bl	9f8 <check_channel_name@plt>
    115c:	cmp	r0, #0
    1160:	beq	1634 <ms_bmask+0x514>
    1164:	ldr	r0, [r6, #8]
    1168:	bl	a10 <find_channel@plt>
    116c:	cmp	r0, #0
    1170:	beq	1634 <ms_bmask+0x514>
    1174:	mov	sl, r0
    1178:	ldr	r0, [r6, #4]
    117c:	bl	a7c <atol@plt>
    1180:	ldr	r1, [sl, #232]	; 0xe8
    1184:	cmp	r0, r1
    1188:	bgt	1634 <ms_bmask+0x514>
    118c:	ldr	r0, [r6, #12]
    1190:	ldrb	r0, [r0]
    1194:	cmp	r0, #100	; 0x64
    1198:	bgt	11c8 <ms_bmask+0xa8>
    119c:	cmp	r0, #73	; 0x49
    11a0:	beq	1200 <ms_bmask+0xe0>
    11a4:	cmp	r0, #98	; 0x62
    11a8:	bne	1634 <ms_bmask+0x514>
    11ac:	str	r4, [fp, #-80]	; 0xffffffb0
    11b0:	add	r0, sl, #160	; 0xa0
    11b4:	str	r0, [fp, #-60]	; 0xffffffc4
    11b8:	mov	r0, #0
    11bc:	str	r0, [fp, #-84]	; 0xffffffac
    11c0:	mov	r0, #268435456	; 0x10000000
    11c4:	b	11f0 <ms_bmask+0xd0>
    11c8:	cmp	r0, #101	; 0x65
    11cc:	beq	122c <ms_bmask+0x10c>
    11d0:	cmp	r0, #113	; 0x71
    11d4:	bne	1634 <ms_bmask+0x514>
    11d8:	str	r4, [fp, #-80]	; 0xffffffb0
    11dc:	add	r0, sl, #196	; 0xc4
    11e0:	str	r0, [fp, #-60]	; 0xffffffc4
    11e4:	mov	r0, #0
    11e8:	str	r0, [fp, #-84]	; 0xffffffac
    11ec:	mov	r0, #-2147483648	; 0x80000000
    11f0:	str	r0, [fp, #-56]	; 0xffffffc8
    11f4:	mov	r0, #0
    11f8:	str	r0, [fp, #-64]	; 0xffffffc0
    11fc:	b	1258 <ms_bmask+0x138>
    1200:	str	r4, [fp, #-80]	; 0xffffffb0
    1204:	add	r0, sl, #184	; 0xb8
    1208:	str	r0, [fp, #-60]	; 0xffffffc4
    120c:	ldr	r0, [pc, #1072]	; 1644 <ms_bmask+0x524>
    1210:	ldr	r0, [pc, r0]
    1214:	ldr	r0, [r0]
    1218:	str	r0, [fp, #-84]	; 0xffffffac
    121c:	mov	r0, #2
    1220:	str	r0, [fp, #-64]	; 0xffffffc0
    1224:	mov	r0, #1073741824	; 0x40000000
    1228:	b	1254 <ms_bmask+0x134>
    122c:	str	r4, [fp, #-80]	; 0xffffffb0
    1230:	add	r0, sl, #172	; 0xac
    1234:	str	r0, [fp, #-60]	; 0xffffffc4
    1238:	ldr	r0, [pc, #1024]	; 1640 <ms_bmask+0x520>
    123c:	ldr	r0, [pc, r0]
    1240:	ldr	r0, [r0]
    1244:	str	r0, [fp, #-84]	; 0xffffffac
    1248:	mov	r0, #2
    124c:	str	r0, [fp, #-64]	; 0xffffffc0
    1250:	mov	r0, #536870912	; 0x20000000
    1254:	str	r0, [fp, #-56]	; 0xffffffc8
    1258:	ldr	r1, [pc, #1000]	; 1648 <ms_bmask+0x528>
    125c:	add	r1, pc, r1
    1260:	mov	r0, #0
    1264:	strb	r0, [r1]
    1268:	ldr	r4, [r6, #16]
    126c:	mov	r0, r4
    1270:	bl	a64 <strlen@plt>
    1274:	add	r0, r0, #8
    1278:	bic	r0, r0, #7
    127c:	sub	r7, sp, r0
    1280:	mov	sp, r7
    1284:	mov	r0, r7
    1288:	mov	r1, r4
    128c:	bl	a1c <strcpy@plt>
    1290:	ldr	r0, [pc, #948]	; 164c <ms_bmask+0x52c>
    1294:	ldr	r0, [pc, r0]
    1298:	ldr	r0, [r0]
    129c:	cmp	r0, #0
    12a0:	beq	12bc <ms_bmask+0x19c>
    12a4:	ldrb	r0, [r5, #65]	; 0x41
    12a8:	tst	r0, #16
    12ac:	bne	12bc <ms_bmask+0x19c>
    12b0:	ldr	r0, [pc, #920]	; 1650 <ms_bmask+0x530>
    12b4:	ldr	r0, [pc, r0]
    12b8:	b	12c0 <ms_bmask+0x1a0>
    12bc:	mov	r0, r5
    12c0:	ldr	r3, [sl, #236]	; 0xec
    12c4:	str	r0, [fp, #-52]	; 0xffffffcc
    12c8:	add	r2, r0, #88	; 0x58
    12cc:	ldr	r0, [pc, #896]	; 1654 <ms_bmask+0x534>
    12d0:	add	r0, pc, r0
    12d4:	ldr	r1, [pc, #892]	; 1658 <ms_bmask+0x538>
    12d8:	add	r1, pc, r1
    12dc:	bl	aac <sprintf@plt>
    12e0:	mov	r4, r0
    12e4:	sub	r8, r7, #1
    12e8:	ldrb	r0, [r8, #1]!
    12ec:	cmp	r0, #32
    12f0:	beq	12e8 <ms_bmask+0x1c8>
    12f4:	mov	r0, r8
    12f8:	mov	r1, #32
    12fc:	bl	a70 <strchr@plt>
    1300:	cmp	r0, #0
    1304:	mov	r1, #0
    1308:	beq	1324 <ms_bmask+0x204>
    130c:	mov	r1, #0
    1310:	strb	r1, [r0]
    1314:	mov	r1, r0
    1318:	ldrb	r0, [r1, #1]!
    131c:	cmp	r0, #32
    1320:	beq	1318 <ms_bmask+0x1f8>
    1324:	str	r5, [fp, #-76]	; 0xffffffb4
    1328:	ldr	r0, [pc, #812]	; 165c <ms_bmask+0x53c>
    132c:	add	r0, pc, r0
    1330:	add	r2, r0, r4
    1334:	add	r0, r4, #4
    1338:	str	r0, [fp, #-68]	; 0xffffffbc
    133c:	mov	r7, #0
    1340:	mov	r0, #0
    1344:	str	r0, [fp, #-48]	; 0xffffffd0
    1348:	ldr	r0, [pc, #784]	; 1660 <ms_bmask+0x540>
    134c:	add	r0, pc, r0
    1350:	str	r0, [fp, #-40]	; 0xffffffd8
    1354:	str	r2, [fp, #-72]	; 0xffffffb8
    1358:	str	r2, [fp, #-44]	; 0xffffffd4
    135c:	mov	r9, r1
    1360:	ldrb	r0, [r8]
    1364:	cmp	r0, #58	; 0x3a
    1368:	beq	1544 <ms_bmask+0x424>
    136c:	cmp	r0, #0
    1370:	beq	1588 <ms_bmask+0x468>
    1374:	mov	r0, r8
    1378:	bl	a64 <strlen@plt>
    137c:	cmp	r0, #200	; 0xc8
    1380:	bgt	1588 <ms_bmask+0x468>
    1384:	mov	r4, r0
    1388:	str	r7, [fp, #-36]	; 0xffffffdc
    138c:	add	r0, r8, #1
    1390:	mov	r1, #36	; 0x24
    1394:	bl	a70 <strchr@plt>
    1398:	mov	r5, #0
    139c:	cmp	r0, #0
    13a0:	beq	1400 <ms_bmask+0x2e0>
    13a4:	mov	r7, r0
    13a8:	mov	r2, sl
    13ac:	mov	r0, #0
    13b0:	strb	r0, [r7]
    13b4:	ldrb	r0, [r7, #1]!
    13b8:	cmp	r0, #0
    13bc:	beq	1410 <ms_bmask+0x2f0>
    13c0:	ldr	r0, [r6, #12]
    13c4:	ldrb	r0, [r0]
    13c8:	sub	sp, sp, #16
    13cc:	stm	sp, {r0, r8}
    13d0:	str	r7, [sp, #8]
    13d4:	ldr	sl, [fp, #-52]	; 0xffffffcc
    13d8:	mov	r0, sl
    13dc:	ldr	r1, [fp, #-64]	; 0xffffffc0
    13e0:	mov	r6, r2
    13e4:	ldr	r5, [fp, #-60]	; 0xffffffc4
    13e8:	mov	r3, r5
    13ec:	bl	1688 <possibly_remove_lower_forward>
    13f0:	mov	r0, r5
    13f4:	add	sp, sp, #16
    13f8:	mov	r5, r7
    13fc:	b	1420 <ms_bmask+0x300>
    1400:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1404:	mov	r6, sl
    1408:	ldr	sl, [fp, #-52]	; 0xffffffcc
    140c:	b	1420 <ms_bmask+0x300>
    1410:	sub	r4, r4, #1
    1414:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1418:	ldr	sl, [fp, #-52]	; 0xffffffcc
    141c:	mov	r6, r2
    1420:	ldr	r7, [fp, #-36]	; 0xffffffdc
    1424:	sub	sp, sp, #8
    1428:	str	r0, [sp]
    142c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1430:	str	r0, [sp, #4]
    1434:	mov	r0, sl
    1438:	mov	r1, r6
    143c:	mov	r2, r8
    1440:	mov	r3, r5
    1444:	bl	9e0 <add_id@plt>
    1448:	add	sp, sp, #8
    144c:	cmp	r0, #0
    1450:	mov	sl, r6
    1454:	beq	1540 <ms_bmask+0x420>
    1458:	cmp	r7, #3
    145c:	bgt	1478 <ms_bmask+0x358>
    1460:	ldr	r0, [fp, #-68]	; 0xffffffbc
    1464:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1468:	add	r0, r0, r1
    146c:	add	r0, r0, r4
    1470:	cmp	r0, #508	; 0x1fc
    1474:	blt	14e0 <ms_bmask+0x3c0>
    1478:	mov	r2, #0
    147c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1480:	strb	r2, [r0]
    1484:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1488:	mov	r1, #0
    148c:	str	r1, [fp, #-48]	; 0xffffffd0
    1490:	strb	r2, [r0, #-1]
    1494:	sub	sp, sp, #8
    1498:	ldr	r0, [pc, #472]	; 1678 <ms_bmask+0x558>
    149c:	add	r0, pc, r0
    14a0:	str	r0, [sp]
    14a4:	ldr	r0, [pc, #464]	; 167c <ms_bmask+0x55c>
    14a8:	add	r0, pc, r0
    14ac:	mov	r4, r0
    14b0:	str	r0, [sp, #4]
    14b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    14b8:	ldr	r1, [fp, #-64]	; 0xffffffc0
    14bc:	mov	r2, sl
    14c0:	ldr	r3, [pc, #440]	; 1680 <ms_bmask+0x560>
    14c4:	add	r3, pc, r3
    14c8:	bl	9c8 <sendto_channel_local@plt>
    14cc:	add	sp, sp, #8
    14d0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    14d4:	str	r0, [fp, #-44]	; 0xffffffd4
    14d8:	str	r4, [fp, #-40]	; 0xffffffd8
    14dc:	mov	r7, #0
    14e0:	ldr	r6, [fp, #8]
    14e4:	cmp	r5, #0
    14e8:	movne	r0, #36	; 0x24
    14ec:	strbne	r0, [r5, #-1]
    14f0:	ldr	r0, [r6, #12]
    14f4:	ldrb	r0, [r0]
    14f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    14fc:	strb	r0, [r1], #1
    1500:	str	r1, [fp, #-44]	; 0xffffffd4
    1504:	ldr	r4, [fp, #-40]	; 0xffffffd8
    1508:	mov	r0, r4
    150c:	ldr	r1, [pc, #368]	; 1684 <ms_bmask+0x564>
    1510:	add	r1, pc, r1
    1514:	mov	r2, r8
    1518:	bl	aac <sprintf@plt>
    151c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1520:	add	r1, r0, r1
    1524:	str	r1, [fp, #-48]	; 0xffffffd0
    1528:	add	r4, r4, r0
    152c:	str	r4, [fp, #-40]	; 0xffffffd8
    1530:	add	r7, r7, #1
    1534:	cmp	r9, #0
    1538:	bne	154c <ms_bmask+0x42c>
    153c:	b	1588 <ms_bmask+0x468>
    1540:	ldr	r6, [fp, #8]
    1544:	cmp	r9, #0
    1548:	beq	1588 <ms_bmask+0x468>
    154c:	mov	r0, r9
    1550:	mov	r1, #32
    1554:	bl	a70 <strchr@plt>
    1558:	mov	r1, #0
    155c:	cmp	r0, #0
    1560:	mov	r8, r9
    1564:	beq	135c <ms_bmask+0x23c>
    1568:	mov	r1, #0
    156c:	strb	r1, [r0]
    1570:	ldrb	r1, [r0, #1]!
    1574:	cmp	r1, #32
    1578:	beq	1570 <ms_bmask+0x450>
    157c:	mov	r8, r9
    1580:	mov	r1, r0
    1584:	b	135c <ms_bmask+0x23c>
    1588:	ldr	r4, [fp, #-76]	; 0xffffffb4
    158c:	cmp	r7, #0
    1590:	beq	15e0 <ms_bmask+0x4c0>
    1594:	mov	r0, #0
    1598:	ldr	r1, [fp, #-44]	; 0xffffffd4
    159c:	strb	r0, [r1]
    15a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    15a4:	strb	r0, [r1, #-1]
    15a8:	sub	sp, sp, #8
    15ac:	ldr	r0, [pc, #176]	; 1664 <ms_bmask+0x544>
    15b0:	add	r0, pc, r0
    15b4:	ldr	r1, [pc, #172]	; 1668 <ms_bmask+0x548>
    15b8:	add	r1, pc, r1
    15bc:	str	r1, [sp]
    15c0:	str	r0, [sp, #4]
    15c4:	ldr	r3, [pc, #160]	; 166c <ms_bmask+0x54c>
    15c8:	add	r3, pc, r3
    15cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    15d0:	ldr	r1, [fp, #-64]	; 0xffffffc0
    15d4:	mov	r2, sl
    15d8:	bl	9c8 <sendto_channel_local@plt>
    15dc:	add	sp, sp, #8
    15e0:	ldr	r0, [pc, #136]	; 1670 <ms_bmask+0x550>
    15e4:	ldr	r0, [pc, r0]
    15e8:	ldr	r0, [r0]
    15ec:	ldr	r1, [sl, #232]	; 0xe8
    15f0:	ldr	r2, [sl, #236]	; 0xec
    15f4:	ldr	r3, [r6, #12]
    15f8:	ldr	r7, [r6, #16]
    15fc:	sub	sp, sp, #24
    1600:	add	r5, r4, #396	; 0x18c
    1604:	ldr	r4, [pc, #104]	; 1674 <ms_bmask+0x554>
    1608:	add	r4, pc, r4
    160c:	stm	sp, {r4, r5}
    1610:	add	ip, sp, #8
    1614:	stm	ip, {r1, r2, r3, r7}
    1618:	ldr	r1, [fp, #-84]	; 0xffffffac
    161c:	orr	r2, r0, r1
    1620:	ldr	r0, [fp, #-80]	; 0xffffffb0
    1624:	mov	r1, sl
    1628:	mov	r3, #0
    162c:	bl	a34 <sendto_server@plt>
    1630:	add	sp, sp, #24
    1634:	sub	sp, fp, #28
    1638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    163c:	.word	0x00010f38
    1640:	.word	0x00010e48
    1644:	.word	0x00010e70
    1648:	.word	0x00011185
    164c:	.word	0x00010de0
    1650:	.word	0x00010dd8
    1654:	.word	0x00010f11
    1658:	.word	0x00000600
    165c:	.word	0x00010eb5
    1660:	.word	0x00011095
    1664:	.word	0x00010e31
    1668:	.word	0x00010c29
    166c:	.word	0x000002f8
    1670:	.word	0x00010a8c
    1674:	.word	0x000002e2
    1678:	.word	0x00010d45
    167c:	.word	0x00010f39
    1680:	.word	0x000003fc
    1684:	.word	0x000003d6

00001688 <possibly_remove_lower_forward>:
    1688:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    168c:	add	fp, sp, #28
    1690:	sub	sp, sp, #36	; 0x24
    1694:	str	r1, [sp, #32]
    1698:	ldr	r8, [r3]
    169c:	cmp	r8, #0
    16a0:	beq	177c <possibly_remove_lower_forward+0xf4>
    16a4:	mov	r4, r3
    16a8:	mov	r9, r2
    16ac:	mov	sl, r0
    16b0:	ldr	r5, [fp, #16]
    16b4:	ldr	r7, [fp, #12]
    16b8:	ldr	r0, [fp, #8]
    16bc:	str	r0, [sp, #28]
    16c0:	b	16d0 <possibly_remove_lower_forward+0x48>
    16c4:	ldr	r8, [r8, #8]
    16c8:	cmp	r8, #0
    16cc:	beq	177c <possibly_remove_lower_forward+0xf4>
    16d0:	ldr	r6, [r8]
    16d4:	ldr	r0, [r6]
    16d8:	mov	r1, r7
    16dc:	bl	adc <irccmp@plt>
    16e0:	cmp	r0, #0
    16e4:	bne	16c4 <possibly_remove_lower_forward+0x3c>
    16e8:	ldr	r0, [r6, #12]
    16ec:	cmp	r0, #0
    16f0:	beq	1704 <possibly_remove_lower_forward+0x7c>
    16f4:	mov	r1, r5
    16f8:	bl	adc <irccmp@plt>
    16fc:	cmn	r0, #1
    1700:	bgt	16c4 <possibly_remove_lower_forward+0x3c>
    1704:	ldr	r0, [r9, #236]	; 0xec
    1708:	ldr	r1, [r6]
    170c:	ldr	r2, [r6, #12]
    1710:	add	r3, sl, #88	; 0x58
    1714:	ldr	r7, [pc, #104]	; 1784 <possibly_remove_lower_forward+0xfc>
    1718:	add	r7, pc, r7
    171c:	cmp	r2, #0
    1720:	moveq	r2, r7
    1724:	ldr	r5, [pc, #92]	; 1788 <possibly_remove_lower_forward+0x100>
    1728:	add	r5, pc, r5
    172c:	moveq	r5, r7
    1730:	str	r3, [sp]
    1734:	str	r0, [sp, #4]
    1738:	ldr	r0, [sp, #28]
    173c:	add	r3, sp, #8
    1740:	stm	r3, {r0, r1, r5}
    1744:	str	r2, [sp, #20]
    1748:	ldr	r3, [pc, #60]	; 178c <possibly_remove_lower_forward+0x104>
    174c:	add	r3, pc, r3
    1750:	mov	r0, sl
    1754:	ldr	r1, [sp, #32]
    1758:	mov	r2, r9
    175c:	bl	9c8 <sendto_channel_local@plt>
    1760:	add	r0, r6, #16
    1764:	mov	r1, r4
    1768:	bl	1790 <rb_dlinkDelete>
    176c:	mov	r0, r6
    1770:	sub	sp, fp, #28
    1774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1778:	b	ab8 <free_ban@plt>
    177c:	sub	sp, fp, #28
    1780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1784:	.word	0x000001d1
    1788:	.word	0x000001f1
    178c:	.word	0x000001b6

00001790 <rb_dlinkDelete>:
    1790:	push	{fp, lr}
    1794:	mov	fp, sp
    1798:	cmp	r0, #0
    179c:	beq	17f0 <rb_dlinkDelete+0x60>
    17a0:	cmp	r1, #0
    17a4:	beq	1810 <rb_dlinkDelete+0x80>
    17a8:	ldr	ip, [r0, #4]
    17ac:	ldr	r3, [r0, #8]
    17b0:	add	r2, r3, #4
    17b4:	cmp	r3, #0
    17b8:	addeq	r2, r1, #4
    17bc:	str	ip, [r2]
    17c0:	ldmib	r0, {r2, ip}
    17c4:	cmp	r2, #0
    17c8:	mov	r3, r1
    17cc:	addne	r3, r2, #8
    17d0:	str	ip, [r3]
    17d4:	mov	r2, #0
    17d8:	str	r2, [r0, #4]
    17dc:	str	r2, [r0, #8]
    17e0:	ldr	r0, [r1, #8]
    17e4:	sub	r0, r0, #1
    17e8:	str	r0, [r1, #8]
    17ec:	pop	{fp, pc}
    17f0:	ldr	r0, [pc, #56]	; 1830 <rb_dlinkDelete+0xa0>
    17f4:	add	r0, pc, r0
    17f8:	ldr	r1, [pc, #52]	; 1834 <rb_dlinkDelete+0xa4>
    17fc:	add	r1, pc, r1
    1800:	ldr	r3, [pc, #48]	; 1838 <rb_dlinkDelete+0xa8>
    1804:	add	r3, pc, r3
    1808:	mov	r2, #235	; 0xeb
    180c:	bl	ae8 <__assert_fail@plt>
    1810:	ldr	r0, [pc, #36]	; 183c <rb_dlinkDelete+0xac>
    1814:	add	r0, pc, r0
    1818:	ldr	r1, [pc, #32]	; 1840 <rb_dlinkDelete+0xb0>
    181c:	add	r1, pc, r1
    1820:	ldr	r3, [pc, #28]	; 1844 <rb_dlinkDelete+0xb4>
    1824:	add	r3, pc, r3
    1828:	mov	r2, #236	; 0xec
    182c:	bl	ae8 <__assert_fail@plt>
    1830:	.word	0x00000127
    1834:	.word	0x00000129
    1838:	.word	0x0000013d
    183c:	.word	0x00000163
    1840:	.word	0x00000109
    1844:	.word	0x0000011d

Disassembly of section .fini:

00001848 <_fini>:
    1848:	push	{r3, lr}
    184c:	pop	{r3, pc}
