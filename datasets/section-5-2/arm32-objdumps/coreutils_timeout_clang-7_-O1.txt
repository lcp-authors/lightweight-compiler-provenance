
../repos/coreutils/src/timeout:     file format elf32-littlearm


Disassembly of section .init:

00011274 <.init>:
   11274:	push	{r3, lr}
   11278:	bl	1160c <__snprintf_chk@plt+0x48>
   1127c:	pop	{r3, pc}

Disassembly of section .plt:

00011280 <calloc@plt-0x14>:
   11280:	push	{lr}		; (str lr, [sp, #-4]!)
   11284:	ldr	lr, [pc, #4]	; 11290 <calloc@plt-0x4>
   11288:	add	lr, pc, lr
   1128c:	ldr	pc, [lr, #8]!
   11290:	andeq	r5, r1, r0, ror sp

00011294 <calloc@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #86016	; 0x15000
   1129c:	ldr	pc, [ip, #3440]!	; 0xd70

000112a0 <fputs_unlocked@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #86016	; 0x15000
   112a8:	ldr	pc, [ip, #3432]!	; 0xd68

000112ac <raise@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #86016	; 0x15000
   112b4:	ldr	pc, [ip, #3424]!	; 0xd60

000112b8 <strcmp@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #86016	; 0x15000
   112c0:	ldr	pc, [ip, #3416]!	; 0xd58

000112c4 <strtol@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #86016	; 0x15000
   112cc:	ldr	pc, [ip, #3408]!	; 0xd50

000112d0 <fflush@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #86016	; 0x15000
   112d8:	ldr	pc, [ip, #3400]!	; 0xd48

000112dc <sigprocmask@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #86016	; 0x15000
   112e4:	ldr	pc, [ip, #3392]!	; 0xd40

000112e8 <free@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #86016	; 0x15000
   112f0:	ldr	pc, [ip, #3384]!	; 0xd38

000112f4 <_exit@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #86016	; 0x15000
   112fc:	ldr	pc, [ip, #3376]!	; 0xd30

00011300 <memcpy@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #86016	; 0x15000
   11308:	ldr	pc, [ip, #3368]!	; 0xd28

0001130c <execvp@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #86016	; 0x15000
   11314:	ldr	pc, [ip, #3360]!	; 0xd20

00011318 <mbsinit@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #86016	; 0x15000
   11320:	ldr	pc, [ip, #3352]!	; 0xd18

00011324 <signal@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #86016	; 0x15000
   1132c:	ldr	pc, [ip, #3344]!	; 0xd10

00011330 <memcmp@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #86016	; 0x15000
   11338:	ldr	pc, [ip, #3336]!	; 0xd08

0001133c <dcgettext@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #86016	; 0x15000
   11344:	ldr	pc, [ip, #3328]!	; 0xd00

00011348 <alarm@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #86016	; 0x15000
   11350:	ldr	pc, [ip, #3320]!	; 0xcf8

00011354 <realloc@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #86016	; 0x15000
   1135c:	ldr	pc, [ip, #3312]!	; 0xcf0

00011360 <timer_create@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #86016	; 0x15000
   11368:	ldr	pc, [ip, #3304]!	; 0xce8

0001136c <textdomain@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #86016	; 0x15000
   11374:	ldr	pc, [ip, #3296]!	; 0xce0

00011378 <iswprint@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #86016	; 0x15000
   11380:	ldr	pc, [ip, #3288]!	; 0xcd8

00011384 <timer_settime@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #86016	; 0x15000
   1138c:	ldr	pc, [ip, #3280]!	; 0xcd0

00011390 <sigaction@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #86016	; 0x15000
   11398:	ldr	pc, [ip, #3272]!	; 0xcc8

0001139c <fwrite@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #86016	; 0x15000
   113a4:	ldr	pc, [ip, #3264]!	; 0xcc0

000113a8 <lseek64@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #86016	; 0x15000
   113b0:	ldr	pc, [ip, #3256]!	; 0xcb8

000113b4 <waitpid@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #86016	; 0x15000
   113bc:	ldr	pc, [ip, #3248]!	; 0xcb0

000113c0 <__ctype_get_mb_cur_max@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #86016	; 0x15000
   113c8:	ldr	pc, [ip, #3240]!	; 0xca8

000113cc <strcpy@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #86016	; 0x15000
   113d4:	ldr	pc, [ip, #3232]!	; 0xca0

000113d8 <__fpending@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #86016	; 0x15000
   113e0:	ldr	pc, [ip, #3224]!	; 0xc98

000113e4 <ferror_unlocked@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #86016	; 0x15000
   113ec:	ldr	pc, [ip, #3216]!	; 0xc90

000113f0 <mbrtowc@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #86016	; 0x15000
   113f8:	ldr	pc, [ip, #3208]!	; 0xc88

000113fc <error@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #86016	; 0x15000
   11404:	ldr	pc, [ip, #3200]!	; 0xc80

00011408 <timer_delete@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #86016	; 0x15000
   11410:	ldr	pc, [ip, #3192]!	; 0xc78

00011414 <malloc@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #86016	; 0x15000
   1141c:	ldr	pc, [ip, #3184]!	; 0xc70

00011420 <sigaddset@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #86016	; 0x15000
   11428:	ldr	pc, [ip, #3176]!	; 0xc68

0001142c <__libc_start_main@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #86016	; 0x15000
   11434:	ldr	pc, [ip, #3168]!	; 0xc60

00011438 <__freading@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #86016	; 0x15000
   11440:	ldr	pc, [ip, #3160]!	; 0xc58

00011444 <__gmon_start__@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #86016	; 0x15000
   1144c:	ldr	pc, [ip, #3152]!	; 0xc50

00011450 <getopt_long@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #86016	; 0x15000
   11458:	ldr	pc, [ip, #3144]!	; 0xc48

0001145c <kill@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #86016	; 0x15000
   11464:	ldr	pc, [ip, #3136]!	; 0xc40

00011468 <__ctype_b_loc@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #86016	; 0x15000
   11470:	ldr	pc, [ip, #3128]!	; 0xc38

00011474 <exit@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #86016	; 0x15000
   1147c:	ldr	pc, [ip, #3120]!	; 0xc30

00011480 <strlen@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #86016	; 0x15000
   11488:	ldr	pc, [ip, #3112]!	; 0xc28

0001148c <__libc_current_sigrtmax@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #86016	; 0x15000
   11494:	ldr	pc, [ip, #3104]!	; 0xc20

00011498 <__errno_location@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #86016	; 0x15000
   114a0:	ldr	pc, [ip, #3096]!	; 0xc18

000114a4 <__sprintf_chk@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #86016	; 0x15000
   114ac:	ldr	pc, [ip, #3088]!	; 0xc10

000114b0 <__cxa_atexit@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #86016	; 0x15000
   114b8:	ldr	pc, [ip, #3080]!	; 0xc08

000114bc <memset@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #86016	; 0x15000
   114c4:	ldr	pc, [ip, #3072]!	; 0xc00

000114c8 <sigsuspend@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #86016	; 0x15000
   114d0:	ldr	pc, [ip, #3064]!	; 0xbf8

000114d4 <__printf_chk@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #86016	; 0x15000
   114dc:	ldr	pc, [ip, #3056]!	; 0xbf0

000114e0 <prctl@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #86016	; 0x15000
   114e8:	ldr	pc, [ip, #3048]!	; 0xbe8

000114ec <strtod@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #86016	; 0x15000
   114f4:	ldr	pc, [ip, #3040]!	; 0xbe0

000114f8 <fileno@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #86016	; 0x15000
   11500:	ldr	pc, [ip, #3032]!	; 0xbd8

00011504 <__fprintf_chk@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #86016	; 0x15000
   1150c:	ldr	pc, [ip, #3024]!	; 0xbd0

00011510 <memchr@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #86016	; 0x15000
   11518:	ldr	pc, [ip, #3016]!	; 0xbc8

0001151c <fclose@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #86016	; 0x15000
   11524:	ldr	pc, [ip, #3008]!	; 0xbc0

00011528 <fseeko64@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #86016	; 0x15000
   11530:	ldr	pc, [ip, #3000]!	; 0xbb8

00011534 <strtod_l@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #86016	; 0x15000
   1153c:	ldr	pc, [ip, #2992]!	; 0xbb0

00011540 <setlocale@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #86016	; 0x15000
   11548:	ldr	pc, [ip, #2984]!	; 0xba8

0001154c <sigemptyset@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #86016	; 0x15000
   11554:	ldr	pc, [ip, #2976]!	; 0xba0

00011558 <fork@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #86016	; 0x15000
   11560:	ldr	pc, [ip, #2968]!	; 0xb98

00011564 <strrchr@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #86016	; 0x15000
   1156c:	ldr	pc, [ip, #2960]!	; 0xb90

00011570 <nl_langinfo@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #86016	; 0x15000
   11578:	ldr	pc, [ip, #2952]!	; 0xb88

0001157c <newlocale@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #86016	; 0x15000
   11584:	ldr	pc, [ip, #2944]!	; 0xb80

00011588 <setpgid@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #86016	; 0x15000
   11590:	ldr	pc, [ip, #2936]!	; 0xb78

00011594 <bindtextdomain@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #86016	; 0x15000
   1159c:	ldr	pc, [ip, #2928]!	; 0xb70

000115a0 <__libc_current_sigrtmin@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #86016	; 0x15000
   115a8:	ldr	pc, [ip, #2920]!	; 0xb68

000115ac <strncmp@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #86016	; 0x15000
   115b4:	ldr	pc, [ip, #2912]!	; 0xb60

000115b8 <abort@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #86016	; 0x15000
   115c0:	ldr	pc, [ip, #2904]!	; 0xb58

000115c4 <__snprintf_chk@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #86016	; 0x15000
   115cc:	ldr	pc, [ip, #2896]!	; 0xb50

Disassembly of section .text:

000115d0 <.text>:
   115d0:	mov	fp, #0
   115d4:	mov	lr, #0
   115d8:	pop	{r1}		; (ldr r1, [sp], #4)
   115dc:	mov	r2, sp
   115e0:	push	{r2}		; (str r2, [sp, #-4]!)
   115e4:	push	{r0}		; (str r0, [sp, #-4]!)
   115e8:	ldr	ip, [pc, #16]	; 11600 <__snprintf_chk@plt+0x3c>
   115ec:	push	{ip}		; (str ip, [sp, #-4]!)
   115f0:	ldr	r0, [pc, #12]	; 11604 <__snprintf_chk@plt+0x40>
   115f4:	ldr	r3, [pc, #12]	; 11608 <__snprintf_chk@plt+0x44>
   115f8:	bl	1142c <__libc_start_main@plt>
   115fc:	bl	115b8 <abort@plt>
   11600:	andeq	r5, r1, r8, lsr #23
   11604:	strdeq	r1, [r1], -r4
   11608:	andeq	r5, r1, r8, asr #22
   1160c:	ldr	r3, [pc, #20]	; 11628 <__snprintf_chk@plt+0x64>
   11610:	ldr	r2, [pc, #20]	; 1162c <__snprintf_chk@plt+0x68>
   11614:	add	r3, pc, r3
   11618:	ldr	r2, [r3, r2]
   1161c:	cmp	r2, #0
   11620:	bxeq	lr
   11624:	b	11444 <__gmon_start__@plt>
   11628:	andeq	r5, r1, r4, ror #19
   1162c:	andeq	r0, r0, r0, lsr #2
   11630:	ldr	r0, [pc, #24]	; 11650 <__snprintf_chk@plt+0x8c>
   11634:	ldr	r3, [pc, #24]	; 11654 <__snprintf_chk@plt+0x90>
   11638:	cmp	r3, r0
   1163c:	bxeq	lr
   11640:	ldr	r3, [pc, #16]	; 11658 <__snprintf_chk@plt+0x94>
   11644:	cmp	r3, #0
   11648:	bxeq	lr
   1164c:	bx	r3
   11650:	andeq	r7, r2, r4, lsr #6
   11654:	andeq	r7, r2, r4, lsr #6
   11658:	andeq	r0, r0, r0
   1165c:	ldr	r0, [pc, #36]	; 11688 <__snprintf_chk@plt+0xc4>
   11660:	ldr	r1, [pc, #36]	; 1168c <__snprintf_chk@plt+0xc8>
   11664:	sub	r1, r1, r0
   11668:	asr	r1, r1, #2
   1166c:	add	r1, r1, r1, lsr #31
   11670:	asrs	r1, r1, #1
   11674:	bxeq	lr
   11678:	ldr	r3, [pc, #16]	; 11690 <__snprintf_chk@plt+0xcc>
   1167c:	cmp	r3, #0
   11680:	bxeq	lr
   11684:	bx	r3
   11688:	andeq	r7, r2, r4, lsr #6
   1168c:	andeq	r7, r2, r4, lsr #6
   11690:	andeq	r0, r0, r0
   11694:	push	{r4, lr}
   11698:	ldr	r4, [pc, #24]	; 116b8 <__snprintf_chk@plt+0xf4>
   1169c:	ldrb	r3, [r4]
   116a0:	cmp	r3, #0
   116a4:	popne	{r4, pc}
   116a8:	bl	11630 <__snprintf_chk@plt+0x6c>
   116ac:	mov	r3, #1
   116b0:	strb	r3, [r4]
   116b4:	pop	{r4, pc}
   116b8:	andeq	r7, r2, r4, asr #6
   116bc:	b	1165c <__snprintf_chk@plt+0x98>
   116c0:	push	{fp, lr}
   116c4:	mov	fp, sp
   116c8:	mov	r4, r0
   116cc:	cmp	r0, #0
   116d0:	bne	117fc <__snprintf_chk@plt+0x238>
   116d4:	movw	r1, #23547	; 0x5bfb
   116d8:	movt	r1, #1
   116dc:	mov	r0, #0
   116e0:	mov	r2, #5
   116e4:	bl	1133c <dcgettext@plt>
   116e8:	mov	r1, r0
   116ec:	movw	r0, #29544	; 0x7368
   116f0:	movt	r0, #2
   116f4:	ldr	r2, [r0]
   116f8:	mov	r0, #1
   116fc:	mov	r3, r2
   11700:	bl	114d4 <__printf_chk@plt>
   11704:	movw	r1, #23612	; 0x5c3c
   11708:	movt	r1, #1
   1170c:	mov	r0, #0
   11710:	mov	r2, #5
   11714:	bl	1133c <dcgettext@plt>
   11718:	movw	r5, #29500	; 0x733c
   1171c:	movt	r5, #2
   11720:	ldr	r1, [r5]
   11724:	bl	112a0 <fputs_unlocked@plt>
   11728:	bl	11840 <__snprintf_chk@plt+0x27c>
   1172c:	movw	r1, #23673	; 0x5c79
   11730:	movt	r1, #1
   11734:	mov	r0, #0
   11738:	mov	r2, #5
   1173c:	bl	1133c <dcgettext@plt>
   11740:	ldr	r1, [r5]
   11744:	bl	112a0 <fputs_unlocked@plt>
   11748:	movw	r1, #24405	; 0x5f55
   1174c:	movt	r1, #1
   11750:	mov	r0, #0
   11754:	mov	r2, #5
   11758:	bl	1133c <dcgettext@plt>
   1175c:	ldr	r1, [r5]
   11760:	bl	112a0 <fputs_unlocked@plt>
   11764:	movw	r1, #24471	; 0x5f97
   11768:	movt	r1, #1
   1176c:	mov	r0, #0
   11770:	mov	r2, #5
   11774:	bl	1133c <dcgettext@plt>
   11778:	ldr	r1, [r5]
   1177c:	bl	112a0 <fputs_unlocked@plt>
   11780:	movw	r1, #24516	; 0x5fc4
   11784:	movt	r1, #1
   11788:	mov	r0, #0
   1178c:	mov	r2, #5
   11790:	bl	1133c <dcgettext@plt>
   11794:	ldr	r1, [r5]
   11798:	bl	112a0 <fputs_unlocked@plt>
   1179c:	movw	r1, #24570	; 0x5ffa
   117a0:	movt	r1, #1
   117a4:	mov	r0, #0
   117a8:	mov	r2, #5
   117ac:	bl	1133c <dcgettext@plt>
   117b0:	ldr	r1, [r5]
   117b4:	bl	112a0 <fputs_unlocked@plt>
   117b8:	movw	r1, #24761	; 0x60b9
   117bc:	movt	r1, #1
   117c0:	mov	r0, #0
   117c4:	mov	r2, #5
   117c8:	bl	1133c <dcgettext@plt>
   117cc:	ldr	r1, [r5]
   117d0:	bl	112a0 <fputs_unlocked@plt>
   117d4:	movw	r1, #24995	; 0x61a3
   117d8:	movt	r1, #1
   117dc:	mov	r0, #0
   117e0:	mov	r2, #5
   117e4:	bl	1133c <dcgettext@plt>
   117e8:	ldr	r1, [r5]
   117ec:	bl	112a0 <fputs_unlocked@plt>
   117f0:	bl	11870 <__snprintf_chk@plt+0x2ac>
   117f4:	mov	r0, r4
   117f8:	bl	11474 <exit@plt>
   117fc:	movw	r0, #29496	; 0x7338
   11800:	movt	r0, #2
   11804:	ldr	r5, [r0]
   11808:	movw	r1, #23508	; 0x5bd4
   1180c:	movt	r1, #1
   11810:	mov	r0, #0
   11814:	mov	r2, #5
   11818:	bl	1133c <dcgettext@plt>
   1181c:	mov	r2, r0
   11820:	movw	r0, #29544	; 0x7368
   11824:	movt	r0, #2
   11828:	ldr	r3, [r0]
   1182c:	mov	r0, r5
   11830:	mov	r1, #1
   11834:	bl	11504 <__fprintf_chk@plt>
   11838:	mov	r0, r4
   1183c:	bl	11474 <exit@plt>
   11840:	push	{fp, lr}
   11844:	mov	fp, sp
   11848:	movw	r1, #25531	; 0x63bb
   1184c:	movt	r1, #1
   11850:	mov	r0, #0
   11854:	mov	r2, #5
   11858:	bl	1133c <dcgettext@plt>
   1185c:	movw	r1, #29500	; 0x733c
   11860:	movt	r1, #2
   11864:	ldr	r1, [r1]
   11868:	pop	{fp, lr}
   1186c:	b	112a0 <fputs_unlocked@plt>
   11870:	push	{r4, r5, fp, lr}
   11874:	add	fp, sp, #8
   11878:	sub	sp, sp, #56	; 0x38
   1187c:	movw	r0, #26272	; 0x66a0
   11880:	movt	r0, #1
   11884:	add	r1, r0, #32
   11888:	mov	r5, sp
   1188c:	mov	r2, #48	; 0x30
   11890:	vld1.64	{d16-d17}, [r1]
   11894:	add	r1, r5, #32
   11898:	add	r3, r0, #16
   1189c:	vld1.64	{d18-d19}, [r0], r2
   118a0:	vld1.64	{d20-d21}, [r3]
   118a4:	vldr	d22, [r0]
   118a8:	vst1.64	{d16-d17}, [r1]
   118ac:	add	r0, r5, #16
   118b0:	vst1.64	{d20-d21}, [r0]
   118b4:	mov	r0, r5
   118b8:	vst1.64	{d18-d19}, [r0], r2
   118bc:	vstr	d22, [r0]
   118c0:	ldr	r1, [sp]
   118c4:	cmp	r1, #0
   118c8:	beq	118f0 <__snprintf_chk@plt+0x32c>
   118cc:	mov	r5, sp
   118d0:	movw	r4, #25322	; 0x62ea
   118d4:	movt	r4, #1
   118d8:	mov	r0, r4
   118dc:	bl	112b8 <strcmp@plt>
   118e0:	cmp	r0, #0
   118e4:	ldrne	r1, [r5, #8]!
   118e8:	cmpne	r1, #0
   118ec:	bne	118d8 <__snprintf_chk@plt+0x314>
   118f0:	ldr	r4, [r5, #4]
   118f4:	movw	r1, #25701	; 0x6465
   118f8:	movt	r1, #1
   118fc:	mov	r0, #0
   11900:	mov	r2, #5
   11904:	bl	1133c <dcgettext@plt>
   11908:	mov	r1, r0
   1190c:	movw	r2, #25361	; 0x6311
   11910:	movt	r2, #1
   11914:	movw	r3, #25724	; 0x647c
   11918:	movt	r3, #1
   1191c:	mov	r0, #1
   11920:	bl	114d4 <__printf_chk@plt>
   11924:	movw	r5, #25322	; 0x62ea
   11928:	movt	r5, #1
   1192c:	cmp	r4, #0
   11930:	moveq	r4, r5
   11934:	mov	r0, #5
   11938:	mov	r1, #0
   1193c:	bl	11540 <setlocale@plt>
   11940:	cmp	r0, #0
   11944:	beq	11984 <__snprintf_chk@plt+0x3c0>
   11948:	movw	r1, #25764	; 0x64a4
   1194c:	movt	r1, #1
   11950:	mov	r2, #3
   11954:	bl	115ac <strncmp@plt>
   11958:	cmp	r0, #0
   1195c:	beq	11984 <__snprintf_chk@plt+0x3c0>
   11960:	movw	r1, #25768	; 0x64a8
   11964:	movt	r1, #1
   11968:	mov	r0, #0
   1196c:	mov	r2, #5
   11970:	bl	1133c <dcgettext@plt>
   11974:	movw	r1, #29500	; 0x733c
   11978:	movt	r1, #2
   1197c:	ldr	r1, [r1]
   11980:	bl	112a0 <fputs_unlocked@plt>
   11984:	movw	r1, #25839	; 0x64ef
   11988:	movt	r1, #1
   1198c:	mov	r0, #0
   11990:	mov	r2, #5
   11994:	bl	1133c <dcgettext@plt>
   11998:	mov	r1, r0
   1199c:	movw	r2, #25724	; 0x647c
   119a0:	movt	r2, #1
   119a4:	mov	r0, #1
   119a8:	mov	r3, r5
   119ac:	bl	114d4 <__printf_chk@plt>
   119b0:	movw	r1, #25866	; 0x650a
   119b4:	movt	r1, #1
   119b8:	mov	r0, #0
   119bc:	mov	r2, #5
   119c0:	bl	1133c <dcgettext@plt>
   119c4:	mov	r1, r0
   119c8:	movw	r0, #25634	; 0x6422
   119cc:	movt	r0, #1
   119d0:	movw	r3, #25916	; 0x653c
   119d4:	movt	r3, #1
   119d8:	cmp	r4, r5
   119dc:	moveq	r3, r0
   119e0:	mov	r0, #1
   119e4:	mov	r2, r4
   119e8:	bl	114d4 <__printf_chk@plt>
   119ec:	sub	sp, fp, #8
   119f0:	pop	{r4, r5, fp, pc}
   119f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119f8:	add	fp, sp, #28
   119fc:	sub	sp, sp, #4
   11a00:	vpush	{d8}
   11a04:	sub	sp, sp, #160	; 0xa0
   11a08:	mov	r4, r1
   11a0c:	mov	r5, r0
   11a10:	ldr	r0, [r1]
   11a14:	bl	129c8 <__snprintf_chk@plt+0x1404>
   11a18:	movw	r1, #25916	; 0x653c
   11a1c:	movt	r1, #1
   11a20:	mov	r0, #6
   11a24:	bl	11540 <setlocale@plt>
   11a28:	movw	r6, #25365	; 0x6315
   11a2c:	movt	r6, #1
   11a30:	movw	r1, #25330	; 0x62f2
   11a34:	movt	r1, #1
   11a38:	mov	r0, r6
   11a3c:	bl	11594 <bindtextdomain@plt>
   11a40:	mov	r0, r6
   11a44:	bl	1136c <textdomain@plt>
   11a48:	bl	11ec0 <__snprintf_chk@plt+0x8fc>
   11a4c:	movw	r0, #10224	; 0x27f0
   11a50:	movt	r0, #1
   11a54:	bl	15bac <__snprintf_chk@plt+0x45e8>
   11a58:	mov	sl, #0
   11a5c:	movw	r6, #25354	; 0x630a
   11a60:	movt	r6, #1
   11a64:	movw	r7, #26144	; 0x6620
   11a68:	movt	r7, #1
   11a6c:	movw	r8, #29504	; 0x7340
   11a70:	movt	r8, #2
   11a74:	mov	r9, #1
   11a78:	b	11a88 <__snprintf_chk@plt+0x4c4>
   11a7c:	movw	r0, #29520	; 0x7350
   11a80:	movt	r0, #2
   11a84:	strb	r9, [r0]
   11a88:	str	sl, [sp]
   11a8c:	mov	r0, r5
   11a90:	mov	r1, r4
   11a94:	mov	r2, r6
   11a98:	mov	r3, r7
   11a9c:	bl	11450 <getopt_long@plt>
   11aa0:	cmp	r0, #117	; 0x75
   11aa4:	bgt	11ad0 <__snprintf_chk@plt+0x50c>
   11aa8:	cmp	r0, #106	; 0x6a
   11aac:	ble	11b38 <__snprintf_chk@plt+0x574>
   11ab0:	cmp	r0, #107	; 0x6b
   11ab4:	bne	11af0 <__snprintf_chk@plt+0x52c>
   11ab8:	ldr	r0, [r8]
   11abc:	bl	11ed4 <__snprintf_chk@plt+0x910>
   11ac0:	movw	r0, #29512	; 0x7348
   11ac4:	movt	r0, #2
   11ac8:	vstr	d0, [r0]
   11acc:	b	11a88 <__snprintf_chk@plt+0x4c4>
   11ad0:	cmp	r0, #118	; 0x76
   11ad4:	beq	11a7c <__snprintf_chk@plt+0x4b8>
   11ad8:	cmp	r0, #256	; 0x100
   11adc:	bne	11b1c <__snprintf_chk@plt+0x558>
   11ae0:	movw	r0, #29521	; 0x7351
   11ae4:	movt	r0, #2
   11ae8:	strb	r9, [r0]
   11aec:	b	11a88 <__snprintf_chk@plt+0x4c4>
   11af0:	cmp	r0, #115	; 0x73
   11af4:	bne	11eb8 <__snprintf_chk@plt+0x8f4>
   11af8:	ldr	r0, [r8]
   11afc:	sub	r1, fp, #59	; 0x3b
   11b00:	bl	125ac <__snprintf_chk@plt+0xfe8>
   11b04:	movw	r1, #28976	; 0x7130
   11b08:	movt	r1, #2
   11b0c:	str	r0, [r1]
   11b10:	cmn	r0, #1
   11b14:	bne	11a88 <__snprintf_chk@plt+0x4c4>
   11b18:	b	11eb8 <__snprintf_chk@plt+0x8f4>
   11b1c:	movw	r1, #257	; 0x101
   11b20:	cmp	r0, r1
   11b24:	bne	11eb8 <__snprintf_chk@plt+0x8f4>
   11b28:	movw	r0, #29522	; 0x7352
   11b2c:	movt	r0, #2
   11b30:	strb	r9, [r0]
   11b34:	b	11a88 <__snprintf_chk@plt+0x4c4>
   11b38:	cmn	r0, #1
   11b3c:	bne	11e58 <__snprintf_chk@plt+0x894>
   11b40:	movw	r6, #29488	; 0x7330
   11b44:	movt	r6, #2
   11b48:	ldr	r0, [r6]
   11b4c:	sub	r1, r5, r0
   11b50:	cmp	r1, #1
   11b54:	ble	11eb8 <__snprintf_chk@plt+0x8f4>
   11b58:	add	r1, r0, #1
   11b5c:	str	r1, [r6]
   11b60:	ldr	r0, [r4, r0, lsl #2]
   11b64:	bl	11ed4 <__snprintf_chk@plt+0x910>
   11b68:	vorr	d8, d0, d0
   11b6c:	ldr	r0, [r6]
   11b70:	ldr	r0, [r4, r0, lsl #2]!
   11b74:	movw	r6, #29524	; 0x7354
   11b78:	movt	r6, #2
   11b7c:	str	r0, [r6]
   11b80:	movw	r0, #29521	; 0x7351
   11b84:	movt	r0, #2
   11b88:	ldrb	r0, [r0]
   11b8c:	cmp	r0, #0
   11b90:	bne	11ba0 <__snprintf_chk@plt+0x5dc>
   11b94:	mov	r0, #0
   11b98:	mov	r1, #0
   11b9c:	bl	11588 <setpgid@plt>
   11ba0:	movw	r0, #28976	; 0x7130
   11ba4:	movt	r0, #2
   11ba8:	ldr	r0, [r0]
   11bac:	bl	11f8c <__snprintf_chk@plt+0x9c8>
   11bb0:	mov	r0, #21
   11bb4:	mov	r1, #1
   11bb8:	bl	11324 <signal@plt>
   11bbc:	mov	r0, #22
   11bc0:	mov	r1, #1
   11bc4:	bl	11324 <signal@plt>
   11bc8:	bl	12024 <__snprintf_chk@plt+0xa60>
   11bcc:	bl	11558 <fork@plt>
   11bd0:	movw	r7, #29528	; 0x7358
   11bd4:	movt	r7, #2
   11bd8:	str	r0, [r7]
   11bdc:	cmp	r0, #0
   11be0:	beq	11c20 <__snprintf_chk@plt+0x65c>
   11be4:	cmn	r0, #1
   11be8:	bne	11c90 <__snprintf_chk@plt+0x6cc>
   11bec:	bl	11498 <__errno_location@plt>
   11bf0:	ldr	r4, [r0]
   11bf4:	movw	r1, #25389	; 0x632d
   11bf8:	movt	r1, #1
   11bfc:	mov	r0, #0
   11c00:	mov	r2, #5
   11c04:	bl	1133c <dcgettext@plt>
   11c08:	mov	r2, r0
   11c0c:	mov	r0, #0
   11c10:	mov	r1, r4
   11c14:	bl	113fc <error@plt>
   11c18:	mov	r0, #125	; 0x7d
   11c1c:	b	11e48 <__snprintf_chk@plt+0x884>
   11c20:	mov	r0, #21
   11c24:	mov	r1, #0
   11c28:	bl	11324 <signal@plt>
   11c2c:	mov	r0, #22
   11c30:	mov	r1, #0
   11c34:	bl	11324 <signal@plt>
   11c38:	ldr	r0, [r4]
   11c3c:	mov	r1, r4
   11c40:	bl	1130c <execvp@plt>
   11c44:	bl	11498 <__errno_location@plt>
   11c48:	ldr	r4, [r0]
   11c4c:	movw	r1, #25413	; 0x6345
   11c50:	movt	r1, #1
   11c54:	mov	r0, #0
   11c58:	mov	r2, #5
   11c5c:	bl	1133c <dcgettext@plt>
   11c60:	mov	r5, r0
   11c64:	ldr	r0, [r6]
   11c68:	bl	14200 <__snprintf_chk@plt+0x2c3c>
   11c6c:	mov	r3, r0
   11c70:	mov	r0, #0
   11c74:	mov	r1, r4
   11c78:	mov	r2, r5
   11c7c:	bl	113fc <error@plt>
   11c80:	mov	r0, #126	; 0x7e
   11c84:	cmp	r4, #2
   11c88:	movweq	r0, #127	; 0x7f
   11c8c:	b	11e48 <__snprintf_chk@plt+0x884>
   11c90:	mov	r0, #14
   11c94:	bl	12070 <__snprintf_chk@plt+0xaac>
   11c98:	vorr	d0, d8, d8
   11c9c:	mov	r0, #1
   11ca0:	bl	120e8 <__snprintf_chk@plt+0xb24>
   11ca4:	movw	r0, #28976	; 0x7130
   11ca8:	movt	r0, #2
   11cac:	ldr	r0, [r0]
   11cb0:	add	r1, sp, #8
   11cb4:	bl	12218 <__snprintf_chk@plt+0xc54>
   11cb8:	ldr	r0, [r7]
   11cbc:	sub	r1, fp, #64	; 0x40
   11cc0:	mov	r2, #1
   11cc4:	bl	113b4 <waitpid@plt>
   11cc8:	cmp	r0, #0
   11ccc:	bne	11cf8 <__snprintf_chk@plt+0x734>
   11cd0:	add	r4, sp, #8
   11cd4:	sub	r5, fp, #64	; 0x40
   11cd8:	mov	r0, r4
   11cdc:	bl	114c8 <sigsuspend@plt>
   11ce0:	ldr	r0, [r7]
   11ce4:	mov	r1, r5
   11ce8:	mov	r2, #1
   11cec:	bl	113b4 <waitpid@plt>
   11cf0:	cmp	r0, #0
   11cf4:	beq	11cd8 <__snprintf_chk@plt+0x714>
   11cf8:	cmn	r0, #1
   11cfc:	ble	11dac <__snprintf_chk@plt+0x7e8>
   11d00:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11d04:	ands	r4, r0, #127	; 0x7f
   11d08:	beq	11de0 <__snprintf_chk@plt+0x81c>
   11d0c:	mov	r1, #16777216	; 0x1000000
   11d10:	add	r1, r1, r4, lsl #24
   11d14:	cmp	r1, #33554432	; 0x2000000
   11d18:	blt	11de8 <__snprintf_chk@plt+0x824>
   11d1c:	tst	r0, #128	; 0x80
   11d20:	beq	11d48 <__snprintf_chk@plt+0x784>
   11d24:	movw	r1, #25464	; 0x6378
   11d28:	movt	r1, #1
   11d2c:	mov	r0, #0
   11d30:	mov	r2, #5
   11d34:	bl	1133c <dcgettext@plt>
   11d38:	mov	r2, r0
   11d3c:	mov	r0, #0
   11d40:	mov	r1, #0
   11d44:	bl	113fc <error@plt>
   11d48:	movw	r5, #29532	; 0x735c
   11d4c:	movt	r5, #2
   11d50:	ldrb	r0, [r5]
   11d54:	cmp	r0, #0
   11d58:	bne	11d84 <__snprintf_chk@plt+0x7c0>
   11d5c:	bl	122d8 <__snprintf_chk@plt+0xd14>
   11d60:	cmp	r0, #0
   11d64:	beq	11d84 <__snprintf_chk@plt+0x7c0>
   11d68:	mov	r0, r4
   11d6c:	mov	r1, #0
   11d70:	bl	11324 <signal@plt>
   11d74:	mov	r0, r4
   11d78:	bl	12070 <__snprintf_chk@plt+0xaac>
   11d7c:	mov	r0, r4
   11d80:	bl	112ac <raise@plt>
   11d84:	cmp	r4, #9
   11d88:	bne	11da4 <__snprintf_chk@plt+0x7e0>
   11d8c:	ldrb	r0, [r5]
   11d90:	cmp	r0, #0
   11d94:	movne	r0, #1
   11d98:	movwne	r1, #29522	; 0x7352
   11d9c:	movtne	r1, #2
   11da0:	strbne	r0, [r1]
   11da4:	orr	r0, r4, #128	; 0x80
   11da8:	b	11e14 <__snprintf_chk@plt+0x850>
   11dac:	bl	11498 <__errno_location@plt>
   11db0:	ldr	r4, [r0]
   11db4:	movw	r1, #25438	; 0x635e
   11db8:	movt	r1, #1
   11dbc:	mov	r0, #0
   11dc0:	mov	r2, #5
   11dc4:	bl	1133c <dcgettext@plt>
   11dc8:	mov	r2, r0
   11dcc:	mov	r0, #0
   11dd0:	mov	r1, r4
   11dd4:	bl	113fc <error@plt>
   11dd8:	mov	r0, #125	; 0x7d
   11ddc:	b	11e14 <__snprintf_chk@plt+0x850>
   11de0:	ubfx	r0, r0, #8, #8
   11de4:	b	11e14 <__snprintf_chk@plt+0x850>
   11de8:	movw	r1, #25498	; 0x639a
   11dec:	movt	r1, #1
   11df0:	mov	r0, #0
   11df4:	mov	r2, #5
   11df8:	bl	1133c <dcgettext@plt>
   11dfc:	mov	r2, r0
   11e00:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11e04:	mov	r0, #0
   11e08:	mov	r1, #0
   11e0c:	bl	113fc <error@plt>
   11e10:	mov	r0, #1
   11e14:	str	r0, [fp, #-64]	; 0xffffffc0
   11e18:	movw	r0, #29532	; 0x735c
   11e1c:	movt	r0, #2
   11e20:	ldrb	r0, [r0]
   11e24:	cmp	r0, #1
   11e28:	bne	11e44 <__snprintf_chk@plt+0x880>
   11e2c:	movw	r0, #29522	; 0x7352
   11e30:	movt	r0, #2
   11e34:	ldrb	r0, [r0]
   11e38:	cmp	r0, #0
   11e3c:	moveq	r0, #124	; 0x7c
   11e40:	streq	r0, [fp, #-64]	; 0xffffffc0
   11e44:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11e48:	sub	sp, fp, #40	; 0x28
   11e4c:	vpop	{d8}
   11e50:	add	sp, sp, #4
   11e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e58:	cmn	r0, #3
   11e5c:	bne	11ea8 <__snprintf_chk@plt+0x8e4>
   11e60:	movw	r0, #28980	; 0x7134
   11e64:	movt	r0, #2
   11e68:	ldr	r3, [r0]
   11e6c:	movw	r0, #29500	; 0x733c
   11e70:	movt	r0, #2
   11e74:	ldr	r0, [r0]
   11e78:	mov	r1, #0
   11e7c:	movw	r2, #25375	; 0x631f
   11e80:	movt	r2, #1
   11e84:	str	r2, [sp]
   11e88:	str	r1, [sp, #4]
   11e8c:	movw	r1, #25322	; 0x62ea
   11e90:	movt	r1, #1
   11e94:	movw	r2, #25361	; 0x6311
   11e98:	movt	r2, #1
   11e9c:	bl	14ccc <__snprintf_chk@plt+0x3708>
   11ea0:	mov	r0, #0
   11ea4:	bl	11474 <exit@plt>
   11ea8:	cmn	r0, #2
   11eac:	bne	11eb8 <__snprintf_chk@plt+0x8f4>
   11eb0:	mov	r0, #0
   11eb4:	bl	116c0 <__snprintf_chk@plt+0xfc>
   11eb8:	mov	r0, #125	; 0x7d
   11ebc:	bl	116c0 <__snprintf_chk@plt+0xfc>
   11ec0:	movw	r0, #28984	; 0x7138
   11ec4:	movt	r0, #2
   11ec8:	mov	r1, #125	; 0x7d
   11ecc:	str	r1, [r0]
   11ed0:	bx	lr
   11ed4:	push	{r4, r5, fp, lr}
   11ed8:	add	fp, sp, #8
   11edc:	sub	sp, sp, #16
   11ee0:	mov	r4, r0
   11ee4:	add	r1, sp, #4
   11ee8:	add	r2, sp, #8
   11eec:	movw	r3, #10064	; 0x2750
   11ef0:	movt	r3, #1
   11ef4:	bl	151c8 <__snprintf_chk@plt+0x3c04>
   11ef8:	cmp	r0, #0
   11efc:	bne	11f10 <__snprintf_chk@plt+0x94c>
   11f00:	bl	11498 <__errno_location@plt>
   11f04:	ldr	r0, [r0]
   11f08:	cmp	r0, #34	; 0x22
   11f0c:	bne	11f50 <__snprintf_chk@plt+0x98c>
   11f10:	vldr	d16, [sp, #8]
   11f14:	vcmpe.f64	d16, #0.0
   11f18:	vmrs	APSR_nzcv, fpscr
   11f1c:	blt	11f50 <__snprintf_chk@plt+0x98c>
   11f20:	ldr	r0, [sp, #4]
   11f24:	ldrb	r1, [r0]
   11f28:	cmp	r1, #0
   11f2c:	ldrbne	r0, [r0, #1]
   11f30:	cmpne	r0, #0
   11f34:	bne	11f50 <__snprintf_chk@plt+0x98c>
   11f38:	add	r0, sp, #8
   11f3c:	bl	12338 <__snprintf_chk@plt+0xd74>
   11f40:	cmp	r0, #0
   11f44:	vldrne	d0, [sp, #8]
   11f48:	subne	sp, fp, #8
   11f4c:	popne	{r4, r5, fp, pc}
   11f50:	movw	r1, #25976	; 0x6578
   11f54:	movt	r1, #1
   11f58:	mov	r0, #0
   11f5c:	mov	r2, #5
   11f60:	bl	1133c <dcgettext@plt>
   11f64:	mov	r5, r0
   11f68:	mov	r0, r4
   11f6c:	bl	14200 <__snprintf_chk@plt+0x2c3c>
   11f70:	mov	r3, r0
   11f74:	mov	r0, #0
   11f78:	mov	r1, #0
   11f7c:	mov	r2, r5
   11f80:	bl	113fc <error@plt>
   11f84:	mov	r0, #125	; 0x7d
   11f88:	bl	116c0 <__snprintf_chk@plt+0xfc>
   11f8c:	push	{r4, r5, fp, lr}
   11f90:	add	fp, sp, #8
   11f94:	sub	sp, sp, #144	; 0x90
   11f98:	mov	r4, r0
   11f9c:	add	r5, sp, #4
   11fa0:	add	r0, r5, #4
   11fa4:	bl	1154c <sigemptyset@plt>
   11fa8:	movw	r0, #9192	; 0x23e8
   11fac:	movt	r0, #1
   11fb0:	str	r0, [sp, #4]
   11fb4:	mov	r0, #268435456	; 0x10000000
   11fb8:	str	r0, [sp, #136]	; 0x88
   11fbc:	mov	r0, #14
   11fc0:	mov	r1, r5
   11fc4:	mov	r2, #0
   11fc8:	bl	11390 <sigaction@plt>
   11fcc:	mov	r0, #2
   11fd0:	mov	r1, r5
   11fd4:	mov	r2, #0
   11fd8:	bl	11390 <sigaction@plt>
   11fdc:	mov	r0, #3
   11fe0:	mov	r1, r5
   11fe4:	mov	r2, #0
   11fe8:	bl	11390 <sigaction@plt>
   11fec:	mov	r0, #1
   11ff0:	mov	r1, r5
   11ff4:	mov	r2, #0
   11ff8:	bl	11390 <sigaction@plt>
   11ffc:	mov	r0, #15
   12000:	mov	r1, r5
   12004:	mov	r2, #0
   12008:	bl	11390 <sigaction@plt>
   1200c:	mov	r0, r4
   12010:	mov	r1, r5
   12014:	mov	r2, #0
   12018:	bl	11390 <sigaction@plt>
   1201c:	sub	sp, fp, #8
   12020:	pop	{r4, r5, fp, pc}
   12024:	push	{r4, sl, fp, lr}
   12028:	add	fp, sp, #8
   1202c:	sub	sp, sp, #144	; 0x90
   12030:	add	r4, sp, #4
   12034:	add	r0, r4, #4
   12038:	bl	1154c <sigemptyset@plt>
   1203c:	movw	r0, #9640	; 0x25a8
   12040:	movt	r0, #1
   12044:	str	r0, [sp, #4]
   12048:	mov	r0, #268435456	; 0x10000000
   1204c:	str	r0, [sp, #136]	; 0x88
   12050:	mov	r0, #17
   12054:	mov	r1, r4
   12058:	mov	r2, #0
   1205c:	bl	11390 <sigaction@plt>
   12060:	mov	r0, #17
   12064:	bl	12070 <__snprintf_chk@plt+0xaac>
   12068:	sub	sp, fp, #8
   1206c:	pop	{r4, sl, fp, pc}
   12070:	push	{r4, r5, fp, lr}
   12074:	add	fp, sp, #8
   12078:	sub	sp, sp, #128	; 0x80
   1207c:	mov	r4, r0
   12080:	mov	r5, sp
   12084:	mov	r0, r5
   12088:	bl	1154c <sigemptyset@plt>
   1208c:	mov	r0, r5
   12090:	mov	r1, r4
   12094:	bl	11420 <sigaddset@plt>
   12098:	mov	r0, #1
   1209c:	mov	r1, r5
   120a0:	mov	r2, #0
   120a4:	bl	112dc <sigprocmask@plt>
   120a8:	cmp	r0, #0
   120ac:	beq	120dc <__snprintf_chk@plt+0xb18>
   120b0:	bl	11498 <__errno_location@plt>
   120b4:	ldr	r4, [r0]
   120b8:	movw	r1, #26036	; 0x65b4
   120bc:	movt	r1, #1
   120c0:	mov	r0, #0
   120c4:	mov	r2, #5
   120c8:	bl	1133c <dcgettext@plt>
   120cc:	mov	r2, r0
   120d0:	mov	r0, #0
   120d4:	mov	r1, r4
   120d8:	bl	113fc <error@plt>
   120dc:	sub	sp, fp, #8
   120e0:	pop	{r4, r5, fp, pc}
   120e4:	nop	{0}
   120e8:	push	{r4, sl, fp, lr}
   120ec:	add	fp, sp, #8
   120f0:	vpush	{d8}
   120f4:	sub	sp, sp, #32
   120f8:	mov	r4, r0
   120fc:	vmov.f64	d8, d0
   12100:	add	r0, sp, #24
   12104:	bl	128d8 <__snprintf_chk@plt+0x1314>
   12108:	mov	r0, #0
   1210c:	str	r0, [sp, #12]
   12110:	str	r0, [sp, #8]
   12114:	ldr	r0, [sp, #24]
   12118:	ldr	r1, [sp, #28]
   1211c:	str	r1, [sp, #20]
   12120:	str	r0, [sp, #16]
   12124:	add	r2, sp, #4
   12128:	mov	r0, #0
   1212c:	mov	r1, #0
   12130:	bl	11360 <timer_create@plt>
   12134:	cmp	r0, #0
   12138:	beq	1217c <__snprintf_chk@plt+0xbb8>
   1213c:	cmp	r4, #0
   12140:	beq	121d4 <__snprintf_chk@plt+0xc10>
   12144:	bl	11498 <__errno_location@plt>
   12148:	ldr	r4, [r0]
   1214c:	cmp	r4, #38	; 0x26
   12150:	beq	121d4 <__snprintf_chk@plt+0xc10>
   12154:	movw	r1, #26080	; 0x65e0
   12158:	movt	r1, #1
   1215c:	mov	r0, #0
   12160:	mov	r2, #5
   12164:	bl	1133c <dcgettext@plt>
   12168:	mov	r2, r0
   1216c:	mov	r0, #0
   12170:	mov	r1, r4
   12174:	bl	113fc <error@plt>
   12178:	b	121d4 <__snprintf_chk@plt+0xc10>
   1217c:	ldr	r0, [sp, #4]
   12180:	add	r2, sp, #8
   12184:	mov	r1, #0
   12188:	mov	r3, #0
   1218c:	bl	11384 <timer_settime@plt>
   12190:	cmp	r0, #0
   12194:	beq	12204 <__snprintf_chk@plt+0xc40>
   12198:	cmp	r4, #0
   1219c:	beq	121cc <__snprintf_chk@plt+0xc08>
   121a0:	bl	11498 <__errno_location@plt>
   121a4:	ldr	r4, [r0]
   121a8:	movw	r1, #26057	; 0x65c9
   121ac:	movt	r1, #1
   121b0:	mov	r0, #0
   121b4:	mov	r2, #5
   121b8:	bl	1133c <dcgettext@plt>
   121bc:	mov	r2, r0
   121c0:	mov	r0, #0
   121c4:	mov	r1, r4
   121c8:	bl	113fc <error@plt>
   121cc:	ldr	r0, [sp, #4]
   121d0:	bl	11408 <timer_delete@plt>
   121d4:	vldr	d16, [pc, #52]	; 12210 <__snprintf_chk@plt+0xc4c>
   121d8:	mvn	r0, #0
   121dc:	vcmpe.f64	d8, d16
   121e0:	vmrs	APSR_nzcv, fpscr
   121e4:	bge	12200 <__snprintf_chk@plt+0xc3c>
   121e8:	vcvt.u32.f64	s0, d8
   121ec:	vmov	r0, s0
   121f0:	vcvt.f64.u32	d16, s0
   121f4:	vcmpe.f64	d16, d8
   121f8:	vmrs	APSR_nzcv, fpscr
   121fc:	addmi	r0, r0, #1
   12200:	bl	11348 <alarm@plt>
   12204:	sub	sp, fp, #16
   12208:	vpop	{d8}
   1220c:	pop	{r4, sl, fp, pc}
   12210:			; <UNDEFINED> instruction: 0xffe00000
   12214:	strdmi	pc, [pc, #255]	; 1231b <__snprintf_chk@plt+0xd57>
   12218:	push	{r4, r5, r6, sl, fp, lr}
   1221c:	add	fp, sp, #16
   12220:	sub	sp, sp, #128	; 0x80
   12224:	mov	r4, r1
   12228:	mov	r6, r0
   1222c:	mov	r5, sp
   12230:	mov	r0, r5
   12234:	bl	1154c <sigemptyset@plt>
   12238:	mov	r0, r5
   1223c:	mov	r1, #14
   12240:	bl	11420 <sigaddset@plt>
   12244:	mov	r0, r5
   12248:	mov	r1, #2
   1224c:	bl	11420 <sigaddset@plt>
   12250:	mov	r0, r5
   12254:	mov	r1, #3
   12258:	bl	11420 <sigaddset@plt>
   1225c:	mov	r0, r5
   12260:	mov	r1, #1
   12264:	bl	11420 <sigaddset@plt>
   12268:	mov	r0, r5
   1226c:	mov	r1, #15
   12270:	bl	11420 <sigaddset@plt>
   12274:	mov	r0, r5
   12278:	mov	r1, r6
   1227c:	bl	11420 <sigaddset@plt>
   12280:	mov	r0, r5
   12284:	mov	r1, #17
   12288:	bl	11420 <sigaddset@plt>
   1228c:	mov	r0, #0
   12290:	mov	r1, r5
   12294:	mov	r2, r4
   12298:	bl	112dc <sigprocmask@plt>
   1229c:	cmp	r0, #0
   122a0:	beq	122d0 <__snprintf_chk@plt+0xd0c>
   122a4:	bl	11498 <__errno_location@plt>
   122a8:	ldr	r4, [r0]
   122ac:	movw	r1, #26036	; 0x65b4
   122b0:	movt	r1, #1
   122b4:	mov	r0, #0
   122b8:	mov	r2, #5
   122bc:	bl	1133c <dcgettext@plt>
   122c0:	mov	r2, r0
   122c4:	mov	r0, #0
   122c8:	mov	r1, r4
   122cc:	bl	113fc <error@plt>
   122d0:	sub	sp, fp, #16
   122d4:	pop	{r4, r5, r6, sl, fp, pc}
   122d8:	push	{r4, r5, fp, lr}
   122dc:	add	fp, sp, #8
   122e0:	mov	r4, #0
   122e4:	mov	r0, #4
   122e8:	mov	r1, #0
   122ec:	bl	114e0 <prctl@plt>
   122f0:	cmp	r0, #0
   122f4:	moveq	r4, #1
   122f8:	moveq	r0, r4
   122fc:	popeq	{r4, r5, fp, pc}
   12300:	bl	11498 <__errno_location@plt>
   12304:	ldr	r5, [r0]
   12308:	movw	r1, #26102	; 0x65f6
   1230c:	movt	r1, #1
   12310:	mov	r0, #0
   12314:	mov	r2, #5
   12318:	bl	1133c <dcgettext@plt>
   1231c:	mov	r2, r0
   12320:	mov	r0, #0
   12324:	mov	r1, r5
   12328:	bl	113fc <error@plt>
   1232c:	mov	r0, r4
   12330:	pop	{r4, r5, fp, pc}
   12334:	nop	{0}
   12338:	vmov.f64	d16, #112	; 0x3f800000  1.0
   1233c:	sub	r3, r1, #100	; 0x64
   12340:	mov	r2, #0
   12344:	cmp	r3, #15
   12348:	bhi	1239c <__snprintf_chk@plt+0xdd8>
   1234c:	add	r1, pc, #0
   12350:	ldr	pc, [r1, r3, lsl #2]
   12354:	muleq	r1, r4, r3
   12358:	andeq	r2, r1, r4, lsr #7
   1235c:	andeq	r2, r1, r4, lsr #7
   12360:	andeq	r2, r1, r4, lsr #7
   12364:	andeq	r2, r1, ip, lsr #7
   12368:	andeq	r2, r1, r4, lsr #7
   1236c:	andeq	r2, r1, r4, lsr #7
   12370:	andeq	r2, r1, r4, lsr #7
   12374:	andeq	r2, r1, r4, lsr #7
   12378:			; <UNDEFINED> instruction: 0x000123b4
   1237c:	andeq	r2, r1, r4, lsr #7
   12380:	andeq	r2, r1, r4, lsr #7
   12384:	andeq	r2, r1, r4, lsr #7
   12388:	andeq	r2, r1, r4, lsr #7
   1238c:	andeq	r2, r1, r4, lsr #7
   12390:			; <UNDEFINED> instruction: 0x000123b8
   12394:	vldr	d16, [pc, #52]	; 123d0 <__snprintf_chk@plt+0xe0c>
   12398:	b	123b8 <__snprintf_chk@plt+0xdf4>
   1239c:	cmp	r1, #0
   123a0:	beq	123b8 <__snprintf_chk@plt+0xdf4>
   123a4:	mov	r0, r2
   123a8:	bx	lr
   123ac:	vldr	d16, [pc, #36]	; 123d8 <__snprintf_chk@plt+0xe14>
   123b0:	b	123b8 <__snprintf_chk@plt+0xdf4>
   123b4:	vldr	d16, [pc, #36]	; 123e0 <__snprintf_chk@plt+0xe1c>
   123b8:	vldr	d17, [r0]
   123bc:	vmul.f64	d16, d16, d17
   123c0:	vstr	d16, [r0]
   123c4:	mov	r2, #1
   123c8:	mov	r0, r2
   123cc:	bx	lr
   123d0:	andeq	r0, r0, r0
   123d4:	rscsmi	r1, r5, r0, lsl #16
   123d8:	andeq	r0, r0, r0
   123dc:	adcmi	r2, ip, r0
   123e0:	andeq	r0, r0, r0
   123e4:	submi	r0, lr, r0
   123e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   123ec:	add	fp, sp, #24
   123f0:	vpush	{d8}
   123f4:	sub	sp, sp, #32
   123f8:	mov	r4, r0
   123fc:	cmp	r0, #14
   12400:	bne	12420 <__snprintf_chk@plt+0xe5c>
   12404:	movw	r0, #29532	; 0x735c
   12408:	movt	r0, #2
   1240c:	mov	r1, #1
   12410:	strb	r1, [r0]
   12414:	movw	r0, #28976	; 0x7130
   12418:	movt	r0, #2
   1241c:	ldr	r4, [r0]
   12420:	movw	r8, #29528	; 0x7358
   12424:	movt	r8, #2
   12428:	ldr	r0, [r8]
   1242c:	cmp	r0, #0
   12430:	beq	1256c <__snprintf_chk@plt+0xfa8>
   12434:	movw	r7, #29512	; 0x7348
   12438:	movt	r7, #2
   1243c:	vldr	d8, [r7]
   12440:	vcmp.f64	d8, #0.0
   12444:	vmrs	APSR_nzcv, fpscr
   12448:	beq	12484 <__snprintf_chk@plt+0xec0>
   1244c:	bl	11498 <__errno_location@plt>
   12450:	mov	r5, r0
   12454:	ldr	r6, [r0]
   12458:	movw	r0, #28976	; 0x7130
   1245c:	movt	r0, #2
   12460:	mov	r1, #9
   12464:	str	r1, [r0]
   12468:	mov	r9, #0
   1246c:	vmov.f64	d0, d8
   12470:	mov	r0, #0
   12474:	bl	120e8 <__snprintf_chk@plt+0xb24>
   12478:	str	r9, [r7]
   1247c:	str	r9, [r7, #4]
   12480:	str	r6, [r5]
   12484:	movw	r0, #29520	; 0x7350
   12488:	movt	r0, #2
   1248c:	ldrb	r0, [r0]
   12490:	cmp	r0, #1
   12494:	bne	1250c <__snprintf_chk@plt+0xf48>
   12498:	add	r1, sp, #13
   1249c:	mov	r0, r4
   124a0:	bl	1479c <__snprintf_chk@plt+0x31d8>
   124a4:	cmp	r0, #0
   124a8:	beq	124cc <__snprintf_chk@plt+0xf08>
   124ac:	movw	r0, #26001	; 0x6591
   124b0:	movt	r0, #1
   124b4:	stm	sp, {r0, r4}
   124b8:	add	r0, sp, #13
   124bc:	mov	r1, #19
   124c0:	mov	r2, #1
   124c4:	mov	r3, #19
   124c8:	bl	115c4 <__snprintf_chk@plt>
   124cc:	movw	r1, #26004	; 0x6594
   124d0:	movt	r1, #1
   124d4:	mov	r0, #0
   124d8:	mov	r2, #5
   124dc:	bl	1133c <dcgettext@plt>
   124e0:	mov	r5, r0
   124e4:	movw	r0, #29524	; 0x7354
   124e8:	movt	r0, #2
   124ec:	ldr	r0, [r0]
   124f0:	bl	14200 <__snprintf_chk@plt+0x2c3c>
   124f4:	str	r0, [sp]
   124f8:	add	r3, sp, #13
   124fc:	mov	r0, #0
   12500:	mov	r1, #0
   12504:	mov	r2, r5
   12508:	bl	113fc <error@plt>
   1250c:	ldr	r0, [r8]
   12510:	mov	r1, r4
   12514:	bl	12574 <__snprintf_chk@plt+0xfb0>
   12518:	movw	r0, #29521	; 0x7351
   1251c:	movt	r0, #2
   12520:	ldrb	r0, [r0]
   12524:	cmp	r0, #0
   12528:	bne	12544 <__snprintf_chk@plt+0xf80>
   1252c:	mov	r0, #0
   12530:	mov	r1, r4
   12534:	bl	12574 <__snprintf_chk@plt+0xfb0>
   12538:	cmp	r4, #9
   1253c:	cmpne	r4, #18
   12540:	bne	12550 <__snprintf_chk@plt+0xf8c>
   12544:	sub	sp, fp, #32
   12548:	vpop	{d8}
   1254c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12550:	ldr	r0, [r8]
   12554:	mov	r1, #18
   12558:	bl	12574 <__snprintf_chk@plt+0xfb0>
   1255c:	mov	r0, #0
   12560:	mov	r1, #18
   12564:	bl	12574 <__snprintf_chk@plt+0xfb0>
   12568:	b	12544 <__snprintf_chk@plt+0xf80>
   1256c:	add	r0, r4, #128	; 0x80
   12570:	bl	112f4 <_exit@plt>
   12574:	push	{r4, r5, fp, lr}
   12578:	add	fp, sp, #8
   1257c:	mov	r4, r1
   12580:	mov	r5, r0
   12584:	cmp	r0, #0
   12588:	bne	12598 <__snprintf_chk@plt+0xfd4>
   1258c:	mov	r0, r4
   12590:	mov	r1, #1
   12594:	bl	11324 <signal@plt>
   12598:	mov	r0, r5
   1259c:	mov	r1, r4
   125a0:	pop	{r4, r5, fp, lr}
   125a4:	b	1145c <kill@plt>
   125a8:	bx	lr
   125ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   125b0:	add	fp, sp, #24
   125b4:	sub	sp, sp, #8
   125b8:	mov	r8, r1
   125bc:	mov	r9, r0
   125c0:	ldrb	r0, [r0]
   125c4:	sub	r0, r0, #48	; 0x30
   125c8:	cmp	r0, #9
   125cc:	bhi	12644 <__snprintf_chk@plt+0x1080>
   125d0:	bl	11498 <__errno_location@plt>
   125d4:	mov	r6, r0
   125d8:	mov	r0, #0
   125dc:	str	r0, [r6]
   125e0:	mov	r1, sp
   125e4:	mov	r0, r9
   125e8:	mov	r2, #10
   125ec:	bl	112c4 <strtol@plt>
   125f0:	mov	r1, r0
   125f4:	mvn	r0, #0
   125f8:	ldr	r2, [sp]
   125fc:	cmp	r2, r9
   12600:	beq	12634 <__snprintf_chk@plt+0x1070>
   12604:	ldrb	r2, [r2]
   12608:	cmp	r2, #0
   1260c:	bne	12634 <__snprintf_chk@plt+0x1070>
   12610:	cmn	r1, #1
   12614:	beq	12634 <__snprintf_chk@plt+0x1070>
   12618:	ldr	r2, [r6]
   1261c:	cmp	r2, #0
   12620:	bne	12634 <__snprintf_chk@plt+0x1070>
   12624:	mov	r0, #127	; 0x7f
   12628:	cmp	r1, #254	; 0xfe
   1262c:	movwgt	r0, #255	; 0xff
   12630:	and	r0, r0, r1
   12634:	str	r0, [sp, #4]
   12638:	cmp	r0, #0
   1263c:	bge	126e0 <__snprintf_chk@plt+0x111c>
   12640:	b	126f8 <__snprintf_chk@plt+0x1134>
   12644:	mov	r0, r9
   12648:	bl	15164 <__snprintf_chk@plt+0x3ba0>
   1264c:	mov	r6, r0
   12650:	ldrb	r5, [r0]
   12654:	cmp	r5, #0
   12658:	beq	12690 <__snprintf_chk@plt+0x10cc>
   1265c:	add	r4, r6, #1
   12660:	movw	r7, #26328	; 0x66d8
   12664:	movt	r7, #1
   12668:	uxtb	r1, r5
   1266c:	mov	r0, r7
   12670:	mov	r2, #27
   12674:	bl	11510 <memchr@plt>
   12678:	cmp	r0, #0
   1267c:	subne	r0, r5, #32
   12680:	strbne	r0, [r4, #-1]
   12684:	ldrb	r5, [r4], #1
   12688:	cmp	r5, #0
   1268c:	bne	12668 <__snprintf_chk@plt+0x10a4>
   12690:	add	r1, sp, #4
   12694:	mov	r0, r6
   12698:	bl	14614 <__snprintf_chk@plt+0x3050>
   1269c:	cmp	r0, #0
   126a0:	beq	126cc <__snprintf_chk@plt+0x1108>
   126a4:	ldrb	r0, [r6]
   126a8:	cmp	r0, #83	; 0x53
   126ac:	bne	126c4 <__snprintf_chk@plt+0x1100>
   126b0:	ldrb	r0, [r6, #1]
   126b4:	cmp	r0, #73	; 0x49
   126b8:	ldrbeq	r0, [r6, #2]
   126bc:	cmpeq	r0, #71	; 0x47
   126c0:	beq	12738 <__snprintf_chk@plt+0x1174>
   126c4:	mvn	r0, #0
   126c8:	str	r0, [sp, #4]
   126cc:	mov	r0, r6
   126d0:	bl	129a0 <__snprintf_chk@plt+0x13dc>
   126d4:	ldr	r0, [sp, #4]
   126d8:	cmp	r0, #0
   126dc:	blt	126f8 <__snprintf_chk@plt+0x1134>
   126e0:	mov	r1, r8
   126e4:	bl	1479c <__snprintf_chk@plt+0x31d8>
   126e8:	cmp	r0, #0
   126ec:	ldreq	r0, [sp, #4]
   126f0:	subeq	sp, fp, #24
   126f4:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   126f8:	movw	r1, #26355	; 0x66f3
   126fc:	movt	r1, #1
   12700:	mov	r0, #0
   12704:	mov	r2, #5
   12708:	bl	1133c <dcgettext@plt>
   1270c:	mov	r5, r0
   12710:	mov	r0, r9
   12714:	bl	14200 <__snprintf_chk@plt+0x2c3c>
   12718:	mov	r3, r0
   1271c:	mov	r0, #0
   12720:	mov	r1, #0
   12724:	mov	r2, r5
   12728:	bl	113fc <error@plt>
   1272c:	mvn	r0, #0
   12730:	sub	sp, fp, #24
   12734:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12738:	add	r0, r6, #3
   1273c:	add	r1, sp, #4
   12740:	bl	14614 <__snprintf_chk@plt+0x3050>
   12744:	cmp	r0, #0
   12748:	bne	126c4 <__snprintf_chk@plt+0x1100>
   1274c:	b	126cc <__snprintf_chk@plt+0x1108>
   12750:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12754:	add	fp, sp, #24
   12758:	vpush	{d8}
   1275c:	sub	sp, sp, #8
   12760:	mov	r4, r1
   12764:	mov	r5, r0
   12768:	add	r1, sp, #4
   1276c:	bl	114ec <strtod@plt>
   12770:	vmov.f64	d8, d0
   12774:	ldr	r7, [sp, #4]
   12778:	ldrb	r0, [r7]
   1277c:	cmp	r0, #0
   12780:	beq	127b4 <__snprintf_chk@plt+0x11f0>
   12784:	bl	11498 <__errno_location@plt>
   12788:	mov	r6, r0
   1278c:	ldr	r8, [r0]
   12790:	mov	r1, sp
   12794:	mov	r0, r5
   12798:	bl	15660 <__snprintf_chk@plt+0x409c>
   1279c:	ldr	r0, [sp]
   127a0:	cmp	r7, r0
   127a4:	bcs	127b0 <__snprintf_chk@plt+0x11ec>
   127a8:	str	r0, [sp, #4]
   127ac:	b	127b8 <__snprintf_chk@plt+0x11f4>
   127b0:	str	r8, [r6]
   127b4:	vmov.f64	d0, d8
   127b8:	cmp	r4, #0
   127bc:	ldrne	r0, [sp, #4]
   127c0:	strne	r0, [r4]
   127c4:	sub	sp, fp, #32
   127c8:	vpop	{d8}
   127cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   127d0:	movw	r1, #29536	; 0x7360
   127d4:	movt	r1, #2
   127d8:	str	r0, [r1]
   127dc:	bx	lr
   127e0:	movw	r1, #29540	; 0x7364
   127e4:	movt	r1, #2
   127e8:	strb	r0, [r1]
   127ec:	bx	lr
   127f0:	push	{r4, r5, r6, sl, fp, lr}
   127f4:	add	fp, sp, #16
   127f8:	sub	sp, sp, #8
   127fc:	movw	r0, #29500	; 0x733c
   12800:	movt	r0, #2
   12804:	ldr	r0, [r0]
   12808:	bl	156e4 <__snprintf_chk@plt+0x4120>
   1280c:	cmp	r0, #0
   12810:	beq	12838 <__snprintf_chk@plt+0x1274>
   12814:	movw	r0, #29540	; 0x7364
   12818:	movt	r0, #2
   1281c:	ldrb	r0, [r0]
   12820:	cmp	r0, #0
   12824:	beq	12858 <__snprintf_chk@plt+0x1294>
   12828:	bl	11498 <__errno_location@plt>
   1282c:	ldr	r0, [r0]
   12830:	cmp	r0, #32
   12834:	bne	12858 <__snprintf_chk@plt+0x1294>
   12838:	movw	r0, #29496	; 0x7338
   1283c:	movt	r0, #2
   12840:	ldr	r0, [r0]
   12844:	bl	156e4 <__snprintf_chk@plt+0x4120>
   12848:	cmp	r0, #0
   1284c:	subeq	sp, fp, #16
   12850:	popeq	{r4, r5, r6, sl, fp, pc}
   12854:	b	128c8 <__snprintf_chk@plt+0x1304>
   12858:	movw	r1, #26389	; 0x6715
   1285c:	movt	r1, #1
   12860:	mov	r0, #0
   12864:	mov	r2, #5
   12868:	bl	1133c <dcgettext@plt>
   1286c:	mov	r4, r0
   12870:	movw	r0, #29536	; 0x7360
   12874:	movt	r0, #2
   12878:	ldr	r6, [r0]
   1287c:	bl	11498 <__errno_location@plt>
   12880:	ldr	r5, [r0]
   12884:	cmp	r6, #0
   12888:	bne	128a4 <__snprintf_chk@plt+0x12e0>
   1288c:	movw	r2, #26405	; 0x6725
   12890:	movt	r2, #1
   12894:	mov	r0, #0
   12898:	mov	r1, r5
   1289c:	mov	r3, r4
   128a0:	b	128c4 <__snprintf_chk@plt+0x1300>
   128a4:	mov	r0, r6
   128a8:	bl	140b0 <__snprintf_chk@plt+0x2aec>
   128ac:	mov	r3, r0
   128b0:	str	r4, [sp]
   128b4:	movw	r2, #26401	; 0x6721
   128b8:	movt	r2, #1
   128bc:	mov	r0, #0
   128c0:	mov	r1, r5
   128c4:	bl	113fc <error@plt>
   128c8:	movw	r0, #28984	; 0x7138
   128cc:	movt	r0, #2
   128d0:	ldr	r0, [r0]
   128d4:	bl	112f4 <_exit@plt>
   128d8:	push	{fp, lr}
   128dc:	mov	fp, sp
   128e0:	vldr	d16, [pc, #160]	; 12988 <__snprintf_chk@plt+0x13c4>
   128e4:	vcmpe.f64	d0, d16
   128e8:	vmrs	APSR_nzcv, fpscr
   128ec:	ble	12968 <__snprintf_chk@plt+0x13a4>
   128f0:	vldr	d16, [pc, #152]	; 12990 <__snprintf_chk@plt+0x13cc>
   128f4:	movw	ip, #51712	; 0xca00
   128f8:	movt	ip, #15258	; 0x3b9a
   128fc:	vcmpe.f64	d0, d16
   12900:	vmrs	APSR_nzcv, fpscr
   12904:	bpl	12978 <__snprintf_chk@plt+0x13b4>
   12908:	vcvt.s32.f64	s2, d0
   1290c:	vldr	d16, [pc, #132]	; 12998 <__snprintf_chk@plt+0x13d4>
   12910:	vmov	lr, s2
   12914:	vcvt.f64.s32	d17, s2
   12918:	vsub.f64	d17, d0, d17
   1291c:	vmul.f64	d16, d17, d16
   12920:	vcvt.s32.f64	s0, d16
   12924:	vmov	r2, s0
   12928:	vcvt.f64.s32	d17, s0
   1292c:	vcmpe.f64	d16, d17
   12930:	vmrs	APSR_nzcv, fpscr
   12934:	addgt	r2, r2, #1
   12938:	movw	r3, #12193	; 0x2fa1
   1293c:	movt	r3, #17592	; 0x44b8
   12940:	smmul	r3, r2, r3
   12944:	asr	r1, r3, #28
   12948:	add	r1, r1, r3, lsr #31
   1294c:	mls	r2, r1, ip, r2
   12950:	add	r1, r1, lr
   12954:	add	r1, r1, r2, asr #31
   12958:	cmp	r2, #0
   1295c:	addlt	r2, r2, ip
   12960:	bl	14888 <__snprintf_chk@plt+0x32c4>
   12964:	pop	{fp, pc}
   12968:	mov	r1, #-2147483648	; 0x80000000
   1296c:	mov	r2, #0
   12970:	bl	14888 <__snprintf_chk@plt+0x32c4>
   12974:	pop	{fp, pc}
   12978:	sub	r2, ip, #1
   1297c:	mvn	r1, #-2147483648	; 0x80000000
   12980:	bl	14888 <__snprintf_chk@plt+0x32c4>
   12984:	pop	{fp, pc}
   12988:	andeq	r0, r0, r0
   1298c:	mvngt	r0, r0
   12990:	andeq	r0, r0, r0
   12994:	mvnmi	r0, r0
   12998:	andeq	r0, r0, r0
   1299c:	bicmi	ip, sp, r5, ror #26
   129a0:	push	{r4, r5, r6, sl, fp, lr}
   129a4:	add	fp, sp, #16
   129a8:	mov	r4, r0
   129ac:	bl	11498 <__errno_location@plt>
   129b0:	mov	r5, r0
   129b4:	ldr	r6, [r0]
   129b8:	mov	r0, r4
   129bc:	bl	112e8 <free@plt>
   129c0:	str	r6, [r5]
   129c4:	pop	{r4, r5, r6, sl, fp, pc}
   129c8:	push	{r4, r5, fp, lr}
   129cc:	add	fp, sp, #8
   129d0:	cmp	r0, #0
   129d4:	beq	12a68 <__snprintf_chk@plt+0x14a4>
   129d8:	mov	r4, r0
   129dc:	mov	r1, #47	; 0x2f
   129e0:	bl	11564 <strrchr@plt>
   129e4:	cmp	r0, #0
   129e8:	mov	r5, r4
   129ec:	addne	r5, r0, #1
   129f0:	sub	r0, r5, r4
   129f4:	cmp	r0, #7
   129f8:	blt	12a4c <__snprintf_chk@plt+0x1488>
   129fc:	sub	r0, r5, #7
   12a00:	movw	r1, #26464	; 0x6760
   12a04:	movt	r1, #1
   12a08:	mov	r2, #7
   12a0c:	bl	115ac <strncmp@plt>
   12a10:	cmp	r0, #0
   12a14:	bne	12a4c <__snprintf_chk@plt+0x1488>
   12a18:	movw	r1, #26472	; 0x6768
   12a1c:	movt	r1, #1
   12a20:	mov	r0, r5
   12a24:	mov	r2, #3
   12a28:	bl	115ac <strncmp@plt>
   12a2c:	cmp	r0, #0
   12a30:	beq	12a3c <__snprintf_chk@plt+0x1478>
   12a34:	mov	r4, r5
   12a38:	b	12a4c <__snprintf_chk@plt+0x1488>
   12a3c:	add	r4, r5, #3
   12a40:	movw	r0, #29480	; 0x7328
   12a44:	movt	r0, #2
   12a48:	str	r4, [r0]
   12a4c:	movw	r0, #29484	; 0x732c
   12a50:	movt	r0, #2
   12a54:	str	r4, [r0]
   12a58:	movw	r0, #29544	; 0x7368
   12a5c:	movt	r0, #2
   12a60:	str	r4, [r0]
   12a64:	pop	{r4, r5, fp, pc}
   12a68:	movw	r0, #29496	; 0x7338
   12a6c:	movt	r0, #2
   12a70:	ldr	r3, [r0]
   12a74:	movw	r0, #26408	; 0x6728
   12a78:	movt	r0, #1
   12a7c:	mov	r1, #55	; 0x37
   12a80:	mov	r2, #1
   12a84:	bl	1139c <fwrite@plt>
   12a88:	bl	115b8 <abort@plt>
   12a8c:	push	{r4, r5, r6, sl, fp, lr}
   12a90:	add	fp, sp, #16
   12a94:	mov	r4, r0
   12a98:	movw	r0, #29552	; 0x7370
   12a9c:	movt	r0, #2
   12aa0:	cmp	r4, #0
   12aa4:	moveq	r4, r0
   12aa8:	bl	11498 <__errno_location@plt>
   12aac:	mov	r5, r0
   12ab0:	ldr	r6, [r0]
   12ab4:	mov	r0, r4
   12ab8:	mov	r1, #48	; 0x30
   12abc:	bl	150c8 <__snprintf_chk@plt+0x3b04>
   12ac0:	str	r6, [r5]
   12ac4:	pop	{r4, r5, r6, sl, fp, pc}
   12ac8:	movw	r1, #29552	; 0x7370
   12acc:	movt	r1, #2
   12ad0:	cmp	r0, #0
   12ad4:	movne	r1, r0
   12ad8:	ldr	r0, [r1]
   12adc:	bx	lr
   12ae0:	movw	r2, #29552	; 0x7370
   12ae4:	movt	r2, #2
   12ae8:	cmp	r0, #0
   12aec:	movne	r2, r0
   12af0:	str	r1, [r2]
   12af4:	bx	lr
   12af8:	movw	r3, #29552	; 0x7370
   12afc:	movt	r3, #2
   12b00:	cmp	r0, #0
   12b04:	movne	r3, r0
   12b08:	ubfx	r0, r1, #5, #3
   12b0c:	add	r0, r3, r0, lsl #2
   12b10:	ldr	r3, [r0, #8]
   12b14:	and	r1, r1, #31
   12b18:	eor	r2, r2, r3, lsr r1
   12b1c:	and	r2, r2, #1
   12b20:	eor	r2, r3, r2, lsl r1
   12b24:	str	r2, [r0, #8]
   12b28:	mov	r0, #1
   12b2c:	and	r0, r0, r3, lsr r1
   12b30:	bx	lr
   12b34:	movw	r2, #29552	; 0x7370
   12b38:	movt	r2, #2
   12b3c:	cmp	r0, #0
   12b40:	movne	r2, r0
   12b44:	ldr	r0, [r2, #4]
   12b48:	str	r1, [r2, #4]
   12b4c:	bx	lr
   12b50:	movw	r3, #29552	; 0x7370
   12b54:	movt	r3, #2
   12b58:	cmp	r0, #0
   12b5c:	movne	r3, r0
   12b60:	mov	r0, #10
   12b64:	str	r0, [r3]
   12b68:	cmp	r1, #0
   12b6c:	cmpne	r2, #0
   12b70:	bne	12b80 <__snprintf_chk@plt+0x15bc>
   12b74:	push	{fp, lr}
   12b78:	mov	fp, sp
   12b7c:	bl	115b8 <abort@plt>
   12b80:	str	r1, [r3, #40]	; 0x28
   12b84:	str	r2, [r3, #44]	; 0x2c
   12b88:	bx	lr
   12b8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b90:	add	fp, sp, #28
   12b94:	sub	sp, sp, #20
   12b98:	mov	r8, r3
   12b9c:	mov	r9, r2
   12ba0:	mov	sl, r1
   12ba4:	mov	r7, r0
   12ba8:	ldr	r0, [fp, #8]
   12bac:	movw	r5, #29552	; 0x7370
   12bb0:	movt	r5, #2
   12bb4:	cmp	r0, #0
   12bb8:	movne	r5, r0
   12bbc:	bl	11498 <__errno_location@plt>
   12bc0:	mov	r4, r0
   12bc4:	ldm	r5, {r0, r1}
   12bc8:	ldr	r2, [r5, #40]	; 0x28
   12bcc:	ldr	r3, [r5, #44]	; 0x2c
   12bd0:	ldr	r6, [r4]
   12bd4:	add	r5, r5, #8
   12bd8:	stm	sp, {r0, r1, r5}
   12bdc:	str	r2, [sp, #12]
   12be0:	str	r3, [sp, #16]
   12be4:	mov	r0, r7
   12be8:	mov	r1, sl
   12bec:	mov	r2, r9
   12bf0:	mov	r3, r8
   12bf4:	bl	12c04 <__snprintf_chk@plt+0x1640>
   12bf8:	str	r6, [r4]
   12bfc:	sub	sp, fp, #28
   12c00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c08:	add	fp, sp, #28
   12c0c:	sub	sp, sp, #156	; 0x9c
   12c10:	mov	r9, r3
   12c14:	str	r2, [fp, #-84]	; 0xffffffac
   12c18:	mov	r6, r1
   12c1c:	mov	r7, r0
   12c20:	ldr	r0, [fp, #12]
   12c24:	and	r1, r0, #4
   12c28:	str	r1, [sp, #32]
   12c2c:	and	r1, r0, #1
   12c30:	str	r1, [sp, #36]	; 0x24
   12c34:	ubfx	sl, r0, #1, #1
   12c38:	bl	113c0 <__ctype_get_mb_cur_max@plt>
   12c3c:	str	r0, [sp, #40]	; 0x28
   12c40:	ldr	r0, [fp, #24]
   12c44:	str	r0, [sp, #76]	; 0x4c
   12c48:	ldr	r0, [fp, #20]
   12c4c:	str	r0, [sp, #68]	; 0x44
   12c50:	ldr	r0, [fp, #8]
   12c54:	str	r0, [fp, #-60]	; 0xffffffc4
   12c58:	mov	r0, #0
   12c5c:	str	r0, [sp, #72]	; 0x48
   12c60:	mov	r0, #0
   12c64:	str	r0, [sp, #92]	; 0x5c
   12c68:	mov	r0, #0
   12c6c:	str	r0, [fp, #-72]	; 0xffffffb8
   12c70:	mov	r0, #0
   12c74:	mov	r1, #0
   12c78:	str	r1, [fp, #-56]	; 0xffffffc8
   12c7c:	mov	r1, #0
   12c80:	str	r1, [sp, #56]	; 0x38
   12c84:	mov	r5, #1
   12c88:	str	r7, [sp, #80]	; 0x50
   12c8c:	mov	r4, r6
   12c90:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12c94:	cmp	r6, #10
   12c98:	bhi	13c00 <__snprintf_chk@plt+0x263c>
   12c9c:	add	r1, pc, #20
   12ca0:	mov	r8, #0
   12ca4:	mov	r2, #1
   12ca8:	mov	r3, #0
   12cac:	ldr	ip, [fp, #-84]	; 0xffffffac
   12cb0:	mov	lr, r9
   12cb4:	ldr	pc, [r1, r6, lsl #2]
   12cb8:	muleq	r1, r0, sp
   12cbc:	andeq	r2, r1, r0, asr #27
   12cc0:	andeq	r2, r1, r0, lsl #27
   12cc4:	andeq	r2, r1, r8, ror sp
   12cc8:			; <UNDEFINED> instruction: 0x00012db4
   12ccc:	andeq	r2, r1, r4, lsl lr
   12cd0:	andeq	r2, r1, r0, lsr #27
   12cd4:	andeq	r2, r1, r0, ror lr
   12cd8:	andeq	r2, r1, r4, ror #25
   12cdc:	andeq	r2, r1, r4, ror #25
   12ce0:	andeq	r2, r1, ip, lsl #26
   12ce4:	movw	r0, #26556	; 0x67bc
   12ce8:	movt	r0, #1
   12cec:	mov	r1, r6
   12cf0:	bl	1420c <__snprintf_chk@plt+0x2c48>
   12cf4:	str	r0, [sp, #68]	; 0x44
   12cf8:	movw	r0, #26558	; 0x67be
   12cfc:	movt	r0, #1
   12d00:	mov	r1, r6
   12d04:	bl	1420c <__snprintf_chk@plt+0x2c48>
   12d08:	str	r0, [sp, #76]	; 0x4c
   12d0c:	mov	r8, #0
   12d10:	tst	sl, #1
   12d14:	bne	12d4c <__snprintf_chk@plt+0x1788>
   12d18:	ldr	r0, [sp, #68]	; 0x44
   12d1c:	ldrb	r0, [r0]
   12d20:	cmp	r0, #0
   12d24:	beq	12d4c <__snprintf_chk@plt+0x1788>
   12d28:	ldr	r1, [sp, #68]	; 0x44
   12d2c:	add	r1, r1, #1
   12d30:	mov	r8, #0
   12d34:	cmp	r8, r4
   12d38:	strbcc	r0, [r7, r8]
   12d3c:	ldrb	r0, [r1, r8]
   12d40:	add	r8, r8, #1
   12d44:	cmp	r0, #0
   12d48:	bne	12d34 <__snprintf_chk@plt+0x1770>
   12d4c:	ldr	r6, [sp, #76]	; 0x4c
   12d50:	mov	r0, r6
   12d54:	bl	11480 <strlen@plt>
   12d58:	str	r0, [fp, #-72]	; 0xffffffb8
   12d5c:	str	r6, [sp, #92]	; 0x5c
   12d60:	mov	r2, #1
   12d64:	mov	r3, sl
   12d68:	ldr	ip, [fp, #-84]	; 0xffffffac
   12d6c:	mov	lr, r9
   12d70:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12d74:	b	12e70 <__snprintf_chk@plt+0x18ac>
   12d78:	mov	r0, #1
   12d7c:	b	12dc0 <__snprintf_chk@plt+0x17fc>
   12d80:	tst	sl, #1
   12d84:	bne	12dc0 <__snprintf_chk@plt+0x17fc>
   12d88:	mov	r2, r0
   12d8c:	b	12de8 <__snprintf_chk@plt+0x1824>
   12d90:	mov	r6, #0
   12d94:	mov	r8, #0
   12d98:	mov	r2, r0
   12d9c:	b	12e6c <__snprintf_chk@plt+0x18a8>
   12da0:	mov	r0, #1
   12da4:	str	r0, [fp, #-72]	; 0xffffffb8
   12da8:	mov	r8, #0
   12dac:	mov	r6, #5
   12db0:	b	12e2c <__snprintf_chk@plt+0x1868>
   12db4:	mov	r2, #1
   12db8:	tst	sl, #1
   12dbc:	beq	12de8 <__snprintf_chk@plt+0x1824>
   12dc0:	mov	r1, #1
   12dc4:	str	r1, [fp, #-72]	; 0xffffffb8
   12dc8:	mov	r8, #0
   12dcc:	mov	r6, #2
   12dd0:	movw	r1, #26558	; 0x67be
   12dd4:	movt	r1, #1
   12dd8:	str	r1, [sp, #92]	; 0x5c
   12ddc:	mov	r2, r0
   12de0:	mov	r3, #1
   12de4:	b	12e70 <__snprintf_chk@plt+0x18ac>
   12de8:	mov	r8, #1
   12dec:	mov	r6, #2
   12df0:	cmp	r4, #0
   12df4:	movne	r0, #39	; 0x27
   12df8:	strbne	r0, [r7]
   12dfc:	movw	r0, #26558	; 0x67be
   12e00:	movt	r0, #1
   12e04:	str	r0, [sp, #92]	; 0x5c
   12e08:	mov	r0, #1
   12e0c:	str	r0, [fp, #-72]	; 0xffffffb8
   12e10:	b	12e6c <__snprintf_chk@plt+0x18a8>
   12e14:	mov	r6, #5
   12e18:	tst	sl, #1
   12e1c:	beq	12e44 <__snprintf_chk@plt+0x1880>
   12e20:	mov	r0, #1
   12e24:	str	r0, [fp, #-72]	; 0xffffffb8
   12e28:	mov	r8, #0
   12e2c:	movw	r0, #26554	; 0x67ba
   12e30:	movt	r0, #1
   12e34:	str	r0, [sp, #92]	; 0x5c
   12e38:	mov	r2, #1
   12e3c:	mov	r3, #1
   12e40:	b	12e70 <__snprintf_chk@plt+0x18ac>
   12e44:	cmp	r4, #0
   12e48:	movne	r0, #34	; 0x22
   12e4c:	strbne	r0, [r7]
   12e50:	mov	r8, #1
   12e54:	movw	r0, #26554	; 0x67ba
   12e58:	movt	r0, #1
   12e5c:	str	r0, [sp, #92]	; 0x5c
   12e60:	mov	r0, #1
   12e64:	str	r0, [fp, #-72]	; 0xffffffb8
   12e68:	mov	r2, #1
   12e6c:	mov	r3, #0
   12e70:	ldr	r0, [fp, #16]
   12e74:	cmp	r0, #0
   12e78:	movwne	r0, #1
   12e7c:	and	r0, r0, r3
   12e80:	str	r0, [fp, #-88]	; 0xffffffa8
   12e84:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12e88:	cmp	r0, #0
   12e8c:	movwne	r0, #1
   12e90:	and	r1, r0, r3
   12e94:	and	r1, r2, r1
   12e98:	str	r1, [sp, #48]	; 0x30
   12e9c:	str	r6, [fp, #-60]	; 0xffffffc4
   12ea0:	subs	r6, r6, #2
   12ea4:	clz	r1, r6
   12ea8:	lsr	r1, r1, #5
   12eac:	and	r1, r1, r3
   12eb0:	str	r1, [sp, #60]	; 0x3c
   12eb4:	str	r6, [fp, #-80]	; 0xffffffb0
   12eb8:	mov	r1, r6
   12ebc:	movwne	r1, #1
   12ec0:	str	r3, [fp, #-76]	; 0xffffffb4
   12ec4:	eor	r3, r3, #1
   12ec8:	str	r3, [sp, #88]	; 0x58
   12ecc:	orr	r3, r1, r3
   12ed0:	str	r3, [sp, #64]	; 0x40
   12ed4:	and	r1, r1, r2
   12ed8:	str	r1, [fp, #-68]	; 0xffffffbc
   12edc:	and	r0, r0, r1
   12ee0:	str	r0, [fp, #-64]	; 0xffffffc0
   12ee4:	str	r2, [sp, #84]	; 0x54
   12ee8:	eor	r0, r2, #1
   12eec:	str	r0, [sp, #52]	; 0x34
   12ef0:	mov	r6, #0
   12ef4:	cmn	lr, #1
   12ef8:	beq	12f08 <__snprintf_chk@plt+0x1944>
   12efc:	cmp	r6, lr
   12f00:	bne	12f14 <__snprintf_chk@plt+0x1950>
   12f04:	b	13a80 <__snprintf_chk@plt+0x24bc>
   12f08:	ldrb	r0, [ip, r6]
   12f0c:	cmp	r0, #0
   12f10:	beq	13a80 <__snprintf_chk@plt+0x24bc>
   12f14:	str	r5, [fp, #-48]	; 0xffffffd0
   12f18:	mov	sl, #0
   12f1c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12f20:	cmp	r0, #0
   12f24:	beq	12f58 <__snprintf_chk@plt+0x1994>
   12f28:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12f2c:	add	r5, r6, r0
   12f30:	cmp	r0, #2
   12f34:	bcc	12f50 <__snprintf_chk@plt+0x198c>
   12f38:	cmn	lr, #1
   12f3c:	bne	12f50 <__snprintf_chk@plt+0x198c>
   12f40:	mov	r0, ip
   12f44:	bl	11480 <strlen@plt>
   12f48:	ldr	ip, [fp, #-84]	; 0xffffffac
   12f4c:	mov	lr, r0
   12f50:	cmp	r5, lr
   12f54:	bls	12f64 <__snprintf_chk@plt+0x19a0>
   12f58:	mov	r0, #0
   12f5c:	str	r0, [fp, #-52]	; 0xffffffcc
   12f60:	b	12fb0 <__snprintf_chk@plt+0x19ec>
   12f64:	mov	r5, r4
   12f68:	mov	r4, lr
   12f6c:	add	r0, ip, r6
   12f70:	ldr	r1, [sp, #92]	; 0x5c
   12f74:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12f78:	bl	11330 <memcmp@plt>
   12f7c:	cmp	r0, #0
   12f80:	mov	r1, r0
   12f84:	movwne	r1, #1
   12f88:	ldr	r2, [sp, #88]	; 0x58
   12f8c:	orr	r1, r1, r2
   12f90:	tst	r1, #1
   12f94:	beq	13b44 <__snprintf_chk@plt+0x2580>
   12f98:	clz	r0, r0
   12f9c:	lsr	r0, r0, #5
   12fa0:	str	r0, [fp, #-52]	; 0xffffffcc
   12fa4:	ldr	ip, [fp, #-84]	; 0xffffffac
   12fa8:	mov	lr, r4
   12fac:	mov	r4, r5
   12fb0:	ldrb	r5, [ip, r6]
   12fb4:	cmp	r5, #126	; 0x7e
   12fb8:	bhi	13374 <__snprintf_chk@plt+0x1db0>
   12fbc:	mov	r9, #1
   12fc0:	mov	r2, #110	; 0x6e
   12fc4:	mov	r0, #97	; 0x61
   12fc8:	add	r3, pc, #4
   12fcc:	mov	r1, #0
   12fd0:	ldr	pc, [r3, r5, lsl #2]
   12fd4:	andeq	r3, r1, ip, ror #4
   12fd8:	andeq	r3, r1, r4, ror r3
   12fdc:	andeq	r3, r1, r4, ror r3
   12fe0:	andeq	r3, r1, r4, ror r3
   12fe4:	andeq	r3, r1, r4, ror r3
   12fe8:	andeq	r3, r1, r4, ror r3
   12fec:	andeq	r3, r1, r4, ror r3
   12ff0:	andeq	r3, r1, r8, lsr r4
   12ff4:	andeq	r3, r1, ip, asr #4
   12ff8:	andeq	r3, r1, r4, asr #4
   12ffc:	andeq	r3, r1, r8, asr r2
   13000:	ldrdeq	r3, [r1], -ip
   13004:	andeq	r3, r1, ip, lsr r2
   13008:	andeq	r3, r1, r4, asr r2
   1300c:	andeq	r3, r1, r4, ror r3
   13010:	andeq	r3, r1, r4, ror r3
   13014:	andeq	r3, r1, r4, ror r3
   13018:	andeq	r3, r1, r4, ror r3
   1301c:	andeq	r3, r1, r4, ror r3
   13020:	andeq	r3, r1, r4, ror r3
   13024:	andeq	r3, r1, r4, ror r3
   13028:	andeq	r3, r1, r4, ror r3
   1302c:	andeq	r3, r1, r4, ror r3
   13030:	andeq	r3, r1, r4, ror r3
   13034:	andeq	r3, r1, r4, ror r3
   13038:	andeq	r3, r1, r4, ror r3
   1303c:	andeq	r3, r1, r4, ror r3
   13040:	andeq	r3, r1, r4, ror r3
   13044:	andeq	r3, r1, r4, ror r3
   13048:	andeq	r3, r1, r4, ror r3
   1304c:	andeq	r3, r1, r4, ror r3
   13050:	andeq	r3, r1, r4, ror r3
   13054:	andeq	r3, r1, r8, ror #7
   13058:	andeq	r3, r1, ip, ror #7
   1305c:	andeq	r3, r1, ip, ror #7
   13060:	andeq	r3, r1, r4, ror #3
   13064:	andeq	r3, r1, ip, ror #7
   13068:	ldrdeq	r3, [r1], -r0
   1306c:	andeq	r3, r1, ip, ror #7
   13070:	andeq	r3, r1, r4, ror #5
   13074:	andeq	r3, r1, ip, ror #7
   13078:	andeq	r3, r1, ip, ror #7
   1307c:	andeq	r3, r1, ip, ror #7
   13080:	ldrdeq	r3, [r1], -r0
   13084:	ldrdeq	r3, [r1], -r0
   13088:	ldrdeq	r3, [r1], -r0
   1308c:	ldrdeq	r3, [r1], -r0
   13090:	ldrdeq	r3, [r1], -r0
   13094:	ldrdeq	r3, [r1], -r0
   13098:	ldrdeq	r3, [r1], -r0
   1309c:	ldrdeq	r3, [r1], -r0
   130a0:	ldrdeq	r3, [r1], -r0
   130a4:	ldrdeq	r3, [r1], -r0
   130a8:	ldrdeq	r3, [r1], -r0
   130ac:	ldrdeq	r3, [r1], -r0
   130b0:	ldrdeq	r3, [r1], -r0
   130b4:	ldrdeq	r3, [r1], -r0
   130b8:	ldrdeq	r3, [r1], -r0
   130bc:	ldrdeq	r3, [r1], -r0
   130c0:	andeq	r3, r1, ip, ror #7
   130c4:	andeq	r3, r1, ip, ror #7
   130c8:	andeq	r3, r1, ip, ror #7
   130cc:	andeq	r3, r1, ip, ror #7
   130d0:	andeq	r3, r1, ip, lsr #5
   130d4:	andeq	r3, r1, r4, ror r3
   130d8:	ldrdeq	r3, [r1], -r0
   130dc:	ldrdeq	r3, [r1], -r0
   130e0:	ldrdeq	r3, [r1], -r0
   130e4:	ldrdeq	r3, [r1], -r0
   130e8:	ldrdeq	r3, [r1], -r0
   130ec:	ldrdeq	r3, [r1], -r0
   130f0:	ldrdeq	r3, [r1], -r0
   130f4:	ldrdeq	r3, [r1], -r0
   130f8:	ldrdeq	r3, [r1], -r0
   130fc:	ldrdeq	r3, [r1], -r0
   13100:	ldrdeq	r3, [r1], -r0
   13104:	ldrdeq	r3, [r1], -r0
   13108:	ldrdeq	r3, [r1], -r0
   1310c:	ldrdeq	r3, [r1], -r0
   13110:	ldrdeq	r3, [r1], -r0
   13114:	ldrdeq	r3, [r1], -r0
   13118:	ldrdeq	r3, [r1], -r0
   1311c:	ldrdeq	r3, [r1], -r0
   13120:	ldrdeq	r3, [r1], -r0
   13124:	ldrdeq	r3, [r1], -r0
   13128:	ldrdeq	r3, [r1], -r0
   1312c:	ldrdeq	r3, [r1], -r0
   13130:	ldrdeq	r3, [r1], -r0
   13134:	ldrdeq	r3, [r1], -r0
   13138:	ldrdeq	r3, [r1], -r0
   1313c:	ldrdeq	r3, [r1], -r0
   13140:	andeq	r3, r1, ip, ror #7
   13144:	andeq	r3, r1, r8, lsl r2
   13148:	ldrdeq	r3, [r1], -r0
   1314c:	andeq	r3, r1, ip, ror #7
   13150:	ldrdeq	r3, [r1], -r0
   13154:	andeq	r3, r1, ip, ror #7
   13158:	ldrdeq	r3, [r1], -r0
   1315c:	ldrdeq	r3, [r1], -r0
   13160:	ldrdeq	r3, [r1], -r0
   13164:	ldrdeq	r3, [r1], -r0
   13168:	ldrdeq	r3, [r1], -r0
   1316c:	ldrdeq	r3, [r1], -r0
   13170:	ldrdeq	r3, [r1], -r0
   13174:	ldrdeq	r3, [r1], -r0
   13178:	ldrdeq	r3, [r1], -r0
   1317c:	ldrdeq	r3, [r1], -r0
   13180:	ldrdeq	r3, [r1], -r0
   13184:	ldrdeq	r3, [r1], -r0
   13188:	ldrdeq	r3, [r1], -r0
   1318c:	ldrdeq	r3, [r1], -r0
   13190:	ldrdeq	r3, [r1], -r0
   13194:	ldrdeq	r3, [r1], -r0
   13198:	ldrdeq	r3, [r1], -r0
   1319c:	ldrdeq	r3, [r1], -r0
   131a0:	ldrdeq	r3, [r1], -r0
   131a4:	ldrdeq	r3, [r1], -r0
   131a8:	ldrdeq	r3, [r1], -r0
   131ac:	ldrdeq	r3, [r1], -r0
   131b0:	ldrdeq	r3, [r1], -r0
   131b4:	ldrdeq	r3, [r1], -r0
   131b8:	ldrdeq	r3, [r1], -r0
   131bc:	ldrdeq	r3, [r1], -r0
   131c0:	strdeq	r3, [r1], -r8
   131c4:	andeq	r3, r1, ip, ror #7
   131c8:	strdeq	r3, [r1], -r8
   131cc:	andeq	r3, r1, r4, ror #3
   131d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   131d4:	cmp	r0, #0
   131d8:	beq	1344c <__snprintf_chk@plt+0x1e88>
   131dc:	ldr	r0, [fp, #16]
   131e0:	b	13450 <__snprintf_chk@plt+0x1e8c>
   131e4:	mov	r9, #0
   131e8:	cmp	r6, #0
   131ec:	beq	133e8 <__snprintf_chk@plt+0x1e24>
   131f0:	mov	sl, #0
   131f4:	b	131d0 <__snprintf_chk@plt+0x1c0c>
   131f8:	mov	r9, #0
   131fc:	cmn	lr, #1
   13200:	beq	133cc <__snprintf_chk@plt+0x1e08>
   13204:	cmp	r6, #0
   13208:	bne	131f0 <__snprintf_chk@plt+0x1c2c>
   1320c:	cmp	lr, #1
   13210:	beq	133e8 <__snprintf_chk@plt+0x1e24>
   13214:	b	131f0 <__snprintf_chk@plt+0x1c2c>
   13218:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1321c:	cmp	r0, #2
   13220:	bne	13414 <__snprintf_chk@plt+0x1e50>
   13224:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13228:	tst	r0, #1
   1322c:	bne	13b5c <__snprintf_chk@plt+0x2598>
   13230:	mov	sl, #0
   13234:	mov	r0, #92	; 0x5c
   13238:	b	13428 <__snprintf_chk@plt+0x1e64>
   1323c:	mov	r0, #102	; 0x66
   13240:	b	13438 <__snprintf_chk@plt+0x1e74>
   13244:	mov	r2, #116	; 0x74
   13248:	b	13258 <__snprintf_chk@plt+0x1c94>
   1324c:	mov	r0, #98	; 0x62
   13250:	b	13438 <__snprintf_chk@plt+0x1e74>
   13254:	mov	r2, #114	; 0x72
   13258:	ldr	r0, [sp, #64]	; 0x40
   1325c:	tst	r0, #1
   13260:	mov	r0, r2
   13264:	bne	13438 <__snprintf_chk@plt+0x1e74>
   13268:	b	13b5c <__snprintf_chk@plt+0x2598>
   1326c:	ldr	r0, [sp, #84]	; 0x54
   13270:	tst	r0, #1
   13274:	beq	13528 <__snprintf_chk@plt+0x1f64>
   13278:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1327c:	tst	r0, #1
   13280:	bne	13b5c <__snprintf_chk@plt+0x2598>
   13284:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13288:	cmp	r0, #2
   1328c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13290:	movwne	r0, #1
   13294:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13298:	orr	r0, r0, r2
   1329c:	tst	r0, #1
   132a0:	beq	1391c <__snprintf_chk@plt+0x2358>
   132a4:	mov	r0, r8
   132a8:	b	13950 <__snprintf_chk@plt+0x238c>
   132ac:	mov	sl, #0
   132b0:	mov	r5, #63	; 0x3f
   132b4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   132b8:	cmp	r0, #5
   132bc:	beq	136dc <__snprintf_chk@plt+0x2118>
   132c0:	cmp	r0, #2
   132c4:	bne	1377c <__snprintf_chk@plt+0x21b8>
   132c8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   132cc:	tst	r0, #1
   132d0:	mov	r9, #0
   132d4:	beq	131d0 <__snprintf_chk@plt+0x1c0c>
   132d8:	b	13b5c <__snprintf_chk@plt+0x2598>
   132dc:	mov	r0, #118	; 0x76
   132e0:	b	13438 <__snprintf_chk@plt+0x1e74>
   132e4:	mov	r5, #39	; 0x27
   132e8:	mov	r0, #1
   132ec:	str	r0, [sp, #56]	; 0x38
   132f0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   132f4:	cmp	r0, #2
   132f8:	bne	13548 <__snprintf_chk@plt+0x1f84>
   132fc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13300:	tst	r0, #1
   13304:	bne	13b5c <__snprintf_chk@plt+0x2598>
   13308:	ldr	r2, [sp, #72]	; 0x48
   1330c:	cmp	r2, #0
   13310:	mov	r0, r2
   13314:	movwne	r0, #1
   13318:	clz	r1, r4
   1331c:	lsr	r1, r1, #5
   13320:	orrs	r0, r0, r1
   13324:	moveq	r2, r4
   13328:	str	r2, [sp, #72]	; 0x48
   1332c:	moveq	r4, r0
   13330:	cmp	r8, r4
   13334:	movcc	r0, #39	; 0x27
   13338:	strbcc	r0, [r7, r8]
   1333c:	add	r0, r8, #1
   13340:	cmp	r0, r4
   13344:	movcc	r1, #92	; 0x5c
   13348:	strbcc	r1, [r7, r0]
   1334c:	add	r0, r8, #2
   13350:	cmp	r0, r4
   13354:	movcc	r1, #39	; 0x27
   13358:	strbcc	r1, [r7, r0]
   1335c:	add	r8, r8, #3
   13360:	mov	r0, #0
   13364:	str	r0, [fp, #-56]	; 0xffffffc8
   13368:	mov	sl, #0
   1336c:	mov	r9, #1
   13370:	b	131d0 <__snprintf_chk@plt+0x1c0c>
   13374:	str	r4, [sp, #24]
   13378:	ldr	r0, [sp, #40]	; 0x28
   1337c:	cmp	r0, #1
   13380:	bne	13550 <__snprintf_chk@plt+0x1f8c>
   13384:	str	lr, [sp, #28]
   13388:	bl	11468 <__ctype_b_loc@plt>
   1338c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13390:	ldr	r0, [r0]
   13394:	add	r0, r0, r5, lsl #1
   13398:	ldrb	r0, [r0, #1]
   1339c:	ubfx	r9, r0, #6, #1
   133a0:	mov	r1, #1
   133a4:	ldr	r4, [sp, #24]
   133a8:	ldr	r0, [sp, #52]	; 0x34
   133ac:	orr	r0, r9, r0
   133b0:	mov	r2, r1
   133b4:	cmp	r1, #1
   133b8:	bhi	13784 <__snprintf_chk@plt+0x21c0>
   133bc:	tst	r0, #1
   133c0:	beq	13784 <__snprintf_chk@plt+0x21c0>
   133c4:	ldr	lr, [sp, #28]
   133c8:	b	131d0 <__snprintf_chk@plt+0x1c0c>
   133cc:	cmp	r6, #0
   133d0:	ldrbeq	r0, [ip, #1]
   133d4:	cmpeq	r0, #0
   133d8:	beq	133e8 <__snprintf_chk@plt+0x1e24>
   133dc:	mvn	lr, #0
   133e0:	mov	sl, #0
   133e4:	b	131d0 <__snprintf_chk@plt+0x1c0c>
   133e8:	mov	r1, #1
   133ec:	ldr	r0, [fp, #-60]	; 0xffffffc4
   133f0:	cmp	r0, #2
   133f4:	bne	1340c <__snprintf_chk@plt+0x1e48>
   133f8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   133fc:	tst	r0, #1
   13400:	mov	r9, r1
   13404:	beq	131d0 <__snprintf_chk@plt+0x1c0c>
   13408:	b	13b5c <__snprintf_chk@plt+0x2598>
   1340c:	mov	r9, r1
   13410:	b	131d0 <__snprintf_chk@plt+0x1c0c>
   13414:	mov	sl, #0
   13418:	mov	r0, #92	; 0x5c
   1341c:	ldr	r1, [sp, #48]	; 0x30
   13420:	cmp	r1, #0
   13424:	beq	13438 <__snprintf_chk@plt+0x1e74>
   13428:	mov	r9, #0
   1342c:	cmp	sl, #0
   13430:	beq	139e8 <__snprintf_chk@plt+0x2424>
   13434:	b	13a24 <__snprintf_chk@plt+0x2460>
   13438:	mov	r9, #0
   1343c:	ldr	r1, [sp, #84]	; 0x54
   13440:	tst	r1, #1
   13444:	mov	sl, #0
   13448:	bne	13488 <__snprintf_chk@plt+0x1ec4>
   1344c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13450:	cmp	r0, #0
   13454:	mov	r0, r5
   13458:	beq	1347c <__snprintf_chk@plt+0x1eb8>
   1345c:	ubfx	r0, r5, #5, #3
   13460:	ldr	r1, [fp, #16]
   13464:	ldr	r0, [r1, r0, lsl #2]
   13468:	and	r1, r5, #31
   1346c:	mov	r2, #1
   13470:	tst	r0, r2, lsl r1
   13474:	mov	r0, r5
   13478:	bne	13488 <__snprintf_chk@plt+0x1ec4>
   1347c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13480:	cmp	r1, #0
   13484:	beq	139e0 <__snprintf_chk@plt+0x241c>
   13488:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1348c:	tst	r1, #1
   13490:	bne	13b5c <__snprintf_chk@plt+0x2598>
   13494:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13498:	cmp	r1, #2
   1349c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   134a0:	movwne	r1, #1
   134a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   134a8:	orr	r1, r1, r2
   134ac:	tst	r1, #1
   134b0:	beq	134bc <__snprintf_chk@plt+0x1ef8>
   134b4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   134b8:	b	134f8 <__snprintf_chk@plt+0x1f34>
   134bc:	cmp	r8, r4
   134c0:	movcc	r1, #39	; 0x27
   134c4:	strbcc	r1, [r7, r8]
   134c8:	add	r1, r8, #1
   134cc:	cmp	r1, r4
   134d0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   134d4:	movcc	r2, #36	; 0x24
   134d8:	strbcc	r2, [r7, r1]
   134dc:	add	r1, r8, #2
   134e0:	cmp	r1, r4
   134e4:	movcc	r2, #39	; 0x27
   134e8:	strbcc	r2, [r7, r1]
   134ec:	add	r8, r8, #3
   134f0:	mov	r1, #1
   134f4:	str	r1, [fp, #-56]	; 0xffffffc8
   134f8:	cmp	r8, r4
   134fc:	movcc	r1, #92	; 0x5c
   13500:	strbcc	r1, [r7, r8]
   13504:	add	r8, r8, #1
   13508:	cmp	r8, r4
   1350c:	strbcc	r0, [r7, r8]
   13510:	and	r5, r5, r9
   13514:	add	r8, r8, #1
   13518:	add	r6, r6, #1
   1351c:	cmn	lr, #1
   13520:	bne	12efc <__snprintf_chk@plt+0x1938>
   13524:	b	12f08 <__snprintf_chk@plt+0x1944>
   13528:	mov	r9, #0
   1352c:	ldr	r0, [sp, #36]	; 0x24
   13530:	cmp	r0, #0
   13534:	mov	sl, #0
   13538:	mov	r5, #0
   1353c:	beq	1344c <__snprintf_chk@plt+0x1e88>
   13540:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13544:	b	13518 <__snprintf_chk@plt+0x1f54>
   13548:	mov	r9, #1
   1354c:	b	131d0 <__snprintf_chk@plt+0x1c0c>
   13550:	mov	r0, #0
   13554:	str	r0, [fp, #-36]	; 0xffffffdc
   13558:	str	r0, [fp, #-40]	; 0xffffffd8
   1355c:	cmn	lr, #1
   13560:	bne	13574 <__snprintf_chk@plt+0x1fb0>
   13564:	mov	r0, ip
   13568:	bl	11480 <strlen@plt>
   1356c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13570:	mov	lr, r0
   13574:	add	r0, ip, r6
   13578:	str	r0, [sp, #20]
   1357c:	mov	r9, #1
   13580:	mov	r7, #0
   13584:	sub	r4, fp, #40	; 0x28
   13588:	str	lr, [sp, #28]
   1358c:	str	r7, [sp, #44]	; 0x2c
   13590:	add	r7, r7, r6
   13594:	add	r1, ip, r7
   13598:	sub	r2, lr, r7
   1359c:	sub	r0, fp, #44	; 0x2c
   135a0:	mov	r3, r4
   135a4:	bl	159a0 <__snprintf_chk@plt+0x43dc>
   135a8:	cmp	r0, #0
   135ac:	beq	13a6c <__snprintf_chk@plt+0x24a8>
   135b0:	cmn	r0, #1
   135b4:	beq	13a2c <__snprintf_chk@plt+0x2468>
   135b8:	cmn	r0, #2
   135bc:	ldr	lr, [sp, #28]
   135c0:	beq	13a34 <__snprintf_chk@plt+0x2470>
   135c4:	cmp	r0, #2
   135c8:	mov	r1, #0
   135cc:	movwcc	r1, #1
   135d0:	ldr	r2, [sp, #60]	; 0x3c
   135d4:	eor	r2, r2, #1
   135d8:	orrs	r1, r2, r1
   135dc:	ldr	r4, [sp, #24]
   135e0:	bne	136a0 <__snprintf_chk@plt+0x20dc>
   135e4:	ldr	r1, [sp, #44]	; 0x2c
   135e8:	ldr	r2, [sp, #20]
   135ec:	add	r1, r2, r1
   135f0:	mov	r2, #1
   135f4:	ldrb	r3, [r1, r2]
   135f8:	sub	r3, r3, #91	; 0x5b
   135fc:	cmp	r3, #33	; 0x21
   13600:	bhi	13694 <__snprintf_chk@plt+0x20d0>
   13604:	add	r7, pc, #0
   13608:	ldr	pc, [r7, r3, lsl #2]
   1360c:	andeq	r3, r1, r4, asr fp
   13610:	andeq	r3, r1, r4, asr fp
   13614:	muleq	r1, r4, r6
   13618:	andeq	r3, r1, r4, asr fp
   1361c:	muleq	r1, r4, r6
   13620:	andeq	r3, r1, r4, asr fp
   13624:	muleq	r1, r4, r6
   13628:	muleq	r1, r4, r6
   1362c:	muleq	r1, r4, r6
   13630:	muleq	r1, r4, r6
   13634:	muleq	r1, r4, r6
   13638:	muleq	r1, r4, r6
   1363c:	muleq	r1, r4, r6
   13640:	muleq	r1, r4, r6
   13644:	muleq	r1, r4, r6
   13648:	muleq	r1, r4, r6
   1364c:	muleq	r1, r4, r6
   13650:	muleq	r1, r4, r6
   13654:	muleq	r1, r4, r6
   13658:	muleq	r1, r4, r6
   1365c:	muleq	r1, r4, r6
   13660:	muleq	r1, r4, r6
   13664:	muleq	r1, r4, r6
   13668:	muleq	r1, r4, r6
   1366c:	muleq	r1, r4, r6
   13670:	muleq	r1, r4, r6
   13674:	muleq	r1, r4, r6
   13678:	muleq	r1, r4, r6
   1367c:	muleq	r1, r4, r6
   13680:	muleq	r1, r4, r6
   13684:	muleq	r1, r4, r6
   13688:	muleq	r1, r4, r6
   1368c:	muleq	r1, r4, r6
   13690:	andeq	r3, r1, r4, asr fp
   13694:	add	r2, r2, #1
   13698:	cmp	r2, r0
   1369c:	bcc	135f4 <__snprintf_chk@plt+0x2030>
   136a0:	ldr	r7, [sp, #44]	; 0x2c
   136a4:	add	r7, r0, r7
   136a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136ac:	bl	11378 <iswprint@plt>
   136b0:	cmp	r0, #0
   136b4:	movwne	r0, #1
   136b8:	and	r9, r9, r0
   136bc:	sub	r4, fp, #40	; 0x28
   136c0:	mov	r0, r4
   136c4:	bl	11318 <mbsinit@plt>
   136c8:	ldr	lr, [sp, #28]
   136cc:	cmp	r0, #0
   136d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   136d4:	beq	1358c <__snprintf_chk@plt+0x1fc8>
   136d8:	b	13a74 <__snprintf_chk@plt+0x24b0>
   136dc:	ldr	r0, [sp, #32]
   136e0:	cmp	r0, #0
   136e4:	beq	1377c <__snprintf_chk@plt+0x21b8>
   136e8:	add	r0, r6, #2
   136ec:	cmp	r0, lr
   136f0:	bcs	1377c <__snprintf_chk@plt+0x21b8>
   136f4:	add	r1, ip, r6
   136f8:	ldrb	r1, [r1, #1]
   136fc:	cmp	r1, #63	; 0x3f
   13700:	bne	1377c <__snprintf_chk@plt+0x21b8>
   13704:	ldrb	r9, [ip, r0]
   13708:	sub	r2, r9, #33	; 0x21
   1370c:	cmp	r2, #29
   13710:	bhi	1377c <__snprintf_chk@plt+0x21b8>
   13714:	mov	r3, #1
   13718:	movw	r1, #20929	; 0x51c1
   1371c:	movt	r1, #14336	; 0x3800
   13720:	tst	r1, r3, lsl r2
   13724:	beq	1377c <__snprintf_chk@plt+0x21b8>
   13728:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1372c:	tst	r1, #1
   13730:	bne	13b5c <__snprintf_chk@plt+0x2598>
   13734:	cmp	r8, r4
   13738:	movcc	r1, #63	; 0x3f
   1373c:	strbcc	r1, [r7, r8]
   13740:	add	r2, r8, #1
   13744:	cmp	r2, r4
   13748:	movcc	r1, #34	; 0x22
   1374c:	strbcc	r1, [r7, r2]
   13750:	add	r2, r8, #2
   13754:	cmp	r2, r4
   13758:	movcc	r1, #34	; 0x22
   1375c:	strbcc	r1, [r7, r2]
   13760:	add	r2, r8, #3
   13764:	cmp	r2, r4
   13768:	movcc	r1, #63	; 0x3f
   1376c:	strbcc	r1, [r7, r2]
   13770:	add	r8, r8, #4
   13774:	mov	r6, r0
   13778:	mov	r5, r9
   1377c:	mov	r9, #0
   13780:	b	131d0 <__snprintf_chk@plt+0x1c0c>
   13784:	add	r1, r2, r6
   13788:	str	r1, [sp, #44]	; 0x2c
   1378c:	add	r1, r6, #1
   13790:	mov	r3, #0
   13794:	ldr	lr, [sp, #28]
   13798:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1379c:	tst	r0, #1
   137a0:	bne	13894 <__snprintf_chk@plt+0x22d0>
   137a4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   137a8:	tst	r2, #1
   137ac:	bne	13b5c <__snprintf_chk@plt+0x2598>
   137b0:	cmp	r6, #2
   137b4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   137b8:	movwne	r3, #1
   137bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   137c0:	orr	r3, r3, r2
   137c4:	tst	r3, #1
   137c8:	bne	13804 <__snprintf_chk@plt+0x2240>
   137cc:	cmp	r8, r4
   137d0:	movcc	r2, #39	; 0x27
   137d4:	strbcc	r2, [r7, r8]
   137d8:	add	r3, r8, #1
   137dc:	cmp	r3, r4
   137e0:	movcc	r2, #36	; 0x24
   137e4:	strbcc	r2, [r7, r3]
   137e8:	add	r3, r8, #2
   137ec:	cmp	r3, r4
   137f0:	movcc	r2, #39	; 0x27
   137f4:	strbcc	r2, [r7, r3]
   137f8:	add	r8, r8, #3
   137fc:	mov	r2, #1
   13800:	str	r2, [fp, #-56]	; 0xffffffc8
   13804:	cmp	r8, r4
   13808:	movcc	r2, #92	; 0x5c
   1380c:	strbcc	r2, [r7, r8]
   13810:	add	r3, r8, #1
   13814:	cmp	r3, r4
   13818:	bcs	13838 <__snprintf_chk@plt+0x2274>
   1381c:	and	r7, r5, #192	; 0xc0
   13820:	mov	r2, #48	; 0x30
   13824:	orr	r7, r2, r7, lsr #6
   13828:	ldr	r6, [sp, #80]	; 0x50
   1382c:	strb	r7, [r6, r3]
   13830:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13834:	ldr	r7, [sp, #80]	; 0x50
   13838:	add	r3, r8, #2
   1383c:	cmp	r3, r4
   13840:	bcs	13860 <__snprintf_chk@plt+0x229c>
   13844:	lsr	r7, r5, #3
   13848:	mov	r2, #6
   1384c:	bfi	r7, r2, #3, #29
   13850:	ldr	r6, [sp, #80]	; 0x50
   13854:	strb	r7, [r6, r3]
   13858:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1385c:	ldr	r7, [sp, #80]	; 0x50
   13860:	mov	r2, #6
   13864:	bfi	r5, r2, #3, #29
   13868:	add	r8, r8, #3
   1386c:	mov	r3, #1
   13870:	b	138b8 <__snprintf_chk@plt+0x22f4>
   13874:	ldr	r7, [sp, #80]	; 0x50
   13878:	cmp	r8, r4
   1387c:	strbcc	r5, [r7, r8]
   13880:	ldrb	r5, [ip, r1]
   13884:	add	r1, r1, #1
   13888:	add	r8, r8, #1
   1388c:	tst	r0, #1
   13890:	beq	137a4 <__snprintf_chk@plt+0x21e0>
   13894:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13898:	tst	r2, #1
   1389c:	beq	138b0 <__snprintf_chk@plt+0x22ec>
   138a0:	cmp	r8, r4
   138a4:	movcc	r2, #92	; 0x5c
   138a8:	strbcc	r2, [r7, r8]
   138ac:	add	r8, r8, #1
   138b0:	mov	r2, #0
   138b4:	str	r2, [fp, #-52]	; 0xffffffcc
   138b8:	and	sl, r3, #1
   138bc:	ldr	r2, [sp, #44]	; 0x2c
   138c0:	cmp	r2, r1
   138c4:	bls	139d0 <__snprintf_chk@plt+0x240c>
   138c8:	cmp	sl, #0
   138cc:	movwne	sl, #1
   138d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   138d4:	mvn	r7, r2
   138d8:	orr	r7, r7, sl
   138dc:	tst	r7, #1
   138e0:	bne	13874 <__snprintf_chk@plt+0x22b0>
   138e4:	cmp	r8, r4
   138e8:	ldrcc	r7, [sp, #80]	; 0x50
   138ec:	movcc	r2, #39	; 0x27
   138f0:	strbcc	r2, [r7, r8]
   138f4:	add	r7, r8, #1
   138f8:	cmp	r7, r4
   138fc:	ldrcc	r6, [sp, #80]	; 0x50
   13900:	movcc	r2, #39	; 0x27
   13904:	strbcc	r2, [r6, r7]
   13908:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   1390c:	add	r8, r8, #2
   13910:	mov	r2, #0
   13914:	str	r2, [fp, #-56]	; 0xffffffc8
   13918:	b	13874 <__snprintf_chk@plt+0x22b0>
   1391c:	cmp	r8, r4
   13920:	movcc	r0, #39	; 0x27
   13924:	strbcc	r0, [r7, r8]
   13928:	add	r0, r8, #1
   1392c:	cmp	r0, r4
   13930:	movcc	r1, #36	; 0x24
   13934:	strbcc	r1, [r7, r0]
   13938:	add	r0, r8, #2
   1393c:	cmp	r0, r4
   13940:	movcc	r1, #39	; 0x27
   13944:	strbcc	r1, [r7, r0]
   13948:	add	r0, r8, #3
   1394c:	mov	r2, #1
   13950:	cmp	r0, r4
   13954:	movcc	r1, #92	; 0x5c
   13958:	strbcc	r1, [r7, r0]
   1395c:	str	r2, [fp, #-56]	; 0xffffffc8
   13960:	add	r8, r0, #1
   13964:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13968:	cmp	r1, #2
   1396c:	beq	139c0 <__snprintf_chk@plt+0x23fc>
   13970:	add	r1, r6, #1
   13974:	mov	r9, #0
   13978:	mov	sl, #1
   1397c:	mov	r5, #48	; 0x30
   13980:	cmp	r1, lr
   13984:	bcs	131d0 <__snprintf_chk@plt+0x1c0c>
   13988:	ldrb	r1, [ip, r1]
   1398c:	sub	r1, r1, #48	; 0x30
   13990:	uxtb	r1, r1
   13994:	cmp	r1, #9
   13998:	bhi	131d0 <__snprintf_chk@plt+0x1c0c>
   1399c:	cmp	r8, r4
   139a0:	movcc	r1, #48	; 0x30
   139a4:	strbcc	r1, [r7, r8]
   139a8:	add	r1, r0, #2
   139ac:	cmp	r1, r4
   139b0:	movcc	r2, #48	; 0x30
   139b4:	strbcc	r2, [r7, r1]
   139b8:	add	r8, r0, #3
   139bc:	b	131d0 <__snprintf_chk@plt+0x1c0c>
   139c0:	mov	r0, #48	; 0x30
   139c4:	mov	sl, #1
   139c8:	mov	r9, #0
   139cc:	b	1347c <__snprintf_chk@plt+0x1eb8>
   139d0:	sub	r6, r1, #1
   139d4:	cmp	sl, #0
   139d8:	movwne	sl, #1
   139dc:	mov	r0, r5
   139e0:	cmp	sl, #0
   139e4:	bne	13a24 <__snprintf_chk@plt+0x2460>
   139e8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   139ec:	tst	r1, #1
   139f0:	beq	13a24 <__snprintf_chk@plt+0x2460>
   139f4:	cmp	r8, r4
   139f8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   139fc:	movcc	r1, #39	; 0x27
   13a00:	strbcc	r1, [r7, r8]
   13a04:	add	r1, r8, #1
   13a08:	cmp	r1, r4
   13a0c:	movcc	r2, #39	; 0x27
   13a10:	strbcc	r2, [r7, r1]
   13a14:	add	r8, r8, #2
   13a18:	mov	r1, #0
   13a1c:	str	r1, [fp, #-56]	; 0xffffffc8
   13a20:	b	13508 <__snprintf_chk@plt+0x1f44>
   13a24:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13a28:	b	13508 <__snprintf_chk@plt+0x1f44>
   13a2c:	mov	r9, #0
   13a30:	b	13a6c <__snprintf_chk@plt+0x24a8>
   13a34:	mov	r9, #0
   13a38:	cmp	r7, lr
   13a3c:	bcs	13a6c <__snprintf_chk@plt+0x24a8>
   13a40:	ldr	ip, [fp, #-84]	; 0xffffffac
   13a44:	ldr	r7, [sp, #44]	; 0x2c
   13a48:	ldr	r0, [sp, #20]
   13a4c:	ldrb	r0, [r0, r7]
   13a50:	cmp	r0, #0
   13a54:	beq	13a74 <__snprintf_chk@plt+0x24b0>
   13a58:	add	r7, r7, #1
   13a5c:	add	r0, r6, r7
   13a60:	cmp	r0, lr
   13a64:	bcc	13a48 <__snprintf_chk@plt+0x2484>
   13a68:	b	13a74 <__snprintf_chk@plt+0x24b0>
   13a6c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13a70:	ldr	r7, [sp, #44]	; 0x2c
   13a74:	mov	r1, r7
   13a78:	ldr	r7, [sp, #80]	; 0x50
   13a7c:	b	133a4 <__snprintf_chk@plt+0x1de0>
   13a80:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13a84:	eor	r0, r1, #2
   13a88:	orr	r0, r0, r8
   13a8c:	clz	r0, r0
   13a90:	lsr	r0, r0, #5
   13a94:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13a98:	tst	r2, r0
   13a9c:	bne	13b5c <__snprintf_chk@plt+0x2598>
   13aa0:	cmp	r1, #2
   13aa4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13aa8:	movwne	r0, #1
   13aac:	orr	r0, r2, r0
   13ab0:	tst	r0, #1
   13ab4:	ldreq	r0, [sp, #56]	; 0x38
   13ab8:	eoreq	r0, r0, #1
   13abc:	tsteq	r0, #1
   13ac0:	bne	13af4 <__snprintf_chk@plt+0x2530>
   13ac4:	mov	r9, lr
   13ac8:	tst	r5, #1
   13acc:	bne	13bc4 <__snprintf_chk@plt+0x2600>
   13ad0:	ldr	r0, [sp, #72]	; 0x48
   13ad4:	cmp	r0, #0
   13ad8:	beq	13af4 <__snprintf_chk@plt+0x2530>
   13adc:	mov	r5, #0
   13ae0:	cmp	r4, #0
   13ae4:	ldr	r0, [sp, #84]	; 0x54
   13ae8:	mov	sl, r2
   13aec:	ldr	r6, [sp, #72]	; 0x48
   13af0:	beq	12c8c <__snprintf_chk@plt+0x16c8>
   13af4:	ldr	r1, [sp, #92]	; 0x5c
   13af8:	clz	r0, r1
   13afc:	lsr	r0, r0, #5
   13b00:	orr	r0, r0, r2
   13b04:	tst	r0, #1
   13b08:	bne	13b34 <__snprintf_chk@plt+0x2570>
   13b0c:	ldrb	r0, [r1]
   13b10:	cmp	r0, #0
   13b14:	beq	13b34 <__snprintf_chk@plt+0x2570>
   13b18:	add	r1, r1, #1
   13b1c:	cmp	r8, r4
   13b20:	strbcc	r0, [r7, r8]
   13b24:	add	r8, r8, #1
   13b28:	ldrb	r0, [r1], #1
   13b2c:	cmp	r0, #0
   13b30:	bne	13b1c <__snprintf_chk@plt+0x2558>
   13b34:	cmp	r8, r4
   13b38:	movcc	r0, #0
   13b3c:	strbcc	r0, [r7, r8]
   13b40:	b	13bb8 <__snprintf_chk@plt+0x25f4>
   13b44:	ldr	ip, [fp, #-84]	; 0xffffffac
   13b48:	mov	lr, r4
   13b4c:	mov	r4, r5
   13b50:	b	13b5c <__snprintf_chk@plt+0x2598>
   13b54:	ldr	r7, [sp, #80]	; 0x50
   13b58:	ldr	ip, [fp, #-84]	; 0xffffffac
   13b5c:	mov	r0, #0
   13b60:	ldr	r1, [fp, #12]
   13b64:	bic	r1, r1, #2
   13b68:	ldr	r2, [sp, #84]	; 0x54
   13b6c:	tst	r2, #1
   13b70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13b74:	mov	r2, r3
   13b78:	movwne	r2, #4
   13b7c:	cmp	r3, #2
   13b80:	movne	r2, r3
   13b84:	str	r2, [sp]
   13b88:	str	r1, [sp, #4]
   13b8c:	str	r0, [sp, #8]
   13b90:	ldr	r0, [sp, #68]	; 0x44
   13b94:	str	r0, [sp, #12]
   13b98:	ldr	r0, [sp, #76]	; 0x4c
   13b9c:	str	r0, [sp, #16]
   13ba0:	mov	r0, r7
   13ba4:	mov	r1, r4
   13ba8:	mov	r2, ip
   13bac:	mov	r3, lr
   13bb0:	bl	12c04 <__snprintf_chk@plt+0x1640>
   13bb4:	mov	r8, r0
   13bb8:	mov	r0, r8
   13bbc:	sub	sp, fp, #28
   13bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bc4:	mov	r0, #5
   13bc8:	str	r0, [sp]
   13bcc:	ldr	r0, [fp, #12]
   13bd0:	str	r0, [sp, #4]
   13bd4:	ldr	r0, [fp, #16]
   13bd8:	str	r0, [sp, #8]
   13bdc:	ldr	r0, [sp, #68]	; 0x44
   13be0:	str	r0, [sp, #12]
   13be4:	ldr	r0, [sp, #76]	; 0x4c
   13be8:	str	r0, [sp, #16]
   13bec:	mov	r0, r7
   13bf0:	ldr	r1, [sp, #72]	; 0x48
   13bf4:	ldr	r2, [fp, #-84]	; 0xffffffac
   13bf8:	mov	r3, r9
   13bfc:	b	13bb0 <__snprintf_chk@plt+0x25ec>
   13c00:	bl	115b8 <abort@plt>
   13c04:	mov	r3, r2
   13c08:	mov	r2, #0
   13c0c:	b	13c10 <__snprintf_chk@plt+0x264c>
   13c10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c14:	add	fp, sp, #28
   13c18:	sub	sp, sp, #36	; 0x24
   13c1c:	mov	r4, r2
   13c20:	str	r2, [sp, #24]
   13c24:	mov	r5, r1
   13c28:	mov	r6, r0
   13c2c:	str	r0, [sp, #20]
   13c30:	movw	r8, #29552	; 0x7370
   13c34:	movt	r8, #2
   13c38:	cmp	r3, #0
   13c3c:	movne	r8, r3
   13c40:	bl	11498 <__errno_location@plt>
   13c44:	str	r0, [sp, #28]
   13c48:	ldm	r8, {r3, r9}
   13c4c:	ldr	r1, [r8, #40]	; 0x28
   13c50:	ldr	r2, [r8, #44]	; 0x2c
   13c54:	ldr	r7, [r0]
   13c58:	str	r7, [sp, #32]
   13c5c:	add	sl, r8, #8
   13c60:	cmp	r4, #0
   13c64:	orreq	r9, r9, #1
   13c68:	stm	sp, {r3, r9, sl}
   13c6c:	str	r1, [sp, #12]
   13c70:	str	r2, [sp, #16]
   13c74:	mov	r0, #0
   13c78:	mov	r1, #0
   13c7c:	mov	r2, r6
   13c80:	mov	r3, r5
   13c84:	mov	r7, r5
   13c88:	bl	12c04 <__snprintf_chk@plt+0x1640>
   13c8c:	mov	r5, r0
   13c90:	add	r4, r0, #1
   13c94:	mov	r0, r4
   13c98:	bl	14e10 <__snprintf_chk@plt+0x384c>
   13c9c:	mov	r6, r0
   13ca0:	ldr	r0, [r8]
   13ca4:	ldr	r1, [r8, #40]	; 0x28
   13ca8:	ldr	r2, [r8, #44]	; 0x2c
   13cac:	stm	sp, {r0, r9, sl}
   13cb0:	str	r1, [sp, #12]
   13cb4:	str	r2, [sp, #16]
   13cb8:	mov	r0, r6
   13cbc:	mov	r1, r4
   13cc0:	ldr	r2, [sp, #20]
   13cc4:	mov	r3, r7
   13cc8:	bl	12c04 <__snprintf_chk@plt+0x1640>
   13ccc:	ldr	r0, [sp, #24]
   13cd0:	ldr	r1, [sp, #32]
   13cd4:	ldr	r2, [sp, #28]
   13cd8:	str	r1, [r2]
   13cdc:	cmp	r0, #0
   13ce0:	strne	r5, [r0]
   13ce4:	mov	r0, r6
   13ce8:	sub	sp, fp, #28
   13cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cf0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13cf4:	add	fp, sp, #24
   13cf8:	movw	r8, #28992	; 0x7140
   13cfc:	movt	r8, #2
   13d00:	ldr	r4, [r8]
   13d04:	movw	r5, #28996	; 0x7144
   13d08:	movt	r5, #2
   13d0c:	ldr	r0, [r5]
   13d10:	cmp	r0, #2
   13d14:	blt	13d40 <__snprintf_chk@plt+0x277c>
   13d18:	add	r7, r4, #12
   13d1c:	mov	r6, #0
   13d20:	ldr	r0, [r7, r6, lsl #3]
   13d24:	bl	129a0 <__snprintf_chk@plt+0x13dc>
   13d28:	add	r0, r6, #1
   13d2c:	ldr	r1, [r5]
   13d30:	add	r2, r6, #2
   13d34:	cmp	r2, r1
   13d38:	mov	r6, r0
   13d3c:	blt	13d20 <__snprintf_chk@plt+0x275c>
   13d40:	ldr	r0, [r4, #4]
   13d44:	movw	r7, #29600	; 0x73a0
   13d48:	movt	r7, #2
   13d4c:	cmp	r0, r7
   13d50:	beq	13d68 <__snprintf_chk@plt+0x27a4>
   13d54:	bl	129a0 <__snprintf_chk@plt+0x13dc>
   13d58:	movw	r0, #29000	; 0x7148
   13d5c:	movt	r0, #2
   13d60:	mov	r6, #256	; 0x100
   13d64:	strd	r6, [r0]
   13d68:	movw	r6, #29000	; 0x7148
   13d6c:	movt	r6, #2
   13d70:	cmp	r4, r6
   13d74:	beq	13d84 <__snprintf_chk@plt+0x27c0>
   13d78:	mov	r0, r4
   13d7c:	bl	129a0 <__snprintf_chk@plt+0x13dc>
   13d80:	str	r6, [r8]
   13d84:	mov	r0, #1
   13d88:	str	r0, [r5]
   13d8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13d90:	movw	r3, #29552	; 0x7370
   13d94:	movt	r3, #2
   13d98:	mvn	r2, #0
   13d9c:	b	13da0 <__snprintf_chk@plt+0x27dc>
   13da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13da4:	add	fp, sp, #28
   13da8:	sub	sp, sp, #44	; 0x2c
   13dac:	mov	r7, r3
   13db0:	str	r2, [sp, #36]	; 0x24
   13db4:	str	r1, [sp, #32]
   13db8:	mov	r5, r0
   13dbc:	bl	11498 <__errno_location@plt>
   13dc0:	cmp	r5, #0
   13dc4:	blt	13f30 <__snprintf_chk@plt+0x296c>
   13dc8:	cmn	r5, #-2147483647	; 0x80000001
   13dcc:	beq	13f30 <__snprintf_chk@plt+0x296c>
   13dd0:	movw	r4, #28992	; 0x7140
   13dd4:	movt	r4, #2
   13dd8:	ldr	r6, [r4]
   13ddc:	str	r0, [sp, #28]
   13de0:	ldr	r0, [r0]
   13de4:	str	r0, [sp, #24]
   13de8:	movw	r8, #28996	; 0x7144
   13dec:	movt	r8, #2
   13df0:	ldr	r1, [r8]
   13df4:	cmp	r1, r5
   13df8:	ble	13e04 <__snprintf_chk@plt+0x2840>
   13dfc:	mov	sl, r6
   13e00:	b	13e6c <__snprintf_chk@plt+0x28a8>
   13e04:	str	r1, [fp, #-32]	; 0xffffffe0
   13e08:	mov	r0, #8
   13e0c:	str	r0, [sp]
   13e10:	movw	r9, #29000	; 0x7148
   13e14:	movt	r9, #2
   13e18:	subs	r0, r6, r9
   13e1c:	movne	r0, r6
   13e20:	add	r2, r5, #1
   13e24:	sub	r2, r2, r1
   13e28:	sub	r1, fp, #32
   13e2c:	mvn	r3, #-2147483648	; 0x80000000
   13e30:	bl	14ef8 <__snprintf_chk@plt+0x3934>
   13e34:	mov	sl, r0
   13e38:	str	r0, [r4]
   13e3c:	cmp	r6, r9
   13e40:	ldrdeq	r0, [r9]
   13e44:	stmeq	sl, {r0, r1}
   13e48:	ldr	r1, [r8]
   13e4c:	add	r0, sl, r1, lsl #3
   13e50:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13e54:	sub	r1, r2, r1
   13e58:	lsl	r2, r1, #3
   13e5c:	mov	r1, #0
   13e60:	bl	114bc <memset@plt>
   13e64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e68:	str	r0, [r8]
   13e6c:	mov	r9, sl
   13e70:	ldr	r6, [r9, r5, lsl #3]!
   13e74:	ldr	r4, [r9, #4]!
   13e78:	ldm	r7, {r0, r1}
   13e7c:	ldr	r2, [r7, #40]	; 0x28
   13e80:	ldr	r3, [r7, #44]	; 0x2c
   13e84:	orr	r8, r1, #1
   13e88:	add	r1, r7, #8
   13e8c:	stm	sp, {r0, r8}
   13e90:	str	r1, [sp, #20]
   13e94:	add	r0, sp, #8
   13e98:	stm	r0, {r1, r2, r3}
   13e9c:	mov	r0, r4
   13ea0:	mov	r1, r6
   13ea4:	ldr	r2, [sp, #32]
   13ea8:	ldr	r3, [sp, #36]	; 0x24
   13eac:	bl	12c04 <__snprintf_chk@plt+0x1640>
   13eb0:	cmp	r6, r0
   13eb4:	bhi	13f18 <__snprintf_chk@plt+0x2954>
   13eb8:	add	r6, r0, #1
   13ebc:	str	r6, [sl, r5, lsl #3]
   13ec0:	movw	r0, #29600	; 0x73a0
   13ec4:	movt	r0, #2
   13ec8:	cmp	r4, r0
   13ecc:	beq	13ed8 <__snprintf_chk@plt+0x2914>
   13ed0:	mov	r0, r4
   13ed4:	bl	129a0 <__snprintf_chk@plt+0x13dc>
   13ed8:	mov	r0, r6
   13edc:	bl	14e10 <__snprintf_chk@plt+0x384c>
   13ee0:	mov	r4, r0
   13ee4:	str	r0, [r9]
   13ee8:	ldr	r0, [r7]
   13eec:	ldr	r1, [r7, #40]	; 0x28
   13ef0:	ldr	r2, [r7, #44]	; 0x2c
   13ef4:	stm	sp, {r0, r8}
   13ef8:	ldr	r0, [sp, #20]
   13efc:	add	r3, sp, #8
   13f00:	stm	r3, {r0, r1, r2}
   13f04:	mov	r0, r4
   13f08:	mov	r1, r6
   13f0c:	ldr	r2, [sp, #32]
   13f10:	ldr	r3, [sp, #36]	; 0x24
   13f14:	bl	12c04 <__snprintf_chk@plt+0x1640>
   13f18:	ldr	r0, [sp, #28]
   13f1c:	ldr	r1, [sp, #24]
   13f20:	str	r1, [r0]
   13f24:	mov	r0, r4
   13f28:	sub	sp, fp, #28
   13f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f30:	bl	115b8 <abort@plt>
   13f34:	movw	r3, #29552	; 0x7370
   13f38:	movt	r3, #2
   13f3c:	b	13da0 <__snprintf_chk@plt+0x27dc>
   13f40:	mov	r1, r0
   13f44:	mov	r0, #0
   13f48:	b	13d90 <__snprintf_chk@plt+0x27cc>
   13f4c:	mov	r2, r1
   13f50:	mov	r1, r0
   13f54:	mov	r0, #0
   13f58:	b	13f34 <__snprintf_chk@plt+0x2970>
   13f5c:	push	{r4, r5, r6, sl, fp, lr}
   13f60:	add	fp, sp, #16
   13f64:	sub	sp, sp, #48	; 0x30
   13f68:	mov	r4, r2
   13f6c:	mov	r5, r0
   13f70:	mov	r6, sp
   13f74:	mov	r0, r6
   13f78:	bl	13f98 <__snprintf_chk@plt+0x29d4>
   13f7c:	mov	r0, r5
   13f80:	mov	r1, r4
   13f84:	mvn	r2, #0
   13f88:	mov	r3, r6
   13f8c:	bl	13da0 <__snprintf_chk@plt+0x27dc>
   13f90:	sub	sp, fp, #16
   13f94:	pop	{r4, r5, r6, sl, fp, pc}
   13f98:	vmov.i32	q8, #0	; 0x00000000
   13f9c:	mov	r2, #32
   13fa0:	mov	r3, r0
   13fa4:	vst1.32	{d16-d17}, [r3], r2
   13fa8:	vst1.32	{d16-d17}, [r3]
   13fac:	add	r2, r0, #16
   13fb0:	vst1.32	{d16-d17}, [r2]
   13fb4:	cmp	r1, #10
   13fb8:	strne	r1, [r0]
   13fbc:	bxne	lr
   13fc0:	push	{fp, lr}
   13fc4:	mov	fp, sp
   13fc8:	bl	115b8 <abort@plt>
   13fcc:	push	{r4, r5, r6, r7, fp, lr}
   13fd0:	add	fp, sp, #16
   13fd4:	sub	sp, sp, #48	; 0x30
   13fd8:	mov	r4, r3
   13fdc:	mov	r5, r2
   13fe0:	mov	r6, r0
   13fe4:	mov	r7, sp
   13fe8:	mov	r0, r7
   13fec:	bl	13f98 <__snprintf_chk@plt+0x29d4>
   13ff0:	mov	r0, r6
   13ff4:	mov	r1, r5
   13ff8:	mov	r2, r4
   13ffc:	mov	r3, r7
   14000:	bl	13da0 <__snprintf_chk@plt+0x27dc>
   14004:	sub	sp, fp, #16
   14008:	pop	{r4, r5, r6, r7, fp, pc}
   1400c:	mov	r2, r1
   14010:	mov	r1, r0
   14014:	mov	r0, #0
   14018:	b	13f5c <__snprintf_chk@plt+0x2998>
   1401c:	mov	r3, r2
   14020:	mov	r2, r1
   14024:	mov	r1, r0
   14028:	mov	r0, #0
   1402c:	b	13fcc <__snprintf_chk@plt+0x2a08>
   14030:	push	{r4, r5, r6, sl, fp, lr}
   14034:	add	fp, sp, #16
   14038:	sub	sp, sp, #48	; 0x30
   1403c:	mov	r4, r1
   14040:	mov	r5, r0
   14044:	mov	r0, #32
   14048:	movw	r1, #29552	; 0x7370
   1404c:	movt	r1, #2
   14050:	add	r3, r1, #16
   14054:	vld1.64	{d16-d17}, [r1], r0
   14058:	mov	r6, sp
   1405c:	vld1.64	{d18-d19}, [r3]
   14060:	add	r3, r6, #16
   14064:	vld1.64	{d20-d21}, [r1]
   14068:	vst1.64	{d18-d19}, [r3]
   1406c:	mov	r1, r6
   14070:	vst1.64	{d16-d17}, [r1], r0
   14074:	vst1.64	{d20-d21}, [r1]
   14078:	mov	r0, r6
   1407c:	mov	r1, r2
   14080:	mov	r2, #1
   14084:	bl	12af8 <__snprintf_chk@plt+0x1534>
   14088:	mov	r0, #0
   1408c:	mov	r1, r5
   14090:	mov	r2, r4
   14094:	mov	r3, r6
   14098:	bl	13da0 <__snprintf_chk@plt+0x27dc>
   1409c:	sub	sp, fp, #16
   140a0:	pop	{r4, r5, r6, sl, fp, pc}
   140a4:	mov	r2, r1
   140a8:	mvn	r1, #0
   140ac:	b	14030 <__snprintf_chk@plt+0x2a6c>
   140b0:	mov	r1, #58	; 0x3a
   140b4:	b	140a4 <__snprintf_chk@plt+0x2ae0>
   140b8:	mov	r2, #58	; 0x3a
   140bc:	b	14030 <__snprintf_chk@plt+0x2a6c>
   140c0:	push	{r4, r5, r6, sl, fp, lr}
   140c4:	add	fp, sp, #16
   140c8:	sub	sp, sp, #48	; 0x30
   140cc:	mov	r4, r2
   140d0:	mov	r5, r0
   140d4:	mov	r6, sp
   140d8:	mov	r0, r6
   140dc:	bl	13f98 <__snprintf_chk@plt+0x29d4>
   140e0:	mov	r0, r6
   140e4:	mov	r1, #58	; 0x3a
   140e8:	mov	r2, #1
   140ec:	bl	12af8 <__snprintf_chk@plt+0x1534>
   140f0:	mov	r0, r5
   140f4:	mov	r1, r4
   140f8:	mvn	r2, #0
   140fc:	mov	r3, r6
   14100:	bl	13da0 <__snprintf_chk@plt+0x27dc>
   14104:	sub	sp, fp, #16
   14108:	pop	{r4, r5, r6, sl, fp, pc}
   1410c:	push	{fp, lr}
   14110:	mov	fp, sp
   14114:	sub	sp, sp, #8
   14118:	mvn	ip, #0
   1411c:	str	ip, [sp]
   14120:	bl	1412c <__snprintf_chk@plt+0x2b68>
   14124:	mov	sp, fp
   14128:	pop	{fp, pc}
   1412c:	push	{r4, r5, r6, r7, fp, lr}
   14130:	add	fp, sp, #16
   14134:	sub	sp, sp, #48	; 0x30
   14138:	mov	r7, r3
   1413c:	mov	r5, r0
   14140:	mov	r0, #32
   14144:	movw	r3, #29552	; 0x7370
   14148:	movt	r3, #2
   1414c:	add	r4, r3, #16
   14150:	vld1.64	{d16-d17}, [r3], r0
   14154:	mov	r6, sp
   14158:	vld1.64	{d18-d19}, [r4]
   1415c:	add	r4, r6, #16
   14160:	vld1.64	{d20-d21}, [r3]
   14164:	vst1.64	{d18-d19}, [r4]
   14168:	mov	r3, r6
   1416c:	vst1.64	{d16-d17}, [r3], r0
   14170:	vst1.64	{d20-d21}, [r3]
   14174:	mov	r0, r6
   14178:	bl	12b50 <__snprintf_chk@plt+0x158c>
   1417c:	ldr	r2, [fp, #8]
   14180:	mov	r0, r5
   14184:	mov	r1, r7
   14188:	mov	r3, r6
   1418c:	bl	13da0 <__snprintf_chk@plt+0x27dc>
   14190:	sub	sp, fp, #16
   14194:	pop	{r4, r5, r6, r7, fp, pc}
   14198:	mov	r3, r2
   1419c:	mov	r2, r1
   141a0:	mov	r1, r0
   141a4:	mov	r0, #0
   141a8:	b	1410c <__snprintf_chk@plt+0x2b48>
   141ac:	push	{fp, lr}
   141b0:	mov	fp, sp
   141b4:	sub	sp, sp, #8
   141b8:	mov	ip, r2
   141bc:	mov	r2, r1
   141c0:	mov	r1, r0
   141c4:	str	r3, [sp]
   141c8:	mov	r0, #0
   141cc:	mov	r3, ip
   141d0:	bl	1412c <__snprintf_chk@plt+0x2b68>
   141d4:	mov	sp, fp
   141d8:	pop	{fp, pc}
   141dc:	movw	r3, #29008	; 0x7150
   141e0:	movt	r3, #2
   141e4:	b	13da0 <__snprintf_chk@plt+0x27dc>
   141e8:	mov	r2, r1
   141ec:	mov	r1, r0
   141f0:	mov	r0, #0
   141f4:	b	141dc <__snprintf_chk@plt+0x2c18>
   141f8:	mvn	r2, #0
   141fc:	b	141dc <__snprintf_chk@plt+0x2c18>
   14200:	mov	r1, r0
   14204:	mov	r0, #0
   14208:	b	141f8 <__snprintf_chk@plt+0x2c34>
   1420c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14210:	add	fp, sp, #24
   14214:	sub	sp, sp, #16
   14218:	mov	r4, r1
   1421c:	mov	r5, r0
   14220:	mov	r7, #0
   14224:	mov	r0, #0
   14228:	mov	r1, r5
   1422c:	mov	r2, #5
   14230:	bl	1133c <dcgettext@plt>
   14234:	cmp	r0, r5
   14238:	beq	14244 <__snprintf_chk@plt+0x2c80>
   1423c:	sub	sp, fp, #24
   14240:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14244:	bl	15968 <__snprintf_chk@plt+0x43a4>
   14248:	mov	r6, r0
   1424c:	mov	r8, #56	; 0x38
   14250:	mov	r0, #45	; 0x2d
   14254:	stm	sp, {r0, r8}
   14258:	str	r7, [sp, #8]
   1425c:	str	r7, [sp, #12]
   14260:	mov	r0, r6
   14264:	mov	r1, #85	; 0x55
   14268:	mov	r2, #84	; 0x54
   1426c:	mov	r3, #70	; 0x46
   14270:	bl	14308 <__snprintf_chk@plt+0x2d44>
   14274:	cmp	r0, #0
   14278:	beq	14294 <__snprintf_chk@plt+0x2cd0>
   1427c:	ldrb	r1, [r5]
   14280:	movw	r2, #26560	; 0x67c0
   14284:	movt	r2, #1
   14288:	movw	r0, #26564	; 0x67c4
   1428c:	movt	r0, #1
   14290:	b	142d8 <__snprintf_chk@plt+0x2d14>
   14294:	mov	r0, #48	; 0x30
   14298:	mov	r1, #51	; 0x33
   1429c:	str	r8, [sp]
   142a0:	stmib	sp, {r0, r1}
   142a4:	str	r0, [sp, #12]
   142a8:	mov	r0, r6
   142ac:	mov	r1, #71	; 0x47
   142b0:	mov	r2, #66	; 0x42
   142b4:	mov	r3, #49	; 0x31
   142b8:	bl	14308 <__snprintf_chk@plt+0x2d44>
   142bc:	cmp	r0, #0
   142c0:	beq	142e8 <__snprintf_chk@plt+0x2d24>
   142c4:	ldrb	r1, [r5]
   142c8:	movw	r2, #26568	; 0x67c8
   142cc:	movt	r2, #1
   142d0:	movw	r0, #26572	; 0x67cc
   142d4:	movt	r0, #1
   142d8:	cmp	r1, #96	; 0x60
   142dc:	moveq	r0, r2
   142e0:	sub	sp, fp, #24
   142e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   142e8:	movw	r1, #26554	; 0x67ba
   142ec:	movt	r1, #1
   142f0:	movw	r0, #26558	; 0x67be
   142f4:	movt	r0, #1
   142f8:	cmp	r4, #9
   142fc:	moveq	r0, r1
   14300:	sub	sp, fp, #24
   14304:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14308:	push	{r4, r5, r6, r7, fp, lr}
   1430c:	add	fp, sp, #16
   14310:	sub	sp, sp, #16
   14314:	mov	r4, r3
   14318:	mov	r5, r2
   1431c:	mov	r7, r1
   14320:	mov	r6, r0
   14324:	mov	r0, r1
   14328:	bl	155f0 <__snprintf_chk@plt+0x402c>
   1432c:	ldrb	r1, [r6]
   14330:	cmp	r0, #0
   14334:	andne	r1, r1, #223	; 0xdf
   14338:	mov	r0, #0
   1433c:	cmp	r1, r7
   14340:	bne	14380 <__snprintf_chk@plt+0x2dbc>
   14344:	cmp	r7, #0
   14348:	moveq	r0, #1
   1434c:	subeq	sp, fp, #16
   14350:	popeq	{r4, r5, r6, r7, fp, pc}
   14354:	ldr	r0, [fp, #20]
   14358:	ldr	r1, [fp, #16]
   1435c:	ldr	r2, [fp, #12]
   14360:	ldr	r3, [fp, #8]
   14364:	str	r2, [sp]
   14368:	str	r1, [sp, #4]
   1436c:	str	r0, [sp, #8]
   14370:	mov	r0, r6
   14374:	mov	r1, r5
   14378:	mov	r2, r4
   1437c:	bl	14388 <__snprintf_chk@plt+0x2dc4>
   14380:	sub	sp, fp, #16
   14384:	pop	{r4, r5, r6, r7, fp, pc}
   14388:	push	{r4, r5, r6, r7, fp, lr}
   1438c:	add	fp, sp, #16
   14390:	sub	sp, sp, #8
   14394:	mov	r4, r3
   14398:	mov	r5, r2
   1439c:	mov	r7, r1
   143a0:	mov	r6, r0
   143a4:	mov	r0, r1
   143a8:	bl	155f0 <__snprintf_chk@plt+0x402c>
   143ac:	ldrb	r1, [r6, #1]
   143b0:	cmp	r0, #0
   143b4:	andne	r1, r1, #223	; 0xdf
   143b8:	mov	r0, #0
   143bc:	cmp	r1, r7
   143c0:	bne	143f8 <__snprintf_chk@plt+0x2e34>
   143c4:	cmp	r7, #0
   143c8:	moveq	r0, #1
   143cc:	subeq	sp, fp, #16
   143d0:	popeq	{r4, r5, r6, r7, fp, pc}
   143d4:	ldr	r0, [fp, #16]
   143d8:	ldr	r1, [fp, #12]
   143dc:	ldr	r3, [fp, #8]
   143e0:	str	r1, [sp]
   143e4:	str	r0, [sp, #4]
   143e8:	mov	r0, r6
   143ec:	mov	r1, r5
   143f0:	mov	r2, r4
   143f4:	bl	14400 <__snprintf_chk@plt+0x2e3c>
   143f8:	sub	sp, fp, #16
   143fc:	pop	{r4, r5, r6, r7, fp, pc}
   14400:	push	{r4, r5, r6, r7, fp, lr}
   14404:	add	fp, sp, #16
   14408:	sub	sp, sp, #8
   1440c:	mov	r4, r3
   14410:	mov	r5, r2
   14414:	mov	r7, r1
   14418:	mov	r6, r0
   1441c:	mov	r0, r1
   14420:	bl	155f0 <__snprintf_chk@plt+0x402c>
   14424:	ldrb	r1, [r6, #2]
   14428:	cmp	r0, #0
   1442c:	andne	r1, r1, #223	; 0xdf
   14430:	mov	r0, #0
   14434:	cmp	r1, r7
   14438:	bne	14468 <__snprintf_chk@plt+0x2ea4>
   1443c:	cmp	r7, #0
   14440:	moveq	r0, #1
   14444:	subeq	sp, fp, #16
   14448:	popeq	{r4, r5, r6, r7, fp, pc}
   1444c:	ldr	r0, [fp, #12]
   14450:	ldr	r3, [fp, #8]
   14454:	str	r0, [sp]
   14458:	mov	r0, r6
   1445c:	mov	r1, r5
   14460:	mov	r2, r4
   14464:	bl	14470 <__snprintf_chk@plt+0x2eac>
   14468:	sub	sp, fp, #16
   1446c:	pop	{r4, r5, r6, r7, fp, pc}
   14470:	push	{r4, r5, r6, r7, fp, lr}
   14474:	add	fp, sp, #16
   14478:	mov	r4, r3
   1447c:	mov	r5, r2
   14480:	mov	r7, r1
   14484:	mov	r6, r0
   14488:	mov	r0, r1
   1448c:	bl	155f0 <__snprintf_chk@plt+0x402c>
   14490:	ldrb	r1, [r6, #3]
   14494:	ldr	r3, [fp, #8]
   14498:	cmp	r0, #0
   1449c:	andne	r1, r1, #223	; 0xdf
   144a0:	mov	r0, #0
   144a4:	cmp	r1, r7
   144a8:	popne	{r4, r5, r6, r7, fp, pc}
   144ac:	cmp	r7, #0
   144b0:	beq	144c8 <__snprintf_chk@plt+0x2f04>
   144b4:	mov	r0, r6
   144b8:	mov	r1, r5
   144bc:	mov	r2, r4
   144c0:	pop	{r4, r5, r6, r7, fp, lr}
   144c4:	b	144d0 <__snprintf_chk@plt+0x2f0c>
   144c8:	mov	r0, #1
   144cc:	pop	{r4, r5, r6, r7, fp, pc}
   144d0:	push	{r4, r5, r6, r7, fp, lr}
   144d4:	add	fp, sp, #16
   144d8:	mov	r4, r3
   144dc:	mov	r5, r2
   144e0:	mov	r7, r1
   144e4:	mov	r6, r0
   144e8:	mov	r0, r1
   144ec:	bl	155f0 <__snprintf_chk@plt+0x402c>
   144f0:	ldrb	r1, [r6, #4]
   144f4:	cmp	r0, #0
   144f8:	andne	r1, r1, #223	; 0xdf
   144fc:	mov	r0, #0
   14500:	cmp	r1, r7
   14504:	popne	{r4, r5, r6, r7, fp, pc}
   14508:	cmp	r7, #0
   1450c:	beq	14524 <__snprintf_chk@plt+0x2f60>
   14510:	mov	r0, r6
   14514:	mov	r1, r5
   14518:	mov	r2, r4
   1451c:	pop	{r4, r5, r6, r7, fp, lr}
   14520:	b	1452c <__snprintf_chk@plt+0x2f68>
   14524:	mov	r0, #1
   14528:	pop	{r4, r5, r6, r7, fp, pc}
   1452c:	push	{r4, r5, r6, sl, fp, lr}
   14530:	add	fp, sp, #16
   14534:	mov	r4, r2
   14538:	mov	r6, r1
   1453c:	mov	r5, r0
   14540:	mov	r0, r1
   14544:	bl	155f0 <__snprintf_chk@plt+0x402c>
   14548:	ldrb	r1, [r5, #5]
   1454c:	cmp	r0, #0
   14550:	andne	r1, r1, #223	; 0xdf
   14554:	mov	r0, #0
   14558:	cmp	r1, r6
   1455c:	popne	{r4, r5, r6, sl, fp, pc}
   14560:	cmp	r6, #0
   14564:	beq	14578 <__snprintf_chk@plt+0x2fb4>
   14568:	mov	r0, r5
   1456c:	mov	r1, r4
   14570:	pop	{r4, r5, r6, sl, fp, lr}
   14574:	b	14580 <__snprintf_chk@plt+0x2fbc>
   14578:	mov	r0, #1
   1457c:	pop	{r4, r5, r6, sl, fp, pc}
   14580:	push	{r4, r5, fp, lr}
   14584:	add	fp, sp, #8
   14588:	mov	r5, r1
   1458c:	mov	r4, r0
   14590:	mov	r0, r1
   14594:	bl	155f0 <__snprintf_chk@plt+0x402c>
   14598:	ldrb	r1, [r4, #6]
   1459c:	cmp	r0, #0
   145a0:	andne	r1, r1, #223	; 0xdf
   145a4:	mov	r0, #0
   145a8:	cmp	r1, r5
   145ac:	popne	{r4, r5, fp, pc}
   145b0:	cmp	r5, #0
   145b4:	beq	145c4 <__snprintf_chk@plt+0x3000>
   145b8:	mov	r0, r4
   145bc:	pop	{r4, r5, fp, lr}
   145c0:	b	145cc <__snprintf_chk@plt+0x3008>
   145c4:	mov	r0, #1
   145c8:	pop	{r4, r5, fp, pc}
   145cc:	push	{r4, sl, fp, lr}
   145d0:	add	fp, sp, #8
   145d4:	mov	r4, r0
   145d8:	mov	r0, #0
   145dc:	bl	155f0 <__snprintf_chk@plt+0x402c>
   145e0:	ldrb	r1, [r4, #7]
   145e4:	cmp	r0, #0
   145e8:	beq	14600 <__snprintf_chk@plt+0x303c>
   145ec:	tst	r1, #223	; 0xdf
   145f0:	moveq	r0, #1
   145f4:	popeq	{r4, sl, fp, pc}
   145f8:	mov	r0, #0
   145fc:	pop	{r4, sl, fp, pc}
   14600:	cmp	r1, #0
   14604:	moveq	r0, #1
   14608:	popeq	{r4, sl, fp, pc}
   1460c:	mov	r0, #0
   14610:	pop	{r4, sl, fp, pc}
   14614:	push	{r4, sl, fp, lr}
   14618:	add	fp, sp, #8
   1461c:	mov	r4, r1
   14620:	bl	14630 <__snprintf_chk@plt+0x306c>
   14624:	str	r0, [r4]
   14628:	asr	r0, r0, #31
   1462c:	pop	{r4, sl, fp, pc}
   14630:	push	{r4, r5, r6, sl, fp, lr}
   14634:	add	fp, sp, #16
   14638:	sub	sp, sp, #8
   1463c:	mov	r4, r0
   14640:	ldrb	r0, [r0]
   14644:	sub	r0, r0, #48	; 0x30
   14648:	cmp	r0, #10
   1464c:	bcs	14680 <__snprintf_chk@plt+0x30bc>
   14650:	add	r1, sp, #4
   14654:	mov	r0, r4
   14658:	mov	r2, #10
   1465c:	bl	112c4 <strtol@plt>
   14660:	cmp	r0, #64	; 0x40
   14664:	bgt	14790 <__snprintf_chk@plt+0x31cc>
   14668:	ldr	r1, [sp, #4]
   1466c:	ldrb	r1, [r1]
   14670:	cmp	r1, #0
   14674:	bne	14790 <__snprintf_chk@plt+0x31cc>
   14678:	sub	sp, fp, #16
   1467c:	pop	{r4, r5, r6, sl, fp, pc}
   14680:	movw	r0, #29056	; 0x7180
   14684:	movt	r0, #2
   14688:	add	r5, r0, #4
   1468c:	mov	r6, #0
   14690:	mov	r0, r5
   14694:	mov	r1, r4
   14698:	bl	112b8 <strcmp@plt>
   1469c:	cmp	r0, #0
   146a0:	beq	14748 <__snprintf_chk@plt+0x3184>
   146a4:	add	r5, r5, #12
   146a8:	add	r6, r6, #1
   146ac:	cmp	r6, #35	; 0x23
   146b0:	bcc	14690 <__snprintf_chk@plt+0x30cc>
   146b4:	bl	115a0 <__libc_current_sigrtmin@plt>
   146b8:	mov	r5, r0
   146bc:	bl	1148c <__libc_current_sigrtmax@plt>
   146c0:	mov	r6, r0
   146c4:	cmp	r5, #1
   146c8:	blt	146e8 <__snprintf_chk@plt+0x3124>
   146cc:	movw	r1, #26660	; 0x6824
   146d0:	movt	r1, #1
   146d4:	mov	r0, r4
   146d8:	mov	r2, #5
   146dc:	bl	115ac <strncmp@plt>
   146e0:	cmp	r0, #0
   146e4:	beq	14754 <__snprintf_chk@plt+0x3190>
   146e8:	cmp	r6, #1
   146ec:	blt	14790 <__snprintf_chk@plt+0x31cc>
   146f0:	movw	r1, #26666	; 0x682a
   146f4:	movt	r1, #1
   146f8:	mov	r0, r4
   146fc:	mov	r2, #5
   14700:	bl	115ac <strncmp@plt>
   14704:	cmp	r0, #0
   14708:	bne	14790 <__snprintf_chk@plt+0x31cc>
   1470c:	add	r0, r4, #5
   14710:	mov	r1, sp
   14714:	mov	r2, #10
   14718:	bl	112c4 <strtol@plt>
   1471c:	ldr	r1, [sp]
   14720:	ldrb	r1, [r1]
   14724:	cmp	r1, #0
   14728:	bne	14790 <__snprintf_chk@plt+0x31cc>
   1472c:	sub	r1, r5, r6
   14730:	cmp	r1, r0
   14734:	cmple	r0, #0
   14738:	bgt	14790 <__snprintf_chk@plt+0x31cc>
   1473c:	add	r0, r0, r6
   14740:	sub	sp, fp, #16
   14744:	pop	{r4, r5, r6, sl, fp, pc}
   14748:	ldr	r0, [r5, #-4]
   1474c:	sub	sp, fp, #16
   14750:	pop	{r4, r5, r6, sl, fp, pc}
   14754:	add	r0, r4, #5
   14758:	mov	r1, sp
   1475c:	mov	r2, #10
   14760:	bl	112c4 <strtol@plt>
   14764:	sub	r1, r6, r5
   14768:	cmp	r0, r1
   1476c:	bgt	14790 <__snprintf_chk@plt+0x31cc>
   14770:	cmp	r0, #0
   14774:	blt	14790 <__snprintf_chk@plt+0x31cc>
   14778:	ldr	r1, [sp]
   1477c:	ldrb	r1, [r1]
   14780:	cmp	r1, #0
   14784:	addeq	r0, r0, r5
   14788:	subeq	sp, fp, #16
   1478c:	popeq	{r4, r5, r6, sl, fp, pc}
   14790:	mvn	r0, #0
   14794:	sub	sp, fp, #16
   14798:	pop	{r4, r5, r6, sl, fp, pc}
   1479c:	push	{r4, r5, r6, r7, fp, lr}
   147a0:	add	fp, sp, #16
   147a4:	sub	sp, sp, #8
   147a8:	mov	r4, r1
   147ac:	mov	r5, r0
   147b0:	movw	r0, #29056	; 0x7180
   147b4:	movt	r0, #2
   147b8:	add	r1, r0, #4
   147bc:	mov	r0, #0
   147c0:	ldr	r2, [r1, #-4]
   147c4:	cmp	r2, r5
   147c8:	beq	1482c <__snprintf_chk@plt+0x3268>
   147cc:	add	r1, r1, #12
   147d0:	add	r0, r0, #1
   147d4:	cmp	r0, #35	; 0x23
   147d8:	bcc	147c0 <__snprintf_chk@plt+0x31fc>
   147dc:	bl	115a0 <__libc_current_sigrtmin@plt>
   147e0:	mov	r7, r0
   147e4:	mvn	r6, #0
   147e8:	bl	1148c <__libc_current_sigrtmax@plt>
   147ec:	cmp	r7, r5
   147f0:	bgt	14878 <__snprintf_chk@plt+0x32b4>
   147f4:	cmp	r0, r5
   147f8:	blt	14878 <__snprintf_chk@plt+0x32b4>
   147fc:	sub	r1, r0, r7
   14800:	add	r1, r1, r1, lsr #31
   14804:	add	r1, r7, r1, asr #1
   14808:	cmp	r1, r5
   1480c:	bge	1483c <__snprintf_chk@plt+0x3278>
   14810:	mov	r1, #88	; 0x58
   14814:	strh	r1, [r4, #4]
   14818:	movw	r1, #21586	; 0x5452
   1481c:	movt	r1, #16717	; 0x414d
   14820:	str	r1, [r4]
   14824:	mov	r7, r0
   14828:	b	14850 <__snprintf_chk@plt+0x328c>
   1482c:	mov	r0, r4
   14830:	bl	113cc <strcpy@plt>
   14834:	mov	r6, #0
   14838:	b	14878 <__snprintf_chk@plt+0x32b4>
   1483c:	mov	r0, #78	; 0x4e
   14840:	strh	r0, [r4, #4]
   14844:	movw	r0, #21586	; 0x5452
   14848:	movt	r0, #18765	; 0x494d
   1484c:	str	r0, [r4]
   14850:	subs	r0, r5, r7
   14854:	mov	r6, #0
   14858:	beq	14878 <__snprintf_chk@plt+0x32b4>
   1485c:	str	r0, [sp]
   14860:	add	r0, r4, #5
   14864:	movw	r3, #26672	; 0x6830
   14868:	movt	r3, #1
   1486c:	mov	r1, #1
   14870:	mvn	r2, #0
   14874:	bl	114a4 <__sprintf_chk@plt>
   14878:	mov	r0, r6
   1487c:	sub	sp, fp, #16
   14880:	pop	{r4, r5, r6, r7, fp, pc}
   14884:	andeq	r0, r0, r0
   14888:	stm	r0, {r1, r2}
   1488c:	bx	lr
   14890:	mov	ip, #0
   14894:	cmp	r0, r2
   14898:	mov	r0, #0
   1489c:	movwgt	r0, #1
   148a0:	sublt	r0, r0, #1
   148a4:	cmp	r1, r3
   148a8:	movwgt	ip, #1
   148ac:	sublt	ip, ip, #1
   148b0:	add	r0, ip, r0, lsl #1
   148b4:	bx	lr
   148b8:	mov	r2, #1
   148bc:	asr	r3, r0, #31
   148c0:	cmp	r0, #0
   148c4:	addgt	r3, r2, r0, asr #31
   148c8:	cmp	r1, #0
   148cc:	movwne	r1, #1
   148d0:	clz	r0, r0
   148d4:	lsr	r0, r0, #5
   148d8:	and	r0, r0, r1
   148dc:	add	r0, r3, r0
   148e0:	bx	lr
   148e4:	nop	{0}
   148e8:	vldr	d16, [pc, #24]	; 14908 <__snprintf_chk@plt+0x3344>
   148ec:	vmov	s0, r1
   148f0:	vcvt.f64.s32	d17, s0
   148f4:	vmov	s0, r0
   148f8:	vcvt.f64.s32	d18, s0
   148fc:	vdiv.f64	d16, d17, d16
   14900:	vadd.f64	d0, d16, d18
   14904:	bx	lr
   14908:	andeq	r0, r0, r0
   1490c:	bicmi	ip, sp, r5, ror #26
   14910:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14914:	add	fp, sp, #24
   14918:	sub	sp, sp, #32
   1491c:	mov	r4, r2
   14920:	mov	r8, r0
   14924:	ldr	r6, [fp, #12]
   14928:	ldr	r7, [fp, #8]
   1492c:	cmp	r1, #0
   14930:	beq	14958 <__snprintf_chk@plt+0x3394>
   14934:	mov	r5, r1
   14938:	str	r4, [sp]
   1493c:	str	r3, [sp, #4]
   14940:	movw	r2, #26676	; 0x6834
   14944:	movt	r2, #1
   14948:	mov	r0, r8
   1494c:	mov	r1, #1
   14950:	mov	r3, r5
   14954:	b	14970 <__snprintf_chk@plt+0x33ac>
   14958:	str	r3, [sp]
   1495c:	movw	r2, #26688	; 0x6840
   14960:	movt	r2, #1
   14964:	mov	r0, r8
   14968:	mov	r1, #1
   1496c:	mov	r3, r4
   14970:	bl	11504 <__fprintf_chk@plt>
   14974:	movw	r1, #26695	; 0x6847
   14978:	movt	r1, #1
   1497c:	mov	r0, #0
   14980:	mov	r2, #5
   14984:	bl	1133c <dcgettext@plt>
   14988:	mov	r3, r0
   1498c:	movw	r0, #2022	; 0x7e6
   14990:	str	r0, [sp]
   14994:	movw	r2, #27413	; 0x6b15
   14998:	movt	r2, #1
   1499c:	mov	r0, r8
   149a0:	mov	r1, #1
   149a4:	bl	11504 <__fprintf_chk@plt>
   149a8:	movw	r4, #25915	; 0x653b
   149ac:	movt	r4, #1
   149b0:	mov	r0, r4
   149b4:	mov	r1, r8
   149b8:	bl	112a0 <fputs_unlocked@plt>
   149bc:	movw	r1, #26699	; 0x684b
   149c0:	movt	r1, #1
   149c4:	mov	r0, #0
   149c8:	mov	r2, #5
   149cc:	bl	1133c <dcgettext@plt>
   149d0:	mov	r2, r0
   149d4:	movw	r3, #26870	; 0x68f6
   149d8:	movt	r3, #1
   149dc:	mov	r0, r8
   149e0:	mov	r1, #1
   149e4:	bl	11504 <__fprintf_chk@plt>
   149e8:	mov	r0, r4
   149ec:	mov	r1, r8
   149f0:	bl	112a0 <fputs_unlocked@plt>
   149f4:	cmp	r6, #9
   149f8:	bhi	14a34 <__snprintf_chk@plt+0x3470>
   149fc:	add	r0, pc, #0
   14a00:	ldr	pc, [r0, r6, lsl #2]
   14a04:	andeq	r4, r1, ip, lsr #20
   14a08:	andeq	r4, r1, r0, asr #20
   14a0c:	andeq	r4, r1, r0, ror sl
   14a10:	muleq	r1, r8, sl
   14a14:	andeq	r4, r1, r0, asr #21
   14a18:	andeq	r4, r1, r8, ror #21
   14a1c:	andeq	r4, r1, r0, lsl fp
   14a20:	andeq	r4, r1, r8, asr #22
   14a24:	andeq	r4, r1, r8, ror #23
   14a28:	muleq	r1, r0, fp
   14a2c:	sub	sp, fp, #24
   14a30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14a34:	movw	r1, #27223	; 0x6a57
   14a38:	movt	r1, #1
   14a3c:	b	14b98 <__snprintf_chk@plt+0x35d4>
   14a40:	movw	r1, #26904	; 0x6918
   14a44:	movt	r1, #1
   14a48:	mov	r0, #0
   14a4c:	mov	r2, #5
   14a50:	bl	1133c <dcgettext@plt>
   14a54:	mov	r2, r0
   14a58:	ldr	r3, [r7]
   14a5c:	mov	r0, r8
   14a60:	mov	r1, #1
   14a64:	sub	sp, fp, #24
   14a68:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a6c:	b	11504 <__fprintf_chk@plt>
   14a70:	movw	r1, #26920	; 0x6928
   14a74:	movt	r1, #1
   14a78:	mov	r0, #0
   14a7c:	mov	r2, #5
   14a80:	bl	1133c <dcgettext@plt>
   14a84:	mov	r2, r0
   14a88:	ldr	r3, [r7]
   14a8c:	ldr	r0, [r7, #4]
   14a90:	str	r0, [sp]
   14a94:	b	14b84 <__snprintf_chk@plt+0x35c0>
   14a98:	movw	r1, #26943	; 0x693f
   14a9c:	movt	r1, #1
   14aa0:	mov	r0, #0
   14aa4:	mov	r2, #5
   14aa8:	bl	1133c <dcgettext@plt>
   14aac:	mov	r2, r0
   14ab0:	ldr	r3, [r7]
   14ab4:	ldmib	r7, {r0, r1}
   14ab8:	stm	sp, {r0, r1}
   14abc:	b	14b84 <__snprintf_chk@plt+0x35c0>
   14ac0:	movw	r1, #26971	; 0x695b
   14ac4:	movt	r1, #1
   14ac8:	mov	r0, #0
   14acc:	mov	r2, #5
   14ad0:	bl	1133c <dcgettext@plt>
   14ad4:	mov	r2, r0
   14ad8:	ldr	r3, [r7]
   14adc:	ldmib	r7, {r0, r1, r7}
   14ae0:	stm	sp, {r0, r1, r7}
   14ae4:	b	14b84 <__snprintf_chk@plt+0x35c0>
   14ae8:	movw	r1, #27003	; 0x697b
   14aec:	movt	r1, #1
   14af0:	mov	r0, #0
   14af4:	mov	r2, #5
   14af8:	bl	1133c <dcgettext@plt>
   14afc:	mov	r2, r0
   14b00:	ldr	r3, [r7]
   14b04:	ldmib	r7, {r0, r1, r6, r7}
   14b08:	stm	sp, {r0, r1, r6, r7}
   14b0c:	b	14b84 <__snprintf_chk@plt+0x35c0>
   14b10:	movw	r1, #27039	; 0x699f
   14b14:	movt	r1, #1
   14b18:	mov	r0, #0
   14b1c:	mov	r2, #5
   14b20:	bl	1133c <dcgettext@plt>
   14b24:	mov	r2, r0
   14b28:	ldr	r3, [r7]
   14b2c:	ldmib	r7, {r0, r1, r6}
   14b30:	ldr	r5, [r7, #16]
   14b34:	ldr	r7, [r7, #20]
   14b38:	stm	sp, {r0, r1, r6}
   14b3c:	str	r5, [sp, #12]
   14b40:	str	r7, [sp, #16]
   14b44:	b	14b84 <__snprintf_chk@plt+0x35c0>
   14b48:	movw	r1, #27079	; 0x69c7
   14b4c:	movt	r1, #1
   14b50:	mov	r0, #0
   14b54:	mov	r2, #5
   14b58:	bl	1133c <dcgettext@plt>
   14b5c:	mov	r2, r0
   14b60:	ldr	r3, [r7]
   14b64:	ldmib	r7, {r0, r1, r6}
   14b68:	ldr	r5, [r7, #16]
   14b6c:	ldr	r4, [r7, #20]
   14b70:	ldr	r7, [r7, #24]
   14b74:	stm	sp, {r0, r1, r6}
   14b78:	str	r5, [sp, #12]
   14b7c:	str	r4, [sp, #16]
   14b80:	str	r7, [sp, #20]
   14b84:	mov	r0, r8
   14b88:	mov	r1, #1
   14b8c:	b	14c38 <__snprintf_chk@plt+0x3674>
   14b90:	movw	r1, #27171	; 0x6a23
   14b94:	movt	r1, #1
   14b98:	mov	r0, #0
   14b9c:	mov	r2, #5
   14ba0:	bl	1133c <dcgettext@plt>
   14ba4:	mov	ip, r0
   14ba8:	ldr	r3, [r7]
   14bac:	ldr	r0, [r7, #4]
   14bb0:	ldr	r1, [r7, #8]
   14bb4:	ldr	r6, [r7, #12]
   14bb8:	ldr	r5, [r7, #16]
   14bbc:	ldr	r4, [r7, #20]
   14bc0:	ldr	r2, [r7, #24]
   14bc4:	ldr	lr, [r7, #28]
   14bc8:	ldr	r7, [r7, #32]
   14bcc:	stm	sp, {r0, r1, r6}
   14bd0:	str	r5, [sp, #12]
   14bd4:	str	r4, [sp, #16]
   14bd8:	str	r2, [sp, #20]
   14bdc:	str	lr, [sp, #24]
   14be0:	str	r7, [sp, #28]
   14be4:	b	14c2c <__snprintf_chk@plt+0x3668>
   14be8:	movw	r1, #27123	; 0x69f3
   14bec:	movt	r1, #1
   14bf0:	mov	r0, #0
   14bf4:	mov	r2, #5
   14bf8:	bl	1133c <dcgettext@plt>
   14bfc:	mov	ip, r0
   14c00:	ldr	r3, [r7]
   14c04:	ldmib	r7, {r0, r1, r6}
   14c08:	ldr	r5, [r7, #16]
   14c0c:	ldr	r4, [r7, #20]
   14c10:	ldr	r2, [r7, #24]
   14c14:	ldr	r7, [r7, #28]
   14c18:	stm	sp, {r0, r1, r6}
   14c1c:	str	r5, [sp, #12]
   14c20:	str	r4, [sp, #16]
   14c24:	str	r2, [sp, #20]
   14c28:	str	r7, [sp, #24]
   14c2c:	mov	r0, r8
   14c30:	mov	r1, #1
   14c34:	mov	r2, ip
   14c38:	bl	11504 <__fprintf_chk@plt>
   14c3c:	sub	sp, fp, #24
   14c40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14c44:	push	{r4, sl, fp, lr}
   14c48:	add	fp, sp, #8
   14c4c:	sub	sp, sp, #8
   14c50:	mov	lr, #0
   14c54:	ldr	ip, [fp, #8]
   14c58:	ldr	r4, [ip, lr, lsl #2]
   14c5c:	add	lr, lr, #1
   14c60:	cmp	r4, #0
   14c64:	bne	14c58 <__snprintf_chk@plt+0x3694>
   14c68:	sub	r4, lr, #1
   14c6c:	str	ip, [sp]
   14c70:	str	r4, [sp, #4]
   14c74:	bl	14910 <__snprintf_chk@plt+0x334c>
   14c78:	sub	sp, fp, #8
   14c7c:	pop	{r4, sl, fp, pc}
   14c80:	push	{r4, r5, fp, lr}
   14c84:	add	fp, sp, #8
   14c88:	sub	sp, sp, #48	; 0x30
   14c8c:	mov	ip, #0
   14c90:	ldr	r4, [fp, #8]
   14c94:	add	lr, sp, #8
   14c98:	ldr	r5, [r4]
   14c9c:	str	r5, [lr, ip, lsl #2]
   14ca0:	cmp	r5, #0
   14ca4:	beq	14cb8 <__snprintf_chk@plt+0x36f4>
   14ca8:	add	ip, ip, #1
   14cac:	add	r4, r4, #4
   14cb0:	cmp	ip, #10
   14cb4:	bcc	14c98 <__snprintf_chk@plt+0x36d4>
   14cb8:	str	lr, [sp]
   14cbc:	str	ip, [sp, #4]
   14cc0:	bl	14910 <__snprintf_chk@plt+0x334c>
   14cc4:	sub	sp, fp, #8
   14cc8:	pop	{r4, r5, fp, pc}
   14ccc:	push	{fp, lr}
   14cd0:	mov	fp, sp
   14cd4:	sub	sp, sp, #8
   14cd8:	add	ip, fp, #8
   14cdc:	str	ip, [sp, #4]
   14ce0:	str	ip, [sp]
   14ce4:	bl	14c80 <__snprintf_chk@plt+0x36bc>
   14ce8:	mov	sp, fp
   14cec:	pop	{fp, pc}
   14cf0:	push	{fp, lr}
   14cf4:	mov	fp, sp
   14cf8:	movw	r0, #29500	; 0x733c
   14cfc:	movt	r0, #2
   14d00:	ldr	r1, [r0]
   14d04:	movw	r0, #25915	; 0x653b
   14d08:	movt	r0, #1
   14d0c:	bl	112a0 <fputs_unlocked@plt>
   14d10:	movw	r1, #27283	; 0x6a93
   14d14:	movt	r1, #1
   14d18:	mov	r0, #0
   14d1c:	mov	r2, #5
   14d20:	bl	1133c <dcgettext@plt>
   14d24:	mov	r1, r0
   14d28:	movw	r2, #27303	; 0x6aa7
   14d2c:	movt	r2, #1
   14d30:	mov	r0, #1
   14d34:	bl	114d4 <__printf_chk@plt>
   14d38:	movw	r1, #27325	; 0x6abd
   14d3c:	movt	r1, #1
   14d40:	mov	r0, #0
   14d44:	mov	r2, #5
   14d48:	bl	1133c <dcgettext@plt>
   14d4c:	mov	r1, r0
   14d50:	movw	r2, #25361	; 0x6311
   14d54:	movt	r2, #1
   14d58:	movw	r3, #25724	; 0x647c
   14d5c:	movt	r3, #1
   14d60:	mov	r0, #1
   14d64:	bl	114d4 <__printf_chk@plt>
   14d68:	movw	r1, #27345	; 0x6ad1
   14d6c:	movt	r1, #1
   14d70:	mov	r0, #0
   14d74:	mov	r2, #5
   14d78:	bl	1133c <dcgettext@plt>
   14d7c:	mov	r1, r0
   14d80:	movw	r2, #27384	; 0x6af8
   14d84:	movt	r2, #1
   14d88:	mov	r0, #1
   14d8c:	pop	{fp, lr}
   14d90:	b	114d4 <__printf_chk@plt>
   14d94:	b	14d98 <__snprintf_chk@plt+0x37d4>
   14d98:	push	{r4, r5, r6, sl, fp, lr}
   14d9c:	add	fp, sp, #16
   14da0:	mov	r4, r2
   14da4:	mov	r5, r1
   14da8:	mov	r6, r0
   14dac:	bl	15a00 <__snprintf_chk@plt+0x443c>
   14db0:	cmp	r0, #0
   14db4:	popne	{r4, r5, r6, sl, fp, pc}
   14db8:	cmp	r6, #0
   14dbc:	beq	14dd0 <__snprintf_chk@plt+0x380c>
   14dc0:	cmp	r5, #0
   14dc4:	cmpne	r4, #0
   14dc8:	bne	14dd0 <__snprintf_chk@plt+0x380c>
   14dcc:	pop	{r4, r5, r6, sl, fp, pc}
   14dd0:	bl	15184 <__snprintf_chk@plt+0x3bc0>
   14dd4:	push	{fp, lr}
   14dd8:	mov	fp, sp
   14ddc:	bl	152b8 <__snprintf_chk@plt+0x3cf4>
   14de0:	bl	14de8 <__snprintf_chk@plt+0x3824>
   14de4:	pop	{fp, pc}
   14de8:	cmp	r0, #0
   14dec:	bxne	lr
   14df0:	push	{fp, lr}
   14df4:	mov	fp, sp
   14df8:	bl	15184 <__snprintf_chk@plt+0x3bc0>
   14dfc:	push	{fp, lr}
   14e00:	mov	fp, sp
   14e04:	bl	15934 <__snprintf_chk@plt+0x4370>
   14e08:	bl	14de8 <__snprintf_chk@plt+0x3824>
   14e0c:	pop	{fp, pc}
   14e10:	b	14dd4 <__snprintf_chk@plt+0x3810>
   14e14:	push	{r4, r5, fp, lr}
   14e18:	add	fp, sp, #8
   14e1c:	mov	r4, r1
   14e20:	mov	r5, r0
   14e24:	bl	152e8 <__snprintf_chk@plt+0x3d24>
   14e28:	cmp	r0, #0
   14e2c:	popne	{r4, r5, fp, pc}
   14e30:	cmp	r5, #0
   14e34:	beq	14e44 <__snprintf_chk@plt+0x3880>
   14e38:	cmp	r4, #0
   14e3c:	bne	14e44 <__snprintf_chk@plt+0x3880>
   14e40:	pop	{r4, r5, fp, pc}
   14e44:	bl	15184 <__snprintf_chk@plt+0x3bc0>
   14e48:	push	{fp, lr}
   14e4c:	mov	fp, sp
   14e50:	bl	15938 <__snprintf_chk@plt+0x4374>
   14e54:	bl	14de8 <__snprintf_chk@plt+0x3824>
   14e58:	pop	{fp, pc}
   14e5c:	push	{fp, lr}
   14e60:	mov	fp, sp
   14e64:	bl	15948 <__snprintf_chk@plt+0x4384>
   14e68:	bl	14de8 <__snprintf_chk@plt+0x3824>
   14e6c:	pop	{fp, pc}
   14e70:	push	{fp, lr}
   14e74:	mov	fp, sp
   14e78:	mov	r2, r1
   14e7c:	mov	r1, r0
   14e80:	mov	r0, #0
   14e84:	bl	14d98 <__snprintf_chk@plt+0x37d4>
   14e88:	pop	{fp, pc}
   14e8c:	mov	r2, r1
   14e90:	mov	r1, r0
   14e94:	mov	r0, #0
   14e98:	b	14e5c <__snprintf_chk@plt+0x3898>
   14e9c:	mov	r2, #1
   14ea0:	b	14ea4 <__snprintf_chk@plt+0x38e0>
   14ea4:	push	{r4, r5, fp, lr}
   14ea8:	add	fp, sp, #8
   14eac:	mov	r4, r1
   14eb0:	ldr	r5, [r1]
   14eb4:	cmp	r0, #0
   14eb8:	beq	14ed0 <__snprintf_chk@plt+0x390c>
   14ebc:	mov	r1, #1
   14ec0:	add	r1, r1, r5, lsr #1
   14ec4:	adds	r5, r5, r1
   14ec8:	bcc	14ee8 <__snprintf_chk@plt+0x3924>
   14ecc:	bl	15184 <__snprintf_chk@plt+0x3bc0>
   14ed0:	cmp	r5, #0
   14ed4:	bne	14ee8 <__snprintf_chk@plt+0x3924>
   14ed8:	mov	r1, #64	; 0x40
   14edc:	udiv	r5, r1, r2
   14ee0:	cmp	r2, #64	; 0x40
   14ee4:	addhi	r5, r5, #1
   14ee8:	mov	r1, r5
   14eec:	bl	14d98 <__snprintf_chk@plt+0x37d4>
   14ef0:	str	r5, [r4]
   14ef4:	pop	{r4, r5, fp, pc}
   14ef8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14efc:	add	fp, sp, #24
   14f00:	mov	r8, r1
   14f04:	ldr	r6, [r1]
   14f08:	add	r1, r6, r6, asr #1
   14f0c:	cmp	r1, r6
   14f10:	mvnvs	r1, #-2147483648	; 0x80000000
   14f14:	cmp	r1, r3
   14f18:	mov	r5, r1
   14f1c:	movgt	r5, r3
   14f20:	cmn	r3, #1
   14f24:	movle	r5, r1
   14f28:	ldr	r4, [fp, #8]
   14f2c:	cmn	r4, #1
   14f30:	ble	14f58 <__snprintf_chk@plt+0x3994>
   14f34:	cmp	r4, #0
   14f38:	beq	14fac <__snprintf_chk@plt+0x39e8>
   14f3c:	cmn	r5, #1
   14f40:	ble	14f80 <__snprintf_chk@plt+0x39bc>
   14f44:	mvn	r7, #-2147483648	; 0x80000000
   14f48:	udiv	r1, r7, r4
   14f4c:	cmp	r1, r5
   14f50:	bge	14fac <__snprintf_chk@plt+0x39e8>
   14f54:	b	14fbc <__snprintf_chk@plt+0x39f8>
   14f58:	cmn	r5, #1
   14f5c:	ble	14f9c <__snprintf_chk@plt+0x39d8>
   14f60:	cmn	r4, #1
   14f64:	beq	14fac <__snprintf_chk@plt+0x39e8>
   14f68:	mov	r1, #-2147483648	; 0x80000000
   14f6c:	sdiv	r1, r1, r4
   14f70:	mvn	r7, #-2147483648	; 0x80000000
   14f74:	cmp	r1, r5
   14f78:	bge	14fac <__snprintf_chk@plt+0x39e8>
   14f7c:	b	14fbc <__snprintf_chk@plt+0x39f8>
   14f80:	beq	14fac <__snprintf_chk@plt+0x39e8>
   14f84:	mov	r1, #-2147483648	; 0x80000000
   14f88:	sdiv	r1, r1, r5
   14f8c:	mvn	r7, #-2147483648	; 0x80000000
   14f90:	cmp	r1, r4
   14f94:	bge	14fac <__snprintf_chk@plt+0x39e8>
   14f98:	b	14fbc <__snprintf_chk@plt+0x39f8>
   14f9c:	mvn	r7, #-2147483648	; 0x80000000
   14fa0:	sdiv	r1, r7, r4
   14fa4:	cmp	r5, r1
   14fa8:	blt	14fbc <__snprintf_chk@plt+0x39f8>
   14fac:	mul	r1, r5, r4
   14fb0:	mov	r7, #64	; 0x40
   14fb4:	cmp	r1, #63	; 0x3f
   14fb8:	bgt	14fc4 <__snprintf_chk@plt+0x3a00>
   14fbc:	sdiv	r5, r7, r4
   14fc0:	mul	r1, r5, r4
   14fc4:	cmp	r0, #0
   14fc8:	moveq	r7, #0
   14fcc:	streq	r7, [r8]
   14fd0:	sub	r7, r5, r6
   14fd4:	cmp	r7, r2
   14fd8:	bge	15084 <__snprintf_chk@plt+0x3ac0>
   14fdc:	add	r5, r6, r2
   14fe0:	mov	r1, #0
   14fe4:	cmp	r5, r3
   14fe8:	mov	r2, #0
   14fec:	movwgt	r2, #1
   14ff0:	cmn	r3, #1
   14ff4:	movwgt	r1, #1
   14ff8:	cmp	r5, r6
   14ffc:	bvs	1506c <__snprintf_chk@plt+0x3aa8>
   15000:	ands	r1, r1, r2
   15004:	bne	1506c <__snprintf_chk@plt+0x3aa8>
   15008:	cmn	r4, #1
   1500c:	ble	15034 <__snprintf_chk@plt+0x3a70>
   15010:	cmp	r4, #0
   15014:	beq	15080 <__snprintf_chk@plt+0x3abc>
   15018:	cmn	r5, #1
   1501c:	ble	15058 <__snprintf_chk@plt+0x3a94>
   15020:	mvn	r1, #-2147483648	; 0x80000000
   15024:	udiv	r1, r1, r4
   15028:	cmp	r1, r5
   1502c:	bge	15080 <__snprintf_chk@plt+0x3abc>
   15030:	b	1506c <__snprintf_chk@plt+0x3aa8>
   15034:	cmn	r5, #1
   15038:	ble	15070 <__snprintf_chk@plt+0x3aac>
   1503c:	cmn	r4, #1
   15040:	beq	15080 <__snprintf_chk@plt+0x3abc>
   15044:	mov	r1, #-2147483648	; 0x80000000
   15048:	sdiv	r1, r1, r4
   1504c:	cmp	r1, r5
   15050:	bge	15080 <__snprintf_chk@plt+0x3abc>
   15054:	b	1506c <__snprintf_chk@plt+0x3aa8>
   15058:	beq	15080 <__snprintf_chk@plt+0x3abc>
   1505c:	mov	r1, #-2147483648	; 0x80000000
   15060:	sdiv	r1, r1, r5
   15064:	cmp	r1, r4
   15068:	bge	15080 <__snprintf_chk@plt+0x3abc>
   1506c:	bl	15184 <__snprintf_chk@plt+0x3bc0>
   15070:	mvn	r1, #-2147483648	; 0x80000000
   15074:	sdiv	r1, r1, r4
   15078:	cmp	r5, r1
   1507c:	blt	1506c <__snprintf_chk@plt+0x3aa8>
   15080:	mul	r1, r5, r4
   15084:	bl	14e14 <__snprintf_chk@plt+0x3850>
   15088:	str	r5, [r8]
   1508c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15090:	mov	r1, #1
   15094:	b	15098 <__snprintf_chk@plt+0x3ad4>
   15098:	push	{fp, lr}
   1509c:	mov	fp, sp
   150a0:	bl	15264 <__snprintf_chk@plt+0x3ca0>
   150a4:	bl	14de8 <__snprintf_chk@plt+0x3824>
   150a8:	pop	{fp, pc}
   150ac:	mov	r1, #1
   150b0:	b	150b4 <__snprintf_chk@plt+0x3af0>
   150b4:	push	{fp, lr}
   150b8:	mov	fp, sp
   150bc:	bl	15944 <__snprintf_chk@plt+0x4380>
   150c0:	bl	14de8 <__snprintf_chk@plt+0x3824>
   150c4:	pop	{fp, pc}
   150c8:	push	{r4, r5, r6, sl, fp, lr}
   150cc:	add	fp, sp, #16
   150d0:	mov	r4, r1
   150d4:	mov	r5, r0
   150d8:	mov	r0, r1
   150dc:	bl	14dd4 <__snprintf_chk@plt+0x3810>
   150e0:	mov	r6, r0
   150e4:	mov	r1, r5
   150e8:	mov	r2, r4
   150ec:	bl	11300 <memcpy@plt>
   150f0:	mov	r0, r6
   150f4:	pop	{r4, r5, r6, sl, fp, pc}
   150f8:	push	{r4, r5, r6, sl, fp, lr}
   150fc:	add	fp, sp, #16
   15100:	mov	r4, r1
   15104:	mov	r5, r0
   15108:	mov	r0, r1
   1510c:	bl	14dfc <__snprintf_chk@plt+0x3838>
   15110:	mov	r6, r0
   15114:	mov	r1, r5
   15118:	mov	r2, r4
   1511c:	bl	11300 <memcpy@plt>
   15120:	mov	r0, r6
   15124:	pop	{r4, r5, r6, sl, fp, pc}
   15128:	push	{r4, r5, r6, sl, fp, lr}
   1512c:	add	fp, sp, #16
   15130:	mov	r4, r1
   15134:	mov	r5, r0
   15138:	add	r0, r1, #1
   1513c:	bl	14dfc <__snprintf_chk@plt+0x3838>
   15140:	mov	r6, r0
   15144:	mov	r0, #0
   15148:	strb	r0, [r6, r4]
   1514c:	mov	r0, r6
   15150:	mov	r1, r5
   15154:	mov	r2, r4
   15158:	bl	11300 <memcpy@plt>
   1515c:	mov	r0, r6
   15160:	pop	{r4, r5, r6, sl, fp, pc}
   15164:	push	{r4, sl, fp, lr}
   15168:	add	fp, sp, #8
   1516c:	mov	r4, r0
   15170:	bl	11480 <strlen@plt>
   15174:	add	r1, r0, #1
   15178:	mov	r0, r4
   1517c:	pop	{r4, sl, fp, lr}
   15180:	b	150c8 <__snprintf_chk@plt+0x3b04>
   15184:	push	{fp, lr}
   15188:	mov	fp, sp
   1518c:	movw	r0, #28984	; 0x7138
   15190:	movt	r0, #2
   15194:	ldr	r4, [r0]
   15198:	movw	r1, #27460	; 0x6b44
   1519c:	movt	r1, #1
   151a0:	mov	r0, #0
   151a4:	mov	r2, #5
   151a8:	bl	1133c <dcgettext@plt>
   151ac:	mov	r3, r0
   151b0:	movw	r2, #26405	; 0x6725
   151b4:	movt	r2, #1
   151b8:	mov	r0, r4
   151bc:	mov	r1, #0
   151c0:	bl	113fc <error@plt>
   151c4:	bl	115b8 <abort@plt>
   151c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   151cc:	add	fp, sp, #24
   151d0:	sub	sp, sp, #8
   151d4:	mov	r4, r3
   151d8:	mov	r8, r2
   151dc:	mov	r9, r1
   151e0:	mov	r5, r0
   151e4:	bl	11498 <__errno_location@plt>
   151e8:	mov	r7, r0
   151ec:	mov	r6, #0
   151f0:	str	r6, [r0]
   151f4:	add	r1, sp, #4
   151f8:	mov	r0, r5
   151fc:	blx	r4
   15200:	ldr	r0, [sp, #4]
   15204:	cmp	r0, r5
   15208:	beq	15248 <__snprintf_chk@plt+0x3c84>
   1520c:	cmp	r9, #0
   15210:	beq	15230 <__snprintf_chk@plt+0x3c6c>
   15214:	vcmp.f64	d0, #0.0
   15218:	vmrs	APSR_nzcv, fpscr
   1521c:	beq	15244 <__snprintf_chk@plt+0x3c80>
   15220:	ldr	r0, [r7]
   15224:	subs	r6, r0, #34	; 0x22
   15228:	movwne	r6, #1
   1522c:	b	15248 <__snprintf_chk@plt+0x3c84>
   15230:	ldrb	r0, [r0]
   15234:	mov	r6, #0
   15238:	cmp	r0, #0
   1523c:	bne	15254 <__snprintf_chk@plt+0x3c90>
   15240:	b	15214 <__snprintf_chk@plt+0x3c50>
   15244:	mov	r6, #1
   15248:	cmp	r9, #0
   1524c:	ldrne	r0, [sp, #4]
   15250:	strne	r0, [r9]
   15254:	vstr	d0, [r8]
   15258:	mov	r0, r6
   1525c:	sub	sp, fp, #24
   15260:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15264:	clz	r2, r1
   15268:	lsr	r2, r2, #5
   1526c:	clz	r3, r0
   15270:	lsr	r3, r3, #5
   15274:	orrs	r2, r3, r2
   15278:	movwne	r1, #1
   1527c:	movwne	r0, #1
   15280:	cmp	r1, #0
   15284:	beq	152b4 <__snprintf_chk@plt+0x3cf0>
   15288:	mvn	r2, #-2147483648	; 0x80000000
   1528c:	udiv	r2, r2, r1
   15290:	cmp	r2, r0
   15294:	bcs	152b4 <__snprintf_chk@plt+0x3cf0>
   15298:	push	{fp, lr}
   1529c:	mov	fp, sp
   152a0:	bl	11498 <__errno_location@plt>
   152a4:	mov	r1, #12
   152a8:	str	r1, [r0]
   152ac:	mov	r0, #0
   152b0:	pop	{fp, pc}
   152b4:	b	11294 <calloc@plt>
   152b8:	cmp	r0, #0
   152bc:	movweq	r0, #1
   152c0:	cmn	r0, #1
   152c4:	ble	152cc <__snprintf_chk@plt+0x3d08>
   152c8:	b	11414 <malloc@plt>
   152cc:	push	{fp, lr}
   152d0:	mov	fp, sp
   152d4:	bl	11498 <__errno_location@plt>
   152d8:	mov	r1, #12
   152dc:	str	r1, [r0]
   152e0:	mov	r0, #0
   152e4:	pop	{fp, pc}
   152e8:	push	{fp, lr}
   152ec:	mov	fp, sp
   152f0:	cmp	r0, #0
   152f4:	beq	15310 <__snprintf_chk@plt+0x3d4c>
   152f8:	cmp	r1, #0
   152fc:	beq	1531c <__snprintf_chk@plt+0x3d58>
   15300:	cmn	r1, #1
   15304:	ble	15328 <__snprintf_chk@plt+0x3d64>
   15308:	pop	{fp, lr}
   1530c:	b	11354 <realloc@plt>
   15310:	mov	r0, r1
   15314:	pop	{fp, lr}
   15318:	b	152b8 <__snprintf_chk@plt+0x3cf4>
   1531c:	bl	129a0 <__snprintf_chk@plt+0x13dc>
   15320:	mov	r0, #0
   15324:	pop	{fp, pc}
   15328:	bl	11498 <__errno_location@plt>
   1532c:	mov	r1, #12
   15330:	str	r1, [r0]
   15334:	mov	r0, #0
   15338:	pop	{fp, pc}
   1533c:	mov	r1, r0
   15340:	sub	r2, r0, #65	; 0x41
   15344:	mov	r0, #1
   15348:	cmp	r2, #26
   1534c:	subcs	r2, r1, #97	; 0x61
   15350:	cmpcs	r2, #26
   15354:	bcs	1535c <__snprintf_chk@plt+0x3d98>
   15358:	bx	lr
   1535c:	sub	r1, r1, #48	; 0x30
   15360:	cmp	r1, #10
   15364:	movcs	r0, #0
   15368:	bx	lr
   1536c:	mov	r1, r0
   15370:	sub	r2, r0, #65	; 0x41
   15374:	mov	r0, #1
   15378:	cmp	r2, #26
   1537c:	subcs	r1, r1, #97	; 0x61
   15380:	cmpcs	r1, #26
   15384:	movcs	r0, #0
   15388:	bx	lr
   1538c:	mov	r1, #0
   15390:	cmp	r0, #128	; 0x80
   15394:	movwcc	r1, #1
   15398:	mov	r0, r1
   1539c:	bx	lr
   153a0:	sub	r1, r0, #9
   153a4:	clz	r1, r1
   153a8:	lsr	r1, r1, #5
   153ac:	sub	r0, r0, #32
   153b0:	clz	r0, r0
   153b4:	lsr	r0, r0, #5
   153b8:	orr	r0, r0, r1
   153bc:	bx	lr
   153c0:	mov	r1, r0
   153c4:	mov	r0, #1
   153c8:	cmp	r1, #32
   153cc:	bxcc	lr
   153d0:	cmp	r1, #127	; 0x7f
   153d4:	movne	r0, #0
   153d8:	bx	lr
   153dc:	sub	r1, r0, #48	; 0x30
   153e0:	mov	r0, #0
   153e4:	cmp	r1, #10
   153e8:	movwcc	r0, #1
   153ec:	bx	lr
   153f0:	sub	r1, r0, #33	; 0x21
   153f4:	mov	r0, #0
   153f8:	cmp	r1, #94	; 0x5e
   153fc:	movwcc	r0, #1
   15400:	bx	lr
   15404:	sub	r1, r0, #97	; 0x61
   15408:	mov	r0, #0
   1540c:	cmp	r1, #26
   15410:	movwcc	r0, #1
   15414:	bx	lr
   15418:	sub	r1, r0, #32
   1541c:	mov	r0, #0
   15420:	cmp	r1, #95	; 0x5f
   15424:	movwcc	r0, #1
   15428:	bx	lr
   1542c:	sub	r1, r0, #33	; 0x21
   15430:	cmp	r1, #93	; 0x5d
   15434:	bhi	155c0 <__snprintf_chk@plt+0x3ffc>
   15438:	mov	r0, #1
   1543c:	add	r2, pc, #0
   15440:	ldr	pc, [r2, r1, lsl #2]
   15444:			; <UNDEFINED> instruction: 0x000155bc
   15448:			; <UNDEFINED> instruction: 0x000155bc
   1544c:			; <UNDEFINED> instruction: 0x000155bc
   15450:			; <UNDEFINED> instruction: 0x000155bc
   15454:			; <UNDEFINED> instruction: 0x000155bc
   15458:			; <UNDEFINED> instruction: 0x000155bc
   1545c:			; <UNDEFINED> instruction: 0x000155bc
   15460:			; <UNDEFINED> instruction: 0x000155bc
   15464:			; <UNDEFINED> instruction: 0x000155bc
   15468:			; <UNDEFINED> instruction: 0x000155bc
   1546c:			; <UNDEFINED> instruction: 0x000155bc
   15470:			; <UNDEFINED> instruction: 0x000155bc
   15474:			; <UNDEFINED> instruction: 0x000155bc
   15478:			; <UNDEFINED> instruction: 0x000155bc
   1547c:			; <UNDEFINED> instruction: 0x000155bc
   15480:	andeq	r5, r1, r0, asr #11
   15484:	andeq	r5, r1, r0, asr #11
   15488:	andeq	r5, r1, r0, asr #11
   1548c:	andeq	r5, r1, r0, asr #11
   15490:	andeq	r5, r1, r0, asr #11
   15494:	andeq	r5, r1, r0, asr #11
   15498:	andeq	r5, r1, r0, asr #11
   1549c:	andeq	r5, r1, r0, asr #11
   154a0:	andeq	r5, r1, r0, asr #11
   154a4:	andeq	r5, r1, r0, asr #11
   154a8:			; <UNDEFINED> instruction: 0x000155bc
   154ac:			; <UNDEFINED> instruction: 0x000155bc
   154b0:			; <UNDEFINED> instruction: 0x000155bc
   154b4:			; <UNDEFINED> instruction: 0x000155bc
   154b8:			; <UNDEFINED> instruction: 0x000155bc
   154bc:			; <UNDEFINED> instruction: 0x000155bc
   154c0:			; <UNDEFINED> instruction: 0x000155bc
   154c4:	andeq	r5, r1, r0, asr #11
   154c8:	andeq	r5, r1, r0, asr #11
   154cc:	andeq	r5, r1, r0, asr #11
   154d0:	andeq	r5, r1, r0, asr #11
   154d4:	andeq	r5, r1, r0, asr #11
   154d8:	andeq	r5, r1, r0, asr #11
   154dc:	andeq	r5, r1, r0, asr #11
   154e0:	andeq	r5, r1, r0, asr #11
   154e4:	andeq	r5, r1, r0, asr #11
   154e8:	andeq	r5, r1, r0, asr #11
   154ec:	andeq	r5, r1, r0, asr #11
   154f0:	andeq	r5, r1, r0, asr #11
   154f4:	andeq	r5, r1, r0, asr #11
   154f8:	andeq	r5, r1, r0, asr #11
   154fc:	andeq	r5, r1, r0, asr #11
   15500:	andeq	r5, r1, r0, asr #11
   15504:	andeq	r5, r1, r0, asr #11
   15508:	andeq	r5, r1, r0, asr #11
   1550c:	andeq	r5, r1, r0, asr #11
   15510:	andeq	r5, r1, r0, asr #11
   15514:	andeq	r5, r1, r0, asr #11
   15518:	andeq	r5, r1, r0, asr #11
   1551c:	andeq	r5, r1, r0, asr #11
   15520:	andeq	r5, r1, r0, asr #11
   15524:	andeq	r5, r1, r0, asr #11
   15528:	andeq	r5, r1, r0, asr #11
   1552c:			; <UNDEFINED> instruction: 0x000155bc
   15530:			; <UNDEFINED> instruction: 0x000155bc
   15534:			; <UNDEFINED> instruction: 0x000155bc
   15538:			; <UNDEFINED> instruction: 0x000155bc
   1553c:			; <UNDEFINED> instruction: 0x000155bc
   15540:			; <UNDEFINED> instruction: 0x000155bc
   15544:	andeq	r5, r1, r0, asr #11
   15548:	andeq	r5, r1, r0, asr #11
   1554c:	andeq	r5, r1, r0, asr #11
   15550:	andeq	r5, r1, r0, asr #11
   15554:	andeq	r5, r1, r0, asr #11
   15558:	andeq	r5, r1, r0, asr #11
   1555c:	andeq	r5, r1, r0, asr #11
   15560:	andeq	r5, r1, r0, asr #11
   15564:	andeq	r5, r1, r0, asr #11
   15568:	andeq	r5, r1, r0, asr #11
   1556c:	andeq	r5, r1, r0, asr #11
   15570:	andeq	r5, r1, r0, asr #11
   15574:	andeq	r5, r1, r0, asr #11
   15578:	andeq	r5, r1, r0, asr #11
   1557c:	andeq	r5, r1, r0, asr #11
   15580:	andeq	r5, r1, r0, asr #11
   15584:	andeq	r5, r1, r0, asr #11
   15588:	andeq	r5, r1, r0, asr #11
   1558c:	andeq	r5, r1, r0, asr #11
   15590:	andeq	r5, r1, r0, asr #11
   15594:	andeq	r5, r1, r0, asr #11
   15598:	andeq	r5, r1, r0, asr #11
   1559c:	andeq	r5, r1, r0, asr #11
   155a0:	andeq	r5, r1, r0, asr #11
   155a4:	andeq	r5, r1, r0, asr #11
   155a8:	andeq	r5, r1, r0, asr #11
   155ac:			; <UNDEFINED> instruction: 0x000155bc
   155b0:			; <UNDEFINED> instruction: 0x000155bc
   155b4:			; <UNDEFINED> instruction: 0x000155bc
   155b8:			; <UNDEFINED> instruction: 0x000155bc
   155bc:	bx	lr
   155c0:	mov	r0, #0
   155c4:	bx	lr
   155c8:	sub	r0, r0, #9
   155cc:	cmp	r0, #23
   155d0:	movhi	r0, #0
   155d4:	bxhi	lr
   155d8:	bic	r0, r0, #-16777216	; 0xff000000
   155dc:	movw	r1, #31
   155e0:	movt	r1, #128	; 0x80
   155e4:	mov	r2, #1
   155e8:	and	r0, r2, r1, lsr r0
   155ec:	bx	lr
   155f0:	sub	r1, r0, #65	; 0x41
   155f4:	mov	r0, #0
   155f8:	cmp	r1, #26
   155fc:	movwcc	r0, #1
   15600:	bx	lr
   15604:	mov	r1, r0
   15608:	sub	r2, r0, #48	; 0x30
   1560c:	mov	r0, #1
   15610:	cmp	r2, #22
   15614:	bhi	1562c <__snprintf_chk@plt+0x4068>
   15618:	mov	ip, #1
   1561c:	movw	r3, #1023	; 0x3ff
   15620:	movt	r3, #126	; 0x7e
   15624:	tst	r3, ip, lsl r2
   15628:	bxne	lr
   1562c:	sub	r1, r1, #97	; 0x61
   15630:	cmp	r1, #6
   15634:	movcs	r0, #0
   15638:	bxcs	lr
   1563c:	bx	lr
   15640:	sub	r1, r0, #65	; 0x41
   15644:	cmp	r1, #26
   15648:	addcc	r0, r0, #32
   1564c:	bx	lr
   15650:	sub	r1, r0, #97	; 0x61
   15654:	cmp	r1, #26
   15658:	subcc	r0, r0, #32
   1565c:	bx	lr
   15660:	push	{r4, r5, fp, lr}
   15664:	add	fp, sp, #8
   15668:	mov	r4, r1
   1566c:	mov	r5, r0
   15670:	bl	156a0 <__snprintf_chk@plt+0x40dc>
   15674:	cmp	r0, #0
   15678:	beq	15690 <__snprintf_chk@plt+0x40cc>
   1567c:	mov	r2, r0
   15680:	mov	r0, r5
   15684:	mov	r1, r4
   15688:	pop	{r4, r5, fp, lr}
   1568c:	b	11534 <strtod_l@plt>
   15690:	cmp	r4, #0
   15694:	strne	r5, [r4]
   15698:	vmov.i32	d0, #0	; 0x00000000
   1569c:	pop	{r4, r5, fp, pc}
   156a0:	push	{r4, sl, fp, lr}
   156a4:	add	fp, sp, #8
   156a8:	movw	r4, #29856	; 0x74a0
   156ac:	movt	r4, #2
   156b0:	ldr	r0, [r4]
   156b4:	cmp	r0, #0
   156b8:	beq	156c4 <__snprintf_chk@plt+0x4100>
   156bc:	ldr	r0, [r4]
   156c0:	pop	{r4, sl, fp, pc}
   156c4:	movw	r1, #27477	; 0x6b55
   156c8:	movt	r1, #1
   156cc:	movw	r0, #8127	; 0x1fbf
   156d0:	mov	r2, #0
   156d4:	bl	1157c <newlocale@plt>
   156d8:	str	r0, [r4]
   156dc:	ldr	r0, [r4]
   156e0:	pop	{r4, sl, fp, pc}
   156e4:	push	{r4, r5, r6, sl, fp, lr}
   156e8:	add	fp, sp, #16
   156ec:	mov	r4, r0
   156f0:	bl	113d8 <__fpending@plt>
   156f4:	mov	r5, r0
   156f8:	mov	r0, r4
   156fc:	bl	113e4 <ferror_unlocked@plt>
   15700:	mov	r6, r0
   15704:	mov	r0, r4
   15708:	bl	1576c <__snprintf_chk@plt+0x41a8>
   1570c:	cmp	r6, #0
   15710:	beq	15730 <__snprintf_chk@plt+0x416c>
   15714:	mvn	r4, #0
   15718:	cmp	r0, #0
   1571c:	bne	15764 <__snprintf_chk@plt+0x41a0>
   15720:	bl	11498 <__errno_location@plt>
   15724:	mov	r1, #0
   15728:	str	r1, [r0]
   1572c:	b	15764 <__snprintf_chk@plt+0x41a0>
   15730:	cmp	r0, #0
   15734:	mov	r4, r0
   15738:	mvnne	r4, #0
   1573c:	cmp	r5, #0
   15740:	bne	15764 <__snprintf_chk@plt+0x41a0>
   15744:	cmp	r0, #0
   15748:	beq	15764 <__snprintf_chk@plt+0x41a0>
   1574c:	bl	11498 <__errno_location@plt>
   15750:	ldr	r0, [r0]
   15754:	subs	r4, r0, #9
   15758:	mvnne	r4, #0
   1575c:	mov	r0, r4
   15760:	pop	{r4, r5, r6, sl, fp, pc}
   15764:	mov	r0, r4
   15768:	pop	{r4, r5, r6, sl, fp, pc}
   1576c:	push	{r4, r5, fp, lr}
   15770:	add	fp, sp, #8
   15774:	sub	sp, sp, #8
   15778:	mov	r4, r0
   1577c:	bl	114f8 <fileno@plt>
   15780:	cmn	r0, #1
   15784:	ble	157fc <__snprintf_chk@plt+0x4238>
   15788:	mov	r0, r4
   1578c:	bl	11438 <__freading@plt>
   15790:	cmp	r0, #0
   15794:	beq	157c0 <__snprintf_chk@plt+0x41fc>
   15798:	mov	r0, r4
   1579c:	bl	114f8 <fileno@plt>
   157a0:	mov	r1, #1
   157a4:	str	r1, [sp]
   157a8:	mov	r2, #0
   157ac:	mov	r3, #0
   157b0:	bl	113a8 <lseek64@plt>
   157b4:	and	r0, r0, r1
   157b8:	cmn	r0, #1
   157bc:	beq	157fc <__snprintf_chk@plt+0x4238>
   157c0:	mov	r0, r4
   157c4:	bl	1580c <__snprintf_chk@plt+0x4248>
   157c8:	cmp	r0, #0
   157cc:	beq	157fc <__snprintf_chk@plt+0x4238>
   157d0:	bl	11498 <__errno_location@plt>
   157d4:	ldr	r5, [r0]
   157d8:	mov	r0, r4
   157dc:	bl	1151c <fclose@plt>
   157e0:	cmp	r5, #0
   157e4:	beq	157f4 <__snprintf_chk@plt+0x4230>
   157e8:	bl	11498 <__errno_location@plt>
   157ec:	str	r5, [r0]
   157f0:	mvn	r0, #0
   157f4:	sub	sp, fp, #8
   157f8:	pop	{r4, r5, fp, pc}
   157fc:	mov	r0, r4
   15800:	sub	sp, fp, #8
   15804:	pop	{r4, r5, fp, lr}
   15808:	b	1151c <fclose@plt>
   1580c:	push	{r4, sl, fp, lr}
   15810:	add	fp, sp, #8
   15814:	mov	r4, r0
   15818:	cmp	r0, #0
   1581c:	beq	15834 <__snprintf_chk@plt+0x4270>
   15820:	mov	r0, r4
   15824:	bl	11438 <__freading@plt>
   15828:	cmp	r0, #0
   1582c:	movne	r0, r4
   15830:	blne	15840 <__snprintf_chk@plt+0x427c>
   15834:	mov	r0, r4
   15838:	pop	{r4, sl, fp, lr}
   1583c:	b	112d0 <fflush@plt>
   15840:	ldrb	r1, [r0, #1]
   15844:	tst	r1, #1
   15848:	bxeq	lr
   1584c:	push	{fp, lr}
   15850:	mov	fp, sp
   15854:	sub	sp, sp, #8
   15858:	mov	r1, #1
   1585c:	str	r1, [sp]
   15860:	mov	r2, #0
   15864:	mov	r3, #0
   15868:	bl	15874 <__snprintf_chk@plt+0x42b0>
   1586c:	mov	sp, fp
   15870:	pop	{fp, pc}
   15874:	push	{r4, r5, r6, r7, fp, lr}
   15878:	add	fp, sp, #16
   1587c:	sub	sp, sp, #8
   15880:	mov	r5, r3
   15884:	mov	r6, r2
   15888:	mov	r4, r0
   1588c:	ldr	r0, [r0, #4]
   15890:	ldr	r1, [r4, #8]
   15894:	cmp	r1, r0
   15898:	bne	158b4 <__snprintf_chk@plt+0x42f0>
   1589c:	ldrd	r0, [r4, #16]
   158a0:	cmp	r1, r0
   158a4:	bne	158b4 <__snprintf_chk@plt+0x42f0>
   158a8:	ldr	r0, [r4, #36]	; 0x24
   158ac:	cmp	r0, #0
   158b0:	beq	158cc <__snprintf_chk@plt+0x4308>
   158b4:	mov	r0, r4
   158b8:	mov	r2, r6
   158bc:	mov	r3, r5
   158c0:	sub	sp, fp, #16
   158c4:	pop	{r4, r5, r6, r7, fp, lr}
   158c8:	b	11528 <fseeko64@plt>
   158cc:	ldr	r7, [fp, #8]
   158d0:	mov	r0, r4
   158d4:	bl	114f8 <fileno@plt>
   158d8:	str	r7, [sp]
   158dc:	mov	r2, r6
   158e0:	mov	r3, r5
   158e4:	bl	113a8 <lseek64@plt>
   158e8:	and	r2, r0, r1
   158ec:	cmn	r2, #1
   158f0:	mvneq	r0, #0
   158f4:	subeq	sp, fp, #16
   158f8:	popeq	{r4, r5, r6, r7, fp, pc}
   158fc:	strd	r0, [r4, #80]	; 0x50
   15900:	ldr	r0, [r4]
   15904:	bic	r0, r0, #16
   15908:	str	r0, [r4]
   1590c:	mov	r0, #0
   15910:	sub	sp, fp, #16
   15914:	pop	{r4, r5, r6, r7, fp, pc}
   15918:	push	{fp, lr}
   1591c:	mov	fp, sp
   15920:	bl	11498 <__errno_location@plt>
   15924:	mov	r1, #12
   15928:	str	r1, [r0]
   1592c:	mov	r0, #0
   15930:	pop	{fp, pc}
   15934:	b	152b8 <__snprintf_chk@plt+0x3cf4>
   15938:	cmp	r1, #0
   1593c:	orreq	r1, r1, #1
   15940:	b	152e8 <__snprintf_chk@plt+0x3d24>
   15944:	b	15264 <__snprintf_chk@plt+0x3ca0>
   15948:	clz	r3, r2
   1594c:	lsr	ip, r3, #5
   15950:	clz	r3, r1
   15954:	lsr	r3, r3, #5
   15958:	orrs	r3, r3, ip
   1595c:	movwne	r1, #1
   15960:	movwne	r2, #1
   15964:	b	15a00 <__snprintf_chk@plt+0x443c>
   15968:	push	{fp, lr}
   1596c:	mov	fp, sp
   15970:	mov	r0, #14
   15974:	bl	11570 <nl_langinfo@plt>
   15978:	movw	r1, #25916	; 0x653c
   1597c:	movt	r1, #1
   15980:	cmp	r0, #0
   15984:	movne	r1, r0
   15988:	ldrb	r2, [r1]
   1598c:	movw	r0, #27479	; 0x6b57
   15990:	movt	r0, #1
   15994:	cmp	r2, #0
   15998:	movne	r0, r1
   1599c:	pop	{fp, pc}
   159a0:	push	{r4, r5, r6, r7, fp, lr}
   159a4:	add	fp, sp, #16
   159a8:	sub	sp, sp, #8
   159ac:	mov	r7, r2
   159b0:	mov	r4, r1
   159b4:	add	r5, sp, #4
   159b8:	cmp	r0, #0
   159bc:	movne	r5, r0
   159c0:	mov	r0, r5
   159c4:	bl	113f0 <mbrtowc@plt>
   159c8:	mov	r6, r0
   159cc:	cmp	r7, #0
   159d0:	beq	159f4 <__snprintf_chk@plt+0x4430>
   159d4:	cmn	r6, #2
   159d8:	bcc	159f4 <__snprintf_chk@plt+0x4430>
   159dc:	mov	r0, #0
   159e0:	bl	15a3c <__snprintf_chk@plt+0x4478>
   159e4:	cmp	r0, #0
   159e8:	ldrbeq	r0, [r4]
   159ec:	streq	r0, [r5]
   159f0:	moveq	r6, #1
   159f4:	mov	r0, r6
   159f8:	sub	sp, fp, #16
   159fc:	pop	{r4, r5, r6, r7, fp, pc}
   15a00:	cmp	r2, #0
   15a04:	beq	15a34 <__snprintf_chk@plt+0x4470>
   15a08:	mvn	r3, #0
   15a0c:	udiv	r3, r3, r2
   15a10:	cmp	r3, r1
   15a14:	bcs	15a34 <__snprintf_chk@plt+0x4470>
   15a18:	push	{fp, lr}
   15a1c:	mov	fp, sp
   15a20:	bl	11498 <__errno_location@plt>
   15a24:	mov	r1, #12
   15a28:	str	r1, [r0]
   15a2c:	mov	r0, #0
   15a30:	pop	{fp, pc}
   15a34:	mul	r1, r2, r1
   15a38:	b	152e8 <__snprintf_chk@plt+0x3d24>
   15a3c:	push	{r4, sl, fp, lr}
   15a40:	add	fp, sp, #8
   15a44:	sub	sp, sp, #264	; 0x108
   15a48:	add	r1, sp, #7
   15a4c:	movw	r2, #257	; 0x101
   15a50:	bl	15aa0 <__snprintf_chk@plt+0x44dc>
   15a54:	mov	r4, #0
   15a58:	cmp	r0, #0
   15a5c:	bne	15a94 <__snprintf_chk@plt+0x44d0>
   15a60:	add	r0, sp, #7
   15a64:	movw	r1, #27477	; 0x6b55
   15a68:	movt	r1, #1
   15a6c:	bl	112b8 <strcmp@plt>
   15a70:	cmp	r0, #0
   15a74:	beq	15a94 <__snprintf_chk@plt+0x44d0>
   15a78:	add	r0, sp, #7
   15a7c:	movw	r1, #27485	; 0x6b5d
   15a80:	movt	r1, #1
   15a84:	bl	112b8 <strcmp@plt>
   15a88:	mov	r4, r0
   15a8c:	cmp	r0, #0
   15a90:	movwne	r4, #1
   15a94:	mov	r0, r4
   15a98:	sub	sp, fp, #8
   15a9c:	pop	{r4, sl, fp, pc}
   15aa0:	b	15aa4 <__snprintf_chk@plt+0x44e0>
   15aa4:	push	{r4, r5, r6, r7, fp, lr}
   15aa8:	add	fp, sp, #16
   15aac:	mov	r6, r2
   15ab0:	mov	r4, r1
   15ab4:	bl	15b40 <__snprintf_chk@plt+0x457c>
   15ab8:	cmp	r0, #0
   15abc:	beq	15aec <__snprintf_chk@plt+0x4528>
   15ac0:	mov	r7, r0
   15ac4:	bl	11480 <strlen@plt>
   15ac8:	cmp	r0, r6
   15acc:	bcs	15b0c <__snprintf_chk@plt+0x4548>
   15ad0:	add	r2, r0, #1
   15ad4:	mov	r0, r4
   15ad8:	mov	r1, r7
   15adc:	bl	11300 <memcpy@plt>
   15ae0:	mov	r5, #0
   15ae4:	mov	r0, r5
   15ae8:	pop	{r4, r5, r6, r7, fp, pc}
   15aec:	mov	r5, #22
   15af0:	cmp	r6, #0
   15af4:	movne	r0, #0
   15af8:	strbne	r0, [r4]
   15afc:	movne	r0, r5
   15b00:	popne	{r4, r5, r6, r7, fp, pc}
   15b04:	mov	r0, r5
   15b08:	pop	{r4, r5, r6, r7, fp, pc}
   15b0c:	mov	r5, #34	; 0x22
   15b10:	cmp	r6, #0
   15b14:	beq	15b34 <__snprintf_chk@plt+0x4570>
   15b18:	sub	r6, r6, #1
   15b1c:	mov	r0, r4
   15b20:	mov	r1, r7
   15b24:	mov	r2, r6
   15b28:	bl	11300 <memcpy@plt>
   15b2c:	mov	r0, #0
   15b30:	strb	r0, [r4, r6]
   15b34:	mov	r0, r5
   15b38:	pop	{r4, r5, r6, r7, fp, pc}
   15b3c:	b	15b40 <__snprintf_chk@plt+0x457c>
   15b40:	mov	r1, #0
   15b44:	b	11540 <setlocale@plt>
   15b48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15b4c:	mov	r7, r0
   15b50:	ldr	r6, [pc, #72]	; 15ba0 <__snprintf_chk@plt+0x45dc>
   15b54:	ldr	r5, [pc, #72]	; 15ba4 <__snprintf_chk@plt+0x45e0>
   15b58:	add	r6, pc, r6
   15b5c:	add	r5, pc, r5
   15b60:	sub	r6, r6, r5
   15b64:	mov	r8, r1
   15b68:	mov	r9, r2
   15b6c:	bl	11274 <calloc@plt-0x20>
   15b70:	asrs	r6, r6, #2
   15b74:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b78:	mov	r4, #0
   15b7c:	add	r4, r4, #1
   15b80:	ldr	r3, [r5], #4
   15b84:	mov	r2, r9
   15b88:	mov	r1, r8
   15b8c:	mov	r0, r7
   15b90:	blx	r3
   15b94:	cmp	r6, r4
   15b98:	bne	15b7c <__snprintf_chk@plt+0x45b8>
   15b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ba0:	muleq	r1, ip, r3
   15ba4:	muleq	r1, r4, r3
   15ba8:	bx	lr
   15bac:	ldr	r3, [pc, #12]	; 15bc0 <__snprintf_chk@plt+0x45fc>
   15bb0:	mov	r1, #0
   15bb4:	add	r3, pc, r3
   15bb8:	ldr	r2, [r3]
   15bbc:	b	114b0 <__cxa_atexit@plt>
   15bc0:	andeq	r1, r1, r0, ror r5

Disassembly of section .fini:

00015bc4 <.fini>:
   15bc4:	push	{r3, lr}
   15bc8:	pop	{r3, pc}
