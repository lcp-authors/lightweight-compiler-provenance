
../repos/eddieantonio-ocreval-3ab279a/wordaccsum/wordaccsum:     file format elf32-littlearm


Disassembly of section .init:

00010720 <.init>:
   10720:	push	{r3, lr}
   10724:	bl	10910 <abort@plt+0xbc>
   10728:	pop	{r3, pc}

Disassembly of section .plt:

0001072c <calloc@plt-0x14>:
   1072c:	push	{lr}		; (str lr, [sp, #-4]!)
   10730:	ldr	lr, [pc, #4]	; 1073c <calloc@plt-0x4>
   10734:	add	lr, pc, lr
   10738:	ldr	pc, [lr, #8]!
   1073c:	andeq	r2, r1, r4, asr #17

00010740 <calloc@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #73728	; 0x12000
   10748:	ldr	pc, [ip, #2244]!	; 0x8c4

0001074c <raise@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #73728	; 0x12000
   10754:	ldr	pc, [ip, #2236]!	; 0x8bc

00010758 <strcmp@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #73728	; 0x12000
   10760:	ldr	pc, [ip, #2228]!	; 0x8b4

00010764 <fopen@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #73728	; 0x12000
   1076c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010770 <free@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #73728	; 0x12000
   10778:	ldr	pc, [ip, #2212]!	; 0x8a4

0001077c <fgets@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #73728	; 0x12000
   10784:	ldr	pc, [ip, #2204]!	; 0x89c

00010788 <strdup@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #73728	; 0x12000
   10790:	ldr	pc, [ip, #2196]!	; 0x894

00010794 <unlink@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #73728	; 0x12000
   1079c:	ldr	pc, [ip, #2188]!	; 0x88c

000107a0 <__xstat@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #73728	; 0x12000
   107a8:	ldr	pc, [ip, #2180]!	; 0x884

000107ac <__libc_start_main@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #73728	; 0x12000
   107b4:	ldr	pc, [ip, #2172]!	; 0x87c

000107b8 <__sysv_signal@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #73728	; 0x12000
   107c0:	ldr	pc, [ip, #2164]!	; 0x874

000107c4 <__gmon_start__@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #73728	; 0x12000
   107cc:	ldr	pc, [ip, #2156]!	; 0x86c

000107d0 <getpid@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #73728	; 0x12000
   107d8:	ldr	pc, [ip, #2148]!	; 0x864

000107dc <exit@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #73728	; 0x12000
   107e4:	ldr	pc, [ip, #2140]!	; 0x85c

000107e8 <strlen@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #73728	; 0x12000
   107f0:	ldr	pc, [ip, #2132]!	; 0x854

000107f4 <fprintf@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #73728	; 0x12000
   107fc:	ldr	pc, [ip, #2124]!	; 0x84c

00010800 <__isoc99_sscanf@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #73728	; 0x12000
   10808:	ldr	pc, [ip, #2116]!	; 0x844

0001080c <fclose@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #73728	; 0x12000
   10814:	ldr	pc, [ip, #2108]!	; 0x83c

00010818 <fputc@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #73728	; 0x12000
   10820:	ldr	pc, [ip, #2100]!	; 0x834

00010824 <sprintf@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #73728	; 0x12000
   1082c:	ldr	pc, [ip, #2092]!	; 0x82c

00010830 <atoi@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #73728	; 0x12000
   10838:	ldr	pc, [ip, #2084]!	; 0x824

0001083c <fputs@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #73728	; 0x12000
   10844:	ldr	pc, [ip, #2076]!	; 0x81c

00010848 <strncmp@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #73728	; 0x12000
   10850:	ldr	pc, [ip, #2068]!	; 0x814

00010854 <abort@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #73728	; 0x12000
   1085c:	ldr	pc, [ip, #2060]!	; 0x80c

Disassembly of section .text:

00010860 <error@@Base-0xd2c>:
   10860:	push	{r0, r1, r4, r5, r6, lr}
   10864:	add	ip, sp, #8
   10868:	mov	r3, #0
   1086c:	str	r0, [ip, #-4]!
   10870:	ldr	r2, [pc, #80]	; 108c8 <abort@plt+0x74>
   10874:	mov	r0, ip
   10878:	mov	r5, r1
   1087c:	bl	116b0 <error@@Base+0x124>
   10880:	ldr	r3, [sp, #4]
   10884:	cmp	r3, #1
   10888:	movgt	r4, #0
   1088c:	ldrgt	r6, [pc, #56]	; 108cc <abort@plt+0x78>
   10890:	bgt	108ac <abort@plt+0x58>
   10894:	ldr	r0, [pc, #52]	; 108d0 <abort@plt+0x7c>
   10898:	bl	1158c <error@@Base>
   1089c:	ldr	r1, [r5, r4, lsl #2]
   108a0:	mov	r0, r6
   108a4:	bl	10ea8 <abort@plt+0x654>
   108a8:	add	r4, r4, #1
   108ac:	ldr	r3, [sp, #4]
   108b0:	cmp	r4, r3
   108b4:	blt	1089c <abort@plt+0x48>
   108b8:	mov	r1, #0
   108bc:	ldr	r0, [pc, #8]	; 108cc <abort@plt+0x78>
   108c0:	bl	11020 <abort@plt+0x7cc>
   108c4:	bl	11534 <abort@plt+0xce0>
   108c8:	andeq	r1, r1, r8, lsr #28
   108cc:	andeq	r3, r2, r4, lsl #2
   108d0:	andeq	r1, r1, ip, asr lr
   108d4:	mov	fp, #0
   108d8:	mov	lr, #0
   108dc:	pop	{r1}		; (ldr r1, [sp], #4)
   108e0:	mov	r2, sp
   108e4:	push	{r2}		; (str r2, [sp, #-4]!)
   108e8:	push	{r0}		; (str r0, [sp, #-4]!)
   108ec:	ldr	ip, [pc, #16]	; 10904 <abort@plt+0xb0>
   108f0:	push	{ip}		; (str ip, [sp, #-4]!)
   108f4:	ldr	r0, [pc, #12]	; 10908 <abort@plt+0xb4>
   108f8:	ldr	r3, [pc, #12]	; 1090c <abort@plt+0xb8>
   108fc:	bl	107ac <__libc_start_main@plt>
   10900:	bl	10854 <abort@plt>
   10904:	andeq	r1, r1, r8, lsl #28
   10908:	andeq	r0, r1, r0, ror #16
   1090c:	andeq	r1, r1, r8, lsr #27
   10910:	ldr	r3, [pc, #20]	; 1092c <abort@plt+0xd8>
   10914:	ldr	r2, [pc, #20]	; 10930 <abort@plt+0xdc>
   10918:	add	r3, pc, r3
   1091c:	ldr	r2, [r3, r2]
   10920:	cmp	r2, #0
   10924:	bxeq	lr
   10928:	b	107c4 <__gmon_start__@plt>
   1092c:	andeq	r2, r1, r0, ror #13
   10930:	andeq	r0, r0, ip, rrx
   10934:	ldr	r3, [pc, #28]	; 10958 <abort@plt+0x104>
   10938:	ldr	r0, [pc, #28]	; 1095c <abort@plt+0x108>
   1093c:	sub	r3, r3, r0
   10940:	cmp	r3, #6
   10944:	bxls	lr
   10948:	ldr	r3, [pc, #16]	; 10960 <abort@plt+0x10c>
   1094c:	cmp	r3, #0
   10950:	bxeq	lr
   10954:	bx	r3
   10958:	andeq	r3, r2, r3, lsl #1
   1095c:	andeq	r3, r2, r0, lsl #1
   10960:	andeq	r0, r0, r0
   10964:	ldr	r1, [pc, #36]	; 10990 <abort@plt+0x13c>
   10968:	ldr	r0, [pc, #36]	; 10994 <abort@plt+0x140>
   1096c:	sub	r1, r1, r0
   10970:	asr	r1, r1, #2
   10974:	add	r1, r1, r1, lsr #31
   10978:	asrs	r1, r1, #1
   1097c:	bxeq	lr
   10980:	ldr	r3, [pc, #16]	; 10998 <abort@plt+0x144>
   10984:	cmp	r3, #0
   10988:	bxeq	lr
   1098c:	bx	r3
   10990:	andeq	r3, r2, r0, lsl #1
   10994:	andeq	r3, r2, r0, lsl #1
   10998:	andeq	r0, r0, r0
   1099c:	push	{r4, lr}
   109a0:	ldr	r4, [pc, #24]	; 109c0 <abort@plt+0x16c>
   109a4:	ldrb	r3, [r4]
   109a8:	cmp	r3, #0
   109ac:	popne	{r4, pc}
   109b0:	bl	10934 <abort@plt+0xe0>
   109b4:	mov	r3, #1
   109b8:	strb	r3, [r4]
   109bc:	pop	{r4, pc}
   109c0:	muleq	r2, r0, r0
   109c4:	ldr	r0, [pc, #40]	; 109f4 <abort@plt+0x1a0>
   109c8:	ldr	r3, [r0]
   109cc:	cmp	r3, #0
   109d0:	bne	109d8 <abort@plt+0x184>
   109d4:	b	10964 <abort@plt+0x110>
   109d8:	ldr	r3, [pc, #24]	; 109f8 <abort@plt+0x1a4>
   109dc:	cmp	r3, #0
   109e0:	beq	109d4 <abort@plt+0x180>
   109e4:	push	{r4, lr}
   109e8:	blx	r3
   109ec:	pop	{r4, lr}
   109f0:	b	10964 <abort@plt+0x110>
   109f4:	andeq	r2, r2, r4, lsl #30
	...
   10a00:	mov	r2, r0
   10a04:	push	{r4, lr}
   10a08:	mov	r1, #99	; 0x63
   10a0c:	ldr	r0, [pc, #12]	; 10a20 <abort@plt+0x1cc>
   10a10:	bl	1077c <fgets@plt>
   10a14:	adds	r0, r0, #0
   10a18:	movne	r0, #1
   10a1c:	pop	{r4, pc}
   10a20:	muleq	r2, r1, r0
   10a24:	push	{r4, lr}
   10a28:	mov	r4, r1
   10a2c:	bl	10a00 <abort@plt+0x1ac>
   10a30:	cmp	r0, #0
   10a34:	popeq	{r4, pc}
   10a38:	mov	r2, r4
   10a3c:	ldr	r1, [pc, #20]	; 10a58 <abort@plt+0x204>
   10a40:	ldr	r0, [pc, #20]	; 10a5c <abort@plt+0x208>
   10a44:	bl	10800 <__isoc99_sscanf@plt>
   10a48:	sub	r0, r0, #1
   10a4c:	clz	r0, r0
   10a50:	lsr	r0, r0, #5
   10a54:	pop	{r4, pc}
   10a58:	ldrdeq	r1, [r1], -sp
   10a5c:	muleq	r2, r1, r0
   10a60:	ldr	r2, [r1]
   10a64:	cmp	r2, #0
   10a68:	bne	10a78 <abort@plt+0x224>
   10a6c:	mov	r1, r0
   10a70:	ldr	r0, [pc, #56]	; 10ab0 <abort@plt+0x25c>
   10a74:	b	1083c <fputs@plt>
   10a78:	ldr	r3, [r1, #4]
   10a7c:	vldr	d6, [pc, #36]	; 10aa8 <abort@plt+0x254>
   10a80:	sub	r3, r2, r3
   10a84:	ldr	r1, [pc, #40]	; 10ab4 <abort@plt+0x260>
   10a88:	vmov	s14, r3
   10a8c:	vcvt.f64.s32	d7, s14
   10a90:	vmul.f64	d7, d7, d6
   10a94:	vmov	s13, r2
   10a98:	vcvt.f64.s32	d6, s13
   10a9c:	vdiv.f64	d5, d7, d6
   10aa0:	vmov	r2, r3, d5
   10aa4:	b	107f4 <fprintf@plt>
   10aa8:	andeq	r0, r0, r0
   10aac:	subsmi	r0, r9, r0
   10ab0:	andeq	r1, r1, r3, ror lr
   10ab4:	andeq	r1, r1, ip, ror lr
   10ab8:	push	{r4, r5, r6, lr}
   10abc:	subs	r5, r1, #0
   10ac0:	mov	r4, r0
   10ac4:	beq	10af0 <abort@plt+0x29c>
   10ac8:	ldr	r1, [pc, #48]	; 10b00 <abort@plt+0x2ac>
   10acc:	ldm	r5, {r2, r3}
   10ad0:	bl	107f4 <fprintf@plt>
   10ad4:	mov	r1, r5
   10ad8:	mov	r0, r4
   10adc:	bl	10a60 <abort@plt+0x20c>
   10ae0:	mov	r1, r4
   10ae4:	ldr	r0, [pc, #24]	; 10b04 <abort@plt+0x2b0>
   10ae8:	pop	{r4, r5, r6, lr}
   10aec:	b	1083c <fputs@plt>
   10af0:	mov	r1, r0
   10af4:	ldr	r0, [pc, #12]	; 10b08 <abort@plt+0x2b4>
   10af8:	bl	1083c <fputs@plt>
   10afc:	b	10ae0 <abort@plt+0x28c>
   10b00:	andeq	r1, r1, r2, lsl #29
   10b04:	andeq	r1, r1, r8, lsr #29
   10b08:	andeq	r1, r1, sp, lsl #29
   10b0c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b10:	mov	r4, r0
   10b14:	ldrb	r8, [sp, #32]
   10b18:	mov	r6, r1
   10b1c:	mov	r7, r2
   10b20:	ldr	r1, [pc, #204]	; 10bf4 <abort@plt+0x3a0>
   10b24:	mov	r2, r3
   10b28:	ldrb	r9, [sp, #36]	; 0x24
   10b2c:	bl	107f4 <fprintf@plt>
   10b30:	mov	r1, #0
   10b34:	mov	r0, r4
   10b38:	bl	10ab8 <abort@plt+0x264>
   10b3c:	ldr	r3, [pc, #180]	; 10bf8 <abort@plt+0x3a4>
   10b40:	cmp	r8, #0
   10b44:	ldr	r2, [pc, #176]	; 10bfc <abort@plt+0x3a8>
   10b48:	ldr	r1, [pc, #176]	; 10c00 <abort@plt+0x3ac>
   10b4c:	moveq	r2, r3
   10b50:	mov	r0, r4
   10b54:	bl	107f4 <fprintf@plt>
   10b58:	ldr	sl, [pc, #164]	; 10c04 <abort@plt+0x3b0>
   10b5c:	mov	r5, #1
   10b60:	cmp	r5, r7
   10b64:	ble	10bc0 <abort@plt+0x36c>
   10b68:	cmp	r8, #0
   10b6c:	beq	10b9c <abort@plt+0x348>
   10b70:	add	r3, r7, #1
   10b74:	add	r1, r6, r3, lsl #3
   10b78:	ldr	r3, [r6, r3, lsl #3]
   10b7c:	cmp	r3, #0
   10b80:	ble	10b9c <abort@plt+0x348>
   10b84:	mov	r0, r4
   10b88:	bl	10ab8 <abort@plt+0x264>
   10b8c:	mov	r2, r7
   10b90:	ldr	r1, [pc, #112]	; 10c08 <abort@plt+0x3b4>
   10b94:	mov	r0, r4
   10b98:	bl	107f4 <fprintf@plt>
   10b9c:	cmp	r9, #0
   10ba0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ba4:	mov	r1, r6
   10ba8:	mov	r0, r4
   10bac:	bl	10ab8 <abort@plt+0x264>
   10bb0:	mov	r1, r4
   10bb4:	ldr	r0, [pc, #80]	; 10c0c <abort@plt+0x3b8>
   10bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   10bbc:	b	1083c <fputs@plt>
   10bc0:	ldr	r3, [r6, r5, lsl #3]
   10bc4:	add	r1, r6, r5, lsl #3
   10bc8:	cmp	r3, #0
   10bcc:	ble	10be8 <abort@plt+0x394>
   10bd0:	mov	r0, r4
   10bd4:	bl	10ab8 <abort@plt+0x264>
   10bd8:	mov	r2, r5
   10bdc:	mov	r1, sl
   10be0:	mov	r0, r4
   10be4:	bl	107f4 <fprintf@plt>
   10be8:	add	r5, r5, #1
   10bec:	sxth	r5, r5
   10bf0:	b	10b60 <abort@plt+0x30c>
   10bf4:			; <UNDEFINED> instruction: 0x00011eba
   10bf8:			; <UNDEFINED> instruction: 0x00011eb3
   10bfc:	andeq	r1, r1, ip, lsr #29
   10c00:			; <UNDEFINED> instruction: 0x00011ebb
   10c04:			; <UNDEFINED> instruction: 0x00011ebf
   10c08:	andeq	r1, r1, r8, asr #29
   10c0c:	ldrdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   10c10:	push	{r4, r5, r6, r7, r8, lr}
   10c14:	mov	r4, r1
   10c18:	add	r4, r4, #4096	; 0x1000
   10c1c:	mov	r6, r0
   10c20:	mov	r0, r1
   10c24:	mov	r5, r2
   10c28:	bl	112c0 <abort@plt+0xa6c>
   10c2c:	ldr	r2, [pc, #124]	; 10cb0 <abort@plt+0x45c>
   10c30:	ldr	r1, [r4, #3952]	; 0xf70
   10c34:	ldr	r0, [r4, #3956]	; 0xf74
   10c38:	bl	11b38 <error@@Base+0x5ac>
   10c3c:	mov	r2, r5
   10c40:	ldr	r1, [pc, #108]	; 10cb4 <abort@plt+0x460>
   10c44:	mov	r0, r6
   10c48:	bl	107f4 <fprintf@plt>
   10c4c:	mov	r1, #0
   10c50:	mov	r0, r6
   10c54:	bl	10ab8 <abort@plt+0x264>
   10c58:	mov	r1, r6
   10c5c:	mov	r0, #10
   10c60:	bl	10818 <fputc@plt>
   10c64:	ldr	r7, [pc, #76]	; 10cb8 <abort@plt+0x464>
   10c68:	mov	r5, #0
   10c6c:	ldr	r3, [r4, #3956]	; 0xf74
   10c70:	cmp	r5, r3
   10c74:	blt	10c7c <abort@plt+0x428>
   10c78:	pop	{r4, r5, r6, r7, r8, pc}
   10c7c:	ldr	r3, [r4, #3952]	; 0xf70
   10c80:	mov	r0, r6
   10c84:	ldr	r1, [r3, r5, lsl #2]
   10c88:	add	r1, r1, #12
   10c8c:	bl	10ab8 <abort@plt+0x264>
   10c90:	ldr	r3, [r4, #3952]	; 0xf70
   10c94:	mov	r1, r7
   10c98:	mov	r0, r6
   10c9c:	ldr	r3, [r3, r5, lsl #2]
   10ca0:	add	r5, r5, #1
   10ca4:	ldr	r2, [r3, #8]
   10ca8:	bl	107f4 <fprintf@plt>
   10cac:	b	10c6c <abort@plt+0x418>
   10cb0:			; <UNDEFINED> instruction: 0x00010cbc
   10cb4:			; <UNDEFINED> instruction: 0x00011eba
   10cb8:			; <UNDEFINED> instruction: 0x00011ebb
   10cbc:	ldr	r1, [r1, #8]
   10cc0:	ldr	r0, [r0, #8]
   10cc4:	b	1143c <abort@plt+0xbe8>
   10cc8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   10ccc:	mov	r6, r0
   10cd0:	mov	r5, r1
   10cd4:	bl	10a00 <abort@plt+0x1ac>
   10cd8:	mov	r4, #0
   10cdc:	cmp	r0, #0
   10ce0:	bne	10cf0 <abort@plt+0x49c>
   10ce4:	mov	r0, r4
   10ce8:	add	sp, sp, #8
   10cec:	pop	{r4, r5, r6, r7, r8, pc}
   10cf0:	mov	r0, r6
   10cf4:	bl	10a00 <abort@plt+0x1ac>
   10cf8:	cmp	r0, #0
   10cfc:	ldrne	r7, [pc, #128]	; 10d84 <abort@plt+0x530>
   10d00:	beq	10ce4 <abort@plt+0x490>
   10d04:	mov	r0, r6
   10d08:	bl	10a00 <abort@plt+0x1ac>
   10d0c:	cmp	r0, #0
   10d10:	beq	10ce4 <abort@plt+0x490>
   10d14:	add	r3, sp, #4
   10d18:	mov	r2, sp
   10d1c:	mov	r1, r7
   10d20:	ldr	r0, [pc, #96]	; 10d88 <abort@plt+0x534>
   10d24:	bl	10800 <__isoc99_sscanf@plt>
   10d28:	cmp	r0, #2
   10d2c:	bne	10ce4 <abort@plt+0x490>
   10d30:	ldr	r0, [pc, #84]	; 10d8c <abort@plt+0x538>
   10d34:	bl	10830 <atoi@plt>
   10d38:	ldr	r8, [sp]
   10d3c:	cmp	r0, #0
   10d40:	bne	10d60 <abort@plt+0x50c>
   10d44:	ldr	r1, [pc, #68]	; 10d90 <abort@plt+0x53c>
   10d48:	ldr	r0, [pc, #60]	; 10d8c <abort@plt+0x538>
   10d4c:	bl	10758 <strcmp@plt>
   10d50:	cmp	r0, #0
   10d54:	moveq	r4, r8
   10d58:	moveq	r0, #0
   10d5c:	movne	r0, #11
   10d60:	ldr	r3, [r5, r0, lsl #3]
   10d64:	add	r2, r5, r0, lsl #3
   10d68:	add	r3, r3, r8
   10d6c:	str	r3, [r5, r0, lsl #3]
   10d70:	ldr	r1, [sp, #4]
   10d74:	ldr	r3, [r2, #4]
   10d78:	add	r3, r3, r1
   10d7c:	str	r3, [r2, #4]
   10d80:	b	10d04 <abort@plt+0x4b0>
   10d84:	ldrdeq	r1, [r1], -r9
   10d88:	muleq	r2, r1, r0
   10d8c:	andeq	r3, r2, lr, lsr #1
   10d90:	ldrdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   10d94:	ldr	r3, [r0]
   10d98:	add	r1, r3, r1
   10d9c:	ldr	r3, [r0, #4]
   10da0:	str	r1, [r0]
   10da4:	add	r2, r3, r2
   10da8:	str	r2, [r0, #4]
   10dac:	bx	lr
   10db0:	push	{r4, r5, r6, r7, r8, lr}
   10db4:	mov	r7, r0
   10db8:	mov	r8, r1
   10dbc:	mov	r6, r2
   10dc0:	mov	r5, r3
   10dc4:	bl	111e4 <abort@plt+0x990>
   10dc8:	subs	r4, r0, #0
   10dcc:	bne	10df8 <abort@plt+0x5a4>
   10dd0:	mov	r1, #20
   10dd4:	mov	r0, #1
   10dd8:	bl	115c8 <error@@Base+0x3c>
   10ddc:	mov	r4, r0
   10de0:	mov	r0, r8
   10de4:	bl	10788 <strdup@plt>
   10de8:	mov	r1, r4
   10dec:	str	r0, [r4, #8]
   10df0:	mov	r0, r7
   10df4:	bl	11228 <abort@plt+0x9d4>
   10df8:	ldr	r2, [r4, #12]
   10dfc:	ldr	r3, [r4, #16]
   10e00:	add	r2, r2, r6
   10e04:	add	r3, r3, r5
   10e08:	str	r2, [r4, #12]
   10e0c:	str	r3, [r4, #16]
   10e10:	pop	{r4, r5, r6, r7, r8, pc}
   10e14:	push	{r0, r1, r4, r5, r6, lr}
   10e18:	mov	r4, r0
   10e1c:	mov	r6, r1
   10e20:	bl	10a00 <abort@plt+0x1ac>
   10e24:	cmp	r0, #0
   10e28:	beq	10e40 <abort@plt+0x5ec>
   10e2c:	mov	r0, r4
   10e30:	bl	10a00 <abort@plt+0x1ac>
   10e34:	cmp	r0, #0
   10e38:	ldrne	r5, [pc, #92]	; 10e9c <abort@plt+0x648>
   10e3c:	bne	10e6c <abort@plt+0x618>
   10e40:	add	sp, sp, #8
   10e44:	pop	{r4, r5, r6, pc}
   10e48:	mov	r0, r5
   10e4c:	bl	107e8 <strlen@plt>
   10e50:	mov	r3, #0
   10e54:	ldr	r1, [pc, #68]	; 10ea0 <abort@plt+0x64c>
   10e58:	add	r0, r5, r0
   10e5c:	strb	r3, [r0, #-1]
   10e60:	ldm	sp, {r2, r3}
   10e64:	mov	r0, r6
   10e68:	bl	10db0 <abort@plt+0x55c>
   10e6c:	mov	r0, r4
   10e70:	bl	10a00 <abort@plt+0x1ac>
   10e74:	cmp	r0, #0
   10e78:	beq	10e40 <abort@plt+0x5ec>
   10e7c:	add	r3, sp, #4
   10e80:	mov	r2, sp
   10e84:	ldr	r1, [pc, #24]	; 10ea4 <abort@plt+0x650>
   10e88:	ldr	r0, [pc, #12]	; 10e9c <abort@plt+0x648>
   10e8c:	bl	10800 <__isoc99_sscanf@plt>
   10e90:	cmp	r0, #2
   10e94:	beq	10e48 <abort@plt+0x5f4>
   10e98:	b	10e40 <abort@plt+0x5ec>
   10e9c:	muleq	r2, r1, r0
   10ea0:	andeq	r3, r2, lr, lsr #1
   10ea4:	ldrdeq	r1, [r1], -r9
   10ea8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   10eac:	mov	r6, r1
   10eb0:	mov	r5, r0
   10eb4:	ldr	r1, [pc, #332]	; 11008 <abort@plt+0x7b4>
   10eb8:	mov	r0, r6
   10ebc:	bl	11654 <error@@Base+0xc8>
   10ec0:	mov	r4, r0
   10ec4:	bl	10a00 <abort@plt+0x1ac>
   10ec8:	cmp	r0, #0
   10ecc:	beq	10ff4 <abort@plt+0x7a0>
   10ed0:	mov	r2, #45	; 0x2d
   10ed4:	ldr	r1, [pc, #304]	; 1100c <abort@plt+0x7b8>
   10ed8:	ldr	r0, [pc, #304]	; 11010 <abort@plt+0x7bc>
   10edc:	bl	10848 <strncmp@plt>
   10ee0:	cmp	r0, #0
   10ee4:	bne	10ff4 <abort@plt+0x7a0>
   10ee8:	mov	r0, r4
   10eec:	bl	10a00 <abort@plt+0x1ac>
   10ef0:	cmp	r0, #0
   10ef4:	beq	10ff4 <abort@plt+0x7a0>
   10ef8:	ldr	r1, [pc, #276]	; 11014 <abort@plt+0x7c0>
   10efc:	ldr	r0, [pc, #268]	; 11010 <abort@plt+0x7bc>
   10f00:	bl	10758 <strcmp@plt>
   10f04:	cmp	r0, #0
   10f08:	bne	10ff4 <abort@plt+0x7a0>
   10f0c:	mov	r1, sp
   10f10:	mov	r0, r4
   10f14:	bl	10a24 <abort@plt+0x1d0>
   10f18:	cmp	r0, #0
   10f1c:	beq	10ff4 <abort@plt+0x7a0>
   10f20:	add	r1, sp, #4
   10f24:	mov	r0, r4
   10f28:	bl	10a24 <abort@plt+0x1d0>
   10f2c:	cmp	r0, #0
   10f30:	beq	10ff4 <abort@plt+0x7a0>
   10f34:	mov	r0, r4
   10f38:	bl	10a00 <abort@plt+0x1ac>
   10f3c:	cmp	r0, #0
   10f40:	beq	10ff4 <abort@plt+0x7a0>
   10f44:	mov	r0, r4
   10f48:	bl	10a00 <abort@plt+0x1ac>
   10f4c:	cmp	r0, #0
   10f50:	beq	10ff4 <abort@plt+0x7a0>
   10f54:	ldr	r3, [r5]
   10f58:	ldr	r2, [sp]
   10f5c:	add	r1, r5, #8
   10f60:	add	r3, r3, r2
   10f64:	str	r3, [r5]
   10f68:	ldr	r2, [sp, #4]
   10f6c:	ldr	r3, [r5, #4]
   10f70:	mov	r0, r4
   10f74:	add	r3, r3, r2
   10f78:	str	r3, [r5, #4]
   10f7c:	bl	10cc8 <abort@plt+0x474>
   10f80:	add	r1, r5, #416	; 0x1a0
   10f84:	mov	r7, r0
   10f88:	mov	r0, r4
   10f8c:	bl	10cc8 <abort@plt+0x474>
   10f90:	add	r1, r5, #824	; 0x338
   10f94:	mov	r6, r0
   10f98:	mov	r0, r4
   10f9c:	bl	10cc8 <abort@plt+0x474>
   10fa0:	ldr	r3, [sp]
   10fa4:	cmp	r3, #0
   10fa8:	ble	10fe4 <abort@plt+0x790>
   10fac:	add	r1, r5, #920	; 0x398
   10fb0:	mov	r0, r4
   10fb4:	bl	10cc8 <abort@plt+0x474>
   10fb8:	cmp	r7, #0
   10fbc:	ble	10fcc <abort@plt+0x778>
   10fc0:	add	r1, r5, #992	; 0x3e0
   10fc4:	mov	r0, r4
   10fc8:	bl	10e14 <abort@plt+0x5c0>
   10fcc:	cmp	r6, #0
   10fd0:	ble	10fe4 <abort@plt+0x790>
   10fd4:	add	r1, r5, #9024	; 0x2340
   10fd8:	add	r1, r1, #24
   10fdc:	mov	r0, r4
   10fe0:	bl	10e14 <abort@plt+0x5c0>
   10fe4:	mov	r0, r4
   10fe8:	bl	11484 <abort@plt+0xc30>
   10fec:	add	sp, sp, #12
   10ff0:	pop	{r4, r5, r6, r7, pc}
   10ff4:	cmp	r6, #0
   10ff8:	ldr	r1, [pc, #24]	; 11018 <abort@plt+0x7c4>
   10ffc:	ldr	r0, [pc, #24]	; 1101c <abort@plt+0x7c8>
   11000:	movne	r1, r6
   11004:	bl	11614 <error@@Base+0x88>
   11008:	andeq	r1, r1, r7, ror #29
   1100c:	andeq	r1, r1, r9, ror #29
   11010:	muleq	r2, r1, r0
   11014:	andeq	r1, r1, r9, lsl pc
   11018:	andeq	r1, r1, r1, ror #29
   1101c:	andeq	r1, r1, r9, asr #30
   11020:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   11024:	mov	r4, r0
   11028:	mov	r0, r1
   1102c:	ldr	r1, [pc, #276]	; 11148 <abort@plt+0x8f4>
   11030:	bl	11654 <error@@Base+0xc8>
   11034:	ldr	r3, [pc, #272]	; 1114c <abort@plt+0x8f8>
   11038:	ldr	r2, [pc, #272]	; 11150 <abort@plt+0x8fc>
   1103c:	ldr	r1, [pc, #272]	; 11154 <abort@plt+0x900>
   11040:	mov	r7, #1
   11044:	mov	r6, #0
   11048:	mov	r5, r0
   1104c:	bl	107f4 <fprintf@plt>
   11050:	ldr	r2, [r4]
   11054:	ldr	r1, [pc, #252]	; 11158 <abort@plt+0x904>
   11058:	mov	r0, r5
   1105c:	bl	107f4 <fprintf@plt>
   11060:	ldr	r2, [r4, #4]
   11064:	ldr	r1, [pc, #240]	; 1115c <abort@plt+0x908>
   11068:	mov	r0, r5
   1106c:	bl	107f4 <fprintf@plt>
   11070:	mov	r1, r4
   11074:	mov	r0, r5
   11078:	bl	10a60 <abort@plt+0x20c>
   1107c:	mov	r1, r5
   11080:	ldr	r0, [pc, #216]	; 11160 <abort@plt+0x90c>
   11084:	bl	1083c <fputs@plt>
   11088:	ldr	r3, [pc, #212]	; 11164 <abort@plt+0x910>
   1108c:	mov	r2, #50	; 0x32
   11090:	add	r1, r4, #8
   11094:	mov	r0, r5
   11098:	stm	sp, {r6, r7}
   1109c:	bl	10b0c <abort@plt+0x2b8>
   110a0:	ldr	r3, [pc, #192]	; 11168 <abort@plt+0x914>
   110a4:	mov	r2, #50	; 0x32
   110a8:	add	r1, r4, #416	; 0x1a0
   110ac:	mov	r0, r5
   110b0:	stm	sp, {r6, r7}
   110b4:	bl	10b0c <abort@plt+0x2b8>
   110b8:	ldr	r3, [pc, #172]	; 1116c <abort@plt+0x918>
   110bc:	str	r7, [sp, #4]
   110c0:	str	r7, [sp]
   110c4:	mov	r2, #10
   110c8:	add	r1, r4, #824	; 0x338
   110cc:	mov	r0, r5
   110d0:	bl	10b0c <abort@plt+0x2b8>
   110d4:	ldr	r3, [r4]
   110d8:	cmp	r3, r6
   110dc:	ble	11138 <abort@plt+0x8e4>
   110e0:	ldr	r3, [pc, #136]	; 11170 <abort@plt+0x91c>
   110e4:	str	r6, [sp, #4]
   110e8:	str	r6, [sp]
   110ec:	mov	r2, #8
   110f0:	add	r1, r4, #920	; 0x398
   110f4:	mov	r0, r5
   110f8:	bl	10b0c <abort@plt+0x2b8>
   110fc:	ldr	r3, [r4, #8]
   11100:	cmp	r3, r6
   11104:	ble	11118 <abort@plt+0x8c4>
   11108:	ldr	r2, [pc, #84]	; 11164 <abort@plt+0x910>
   1110c:	add	r1, r4, #992	; 0x3e0
   11110:	mov	r0, r5
   11114:	bl	10c10 <abort@plt+0x3bc>
   11118:	ldr	r3, [r4, #416]	; 0x1a0
   1111c:	cmp	r3, #0
   11120:	ble	11138 <abort@plt+0x8e4>
   11124:	add	r1, r4, #9024	; 0x2340
   11128:	ldr	r2, [pc, #56]	; 11168 <abort@plt+0x914>
   1112c:	add	r1, r1, #24
   11130:	mov	r0, r5
   11134:	bl	10c10 <abort@plt+0x3bc>
   11138:	mov	r0, r5
   1113c:	add	sp, sp, #12
   11140:	pop	{r4, r5, r6, r7, lr}
   11144:	b	11484 <abort@plt+0xc30>
   11148:	andeq	r1, r1, fp, asr pc
   1114c:	andeq	r1, r1, r9, lsl pc
   11150:	andeq	r1, r1, r9, ror #29
   11154:	andeq	r1, r1, sp, asr pc
   11158:	andeq	r1, r1, r2, ror #30
   1115c:	andeq	r1, r1, r0, ror pc
   11160:	andeq	r1, r1, r6, lsl #31
   11164:	muleq	r1, r3, pc	; <UNPREDICTABLE>
   11168:	andeq	r1, r1, r6, lsr #31
   1116c:	muleq	r1, sp, pc	; <UNPREDICTABLE>
   11170:			; <UNDEFINED> instruction: 0x00011fb4
   11174:	sub	r2, r0, #1
   11178:	mov	r0, #0
   1117c:	push	{r4, lr}
   11180:	ldrb	r3, [r2, #1]!
   11184:	cmp	r3, #0
   11188:	bne	1119c <abort@plt+0x948>
   1118c:	ldr	r1, [pc, #16]	; 111a4 <abort@plt+0x950>
   11190:	bl	11d78 <error@@Base+0x7ec>
   11194:	sxth	r0, r1
   11198:	pop	{r4, pc}
   1119c:	add	r0, r0, r3
   111a0:	b	11180 <abort@plt+0x92c>
   111a4:	strdeq	r0, [r0], -r7
   111a8:	push	{r4, r5, r6, lr}
   111ac:	add	r6, r0, #8000	; 0x1f40
   111b0:	mov	r4, r0
   111b4:	mov	r5, r0
   111b8:	add	r6, r6, #48	; 0x30
   111bc:	mov	r0, r5
   111c0:	add	r5, r5, #16
   111c4:	bl	118fc <error@@Base+0x370>
   111c8:	cmp	r5, r6
   111cc:	bne	111bc <abort@plt+0x968>
   111d0:	add	r4, r4, #4096	; 0x1000
   111d4:	mov	r3, #0
   111d8:	str	r3, [r4, #3952]	; 0xf70
   111dc:	str	r3, [r4, #3956]	; 0xf74
   111e0:	pop	{r4, r5, r6, pc}
   111e4:	push	{r4, r5, r6, lr}
   111e8:	mov	r4, r0
   111ec:	mov	r0, r1
   111f0:	mov	r5, r1
   111f4:	bl	11174 <abort@plt+0x920>
   111f8:	ldr	r4, [r4, r0, lsl #4]
   111fc:	cmp	r4, #0
   11200:	beq	11218 <abort@plt+0x9c4>
   11204:	ldr	r1, [r4, #8]
   11208:	mov	r0, r5
   1120c:	bl	10758 <strcmp@plt>
   11210:	cmp	r0, #0
   11214:	bne	11220 <abort@plt+0x9cc>
   11218:	mov	r0, r4
   1121c:	pop	{r4, r5, r6, pc}
   11220:	ldr	r4, [r4, #4]
   11224:	b	111fc <abort@plt+0x9a8>
   11228:	push	{r4, r5, r6, lr}
   1122c:	mov	r4, r0
   11230:	ldr	r0, [r1, #8]
   11234:	mov	r5, r1
   11238:	bl	11174 <abort@plt+0x920>
   1123c:	mov	r1, r5
   11240:	add	r0, r4, r0, lsl #4
   11244:	add	r4, r4, #4096	; 0x1000
   11248:	bl	11914 <error@@Base+0x388>
   1124c:	ldr	r0, [r4, #3952]	; 0xf70
   11250:	cmp	r0, #0
   11254:	beq	11264 <abort@plt+0xa10>
   11258:	bl	10770 <free@plt>
   1125c:	mov	r3, #0
   11260:	str	r3, [r4, #3952]	; 0xf70
   11264:	ldr	r3, [r4, #3956]	; 0xf74
   11268:	add	r3, r3, #1
   1126c:	str	r3, [r4, #3956]	; 0xf74
   11270:	pop	{r4, r5, r6, pc}
   11274:	push	{r4, r5, r6, lr}
   11278:	mov	r4, r0
   1127c:	ldr	r0, [r1, #8]
   11280:	mov	r5, r1
   11284:	bl	11174 <abort@plt+0x920>
   11288:	mov	r1, r5
   1128c:	add	r0, r4, r0, lsl #4
   11290:	add	r4, r4, #4096	; 0x1000
   11294:	bl	1194c <error@@Base+0x3c0>
   11298:	ldr	r0, [r4, #3952]	; 0xf70
   1129c:	cmp	r0, #0
   112a0:	beq	112b0 <abort@plt+0xa5c>
   112a4:	bl	10770 <free@plt>
   112a8:	mov	r3, #0
   112ac:	str	r3, [r4, #3952]	; 0xf70
   112b0:	ldr	r3, [r4, #3956]	; 0xf74
   112b4:	sub	r3, r3, #1
   112b8:	str	r3, [r4, #3956]	; 0xf74
   112bc:	pop	{r4, r5, r6, pc}
   112c0:	push	{r4, r5, r6, lr}
   112c4:	add	r6, r0, #4096	; 0x1000
   112c8:	ldr	r4, [r6, #3952]	; 0xf70
   112cc:	cmp	r4, #0
   112d0:	popne	{r4, r5, r6, pc}
   112d4:	ldr	r3, [r6, #3956]	; 0xf74
   112d8:	cmp	r3, #0
   112dc:	popeq	{r4, r5, r6, pc}
   112e0:	mov	r5, r0
   112e4:	mov	r1, #4
   112e8:	mov	r0, r3
   112ec:	bl	115c8 <error@@Base+0x3c>
   112f0:	ldr	lr, [pc, #60]	; 11334 <abort@plt+0xae0>
   112f4:	mov	r3, r4
   112f8:	mov	r2, r4
   112fc:	str	r0, [r6, #3952]	; 0xf70
   11300:	ldr	r1, [r5, r2, lsl #4]
   11304:	mov	ip, r3
   11308:	cmp	r1, #0
   1130c:	mov	r3, ip
   11310:	bne	11324 <abort@plt+0xad0>
   11314:	add	r2, r2, #1
   11318:	cmp	r2, lr
   1131c:	bne	11300 <abort@plt+0xaac>
   11320:	pop	{r4, r5, r6, pc}
   11324:	str	r1, [r0, ip, lsl #2]
   11328:	add	ip, ip, #1
   1132c:	ldr	r1, [r1, #4]
   11330:	b	11308 <abort@plt+0xab4>
   11334:	strdeq	r0, [r0], -r7
   11338:	push	{r4, r5, r6, r7, r8, lr}
   1133c:	add	r6, r0, #8000	; 0x1f40
   11340:	mov	r4, r0
   11344:	mov	r7, r1
   11348:	mov	r5, r0
   1134c:	add	r6, r6, #48	; 0x30
   11350:	mov	r0, r5
   11354:	mov	r1, r7
   11358:	add	r5, r5, #16
   1135c:	bl	119f8 <error@@Base+0x46c>
   11360:	cmp	r5, r6
   11364:	bne	11350 <abort@plt+0xafc>
   11368:	add	r4, r4, #4096	; 0x1000
   1136c:	ldr	r0, [r4, #3952]	; 0xf70
   11370:	cmp	r0, #0
   11374:	beq	11384 <abort@plt+0xb30>
   11378:	bl	10770 <free@plt>
   1137c:	mov	r3, #0
   11380:	str	r3, [r4, #3952]	; 0xf70
   11384:	mov	r3, #0
   11388:	str	r3, [r4, #3956]	; 0xf74
   1138c:	pop	{r4, r5, r6, r7, r8, pc}
   11390:	ldr	r3, [pc, #56]	; 113d0 <abort@plt+0xb7c>
   11394:	push	{r4, r5, lr}
   11398:	sub	sp, sp, #116	; 0x74
   1139c:	ldr	r4, [r3]
   113a0:	mov	r5, r0
   113a4:	bl	107d0 <getpid@plt>
   113a8:	mov	r2, r4
   113ac:	ldr	r1, [pc, #32]	; 113d4 <abort@plt+0xb80>
   113b0:	str	r5, [sp]
   113b4:	mov	r3, r0
   113b8:	add	r0, sp, #12
   113bc:	bl	10824 <sprintf@plt>
   113c0:	add	r0, sp, #12
   113c4:	bl	10788 <strdup@plt>
   113c8:	add	sp, sp, #116	; 0x74
   113cc:	pop	{r4, r5, pc}
   113d0:	ldrdeq	r7, [r2], -r8
   113d4:			; <UNDEFINED> instruction: 0x00011fbc
   113d8:	ldr	r3, [pc, #84]	; 11434 <abort@plt+0xbe0>
   113dc:	push	{r7, lr}
   113e0:	mov	r5, r0
   113e4:	ldr	r3, [r3]
   113e8:	cmp	r3, #0
   113ec:	beq	113f4 <abort@plt+0xba0>
   113f0:	blx	r3
   113f4:	ldr	r6, [pc, #60]	; 11438 <abort@plt+0xbe4>
   113f8:	mov	r4, #1
   113fc:	ldrsh	r3, [r6]
   11400:	cmp	r3, r4
   11404:	bge	11410 <abort@plt+0xbbc>
   11408:	mov	r0, r5
   1140c:	bl	107dc <exit@plt>
   11410:	mov	r0, r4
   11414:	bl	11390 <abort@plt+0xb3c>
   11418:	add	r4, r4, #1
   1141c:	sxth	r4, r4
   11420:	mov	r7, r0
   11424:	bl	10794 <unlink@plt>
   11428:	mov	r0, r7
   1142c:	bl	10770 <free@plt>
   11430:	b	113fc <abort@plt+0xba8>
   11434:	ldrdeq	r7, [r2], -ip
   11438:	strdeq	r3, [r2], -r6
   1143c:	mov	r3, #0
   11440:	ldrb	r2, [r0, r3]
   11444:	cmp	r2, #0
   11448:	beq	11474 <abort@plt+0xc20>
   1144c:	ldrb	ip, [r1, r3]
   11450:	cmp	ip, r2
   11454:	beq	1146c <abort@plt+0xc18>
   11458:	ldrb	r3, [r1, r3]
   1145c:	cmp	r3, r2
   11460:	mvnhi	r0, #0
   11464:	movls	r0, #1
   11468:	bx	lr
   1146c:	add	r3, r3, #1
   11470:	b	11440 <abort@plt+0xbec>
   11474:	ldrb	r0, [r1, r3]
   11478:	cmp	r0, #0
   1147c:	bne	11458 <abort@plt+0xc04>
   11480:	bx	lr
   11484:	ldr	r2, [pc, #28]	; 114a8 <abort@plt+0xc54>
   11488:	ldr	r2, [r2]
   1148c:	cmp	r2, r0
   11490:	bxeq	lr
   11494:	ldr	r2, [pc, #16]	; 114ac <abort@plt+0xc58>
   11498:	ldr	r2, [r2]
   1149c:	cmp	r0, r2
   114a0:	bxeq	lr
   114a4:	b	1080c <fclose@plt>
   114a8:	andeq	r3, r2, r8, lsl #1
   114ac:	andeq	r3, r2, ip, lsl #1
   114b0:	push	{lr}		; (str lr, [sp, #-4]!)
   114b4:	sub	sp, sp, #92	; 0x5c
   114b8:	mov	r1, sp
   114bc:	bl	11e0c <error@@Base+0x880>
   114c0:	clz	r0, r0
   114c4:	lsr	r0, r0, #5
   114c8:	add	sp, sp, #92	; 0x5c
   114cc:	pop	{pc}		; (ldr pc, [sp], #4)
   114d0:	ldr	r3, [pc, #36]	; 114fc <abort@plt+0xca8>
   114d4:	push	{r4, lr}
   114d8:	ldrh	r0, [r3]
   114dc:	add	r0, r0, #1
   114e0:	sxth	r0, r0
   114e4:	strh	r0, [r3]
   114e8:	bl	11390 <abort@plt+0xb3c>
   114ec:	mov	r4, r0
   114f0:	bl	10794 <unlink@plt>
   114f4:	mov	r0, r4
   114f8:	pop	{r4, pc}
   114fc:	strdeq	r3, [r2], -r6
   11500:	push	{r4, lr}
   11504:	mov	r4, r0
   11508:	bl	107e8 <strlen@plt>
   1150c:	sub	r0, r0, #1
   11510:	sxth	r0, r0
   11514:	cmp	r0, #0
   11518:	blt	11528 <abort@plt+0xcd4>
   1151c:	ldrb	r3, [r4, r0]
   11520:	cmp	r3, #47	; 0x2f
   11524:	bne	1150c <abort@plt+0xcb8>
   11528:	add	r0, r0, #1
   1152c:	add	r0, r4, r0
   11530:	pop	{r4, pc}
   11534:	push	{r4, lr}
   11538:	mov	r0, #0
   1153c:	bl	113d8 <abort@plt+0xb84>
   11540:	ldr	r2, [pc, #52]	; 1157c <abort@plt+0xd28>
   11544:	push	{r4, lr}
   11548:	ldr	r2, [r2]
   1154c:	cmp	r2, #0
   11550:	beq	1155c <abort@plt+0xd08>
   11554:	blx	r2
   11558:	bl	11534 <abort@plt+0xce0>
   1155c:	mov	r3, r0
   11560:	ldr	r2, [pc, #24]	; 11580 <abort@plt+0xd2c>
   11564:	ldr	r0, [pc, #24]	; 11584 <abort@plt+0xd30>
   11568:	ldr	r1, [pc, #24]	; 11588 <abort@plt+0xd34>
   1156c:	ldr	r2, [r2]
   11570:	ldr	r0, [r0]
   11574:	bl	107f4 <fprintf@plt>
   11578:	b	11558 <abort@plt+0xd04>
   1157c:	ldrdeq	r7, [r2], -r4
   11580:	ldrdeq	r7, [r2], -r8
   11584:	andeq	r3, r2, r0, lsl #1
   11588:	andeq	r1, r1, sl, asr #31

0001158c <error@@Base>:
   1158c:	mov	r3, r0
   11590:	ldr	r2, [pc, #32]	; 115b8 <error@@Base+0x2c>
   11594:	ldr	r0, [pc, #32]	; 115bc <error@@Base+0x30>
   11598:	push	{r4, lr}
   1159c:	ldr	r2, [r2]
   115a0:	ldr	r1, [pc, #24]	; 115c0 <error@@Base+0x34>
   115a4:	ldr	r0, [r0]
   115a8:	bl	107f4 <fprintf@plt>
   115ac:	ldr	r3, [pc, #16]	; 115c4 <error@@Base+0x38>
   115b0:	ldr	r0, [r3]
   115b4:	bl	113d8 <abort@plt+0xb84>
   115b8:	ldrdeq	r7, [r2], -r8
   115bc:	andeq	r3, r2, r0, lsl #1
   115c0:	ldrdeq	r1, [r1], -r9
   115c4:	andeq	r3, r2, r8, ror r0
   115c8:	push	{r4, lr}
   115cc:	bl	10740 <calloc@plt>
   115d0:	cmp	r0, #0
   115d4:	popne	{r4, pc}
   115d8:	ldr	r0, [pc]	; 115e0 <error@@Base+0x54>
   115dc:	bl	1158c <error@@Base>
   115e0:	andeq	r1, r1, r1, ror #31
   115e4:	ldr	r3, [pc, #32]	; 1160c <error@@Base+0x80>
   115e8:	ldrb	r2, [r3, #2]
   115ec:	cmp	r2, #0
   115f0:	bne	11608 <error@@Base+0x7c>
   115f4:	push	{r4, lr}
   115f8:	mov	r2, #1
   115fc:	ldr	r0, [pc, #12]	; 11610 <error@@Base+0x84>
   11600:	strb	r2, [r3, #2]
   11604:	bl	1158c <error@@Base>
   11608:	bx	lr
   1160c:	strdeq	r3, [r2], -r6
   11610:	strdeq	r1, [r1], -fp
   11614:	push	{r0, r1, r2, lr}
   11618:	mov	r3, r0
   1161c:	ldr	r2, [pc, #32]	; 11644 <error@@Base+0xb8>
   11620:	ldr	r0, [pc, #32]	; 11648 <error@@Base+0xbc>
   11624:	str	r1, [sp]
   11628:	ldr	r1, [pc, #28]	; 1164c <error@@Base+0xc0>
   1162c:	ldr	r2, [r2]
   11630:	ldr	r0, [r0]
   11634:	bl	107f4 <fprintf@plt>
   11638:	ldr	r3, [pc, #16]	; 11650 <error@@Base+0xc4>
   1163c:	ldr	r0, [r3]
   11640:	bl	113d8 <abort@plt+0xb84>
   11644:	ldrdeq	r7, [r2], -r8
   11648:	andeq	r3, r2, r0, lsl #1
   1164c:	andeq	r2, r1, sl
   11650:	andeq	r3, r2, r8, ror r0
   11654:	push	{r4, r5, r6, lr}
   11658:	subs	r4, r0, #0
   1165c:	mov	r5, r1
   11660:	bne	1167c <error@@Base+0xf0>
   11664:	ldrb	r3, [r1]
   11668:	cmp	r3, #114	; 0x72
   1166c:	ldreq	r3, [pc, #44]	; 116a0 <error@@Base+0x114>
   11670:	ldrne	r3, [pc, #44]	; 116a4 <error@@Base+0x118>
   11674:	ldr	r0, [r3]
   11678:	pop	{r4, r5, r6, pc}
   1167c:	bl	10764 <fopen@plt>
   11680:	cmp	r0, #0
   11684:	popne	{r4, r5, r6, pc}
   11688:	ldrb	r3, [r5]
   1168c:	mov	r1, r4
   11690:	cmp	r3, #119	; 0x77
   11694:	ldreq	r0, [pc, #12]	; 116a8 <error@@Base+0x11c>
   11698:	ldrne	r0, [pc, #12]	; 116ac <error@@Base+0x120>
   1169c:	bl	11614 <error@@Base+0x88>
   116a0:	andeq	r3, r2, r8, lsl #1
   116a4:	andeq	r3, r2, ip, lsl #1
   116a8:	andeq	r2, r1, r7, lsl r0
   116ac:	andeq	r2, r1, sp, lsr #32
   116b0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116b4:	mov	r8, r0
   116b8:	ldr	r0, [r1]
   116bc:	str	r2, [sp]
   116c0:	mov	r7, r1
   116c4:	mov	r9, r3
   116c8:	bl	11500 <abort@plt+0xcac>
   116cc:	ldr	r3, [pc, #396]	; 11860 <error@@Base+0x2d4>
   116d0:	ldr	r1, [pc, #396]	; 11864 <error@@Base+0x2d8>
   116d4:	str	r0, [r3]
   116d8:	mov	r0, #2
   116dc:	bl	107b8 <__sysv_signal@plt>
   116e0:	ldr	r1, [pc, #380]	; 11864 <error@@Base+0x2d8>
   116e4:	mov	r0, #15
   116e8:	bl	107b8 <__sysv_signal@plt>
   116ec:	ldr	r3, [r8]
   116f0:	cmp	r3, #1
   116f4:	movne	r6, #0
   116f8:	movne	r5, #1
   116fc:	bne	11820 <error@@Base+0x294>
   11700:	ldr	r3, [pc, #352]	; 11868 <error@@Base+0x2dc>
   11704:	ldrb	r6, [r3, #4]
   11708:	cmp	r6, #0
   1170c:	beq	1182c <error@@Base+0x2a0>
   11710:	ldr	r0, [sp]
   11714:	bl	11540 <abort@plt+0xcec>
   11718:	ldr	r4, [r7, r5, lsl #2]
   1171c:	lsl	sl, r5, #2
   11720:	ldrb	r3, [r4]
   11724:	cmp	r3, #45	; 0x2d
   11728:	bne	11850 <error@@Base+0x2c4>
   1172c:	ldrb	r3, [r4, #1]
   11730:	cmp	r3, #0
   11734:	str	r3, [sp, #4]
   11738:	beq	11850 <error@@Base+0x2c4>
   1173c:	mov	r0, r4
   11740:	bl	107e8 <strlen@plt>
   11744:	mov	r1, r4
   11748:	mov	r2, r0
   1174c:	ldr	r0, [pc, #280]	; 1186c <error@@Base+0x2e0>
   11750:	bl	10848 <strncmp@plt>
   11754:	cmp	r0, #0
   11758:	beq	11710 <error@@Base+0x184>
   1175c:	add	r0, r5, #1
   11760:	cmp	r0, fp
   11764:	addlt	sl, r7, sl
   11768:	movge	r1, #0
   1176c:	ldrlt	r1, [sl, #4]
   11770:	cmp	r9, #0
   11774:	ldr	r3, [sp, #4]
   11778:	beq	11838 <error@@Base+0x2ac>
   1177c:	mov	r2, #0
   11780:	add	lr, r2, r2, lsl #1
   11784:	add	ip, r9, lr, lsl #2
   11788:	ldrb	lr, [r9, lr, lsl #2]
   1178c:	cmp	lr, #0
   11790:	beq	11838 <error@@Base+0x2ac>
   11794:	cmp	r3, lr
   11798:	bne	117d8 <error@@Base+0x24c>
   1179c:	ldr	r3, [ip, #4]
   117a0:	cmp	r3, #0
   117a4:	bne	117e4 <error@@Base+0x258>
   117a8:	ldr	r3, [ip, #8]
   117ac:	cmp	r3, #0
   117b0:	beq	11838 <error@@Base+0x2ac>
   117b4:	ldrb	r2, [r4, #2]
   117b8:	cmp	r2, #0
   117bc:	bne	11838 <error@@Base+0x2ac>
   117c0:	ldrb	r2, [r3]
   117c4:	cmp	r2, #0
   117c8:	bne	11844 <error@@Base+0x2b8>
   117cc:	mov	r2, #1
   117d0:	strb	r2, [r3]
   117d4:	b	11818 <error@@Base+0x28c>
   117d8:	add	r2, r2, #1
   117dc:	sxth	r2, r2
   117e0:	b	11780 <error@@Base+0x1f4>
   117e4:	ldrb	r2, [r4, #2]
   117e8:	cmp	r2, #0
   117ec:	cmpeq	r1, #0
   117f0:	beq	117a8 <error@@Base+0x21c>
   117f4:	ldr	ip, [r3]
   117f8:	cmp	ip, #0
   117fc:	bne	11844 <error@@Base+0x2b8>
   11800:	cmp	r2, #0
   11804:	addne	r1, r4, #2
   11808:	str	r1, [r3]
   1180c:	ldrb	r3, [r4, #2]
   11810:	cmp	r3, #0
   11814:	sxtheq	r5, r0
   11818:	add	r5, r5, #1
   1181c:	sxth	r5, r5
   11820:	ldr	fp, [r8]
   11824:	cmp	r5, fp
   11828:	blt	11718 <error@@Base+0x18c>
   1182c:	str	r6, [r8]
   11830:	add	sp, sp, #12
   11834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11838:	ldr	r0, [pc, #48]	; 11870 <error@@Base+0x2e4>
   1183c:	mov	r1, r4
   11840:	bl	11614 <error@@Base+0x88>
   11844:	mov	r1, r4
   11848:	ldr	r0, [pc, #36]	; 11874 <error@@Base+0x2e8>
   1184c:	b	11840 <error@@Base+0x2b4>
   11850:	add	r3, r6, #1
   11854:	str	r4, [r7, r6, lsl #2]
   11858:	sxth	r6, r3
   1185c:	b	11818 <error@@Base+0x28c>
   11860:	ldrdeq	r7, [r2], -r8
   11864:	andeq	r1, r1, r4, ror #11
   11868:	andeq	r3, r2, r8, ror r0
   1186c:	andeq	r2, r1, r1, asr #32
   11870:	andeq	r2, r1, r7, asr #32
   11874:	andeq	r2, r1, r6, asr r0
   11878:	push	{r0, r1, r2, lr}
   1187c:	mov	r3, r0
   11880:	ldr	r2, [pc, #28]	; 118a4 <error@@Base+0x318>
   11884:	ldr	r0, [pc, #28]	; 118a8 <error@@Base+0x31c>
   11888:	str	r1, [sp]
   1188c:	ldr	r1, [pc, #24]	; 118ac <error@@Base+0x320>
   11890:	ldr	r2, [r2]
   11894:	ldr	r0, [r0]
   11898:	bl	107f4 <fprintf@plt>
   1189c:	add	sp, sp, #12
   118a0:	pop	{pc}		; (ldr pc, [sp], #4)
   118a4:	ldrdeq	r7, [r2], -r8
   118a8:	andeq	r3, r2, r0, lsl #1
   118ac:	andeq	r2, r1, sl
   118b0:	cmp	r1, #0
   118b4:	push	{r4, lr}
   118b8:	mov	r4, r0
   118bc:	stm	r2, {r1, r3}
   118c0:	strne	r2, [r1, #4]
   118c4:	streq	r2, [r0]
   118c8:	cmp	r3, #0
   118cc:	streq	r2, [r0, #4]
   118d0:	ldr	r0, [r0, #8]
   118d4:	strne	r2, [r3]
   118d8:	cmp	r0, #0
   118dc:	beq	118ec <error@@Base+0x360>
   118e0:	bl	10770 <free@plt>
   118e4:	mov	r3, #0
   118e8:	str	r3, [r4, #8]
   118ec:	ldr	r3, [r4, #12]
   118f0:	add	r3, r3, #1
   118f4:	str	r3, [r4, #12]
   118f8:	pop	{r4, pc}
   118fc:	mov	r3, #0
   11900:	str	r3, [r0, #4]
   11904:	str	r3, [r0]
   11908:	str	r3, [r0, #8]
   1190c:	str	r3, [r0, #12]
   11910:	bx	lr
   11914:	mov	r2, r1
   11918:	ldr	r3, [r0]
   1191c:	mov	r1, #0
   11920:	b	118b0 <error@@Base+0x324>
   11924:	mov	r2, r1
   11928:	mov	r3, #0
   1192c:	ldr	r1, [r0, #4]
   11930:	b	118b0 <error@@Base+0x324>
   11934:	mov	r3, r2
   11938:	mov	r2, r1
   1193c:	ldr	r1, [r3]
   11940:	b	118b0 <error@@Base+0x324>
   11944:	ldr	r3, [r1, #4]
   11948:	b	118b0 <error@@Base+0x324>
   1194c:	ldr	r3, [r1]
   11950:	ldr	r2, [r1, #4]
   11954:	cmp	r3, #0
   11958:	push	{r4, r5, r6, lr}
   1195c:	mov	r4, r0
   11960:	strne	r2, [r3, #4]
   11964:	streq	r2, [r0]
   11968:	ldr	r2, [r1, #4]
   1196c:	mov	r5, #0
   11970:	cmp	r2, #0
   11974:	streq	r3, [r0, #4]
   11978:	ldr	r0, [r0, #8]
   1197c:	strne	r3, [r2]
   11980:	cmp	r0, r5
   11984:	str	r5, [r1, #4]
   11988:	str	r5, [r1]
   1198c:	beq	11998 <error@@Base+0x40c>
   11990:	bl	10770 <free@plt>
   11994:	str	r5, [r4, #8]
   11998:	ldr	r3, [r4, #12]
   1199c:	sub	r3, r3, #1
   119a0:	str	r3, [r4, #12]
   119a4:	pop	{r4, r5, r6, pc}
   119a8:	ldr	r3, [r0, #8]
   119ac:	cmp	r3, #0
   119b0:	bxne	lr
   119b4:	ldr	r3, [r0, #12]
   119b8:	cmp	r3, #0
   119bc:	bxeq	lr
   119c0:	push	{r4, lr}
   119c4:	mov	r1, #4
   119c8:	mov	r4, r0
   119cc:	mov	r0, r3
   119d0:	bl	115c8 <error@@Base+0x3c>
   119d4:	ldr	r3, [r4]
   119d8:	str	r0, [r4, #8]
   119dc:	sub	r0, r0, #4
   119e0:	cmp	r3, #0
   119e4:	bne	119ec <error@@Base+0x460>
   119e8:	pop	{r4, pc}
   119ec:	str	r3, [r0, #4]!
   119f0:	ldr	r3, [r3, #4]
   119f4:	b	119e0 <error@@Base+0x454>
   119f8:	push	{r4, r5, r6, lr}
   119fc:	mov	r5, r0
   11a00:	mov	r6, r1
   11a04:	ldr	r4, [r5]
   11a08:	cmp	r4, #0
   11a0c:	bne	11a14 <error@@Base+0x488>
   11a10:	pop	{r4, r5, r6, pc}
   11a14:	mov	r0, r5
   11a18:	mov	r1, r4
   11a1c:	bl	1194c <error@@Base+0x3c0>
   11a20:	mov	r0, r4
   11a24:	blx	r6
   11a28:	b	11a04 <error@@Base+0x478>
   11a2c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a30:	mov	r7, r0
   11a34:	ldr	sl, [pc, #248]	; 11b34 <error@@Base+0x5a8>
   11a38:	mov	r9, r1
   11a3c:	mov	r6, sl
   11a40:	ldr	r3, [sl]
   11a44:	mov	r4, r9
   11a48:	mov	r5, r7
   11a4c:	ldr	fp, [r3, r7, lsl #2]
   11a50:	cmp	r5, r4
   11a54:	blt	11aa0 <error@@Base+0x514>
   11a58:	ldr	r3, [r6]
   11a5c:	sub	r1, r4, #1
   11a60:	cmp	r7, r1
   11a64:	str	fp, [r3, r4, lsl #2]
   11a68:	bge	11a74 <error@@Base+0x4e8>
   11a6c:	mov	r0, r7
   11a70:	bl	11a2c <error@@Base+0x4a0>
   11a74:	add	r7, r5, #1
   11a78:	cmp	r7, r9
   11a7c:	blt	11a40 <error@@Base+0x4b4>
   11a80:	add	sp, sp, #12
   11a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a88:	sub	r4, r4, #1
   11a8c:	cmp	r5, r4
   11a90:	sub	r8, r8, #4
   11a94:	bne	11aa4 <error@@Base+0x518>
   11a98:	mov	r2, r4
   11a9c:	b	11b18 <error@@Base+0x58c>
   11aa0:	lsl	r8, r4, #2
   11aa4:	ldm	r6, {r2, r3}
   11aa8:	mov	r0, fp
   11aac:	ldr	r1, [r2, r8]
   11ab0:	blx	r3
   11ab4:	cmp	r0, #0
   11ab8:	blt	11a88 <error@@Base+0x4fc>
   11abc:	ldr	r2, [r6]
   11ac0:	lsl	r1, r5, #2
   11ac4:	add	r8, r5, #1
   11ac8:	ldr	r0, [r2, r4, lsl #2]
   11acc:	lsl	r3, r4, #2
   11ad0:	str	r0, [r2, r5, lsl #2]
   11ad4:	add	r5, r1, #4
   11ad8:	cmp	r8, r4
   11adc:	bge	11b2c <error@@Base+0x5a0>
   11ae0:	ldm	r6, {r1, r2}
   11ae4:	mov	r0, fp
   11ae8:	str	r3, [sp, #4]
   11aec:	ldr	r1, [r1, r5]
   11af0:	blx	r2
   11af4:	add	r5, r5, #4
   11af8:	ldr	r3, [sp, #4]
   11afc:	cmp	r0, #0
   11b00:	bgt	11b24 <error@@Base+0x598>
   11b04:	ldr	r1, [r6]
   11b08:	sub	r2, r4, #1
   11b0c:	mov	r4, r8
   11b10:	ldr	r0, [r1, r8, lsl #2]
   11b14:	str	r0, [r1, r3]
   11b18:	mov	r5, r4
   11b1c:	mov	r4, r2
   11b20:	b	11a50 <error@@Base+0x4c4>
   11b24:	add	r8, r8, #1
   11b28:	b	11ad8 <error@@Base+0x54c>
   11b2c:	bne	11b04 <error@@Base+0x578>
   11b30:	b	11a98 <error@@Base+0x50c>
   11b34:	strdeq	r3, [r2], -ip
   11b38:	cmp	r0, #1
   11b3c:	bxle	lr
   11b40:	ldr	r3, [pc, #12]	; 11b54 <error@@Base+0x5c8>
   11b44:	stm	r3, {r1, r2}
   11b48:	sub	r1, r0, #1
   11b4c:	mov	r0, #0
   11b50:	b	11a2c <error@@Base+0x4a0>
   11b54:	strdeq	r3, [r2], -ip
   11b58:	cmp	r1, #0
   11b5c:	beq	11d68 <error@@Base+0x7dc>
   11b60:	eor	ip, r0, r1
   11b64:	rsbmi	r1, r1, #0
   11b68:	subs	r2, r1, #1
   11b6c:	beq	11d34 <error@@Base+0x7a8>
   11b70:	movs	r3, r0
   11b74:	rsbmi	r3, r0, #0
   11b78:	cmp	r3, r1
   11b7c:	bls	11d40 <error@@Base+0x7b4>
   11b80:	tst	r1, r2
   11b84:	beq	11d50 <error@@Base+0x7c4>
   11b88:	clz	r2, r3
   11b8c:	clz	r0, r1
   11b90:	sub	r2, r0, r2
   11b94:	rsbs	r2, r2, #31
   11b98:	addne	r2, r2, r2, lsl #1
   11b9c:	mov	r0, #0
   11ba0:	addne	pc, pc, r2, lsl #2
   11ba4:	nop			; (mov r0, r0)
   11ba8:	cmp	r3, r1, lsl #31
   11bac:	adc	r0, r0, r0
   11bb0:	subcs	r3, r3, r1, lsl #31
   11bb4:	cmp	r3, r1, lsl #30
   11bb8:	adc	r0, r0, r0
   11bbc:	subcs	r3, r3, r1, lsl #30
   11bc0:	cmp	r3, r1, lsl #29
   11bc4:	adc	r0, r0, r0
   11bc8:	subcs	r3, r3, r1, lsl #29
   11bcc:	cmp	r3, r1, lsl #28
   11bd0:	adc	r0, r0, r0
   11bd4:	subcs	r3, r3, r1, lsl #28
   11bd8:	cmp	r3, r1, lsl #27
   11bdc:	adc	r0, r0, r0
   11be0:	subcs	r3, r3, r1, lsl #27
   11be4:	cmp	r3, r1, lsl #26
   11be8:	adc	r0, r0, r0
   11bec:	subcs	r3, r3, r1, lsl #26
   11bf0:	cmp	r3, r1, lsl #25
   11bf4:	adc	r0, r0, r0
   11bf8:	subcs	r3, r3, r1, lsl #25
   11bfc:	cmp	r3, r1, lsl #24
   11c00:	adc	r0, r0, r0
   11c04:	subcs	r3, r3, r1, lsl #24
   11c08:	cmp	r3, r1, lsl #23
   11c0c:	adc	r0, r0, r0
   11c10:	subcs	r3, r3, r1, lsl #23
   11c14:	cmp	r3, r1, lsl #22
   11c18:	adc	r0, r0, r0
   11c1c:	subcs	r3, r3, r1, lsl #22
   11c20:	cmp	r3, r1, lsl #21
   11c24:	adc	r0, r0, r0
   11c28:	subcs	r3, r3, r1, lsl #21
   11c2c:	cmp	r3, r1, lsl #20
   11c30:	adc	r0, r0, r0
   11c34:	subcs	r3, r3, r1, lsl #20
   11c38:	cmp	r3, r1, lsl #19
   11c3c:	adc	r0, r0, r0
   11c40:	subcs	r3, r3, r1, lsl #19
   11c44:	cmp	r3, r1, lsl #18
   11c48:	adc	r0, r0, r0
   11c4c:	subcs	r3, r3, r1, lsl #18
   11c50:	cmp	r3, r1, lsl #17
   11c54:	adc	r0, r0, r0
   11c58:	subcs	r3, r3, r1, lsl #17
   11c5c:	cmp	r3, r1, lsl #16
   11c60:	adc	r0, r0, r0
   11c64:	subcs	r3, r3, r1, lsl #16
   11c68:	cmp	r3, r1, lsl #15
   11c6c:	adc	r0, r0, r0
   11c70:	subcs	r3, r3, r1, lsl #15
   11c74:	cmp	r3, r1, lsl #14
   11c78:	adc	r0, r0, r0
   11c7c:	subcs	r3, r3, r1, lsl #14
   11c80:	cmp	r3, r1, lsl #13
   11c84:	adc	r0, r0, r0
   11c88:	subcs	r3, r3, r1, lsl #13
   11c8c:	cmp	r3, r1, lsl #12
   11c90:	adc	r0, r0, r0
   11c94:	subcs	r3, r3, r1, lsl #12
   11c98:	cmp	r3, r1, lsl #11
   11c9c:	adc	r0, r0, r0
   11ca0:	subcs	r3, r3, r1, lsl #11
   11ca4:	cmp	r3, r1, lsl #10
   11ca8:	adc	r0, r0, r0
   11cac:	subcs	r3, r3, r1, lsl #10
   11cb0:	cmp	r3, r1, lsl #9
   11cb4:	adc	r0, r0, r0
   11cb8:	subcs	r3, r3, r1, lsl #9
   11cbc:	cmp	r3, r1, lsl #8
   11cc0:	adc	r0, r0, r0
   11cc4:	subcs	r3, r3, r1, lsl #8
   11cc8:	cmp	r3, r1, lsl #7
   11ccc:	adc	r0, r0, r0
   11cd0:	subcs	r3, r3, r1, lsl #7
   11cd4:	cmp	r3, r1, lsl #6
   11cd8:	adc	r0, r0, r0
   11cdc:	subcs	r3, r3, r1, lsl #6
   11ce0:	cmp	r3, r1, lsl #5
   11ce4:	adc	r0, r0, r0
   11ce8:	subcs	r3, r3, r1, lsl #5
   11cec:	cmp	r3, r1, lsl #4
   11cf0:	adc	r0, r0, r0
   11cf4:	subcs	r3, r3, r1, lsl #4
   11cf8:	cmp	r3, r1, lsl #3
   11cfc:	adc	r0, r0, r0
   11d00:	subcs	r3, r3, r1, lsl #3
   11d04:	cmp	r3, r1, lsl #2
   11d08:	adc	r0, r0, r0
   11d0c:	subcs	r3, r3, r1, lsl #2
   11d10:	cmp	r3, r1, lsl #1
   11d14:	adc	r0, r0, r0
   11d18:	subcs	r3, r3, r1, lsl #1
   11d1c:	cmp	r3, r1
   11d20:	adc	r0, r0, r0
   11d24:	subcs	r3, r3, r1
   11d28:	cmp	ip, #0
   11d2c:	rsbmi	r0, r0, #0
   11d30:	bx	lr
   11d34:	teq	ip, r0
   11d38:	rsbmi	r0, r0, #0
   11d3c:	bx	lr
   11d40:	movcc	r0, #0
   11d44:	asreq	r0, ip, #31
   11d48:	orreq	r0, r0, #1
   11d4c:	bx	lr
   11d50:	clz	r2, r1
   11d54:	rsb	r2, r2, #31
   11d58:	cmp	ip, #0
   11d5c:	lsr	r0, r3, r2
   11d60:	rsbmi	r0, r0, #0
   11d64:	bx	lr
   11d68:	cmp	r0, #0
   11d6c:	mvngt	r0, #-2147483648	; 0x80000000
   11d70:	movlt	r0, #-2147483648	; 0x80000000
   11d74:	b	11d98 <error@@Base+0x80c>
   11d78:	cmp	r1, #0
   11d7c:	beq	11d68 <error@@Base+0x7dc>
   11d80:	push	{r0, r1, lr}
   11d84:	bl	11b60 <error@@Base+0x5d4>
   11d88:	pop	{r1, r2, lr}
   11d8c:	mul	r3, r2, r0
   11d90:	sub	r1, r1, r3
   11d94:	bx	lr
   11d98:	push	{r1, lr}
   11d9c:	mov	r0, #8
   11da0:	bl	1074c <raise@plt>
   11da4:	pop	{r1, pc}
   11da8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11dac:	mov	r7, r0
   11db0:	ldr	r6, [pc, #72]	; 11e00 <error@@Base+0x874>
   11db4:	ldr	r5, [pc, #72]	; 11e04 <error@@Base+0x878>
   11db8:	add	r6, pc, r6
   11dbc:	add	r5, pc, r5
   11dc0:	sub	r6, r6, r5
   11dc4:	mov	r8, r1
   11dc8:	mov	r9, r2
   11dcc:	bl	10720 <calloc@plt-0x20>
   11dd0:	asrs	r6, r6, #2
   11dd4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11dd8:	mov	r4, #0
   11ddc:	add	r4, r4, #1
   11de0:	ldr	r3, [r5], #4
   11de4:	mov	r2, r9
   11de8:	mov	r1, r8
   11dec:	mov	r0, r7
   11df0:	blx	r3
   11df4:	cmp	r6, r4
   11df8:	bne	11ddc <error@@Base+0x850>
   11dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e00:	andeq	r1, r1, r0, asr #2
   11e04:	andeq	r1, r1, r8, lsr r1
   11e08:	bx	lr
   11e0c:	mov	r2, r1
   11e10:	mov	r1, r0
   11e14:	mov	r0, #3
   11e18:	b	107a0 <__xstat@plt>

Disassembly of section .fini:

00011e1c <.fini>:
   11e1c:	push	{r3, lr}
   11e20:	pop	{r3, pc}
