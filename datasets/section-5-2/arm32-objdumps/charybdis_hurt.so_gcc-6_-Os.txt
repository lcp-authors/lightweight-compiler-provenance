
../repos/charybdis/extensions/.libs/hurt.so:     file format elf32-littlearm


Disassembly of section .init:

00000948 <_init>:
 948:	push	{r3, lr}
 94c:	bl	af4 <call_weak_fn>
 950:	pop	{r3, pc}

Disassembly of section .plt:

00000954 <.plt>:
 954:	push	{lr}		; (str lr, [sp, #-4]!)
 958:	ldr	lr, [pc, #4]	; 964 <.plt+0x10>
 95c:	add	lr, pc, lr
 960:	ldr	pc, [lr, #8]!
 964:	.word	0x0001269c

00000968 <calloc@plt>:
 968:	add	ip, pc, #0, 12
 96c:	add	ip, ip, #73728	; 0x12000
 970:	ldr	pc, [ip, #1692]!	; 0x69c

00000974 <get_client_name@plt>:
 974:	add	ip, pc, #0, 12
 978:	add	ip, ip, #73728	; 0x12000
 97c:	ldr	pc, [ip, #1684]!	; 0x694

00000980 <raise@plt>:
 980:	add	ip, pc, #0, 12
 984:	add	ip, ip, #73728	; 0x12000
 988:	ldr	pc, [ip, #1676]!	; 0x68c

0000098c <rb_current_time@plt>:
 98c:	add	ip, pc, #0, 12
 990:	add	ip, ip, #73728	; 0x12000
 994:	ldr	pc, [ip, #1668]!	; 0x684

00000998 <rb_event_add@plt>:
 998:	add	ip, pc, #0, 12
 99c:	add	ip, ip, #73728	; 0x12000
 9a0:	ldr	pc, [ip, #1660]!	; 0x67c

000009a4 <__cxa_finalize@plt>:
 9a4:	add	ip, pc, #0, 12
 9a8:	add	ip, ip, #73728	; 0x12000
 9ac:	ldr	pc, [ip, #1652]!	; 0x674

000009b0 <sendto_one@plt>:
 9b0:	add	ip, pc, #0, 12
 9b4:	add	ip, ip, #73728	; 0x12000
 9b8:	ldr	pc, [ip, #1644]!	; 0x66c

000009bc <rb_event_delete@plt>:
 9bc:	add	ip, pc, #0, 12
 9c0:	add	ip, ip, #73728	; 0x12000
 9c4:	ldr	pc, [ip, #1636]!	; 0x664

000009c8 <free@plt>:
 9c8:	add	ip, pc, #0, 12
 9cc:	add	ip, ip, #73728	; 0x12000
 9d0:	ldr	pc, [ip, #1628]!	; 0x65c

000009d4 <rb_strcasecmp@plt>:
 9d4:	add	ip, pc, #0, 12
 9d8:	add	ip, ip, #73728	; 0x12000
 9dc:	ldr	pc, [ip, #1620]!	; 0x654

000009e0 <rb_outofmemory@plt>:
 9e0:	add	ip, pc, #0, 12
 9e4:	add	ip, ip, #73728	; 0x12000
 9e8:	ldr	pc, [ip, #1612]!	; 0x64c

000009ec <sendto_realops_snomask@plt>:
 9ec:	add	ip, pc, #0, 12
 9f0:	add	ip, ip, #73728	; 0x12000
 9f4:	ldr	pc, [ip, #1604]!	; 0x644

000009f8 <get_oper_name@plt>:
 9f8:	add	ip, pc, #0, 12
 9fc:	add	ip, ip, #73728	; 0x12000
 a00:	ldr	pc, [ip, #1596]!	; 0x63c

00000a04 <rb_free_rb_dlink_node@plt>:
 a04:	add	ip, pc, #0, 12
 a08:	add	ip, ip, #73728	; 0x12000
 a0c:	ldr	pc, [ip, #1588]!	; 0x634

00000a10 <strcpy@plt>:
 a10:	add	ip, pc, #0, 12
 a14:	add	ip, ip, #73728	; 0x12000
 a18:	ldr	pc, [ip, #1580]!	; 0x62c

00000a1c <sendto_server@plt>:
 a1c:	add	ip, pc, #0, 12
 a20:	add	ip, ip, #73728	; 0x12000
 a24:	ldr	pc, [ip, #1572]!	; 0x624

00000a28 <malloc@plt>:
 a28:	add	ip, pc, #0, 12
 a2c:	add	ip, ip, #73728	; 0x12000
 a30:	ldr	pc, [ip, #1564]!	; 0x61c

00000a34 <__gmon_start__@plt>:
 a34:	add	ip, pc, #0, 12
 a38:	add	ip, ip, #73728	; 0x12000
 a3c:	ldr	pc, [ip, #1556]!	; 0x614

00000a40 <rb_make_rb_dlink_node@plt>:
 a40:	add	ip, pc, #0, 12
 a44:	add	ip, ip, #73728	; 0x12000
 a48:	ldr	pc, [ip, #1548]!	; 0x60c

00000a4c <sendto_one_numeric@plt>:
 a4c:	add	ip, pc, #0, 12
 a50:	add	ip, ip, #73728	; 0x12000
 a54:	ldr	pc, [ip, #1540]!	; 0x604

00000a58 <strlen@plt>:
 a58:	add	ip, pc, #0, 12
 a5c:	add	ip, ip, #73728	; 0x12000
 a60:	ldr	pc, [ip, #1532]!	; 0x5fc

00000a64 <strchr@plt>:
 a64:	add	ip, pc, #0, 12
 a68:	add	ip, ip, #73728	; 0x12000
 a6c:	ldr	pc, [ip, #1524]!	; 0x5f4

00000a70 <clean_nick@plt>:
 a70:	add	ip, pc, #0, 12
 a74:	add	ip, ip, #73728	; 0x12000
 a78:	ldr	pc, [ip, #1516]!	; 0x5ec

00000a7c <match@plt>:
 a7c:	add	ip, pc, #0, 12
 a80:	add	ip, ip, #73728	; 0x12000
 a84:	ldr	pc, [ip, #1508]!	; 0x5e4

00000a88 <find_person@plt>:
 a88:	add	ip, pc, #0, 12
 a8c:	add	ip, ip, #73728	; 0x12000
 a90:	ldr	pc, [ip, #1500]!	; 0x5dc

00000a94 <valid_temp_time@plt>:
 a94:	add	ip, pc, #0, 12
 a98:	add	ip, ip, #73728	; 0x12000
 a9c:	ldr	pc, [ip, #1492]!	; 0x5d4

00000aa0 <sendto_one_notice@plt>:
 aa0:	add	ip, pc, #0, 12
 aa4:	add	ip, ip, #73728	; 0x12000
 aa8:	ldr	pc, [ip, #1484]!	; 0x5cc

00000aac <atoi@plt>:
 aac:	add	ip, pc, #0, 12
 ab0:	add	ip, ip, #73728	; 0x12000
 ab4:	ldr	pc, [ip, #1476]!	; 0x5c4

00000ab8 <find_named_person@plt>:
 ab8:	add	ip, pc, #0, 12
 abc:	add	ip, ip, #73728	; 0x12000
 ac0:	ldr	pc, [ip, #1468]!	; 0x5bc

00000ac4 <exit_client@plt>:
 ac4:	add	ip, pc, #0, 12
 ac8:	add	ip, ip, #73728	; 0x12000
 acc:	ldr	pc, [ip, #1460]!	; 0x5b4

00000ad0 <privilegeset_in_set@plt>:
 ad0:	add	ip, pc, #0, 12
 ad4:	add	ip, ip, #73728	; 0x12000
 ad8:	ldr	pc, [ip, #1452]!	; 0x5ac

00000adc <strncmp@plt>:
 adc:	add	ip, pc, #0, 12
 ae0:	add	ip, ip, #73728	; 0x12000
 ae4:	ldr	pc, [ip, #1444]!	; 0x5a4

00000ae8 <__assert_fail@plt>:
 ae8:	add	ip, pc, #0, 12
 aec:	add	ip, ip, #73728	; 0x12000
 af0:	ldr	pc, [ip, #1436]!	; 0x59c

Disassembly of section .text:

00000af4 <call_weak_fn>:
     af4:	ldr	r3, [pc, #20]	; b10 <call_weak_fn+0x1c>
     af8:	ldr	r2, [pc, #20]	; b14 <call_weak_fn+0x20>
     afc:	add	r3, pc, r3
     b00:	ldr	r2, [r3, r2]
     b04:	cmp	r2, #0
     b08:	bxeq	lr
     b0c:	b	a34 <__gmon_start__@plt>
     b10:	.word	0x000124fc
     b14:	.word	0x000000a8

00000b18 <deregister_tm_clones>:
     b18:	ldr	r3, [pc, #52]	; b54 <deregister_tm_clones+0x3c>
     b1c:	ldr	r0, [pc, #52]	; b58 <deregister_tm_clones+0x40>
     b20:	add	r3, pc, r3
     b24:	add	r0, pc, r0
     b28:	add	r3, r3, #3
     b2c:	sub	r3, r3, r0
     b30:	cmp	r3, #6
     b34:	ldr	r3, [pc, #32]	; b5c <deregister_tm_clones+0x44>
     b38:	add	r3, pc, r3
     b3c:	bxls	lr
     b40:	ldr	r2, [pc, #24]	; b60 <deregister_tm_clones+0x48>
     b44:	ldr	r3, [r3, r2]
     b48:	cmp	r3, #0
     b4c:	bxeq	lr
     b50:	bx	r3
     b54:	.word	0x000126a4
     b58:	.word	0x000126a0
     b5c:	.word	0x000124c0
     b60:	.word	0x00000098

00000b64 <register_tm_clones>:
     b64:	ldr	r1, [pc, #56]	; ba4 <register_tm_clones+0x40>
     b68:	ldr	r0, [pc, #56]	; ba8 <register_tm_clones+0x44>
     b6c:	add	r1, pc, r1
     b70:	add	r0, pc, r0
     b74:	sub	r1, r1, r0
     b78:	ldr	r3, [pc, #44]	; bac <register_tm_clones+0x48>
     b7c:	asr	r1, r1, #2
     b80:	add	r3, pc, r3
     b84:	add	r1, r1, r1, lsr #31
     b88:	asrs	r1, r1, #1
     b8c:	bxeq	lr
     b90:	ldr	r2, [pc, #24]	; bb0 <register_tm_clones+0x4c>
     b94:	ldr	r3, [r3, r2]
     b98:	cmp	r3, #0
     b9c:	bxeq	lr
     ba0:	bx	r3
     ba4:	.word	0x00012658
     ba8:	.word	0x00012654
     bac:	.word	0x00012478
     bb0:	.word	0x000000b0

00000bb4 <__do_global_dtors_aux>:
     bb4:	ldr	r3, [pc, #76]	; c08 <__do_global_dtors_aux+0x54>
     bb8:	ldr	r2, [pc, #76]	; c0c <__do_global_dtors_aux+0x58>
     bbc:	add	r3, pc, r3
     bc0:	add	r2, pc, r2
     bc4:	ldrb	r3, [r3]
     bc8:	cmp	r3, #0
     bcc:	bxne	lr
     bd0:	ldr	r3, [pc, #56]	; c10 <__do_global_dtors_aux+0x5c>
     bd4:	push	{r4, lr}
     bd8:	ldr	r3, [r2, r3]
     bdc:	cmp	r3, #0
     be0:	beq	bf0 <__do_global_dtors_aux+0x3c>
     be4:	ldr	r3, [pc, #40]	; c14 <__do_global_dtors_aux+0x60>
     be8:	ldr	r0, [pc, r3]
     bec:	bl	9a4 <__cxa_finalize@plt>
     bf0:	bl	b18 <deregister_tm_clones>
     bf4:	ldr	r3, [pc, #28]	; c18 <__do_global_dtors_aux+0x64>
     bf8:	mov	r2, #1
     bfc:	add	r3, pc, r3
     c00:	strb	r2, [r3]
     c04:	pop	{r4, pc}
     c08:	.word	0x00012608
     c0c:	.word	0x00012438
     c10:	.word	0x00000090
     c14:	.word	0x000124cc
     c18:	.word	0x000125c8

00000c1c <frame_dummy>:
     c1c:	ldr	r0, [pc, #56]	; c5c <frame_dummy+0x40>
     c20:	ldr	r3, [pc, #56]	; c60 <frame_dummy+0x44>
     c24:	add	r0, pc, r0
     c28:	ldr	r2, [r0]
     c2c:	add	r3, pc, r3
     c30:	cmp	r2, #0
     c34:	bne	c3c <frame_dummy+0x20>
     c38:	b	b64 <register_tm_clones>
     c3c:	ldr	r2, [pc, #32]	; c64 <frame_dummy+0x48>
     c40:	ldr	r3, [r3, r2]
     c44:	cmp	r3, #0
     c48:	beq	c38 <frame_dummy+0x1c>
     c4c:	push	{r4, lr}
     c50:	blx	r3
     c54:	pop	{r4, lr}
     c58:	b	b64 <register_tm_clones>
     c5c:	.word	0x000122d0
     c60:	.word	0x000123cc
     c64:	.word	0x000000ac

00000c68 <hurt_find>:
     c68:	ldr	r3, [pc, #72]	; cb8 <hurt_find+0x50>
     c6c:	ldr	r2, [pc, #72]	; cbc <hurt_find+0x54>
     c70:	add	r3, pc, r3
     c74:	push	{r4, r5, r6, lr}
     c78:	mov	r6, r0
     c7c:	ldr	r3, [r3, r2]
     c80:	ldr	r4, [r3]
     c84:	cmp	r4, #0
     c88:	bne	c98 <hurt_find+0x30>
     c8c:	mov	r5, r4
     c90:	mov	r0, r5
     c94:	pop	{r4, r5, r6, pc}
     c98:	ldr	r5, [r4]
     c9c:	mov	r1, r6
     ca0:	ldr	r0, [r5]
     ca4:	bl	a7c <match@plt>
     ca8:	cmp	r0, #0
     cac:	bne	c90 <hurt_find+0x28>
     cb0:	ldr	r4, [r4, #8]
     cb4:	b	c84 <hurt_find+0x1c>
     cb8:	.word	0x00012388
     cbc:	.word	0x00000094

00000cc0 <doing_stats_hook>:
     cc0:	ldr	r3, [r0, #8]
     cc4:	push	{r4, r5, r6, r7, r8, lr}
     cc8:	cmp	r3, #115	; 0x73
     ccc:	ldr	r5, [pc, #496]	; ec4 <doing_stats_hook+0x204>
     cd0:	sub	sp, sp, #24
     cd4:	add	r5, pc, r5
     cd8:	bne	d8c <doing_stats_hook+0xcc>
     cdc:	ldr	r3, [pc, #484]	; ec8 <doing_stats_hook+0x208>
     ce0:	ldr	r4, [r0]
     ce4:	ldr	r6, [r5, r3]
     ce8:	ldr	r3, [r6, #164]	; 0xa4
     cec:	cmp	r3, #2
     cf0:	beq	d74 <doing_stats_hook+0xb4>
     cf4:	ldr	r3, [r6, #164]	; 0xa4
     cf8:	cmp	r3, #1
     cfc:	bne	df4 <doing_stats_hook+0x134>
     d00:	ldr	r3, [r4, #24]
     d04:	cmp	r3, #0
     d08:	bne	dd4 <doing_stats_hook+0x114>
     d0c:	ldr	r3, [r4, #56]	; 0x38
     d10:	tst	r3, #4096	; 0x1000
     d14:	bne	e5c <doing_stats_hook+0x19c>
     d18:	add	r0, r4, #288	; 0x120
     d1c:	add	r0, r0, #3
     d20:	bl	c68 <hurt_find>
     d24:	cmp	r0, #0
     d28:	beq	e78 <doing_stats_hook+0x1b8>
     d2c:	ldr	r3, [pc, #408]	; ecc <doing_stats_hook+0x20c>
     d30:	ldr	r2, [pc, #408]	; ed0 <doing_stats_hook+0x210>
     d34:	add	r3, pc, r3
     d38:	str	r3, [sp, #16]
     d3c:	str	r3, [sp, #12]
     d40:	ldr	r3, [r0, #12]
     d44:	add	r2, pc, r2
     d48:	str	r3, [sp, #8]
     d4c:	ldr	r3, [r0]
     d50:	str	r3, [sp, #4]
     d54:	ldr	r3, [pc, #376]	; ed4 <doing_stats_hook+0x214>
     d58:	add	r3, pc, r3
     d5c:	str	r3, [sp]
     d60:	mov	r3, #115	; 0x73
     d64:	mov	r1, #216	; 0xd8
     d68:	mov	r0, r4
     d6c:	bl	a4c <sendto_one_numeric@plt>
     d70:	b	d8c <doing_stats_hook+0xcc>
     d74:	ldr	r3, [r4, #24]
     d78:	cmp	r3, #0
     d7c:	bne	d94 <doing_stats_hook+0xd4>
     d80:	ldr	r3, [r4, #56]	; 0x38
     d84:	tst	r3, #4096	; 0x1000
     d88:	bne	db8 <doing_stats_hook+0xf8>
     d8c:	add	sp, sp, #24
     d90:	pop	{r4, r5, r6, r7, r8, pc}
     d94:	ldr	r0, [r3, #36]	; 0x24
     d98:	cmp	r0, #0
     d9c:	beq	d80 <doing_stats_hook+0xc0>
     da0:	ldr	r1, [pc, #304]	; ed8 <doing_stats_hook+0x218>
     da4:	add	r1, pc, r1
     da8:	bl	ad0 <privilegeset_in_set@plt>
     dac:	cmp	r0, #0
     db0:	beq	d80 <doing_stats_hook+0xc0>
     db4:	b	cf4 <doing_stats_hook+0x34>
     db8:	ldr	r3, [r4, #24]
     dbc:	cmp	r3, #0
     dc0:	beq	d8c <doing_stats_hook+0xcc>
     dc4:	ldr	r3, [r3, #36]	; 0x24
     dc8:	cmp	r3, #0
     dcc:	bne	d8c <doing_stats_hook+0xcc>
     dd0:	b	cf4 <doing_stats_hook+0x34>
     dd4:	ldr	r0, [r3, #36]	; 0x24
     dd8:	cmp	r0, #0
     ddc:	beq	d0c <doing_stats_hook+0x4c>
     de0:	ldr	r1, [pc, #244]	; edc <doing_stats_hook+0x21c>
     de4:	add	r1, pc, r1
     de8:	bl	ad0 <privilegeset_in_set@plt>
     dec:	cmp	r0, #0
     df0:	beq	d0c <doing_stats_hook+0x4c>
     df4:	ldr	r3, [pc, #228]	; ee0 <doing_stats_hook+0x220>
     df8:	ldr	r7, [pc, #228]	; ee4 <doing_stats_hook+0x224>
     dfc:	ldr	r6, [pc, #228]	; ee8 <doing_stats_hook+0x228>
     e00:	ldr	r3, [r5, r3]
     e04:	ldr	r8, [pc, #224]	; eec <doing_stats_hook+0x22c>
     e08:	add	r7, pc, r7
     e0c:	ldr	r5, [r3]
     e10:	add	r6, pc, r6
     e14:	add	r8, pc, r8
     e18:	cmp	r5, #0
     e1c:	beq	d8c <doing_stats_hook+0xcc>
     e20:	ldr	r3, [r5]
     e24:	str	r6, [sp, #16]
     e28:	str	r6, [sp, #12]
     e2c:	ldr	r2, [r3, #12]
     e30:	mov	r1, #216	; 0xd8
     e34:	str	r2, [sp, #8]
     e38:	ldr	r3, [r3]
     e3c:	mov	r2, r7
     e40:	str	r3, [sp, #4]
     e44:	str	r8, [sp]
     e48:	mov	r3, #115	; 0x73
     e4c:	mov	r0, r4
     e50:	bl	a4c <sendto_one_numeric@plt>
     e54:	ldr	r5, [r5, #8]
     e58:	b	e18 <doing_stats_hook+0x158>
     e5c:	ldr	r3, [r4, #24]
     e60:	cmp	r3, #0
     e64:	beq	d18 <doing_stats_hook+0x58>
     e68:	ldr	r3, [r3, #36]	; 0x24
     e6c:	cmp	r3, #0
     e70:	bne	d18 <doing_stats_hook+0x58>
     e74:	b	df4 <doing_stats_hook+0x134>
     e78:	add	r0, r4, #227	; 0xe3
     e7c:	bl	c68 <hurt_find>
     e80:	cmp	r0, #0
     e84:	beq	d8c <doing_stats_hook+0xcc>
     e88:	ldr	r3, [pc, #96]	; ef0 <doing_stats_hook+0x230>
     e8c:	ldr	r2, [pc, #96]	; ef4 <doing_stats_hook+0x234>
     e90:	add	r3, pc, r3
     e94:	str	r3, [sp, #16]
     e98:	str	r3, [sp, #12]
     e9c:	ldr	r3, [r0, #12]
     ea0:	add	r2, pc, r2
     ea4:	str	r3, [sp, #8]
     ea8:	ldr	r3, [r0]
     eac:	str	r3, [sp, #4]
     eb0:	ldr	r3, [pc, #64]	; ef8 <doing_stats_hook+0x238>
     eb4:	add	r3, pc, r3
     eb8:	str	r3, [sp]
     ebc:	mov	r3, #115	; 0x73
     ec0:	b	d64 <doing_stats_hook+0xa4>
     ec4:	.word	0x00012324
     ec8:	.word	0x000000b8
     ecc:	.word	0x0000137a
     ed0:	.word	0x00001356
     ed4:	.word	0x00001355
     ed8:	.word	0x000012e9
     edc:	.word	0x000012a9
     ee0:	.word	0x00000094
     ee4:	.word	0x00001292
     ee8:	.word	0x0000129e
     eec:	.word	0x00001299
     ef0:	.word	0x0000121e
     ef4:	.word	0x000011fa
     ef8:	.word	0x000011f9

00000efc <rb_strdup>:
     efc:	push	{r4, r5, r6, lr}
     f00:	mov	r5, r0
     f04:	bl	a58 <strlen@plt>
     f08:	add	r0, r0, #1
     f0c:	bl	a28 <malloc@plt>
     f10:	subs	r4, r0, #0
     f14:	bne	f1c <rb_strdup+0x20>
     f18:	bl	9e0 <rb_outofmemory@plt>
     f1c:	mov	r1, r5
     f20:	bl	a10 <strcpy@plt>
     f24:	mov	r0, r4
     f28:	pop	{r4, r5, r6, pc}

00000f2c <hurt_find_exact>:
     f2c:	ldr	r3, [pc, #72]	; f7c <hurt_find_exact+0x50>
     f30:	ldr	r2, [pc, #72]	; f80 <hurt_find_exact+0x54>
     f34:	add	r3, pc, r3
     f38:	push	{r4, r5, r6, lr}
     f3c:	mov	r6, r0
     f40:	ldr	r3, [r3, r2]
     f44:	ldr	r4, [r3]
     f48:	cmp	r4, #0
     f4c:	bne	f5c <hurt_find_exact+0x30>
     f50:	mov	r5, r4
     f54:	mov	r0, r5
     f58:	pop	{r4, r5, r6, pc}
     f5c:	ldr	r5, [r4]
     f60:	mov	r0, r6
     f64:	ldr	r1, [r5]
     f68:	bl	9d4 <rb_strcasecmp@plt>
     f6c:	cmp	r0, #0
     f70:	beq	f54 <hurt_find_exact+0x28>
     f74:	ldr	r4, [r4, #8]
     f78:	b	f48 <hurt_find_exact+0x1c>
     f7c:	.word	0x000120c4
     f80:	.word	0x00000094

00000f84 <modinit>:
     f84:	push	{r4, lr}
     f88:	bl	98c <rb_current_time@plt>
     f8c:	ldr	r4, [pc, #100]	; ff8 <modinit+0x74>
     f90:	ldr	r3, [pc, #100]	; ffc <modinit+0x78>
     f94:	add	r4, pc, r4
     f98:	ldr	r1, [pc, #96]	; 1000 <modinit+0x7c>
     f9c:	ldr	r3, [r4, r3]
     fa0:	mov	r2, #0
     fa4:	add	r1, pc, r1
     fa8:	str	r0, [r3]
     fac:	ldr	r0, [pc, #80]	; 1004 <modinit+0x80>
     fb0:	mov	r3, #60	; 0x3c
     fb4:	add	r0, pc, r0
     fb8:	bl	998 <rb_event_add@plt>
     fbc:	ldr	r3, [pc, #68]	; 1008 <modinit+0x84>
     fc0:	ldr	r1, [pc, #68]	; 100c <modinit+0x88>
     fc4:	mov	r2, #0
     fc8:	ldr	r3, [r4, r3]
     fcc:	add	r1, pc, r1
     fd0:	str	r0, [r3]
     fd4:	ldr	r0, [pc, #52]	; 1010 <modinit+0x8c>
     fd8:	mov	r3, #5
     fdc:	add	r0, pc, r0
     fe0:	bl	998 <rb_event_add@plt>
     fe4:	ldr	r3, [pc, #40]	; 1014 <modinit+0x90>
     fe8:	ldr	r3, [r4, r3]
     fec:	str	r0, [r3]
     ff0:	mov	r0, #0
     ff4:	pop	{r4, pc}
     ff8:	.word	0x00012064
     ffc:	.word	0x000000a0
    1000:	.word	0x00000c8c
    1004:	.word	0x000010fb
    1008:	.word	0x0000009c
    100c:	.word	0x0000046c
    1010:	.word	0x000010df
    1014:	.word	0x000000a4

00001018 <rb_dlinkAdd>:
    1018:	cmp	r0, #0
    101c:	push	{r4, lr}
    1020:	bne	1044 <rb_dlinkAdd+0x2c>
    1024:	ldr	r3, [pc, #168]	; 10d4 <rb_dlinkAdd+0xbc>
    1028:	ldr	r1, [pc, #168]	; 10d8 <rb_dlinkAdd+0xc0>
    102c:	ldr	r0, [pc, #168]	; 10dc <rb_dlinkAdd+0xc4>
    1030:	add	r3, pc, r3
    1034:	mov	r2, #143	; 0x8f
    1038:	add	r1, pc, r1
    103c:	add	r0, pc, r0
    1040:	bl	ae8 <__assert_fail@plt>
    1044:	cmp	r1, #0
    1048:	bne	106c <rb_dlinkAdd+0x54>
    104c:	ldr	r3, [pc, #140]	; 10e0 <rb_dlinkAdd+0xc8>
    1050:	ldr	r1, [pc, #140]	; 10e4 <rb_dlinkAdd+0xcc>
    1054:	ldr	r0, [pc, #140]	; 10e8 <rb_dlinkAdd+0xd0>
    1058:	add	r3, pc, r3
    105c:	mov	r2, #144	; 0x90
    1060:	add	r1, pc, r1
    1064:	add	r0, pc, r0
    1068:	b	1040 <rb_dlinkAdd+0x28>
    106c:	cmp	r2, #0
    1070:	bne	1094 <rb_dlinkAdd+0x7c>
    1074:	ldr	r3, [pc, #112]	; 10ec <rb_dlinkAdd+0xd4>
    1078:	ldr	r1, [pc, #112]	; 10f0 <rb_dlinkAdd+0xd8>
    107c:	ldr	r0, [pc, #112]	; 10f4 <rb_dlinkAdd+0xdc>
    1080:	add	r3, pc, r3
    1084:	mov	r2, #145	; 0x91
    1088:	add	r1, pc, r1
    108c:	add	r0, pc, r0
    1090:	b	1040 <rb_dlinkAdd+0x28>
    1094:	mov	r3, #0
    1098:	str	r3, [r1, #4]
    109c:	ldr	r3, [r2]
    10a0:	str	r0, [r1]
    10a4:	cmp	r3, #0
    10a8:	str	r3, [r1, #8]
    10ac:	strne	r1, [r3, #4]
    10b0:	bne	10c0 <rb_dlinkAdd+0xa8>
    10b4:	ldr	r3, [r2, #4]
    10b8:	cmp	r3, #0
    10bc:	streq	r1, [r2, #4]
    10c0:	ldr	r3, [r2, #8]
    10c4:	str	r1, [r2]
    10c8:	add	r3, r3, #1
    10cc:	str	r3, [r2, #8]
    10d0:	pop	{r4, pc}
    10d4:	.word	0x00000fc4
    10d8:	.word	0x0000108e
    10dc:	.word	0x000010a6
    10e0:	.word	0x00000f9c
    10e4:	.word	0x00001066
    10e8:	.word	0x0000108b
    10ec:	.word	0x00000f74
    10f0:	.word	0x0000103e
    10f4:	.word	0x0000106d

000010f8 <new_local_user_hook>:
    10f8:	ldrd	r2, [r0, #64]	; 0x40
    10fc:	push	{r4, r5, r6, r7, r8, lr}
    1100:	mov	r7, #0
    1104:	ldr	r6, [pc, #180]	; 11c0 <new_local_user_hook+0xc8>
    1108:	and	r7, r7, r3
    110c:	and	r6, r6, r2
    1110:	ldr	r5, [pc, #172]	; 11c4 <new_local_user_hook+0xcc>
    1114:	orrs	r1, r6, r7
    1118:	add	r5, pc, r5
    111c:	popne	{r4, r5, r6, r7, r8, pc}
    1120:	ldr	r1, [r0, #24]
    1124:	cmn	r1, #40	; 0x28
    1128:	beq	1138 <new_local_user_hook+0x40>
    112c:	ldrb	r1, [r1, #40]	; 0x28
    1130:	cmp	r1, #0
    1134:	popne	{r4, r5, r6, r7, r8, pc}
    1138:	and	r2, r2, #4194304	; 0x400000
    113c:	mov	r3, #0
    1140:	orrs	r3, r2, r3
    1144:	popne	{r4, r5, r6, r7, r8, pc}
    1148:	mov	r4, r0
    114c:	add	r0, r0, #288	; 0x120
    1150:	add	r0, r0, #3
    1154:	bl	c68 <hurt_find>
    1158:	cmp	r0, #0
    115c:	beq	11ac <new_local_user_hook+0xb4>
    1160:	ldr	r6, [r4, #432]	; 0x1b0
    1164:	bl	98c <rb_current_time@plt>
    1168:	ldrd	r2, [r4, #64]	; 0x40
    116c:	orr	r2, r2, #65536	; 0x10000
    1170:	add	r0, r0, #600	; 0x258
    1174:	str	r0, [r6, #416]	; 0x1a0
    1178:	strd	r2, [r4, #64]	; 0x40
    117c:	bl	a40 <rb_make_rb_dlink_node@plt>
    1180:	ldr	r3, [pc, #64]	; 11c8 <new_local_user_hook+0xd0>
    1184:	ldr	r2, [r5, r3]
    1188:	add	r2, r2, #8
    118c:	mov	r1, r0
    1190:	mov	r0, r4
    1194:	bl	1018 <rb_dlinkAdd>
    1198:	ldr	r1, [pc, #44]	; 11cc <new_local_user_hook+0xd4>
    119c:	mov	r0, r4
    11a0:	add	r1, pc, r1
    11a4:	pop	{r4, r5, r6, r7, r8, lr}
    11a8:	b	aa0 <sendto_one_notice@plt>
    11ac:	add	r0, r4, #227	; 0xe3
    11b0:	bl	c68 <hurt_find>
    11b4:	cmp	r0, #0
    11b8:	bne	1160 <new_local_user_hook+0x68>
    11bc:	pop	{r4, r5, r6, r7, r8, pc}
    11c0:	.word	0x00004022
    11c4:	.word	0x00011ee0
    11c8:	.word	0x000000a0
    11cc:	.word	0x00000f66

000011d0 <rb_dlinkFindDestroy>:
    11d0:	cmp	r1, #0
    11d4:	push	{r4, lr}
    11d8:	bne	1200 <rb_dlinkFindDestroy+0x30>
    11dc:	ldr	r3, [pc, #180]	; 1298 <rb_dlinkFindDestroy+0xc8>
    11e0:	ldr	r1, [pc, #180]	; 129c <rb_dlinkFindDestroy+0xcc>
    11e4:	ldr	r0, [pc, #180]	; 12a0 <rb_dlinkFindDestroy+0xd0>
    11e8:	add	r3, pc, r3
    11ec:	ldr	r2, [pc, #176]	; 12a4 <rb_dlinkFindDestroy+0xd4>
    11f0:	add	r3, r3, #12
    11f4:	add	r1, pc, r1
    11f8:	add	r0, pc, r0
    11fc:	bl	ae8 <__assert_fail@plt>
    1200:	cmp	r0, #0
    1204:	mov	r2, r0
    1208:	ldrne	r0, [r1]
    120c:	bne	1248 <rb_dlinkFindDestroy+0x78>
    1210:	ldr	r3, [pc, #144]	; 12a8 <rb_dlinkFindDestroy+0xd8>
    1214:	ldr	r1, [pc, #144]	; 12ac <rb_dlinkFindDestroy+0xdc>
    1218:	ldr	r0, [pc, #144]	; 12b0 <rb_dlinkFindDestroy+0xe0>
    121c:	add	r3, pc, r3
    1220:	add	r3, r3, #12
    1224:	mov	r2, #288	; 0x120
    1228:	add	r1, pc, r1
    122c:	add	r0, pc, r0
    1230:	b	11fc <rb_dlinkFindDestroy+0x2c>
    1234:	ldr	r3, [r0]
    1238:	cmp	r2, r3
    123c:	ldr	r3, [r0, #8]
    1240:	beq	1254 <rb_dlinkFindDestroy+0x84>
    1244:	mov	r0, r3
    1248:	cmp	r0, #0
    124c:	bne	1234 <rb_dlinkFindDestroy+0x64>
    1250:	pop	{r4, pc}
    1254:	ldr	r2, [r0, #4]
    1258:	cmp	r3, #0
    125c:	strne	r2, [r3, #4]
    1260:	streq	r2, [r1, #4]
    1264:	ldr	r2, [r0, #4]
    1268:	cmp	r2, #0
    126c:	strne	r3, [r2, #8]
    1270:	streq	r3, [r1]
    1274:	mov	r3, #0
    1278:	str	r3, [r0, #4]
    127c:	str	r3, [r0, #8]
    1280:	ldr	r3, [r1, #8]
    1284:	sub	r3, r3, #1
    1288:	str	r3, [r1, #8]
    128c:	bl	a04 <rb_free_rb_dlink_node@plt>
    1290:	mov	r0, #1
    1294:	pop	{r4, pc}
    1298:	.word	0x00000e0c
    129c:	.word	0x00000ed2
    12a0:	.word	0x00000f01
    12a4:	.word	0x0000011f
    12a8:	.word	0x00000dd8
    12ac:	.word	0x00000e9e
    12b0:	.word	0x00000eb6

000012b4 <client_exit_hook>:
    12b4:	ldr	r3, [pc, #20]	; 12d0 <client_exit_hook+0x1c>
    12b8:	ldr	r2, [pc, #20]	; 12d4 <client_exit_hook+0x20>
    12bc:	add	r3, pc, r3
    12c0:	ldr	r0, [r0, #4]
    12c4:	ldr	r1, [r3, r2]
    12c8:	add	r1, r1, #8
    12cc:	b	11d0 <rb_dlinkFindDestroy>
    12d0:	.word	0x00011d3c
    12d4:	.word	0x000000a0

000012d8 <heal_nick>:
    12d8:	ldr	r3, [pc, #180]	; 1394 <heal_nick+0xbc>
    12dc:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    12e0:	add	r3, pc, r3
    12e4:	ldr	r2, [pc, #172]	; 1398 <heal_nick+0xc0>
    12e8:	mov	r4, r1
    12ec:	mov	r5, r0
    12f0:	ldr	r1, [r3, r2]
    12f4:	mov	r0, r4
    12f8:	add	r1, r1, #8
    12fc:	bl	11d0 <rb_dlinkFindDestroy>
    1300:	add	r6, r4, #88	; 0x58
    1304:	cmp	r0, #0
    1308:	beq	1378 <heal_nick+0xa0>
    130c:	mov	r0, r5
    1310:	bl	9f8 <get_oper_name@plt>
    1314:	mov	r1, #0
    1318:	mov	r7, r0
    131c:	mov	r0, r4
    1320:	bl	974 <get_client_name@plt>
    1324:	ldr	r2, [pc, #112]	; 139c <heal_nick+0xc4>
    1328:	mov	r3, r7
    132c:	add	r2, pc, r2
    1330:	mov	r1, #0
    1334:	str	r0, [sp]
    1338:	mov	r0, #256	; 0x100
    133c:	bl	9ec <sendto_realops_snomask@plt>
    1340:	ldr	r1, [pc, #88]	; 13a0 <heal_nick+0xc8>
    1344:	mov	r0, r4
    1348:	add	r1, pc, r1
    134c:	bl	aa0 <sendto_one_notice@plt>
    1350:	ldr	r1, [pc, #76]	; 13a4 <heal_nick+0xcc>
    1354:	mov	r2, r6
    1358:	add	r1, pc, r1
    135c:	mov	r0, r5
    1360:	bl	aa0 <sendto_one_notice@plt>
    1364:	ldr	r4, [r4, #432]	; 0x1b0
    1368:	bl	98c <rb_current_time@plt>
    136c:	str	r0, [r4, #416]	; 0x1a0
    1370:	add	sp, sp, #12
    1374:	pop	{r4, r5, r6, r7, pc}
    1378:	ldr	r1, [pc, #40]	; 13a8 <heal_nick+0xd0>
    137c:	mov	r2, r6
    1380:	add	r1, pc, r1
    1384:	mov	r0, r5
    1388:	add	sp, sp, #12
    138c:	pop	{r4, r5, r6, r7, lr}
    1390:	b	aa0 <sendto_one_notice@plt>
    1394:	.word	0x00011d18
    1398:	.word	0x000000a0
    139c:	.word	0x00000e32
    13a0:	.word	0x00000e29
    13a4:	.word	0x00000e4b
    13a8:	.word	0x00000e4f

000013ac <rb_dlinkDelete.constprop.9>:
    13ac:	ldr	r3, [pc, #120]	; 142c <rb_dlinkDelete.constprop.9+0x80>
    13b0:	cmp	r0, #0
    13b4:	add	r3, pc, r3
    13b8:	bne	13e4 <rb_dlinkDelete.constprop.9+0x38>
    13bc:	ldr	r3, [pc, #108]	; 1430 <rb_dlinkDelete.constprop.9+0x84>
    13c0:	ldr	r1, [pc, #108]	; 1434 <rb_dlinkDelete.constprop.9+0x88>
    13c4:	ldr	r0, [pc, #108]	; 1438 <rb_dlinkDelete.constprop.9+0x8c>
    13c8:	add	r3, pc, r3
    13cc:	push	{r4, lr}
    13d0:	add	r3, r3, #32
    13d4:	mov	r2, #235	; 0xeb
    13d8:	add	r1, pc, r1
    13dc:	add	r0, pc, r0
    13e0:	bl	ae8 <__assert_fail@plt>
    13e4:	ldr	ip, [pc, #80]	; 143c <rb_dlinkDelete.constprop.9+0x90>
    13e8:	ldr	r2, [r0, #8]
    13ec:	ldr	r1, [r0, #4]
    13f0:	ldr	r3, [r3, ip]
    13f4:	cmp	r2, #0
    13f8:	strne	r1, [r2, #4]
    13fc:	streq	r1, [r3, #12]
    1400:	ldr	r1, [r0, #4]
    1404:	cmp	r1, #0
    1408:	strne	r2, [r1, #8]
    140c:	streq	r2, [r3, #8]
    1410:	mov	r2, #0
    1414:	str	r2, [r0, #4]
    1418:	str	r2, [r0, #8]
    141c:	ldr	r2, [r3, #16]
    1420:	sub	r2, r2, #1
    1424:	str	r2, [r3, #16]
    1428:	bx	lr
    142c:	.word	0x00011c44
    1430:	.word	0x00000c2c
    1434:	.word	0x00000cee
    1438:	.word	0x00000d13
    143c:	.word	0x000000a0

00001440 <hurt_check_event>:
    1440:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    1444:	ldr	r8, [pc, #188]	; 1508 <hurt_check_event+0xc8>
    1448:	ldr	r3, [pc, #188]	; 150c <hurt_check_event+0xcc>
    144c:	add	r8, pc, r8
    1450:	ldr	r7, [r8, r3]
    1454:	ldr	r4, [r7, #8]
    1458:	cmp	r4, #0
    145c:	beq	1500 <hurt_check_event+0xc0>
    1460:	ldr	sl, [pc, #168]	; 1510 <hurt_check_event+0xd0>
    1464:	ldr	r6, [r4, #8]
    1468:	mov	r9, #0
    146c:	add	sl, pc, sl
    1470:	ldr	r5, [r4]
    1474:	ldr	r3, [r5, #24]
    1478:	cmn	r3, #40	; 0x28
    147c:	beq	14c8 <hurt_check_event+0x88>
    1480:	ldrb	r3, [r3, #40]	; 0x28
    1484:	cmp	r3, #0
    1488:	beq	14c8 <hurt_check_event+0x88>
    148c:	mov	r0, r4
    1490:	bl	13ac <rb_dlinkDelete.constprop.9>
    1494:	mov	r0, r4
    1498:	bl	a04 <rb_free_rb_dlink_node@plt>
    149c:	mov	r1, sl
    14a0:	mov	r0, r5
    14a4:	bl	aa0 <sendto_one_notice@plt>
    14a8:	ldr	r4, [r5, #432]	; 0x1b0
    14ac:	bl	98c <rb_current_time@plt>
    14b0:	str	r0, [r4, #416]	; 0x1a0
    14b4:	cmp	r6, #0
    14b8:	beq	1500 <hurt_check_event+0xc0>
    14bc:	mov	r4, r6
    14c0:	ldr	r6, [r6, #8]
    14c4:	b	1470 <hurt_check_event+0x30>
    14c8:	ldr	r2, [r5, #432]	; 0x1b0
    14cc:	ldrh	r3, [r7, #20]
    14d0:	ldr	r2, [r2, #116]	; 0x74
    14d4:	cmp	r2, r3
    14d8:	bls	14b4 <hurt_check_event+0x74>
    14dc:	ldr	r3, [pc, #48]	; 1514 <hurt_check_event+0xd4>
    14e0:	mov	r1, r5
    14e4:	mov	r0, r9
    14e8:	ldr	r3, [r8, r3]
    14ec:	str	r3, [sp, #4]
    14f0:	ldr	r2, [sp, #4]
    14f4:	ldr	r3, [r7, #28]
    14f8:	bl	ac4 <exit_client@plt>
    14fc:	b	14b4 <hurt_check_event+0x74>
    1500:	add	sp, sp, #8
    1504:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1508:	.word	0x00011bac
    150c:	.word	0x000000a0
    1510:	.word	0x00000d74
    1514:	.word	0x000000b4

00001518 <modfini>:
    1518:	push	{r4, r5, r6, lr}
    151c:	ldr	r4, [pc, #92]	; 1580 <modfini+0x68>
    1520:	ldr	r3, [pc, #92]	; 1584 <modfini+0x6c>
    1524:	add	r4, pc, r4
    1528:	ldr	r3, [r4, r3]
    152c:	ldr	r0, [r3]
    1530:	bl	9bc <rb_event_delete@plt>
    1534:	ldr	r3, [pc, #76]	; 1588 <modfini+0x70>
    1538:	ldr	r3, [r4, r3]
    153c:	ldr	r0, [r3]
    1540:	bl	9bc <rb_event_delete@plt>
    1544:	ldr	r3, [pc, #64]	; 158c <modfini+0x74>
    1548:	ldr	r3, [r4, r3]
    154c:	ldr	r4, [r3, #8]
    1550:	cmp	r4, #0
    1554:	popeq	{r4, r5, r6, pc}
    1558:	ldr	r5, [r4, #8]
    155c:	mov	r0, r4
    1560:	bl	13ac <rb_dlinkDelete.constprop.9>
    1564:	mov	r0, r4
    1568:	bl	a04 <rb_free_rb_dlink_node@plt>
    156c:	cmp	r5, #0
    1570:	popeq	{r4, r5, r6, pc}
    1574:	mov	r4, r5
    1578:	ldr	r5, [r5, #8]
    157c:	b	155c <modfini+0x44>
    1580:	.word	0x00011ad4
    1584:	.word	0x0000009c
    1588:	.word	0x000000a4
    158c:	.word	0x000000a0

00001590 <hurt_new>:
    1590:	push	{r4, r5, r6, r7, r8, lr}
    1594:	mov	r5, r0
    1598:	mov	r7, r1
    159c:	mov	r0, #1
    15a0:	mov	r1, #20
    15a4:	mov	r6, r2
    15a8:	bl	968 <calloc@plt>
    15ac:	subs	r4, r0, #0
    15b0:	bne	15b8 <hurt_new+0x28>
    15b4:	bl	9e0 <rb_outofmemory@plt>
    15b8:	mov	r0, r7
    15bc:	bl	efc <rb_strdup>
    15c0:	str	r0, [r4]
    15c4:	mov	r0, r6
    15c8:	bl	efc <rb_strdup>
    15cc:	str	r0, [r4, #12]
    15d0:	bl	98c <rb_current_time@plt>
    15d4:	add	r0, r0, r5
    15d8:	str	r0, [r4, #16]
    15dc:	mov	r0, r4
    15e0:	pop	{r4, r5, r6, r7, r8, pc}

000015e4 <mo_hurt>:
    15e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    15e8:	mov	r5, r2
    15ec:	ldr	r2, [r2, #24]
    15f0:	sub	sp, sp, #32
    15f4:	ldr	r7, [pc, #640]	; 187c <mo_hurt+0x298>
    15f8:	cmp	r2, #0
    15fc:	add	r7, pc, r7
    1600:	ldr	r8, [sp, #64]	; 0x40
    1604:	bne	163c <mo_hurt+0x58>
    1608:	ldr	r3, [pc, #624]	; 1880 <mo_hurt+0x29c>
    160c:	ldr	r1, [pc, #624]	; 1884 <mo_hurt+0x2a0>
    1610:	mov	r0, r5
    1614:	ldr	r2, [r7, r3]
    1618:	ldr	r3, [pc, #616]	; 1888 <mo_hurt+0x2a4>
    161c:	add	r2, r2, #88	; 0x58
    1620:	add	r3, pc, r3
    1624:	str	r3, [sp, #64]	; 0x40
    1628:	add	r1, pc, r1
    162c:	add	r3, r5, #88	; 0x58
    1630:	add	sp, sp, #32
    1634:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1638:	b	9b0 <sendto_one@plt>
    163c:	ldr	r0, [r2, #36]	; 0x24
    1640:	cmp	r0, #0
    1644:	beq	1608 <mo_hurt+0x24>
    1648:	ldr	r1, [pc, #572]	; 188c <mo_hurt+0x2a8>
    164c:	mov	r4, r3
    1650:	add	r1, pc, r1
    1654:	bl	ad0 <privilegeset_in_set@plt>
    1658:	cmp	r0, #0
    165c:	beq	1608 <mo_hurt+0x24>
    1660:	ldmib	r8, {r0, r6}
    1664:	cmp	r4, #3
    1668:	moveq	r4, r0
    166c:	beq	16a4 <mo_hurt+0xc0>
    1670:	cmp	r0, #0
    1674:	mov	r4, r6
    1678:	ldr	r6, [r8, #12]
    167c:	beq	16a4 <mo_hurt+0xc0>
    1680:	bl	a94 <valid_temp_time@plt>
    1684:	subs	r8, r0, #0
    1688:	bgt	16a8 <mo_hurt+0xc4>
    168c:	ldr	r1, [pc, #508]	; 1890 <mo_hurt+0x2ac>
    1690:	add	r1, pc, r1
    1694:	mov	r0, r5
    1698:	add	sp, sp, #32
    169c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    16a0:	b	aa0 <sendto_one_notice@plt>
    16a4:	ldr	r8, [pc, #488]	; 1894 <mo_hurt+0x2b0>
    16a8:	cmp	r6, #0
    16ac:	beq	16bc <mo_hurt+0xd8>
    16b0:	ldrb	r3, [r6]
    16b4:	cmp	r3, #0
    16b8:	bne	16c8 <mo_hurt+0xe4>
    16bc:	ldr	r1, [pc, #468]	; 1898 <mo_hurt+0x2b4>
    16c0:	add	r1, pc, r1
    16c4:	b	1694 <mo_hurt+0xb0>
    16c8:	mov	r1, #46	; 0x2e
    16cc:	mov	r0, r4
    16d0:	bl	a64 <strchr@plt>
    16d4:	cmp	r0, #0
    16d8:	bne	1724 <mo_hurt+0x140>
    16dc:	mov	r1, #58	; 0x3a
    16e0:	mov	r0, r4
    16e4:	bl	a64 <strchr@plt>
    16e8:	cmp	r0, #0
    16ec:	bne	1724 <mo_hurt+0x140>
    16f0:	mov	r0, r4
    16f4:	bl	ab8 <find_named_person@plt>
    16f8:	cmp	r0, #0
    16fc:	addne	r4, r0, #227	; 0xe3
    1700:	bne	1784 <mo_hurt+0x1a0>
    1704:	ldr	r2, [pc, #400]	; 189c <mo_hurt+0x2b8>
    1708:	mov	r3, r4
    170c:	add	r2, pc, r2
    1710:	ldr	r1, [pc, #392]	; 18a0 <mo_hurt+0x2bc>
    1714:	mov	r0, r5
    1718:	add	sp, sp, #32
    171c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1720:	b	a4c <sendto_one_numeric@plt>
    1724:	ldr	r1, [pc, #376]	; 18a4 <mo_hurt+0x2c0>
    1728:	mov	r2, #2
    172c:	add	r1, pc, r1
    1730:	mov	r0, r4
    1734:	bl	adc <strncmp@plt>
    1738:	mov	r1, #33	; 0x21
    173c:	cmp	r0, #0
    1740:	addeq	r4, r4, #2
    1744:	mov	r0, r4
    1748:	bl	a64 <strchr@plt>
    174c:	cmp	r0, #0
    1750:	bne	1768 <mo_hurt+0x184>
    1754:	mov	r1, #64	; 0x40
    1758:	mov	r0, r4
    175c:	bl	a64 <strchr@plt>
    1760:	cmp	r0, #0
    1764:	beq	1784 <mo_hurt+0x1a0>
    1768:	ldr	r1, [pc, #312]	; 18a8 <mo_hurt+0x2c4>
    176c:	mov	r2, r4
    1770:	add	r1, pc, r1
    1774:	mov	r0, r5
    1778:	add	sp, sp, #32
    177c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1780:	b	aa0 <sendto_one_notice@plt>
    1784:	mov	r0, r4
    1788:	bl	c68 <hurt_find>
    178c:	subs	r9, r0, #0
    1790:	beq	17b0 <mo_hurt+0x1cc>
    1794:	ldr	r1, [pc, #272]	; 18ac <mo_hurt+0x2c8>
    1798:	mov	r2, r4
    179c:	add	r1, pc, r1
    17a0:	mov	r0, r5
    17a4:	add	sp, sp, #32
    17a8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    17ac:	b	9b0 <sendto_one@plt>
    17b0:	mov	r0, r5
    17b4:	bl	9f8 <get_oper_name@plt>
    17b8:	mov	r1, #60	; 0x3c
    17bc:	str	r6, [sp, #8]
    17c0:	add	r5, r5, #88	; 0x58
    17c4:	mov	sl, r0
    17c8:	mov	r0, r8
    17cc:	bl	1da4 <__divsi3>
    17d0:	ldr	r2, [pc, #216]	; 18b0 <mo_hurt+0x2cc>
    17d4:	mov	r3, sl
    17d8:	str	r4, [sp]
    17dc:	mov	r1, r9
    17e0:	add	r2, pc, r2
    17e4:	str	r0, [sp, #4]
    17e8:	mov	r0, #256	; 0x100
    17ec:	bl	9ec <sendto_realops_snomask@plt>
    17f0:	mov	r2, r6
    17f4:	mov	r1, r4
    17f8:	mov	r0, r8
    17fc:	bl	1590 <hurt_new>
    1800:	mov	r4, r0
    1804:	bl	a40 <rb_make_rb_dlink_node@plt>
    1808:	ldr	r3, [pc, #164]	; 18b4 <mo_hurt+0x2d0>
    180c:	ldr	r3, [r7, r3]
    1810:	mov	r2, r3
    1814:	str	r3, [sp, #28]
    1818:	mov	r1, r0
    181c:	mov	r0, r4
    1820:	bl	1018 <rb_dlinkAdd>
    1824:	ldr	r6, [r4, #16]
    1828:	bl	98c <rb_current_time@plt>
    182c:	ldr	r3, [pc, #76]	; 1880 <mo_hurt+0x29c>
    1830:	mov	r2, r9
    1834:	mov	r1, r9
    1838:	ldr	r3, [r7, r3]
    183c:	str	r3, [sp, #28]
    1840:	ldr	r3, [r4, #12]
    1844:	str	r3, [sp, #16]
    1848:	ldr	r3, [r4]
    184c:	str	r5, [sp, #4]
    1850:	str	r3, [sp, #12]
    1854:	ldr	r3, [pc, #92]	; 18b8 <mo_hurt+0x2d4>
    1858:	add	r3, pc, r3
    185c:	str	r3, [sp]
    1860:	mov	r3, r9
    1864:	sub	r0, r6, r0
    1868:	str	r0, [sp, #8]
    186c:	ldr	r0, [sp, #28]
    1870:	bl	a1c <sendto_server@plt>
    1874:	add	sp, sp, #32
    1878:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    187c:	.word	0x000119fc
    1880:	.word	0x000000b4
    1884:	.word	0x00000be3
    1888:	.word	0x00000c17
    188c:	.word	0x00000be2
    1890:	.word	0x00000bad
    1894:	.word	0x00002760
    1898:	.word	0x00000ba0
    189c:	.word	0x00000b7d
    18a0:	.word	0x00000191
    18a4:	.word	0x00000b76
    18a8:	.word	0x00000b35
    18ac:	.word	0x00000b21
    18b0:	.word	0x00000af0
    18b4:	.word	0x00000094
    18b8:	.word	0x00000aaf

000018bc <hurt_destroy>:
    18bc:	push	{r4, lr}
    18c0:	subs	r4, r0, #0
    18c4:	popeq	{r4, pc}
    18c8:	ldr	r0, [r4]
    18cc:	cmp	r0, #0
    18d0:	beq	18d8 <hurt_destroy+0x1c>
    18d4:	bl	9c8 <free@plt>
    18d8:	ldr	r0, [r4, #12]
    18dc:	cmp	r0, #0
    18e0:	beq	18e8 <hurt_destroy+0x2c>
    18e4:	bl	9c8 <free@plt>
    18e8:	mov	r0, r4
    18ec:	pop	{r4, lr}
    18f0:	b	9c8 <free@plt>

000018f4 <hurt_remove>:
    18f4:	push	{r0, r1, r2, r4, r5, lr}
    18f8:	bl	f2c <hurt_find_exact>
    18fc:	ldr	r4, [pc, #40]	; 192c <hurt_remove+0x38>
    1900:	ldr	r3, [pc, #40]	; 1930 <hurt_remove+0x3c>
    1904:	add	r4, pc, r4
    1908:	ldr	r3, [r4, r3]
    190c:	mov	r1, r3
    1910:	str	r3, [sp, #4]
    1914:	mov	r5, r0
    1918:	bl	11d0 <rb_dlinkFindDestroy>
    191c:	mov	r0, r5
    1920:	add	sp, sp, #12
    1924:	pop	{r4, r5, lr}
    1928:	b	18bc <hurt_destroy>
    192c:	.word	0x000116f4
    1930:	.word	0x00000094

00001934 <mo_heal>:
    1934:	ldr	r3, [r2, #24]
    1938:	push	{r4, r5, r6, r7, lr}
    193c:	sub	sp, sp, #20
    1940:	ldr	r6, [pc, #520]	; 1b50 <mo_heal+0x21c>
    1944:	cmp	r3, #0
    1948:	add	r6, pc, r6
    194c:	mov	r4, r2
    1950:	ldr	r5, [sp, #40]	; 0x28
    1954:	bne	198c <mo_heal+0x58>
    1958:	ldr	r3, [pc, #500]	; 1b54 <mo_heal+0x220>
    195c:	ldr	r1, [pc, #500]	; 1b58 <mo_heal+0x224>
    1960:	mov	r0, r4
    1964:	ldr	r2, [r6, r3]
    1968:	ldr	r3, [pc, #492]	; 1b5c <mo_heal+0x228>
    196c:	add	r2, r2, #88	; 0x58
    1970:	add	r3, pc, r3
    1974:	str	r3, [sp, #40]	; 0x28
    1978:	add	r1, pc, r1
    197c:	add	r3, r4, #88	; 0x58
    1980:	add	sp, sp, #20
    1984:	pop	{r4, r5, r6, r7, lr}
    1988:	b	9b0 <sendto_one@plt>
    198c:	ldr	r0, [r3, #36]	; 0x24
    1990:	cmp	r0, #0
    1994:	beq	1958 <mo_heal+0x24>
    1998:	ldr	r1, [pc, #448]	; 1b60 <mo_heal+0x22c>
    199c:	add	r1, pc, r1
    19a0:	bl	ad0 <privilegeset_in_set@plt>
    19a4:	cmp	r0, #0
    19a8:	beq	1958 <mo_heal+0x24>
    19ac:	mov	r1, #0
    19b0:	ldr	r0, [r5, #4]
    19b4:	bl	a70 <clean_nick@plt>
    19b8:	subs	r7, r0, #0
    19bc:	beq	1a88 <mo_heal+0x154>
    19c0:	ldr	r0, [r5, #4]
    19c4:	bl	ab8 <find_named_person@plt>
    19c8:	cmp	r0, #0
    19cc:	bne	19f0 <mo_heal+0xbc>
    19d0:	ldr	r2, [pc, #396]	; 1b64 <mo_heal+0x230>
    19d4:	ldr	r3, [r5, #4]
    19d8:	add	r2, pc, r2
    19dc:	ldr	r1, [pc, #388]	; 1b68 <mo_heal+0x234>
    19e0:	mov	r0, r4
    19e4:	add	sp, sp, #20
    19e8:	pop	{r4, r5, r6, r7, lr}
    19ec:	b	a4c <sendto_one_numeric@plt>
    19f0:	ldrd	r2, [r0, #64]	; 0x40
    19f4:	mov	r3, #0
    19f8:	and	r2, r2, #8192	; 0x2000
    19fc:	orrs	r3, r2, r3
    1a00:	beq	1a18 <mo_heal+0xe4>
    1a04:	mov	r1, r0
    1a08:	mov	r0, r4
    1a0c:	add	sp, sp, #20
    1a10:	pop	{r4, r5, r6, r7, lr}
    1a14:	b	12d8 <heal_nick>
    1a18:	ldr	r1, [r0, #36]	; 0x24
    1a1c:	ldrh	ip, [r1, #80]	; 0x50
    1a20:	cmp	ip, #32
    1a24:	bne	1a44 <mo_heal+0x110>
    1a28:	ldrb	r3, [r1, #396]	; 0x18c
    1a2c:	cmp	r3, #0
    1a30:	beq	1a44 <mo_heal+0x110>
    1a34:	ldrb	r3, [r4, #396]	; 0x18c
    1a38:	cmp	r3, #0
    1a3c:	addne	r2, r4, #396	; 0x18c
    1a40:	bne	1a48 <mo_heal+0x114>
    1a44:	add	r2, r4, #88	; 0x58
    1a48:	ldr	r3, [r0, #32]
    1a4c:	cmp	ip, #32
    1a50:	add	r3, r3, #88	; 0x58
    1a54:	bne	1a74 <mo_heal+0x140>
    1a58:	ldrb	r1, [r1, #396]	; 0x18c
    1a5c:	cmp	r1, #0
    1a60:	beq	1a74 <mo_heal+0x140>
    1a64:	ldrb	r1, [r0, #396]	; 0x18c
    1a68:	cmp	r1, #0
    1a6c:	addne	r1, r0, #396	; 0x18c
    1a70:	bne	1a78 <mo_heal+0x144>
    1a74:	add	r1, r0, #88	; 0x58
    1a78:	str	r1, [sp, #40]	; 0x28
    1a7c:	ldr	r1, [pc, #232]	; 1b6c <mo_heal+0x238>
    1a80:	add	r1, pc, r1
    1a84:	b	1980 <mo_heal+0x4c>
    1a88:	ldr	r6, [r5, #4]
    1a8c:	mov	r1, #46	; 0x2e
    1a90:	mov	r0, r6
    1a94:	bl	a64 <strchr@plt>
    1a98:	cmp	r0, #0
    1a9c:	beq	1b34 <mo_heal+0x200>
    1aa0:	mov	r0, r6
    1aa4:	bl	f2c <hurt_find_exact>
    1aa8:	cmp	r0, #0
    1aac:	bne	1acc <mo_heal+0x198>
    1ab0:	ldr	r1, [pc, #184]	; 1b70 <mo_heal+0x23c>
    1ab4:	ldr	r2, [r5, #4]
    1ab8:	add	r1, pc, r1
    1abc:	mov	r0, r4
    1ac0:	add	sp, sp, #20
    1ac4:	pop	{r4, r5, r6, r7, lr}
    1ac8:	b	aa0 <sendto_one_notice@plt>
    1acc:	ldr	r0, [r5, #4]
    1ad0:	bl	18f4 <hurt_remove>
    1ad4:	mov	r0, r4
    1ad8:	bl	9f8 <get_oper_name@plt>
    1adc:	ldr	r3, [r5, #4]
    1ae0:	ldr	r2, [pc, #140]	; 1b74 <mo_heal+0x240>
    1ae4:	str	r3, [sp]
    1ae8:	mov	r1, r7
    1aec:	add	r2, pc, r2
    1af0:	add	r4, r4, #88	; 0x58
    1af4:	mov	r3, r0
    1af8:	mov	r0, #256	; 0x100
    1afc:	bl	9ec <sendto_realops_snomask@plt>
    1b00:	ldr	r3, [r5, #4]
    1b04:	mov	r2, r7
    1b08:	str	r3, [sp, #8]
    1b0c:	ldr	r3, [pc, #100]	; 1b78 <mo_heal+0x244>
    1b10:	str	r4, [sp, #4]
    1b14:	add	r3, pc, r3
    1b18:	str	r3, [sp]
    1b1c:	mov	r1, r7
    1b20:	mov	r3, r7
    1b24:	mov	r0, r7
    1b28:	bl	a1c <sendto_server@plt>
    1b2c:	add	sp, sp, #20
    1b30:	pop	{r4, r5, r6, r7, pc}
    1b34:	ldr	r1, [pc, #64]	; 1b7c <mo_heal+0x248>
    1b38:	mov	r2, r6
    1b3c:	add	r1, pc, r1
    1b40:	mov	r0, r4
    1b44:	add	sp, sp, #20
    1b48:	pop	{r4, r5, r6, r7, lr}
    1b4c:	b	9b0 <sendto_one@plt>
    1b50:	.word	0x000116b0
    1b54:	.word	0x000000b4
    1b58:	.word	0x00000893
    1b5c:	.word	0x000009b8
    1b60:	.word	0x00000987
    1b64:	.word	0x000008b1
    1b68:	.word	0x00000191
    1b6c:	.word	0x000008b0
    1b70:	.word	0x0000088d
    1b74:	.word	0x00000870
    1b78:	.word	0x0000085e
    1b7c:	.word	0x0000084a

00001b80 <me_heal>:
    1b80:	cmp	r3, #1
    1b84:	push	{r4, r5, r6, r7, r8, lr}
    1b88:	ldr	r4, [sp, #24]
    1b8c:	pople	{r4, r5, r6, r7, r8, pc}
    1b90:	mov	r1, #0
    1b94:	ldr	r0, [r4, #4]
    1b98:	mov	r5, r2
    1b9c:	bl	a70 <clean_nick@plt>
    1ba0:	subs	r7, r0, #0
    1ba4:	beq	1bd8 <me_heal+0x58>
    1ba8:	ldr	r0, [r4, #4]
    1bac:	bl	a88 <find_person@plt>
    1bb0:	subs	r1, r0, #0
    1bb4:	popeq	{r4, r5, r6, r7, r8, pc}
    1bb8:	ldrd	r2, [r1, #64]	; 0x40
    1bbc:	mov	r3, #0
    1bc0:	and	r2, r2, #8192	; 0x2000
    1bc4:	orrs	r3, r2, r3
    1bc8:	popeq	{r4, r5, r6, r7, r8, pc}
    1bcc:	mov	r0, r5
    1bd0:	pop	{r4, r5, r6, r7, r8, lr}
    1bd4:	b	12d8 <heal_nick>
    1bd8:	ldr	r6, [r4, #4]
    1bdc:	mov	r1, #46	; 0x2e
    1be0:	mov	r0, r6
    1be4:	bl	a64 <strchr@plt>
    1be8:	cmp	r0, #0
    1bec:	popeq	{r4, r5, r6, r7, r8, pc}
    1bf0:	mov	r0, r6
    1bf4:	bl	f2c <hurt_find_exact>
    1bf8:	cmp	r0, #0
    1bfc:	popeq	{r4, r5, r6, r7, r8, pc}
    1c00:	ldr	r0, [r4, #4]
    1c04:	bl	18f4 <hurt_remove>
    1c08:	mov	r0, r5
    1c0c:	bl	9f8 <get_oper_name@plt>
    1c10:	ldr	r3, [r4, #4]
    1c14:	ldr	r2, [pc, #24]	; 1c34 <me_heal+0xb4>
    1c18:	str	r3, [sp, #24]
    1c1c:	mov	r1, r7
    1c20:	add	r2, pc, r2
    1c24:	pop	{r4, r5, r6, r7, r8, lr}
    1c28:	mov	r3, r0
    1c2c:	mov	r0, #256	; 0x100
    1c30:	b	9ec <sendto_realops_snomask@plt>
    1c34:	.word	0x0000073c

00001c38 <hurt_expire_event>:
    1c38:	ldr	r3, [pc, #88]	; 1c98 <hurt_expire_event+0x60>
    1c3c:	ldr	r2, [pc, #88]	; 1c9c <hurt_expire_event+0x64>
    1c40:	add	r3, pc, r3
    1c44:	push	{r4, r5, r6, r7, r8, lr}
    1c48:	ldr	r6, [r3, r2]
    1c4c:	ldr	r3, [r6]
    1c50:	cmp	r3, #0
    1c54:	popeq	{r4, r5, r6, r7, r8, pc}
    1c58:	ldr	r4, [r3, #8]
    1c5c:	ldr	r5, [r3]
    1c60:	ldr	r7, [r5, #16]
    1c64:	bl	98c <rb_current_time@plt>
    1c68:	cmp	r7, r0
    1c6c:	bgt	1c84 <hurt_expire_event+0x4c>
    1c70:	mov	r1, r6
    1c74:	mov	r0, r5
    1c78:	bl	11d0 <rb_dlinkFindDestroy>
    1c7c:	mov	r0, r5
    1c80:	bl	18bc <hurt_destroy>
    1c84:	cmp	r4, #0
    1c88:	popeq	{r4, r5, r6, r7, r8, pc}
    1c8c:	mov	r3, r4
    1c90:	ldr	r4, [r4, #8]
    1c94:	b	1c5c <hurt_expire_event+0x24>
    1c98:	.word	0x000113b8
    1c9c:	.word	0x00000094

00001ca0 <me_hurt>:
    1ca0:	push	{r4, r5, r6, r7, r8, lr}
    1ca4:	sub	sp, sp, #24
    1ca8:	ldr	r6, [pc, #232]	; 1d98 <me_hurt+0xf8>
    1cac:	cmp	r3, #3
    1cb0:	add	r6, pc, r6
    1cb4:	ldr	r4, [sp, #48]	; 0x30
    1cb8:	ble	1d90 <me_hurt+0xf0>
    1cbc:	ldrh	r3, [r2, #80]	; 0x50
    1cc0:	cmp	r3, #64	; 0x40
    1cc4:	bne	1d90 <me_hurt+0xf0>
    1cc8:	ldr	r3, [r2, #24]
    1ccc:	cmp	r3, #0
    1cd0:	beq	1d90 <me_hurt+0xf0>
    1cd4:	ldr	r0, [r4, #4]
    1cd8:	mov	r5, r2
    1cdc:	bl	aac <atoi@plt>
    1ce0:	subs	r7, r0, #0
    1ce4:	ble	1d90 <me_hurt+0xf0>
    1ce8:	ldr	r0, [r4, #8]
    1cec:	bl	c68 <hurt_find>
    1cf0:	subs	r8, r0, #0
    1cf4:	bne	1d90 <me_hurt+0xf0>
    1cf8:	ldr	r3, [r4, #12]
    1cfc:	cmp	r3, #0
    1d00:	beq	1d90 <me_hurt+0xf0>
    1d04:	ldrb	r3, [r3]
    1d08:	cmp	r3, #0
    1d0c:	beq	1d90 <me_hurt+0xf0>
    1d10:	mov	r0, r5
    1d14:	bl	9f8 <get_oper_name@plt>
    1d18:	ldr	r3, [r4, #12]
    1d1c:	mov	r1, #60	; 0x3c
    1d20:	str	r3, [sp, #8]
    1d24:	mov	r5, r0
    1d28:	mov	r0, r7
    1d2c:	bl	1da4 <__divsi3>
    1d30:	ldr	r2, [pc, #100]	; 1d9c <me_hurt+0xfc>
    1d34:	mov	r1, r8
    1d38:	add	r2, pc, r2
    1d3c:	str	r0, [sp, #4]
    1d40:	ldr	r3, [r4, #8]
    1d44:	mov	r0, #256	; 0x100
    1d48:	str	r3, [sp]
    1d4c:	mov	r3, r5
    1d50:	bl	9ec <sendto_realops_snomask@plt>
    1d54:	ldr	r2, [r4, #12]
    1d58:	ldr	r1, [r4, #8]
    1d5c:	mov	r0, r7
    1d60:	bl	1590 <hurt_new>
    1d64:	mov	r4, r0
    1d68:	bl	a40 <rb_make_rb_dlink_node@plt>
    1d6c:	ldr	r3, [pc, #44]	; 1da0 <me_hurt+0x100>
    1d70:	ldr	r3, [r6, r3]
    1d74:	str	r3, [sp, #20]
    1d78:	mov	r2, r3
    1d7c:	mov	r1, r0
    1d80:	mov	r0, r4
    1d84:	add	sp, sp, #24
    1d88:	pop	{r4, r5, r6, r7, r8, lr}
    1d8c:	b	1018 <rb_dlinkAdd>
    1d90:	add	sp, sp, #24
    1d94:	pop	{r4, r5, r6, r7, r8, pc}
    1d98:	.word	0x00011348
    1d9c:	.word	0x00000598
    1da0:	.word	0x00000094

00001da4 <__divsi3>:
    1da4:	cmp	r1, #0
    1da8:	beq	1fb4 <.divsi3_skip_div0_test+0x208>

00001dac <.divsi3_skip_div0_test>:
    1dac:	eor	ip, r0, r1
    1db0:	rsbmi	r1, r1, #0
    1db4:	subs	r2, r1, #1
    1db8:	beq	1f80 <.divsi3_skip_div0_test+0x1d4>
    1dbc:	movs	r3, r0
    1dc0:	rsbmi	r3, r0, #0
    1dc4:	cmp	r3, r1
    1dc8:	bls	1f8c <.divsi3_skip_div0_test+0x1e0>
    1dcc:	tst	r1, r2
    1dd0:	beq	1f9c <.divsi3_skip_div0_test+0x1f0>
    1dd4:	clz	r2, r3
    1dd8:	clz	r0, r1
    1ddc:	sub	r2, r0, r2
    1de0:	rsbs	r2, r2, #31
    1de4:	addne	r2, r2, r2, lsl #1
    1de8:	mov	r0, #0
    1dec:	addne	pc, pc, r2, lsl #2
    1df0:	nop			; (mov r0, r0)
    1df4:	cmp	r3, r1, lsl #31
    1df8:	adc	r0, r0, r0
    1dfc:	subcs	r3, r3, r1, lsl #31
    1e00:	cmp	r3, r1, lsl #30
    1e04:	adc	r0, r0, r0
    1e08:	subcs	r3, r3, r1, lsl #30
    1e0c:	cmp	r3, r1, lsl #29
    1e10:	adc	r0, r0, r0
    1e14:	subcs	r3, r3, r1, lsl #29
    1e18:	cmp	r3, r1, lsl #28
    1e1c:	adc	r0, r0, r0
    1e20:	subcs	r3, r3, r1, lsl #28
    1e24:	cmp	r3, r1, lsl #27
    1e28:	adc	r0, r0, r0
    1e2c:	subcs	r3, r3, r1, lsl #27
    1e30:	cmp	r3, r1, lsl #26
    1e34:	adc	r0, r0, r0
    1e38:	subcs	r3, r3, r1, lsl #26
    1e3c:	cmp	r3, r1, lsl #25
    1e40:	adc	r0, r0, r0
    1e44:	subcs	r3, r3, r1, lsl #25
    1e48:	cmp	r3, r1, lsl #24
    1e4c:	adc	r0, r0, r0
    1e50:	subcs	r3, r3, r1, lsl #24
    1e54:	cmp	r3, r1, lsl #23
    1e58:	adc	r0, r0, r0
    1e5c:	subcs	r3, r3, r1, lsl #23
    1e60:	cmp	r3, r1, lsl #22
    1e64:	adc	r0, r0, r0
    1e68:	subcs	r3, r3, r1, lsl #22
    1e6c:	cmp	r3, r1, lsl #21
    1e70:	adc	r0, r0, r0
    1e74:	subcs	r3, r3, r1, lsl #21
    1e78:	cmp	r3, r1, lsl #20
    1e7c:	adc	r0, r0, r0
    1e80:	subcs	r3, r3, r1, lsl #20
    1e84:	cmp	r3, r1, lsl #19
    1e88:	adc	r0, r0, r0
    1e8c:	subcs	r3, r3, r1, lsl #19
    1e90:	cmp	r3, r1, lsl #18
    1e94:	adc	r0, r0, r0
    1e98:	subcs	r3, r3, r1, lsl #18
    1e9c:	cmp	r3, r1, lsl #17
    1ea0:	adc	r0, r0, r0
    1ea4:	subcs	r3, r3, r1, lsl #17
    1ea8:	cmp	r3, r1, lsl #16
    1eac:	adc	r0, r0, r0
    1eb0:	subcs	r3, r3, r1, lsl #16
    1eb4:	cmp	r3, r1, lsl #15
    1eb8:	adc	r0, r0, r0
    1ebc:	subcs	r3, r3, r1, lsl #15
    1ec0:	cmp	r3, r1, lsl #14
    1ec4:	adc	r0, r0, r0
    1ec8:	subcs	r3, r3, r1, lsl #14
    1ecc:	cmp	r3, r1, lsl #13
    1ed0:	adc	r0, r0, r0
    1ed4:	subcs	r3, r3, r1, lsl #13
    1ed8:	cmp	r3, r1, lsl #12
    1edc:	adc	r0, r0, r0
    1ee0:	subcs	r3, r3, r1, lsl #12
    1ee4:	cmp	r3, r1, lsl #11
    1ee8:	adc	r0, r0, r0
    1eec:	subcs	r3, r3, r1, lsl #11
    1ef0:	cmp	r3, r1, lsl #10
    1ef4:	adc	r0, r0, r0
    1ef8:	subcs	r3, r3, r1, lsl #10
    1efc:	cmp	r3, r1, lsl #9
    1f00:	adc	r0, r0, r0
    1f04:	subcs	r3, r3, r1, lsl #9
    1f08:	cmp	r3, r1, lsl #8
    1f0c:	adc	r0, r0, r0
    1f10:	subcs	r3, r3, r1, lsl #8
    1f14:	cmp	r3, r1, lsl #7
    1f18:	adc	r0, r0, r0
    1f1c:	subcs	r3, r3, r1, lsl #7
    1f20:	cmp	r3, r1, lsl #6
    1f24:	adc	r0, r0, r0
    1f28:	subcs	r3, r3, r1, lsl #6
    1f2c:	cmp	r3, r1, lsl #5
    1f30:	adc	r0, r0, r0
    1f34:	subcs	r3, r3, r1, lsl #5
    1f38:	cmp	r3, r1, lsl #4
    1f3c:	adc	r0, r0, r0
    1f40:	subcs	r3, r3, r1, lsl #4
    1f44:	cmp	r3, r1, lsl #3
    1f48:	adc	r0, r0, r0
    1f4c:	subcs	r3, r3, r1, lsl #3
    1f50:	cmp	r3, r1, lsl #2
    1f54:	adc	r0, r0, r0
    1f58:	subcs	r3, r3, r1, lsl #2
    1f5c:	cmp	r3, r1, lsl #1
    1f60:	adc	r0, r0, r0
    1f64:	subcs	r3, r3, r1, lsl #1
    1f68:	cmp	r3, r1
    1f6c:	adc	r0, r0, r0
    1f70:	subcs	r3, r3, r1
    1f74:	cmp	ip, #0
    1f78:	rsbmi	r0, r0, #0
    1f7c:	bx	lr
    1f80:	teq	ip, r0
    1f84:	rsbmi	r0, r0, #0
    1f88:	bx	lr
    1f8c:	movcc	r0, #0
    1f90:	asreq	r0, ip, #31
    1f94:	orreq	r0, r0, #1
    1f98:	bx	lr
    1f9c:	clz	r2, r1
    1fa0:	rsb	r2, r2, #31
    1fa4:	cmp	ip, #0
    1fa8:	lsr	r0, r3, r2
    1fac:	rsbmi	r0, r0, #0
    1fb0:	bx	lr
    1fb4:	cmp	r0, #0
    1fb8:	mvngt	r0, #-2147483648	; 0x80000000
    1fbc:	movlt	r0, #-2147483648	; 0x80000000
    1fc0:	b	1fe4 <__aeabi_idiv0>

00001fc4 <__aeabi_idivmod>:
    1fc4:	cmp	r1, #0
    1fc8:	beq	1fb4 <.divsi3_skip_div0_test+0x208>
    1fcc:	push	{r0, r1, lr}
    1fd0:	bl	1dac <.divsi3_skip_div0_test>
    1fd4:	pop	{r1, r2, lr}
    1fd8:	mul	r3, r2, r0
    1fdc:	sub	r1, r1, r3
    1fe0:	bx	lr

00001fe4 <__aeabi_idiv0>:
    1fe4:	push	{r1, lr}
    1fe8:	mov	r0, #8
    1fec:	bl	980 <raise@plt>
    1ff0:	pop	{r1, pc}

Disassembly of section .fini:

00001ff4 <_fini>:
    1ff4:	push	{r3, lr}
    1ff8:	pop	{r3, pc}
