
../repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

000125fc <.init>:
   125fc:	push	{r3, lr}
   12600:	bl	12b08 <_start@@Base+0x3c>
   12604:	pop	{r3, pc}

Disassembly of section .plt:

00012608 <coda_cursor_get_byte_size@plt-0x14>:
   12608:	push	{lr}		; (str lr, [sp, #-4]!)
   1260c:	ldr	lr, [pc, #4]	; 12618 <coda_cursor_get_byte_size@plt-0x4>
   12610:	add	lr, pc, lr
   12614:	ldr	pc, [lr, #8]!
   12618:	andeq	r9, r1, r8, ror #19

0001261c <coda_cursor_get_byte_size@plt>:
   1261c:	add	ip, pc, #0, 12
   12620:	add	ip, ip, #102400	; 0x19000
   12624:	ldr	pc, [ip, #2536]!	; 0x9e8

00012628 <coda_type_get_special_type_name@plt>:
   12628:	add	ip, pc, #0, 12
   1262c:	add	ip, ip, #102400	; 0x19000
   12630:	ldr	pc, [ip, #2528]!	; 0x9e0

00012634 <coda_set_option_use_fast_size_expressions@plt>:
   12634:	add	ip, pc, #0, 12
   12638:	add	ip, ip, #102400	; 0x19000
   1263c:	ldr	pc, [ip, #2520]!	; 0x9d8

00012640 <raise@plt>:
   12640:	add	ip, pc, #0, 12
   12644:	add	ip, ip, #102400	; 0x19000
   12648:	ldr	pc, [ip, #2512]!	; 0x9d0

0001264c <coda_get_option_bypass_special_types@plt>:
   1264c:	add	ip, pc, #0, 12
   12650:	add	ip, ip, #102400	; 0x19000
   12654:	ldr	pc, [ip, #2504]!	; 0x9c8

00012658 <coda_set_option_perform_boundary_checks@plt>:
   12658:	add	ip, pc, #0, 12
   1265c:	add	ip, ip, #102400	; 0x19000
   12660:	ldr	pc, [ip, #2496]!	; 0x9c0

00012664 <strcmp@plt>:
   12664:	add	ip, pc, #0, 12
   12668:	add	ip, ip, #102400	; 0x19000
   1266c:	ldr	pc, [ip, #2488]!	; 0x9b8

00012670 <strtol@plt>:
   12670:	add	ip, pc, #0, 12
   12674:	add	ip, ip, #102400	; 0x19000
   12678:	ldr	pc, [ip, #2480]!	; 0x9b0

0001267c <coda_type_get_record_field_hidden_status@plt>:
   1267c:	add	ip, pc, #0, 12
   12680:	add	ip, ip, #102400	; 0x19000
   12684:	ldr	pc, [ip, #2472]!	; 0x9a8

00012688 <printf@plt>:
   12688:	add	ip, pc, #0, 12
   1268c:	add	ip, ip, #102400	; 0x19000
   12690:	ldr	pc, [ip, #2464]!	; 0x9a0

00012694 <coda_cursor_get_record_field_available_status@plt>:
   12694:	add	ip, pc, #0, 12
   12698:	add	ip, ip, #102400	; 0x19000
   1269c:	ldr	pc, [ip, #2456]!	; 0x998

000126a0 <fopen@plt>:
   126a0:	add	ip, pc, #0, 12
   126a4:	add	ip, ip, #102400	; 0x19000
   126a8:	ldr	pc, [ip, #2448]!	; 0x990

000126ac <coda_set_error@plt>:
   126ac:	add	ip, pc, #0, 12
   126b0:	add	ip, ip, #102400	; 0x19000
   126b4:	ldr	pc, [ip, #2440]!	; 0x988

000126b8 <coda_open@plt>:
   126b8:	add	ip, pc, #0, 12
   126bc:	add	ip, ip, #102400	; 0x19000
   126c0:	ldr	pc, [ip, #2432]!	; 0x980

000126c4 <fflush@plt>:
   126c4:	add	ip, pc, #0, 12
   126c8:	add	ip, ip, #102400	; 0x19000
   126cc:	ldr	pc, [ip, #2424]!	; 0x978

000126d0 <coda_time_double_to_string@plt>:
   126d0:	add	ip, pc, #0, 12
   126d4:	add	ip, ip, #102400	; 0x19000
   126d8:	ldr	pc, [ip, #2416]!	; 0x970

000126dc <coda_cursor_get_num_elements@plt>:
   126dc:	add	ip, pc, #0, 12
   126e0:	add	ip, ip, #102400	; 0x19000
   126e4:	ldr	pc, [ip, #2408]!	; 0x968

000126e8 <coda_str64u@plt>:
   126e8:	add	ip, pc, #0, 12
   126ec:	add	ip, ip, #102400	; 0x19000
   126f0:	ldr	pc, [ip, #2400]!	; 0x960

000126f4 <free@plt>:
   126f4:	add	ip, pc, #0, 12
   126f8:	add	ip, ip, #102400	; 0x19000
   126fc:	ldr	pc, [ip, #2392]!	; 0x958

00012700 <coda_set_option_use_mmap@plt>:
   12700:	add	ip, pc, #0, 12
   12704:	add	ip, ip, #102400	; 0x19000
   12708:	ldr	pc, [ip, #2384]!	; 0x950

0001270c <coda_set_definition_path_conditional@plt>:
   1270c:	add	ip, pc, #0, 12
   12710:	add	ip, ip, #102400	; 0x19000
   12714:	ldr	pc, [ip, #2376]!	; 0x948

00012718 <coda_cursor_read_uint32@plt>:
   12718:	add	ip, pc, #0, 12
   1271c:	add	ip, ip, #102400	; 0x19000
   12720:	ldr	pc, [ip, #2368]!	; 0x940

00012724 <coda_set_option_bypass_special_types@plt>:
   12724:	add	ip, pc, #0, 12
   12728:	add	ip, ip, #102400	; 0x19000
   1272c:	ldr	pc, [ip, #2360]!	; 0x938

00012730 <coda_type_get_record_field_type@plt>:
   12730:	add	ip, pc, #0, 12
   12734:	add	ip, ip, #102400	; 0x19000
   12738:	ldr	pc, [ip, #2352]!	; 0x930

0001273c <coda_cursor_get_type@plt>:
   1273c:	add	ip, pc, #0, 12
   12740:	add	ip, ip, #102400	; 0x19000
   12744:	ldr	pc, [ip, #2344]!	; 0x928

00012748 <memcpy@plt>:
   12748:	add	ip, pc, #0, 12
   1274c:	add	ip, ip, #102400	; 0x19000
   12750:	ldr	pc, [ip, #2336]!	; 0x920

00012754 <coda_isInf@plt>:
   12754:	add	ip, pc, #0, 12
   12758:	add	ip, ip, #102400	; 0x19000
   1275c:	ldr	pc, [ip, #2328]!	; 0x918

00012760 <coda_type_get_bit_size@plt>:
   12760:	add	ip, pc, #0, 12
   12764:	add	ip, ip, #102400	; 0x19000
   12768:	ldr	pc, [ip, #2320]!	; 0x910

0001276c <coda_type_get_record_field_available_status@plt>:
   1276c:	add	ip, pc, #0, 12
   12770:	add	ip, ip, #102400	; 0x19000
   12774:	ldr	pc, [ip, #2312]!	; 0x908

00012778 <coda_cursor_has_attributes@plt>:
   12778:	add	ip, pc, #0, 12
   1277c:	add	ip, ip, #102400	; 0x19000
   12780:	ldr	pc, [ip, #2304]!	; 0x900

00012784 <coda_cursor_get_type_class@plt>:
   12784:	add	ip, pc, #0, 12
   12788:	add	ip, ip, #102400	; 0x19000
   1278c:	ldr	pc, [ip, #2296]!	; 0x8f8

00012790 <coda_set_definition_path@plt>:
   12790:	add	ip, pc, #0, 12
   12794:	add	ip, ip, #102400	; 0x19000
   12798:	ldr	pc, [ip, #2288]!	; 0x8f0

0001279c <coda_get_product_format@plt>:
   1279c:	add	ip, pc, #0, 12
   127a0:	add	ip, ip, #102400	; 0x19000
   127a4:	ldr	pc, [ip, #2280]!	; 0x8e8

000127a8 <coda_type_get_unit@plt>:
   127a8:	add	ip, pc, #0, 12
   127ac:	add	ip, ip, #102400	; 0x19000
   127b0:	ldr	pc, [ip, #2272]!	; 0x8e0

000127b4 <coda_type_get_description@plt>:
   127b4:	add	ip, pc, #0, 12
   127b8:	add	ip, ip, #102400	; 0x19000
   127bc:	ldr	pc, [ip, #2264]!	; 0x8d8

000127c0 <coda_cursor_get_special_type@plt>:
   127c0:	add	ip, pc, #0, 12
   127c4:	add	ip, ip, #102400	; 0x19000
   127c8:	ldr	pc, [ip, #2256]!	; 0x8d0

000127cc <coda_cursor_goto_first_array_element@plt>:
   127cc:	add	ip, pc, #0, 12
   127d0:	add	ip, ip, #102400	; 0x19000
   127d4:	ldr	pc, [ip, #2248]!	; 0x8c8

000127d8 <fwrite@plt>:
   127d8:	add	ip, pc, #0, 12
   127dc:	add	ip, ip, #102400	; 0x19000
   127e0:	ldr	pc, [ip, #2240]!	; 0x8c0

000127e4 <coda_cursor_set_product@plt>:
   127e4:	add	ip, pc, #0, 12
   127e8:	add	ip, ip, #102400	; 0x19000
   127ec:	ldr	pc, [ip, #2232]!	; 0x8b8

000127f0 <coda_cursor_goto_first_record_field@plt>:
   127f0:	add	ip, pc, #0, 12
   127f4:	add	ip, ip, #102400	; 0x19000
   127f8:	ldr	pc, [ip, #2224]!	; 0x8b0

000127fc <coda_cursor_goto_record_field_by_index@plt>:
   127fc:	add	ip, pc, #0, 12
   12800:	add	ip, ip, #102400	; 0x19000
   12804:	ldr	pc, [ip, #2216]!	; 0x8a8

00012808 <coda_done@plt>:
   12808:	add	ip, pc, #0, 12
   1280c:	add	ip, ip, #102400	; 0x19000
   12810:	ldr	pc, [ip, #2208]!	; 0x8a0

00012814 <puts@plt>:
   12814:	add	ip, pc, #0, 12
   12818:	add	ip, ip, #102400	; 0x19000
   1281c:	ldr	pc, [ip, #2200]!	; 0x898

00012820 <coda_cursor_get_read_type@plt>:
   12820:	add	ip, pc, #0, 12
   12824:	add	ip, ip, #102400	; 0x19000
   12828:	ldr	pc, [ip, #2192]!	; 0x890

0001282c <malloc@plt>:
   1282c:	add	ip, pc, #0, 12
   12830:	add	ip, ip, #102400	; 0x19000
   12834:	ldr	pc, [ip, #2184]!	; 0x888

00012838 <__libc_start_main@plt>:
   12838:	add	ip, pc, #0, 12
   1283c:	add	ip, ip, #102400	; 0x19000
   12840:	ldr	pc, [ip, #2176]!	; 0x880

00012844 <__gmon_start__@plt>:
   12844:	add	ip, pc, #0, 12
   12848:	add	ip, ip, #102400	; 0x19000
   1284c:	ldr	pc, [ip, #2168]!	; 0x878

00012850 <coda_cursor_read_string@plt>:
   12850:	add	ip, pc, #0, 12
   12854:	add	ip, ip, #102400	; 0x19000
   12858:	ldr	pc, [ip, #2160]!	; 0x870

0001285c <coda_cursor_goto_parent@plt>:
   1285c:	add	ip, pc, #0, 12
   12860:	add	ip, ip, #102400	; 0x19000
   12864:	ldr	pc, [ip, #2152]!	; 0x868

00012868 <coda_type_get_num_record_fields@plt>:
   12868:	add	ip, pc, #0, 12
   1286c:	add	ip, ip, #102400	; 0x19000
   12870:	ldr	pc, [ip, #2144]!	; 0x860

00012874 <exit@plt>:
   12874:	add	ip, pc, #0, 12
   12878:	add	ip, ip, #102400	; 0x19000
   1287c:	ldr	pc, [ip, #2136]!	; 0x858

00012880 <coda_type_get_read_type@plt>:
   12880:	add	ip, pc, #0, 12
   12884:	add	ip, ip, #102400	; 0x19000
   12888:	ldr	pc, [ip, #2128]!	; 0x850

0001288c <coda_cursor_get_string_length@plt>:
   1288c:	add	ip, pc, #0, 12
   12890:	add	ip, ip, #102400	; 0x19000
   12894:	ldr	pc, [ip, #2120]!	; 0x848

00012898 <coda_cursor_read_uint64@plt>:
   12898:	add	ip, pc, #0, 12
   1289c:	add	ip, ip, #102400	; 0x19000
   128a0:	ldr	pc, [ip, #2112]!	; 0x840

000128a4 <coda_cursor_read_double@plt>:
   128a4:	add	ip, pc, #0, 12
   128a8:	add	ip, ip, #102400	; 0x19000
   128ac:	ldr	pc, [ip, #2104]!	; 0x838

000128b0 <coda_isNaN@plt>:
   128b0:	add	ip, pc, #0, 12
   128b4:	add	ip, ip, #102400	; 0x19000
   128b8:	ldr	pc, [ip, #2096]!	; 0x830

000128bc <fprintf@plt>:
   128bc:	add	ip, pc, #0, 12
   128c0:	add	ip, ip, #102400	; 0x19000
   128c4:	ldr	pc, [ip, #2088]!	; 0x828

000128c8 <coda_cursor_goto_next_array_element@plt>:
   128c8:	add	ip, pc, #0, 12
   128cc:	add	ip, ip, #102400	; 0x19000
   128d0:	ldr	pc, [ip, #2080]!	; 0x820

000128d4 <coda_open_as@plt>:
   128d4:	add	ip, pc, #0, 12
   128d8:	add	ip, ip, #102400	; 0x19000
   128dc:	ldr	pc, [ip, #2072]!	; 0x818

000128e0 <coda_init@plt>:
   128e0:	add	ip, pc, #0, 12
   128e4:	add	ip, ip, #102400	; 0x19000
   128e8:	ldr	pc, [ip, #2064]!	; 0x810

000128ec <coda_set_option_perform_conversions@plt>:
   128ec:	add	ip, pc, #0, 12
   128f0:	add	ip, ip, #102400	; 0x19000
   128f4:	ldr	pc, [ip, #2056]!	; 0x808

000128f8 <coda_cursor_goto_attributes@plt>:
   128f8:	add	ip, pc, #0, 12
   128fc:	add	ip, ip, #102400	; 0x19000
   12900:	ldr	pc, [ip, #2048]!	; 0x800

00012904 <coda_cursor_read_char@plt>:
   12904:	add	ip, pc, #0, 12
   12908:	add	ip, ip, #102400	; 0x19000
   1290c:	ldr	pc, [ip, #2040]!	; 0x7f8

00012910 <memset@plt>:
   12910:	add	ip, pc, #0, 12
   12914:	add	ip, ip, #102400	; 0x19000
   12918:	ldr	pc, [ip, #2032]!	; 0x7f0

0001291c <putchar@plt>:
   1291c:	add	ip, pc, #0, 12
   12920:	add	ip, ip, #102400	; 0x19000
   12924:	ldr	pc, [ip, #2024]!	; 0x7e8

00012928 <strncpy@plt>:
   12928:	add	ip, pc, #0, 12
   1292c:	add	ip, ip, #102400	; 0x19000
   12930:	ldr	pc, [ip, #2016]!	; 0x7e0

00012934 <coda_type_get_special_type@plt>:
   12934:	add	ip, pc, #0, 12
   12938:	add	ip, ip, #102400	; 0x19000
   1293c:	ldr	pc, [ip, #2008]!	; 0x7d8

00012940 <coda_type_get_record_union_status@plt>:
   12940:	add	ip, pc, #0, 12
   12944:	add	ip, ip, #102400	; 0x19000
   12948:	ldr	pc, [ip, #2000]!	; 0x7d0

0001294c <coda_cursor_read_complex_double_split@plt>:
   1294c:	add	ip, pc, #0, 12
   12950:	add	ip, ip, #102400	; 0x19000
   12954:	ldr	pc, [ip, #1992]!	; 0x7c8

00012958 <coda_type_get_array_base_type@plt>:
   12958:	add	ip, pc, #0, 12
   1295c:	add	ip, ip, #102400	; 0x19000
   12960:	ldr	pc, [ip, #1984]!	; 0x7c0

00012964 <fclose@plt>:
   12964:	add	ip, pc, #0, 12
   12968:	add	ip, ip, #102400	; 0x19000
   1296c:	ldr	pc, [ip, #1976]!	; 0x7b8

00012970 <coda_type_get_string_length@plt>:
   12970:	add	ip, pc, #0, 12
   12974:	add	ip, ip, #102400	; 0x19000
   12978:	ldr	pc, [ip, #1968]!	; 0x7b0

0001297c <coda_type_get_native_type_name@plt>:
   1297c:	add	ip, pc, #0, 12
   12980:	add	ip, ip, #102400	; 0x19000
   12984:	ldr	pc, [ip, #1960]!	; 0x7a8

00012988 <coda_cursor_get_array_dim@plt>:
   12988:	add	ip, pc, #0, 12
   1298c:	add	ip, ip, #102400	; 0x19000
   12990:	ldr	pc, [ip, #1952]!	; 0x7a0

00012994 <coda_cursor_has_ascii_content@plt>:
   12994:	add	ip, pc, #0, 12
   12998:	add	ip, ip, #102400	; 0x19000
   1299c:	ldr	pc, [ip, #1944]!	; 0x798

000129a0 <coda_close@plt>:
   129a0:	add	ip, pc, #0, 12
   129a4:	add	ip, ip, #102400	; 0x19000
   129a8:	ldr	pc, [ip, #1936]!	; 0x790

000129ac <coda_cursor_read_int64@plt>:
   129ac:	add	ip, pc, #0, 12
   129b0:	add	ip, ip, #102400	; 0x19000
   129b4:	ldr	pc, [ip, #1928]!	; 0x788

000129b8 <vfprintf@plt>:
   129b8:	add	ip, pc, #0, 12
   129bc:	add	ip, ip, #102400	; 0x19000
   129c0:	ldr	pc, [ip, #1920]!	; 0x780

000129c4 <coda_cursor_goto@plt>:
   129c4:	add	ip, pc, #0, 12
   129c8:	add	ip, ip, #102400	; 0x19000
   129cc:	ldr	pc, [ip, #1912]!	; 0x778

000129d0 <coda_type_get_record_field_index_from_name@plt>:
   129d0:	add	ip, pc, #0, 12
   129d4:	add	ip, ip, #102400	; 0x19000
   129d8:	ldr	pc, [ip, #1904]!	; 0x770

000129dc <coda_cursor_read_complex_double_pair@plt>:
   129dc:	add	ip, pc, #0, 12
   129e0:	add	ip, ip, #102400	; 0x19000
   129e4:	ldr	pc, [ip, #1896]!	; 0x768

000129e8 <coda_cursor_goto_next_record_field@plt>:
   129e8:	add	ip, pc, #0, 12
   129ec:	add	ip, ip, #102400	; 0x19000
   129f0:	ldr	pc, [ip, #1888]!	; 0x760

000129f4 <fputc@plt>:
   129f4:	add	ip, pc, #0, 12
   129f8:	add	ip, ip, #102400	; 0x19000
   129fc:	ldr	pc, [ip, #1880]!	; 0x758

00012a00 <coda_type_get_array_dim@plt>:
   12a00:	add	ip, pc, #0, 12
   12a04:	add	ip, ip, #102400	; 0x19000
   12a08:	ldr	pc, [ip, #1872]!	; 0x750

00012a0c <coda_cursor_get_bit_size@plt>:
   12a0c:	add	ip, pc, #0, 12
   12a10:	add	ip, ip, #102400	; 0x19000
   12a14:	ldr	pc, [ip, #1864]!	; 0x748

00012a18 <coda_errno_to_string@plt>:
   12a18:	add	ip, pc, #0, 12
   12a1c:	add	ip, ip, #102400	; 0x19000
   12a20:	ldr	pc, [ip, #1856]!	; 0x740

00012a24 <coda_cursor_use_base_type_of_special_type@plt>:
   12a24:	add	ip, pc, #0, 12
   12a28:	add	ip, ip, #102400	; 0x19000
   12a2c:	ldr	pc, [ip, #1848]!	; 0x738

00012a30 <coda_cursor_get_available_union_field_index@plt>:
   12a30:	add	ip, pc, #0, 12
   12a34:	add	ip, ip, #102400	; 0x19000
   12a38:	ldr	pc, [ip, #1840]!	; 0x730

00012a3c <coda_cursor_read_int32@plt>:
   12a3c:	add	ip, pc, #0, 12
   12a40:	add	ip, ip, #102400	; 0x19000
   12a44:	ldr	pc, [ip, #1832]!	; 0x728

00012a48 <coda_cursor_get_file_bit_offset@plt>:
   12a48:	add	ip, pc, #0, 12
   12a4c:	add	ip, ip, #102400	; 0x19000
   12a50:	ldr	pc, [ip, #1824]!	; 0x720

00012a54 <coda_get_libcoda_version@plt>:
   12a54:	add	ip, pc, #0, 12
   12a58:	add	ip, ip, #102400	; 0x19000
   12a5c:	ldr	pc, [ip, #1816]!	; 0x718

00012a60 <coda_get_errno@plt>:
   12a60:	add	ip, pc, #0, 12
   12a64:	add	ip, ip, #102400	; 0x19000
   12a68:	ldr	pc, [ip, #1808]!	; 0x710

00012a6c <coda_type_get_special_base_type@plt>:
   12a6c:	add	ip, pc, #0, 12
   12a70:	add	ip, ip, #102400	; 0x19000
   12a74:	ldr	pc, [ip, #1800]!	; 0x708

00012a78 <coda_type_get_record_field_name@plt>:
   12a78:	add	ip, pc, #0, 12
   12a7c:	add	ip, ip, #102400	; 0x19000
   12a80:	ldr	pc, [ip, #1792]!	; 0x700

00012a84 <fputs@plt>:
   12a84:	add	ip, pc, #0, 12
   12a88:	add	ip, ip, #102400	; 0x19000
   12a8c:	ldr	pc, [ip, #1784]!	; 0x6f8

00012a90 <abort@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #102400	; 0x19000
   12a98:	ldr	pc, [ip, #1776]!	; 0x6f0

00012a9c <coda_cursor_read_bits@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #102400	; 0x19000
   12aa4:	ldr	pc, [ip, #1768]!	; 0x6e8

00012aa8 <coda_str64@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #102400	; 0x19000
   12ab0:	ldr	pc, [ip, #1760]!	; 0x6e0

00012ab4 <__assert_fail@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #102400	; 0x19000
   12abc:	ldr	pc, [ip, #1752]!	; 0x6d8

00012ac0 <coda_type_get_class@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #102400	; 0x19000
   12ac8:	ldr	pc, [ip, #1744]!	; 0x6d0

Disassembly of section .text:

00012acc <_start@@Base>:
   12acc:	mov	fp, #0
   12ad0:	mov	lr, #0
   12ad4:	pop	{r1}		; (ldr r1, [sp], #4)
   12ad8:	mov	r2, sp
   12adc:	push	{r2}		; (str r2, [sp, #-4]!)
   12ae0:	push	{r0}		; (str r0, [sp, #-4]!)
   12ae4:	ldr	ip, [pc, #16]	; 12afc <_start@@Base+0x30>
   12ae8:	push	{ip}		; (str ip, [sp, #-4]!)
   12aec:	ldr	r0, [pc, #12]	; 12b00 <_start@@Base+0x34>
   12af0:	ldr	r3, [pc, #12]	; 12b04 <_start@@Base+0x38>
   12af4:	bl	12838 <__libc_start_main@plt>
   12af8:	bl	12a90 <abort@plt>
   12afc:			; <UNDEFINED> instruction: 0x0001a4b4
   12b00:	andeq	r8, r1, ip, lsl r9
   12b04:	andeq	sl, r1, r4, asr r4
   12b08:	ldr	r3, [pc, #20]	; 12b24 <_start@@Base+0x58>
   12b0c:	ldr	r2, [pc, #20]	; 12b28 <_start@@Base+0x5c>
   12b10:	add	r3, pc, r3
   12b14:	ldr	r2, [r3, r2]
   12b18:	cmp	r2, #0
   12b1c:	bxeq	lr
   12b20:	b	12844 <__gmon_start__@plt>
   12b24:	andeq	r9, r1, r8, ror #9
   12b28:	muleq	r0, ip, r1
   12b2c:	ldr	r0, [pc, #24]	; 12b4c <_start@@Base+0x80>
   12b30:	ldr	r3, [pc, #24]	; 12b50 <_start@@Base+0x84>
   12b34:	cmp	r3, r0
   12b38:	bxeq	lr
   12b3c:	ldr	r3, [pc, #16]	; 12b54 <_start@@Base+0x88>
   12b40:	cmp	r3, #0
   12b44:	bxeq	lr
   12b48:	bx	r3
   12b4c:			; <UNDEFINED> instruction: 0x0002c1b0
   12b50:			; <UNDEFINED> instruction: 0x0002c1b0
   12b54:	andeq	r0, r0, r0
   12b58:	ldr	r0, [pc, #36]	; 12b84 <_start@@Base+0xb8>
   12b5c:	ldr	r1, [pc, #36]	; 12b88 <_start@@Base+0xbc>
   12b60:	sub	r1, r1, r0
   12b64:	asr	r1, r1, #2
   12b68:	add	r1, r1, r1, lsr #31
   12b6c:	asrs	r1, r1, #1
   12b70:	bxeq	lr
   12b74:	ldr	r3, [pc, #16]	; 12b8c <_start@@Base+0xc0>
   12b78:	cmp	r3, #0
   12b7c:	bxeq	lr
   12b80:	bx	r3
   12b84:			; <UNDEFINED> instruction: 0x0002c1b0
   12b88:			; <UNDEFINED> instruction: 0x0002c1b0
   12b8c:	andeq	r0, r0, r0
   12b90:	push	{r4, lr}
   12b94:	ldr	r4, [pc, #24]	; 12bb4 <_start@@Base+0xe8>
   12b98:	ldrb	r3, [r4]
   12b9c:	cmp	r3, #0
   12ba0:	popne	{r4, pc}
   12ba4:	bl	12b2c <_start@@Base+0x60>
   12ba8:	mov	r3, #1
   12bac:	strb	r3, [r4]
   12bb0:	pop	{r4, pc}
   12bb4:			; <UNDEFINED> instruction: 0x0002c1b8
   12bb8:	b	12b58 <_start@@Base+0x8c>

00012bbc <export_data_element_to_ascii@@Base>:
   12bbc:	push	{r4, sl, fp, lr}
   12bc0:	add	fp, sp, #8
   12bc4:	movw	r0, #49596	; 0xc1bc
   12bc8:	movw	r4, #53392	; 0xd090
   12bcc:	movt	r0, #2
   12bd0:	movt	r4, #2
   12bd4:	ldrb	r1, [r0]
   12bd8:	cmp	r1, #0
   12bdc:	beq	12bf0 <export_data_element_to_ascii@@Base+0x34>
   12be0:	ldr	r1, [r4]
   12be4:	mov	r0, #10
   12be8:	bl	129f4 <fputc@plt>
   12bec:	b	12bf8 <export_data_element_to_ascii@@Base+0x3c>
   12bf0:	mov	r1, #1
   12bf4:	strb	r1, [r0]
   12bf8:	movw	r0, #53792	; 0xd220
   12bfc:	movt	r0, #2
   12c00:	ldr	r0, [r0]
   12c04:	cmp	r0, #0
   12c08:	beq	12c28 <export_data_element_to_ascii@@Base+0x6c>
   12c0c:	ldr	r0, [r4]
   12c10:	mov	r1, #2
   12c14:	mov	r2, #0
   12c18:	bl	16e3c <print_full_field_name@@Base>
   12c1c:	ldr	r1, [r4]
   12c20:	mov	r0, #10
   12c24:	bl	129f4 <fputc@plt>
   12c28:	movw	r0, #53424	; 0xd0b0
   12c2c:	movt	r0, #2
   12c30:	ldr	r1, [r0]
   12c34:	cmp	r1, #1
   12c38:	blt	12c50 <export_data_element_to_ascii@@Base+0x94>
   12c3c:	add	r0, r0, r1, lsl #3
   12c40:	ldr	r1, [r0, #296]	; 0x128
   12c44:	ldr	r0, [r0, #300]	; 0x12c
   12c48:	orrs	r0, r1, r0
   12c4c:	popeq	{r4, sl, fp, pc}
   12c50:	ldr	r0, [r4]
   12c54:	mov	r1, #0
   12c58:	mov	r2, #0
   12c5c:	mov	r3, #0
   12c60:	pop	{r4, sl, fp, lr}
   12c64:	b	12c68 <export_data_element_to_ascii@@Base+0xac>
   12c68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c6c:	add	fp, sp, #28
   12c70:	sub	sp, sp, #108	; 0x6c
   12c74:	movw	r8, #49640	; 0xc1e8
   12c78:	mov	sl, r0
   12c7c:	mov	r6, r1
   12c80:	str	r3, [sp, #44]	; 0x2c
   12c84:	mov	r5, r2
   12c88:	movt	r8, #2
   12c8c:	add	r4, r8, r1, lsl #2
   12c90:	sub	r1, fp, #52	; 0x34
   12c94:	ldr	r0, [r4, #8]!
   12c98:	bl	12ac0 <coda_type_get_class@plt>
   12c9c:	cmp	r0, #0
   12ca0:	beq	12ca8 <export_data_element_to_ascii@@Base+0xec>
   12ca4:	bl	188d8 <handle_coda_error@@Base>
   12ca8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12cac:	cmp	r0, #0
   12cb0:	beq	12d9c <export_data_element_to_ascii@@Base+0x1e0>
   12cb4:	cmp	r0, #1
   12cb8:	bne	12e10 <export_data_element_to_ascii@@Base+0x254>
   12cbc:	add	r0, r5, r5, lsl #2
   12cc0:	cmp	r5, #0
   12cc4:	movw	ip, #53424	; 0xd0b0
   12cc8:	movt	ip, #2
   12ccc:	add	r4, r8, r0, lsl #4
   12cd0:	moveq	r0, #0
   12cd4:	ldr	r1, [r4, #800]	; 0x320
   12cd8:	streq	r0, [r8, #844]	; 0x34c
   12cdc:	mov	r2, r4
   12ce0:	ldr	r0, [r2, #804]!	; 0x324
   12ce4:	str	r2, [sp, #28]
   12ce8:	ldr	r2, [ip, #104]	; 0x68
   12cec:	add	lr, r0, r1
   12cf0:	cmp	r2, lr
   12cf4:	blt	12d18 <export_data_element_to_ascii@@Base+0x15c>
   12cf8:	ldr	r3, [r8, #3360]	; 0xd20
   12cfc:	sub	r3, r3, #1
   12d00:	cmp	r3, r5
   12d04:	ble	12d18 <export_data_element_to_ascii@@Base+0x15c>
   12d08:	ldr	r3, [r4, #840]	; 0x348
   12d0c:	ldr	r7, [r4, #844]	; 0x34c
   12d10:	mul	r3, r3, r7
   12d14:	str	r3, [r4, #924]	; 0x39c
   12d18:	cmp	r0, #1
   12d1c:	str	r6, [sp, #36]	; 0x24
   12d20:	str	r5, [sp, #24]
   12d24:	str	r4, [sp, #16]
   12d28:	str	r2, [sp, #20]
   12d2c:	blt	12fc0 <export_data_element_to_ascii@@Base+0x404>
   12d30:	add	r1, ip, r1, lsl #2
   12d34:	add	r2, r4, #848	; 0x350
   12d38:	add	r3, r4, #844	; 0x34c
   12d3c:	mov	r9, #1
   12d40:	mov	ip, #0
   12d44:	add	r6, sp, #48	; 0x30
   12d48:	mov	r5, #0
   12d4c:	add	r4, r1, r5
   12d50:	ldr	r7, [r4, #72]	; 0x48
   12d54:	cmp	r7, #0
   12d58:	bne	12d8c <export_data_element_to_ascii@@Base+0x1d0>
   12d5c:	add	r4, r4, #4
   12d60:	ldr	r7, [r4]
   12d64:	str	ip, [r2, r5]
   12d68:	subs	r0, r0, #1
   12d6c:	mul	r9, r7, r9
   12d70:	str	r7, [r6, r5]
   12d74:	add	r5, r5, #4
   12d78:	beq	12fb0 <export_data_element_to_ascii@@Base+0x3f4>
   12d7c:	add	r4, r1, r5
   12d80:	ldr	r7, [r4, #72]	; 0x48
   12d84:	cmp	r7, #0
   12d88:	beq	12d5c <export_data_element_to_ascii@@Base+0x1a0>
   12d8c:	ldr	r7, [r4, #108]	; 0x6c
   12d90:	ldr	r4, [r3]
   12d94:	add	r4, r7, r4, lsl #2
   12d98:	b	12d60 <export_data_element_to_ascii@@Base+0x1a4>
   12d9c:	ldr	r0, [sp, #44]	; 0x2c
   12da0:	add	r7, r8, #144	; 0x90
   12da4:	add	r2, sp, #48	; 0x30
   12da8:	add	r4, r8, r0, lsl #2
   12dac:	mov	r0, r7
   12db0:	ldr	r1, [r4, #3492]!	; 0xda4
   12db4:	bl	12694 <coda_cursor_get_record_field_available_status@plt>
   12db8:	cmp	r0, #0
   12dbc:	beq	12dc4 <export_data_element_to_ascii@@Base+0x208>
   12dc0:	bl	188d8 <handle_coda_error@@Base>
   12dc4:	ldr	r0, [sp, #48]	; 0x30
   12dc8:	cmp	r0, #0
   12dcc:	beq	12fb8 <export_data_element_to_ascii@@Base+0x3fc>
   12dd0:	ldr	r1, [r4]
   12dd4:	mov	r0, r7
   12dd8:	bl	127fc <coda_cursor_goto_record_field_by_index@plt>
   12ddc:	cmp	r0, #0
   12de0:	beq	12de8 <export_data_element_to_ascii@@Base+0x22c>
   12de4:	bl	188d8 <handle_coda_error@@Base>
   12de8:	ldr	r0, [sp, #44]	; 0x2c
   12dec:	add	r1, r6, #1
   12df0:	mov	r2, r5
   12df4:	add	r3, r0, #1
   12df8:	mov	r0, sl
   12dfc:	bl	12c68 <export_data_element_to_ascii@@Base+0xac>
   12e00:	mov	r0, r7
   12e04:	bl	1285c <coda_cursor_goto_parent@plt>
   12e08:	sub	sp, fp, #28
   12e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e10:	movw	r0, #53408	; 0xd0a0
   12e14:	str	r4, [sp, #40]	; 0x28
   12e18:	movt	r0, #2
   12e1c:	ldr	r0, [r0]
   12e20:	cmp	r0, #0
   12e24:	beq	12ef4 <export_data_element_to_ascii@@Base+0x338>
   12e28:	ldr	r0, [r8, #136]	; 0x88
   12e2c:	cmp	r0, #1
   12e30:	blt	12ef4 <export_data_element_to_ascii@@Base+0x338>
   12e34:	movw	r5, #53396	; 0xd094
   12e38:	movw	r6, #42427	; 0xa5bb
   12e3c:	mov	r7, #0
   12e40:	add	r4, sp, #48	; 0x30
   12e44:	mov	r9, #0
   12e48:	movt	r5, #2
   12e4c:	movt	r6, #1
   12e50:	b	12e7c <export_data_element_to_ascii@@Base+0x2c0>
   12e54:	ldr	r9, [sp, #44]	; 0x2c
   12e58:	movw	r8, #49640	; 0xc1e8
   12e5c:	mov	sl, r4
   12e60:	add	r4, sp, #48	; 0x30
   12e64:	movt	r8, #2
   12e68:	add	r9, r9, #1
   12e6c:	ldr	r0, [r8, #136]	; 0x88
   12e70:	add	r7, r7, #1
   12e74:	cmp	r7, r0
   12e78:	bge	12ef4 <export_data_element_to_ascii@@Base+0x338>
   12e7c:	add	r0, r8, r7, lsl #2
   12e80:	mov	r1, r4
   12e84:	ldr	r0, [r0, #8]
   12e88:	bl	12ac0 <coda_type_get_class@plt>
   12e8c:	cmp	r0, #0
   12e90:	beq	12e98 <export_data_element_to_ascii@@Base+0x2dc>
   12e94:	bl	188d8 <handle_coda_error@@Base>
   12e98:	ldr	r0, [sp, #48]	; 0x30
   12e9c:	cmp	r0, #1
   12ea0:	bne	12e6c <export_data_element_to_ascii@@Base+0x2b0>
   12ea4:	add	r0, r9, r9, lsl #2
   12ea8:	mov	r4, sl
   12eac:	str	r9, [sp, #44]	; 0x2c
   12eb0:	add	r0, r8, r0, lsl #4
   12eb4:	mov	r8, r0
   12eb8:	ldr	r1, [r8, #804]!	; 0x324
   12ebc:	cmp	r1, #1
   12ec0:	blt	12e54 <export_data_element_to_ascii@@Base+0x298>
   12ec4:	add	r9, r0, #848	; 0x350
   12ec8:	mov	sl, #0
   12ecc:	ldr	r2, [r9, sl, lsl #2]
   12ed0:	ldr	r3, [r5]
   12ed4:	mov	r0, r4
   12ed8:	mov	r1, r6
   12edc:	bl	128bc <fprintf@plt>
   12ee0:	ldr	r0, [r8]
   12ee4:	add	sl, sl, #1
   12ee8:	cmp	sl, r0
   12eec:	blt	12ecc <export_data_element_to_ascii@@Base+0x310>
   12ef0:	b	12e54 <export_data_element_to_ascii@@Base+0x298>
   12ef4:	ldr	r4, [sp, #40]	; 0x28
   12ef8:	sub	r1, fp, #32
   12efc:	ldr	r0, [r4]
   12f00:	bl	12ac0 <coda_type_get_class@plt>
   12f04:	cmp	r0, #0
   12f08:	beq	12f10 <export_data_element_to_ascii@@Base+0x354>
   12f0c:	bl	188d8 <handle_coda_error@@Base>
   12f10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f14:	sub	r1, r0, #2
   12f18:	cmp	r1, #4
   12f1c:	bcs	13104 <export_data_element_to_ascii@@Base+0x548>
   12f20:	ldr	r0, [r4]
   12f24:	sub	r1, fp, #36	; 0x24
   12f28:	bl	12880 <coda_type_get_read_type@plt>
   12f2c:	cmp	r0, #0
   12f30:	beq	12f38 <export_data_element_to_ascii@@Base+0x37c>
   12f34:	bl	188d8 <handle_coda_error@@Base>
   12f38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f3c:	add	r0, r0, #1
   12f40:	cmp	r0, #13
   12f44:	bhi	13704 <export_data_element_to_ascii@@Base+0xb48>
   12f48:	add	r1, pc, #0
   12f4c:	ldr	pc, [r1, r0, lsl #2]
   12f50:	andeq	r3, r1, r4, asr #14
   12f54:	andeq	r2, r1, r8, lsl #31
   12f58:			; <UNDEFINED> instruction: 0x000132b8
   12f5c:	andeq	r2, r1, r8, lsl #31
   12f60:			; <UNDEFINED> instruction: 0x000132b8
   12f64:	andeq	r2, r1, r8, lsl #31
   12f68:			; <UNDEFINED> instruction: 0x000132b8
   12f6c:	andeq	r3, r1, r0, ror r3
   12f70:	andeq	r3, r1, ip, asr #12
   12f74:	andeq	r3, r1, r8, ror #5
   12f78:	andeq	r3, r1, r8, ror #5
   12f7c:	andeq	r3, r1, r8, lsl #13
   12f80:	andeq	r3, r1, r0, lsr #7
   12f84:	andeq	r3, r1, r0, asr r4
   12f88:	add	r0, r8, #144	; 0x90
   12f8c:	add	r1, sp, #48	; 0x30
   12f90:	bl	12a3c <coda_cursor_read_int32@plt>
   12f94:	cmp	r0, #0
   12f98:	beq	12fa0 <export_data_element_to_ascii@@Base+0x3e4>
   12f9c:	bl	188d8 <handle_coda_error@@Base>
   12fa0:	ldr	r2, [sp, #48]	; 0x30
   12fa4:	movw	r1, #43992	; 0xabd8
   12fa8:	movt	r1, #1
   12fac:	b	132dc <export_data_element_to_ascii@@Base+0x720>
   12fb0:	cmp	r9, #0
   12fb4:	bne	12fc4 <export_data_element_to_ascii@@Base+0x408>
   12fb8:	sub	sp, fp, #28
   12fbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fc0:	mov	r9, #1
   12fc4:	add	r0, r8, #144	; 0x90
   12fc8:	mov	r4, lr
   12fcc:	str	r0, [sp, #32]
   12fd0:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   12fd4:	cmp	r0, #0
   12fd8:	beq	12fe0 <export_data_element_to_ascii@@Base+0x424>
   12fdc:	bl	188d8 <handle_coda_error@@Base>
   12fe0:	cmp	r9, #1
   12fe4:	blt	131e4 <export_data_element_to_ascii@@Base+0x628>
   12fe8:	ldr	r0, [sp, #24]
   12fec:	add	r6, r0, #1
   12ff0:	sub	r0, r9, #1
   12ff4:	str	r0, [sp, #40]	; 0x28
   12ff8:	ldr	r0, [sp, #36]	; 0x24
   12ffc:	add	r0, r0, #1
   13000:	str	r0, [sp, #36]	; 0x24
   13004:	ldr	r0, [sp, #20]
   13008:	cmp	r0, r4
   1300c:	blt	13134 <export_data_element_to_ascii@@Base+0x578>
   13010:	movw	r1, #49640	; 0xc1e8
   13014:	add	r0, r6, r6, lsl #2
   13018:	mov	r4, #0
   1301c:	mov	r7, #0
   13020:	movt	r1, #2
   13024:	add	r0, r1, r0, lsl #4
   13028:	add	r0, r0, #844	; 0x34c
   1302c:	str	r0, [sp, #20]
   13030:	ldr	r0, [sp, #16]
   13034:	add	r5, r0, #844	; 0x34c
   13038:	add	r0, sp, #48	; 0x30
   1303c:	sub	r8, r0, #4
   13040:	b	13050 <export_data_element_to_ascii@@Base+0x494>
   13044:	add	r7, r7, #1
   13048:	cmp	r7, r9
   1304c:	beq	131e4 <export_data_element_to_ascii@@Base+0x628>
   13050:	ldr	r1, [sp, #36]	; 0x24
   13054:	ldr	r3, [sp, #44]	; 0x2c
   13058:	mov	r0, sl
   1305c:	mov	r2, r6
   13060:	bl	12c68 <export_data_element_to_ascii@@Base+0xac>
   13064:	ldr	r0, [sp, #40]	; 0x28
   13068:	cmp	r7, r0
   1306c:	bge	13044 <export_data_element_to_ascii@@Base+0x488>
   13070:	ldr	r0, [sp, #32]
   13074:	bl	128c8 <coda_cursor_goto_next_array_element@plt>
   13078:	cmp	r0, #0
   1307c:	beq	13084 <export_data_element_to_ascii@@Base+0x4c8>
   13080:	bl	188d8 <handle_coda_error@@Base>
   13084:	movw	r0, #49640	; 0xc1e8
   13088:	ldr	r1, [sp, #24]
   1308c:	movt	r0, #2
   13090:	ldr	r0, [r0, #3360]	; 0xd20
   13094:	sub	r0, r0, #1
   13098:	cmp	r0, r1
   1309c:	ble	130b0 <export_data_element_to_ascii@@Base+0x4f4>
   130a0:	ldr	r1, [sp, #20]
   130a4:	ldr	r0, [r1]
   130a8:	add	r0, r0, #1
   130ac:	str	r0, [r1]
   130b0:	movw	r0, #53408	; 0xd0a0
   130b4:	movt	r0, #2
   130b8:	ldr	r0, [r0]
   130bc:	cmp	r0, #0
   130c0:	beq	13044 <export_data_element_to_ascii@@Base+0x488>
   130c4:	ldr	r0, [sp, #28]
   130c8:	ldr	r0, [r0]
   130cc:	cmp	r0, #1
   130d0:	blt	13044 <export_data_element_to_ascii@@Base+0x488>
   130d4:	ldr	r1, [r5, r0, lsl #2]
   130d8:	ldr	r2, [r8, r0, lsl #2]
   130dc:	add	r1, r1, #1
   130e0:	cmp	r1, r2
   130e4:	str	r1, [r5, r0, lsl #2]
   130e8:	bne	13044 <export_data_element_to_ascii@@Base+0x488>
   130ec:	sub	r1, r0, #1
   130f0:	str	r4, [r5, r0, lsl #2]
   130f4:	cmp	r1, #0
   130f8:	mov	r0, r1
   130fc:	bgt	130d4 <export_data_element_to_ascii@@Base+0x518>
   13100:	b	13044 <export_data_element_to_ascii@@Base+0x488>
   13104:	cmp	r0, #6
   13108:	beq	131f4 <export_data_element_to_ascii@@Base+0x638>
   1310c:	cmp	r0, #2
   13110:	bcs	13704 <export_data_element_to_ascii@@Base+0xb48>
   13114:	movw	r0, #42730	; 0xa6ea
   13118:	movw	r1, #42238	; 0xa4fe
   1311c:	movw	r3, #42358	; 0xa576
   13120:	mov	r2, #368	; 0x170
   13124:	movt	r0, #1
   13128:	movt	r1, #1
   1312c:	movt	r3, #1
   13130:	bl	12ab4 <__assert_fail@plt>
   13134:	ldr	r0, [sp, #16]
   13138:	mov	r7, #0
   1313c:	mov	r8, #0
   13140:	add	r4, r0, #844	; 0x34c
   13144:	add	r0, sp, #48	; 0x30
   13148:	sub	r5, r0, #4
   1314c:	b	1315c <export_data_element_to_ascii@@Base+0x5a0>
   13150:	add	r8, r8, #1
   13154:	cmp	r8, r9
   13158:	beq	131e4 <export_data_element_to_ascii@@Base+0x628>
   1315c:	ldr	r1, [sp, #36]	; 0x24
   13160:	ldr	r3, [sp, #44]	; 0x2c
   13164:	mov	r0, sl
   13168:	mov	r2, r6
   1316c:	bl	12c68 <export_data_element_to_ascii@@Base+0xac>
   13170:	ldr	r0, [sp, #40]	; 0x28
   13174:	cmp	r8, r0
   13178:	bge	13150 <export_data_element_to_ascii@@Base+0x594>
   1317c:	ldr	r0, [sp, #32]
   13180:	bl	128c8 <coda_cursor_goto_next_array_element@plt>
   13184:	cmp	r0, #0
   13188:	beq	13190 <export_data_element_to_ascii@@Base+0x5d4>
   1318c:	bl	188d8 <handle_coda_error@@Base>
   13190:	movw	r0, #53408	; 0xd0a0
   13194:	movt	r0, #2
   13198:	ldr	r0, [r0]
   1319c:	cmp	r0, #0
   131a0:	beq	13150 <export_data_element_to_ascii@@Base+0x594>
   131a4:	ldr	r0, [sp, #28]
   131a8:	ldr	r0, [r0]
   131ac:	cmp	r0, #1
   131b0:	blt	13150 <export_data_element_to_ascii@@Base+0x594>
   131b4:	ldr	r1, [r4, r0, lsl #2]
   131b8:	ldr	r2, [r5, r0, lsl #2]
   131bc:	add	r1, r1, #1
   131c0:	cmp	r1, r2
   131c4:	str	r1, [r4, r0, lsl #2]
   131c8:	bne	13150 <export_data_element_to_ascii@@Base+0x594>
   131cc:	sub	r1, r0, #1
   131d0:	str	r7, [r4, r0, lsl #2]
   131d4:	cmp	r1, #0
   131d8:	mov	r0, r1
   131dc:	bgt	131b4 <export_data_element_to_ascii@@Base+0x5f8>
   131e0:	b	13150 <export_data_element_to_ascii@@Base+0x594>
   131e4:	ldr	r0, [sp, #32]
   131e8:	bl	1285c <coda_cursor_goto_parent@plt>
   131ec:	sub	sp, fp, #28
   131f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131f4:	ldr	r0, [r4]
   131f8:	sub	r1, fp, #36	; 0x24
   131fc:	bl	12934 <coda_type_get_special_type@plt>
   13200:	cmp	r0, #0
   13204:	beq	1320c <export_data_element_to_ascii@@Base+0x650>
   13208:	bl	188d8 <handle_coda_error@@Base>
   1320c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13210:	sub	r1, r0, #1
   13214:	cmp	r1, #2
   13218:	bcs	13324 <export_data_element_to_ascii@@Base+0x768>
   1321c:	add	r0, r8, #144	; 0x90
   13220:	sub	r1, fp, #48	; 0x30
   13224:	bl	128a4 <coda_cursor_read_double@plt>
   13228:	cmp	r0, #0
   1322c:	beq	13234 <export_data_element_to_ascii@@Base+0x678>
   13230:	bl	188d8 <handle_coda_error@@Base>
   13234:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13238:	cmp	r0, #2
   1323c:	bne	136c4 <export_data_element_to_ascii@@Base+0xb08>
   13240:	movw	r0, #49628	; 0xc1dc
   13244:	movt	r0, #2
   13248:	ldr	r0, [r0]
   1324c:	cmp	r0, #0
   13250:	beq	136c4 <export_data_element_to_ascii@@Base+0xb08>
   13254:	vldr	d0, [fp, #-48]	; 0xffffffd0
   13258:	bl	128b0 <coda_isNaN@plt>
   1325c:	cmp	r0, #0
   13260:	bne	13274 <export_data_element_to_ascii@@Base+0x6b8>
   13264:	vldr	d0, [fp, #-48]	; 0xffffffd0
   13268:	bl	12754 <coda_isInf@plt>
   1326c:	cmp	r0, #0
   13270:	beq	13720 <export_data_element_to_ascii@@Base+0xb64>
   13274:	movw	r1, #42440	; 0xa5c8
   13278:	mov	r0, #11
   1327c:	movt	r1, #1
   13280:	vld1.64	{d16-d17}, [r1], r0
   13284:	vld1.8	{d18-d19}, [r1]
   13288:	add	r1, sp, #48	; 0x30
   1328c:	vst1.64	{d16-d17}, [r1], r0
   13290:	vst1.8	{d18-d19}, [r1]
   13294:	movw	r0, #53796	; 0xd224
   13298:	movt	r0, #2
   1329c:	ldr	r0, [r0]
   132a0:	cmp	r0, #0
   132a4:	beq	13718 <export_data_element_to_ascii@@Base+0xb5c>
   132a8:	movw	r1, #44227	; 0xacc3
   132ac:	add	r2, sp, #48	; 0x30
   132b0:	movt	r1, #1
   132b4:	b	132dc <export_data_element_to_ascii@@Base+0x720>
   132b8:	add	r0, r8, #144	; 0x90
   132bc:	add	r1, sp, #48	; 0x30
   132c0:	bl	12718 <coda_cursor_read_uint32@plt>
   132c4:	cmp	r0, #0
   132c8:	beq	132d0 <export_data_element_to_ascii@@Base+0x714>
   132cc:	bl	188d8 <handle_coda_error@@Base>
   132d0:	ldr	r2, [sp, #48]	; 0x30
   132d4:	movw	r1, #42343	; 0xa567
   132d8:	movt	r1, #1
   132dc:	mov	r0, sl
   132e0:	bl	128bc <fprintf@plt>
   132e4:	b	13704 <export_data_element_to_ascii@@Base+0xb48>
   132e8:	add	r0, r8, #144	; 0x90
   132ec:	add	r1, sp, #48	; 0x30
   132f0:	bl	128a4 <coda_cursor_read_double@plt>
   132f4:	cmp	r0, #0
   132f8:	beq	13300 <export_data_element_to_ascii@@Base+0x744>
   132fc:	bl	188d8 <handle_coda_error@@Base>
   13300:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13304:	vldr	d16, [sp, #48]	; 0x30
   13308:	movw	r2, #42347	; 0xa56b
   1330c:	movw	r1, #42352	; 0xa570
   13310:	movt	r2, #1
   13314:	movt	r1, #1
   13318:	cmp	r0, #8
   1331c:	moveq	r1, r2
   13320:	b	136d0 <export_data_element_to_ascii@@Base+0xb14>
   13324:	cmp	r0, #3
   13328:	bne	13704 <export_data_element_to_ascii@@Base+0xb48>
   1332c:	add	r0, r8, #144	; 0x90
   13330:	add	r1, sp, #48	; 0x30
   13334:	bl	129dc <coda_cursor_read_complex_double_pair@plt>
   13338:	cmp	r0, #0
   1333c:	beq	13344 <export_data_element_to_ascii@@Base+0x788>
   13340:	bl	188d8 <handle_coda_error@@Base>
   13344:	movw	r0, #53396	; 0xd094
   13348:	vldr	d16, [sp, #48]	; 0x30
   1334c:	vldr	d17, [sp, #56]	; 0x38
   13350:	movw	r1, #42420	; 0xa5b4
   13354:	movt	r0, #2
   13358:	movt	r1, #1
   1335c:	ldr	r0, [r0]
   13360:	vstr	d17, [sp, #8]
   13364:	vmov	r2, r3, d16
   13368:	str	r0, [sp]
   1336c:	b	136d4 <export_data_element_to_ascii@@Base+0xb18>
   13370:	add	r0, r8, #144	; 0x90
   13374:	sub	r1, fp, #48	; 0x30
   13378:	bl	129ac <coda_cursor_read_int64@plt>
   1337c:	cmp	r0, #0
   13380:	beq	13388 <export_data_element_to_ascii@@Base+0x7cc>
   13384:	bl	188d8 <handle_coda_error@@Base>
   13388:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1338c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13390:	add	r5, sp, #48	; 0x30
   13394:	mov	r2, r5
   13398:	bl	12aa8 <coda_str64@plt>
   1339c:	b	13678 <export_data_element_to_ascii@@Base+0xabc>
   133a0:	add	r6, r8, #144	; 0x90
   133a4:	add	r1, sp, #48	; 0x30
   133a8:	mov	r0, r6
   133ac:	bl	1288c <coda_cursor_get_string_length@plt>
   133b0:	cmp	r0, #0
   133b4:	beq	133bc <export_data_element_to_ascii@@Base+0x800>
   133b8:	bl	188d8 <handle_coda_error@@Base>
   133bc:	ldr	r0, [sp, #48]	; 0x30
   133c0:	add	r7, r0, #1
   133c4:	mov	r0, r7
   133c8:	bl	1282c <malloc@plt>
   133cc:	mov	r5, r0
   133d0:	cmp	r0, #0
   133d4:	bne	13408 <export_data_element_to_ascii@@Base+0x84c>
   133d8:	movw	r1, #42185	; 0xa4c9
   133dc:	movw	r3, #42238	; 0xa4fe
   133e0:	mov	r0, #126	; 0x7e
   133e4:	mov	r2, r7
   133e8:	movt	r1, #1
   133ec:	movt	r3, #1
   133f0:	str	r0, [sp]
   133f4:	mvn	r0, #0
   133f8:	bl	126ac <coda_set_error@plt>
   133fc:	bl	188d8 <handle_coda_error@@Base>
   13400:	ldr	r0, [sp, #48]	; 0x30
   13404:	add	r7, r0, #1
   13408:	mov	r0, r6
   1340c:	mov	r1, r5
   13410:	mov	r2, r7
   13414:	bl	12850 <coda_cursor_read_string@plt>
   13418:	cmp	r0, #0
   1341c:	beq	13424 <export_data_element_to_ascii@@Base+0x868>
   13420:	bl	188d8 <handle_coda_error@@Base>
   13424:	movw	r0, #53796	; 0xd224
   13428:	movt	r0, #2
   1342c:	ldr	r0, [r0]
   13430:	cmp	r0, #0
   13434:	beq	136e0 <export_data_element_to_ascii@@Base+0xb24>
   13438:	movw	r1, #44227	; 0xacc3
   1343c:	mov	r0, sl
   13440:	mov	r2, r5
   13444:	movt	r1, #1
   13448:	bl	128bc <fprintf@plt>
   1344c:	b	136ec <export_data_element_to_ascii@@Base+0xb30>
   13450:	add	r0, r8, #144	; 0x90
   13454:	add	r1, sp, #48	; 0x30
   13458:	str	sl, [sp, #44]	; 0x2c
   1345c:	str	r0, [sp, #40]	; 0x28
   13460:	bl	12a0c <coda_cursor_get_bit_size@plt>
   13464:	cmp	r0, #0
   13468:	beq	13470 <export_data_element_to_ascii@@Base+0x8b4>
   1346c:	bl	188d8 <handle_coda_error@@Base>
   13470:	ldr	sl, [sp, #48]	; 0x30
   13474:	ldr	r7, [sp, #52]	; 0x34
   13478:	lsr	r0, sl, #3
   1347c:	asr	r4, r7, #3
   13480:	orr	r0, r0, r7, lsl #29
   13484:	adds	r5, r0, #1
   13488:	adc	r9, r4, #0
   1348c:	ands	r8, sl, #7
   13490:	moveq	r5, r0
   13494:	mov	r0, r5
   13498:	bl	1282c <malloc@plt>
   1349c:	cmp	r8, #0
   134a0:	mov	r6, r0
   134a4:	moveq	r9, r4
   134a8:	cmp	r0, #0
   134ac:	bne	134e0 <export_data_element_to_ascii@@Base+0x924>
   134b0:	movw	r1, #42185	; 0xa4c9
   134b4:	movw	r3, #42238	; 0xa4fe
   134b8:	mov	r0, #163	; 0xa3
   134bc:	mov	r2, r5
   134c0:	movt	r1, #1
   134c4:	movt	r3, #1
   134c8:	str	r0, [sp]
   134cc:	mvn	r0, #0
   134d0:	bl	126ac <coda_set_error@plt>
   134d4:	bl	188d8 <handle_coda_error@@Base>
   134d8:	ldr	sl, [sp, #48]	; 0x30
   134dc:	ldr	r7, [sp, #52]	; 0x34
   134e0:	ldr	r0, [sp, #40]	; 0x28
   134e4:	mov	r1, r6
   134e8:	mov	r2, #0
   134ec:	mov	r3, #0
   134f0:	str	sl, [sp]
   134f4:	str	r7, [sp, #4]
   134f8:	bl	12a9c <coda_cursor_read_bits@plt>
   134fc:	cmp	r0, #0
   13500:	beq	13508 <export_data_element_to_ascii@@Base+0x94c>
   13504:	bl	188d8 <handle_coda_error@@Base>
   13508:	ldr	sl, [sp, #44]	; 0x2c
   1350c:	subs	r0, r5, #1
   13510:	sbcs	r0, r9, #0
   13514:	blt	13640 <export_data_element_to_ascii@@Base+0xa84>
   13518:	movw	r7, #42328	; 0xa558
   1351c:	movw	r8, #42331	; 0xa55b
   13520:	mov	r4, #0
   13524:	movt	r7, #1
   13528:	movt	r8, #1
   1352c:	ldrb	r2, [r6, r4]
   13530:	sub	r0, r2, #7
   13534:	cmp	r0, #6
   13538:	bls	13578 <export_data_element_to_ascii@@Base+0x9bc>
   1353c:	b	135a8 <export_data_element_to_ascii@@Base+0x9ec>
   13540:	movw	r0, #42325	; 0xa555
   13544:	movt	r0, #1
   13548:	mov	r1, #2
   1354c:	mov	r2, #1
   13550:	mov	r3, sl
   13554:	bl	127d8 <fwrite@plt>
   13558:	add	r4, r4, #1
   1355c:	subs	r0, r4, r5
   13560:	rscs	r0, r9, #0
   13564:	bge	13640 <export_data_element_to_ascii@@Base+0xa84>
   13568:	ldrb	r2, [r6, r4]
   1356c:	sub	r0, r2, #7
   13570:	cmp	r0, #6
   13574:	bhi	135a8 <export_data_element_to_ascii@@Base+0x9ec>
   13578:	add	r1, pc, #0
   1357c:	ldr	pc, [r1, r0, lsl #2]
   13580:	muleq	r1, ip, r5
   13584:	andeq	r3, r1, r8, asr #11
   13588:			; <UNDEFINED> instruction: 0x000135bc
   1358c:	ldrdeq	r3, [r1], -r4
   13590:	andeq	r3, r1, r0, asr #10
   13594:	andeq	r3, r1, r0, ror #11
   13598:	andeq	r3, r1, r8, ror #11
   1359c:	movw	r0, #42313	; 0xa549
   135a0:	movt	r0, #1
   135a4:	b	13548 <export_data_element_to_ascii@@Base+0x98c>
   135a8:	cmp	r2, #92	; 0x5c
   135ac:	bne	135f0 <export_data_element_to_ascii@@Base+0xa34>
   135b0:	movw	r0, #42334	; 0xa55e
   135b4:	movt	r0, #1
   135b8:	b	13548 <export_data_element_to_ascii@@Base+0x98c>
   135bc:	movw	r0, #42319	; 0xa54f
   135c0:	movt	r0, #1
   135c4:	b	13548 <export_data_element_to_ascii@@Base+0x98c>
   135c8:	movw	r0, #42316	; 0xa54c
   135cc:	movt	r0, #1
   135d0:	b	13548 <export_data_element_to_ascii@@Base+0x98c>
   135d4:	movw	r0, #42322	; 0xa552
   135d8:	movt	r0, #1
   135dc:	b	13548 <export_data_element_to_ascii@@Base+0x98c>
   135e0:	mov	r0, r7
   135e4:	b	13548 <export_data_element_to_ascii@@Base+0x98c>
   135e8:	mov	r0, r8
   135ec:	b	13548 <export_data_element_to_ascii@@Base+0x98c>
   135f0:	sub	r0, r2, #32
   135f4:	uxtb	r0, r0
   135f8:	cmp	r0, #94	; 0x5e
   135fc:	bhi	13620 <export_data_element_to_ascii@@Base+0xa64>
   13600:	mov	r0, r2
   13604:	mov	r1, sl
   13608:	bl	129f4 <fputc@plt>
   1360c:	add	r4, r4, #1
   13610:	subs	r0, r4, r5
   13614:	rscs	r0, r9, #0
   13618:	blt	13568 <export_data_element_to_ascii@@Base+0x9ac>
   1361c:	b	13640 <export_data_element_to_ascii@@Base+0xa84>
   13620:	movw	r1, #42337	; 0xa561
   13624:	mov	r0, sl
   13628:	movt	r1, #1
   1362c:	bl	128bc <fprintf@plt>
   13630:	add	r4, r4, #1
   13634:	subs	r0, r4, r5
   13638:	rscs	r0, r9, #0
   1363c:	blt	13568 <export_data_element_to_ascii@@Base+0x9ac>
   13640:	mov	r0, r6
   13644:	bl	126f4 <free@plt>
   13648:	b	13704 <export_data_element_to_ascii@@Base+0xb48>
   1364c:	add	r0, r8, #144	; 0x90
   13650:	sub	r1, fp, #48	; 0x30
   13654:	bl	12898 <coda_cursor_read_uint64@plt>
   13658:	cmp	r0, #0
   1365c:	beq	13664 <export_data_element_to_ascii@@Base+0xaa8>
   13660:	bl	188d8 <handle_coda_error@@Base>
   13664:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13668:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1366c:	add	r5, sp, #48	; 0x30
   13670:	mov	r2, r5
   13674:	bl	126e8 <coda_str64u@plt>
   13678:	mov	r0, r5
   1367c:	mov	r1, sl
   13680:	bl	12a84 <fputs@plt>
   13684:	b	13704 <export_data_element_to_ascii@@Base+0xb48>
   13688:	add	r0, r8, #144	; 0x90
   1368c:	add	r1, sp, #48	; 0x30
   13690:	bl	12904 <coda_cursor_read_char@plt>
   13694:	cmp	r0, #0
   13698:	beq	136a0 <export_data_element_to_ascii@@Base+0xae4>
   1369c:	bl	188d8 <handle_coda_error@@Base>
   136a0:	movw	r0, #53796	; 0xd224
   136a4:	ldrb	r2, [sp, #48]	; 0x30
   136a8:	movt	r0, #2
   136ac:	ldr	r0, [r0]
   136b0:	cmp	r0, #0
   136b4:	beq	136f8 <export_data_element_to_ascii@@Base+0xb3c>
   136b8:	movw	r1, #42180	; 0xa4c4
   136bc:	movt	r1, #1
   136c0:	b	132dc <export_data_element_to_ascii@@Base+0x720>
   136c4:	vldr	d16, [fp, #-48]	; 0xffffffd0
   136c8:	movw	r1, #42352	; 0xa570
   136cc:	movt	r1, #1
   136d0:	vmov	r2, r3, d16
   136d4:	mov	r0, sl
   136d8:	bl	128bc <fprintf@plt>
   136dc:	b	13704 <export_data_element_to_ascii@@Base+0xb48>
   136e0:	mov	r0, r5
   136e4:	mov	r1, sl
   136e8:	bl	12a84 <fputs@plt>
   136ec:	mov	r0, r5
   136f0:	bl	126f4 <free@plt>
   136f4:	b	13704 <export_data_element_to_ascii@@Base+0xb48>
   136f8:	mov	r0, r2
   136fc:	mov	r1, sl
   13700:	bl	129f4 <fputc@plt>
   13704:	mov	r0, #10
   13708:	mov	r1, sl
   1370c:	bl	129f4 <fputc@plt>
   13710:	sub	sp, fp, #28
   13714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13718:	add	r0, sp, #48	; 0x30
   1371c:	b	1367c <export_data_element_to_ascii@@Base+0xac0>
   13720:	vldr	d0, [fp, #-48]	; 0xffffffd0
   13724:	movw	r0, #42393	; 0xa599
   13728:	add	r1, sp, #48	; 0x30
   1372c:	movt	r0, #1
   13730:	bl	126d0 <coda_time_double_to_string@plt>
   13734:	cmp	r0, #0
   13738:	beq	13294 <export_data_element_to_ascii@@Base+0x6d8>
   1373c:	bl	188d8 <handle_coda_error@@Base>
   13740:	b	13294 <export_data_element_to_ascii@@Base+0x6d8>
   13744:	movw	r0, #42730	; 0xa6ea
   13748:	movw	r1, #42238	; 0xa4fe
   1374c:	movw	r3, #42358	; 0xa576
   13750:	movw	r2, #294	; 0x126
   13754:	movt	r0, #1
   13758:	movt	r1, #1
   1375c:	movt	r3, #1
   13760:	bl	12ab4 <__assert_fail@plt>

00013764 <print_debug_data@@Base>:
   13764:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13768:	add	fp, sp, #24
   1376c:	sub	sp, sp, #536	; 0x218
   13770:	movw	r7, #49640	; 0xc1e8
   13774:	mov	r6, r0
   13778:	mov	r5, r1
   1377c:	mov	r4, r2
   13780:	sub	r1, fp, #28
   13784:	movt	r7, #2
   13788:	cmp	r6, #0
   1378c:	ldr	r0, [r7]
   13790:	beq	137f0 <print_debug_data@@Base+0x8c>
   13794:	str	r1, [sp]
   13798:	mov	r1, r6
   1379c:	mov	r2, r5
   137a0:	mov	r3, r4
   137a4:	bl	128d4 <coda_open_as@plt>
   137a8:	cmp	r0, #0
   137ac:	beq	1381c <print_debug_data@@Base+0xb8>
   137b0:	bl	12a60 <coda_get_errno@plt>
   137b4:	ldr	r0, [r0]
   137b8:	cmn	r0, #21
   137bc:	bne	13818 <print_debug_data@@Base+0xb4>
   137c0:	mov	r0, #0
   137c4:	bl	12700 <coda_set_option_use_mmap@plt>
   137c8:	ldr	r0, [r7]
   137cc:	sub	r1, fp, #28
   137d0:	cmp	r6, #0
   137d4:	beq	13800 <print_debug_data@@Base+0x9c>
   137d8:	str	r1, [sp]
   137dc:	mov	r1, r6
   137e0:	mov	r2, r5
   137e4:	mov	r3, r4
   137e8:	bl	128d4 <coda_open_as@plt>
   137ec:	b	13804 <print_debug_data@@Base+0xa0>
   137f0:	bl	126b8 <coda_open@plt>
   137f4:	cmp	r0, #0
   137f8:	bne	137b0 <print_debug_data@@Base+0x4c>
   137fc:	b	1381c <print_debug_data@@Base+0xb8>
   13800:	bl	126b8 <coda_open@plt>
   13804:	mov	r4, r0
   13808:	mov	r0, #1
   1380c:	bl	12700 <coda_set_option_use_mmap@plt>
   13810:	cmp	r4, #0
   13814:	beq	1381c <print_debug_data@@Base+0xb8>
   13818:	bl	188d8 <handle_coda_error@@Base>
   1381c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13820:	add	r1, sp, #4
   13824:	bl	1279c <coda_get_product_format@plt>
   13828:	cmp	r0, #0
   1382c:	beq	13834 <print_debug_data@@Base+0xd0>
   13830:	bl	188d8 <handle_coda_error@@Base>
   13834:	ldr	r0, [sp, #4]
   13838:	mov	r1, #0
   1383c:	cmp	r0, #3
   13840:	movw	r0, #49576	; 0xc1a8
   13844:	movt	r0, #2
   13848:	movwcc	r1, #1
   1384c:	str	r1, [r0]
   13850:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13854:	add	r0, sp, #8
   13858:	bl	127e4 <coda_cursor_set_product@plt>
   1385c:	cmp	r0, #0
   13860:	beq	13868 <print_debug_data@@Base+0x104>
   13864:	bl	188d8 <handle_coda_error@@Base>
   13868:	movw	r0, #53416	; 0xd0a8
   1386c:	movt	r0, #2
   13870:	ldr	r1, [r0]
   13874:	cmp	r1, #0
   13878:	beq	13890 <print_debug_data@@Base+0x12c>
   1387c:	add	r0, sp, #8
   13880:	bl	129c4 <coda_cursor_goto@plt>
   13884:	cmp	r0, #0
   13888:	beq	13890 <print_debug_data@@Base+0x12c>
   1388c:	bl	188d8 <handle_coda_error@@Base>
   13890:	mov	r0, #0
   13894:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   13898:	add	r0, sp, #8
   1389c:	mov	r1, #0
   138a0:	bl	138b4 <print_debug_data@@Base+0x150>
   138a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   138a8:	bl	129a0 <coda_close@plt>
   138ac:	sub	sp, fp, #24
   138b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   138b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138b8:	add	fp, sp, #28
   138bc:	sub	sp, sp, #644	; 0x284
   138c0:	str	r1, [sp, #24]
   138c4:	sub	r1, fp, #40	; 0x28
   138c8:	mov	r4, r0
   138cc:	bl	12778 <coda_cursor_has_attributes@plt>
   138d0:	cmp	r0, #0
   138d4:	beq	138dc <print_debug_data@@Base+0x178>
   138d8:	bl	188d8 <handle_coda_error@@Base>
   138dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   138e0:	str	r4, [sp, #28]
   138e4:	cmp	r0, #0
   138e8:	beq	13948 <print_debug_data@@Base+0x1e4>
   138ec:	mov	r0, r4
   138f0:	bl	128f8 <coda_cursor_goto_attributes@plt>
   138f4:	cmp	r0, #0
   138f8:	beq	13900 <print_debug_data@@Base+0x19c>
   138fc:	bl	188d8 <handle_coda_error@@Base>
   13900:	movw	r0, #42472	; 0xa5e8
   13904:	movt	r0, #1
   13908:	bl	145b8 <print_debug_data@@Base+0xe54>
   1390c:	movw	r4, #49600	; 0xc1c0
   13910:	ldr	r5, [sp, #28]
   13914:	ldr	r1, [sp, #24]
   13918:	movt	r4, #2
   1391c:	ldr	r0, [r4]
   13920:	add	r0, r0, #1
   13924:	str	r0, [r4]
   13928:	mov	r0, r5
   1392c:	bl	138b4 <print_debug_data@@Base+0x150>
   13930:	ldr	r0, [r4]
   13934:	sub	r0, r0, #1
   13938:	str	r0, [r4]
   1393c:	mov	r0, r5
   13940:	mov	r4, r5
   13944:	bl	1285c <coda_cursor_goto_parent@plt>
   13948:	sub	r1, fp, #36	; 0x24
   1394c:	mov	r0, r4
   13950:	bl	12784 <coda_cursor_get_type_class@plt>
   13954:	cmp	r0, #0
   13958:	beq	13960 <print_debug_data@@Base+0x1fc>
   1395c:	bl	188d8 <handle_coda_error@@Base>
   13960:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13964:	cmp	r0, #6
   13968:	bhi	14558 <print_debug_data@@Base+0xdf4>
   1396c:	add	r1, pc, #0
   13970:	ldr	pc, [r1, r0, lsl #2]
   13974:	strdeq	r3, [r1], -r8
   13978:	andeq	r3, r1, r0, lsl #25
   1397c:	muleq	r1, r0, r9
   13980:	muleq	r1, r0, r9
   13984:	muleq	r1, r0, r9
   13988:	muleq	r1, r0, r9
   1398c:	andeq	r3, r1, r0, lsl #26
   13990:	sub	r1, fp, #96	; 0x60
   13994:	mov	r0, r4
   13998:	bl	12994 <coda_cursor_has_ascii_content@plt>
   1399c:	cmp	r0, #0
   139a0:	beq	139a8 <print_debug_data@@Base+0x244>
   139a4:	bl	188d8 <handle_coda_error@@Base>
   139a8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   139ac:	cmp	r0, #0
   139b0:	beq	13a64 <print_debug_data@@Base+0x300>
   139b4:	add	r1, sp, #32
   139b8:	mov	r0, r4
   139bc:	bl	1288c <coda_cursor_get_string_length@plt>
   139c0:	cmp	r0, #0
   139c4:	beq	139cc <print_debug_data@@Base+0x268>
   139c8:	bl	188d8 <handle_coda_error@@Base>
   139cc:	ldr	r0, [sp, #32]
   139d0:	add	r6, r0, #1
   139d4:	mov	r0, r6
   139d8:	bl	1282c <malloc@plt>
   139dc:	mov	r5, r0
   139e0:	cmp	r0, #0
   139e4:	bne	13a18 <print_debug_data@@Base+0x2b4>
   139e8:	movw	r1, #42185	; 0xa4c9
   139ec:	movw	r3, #42499	; 0xa603
   139f0:	movw	r0, #410	; 0x19a
   139f4:	mov	r2, r6
   139f8:	movt	r1, #1
   139fc:	movt	r3, #1
   13a00:	str	r0, [sp]
   13a04:	mvn	r0, #0
   13a08:	bl	126ac <coda_set_error@plt>
   13a0c:	bl	188d8 <handle_coda_error@@Base>
   13a10:	ldr	r0, [sp, #32]
   13a14:	add	r6, r0, #1
   13a18:	mov	r0, r4
   13a1c:	mov	r1, r5
   13a20:	mov	r2, r6
   13a24:	bl	12850 <coda_cursor_read_string@plt>
   13a28:	cmp	r0, #0
   13a2c:	beq	13a34 <print_debug_data@@Base+0x2d0>
   13a30:	bl	188d8 <handle_coda_error@@Base>
   13a34:	movw	r0, #43972	; 0xabc4
   13a38:	movt	r0, #1
   13a3c:	bl	145b8 <print_debug_data@@Base+0xe54>
   13a40:	ldr	r1, [sp, #32]
   13a44:	mov	r0, r5
   13a48:	bl	146b0 <print_debug_data@@Base+0xf4c>
   13a4c:	ldr	r1, [sp, #32]
   13a50:	movw	r0, #42574	; 0xa64e
   13a54:	movt	r0, #1
   13a58:	bl	14668 <print_debug_data@@Base+0xf04>
   13a5c:	mov	r0, r5
   13a60:	bl	126f4 <free@plt>
   13a64:	sub	r1, fp, #120	; 0x78
   13a68:	mov	r0, r4
   13a6c:	bl	12820 <coda_cursor_get_read_type@plt>
   13a70:	cmp	r0, #0
   13a74:	beq	13a7c <print_debug_data@@Base+0x318>
   13a78:	bl	188d8 <handle_coda_error@@Base>
   13a7c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13a80:	add	r0, r0, #1
   13a84:	cmp	r0, #13
   13a88:	bhi	14558 <print_debug_data@@Base+0xdf4>
   13a8c:	add	r1, pc, #0
   13a90:	ldr	pc, [r1, r0, lsl #2]
   13a94:	andeq	r3, r1, ip, asr #21
   13a98:	muleq	r1, r0, sp
   13a9c:	andeq	r3, r1, r0, ror #26
   13aa0:	muleq	r1, r0, sp
   13aa4:	andeq	r3, r1, r0, ror #26
   13aa8:	muleq	r1, r0, sp
   13aac:	andeq	r3, r1, r0, ror #26
   13ab0:	andeq	r3, r1, r8, asr lr
   13ab4:	andeq	r3, r1, r8, lsl #29
   13ab8:	andeq	r3, r1, r0, asr #27
   13abc:	andeq	r3, r1, r0, asr #27
   13ac0:	andeq	r3, r1, ip, asr #21
   13ac4:	andeq	r3, r1, ip, asr #21
   13ac8:	andeq	r3, r1, ip, asr #29
   13acc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13ad0:	cmp	r0, #0
   13ad4:	bne	14558 <print_debug_data@@Base+0xdf4>
   13ad8:	movw	r0, #42615	; 0xa677
   13adc:	movw	r1, #42499	; 0xa603
   13ae0:	movw	r3, #42633	; 0xa689
   13ae4:	mov	r2, #548	; 0x224
   13ae8:	movt	r0, #1
   13aec:	movt	r1, #1
   13af0:	movt	r3, #1
   13af4:	bl	12ab4 <__assert_fail@plt>
   13af8:	sub	r1, fp, #120	; 0x78
   13afc:	mov	r0, r4
   13b00:	bl	126dc <coda_cursor_get_num_elements@plt>
   13b04:	cmp	r0, #0
   13b08:	beq	13b10 <print_debug_data@@Base+0x3ac>
   13b0c:	bl	188d8 <handle_coda_error@@Base>
   13b10:	ldr	r0, [fp, #-120]	; 0xffffff88
   13b14:	cmp	r0, #1
   13b18:	blt	14558 <print_debug_data@@Base+0xdf4>
   13b1c:	sub	r1, fp, #96	; 0x60
   13b20:	mov	r0, r4
   13b24:	bl	1273c <coda_cursor_get_type@plt>
   13b28:	cmp	r0, #0
   13b2c:	beq	13b34 <print_debug_data@@Base+0x3d0>
   13b30:	bl	188d8 <handle_coda_error@@Base>
   13b34:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13b38:	sub	r1, fp, #44	; 0x2c
   13b3c:	bl	12940 <coda_type_get_record_union_status@plt>
   13b40:	cmp	r0, #0
   13b44:	beq	13b4c <print_debug_data@@Base+0x3e8>
   13b48:	bl	188d8 <handle_coda_error@@Base>
   13b4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b50:	cmp	r0, #0
   13b54:	beq	13fe8 <print_debug_data@@Base+0x884>
   13b58:	sub	r1, fp, #48	; 0x30
   13b5c:	mov	r0, r4
   13b60:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   13b64:	cmp	r0, #0
   13b68:	beq	13b70 <print_debug_data@@Base+0x40c>
   13b6c:	bl	188d8 <handle_coda_error@@Base>
   13b70:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13b74:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13b78:	sub	r2, fp, #52	; 0x34
   13b7c:	bl	12a78 <coda_type_get_record_field_name@plt>
   13b80:	cmp	r0, #0
   13b84:	beq	13b8c <print_debug_data@@Base+0x428>
   13b88:	bl	188d8 <handle_coda_error@@Base>
   13b8c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13b90:	mov	r0, r4
   13b94:	bl	127fc <coda_cursor_goto_record_field_by_index@plt>
   13b98:	cmp	r0, #0
   13b9c:	beq	13ba4 <print_debug_data@@Base+0x440>
   13ba0:	bl	188d8 <handle_coda_error@@Base>
   13ba4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13ba8:	movw	r0, #44221	; 0xacbd
   13bac:	movt	r0, #1
   13bb0:	bl	145b8 <print_debug_data@@Base+0xe54>
   13bb4:	movw	r0, #49576	; 0xc1a8
   13bb8:	movt	r0, #2
   13bbc:	ldr	r0, [r0]
   13bc0:	cmp	r0, #0
   13bc4:	beq	13c2c <print_debug_data@@Base+0x4c8>
   13bc8:	sub	r1, fp, #88	; 0x58
   13bcc:	mov	r0, r4
   13bd0:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   13bd4:	cmp	r0, #0
   13bd8:	beq	13be0 <print_debug_data@@Base+0x47c>
   13bdc:	bl	188d8 <handle_coda_error@@Base>
   13be0:	ldr	r1, [fp, #-84]	; 0xffffffac
   13be4:	cmp	r1, #0
   13be8:	bmi	13c2c <print_debug_data@@Base+0x4c8>
   13bec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13bf0:	add	r5, sp, #32
   13bf4:	mov	r2, r5
   13bf8:	lsr	r0, r0, #3
   13bfc:	orr	r0, r0, r1, lsl #29
   13c00:	lsr	r1, r1, #3
   13c04:	bl	12aa8 <coda_str64@plt>
   13c08:	movw	r0, #42486	; 0xa5f6
   13c0c:	mov	r1, r5
   13c10:	movt	r0, #1
   13c14:	bl	14668 <print_debug_data@@Base+0xf04>
   13c18:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13c1c:	ands	r1, r0, #7
   13c20:	movwne	r0, #42490	; 0xa5fa
   13c24:	movtne	r0, #1
   13c28:	blne	14668 <print_debug_data@@Base+0xf04>
   13c2c:	movw	r0, #44606	; 0xae3e
   13c30:	movt	r0, #1
   13c34:	bl	14668 <print_debug_data@@Base+0xf04>
   13c38:	movw	r4, #49600	; 0xc1c0
   13c3c:	movt	r4, #2
   13c40:	ldr	r0, [r4]
   13c44:	add	r0, r0, #1
   13c48:	str	r0, [r4]
   13c4c:	movw	r0, #49580	; 0xc1ac
   13c50:	movt	r0, #2
   13c54:	ldr	r0, [r0]
   13c58:	cmp	r0, #0
   13c5c:	bmi	14254 <print_debug_data@@Base+0xaf0>
   13c60:	ldr	r1, [sp, #24]
   13c64:	cmp	r0, r1
   13c68:	bgt	14254 <print_debug_data@@Base+0xaf0>
   13c6c:	movw	r0, #42494	; 0xa5fe
   13c70:	movt	r0, #1
   13c74:	bl	145b8 <print_debug_data@@Base+0xe54>
   13c78:	ldr	r5, [sp, #28]
   13c7c:	b	14268 <print_debug_data@@Base+0xb04>
   13c80:	add	r7, sp, #32
   13c84:	sub	r1, fp, #44	; 0x2c
   13c88:	mov	r0, r4
   13c8c:	mov	r2, r7
   13c90:	bl	12988 <coda_cursor_get_array_dim@plt>
   13c94:	cmp	r0, #0
   13c98:	beq	13ca0 <print_debug_data@@Base+0x53c>
   13c9c:	bl	188d8 <handle_coda_error@@Base>
   13ca0:	ldr	r4, [fp, #-44]	; 0xffffffd4
   13ca4:	cmp	r4, #0
   13ca8:	bmi	14558 <print_debug_data@@Base+0xdf4>
   13cac:	beq	1417c <print_debug_data@@Base+0xa18>
   13cb0:	lsl	r2, r4, #2
   13cb4:	sub	r0, fp, #88	; 0x58
   13cb8:	mov	r1, #0
   13cbc:	mov	r8, #0
   13cc0:	bl	12910 <memset@plt>
   13cc4:	mov	r5, #1
   13cc8:	cmp	r4, #4
   13ccc:	bcc	1430c <print_debug_data@@Base+0xba8>
   13cd0:	bic	r8, r4, #3
   13cd4:	mov	r0, #1
   13cd8:	vmov.i32	q8, #1	; 0x00000001
   13cdc:	sub	r2, r8, #4
   13ce0:	add	r1, r0, r2, lsr #2
   13ce4:	cmp	r2, #12
   13ce8:	and	ip, r1, #3
   13cec:	bcs	14284 <print_debug_data@@Base+0xb20>
   13cf0:	mov	r1, #0
   13cf4:	cmp	ip, #0
   13cf8:	bne	142d8 <print_debug_data@@Base+0xb74>
   13cfc:	b	142f4 <print_debug_data@@Base+0xb90>
   13d00:	sub	r1, fp, #120	; 0x78
   13d04:	mov	r0, r4
   13d08:	bl	127c0 <coda_cursor_get_special_type@plt>
   13d0c:	cmp	r0, #0
   13d10:	beq	13d18 <print_debug_data@@Base+0x5b4>
   13d14:	bl	188d8 <handle_coda_error@@Base>
   13d18:	ldr	r0, [fp, #-120]	; 0xffffff88
   13d1c:	cmp	r0, #0
   13d20:	beq	13e08 <print_debug_data@@Base+0x6a4>
   13d24:	add	r5, sp, #32
   13d28:	mov	r1, r4
   13d2c:	mov	r2, #520	; 0x208
   13d30:	mov	r0, r5
   13d34:	bl	12748 <memcpy@plt>
   13d38:	mov	r0, r5
   13d3c:	bl	12a24 <coda_cursor_use_base_type_of_special_type@plt>
   13d40:	cmp	r0, #0
   13d44:	beq	13d4c <print_debug_data@@Base+0x5e8>
   13d48:	bl	188d8 <handle_coda_error@@Base>
   13d4c:	ldr	r1, [sp, #24]
   13d50:	add	r0, sp, #32
   13d54:	bl	138b4 <print_debug_data@@Base+0x150>
   13d58:	ldr	r0, [fp, #-120]	; 0xffffff88
   13d5c:	b	13e0c <print_debug_data@@Base+0x6a8>
   13d60:	add	r1, sp, #32
   13d64:	mov	r0, r4
   13d68:	bl	12718 <coda_cursor_read_uint32@plt>
   13d6c:	cmp	r0, #0
   13d70:	beq	13d78 <print_debug_data@@Base+0x614>
   13d74:	bl	188d8 <handle_coda_error@@Base>
   13d78:	ldr	r1, [sp, #32]
   13d7c:	movw	r0, #42604	; 0xa66c
   13d80:	movt	r0, #1
   13d84:	bl	145b8 <print_debug_data@@Base+0xe54>
   13d88:	sub	sp, fp, #28
   13d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d90:	add	r1, sp, #32
   13d94:	mov	r0, r4
   13d98:	bl	12a3c <coda_cursor_read_int32@plt>
   13d9c:	cmp	r0, #0
   13da0:	beq	13da8 <print_debug_data@@Base+0x644>
   13da4:	bl	188d8 <handle_coda_error@@Base>
   13da8:	ldr	r1, [sp, #32]
   13dac:	movw	r0, #42599	; 0xa667
   13db0:	movt	r0, #1
   13db4:	bl	145b8 <print_debug_data@@Base+0xe54>
   13db8:	sub	sp, fp, #28
   13dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dc0:	add	r1, sp, #32
   13dc4:	mov	r0, r4
   13dc8:	bl	128a4 <coda_cursor_read_double@plt>
   13dcc:	cmp	r0, #0
   13dd0:	beq	13dd8 <print_debug_data@@Base+0x674>
   13dd4:	bl	188d8 <handle_coda_error@@Base>
   13dd8:	ldr	r1, [fp, #-120]	; 0xffffff88
   13ddc:	vldr	d16, [sp, #32]
   13de0:	movw	r2, #42609	; 0xa671
   13de4:	movw	r0, #42675	; 0xa6b3
   13de8:	movt	r2, #1
   13dec:	movt	r0, #1
   13df0:	cmp	r1, #8
   13df4:	moveq	r0, r2
   13df8:	vmov	r2, r3, d16
   13dfc:	bl	145b8 <print_debug_data@@Base+0xe54>
   13e00:	sub	sp, fp, #28
   13e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e08:	mov	r0, #0
   13e0c:	bl	12628 <coda_type_get_special_type_name@plt>
   13e10:	mov	r1, r0
   13e14:	movw	r0, #42669	; 0xa6ad
   13e18:	movt	r0, #1
   13e1c:	bl	145b8 <print_debug_data@@Base+0xe54>
   13e20:	ldr	r0, [fp, #-120]	; 0xffffff88
   13e24:	cmp	r0, #3
   13e28:	bhi	14558 <print_debug_data@@Base+0xdf4>
   13e2c:	add	r1, pc, #0
   13e30:	ldr	pc, [r1, r0, lsl #2]
   13e34:	andeq	r3, r1, r4, asr #28
   13e38:	andeq	r4, r1, r4, lsr #4
   13e3c:	andeq	r4, r1, r4, lsr #3
   13e40:	andeq	r4, r1, ip, ror #3
   13e44:	movw	r0, #44606	; 0xae3e
   13e48:	movt	r0, #1
   13e4c:	bl	14668 <print_debug_data@@Base+0xf04>
   13e50:	sub	sp, fp, #28
   13e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e58:	sub	r1, fp, #88	; 0x58
   13e5c:	mov	r0, r4
   13e60:	bl	129ac <coda_cursor_read_int64@plt>
   13e64:	cmp	r0, #0
   13e68:	beq	13e70 <print_debug_data@@Base+0x70c>
   13e6c:	bl	188d8 <handle_coda_error@@Base>
   13e70:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13e74:	ldr	r1, [fp, #-84]	; 0xffffffac
   13e78:	add	r4, sp, #32
   13e7c:	mov	r2, r4
   13e80:	bl	12aa8 <coda_str64@plt>
   13e84:	b	13eb4 <print_debug_data@@Base+0x750>
   13e88:	sub	r1, fp, #88	; 0x58
   13e8c:	mov	r0, r4
   13e90:	bl	12898 <coda_cursor_read_uint64@plt>
   13e94:	cmp	r0, #0
   13e98:	beq	13ea0 <print_debug_data@@Base+0x73c>
   13e9c:	bl	188d8 <handle_coda_error@@Base>
   13ea0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13ea4:	ldr	r1, [fp, #-84]	; 0xffffffac
   13ea8:	add	r4, sp, #32
   13eac:	mov	r2, r4
   13eb0:	bl	126e8 <coda_str64u@plt>
   13eb4:	movw	r0, #44349	; 0xad3d
   13eb8:	mov	r1, r4
   13ebc:	movt	r0, #1
   13ec0:	bl	145b8 <print_debug_data@@Base+0xe54>
   13ec4:	sub	sp, fp, #28
   13ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ecc:	sub	r1, fp, #88	; 0x58
   13ed0:	mov	r0, r4
   13ed4:	bl	12a0c <coda_cursor_get_bit_size@plt>
   13ed8:	cmp	r0, #0
   13edc:	beq	13ee4 <print_debug_data@@Base+0x780>
   13ee0:	bl	188d8 <handle_coda_error@@Base>
   13ee4:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13ee8:	ldr	r7, [fp, #-84]	; 0xffffffac
   13eec:	lsr	r0, r4, #3
   13ef0:	tst	r4, #7
   13ef4:	orr	r6, r0, r7, lsl #29
   13ef8:	addne	r6, r6, #1
   13efc:	mov	r0, r6
   13f00:	bl	1282c <malloc@plt>
   13f04:	mov	r5, r0
   13f08:	cmp	r0, #0
   13f0c:	bne	13f40 <print_debug_data@@Base+0x7dc>
   13f10:	movw	r1, #42185	; 0xa4c9
   13f14:	movw	r3, #42499	; 0xa603
   13f18:	movw	r0, #447	; 0x1bf
   13f1c:	mov	r2, r6
   13f20:	movt	r1, #1
   13f24:	movt	r3, #1
   13f28:	str	r0, [sp]
   13f2c:	mvn	r0, #0
   13f30:	bl	126ac <coda_set_error@plt>
   13f34:	bl	188d8 <handle_coda_error@@Base>
   13f38:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13f3c:	ldr	r7, [fp, #-84]	; 0xffffffac
   13f40:	ldr	r0, [sp, #28]
   13f44:	mov	r1, r5
   13f48:	mov	r2, #0
   13f4c:	mov	r3, #0
   13f50:	stm	sp, {r4, r7}
   13f54:	bl	12a9c <coda_cursor_read_bits@plt>
   13f58:	cmp	r0, #0
   13f5c:	beq	13f64 <print_debug_data@@Base+0x800>
   13f60:	bl	188d8 <handle_coda_error@@Base>
   13f64:	movw	r0, #43972	; 0xabc4
   13f68:	movt	r0, #1
   13f6c:	bl	145b8 <print_debug_data@@Base+0xe54>
   13f70:	mov	r0, r5
   13f74:	mov	r1, r6
   13f78:	bl	146b0 <print_debug_data@@Base+0xf4c>
   13f7c:	movw	r0, #42590	; 0xa65e
   13f80:	movt	r0, #1
   13f84:	bl	14668 <print_debug_data@@Base+0xf04>
   13f88:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13f8c:	ldr	r1, [fp, #-84]	; 0xffffffac
   13f90:	add	r4, sp, #32
   13f94:	mov	r2, r4
   13f98:	lsr	r0, r0, #3
   13f9c:	orr	r0, r0, r1, lsl #29
   13fa0:	asr	r1, r1, #3
   13fa4:	bl	12aa8 <coda_str64@plt>
   13fa8:	movw	r0, #44161	; 0xac81
   13fac:	mov	r1, r4
   13fb0:	movt	r0, #1
   13fb4:	bl	14668 <print_debug_data@@Base+0xf04>
   13fb8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13fbc:	ands	r1, r0, #7
   13fc0:	movwne	r0, #42490	; 0xa5fa
   13fc4:	movtne	r0, #1
   13fc8:	blne	14668 <print_debug_data@@Base+0xf04>
   13fcc:	movw	r0, #42587	; 0xa65b
   13fd0:	movt	r0, #1
   13fd4:	bl	14668 <print_debug_data@@Base+0xf04>
   13fd8:	mov	r0, r5
   13fdc:	bl	126f4 <free@plt>
   13fe0:	sub	sp, fp, #28
   13fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fe8:	mov	r0, r4
   13fec:	bl	127f0 <coda_cursor_goto_first_record_field@plt>
   13ff0:	cmp	r0, #0
   13ff4:	beq	13ffc <print_debug_data@@Base+0x898>
   13ff8:	bl	188d8 <handle_coda_error@@Base>
   13ffc:	ldr	r0, [fp, #-120]	; 0xffffff88
   14000:	mov	r1, #0
   14004:	str	r1, [fp, #-48]	; 0xffffffd0
   14008:	cmp	r0, #1
   1400c:	blt	14194 <print_debug_data@@Base+0xa30>
   14010:	ldr	r0, [sp, #24]
   14014:	movw	r6, #44221	; 0xacbd
   14018:	movw	r7, #49576	; 0xc1a8
   1401c:	movw	r5, #44606	; 0xae3e
   14020:	movw	r9, #49600	; 0xc1c0
   14024:	movw	r8, #49580	; 0xc1ac
   14028:	mvn	r4, #0
   1402c:	movt	r6, #1
   14030:	movt	r7, #2
   14034:	movt	r5, #1
   14038:	movt	r9, #2
   1403c:	movt	r8, #2
   14040:	add	r0, r0, #1
   14044:	str	r0, [sp, #20]
   14048:	b	14064 <print_debug_data@@Base+0x900>
   1404c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14050:	add	r1, r0, #1
   14054:	ldr	r0, [fp, #-120]	; 0xffffff88
   14058:	str	r1, [fp, #-48]	; 0xffffffd0
   1405c:	cmp	r1, r0
   14060:	bge	14194 <print_debug_data@@Base+0xa30>
   14064:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14068:	sub	r2, fp, #52	; 0x34
   1406c:	bl	12a78 <coda_type_get_record_field_name@plt>
   14070:	cmp	r0, #0
   14074:	beq	1407c <print_debug_data@@Base+0x918>
   14078:	bl	188d8 <handle_coda_error@@Base>
   1407c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14080:	mov	r0, r6
   14084:	bl	145b8 <print_debug_data@@Base+0xe54>
   14088:	ldr	r0, [r7]
   1408c:	cmp	r0, #0
   14090:	beq	140fc <print_debug_data@@Base+0x998>
   14094:	ldr	r0, [sp, #28]
   14098:	sub	r1, fp, #88	; 0x58
   1409c:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   140a0:	cmp	r0, #0
   140a4:	beq	140ac <print_debug_data@@Base+0x948>
   140a8:	bl	188d8 <handle_coda_error@@Base>
   140ac:	ldr	r0, [fp, #-88]	; 0xffffffa8
   140b0:	ldr	r1, [fp, #-84]	; 0xffffffac
   140b4:	subs	r2, r4, r0
   140b8:	sbcs	r2, r4, r1
   140bc:	bge	140fc <print_debug_data@@Base+0x998>
   140c0:	lsr	r0, r0, #3
   140c4:	add	sl, sp, #32
   140c8:	orr	r0, r0, r1, lsl #29
   140cc:	lsr	r1, r1, #3
   140d0:	mov	r2, sl
   140d4:	bl	12aa8 <coda_str64@plt>
   140d8:	movw	r0, #42486	; 0xa5f6
   140dc:	mov	r1, sl
   140e0:	movt	r0, #1
   140e4:	bl	14668 <print_debug_data@@Base+0xf04>
   140e8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   140ec:	ands	r1, r0, #7
   140f0:	movwne	r0, #42490	; 0xa5fa
   140f4:	movtne	r0, #1
   140f8:	blne	14668 <print_debug_data@@Base+0xf04>
   140fc:	mov	r0, r5
   14100:	bl	14668 <print_debug_data@@Base+0xf04>
   14104:	ldr	r0, [r9]
   14108:	add	r0, r0, #1
   1410c:	str	r0, [r9]
   14110:	ldr	r0, [r8]
   14114:	cmp	r0, #0
   14118:	bmi	14138 <print_debug_data@@Base+0x9d4>
   1411c:	ldr	r1, [sp, #24]
   14120:	cmp	r0, r1
   14124:	bgt	14138 <print_debug_data@@Base+0x9d4>
   14128:	movw	r0, #42494	; 0xa5fe
   1412c:	movt	r0, #1
   14130:	bl	145b8 <print_debug_data@@Base+0xe54>
   14134:	b	14144 <print_debug_data@@Base+0x9e0>
   14138:	ldr	r0, [sp, #28]
   1413c:	ldr	r1, [sp, #20]
   14140:	bl	138b4 <print_debug_data@@Base+0x150>
   14144:	ldr	r0, [r9]
   14148:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1414c:	sub	r0, r0, #1
   14150:	str	r0, [r9]
   14154:	ldr	r0, [fp, #-120]	; 0xffffff88
   14158:	sub	r0, r0, #1
   1415c:	cmp	r1, r0
   14160:	bge	1404c <print_debug_data@@Base+0x8e8>
   14164:	ldr	r0, [sp, #28]
   14168:	bl	129e8 <coda_cursor_goto_next_record_field@plt>
   1416c:	cmp	r0, #0
   14170:	beq	1404c <print_debug_data@@Base+0x8e8>
   14174:	bl	188d8 <handle_coda_error@@Base>
   14178:	b	1404c <print_debug_data@@Base+0x8e8>
   1417c:	mov	r5, #1
   14180:	ldr	r0, [sp, #28]
   14184:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   14188:	cmp	r0, #0
   1418c:	bne	14340 <print_debug_data@@Base+0xbdc>
   14190:	b	14344 <print_debug_data@@Base+0xbe0>
   14194:	ldr	r0, [sp, #28]
   14198:	bl	1285c <coda_cursor_goto_parent@plt>
   1419c:	sub	sp, fp, #28
   141a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141a4:	sub	r1, fp, #88	; 0x58
   141a8:	mov	r0, r4
   141ac:	bl	128a4 <coda_cursor_read_double@plt>
   141b0:	cmp	r0, #0
   141b4:	beq	141bc <print_debug_data@@Base+0xa58>
   141b8:	bl	188d8 <handle_coda_error@@Base>
   141bc:	vldr	d0, [fp, #-88]	; 0xffffffa8
   141c0:	bl	128b0 <coda_isNaN@plt>
   141c4:	cmp	r0, #0
   141c8:	bne	141dc <print_debug_data@@Base+0xa78>
   141cc:	vldr	d0, [fp, #-88]	; 0xffffffa8
   141d0:	bl	12754 <coda_isInf@plt>
   141d4:	cmp	r0, #0
   141d8:	beq	14570 <print_debug_data@@Base+0xe0c>
   141dc:	vldr	d16, [fp, #-88]	; 0xffffffa8
   141e0:	movw	r0, #42674	; 0xa6b2
   141e4:	movt	r0, #1
   141e8:	b	14248 <print_debug_data@@Base+0xae4>
   141ec:	add	r1, sp, #32
   141f0:	sub	r2, fp, #88	; 0x58
   141f4:	mov	r0, r4
   141f8:	bl	1294c <coda_cursor_read_complex_double_split@plt>
   141fc:	cmp	r0, #0
   14200:	beq	14208 <print_debug_data@@Base+0xaa4>
   14204:	bl	188d8 <handle_coda_error@@Base>
   14208:	vldr	d16, [sp, #32]
   1420c:	vldr	d17, [fp, #-88]	; 0xffffffa8
   14210:	movw	r0, #42709	; 0xa6d5
   14214:	movt	r0, #1
   14218:	vmov	r2, r3, d16
   1421c:	vstr	d17, [sp]
   14220:	b	1424c <print_debug_data@@Base+0xae8>
   14224:	add	r1, sp, #32
   14228:	mov	r0, r4
   1422c:	bl	128a4 <coda_cursor_read_double@plt>
   14230:	cmp	r0, #0
   14234:	beq	1423c <print_debug_data@@Base+0xad8>
   14238:	bl	188d8 <handle_coda_error@@Base>
   1423c:	vldr	d16, [sp, #32]
   14240:	movw	r0, #42675	; 0xa6b3
   14244:	movt	r0, #1
   14248:	vmov	r2, r3, d16
   1424c:	bl	14668 <print_debug_data@@Base+0xf04>
   14250:	b	14558 <print_debug_data@@Base+0xdf4>
   14254:	ldr	r0, [sp, #24]
   14258:	ldr	r5, [sp, #28]
   1425c:	add	r1, r0, #1
   14260:	mov	r0, r5
   14264:	bl	138b4 <print_debug_data@@Base+0x150>
   14268:	ldr	r0, [r4]
   1426c:	sub	r0, r0, #1
   14270:	str	r0, [r4]
   14274:	mov	r0, r5
   14278:	bl	1285c <coda_cursor_goto_parent@plt>
   1427c:	sub	sp, fp, #28
   14280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14284:	sub	r2, r1, ip
   14288:	mov	r1, #0
   1428c:	mov	r3, #64	; 0x40
   14290:	mov	r5, r7
   14294:	vld1.32	{d18-d19}, [r5], r3
   14298:	add	r6, r7, #16
   1429c:	add	r0, r7, #32
   142a0:	subs	r2, r2, #4
   142a4:	add	r1, r1, #16
   142a8:	vld1.32	{d20-d21}, [r6]
   142ac:	vmul.i32	q8, q9, q8
   142b0:	vld1.32	{d18-d19}, [r0]
   142b4:	add	r0, r7, #48	; 0x30
   142b8:	mov	r7, r5
   142bc:	vmul.i32	q8, q10, q8
   142c0:	vld1.32	{d20-d21}, [r0]
   142c4:	vmul.i32	q8, q9, q8
   142c8:	vmul.i32	q8, q10, q8
   142cc:	bne	14294 <print_debug_data@@Base+0xb30>
   142d0:	cmp	ip, #0
   142d4:	beq	142f4 <print_debug_data@@Base+0xb90>
   142d8:	add	r0, sp, #32
   142dc:	add	r1, r0, r1, lsl #2
   142e0:	rsb	r0, ip, #0
   142e4:	vld1.32	{d18-d19}, [r1]!
   142e8:	adds	r0, r0, #1
   142ec:	vmul.i32	q8, q9, q8
   142f0:	bcc	142e4 <print_debug_data@@Base+0xb80>
   142f4:	vext.8	q9, q8, q8, #8
   142f8:	cmp	r4, r8
   142fc:	vmul.i32	q0, q8, q9
   14300:	vmul.i32	q8, q0, d0[1]
   14304:	vmov.32	r5, d16[0]
   14308:	beq	14328 <print_debug_data@@Base+0xbc4>
   1430c:	add	r0, sp, #32
   14310:	sub	r1, r4, r8
   14314:	add	r0, r0, r8, lsl #2
   14318:	ldr	r2, [r0], #4
   1431c:	subs	r1, r1, #1
   14320:	mul	r5, r2, r5
   14324:	bne	14318 <print_debug_data@@Base+0xbb4>
   14328:	cmp	r5, #1
   1432c:	blt	14558 <print_debug_data@@Base+0xdf4>
   14330:	ldr	r0, [sp, #28]
   14334:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   14338:	cmp	r0, #0
   1433c:	beq	14344 <print_debug_data@@Base+0xbe0>
   14340:	bl	188d8 <handle_coda_error@@Base>
   14344:	add	r0, sp, #32
   14348:	movw	r7, #42904	; 0xa798
   1434c:	str	r5, [sp, #20]
   14350:	sub	sl, fp, #88	; 0x58
   14354:	mov	r9, #0
   14358:	sub	r8, r0, #4
   1435c:	sub	r0, r5, #1
   14360:	movw	r5, #42491	; 0xa5fb
   14364:	movt	r7, #1
   14368:	sub	r6, sl, #4
   1436c:	str	r0, [sp, #16]
   14370:	ldr	r0, [sp, #24]
   14374:	movt	r5, #1
   14378:	add	r0, r0, #1
   1437c:	str	r0, [sp, #12]
   14380:	b	14394 <print_debug_data@@Base+0xc30>
   14384:	ldr	r0, [sp, #20]
   14388:	add	r9, r9, #1
   1438c:	cmp	r9, r0
   14390:	beq	14560 <print_debug_data@@Base+0xdfc>
   14394:	movw	r0, #42916	; 0xa7a4
   14398:	movt	r0, #1
   1439c:	bl	145b8 <print_debug_data@@Base+0xe54>
   143a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143a4:	cmp	r0, #1
   143a8:	blt	143ec <print_debug_data@@Base+0xc88>
   143ac:	mov	r4, #0
   143b0:	b	143c0 <print_debug_data@@Base+0xc5c>
   143b4:	add	r4, r4, #1
   143b8:	cmp	r4, r0
   143bc:	bge	143ec <print_debug_data@@Base+0xc88>
   143c0:	ldr	r1, [sl, r4, lsl #2]
   143c4:	mov	r0, r5
   143c8:	bl	14668 <print_debug_data@@Base+0xf04>
   143cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143d0:	sub	r1, r0, #1
   143d4:	cmp	r4, r1
   143d8:	bge	143b4 <print_debug_data@@Base+0xc50>
   143dc:	mov	r0, r7
   143e0:	bl	14668 <print_debug_data@@Base+0xf04>
   143e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143e8:	b	143b4 <print_debug_data@@Base+0xc50>
   143ec:	movw	r0, #45884	; 0xb33c
   143f0:	movt	r0, #1
   143f4:	bl	14668 <print_debug_data@@Base+0xf04>
   143f8:	movw	r0, #49576	; 0xc1a8
   143fc:	ldr	r4, [sp, #28]
   14400:	movt	r0, #2
   14404:	ldr	r0, [r0]
   14408:	cmp	r0, #0
   1440c:	beq	14480 <print_debug_data@@Base+0xd1c>
   14410:	mov	r0, r4
   14414:	sub	r1, fp, #96	; 0x60
   14418:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   1441c:	cmp	r0, #0
   14420:	beq	14428 <print_debug_data@@Base+0xcc4>
   14424:	bl	188d8 <handle_coda_error@@Base>
   14428:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1442c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14430:	mvn	r3, #0
   14434:	subs	r2, r3, r0
   14438:	sbcs	r2, r3, r1
   1443c:	bge	14480 <print_debug_data@@Base+0xd1c>
   14440:	lsr	r0, r0, #3
   14444:	sub	r4, fp, #120	; 0x78
   14448:	orr	r0, r0, r1, lsl #29
   1444c:	lsr	r1, r1, #3
   14450:	mov	r2, r4
   14454:	bl	12aa8 <coda_str64@plt>
   14458:	movw	r0, #42486	; 0xa5f6
   1445c:	mov	r1, r4
   14460:	movt	r0, #1
   14464:	bl	14668 <print_debug_data@@Base+0xf04>
   14468:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1446c:	ands	r1, r0, #7
   14470:	movwne	r0, #42490	; 0xa5fa
   14474:	movtne	r0, #1
   14478:	blne	14668 <print_debug_data@@Base+0xf04>
   1447c:	ldr	r4, [sp, #28]
   14480:	movw	r0, #44606	; 0xae3e
   14484:	movt	r0, #1
   14488:	bl	14668 <print_debug_data@@Base+0xf04>
   1448c:	movw	r0, #49600	; 0xc1c0
   14490:	movt	r0, #2
   14494:	mov	r1, r0
   14498:	ldr	r0, [r0]
   1449c:	add	r0, r0, #1
   144a0:	str	r0, [r1]
   144a4:	movw	r0, #49580	; 0xc1ac
   144a8:	movt	r0, #2
   144ac:	ldr	r0, [r0]
   144b0:	cmp	r0, #0
   144b4:	bmi	144d4 <print_debug_data@@Base+0xd70>
   144b8:	ldr	r1, [sp, #24]
   144bc:	cmp	r0, r1
   144c0:	bgt	144d4 <print_debug_data@@Base+0xd70>
   144c4:	movw	r0, #42494	; 0xa5fe
   144c8:	movt	r0, #1
   144cc:	bl	145b8 <print_debug_data@@Base+0xe54>
   144d0:	b	144e0 <print_debug_data@@Base+0xd7c>
   144d4:	ldr	r1, [sp, #12]
   144d8:	mov	r0, r4
   144dc:	bl	138b4 <print_debug_data@@Base+0x150>
   144e0:	movw	r0, #49600	; 0xc1c0
   144e4:	mov	r3, #0
   144e8:	movt	r0, #2
   144ec:	mov	r1, r0
   144f0:	ldr	r0, [r0]
   144f4:	sub	r0, r0, #1
   144f8:	str	r0, [r1]
   144fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14500:	cmp	r0, #1
   14504:	blt	14534 <print_debug_data@@Base+0xdd0>
   14508:	ldr	r1, [r6, r0, lsl #2]
   1450c:	ldr	r2, [r8, r0, lsl #2]
   14510:	add	r1, r1, #1
   14514:	cmp	r1, r2
   14518:	str	r1, [r6, r0, lsl #2]
   1451c:	bne	14534 <print_debug_data@@Base+0xdd0>
   14520:	sub	r1, r0, #1
   14524:	str	r3, [r6, r0, lsl #2]
   14528:	cmp	r1, #0
   1452c:	mov	r0, r1
   14530:	bgt	14508 <print_debug_data@@Base+0xda4>
   14534:	ldr	r0, [sp, #16]
   14538:	cmp	r9, r0
   1453c:	bge	14384 <print_debug_data@@Base+0xc20>
   14540:	mov	r0, r4
   14544:	bl	128c8 <coda_cursor_goto_next_array_element@plt>
   14548:	cmp	r0, #0
   1454c:	beq	14384 <print_debug_data@@Base+0xc20>
   14550:	bl	188d8 <handle_coda_error@@Base>
   14554:	b	14384 <print_debug_data@@Base+0xc20>
   14558:	sub	sp, fp, #28
   1455c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14560:	mov	r0, r4
   14564:	bl	1285c <coda_cursor_goto_parent@plt>
   14568:	sub	sp, fp, #28
   1456c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14570:	vldr	d0, [fp, #-88]	; 0xffffffa8
   14574:	movw	r0, #42393	; 0xa599
   14578:	add	r1, sp, #32
   1457c:	movt	r0, #1
   14580:	bl	126d0 <coda_time_double_to_string@plt>
   14584:	cmp	r0, #0
   14588:	beq	145a0 <print_debug_data@@Base+0xe3c>
   1458c:	movw	r0, #42682	; 0xa6ba
   14590:	movt	r0, #1
   14594:	bl	14668 <print_debug_data@@Base+0xf04>
   14598:	sub	sp, fp, #28
   1459c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145a0:	movw	r0, #44348	; 0xad3c
   145a4:	add	r1, sp, #32
   145a8:	movt	r0, #1
   145ac:	bl	14668 <print_debug_data@@Base+0xf04>
   145b0:	sub	sp, fp, #28
   145b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145b8:	sub	sp, sp, #12
   145bc:	push	{r4, r5, r6, r7, fp, lr}
   145c0:	add	fp, sp, #16
   145c4:	sub	sp, sp, #4
   145c8:	mov	r4, r0
   145cc:	add	r0, fp, #8
   145d0:	stm	r0, {r1, r2, r3}
   145d4:	movw	r0, #49600	; 0xc1c0
   145d8:	movt	r0, #2
   145dc:	ldr	r6, [r0]
   145e0:	cmp	r6, #0
   145e4:	bmi	14648 <print_debug_data@@Base+0xee4>
   145e8:	beq	1461c <print_debug_data@@Base+0xeb8>
   145ec:	movw	r7, #53392	; 0xd090
   145f0:	movw	r5, #42750	; 0xa6fe
   145f4:	movt	r7, #2
   145f8:	movt	r5, #1
   145fc:	ldr	r3, [r7]
   14600:	mov	r0, r5
   14604:	mov	r1, #2
   14608:	mov	r2, #1
   1460c:	bl	127d8 <fwrite@plt>
   14610:	sub	r6, r6, #1
   14614:	cmp	r6, #0
   14618:	bgt	145fc <print_debug_data@@Base+0xe98>
   1461c:	movw	r0, #53392	; 0xd090
   14620:	add	r2, fp, #8
   14624:	mov	r1, r4
   14628:	movt	r0, #2
   1462c:	str	r2, [sp]
   14630:	ldr	r0, [r0]
   14634:	bl	129b8 <vfprintf@plt>
   14638:	sub	sp, fp, #16
   1463c:	pop	{r4, r5, r6, r7, fp, lr}
   14640:	add	sp, sp, #12
   14644:	bx	lr
   14648:	movw	r0, #42720	; 0xa6e0
   1464c:	movw	r1, #42499	; 0xa603
   14650:	movw	r3, #42732	; 0xa6ec
   14654:	mov	r2, #44	; 0x2c
   14658:	movt	r0, #1
   1465c:	movt	r1, #1
   14660:	movt	r3, #1
   14664:	bl	12ab4 <__assert_fail@plt>
   14668:	sub	sp, sp, #12
   1466c:	push	{fp, lr}
   14670:	mov	fp, sp
   14674:	sub	sp, sp, #4
   14678:	mov	ip, r0
   1467c:	add	r0, fp, #8
   14680:	stm	r0, {r1, r2, r3}
   14684:	movw	r0, #53392	; 0xd090
   14688:	add	r2, fp, #8
   1468c:	mov	r1, ip
   14690:	movt	r0, #2
   14694:	str	r2, [sp]
   14698:	ldr	r0, [r0]
   1469c:	bl	129b8 <vfprintf@plt>
   146a0:	mov	sp, fp
   146a4:	pop	{fp, lr}
   146a8:	add	sp, sp, #12
   146ac:	bx	lr
   146b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146b4:	add	fp, sp, #28
   146b8:	sub	sp, sp, #4
   146bc:	cmp	r1, #1
   146c0:	blt	14850 <print_debug_data@@Base+0x10ec>
   146c4:	movw	r8, #42319	; 0xa54f
   146c8:	movw	r9, #42322	; 0xa552
   146cc:	movw	sl, #42325	; 0xa555
   146d0:	movw	r7, #42328	; 0xa558
   146d4:	movw	r6, #42331	; 0xa55b
   146d8:	mov	r4, r1
   146dc:	mov	r5, r0
   146e0:	movt	r8, #1
   146e4:	movt	r9, #1
   146e8:	movt	sl, #1
   146ec:	movt	r7, #1
   146f0:	movt	r6, #1
   146f4:	ldrb	r1, [r5]
   146f8:	sub	r0, r1, #7
   146fc:	cmp	r0, #6
   14700:	bls	14730 <print_debug_data@@Base+0xfcc>
   14704:	b	14770 <print_debug_data@@Base+0x100c>
   14708:	movw	r0, #42334	; 0xa55e
   1470c:	movt	r0, #1
   14710:	bl	14668 <print_debug_data@@Base+0xf04>
   14714:	add	r5, r5, #1
   14718:	subs	r4, r4, #1
   1471c:	beq	14850 <print_debug_data@@Base+0x10ec>
   14720:	ldrb	r1, [r5]
   14724:	sub	r0, r1, #7
   14728:	cmp	r0, #6
   1472c:	bhi	14770 <print_debug_data@@Base+0x100c>
   14730:	add	r1, pc, #0
   14734:	ldr	pc, [r1, r0, lsl #2]
   14738:	andeq	r4, r1, r4, asr r7
   1473c:	andeq	r4, r1, r4, lsr #15
   14740:	andeq	r4, r1, r0, asr #15
   14744:	ldrdeq	r4, [r1], -r8
   14748:	strdeq	r4, [r1], -r0
   1474c:	andeq	r4, r1, r8, lsl #16
   14750:	andeq	r4, r1, r0, lsr #16
   14754:	movw	r0, #42313	; 0xa549
   14758:	movt	r0, #1
   1475c:	bl	14668 <print_debug_data@@Base+0xf04>
   14760:	add	r5, r5, #1
   14764:	subs	r4, r4, #1
   14768:	bne	14720 <print_debug_data@@Base+0xfbc>
   1476c:	b	14850 <print_debug_data@@Base+0x10ec>
   14770:	cmp	r1, #92	; 0x5c
   14774:	beq	14708 <print_debug_data@@Base+0xfa4>
   14778:	sub	r0, r1, #32
   1477c:	uxtb	r0, r0
   14780:	cmp	r0, #94	; 0x5e
   14784:	bhi	14838 <print_debug_data@@Base+0x10d4>
   14788:	movw	r0, #42753	; 0xa701
   1478c:	movt	r0, #1
   14790:	bl	14668 <print_debug_data@@Base+0xf04>
   14794:	add	r5, r5, #1
   14798:	subs	r4, r4, #1
   1479c:	bne	14720 <print_debug_data@@Base+0xfbc>
   147a0:	b	14850 <print_debug_data@@Base+0x10ec>
   147a4:	movw	r0, #42316	; 0xa54c
   147a8:	movt	r0, #1
   147ac:	bl	14668 <print_debug_data@@Base+0xf04>
   147b0:	add	r5, r5, #1
   147b4:	subs	r4, r4, #1
   147b8:	bne	14720 <print_debug_data@@Base+0xfbc>
   147bc:	b	14850 <print_debug_data@@Base+0x10ec>
   147c0:	mov	r0, r8
   147c4:	bl	14668 <print_debug_data@@Base+0xf04>
   147c8:	add	r5, r5, #1
   147cc:	subs	r4, r4, #1
   147d0:	bne	14720 <print_debug_data@@Base+0xfbc>
   147d4:	b	14850 <print_debug_data@@Base+0x10ec>
   147d8:	mov	r0, r9
   147dc:	bl	14668 <print_debug_data@@Base+0xf04>
   147e0:	add	r5, r5, #1
   147e4:	subs	r4, r4, #1
   147e8:	bne	14720 <print_debug_data@@Base+0xfbc>
   147ec:	b	14850 <print_debug_data@@Base+0x10ec>
   147f0:	mov	r0, sl
   147f4:	bl	14668 <print_debug_data@@Base+0xf04>
   147f8:	add	r5, r5, #1
   147fc:	subs	r4, r4, #1
   14800:	bne	14720 <print_debug_data@@Base+0xfbc>
   14804:	b	14850 <print_debug_data@@Base+0x10ec>
   14808:	mov	r0, r7
   1480c:	bl	14668 <print_debug_data@@Base+0xf04>
   14810:	add	r5, r5, #1
   14814:	subs	r4, r4, #1
   14818:	bne	14720 <print_debug_data@@Base+0xfbc>
   1481c:	b	14850 <print_debug_data@@Base+0x10ec>
   14820:	mov	r0, r6
   14824:	bl	14668 <print_debug_data@@Base+0xf04>
   14828:	add	r5, r5, #1
   1482c:	subs	r4, r4, #1
   14830:	bne	14720 <print_debug_data@@Base+0xfbc>
   14834:	b	14850 <print_debug_data@@Base+0x10ec>
   14838:	movw	r0, #42337	; 0xa561
   1483c:	movt	r0, #1
   14840:	bl	14668 <print_debug_data@@Base+0xf04>
   14844:	add	r5, r5, #1
   14848:	subs	r4, r4, #1
   1484c:	bne	14720 <print_debug_data@@Base+0xfbc>
   14850:	sub	sp, fp, #28
   14854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014858 <dim_info_init@@Base>:
   14858:	movw	r0, #53424	; 0xd0b0
   1485c:	mvn	r1, #0
   14860:	movt	r0, #2
   14864:	str	r1, [r0, #104]	; 0x68
   14868:	mov	r1, #0
   1486c:	str	r1, [r0, #68]	; 0x44
   14870:	str	r1, [r0]
   14874:	bx	lr

00014878 <dim_info_done@@Base>:
   14878:	bx	lr

0001487c <print_all_distinct_dims@@Base>:
   1487c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14880:	add	fp, sp, #28
   14884:	sub	sp, sp, #4
   14888:	movw	r9, #53424	; 0xd0b0
   1488c:	mov	sl, r0
   14890:	movt	r9, #2
   14894:	ldr	r0, [r9]
   14898:	cmp	r0, sl
   1489c:	ble	14a5c <print_all_distinct_dims@@Base+0x1e0>
   148a0:	add	r8, r9, sl, lsl #2
   148a4:	ldr	r0, [r8, #72]	; 0x48
   148a8:	cmp	r0, #0
   148ac:	beq	14a54 <print_all_distinct_dims@@Base+0x1d8>
   148b0:	mov	r7, r8
   148b4:	mov	r5, #4
   148b8:	ldr	r0, [r7, #4]!
   148bc:	add	r6, r5, r0, lsl #2
   148c0:	mov	r0, r6
   148c4:	bl	1282c <malloc@plt>
   148c8:	mov	r4, r0
   148cc:	cmp	r0, #0
   148d0:	bne	14904 <print_all_distinct_dims@@Base+0x88>
   148d4:	movw	r1, #42185	; 0xa4c9
   148d8:	movw	r3, #42783	; 0xa71f
   148dc:	mov	r0, #61	; 0x3d
   148e0:	mov	r2, r6
   148e4:	movt	r1, #1
   148e8:	movt	r3, #1
   148ec:	str	r0, [sp]
   148f0:	mvn	r0, #0
   148f4:	bl	126ac <coda_set_error@plt>
   148f8:	bl	188d8 <handle_coda_error@@Base>
   148fc:	ldr	r0, [r7]
   14900:	add	r6, r5, r0, lsl #2
   14904:	mov	r0, r4
   14908:	mov	r1, #0
   1490c:	mov	r2, r6
   14910:	mov	r5, #0
   14914:	bl	12910 <memset@plt>
   14918:	ldr	r0, [r8, #140]	; 0x8c
   1491c:	add	r0, r9, r0, lsl #3
   14920:	ldrd	r0, [r0, #232]	; 0xe8
   14924:	subs	r2, r0, #1
   14928:	sbcs	r2, r1, #0
   1492c:	blt	14958 <print_all_distinct_dims@@Base+0xdc>
   14930:	ldr	r2, [r8, #108]	; 0x6c
   14934:	ldr	r3, [r2, r5, lsl #2]
   14938:	add	r5, r5, #1
   1493c:	cmp	r3, #0
   14940:	ldrpl	r6, [r4, r3, lsl #2]
   14944:	addpl	r6, r6, #1
   14948:	strpl	r6, [r4, r3, lsl #2]
   1494c:	subs	r3, r5, r0
   14950:	rscs	r3, r1, #0
   14954:	blt	14934 <print_all_distinct_dims@@Base+0xb8>
   14958:	movw	r0, #42890	; 0xa78a
   1495c:	add	r1, sl, #1
   14960:	movt	r0, #1
   14964:	bl	12688 <printf@plt>
   14968:	ldr	r5, [r8, #36]!	; 0x24
   1496c:	ldr	r1, [r7]
   14970:	cmp	r5, r1
   14974:	bge	149c0 <print_all_distinct_dims@@Base+0x144>
   14978:	movw	r6, #42902	; 0xa796
   1497c:	movt	r6, #1
   14980:	ldr	r0, [r4, r5, lsl #2]
   14984:	cmp	r0, #1
   14988:	bge	149a4 <print_all_distinct_dims@@Base+0x128>
   1498c:	add	r5, r5, #1
   14990:	cmp	r5, r1
   14994:	bge	149c0 <print_all_distinct_dims@@Base+0x144>
   14998:	ldr	r0, [r4, r5, lsl #2]
   1499c:	cmp	r0, #1
   149a0:	blt	1498c <print_all_distinct_dims@@Base+0x110>
   149a4:	mov	r0, r6
   149a8:	mov	r1, r5
   149ac:	bl	12688 <printf@plt>
   149b0:	ldr	r1, [r7]
   149b4:	add	r5, r5, #1
   149b8:	cmp	r5, r1
   149bc:	blt	14998 <print_all_distinct_dims@@Base+0x11c>
   149c0:	movw	r0, #42906	; 0xa79a
   149c4:	movt	r0, #1
   149c8:	bl	12688 <printf@plt>
   149cc:	movw	r0, #42910	; 0xa79e
   149d0:	movt	r0, #1
   149d4:	bl	12688 <printf@plt>
   149d8:	ldr	r0, [r7]
   149dc:	ldr	r6, [r8]
   149e0:	cmp	r6, r0
   149e4:	bge	14a2c <print_all_distinct_dims@@Base+0x1b0>
   149e8:	movw	r5, #42902	; 0xa796
   149ec:	movt	r5, #1
   149f0:	ldr	r1, [r4, r6, lsl #2]
   149f4:	cmp	r1, #1
   149f8:	bge	14a14 <print_all_distinct_dims@@Base+0x198>
   149fc:	add	r6, r6, #1
   14a00:	cmp	r6, r0
   14a04:	bge	14a2c <print_all_distinct_dims@@Base+0x1b0>
   14a08:	ldr	r1, [r4, r6, lsl #2]
   14a0c:	cmp	r1, #1
   14a10:	blt	149fc <print_all_distinct_dims@@Base+0x180>
   14a14:	mov	r0, r5
   14a18:	bl	12688 <printf@plt>
   14a1c:	ldr	r0, [r7]
   14a20:	add	r6, r6, #1
   14a24:	cmp	r6, r0
   14a28:	blt	14a08 <print_all_distinct_dims@@Base+0x18c>
   14a2c:	ldr	r1, [r4, r0, lsl #2]
   14a30:	movw	r0, #42906	; 0xa79a
   14a34:	movt	r0, #1
   14a38:	bl	12688 <printf@plt>
   14a3c:	mov	r0, #10
   14a40:	bl	1291c <putchar@plt>
   14a44:	mov	r0, r4
   14a48:	sub	sp, fp, #28
   14a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a50:	b	126f4 <free@plt>
   14a54:	sub	sp, fp, #28
   14a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a5c:	movw	r0, #42756	; 0xa704
   14a60:	movw	r1, #42783	; 0xa71f
   14a64:	movw	r3, #42856	; 0xa768
   14a68:	mov	r2, #50	; 0x32
   14a6c:	movt	r0, #1
   14a70:	movt	r1, #1
   14a74:	movt	r3, #1
   14a78:	bl	12ab4 <__assert_fail@plt>

00014a7c <dim_enter_array@@Base>:
   14a7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a80:	add	fp, sp, #28
   14a84:	sub	sp, sp, #84	; 0x54
   14a88:	movw	r4, #49640	; 0xc1e8
   14a8c:	sub	r1, fp, #32
   14a90:	movt	r4, #2
   14a94:	ldr	r0, [r4, #136]	; 0x88
   14a98:	ldr	r5, [r4, #3360]	; 0xd20
   14a9c:	add	r0, r4, r0, lsl #2
   14aa0:	ldr	r0, [r0, #8]
   14aa4:	bl	12ac0 <coda_type_get_class@plt>
   14aa8:	cmp	r0, #0
   14aac:	beq	14ab4 <dim_enter_array@@Base+0x38>
   14ab0:	bl	188d8 <handle_coda_error@@Base>
   14ab4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14ab8:	sub	r0, r0, #1
   14abc:	cmp	r0, #5
   14ac0:	bhi	15444 <dim_enter_array@@Base+0x9c8>
   14ac4:	add	r1, r5, r5, lsl #2
   14ac8:	add	r5, r4, r1, lsl #4
   14acc:	add	r1, pc, #0
   14ad0:	ldr	pc, [r1, r0, lsl #2]
   14ad4:	andeq	r4, r1, ip, ror #21
   14ad8:	andeq	r5, r1, r4, asr #8
   14adc:	andeq	r5, r1, r4, asr #8
   14ae0:	andeq	r4, r1, r8, ror fp
   14ae4:	andeq	r4, r1, r8, lsr #23
   14ae8:	andeq	r4, r1, ip, lsr fp
   14aec:	ldr	r0, [r4, #136]	; 0x88
   14af0:	add	r1, sp, #44	; 0x2c
   14af4:	add	r2, sp, #48	; 0x30
   14af8:	add	r0, r4, r0, lsl #2
   14afc:	ldr	r0, [r0, #8]
   14b00:	bl	12a00 <coda_type_get_array_dim@plt>
   14b04:	cmp	r0, #0
   14b08:	beq	14b10 <dim_enter_array@@Base+0x94>
   14b0c:	bl	188d8 <handle_coda_error@@Base>
   14b10:	ldr	ip, [sp, #44]	; 0x2c
   14b14:	cmp	ip, #1
   14b18:	str	ip, [r5, #804]	; 0x324
   14b1c:	blt	14bfc <dim_enter_array@@Base+0x180>
   14b20:	add	r0, r5, #808	; 0x328
   14b24:	lsl	r2, ip, #2
   14b28:	add	r1, sp, #48	; 0x30
   14b2c:	mov	r4, ip
   14b30:	bl	12748 <memcpy@plt>
   14b34:	mov	ip, r4
   14b38:	b	14bfc <dim_enter_array@@Base+0x180>
   14b3c:	ldr	r0, [r4, #136]	; 0x88
   14b40:	add	r1, sp, #48	; 0x30
   14b44:	add	r0, r4, r0, lsl #2
   14b48:	ldr	r0, [r0, #8]
   14b4c:	bl	12934 <coda_type_get_special_type@plt>
   14b50:	cmp	r0, #0
   14b54:	beq	14b5c <dim_enter_array@@Base+0xe0>
   14b58:	bl	188d8 <handle_coda_error@@Base>
   14b5c:	ldr	r0, [sp, #48]	; 0x30
   14b60:	cmp	r0, #3
   14b64:	bne	15484 <dim_enter_array@@Base+0xa08>
   14b68:	mov	ip, #1
   14b6c:	mov	r0, #2
   14b70:	str	ip, [r5, #804]	; 0x324
   14b74:	b	14bf8 <dim_enter_array@@Base+0x17c>
   14b78:	ldr	r0, [r4, #136]	; 0x88
   14b7c:	add	r1, sp, #48	; 0x30
   14b80:	add	r0, r4, r0, lsl #2
   14b84:	ldr	r0, [r0, #8]
   14b88:	bl	12970 <coda_type_get_string_length@plt>
   14b8c:	cmp	r0, #0
   14b90:	beq	14b98 <dim_enter_array@@Base+0x11c>
   14b94:	bl	188d8 <handle_coda_error@@Base>
   14b98:	ldr	r0, [sp, #48]	; 0x30
   14b9c:	mov	ip, #1
   14ba0:	str	ip, [r5, #804]	; 0x324
   14ba4:	b	14bf8 <dim_enter_array@@Base+0x17c>
   14ba8:	ldr	r0, [r4, #136]	; 0x88
   14bac:	add	r1, sp, #48	; 0x30
   14bb0:	add	r0, r4, r0, lsl #2
   14bb4:	ldr	r0, [r0, #8]
   14bb8:	bl	12760 <coda_type_get_bit_size@plt>
   14bbc:	cmp	r0, #0
   14bc0:	beq	14bc8 <dim_enter_array@@Base+0x14c>
   14bc4:	bl	188d8 <handle_coda_error@@Base>
   14bc8:	ldr	r0, [sp, #52]	; 0x34
   14bcc:	mov	ip, #1
   14bd0:	str	ip, [r5, #804]	; 0x324
   14bd4:	cmp	r0, #0
   14bd8:	bmi	14bf4 <dim_enter_array@@Base+0x178>
   14bdc:	ldr	r1, [sp, #48]	; 0x30
   14be0:	lsr	r2, r1, #3
   14be4:	tst	r1, #7
   14be8:	orr	r0, r2, r0, lsl #29
   14bec:	addne	r0, r0, #1
   14bf0:	b	14bf8 <dim_enter_array@@Base+0x17c>
   14bf4:	mvn	r0, #0
   14bf8:	str	r0, [r5, #808]	; 0x328
   14bfc:	movw	r1, #49636	; 0xc1e4
   14c00:	add	r0, r5, #800	; 0x320
   14c04:	movt	r1, #2
   14c08:	ldr	r1, [r1]
   14c0c:	cmp	r1, #0
   14c10:	beq	14c80 <dim_enter_array@@Base+0x204>
   14c14:	movw	r8, #53424	; 0xd0b0
   14c18:	movt	r8, #2
   14c1c:	ldr	r4, [r8]
   14c20:	add	r3, ip, r4
   14c24:	str	r4, [r0]
   14c28:	cmp	r3, #9
   14c2c:	bge	15464 <dim_enter_array@@Base+0x9e8>
   14c30:	cmp	r4, #0
   14c34:	str	r3, [r8]
   14c38:	str	r4, [sp, #28]
   14c3c:	ble	14c9c <dim_enter_array@@Base+0x220>
   14c40:	add	r0, r8, r4, lsl #3
   14c44:	ldr	r2, [r0, #236]	; 0xec
   14c48:	ldr	r1, [r0, #232]	; 0xe8
   14c4c:	str	r2, [sp, #32]
   14c50:	ldr	r2, [r0, #296]	; 0x128
   14c54:	str	r1, [sp, #36]	; 0x24
   14c58:	ldr	r1, [r0, #300]	; 0x12c
   14c5c:	rsbs	r0, r2, #0
   14c60:	mov	r0, r1
   14c64:	str	r2, [sp, #12]
   14c68:	str	r1, [sp, #16]
   14c6c:	rscs	r0, r1, #0
   14c70:	bge	14dd8 <dim_enter_array@@Base+0x35c>
   14c74:	cmp	ip, #1
   14c78:	bge	14cc4 <dim_enter_array@@Base+0x248>
   14c7c:	b	15018 <dim_enter_array@@Base+0x59c>
   14c80:	mvn	r1, #0
   14c84:	str	r1, [r0]
   14c88:	mov	r0, #0
   14c8c:	str	r0, [r5, #840]	; 0x348
   14c90:	str	r0, [r5, #844]	; 0x34c
   14c94:	sub	sp, fp, #28
   14c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c9c:	mov	r0, #0
   14ca0:	cmp	ip, #0
   14ca4:	str	r0, [sp, #16]
   14ca8:	mov	r0, #1
   14cac:	str	r0, [sp, #12]
   14cb0:	mov	r0, #1
   14cb4:	str	r0, [sp, #36]	; 0x24
   14cb8:	mov	r0, #0
   14cbc:	str	r0, [sp, #32]
   14cc0:	ble	14eac <dim_enter_array@@Base+0x430>
   14cc4:	add	r0, r5, #804	; 0x324
   14cc8:	mov	r2, #0
   14ccc:	mov	r1, #0
   14cd0:	mov	r7, r4
   14cd4:	str	r0, [sp, #40]	; 0x28
   14cd8:	mov	r0, r5
   14cdc:	add	r5, r8, r4, lsl #2
   14ce0:	str	r0, [sp, #24]
   14ce4:	add	r9, r0, #808	; 0x328
   14ce8:	mov	r0, #0
   14cec:	ldr	r3, [r9, r2, lsl #2]
   14cf0:	add	r6, r5, r2, lsl #2
   14cf4:	add	r2, r2, #1
   14cf8:	str	r0, [r6, #72]	; 0x48
   14cfc:	cmn	r3, #1
   14d00:	str	r3, [r6, #4]
   14d04:	movweq	r1, #1
   14d08:	cmp	ip, r2
   14d0c:	bne	14cec <dim_enter_array@@Base+0x270>
   14d10:	cmp	r1, #0
   14d14:	beq	14ea4 <dim_enter_array@@Base+0x428>
   14d18:	ldr	r0, [sp, #36]	; 0x24
   14d1c:	lsl	r4, r0, #2
   14d20:	rsbs	r0, r0, #0
   14d24:	ldr	r0, [sp, #32]
   14d28:	rscs	r0, r0, #0
   14d2c:	bge	14ec4 <dim_enter_array@@Base+0x448>
   14d30:	mov	r7, #0
   14d34:	mov	sl, #0
   14d38:	ldr	r0, [r9, sl, lsl #2]
   14d3c:	add	r6, r5, sl, lsl #2
   14d40:	cmn	r0, #1
   14d44:	beq	14d6c <dim_enter_array@@Base+0x2f0>
   14d48:	str	r7, [r6, #140]	; 0x8c
   14d4c:	str	r7, [r6, #108]	; 0x6c
   14d50:	add	sl, sl, #1
   14d54:	cmp	sl, ip
   14d58:	bge	14f60 <dim_enter_array@@Base+0x4e4>
   14d5c:	ldr	r0, [r9, sl, lsl #2]
   14d60:	add	r6, r5, sl, lsl #2
   14d64:	cmn	r0, #1
   14d68:	bne	14d48 <dim_enter_array@@Base+0x2cc>
   14d6c:	ldr	r0, [sp, #28]
   14d70:	str	r0, [r6, #140]	; 0x8c
   14d74:	mov	r0, r4
   14d78:	bl	1282c <malloc@plt>
   14d7c:	cmp	r0, #0
   14d80:	str	r0, [r6, #108]	; 0x6c
   14d84:	bne	14db4 <dim_enter_array@@Base+0x338>
   14d88:	movw	r1, #42185	; 0xa4c9
   14d8c:	movw	r3, #42783	; 0xa71f
   14d90:	mov	r0, #456	; 0x1c8
   14d94:	mov	r2, r4
   14d98:	movt	r1, #1
   14d9c:	movt	r3, #1
   14da0:	str	r0, [sp]
   14da4:	mvn	r0, #0
   14da8:	bl	126ac <coda_set_error@plt>
   14dac:	bl	188d8 <handle_coda_error@@Base>
   14db0:	ldr	r0, [r6, #108]	; 0x6c
   14db4:	mov	r1, #255	; 0xff
   14db8:	mov	r2, r4
   14dbc:	bl	12910 <memset@plt>
   14dc0:	ldr	r0, [sp, #40]	; 0x28
   14dc4:	ldr	ip, [r0]
   14dc8:	add	sl, sl, #1
   14dcc:	cmp	sl, ip
   14dd0:	blt	14d5c <dim_enter_array@@Base+0x2e0>
   14dd4:	b	14f60 <dim_enter_array@@Base+0x4e4>
   14dd8:	cmp	ip, #1
   14ddc:	blt	15018 <dim_enter_array@@Base+0x59c>
   14de0:	mov	r0, #0
   14de4:	cmp	ip, #3
   14de8:	bls	14e80 <dim_enter_array@@Base+0x404>
   14dec:	bic	r0, ip, #3
   14df0:	mov	r2, #1
   14df4:	mov	lr, r5
   14df8:	subs	r1, r0, #4
   14dfc:	add	r2, r2, r1, lsr #2
   14e00:	and	r1, r2, #1
   14e04:	beq	1542c <dim_enter_array@@Base+0x9b0>
   14e08:	sub	r3, r2, r1
   14e0c:	add	r2, r8, r4, lsl #2
   14e10:	vmov.i32	q8, #0	; 0x00000000
   14e14:	mov	r5, #32
   14e18:	add	r6, r2, #88	; 0x58
   14e1c:	mov	r2, #0
   14e20:	sub	r4, r6, #16
   14e24:	subs	r3, r3, #2
   14e28:	add	r2, r2, #8
   14e2c:	vst1.32	{d16-d17}, [r4]
   14e30:	sub	r4, r6, #84	; 0x54
   14e34:	vst1.32	{d16-d17}, [r4]
   14e38:	sub	r4, r6, #68	; 0x44
   14e3c:	vst1.32	{d16-d17}, [r4]
   14e40:	vst1.32	{d16-d17}, [r6], r5
   14e44:	bne	14e20 <dim_enter_array@@Base+0x3a4>
   14e48:	ldr	r4, [sp, #28]
   14e4c:	cmp	r1, #0
   14e50:	mov	r5, lr
   14e54:	beq	14e74 <dim_enter_array@@Base+0x3f8>
   14e58:	add	r1, r2, r4
   14e5c:	vmov.i32	q8, #0	; 0x00000000
   14e60:	add	r1, r8, r1, lsl #2
   14e64:	add	r2, r1, #72	; 0x48
   14e68:	add	r1, r1, #4
   14e6c:	vst1.32	{d16-d17}, [r2]
   14e70:	vst1.32	{d16-d17}, [r1]
   14e74:	mov	r7, #0
   14e78:	cmp	ip, r0
   14e7c:	beq	1501c <dim_enter_array@@Base+0x5a0>
   14e80:	add	r1, r8, r4, lsl #2
   14e84:	mov	r7, #0
   14e88:	add	r2, r1, r0, lsl #2
   14e8c:	add	r0, r0, #1
   14e90:	cmp	ip, r0
   14e94:	str	r7, [r2, #72]	; 0x48
   14e98:	str	r7, [r2, #4]
   14e9c:	bne	14e88 <dim_enter_array@@Base+0x40c>
   14ea0:	b	1501c <dim_enter_array@@Base+0x5a0>
   14ea4:	mov	r7, #0
   14ea8:	b	15004 <dim_enter_array@@Base+0x588>
   14eac:	mov	r0, #1
   14eb0:	mov	r7, #0
   14eb4:	str	r0, [sp, #36]	; 0x24
   14eb8:	mov	r0, #0
   14ebc:	str	r0, [sp, #32]
   14ec0:	b	15020 <dim_enter_array@@Base+0x5a4>
   14ec4:	mov	sl, #0
   14ec8:	ldr	r0, [r9, sl, lsl #2]
   14ecc:	add	r6, r5, sl, lsl #2
   14ed0:	cmn	r0, #1
   14ed4:	beq	14f00 <dim_enter_array@@Base+0x484>
   14ed8:	mov	r0, #0
   14edc:	str	r0, [r6, #140]	; 0x8c
   14ee0:	str	r0, [r6, #108]	; 0x6c
   14ee4:	add	sl, sl, #1
   14ee8:	cmp	sl, ip
   14eec:	bge	14f60 <dim_enter_array@@Base+0x4e4>
   14ef0:	ldr	r0, [r9, sl, lsl #2]
   14ef4:	add	r6, r5, sl, lsl #2
   14ef8:	cmn	r0, #1
   14efc:	bne	14ed8 <dim_enter_array@@Base+0x45c>
   14f00:	ldr	r0, [sp, #28]
   14f04:	mov	r7, ip
   14f08:	str	r0, [r6, #140]	; 0x8c
   14f0c:	mov	r0, r4
   14f10:	bl	1282c <malloc@plt>
   14f14:	mov	ip, r7
   14f18:	cmp	r0, #0
   14f1c:	str	r0, [r6, #108]	; 0x6c
   14f20:	bne	14ee4 <dim_enter_array@@Base+0x468>
   14f24:	movw	r1, #42185	; 0xa4c9
   14f28:	movw	r3, #42783	; 0xa71f
   14f2c:	mov	r0, #456	; 0x1c8
   14f30:	mov	r2, r4
   14f34:	movt	r1, #1
   14f38:	movt	r3, #1
   14f3c:	str	r0, [sp]
   14f40:	mvn	r0, #0
   14f44:	bl	126ac <coda_set_error@plt>
   14f48:	bl	188d8 <handle_coda_error@@Base>
   14f4c:	ldr	r0, [sp, #40]	; 0x28
   14f50:	ldr	ip, [r0]
   14f54:	add	sl, sl, #1
   14f58:	cmp	sl, ip
   14f5c:	blt	14ef0 <dim_enter_array@@Base+0x474>
   14f60:	ldr	r0, [sp, #24]
   14f64:	mov	r1, #0
   14f68:	mov	r2, #0
   14f6c:	str	r1, [r0, #844]	; 0x34c
   14f70:	mov	r0, #0
   14f74:	mov	r1, #0
   14f78:	bl	154a4 <dim_enter_array@@Base+0xa28>
   14f7c:	ldr	r0, [sp, #40]	; 0x28
   14f80:	ldr	ip, [r0]
   14f84:	cmp	ip, #1
   14f88:	blt	15010 <dim_enter_array@@Base+0x594>
   14f8c:	mov	sl, #0
   14f90:	mov	r4, #0
   14f94:	mov	r7, #0
   14f98:	ldr	r0, [r9, r4, lsl #2]
   14f9c:	cmn	r0, #1
   14fa0:	bne	14fc4 <dim_enter_array@@Base+0x548>
   14fa4:	b	14fdc <dim_enter_array@@Base+0x560>
   14fa8:	str	sl, [r6, #72]	; 0x48
   14fac:	ldr	r0, [r6, #108]	; 0x6c
   14fb0:	bl	126f4 <free@plt>
   14fb4:	ldr	r0, [sp, #40]	; 0x28
   14fb8:	str	sl, [r6, #140]	; 0x8c
   14fbc:	str	sl, [r6, #108]	; 0x6c
   14fc0:	ldr	ip, [r0]
   14fc4:	add	r4, r4, #1
   14fc8:	cmp	r4, ip
   14fcc:	bge	15004 <dim_enter_array@@Base+0x588>
   14fd0:	ldr	r0, [r9, r4, lsl #2]
   14fd4:	cmn	r0, #1
   14fd8:	bne	14fc4 <dim_enter_array@@Base+0x548>
   14fdc:	add	r6, r5, r4, lsl #2
   14fe0:	ldr	r0, [r6, #4]
   14fe4:	ldr	r1, [r6, #36]	; 0x24
   14fe8:	cmp	r0, r1
   14fec:	beq	14fa8 <dim_enter_array@@Base+0x52c>
   14ff0:	mov	r7, #1
   14ff4:	str	r7, [r6, #72]	; 0x48
   14ff8:	add	r4, r4, #1
   14ffc:	cmp	r4, ip
   15000:	blt	14fd0 <dim_enter_array@@Base+0x554>
   15004:	ldr	r4, [sp, #28]
   15008:	ldr	r5, [sp, #24]
   1500c:	b	1501c <dim_enter_array@@Base+0x5a0>
   15010:	ldr	r4, [sp, #28]
   15014:	ldr	r5, [sp, #24]
   15018:	mov	r7, #0
   1501c:	ldr	r3, [r8]
   15020:	mvn	r0, #0
   15024:	cmp	r3, #1
   15028:	str	r0, [r8, #104]	; 0x68
   1502c:	mov	r0, #0
   15030:	str	r0, [r8, #68]	; 0x44
   15034:	blt	1505c <dim_enter_array@@Base+0x5e0>
   15038:	mov	r1, #1
   1503c:	add	r2, r8, r0, lsl #2
   15040:	ldr	r2, [r2, #72]	; 0x48
   15044:	cmp	r2, #0
   15048:	strne	r0, [r8, #104]	; 0x68
   1504c:	add	r0, r0, #1
   15050:	strne	r1, [r8, #68]	; 0x44
   15054:	cmp	r0, r3
   15058:	blt	1503c <dim_enter_array@@Base+0x5c0>
   1505c:	mov	r0, #1
   15060:	cmp	ip, #1
   15064:	str	r3, [sp, #20]
   15068:	str	ip, [sp, #40]	; 0x28
   1506c:	str	r0, [r5, #840]!	; 0x348
   15070:	blt	15120 <dim_enter_array@@Base+0x6a4>
   15074:	str	r7, [sp, #8]
   15078:	add	r2, r8, r4, lsl #3
   1507c:	ldr	r7, [sp, #36]	; 0x24
   15080:	add	r1, r8, r4, lsl #2
   15084:	mov	r3, #0
   15088:	str	r5, [sp, #24]
   1508c:	add	ip, r2, #240	; 0xf0
   15090:	add	lr, r1, #4
   15094:	mov	r2, ip
   15098:	ldr	r5, [lr, r3, lsl #2]
   1509c:	cmp	r3, #0
   150a0:	mul	r0, r0, r5
   150a4:	beq	150ec <dim_enter_array@@Base+0x670>
   150a8:	ldr	r4, [r2, #-8]
   150ac:	ldr	r1, [r2, #-4]
   150b0:	asr	sl, r5, #31
   150b4:	umull	r6, r9, r4, r5
   150b8:	mla	r4, r4, sl, r9
   150bc:	mla	r1, r1, r5, r4
   150c0:	str	r6, [r2]
   150c4:	str	r1, [r2, #4]
   150c8:	ldr	r1, [sp, #40]	; 0x28
   150cc:	add	r3, r3, #1
   150d0:	add	r2, r2, #8
   150d4:	cmp	r3, r1
   150d8:	bge	1510c <dim_enter_array@@Base+0x690>
   150dc:	ldr	r5, [lr, r3, lsl #2]
   150e0:	cmp	r3, #0
   150e4:	mul	r0, r0, r5
   150e8:	bne	150a8 <dim_enter_array@@Base+0x62c>
   150ec:	ldr	r5, [lr]
   150f0:	umull	r4, r6, r7, r5
   150f4:	asr	r1, r5, #31
   150f8:	mla	r1, r7, r1, r6
   150fc:	ldr	r6, [sp, #32]
   15100:	mla	r5, r6, r5, r1
   15104:	strd	r4, [ip]
   15108:	b	150c8 <dim_enter_array@@Base+0x64c>
   1510c:	ldr	r1, [sp, #24]
   15110:	ldr	r4, [sp, #28]
   15114:	ldr	ip, [sp, #40]	; 0x28
   15118:	ldr	r7, [sp, #8]
   1511c:	str	r0, [r1]
   15120:	cmp	r7, #0
   15124:	beq	15208 <dim_enter_array@@Base+0x78c>
   15128:	cmp	ip, #1
   1512c:	blt	15144 <dim_enter_array@@Base+0x6c8>
   15130:	add	r0, r8, r4, lsl #3
   15134:	lsl	r2, ip, #3
   15138:	mov	r1, #0
   1513c:	add	r0, r0, #304	; 0x130
   15140:	bl	12910 <memset@plt>
   15144:	ldr	r0, [sp, #36]	; 0x24
   15148:	subs	r0, r0, #1
   1514c:	ldr	r0, [sp, #32]
   15150:	sbcs	r0, r0, #0
   15154:	ldrge	r0, [sp, #40]	; 0x28
   15158:	cmpge	r0, #1
   1515c:	blt	152f0 <dim_enter_array@@Base+0x874>
   15160:	ldr	r1, [sp, #28]
   15164:	movw	r0, #65232	; 0xfed0
   15168:	mov	r2, #0
   1516c:	movt	r0, #65535	; 0xffff
   15170:	sub	ip, r0, r1, lsl #3
   15174:	lsl	lr, r1, #2
   15178:	b	15194 <dim_enter_array@@Base+0x718>
   1517c:	ldr	r0, [sp, #36]	; 0x24
   15180:	add	r2, r2, #1
   15184:	subs	r0, r2, r0
   15188:	ldr	r0, [sp, #32]
   1518c:	rscs	r0, r0, #0
   15190:	bge	152f0 <dim_enter_array@@Base+0x874>
   15194:	ldr	r6, [sp, #40]	; 0x28
   15198:	mov	r3, #1
   1519c:	mov	r1, lr
   151a0:	mov	r0, ip
   151a4:	add	r4, r8, r1
   151a8:	ldr	r5, [r4, #72]	; 0x48
   151ac:	cmp	r5, #0
   151b0:	bne	151fc <dim_enter_array@@Base+0x780>
   151b4:	add	r4, r4, #4
   151b8:	ldr	r4, [r4]
   151bc:	mov	r5, r8
   151c0:	add	r1, r1, #4
   151c4:	ldr	r7, [r5, -r0]!
   151c8:	sub	r0, r0, #8
   151cc:	mul	r3, r4, r3
   151d0:	adds	r4, r7, r3
   151d4:	str	r4, [r5]
   151d8:	ldr	r4, [r5, #4]
   151dc:	adc	r4, r4, r3, asr #31
   151e0:	subs	r6, r6, #1
   151e4:	str	r4, [r5, #4]
   151e8:	beq	1517c <dim_enter_array@@Base+0x700>
   151ec:	add	r4, r8, r1
   151f0:	ldr	r5, [r4, #72]	; 0x48
   151f4:	cmp	r5, #0
   151f8:	beq	151b4 <dim_enter_array@@Base+0x738>
   151fc:	ldr	r4, [r4, #108]	; 0x6c
   15200:	add	r4, r4, r2, lsl #2
   15204:	b	151b8 <dim_enter_array@@Base+0x73c>
   15208:	add	lr, r8, r4, lsl #2
   1520c:	ldr	r2, [sp, #12]
   15210:	mov	r7, r4
   15214:	add	r5, r8, r4, lsl #3
   15218:	cmp	ip, #2
   1521c:	ldr	r0, [lr, #4]
   15220:	umull	r1, r3, r2, r0
   15224:	asr	r7, r0, #31
   15228:	mla	r3, r2, r7, r3
   1522c:	ldr	r2, [sp, #16]
   15230:	str	r1, [r5, #304]	; 0x130
   15234:	mla	r0, r2, r0, r3
   15238:	str	r0, [r5, #308]	; 0x134
   1523c:	blt	152f0 <dim_enter_array@@Base+0x874>
   15240:	ldr	r1, [sp, #40]	; 0x28
   15244:	ldr	r0, [r5, #304]	; 0x130
   15248:	ldr	sl, [r5, #308]	; 0x134
   1524c:	mov	r6, #1
   15250:	sub	r4, r1, #1
   15254:	cmp	r1, #2
   15258:	and	ip, r4, #1
   1525c:	beq	152bc <dim_enter_array@@Base+0x840>
   15260:	sub	r9, r4, ip
   15264:	add	r4, r5, #320	; 0x140
   15268:	mov	r5, #0
   1526c:	add	r7, lr, r5, lsl #2
   15270:	add	r5, r5, #2
   15274:	cmp	r9, r5
   15278:	ldr	r3, [r7, #8]
   1527c:	umull	r2, r6, r0, r3
   15280:	asr	r1, r3, #31
   15284:	mla	r0, r0, r1, r6
   15288:	mla	r1, sl, r3, r0
   1528c:	str	r2, [r4, #-8]
   15290:	str	r1, [r4, #-4]
   15294:	ldr	r3, [r7, #12]
   15298:	umull	r0, r6, r2, r3
   1529c:	asr	r7, r3, #31
   152a0:	mla	r2, r2, r7, r6
   152a4:	mla	sl, r1, r3, r2
   152a8:	str	r0, [r4]
   152ac:	str	sl, [r4, #4]
   152b0:	add	r4, r4, #16
   152b4:	bne	1526c <dim_enter_array@@Base+0x7f0>
   152b8:	add	r6, r5, #1
   152bc:	cmp	ip, #0
   152c0:	beq	152f0 <dim_enter_array@@Base+0x874>
   152c4:	ldr	r1, [sp, #28]
   152c8:	add	r1, r6, r1
   152cc:	add	r2, r8, r1, lsl #3
   152d0:	add	r1, r8, r1, lsl #2
   152d4:	ldr	r1, [r1, #4]
   152d8:	umull	r3, r7, r0, r1
   152dc:	asr	r6, r1, #31
   152e0:	mla	r0, r0, r6, r7
   152e4:	mla	r0, sl, r1, r0
   152e8:	str	r3, [r2, #304]	; 0x130
   152ec:	str	r0, [r2, #308]	; 0x134
   152f0:	ldr	r0, [sp, #28]
   152f4:	ldr	r5, [sp, #40]	; 0x28
   152f8:	add	r0, r0, r5
   152fc:	add	r1, r8, r0, lsl #3
   15300:	ldr	r0, [r1, #296]	; 0x128
   15304:	ldr	r2, [r1, #300]	; 0x12c
   15308:	subs	r0, r0, #1
   1530c:	sbcs	r0, r2, #0
   15310:	blt	15424 <dim_enter_array@@Base+0x9a8>
   15314:	ldr	r0, [sp, #20]
   15318:	sub	r0, r0, #1
   1531c:	add	r2, r8, r0, lsl #3
   15320:	add	r0, r8, r0, lsl #2
   15324:	ldr	r0, [r0, #4]
   15328:	asr	r3, r0, #31
   1532c:	str	r0, [r2, #176]	; 0xb0
   15330:	subs	r0, r5, #2
   15334:	str	r3, [r2, #180]	; 0xb4
   15338:	bmi	15384 <dim_enter_array@@Base+0x908>
   1533c:	ldr	r0, [sp, #28]
   15340:	add	r1, r1, #160	; 0xa0
   15344:	add	r0, r8, r0, lsl #2
   15348:	sub	r0, r0, #4
   1534c:	ldr	r2, [r0, r5, lsl #2]
   15350:	ldr	r4, [r1, #8]
   15354:	ldr	r9, [r1, #12]
   15358:	umull	r6, r3, r4, r2
   1535c:	asr	r7, r2, #31
   15360:	mla	r3, r4, r7, r3
   15364:	mla	r7, r9, r2, r3
   15368:	sub	r3, r5, #2
   1536c:	sub	r2, r5, #1
   15370:	cmp	r3, #0
   15374:	mov	r5, r2
   15378:	strd	r6, [r1]
   1537c:	sub	r1, r1, #8
   15380:	bgt	1534c <dim_enter_array@@Base+0x8d0>
   15384:	ldr	r2, [sp, #28]
   15388:	cmp	r2, #1
   1538c:	blt	15424 <dim_enter_array@@Base+0x9a8>
   15390:	add	r0, r8, r2, lsl #3
   15394:	tst	r2, #1
   15398:	mov	r1, r2
   1539c:	add	ip, r0, #176	; 0xb0
   153a0:	beq	153d0 <dim_enter_array@@Base+0x954>
   153a4:	sub	r1, r2, #1
   153a8:	ldrd	r6, [ip]
   153ac:	add	r2, r8, r1, lsl #3
   153b0:	ldr	r4, [r2, #176]	; 0xb0
   153b4:	ldr	r9, [r2, #180]	; 0xb4
   153b8:	umull	r3, r5, r4, r6
   153bc:	mla	r7, r4, r7, r5
   153c0:	mla	r5, r9, r6, r7
   153c4:	str	r3, [r2, #176]	; 0xb0
   153c8:	str	r5, [r2, #180]	; 0xb4
   153cc:	ldr	r2, [sp, #28]
   153d0:	cmp	r2, #1
   153d4:	beq	15424 <dim_enter_array@@Base+0x9a8>
   153d8:	add	r2, r8, r1, lsl #3
   153dc:	add	r2, r2, #160	; 0xa0
   153e0:	ldrd	r4, [ip]
   153e4:	ldr	r6, [r2, #8]
   153e8:	ldr	r0, [r2, #12]
   153ec:	ldm	r2, {r3, lr}
   153f0:	sub	r1, r1, #2
   153f4:	cmp	r1, #0
   153f8:	umull	r8, r7, r6, r4
   153fc:	mla	r5, r6, r5, r7
   15400:	mla	r9, r0, r4, r5
   15404:	strd	r8, [r2, #8]
   15408:	ldm	ip, {r0, r5}
   1540c:	umull	r4, r6, r3, r0
   15410:	mla	r3, r3, r5, r6
   15414:	mla	r5, lr, r0, r3
   15418:	strd	r4, [r2]
   1541c:	sub	r2, r2, #16
   15420:	bgt	153e0 <dim_enter_array@@Base+0x964>
   15424:	sub	sp, fp, #28
   15428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1542c:	mov	r2, #0
   15430:	ldr	r4, [sp, #28]
   15434:	cmp	r1, #0
   15438:	mov	r5, lr
   1543c:	bne	14e58 <dim_enter_array@@Base+0x3dc>
   15440:	b	14e74 <dim_enter_array@@Base+0x3f8>
   15444:	movw	r0, #42730	; 0xa6ea
   15448:	movw	r1, #42783	; 0xa71f
   1544c:	movw	r3, #42918	; 0xa7a6
   15450:	movw	r2, #386	; 0x182
   15454:	movt	r0, #1
   15458:	movt	r1, #1
   1545c:	movt	r3, #1
   15460:	bl	12ab4 <__assert_fail@plt>
   15464:	movw	r0, #42941	; 0xa7bd
   15468:	movw	r1, #42783	; 0xa71f
   1546c:	movw	r3, #42918	; 0xa7a6
   15470:	movw	r2, #402	; 0x192
   15474:	movt	r0, #1
   15478:	movt	r1, #1
   1547c:	movt	r3, #1
   15480:	bl	12ab4 <__assert_fail@plt>
   15484:	movw	r0, #42730	; 0xa6ea
   15488:	movw	r1, #42783	; 0xa71f
   1548c:	movw	r3, #42918	; 0xa7a6
   15490:	movw	r2, #349	; 0x15d
   15494:	movt	r0, #1
   15498:	movt	r1, #1
   1549c:	movt	r3, #1
   154a0:	bl	12ab4 <__assert_fail@plt>
   154a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154a8:	add	fp, sp, #28
   154ac:	sub	sp, sp, #44	; 0x2c
   154b0:	movw	r7, #49640	; 0xc1e8
   154b4:	mov	r8, r1
   154b8:	mov	r9, r0
   154bc:	sub	r1, fp, #32
   154c0:	str	r2, [sp]
   154c4:	movt	r7, #2
   154c8:	add	r5, r7, #144	; 0x90
   154cc:	mov	r0, r5
   154d0:	bl	12784 <coda_cursor_get_type_class@plt>
   154d4:	cmp	r0, #0
   154d8:	beq	154e0 <dim_enter_array@@Base+0xa64>
   154dc:	bl	188d8 <handle_coda_error@@Base>
   154e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154e4:	sub	r1, r0, #4
   154e8:	cmp	r1, #2
   154ec:	bcc	155d8 <dim_enter_array@@Base+0xb5c>
   154f0:	cmp	r0, #0
   154f4:	beq	15618 <dim_enter_array@@Base+0xb9c>
   154f8:	cmp	r0, #1
   154fc:	bne	158cc <dim_enter_array@@Base+0xe50>
   15500:	add	r0, r8, r8, lsl #2
   15504:	add	r4, r7, r0, lsl #4
   15508:	ldr	r0, [r7, #3360]	; 0xd20
   1550c:	ldr	r6, [r4, #800]	; 0x320
   15510:	cmp	r0, r8
   15514:	bne	15710 <dim_enter_array@@Base+0xc94>
   15518:	add	r8, sp, #8
   1551c:	add	r1, sp, #4
   15520:	mov	r0, r5
   15524:	mov	r2, r8
   15528:	bl	12988 <coda_cursor_get_array_dim@plt>
   1552c:	cmp	r0, #0
   15530:	beq	15538 <dim_enter_array@@Base+0xabc>
   15534:	bl	188d8 <handle_coda_error@@Base>
   15538:	mov	r0, r4
   1553c:	ldr	r1, [sp, #4]
   15540:	ldr	r2, [r0, #804]!	; 0x324
   15544:	cmp	r1, r2
   15548:	bne	1590c <dim_enter_array@@Base+0xe90>
   1554c:	cmp	r1, #1
   15550:	blt	15838 <dim_enter_array@@Base+0xdbc>
   15554:	movw	r1, #53424	; 0xd0b0
   15558:	add	r2, r4, #808	; 0x328
   1555c:	add	r3, r4, #844	; 0x34c
   15560:	mov	r7, #0
   15564:	movt	r1, #2
   15568:	add	ip, r1, r6, lsl #2
   1556c:	ldr	r6, [r2, r7, lsl #2]
   15570:	cmn	r6, #1
   15574:	bne	15590 <dim_enter_array@@Base+0xb14>
   15578:	b	155ac <dim_enter_array@@Base+0xb30>
   1557c:	cmp	r5, r6
   15580:	strlt	r6, [r4, #4]
   15584:	ldr	r1, [r4, #36]	; 0x24
   15588:	cmp	r1, r6
   1558c:	strgt	r6, [r4, #36]	; 0x24
   15590:	ldr	r1, [r0]
   15594:	add	r7, r7, #1
   15598:	cmp	r7, r1
   1559c:	bge	15838 <dim_enter_array@@Base+0xdbc>
   155a0:	ldr	r6, [r2, r7, lsl #2]
   155a4:	cmn	r6, #1
   155a8:	bne	15590 <dim_enter_array@@Base+0xb14>
   155ac:	add	r4, ip, r7, lsl #2
   155b0:	ldr	r6, [r8, r7, lsl #2]
   155b4:	ldr	r1, [r3]
   155b8:	ldr	r5, [r4, #108]	; 0x6c
   155bc:	str	r6, [r5, r1, lsl #2]
   155c0:	ldr	r5, [r4, #4]
   155c4:	cmn	r5, #1
   155c8:	bne	1557c <dim_enter_array@@Base+0xb00>
   155cc:	str	r6, [r4, #4]
   155d0:	str	r6, [r4, #36]	; 0x24
   155d4:	b	15590 <dim_enter_array@@Base+0xb14>
   155d8:	ldr	r1, [r7, #3360]	; 0xd20
   155dc:	cmp	r1, r8
   155e0:	bne	158ec <dim_enter_array@@Base+0xe70>
   155e4:	cmp	r0, #4
   155e8:	bne	15684 <dim_enter_array@@Base+0xc08>
   155ec:	add	r1, sp, #4
   155f0:	mov	r0, r5
   155f4:	bl	1288c <coda_cursor_get_string_length@plt>
   155f8:	cmp	r0, #0
   155fc:	beq	15604 <dim_enter_array@@Base+0xb88>
   15600:	bl	188d8 <handle_coda_error@@Base>
   15604:	ldr	r0, [sp, #4]
   15608:	str	r0, [sp, #8]
   1560c:	asr	r0, r0, #31
   15610:	str	r0, [sp, #12]
   15614:	b	1569c <dim_enter_array@@Base+0xc20>
   15618:	ldr	r0, [sp]
   1561c:	add	r2, sp, #8
   15620:	add	r4, r7, r0, lsl #2
   15624:	mov	r0, r5
   15628:	ldr	r1, [r4, #3492]!	; 0xda4
   1562c:	bl	12694 <coda_cursor_get_record_field_available_status@plt>
   15630:	cmp	r0, #0
   15634:	beq	1563c <dim_enter_array@@Base+0xbc0>
   15638:	bl	188d8 <handle_coda_error@@Base>
   1563c:	ldr	r0, [sp, #8]
   15640:	cmp	r0, #0
   15644:	beq	1579c <dim_enter_array@@Base+0xd20>
   15648:	ldr	r1, [r4]
   1564c:	mov	r0, r5
   15650:	bl	127fc <coda_cursor_goto_record_field_by_index@plt>
   15654:	cmp	r0, #0
   15658:	beq	15660 <dim_enter_array@@Base+0xbe4>
   1565c:	bl	188d8 <handle_coda_error@@Base>
   15660:	ldr	r1, [sp]
   15664:	add	r0, r9, #1
   15668:	add	r2, r1, #1
   1566c:	mov	r1, r8
   15670:	bl	154a4 <dim_enter_array@@Base+0xa28>
   15674:	mov	r0, r5
   15678:	bl	1285c <coda_cursor_goto_parent@plt>
   1567c:	sub	sp, fp, #28
   15680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15684:	add	r1, sp, #8
   15688:	mov	r0, r5
   1568c:	bl	1261c <coda_cursor_get_byte_size@plt>
   15690:	cmp	r0, #0
   15694:	beq	1569c <dim_enter_array@@Base+0xc20>
   15698:	bl	188d8 <handle_coda_error@@Base>
   1569c:	add	r0, r8, r8, lsl #2
   156a0:	ldr	r2, [sp, #12]
   156a4:	add	r0, r7, r0, lsl #4
   156a8:	ldr	r1, [r0, #800]	; 0x320
   156ac:	ldr	r3, [r0, #844]	; 0x34c
   156b0:	movw	r0, #53424	; 0xd0b0
   156b4:	movt	r0, #2
   156b8:	add	r0, r0, r1, lsl #2
   156bc:	ldr	r1, [sp, #8]
   156c0:	ldr	r7, [r0, #108]	; 0x6c
   156c4:	str	r1, [r7, r3, lsl #2]
   156c8:	mov	r3, r0
   156cc:	ldr	r7, [r3, #4]!
   156d0:	cmn	r7, #1
   156d4:	beq	156fc <dim_enter_array@@Base+0xc80>
   156d8:	subs	r6, r7, r1
   156dc:	rscs	r7, r2, r7, asr #31
   156e0:	strlt	r1, [r3]
   156e4:	ldr	r3, [r0, #36]!	; 0x24
   156e8:	subs	r7, r1, r3
   156ec:	sbcs	r2, r2, r3, asr #31
   156f0:	strlt	r1, [r0]
   156f4:	sub	sp, fp, #28
   156f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156fc:	add	r0, r0, #36	; 0x24
   15700:	str	r1, [r3]
   15704:	str	r1, [r0]
   15708:	sub	sp, fp, #28
   1570c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15710:	cmp	r8, #0
   15714:	moveq	r0, #0
   15718:	streq	r0, [r7, #844]	; 0x34c
   1571c:	ldr	r1, [r4, #840]	; 0x348
   15720:	ldr	r0, [r4, #844]	; 0x34c
   15724:	mul	r1, r1, r0
   15728:	str	r1, [r4, #924]!	; 0x39c
   1572c:	ldr	r1, [r4, #-120]	; 0xffffff88
   15730:	cmp	r1, #1
   15734:	blt	15840 <dim_enter_array@@Base+0xdc4>
   15738:	movw	r2, #53424	; 0xd0b0
   1573c:	add	r1, r1, r6
   15740:	add	r3, r6, #27
   15744:	movt	r2, #2
   15748:	add	r2, r2, r6, lsl #2
   1574c:	mov	r6, #1
   15750:	add	r2, r2, #72	; 0x48
   15754:	ldr	r7, [r2]
   15758:	cmp	r7, #0
   1575c:	bne	15790 <dim_enter_array@@Base+0xd14>
   15760:	sub	r7, r2, #68	; 0x44
   15764:	ldr	r7, [r7]
   15768:	add	r2, r2, #4
   1576c:	mul	r6, r7, r6
   15770:	add	r7, r3, #1
   15774:	sub	r3, r3, #26
   15778:	cmp	r3, r1
   1577c:	mov	r3, r7
   15780:	bge	15830 <dim_enter_array@@Base+0xdb4>
   15784:	ldr	r7, [r2]
   15788:	cmp	r7, #0
   1578c:	beq	15760 <dim_enter_array@@Base+0xce4>
   15790:	ldr	r7, [r2, #36]	; 0x24
   15794:	add	r7, r7, r0, lsl #2
   15798:	b	15764 <dim_enter_array@@Base+0xce8>
   1579c:	ldr	r0, [r7, #3360]	; 0xd20
   157a0:	add	r0, r0, r0, lsl #2
   157a4:	add	r3, r7, r0, lsl #4
   157a8:	mov	r0, r3
   157ac:	ldr	r5, [r0, #804]!	; 0x324
   157b0:	cmp	r5, #1
   157b4:	blt	15838 <dim_enter_array@@Base+0xdbc>
   157b8:	ldr	r1, [r0, #-4]
   157bc:	movw	r2, #53424	; 0xd0b0
   157c0:	mov	r7, #0
   157c4:	mov	r6, #0
   157c8:	movt	r2, #2
   157cc:	add	ip, r2, r1, lsl #2
   157d0:	add	r2, r3, #808	; 0x328
   157d4:	add	r3, r3, #844	; 0x34c
   157d8:	ldr	r4, [r2, r6, lsl #2]
   157dc:	cmn	r4, #1
   157e0:	beq	157fc <dim_enter_array@@Base+0xd80>
   157e4:	add	r6, r6, #1
   157e8:	cmp	r6, r5
   157ec:	bge	15838 <dim_enter_array@@Base+0xdbc>
   157f0:	ldr	r4, [r2, r6, lsl #2]
   157f4:	cmn	r4, #1
   157f8:	bne	157e4 <dim_enter_array@@Base+0xd68>
   157fc:	add	r5, ip, r6, lsl #2
   15800:	ldr	r1, [r3]
   15804:	ldr	r4, [r5, #108]	; 0x6c
   15808:	str	r7, [r4, r1, lsl #2]
   1580c:	ldr	r1, [r5, #4]
   15810:	cmn	r1, #1
   15814:	streq	r7, [r5, #4]
   15818:	str	r7, [r5, #36]	; 0x24
   1581c:	ldr	r5, [r0]
   15820:	add	r6, r6, #1
   15824:	cmp	r6, r5
   15828:	blt	157f0 <dim_enter_array@@Base+0xd74>
   1582c:	b	15838 <dim_enter_array@@Base+0xdbc>
   15830:	cmp	r6, #1
   15834:	bge	15844 <dim_enter_array@@Base+0xdc8>
   15838:	sub	sp, fp, #28
   1583c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15840:	mov	r6, #1
   15844:	mov	r0, r5
   15848:	mov	r7, r9
   1584c:	mov	sl, r5
   15850:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   15854:	cmp	r0, #0
   15858:	beq	15860 <dim_enter_array@@Base+0xde4>
   1585c:	bl	188d8 <handle_coda_error@@Base>
   15860:	add	r5, r8, #1
   15864:	sub	r9, r6, #1
   15868:	add	r7, r7, #1
   1586c:	mov	r8, #0
   15870:	b	1588c <dim_enter_array@@Base+0xe10>
   15874:	ldr	r0, [r4]
   15878:	add	r0, r0, #1
   1587c:	str	r0, [r4]
   15880:	add	r8, r8, #1
   15884:	cmp	r6, r8
   15888:	beq	158bc <dim_enter_array@@Base+0xe40>
   1588c:	ldr	r2, [sp]
   15890:	mov	r0, r7
   15894:	mov	r1, r5
   15898:	bl	154a4 <dim_enter_array@@Base+0xa28>
   1589c:	cmp	r8, r9
   158a0:	bge	15880 <dim_enter_array@@Base+0xe04>
   158a4:	mov	r0, sl
   158a8:	bl	128c8 <coda_cursor_goto_next_array_element@plt>
   158ac:	cmp	r0, #0
   158b0:	beq	15874 <dim_enter_array@@Base+0xdf8>
   158b4:	bl	188d8 <handle_coda_error@@Base>
   158b8:	b	15874 <dim_enter_array@@Base+0xdf8>
   158bc:	mov	r0, sl
   158c0:	bl	1285c <coda_cursor_goto_parent@plt>
   158c4:	sub	sp, fp, #28
   158c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158cc:	movw	r0, #42730	; 0xa6ea
   158d0:	movw	r1, #42783	; 0xa71f
   158d4:	movw	r3, #43084	; 0xa84c
   158d8:	movw	r2, #294	; 0x126
   158dc:	movt	r0, #1
   158e0:	movt	r1, #1
   158e4:	movt	r3, #1
   158e8:	bl	12ab4 <__assert_fail@plt>
   158ec:	movw	r0, #43127	; 0xa877
   158f0:	movw	r1, #42783	; 0xa71f
   158f4:	movw	r3, #43084	; 0xa84c
   158f8:	mov	r2, #252	; 0xfc
   158fc:	movt	r0, #1
   15900:	movt	r1, #1
   15904:	movt	r3, #1
   15908:	bl	12ab4 <__assert_fail@plt>
   1590c:	movw	r0, #43051	; 0xa82b
   15910:	movw	r1, #42783	; 0xa71f
   15914:	movw	r3, #43084	; 0xa84c
   15918:	mov	r2, #125	; 0x7d
   1591c:	movt	r0, #1
   15920:	movt	r1, #1
   15924:	movt	r3, #1
   15928:	bl	12ab4 <__assert_fail@plt>

0001592c <dim_leave_array@@Base>:
   1592c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15930:	add	fp, sp, #24
   15934:	movw	r0, #49640	; 0xc1e8
   15938:	movt	r0, #2
   1593c:	ldr	r1, [r0, #3360]	; 0xd20
   15940:	cmn	r1, #1
   15944:	ble	15a50 <dim_leave_array@@Base+0x124>
   15948:	add	r1, r1, r1, lsl #2
   1594c:	movw	r8, #53424	; 0xd0b0
   15950:	movt	r8, #2
   15954:	add	r6, r0, r1, lsl #4
   15958:	ldr	r1, [r8]
   1595c:	ldr	r0, [r6, #804]!	; 0x324
   15960:	ldr	r4, [r6, #-4]
   15964:	sub	r1, r1, r0
   15968:	cmp	r0, #1
   1596c:	str	r1, [r8]
   15970:	blt	159c4 <dim_leave_array@@Base+0x98>
   15974:	add	r7, r8, r4, lsl #2
   15978:	mov	r5, #0
   1597c:	add	r1, r7, r5, lsl #2
   15980:	ldr	r2, [r1, #72]	; 0x48
   15984:	cmp	r2, #0
   15988:	bne	159a8 <dim_leave_array@@Base+0x7c>
   1598c:	add	r5, r5, #1
   15990:	cmp	r5, r0
   15994:	bge	159c0 <dim_leave_array@@Base+0x94>
   15998:	add	r1, r7, r5, lsl #2
   1599c:	ldr	r2, [r1, #72]	; 0x48
   159a0:	cmp	r2, #0
   159a4:	beq	1598c <dim_leave_array@@Base+0x60>
   159a8:	ldr	r0, [r1, #108]	; 0x6c
   159ac:	bl	126f4 <free@plt>
   159b0:	ldr	r0, [r6]
   159b4:	add	r5, r5, #1
   159b8:	cmp	r5, r0
   159bc:	blt	15998 <dim_leave_array@@Base+0x6c>
   159c0:	ldr	r1, [r8]
   159c4:	mvn	r2, #0
   159c8:	cmp	r1, #1
   159cc:	str	r2, [r8, #104]	; 0x68
   159d0:	mov	r2, #0
   159d4:	str	r2, [r8, #68]	; 0x44
   159d8:	blt	15a00 <dim_leave_array@@Base+0xd4>
   159dc:	mov	r3, #1
   159e0:	add	r7, r8, r2, lsl #2
   159e4:	ldr	r7, [r7, #72]	; 0x48
   159e8:	cmp	r7, #0
   159ec:	strne	r2, [r8, #104]	; 0x68
   159f0:	add	r2, r2, #1
   159f4:	strne	r3, [r8, #68]	; 0x44
   159f8:	cmp	r2, r1
   159fc:	blt	159e0 <dim_leave_array@@Base+0xb4>
   15a00:	add	r0, r4, r0
   15a04:	add	r0, r8, r0, lsl #3
   15a08:	ldr	r1, [r0, #296]	; 0x128
   15a0c:	ldr	r0, [r0, #300]	; 0x12c
   15a10:	subs	r1, r1, #1
   15a14:	sbcs	r0, r0, #0
   15a18:	cmpge	r4, #1
   15a1c:	blt	15a4c <dim_leave_array@@Base+0x120>
   15a20:	add	r0, r8, r4, lsl #3
   15a24:	add	r5, r0, #168	; 0xa8
   15a28:	add	r6, r0, #176	; 0xb0
   15a2c:	ldrd	r0, [r5]
   15a30:	ldrd	r2, [r6]
   15a34:	bl	1a248 <main@@Base+0x192c>
   15a38:	sub	r4, r4, #1
   15a3c:	strd	r0, [r5]
   15a40:	sub	r5, r5, #8
   15a44:	cmp	r4, #0
   15a48:	bgt	15a2c <dim_leave_array@@Base+0x100>
   15a4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15a50:	movw	r0, #42998	; 0xa7f6
   15a54:	movw	r1, #42783	; 0xa71f
   15a58:	movw	r3, #43028	; 0xa814
   15a5c:	movw	r2, #579	; 0x243
   15a60:	movt	r0, #1
   15a64:	movt	r1, #1
   15a68:	movt	r3, #1
   15a6c:	bl	12ab4 <__assert_fail@plt>

00015a70 <dim_record_field_available@@Base>:
   15a70:	mov	r0, #0
   15a74:	mov	r1, #0
   15a78:	mov	r2, #0
   15a7c:	b	15a80 <dim_record_field_available@@Base+0x10>
   15a80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a84:	add	fp, sp, #28
   15a88:	sub	sp, sp, #12
   15a8c:	movw	r5, #49640	; 0xc1e8
   15a90:	mov	r6, r1
   15a94:	mov	r7, r0
   15a98:	add	r1, sp, #8
   15a9c:	mov	r9, r2
   15aa0:	movt	r5, #2
   15aa4:	add	r0, r5, #144	; 0x90
   15aa8:	str	r0, [sp]
   15aac:	bl	12784 <coda_cursor_get_type_class@plt>
   15ab0:	cmp	r0, #0
   15ab4:	beq	15abc <dim_record_field_available@@Base+0x4c>
   15ab8:	bl	188d8 <handle_coda_error@@Base>
   15abc:	ldr	r0, [sp, #8]
   15ac0:	cmp	r0, #0
   15ac4:	beq	15b74 <dim_record_field_available@@Base+0x104>
   15ac8:	cmp	r0, #1
   15acc:	bne	15cbc <dim_record_field_available@@Base+0x24c>
   15ad0:	ldr	r0, [r5, #3360]	; 0xd20
   15ad4:	cmp	r0, r6
   15ad8:	ble	15cdc <dim_record_field_available@@Base+0x26c>
   15adc:	add	r0, r6, r6, lsl #2
   15ae0:	cmp	r6, #0
   15ae4:	add	sl, r5, r0, lsl #4
   15ae8:	moveq	r0, #0
   15aec:	ldr	r3, [sl, #800]	; 0x320
   15af0:	streq	r0, [r5, #844]	; 0x34c
   15af4:	ldr	r1, [sl, #840]	; 0x348
   15af8:	ldr	r0, [sl, #844]	; 0x34c
   15afc:	mul	r1, r1, r0
   15b00:	str	r1, [sl, #924]!	; 0x39c
   15b04:	ldr	r1, [sl, #-120]	; 0xffffff88
   15b08:	cmp	r1, #1
   15b0c:	blt	15ca4 <dim_record_field_available@@Base+0x234>
   15b10:	movw	r2, #53424	; 0xd0b0
   15b14:	add	r1, r1, r3
   15b18:	mov	r5, #1
   15b1c:	movt	r2, #2
   15b20:	add	r2, r2, r3, lsl #2
   15b24:	add	r3, r3, #27
   15b28:	add	r2, r2, #72	; 0x48
   15b2c:	ldr	r4, [r2]
   15b30:	cmp	r4, #0
   15b34:	bne	15b68 <dim_record_field_available@@Base+0xf8>
   15b38:	sub	r4, r2, #68	; 0x44
   15b3c:	ldr	r4, [r4]
   15b40:	add	r2, r2, #4
   15b44:	mul	r5, r4, r5
   15b48:	add	r4, r3, #1
   15b4c:	sub	r3, r3, #26
   15b50:	cmp	r3, r1
   15b54:	mov	r3, r4
   15b58:	bge	15bfc <dim_record_field_available@@Base+0x18c>
   15b5c:	ldr	r4, [r2]
   15b60:	cmp	r4, #0
   15b64:	beq	15b38 <dim_record_field_available@@Base+0xc8>
   15b68:	ldr	r4, [r2, #36]	; 0x24
   15b6c:	add	r4, r4, r0, lsl #2
   15b70:	b	15b3c <dim_record_field_available@@Base+0xcc>
   15b74:	add	r4, r5, r9, lsl #2
   15b78:	ldr	r0, [sp]
   15b7c:	add	r2, sp, #4
   15b80:	ldr	r1, [r4, #3492]!	; 0xda4
   15b84:	bl	12694 <coda_cursor_get_record_field_available_status@plt>
   15b88:	cmp	r0, #0
   15b8c:	beq	15b94 <dim_record_field_available@@Base+0x124>
   15b90:	bl	188d8 <handle_coda_error@@Base>
   15b94:	ldr	r0, [sp, #4]
   15b98:	cmp	r0, #0
   15b9c:	beq	15c98 <dim_record_field_available@@Base+0x228>
   15ba0:	ldr	r0, [r5, #3748]	; 0xea4
   15ba4:	sub	r0, r0, #1
   15ba8:	cmp	r0, r9
   15bac:	beq	15bf0 <dim_record_field_available@@Base+0x180>
   15bb0:	ldr	r1, [r4]
   15bb4:	ldr	r0, [sp]
   15bb8:	bl	127fc <coda_cursor_goto_record_field_by_index@plt>
   15bbc:	cmp	r0, #0
   15bc0:	beq	15bc8 <dim_record_field_available@@Base+0x158>
   15bc4:	bl	188d8 <handle_coda_error@@Base>
   15bc8:	add	r0, r7, #1
   15bcc:	add	r2, r9, #1
   15bd0:	mov	r1, r6
   15bd4:	bl	15a80 <dim_record_field_available@@Base+0x10>
   15bd8:	str	r0, [sp, #4]
   15bdc:	ldr	r0, [sp]
   15be0:	bl	1285c <coda_cursor_goto_parent@plt>
   15be4:	ldr	r0, [sp, #4]
   15be8:	cmp	r0, #0
   15bec:	beq	15c98 <dim_record_field_available@@Base+0x228>
   15bf0:	mov	r0, #1
   15bf4:	sub	sp, fp, #28
   15bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bfc:	cmp	r5, #1
   15c00:	blt	15c98 <dim_record_field_available@@Base+0x228>
   15c04:	ldr	r0, [sp]
   15c08:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   15c0c:	cmp	r0, #0
   15c10:	beq	15c18 <dim_record_field_available@@Base+0x1a8>
   15c14:	bl	188d8 <handle_coda_error@@Base>
   15c18:	add	r6, r6, #1
   15c1c:	sub	r4, r5, #1
   15c20:	add	r7, r7, #1
   15c24:	mov	r8, #0
   15c28:	b	15c44 <dim_record_field_available@@Base+0x1d4>
   15c2c:	ldr	r0, [sl]
   15c30:	add	r0, r0, #1
   15c34:	str	r0, [sl]
   15c38:	add	r8, r8, #1
   15c3c:	cmp	r5, r8
   15c40:	beq	15c90 <dim_record_field_available@@Base+0x220>
   15c44:	mov	r0, r7
   15c48:	mov	r1, r6
   15c4c:	mov	r2, r9
   15c50:	bl	15a80 <dim_record_field_available@@Base+0x10>
   15c54:	cmp	r0, #0
   15c58:	bne	15c7c <dim_record_field_available@@Base+0x20c>
   15c5c:	cmp	r8, r4
   15c60:	bge	15c38 <dim_record_field_available@@Base+0x1c8>
   15c64:	ldr	r0, [sp]
   15c68:	bl	128c8 <coda_cursor_goto_next_array_element@plt>
   15c6c:	cmp	r0, #0
   15c70:	beq	15c2c <dim_record_field_available@@Base+0x1bc>
   15c74:	bl	188d8 <handle_coda_error@@Base>
   15c78:	b	15c2c <dim_record_field_available@@Base+0x1bc>
   15c7c:	ldr	r0, [sp]
   15c80:	bl	1285c <coda_cursor_goto_parent@plt>
   15c84:	mov	r0, #1
   15c88:	sub	sp, fp, #28
   15c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c90:	ldr	r0, [sp]
   15c94:	bl	1285c <coda_cursor_goto_parent@plt>
   15c98:	mov	r0, #0
   15c9c:	sub	sp, fp, #28
   15ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ca4:	mov	r5, #1
   15ca8:	ldr	r0, [sp]
   15cac:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   15cb0:	cmp	r0, #0
   15cb4:	bne	15c14 <dim_record_field_available@@Base+0x1a4>
   15cb8:	b	15c18 <dim_record_field_available@@Base+0x1a8>
   15cbc:	movw	r0, #42730	; 0xa6ea
   15cc0:	movw	r1, #42783	; 0xa71f
   15cc4:	movw	r3, #43206	; 0xa8c6
   15cc8:	movw	r2, #729	; 0x2d9
   15ccc:	movt	r0, #1
   15cd0:	movt	r1, #1
   15cd4:	movt	r3, #1
   15cd8:	bl	12ab4 <__assert_fail@plt>
   15cdc:	movw	r0, #43167	; 0xa89f
   15ce0:	movw	r1, #42783	; 0xa71f
   15ce4:	movw	r3, #43206	; 0xa8c6
   15ce8:	movw	r2, #638	; 0x27e
   15cec:	movt	r0, #1
   15cf0:	movt	r1, #1
   15cf4:	movt	r3, #1
   15cf8:	bl	12ab4 <__assert_fail@plt>

00015cfc <codadump_filter_create@@Base>:
   15cfc:	push	{r4, r5, r6, r7, fp, lr}
   15d00:	add	fp, sp, #16
   15d04:	sub	sp, sp, #16
   15d08:	mov	r1, #0
   15d0c:	cmp	r0, #0
   15d10:	str	r0, [sp, #8]
   15d14:	str	r1, [sp, #4]
   15d18:	str	r1, [sp, #12]
   15d1c:	beq	15d70 <codadump_filter_create@@Base+0x74>
   15d20:	ldrb	r1, [r0]
   15d24:	cmp	r1, #0
   15d28:	beq	15d70 <codadump_filter_create@@Base+0x74>
   15d2c:	add	r4, sp, #12
   15d30:	add	r5, sp, #8
   15d34:	add	r6, sp, #4
   15d38:	mov	r7, #0
   15d3c:	mov	r1, r4
   15d40:	mov	r2, r5
   15d44:	bl	15ed8 <codadump_filter_get_next_filter@@Base+0x34>
   15d48:	ldr	r1, [sp, #12]
   15d4c:	cmp	r1, #0
   15d50:	beq	15d7c <codadump_filter_create@@Base+0x80>
   15d54:	mov	r0, r6
   15d58:	bl	16164 <codadump_filter_get_next_filter@@Base+0x2c0>
   15d5c:	ldr	r0, [sp, #8]
   15d60:	str	r7, [sp, #12]
   15d64:	ldrb	r1, [r0]
   15d68:	cmp	r1, #0
   15d6c:	bne	15d3c <codadump_filter_create@@Base+0x40>
   15d70:	ldr	r0, [sp, #4]
   15d74:	sub	sp, fp, #16
   15d78:	pop	{r4, r5, r6, r7, fp, pc}
   15d7c:	add	r0, sp, #4
   15d80:	bl	15d90 <codadump_filter_remove@@Base>
   15d84:	ldr	r0, [sp, #4]
   15d88:	sub	sp, fp, #16
   15d8c:	pop	{r4, r5, r6, r7, fp, pc}

00015d90 <codadump_filter_remove@@Base>:
   15d90:	push	{r4, sl, fp, lr}
   15d94:	add	fp, sp, #8
   15d98:	cmp	r0, #0
   15d9c:	beq	15e1c <codadump_filter_remove@@Base+0x8c>
   15da0:	mov	r4, r0
   15da4:	ldr	r0, [r0]
   15da8:	cmp	r0, #0
   15dac:	popeq	{r4, sl, fp, pc}
   15db0:	mov	r1, r0
   15db4:	ldr	r2, [r1, #8]!
   15db8:	cmp	r2, #0
   15dbc:	beq	15dcc <codadump_filter_remove@@Base+0x3c>
   15dc0:	mov	r0, r1
   15dc4:	bl	15d90 <codadump_filter_remove@@Base>
   15dc8:	ldr	r0, [r4]
   15dcc:	mov	r1, r0
   15dd0:	ldr	r2, [r1, #4]!
   15dd4:	cmp	r2, #0
   15dd8:	beq	15de8 <codadump_filter_remove@@Base+0x58>
   15ddc:	mov	r0, r1
   15de0:	bl	15d90 <codadump_filter_remove@@Base>
   15de4:	ldr	r0, [r4]
   15de8:	ldr	r1, [r0]
   15dec:	cmp	r1, #0
   15df0:	beq	15e0c <codadump_filter_remove@@Base+0x7c>
   15df4:	mov	r0, r1
   15df8:	bl	126f4 <free@plt>
   15dfc:	ldr	r0, [r4]
   15e00:	mov	r1, #0
   15e04:	str	r1, [r0]
   15e08:	ldr	r0, [r4]
   15e0c:	bl	126f4 <free@plt>
   15e10:	mov	r0, #0
   15e14:	str	r0, [r4]
   15e18:	pop	{r4, sl, fp, pc}
   15e1c:	movw	r0, #43259	; 0xa8fb
   15e20:	movw	r1, #43274	; 0xa90a
   15e24:	movw	r3, #43350	; 0xa956
   15e28:	mov	r2, #192	; 0xc0
   15e2c:	movt	r0, #1
   15e30:	movt	r1, #1
   15e34:	movt	r3, #1
   15e38:	bl	12ab4 <__assert_fail@plt>

00015e3c <codadump_filter_get_fieldname@@Base>:
   15e3c:	push	{fp, lr}
   15e40:	mov	fp, sp
   15e44:	cmp	r0, #0
   15e48:	ldrne	r0, [r0]
   15e4c:	popne	{fp, pc}
   15e50:	movw	r0, #43259	; 0xa8fb
   15e54:	movw	r1, #43274	; 0xa90a
   15e58:	movw	r3, #43398	; 0xa986
   15e5c:	mov	r2, #216	; 0xd8
   15e60:	movt	r0, #1
   15e64:	movt	r1, #1
   15e68:	movt	r3, #1
   15e6c:	bl	12ab4 <__assert_fail@plt>

00015e70 <codadump_filter_get_subfilter@@Base>:
   15e70:	push	{fp, lr}
   15e74:	mov	fp, sp
   15e78:	cmp	r0, #0
   15e7c:	ldrne	r0, [r0, #4]
   15e80:	popne	{fp, pc}
   15e84:	movw	r0, #43259	; 0xa8fb
   15e88:	movw	r1, #43274	; 0xa90a
   15e8c:	movw	r3, #43459	; 0xa9c3
   15e90:	mov	r2, #223	; 0xdf
   15e94:	movt	r0, #1
   15e98:	movt	r1, #1
   15e9c:	movt	r3, #1
   15ea0:	bl	12ab4 <__assert_fail@plt>

00015ea4 <codadump_filter_get_next_filter@@Base>:
   15ea4:	push	{fp, lr}
   15ea8:	mov	fp, sp
   15eac:	cmp	r0, #0
   15eb0:	ldrne	r0, [r0, #8]
   15eb4:	popne	{fp, pc}
   15eb8:	movw	r0, #43259	; 0xa8fb
   15ebc:	movw	r1, #43274	; 0xa90a
   15ec0:	movw	r3, #43525	; 0xaa05
   15ec4:	mov	r2, #230	; 0xe6
   15ec8:	movt	r0, #1
   15ecc:	movt	r1, #1
   15ed0:	movt	r3, #1
   15ed4:	bl	12ab4 <__assert_fail@plt>
   15ed8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15edc:	add	fp, sp, #24
   15ee0:	sub	sp, sp, #8
   15ee4:	cmp	r0, #0
   15ee8:	beq	16104 <codadump_filter_get_next_filter@@Base+0x260>
   15eec:	mov	r9, r1
   15ef0:	cmp	r1, #0
   15ef4:	beq	16124 <codadump_filter_get_next_filter@@Base+0x280>
   15ef8:	mov	r8, r2
   15efc:	cmp	r2, #0
   15f00:	beq	16144 <codadump_filter_get_next_filter@@Base+0x2a0>
   15f04:	movw	r4, #3
   15f08:	mov	r6, r0
   15f0c:	mov	r1, #1
   15f10:	movt	r4, #128	; 0x80
   15f14:	ldrb	r0, [r6]
   15f18:	sub	r2, r0, #9
   15f1c:	cmp	r2, #23
   15f20:	bhi	15f40 <codadump_filter_get_next_filter@@Base+0x9c>
   15f24:	tst	r4, r1, lsl r2
   15f28:	beq	15f40 <codadump_filter_get_next_filter@@Base+0x9c>
   15f2c:	add	r6, r6, #1
   15f30:	ldrb	r0, [r6]
   15f34:	sub	r2, r0, #9
   15f38:	cmp	r2, #23
   15f3c:	bls	15f24 <codadump_filter_get_next_filter@@Base+0x80>
   15f40:	mov	r7, #0
   15f44:	mvn	r1, #43	; 0x2b
   15f48:	mov	r2, #1
   15f4c:	movw	r3, #32773	; 0x8005
   15f50:	uxtab	r5, r1, r0
   15f54:	cmp	r5, #15
   15f58:	bhi	15f64 <codadump_filter_get_next_filter@@Base+0xc0>
   15f5c:	tst	r3, r2, lsl r5
   15f60:	bne	15f8c <codadump_filter_get_next_filter@@Base+0xe8>
   15f64:	uxtb	r0, r0
   15f68:	cmp	r0, #0
   15f6c:	beq	15f8c <codadump_filter_get_next_filter@@Base+0xe8>
   15f70:	add	r0, r6, r7
   15f74:	add	r7, r7, #1
   15f78:	ldrb	r0, [r0, #1]
   15f7c:	uxtab	r5, r1, r0
   15f80:	cmp	r5, #15
   15f84:	bls	15f5c <codadump_filter_get_next_filter@@Base+0xb8>
   15f88:	b	15f64 <codadump_filter_get_next_filter@@Base+0xc0>
   15f8c:	cmp	r7, #0
   15f90:	beq	160ac <codadump_filter_get_next_filter@@Base+0x208>
   15f94:	mov	r0, #12
   15f98:	bl	1282c <malloc@plt>
   15f9c:	cmp	r0, #0
   15fa0:	str	r0, [r9]
   15fa4:	bne	15fd0 <codadump_filter_get_next_filter@@Base+0x12c>
   15fa8:	movw	r1, #42185	; 0xa4c9
   15fac:	movw	r3, #43274	; 0xa90a
   15fb0:	mov	r0, #69	; 0x45
   15fb4:	mov	r2, #12
   15fb8:	movt	r1, #1
   15fbc:	movt	r3, #1
   15fc0:	str	r0, [sp]
   15fc4:	mvn	r0, #0
   15fc8:	bl	126ac <coda_set_error@plt>
   15fcc:	bl	188d8 <handle_coda_error@@Base>
   15fd0:	add	r5, r7, #1
   15fd4:	mov	r0, r5
   15fd8:	bl	1282c <malloc@plt>
   15fdc:	ldr	r1, [r9]
   15fe0:	str	r0, [r1]
   15fe4:	ldr	r0, [r9]
   15fe8:	ldr	r0, [r0]
   15fec:	cmp	r0, #0
   15ff0:	bne	16024 <codadump_filter_get_next_filter@@Base+0x180>
   15ff4:	movw	r1, #43690	; 0xaaaa
   15ff8:	movw	r3, #43274	; 0xa90a
   15ffc:	mov	r0, #76	; 0x4c
   16000:	mov	r2, r5
   16004:	movt	r1, #1
   16008:	movt	r3, #1
   1600c:	str	r0, [sp]
   16010:	mvn	r0, #0
   16014:	bl	126ac <coda_set_error@plt>
   16018:	bl	188d8 <handle_coda_error@@Base>
   1601c:	ldr	r0, [r9]
   16020:	ldr	r0, [r0]
   16024:	mov	r1, r6
   16028:	mov	r2, r7
   1602c:	add	r5, r6, r7
   16030:	bl	12928 <strncpy@plt>
   16034:	ldr	r0, [r9]
   16038:	mov	r1, #0
   1603c:	str	r1, [r0, #4]
   16040:	ldr	r0, [r9]
   16044:	str	r1, [r0, #8]
   16048:	mov	r1, #1
   1604c:	ldr	r0, [r9]
   16050:	ldr	r0, [r0]
   16054:	add	r0, r0, r7
   16058:	ldrb	r2, [r0, #-1]
   1605c:	sub	r2, r2, #9
   16060:	cmp	r2, #23
   16064:	bhi	16084 <codadump_filter_get_next_filter@@Base+0x1e0>
   16068:	tst	r4, r1, lsl r2
   1606c:	beq	16084 <codadump_filter_get_next_filter@@Base+0x1e0>
   16070:	sub	r0, r0, #1
   16074:	ldrb	r2, [r0, #-1]
   16078:	sub	r2, r2, #9
   1607c:	cmp	r2, #23
   16080:	bls	16068 <codadump_filter_get_next_filter@@Base+0x1c4>
   16084:	mov	r1, #0
   16088:	strb	r1, [r0]
   1608c:	ldrb	r0, [r6, r7]
   16090:	cmp	r0, #44	; 0x2c
   16094:	cmpne	r0, #59	; 0x3b
   16098:	bne	160bc <codadump_filter_get_next_filter@@Base+0x218>
   1609c:	add	r0, r5, #1
   160a0:	str	r0, [r8]
   160a4:	sub	sp, fp, #24
   160a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   160ac:	mov	r0, #0
   160b0:	str	r0, [r9]
   160b4:	sub	sp, fp, #24
   160b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   160bc:	cmp	r0, #46	; 0x2e
   160c0:	bne	160f8 <codadump_filter_get_next_filter@@Base+0x254>
   160c4:	ldr	r1, [r9]
   160c8:	add	r0, r5, #1
   160cc:	mov	r2, r8
   160d0:	add	r1, r1, #4
   160d4:	bl	15ed8 <codadump_filter_get_next_filter@@Base+0x34>
   160d8:	ldr	r0, [r9]
   160dc:	ldr	r0, [r0, #4]
   160e0:	cmp	r0, #0
   160e4:	bne	160b4 <codadump_filter_get_next_filter@@Base+0x210>
   160e8:	mov	r0, r9
   160ec:	sub	sp, fp, #24
   160f0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   160f4:	b	15d90 <codadump_filter_remove@@Base>
   160f8:	str	r5, [r8]
   160fc:	sub	sp, fp, #24
   16100:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16104:	movw	r0, #43593	; 0xaa49
   16108:	movw	r1, #43274	; 0xa90a
   1610c:	movw	r3, #43613	; 0xaa5d
   16110:	mov	r2, #44	; 0x2c
   16114:	movt	r0, #1
   16118:	movt	r1, #1
   1611c:	movt	r3, #1
   16120:	bl	12ab4 <__assert_fail@plt>
   16124:	movw	r0, #43259	; 0xa8fb
   16128:	movw	r1, #43274	; 0xa90a
   1612c:	movw	r3, #43613	; 0xaa5d
   16130:	mov	r2, #45	; 0x2d
   16134:	movt	r0, #1
   16138:	movt	r1, #1
   1613c:	movt	r3, #1
   16140:	bl	12ab4 <__assert_fail@plt>
   16144:	movw	r0, #43677	; 0xaa9d
   16148:	movw	r1, #43274	; 0xa90a
   1614c:	movw	r3, #43613	; 0xaa5d
   16150:	mov	r2, #46	; 0x2e
   16154:	movt	r0, #1
   16158:	movt	r1, #1
   1615c:	movt	r3, #1
   16160:	bl	12ab4 <__assert_fail@plt>
   16164:	push	{r4, r5, fp, lr}
   16168:	add	fp, sp, #8
   1616c:	sub	sp, sp, #8
   16170:	cmp	r0, #0
   16174:	str	r1, [sp, #4]
   16178:	beq	1622c <codadump_filter_get_next_filter@@Base+0x388>
   1617c:	mov	r4, r1
   16180:	cmp	r1, #0
   16184:	beq	16210 <codadump_filter_get_next_filter@@Base+0x36c>
   16188:	ldr	r5, [r0]
   1618c:	cmp	r5, #0
   16190:	beq	161c8 <codadump_filter_get_next_filter@@Base+0x324>
   16194:	ldr	r1, [r4]
   16198:	ldr	r0, [r5]
   1619c:	bl	12664 <strcmp@plt>
   161a0:	cmp	r0, #0
   161a4:	beq	161d4 <codadump_filter_get_next_filter@@Base+0x330>
   161a8:	ldr	r0, [r5, #8]!
   161ac:	cmp	r0, #0
   161b0:	beq	1620c <codadump_filter_get_next_filter@@Base+0x368>
   161b4:	mov	r0, r5
   161b8:	mov	r1, r4
   161bc:	sub	sp, fp, #8
   161c0:	pop	{r4, r5, fp, lr}
   161c4:	b	16164 <codadump_filter_get_next_filter@@Base+0x2c0>
   161c8:	str	r4, [r0]
   161cc:	sub	sp, fp, #8
   161d0:	pop	{r4, r5, fp, pc}
   161d4:	ldr	r0, [r5, #4]!
   161d8:	cmp	r0, #0
   161dc:	beq	161fc <codadump_filter_get_next_filter@@Base+0x358>
   161e0:	ldr	r1, [r4, #4]
   161e4:	mov	r0, r5
   161e8:	cmp	r1, #0
   161ec:	beq	16218 <codadump_filter_get_next_filter@@Base+0x374>
   161f0:	bl	16164 <codadump_filter_get_next_filter@@Base+0x2c0>
   161f4:	mov	r0, #0
   161f8:	str	r0, [r4, #4]
   161fc:	add	r0, sp, #4
   16200:	bl	15d90 <codadump_filter_remove@@Base>
   16204:	sub	sp, fp, #8
   16208:	pop	{r4, r5, fp, pc}
   1620c:	str	r4, [r5]
   16210:	sub	sp, fp, #8
   16214:	pop	{r4, r5, fp, pc}
   16218:	bl	15d90 <codadump_filter_remove@@Base>
   1621c:	add	r0, sp, #4
   16220:	bl	15d90 <codadump_filter_remove@@Base>
   16224:	sub	sp, fp, #8
   16228:	pop	{r4, r5, fp, pc}
   1622c:	movw	r0, #43259	; 0xa8fb
   16230:	movw	r1, #43274	; 0xa90a
   16234:	movw	r3, #43742	; 0xaade
   16238:	mov	r2, #117	; 0x75
   1623c:	movt	r0, #1
   16240:	movt	r1, #1
   16244:	movt	r3, #1
   16248:	bl	12ab4 <__assert_fail@plt>

0001624c <print_json_data@@Base>:
   1624c:	push	{r4, sl, fp, lr}
   16250:	add	fp, sp, #8
   16254:	sub	sp, sp, #528	; 0x210
   16258:	movw	r1, #49604	; 0xc1c4
   1625c:	movw	r4, #49640	; 0xc1e8
   16260:	movt	r1, #2
   16264:	movt	r4, #2
   16268:	str	r0, [r1]
   1626c:	ldr	r0, [r4]
   16270:	sub	r1, fp, #12
   16274:	bl	126b8 <coda_open@plt>
   16278:	cmp	r0, #0
   1627c:	beq	162bc <print_json_data@@Base+0x70>
   16280:	bl	12a60 <coda_get_errno@plt>
   16284:	ldr	r0, [r0]
   16288:	cmn	r0, #21
   1628c:	bne	162b8 <print_json_data@@Base+0x6c>
   16290:	mov	r0, #0
   16294:	bl	12700 <coda_set_option_use_mmap@plt>
   16298:	ldr	r0, [r4]
   1629c:	sub	r1, fp, #12
   162a0:	bl	126b8 <coda_open@plt>
   162a4:	mov	r4, r0
   162a8:	mov	r0, #1
   162ac:	bl	12700 <coda_set_option_use_mmap@plt>
   162b0:	cmp	r4, #0
   162b4:	beq	162bc <print_json_data@@Base+0x70>
   162b8:	bl	188d8 <handle_coda_error@@Base>
   162bc:	ldr	r1, [fp, #-12]
   162c0:	mov	r0, sp
   162c4:	bl	127e4 <coda_cursor_set_product@plt>
   162c8:	cmp	r0, #0
   162cc:	beq	162d4 <print_json_data@@Base+0x88>
   162d0:	bl	188d8 <handle_coda_error@@Base>
   162d4:	movw	r0, #53416	; 0xd0a8
   162d8:	movt	r0, #2
   162dc:	ldr	r1, [r0]
   162e0:	cmp	r1, #0
   162e4:	beq	162fc <print_json_data@@Base+0xb0>
   162e8:	mov	r0, sp
   162ec:	bl	129c4 <coda_cursor_goto@plt>
   162f0:	cmp	r0, #0
   162f4:	beq	162fc <print_json_data@@Base+0xb0>
   162f8:	bl	188d8 <handle_coda_error@@Base>
   162fc:	mov	r0, #0
   16300:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   16304:	mov	r0, sp
   16308:	bl	16328 <print_json_data@@Base+0xdc>
   1630c:	movw	r0, #44606	; 0xae3e
   16310:	movt	r0, #1
   16314:	bl	16c18 <print_json_data@@Base+0x9cc>
   16318:	ldr	r0, [fp, #-12]
   1631c:	bl	129a0 <coda_close@plt>
   16320:	sub	sp, fp, #8
   16324:	pop	{r4, sl, fp, pc}
   16328:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1632c:	add	fp, sp, #24
   16330:	sub	sp, sp, #72	; 0x48
   16334:	mov	r4, r0
   16338:	mov	r0, #0
   1633c:	str	r0, [fp, #-32]	; 0xffffffe0
   16340:	movw	r0, #49604	; 0xc1c4
   16344:	movt	r0, #2
   16348:	ldr	r0, [r0]
   1634c:	cmp	r0, #0
   16350:	beq	163b4 <print_json_data@@Base+0x168>
   16354:	sub	r1, fp, #32
   16358:	mov	r0, r4
   1635c:	bl	12778 <coda_cursor_has_attributes@plt>
   16360:	cmp	r0, #0
   16364:	beq	1636c <print_json_data@@Base+0x120>
   16368:	bl	188d8 <handle_coda_error@@Base>
   1636c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16370:	cmp	r0, #0
   16374:	beq	163b4 <print_json_data@@Base+0x168>
   16378:	movw	r0, #43797	; 0xab15
   1637c:	movt	r0, #1
   16380:	bl	16c18 <print_json_data@@Base+0x9cc>
   16384:	mov	r0, r4
   16388:	bl	128f8 <coda_cursor_goto_attributes@plt>
   1638c:	cmp	r0, #0
   16390:	beq	16398 <print_json_data@@Base+0x14c>
   16394:	bl	188d8 <handle_coda_error@@Base>
   16398:	mov	r0, r4
   1639c:	bl	16328 <print_json_data@@Base+0xdc>
   163a0:	mov	r0, r4
   163a4:	bl	1285c <coda_cursor_goto_parent@plt>
   163a8:	movw	r0, #43806	; 0xab1e
   163ac:	movt	r0, #1
   163b0:	bl	16c18 <print_json_data@@Base+0x9cc>
   163b4:	sub	r1, fp, #28
   163b8:	mov	r0, r4
   163bc:	bl	12784 <coda_cursor_get_type_class@plt>
   163c0:	cmp	r0, #0
   163c4:	beq	163cc <print_json_data@@Base+0x180>
   163c8:	bl	188d8 <handle_coda_error@@Base>
   163cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   163d0:	cmp	r0, #6
   163d4:	bhi	16bc0 <print_json_data@@Base+0x974>
   163d8:	add	r1, pc, #0
   163dc:	ldr	pc, [r1, r0, lsl #2]
   163e0:	muleq	r1, r0, r4
   163e4:	andeq	r6, r1, r4, ror #10
   163e8:	strdeq	r6, [r1], -ip
   163ec:	strdeq	r6, [r1], -ip
   163f0:	strdeq	r6, [r1], -ip
   163f4:	strdeq	r6, [r1], -ip
   163f8:			; <UNDEFINED> instruction: 0x000165b4
   163fc:	sub	r1, fp, #36	; 0x24
   16400:	mov	r0, r4
   16404:	bl	12820 <coda_cursor_get_read_type@plt>
   16408:	cmp	r0, #0
   1640c:	beq	16414 <print_json_data@@Base+0x1c8>
   16410:	bl	188d8 <handle_coda_error@@Base>
   16414:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16418:	add	r0, r0, #1
   1641c:	cmp	r0, #13
   16420:	bhi	16bc0 <print_json_data@@Base+0x974>
   16424:	add	r1, pc, #0
   16428:	ldr	pc, [r1, r0, lsl #2]
   1642c:	strdeq	r6, [r1], -r0
   16430:	andeq	r6, r1, r4, ror #8
   16434:	strdeq	r6, [r1], -ip
   16438:	andeq	r6, r1, r4, ror #8
   1643c:	strdeq	r6, [r1], -ip
   16440:	andeq	r6, r1, r4, ror #8
   16444:	strdeq	r6, [r1], -ip
   16448:	andeq	r6, r1, r8, ror #12
   1644c:	muleq	r1, r8, r6
   16450:	andeq	r6, r1, r8, lsr #12
   16454:	andeq	r6, r1, r8, lsr #12
   16458:	ldrdeq	r6, [r1], -r8
   1645c:	andeq	r6, r1, r4, lsl r7
   16460:	andeq	r6, r1, r8, asr #15
   16464:	add	r1, sp, #16
   16468:	mov	r0, r4
   1646c:	bl	12a3c <coda_cursor_read_int32@plt>
   16470:	cmp	r0, #0
   16474:	beq	1647c <print_json_data@@Base+0x230>
   16478:	bl	188d8 <handle_coda_error@@Base>
   1647c:	ldr	r1, [sp, #16]
   16480:	movw	r0, #43992	; 0xabd8
   16484:	movt	r0, #1
   16488:	bl	16c18 <print_json_data@@Base+0x9cc>
   1648c:	b	16bc0 <print_json_data@@Base+0x974>
   16490:	movw	r0, #43815	; 0xab27
   16494:	movt	r0, #1
   16498:	bl	16c18 <print_json_data@@Base+0x9cc>
   1649c:	add	r1, sp, #16
   164a0:	mov	r0, r4
   164a4:	bl	126dc <coda_cursor_get_num_elements@plt>
   164a8:	cmp	r0, #0
   164ac:	beq	164b4 <print_json_data@@Base+0x268>
   164b0:	bl	188d8 <handle_coda_error@@Base>
   164b4:	ldr	r0, [sp, #16]
   164b8:	cmp	r0, #1
   164bc:	blt	1698c <print_json_data@@Base+0x740>
   164c0:	add	r1, sp, #8
   164c4:	mov	r0, r4
   164c8:	bl	1273c <coda_cursor_get_type@plt>
   164cc:	cmp	r0, #0
   164d0:	beq	164d8 <print_json_data@@Base+0x28c>
   164d4:	bl	188d8 <handle_coda_error@@Base>
   164d8:	ldr	r0, [sp, #8]
   164dc:	sub	r1, fp, #36	; 0x24
   164e0:	bl	12940 <coda_type_get_record_union_status@plt>
   164e4:	cmp	r0, #0
   164e8:	beq	164f0 <print_json_data@@Base+0x2a4>
   164ec:	bl	188d8 <handle_coda_error@@Base>
   164f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   164f4:	cmp	r0, #0
   164f8:	beq	16894 <print_json_data@@Base+0x648>
   164fc:	sub	r1, fp, #40	; 0x28
   16500:	mov	r0, r4
   16504:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   16508:	cmp	r0, #0
   1650c:	beq	16514 <print_json_data@@Base+0x2c8>
   16510:	bl	188d8 <handle_coda_error@@Base>
   16514:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16518:	ldr	r0, [sp, #8]
   1651c:	sub	r2, fp, #44	; 0x2c
   16520:	bl	12a78 <coda_type_get_record_field_name@plt>
   16524:	cmp	r0, #0
   16528:	beq	16530 <print_json_data@@Base+0x2e4>
   1652c:	bl	188d8 <handle_coda_error@@Base>
   16530:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16534:	mov	r0, r4
   16538:	bl	127fc <coda_cursor_goto_record_field_by_index@plt>
   1653c:	cmp	r0, #0
   16540:	beq	16548 <print_json_data@@Base+0x2fc>
   16544:	bl	188d8 <handle_coda_error@@Base>
   16548:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1654c:	movw	r0, #43817	; 0xab29
   16550:	movt	r0, #1
   16554:	bl	16c18 <print_json_data@@Base+0x9cc>
   16558:	mov	r0, r4
   1655c:	bl	16328 <print_json_data@@Base+0xdc>
   16560:	b	16984 <print_json_data@@Base+0x738>
   16564:	movw	r0, #43986	; 0xabd2
   16568:	movt	r0, #1
   1656c:	bl	16c18 <print_json_data@@Base+0x9cc>
   16570:	add	r6, sp, #16
   16574:	add	r1, sp, #8
   16578:	mov	r0, r4
   1657c:	mov	r2, r6
   16580:	bl	12988 <coda_cursor_get_array_dim@plt>
   16584:	cmp	r0, #0
   16588:	beq	16590 <print_json_data@@Base+0x344>
   1658c:	bl	188d8 <handle_coda_error@@Base>
   16590:	ldr	r8, [sp, #8]
   16594:	cmp	r8, #0
   16598:	bmi	16bb4 <print_json_data@@Base+0x968>
   1659c:	beq	16998 <print_json_data@@Base+0x74c>
   165a0:	cmp	r8, #4
   165a4:	bcs	16a58 <print_json_data@@Base+0x80c>
   165a8:	mov	lr, #0
   165ac:	mov	r6, #1
   165b0:	b	16b10 <print_json_data@@Base+0x8c4>
   165b4:	sub	r1, fp, #36	; 0x24
   165b8:	mov	r0, r4
   165bc:	bl	127c0 <coda_cursor_get_special_type@plt>
   165c0:	cmp	r0, #0
   165c4:	beq	165cc <print_json_data@@Base+0x380>
   165c8:	bl	188d8 <handle_coda_error@@Base>
   165cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   165d0:	cmp	r0, #3
   165d4:	bhi	16bc0 <print_json_data@@Base+0x974>
   165d8:	add	r1, pc, #0
   165dc:	ldr	pc, [r1, r0, lsl #2]
   165e0:	strdeq	r6, [r1], -r0
   165e4:			; <UNDEFINED> instruction: 0x000169b0
   165e8:	ldrdeq	r6, [r1], -r0
   165ec:	andeq	r6, r1, ip, lsl sl
   165f0:	movw	r0, #43899	; 0xab7b
   165f4:	movt	r0, #1
   165f8:	b	16bbc <print_json_data@@Base+0x970>
   165fc:	add	r1, sp, #16
   16600:	mov	r0, r4
   16604:	bl	12718 <coda_cursor_read_uint32@plt>
   16608:	cmp	r0, #0
   1660c:	beq	16614 <print_json_data@@Base+0x3c8>
   16610:	bl	188d8 <handle_coda_error@@Base>
   16614:	ldr	r1, [sp, #16]
   16618:	movw	r0, #42343	; 0xa567
   1661c:	movt	r0, #1
   16620:	bl	16c18 <print_json_data@@Base+0x9cc>
   16624:	b	16bc0 <print_json_data@@Base+0x974>
   16628:	add	r1, sp, #16
   1662c:	mov	r0, r4
   16630:	bl	128a4 <coda_cursor_read_double@plt>
   16634:	cmp	r0, #0
   16638:	beq	16640 <print_json_data@@Base+0x3f4>
   1663c:	bl	188d8 <handle_coda_error@@Base>
   16640:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16644:	vldr	d16, [sp, #16]
   16648:	movw	r2, #42347	; 0xa56b
   1664c:	movw	r0, #42352	; 0xa570
   16650:	movt	r2, #1
   16654:	movt	r0, #1
   16658:	cmp	r1, #8
   1665c:	moveq	r0, r2
   16660:	vmov	r2, r3, d16
   16664:	b	16a50 <print_json_data@@Base+0x804>
   16668:	add	r1, sp, #8
   1666c:	mov	r0, r4
   16670:	bl	129ac <coda_cursor_read_int64@plt>
   16674:	cmp	r0, #0
   16678:	beq	16680 <print_json_data@@Base+0x434>
   1667c:	bl	188d8 <handle_coda_error@@Base>
   16680:	ldr	r0, [sp, #8]
   16684:	ldr	r1, [sp, #12]
   16688:	add	r4, sp, #16
   1668c:	mov	r2, r4
   16690:	bl	12aa8 <coda_str64@plt>
   16694:	b	166c4 <print_json_data@@Base+0x478>
   16698:	add	r1, sp, #8
   1669c:	mov	r0, r4
   166a0:	bl	12898 <coda_cursor_read_uint64@plt>
   166a4:	cmp	r0, #0
   166a8:	beq	166b0 <print_json_data@@Base+0x464>
   166ac:	bl	188d8 <handle_coda_error@@Base>
   166b0:	ldr	r0, [sp, #8]
   166b4:	ldr	r1, [sp, #12]
   166b8:	add	r4, sp, #16
   166bc:	mov	r2, r4
   166c0:	bl	126e8 <coda_str64u@plt>
   166c4:	movw	r0, #44161	; 0xac81
   166c8:	mov	r1, r4
   166cc:	movt	r0, #1
   166d0:	bl	16c18 <print_json_data@@Base+0x9cc>
   166d4:	b	16bc0 <print_json_data@@Base+0x974>
   166d8:	add	r1, sp, #16
   166dc:	mov	r0, r4
   166e0:	bl	12904 <coda_cursor_read_char@plt>
   166e4:	cmp	r0, #0
   166e8:	beq	166f0 <print_json_data@@Base+0x4a4>
   166ec:	bl	188d8 <handle_coda_error@@Base>
   166f0:	movw	r4, #43972	; 0xabc4
   166f4:	movt	r4, #1
   166f8:	mov	r0, r4
   166fc:	bl	16c18 <print_json_data@@Base+0x9cc>
   16700:	add	r0, sp, #16
   16704:	mov	r1, #1
   16708:	bl	16c60 <print_json_data@@Base+0xa14>
   1670c:	mov	r0, r4
   16710:	b	16bbc <print_json_data@@Base+0x970>
   16714:	add	r1, sp, #16
   16718:	mov	r0, r4
   1671c:	bl	1288c <coda_cursor_get_string_length@plt>
   16720:	cmp	r0, #0
   16724:	beq	1672c <print_json_data@@Base+0x4e0>
   16728:	bl	188d8 <handle_coda_error@@Base>
   1672c:	ldr	r0, [sp, #16]
   16730:	add	r6, r0, #1
   16734:	mov	r0, r6
   16738:	bl	1282c <malloc@plt>
   1673c:	mov	r5, r0
   16740:	cmp	r0, #0
   16744:	bne	16778 <print_json_data@@Base+0x52c>
   16748:	movw	r1, #42185	; 0xa4c9
   1674c:	movw	r3, #43825	; 0xab31
   16750:	movw	r0, #303	; 0x12f
   16754:	mov	r2, r6
   16758:	movt	r1, #1
   1675c:	movt	r3, #1
   16760:	str	r0, [sp]
   16764:	mvn	r0, #0
   16768:	bl	126ac <coda_set_error@plt>
   1676c:	bl	188d8 <handle_coda_error@@Base>
   16770:	ldr	r0, [sp, #16]
   16774:	add	r6, r0, #1
   16778:	mov	r0, r4
   1677c:	mov	r1, r5
   16780:	mov	r2, r6
   16784:	bl	12850 <coda_cursor_read_string@plt>
   16788:	cmp	r0, #0
   1678c:	beq	16794 <print_json_data@@Base+0x548>
   16790:	bl	188d8 <handle_coda_error@@Base>
   16794:	movw	r4, #43972	; 0xabc4
   16798:	movt	r4, #1
   1679c:	mov	r0, r4
   167a0:	bl	16c18 <print_json_data@@Base+0x9cc>
   167a4:	ldr	r1, [sp, #16]
   167a8:	mov	r0, r5
   167ac:	bl	16c60 <print_json_data@@Base+0xa14>
   167b0:	ldr	r1, [sp, #16]
   167b4:	mov	r0, r4
   167b8:	bl	16c18 <print_json_data@@Base+0x9cc>
   167bc:	mov	r0, r5
   167c0:	bl	126f4 <free@plt>
   167c4:	b	16bc0 <print_json_data@@Base+0x974>
   167c8:	add	r1, sp, #16
   167cc:	mov	r0, r4
   167d0:	bl	12a0c <coda_cursor_get_bit_size@plt>
   167d4:	cmp	r0, #0
   167d8:	beq	167e0 <print_json_data@@Base+0x594>
   167dc:	bl	188d8 <handle_coda_error@@Base>
   167e0:	ldr	r7, [sp, #16]
   167e4:	ldr	r6, [sp, #20]
   167e8:	lsr	r0, r7, #3
   167ec:	tst	r7, #7
   167f0:	orr	r5, r0, r6, lsl #29
   167f4:	addne	r5, r5, #1
   167f8:	mov	r0, r5
   167fc:	bl	1282c <malloc@plt>
   16800:	mov	r8, r0
   16804:	cmp	r0, #0
   16808:	bne	1683c <print_json_data@@Base+0x5f0>
   1680c:	movw	r1, #42185	; 0xa4c9
   16810:	movw	r3, #43825	; 0xab31
   16814:	movw	r0, #334	; 0x14e
   16818:	mov	r2, r5
   1681c:	movt	r1, #1
   16820:	movt	r3, #1
   16824:	str	r0, [sp]
   16828:	mvn	r0, #0
   1682c:	bl	126ac <coda_set_error@plt>
   16830:	bl	188d8 <handle_coda_error@@Base>
   16834:	ldr	r7, [sp, #16]
   16838:	ldr	r6, [sp, #20]
   1683c:	mov	r0, r4
   16840:	mov	r1, r8
   16844:	mov	r2, #0
   16848:	mov	r3, #0
   1684c:	str	r7, [sp]
   16850:	str	r6, [sp, #4]
   16854:	bl	12a9c <coda_cursor_read_bits@plt>
   16858:	cmp	r0, #0
   1685c:	beq	16864 <print_json_data@@Base+0x618>
   16860:	bl	188d8 <handle_coda_error@@Base>
   16864:	movw	r4, #43972	; 0xabc4
   16868:	movt	r4, #1
   1686c:	mov	r0, r4
   16870:	bl	16c18 <print_json_data@@Base+0x9cc>
   16874:	mov	r0, r8
   16878:	mov	r1, r5
   1687c:	bl	16c60 <print_json_data@@Base+0xa14>
   16880:	mov	r0, r4
   16884:	bl	16c18 <print_json_data@@Base+0x9cc>
   16888:	mov	r0, r8
   1688c:	bl	126f4 <free@plt>
   16890:	b	16bc0 <print_json_data@@Base+0x974>
   16894:	mov	r0, r4
   16898:	bl	127f0 <coda_cursor_goto_first_record_field@plt>
   1689c:	cmp	r0, #0
   168a0:	beq	168a8 <print_json_data@@Base+0x65c>
   168a4:	bl	188d8 <handle_coda_error@@Base>
   168a8:	ldr	r0, [sp, #16]
   168ac:	mov	r1, #0
   168b0:	str	r1, [fp, #-40]	; 0xffffffd8
   168b4:	cmp	r0, #1
   168b8:	blt	16984 <print_json_data@@Base+0x738>
   168bc:	movw	r8, #42904	; 0xa798
   168c0:	movw	r6, #43817	; 0xab29
   168c4:	mov	r7, #1
   168c8:	add	r5, sp, #48	; 0x30
   168cc:	sub	r9, fp, #44	; 0x2c
   168d0:	movt	r8, #1
   168d4:	movt	r6, #1
   168d8:	b	168f4 <print_json_data@@Base+0x6a8>
   168dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   168e0:	add	r1, r0, #1
   168e4:	ldr	r0, [sp, #16]
   168e8:	str	r1, [fp, #-40]	; 0xffffffd8
   168ec:	cmp	r1, r0
   168f0:	bge	16984 <print_json_data@@Base+0x738>
   168f4:	ldr	r0, [sp, #8]
   168f8:	mov	r2, r5
   168fc:	bl	1267c <coda_type_get_record_field_hidden_status@plt>
   16900:	cmp	r0, #0
   16904:	beq	1690c <print_json_data@@Base+0x6c0>
   16908:	bl	188d8 <handle_coda_error@@Base>
   1690c:	ldr	r0, [sp, #48]	; 0x30
   16910:	cmp	r0, #0
   16914:	bne	16958 <print_json_data@@Base+0x70c>
   16918:	cmp	r7, #0
   1691c:	moveq	r0, r8
   16920:	bleq	16c18 <print_json_data@@Base+0x9cc>
   16924:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16928:	ldr	r0, [sp, #8]
   1692c:	mov	r2, r9
   16930:	bl	12a78 <coda_type_get_record_field_name@plt>
   16934:	cmp	r0, #0
   16938:	beq	16940 <print_json_data@@Base+0x6f4>
   1693c:	bl	188d8 <handle_coda_error@@Base>
   16940:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16944:	mov	r0, r6
   16948:	bl	16c18 <print_json_data@@Base+0x9cc>
   1694c:	mov	r0, r4
   16950:	bl	16328 <print_json_data@@Base+0xdc>
   16954:	mov	r7, #0
   16958:	ldr	r0, [sp, #16]
   1695c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16960:	sub	r0, r0, #1
   16964:	cmp	r1, r0
   16968:	bge	168dc <print_json_data@@Base+0x690>
   1696c:	mov	r0, r4
   16970:	bl	129e8 <coda_cursor_goto_next_record_field@plt>
   16974:	cmp	r0, #0
   16978:	beq	168dc <print_json_data@@Base+0x690>
   1697c:	bl	188d8 <handle_coda_error@@Base>
   16980:	b	168dc <print_json_data@@Base+0x690>
   16984:	mov	r0, r4
   16988:	bl	1285c <coda_cursor_goto_parent@plt>
   1698c:	movw	r0, #43823	; 0xab2f
   16990:	movt	r0, #1
   16994:	b	16bbc <print_json_data@@Base+0x970>
   16998:	mov	r6, #1
   1699c:	mov	r0, r4
   169a0:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   169a4:	cmp	r0, #0
   169a8:	bne	16b44 <print_json_data@@Base+0x8f8>
   169ac:	b	16b48 <print_json_data@@Base+0x8fc>
   169b0:	add	r1, sp, #16
   169b4:	mov	r0, r4
   169b8:	bl	128a4 <coda_cursor_read_double@plt>
   169bc:	cmp	r0, #0
   169c0:	beq	169c8 <print_json_data@@Base+0x77c>
   169c4:	bl	188d8 <handle_coda_error@@Base>
   169c8:	vldr	d16, [sp, #16]
   169cc:	b	16a0c <print_json_data@@Base+0x7c0>
   169d0:	add	r1, sp, #8
   169d4:	mov	r0, r4
   169d8:	bl	128a4 <coda_cursor_read_double@plt>
   169dc:	cmp	r0, #0
   169e0:	beq	169e8 <print_json_data@@Base+0x79c>
   169e4:	bl	188d8 <handle_coda_error@@Base>
   169e8:	vldr	d0, [sp, #8]
   169ec:	bl	128b0 <coda_isNaN@plt>
   169f0:	cmp	r0, #0
   169f4:	bne	16a08 <print_json_data@@Base+0x7bc>
   169f8:	vldr	d0, [sp, #8]
   169fc:	bl	12754 <coda_isInf@plt>
   16a00:	cmp	r0, #0
   16a04:	beq	16bdc <print_json_data@@Base+0x990>
   16a08:	vldr	d16, [sp, #8]
   16a0c:	movw	r0, #42352	; 0xa570
   16a10:	vmov	r2, r3, d16
   16a14:	movt	r0, #1
   16a18:	b	16a50 <print_json_data@@Base+0x804>
   16a1c:	add	r1, sp, #16
   16a20:	add	r2, sp, #8
   16a24:	mov	r0, r4
   16a28:	bl	1294c <coda_cursor_read_complex_double_split@plt>
   16a2c:	cmp	r0, #0
   16a30:	beq	16a38 <print_json_data@@Base+0x7ec>
   16a34:	bl	188d8 <handle_coda_error@@Base>
   16a38:	vldr	d16, [sp, #16]
   16a3c:	vldr	d17, [sp, #8]
   16a40:	movw	r0, #43960	; 0xabb8
   16a44:	movt	r0, #1
   16a48:	vmov	r2, r3, d16
   16a4c:	vstr	d17, [sp]
   16a50:	bl	16c18 <print_json_data@@Base+0x9cc>
   16a54:	b	16bc0 <print_json_data@@Base+0x974>
   16a58:	bic	lr, r8, #3
   16a5c:	mov	r2, #1
   16a60:	vmov.i32	q8, #1	; 0x00000001
   16a64:	sub	r3, lr, #4
   16a68:	add	r2, r2, r3, lsr #2
   16a6c:	cmp	r3, #12
   16a70:	and	ip, r2, #3
   16a74:	bcs	16a88 <print_json_data@@Base+0x83c>
   16a78:	mov	r3, #0
   16a7c:	cmp	ip, #0
   16a80:	bne	16adc <print_json_data@@Base+0x890>
   16a84:	b	16af8 <print_json_data@@Base+0x8ac>
   16a88:	sub	r7, r2, ip
   16a8c:	mov	r3, #0
   16a90:	mov	r2, #64	; 0x40
   16a94:	mov	r5, r6
   16a98:	vld1.32	{d18-d19}, [r5], r2
   16a9c:	add	r0, r6, #16
   16aa0:	add	r1, r6, #32
   16aa4:	subs	r7, r7, #4
   16aa8:	add	r3, r3, #16
   16aac:	vld1.32	{d20-d21}, [r0]
   16ab0:	add	r0, r6, #48	; 0x30
   16ab4:	mov	r6, r5
   16ab8:	vmul.i32	q8, q9, q8
   16abc:	vld1.32	{d18-d19}, [r1]
   16ac0:	vmul.i32	q8, q10, q8
   16ac4:	vld1.32	{d20-d21}, [r0]
   16ac8:	vmul.i32	q8, q9, q8
   16acc:	vmul.i32	q8, q10, q8
   16ad0:	bne	16a98 <print_json_data@@Base+0x84c>
   16ad4:	cmp	ip, #0
   16ad8:	beq	16af8 <print_json_data@@Base+0x8ac>
   16adc:	add	r0, sp, #16
   16ae0:	add	r2, r0, r3, lsl #2
   16ae4:	rsb	r3, ip, #0
   16ae8:	vld1.32	{d18-d19}, [r2]!
   16aec:	adds	r3, r3, #1
   16af0:	vmul.i32	q8, q9, q8
   16af4:	bcc	16ae8 <print_json_data@@Base+0x89c>
   16af8:	vext.8	q9, q8, q8, #8
   16afc:	cmp	r8, lr
   16b00:	vmul.i32	q0, q8, q9
   16b04:	vmul.i32	q8, q0, d0[1]
   16b08:	vmov.32	r6, d16[0]
   16b0c:	beq	16b2c <print_json_data@@Base+0x8e0>
   16b10:	add	r0, sp, #16
   16b14:	add	r2, r0, lr, lsl #2
   16b18:	sub	r0, r8, lr
   16b1c:	ldr	r1, [r2], #4
   16b20:	subs	r0, r0, #1
   16b24:	mul	r6, r1, r6
   16b28:	bne	16b1c <print_json_data@@Base+0x8d0>
   16b2c:	cmp	r6, #1
   16b30:	blt	16bb4 <print_json_data@@Base+0x968>
   16b34:	mov	r0, r4
   16b38:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   16b3c:	cmp	r0, #0
   16b40:	beq	16b48 <print_json_data@@Base+0x8fc>
   16b44:	bl	188d8 <handle_coda_error@@Base>
   16b48:	movw	r8, #42904	; 0xa798
   16b4c:	sub	r7, r6, #1
   16b50:	mov	r5, #0
   16b54:	movt	r8, #1
   16b58:	mov	r0, r4
   16b5c:	bl	16328 <print_json_data@@Base+0xdc>
   16b60:	cmp	r5, r7
   16b64:	blt	16b84 <print_json_data@@Base+0x938>
   16b68:	add	r5, r5, #1
   16b6c:	cmp	r6, r5
   16b70:	beq	16bac <print_json_data@@Base+0x960>
   16b74:	mov	r0, r4
   16b78:	bl	16328 <print_json_data@@Base+0xdc>
   16b7c:	cmp	r5, r7
   16b80:	bge	16b68 <print_json_data@@Base+0x91c>
   16b84:	mov	r0, r8
   16b88:	bl	16c18 <print_json_data@@Base+0x9cc>
   16b8c:	mov	r0, r4
   16b90:	bl	128c8 <coda_cursor_goto_next_array_element@plt>
   16b94:	cmp	r0, #0
   16b98:	beq	16b68 <print_json_data@@Base+0x91c>
   16b9c:	bl	188d8 <handle_coda_error@@Base>
   16ba0:	add	r5, r5, #1
   16ba4:	cmp	r6, r5
   16ba8:	bne	16b74 <print_json_data@@Base+0x928>
   16bac:	mov	r0, r4
   16bb0:	bl	1285c <coda_cursor_goto_parent@plt>
   16bb4:	movw	r0, #44224	; 0xacc0
   16bb8:	movt	r0, #1
   16bbc:	bl	16c18 <print_json_data@@Base+0x9cc>
   16bc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16bc4:	cmp	r0, #0
   16bc8:	movwne	r0, #43823	; 0xab2f
   16bcc:	movtne	r0, #1
   16bd0:	blne	16c18 <print_json_data@@Base+0x9cc>
   16bd4:	sub	sp, fp, #24
   16bd8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16bdc:	vldr	d0, [sp, #8]
   16be0:	movw	r0, #43904	; 0xab80
   16be4:	add	r1, sp, #16
   16be8:	movt	r0, #1
   16bec:	bl	126d0 <coda_time_double_to_string@plt>
   16bf0:	cmp	r0, #0
   16bf4:	beq	16c04 <print_json_data@@Base+0x9b8>
   16bf8:	movw	r0, #43933	; 0xab9d
   16bfc:	movt	r0, #1
   16c00:	b	16bbc <print_json_data@@Base+0x970>
   16c04:	movw	r0, #44227	; 0xacc3
   16c08:	add	r1, sp, #16
   16c0c:	movt	r0, #1
   16c10:	bl	16c18 <print_json_data@@Base+0x9cc>
   16c14:	b	16bc0 <print_json_data@@Base+0x974>
   16c18:	sub	sp, sp, #12
   16c1c:	push	{fp, lr}
   16c20:	mov	fp, sp
   16c24:	sub	sp, sp, #4
   16c28:	mov	ip, r0
   16c2c:	add	r0, fp, #8
   16c30:	stm	r0, {r1, r2, r3}
   16c34:	movw	r0, #53392	; 0xd090
   16c38:	add	r2, fp, #8
   16c3c:	mov	r1, ip
   16c40:	movt	r0, #2
   16c44:	str	r2, [sp]
   16c48:	ldr	r0, [r0]
   16c4c:	bl	129b8 <vfprintf@plt>
   16c50:	mov	sp, fp
   16c54:	pop	{fp, lr}
   16c58:	add	sp, sp, #12
   16c5c:	bx	lr
   16c60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c64:	add	fp, sp, #28
   16c68:	sub	sp, sp, #4
   16c6c:	cmp	r1, #1
   16c70:	blt	16e34 <print_json_data@@Base+0xbe8>
   16c74:	movw	r6, #42319	; 0xa54f
   16c78:	movw	r8, #42322	; 0xa552
   16c7c:	movw	r9, #42328	; 0xa558
   16c80:	movw	sl, #42331	; 0xa55b
   16c84:	movw	r7, #43971	; 0xabc3
   16c88:	mov	r4, r1
   16c8c:	mov	r5, r0
   16c90:	movt	r6, #1
   16c94:	movt	r8, #1
   16c98:	movt	r9, #1
   16c9c:	movt	sl, #1
   16ca0:	movt	r7, #1
   16ca4:	ldrb	r1, [r5]
   16ca8:	sub	r0, r1, #8
   16cac:	cmp	r0, #26
   16cb0:	bls	16cdc <print_json_data@@Base+0xa90>
   16cb4:	b	16d6c <print_json_data@@Base+0xb20>
   16cb8:	mov	r0, r7
   16cbc:	bl	16c18 <print_json_data@@Base+0x9cc>
   16cc0:	add	r5, r5, #1
   16cc4:	subs	r4, r4, #1
   16cc8:	beq	16e34 <print_json_data@@Base+0xbe8>
   16ccc:	ldrb	r1, [r5]
   16cd0:	sub	r0, r1, #8
   16cd4:	cmp	r0, #26
   16cd8:	bhi	16d6c <print_json_data@@Base+0xb20>
   16cdc:	add	r2, pc, #0
   16ce0:	ldr	pc, [r2, r0, lsl #2]
   16ce4:	andeq	r6, r1, r0, asr sp
   16ce8:			; <UNDEFINED> instruction: 0x00016dbc
   16cec:	ldrdeq	r6, [r1], -r4
   16cf0:	muleq	r1, r0, sp
   16cf4:	andeq	r6, r1, ip, ror #27
   16cf8:	andeq	r6, r1, r4, lsl #28
   16cfc:	muleq	r1, r0, sp
   16d00:	muleq	r1, r0, sp
   16d04:	muleq	r1, r0, sp
   16d08:	muleq	r1, r0, sp
   16d0c:	muleq	r1, r0, sp
   16d10:	muleq	r1, r0, sp
   16d14:	muleq	r1, r0, sp
   16d18:	muleq	r1, r0, sp
   16d1c:	muleq	r1, r0, sp
   16d20:	muleq	r1, r0, sp
   16d24:	muleq	r1, r0, sp
   16d28:	muleq	r1, r0, sp
   16d2c:	muleq	r1, r0, sp
   16d30:	muleq	r1, r0, sp
   16d34:	muleq	r1, r0, sp
   16d38:	muleq	r1, r0, sp
   16d3c:	muleq	r1, r0, sp
   16d40:	muleq	r1, r0, sp
   16d44:	muleq	r1, r0, sp
   16d48:	muleq	r1, r0, sp
   16d4c:			; <UNDEFINED> instruction: 0x00016cb8
   16d50:	movw	r0, #42316	; 0xa54c
   16d54:	movt	r0, #1
   16d58:	bl	16c18 <print_json_data@@Base+0x9cc>
   16d5c:	add	r5, r5, #1
   16d60:	subs	r4, r4, #1
   16d64:	bne	16ccc <print_json_data@@Base+0xa80>
   16d68:	b	16e34 <print_json_data@@Base+0xbe8>
   16d6c:	cmp	r1, #92	; 0x5c
   16d70:	bne	16d90 <print_json_data@@Base+0xb44>
   16d74:	movw	r0, #42334	; 0xa55e
   16d78:	movt	r0, #1
   16d7c:	bl	16c18 <print_json_data@@Base+0x9cc>
   16d80:	add	r5, r5, #1
   16d84:	subs	r4, r4, #1
   16d88:	bne	16ccc <print_json_data@@Base+0xa80>
   16d8c:	b	16e34 <print_json_data@@Base+0xbe8>
   16d90:	sub	r0, r1, #32
   16d94:	uxtb	r0, r0
   16d98:	cmp	r0, #94	; 0x5e
   16d9c:	bhi	16e1c <print_json_data@@Base+0xbd0>
   16da0:	movw	r0, #42753	; 0xa701
   16da4:	movt	r0, #1
   16da8:	bl	16c18 <print_json_data@@Base+0x9cc>
   16dac:	add	r5, r5, #1
   16db0:	subs	r4, r4, #1
   16db4:	bne	16ccc <print_json_data@@Base+0xa80>
   16db8:	b	16e34 <print_json_data@@Base+0xbe8>
   16dbc:	mov	r0, r6
   16dc0:	bl	16c18 <print_json_data@@Base+0x9cc>
   16dc4:	add	r5, r5, #1
   16dc8:	subs	r4, r4, #1
   16dcc:	bne	16ccc <print_json_data@@Base+0xa80>
   16dd0:	b	16e34 <print_json_data@@Base+0xbe8>
   16dd4:	mov	r0, r8
   16dd8:	bl	16c18 <print_json_data@@Base+0x9cc>
   16ddc:	add	r5, r5, #1
   16de0:	subs	r4, r4, #1
   16de4:	bne	16ccc <print_json_data@@Base+0xa80>
   16de8:	b	16e34 <print_json_data@@Base+0xbe8>
   16dec:	mov	r0, r9
   16df0:	bl	16c18 <print_json_data@@Base+0x9cc>
   16df4:	add	r5, r5, #1
   16df8:	subs	r4, r4, #1
   16dfc:	bne	16ccc <print_json_data@@Base+0xa80>
   16e00:	b	16e34 <print_json_data@@Base+0xbe8>
   16e04:	mov	r0, sl
   16e08:	bl	16c18 <print_json_data@@Base+0x9cc>
   16e0c:	add	r5, r5, #1
   16e10:	subs	r4, r4, #1
   16e14:	bne	16ccc <print_json_data@@Base+0xa80>
   16e18:	b	16e34 <print_json_data@@Base+0xbe8>
   16e1c:	movw	r0, #43974	; 0xabc6
   16e20:	movt	r0, #1
   16e24:	bl	16c18 <print_json_data@@Base+0x9cc>
   16e28:	add	r5, r5, #1
   16e2c:	subs	r4, r4, #1
   16e30:	bne	16ccc <print_json_data@@Base+0xa80>
   16e34:	sub	sp, fp, #28
   16e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016e3c <print_full_field_name@@Base>:
   16e3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e40:	add	fp, sp, #28
   16e44:	sub	sp, sp, #12
   16e48:	mov	sl, r2
   16e4c:	mov	r4, r0
   16e50:	cmp	r1, #1
   16e54:	bne	16f4c <print_full_field_name@@Base+0x110>
   16e58:	movw	r5, #49640	; 0xc1e8
   16e5c:	mov	r6, #0
   16e60:	str	sl, [sp]
   16e64:	movt	r5, #2
   16e68:	ldr	r0, [r5, #136]	; 0x88
   16e6c:	cmp	r0, #1
   16e70:	blt	16fa8 <print_full_field_name@@Base+0x16c>
   16e74:	movw	r9, #43981	; 0xabcd
   16e78:	add	sl, sp, #8
   16e7c:	mov	r7, #0
   16e80:	mov	r8, #0
   16e84:	movt	r9, #1
   16e88:	b	16ea0 <print_full_field_name@@Base+0x64>
   16e8c:	add	r6, r6, #1
   16e90:	ldr	r0, [r5, #136]	; 0x88
   16e94:	add	r8, r8, #1
   16e98:	cmp	r8, r0
   16e9c:	bge	16fa8 <print_full_field_name@@Base+0x16c>
   16ea0:	add	r0, r5, r8, lsl #2
   16ea4:	mov	r1, sl
   16ea8:	ldr	r0, [r0, #8]
   16eac:	bl	12ac0 <coda_type_get_class@plt>
   16eb0:	cmp	r0, #0
   16eb4:	beq	16ebc <print_full_field_name@@Base+0x80>
   16eb8:	bl	188d8 <handle_coda_error@@Base>
   16ebc:	ldr	r0, [sp, #8]
   16ec0:	cmp	r0, #1
   16ec4:	beq	16efc <print_full_field_name@@Base+0xc0>
   16ec8:	cmp	r0, #0
   16ecc:	bne	16e90 <print_full_field_name@@Base+0x54>
   16ed0:	add	r0, r5, r7, lsl #2
   16ed4:	mov	r1, r9
   16ed8:	ldr	r2, [r0, #3620]	; 0xe24
   16edc:	mov	r0, r4
   16ee0:	bl	128bc <fprintf@plt>
   16ee4:	add	r7, r7, #1
   16ee8:	ldr	r0, [r5, #136]	; 0x88
   16eec:	add	r8, r8, #1
   16ef0:	cmp	r8, r0
   16ef4:	blt	16ea0 <print_full_field_name@@Base+0x64>
   16ef8:	b	16fa8 <print_full_field_name@@Base+0x16c>
   16efc:	cmp	r8, #0
   16f00:	bne	16f10 <print_full_field_name@@Base+0xd4>
   16f04:	mov	r0, #47	; 0x2f
   16f08:	mov	r1, r4
   16f0c:	bl	129f4 <fputc@plt>
   16f10:	add	r0, r6, r6, lsl #2
   16f14:	add	r0, r5, r0, lsl #4
   16f18:	ldr	r0, [r0, #804]	; 0x324
   16f1c:	cmp	r0, #1
   16f20:	blt	16e8c <print_full_field_name@@Base+0x50>
   16f24:	mov	r0, #91	; 0x5b
   16f28:	mov	r1, r4
   16f2c:	bl	129f4 <fputc@plt>
   16f30:	mov	r0, r4
   16f34:	mov	r1, r6
   16f38:	bl	17110 <print_full_field_name@@Base+0x2d4>
   16f3c:	mov	r0, #93	; 0x5d
   16f40:	mov	r1, r4
   16f44:	bl	129f4 <fputc@plt>
   16f48:	b	16e8c <print_full_field_name@@Base+0x50>
   16f4c:	movw	r7, #49640	; 0xc1e8
   16f50:	mov	r5, r1
   16f54:	movt	r7, #2
   16f58:	ldr	r0, [r7, #3748]	; 0xea4
   16f5c:	cmp	r0, #1
   16f60:	blt	16fdc <print_full_field_name@@Base+0x1a0>
   16f64:	mov	r6, #0
   16f68:	cmp	r6, #0
   16f6c:	bne	16f98 <print_full_field_name@@Base+0x15c>
   16f70:	add	r0, r7, r6, lsl #2
   16f74:	mov	r1, r4
   16f78:	ldr	r0, [r0, #3620]	; 0xe24
   16f7c:	bl	12a84 <fputs@plt>
   16f80:	ldr	r0, [r7, #3748]	; 0xea4
   16f84:	add	r6, r6, #1
   16f88:	cmp	r6, r0
   16f8c:	bge	16fdc <print_full_field_name@@Base+0x1a0>
   16f90:	cmp	r6, #0
   16f94:	beq	16f70 <print_full_field_name@@Base+0x134>
   16f98:	mov	r0, #46	; 0x2e
   16f9c:	mov	r1, r4
   16fa0:	bl	129f4 <fputc@plt>
   16fa4:	b	16f70 <print_full_field_name@@Base+0x134>
   16fa8:	ldr	r0, [sp]
   16fac:	cmp	r0, #0
   16fb0:	beq	17108 <print_full_field_name@@Base+0x2cc>
   16fb4:	ldr	r0, [r5, #3360]	; 0xd20
   16fb8:	cmp	r6, r0
   16fbc:	bge	17108 <print_full_field_name@@Base+0x2cc>
   16fc0:	mov	r0, #91	; 0x5b
   16fc4:	mov	r1, r4
   16fc8:	bl	129f4 <fputc@plt>
   16fcc:	mov	r0, r4
   16fd0:	mov	r1, r6
   16fd4:	bl	17110 <print_full_field_name@@Base+0x2d4>
   16fd8:	b	170fc <print_full_field_name@@Base+0x2c0>
   16fdc:	cmp	r5, #2
   16fe0:	bne	17108 <print_full_field_name@@Base+0x2cc>
   16fe4:	ldr	r0, [r7, #136]	; 0x88
   16fe8:	mov	r6, #0
   16fec:	cmp	r0, #1
   16ff0:	blt	17094 <print_full_field_name@@Base+0x258>
   16ff4:	movw	r9, #43985	; 0xabd1
   16ff8:	add	r8, sp, #4
   16ffc:	mov	r5, #0
   17000:	movt	r9, #1
   17004:	b	1703c <print_full_field_name@@Base+0x200>
   17008:	mov	r0, r9
   1700c:	mov	r1, #2
   17010:	mov	r2, #1
   17014:	mov	r3, r4
   17018:	bl	127d8 <fwrite@plt>
   1701c:	mov	r0, r4
   17020:	mov	r1, r6
   17024:	bl	17110 <print_full_field_name@@Base+0x2d4>
   17028:	add	r6, r6, #1
   1702c:	ldr	r0, [r7, #136]	; 0x88
   17030:	add	r5, r5, #1
   17034:	cmp	r5, r0
   17038:	bge	17094 <print_full_field_name@@Base+0x258>
   1703c:	add	r0, r7, r5, lsl #2
   17040:	mov	r1, r8
   17044:	ldr	r0, [r0, #8]
   17048:	bl	12ac0 <coda_type_get_class@plt>
   1704c:	cmp	r0, #0
   17050:	beq	17058 <print_full_field_name@@Base+0x21c>
   17054:	bl	188d8 <handle_coda_error@@Base>
   17058:	ldr	r0, [sp, #4]
   1705c:	cmp	r0, #1
   17060:	bne	1702c <print_full_field_name@@Base+0x1f0>
   17064:	add	r0, r6, r6, lsl #2
   17068:	add	r0, r7, r0, lsl #4
   1706c:	ldr	r1, [r0, #804]	; 0x324
   17070:	cmp	r1, #1
   17074:	blt	1702c <print_full_field_name@@Base+0x1f0>
   17078:	ldr	r0, [r0, #800]	; 0x320
   1707c:	cmp	r0, #0
   17080:	beq	17008 <print_full_field_name@@Base+0x1cc>
   17084:	mov	r0, #44	; 0x2c
   17088:	mov	r1, r4
   1708c:	bl	129f4 <fputc@plt>
   17090:	b	1701c <print_full_field_name@@Base+0x1e0>
   17094:	cmp	sl, #0
   17098:	beq	170f4 <print_full_field_name@@Base+0x2b8>
   1709c:	ldr	r0, [r7, #3360]	; 0xd20
   170a0:	cmp	r6, r0
   170a4:	bge	170f4 <print_full_field_name@@Base+0x2b8>
   170a8:	add	r0, r6, r6, lsl #2
   170ac:	add	r0, r7, r0, lsl #4
   170b0:	ldr	r0, [r0, #800]	; 0x320
   170b4:	cmp	r0, #0
   170b8:	beq	170cc <print_full_field_name@@Base+0x290>
   170bc:	mov	r0, #44	; 0x2c
   170c0:	mov	r1, r4
   170c4:	bl	129f4 <fputc@plt>
   170c8:	b	170e4 <print_full_field_name@@Base+0x2a8>
   170cc:	movw	r0, #43985	; 0xabd1
   170d0:	mov	r1, #2
   170d4:	mov	r2, #1
   170d8:	mov	r3, r4
   170dc:	movt	r0, #1
   170e0:	bl	127d8 <fwrite@plt>
   170e4:	mov	r0, r4
   170e8:	mov	r1, r6
   170ec:	bl	17110 <print_full_field_name@@Base+0x2d4>
   170f0:	add	r6, r6, #1
   170f4:	cmp	r6, #1
   170f8:	blt	17108 <print_full_field_name@@Base+0x2cc>
   170fc:	mov	r0, #93	; 0x5d
   17100:	mov	r1, r4
   17104:	bl	129f4 <fputc@plt>
   17108:	sub	sp, fp, #28
   1710c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17114:	add	fp, sp, #28
   17118:	sub	sp, sp, #4
   1711c:	mov	r4, r0
   17120:	add	r0, r1, r1, lsl #2
   17124:	movw	r1, #49640	; 0xc1e8
   17128:	movt	r1, #2
   1712c:	add	r0, r1, r0, lsl #4
   17130:	mov	r7, r0
   17134:	ldr	r1, [r7, #804]!	; 0x324
   17138:	cmp	r1, #1
   1713c:	blt	17218 <print_full_field_name@@Base+0x3dc>
   17140:	movw	r8, #49636	; 0xc1e4
   17144:	movw	r9, #53424	; 0xd0b0
   17148:	add	sl, r0, #808	; 0x328
   1714c:	add	r5, r0, #800	; 0x320
   17150:	mov	r6, #0
   17154:	movt	r8, #2
   17158:	movt	r9, #2
   1715c:	cmp	r6, #0
   17160:	bne	17194 <print_full_field_name@@Base+0x358>
   17164:	b	171a0 <print_full_field_name@@Base+0x364>
   17168:	ldr	r2, [r0, #4]
   1716c:	movw	r1, #43992	; 0xabd8
   17170:	mov	r0, r4
   17174:	movt	r1, #1
   17178:	bl	128bc <fprintf@plt>
   1717c:	ldr	r0, [r7]
   17180:	add	r6, r6, #1
   17184:	cmp	r6, r0
   17188:	bge	17218 <print_full_field_name@@Base+0x3dc>
   1718c:	cmp	r6, #0
   17190:	beq	171a0 <print_full_field_name@@Base+0x364>
   17194:	mov	r0, #44	; 0x2c
   17198:	mov	r1, r4
   1719c:	bl	129f4 <fputc@plt>
   171a0:	ldr	r0, [r8]
   171a4:	cmp	r0, #0
   171a8:	beq	171f0 <print_full_field_name@@Base+0x3b4>
   171ac:	ldr	r0, [r5]
   171b0:	add	r0, r6, r0
   171b4:	add	r0, r9, r0, lsl #2
   171b8:	ldr	r1, [r0, #72]	; 0x48
   171bc:	cmp	r1, #0
   171c0:	beq	17168 <print_full_field_name@@Base+0x32c>
   171c4:	ldr	r3, [r0, #4]
   171c8:	ldr	r2, [r0, #36]	; 0x24
   171cc:	movw	r1, #43988	; 0xabd4
   171d0:	mov	r0, r4
   171d4:	movt	r1, #1
   171d8:	bl	128bc <fprintf@plt>
   171dc:	ldr	r0, [r7]
   171e0:	add	r6, r6, #1
   171e4:	cmp	r6, r0
   171e8:	blt	1718c <print_full_field_name@@Base+0x350>
   171ec:	b	17218 <print_full_field_name@@Base+0x3dc>
   171f0:	ldr	r2, [sl, r6, lsl #2]
   171f4:	cmn	r2, #1
   171f8:	bne	1716c <print_full_field_name@@Base+0x330>
   171fc:	mov	r0, #63	; 0x3f
   17200:	mov	r1, r4
   17204:	bl	129f4 <fputc@plt>
   17208:	ldr	r0, [r7]
   1720c:	add	r6, r6, #1
   17210:	cmp	r6, r0
   17214:	blt	1718c <print_full_field_name@@Base+0x350>
   17218:	sub	sp, fp, #28
   1721c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017220 <traverse_info_init@@Base>:
   17220:	movw	r0, #49640	; 0xc1e8
   17224:	mov	r1, #0
   17228:	movt	r0, #2
   1722c:	str	r1, [r0, #3748]	; 0xea4
   17230:	str	r1, [r0, #3360]	; 0xd20
   17234:	str	r1, [r0, #136]	; 0x88
   17238:	str	r1, [r0, #4]
   1723c:	bx	lr

00017240 <traverse_info_done@@Base>:
   17240:	push	{r4, sl, fp, lr}
   17244:	add	fp, sp, #8
   17248:	movw	r4, #49640	; 0xc1e8
   1724c:	movt	r4, #2
   17250:	ldr	r0, [r4, #4]
   17254:	cmp	r0, #0
   17258:	beq	17260 <traverse_info_done@@Base+0x20>
   1725c:	bl	129a0 <coda_close@plt>
   17260:	ldr	r0, [r4, #664]	; 0x298
   17264:	cmp	r0, #0
   17268:	popeq	{r4, sl, fp, pc}
   1726c:	add	r0, r4, #664	; 0x298
   17270:	pop	{r4, sl, fp, lr}
   17274:	b	15d90 <codadump_filter_remove@@Base>

00017278 <traverse_product@@Base>:
   17278:	push	{r4, r5, fp, lr}
   1727c:	add	fp, sp, #8
   17280:	movw	r5, #49640	; 0xc1e8
   17284:	movt	r5, #2
   17288:	mov	r1, r5
   1728c:	ldr	r0, [r1], #4
   17290:	bl	126b8 <coda_open@plt>
   17294:	cmp	r0, #0
   17298:	beq	172d8 <traverse_product@@Base+0x60>
   1729c:	bl	12a60 <coda_get_errno@plt>
   172a0:	ldr	r0, [r0]
   172a4:	cmn	r0, #21
   172a8:	bne	172d4 <traverse_product@@Base+0x5c>
   172ac:	mov	r0, #0
   172b0:	bl	12700 <coda_set_option_use_mmap@plt>
   172b4:	mov	r1, r5
   172b8:	ldr	r0, [r1], #4
   172bc:	bl	126b8 <coda_open@plt>
   172c0:	mov	r4, r0
   172c4:	mov	r0, #1
   172c8:	bl	12700 <coda_set_option_use_mmap@plt>
   172cc:	cmp	r4, #0
   172d0:	beq	172d8 <traverse_product@@Base+0x60>
   172d4:	bl	188d8 <handle_coda_error@@Base>
   172d8:	ldr	r1, [r5, #4]
   172dc:	add	r4, r5, #144	; 0x90
   172e0:	mov	r0, r4
   172e4:	bl	127e4 <coda_cursor_set_product@plt>
   172e8:	cmp	r0, #0
   172ec:	beq	172f4 <traverse_product@@Base+0x7c>
   172f0:	bl	188d8 <handle_coda_error@@Base>
   172f4:	ldr	r0, [r5, #136]	; 0x88
   172f8:	add	r0, r5, r0, lsl #2
   172fc:	add	r1, r0, #8
   17300:	mov	r0, r4
   17304:	bl	1273c <coda_cursor_get_type@plt>
   17308:	cmp	r0, #0
   1730c:	beq	17314 <traverse_product@@Base+0x9c>
   17310:	bl	188d8 <handle_coda_error@@Base>
   17314:	bl	1732c <traverse_product@@Base+0xb4>
   17318:	ldr	r0, [r5, #4]
   1731c:	bl	129a0 <coda_close@plt>
   17320:	mov	r0, #0
   17324:	str	r0, [r5, #4]
   17328:	pop	{r4, r5, fp, pc}
   1732c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17330:	add	fp, sp, #24
   17334:	sub	sp, sp, #16
   17338:	movw	r6, #49640	; 0xc1e8
   1733c:	add	r1, sp, #12
   17340:	movt	r6, #2
   17344:	ldr	r0, [r6, #136]	; 0x88
   17348:	add	r0, r6, r0, lsl #2
   1734c:	ldr	r0, [r0, #8]
   17350:	bl	12ac0 <coda_type_get_class@plt>
   17354:	cmp	r0, #0
   17358:	beq	17360 <traverse_product@@Base+0xe8>
   1735c:	bl	188d8 <handle_coda_error@@Base>
   17360:	ldr	r0, [sp, #12]
   17364:	cmp	r0, #6
   17368:	bhi	175c0 <traverse_product@@Base+0x348>
   1736c:	add	r1, pc, #0
   17370:	ldr	pc, [r1, r0, lsl #2]
   17374:	andeq	r7, r1, ip, ror #7
   17378:	strdeq	r7, [r1], -r4
   1737c:	muleq	r1, r0, r3
   17380:	muleq	r1, r0, r3
   17384:	muleq	r1, r0, r3
   17388:	muleq	r1, r0, r3
   1738c:	andeq	r7, r1, ip, asr #10
   17390:	ldr	r0, [r6, #136]	; 0x88
   17394:	add	r1, sp, #8
   17398:	add	r0, r6, r0, lsl #2
   1739c:	ldr	r0, [r0, #8]
   173a0:	bl	12880 <coda_type_get_read_type@plt>
   173a4:	cmp	r0, #0
   173a8:	beq	173b0 <traverse_product@@Base+0x138>
   173ac:	bl	188d8 <handle_coda_error@@Base>
   173b0:	ldr	r0, [sp, #8]
   173b4:	sub	r0, r0, #11
   173b8:	cmp	r0, #1
   173bc:	bhi	175bc <traverse_product@@Base+0x344>
   173c0:	bl	14a7c <dim_enter_array@@Base>
   173c4:	ldr	r0, [r6, #3360]	; 0xd20
   173c8:	add	r0, r0, #1
   173cc:	str	r0, [r6, #3360]	; 0xd20
   173d0:	bl	17784 <traverse_product@@Base+0x50c>
   173d4:	ldr	r0, [r6, #3360]	; 0xd20
   173d8:	sub	r0, r0, #1
   173dc:	str	r0, [r6, #3360]	; 0xd20
   173e0:	bl	1592c <dim_leave_array@@Base>
   173e4:	sub	sp, fp, #24
   173e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   173ec:	ldr	r0, [r6, #136]	; 0x88
   173f0:	cmp	r0, #30
   173f4:	bgt	175c0 <traverse_product@@Base+0x348>
   173f8:	ldr	r1, [r6, #3748]	; 0xea4
   173fc:	add	r0, r6, r0, lsl #2
   17400:	add	r1, r1, #1
   17404:	str	r1, [r6, #3748]	; 0xea4
   17408:	add	r1, sp, #8
   1740c:	ldr	r0, [r0, #8]
   17410:	bl	12868 <coda_type_get_num_record_fields@plt>
   17414:	cmp	r0, #0
   17418:	beq	17420 <traverse_product@@Base+0x1a8>
   1741c:	bl	188d8 <handle_coda_error@@Base>
   17420:	ldr	r0, [r6, #136]	; 0x88
   17424:	add	r0, r0, #1
   17428:	str	r0, [r6, #136]	; 0x88
   1742c:	ldr	r0, [r6, #796]	; 0x31c
   17430:	add	r0, r6, r0, lsl #2
   17434:	ldr	r8, [r0, #664]	; 0x298
   17438:	cmp	r8, #0
   1743c:	beq	175d0 <traverse_product@@Base+0x358>
   17440:	add	r4, sp, #4
   17444:	add	r7, r6, #664	; 0x298
   17448:	mov	r0, r8
   1744c:	bl	15e3c <codadump_filter_get_fieldname@@Base>
   17450:	cmp	r0, #0
   17454:	bne	174b8 <traverse_product@@Base+0x240>
   17458:	b	17624 <traverse_product@@Base+0x3ac>
   1745c:	ldr	r0, [r6, #796]	; 0x31c
   17460:	ldr	r0, [r7, r0, lsl #2]
   17464:	bl	15e70 <codadump_filter_get_subfilter@@Base>
   17468:	ldr	r1, [r6, #796]	; 0x31c
   1746c:	add	r1, r1, #1
   17470:	str	r0, [r7, r1, lsl #2]
   17474:	ldr	r0, [sp, #4]
   17478:	str	r1, [r6, #796]	; 0x31c
   1747c:	mov	r1, #1
   17480:	bl	17668 <traverse_product@@Base+0x3f0>
   17484:	ldr	r0, [r6, #796]	; 0x31c
   17488:	sub	r0, r0, #1
   1748c:	str	r0, [r6, #796]	; 0x31c
   17490:	ldr	r0, [r7, r0, lsl #2]
   17494:	bl	15ea4 <codadump_filter_get_next_filter@@Base>
   17498:	ldr	r2, [r6, #796]	; 0x31c
   1749c:	mov	r1, r7
   174a0:	cmp	r0, #0
   174a4:	str	r0, [r1, r2, lsl #2]!
   174a8:	beq	175c8 <traverse_product@@Base+0x350>
   174ac:	bl	15e3c <codadump_filter_get_fieldname@@Base>
   174b0:	cmp	r0, #0
   174b4:	beq	17624 <traverse_product@@Base+0x3ac>
   174b8:	mov	r5, r0
   174bc:	ldr	r0, [r6, #136]	; 0x88
   174c0:	mov	r2, r4
   174c4:	mov	r1, r5
   174c8:	add	r0, r6, r0, lsl #2
   174cc:	ldr	r0, [r0, #4]
   174d0:	bl	129d0 <coda_type_get_record_field_index_from_name@plt>
   174d4:	cmp	r0, #0
   174d8:	beq	1745c <traverse_product@@Base+0x1e4>
   174dc:	bl	12a60 <coda_get_errno@plt>
   174e0:	ldr	r0, [r0]
   174e4:	cmn	r0, #102	; 0x66
   174e8:	beq	17644 <traverse_product@@Base+0x3cc>
   174ec:	bl	188d8 <handle_coda_error@@Base>
   174f0:	b	1745c <traverse_product@@Base+0x1e4>
   174f4:	ldr	r0, [r6, #136]	; 0x88
   174f8:	cmp	r0, #30
   174fc:	bgt	175c0 <traverse_product@@Base+0x348>
   17500:	bl	14a7c <dim_enter_array@@Base>
   17504:	ldr	r0, [r6, #3360]	; 0xd20
   17508:	add	r2, r6, #8
   1750c:	add	r0, r0, #1
   17510:	str	r0, [r6, #3360]	; 0xd20
   17514:	ldr	r0, [r6, #136]	; 0x88
   17518:	add	r1, r0, #1
   1751c:	str	r1, [r6, #136]	; 0x88
   17520:	add	r1, r2, r1, lsl #2
   17524:	ldr	r0, [r2, r0, lsl #2]
   17528:	bl	12958 <coda_type_get_array_base_type@plt>
   1752c:	cmp	r0, #0
   17530:	beq	17538 <traverse_product@@Base+0x2c0>
   17534:	bl	188d8 <handle_coda_error@@Base>
   17538:	bl	1732c <traverse_product@@Base+0xb4>
   1753c:	ldr	r0, [r6, #136]	; 0x88
   17540:	sub	r0, r0, #1
   17544:	str	r0, [r6, #136]	; 0x88
   17548:	b	173d4 <traverse_product@@Base+0x15c>
   1754c:	bl	1264c <coda_get_option_bypass_special_types@plt>
   17550:	mov	r2, r0
   17554:	ldr	r0, [r6, #136]	; 0x88
   17558:	cmp	r2, #0
   1755c:	add	r1, r6, r0, lsl #2
   17560:	ldr	r0, [r1, #8]!
   17564:	beq	17584 <traverse_product@@Base+0x30c>
   17568:	bl	12a6c <coda_type_get_special_base_type@plt>
   1756c:	cmp	r0, #0
   17570:	beq	17578 <traverse_product@@Base+0x300>
   17574:	bl	188d8 <handle_coda_error@@Base>
   17578:	bl	1732c <traverse_product@@Base+0xb4>
   1757c:	sub	sp, fp, #24
   17580:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17584:	add	r1, sp, #8
   17588:	bl	12934 <coda_type_get_special_type@plt>
   1758c:	cmp	r0, #0
   17590:	beq	17598 <traverse_product@@Base+0x320>
   17594:	bl	188d8 <handle_coda_error@@Base>
   17598:	ldr	r0, [sp, #8]
   1759c:	sub	r1, r0, #1
   175a0:	cmp	r1, #2
   175a4:	bcc	175bc <traverse_product@@Base+0x344>
   175a8:	cmp	r0, #0
   175ac:	beq	175c0 <traverse_product@@Base+0x348>
   175b0:	cmp	r0, #3
   175b4:	beq	173c0 <traverse_product@@Base+0x148>
   175b8:	b	175c0 <traverse_product@@Base+0x348>
   175bc:	bl	17784 <traverse_product@@Base+0x50c>
   175c0:	sub	sp, fp, #24
   175c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   175c8:	str	r8, [r1]
   175cc:	b	17604 <traverse_product@@Base+0x38c>
   175d0:	ldr	r1, [sp, #8]
   175d4:	mov	r0, #0
   175d8:	str	r0, [sp, #4]
   175dc:	cmp	r1, #1
   175e0:	blt	17604 <traverse_product@@Base+0x38c>
   175e4:	mov	r1, #0
   175e8:	bl	17668 <traverse_product@@Base+0x3f0>
   175ec:	ldr	r0, [sp, #4]
   175f0:	ldr	r1, [sp, #8]
   175f4:	add	r0, r0, #1
   175f8:	cmp	r0, r1
   175fc:	str	r0, [sp, #4]
   17600:	blt	175e4 <traverse_product@@Base+0x36c>
   17604:	ldr	r0, [r6, #136]	; 0x88
   17608:	sub	r0, r0, #1
   1760c:	str	r0, [r6, #136]	; 0x88
   17610:	ldr	r0, [r6, #3748]	; 0xea4
   17614:	sub	r0, r0, #1
   17618:	str	r0, [r6, #3748]	; 0xea4
   1761c:	sub	sp, fp, #24
   17620:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17624:	movw	r0, #43996	; 0xabdc
   17628:	movw	r1, #44009	; 0xabe9
   1762c:	movw	r3, #44087	; 0xac37
   17630:	movw	r2, #393	; 0x189
   17634:	movt	r0, #1
   17638:	movt	r1, #1
   1763c:	movt	r3, #1
   17640:	bl	12ab4 <__assert_fail@plt>
   17644:	movw	r0, #49584	; 0xc1b0
   17648:	movw	r1, #44108	; 0xac4c
   1764c:	mov	r2, r5
   17650:	movt	r0, #2
   17654:	movt	r1, #1
   17658:	ldr	r0, [r0]
   1765c:	bl	128bc <fprintf@plt>
   17660:	mov	r0, #1
   17664:	bl	12874 <exit@plt>
   17668:	push	{r4, r5, r6, sl, fp, lr}
   1766c:	add	fp, sp, #16
   17670:	sub	sp, sp, #8
   17674:	movw	r6, #49640	; 0xc1e8
   17678:	mov	r4, r0
   1767c:	mov	r5, r1
   17680:	add	r2, sp, #4
   17684:	movt	r6, #2
   17688:	mov	r1, r4
   1768c:	ldr	r0, [r6, #3748]	; 0xea4
   17690:	add	r0, r6, r0, lsl #2
   17694:	str	r4, [r0, #3488]	; 0xda0
   17698:	ldr	r0, [r6, #136]	; 0x88
   1769c:	add	r0, r6, r0, lsl #2
   176a0:	ldr	r0, [r0, #4]
   176a4:	bl	1267c <coda_type_get_record_field_hidden_status@plt>
   176a8:	cmp	r0, #0
   176ac:	beq	176b4 <traverse_product@@Base+0x43c>
   176b0:	bl	188d8 <handle_coda_error@@Base>
   176b4:	cmp	r5, #0
   176b8:	bne	176c8 <traverse_product@@Base+0x450>
   176bc:	ldr	r0, [sp, #4]
   176c0:	cmp	r0, #0
   176c4:	bne	1777c <traverse_product@@Base+0x504>
   176c8:	movw	r0, #49636	; 0xc1e4
   176cc:	movt	r0, #2
   176d0:	ldr	r0, [r0]
   176d4:	cmp	r0, #0
   176d8:	beq	17728 <traverse_product@@Base+0x4b0>
   176dc:	ldr	r0, [r6, #136]	; 0x88
   176e0:	mov	r2, sp
   176e4:	mov	r1, r4
   176e8:	add	r0, r6, r0, lsl #2
   176ec:	ldr	r0, [r0, #4]
   176f0:	bl	1276c <coda_type_get_record_field_available_status@plt>
   176f4:	cmp	r0, #0
   176f8:	beq	17700 <traverse_product@@Base+0x488>
   176fc:	bl	188d8 <handle_coda_error@@Base>
   17700:	ldr	r0, [sp]
   17704:	cmn	r0, #1
   17708:	bne	1771c <traverse_product@@Base+0x4a4>
   1770c:	bl	15a70 <dim_record_field_available@@Base>
   17710:	cmp	r0, #0
   17714:	beq	1777c <traverse_product@@Base+0x504>
   17718:	ldr	r0, [sp]
   1771c:	ldr	r1, [r6, #136]	; 0x88
   17720:	add	r1, r6, r1, lsl #2
   17724:	str	r0, [r1, #3360]	; 0xd20
   17728:	ldr	r0, [r6, #136]	; 0x88
   1772c:	ldr	r1, [r6, #3748]	; 0xea4
   17730:	add	r0, r6, r0, lsl #2
   17734:	add	r1, r6, r1, lsl #2
   17738:	ldr	r0, [r0, #4]
   1773c:	add	r2, r1, #3616	; 0xe20
   17740:	mov	r1, r4
   17744:	bl	12a78 <coda_type_get_record_field_name@plt>
   17748:	cmp	r0, #0
   1774c:	beq	17754 <traverse_product@@Base+0x4dc>
   17750:	bl	188d8 <handle_coda_error@@Base>
   17754:	ldr	r0, [r6, #136]	; 0x88
   17758:	add	r1, r6, r0, lsl #2
   1775c:	ldr	r0, [r1, #4]
   17760:	add	r2, r1, #8
   17764:	mov	r1, r4
   17768:	bl	12730 <coda_type_get_record_field_type@plt>
   1776c:	cmp	r0, #0
   17770:	beq	17778 <traverse_product@@Base+0x500>
   17774:	bl	188d8 <handle_coda_error@@Base>
   17778:	bl	1732c <traverse_product@@Base+0xb4>
   1777c:	sub	sp, fp, #16
   17780:	pop	{r4, r5, r6, sl, fp, pc}
   17784:	push	{r4, r5, fp, lr}
   17788:	add	fp, sp, #8
   1778c:	sub	sp, sp, #8
   17790:	movw	r0, #53412	; 0xd0a4
   17794:	movt	r0, #2
   17798:	ldr	r0, [r0]
   1779c:	cmp	r0, #1
   177a0:	beq	17848 <traverse_product@@Base+0x5d0>
   177a4:	cmp	r0, #0
   177a8:	bne	179c0 <traverse_product@@Base+0x748>
   177ac:	movw	r5, #49588	; 0xc1b4
   177b0:	mov	r1, #1
   177b4:	mov	r2, #0
   177b8:	movt	r5, #2
   177bc:	ldr	r0, [r5]
   177c0:	bl	16e3c <print_full_field_name@@Base>
   177c4:	movw	r0, #53400	; 0xd098
   177c8:	movw	r4, #49640	; 0xc1e8
   177cc:	movt	r0, #2
   177d0:	movt	r4, #2
   177d4:	ldr	r0, [r0]
   177d8:	cmp	r0, #0
   177dc:	beq	178c4 <traverse_product@@Base+0x64c>
   177e0:	ldr	r0, [r4, #136]	; 0x88
   177e4:	add	r1, sp, #4
   177e8:	add	r0, r4, r0, lsl #2
   177ec:	ldr	r0, [r0, #8]
   177f0:	bl	12ac0 <coda_type_get_class@plt>
   177f4:	cmp	r0, #0
   177f8:	beq	17800 <traverse_product@@Base+0x588>
   177fc:	bl	188d8 <handle_coda_error@@Base>
   17800:	ldr	r0, [sp, #4]
   17804:	cmp	r0, #6
   17808:	bne	17854 <traverse_product@@Base+0x5dc>
   1780c:	ldr	r0, [r4, #136]	; 0x88
   17810:	mov	r1, sp
   17814:	add	r0, r4, r0, lsl #2
   17818:	ldr	r0, [r0, #8]
   1781c:	bl	12934 <coda_type_get_special_type@plt>
   17820:	cmp	r0, #0
   17824:	beq	1782c <traverse_product@@Base+0x5b4>
   17828:	bl	188d8 <handle_coda_error@@Base>
   1782c:	ldr	r0, [sp]
   17830:	bl	12628 <coda_type_get_special_type_name@plt>
   17834:	mov	r1, r0
   17838:	movw	r0, #44160	; 0xac80
   1783c:	movt	r0, #1
   17840:	bl	12688 <printf@plt>
   17844:	b	178c4 <traverse_product@@Base+0x64c>
   17848:	sub	sp, fp, #8
   1784c:	pop	{r4, r5, fp, lr}
   17850:	b	12bbc <export_data_element_to_ascii@@Base>
   17854:	ldr	r0, [r4, #136]	; 0x88
   17858:	mov	r1, sp
   1785c:	add	r0, r4, r0, lsl #2
   17860:	ldr	r0, [r0, #8]
   17864:	bl	12880 <coda_type_get_read_type@plt>
   17868:	cmp	r0, #0
   1786c:	beq	17874 <traverse_product@@Base+0x5fc>
   17870:	bl	188d8 <handle_coda_error@@Base>
   17874:	ldr	r0, [sp]
   17878:	bl	1297c <coda_type_get_native_type_name@plt>
   1787c:	mov	r1, r0
   17880:	movw	r0, #44160	; 0xac80
   17884:	movt	r0, #1
   17888:	bl	12688 <printf@plt>
   1788c:	ldr	r0, [sp]
   17890:	sub	r0, r0, #11
   17894:	cmp	r0, #1
   17898:	bhi	178c4 <traverse_product@@Base+0x64c>
   1789c:	mov	r0, #40	; 0x28
   178a0:	bl	1291c <putchar@plt>
   178a4:	ldr	r1, [r4, #3360]	; 0xd20
   178a8:	cmp	r1, #0
   178ac:	ble	179c8 <traverse_product@@Base+0x750>
   178b0:	ldr	r0, [r5]
   178b4:	sub	r1, r1, #1
   178b8:	bl	17110 <print_full_field_name@@Base+0x2d4>
   178bc:	mov	r0, #41	; 0x29
   178c0:	bl	1291c <putchar@plt>
   178c4:	movw	r0, #49632	; 0xc1e0
   178c8:	movt	r0, #2
   178cc:	ldr	r0, [r0]
   178d0:	cmp	r0, #0
   178d4:	beq	1791c <traverse_product@@Base+0x6a4>
   178d8:	ldr	r0, [r4, #136]	; 0x88
   178dc:	add	r1, sp, #4
   178e0:	add	r0, r4, r0, lsl #2
   178e4:	ldr	r0, [r0, #8]
   178e8:	bl	127a8 <coda_type_get_unit@plt>
   178ec:	cmp	r0, #0
   178f0:	beq	178f8 <traverse_product@@Base+0x680>
   178f4:	bl	188d8 <handle_coda_error@@Base>
   178f8:	ldr	r1, [sp, #4]
   178fc:	cmp	r1, #0
   17900:	beq	1791c <traverse_product@@Base+0x6a4>
   17904:	ldrb	r0, [r1]
   17908:	cmp	r0, #0
   1790c:	beq	1791c <traverse_product@@Base+0x6a4>
   17910:	movw	r0, #44220	; 0xacbc
   17914:	movt	r0, #1
   17918:	bl	12688 <printf@plt>
   1791c:	movw	r0, #53404	; 0xd09c
   17920:	movt	r0, #2
   17924:	ldr	r0, [r0]
   17928:	cmp	r0, #0
   1792c:	beq	17974 <traverse_product@@Base+0x6fc>
   17930:	ldr	r0, [r4, #136]	; 0x88
   17934:	add	r1, sp, #4
   17938:	add	r0, r4, r0, lsl #2
   1793c:	ldr	r0, [r0, #8]
   17940:	bl	127b4 <coda_type_get_description@plt>
   17944:	cmp	r0, #0
   17948:	beq	17950 <traverse_product@@Base+0x6d8>
   1794c:	bl	188d8 <handle_coda_error@@Base>
   17950:	ldr	r1, [sp, #4]
   17954:	cmp	r1, #0
   17958:	beq	17974 <traverse_product@@Base+0x6fc>
   1795c:	ldrb	r0, [r1]
   17960:	cmp	r0, #0
   17964:	beq	17974 <traverse_product@@Base+0x6fc>
   17968:	movw	r0, #44226	; 0xacc2
   1796c:	movt	r0, #1
   17970:	bl	12688 <printf@plt>
   17974:	mov	r0, #10
   17978:	bl	1291c <putchar@plt>
   1797c:	movw	r0, #49620	; 0xc1d4
   17980:	movt	r0, #2
   17984:	ldr	r0, [r0]
   17988:	cmp	r0, #0
   1798c:	beq	179c0 <traverse_product@@Base+0x748>
   17990:	movw	r5, #53424	; 0xd0b0
   17994:	movt	r5, #2
   17998:	ldr	r0, [r5]
   1799c:	cmp	r0, #1
   179a0:	blt	179c0 <traverse_product@@Base+0x748>
   179a4:	mov	r4, #0
   179a8:	mov	r0, r4
   179ac:	bl	1487c <print_all_distinct_dims@@Base>
   179b0:	ldr	r0, [r5]
   179b4:	add	r4, r4, #1
   179b8:	cmp	r4, r0
   179bc:	blt	179a8 <traverse_product@@Base+0x730>
   179c0:	sub	sp, fp, #8
   179c4:	pop	{r4, r5, fp, pc}
   179c8:	movw	r0, #44164	; 0xac84
   179cc:	movw	r1, #44009	; 0xabe9
   179d0:	movw	r3, #44193	; 0xaca1
   179d4:	mov	r2, #238	; 0xee
   179d8:	movt	r0, #1
   179dc:	movt	r1, #1
   179e0:	movt	r3, #1
   179e4:	bl	12ab4 <__assert_fail@plt>

000179e8 <print_yaml_data@@Base>:
   179e8:	push	{r4, sl, fp, lr}
   179ec:	add	fp, sp, #8
   179f0:	sub	sp, sp, #528	; 0x210
   179f4:	movw	r1, #49608	; 0xc1c8
   179f8:	movw	r4, #49640	; 0xc1e8
   179fc:	movt	r1, #2
   17a00:	movt	r4, #2
   17a04:	str	r0, [r1]
   17a08:	ldr	r0, [r4]
   17a0c:	sub	r1, fp, #12
   17a10:	bl	126b8 <coda_open@plt>
   17a14:	cmp	r0, #0
   17a18:	beq	17a58 <print_yaml_data@@Base+0x70>
   17a1c:	bl	12a60 <coda_get_errno@plt>
   17a20:	ldr	r0, [r0]
   17a24:	cmn	r0, #21
   17a28:	bne	17a54 <print_yaml_data@@Base+0x6c>
   17a2c:	mov	r0, #0
   17a30:	bl	12700 <coda_set_option_use_mmap@plt>
   17a34:	ldr	r0, [r4]
   17a38:	sub	r1, fp, #12
   17a3c:	bl	126b8 <coda_open@plt>
   17a40:	mov	r4, r0
   17a44:	mov	r0, #1
   17a48:	bl	12700 <coda_set_option_use_mmap@plt>
   17a4c:	cmp	r4, #0
   17a50:	beq	17a58 <print_yaml_data@@Base+0x70>
   17a54:	bl	188d8 <handle_coda_error@@Base>
   17a58:	ldr	r1, [fp, #-12]
   17a5c:	mov	r0, sp
   17a60:	bl	127e4 <coda_cursor_set_product@plt>
   17a64:	cmp	r0, #0
   17a68:	beq	17a70 <print_yaml_data@@Base+0x88>
   17a6c:	bl	188d8 <handle_coda_error@@Base>
   17a70:	movw	r0, #53416	; 0xd0a8
   17a74:	movt	r0, #2
   17a78:	ldr	r1, [r0]
   17a7c:	cmp	r1, #0
   17a80:	beq	17a98 <print_yaml_data@@Base+0xb0>
   17a84:	mov	r0, sp
   17a88:	bl	129c4 <coda_cursor_goto@plt>
   17a8c:	cmp	r0, #0
   17a90:	beq	17a98 <print_yaml_data@@Base+0xb0>
   17a94:	bl	188d8 <handle_coda_error@@Base>
   17a98:	mov	r0, #0
   17a9c:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   17aa0:	mov	r0, sp
   17aa4:	mov	r1, #0
   17aa8:	bl	17abc <print_yaml_data@@Base+0xd4>
   17aac:	ldr	r0, [fp, #-12]
   17ab0:	bl	129a0 <coda_close@plt>
   17ab4:	sub	sp, fp, #8
   17ab8:	pop	{r4, sl, fp, pc}
   17abc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ac0:	add	fp, sp, #28
   17ac4:	sub	sp, sp, #76	; 0x4c
   17ac8:	movw	r9, #49608	; 0xc1c8
   17acc:	mov	sl, r0
   17ad0:	mov	r0, #0
   17ad4:	mov	r5, r1
   17ad8:	movt	r9, #2
   17adc:	str	r0, [fp, #-36]	; 0xffffffdc
   17ae0:	ldr	r0, [r9]
   17ae4:	cmp	r0, #0
   17ae8:	beq	17bc8 <print_yaml_data@@Base+0x1e0>
   17aec:	sub	r1, fp, #36	; 0x24
   17af0:	mov	r0, sl
   17af4:	bl	12778 <coda_cursor_has_attributes@plt>
   17af8:	cmp	r0, #0
   17afc:	beq	17b04 <print_yaml_data@@Base+0x11c>
   17b00:	bl	188d8 <handle_coda_error@@Base>
   17b04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17b08:	cmp	r0, #0
   17b0c:	beq	17bc8 <print_yaml_data@@Base+0x1e0>
   17b10:	cmp	r5, #0
   17b14:	beq	17b64 <print_yaml_data@@Base+0x17c>
   17b18:	movw	r0, #44606	; 0xae3e
   17b1c:	movt	r0, #1
   17b20:	bl	18604 <print_yaml_data@@Base+0xc1c>
   17b24:	ldr	r4, [r9, #4]
   17b28:	cmp	r4, #0
   17b2c:	bmi	185e4 <print_yaml_data@@Base+0xbfc>
   17b30:	beq	17b64 <print_yaml_data@@Base+0x17c>
   17b34:	movw	r7, #53392	; 0xd090
   17b38:	movw	r6, #42750	; 0xa6fe
   17b3c:	movt	r7, #2
   17b40:	movt	r6, #1
   17b44:	ldr	r3, [r7]
   17b48:	mov	r0, r6
   17b4c:	mov	r1, #2
   17b50:	mov	r2, #1
   17b54:	bl	127d8 <fwrite@plt>
   17b58:	sub	r4, r4, #1
   17b5c:	cmp	r4, #0
   17b60:	bgt	17b44 <print_yaml_data@@Base+0x15c>
   17b64:	movw	r0, #44232	; 0xacc8
   17b68:	movt	r0, #1
   17b6c:	bl	18604 <print_yaml_data@@Base+0xc1c>
   17b70:	mov	r0, sl
   17b74:	bl	128f8 <coda_cursor_goto_attributes@plt>
   17b78:	cmp	r0, #0
   17b7c:	beq	17b84 <print_yaml_data@@Base+0x19c>
   17b80:	bl	188d8 <handle_coda_error@@Base>
   17b84:	ldr	r0, [r9, #4]
   17b88:	mov	r1, #1
   17b8c:	add	r0, r0, #1
   17b90:	str	r0, [r9, #4]
   17b94:	mov	r0, sl
   17b98:	bl	17abc <print_yaml_data@@Base+0xd4>
   17b9c:	ldr	r0, [r9, #4]
   17ba0:	sub	r0, r0, #1
   17ba4:	str	r0, [r9, #4]
   17ba8:	mov	r0, sl
   17bac:	bl	1285c <coda_cursor_goto_parent@plt>
   17bb0:	movw	r0, #44239	; 0xaccf
   17bb4:	movt	r0, #1
   17bb8:	bl	1864c <print_yaml_data@@Base+0xc64>
   17bbc:	ldr	r0, [r9, #4]
   17bc0:	add	r0, r0, #1
   17bc4:	str	r0, [r9, #4]
   17bc8:	sub	r1, fp, #32
   17bcc:	mov	r0, sl
   17bd0:	bl	12784 <coda_cursor_get_type_class@plt>
   17bd4:	cmp	r0, #0
   17bd8:	beq	17be0 <print_yaml_data@@Base+0x1f8>
   17bdc:	bl	188d8 <handle_coda_error@@Base>
   17be0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17be4:	cmp	r0, #6
   17be8:	bhi	18588 <print_yaml_data@@Base+0xba0>
   17bec:	add	r1, pc, #0
   17bf0:	ldr	pc, [r1, r0, lsl #2]
   17bf4:	andeq	r7, r1, r4, lsr #25
   17bf8:	andeq	r7, r1, r0, ror #27
   17bfc:	andeq	r7, r1, r0, lsl ip
   17c00:	andeq	r7, r1, r0, lsl ip
   17c04:	andeq	r7, r1, r0, lsl ip
   17c08:	andeq	r7, r1, r0, lsl ip
   17c0c:	andeq	r7, r1, r4, lsr #28
   17c10:	sub	r1, fp, #40	; 0x28
   17c14:	mov	r0, sl
   17c18:	bl	12820 <coda_cursor_get_read_type@plt>
   17c1c:	cmp	r0, #0
   17c20:	beq	17c28 <print_yaml_data@@Base+0x240>
   17c24:	bl	188d8 <handle_coda_error@@Base>
   17c28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17c2c:	add	r0, r0, #1
   17c30:	cmp	r0, #13
   17c34:	bhi	18588 <print_yaml_data@@Base+0xba0>
   17c38:	add	r1, pc, #0
   17c3c:	ldr	pc, [r1, r0, lsl #2]
   17c40:	andeq	r7, r1, r0, ror #28
   17c44:	andeq	r7, r1, r8, ror ip
   17c48:	andeq	r7, r1, r0, ror lr
   17c4c:	andeq	r7, r1, r8, ror ip
   17c50:	andeq	r7, r1, r0, ror lr
   17c54:	andeq	r7, r1, r8, ror ip
   17c58:	andeq	r7, r1, r0, ror lr
   17c5c:	ldrdeq	r7, [r1], -r8
   17c60:	andeq	r8, r1, r8
   17c64:	muleq	r1, ip, lr
   17c68:	muleq	r1, ip, lr
   17c6c:	andeq	r7, r1, ip, ror #29
   17c70:	andeq	r7, r1, ip, lsr #30
   17c74:	andeq	r8, r1, r8, asr #32
   17c78:	add	r1, sp, #16
   17c7c:	mov	r0, sl
   17c80:	bl	12a3c <coda_cursor_read_int32@plt>
   17c84:	cmp	r0, #0
   17c88:	beq	17c90 <print_yaml_data@@Base+0x2a8>
   17c8c:	bl	188d8 <handle_coda_error@@Base>
   17c90:	ldr	r1, [sp, #16]
   17c94:	movw	r0, #42599	; 0xa667
   17c98:	movt	r0, #1
   17c9c:	bl	18604 <print_yaml_data@@Base+0xc1c>
   17ca0:	b	18588 <print_yaml_data@@Base+0xba0>
   17ca4:	add	r1, sp, #16
   17ca8:	mov	r0, sl
   17cac:	bl	126dc <coda_cursor_get_num_elements@plt>
   17cb0:	cmp	r0, #0
   17cb4:	beq	17cbc <print_yaml_data@@Base+0x2d4>
   17cb8:	bl	188d8 <handle_coda_error@@Base>
   17cbc:	ldr	r0, [sp, #16]
   17cc0:	cmp	r0, #1
   17cc4:	blt	17edc <print_yaml_data@@Base+0x4f4>
   17cc8:	cmp	r5, #0
   17ccc:	movwne	r0, #44606	; 0xae3e
   17cd0:	movtne	r0, #1
   17cd4:	blne	18604 <print_yaml_data@@Base+0xc1c>
   17cd8:	add	r1, sp, #8
   17cdc:	mov	r0, sl
   17ce0:	bl	1273c <coda_cursor_get_type@plt>
   17ce4:	cmp	r0, #0
   17ce8:	beq	17cf0 <print_yaml_data@@Base+0x308>
   17cec:	bl	188d8 <handle_coda_error@@Base>
   17cf0:	ldr	r0, [sp, #8]
   17cf4:	sub	r1, fp, #40	; 0x28
   17cf8:	bl	12940 <coda_type_get_record_union_status@plt>
   17cfc:	cmp	r0, #0
   17d00:	beq	17d08 <print_yaml_data@@Base+0x320>
   17d04:	bl	188d8 <handle_coda_error@@Base>
   17d08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17d0c:	cmp	r0, #0
   17d10:	beq	18110 <print_yaml_data@@Base+0x728>
   17d14:	sub	r1, fp, #44	; 0x2c
   17d18:	mov	r0, sl
   17d1c:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   17d20:	cmp	r0, #0
   17d24:	beq	17d2c <print_yaml_data@@Base+0x344>
   17d28:	bl	188d8 <handle_coda_error@@Base>
   17d2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17d30:	ldr	r0, [sp, #8]
   17d34:	sub	r2, fp, #48	; 0x30
   17d38:	bl	12a78 <coda_type_get_record_field_name@plt>
   17d3c:	cmp	r0, #0
   17d40:	beq	17d48 <print_yaml_data@@Base+0x360>
   17d44:	bl	188d8 <handle_coda_error@@Base>
   17d48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17d4c:	mov	r0, sl
   17d50:	bl	127fc <coda_cursor_goto_record_field_by_index@plt>
   17d54:	cmp	r0, #0
   17d58:	beq	17d60 <print_yaml_data@@Base+0x378>
   17d5c:	bl	188d8 <handle_coda_error@@Base>
   17d60:	cmp	r5, #0
   17d64:	beq	17da8 <print_yaml_data@@Base+0x3c0>
   17d68:	ldr	r4, [r9, #4]
   17d6c:	cmp	r4, #0
   17d70:	bmi	185e4 <print_yaml_data@@Base+0xbfc>
   17d74:	beq	17da8 <print_yaml_data@@Base+0x3c0>
   17d78:	movw	r6, #53392	; 0xd090
   17d7c:	movw	r5, #42750	; 0xa6fe
   17d80:	movt	r6, #2
   17d84:	movt	r5, #1
   17d88:	ldr	r3, [r6]
   17d8c:	mov	r0, r5
   17d90:	mov	r1, #2
   17d94:	mov	r2, #1
   17d98:	bl	127d8 <fwrite@plt>
   17d9c:	sub	r4, r4, #1
   17da0:	cmp	r4, #0
   17da4:	bgt	17d88 <print_yaml_data@@Base+0x3a0>
   17da8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17dac:	movw	r0, #44246	; 0xacd6
   17db0:	movt	r0, #1
   17db4:	bl	18604 <print_yaml_data@@Base+0xc1c>
   17db8:	ldr	r0, [r9, #4]
   17dbc:	mov	r1, #1
   17dc0:	add	r0, r0, #1
   17dc4:	str	r0, [r9, #4]
   17dc8:	mov	r0, sl
   17dcc:	bl	17abc <print_yaml_data@@Base+0xd4>
   17dd0:	ldr	r0, [r9, #4]
   17dd4:	sub	r0, r0, #1
   17dd8:	str	r0, [r9, #4]
   17ddc:	b	18580 <print_yaml_data@@Base+0xb98>
   17de0:	add	r4, sp, #16
   17de4:	add	r1, sp, #8
   17de8:	mov	r0, sl
   17dec:	mov	r2, r4
   17df0:	bl	12988 <coda_cursor_get_array_dim@plt>
   17df4:	cmp	r0, #0
   17df8:	beq	17e00 <print_yaml_data@@Base+0x418>
   17dfc:	bl	188d8 <handle_coda_error@@Base>
   17e00:	ldr	r0, [sp, #8]
   17e04:	cmp	r0, #0
   17e08:	bmi	18460 <print_yaml_data@@Base+0xa78>
   17e0c:	beq	18248 <print_yaml_data@@Base+0x860>
   17e10:	cmp	r0, #4
   17e14:	bcs	182f8 <print_yaml_data@@Base+0x910>
   17e18:	mov	lr, #0
   17e1c:	mov	r6, #1
   17e20:	b	183b0 <print_yaml_data@@Base+0x9c8>
   17e24:	sub	r1, fp, #40	; 0x28
   17e28:	mov	r0, sl
   17e2c:	bl	127c0 <coda_cursor_get_special_type@plt>
   17e30:	cmp	r0, #0
   17e34:	beq	17e3c <print_yaml_data@@Base+0x454>
   17e38:	bl	188d8 <handle_coda_error@@Base>
   17e3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17e40:	cmp	r0, #3
   17e44:	bhi	18588 <print_yaml_data@@Base+0xba0>
   17e48:	add	r1, pc, #0
   17e4c:	ldr	pc, [r1, r0, lsl #2]
   17e50:	andeq	r7, r1, r0, ror #28
   17e54:	andeq	r8, r1, r0, asr r2
   17e58:	andeq	r8, r1, r0, ror r2
   17e5c:			; <UNDEFINED> instruction: 0x000182bc
   17e60:	movw	r0, #44336	; 0xad30
   17e64:	movt	r0, #1
   17e68:	bl	18604 <print_yaml_data@@Base+0xc1c>
   17e6c:	b	18588 <print_yaml_data@@Base+0xba0>
   17e70:	add	r1, sp, #16
   17e74:	mov	r0, sl
   17e78:	bl	12718 <coda_cursor_read_uint32@plt>
   17e7c:	cmp	r0, #0
   17e80:	beq	17e88 <print_yaml_data@@Base+0x4a0>
   17e84:	bl	188d8 <handle_coda_error@@Base>
   17e88:	ldr	r1, [sp, #16]
   17e8c:	movw	r0, #42604	; 0xa66c
   17e90:	movt	r0, #1
   17e94:	bl	18604 <print_yaml_data@@Base+0xc1c>
   17e98:	b	18588 <print_yaml_data@@Base+0xba0>
   17e9c:	add	r1, sp, #16
   17ea0:	mov	r0, sl
   17ea4:	bl	128a4 <coda_cursor_read_double@plt>
   17ea8:	cmp	r0, #0
   17eac:	beq	17eb4 <print_yaml_data@@Base+0x4cc>
   17eb0:	bl	188d8 <handle_coda_error@@Base>
   17eb4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17eb8:	vldr	d16, [sp, #16]
   17ebc:	movw	r2, #42609	; 0xa671
   17ec0:	movw	r0, #42675	; 0xa6b3
   17ec4:	movt	r2, #1
   17ec8:	movt	r0, #1
   17ecc:	cmp	r1, #8
   17ed0:	moveq	r0, r2
   17ed4:	vmov	r2, r3, d16
   17ed8:	b	182f0 <print_yaml_data@@Base+0x908>
   17edc:	movw	r0, #44251	; 0xacdb
   17ee0:	movt	r0, #1
   17ee4:	bl	18604 <print_yaml_data@@Base+0xc1c>
   17ee8:	b	18588 <print_yaml_data@@Base+0xba0>
   17eec:	add	r1, sp, #16
   17ef0:	mov	r0, sl
   17ef4:	bl	12904 <coda_cursor_read_char@plt>
   17ef8:	cmp	r0, #0
   17efc:	beq	17f04 <print_yaml_data@@Base+0x51c>
   17f00:	bl	188d8 <handle_coda_error@@Base>
   17f04:	movw	r0, #43972	; 0xabc4
   17f08:	movt	r0, #1
   17f0c:	bl	18604 <print_yaml_data@@Base+0xc1c>
   17f10:	add	r0, sp, #16
   17f14:	mov	r1, #1
   17f18:	bl	186fc <print_yaml_data@@Base+0xd14>
   17f1c:	movw	r0, #44605	; 0xae3d
   17f20:	movt	r0, #1
   17f24:	bl	18604 <print_yaml_data@@Base+0xc1c>
   17f28:	b	18588 <print_yaml_data@@Base+0xba0>
   17f2c:	add	r1, sp, #16
   17f30:	mov	r0, sl
   17f34:	bl	1288c <coda_cursor_get_string_length@plt>
   17f38:	cmp	r0, #0
   17f3c:	beq	17f44 <print_yaml_data@@Base+0x55c>
   17f40:	bl	188d8 <handle_coda_error@@Base>
   17f44:	ldr	r0, [sp, #16]
   17f48:	add	r6, r0, #1
   17f4c:	mov	r0, r6
   17f50:	bl	1282c <malloc@plt>
   17f54:	mov	r5, r0
   17f58:	cmp	r0, #0
   17f5c:	bne	17f90 <print_yaml_data@@Base+0x5a8>
   17f60:	movw	r1, #42185	; 0xa4c9
   17f64:	movw	r3, #44262	; 0xace6
   17f68:	movw	r0, #361	; 0x169
   17f6c:	mov	r2, r6
   17f70:	movt	r1, #1
   17f74:	movt	r3, #1
   17f78:	str	r0, [sp]
   17f7c:	mvn	r0, #0
   17f80:	bl	126ac <coda_set_error@plt>
   17f84:	bl	188d8 <handle_coda_error@@Base>
   17f88:	ldr	r0, [sp, #16]
   17f8c:	add	r6, r0, #1
   17f90:	mov	r0, sl
   17f94:	mov	r1, r5
   17f98:	mov	r2, r6
   17f9c:	bl	12850 <coda_cursor_read_string@plt>
   17fa0:	cmp	r0, #0
   17fa4:	beq	17fac <print_yaml_data@@Base+0x5c4>
   17fa8:	bl	188d8 <handle_coda_error@@Base>
   17fac:	movw	r0, #43972	; 0xabc4
   17fb0:	movt	r0, #1
   17fb4:	bl	18604 <print_yaml_data@@Base+0xc1c>
   17fb8:	ldr	r1, [sp, #16]
   17fbc:	mov	r0, r5
   17fc0:	bl	186fc <print_yaml_data@@Base+0xd14>
   17fc4:	ldr	r1, [sp, #16]
   17fc8:	movw	r0, #44605	; 0xae3d
   17fcc:	movt	r0, #1
   17fd0:	bl	18604 <print_yaml_data@@Base+0xc1c>
   17fd4:	b	18104 <print_yaml_data@@Base+0x71c>
   17fd8:	add	r1, sp, #8
   17fdc:	mov	r0, sl
   17fe0:	bl	129ac <coda_cursor_read_int64@plt>
   17fe4:	cmp	r0, #0
   17fe8:	beq	17ff0 <print_yaml_data@@Base+0x608>
   17fec:	bl	188d8 <handle_coda_error@@Base>
   17ff0:	ldr	r0, [sp, #8]
   17ff4:	ldr	r1, [sp, #12]
   17ff8:	add	r4, sp, #16
   17ffc:	mov	r2, r4
   18000:	bl	12aa8 <coda_str64@plt>
   18004:	b	18034 <print_yaml_data@@Base+0x64c>
   18008:	add	r1, sp, #8
   1800c:	mov	r0, sl
   18010:	bl	12898 <coda_cursor_read_uint64@plt>
   18014:	cmp	r0, #0
   18018:	beq	18020 <print_yaml_data@@Base+0x638>
   1801c:	bl	188d8 <handle_coda_error@@Base>
   18020:	ldr	r0, [sp, #8]
   18024:	ldr	r1, [sp, #12]
   18028:	add	r4, sp, #16
   1802c:	mov	r2, r4
   18030:	bl	126e8 <coda_str64u@plt>
   18034:	movw	r0, #44349	; 0xad3d
   18038:	mov	r1, r4
   1803c:	movt	r0, #1
   18040:	bl	18604 <print_yaml_data@@Base+0xc1c>
   18044:	b	18588 <print_yaml_data@@Base+0xba0>
   18048:	add	r1, sp, #16
   1804c:	mov	r0, sl
   18050:	bl	12a0c <coda_cursor_get_bit_size@plt>
   18054:	cmp	r0, #0
   18058:	beq	18060 <print_yaml_data@@Base+0x678>
   1805c:	bl	188d8 <handle_coda_error@@Base>
   18060:	ldr	r4, [sp, #16]
   18064:	ldr	r7, [sp, #20]
   18068:	lsr	r0, r4, #3
   1806c:	tst	r4, #7
   18070:	orr	r6, r0, r7, lsl #29
   18074:	addne	r6, r6, #1
   18078:	mov	r0, r6
   1807c:	bl	1282c <malloc@plt>
   18080:	mov	r5, r0
   18084:	cmp	r0, #0
   18088:	bne	180bc <print_yaml_data@@Base+0x6d4>
   1808c:	movw	r1, #42185	; 0xa4c9
   18090:	movw	r3, #44262	; 0xace6
   18094:	mov	r0, #392	; 0x188
   18098:	mov	r2, r6
   1809c:	movt	r1, #1
   180a0:	movt	r3, #1
   180a4:	str	r0, [sp]
   180a8:	mvn	r0, #0
   180ac:	bl	126ac <coda_set_error@plt>
   180b0:	bl	188d8 <handle_coda_error@@Base>
   180b4:	ldr	r4, [sp, #16]
   180b8:	ldr	r7, [sp, #20]
   180bc:	mov	r0, sl
   180c0:	mov	r1, r5
   180c4:	mov	r2, #0
   180c8:	mov	r3, #0
   180cc:	stm	sp, {r4, r7}
   180d0:	bl	12a9c <coda_cursor_read_bits@plt>
   180d4:	cmp	r0, #0
   180d8:	beq	180e0 <print_yaml_data@@Base+0x6f8>
   180dc:	bl	188d8 <handle_coda_error@@Base>
   180e0:	movw	r0, #43972	; 0xabc4
   180e4:	movt	r0, #1
   180e8:	bl	18604 <print_yaml_data@@Base+0xc1c>
   180ec:	mov	r0, r5
   180f0:	mov	r1, r6
   180f4:	bl	186fc <print_yaml_data@@Base+0xd14>
   180f8:	movw	r0, #44605	; 0xae3d
   180fc:	movt	r0, #1
   18100:	bl	18604 <print_yaml_data@@Base+0xc1c>
   18104:	mov	r0, r5
   18108:	bl	126f4 <free@plt>
   1810c:	b	18588 <print_yaml_data@@Base+0xba0>
   18110:	mov	r0, sl
   18114:	bl	127f0 <coda_cursor_goto_first_record_field@plt>
   18118:	cmp	r0, #0
   1811c:	beq	18124 <print_yaml_data@@Base+0x73c>
   18120:	bl	188d8 <handle_coda_error@@Base>
   18124:	mov	r0, #0
   18128:	str	r0, [fp, #-44]	; 0xffffffd4
   1812c:	ldr	r0, [sp, #16]
   18130:	cmp	r0, #1
   18134:	blt	18580 <print_yaml_data@@Base+0xb98>
   18138:	mov	r1, #0
   1813c:	cmp	r5, #0
   18140:	beq	18470 <print_yaml_data@@Base+0xa88>
   18144:	movw	r7, #44246	; 0xacd6
   18148:	movw	r5, #53392	; 0xd090
   1814c:	movw	r6, #42750	; 0xa6fe
   18150:	add	r4, sp, #52	; 0x34
   18154:	movt	r7, #1
   18158:	movt	r5, #2
   1815c:	movt	r6, #1
   18160:	b	1817c <print_yaml_data@@Base+0x794>
   18164:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18168:	add	r1, r0, #1
   1816c:	ldr	r0, [sp, #16]
   18170:	str	r1, [fp, #-44]	; 0xffffffd4
   18174:	cmp	r1, r0
   18178:	bge	18580 <print_yaml_data@@Base+0xb98>
   1817c:	ldr	r0, [sp, #8]
   18180:	mov	r2, r4
   18184:	bl	1267c <coda_type_get_record_field_hidden_status@plt>
   18188:	cmp	r0, #0
   1818c:	beq	18194 <print_yaml_data@@Base+0x7ac>
   18190:	bl	188d8 <handle_coda_error@@Base>
   18194:	ldr	r0, [sp, #52]	; 0x34
   18198:	cmp	r0, #0
   1819c:	bne	1821c <print_yaml_data@@Base+0x834>
   181a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   181a4:	ldr	r0, [sp, #8]
   181a8:	sub	r2, fp, #48	; 0x30
   181ac:	bl	12a78 <coda_type_get_record_field_name@plt>
   181b0:	cmp	r0, #0
   181b4:	beq	181bc <print_yaml_data@@Base+0x7d4>
   181b8:	bl	188d8 <handle_coda_error@@Base>
   181bc:	ldr	r8, [r9, #4]
   181c0:	cmp	r8, #0
   181c4:	bmi	185e4 <print_yaml_data@@Base+0xbfc>
   181c8:	beq	181ec <print_yaml_data@@Base+0x804>
   181cc:	ldr	r3, [r5]
   181d0:	mov	r0, r6
   181d4:	mov	r1, #2
   181d8:	mov	r2, #1
   181dc:	bl	127d8 <fwrite@plt>
   181e0:	sub	r8, r8, #1
   181e4:	cmp	r8, #0
   181e8:	bgt	181cc <print_yaml_data@@Base+0x7e4>
   181ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   181f0:	mov	r0, r7
   181f4:	bl	18604 <print_yaml_data@@Base+0xc1c>
   181f8:	ldr	r0, [r9, #4]
   181fc:	mov	r1, #1
   18200:	add	r0, r0, #1
   18204:	str	r0, [r9, #4]
   18208:	mov	r0, sl
   1820c:	bl	17abc <print_yaml_data@@Base+0xd4>
   18210:	ldr	r0, [r9, #4]
   18214:	sub	r0, r0, #1
   18218:	str	r0, [r9, #4]
   1821c:	ldr	r0, [sp, #16]
   18220:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18224:	sub	r0, r0, #1
   18228:	cmp	r1, r0
   1822c:	bge	18164 <print_yaml_data@@Base+0x77c>
   18230:	mov	r0, sl
   18234:	bl	129e8 <coda_cursor_goto_next_record_field@plt>
   18238:	cmp	r0, #0
   1823c:	beq	18164 <print_yaml_data@@Base+0x77c>
   18240:	bl	188d8 <handle_coda_error@@Base>
   18244:	b	18164 <print_yaml_data@@Base+0x77c>
   18248:	mov	r6, #1
   1824c:	b	183d4 <print_yaml_data@@Base+0x9ec>
   18250:	add	r1, sp, #16
   18254:	mov	r0, sl
   18258:	bl	128a4 <coda_cursor_read_double@plt>
   1825c:	cmp	r0, #0
   18260:	beq	18268 <print_yaml_data@@Base+0x880>
   18264:	bl	188d8 <handle_coda_error@@Base>
   18268:	vldr	d16, [sp, #16]
   1826c:	b	182ac <print_yaml_data@@Base+0x8c4>
   18270:	add	r1, sp, #8
   18274:	mov	r0, sl
   18278:	bl	128a4 <coda_cursor_read_double@plt>
   1827c:	cmp	r0, #0
   18280:	beq	18288 <print_yaml_data@@Base+0x8a0>
   18284:	bl	188d8 <handle_coda_error@@Base>
   18288:	vldr	d0, [sp, #8]
   1828c:	bl	128b0 <coda_isNaN@plt>
   18290:	cmp	r0, #0
   18294:	bne	182a8 <print_yaml_data@@Base+0x8c0>
   18298:	vldr	d0, [sp, #8]
   1829c:	bl	12754 <coda_isInf@plt>
   182a0:	cmp	r0, #0
   182a4:	beq	185a4 <print_yaml_data@@Base+0xbbc>
   182a8:	vldr	d16, [sp, #8]
   182ac:	movw	r0, #42675	; 0xa6b3
   182b0:	vmov	r2, r3, d16
   182b4:	movt	r0, #1
   182b8:	b	182f0 <print_yaml_data@@Base+0x908>
   182bc:	add	r1, sp, #16
   182c0:	add	r2, sp, #8
   182c4:	mov	r0, sl
   182c8:	bl	1294c <coda_cursor_read_complex_double_split@plt>
   182cc:	cmp	r0, #0
   182d0:	beq	182d8 <print_yaml_data@@Base+0x8f0>
   182d4:	bl	188d8 <handle_coda_error@@Base>
   182d8:	vldr	d16, [sp, #16]
   182dc:	vldr	d17, [sp, #8]
   182e0:	movw	r0, #42710	; 0xa6d6
   182e4:	movt	r0, #1
   182e8:	vmov	r2, r3, d16
   182ec:	vstr	d17, [sp]
   182f0:	bl	18604 <print_yaml_data@@Base+0xc1c>
   182f4:	b	18588 <print_yaml_data@@Base+0xba0>
   182f8:	bic	lr, r0, #3
   182fc:	mov	r2, #1
   18300:	vmov.i32	q8, #1	; 0x00000001
   18304:	sub	r7, lr, #4
   18308:	add	r3, r2, r7, lsr #2
   1830c:	cmp	r7, #12
   18310:	and	ip, r3, #3
   18314:	bcs	18328 <print_yaml_data@@Base+0x940>
   18318:	mov	r3, #0
   1831c:	cmp	ip, #0
   18320:	bne	1837c <print_yaml_data@@Base+0x994>
   18324:	b	18398 <print_yaml_data@@Base+0x9b0>
   18328:	sub	r7, r3, ip
   1832c:	mov	r3, #0
   18330:	mov	r6, #64	; 0x40
   18334:	mov	r5, r4
   18338:	vld1.32	{d18-d19}, [r5], r6
   1833c:	add	r1, r4, #16
   18340:	add	r2, r4, #32
   18344:	subs	r7, r7, #4
   18348:	add	r3, r3, #16
   1834c:	vld1.32	{d20-d21}, [r1]
   18350:	add	r1, r4, #48	; 0x30
   18354:	mov	r4, r5
   18358:	vmul.i32	q8, q9, q8
   1835c:	vld1.32	{d18-d19}, [r2]
   18360:	vmul.i32	q8, q10, q8
   18364:	vld1.32	{d20-d21}, [r1]
   18368:	vmul.i32	q8, q9, q8
   1836c:	vmul.i32	q8, q10, q8
   18370:	bne	18338 <print_yaml_data@@Base+0x950>
   18374:	cmp	ip, #0
   18378:	beq	18398 <print_yaml_data@@Base+0x9b0>
   1837c:	add	r1, sp, #16
   18380:	rsb	r2, ip, #0
   18384:	add	r3, r1, r3, lsl #2
   18388:	vld1.32	{d18-d19}, [r3]!
   1838c:	adds	r2, r2, #1
   18390:	vmul.i32	q8, q9, q8
   18394:	bcc	18388 <print_yaml_data@@Base+0x9a0>
   18398:	vext.8	q9, q8, q8, #8
   1839c:	cmp	r0, lr
   183a0:	vmul.i32	q0, q8, q9
   183a4:	vmul.i32	q8, q0, d0[1]
   183a8:	vmov.32	r6, d16[0]
   183ac:	beq	183cc <print_yaml_data@@Base+0x9e4>
   183b0:	add	r1, sp, #16
   183b4:	sub	r0, r0, lr
   183b8:	add	r2, r1, lr, lsl #2
   183bc:	ldr	r1, [r2], #4
   183c0:	subs	r0, r0, #1
   183c4:	mul	r6, r1, r6
   183c8:	bne	183bc <print_yaml_data@@Base+0x9d4>
   183cc:	cmp	r6, #1
   183d0:	blt	18460 <print_yaml_data@@Base+0xa78>
   183d4:	movw	r0, #44606	; 0xae3e
   183d8:	movt	r0, #1
   183dc:	bl	18604 <print_yaml_data@@Base+0xc1c>
   183e0:	mov	r0, sl
   183e4:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   183e8:	cmp	r0, #0
   183ec:	beq	183f4 <print_yaml_data@@Base+0xa0c>
   183f0:	bl	188d8 <handle_coda_error@@Base>
   183f4:	movw	r5, #44255	; 0xacdf
   183f8:	sub	r7, r6, #1
   183fc:	mov	r4, #0
   18400:	movt	r5, #1
   18404:	b	18414 <print_yaml_data@@Base+0xa2c>
   18408:	add	r4, r4, #1
   1840c:	cmp	r6, r4
   18410:	beq	18580 <print_yaml_data@@Base+0xb98>
   18414:	mov	r0, r5
   18418:	bl	1864c <print_yaml_data@@Base+0xc64>
   1841c:	ldr	r0, [r9, #4]
   18420:	mov	r1, #0
   18424:	add	r0, r0, #1
   18428:	str	r0, [r9, #4]
   1842c:	mov	r0, sl
   18430:	bl	17abc <print_yaml_data@@Base+0xd4>
   18434:	ldr	r0, [r9, #4]
   18438:	cmp	r4, r7
   1843c:	sub	r0, r0, #1
   18440:	str	r0, [r9, #4]
   18444:	bge	18408 <print_yaml_data@@Base+0xa20>
   18448:	mov	r0, sl
   1844c:	bl	128c8 <coda_cursor_goto_next_array_element@plt>
   18450:	cmp	r0, #0
   18454:	beq	18408 <print_yaml_data@@Base+0xa20>
   18458:	bl	188d8 <handle_coda_error@@Base>
   1845c:	b	18408 <print_yaml_data@@Base+0xa20>
   18460:	movw	r0, #44258	; 0xace2
   18464:	movt	r0, #1
   18468:	bl	18604 <print_yaml_data@@Base+0xc1c>
   1846c:	b	18588 <print_yaml_data@@Base+0xba0>
   18470:	movw	r5, #53392	; 0xd090
   18474:	movw	r6, #42750	; 0xa6fe
   18478:	mov	r8, #1
   1847c:	add	r4, sp, #52	; 0x34
   18480:	movt	r5, #2
   18484:	movt	r6, #1
   18488:	b	184a4 <print_yaml_data@@Base+0xabc>
   1848c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18490:	add	r1, r0, #1
   18494:	ldr	r0, [sp, #16]
   18498:	str	r1, [fp, #-44]	; 0xffffffd4
   1849c:	cmp	r1, r0
   184a0:	bge	18580 <print_yaml_data@@Base+0xb98>
   184a4:	ldr	r0, [sp, #8]
   184a8:	mov	r2, r4
   184ac:	bl	1267c <coda_type_get_record_field_hidden_status@plt>
   184b0:	cmp	r0, #0
   184b4:	beq	184bc <print_yaml_data@@Base+0xad4>
   184b8:	bl	188d8 <handle_coda_error@@Base>
   184bc:	ldr	r0, [sp, #52]	; 0x34
   184c0:	cmp	r0, #0
   184c4:	bne	18554 <print_yaml_data@@Base+0xb6c>
   184c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   184cc:	ldr	r0, [sp, #8]
   184d0:	sub	r2, fp, #48	; 0x30
   184d4:	bl	12a78 <coda_type_get_record_field_name@plt>
   184d8:	cmp	r0, #0
   184dc:	beq	184e4 <print_yaml_data@@Base+0xafc>
   184e0:	bl	188d8 <handle_coda_error@@Base>
   184e4:	cmp	r8, #0
   184e8:	bne	1851c <print_yaml_data@@Base+0xb34>
   184ec:	ldr	r7, [r9, #4]
   184f0:	cmp	r7, #0
   184f4:	bmi	185e4 <print_yaml_data@@Base+0xbfc>
   184f8:	beq	1851c <print_yaml_data@@Base+0xb34>
   184fc:	ldr	r3, [r5]
   18500:	mov	r0, r6
   18504:	mov	r1, #2
   18508:	mov	r2, #1
   1850c:	bl	127d8 <fwrite@plt>
   18510:	sub	r7, r7, #1
   18514:	cmp	r7, #0
   18518:	bgt	184fc <print_yaml_data@@Base+0xb14>
   1851c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18520:	movw	r0, #44246	; 0xacd6
   18524:	movt	r0, #1
   18528:	bl	18604 <print_yaml_data@@Base+0xc1c>
   1852c:	ldr	r0, [r9, #4]
   18530:	mov	r1, #1
   18534:	add	r0, r0, #1
   18538:	str	r0, [r9, #4]
   1853c:	mov	r0, sl
   18540:	bl	17abc <print_yaml_data@@Base+0xd4>
   18544:	ldr	r0, [r9, #4]
   18548:	mov	r8, #0
   1854c:	sub	r0, r0, #1
   18550:	str	r0, [r9, #4]
   18554:	ldr	r0, [sp, #16]
   18558:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1855c:	sub	r0, r0, #1
   18560:	cmp	r1, r0
   18564:	bge	1848c <print_yaml_data@@Base+0xaa4>
   18568:	mov	r0, sl
   1856c:	bl	129e8 <coda_cursor_goto_next_record_field@plt>
   18570:	cmp	r0, #0
   18574:	beq	1848c <print_yaml_data@@Base+0xaa4>
   18578:	bl	188d8 <handle_coda_error@@Base>
   1857c:	b	1848c <print_yaml_data@@Base+0xaa4>
   18580:	mov	r0, sl
   18584:	bl	1285c <coda_cursor_goto_parent@plt>
   18588:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1858c:	cmp	r0, #0
   18590:	ldrne	r0, [r9, #4]
   18594:	subne	r0, r0, #1
   18598:	strne	r0, [r9, #4]
   1859c:	sub	sp, fp, #28
   185a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   185a4:	vldr	d0, [sp, #8]
   185a8:	movw	r0, #43904	; 0xab80
   185ac:	add	r1, sp, #16
   185b0:	movt	r0, #1
   185b4:	bl	126d0 <coda_time_double_to_string@plt>
   185b8:	cmp	r0, #0
   185bc:	beq	185d0 <print_yaml_data@@Base+0xbe8>
   185c0:	movw	r0, #43933	; 0xab9d
   185c4:	movt	r0, #1
   185c8:	bl	18604 <print_yaml_data@@Base+0xc1c>
   185cc:	b	18588 <print_yaml_data@@Base+0xba0>
   185d0:	movw	r0, #44349	; 0xad3d
   185d4:	add	r1, sp, #16
   185d8:	movt	r0, #1
   185dc:	bl	18604 <print_yaml_data@@Base+0xc1c>
   185e0:	b	18588 <print_yaml_data@@Base+0xba0>
   185e4:	movw	r0, #42720	; 0xa6e0
   185e8:	movw	r1, #44262	; 0xace6
   185ec:	movw	r3, #42732	; 0xa6ec
   185f0:	mov	r2, #44	; 0x2c
   185f4:	movt	r0, #1
   185f8:	movt	r1, #1
   185fc:	movt	r3, #1
   18600:	bl	12ab4 <__assert_fail@plt>
   18604:	sub	sp, sp, #12
   18608:	push	{fp, lr}
   1860c:	mov	fp, sp
   18610:	sub	sp, sp, #4
   18614:	mov	ip, r0
   18618:	add	r0, fp, #8
   1861c:	stm	r0, {r1, r2, r3}
   18620:	movw	r0, #53392	; 0xd090
   18624:	add	r2, fp, #8
   18628:	mov	r1, ip
   1862c:	movt	r0, #2
   18630:	str	r2, [sp]
   18634:	ldr	r0, [r0]
   18638:	bl	129b8 <vfprintf@plt>
   1863c:	mov	sp, fp
   18640:	pop	{fp, lr}
   18644:	add	sp, sp, #12
   18648:	bx	lr
   1864c:	sub	sp, sp, #12
   18650:	push	{r4, r5, r6, r7, fp, lr}
   18654:	add	fp, sp, #16
   18658:	sub	sp, sp, #4
   1865c:	mov	r4, r0
   18660:	add	r0, fp, #8
   18664:	stm	r0, {r1, r2, r3}
   18668:	movw	r0, #49608	; 0xc1c8
   1866c:	movt	r0, #2
   18670:	ldr	r6, [r0, #4]
   18674:	cmp	r6, #0
   18678:	bmi	186dc <print_yaml_data@@Base+0xcf4>
   1867c:	beq	186b0 <print_yaml_data@@Base+0xcc8>
   18680:	movw	r7, #53392	; 0xd090
   18684:	movw	r5, #42750	; 0xa6fe
   18688:	movt	r7, #2
   1868c:	movt	r5, #1
   18690:	ldr	r3, [r7]
   18694:	mov	r0, r5
   18698:	mov	r1, #2
   1869c:	mov	r2, #1
   186a0:	bl	127d8 <fwrite@plt>
   186a4:	sub	r6, r6, #1
   186a8:	cmp	r6, #0
   186ac:	bgt	18690 <print_yaml_data@@Base+0xca8>
   186b0:	movw	r0, #53392	; 0xd090
   186b4:	add	r2, fp, #8
   186b8:	mov	r1, r4
   186bc:	movt	r0, #2
   186c0:	str	r2, [sp]
   186c4:	ldr	r0, [r0]
   186c8:	bl	129b8 <vfprintf@plt>
   186cc:	sub	sp, fp, #16
   186d0:	pop	{r4, r5, r6, r7, fp, lr}
   186d4:	add	sp, sp, #12
   186d8:	bx	lr
   186dc:	movw	r0, #42720	; 0xa6e0
   186e0:	movw	r1, #44262	; 0xace6
   186e4:	movw	r3, #42732	; 0xa6ec
   186e8:	mov	r2, #44	; 0x2c
   186ec:	movt	r0, #1
   186f0:	movt	r1, #1
   186f4:	movt	r3, #1
   186f8:	bl	12ab4 <__assert_fail@plt>
   186fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18700:	add	fp, sp, #28
   18704:	sub	sp, sp, #4
   18708:	cmp	r1, #1
   1870c:	blt	188d0 <print_yaml_data@@Base+0xee8>
   18710:	movw	r6, #42319	; 0xa54f
   18714:	movw	r8, #42322	; 0xa552
   18718:	movw	r9, #42328	; 0xa558
   1871c:	movw	sl, #42331	; 0xa55b
   18720:	movw	r7, #43971	; 0xabc3
   18724:	mov	r4, r1
   18728:	mov	r5, r0
   1872c:	movt	r6, #1
   18730:	movt	r8, #1
   18734:	movt	r9, #1
   18738:	movt	sl, #1
   1873c:	movt	r7, #1
   18740:	ldrb	r1, [r5]
   18744:	sub	r0, r1, #8
   18748:	cmp	r0, #26
   1874c:	bls	18778 <print_yaml_data@@Base+0xd90>
   18750:	b	18808 <print_yaml_data@@Base+0xe20>
   18754:	mov	r0, r7
   18758:	bl	18604 <print_yaml_data@@Base+0xc1c>
   1875c:	add	r5, r5, #1
   18760:	subs	r4, r4, #1
   18764:	beq	188d0 <print_yaml_data@@Base+0xee8>
   18768:	ldrb	r1, [r5]
   1876c:	sub	r0, r1, #8
   18770:	cmp	r0, #26
   18774:	bhi	18808 <print_yaml_data@@Base+0xe20>
   18778:	add	r2, pc, #0
   1877c:	ldr	pc, [r2, r0, lsl #2]
   18780:	andeq	r8, r1, ip, ror #15
   18784:	andeq	r8, r1, r8, asr r8
   18788:	andeq	r8, r1, r0, ror r8
   1878c:	andeq	r8, r1, ip, lsr #16
   18790:	andeq	r8, r1, r8, lsl #17
   18794:	andeq	r8, r1, r0, lsr #17
   18798:	andeq	r8, r1, ip, lsr #16
   1879c:	andeq	r8, r1, ip, lsr #16
   187a0:	andeq	r8, r1, ip, lsr #16
   187a4:	andeq	r8, r1, ip, lsr #16
   187a8:	andeq	r8, r1, ip, lsr #16
   187ac:	andeq	r8, r1, ip, lsr #16
   187b0:	andeq	r8, r1, ip, lsr #16
   187b4:	andeq	r8, r1, ip, lsr #16
   187b8:	andeq	r8, r1, ip, lsr #16
   187bc:	andeq	r8, r1, ip, lsr #16
   187c0:	andeq	r8, r1, ip, lsr #16
   187c4:	andeq	r8, r1, ip, lsr #16
   187c8:	andeq	r8, r1, ip, lsr #16
   187cc:	andeq	r8, r1, ip, lsr #16
   187d0:	andeq	r8, r1, ip, lsr #16
   187d4:	andeq	r8, r1, ip, lsr #16
   187d8:	andeq	r8, r1, ip, lsr #16
   187dc:	andeq	r8, r1, ip, lsr #16
   187e0:	andeq	r8, r1, ip, lsr #16
   187e4:	andeq	r8, r1, ip, lsr #16
   187e8:	andeq	r8, r1, r4, asr r7
   187ec:	movw	r0, #42316	; 0xa54c
   187f0:	movt	r0, #1
   187f4:	bl	18604 <print_yaml_data@@Base+0xc1c>
   187f8:	add	r5, r5, #1
   187fc:	subs	r4, r4, #1
   18800:	bne	18768 <print_yaml_data@@Base+0xd80>
   18804:	b	188d0 <print_yaml_data@@Base+0xee8>
   18808:	cmp	r1, #92	; 0x5c
   1880c:	bne	1882c <print_yaml_data@@Base+0xe44>
   18810:	movw	r0, #42334	; 0xa55e
   18814:	movt	r0, #1
   18818:	bl	18604 <print_yaml_data@@Base+0xc1c>
   1881c:	add	r5, r5, #1
   18820:	subs	r4, r4, #1
   18824:	bne	18768 <print_yaml_data@@Base+0xd80>
   18828:	b	188d0 <print_yaml_data@@Base+0xee8>
   1882c:	sub	r0, r1, #32
   18830:	uxtb	r0, r0
   18834:	cmp	r0, #94	; 0x5e
   18838:	bhi	188b8 <print_yaml_data@@Base+0xed0>
   1883c:	movw	r0, #42753	; 0xa701
   18840:	movt	r0, #1
   18844:	bl	18604 <print_yaml_data@@Base+0xc1c>
   18848:	add	r5, r5, #1
   1884c:	subs	r4, r4, #1
   18850:	bne	18768 <print_yaml_data@@Base+0xd80>
   18854:	b	188d0 <print_yaml_data@@Base+0xee8>
   18858:	mov	r0, r6
   1885c:	bl	18604 <print_yaml_data@@Base+0xc1c>
   18860:	add	r5, r5, #1
   18864:	subs	r4, r4, #1
   18868:	bne	18768 <print_yaml_data@@Base+0xd80>
   1886c:	b	188d0 <print_yaml_data@@Base+0xee8>
   18870:	mov	r0, r8
   18874:	bl	18604 <print_yaml_data@@Base+0xc1c>
   18878:	add	r5, r5, #1
   1887c:	subs	r4, r4, #1
   18880:	bne	18768 <print_yaml_data@@Base+0xd80>
   18884:	b	188d0 <print_yaml_data@@Base+0xee8>
   18888:	mov	r0, r9
   1888c:	bl	18604 <print_yaml_data@@Base+0xc1c>
   18890:	add	r5, r5, #1
   18894:	subs	r4, r4, #1
   18898:	bne	18768 <print_yaml_data@@Base+0xd80>
   1889c:	b	188d0 <print_yaml_data@@Base+0xee8>
   188a0:	mov	r0, sl
   188a4:	bl	18604 <print_yaml_data@@Base+0xc1c>
   188a8:	add	r5, r5, #1
   188ac:	subs	r4, r4, #1
   188b0:	bne	18768 <print_yaml_data@@Base+0xd80>
   188b4:	b	188d0 <print_yaml_data@@Base+0xee8>
   188b8:	movw	r0, #43974	; 0xabc6
   188bc:	movt	r0, #1
   188c0:	bl	18604 <print_yaml_data@@Base+0xc1c>
   188c4:	add	r5, r5, #1
   188c8:	subs	r4, r4, #1
   188cc:	bne	18768 <print_yaml_data@@Base+0xd80>
   188d0:	sub	sp, fp, #28
   188d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000188d8 <handle_coda_error@@Base>:
   188d8:	push	{fp, lr}
   188dc:	mov	fp, sp
   188e0:	movw	r5, #49584	; 0xc1b0
   188e4:	movt	r5, #2
   188e8:	ldr	r4, [r5]
   188ec:	bl	12a60 <coda_get_errno@plt>
   188f0:	ldr	r0, [r0]
   188f4:	bl	12a18 <coda_errno_to_string@plt>
   188f8:	movw	r1, #44342	; 0xad36
   188fc:	mov	r2, r0
   18900:	mov	r0, r4
   18904:	movt	r1, #1
   18908:	bl	128bc <fprintf@plt>
   1890c:	ldr	r0, [r5]
   18910:	bl	126c4 <fflush@plt>
   18914:	mov	r0, #1
   18918:	bl	12874 <exit@plt>

0001891c <main@@Base>:
   1891c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18920:	add	fp, sp, #28
   18924:	sub	sp, sp, #20
   18928:	cmp	r0, #1
   1892c:	beq	19c0c <main@@Base+0x12f0>
   18930:	ldr	r6, [r1, #4]
   18934:	mov	r9, r1
   18938:	movw	r1, #44353	; 0xad41
   1893c:	mov	sl, r0
   18940:	movt	r1, #1
   18944:	mov	r0, r6
   18948:	bl	12664 <strcmp@plt>
   1894c:	cmp	r0, #0
   18950:	beq	19c0c <main@@Base+0x12f0>
   18954:	movw	r1, #47950	; 0xbb4e
   18958:	mov	r0, r6
   1895c:	movt	r1, #1
   18960:	bl	12664 <strcmp@plt>
   18964:	cmp	r0, #0
   18968:	beq	19c0c <main@@Base+0x12f0>
   1896c:	movw	r1, #44356	; 0xad44
   18970:	mov	r0, r6
   18974:	movt	r1, #1
   18978:	bl	12664 <strcmp@plt>
   1897c:	cmp	r0, #0
   18980:	beq	19c18 <main@@Base+0x12fc>
   18984:	movw	r1, #48004	; 0xbb84
   18988:	mov	r0, r6
   1898c:	movt	r1, #1
   18990:	bl	12664 <strcmp@plt>
   18994:	cmp	r0, #0
   18998:	beq	19c18 <main@@Base+0x12fc>
   1899c:	cmp	sl, #3
   189a0:	blt	189bc <main@@Base+0xa0>
   189a4:	movw	r1, #44359	; 0xad47
   189a8:	mov	r0, r6
   189ac:	movt	r1, #1
   189b0:	bl	12664 <strcmp@plt>
   189b4:	cmp	r0, #0
   189b8:	beq	19548 <main@@Base+0xc2c>
   189bc:	ldr	r0, [r9]
   189c0:	movw	r2, #44362	; 0xad4a
   189c4:	mov	r1, #0
   189c8:	movt	r2, #1
   189cc:	bl	1270c <coda_set_definition_path_conditional@plt>
   189d0:	mov	r7, #1
   189d4:	cmp	r0, #0
   189d8:	bne	19c24 <main@@Base+0x1308>
   189dc:	ldr	r6, [r9, r7, lsl #2]
   189e0:	movw	r1, #44388	; 0xad64
   189e4:	movt	r1, #1
   189e8:	mov	r0, r6
   189ec:	bl	12664 <strcmp@plt>
   189f0:	cmp	r0, #0
   189f4:	beq	18d3c <main@@Base+0x420>
   189f8:	movw	r1, #44393	; 0xad69
   189fc:	mov	r0, r6
   18a00:	movt	r1, #1
   18a04:	bl	12664 <strcmp@plt>
   18a08:	cmp	r0, #0
   18a0c:	beq	190c4 <main@@Base+0x7a8>
   18a10:	movw	r1, #44399	; 0xad6f
   18a14:	mov	r0, r6
   18a18:	movt	r1, #1
   18a1c:	bl	12664 <strcmp@plt>
   18a20:	cmp	r0, #0
   18a24:	beq	195e8 <main@@Base+0xccc>
   18a28:	movw	r1, #44404	; 0xad74
   18a2c:	mov	r0, r6
   18a30:	movt	r1, #1
   18a34:	bl	12664 <strcmp@plt>
   18a38:	cmp	r0, #0
   18a3c:	beq	198e0 <main@@Base+0xfc4>
   18a40:	movw	r1, #47039	; 0xb7bf
   18a44:	mov	r0, r6
   18a48:	movt	r1, #1
   18a4c:	bl	12664 <strcmp@plt>
   18a50:	cmp	r0, #0
   18a54:	bne	19b5c <main@@Base+0x1240>
   18a58:	movw	r0, #49640	; 0xc1e8
   18a5c:	mov	r6, #0
   18a60:	mov	r1, #5
   18a64:	movt	r0, #2
   18a68:	str	r6, [r0]
   18a6c:	movw	r0, #53412	; 0xd0a4
   18a70:	movt	r0, #2
   18a74:	str	r1, [r0]
   18a78:	movw	r0, #49624	; 0xc1d8
   18a7c:	movw	r1, #53392	; 0xd090
   18a80:	movt	r0, #2
   18a84:	movt	r1, #2
   18a88:	str	r6, [r0]
   18a8c:	movw	r0, #53416	; 0xd0a8
   18a90:	movt	r0, #2
   18a94:	str	r6, [r0]
   18a98:	movw	r0, #49588	; 0xc1b4
   18a9c:	movt	r0, #2
   18aa0:	ldr	r0, [r0]
   18aa4:	str	r0, [r1]
   18aa8:	add	r0, r7, #1
   18aac:	sub	r4, sl, r0
   18ab0:	cmp	r4, #1
   18ab4:	blt	19b5c <main@@Base+0x1240>
   18ab8:	add	r7, r9, r0, lsl #2
   18abc:	sub	r0, r4, #1
   18ac0:	movw	r9, #44459	; 0xadab
   18ac4:	movw	r8, #47204	; 0xb864
   18ac8:	str	r0, [sp, #12]
   18acc:	mov	r0, #1
   18ad0:	movt	r9, #1
   18ad4:	movt	r8, #1
   18ad8:	str	r0, [sp, #16]
   18adc:	mov	r0, #0
   18ae0:	str	r0, [sp, #8]
   18ae4:	mov	r0, #0
   18ae8:	str	r0, [sp, #4]
   18aec:	mov	r0, #0
   18af0:	str	r0, [sp]
   18af4:	b	18b10 <main@@Base+0x1f4>
   18af8:	mov	r0, #0
   18afc:	mov	r5, r6
   18b00:	str	r0, [sp, #16]
   18b04:	add	r6, r5, #1
   18b08:	cmp	r6, r4
   18b0c:	bge	19558 <main@@Base+0xc3c>
   18b10:	ldr	sl, [r7, r6, lsl #2]
   18b14:	mov	r1, r9
   18b18:	mov	r0, sl
   18b1c:	bl	12664 <strcmp@plt>
   18b20:	cmp	r0, #0
   18b24:	beq	18af8 <main@@Base+0x1dc>
   18b28:	mov	r0, sl
   18b2c:	mov	r1, r8
   18b30:	bl	12664 <strcmp@plt>
   18b34:	cmp	r0, #0
   18b38:	beq	18af8 <main@@Base+0x1dc>
   18b3c:	movw	r1, #44527	; 0xadef
   18b40:	mov	r0, sl
   18b44:	movt	r1, #1
   18b48:	bl	12664 <strcmp@plt>
   18b4c:	cmp	r0, #0
   18b50:	beq	18b6c <main@@Base+0x250>
   18b54:	movw	r1, #44530	; 0xadf2
   18b58:	mov	r0, sl
   18b5c:	movt	r1, #1
   18b60:	bl	12664 <strcmp@plt>
   18b64:	cmp	r0, #0
   18b68:	bne	18b88 <main@@Base+0x26c>
   18b6c:	add	r5, r6, #1
   18b70:	cmp	r5, r4
   18b74:	bge	18b88 <main@@Base+0x26c>
   18b78:	ldr	r0, [r7, r5, lsl #2]
   18b7c:	ldrb	r1, [r0]
   18b80:	cmp	r1, #45	; 0x2d
   18b84:	bne	18cb8 <main@@Base+0x39c>
   18b88:	movw	r1, #44611	; 0xae43
   18b8c:	mov	r0, sl
   18b90:	movt	r1, #1
   18b94:	bl	12664 <strcmp@plt>
   18b98:	cmp	r0, #0
   18b9c:	beq	18bb8 <main@@Base+0x29c>
   18ba0:	movw	r1, #44614	; 0xae46
   18ba4:	mov	r0, sl
   18ba8:	movt	r1, #1
   18bac:	bl	12664 <strcmp@plt>
   18bb0:	cmp	r0, #0
   18bb4:	bne	18bd4 <main@@Base+0x2b8>
   18bb8:	add	r5, r6, #1
   18bbc:	cmp	r5, r4
   18bc0:	bge	18bd4 <main@@Base+0x2b8>
   18bc4:	ldr	r0, [r7, r5, lsl #2]
   18bc8:	ldrb	r1, [r0]
   18bcc:	cmp	r1, #45	; 0x2d
   18bd0:	bne	18cd4 <main@@Base+0x3b8>
   18bd4:	movw	r1, #44621	; 0xae4d
   18bd8:	mov	r0, sl
   18bdc:	movt	r1, #1
   18be0:	bl	12664 <strcmp@plt>
   18be4:	cmp	r0, #0
   18be8:	bne	18c08 <main@@Base+0x2ec>
   18bec:	add	r5, r6, #1
   18bf0:	cmp	r5, r4
   18bf4:	bge	18c08 <main@@Base+0x2ec>
   18bf8:	ldr	r0, [r7, r5, lsl #2]
   18bfc:	ldrb	r1, [r0]
   18c00:	cmp	r1, #45	; 0x2d
   18c04:	bne	18cf0 <main@@Base+0x3d4>
   18c08:	movw	r1, #44633	; 0xae59
   18c0c:	mov	r9, r7
   18c10:	ldr	r7, [sp, #12]
   18c14:	mov	r0, sl
   18c18:	mov	r8, r4
   18c1c:	movt	r1, #1
   18c20:	bl	12664 <strcmp@plt>
   18c24:	cmp	r0, #0
   18c28:	bne	18c6c <main@@Base+0x350>
   18c2c:	add	r5, r6, #3
   18c30:	cmp	r5, r8
   18c34:	bge	18c6c <main@@Base+0x350>
   18c38:	add	r0, r9, r6, lsl #2
   18c3c:	ldr	r4, [r0, #4]
   18c40:	ldrb	r1, [r4]
   18c44:	cmp	r1, #45	; 0x2d
   18c48:	beq	18c6c <main@@Base+0x350>
   18c4c:	ldr	r2, [r0, #8]
   18c50:	ldrb	r0, [r2]
   18c54:	cmp	r0, #45	; 0x2d
   18c58:	beq	18c6c <main@@Base+0x350>
   18c5c:	ldr	r0, [r9, r5, lsl #2]
   18c60:	ldrb	r1, [r0]
   18c64:	cmp	r1, #45	; 0x2d
   18c68:	bne	18d18 <main@@Base+0x3fc>
   18c6c:	cmp	r6, r7
   18c70:	bne	19b5c <main@@Base+0x1240>
   18c74:	ldrb	r0, [sl]
   18c78:	cmp	r0, #45	; 0x2d
   18c7c:	beq	19b5c <main@@Base+0x1240>
   18c80:	movw	r0, #49640	; 0xc1e8
   18c84:	mov	r5, r7
   18c88:	movt	r0, #2
   18c8c:	str	sl, [r0]
   18c90:	mov	r7, r9
   18c94:	movw	r9, #44459	; 0xadab
   18c98:	mov	r4, r8
   18c9c:	movw	r8, #47204	; 0xb864
   18ca0:	movt	r9, #1
   18ca4:	movt	r8, #1
   18ca8:	add	r6, r5, #1
   18cac:	cmp	r6, r4
   18cb0:	blt	18b10 <main@@Base+0x1f4>
   18cb4:	b	19558 <main@@Base+0xc3c>
   18cb8:	movw	r1, #49624	; 0xc1d8
   18cbc:	movt	r1, #2
   18cc0:	str	r0, [r1]
   18cc4:	add	r6, r5, #1
   18cc8:	cmp	r6, r4
   18ccc:	blt	18b10 <main@@Base+0x1f4>
   18cd0:	b	19558 <main@@Base+0xc3c>
   18cd4:	movw	r1, #53416	; 0xd0a8
   18cd8:	movt	r1, #2
   18cdc:	str	r0, [r1]
   18ce0:	add	r6, r5, #1
   18ce4:	cmp	r6, r4
   18ce8:	blt	18b10 <main@@Base+0x1f4>
   18cec:	b	19558 <main@@Base+0xc3c>
   18cf0:	mov	r1, #0
   18cf4:	mov	r2, #10
   18cf8:	bl	12670 <strtol@plt>
   18cfc:	movw	r1, #49580	; 0xc1ac
   18d00:	movt	r1, #2
   18d04:	str	r0, [r1]
   18d08:	add	r6, r5, #1
   18d0c:	cmp	r6, r4
   18d10:	blt	18b10 <main@@Base+0x1f4>
   18d14:	b	19558 <main@@Base+0xc3c>
   18d18:	mov	r6, r2
   18d1c:	mov	r1, #0
   18d20:	mov	r2, #10
   18d24:	bl	12670 <strtol@plt>
   18d28:	str	r0, [sp, #8]
   18d2c:	str	r4, [sp]
   18d30:	mov	r0, r6
   18d34:	str	r6, [sp, #4]
   18d38:	b	18c90 <main@@Base+0x374>
   18d3c:	movw	r0, #49640	; 0xc1e8
   18d40:	mov	r8, #0
   18d44:	mov	r5, #1
   18d48:	movw	r6, #49636	; 0xc1e4
   18d4c:	movt	r0, #2
   18d50:	movt	r6, #2
   18d54:	str	r8, [r0, #664]	; 0x298
   18d58:	str	r8, [r0]
   18d5c:	movw	r0, #53412	; 0xd0a4
   18d60:	str	r8, [r6]
   18d64:	movt	r0, #2
   18d68:	str	r8, [r0]
   18d6c:	movw	r0, #49616	; 0xc1d0
   18d70:	movt	r0, #2
   18d74:	str	r5, [r0]
   18d78:	movw	r0, #49620	; 0xc1d4
   18d7c:	movt	r0, #2
   18d80:	str	r8, [r0]
   18d84:	movw	r0, #53400	; 0xd098
   18d88:	movt	r0, #2
   18d8c:	str	r8, [r0]
   18d90:	movw	r0, #49632	; 0xc1e0
   18d94:	movt	r0, #2
   18d98:	str	r8, [r0]
   18d9c:	movw	r0, #53404	; 0xd09c
   18da0:	movt	r0, #2
   18da4:	str	r8, [r0]
   18da8:	add	r0, r7, #1
   18dac:	sub	r7, sl, r0
   18db0:	cmp	r7, #1
   18db4:	blt	19b5c <main@@Base+0x1240>
   18db8:	movw	r4, #44456	; 0xada8
   18dbc:	add	r9, r9, r0, lsl #2
   18dc0:	sub	r0, r7, #1
   18dc4:	str	r0, [sp, #8]
   18dc8:	movt	r4, #1
   18dcc:	mov	r0, #1
   18dd0:	str	r0, [sp, #16]
   18dd4:	mov	r0, #1
   18dd8:	str	r0, [sp, #12]
   18ddc:	b	18df0 <main@@Base+0x4d4>
   18de0:	str	r5, [r6]
   18de4:	add	r8, r8, #1
   18de8:	cmp	r8, r7
   18dec:	bge	1906c <main@@Base+0x750>
   18df0:	ldr	sl, [r9, r8, lsl #2]
   18df4:	mov	r1, r4
   18df8:	mov	r0, sl
   18dfc:	bl	12664 <strcmp@plt>
   18e00:	cmp	r0, #0
   18e04:	beq	18de0 <main@@Base+0x4c4>
   18e08:	movw	r1, #44780	; 0xaeec
   18e0c:	mov	r0, sl
   18e10:	movt	r1, #1
   18e14:	bl	12664 <strcmp@plt>
   18e18:	cmp	r0, #0
   18e1c:	beq	18de0 <main@@Base+0x4c4>
   18e20:	movw	r1, #44459	; 0xadab
   18e24:	mov	r0, sl
   18e28:	movt	r1, #1
   18e2c:	bl	12664 <strcmp@plt>
   18e30:	cmp	r0, #0
   18e34:	beq	18f90 <main@@Base+0x674>
   18e38:	movw	r1, #46600	; 0xb608
   18e3c:	mov	r0, sl
   18e40:	movt	r1, #1
   18e44:	bl	12664 <strcmp@plt>
   18e48:	cmp	r0, #0
   18e4c:	beq	18f90 <main@@Base+0x674>
   18e50:	movw	r1, #44462	; 0xadae
   18e54:	mov	r0, sl
   18e58:	mov	r4, r6
   18e5c:	movt	r1, #1
   18e60:	bl	12664 <strcmp@plt>
   18e64:	cmp	r0, #0
   18e68:	beq	18e84 <main@@Base+0x568>
   18e6c:	movw	r1, #44465	; 0xadb1
   18e70:	mov	r0, sl
   18e74:	movt	r1, #1
   18e78:	bl	12664 <strcmp@plt>
   18e7c:	cmp	r0, #0
   18e80:	bne	18ea0 <main@@Base+0x584>
   18e84:	add	r6, r8, #1
   18e88:	cmp	r6, r7
   18e8c:	bge	18ea0 <main@@Base+0x584>
   18e90:	ldr	r0, [r9, r6, lsl #2]
   18e94:	ldrb	r1, [r0]
   18e98:	cmp	r1, #45	; 0x2d
   18e9c:	bne	18fec <main@@Base+0x6d0>
   18ea0:	movw	r1, #44515	; 0xade3
   18ea4:	mov	r0, sl
   18ea8:	movt	r1, #1
   18eac:	bl	12664 <strcmp@plt>
   18eb0:	cmp	r0, #0
   18eb4:	beq	18fa8 <main@@Base+0x68c>
   18eb8:	movw	r1, #44862	; 0xaf3e
   18ebc:	mov	r0, sl
   18ec0:	movt	r1, #1
   18ec4:	bl	12664 <strcmp@plt>
   18ec8:	cmp	r0, #0
   18ecc:	beq	18fa8 <main@@Base+0x68c>
   18ed0:	movw	r1, #44518	; 0xade6
   18ed4:	mov	r0, sl
   18ed8:	movt	r1, #1
   18edc:	bl	12664 <strcmp@plt>
   18ee0:	cmp	r0, #0
   18ee4:	mov	r6, r4
   18ee8:	beq	18fc4 <main@@Base+0x6a8>
   18eec:	movw	r1, #44926	; 0xaf7e
   18ef0:	mov	r0, sl
   18ef4:	movt	r1, #1
   18ef8:	bl	12664 <strcmp@plt>
   18efc:	cmp	r0, #0
   18f00:	beq	18fc4 <main@@Base+0x6a8>
   18f04:	movw	r1, #44987	; 0xafbb
   18f08:	mov	r0, sl
   18f0c:	movt	r1, #1
   18f10:	bl	12664 <strcmp@plt>
   18f14:	movw	r4, #44456	; 0xada8
   18f18:	cmp	r0, #0
   18f1c:	mov	r5, #1
   18f20:	movt	r4, #1
   18f24:	beq	1901c <main@@Base+0x700>
   18f28:	movw	r1, #45062	; 0xb006
   18f2c:	mov	r0, sl
   18f30:	movt	r1, #1
   18f34:	bl	12664 <strcmp@plt>
   18f38:	cmp	r0, #0
   18f3c:	beq	19038 <main@@Base+0x71c>
   18f40:	movw	r1, #46692	; 0xb664
   18f44:	mov	r0, sl
   18f48:	movt	r1, #1
   18f4c:	bl	12664 <strcmp@plt>
   18f50:	cmp	r0, #0
   18f54:	beq	19058 <main@@Base+0x73c>
   18f58:	ldr	r0, [sp, #8]
   18f5c:	cmp	r8, r0
   18f60:	bne	19b5c <main@@Base+0x1240>
   18f64:	ldrb	r0, [sl]
   18f68:	cmp	r0, #45	; 0x2d
   18f6c:	beq	19b5c <main@@Base+0x1240>
   18f70:	ldr	r8, [sp, #8]
   18f74:	movw	r0, #49640	; 0xc1e8
   18f78:	movt	r0, #2
   18f7c:	str	sl, [r0]
   18f80:	add	r8, r8, #1
   18f84:	cmp	r8, r7
   18f88:	blt	18df0 <main@@Base+0x4d4>
   18f8c:	b	1906c <main@@Base+0x750>
   18f90:	mov	r0, #0
   18f94:	str	r0, [sp, #16]
   18f98:	add	r8, r8, #1
   18f9c:	cmp	r8, r7
   18fa0:	blt	18df0 <main@@Base+0x4d4>
   18fa4:	b	1906c <main@@Base+0x750>
   18fa8:	movw	r1, #53400	; 0xd098
   18fac:	mov	r0, #1
   18fb0:	mov	r6, r4
   18fb4:	mov	r5, #1
   18fb8:	movt	r1, #2
   18fbc:	str	r0, [r1]
   18fc0:	b	18fd4 <main@@Base+0x6b8>
   18fc4:	movw	r0, #49632	; 0xc1e0
   18fc8:	mov	r5, #1
   18fcc:	movt	r0, #2
   18fd0:	str	r5, [r0]
   18fd4:	movw	r4, #44456	; 0xada8
   18fd8:	movt	r4, #1
   18fdc:	add	r8, r8, #1
   18fe0:	cmp	r8, r7
   18fe4:	blt	18df0 <main@@Base+0x4d4>
   18fe8:	b	1906c <main@@Base+0x750>
   18fec:	bl	15cfc <codadump_filter_create@@Base>
   18ff0:	movw	r1, #49640	; 0xc1e8
   18ff4:	mov	r8, r6
   18ff8:	mov	r6, r4
   18ffc:	movw	r4, #44456	; 0xada8
   19000:	cmp	r0, #0
   19004:	mov	r5, #1
   19008:	movt	r1, #2
   1900c:	movt	r4, #1
   19010:	str	r0, [r1, #664]	; 0x298
   19014:	bne	18de4 <main@@Base+0x4c8>
   19018:	b	19c58 <main@@Base+0x133c>
   1901c:	movw	r0, #53404	; 0xd09c
   19020:	movt	r0, #2
   19024:	str	r5, [r0]
   19028:	add	r8, r8, #1
   1902c:	cmp	r8, r7
   19030:	blt	18df0 <main@@Base+0x4d4>
   19034:	b	1906c <main@@Base+0x750>
   19038:	movw	r0, #49620	; 0xc1d4
   1903c:	str	r5, [r6]
   19040:	movt	r0, #2
   19044:	str	r5, [r0]
   19048:	add	r8, r8, #1
   1904c:	cmp	r8, r7
   19050:	blt	18df0 <main@@Base+0x4d4>
   19054:	b	1906c <main@@Base+0x750>
   19058:	mov	r0, #0
   1905c:	str	r0, [sp, #12]
   19060:	add	r8, r8, #1
   19064:	cmp	r8, r7
   19068:	blt	18df0 <main@@Base+0x4d4>
   1906c:	movw	r0, #49640	; 0xc1e8
   19070:	movt	r0, #2
   19074:	ldr	r0, [r0]
   19078:	cmp	r0, #0
   1907c:	ldrbne	r0, [r0]
   19080:	cmpne	r0, #0
   19084:	beq	19b5c <main@@Base+0x1240>
   19088:	bl	128e0 <coda_init@plt>
   1908c:	cmp	r0, #0
   19090:	bne	19c24 <main@@Base+0x1308>
   19094:	ldr	r0, [sp, #12]
   19098:	clz	r0, r0
   1909c:	lsr	r0, r0, #5
   190a0:	bl	12724 <coda_set_option_bypass_special_types@plt>
   190a4:	mov	r0, #0
   190a8:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   190ac:	ldr	r0, [sp, #16]
   190b0:	bl	128ec <coda_set_option_perform_conversions@plt>
   190b4:	bl	17220 <traverse_info_init@@Base>
   190b8:	bl	14858 <dim_info_init@@Base>
   190bc:	bl	17278 <traverse_product@@Base>
   190c0:	b	19530 <main@@Base+0xc14>
   190c4:	movw	r0, #49640	; 0xc1e8
   190c8:	mov	r6, #0
   190cc:	mov	r1, #1
   190d0:	movw	r2, #53396	; 0xd094
   190d4:	movt	r0, #2
   190d8:	movt	r2, #2
   190dc:	str	r6, [r0, #664]	; 0x298
   190e0:	str	r6, [r0]
   190e4:	movw	r0, #53412	; 0xd0a4
   190e8:	movt	r0, #2
   190ec:	str	r1, [r0]
   190f0:	movw	r0, #49624	; 0xc1d8
   190f4:	movt	r0, #2
   190f8:	str	r6, [r0]
   190fc:	movw	r0, #42751	; 0xa6ff
   19100:	movt	r0, #1
   19104:	str	r0, [r2]
   19108:	movw	r0, #49616	; 0xc1d0
   1910c:	movt	r0, #2
   19110:	str	r1, [r0]
   19114:	movw	r0, #49636	; 0xc1e4
   19118:	movt	r0, #2
   1911c:	str	r1, [r0]
   19120:	movw	r0, #53408	; 0xd0a0
   19124:	movw	r1, #53392	; 0xd090
   19128:	movt	r0, #2
   1912c:	movt	r1, #2
   19130:	str	r6, [r0]
   19134:	movw	r0, #53792	; 0xd220
   19138:	movt	r0, #2
   1913c:	str	r6, [r0]
   19140:	movw	r0, #53796	; 0xd224
   19144:	movt	r0, #2
   19148:	str	r6, [r0]
   1914c:	movw	r0, #49628	; 0xc1dc
   19150:	movt	r0, #2
   19154:	str	r6, [r0]
   19158:	movw	r0, #49588	; 0xc1b4
   1915c:	movt	r0, #2
   19160:	ldr	r0, [r0]
   19164:	str	r0, [r1]
   19168:	add	r0, r7, #1
   1916c:	sub	r8, sl, r0
   19170:	cmp	r8, #1
   19174:	blt	19b5c <main@@Base+0x1240>
   19178:	movw	r5, #44459	; 0xadab
   1917c:	add	sl, r9, r0, lsl #2
   19180:	sub	r0, r8, #1
   19184:	mov	r4, #1
   19188:	movt	r5, #1
   1918c:	str	r0, [sp, #12]
   19190:	mov	r0, #1
   19194:	str	r0, [sp, #16]
   19198:	b	191b0 <main@@Base+0x894>
   1919c:	mov	r4, #0
   191a0:	mov	r7, r6
   191a4:	add	r6, r7, #1
   191a8:	cmp	r6, r8
   191ac:	bge	19494 <main@@Base+0xb78>
   191b0:	ldr	r9, [sl, r6, lsl #2]
   191b4:	mov	r1, r5
   191b8:	mov	r0, r9
   191bc:	bl	12664 <strcmp@plt>
   191c0:	cmp	r0, #0
   191c4:	beq	1919c <main@@Base+0x880>
   191c8:	movw	r1, #46600	; 0xb608
   191cc:	mov	r0, r9
   191d0:	movt	r1, #1
   191d4:	bl	12664 <strcmp@plt>
   191d8:	cmp	r0, #0
   191dc:	beq	1919c <main@@Base+0x880>
   191e0:	movw	r1, #44462	; 0xadae
   191e4:	mov	r0, r9
   191e8:	movt	r1, #1
   191ec:	bl	12664 <strcmp@plt>
   191f0:	cmp	r0, #0
   191f4:	beq	19210 <main@@Base+0x8f4>
   191f8:	movw	r1, #44465	; 0xadb1
   191fc:	mov	r0, r9
   19200:	movt	r1, #1
   19204:	bl	12664 <strcmp@plt>
   19208:	cmp	r0, #0
   1920c:	bne	1922c <main@@Base+0x910>
   19210:	add	r7, r6, #1
   19214:	cmp	r7, r8
   19218:	bge	1922c <main@@Base+0x910>
   1921c:	ldr	r0, [sl, r7, lsl #2]
   19220:	ldrb	r1, [r0]
   19224:	cmp	r1, #45	; 0x2d
   19228:	bne	193f4 <main@@Base+0xad8>
   1922c:	movw	r1, #44521	; 0xade9
   19230:	mov	r0, r9
   19234:	movt	r1, #1
   19238:	bl	12664 <strcmp@plt>
   1923c:	cmp	r0, #0
   19240:	beq	193d4 <main@@Base+0xab8>
   19244:	movw	r1, #45475	; 0xb1a3
   19248:	mov	r0, r9
   1924c:	movt	r1, #1
   19250:	bl	12664 <strcmp@plt>
   19254:	cmp	r0, #0
   19258:	beq	193d4 <main@@Base+0xab8>
   1925c:	movw	r1, #44524	; 0xadec
   19260:	mov	r0, r9
   19264:	movt	r1, #1
   19268:	bl	12664 <strcmp@plt>
   1926c:	cmp	r0, #0
   19270:	beq	193e4 <main@@Base+0xac8>
   19274:	movw	r1, #45564	; 0xb1fc
   19278:	mov	r0, r9
   1927c:	movt	r1, #1
   19280:	bl	12664 <strcmp@plt>
   19284:	cmp	r0, #0
   19288:	beq	193e4 <main@@Base+0xac8>
   1928c:	movw	r1, #44527	; 0xadef
   19290:	mov	r0, r9
   19294:	movt	r1, #1
   19298:	bl	12664 <strcmp@plt>
   1929c:	cmp	r0, #0
   192a0:	beq	192bc <main@@Base+0x9a0>
   192a4:	movw	r1, #44530	; 0xadf2
   192a8:	mov	r0, r9
   192ac:	movt	r1, #1
   192b0:	bl	12664 <strcmp@plt>
   192b4:	cmp	r0, #0
   192b8:	bne	192d8 <main@@Base+0x9bc>
   192bc:	add	r7, r6, #1
   192c0:	cmp	r7, r8
   192c4:	bge	192d8 <main@@Base+0x9bc>
   192c8:	ldr	r0, [sl, r7, lsl #2]
   192cc:	ldrb	r1, [r0]
   192d0:	cmp	r1, #45	; 0x2d
   192d4:	bne	19444 <main@@Base+0xb28>
   192d8:	movw	r1, #44539	; 0xadfb
   192dc:	mov	r0, r9
   192e0:	movt	r1, #1
   192e4:	bl	12664 <strcmp@plt>
   192e8:	cmp	r0, #0
   192ec:	beq	19410 <main@@Base+0xaf4>
   192f0:	movw	r1, #45663	; 0xb25f
   192f4:	mov	r0, r9
   192f8:	movt	r1, #1
   192fc:	bl	12664 <strcmp@plt>
   19300:	cmp	r0, #0
   19304:	beq	19410 <main@@Base+0xaf4>
   19308:	movw	r1, #44542	; 0xadfe
   1930c:	mov	r0, r9
   19310:	movt	r1, #1
   19314:	bl	12664 <strcmp@plt>
   19318:	cmp	r0, #0
   1931c:	beq	19338 <main@@Base+0xa1c>
   19320:	movw	r1, #44545	; 0xae01
   19324:	mov	r0, r9
   19328:	movt	r1, #1
   1932c:	bl	12664 <strcmp@plt>
   19330:	cmp	r0, #0
   19334:	bne	19354 <main@@Base+0xa38>
   19338:	add	r7, r6, #1
   1933c:	cmp	r7, r8
   19340:	bge	19354 <main@@Base+0xa38>
   19344:	ldr	r0, [sl, r7, lsl #2]
   19348:	ldrb	r1, [r0]
   1934c:	cmp	r1, #45	; 0x2d
   19350:	bne	19460 <main@@Base+0xb44>
   19354:	movw	r1, #44515	; 0xade3
   19358:	mov	r0, r9
   1935c:	movt	r1, #1
   19360:	bl	12664 <strcmp@plt>
   19364:	cmp	r0, #0
   19368:	beq	19420 <main@@Base+0xb04>
   1936c:	movw	r1, #45902	; 0xb34e
   19370:	mov	r0, r9
   19374:	movt	r1, #1
   19378:	bl	12664 <strcmp@plt>
   1937c:	cmp	r0, #0
   19380:	beq	19420 <main@@Base+0xb04>
   19384:	movw	r1, #46692	; 0xb664
   19388:	mov	r0, r9
   1938c:	movt	r1, #1
   19390:	bl	12664 <strcmp@plt>
   19394:	cmp	r0, #0
   19398:	beq	1947c <main@@Base+0xb60>
   1939c:	ldr	r0, [sp, #12]
   193a0:	cmp	r6, r0
   193a4:	bne	19b5c <main@@Base+0x1240>
   193a8:	ldrb	r0, [r9]
   193ac:	cmp	r0, #45	; 0x2d
   193b0:	beq	19b5c <main@@Base+0x1240>
   193b4:	ldr	r7, [sp, #12]
   193b8:	movw	r0, #49640	; 0xc1e8
   193bc:	movt	r0, #2
   193c0:	str	r9, [r0]
   193c4:	add	r6, r7, #1
   193c8:	cmp	r6, r8
   193cc:	blt	191b0 <main@@Base+0x894>
   193d0:	b	19494 <main@@Base+0xb78>
   193d4:	movw	r1, #53408	; 0xd0a0
   193d8:	mov	r0, #1
   193dc:	movt	r1, #2
   193e0:	b	1942c <main@@Base+0xb10>
   193e4:	movw	r1, #53792	; 0xd220
   193e8:	mov	r0, #1
   193ec:	movt	r1, #2
   193f0:	b	1942c <main@@Base+0xb10>
   193f4:	bl	15cfc <codadump_filter_create@@Base>
   193f8:	movw	r1, #49640	; 0xc1e8
   193fc:	cmp	r0, #0
   19400:	movt	r1, #2
   19404:	str	r0, [r1, #664]	; 0x298
   19408:	bne	191a4 <main@@Base+0x888>
   1940c:	b	19c58 <main@@Base+0x133c>
   19410:	movw	r1, #53796	; 0xd224
   19414:	mov	r0, #1
   19418:	movt	r1, #2
   1941c:	b	1942c <main@@Base+0xb10>
   19420:	movw	r1, #49628	; 0xc1dc
   19424:	mov	r0, #1
   19428:	movt	r1, #2
   1942c:	str	r0, [r1]
   19430:	mov	r7, r6
   19434:	add	r6, r7, #1
   19438:	cmp	r6, r8
   1943c:	blt	191b0 <main@@Base+0x894>
   19440:	b	19494 <main@@Base+0xb78>
   19444:	movw	r1, #49624	; 0xc1d8
   19448:	movt	r1, #2
   1944c:	str	r0, [r1]
   19450:	add	r6, r7, #1
   19454:	cmp	r6, r8
   19458:	blt	191b0 <main@@Base+0x894>
   1945c:	b	19494 <main@@Base+0xb78>
   19460:	movw	r1, #53396	; 0xd094
   19464:	movt	r1, #2
   19468:	str	r0, [r1]
   1946c:	add	r6, r7, #1
   19470:	cmp	r6, r8
   19474:	blt	191b0 <main@@Base+0x894>
   19478:	b	19494 <main@@Base+0xb78>
   1947c:	mov	r0, #0
   19480:	mov	r7, r6
   19484:	str	r0, [sp, #16]
   19488:	add	r6, r7, #1
   1948c:	cmp	r6, r8
   19490:	blt	191b0 <main@@Base+0x894>
   19494:	movw	r0, #49640	; 0xc1e8
   19498:	movt	r0, #2
   1949c:	ldr	r0, [r0]
   194a0:	cmp	r0, #0
   194a4:	ldrbne	r0, [r0]
   194a8:	cmpne	r0, #0
   194ac:	beq	19b5c <main@@Base+0x1240>
   194b0:	bl	128e0 <coda_init@plt>
   194b4:	cmp	r0, #0
   194b8:	bne	19c24 <main@@Base+0x1308>
   194bc:	ldr	r0, [sp, #16]
   194c0:	clz	r0, r0
   194c4:	lsr	r0, r0, #5
   194c8:	bl	12724 <coda_set_option_bypass_special_types@plt>
   194cc:	mov	r0, #0
   194d0:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   194d4:	mov	r0, r4
   194d8:	bl	128ec <coda_set_option_perform_conversions@plt>
   194dc:	bl	17220 <traverse_info_init@@Base>
   194e0:	bl	14858 <dim_info_init@@Base>
   194e4:	movw	r4, #49624	; 0xc1d8
   194e8:	movw	r5, #53392	; 0xd090
   194ec:	movt	r4, #2
   194f0:	movt	r5, #2
   194f4:	ldr	r0, [r4]
   194f8:	cmp	r0, #0
   194fc:	beq	19518 <main@@Base+0xbfc>
   19500:	movw	r1, #44564	; 0xae14
   19504:	movt	r1, #1
   19508:	bl	126a0 <fopen@plt>
   1950c:	cmp	r0, #0
   19510:	str	r0, [r5]
   19514:	beq	19c74 <main@@Base+0x1358>
   19518:	bl	17278 <traverse_product@@Base>
   1951c:	ldr	r0, [r4]
   19520:	cmp	r0, #0
   19524:	beq	19530 <main@@Base+0xc14>
   19528:	ldr	r0, [r5]
   1952c:	bl	12964 <fclose@plt>
   19530:	bl	14878 <dim_info_done@@Base>
   19534:	bl	17240 <traverse_info_done@@Base>
   19538:	bl	12808 <coda_done@plt>
   1953c:	mov	r0, #0
   19540:	sub	sp, fp, #28
   19544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19548:	ldr	r0, [r9, #8]
   1954c:	bl	12790 <coda_set_definition_path@plt>
   19550:	mov	r7, #3
   19554:	b	189dc <main@@Base+0xc0>
   19558:	movw	r0, #49640	; 0xc1e8
   1955c:	movt	r0, #2
   19560:	ldr	r0, [r0]
   19564:	cmp	r0, #0
   19568:	ldrbne	r0, [r0]
   1956c:	cmpne	r0, #0
   19570:	beq	19b5c <main@@Base+0x1240>
   19574:	bl	128e0 <coda_init@plt>
   19578:	cmp	r0, #0
   1957c:	bne	19c24 <main@@Base+0x1308>
   19580:	mov	r0, #0
   19584:	bl	128ec <coda_set_option_perform_conversions@plt>
   19588:	ldr	r0, [sp, #16]
   1958c:	bl	12634 <coda_set_option_use_fast_size_expressions@plt>
   19590:	movw	r0, #49624	; 0xc1d8
   19594:	movw	r4, #53392	; 0xd090
   19598:	movt	r0, #2
   1959c:	movt	r4, #2
   195a0:	ldr	r0, [r0]
   195a4:	cmp	r0, #0
   195a8:	beq	195c4 <main@@Base+0xca8>
   195ac:	movw	r1, #44564	; 0xae14
   195b0:	movt	r1, #1
   195b4:	bl	126a0 <fopen@plt>
   195b8:	cmp	r0, #0
   195bc:	str	r0, [r4]
   195c0:	beq	19c84 <main@@Base+0x1368>
   195c4:	ldm	sp, {r0, r1, r2}
   195c8:	bl	13764 <print_debug_data@@Base>
   195cc:	movw	r0, #49624	; 0xc1d8
   195d0:	movt	r0, #2
   195d4:	ldr	r0, [r0]
   195d8:	cmp	r0, #0
   195dc:	beq	198d0 <main@@Base+0xfb4>
   195e0:	ldr	r0, [r4]
   195e4:	b	19bf8 <main@@Base+0x12dc>
   195e8:	movw	r0, #49640	; 0xc1e8
   195ec:	mov	r2, #0
   195f0:	mov	r1, #3
   195f4:	movt	r0, #2
   195f8:	str	r2, [r0]
   195fc:	movw	r0, #53412	; 0xd0a4
   19600:	movt	r0, #2
   19604:	str	r1, [r0]
   19608:	movw	r0, #49624	; 0xc1d8
   1960c:	movw	r1, #53392	; 0xd090
   19610:	movt	r0, #2
   19614:	movt	r1, #2
   19618:	str	r2, [r0]
   1961c:	movw	r0, #53416	; 0xd0a8
   19620:	movt	r0, #2
   19624:	str	r2, [r0]
   19628:	movw	r0, #49588	; 0xc1b4
   1962c:	movt	r0, #2
   19630:	ldr	r0, [r0]
   19634:	str	r0, [r1]
   19638:	add	r0, r7, #1
   1963c:	sub	r8, sl, r0
   19640:	cmp	r8, #1
   19644:	blt	19b5c <main@@Base+0x1240>
   19648:	movw	r6, #44608	; 0xae40
   1964c:	movw	r7, #46393	; 0xb539
   19650:	add	r9, r9, r0, lsl #2
   19654:	sub	r0, r8, #1
   19658:	mov	r1, #0
   1965c:	mov	r5, #0
   19660:	mov	r4, #0
   19664:	str	r0, [sp, #12]
   19668:	mov	r0, #1
   1966c:	movt	r6, #1
   19670:	movt	r7, #1
   19674:	str	r1, [sp, #8]
   19678:	str	r0, [sp, #16]
   1967c:	mov	r0, #1
   19680:	str	r0, [sp, #4]
   19684:	b	1969c <main@@Base+0xd80>
   19688:	mov	r4, #1
   1968c:	mov	r0, r5
   19690:	add	r5, r0, #1
   19694:	cmp	r5, r8
   19698:	bge	19850 <main@@Base+0xf34>
   1969c:	ldr	sl, [r9, r5, lsl #2]
   196a0:	mov	r1, r6
   196a4:	mov	r0, sl
   196a8:	bl	12664 <strcmp@plt>
   196ac:	cmp	r0, #0
   196b0:	beq	19688 <main@@Base+0xd6c>
   196b4:	mov	r0, sl
   196b8:	mov	r1, r7
   196bc:	bl	12664 <strcmp@plt>
   196c0:	cmp	r0, #0
   196c4:	beq	19688 <main@@Base+0xd6c>
   196c8:	movw	r1, #44459	; 0xadab
   196cc:	mov	r0, sl
   196d0:	movt	r1, #1
   196d4:	bl	12664 <strcmp@plt>
   196d8:	cmp	r0, #0
   196dc:	beq	197e4 <main@@Base+0xec8>
   196e0:	movw	r1, #46600	; 0xb608
   196e4:	mov	r0, sl
   196e8:	movt	r1, #1
   196ec:	bl	12664 <strcmp@plt>
   196f0:	cmp	r0, #0
   196f4:	beq	197e4 <main@@Base+0xec8>
   196f8:	movw	r1, #44527	; 0xadef
   196fc:	mov	r0, sl
   19700:	movt	r1, #1
   19704:	bl	12664 <strcmp@plt>
   19708:	cmp	r0, #0
   1970c:	beq	19728 <main@@Base+0xe0c>
   19710:	movw	r1, #44530	; 0xadf2
   19714:	mov	r0, sl
   19718:	movt	r1, #1
   1971c:	bl	12664 <strcmp@plt>
   19720:	cmp	r0, #0
   19724:	bne	19744 <main@@Base+0xe28>
   19728:	add	r0, r5, #1
   1972c:	cmp	r0, r8
   19730:	bge	19744 <main@@Base+0xe28>
   19734:	ldr	r1, [r9, r0, lsl #2]
   19738:	ldrb	r2, [r1]
   1973c:	cmp	r2, #45	; 0x2d
   19740:	bne	1981c <main@@Base+0xf00>
   19744:	movw	r1, #44611	; 0xae43
   19748:	mov	r0, sl
   1974c:	movt	r1, #1
   19750:	bl	12664 <strcmp@plt>
   19754:	cmp	r0, #0
   19758:	beq	19774 <main@@Base+0xe58>
   1975c:	movw	r1, #44614	; 0xae46
   19760:	mov	r0, sl
   19764:	movt	r1, #1
   19768:	bl	12664 <strcmp@plt>
   1976c:	cmp	r0, #0
   19770:	bne	19790 <main@@Base+0xe74>
   19774:	add	r0, r5, #1
   19778:	cmp	r0, r8
   1977c:	bge	19790 <main@@Base+0xe74>
   19780:	ldr	r1, [r9, r0, lsl #2]
   19784:	ldrb	r2, [r1]
   19788:	cmp	r2, #45	; 0x2d
   1978c:	bne	19838 <main@@Base+0xf1c>
   19790:	movw	r1, #46692	; 0xb664
   19794:	mov	r0, sl
   19798:	movt	r1, #1
   1979c:	bl	12664 <strcmp@plt>
   197a0:	cmp	r0, #0
   197a4:	beq	19800 <main@@Base+0xee4>
   197a8:	ldr	r0, [sp, #12]
   197ac:	cmp	r5, r0
   197b0:	bne	19b5c <main@@Base+0x1240>
   197b4:	ldrb	r0, [sl]
   197b8:	cmp	r0, #45	; 0x2d
   197bc:	beq	19b5c <main@@Base+0x1240>
   197c0:	movw	r0, #49640	; 0xc1e8
   197c4:	str	sl, [sp, #8]
   197c8:	movt	r0, #2
   197cc:	str	sl, [r0]
   197d0:	ldr	r0, [sp, #12]
   197d4:	add	r5, r0, #1
   197d8:	cmp	r5, r8
   197dc:	blt	1969c <main@@Base+0xd80>
   197e0:	b	19850 <main@@Base+0xf34>
   197e4:	mov	r0, #0
   197e8:	str	r0, [sp, #16]
   197ec:	mov	r0, r5
   197f0:	add	r5, r0, #1
   197f4:	cmp	r5, r8
   197f8:	blt	1969c <main@@Base+0xd80>
   197fc:	b	19850 <main@@Base+0xf34>
   19800:	mov	r0, #0
   19804:	str	r0, [sp, #4]
   19808:	mov	r0, r5
   1980c:	add	r5, r0, #1
   19810:	cmp	r5, r8
   19814:	blt	1969c <main@@Base+0xd80>
   19818:	b	19850 <main@@Base+0xf34>
   1981c:	movw	r2, #49624	; 0xc1d8
   19820:	movt	r2, #2
   19824:	str	r1, [r2]
   19828:	add	r5, r0, #1
   1982c:	cmp	r5, r8
   19830:	blt	1969c <main@@Base+0xd80>
   19834:	b	19850 <main@@Base+0xf34>
   19838:	movw	r2, #53416	; 0xd0a8
   1983c:	movt	r2, #2
   19840:	str	r1, [r2]
   19844:	add	r5, r0, #1
   19848:	cmp	r5, r8
   1984c:	blt	1969c <main@@Base+0xd80>
   19850:	ldr	r0, [sp, #8]
   19854:	cmp	r0, #0
   19858:	ldrbne	r0, [r0]
   1985c:	cmpne	r0, #0
   19860:	beq	19b5c <main@@Base+0x1240>
   19864:	bl	128e0 <coda_init@plt>
   19868:	cmp	r0, #0
   1986c:	bne	19c24 <main@@Base+0x1308>
   19870:	ldr	r0, [sp, #4]
   19874:	clz	r0, r0
   19878:	lsr	r0, r0, #5
   1987c:	bl	12724 <coda_set_option_bypass_special_types@plt>
   19880:	ldr	r0, [sp, #16]
   19884:	bl	128ec <coda_set_option_perform_conversions@plt>
   19888:	movw	r5, #49624	; 0xc1d8
   1988c:	movw	r6, #53392	; 0xd090
   19890:	movt	r5, #2
   19894:	movt	r6, #2
   19898:	ldr	r0, [r5]
   1989c:	cmp	r0, #0
   198a0:	beq	198bc <main@@Base+0xfa0>
   198a4:	movw	r1, #44564	; 0xae14
   198a8:	movt	r1, #1
   198ac:	bl	126a0 <fopen@plt>
   198b0:	cmp	r0, #0
   198b4:	str	r0, [r6]
   198b8:	beq	19c7c <main@@Base+0x1360>
   198bc:	mov	r0, r4
   198c0:	bl	1624c <print_json_data@@Base>
   198c4:	ldr	r0, [r5]
   198c8:	cmp	r0, #0
   198cc:	bne	19bf4 <main@@Base+0x12d8>
   198d0:	bl	12808 <coda_done@plt>
   198d4:	mov	r0, #0
   198d8:	sub	sp, fp, #28
   198dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198e0:	movw	r0, #49640	; 0xc1e8
   198e4:	mov	r2, #0
   198e8:	mov	r1, #4
   198ec:	movt	r0, #2
   198f0:	str	r2, [r0]
   198f4:	movw	r0, #53412	; 0xd0a4
   198f8:	movt	r0, #2
   198fc:	str	r1, [r0]
   19900:	movw	r0, #49624	; 0xc1d8
   19904:	movw	r1, #53392	; 0xd090
   19908:	movt	r0, #2
   1990c:	movt	r1, #2
   19910:	str	r2, [r0]
   19914:	movw	r0, #53416	; 0xd0a8
   19918:	movt	r0, #2
   1991c:	str	r2, [r0]
   19920:	movw	r0, #49588	; 0xc1b4
   19924:	movt	r0, #2
   19928:	ldr	r0, [r0]
   1992c:	str	r0, [r1]
   19930:	add	r0, r7, #1
   19934:	sub	r8, sl, r0
   19938:	cmp	r8, #1
   1993c:	blt	19b5c <main@@Base+0x1240>
   19940:	movw	r6, #44608	; 0xae40
   19944:	movw	r7, #46393	; 0xb539
   19948:	add	r9, r9, r0, lsl #2
   1994c:	sub	r0, r8, #1
   19950:	mov	r1, #0
   19954:	mov	r5, #0
   19958:	mov	r4, #0
   1995c:	str	r0, [sp, #12]
   19960:	mov	r0, #1
   19964:	movt	r6, #1
   19968:	movt	r7, #1
   1996c:	str	r1, [sp, #8]
   19970:	str	r0, [sp, #16]
   19974:	mov	r0, #1
   19978:	str	r0, [sp, #4]
   1997c:	b	19994 <main@@Base+0x1078>
   19980:	mov	r4, #1
   19984:	mov	r0, r5
   19988:	add	r5, r0, #1
   1998c:	cmp	r5, r8
   19990:	bge	19b48 <main@@Base+0x122c>
   19994:	ldr	sl, [r9, r5, lsl #2]
   19998:	mov	r1, r6
   1999c:	mov	r0, sl
   199a0:	bl	12664 <strcmp@plt>
   199a4:	cmp	r0, #0
   199a8:	beq	19980 <main@@Base+0x1064>
   199ac:	mov	r0, sl
   199b0:	mov	r1, r7
   199b4:	bl	12664 <strcmp@plt>
   199b8:	cmp	r0, #0
   199bc:	beq	19980 <main@@Base+0x1064>
   199c0:	movw	r1, #44459	; 0xadab
   199c4:	mov	r0, sl
   199c8:	movt	r1, #1
   199cc:	bl	12664 <strcmp@plt>
   199d0:	cmp	r0, #0
   199d4:	beq	19adc <main@@Base+0x11c0>
   199d8:	movw	r1, #46600	; 0xb608
   199dc:	mov	r0, sl
   199e0:	movt	r1, #1
   199e4:	bl	12664 <strcmp@plt>
   199e8:	cmp	r0, #0
   199ec:	beq	19adc <main@@Base+0x11c0>
   199f0:	movw	r1, #44527	; 0xadef
   199f4:	mov	r0, sl
   199f8:	movt	r1, #1
   199fc:	bl	12664 <strcmp@plt>
   19a00:	cmp	r0, #0
   19a04:	beq	19a20 <main@@Base+0x1104>
   19a08:	movw	r1, #44530	; 0xadf2
   19a0c:	mov	r0, sl
   19a10:	movt	r1, #1
   19a14:	bl	12664 <strcmp@plt>
   19a18:	cmp	r0, #0
   19a1c:	bne	19a3c <main@@Base+0x1120>
   19a20:	add	r0, r5, #1
   19a24:	cmp	r0, r8
   19a28:	bge	19a3c <main@@Base+0x1120>
   19a2c:	ldr	r1, [r9, r0, lsl #2]
   19a30:	ldrb	r2, [r1]
   19a34:	cmp	r2, #45	; 0x2d
   19a38:	bne	19b14 <main@@Base+0x11f8>
   19a3c:	movw	r1, #44611	; 0xae43
   19a40:	mov	r0, sl
   19a44:	movt	r1, #1
   19a48:	bl	12664 <strcmp@plt>
   19a4c:	cmp	r0, #0
   19a50:	beq	19a6c <main@@Base+0x1150>
   19a54:	movw	r1, #44614	; 0xae46
   19a58:	mov	r0, sl
   19a5c:	movt	r1, #1
   19a60:	bl	12664 <strcmp@plt>
   19a64:	cmp	r0, #0
   19a68:	bne	19a88 <main@@Base+0x116c>
   19a6c:	add	r0, r5, #1
   19a70:	cmp	r0, r8
   19a74:	bge	19a88 <main@@Base+0x116c>
   19a78:	ldr	r1, [r9, r0, lsl #2]
   19a7c:	ldrb	r2, [r1]
   19a80:	cmp	r2, #45	; 0x2d
   19a84:	bne	19b30 <main@@Base+0x1214>
   19a88:	movw	r1, #46692	; 0xb664
   19a8c:	mov	r0, sl
   19a90:	movt	r1, #1
   19a94:	bl	12664 <strcmp@plt>
   19a98:	cmp	r0, #0
   19a9c:	beq	19af8 <main@@Base+0x11dc>
   19aa0:	ldr	r0, [sp, #12]
   19aa4:	cmp	r5, r0
   19aa8:	bne	19b5c <main@@Base+0x1240>
   19aac:	ldrb	r0, [sl]
   19ab0:	cmp	r0, #45	; 0x2d
   19ab4:	beq	19b5c <main@@Base+0x1240>
   19ab8:	movw	r0, #49640	; 0xc1e8
   19abc:	str	sl, [sp, #8]
   19ac0:	movt	r0, #2
   19ac4:	str	sl, [r0]
   19ac8:	ldr	r0, [sp, #12]
   19acc:	add	r5, r0, #1
   19ad0:	cmp	r5, r8
   19ad4:	blt	19994 <main@@Base+0x1078>
   19ad8:	b	19b48 <main@@Base+0x122c>
   19adc:	mov	r0, #0
   19ae0:	str	r0, [sp, #16]
   19ae4:	mov	r0, r5
   19ae8:	add	r5, r0, #1
   19aec:	cmp	r5, r8
   19af0:	blt	19994 <main@@Base+0x1078>
   19af4:	b	19b48 <main@@Base+0x122c>
   19af8:	mov	r0, #0
   19afc:	str	r0, [sp, #4]
   19b00:	mov	r0, r5
   19b04:	add	r5, r0, #1
   19b08:	cmp	r5, r8
   19b0c:	blt	19994 <main@@Base+0x1078>
   19b10:	b	19b48 <main@@Base+0x122c>
   19b14:	movw	r2, #49624	; 0xc1d8
   19b18:	movt	r2, #2
   19b1c:	str	r1, [r2]
   19b20:	add	r5, r0, #1
   19b24:	cmp	r5, r8
   19b28:	blt	19994 <main@@Base+0x1078>
   19b2c:	b	19b48 <main@@Base+0x122c>
   19b30:	movw	r2, #53416	; 0xd0a8
   19b34:	movt	r2, #2
   19b38:	str	r1, [r2]
   19b3c:	add	r5, r0, #1
   19b40:	cmp	r5, r8
   19b44:	blt	19994 <main@@Base+0x1078>
   19b48:	ldr	r0, [sp, #8]
   19b4c:	cmp	r0, #0
   19b50:	ldrbne	r0, [r0]
   19b54:	cmpne	r0, #0
   19b58:	bne	19b88 <main@@Base+0x126c>
   19b5c:	movw	r0, #49584	; 0xc1b0
   19b60:	mov	r1, #25
   19b64:	movt	r0, #2
   19b68:	ldr	r3, [r0]
   19b6c:	movw	r0, #44409	; 0xad79
   19b70:	movt	r0, #1
   19b74:	mov	r2, #1
   19b78:	bl	127d8 <fwrite@plt>
   19b7c:	bl	19cb0 <main@@Base+0x1394>
   19b80:	mov	r0, #1
   19b84:	bl	12874 <exit@plt>
   19b88:	bl	128e0 <coda_init@plt>
   19b8c:	cmp	r0, #0
   19b90:	bne	19c24 <main@@Base+0x1308>
   19b94:	ldr	r0, [sp, #4]
   19b98:	clz	r0, r0
   19b9c:	lsr	r0, r0, #5
   19ba0:	bl	12724 <coda_set_option_bypass_special_types@plt>
   19ba4:	ldr	r0, [sp, #16]
   19ba8:	bl	128ec <coda_set_option_perform_conversions@plt>
   19bac:	movw	r5, #49624	; 0xc1d8
   19bb0:	movw	r6, #53392	; 0xd090
   19bb4:	movt	r5, #2
   19bb8:	movt	r6, #2
   19bbc:	ldr	r0, [r5]
   19bc0:	cmp	r0, #0
   19bc4:	beq	19be0 <main@@Base+0x12c4>
   19bc8:	movw	r1, #44564	; 0xae14
   19bcc:	movt	r1, #1
   19bd0:	bl	126a0 <fopen@plt>
   19bd4:	cmp	r0, #0
   19bd8:	str	r0, [r6]
   19bdc:	beq	19c7c <main@@Base+0x1360>
   19be0:	mov	r0, r4
   19be4:	bl	179e8 <print_yaml_data@@Base>
   19be8:	ldr	r0, [r5]
   19bec:	cmp	r0, #0
   19bf0:	beq	198d0 <main@@Base+0xfb4>
   19bf4:	ldr	r0, [r6]
   19bf8:	bl	12964 <fclose@plt>
   19bfc:	bl	12808 <coda_done@plt>
   19c00:	mov	r0, #0
   19c04:	sub	sp, fp, #28
   19c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c0c:	bl	19cb0 <main@@Base+0x1394>
   19c10:	mov	r0, #0
   19c14:	bl	12874 <exit@plt>
   19c18:	bl	1a214 <main@@Base+0x18f8>
   19c1c:	mov	r0, #0
   19c20:	bl	12874 <exit@plt>
   19c24:	movw	r0, #49584	; 0xc1b0
   19c28:	movt	r0, #2
   19c2c:	ldr	r4, [r0]
   19c30:	bl	12a60 <coda_get_errno@plt>
   19c34:	ldr	r0, [r0]
   19c38:	bl	12a18 <coda_errno_to_string@plt>
   19c3c:	movw	r1, #44342	; 0xad36
   19c40:	mov	r2, r0
   19c44:	mov	r0, r4
   19c48:	movt	r1, #1
   19c4c:	bl	128bc <fprintf@plt>
   19c50:	mov	r0, #1
   19c54:	bl	12874 <exit@plt>
   19c58:	movw	r0, #49584	; 0xc1b0
   19c5c:	mov	r1, #40	; 0x28
   19c60:	movt	r0, #2
   19c64:	ldr	r3, [r0]
   19c68:	movw	r0, #44474	; 0xadba
   19c6c:	movt	r0, #1
   19c70:	b	19b74 <main@@Base+0x1258>
   19c74:	ldr	r2, [r4]
   19c78:	b	19c90 <main@@Base+0x1374>
   19c7c:	ldr	r2, [r5]
   19c80:	b	19c90 <main@@Base+0x1374>
   19c84:	movw	r0, #49624	; 0xc1d8
   19c88:	movt	r0, #2
   19c8c:	ldr	r2, [r0]
   19c90:	movw	r0, #49584	; 0xc1b0
   19c94:	movw	r1, #44566	; 0xae16
   19c98:	movt	r0, #2
   19c9c:	movt	r1, #1
   19ca0:	ldr	r0, [r0]
   19ca4:	bl	128bc <fprintf@plt>
   19ca8:	mov	r0, #1
   19cac:	bl	12874 <exit@plt>
   19cb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19cb4:	add	fp, sp, #28
   19cb8:	sub	sp, sp, #4
   19cbc:	movw	r0, #44643	; 0xae63
   19cc0:	movt	r0, #1
   19cc4:	bl	12814 <puts@plt>
   19cc8:	movw	r0, #44650	; 0xae6a
   19ccc:	movt	r0, #1
   19cd0:	bl	12814 <puts@plt>
   19cd4:	movw	r0, #44720	; 0xaeb0
   19cd8:	movt	r0, #1
   19cdc:	bl	12814 <puts@plt>
   19ce0:	movw	r8, #45318	; 0xb106
   19ce4:	movt	r8, #1
   19ce8:	mov	r0, r8
   19cec:	bl	12814 <puts@plt>
   19cf0:	movw	r0, #44764	; 0xaedc
   19cf4:	movt	r0, #1
   19cf8:	bl	12814 <puts@plt>
   19cfc:	movw	r0, #44791	; 0xaef7
   19d00:	movt	r0, #1
   19d04:	bl	12814 <puts@plt>
   19d08:	movw	r5, #46584	; 0xb5f8
   19d0c:	movt	r5, #1
   19d10:	mov	r0, r5
   19d14:	bl	12814 <puts@plt>
   19d18:	movw	r6, #46622	; 0xb61e
   19d1c:	movt	r6, #1
   19d20:	mov	r0, r6
   19d24:	bl	12814 <puts@plt>
   19d28:	movw	r7, #45340	; 0xb11c
   19d2c:	movt	r7, #1
   19d30:	mov	r0, r7
   19d34:	bl	12814 <puts@plt>
   19d38:	movw	r4, #45387	; 0xb14b
   19d3c:	movt	r4, #1
   19d40:	mov	r0, r4
   19d44:	bl	12814 <puts@plt>
   19d48:	movw	r0, #44846	; 0xaf2e
   19d4c:	movt	r0, #1
   19d50:	bl	12814 <puts@plt>
   19d54:	movw	r0, #44869	; 0xaf45
   19d58:	movt	r0, #1
   19d5c:	bl	12814 <puts@plt>
   19d60:	movw	r0, #44910	; 0xaf6e
   19d64:	movt	r0, #1
   19d68:	bl	12814 <puts@plt>
   19d6c:	movw	r0, #44933	; 0xaf85
   19d70:	movt	r0, #1
   19d74:	bl	12814 <puts@plt>
   19d78:	movw	r0, #44975	; 0xafaf
   19d7c:	movt	r0, #1
   19d80:	bl	12814 <puts@plt>
   19d84:	movw	r0, #45001	; 0xafc9
   19d88:	movt	r0, #1
   19d8c:	bl	12814 <puts@plt>
   19d90:	movw	r0, #45050	; 0xaffa
   19d94:	movt	r0, #1
   19d98:	bl	12814 <puts@plt>
   19d9c:	movw	r0, #45075	; 0xb013
   19da0:	movt	r0, #1
   19da4:	bl	12814 <puts@plt>
   19da8:	movw	r0, #45145	; 0xb059
   19dac:	movt	r0, #1
   19db0:	bl	12814 <puts@plt>
   19db4:	movw	sl, #46680	; 0xb658
   19db8:	movt	sl, #1
   19dbc:	mov	r0, sl
   19dc0:	bl	12814 <puts@plt>
   19dc4:	movw	r0, #46711	; 0xb677
   19dc8:	movt	r0, #1
   19dcc:	bl	12814 <puts@plt>
   19dd0:	movw	r0, #46791	; 0xb6c7
   19dd4:	movt	r0, #1
   19dd8:	bl	12814 <puts@plt>
   19ddc:	movw	r0, #46869	; 0xb715
   19de0:	movt	r0, #1
   19de4:	bl	12814 <puts@plt>
   19de8:	mov	r0, #10
   19dec:	bl	1291c <putchar@plt>
   19df0:	movw	r0, #45186	; 0xb082
   19df4:	movt	r0, #1
   19df8:	bl	12814 <puts@plt>
   19dfc:	movw	r0, #45258	; 0xb0ca
   19e00:	movt	r0, #1
   19e04:	bl	12814 <puts@plt>
   19e08:	mov	r0, r8
   19e0c:	bl	12814 <puts@plt>
   19e10:	mov	r0, r5
   19e14:	bl	12814 <puts@plt>
   19e18:	mov	r0, r6
   19e1c:	bl	12814 <puts@plt>
   19e20:	mov	r0, r7
   19e24:	bl	12814 <puts@plt>
   19e28:	mov	r0, r4
   19e2c:	bl	12814 <puts@plt>
   19e30:	movw	r0, #45459	; 0xb193
   19e34:	movt	r0, #1
   19e38:	bl	12814 <puts@plt>
   19e3c:	movw	r0, #45483	; 0xb1ab
   19e40:	movt	r0, #1
   19e44:	bl	12814 <puts@plt>
   19e48:	movw	r0, #45548	; 0xb1ec
   19e4c:	movt	r0, #1
   19e50:	bl	12814 <puts@plt>
   19e54:	movw	r0, #45572	; 0xb204
   19e58:	movt	r0, #1
   19e5c:	bl	12814 <puts@plt>
   19e60:	movw	r6, #47289	; 0xb8b9
   19e64:	movt	r6, #1
   19e68:	mov	r0, r6
   19e6c:	bl	12814 <puts@plt>
   19e70:	movw	r0, #47325	; 0xb8dd
   19e74:	movt	r0, #1
   19e78:	bl	12814 <puts@plt>
   19e7c:	movw	r0, #45647	; 0xb24f
   19e80:	movt	r0, #1
   19e84:	bl	12814 <puts@plt>
   19e88:	movw	r0, #45679	; 0xb26f
   19e8c:	movt	r0, #1
   19e90:	bl	12814 <puts@plt>
   19e94:	movw	r0, #45754	; 0xb2ba
   19e98:	movt	r0, #1
   19e9c:	bl	12814 <puts@plt>
   19ea0:	movw	r0, #45810	; 0xb2f2
   19ea4:	movt	r0, #1
   19ea8:	bl	12814 <puts@plt>
   19eac:	movw	r0, #45886	; 0xb33e
   19eb0:	movt	r0, #1
   19eb4:	bl	12814 <puts@plt>
   19eb8:	movw	r0, #45919	; 0xb35f
   19ebc:	movt	r0, #1
   19ec0:	bl	12814 <puts@plt>
   19ec4:	mov	r0, sl
   19ec8:	bl	12814 <puts@plt>
   19ecc:	movw	r0, #46711	; 0xb677
   19ed0:	movt	r0, #1
   19ed4:	mov	r9, r0
   19ed8:	bl	12814 <puts@plt>
   19edc:	movw	r0, #46791	; 0xb6c7
   19ee0:	movt	r0, #1
   19ee4:	mov	r8, r0
   19ee8:	bl	12814 <puts@plt>
   19eec:	movw	r0, #46869	; 0xb715
   19ef0:	movt	r0, #1
   19ef4:	mov	r7, r0
   19ef8:	bl	12814 <puts@plt>
   19efc:	mov	r0, #10
   19f00:	bl	1291c <putchar@plt>
   19f04:	movw	r0, #45998	; 0xb3ae
   19f08:	movt	r0, #1
   19f0c:	bl	12814 <puts@plt>
   19f10:	movw	r0, #46068	; 0xb3f4
   19f14:	movt	r0, #1
   19f18:	bl	12814 <puts@plt>
   19f1c:	movw	r0, #46128	; 0xb430
   19f20:	movt	r0, #1
   19f24:	bl	12814 <puts@plt>
   19f28:	movw	r4, #46377	; 0xb529
   19f2c:	movt	r4, #1
   19f30:	mov	r0, r4
   19f34:	bl	12814 <puts@plt>
   19f38:	movw	r5, #46406	; 0xb546
   19f3c:	movt	r5, #1
   19f40:	mov	r0, r5
   19f44:	bl	12814 <puts@plt>
   19f48:	movw	r0, #46150	; 0xb446
   19f4c:	movt	r0, #1
   19f50:	bl	12814 <puts@plt>
   19f54:	movw	r0, #46584	; 0xb5f8
   19f58:	movt	r0, #1
   19f5c:	bl	12814 <puts@plt>
   19f60:	movw	r0, #46622	; 0xb61e
   19f64:	movt	r0, #1
   19f68:	bl	12814 <puts@plt>
   19f6c:	mov	r0, r6
   19f70:	bl	12814 <puts@plt>
   19f74:	movw	r0, #47325	; 0xb8dd
   19f78:	movt	r0, #1
   19f7c:	bl	12814 <puts@plt>
   19f80:	movw	r0, #47376	; 0xb910
   19f84:	movt	r0, #1
   19f88:	bl	12814 <puts@plt>
   19f8c:	movw	r0, #47406	; 0xb92e
   19f90:	movt	r0, #1
   19f94:	bl	12814 <puts@plt>
   19f98:	movw	r6, #47478	; 0xb976
   19f9c:	movt	r6, #1
   19fa0:	mov	r0, r6
   19fa4:	bl	12814 <puts@plt>
   19fa8:	mov	r0, sl
   19fac:	bl	12814 <puts@plt>
   19fb0:	mov	r0, r9
   19fb4:	bl	12814 <puts@plt>
   19fb8:	mov	r0, r8
   19fbc:	bl	12814 <puts@plt>
   19fc0:	mov	r0, r7
   19fc4:	bl	12814 <puts@plt>
   19fc8:	mov	r0, #10
   19fcc:	bl	1291c <putchar@plt>
   19fd0:	movw	r0, #46225	; 0xb491
   19fd4:	movt	r0, #1
   19fd8:	bl	12814 <puts@plt>
   19fdc:	movw	r0, #46295	; 0xb4d7
   19fe0:	movt	r0, #1
   19fe4:	bl	12814 <puts@plt>
   19fe8:	movw	r0, #46355	; 0xb513
   19fec:	movt	r0, #1
   19ff0:	bl	12814 <puts@plt>
   19ff4:	mov	r0, r4
   19ff8:	bl	12814 <puts@plt>
   19ffc:	mov	r0, r5
   1a000:	bl	12814 <puts@plt>
   1a004:	movw	r0, #46477	; 0xb58d
   1a008:	movt	r0, #1
   1a00c:	bl	12814 <puts@plt>
   1a010:	movw	r0, #46553	; 0xb5d9
   1a014:	movt	r0, #1
   1a018:	bl	12814 <puts@plt>
   1a01c:	movw	r0, #46584	; 0xb5f8
   1a020:	movt	r0, #1
   1a024:	bl	12814 <puts@plt>
   1a028:	movw	r0, #46622	; 0xb61e
   1a02c:	movt	r0, #1
   1a030:	bl	12814 <puts@plt>
   1a034:	movw	r0, #47289	; 0xb8b9
   1a038:	movt	r0, #1
   1a03c:	bl	12814 <puts@plt>
   1a040:	movw	r0, #47325	; 0xb8dd
   1a044:	movt	r0, #1
   1a048:	bl	12814 <puts@plt>
   1a04c:	movw	r0, #47376	; 0xb910
   1a050:	movt	r0, #1
   1a054:	bl	12814 <puts@plt>
   1a058:	movw	r0, #47406	; 0xb92e
   1a05c:	movt	r0, #1
   1a060:	bl	12814 <puts@plt>
   1a064:	mov	r0, r6
   1a068:	bl	12814 <puts@plt>
   1a06c:	mov	r0, sl
   1a070:	bl	12814 <puts@plt>
   1a074:	mov	r0, r9
   1a078:	bl	12814 <puts@plt>
   1a07c:	mov	r0, r8
   1a080:	bl	12814 <puts@plt>
   1a084:	mov	r0, r7
   1a088:	bl	12814 <puts@plt>
   1a08c:	mov	r0, #10
   1a090:	bl	1291c <putchar@plt>
   1a094:	movw	r0, #46899	; 0xb733
   1a098:	movt	r0, #1
   1a09c:	bl	12814 <puts@plt>
   1a0a0:	movw	r0, #46971	; 0xb77b
   1a0a4:	movt	r0, #1
   1a0a8:	bl	12814 <puts@plt>
   1a0ac:	movw	r0, #47045	; 0xb7c5
   1a0b0:	movt	r0, #1
   1a0b4:	bl	12814 <puts@plt>
   1a0b8:	movw	r0, #47119	; 0xb80f
   1a0bc:	movt	r0, #1
   1a0c0:	bl	12814 <puts@plt>
   1a0c4:	movw	r0, #47165	; 0xb83d
   1a0c8:	movt	r0, #1
   1a0cc:	bl	12814 <puts@plt>
   1a0d0:	movw	r0, #47188	; 0xb854
   1a0d4:	movt	r0, #1
   1a0d8:	bl	12814 <puts@plt>
   1a0dc:	movw	r0, #47236	; 0xb884
   1a0e0:	movt	r0, #1
   1a0e4:	bl	12814 <puts@plt>
   1a0e8:	movw	r0, #47289	; 0xb8b9
   1a0ec:	movt	r0, #1
   1a0f0:	bl	12814 <puts@plt>
   1a0f4:	movw	r0, #47325	; 0xb8dd
   1a0f8:	movt	r0, #1
   1a0fc:	bl	12814 <puts@plt>
   1a100:	movw	r0, #47376	; 0xb910
   1a104:	movt	r0, #1
   1a108:	bl	12814 <puts@plt>
   1a10c:	movw	r0, #47406	; 0xb92e
   1a110:	movt	r0, #1
   1a114:	bl	12814 <puts@plt>
   1a118:	mov	r0, r6
   1a11c:	bl	12814 <puts@plt>
   1a120:	movw	r0, #47555	; 0xb9c3
   1a124:	movt	r0, #1
   1a128:	bl	12814 <puts@plt>
   1a12c:	movw	r0, #47587	; 0xb9e3
   1a130:	movt	r0, #1
   1a134:	bl	12814 <puts@plt>
   1a138:	movw	r0, #47665	; 0xba31
   1a13c:	movt	r0, #1
   1a140:	bl	12814 <puts@plt>
   1a144:	movw	r0, #47740	; 0xba7c
   1a148:	movt	r0, #1
   1a14c:	bl	12814 <puts@plt>
   1a150:	movw	r0, #47803	; 0xbabb
   1a154:	movt	r0, #1
   1a158:	bl	12814 <puts@plt>
   1a15c:	movw	r0, #47880	; 0xbb08
   1a160:	movt	r0, #1
   1a164:	bl	12814 <puts@plt>
   1a168:	mov	r0, #10
   1a16c:	bl	1291c <putchar@plt>
   1a170:	movw	r0, #47933	; 0xbb3d
   1a174:	movt	r0, #1
   1a178:	bl	12814 <puts@plt>
   1a17c:	movw	r0, #47957	; 0xbb55
   1a180:	movt	r0, #1
   1a184:	bl	12814 <puts@plt>
   1a188:	mov	r0, #10
   1a18c:	bl	1291c <putchar@plt>
   1a190:	movw	r0, #47987	; 0xbb73
   1a194:	movt	r0, #1
   1a198:	bl	12814 <puts@plt>
   1a19c:	movw	r0, #48014	; 0xbb8e
   1a1a0:	movt	r0, #1
   1a1a4:	bl	12814 <puts@plt>
   1a1a8:	mov	r0, #10
   1a1ac:	bl	1291c <putchar@plt>
   1a1b0:	movw	r0, #48064	; 0xbbc0
   1a1b4:	movt	r0, #1
   1a1b8:	bl	12814 <puts@plt>
   1a1bc:	movw	r0, #48142	; 0xbc0e
   1a1c0:	movt	r0, #1
   1a1c4:	bl	12814 <puts@plt>
   1a1c8:	movw	r0, #48215	; 0xbc57
   1a1cc:	movt	r0, #1
   1a1d0:	bl	12814 <puts@plt>
   1a1d4:	movw	r0, #48258	; 0xbc82
   1a1d8:	movt	r0, #1
   1a1dc:	bl	12814 <puts@plt>
   1a1e0:	movw	r0, #48334	; 0xbcce
   1a1e4:	movt	r0, #1
   1a1e8:	bl	12814 <puts@plt>
   1a1ec:	movw	r0, #48404	; 0xbd14
   1a1f0:	movt	r0, #1
   1a1f4:	bl	12814 <puts@plt>
   1a1f8:	movw	r0, #48467	; 0xbd53
   1a1fc:	movt	r0, #1
   1a200:	bl	12814 <puts@plt>
   1a204:	mov	r0, #10
   1a208:	sub	sp, fp, #28
   1a20c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a210:	b	1291c <putchar@plt>
   1a214:	push	{fp, lr}
   1a218:	mov	fp, sp
   1a21c:	bl	12a54 <coda_get_libcoda_version@plt>
   1a220:	mov	r1, r0
   1a224:	movw	r0, #44435	; 0xad93
   1a228:	movt	r0, #1
   1a22c:	bl	12688 <printf@plt>
   1a230:	movw	r0, #48531	; 0xbd93
   1a234:	movt	r0, #1
   1a238:	bl	12814 <puts@plt>
   1a23c:	mov	r0, #10
   1a240:	pop	{fp, lr}
   1a244:	b	1291c <putchar@plt>
   1a248:	cmp	r3, #0
   1a24c:	cmpeq	r2, #0
   1a250:	bne	1a274 <main@@Base+0x1958>
   1a254:	cmp	r1, #0
   1a258:	movlt	r1, #-2147483648	; 0x80000000
   1a25c:	movlt	r0, #0
   1a260:	blt	1a270 <main@@Base+0x1954>
   1a264:	cmpeq	r0, #0
   1a268:	mvnne	r1, #-2147483648	; 0x80000000
   1a26c:	mvnne	r0, #0
   1a270:	b	1a31c <main@@Base+0x1a00>
   1a274:	sub	sp, sp, #8
   1a278:	push	{sp, lr}
   1a27c:	cmp	r1, #0
   1a280:	blt	1a2a0 <main@@Base+0x1984>
   1a284:	cmp	r3, #0
   1a288:	blt	1a2d4 <main@@Base+0x19b8>
   1a28c:	bl	1a32c <main@@Base+0x1a10>
   1a290:	ldr	lr, [sp, #4]
   1a294:	add	sp, sp, #8
   1a298:	pop	{r2, r3}
   1a29c:	bx	lr
   1a2a0:	rsbs	r0, r0, #0
   1a2a4:	sbc	r1, r1, r1, lsl #1
   1a2a8:	cmp	r3, #0
   1a2ac:	blt	1a2f8 <main@@Base+0x19dc>
   1a2b0:	bl	1a32c <main@@Base+0x1a10>
   1a2b4:	ldr	lr, [sp, #4]
   1a2b8:	add	sp, sp, #8
   1a2bc:	pop	{r2, r3}
   1a2c0:	rsbs	r0, r0, #0
   1a2c4:	sbc	r1, r1, r1, lsl #1
   1a2c8:	rsbs	r2, r2, #0
   1a2cc:	sbc	r3, r3, r3, lsl #1
   1a2d0:	bx	lr
   1a2d4:	rsbs	r2, r2, #0
   1a2d8:	sbc	r3, r3, r3, lsl #1
   1a2dc:	bl	1a32c <main@@Base+0x1a10>
   1a2e0:	ldr	lr, [sp, #4]
   1a2e4:	add	sp, sp, #8
   1a2e8:	pop	{r2, r3}
   1a2ec:	rsbs	r0, r0, #0
   1a2f0:	sbc	r1, r1, r1, lsl #1
   1a2f4:	bx	lr
   1a2f8:	rsbs	r2, r2, #0
   1a2fc:	sbc	r3, r3, r3, lsl #1
   1a300:	bl	1a32c <main@@Base+0x1a10>
   1a304:	ldr	lr, [sp, #4]
   1a308:	add	sp, sp, #8
   1a30c:	pop	{r2, r3}
   1a310:	rsbs	r2, r2, #0
   1a314:	sbc	r3, r3, r3, lsl #1
   1a318:	bx	lr
   1a31c:	push	{r1, lr}
   1a320:	mov	r0, #8
   1a324:	bl	12640 <raise@plt>
   1a328:	pop	{r1, pc}
   1a32c:	cmp	r1, r3
   1a330:	cmpeq	r0, r2
   1a334:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a338:	mov	r4, r0
   1a33c:	movcc	r0, #0
   1a340:	mov	r5, r1
   1a344:	ldr	lr, [sp, #36]	; 0x24
   1a348:	movcc	r1, r0
   1a34c:	bcc	1a448 <main@@Base+0x1b2c>
   1a350:	cmp	r3, #0
   1a354:	clzeq	ip, r2
   1a358:	clzne	ip, r3
   1a35c:	addeq	ip, ip, #32
   1a360:	cmp	r5, #0
   1a364:	clzeq	r1, r4
   1a368:	addeq	r1, r1, #32
   1a36c:	clzne	r1, r5
   1a370:	sub	ip, ip, r1
   1a374:	sub	sl, ip, #32
   1a378:	lsl	r9, r3, ip
   1a37c:	rsb	fp, ip, #32
   1a380:	orr	r9, r9, r2, lsl sl
   1a384:	orr	r9, r9, r2, lsr fp
   1a388:	lsl	r8, r2, ip
   1a38c:	cmp	r5, r9
   1a390:	cmpeq	r4, r8
   1a394:	movcc	r0, #0
   1a398:	movcc	r1, r0
   1a39c:	bcc	1a3b8 <main@@Base+0x1a9c>
   1a3a0:	mov	r0, #1
   1a3a4:	subs	r4, r4, r8
   1a3a8:	lsl	r1, r0, sl
   1a3ac:	orr	r1, r1, r0, lsr fp
   1a3b0:	lsl	r0, r0, ip
   1a3b4:	sbc	r5, r5, r9
   1a3b8:	cmp	ip, #0
   1a3bc:	beq	1a448 <main@@Base+0x1b2c>
   1a3c0:	lsr	r6, r8, #1
   1a3c4:	orr	r6, r6, r9, lsl #31
   1a3c8:	lsr	r7, r9, #1
   1a3cc:	mov	r2, ip
   1a3d0:	b	1a3f4 <main@@Base+0x1ad8>
   1a3d4:	subs	r3, r4, r6
   1a3d8:	sbc	r8, r5, r7
   1a3dc:	adds	r3, r3, r3
   1a3e0:	adc	r8, r8, r8
   1a3e4:	adds	r4, r3, #1
   1a3e8:	adc	r5, r8, #0
   1a3ec:	subs	r2, r2, #1
   1a3f0:	beq	1a410 <main@@Base+0x1af4>
   1a3f4:	cmp	r5, r7
   1a3f8:	cmpeq	r4, r6
   1a3fc:	bcs	1a3d4 <main@@Base+0x1ab8>
   1a400:	adds	r4, r4, r4
   1a404:	adc	r5, r5, r5
   1a408:	subs	r2, r2, #1
   1a40c:	bne	1a3f4 <main@@Base+0x1ad8>
   1a410:	lsr	r3, r4, ip
   1a414:	orr	r3, r3, r5, lsl fp
   1a418:	lsr	r2, r5, ip
   1a41c:	orr	r3, r3, r5, lsr sl
   1a420:	adds	r0, r0, r4
   1a424:	mov	r4, r3
   1a428:	lsl	r3, r2, ip
   1a42c:	orr	r3, r3, r4, lsl sl
   1a430:	lsl	ip, r4, ip
   1a434:	orr	r3, r3, r4, lsr fp
   1a438:	adc	r1, r1, r5
   1a43c:	subs	r0, r0, ip
   1a440:	mov	r5, r2
   1a444:	sbc	r1, r1, r3
   1a448:	cmp	lr, #0
   1a44c:	strdne	r4, [lr]
   1a450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a454 <__libc_csu_init@@Base>:
   1a454:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a458:	mov	r7, r0
   1a45c:	ldr	r6, [pc, #72]	; 1a4ac <__libc_csu_init@@Base+0x58>
   1a460:	ldr	r5, [pc, #72]	; 1a4b0 <__libc_csu_init@@Base+0x5c>
   1a464:	add	r6, pc, r6
   1a468:	add	r5, pc, r5
   1a46c:	sub	r6, r6, r5
   1a470:	mov	r8, r1
   1a474:	mov	r9, r2
   1a478:	bl	125fc <coda_cursor_get_byte_size@plt-0x20>
   1a47c:	asrs	r6, r6, #2
   1a480:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a484:	mov	r4, #0
   1a488:	add	r4, r4, #1
   1a48c:	ldr	r3, [r5], #4
   1a490:	mov	r2, r9
   1a494:	mov	r1, r8
   1a498:	mov	r0, r7
   1a49c:	blx	r3
   1a4a0:	cmp	r6, r4
   1a4a4:	bne	1a488 <__libc_csu_init@@Base+0x34>
   1a4a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a4ac:	andeq	r1, r1, r8, lsl #21
   1a4b0:	andeq	r1, r1, r0, lsl #21

0001a4b4 <__libc_csu_fini@@Base>:
   1a4b4:	bx	lr

Disassembly of section .fini:

0001a4b8 <.fini>:
   1a4b8:	push	{r3, lr}
   1a4bc:	pop	{r3, pc}
