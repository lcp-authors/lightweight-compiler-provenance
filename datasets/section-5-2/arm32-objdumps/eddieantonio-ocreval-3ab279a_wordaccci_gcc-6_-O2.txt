
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

00010754 <.init>:
   10754:	push	{r3, lr}
   10758:	bl	1094c <abort@plt+0xb8>
   1075c:	pop	{r3, pc}

Disassembly of section .plt:

00010760 <calloc@plt-0x14>:
   10760:	push	{lr}		; (str lr, [sp, #-4]!)
   10764:	ldr	lr, [pc, #4]	; 10770 <calloc@plt-0x4>
   10768:	add	lr, pc, lr
   1076c:	ldr	pc, [lr, #8]!
   10770:	muleq	r1, r0, r8

00010774 <calloc@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #73728	; 0x12000
   1077c:	ldr	pc, [ip, #2192]!	; 0x890

00010780 <strcmp@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #73728	; 0x12000
   10788:	ldr	pc, [ip, #2184]!	; 0x888

0001078c <strtol@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #73728	; 0x12000
   10794:	ldr	pc, [ip, #2176]!	; 0x880

00010798 <printf@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #73728	; 0x12000
   107a0:	ldr	pc, [ip, #2168]!	; 0x878

000107a4 <fopen@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #73728	; 0x12000
   107ac:	ldr	pc, [ip, #2160]!	; 0x870

000107b0 <free@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #73728	; 0x12000
   107b8:	ldr	pc, [ip, #2152]!	; 0x868

000107bc <fgets@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #73728	; 0x12000
   107c4:	ldr	pc, [ip, #2144]!	; 0x860

000107c8 <strdup@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2136]!	; 0x858

000107d4 <unlink@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2128]!	; 0x850

000107e0 <__xstat@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2120]!	; 0x848

000107ec <fwrite@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2112]!	; 0x840

000107f8 <__libc_start_main@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2104]!	; 0x838

00010804 <__sysv_signal@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2096]!	; 0x830

00010810 <__gmon_start__@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2088]!	; 0x828

0001081c <getpid@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2080]!	; 0x820

00010828 <exit@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2072]!	; 0x818

00010834 <strlen@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #73728	; 0x12000
   1083c:	ldr	pc, [ip, #2064]!	; 0x810

00010840 <fprintf@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #73728	; 0x12000
   10848:	ldr	pc, [ip, #2056]!	; 0x808

0001084c <sqrt@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #73728	; 0x12000
   10854:	ldr	pc, [ip, #2048]!	; 0x800

00010858 <__isoc99_sscanf@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #73728	; 0x12000
   10860:	ldr	pc, [ip, #2040]!	; 0x7f8

00010864 <fclose@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #73728	; 0x12000
   1086c:	ldr	pc, [ip, #2032]!	; 0x7f0

00010870 <fputc@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #2024]!	; 0x7e8

0001087c <sprintf@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #2016]!	; 0x7e0

00010888 <strncmp@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #2008]!	; 0x7d8

00010894 <abort@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #2000]!	; 0x7d0

Disassembly of section .text:

000108a0 <error@@Base-0x7d4>:
   108a0:	push	{r4, r5, lr}
   108a4:	sub	sp, sp, #12
   108a8:	add	ip, sp, #8
   108ac:	ldr	r2, [pc, #84]	; 10908 <abort@plt+0x74>
   108b0:	mov	r3, #0
   108b4:	str	r0, [ip, #-4]!
   108b8:	add	r2, pc, r2
   108bc:	mov	r0, ip
   108c0:	mov	r5, r1
   108c4:	bl	11214 <error@@Base+0x1a0>
   108c8:	ldr	r3, [sp, #4]
   108cc:	cmp	r3, #1
   108d0:	subgt	r5, r5, #4
   108d4:	movgt	r4, #0
   108d8:	ble	108fc <abort@plt+0x68>
   108dc:	ldr	r0, [r5, #4]!
   108e0:	bl	10a38 <abort@plt+0x1a4>
   108e4:	ldr	r3, [sp, #4]
   108e8:	add	r4, r4, #1
   108ec:	cmp	r3, r4
   108f0:	bgt	108dc <abort@plt+0x48>
   108f4:	bl	10a84 <abort@plt+0x1f0>
   108f8:	bl	11000 <abort@plt+0x76c>
   108fc:	ldr	r0, [pc, #8]	; 1090c <abort@plt+0x78>
   10900:	add	r0, pc, r0
   10904:	bl	11074 <error@@Base>
   10908:	andeq	r1, r0, r4, asr #25
   1090c:	andeq	r1, r0, ip, lsr #25
   10910:	mov	fp, #0
   10914:	mov	lr, #0
   10918:	pop	{r1}		; (ldr r1, [sp], #4)
   1091c:	mov	r2, sp
   10920:	push	{r2}		; (str r2, [sp, #-4]!)
   10924:	push	{r0}		; (str r0, [sp, #-4]!)
   10928:	ldr	ip, [pc, #16]	; 10940 <abort@plt+0xac>
   1092c:	push	{ip}		; (str ip, [sp, #-4]!)
   10930:	ldr	r0, [pc, #12]	; 10944 <abort@plt+0xb0>
   10934:	ldr	r3, [pc, #12]	; 10948 <abort@plt+0xb4>
   10938:	bl	107f8 <__libc_start_main@plt>
   1093c:	bl	10894 <abort@plt>
   10940:	ldrdeq	r2, [r1], -r4
   10944:	andeq	r0, r1, r0, lsr #17
   10948:	andeq	r2, r1, r4, ror r4
   1094c:	ldr	r3, [pc, #20]	; 10968 <abort@plt+0xd4>
   10950:	ldr	r2, [pc, #20]	; 1096c <abort@plt+0xd8>
   10954:	add	r3, pc, r3
   10958:	ldr	r2, [r3, r2]
   1095c:	cmp	r2, #0
   10960:	bxeq	lr
   10964:	b	10810 <__gmon_start__@plt>
   10968:	andeq	r2, r1, r4, lsr #13
   1096c:	andeq	r0, r0, ip, ror r0
   10970:	ldr	r3, [pc, #28]	; 10994 <abort@plt+0x100>
   10974:	ldr	r0, [pc, #28]	; 10998 <abort@plt+0x104>
   10978:	sub	r3, r3, r0
   1097c:	cmp	r3, #6
   10980:	bxls	lr
   10984:	ldr	r3, [pc, #16]	; 1099c <abort@plt+0x108>
   10988:	cmp	r3, #0
   1098c:	bxeq	lr
   10990:	bx	r3
   10994:	andeq	r3, r2, pc, lsr #1
   10998:	andeq	r3, r2, ip, lsr #1
   1099c:	andeq	r0, r0, r0
   109a0:	ldr	r1, [pc, #36]	; 109cc <abort@plt+0x138>
   109a4:	ldr	r0, [pc, #36]	; 109d0 <abort@plt+0x13c>
   109a8:	sub	r1, r1, r0
   109ac:	asr	r1, r1, #2
   109b0:	add	r1, r1, r1, lsr #31
   109b4:	asrs	r1, r1, #1
   109b8:	bxeq	lr
   109bc:	ldr	r3, [pc, #16]	; 109d4 <abort@plt+0x140>
   109c0:	cmp	r3, #0
   109c4:	bxeq	lr
   109c8:	bx	r3
   109cc:	andeq	r3, r2, ip, lsr #1
   109d0:	andeq	r3, r2, ip, lsr #1
   109d4:	andeq	r0, r0, r0
   109d8:	push	{r4, lr}
   109dc:	ldr	r4, [pc, #24]	; 109fc <abort@plt+0x168>
   109e0:	ldrb	r3, [r4]
   109e4:	cmp	r3, #0
   109e8:	popne	{r4, pc}
   109ec:	bl	10970 <abort@plt+0xdc>
   109f0:	mov	r3, #1
   109f4:	strb	r3, [r4]
   109f8:	pop	{r4, pc}
   109fc:	strheq	r3, [r2], -r0
   10a00:	ldr	r0, [pc, #40]	; 10a30 <abort@plt+0x19c>
   10a04:	ldr	r3, [r0]
   10a08:	cmp	r3, #0
   10a0c:	bne	10a14 <abort@plt+0x180>
   10a10:	b	109a0 <abort@plt+0x10c>
   10a14:	ldr	r3, [pc, #24]	; 10a34 <abort@plt+0x1a0>
   10a18:	cmp	r3, #0
   10a1c:	beq	10a10 <abort@plt+0x17c>
   10a20:	push	{r4, lr}
   10a24:	blx	r3
   10a28:	pop	{r4, lr}
   10a2c:	b	109a0 <abort@plt+0x10c>
   10a30:	andeq	r2, r2, r4, lsl #30
   10a34:	andeq	r0, r0, r0
   10a38:	push	{r4, r5, r6, r7, r8, lr}
   10a3c:	mov	r1, r0
   10a40:	ldr	r4, [pc, #48]	; 10a78 <abort@plt+0x1e4>
   10a44:	ldr	r3, [pc, #48]	; 10a7c <abort@plt+0x1e8>
   10a48:	add	r4, pc, r4
   10a4c:	ldr	r5, [r4, r3]
   10a50:	mov	r0, r5
   10a54:	ldm	r5, {r6, r7}
   10a58:	bl	11a6c <error@@Base+0x9f8>
   10a5c:	ldm	r5, {r1, r2}
   10a60:	ldr	r3, [pc, #24]	; 10a80 <abort@plt+0x1ec>
   10a64:	sub	r2, r2, r7
   10a68:	ldr	r0, [r4, r3]
   10a6c:	sub	r1, r1, r6
   10a70:	pop	{r4, r5, r6, r7, r8, lr}
   10a74:	b	10b78 <abort@plt+0x2e4>
   10a78:			; <UNDEFINED> instruction: 0x000125b0
   10a7c:	andeq	r0, r0, r4, lsl #1
   10a80:	andeq	r0, r0, r8, lsl #1
   10a84:	push	{r4, r5, lr}
   10a88:	sub	sp, sp, #36	; 0x24
   10a8c:	ldr	r4, [pc, #188]	; 10b50 <abort@plt+0x2bc>
   10a90:	ldr	r3, [pc, #188]	; 10b54 <abort@plt+0x2c0>
   10a94:	add	r4, pc, r4
   10a98:	add	r2, sp, #24
   10a9c:	ldr	r5, [r4, r3]
   10aa0:	add	r1, sp, #16
   10aa4:	mov	r0, r5
   10aa8:	bl	10bc4 <abort@plt+0x330>
   10aac:	ldr	r0, [pc, #164]	; 10b58 <abort@plt+0x2c4>
   10ab0:	ldr	r1, [r5, #12]
   10ab4:	add	r0, pc, r0
   10ab8:	bl	10798 <printf@plt>
   10abc:	ldr	r3, [pc, #152]	; 10b5c <abort@plt+0x2c8>
   10ac0:	ldr	r0, [pc, #152]	; 10b60 <abort@plt+0x2cc>
   10ac4:	ldr	r4, [r4, r3]
   10ac8:	add	r0, pc, r0
   10acc:	ldr	r1, [r4]
   10ad0:	bl	10798 <printf@plt>
   10ad4:	ldr	r0, [pc, #136]	; 10b64 <abort@plt+0x2d0>
   10ad8:	ldr	r1, [r4, #4]
   10adc:	add	r0, pc, r0
   10ae0:	bl	10798 <printf@plt>
   10ae4:	ldm	r4, {r2, r3}
   10ae8:	vldr	d5, [pc, #88]	; 10b48 <abort@plt+0x2b4>
   10aec:	ldr	r0, [pc, #116]	; 10b68 <abort@plt+0x2d4>
   10af0:	sub	r3, r2, r3
   10af4:	vmov	s15, r2
   10af8:	vmov	s14, r3
   10afc:	add	r0, pc, r0
   10b00:	vcvt.f64.s32	d6, s15
   10b04:	vcvt.f64.s32	d7, s14
   10b08:	vmul.f64	d7, d7, d5
   10b0c:	vdiv.f64	d5, d7, d6
   10b10:	vmov	r2, r3, d5
   10b14:	bl	10798 <printf@plt>
   10b18:	ldrd	r4, [sp, #24]
   10b1c:	ldr	r1, [pc, #72]	; 10b6c <abort@plt+0x2d8>
   10b20:	ldr	r0, [pc, #72]	; 10b70 <abort@plt+0x2dc>
   10b24:	add	r1, pc, r1
   10b28:	ldrd	r2, [sp, #16]
   10b2c:	strd	r4, [sp]
   10b30:	str	r1, [sp, #8]
   10b34:	add	r0, pc, r0
   10b38:	bl	10798 <printf@plt>
   10b3c:	add	sp, sp, #36	; 0x24
   10b40:	pop	{r4, r5, pc}
   10b44:	nop			; (mov r0, r0)
   10b48:	andeq	r0, r0, r0
   10b4c:	subsmi	r0, r9, r0
   10b50:	andeq	r2, r1, r4, ror #10
   10b54:	andeq	r0, r0, r8, lsl #1
   10b58:	andeq	r1, r0, r8, lsr #20
   10b5c:	andeq	r0, r0, r4, lsl #1
   10b60:	andeq	r1, r0, ip, lsr #20
   10b64:	andeq	r1, r0, r8, lsr #20
   10b68:	andeq	r1, r0, r0, lsr #20
   10b6c:	andeq	r1, r0, r4, lsr #20
   10b70:	strdeq	r1, [r0], -ip
   10b74:	andeq	r0, r0, r0
   10b78:	push	{r4, r5, r6, lr}
   10b7c:	mov	r4, r0
   10b80:	mov	r6, r1
   10b84:	mov	r0, #1
   10b88:	mov	r1, #32
   10b8c:	mov	r5, r2
   10b90:	bl	110cc <error@@Base+0x58>
   10b94:	str	r5, [r0, #12]
   10b98:	str	r6, [r0, #8]
   10b9c:	ldr	r3, [r4, #28]
   10ba0:	mov	r1, r0
   10ba4:	ldr	r0, [r4, #24]
   10ba8:	add	r2, r3, r5
   10bac:	add	r0, r0, r6
   10bb0:	str	r0, [r4, #24]
   10bb4:	str	r2, [r4, #28]
   10bb8:	mov	r0, r4
   10bbc:	pop	{r4, r5, r6, lr}
   10bc0:	b	11e24 <error@@Base+0xdb0>
   10bc4:	push	{r4, r5, r6, lr}
   10bc8:	sub	sp, sp, #24
   10bcc:	ldr	r4, [r0]
   10bd0:	cmp	r4, #0
   10bd4:	beq	10d7c <abort@plt+0x4e8>
   10bd8:	mov	r3, r4
   10bdc:	mov	lr, #0
   10be0:	ldr	ip, [r3, #8]
   10be4:	ldr	r3, [r3, #4]
   10be8:	cmp	ip, #0
   10bec:	addgt	lr, lr, #1
   10bf0:	cmp	r3, #0
   10bf4:	bne	10be0 <abort@plt+0x34c>
   10bf8:	cmp	lr, #1
   10bfc:	ble	10d7c <abort@plt+0x4e8>
   10c00:	ldr	r5, [r0, #24]
   10c04:	ldr	r6, [r0, #28]
   10c08:	vldr	d6, [pc, #376]	; 10d88 <abort@plt+0x4f4>
   10c0c:	sub	r3, r5, r6
   10c10:	vmov	s15, r5
   10c14:	vmov	s14, r3
   10c18:	vldr	s7, [r0, #12]
   10c1c:	vmov.f64	d0, d6
   10c20:	vcvt.f64.s32	d5, s15
   10c24:	vcvt.f64.s32	d7, s14
   10c28:	vmov	r3, s7
   10c2c:	vcvt.f64.s32	d2, s7
   10c30:	vldr	d4, [pc, #344]	; 10d90 <abort@plt+0x4fc>
   10c34:	mov	ip, r4
   10c38:	sub	r3, r3, #1
   10c3c:	vmov	s6, r3
   10c40:	vmul.f64	d7, d7, d6
   10c44:	vcvt.f64.s32	d3, s6
   10c48:	vdiv.f64	d1, d7, d5
   10c4c:	vstr	d1, [r0, #32]
   10c50:	vmul.f64	d1, d1, d2
   10c54:	ldr	lr, [ip, #8]
   10c58:	ldr	r3, [ip, #12]
   10c5c:	sub	lr, r5, lr
   10c60:	sub	r3, r6, r3
   10c64:	sub	r3, lr, r3
   10c68:	vmov	s15, lr
   10c6c:	vmov	s14, r3
   10c70:	vcvt.f64.s32	d6, s15
   10c74:	vcvt.f64.s32	d7, s14
   10c78:	vmul.f64	d7, d7, d0
   10c7c:	vdiv.f64	d5, d7, d6
   10c80:	vmov.f64	d7, d1
   10c84:	vmls.f64	d7, d3, d5
   10c88:	vstr	d5, [ip, #16]
   10c8c:	vadd.f64	d4, d4, d5
   10c90:	vstr	d7, [ip, #24]
   10c94:	ldr	ip, [ip, #4]
   10c98:	cmp	ip, #0
   10c9c:	bne	10c54 <abort@plt+0x3c0>
   10ca0:	vmul.f64	d4, d3, d4
   10ca4:	vldr	d6, [pc, #228]	; 10d90 <abort@plt+0x4fc>
   10ca8:	vdiv.f64	d7, d4, d2
   10cac:	vsub.f64	d1, d1, d7
   10cb0:	vstr	d1, [r0, #40]	; 0x28
   10cb4:	vldr	d7, [r4, #24]
   10cb8:	ldr	r4, [r4, #4]
   10cbc:	cmp	r4, #0
   10cc0:	vsub.f64	d7, d7, d1
   10cc4:	vmla.f64	d6, d7, d7
   10cc8:	bne	10cb4 <abort@plt+0x420>
   10ccc:	vdiv.f64	d7, d6, d3
   10cd0:	vdiv.f64	d0, d7, d2
   10cd4:	vcmp.f64	d0, #0.0
   10cd8:	vsqrt.f64	d7, d0
   10cdc:	vmrs	APSR_nzcv, fpscr
   10ce0:	bmi	10d50 <abort@plt+0x4bc>
   10ce4:	vldr	d5, [pc, #172]	; 10d98 <abort@plt+0x504>
   10ce8:	vldr	d6, [pc, #152]	; 10d88 <abort@plt+0x4f4>
   10cec:	vmul.f64	d7, d7, d5
   10cf0:	vsub.f64	d1, d1, d7
   10cf4:	vcmpe.f64	d1, d6
   10cf8:	vmrs	APSR_nzcv, fpscr
   10cfc:	vmovgt.f64	d1, d6
   10d00:	bgt	10d14 <abort@plt+0x480>
   10d04:	vldr	d6, [pc, #132]	; 10d90 <abort@plt+0x4fc>
   10d08:	vcmp.f64	d1, d6
   10d0c:	vmrs	APSR_nzcv, fpscr
   10d10:	vmovmi.f64	d1, d6
   10d14:	vstr	d1, [r1]
   10d18:	vldr	d6, [pc, #104]	; 10d88 <abort@plt+0x4f4>
   10d1c:	vldr	d5, [r0, #40]	; 0x28
   10d20:	vadd.f64	d7, d7, d5
   10d24:	vcmpe.f64	d7, d6
   10d28:	vmrs	APSR_nzcv, fpscr
   10d2c:	vmovgt.f64	d7, d6
   10d30:	bgt	10d44 <abort@plt+0x4b0>
   10d34:	vldr	d6, [pc, #84]	; 10d90 <abort@plt+0x4fc>
   10d38:	vcmp.f64	d7, d6
   10d3c:	vmrs	APSR_nzcv, fpscr
   10d40:	vmovmi.f64	d7, d6
   10d44:	vstr	d7, [r2]
   10d48:	add	sp, sp, #24
   10d4c:	pop	{r4, r5, r6, pc}
   10d50:	str	r2, [sp, #20]
   10d54:	str	r1, [sp, #16]
   10d58:	str	r0, [sp, #12]
   10d5c:	vstr	d7, [sp]
   10d60:	bl	1084c <sqrt@plt>
   10d64:	ldr	r0, [sp, #12]
   10d68:	ldr	r2, [sp, #20]
   10d6c:	ldr	r1, [sp, #16]
   10d70:	vldr	d1, [r0, #40]	; 0x28
   10d74:	vldr	d7, [sp]
   10d78:	b	10ce4 <abort@plt+0x450>
   10d7c:	ldr	r0, [pc, #28]	; 10da0 <abort@plt+0x50c>
   10d80:	add	r0, pc, r0
   10d84:	bl	11074 <error@@Base>
   10d88:	andeq	r0, r0, r0
   10d8c:	subsmi	r0, r9, r0
	...
   10d98:			; <UNDEFINED> instruction: 0xf5c28f5c
   10d9c:	svccc	0x00ff5c28
   10da0:	andeq	r1, r0, r4, asr #16
   10da4:	ldr	r3, [pc, #76]	; 10df8 <abort@plt+0x564>
   10da8:	ldr	r2, [pc, #76]	; 10dfc <abort@plt+0x568>
   10dac:	add	r3, pc, r3
   10db0:	push	{r4, r5, lr}
   10db4:	sub	sp, sp, #116	; 0x74
   10db8:	ldr	r3, [r3, r2]
   10dbc:	mov	r5, r0
   10dc0:	ldr	r4, [r3]
   10dc4:	bl	1081c <getpid@plt>
   10dc8:	ldr	r1, [pc, #48]	; 10e00 <abort@plt+0x56c>
   10dcc:	mov	r2, r4
   10dd0:	add	r4, sp, #12
   10dd4:	add	r1, pc, r1
   10dd8:	str	r5, [sp]
   10ddc:	mov	r3, r0
   10de0:	mov	r0, r4
   10de4:	bl	1087c <sprintf@plt>
   10de8:	mov	r0, r4
   10dec:	bl	107c8 <strdup@plt>
   10df0:	add	sp, sp, #116	; 0x74
   10df4:	pop	{r4, r5, pc}
   10df8:	andeq	r2, r1, ip, asr #4
   10dfc:	andeq	r0, r0, r0, lsl #1
   10e00:	andeq	r1, r0, r8, lsl #16
   10e04:	ldr	r3, [pc, #108]	; 10e78 <abort@plt+0x5e4>
   10e08:	ldr	r2, [pc, #108]	; 10e7c <abort@plt+0x5e8>
   10e0c:	add	r3, pc, r3
   10e10:	push	{r7, lr}
   10e14:	mov	r7, r0
   10e18:	ldr	r3, [r3, r2]
   10e1c:	ldr	r3, [r3]
   10e20:	cmp	r3, #0
   10e24:	beq	10e2c <abort@plt+0x598>
   10e28:	blx	r3
   10e2c:	ldr	r6, [pc, #76]	; 10e80 <abort@plt+0x5ec>
   10e30:	add	r6, pc, r6
   10e34:	ldrsh	r3, [r6]
   10e38:	cmp	r3, #0
   10e3c:	movgt	r4, #1
   10e40:	ble	10e70 <abort@plt+0x5dc>
   10e44:	mov	r0, r4
   10e48:	bl	10da4 <abort@plt+0x510>
   10e4c:	add	r4, r4, #1
   10e50:	sxth	r4, r4
   10e54:	mov	r5, r0
   10e58:	bl	107d4 <unlink@plt>
   10e5c:	mov	r0, r5
   10e60:	bl	107b0 <free@plt>
   10e64:	ldrsh	r3, [r6]
   10e68:	cmp	r3, r4
   10e6c:	bge	10e44 <abort@plt+0x5b0>
   10e70:	mov	r0, r7
   10e74:	bl	10828 <exit@plt>
   10e78:	andeq	r2, r1, ip, ror #3
   10e7c:	andeq	r0, r0, ip, lsl #1
   10e80:	andeq	r2, r1, sl, ror r2
   10e84:	ldrb	r3, [r0]
   10e88:	cmp	r3, #0
   10e8c:	beq	10ef0 <abort@plt+0x65c>
   10e90:	ldrb	ip, [r1]
   10e94:	cmp	ip, r3
   10e98:	bne	10f00 <abort@plt+0x66c>
   10e9c:	push	{lr}		; (str lr, [sp, #-4]!)
   10ea0:	mov	r2, #0
   10ea4:	mov	lr, r1
   10ea8:	b	10eb8 <abort@plt+0x624>
   10eac:	ldrb	ip, [lr, #1]!
   10eb0:	cmp	r3, ip
   10eb4:	bne	10ed8 <abort@plt+0x644>
   10eb8:	ldrb	r3, [r0, #1]!
   10ebc:	add	r2, r2, #1
   10ec0:	cmp	r3, #0
   10ec4:	bne	10eac <abort@plt+0x618>
   10ec8:	ldrb	ip, [r1, r2]
   10ecc:	cmp	ip, #0
   10ed0:	movne	r3, #0
   10ed4:	beq	10ee8 <abort@plt+0x654>
   10ed8:	cmp	r3, ip
   10edc:	movcs	r0, #1
   10ee0:	mvncc	r0, #0
   10ee4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ee8:	mov	r0, ip
   10eec:	pop	{pc}		; (ldr pc, [sp], #4)
   10ef0:	ldrb	ip, [r1, r3]
   10ef4:	cmp	ip, #0
   10ef8:	movne	r3, #0
   10efc:	beq	10f10 <abort@plt+0x67c>
   10f00:	cmp	r3, ip
   10f04:	movcs	r0, #1
   10f08:	mvncc	r0, #0
   10f0c:	bx	lr
   10f10:	mov	r0, ip
   10f14:	bx	lr
   10f18:	ldr	r2, [pc, #44]	; 10f4c <abort@plt+0x6b8>
   10f1c:	ldr	r3, [pc, #44]	; 10f50 <abort@plt+0x6bc>
   10f20:	add	r2, pc, r2
   10f24:	ldr	r3, [r2, r3]
   10f28:	ldr	r3, [r3]
   10f2c:	cmp	r3, r0
   10f30:	bxeq	lr
   10f34:	ldr	r3, [pc, #24]	; 10f54 <abort@plt+0x6c0>
   10f38:	ldr	r3, [r2, r3]
   10f3c:	ldr	r3, [r3]
   10f40:	cmp	r0, r3
   10f44:	bxeq	lr
   10f48:	b	10864 <fclose@plt>
   10f4c:	ldrdeq	r2, [r1], -r8
   10f50:	muleq	r0, r0, r0
   10f54:	muleq	r0, r4, r0
   10f58:	push	{lr}		; (str lr, [sp, #-4]!)
   10f5c:	sub	sp, sp, #92	; 0x5c
   10f60:	mov	r1, r0
   10f64:	mov	r2, sp
   10f68:	mov	r0, #3
   10f6c:	bl	107e0 <__xstat@plt>
   10f70:	clz	r0, r0
   10f74:	lsr	r0, r0, #5
   10f78:	add	sp, sp, #92	; 0x5c
   10f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   10f80:	ldr	r2, [pc, #44]	; 10fb4 <abort@plt+0x720>
   10f84:	push	{r4, lr}
   10f88:	add	r2, pc, r2
   10f8c:	ldrh	r3, [r2]
   10f90:	add	r3, r3, #1
   10f94:	sxth	r3, r3
   10f98:	mov	r0, r3
   10f9c:	strh	r3, [r2]
   10fa0:	bl	10da4 <abort@plt+0x510>
   10fa4:	mov	r4, r0
   10fa8:	bl	107d4 <unlink@plt>
   10fac:	mov	r0, r4
   10fb0:	pop	{r4, pc}
   10fb4:	andeq	r2, r1, r2, lsr #2
   10fb8:	push	{r4, lr}
   10fbc:	mov	r4, r0
   10fc0:	bl	10834 <strlen@plt>
   10fc4:	sub	r0, r0, #1
   10fc8:	sxth	r0, r0
   10fcc:	cmp	r0, #0
   10fd0:	bge	10fe8 <abort@plt+0x754>
   10fd4:	b	10ff4 <abort@plt+0x760>
   10fd8:	sub	r0, r0, #1
   10fdc:	sxth	r0, r0
   10fe0:	cmn	r0, #1
   10fe4:	beq	10ff4 <abort@plt+0x760>
   10fe8:	ldrb	r3, [r4, r0]
   10fec:	cmp	r3, #47	; 0x2f
   10ff0:	bne	10fd8 <abort@plt+0x744>
   10ff4:	add	r0, r0, #1
   10ff8:	add	r0, r4, r0
   10ffc:	pop	{r4, pc}
   11000:	push	{r4, lr}
   11004:	mov	r0, #0
   11008:	bl	10e04 <abort@plt+0x570>
   1100c:	ldr	r1, [pc, #76]	; 11060 <abort@plt+0x7cc>
   11010:	ldr	r2, [pc, #76]	; 11064 <abort@plt+0x7d0>
   11014:	add	r1, pc, r1
   11018:	push	{r4, lr}
   1101c:	ldr	r2, [r1, r2]
   11020:	ldr	r2, [r2]
   11024:	cmp	r2, #0
   11028:	beq	11034 <abort@plt+0x7a0>
   1102c:	blx	r2
   11030:	bl	11000 <abort@plt+0x76c>
   11034:	ldr	r2, [pc, #44]	; 11068 <abort@plt+0x7d4>
   11038:	ldr	ip, [pc, #44]	; 1106c <abort@plt+0x7d8>
   1103c:	mov	r3, r0
   11040:	ldr	r0, [r1, r2]
   11044:	ldr	ip, [r1, ip]
   11048:	ldr	r1, [pc, #32]	; 11070 <abort@plt+0x7dc>
   1104c:	ldr	r0, [r0]
   11050:	add	r1, pc, r1
   11054:	ldr	r2, [ip]
   11058:	bl	10840 <fprintf@plt>
   1105c:	b	11030 <abort@plt+0x79c>
   11060:	andeq	r1, r1, r4, ror #31
   11064:	andeq	r0, r0, r4, ror r0
   11068:	andeq	r0, r0, r8, ror r0
   1106c:	andeq	r0, r0, r0, lsl #1
   11070:	muleq	r0, ip, r5

00011074 <error@@Base>:
   11074:	push	{r4, lr}
   11078:	mov	r3, r0
   1107c:	ldr	r4, [pc, #52]	; 110b8 <error@@Base+0x44>
   11080:	ldr	r1, [pc, #52]	; 110bc <error@@Base+0x48>
   11084:	ldr	r2, [pc, #52]	; 110c0 <error@@Base+0x4c>
   11088:	add	r4, pc, r4
   1108c:	ldr	ip, [r4, r1]
   11090:	ldr	r0, [r4, r2]
   11094:	ldr	r1, [pc, #40]	; 110c4 <error@@Base+0x50>
   11098:	ldr	r2, [ip]
   1109c:	add	r1, pc, r1
   110a0:	ldr	r0, [r0]
   110a4:	bl	10840 <fprintf@plt>
   110a8:	ldr	r3, [pc, #24]	; 110c8 <error@@Base+0x54>
   110ac:	ldr	r3, [r4, r3]
   110b0:	ldr	r0, [r3]
   110b4:	bl	10e04 <abort@plt+0x570>
   110b8:	andeq	r1, r1, r0, ror pc
   110bc:	andeq	r0, r0, r0, lsl #1
   110c0:	andeq	r0, r0, r8, ror r0
   110c4:	andeq	r1, r0, r0, ror #10
   110c8:	muleq	r0, r8, r0
   110cc:	push	{r4, lr}
   110d0:	bl	10774 <calloc@plt>
   110d4:	cmp	r0, #0
   110d8:	popne	{r4, pc}
   110dc:	ldr	r0, [pc, #4]	; 110e8 <error@@Base+0x74>
   110e0:	add	r0, pc, r0
   110e4:	bl	11074 <error@@Base>
   110e8:	andeq	r1, r0, r4, lsr #10
   110ec:	ldr	r3, [pc, #40]	; 1111c <error@@Base+0xa8>
   110f0:	add	r3, pc, r3
   110f4:	ldrb	r2, [r3, #2]
   110f8:	cmp	r2, #0
   110fc:	beq	11104 <error@@Base+0x90>
   11100:	bx	lr
   11104:	ldr	r0, [pc, #20]	; 11120 <error@@Base+0xac>
   11108:	push	{r4, lr}
   1110c:	mov	r2, #1
   11110:	add	r0, pc, r0
   11114:	strb	r2, [r3, #2]
   11118:	bl	11074 <error@@Base>
   1111c:			; <UNDEFINED> instruction: 0x00011fba
   11120:	andeq	r1, r0, r0, lsl r5
   11124:	ldr	r4, [pc, #68]	; 11170 <error@@Base+0xfc>
   11128:	ldr	r2, [pc, #68]	; 11174 <error@@Base+0x100>
   1112c:	ldr	ip, [pc, #68]	; 11178 <error@@Base+0x104>
   11130:	add	r4, pc, r4
   11134:	push	{lr}		; (str lr, [sp, #-4]!)
   11138:	sub	sp, sp, #12
   1113c:	mov	r3, r0
   11140:	ldr	ip, [r4, ip]
   11144:	ldr	r0, [r4, r2]
   11148:	str	r1, [sp]
   1114c:	ldr	r1, [pc, #40]	; 1117c <error@@Base+0x108>
   11150:	ldr	r2, [ip]
   11154:	ldr	r0, [r0]
   11158:	add	r1, pc, r1
   1115c:	bl	10840 <fprintf@plt>
   11160:	ldr	r3, [pc, #24]	; 11180 <error@@Base+0x10c>
   11164:	ldr	r3, [r4, r3]
   11168:	ldr	r0, [r3]
   1116c:	bl	10e04 <abort@plt+0x570>
   11170:	andeq	r1, r1, r8, asr #29
   11174:	andeq	r0, r0, r8, ror r0
   11178:	andeq	r0, r0, r0, lsl #1
   1117c:	ldrdeq	r1, [r0], -r8
   11180:	muleq	r0, r8, r0
   11184:	ldr	ip, [pc, #116]	; 11200 <error@@Base+0x18c>
   11188:	subs	r2, r0, #0
   1118c:	push	{r4, r5, r6, lr}
   11190:	add	ip, pc, ip
   11194:	mov	r4, r1
   11198:	beq	111c8 <error@@Base+0x154>
   1119c:	mov	r5, r2
   111a0:	bl	107a4 <fopen@plt>
   111a4:	cmp	r0, #0
   111a8:	popne	{r4, r5, r6, pc}
   111ac:	ldrb	r3, [r4]
   111b0:	mov	r1, r5
   111b4:	cmp	r3, #119	; 0x77
   111b8:	beq	111f4 <error@@Base+0x180>
   111bc:	ldr	r0, [pc, #64]	; 11204 <error@@Base+0x190>
   111c0:	add	r0, pc, r0
   111c4:	bl	11124 <error@@Base+0xb0>
   111c8:	ldrb	r3, [r1]
   111cc:	cmp	r3, #114	; 0x72
   111d0:	beq	111e4 <error@@Base+0x170>
   111d4:	ldr	r3, [pc, #44]	; 11208 <error@@Base+0x194>
   111d8:	ldr	r3, [ip, r3]
   111dc:	ldr	r0, [r3]
   111e0:	pop	{r4, r5, r6, pc}
   111e4:	ldr	r3, [pc, #32]	; 1120c <error@@Base+0x198>
   111e8:	ldr	r3, [ip, r3]
   111ec:	ldr	r0, [r3]
   111f0:	pop	{r4, r5, r6, pc}
   111f4:	ldr	r0, [pc, #20]	; 11210 <error@@Base+0x19c>
   111f8:	add	r0, pc, r0
   111fc:	bl	11124 <error@@Base+0xb0>
   11200:	andeq	r1, r1, r8, ror #28
   11204:	muleq	r0, r8, r4
   11208:	muleq	r0, r4, r0
   1120c:	muleq	r0, r0, r0
   11210:	andeq	r1, r0, r8, asr #8
   11214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11218:	sub	sp, sp, #20
   1121c:	mov	r7, r0
   11220:	str	r0, [sp, #8]
   11224:	ldr	r0, [r1]
   11228:	str	r2, [sp, #12]
   1122c:	mov	r9, r1
   11230:	mov	r6, r3
   11234:	bl	10fb8 <abort@plt+0x724>
   11238:	ldr	r5, [pc, #496]	; 11430 <error@@Base+0x3bc>
   1123c:	ldr	r3, [pc, #496]	; 11434 <error@@Base+0x3c0>
   11240:	add	r5, pc, r5
   11244:	ldr	r4, [pc, #492]	; 11438 <error@@Base+0x3c4>
   11248:	ldr	r3, [r5, r3]
   1124c:	add	r4, pc, r4
   11250:	mov	r1, r4
   11254:	str	r0, [r3]
   11258:	mov	r0, #2
   1125c:	bl	10804 <__sysv_signal@plt>
   11260:	mov	r1, r4
   11264:	mov	r0, #15
   11268:	bl	10804 <__sysv_signal@plt>
   1126c:	ldr	fp, [r7]
   11270:	cmp	fp, #1
   11274:	beq	113bc <error@@Base+0x348>
   11278:	mov	r7, #0
   1127c:	ble	113d0 <error@@Base+0x35c>
   11280:	ldr	r3, [pc, #436]	; 1143c <error@@Base+0x3c8>
   11284:	mov	sl, #1
   11288:	add	r3, pc, r3
   1128c:	str	r3, [sp, #4]
   11290:	mov	r4, sl
   11294:	mov	r3, fp
   11298:	b	112bc <error@@Base+0x248>
   1129c:	add	r2, r7, #1
   112a0:	str	r5, [r9, r7, lsl #2]
   112a4:	sxth	r7, r2
   112a8:	add	r4, r4, #1
   112ac:	sxth	r4, r4
   112b0:	cmp	r4, r3
   112b4:	mov	sl, r4
   112b8:	bge	113d0 <error@@Base+0x35c>
   112bc:	ldr	r5, [r9, r4, lsl #2]
   112c0:	lsl	fp, r4, #2
   112c4:	ldrb	r2, [r5]
   112c8:	cmp	r2, #45	; 0x2d
   112cc:	bne	1129c <error@@Base+0x228>
   112d0:	ldrb	r8, [r5, #1]
   112d4:	cmp	r8, #0
   112d8:	beq	1129c <error@@Base+0x228>
   112dc:	mov	r0, r5
   112e0:	str	r3, [sp]
   112e4:	bl	10834 <strlen@plt>
   112e8:	mov	r1, r5
   112ec:	mov	r2, r0
   112f0:	ldr	r0, [sp, #4]
   112f4:	bl	10888 <strncmp@plt>
   112f8:	cmp	r0, #0
   112fc:	beq	11418 <error@@Base+0x3a4>
   11300:	ldr	r3, [sp]
   11304:	add	sl, sl, #1
   11308:	cmp	sl, r3
   1130c:	addlt	fp, r9, fp
   11310:	movge	ip, #0
   11314:	ldrlt	ip, [fp, #4]
   11318:	cmp	r6, #0
   1131c:	beq	11360 <error@@Base+0x2ec>
   11320:	ldrb	r2, [r6]
   11324:	cmp	r2, #0
   11328:	beq	11360 <error@@Base+0x2ec>
   1132c:	cmp	r2, r8
   11330:	beq	11370 <error@@Base+0x2fc>
   11334:	mov	r2, #0
   11338:	b	11344 <error@@Base+0x2d0>
   1133c:	cmp	r8, r0
   11340:	beq	11374 <error@@Base+0x300>
   11344:	add	r2, r2, #1
   11348:	sxth	r2, r2
   1134c:	add	r1, r2, r2, lsl #1
   11350:	ldrb	r0, [r6, r1, lsl #2]
   11354:	add	r1, r6, r1, lsl #2
   11358:	cmp	r0, #0
   1135c:	bne	1133c <error@@Base+0x2c8>
   11360:	ldr	r0, [pc, #216]	; 11440 <error@@Base+0x3cc>
   11364:	mov	r1, r5
   11368:	add	r0, pc, r0
   1136c:	bl	11124 <error@@Base+0xb0>
   11370:	mov	r1, r6
   11374:	ldr	r2, [r1, #4]
   11378:	cmp	r2, #0
   1137c:	beq	113e0 <error@@Base+0x36c>
   11380:	ldrb	r0, [r5, #2]
   11384:	cmp	r0, #0
   11388:	cmpeq	ip, #0
   1138c:	beq	113e0 <error@@Base+0x36c>
   11390:	ldr	r1, [r2]
   11394:	cmp	r1, #0
   11398:	bne	11420 <error@@Base+0x3ac>
   1139c:	cmp	r0, #0
   113a0:	addne	ip, r5, #2
   113a4:	str	ip, [r2]
   113a8:	ldrb	r2, [r5, #2]
   113ac:	cmp	r2, #0
   113b0:	addeq	r4, r4, #1
   113b4:	sxtheq	r4, r4
   113b8:	b	112a8 <error@@Base+0x234>
   113bc:	ldr	r3, [pc, #128]	; 11444 <error@@Base+0x3d0>
   113c0:	ldr	r3, [r5, r3]
   113c4:	ldrb	r7, [r3]
   113c8:	cmp	r7, #0
   113cc:	bne	11418 <error@@Base+0x3a4>
   113d0:	ldr	r3, [sp, #8]
   113d4:	str	r7, [r3]
   113d8:	add	sp, sp, #20
   113dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113e0:	ldr	r3, [r1, #8]
   113e4:	cmp	r3, #0
   113e8:	beq	11360 <error@@Base+0x2ec>
   113ec:	ldrb	r2, [r5, #2]
   113f0:	cmp	r2, #0
   113f4:	bne	11360 <error@@Base+0x2ec>
   113f8:	ldrb	r2, [r3]
   113fc:	cmp	r2, #0
   11400:	bne	11420 <error@@Base+0x3ac>
   11404:	mov	r2, #1
   11408:	strb	r2, [r3]
   1140c:	ldr	r3, [sp, #8]
   11410:	ldr	r3, [r3]
   11414:	b	112a8 <error@@Base+0x234>
   11418:	ldr	r0, [sp, #12]
   1141c:	bl	1100c <abort@plt+0x778>
   11420:	ldr	r0, [pc, #32]	; 11448 <error@@Base+0x3d4>
   11424:	mov	r1, r5
   11428:	add	r0, pc, r0
   1142c:	bl	11124 <error@@Base+0xb0>
   11430:			; <UNDEFINED> instruction: 0x00011db8
   11434:	andeq	r0, r0, r0, lsl #1
   11438:			; <UNDEFINED> instruction: 0xfffffe98
   1143c:	andeq	r1, r0, r4, ror #7
   11440:	andeq	r1, r0, ip, lsl #6
   11444:	andeq	r0, r0, r0, ror r0
   11448:	andeq	r1, r0, ip, asr r2
   1144c:	ldr	ip, [pc, #60]	; 11490 <error@@Base+0x41c>
   11450:	push	{lr}		; (str lr, [sp, #-4]!)
   11454:	add	ip, pc, ip
   11458:	ldr	r2, [pc, #52]	; 11494 <error@@Base+0x420>
   1145c:	ldr	lr, [pc, #52]	; 11498 <error@@Base+0x424>
   11460:	sub	sp, sp, #12
   11464:	mov	r3, r0
   11468:	ldr	lr, [ip, lr]
   1146c:	ldr	r0, [ip, r2]
   11470:	str	r1, [sp]
   11474:	ldr	r1, [pc, #32]	; 1149c <error@@Base+0x428>
   11478:	ldr	r2, [lr]
   1147c:	add	r1, pc, r1
   11480:	ldr	r0, [r0]
   11484:	bl	10840 <fprintf@plt>
   11488:	add	sp, sp, #12
   1148c:	pop	{pc}		; (ldr pc, [sp], #4)
   11490:	andeq	r1, r1, r4, lsr #23
   11494:	andeq	r0, r0, r8, ror r0
   11498:	andeq	r0, r0, r0, lsl #1
   1149c:			; <UNDEFINED> instruction: 0x000011b4
   114a0:	push	{r4, r5, r6, lr}
   114a4:	mov	r2, r0
   114a8:	ldr	r4, [pc, #60]	; 114ec <error@@Base+0x478>
   114ac:	mov	r5, r1
   114b0:	add	r4, pc, r4
   114b4:	mov	r1, #99	; 0x63
   114b8:	mov	r0, r4
   114bc:	bl	107bc <fgets@plt>
   114c0:	cmp	r0, #0
   114c4:	popeq	{r4, r5, r6, pc}
   114c8:	ldr	r1, [pc, #32]	; 114f0 <error@@Base+0x47c>
   114cc:	mov	r2, r5
   114d0:	mov	r0, r4
   114d4:	add	r1, pc, r1
   114d8:	bl	10858 <__isoc99_sscanf@plt>
   114dc:	sub	r0, r0, #1
   114e0:	clz	r0, r0
   114e4:	lsr	r0, r0, #5
   114e8:	pop	{r4, r5, r6, pc}
   114ec:	andeq	r1, r1, r0, lsl #24
   114f0:	andeq	r1, r0, r8, asr #3
   114f4:	push	{r4, r5, r6, lr}
   114f8:	mov	r6, r2
   114fc:	ldr	r4, [pc, #68]	; 11548 <error@@Base+0x4d4>
   11500:	mov	r2, r0
   11504:	add	r4, pc, r4
   11508:	mov	r5, r1
   1150c:	mov	r0, r4
   11510:	mov	r1, #99	; 0x63
   11514:	bl	107bc <fgets@plt>
   11518:	cmp	r0, #0
   1151c:	popeq	{r4, r5, r6, pc}
   11520:	ldr	r1, [pc, #36]	; 1154c <error@@Base+0x4d8>
   11524:	mov	r3, r6
   11528:	mov	r2, r5
   1152c:	mov	r0, r4
   11530:	add	r1, pc, r1
   11534:	bl	10858 <__isoc99_sscanf@plt>
   11538:	sub	r0, r0, #2
   1153c:	clz	r0, r0
   11540:	lsr	r0, r0, #5
   11544:	pop	{r4, r5, r6, pc}
   11548:	andeq	r1, r1, ip, lsr #23
   1154c:	andeq	r1, r0, r8, ror #2
   11550:	ldr	r1, [r1, #8]
   11554:	ldr	r0, [r0, #8]
   11558:	b	10e84 <abort@plt+0x5f0>
   1155c:	ldr	r2, [r1]
   11560:	mov	r3, r0
   11564:	cmp	r2, #0
   11568:	beq	115a0 <error@@Base+0x52c>
   1156c:	ldr	r3, [r1, #4]
   11570:	vmov	s15, r2
   11574:	sub	r3, r2, r3
   11578:	vldr	d5, [pc, #56]	; 115b8 <error@@Base+0x544>
   1157c:	vmov	s14, r3
   11580:	vcvt.f64.s32	d6, s15
   11584:	ldr	r1, [pc, #52]	; 115c0 <error@@Base+0x54c>
   11588:	vcvt.f64.s32	d7, s14
   1158c:	add	r1, pc, r1
   11590:	vmul.f64	d7, d7, d5
   11594:	vdiv.f64	d5, d7, d6
   11598:	vmov	r2, r3, d5
   1159c:	b	10840 <fprintf@plt>
   115a0:	ldr	r0, [pc, #28]	; 115c4 <error@@Base+0x550>
   115a4:	mov	r2, #8
   115a8:	mov	r1, #1
   115ac:	add	r0, pc, r0
   115b0:	b	107ec <fwrite@plt>
   115b4:	nop			; (mov r0, r0)
   115b8:	andeq	r0, r0, r0
   115bc:	subsmi	r0, r9, r0
   115c0:	andeq	r1, r0, r0, lsr #2
   115c4:	strdeq	r1, [r0], -r4
   115c8:	push	{r4, r5, r6, lr}
   115cc:	subs	r4, r1, #0
   115d0:	mov	r5, r0
   115d4:	beq	11610 <error@@Base+0x59c>
   115d8:	ldr	r1, [pc, #76]	; 1162c <error@@Base+0x5b8>
   115dc:	ldm	r4, {r2, r3}
   115e0:	add	r1, pc, r1
   115e4:	bl	10840 <fprintf@plt>
   115e8:	mov	r1, r4
   115ec:	mov	r0, r5
   115f0:	bl	1155c <error@@Base+0x4e8>
   115f4:	ldr	r0, [pc, #52]	; 11630 <error@@Base+0x5bc>
   115f8:	mov	r3, r5
   115fc:	mov	r2, #3
   11600:	mov	r1, #1
   11604:	add	r0, pc, r0
   11608:	pop	{r4, r5, r6, lr}
   1160c:	b	107ec <fwrite@plt>
   11610:	mov	r3, r0
   11614:	ldr	r0, [pc, #24]	; 11634 <error@@Base+0x5c0>
   11618:	mov	r2, #26
   1161c:	mov	r1, #1
   11620:	add	r0, pc, r0
   11624:	bl	107ec <fwrite@plt>
   11628:	b	115f4 <error@@Base+0x580>
   1162c:	ldrdeq	r1, [r0], -r4
   11630:	ldrdeq	r1, [r0], -r8
   11634:	andeq	r1, r0, r0, lsr #1
   11638:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1163c:	mov	r5, r1
   11640:	ldr	r1, [pc, #284]	; 11764 <error@@Base+0x6f0>
   11644:	ldrb	r9, [sp, #32]
   11648:	mov	r6, r0
   1164c:	add	r1, pc, r1
   11650:	mov	r7, r2
   11654:	mov	r2, r3
   11658:	ldrb	sl, [sp, #36]	; 0x24
   1165c:	bl	10840 <fprintf@plt>
   11660:	mov	r0, r6
   11664:	mov	r1, #0
   11668:	bl	115c8 <error@@Base+0x554>
   1166c:	cmp	r9, #0
   11670:	beq	11740 <error@@Base+0x6cc>
   11674:	ldr	r2, [pc, #236]	; 11768 <error@@Base+0x6f4>
   11678:	ldr	r1, [pc, #236]	; 1176c <error@@Base+0x6f8>
   1167c:	add	r2, pc, r2
   11680:	add	r1, pc, r1
   11684:	mov	r0, r6
   11688:	bl	10840 <fprintf@plt>
   1168c:	cmp	r7, #0
   11690:	ble	116e0 <error@@Base+0x66c>
   11694:	ldr	r8, [pc, #212]	; 11770 <error@@Base+0x6fc>
   11698:	mov	r4, #1
   1169c:	add	r8, pc, r8
   116a0:	ldr	r3, [r5, r4, lsl #3]
   116a4:	mov	r0, r6
   116a8:	cmp	r3, #0
   116ac:	add	r1, r5, r4, lsl #3
   116b0:	ble	116c8 <error@@Base+0x654>
   116b4:	bl	115c8 <error@@Base+0x554>
   116b8:	mov	r2, r4
   116bc:	mov	r1, r8
   116c0:	mov	r0, r6
   116c4:	bl	10840 <fprintf@plt>
   116c8:	add	r4, r4, #1
   116cc:	sxth	r4, r4
   116d0:	cmp	r7, r4
   116d4:	bge	116a0 <error@@Base+0x62c>
   116d8:	cmp	r9, #0
   116dc:	beq	11710 <error@@Base+0x69c>
   116e0:	add	r1, r7, #1
   116e4:	ldr	r3, [r5, r1, lsl #3]
   116e8:	add	r1, r5, r1, lsl #3
   116ec:	cmp	r3, #0
   116f0:	ble	11710 <error@@Base+0x69c>
   116f4:	mov	r0, r6
   116f8:	bl	115c8 <error@@Base+0x554>
   116fc:	ldr	r1, [pc, #112]	; 11774 <error@@Base+0x700>
   11700:	mov	r2, r7
   11704:	add	r1, pc, r1
   11708:	mov	r0, r6
   1170c:	bl	10840 <fprintf@plt>
   11710:	cmp	sl, #0
   11714:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11718:	mov	r1, r5
   1171c:	mov	r0, r6
   11720:	bl	115c8 <error@@Base+0x554>
   11724:	ldr	r0, [pc, #76]	; 11778 <error@@Base+0x704>
   11728:	mov	r3, r6
   1172c:	mov	r2, #7
   11730:	mov	r1, #1
   11734:	add	r0, pc, r0
   11738:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1173c:	b	107ec <fwrite@plt>
   11740:	ldr	r2, [pc, #52]	; 1177c <error@@Base+0x708>
   11744:	ldr	r1, [pc, #52]	; 11780 <error@@Base+0x70c>
   11748:	add	r2, pc, r2
   1174c:	add	r1, pc, r1
   11750:	mov	r0, r6
   11754:	bl	10840 <fprintf@plt>
   11758:	cmp	r7, #0
   1175c:	bgt	11694 <error@@Base+0x620>
   11760:	b	11710 <error@@Base+0x69c>
   11764:	muleq	r0, r4, r0
   11768:	andeq	r1, r0, ip, lsl #1
   1176c:	andeq	r0, r0, r0, lsl #31
   11770:	andeq	r1, r0, ip, asr #32
   11774:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11778:	andeq	r0, r0, ip, asr #31
   1177c:	andeq	r0, r0, r8, asr #31
   11780:			; <UNDEFINED> instruction: 0x00000eb4
   11784:	push	{r4, r5, r6, r7, r8, lr}
   11788:	mov	r6, r0
   1178c:	mov	r0, r1
   11790:	add	r5, r1, #4096	; 0x1000
   11794:	mov	r4, r2
   11798:	bl	123a4 <error@@Base+0x1330>
   1179c:	ldr	r2, [pc, #144]	; 11834 <error@@Base+0x7c0>
   117a0:	ldr	r1, [r5, #3952]	; 0xf70
   117a4:	ldr	r0, [r5, #3956]	; 0xf74
   117a8:	add	r2, pc, r2
   117ac:	bl	121b0 <error@@Base+0x113c>
   117b0:	ldr	r1, [pc, #128]	; 11838 <error@@Base+0x7c4>
   117b4:	mov	r2, r4
   117b8:	add	r1, pc, r1
   117bc:	mov	r0, r6
   117c0:	bl	10840 <fprintf@plt>
   117c4:	mov	r0, r6
   117c8:	mov	r1, #0
   117cc:	bl	115c8 <error@@Base+0x554>
   117d0:	mov	r1, r6
   117d4:	mov	r0, #10
   117d8:	bl	10870 <fputc@plt>
   117dc:	ldr	r3, [r5, #3956]	; 0xf74
   117e0:	cmp	r3, #0
   117e4:	pople	{r4, r5, r6, r7, r8, pc}
   117e8:	ldr	r7, [pc, #76]	; 1183c <error@@Base+0x7c8>
   117ec:	mov	r4, #0
   117f0:	add	r7, pc, r7
   117f4:	ldr	r3, [r5, #3952]	; 0xf70
   117f8:	mov	r0, r6
   117fc:	ldr	r1, [r3, r4, lsl #2]
   11800:	add	r1, r1, #12
   11804:	bl	115c8 <error@@Base+0x554>
   11808:	ldr	r3, [r5, #3952]	; 0xf70
   1180c:	mov	r1, r7
   11810:	mov	r0, r6
   11814:	ldr	r3, [r3, r4, lsl #2]
   11818:	add	r4, r4, #1
   1181c:	ldr	r2, [r3, #8]
   11820:	bl	10840 <fprintf@plt>
   11824:	ldr	r3, [r5, #3956]	; 0xf74
   11828:	cmp	r3, r4
   1182c:	bgt	117f4 <error@@Base+0x780>
   11830:	pop	{r4, r5, r6, r7, r8, pc}
   11834:			; <UNDEFINED> instruction: 0xfffffda0
   11838:	andeq	r0, r0, r8, lsr #30
   1183c:	andeq	r0, r0, r0, lsl lr
   11840:	ldr	ip, [r0]
   11844:	ldr	r3, [r0, #4]
   11848:	add	r1, ip, r1
   1184c:	add	r2, r3, r2
   11850:	stm	r0, {r1, r2}
   11854:	bx	lr
   11858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1185c:	mov	r2, r0
   11860:	ldr	r4, [pc, #236]	; 11954 <error@@Base+0x8e0>
   11864:	sub	sp, sp, #20
   11868:	add	r4, pc, r4
   1186c:	mov	r6, r0
   11870:	mov	sl, r1
   11874:	mov	r0, r4
   11878:	mov	r1, #99	; 0x63
   1187c:	bl	107bc <fgets@plt>
   11880:	cmp	r0, #0
   11884:	beq	11940 <error@@Base+0x8cc>
   11888:	mov	r0, r4
   1188c:	mov	r2, r6
   11890:	mov	r1, #99	; 0x63
   11894:	bl	107bc <fgets@plt>
   11898:	cmp	r0, #0
   1189c:	beq	11940 <error@@Base+0x8cc>
   118a0:	ldr	r4, [pc, #176]	; 11958 <error@@Base+0x8e4>
   118a4:	ldr	fp, [pc, #176]	; 1195c <error@@Base+0x8e8>
   118a8:	mov	r3, #0
   118ac:	add	r4, pc, r4
   118b0:	str	r3, [sp, #4]
   118b4:	add	r4, r4, #29
   118b8:	mov	r5, r3
   118bc:	add	r9, sp, #12
   118c0:	add	r8, sp, #8
   118c4:	mov	r7, #10
   118c8:	add	fp, pc, fp
   118cc:	b	118e4 <error@@Base+0x870>
   118d0:	ldr	r1, [sp, #8]
   118d4:	lsl	r3, r3, #3
   118d8:	add	r0, sl, r3
   118dc:	ldr	r2, [sp, #12]
   118e0:	bl	11840 <error@@Base+0x7cc>
   118e4:	mov	r2, r9
   118e8:	mov	r1, r8
   118ec:	mov	r0, r6
   118f0:	bl	114f4 <error@@Base+0x480>
   118f4:	mov	r2, r7
   118f8:	mov	r1, r5
   118fc:	cmp	r0, #0
   11900:	mov	r0, r4
   11904:	beq	11948 <error@@Base+0x8d4>
   11908:	bl	1078c <strtol@plt>
   1190c:	mov	r1, fp
   11910:	subs	r3, r0, #0
   11914:	mov	r0, r4
   11918:	bne	118d0 <error@@Base+0x85c>
   1191c:	bl	10780 <strcmp@plt>
   11920:	mov	r3, r5
   11924:	cmp	r0, #0
   11928:	movne	r3, #88	; 0x58
   1192c:	ldreq	r2, [sp, #8]
   11930:	ldrne	r1, [sp, #8]
   11934:	streq	r2, [sp, #4]
   11938:	moveq	r1, r2
   1193c:	b	118d8 <error@@Base+0x864>
   11940:	mov	r3, #0
   11944:	str	r3, [sp, #4]
   11948:	ldr	r0, [sp, #4]
   1194c:	add	sp, sp, #20
   11950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11954:	andeq	r1, r1, r8, asr #16
   11958:	andeq	r1, r1, r4, lsl #16
   1195c:	andeq	r0, r0, r8, lsr lr
   11960:	push	{r4, r5, r6, r7, r8, lr}
   11964:	mov	r5, r2
   11968:	mov	r6, r3
   1196c:	mov	r7, r0
   11970:	mov	r8, r1
   11974:	bl	12218 <error@@Base+0x11a4>
   11978:	subs	r4, r0, #0
   1197c:	beq	11994 <error@@Base+0x920>
   11980:	mov	r2, r6
   11984:	mov	r1, r5
   11988:	add	r0, r4, #12
   1198c:	pop	{r4, r5, r6, r7, r8, lr}
   11990:	b	11840 <error@@Base+0x7cc>
   11994:	mov	r1, #20
   11998:	mov	r0, #1
   1199c:	bl	110cc <error@@Base+0x58>
   119a0:	mov	r4, r0
   119a4:	mov	r0, r8
   119a8:	bl	107c8 <strdup@plt>
   119ac:	mov	r1, r4
   119b0:	str	r0, [r4, #8]
   119b4:	mov	r0, r7
   119b8:	bl	1229c <error@@Base+0x1228>
   119bc:	b	11980 <error@@Base+0x90c>
   119c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   119c4:	mov	r2, r0
   119c8:	ldr	r4, [pc, #148]	; 11a64 <error@@Base+0x9f0>
   119cc:	sub	sp, sp, #8
   119d0:	add	r4, pc, r4
   119d4:	mov	r5, r0
   119d8:	mov	r8, r1
   119dc:	mov	r0, r4
   119e0:	mov	r1, #99	; 0x63
   119e4:	bl	107bc <fgets@plt>
   119e8:	cmp	r0, #0
   119ec:	beq	11a5c <error@@Base+0x9e8>
   119f0:	mov	r0, r4
   119f4:	mov	r2, r5
   119f8:	mov	r1, #99	; 0x63
   119fc:	bl	107bc <fgets@plt>
   11a00:	cmp	r0, #0
   11a04:	beq	11a5c <error@@Base+0x9e8>
   11a08:	ldr	r4, [pc, #88]	; 11a68 <error@@Base+0x9f4>
   11a0c:	add	r7, sp, #4
   11a10:	add	r4, pc, r4
   11a14:	add	sl, r4, #29
   11a18:	mov	r6, sp
   11a1c:	mov	r9, #0
   11a20:	b	11a40 <error@@Base+0x9cc>
   11a24:	bl	10834 <strlen@plt>
   11a28:	ldm	sp, {r2, r3}
   11a2c:	mov	r1, sl
   11a30:	add	ip, r4, r0
   11a34:	mov	r0, r8
   11a38:	strb	r9, [ip, #-1]
   11a3c:	bl	11960 <error@@Base+0x8ec>
   11a40:	mov	r2, r7
   11a44:	mov	r1, r6
   11a48:	mov	r0, r5
   11a4c:	bl	114f4 <error@@Base+0x480>
   11a50:	cmp	r0, #0
   11a54:	mov	r0, r4
   11a58:	bne	11a24 <error@@Base+0x9b0>
   11a5c:	add	sp, sp, #8
   11a60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a64:	andeq	r1, r1, r0, ror #13
   11a68:	andeq	r1, r1, r0, lsr #13
   11a6c:	push	{r4, r5, r6, r7, lr}
   11a70:	mov	r7, r1
   11a74:	ldr	r1, [pc, #392]	; 11c04 <error@@Base+0xb90>
   11a78:	sub	sp, sp, #12
   11a7c:	add	r1, pc, r1
   11a80:	mov	r6, r0
   11a84:	mov	r0, r7
   11a88:	bl	11184 <error@@Base+0x110>
   11a8c:	ldr	r5, [pc, #372]	; 11c08 <error@@Base+0xb94>
   11a90:	mov	r1, #99	; 0x63
   11a94:	add	r5, pc, r5
   11a98:	mov	r2, r0
   11a9c:	mov	r4, r0
   11aa0:	mov	r0, r5
   11aa4:	bl	107bc <fgets@plt>
   11aa8:	cmp	r0, #0
   11aac:	beq	11be0 <error@@Base+0xb6c>
   11ab0:	ldr	r1, [pc, #340]	; 11c0c <error@@Base+0xb98>
   11ab4:	mov	r2, #45	; 0x2d
   11ab8:	add	r1, pc, r1
   11abc:	mov	r0, r5
   11ac0:	bl	10888 <strncmp@plt>
   11ac4:	cmp	r0, #0
   11ac8:	bne	11be0 <error@@Base+0xb6c>
   11acc:	mov	r2, r4
   11ad0:	mov	r1, #99	; 0x63
   11ad4:	mov	r0, r5
   11ad8:	bl	107bc <fgets@plt>
   11adc:	cmp	r0, #0
   11ae0:	beq	11be0 <error@@Base+0xb6c>
   11ae4:	ldr	r1, [pc, #292]	; 11c10 <error@@Base+0xb9c>
   11ae8:	mov	r0, r5
   11aec:	add	r1, pc, r1
   11af0:	bl	10780 <strcmp@plt>
   11af4:	cmp	r0, #0
   11af8:	bne	11be0 <error@@Base+0xb6c>
   11afc:	mov	r1, sp
   11b00:	mov	r0, r4
   11b04:	bl	114a0 <error@@Base+0x42c>
   11b08:	cmp	r0, #0
   11b0c:	beq	11be0 <error@@Base+0xb6c>
   11b10:	add	r1, sp, #4
   11b14:	mov	r0, r4
   11b18:	bl	114a0 <error@@Base+0x42c>
   11b1c:	cmp	r0, #0
   11b20:	beq	11be0 <error@@Base+0xb6c>
   11b24:	mov	r2, r4
   11b28:	mov	r1, #99	; 0x63
   11b2c:	mov	r0, r5
   11b30:	bl	107bc <fgets@plt>
   11b34:	cmp	r0, #0
   11b38:	beq	11be0 <error@@Base+0xb6c>
   11b3c:	mov	r0, r5
   11b40:	mov	r2, r4
   11b44:	mov	r1, #99	; 0x63
   11b48:	bl	107bc <fgets@plt>
   11b4c:	cmp	r0, #0
   11b50:	beq	11be0 <error@@Base+0xb6c>
   11b54:	ldm	sp, {r1, r2}
   11b58:	mov	r0, r6
   11b5c:	bl	11840 <error@@Base+0x7cc>
   11b60:	add	r1, r6, #8
   11b64:	mov	r0, r4
   11b68:	bl	11858 <error@@Base+0x7e4>
   11b6c:	add	r1, r6, #416	; 0x1a0
   11b70:	mov	r7, r0
   11b74:	mov	r0, r4
   11b78:	bl	11858 <error@@Base+0x7e4>
   11b7c:	add	r1, r6, #824	; 0x338
   11b80:	mov	r5, r0
   11b84:	mov	r0, r4
   11b88:	bl	11858 <error@@Base+0x7e4>
   11b8c:	ldr	r3, [sp]
   11b90:	cmp	r3, #0
   11b94:	ble	11bd0 <error@@Base+0xb5c>
   11b98:	add	r1, r6, #920	; 0x398
   11b9c:	mov	r0, r4
   11ba0:	bl	11858 <error@@Base+0x7e4>
   11ba4:	cmp	r7, #0
   11ba8:	ble	11bb8 <error@@Base+0xb44>
   11bac:	add	r1, r6, #992	; 0x3e0
   11bb0:	mov	r0, r4
   11bb4:	bl	119c0 <error@@Base+0x94c>
   11bb8:	cmp	r5, #0
   11bbc:	ble	11bd0 <error@@Base+0xb5c>
   11bc0:	add	r1, r6, #9024	; 0x2340
   11bc4:	add	r1, r1, #24
   11bc8:	mov	r0, r4
   11bcc:	bl	119c0 <error@@Base+0x94c>
   11bd0:	mov	r0, r4
   11bd4:	bl	10f18 <abort@plt+0x684>
   11bd8:	add	sp, sp, #12
   11bdc:	pop	{r4, r5, r6, r7, pc}
   11be0:	cmp	r7, #0
   11be4:	beq	11bf8 <error@@Base+0xb84>
   11be8:	ldr	r0, [pc, #36]	; 11c14 <error@@Base+0xba0>
   11bec:	mov	r1, r7
   11bf0:	add	r0, pc, r0
   11bf4:	bl	11124 <error@@Base+0xb0>
   11bf8:	ldr	r7, [pc, #24]	; 11c18 <error@@Base+0xba4>
   11bfc:	add	r7, pc, r7
   11c00:	b	11be8 <error@@Base+0xb74>
   11c04:	andeq	r0, r0, r4, lsr #25
   11c08:	andeq	r1, r1, ip, lsl r6
   11c0c:	andeq	r0, r0, ip, ror #24
   11c10:	andeq	r0, r0, r8, ror #24
   11c14:	muleq	r0, r4, fp
   11c18:	andeq	r0, r0, ip, lsl fp
   11c1c:	mov	r3, r1
   11c20:	ldr	r1, [pc, #360]	; 11d90 <error@@Base+0xd1c>
   11c24:	push	{r4, r5, r6, r7, r8, lr}
   11c28:	add	r1, pc, r1
   11c2c:	sub	sp, sp, #8
   11c30:	mov	r4, r0
   11c34:	mov	r0, r3
   11c38:	bl	11184 <error@@Base+0x110>
   11c3c:	ldr	r3, [pc, #336]	; 11d94 <error@@Base+0xd20>
   11c40:	ldr	r2, [pc, #336]	; 11d98 <error@@Base+0xd24>
   11c44:	ldr	r1, [pc, #336]	; 11d9c <error@@Base+0xd28>
   11c48:	add	r3, pc, r3
   11c4c:	add	r2, pc, r2
   11c50:	add	r1, pc, r1
   11c54:	ldr	r8, [pc, #324]	; 11da0 <error@@Base+0xd2c>
   11c58:	mov	r7, #0
   11c5c:	add	r8, pc, r8
   11c60:	mov	r5, r0
   11c64:	bl	10840 <fprintf@plt>
   11c68:	ldr	r1, [pc, #308]	; 11da4 <error@@Base+0xd30>
   11c6c:	ldr	r2, [r4]
   11c70:	add	r1, pc, r1
   11c74:	mov	r0, r5
   11c78:	bl	10840 <fprintf@plt>
   11c7c:	ldr	r1, [pc, #292]	; 11da8 <error@@Base+0xd34>
   11c80:	ldr	r2, [r4, #4]
   11c84:	add	r1, pc, r1
   11c88:	mov	r0, r5
   11c8c:	bl	10840 <fprintf@plt>
   11c90:	mov	r1, r4
   11c94:	mov	r0, r5
   11c98:	bl	1155c <error@@Base+0x4e8>
   11c9c:	ldr	r0, [pc, #264]	; 11dac <error@@Base+0xd38>
   11ca0:	mov	r1, #1
   11ca4:	mov	r6, r1
   11ca8:	mov	r3, r5
   11cac:	mov	r2, #12
   11cb0:	add	r0, pc, r0
   11cb4:	bl	107ec <fwrite@plt>
   11cb8:	add	r1, r4, #8
   11cbc:	mov	r0, r5
   11cc0:	mov	r3, r8
   11cc4:	mov	r2, #50	; 0x32
   11cc8:	str	r6, [sp, #4]
   11ccc:	str	r7, [sp]
   11cd0:	bl	11638 <error@@Base+0x5c4>
   11cd4:	ldr	r3, [pc, #212]	; 11db0 <error@@Base+0xd3c>
   11cd8:	add	r1, r4, #416	; 0x1a0
   11cdc:	mov	r0, r5
   11ce0:	add	r3, pc, r3
   11ce4:	mov	r2, #50	; 0x32
   11ce8:	str	r6, [sp, #4]
   11cec:	str	r7, [sp]
   11cf0:	bl	11638 <error@@Base+0x5c4>
   11cf4:	ldr	r3, [pc, #184]	; 11db4 <error@@Base+0xd40>
   11cf8:	str	r6, [sp, #4]
   11cfc:	add	r3, pc, r3
   11d00:	str	r6, [sp]
   11d04:	add	r1, r4, #824	; 0x338
   11d08:	mov	r0, r5
   11d0c:	mov	r2, #10
   11d10:	bl	11638 <error@@Base+0x5c4>
   11d14:	ldr	r3, [r4]
   11d18:	cmp	r3, r7
   11d1c:	ble	11d80 <error@@Base+0xd0c>
   11d20:	ldr	r3, [pc, #144]	; 11db8 <error@@Base+0xd44>
   11d24:	str	r7, [sp, #4]
   11d28:	add	r3, pc, r3
   11d2c:	str	r7, [sp]
   11d30:	mov	r2, #8
   11d34:	add	r1, r4, #920	; 0x398
   11d38:	mov	r0, r5
   11d3c:	bl	11638 <error@@Base+0x5c4>
   11d40:	ldr	r3, [r4, #8]
   11d44:	cmp	r3, r7
   11d48:	ble	11d5c <error@@Base+0xce8>
   11d4c:	mov	r2, r8
   11d50:	add	r1, r4, #992	; 0x3e0
   11d54:	mov	r0, r5
   11d58:	bl	11784 <error@@Base+0x710>
   11d5c:	ldr	r3, [r4, #416]	; 0x1a0
   11d60:	cmp	r3, #0
   11d64:	ble	11d80 <error@@Base+0xd0c>
   11d68:	ldr	r2, [pc, #76]	; 11dbc <error@@Base+0xd48>
   11d6c:	add	r1, r4, #9024	; 0x2340
   11d70:	add	r1, r1, #24
   11d74:	add	r2, pc, r2
   11d78:	mov	r0, r5
   11d7c:	bl	11784 <error@@Base+0x710>
   11d80:	mov	r0, r5
   11d84:	add	sp, sp, #8
   11d88:	pop	{r4, r5, r6, r7, r8, lr}
   11d8c:	b	10f18 <abort@plt+0x684>
   11d90:	andeq	r0, r0, r0, ror fp
   11d94:	andeq	r0, r0, ip, lsl #22
   11d98:	ldrdeq	r0, [r0], -r8
   11d9c:	andeq	r0, r0, ip, asr #22
   11da0:	andeq	r0, r0, r0, lsl #23
   11da4:	andeq	r0, r0, r4, lsr fp
   11da8:	andeq	r0, r0, r0, lsr fp
   11dac:	andeq	r0, r0, ip, lsl fp
   11db0:	andeq	r0, r0, r8, lsl #22
   11db4:	strdeq	r0, [r0], -ip
   11db8:	andeq	r0, r0, r8, ror #21
   11dbc:	andeq	r0, r0, r4, ror sl
   11dc0:	mov	r3, #0
   11dc4:	str	r3, [r0, #4]
   11dc8:	str	r3, [r0]
   11dcc:	str	r3, [r0, #8]
   11dd0:	str	r3, [r0, #12]
   11dd4:	bx	lr
   11dd8:	ldr	r3, [r0]
   11ddc:	mov	r2, #0
   11de0:	cmp	r3, r2
   11de4:	push	{r4, lr}
   11de8:	mov	r4, r0
   11dec:	stm	r1, {r2, r3}
   11df0:	str	r1, [r0]
   11df4:	streq	r1, [r0, #4]
   11df8:	ldr	r0, [r0, #8]
   11dfc:	strne	r1, [r3]
   11e00:	cmp	r0, #0
   11e04:	beq	11e14 <error@@Base+0xda0>
   11e08:	bl	107b0 <free@plt>
   11e0c:	mov	r3, #0
   11e10:	str	r3, [r4, #8]
   11e14:	ldr	r3, [r4, #12]
   11e18:	add	r3, r3, #1
   11e1c:	str	r3, [r4, #12]
   11e20:	pop	{r4, pc}
   11e24:	ldr	r3, [r0, #4]
   11e28:	mov	r2, #0
   11e2c:	cmp	r3, r2
   11e30:	push	{r4, lr}
   11e34:	mov	r4, r0
   11e38:	str	r3, [r1]
   11e3c:	str	r2, [r1, #4]
   11e40:	streq	r1, [r0]
   11e44:	ldr	r0, [r0, #8]
   11e48:	strne	r1, [r3, #4]
   11e4c:	cmp	r0, #0
   11e50:	str	r1, [r4, #4]
   11e54:	beq	11e64 <error@@Base+0xdf0>
   11e58:	bl	107b0 <free@plt>
   11e5c:	mov	r3, #0
   11e60:	str	r3, [r4, #8]
   11e64:	ldr	r3, [r4, #12]
   11e68:	add	r3, r3, #1
   11e6c:	str	r3, [r4, #12]
   11e70:	pop	{r4, pc}
   11e74:	ldr	r3, [r2]
   11e78:	push	{r4, lr}
   11e7c:	cmp	r3, #0
   11e80:	str	r3, [r1]
   11e84:	str	r2, [r1, #4]
   11e88:	mov	r4, r0
   11e8c:	streq	r1, [r0]
   11e90:	ldr	r0, [r0, #8]
   11e94:	strne	r1, [r3, #4]
   11e98:	cmp	r0, #0
   11e9c:	str	r1, [r2]
   11ea0:	beq	11eb0 <error@@Base+0xe3c>
   11ea4:	bl	107b0 <free@plt>
   11ea8:	mov	r3, #0
   11eac:	str	r3, [r4, #8]
   11eb0:	ldr	r3, [r4, #12]
   11eb4:	add	r3, r3, #1
   11eb8:	str	r3, [r4, #12]
   11ebc:	pop	{r4, pc}
   11ec0:	ldr	r3, [r1, #4]
   11ec4:	push	{r4, lr}
   11ec8:	cmp	r3, #0
   11ecc:	stm	r2, {r1, r3}
   11ed0:	mov	r4, r0
   11ed4:	str	r2, [r1, #4]
   11ed8:	streq	r2, [r0, #4]
   11edc:	ldr	r0, [r0, #8]
   11ee0:	strne	r2, [r3]
   11ee4:	cmp	r0, #0
   11ee8:	beq	11ef8 <error@@Base+0xe84>
   11eec:	bl	107b0 <free@plt>
   11ef0:	mov	r3, #0
   11ef4:	str	r3, [r4, #8]
   11ef8:	ldr	r3, [r4, #12]
   11efc:	add	r3, r3, #1
   11f00:	str	r3, [r4, #12]
   11f04:	pop	{r4, pc}
   11f08:	ldr	r3, [r1]
   11f0c:	ldr	r2, [r1, #4]
   11f10:	cmp	r3, #0
   11f14:	push	{r4, r5, r6, lr}
   11f18:	mov	r4, r0
   11f1c:	strne	r2, [r3, #4]
   11f20:	ldrne	r2, [r1, #4]
   11f24:	streq	r2, [r0]
   11f28:	cmp	r2, #0
   11f2c:	streq	r3, [r0, #4]
   11f30:	ldr	r0, [r0, #8]
   11f34:	mov	r5, #0
   11f38:	strne	r3, [r2]
   11f3c:	cmp	r0, r5
   11f40:	str	r5, [r1, #4]
   11f44:	str	r5, [r1]
   11f48:	beq	11f54 <error@@Base+0xee0>
   11f4c:	bl	107b0 <free@plt>
   11f50:	str	r5, [r4, #8]
   11f54:	ldr	r3, [r4, #12]
   11f58:	sub	r3, r3, #1
   11f5c:	str	r3, [r4, #12]
   11f60:	pop	{r4, r5, r6, pc}
   11f64:	ldr	r3, [r0, #8]
   11f68:	cmp	r3, #0
   11f6c:	bxne	lr
   11f70:	ldr	r3, [r0, #12]
   11f74:	cmp	r3, #0
   11f78:	bxeq	lr
   11f7c:	push	{r4, lr}
   11f80:	mov	r1, #4
   11f84:	mov	r4, r0
   11f88:	mov	r0, r3
   11f8c:	bl	110cc <error@@Base+0x58>
   11f90:	ldr	r3, [r4]
   11f94:	cmp	r3, #0
   11f98:	str	r0, [r4, #8]
   11f9c:	popeq	{r4, pc}
   11fa0:	sub	r0, r0, #4
   11fa4:	str	r3, [r0, #4]!
   11fa8:	ldr	r3, [r3, #4]
   11fac:	cmp	r3, #0
   11fb0:	bne	11fa4 <error@@Base+0xf30>
   11fb4:	pop	{r4, pc}
   11fb8:	push	{r4, r5, r6, lr}
   11fbc:	ldr	r4, [r0]
   11fc0:	cmp	r4, #0
   11fc4:	popeq	{r4, r5, r6, pc}
   11fc8:	mov	r5, r0
   11fcc:	mov	r6, r1
   11fd0:	mov	r1, r4
   11fd4:	mov	r0, r5
   11fd8:	bl	11f08 <error@@Base+0xe94>
   11fdc:	mov	r0, r4
   11fe0:	blx	r6
   11fe4:	ldr	r4, [r5]
   11fe8:	cmp	r4, #0
   11fec:	bne	11fd0 <error@@Base+0xf5c>
   11ff0:	pop	{r4, r5, r6, pc}
   11ff4:	ldr	r2, [pc, #420]	; 121a0 <error@@Base+0x112c>
   11ff8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ffc:	sub	sp, sp, #28
   12000:	add	r2, pc, r2
   12004:	ldr	r9, [pc, #408]	; 121a4 <error@@Base+0x1130>
   12008:	ldr	r8, [pc, #408]	; 121a8 <error@@Base+0x1134>
   1200c:	str	r2, [sp, #16]
   12010:	ldr	r2, [pc, #404]	; 121ac <error@@Base+0x1138>
   12014:	add	r9, pc, r9
   12018:	add	r8, pc, r8
   1201c:	add	r2, pc, r2
   12020:	lsl	r3, r1, #2
   12024:	str	r1, [sp, #12]
   12028:	str	r2, [sp, #4]
   1202c:	str	r0, [sp, #8]
   12030:	str	r3, [sp, #20]
   12034:	ldr	r3, [sp, #16]
   12038:	ldr	r2, [sp, #12]
   1203c:	ldr	r1, [r3]
   12040:	ldr	r3, [sp, #8]
   12044:	cmp	r3, r2
   12048:	ldr	r7, [r1, r3, lsl #2]
   1204c:	bge	12184 <error@@Base+0x1110>
   12050:	ldr	r4, [sp, #8]
   12054:	ldr	r5, [sp, #12]
   12058:	lsl	r6, r5, #2
   1205c:	b	12064 <error@@Base+0xff0>
   12060:	ldr	r1, [r9]
   12064:	ldr	r1, [r1, r6]
   12068:	ldr	r3, [r9, #4]
   1206c:	mov	r0, r7
   12070:	blx	r3
   12074:	cmp	r0, #0
   12078:	bge	120d0 <error@@Base+0x105c>
   1207c:	sub	r5, r5, #1
   12080:	cmp	r5, r4
   12084:	sub	r6, r6, #4
   12088:	bgt	12060 <error@@Base+0xfec>
   1208c:	bne	120cc <error@@Base+0x1058>
   12090:	ldr	r1, [r9]
   12094:	mov	fp, r5
   12098:	add	r0, r1, fp, lsl #2
   1209c:	ldr	r3, [sp, #8]
   120a0:	sub	r1, fp, #1
   120a4:	cmp	r3, r1
   120a8:	str	r7, [r0]
   120ac:	blt	12168 <error@@Base+0x10f4>
   120b0:	ldr	r2, [sp, #12]
   120b4:	add	r3, r5, #1
   120b8:	cmp	r3, r2
   120bc:	str	r3, [sp, #8]
   120c0:	blt	12034 <error@@Base+0xfc0>
   120c4:	add	sp, sp, #28
   120c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120cc:	lsl	r6, r5, #2
   120d0:	ldr	r3, [sp, #4]
   120d4:	add	sl, r4, #1
   120d8:	cmp	sl, r5
   120dc:	ldr	r1, [r3]
   120e0:	add	r0, r1, r6
   120e4:	ldr	r2, [r1, r6]
   120e8:	str	r2, [r1, r4, lsl #2]
   120ec:	lsl	r4, r4, #2
   120f0:	bge	12174 <error@@Base+0x1100>
   120f4:	add	fp, r4, #4
   120f8:	b	12110 <error@@Base+0x109c>
   120fc:	add	sl, sl, #1
   12100:	cmp	sl, r5
   12104:	add	fp, fp, #4
   12108:	beq	12154 <error@@Base+0x10e0>
   1210c:	ldr	r1, [r8]
   12110:	ldr	r1, [r1, fp]
   12114:	ldr	r3, [r8, #4]
   12118:	mov	r0, r7
   1211c:	blx	r3
   12120:	cmp	r0, #0
   12124:	bgt	120fc <error@@Base+0x1088>
   12128:	ldr	r1, [r8]
   1212c:	mov	r4, sl
   12130:	add	r0, r1, r6
   12134:	sub	r5, r5, #1
   12138:	ldr	r2, [r1, fp]
   1213c:	cmp	r5, sl
   12140:	str	r2, [r0]
   12144:	bgt	12058 <error@@Base+0xfe4>
   12148:	mov	fp, r5
   1214c:	mov	r5, r4
   12150:	b	12098 <error@@Base+0x1024>
   12154:	ldr	r0, [r8]
   12158:	mov	fp, sl
   1215c:	add	r0, r0, r6
   12160:	mov	r5, fp
   12164:	b	1209c <error@@Base+0x1028>
   12168:	mov	r0, r3
   1216c:	bl	11ff4 <error@@Base+0xf80>
   12170:	b	120b0 <error@@Base+0x103c>
   12174:	beq	12198 <error@@Base+0x1124>
   12178:	lsl	fp, sl, #2
   1217c:	mov	r4, sl
   12180:	b	12134 <error@@Base+0x10c0>
   12184:	ldr	r3, [sp, #20]
   12188:	mov	fp, r2
   1218c:	add	r0, r1, r3
   12190:	ldr	r5, [sp, #8]
   12194:	b	1209c <error@@Base+0x1028>
   12198:	mov	fp, sl
   1219c:	b	12160 <error@@Base+0x10ec>
   121a0:	andeq	r1, r1, r4, lsl r1
   121a4:	andeq	r1, r1, r0, lsl #2
   121a8:	strdeq	r1, [r1], -ip
   121ac:	strdeq	r1, [r1], -r8
   121b0:	cmp	r0, #1
   121b4:	mov	ip, r1
   121b8:	bxle	lr
   121bc:	ldr	r3, [pc, #20]	; 121d8 <error@@Base+0x1164>
   121c0:	sub	r1, r0, #1
   121c4:	add	r3, pc, r3
   121c8:	mov	r0, #0
   121cc:	str	ip, [r3]
   121d0:	str	r2, [r3, #4]
   121d4:	b	11ff4 <error@@Base+0xf80>
   121d8:	andeq	r0, r1, r0, asr pc
   121dc:	push	{r4, r5, r6, lr}
   121e0:	add	r5, r0, #8000	; 0x1f40
   121e4:	mov	r6, r0
   121e8:	add	r5, r5, #48	; 0x30
   121ec:	mov	r4, r0
   121f0:	mov	r0, r4
   121f4:	add	r4, r4, #16
   121f8:	bl	11dc0 <error@@Base+0xd4c>
   121fc:	cmp	r4, r5
   12200:	bne	121f0 <error@@Base+0x117c>
   12204:	add	r6, r6, #4096	; 0x1000
   12208:	mov	r3, #0
   1220c:	str	r3, [r6, #3952]	; 0xf70
   12210:	str	r3, [r6, #3956]	; 0xf74
   12214:	pop	{r4, r5, r6, pc}
   12218:	push	{r4, r5, r6, lr}
   1221c:	mov	r5, r1
   12220:	ldrb	r3, [r1]
   12224:	cmp	r3, #0
   12228:	beq	12260 <error@@Base+0x11ec>
   1222c:	mov	r2, #0
   12230:	add	r2, r2, r3
   12234:	ldrb	r3, [r1, #1]!
   12238:	cmp	r3, #0
   1223c:	bne	12230 <error@@Base+0x11bc>
   12240:	ldr	r1, [pc, #80]	; 12298 <error@@Base+0x1224>
   12244:	asr	r3, r2, #31
   12248:	smull	ip, r1, r1, r2
   1224c:	add	r1, r1, r2
   12250:	rsb	r3, r3, r1, asr #8
   12254:	rsb	r1, r3, r3, lsl #6
   12258:	rsb	r3, r3, r1, lsl #3
   1225c:	sub	r3, r2, r3
   12260:	ldr	r4, [r0, r3, lsl #4]
   12264:	cmp	r4, #0
   12268:	bne	1227c <error@@Base+0x1208>
   1226c:	b	12290 <error@@Base+0x121c>
   12270:	ldr	r4, [r4, #4]
   12274:	cmp	r4, #0
   12278:	beq	12290 <error@@Base+0x121c>
   1227c:	ldr	r1, [r4, #8]
   12280:	mov	r0, r5
   12284:	bl	10780 <strcmp@plt>
   12288:	cmp	r0, #0
   1228c:	bne	12270 <error@@Base+0x11fc>
   12290:	mov	r0, r4
   12294:	pop	{r4, r5, r6, pc}
   12298:	subhi	r4, sl, #1552	; 0x610
   1229c:	ldr	ip, [r1, #8]
   122a0:	push	{r4, lr}
   122a4:	ldrb	r3, [ip]
   122a8:	cmp	r3, #0
   122ac:	beq	122e8 <error@@Base+0x1274>
   122b0:	mov	r2, #0
   122b4:	add	r2, r2, r3
   122b8:	ldrb	r3, [ip, #1]!
   122bc:	cmp	r3, #0
   122c0:	bne	122b4 <error@@Base+0x1240>
   122c4:	ldr	ip, [pc, #80]	; 1231c <error@@Base+0x12a8>
   122c8:	asr	r3, r2, #31
   122cc:	smull	lr, ip, ip, r2
   122d0:	add	ip, ip, r2
   122d4:	rsb	r3, r3, ip, asr #8
   122d8:	rsb	ip, r3, r3, lsl #6
   122dc:	rsb	r3, r3, ip, lsl #3
   122e0:	sub	r3, r2, r3
   122e4:	lsl	r3, r3, #4
   122e8:	add	r4, r0, #4096	; 0x1000
   122ec:	add	r0, r0, r3
   122f0:	bl	11dd8 <error@@Base+0xd64>
   122f4:	ldr	r0, [r4, #3952]	; 0xf70
   122f8:	cmp	r0, #0
   122fc:	beq	1230c <error@@Base+0x1298>
   12300:	bl	107b0 <free@plt>
   12304:	mov	r3, #0
   12308:	str	r3, [r4, #3952]	; 0xf70
   1230c:	ldr	r3, [r4, #3956]	; 0xf74
   12310:	add	r3, r3, #1
   12314:	str	r3, [r4, #3956]	; 0xf74
   12318:	pop	{r4, pc}
   1231c:	subhi	r4, sl, #1552	; 0x610
   12320:	ldr	ip, [r1, #8]
   12324:	push	{r4, lr}
   12328:	ldrb	r3, [ip]
   1232c:	cmp	r3, #0
   12330:	beq	1236c <error@@Base+0x12f8>
   12334:	mov	r2, #0
   12338:	add	r2, r2, r3
   1233c:	ldrb	r3, [ip, #1]!
   12340:	cmp	r3, #0
   12344:	bne	12338 <error@@Base+0x12c4>
   12348:	ldr	ip, [pc, #80]	; 123a0 <error@@Base+0x132c>
   1234c:	asr	r3, r2, #31
   12350:	smull	lr, ip, ip, r2
   12354:	add	ip, ip, r2
   12358:	rsb	r3, r3, ip, asr #8
   1235c:	rsb	ip, r3, r3, lsl #6
   12360:	rsb	r3, r3, ip, lsl #3
   12364:	sub	r3, r2, r3
   12368:	lsl	r3, r3, #4
   1236c:	add	r4, r0, #4096	; 0x1000
   12370:	add	r0, r0, r3
   12374:	bl	11f08 <error@@Base+0xe94>
   12378:	ldr	r0, [r4, #3952]	; 0xf70
   1237c:	cmp	r0, #0
   12380:	beq	12390 <error@@Base+0x131c>
   12384:	bl	107b0 <free@plt>
   12388:	mov	r3, #0
   1238c:	str	r3, [r4, #3952]	; 0xf70
   12390:	ldr	r3, [r4, #3956]	; 0xf74
   12394:	sub	r3, r3, #1
   12398:	str	r3, [r4, #3956]	; 0xf74
   1239c:	pop	{r4, pc}
   123a0:	subhi	r4, sl, #1552	; 0x610
   123a4:	push	{r4, r5, r6, lr}
   123a8:	add	r6, r0, #4096	; 0x1000
   123ac:	ldr	r4, [r6, #3952]	; 0xf70
   123b0:	cmp	r4, #0
   123b4:	popne	{r4, r5, r6, pc}
   123b8:	ldr	r3, [r6, #3956]	; 0xf74
   123bc:	cmp	r3, #0
   123c0:	popeq	{r4, r5, r6, pc}
   123c4:	mov	r5, r0
   123c8:	mov	r1, #4
   123cc:	mov	r0, r3
   123d0:	bl	110cc <error@@Base+0x58>
   123d4:	ldr	lr, [pc, #60]	; 12418 <error@@Base+0x13a4>
   123d8:	mov	r2, r4
   123dc:	mov	ip, r4
   123e0:	str	r0, [r6, #3952]	; 0xf70
   123e4:	ldr	r3, [r5, ip, lsl #4]
   123e8:	cmp	r3, #0
   123ec:	beq	12408 <error@@Base+0x1394>
   123f0:	add	r1, r0, r2, lsl #2
   123f4:	str	r3, [r1], #4
   123f8:	ldr	r3, [r3, #4]
   123fc:	add	r2, r2, #1
   12400:	cmp	r3, #0
   12404:	bne	123f4 <error@@Base+0x1380>
   12408:	add	ip, ip, #1
   1240c:	cmp	ip, lr
   12410:	bne	123e4 <error@@Base+0x1370>
   12414:	pop	{r4, r5, r6, pc}
   12418:	strdeq	r0, [r0], -r7
   1241c:	push	{r4, r5, r6, r7, r8, lr}
   12420:	add	r5, r0, #8000	; 0x1f40
   12424:	mov	r7, r0
   12428:	mov	r6, r1
   1242c:	add	r5, r5, #48	; 0x30
   12430:	mov	r4, r0
   12434:	mov	r0, r4
   12438:	mov	r1, r6
   1243c:	add	r4, r4, #16
   12440:	bl	11fb8 <error@@Base+0xf44>
   12444:	cmp	r4, r5
   12448:	bne	12434 <error@@Base+0x13c0>
   1244c:	add	r7, r7, #4096	; 0x1000
   12450:	ldr	r0, [r7, #3952]	; 0xf70
   12454:	cmp	r0, #0
   12458:	beq	12468 <error@@Base+0x13f4>
   1245c:	bl	107b0 <free@plt>
   12460:	mov	r3, #0
   12464:	str	r3, [r7, #3952]	; 0xf70
   12468:	mov	r3, #0
   1246c:	str	r3, [r7, #3956]	; 0xf74
   12470:	pop	{r4, r5, r6, r7, r8, pc}
   12474:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12478:	mov	r7, r0
   1247c:	ldr	r6, [pc, #72]	; 124cc <error@@Base+0x1458>
   12480:	ldr	r5, [pc, #72]	; 124d0 <error@@Base+0x145c>
   12484:	add	r6, pc, r6
   12488:	add	r5, pc, r5
   1248c:	sub	r6, r6, r5
   12490:	mov	r8, r1
   12494:	mov	r9, r2
   12498:	bl	10754 <calloc@plt-0x20>
   1249c:	asrs	r6, r6, #2
   124a0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   124a4:	mov	r4, #0
   124a8:	add	r4, r4, #1
   124ac:	ldr	r3, [r5], #4
   124b0:	mov	r2, r9
   124b4:	mov	r1, r8
   124b8:	mov	r0, r7
   124bc:	blx	r3
   124c0:	cmp	r6, r4
   124c4:	bne	124a8 <error@@Base+0x1434>
   124c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124cc:	andeq	r0, r1, r4, ror sl
   124d0:	andeq	r0, r1, ip, ror #20
   124d4:	bx	lr

Disassembly of section .fini:

000124d8 <.fini>:
   124d8:	push	{r3, lr}
   124dc:	pop	{r3, pc}
