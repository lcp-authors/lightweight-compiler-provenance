
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

000123cc <.init>:
   123cc:	push	{r3, lr}
   123d0:	bl	12554 <_start@@Base+0x3c>
   123d4:	pop	{r3, pc}

Disassembly of section .plt:

000123d8 <raise@plt-0x14>:
   123d8:	push	{lr}		; (str lr, [sp, #-4]!)
   123dc:	ldr	lr, [pc, #4]	; 123e8 <raise@plt-0x4>
   123e0:	add	lr, pc, lr
   123e4:	ldr	pc, [lr, #8]!
   123e8:	andeq	r0, r2, r8, lsl ip

000123ec <raise@plt>:
   123ec:	add	ip, pc, #0, 12
   123f0:	add	ip, ip, #32, 20	; 0x20000
   123f4:	ldr	pc, [ip, #3096]!	; 0xc18

000123f8 <strcmp@plt>:
   123f8:	add	ip, pc, #0, 12
   123fc:	add	ip, ip, #32, 20	; 0x20000
   12400:	ldr	pc, [ip, #3088]!	; 0xc10

00012404 <fopen@plt>:
   12404:	add	ip, pc, #0, 12
   12408:	add	ip, ip, #32, 20	; 0x20000
   1240c:	ldr	pc, [ip, #3080]!	; 0xc08

00012410 <memmove@plt>:
   12410:	add	ip, pc, #0, 12
   12414:	add	ip, ip, #32, 20	; 0x20000
   12418:	ldr	pc, [ip, #3072]!	; 0xc00

0001241c <free@plt>:
   1241c:	add	ip, pc, #0, 12
   12420:	add	ip, ip, #32, 20	; 0x20000
   12424:	ldr	pc, [ip, #3064]!	; 0xbf8

00012428 <memcpy@plt>:
   12428:	add	ip, pc, #0, 12
   1242c:	add	ip, ip, #32, 20	; 0x20000
   12430:	ldr	pc, [ip, #3056]!	; 0xbf0

00012434 <ftell@plt>:
   12434:	add	ip, pc, #0, 12
   12438:	add	ip, ip, #32, 20	; 0x20000
   1243c:	ldr	pc, [ip, #3048]!	; 0xbe8

00012440 <memcmp@plt>:
   12440:	add	ip, pc, #0, 12
   12444:	add	ip, ip, #32, 20	; 0x20000
   12448:	ldr	pc, [ip, #3040]!	; 0xbe0

0001244c <rewind@plt>:
   1244c:	add	ip, pc, #0, 12
   12450:	add	ip, ip, #32, 20	; 0x20000
   12454:	ldr	pc, [ip, #3032]!	; 0xbd8

00012458 <realloc@plt>:
   12458:	add	ip, pc, #0, 12
   1245c:	add	ip, ip, #32, 20	; 0x20000
   12460:	ldr	pc, [ip, #3024]!	; 0xbd0

00012464 <fwrite@plt>:
   12464:	add	ip, pc, #0, 12
   12468:	add	ip, ip, #32, 20	; 0x20000
   1246c:	ldr	pc, [ip, #3016]!	; 0xbc8

00012470 <fread@plt>:
   12470:	add	ip, pc, #0, 12
   12474:	add	ip, ip, #32, 20	; 0x20000
   12478:	ldr	pc, [ip, #3008]!	; 0xbc0

0001247c <puts@plt>:
   1247c:	add	ip, pc, #0, 12
   12480:	add	ip, ip, #32, 20	; 0x20000
   12484:	ldr	pc, [ip, #3000]!	; 0xbb8

00012488 <malloc@plt>:
   12488:	add	ip, pc, #0, 12
   1248c:	add	ip, ip, #32, 20	; 0x20000
   12490:	ldr	pc, [ip, #2992]!	; 0xbb0

00012494 <__libc_start_main@plt>:
   12494:	add	ip, pc, #0, 12
   12498:	add	ip, ip, #32, 20	; 0x20000
   1249c:	ldr	pc, [ip, #2984]!	; 0xba8

000124a0 <__gmon_start__@plt>:
   124a0:	add	ip, pc, #0, 12
   124a4:	add	ip, ip, #32, 20	; 0x20000
   124a8:	ldr	pc, [ip, #2976]!	; 0xba0

000124ac <exit@plt>:
   124ac:	add	ip, pc, #0, 12
   124b0:	add	ip, ip, #32, 20	; 0x20000
   124b4:	ldr	pc, [ip, #2968]!	; 0xb98

000124b8 <fprintf@plt>:
   124b8:	add	ip, pc, #0, 12
   124bc:	add	ip, ip, #32, 20	; 0x20000
   124c0:	ldr	pc, [ip, #2960]!	; 0xb90

000124c4 <memset@plt>:
   124c4:	add	ip, pc, #0, 12
   124c8:	add	ip, ip, #32, 20	; 0x20000
   124cc:	ldr	pc, [ip, #2952]!	; 0xb88

000124d0 <strncpy@plt>:
   124d0:	add	ip, pc, #0, 12
   124d4:	add	ip, ip, #32, 20	; 0x20000
   124d8:	ldr	pc, [ip, #2944]!	; 0xb80

000124dc <fclose@plt>:
   124dc:	add	ip, pc, #0, 12
   124e0:	add	ip, ip, #32, 20	; 0x20000
   124e4:	ldr	pc, [ip, #2936]!	; 0xb78

000124e8 <sprintf@plt>:
   124e8:	add	ip, pc, #0, 12
   124ec:	add	ip, ip, #32, 20	; 0x20000
   124f0:	ldr	pc, [ip, #2928]!	; 0xb70

000124f4 <fseek@plt>:
   124f4:	add	ip, pc, #0, 12
   124f8:	add	ip, ip, #32, 20	; 0x20000
   124fc:	ldr	pc, [ip, #2920]!	; 0xb68

00012500 <abort@plt>:
   12500:	add	ip, pc, #0, 12
   12504:	add	ip, ip, #32, 20	; 0x20000
   12508:	ldr	pc, [ip, #2912]!	; 0xb60

0001250c <__assert_fail@plt>:
   1250c:	add	ip, pc, #0, 12
   12510:	add	ip, ip, #32, 20	; 0x20000
   12514:	ldr	pc, [ip, #2904]!	; 0xb58

Disassembly of section .text:

00012518 <_start@@Base>:
   12518:	mov	fp, #0
   1251c:	mov	lr, #0
   12520:	pop	{r1}		; (ldr r1, [sp], #4)
   12524:	mov	r2, sp
   12528:	push	{r2}		; (str r2, [sp, #-4]!)
   1252c:	push	{r0}		; (str r0, [sp, #-4]!)
   12530:	ldr	ip, [pc, #16]	; 12548 <_start@@Base+0x30>
   12534:	push	{ip}		; (str ip, [sp, #-4]!)
   12538:	ldr	r0, [pc, #12]	; 1254c <_start@@Base+0x34>
   1253c:	ldr	r3, [pc, #12]	; 12550 <_start@@Base+0x38>
   12540:	bl	12494 <__libc_start_main@plt>
   12544:	bl	12500 <abort@plt>
   12548:	andeq	r1, r2, r4, asr #19
   1254c:	ldrdeq	r3, [r1], -ip
   12550:	andeq	r1, r2, r4, ror #18
   12554:	ldr	r3, [pc, #20]	; 12570 <_start@@Base+0x58>
   12558:	ldr	r2, [pc, #20]	; 12574 <_start@@Base+0x5c>
   1255c:	add	r3, pc, r3
   12560:	ldr	r2, [r3, r2]
   12564:	cmp	r2, #0
   12568:	bxeq	lr
   1256c:	b	124a0 <__gmon_start__@plt>
   12570:	muleq	r2, ip, sl
   12574:	andeq	r0, r0, r0, ror r0
   12578:	ldr	r0, [pc, #24]	; 12598 <_start@@Base+0x80>
   1257c:	ldr	r3, [pc, #24]	; 1259c <_start@@Base+0x84>
   12580:	cmp	r3, r0
   12584:	bxeq	lr
   12588:	ldr	r3, [pc, #16]	; 125a0 <_start@@Base+0x88>
   1258c:	cmp	r3, #0
   12590:	bxeq	lr
   12594:	bx	r3
   12598:	andeq	r3, r3, r4, lsl #1
   1259c:	andeq	r3, r3, r4, lsl #1
   125a0:	andeq	r0, r0, r0
   125a4:	ldr	r0, [pc, #36]	; 125d0 <_start@@Base+0xb8>
   125a8:	ldr	r1, [pc, #36]	; 125d4 <_start@@Base+0xbc>
   125ac:	sub	r1, r1, r0
   125b0:	asr	r1, r1, #2
   125b4:	add	r1, r1, r1, lsr #31
   125b8:	asrs	r1, r1, #1
   125bc:	bxeq	lr
   125c0:	ldr	r3, [pc, #16]	; 125d8 <_start@@Base+0xc0>
   125c4:	cmp	r3, #0
   125c8:	bxeq	lr
   125cc:	bx	r3
   125d0:	andeq	r3, r3, r4, lsl #1
   125d4:	andeq	r3, r3, r4, lsl #1
   125d8:	andeq	r0, r0, r0
   125dc:	push	{r4, lr}
   125e0:	ldr	r4, [pc, #24]	; 12600 <_start@@Base+0xe8>
   125e4:	ldrb	r3, [r4]
   125e8:	cmp	r3, #0
   125ec:	popne	{r4, pc}
   125f0:	bl	12578 <_start@@Base+0x60>
   125f4:	mov	r3, #1
   125f8:	strb	r3, [r4]
   125fc:	pop	{r4, pc}
   12600:	muleq	r3, r0, r0
   12604:	b	125a4 <_start@@Base+0x8c>
   12608:	bx	lr
   1260c:	bx	lr
   12610:	strd	r4, [sp, #-16]!
   12614:	str	r6, [sp, #8]
   12618:	str	lr, [sp, #12]
   1261c:	sub	sp, sp, #8
   12620:	mov	r4, r0
   12624:	mov	r5, r1
   12628:	movw	r3, #10168	; 0x27b8
   1262c:	movt	r3, #1
   12630:	str	r3, [sp, #4]
   12634:	mov	r3, #21
   12638:	str	r3, [sp]
   1263c:	movw	r3, #6900	; 0x1af4
   12640:	movt	r3, #2
   12644:	mov	r2, #0
   12648:	bl	20174 <flatcc_json_printer_table_field@@Base>
   1264c:	movw	r3, #10060	; 0x274c
   12650:	movt	r3, #1
   12654:	str	r3, [sp, #4]
   12658:	mov	r6, #22
   1265c:	str	r6, [sp]
   12660:	movw	r3, #6924	; 0x1b0c
   12664:	movt	r3, #2
   12668:	mov	r2, #1
   1266c:	mov	r1, r5
   12670:	mov	r0, r4
   12674:	bl	20174 <flatcc_json_printer_table_field@@Base>
   12678:	movw	r3, #9952	; 0x26e0
   1267c:	movt	r3, #1
   12680:	str	r3, [sp, #4]
   12684:	str	r6, [sp]
   12688:	movw	r3, #6948	; 0x1b24
   1268c:	movt	r3, #2
   12690:	mov	r2, #2
   12694:	mov	r1, r5
   12698:	mov	r0, r4
   1269c:	bl	20174 <flatcc_json_printer_table_field@@Base>
   126a0:	add	sp, sp, #8
   126a4:	ldrd	r4, [sp]
   126a8:	ldr	r6, [sp, #8]
   126ac:	add	sp, sp, #12
   126b0:	pop	{pc}		; (ldr pc, [sp], #4)
   126b4:	push	{lr}		; (str lr, [sp, #-4]!)
   126b8:	sub	sp, sp, #12
   126bc:	mov	r2, #0
   126c0:	str	r2, [sp, #4]
   126c4:	mov	r3, #19
   126c8:	str	r3, [sp]
   126cc:	movw	r3, #6972	; 0x1b3c
   126d0:	movt	r3, #2
   126d4:	bl	17a6c <flatcc_json_printer_int32_field@@Base>
   126d8:	add	sp, sp, #12
   126dc:	pop	{pc}		; (ldr pc, [sp], #4)
   126e0:	strd	r4, [sp, #-12]!
   126e4:	str	lr, [sp, #8]
   126e8:	sub	sp, sp, #20
   126ec:	mov	r4, r0
   126f0:	mov	r5, r1
   126f4:	mov	r2, #0
   126f8:	mov	r3, #0
   126fc:	strd	r2, [sp, #8]
   12700:	mov	r3, #15
   12704:	str	r3, [sp]
   12708:	movw	r3, #6992	; 0x1b50
   1270c:	movt	r3, #2
   12710:	bl	17c6c <flatcc_json_printer_int64_field@@Base>
   12714:	mov	r3, #0
   12718:	str	r3, [sp, #4]
   1271c:	mov	r3, #21
   12720:	str	r3, [sp]
   12724:	movw	r3, #7008	; 0x1b60
   12728:	movt	r3, #2
   1272c:	mov	r2, #1
   12730:	mov	r1, r5
   12734:	mov	r0, r4
   12738:	bl	1725c <flatcc_json_printer_uint32_field@@Base>
   1273c:	add	sp, sp, #20
   12740:	ldrd	r4, [sp]
   12744:	add	sp, sp, #8
   12748:	pop	{pc}		; (ldr pc, [sp], #4)
   1274c:	strd	r4, [sp, #-12]!
   12750:	str	lr, [sp, #8]
   12754:	sub	sp, sp, #20
   12758:	mov	r4, r0
   1275c:	mov	r5, r1
   12760:	mov	r2, #0
   12764:	mov	r3, #0
   12768:	strd	r2, [sp, #8]
   1276c:	mov	r3, #15
   12770:	str	r3, [sp]
   12774:	movw	r3, #6992	; 0x1b50
   12778:	movt	r3, #2
   1277c:	bl	17c6c <flatcc_json_printer_int64_field@@Base>
   12780:	mov	r3, #0
   12784:	str	r3, [sp, #4]
   12788:	mov	r3, #16
   1278c:	str	r3, [sp]
   12790:	movw	r3, #7032	; 0x1b78
   12794:	movt	r3, #2
   12798:	mov	r2, #1
   1279c:	mov	r1, r5
   127a0:	mov	r0, r4
   127a4:	bl	1725c <flatcc_json_printer_uint32_field@@Base>
   127a8:	add	sp, sp, #20
   127ac:	ldrd	r4, [sp]
   127b0:	add	sp, sp, #8
   127b4:	pop	{pc}		; (ldr pc, [sp], #4)
   127b8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   127bc:	strd	r6, [sp, #8]
   127c0:	strd	r8, [sp, #16]
   127c4:	strd	sl, [sp, #24]
   127c8:	str	lr, [sp, #32]
   127cc:	sub	sp, sp, #20
   127d0:	mov	r4, r0
   127d4:	mov	r5, r1
   127d8:	mov	r7, #4
   127dc:	str	r7, [sp]
   127e0:	movw	r3, #7052	; 0x1b8c
   127e4:	movt	r3, #2
   127e8:	mov	r2, #0
   127ec:	bl	16948 <flatcc_json_printer_string_field@@Base>
   127f0:	mov	fp, #0
   127f4:	str	fp, [sp, #4]
   127f8:	mov	sl, #9
   127fc:	str	sl, [sp]
   12800:	movw	r3, #7060	; 0x1b94
   12804:	movt	r3, #2
   12808:	mov	r2, #1
   1280c:	mov	r1, r5
   12810:	mov	r0, r4
   12814:	bl	1725c <flatcc_json_printer_uint32_field@@Base>
   12818:	str	r7, [sp]
   1281c:	movw	r3, #7072	; 0x1ba0
   12820:	movt	r3, #2
   12824:	mov	r2, #2
   12828:	mov	r1, r5
   1282c:	mov	r0, r4
   12830:	bl	16948 <flatcc_json_printer_string_field@@Base>
   12834:	mov	r8, #0
   12838:	mov	r9, #0
   1283c:	strd	r8, [sp, #8]
   12840:	mov	r6, #8
   12844:	str	r6, [sp]
   12848:	movw	r3, #7080	; 0x1ba8
   1284c:	movt	r3, #2
   12850:	mov	r2, #3
   12854:	mov	r1, r5
   12858:	mov	r0, r4
   1285c:	bl	17c6c <flatcc_json_printer_int64_field@@Base>
   12860:	str	r7, [sp]
   12864:	movw	r3, #7092	; 0x1bb4
   12868:	movt	r3, #2
   1286c:	mov	r2, r7
   12870:	mov	r1, r5
   12874:	mov	r0, r4
   12878:	bl	16948 <flatcc_json_printer_string_field@@Base>
   1287c:	strd	r8, [sp, #8]
   12880:	str	r6, [sp]
   12884:	movw	r3, #7100	; 0x1bbc
   12888:	movt	r3, #2
   1288c:	mov	r2, #5
   12890:	mov	r1, r5
   12894:	mov	r0, r4
   12898:	bl	17c6c <flatcc_json_printer_int64_field@@Base>
   1289c:	str	fp, [sp, #4]
   128a0:	str	sl, [sp]
   128a4:	movw	r3, #7112	; 0x1bc8
   128a8:	movt	r3, #2
   128ac:	mov	r2, #6
   128b0:	mov	r1, r5
   128b4:	mov	r0, r4
   128b8:	bl	1725c <flatcc_json_printer_uint32_field@@Base>
   128bc:	strd	r8, [sp, #8]
   128c0:	str	r6, [sp]
   128c4:	movw	r3, #7124	; 0x1bd4
   128c8:	movt	r3, #2
   128cc:	mov	r2, #7
   128d0:	mov	r1, r5
   128d4:	mov	r0, r4
   128d8:	bl	17c6c <flatcc_json_printer_int64_field@@Base>
   128dc:	str	fp, [sp, #4]
   128e0:	str	sl, [sp]
   128e4:	movw	r3, #7136	; 0x1be0
   128e8:	movt	r3, #2
   128ec:	mov	r2, r6
   128f0:	mov	r1, r5
   128f4:	mov	r0, r4
   128f8:	bl	1725c <flatcc_json_printer_uint32_field@@Base>
   128fc:	add	sp, sp, #20
   12900:	ldrd	r4, [sp]
   12904:	ldrd	r6, [sp, #8]
   12908:	ldrd	r8, [sp, #16]
   1290c:	ldrd	sl, [sp, #24]
   12910:	add	sp, sp, #32
   12914:	pop	{pc}		; (ldr pc, [sp], #4)
   12918:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1291c:	strd	r6, [sp, #8]
   12920:	strd	r8, [sp, #16]
   12924:	strd	sl, [sp, #24]
   12928:	str	lr, [sp, #32]
   1292c:	sub	sp, sp, #28
   12930:	mov	sl, r0
   12934:	mov	r5, r1
   12938:	movw	r3, #13964	; 0x368c
   1293c:	movt	r3, #1
   12940:	str	r3, [sp, #4]
   12944:	mov	r6, #3
   12948:	str	r6, [sp]
   1294c:	movw	r3, #7148	; 0x1bec
   12950:	movt	r3, #2
   12954:	mov	r2, #0
   12958:	bl	20b94 <flatcc_json_printer_struct_field@@Base>
   1295c:	mov	r3, #150	; 0x96
   12960:	str	r3, [sp, #4]
   12964:	mov	r7, #4
   12968:	str	r7, [sp]
   1296c:	movw	r3, #7152	; 0x1bf0
   12970:	movt	r3, #2
   12974:	mov	r2, #1
   12978:	mov	r1, r5
   1297c:	mov	r0, sl
   12980:	bl	1786c <flatcc_json_printer_int16_field@@Base>
   12984:	mov	r3, #100	; 0x64
   12988:	str	r3, [sp, #4]
   1298c:	mov	r2, #2
   12990:	str	r2, [sp]
   12994:	movw	r3, #7160	; 0x1bf8
   12998:	movt	r3, #2
   1299c:	mov	r1, r5
   129a0:	mov	r0, sl
   129a4:	bl	1786c <flatcc_json_printer_int16_field@@Base>
   129a8:	str	r7, [sp]
   129ac:	movw	r3, #7164	; 0x1bfc
   129b0:	movt	r3, #2
   129b4:	mov	r2, r6
   129b8:	mov	r1, r5
   129bc:	mov	r0, sl
   129c0:	bl	16948 <flatcc_json_printer_string_field@@Base>
   129c4:	mov	r8, #9
   129c8:	str	r8, [sp]
   129cc:	movw	r3, #7172	; 0x1c04
   129d0:	movt	r3, #2
   129d4:	mov	r2, #5
   129d8:	mov	r1, r5
   129dc:	mov	r0, sl
   129e0:	bl	1bb84 <flatcc_json_printer_uint8_vector_field@@Base>
   129e4:	movw	r3, #13732	; 0x35a4
   129e8:	movt	r3, #1
   129ec:	str	r3, [sp, #8]
   129f0:	mov	r4, #8
   129f4:	str	r4, [sp, #4]
   129f8:	mov	r9, #5
   129fc:	str	r9, [sp]
   12a00:	movw	r3, #7184	; 0x1c10
   12a04:	movt	r3, #2
   12a08:	mov	r2, #6
   12a0c:	mov	r1, r5
   12a10:	mov	r0, sl
   12a14:	bl	18d20 <flatcc_json_printer_int8_enum_field@@Base>
   12a18:	movw	r3, #12392	; 0x3068
   12a1c:	movt	r3, #1
   12a20:	str	r3, [sp, #8]
   12a24:	movw	r3, #13392	; 0x3450
   12a28:	movt	r3, #1
   12a2c:	str	r3, [sp, #4]
   12a30:	str	r7, [sp]
   12a34:	movw	r3, #7192	; 0x1c18
   12a38:	movt	r3, #2
   12a3c:	mov	r2, r4
   12a40:	mov	r1, r5
   12a44:	mov	r0, sl
   12a48:	bl	2044c <flatcc_json_printer_union_field@@Base>
   12a4c:	movw	fp, #12276	; 0x2ff4
   12a50:	movt	fp, #1
   12a54:	str	fp, [sp, #8]
   12a58:	str	r7, [sp, #4]
   12a5c:	str	r9, [sp]
   12a60:	movw	r3, #7200	; 0x1c20
   12a64:	movt	r3, #2
   12a68:	mov	r2, r8
   12a6c:	mov	r1, r5
   12a70:	mov	r0, sl
   12a74:	bl	1f2cc <flatcc_json_printer_struct_vector_field@@Base>
   12a78:	mov	r6, #17
   12a7c:	str	r6, [sp]
   12a80:	movw	r3, #7208	; 0x1c28
   12a84:	movt	r3, #2
   12a88:	mov	r2, #10
   12a8c:	mov	r1, r5
   12a90:	str	sl, [sp, #20]
   12a94:	mov	r0, sl
   12a98:	bl	1f664 <flatcc_json_printer_string_vector_field@@Base>
   12a9c:	movw	sl, #10520	; 0x2918
   12aa0:	movt	sl, #1
   12aa4:	str	sl, [sp, #4]
   12aa8:	str	r6, [sp]
   12aac:	movw	r3, #7228	; 0x1c3c
   12ab0:	movt	r3, #2
   12ab4:	mov	r2, #11
   12ab8:	mov	r1, r5
   12abc:	ldr	r0, [sp, #20]
   12ac0:	bl	1f948 <flatcc_json_printer_table_vector_field@@Base>
   12ac4:	str	sl, [sp, #4]
   12ac8:	str	r9, [sp]
   12acc:	movw	r3, #7248	; 0x1c50
   12ad0:	movt	r3, #2
   12ad4:	mov	r2, #12
   12ad8:	mov	r1, r5
   12adc:	ldr	r0, [sp, #20]
   12ae0:	bl	20174 <flatcc_json_printer_table_field@@Base>
   12ae4:	str	sl, [sp, #8]
   12ae8:	mov	sl, #0
   12aec:	str	sl, [sp, #4]
   12af0:	mov	r3, #20
   12af4:	str	r3, [sp]
   12af8:	movw	r3, #7256	; 0x1c58
   12afc:	movt	r3, #2
   12b00:	mov	r2, #13
   12b04:	mov	r1, r5
   12b08:	ldr	r0, [sp, #20]
   12b0c:	bl	21260 <flatcc_json_printer_table_as_nested_root@@Base>
   12b10:	movw	r3, #12124	; 0x2f5c
   12b14:	movt	r3, #1
   12b18:	str	r3, [sp, #4]
   12b1c:	str	r8, [sp]
   12b20:	movw	r3, #7280	; 0x1c70
   12b24:	movt	r3, #2
   12b28:	mov	r2, #14
   12b2c:	mov	r1, r5
   12b30:	ldr	r8, [sp, #20]
   12b34:	mov	r0, r8
   12b38:	bl	20174 <flatcc_json_printer_table_field@@Base>
   12b3c:	mov	r3, #1
   12b40:	str	r3, [sp, #4]
   12b44:	str	r4, [sp]
   12b48:	movw	r3, #7292	; 0x1c7c
   12b4c:	movt	r3, #2
   12b50:	mov	r2, #15
   12b54:	mov	r1, r5
   12b58:	str	r8, [sp, #20]
   12b5c:	mov	r0, r8
   12b60:	bl	17e7c <flatcc_json_printer_bool_field@@Base>
   12b64:	str	sl, [sp, #4]
   12b68:	mov	r8, #16
   12b6c:	str	r8, [sp]
   12b70:	movw	r3, #7304	; 0x1c88
   12b74:	movt	r3, #2
   12b78:	mov	r2, r8
   12b7c:	mov	r1, r5
   12b80:	ldr	r0, [sp, #20]
   12b84:	bl	17a6c <flatcc_json_printer_int32_field@@Base>
   12b88:	str	sl, [sp, #4]
   12b8c:	str	r8, [sp]
   12b90:	movw	r3, #7324	; 0x1c9c
   12b94:	movt	r3, #2
   12b98:	mov	r2, r6
   12b9c:	mov	r1, r5
   12ba0:	ldr	r0, [sp, #20]
   12ba4:	bl	1725c <flatcc_json_printer_uint32_field@@Base>
   12ba8:	mov	r2, #0
   12bac:	mov	r3, #0
   12bb0:	strd	r2, [sp, #8]
   12bb4:	str	r8, [sp]
   12bb8:	movw	r3, #7344	; 0x1cb0
   12bbc:	movt	r3, #2
   12bc0:	mov	r2, #18
   12bc4:	mov	r1, r5
   12bc8:	ldr	r0, [sp, #20]
   12bcc:	bl	17c6c <flatcc_json_printer_int64_field@@Base>
   12bd0:	mov	r2, #0
   12bd4:	mov	r3, #0
   12bd8:	strd	r2, [sp, #8]
   12bdc:	str	r8, [sp]
   12be0:	movw	r3, #7364	; 0x1cc4
   12be4:	movt	r3, #2
   12be8:	mov	r2, #19
   12bec:	mov	r1, r5
   12bf0:	ldr	r0, [sp, #20]
   12bf4:	bl	1745c <flatcc_json_printer_uint64_field@@Base>
   12bf8:	str	sl, [sp, #4]
   12bfc:	str	r6, [sp]
   12c00:	movw	r3, #7384	; 0x1cd8
   12c04:	movt	r3, #2
   12c08:	mov	r2, #20
   12c0c:	mov	r1, r5
   12c10:	ldr	r0, [sp, #20]
   12c14:	bl	17a6c <flatcc_json_printer_int32_field@@Base>
   12c18:	str	sl, [sp, #4]
   12c1c:	str	r6, [sp]
   12c20:	movw	r3, #7404	; 0x1cec
   12c24:	movt	r3, #2
   12c28:	mov	r2, #21
   12c2c:	mov	r1, r5
   12c30:	ldr	sl, [sp, #20]
   12c34:	mov	r0, sl
   12c38:	bl	1725c <flatcc_json_printer_uint32_field@@Base>
   12c3c:	mov	r2, #0
   12c40:	mov	r3, #0
   12c44:	strd	r2, [sp, #8]
   12c48:	str	r6, [sp]
   12c4c:	movw	r3, #7424	; 0x1d00
   12c50:	movt	r3, #2
   12c54:	mov	r2, #22
   12c58:	mov	r1, r5
   12c5c:	mov	r0, sl
   12c60:	bl	17c6c <flatcc_json_printer_int64_field@@Base>
   12c64:	mov	r2, #0
   12c68:	mov	r3, #0
   12c6c:	strd	r2, [sp, #8]
   12c70:	str	r6, [sp]
   12c74:	movw	r3, #7444	; 0x1d14
   12c78:	movt	r3, #2
   12c7c:	mov	r2, #23
   12c80:	mov	r1, r5
   12c84:	mov	r0, sl
   12c88:	bl	1745c <flatcc_json_printer_uint64_field@@Base>
   12c8c:	str	r8, [sp]
   12c90:	movw	r3, #7464	; 0x1d28
   12c94:	movt	r3, #2
   12c98:	mov	r2, #24
   12c9c:	mov	r1, r5
   12ca0:	mov	r0, sl
   12ca4:	bl	1d044 <flatcc_json_printer_bool_vector_field@@Base>
   12ca8:	str	r9, [sp]
   12cac:	vldr	s0, [pc, #408]	; 12e4c <_start@@Base+0x934>
   12cb0:	movw	r3, #7484	; 0x1d3c
   12cb4:	movt	r3, #2
   12cb8:	mov	r2, #25
   12cbc:	mov	r1, r5
   12cc0:	mov	r0, sl
   12cc4:	bl	1807c <flatcc_json_printer_float_field@@Base>
   12cc8:	mov	r8, #6
   12ccc:	str	r8, [sp]
   12cd0:	vldr	s0, [pc, #376]	; 12e50 <_start@@Base+0x938>
   12cd4:	movw	r3, #7492	; 0x1d44
   12cd8:	movt	r3, #2
   12cdc:	mov	r2, #26
   12ce0:	mov	r1, r5
   12ce4:	mov	r0, sl
   12ce8:	bl	1807c <flatcc_json_printer_float_field@@Base>
   12cec:	str	r8, [sp]
   12cf0:	vldr	s0, [pc, #348]	; 12e54 <_start@@Base+0x93c>
   12cf4:	movw	r3, #7500	; 0x1d4c
   12cf8:	movt	r3, #2
   12cfc:	mov	r2, #27
   12d00:	mov	r1, r5
   12d04:	mov	r0, sl
   12d08:	bl	1807c <flatcc_json_printer_float_field@@Base>
   12d0c:	mov	r3, #18
   12d10:	str	r3, [sp]
   12d14:	movw	r3, #7508	; 0x1d54
   12d18:	movt	r3, #2
   12d1c:	mov	r2, #28
   12d20:	mov	r1, r5
   12d24:	mov	r0, sl
   12d28:	bl	1f664 <flatcc_json_printer_string_vector_field@@Base>
   12d2c:	movw	r3, #12012	; 0x2eec
   12d30:	movt	r3, #1
   12d34:	str	r3, [sp, #8]
   12d38:	str	r4, [sp, #4]
   12d3c:	mov	r3, #23
   12d40:	str	r3, [sp]
   12d44:	movw	r3, #7528	; 0x1d68
   12d48:	movt	r3, #2
   12d4c:	mov	r2, #29
   12d50:	mov	r1, r5
   12d54:	mov	r0, sl
   12d58:	bl	1f2cc <flatcc_json_printer_struct_vector_field@@Base>
   12d5c:	str	r7, [sp]
   12d60:	movw	r3, #7552	; 0x1d80
   12d64:	movt	r3, #2
   12d68:	mov	r2, #30
   12d6c:	mov	r1, r5
   12d70:	mov	r0, sl
   12d74:	bl	1bb84 <flatcc_json_printer_uint8_vector_field@@Base>
   12d78:	str	fp, [sp, #8]
   12d7c:	str	r7, [sp, #4]
   12d80:	str	r9, [sp]
   12d84:	movw	r3, #7560	; 0x1d88
   12d88:	movt	r3, #2
   12d8c:	mov	r2, #31
   12d90:	mov	r1, r5
   12d94:	mov	r0, sl
   12d98:	bl	1f2cc <flatcc_json_printer_struct_vector_field@@Base>
   12d9c:	mov	r3, #15
   12da0:	str	r3, [sp]
   12da4:	movw	r3, #7568	; 0x1d90
   12da8:	movt	r3, #2
   12dac:	mov	r2, #32
   12db0:	mov	r1, r5
   12db4:	mov	r0, sl
   12db8:	bl	1cdb4 <flatcc_json_printer_int64_vector_field@@Base>
   12dbc:	str	r6, [sp]
   12dc0:	movw	r3, #7584	; 0x1da0
   12dc4:	movt	r3, #2
   12dc8:	mov	r2, #33	; 0x21
   12dcc:	mov	r1, r5
   12dd0:	mov	r0, sl
   12dd4:	bl	1d5ac <flatcc_json_printer_double_vector_field@@Base>
   12dd8:	movw	r3, #9736	; 0x2608
   12ddc:	movt	r3, #1
   12de0:	str	r3, [sp, #4]
   12de4:	mov	r3, #21
   12de8:	str	r3, [sp]
   12dec:	movw	r3, #7604	; 0x1db4
   12df0:	movt	r3, #2
   12df4:	mov	r2, #34	; 0x22
   12df8:	mov	r1, r5
   12dfc:	mov	r0, sl
   12e00:	bl	20174 <flatcc_json_printer_table_field@@Base>
   12e04:	movw	r3, #11864	; 0x2e58
   12e08:	movt	r3, #1
   12e0c:	str	r3, [sp, #4]
   12e10:	mov	r3, #10
   12e14:	str	r3, [sp]
   12e18:	movw	r3, #7628	; 0x1dcc
   12e1c:	movt	r3, #2
   12e20:	mov	r2, #35	; 0x23
   12e24:	mov	r1, r5
   12e28:	mov	r0, sl
   12e2c:	bl	20174 <flatcc_json_printer_table_field@@Base>
   12e30:	add	sp, sp, #28
   12e34:	ldrd	r4, [sp]
   12e38:	ldrd	r6, [sp, #8]
   12e3c:	ldrd	r8, [sp, #16]
   12e40:	ldrd	sl, [sp, #24]
   12e44:	add	sp, sp, #32
   12e48:	pop	{pc}		; (ldr pc, [sp], #4)
   12e4c:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   12e50:	submi	r0, r0, r0
   12e54:	andeq	r0, r0, r0
   12e58:	strd	r4, [sp, #-16]!
   12e5c:	str	r6, [sp, #8]
   12e60:	str	lr, [sp, #12]
   12e64:	sub	sp, sp, #8
   12e68:	mov	r5, r0
   12e6c:	mov	r6, r1
   12e70:	mov	r4, #0
   12e74:	str	r4, [sp, #4]
   12e78:	mov	r3, #4
   12e7c:	str	r3, [sp]
   12e80:	movw	r3, #8136	; 0x1fc8
   12e84:	movt	r3, #2
   12e88:	mov	r2, r4
   12e8c:	bl	16b28 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   12e90:	mov	r2, #1
   12e94:	str	r2, [sp, #4]
   12e98:	mov	r3, #7
   12e9c:	str	r3, [sp]
   12ea0:	movw	r3, #7640	; 0x1dd8
   12ea4:	movt	r3, #2
   12ea8:	mov	r1, r6
   12eac:	mov	r0, r5
   12eb0:	bl	16b28 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   12eb4:	str	r4, [sp, #4]
   12eb8:	mov	r3, #6
   12ebc:	str	r3, [sp]
   12ec0:	movw	r3, #7648	; 0x1de0
   12ec4:	movt	r3, #2
   12ec8:	mov	r2, #2
   12ecc:	mov	r1, r6
   12ed0:	mov	r0, r5
   12ed4:	bl	16b28 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   12ed8:	add	sp, sp, #8
   12edc:	ldrd	r4, [sp]
   12ee0:	ldr	r6, [sp, #8]
   12ee4:	add	sp, sp, #12
   12ee8:	pop	{pc}		; (ldr pc, [sp], #4)
   12eec:	strd	r4, [sp, #-12]!
   12ef0:	str	lr, [sp, #8]
   12ef4:	sub	sp, sp, #12
   12ef8:	mov	r5, r0
   12efc:	mov	r4, r1
   12f00:	mov	r3, #2
   12f04:	str	r3, [sp, #4]
   12f08:	movw	r3, #7656	; 0x1de8
   12f0c:	movt	r3, #2
   12f10:	str	r3, [sp]
   12f14:	mov	r3, #0
   12f18:	mov	r2, r1
   12f1c:	mov	r1, r3
   12f20:	bl	19b04 <flatcc_json_printer_uint32_struct_field@@Base>
   12f24:	mov	r3, #8
   12f28:	str	r3, [sp, #4]
   12f2c:	movw	r3, #7660	; 0x1dec
   12f30:	movt	r3, #2
   12f34:	str	r3, [sp]
   12f38:	mov	r3, #4
   12f3c:	mov	r2, r4
   12f40:	mov	r1, #1
   12f44:	mov	r0, r5
   12f48:	bl	19b04 <flatcc_json_printer_uint32_struct_field@@Base>
   12f4c:	add	sp, sp, #12
   12f50:	ldrd	r4, [sp]
   12f54:	add	sp, sp, #8
   12f58:	pop	{pc}		; (ldr pc, [sp], #4)
   12f5c:	strd	r4, [sp, #-16]!
   12f60:	str	r6, [sp, #8]
   12f64:	str	lr, [sp, #12]
   12f68:	sub	sp, sp, #16
   12f6c:	mov	r4, r0
   12f70:	mov	r5, r1
   12f74:	mov	r6, #2
   12f78:	str	r6, [sp]
   12f7c:	movw	r3, #7656	; 0x1de8
   12f80:	movt	r3, #2
   12f84:	mov	r2, #0
   12f88:	bl	16948 <flatcc_json_printer_string_field@@Base>
   12f8c:	mov	r2, #0
   12f90:	mov	r3, #0
   12f94:	strd	r2, [sp, #8]
   12f98:	mov	r3, #3
   12f9c:	str	r3, [sp]
   12fa0:	movw	r3, #7672	; 0x1df8
   12fa4:	movt	r3, #2
   12fa8:	mov	r2, #1
   12fac:	mov	r1, r5
   12fb0:	mov	r0, r4
   12fb4:	bl	17c6c <flatcc_json_printer_int64_field@@Base>
   12fb8:	mov	r3, #0
   12fbc:	str	r3, [sp, #4]
   12fc0:	mov	r3, #5
   12fc4:	str	r3, [sp]
   12fc8:	movw	r3, #7676	; 0x1dfc
   12fcc:	movt	r3, #2
   12fd0:	mov	r2, r6
   12fd4:	mov	r1, r5
   12fd8:	mov	r0, r4
   12fdc:	bl	1705c <flatcc_json_printer_uint16_field@@Base>
   12fe0:	add	sp, sp, #16
   12fe4:	ldrd	r4, [sp]
   12fe8:	ldr	r6, [sp, #8]
   12fec:	add	sp, sp, #12
   12ff0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ff4:	strd	r4, [sp, #-16]!
   12ff8:	str	r6, [sp, #8]
   12ffc:	str	lr, [sp, #12]
   13000:	sub	sp, sp, #8
   13004:	mov	r6, r0
   13008:	mov	r5, r1
   1300c:	mov	r4, #1
   13010:	str	r4, [sp, #4]
   13014:	movw	r3, #7400	; 0x1ce8
   13018:	movt	r3, #2
   1301c:	str	r3, [sp]
   13020:	mov	r3, #0
   13024:	mov	r2, r1
   13028:	mov	r1, r3
   1302c:	bl	19fd0 <flatcc_json_printer_int16_struct_field@@Base>
   13030:	str	r4, [sp, #4]
   13034:	movw	r3, #7684	; 0x1e04
   13038:	movt	r3, #2
   1303c:	str	r3, [sp]
   13040:	mov	r3, #2
   13044:	mov	r2, r5
   13048:	mov	r1, r4
   1304c:	mov	r0, r6
   13050:	bl	19e38 <flatcc_json_printer_int8_struct_field@@Base>
   13054:	add	sp, sp, #8
   13058:	ldrd	r4, [sp]
   1305c:	ldr	r6, [sp, #8]
   13060:	add	sp, sp, #12
   13064:	pop	{pc}		; (ldr pc, [sp], #4)
   13068:	str	r4, [sp, #-8]!
   1306c:	str	lr, [sp, #4]
   13070:	ldrb	r3, [r1, #8]
   13074:	sub	r3, r3, #1
   13078:	cmp	r3, #3
   1307c:	ldrls	pc, [pc, r3, lsl #2]
   13080:	b	130a0 <_start@@Base+0xb88>
   13084:	muleq	r1, r4, r0
   13088:	andeq	r3, r1, ip, lsr #1
   1308c:	strheq	r3, [r1], -ip
   13090:	andeq	r3, r1, ip, asr #1
   13094:	movw	r2, #10520	; 0x2918
   13098:	movt	r2, #1
   1309c:	bl	20730 <flatcc_json_printer_union_table@@Base>
   130a0:	ldr	r4, [sp]
   130a4:	add	sp, sp, #4
   130a8:	pop	{pc}		; (ldr pc, [sp], #4)
   130ac:	movw	r2, #13540	; 0x34e4
   130b0:	movt	r2, #1
   130b4:	bl	20730 <flatcc_json_printer_union_table@@Base>
   130b8:	b	130a0 <_start@@Base+0xb88>
   130bc:	movw	r2, #9740	; 0x260c
   130c0:	movt	r2, #1
   130c4:	bl	20730 <flatcc_json_printer_union_table@@Base>
   130c8:	b	130a0 <_start@@Base+0xb88>
   130cc:	movw	r2, #12508	; 0x30dc
   130d0:	movt	r2, #1
   130d4:	bl	20730 <flatcc_json_printer_union_table@@Base>
   130d8:	b	130a0 <_start@@Base+0xb88>
   130dc:	strd	r4, [sp, #-12]!
   130e0:	str	lr, [sp, #8]
   130e4:	sub	sp, sp, #20
   130e8:	mov	r4, r0
   130ec:	mov	r5, r1
   130f0:	movw	r3, #9744	; 0x2610
   130f4:	movt	r3, #1
   130f8:	str	r3, [sp, #4]
   130fc:	mov	r3, #6
   13100:	str	r3, [sp]
   13104:	movw	r3, #7688	; 0x1e08
   13108:	movt	r3, #2
   1310c:	mov	r2, #0
   13110:	bl	20174 <flatcc_json_printer_table_field@@Base>
   13114:	movw	r3, #12680	; 0x3188
   13118:	movt	r3, #1
   1311c:	str	r3, [sp, #4]
   13120:	mov	r3, #5
   13124:	str	r3, [sp]
   13128:	movw	r3, #7696	; 0x1e10
   1312c:	movt	r3, #2
   13130:	mov	r2, #1
   13134:	mov	r1, r5
   13138:	mov	r0, r4
   1313c:	bl	20174 <flatcc_json_printer_table_field@@Base>
   13140:	movw	r3, #12392	; 0x3068
   13144:	movt	r3, #1
   13148:	str	r3, [sp, #8]
   1314c:	movw	r3, #13392	; 0x3450
   13150:	movt	r3, #1
   13154:	str	r3, [sp, #4]
   13158:	mov	r3, #7
   1315c:	str	r3, [sp]
   13160:	movw	r3, #7704	; 0x1e18
   13164:	movt	r3, #2
   13168:	mov	r2, #3
   1316c:	mov	r1, r5
   13170:	mov	r0, r4
   13174:	bl	1fe08 <flatcc_json_printer_union_vector_field@@Base>
   13178:	add	sp, sp, #20
   1317c:	ldrd	r4, [sp]
   13180:	add	sp, sp, #8
   13184:	pop	{pc}		; (ldr pc, [sp], #4)
   13188:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1318c:	strd	r6, [sp, #8]
   13190:	strd	r8, [sp, #16]
   13194:	str	lr, [sp, #24]
   13198:	sub	sp, sp, #20
   1319c:	mov	r6, r0
   131a0:	mov	r7, r1
   131a4:	movw	r5, #12936	; 0x3288
   131a8:	movt	r5, #1
   131ac:	str	r5, [sp, #8]
   131b0:	movw	r4, #13188	; 0x3384
   131b4:	movt	r4, #1
   131b8:	str	r4, [sp, #4]
   131bc:	mov	r3, #14
   131c0:	str	r3, [sp]
   131c4:	movw	r3, #7712	; 0x1e20
   131c8:	movt	r3, #2
   131cc:	mov	r2, #1
   131d0:	bl	2044c <flatcc_json_printer_union_field@@Base>
   131d4:	str	r5, [sp, #8]
   131d8:	str	r4, [sp, #4]
   131dc:	mov	r9, #10
   131e0:	str	r9, [sp]
   131e4:	movw	r3, #7728	; 0x1e30
   131e8:	movt	r3, #2
   131ec:	mov	r2, #3
   131f0:	mov	r1, r7
   131f4:	mov	r0, r6
   131f8:	bl	2044c <flatcc_json_printer_union_field@@Base>
   131fc:	str	r5, [sp, #8]
   13200:	str	r4, [sp, #4]
   13204:	mov	r8, #9
   13208:	str	r8, [sp]
   1320c:	movw	r3, #7740	; 0x1e3c
   13210:	movt	r3, #2
   13214:	mov	r2, #5
   13218:	mov	r1, r7
   1321c:	mov	r0, r6
   13220:	bl	2044c <flatcc_json_printer_union_field@@Base>
   13224:	str	r5, [sp, #8]
   13228:	str	r4, [sp, #4]
   1322c:	mov	r3, #5
   13230:	str	r3, [sp]
   13234:	movw	r3, #7752	; 0x1e48
   13238:	movt	r3, #2
   1323c:	mov	r2, #7
   13240:	mov	r1, r7
   13244:	mov	r0, r6
   13248:	bl	2044c <flatcc_json_printer_union_field@@Base>
   1324c:	str	r5, [sp, #8]
   13250:	str	r4, [sp, #4]
   13254:	str	r9, [sp]
   13258:	movw	r3, #7760	; 0x1e50
   1325c:	movt	r3, #2
   13260:	mov	r2, r8
   13264:	mov	r1, r7
   13268:	mov	r0, r6
   1326c:	bl	1fe08 <flatcc_json_printer_union_vector_field@@Base>
   13270:	add	sp, sp, #20
   13274:	ldrd	r4, [sp]
   13278:	ldrd	r6, [sp, #8]
   1327c:	ldrd	r8, [sp, #16]
   13280:	add	sp, sp, #24
   13284:	pop	{pc}		; (ldr pc, [sp], #4)
   13288:	str	r4, [sp, #-8]!
   1328c:	str	lr, [sp, #4]
   13290:	ldrb	r3, [r1, #8]
   13294:	cmp	r3, #9
   13298:	beq	132f4 <_start@@Base+0xddc>
   1329c:	bls	132bc <_start@@Base+0xda4>
   132a0:	cmp	r3, #11
   132a4:	beq	13314 <_start@@Base+0xdfc>
   132a8:	bcc	13304 <_start@@Base+0xdec>
   132ac:	cmp	r3, #255	; 0xff
   132b0:	bne	132e8 <_start@@Base+0xdd0>
   132b4:	bl	2092c <flatcc_json_printer_union_string@@Base>
   132b8:	b	132e8 <_start@@Base+0xdd0>
   132bc:	cmp	r3, #2
   132c0:	beq	132dc <_start@@Base+0xdc4>
   132c4:	cmp	r3, #8
   132c8:	bne	132e8 <_start@@Base+0xdd0>
   132cc:	movw	r2, #13136	; 0x3350
   132d0:	movt	r2, #1
   132d4:	bl	20854 <flatcc_json_printer_union_struct@@Base>
   132d8:	b	132e8 <_start@@Base+0xdd0>
   132dc:	movw	r2, #9908	; 0x26b4
   132e0:	movt	r2, #1
   132e4:	bl	20730 <flatcc_json_printer_union_table@@Base>
   132e8:	ldr	r4, [sp]
   132ec:	add	sp, sp, #4
   132f0:	pop	{pc}		; (ldr pc, [sp], #4)
   132f4:	movw	r2, #13084	; 0x331c
   132f8:	movt	r2, #1
   132fc:	bl	20854 <flatcc_json_printer_union_struct@@Base>
   13300:	b	132e8 <_start@@Base+0xdd0>
   13304:	movw	r2, #13084	; 0x331c
   13308:	movt	r2, #1
   1330c:	bl	20854 <flatcc_json_printer_union_struct@@Base>
   13310:	b	132e8 <_start@@Base+0xdd0>
   13314:	bl	2092c <flatcc_json_printer_union_string@@Base>
   13318:	b	132e8 <_start@@Base+0xdd0>
   1331c:	push	{lr}		; (str lr, [sp, #-4]!)
   13320:	sub	sp, sp, #12
   13324:	mov	r3, #10
   13328:	str	r3, [sp, #4]
   1332c:	movw	r3, #7772	; 0x1e5c
   13330:	movt	r3, #2
   13334:	str	r3, [sp]
   13338:	mov	r3, #0
   1333c:	mov	r2, r1
   13340:	mov	r1, r3
   13344:	bl	1a168 <flatcc_json_printer_int32_struct_field@@Base>
   13348:	add	sp, sp, #12
   1334c:	pop	{pc}		; (ldr pc, [sp], #4)
   13350:	push	{lr}		; (str lr, [sp, #-4]!)
   13354:	sub	sp, sp, #12
   13358:	mov	r3, #11
   1335c:	str	r3, [sp, #4]
   13360:	movw	r3, #7784	; 0x1e68
   13364:	movt	r3, #2
   13368:	str	r3, [sp]
   1336c:	mov	r3, #0
   13370:	mov	r2, r1
   13374:	mov	r1, r3
   13378:	bl	1996c <flatcc_json_printer_uint16_struct_field@@Base>
   1337c:	add	sp, sp, #12
   13380:	pop	{pc}		; (ldr pc, [sp], #4)
   13384:	str	r4, [sp, #-8]!
   13388:	str	lr, [sp, #4]
   1338c:	cmp	r1, #9
   13390:	beq	13400 <_start@@Base+0xee8>
   13394:	bls	133c0 <_start@@Base+0xea8>
   13398:	cmp	r1, #11
   1339c:	beq	13428 <_start@@Base+0xf10>
   133a0:	bcc	13414 <_start@@Base+0xefc>
   133a4:	cmp	r1, #255	; 0xff
   133a8:	bne	1343c <_start@@Base+0xf24>
   133ac:	mov	r2, #6
   133b0:	movw	r1, #7840	; 0x1ea0
   133b4:	movt	r1, #2
   133b8:	bl	167fc <flatcc_json_printer_enum@@Base>
   133bc:	b	133f4 <_start@@Base+0xedc>
   133c0:	cmp	r1, #2
   133c4:	beq	133e4 <_start@@Base+0xecc>
   133c8:	cmp	r1, #8
   133cc:	bne	1343c <_start@@Base+0xf24>
   133d0:	mov	r2, #8
   133d4:	movw	r1, #7804	; 0x1e7c
   133d8:	movt	r1, #2
   133dc:	bl	167fc <flatcc_json_printer_enum@@Base>
   133e0:	b	133f4 <_start@@Base+0xedc>
   133e4:	mov	r2, #5
   133e8:	movw	r1, #7796	; 0x1e74
   133ec:	movt	r1, #2
   133f0:	bl	167fc <flatcc_json_printer_enum@@Base>
   133f4:	ldr	r4, [sp]
   133f8:	add	sp, sp, #4
   133fc:	pop	{pc}		; (ldr pc, [sp], #4)
   13400:	mov	r2, #5
   13404:	movw	r1, #7816	; 0x1e88
   13408:	movt	r1, #2
   1340c:	bl	167fc <flatcc_json_printer_enum@@Base>
   13410:	b	133f4 <_start@@Base+0xedc>
   13414:	mov	r2, #7
   13418:	movw	r1, #7824	; 0x1e90
   1341c:	movt	r1, #2
   13420:	bl	167fc <flatcc_json_printer_enum@@Base>
   13424:	b	133f4 <_start@@Base+0xedc>
   13428:	mov	r2, #5
   1342c:	movw	r1, #7832	; 0x1e98
   13430:	movt	r1, #2
   13434:	bl	167fc <flatcc_json_printer_enum@@Base>
   13438:	b	133f4 <_start@@Base+0xedc>
   1343c:	mov	r2, #4
   13440:	movw	r1, #7848	; 0x1ea8
   13444:	movt	r1, #2
   13448:	bl	167fc <flatcc_json_printer_enum@@Base>
   1344c:	b	133f4 <_start@@Base+0xedc>
   13450:	str	r4, [sp, #-8]!
   13454:	str	lr, [sp, #4]
   13458:	sub	r1, r1, #1
   1345c:	cmp	r1, #3
   13460:	ldrls	pc, [pc, r1, lsl #2]
   13464:	b	134d0 <_start@@Base+0xfb8>
   13468:	andeq	r3, r1, r8, ror r4
   1346c:	muleq	r1, r4, r4
   13470:	andeq	r3, r1, r8, lsr #9
   13474:			; <UNDEFINED> instruction: 0x000134bc
   13478:	mov	r2, #7
   1347c:	movw	r1, #7856	; 0x1eb0
   13480:	movt	r1, #2
   13484:	bl	167fc <flatcc_json_printer_enum@@Base>
   13488:	ldr	r4, [sp]
   1348c:	add	sp, sp, #4
   13490:	pop	{pc}		; (ldr pc, [sp], #4)
   13494:	mov	r2, #23
   13498:	movw	r1, #7864	; 0x1eb8
   1349c:	movt	r1, #2
   134a0:	bl	167fc <flatcc_json_printer_enum@@Base>
   134a4:	b	13488 <_start@@Base+0xf70>
   134a8:	mov	r2, #8
   134ac:	movw	r1, #7888	; 0x1ed0
   134b0:	movt	r1, #2
   134b4:	bl	167fc <flatcc_json_printer_enum@@Base>
   134b8:	b	13488 <_start@@Base+0xf70>
   134bc:	mov	r2, #3
   134c0:	movw	r1, #7900	; 0x1edc
   134c4:	movt	r1, #2
   134c8:	bl	167fc <flatcc_json_printer_enum@@Base>
   134cc:	b	13488 <_start@@Base+0xf70>
   134d0:	mov	r2, #4
   134d4:	movw	r1, #7848	; 0x1ea8
   134d8:	movt	r1, #2
   134dc:	bl	167fc <flatcc_json_printer_enum@@Base>
   134e0:	b	13488 <_start@@Base+0xf70>
   134e4:	strd	r4, [sp, #-20]!	; 0xffffffec
   134e8:	strd	r6, [sp, #8]
   134ec:	str	lr, [sp, #16]
   134f0:	sub	sp, sp, #20
   134f4:	mov	r6, r0
   134f8:	mov	r7, r1
   134fc:	movw	r5, #13732	; 0x35a4
   13500:	movt	r5, #1
   13504:	str	r5, [sp, #8]
   13508:	mov	r4, #2
   1350c:	str	r4, [sp, #4]
   13510:	mov	r3, #5
   13514:	str	r3, [sp]
   13518:	movw	r3, #7184	; 0x1c10
   1351c:	movt	r3, #2
   13520:	mov	r2, #0
   13524:	bl	18d20 <flatcc_json_printer_int8_enum_field@@Base>
   13528:	str	r5, [sp, #8]
   1352c:	str	r4, [sp, #4]
   13530:	mov	r3, #6
   13534:	str	r3, [sp]
   13538:	movw	r3, #7904	; 0x1ee0
   1353c:	movt	r3, #2
   13540:	mov	r2, #1
   13544:	mov	r1, r7
   13548:	mov	r0, r6
   1354c:	bl	18d20 <flatcc_json_printer_int8_enum_field@@Base>
   13550:	str	r4, [sp, #4]
   13554:	str	r4, [sp]
   13558:	movw	r3, #7912	; 0x1ee8
   1355c:	movt	r3, #2
   13560:	mov	r2, r4
   13564:	mov	r1, r7
   13568:	mov	r0, r6
   1356c:	bl	16e5c <flatcc_json_printer_uint8_field@@Base>
   13570:	str	r4, [sp, #4]
   13574:	mov	r2, #3
   13578:	str	r2, [sp]
   1357c:	movw	r3, #7916	; 0x1eec
   13580:	movt	r3, #2
   13584:	mov	r1, r7
   13588:	mov	r0, r6
   1358c:	bl	16e5c <flatcc_json_printer_uint8_field@@Base>
   13590:	add	sp, sp, #20
   13594:	ldrd	r4, [sp]
   13598:	ldrd	r6, [sp, #8]
   1359c:	add	sp, sp, #16
   135a0:	pop	{pc}		; (ldr pc, [sp], #4)
   135a4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   135a8:	strd	r6, [sp, #8]
   135ac:	str	r8, [sp, #16]
   135b0:	str	lr, [sp, #20]
   135b4:	mov	r5, r0
   135b8:	uxtb	r4, r1
   135bc:	tst	r4, #244	; 0xf4
   135c0:	movne	r3, #1
   135c4:	moveq	r3, #0
   135c8:	cmp	r4, #0
   135cc:	moveq	r3, #1
   135d0:	cmp	r3, #0
   135d4:	beq	135f0 <_start@@Base+0x10d8>
   135d8:	bl	166dc <flatcc_json_printer_int8@@Base>
   135dc:	ldrd	r4, [sp]
   135e0:	ldrd	r6, [sp, #8]
   135e4:	ldr	r8, [sp, #16]
   135e8:	add	sp, sp, #20
   135ec:	pop	{pc}		; (ldr pc, [sp], #4)
   135f0:	sub	r3, r4, #1
   135f4:	tst	r3, r4
   135f8:	movne	r6, #1
   135fc:	moveq	r6, #0
   13600:	mov	r1, r6
   13604:	bl	16894 <flatcc_json_printer_delimit_enum_flags@@Base>
   13608:	tst	r4, #1
   1360c:	moveq	r1, #0
   13610:	bne	13634 <_start@@Base+0x111c>
   13614:	tst	r4, #2
   13618:	bne	13654 <_start@@Base+0x113c>
   1361c:	tst	r4, #8
   13620:	bne	13674 <_start@@Base+0x115c>
   13624:	mov	r1, r6
   13628:	mov	r0, r5
   1362c:	bl	16894 <flatcc_json_printer_delimit_enum_flags@@Base>
   13630:	b	135dc <_start@@Base+0x10c4>
   13634:	mov	r3, #3
   13638:	movw	r2, #7920	; 0x1ef0
   1363c:	movt	r2, #2
   13640:	mov	r1, #0
   13644:	mov	r0, r5
   13648:	bl	168c8 <flatcc_json_printer_enum_flag@@Base>
   1364c:	mov	r1, #1
   13650:	b	13614 <_start@@Base+0x10fc>
   13654:	add	r7, r1, #1
   13658:	mov	r3, #5
   1365c:	movw	r2, #7924	; 0x1ef4
   13660:	movt	r2, #2
   13664:	mov	r0, r5
   13668:	bl	168c8 <flatcc_json_printer_enum_flag@@Base>
   1366c:	mov	r1, r7
   13670:	b	1361c <_start@@Base+0x1104>
   13674:	mov	r3, #4
   13678:	movw	r2, #7932	; 0x1efc
   1367c:	movt	r2, #2
   13680:	mov	r0, r5
   13684:	bl	168c8 <flatcc_json_printer_enum_flag@@Base>
   13688:	b	13624 <_start@@Base+0x110c>
   1368c:	strd	r4, [sp, #-16]!
   13690:	str	r6, [sp, #8]
   13694:	str	lr, [sp, #12]
   13698:	sub	sp, sp, #16
   1369c:	mov	r5, r0
   136a0:	mov	r4, r1
   136a4:	mov	r6, #1
   136a8:	str	r6, [sp, #4]
   136ac:	movw	r3, #7940	; 0x1f04
   136b0:	movt	r3, #2
   136b4:	str	r3, [sp]
   136b8:	mov	r3, #0
   136bc:	mov	r2, r1
   136c0:	mov	r1, r3
   136c4:	bl	1a634 <flatcc_json_printer_float_struct_field@@Base>
   136c8:	str	r6, [sp, #4]
   136cc:	movw	r3, #7252	; 0x1c54
   136d0:	movt	r3, #2
   136d4:	str	r3, [sp]
   136d8:	mov	r3, #4
   136dc:	mov	r2, r4
   136e0:	mov	r1, r6
   136e4:	mov	r0, r5
   136e8:	bl	1a634 <flatcc_json_printer_float_struct_field@@Base>
   136ec:	str	r6, [sp, #4]
   136f0:	movw	r3, #7944	; 0x1f08
   136f4:	movt	r3, #2
   136f8:	str	r3, [sp]
   136fc:	mov	r3, #8
   13700:	mov	r2, r4
   13704:	mov	r1, #2
   13708:	mov	r0, r5
   1370c:	bl	1a634 <flatcc_json_printer_float_struct_field@@Base>
   13710:	mov	r6, #5
   13714:	str	r6, [sp, #4]
   13718:	movw	r3, #7948	; 0x1f0c
   1371c:	movt	r3, #2
   13720:	str	r3, [sp]
   13724:	mov	r3, #16
   13728:	mov	r2, r4
   1372c:	mov	r1, #3
   13730:	mov	r0, r5
   13734:	bl	1a7d0 <flatcc_json_printer_double_struct_field@@Base>
   13738:	movw	r3, #13732	; 0x35a4
   1373c:	movt	r3, #1
   13740:	str	r3, [sp, #8]
   13744:	str	r6, [sp, #4]
   13748:	movw	r3, #7956	; 0x1f14
   1374c:	movt	r3, #2
   13750:	str	r3, [sp]
   13754:	mov	r3, #24
   13758:	mov	r2, r4
   1375c:	mov	r1, #4
   13760:	mov	r0, r5
   13764:	bl	1b054 <flatcc_json_printer_int8_enum_struct_field@@Base>
   13768:	movw	r3, #12276	; 0x2ff4
   1376c:	movt	r3, #1
   13770:	str	r3, [sp, #8]
   13774:	str	r6, [sp, #4]
   13778:	movw	r3, #7964	; 0x1f1c
   1377c:	movt	r3, #2
   13780:	str	r3, [sp]
   13784:	mov	r3, #26
   13788:	mov	r2, r4
   1378c:	mov	r1, r6
   13790:	mov	r0, r5
   13794:	bl	20958 <flatcc_json_printer_embedded_struct_field@@Base>
   13798:	add	sp, sp, #16
   1379c:	ldrd	r4, [sp]
   137a0:	ldr	r6, [sp, #8]
   137a4:	add	sp, sp, #12
   137a8:	pop	{pc}		; (ldr pc, [sp], #4)
   137ac:	strd	r4, [sp, #-28]!	; 0xffffffe4
   137b0:	strd	r6, [sp, #8]
   137b4:	strd	r8, [sp, #16]
   137b8:	str	lr, [sp, #24]
   137bc:	sub	sp, sp, #12
   137c0:	mov	r4, r1
   137c4:	subs	r9, r2, #0
   137c8:	addeq	r9, sp, #4
   137cc:	movw	r1, #7972	; 0x1f24
   137d0:	movt	r1, #2
   137d4:	bl	12404 <fopen@plt>
   137d8:	subs	r6, r0, #0
   137dc:	beq	13870 <_start@@Base+0x1358>
   137e0:	mov	r2, #2
   137e4:	mov	r1, #0
   137e8:	mov	r0, r6
   137ec:	bl	124f4 <fseek@plt>
   137f0:	mov	r0, r6
   137f4:	bl	12434 <ftell@plt>
   137f8:	mov	r5, r0
   137fc:	str	r0, [r9]
   13800:	cmp	r4, #0
   13804:	cmpne	r0, r4
   13808:	bhi	13878 <_start@@Base+0x1360>
   1380c:	mov	r0, r6
   13810:	bl	1244c <rewind@plt>
   13814:	cmp	r5, #0
   13818:	movne	r0, r5
   1381c:	moveq	r0, #1
   13820:	bl	12488 <malloc@plt>
   13824:	subs	r7, r0, #0
   13828:	beq	1387c <_start@@Base+0x1364>
   1382c:	mov	r4, #0
   13830:	mov	r8, #1
   13834:	mov	r3, r6
   13838:	sub	r2, r5, r4
   1383c:	mov	r1, r8
   13840:	add	r0, r7, r4
   13844:	bl	12470 <fread@plt>
   13848:	cmp	r0, #0
   1384c:	beq	13858 <_start@@Base+0x1340>
   13850:	add	r4, r4, r0
   13854:	b	13834 <_start@@Base+0x131c>
   13858:	cmp	r4, r5
   1385c:	bne	1387c <_start@@Base+0x1364>
   13860:	mov	r0, r6
   13864:	bl	124dc <fclose@plt>
   13868:	str	r5, [r9]
   1386c:	b	1389c <_start@@Base+0x1384>
   13870:	mov	r5, #0
   13874:	b	13894 <_start@@Base+0x137c>
   13878:	mov	r7, #0
   1387c:	mov	r0, r6
   13880:	bl	124dc <fclose@plt>
   13884:	cmp	r7, #0
   13888:	beq	13894 <_start@@Base+0x137c>
   1388c:	mov	r0, r7
   13890:	bl	1241c <free@plt>
   13894:	str	r5, [r9]
   13898:	mov	r7, #0
   1389c:	mov	r0, r7
   138a0:	add	sp, sp, #12
   138a4:	ldrd	r4, [sp]
   138a8:	ldrd	r6, [sp, #8]
   138ac:	ldrd	r8, [sp, #16]
   138b0:	add	sp, sp, #24
   138b4:	pop	{pc}		; (ldr pc, [sp], #4)

000138b8 <test_print@@Base>:
   138b8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   138bc:	strd	r6, [sp, #8]
   138c0:	str	r8, [sp, #16]
   138c4:	str	lr, [sp, #20]
   138c8:	sub	sp, sp, #72	; 0x48
   138cc:	mov	r3, #0
   138d0:	str	r3, [sp, #68]	; 0x44
   138d4:	str	r3, [sp, #64]	; 0x40
   138d8:	str	r3, [sp, #60]	; 0x3c
   138dc:	movw	r3, #12412	; 0x307c
   138e0:	movt	r3, #3
   138e4:	movw	r1, #7976	; 0x1f28
   138e8:	movt	r1, #2
   138ec:	ldr	r0, [r3]
   138f0:	bl	12404 <fopen@plt>
   138f4:	subs	r4, r0, #0
   138f8:	beq	13a94 <test_print@@Base+0x1dc>
   138fc:	mov	r1, r4
   13900:	add	r0, sp, #12
   13904:	bl	21558 <flatcc_json_printer_init@@Base>
   13908:	mov	r3, #2
   1390c:	strb	r3, [sp, #37]	; 0x25
   13910:	mov	r3, #1
   13914:	strb	r3, [sp, #38]	; 0x26
   13918:	mov	r3, #0
   1391c:	strb	r3, [sp, #39]	; 0x27
   13920:	movw	r3, #12436	; 0x3094
   13924:	movt	r3, #3
   13928:	ldr	r5, [r3]
   1392c:	cmp	r5, #0
   13930:	beq	1394c <test_print@@Base+0x94>
   13934:	movw	r1, #8012	; 0x1f4c
   13938:	movt	r1, #2
   1393c:	mov	r0, r5
   13940:	bl	123f8 <strcmp@plt>
   13944:	cmp	r0, #0
   13948:	bne	13ac0 <test_print@@Base+0x208>
   1394c:	mov	r3, #288	; 0x120
   13950:	str	r3, [sp, #68]	; 0x44
   13954:	movw	r5, #6612	; 0x19d4
   13958:	movt	r5, #2
   1395c:	movw	r3, #12412	; 0x307c
   13960:	movt	r3, #3
   13964:	add	r2, sp, #64	; 0x40
   13968:	mov	r1, #10240	; 0x2800
   1396c:	ldr	r0, [r3, #4]
   13970:	bl	137ac <_start@@Base+0x1294>
   13974:	subs	r8, r0, #0
   13978:	beq	13b10 <test_print@@Base+0x258>
   1397c:	movw	r3, #10520	; 0x2918
   13980:	movt	r3, #1
   13984:	str	r3, [sp]
   13988:	movw	r3, #8104	; 0x1fa8
   1398c:	movt	r3, #2
   13990:	ldr	r2, [sp, #68]	; 0x44
   13994:	mov	r1, r5
   13998:	add	r0, sp, #12
   1399c:	bl	20f60 <flatcc_json_printer_table_as_root@@Base>
   139a0:	mov	r1, #1
   139a4:	add	r0, sp, #12
   139a8:	ldr	r3, [sp, #56]	; 0x38
   139ac:	blx	r3
   139b0:	ldr	r3, [sp, #48]	; 0x30
   139b4:	cmp	r3, #0
   139b8:	bne	13b64 <test_print@@Base+0x2ac>
   139bc:	mov	r0, r4
   139c0:	bl	124dc <fclose@plt>
   139c4:	movw	r3, #12412	; 0x307c
   139c8:	movt	r3, #3
   139cc:	add	r2, sp, #60	; 0x3c
   139d0:	mov	r1, #10240	; 0x2800
   139d4:	ldr	r0, [r3]
   139d8:	bl	137ac <_start@@Base+0x1294>
   139dc:	subs	r6, r0, #0
   139e0:	beq	13b74 <test_print@@Base+0x2bc>
   139e4:	ldr	r2, [sp, #60]	; 0x3c
   139e8:	ldr	r3, [sp, #64]	; 0x40
   139ec:	cmp	r2, r3
   139f0:	bne	13a08 <test_print@@Base+0x150>
   139f4:	mov	r1, r8
   139f8:	mov	r0, r6
   139fc:	bl	12440 <memcmp@plt>
   13a00:	subs	r7, r0, #0
   13a04:	beq	13ba0 <test_print@@Base+0x2e8>
   13a08:	movw	r3, #12424	; 0x3088
   13a0c:	movt	r3, #3
   13a10:	ldr	r3, [r3]
   13a14:	mov	r2, #54	; 0x36
   13a18:	mov	r1, #1
   13a1c:	movw	r0, #8184	; 0x1ff8
   13a20:	movt	r0, #2
   13a24:	bl	12464 <fwrite@plt>
   13a28:	mvn	r7, #0
   13a2c:	add	r0, sp, #12
   13a30:	bl	217ac <flatcc_json_printer_clear@@Base>
   13a34:	movw	r3, #12436	; 0x3094
   13a38:	movt	r3, #3
   13a3c:	ldr	r3, [r3]
   13a40:	cmp	r3, #0
   13a44:	cmpne	r5, #0
   13a48:	moveq	r4, #0
   13a4c:	bne	13bc4 <test_print@@Base+0x30c>
   13a50:	mov	r0, r8
   13a54:	bl	1241c <free@plt>
   13a58:	cmp	r6, #0
   13a5c:	beq	13a68 <test_print@@Base+0x1b0>
   13a60:	mov	r0, r6
   13a64:	bl	1241c <free@plt>
   13a68:	cmp	r4, #0
   13a6c:	beq	13a78 <test_print@@Base+0x1c0>
   13a70:	mov	r0, r4
   13a74:	bl	124dc <fclose@plt>
   13a78:	mov	r0, r7
   13a7c:	add	sp, sp, #72	; 0x48
   13a80:	ldrd	r4, [sp]
   13a84:	ldrd	r6, [sp, #8]
   13a88:	ldr	r8, [sp, #16]
   13a8c:	add	sp, sp, #20
   13a90:	pop	{pc}		; (ldr pc, [sp], #4)
   13a94:	movw	r2, #12412	; 0x307c
   13a98:	movt	r2, #3
   13a9c:	movw	r3, #12424	; 0x3088
   13aa0:	movt	r3, #3
   13aa4:	ldr	r2, [r2]
   13aa8:	movw	r1, #7980	; 0x1f2c
   13aac:	movt	r1, #2
   13ab0:	ldr	r0, [r3]
   13ab4:	bl	124b8 <fprintf@plt>
   13ab8:	mvn	r7, #0
   13abc:	b	13a78 <test_print@@Base+0x1c0>
   13ac0:	add	r2, sp, #68	; 0x44
   13ac4:	mov	r1, #10240	; 0x2800
   13ac8:	mov	r0, r5
   13acc:	bl	137ac <_start@@Base+0x1294>
   13ad0:	subs	r6, r0, #0
   13ad4:	movne	r5, r6
   13ad8:	bne	1395c <test_print@@Base+0xa4>
   13adc:	movw	r2, #12436	; 0x3094
   13ae0:	movt	r2, #3
   13ae4:	movw	r3, #12424	; 0x3088
   13ae8:	movt	r3, #3
   13aec:	ldr	r2, [r2]
   13af0:	movw	r1, #8016	; 0x1f50
   13af4:	movt	r1, #2
   13af8:	ldr	r0, [r3]
   13afc:	bl	124b8 <fprintf@plt>
   13b00:	add	r0, sp, #12
   13b04:	bl	217ac <flatcc_json_printer_clear@@Base>
   13b08:	mvn	r7, #0
   13b0c:	b	13a58 <test_print@@Base+0x1a0>
   13b10:	movw	r2, #12412	; 0x307c
   13b14:	movt	r2, #3
   13b18:	movw	r3, #12424	; 0x3088
   13b1c:	movt	r3, #3
   13b20:	ldr	r2, [r2, #4]
   13b24:	movw	r1, #8060	; 0x1f7c
   13b28:	movt	r1, #2
   13b2c:	ldr	r0, [r3]
   13b30:	bl	124b8 <fprintf@plt>
   13b34:	add	r0, sp, #12
   13b38:	bl	217ac <flatcc_json_printer_clear@@Base>
   13b3c:	movw	r3, #12436	; 0x3094
   13b40:	movt	r3, #3
   13b44:	ldr	r3, [r3]
   13b48:	cmp	r3, #0
   13b4c:	cmpne	r5, #0
   13b50:	mvneq	r7, #0
   13b54:	beq	13a68 <test_print@@Base+0x1b0>
   13b58:	mov	r6, r8
   13b5c:	mvn	r7, #0
   13b60:	b	13bc8 <test_print@@Base+0x310>
   13b64:	movw	r0, #8112	; 0x1fb0
   13b68:	movt	r0, #2
   13b6c:	bl	1247c <puts@plt>
   13b70:	b	139bc <test_print@@Base+0x104>
   13b74:	movw	r2, #12412	; 0x307c
   13b78:	movt	r2, #3
   13b7c:	movw	r3, #12424	; 0x3088
   13b80:	movt	r3, #3
   13b84:	ldr	r2, [r2]
   13b88:	movw	r1, #8144	; 0x1fd0
   13b8c:	movt	r1, #2
   13b90:	ldr	r0, [r3]
   13b94:	bl	124b8 <fprintf@plt>
   13b98:	mvn	r7, #0
   13b9c:	b	13a2c <test_print@@Base+0x174>
   13ba0:	movw	r3, #12424	; 0x3088
   13ba4:	movt	r3, #3
   13ba8:	ldr	r3, [r3]
   13bac:	mov	r2, #26
   13bb0:	mov	r1, #1
   13bb4:	movw	r0, #8240	; 0x2030
   13bb8:	movt	r0, #2
   13bbc:	bl	12464 <fwrite@plt>
   13bc0:	b	13a2c <test_print@@Base+0x174>
   13bc4:	mov	r4, #0
   13bc8:	mov	r0, r5
   13bcc:	bl	1241c <free@plt>
   13bd0:	cmp	r8, #0
   13bd4:	beq	13a58 <test_print@@Base+0x1a0>
   13bd8:	b	13a50 <test_print@@Base+0x198>

00013bdc <main@@Base>:
   13bdc:	strd	r4, [sp, #-16]!
   13be0:	str	r6, [sp, #8]
   13be4:	str	lr, [sp, #12]
   13be8:	mov	r4, r0
   13bec:	mov	r5, r1
   13bf0:	movw	r3, #12424	; 0x3088
   13bf4:	movt	r3, #3
   13bf8:	ldr	r3, [r3]
   13bfc:	mov	r2, #24
   13c00:	mov	r1, #1
   13c04:	movw	r0, #8268	; 0x204c
   13c08:	movt	r0, #2
   13c0c:	bl	12464 <fwrite@plt>
   13c10:	cmp	r4, #1
   13c14:	cmpne	r4, #4
   13c18:	bne	13c38 <main@@Base+0x5c>
   13c1c:	cmp	r4, #4
   13c20:	beq	13c60 <main@@Base+0x84>
   13c24:	bl	138b8 <test_print@@Base>
   13c28:	ldrd	r4, [sp]
   13c2c:	ldr	r6, [sp, #8]
   13c30:	add	sp, sp, #12
   13c34:	pop	{pc}		; (ldr pc, [sp], #4)
   13c38:	movw	r3, #12424	; 0x3088
   13c3c:	movt	r3, #3
   13c40:	ldr	r3, [r3]
   13c44:	mov	r2, #191	; 0xbf
   13c48:	mov	r1, #1
   13c4c:	movw	r0, #8296	; 0x2068
   13c50:	movt	r0, #2
   13c54:	bl	12464 <fwrite@plt>
   13c58:	mov	r0, #1
   13c5c:	bl	124ac <exit@plt>
   13c60:	movw	r3, #12436	; 0x3094
   13c64:	movt	r3, #3
   13c68:	ldr	r2, [r5, #4]
   13c6c:	str	r2, [r3]
   13c70:	movw	r3, #12412	; 0x307c
   13c74:	movt	r3, #3
   13c78:	ldr	r2, [r5, #8]
   13c7c:	str	r2, [r3, #4]
   13c80:	ldr	r2, [r5, #12]
   13c84:	str	r2, [r3]
   13c88:	b	13c24 <main@@Base+0x48>
   13c8c:	andeq	r0, r0, r0
   13c90:	cmp	r0, #99	; 0x63
   13c94:	bhi	13cb8 <main@@Base+0xdc>
   13c98:	cmp	r0, #9
   13c9c:	bhi	13d08 <main@@Base+0x12c>
   13ca0:	mov	r3, #0
   13ca4:	strb	r3, [r1, #1]
   13ca8:	add	r0, r0, #48	; 0x30
   13cac:	strb	r0, [r1]
   13cb0:	mov	r0, #1
   13cb4:	bx	lr
   13cb8:	mov	r3, #0
   13cbc:	strb	r3, [r1, #3]
   13cc0:	movw	ip, #8544	; 0x2160
   13cc4:	movt	ip, #2
   13cc8:	movw	r3, #34079	; 0x851f
   13ccc:	movt	r3, #20971	; 0x51eb
   13cd0:	umull	r2, r3, r3, r0
   13cd4:	lsr	r3, r3, #5
   13cd8:	mov	r2, #100	; 0x64
   13cdc:	mls	r0, r2, r3, r0
   13ce0:	uxtb	r0, r0
   13ce4:	add	r2, ip, r0, lsl #1
   13ce8:	ldrb	r0, [ip, r0, lsl #1]
   13cec:	strb	r0, [r1, #1]
   13cf0:	ldrb	r2, [r2, #1]
   13cf4:	strb	r2, [r1, #2]
   13cf8:	add	r3, r3, #48	; 0x30
   13cfc:	strb	r3, [r1]
   13d00:	mov	r0, #3
   13d04:	bx	lr
   13d08:	mov	r3, #0
   13d0c:	strb	r3, [r1, #2]
   13d10:	movw	r2, #8544	; 0x2160
   13d14:	movt	r2, #2
   13d18:	movw	r3, #34079	; 0x851f
   13d1c:	movt	r3, #20971	; 0x51eb
   13d20:	umull	ip, r3, r3, r0
   13d24:	lsr	r3, r3, #5
   13d28:	mov	ip, #100	; 0x64
   13d2c:	mls	r0, ip, r3, r0
   13d30:	uxtb	r0, r0
   13d34:	add	r3, r2, r0, lsl #1
   13d38:	ldrb	r2, [r2, r0, lsl #1]
   13d3c:	strb	r2, [r1]
   13d40:	ldrb	r3, [r3, #1]
   13d44:	strb	r3, [r1, #1]
   13d48:	mov	r0, #2
   13d4c:	bx	lr
   13d50:	strd	r4, [sp, #-12]!
   13d54:	str	lr, [sp, #8]
   13d58:	cmp	r0, #1000	; 0x3e8
   13d5c:	bcc	13df4 <main@@Base+0x218>
   13d60:	movw	r3, #9999	; 0x270f
   13d64:	cmp	r0, r3
   13d68:	bhi	13e2c <main@@Base+0x250>
   13d6c:	mov	r3, #0
   13d70:	strb	r3, [r1, #4]
   13d74:	add	ip, r1, #2
   13d78:	movw	lr, #8544	; 0x2160
   13d7c:	movt	lr, #2
   13d80:	movw	r3, #34079	; 0x851f
   13d84:	movt	r3, #20971	; 0x51eb
   13d88:	umull	r2, r3, r3, r0
   13d8c:	lsr	r3, r3, #5
   13d90:	mov	r2, #100	; 0x64
   13d94:	mls	r2, r2, r3, r0
   13d98:	uxth	r2, r2
   13d9c:	add	r4, lr, r2, lsl #1
   13da0:	uxth	r0, r3
   13da4:	ldrb	r3, [lr, r2, lsl #1]
   13da8:	strb	r3, [r1, #2]
   13dac:	ldrb	r3, [r4, #1]
   13db0:	strb	r3, [r1, #3]
   13db4:	mov	r1, #4
   13db8:	movw	r2, #8544	; 0x2160
   13dbc:	movt	r2, #2
   13dc0:	movw	r3, #34079	; 0x851f
   13dc4:	movt	r3, #20971	; 0x51eb
   13dc8:	umull	lr, r3, r3, r0
   13dcc:	lsr	r3, r3, #5
   13dd0:	mov	lr, #100	; 0x64
   13dd4:	mls	r3, lr, r3, r0
   13dd8:	uxth	r3, r3
   13ddc:	add	r0, r2, r3, lsl #1
   13de0:	ldrb	r3, [r2, r3, lsl #1]
   13de4:	strb	r3, [ip, #-2]
   13de8:	ldrb	r3, [r0, #1]
   13dec:	strb	r3, [ip, #-1]
   13df0:	b	13ed4 <main@@Base+0x2f8>
   13df4:	cmp	r0, #99	; 0x63
   13df8:	bhi	13e7c <main@@Base+0x2a0>
   13dfc:	cmp	r0, #9
   13e00:	bhi	13e18 <main@@Base+0x23c>
   13e04:	add	r4, r1, #1
   13e08:	mov	r3, #0
   13e0c:	strb	r3, [r1, #1]
   13e10:	mov	r1, #1
   13e14:	b	13ecc <main@@Base+0x2f0>
   13e18:	add	ip, r1, #2
   13e1c:	mov	r3, #0
   13e20:	strb	r3, [r1, #2]
   13e24:	mov	r1, #2
   13e28:	b	13db8 <main@@Base+0x1dc>
   13e2c:	mov	r3, #0
   13e30:	strb	r3, [r1, #5]
   13e34:	add	lr, r1, #3
   13e38:	movw	ip, #8544	; 0x2160
   13e3c:	movt	ip, #2
   13e40:	movw	r3, #34079	; 0x851f
   13e44:	movt	r3, #20971	; 0x51eb
   13e48:	umull	r2, r3, r3, r0
   13e4c:	lsr	r3, r3, #5
   13e50:	mov	r2, #100	; 0x64
   13e54:	mls	r2, r2, r3, r0
   13e58:	uxth	r2, r2
   13e5c:	add	r4, ip, r2, lsl #1
   13e60:	uxth	r0, r3
   13e64:	ldrb	r3, [ip, r2, lsl #1]
   13e68:	strb	r3, [r1, #3]
   13e6c:	ldrb	r3, [r4, #1]
   13e70:	strb	r3, [r1, #4]
   13e74:	mov	r1, #5
   13e78:	b	13e8c <main@@Base+0x2b0>
   13e7c:	add	lr, r1, #3
   13e80:	mov	r3, #0
   13e84:	strb	r3, [r1, #3]
   13e88:	mov	r1, #3
   13e8c:	sub	r4, lr, #2
   13e90:	movw	ip, #8544	; 0x2160
   13e94:	movt	ip, #2
   13e98:	movw	r3, #34079	; 0x851f
   13e9c:	movt	r3, #20971	; 0x51eb
   13ea0:	umull	r2, r3, r3, r0
   13ea4:	lsr	r3, r3, #5
   13ea8:	mov	r2, #100	; 0x64
   13eac:	mls	r2, r2, r3, r0
   13eb0:	uxth	r2, r2
   13eb4:	add	r5, ip, r2, lsl #1
   13eb8:	uxth	r0, r3
   13ebc:	ldrb	r3, [ip, r2, lsl #1]
   13ec0:	strb	r3, [lr, #-2]
   13ec4:	ldrb	r3, [r5, #1]
   13ec8:	strb	r3, [lr, #-1]
   13ecc:	add	r0, r0, #48	; 0x30
   13ed0:	strb	r0, [r4, #-1]
   13ed4:	mov	r0, r1
   13ed8:	ldrd	r4, [sp]
   13edc:	add	sp, sp, #8
   13ee0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ee4:	strd	r4, [sp, #-12]!
   13ee8:	str	lr, [sp, #8]
   13eec:	mov	r3, r0
   13ef0:	movw	r2, #9999	; 0x270f
   13ef4:	cmp	r0, r2
   13ef8:	bls	13f74 <main@@Base+0x398>
   13efc:	movw	r2, #38527	; 0x967f
   13f00:	movt	r2, #152	; 0x98
   13f04:	cmp	r0, r2
   13f08:	bls	13f40 <main@@Base+0x364>
   13f0c:	movw	r2, #51711	; 0xc9ff
   13f10:	movt	r2, #15258	; 0x3b9a
   13f14:	cmp	r0, r2
   13f18:	bhi	14100 <main@@Base+0x524>
   13f1c:	movw	r2, #57599	; 0xe0ff
   13f20:	movt	r2, #1525	; 0x5f5
   13f24:	cmp	r0, r2
   13f28:	bhi	13fdc <main@@Base+0x400>
   13f2c:	add	r4, r1, #8
   13f30:	mov	r2, #0
   13f34:	strb	r2, [r1, #8]
   13f38:	mov	r0, #8
   13f3c:	b	14148 <main@@Base+0x56c>
   13f40:	movw	r2, #16959	; 0x423f
   13f44:	movt	r2, #15
   13f48:	cmp	r0, r2
   13f4c:	bhi	140ec <main@@Base+0x510>
   13f50:	movw	r2, #34463	; 0x869f
   13f54:	movt	r2, #1
   13f58:	cmp	r0, r2
   13f5c:	bhi	14234 <main@@Base+0x658>
   13f60:	add	r4, r1, #5
   13f64:	mov	r2, #0
   13f68:	strb	r2, [r1, #5]
   13f6c:	mov	r0, #5
   13f70:	b	14060 <main@@Base+0x484>
   13f74:	cmp	r0, #99	; 0x63
   13f78:	bls	13f98 <main@@Base+0x3bc>
   13f7c:	cmp	r0, #1000	; 0x3e8
   13f80:	bcs	13fb4 <main@@Base+0x3d8>
   13f84:	add	lr, r1, #3
   13f88:	mov	r2, #0
   13f8c:	strb	r2, [r1, #3]
   13f90:	mov	r0, #3
   13f94:	b	1409c <main@@Base+0x4c0>
   13f98:	cmp	r0, #9
   13f9c:	bhi	13fc8 <main@@Base+0x3ec>
   13fa0:	add	r4, r1, #1
   13fa4:	mov	r2, #0
   13fa8:	strb	r2, [r1, #1]
   13fac:	mov	r0, #1
   13fb0:	b	140d8 <main@@Base+0x4fc>
   13fb4:	add	r4, r1, #4
   13fb8:	mov	r2, #0
   13fbc:	strb	r2, [r1, #4]
   13fc0:	mov	r0, #4
   13fc4:	b	141c0 <main@@Base+0x5e4>
   13fc8:	add	lr, r1, #2
   13fcc:	mov	r2, #0
   13fd0:	strb	r2, [r1, #2]
   13fd4:	mov	r0, #2
   13fd8:	b	141fc <main@@Base+0x620>
   13fdc:	mov	r2, #0
   13fe0:	strb	r2, [r1, #9]
   13fe4:	add	lr, r1, #7
   13fe8:	movw	r0, #8544	; 0x2160
   13fec:	movt	r0, #2
   13ff0:	movw	r2, #34079	; 0x851f
   13ff4:	movt	r2, #20971	; 0x51eb
   13ff8:	umull	ip, r2, r2, r3
   13ffc:	lsr	r2, r2, #5
   14000:	mov	ip, #100	; 0x64
   14004:	mls	ip, ip, r2, r3
   14008:	add	r4, r0, ip, lsl #1
   1400c:	mov	r3, r2
   14010:	ldrb	r2, [r0, ip, lsl #1]
   14014:	strb	r2, [r1, #7]
   14018:	ldrb	r2, [r4, #1]
   1401c:	strb	r2, [r1, #8]
   14020:	mov	r0, #9
   14024:	sub	r4, lr, #2
   14028:	movw	r1, #8544	; 0x2160
   1402c:	movt	r1, #2
   14030:	movw	r2, #34079	; 0x851f
   14034:	movt	r2, #20971	; 0x51eb
   14038:	umull	ip, r2, r2, r3
   1403c:	lsr	r2, r2, #5
   14040:	mov	ip, #100	; 0x64
   14044:	mls	ip, ip, r2, r3
   14048:	add	r5, r1, ip, lsl #1
   1404c:	mov	r3, r2
   14050:	ldrb	r2, [r1, ip, lsl #1]
   14054:	strb	r2, [lr, #-2]
   14058:	ldrb	r2, [r5, #1]
   1405c:	strb	r2, [lr, #-1]
   14060:	sub	lr, r4, #2
   14064:	movw	r1, #8544	; 0x2160
   14068:	movt	r1, #2
   1406c:	movw	r2, #34079	; 0x851f
   14070:	movt	r2, #20971	; 0x51eb
   14074:	umull	ip, r2, r2, r3
   14078:	lsr	r2, r2, #5
   1407c:	mov	ip, #100	; 0x64
   14080:	mls	ip, ip, r2, r3
   14084:	add	r5, r1, ip, lsl #1
   14088:	mov	r3, r2
   1408c:	ldrb	r2, [r1, ip, lsl #1]
   14090:	strb	r2, [r4, #-2]
   14094:	ldrb	r2, [r5, #1]
   14098:	strb	r2, [r4, #-1]
   1409c:	sub	r4, lr, #2
   140a0:	movw	r1, #8544	; 0x2160
   140a4:	movt	r1, #2
   140a8:	movw	r2, #34079	; 0x851f
   140ac:	movt	r2, #20971	; 0x51eb
   140b0:	umull	ip, r2, r2, r3
   140b4:	lsr	r2, r2, #5
   140b8:	mov	ip, #100	; 0x64
   140bc:	mls	ip, ip, r2, r3
   140c0:	add	r5, r1, ip, lsl #1
   140c4:	mov	r3, r2
   140c8:	ldrb	r2, [r1, ip, lsl #1]
   140cc:	strb	r2, [lr, #-2]
   140d0:	ldrb	r2, [r5, #1]
   140d4:	strb	r2, [lr, #-1]
   140d8:	add	r3, r3, #48	; 0x30
   140dc:	strb	r3, [r4, #-1]
   140e0:	ldrd	r4, [sp]
   140e4:	add	sp, sp, #8
   140e8:	pop	{pc}		; (ldr pc, [sp], #4)
   140ec:	add	lr, r1, #7
   140f0:	mov	r2, #0
   140f4:	strb	r2, [r1, #7]
   140f8:	mov	r0, #7
   140fc:	b	14024 <main@@Base+0x448>
   14100:	mov	r2, #0
   14104:	strb	r2, [r1, #10]
   14108:	add	r4, r1, #8
   1410c:	movw	r0, #8544	; 0x2160
   14110:	movt	r0, #2
   14114:	movw	r2, #34079	; 0x851f
   14118:	movt	r2, #20971	; 0x51eb
   1411c:	umull	ip, r2, r2, r3
   14120:	lsr	r2, r2, #5
   14124:	mov	ip, #100	; 0x64
   14128:	mls	ip, ip, r2, r3
   1412c:	add	lr, r0, ip, lsl #1
   14130:	mov	r3, r2
   14134:	ldrb	r2, [r0, ip, lsl #1]
   14138:	strb	r2, [r1, #8]
   1413c:	ldrb	r2, [lr, #1]
   14140:	strb	r2, [r1, #9]
   14144:	mov	r0, #10
   14148:	sub	lr, r4, #2
   1414c:	movw	r1, #8544	; 0x2160
   14150:	movt	r1, #2
   14154:	movw	r2, #34079	; 0x851f
   14158:	movt	r2, #20971	; 0x51eb
   1415c:	umull	ip, r2, r2, r3
   14160:	lsr	r2, r2, #5
   14164:	mov	ip, #100	; 0x64
   14168:	mls	ip, ip, r2, r3
   1416c:	add	r5, r1, ip, lsl #1
   14170:	mov	r3, r2
   14174:	ldrb	r2, [r1, ip, lsl #1]
   14178:	strb	r2, [r4, #-2]
   1417c:	ldrb	r2, [r5, #1]
   14180:	strb	r2, [r4, #-1]
   14184:	sub	r4, lr, #2
   14188:	movw	r1, #8544	; 0x2160
   1418c:	movt	r1, #2
   14190:	movw	r2, #34079	; 0x851f
   14194:	movt	r2, #20971	; 0x51eb
   14198:	umull	ip, r2, r2, r3
   1419c:	lsr	r2, r2, #5
   141a0:	mov	ip, #100	; 0x64
   141a4:	mls	ip, ip, r2, r3
   141a8:	add	r5, r1, ip, lsl #1
   141ac:	mov	r3, r2
   141b0:	ldrb	r2, [r1, ip, lsl #1]
   141b4:	strb	r2, [lr, #-2]
   141b8:	ldrb	r2, [r5, #1]
   141bc:	strb	r2, [lr, #-1]
   141c0:	sub	lr, r4, #2
   141c4:	movw	r1, #8544	; 0x2160
   141c8:	movt	r1, #2
   141cc:	movw	r2, #34079	; 0x851f
   141d0:	movt	r2, #20971	; 0x51eb
   141d4:	umull	ip, r2, r2, r3
   141d8:	lsr	r2, r2, #5
   141dc:	mov	ip, #100	; 0x64
   141e0:	mls	ip, ip, r2, r3
   141e4:	add	r5, r1, ip, lsl #1
   141e8:	mov	r3, r2
   141ec:	ldrb	r2, [r1, ip, lsl #1]
   141f0:	strb	r2, [r4, #-2]
   141f4:	ldrb	r2, [r5, #1]
   141f8:	strb	r2, [r4, #-1]
   141fc:	movw	r1, #8544	; 0x2160
   14200:	movt	r1, #2
   14204:	movw	r2, #34079	; 0x851f
   14208:	movt	r2, #20971	; 0x51eb
   1420c:	umull	ip, r2, r2, r3
   14210:	lsr	r2, r2, #5
   14214:	mov	ip, #100	; 0x64
   14218:	mls	r3, ip, r2, r3
   1421c:	add	r2, r1, r3, lsl #1
   14220:	ldrb	r3, [r1, r3, lsl #1]
   14224:	strb	r3, [lr, #-2]
   14228:	ldrb	r3, [r2, #1]
   1422c:	strb	r3, [lr, #-1]
   14230:	b	140e0 <main@@Base+0x504>
   14234:	add	lr, r1, #6
   14238:	mov	r2, #0
   1423c:	strb	r2, [r1, #6]
   14240:	mov	r0, #6
   14244:	b	14184 <main@@Base+0x5a8>
   14248:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1424c:	strd	r6, [sp, #8]
   14250:	strd	r8, [sp, #16]
   14254:	strd	sl, [sp, #24]
   14258:	str	lr, [sp, #32]
   1425c:	sub	sp, sp, #4
   14260:	mov	r4, r0
   14264:	mov	r6, r2
   14268:	add	r3, pc, #840	; 0x348
   1426c:	ldrd	r2, [r3]
   14270:	cmp	r1, r3
   14274:	cmpeq	r0, r2
   14278:	bls	144a0 <main@@Base+0x8c4>
   1427c:	mov	r5, r1
   14280:	add	r3, pc, #824	; 0x338
   14284:	ldrd	r2, [r3]
   14288:	cmp	r1, r3
   1428c:	cmpeq	r0, r2
   14290:	bls	14514 <main@@Base+0x938>
   14294:	add	r3, pc, #812	; 0x32c
   14298:	ldrd	r2, [r3]
   1429c:	cmp	r1, r3
   142a0:	cmpeq	r0, r2
   142a4:	bls	144d8 <main@@Base+0x8fc>
   142a8:	add	r3, pc, #800	; 0x320
   142ac:	ldrd	r2, [r3]
   142b0:	cmp	r1, r3
   142b4:	cmpeq	r0, r2
   142b8:	bls	144b0 <main@@Base+0x8d4>
   142bc:	add	r3, pc, #788	; 0x314
   142c0:	ldrd	r2, [r3]
   142c4:	cmp	r1, r3
   142c8:	cmpeq	r0, r2
   142cc:	bhi	14610 <main@@Base+0xa34>
   142d0:	mov	r3, #0
   142d4:	strb	r3, [r6, #19]
   142d8:	add	r9, r6, #17
   142dc:	movw	r7, #8544	; 0x2160
   142e0:	movt	r7, #2
   142e4:	mov	r2, #100	; 0x64
   142e8:	mov	r3, #0
   142ec:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   142f0:	mov	r8, r2
   142f4:	add	sl, r7, r2, lsl #1
   142f8:	mov	r2, #100	; 0x64
   142fc:	mov	r3, #0
   14300:	mov	r0, r4
   14304:	mov	r1, r5
   14308:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   1430c:	mov	r4, r0
   14310:	mov	r5, r1
   14314:	ldrb	r3, [r7, r8, lsl #1]
   14318:	strb	r3, [r6, #17]
   1431c:	ldrb	r3, [sl, #1]
   14320:	strb	r3, [r6, #18]
   14324:	mov	r7, #19
   14328:	sub	r8, r9, #2
   1432c:	movw	r6, #8544	; 0x2160
   14330:	movt	r6, #2
   14334:	mov	r2, #100	; 0x64
   14338:	mov	r3, #0
   1433c:	mov	r0, r4
   14340:	mov	r1, r5
   14344:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   14348:	mov	sl, r2
   1434c:	add	fp, r6, r2, lsl #1
   14350:	mov	r2, #100	; 0x64
   14354:	mov	r3, #0
   14358:	mov	r0, r4
   1435c:	mov	r1, r5
   14360:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   14364:	mov	r4, r0
   14368:	mov	r5, r1
   1436c:	ldrb	r3, [r6, sl, lsl #1]
   14370:	strb	r3, [r9, #-2]
   14374:	ldrb	r3, [fp, #1]
   14378:	strb	r3, [r9, #-1]
   1437c:	sub	r9, r8, #2
   14380:	movw	r6, #8544	; 0x2160
   14384:	movt	r6, #2
   14388:	mov	r2, #100	; 0x64
   1438c:	mov	r3, #0
   14390:	mov	r0, r4
   14394:	mov	r1, r5
   14398:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   1439c:	mov	sl, r2
   143a0:	add	fp, r6, r2, lsl #1
   143a4:	mov	r2, #100	; 0x64
   143a8:	mov	r3, #0
   143ac:	mov	r0, r4
   143b0:	mov	r1, r5
   143b4:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   143b8:	mov	r4, r0
   143bc:	mov	r5, r1
   143c0:	ldrb	r3, [r6, sl, lsl #1]
   143c4:	strb	r3, [r8, #-2]
   143c8:	ldrb	r3, [fp, #1]
   143cc:	strb	r3, [r8, #-1]
   143d0:	sub	r8, r9, #2
   143d4:	movw	r6, #8544	; 0x2160
   143d8:	movt	r6, #2
   143dc:	mov	r2, #100	; 0x64
   143e0:	mov	r3, #0
   143e4:	mov	r0, r4
   143e8:	mov	r1, r5
   143ec:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   143f0:	mov	sl, r2
   143f4:	add	fp, r6, r2, lsl #1
   143f8:	mov	r2, #100	; 0x64
   143fc:	mov	r3, #0
   14400:	mov	r0, r4
   14404:	mov	r1, r5
   14408:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   1440c:	mov	r4, r0
   14410:	mov	r5, r1
   14414:	ldrb	r3, [r6, sl, lsl #1]
   14418:	strb	r3, [r9, #-2]
   1441c:	ldrb	r3, [fp, #1]
   14420:	strb	r3, [r9, #-1]
   14424:	movw	r6, #8544	; 0x2160
   14428:	movt	r6, #2
   1442c:	mov	r2, #100	; 0x64
   14430:	mov	r3, #0
   14434:	mov	r0, r4
   14438:	mov	r1, r5
   1443c:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   14440:	add	r3, r6, r2, lsl #1
   14444:	ldrb	r2, [r6, r2, lsl #1]
   14448:	strb	r2, [r8, #-2]
   1444c:	ldrb	r3, [r3, #1]
   14450:	strb	r3, [r8, #-1]
   14454:	sub	r6, r8, #3
   14458:	mov	r2, #100	; 0x64
   1445c:	mov	r3, #0
   14460:	mov	r0, r4
   14464:	mov	r1, r5
   14468:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   1446c:	mov	r2, #10
   14470:	mov	r3, #0
   14474:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   14478:	add	r2, r2, #48	; 0x30
   1447c:	strb	r2, [r8, #-3]
   14480:	mov	r2, #1000	; 0x3e8
   14484:	mov	r3, #0
   14488:	mov	r0, r4
   1448c:	mov	r1, r5
   14490:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   14494:	mov	r4, r0
   14498:	mov	r5, r1
   1449c:	b	1480c <main@@Base+0xc30>
   144a0:	mov	r1, r6
   144a4:	bl	13ee4 <main@@Base+0x308>
   144a8:	mov	r7, r0
   144ac:	b	148dc <main@@Base+0xd00>
   144b0:	add	r3, pc, #296	; 0x128
   144b4:	ldrd	r2, [r3]
   144b8:	cmp	r1, r3
   144bc:	cmpeq	r0, r2
   144c0:	bhi	148fc <main@@Base+0xd20>
   144c4:	add	r9, r6, #17
   144c8:	mov	r3, #0
   144cc:	strb	r3, [r6, #17]
   144d0:	mov	r7, #17
   144d4:	b	14328 <main@@Base+0x74c>
   144d8:	add	r3, pc, #264	; 0x108
   144dc:	ldrd	r2, [r3]
   144e0:	cmp	r1, r3
   144e4:	cmpeq	r0, r2
   144e8:	bhi	14910 <main@@Base+0xd34>
   144ec:	add	r3, pc, #252	; 0xfc
   144f0:	ldrd	r2, [r3]
   144f4:	cmp	r1, r3
   144f8:	cmpeq	r0, r2
   144fc:	bhi	14578 <main@@Base+0x99c>
   14500:	add	r9, r6, #14
   14504:	mov	r3, #0
   14508:	strb	r3, [r6, #14]
   1450c:	mov	r7, #14
   14510:	b	14710 <main@@Base+0xb34>
   14514:	add	r3, pc, #220	; 0xdc
   14518:	ldrd	r2, [r3]
   1451c:	cmp	r1, r3
   14520:	cmpeq	r0, r2
   14524:	bls	14550 <main@@Base+0x974>
   14528:	add	r3, pc, #208	; 0xd0
   1452c:	ldrd	r2, [r3]
   14530:	cmp	r1, r3
   14534:	cmpeq	r0, r2
   14538:	bhi	1458c <main@@Base+0x9b0>
   1453c:	add	r8, r6, #12
   14540:	mov	r3, #0
   14544:	strb	r3, [r6, #12]
   14548:	mov	r7, #12
   1454c:	b	14764 <main@@Base+0xb88>
   14550:	add	r3, pc, #176	; 0xb0
   14554:	ldrd	r2, [r3]
   14558:	cmp	r1, r3
   1455c:	cmpeq	r0, r2
   14560:	bhi	145a0 <main@@Base+0x9c4>
   14564:	add	r9, r6, #10
   14568:	mov	r3, #0
   1456c:	strb	r3, [r6, #10]
   14570:	mov	r7, #10
   14574:	b	147b8 <main@@Base+0xbdc>
   14578:	add	r8, r6, #15
   1457c:	mov	r3, #0
   14580:	strb	r3, [r6, #15]
   14584:	mov	r7, #15
   14588:	b	1437c <main@@Base+0x7a0>
   1458c:	add	r9, r6, #13
   14590:	mov	r3, #0
   14594:	strb	r3, [r6, #13]
   14598:	mov	r7, #13
   1459c:	b	143d0 <main@@Base+0x7f4>
   145a0:	add	r8, r6, #11
   145a4:	mov	r3, #0
   145a8:	strb	r3, [r6, #11]
   145ac:	mov	r7, #11
   145b0:	b	14424 <main@@Base+0x848>
   145b4:	nop	{0}
   145b8:	blcc	fe6c6dbc <__bss_end__@@Base+0xfe693d24>
   145bc:	andeq	r0, r0, r0
   145c0:	mrcmi	15, 3, r9, cr2, cr15, {7}
   145c4:	andeq	r0, r0, r8, lsl r9
   145c8:	svcvs	0x00c0ffff
   145cc:	strdeq	r8, [r3], -r2	; <UNPREDICTABLE>
   145d0:			; <UNDEFINED> instruction: 0xa763ffff
   145d4:	stcleq	6, cr11, [r0, #716]!	; 0x2cc
   145d8:	stmibhi	r7!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^
   145dc:	bhi	ff1dd1f4 <__bss_end__@@Base+0xff1aa15c>
   145e0:	stcpl	15, cr15, [r9, #1020]	; 0x3fc
   145e4:	smceq	13400	; 0x3458
   145e8:	strbge	r7, [r6], #4095	; 0xfff
   145ec:	andeq	r8, r3, lr, ror sp
   145f0:	ldrshtne	r3, [sl], #-255	; 0xffffff01
   145f4:	strdeq	r5, [r0], -r3
   145f8:	ldmdami	r6!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, sp, lr, pc}^
   145fc:	andeq	r0, r0, r7, lsl r0
   14600:	strtle	r0, [r5], #4095	; 0xfff
   14604:	andeq	r0, r0, r8, ror #1
   14608:	strpl	lr, [fp], #-1023	; 0xfffffc01
   1460c:	andeq	r0, r0, r2
   14610:	mov	r3, #0
   14614:	strb	r3, [r6, #20]
   14618:	add	r9, r6, #18
   1461c:	movw	r7, #8544	; 0x2160
   14620:	movt	r7, #2
   14624:	mov	r2, #100	; 0x64
   14628:	mov	r3, #0
   1462c:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   14630:	mov	r8, r2
   14634:	add	sl, r7, r2, lsl #1
   14638:	mov	r2, #100	; 0x64
   1463c:	mov	r3, #0
   14640:	mov	r0, r4
   14644:	mov	r1, r5
   14648:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   1464c:	mov	r4, r0
   14650:	mov	r5, r1
   14654:	ldrb	r3, [r7, r8, lsl #1]
   14658:	strb	r3, [r6, #18]
   1465c:	ldrb	r3, [sl, #1]
   14660:	strb	r3, [r6, #19]
   14664:	mov	r7, #20
   14668:	sub	r8, r9, #2
   1466c:	movw	r6, #8544	; 0x2160
   14670:	movt	r6, #2
   14674:	mov	r2, #100	; 0x64
   14678:	mov	r3, #0
   1467c:	mov	r0, r4
   14680:	mov	r1, r5
   14684:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   14688:	mov	sl, r2
   1468c:	add	fp, r6, r2, lsl #1
   14690:	mov	r2, #100	; 0x64
   14694:	mov	r3, #0
   14698:	mov	r0, r4
   1469c:	mov	r1, r5
   146a0:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   146a4:	mov	r4, r0
   146a8:	mov	r5, r1
   146ac:	ldrb	r3, [r6, sl, lsl #1]
   146b0:	strb	r3, [r9, #-2]
   146b4:	ldrb	r3, [fp, #1]
   146b8:	strb	r3, [r9, #-1]
   146bc:	sub	r9, r8, #2
   146c0:	movw	r6, #8544	; 0x2160
   146c4:	movt	r6, #2
   146c8:	mov	r2, #100	; 0x64
   146cc:	mov	r3, #0
   146d0:	mov	r0, r4
   146d4:	mov	r1, r5
   146d8:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   146dc:	mov	sl, r2
   146e0:	add	fp, r6, r2, lsl #1
   146e4:	mov	r2, #100	; 0x64
   146e8:	mov	r3, #0
   146ec:	mov	r0, r4
   146f0:	mov	r1, r5
   146f4:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   146f8:	mov	r4, r0
   146fc:	mov	r5, r1
   14700:	ldrb	r3, [r6, sl, lsl #1]
   14704:	strb	r3, [r8, #-2]
   14708:	ldrb	r3, [fp, #1]
   1470c:	strb	r3, [r8, #-1]
   14710:	sub	r8, r9, #2
   14714:	movw	r6, #8544	; 0x2160
   14718:	movt	r6, #2
   1471c:	mov	r2, #100	; 0x64
   14720:	mov	r3, #0
   14724:	mov	r0, r4
   14728:	mov	r1, r5
   1472c:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   14730:	mov	sl, r2
   14734:	add	fp, r6, r2, lsl #1
   14738:	mov	r2, #100	; 0x64
   1473c:	mov	r3, #0
   14740:	mov	r0, r4
   14744:	mov	r1, r5
   14748:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   1474c:	mov	r4, r0
   14750:	mov	r5, r1
   14754:	ldrb	r3, [r6, sl, lsl #1]
   14758:	strb	r3, [r9, #-2]
   1475c:	ldrb	r3, [fp, #1]
   14760:	strb	r3, [r9, #-1]
   14764:	sub	r9, r8, #2
   14768:	movw	r6, #8544	; 0x2160
   1476c:	movt	r6, #2
   14770:	mov	r2, #100	; 0x64
   14774:	mov	r3, #0
   14778:	mov	r0, r4
   1477c:	mov	r1, r5
   14780:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   14784:	mov	sl, r2
   14788:	add	fp, r6, r2, lsl #1
   1478c:	mov	r2, #100	; 0x64
   14790:	mov	r3, #0
   14794:	mov	r0, r4
   14798:	mov	r1, r5
   1479c:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   147a0:	mov	r4, r0
   147a4:	mov	r5, r1
   147a8:	ldrb	r3, [r6, sl, lsl #1]
   147ac:	strb	r3, [r8, #-2]
   147b0:	ldrb	r3, [fp, #1]
   147b4:	strb	r3, [r8, #-1]
   147b8:	sub	r6, r9, #2
   147bc:	movw	r8, #8544	; 0x2160
   147c0:	movt	r8, #2
   147c4:	mov	r2, #100	; 0x64
   147c8:	mov	r3, #0
   147cc:	mov	r0, r4
   147d0:	mov	r1, r5
   147d4:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   147d8:	mov	sl, r2
   147dc:	add	fp, r8, r2, lsl #1
   147e0:	mov	r2, #100	; 0x64
   147e4:	mov	r3, #0
   147e8:	mov	r0, r4
   147ec:	mov	r1, r5
   147f0:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   147f4:	mov	r4, r0
   147f8:	mov	r5, r1
   147fc:	ldrb	r3, [r8, sl, lsl #1]
   14800:	strb	r3, [r9, #-2]
   14804:	ldrb	r3, [fp, #1]
   14808:	strb	r3, [r9, #-1]
   1480c:	movw	r8, #8544	; 0x2160
   14810:	movt	r8, #2
   14814:	mov	r2, #100	; 0x64
   14818:	mov	r3, #0
   1481c:	mov	r0, r4
   14820:	mov	r1, r5
   14824:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   14828:	add	r3, r8, r2, lsl #1
   1482c:	ldrb	r2, [r8, r2, lsl #1]
   14830:	strb	r2, [r6, #-2]
   14834:	ldrb	r3, [r3, #1]
   14838:	strb	r3, [r6, #-1]
   1483c:	mov	r2, #100	; 0x64
   14840:	mov	r3, #0
   14844:	mov	r0, r4
   14848:	mov	r1, r5
   1484c:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   14850:	mov	r2, #100	; 0x64
   14854:	mov	r3, #0
   14858:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   1485c:	add	r3, r8, r2, lsl #1
   14860:	ldrb	r2, [r8, r2, lsl #1]
   14864:	strb	r2, [r6, #-4]
   14868:	ldrb	r3, [r3, #1]
   1486c:	strb	r3, [r6, #-3]
   14870:	movw	r2, #10000	; 0x2710
   14874:	mov	r3, #0
   14878:	mov	r0, r4
   1487c:	mov	r1, r5
   14880:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   14884:	mov	r2, #100	; 0x64
   14888:	mov	r3, #0
   1488c:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   14890:	add	r3, r8, r2, lsl #1
   14894:	ldrb	r2, [r8, r2, lsl #1]
   14898:	strb	r2, [r6, #-6]
   1489c:	ldrb	r3, [r3, #1]
   148a0:	strb	r3, [r6, #-5]
   148a4:	movw	r2, #16960	; 0x4240
   148a8:	movt	r2, #15
   148ac:	mov	r3, #0
   148b0:	mov	r0, r4
   148b4:	mov	r1, r5
   148b8:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   148bc:	mov	r2, #100	; 0x64
   148c0:	mov	r3, #0
   148c4:	bl	217f0 <flatcc_json_printer_clear@@Base+0x44>
   148c8:	add	r3, r8, r2, lsl #1
   148cc:	ldrb	r2, [r8, r2, lsl #1]
   148d0:	strb	r2, [r6, #-8]
   148d4:	ldrb	r3, [r3, #1]
   148d8:	strb	r3, [r6, #-7]
   148dc:	mov	r0, r7
   148e0:	add	sp, sp, #4
   148e4:	ldrd	r4, [sp]
   148e8:	ldrd	r6, [sp, #8]
   148ec:	ldrd	r8, [sp, #16]
   148f0:	ldrd	sl, [sp, #24]
   148f4:	add	sp, sp, #32
   148f8:	pop	{pc}		; (ldr pc, [sp], #4)
   148fc:	add	r9, r6, #18
   14900:	mov	r3, #0
   14904:	strb	r3, [r6, #18]
   14908:	mov	r7, #18
   1490c:	b	14668 <main@@Base+0xa8c>
   14910:	add	r8, r6, #16
   14914:	mov	r3, #0
   14918:	strb	r3, [r6, #16]
   1491c:	mov	r7, #16
   14920:	b	146bc <main@@Base+0xae0>
   14924:	str	r4, [sp, #-8]!
   14928:	str	lr, [sp, #4]
   1492c:	lsr	r4, r0, #31
   14930:	cmp	r0, #0
   14934:	blt	14950 <main@@Base+0xd74>
   14938:	uxtb	r0, r0
   1493c:	bl	13c90 <main@@Base+0xb4>
   14940:	add	r0, r0, r4
   14944:	ldr	r4, [sp]
   14948:	add	sp, sp, #4
   1494c:	pop	{pc}		; (ldr pc, [sp], #4)
   14950:	mov	r3, #45	; 0x2d
   14954:	strb	r3, [r1], #1
   14958:	rsb	r0, r0, #0
   1495c:	sxtb	r0, r0
   14960:	b	14938 <main@@Base+0xd5c>
   14964:	str	r4, [sp, #-8]!
   14968:	str	lr, [sp, #4]
   1496c:	lsr	r4, r0, #31
   14970:	cmp	r0, #0
   14974:	blt	14990 <main@@Base+0xdb4>
   14978:	uxth	r0, r0
   1497c:	bl	13d50 <main@@Base+0x174>
   14980:	add	r0, r0, r4
   14984:	ldr	r4, [sp]
   14988:	add	sp, sp, #4
   1498c:	pop	{pc}		; (ldr pc, [sp], #4)
   14990:	mov	r3, #45	; 0x2d
   14994:	strb	r3, [r1], #1
   14998:	rsb	r0, r0, #0
   1499c:	sxth	r0, r0
   149a0:	b	14978 <main@@Base+0xd9c>
   149a4:	str	r4, [sp, #-8]!
   149a8:	str	lr, [sp, #4]
   149ac:	lsr	r4, r0, #31
   149b0:	cmp	r0, #0
   149b4:	blt	149cc <main@@Base+0xdf0>
   149b8:	bl	13ee4 <main@@Base+0x308>
   149bc:	add	r0, r0, r4
   149c0:	ldr	r4, [sp]
   149c4:	add	sp, sp, #4
   149c8:	pop	{pc}		; (ldr pc, [sp], #4)
   149cc:	mov	r3, #45	; 0x2d
   149d0:	strb	r3, [r1], #1
   149d4:	rsb	r0, r0, #0
   149d8:	b	149b8 <main@@Base+0xddc>
   149dc:	str	r4, [sp, #-8]!
   149e0:	str	lr, [sp, #4]
   149e4:	lsr	r4, r1, #31
   149e8:	cmp	r0, #0
   149ec:	sbcs	r3, r1, #0
   149f0:	blt	14a08 <main@@Base+0xe2c>
   149f4:	bl	14248 <main@@Base+0x66c>
   149f8:	add	r0, r0, r4
   149fc:	ldr	r4, [sp]
   14a00:	add	sp, sp, #4
   14a04:	pop	{pc}		; (ldr pc, [sp], #4)
   14a08:	mov	r3, #45	; 0x2d
   14a0c:	strb	r3, [r2], #1
   14a10:	rsbs	r0, r0, #0
   14a14:	rsc	r1, r1, #0
   14a18:	b	149f4 <main@@Base+0xe18>
   14a1c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14a20:	strd	r6, [sp, #8]
   14a24:	strd	r8, [sp, #16]
   14a28:	strd	sl, [sp, #24]
   14a2c:	str	lr, [sp, #32]
   14a30:	sub	sp, sp, #116	; 0x74
   14a34:	str	r0, [sp, #52]	; 0x34
   14a38:	str	r1, [sp, #64]	; 0x40
   14a3c:	mov	r4, r2
   14a40:	str	r2, [sp, #28]
   14a44:	str	r3, [sp, #20]
   14a48:	ldr	ip, [sp, #152]	; 0x98
   14a4c:	str	ip, [sp, #68]	; 0x44
   14a50:	ldr	lr, [sp, #156]	; 0x9c
   14a54:	str	lr, [sp, #48]	; 0x30
   14a58:	ldrd	r0, [sp, #160]	; 0xa0
   14a5c:	ldrd	r2, [sp, #168]	; 0xa8
   14a60:	ldr	lr, [sp, #176]	; 0xb0
   14a64:	ldr	r5, [sp, #180]	; 0xb4
   14a68:	str	r5, [sp, #24]
   14a6c:	subs	sl, r4, lr
   14a70:	ldr	r4, [sp, #20]
   14a74:	sbc	fp, r4, r5
   14a78:	cmp	fp, r1
   14a7c:	cmpeq	sl, r0
   14a80:	bls	14acc <main@@Base+0xef0>
   14a84:	subs	r6, ip, r0
   14a88:	ldr	r4, [sp, #48]	; 0x30
   14a8c:	sbc	r7, r4, r1
   14a90:	cmp	r3, r7
   14a94:	cmpeq	r2, r6
   14a98:	bhi	14ad8 <main@@Base+0xefc>
   14a9c:	subs	ip, ip, r2
   14aa0:	sbc	r6, r4, r3
   14aa4:	subs	ip, ip, r0
   14aa8:	str	ip, [sp, #32]
   14aac:	sbc	ip, r6, r1
   14ab0:	str	ip, [sp, #36]	; 0x24
   14ab4:	ldr	ip, [sp, #64]	; 0x40
   14ab8:	sub	ip, ip, #1
   14abc:	ldr	r4, [sp, #52]	; 0x34
   14ac0:	add	ip, r4, ip
   14ac4:	ldrd	r4, [sp, #32]
   14ac8:	b	14b1c <main@@Base+0xf40>
   14acc:	mov	r8, r0
   14ad0:	mov	r9, r1
   14ad4:	b	14b98 <main@@Base+0xfbc>
   14ad8:	mov	r8, r0
   14adc:	mov	r9, r1
   14ae0:	b	14c44 <main@@Base+0x1068>
   14ae4:	mov	r0, #0
   14ae8:	b	14ca4 <main@@Base+0x10c8>
   14aec:	ldrb	r1, [ip]
   14af0:	sub	r1, r1, #1
   14af4:	strb	r1, [ip]
   14af8:	subs	r7, r4, r2
   14afc:	sbc	r6, r5, r3
   14b00:	mov	r0, r8
   14b04:	mov	r1, r9
   14b08:	cmp	r3, r5
   14b0c:	cmpeq	r2, r4
   14b10:	bhi	14c44 <main@@Base+0x1068>
   14b14:	mov	r4, r7
   14b18:	mov	r5, r6
   14b1c:	adds	r8, r2, r0
   14b20:	adc	r9, r3, r1
   14b24:	cmp	r9, fp
   14b28:	cmpeq	r8, sl
   14b2c:	bcc	14aec <main@@Base+0xf10>
   14b30:	subs	ip, sl, r0
   14b34:	str	ip, [sp]
   14b38:	sbc	ip, fp, r1
   14b3c:	str	ip, [sp, #4]
   14b40:	ldr	ip, [sp, #28]
   14b44:	subs	ip, lr, ip
   14b48:	ldr	r4, [sp, #24]
   14b4c:	ldr	r5, [sp, #20]
   14b50:	sbc	r4, r4, r5
   14b54:	adds	ip, ip, r8
   14b58:	str	ip, [sp, #8]
   14b5c:	adc	ip, r4, r9
   14b60:	str	ip, [sp, #12]
   14b64:	ldrd	r4, [sp]
   14b68:	ldrd	r6, [sp, #8]
   14b6c:	cmp	r5, r7
   14b70:	cmpeq	r4, r6
   14b74:	movcc	r8, r0
   14b78:	movcc	r9, r1
   14b7c:	bcc	14b98 <main@@Base+0xfbc>
   14b80:	ldr	r1, [sp, #64]	; 0x40
   14b84:	sub	r1, r1, #1
   14b88:	ldr	ip, [sp, #52]	; 0x34
   14b8c:	ldrb	r0, [ip, r1]
   14b90:	sub	r0, r0, #1
   14b94:	strb	r0, [ip, r1]
   14b98:	ldr	r1, [sp, #28]
   14b9c:	adds	r1, r1, lr
   14ba0:	str	r1, [sp, #56]	; 0x38
   14ba4:	ldr	r1, [sp, #20]
   14ba8:	ldr	r0, [sp, #24]
   14bac:	adc	r1, r1, r0
   14bb0:	str	r1, [sp, #60]	; 0x3c
   14bb4:	ldrd	r0, [sp, #56]	; 0x38
   14bb8:	cmp	r1, r9
   14bbc:	cmpeq	r0, r8
   14bc0:	bls	14c44 <main@@Base+0x1068>
   14bc4:	ldr	ip, [sp, #68]	; 0x44
   14bc8:	subs	ip, ip, r8
   14bcc:	str	ip, [sp, #80]	; 0x50
   14bd0:	ldr	ip, [sp, #48]	; 0x30
   14bd4:	sbc	ip, ip, r9
   14bd8:	str	ip, [sp, #84]	; 0x54
   14bdc:	ldrd	r4, [sp, #80]	; 0x50
   14be0:	cmp	r5, r3
   14be4:	cmpeq	r4, r2
   14be8:	bcc	14c44 <main@@Base+0x1068>
   14bec:	adds	ip, r2, r8
   14bf0:	str	ip, [sp, #88]	; 0x58
   14bf4:	adc	r3, r3, r9
   14bf8:	str	r3, [sp, #92]	; 0x5c
   14bfc:	ldrd	r2, [sp, #88]	; 0x58
   14c00:	cmp	r3, r1
   14c04:	cmpeq	r2, r0
   14c08:	movcc	r0, #0
   14c0c:	bcc	14ca4 <main@@Base+0x10c8>
   14c10:	subs	ip, r0, r8
   14c14:	str	ip, [sp, #96]	; 0x60
   14c18:	sbc	ip, r1, r9
   14c1c:	str	ip, [sp, #100]	; 0x64
   14c20:	subs	ip, r2, r0
   14c24:	str	ip, [sp, #104]	; 0x68
   14c28:	sbc	r3, r3, r1
   14c2c:	str	r3, [sp, #108]	; 0x6c
   14c30:	ldrd	r2, [sp, #96]	; 0x60
   14c34:	ldrd	r0, [sp, #104]	; 0x68
   14c38:	cmp	r3, r1
   14c3c:	cmpeq	r2, r0
   14c40:	bhi	14ae4 <main@@Base+0xf08>
   14c44:	adds	r3, lr, lr
   14c48:	str	r3, [sp, #40]	; 0x28
   14c4c:	ldr	r1, [sp, #24]
   14c50:	adc	r3, r1, r1
   14c54:	str	r3, [sp, #44]	; 0x2c
   14c58:	ldrd	r2, [sp, #40]	; 0x28
   14c5c:	cmp	r3, r9
   14c60:	cmpeq	r2, r8
   14c64:	movhi	r0, #0
   14c68:	bhi	14ca4 <main@@Base+0x10c8>
   14c6c:	lsl	r3, r1, #2
   14c70:	orr	r3, r3, lr, lsr #30
   14c74:	lsl	r2, lr, #2
   14c78:	ldr	r1, [sp, #68]	; 0x44
   14c7c:	subs	r2, r1, r2
   14c80:	str	r2, [sp, #72]	; 0x48
   14c84:	ldr	r2, [sp, #48]	; 0x30
   14c88:	sbc	r3, r2, r3
   14c8c:	str	r3, [sp, #76]	; 0x4c
   14c90:	ldrd	r2, [sp, #72]	; 0x48
   14c94:	cmp	r3, r9
   14c98:	cmpeq	r2, r8
   14c9c:	movcs	r0, #1
   14ca0:	movcc	r0, #0
   14ca4:	add	sp, sp, #116	; 0x74
   14ca8:	ldrd	r4, [sp]
   14cac:	ldrd	r6, [sp, #8]
   14cb0:	ldrd	r8, [sp, #16]
   14cb4:	ldrd	sl, [sp, #24]
   14cb8:	add	sp, sp, #32
   14cbc:	pop	{pc}		; (ldr pc, [sp], #4)
   14cc0:	strd	r4, [sp, #-12]!
   14cc4:	str	lr, [sp, #8]
   14cc8:	subs	r3, r0, #0
   14ccc:	mov	lr, r1
   14cd0:	movlt	r2, #45	; 0x2d
   14cd4:	strblt	r2, [lr], #1
   14cd8:	rsblt	r3, r3, #0
   14cdc:	mov	r0, lr
   14ce0:	movw	r4, #26215	; 0x6667
   14ce4:	movt	r4, #26214	; 0x6666
   14ce8:	mvn	r5, #9
   14cec:	smull	r2, ip, r4, r3
   14cf0:	asr	r2, r3, #31
   14cf4:	rsb	r2, r2, ip, asr #2
   14cf8:	mla	r3, r5, r2, r3
   14cfc:	add	r3, r3, #48	; 0x30
   14d00:	strb	r3, [r0], #1
   14d04:	mov	r3, r2
   14d08:	cmp	r2, #0
   14d0c:	bne	14cec <main@@Base+0x1110>
   14d10:	mov	r3, #0
   14d14:	strb	r3, [r0]
   14d18:	sub	r3, r0, lr
   14d1c:	add	r5, r3, r3, lsr #31
   14d20:	asr	r5, r5, #1
   14d24:	cmp	r3, #1
   14d28:	ble	14d58 <main@@Base+0x117c>
   14d2c:	sub	r3, lr, #1
   14d30:	mov	ip, r0
   14d34:	ldrb	r2, [r3, #1]
   14d38:	ldrb	r4, [ip, #-1]!
   14d3c:	strb	r4, [r3, #1]
   14d40:	strb	r2, [ip]
   14d44:	add	r2, r3, #2
   14d48:	sub	r2, r2, lr
   14d4c:	add	r3, r3, #1
   14d50:	cmp	r5, r2
   14d54:	bgt	14d34 <main@@Base+0x1158>
   14d58:	sub	r0, r0, r1
   14d5c:	ldrd	r4, [sp]
   14d60:	add	sp, sp, #8
   14d64:	pop	{pc}		; (ldr pc, [sp], #4)
   14d68:	lsl	r3, r0, #2
   14d6c:	movw	r2, #43691	; 0xaaab
   14d70:	movt	r2, #43690	; 0xaaaa
   14d74:	umull	r2, r3, r2, r3
   14d78:	lsr	r3, r3, #1
   14d7c:	add	r3, r3, #3
   14d80:	bic	r3, r3, #3
   14d84:	tst	r1, #128	; 0x80
   14d88:	bne	14db8 <main@@Base+0x11dc>
   14d8c:	movw	r2, #43691	; 0xaaab
   14d90:	movt	r2, #43690	; 0xaaaa
   14d94:	umull	r1, r2, r2, r0
   14d98:	lsr	r2, r2, #1
   14d9c:	add	r2, r2, r2, lsl #1
   14da0:	sub	r2, r0, r2
   14da4:	cmp	r2, #1
   14da8:	subeq	r3, r3, #2
   14dac:	beq	14db8 <main@@Base+0x11dc>
   14db0:	cmp	r2, #2
   14db4:	subeq	r3, r3, #1
   14db8:	mov	r0, r3
   14dbc:	bx	lr
   14dc0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14dc4:	strd	r6, [sp, #8]
   14dc8:	strd	r8, [sp, #16]
   14dcc:	str	lr, [sp, #24]
   14dd0:	ldr	r8, [sp, #28]
   14dd4:	cmp	r3, #0
   14dd8:	beq	14f9c <main@@Base+0x13c0>
   14ddc:	ldr	r6, [r3]
   14de0:	bics	ip, r8, #224	; 0xe0
   14de4:	beq	14e3c <main@@Base+0x1260>
   14de8:	cmp	ip, #1
   14dec:	movweq	r5, #10464	; 0x28e0
   14df0:	movteq	r5, #2
   14df4:	beq	14e44 <main@@Base+0x1268>
   14df8:	mov	r7, r0
   14dfc:	mov	r1, #3
   14e00:	cmp	r2, #0
   14e04:	beq	14e18 <main@@Base+0x123c>
   14e08:	sub	r0, r7, r0
   14e0c:	str	r0, [r2]
   14e10:	cmp	r3, #0
   14e14:	beq	14e24 <main@@Base+0x1248>
   14e18:	ldr	r2, [r3]
   14e1c:	sub	r6, r2, r6
   14e20:	str	r6, [r3]
   14e24:	mov	r0, r1
   14e28:	ldrd	r4, [sp]
   14e2c:	ldrd	r6, [sp, #8]
   14e30:	ldrd	r8, [sp, #16]
   14e34:	add	sp, sp, #24
   14e38:	pop	{pc}		; (ldr pc, [sp], #4)
   14e3c:	movw	r5, #10396	; 0x289c
   14e40:	movt	r5, #2
   14e44:	cmp	r6, #2
   14e48:	bls	14f48 <main@@Base+0x136c>
   14e4c:	add	r4, r0, #4
   14e50:	add	ip, r1, #3
   14e54:	mov	r1, ip
   14e58:	mov	r7, r4
   14e5c:	ldrb	lr, [ip, #-3]
   14e60:	ldrb	lr, [r5, lr, lsr #2]
   14e64:	strb	lr, [r4, #-4]
   14e68:	ldrb	lr, [ip, #-3]
   14e6c:	lsl	lr, lr, #4
   14e70:	and	lr, lr, #48	; 0x30
   14e74:	ldrb	r9, [ip, #-2]
   14e78:	orr	lr, lr, r9, lsr #4
   14e7c:	ldrb	lr, [r5, lr]
   14e80:	strb	lr, [r4, #-3]
   14e84:	ldrb	lr, [ip, #-2]
   14e88:	lsl	lr, lr, #2
   14e8c:	and	lr, lr, #60	; 0x3c
   14e90:	ldrb	r9, [ip, #-1]
   14e94:	orr	lr, lr, r9, lsr #6
   14e98:	ldrb	lr, [r5, lr]
   14e9c:	strb	lr, [r4, #-2]
   14ea0:	ldrb	lr, [ip, #-1]
   14ea4:	and	lr, lr, #63	; 0x3f
   14ea8:	ldrb	lr, [r5, lr]
   14eac:	strb	lr, [r4, #-1]
   14eb0:	sub	r6, r6, #3
   14eb4:	add	r4, r4, #4
   14eb8:	add	ip, ip, #3
   14ebc:	cmp	r6, #2
   14ec0:	bhi	14e54 <main@@Base+0x1278>
   14ec4:	and	r8, r8, #128	; 0x80
   14ec8:	cmp	r6, #1
   14ecc:	beq	14f50 <main@@Base+0x1374>
   14ed0:	cmp	r6, #2
   14ed4:	bne	14f90 <main@@Base+0x13b4>
   14ed8:	ldrb	ip, [r1]
   14edc:	ldrb	ip, [r5, ip, lsr #2]
   14ee0:	strb	ip, [r7]
   14ee4:	ldrb	ip, [r1]
   14ee8:	lsl	ip, ip, #4
   14eec:	and	ip, ip, #48	; 0x30
   14ef0:	ldrb	lr, [r1, #1]
   14ef4:	orr	ip, ip, lr, lsr #4
   14ef8:	ldrb	ip, [r5, ip]
   14efc:	strb	ip, [r7, #1]
   14f00:	ldrb	r1, [r1, #1]
   14f04:	lsl	r1, r1, #2
   14f08:	and	r1, r1, #60	; 0x3c
   14f0c:	ldrb	r1, [r5, r1]
   14f10:	strb	r1, [r7, #2]
   14f14:	cmp	r8, #0
   14f18:	addeq	r7, r7, #3
   14f1c:	beq	14f2c <main@@Base+0x1350>
   14f20:	mov	r1, #61	; 0x3d
   14f24:	strb	r1, [r7, #3]
   14f28:	add	r7, r7, #4
   14f2c:	cmp	r2, #0
   14f30:	moveq	r1, #0
   14f34:	moveq	r6, r1
   14f38:	beq	14e18 <main@@Base+0x123c>
   14f3c:	mov	r1, #0
   14f40:	mov	r6, r1
   14f44:	b	14e08 <main@@Base+0x122c>
   14f48:	mov	r7, r0
   14f4c:	b	14ec4 <main@@Base+0x12e8>
   14f50:	ldrb	ip, [r1]
   14f54:	ldrb	ip, [r5, ip, lsr #2]
   14f58:	strb	ip, [r7]
   14f5c:	ldrb	r1, [r1]
   14f60:	lsl	r1, r1, #4
   14f64:	and	r1, r1, #48	; 0x30
   14f68:	ldrb	r1, [r5, r1]
   14f6c:	strb	r1, [r7, #1]
   14f70:	cmp	r8, #0
   14f74:	addeq	r7, r7, #2
   14f78:	beq	14f2c <main@@Base+0x1350>
   14f7c:	mov	r1, #61	; 0x3d
   14f80:	strb	r1, [r7, #2]
   14f84:	strb	r1, [r7, #3]
   14f88:	add	r7, r7, #4
   14f8c:	b	14f2c <main@@Base+0x1350>
   14f90:	mov	r1, #0
   14f94:	mov	r6, r1
   14f98:	b	14e00 <main@@Base+0x1224>
   14f9c:	cmp	r2, #0
   14fa0:	movne	r7, r0
   14fa4:	movne	r1, #2
   14fa8:	movne	r6, #0
   14fac:	bne	14e08 <main@@Base+0x122c>
   14fb0:	mov	r1, #2
   14fb4:	b	14e24 <main@@Base+0x1248>
   14fb8:	ldr	r3, [r0, #20]
   14fbc:	ldr	r2, [r0, #16]
   14fc0:	cmp	r3, r2
   14fc4:	bcc	14ff0 <main@@Base+0x1414>
   14fc8:	ldr	r2, [r0, #36]	; 0x24
   14fcc:	cmp	r2, #0
   14fd0:	moveq	r2, #3
   14fd4:	streq	r2, [r0, #36]	; 0x24
   14fd8:	ldr	r1, [r0]
   14fdc:	sub	r3, r3, r1
   14fe0:	ldr	r2, [r0, #12]
   14fe4:	add	r3, r2, r3
   14fe8:	str	r3, [r0, #12]
   14fec:	str	r1, [r0, #20]
   14ff0:	ldr	r3, [r0, #20]
   14ff4:	mov	r2, #0
   14ff8:	strb	r2, [r3]
   14ffc:	bx	lr
   15000:	sub	sp, sp, #8
   15004:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15008:	strd	r6, [sp, #8]
   1500c:	strd	r8, [sp, #16]
   15010:	str	sl, [sp, #24]
   15014:	str	lr, [sp, #28]
   15018:	add	r1, sp, #28
   1501c:	stmib	r1, {r2, r3}
   15020:	ldrd	r2, [sp, #32]
   15024:	ldr	lr, [sp, #40]	; 0x28
   15028:	orrs	r1, r2, r3
   1502c:	beq	150e8 <main@@Base+0x150c>
   15030:	mov	r8, #0
   15034:	lsr	r9, r3, #22
   15038:	lsl	r9, r9, #22
   1503c:	orrs	r1, r8, r9
   15040:	subeq	ip, lr, #10
   15044:	moveq	r9, #0
   15048:	moveq	r8, r9
   1504c:	movteq	r8, #65472	; 0xffc0
   15050:	bne	15080 <main@@Base+0x14a4>
   15054:	lsl	r1, r3, #10
   15058:	orr	r1, r1, r2, lsr #22
   1505c:	lsl	lr, r2, #10
   15060:	mov	r2, lr
   15064:	mov	r3, r1
   15068:	mov	lr, ip
   1506c:	mov	r6, r9
   15070:	and	r7, r1, r8
   15074:	sub	ip, ip, #10
   15078:	orrs	r1, r6, r7
   1507c:	beq	15054 <main@@Base+0x1478>
   15080:	cmp	r2, #0
   15084:	sbcs	r1, r3, #0
   15088:	blt	150b4 <main@@Base+0x14d8>
   1508c:	sub	r1, lr, #1
   15090:	adds	r4, r2, r2
   15094:	adc	r5, r3, r3
   15098:	mov	r2, r4
   1509c:	mov	r3, r5
   150a0:	mov	lr, r1
   150a4:	sub	r1, r1, #1
   150a8:	cmp	r4, #0
   150ac:	sbcs	ip, r5, #0
   150b0:	bge	15090 <main@@Base+0x14b4>
   150b4:	strd	r2, [sp, #32]
   150b8:	str	lr, [sp, #40]	; 0x28
   150bc:	strd	r2, [r0]
   150c0:	ldrd	r2, [sp, #40]	; 0x28
   150c4:	strd	r2, [r0, #8]
   150c8:	ldrd	r4, [sp]
   150cc:	ldrd	r6, [sp, #8]
   150d0:	ldrd	r8, [sp, #16]
   150d4:	ldr	sl, [sp, #24]
   150d8:	ldr	lr, [sp, #28]
   150dc:	add	sp, sp, #32
   150e0:	add	sp, sp, #8
   150e4:	bx	lr
   150e8:	ldr	r3, [pc, #20]	; 15104 <main@@Base+0x1528>
   150ec:	mov	r2, #260	; 0x104
   150f0:	movw	r1, #10532	; 0x2924
   150f4:	movt	r1, #2
   150f8:	movw	r0, #10620	; 0x297c
   150fc:	movt	r0, #2
   15100:	bl	1250c <__assert_fail@plt>
   15104:	andeq	r2, r2, ip, lsr #4
   15108:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1510c:	strd	r6, [sp, #8]
   15110:	str	r8, [sp, #16]
   15114:	str	lr, [sp, #20]
   15118:	mov	r5, r0
   1511c:	mov	r7, r1
   15120:	mov	r6, r2
   15124:	ldr	r2, [r0, #20]
   15128:	ldr	r3, [r0, #16]
   1512c:	cmp	r2, r3
   15130:	bcc	15140 <main@@Base+0x1564>
   15134:	ldr	r3, [r0, #44]	; 0x2c
   15138:	mov	r1, #0
   1513c:	blx	r3
   15140:	ldr	r4, [r5, #16]
   15144:	ldr	r3, [r5, #20]
   15148:	sub	r4, r4, r3
   1514c:	cmp	r4, r6
   15150:	bcs	151a0 <main@@Base+0x15c4>
   15154:	mov	r8, #0
   15158:	mov	r2, r4
   1515c:	mov	r1, r7
   15160:	ldr	r0, [r5, #20]
   15164:	bl	12428 <memcpy@plt>
   15168:	ldr	r3, [r5, #20]
   1516c:	add	r3, r3, r4
   15170:	str	r3, [r5, #20]
   15174:	add	r7, r7, r4
   15178:	sub	r6, r6, r4
   1517c:	ldr	r3, [r5, #44]	; 0x2c
   15180:	mov	r1, r8
   15184:	mov	r0, r5
   15188:	blx	r3
   1518c:	ldr	r4, [r5, #16]
   15190:	ldr	r3, [r5, #20]
   15194:	sub	r4, r4, r3
   15198:	cmp	r6, r4
   1519c:	bhi	15158 <main@@Base+0x157c>
   151a0:	mov	r2, r6
   151a4:	mov	r1, r7
   151a8:	ldr	r0, [r5, #20]
   151ac:	bl	12428 <memcpy@plt>
   151b0:	ldr	r3, [r5, #20]
   151b4:	add	r6, r3, r6
   151b8:	str	r6, [r5, #20]
   151bc:	ldrd	r4, [sp]
   151c0:	ldrd	r6, [sp, #8]
   151c4:	ldr	r8, [sp, #16]
   151c8:	add	sp, sp, #20
   151cc:	pop	{pc}		; (ldr pc, [sp], #4)
   151d0:	cmp	r0, #0
   151d4:	beq	151f8 <main@@Base+0x161c>
   151d8:	movw	r3, #8544	; 0x2160
   151dc:	movt	r3, #2
   151e0:	ldr	r2, [r3, #228]	; 0xe4
   151e4:	str	r2, [r1]
   151e8:	ldrb	r3, [r3, #232]	; 0xe8
   151ec:	strb	r3, [r1, #4]
   151f0:	mov	r0, #4
   151f4:	bx	lr
   151f8:	movw	r3, #8544	; 0x2160
   151fc:	movt	r3, #2
   15200:	ldr	r2, [r3, #236]	; 0xec
   15204:	str	r2, [r1]
   15208:	ldrh	r3, [r3, #240]	; 0xf0
   1520c:	strh	r3, [r1, #4]
   15210:	mov	r0, #5
   15214:	bx	lr
   15218:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1521c:	strd	r6, [sp, #8]
   15220:	str	r8, [sp, #16]
   15224:	str	lr, [sp, #20]
   15228:	mov	r4, r0
   1522c:	mov	r6, r1
   15230:	ldr	r2, [r0, #20]
   15234:	ldr	r3, [r0, #16]
   15238:	cmp	r2, r3
   1523c:	bcc	1524c <main@@Base+0x1670>
   15240:	ldr	r3, [r0, #44]	; 0x2c
   15244:	mov	r1, #0
   15248:	blx	r3
   1524c:	ldr	r5, [r4, #16]
   15250:	ldr	r3, [r4, #20]
   15254:	sub	r5, r5, r3
   15258:	cmp	r5, r6
   1525c:	bcs	152ac <main@@Base+0x16d0>
   15260:	mov	r8, #32
   15264:	mov	r7, #0
   15268:	mov	r2, r5
   1526c:	mov	r1, r8
   15270:	ldr	r0, [r4, #20]
   15274:	bl	124c4 <memset@plt>
   15278:	ldr	r3, [r4, #20]
   1527c:	add	r3, r3, r5
   15280:	str	r3, [r4, #20]
   15284:	sub	r6, r6, r5
   15288:	ldr	r3, [r4, #44]	; 0x2c
   1528c:	mov	r1, r7
   15290:	mov	r0, r4
   15294:	blx	r3
   15298:	ldr	r5, [r4, #16]
   1529c:	ldr	r3, [r4, #20]
   152a0:	sub	r5, r5, r3
   152a4:	cmp	r6, r5
   152a8:	bhi	15268 <main@@Base+0x168c>
   152ac:	mov	r2, r6
   152b0:	mov	r1, #32
   152b4:	ldr	r0, [r4, #20]
   152b8:	bl	124c4 <memset@plt>
   152bc:	ldr	r3, [r4, #20]
   152c0:	add	r6, r3, r6
   152c4:	str	r6, [r4, #20]
   152c8:	ldrd	r4, [sp]
   152cc:	ldrd	r6, [sp, #8]
   152d0:	ldr	r8, [sp, #16]
   152d4:	add	sp, sp, #20
   152d8:	pop	{pc}		; (ldr pc, [sp], #4)
   152dc:	strd	r4, [sp, #-16]!
   152e0:	str	r6, [sp, #8]
   152e4:	str	lr, [sp, #12]
   152e8:	mov	r4, r0
   152ec:	ldrb	r3, [r0, #25]
   152f0:	ldr	r5, [r0, #32]
   152f4:	mul	r5, r5, r3
   152f8:	ldr	r0, [r0, #20]
   152fc:	add	r3, r0, r5
   15300:	ldr	r2, [r4, #16]
   15304:	cmp	r2, r3
   15308:	bcs	15328 <main@@Base+0x174c>
   1530c:	mov	r1, r5
   15310:	mov	r0, r4
   15314:	bl	15218 <main@@Base+0x163c>
   15318:	ldrd	r4, [sp]
   1531c:	ldr	r6, [sp, #8]
   15320:	add	sp, sp, #12
   15324:	pop	{pc}		; (ldr pc, [sp], #4)
   15328:	mov	r2, r5
   1532c:	mov	r1, #32
   15330:	bl	124c4 <memset@plt>
   15334:	ldr	r3, [r4, #20]
   15338:	add	r5, r3, r5
   1533c:	str	r5, [r4, #20]
   15340:	b	15318 <main@@Base+0x173c>
   15344:	strd	r4, [sp, #-12]!
   15348:	str	lr, [sp, #8]
   1534c:	sub	sp, sp, #12
   15350:	mov	r5, r0
   15354:	mov	r0, #0
   15358:	str	r0, [sp, #4]
   1535c:	cmp	r1, r0
   15360:	cmpne	r2, #7
   15364:	bls	153ac <main@@Base+0x17d0>
   15368:	mov	r4, r1
   1536c:	cmp	r3, #0
   15370:	beq	15398 <main@@Base+0x17bc>
   15374:	mov	r2, #4
   15378:	mov	r1, r3
   1537c:	add	r0, sp, r2
   15380:	bl	124d0 <strncpy@plt>
   15384:	ldr	r3, [sp, #4]
   15388:	ldr	r2, [r4, #4]
   1538c:	cmp	r2, r3
   15390:	cmpne	r3, #0
   15394:	bne	153d8 <main@@Base+0x17fc>
   15398:	mov	r0, #1
   1539c:	add	sp, sp, #12
   153a0:	ldrd	r4, [sp]
   153a4:	add	sp, sp, #8
   153a8:	pop	{pc}		; (ldr pc, [sp], #4)
   153ac:	ldr	r3, [r5, #36]	; 0x24
   153b0:	cmp	r3, r0
   153b4:	moveq	r3, #1
   153b8:	streq	r3, [r5, #36]	; 0x24
   153bc:	ldr	r3, [pc, #64]	; 15404 <main@@Base+0x1828>
   153c0:	movw	r2, #1019	; 0x3fb
   153c4:	movw	r1, #10632	; 0x2988
   153c8:	movt	r1, #2
   153cc:	movw	r0, #10708	; 0x29d4
   153d0:	movt	r0, #2
   153d4:	bl	1250c <__assert_fail@plt>
   153d8:	ldr	r3, [r5, #36]	; 0x24
   153dc:	cmp	r3, #0
   153e0:	moveq	r3, #1
   153e4:	streq	r3, [r5, #36]	; 0x24
   153e8:	ldr	r3, [pc, #20]	; 15404 <main@@Base+0x1828>
   153ec:	movw	r2, #1028	; 0x404
   153f0:	movw	r1, #10632	; 0x2988
   153f4:	movt	r1, #2
   153f8:	movw	r0, #10740	; 0x29f4
   153fc:	movt	r0, #2
   15400:	bl	1250c <__assert_fail@plt>
   15404:	andeq	r2, r2, r4, asr r2
   15408:	strd	r4, [sp, #-16]!
   1540c:	str	r6, [sp, #8]
   15410:	str	lr, [sp, #12]
   15414:	mov	r4, r0
   15418:	cmp	r1, #0
   1541c:	bne	15430 <main@@Base+0x1854>
   15420:	ldr	r3, [r0, #20]
   15424:	ldr	r5, [r0, #16]
   15428:	cmp	r3, r5
   1542c:	bcs	1547c <main@@Base+0x18a0>
   15430:	ldr	r0, [r4]
   15434:	ldr	r5, [r4, #20]
   15438:	sub	r5, r5, r0
   1543c:	ldr	r3, [r4, #40]	; 0x28
   15440:	mov	r2, #1
   15444:	mov	r1, r5
   15448:	bl	12464 <fwrite@plt>
   1544c:	ldr	r3, [r4]
   15450:	str	r3, [r4, #20]
   15454:	ldr	r3, [r4, #12]
   15458:	add	r5, r3, r5
   1545c:	str	r5, [r4, #12]
   15460:	ldr	r3, [r4, #20]
   15464:	mov	r2, #0
   15468:	strb	r2, [r3]
   1546c:	ldrd	r4, [sp]
   15470:	ldr	r6, [sp, #8]
   15474:	add	sp, sp, #12
   15478:	pop	{pc}		; (ldr pc, [sp], #4)
   1547c:	sub	r5, r3, r5
   15480:	ldr	r3, [r0, #40]	; 0x28
   15484:	mov	r2, #1
   15488:	ldr	r1, [r0, #8]
   1548c:	ldr	r0, [r0]
   15490:	bl	12464 <fwrite@plt>
   15494:	ldr	r0, [r4]
   15498:	ldr	r1, [r4, #8]
   1549c:	mov	r2, r5
   154a0:	add	r1, r0, r1
   154a4:	bl	12428 <memcpy@plt>
   154a8:	ldr	r3, [r4]
   154ac:	add	r3, r3, r5
   154b0:	str	r3, [r4, #20]
   154b4:	ldr	r3, [r4, #12]
   154b8:	ldr	r2, [r4, #8]
   154bc:	add	r3, r3, r2
   154c0:	str	r3, [r4, #12]
   154c4:	b	15460 <main@@Base+0x1884>
   154c8:	strd	r4, [sp, #-16]!
   154cc:	str	r6, [sp, #8]
   154d0:	str	lr, [sp, #12]
   154d4:	ldr	r3, [r0, #20]
   154d8:	ldr	r5, [r0]
   154dc:	mov	r2, #0
   154e0:	strb	r2, [r3]
   154e4:	ldr	r1, [r0, #20]
   154e8:	ldr	r2, [r0, #16]
   154ec:	cmp	r1, r2
   154f0:	bcs	15504 <main@@Base+0x1928>
   154f4:	ldrd	r4, [sp]
   154f8:	ldr	r6, [sp, #8]
   154fc:	add	sp, sp, #12
   15500:	pop	{pc}		; (ldr pc, [sp], #4)
   15504:	mov	r4, r0
   15508:	sub	r5, r3, r5
   1550c:	ldr	r1, [r0, #4]
   15510:	lsl	r1, r1, #1
   15514:	ldr	r0, [r0]
   15518:	bl	12458 <realloc@plt>
   1551c:	cmp	r0, #0
   15520:	beq	1555c <main@@Base+0x1980>
   15524:	ldr	r3, [r4, #4]
   15528:	lsl	r3, r3, #1
   1552c:	str	r3, [r4, #4]
   15530:	sub	r3, r3, #64	; 0x40
   15534:	str	r3, [r4, #8]
   15538:	str	r0, [r4]
   1553c:	add	r5, r0, r5
   15540:	str	r5, [r4, #20]
   15544:	add	r0, r0, r3
   15548:	str	r0, [r4, #16]
   1554c:	ldr	r3, [r4, #20]
   15550:	mov	r2, #0
   15554:	strb	r2, [r3]
   15558:	b	154f4 <main@@Base+0x1918>
   1555c:	ldr	r3, [r4, #36]	; 0x24
   15560:	cmp	r3, #0
   15564:	moveq	r3, #3
   15568:	streq	r3, [r4, #36]	; 0x24
   1556c:	ldr	r3, [r4, #12]
   15570:	add	r3, r3, r5
   15574:	str	r3, [r4, #12]
   15578:	ldr	r3, [r4]
   1557c:	str	r3, [r4, #20]
   15580:	b	1554c <main@@Base+0x1970>
   15584:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15588:	strd	r6, [sp, #8]
   1558c:	strd	r8, [sp, #16]
   15590:	strd	sl, [sp, #24]
   15594:	str	lr, [sp, #32]
   15598:	sub	sp, sp, #4
   1559c:	mov	r6, r0
   155a0:	mov	sl, r2
   155a4:	ldr	r3, [r0, #20]
   155a8:	add	r2, r3, #1
   155ac:	str	r2, [r0, #20]
   155b0:	mov	r2, #34	; 0x22
   155b4:	strb	r2, [r3]
   155b8:	mov	r7, #92	; 0x5c
   155bc:	mov	r9, #102	; 0x66
   155c0:	mov	r8, #117	; 0x75
   155c4:	b	15634 <main@@Base+0x1a58>
   155c8:	mov	r5, r1
   155cc:	b	15688 <main@@Base+0x1aac>
   155d0:	mov	r2, fp
   155d4:	bl	12428 <memcpy@plt>
   155d8:	ldr	r3, [r6, #20]
   155dc:	add	r3, r3, fp
   155e0:	str	r3, [r6, #20]
   155e4:	b	156ac <main@@Base+0x1ad0>
   155e8:	cmp	r4, #34	; 0x22
   155ec:	beq	15618 <main@@Base+0x1a3c>
   155f0:	cmp	r4, #92	; 0x5c
   155f4:	beq	15768 <main@@Base+0x1b8c>
   155f8:	cmp	r4, #13
   155fc:	bne	156e8 <main@@Base+0x1b0c>
   15600:	ldr	r3, [r6, #20]
   15604:	add	r2, r3, #1
   15608:	str	r2, [r6, #20]
   1560c:	mov	r2, #114	; 0x72
   15610:	strb	r2, [r3]
   15614:	b	1562c <main@@Base+0x1a50>
   15618:	ldr	r3, [r6, #20]
   1561c:	add	r2, r3, #1
   15620:	str	r2, [r6, #20]
   15624:	mov	r2, #34	; 0x22
   15628:	strb	r2, [r3]
   1562c:	sub	sl, sl, #1
   15630:	add	r1, r5, #1
   15634:	ldrb	r4, [r1]
   15638:	cmp	r4, #34	; 0x22
   1563c:	cmpne	r4, #31
   15640:	movhi	r3, #1
   15644:	movls	r3, #0
   15648:	cmp	r4, #92	; 0x5c
   1564c:	moveq	r3, #0
   15650:	andne	r3, r3, #1
   15654:	cmp	r3, #0
   15658:	beq	155c8 <main@@Base+0x19ec>
   1565c:	mov	r5, r1
   15660:	ldrb	r4, [r5, #1]!
   15664:	cmp	r4, #34	; 0x22
   15668:	cmpne	r4, #31
   1566c:	movhi	r3, #1
   15670:	movls	r3, #0
   15674:	cmp	r4, #92	; 0x5c
   15678:	moveq	r3, #0
   1567c:	andne	r3, r3, #1
   15680:	cmp	r3, #0
   15684:	bne	15660 <main@@Base+0x1a84>
   15688:	sub	fp, r5, r1
   1568c:	ldr	r0, [r6, #20]
   15690:	add	r3, r0, fp
   15694:	ldr	r2, [r6, #16]
   15698:	cmp	r2, r3
   1569c:	bhi	155d0 <main@@Base+0x19f4>
   156a0:	mov	r2, fp
   156a4:	mov	r0, r6
   156a8:	bl	15108 <main@@Base+0x152c>
   156ac:	subs	sl, sl, fp
   156b0:	beq	157d8 <main@@Base+0x1bfc>
   156b4:	ldr	r3, [r6, #20]
   156b8:	add	r2, r3, #1
   156bc:	str	r2, [r6, #20]
   156c0:	strb	r7, [r3]
   156c4:	cmp	r4, #12
   156c8:	beq	15794 <main@@Base+0x1bb8>
   156cc:	bhi	155e8 <main@@Base+0x1a0c>
   156d0:	cmp	r4, #9
   156d4:	beq	1577c <main@@Base+0x1ba0>
   156d8:	cmp	r4, #10
   156dc:	beq	157a8 <main@@Base+0x1bcc>
   156e0:	cmp	r4, #8
   156e4:	beq	157c0 <main@@Base+0x1be4>
   156e8:	ldr	r3, [r6, #20]
   156ec:	add	r2, r3, #1
   156f0:	str	r2, [r6, #20]
   156f4:	strb	r8, [r3]
   156f8:	ldr	r3, [r6, #20]
   156fc:	add	r2, r3, #1
   15700:	str	r2, [r6, #20]
   15704:	mov	r2, #48	; 0x30
   15708:	strb	r2, [r3]
   1570c:	ldr	r3, [r6, #20]
   15710:	add	r1, r3, #1
   15714:	str	r1, [r6, #20]
   15718:	strb	r2, [r3]
   1571c:	lsr	r1, r4, #4
   15720:	cmp	r1, #10
   15724:	movcc	r3, r2
   15728:	movcs	r3, #87	; 0x57
   1572c:	ldr	r2, [r6, #20]
   15730:	add	r0, r2, #1
   15734:	str	r0, [r6, #20]
   15738:	add	r3, r3, r1
   1573c:	strb	r3, [r2]
   15740:	and	r4, r4, #15
   15744:	cmp	r4, #10
   15748:	movcc	r3, #48	; 0x30
   1574c:	movcs	r3, #87	; 0x57
   15750:	ldr	r2, [r6, #20]
   15754:	add	r1, r2, #1
   15758:	str	r1, [r6, #20]
   1575c:	add	r4, r3, r4
   15760:	strb	r4, [r2]
   15764:	b	1562c <main@@Base+0x1a50>
   15768:	ldr	r3, [r6, #20]
   1576c:	add	r2, r3, #1
   15770:	str	r2, [r6, #20]
   15774:	strb	r7, [r3]
   15778:	b	1562c <main@@Base+0x1a50>
   1577c:	ldr	r3, [r6, #20]
   15780:	add	r2, r3, #1
   15784:	str	r2, [r6, #20]
   15788:	mov	r2, #116	; 0x74
   1578c:	strb	r2, [r3]
   15790:	b	1562c <main@@Base+0x1a50>
   15794:	ldr	r3, [r6, #20]
   15798:	add	r2, r3, #1
   1579c:	str	r2, [r6, #20]
   157a0:	strb	r9, [r3]
   157a4:	b	1562c <main@@Base+0x1a50>
   157a8:	ldr	r3, [r6, #20]
   157ac:	add	r2, r3, #1
   157b0:	str	r2, [r6, #20]
   157b4:	mov	r2, #110	; 0x6e
   157b8:	strb	r2, [r3]
   157bc:	b	1562c <main@@Base+0x1a50>
   157c0:	ldr	r3, [r6, #20]
   157c4:	add	r2, r3, #1
   157c8:	str	r2, [r6, #20]
   157cc:	mov	r2, #98	; 0x62
   157d0:	strb	r2, [r3]
   157d4:	b	1562c <main@@Base+0x1a50>
   157d8:	ldr	r3, [r6, #20]
   157dc:	add	r2, r3, #1
   157e0:	str	r2, [r6, #20]
   157e4:	mov	r2, #34	; 0x22
   157e8:	strb	r2, [r3]
   157ec:	add	sp, sp, #4
   157f0:	ldrd	r4, [sp]
   157f4:	ldrd	r6, [sp, #8]
   157f8:	ldrd	r8, [sp, #16]
   157fc:	ldrd	sl, [sp, #24]
   15800:	add	sp, sp, #32
   15804:	pop	{pc}		; (ldr pc, [sp], #4)
   15808:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1580c:	strd	r6, [sp, #8]
   15810:	str	r8, [sp, #16]
   15814:	str	lr, [sp, #20]
   15818:	mov	r4, r0
   1581c:	mov	r6, r1
   15820:	mov	r5, r2
   15824:	ldrb	r3, [r0, #25]
   15828:	cmp	r3, #0
   1582c:	bne	158f8 <main@@Base+0x1d1c>
   15830:	ldr	r2, [r0, #20]
   15834:	ldr	r3, [r0, #16]
   15838:	cmp	r2, r3
   1583c:	bcc	1584c <main@@Base+0x1c70>
   15840:	ldr	r3, [r0, #44]	; 0x2c
   15844:	mov	r1, #0
   15848:	blx	r3
   1584c:	ldr	r3, [r4, #20]
   15850:	mov	r2, #34	; 0x22
   15854:	strb	r2, [r3]
   15858:	ldrb	r3, [r4, #26]
   1585c:	ldr	r0, [r4, #20]
   15860:	cmp	r3, #0
   15864:	addeq	r0, r0, #1
   15868:	str	r0, [r4, #20]
   1586c:	add	r3, r0, r5
   15870:	ldr	r2, [r4, #16]
   15874:	cmp	r2, r3
   15878:	bls	15958 <main@@Base+0x1d7c>
   1587c:	mov	r2, r5
   15880:	mov	r1, r6
   15884:	bl	12428 <memcpy@plt>
   15888:	ldr	r3, [r4, #20]
   1588c:	add	r5, r3, r5
   15890:	str	r5, [r4, #20]
   15894:	ldr	r3, [r4, #20]
   15898:	mov	r2, #34	; 0x22
   1589c:	strb	r2, [r3]
   158a0:	ldrb	r3, [r4, #26]
   158a4:	clz	r3, r3
   158a8:	lsr	r3, r3, #5
   158ac:	ldr	r1, [r4, #20]
   158b0:	add	r2, r1, r3
   158b4:	add	r2, r2, #1
   158b8:	str	r2, [r4, #20]
   158bc:	mov	r2, #58	; 0x3a
   158c0:	strb	r2, [r1, r3]
   158c4:	ldr	r3, [r4, #20]
   158c8:	mov	r2, #32
   158cc:	strb	r2, [r3]
   158d0:	ldrb	r2, [r4, #25]
   158d4:	ldr	r3, [r4, #20]
   158d8:	cmp	r2, #0
   158dc:	addne	r3, r3, #1
   158e0:	str	r3, [r4, #20]
   158e4:	ldrd	r4, [sp]
   158e8:	ldrd	r6, [sp, #8]
   158ec:	ldr	r8, [sp, #16]
   158f0:	add	sp, sp, #20
   158f4:	pop	{pc}		; (ldr pc, [sp], #4)
   158f8:	ldr	r3, [r0, #20]
   158fc:	add	r2, r3, #1
   15900:	str	r2, [r0, #20]
   15904:	mov	r2, #10
   15908:	strb	r2, [r3]
   1590c:	ldrb	r3, [r0, #25]
   15910:	ldr	r7, [r0, #32]
   15914:	mul	r7, r7, r3
   15918:	ldr	r0, [r0, #20]
   1591c:	add	r3, r0, r7
   15920:	ldr	r2, [r4, #16]
   15924:	cmp	r2, r3
   15928:	bcs	1593c <main@@Base+0x1d60>
   1592c:	mov	r1, r7
   15930:	mov	r0, r4
   15934:	bl	15218 <main@@Base+0x163c>
   15938:	b	1584c <main@@Base+0x1c70>
   1593c:	mov	r2, r7
   15940:	mov	r1, #32
   15944:	bl	124c4 <memset@plt>
   15948:	ldr	r3, [r4, #20]
   1594c:	add	r7, r3, r7
   15950:	str	r7, [r4, #20]
   15954:	b	1584c <main@@Base+0x1c70>
   15958:	mov	r2, r5
   1595c:	mov	r1, r6
   15960:	mov	r0, r4
   15964:	bl	15108 <main@@Base+0x152c>
   15968:	b	15894 <main@@Base+0x1cb8>
   1596c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15970:	strd	r6, [sp, #8]
   15974:	strd	r8, [sp, #16]
   15978:	strd	sl, [sp, #24]
   1597c:	str	lr, [sp, #32]
   15980:	sub	sp, sp, #220	; 0xdc
   15984:	vstr	d0, [sp, #48]	; 0x30
   15988:	subs	r1, r0, #0
   1598c:	str	r1, [sp, #44]	; 0x2c
   15990:	beq	15f70 <main@@Base+0x2394>
   15994:	vmov	r4, r5, d0
   15998:	adds	r2, r4, r4
   1599c:	adc	r3, r5, r5
   159a0:	mov	r0, #0
   159a4:	mov	r1, #0
   159a8:	movt	r1, #65504	; 0xffe0
   159ac:	cmp	r3, r1
   159b0:	cmpeq	r2, r0
   159b4:	bhi	15f8c <main@@Base+0x23b0>
   159b8:	cmp	r4, #0
   159bc:	sbcs	r3, r5, #0
   159c0:	blt	15fac <main@@Base+0x23d0>
   159c4:	ldr	fp, [sp, #44]	; 0x2c
   159c8:	orrs	r3, r4, r5
   159cc:	beq	15fd4 <main@@Base+0x23f8>
   159d0:	mov	r2, #0
   159d4:	mov	r3, #0
   159d8:	movt	r3, #32752	; 0x7ff0
   159dc:	cmp	r5, r3
   159e0:	cmpeq	r4, r2
   159e4:	beq	15ff4 <main@@Base+0x2418>
   159e8:	ldrd	r2, [sp, #48]	; 0x30
   159ec:	mov	r1, r2
   159f0:	str	r2, [sp, #96]	; 0x60
   159f4:	mov	r8, r3
   159f8:	mov	r4, #0
   159fc:	bic	r5, r3, #-2147483648	; 0x80000000
   15a00:	lsr	r5, r5, #20
   15a04:	lsl	r5, r5, #20
   15a08:	orrs	r3, r4, r5
   15a0c:	bne	16024 <main@@Base+0x2448>
   15a10:	mov	r6, r1
   15a14:	ubfx	r9, r8, #0, #20
   15a18:	movw	sl, #64462	; 0xfbce
   15a1c:	movt	sl, #65535	; 0xffff
   15a20:	str	r6, [sp, #152]	; 0x98
   15a24:	str	r9, [sp, #156]	; 0x9c
   15a28:	str	sl, [sp, #160]	; 0xa0
   15a2c:	ldrd	r2, [sp, #160]	; 0xa0
   15a30:	strd	r2, [sp]
   15a34:	add	r3, sp, #152	; 0x98
   15a38:	ldm	r3, {r2, r3}
   15a3c:	add	r0, sp, #168	; 0xa8
   15a40:	bl	15000 <main@@Base+0x1424>
   15a44:	ldr	r3, [sp, #168]	; 0xa8
   15a48:	str	r3, [sp, #112]	; 0x70
   15a4c:	ldr	r3, [sp, #172]	; 0xac
   15a50:	str	r3, [sp, #120]	; 0x78
   15a54:	ldr	r3, [sp, #176]	; 0xb0
   15a58:	str	r3, [sp, #128]	; 0x80
   15a5c:	adds	r3, r6, r6
   15a60:	str	r3, [sp, #136]	; 0x88
   15a64:	adc	r1, r9, r9
   15a68:	str	r1, [sp, #140]	; 0x8c
   15a6c:	adds	r2, r3, #1
   15a70:	adc	r3, r1, #0
   15a74:	str	r2, [sp, #184]	; 0xb8
   15a78:	str	r3, [sp, #188]	; 0xbc
   15a7c:	sub	r7, sl, #1
   15a80:	str	r7, [sp, #192]	; 0xc0
   15a84:	ldrd	r2, [sp, #192]	; 0xc0
   15a88:	strd	r2, [sp]
   15a8c:	add	r3, sp, #184	; 0xb8
   15a90:	ldm	r3, {r2, r3}
   15a94:	add	r0, sp, #200	; 0xc8
   15a98:	bl	15000 <main@@Base+0x1424>
   15a9c:	ldr	r3, [sp, #208]	; 0xd0
   15aa0:	str	r3, [sp, #132]	; 0x84
   15aa4:	vldr	d7, [sp, #48]	; 0x30
   15aa8:	vcmpe.f64	d7, #0.0
   15aac:	vmrs	APSR_nzcv, fpscr
   15ab0:	ble	16044 <main@@Base+0x2468>
   15ab4:	vldr	d7, [pc, #916]	; 15e50 <main@@Base+0x2274>
   15ab8:	vldr	d6, [sp, #48]	; 0x30
   15abc:	vcmpe.f64	d6, d7
   15ac0:	vmrs	APSR_nzcv, fpscr
   15ac4:	bhi	16044 <main@@Base+0x2468>
   15ac8:	ubfx	r8, r8, #0, #20
   15acc:	ldr	r3, [sp, #96]	; 0x60
   15ad0:	orrs	r3, r3, r8
   15ad4:	moveq	r3, #1
   15ad8:	movne	r3, #0
   15adc:	orrs	r2, r4, r5
   15ae0:	moveq	r3, #0
   15ae4:	cmp	r3, #0
   15ae8:	bne	16060 <main@@Base+0x2484>
   15aec:	ldr	r3, [sp, #136]	; 0x88
   15af0:	subs	r0, r3, #1
   15af4:	ldr	r3, [sp, #140]	; 0x8c
   15af8:	sbc	r4, r3, #0
   15afc:	ldr	r3, [sp, #132]	; 0x84
   15b00:	sub	r7, r7, r3
   15b04:	sub	r2, r7, #32
   15b08:	rsb	r3, r7, #32
   15b0c:	lsl	r4, r4, r7
   15b10:	orr	r4, r4, r0, lsl r2
   15b14:	orr	r4, r4, r0, lsr r3
   15b18:	lsl	r0, r0, r7
   15b1c:	ldr	r3, [sp, #128]	; 0x80
   15b20:	rsb	r3, r3, #-16777216	; 0xff000000
   15b24:	add	r3, r3, #16711680	; 0xff0000
   15b28:	add	r3, r3, #65280	; 0xff00
   15b2c:	add	r3, r3, #195	; 0xc3
   15b30:	vmov	s12, r3
   15b34:	vcvt.f64.s32	d6, s12
   15b38:	vldr	d7, [pc, #792]	; 15e58 <main@@Base+0x227c>
   15b3c:	vmul.f64	d6, d6, d7
   15b40:	vcvt.s32.f64	s15, d6
   15b44:	vcmpe.f64	d6, #0.0
   15b48:	vmrs	APSR_nzcv, fpscr
   15b4c:	bmi	15b70 <main@@Base+0x1f94>
   15b50:	vcvt.f64.s32	d5, s15
   15b54:	vsub.f64	d6, d6, d5
   15b58:	vcmp.f64	d6, #0.0
   15b5c:	vmrs	APSR_nzcv, fpscr
   15b60:	beq	15b70 <main@@Base+0x1f94>
   15b64:	vmov	r3, s15
   15b68:	add	r3, r3, #1
   15b6c:	vmov	s15, r3
   15b70:	vmov	r3, s15
   15b74:	add	r3, r3, #344	; 0x158
   15b78:	add	r2, r3, #10
   15b7c:	add	r3, r3, #3
   15b80:	cmp	r3, #0
   15b84:	movlt	r3, r2
   15b88:	asr	r3, r3, #3
   15b8c:	add	r3, r3, #1
   15b90:	ldr	r1, [pc, #712]	; 15e60 <main@@Base+0x2284>
   15b94:	add	r2, r1, r3, lsl #4
   15b98:	ldr	lr, [r1, r3, lsl #4]
   15b9c:	ldr	ip, [r2, #4]
   15ba0:	ldrsh	r3, [r2, #10]
   15ba4:	str	r3, [sp, #136]	; 0x88
   15ba8:	mov	r3, #0
   15bac:	ldr	r1, [sp, #112]	; 0x70
   15bb0:	umull	r8, r9, r1, ip
   15bb4:	ldr	sl, [sp, #120]	; 0x78
   15bb8:	umull	r6, r7, sl, lr
   15bbc:	strd	r6, [sp, #96]	; 0x60
   15bc0:	umull	r6, r7, r1, lr
   15bc4:	mov	r1, r7
   15bc8:	ldr	r6, [sp, #96]	; 0x60
   15bcc:	adds	r1, r1, r6
   15bd0:	adc	r5, r3, r3
   15bd4:	adds	r1, r1, #-2147483648	; 0x80000000
   15bd8:	adc	r5, r5, r3
   15bdc:	strd	r8, [sp, #112]	; 0x70
   15be0:	adds	r1, r1, r8
   15be4:	adc	r5, r5, r3
   15be8:	mov	r1, r5
   15bec:	ldr	r5, [sp, #100]	; 0x64
   15bf0:	ldr	r6, [sp, #116]	; 0x74
   15bf4:	adds	r5, r5, r6
   15bf8:	str	r5, [sp, #104]	; 0x68
   15bfc:	adc	r5, r3, r3
   15c00:	str	r5, [sp, #108]	; 0x6c
   15c04:	ldrd	r6, [sp, #104]	; 0x68
   15c08:	umlal	r6, r7, ip, sl
   15c0c:	adds	r1, r1, r6
   15c10:	str	r1, [sp, #80]	; 0x50
   15c14:	adc	r1, r3, r7
   15c18:	str	r1, [sp, #84]	; 0x54
   15c1c:	ldrsh	r2, [r2, #8]
   15c20:	ldr	r1, [sp, #128]	; 0x80
   15c24:	add	r2, r2, r1
   15c28:	umull	r6, r7, r0, ip
   15c2c:	strd	r6, [sp, #104]	; 0x68
   15c30:	umull	r8, r9, r4, lr
   15c34:	strd	r8, [sp, #112]	; 0x70
   15c38:	ldr	r7, [sp, #200]	; 0xc8
   15c3c:	ldr	r6, [sp, #204]	; 0xcc
   15c40:	umull	r8, r9, r7, ip
   15c44:	strd	r8, [sp, #120]	; 0x78
   15c48:	umull	r8, r9, r6, lr
   15c4c:	strd	r8, [sp, #96]	; 0x60
   15c50:	umull	r0, r1, r0, lr
   15c54:	mov	r9, r1
   15c58:	ldr	r1, [sp, #112]	; 0x70
   15c5c:	adds	r0, r9, r1
   15c60:	adc	r5, r3, r3
   15c64:	adds	r0, r0, #-2147483648	; 0x80000000
   15c68:	adc	r5, r5, r3
   15c6c:	ldr	r1, [sp, #104]	; 0x68
   15c70:	adds	r0, r0, r1
   15c74:	adc	r5, r5, r3
   15c78:	mov	r0, r5
   15c7c:	umull	r4, r5, r4, ip
   15c80:	subs	r9, r4, #1
   15c84:	sbc	r5, r5, #0
   15c88:	ldr	r1, [sp, #116]	; 0x74
   15c8c:	adds	r1, r9, r1
   15c90:	adc	r4, r5, r3
   15c94:	ldr	sl, [sp, #108]	; 0x6c
   15c98:	adds	r1, r1, sl
   15c9c:	adc	r4, r4, r3
   15ca0:	adds	r1, r0, r1
   15ca4:	str	r1, [sp, #64]	; 0x40
   15ca8:	adc	r1, r3, r4
   15cac:	str	r1, [sp, #68]	; 0x44
   15cb0:	umull	r0, r1, r7, lr
   15cb4:	mov	lr, r1
   15cb8:	ldr	r1, [sp, #96]	; 0x60
   15cbc:	adds	r1, lr, r1
   15cc0:	adc	r0, r3, r3
   15cc4:	adds	r1, r1, #-2147483648	; 0x80000000
   15cc8:	adc	r0, r0, r3
   15ccc:	ldrd	r8, [sp, #120]	; 0x78
   15cd0:	adds	r1, r1, r8
   15cd4:	adc	r4, r0, r3
   15cd8:	mov	r1, r4
   15cdc:	mov	r0, r3
   15ce0:	umull	r6, r7, r6, ip
   15ce4:	adds	ip, r6, #1
   15ce8:	adc	lr, r7, r3
   15cec:	ldr	r5, [sp, #100]	; 0x64
   15cf0:	adds	ip, ip, r5
   15cf4:	adc	lr, lr, r3
   15cf8:	adds	ip, ip, r9
   15cfc:	adc	lr, lr, r3
   15d00:	adds	r3, r1, ip
   15d04:	str	r3, [sp, #72]	; 0x48
   15d08:	adc	r3, r0, lr
   15d0c:	str	r3, [sp, #76]	; 0x4c
   15d10:	ldrd	r4, [sp, #72]	; 0x48
   15d14:	ldrd	r0, [sp, #64]	; 0x40
   15d18:	subs	r3, r4, r0
   15d1c:	str	r3, [sp, #56]	; 0x38
   15d20:	sbc	r3, r5, r1
   15d24:	str	r3, [sp, #60]	; 0x3c
   15d28:	cmp	r1, r5
   15d2c:	cmpeq	r0, r4
   15d30:	bhi	1607c <main@@Base+0x24a0>
   15d34:	movw	r6, #65472	; 0xffc0
   15d38:	movt	r6, #65535	; 0xffff
   15d3c:	sub	r6, r6, r2
   15d40:	mov	r3, #1
   15d44:	sub	r1, r6, #32
   15d48:	rsb	r0, r6, #32
   15d4c:	lsl	ip, r3, r1
   15d50:	orr	ip, ip, r3, lsr r0
   15d54:	str	ip, [sp, #148]	; 0x94
   15d58:	lsl	lr, r3, r6
   15d5c:	str	lr, [sp, #144]	; 0x90
   15d60:	ldrd	r4, [sp, #72]	; 0x48
   15d64:	lsr	r3, r4, r6
   15d68:	orr	r3, r3, r5, lsl r0
   15d6c:	orr	r3, r3, r5, lsr r1
   15d70:	subs	r1, lr, #1
   15d74:	str	r1, [sp, #104]	; 0x68
   15d78:	sbc	r0, ip, #0
   15d7c:	str	r0, [sp, #112]	; 0x70
   15d80:	and	r8, r4, r1
   15d84:	and	r9, r5, r0
   15d88:	add	r2, r2, #129	; 0x81
   15d8c:	movw	r1, #1233	; 0x4d1
   15d90:	mul	r2, r1, r2
   15d94:	asr	r2, r2, #12
   15d98:	add	r4, r2, #1
   15d9c:	movw	r1, #8544	; 0x2160
   15da0:	movt	r1, #2
   15da4:	add	r1, r1, r4, lsl #2
   15da8:	ldr	r1, [r1, #1700]	; 0x6a4
   15dac:	cmp	r3, r1
   15db0:	movcc	r4, r2
   15db4:	movw	r2, #8544	; 0x2160
   15db8:	movt	r2, #2
   15dbc:	add	r2, r2, r4, lsl #2
   15dc0:	ldr	r1, [r2, #1700]	; 0x6a4
   15dc4:	str	r1, [sp, #64]	; 0x40
   15dc8:	cmp	r4, #0
   15dcc:	ble	162c4 <main@@Base+0x26e8>
   15dd0:	udiv	r2, r3, r1
   15dd4:	add	r0, r2, #48	; 0x30
   15dd8:	strb	r0, [fp]
   15ddc:	mls	r3, r1, r2, r3
   15de0:	str	r3, [sp, #96]	; 0x60
   15de4:	sub	r4, r4, #1
   15de8:	sub	lr, r6, #32
   15dec:	rsb	ip, r6, #32
   15df0:	lsl	r2, r3, lr
   15df4:	orr	r2, r2, r3, lsr ip
   15df8:	lsl	r0, r3, r6
   15dfc:	adds	r3, r0, r8
   15e00:	str	r3, [sp, #88]	; 0x58
   15e04:	adc	r3, r2, r9
   15e08:	str	r3, [sp, #92]	; 0x5c
   15e0c:	ldrd	r2, [sp, #88]	; 0x58
   15e10:	ldrd	r0, [sp, #56]	; 0x38
   15e14:	cmp	r3, r1
   15e18:	cmpeq	r2, r0
   15e1c:	bcc	16098 <main@@Base+0x24bc>
   15e20:	mov	r5, #1
   15e24:	movw	lr, #52429	; 0xcccd
   15e28:	movt	lr, #52428	; 0xcccc
   15e2c:	sub	sl, r6, #32
   15e30:	rsb	r7, r6, #32
   15e34:	str	fp, [sp, #140]	; 0x8c
   15e38:	ldr	r1, [sp, #64]	; 0x40
   15e3c:	ldr	r3, [sp, #96]	; 0x60
   15e40:	strd	r8, [sp, #96]	; 0x60
   15e44:	str	fp, [sp, #64]	; 0x40
   15e48:	str	sl, [sp, #120]	; 0x78
   15e4c:	b	15e70 <main@@Base+0x2294>
   15e50:			; <UNDEFINED> instruction: 0xffffffff
   15e54:	svcvc	0x00efffff
   15e58:			; <UNDEFINED> instruction: 0x509f79fe
   15e5c:	svccc	0x00d34413
   15e60:	andeq	r2, r2, r0, lsl #5
   15e64:	andeq	r2, r2, r4, ror #4
   15e68:	andeq	r2, r2, r8, ror r2
   15e6c:	strdeq	r2, [r2], -r0
   15e70:	umull	r2, r1, lr, r1
   15e74:	lsr	r1, r1, #3
   15e78:	cmp	r4, #0
   15e7c:	beq	160bc <main@@Base+0x24e0>
   15e80:	udiv	r2, r3, r1
   15e84:	add	r0, r2, #48	; 0x30
   15e88:	ldr	ip, [sp, #64]	; 0x40
   15e8c:	strb	r0, [ip, #1]!
   15e90:	str	ip, [sp, #64]	; 0x40
   15e94:	add	r5, r5, #1
   15e98:	mls	r3, r1, r2, r3
   15e9c:	sub	r4, r4, #1
   15ea0:	ldr	r2, [sp, #120]	; 0x78
   15ea4:	lsl	r2, r3, r2
   15ea8:	orr	r2, r2, r3, lsr r7
   15eac:	lsl	r0, r3, r6
   15eb0:	ldrd	r8, [sp, #96]	; 0x60
   15eb4:	adds	sl, r0, r8
   15eb8:	mov	r0, r9
   15ebc:	adc	fp, r2, r9
   15ec0:	ldrd	r8, [sp, #56]	; 0x38
   15ec4:	cmp	fp, r9
   15ec8:	cmpeq	sl, r8
   15ecc:	bcs	15e70 <main@@Base+0x2294>
   15ed0:	str	r1, [sp, #64]	; 0x40
   15ed4:	strd	sl, [sp, #88]	; 0x58
   15ed8:	ldr	fp, [sp, #140]	; 0x8c
   15edc:	ldrd	r8, [sp, #72]	; 0x48
   15ee0:	ldr	r1, [sp, #80]	; 0x50
   15ee4:	subs	lr, r8, r1
   15ee8:	ldr	r1, [sp, #84]	; 0x54
   15eec:	sbc	r1, r9, r1
   15ef0:	ldrd	r2, [sp, #80]	; 0x50
   15ef4:	cmp	r9, r3
   15ef8:	cmpeq	r8, r2
   15efc:	movcc	r0, #1
   15f00:	movcs	r0, #0
   15f04:	ldr	r3, [sp, #132]	; 0x84
   15f08:	ldr	r2, [sp, #128]	; 0x80
   15f0c:	cmp	r3, r2
   15f10:	orrne	r0, r0, #1
   15f14:	cmp	r0, #0
   15f18:	bne	160a0 <main@@Base+0x24c4>
   15f1c:	mov	r8, #1
   15f20:	mov	r9, #0
   15f24:	strd	r8, [sp, #24]
   15f28:	sub	r0, r6, #32
   15f2c:	rsb	ip, r6, #32
   15f30:	ldr	r3, [sp, #64]	; 0x40
   15f34:	lsl	r0, r3, r0
   15f38:	orr	r0, r0, r3, lsr ip
   15f3c:	lsl	r6, r3, r6
   15f40:	str	r6, [sp, #16]
   15f44:	str	r0, [sp, #20]
   15f48:	ldrd	r2, [sp, #88]	; 0x58
   15f4c:	strd	r2, [sp, #8]
   15f50:	ldrd	r2, [sp, #56]	; 0x38
   15f54:	strd	r2, [sp]
   15f58:	mov	r2, lr
   15f5c:	mov	r3, r1
   15f60:	mov	r1, r5
   15f64:	mov	r0, fp
   15f68:	bl	14a1c <main@@Base+0xe40>
   15f6c:	b	16228 <main@@Base+0x264c>
   15f70:	ldr	r3, [pc, #-276]	; 15e64 <main@@Base+0x2288>
   15f74:	mov	r2, #189	; 0xbd
   15f78:	movw	r1, #10768	; 0x2a10
   15f7c:	movt	r1, #2
   15f80:	movw	r0, #10856	; 0x2a68
   15f84:	movt	r0, #2
   15f88:	bl	1250c <__assert_fail@plt>
   15f8c:	vmov	r3, s0
   15f90:	mov	r2, r5
   15f94:	movw	r1, #10860	; 0x2a6c
   15f98:	movt	r1, #2
   15f9c:	ldr	r0, [sp, #44]	; 0x2c
   15fa0:	bl	124e8 <sprintf@plt>
   15fa4:	mov	r0, #21
   15fa8:	b	162a8 <main@@Base+0x26cc>
   15fac:	ldr	fp, [sp, #44]	; 0x2c
   15fb0:	mov	r3, #45	; 0x2d
   15fb4:	strb	r3, [fp], #1
   15fb8:	vldr	d7, [sp, #48]	; 0x30
   15fbc:	vneg.f64	d7, d7
   15fc0:	vstr	d7, [sp, #48]	; 0x30
   15fc4:	add	r3, r5, #-2147483648	; 0x80000000
   15fc8:	vmov	r4, s0
   15fcc:	mov	r5, r3
   15fd0:	b	159c8 <main@@Base+0x1dec>
   15fd4:	mov	r3, #48	; 0x30
   15fd8:	strb	r3, [fp]
   15fdc:	mov	r0, fp
   15fe0:	mov	r3, #0
   15fe4:	strb	r3, [r0, #1]!
   15fe8:	ldr	r3, [sp, #44]	; 0x2c
   15fec:	sub	r0, r0, r3
   15ff0:	b	162a8 <main@@Base+0x26cc>
   15ff4:	mov	r3, #105	; 0x69
   15ff8:	strb	r3, [fp]
   15ffc:	mov	r3, #110	; 0x6e
   16000:	strb	r3, [fp, #1]
   16004:	mov	r3, #102	; 0x66
   16008:	strb	r3, [fp, #2]
   1600c:	mov	r0, fp
   16010:	mov	r3, #0
   16014:	strb	r3, [r0, #3]!
   16018:	ldr	r3, [sp, #44]	; 0x2c
   1601c:	sub	r0, r0, r3
   16020:	b	162a8 <main@@Base+0x26cc>
   16024:	ldr	r6, [sp, #96]	; 0x60
   16028:	ubfx	r9, r8, #0, #20
   1602c:	adds	r6, r6, #0
   16030:	adc	r9, r9, #1048576	; 0x100000
   16034:	ubfx	sl, r8, #20, #11
   16038:	sub	sl, sl, #1072	; 0x430
   1603c:	sub	sl, sl, #3
   16040:	b	15a20 <main@@Base+0x1e44>
   16044:	ldr	r3, [pc, #-484]	; 15e68 <main@@Base+0x228c>
   16048:	mov	r2, #138	; 0x8a
   1604c:	movw	r1, #10768	; 0x2a10
   16050:	movt	r1, #2
   16054:	movw	r0, #10876	; 0x2a7c
   16058:	movt	r0, #2
   1605c:	bl	1250c <__assert_fail@plt>
   16060:	lsl	r4, r9, #2
   16064:	orr	r4, r4, r6, lsr #30
   16068:	lsl	r0, r6, #2
   1606c:	subs	r0, r0, #1
   16070:	sbc	r4, r4, #0
   16074:	sub	r7, sl, #2
   16078:	b	15afc <main@@Base+0x1f20>
   1607c:	ldr	r3, [pc, #-536]	; 15e6c <main@@Base+0x2290>
   16080:	mov	r2, #239	; 0xef
   16084:	movw	r1, #10532	; 0x2924
   16088:	movt	r1, #2
   1608c:	movw	r0, #10916	; 0x2aa4
   16090:	movt	r0, #2
   16094:	bl	1250c <__assert_fail@plt>
   16098:	mov	r5, #1
   1609c:	b	15edc <main@@Base+0x2300>
   160a0:	ldr	r3, [pc, #-572]	; 15e6c <main@@Base+0x2290>
   160a4:	mov	r2, #239	; 0xef
   160a8:	movw	r1, #10532	; 0x2924
   160ac:	movt	r1, #2
   160b0:	movw	r0, #10916	; 0x2aa4
   160b4:	movt	r0, #2
   160b8:	bl	1250c <__assert_fail@plt>
   160bc:	ldr	fp, [sp, #140]	; 0x8c
   160c0:	ldrd	r8, [sp, #96]	; 0x60
   160c4:	sub	r7, r5, #1
   160c8:	add	r7, fp, r7
   160cc:	mov	r3, #1
   160d0:	mov	ip, #0
   160d4:	rsb	r2, r6, #32
   160d8:	str	r2, [sp, #64]	; 0x40
   160dc:	sub	r2, r6, #32
   160e0:	str	r2, [sp, #88]	; 0x58
   160e4:	add	lr, r4, r5
   160e8:	str	fp, [sp, #96]	; 0x60
   160ec:	ldrd	sl, [sp, #56]	; 0x38
   160f0:	str	lr, [sp, #56]	; 0x38
   160f4:	lsl	r1, r9, #2
   160f8:	lsl	r2, r8, #2
   160fc:	orr	r0, r1, r8, lsr #30
   16100:	adds	r2, r2, r8
   16104:	adc	r0, r0, r9
   16108:	adds	r2, r2, r2
   1610c:	adc	r0, r0, r0
   16110:	lsl	lr, ip, #2
   16114:	lsl	r1, r3, #2
   16118:	orr	r4, lr, r3, lsr #30
   1611c:	adds	r3, r1, r3
   16120:	adc	ip, r4, ip
   16124:	adds	r3, r3, r3
   16128:	adc	ip, ip, ip
   1612c:	lsl	lr, fp, #2
   16130:	lsl	r1, sl, #2
   16134:	orr	r4, lr, sl, lsr #30
   16138:	adds	r1, r1, sl
   1613c:	adc	r4, r4, fp
   16140:	adds	r1, r1, r1
   16144:	str	r1, [sp, #32]
   16148:	adc	r1, r4, r4
   1614c:	str	r1, [sp, #36]	; 0x24
   16150:	ldrd	sl, [sp, #32]
   16154:	lsr	r1, r2, r6
   16158:	ldr	lr, [sp, #64]	; 0x40
   1615c:	orr	r1, r1, r0, lsl lr
   16160:	ldr	lr, [sp, #88]	; 0x58
   16164:	orr	r1, r1, r0, lsr lr
   16168:	add	r1, r1, #48	; 0x30
   1616c:	strb	r1, [r7, #1]!
   16170:	add	r5, r5, #1
   16174:	ldr	r1, [sp, #104]	; 0x68
   16178:	and	r8, r1, r2
   1617c:	ldr	r2, [sp, #112]	; 0x70
   16180:	and	r9, r2, r0
   16184:	ldr	r2, [sp, #56]	; 0x38
   16188:	sub	r4, r2, r5
   1618c:	cmp	fp, r9
   16190:	cmpeq	sl, r8
   16194:	bls	160f4 <main@@Base+0x2518>
   16198:	strd	sl, [sp, #56]	; 0x38
   1619c:	ldr	fp, [sp, #96]	; 0x60
   161a0:	ldrd	r6, [sp, #72]	; 0x48
   161a4:	ldr	r1, [sp, #80]	; 0x50
   161a8:	subs	sl, r6, r1
   161ac:	ldr	r1, [sp, #84]	; 0x54
   161b0:	sbc	lr, r7, r1
   161b4:	ldrd	r0, [sp, #80]	; 0x50
   161b8:	cmp	r7, r1
   161bc:	cmpeq	r6, r0
   161c0:	movcc	r1, #1
   161c4:	movcs	r1, #0
   161c8:	ldr	r2, [sp, #132]	; 0x84
   161cc:	ldr	r0, [sp, #128]	; 0x80
   161d0:	cmp	r2, r0
   161d4:	orrne	r1, r1, #1
   161d8:	cmp	r1, #0
   161dc:	bne	162cc <main@@Base+0x26f0>
   161e0:	mul	lr, r3, lr
   161e4:	mla	lr, sl, ip, lr
   161e8:	umull	r0, r1, r3, sl
   161ec:	add	r1, lr, r1
   161f0:	str	r3, [sp, #24]
   161f4:	str	ip, [sp, #28]
   161f8:	ldr	r3, [sp, #144]	; 0x90
   161fc:	str	r3, [sp, #16]
   16200:	ldr	r3, [sp, #148]	; 0x94
   16204:	str	r3, [sp, #20]
   16208:	strd	r8, [sp, #8]
   1620c:	ldrd	r2, [sp, #56]	; 0x38
   16210:	strd	r2, [sp]
   16214:	mov	r2, r0
   16218:	mov	r3, r1
   1621c:	mov	r1, r5
   16220:	mov	r0, fp
   16224:	bl	14a1c <main@@Base+0xe40>
   16228:	ldr	r3, [sp, #136]	; 0x88
   1622c:	sub	r6, r4, r3
   16230:	cmp	r0, #0
   16234:	beq	162e8 <main@@Base+0x270c>
   16238:	cmp	r5, #2
   1623c:	movge	r0, r5
   16240:	movlt	r0, #2
   16244:	ldr	r3, [sp, #136]	; 0x88
   16248:	sub	r4, r3, r4
   1624c:	cmp	r0, r4
   16250:	suble	r0, r0, #1
   16254:	movgt	r0, r4
   16258:	cmp	r6, #0
   1625c:	blt	1630c <main@@Base+0x2730>
   16260:	cmp	r6, #2
   16264:	bhi	163e0 <main@@Base+0x2804>
   16268:	cmp	r6, #0
   1626c:	ble	16294 <main@@Base+0x26b8>
   16270:	sub	r1, r6, #1
   16274:	add	r3, fp, r5
   16278:	add	r6, r3, r6
   1627c:	mov	r2, #48	; 0x30
   16280:	strb	r2, [r3], #1
   16284:	cmp	r3, r6
   16288:	bne	16280 <main@@Base+0x26a4>
   1628c:	add	r5, r5, #1
   16290:	add	r5, r5, r1
   16294:	add	r0, fp, r5
   16298:	mov	r3, #0
   1629c:	strb	r3, [fp, r5]
   162a0:	ldr	r3, [sp, #44]	; 0x2c
   162a4:	sub	r0, r0, r3
   162a8:	add	sp, sp, #220	; 0xdc
   162ac:	ldrd	r4, [sp]
   162b0:	ldrd	r6, [sp, #8]
   162b4:	ldrd	r8, [sp, #16]
   162b8:	ldrd	sl, [sp, #24]
   162bc:	add	sp, sp, #32
   162c0:	pop	{pc}		; (ldr pc, [sp], #4)
   162c4:	mov	r5, #0
   162c8:	b	160c4 <main@@Base+0x24e8>
   162cc:	ldr	r3, [pc, #-1128]	; 15e6c <main@@Base+0x2290>
   162d0:	mov	r2, #239	; 0xef
   162d4:	movw	r1, #10532	; 0x2924
   162d8:	movt	r1, #2
   162dc:	movw	r0, #10916	; 0x2aa4
   162e0:	movt	r0, #2
   162e4:	bl	1250c <__assert_fail@plt>
   162e8:	ldrd	r2, [sp, #48]	; 0x30
   162ec:	movw	r1, #10944	; 0x2ac0
   162f0:	movt	r1, #2
   162f4:	mov	r0, fp
   162f8:	bl	124e8 <sprintf@plt>
   162fc:	ldr	r3, [sp, #44]	; 0x2c
   16300:	sub	r3, fp, r3
   16304:	add	r0, r3, r0
   16308:	b	162a8 <main@@Base+0x26cc>
   1630c:	add	r3, r6, r5
   16310:	cmp	r4, r5
   16314:	cmnge	r3, #2
   16318:	bge	1637c <main@@Base+0x27a0>
   1631c:	cmp	r5, #1
   16320:	ble	163e0 <main@@Base+0x2804>
   16324:	cmp	r0, #0
   16328:	ble	16344 <main@@Base+0x2768>
   1632c:	add	r3, fp, r5
   16330:	sub	r1, r3, r0
   16334:	ldrb	r2, [r3, #-1]
   16338:	strb	r2, [r3], #-1
   1633c:	cmp	r1, r3
   16340:	bne	16334 <main@@Base+0x2758>
   16344:	add	r3, r5, #1
   16348:	sub	r2, r5, r0
   1634c:	mov	r1, #46	; 0x2e
   16350:	strb	r1, [fp, r2]
   16354:	adds	r0, r0, r6
   16358:	moveq	r5, r3
   1635c:	beq	16294 <main@@Base+0x26b8>
   16360:	add	r5, r5, #2
   16364:	mov	r2, #101	; 0x65
   16368:	strb	r2, [fp, r3]
   1636c:	add	r1, fp, r5
   16370:	bl	14cc0 <main@@Base+0x10e4>
   16374:	add	r5, r5, r0
   16378:	b	16294 <main@@Base+0x26b8>
   1637c:	rsb	r0, r5, #2
   16380:	sub	r0, r0, r6
   16384:	mov	r2, r5
   16388:	mov	r1, fp
   1638c:	add	r0, fp, r0
   16390:	bl	12410 <memmove@plt>
   16394:	mov	r3, #48	; 0x30
   16398:	strb	r3, [fp]
   1639c:	mov	r3, #46	; 0x2e
   163a0:	strb	r3, [fp, #1]
   163a4:	rsb	r6, r6, #2
   163a8:	sub	r6, r6, r5
   163ac:	cmp	r6, #2
   163b0:	ble	163d8 <main@@Base+0x27fc>
   163b4:	add	r3, fp, #1
   163b8:	sub	r2, fp, #1
   163bc:	add	r2, r2, r6
   163c0:	mov	r1, #48	; 0x30
   163c4:	strb	r1, [r3, #1]!
   163c8:	cmp	r3, r2
   163cc:	bne	163c4 <main@@Base+0x27e8>
   163d0:	add	r5, r5, r6
   163d4:	b	16294 <main@@Base+0x26b8>
   163d8:	mov	r6, #2
   163dc:	b	163d0 <main@@Base+0x27f4>
   163e0:	add	r4, r5, #1
   163e4:	mov	r3, #101	; 0x65
   163e8:	strb	r3, [fp, r5]
   163ec:	add	r1, fp, r4
   163f0:	mov	r0, r6
   163f4:	bl	14cc0 <main@@Base+0x10e4>
   163f8:	add	r5, r4, r0
   163fc:	b	16294 <main@@Base+0x26b8>

00016400 <flatcc_json_printer_error_string@@Base>:
   16400:	cmp	r0, #3
   16404:	ldrls	pc, [pc, r0, lsl #2]
   16408:	b	16440 <flatcc_json_printer_error_string@@Base+0x40>
   1640c:	andeq	r6, r1, ip, asr #8
   16410:	andeq	r6, r1, ip, lsl r4
   16414:	andeq	r6, r1, r8, lsr #8
   16418:	andeq	r6, r1, r4, lsr r4
   1641c:	movw	r0, #10992	; 0x2af0
   16420:	movt	r0, #2
   16424:	bx	lr
   16428:	movw	r0, #10964	; 0x2ad4
   1642c:	movt	r0, #2
   16430:	bx	lr
   16434:	movw	r0, #10980	; 0x2ae4
   16438:	movt	r0, #2
   1643c:	bx	lr
   16440:	movw	r0, #10952	; 0x2ac8
   16444:	movt	r0, #2
   16448:	bx	lr
   1644c:	movw	r0, #10960	; 0x2ad0
   16450:	movt	r0, #2
   16454:	bx	lr

00016458 <flatcc_json_printer_fmt_float@@Base>:
   16458:	str	r4, [sp, #-8]!
   1645c:	str	lr, [sp, #4]
   16460:	vcvt.f64.f32	d0, s0
   16464:	bl	1596c <main@@Base+0x1d90>
   16468:	ldr	r4, [sp]
   1646c:	add	sp, sp, #4
   16470:	pop	{pc}		; (ldr pc, [sp], #4)

00016474 <flatcc_json_printer_fmt_double@@Base>:
   16474:	str	r4, [sp, #-8]!
   16478:	str	lr, [sp, #4]
   1647c:	bl	1596c <main@@Base+0x1d90>
   16480:	ldr	r4, [sp]
   16484:	add	sp, sp, #4
   16488:	pop	{pc}		; (ldr pc, [sp], #4)

0001648c <flatcc_json_printer_fmt_bool@@Base>:
   1648c:	cmp	r1, #0
   16490:	bne	164b4 <flatcc_json_printer_fmt_bool@@Base+0x28>
   16494:	movw	r3, #11012	; 0x2b04
   16498:	movt	r3, #2
   1649c:	ldr	r2, [r3]
   164a0:	str	r2, [r0]
   164a4:	ldrb	r3, [r3, #4]
   164a8:	strb	r3, [r0, #4]
   164ac:	mov	r0, #5
   164b0:	bx	lr
   164b4:	movw	r3, #11004	; 0x2afc
   164b8:	movt	r3, #2
   164bc:	ldr	r3, [r3]
   164c0:	str	r3, [r0]
   164c4:	mov	r0, #4
   164c8:	bx	lr

000164cc <flatcc_json_printer_string@@Base>:
   164cc:	str	r4, [sp, #-8]!
   164d0:	str	lr, [sp, #4]
   164d4:	bl	15584 <main@@Base+0x19a8>
   164d8:	ldr	r4, [sp]
   164dc:	add	sp, sp, #4
   164e0:	pop	{pc}		; (ldr pc, [sp], #4)

000164e4 <flatcc_json_printer_write@@Base>:
   164e4:	strd	r4, [sp, #-16]!
   164e8:	str	r6, [sp, #8]
   164ec:	str	lr, [sp, #12]
   164f0:	mov	r4, r0
   164f4:	mov	r5, r2
   164f8:	ldr	r0, [r0, #20]
   164fc:	add	r3, r0, r2
   16500:	ldr	r2, [r4, #16]
   16504:	cmp	r2, r3
   16508:	bhi	16528 <flatcc_json_printer_write@@Base+0x44>
   1650c:	mov	r2, r5
   16510:	mov	r0, r4
   16514:	bl	15108 <main@@Base+0x152c>
   16518:	ldrd	r4, [sp]
   1651c:	ldr	r6, [sp, #8]
   16520:	add	sp, sp, #12
   16524:	pop	{pc}		; (ldr pc, [sp], #4)
   16528:	mov	r2, r5
   1652c:	bl	12428 <memcpy@plt>
   16530:	ldr	r3, [r4, #20]
   16534:	add	r5, r3, r5
   16538:	str	r5, [r4, #20]
   1653c:	b	16518 <flatcc_json_printer_write@@Base+0x34>

00016540 <flatcc_json_printer_nl@@Base>:
   16540:	ldr	r3, [r0, #20]
   16544:	add	r2, r3, #1
   16548:	str	r2, [r0, #20]
   1654c:	mov	r2, #10
   16550:	strb	r2, [r3]
   16554:	ldr	r2, [r0, #20]
   16558:	ldr	r3, [r0, #16]
   1655c:	cmp	r2, r3
   16560:	bxcc	lr
   16564:	str	r4, [sp, #-8]!
   16568:	str	lr, [sp, #4]
   1656c:	ldr	r3, [r0, #44]	; 0x2c
   16570:	mov	r1, #0
   16574:	blx	r3
   16578:	ldr	r4, [sp]
   1657c:	add	sp, sp, #4
   16580:	pop	{pc}		; (ldr pc, [sp], #4)

00016584 <flatcc_json_printer_char@@Base>:
   16584:	ldr	r3, [r0, #20]
   16588:	add	r2, r3, #1
   1658c:	str	r2, [r0, #20]
   16590:	strb	r1, [r3]
   16594:	bx	lr

00016598 <flatcc_json_printer_indent@@Base>:
   16598:	strd	r4, [sp, #-16]!
   1659c:	str	r6, [sp, #8]
   165a0:	str	lr, [sp, #12]
   165a4:	mov	r4, r0
   165a8:	ldrb	r3, [r0, #25]
   165ac:	ldr	r5, [r0, #32]
   165b0:	mul	r5, r5, r3
   165b4:	ldr	r0, [r0, #20]
   165b8:	add	r3, r0, r5
   165bc:	ldr	r2, [r4, #16]
   165c0:	cmp	r2, r3
   165c4:	bcs	165e4 <flatcc_json_printer_indent@@Base+0x4c>
   165c8:	mov	r1, r5
   165cc:	mov	r0, r4
   165d0:	bl	15218 <main@@Base+0x163c>
   165d4:	ldrd	r4, [sp]
   165d8:	ldr	r6, [sp, #8]
   165dc:	add	sp, sp, #12
   165e0:	pop	{pc}		; (ldr pc, [sp], #4)
   165e4:	mov	r2, r5
   165e8:	mov	r1, #32
   165ec:	bl	124c4 <memset@plt>
   165f0:	ldr	r3, [r4, #20]
   165f4:	add	r5, r3, r5
   165f8:	str	r5, [r4, #20]
   165fc:	b	165d4 <flatcc_json_printer_indent@@Base+0x3c>

00016600 <flatcc_json_printer_add_level@@Base>:
   16600:	ldr	r3, [r0, #32]
   16604:	add	r1, r3, r1
   16608:	str	r1, [r0, #32]
   1660c:	bx	lr

00016610 <flatcc_json_printer_get_level@@Base>:
   16610:	ldr	r0, [r0, #32]
   16614:	bx	lr

00016618 <flatcc_json_printer_uint8@@Base>:
   16618:	str	r4, [sp, #-8]!
   1661c:	str	lr, [sp, #4]
   16620:	mov	r4, r0
   16624:	mov	r0, r1
   16628:	ldr	r1, [r4, #20]
   1662c:	bl	13c90 <main@@Base+0xb4>
   16630:	ldr	r3, [r4, #20]
   16634:	add	r0, r3, r0
   16638:	str	r0, [r4, #20]
   1663c:	ldr	r4, [sp]
   16640:	add	sp, sp, #4
   16644:	pop	{pc}		; (ldr pc, [sp], #4)

00016648 <flatcc_json_printer_uint16@@Base>:
   16648:	str	r4, [sp, #-8]!
   1664c:	str	lr, [sp, #4]
   16650:	mov	r4, r0
   16654:	mov	r0, r1
   16658:	ldr	r1, [r4, #20]
   1665c:	bl	13d50 <main@@Base+0x174>
   16660:	ldr	r3, [r4, #20]
   16664:	add	r0, r3, r0
   16668:	str	r0, [r4, #20]
   1666c:	ldr	r4, [sp]
   16670:	add	sp, sp, #4
   16674:	pop	{pc}		; (ldr pc, [sp], #4)

00016678 <flatcc_json_printer_uint32@@Base>:
   16678:	str	r4, [sp, #-8]!
   1667c:	str	lr, [sp, #4]
   16680:	mov	r4, r0
   16684:	mov	r0, r1
   16688:	ldr	r1, [r4, #20]
   1668c:	bl	13ee4 <main@@Base+0x308>
   16690:	ldr	r3, [r4, #20]
   16694:	add	r0, r3, r0
   16698:	str	r0, [r4, #20]
   1669c:	ldr	r4, [sp]
   166a0:	add	sp, sp, #4
   166a4:	pop	{pc}		; (ldr pc, [sp], #4)

000166a8 <flatcc_json_printer_uint64@@Base>:
   166a8:	str	r4, [sp, #-8]!
   166ac:	str	lr, [sp, #4]
   166b0:	mov	r4, r0
   166b4:	mov	r0, r2
   166b8:	mov	r1, r3
   166bc:	ldr	r2, [r4, #20]
   166c0:	bl	14248 <main@@Base+0x66c>
   166c4:	ldr	r3, [r4, #20]
   166c8:	add	r0, r3, r0
   166cc:	str	r0, [r4, #20]
   166d0:	ldr	r4, [sp]
   166d4:	add	sp, sp, #4
   166d8:	pop	{pc}		; (ldr pc, [sp], #4)

000166dc <flatcc_json_printer_int8@@Base>:
   166dc:	str	r4, [sp, #-8]!
   166e0:	str	lr, [sp, #4]
   166e4:	mov	r4, r0
   166e8:	mov	r0, r1
   166ec:	ldr	r1, [r4, #20]
   166f0:	bl	14924 <main@@Base+0xd48>
   166f4:	ldr	r3, [r4, #20]
   166f8:	add	r0, r3, r0
   166fc:	str	r0, [r4, #20]
   16700:	ldr	r4, [sp]
   16704:	add	sp, sp, #4
   16708:	pop	{pc}		; (ldr pc, [sp], #4)

0001670c <flatcc_json_printer_int16@@Base>:
   1670c:	str	r4, [sp, #-8]!
   16710:	str	lr, [sp, #4]
   16714:	mov	r4, r0
   16718:	mov	r0, r1
   1671c:	ldr	r1, [r4, #20]
   16720:	bl	14964 <main@@Base+0xd88>
   16724:	ldr	r3, [r4, #20]
   16728:	add	r0, r3, r0
   1672c:	str	r0, [r4, #20]
   16730:	ldr	r4, [sp]
   16734:	add	sp, sp, #4
   16738:	pop	{pc}		; (ldr pc, [sp], #4)

0001673c <flatcc_json_printer_int32@@Base>:
   1673c:	str	r4, [sp, #-8]!
   16740:	str	lr, [sp, #4]
   16744:	mov	r4, r0
   16748:	mov	r0, r1
   1674c:	ldr	r1, [r4, #20]
   16750:	bl	149a4 <main@@Base+0xdc8>
   16754:	ldr	r3, [r4, #20]
   16758:	add	r0, r3, r0
   1675c:	str	r0, [r4, #20]
   16760:	ldr	r4, [sp]
   16764:	add	sp, sp, #4
   16768:	pop	{pc}		; (ldr pc, [sp], #4)

0001676c <flatcc_json_printer_int64@@Base>:
   1676c:	str	r4, [sp, #-8]!
   16770:	str	lr, [sp, #4]
   16774:	mov	r4, r0
   16778:	mov	r0, r2
   1677c:	mov	r1, r3
   16780:	ldr	r2, [r4, #20]
   16784:	bl	149dc <main@@Base+0xe00>
   16788:	ldr	r3, [r4, #20]
   1678c:	add	r0, r3, r0
   16790:	str	r0, [r4, #20]
   16794:	ldr	r4, [sp]
   16798:	add	sp, sp, #4
   1679c:	pop	{pc}		; (ldr pc, [sp], #4)

000167a0 <flatcc_json_printer_float@@Base>:
   167a0:	str	r4, [sp, #-8]!
   167a4:	str	lr, [sp, #4]
   167a8:	mov	r4, r0
   167ac:	ldr	r0, [r0, #20]
   167b0:	vcvt.f64.f32	d0, s0
   167b4:	bl	1596c <main@@Base+0x1d90>
   167b8:	ldr	r3, [r4, #20]
   167bc:	add	r0, r3, r0
   167c0:	str	r0, [r4, #20]
   167c4:	ldr	r4, [sp]
   167c8:	add	sp, sp, #4
   167cc:	pop	{pc}		; (ldr pc, [sp], #4)

000167d0 <flatcc_json_printer_double@@Base>:
   167d0:	str	r4, [sp, #-8]!
   167d4:	str	lr, [sp, #4]
   167d8:	mov	r4, r0
   167dc:	ldr	r0, [r0, #20]
   167e0:	bl	1596c <main@@Base+0x1d90>
   167e4:	ldr	r3, [r4, #20]
   167e8:	add	r0, r3, r0
   167ec:	str	r0, [r4, #20]
   167f0:	ldr	r4, [sp]
   167f4:	add	sp, sp, #4
   167f8:	pop	{pc}		; (ldr pc, [sp], #4)

000167fc <flatcc_json_printer_enum@@Base>:
   167fc:	strd	r4, [sp, #-16]!
   16800:	str	r6, [sp, #8]
   16804:	str	lr, [sp, #12]
   16808:	mov	r4, r0
   1680c:	mov	r5, r2
   16810:	ldr	r3, [r0, #20]
   16814:	mov	r2, #34	; 0x22
   16818:	strb	r2, [r3]
   1681c:	ldrb	r3, [r0, #26]
   16820:	ldr	r0, [r0, #20]
   16824:	cmp	r3, #0
   16828:	addeq	r0, r0, #1
   1682c:	str	r0, [r4, #20]
   16830:	add	r3, r0, r5
   16834:	ldr	r2, [r4, #16]
   16838:	cmp	r2, r3
   1683c:	bls	16884 <flatcc_json_printer_enum@@Base+0x88>
   16840:	mov	r2, r5
   16844:	bl	12428 <memcpy@plt>
   16848:	ldr	r3, [r4, #20]
   1684c:	add	r5, r3, r5
   16850:	str	r5, [r4, #20]
   16854:	ldr	r3, [r4, #20]
   16858:	mov	r2, #34	; 0x22
   1685c:	strb	r2, [r3]
   16860:	ldrb	r2, [r4, #26]
   16864:	ldr	r3, [r4, #20]
   16868:	cmp	r2, #0
   1686c:	addeq	r3, r3, #1
   16870:	str	r3, [r4, #20]
   16874:	ldrd	r4, [sp]
   16878:	ldr	r6, [sp, #8]
   1687c:	add	sp, sp, #12
   16880:	pop	{pc}		; (ldr pc, [sp], #4)
   16884:	mov	r2, r5
   16888:	mov	r0, r4
   1688c:	bl	15108 <main@@Base+0x152c>
   16890:	b	16854 <flatcc_json_printer_enum@@Base+0x58>

00016894 <flatcc_json_printer_delimit_enum_flags@@Base>:
   16894:	ldrb	r3, [r0, #26]
   16898:	adds	r1, r1, #0
   1689c:	movne	r1, #1
   168a0:	cmp	r3, #0
   168a4:	movne	r3, r1
   168a8:	moveq	r3, #1
   168ac:	ldr	r2, [r0, #20]
   168b0:	mov	r1, #34	; 0x22
   168b4:	strb	r1, [r2]
   168b8:	ldr	r1, [r0, #20]
   168bc:	add	r1, r1, r3
   168c0:	str	r1, [r0, #20]
   168c4:	bx	lr

000168c8 <flatcc_json_printer_enum_flag@@Base>:
   168c8:	strd	r4, [sp, #-16]!
   168cc:	str	r6, [sp, #8]
   168d0:	str	lr, [sp, #12]
   168d4:	mov	r4, r0
   168d8:	mov	ip, r2
   168dc:	mov	r5, r3
   168e0:	ldr	r3, [r0, #20]
   168e4:	mov	r2, #32
   168e8:	strb	r2, [r3]
   168ec:	ldr	r0, [r0, #20]
   168f0:	cmp	r1, #0
   168f4:	addgt	r0, r0, #1
   168f8:	str	r0, [r4, #20]
   168fc:	add	r3, r0, r5
   16900:	ldr	r2, [r4, #16]
   16904:	cmp	r2, r3
   16908:	bhi	1692c <flatcc_json_printer_enum_flag@@Base+0x64>
   1690c:	mov	r2, r5
   16910:	mov	r1, ip
   16914:	mov	r0, r4
   16918:	bl	15108 <main@@Base+0x152c>
   1691c:	ldrd	r4, [sp]
   16920:	ldr	r6, [sp, #8]
   16924:	add	sp, sp, #12
   16928:	pop	{pc}		; (ldr pc, [sp], #4)
   1692c:	mov	r2, r5
   16930:	mov	r1, ip
   16934:	bl	12428 <memcpy@plt>
   16938:	ldr	r3, [r4, #20]
   1693c:	add	r5, r3, r5
   16940:	str	r5, [r4, #20]
   16944:	b	1691c <flatcc_json_printer_enum_flag@@Base+0x54>

00016948 <flatcc_json_printer_string_field@@Base>:
   16948:	add	r2, r2, #2
   1694c:	lsl	r2, r2, #1
   16950:	ldr	ip, [r1, #8]
   16954:	cmp	r2, ip
   16958:	bxge	lr
   1695c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16960:	strd	r6, [sp, #8]
   16964:	strd	r8, [sp, #16]
   16968:	str	sl, [sp, #24]
   1696c:	str	lr, [sp, #28]
   16970:	ldr	ip, [r1, #4]
   16974:	ldrh	r5, [ip, r2]
   16978:	cmp	r5, #0
   1697c:	beq	16a9c <flatcc_json_printer_string_field@@Base+0x154>
   16980:	ldr	r6, [r1]
   16984:	adds	r7, r6, r5
   16988:	beq	16a9c <flatcc_json_printer_string_field@@Base+0x154>
   1698c:	ldr	r2, [r1, #16]
   16990:	add	ip, r2, #1
   16994:	str	ip, [r1, #16]
   16998:	cmp	r2, #0
   1699c:	beq	169b4 <flatcc_json_printer_string_field@@Base+0x6c>
   169a0:	ldr	r2, [r0, #20]
   169a4:	add	r1, r2, #1
   169a8:	str	r1, [r0, #20]
   169ac:	mov	r1, #44	; 0x2c
   169b0:	strb	r1, [r2]
   169b4:	mov	r8, r3
   169b8:	mov	r4, r0
   169bc:	ldrb	r3, [r0, #25]
   169c0:	cmp	r3, #0
   169c4:	bne	16ab4 <flatcc_json_printer_string_field@@Base+0x16c>
   169c8:	ldr	r2, [r0, #20]
   169cc:	ldr	r3, [r0, #16]
   169d0:	cmp	r2, r3
   169d4:	bcc	169e4 <flatcc_json_printer_string_field@@Base+0x9c>
   169d8:	ldr	r3, [r0, #44]	; 0x2c
   169dc:	mov	r1, #0
   169e0:	blx	r3
   169e4:	ldr	r3, [r4, #20]
   169e8:	mov	r2, #34	; 0x22
   169ec:	strb	r2, [r3]
   169f0:	ldrb	r3, [r4, #26]
   169f4:	ldr	r0, [r4, #20]
   169f8:	cmp	r3, #0
   169fc:	addeq	r0, r0, #1
   16a00:	str	r0, [r4, #20]
   16a04:	ldr	r3, [sp, #32]
   16a08:	add	r3, r0, r3
   16a0c:	ldr	r2, [r4, #16]
   16a10:	cmp	r2, r3
   16a14:	bls	16b14 <flatcc_json_printer_string_field@@Base+0x1cc>
   16a18:	ldr	r2, [sp, #32]
   16a1c:	mov	r1, r8
   16a20:	bl	12428 <memcpy@plt>
   16a24:	ldr	r3, [r4, #20]
   16a28:	ldr	r2, [sp, #32]
   16a2c:	add	r3, r3, r2
   16a30:	str	r3, [r4, #20]
   16a34:	ldr	r3, [r4, #20]
   16a38:	mov	r2, #34	; 0x22
   16a3c:	strb	r2, [r3]
   16a40:	ldrb	r3, [r4, #26]
   16a44:	clz	r3, r3
   16a48:	lsr	r3, r3, #5
   16a4c:	ldr	r1, [r4, #20]
   16a50:	add	r2, r1, r3
   16a54:	add	r2, r2, #1
   16a58:	str	r2, [r4, #20]
   16a5c:	mov	r2, #58	; 0x3a
   16a60:	strb	r2, [r1, r3]
   16a64:	ldr	r3, [r4, #20]
   16a68:	mov	r2, #32
   16a6c:	strb	r2, [r3]
   16a70:	ldrb	r2, [r4, #25]
   16a74:	ldr	r3, [r4, #20]
   16a78:	cmp	r2, #0
   16a7c:	addne	r3, r3, #1
   16a80:	str	r3, [r4, #20]
   16a84:	ldr	r3, [r6, r5]
   16a88:	add	r1, r7, r3
   16a8c:	ldr	r2, [r7, r3]
   16a90:	add	r1, r1, #4
   16a94:	mov	r0, r4
   16a98:	bl	15584 <main@@Base+0x19a8>
   16a9c:	ldrd	r4, [sp]
   16aa0:	ldrd	r6, [sp, #8]
   16aa4:	ldrd	r8, [sp, #16]
   16aa8:	ldr	sl, [sp, #24]
   16aac:	add	sp, sp, #28
   16ab0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ab4:	ldr	r3, [r0, #20]
   16ab8:	add	r2, r3, #1
   16abc:	str	r2, [r0, #20]
   16ac0:	mov	r2, #10
   16ac4:	strb	r2, [r3]
   16ac8:	ldrb	r3, [r0, #25]
   16acc:	ldr	r9, [r0, #32]
   16ad0:	mul	r9, r9, r3
   16ad4:	ldr	r0, [r0, #20]
   16ad8:	add	r3, r0, r9
   16adc:	ldr	r2, [r4, #16]
   16ae0:	cmp	r2, r3
   16ae4:	bcs	16af8 <flatcc_json_printer_string_field@@Base+0x1b0>
   16ae8:	mov	r1, r9
   16aec:	mov	r0, r4
   16af0:	bl	15218 <main@@Base+0x163c>
   16af4:	b	169e4 <flatcc_json_printer_string_field@@Base+0x9c>
   16af8:	mov	r2, r9
   16afc:	mov	r1, #32
   16b00:	bl	124c4 <memset@plt>
   16b04:	ldr	r3, [r4, #20]
   16b08:	add	r9, r3, r9
   16b0c:	str	r9, [r4, #20]
   16b10:	b	169e4 <flatcc_json_printer_string_field@@Base+0x9c>
   16b14:	ldr	r2, [sp, #32]
   16b18:	mov	r1, r8
   16b1c:	mov	r0, r4
   16b20:	bl	15108 <main@@Base+0x152c>
   16b24:	b	16a34 <flatcc_json_printer_string_field@@Base+0xec>

00016b28 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   16b28:	add	r2, r2, #2
   16b2c:	lsl	r2, r2, #1
   16b30:	ldr	ip, [r1, #8]
   16b34:	cmp	r2, ip
   16b38:	bxge	lr
   16b3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16b40:	strd	r6, [sp, #8]
   16b44:	strd	r8, [sp, #16]
   16b48:	strd	sl, [sp, #24]
   16b4c:	str	lr, [sp, #32]
   16b50:	sub	sp, sp, #20
   16b54:	ldr	ip, [r1, #4]
   16b58:	ldrh	r6, [ip, r2]
   16b5c:	cmp	r6, #0
   16b60:	beq	16e3c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x314>
   16b64:	ldr	r9, [r1]
   16b68:	ldr	r5, [sp, #60]	; 0x3c
   16b6c:	adds	r5, r5, #0
   16b70:	movne	r5, #1
   16b74:	orr	r8, r5, #128	; 0x80
   16b78:	adds	sl, r9, r6
   16b7c:	beq	16e3c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x314>
   16b80:	ldr	r2, [r1, #16]
   16b84:	add	ip, r2, #1
   16b88:	str	ip, [r1, #16]
   16b8c:	cmp	r2, #0
   16b90:	beq	16ba8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x80>
   16b94:	ldr	r2, [r0, #20]
   16b98:	add	r1, r2, #1
   16b9c:	str	r1, [r0, #20]
   16ba0:	mov	r1, #44	; 0x2c
   16ba4:	strb	r1, [r2]
   16ba8:	mov	r7, r3
   16bac:	mov	r4, r0
   16bb0:	ldrb	r3, [r0, #25]
   16bb4:	cmp	r3, #0
   16bb8:	bne	16d9c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x274>
   16bbc:	ldr	r2, [r0, #20]
   16bc0:	ldr	r3, [r0, #16]
   16bc4:	cmp	r2, r3
   16bc8:	bcc	16bd8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xb0>
   16bcc:	ldr	r3, [r0, #44]	; 0x2c
   16bd0:	mov	r1, #0
   16bd4:	blx	r3
   16bd8:	ldr	r3, [r4, #20]
   16bdc:	mov	r2, #34	; 0x22
   16be0:	strb	r2, [r3]
   16be4:	ldrb	r3, [r4, #26]
   16be8:	ldr	r0, [r4, #20]
   16bec:	cmp	r3, #0
   16bf0:	addeq	r0, r0, #1
   16bf4:	str	r0, [r4, #20]
   16bf8:	ldr	r3, [sp, #56]	; 0x38
   16bfc:	add	r3, r0, r3
   16c00:	ldr	r2, [r4, #16]
   16c04:	cmp	r2, r3
   16c08:	bls	16dfc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2d4>
   16c0c:	ldr	r2, [sp, #56]	; 0x38
   16c10:	mov	r1, r7
   16c14:	bl	12428 <memcpy@plt>
   16c18:	ldr	r3, [r4, #20]
   16c1c:	ldr	r2, [sp, #56]	; 0x38
   16c20:	add	r3, r3, r2
   16c24:	str	r3, [r4, #20]
   16c28:	ldr	r3, [r4, #20]
   16c2c:	mov	r1, #34	; 0x22
   16c30:	strb	r1, [r3]
   16c34:	ldrb	r3, [r4, #26]
   16c38:	clz	r3, r3
   16c3c:	lsr	r3, r3, #5
   16c40:	ldr	r0, [r4, #20]
   16c44:	add	r2, r0, r3
   16c48:	add	r2, r2, #1
   16c4c:	str	r2, [r4, #20]
   16c50:	mov	r2, #58	; 0x3a
   16c54:	strb	r2, [r0, r3]
   16c58:	ldr	r3, [r4, #20]
   16c5c:	mov	r2, #32
   16c60:	strb	r2, [r3]
   16c64:	ldrb	r3, [r4, #25]
   16c68:	adds	r3, r3, #0
   16c6c:	movne	r3, #1
   16c70:	ldr	r0, [r4, #20]
   16c74:	add	r2, r0, r3
   16c78:	str	r2, [r4, #20]
   16c7c:	ldr	ip, [r9, r6]
   16c80:	add	r7, sl, ip
   16c84:	ldr	ip, [sl, ip]
   16c88:	str	ip, [sp, #8]
   16c8c:	add	r7, r7, #4
   16c90:	add	r2, r2, #1
   16c94:	str	r2, [r4, #20]
   16c98:	strb	r1, [r0, r3]
   16c9c:	mov	r1, r8
   16ca0:	ldr	r0, [sp, #8]
   16ca4:	bl	14d68 <main@@Base+0x118c>
   16ca8:	mov	r9, r0
   16cac:	ldr	r3, [r4, #20]
   16cb0:	add	r3, r3, r0
   16cb4:	ldr	r2, [r4, #16]
   16cb8:	cmp	r2, r3
   16cbc:	bhi	16cd0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1a8>
   16cc0:	ldr	r3, [r4, #44]	; 0x2c
   16cc4:	mov	r1, #0
   16cc8:	mov	r0, r4
   16ccc:	blx	r3
   16cd0:	ldr	r0, [r4, #20]
   16cd4:	ldr	r6, [r4, #16]
   16cd8:	add	r3, r0, r9
   16cdc:	cmp	r6, r3
   16ce0:	bcs	16e10 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2e8>
   16ce4:	sub	r6, r6, r0
   16ce8:	bic	r6, r6, #3
   16cec:	add	r3, r6, r6, lsl #1
   16cf0:	lsr	r9, r3, #2
   16cf4:	cmp	r3, #3
   16cf8:	bls	16d80 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x258>
   16cfc:	mov	sl, #0
   16d00:	str	r9, [sp, #12]
   16d04:	str	r5, [sp]
   16d08:	add	r3, sp, #12
   16d0c:	mov	r2, sl
   16d10:	mov	r1, r7
   16d14:	bl	14dc0 <main@@Base+0x11e4>
   16d18:	ldr	r3, [r4, #20]
   16d1c:	add	r6, r3, r6
   16d20:	str	r6, [r4, #20]
   16d24:	add	r7, r7, r9
   16d28:	ldr	r3, [sp, #8]
   16d2c:	sub	r9, r3, r9
   16d30:	str	r9, [sp, #8]
   16d34:	ldr	r3, [r4, #44]	; 0x2c
   16d38:	mov	r1, sl
   16d3c:	mov	r0, r4
   16d40:	blx	r3
   16d44:	mov	r1, r8
   16d48:	ldr	r0, [sp, #8]
   16d4c:	bl	14d68 <main@@Base+0x118c>
   16d50:	mov	r9, r0
   16d54:	ldr	r0, [r4, #20]
   16d58:	ldr	r6, [r4, #16]
   16d5c:	add	r3, r0, r9
   16d60:	cmp	r6, r3
   16d64:	bcs	16e10 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2e8>
   16d68:	sub	r6, r6, r0
   16d6c:	bic	r6, r6, #3
   16d70:	add	r3, r6, r6, lsl #1
   16d74:	lsr	r9, r3, #2
   16d78:	cmp	r3, #3
   16d7c:	bhi	16d00 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1d8>
   16d80:	ldr	r3, [pc, #208]	; 16e58 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x330>
   16d84:	movw	r2, #277	; 0x115
   16d88:	movw	r1, #10632	; 0x2988
   16d8c:	movt	r1, #2
   16d90:	movw	r0, #11020	; 0x2b0c
   16d94:	movt	r0, #2
   16d98:	bl	1250c <__assert_fail@plt>
   16d9c:	ldr	r3, [r0, #20]
   16da0:	add	r2, r3, #1
   16da4:	str	r2, [r0, #20]
   16da8:	mov	r2, #10
   16dac:	strb	r2, [r3]
   16db0:	ldrb	r3, [r0, #25]
   16db4:	ldr	fp, [r0, #32]
   16db8:	mul	fp, fp, r3
   16dbc:	ldr	r0, [r0, #20]
   16dc0:	add	r3, r0, fp
   16dc4:	ldr	r2, [r4, #16]
   16dc8:	cmp	r2, r3
   16dcc:	bcs	16de0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2b8>
   16dd0:	mov	r1, fp
   16dd4:	mov	r0, r4
   16dd8:	bl	15218 <main@@Base+0x163c>
   16ddc:	b	16bd8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xb0>
   16de0:	mov	r2, fp
   16de4:	mov	r1, #32
   16de8:	bl	124c4 <memset@plt>
   16dec:	ldr	r3, [r4, #20]
   16df0:	add	fp, r3, fp
   16df4:	str	fp, [r4, #20]
   16df8:	b	16bd8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xb0>
   16dfc:	ldr	r2, [sp, #56]	; 0x38
   16e00:	mov	r1, r7
   16e04:	mov	r0, r4
   16e08:	bl	15108 <main@@Base+0x152c>
   16e0c:	b	16c28 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x100>
   16e10:	str	r8, [sp]
   16e14:	add	r3, sp, #8
   16e18:	mov	r2, #0
   16e1c:	mov	r1, r7
   16e20:	bl	14dc0 <main@@Base+0x11e4>
   16e24:	ldr	r2, [r4, #20]
   16e28:	add	r3, r2, r9
   16e2c:	add	r3, r3, #1
   16e30:	str	r3, [r4, #20]
   16e34:	mov	r3, #34	; 0x22
   16e38:	strb	r3, [r2, r9]
   16e3c:	add	sp, sp, #20
   16e40:	ldrd	r4, [sp]
   16e44:	ldrd	r6, [sp, #8]
   16e48:	ldrd	r8, [sp, #16]
   16e4c:	ldrd	sl, [sp, #24]
   16e50:	add	sp, sp, #32
   16e54:	pop	{pc}		; (ldr pc, [sp], #4)
   16e58:	andeq	r2, r2, r0, lsr r8

00016e5c <flatcc_json_printer_uint8_field@@Base>:
   16e5c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16e60:	strd	r6, [sp, #8]
   16e64:	str	r8, [sp, #16]
   16e68:	str	lr, [sp, #20]
   16e6c:	ldr	r6, [sp, #24]
   16e70:	ldrb	lr, [sp, #28]
   16e74:	add	r2, r2, #2
   16e78:	lsl	r2, r2, #1
   16e7c:	ldr	ip, [r1, #8]
   16e80:	cmp	r2, ip
   16e84:	bge	16ec0 <flatcc_json_printer_uint8_field@@Base+0x64>
   16e88:	ldr	ip, [r1, #4]
   16e8c:	ldrh	r2, [ip, r2]
   16e90:	cmp	r2, #0
   16e94:	beq	16ec0 <flatcc_json_printer_uint8_field@@Base+0x64>
   16e98:	ldr	ip, [r1]
   16e9c:	cmn	ip, r2
   16ea0:	beq	16ec0 <flatcc_json_printer_uint8_field@@Base+0x64>
   16ea4:	ldrb	r5, [ip, r2]
   16ea8:	cmp	lr, r5
   16eac:	bne	16ed0 <flatcc_json_printer_uint8_field@@Base+0x74>
   16eb0:	ldrb	r2, [r0, #28]
   16eb4:	cmp	r2, #0
   16eb8:	beq	16ed0 <flatcc_json_printer_uint8_field@@Base+0x74>
   16ebc:	b	16fd4 <flatcc_json_printer_uint8_field@@Base+0x178>
   16ec0:	ldrb	r2, [r0, #29]
   16ec4:	cmp	r2, #0
   16ec8:	beq	16fd4 <flatcc_json_printer_uint8_field@@Base+0x178>
   16ecc:	mov	r5, lr
   16ed0:	ldr	r2, [r1, #16]
   16ed4:	add	ip, r2, #1
   16ed8:	str	ip, [r1, #16]
   16edc:	cmp	r2, #0
   16ee0:	beq	16ef8 <flatcc_json_printer_uint8_field@@Base+0x9c>
   16ee4:	ldr	r2, [r0, #20]
   16ee8:	add	r1, r2, #1
   16eec:	str	r1, [r0, #20]
   16ef0:	mov	r1, #44	; 0x2c
   16ef4:	strb	r1, [r2]
   16ef8:	mov	r7, r3
   16efc:	mov	r4, r0
   16f00:	ldrb	r3, [r0, #25]
   16f04:	cmp	r3, #0
   16f08:	bne	16fe8 <flatcc_json_printer_uint8_field@@Base+0x18c>
   16f0c:	ldr	r2, [r0, #20]
   16f10:	ldr	r3, [r0, #16]
   16f14:	cmp	r2, r3
   16f18:	bcc	16f28 <flatcc_json_printer_uint8_field@@Base+0xcc>
   16f1c:	ldr	r3, [r0, #44]	; 0x2c
   16f20:	mov	r1, #0
   16f24:	blx	r3
   16f28:	ldr	r3, [r4, #20]
   16f2c:	mov	r2, #34	; 0x22
   16f30:	strb	r2, [r3]
   16f34:	ldrb	r3, [r4, #26]
   16f38:	ldr	r0, [r4, #20]
   16f3c:	cmp	r3, #0
   16f40:	addeq	r0, r0, #1
   16f44:	str	r0, [r4, #20]
   16f48:	add	r3, r0, r6
   16f4c:	ldr	r2, [r4, #16]
   16f50:	cmp	r2, r3
   16f54:	bls	17048 <flatcc_json_printer_uint8_field@@Base+0x1ec>
   16f58:	mov	r2, r6
   16f5c:	mov	r1, r7
   16f60:	bl	12428 <memcpy@plt>
   16f64:	ldr	r3, [r4, #20]
   16f68:	add	r6, r3, r6
   16f6c:	str	r6, [r4, #20]
   16f70:	ldr	r3, [r4, #20]
   16f74:	mov	r2, #34	; 0x22
   16f78:	strb	r2, [r3]
   16f7c:	ldrb	r3, [r4, #26]
   16f80:	clz	r3, r3
   16f84:	lsr	r3, r3, #5
   16f88:	ldr	r1, [r4, #20]
   16f8c:	add	r2, r1, r3
   16f90:	add	r2, r2, #1
   16f94:	str	r2, [r4, #20]
   16f98:	mov	r2, #58	; 0x3a
   16f9c:	strb	r2, [r1, r3]
   16fa0:	ldr	r3, [r4, #20]
   16fa4:	mov	r2, #32
   16fa8:	strb	r2, [r3]
   16fac:	ldrb	r3, [r4, #25]
   16fb0:	ldr	r1, [r4, #20]
   16fb4:	cmp	r3, #0
   16fb8:	addne	r1, r1, #1
   16fbc:	str	r1, [r4, #20]
   16fc0:	mov	r0, r5
   16fc4:	bl	13c90 <main@@Base+0xb4>
   16fc8:	ldr	r3, [r4, #20]
   16fcc:	add	r0, r3, r0
   16fd0:	str	r0, [r4, #20]
   16fd4:	ldrd	r4, [sp]
   16fd8:	ldrd	r6, [sp, #8]
   16fdc:	ldr	r8, [sp, #16]
   16fe0:	add	sp, sp, #20
   16fe4:	pop	{pc}		; (ldr pc, [sp], #4)
   16fe8:	ldr	r3, [r0, #20]
   16fec:	add	r2, r3, #1
   16ff0:	str	r2, [r0, #20]
   16ff4:	mov	r2, #10
   16ff8:	strb	r2, [r3]
   16ffc:	ldrb	r3, [r0, #25]
   17000:	ldr	r8, [r0, #32]
   17004:	mul	r8, r8, r3
   17008:	ldr	r0, [r0, #20]
   1700c:	add	r3, r0, r8
   17010:	ldr	r2, [r4, #16]
   17014:	cmp	r2, r3
   17018:	bcs	1702c <flatcc_json_printer_uint8_field@@Base+0x1d0>
   1701c:	mov	r1, r8
   17020:	mov	r0, r4
   17024:	bl	15218 <main@@Base+0x163c>
   17028:	b	16f28 <flatcc_json_printer_uint8_field@@Base+0xcc>
   1702c:	mov	r2, r8
   17030:	mov	r1, #32
   17034:	bl	124c4 <memset@plt>
   17038:	ldr	r3, [r4, #20]
   1703c:	add	r8, r3, r8
   17040:	str	r8, [r4, #20]
   17044:	b	16f28 <flatcc_json_printer_uint8_field@@Base+0xcc>
   17048:	mov	r2, r6
   1704c:	mov	r1, r7
   17050:	mov	r0, r4
   17054:	bl	15108 <main@@Base+0x152c>
   17058:	b	16f70 <flatcc_json_printer_uint8_field@@Base+0x114>

0001705c <flatcc_json_printer_uint16_field@@Base>:
   1705c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17060:	strd	r6, [sp, #8]
   17064:	str	r8, [sp, #16]
   17068:	str	lr, [sp, #20]
   1706c:	ldr	r6, [sp, #24]
   17070:	ldrh	lr, [sp, #28]
   17074:	add	r2, r2, #2
   17078:	lsl	r2, r2, #1
   1707c:	ldr	ip, [r1, #8]
   17080:	cmp	r2, ip
   17084:	bge	170c0 <flatcc_json_printer_uint16_field@@Base+0x64>
   17088:	ldr	ip, [r1, #4]
   1708c:	ldrh	r2, [ip, r2]
   17090:	cmp	r2, #0
   17094:	beq	170c0 <flatcc_json_printer_uint16_field@@Base+0x64>
   17098:	ldr	ip, [r1]
   1709c:	cmn	ip, r2
   170a0:	beq	170c0 <flatcc_json_printer_uint16_field@@Base+0x64>
   170a4:	ldrh	r5, [ip, r2]
   170a8:	cmp	lr, r5
   170ac:	bne	170d0 <flatcc_json_printer_uint16_field@@Base+0x74>
   170b0:	ldrb	r2, [r0, #28]
   170b4:	cmp	r2, #0
   170b8:	beq	170d0 <flatcc_json_printer_uint16_field@@Base+0x74>
   170bc:	b	171d4 <flatcc_json_printer_uint16_field@@Base+0x178>
   170c0:	ldrb	r2, [r0, #29]
   170c4:	cmp	r2, #0
   170c8:	beq	171d4 <flatcc_json_printer_uint16_field@@Base+0x178>
   170cc:	mov	r5, lr
   170d0:	ldr	r2, [r1, #16]
   170d4:	add	ip, r2, #1
   170d8:	str	ip, [r1, #16]
   170dc:	cmp	r2, #0
   170e0:	beq	170f8 <flatcc_json_printer_uint16_field@@Base+0x9c>
   170e4:	ldr	r2, [r0, #20]
   170e8:	add	r1, r2, #1
   170ec:	str	r1, [r0, #20]
   170f0:	mov	r1, #44	; 0x2c
   170f4:	strb	r1, [r2]
   170f8:	mov	r7, r3
   170fc:	mov	r4, r0
   17100:	ldrb	r3, [r0, #25]
   17104:	cmp	r3, #0
   17108:	bne	171e8 <flatcc_json_printer_uint16_field@@Base+0x18c>
   1710c:	ldr	r2, [r0, #20]
   17110:	ldr	r3, [r0, #16]
   17114:	cmp	r2, r3
   17118:	bcc	17128 <flatcc_json_printer_uint16_field@@Base+0xcc>
   1711c:	ldr	r3, [r0, #44]	; 0x2c
   17120:	mov	r1, #0
   17124:	blx	r3
   17128:	ldr	r3, [r4, #20]
   1712c:	mov	r2, #34	; 0x22
   17130:	strb	r2, [r3]
   17134:	ldrb	r3, [r4, #26]
   17138:	ldr	r0, [r4, #20]
   1713c:	cmp	r3, #0
   17140:	addeq	r0, r0, #1
   17144:	str	r0, [r4, #20]
   17148:	add	r3, r0, r6
   1714c:	ldr	r2, [r4, #16]
   17150:	cmp	r2, r3
   17154:	bls	17248 <flatcc_json_printer_uint16_field@@Base+0x1ec>
   17158:	mov	r2, r6
   1715c:	mov	r1, r7
   17160:	bl	12428 <memcpy@plt>
   17164:	ldr	r3, [r4, #20]
   17168:	add	r6, r3, r6
   1716c:	str	r6, [r4, #20]
   17170:	ldr	r3, [r4, #20]
   17174:	mov	r2, #34	; 0x22
   17178:	strb	r2, [r3]
   1717c:	ldrb	r3, [r4, #26]
   17180:	clz	r3, r3
   17184:	lsr	r3, r3, #5
   17188:	ldr	r1, [r4, #20]
   1718c:	add	r2, r1, r3
   17190:	add	r2, r2, #1
   17194:	str	r2, [r4, #20]
   17198:	mov	r2, #58	; 0x3a
   1719c:	strb	r2, [r1, r3]
   171a0:	ldr	r3, [r4, #20]
   171a4:	mov	r2, #32
   171a8:	strb	r2, [r3]
   171ac:	ldrb	r3, [r4, #25]
   171b0:	ldr	r1, [r4, #20]
   171b4:	cmp	r3, #0
   171b8:	addne	r1, r1, #1
   171bc:	str	r1, [r4, #20]
   171c0:	mov	r0, r5
   171c4:	bl	13d50 <main@@Base+0x174>
   171c8:	ldr	r3, [r4, #20]
   171cc:	add	r0, r3, r0
   171d0:	str	r0, [r4, #20]
   171d4:	ldrd	r4, [sp]
   171d8:	ldrd	r6, [sp, #8]
   171dc:	ldr	r8, [sp, #16]
   171e0:	add	sp, sp, #20
   171e4:	pop	{pc}		; (ldr pc, [sp], #4)
   171e8:	ldr	r3, [r0, #20]
   171ec:	add	r2, r3, #1
   171f0:	str	r2, [r0, #20]
   171f4:	mov	r2, #10
   171f8:	strb	r2, [r3]
   171fc:	ldrb	r3, [r0, #25]
   17200:	ldr	r8, [r0, #32]
   17204:	mul	r8, r8, r3
   17208:	ldr	r0, [r0, #20]
   1720c:	add	r3, r0, r8
   17210:	ldr	r2, [r4, #16]
   17214:	cmp	r2, r3
   17218:	bcs	1722c <flatcc_json_printer_uint16_field@@Base+0x1d0>
   1721c:	mov	r1, r8
   17220:	mov	r0, r4
   17224:	bl	15218 <main@@Base+0x163c>
   17228:	b	17128 <flatcc_json_printer_uint16_field@@Base+0xcc>
   1722c:	mov	r2, r8
   17230:	mov	r1, #32
   17234:	bl	124c4 <memset@plt>
   17238:	ldr	r3, [r4, #20]
   1723c:	add	r8, r3, r8
   17240:	str	r8, [r4, #20]
   17244:	b	17128 <flatcc_json_printer_uint16_field@@Base+0xcc>
   17248:	mov	r2, r6
   1724c:	mov	r1, r7
   17250:	mov	r0, r4
   17254:	bl	15108 <main@@Base+0x152c>
   17258:	b	17170 <flatcc_json_printer_uint16_field@@Base+0x114>

0001725c <flatcc_json_printer_uint32_field@@Base>:
   1725c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17260:	strd	r6, [sp, #8]
   17264:	str	r8, [sp, #16]
   17268:	str	lr, [sp, #20]
   1726c:	ldr	r6, [sp, #24]
   17270:	add	r2, r2, #2
   17274:	lsl	r2, r2, #1
   17278:	ldr	ip, [r1, #8]
   1727c:	cmp	r2, ip
   17280:	bge	172c0 <flatcc_json_printer_uint32_field@@Base+0x64>
   17284:	ldr	ip, [r1, #4]
   17288:	ldrh	r2, [ip, r2]
   1728c:	cmp	r2, #0
   17290:	beq	172c0 <flatcc_json_printer_uint32_field@@Base+0x64>
   17294:	ldr	ip, [r1]
   17298:	cmn	ip, r2
   1729c:	beq	172c0 <flatcc_json_printer_uint32_field@@Base+0x64>
   172a0:	ldr	r5, [ip, r2]
   172a4:	ldr	r2, [sp, #28]
   172a8:	cmp	r2, r5
   172ac:	bne	172d0 <flatcc_json_printer_uint32_field@@Base+0x74>
   172b0:	ldrb	r2, [r0, #28]
   172b4:	cmp	r2, #0
   172b8:	beq	172d0 <flatcc_json_printer_uint32_field@@Base+0x74>
   172bc:	b	173d4 <flatcc_json_printer_uint32_field@@Base+0x178>
   172c0:	ldrb	r2, [r0, #29]
   172c4:	cmp	r2, #0
   172c8:	beq	173d4 <flatcc_json_printer_uint32_field@@Base+0x178>
   172cc:	ldr	r5, [sp, #28]
   172d0:	ldr	r2, [r1, #16]
   172d4:	add	ip, r2, #1
   172d8:	str	ip, [r1, #16]
   172dc:	cmp	r2, #0
   172e0:	beq	172f8 <flatcc_json_printer_uint32_field@@Base+0x9c>
   172e4:	ldr	r2, [r0, #20]
   172e8:	add	r1, r2, #1
   172ec:	str	r1, [r0, #20]
   172f0:	mov	r1, #44	; 0x2c
   172f4:	strb	r1, [r2]
   172f8:	mov	r7, r3
   172fc:	mov	r4, r0
   17300:	ldrb	r3, [r0, #25]
   17304:	cmp	r3, #0
   17308:	bne	173e8 <flatcc_json_printer_uint32_field@@Base+0x18c>
   1730c:	ldr	r2, [r0, #20]
   17310:	ldr	r3, [r0, #16]
   17314:	cmp	r2, r3
   17318:	bcc	17328 <flatcc_json_printer_uint32_field@@Base+0xcc>
   1731c:	ldr	r3, [r0, #44]	; 0x2c
   17320:	mov	r1, #0
   17324:	blx	r3
   17328:	ldr	r3, [r4, #20]
   1732c:	mov	r2, #34	; 0x22
   17330:	strb	r2, [r3]
   17334:	ldrb	r3, [r4, #26]
   17338:	ldr	r0, [r4, #20]
   1733c:	cmp	r3, #0
   17340:	addeq	r0, r0, #1
   17344:	str	r0, [r4, #20]
   17348:	add	r3, r0, r6
   1734c:	ldr	r2, [r4, #16]
   17350:	cmp	r2, r3
   17354:	bls	17448 <flatcc_json_printer_uint32_field@@Base+0x1ec>
   17358:	mov	r2, r6
   1735c:	mov	r1, r7
   17360:	bl	12428 <memcpy@plt>
   17364:	ldr	r3, [r4, #20]
   17368:	add	r6, r3, r6
   1736c:	str	r6, [r4, #20]
   17370:	ldr	r3, [r4, #20]
   17374:	mov	r2, #34	; 0x22
   17378:	strb	r2, [r3]
   1737c:	ldrb	r3, [r4, #26]
   17380:	clz	r3, r3
   17384:	lsr	r3, r3, #5
   17388:	ldr	r1, [r4, #20]
   1738c:	add	r2, r1, r3
   17390:	add	r2, r2, #1
   17394:	str	r2, [r4, #20]
   17398:	mov	r2, #58	; 0x3a
   1739c:	strb	r2, [r1, r3]
   173a0:	ldr	r3, [r4, #20]
   173a4:	mov	r2, #32
   173a8:	strb	r2, [r3]
   173ac:	ldrb	r3, [r4, #25]
   173b0:	ldr	r1, [r4, #20]
   173b4:	cmp	r3, #0
   173b8:	addne	r1, r1, #1
   173bc:	str	r1, [r4, #20]
   173c0:	mov	r0, r5
   173c4:	bl	13ee4 <main@@Base+0x308>
   173c8:	ldr	r3, [r4, #20]
   173cc:	add	r0, r3, r0
   173d0:	str	r0, [r4, #20]
   173d4:	ldrd	r4, [sp]
   173d8:	ldrd	r6, [sp, #8]
   173dc:	ldr	r8, [sp, #16]
   173e0:	add	sp, sp, #20
   173e4:	pop	{pc}		; (ldr pc, [sp], #4)
   173e8:	ldr	r3, [r0, #20]
   173ec:	add	r2, r3, #1
   173f0:	str	r2, [r0, #20]
   173f4:	mov	r2, #10
   173f8:	strb	r2, [r3]
   173fc:	ldrb	r3, [r0, #25]
   17400:	ldr	r8, [r0, #32]
   17404:	mul	r8, r8, r3
   17408:	ldr	r0, [r0, #20]
   1740c:	add	r3, r0, r8
   17410:	ldr	r2, [r4, #16]
   17414:	cmp	r2, r3
   17418:	bcs	1742c <flatcc_json_printer_uint32_field@@Base+0x1d0>
   1741c:	mov	r1, r8
   17420:	mov	r0, r4
   17424:	bl	15218 <main@@Base+0x163c>
   17428:	b	17328 <flatcc_json_printer_uint32_field@@Base+0xcc>
   1742c:	mov	r2, r8
   17430:	mov	r1, #32
   17434:	bl	124c4 <memset@plt>
   17438:	ldr	r3, [r4, #20]
   1743c:	add	r8, r3, r8
   17440:	str	r8, [r4, #20]
   17444:	b	17328 <flatcc_json_printer_uint32_field@@Base+0xcc>
   17448:	mov	r2, r6
   1744c:	mov	r1, r7
   17450:	mov	r0, r4
   17454:	bl	15108 <main@@Base+0x152c>
   17458:	b	17370 <flatcc_json_printer_uint32_field@@Base+0x114>

0001745c <flatcc_json_printer_uint64_field@@Base>:
   1745c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17460:	strd	r6, [sp, #8]
   17464:	strd	r8, [sp, #16]
   17468:	str	sl, [sp, #24]
   1746c:	str	lr, [sp, #28]
   17470:	ldr	r5, [sp, #32]
   17474:	add	r2, r2, #2
   17478:	lsl	r2, r2, #1
   1747c:	ldr	ip, [r1, #8]
   17480:	cmp	r2, ip
   17484:	bge	174c8 <flatcc_json_printer_uint64_field@@Base+0x6c>
   17488:	ldr	ip, [r1, #4]
   1748c:	ldrh	r2, [ip, r2]
   17490:	cmp	r2, #0
   17494:	beq	174c8 <flatcc_json_printer_uint64_field@@Base+0x6c>
   17498:	ldr	ip, [r1]
   1749c:	cmn	ip, r2
   174a0:	beq	174c8 <flatcc_json_printer_uint64_field@@Base+0x6c>
   174a4:	ldrd	r6, [ip, r2]
   174a8:	ldrd	r8, [sp, #40]	; 0x28
   174ac:	cmp	r9, r7
   174b0:	cmpeq	r8, r6
   174b4:	bne	174d8 <flatcc_json_printer_uint64_field@@Base+0x7c>
   174b8:	ldrb	r2, [r0, #28]
   174bc:	cmp	r2, #0
   174c0:	beq	174d8 <flatcc_json_printer_uint64_field@@Base+0x7c>
   174c4:	b	175e0 <flatcc_json_printer_uint64_field@@Base+0x184>
   174c8:	ldrb	r2, [r0, #29]
   174cc:	cmp	r2, #0
   174d0:	beq	175e0 <flatcc_json_printer_uint64_field@@Base+0x184>
   174d4:	ldrd	r6, [sp, #40]	; 0x28
   174d8:	ldr	r2, [r1, #16]
   174dc:	add	ip, r2, #1
   174e0:	str	ip, [r1, #16]
   174e4:	cmp	r2, #0
   174e8:	beq	17500 <flatcc_json_printer_uint64_field@@Base+0xa4>
   174ec:	ldr	r2, [r0, #20]
   174f0:	add	r1, r2, #1
   174f4:	str	r1, [r0, #20]
   174f8:	mov	r1, #44	; 0x2c
   174fc:	strb	r1, [r2]
   17500:	mov	r8, r3
   17504:	mov	r4, r0
   17508:	ldrb	r3, [r0, #25]
   1750c:	cmp	r3, #0
   17510:	bne	175f8 <flatcc_json_printer_uint64_field@@Base+0x19c>
   17514:	ldr	r2, [r0, #20]
   17518:	ldr	r3, [r0, #16]
   1751c:	cmp	r2, r3
   17520:	bcc	17530 <flatcc_json_printer_uint64_field@@Base+0xd4>
   17524:	ldr	r3, [r0, #44]	; 0x2c
   17528:	mov	r1, #0
   1752c:	blx	r3
   17530:	ldr	r3, [r4, #20]
   17534:	mov	r2, #34	; 0x22
   17538:	strb	r2, [r3]
   1753c:	ldrb	r3, [r4, #26]
   17540:	ldr	r0, [r4, #20]
   17544:	cmp	r3, #0
   17548:	addeq	r0, r0, #1
   1754c:	str	r0, [r4, #20]
   17550:	add	r3, r0, r5
   17554:	ldr	r2, [r4, #16]
   17558:	cmp	r2, r3
   1755c:	bls	17658 <flatcc_json_printer_uint64_field@@Base+0x1fc>
   17560:	mov	r2, r5
   17564:	mov	r1, r8
   17568:	bl	12428 <memcpy@plt>
   1756c:	ldr	r3, [r4, #20]
   17570:	add	r5, r3, r5
   17574:	str	r5, [r4, #20]
   17578:	ldr	r3, [r4, #20]
   1757c:	mov	r2, #34	; 0x22
   17580:	strb	r2, [r3]
   17584:	ldrb	r3, [r4, #26]
   17588:	clz	r3, r3
   1758c:	lsr	r3, r3, #5
   17590:	ldr	r1, [r4, #20]
   17594:	add	r2, r1, r3
   17598:	add	r2, r2, #1
   1759c:	str	r2, [r4, #20]
   175a0:	mov	r2, #58	; 0x3a
   175a4:	strb	r2, [r1, r3]
   175a8:	ldr	r3, [r4, #20]
   175ac:	mov	r2, #32
   175b0:	strb	r2, [r3]
   175b4:	ldrb	r3, [r4, #25]
   175b8:	ldr	r2, [r4, #20]
   175bc:	cmp	r3, #0
   175c0:	addne	r2, r2, #1
   175c4:	str	r2, [r4, #20]
   175c8:	mov	r0, r6
   175cc:	mov	r1, r7
   175d0:	bl	14248 <main@@Base+0x66c>
   175d4:	ldr	r3, [r4, #20]
   175d8:	add	r0, r3, r0
   175dc:	str	r0, [r4, #20]
   175e0:	ldrd	r4, [sp]
   175e4:	ldrd	r6, [sp, #8]
   175e8:	ldrd	r8, [sp, #16]
   175ec:	ldr	sl, [sp, #24]
   175f0:	add	sp, sp, #28
   175f4:	pop	{pc}		; (ldr pc, [sp], #4)
   175f8:	ldr	r3, [r0, #20]
   175fc:	add	r2, r3, #1
   17600:	str	r2, [r0, #20]
   17604:	mov	r2, #10
   17608:	strb	r2, [r3]
   1760c:	ldrb	r3, [r0, #25]
   17610:	ldr	r9, [r0, #32]
   17614:	mul	r9, r9, r3
   17618:	ldr	r0, [r0, #20]
   1761c:	add	r3, r0, r9
   17620:	ldr	r2, [r4, #16]
   17624:	cmp	r2, r3
   17628:	bcs	1763c <flatcc_json_printer_uint64_field@@Base+0x1e0>
   1762c:	mov	r1, r9
   17630:	mov	r0, r4
   17634:	bl	15218 <main@@Base+0x163c>
   17638:	b	17530 <flatcc_json_printer_uint64_field@@Base+0xd4>
   1763c:	mov	r2, r9
   17640:	mov	r1, #32
   17644:	bl	124c4 <memset@plt>
   17648:	ldr	r3, [r4, #20]
   1764c:	add	r9, r3, r9
   17650:	str	r9, [r4, #20]
   17654:	b	17530 <flatcc_json_printer_uint64_field@@Base+0xd4>
   17658:	mov	r2, r5
   1765c:	mov	r1, r8
   17660:	mov	r0, r4
   17664:	bl	15108 <main@@Base+0x152c>
   17668:	b	17578 <flatcc_json_printer_uint64_field@@Base+0x11c>

0001766c <flatcc_json_printer_int8_field@@Base>:
   1766c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17670:	strd	r6, [sp, #8]
   17674:	str	r8, [sp, #16]
   17678:	str	lr, [sp, #20]
   1767c:	ldr	r6, [sp, #24]
   17680:	ldrsb	lr, [sp, #28]
   17684:	add	r2, r2, #2
   17688:	lsl	r2, r2, #1
   1768c:	ldr	ip, [r1, #8]
   17690:	cmp	r2, ip
   17694:	bge	176d0 <flatcc_json_printer_int8_field@@Base+0x64>
   17698:	ldr	ip, [r1, #4]
   1769c:	ldrh	r2, [ip, r2]
   176a0:	cmp	r2, #0
   176a4:	beq	176d0 <flatcc_json_printer_int8_field@@Base+0x64>
   176a8:	ldr	ip, [r1]
   176ac:	cmn	ip, r2
   176b0:	beq	176d0 <flatcc_json_printer_int8_field@@Base+0x64>
   176b4:	ldrsb	r5, [ip, r2]
   176b8:	cmp	lr, r5
   176bc:	bne	176e0 <flatcc_json_printer_int8_field@@Base+0x74>
   176c0:	ldrb	r2, [r0, #28]
   176c4:	cmp	r2, #0
   176c8:	beq	176e0 <flatcc_json_printer_int8_field@@Base+0x74>
   176cc:	b	177e4 <flatcc_json_printer_int8_field@@Base+0x178>
   176d0:	ldrb	r2, [r0, #29]
   176d4:	cmp	r2, #0
   176d8:	beq	177e4 <flatcc_json_printer_int8_field@@Base+0x178>
   176dc:	mov	r5, lr
   176e0:	ldr	r2, [r1, #16]
   176e4:	add	ip, r2, #1
   176e8:	str	ip, [r1, #16]
   176ec:	cmp	r2, #0
   176f0:	beq	17708 <flatcc_json_printer_int8_field@@Base+0x9c>
   176f4:	ldr	r2, [r0, #20]
   176f8:	add	r1, r2, #1
   176fc:	str	r1, [r0, #20]
   17700:	mov	r1, #44	; 0x2c
   17704:	strb	r1, [r2]
   17708:	mov	r7, r3
   1770c:	mov	r4, r0
   17710:	ldrb	r3, [r0, #25]
   17714:	cmp	r3, #0
   17718:	bne	177f8 <flatcc_json_printer_int8_field@@Base+0x18c>
   1771c:	ldr	r2, [r0, #20]
   17720:	ldr	r3, [r0, #16]
   17724:	cmp	r2, r3
   17728:	bcc	17738 <flatcc_json_printer_int8_field@@Base+0xcc>
   1772c:	ldr	r3, [r0, #44]	; 0x2c
   17730:	mov	r1, #0
   17734:	blx	r3
   17738:	ldr	r3, [r4, #20]
   1773c:	mov	r2, #34	; 0x22
   17740:	strb	r2, [r3]
   17744:	ldrb	r3, [r4, #26]
   17748:	ldr	r0, [r4, #20]
   1774c:	cmp	r3, #0
   17750:	addeq	r0, r0, #1
   17754:	str	r0, [r4, #20]
   17758:	add	r3, r0, r6
   1775c:	ldr	r2, [r4, #16]
   17760:	cmp	r2, r3
   17764:	bls	17858 <flatcc_json_printer_int8_field@@Base+0x1ec>
   17768:	mov	r2, r6
   1776c:	mov	r1, r7
   17770:	bl	12428 <memcpy@plt>
   17774:	ldr	r3, [r4, #20]
   17778:	add	r6, r3, r6
   1777c:	str	r6, [r4, #20]
   17780:	ldr	r3, [r4, #20]
   17784:	mov	r2, #34	; 0x22
   17788:	strb	r2, [r3]
   1778c:	ldrb	r3, [r4, #26]
   17790:	clz	r3, r3
   17794:	lsr	r3, r3, #5
   17798:	ldr	r1, [r4, #20]
   1779c:	add	r2, r1, r3
   177a0:	add	r2, r2, #1
   177a4:	str	r2, [r4, #20]
   177a8:	mov	r2, #58	; 0x3a
   177ac:	strb	r2, [r1, r3]
   177b0:	ldr	r3, [r4, #20]
   177b4:	mov	r2, #32
   177b8:	strb	r2, [r3]
   177bc:	ldrb	r3, [r4, #25]
   177c0:	ldr	r1, [r4, #20]
   177c4:	cmp	r3, #0
   177c8:	addne	r1, r1, #1
   177cc:	str	r1, [r4, #20]
   177d0:	mov	r0, r5
   177d4:	bl	14924 <main@@Base+0xd48>
   177d8:	ldr	r3, [r4, #20]
   177dc:	add	r0, r3, r0
   177e0:	str	r0, [r4, #20]
   177e4:	ldrd	r4, [sp]
   177e8:	ldrd	r6, [sp, #8]
   177ec:	ldr	r8, [sp, #16]
   177f0:	add	sp, sp, #20
   177f4:	pop	{pc}		; (ldr pc, [sp], #4)
   177f8:	ldr	r3, [r0, #20]
   177fc:	add	r2, r3, #1
   17800:	str	r2, [r0, #20]
   17804:	mov	r2, #10
   17808:	strb	r2, [r3]
   1780c:	ldrb	r3, [r0, #25]
   17810:	ldr	r8, [r0, #32]
   17814:	mul	r8, r8, r3
   17818:	ldr	r0, [r0, #20]
   1781c:	add	r3, r0, r8
   17820:	ldr	r2, [r4, #16]
   17824:	cmp	r2, r3
   17828:	bcs	1783c <flatcc_json_printer_int8_field@@Base+0x1d0>
   1782c:	mov	r1, r8
   17830:	mov	r0, r4
   17834:	bl	15218 <main@@Base+0x163c>
   17838:	b	17738 <flatcc_json_printer_int8_field@@Base+0xcc>
   1783c:	mov	r2, r8
   17840:	mov	r1, #32
   17844:	bl	124c4 <memset@plt>
   17848:	ldr	r3, [r4, #20]
   1784c:	add	r8, r3, r8
   17850:	str	r8, [r4, #20]
   17854:	b	17738 <flatcc_json_printer_int8_field@@Base+0xcc>
   17858:	mov	r2, r6
   1785c:	mov	r1, r7
   17860:	mov	r0, r4
   17864:	bl	15108 <main@@Base+0x152c>
   17868:	b	17780 <flatcc_json_printer_int8_field@@Base+0x114>

0001786c <flatcc_json_printer_int16_field@@Base>:
   1786c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17870:	strd	r6, [sp, #8]
   17874:	str	r8, [sp, #16]
   17878:	str	lr, [sp, #20]
   1787c:	ldr	r6, [sp, #24]
   17880:	ldrsh	lr, [sp, #28]
   17884:	add	r2, r2, #2
   17888:	lsl	r2, r2, #1
   1788c:	ldr	ip, [r1, #8]
   17890:	cmp	r2, ip
   17894:	bge	178d0 <flatcc_json_printer_int16_field@@Base+0x64>
   17898:	ldr	ip, [r1, #4]
   1789c:	ldrh	r2, [ip, r2]
   178a0:	cmp	r2, #0
   178a4:	beq	178d0 <flatcc_json_printer_int16_field@@Base+0x64>
   178a8:	ldr	ip, [r1]
   178ac:	cmn	ip, r2
   178b0:	beq	178d0 <flatcc_json_printer_int16_field@@Base+0x64>
   178b4:	ldrsh	r5, [ip, r2]
   178b8:	cmp	lr, r5
   178bc:	bne	178e0 <flatcc_json_printer_int16_field@@Base+0x74>
   178c0:	ldrb	r2, [r0, #28]
   178c4:	cmp	r2, #0
   178c8:	beq	178e0 <flatcc_json_printer_int16_field@@Base+0x74>
   178cc:	b	179e4 <flatcc_json_printer_int16_field@@Base+0x178>
   178d0:	ldrb	r2, [r0, #29]
   178d4:	cmp	r2, #0
   178d8:	beq	179e4 <flatcc_json_printer_int16_field@@Base+0x178>
   178dc:	mov	r5, lr
   178e0:	ldr	r2, [r1, #16]
   178e4:	add	ip, r2, #1
   178e8:	str	ip, [r1, #16]
   178ec:	cmp	r2, #0
   178f0:	beq	17908 <flatcc_json_printer_int16_field@@Base+0x9c>
   178f4:	ldr	r2, [r0, #20]
   178f8:	add	r1, r2, #1
   178fc:	str	r1, [r0, #20]
   17900:	mov	r1, #44	; 0x2c
   17904:	strb	r1, [r2]
   17908:	mov	r7, r3
   1790c:	mov	r4, r0
   17910:	ldrb	r3, [r0, #25]
   17914:	cmp	r3, #0
   17918:	bne	179f8 <flatcc_json_printer_int16_field@@Base+0x18c>
   1791c:	ldr	r2, [r0, #20]
   17920:	ldr	r3, [r0, #16]
   17924:	cmp	r2, r3
   17928:	bcc	17938 <flatcc_json_printer_int16_field@@Base+0xcc>
   1792c:	ldr	r3, [r0, #44]	; 0x2c
   17930:	mov	r1, #0
   17934:	blx	r3
   17938:	ldr	r3, [r4, #20]
   1793c:	mov	r2, #34	; 0x22
   17940:	strb	r2, [r3]
   17944:	ldrb	r3, [r4, #26]
   17948:	ldr	r0, [r4, #20]
   1794c:	cmp	r3, #0
   17950:	addeq	r0, r0, #1
   17954:	str	r0, [r4, #20]
   17958:	add	r3, r0, r6
   1795c:	ldr	r2, [r4, #16]
   17960:	cmp	r2, r3
   17964:	bls	17a58 <flatcc_json_printer_int16_field@@Base+0x1ec>
   17968:	mov	r2, r6
   1796c:	mov	r1, r7
   17970:	bl	12428 <memcpy@plt>
   17974:	ldr	r3, [r4, #20]
   17978:	add	r6, r3, r6
   1797c:	str	r6, [r4, #20]
   17980:	ldr	r3, [r4, #20]
   17984:	mov	r2, #34	; 0x22
   17988:	strb	r2, [r3]
   1798c:	ldrb	r3, [r4, #26]
   17990:	clz	r3, r3
   17994:	lsr	r3, r3, #5
   17998:	ldr	r1, [r4, #20]
   1799c:	add	r2, r1, r3
   179a0:	add	r2, r2, #1
   179a4:	str	r2, [r4, #20]
   179a8:	mov	r2, #58	; 0x3a
   179ac:	strb	r2, [r1, r3]
   179b0:	ldr	r3, [r4, #20]
   179b4:	mov	r2, #32
   179b8:	strb	r2, [r3]
   179bc:	ldrb	r3, [r4, #25]
   179c0:	ldr	r1, [r4, #20]
   179c4:	cmp	r3, #0
   179c8:	addne	r1, r1, #1
   179cc:	str	r1, [r4, #20]
   179d0:	mov	r0, r5
   179d4:	bl	14964 <main@@Base+0xd88>
   179d8:	ldr	r3, [r4, #20]
   179dc:	add	r0, r3, r0
   179e0:	str	r0, [r4, #20]
   179e4:	ldrd	r4, [sp]
   179e8:	ldrd	r6, [sp, #8]
   179ec:	ldr	r8, [sp, #16]
   179f0:	add	sp, sp, #20
   179f4:	pop	{pc}		; (ldr pc, [sp], #4)
   179f8:	ldr	r3, [r0, #20]
   179fc:	add	r2, r3, #1
   17a00:	str	r2, [r0, #20]
   17a04:	mov	r2, #10
   17a08:	strb	r2, [r3]
   17a0c:	ldrb	r3, [r0, #25]
   17a10:	ldr	r8, [r0, #32]
   17a14:	mul	r8, r8, r3
   17a18:	ldr	r0, [r0, #20]
   17a1c:	add	r3, r0, r8
   17a20:	ldr	r2, [r4, #16]
   17a24:	cmp	r2, r3
   17a28:	bcs	17a3c <flatcc_json_printer_int16_field@@Base+0x1d0>
   17a2c:	mov	r1, r8
   17a30:	mov	r0, r4
   17a34:	bl	15218 <main@@Base+0x163c>
   17a38:	b	17938 <flatcc_json_printer_int16_field@@Base+0xcc>
   17a3c:	mov	r2, r8
   17a40:	mov	r1, #32
   17a44:	bl	124c4 <memset@plt>
   17a48:	ldr	r3, [r4, #20]
   17a4c:	add	r8, r3, r8
   17a50:	str	r8, [r4, #20]
   17a54:	b	17938 <flatcc_json_printer_int16_field@@Base+0xcc>
   17a58:	mov	r2, r6
   17a5c:	mov	r1, r7
   17a60:	mov	r0, r4
   17a64:	bl	15108 <main@@Base+0x152c>
   17a68:	b	17980 <flatcc_json_printer_int16_field@@Base+0x114>

00017a6c <flatcc_json_printer_int32_field@@Base>:
   17a6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17a70:	strd	r6, [sp, #8]
   17a74:	str	r8, [sp, #16]
   17a78:	str	lr, [sp, #20]
   17a7c:	ldr	r6, [sp, #24]
   17a80:	add	r2, r2, #2
   17a84:	lsl	r2, r2, #1
   17a88:	ldr	ip, [r1, #8]
   17a8c:	cmp	r2, ip
   17a90:	bge	17ad0 <flatcc_json_printer_int32_field@@Base+0x64>
   17a94:	ldr	ip, [r1, #4]
   17a98:	ldrh	r2, [ip, r2]
   17a9c:	cmp	r2, #0
   17aa0:	beq	17ad0 <flatcc_json_printer_int32_field@@Base+0x64>
   17aa4:	ldr	ip, [r1]
   17aa8:	cmn	ip, r2
   17aac:	beq	17ad0 <flatcc_json_printer_int32_field@@Base+0x64>
   17ab0:	ldr	r5, [ip, r2]
   17ab4:	ldr	r2, [sp, #28]
   17ab8:	cmp	r2, r5
   17abc:	bne	17ae0 <flatcc_json_printer_int32_field@@Base+0x74>
   17ac0:	ldrb	r2, [r0, #28]
   17ac4:	cmp	r2, #0
   17ac8:	beq	17ae0 <flatcc_json_printer_int32_field@@Base+0x74>
   17acc:	b	17be4 <flatcc_json_printer_int32_field@@Base+0x178>
   17ad0:	ldrb	r2, [r0, #29]
   17ad4:	cmp	r2, #0
   17ad8:	beq	17be4 <flatcc_json_printer_int32_field@@Base+0x178>
   17adc:	ldr	r5, [sp, #28]
   17ae0:	ldr	r2, [r1, #16]
   17ae4:	add	ip, r2, #1
   17ae8:	str	ip, [r1, #16]
   17aec:	cmp	r2, #0
   17af0:	beq	17b08 <flatcc_json_printer_int32_field@@Base+0x9c>
   17af4:	ldr	r2, [r0, #20]
   17af8:	add	r1, r2, #1
   17afc:	str	r1, [r0, #20]
   17b00:	mov	r1, #44	; 0x2c
   17b04:	strb	r1, [r2]
   17b08:	mov	r7, r3
   17b0c:	mov	r4, r0
   17b10:	ldrb	r3, [r0, #25]
   17b14:	cmp	r3, #0
   17b18:	bne	17bf8 <flatcc_json_printer_int32_field@@Base+0x18c>
   17b1c:	ldr	r2, [r0, #20]
   17b20:	ldr	r3, [r0, #16]
   17b24:	cmp	r2, r3
   17b28:	bcc	17b38 <flatcc_json_printer_int32_field@@Base+0xcc>
   17b2c:	ldr	r3, [r0, #44]	; 0x2c
   17b30:	mov	r1, #0
   17b34:	blx	r3
   17b38:	ldr	r3, [r4, #20]
   17b3c:	mov	r2, #34	; 0x22
   17b40:	strb	r2, [r3]
   17b44:	ldrb	r3, [r4, #26]
   17b48:	ldr	r0, [r4, #20]
   17b4c:	cmp	r3, #0
   17b50:	addeq	r0, r0, #1
   17b54:	str	r0, [r4, #20]
   17b58:	add	r3, r0, r6
   17b5c:	ldr	r2, [r4, #16]
   17b60:	cmp	r2, r3
   17b64:	bls	17c58 <flatcc_json_printer_int32_field@@Base+0x1ec>
   17b68:	mov	r2, r6
   17b6c:	mov	r1, r7
   17b70:	bl	12428 <memcpy@plt>
   17b74:	ldr	r3, [r4, #20]
   17b78:	add	r6, r3, r6
   17b7c:	str	r6, [r4, #20]
   17b80:	ldr	r3, [r4, #20]
   17b84:	mov	r2, #34	; 0x22
   17b88:	strb	r2, [r3]
   17b8c:	ldrb	r3, [r4, #26]
   17b90:	clz	r3, r3
   17b94:	lsr	r3, r3, #5
   17b98:	ldr	r1, [r4, #20]
   17b9c:	add	r2, r1, r3
   17ba0:	add	r2, r2, #1
   17ba4:	str	r2, [r4, #20]
   17ba8:	mov	r2, #58	; 0x3a
   17bac:	strb	r2, [r1, r3]
   17bb0:	ldr	r3, [r4, #20]
   17bb4:	mov	r2, #32
   17bb8:	strb	r2, [r3]
   17bbc:	ldrb	r3, [r4, #25]
   17bc0:	ldr	r1, [r4, #20]
   17bc4:	cmp	r3, #0
   17bc8:	addne	r1, r1, #1
   17bcc:	str	r1, [r4, #20]
   17bd0:	mov	r0, r5
   17bd4:	bl	149a4 <main@@Base+0xdc8>
   17bd8:	ldr	r3, [r4, #20]
   17bdc:	add	r0, r3, r0
   17be0:	str	r0, [r4, #20]
   17be4:	ldrd	r4, [sp]
   17be8:	ldrd	r6, [sp, #8]
   17bec:	ldr	r8, [sp, #16]
   17bf0:	add	sp, sp, #20
   17bf4:	pop	{pc}		; (ldr pc, [sp], #4)
   17bf8:	ldr	r3, [r0, #20]
   17bfc:	add	r2, r3, #1
   17c00:	str	r2, [r0, #20]
   17c04:	mov	r2, #10
   17c08:	strb	r2, [r3]
   17c0c:	ldrb	r3, [r0, #25]
   17c10:	ldr	r8, [r0, #32]
   17c14:	mul	r8, r8, r3
   17c18:	ldr	r0, [r0, #20]
   17c1c:	add	r3, r0, r8
   17c20:	ldr	r2, [r4, #16]
   17c24:	cmp	r2, r3
   17c28:	bcs	17c3c <flatcc_json_printer_int32_field@@Base+0x1d0>
   17c2c:	mov	r1, r8
   17c30:	mov	r0, r4
   17c34:	bl	15218 <main@@Base+0x163c>
   17c38:	b	17b38 <flatcc_json_printer_int32_field@@Base+0xcc>
   17c3c:	mov	r2, r8
   17c40:	mov	r1, #32
   17c44:	bl	124c4 <memset@plt>
   17c48:	ldr	r3, [r4, #20]
   17c4c:	add	r8, r3, r8
   17c50:	str	r8, [r4, #20]
   17c54:	b	17b38 <flatcc_json_printer_int32_field@@Base+0xcc>
   17c58:	mov	r2, r6
   17c5c:	mov	r1, r7
   17c60:	mov	r0, r4
   17c64:	bl	15108 <main@@Base+0x152c>
   17c68:	b	17b80 <flatcc_json_printer_int32_field@@Base+0x114>

00017c6c <flatcc_json_printer_int64_field@@Base>:
   17c6c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17c70:	strd	r6, [sp, #8]
   17c74:	strd	r8, [sp, #16]
   17c78:	str	sl, [sp, #24]
   17c7c:	str	lr, [sp, #28]
   17c80:	ldr	r5, [sp, #32]
   17c84:	add	r2, r2, #2
   17c88:	lsl	r2, r2, #1
   17c8c:	ldr	ip, [r1, #8]
   17c90:	cmp	r2, ip
   17c94:	bge	17cd8 <flatcc_json_printer_int64_field@@Base+0x6c>
   17c98:	ldr	ip, [r1, #4]
   17c9c:	ldrh	r2, [ip, r2]
   17ca0:	cmp	r2, #0
   17ca4:	beq	17cd8 <flatcc_json_printer_int64_field@@Base+0x6c>
   17ca8:	ldr	ip, [r1]
   17cac:	cmn	ip, r2
   17cb0:	beq	17cd8 <flatcc_json_printer_int64_field@@Base+0x6c>
   17cb4:	ldrd	r6, [ip, r2]
   17cb8:	ldrd	r8, [sp, #40]	; 0x28
   17cbc:	cmp	r9, r7
   17cc0:	cmpeq	r8, r6
   17cc4:	bne	17ce8 <flatcc_json_printer_int64_field@@Base+0x7c>
   17cc8:	ldrb	r2, [r0, #28]
   17ccc:	cmp	r2, #0
   17cd0:	beq	17ce8 <flatcc_json_printer_int64_field@@Base+0x7c>
   17cd4:	b	17df0 <flatcc_json_printer_int64_field@@Base+0x184>
   17cd8:	ldrb	r2, [r0, #29]
   17cdc:	cmp	r2, #0
   17ce0:	beq	17df0 <flatcc_json_printer_int64_field@@Base+0x184>
   17ce4:	ldrd	r6, [sp, #40]	; 0x28
   17ce8:	ldr	r2, [r1, #16]
   17cec:	add	ip, r2, #1
   17cf0:	str	ip, [r1, #16]
   17cf4:	cmp	r2, #0
   17cf8:	beq	17d10 <flatcc_json_printer_int64_field@@Base+0xa4>
   17cfc:	ldr	r2, [r0, #20]
   17d00:	add	r1, r2, #1
   17d04:	str	r1, [r0, #20]
   17d08:	mov	r1, #44	; 0x2c
   17d0c:	strb	r1, [r2]
   17d10:	mov	r8, r3
   17d14:	mov	r4, r0
   17d18:	ldrb	r3, [r0, #25]
   17d1c:	cmp	r3, #0
   17d20:	bne	17e08 <flatcc_json_printer_int64_field@@Base+0x19c>
   17d24:	ldr	r2, [r0, #20]
   17d28:	ldr	r3, [r0, #16]
   17d2c:	cmp	r2, r3
   17d30:	bcc	17d40 <flatcc_json_printer_int64_field@@Base+0xd4>
   17d34:	ldr	r3, [r0, #44]	; 0x2c
   17d38:	mov	r1, #0
   17d3c:	blx	r3
   17d40:	ldr	r3, [r4, #20]
   17d44:	mov	r2, #34	; 0x22
   17d48:	strb	r2, [r3]
   17d4c:	ldrb	r3, [r4, #26]
   17d50:	ldr	r0, [r4, #20]
   17d54:	cmp	r3, #0
   17d58:	addeq	r0, r0, #1
   17d5c:	str	r0, [r4, #20]
   17d60:	add	r3, r0, r5
   17d64:	ldr	r2, [r4, #16]
   17d68:	cmp	r2, r3
   17d6c:	bls	17e68 <flatcc_json_printer_int64_field@@Base+0x1fc>
   17d70:	mov	r2, r5
   17d74:	mov	r1, r8
   17d78:	bl	12428 <memcpy@plt>
   17d7c:	ldr	r3, [r4, #20]
   17d80:	add	r5, r3, r5
   17d84:	str	r5, [r4, #20]
   17d88:	ldr	r3, [r4, #20]
   17d8c:	mov	r2, #34	; 0x22
   17d90:	strb	r2, [r3]
   17d94:	ldrb	r3, [r4, #26]
   17d98:	clz	r3, r3
   17d9c:	lsr	r3, r3, #5
   17da0:	ldr	r1, [r4, #20]
   17da4:	add	r2, r1, r3
   17da8:	add	r2, r2, #1
   17dac:	str	r2, [r4, #20]
   17db0:	mov	r2, #58	; 0x3a
   17db4:	strb	r2, [r1, r3]
   17db8:	ldr	r3, [r4, #20]
   17dbc:	mov	r2, #32
   17dc0:	strb	r2, [r3]
   17dc4:	ldrb	r3, [r4, #25]
   17dc8:	ldr	r2, [r4, #20]
   17dcc:	cmp	r3, #0
   17dd0:	addne	r2, r2, #1
   17dd4:	str	r2, [r4, #20]
   17dd8:	mov	r0, r6
   17ddc:	mov	r1, r7
   17de0:	bl	149dc <main@@Base+0xe00>
   17de4:	ldr	r3, [r4, #20]
   17de8:	add	r0, r3, r0
   17dec:	str	r0, [r4, #20]
   17df0:	ldrd	r4, [sp]
   17df4:	ldrd	r6, [sp, #8]
   17df8:	ldrd	r8, [sp, #16]
   17dfc:	ldr	sl, [sp, #24]
   17e00:	add	sp, sp, #28
   17e04:	pop	{pc}		; (ldr pc, [sp], #4)
   17e08:	ldr	r3, [r0, #20]
   17e0c:	add	r2, r3, #1
   17e10:	str	r2, [r0, #20]
   17e14:	mov	r2, #10
   17e18:	strb	r2, [r3]
   17e1c:	ldrb	r3, [r0, #25]
   17e20:	ldr	r9, [r0, #32]
   17e24:	mul	r9, r9, r3
   17e28:	ldr	r0, [r0, #20]
   17e2c:	add	r3, r0, r9
   17e30:	ldr	r2, [r4, #16]
   17e34:	cmp	r2, r3
   17e38:	bcs	17e4c <flatcc_json_printer_int64_field@@Base+0x1e0>
   17e3c:	mov	r1, r9
   17e40:	mov	r0, r4
   17e44:	bl	15218 <main@@Base+0x163c>
   17e48:	b	17d40 <flatcc_json_printer_int64_field@@Base+0xd4>
   17e4c:	mov	r2, r9
   17e50:	mov	r1, #32
   17e54:	bl	124c4 <memset@plt>
   17e58:	ldr	r3, [r4, #20]
   17e5c:	add	r9, r3, r9
   17e60:	str	r9, [r4, #20]
   17e64:	b	17d40 <flatcc_json_printer_int64_field@@Base+0xd4>
   17e68:	mov	r2, r5
   17e6c:	mov	r1, r8
   17e70:	mov	r0, r4
   17e74:	bl	15108 <main@@Base+0x152c>
   17e78:	b	17d88 <flatcc_json_printer_int64_field@@Base+0x11c>

00017e7c <flatcc_json_printer_bool_field@@Base>:
   17e7c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17e80:	strd	r6, [sp, #8]
   17e84:	str	r8, [sp, #16]
   17e88:	str	lr, [sp, #20]
   17e8c:	ldr	r6, [sp, #24]
   17e90:	ldrb	lr, [sp, #28]
   17e94:	add	r2, r2, #2
   17e98:	lsl	r2, r2, #1
   17e9c:	ldr	ip, [r1, #8]
   17ea0:	cmp	r2, ip
   17ea4:	bge	17ee0 <flatcc_json_printer_bool_field@@Base+0x64>
   17ea8:	ldr	ip, [r1, #4]
   17eac:	ldrh	r2, [ip, r2]
   17eb0:	cmp	r2, #0
   17eb4:	beq	17ee0 <flatcc_json_printer_bool_field@@Base+0x64>
   17eb8:	ldr	ip, [r1]
   17ebc:	cmn	ip, r2
   17ec0:	beq	17ee0 <flatcc_json_printer_bool_field@@Base+0x64>
   17ec4:	ldrb	r5, [ip, r2]
   17ec8:	cmp	lr, r5
   17ecc:	bne	17ef0 <flatcc_json_printer_bool_field@@Base+0x74>
   17ed0:	ldrb	r2, [r0, #28]
   17ed4:	cmp	r2, #0
   17ed8:	beq	17ef0 <flatcc_json_printer_bool_field@@Base+0x74>
   17edc:	b	17ff4 <flatcc_json_printer_bool_field@@Base+0x178>
   17ee0:	ldrb	r2, [r0, #29]
   17ee4:	cmp	r2, #0
   17ee8:	beq	17ff4 <flatcc_json_printer_bool_field@@Base+0x178>
   17eec:	mov	r5, lr
   17ef0:	ldr	r2, [r1, #16]
   17ef4:	add	ip, r2, #1
   17ef8:	str	ip, [r1, #16]
   17efc:	cmp	r2, #0
   17f00:	beq	17f18 <flatcc_json_printer_bool_field@@Base+0x9c>
   17f04:	ldr	r2, [r0, #20]
   17f08:	add	r1, r2, #1
   17f0c:	str	r1, [r0, #20]
   17f10:	mov	r1, #44	; 0x2c
   17f14:	strb	r1, [r2]
   17f18:	mov	r7, r3
   17f1c:	mov	r4, r0
   17f20:	ldrb	r3, [r0, #25]
   17f24:	cmp	r3, #0
   17f28:	bne	18008 <flatcc_json_printer_bool_field@@Base+0x18c>
   17f2c:	ldr	r2, [r0, #20]
   17f30:	ldr	r3, [r0, #16]
   17f34:	cmp	r2, r3
   17f38:	bcc	17f48 <flatcc_json_printer_bool_field@@Base+0xcc>
   17f3c:	ldr	r3, [r0, #44]	; 0x2c
   17f40:	mov	r1, #0
   17f44:	blx	r3
   17f48:	ldr	r3, [r4, #20]
   17f4c:	mov	r2, #34	; 0x22
   17f50:	strb	r2, [r3]
   17f54:	ldrb	r3, [r4, #26]
   17f58:	ldr	r0, [r4, #20]
   17f5c:	cmp	r3, #0
   17f60:	addeq	r0, r0, #1
   17f64:	str	r0, [r4, #20]
   17f68:	add	r3, r0, r6
   17f6c:	ldr	r2, [r4, #16]
   17f70:	cmp	r2, r3
   17f74:	bls	18068 <flatcc_json_printer_bool_field@@Base+0x1ec>
   17f78:	mov	r2, r6
   17f7c:	mov	r1, r7
   17f80:	bl	12428 <memcpy@plt>
   17f84:	ldr	r3, [r4, #20]
   17f88:	add	r6, r3, r6
   17f8c:	str	r6, [r4, #20]
   17f90:	ldr	r3, [r4, #20]
   17f94:	mov	r2, #34	; 0x22
   17f98:	strb	r2, [r3]
   17f9c:	ldrb	r3, [r4, #26]
   17fa0:	clz	r3, r3
   17fa4:	lsr	r3, r3, #5
   17fa8:	ldr	r1, [r4, #20]
   17fac:	add	r2, r1, r3
   17fb0:	add	r2, r2, #1
   17fb4:	str	r2, [r4, #20]
   17fb8:	mov	r2, #58	; 0x3a
   17fbc:	strb	r2, [r1, r3]
   17fc0:	ldr	r3, [r4, #20]
   17fc4:	mov	r2, #32
   17fc8:	strb	r2, [r3]
   17fcc:	ldrb	r3, [r4, #25]
   17fd0:	ldr	r1, [r4, #20]
   17fd4:	cmp	r3, #0
   17fd8:	addne	r1, r1, #1
   17fdc:	str	r1, [r4, #20]
   17fe0:	mov	r0, r5
   17fe4:	bl	151d0 <main@@Base+0x15f4>
   17fe8:	ldr	r3, [r4, #20]
   17fec:	add	r0, r3, r0
   17ff0:	str	r0, [r4, #20]
   17ff4:	ldrd	r4, [sp]
   17ff8:	ldrd	r6, [sp, #8]
   17ffc:	ldr	r8, [sp, #16]
   18000:	add	sp, sp, #20
   18004:	pop	{pc}		; (ldr pc, [sp], #4)
   18008:	ldr	r3, [r0, #20]
   1800c:	add	r2, r3, #1
   18010:	str	r2, [r0, #20]
   18014:	mov	r2, #10
   18018:	strb	r2, [r3]
   1801c:	ldrb	r3, [r0, #25]
   18020:	ldr	r8, [r0, #32]
   18024:	mul	r8, r8, r3
   18028:	ldr	r0, [r0, #20]
   1802c:	add	r3, r0, r8
   18030:	ldr	r2, [r4, #16]
   18034:	cmp	r2, r3
   18038:	bcs	1804c <flatcc_json_printer_bool_field@@Base+0x1d0>
   1803c:	mov	r1, r8
   18040:	mov	r0, r4
   18044:	bl	15218 <main@@Base+0x163c>
   18048:	b	17f48 <flatcc_json_printer_bool_field@@Base+0xcc>
   1804c:	mov	r2, r8
   18050:	mov	r1, #32
   18054:	bl	124c4 <memset@plt>
   18058:	ldr	r3, [r4, #20]
   1805c:	add	r8, r3, r8
   18060:	str	r8, [r4, #20]
   18064:	b	17f48 <flatcc_json_printer_bool_field@@Base+0xcc>
   18068:	mov	r2, r6
   1806c:	mov	r1, r7
   18070:	mov	r0, r4
   18074:	bl	15108 <main@@Base+0x152c>
   18078:	b	17f90 <flatcc_json_printer_bool_field@@Base+0x114>

0001807c <flatcc_json_printer_float_field@@Base>:
   1807c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18080:	strd	r6, [sp, #8]
   18084:	str	r8, [sp, #16]
   18088:	str	lr, [sp, #20]
   1808c:	vpush	{d8}
   18090:	ldr	r5, [sp, #32]
   18094:	add	r2, r2, #2
   18098:	lsl	r2, r2, #1
   1809c:	ldr	ip, [r1, #8]
   180a0:	cmp	r2, ip
   180a4:	bge	180e4 <flatcc_json_printer_float_field@@Base+0x68>
   180a8:	ldr	ip, [r1, #4]
   180ac:	ldrh	ip, [ip, r2]
   180b0:	cmp	ip, #0
   180b4:	beq	180e4 <flatcc_json_printer_float_field@@Base+0x68>
   180b8:	ldr	r2, [r1]
   180bc:	adds	r2, r2, ip
   180c0:	beq	180e4 <flatcc_json_printer_float_field@@Base+0x68>
   180c4:	vldr	s16, [r2]
   180c8:	vcmp.f32	s0, s16
   180cc:	vmrs	APSR_nzcv, fpscr
   180d0:	bne	180f4 <flatcc_json_printer_float_field@@Base+0x78>
   180d4:	ldrb	r2, [r0, #28]
   180d8:	cmp	r2, #0
   180dc:	beq	180f4 <flatcc_json_printer_float_field@@Base+0x78>
   180e0:	b	181f8 <flatcc_json_printer_float_field@@Base+0x17c>
   180e4:	ldrb	r2, [r0, #29]
   180e8:	cmp	r2, #0
   180ec:	beq	181f8 <flatcc_json_printer_float_field@@Base+0x17c>
   180f0:	vmov.f32	s16, s0
   180f4:	ldr	r2, [r1, #16]
   180f8:	add	ip, r2, #1
   180fc:	str	ip, [r1, #16]
   18100:	cmp	r2, #0
   18104:	beq	1811c <flatcc_json_printer_float_field@@Base+0xa0>
   18108:	ldr	r2, [r0, #20]
   1810c:	add	r1, r2, #1
   18110:	str	r1, [r0, #20]
   18114:	mov	r1, #44	; 0x2c
   18118:	strb	r1, [r2]
   1811c:	mov	r6, r3
   18120:	mov	r4, r0
   18124:	ldrb	r3, [r0, #25]
   18128:	cmp	r3, #0
   1812c:	bne	18210 <flatcc_json_printer_float_field@@Base+0x194>
   18130:	ldr	r2, [r0, #20]
   18134:	ldr	r3, [r0, #16]
   18138:	cmp	r2, r3
   1813c:	bcc	1814c <flatcc_json_printer_float_field@@Base+0xd0>
   18140:	ldr	r3, [r0, #44]	; 0x2c
   18144:	mov	r1, #0
   18148:	blx	r3
   1814c:	ldr	r3, [r4, #20]
   18150:	mov	r2, #34	; 0x22
   18154:	strb	r2, [r3]
   18158:	ldrb	r3, [r4, #26]
   1815c:	ldr	r0, [r4, #20]
   18160:	cmp	r3, #0
   18164:	addeq	r0, r0, #1
   18168:	str	r0, [r4, #20]
   1816c:	add	r3, r0, r5
   18170:	ldr	r2, [r4, #16]
   18174:	cmp	r2, r3
   18178:	bls	18270 <flatcc_json_printer_float_field@@Base+0x1f4>
   1817c:	mov	r2, r5
   18180:	mov	r1, r6
   18184:	bl	12428 <memcpy@plt>
   18188:	ldr	r3, [r4, #20]
   1818c:	add	r5, r3, r5
   18190:	str	r5, [r4, #20]
   18194:	ldr	r3, [r4, #20]
   18198:	mov	r2, #34	; 0x22
   1819c:	strb	r2, [r3]
   181a0:	ldrb	r3, [r4, #26]
   181a4:	clz	r3, r3
   181a8:	lsr	r3, r3, #5
   181ac:	ldr	r1, [r4, #20]
   181b0:	add	r2, r1, r3
   181b4:	add	r2, r2, #1
   181b8:	str	r2, [r4, #20]
   181bc:	mov	r2, #58	; 0x3a
   181c0:	strb	r2, [r1, r3]
   181c4:	ldr	r3, [r4, #20]
   181c8:	mov	r2, #32
   181cc:	strb	r2, [r3]
   181d0:	ldrb	r3, [r4, #25]
   181d4:	ldr	r0, [r4, #20]
   181d8:	cmp	r3, #0
   181dc:	addne	r0, r0, #1
   181e0:	str	r0, [r4, #20]
   181e4:	vcvt.f64.f32	d0, s16
   181e8:	bl	1596c <main@@Base+0x1d90>
   181ec:	ldr	r3, [r4, #20]
   181f0:	add	r0, r3, r0
   181f4:	str	r0, [r4, #20]
   181f8:	vpop	{d8}
   181fc:	ldrd	r4, [sp]
   18200:	ldrd	r6, [sp, #8]
   18204:	ldr	r8, [sp, #16]
   18208:	add	sp, sp, #20
   1820c:	pop	{pc}		; (ldr pc, [sp], #4)
   18210:	ldr	r3, [r0, #20]
   18214:	add	r2, r3, #1
   18218:	str	r2, [r0, #20]
   1821c:	mov	r2, #10
   18220:	strb	r2, [r3]
   18224:	ldrb	r3, [r0, #25]
   18228:	ldr	r7, [r0, #32]
   1822c:	mul	r7, r7, r3
   18230:	ldr	r0, [r0, #20]
   18234:	add	r3, r0, r7
   18238:	ldr	r2, [r4, #16]
   1823c:	cmp	r2, r3
   18240:	bcs	18254 <flatcc_json_printer_float_field@@Base+0x1d8>
   18244:	mov	r1, r7
   18248:	mov	r0, r4
   1824c:	bl	15218 <main@@Base+0x163c>
   18250:	b	1814c <flatcc_json_printer_float_field@@Base+0xd0>
   18254:	mov	r2, r7
   18258:	mov	r1, #32
   1825c:	bl	124c4 <memset@plt>
   18260:	ldr	r3, [r4, #20]
   18264:	add	r7, r3, r7
   18268:	str	r7, [r4, #20]
   1826c:	b	1814c <flatcc_json_printer_float_field@@Base+0xd0>
   18270:	mov	r2, r5
   18274:	mov	r1, r6
   18278:	mov	r0, r4
   1827c:	bl	15108 <main@@Base+0x152c>
   18280:	b	18194 <flatcc_json_printer_float_field@@Base+0x118>

00018284 <flatcc_json_printer_double_field@@Base>:
   18284:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18288:	strd	r6, [sp, #8]
   1828c:	str	r8, [sp, #16]
   18290:	str	lr, [sp, #20]
   18294:	vpush	{d8}
   18298:	ldr	r5, [sp, #32]
   1829c:	add	r2, r2, #2
   182a0:	lsl	r2, r2, #1
   182a4:	ldr	ip, [r1, #8]
   182a8:	cmp	r2, ip
   182ac:	bge	182ec <flatcc_json_printer_double_field@@Base+0x68>
   182b0:	ldr	ip, [r1, #4]
   182b4:	ldrh	ip, [ip, r2]
   182b8:	cmp	ip, #0
   182bc:	beq	182ec <flatcc_json_printer_double_field@@Base+0x68>
   182c0:	ldr	r2, [r1]
   182c4:	adds	r2, r2, ip
   182c8:	beq	182ec <flatcc_json_printer_double_field@@Base+0x68>
   182cc:	vldr	d8, [r2]
   182d0:	vcmp.f64	d0, d8
   182d4:	vmrs	APSR_nzcv, fpscr
   182d8:	bne	182fc <flatcc_json_printer_double_field@@Base+0x78>
   182dc:	ldrb	r2, [r0, #28]
   182e0:	cmp	r2, #0
   182e4:	beq	182fc <flatcc_json_printer_double_field@@Base+0x78>
   182e8:	b	18400 <flatcc_json_printer_double_field@@Base+0x17c>
   182ec:	ldrb	r2, [r0, #29]
   182f0:	cmp	r2, #0
   182f4:	beq	18400 <flatcc_json_printer_double_field@@Base+0x17c>
   182f8:	vmov.f64	d8, d0
   182fc:	ldr	r2, [r1, #16]
   18300:	add	ip, r2, #1
   18304:	str	ip, [r1, #16]
   18308:	cmp	r2, #0
   1830c:	beq	18324 <flatcc_json_printer_double_field@@Base+0xa0>
   18310:	ldr	r2, [r0, #20]
   18314:	add	r1, r2, #1
   18318:	str	r1, [r0, #20]
   1831c:	mov	r1, #44	; 0x2c
   18320:	strb	r1, [r2]
   18324:	mov	r6, r3
   18328:	mov	r4, r0
   1832c:	ldrb	r3, [r0, #25]
   18330:	cmp	r3, #0
   18334:	bne	18418 <flatcc_json_printer_double_field@@Base+0x194>
   18338:	ldr	r2, [r0, #20]
   1833c:	ldr	r3, [r0, #16]
   18340:	cmp	r2, r3
   18344:	bcc	18354 <flatcc_json_printer_double_field@@Base+0xd0>
   18348:	ldr	r3, [r0, #44]	; 0x2c
   1834c:	mov	r1, #0
   18350:	blx	r3
   18354:	ldr	r3, [r4, #20]
   18358:	mov	r2, #34	; 0x22
   1835c:	strb	r2, [r3]
   18360:	ldrb	r3, [r4, #26]
   18364:	ldr	r0, [r4, #20]
   18368:	cmp	r3, #0
   1836c:	addeq	r0, r0, #1
   18370:	str	r0, [r4, #20]
   18374:	add	r3, r0, r5
   18378:	ldr	r2, [r4, #16]
   1837c:	cmp	r2, r3
   18380:	bls	18478 <flatcc_json_printer_double_field@@Base+0x1f4>
   18384:	mov	r2, r5
   18388:	mov	r1, r6
   1838c:	bl	12428 <memcpy@plt>
   18390:	ldr	r3, [r4, #20]
   18394:	add	r5, r3, r5
   18398:	str	r5, [r4, #20]
   1839c:	ldr	r3, [r4, #20]
   183a0:	mov	r2, #34	; 0x22
   183a4:	strb	r2, [r3]
   183a8:	ldrb	r3, [r4, #26]
   183ac:	clz	r3, r3
   183b0:	lsr	r3, r3, #5
   183b4:	ldr	r1, [r4, #20]
   183b8:	add	r2, r1, r3
   183bc:	add	r2, r2, #1
   183c0:	str	r2, [r4, #20]
   183c4:	mov	r2, #58	; 0x3a
   183c8:	strb	r2, [r1, r3]
   183cc:	ldr	r3, [r4, #20]
   183d0:	mov	r2, #32
   183d4:	strb	r2, [r3]
   183d8:	ldrb	r3, [r4, #25]
   183dc:	ldr	r0, [r4, #20]
   183e0:	cmp	r3, #0
   183e4:	addne	r0, r0, #1
   183e8:	str	r0, [r4, #20]
   183ec:	vmov.f64	d0, d8
   183f0:	bl	1596c <main@@Base+0x1d90>
   183f4:	ldr	r3, [r4, #20]
   183f8:	add	r0, r3, r0
   183fc:	str	r0, [r4, #20]
   18400:	vpop	{d8}
   18404:	ldrd	r4, [sp]
   18408:	ldrd	r6, [sp, #8]
   1840c:	ldr	r8, [sp, #16]
   18410:	add	sp, sp, #20
   18414:	pop	{pc}		; (ldr pc, [sp], #4)
   18418:	ldr	r3, [r0, #20]
   1841c:	add	r2, r3, #1
   18420:	str	r2, [r0, #20]
   18424:	mov	r2, #10
   18428:	strb	r2, [r3]
   1842c:	ldrb	r3, [r0, #25]
   18430:	ldr	r7, [r0, #32]
   18434:	mul	r7, r7, r3
   18438:	ldr	r0, [r0, #20]
   1843c:	add	r3, r0, r7
   18440:	ldr	r2, [r4, #16]
   18444:	cmp	r2, r3
   18448:	bcs	1845c <flatcc_json_printer_double_field@@Base+0x1d8>
   1844c:	mov	r1, r7
   18450:	mov	r0, r4
   18454:	bl	15218 <main@@Base+0x163c>
   18458:	b	18354 <flatcc_json_printer_double_field@@Base+0xd0>
   1845c:	mov	r2, r7
   18460:	mov	r1, #32
   18464:	bl	124c4 <memset@plt>
   18468:	ldr	r3, [r4, #20]
   1846c:	add	r7, r3, r7
   18470:	str	r7, [r4, #20]
   18474:	b	18354 <flatcc_json_printer_double_field@@Base+0xd0>
   18478:	mov	r2, r5
   1847c:	mov	r1, r6
   18480:	mov	r0, r4
   18484:	bl	15108 <main@@Base+0x152c>
   18488:	b	1839c <flatcc_json_printer_double_field@@Base+0x118>

0001848c <flatcc_json_printer_uint8_enum_field@@Base>:
   1848c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18490:	strd	r6, [sp, #8]
   18494:	str	r8, [sp, #16]
   18498:	str	lr, [sp, #20]
   1849c:	ldr	r6, [sp, #24]
   184a0:	ldrb	lr, [sp, #28]
   184a4:	add	r2, r2, #2
   184a8:	lsl	r2, r2, #1
   184ac:	ldr	ip, [r1, #8]
   184b0:	cmp	r2, ip
   184b4:	bge	184f0 <flatcc_json_printer_uint8_enum_field@@Base+0x64>
   184b8:	ldr	ip, [r1, #4]
   184bc:	ldrh	r2, [ip, r2]
   184c0:	cmp	r2, #0
   184c4:	beq	184f0 <flatcc_json_printer_uint8_enum_field@@Base+0x64>
   184c8:	ldr	ip, [r1]
   184cc:	cmn	ip, r2
   184d0:	beq	184f0 <flatcc_json_printer_uint8_enum_field@@Base+0x64>
   184d4:	ldrb	r5, [ip, r2]
   184d8:	cmp	lr, r5
   184dc:	bne	18500 <flatcc_json_printer_uint8_enum_field@@Base+0x74>
   184e0:	ldrb	r2, [r0, #28]
   184e4:	cmp	r2, #0
   184e8:	beq	18500 <flatcc_json_printer_uint8_enum_field@@Base+0x74>
   184ec:	b	1860c <flatcc_json_printer_uint8_enum_field@@Base+0x180>
   184f0:	ldrb	r2, [r0, #29]
   184f4:	cmp	r2, #0
   184f8:	beq	1860c <flatcc_json_printer_uint8_enum_field@@Base+0x180>
   184fc:	mov	r5, lr
   18500:	ldr	r2, [r1, #16]
   18504:	add	ip, r2, #1
   18508:	str	ip, [r1, #16]
   1850c:	cmp	r2, #0
   18510:	beq	18528 <flatcc_json_printer_uint8_enum_field@@Base+0x9c>
   18514:	ldr	r2, [r0, #20]
   18518:	add	r1, r2, #1
   1851c:	str	r1, [r0, #20]
   18520:	mov	r1, #44	; 0x2c
   18524:	strb	r1, [r2]
   18528:	mov	r7, r3
   1852c:	mov	r4, r0
   18530:	ldrb	r3, [r0, #25]
   18534:	cmp	r3, #0
   18538:	bne	18620 <flatcc_json_printer_uint8_enum_field@@Base+0x194>
   1853c:	ldr	r2, [r0, #20]
   18540:	ldr	r3, [r0, #16]
   18544:	cmp	r2, r3
   18548:	bcc	18558 <flatcc_json_printer_uint8_enum_field@@Base+0xcc>
   1854c:	ldr	r3, [r0, #44]	; 0x2c
   18550:	mov	r1, #0
   18554:	blx	r3
   18558:	ldr	r3, [r4, #20]
   1855c:	mov	r2, #34	; 0x22
   18560:	strb	r2, [r3]
   18564:	ldrb	r3, [r4, #26]
   18568:	ldr	r0, [r4, #20]
   1856c:	cmp	r3, #0
   18570:	addeq	r0, r0, #1
   18574:	str	r0, [r4, #20]
   18578:	add	r3, r0, r6
   1857c:	ldr	r2, [r4, #16]
   18580:	cmp	r2, r3
   18584:	bls	18680 <flatcc_json_printer_uint8_enum_field@@Base+0x1f4>
   18588:	mov	r2, r6
   1858c:	mov	r1, r7
   18590:	bl	12428 <memcpy@plt>
   18594:	ldr	r3, [r4, #20]
   18598:	add	r6, r3, r6
   1859c:	str	r6, [r4, #20]
   185a0:	ldr	r3, [r4, #20]
   185a4:	mov	r2, #34	; 0x22
   185a8:	strb	r2, [r3]
   185ac:	ldrb	r3, [r4, #26]
   185b0:	clz	r3, r3
   185b4:	lsr	r3, r3, #5
   185b8:	ldr	r1, [r4, #20]
   185bc:	add	r2, r1, r3
   185c0:	add	r2, r2, #1
   185c4:	str	r2, [r4, #20]
   185c8:	mov	r2, #58	; 0x3a
   185cc:	strb	r2, [r1, r3]
   185d0:	ldr	r3, [r4, #20]
   185d4:	mov	r2, #32
   185d8:	strb	r2, [r3]
   185dc:	ldrb	r3, [r4, #25]
   185e0:	ldr	r1, [r4, #20]
   185e4:	cmp	r3, #0
   185e8:	addne	r1, r1, #1
   185ec:	str	r1, [r4, #20]
   185f0:	ldrb	r3, [r4, #27]
   185f4:	cmp	r3, #0
   185f8:	bne	18694 <flatcc_json_printer_uint8_enum_field@@Base+0x208>
   185fc:	mov	r1, r5
   18600:	mov	r0, r4
   18604:	ldr	r3, [sp, #32]
   18608:	blx	r3
   1860c:	ldrd	r4, [sp]
   18610:	ldrd	r6, [sp, #8]
   18614:	ldr	r8, [sp, #16]
   18618:	add	sp, sp, #20
   1861c:	pop	{pc}		; (ldr pc, [sp], #4)
   18620:	ldr	r3, [r0, #20]
   18624:	add	r2, r3, #1
   18628:	str	r2, [r0, #20]
   1862c:	mov	r2, #10
   18630:	strb	r2, [r3]
   18634:	ldrb	r3, [r0, #25]
   18638:	ldr	r8, [r0, #32]
   1863c:	mul	r8, r8, r3
   18640:	ldr	r0, [r0, #20]
   18644:	add	r3, r0, r8
   18648:	ldr	r2, [r4, #16]
   1864c:	cmp	r2, r3
   18650:	bcs	18664 <flatcc_json_printer_uint8_enum_field@@Base+0x1d8>
   18654:	mov	r1, r8
   18658:	mov	r0, r4
   1865c:	bl	15218 <main@@Base+0x163c>
   18660:	b	18558 <flatcc_json_printer_uint8_enum_field@@Base+0xcc>
   18664:	mov	r2, r8
   18668:	mov	r1, #32
   1866c:	bl	124c4 <memset@plt>
   18670:	ldr	r3, [r4, #20]
   18674:	add	r8, r3, r8
   18678:	str	r8, [r4, #20]
   1867c:	b	18558 <flatcc_json_printer_uint8_enum_field@@Base+0xcc>
   18680:	mov	r2, r6
   18684:	mov	r1, r7
   18688:	mov	r0, r4
   1868c:	bl	15108 <main@@Base+0x152c>
   18690:	b	185a0 <flatcc_json_printer_uint8_enum_field@@Base+0x114>
   18694:	mov	r0, r5
   18698:	bl	13c90 <main@@Base+0xb4>
   1869c:	ldr	r3, [r4, #20]
   186a0:	add	r0, r3, r0
   186a4:	str	r0, [r4, #20]
   186a8:	b	1860c <flatcc_json_printer_uint8_enum_field@@Base+0x180>

000186ac <flatcc_json_printer_uint16_enum_field@@Base>:
   186ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   186b0:	strd	r6, [sp, #8]
   186b4:	str	r8, [sp, #16]
   186b8:	str	lr, [sp, #20]
   186bc:	ldr	r6, [sp, #24]
   186c0:	ldrh	lr, [sp, #28]
   186c4:	add	r2, r2, #2
   186c8:	lsl	r2, r2, #1
   186cc:	ldr	ip, [r1, #8]
   186d0:	cmp	r2, ip
   186d4:	bge	18710 <flatcc_json_printer_uint16_enum_field@@Base+0x64>
   186d8:	ldr	ip, [r1, #4]
   186dc:	ldrh	r2, [ip, r2]
   186e0:	cmp	r2, #0
   186e4:	beq	18710 <flatcc_json_printer_uint16_enum_field@@Base+0x64>
   186e8:	ldr	ip, [r1]
   186ec:	cmn	ip, r2
   186f0:	beq	18710 <flatcc_json_printer_uint16_enum_field@@Base+0x64>
   186f4:	ldrh	r5, [ip, r2]
   186f8:	cmp	lr, r5
   186fc:	bne	18720 <flatcc_json_printer_uint16_enum_field@@Base+0x74>
   18700:	ldrb	r2, [r0, #28]
   18704:	cmp	r2, #0
   18708:	beq	18720 <flatcc_json_printer_uint16_enum_field@@Base+0x74>
   1870c:	b	1882c <flatcc_json_printer_uint16_enum_field@@Base+0x180>
   18710:	ldrb	r2, [r0, #29]
   18714:	cmp	r2, #0
   18718:	beq	1882c <flatcc_json_printer_uint16_enum_field@@Base+0x180>
   1871c:	mov	r5, lr
   18720:	ldr	r2, [r1, #16]
   18724:	add	ip, r2, #1
   18728:	str	ip, [r1, #16]
   1872c:	cmp	r2, #0
   18730:	beq	18748 <flatcc_json_printer_uint16_enum_field@@Base+0x9c>
   18734:	ldr	r2, [r0, #20]
   18738:	add	r1, r2, #1
   1873c:	str	r1, [r0, #20]
   18740:	mov	r1, #44	; 0x2c
   18744:	strb	r1, [r2]
   18748:	mov	r7, r3
   1874c:	mov	r4, r0
   18750:	ldrb	r3, [r0, #25]
   18754:	cmp	r3, #0
   18758:	bne	18840 <flatcc_json_printer_uint16_enum_field@@Base+0x194>
   1875c:	ldr	r2, [r0, #20]
   18760:	ldr	r3, [r0, #16]
   18764:	cmp	r2, r3
   18768:	bcc	18778 <flatcc_json_printer_uint16_enum_field@@Base+0xcc>
   1876c:	ldr	r3, [r0, #44]	; 0x2c
   18770:	mov	r1, #0
   18774:	blx	r3
   18778:	ldr	r3, [r4, #20]
   1877c:	mov	r2, #34	; 0x22
   18780:	strb	r2, [r3]
   18784:	ldrb	r3, [r4, #26]
   18788:	ldr	r0, [r4, #20]
   1878c:	cmp	r3, #0
   18790:	addeq	r0, r0, #1
   18794:	str	r0, [r4, #20]
   18798:	add	r3, r0, r6
   1879c:	ldr	r2, [r4, #16]
   187a0:	cmp	r2, r3
   187a4:	bls	188a0 <flatcc_json_printer_uint16_enum_field@@Base+0x1f4>
   187a8:	mov	r2, r6
   187ac:	mov	r1, r7
   187b0:	bl	12428 <memcpy@plt>
   187b4:	ldr	r3, [r4, #20]
   187b8:	add	r6, r3, r6
   187bc:	str	r6, [r4, #20]
   187c0:	ldr	r3, [r4, #20]
   187c4:	mov	r2, #34	; 0x22
   187c8:	strb	r2, [r3]
   187cc:	ldrb	r3, [r4, #26]
   187d0:	clz	r3, r3
   187d4:	lsr	r3, r3, #5
   187d8:	ldr	r1, [r4, #20]
   187dc:	add	r2, r1, r3
   187e0:	add	r2, r2, #1
   187e4:	str	r2, [r4, #20]
   187e8:	mov	r2, #58	; 0x3a
   187ec:	strb	r2, [r1, r3]
   187f0:	ldr	r3, [r4, #20]
   187f4:	mov	r2, #32
   187f8:	strb	r2, [r3]
   187fc:	ldrb	r3, [r4, #25]
   18800:	ldr	r1, [r4, #20]
   18804:	cmp	r3, #0
   18808:	addne	r1, r1, #1
   1880c:	str	r1, [r4, #20]
   18810:	ldrb	r3, [r4, #27]
   18814:	cmp	r3, #0
   18818:	bne	188b4 <flatcc_json_printer_uint16_enum_field@@Base+0x208>
   1881c:	mov	r1, r5
   18820:	mov	r0, r4
   18824:	ldr	r3, [sp, #32]
   18828:	blx	r3
   1882c:	ldrd	r4, [sp]
   18830:	ldrd	r6, [sp, #8]
   18834:	ldr	r8, [sp, #16]
   18838:	add	sp, sp, #20
   1883c:	pop	{pc}		; (ldr pc, [sp], #4)
   18840:	ldr	r3, [r0, #20]
   18844:	add	r2, r3, #1
   18848:	str	r2, [r0, #20]
   1884c:	mov	r2, #10
   18850:	strb	r2, [r3]
   18854:	ldrb	r3, [r0, #25]
   18858:	ldr	r8, [r0, #32]
   1885c:	mul	r8, r8, r3
   18860:	ldr	r0, [r0, #20]
   18864:	add	r3, r0, r8
   18868:	ldr	r2, [r4, #16]
   1886c:	cmp	r2, r3
   18870:	bcs	18884 <flatcc_json_printer_uint16_enum_field@@Base+0x1d8>
   18874:	mov	r1, r8
   18878:	mov	r0, r4
   1887c:	bl	15218 <main@@Base+0x163c>
   18880:	b	18778 <flatcc_json_printer_uint16_enum_field@@Base+0xcc>
   18884:	mov	r2, r8
   18888:	mov	r1, #32
   1888c:	bl	124c4 <memset@plt>
   18890:	ldr	r3, [r4, #20]
   18894:	add	r8, r3, r8
   18898:	str	r8, [r4, #20]
   1889c:	b	18778 <flatcc_json_printer_uint16_enum_field@@Base+0xcc>
   188a0:	mov	r2, r6
   188a4:	mov	r1, r7
   188a8:	mov	r0, r4
   188ac:	bl	15108 <main@@Base+0x152c>
   188b0:	b	187c0 <flatcc_json_printer_uint16_enum_field@@Base+0x114>
   188b4:	mov	r0, r5
   188b8:	bl	13d50 <main@@Base+0x174>
   188bc:	ldr	r3, [r4, #20]
   188c0:	add	r0, r3, r0
   188c4:	str	r0, [r4, #20]
   188c8:	b	1882c <flatcc_json_printer_uint16_enum_field@@Base+0x180>

000188cc <flatcc_json_printer_uint32_enum_field@@Base>:
   188cc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   188d0:	strd	r6, [sp, #8]
   188d4:	str	r8, [sp, #16]
   188d8:	str	lr, [sp, #20]
   188dc:	ldr	r6, [sp, #24]
   188e0:	add	r2, r2, #2
   188e4:	lsl	r2, r2, #1
   188e8:	ldr	ip, [r1, #8]
   188ec:	cmp	r2, ip
   188f0:	bge	18930 <flatcc_json_printer_uint32_enum_field@@Base+0x64>
   188f4:	ldr	ip, [r1, #4]
   188f8:	ldrh	r2, [ip, r2]
   188fc:	cmp	r2, #0
   18900:	beq	18930 <flatcc_json_printer_uint32_enum_field@@Base+0x64>
   18904:	ldr	ip, [r1]
   18908:	cmn	ip, r2
   1890c:	beq	18930 <flatcc_json_printer_uint32_enum_field@@Base+0x64>
   18910:	ldr	r5, [ip, r2]
   18914:	ldr	r2, [sp, #28]
   18918:	cmp	r2, r5
   1891c:	bne	18940 <flatcc_json_printer_uint32_enum_field@@Base+0x74>
   18920:	ldrb	r2, [r0, #28]
   18924:	cmp	r2, #0
   18928:	beq	18940 <flatcc_json_printer_uint32_enum_field@@Base+0x74>
   1892c:	b	18a4c <flatcc_json_printer_uint32_enum_field@@Base+0x180>
   18930:	ldrb	r2, [r0, #29]
   18934:	cmp	r2, #0
   18938:	beq	18a4c <flatcc_json_printer_uint32_enum_field@@Base+0x180>
   1893c:	ldr	r5, [sp, #28]
   18940:	ldr	r2, [r1, #16]
   18944:	add	ip, r2, #1
   18948:	str	ip, [r1, #16]
   1894c:	cmp	r2, #0
   18950:	beq	18968 <flatcc_json_printer_uint32_enum_field@@Base+0x9c>
   18954:	ldr	r2, [r0, #20]
   18958:	add	r1, r2, #1
   1895c:	str	r1, [r0, #20]
   18960:	mov	r1, #44	; 0x2c
   18964:	strb	r1, [r2]
   18968:	mov	r7, r3
   1896c:	mov	r4, r0
   18970:	ldrb	r3, [r0, #25]
   18974:	cmp	r3, #0
   18978:	bne	18a60 <flatcc_json_printer_uint32_enum_field@@Base+0x194>
   1897c:	ldr	r2, [r0, #20]
   18980:	ldr	r3, [r0, #16]
   18984:	cmp	r2, r3
   18988:	bcc	18998 <flatcc_json_printer_uint32_enum_field@@Base+0xcc>
   1898c:	ldr	r3, [r0, #44]	; 0x2c
   18990:	mov	r1, #0
   18994:	blx	r3
   18998:	ldr	r3, [r4, #20]
   1899c:	mov	r2, #34	; 0x22
   189a0:	strb	r2, [r3]
   189a4:	ldrb	r3, [r4, #26]
   189a8:	ldr	r0, [r4, #20]
   189ac:	cmp	r3, #0
   189b0:	addeq	r0, r0, #1
   189b4:	str	r0, [r4, #20]
   189b8:	add	r3, r0, r6
   189bc:	ldr	r2, [r4, #16]
   189c0:	cmp	r2, r3
   189c4:	bls	18ac0 <flatcc_json_printer_uint32_enum_field@@Base+0x1f4>
   189c8:	mov	r2, r6
   189cc:	mov	r1, r7
   189d0:	bl	12428 <memcpy@plt>
   189d4:	ldr	r3, [r4, #20]
   189d8:	add	r6, r3, r6
   189dc:	str	r6, [r4, #20]
   189e0:	ldr	r3, [r4, #20]
   189e4:	mov	r2, #34	; 0x22
   189e8:	strb	r2, [r3]
   189ec:	ldrb	r3, [r4, #26]
   189f0:	clz	r3, r3
   189f4:	lsr	r3, r3, #5
   189f8:	ldr	r1, [r4, #20]
   189fc:	add	r2, r1, r3
   18a00:	add	r2, r2, #1
   18a04:	str	r2, [r4, #20]
   18a08:	mov	r2, #58	; 0x3a
   18a0c:	strb	r2, [r1, r3]
   18a10:	ldr	r3, [r4, #20]
   18a14:	mov	r2, #32
   18a18:	strb	r2, [r3]
   18a1c:	ldrb	r3, [r4, #25]
   18a20:	ldr	r1, [r4, #20]
   18a24:	cmp	r3, #0
   18a28:	addne	r1, r1, #1
   18a2c:	str	r1, [r4, #20]
   18a30:	ldrb	r3, [r4, #27]
   18a34:	cmp	r3, #0
   18a38:	bne	18ad4 <flatcc_json_printer_uint32_enum_field@@Base+0x208>
   18a3c:	mov	r1, r5
   18a40:	mov	r0, r4
   18a44:	ldr	r3, [sp, #32]
   18a48:	blx	r3
   18a4c:	ldrd	r4, [sp]
   18a50:	ldrd	r6, [sp, #8]
   18a54:	ldr	r8, [sp, #16]
   18a58:	add	sp, sp, #20
   18a5c:	pop	{pc}		; (ldr pc, [sp], #4)
   18a60:	ldr	r3, [r0, #20]
   18a64:	add	r2, r3, #1
   18a68:	str	r2, [r0, #20]
   18a6c:	mov	r2, #10
   18a70:	strb	r2, [r3]
   18a74:	ldrb	r3, [r0, #25]
   18a78:	ldr	r8, [r0, #32]
   18a7c:	mul	r8, r8, r3
   18a80:	ldr	r0, [r0, #20]
   18a84:	add	r3, r0, r8
   18a88:	ldr	r2, [r4, #16]
   18a8c:	cmp	r2, r3
   18a90:	bcs	18aa4 <flatcc_json_printer_uint32_enum_field@@Base+0x1d8>
   18a94:	mov	r1, r8
   18a98:	mov	r0, r4
   18a9c:	bl	15218 <main@@Base+0x163c>
   18aa0:	b	18998 <flatcc_json_printer_uint32_enum_field@@Base+0xcc>
   18aa4:	mov	r2, r8
   18aa8:	mov	r1, #32
   18aac:	bl	124c4 <memset@plt>
   18ab0:	ldr	r3, [r4, #20]
   18ab4:	add	r8, r3, r8
   18ab8:	str	r8, [r4, #20]
   18abc:	b	18998 <flatcc_json_printer_uint32_enum_field@@Base+0xcc>
   18ac0:	mov	r2, r6
   18ac4:	mov	r1, r7
   18ac8:	mov	r0, r4
   18acc:	bl	15108 <main@@Base+0x152c>
   18ad0:	b	189e0 <flatcc_json_printer_uint32_enum_field@@Base+0x114>
   18ad4:	mov	r0, r5
   18ad8:	bl	13ee4 <main@@Base+0x308>
   18adc:	ldr	r3, [r4, #20]
   18ae0:	add	r0, r3, r0
   18ae4:	str	r0, [r4, #20]
   18ae8:	b	18a4c <flatcc_json_printer_uint32_enum_field@@Base+0x180>

00018aec <flatcc_json_printer_uint64_enum_field@@Base>:
   18aec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18af0:	strd	r6, [sp, #8]
   18af4:	strd	r8, [sp, #16]
   18af8:	str	sl, [sp, #24]
   18afc:	str	lr, [sp, #28]
   18b00:	ldr	r5, [sp, #32]
   18b04:	add	r2, r2, #2
   18b08:	lsl	r2, r2, #1
   18b0c:	ldr	ip, [r1, #8]
   18b10:	cmp	r2, ip
   18b14:	bge	18b58 <flatcc_json_printer_uint64_enum_field@@Base+0x6c>
   18b18:	ldr	ip, [r1, #4]
   18b1c:	ldrh	r2, [ip, r2]
   18b20:	cmp	r2, #0
   18b24:	beq	18b58 <flatcc_json_printer_uint64_enum_field@@Base+0x6c>
   18b28:	ldr	ip, [r1]
   18b2c:	cmn	ip, r2
   18b30:	beq	18b58 <flatcc_json_printer_uint64_enum_field@@Base+0x6c>
   18b34:	ldrd	r6, [ip, r2]
   18b38:	ldrd	r8, [sp, #40]	; 0x28
   18b3c:	cmp	r9, r7
   18b40:	cmpeq	r8, r6
   18b44:	bne	18b68 <flatcc_json_printer_uint64_enum_field@@Base+0x7c>
   18b48:	ldrb	r2, [r0, #28]
   18b4c:	cmp	r2, #0
   18b50:	beq	18b68 <flatcc_json_printer_uint64_enum_field@@Base+0x7c>
   18b54:	b	18c78 <flatcc_json_printer_uint64_enum_field@@Base+0x18c>
   18b58:	ldrb	r2, [r0, #29]
   18b5c:	cmp	r2, #0
   18b60:	beq	18c78 <flatcc_json_printer_uint64_enum_field@@Base+0x18c>
   18b64:	ldrd	r6, [sp, #40]	; 0x28
   18b68:	ldr	r2, [r1, #16]
   18b6c:	add	ip, r2, #1
   18b70:	str	ip, [r1, #16]
   18b74:	cmp	r2, #0
   18b78:	beq	18b90 <flatcc_json_printer_uint64_enum_field@@Base+0xa4>
   18b7c:	ldr	r2, [r0, #20]
   18b80:	add	r1, r2, #1
   18b84:	str	r1, [r0, #20]
   18b88:	mov	r1, #44	; 0x2c
   18b8c:	strb	r1, [r2]
   18b90:	mov	r8, r3
   18b94:	mov	r4, r0
   18b98:	ldrb	r3, [r0, #25]
   18b9c:	cmp	r3, #0
   18ba0:	bne	18c90 <flatcc_json_printer_uint64_enum_field@@Base+0x1a4>
   18ba4:	ldr	r2, [r0, #20]
   18ba8:	ldr	r3, [r0, #16]
   18bac:	cmp	r2, r3
   18bb0:	bcc	18bc0 <flatcc_json_printer_uint64_enum_field@@Base+0xd4>
   18bb4:	ldr	r3, [r0, #44]	; 0x2c
   18bb8:	mov	r1, #0
   18bbc:	blx	r3
   18bc0:	ldr	r3, [r4, #20]
   18bc4:	mov	r2, #34	; 0x22
   18bc8:	strb	r2, [r3]
   18bcc:	ldrb	r3, [r4, #26]
   18bd0:	ldr	r0, [r4, #20]
   18bd4:	cmp	r3, #0
   18bd8:	addeq	r0, r0, #1
   18bdc:	str	r0, [r4, #20]
   18be0:	add	r3, r0, r5
   18be4:	ldr	r2, [r4, #16]
   18be8:	cmp	r2, r3
   18bec:	bls	18cf0 <flatcc_json_printer_uint64_enum_field@@Base+0x204>
   18bf0:	mov	r2, r5
   18bf4:	mov	r1, r8
   18bf8:	bl	12428 <memcpy@plt>
   18bfc:	ldr	r3, [r4, #20]
   18c00:	add	r5, r3, r5
   18c04:	str	r5, [r4, #20]
   18c08:	ldr	r3, [r4, #20]
   18c0c:	mov	r2, #34	; 0x22
   18c10:	strb	r2, [r3]
   18c14:	ldrb	r3, [r4, #26]
   18c18:	clz	r3, r3
   18c1c:	lsr	r3, r3, #5
   18c20:	ldr	r1, [r4, #20]
   18c24:	add	r2, r1, r3
   18c28:	add	r2, r2, #1
   18c2c:	str	r2, [r4, #20]
   18c30:	mov	r2, #58	; 0x3a
   18c34:	strb	r2, [r1, r3]
   18c38:	ldr	r3, [r4, #20]
   18c3c:	mov	r2, #32
   18c40:	strb	r2, [r3]
   18c44:	ldrb	r3, [r4, #25]
   18c48:	ldr	r2, [r4, #20]
   18c4c:	cmp	r3, #0
   18c50:	addne	r2, r2, #1
   18c54:	str	r2, [r4, #20]
   18c58:	ldrb	r3, [r4, #27]
   18c5c:	cmp	r3, #0
   18c60:	bne	18d04 <flatcc_json_printer_uint64_enum_field@@Base+0x218>
   18c64:	mov	r2, r6
   18c68:	mov	r3, r7
   18c6c:	mov	r0, r4
   18c70:	ldr	r1, [sp, #48]	; 0x30
   18c74:	blx	r1
   18c78:	ldrd	r4, [sp]
   18c7c:	ldrd	r6, [sp, #8]
   18c80:	ldrd	r8, [sp, #16]
   18c84:	ldr	sl, [sp, #24]
   18c88:	add	sp, sp, #28
   18c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   18c90:	ldr	r3, [r0, #20]
   18c94:	add	r2, r3, #1
   18c98:	str	r2, [r0, #20]
   18c9c:	mov	r2, #10
   18ca0:	strb	r2, [r3]
   18ca4:	ldrb	r3, [r0, #25]
   18ca8:	ldr	r9, [r0, #32]
   18cac:	mul	r9, r9, r3
   18cb0:	ldr	r0, [r0, #20]
   18cb4:	add	r3, r0, r9
   18cb8:	ldr	r2, [r4, #16]
   18cbc:	cmp	r2, r3
   18cc0:	bcs	18cd4 <flatcc_json_printer_uint64_enum_field@@Base+0x1e8>
   18cc4:	mov	r1, r9
   18cc8:	mov	r0, r4
   18ccc:	bl	15218 <main@@Base+0x163c>
   18cd0:	b	18bc0 <flatcc_json_printer_uint64_enum_field@@Base+0xd4>
   18cd4:	mov	r2, r9
   18cd8:	mov	r1, #32
   18cdc:	bl	124c4 <memset@plt>
   18ce0:	ldr	r3, [r4, #20]
   18ce4:	add	r9, r3, r9
   18ce8:	str	r9, [r4, #20]
   18cec:	b	18bc0 <flatcc_json_printer_uint64_enum_field@@Base+0xd4>
   18cf0:	mov	r2, r5
   18cf4:	mov	r1, r8
   18cf8:	mov	r0, r4
   18cfc:	bl	15108 <main@@Base+0x152c>
   18d00:	b	18c08 <flatcc_json_printer_uint64_enum_field@@Base+0x11c>
   18d04:	mov	r0, r6
   18d08:	mov	r1, r7
   18d0c:	bl	14248 <main@@Base+0x66c>
   18d10:	ldr	r3, [r4, #20]
   18d14:	add	r0, r3, r0
   18d18:	str	r0, [r4, #20]
   18d1c:	b	18c78 <flatcc_json_printer_uint64_enum_field@@Base+0x18c>

00018d20 <flatcc_json_printer_int8_enum_field@@Base>:
   18d20:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18d24:	strd	r6, [sp, #8]
   18d28:	str	r8, [sp, #16]
   18d2c:	str	lr, [sp, #20]
   18d30:	ldr	r6, [sp, #24]
   18d34:	ldrsb	lr, [sp, #28]
   18d38:	add	r2, r2, #2
   18d3c:	lsl	r2, r2, #1
   18d40:	ldr	ip, [r1, #8]
   18d44:	cmp	r2, ip
   18d48:	bge	18d84 <flatcc_json_printer_int8_enum_field@@Base+0x64>
   18d4c:	ldr	ip, [r1, #4]
   18d50:	ldrh	r2, [ip, r2]
   18d54:	cmp	r2, #0
   18d58:	beq	18d84 <flatcc_json_printer_int8_enum_field@@Base+0x64>
   18d5c:	ldr	ip, [r1]
   18d60:	cmn	ip, r2
   18d64:	beq	18d84 <flatcc_json_printer_int8_enum_field@@Base+0x64>
   18d68:	ldrsb	r5, [ip, r2]
   18d6c:	cmp	lr, r5
   18d70:	bne	18d94 <flatcc_json_printer_int8_enum_field@@Base+0x74>
   18d74:	ldrb	r2, [r0, #28]
   18d78:	cmp	r2, #0
   18d7c:	beq	18d94 <flatcc_json_printer_int8_enum_field@@Base+0x74>
   18d80:	b	18ea0 <flatcc_json_printer_int8_enum_field@@Base+0x180>
   18d84:	ldrb	r2, [r0, #29]
   18d88:	cmp	r2, #0
   18d8c:	beq	18ea0 <flatcc_json_printer_int8_enum_field@@Base+0x180>
   18d90:	mov	r5, lr
   18d94:	ldr	r2, [r1, #16]
   18d98:	add	ip, r2, #1
   18d9c:	str	ip, [r1, #16]
   18da0:	cmp	r2, #0
   18da4:	beq	18dbc <flatcc_json_printer_int8_enum_field@@Base+0x9c>
   18da8:	ldr	r2, [r0, #20]
   18dac:	add	r1, r2, #1
   18db0:	str	r1, [r0, #20]
   18db4:	mov	r1, #44	; 0x2c
   18db8:	strb	r1, [r2]
   18dbc:	mov	r7, r3
   18dc0:	mov	r4, r0
   18dc4:	ldrb	r3, [r0, #25]
   18dc8:	cmp	r3, #0
   18dcc:	bne	18eb4 <flatcc_json_printer_int8_enum_field@@Base+0x194>
   18dd0:	ldr	r2, [r0, #20]
   18dd4:	ldr	r3, [r0, #16]
   18dd8:	cmp	r2, r3
   18ddc:	bcc	18dec <flatcc_json_printer_int8_enum_field@@Base+0xcc>
   18de0:	ldr	r3, [r0, #44]	; 0x2c
   18de4:	mov	r1, #0
   18de8:	blx	r3
   18dec:	ldr	r3, [r4, #20]
   18df0:	mov	r2, #34	; 0x22
   18df4:	strb	r2, [r3]
   18df8:	ldrb	r3, [r4, #26]
   18dfc:	ldr	r0, [r4, #20]
   18e00:	cmp	r3, #0
   18e04:	addeq	r0, r0, #1
   18e08:	str	r0, [r4, #20]
   18e0c:	add	r3, r0, r6
   18e10:	ldr	r2, [r4, #16]
   18e14:	cmp	r2, r3
   18e18:	bls	18f14 <flatcc_json_printer_int8_enum_field@@Base+0x1f4>
   18e1c:	mov	r2, r6
   18e20:	mov	r1, r7
   18e24:	bl	12428 <memcpy@plt>
   18e28:	ldr	r3, [r4, #20]
   18e2c:	add	r6, r3, r6
   18e30:	str	r6, [r4, #20]
   18e34:	ldr	r3, [r4, #20]
   18e38:	mov	r2, #34	; 0x22
   18e3c:	strb	r2, [r3]
   18e40:	ldrb	r3, [r4, #26]
   18e44:	clz	r3, r3
   18e48:	lsr	r3, r3, #5
   18e4c:	ldr	r1, [r4, #20]
   18e50:	add	r2, r1, r3
   18e54:	add	r2, r2, #1
   18e58:	str	r2, [r4, #20]
   18e5c:	mov	r2, #58	; 0x3a
   18e60:	strb	r2, [r1, r3]
   18e64:	ldr	r3, [r4, #20]
   18e68:	mov	r2, #32
   18e6c:	strb	r2, [r3]
   18e70:	ldrb	r3, [r4, #25]
   18e74:	ldr	r1, [r4, #20]
   18e78:	cmp	r3, #0
   18e7c:	addne	r1, r1, #1
   18e80:	str	r1, [r4, #20]
   18e84:	ldrb	r3, [r4, #27]
   18e88:	cmp	r3, #0
   18e8c:	bne	18f28 <flatcc_json_printer_int8_enum_field@@Base+0x208>
   18e90:	mov	r1, r5
   18e94:	mov	r0, r4
   18e98:	ldr	r3, [sp, #32]
   18e9c:	blx	r3
   18ea0:	ldrd	r4, [sp]
   18ea4:	ldrd	r6, [sp, #8]
   18ea8:	ldr	r8, [sp, #16]
   18eac:	add	sp, sp, #20
   18eb0:	pop	{pc}		; (ldr pc, [sp], #4)
   18eb4:	ldr	r3, [r0, #20]
   18eb8:	add	r2, r3, #1
   18ebc:	str	r2, [r0, #20]
   18ec0:	mov	r2, #10
   18ec4:	strb	r2, [r3]
   18ec8:	ldrb	r3, [r0, #25]
   18ecc:	ldr	r8, [r0, #32]
   18ed0:	mul	r8, r8, r3
   18ed4:	ldr	r0, [r0, #20]
   18ed8:	add	r3, r0, r8
   18edc:	ldr	r2, [r4, #16]
   18ee0:	cmp	r2, r3
   18ee4:	bcs	18ef8 <flatcc_json_printer_int8_enum_field@@Base+0x1d8>
   18ee8:	mov	r1, r8
   18eec:	mov	r0, r4
   18ef0:	bl	15218 <main@@Base+0x163c>
   18ef4:	b	18dec <flatcc_json_printer_int8_enum_field@@Base+0xcc>
   18ef8:	mov	r2, r8
   18efc:	mov	r1, #32
   18f00:	bl	124c4 <memset@plt>
   18f04:	ldr	r3, [r4, #20]
   18f08:	add	r8, r3, r8
   18f0c:	str	r8, [r4, #20]
   18f10:	b	18dec <flatcc_json_printer_int8_enum_field@@Base+0xcc>
   18f14:	mov	r2, r6
   18f18:	mov	r1, r7
   18f1c:	mov	r0, r4
   18f20:	bl	15108 <main@@Base+0x152c>
   18f24:	b	18e34 <flatcc_json_printer_int8_enum_field@@Base+0x114>
   18f28:	mov	r0, r5
   18f2c:	bl	14924 <main@@Base+0xd48>
   18f30:	ldr	r3, [r4, #20]
   18f34:	add	r0, r3, r0
   18f38:	str	r0, [r4, #20]
   18f3c:	b	18ea0 <flatcc_json_printer_int8_enum_field@@Base+0x180>

00018f40 <flatcc_json_printer_int16_enum_field@@Base>:
   18f40:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18f44:	strd	r6, [sp, #8]
   18f48:	str	r8, [sp, #16]
   18f4c:	str	lr, [sp, #20]
   18f50:	ldr	r6, [sp, #24]
   18f54:	ldrsh	lr, [sp, #28]
   18f58:	add	r2, r2, #2
   18f5c:	lsl	r2, r2, #1
   18f60:	ldr	ip, [r1, #8]
   18f64:	cmp	r2, ip
   18f68:	bge	18fa4 <flatcc_json_printer_int16_enum_field@@Base+0x64>
   18f6c:	ldr	ip, [r1, #4]
   18f70:	ldrh	r2, [ip, r2]
   18f74:	cmp	r2, #0
   18f78:	beq	18fa4 <flatcc_json_printer_int16_enum_field@@Base+0x64>
   18f7c:	ldr	ip, [r1]
   18f80:	cmn	ip, r2
   18f84:	beq	18fa4 <flatcc_json_printer_int16_enum_field@@Base+0x64>
   18f88:	ldrsh	r5, [ip, r2]
   18f8c:	cmp	lr, r5
   18f90:	bne	18fb4 <flatcc_json_printer_int16_enum_field@@Base+0x74>
   18f94:	ldrb	r2, [r0, #28]
   18f98:	cmp	r2, #0
   18f9c:	beq	18fb4 <flatcc_json_printer_int16_enum_field@@Base+0x74>
   18fa0:	b	190c0 <flatcc_json_printer_int16_enum_field@@Base+0x180>
   18fa4:	ldrb	r2, [r0, #29]
   18fa8:	cmp	r2, #0
   18fac:	beq	190c0 <flatcc_json_printer_int16_enum_field@@Base+0x180>
   18fb0:	mov	r5, lr
   18fb4:	ldr	r2, [r1, #16]
   18fb8:	add	ip, r2, #1
   18fbc:	str	ip, [r1, #16]
   18fc0:	cmp	r2, #0
   18fc4:	beq	18fdc <flatcc_json_printer_int16_enum_field@@Base+0x9c>
   18fc8:	ldr	r2, [r0, #20]
   18fcc:	add	r1, r2, #1
   18fd0:	str	r1, [r0, #20]
   18fd4:	mov	r1, #44	; 0x2c
   18fd8:	strb	r1, [r2]
   18fdc:	mov	r7, r3
   18fe0:	mov	r4, r0
   18fe4:	ldrb	r3, [r0, #25]
   18fe8:	cmp	r3, #0
   18fec:	bne	190d4 <flatcc_json_printer_int16_enum_field@@Base+0x194>
   18ff0:	ldr	r2, [r0, #20]
   18ff4:	ldr	r3, [r0, #16]
   18ff8:	cmp	r2, r3
   18ffc:	bcc	1900c <flatcc_json_printer_int16_enum_field@@Base+0xcc>
   19000:	ldr	r3, [r0, #44]	; 0x2c
   19004:	mov	r1, #0
   19008:	blx	r3
   1900c:	ldr	r3, [r4, #20]
   19010:	mov	r2, #34	; 0x22
   19014:	strb	r2, [r3]
   19018:	ldrb	r3, [r4, #26]
   1901c:	ldr	r0, [r4, #20]
   19020:	cmp	r3, #0
   19024:	addeq	r0, r0, #1
   19028:	str	r0, [r4, #20]
   1902c:	add	r3, r0, r6
   19030:	ldr	r2, [r4, #16]
   19034:	cmp	r2, r3
   19038:	bls	19134 <flatcc_json_printer_int16_enum_field@@Base+0x1f4>
   1903c:	mov	r2, r6
   19040:	mov	r1, r7
   19044:	bl	12428 <memcpy@plt>
   19048:	ldr	r3, [r4, #20]
   1904c:	add	r6, r3, r6
   19050:	str	r6, [r4, #20]
   19054:	ldr	r3, [r4, #20]
   19058:	mov	r2, #34	; 0x22
   1905c:	strb	r2, [r3]
   19060:	ldrb	r3, [r4, #26]
   19064:	clz	r3, r3
   19068:	lsr	r3, r3, #5
   1906c:	ldr	r1, [r4, #20]
   19070:	add	r2, r1, r3
   19074:	add	r2, r2, #1
   19078:	str	r2, [r4, #20]
   1907c:	mov	r2, #58	; 0x3a
   19080:	strb	r2, [r1, r3]
   19084:	ldr	r3, [r4, #20]
   19088:	mov	r2, #32
   1908c:	strb	r2, [r3]
   19090:	ldrb	r3, [r4, #25]
   19094:	ldr	r1, [r4, #20]
   19098:	cmp	r3, #0
   1909c:	addne	r1, r1, #1
   190a0:	str	r1, [r4, #20]
   190a4:	ldrb	r3, [r4, #27]
   190a8:	cmp	r3, #0
   190ac:	bne	19148 <flatcc_json_printer_int16_enum_field@@Base+0x208>
   190b0:	mov	r1, r5
   190b4:	mov	r0, r4
   190b8:	ldr	r3, [sp, #32]
   190bc:	blx	r3
   190c0:	ldrd	r4, [sp]
   190c4:	ldrd	r6, [sp, #8]
   190c8:	ldr	r8, [sp, #16]
   190cc:	add	sp, sp, #20
   190d0:	pop	{pc}		; (ldr pc, [sp], #4)
   190d4:	ldr	r3, [r0, #20]
   190d8:	add	r2, r3, #1
   190dc:	str	r2, [r0, #20]
   190e0:	mov	r2, #10
   190e4:	strb	r2, [r3]
   190e8:	ldrb	r3, [r0, #25]
   190ec:	ldr	r8, [r0, #32]
   190f0:	mul	r8, r8, r3
   190f4:	ldr	r0, [r0, #20]
   190f8:	add	r3, r0, r8
   190fc:	ldr	r2, [r4, #16]
   19100:	cmp	r2, r3
   19104:	bcs	19118 <flatcc_json_printer_int16_enum_field@@Base+0x1d8>
   19108:	mov	r1, r8
   1910c:	mov	r0, r4
   19110:	bl	15218 <main@@Base+0x163c>
   19114:	b	1900c <flatcc_json_printer_int16_enum_field@@Base+0xcc>
   19118:	mov	r2, r8
   1911c:	mov	r1, #32
   19120:	bl	124c4 <memset@plt>
   19124:	ldr	r3, [r4, #20]
   19128:	add	r8, r3, r8
   1912c:	str	r8, [r4, #20]
   19130:	b	1900c <flatcc_json_printer_int16_enum_field@@Base+0xcc>
   19134:	mov	r2, r6
   19138:	mov	r1, r7
   1913c:	mov	r0, r4
   19140:	bl	15108 <main@@Base+0x152c>
   19144:	b	19054 <flatcc_json_printer_int16_enum_field@@Base+0x114>
   19148:	mov	r0, r5
   1914c:	bl	14964 <main@@Base+0xd88>
   19150:	ldr	r3, [r4, #20]
   19154:	add	r0, r3, r0
   19158:	str	r0, [r4, #20]
   1915c:	b	190c0 <flatcc_json_printer_int16_enum_field@@Base+0x180>

00019160 <flatcc_json_printer_int32_enum_field@@Base>:
   19160:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19164:	strd	r6, [sp, #8]
   19168:	str	r8, [sp, #16]
   1916c:	str	lr, [sp, #20]
   19170:	ldr	r6, [sp, #24]
   19174:	add	r2, r2, #2
   19178:	lsl	r2, r2, #1
   1917c:	ldr	ip, [r1, #8]
   19180:	cmp	r2, ip
   19184:	bge	191c4 <flatcc_json_printer_int32_enum_field@@Base+0x64>
   19188:	ldr	ip, [r1, #4]
   1918c:	ldrh	r2, [ip, r2]
   19190:	cmp	r2, #0
   19194:	beq	191c4 <flatcc_json_printer_int32_enum_field@@Base+0x64>
   19198:	ldr	ip, [r1]
   1919c:	cmn	ip, r2
   191a0:	beq	191c4 <flatcc_json_printer_int32_enum_field@@Base+0x64>
   191a4:	ldr	r5, [ip, r2]
   191a8:	ldr	r2, [sp, #28]
   191ac:	cmp	r2, r5
   191b0:	bne	191d4 <flatcc_json_printer_int32_enum_field@@Base+0x74>
   191b4:	ldrb	r2, [r0, #28]
   191b8:	cmp	r2, #0
   191bc:	beq	191d4 <flatcc_json_printer_int32_enum_field@@Base+0x74>
   191c0:	b	192e0 <flatcc_json_printer_int32_enum_field@@Base+0x180>
   191c4:	ldrb	r2, [r0, #29]
   191c8:	cmp	r2, #0
   191cc:	beq	192e0 <flatcc_json_printer_int32_enum_field@@Base+0x180>
   191d0:	ldr	r5, [sp, #28]
   191d4:	ldr	r2, [r1, #16]
   191d8:	add	ip, r2, #1
   191dc:	str	ip, [r1, #16]
   191e0:	cmp	r2, #0
   191e4:	beq	191fc <flatcc_json_printer_int32_enum_field@@Base+0x9c>
   191e8:	ldr	r2, [r0, #20]
   191ec:	add	r1, r2, #1
   191f0:	str	r1, [r0, #20]
   191f4:	mov	r1, #44	; 0x2c
   191f8:	strb	r1, [r2]
   191fc:	mov	r7, r3
   19200:	mov	r4, r0
   19204:	ldrb	r3, [r0, #25]
   19208:	cmp	r3, #0
   1920c:	bne	192f4 <flatcc_json_printer_int32_enum_field@@Base+0x194>
   19210:	ldr	r2, [r0, #20]
   19214:	ldr	r3, [r0, #16]
   19218:	cmp	r2, r3
   1921c:	bcc	1922c <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   19220:	ldr	r3, [r0, #44]	; 0x2c
   19224:	mov	r1, #0
   19228:	blx	r3
   1922c:	ldr	r3, [r4, #20]
   19230:	mov	r2, #34	; 0x22
   19234:	strb	r2, [r3]
   19238:	ldrb	r3, [r4, #26]
   1923c:	ldr	r0, [r4, #20]
   19240:	cmp	r3, #0
   19244:	addeq	r0, r0, #1
   19248:	str	r0, [r4, #20]
   1924c:	add	r3, r0, r6
   19250:	ldr	r2, [r4, #16]
   19254:	cmp	r2, r3
   19258:	bls	19354 <flatcc_json_printer_int32_enum_field@@Base+0x1f4>
   1925c:	mov	r2, r6
   19260:	mov	r1, r7
   19264:	bl	12428 <memcpy@plt>
   19268:	ldr	r3, [r4, #20]
   1926c:	add	r6, r3, r6
   19270:	str	r6, [r4, #20]
   19274:	ldr	r3, [r4, #20]
   19278:	mov	r2, #34	; 0x22
   1927c:	strb	r2, [r3]
   19280:	ldrb	r3, [r4, #26]
   19284:	clz	r3, r3
   19288:	lsr	r3, r3, #5
   1928c:	ldr	r1, [r4, #20]
   19290:	add	r2, r1, r3
   19294:	add	r2, r2, #1
   19298:	str	r2, [r4, #20]
   1929c:	mov	r2, #58	; 0x3a
   192a0:	strb	r2, [r1, r3]
   192a4:	ldr	r3, [r4, #20]
   192a8:	mov	r2, #32
   192ac:	strb	r2, [r3]
   192b0:	ldrb	r3, [r4, #25]
   192b4:	ldr	r1, [r4, #20]
   192b8:	cmp	r3, #0
   192bc:	addne	r1, r1, #1
   192c0:	str	r1, [r4, #20]
   192c4:	ldrb	r3, [r4, #27]
   192c8:	cmp	r3, #0
   192cc:	bne	19368 <flatcc_json_printer_int32_enum_field@@Base+0x208>
   192d0:	mov	r1, r5
   192d4:	mov	r0, r4
   192d8:	ldr	r3, [sp, #32]
   192dc:	blx	r3
   192e0:	ldrd	r4, [sp]
   192e4:	ldrd	r6, [sp, #8]
   192e8:	ldr	r8, [sp, #16]
   192ec:	add	sp, sp, #20
   192f0:	pop	{pc}		; (ldr pc, [sp], #4)
   192f4:	ldr	r3, [r0, #20]
   192f8:	add	r2, r3, #1
   192fc:	str	r2, [r0, #20]
   19300:	mov	r2, #10
   19304:	strb	r2, [r3]
   19308:	ldrb	r3, [r0, #25]
   1930c:	ldr	r8, [r0, #32]
   19310:	mul	r8, r8, r3
   19314:	ldr	r0, [r0, #20]
   19318:	add	r3, r0, r8
   1931c:	ldr	r2, [r4, #16]
   19320:	cmp	r2, r3
   19324:	bcs	19338 <flatcc_json_printer_int32_enum_field@@Base+0x1d8>
   19328:	mov	r1, r8
   1932c:	mov	r0, r4
   19330:	bl	15218 <main@@Base+0x163c>
   19334:	b	1922c <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   19338:	mov	r2, r8
   1933c:	mov	r1, #32
   19340:	bl	124c4 <memset@plt>
   19344:	ldr	r3, [r4, #20]
   19348:	add	r8, r3, r8
   1934c:	str	r8, [r4, #20]
   19350:	b	1922c <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   19354:	mov	r2, r6
   19358:	mov	r1, r7
   1935c:	mov	r0, r4
   19360:	bl	15108 <main@@Base+0x152c>
   19364:	b	19274 <flatcc_json_printer_int32_enum_field@@Base+0x114>
   19368:	mov	r0, r5
   1936c:	bl	149a4 <main@@Base+0xdc8>
   19370:	ldr	r3, [r4, #20]
   19374:	add	r0, r3, r0
   19378:	str	r0, [r4, #20]
   1937c:	b	192e0 <flatcc_json_printer_int32_enum_field@@Base+0x180>

00019380 <flatcc_json_printer_int64_enum_field@@Base>:
   19380:	strd	r4, [sp, #-32]!	; 0xffffffe0
   19384:	strd	r6, [sp, #8]
   19388:	strd	r8, [sp, #16]
   1938c:	str	sl, [sp, #24]
   19390:	str	lr, [sp, #28]
   19394:	ldr	r5, [sp, #32]
   19398:	add	r2, r2, #2
   1939c:	lsl	r2, r2, #1
   193a0:	ldr	ip, [r1, #8]
   193a4:	cmp	r2, ip
   193a8:	bge	193ec <flatcc_json_printer_int64_enum_field@@Base+0x6c>
   193ac:	ldr	ip, [r1, #4]
   193b0:	ldrh	r2, [ip, r2]
   193b4:	cmp	r2, #0
   193b8:	beq	193ec <flatcc_json_printer_int64_enum_field@@Base+0x6c>
   193bc:	ldr	ip, [r1]
   193c0:	cmn	ip, r2
   193c4:	beq	193ec <flatcc_json_printer_int64_enum_field@@Base+0x6c>
   193c8:	ldrd	r6, [ip, r2]
   193cc:	ldrd	r8, [sp, #40]	; 0x28
   193d0:	cmp	r9, r7
   193d4:	cmpeq	r8, r6
   193d8:	bne	193fc <flatcc_json_printer_int64_enum_field@@Base+0x7c>
   193dc:	ldrb	r2, [r0, #28]
   193e0:	cmp	r2, #0
   193e4:	beq	193fc <flatcc_json_printer_int64_enum_field@@Base+0x7c>
   193e8:	b	1950c <flatcc_json_printer_int64_enum_field@@Base+0x18c>
   193ec:	ldrb	r2, [r0, #29]
   193f0:	cmp	r2, #0
   193f4:	beq	1950c <flatcc_json_printer_int64_enum_field@@Base+0x18c>
   193f8:	ldrd	r6, [sp, #40]	; 0x28
   193fc:	ldr	r2, [r1, #16]
   19400:	add	ip, r2, #1
   19404:	str	ip, [r1, #16]
   19408:	cmp	r2, #0
   1940c:	beq	19424 <flatcc_json_printer_int64_enum_field@@Base+0xa4>
   19410:	ldr	r2, [r0, #20]
   19414:	add	r1, r2, #1
   19418:	str	r1, [r0, #20]
   1941c:	mov	r1, #44	; 0x2c
   19420:	strb	r1, [r2]
   19424:	mov	r8, r3
   19428:	mov	r4, r0
   1942c:	ldrb	r3, [r0, #25]
   19430:	cmp	r3, #0
   19434:	bne	19524 <flatcc_json_printer_int64_enum_field@@Base+0x1a4>
   19438:	ldr	r2, [r0, #20]
   1943c:	ldr	r3, [r0, #16]
   19440:	cmp	r2, r3
   19444:	bcc	19454 <flatcc_json_printer_int64_enum_field@@Base+0xd4>
   19448:	ldr	r3, [r0, #44]	; 0x2c
   1944c:	mov	r1, #0
   19450:	blx	r3
   19454:	ldr	r3, [r4, #20]
   19458:	mov	r2, #34	; 0x22
   1945c:	strb	r2, [r3]
   19460:	ldrb	r3, [r4, #26]
   19464:	ldr	r0, [r4, #20]
   19468:	cmp	r3, #0
   1946c:	addeq	r0, r0, #1
   19470:	str	r0, [r4, #20]
   19474:	add	r3, r0, r5
   19478:	ldr	r2, [r4, #16]
   1947c:	cmp	r2, r3
   19480:	bls	19584 <flatcc_json_printer_int64_enum_field@@Base+0x204>
   19484:	mov	r2, r5
   19488:	mov	r1, r8
   1948c:	bl	12428 <memcpy@plt>
   19490:	ldr	r3, [r4, #20]
   19494:	add	r5, r3, r5
   19498:	str	r5, [r4, #20]
   1949c:	ldr	r3, [r4, #20]
   194a0:	mov	r2, #34	; 0x22
   194a4:	strb	r2, [r3]
   194a8:	ldrb	r3, [r4, #26]
   194ac:	clz	r3, r3
   194b0:	lsr	r3, r3, #5
   194b4:	ldr	r1, [r4, #20]
   194b8:	add	r2, r1, r3
   194bc:	add	r2, r2, #1
   194c0:	str	r2, [r4, #20]
   194c4:	mov	r2, #58	; 0x3a
   194c8:	strb	r2, [r1, r3]
   194cc:	ldr	r3, [r4, #20]
   194d0:	mov	r2, #32
   194d4:	strb	r2, [r3]
   194d8:	ldrb	r3, [r4, #25]
   194dc:	ldr	r2, [r4, #20]
   194e0:	cmp	r3, #0
   194e4:	addne	r2, r2, #1
   194e8:	str	r2, [r4, #20]
   194ec:	ldrb	r3, [r4, #27]
   194f0:	cmp	r3, #0
   194f4:	bne	19598 <flatcc_json_printer_int64_enum_field@@Base+0x218>
   194f8:	mov	r2, r6
   194fc:	mov	r3, r7
   19500:	mov	r0, r4
   19504:	ldr	r1, [sp, #48]	; 0x30
   19508:	blx	r1
   1950c:	ldrd	r4, [sp]
   19510:	ldrd	r6, [sp, #8]
   19514:	ldrd	r8, [sp, #16]
   19518:	ldr	sl, [sp, #24]
   1951c:	add	sp, sp, #28
   19520:	pop	{pc}		; (ldr pc, [sp], #4)
   19524:	ldr	r3, [r0, #20]
   19528:	add	r2, r3, #1
   1952c:	str	r2, [r0, #20]
   19530:	mov	r2, #10
   19534:	strb	r2, [r3]
   19538:	ldrb	r3, [r0, #25]
   1953c:	ldr	r9, [r0, #32]
   19540:	mul	r9, r9, r3
   19544:	ldr	r0, [r0, #20]
   19548:	add	r3, r0, r9
   1954c:	ldr	r2, [r4, #16]
   19550:	cmp	r2, r3
   19554:	bcs	19568 <flatcc_json_printer_int64_enum_field@@Base+0x1e8>
   19558:	mov	r1, r9
   1955c:	mov	r0, r4
   19560:	bl	15218 <main@@Base+0x163c>
   19564:	b	19454 <flatcc_json_printer_int64_enum_field@@Base+0xd4>
   19568:	mov	r2, r9
   1956c:	mov	r1, #32
   19570:	bl	124c4 <memset@plt>
   19574:	ldr	r3, [r4, #20]
   19578:	add	r9, r3, r9
   1957c:	str	r9, [r4, #20]
   19580:	b	19454 <flatcc_json_printer_int64_enum_field@@Base+0xd4>
   19584:	mov	r2, r5
   19588:	mov	r1, r8
   1958c:	mov	r0, r4
   19590:	bl	15108 <main@@Base+0x152c>
   19594:	b	1949c <flatcc_json_printer_int64_enum_field@@Base+0x11c>
   19598:	mov	r0, r6
   1959c:	mov	r1, r7
   195a0:	bl	149dc <main@@Base+0xe00>
   195a4:	ldr	r3, [r4, #20]
   195a8:	add	r0, r3, r0
   195ac:	str	r0, [r4, #20]
   195b0:	b	1950c <flatcc_json_printer_int64_enum_field@@Base+0x18c>

000195b4 <flatcc_json_printer_bool_enum_field@@Base>:
   195b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   195b8:	strd	r6, [sp, #8]
   195bc:	str	r8, [sp, #16]
   195c0:	str	lr, [sp, #20]
   195c4:	ldr	r6, [sp, #24]
   195c8:	ldrb	lr, [sp, #28]
   195cc:	add	r2, r2, #2
   195d0:	lsl	r2, r2, #1
   195d4:	ldr	ip, [r1, #8]
   195d8:	cmp	r2, ip
   195dc:	bge	19618 <flatcc_json_printer_bool_enum_field@@Base+0x64>
   195e0:	ldr	ip, [r1, #4]
   195e4:	ldrh	r2, [ip, r2]
   195e8:	cmp	r2, #0
   195ec:	beq	19618 <flatcc_json_printer_bool_enum_field@@Base+0x64>
   195f0:	ldr	ip, [r1]
   195f4:	cmn	ip, r2
   195f8:	beq	19618 <flatcc_json_printer_bool_enum_field@@Base+0x64>
   195fc:	ldrb	r5, [ip, r2]
   19600:	cmp	lr, r5
   19604:	bne	19628 <flatcc_json_printer_bool_enum_field@@Base+0x74>
   19608:	ldrb	r2, [r0, #28]
   1960c:	cmp	r2, #0
   19610:	beq	19628 <flatcc_json_printer_bool_enum_field@@Base+0x74>
   19614:	b	19734 <flatcc_json_printer_bool_enum_field@@Base+0x180>
   19618:	ldrb	r2, [r0, #29]
   1961c:	cmp	r2, #0
   19620:	beq	19734 <flatcc_json_printer_bool_enum_field@@Base+0x180>
   19624:	mov	r5, lr
   19628:	ldr	r2, [r1, #16]
   1962c:	add	ip, r2, #1
   19630:	str	ip, [r1, #16]
   19634:	cmp	r2, #0
   19638:	beq	19650 <flatcc_json_printer_bool_enum_field@@Base+0x9c>
   1963c:	ldr	r2, [r0, #20]
   19640:	add	r1, r2, #1
   19644:	str	r1, [r0, #20]
   19648:	mov	r1, #44	; 0x2c
   1964c:	strb	r1, [r2]
   19650:	mov	r7, r3
   19654:	mov	r4, r0
   19658:	ldrb	r3, [r0, #25]
   1965c:	cmp	r3, #0
   19660:	bne	19748 <flatcc_json_printer_bool_enum_field@@Base+0x194>
   19664:	ldr	r2, [r0, #20]
   19668:	ldr	r3, [r0, #16]
   1966c:	cmp	r2, r3
   19670:	bcc	19680 <flatcc_json_printer_bool_enum_field@@Base+0xcc>
   19674:	ldr	r3, [r0, #44]	; 0x2c
   19678:	mov	r1, #0
   1967c:	blx	r3
   19680:	ldr	r3, [r4, #20]
   19684:	mov	r2, #34	; 0x22
   19688:	strb	r2, [r3]
   1968c:	ldrb	r3, [r4, #26]
   19690:	ldr	r0, [r4, #20]
   19694:	cmp	r3, #0
   19698:	addeq	r0, r0, #1
   1969c:	str	r0, [r4, #20]
   196a0:	add	r3, r0, r6
   196a4:	ldr	r2, [r4, #16]
   196a8:	cmp	r2, r3
   196ac:	bls	197a8 <flatcc_json_printer_bool_enum_field@@Base+0x1f4>
   196b0:	mov	r2, r6
   196b4:	mov	r1, r7
   196b8:	bl	12428 <memcpy@plt>
   196bc:	ldr	r3, [r4, #20]
   196c0:	add	r6, r3, r6
   196c4:	str	r6, [r4, #20]
   196c8:	ldr	r3, [r4, #20]
   196cc:	mov	r2, #34	; 0x22
   196d0:	strb	r2, [r3]
   196d4:	ldrb	r3, [r4, #26]
   196d8:	clz	r3, r3
   196dc:	lsr	r3, r3, #5
   196e0:	ldr	r1, [r4, #20]
   196e4:	add	r2, r1, r3
   196e8:	add	r2, r2, #1
   196ec:	str	r2, [r4, #20]
   196f0:	mov	r2, #58	; 0x3a
   196f4:	strb	r2, [r1, r3]
   196f8:	ldr	r3, [r4, #20]
   196fc:	mov	r2, #32
   19700:	strb	r2, [r3]
   19704:	ldrb	r3, [r4, #25]
   19708:	ldr	r1, [r4, #20]
   1970c:	cmp	r3, #0
   19710:	addne	r1, r1, #1
   19714:	str	r1, [r4, #20]
   19718:	ldrb	r3, [r4, #27]
   1971c:	cmp	r3, #0
   19720:	bne	197bc <flatcc_json_printer_bool_enum_field@@Base+0x208>
   19724:	mov	r1, r5
   19728:	mov	r0, r4
   1972c:	ldr	r3, [sp, #32]
   19730:	blx	r3
   19734:	ldrd	r4, [sp]
   19738:	ldrd	r6, [sp, #8]
   1973c:	ldr	r8, [sp, #16]
   19740:	add	sp, sp, #20
   19744:	pop	{pc}		; (ldr pc, [sp], #4)
   19748:	ldr	r3, [r0, #20]
   1974c:	add	r2, r3, #1
   19750:	str	r2, [r0, #20]
   19754:	mov	r2, #10
   19758:	strb	r2, [r3]
   1975c:	ldrb	r3, [r0, #25]
   19760:	ldr	r8, [r0, #32]
   19764:	mul	r8, r8, r3
   19768:	ldr	r0, [r0, #20]
   1976c:	add	r3, r0, r8
   19770:	ldr	r2, [r4, #16]
   19774:	cmp	r2, r3
   19778:	bcs	1978c <flatcc_json_printer_bool_enum_field@@Base+0x1d8>
   1977c:	mov	r1, r8
   19780:	mov	r0, r4
   19784:	bl	15218 <main@@Base+0x163c>
   19788:	b	19680 <flatcc_json_printer_bool_enum_field@@Base+0xcc>
   1978c:	mov	r2, r8
   19790:	mov	r1, #32
   19794:	bl	124c4 <memset@plt>
   19798:	ldr	r3, [r4, #20]
   1979c:	add	r8, r3, r8
   197a0:	str	r8, [r4, #20]
   197a4:	b	19680 <flatcc_json_printer_bool_enum_field@@Base+0xcc>
   197a8:	mov	r2, r6
   197ac:	mov	r1, r7
   197b0:	mov	r0, r4
   197b4:	bl	15108 <main@@Base+0x152c>
   197b8:	b	196c8 <flatcc_json_printer_bool_enum_field@@Base+0x114>
   197bc:	mov	r0, r5
   197c0:	bl	151d0 <main@@Base+0x15f4>
   197c4:	ldr	r3, [r4, #20]
   197c8:	add	r0, r3, r0
   197cc:	str	r0, [r4, #20]
   197d0:	b	19734 <flatcc_json_printer_bool_enum_field@@Base+0x180>

000197d4 <flatcc_json_printer_uint8_struct_field@@Base>:
   197d4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   197d8:	strd	r6, [sp, #8]
   197dc:	str	r8, [sp, #16]
   197e0:	str	lr, [sp, #20]
   197e4:	mov	r4, r0
   197e8:	ldr	r6, [sp, #28]
   197ec:	ldrb	r5, [r2, r3]
   197f0:	cmp	r1, #0
   197f4:	beq	1980c <flatcc_json_printer_uint8_struct_field@@Base+0x38>
   197f8:	ldr	r3, [r0, #20]
   197fc:	add	r2, r3, #1
   19800:	str	r2, [r0, #20]
   19804:	mov	r2, #44	; 0x2c
   19808:	strb	r2, [r3]
   1980c:	ldrb	r3, [r4, #25]
   19810:	cmp	r3, #0
   19814:	bne	198f8 <flatcc_json_printer_uint8_struct_field@@Base+0x124>
   19818:	ldr	r2, [r4, #20]
   1981c:	ldr	r3, [r4, #16]
   19820:	cmp	r2, r3
   19824:	bcc	19838 <flatcc_json_printer_uint8_struct_field@@Base+0x64>
   19828:	ldr	r3, [r4, #44]	; 0x2c
   1982c:	mov	r1, #0
   19830:	mov	r0, r4
   19834:	blx	r3
   19838:	ldr	r3, [r4, #20]
   1983c:	mov	r2, #34	; 0x22
   19840:	strb	r2, [r3]
   19844:	ldrb	r3, [r4, #26]
   19848:	ldr	r0, [r4, #20]
   1984c:	cmp	r3, #0
   19850:	addeq	r0, r0, #1
   19854:	str	r0, [r4, #20]
   19858:	add	r3, r0, r6
   1985c:	ldr	r2, [r4, #16]
   19860:	cmp	r2, r3
   19864:	bls	19958 <flatcc_json_printer_uint8_struct_field@@Base+0x184>
   19868:	mov	r2, r6
   1986c:	ldr	r1, [sp, #24]
   19870:	bl	12428 <memcpy@plt>
   19874:	ldr	r3, [r4, #20]
   19878:	add	r6, r3, r6
   1987c:	str	r6, [r4, #20]
   19880:	ldr	r3, [r4, #20]
   19884:	mov	r2, #34	; 0x22
   19888:	strb	r2, [r3]
   1988c:	ldrb	r3, [r4, #26]
   19890:	clz	r3, r3
   19894:	lsr	r3, r3, #5
   19898:	ldr	r1, [r4, #20]
   1989c:	add	r2, r1, r3
   198a0:	add	r2, r2, #1
   198a4:	str	r2, [r4, #20]
   198a8:	mov	r2, #58	; 0x3a
   198ac:	strb	r2, [r1, r3]
   198b0:	ldr	r3, [r4, #20]
   198b4:	mov	r2, #32
   198b8:	strb	r2, [r3]
   198bc:	ldrb	r3, [r4, #25]
   198c0:	ldr	r1, [r4, #20]
   198c4:	cmp	r3, #0
   198c8:	addne	r1, r1, #1
   198cc:	str	r1, [r4, #20]
   198d0:	mov	r0, r5
   198d4:	bl	13c90 <main@@Base+0xb4>
   198d8:	ldr	r3, [r4, #20]
   198dc:	add	r0, r3, r0
   198e0:	str	r0, [r4, #20]
   198e4:	ldrd	r4, [sp]
   198e8:	ldrd	r6, [sp, #8]
   198ec:	ldr	r8, [sp, #16]
   198f0:	add	sp, sp, #20
   198f4:	pop	{pc}		; (ldr pc, [sp], #4)
   198f8:	ldr	r3, [r4, #20]
   198fc:	add	r2, r3, #1
   19900:	str	r2, [r4, #20]
   19904:	mov	r2, #10
   19908:	strb	r2, [r3]
   1990c:	ldrb	r3, [r4, #25]
   19910:	ldr	r7, [r4, #32]
   19914:	mul	r7, r7, r3
   19918:	ldr	r0, [r4, #20]
   1991c:	add	r3, r0, r7
   19920:	ldr	r2, [r4, #16]
   19924:	cmp	r2, r3
   19928:	bcs	1993c <flatcc_json_printer_uint8_struct_field@@Base+0x168>
   1992c:	mov	r1, r7
   19930:	mov	r0, r4
   19934:	bl	15218 <main@@Base+0x163c>
   19938:	b	19838 <flatcc_json_printer_uint8_struct_field@@Base+0x64>
   1993c:	mov	r2, r7
   19940:	mov	r1, #32
   19944:	bl	124c4 <memset@plt>
   19948:	ldr	r3, [r4, #20]
   1994c:	add	r7, r3, r7
   19950:	str	r7, [r4, #20]
   19954:	b	19838 <flatcc_json_printer_uint8_struct_field@@Base+0x64>
   19958:	mov	r2, r6
   1995c:	ldr	r1, [sp, #24]
   19960:	mov	r0, r4
   19964:	bl	15108 <main@@Base+0x152c>
   19968:	b	19880 <flatcc_json_printer_uint8_struct_field@@Base+0xac>

0001996c <flatcc_json_printer_uint16_struct_field@@Base>:
   1996c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19970:	strd	r6, [sp, #8]
   19974:	str	r8, [sp, #16]
   19978:	str	lr, [sp, #20]
   1997c:	mov	r4, r0
   19980:	ldr	r6, [sp, #28]
   19984:	ldrh	r5, [r2, r3]
   19988:	cmp	r1, #0
   1998c:	beq	199a4 <flatcc_json_printer_uint16_struct_field@@Base+0x38>
   19990:	ldr	r3, [r0, #20]
   19994:	add	r2, r3, #1
   19998:	str	r2, [r0, #20]
   1999c:	mov	r2, #44	; 0x2c
   199a0:	strb	r2, [r3]
   199a4:	ldrb	r3, [r4, #25]
   199a8:	cmp	r3, #0
   199ac:	bne	19a90 <flatcc_json_printer_uint16_struct_field@@Base+0x124>
   199b0:	ldr	r2, [r4, #20]
   199b4:	ldr	r3, [r4, #16]
   199b8:	cmp	r2, r3
   199bc:	bcc	199d0 <flatcc_json_printer_uint16_struct_field@@Base+0x64>
   199c0:	ldr	r3, [r4, #44]	; 0x2c
   199c4:	mov	r1, #0
   199c8:	mov	r0, r4
   199cc:	blx	r3
   199d0:	ldr	r3, [r4, #20]
   199d4:	mov	r2, #34	; 0x22
   199d8:	strb	r2, [r3]
   199dc:	ldrb	r3, [r4, #26]
   199e0:	ldr	r0, [r4, #20]
   199e4:	cmp	r3, #0
   199e8:	addeq	r0, r0, #1
   199ec:	str	r0, [r4, #20]
   199f0:	add	r3, r0, r6
   199f4:	ldr	r2, [r4, #16]
   199f8:	cmp	r2, r3
   199fc:	bls	19af0 <flatcc_json_printer_uint16_struct_field@@Base+0x184>
   19a00:	mov	r2, r6
   19a04:	ldr	r1, [sp, #24]
   19a08:	bl	12428 <memcpy@plt>
   19a0c:	ldr	r3, [r4, #20]
   19a10:	add	r6, r3, r6
   19a14:	str	r6, [r4, #20]
   19a18:	ldr	r3, [r4, #20]
   19a1c:	mov	r2, #34	; 0x22
   19a20:	strb	r2, [r3]
   19a24:	ldrb	r3, [r4, #26]
   19a28:	clz	r3, r3
   19a2c:	lsr	r3, r3, #5
   19a30:	ldr	r1, [r4, #20]
   19a34:	add	r2, r1, r3
   19a38:	add	r2, r2, #1
   19a3c:	str	r2, [r4, #20]
   19a40:	mov	r2, #58	; 0x3a
   19a44:	strb	r2, [r1, r3]
   19a48:	ldr	r3, [r4, #20]
   19a4c:	mov	r2, #32
   19a50:	strb	r2, [r3]
   19a54:	ldrb	r3, [r4, #25]
   19a58:	ldr	r1, [r4, #20]
   19a5c:	cmp	r3, #0
   19a60:	addne	r1, r1, #1
   19a64:	str	r1, [r4, #20]
   19a68:	mov	r0, r5
   19a6c:	bl	13d50 <main@@Base+0x174>
   19a70:	ldr	r3, [r4, #20]
   19a74:	add	r0, r3, r0
   19a78:	str	r0, [r4, #20]
   19a7c:	ldrd	r4, [sp]
   19a80:	ldrd	r6, [sp, #8]
   19a84:	ldr	r8, [sp, #16]
   19a88:	add	sp, sp, #20
   19a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   19a90:	ldr	r3, [r4, #20]
   19a94:	add	r2, r3, #1
   19a98:	str	r2, [r4, #20]
   19a9c:	mov	r2, #10
   19aa0:	strb	r2, [r3]
   19aa4:	ldrb	r3, [r4, #25]
   19aa8:	ldr	r7, [r4, #32]
   19aac:	mul	r7, r7, r3
   19ab0:	ldr	r0, [r4, #20]
   19ab4:	add	r3, r0, r7
   19ab8:	ldr	r2, [r4, #16]
   19abc:	cmp	r2, r3
   19ac0:	bcs	19ad4 <flatcc_json_printer_uint16_struct_field@@Base+0x168>
   19ac4:	mov	r1, r7
   19ac8:	mov	r0, r4
   19acc:	bl	15218 <main@@Base+0x163c>
   19ad0:	b	199d0 <flatcc_json_printer_uint16_struct_field@@Base+0x64>
   19ad4:	mov	r2, r7
   19ad8:	mov	r1, #32
   19adc:	bl	124c4 <memset@plt>
   19ae0:	ldr	r3, [r4, #20]
   19ae4:	add	r7, r3, r7
   19ae8:	str	r7, [r4, #20]
   19aec:	b	199d0 <flatcc_json_printer_uint16_struct_field@@Base+0x64>
   19af0:	mov	r2, r6
   19af4:	ldr	r1, [sp, #24]
   19af8:	mov	r0, r4
   19afc:	bl	15108 <main@@Base+0x152c>
   19b00:	b	19a18 <flatcc_json_printer_uint16_struct_field@@Base+0xac>

00019b04 <flatcc_json_printer_uint32_struct_field@@Base>:
   19b04:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19b08:	strd	r6, [sp, #8]
   19b0c:	str	r8, [sp, #16]
   19b10:	str	lr, [sp, #20]
   19b14:	mov	r4, r0
   19b18:	ldr	r6, [sp, #28]
   19b1c:	ldr	r5, [r2, r3]
   19b20:	cmp	r1, #0
   19b24:	beq	19b3c <flatcc_json_printer_uint32_struct_field@@Base+0x38>
   19b28:	ldr	r3, [r0, #20]
   19b2c:	add	r2, r3, #1
   19b30:	str	r2, [r0, #20]
   19b34:	mov	r2, #44	; 0x2c
   19b38:	strb	r2, [r3]
   19b3c:	ldrb	r3, [r4, #25]
   19b40:	cmp	r3, #0
   19b44:	bne	19c28 <flatcc_json_printer_uint32_struct_field@@Base+0x124>
   19b48:	ldr	r2, [r4, #20]
   19b4c:	ldr	r3, [r4, #16]
   19b50:	cmp	r2, r3
   19b54:	bcc	19b68 <flatcc_json_printer_uint32_struct_field@@Base+0x64>
   19b58:	ldr	r3, [r4, #44]	; 0x2c
   19b5c:	mov	r1, #0
   19b60:	mov	r0, r4
   19b64:	blx	r3
   19b68:	ldr	r3, [r4, #20]
   19b6c:	mov	r2, #34	; 0x22
   19b70:	strb	r2, [r3]
   19b74:	ldrb	r3, [r4, #26]
   19b78:	ldr	r0, [r4, #20]
   19b7c:	cmp	r3, #0
   19b80:	addeq	r0, r0, #1
   19b84:	str	r0, [r4, #20]
   19b88:	add	r3, r0, r6
   19b8c:	ldr	r2, [r4, #16]
   19b90:	cmp	r2, r3
   19b94:	bls	19c88 <flatcc_json_printer_uint32_struct_field@@Base+0x184>
   19b98:	mov	r2, r6
   19b9c:	ldr	r1, [sp, #24]
   19ba0:	bl	12428 <memcpy@plt>
   19ba4:	ldr	r3, [r4, #20]
   19ba8:	add	r6, r3, r6
   19bac:	str	r6, [r4, #20]
   19bb0:	ldr	r3, [r4, #20]
   19bb4:	mov	r2, #34	; 0x22
   19bb8:	strb	r2, [r3]
   19bbc:	ldrb	r3, [r4, #26]
   19bc0:	clz	r3, r3
   19bc4:	lsr	r3, r3, #5
   19bc8:	ldr	r1, [r4, #20]
   19bcc:	add	r2, r1, r3
   19bd0:	add	r2, r2, #1
   19bd4:	str	r2, [r4, #20]
   19bd8:	mov	r2, #58	; 0x3a
   19bdc:	strb	r2, [r1, r3]
   19be0:	ldr	r3, [r4, #20]
   19be4:	mov	r2, #32
   19be8:	strb	r2, [r3]
   19bec:	ldrb	r3, [r4, #25]
   19bf0:	ldr	r1, [r4, #20]
   19bf4:	cmp	r3, #0
   19bf8:	addne	r1, r1, #1
   19bfc:	str	r1, [r4, #20]
   19c00:	mov	r0, r5
   19c04:	bl	13ee4 <main@@Base+0x308>
   19c08:	ldr	r3, [r4, #20]
   19c0c:	add	r0, r3, r0
   19c10:	str	r0, [r4, #20]
   19c14:	ldrd	r4, [sp]
   19c18:	ldrd	r6, [sp, #8]
   19c1c:	ldr	r8, [sp, #16]
   19c20:	add	sp, sp, #20
   19c24:	pop	{pc}		; (ldr pc, [sp], #4)
   19c28:	ldr	r3, [r4, #20]
   19c2c:	add	r2, r3, #1
   19c30:	str	r2, [r4, #20]
   19c34:	mov	r2, #10
   19c38:	strb	r2, [r3]
   19c3c:	ldrb	r3, [r4, #25]
   19c40:	ldr	r7, [r4, #32]
   19c44:	mul	r7, r7, r3
   19c48:	ldr	r0, [r4, #20]
   19c4c:	add	r3, r0, r7
   19c50:	ldr	r2, [r4, #16]
   19c54:	cmp	r2, r3
   19c58:	bcs	19c6c <flatcc_json_printer_uint32_struct_field@@Base+0x168>
   19c5c:	mov	r1, r7
   19c60:	mov	r0, r4
   19c64:	bl	15218 <main@@Base+0x163c>
   19c68:	b	19b68 <flatcc_json_printer_uint32_struct_field@@Base+0x64>
   19c6c:	mov	r2, r7
   19c70:	mov	r1, #32
   19c74:	bl	124c4 <memset@plt>
   19c78:	ldr	r3, [r4, #20]
   19c7c:	add	r7, r3, r7
   19c80:	str	r7, [r4, #20]
   19c84:	b	19b68 <flatcc_json_printer_uint32_struct_field@@Base+0x64>
   19c88:	mov	r2, r6
   19c8c:	ldr	r1, [sp, #24]
   19c90:	mov	r0, r4
   19c94:	bl	15108 <main@@Base+0x152c>
   19c98:	b	19bb0 <flatcc_json_printer_uint32_struct_field@@Base+0xac>

00019c9c <flatcc_json_printer_uint64_struct_field@@Base>:
   19c9c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19ca0:	strd	r6, [sp, #8]
   19ca4:	str	r8, [sp, #16]
   19ca8:	str	lr, [sp, #20]
   19cac:	mov	r4, r0
   19cb0:	ldr	r5, [sp, #28]
   19cb4:	ldrd	r6, [r2, r3]
   19cb8:	cmp	r1, #0
   19cbc:	beq	19cd4 <flatcc_json_printer_uint64_struct_field@@Base+0x38>
   19cc0:	ldr	r3, [r0, #20]
   19cc4:	add	r2, r3, #1
   19cc8:	str	r2, [r0, #20]
   19ccc:	mov	r2, #44	; 0x2c
   19cd0:	strb	r2, [r3]
   19cd4:	ldrb	r3, [r4, #25]
   19cd8:	cmp	r3, #0
   19cdc:	bne	19dc4 <flatcc_json_printer_uint64_struct_field@@Base+0x128>
   19ce0:	ldr	r2, [r4, #20]
   19ce4:	ldr	r3, [r4, #16]
   19ce8:	cmp	r2, r3
   19cec:	bcc	19d00 <flatcc_json_printer_uint64_struct_field@@Base+0x64>
   19cf0:	ldr	r3, [r4, #44]	; 0x2c
   19cf4:	mov	r1, #0
   19cf8:	mov	r0, r4
   19cfc:	blx	r3
   19d00:	ldr	r3, [r4, #20]
   19d04:	mov	r2, #34	; 0x22
   19d08:	strb	r2, [r3]
   19d0c:	ldrb	r3, [r4, #26]
   19d10:	ldr	r0, [r4, #20]
   19d14:	cmp	r3, #0
   19d18:	addeq	r0, r0, #1
   19d1c:	str	r0, [r4, #20]
   19d20:	add	r3, r0, r5
   19d24:	ldr	r2, [r4, #16]
   19d28:	cmp	r2, r3
   19d2c:	bls	19e24 <flatcc_json_printer_uint64_struct_field@@Base+0x188>
   19d30:	mov	r2, r5
   19d34:	ldr	r1, [sp, #24]
   19d38:	bl	12428 <memcpy@plt>
   19d3c:	ldr	r3, [r4, #20]
   19d40:	add	r5, r3, r5
   19d44:	str	r5, [r4, #20]
   19d48:	ldr	r3, [r4, #20]
   19d4c:	mov	r2, #34	; 0x22
   19d50:	strb	r2, [r3]
   19d54:	ldrb	r3, [r4, #26]
   19d58:	clz	r3, r3
   19d5c:	lsr	r3, r3, #5
   19d60:	ldr	r1, [r4, #20]
   19d64:	add	r2, r1, r3
   19d68:	add	r2, r2, #1
   19d6c:	str	r2, [r4, #20]
   19d70:	mov	r2, #58	; 0x3a
   19d74:	strb	r2, [r1, r3]
   19d78:	ldr	r3, [r4, #20]
   19d7c:	mov	r2, #32
   19d80:	strb	r2, [r3]
   19d84:	ldrb	r3, [r4, #25]
   19d88:	ldr	r2, [r4, #20]
   19d8c:	cmp	r3, #0
   19d90:	addne	r2, r2, #1
   19d94:	str	r2, [r4, #20]
   19d98:	mov	r0, r6
   19d9c:	mov	r1, r7
   19da0:	bl	14248 <main@@Base+0x66c>
   19da4:	ldr	r3, [r4, #20]
   19da8:	add	r0, r3, r0
   19dac:	str	r0, [r4, #20]
   19db0:	ldrd	r4, [sp]
   19db4:	ldrd	r6, [sp, #8]
   19db8:	ldr	r8, [sp, #16]
   19dbc:	add	sp, sp, #20
   19dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   19dc4:	ldr	r3, [r4, #20]
   19dc8:	add	r2, r3, #1
   19dcc:	str	r2, [r4, #20]
   19dd0:	mov	r2, #10
   19dd4:	strb	r2, [r3]
   19dd8:	ldrb	r3, [r4, #25]
   19ddc:	ldr	r8, [r4, #32]
   19de0:	mul	r8, r8, r3
   19de4:	ldr	r0, [r4, #20]
   19de8:	add	r3, r0, r8
   19dec:	ldr	r2, [r4, #16]
   19df0:	cmp	r2, r3
   19df4:	bcs	19e08 <flatcc_json_printer_uint64_struct_field@@Base+0x16c>
   19df8:	mov	r1, r8
   19dfc:	mov	r0, r4
   19e00:	bl	15218 <main@@Base+0x163c>
   19e04:	b	19d00 <flatcc_json_printer_uint64_struct_field@@Base+0x64>
   19e08:	mov	r2, r8
   19e0c:	mov	r1, #32
   19e10:	bl	124c4 <memset@plt>
   19e14:	ldr	r3, [r4, #20]
   19e18:	add	r8, r3, r8
   19e1c:	str	r8, [r4, #20]
   19e20:	b	19d00 <flatcc_json_printer_uint64_struct_field@@Base+0x64>
   19e24:	mov	r2, r5
   19e28:	ldr	r1, [sp, #24]
   19e2c:	mov	r0, r4
   19e30:	bl	15108 <main@@Base+0x152c>
   19e34:	b	19d48 <flatcc_json_printer_uint64_struct_field@@Base+0xac>

00019e38 <flatcc_json_printer_int8_struct_field@@Base>:
   19e38:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19e3c:	strd	r6, [sp, #8]
   19e40:	str	r8, [sp, #16]
   19e44:	str	lr, [sp, #20]
   19e48:	mov	r4, r0
   19e4c:	ldr	r6, [sp, #28]
   19e50:	ldrsb	r5, [r2, r3]
   19e54:	cmp	r1, #0
   19e58:	beq	19e70 <flatcc_json_printer_int8_struct_field@@Base+0x38>
   19e5c:	ldr	r3, [r0, #20]
   19e60:	add	r2, r3, #1
   19e64:	str	r2, [r0, #20]
   19e68:	mov	r2, #44	; 0x2c
   19e6c:	strb	r2, [r3]
   19e70:	ldrb	r3, [r4, #25]
   19e74:	cmp	r3, #0
   19e78:	bne	19f5c <flatcc_json_printer_int8_struct_field@@Base+0x124>
   19e7c:	ldr	r2, [r4, #20]
   19e80:	ldr	r3, [r4, #16]
   19e84:	cmp	r2, r3
   19e88:	bcc	19e9c <flatcc_json_printer_int8_struct_field@@Base+0x64>
   19e8c:	ldr	r3, [r4, #44]	; 0x2c
   19e90:	mov	r1, #0
   19e94:	mov	r0, r4
   19e98:	blx	r3
   19e9c:	ldr	r3, [r4, #20]
   19ea0:	mov	r2, #34	; 0x22
   19ea4:	strb	r2, [r3]
   19ea8:	ldrb	r3, [r4, #26]
   19eac:	ldr	r0, [r4, #20]
   19eb0:	cmp	r3, #0
   19eb4:	addeq	r0, r0, #1
   19eb8:	str	r0, [r4, #20]
   19ebc:	add	r3, r0, r6
   19ec0:	ldr	r2, [r4, #16]
   19ec4:	cmp	r2, r3
   19ec8:	bls	19fbc <flatcc_json_printer_int8_struct_field@@Base+0x184>
   19ecc:	mov	r2, r6
   19ed0:	ldr	r1, [sp, #24]
   19ed4:	bl	12428 <memcpy@plt>
   19ed8:	ldr	r3, [r4, #20]
   19edc:	add	r6, r3, r6
   19ee0:	str	r6, [r4, #20]
   19ee4:	ldr	r3, [r4, #20]
   19ee8:	mov	r2, #34	; 0x22
   19eec:	strb	r2, [r3]
   19ef0:	ldrb	r3, [r4, #26]
   19ef4:	clz	r3, r3
   19ef8:	lsr	r3, r3, #5
   19efc:	ldr	r1, [r4, #20]
   19f00:	add	r2, r1, r3
   19f04:	add	r2, r2, #1
   19f08:	str	r2, [r4, #20]
   19f0c:	mov	r2, #58	; 0x3a
   19f10:	strb	r2, [r1, r3]
   19f14:	ldr	r3, [r4, #20]
   19f18:	mov	r2, #32
   19f1c:	strb	r2, [r3]
   19f20:	ldrb	r3, [r4, #25]
   19f24:	ldr	r1, [r4, #20]
   19f28:	cmp	r3, #0
   19f2c:	addne	r1, r1, #1
   19f30:	str	r1, [r4, #20]
   19f34:	mov	r0, r5
   19f38:	bl	14924 <main@@Base+0xd48>
   19f3c:	ldr	r3, [r4, #20]
   19f40:	add	r0, r3, r0
   19f44:	str	r0, [r4, #20]
   19f48:	ldrd	r4, [sp]
   19f4c:	ldrd	r6, [sp, #8]
   19f50:	ldr	r8, [sp, #16]
   19f54:	add	sp, sp, #20
   19f58:	pop	{pc}		; (ldr pc, [sp], #4)
   19f5c:	ldr	r3, [r4, #20]
   19f60:	add	r2, r3, #1
   19f64:	str	r2, [r4, #20]
   19f68:	mov	r2, #10
   19f6c:	strb	r2, [r3]
   19f70:	ldrb	r3, [r4, #25]
   19f74:	ldr	r7, [r4, #32]
   19f78:	mul	r7, r7, r3
   19f7c:	ldr	r0, [r4, #20]
   19f80:	add	r3, r0, r7
   19f84:	ldr	r2, [r4, #16]
   19f88:	cmp	r2, r3
   19f8c:	bcs	19fa0 <flatcc_json_printer_int8_struct_field@@Base+0x168>
   19f90:	mov	r1, r7
   19f94:	mov	r0, r4
   19f98:	bl	15218 <main@@Base+0x163c>
   19f9c:	b	19e9c <flatcc_json_printer_int8_struct_field@@Base+0x64>
   19fa0:	mov	r2, r7
   19fa4:	mov	r1, #32
   19fa8:	bl	124c4 <memset@plt>
   19fac:	ldr	r3, [r4, #20]
   19fb0:	add	r7, r3, r7
   19fb4:	str	r7, [r4, #20]
   19fb8:	b	19e9c <flatcc_json_printer_int8_struct_field@@Base+0x64>
   19fbc:	mov	r2, r6
   19fc0:	ldr	r1, [sp, #24]
   19fc4:	mov	r0, r4
   19fc8:	bl	15108 <main@@Base+0x152c>
   19fcc:	b	19ee4 <flatcc_json_printer_int8_struct_field@@Base+0xac>

00019fd0 <flatcc_json_printer_int16_struct_field@@Base>:
   19fd0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19fd4:	strd	r6, [sp, #8]
   19fd8:	str	r8, [sp, #16]
   19fdc:	str	lr, [sp, #20]
   19fe0:	mov	r4, r0
   19fe4:	ldr	r6, [sp, #28]
   19fe8:	ldrsh	r5, [r2, r3]
   19fec:	cmp	r1, #0
   19ff0:	beq	1a008 <flatcc_json_printer_int16_struct_field@@Base+0x38>
   19ff4:	ldr	r3, [r0, #20]
   19ff8:	add	r2, r3, #1
   19ffc:	str	r2, [r0, #20]
   1a000:	mov	r2, #44	; 0x2c
   1a004:	strb	r2, [r3]
   1a008:	ldrb	r3, [r4, #25]
   1a00c:	cmp	r3, #0
   1a010:	bne	1a0f4 <flatcc_json_printer_int16_struct_field@@Base+0x124>
   1a014:	ldr	r2, [r4, #20]
   1a018:	ldr	r3, [r4, #16]
   1a01c:	cmp	r2, r3
   1a020:	bcc	1a034 <flatcc_json_printer_int16_struct_field@@Base+0x64>
   1a024:	ldr	r3, [r4, #44]	; 0x2c
   1a028:	mov	r1, #0
   1a02c:	mov	r0, r4
   1a030:	blx	r3
   1a034:	ldr	r3, [r4, #20]
   1a038:	mov	r2, #34	; 0x22
   1a03c:	strb	r2, [r3]
   1a040:	ldrb	r3, [r4, #26]
   1a044:	ldr	r0, [r4, #20]
   1a048:	cmp	r3, #0
   1a04c:	addeq	r0, r0, #1
   1a050:	str	r0, [r4, #20]
   1a054:	add	r3, r0, r6
   1a058:	ldr	r2, [r4, #16]
   1a05c:	cmp	r2, r3
   1a060:	bls	1a154 <flatcc_json_printer_int16_struct_field@@Base+0x184>
   1a064:	mov	r2, r6
   1a068:	ldr	r1, [sp, #24]
   1a06c:	bl	12428 <memcpy@plt>
   1a070:	ldr	r3, [r4, #20]
   1a074:	add	r6, r3, r6
   1a078:	str	r6, [r4, #20]
   1a07c:	ldr	r3, [r4, #20]
   1a080:	mov	r2, #34	; 0x22
   1a084:	strb	r2, [r3]
   1a088:	ldrb	r3, [r4, #26]
   1a08c:	clz	r3, r3
   1a090:	lsr	r3, r3, #5
   1a094:	ldr	r1, [r4, #20]
   1a098:	add	r2, r1, r3
   1a09c:	add	r2, r2, #1
   1a0a0:	str	r2, [r4, #20]
   1a0a4:	mov	r2, #58	; 0x3a
   1a0a8:	strb	r2, [r1, r3]
   1a0ac:	ldr	r3, [r4, #20]
   1a0b0:	mov	r2, #32
   1a0b4:	strb	r2, [r3]
   1a0b8:	ldrb	r3, [r4, #25]
   1a0bc:	ldr	r1, [r4, #20]
   1a0c0:	cmp	r3, #0
   1a0c4:	addne	r1, r1, #1
   1a0c8:	str	r1, [r4, #20]
   1a0cc:	mov	r0, r5
   1a0d0:	bl	14964 <main@@Base+0xd88>
   1a0d4:	ldr	r3, [r4, #20]
   1a0d8:	add	r0, r3, r0
   1a0dc:	str	r0, [r4, #20]
   1a0e0:	ldrd	r4, [sp]
   1a0e4:	ldrd	r6, [sp, #8]
   1a0e8:	ldr	r8, [sp, #16]
   1a0ec:	add	sp, sp, #20
   1a0f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a0f4:	ldr	r3, [r4, #20]
   1a0f8:	add	r2, r3, #1
   1a0fc:	str	r2, [r4, #20]
   1a100:	mov	r2, #10
   1a104:	strb	r2, [r3]
   1a108:	ldrb	r3, [r4, #25]
   1a10c:	ldr	r7, [r4, #32]
   1a110:	mul	r7, r7, r3
   1a114:	ldr	r0, [r4, #20]
   1a118:	add	r3, r0, r7
   1a11c:	ldr	r2, [r4, #16]
   1a120:	cmp	r2, r3
   1a124:	bcs	1a138 <flatcc_json_printer_int16_struct_field@@Base+0x168>
   1a128:	mov	r1, r7
   1a12c:	mov	r0, r4
   1a130:	bl	15218 <main@@Base+0x163c>
   1a134:	b	1a034 <flatcc_json_printer_int16_struct_field@@Base+0x64>
   1a138:	mov	r2, r7
   1a13c:	mov	r1, #32
   1a140:	bl	124c4 <memset@plt>
   1a144:	ldr	r3, [r4, #20]
   1a148:	add	r7, r3, r7
   1a14c:	str	r7, [r4, #20]
   1a150:	b	1a034 <flatcc_json_printer_int16_struct_field@@Base+0x64>
   1a154:	mov	r2, r6
   1a158:	ldr	r1, [sp, #24]
   1a15c:	mov	r0, r4
   1a160:	bl	15108 <main@@Base+0x152c>
   1a164:	b	1a07c <flatcc_json_printer_int16_struct_field@@Base+0xac>

0001a168 <flatcc_json_printer_int32_struct_field@@Base>:
   1a168:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a16c:	strd	r6, [sp, #8]
   1a170:	str	r8, [sp, #16]
   1a174:	str	lr, [sp, #20]
   1a178:	mov	r4, r0
   1a17c:	ldr	r6, [sp, #28]
   1a180:	ldr	r5, [r2, r3]
   1a184:	cmp	r1, #0
   1a188:	beq	1a1a0 <flatcc_json_printer_int32_struct_field@@Base+0x38>
   1a18c:	ldr	r3, [r0, #20]
   1a190:	add	r2, r3, #1
   1a194:	str	r2, [r0, #20]
   1a198:	mov	r2, #44	; 0x2c
   1a19c:	strb	r2, [r3]
   1a1a0:	ldrb	r3, [r4, #25]
   1a1a4:	cmp	r3, #0
   1a1a8:	bne	1a28c <flatcc_json_printer_int32_struct_field@@Base+0x124>
   1a1ac:	ldr	r2, [r4, #20]
   1a1b0:	ldr	r3, [r4, #16]
   1a1b4:	cmp	r2, r3
   1a1b8:	bcc	1a1cc <flatcc_json_printer_int32_struct_field@@Base+0x64>
   1a1bc:	ldr	r3, [r4, #44]	; 0x2c
   1a1c0:	mov	r1, #0
   1a1c4:	mov	r0, r4
   1a1c8:	blx	r3
   1a1cc:	ldr	r3, [r4, #20]
   1a1d0:	mov	r2, #34	; 0x22
   1a1d4:	strb	r2, [r3]
   1a1d8:	ldrb	r3, [r4, #26]
   1a1dc:	ldr	r0, [r4, #20]
   1a1e0:	cmp	r3, #0
   1a1e4:	addeq	r0, r0, #1
   1a1e8:	str	r0, [r4, #20]
   1a1ec:	add	r3, r0, r6
   1a1f0:	ldr	r2, [r4, #16]
   1a1f4:	cmp	r2, r3
   1a1f8:	bls	1a2ec <flatcc_json_printer_int32_struct_field@@Base+0x184>
   1a1fc:	mov	r2, r6
   1a200:	ldr	r1, [sp, #24]
   1a204:	bl	12428 <memcpy@plt>
   1a208:	ldr	r3, [r4, #20]
   1a20c:	add	r6, r3, r6
   1a210:	str	r6, [r4, #20]
   1a214:	ldr	r3, [r4, #20]
   1a218:	mov	r2, #34	; 0x22
   1a21c:	strb	r2, [r3]
   1a220:	ldrb	r3, [r4, #26]
   1a224:	clz	r3, r3
   1a228:	lsr	r3, r3, #5
   1a22c:	ldr	r1, [r4, #20]
   1a230:	add	r2, r1, r3
   1a234:	add	r2, r2, #1
   1a238:	str	r2, [r4, #20]
   1a23c:	mov	r2, #58	; 0x3a
   1a240:	strb	r2, [r1, r3]
   1a244:	ldr	r3, [r4, #20]
   1a248:	mov	r2, #32
   1a24c:	strb	r2, [r3]
   1a250:	ldrb	r3, [r4, #25]
   1a254:	ldr	r1, [r4, #20]
   1a258:	cmp	r3, #0
   1a25c:	addne	r1, r1, #1
   1a260:	str	r1, [r4, #20]
   1a264:	mov	r0, r5
   1a268:	bl	149a4 <main@@Base+0xdc8>
   1a26c:	ldr	r3, [r4, #20]
   1a270:	add	r0, r3, r0
   1a274:	str	r0, [r4, #20]
   1a278:	ldrd	r4, [sp]
   1a27c:	ldrd	r6, [sp, #8]
   1a280:	ldr	r8, [sp, #16]
   1a284:	add	sp, sp, #20
   1a288:	pop	{pc}		; (ldr pc, [sp], #4)
   1a28c:	ldr	r3, [r4, #20]
   1a290:	add	r2, r3, #1
   1a294:	str	r2, [r4, #20]
   1a298:	mov	r2, #10
   1a29c:	strb	r2, [r3]
   1a2a0:	ldrb	r3, [r4, #25]
   1a2a4:	ldr	r7, [r4, #32]
   1a2a8:	mul	r7, r7, r3
   1a2ac:	ldr	r0, [r4, #20]
   1a2b0:	add	r3, r0, r7
   1a2b4:	ldr	r2, [r4, #16]
   1a2b8:	cmp	r2, r3
   1a2bc:	bcs	1a2d0 <flatcc_json_printer_int32_struct_field@@Base+0x168>
   1a2c0:	mov	r1, r7
   1a2c4:	mov	r0, r4
   1a2c8:	bl	15218 <main@@Base+0x163c>
   1a2cc:	b	1a1cc <flatcc_json_printer_int32_struct_field@@Base+0x64>
   1a2d0:	mov	r2, r7
   1a2d4:	mov	r1, #32
   1a2d8:	bl	124c4 <memset@plt>
   1a2dc:	ldr	r3, [r4, #20]
   1a2e0:	add	r7, r3, r7
   1a2e4:	str	r7, [r4, #20]
   1a2e8:	b	1a1cc <flatcc_json_printer_int32_struct_field@@Base+0x64>
   1a2ec:	mov	r2, r6
   1a2f0:	ldr	r1, [sp, #24]
   1a2f4:	mov	r0, r4
   1a2f8:	bl	15108 <main@@Base+0x152c>
   1a2fc:	b	1a214 <flatcc_json_printer_int32_struct_field@@Base+0xac>

0001a300 <flatcc_json_printer_int64_struct_field@@Base>:
   1a300:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a304:	strd	r6, [sp, #8]
   1a308:	str	r8, [sp, #16]
   1a30c:	str	lr, [sp, #20]
   1a310:	mov	r4, r0
   1a314:	ldr	r5, [sp, #28]
   1a318:	ldrd	r6, [r2, r3]
   1a31c:	cmp	r1, #0
   1a320:	beq	1a338 <flatcc_json_printer_int64_struct_field@@Base+0x38>
   1a324:	ldr	r3, [r0, #20]
   1a328:	add	r2, r3, #1
   1a32c:	str	r2, [r0, #20]
   1a330:	mov	r2, #44	; 0x2c
   1a334:	strb	r2, [r3]
   1a338:	ldrb	r3, [r4, #25]
   1a33c:	cmp	r3, #0
   1a340:	bne	1a428 <flatcc_json_printer_int64_struct_field@@Base+0x128>
   1a344:	ldr	r2, [r4, #20]
   1a348:	ldr	r3, [r4, #16]
   1a34c:	cmp	r2, r3
   1a350:	bcc	1a364 <flatcc_json_printer_int64_struct_field@@Base+0x64>
   1a354:	ldr	r3, [r4, #44]	; 0x2c
   1a358:	mov	r1, #0
   1a35c:	mov	r0, r4
   1a360:	blx	r3
   1a364:	ldr	r3, [r4, #20]
   1a368:	mov	r2, #34	; 0x22
   1a36c:	strb	r2, [r3]
   1a370:	ldrb	r3, [r4, #26]
   1a374:	ldr	r0, [r4, #20]
   1a378:	cmp	r3, #0
   1a37c:	addeq	r0, r0, #1
   1a380:	str	r0, [r4, #20]
   1a384:	add	r3, r0, r5
   1a388:	ldr	r2, [r4, #16]
   1a38c:	cmp	r2, r3
   1a390:	bls	1a488 <flatcc_json_printer_int64_struct_field@@Base+0x188>
   1a394:	mov	r2, r5
   1a398:	ldr	r1, [sp, #24]
   1a39c:	bl	12428 <memcpy@plt>
   1a3a0:	ldr	r3, [r4, #20]
   1a3a4:	add	r5, r3, r5
   1a3a8:	str	r5, [r4, #20]
   1a3ac:	ldr	r3, [r4, #20]
   1a3b0:	mov	r2, #34	; 0x22
   1a3b4:	strb	r2, [r3]
   1a3b8:	ldrb	r3, [r4, #26]
   1a3bc:	clz	r3, r3
   1a3c0:	lsr	r3, r3, #5
   1a3c4:	ldr	r1, [r4, #20]
   1a3c8:	add	r2, r1, r3
   1a3cc:	add	r2, r2, #1
   1a3d0:	str	r2, [r4, #20]
   1a3d4:	mov	r2, #58	; 0x3a
   1a3d8:	strb	r2, [r1, r3]
   1a3dc:	ldr	r3, [r4, #20]
   1a3e0:	mov	r2, #32
   1a3e4:	strb	r2, [r3]
   1a3e8:	ldrb	r3, [r4, #25]
   1a3ec:	ldr	r2, [r4, #20]
   1a3f0:	cmp	r3, #0
   1a3f4:	addne	r2, r2, #1
   1a3f8:	str	r2, [r4, #20]
   1a3fc:	mov	r0, r6
   1a400:	mov	r1, r7
   1a404:	bl	149dc <main@@Base+0xe00>
   1a408:	ldr	r3, [r4, #20]
   1a40c:	add	r0, r3, r0
   1a410:	str	r0, [r4, #20]
   1a414:	ldrd	r4, [sp]
   1a418:	ldrd	r6, [sp, #8]
   1a41c:	ldr	r8, [sp, #16]
   1a420:	add	sp, sp, #20
   1a424:	pop	{pc}		; (ldr pc, [sp], #4)
   1a428:	ldr	r3, [r4, #20]
   1a42c:	add	r2, r3, #1
   1a430:	str	r2, [r4, #20]
   1a434:	mov	r2, #10
   1a438:	strb	r2, [r3]
   1a43c:	ldrb	r3, [r4, #25]
   1a440:	ldr	r8, [r4, #32]
   1a444:	mul	r8, r8, r3
   1a448:	ldr	r0, [r4, #20]
   1a44c:	add	r3, r0, r8
   1a450:	ldr	r2, [r4, #16]
   1a454:	cmp	r2, r3
   1a458:	bcs	1a46c <flatcc_json_printer_int64_struct_field@@Base+0x16c>
   1a45c:	mov	r1, r8
   1a460:	mov	r0, r4
   1a464:	bl	15218 <main@@Base+0x163c>
   1a468:	b	1a364 <flatcc_json_printer_int64_struct_field@@Base+0x64>
   1a46c:	mov	r2, r8
   1a470:	mov	r1, #32
   1a474:	bl	124c4 <memset@plt>
   1a478:	ldr	r3, [r4, #20]
   1a47c:	add	r8, r3, r8
   1a480:	str	r8, [r4, #20]
   1a484:	b	1a364 <flatcc_json_printer_int64_struct_field@@Base+0x64>
   1a488:	mov	r2, r5
   1a48c:	ldr	r1, [sp, #24]
   1a490:	mov	r0, r4
   1a494:	bl	15108 <main@@Base+0x152c>
   1a498:	b	1a3ac <flatcc_json_printer_int64_struct_field@@Base+0xac>

0001a49c <flatcc_json_printer_bool_struct_field@@Base>:
   1a49c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a4a0:	strd	r6, [sp, #8]
   1a4a4:	str	r8, [sp, #16]
   1a4a8:	str	lr, [sp, #20]
   1a4ac:	mov	r4, r0
   1a4b0:	ldr	r6, [sp, #28]
   1a4b4:	ldrb	r5, [r2, r3]
   1a4b8:	cmp	r1, #0
   1a4bc:	beq	1a4d4 <flatcc_json_printer_bool_struct_field@@Base+0x38>
   1a4c0:	ldr	r3, [r0, #20]
   1a4c4:	add	r2, r3, #1
   1a4c8:	str	r2, [r0, #20]
   1a4cc:	mov	r2, #44	; 0x2c
   1a4d0:	strb	r2, [r3]
   1a4d4:	ldrb	r3, [r4, #25]
   1a4d8:	cmp	r3, #0
   1a4dc:	bne	1a5c0 <flatcc_json_printer_bool_struct_field@@Base+0x124>
   1a4e0:	ldr	r2, [r4, #20]
   1a4e4:	ldr	r3, [r4, #16]
   1a4e8:	cmp	r2, r3
   1a4ec:	bcc	1a500 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   1a4f0:	ldr	r3, [r4, #44]	; 0x2c
   1a4f4:	mov	r1, #0
   1a4f8:	mov	r0, r4
   1a4fc:	blx	r3
   1a500:	ldr	r3, [r4, #20]
   1a504:	mov	r2, #34	; 0x22
   1a508:	strb	r2, [r3]
   1a50c:	ldrb	r3, [r4, #26]
   1a510:	ldr	r0, [r4, #20]
   1a514:	cmp	r3, #0
   1a518:	addeq	r0, r0, #1
   1a51c:	str	r0, [r4, #20]
   1a520:	add	r3, r0, r6
   1a524:	ldr	r2, [r4, #16]
   1a528:	cmp	r2, r3
   1a52c:	bls	1a620 <flatcc_json_printer_bool_struct_field@@Base+0x184>
   1a530:	mov	r2, r6
   1a534:	ldr	r1, [sp, #24]
   1a538:	bl	12428 <memcpy@plt>
   1a53c:	ldr	r3, [r4, #20]
   1a540:	add	r6, r3, r6
   1a544:	str	r6, [r4, #20]
   1a548:	ldr	r3, [r4, #20]
   1a54c:	mov	r2, #34	; 0x22
   1a550:	strb	r2, [r3]
   1a554:	ldrb	r3, [r4, #26]
   1a558:	clz	r3, r3
   1a55c:	lsr	r3, r3, #5
   1a560:	ldr	r1, [r4, #20]
   1a564:	add	r2, r1, r3
   1a568:	add	r2, r2, #1
   1a56c:	str	r2, [r4, #20]
   1a570:	mov	r2, #58	; 0x3a
   1a574:	strb	r2, [r1, r3]
   1a578:	ldr	r3, [r4, #20]
   1a57c:	mov	r2, #32
   1a580:	strb	r2, [r3]
   1a584:	ldrb	r3, [r4, #25]
   1a588:	ldr	r1, [r4, #20]
   1a58c:	cmp	r3, #0
   1a590:	addne	r1, r1, #1
   1a594:	str	r1, [r4, #20]
   1a598:	mov	r0, r5
   1a59c:	bl	151d0 <main@@Base+0x15f4>
   1a5a0:	ldr	r3, [r4, #20]
   1a5a4:	add	r0, r3, r0
   1a5a8:	str	r0, [r4, #20]
   1a5ac:	ldrd	r4, [sp]
   1a5b0:	ldrd	r6, [sp, #8]
   1a5b4:	ldr	r8, [sp, #16]
   1a5b8:	add	sp, sp, #20
   1a5bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a5c0:	ldr	r3, [r4, #20]
   1a5c4:	add	r2, r3, #1
   1a5c8:	str	r2, [r4, #20]
   1a5cc:	mov	r2, #10
   1a5d0:	strb	r2, [r3]
   1a5d4:	ldrb	r3, [r4, #25]
   1a5d8:	ldr	r7, [r4, #32]
   1a5dc:	mul	r7, r7, r3
   1a5e0:	ldr	r0, [r4, #20]
   1a5e4:	add	r3, r0, r7
   1a5e8:	ldr	r2, [r4, #16]
   1a5ec:	cmp	r2, r3
   1a5f0:	bcs	1a604 <flatcc_json_printer_bool_struct_field@@Base+0x168>
   1a5f4:	mov	r1, r7
   1a5f8:	mov	r0, r4
   1a5fc:	bl	15218 <main@@Base+0x163c>
   1a600:	b	1a500 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   1a604:	mov	r2, r7
   1a608:	mov	r1, #32
   1a60c:	bl	124c4 <memset@plt>
   1a610:	ldr	r3, [r4, #20]
   1a614:	add	r7, r3, r7
   1a618:	str	r7, [r4, #20]
   1a61c:	b	1a500 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   1a620:	mov	r2, r6
   1a624:	ldr	r1, [sp, #24]
   1a628:	mov	r0, r4
   1a62c:	bl	15108 <main@@Base+0x152c>
   1a630:	b	1a548 <flatcc_json_printer_bool_struct_field@@Base+0xac>

0001a634 <flatcc_json_printer_float_struct_field@@Base>:
   1a634:	strd	r4, [sp, #-16]!
   1a638:	str	r6, [sp, #8]
   1a63c:	str	lr, [sp, #12]
   1a640:	vpush	{d8}
   1a644:	mov	r4, r0
   1a648:	ldr	r5, [sp, #28]
   1a64c:	add	r3, r2, r3
   1a650:	vldr	s16, [r3]
   1a654:	cmp	r1, #0
   1a658:	beq	1a670 <flatcc_json_printer_float_struct_field@@Base+0x3c>
   1a65c:	ldr	r3, [r0, #20]
   1a660:	add	r2, r3, #1
   1a664:	str	r2, [r0, #20]
   1a668:	mov	r2, #44	; 0x2c
   1a66c:	strb	r2, [r3]
   1a670:	ldrb	r3, [r4, #25]
   1a674:	cmp	r3, #0
   1a678:	bne	1a75c <flatcc_json_printer_float_struct_field@@Base+0x128>
   1a67c:	ldr	r2, [r4, #20]
   1a680:	ldr	r3, [r4, #16]
   1a684:	cmp	r2, r3
   1a688:	bcc	1a69c <flatcc_json_printer_float_struct_field@@Base+0x68>
   1a68c:	ldr	r3, [r4, #44]	; 0x2c
   1a690:	mov	r1, #0
   1a694:	mov	r0, r4
   1a698:	blx	r3
   1a69c:	ldr	r3, [r4, #20]
   1a6a0:	mov	r2, #34	; 0x22
   1a6a4:	strb	r2, [r3]
   1a6a8:	ldrb	r3, [r4, #26]
   1a6ac:	ldr	r0, [r4, #20]
   1a6b0:	cmp	r3, #0
   1a6b4:	addeq	r0, r0, #1
   1a6b8:	str	r0, [r4, #20]
   1a6bc:	add	r3, r0, r5
   1a6c0:	ldr	r2, [r4, #16]
   1a6c4:	cmp	r2, r3
   1a6c8:	bls	1a7bc <flatcc_json_printer_float_struct_field@@Base+0x188>
   1a6cc:	mov	r2, r5
   1a6d0:	ldr	r1, [sp, #24]
   1a6d4:	bl	12428 <memcpy@plt>
   1a6d8:	ldr	r3, [r4, #20]
   1a6dc:	add	r5, r3, r5
   1a6e0:	str	r5, [r4, #20]
   1a6e4:	ldr	r3, [r4, #20]
   1a6e8:	mov	r2, #34	; 0x22
   1a6ec:	strb	r2, [r3]
   1a6f0:	ldrb	r3, [r4, #26]
   1a6f4:	clz	r3, r3
   1a6f8:	lsr	r3, r3, #5
   1a6fc:	ldr	r1, [r4, #20]
   1a700:	add	r2, r1, r3
   1a704:	add	r2, r2, #1
   1a708:	str	r2, [r4, #20]
   1a70c:	mov	r2, #58	; 0x3a
   1a710:	strb	r2, [r1, r3]
   1a714:	ldr	r3, [r4, #20]
   1a718:	mov	r2, #32
   1a71c:	strb	r2, [r3]
   1a720:	ldrb	r3, [r4, #25]
   1a724:	ldr	r0, [r4, #20]
   1a728:	cmp	r3, #0
   1a72c:	addne	r0, r0, #1
   1a730:	str	r0, [r4, #20]
   1a734:	vcvt.f64.f32	d0, s16
   1a738:	bl	1596c <main@@Base+0x1d90>
   1a73c:	ldr	r3, [r4, #20]
   1a740:	add	r0, r3, r0
   1a744:	str	r0, [r4, #20]
   1a748:	vpop	{d8}
   1a74c:	ldrd	r4, [sp]
   1a750:	ldr	r6, [sp, #8]
   1a754:	add	sp, sp, #12
   1a758:	pop	{pc}		; (ldr pc, [sp], #4)
   1a75c:	ldr	r3, [r4, #20]
   1a760:	add	r2, r3, #1
   1a764:	str	r2, [r4, #20]
   1a768:	mov	r2, #10
   1a76c:	strb	r2, [r3]
   1a770:	ldrb	r3, [r4, #25]
   1a774:	ldr	r6, [r4, #32]
   1a778:	mul	r6, r6, r3
   1a77c:	ldr	r0, [r4, #20]
   1a780:	add	r3, r0, r6
   1a784:	ldr	r2, [r4, #16]
   1a788:	cmp	r2, r3
   1a78c:	bcs	1a7a0 <flatcc_json_printer_float_struct_field@@Base+0x16c>
   1a790:	mov	r1, r6
   1a794:	mov	r0, r4
   1a798:	bl	15218 <main@@Base+0x163c>
   1a79c:	b	1a69c <flatcc_json_printer_float_struct_field@@Base+0x68>
   1a7a0:	mov	r2, r6
   1a7a4:	mov	r1, #32
   1a7a8:	bl	124c4 <memset@plt>
   1a7ac:	ldr	r3, [r4, #20]
   1a7b0:	add	r6, r3, r6
   1a7b4:	str	r6, [r4, #20]
   1a7b8:	b	1a69c <flatcc_json_printer_float_struct_field@@Base+0x68>
   1a7bc:	mov	r2, r5
   1a7c0:	ldr	r1, [sp, #24]
   1a7c4:	mov	r0, r4
   1a7c8:	bl	15108 <main@@Base+0x152c>
   1a7cc:	b	1a6e4 <flatcc_json_printer_float_struct_field@@Base+0xb0>

0001a7d0 <flatcc_json_printer_double_struct_field@@Base>:
   1a7d0:	strd	r4, [sp, #-16]!
   1a7d4:	str	r6, [sp, #8]
   1a7d8:	str	lr, [sp, #12]
   1a7dc:	vpush	{d8}
   1a7e0:	mov	r4, r0
   1a7e4:	ldr	r5, [sp, #28]
   1a7e8:	add	r3, r2, r3
   1a7ec:	vldr	d8, [r3]
   1a7f0:	cmp	r1, #0
   1a7f4:	beq	1a80c <flatcc_json_printer_double_struct_field@@Base+0x3c>
   1a7f8:	ldr	r3, [r0, #20]
   1a7fc:	add	r2, r3, #1
   1a800:	str	r2, [r0, #20]
   1a804:	mov	r2, #44	; 0x2c
   1a808:	strb	r2, [r3]
   1a80c:	ldrb	r3, [r4, #25]
   1a810:	cmp	r3, #0
   1a814:	bne	1a8f8 <flatcc_json_printer_double_struct_field@@Base+0x128>
   1a818:	ldr	r2, [r4, #20]
   1a81c:	ldr	r3, [r4, #16]
   1a820:	cmp	r2, r3
   1a824:	bcc	1a838 <flatcc_json_printer_double_struct_field@@Base+0x68>
   1a828:	ldr	r3, [r4, #44]	; 0x2c
   1a82c:	mov	r1, #0
   1a830:	mov	r0, r4
   1a834:	blx	r3
   1a838:	ldr	r3, [r4, #20]
   1a83c:	mov	r2, #34	; 0x22
   1a840:	strb	r2, [r3]
   1a844:	ldrb	r3, [r4, #26]
   1a848:	ldr	r0, [r4, #20]
   1a84c:	cmp	r3, #0
   1a850:	addeq	r0, r0, #1
   1a854:	str	r0, [r4, #20]
   1a858:	add	r3, r0, r5
   1a85c:	ldr	r2, [r4, #16]
   1a860:	cmp	r2, r3
   1a864:	bls	1a958 <flatcc_json_printer_double_struct_field@@Base+0x188>
   1a868:	mov	r2, r5
   1a86c:	ldr	r1, [sp, #24]
   1a870:	bl	12428 <memcpy@plt>
   1a874:	ldr	r3, [r4, #20]
   1a878:	add	r5, r3, r5
   1a87c:	str	r5, [r4, #20]
   1a880:	ldr	r3, [r4, #20]
   1a884:	mov	r2, #34	; 0x22
   1a888:	strb	r2, [r3]
   1a88c:	ldrb	r3, [r4, #26]
   1a890:	clz	r3, r3
   1a894:	lsr	r3, r3, #5
   1a898:	ldr	r1, [r4, #20]
   1a89c:	add	r2, r1, r3
   1a8a0:	add	r2, r2, #1
   1a8a4:	str	r2, [r4, #20]
   1a8a8:	mov	r2, #58	; 0x3a
   1a8ac:	strb	r2, [r1, r3]
   1a8b0:	ldr	r3, [r4, #20]
   1a8b4:	mov	r2, #32
   1a8b8:	strb	r2, [r3]
   1a8bc:	ldrb	r3, [r4, #25]
   1a8c0:	ldr	r0, [r4, #20]
   1a8c4:	cmp	r3, #0
   1a8c8:	addne	r0, r0, #1
   1a8cc:	str	r0, [r4, #20]
   1a8d0:	vmov.f64	d0, d8
   1a8d4:	bl	1596c <main@@Base+0x1d90>
   1a8d8:	ldr	r3, [r4, #20]
   1a8dc:	add	r0, r3, r0
   1a8e0:	str	r0, [r4, #20]
   1a8e4:	vpop	{d8}
   1a8e8:	ldrd	r4, [sp]
   1a8ec:	ldr	r6, [sp, #8]
   1a8f0:	add	sp, sp, #12
   1a8f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a8f8:	ldr	r3, [r4, #20]
   1a8fc:	add	r2, r3, #1
   1a900:	str	r2, [r4, #20]
   1a904:	mov	r2, #10
   1a908:	strb	r2, [r3]
   1a90c:	ldrb	r3, [r4, #25]
   1a910:	ldr	r6, [r4, #32]
   1a914:	mul	r6, r6, r3
   1a918:	ldr	r0, [r4, #20]
   1a91c:	add	r3, r0, r6
   1a920:	ldr	r2, [r4, #16]
   1a924:	cmp	r2, r3
   1a928:	bcs	1a93c <flatcc_json_printer_double_struct_field@@Base+0x16c>
   1a92c:	mov	r1, r6
   1a930:	mov	r0, r4
   1a934:	bl	15218 <main@@Base+0x163c>
   1a938:	b	1a838 <flatcc_json_printer_double_struct_field@@Base+0x68>
   1a93c:	mov	r2, r6
   1a940:	mov	r1, #32
   1a944:	bl	124c4 <memset@plt>
   1a948:	ldr	r3, [r4, #20]
   1a94c:	add	r6, r3, r6
   1a950:	str	r6, [r4, #20]
   1a954:	b	1a838 <flatcc_json_printer_double_struct_field@@Base+0x68>
   1a958:	mov	r2, r5
   1a95c:	ldr	r1, [sp, #24]
   1a960:	mov	r0, r4
   1a964:	bl	15108 <main@@Base+0x152c>
   1a968:	b	1a880 <flatcc_json_printer_double_struct_field@@Base+0xb0>

0001a96c <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   1a96c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a970:	strd	r6, [sp, #8]
   1a974:	str	r8, [sp, #16]
   1a978:	str	lr, [sp, #20]
   1a97c:	mov	r4, r0
   1a980:	ldr	r6, [sp, #28]
   1a984:	ldrb	r5, [r2, r3]
   1a988:	cmp	r1, #0
   1a98c:	beq	1a9a4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x38>
   1a990:	ldr	r3, [r0, #20]
   1a994:	add	r2, r3, #1
   1a998:	str	r2, [r0, #20]
   1a99c:	mov	r2, #44	; 0x2c
   1a9a0:	strb	r2, [r3]
   1a9a4:	ldrb	r3, [r4, #25]
   1a9a8:	cmp	r3, #0
   1a9ac:	bne	1aa98 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x12c>
   1a9b0:	ldr	r2, [r4, #20]
   1a9b4:	ldr	r3, [r4, #16]
   1a9b8:	cmp	r2, r3
   1a9bc:	bcc	1a9d0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x64>
   1a9c0:	ldr	r3, [r4, #44]	; 0x2c
   1a9c4:	mov	r1, #0
   1a9c8:	mov	r0, r4
   1a9cc:	blx	r3
   1a9d0:	ldr	r3, [r4, #20]
   1a9d4:	mov	r2, #34	; 0x22
   1a9d8:	strb	r2, [r3]
   1a9dc:	ldrb	r3, [r4, #26]
   1a9e0:	ldr	r0, [r4, #20]
   1a9e4:	cmp	r3, #0
   1a9e8:	addeq	r0, r0, #1
   1a9ec:	str	r0, [r4, #20]
   1a9f0:	add	r3, r0, r6
   1a9f4:	ldr	r2, [r4, #16]
   1a9f8:	cmp	r2, r3
   1a9fc:	bls	1aaf8 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x18c>
   1aa00:	mov	r2, r6
   1aa04:	ldr	r1, [sp, #24]
   1aa08:	bl	12428 <memcpy@plt>
   1aa0c:	ldr	r3, [r4, #20]
   1aa10:	add	r6, r3, r6
   1aa14:	str	r6, [r4, #20]
   1aa18:	ldr	r3, [r4, #20]
   1aa1c:	mov	r2, #34	; 0x22
   1aa20:	strb	r2, [r3]
   1aa24:	ldrb	r3, [r4, #26]
   1aa28:	clz	r3, r3
   1aa2c:	lsr	r3, r3, #5
   1aa30:	ldr	r1, [r4, #20]
   1aa34:	add	r2, r1, r3
   1aa38:	add	r2, r2, #1
   1aa3c:	str	r2, [r4, #20]
   1aa40:	mov	r2, #58	; 0x3a
   1aa44:	strb	r2, [r1, r3]
   1aa48:	ldr	r3, [r4, #20]
   1aa4c:	mov	r2, #32
   1aa50:	strb	r2, [r3]
   1aa54:	ldrb	r3, [r4, #25]
   1aa58:	ldr	r1, [r4, #20]
   1aa5c:	cmp	r3, #0
   1aa60:	addne	r1, r1, #1
   1aa64:	str	r1, [r4, #20]
   1aa68:	ldrb	r3, [r4, #27]
   1aa6c:	cmp	r3, #0
   1aa70:	bne	1ab0c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x1a0>
   1aa74:	mov	r1, r5
   1aa78:	mov	r0, r4
   1aa7c:	ldr	r3, [sp, #32]
   1aa80:	blx	r3
   1aa84:	ldrd	r4, [sp]
   1aa88:	ldrd	r6, [sp, #8]
   1aa8c:	ldr	r8, [sp, #16]
   1aa90:	add	sp, sp, #20
   1aa94:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa98:	ldr	r3, [r4, #20]
   1aa9c:	add	r2, r3, #1
   1aaa0:	str	r2, [r4, #20]
   1aaa4:	mov	r2, #10
   1aaa8:	strb	r2, [r3]
   1aaac:	ldrb	r3, [r4, #25]
   1aab0:	ldr	r7, [r4, #32]
   1aab4:	mul	r7, r7, r3
   1aab8:	ldr	r0, [r4, #20]
   1aabc:	add	r3, r0, r7
   1aac0:	ldr	r2, [r4, #16]
   1aac4:	cmp	r2, r3
   1aac8:	bcs	1aadc <flatcc_json_printer_uint8_enum_struct_field@@Base+0x170>
   1aacc:	mov	r1, r7
   1aad0:	mov	r0, r4
   1aad4:	bl	15218 <main@@Base+0x163c>
   1aad8:	b	1a9d0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x64>
   1aadc:	mov	r2, r7
   1aae0:	mov	r1, #32
   1aae4:	bl	124c4 <memset@plt>
   1aae8:	ldr	r3, [r4, #20]
   1aaec:	add	r7, r3, r7
   1aaf0:	str	r7, [r4, #20]
   1aaf4:	b	1a9d0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x64>
   1aaf8:	mov	r2, r6
   1aafc:	ldr	r1, [sp, #24]
   1ab00:	mov	r0, r4
   1ab04:	bl	15108 <main@@Base+0x152c>
   1ab08:	b	1aa18 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xac>
   1ab0c:	mov	r0, r5
   1ab10:	bl	13c90 <main@@Base+0xb4>
   1ab14:	ldr	r3, [r4, #20]
   1ab18:	add	r0, r3, r0
   1ab1c:	str	r0, [r4, #20]
   1ab20:	b	1aa84 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x118>

0001ab24 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   1ab24:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1ab28:	strd	r6, [sp, #8]
   1ab2c:	str	r8, [sp, #16]
   1ab30:	str	lr, [sp, #20]
   1ab34:	mov	r4, r0
   1ab38:	ldr	r6, [sp, #28]
   1ab3c:	ldrh	r5, [r2, r3]
   1ab40:	cmp	r1, #0
   1ab44:	beq	1ab5c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x38>
   1ab48:	ldr	r3, [r0, #20]
   1ab4c:	add	r2, r3, #1
   1ab50:	str	r2, [r0, #20]
   1ab54:	mov	r2, #44	; 0x2c
   1ab58:	strb	r2, [r3]
   1ab5c:	ldrb	r3, [r4, #25]
   1ab60:	cmp	r3, #0
   1ab64:	bne	1ac50 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x12c>
   1ab68:	ldr	r2, [r4, #20]
   1ab6c:	ldr	r3, [r4, #16]
   1ab70:	cmp	r2, r3
   1ab74:	bcc	1ab88 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x64>
   1ab78:	ldr	r3, [r4, #44]	; 0x2c
   1ab7c:	mov	r1, #0
   1ab80:	mov	r0, r4
   1ab84:	blx	r3
   1ab88:	ldr	r3, [r4, #20]
   1ab8c:	mov	r2, #34	; 0x22
   1ab90:	strb	r2, [r3]
   1ab94:	ldrb	r3, [r4, #26]
   1ab98:	ldr	r0, [r4, #20]
   1ab9c:	cmp	r3, #0
   1aba0:	addeq	r0, r0, #1
   1aba4:	str	r0, [r4, #20]
   1aba8:	add	r3, r0, r6
   1abac:	ldr	r2, [r4, #16]
   1abb0:	cmp	r2, r3
   1abb4:	bls	1acb0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x18c>
   1abb8:	mov	r2, r6
   1abbc:	ldr	r1, [sp, #24]
   1abc0:	bl	12428 <memcpy@plt>
   1abc4:	ldr	r3, [r4, #20]
   1abc8:	add	r6, r3, r6
   1abcc:	str	r6, [r4, #20]
   1abd0:	ldr	r3, [r4, #20]
   1abd4:	mov	r2, #34	; 0x22
   1abd8:	strb	r2, [r3]
   1abdc:	ldrb	r3, [r4, #26]
   1abe0:	clz	r3, r3
   1abe4:	lsr	r3, r3, #5
   1abe8:	ldr	r1, [r4, #20]
   1abec:	add	r2, r1, r3
   1abf0:	add	r2, r2, #1
   1abf4:	str	r2, [r4, #20]
   1abf8:	mov	r2, #58	; 0x3a
   1abfc:	strb	r2, [r1, r3]
   1ac00:	ldr	r3, [r4, #20]
   1ac04:	mov	r2, #32
   1ac08:	strb	r2, [r3]
   1ac0c:	ldrb	r3, [r4, #25]
   1ac10:	ldr	r1, [r4, #20]
   1ac14:	cmp	r3, #0
   1ac18:	addne	r1, r1, #1
   1ac1c:	str	r1, [r4, #20]
   1ac20:	ldrb	r3, [r4, #27]
   1ac24:	cmp	r3, #0
   1ac28:	bne	1acc4 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x1a0>
   1ac2c:	mov	r1, r5
   1ac30:	mov	r0, r4
   1ac34:	ldr	r3, [sp, #32]
   1ac38:	blx	r3
   1ac3c:	ldrd	r4, [sp]
   1ac40:	ldrd	r6, [sp, #8]
   1ac44:	ldr	r8, [sp, #16]
   1ac48:	add	sp, sp, #20
   1ac4c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac50:	ldr	r3, [r4, #20]
   1ac54:	add	r2, r3, #1
   1ac58:	str	r2, [r4, #20]
   1ac5c:	mov	r2, #10
   1ac60:	strb	r2, [r3]
   1ac64:	ldrb	r3, [r4, #25]
   1ac68:	ldr	r7, [r4, #32]
   1ac6c:	mul	r7, r7, r3
   1ac70:	ldr	r0, [r4, #20]
   1ac74:	add	r3, r0, r7
   1ac78:	ldr	r2, [r4, #16]
   1ac7c:	cmp	r2, r3
   1ac80:	bcs	1ac94 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x170>
   1ac84:	mov	r1, r7
   1ac88:	mov	r0, r4
   1ac8c:	bl	15218 <main@@Base+0x163c>
   1ac90:	b	1ab88 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x64>
   1ac94:	mov	r2, r7
   1ac98:	mov	r1, #32
   1ac9c:	bl	124c4 <memset@plt>
   1aca0:	ldr	r3, [r4, #20]
   1aca4:	add	r7, r3, r7
   1aca8:	str	r7, [r4, #20]
   1acac:	b	1ab88 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x64>
   1acb0:	mov	r2, r6
   1acb4:	ldr	r1, [sp, #24]
   1acb8:	mov	r0, r4
   1acbc:	bl	15108 <main@@Base+0x152c>
   1acc0:	b	1abd0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xac>
   1acc4:	mov	r0, r5
   1acc8:	bl	13d50 <main@@Base+0x174>
   1accc:	ldr	r3, [r4, #20]
   1acd0:	add	r0, r3, r0
   1acd4:	str	r0, [r4, #20]
   1acd8:	b	1ac3c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x118>

0001acdc <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   1acdc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1ace0:	strd	r6, [sp, #8]
   1ace4:	str	r8, [sp, #16]
   1ace8:	str	lr, [sp, #20]
   1acec:	mov	r4, r0
   1acf0:	ldr	r6, [sp, #28]
   1acf4:	ldr	r5, [r2, r3]
   1acf8:	cmp	r1, #0
   1acfc:	beq	1ad14 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x38>
   1ad00:	ldr	r3, [r0, #20]
   1ad04:	add	r2, r3, #1
   1ad08:	str	r2, [r0, #20]
   1ad0c:	mov	r2, #44	; 0x2c
   1ad10:	strb	r2, [r3]
   1ad14:	ldrb	r3, [r4, #25]
   1ad18:	cmp	r3, #0
   1ad1c:	bne	1ae08 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x12c>
   1ad20:	ldr	r2, [r4, #20]
   1ad24:	ldr	r3, [r4, #16]
   1ad28:	cmp	r2, r3
   1ad2c:	bcc	1ad40 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x64>
   1ad30:	ldr	r3, [r4, #44]	; 0x2c
   1ad34:	mov	r1, #0
   1ad38:	mov	r0, r4
   1ad3c:	blx	r3
   1ad40:	ldr	r3, [r4, #20]
   1ad44:	mov	r2, #34	; 0x22
   1ad48:	strb	r2, [r3]
   1ad4c:	ldrb	r3, [r4, #26]
   1ad50:	ldr	r0, [r4, #20]
   1ad54:	cmp	r3, #0
   1ad58:	addeq	r0, r0, #1
   1ad5c:	str	r0, [r4, #20]
   1ad60:	add	r3, r0, r6
   1ad64:	ldr	r2, [r4, #16]
   1ad68:	cmp	r2, r3
   1ad6c:	bls	1ae68 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x18c>
   1ad70:	mov	r2, r6
   1ad74:	ldr	r1, [sp, #24]
   1ad78:	bl	12428 <memcpy@plt>
   1ad7c:	ldr	r3, [r4, #20]
   1ad80:	add	r6, r3, r6
   1ad84:	str	r6, [r4, #20]
   1ad88:	ldr	r3, [r4, #20]
   1ad8c:	mov	r2, #34	; 0x22
   1ad90:	strb	r2, [r3]
   1ad94:	ldrb	r3, [r4, #26]
   1ad98:	clz	r3, r3
   1ad9c:	lsr	r3, r3, #5
   1ada0:	ldr	r1, [r4, #20]
   1ada4:	add	r2, r1, r3
   1ada8:	add	r2, r2, #1
   1adac:	str	r2, [r4, #20]
   1adb0:	mov	r2, #58	; 0x3a
   1adb4:	strb	r2, [r1, r3]
   1adb8:	ldr	r3, [r4, #20]
   1adbc:	mov	r2, #32
   1adc0:	strb	r2, [r3]
   1adc4:	ldrb	r3, [r4, #25]
   1adc8:	ldr	r1, [r4, #20]
   1adcc:	cmp	r3, #0
   1add0:	addne	r1, r1, #1
   1add4:	str	r1, [r4, #20]
   1add8:	ldrb	r3, [r4, #27]
   1addc:	cmp	r3, #0
   1ade0:	bne	1ae7c <flatcc_json_printer_uint32_enum_struct_field@@Base+0x1a0>
   1ade4:	mov	r1, r5
   1ade8:	mov	r0, r4
   1adec:	ldr	r3, [sp, #32]
   1adf0:	blx	r3
   1adf4:	ldrd	r4, [sp]
   1adf8:	ldrd	r6, [sp, #8]
   1adfc:	ldr	r8, [sp, #16]
   1ae00:	add	sp, sp, #20
   1ae04:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae08:	ldr	r3, [r4, #20]
   1ae0c:	add	r2, r3, #1
   1ae10:	str	r2, [r4, #20]
   1ae14:	mov	r2, #10
   1ae18:	strb	r2, [r3]
   1ae1c:	ldrb	r3, [r4, #25]
   1ae20:	ldr	r7, [r4, #32]
   1ae24:	mul	r7, r7, r3
   1ae28:	ldr	r0, [r4, #20]
   1ae2c:	add	r3, r0, r7
   1ae30:	ldr	r2, [r4, #16]
   1ae34:	cmp	r2, r3
   1ae38:	bcs	1ae4c <flatcc_json_printer_uint32_enum_struct_field@@Base+0x170>
   1ae3c:	mov	r1, r7
   1ae40:	mov	r0, r4
   1ae44:	bl	15218 <main@@Base+0x163c>
   1ae48:	b	1ad40 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x64>
   1ae4c:	mov	r2, r7
   1ae50:	mov	r1, #32
   1ae54:	bl	124c4 <memset@plt>
   1ae58:	ldr	r3, [r4, #20]
   1ae5c:	add	r7, r3, r7
   1ae60:	str	r7, [r4, #20]
   1ae64:	b	1ad40 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x64>
   1ae68:	mov	r2, r6
   1ae6c:	ldr	r1, [sp, #24]
   1ae70:	mov	r0, r4
   1ae74:	bl	15108 <main@@Base+0x152c>
   1ae78:	b	1ad88 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xac>
   1ae7c:	mov	r0, r5
   1ae80:	bl	13ee4 <main@@Base+0x308>
   1ae84:	ldr	r3, [r4, #20]
   1ae88:	add	r0, r3, r0
   1ae8c:	str	r0, [r4, #20]
   1ae90:	b	1adf4 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x118>

0001ae94 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   1ae94:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1ae98:	strd	r6, [sp, #8]
   1ae9c:	str	r8, [sp, #16]
   1aea0:	str	lr, [sp, #20]
   1aea4:	mov	r4, r0
   1aea8:	ldr	r5, [sp, #28]
   1aeac:	ldrd	r6, [r2, r3]
   1aeb0:	cmp	r1, #0
   1aeb4:	beq	1aecc <flatcc_json_printer_uint64_enum_struct_field@@Base+0x38>
   1aeb8:	ldr	r3, [r0, #20]
   1aebc:	add	r2, r3, #1
   1aec0:	str	r2, [r0, #20]
   1aec4:	mov	r2, #44	; 0x2c
   1aec8:	strb	r2, [r3]
   1aecc:	ldrb	r3, [r4, #25]
   1aed0:	cmp	r3, #0
   1aed4:	bne	1afc4 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x130>
   1aed8:	ldr	r2, [r4, #20]
   1aedc:	ldr	r3, [r4, #16]
   1aee0:	cmp	r2, r3
   1aee4:	bcc	1aef8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x64>
   1aee8:	ldr	r3, [r4, #44]	; 0x2c
   1aeec:	mov	r1, #0
   1aef0:	mov	r0, r4
   1aef4:	blx	r3
   1aef8:	ldr	r3, [r4, #20]
   1aefc:	mov	r2, #34	; 0x22
   1af00:	strb	r2, [r3]
   1af04:	ldrb	r3, [r4, #26]
   1af08:	ldr	r0, [r4, #20]
   1af0c:	cmp	r3, #0
   1af10:	addeq	r0, r0, #1
   1af14:	str	r0, [r4, #20]
   1af18:	add	r3, r0, r5
   1af1c:	ldr	r2, [r4, #16]
   1af20:	cmp	r2, r3
   1af24:	bls	1b024 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x190>
   1af28:	mov	r2, r5
   1af2c:	ldr	r1, [sp, #24]
   1af30:	bl	12428 <memcpy@plt>
   1af34:	ldr	r3, [r4, #20]
   1af38:	add	r5, r3, r5
   1af3c:	str	r5, [r4, #20]
   1af40:	ldr	r3, [r4, #20]
   1af44:	mov	r2, #34	; 0x22
   1af48:	strb	r2, [r3]
   1af4c:	ldrb	r3, [r4, #26]
   1af50:	clz	r3, r3
   1af54:	lsr	r3, r3, #5
   1af58:	ldr	r1, [r4, #20]
   1af5c:	add	r2, r1, r3
   1af60:	add	r2, r2, #1
   1af64:	str	r2, [r4, #20]
   1af68:	mov	r2, #58	; 0x3a
   1af6c:	strb	r2, [r1, r3]
   1af70:	ldr	r3, [r4, #20]
   1af74:	mov	r2, #32
   1af78:	strb	r2, [r3]
   1af7c:	ldrb	r3, [r4, #25]
   1af80:	ldr	r2, [r4, #20]
   1af84:	cmp	r3, #0
   1af88:	addne	r2, r2, #1
   1af8c:	str	r2, [r4, #20]
   1af90:	ldrb	r3, [r4, #27]
   1af94:	cmp	r3, #0
   1af98:	bne	1b038 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x1a4>
   1af9c:	mov	r2, r6
   1afa0:	mov	r3, r7
   1afa4:	mov	r0, r4
   1afa8:	ldr	r1, [sp, #32]
   1afac:	blx	r1
   1afb0:	ldrd	r4, [sp]
   1afb4:	ldrd	r6, [sp, #8]
   1afb8:	ldr	r8, [sp, #16]
   1afbc:	add	sp, sp, #20
   1afc0:	pop	{pc}		; (ldr pc, [sp], #4)
   1afc4:	ldr	r3, [r4, #20]
   1afc8:	add	r2, r3, #1
   1afcc:	str	r2, [r4, #20]
   1afd0:	mov	r2, #10
   1afd4:	strb	r2, [r3]
   1afd8:	ldrb	r3, [r4, #25]
   1afdc:	ldr	r8, [r4, #32]
   1afe0:	mul	r8, r8, r3
   1afe4:	ldr	r0, [r4, #20]
   1afe8:	add	r3, r0, r8
   1afec:	ldr	r2, [r4, #16]
   1aff0:	cmp	r2, r3
   1aff4:	bcs	1b008 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x174>
   1aff8:	mov	r1, r8
   1affc:	mov	r0, r4
   1b000:	bl	15218 <main@@Base+0x163c>
   1b004:	b	1aef8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x64>
   1b008:	mov	r2, r8
   1b00c:	mov	r1, #32
   1b010:	bl	124c4 <memset@plt>
   1b014:	ldr	r3, [r4, #20]
   1b018:	add	r8, r3, r8
   1b01c:	str	r8, [r4, #20]
   1b020:	b	1aef8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x64>
   1b024:	mov	r2, r5
   1b028:	ldr	r1, [sp, #24]
   1b02c:	mov	r0, r4
   1b030:	bl	15108 <main@@Base+0x152c>
   1b034:	b	1af40 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xac>
   1b038:	mov	r0, r6
   1b03c:	mov	r1, r7
   1b040:	bl	14248 <main@@Base+0x66c>
   1b044:	ldr	r3, [r4, #20]
   1b048:	add	r0, r3, r0
   1b04c:	str	r0, [r4, #20]
   1b050:	b	1afb0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x11c>

0001b054 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   1b054:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b058:	strd	r6, [sp, #8]
   1b05c:	str	r8, [sp, #16]
   1b060:	str	lr, [sp, #20]
   1b064:	mov	r4, r0
   1b068:	ldr	r6, [sp, #28]
   1b06c:	ldrsb	r5, [r2, r3]
   1b070:	cmp	r1, #0
   1b074:	beq	1b08c <flatcc_json_printer_int8_enum_struct_field@@Base+0x38>
   1b078:	ldr	r3, [r0, #20]
   1b07c:	add	r2, r3, #1
   1b080:	str	r2, [r0, #20]
   1b084:	mov	r2, #44	; 0x2c
   1b088:	strb	r2, [r3]
   1b08c:	ldrb	r3, [r4, #25]
   1b090:	cmp	r3, #0
   1b094:	bne	1b180 <flatcc_json_printer_int8_enum_struct_field@@Base+0x12c>
   1b098:	ldr	r2, [r4, #20]
   1b09c:	ldr	r3, [r4, #16]
   1b0a0:	cmp	r2, r3
   1b0a4:	bcc	1b0b8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x64>
   1b0a8:	ldr	r3, [r4, #44]	; 0x2c
   1b0ac:	mov	r1, #0
   1b0b0:	mov	r0, r4
   1b0b4:	blx	r3
   1b0b8:	ldr	r3, [r4, #20]
   1b0bc:	mov	r2, #34	; 0x22
   1b0c0:	strb	r2, [r3]
   1b0c4:	ldrb	r3, [r4, #26]
   1b0c8:	ldr	r0, [r4, #20]
   1b0cc:	cmp	r3, #0
   1b0d0:	addeq	r0, r0, #1
   1b0d4:	str	r0, [r4, #20]
   1b0d8:	add	r3, r0, r6
   1b0dc:	ldr	r2, [r4, #16]
   1b0e0:	cmp	r2, r3
   1b0e4:	bls	1b1e0 <flatcc_json_printer_int8_enum_struct_field@@Base+0x18c>
   1b0e8:	mov	r2, r6
   1b0ec:	ldr	r1, [sp, #24]
   1b0f0:	bl	12428 <memcpy@plt>
   1b0f4:	ldr	r3, [r4, #20]
   1b0f8:	add	r6, r3, r6
   1b0fc:	str	r6, [r4, #20]
   1b100:	ldr	r3, [r4, #20]
   1b104:	mov	r2, #34	; 0x22
   1b108:	strb	r2, [r3]
   1b10c:	ldrb	r3, [r4, #26]
   1b110:	clz	r3, r3
   1b114:	lsr	r3, r3, #5
   1b118:	ldr	r1, [r4, #20]
   1b11c:	add	r2, r1, r3
   1b120:	add	r2, r2, #1
   1b124:	str	r2, [r4, #20]
   1b128:	mov	r2, #58	; 0x3a
   1b12c:	strb	r2, [r1, r3]
   1b130:	ldr	r3, [r4, #20]
   1b134:	mov	r2, #32
   1b138:	strb	r2, [r3]
   1b13c:	ldrb	r3, [r4, #25]
   1b140:	ldr	r1, [r4, #20]
   1b144:	cmp	r3, #0
   1b148:	addne	r1, r1, #1
   1b14c:	str	r1, [r4, #20]
   1b150:	ldrb	r3, [r4, #27]
   1b154:	cmp	r3, #0
   1b158:	bne	1b1f4 <flatcc_json_printer_int8_enum_struct_field@@Base+0x1a0>
   1b15c:	mov	r1, r5
   1b160:	mov	r0, r4
   1b164:	ldr	r3, [sp, #32]
   1b168:	blx	r3
   1b16c:	ldrd	r4, [sp]
   1b170:	ldrd	r6, [sp, #8]
   1b174:	ldr	r8, [sp, #16]
   1b178:	add	sp, sp, #20
   1b17c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b180:	ldr	r3, [r4, #20]
   1b184:	add	r2, r3, #1
   1b188:	str	r2, [r4, #20]
   1b18c:	mov	r2, #10
   1b190:	strb	r2, [r3]
   1b194:	ldrb	r3, [r4, #25]
   1b198:	ldr	r7, [r4, #32]
   1b19c:	mul	r7, r7, r3
   1b1a0:	ldr	r0, [r4, #20]
   1b1a4:	add	r3, r0, r7
   1b1a8:	ldr	r2, [r4, #16]
   1b1ac:	cmp	r2, r3
   1b1b0:	bcs	1b1c4 <flatcc_json_printer_int8_enum_struct_field@@Base+0x170>
   1b1b4:	mov	r1, r7
   1b1b8:	mov	r0, r4
   1b1bc:	bl	15218 <main@@Base+0x163c>
   1b1c0:	b	1b0b8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x64>
   1b1c4:	mov	r2, r7
   1b1c8:	mov	r1, #32
   1b1cc:	bl	124c4 <memset@plt>
   1b1d0:	ldr	r3, [r4, #20]
   1b1d4:	add	r7, r3, r7
   1b1d8:	str	r7, [r4, #20]
   1b1dc:	b	1b0b8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x64>
   1b1e0:	mov	r2, r6
   1b1e4:	ldr	r1, [sp, #24]
   1b1e8:	mov	r0, r4
   1b1ec:	bl	15108 <main@@Base+0x152c>
   1b1f0:	b	1b100 <flatcc_json_printer_int8_enum_struct_field@@Base+0xac>
   1b1f4:	mov	r0, r5
   1b1f8:	bl	14924 <main@@Base+0xd48>
   1b1fc:	ldr	r3, [r4, #20]
   1b200:	add	r0, r3, r0
   1b204:	str	r0, [r4, #20]
   1b208:	b	1b16c <flatcc_json_printer_int8_enum_struct_field@@Base+0x118>

0001b20c <flatcc_json_printer_int16_enum_struct_field@@Base>:
   1b20c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b210:	strd	r6, [sp, #8]
   1b214:	str	r8, [sp, #16]
   1b218:	str	lr, [sp, #20]
   1b21c:	mov	r4, r0
   1b220:	ldr	r6, [sp, #28]
   1b224:	ldrsh	r5, [r2, r3]
   1b228:	cmp	r1, #0
   1b22c:	beq	1b244 <flatcc_json_printer_int16_enum_struct_field@@Base+0x38>
   1b230:	ldr	r3, [r0, #20]
   1b234:	add	r2, r3, #1
   1b238:	str	r2, [r0, #20]
   1b23c:	mov	r2, #44	; 0x2c
   1b240:	strb	r2, [r3]
   1b244:	ldrb	r3, [r4, #25]
   1b248:	cmp	r3, #0
   1b24c:	bne	1b338 <flatcc_json_printer_int16_enum_struct_field@@Base+0x12c>
   1b250:	ldr	r2, [r4, #20]
   1b254:	ldr	r3, [r4, #16]
   1b258:	cmp	r2, r3
   1b25c:	bcc	1b270 <flatcc_json_printer_int16_enum_struct_field@@Base+0x64>
   1b260:	ldr	r3, [r4, #44]	; 0x2c
   1b264:	mov	r1, #0
   1b268:	mov	r0, r4
   1b26c:	blx	r3
   1b270:	ldr	r3, [r4, #20]
   1b274:	mov	r2, #34	; 0x22
   1b278:	strb	r2, [r3]
   1b27c:	ldrb	r3, [r4, #26]
   1b280:	ldr	r0, [r4, #20]
   1b284:	cmp	r3, #0
   1b288:	addeq	r0, r0, #1
   1b28c:	str	r0, [r4, #20]
   1b290:	add	r3, r0, r6
   1b294:	ldr	r2, [r4, #16]
   1b298:	cmp	r2, r3
   1b29c:	bls	1b398 <flatcc_json_printer_int16_enum_struct_field@@Base+0x18c>
   1b2a0:	mov	r2, r6
   1b2a4:	ldr	r1, [sp, #24]
   1b2a8:	bl	12428 <memcpy@plt>
   1b2ac:	ldr	r3, [r4, #20]
   1b2b0:	add	r6, r3, r6
   1b2b4:	str	r6, [r4, #20]
   1b2b8:	ldr	r3, [r4, #20]
   1b2bc:	mov	r2, #34	; 0x22
   1b2c0:	strb	r2, [r3]
   1b2c4:	ldrb	r3, [r4, #26]
   1b2c8:	clz	r3, r3
   1b2cc:	lsr	r3, r3, #5
   1b2d0:	ldr	r1, [r4, #20]
   1b2d4:	add	r2, r1, r3
   1b2d8:	add	r2, r2, #1
   1b2dc:	str	r2, [r4, #20]
   1b2e0:	mov	r2, #58	; 0x3a
   1b2e4:	strb	r2, [r1, r3]
   1b2e8:	ldr	r3, [r4, #20]
   1b2ec:	mov	r2, #32
   1b2f0:	strb	r2, [r3]
   1b2f4:	ldrb	r3, [r4, #25]
   1b2f8:	ldr	r1, [r4, #20]
   1b2fc:	cmp	r3, #0
   1b300:	addne	r1, r1, #1
   1b304:	str	r1, [r4, #20]
   1b308:	ldrb	r3, [r4, #27]
   1b30c:	cmp	r3, #0
   1b310:	bne	1b3ac <flatcc_json_printer_int16_enum_struct_field@@Base+0x1a0>
   1b314:	mov	r1, r5
   1b318:	mov	r0, r4
   1b31c:	ldr	r3, [sp, #32]
   1b320:	blx	r3
   1b324:	ldrd	r4, [sp]
   1b328:	ldrd	r6, [sp, #8]
   1b32c:	ldr	r8, [sp, #16]
   1b330:	add	sp, sp, #20
   1b334:	pop	{pc}		; (ldr pc, [sp], #4)
   1b338:	ldr	r3, [r4, #20]
   1b33c:	add	r2, r3, #1
   1b340:	str	r2, [r4, #20]
   1b344:	mov	r2, #10
   1b348:	strb	r2, [r3]
   1b34c:	ldrb	r3, [r4, #25]
   1b350:	ldr	r7, [r4, #32]
   1b354:	mul	r7, r7, r3
   1b358:	ldr	r0, [r4, #20]
   1b35c:	add	r3, r0, r7
   1b360:	ldr	r2, [r4, #16]
   1b364:	cmp	r2, r3
   1b368:	bcs	1b37c <flatcc_json_printer_int16_enum_struct_field@@Base+0x170>
   1b36c:	mov	r1, r7
   1b370:	mov	r0, r4
   1b374:	bl	15218 <main@@Base+0x163c>
   1b378:	b	1b270 <flatcc_json_printer_int16_enum_struct_field@@Base+0x64>
   1b37c:	mov	r2, r7
   1b380:	mov	r1, #32
   1b384:	bl	124c4 <memset@plt>
   1b388:	ldr	r3, [r4, #20]
   1b38c:	add	r7, r3, r7
   1b390:	str	r7, [r4, #20]
   1b394:	b	1b270 <flatcc_json_printer_int16_enum_struct_field@@Base+0x64>
   1b398:	mov	r2, r6
   1b39c:	ldr	r1, [sp, #24]
   1b3a0:	mov	r0, r4
   1b3a4:	bl	15108 <main@@Base+0x152c>
   1b3a8:	b	1b2b8 <flatcc_json_printer_int16_enum_struct_field@@Base+0xac>
   1b3ac:	mov	r0, r5
   1b3b0:	bl	14964 <main@@Base+0xd88>
   1b3b4:	ldr	r3, [r4, #20]
   1b3b8:	add	r0, r3, r0
   1b3bc:	str	r0, [r4, #20]
   1b3c0:	b	1b324 <flatcc_json_printer_int16_enum_struct_field@@Base+0x118>

0001b3c4 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   1b3c4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b3c8:	strd	r6, [sp, #8]
   1b3cc:	str	r8, [sp, #16]
   1b3d0:	str	lr, [sp, #20]
   1b3d4:	mov	r4, r0
   1b3d8:	ldr	r6, [sp, #28]
   1b3dc:	ldr	r5, [r2, r3]
   1b3e0:	cmp	r1, #0
   1b3e4:	beq	1b3fc <flatcc_json_printer_int32_enum_struct_field@@Base+0x38>
   1b3e8:	ldr	r3, [r0, #20]
   1b3ec:	add	r2, r3, #1
   1b3f0:	str	r2, [r0, #20]
   1b3f4:	mov	r2, #44	; 0x2c
   1b3f8:	strb	r2, [r3]
   1b3fc:	ldrb	r3, [r4, #25]
   1b400:	cmp	r3, #0
   1b404:	bne	1b4f0 <flatcc_json_printer_int32_enum_struct_field@@Base+0x12c>
   1b408:	ldr	r2, [r4, #20]
   1b40c:	ldr	r3, [r4, #16]
   1b410:	cmp	r2, r3
   1b414:	bcc	1b428 <flatcc_json_printer_int32_enum_struct_field@@Base+0x64>
   1b418:	ldr	r3, [r4, #44]	; 0x2c
   1b41c:	mov	r1, #0
   1b420:	mov	r0, r4
   1b424:	blx	r3
   1b428:	ldr	r3, [r4, #20]
   1b42c:	mov	r2, #34	; 0x22
   1b430:	strb	r2, [r3]
   1b434:	ldrb	r3, [r4, #26]
   1b438:	ldr	r0, [r4, #20]
   1b43c:	cmp	r3, #0
   1b440:	addeq	r0, r0, #1
   1b444:	str	r0, [r4, #20]
   1b448:	add	r3, r0, r6
   1b44c:	ldr	r2, [r4, #16]
   1b450:	cmp	r2, r3
   1b454:	bls	1b550 <flatcc_json_printer_int32_enum_struct_field@@Base+0x18c>
   1b458:	mov	r2, r6
   1b45c:	ldr	r1, [sp, #24]
   1b460:	bl	12428 <memcpy@plt>
   1b464:	ldr	r3, [r4, #20]
   1b468:	add	r6, r3, r6
   1b46c:	str	r6, [r4, #20]
   1b470:	ldr	r3, [r4, #20]
   1b474:	mov	r2, #34	; 0x22
   1b478:	strb	r2, [r3]
   1b47c:	ldrb	r3, [r4, #26]
   1b480:	clz	r3, r3
   1b484:	lsr	r3, r3, #5
   1b488:	ldr	r1, [r4, #20]
   1b48c:	add	r2, r1, r3
   1b490:	add	r2, r2, #1
   1b494:	str	r2, [r4, #20]
   1b498:	mov	r2, #58	; 0x3a
   1b49c:	strb	r2, [r1, r3]
   1b4a0:	ldr	r3, [r4, #20]
   1b4a4:	mov	r2, #32
   1b4a8:	strb	r2, [r3]
   1b4ac:	ldrb	r3, [r4, #25]
   1b4b0:	ldr	r1, [r4, #20]
   1b4b4:	cmp	r3, #0
   1b4b8:	addne	r1, r1, #1
   1b4bc:	str	r1, [r4, #20]
   1b4c0:	ldrb	r3, [r4, #27]
   1b4c4:	cmp	r3, #0
   1b4c8:	bne	1b564 <flatcc_json_printer_int32_enum_struct_field@@Base+0x1a0>
   1b4cc:	mov	r1, r5
   1b4d0:	mov	r0, r4
   1b4d4:	ldr	r3, [sp, #32]
   1b4d8:	blx	r3
   1b4dc:	ldrd	r4, [sp]
   1b4e0:	ldrd	r6, [sp, #8]
   1b4e4:	ldr	r8, [sp, #16]
   1b4e8:	add	sp, sp, #20
   1b4ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4f0:	ldr	r3, [r4, #20]
   1b4f4:	add	r2, r3, #1
   1b4f8:	str	r2, [r4, #20]
   1b4fc:	mov	r2, #10
   1b500:	strb	r2, [r3]
   1b504:	ldrb	r3, [r4, #25]
   1b508:	ldr	r7, [r4, #32]
   1b50c:	mul	r7, r7, r3
   1b510:	ldr	r0, [r4, #20]
   1b514:	add	r3, r0, r7
   1b518:	ldr	r2, [r4, #16]
   1b51c:	cmp	r2, r3
   1b520:	bcs	1b534 <flatcc_json_printer_int32_enum_struct_field@@Base+0x170>
   1b524:	mov	r1, r7
   1b528:	mov	r0, r4
   1b52c:	bl	15218 <main@@Base+0x163c>
   1b530:	b	1b428 <flatcc_json_printer_int32_enum_struct_field@@Base+0x64>
   1b534:	mov	r2, r7
   1b538:	mov	r1, #32
   1b53c:	bl	124c4 <memset@plt>
   1b540:	ldr	r3, [r4, #20]
   1b544:	add	r7, r3, r7
   1b548:	str	r7, [r4, #20]
   1b54c:	b	1b428 <flatcc_json_printer_int32_enum_struct_field@@Base+0x64>
   1b550:	mov	r2, r6
   1b554:	ldr	r1, [sp, #24]
   1b558:	mov	r0, r4
   1b55c:	bl	15108 <main@@Base+0x152c>
   1b560:	b	1b470 <flatcc_json_printer_int32_enum_struct_field@@Base+0xac>
   1b564:	mov	r0, r5
   1b568:	bl	149a4 <main@@Base+0xdc8>
   1b56c:	ldr	r3, [r4, #20]
   1b570:	add	r0, r3, r0
   1b574:	str	r0, [r4, #20]
   1b578:	b	1b4dc <flatcc_json_printer_int32_enum_struct_field@@Base+0x118>

0001b57c <flatcc_json_printer_int64_enum_struct_field@@Base>:
   1b57c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b580:	strd	r6, [sp, #8]
   1b584:	str	r8, [sp, #16]
   1b588:	str	lr, [sp, #20]
   1b58c:	mov	r4, r0
   1b590:	ldr	r5, [sp, #28]
   1b594:	ldrd	r6, [r2, r3]
   1b598:	cmp	r1, #0
   1b59c:	beq	1b5b4 <flatcc_json_printer_int64_enum_struct_field@@Base+0x38>
   1b5a0:	ldr	r3, [r0, #20]
   1b5a4:	add	r2, r3, #1
   1b5a8:	str	r2, [r0, #20]
   1b5ac:	mov	r2, #44	; 0x2c
   1b5b0:	strb	r2, [r3]
   1b5b4:	ldrb	r3, [r4, #25]
   1b5b8:	cmp	r3, #0
   1b5bc:	bne	1b6ac <flatcc_json_printer_int64_enum_struct_field@@Base+0x130>
   1b5c0:	ldr	r2, [r4, #20]
   1b5c4:	ldr	r3, [r4, #16]
   1b5c8:	cmp	r2, r3
   1b5cc:	bcc	1b5e0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x64>
   1b5d0:	ldr	r3, [r4, #44]	; 0x2c
   1b5d4:	mov	r1, #0
   1b5d8:	mov	r0, r4
   1b5dc:	blx	r3
   1b5e0:	ldr	r3, [r4, #20]
   1b5e4:	mov	r2, #34	; 0x22
   1b5e8:	strb	r2, [r3]
   1b5ec:	ldrb	r3, [r4, #26]
   1b5f0:	ldr	r0, [r4, #20]
   1b5f4:	cmp	r3, #0
   1b5f8:	addeq	r0, r0, #1
   1b5fc:	str	r0, [r4, #20]
   1b600:	add	r3, r0, r5
   1b604:	ldr	r2, [r4, #16]
   1b608:	cmp	r2, r3
   1b60c:	bls	1b70c <flatcc_json_printer_int64_enum_struct_field@@Base+0x190>
   1b610:	mov	r2, r5
   1b614:	ldr	r1, [sp, #24]
   1b618:	bl	12428 <memcpy@plt>
   1b61c:	ldr	r3, [r4, #20]
   1b620:	add	r5, r3, r5
   1b624:	str	r5, [r4, #20]
   1b628:	ldr	r3, [r4, #20]
   1b62c:	mov	r2, #34	; 0x22
   1b630:	strb	r2, [r3]
   1b634:	ldrb	r3, [r4, #26]
   1b638:	clz	r3, r3
   1b63c:	lsr	r3, r3, #5
   1b640:	ldr	r1, [r4, #20]
   1b644:	add	r2, r1, r3
   1b648:	add	r2, r2, #1
   1b64c:	str	r2, [r4, #20]
   1b650:	mov	r2, #58	; 0x3a
   1b654:	strb	r2, [r1, r3]
   1b658:	ldr	r3, [r4, #20]
   1b65c:	mov	r2, #32
   1b660:	strb	r2, [r3]
   1b664:	ldrb	r3, [r4, #25]
   1b668:	ldr	r2, [r4, #20]
   1b66c:	cmp	r3, #0
   1b670:	addne	r2, r2, #1
   1b674:	str	r2, [r4, #20]
   1b678:	ldrb	r3, [r4, #27]
   1b67c:	cmp	r3, #0
   1b680:	bne	1b720 <flatcc_json_printer_int64_enum_struct_field@@Base+0x1a4>
   1b684:	mov	r2, r6
   1b688:	mov	r3, r7
   1b68c:	mov	r0, r4
   1b690:	ldr	r1, [sp, #32]
   1b694:	blx	r1
   1b698:	ldrd	r4, [sp]
   1b69c:	ldrd	r6, [sp, #8]
   1b6a0:	ldr	r8, [sp, #16]
   1b6a4:	add	sp, sp, #20
   1b6a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6ac:	ldr	r3, [r4, #20]
   1b6b0:	add	r2, r3, #1
   1b6b4:	str	r2, [r4, #20]
   1b6b8:	mov	r2, #10
   1b6bc:	strb	r2, [r3]
   1b6c0:	ldrb	r3, [r4, #25]
   1b6c4:	ldr	r8, [r4, #32]
   1b6c8:	mul	r8, r8, r3
   1b6cc:	ldr	r0, [r4, #20]
   1b6d0:	add	r3, r0, r8
   1b6d4:	ldr	r2, [r4, #16]
   1b6d8:	cmp	r2, r3
   1b6dc:	bcs	1b6f0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x174>
   1b6e0:	mov	r1, r8
   1b6e4:	mov	r0, r4
   1b6e8:	bl	15218 <main@@Base+0x163c>
   1b6ec:	b	1b5e0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x64>
   1b6f0:	mov	r2, r8
   1b6f4:	mov	r1, #32
   1b6f8:	bl	124c4 <memset@plt>
   1b6fc:	ldr	r3, [r4, #20]
   1b700:	add	r8, r3, r8
   1b704:	str	r8, [r4, #20]
   1b708:	b	1b5e0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x64>
   1b70c:	mov	r2, r5
   1b710:	ldr	r1, [sp, #24]
   1b714:	mov	r0, r4
   1b718:	bl	15108 <main@@Base+0x152c>
   1b71c:	b	1b628 <flatcc_json_printer_int64_enum_struct_field@@Base+0xac>
   1b720:	mov	r0, r6
   1b724:	mov	r1, r7
   1b728:	bl	149dc <main@@Base+0xe00>
   1b72c:	ldr	r3, [r4, #20]
   1b730:	add	r0, r3, r0
   1b734:	str	r0, [r4, #20]
   1b738:	b	1b698 <flatcc_json_printer_int64_enum_struct_field@@Base+0x11c>

0001b73c <flatcc_json_printer_bool_enum_struct_field@@Base>:
   1b73c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b740:	strd	r6, [sp, #8]
   1b744:	str	r8, [sp, #16]
   1b748:	str	lr, [sp, #20]
   1b74c:	mov	r4, r0
   1b750:	ldr	r6, [sp, #28]
   1b754:	ldrb	r5, [r2, r3]
   1b758:	cmp	r1, #0
   1b75c:	beq	1b774 <flatcc_json_printer_bool_enum_struct_field@@Base+0x38>
   1b760:	ldr	r3, [r0, #20]
   1b764:	add	r2, r3, #1
   1b768:	str	r2, [r0, #20]
   1b76c:	mov	r2, #44	; 0x2c
   1b770:	strb	r2, [r3]
   1b774:	ldrb	r3, [r4, #25]
   1b778:	cmp	r3, #0
   1b77c:	bne	1b868 <flatcc_json_printer_bool_enum_struct_field@@Base+0x12c>
   1b780:	ldr	r2, [r4, #20]
   1b784:	ldr	r3, [r4, #16]
   1b788:	cmp	r2, r3
   1b78c:	bcc	1b7a0 <flatcc_json_printer_bool_enum_struct_field@@Base+0x64>
   1b790:	ldr	r3, [r4, #44]	; 0x2c
   1b794:	mov	r1, #0
   1b798:	mov	r0, r4
   1b79c:	blx	r3
   1b7a0:	ldr	r3, [r4, #20]
   1b7a4:	mov	r2, #34	; 0x22
   1b7a8:	strb	r2, [r3]
   1b7ac:	ldrb	r3, [r4, #26]
   1b7b0:	ldr	r0, [r4, #20]
   1b7b4:	cmp	r3, #0
   1b7b8:	addeq	r0, r0, #1
   1b7bc:	str	r0, [r4, #20]
   1b7c0:	add	r3, r0, r6
   1b7c4:	ldr	r2, [r4, #16]
   1b7c8:	cmp	r2, r3
   1b7cc:	bls	1b8c8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x18c>
   1b7d0:	mov	r2, r6
   1b7d4:	ldr	r1, [sp, #24]
   1b7d8:	bl	12428 <memcpy@plt>
   1b7dc:	ldr	r3, [r4, #20]
   1b7e0:	add	r6, r3, r6
   1b7e4:	str	r6, [r4, #20]
   1b7e8:	ldr	r3, [r4, #20]
   1b7ec:	mov	r2, #34	; 0x22
   1b7f0:	strb	r2, [r3]
   1b7f4:	ldrb	r3, [r4, #26]
   1b7f8:	clz	r3, r3
   1b7fc:	lsr	r3, r3, #5
   1b800:	ldr	r1, [r4, #20]
   1b804:	add	r2, r1, r3
   1b808:	add	r2, r2, #1
   1b80c:	str	r2, [r4, #20]
   1b810:	mov	r2, #58	; 0x3a
   1b814:	strb	r2, [r1, r3]
   1b818:	ldr	r3, [r4, #20]
   1b81c:	mov	r2, #32
   1b820:	strb	r2, [r3]
   1b824:	ldrb	r3, [r4, #25]
   1b828:	ldr	r1, [r4, #20]
   1b82c:	cmp	r3, #0
   1b830:	addne	r1, r1, #1
   1b834:	str	r1, [r4, #20]
   1b838:	ldrb	r3, [r4, #27]
   1b83c:	cmp	r3, #0
   1b840:	bne	1b8dc <flatcc_json_printer_bool_enum_struct_field@@Base+0x1a0>
   1b844:	mov	r1, r5
   1b848:	mov	r0, r4
   1b84c:	ldr	r3, [sp, #32]
   1b850:	blx	r3
   1b854:	ldrd	r4, [sp]
   1b858:	ldrd	r6, [sp, #8]
   1b85c:	ldr	r8, [sp, #16]
   1b860:	add	sp, sp, #20
   1b864:	pop	{pc}		; (ldr pc, [sp], #4)
   1b868:	ldr	r3, [r4, #20]
   1b86c:	add	r2, r3, #1
   1b870:	str	r2, [r4, #20]
   1b874:	mov	r2, #10
   1b878:	strb	r2, [r3]
   1b87c:	ldrb	r3, [r4, #25]
   1b880:	ldr	r7, [r4, #32]
   1b884:	mul	r7, r7, r3
   1b888:	ldr	r0, [r4, #20]
   1b88c:	add	r3, r0, r7
   1b890:	ldr	r2, [r4, #16]
   1b894:	cmp	r2, r3
   1b898:	bcs	1b8ac <flatcc_json_printer_bool_enum_struct_field@@Base+0x170>
   1b89c:	mov	r1, r7
   1b8a0:	mov	r0, r4
   1b8a4:	bl	15218 <main@@Base+0x163c>
   1b8a8:	b	1b7a0 <flatcc_json_printer_bool_enum_struct_field@@Base+0x64>
   1b8ac:	mov	r2, r7
   1b8b0:	mov	r1, #32
   1b8b4:	bl	124c4 <memset@plt>
   1b8b8:	ldr	r3, [r4, #20]
   1b8bc:	add	r7, r3, r7
   1b8c0:	str	r7, [r4, #20]
   1b8c4:	b	1b7a0 <flatcc_json_printer_bool_enum_struct_field@@Base+0x64>
   1b8c8:	mov	r2, r6
   1b8cc:	ldr	r1, [sp, #24]
   1b8d0:	mov	r0, r4
   1b8d4:	bl	15108 <main@@Base+0x152c>
   1b8d8:	b	1b7e8 <flatcc_json_printer_bool_enum_struct_field@@Base+0xac>
   1b8dc:	mov	r0, r5
   1b8e0:	bl	151d0 <main@@Base+0x15f4>
   1b8e4:	ldr	r3, [r4, #20]
   1b8e8:	add	r0, r3, r0
   1b8ec:	str	r0, [r4, #20]
   1b8f0:	b	1b854 <flatcc_json_printer_bool_enum_struct_field@@Base+0x118>

0001b8f4 <flatcc_json_printer_utype_vector_field@@Base>:
   1b8f4:	add	r2, r2, #2
   1b8f8:	lsl	r2, r2, #1
   1b8fc:	ldr	ip, [r1, #8]
   1b900:	cmp	ip, r2
   1b904:	bxle	lr
   1b908:	ldr	ip, [r1, #4]
   1b90c:	ldrh	r2, [ip, r2]
   1b910:	cmp	r2, #0
   1b914:	bxeq	lr
   1b918:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b91c:	strd	r6, [sp, #8]
   1b920:	strd	r8, [sp, #16]
   1b924:	str	sl, [sp, #24]
   1b928:	str	lr, [sp, #28]
   1b92c:	ldr	ip, [r1]
   1b930:	adds	lr, ip, r2
   1b934:	beq	1bb04 <flatcc_json_printer_utype_vector_field@@Base+0x210>
   1b938:	ldr	r4, [r1, #16]
   1b93c:	add	r5, r4, #1
   1b940:	str	r5, [r1, #16]
   1b944:	cmp	r4, #0
   1b948:	beq	1b960 <flatcc_json_printer_utype_vector_field@@Base+0x6c>
   1b94c:	ldr	r1, [r0, #20]
   1b950:	add	r4, r1, #1
   1b954:	str	r4, [r0, #20]
   1b958:	mov	r4, #44	; 0x2c
   1b95c:	strb	r4, [r1]
   1b960:	mov	r1, r3
   1b964:	mov	r4, r0
   1b968:	ldr	r3, [ip, r2]
   1b96c:	add	r6, lr, r3
   1b970:	ldr	r7, [lr, r3]
   1b974:	ldr	r2, [sp, #32]
   1b978:	bl	15808 <main@@Base+0x1c2c>
   1b97c:	ldr	r3, [r4, #32]
   1b980:	add	r3, r3, #1
   1b984:	str	r3, [r4, #32]
   1b988:	ldr	r3, [r4, #20]
   1b98c:	add	r2, r3, #1
   1b990:	str	r2, [r4, #20]
   1b994:	mov	r2, #91	; 0x5b
   1b998:	strb	r2, [r3]
   1b99c:	cmp	r7, #0
   1b9a0:	beq	1bae4 <flatcc_json_printer_utype_vector_field@@Base+0x1f0>
   1b9a4:	ldrb	r3, [r4, #25]
   1b9a8:	cmp	r3, #0
   1b9ac:	bne	1ba0c <flatcc_json_printer_utype_vector_field@@Base+0x118>
   1b9b0:	ldr	r2, [r4, #20]
   1b9b4:	ldr	r3, [r4, #16]
   1b9b8:	cmp	r2, r3
   1b9bc:	bcc	1b9d0 <flatcc_json_printer_utype_vector_field@@Base+0xdc>
   1b9c0:	ldr	r3, [r4, #44]	; 0x2c
   1b9c4:	mov	r1, #0
   1b9c8:	mov	r0, r4
   1b9cc:	blx	r3
   1b9d0:	ldr	r1, [r4, #20]
   1b9d4:	ldrb	r0, [r6, #4]
   1b9d8:	bl	13c90 <main@@Base+0xb4>
   1b9dc:	ldr	r3, [r4, #20]
   1b9e0:	add	r0, r3, r0
   1b9e4:	str	r0, [r4, #20]
   1b9e8:	add	r5, r6, #5
   1b9ec:	cmp	r7, #1
   1b9f0:	beq	1bae4 <flatcc_json_printer_utype_vector_field@@Base+0x1f0>
   1b9f4:	add	r7, r7, #4
   1b9f8:	add	r6, r6, r7
   1b9fc:	mov	r7, #44	; 0x2c
   1ba00:	mov	r8, #0
   1ba04:	mov	r9, #10
   1ba08:	b	1ba88 <flatcc_json_printer_utype_vector_field@@Base+0x194>
   1ba0c:	ldr	r3, [r4, #20]
   1ba10:	add	r2, r3, #1
   1ba14:	str	r2, [r4, #20]
   1ba18:	mov	r2, #10
   1ba1c:	strb	r2, [r3]
   1ba20:	mov	r0, r4
   1ba24:	bl	152dc <main@@Base+0x1700>
   1ba28:	b	1b9d0 <flatcc_json_printer_utype_vector_field@@Base+0xdc>
   1ba2c:	ldr	r3, [r4, #20]
   1ba30:	add	r2, r3, #1
   1ba34:	str	r2, [r4, #20]
   1ba38:	strb	r9, [r3]
   1ba3c:	ldrb	r3, [r4, #25]
   1ba40:	ldr	sl, [r4, #32]
   1ba44:	mul	sl, sl, r3
   1ba48:	ldr	r0, [r4, #20]
   1ba4c:	add	r3, r0, sl
   1ba50:	ldr	r2, [r4, #16]
   1ba54:	cmp	r2, r3
   1ba58:	bcs	1bac8 <flatcc_json_printer_utype_vector_field@@Base+0x1d4>
   1ba5c:	mov	r1, sl
   1ba60:	mov	r0, r4
   1ba64:	bl	15218 <main@@Base+0x163c>
   1ba68:	ldr	r1, [r4, #20]
   1ba6c:	ldrb	r0, [r5], #1
   1ba70:	bl	13c90 <main@@Base+0xb4>
   1ba74:	ldr	r3, [r4, #20]
   1ba78:	add	r0, r3, r0
   1ba7c:	str	r0, [r4, #20]
   1ba80:	cmp	r6, r5
   1ba84:	beq	1bae4 <flatcc_json_printer_utype_vector_field@@Base+0x1f0>
   1ba88:	ldr	r3, [r4, #20]
   1ba8c:	add	r2, r3, #1
   1ba90:	str	r2, [r4, #20]
   1ba94:	strb	r7, [r3]
   1ba98:	ldrb	r3, [r4, #25]
   1ba9c:	cmp	r3, #0
   1baa0:	bne	1ba2c <flatcc_json_printer_utype_vector_field@@Base+0x138>
   1baa4:	ldr	r2, [r4, #20]
   1baa8:	ldr	r3, [r4, #16]
   1baac:	cmp	r2, r3
   1bab0:	bcc	1ba68 <flatcc_json_printer_utype_vector_field@@Base+0x174>
   1bab4:	ldr	r3, [r4, #44]	; 0x2c
   1bab8:	mov	r1, r8
   1babc:	mov	r0, r4
   1bac0:	blx	r3
   1bac4:	b	1ba68 <flatcc_json_printer_utype_vector_field@@Base+0x174>
   1bac8:	mov	r2, sl
   1bacc:	mov	r1, #32
   1bad0:	bl	124c4 <memset@plt>
   1bad4:	ldr	r3, [r4, #20]
   1bad8:	add	sl, r3, sl
   1badc:	str	sl, [r4, #20]
   1bae0:	b	1ba68 <flatcc_json_printer_utype_vector_field@@Base+0x174>
   1bae4:	ldrb	r3, [r4, #25]
   1bae8:	cmp	r3, #0
   1baec:	bne	1bb1c <flatcc_json_printer_utype_vector_field@@Base+0x228>
   1baf0:	ldr	r3, [r4, #20]
   1baf4:	add	r2, r3, #1
   1baf8:	str	r2, [r4, #20]
   1bafc:	mov	r2, #93	; 0x5d
   1bb00:	strb	r2, [r3]
   1bb04:	ldrd	r4, [sp]
   1bb08:	ldrd	r6, [sp, #8]
   1bb0c:	ldrd	r8, [sp, #16]
   1bb10:	ldr	sl, [sp, #24]
   1bb14:	add	sp, sp, #28
   1bb18:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb1c:	ldr	r3, [r4, #20]
   1bb20:	add	r2, r3, #1
   1bb24:	str	r2, [r4, #20]
   1bb28:	mov	r2, #10
   1bb2c:	strb	r2, [r3]
   1bb30:	ldr	r5, [r4, #32]
   1bb34:	sub	r5, r5, #1
   1bb38:	str	r5, [r4, #32]
   1bb3c:	ldrb	r3, [r4, #25]
   1bb40:	mul	r5, r5, r3
   1bb44:	ldr	r0, [r4, #20]
   1bb48:	add	r3, r0, r5
   1bb4c:	ldr	r2, [r4, #16]
   1bb50:	cmp	r2, r3
   1bb54:	bcs	1bb68 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   1bb58:	mov	r1, r5
   1bb5c:	mov	r0, r4
   1bb60:	bl	15218 <main@@Base+0x163c>
   1bb64:	b	1baf0 <flatcc_json_printer_utype_vector_field@@Base+0x1fc>
   1bb68:	mov	r2, r5
   1bb6c:	mov	r1, #32
   1bb70:	bl	124c4 <memset@plt>
   1bb74:	ldr	r3, [r4, #20]
   1bb78:	add	r5, r3, r5
   1bb7c:	str	r5, [r4, #20]
   1bb80:	b	1baf0 <flatcc_json_printer_utype_vector_field@@Base+0x1fc>

0001bb84 <flatcc_json_printer_uint8_vector_field@@Base>:
   1bb84:	add	r2, r2, #2
   1bb88:	lsl	r2, r2, #1
   1bb8c:	ldr	ip, [r1, #8]
   1bb90:	cmp	ip, r2
   1bb94:	bxle	lr
   1bb98:	ldr	ip, [r1, #4]
   1bb9c:	ldrh	r2, [ip, r2]
   1bba0:	cmp	r2, #0
   1bba4:	bxeq	lr
   1bba8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1bbac:	strd	r6, [sp, #8]
   1bbb0:	strd	r8, [sp, #16]
   1bbb4:	str	sl, [sp, #24]
   1bbb8:	str	lr, [sp, #28]
   1bbbc:	ldr	ip, [r1]
   1bbc0:	adds	lr, ip, r2
   1bbc4:	beq	1bd94 <flatcc_json_printer_uint8_vector_field@@Base+0x210>
   1bbc8:	ldr	r4, [r1, #16]
   1bbcc:	add	r5, r4, #1
   1bbd0:	str	r5, [r1, #16]
   1bbd4:	cmp	r4, #0
   1bbd8:	beq	1bbf0 <flatcc_json_printer_uint8_vector_field@@Base+0x6c>
   1bbdc:	ldr	r1, [r0, #20]
   1bbe0:	add	r4, r1, #1
   1bbe4:	str	r4, [r0, #20]
   1bbe8:	mov	r4, #44	; 0x2c
   1bbec:	strb	r4, [r1]
   1bbf0:	mov	r1, r3
   1bbf4:	mov	r4, r0
   1bbf8:	ldr	r3, [ip, r2]
   1bbfc:	add	r6, lr, r3
   1bc00:	ldr	r7, [lr, r3]
   1bc04:	ldr	r2, [sp, #32]
   1bc08:	bl	15808 <main@@Base+0x1c2c>
   1bc0c:	ldr	r3, [r4, #32]
   1bc10:	add	r3, r3, #1
   1bc14:	str	r3, [r4, #32]
   1bc18:	ldr	r3, [r4, #20]
   1bc1c:	add	r2, r3, #1
   1bc20:	str	r2, [r4, #20]
   1bc24:	mov	r2, #91	; 0x5b
   1bc28:	strb	r2, [r3]
   1bc2c:	cmp	r7, #0
   1bc30:	beq	1bd74 <flatcc_json_printer_uint8_vector_field@@Base+0x1f0>
   1bc34:	ldrb	r3, [r4, #25]
   1bc38:	cmp	r3, #0
   1bc3c:	bne	1bc9c <flatcc_json_printer_uint8_vector_field@@Base+0x118>
   1bc40:	ldr	r2, [r4, #20]
   1bc44:	ldr	r3, [r4, #16]
   1bc48:	cmp	r2, r3
   1bc4c:	bcc	1bc60 <flatcc_json_printer_uint8_vector_field@@Base+0xdc>
   1bc50:	ldr	r3, [r4, #44]	; 0x2c
   1bc54:	mov	r1, #0
   1bc58:	mov	r0, r4
   1bc5c:	blx	r3
   1bc60:	ldr	r1, [r4, #20]
   1bc64:	ldrb	r0, [r6, #4]
   1bc68:	bl	13c90 <main@@Base+0xb4>
   1bc6c:	ldr	r3, [r4, #20]
   1bc70:	add	r0, r3, r0
   1bc74:	str	r0, [r4, #20]
   1bc78:	add	r5, r6, #5
   1bc7c:	cmp	r7, #1
   1bc80:	beq	1bd74 <flatcc_json_printer_uint8_vector_field@@Base+0x1f0>
   1bc84:	add	r7, r7, #4
   1bc88:	add	r6, r6, r7
   1bc8c:	mov	r7, #44	; 0x2c
   1bc90:	mov	r8, #0
   1bc94:	mov	r9, #10
   1bc98:	b	1bd18 <flatcc_json_printer_uint8_vector_field@@Base+0x194>
   1bc9c:	ldr	r3, [r4, #20]
   1bca0:	add	r2, r3, #1
   1bca4:	str	r2, [r4, #20]
   1bca8:	mov	r2, #10
   1bcac:	strb	r2, [r3]
   1bcb0:	mov	r0, r4
   1bcb4:	bl	152dc <main@@Base+0x1700>
   1bcb8:	b	1bc60 <flatcc_json_printer_uint8_vector_field@@Base+0xdc>
   1bcbc:	ldr	r3, [r4, #20]
   1bcc0:	add	r2, r3, #1
   1bcc4:	str	r2, [r4, #20]
   1bcc8:	strb	r9, [r3]
   1bccc:	ldrb	r3, [r4, #25]
   1bcd0:	ldr	sl, [r4, #32]
   1bcd4:	mul	sl, sl, r3
   1bcd8:	ldr	r0, [r4, #20]
   1bcdc:	add	r3, r0, sl
   1bce0:	ldr	r2, [r4, #16]
   1bce4:	cmp	r2, r3
   1bce8:	bcs	1bd58 <flatcc_json_printer_uint8_vector_field@@Base+0x1d4>
   1bcec:	mov	r1, sl
   1bcf0:	mov	r0, r4
   1bcf4:	bl	15218 <main@@Base+0x163c>
   1bcf8:	ldr	r1, [r4, #20]
   1bcfc:	ldrb	r0, [r5], #1
   1bd00:	bl	13c90 <main@@Base+0xb4>
   1bd04:	ldr	r3, [r4, #20]
   1bd08:	add	r0, r3, r0
   1bd0c:	str	r0, [r4, #20]
   1bd10:	cmp	r6, r5
   1bd14:	beq	1bd74 <flatcc_json_printer_uint8_vector_field@@Base+0x1f0>
   1bd18:	ldr	r3, [r4, #20]
   1bd1c:	add	r2, r3, #1
   1bd20:	str	r2, [r4, #20]
   1bd24:	strb	r7, [r3]
   1bd28:	ldrb	r3, [r4, #25]
   1bd2c:	cmp	r3, #0
   1bd30:	bne	1bcbc <flatcc_json_printer_uint8_vector_field@@Base+0x138>
   1bd34:	ldr	r2, [r4, #20]
   1bd38:	ldr	r3, [r4, #16]
   1bd3c:	cmp	r2, r3
   1bd40:	bcc	1bcf8 <flatcc_json_printer_uint8_vector_field@@Base+0x174>
   1bd44:	ldr	r3, [r4, #44]	; 0x2c
   1bd48:	mov	r1, r8
   1bd4c:	mov	r0, r4
   1bd50:	blx	r3
   1bd54:	b	1bcf8 <flatcc_json_printer_uint8_vector_field@@Base+0x174>
   1bd58:	mov	r2, sl
   1bd5c:	mov	r1, #32
   1bd60:	bl	124c4 <memset@plt>
   1bd64:	ldr	r3, [r4, #20]
   1bd68:	add	sl, r3, sl
   1bd6c:	str	sl, [r4, #20]
   1bd70:	b	1bcf8 <flatcc_json_printer_uint8_vector_field@@Base+0x174>
   1bd74:	ldrb	r3, [r4, #25]
   1bd78:	cmp	r3, #0
   1bd7c:	bne	1bdac <flatcc_json_printer_uint8_vector_field@@Base+0x228>
   1bd80:	ldr	r3, [r4, #20]
   1bd84:	add	r2, r3, #1
   1bd88:	str	r2, [r4, #20]
   1bd8c:	mov	r2, #93	; 0x5d
   1bd90:	strb	r2, [r3]
   1bd94:	ldrd	r4, [sp]
   1bd98:	ldrd	r6, [sp, #8]
   1bd9c:	ldrd	r8, [sp, #16]
   1bda0:	ldr	sl, [sp, #24]
   1bda4:	add	sp, sp, #28
   1bda8:	pop	{pc}		; (ldr pc, [sp], #4)
   1bdac:	ldr	r3, [r4, #20]
   1bdb0:	add	r2, r3, #1
   1bdb4:	str	r2, [r4, #20]
   1bdb8:	mov	r2, #10
   1bdbc:	strb	r2, [r3]
   1bdc0:	ldr	r5, [r4, #32]
   1bdc4:	sub	r5, r5, #1
   1bdc8:	str	r5, [r4, #32]
   1bdcc:	ldrb	r3, [r4, #25]
   1bdd0:	mul	r5, r5, r3
   1bdd4:	ldr	r0, [r4, #20]
   1bdd8:	add	r3, r0, r5
   1bddc:	ldr	r2, [r4, #16]
   1bde0:	cmp	r2, r3
   1bde4:	bcs	1bdf8 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   1bde8:	mov	r1, r5
   1bdec:	mov	r0, r4
   1bdf0:	bl	15218 <main@@Base+0x163c>
   1bdf4:	b	1bd80 <flatcc_json_printer_uint8_vector_field@@Base+0x1fc>
   1bdf8:	mov	r2, r5
   1bdfc:	mov	r1, #32
   1be00:	bl	124c4 <memset@plt>
   1be04:	ldr	r3, [r4, #20]
   1be08:	add	r5, r3, r5
   1be0c:	str	r5, [r4, #20]
   1be10:	b	1bd80 <flatcc_json_printer_uint8_vector_field@@Base+0x1fc>

0001be14 <flatcc_json_printer_uint16_vector_field@@Base>:
   1be14:	add	r2, r2, #2
   1be18:	lsl	r2, r2, #1
   1be1c:	ldr	ip, [r1, #8]
   1be20:	cmp	ip, r2
   1be24:	bxle	lr
   1be28:	ldr	ip, [r1, #4]
   1be2c:	ldrh	r2, [ip, r2]
   1be30:	cmp	r2, #0
   1be34:	bxeq	lr
   1be38:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1be3c:	strd	r6, [sp, #8]
   1be40:	strd	r8, [sp, #16]
   1be44:	str	sl, [sp, #24]
   1be48:	str	lr, [sp, #28]
   1be4c:	ldr	ip, [r1]
   1be50:	adds	lr, ip, r2
   1be54:	beq	1c064 <flatcc_json_printer_uint16_vector_field@@Base+0x250>
   1be58:	ldr	r4, [r1, #16]
   1be5c:	add	r5, r4, #1
   1be60:	str	r5, [r1, #16]
   1be64:	cmp	r4, #0
   1be68:	beq	1be80 <flatcc_json_printer_uint16_vector_field@@Base+0x6c>
   1be6c:	ldr	r1, [r0, #20]
   1be70:	add	r4, r1, #1
   1be74:	str	r4, [r0, #20]
   1be78:	mov	r4, #44	; 0x2c
   1be7c:	strb	r4, [r1]
   1be80:	mov	r1, r3
   1be84:	mov	r4, r0
   1be88:	ldr	r3, [ip, r2]
   1be8c:	add	r6, lr, r3
   1be90:	ldr	r7, [lr, r3]
   1be94:	ldr	r2, [sp, #32]
   1be98:	bl	15808 <main@@Base+0x1c2c>
   1be9c:	ldr	r3, [r4, #32]
   1bea0:	add	r3, r3, #1
   1bea4:	str	r3, [r4, #32]
   1bea8:	ldr	r3, [r4, #20]
   1beac:	add	r2, r3, #1
   1beb0:	str	r2, [r4, #20]
   1beb4:	mov	r2, #91	; 0x5b
   1beb8:	strb	r2, [r3]
   1bebc:	cmp	r7, #0
   1bec0:	beq	1c044 <flatcc_json_printer_uint16_vector_field@@Base+0x230>
   1bec4:	ldrb	r3, [r4, #25]
   1bec8:	cmp	r3, #0
   1becc:	bne	1bf28 <flatcc_json_printer_uint16_vector_field@@Base+0x114>
   1bed0:	ldr	r2, [r4, #20]
   1bed4:	ldr	r3, [r4, #16]
   1bed8:	cmp	r2, r3
   1bedc:	bcc	1bef0 <flatcc_json_printer_uint16_vector_field@@Base+0xdc>
   1bee0:	ldr	r3, [r4, #44]	; 0x2c
   1bee4:	mov	r1, #0
   1bee8:	mov	r0, r4
   1beec:	blx	r3
   1bef0:	ldr	r1, [r4, #20]
   1bef4:	ldrh	r0, [r6, #4]
   1bef8:	bl	13d50 <main@@Base+0x174>
   1befc:	ldr	r3, [r4, #20]
   1bf00:	add	r0, r3, r0
   1bf04:	str	r0, [r4, #20]
   1bf08:	add	r6, r6, #6
   1bf0c:	sub	r5, r7, #2
   1bf10:	cmp	r7, #1
   1bf14:	beq	1c044 <flatcc_json_printer_uint16_vector_field@@Base+0x230>
   1bf18:	mov	r7, #44	; 0x2c
   1bf1c:	mov	r8, #0
   1bf20:	mov	r9, #10
   1bf24:	b	1bfe8 <flatcc_json_printer_uint16_vector_field@@Base+0x1d4>
   1bf28:	ldr	r3, [r4, #20]
   1bf2c:	add	r2, r3, #1
   1bf30:	str	r2, [r4, #20]
   1bf34:	mov	r2, #10
   1bf38:	strb	r2, [r3]
   1bf3c:	ldrb	r3, [r4, #25]
   1bf40:	ldr	r5, [r4, #32]
   1bf44:	mul	r5, r5, r3
   1bf48:	ldr	r0, [r4, #20]
   1bf4c:	add	r3, r0, r5
   1bf50:	ldr	r2, [r4, #16]
   1bf54:	cmp	r2, r3
   1bf58:	bcs	1bf6c <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   1bf5c:	mov	r1, r5
   1bf60:	mov	r0, r4
   1bf64:	bl	15218 <main@@Base+0x163c>
   1bf68:	b	1bef0 <flatcc_json_printer_uint16_vector_field@@Base+0xdc>
   1bf6c:	mov	r2, r5
   1bf70:	mov	r1, #32
   1bf74:	bl	124c4 <memset@plt>
   1bf78:	ldr	r3, [r4, #20]
   1bf7c:	add	r5, r3, r5
   1bf80:	str	r5, [r4, #20]
   1bf84:	b	1bef0 <flatcc_json_printer_uint16_vector_field@@Base+0xdc>
   1bf88:	ldr	r3, [r4, #20]
   1bf8c:	add	r2, r3, #1
   1bf90:	str	r2, [r4, #20]
   1bf94:	strb	r9, [r3]
   1bf98:	ldrb	r3, [r4, #25]
   1bf9c:	ldr	sl, [r4, #32]
   1bfa0:	mul	sl, sl, r3
   1bfa4:	ldr	r0, [r4, #20]
   1bfa8:	add	r3, r0, sl
   1bfac:	ldr	r2, [r4, #16]
   1bfb0:	cmp	r2, r3
   1bfb4:	bcs	1c028 <flatcc_json_printer_uint16_vector_field@@Base+0x214>
   1bfb8:	mov	r1, sl
   1bfbc:	mov	r0, r4
   1bfc0:	bl	15218 <main@@Base+0x163c>
   1bfc4:	ldr	r1, [r4, #20]
   1bfc8:	ldrh	r0, [r6], #2
   1bfcc:	bl	13d50 <main@@Base+0x174>
   1bfd0:	ldr	r3, [r4, #20]
   1bfd4:	add	r0, r3, r0
   1bfd8:	str	r0, [r4, #20]
   1bfdc:	sub	r5, r5, #1
   1bfe0:	cmn	r5, #1
   1bfe4:	beq	1c044 <flatcc_json_printer_uint16_vector_field@@Base+0x230>
   1bfe8:	ldr	r3, [r4, #20]
   1bfec:	add	r2, r3, #1
   1bff0:	str	r2, [r4, #20]
   1bff4:	strb	r7, [r3]
   1bff8:	ldrb	r3, [r4, #25]
   1bffc:	cmp	r3, #0
   1c000:	bne	1bf88 <flatcc_json_printer_uint16_vector_field@@Base+0x174>
   1c004:	ldr	r2, [r4, #20]
   1c008:	ldr	r3, [r4, #16]
   1c00c:	cmp	r2, r3
   1c010:	bcc	1bfc4 <flatcc_json_printer_uint16_vector_field@@Base+0x1b0>
   1c014:	ldr	r3, [r4, #44]	; 0x2c
   1c018:	mov	r1, r8
   1c01c:	mov	r0, r4
   1c020:	blx	r3
   1c024:	b	1bfc4 <flatcc_json_printer_uint16_vector_field@@Base+0x1b0>
   1c028:	mov	r2, sl
   1c02c:	mov	r1, #32
   1c030:	bl	124c4 <memset@plt>
   1c034:	ldr	r3, [r4, #20]
   1c038:	add	sl, r3, sl
   1c03c:	str	sl, [r4, #20]
   1c040:	b	1bfc4 <flatcc_json_printer_uint16_vector_field@@Base+0x1b0>
   1c044:	ldrb	r3, [r4, #25]
   1c048:	cmp	r3, #0
   1c04c:	bne	1c07c <flatcc_json_printer_uint16_vector_field@@Base+0x268>
   1c050:	ldr	r3, [r4, #20]
   1c054:	add	r2, r3, #1
   1c058:	str	r2, [r4, #20]
   1c05c:	mov	r2, #93	; 0x5d
   1c060:	strb	r2, [r3]
   1c064:	ldrd	r4, [sp]
   1c068:	ldrd	r6, [sp, #8]
   1c06c:	ldrd	r8, [sp, #16]
   1c070:	ldr	sl, [sp, #24]
   1c074:	add	sp, sp, #28
   1c078:	pop	{pc}		; (ldr pc, [sp], #4)
   1c07c:	ldr	r3, [r4, #20]
   1c080:	add	r2, r3, #1
   1c084:	str	r2, [r4, #20]
   1c088:	mov	r2, #10
   1c08c:	strb	r2, [r3]
   1c090:	ldr	r5, [r4, #32]
   1c094:	sub	r5, r5, #1
   1c098:	str	r5, [r4, #32]
   1c09c:	ldrb	r3, [r4, #25]
   1c0a0:	mul	r5, r5, r3
   1c0a4:	ldr	r0, [r4, #20]
   1c0a8:	add	r3, r0, r5
   1c0ac:	ldr	r2, [r4, #16]
   1c0b0:	cmp	r2, r3
   1c0b4:	bcs	1c0c8 <flatcc_json_printer_uint16_vector_field@@Base+0x2b4>
   1c0b8:	mov	r1, r5
   1c0bc:	mov	r0, r4
   1c0c0:	bl	15218 <main@@Base+0x163c>
   1c0c4:	b	1c050 <flatcc_json_printer_uint16_vector_field@@Base+0x23c>
   1c0c8:	mov	r2, r5
   1c0cc:	mov	r1, #32
   1c0d0:	bl	124c4 <memset@plt>
   1c0d4:	ldr	r3, [r4, #20]
   1c0d8:	add	r5, r3, r5
   1c0dc:	str	r5, [r4, #20]
   1c0e0:	b	1c050 <flatcc_json_printer_uint16_vector_field@@Base+0x23c>

0001c0e4 <flatcc_json_printer_uint32_vector_field@@Base>:
   1c0e4:	add	r2, r2, #2
   1c0e8:	lsl	r2, r2, #1
   1c0ec:	ldr	ip, [r1, #8]
   1c0f0:	cmp	ip, r2
   1c0f4:	bxle	lr
   1c0f8:	ldr	ip, [r1, #4]
   1c0fc:	ldrh	r2, [ip, r2]
   1c100:	cmp	r2, #0
   1c104:	bxeq	lr
   1c108:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c10c:	strd	r6, [sp, #8]
   1c110:	strd	r8, [sp, #16]
   1c114:	str	sl, [sp, #24]
   1c118:	str	lr, [sp, #28]
   1c11c:	ldr	ip, [r1]
   1c120:	adds	lr, ip, r2
   1c124:	beq	1c2f4 <flatcc_json_printer_uint32_vector_field@@Base+0x210>
   1c128:	ldr	r4, [r1, #16]
   1c12c:	add	r5, r4, #1
   1c130:	str	r5, [r1, #16]
   1c134:	cmp	r4, #0
   1c138:	beq	1c150 <flatcc_json_printer_uint32_vector_field@@Base+0x6c>
   1c13c:	ldr	r1, [r0, #20]
   1c140:	add	r4, r1, #1
   1c144:	str	r4, [r0, #20]
   1c148:	mov	r4, #44	; 0x2c
   1c14c:	strb	r4, [r1]
   1c150:	mov	r1, r3
   1c154:	mov	r4, r0
   1c158:	ldr	r3, [ip, r2]
   1c15c:	add	r6, lr, r3
   1c160:	ldr	r7, [lr, r3]
   1c164:	ldr	r2, [sp, #32]
   1c168:	bl	15808 <main@@Base+0x1c2c>
   1c16c:	ldr	r3, [r4, #32]
   1c170:	add	r3, r3, #1
   1c174:	str	r3, [r4, #32]
   1c178:	ldr	r3, [r4, #20]
   1c17c:	add	r2, r3, #1
   1c180:	str	r2, [r4, #20]
   1c184:	mov	r2, #91	; 0x5b
   1c188:	strb	r2, [r3]
   1c18c:	cmp	r7, #0
   1c190:	beq	1c2d4 <flatcc_json_printer_uint32_vector_field@@Base+0x1f0>
   1c194:	ldrb	r3, [r4, #25]
   1c198:	cmp	r3, #0
   1c19c:	bne	1c1f8 <flatcc_json_printer_uint32_vector_field@@Base+0x114>
   1c1a0:	ldr	r2, [r4, #20]
   1c1a4:	ldr	r3, [r4, #16]
   1c1a8:	cmp	r2, r3
   1c1ac:	bcc	1c1c0 <flatcc_json_printer_uint32_vector_field@@Base+0xdc>
   1c1b0:	ldr	r3, [r4, #44]	; 0x2c
   1c1b4:	mov	r1, #0
   1c1b8:	mov	r0, r4
   1c1bc:	blx	r3
   1c1c0:	ldr	r1, [r4, #20]
   1c1c4:	ldr	r0, [r6, #4]
   1c1c8:	bl	13ee4 <main@@Base+0x308>
   1c1cc:	ldr	r3, [r4, #20]
   1c1d0:	add	r0, r3, r0
   1c1d4:	str	r0, [r4, #20]
   1c1d8:	add	r6, r6, #8
   1c1dc:	sub	r5, r7, #2
   1c1e0:	cmp	r7, #1
   1c1e4:	beq	1c2d4 <flatcc_json_printer_uint32_vector_field@@Base+0x1f0>
   1c1e8:	mov	r7, #44	; 0x2c
   1c1ec:	mov	r8, #0
   1c1f0:	mov	r9, #10
   1c1f4:	b	1c278 <flatcc_json_printer_uint32_vector_field@@Base+0x194>
   1c1f8:	ldr	r3, [r4, #20]
   1c1fc:	add	r2, r3, #1
   1c200:	str	r2, [r4, #20]
   1c204:	mov	r2, #10
   1c208:	strb	r2, [r3]
   1c20c:	mov	r0, r4
   1c210:	bl	152dc <main@@Base+0x1700>
   1c214:	b	1c1c0 <flatcc_json_printer_uint32_vector_field@@Base+0xdc>
   1c218:	ldr	r3, [r4, #20]
   1c21c:	add	r2, r3, #1
   1c220:	str	r2, [r4, #20]
   1c224:	strb	r9, [r3]
   1c228:	ldrb	r3, [r4, #25]
   1c22c:	ldr	sl, [r4, #32]
   1c230:	mul	sl, sl, r3
   1c234:	ldr	r0, [r4, #20]
   1c238:	add	r3, r0, sl
   1c23c:	ldr	r2, [r4, #16]
   1c240:	cmp	r2, r3
   1c244:	bcs	1c2b8 <flatcc_json_printer_uint32_vector_field@@Base+0x1d4>
   1c248:	mov	r1, sl
   1c24c:	mov	r0, r4
   1c250:	bl	15218 <main@@Base+0x163c>
   1c254:	ldr	r1, [r4, #20]
   1c258:	ldr	r0, [r6], #4
   1c25c:	bl	13ee4 <main@@Base+0x308>
   1c260:	ldr	r3, [r4, #20]
   1c264:	add	r0, r3, r0
   1c268:	str	r0, [r4, #20]
   1c26c:	sub	r5, r5, #1
   1c270:	cmn	r5, #1
   1c274:	beq	1c2d4 <flatcc_json_printer_uint32_vector_field@@Base+0x1f0>
   1c278:	ldr	r3, [r4, #20]
   1c27c:	add	r2, r3, #1
   1c280:	str	r2, [r4, #20]
   1c284:	strb	r7, [r3]
   1c288:	ldrb	r3, [r4, #25]
   1c28c:	cmp	r3, #0
   1c290:	bne	1c218 <flatcc_json_printer_uint32_vector_field@@Base+0x134>
   1c294:	ldr	r2, [r4, #20]
   1c298:	ldr	r3, [r4, #16]
   1c29c:	cmp	r2, r3
   1c2a0:	bcc	1c254 <flatcc_json_printer_uint32_vector_field@@Base+0x170>
   1c2a4:	ldr	r3, [r4, #44]	; 0x2c
   1c2a8:	mov	r1, r8
   1c2ac:	mov	r0, r4
   1c2b0:	blx	r3
   1c2b4:	b	1c254 <flatcc_json_printer_uint32_vector_field@@Base+0x170>
   1c2b8:	mov	r2, sl
   1c2bc:	mov	r1, #32
   1c2c0:	bl	124c4 <memset@plt>
   1c2c4:	ldr	r3, [r4, #20]
   1c2c8:	add	sl, r3, sl
   1c2cc:	str	sl, [r4, #20]
   1c2d0:	b	1c254 <flatcc_json_printer_uint32_vector_field@@Base+0x170>
   1c2d4:	ldrb	r3, [r4, #25]
   1c2d8:	cmp	r3, #0
   1c2dc:	bne	1c30c <flatcc_json_printer_uint32_vector_field@@Base+0x228>
   1c2e0:	ldr	r3, [r4, #20]
   1c2e4:	add	r2, r3, #1
   1c2e8:	str	r2, [r4, #20]
   1c2ec:	mov	r2, #93	; 0x5d
   1c2f0:	strb	r2, [r3]
   1c2f4:	ldrd	r4, [sp]
   1c2f8:	ldrd	r6, [sp, #8]
   1c2fc:	ldrd	r8, [sp, #16]
   1c300:	ldr	sl, [sp, #24]
   1c304:	add	sp, sp, #28
   1c308:	pop	{pc}		; (ldr pc, [sp], #4)
   1c30c:	ldr	r3, [r4, #20]
   1c310:	add	r2, r3, #1
   1c314:	str	r2, [r4, #20]
   1c318:	mov	r2, #10
   1c31c:	strb	r2, [r3]
   1c320:	ldr	r5, [r4, #32]
   1c324:	sub	r5, r5, #1
   1c328:	str	r5, [r4, #32]
   1c32c:	ldrb	r3, [r4, #25]
   1c330:	mul	r5, r5, r3
   1c334:	ldr	r0, [r4, #20]
   1c338:	add	r3, r0, r5
   1c33c:	ldr	r2, [r4, #16]
   1c340:	cmp	r2, r3
   1c344:	bcs	1c358 <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   1c348:	mov	r1, r5
   1c34c:	mov	r0, r4
   1c350:	bl	15218 <main@@Base+0x163c>
   1c354:	b	1c2e0 <flatcc_json_printer_uint32_vector_field@@Base+0x1fc>
   1c358:	mov	r2, r5
   1c35c:	mov	r1, #32
   1c360:	bl	124c4 <memset@plt>
   1c364:	ldr	r3, [r4, #20]
   1c368:	add	r5, r3, r5
   1c36c:	str	r5, [r4, #20]
   1c370:	b	1c2e0 <flatcc_json_printer_uint32_vector_field@@Base+0x1fc>

0001c374 <flatcc_json_printer_uint64_vector_field@@Base>:
   1c374:	add	r2, r2, #2
   1c378:	lsl	r2, r2, #1
   1c37c:	ldr	ip, [r1, #8]
   1c380:	cmp	ip, r2
   1c384:	bxle	lr
   1c388:	ldr	ip, [r1, #4]
   1c38c:	ldrh	r2, [ip, r2]
   1c390:	cmp	r2, #0
   1c394:	bxeq	lr
   1c398:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c39c:	strd	r6, [sp, #8]
   1c3a0:	strd	r8, [sp, #16]
   1c3a4:	str	sl, [sp, #24]
   1c3a8:	str	lr, [sp, #28]
   1c3ac:	ldr	ip, [r1]
   1c3b0:	adds	lr, ip, r2
   1c3b4:	beq	1c584 <flatcc_json_printer_uint64_vector_field@@Base+0x210>
   1c3b8:	ldr	r4, [r1, #16]
   1c3bc:	add	r5, r4, #1
   1c3c0:	str	r5, [r1, #16]
   1c3c4:	cmp	r4, #0
   1c3c8:	beq	1c3e0 <flatcc_json_printer_uint64_vector_field@@Base+0x6c>
   1c3cc:	ldr	r1, [r0, #20]
   1c3d0:	add	r4, r1, #1
   1c3d4:	str	r4, [r0, #20]
   1c3d8:	mov	r4, #44	; 0x2c
   1c3dc:	strb	r4, [r1]
   1c3e0:	mov	r1, r3
   1c3e4:	mov	r4, r0
   1c3e8:	ldr	r3, [ip, r2]
   1c3ec:	add	r6, lr, r3
   1c3f0:	ldr	r7, [lr, r3]
   1c3f4:	ldr	r2, [sp, #32]
   1c3f8:	bl	15808 <main@@Base+0x1c2c>
   1c3fc:	ldr	r3, [r4, #32]
   1c400:	add	r3, r3, #1
   1c404:	str	r3, [r4, #32]
   1c408:	ldr	r3, [r4, #20]
   1c40c:	add	r2, r3, #1
   1c410:	str	r2, [r4, #20]
   1c414:	mov	r2, #91	; 0x5b
   1c418:	strb	r2, [r3]
   1c41c:	cmp	r7, #0
   1c420:	beq	1c564 <flatcc_json_printer_uint64_vector_field@@Base+0x1f0>
   1c424:	ldrb	r3, [r4, #25]
   1c428:	cmp	r3, #0
   1c42c:	bne	1c488 <flatcc_json_printer_uint64_vector_field@@Base+0x114>
   1c430:	ldr	r2, [r4, #20]
   1c434:	ldr	r3, [r4, #16]
   1c438:	cmp	r2, r3
   1c43c:	bcc	1c450 <flatcc_json_printer_uint64_vector_field@@Base+0xdc>
   1c440:	ldr	r3, [r4, #44]	; 0x2c
   1c444:	mov	r1, #0
   1c448:	mov	r0, r4
   1c44c:	blx	r3
   1c450:	ldr	r2, [r4, #20]
   1c454:	ldrd	r0, [r6, #4]
   1c458:	bl	14248 <main@@Base+0x66c>
   1c45c:	ldr	r3, [r4, #20]
   1c460:	add	r0, r3, r0
   1c464:	str	r0, [r4, #20]
   1c468:	add	r6, r6, #12
   1c46c:	sub	r5, r7, #2
   1c470:	cmp	r7, #1
   1c474:	beq	1c564 <flatcc_json_printer_uint64_vector_field@@Base+0x1f0>
   1c478:	mov	r7, #44	; 0x2c
   1c47c:	mov	r8, #0
   1c480:	mov	r9, #10
   1c484:	b	1c508 <flatcc_json_printer_uint64_vector_field@@Base+0x194>
   1c488:	ldr	r3, [r4, #20]
   1c48c:	add	r2, r3, #1
   1c490:	str	r2, [r4, #20]
   1c494:	mov	r2, #10
   1c498:	strb	r2, [r3]
   1c49c:	mov	r0, r4
   1c4a0:	bl	152dc <main@@Base+0x1700>
   1c4a4:	b	1c450 <flatcc_json_printer_uint64_vector_field@@Base+0xdc>
   1c4a8:	ldr	r3, [r4, #20]
   1c4ac:	add	r2, r3, #1
   1c4b0:	str	r2, [r4, #20]
   1c4b4:	strb	r9, [r3]
   1c4b8:	ldrb	r3, [r4, #25]
   1c4bc:	ldr	sl, [r4, #32]
   1c4c0:	mul	sl, sl, r3
   1c4c4:	ldr	r0, [r4, #20]
   1c4c8:	add	r3, r0, sl
   1c4cc:	ldr	r2, [r4, #16]
   1c4d0:	cmp	r2, r3
   1c4d4:	bcs	1c548 <flatcc_json_printer_uint64_vector_field@@Base+0x1d4>
   1c4d8:	mov	r1, sl
   1c4dc:	mov	r0, r4
   1c4e0:	bl	15218 <main@@Base+0x163c>
   1c4e4:	ldr	r2, [r4, #20]
   1c4e8:	ldrd	r0, [r6], #8
   1c4ec:	bl	14248 <main@@Base+0x66c>
   1c4f0:	ldr	r3, [r4, #20]
   1c4f4:	add	r0, r3, r0
   1c4f8:	str	r0, [r4, #20]
   1c4fc:	sub	r5, r5, #1
   1c500:	cmn	r5, #1
   1c504:	beq	1c564 <flatcc_json_printer_uint64_vector_field@@Base+0x1f0>
   1c508:	ldr	r3, [r4, #20]
   1c50c:	add	r2, r3, #1
   1c510:	str	r2, [r4, #20]
   1c514:	strb	r7, [r3]
   1c518:	ldrb	r3, [r4, #25]
   1c51c:	cmp	r3, #0
   1c520:	bne	1c4a8 <flatcc_json_printer_uint64_vector_field@@Base+0x134>
   1c524:	ldr	r2, [r4, #20]
   1c528:	ldr	r3, [r4, #16]
   1c52c:	cmp	r2, r3
   1c530:	bcc	1c4e4 <flatcc_json_printer_uint64_vector_field@@Base+0x170>
   1c534:	ldr	r3, [r4, #44]	; 0x2c
   1c538:	mov	r1, r8
   1c53c:	mov	r0, r4
   1c540:	blx	r3
   1c544:	b	1c4e4 <flatcc_json_printer_uint64_vector_field@@Base+0x170>
   1c548:	mov	r2, sl
   1c54c:	mov	r1, #32
   1c550:	bl	124c4 <memset@plt>
   1c554:	ldr	r3, [r4, #20]
   1c558:	add	sl, r3, sl
   1c55c:	str	sl, [r4, #20]
   1c560:	b	1c4e4 <flatcc_json_printer_uint64_vector_field@@Base+0x170>
   1c564:	ldrb	r3, [r4, #25]
   1c568:	cmp	r3, #0
   1c56c:	bne	1c59c <flatcc_json_printer_uint64_vector_field@@Base+0x228>
   1c570:	ldr	r3, [r4, #20]
   1c574:	add	r2, r3, #1
   1c578:	str	r2, [r4, #20]
   1c57c:	mov	r2, #93	; 0x5d
   1c580:	strb	r2, [r3]
   1c584:	ldrd	r4, [sp]
   1c588:	ldrd	r6, [sp, #8]
   1c58c:	ldrd	r8, [sp, #16]
   1c590:	ldr	sl, [sp, #24]
   1c594:	add	sp, sp, #28
   1c598:	pop	{pc}		; (ldr pc, [sp], #4)
   1c59c:	ldr	r3, [r4, #20]
   1c5a0:	add	r2, r3, #1
   1c5a4:	str	r2, [r4, #20]
   1c5a8:	mov	r2, #10
   1c5ac:	strb	r2, [r3]
   1c5b0:	ldr	r5, [r4, #32]
   1c5b4:	sub	r5, r5, #1
   1c5b8:	str	r5, [r4, #32]
   1c5bc:	ldrb	r3, [r4, #25]
   1c5c0:	mul	r5, r5, r3
   1c5c4:	ldr	r0, [r4, #20]
   1c5c8:	add	r3, r0, r5
   1c5cc:	ldr	r2, [r4, #16]
   1c5d0:	cmp	r2, r3
   1c5d4:	bcs	1c5e8 <flatcc_json_printer_uint64_vector_field@@Base+0x274>
   1c5d8:	mov	r1, r5
   1c5dc:	mov	r0, r4
   1c5e0:	bl	15218 <main@@Base+0x163c>
   1c5e4:	b	1c570 <flatcc_json_printer_uint64_vector_field@@Base+0x1fc>
   1c5e8:	mov	r2, r5
   1c5ec:	mov	r1, #32
   1c5f0:	bl	124c4 <memset@plt>
   1c5f4:	ldr	r3, [r4, #20]
   1c5f8:	add	r5, r3, r5
   1c5fc:	str	r5, [r4, #20]
   1c600:	b	1c570 <flatcc_json_printer_uint64_vector_field@@Base+0x1fc>

0001c604 <flatcc_json_printer_int8_vector_field@@Base>:
   1c604:	add	r2, r2, #2
   1c608:	lsl	r2, r2, #1
   1c60c:	ldr	ip, [r1, #8]
   1c610:	cmp	ip, r2
   1c614:	bxle	lr
   1c618:	ldr	ip, [r1, #4]
   1c61c:	ldrh	r2, [ip, r2]
   1c620:	cmp	r2, #0
   1c624:	bxeq	lr
   1c628:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c62c:	strd	r6, [sp, #8]
   1c630:	strd	r8, [sp, #16]
   1c634:	str	sl, [sp, #24]
   1c638:	str	lr, [sp, #28]
   1c63c:	ldr	ip, [r1]
   1c640:	adds	lr, ip, r2
   1c644:	beq	1c814 <flatcc_json_printer_int8_vector_field@@Base+0x210>
   1c648:	ldr	r4, [r1, #16]
   1c64c:	add	r5, r4, #1
   1c650:	str	r5, [r1, #16]
   1c654:	cmp	r4, #0
   1c658:	beq	1c670 <flatcc_json_printer_int8_vector_field@@Base+0x6c>
   1c65c:	ldr	r1, [r0, #20]
   1c660:	add	r4, r1, #1
   1c664:	str	r4, [r0, #20]
   1c668:	mov	r4, #44	; 0x2c
   1c66c:	strb	r4, [r1]
   1c670:	mov	r1, r3
   1c674:	mov	r4, r0
   1c678:	ldr	r3, [ip, r2]
   1c67c:	add	r6, lr, r3
   1c680:	ldr	r7, [lr, r3]
   1c684:	ldr	r2, [sp, #32]
   1c688:	bl	15808 <main@@Base+0x1c2c>
   1c68c:	ldr	r3, [r4, #32]
   1c690:	add	r3, r3, #1
   1c694:	str	r3, [r4, #32]
   1c698:	ldr	r3, [r4, #20]
   1c69c:	add	r2, r3, #1
   1c6a0:	str	r2, [r4, #20]
   1c6a4:	mov	r2, #91	; 0x5b
   1c6a8:	strb	r2, [r3]
   1c6ac:	cmp	r7, #0
   1c6b0:	beq	1c7f4 <flatcc_json_printer_int8_vector_field@@Base+0x1f0>
   1c6b4:	ldrb	r3, [r4, #25]
   1c6b8:	cmp	r3, #0
   1c6bc:	bne	1c71c <flatcc_json_printer_int8_vector_field@@Base+0x118>
   1c6c0:	ldr	r2, [r4, #20]
   1c6c4:	ldr	r3, [r4, #16]
   1c6c8:	cmp	r2, r3
   1c6cc:	bcc	1c6e0 <flatcc_json_printer_int8_vector_field@@Base+0xdc>
   1c6d0:	ldr	r3, [r4, #44]	; 0x2c
   1c6d4:	mov	r1, #0
   1c6d8:	mov	r0, r4
   1c6dc:	blx	r3
   1c6e0:	ldr	r1, [r4, #20]
   1c6e4:	ldrsb	r0, [r6, #4]
   1c6e8:	bl	14924 <main@@Base+0xd48>
   1c6ec:	ldr	r3, [r4, #20]
   1c6f0:	add	r0, r3, r0
   1c6f4:	str	r0, [r4, #20]
   1c6f8:	add	r5, r6, #5
   1c6fc:	cmp	r7, #1
   1c700:	beq	1c7f4 <flatcc_json_printer_int8_vector_field@@Base+0x1f0>
   1c704:	add	r7, r7, #4
   1c708:	add	r6, r6, r7
   1c70c:	mov	r7, #44	; 0x2c
   1c710:	mov	r8, #0
   1c714:	mov	r9, #10
   1c718:	b	1c798 <flatcc_json_printer_int8_vector_field@@Base+0x194>
   1c71c:	ldr	r3, [r4, #20]
   1c720:	add	r2, r3, #1
   1c724:	str	r2, [r4, #20]
   1c728:	mov	r2, #10
   1c72c:	strb	r2, [r3]
   1c730:	mov	r0, r4
   1c734:	bl	152dc <main@@Base+0x1700>
   1c738:	b	1c6e0 <flatcc_json_printer_int8_vector_field@@Base+0xdc>
   1c73c:	ldr	r3, [r4, #20]
   1c740:	add	r2, r3, #1
   1c744:	str	r2, [r4, #20]
   1c748:	strb	r9, [r3]
   1c74c:	ldrb	r3, [r4, #25]
   1c750:	ldr	sl, [r4, #32]
   1c754:	mul	sl, sl, r3
   1c758:	ldr	r0, [r4, #20]
   1c75c:	add	r3, r0, sl
   1c760:	ldr	r2, [r4, #16]
   1c764:	cmp	r2, r3
   1c768:	bcs	1c7d8 <flatcc_json_printer_int8_vector_field@@Base+0x1d4>
   1c76c:	mov	r1, sl
   1c770:	mov	r0, r4
   1c774:	bl	15218 <main@@Base+0x163c>
   1c778:	ldr	r1, [r4, #20]
   1c77c:	ldrsb	r0, [r5], #1
   1c780:	bl	14924 <main@@Base+0xd48>
   1c784:	ldr	r3, [r4, #20]
   1c788:	add	r0, r3, r0
   1c78c:	str	r0, [r4, #20]
   1c790:	cmp	r6, r5
   1c794:	beq	1c7f4 <flatcc_json_printer_int8_vector_field@@Base+0x1f0>
   1c798:	ldr	r3, [r4, #20]
   1c79c:	add	r2, r3, #1
   1c7a0:	str	r2, [r4, #20]
   1c7a4:	strb	r7, [r3]
   1c7a8:	ldrb	r3, [r4, #25]
   1c7ac:	cmp	r3, #0
   1c7b0:	bne	1c73c <flatcc_json_printer_int8_vector_field@@Base+0x138>
   1c7b4:	ldr	r2, [r4, #20]
   1c7b8:	ldr	r3, [r4, #16]
   1c7bc:	cmp	r2, r3
   1c7c0:	bcc	1c778 <flatcc_json_printer_int8_vector_field@@Base+0x174>
   1c7c4:	ldr	r3, [r4, #44]	; 0x2c
   1c7c8:	mov	r1, r8
   1c7cc:	mov	r0, r4
   1c7d0:	blx	r3
   1c7d4:	b	1c778 <flatcc_json_printer_int8_vector_field@@Base+0x174>
   1c7d8:	mov	r2, sl
   1c7dc:	mov	r1, #32
   1c7e0:	bl	124c4 <memset@plt>
   1c7e4:	ldr	r3, [r4, #20]
   1c7e8:	add	sl, r3, sl
   1c7ec:	str	sl, [r4, #20]
   1c7f0:	b	1c778 <flatcc_json_printer_int8_vector_field@@Base+0x174>
   1c7f4:	ldrb	r3, [r4, #25]
   1c7f8:	cmp	r3, #0
   1c7fc:	bne	1c82c <flatcc_json_printer_int8_vector_field@@Base+0x228>
   1c800:	ldr	r3, [r4, #20]
   1c804:	add	r2, r3, #1
   1c808:	str	r2, [r4, #20]
   1c80c:	mov	r2, #93	; 0x5d
   1c810:	strb	r2, [r3]
   1c814:	ldrd	r4, [sp]
   1c818:	ldrd	r6, [sp, #8]
   1c81c:	ldrd	r8, [sp, #16]
   1c820:	ldr	sl, [sp, #24]
   1c824:	add	sp, sp, #28
   1c828:	pop	{pc}		; (ldr pc, [sp], #4)
   1c82c:	ldr	r3, [r4, #20]
   1c830:	add	r2, r3, #1
   1c834:	str	r2, [r4, #20]
   1c838:	mov	r2, #10
   1c83c:	strb	r2, [r3]
   1c840:	ldr	r5, [r4, #32]
   1c844:	sub	r5, r5, #1
   1c848:	str	r5, [r4, #32]
   1c84c:	ldrb	r3, [r4, #25]
   1c850:	mul	r5, r5, r3
   1c854:	ldr	r0, [r4, #20]
   1c858:	add	r3, r0, r5
   1c85c:	ldr	r2, [r4, #16]
   1c860:	cmp	r2, r3
   1c864:	bcs	1c878 <flatcc_json_printer_int8_vector_field@@Base+0x274>
   1c868:	mov	r1, r5
   1c86c:	mov	r0, r4
   1c870:	bl	15218 <main@@Base+0x163c>
   1c874:	b	1c800 <flatcc_json_printer_int8_vector_field@@Base+0x1fc>
   1c878:	mov	r2, r5
   1c87c:	mov	r1, #32
   1c880:	bl	124c4 <memset@plt>
   1c884:	ldr	r3, [r4, #20]
   1c888:	add	r5, r3, r5
   1c88c:	str	r5, [r4, #20]
   1c890:	b	1c800 <flatcc_json_printer_int8_vector_field@@Base+0x1fc>

0001c894 <flatcc_json_printer_int16_vector_field@@Base>:
   1c894:	add	r2, r2, #2
   1c898:	lsl	r2, r2, #1
   1c89c:	ldr	ip, [r1, #8]
   1c8a0:	cmp	ip, r2
   1c8a4:	bxle	lr
   1c8a8:	ldr	ip, [r1, #4]
   1c8ac:	ldrh	r2, [ip, r2]
   1c8b0:	cmp	r2, #0
   1c8b4:	bxeq	lr
   1c8b8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c8bc:	strd	r6, [sp, #8]
   1c8c0:	strd	r8, [sp, #16]
   1c8c4:	str	sl, [sp, #24]
   1c8c8:	str	lr, [sp, #28]
   1c8cc:	ldr	ip, [r1]
   1c8d0:	adds	lr, ip, r2
   1c8d4:	beq	1caa4 <flatcc_json_printer_int16_vector_field@@Base+0x210>
   1c8d8:	ldr	r4, [r1, #16]
   1c8dc:	add	r5, r4, #1
   1c8e0:	str	r5, [r1, #16]
   1c8e4:	cmp	r4, #0
   1c8e8:	beq	1c900 <flatcc_json_printer_int16_vector_field@@Base+0x6c>
   1c8ec:	ldr	r1, [r0, #20]
   1c8f0:	add	r4, r1, #1
   1c8f4:	str	r4, [r0, #20]
   1c8f8:	mov	r4, #44	; 0x2c
   1c8fc:	strb	r4, [r1]
   1c900:	mov	r1, r3
   1c904:	mov	r4, r0
   1c908:	ldr	r3, [ip, r2]
   1c90c:	add	r6, lr, r3
   1c910:	ldr	r7, [lr, r3]
   1c914:	ldr	r2, [sp, #32]
   1c918:	bl	15808 <main@@Base+0x1c2c>
   1c91c:	ldr	r3, [r4, #32]
   1c920:	add	r3, r3, #1
   1c924:	str	r3, [r4, #32]
   1c928:	ldr	r3, [r4, #20]
   1c92c:	add	r2, r3, #1
   1c930:	str	r2, [r4, #20]
   1c934:	mov	r2, #91	; 0x5b
   1c938:	strb	r2, [r3]
   1c93c:	cmp	r7, #0
   1c940:	beq	1ca84 <flatcc_json_printer_int16_vector_field@@Base+0x1f0>
   1c944:	ldrb	r3, [r4, #25]
   1c948:	cmp	r3, #0
   1c94c:	bne	1c9a8 <flatcc_json_printer_int16_vector_field@@Base+0x114>
   1c950:	ldr	r2, [r4, #20]
   1c954:	ldr	r3, [r4, #16]
   1c958:	cmp	r2, r3
   1c95c:	bcc	1c970 <flatcc_json_printer_int16_vector_field@@Base+0xdc>
   1c960:	ldr	r3, [r4, #44]	; 0x2c
   1c964:	mov	r1, #0
   1c968:	mov	r0, r4
   1c96c:	blx	r3
   1c970:	ldr	r1, [r4, #20]
   1c974:	ldrsh	r0, [r6, #4]
   1c978:	bl	14964 <main@@Base+0xd88>
   1c97c:	ldr	r3, [r4, #20]
   1c980:	add	r0, r3, r0
   1c984:	str	r0, [r4, #20]
   1c988:	add	r6, r6, #6
   1c98c:	sub	r5, r7, #2
   1c990:	cmp	r7, #1
   1c994:	beq	1ca84 <flatcc_json_printer_int16_vector_field@@Base+0x1f0>
   1c998:	mov	r7, #44	; 0x2c
   1c99c:	mov	r8, #0
   1c9a0:	mov	r9, #10
   1c9a4:	b	1ca28 <flatcc_json_printer_int16_vector_field@@Base+0x194>
   1c9a8:	ldr	r3, [r4, #20]
   1c9ac:	add	r2, r3, #1
   1c9b0:	str	r2, [r4, #20]
   1c9b4:	mov	r2, #10
   1c9b8:	strb	r2, [r3]
   1c9bc:	mov	r0, r4
   1c9c0:	bl	152dc <main@@Base+0x1700>
   1c9c4:	b	1c970 <flatcc_json_printer_int16_vector_field@@Base+0xdc>
   1c9c8:	ldr	r3, [r4, #20]
   1c9cc:	add	r2, r3, #1
   1c9d0:	str	r2, [r4, #20]
   1c9d4:	strb	r9, [r3]
   1c9d8:	ldrb	r3, [r4, #25]
   1c9dc:	ldr	sl, [r4, #32]
   1c9e0:	mul	sl, sl, r3
   1c9e4:	ldr	r0, [r4, #20]
   1c9e8:	add	r3, r0, sl
   1c9ec:	ldr	r2, [r4, #16]
   1c9f0:	cmp	r2, r3
   1c9f4:	bcs	1ca68 <flatcc_json_printer_int16_vector_field@@Base+0x1d4>
   1c9f8:	mov	r1, sl
   1c9fc:	mov	r0, r4
   1ca00:	bl	15218 <main@@Base+0x163c>
   1ca04:	ldr	r1, [r4, #20]
   1ca08:	ldrsh	r0, [r6], #2
   1ca0c:	bl	14964 <main@@Base+0xd88>
   1ca10:	ldr	r3, [r4, #20]
   1ca14:	add	r0, r3, r0
   1ca18:	str	r0, [r4, #20]
   1ca1c:	sub	r5, r5, #1
   1ca20:	cmn	r5, #1
   1ca24:	beq	1ca84 <flatcc_json_printer_int16_vector_field@@Base+0x1f0>
   1ca28:	ldr	r3, [r4, #20]
   1ca2c:	add	r2, r3, #1
   1ca30:	str	r2, [r4, #20]
   1ca34:	strb	r7, [r3]
   1ca38:	ldrb	r3, [r4, #25]
   1ca3c:	cmp	r3, #0
   1ca40:	bne	1c9c8 <flatcc_json_printer_int16_vector_field@@Base+0x134>
   1ca44:	ldr	r2, [r4, #20]
   1ca48:	ldr	r3, [r4, #16]
   1ca4c:	cmp	r2, r3
   1ca50:	bcc	1ca04 <flatcc_json_printer_int16_vector_field@@Base+0x170>
   1ca54:	ldr	r3, [r4, #44]	; 0x2c
   1ca58:	mov	r1, r8
   1ca5c:	mov	r0, r4
   1ca60:	blx	r3
   1ca64:	b	1ca04 <flatcc_json_printer_int16_vector_field@@Base+0x170>
   1ca68:	mov	r2, sl
   1ca6c:	mov	r1, #32
   1ca70:	bl	124c4 <memset@plt>
   1ca74:	ldr	r3, [r4, #20]
   1ca78:	add	sl, r3, sl
   1ca7c:	str	sl, [r4, #20]
   1ca80:	b	1ca04 <flatcc_json_printer_int16_vector_field@@Base+0x170>
   1ca84:	ldrb	r3, [r4, #25]
   1ca88:	cmp	r3, #0
   1ca8c:	bne	1cabc <flatcc_json_printer_int16_vector_field@@Base+0x228>
   1ca90:	ldr	r3, [r4, #20]
   1ca94:	add	r2, r3, #1
   1ca98:	str	r2, [r4, #20]
   1ca9c:	mov	r2, #93	; 0x5d
   1caa0:	strb	r2, [r3]
   1caa4:	ldrd	r4, [sp]
   1caa8:	ldrd	r6, [sp, #8]
   1caac:	ldrd	r8, [sp, #16]
   1cab0:	ldr	sl, [sp, #24]
   1cab4:	add	sp, sp, #28
   1cab8:	pop	{pc}		; (ldr pc, [sp], #4)
   1cabc:	ldr	r3, [r4, #20]
   1cac0:	add	r2, r3, #1
   1cac4:	str	r2, [r4, #20]
   1cac8:	mov	r2, #10
   1cacc:	strb	r2, [r3]
   1cad0:	ldr	r5, [r4, #32]
   1cad4:	sub	r5, r5, #1
   1cad8:	str	r5, [r4, #32]
   1cadc:	ldrb	r3, [r4, #25]
   1cae0:	mul	r5, r5, r3
   1cae4:	ldr	r0, [r4, #20]
   1cae8:	add	r3, r0, r5
   1caec:	ldr	r2, [r4, #16]
   1caf0:	cmp	r2, r3
   1caf4:	bcs	1cb08 <flatcc_json_printer_int16_vector_field@@Base+0x274>
   1caf8:	mov	r1, r5
   1cafc:	mov	r0, r4
   1cb00:	bl	15218 <main@@Base+0x163c>
   1cb04:	b	1ca90 <flatcc_json_printer_int16_vector_field@@Base+0x1fc>
   1cb08:	mov	r2, r5
   1cb0c:	mov	r1, #32
   1cb10:	bl	124c4 <memset@plt>
   1cb14:	ldr	r3, [r4, #20]
   1cb18:	add	r5, r3, r5
   1cb1c:	str	r5, [r4, #20]
   1cb20:	b	1ca90 <flatcc_json_printer_int16_vector_field@@Base+0x1fc>

0001cb24 <flatcc_json_printer_int32_vector_field@@Base>:
   1cb24:	add	r2, r2, #2
   1cb28:	lsl	r2, r2, #1
   1cb2c:	ldr	ip, [r1, #8]
   1cb30:	cmp	ip, r2
   1cb34:	bxle	lr
   1cb38:	ldr	ip, [r1, #4]
   1cb3c:	ldrh	r2, [ip, r2]
   1cb40:	cmp	r2, #0
   1cb44:	bxeq	lr
   1cb48:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1cb4c:	strd	r6, [sp, #8]
   1cb50:	strd	r8, [sp, #16]
   1cb54:	str	sl, [sp, #24]
   1cb58:	str	lr, [sp, #28]
   1cb5c:	ldr	ip, [r1]
   1cb60:	adds	lr, ip, r2
   1cb64:	beq	1cd34 <flatcc_json_printer_int32_vector_field@@Base+0x210>
   1cb68:	ldr	r4, [r1, #16]
   1cb6c:	add	r5, r4, #1
   1cb70:	str	r5, [r1, #16]
   1cb74:	cmp	r4, #0
   1cb78:	beq	1cb90 <flatcc_json_printer_int32_vector_field@@Base+0x6c>
   1cb7c:	ldr	r1, [r0, #20]
   1cb80:	add	r4, r1, #1
   1cb84:	str	r4, [r0, #20]
   1cb88:	mov	r4, #44	; 0x2c
   1cb8c:	strb	r4, [r1]
   1cb90:	mov	r1, r3
   1cb94:	mov	r4, r0
   1cb98:	ldr	r3, [ip, r2]
   1cb9c:	add	r6, lr, r3
   1cba0:	ldr	r7, [lr, r3]
   1cba4:	ldr	r2, [sp, #32]
   1cba8:	bl	15808 <main@@Base+0x1c2c>
   1cbac:	ldr	r3, [r4, #32]
   1cbb0:	add	r3, r3, #1
   1cbb4:	str	r3, [r4, #32]
   1cbb8:	ldr	r3, [r4, #20]
   1cbbc:	add	r2, r3, #1
   1cbc0:	str	r2, [r4, #20]
   1cbc4:	mov	r2, #91	; 0x5b
   1cbc8:	strb	r2, [r3]
   1cbcc:	cmp	r7, #0
   1cbd0:	beq	1cd14 <flatcc_json_printer_int32_vector_field@@Base+0x1f0>
   1cbd4:	ldrb	r3, [r4, #25]
   1cbd8:	cmp	r3, #0
   1cbdc:	bne	1cc38 <flatcc_json_printer_int32_vector_field@@Base+0x114>
   1cbe0:	ldr	r2, [r4, #20]
   1cbe4:	ldr	r3, [r4, #16]
   1cbe8:	cmp	r2, r3
   1cbec:	bcc	1cc00 <flatcc_json_printer_int32_vector_field@@Base+0xdc>
   1cbf0:	ldr	r3, [r4, #44]	; 0x2c
   1cbf4:	mov	r1, #0
   1cbf8:	mov	r0, r4
   1cbfc:	blx	r3
   1cc00:	ldr	r1, [r4, #20]
   1cc04:	ldr	r0, [r6, #4]
   1cc08:	bl	149a4 <main@@Base+0xdc8>
   1cc0c:	ldr	r3, [r4, #20]
   1cc10:	add	r0, r3, r0
   1cc14:	str	r0, [r4, #20]
   1cc18:	add	r6, r6, #8
   1cc1c:	sub	r5, r7, #2
   1cc20:	cmp	r7, #1
   1cc24:	beq	1cd14 <flatcc_json_printer_int32_vector_field@@Base+0x1f0>
   1cc28:	mov	r7, #44	; 0x2c
   1cc2c:	mov	r8, #0
   1cc30:	mov	r9, #10
   1cc34:	b	1ccb8 <flatcc_json_printer_int32_vector_field@@Base+0x194>
   1cc38:	ldr	r3, [r4, #20]
   1cc3c:	add	r2, r3, #1
   1cc40:	str	r2, [r4, #20]
   1cc44:	mov	r2, #10
   1cc48:	strb	r2, [r3]
   1cc4c:	mov	r0, r4
   1cc50:	bl	152dc <main@@Base+0x1700>
   1cc54:	b	1cc00 <flatcc_json_printer_int32_vector_field@@Base+0xdc>
   1cc58:	ldr	r3, [r4, #20]
   1cc5c:	add	r2, r3, #1
   1cc60:	str	r2, [r4, #20]
   1cc64:	strb	r9, [r3]
   1cc68:	ldrb	r3, [r4, #25]
   1cc6c:	ldr	sl, [r4, #32]
   1cc70:	mul	sl, sl, r3
   1cc74:	ldr	r0, [r4, #20]
   1cc78:	add	r3, r0, sl
   1cc7c:	ldr	r2, [r4, #16]
   1cc80:	cmp	r2, r3
   1cc84:	bcs	1ccf8 <flatcc_json_printer_int32_vector_field@@Base+0x1d4>
   1cc88:	mov	r1, sl
   1cc8c:	mov	r0, r4
   1cc90:	bl	15218 <main@@Base+0x163c>
   1cc94:	ldr	r1, [r4, #20]
   1cc98:	ldr	r0, [r6], #4
   1cc9c:	bl	149a4 <main@@Base+0xdc8>
   1cca0:	ldr	r3, [r4, #20]
   1cca4:	add	r0, r3, r0
   1cca8:	str	r0, [r4, #20]
   1ccac:	sub	r5, r5, #1
   1ccb0:	cmn	r5, #1
   1ccb4:	beq	1cd14 <flatcc_json_printer_int32_vector_field@@Base+0x1f0>
   1ccb8:	ldr	r3, [r4, #20]
   1ccbc:	add	r2, r3, #1
   1ccc0:	str	r2, [r4, #20]
   1ccc4:	strb	r7, [r3]
   1ccc8:	ldrb	r3, [r4, #25]
   1cccc:	cmp	r3, #0
   1ccd0:	bne	1cc58 <flatcc_json_printer_int32_vector_field@@Base+0x134>
   1ccd4:	ldr	r2, [r4, #20]
   1ccd8:	ldr	r3, [r4, #16]
   1ccdc:	cmp	r2, r3
   1cce0:	bcc	1cc94 <flatcc_json_printer_int32_vector_field@@Base+0x170>
   1cce4:	ldr	r3, [r4, #44]	; 0x2c
   1cce8:	mov	r1, r8
   1ccec:	mov	r0, r4
   1ccf0:	blx	r3
   1ccf4:	b	1cc94 <flatcc_json_printer_int32_vector_field@@Base+0x170>
   1ccf8:	mov	r2, sl
   1ccfc:	mov	r1, #32
   1cd00:	bl	124c4 <memset@plt>
   1cd04:	ldr	r3, [r4, #20]
   1cd08:	add	sl, r3, sl
   1cd0c:	str	sl, [r4, #20]
   1cd10:	b	1cc94 <flatcc_json_printer_int32_vector_field@@Base+0x170>
   1cd14:	ldrb	r3, [r4, #25]
   1cd18:	cmp	r3, #0
   1cd1c:	bne	1cd4c <flatcc_json_printer_int32_vector_field@@Base+0x228>
   1cd20:	ldr	r3, [r4, #20]
   1cd24:	add	r2, r3, #1
   1cd28:	str	r2, [r4, #20]
   1cd2c:	mov	r2, #93	; 0x5d
   1cd30:	strb	r2, [r3]
   1cd34:	ldrd	r4, [sp]
   1cd38:	ldrd	r6, [sp, #8]
   1cd3c:	ldrd	r8, [sp, #16]
   1cd40:	ldr	sl, [sp, #24]
   1cd44:	add	sp, sp, #28
   1cd48:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd4c:	ldr	r3, [r4, #20]
   1cd50:	add	r2, r3, #1
   1cd54:	str	r2, [r4, #20]
   1cd58:	mov	r2, #10
   1cd5c:	strb	r2, [r3]
   1cd60:	ldr	r5, [r4, #32]
   1cd64:	sub	r5, r5, #1
   1cd68:	str	r5, [r4, #32]
   1cd6c:	ldrb	r3, [r4, #25]
   1cd70:	mul	r5, r5, r3
   1cd74:	ldr	r0, [r4, #20]
   1cd78:	add	r3, r0, r5
   1cd7c:	ldr	r2, [r4, #16]
   1cd80:	cmp	r2, r3
   1cd84:	bcs	1cd98 <flatcc_json_printer_int32_vector_field@@Base+0x274>
   1cd88:	mov	r1, r5
   1cd8c:	mov	r0, r4
   1cd90:	bl	15218 <main@@Base+0x163c>
   1cd94:	b	1cd20 <flatcc_json_printer_int32_vector_field@@Base+0x1fc>
   1cd98:	mov	r2, r5
   1cd9c:	mov	r1, #32
   1cda0:	bl	124c4 <memset@plt>
   1cda4:	ldr	r3, [r4, #20]
   1cda8:	add	r5, r3, r5
   1cdac:	str	r5, [r4, #20]
   1cdb0:	b	1cd20 <flatcc_json_printer_int32_vector_field@@Base+0x1fc>

0001cdb4 <flatcc_json_printer_int64_vector_field@@Base>:
   1cdb4:	add	r2, r2, #2
   1cdb8:	lsl	r2, r2, #1
   1cdbc:	ldr	ip, [r1, #8]
   1cdc0:	cmp	ip, r2
   1cdc4:	bxle	lr
   1cdc8:	ldr	ip, [r1, #4]
   1cdcc:	ldrh	r2, [ip, r2]
   1cdd0:	cmp	r2, #0
   1cdd4:	bxeq	lr
   1cdd8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1cddc:	strd	r6, [sp, #8]
   1cde0:	strd	r8, [sp, #16]
   1cde4:	str	sl, [sp, #24]
   1cde8:	str	lr, [sp, #28]
   1cdec:	ldr	ip, [r1]
   1cdf0:	adds	lr, ip, r2
   1cdf4:	beq	1cfc4 <flatcc_json_printer_int64_vector_field@@Base+0x210>
   1cdf8:	ldr	r4, [r1, #16]
   1cdfc:	add	r5, r4, #1
   1ce00:	str	r5, [r1, #16]
   1ce04:	cmp	r4, #0
   1ce08:	beq	1ce20 <flatcc_json_printer_int64_vector_field@@Base+0x6c>
   1ce0c:	ldr	r1, [r0, #20]
   1ce10:	add	r4, r1, #1
   1ce14:	str	r4, [r0, #20]
   1ce18:	mov	r4, #44	; 0x2c
   1ce1c:	strb	r4, [r1]
   1ce20:	mov	r1, r3
   1ce24:	mov	r4, r0
   1ce28:	ldr	r3, [ip, r2]
   1ce2c:	add	r6, lr, r3
   1ce30:	ldr	r7, [lr, r3]
   1ce34:	ldr	r2, [sp, #32]
   1ce38:	bl	15808 <main@@Base+0x1c2c>
   1ce3c:	ldr	r3, [r4, #32]
   1ce40:	add	r3, r3, #1
   1ce44:	str	r3, [r4, #32]
   1ce48:	ldr	r3, [r4, #20]
   1ce4c:	add	r2, r3, #1
   1ce50:	str	r2, [r4, #20]
   1ce54:	mov	r2, #91	; 0x5b
   1ce58:	strb	r2, [r3]
   1ce5c:	cmp	r7, #0
   1ce60:	beq	1cfa4 <flatcc_json_printer_int64_vector_field@@Base+0x1f0>
   1ce64:	ldrb	r3, [r4, #25]
   1ce68:	cmp	r3, #0
   1ce6c:	bne	1cec8 <flatcc_json_printer_int64_vector_field@@Base+0x114>
   1ce70:	ldr	r2, [r4, #20]
   1ce74:	ldr	r3, [r4, #16]
   1ce78:	cmp	r2, r3
   1ce7c:	bcc	1ce90 <flatcc_json_printer_int64_vector_field@@Base+0xdc>
   1ce80:	ldr	r3, [r4, #44]	; 0x2c
   1ce84:	mov	r1, #0
   1ce88:	mov	r0, r4
   1ce8c:	blx	r3
   1ce90:	ldr	r2, [r4, #20]
   1ce94:	ldrd	r0, [r6, #4]
   1ce98:	bl	149dc <main@@Base+0xe00>
   1ce9c:	ldr	r3, [r4, #20]
   1cea0:	add	r0, r3, r0
   1cea4:	str	r0, [r4, #20]
   1cea8:	add	r6, r6, #12
   1ceac:	sub	r5, r7, #2
   1ceb0:	cmp	r7, #1
   1ceb4:	beq	1cfa4 <flatcc_json_printer_int64_vector_field@@Base+0x1f0>
   1ceb8:	mov	r7, #44	; 0x2c
   1cebc:	mov	r8, #0
   1cec0:	mov	r9, #10
   1cec4:	b	1cf48 <flatcc_json_printer_int64_vector_field@@Base+0x194>
   1cec8:	ldr	r3, [r4, #20]
   1cecc:	add	r2, r3, #1
   1ced0:	str	r2, [r4, #20]
   1ced4:	mov	r2, #10
   1ced8:	strb	r2, [r3]
   1cedc:	mov	r0, r4
   1cee0:	bl	152dc <main@@Base+0x1700>
   1cee4:	b	1ce90 <flatcc_json_printer_int64_vector_field@@Base+0xdc>
   1cee8:	ldr	r3, [r4, #20]
   1ceec:	add	r2, r3, #1
   1cef0:	str	r2, [r4, #20]
   1cef4:	strb	r9, [r3]
   1cef8:	ldrb	r3, [r4, #25]
   1cefc:	ldr	sl, [r4, #32]
   1cf00:	mul	sl, sl, r3
   1cf04:	ldr	r0, [r4, #20]
   1cf08:	add	r3, r0, sl
   1cf0c:	ldr	r2, [r4, #16]
   1cf10:	cmp	r2, r3
   1cf14:	bcs	1cf88 <flatcc_json_printer_int64_vector_field@@Base+0x1d4>
   1cf18:	mov	r1, sl
   1cf1c:	mov	r0, r4
   1cf20:	bl	15218 <main@@Base+0x163c>
   1cf24:	ldr	r2, [r4, #20]
   1cf28:	ldrd	r0, [r6], #8
   1cf2c:	bl	149dc <main@@Base+0xe00>
   1cf30:	ldr	r3, [r4, #20]
   1cf34:	add	r0, r3, r0
   1cf38:	str	r0, [r4, #20]
   1cf3c:	sub	r5, r5, #1
   1cf40:	cmn	r5, #1
   1cf44:	beq	1cfa4 <flatcc_json_printer_int64_vector_field@@Base+0x1f0>
   1cf48:	ldr	r3, [r4, #20]
   1cf4c:	add	r2, r3, #1
   1cf50:	str	r2, [r4, #20]
   1cf54:	strb	r7, [r3]
   1cf58:	ldrb	r3, [r4, #25]
   1cf5c:	cmp	r3, #0
   1cf60:	bne	1cee8 <flatcc_json_printer_int64_vector_field@@Base+0x134>
   1cf64:	ldr	r2, [r4, #20]
   1cf68:	ldr	r3, [r4, #16]
   1cf6c:	cmp	r2, r3
   1cf70:	bcc	1cf24 <flatcc_json_printer_int64_vector_field@@Base+0x170>
   1cf74:	ldr	r3, [r4, #44]	; 0x2c
   1cf78:	mov	r1, r8
   1cf7c:	mov	r0, r4
   1cf80:	blx	r3
   1cf84:	b	1cf24 <flatcc_json_printer_int64_vector_field@@Base+0x170>
   1cf88:	mov	r2, sl
   1cf8c:	mov	r1, #32
   1cf90:	bl	124c4 <memset@plt>
   1cf94:	ldr	r3, [r4, #20]
   1cf98:	add	sl, r3, sl
   1cf9c:	str	sl, [r4, #20]
   1cfa0:	b	1cf24 <flatcc_json_printer_int64_vector_field@@Base+0x170>
   1cfa4:	ldrb	r3, [r4, #25]
   1cfa8:	cmp	r3, #0
   1cfac:	bne	1cfdc <flatcc_json_printer_int64_vector_field@@Base+0x228>
   1cfb0:	ldr	r3, [r4, #20]
   1cfb4:	add	r2, r3, #1
   1cfb8:	str	r2, [r4, #20]
   1cfbc:	mov	r2, #93	; 0x5d
   1cfc0:	strb	r2, [r3]
   1cfc4:	ldrd	r4, [sp]
   1cfc8:	ldrd	r6, [sp, #8]
   1cfcc:	ldrd	r8, [sp, #16]
   1cfd0:	ldr	sl, [sp, #24]
   1cfd4:	add	sp, sp, #28
   1cfd8:	pop	{pc}		; (ldr pc, [sp], #4)
   1cfdc:	ldr	r3, [r4, #20]
   1cfe0:	add	r2, r3, #1
   1cfe4:	str	r2, [r4, #20]
   1cfe8:	mov	r2, #10
   1cfec:	strb	r2, [r3]
   1cff0:	ldr	r5, [r4, #32]
   1cff4:	sub	r5, r5, #1
   1cff8:	str	r5, [r4, #32]
   1cffc:	ldrb	r3, [r4, #25]
   1d000:	mul	r5, r5, r3
   1d004:	ldr	r0, [r4, #20]
   1d008:	add	r3, r0, r5
   1d00c:	ldr	r2, [r4, #16]
   1d010:	cmp	r2, r3
   1d014:	bcs	1d028 <flatcc_json_printer_int64_vector_field@@Base+0x274>
   1d018:	mov	r1, r5
   1d01c:	mov	r0, r4
   1d020:	bl	15218 <main@@Base+0x163c>
   1d024:	b	1cfb0 <flatcc_json_printer_int64_vector_field@@Base+0x1fc>
   1d028:	mov	r2, r5
   1d02c:	mov	r1, #32
   1d030:	bl	124c4 <memset@plt>
   1d034:	ldr	r3, [r4, #20]
   1d038:	add	r5, r3, r5
   1d03c:	str	r5, [r4, #20]
   1d040:	b	1cfb0 <flatcc_json_printer_int64_vector_field@@Base+0x1fc>

0001d044 <flatcc_json_printer_bool_vector_field@@Base>:
   1d044:	add	r2, r2, #2
   1d048:	lsl	r2, r2, #1
   1d04c:	ldr	ip, [r1, #8]
   1d050:	cmp	ip, r2
   1d054:	bxle	lr
   1d058:	ldr	ip, [r1, #4]
   1d05c:	ldrh	r2, [ip, r2]
   1d060:	cmp	r2, #0
   1d064:	bxeq	lr
   1d068:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d06c:	strd	r6, [sp, #8]
   1d070:	strd	r8, [sp, #16]
   1d074:	str	sl, [sp, #24]
   1d078:	str	lr, [sp, #28]
   1d07c:	ldr	ip, [r1]
   1d080:	adds	lr, ip, r2
   1d084:	beq	1d294 <flatcc_json_printer_bool_vector_field@@Base+0x250>
   1d088:	ldr	r4, [r1, #16]
   1d08c:	add	r5, r4, #1
   1d090:	str	r5, [r1, #16]
   1d094:	cmp	r4, #0
   1d098:	beq	1d0b0 <flatcc_json_printer_bool_vector_field@@Base+0x6c>
   1d09c:	ldr	r1, [r0, #20]
   1d0a0:	add	r4, r1, #1
   1d0a4:	str	r4, [r0, #20]
   1d0a8:	mov	r4, #44	; 0x2c
   1d0ac:	strb	r4, [r1]
   1d0b0:	mov	r1, r3
   1d0b4:	mov	r4, r0
   1d0b8:	ldr	r3, [ip, r2]
   1d0bc:	add	r6, lr, r3
   1d0c0:	ldr	r7, [lr, r3]
   1d0c4:	ldr	r2, [sp, #32]
   1d0c8:	bl	15808 <main@@Base+0x1c2c>
   1d0cc:	ldr	r3, [r4, #32]
   1d0d0:	add	r3, r3, #1
   1d0d4:	str	r3, [r4, #32]
   1d0d8:	ldr	r3, [r4, #20]
   1d0dc:	add	r2, r3, #1
   1d0e0:	str	r2, [r4, #20]
   1d0e4:	mov	r2, #91	; 0x5b
   1d0e8:	strb	r2, [r3]
   1d0ec:	cmp	r7, #0
   1d0f0:	beq	1d274 <flatcc_json_printer_bool_vector_field@@Base+0x230>
   1d0f4:	ldrb	r3, [r4, #25]
   1d0f8:	cmp	r3, #0
   1d0fc:	bne	1d15c <flatcc_json_printer_bool_vector_field@@Base+0x118>
   1d100:	ldr	r2, [r4, #20]
   1d104:	ldr	r3, [r4, #16]
   1d108:	cmp	r2, r3
   1d10c:	bcc	1d120 <flatcc_json_printer_bool_vector_field@@Base+0xdc>
   1d110:	ldr	r3, [r4, #44]	; 0x2c
   1d114:	mov	r1, #0
   1d118:	mov	r0, r4
   1d11c:	blx	r3
   1d120:	ldr	r1, [r4, #20]
   1d124:	ldrb	r0, [r6, #4]
   1d128:	bl	151d0 <main@@Base+0x15f4>
   1d12c:	ldr	r3, [r4, #20]
   1d130:	add	r0, r3, r0
   1d134:	str	r0, [r4, #20]
   1d138:	add	r5, r6, #5
   1d13c:	cmp	r7, #1
   1d140:	beq	1d274 <flatcc_json_printer_bool_vector_field@@Base+0x230>
   1d144:	add	r7, r7, #4
   1d148:	add	r6, r6, r7
   1d14c:	mov	r7, #44	; 0x2c
   1d150:	mov	r8, #0
   1d154:	mov	r9, #10
   1d158:	b	1d218 <flatcc_json_printer_bool_vector_field@@Base+0x1d4>
   1d15c:	ldr	r3, [r4, #20]
   1d160:	add	r2, r3, #1
   1d164:	str	r2, [r4, #20]
   1d168:	mov	r2, #10
   1d16c:	strb	r2, [r3]
   1d170:	ldrb	r3, [r4, #25]
   1d174:	ldr	r5, [r4, #32]
   1d178:	mul	r5, r5, r3
   1d17c:	ldr	r0, [r4, #20]
   1d180:	add	r3, r0, r5
   1d184:	ldr	r2, [r4, #16]
   1d188:	cmp	r2, r3
   1d18c:	bcs	1d1a0 <flatcc_json_printer_bool_vector_field@@Base+0x15c>
   1d190:	mov	r1, r5
   1d194:	mov	r0, r4
   1d198:	bl	15218 <main@@Base+0x163c>
   1d19c:	b	1d120 <flatcc_json_printer_bool_vector_field@@Base+0xdc>
   1d1a0:	mov	r2, r5
   1d1a4:	mov	r1, #32
   1d1a8:	bl	124c4 <memset@plt>
   1d1ac:	ldr	r3, [r4, #20]
   1d1b0:	add	r5, r3, r5
   1d1b4:	str	r5, [r4, #20]
   1d1b8:	b	1d120 <flatcc_json_printer_bool_vector_field@@Base+0xdc>
   1d1bc:	ldr	r3, [r4, #20]
   1d1c0:	add	r2, r3, #1
   1d1c4:	str	r2, [r4, #20]
   1d1c8:	strb	r9, [r3]
   1d1cc:	ldrb	r3, [r4, #25]
   1d1d0:	ldr	sl, [r4, #32]
   1d1d4:	mul	sl, sl, r3
   1d1d8:	ldr	r0, [r4, #20]
   1d1dc:	add	r3, r0, sl
   1d1e0:	ldr	r2, [r4, #16]
   1d1e4:	cmp	r2, r3
   1d1e8:	bcs	1d258 <flatcc_json_printer_bool_vector_field@@Base+0x214>
   1d1ec:	mov	r1, sl
   1d1f0:	mov	r0, r4
   1d1f4:	bl	15218 <main@@Base+0x163c>
   1d1f8:	ldr	r1, [r4, #20]
   1d1fc:	ldrb	r0, [r5], #1
   1d200:	bl	151d0 <main@@Base+0x15f4>
   1d204:	ldr	r3, [r4, #20]
   1d208:	add	r0, r3, r0
   1d20c:	str	r0, [r4, #20]
   1d210:	cmp	r6, r5
   1d214:	beq	1d274 <flatcc_json_printer_bool_vector_field@@Base+0x230>
   1d218:	ldr	r3, [r4, #20]
   1d21c:	add	r2, r3, #1
   1d220:	str	r2, [r4, #20]
   1d224:	strb	r7, [r3]
   1d228:	ldrb	r3, [r4, #25]
   1d22c:	cmp	r3, #0
   1d230:	bne	1d1bc <flatcc_json_printer_bool_vector_field@@Base+0x178>
   1d234:	ldr	r2, [r4, #20]
   1d238:	ldr	r3, [r4, #16]
   1d23c:	cmp	r2, r3
   1d240:	bcc	1d1f8 <flatcc_json_printer_bool_vector_field@@Base+0x1b4>
   1d244:	ldr	r3, [r4, #44]	; 0x2c
   1d248:	mov	r1, r8
   1d24c:	mov	r0, r4
   1d250:	blx	r3
   1d254:	b	1d1f8 <flatcc_json_printer_bool_vector_field@@Base+0x1b4>
   1d258:	mov	r2, sl
   1d25c:	mov	r1, #32
   1d260:	bl	124c4 <memset@plt>
   1d264:	ldr	r3, [r4, #20]
   1d268:	add	sl, r3, sl
   1d26c:	str	sl, [r4, #20]
   1d270:	b	1d1f8 <flatcc_json_printer_bool_vector_field@@Base+0x1b4>
   1d274:	ldrb	r3, [r4, #25]
   1d278:	cmp	r3, #0
   1d27c:	bne	1d2ac <flatcc_json_printer_bool_vector_field@@Base+0x268>
   1d280:	ldr	r3, [r4, #20]
   1d284:	add	r2, r3, #1
   1d288:	str	r2, [r4, #20]
   1d28c:	mov	r2, #93	; 0x5d
   1d290:	strb	r2, [r3]
   1d294:	ldrd	r4, [sp]
   1d298:	ldrd	r6, [sp, #8]
   1d29c:	ldrd	r8, [sp, #16]
   1d2a0:	ldr	sl, [sp, #24]
   1d2a4:	add	sp, sp, #28
   1d2a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d2ac:	ldr	r3, [r4, #20]
   1d2b0:	add	r2, r3, #1
   1d2b4:	str	r2, [r4, #20]
   1d2b8:	mov	r2, #10
   1d2bc:	strb	r2, [r3]
   1d2c0:	ldr	r5, [r4, #32]
   1d2c4:	sub	r5, r5, #1
   1d2c8:	str	r5, [r4, #32]
   1d2cc:	ldrb	r3, [r4, #25]
   1d2d0:	mul	r5, r5, r3
   1d2d4:	ldr	r0, [r4, #20]
   1d2d8:	add	r3, r0, r5
   1d2dc:	ldr	r2, [r4, #16]
   1d2e0:	cmp	r2, r3
   1d2e4:	bcs	1d2f8 <flatcc_json_printer_bool_vector_field@@Base+0x2b4>
   1d2e8:	mov	r1, r5
   1d2ec:	mov	r0, r4
   1d2f0:	bl	15218 <main@@Base+0x163c>
   1d2f4:	b	1d280 <flatcc_json_printer_bool_vector_field@@Base+0x23c>
   1d2f8:	mov	r2, r5
   1d2fc:	mov	r1, #32
   1d300:	bl	124c4 <memset@plt>
   1d304:	ldr	r3, [r4, #20]
   1d308:	add	r5, r3, r5
   1d30c:	str	r5, [r4, #20]
   1d310:	b	1d280 <flatcc_json_printer_bool_vector_field@@Base+0x23c>

0001d314 <flatcc_json_printer_float_vector_field@@Base>:
   1d314:	add	r2, r2, #2
   1d318:	lsl	r2, r2, #1
   1d31c:	ldr	ip, [r1, #8]
   1d320:	cmp	ip, r2
   1d324:	bxle	lr
   1d328:	ldr	ip, [r1, #4]
   1d32c:	ldrh	r2, [ip, r2]
   1d330:	cmp	r2, #0
   1d334:	bxeq	lr
   1d338:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d33c:	strd	r6, [sp, #8]
   1d340:	strd	r8, [sp, #16]
   1d344:	str	sl, [sp, #24]
   1d348:	str	lr, [sp, #28]
   1d34c:	ldr	ip, [r1]
   1d350:	adds	lr, ip, r2
   1d354:	beq	1d52c <flatcc_json_printer_float_vector_field@@Base+0x218>
   1d358:	ldr	r4, [r1, #16]
   1d35c:	add	r5, r4, #1
   1d360:	str	r5, [r1, #16]
   1d364:	cmp	r4, #0
   1d368:	beq	1d380 <flatcc_json_printer_float_vector_field@@Base+0x6c>
   1d36c:	ldr	r1, [r0, #20]
   1d370:	add	r4, r1, #1
   1d374:	str	r4, [r0, #20]
   1d378:	mov	r4, #44	; 0x2c
   1d37c:	strb	r4, [r1]
   1d380:	mov	r1, r3
   1d384:	mov	r4, r0
   1d388:	ldr	r3, [ip, r2]
   1d38c:	add	r6, lr, r3
   1d390:	ldr	r7, [lr, r3]
   1d394:	ldr	r2, [sp, #32]
   1d398:	bl	15808 <main@@Base+0x1c2c>
   1d39c:	ldr	r3, [r4, #32]
   1d3a0:	add	r3, r3, #1
   1d3a4:	str	r3, [r4, #32]
   1d3a8:	ldr	r3, [r4, #20]
   1d3ac:	add	r2, r3, #1
   1d3b0:	str	r2, [r4, #20]
   1d3b4:	mov	r2, #91	; 0x5b
   1d3b8:	strb	r2, [r3]
   1d3bc:	cmp	r7, #0
   1d3c0:	beq	1d50c <flatcc_json_printer_float_vector_field@@Base+0x1f8>
   1d3c4:	ldrb	r3, [r4, #25]
   1d3c8:	cmp	r3, #0
   1d3cc:	bne	1d42c <flatcc_json_printer_float_vector_field@@Base+0x118>
   1d3d0:	ldr	r2, [r4, #20]
   1d3d4:	ldr	r3, [r4, #16]
   1d3d8:	cmp	r2, r3
   1d3dc:	bcc	1d3f0 <flatcc_json_printer_float_vector_field@@Base+0xdc>
   1d3e0:	ldr	r3, [r4, #44]	; 0x2c
   1d3e4:	mov	r1, #0
   1d3e8:	mov	r0, r4
   1d3ec:	blx	r3
   1d3f0:	vldr	s0, [r6, #4]
   1d3f4:	ldr	r0, [r4, #20]
   1d3f8:	vcvt.f64.f32	d0, s0
   1d3fc:	bl	1596c <main@@Base+0x1d90>
   1d400:	ldr	r3, [r4, #20]
   1d404:	add	r0, r3, r0
   1d408:	str	r0, [r4, #20]
   1d40c:	add	r6, r6, #8
   1d410:	sub	r5, r7, #2
   1d414:	cmp	r7, #1
   1d418:	beq	1d50c <flatcc_json_printer_float_vector_field@@Base+0x1f8>
   1d41c:	mov	r7, #44	; 0x2c
   1d420:	mov	r8, #0
   1d424:	mov	r9, #10
   1d428:	b	1d4b0 <flatcc_json_printer_float_vector_field@@Base+0x19c>
   1d42c:	ldr	r3, [r4, #20]
   1d430:	add	r2, r3, #1
   1d434:	str	r2, [r4, #20]
   1d438:	mov	r2, #10
   1d43c:	strb	r2, [r3]
   1d440:	mov	r0, r4
   1d444:	bl	152dc <main@@Base+0x1700>
   1d448:	b	1d3f0 <flatcc_json_printer_float_vector_field@@Base+0xdc>
   1d44c:	ldr	r3, [r4, #20]
   1d450:	add	r2, r3, #1
   1d454:	str	r2, [r4, #20]
   1d458:	strb	r9, [r3]
   1d45c:	ldrb	r3, [r4, #25]
   1d460:	ldr	sl, [r4, #32]
   1d464:	mul	sl, sl, r3
   1d468:	ldr	r0, [r4, #20]
   1d46c:	add	r3, r0, sl
   1d470:	ldr	r2, [r4, #16]
   1d474:	cmp	r2, r3
   1d478:	bcs	1d4f0 <flatcc_json_printer_float_vector_field@@Base+0x1dc>
   1d47c:	mov	r1, sl
   1d480:	mov	r0, r4
   1d484:	bl	15218 <main@@Base+0x163c>
   1d488:	vldmia	r6!, {s0}
   1d48c:	ldr	r0, [r4, #20]
   1d490:	vcvt.f64.f32	d0, s0
   1d494:	bl	1596c <main@@Base+0x1d90>
   1d498:	ldr	r3, [r4, #20]
   1d49c:	add	r0, r3, r0
   1d4a0:	str	r0, [r4, #20]
   1d4a4:	sub	r5, r5, #1
   1d4a8:	cmn	r5, #1
   1d4ac:	beq	1d50c <flatcc_json_printer_float_vector_field@@Base+0x1f8>
   1d4b0:	ldr	r3, [r4, #20]
   1d4b4:	add	r2, r3, #1
   1d4b8:	str	r2, [r4, #20]
   1d4bc:	strb	r7, [r3]
   1d4c0:	ldrb	r3, [r4, #25]
   1d4c4:	cmp	r3, #0
   1d4c8:	bne	1d44c <flatcc_json_printer_float_vector_field@@Base+0x138>
   1d4cc:	ldr	r2, [r4, #20]
   1d4d0:	ldr	r3, [r4, #16]
   1d4d4:	cmp	r2, r3
   1d4d8:	bcc	1d488 <flatcc_json_printer_float_vector_field@@Base+0x174>
   1d4dc:	ldr	r3, [r4, #44]	; 0x2c
   1d4e0:	mov	r1, r8
   1d4e4:	mov	r0, r4
   1d4e8:	blx	r3
   1d4ec:	b	1d488 <flatcc_json_printer_float_vector_field@@Base+0x174>
   1d4f0:	mov	r2, sl
   1d4f4:	mov	r1, #32
   1d4f8:	bl	124c4 <memset@plt>
   1d4fc:	ldr	r3, [r4, #20]
   1d500:	add	sl, r3, sl
   1d504:	str	sl, [r4, #20]
   1d508:	b	1d488 <flatcc_json_printer_float_vector_field@@Base+0x174>
   1d50c:	ldrb	r3, [r4, #25]
   1d510:	cmp	r3, #0
   1d514:	bne	1d544 <flatcc_json_printer_float_vector_field@@Base+0x230>
   1d518:	ldr	r3, [r4, #20]
   1d51c:	add	r2, r3, #1
   1d520:	str	r2, [r4, #20]
   1d524:	mov	r2, #93	; 0x5d
   1d528:	strb	r2, [r3]
   1d52c:	ldrd	r4, [sp]
   1d530:	ldrd	r6, [sp, #8]
   1d534:	ldrd	r8, [sp, #16]
   1d538:	ldr	sl, [sp, #24]
   1d53c:	add	sp, sp, #28
   1d540:	pop	{pc}		; (ldr pc, [sp], #4)
   1d544:	ldr	r3, [r4, #20]
   1d548:	add	r2, r3, #1
   1d54c:	str	r2, [r4, #20]
   1d550:	mov	r2, #10
   1d554:	strb	r2, [r3]
   1d558:	ldr	r5, [r4, #32]
   1d55c:	sub	r5, r5, #1
   1d560:	str	r5, [r4, #32]
   1d564:	ldrb	r3, [r4, #25]
   1d568:	mul	r5, r5, r3
   1d56c:	ldr	r0, [r4, #20]
   1d570:	add	r3, r0, r5
   1d574:	ldr	r2, [r4, #16]
   1d578:	cmp	r2, r3
   1d57c:	bcs	1d590 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   1d580:	mov	r1, r5
   1d584:	mov	r0, r4
   1d588:	bl	15218 <main@@Base+0x163c>
   1d58c:	b	1d518 <flatcc_json_printer_float_vector_field@@Base+0x204>
   1d590:	mov	r2, r5
   1d594:	mov	r1, #32
   1d598:	bl	124c4 <memset@plt>
   1d59c:	ldr	r3, [r4, #20]
   1d5a0:	add	r5, r3, r5
   1d5a4:	str	r5, [r4, #20]
   1d5a8:	b	1d518 <flatcc_json_printer_float_vector_field@@Base+0x204>

0001d5ac <flatcc_json_printer_double_vector_field@@Base>:
   1d5ac:	add	r2, r2, #2
   1d5b0:	lsl	r2, r2, #1
   1d5b4:	ldr	ip, [r1, #8]
   1d5b8:	cmp	ip, r2
   1d5bc:	bxle	lr
   1d5c0:	ldr	ip, [r1, #4]
   1d5c4:	ldrh	r2, [ip, r2]
   1d5c8:	cmp	r2, #0
   1d5cc:	bxeq	lr
   1d5d0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d5d4:	strd	r6, [sp, #8]
   1d5d8:	strd	r8, [sp, #16]
   1d5dc:	str	sl, [sp, #24]
   1d5e0:	str	lr, [sp, #28]
   1d5e4:	ldr	ip, [r1]
   1d5e8:	adds	lr, ip, r2
   1d5ec:	beq	1d7bc <flatcc_json_printer_double_vector_field@@Base+0x210>
   1d5f0:	ldr	r4, [r1, #16]
   1d5f4:	add	r5, r4, #1
   1d5f8:	str	r5, [r1, #16]
   1d5fc:	cmp	r4, #0
   1d600:	beq	1d618 <flatcc_json_printer_double_vector_field@@Base+0x6c>
   1d604:	ldr	r1, [r0, #20]
   1d608:	add	r4, r1, #1
   1d60c:	str	r4, [r0, #20]
   1d610:	mov	r4, #44	; 0x2c
   1d614:	strb	r4, [r1]
   1d618:	mov	r1, r3
   1d61c:	mov	r4, r0
   1d620:	ldr	r3, [ip, r2]
   1d624:	add	r6, lr, r3
   1d628:	ldr	r7, [lr, r3]
   1d62c:	ldr	r2, [sp, #32]
   1d630:	bl	15808 <main@@Base+0x1c2c>
   1d634:	ldr	r3, [r4, #32]
   1d638:	add	r3, r3, #1
   1d63c:	str	r3, [r4, #32]
   1d640:	ldr	r3, [r4, #20]
   1d644:	add	r2, r3, #1
   1d648:	str	r2, [r4, #20]
   1d64c:	mov	r2, #91	; 0x5b
   1d650:	strb	r2, [r3]
   1d654:	cmp	r7, #0
   1d658:	beq	1d79c <flatcc_json_printer_double_vector_field@@Base+0x1f0>
   1d65c:	ldrb	r3, [r4, #25]
   1d660:	cmp	r3, #0
   1d664:	bne	1d6c0 <flatcc_json_printer_double_vector_field@@Base+0x114>
   1d668:	ldr	r2, [r4, #20]
   1d66c:	ldr	r3, [r4, #16]
   1d670:	cmp	r2, r3
   1d674:	bcc	1d688 <flatcc_json_printer_double_vector_field@@Base+0xdc>
   1d678:	ldr	r3, [r4, #44]	; 0x2c
   1d67c:	mov	r1, #0
   1d680:	mov	r0, r4
   1d684:	blx	r3
   1d688:	ldr	r0, [r4, #20]
   1d68c:	vldr	d0, [r6, #4]
   1d690:	bl	1596c <main@@Base+0x1d90>
   1d694:	ldr	r3, [r4, #20]
   1d698:	add	r0, r3, r0
   1d69c:	str	r0, [r4, #20]
   1d6a0:	add	r6, r6, #12
   1d6a4:	sub	r5, r7, #2
   1d6a8:	cmp	r7, #1
   1d6ac:	beq	1d79c <flatcc_json_printer_double_vector_field@@Base+0x1f0>
   1d6b0:	mov	r7, #44	; 0x2c
   1d6b4:	mov	r8, #0
   1d6b8:	mov	r9, #10
   1d6bc:	b	1d740 <flatcc_json_printer_double_vector_field@@Base+0x194>
   1d6c0:	ldr	r3, [r4, #20]
   1d6c4:	add	r2, r3, #1
   1d6c8:	str	r2, [r4, #20]
   1d6cc:	mov	r2, #10
   1d6d0:	strb	r2, [r3]
   1d6d4:	mov	r0, r4
   1d6d8:	bl	152dc <main@@Base+0x1700>
   1d6dc:	b	1d688 <flatcc_json_printer_double_vector_field@@Base+0xdc>
   1d6e0:	ldr	r3, [r4, #20]
   1d6e4:	add	r2, r3, #1
   1d6e8:	str	r2, [r4, #20]
   1d6ec:	strb	r9, [r3]
   1d6f0:	ldrb	r3, [r4, #25]
   1d6f4:	ldr	sl, [r4, #32]
   1d6f8:	mul	sl, sl, r3
   1d6fc:	ldr	r0, [r4, #20]
   1d700:	add	r3, r0, sl
   1d704:	ldr	r2, [r4, #16]
   1d708:	cmp	r2, r3
   1d70c:	bcs	1d780 <flatcc_json_printer_double_vector_field@@Base+0x1d4>
   1d710:	mov	r1, sl
   1d714:	mov	r0, r4
   1d718:	bl	15218 <main@@Base+0x163c>
   1d71c:	ldr	r0, [r4, #20]
   1d720:	vldmia	r6!, {d0}
   1d724:	bl	1596c <main@@Base+0x1d90>
   1d728:	ldr	r3, [r4, #20]
   1d72c:	add	r0, r3, r0
   1d730:	str	r0, [r4, #20]
   1d734:	sub	r5, r5, #1
   1d738:	cmn	r5, #1
   1d73c:	beq	1d79c <flatcc_json_printer_double_vector_field@@Base+0x1f0>
   1d740:	ldr	r3, [r4, #20]
   1d744:	add	r2, r3, #1
   1d748:	str	r2, [r4, #20]
   1d74c:	strb	r7, [r3]
   1d750:	ldrb	r3, [r4, #25]
   1d754:	cmp	r3, #0
   1d758:	bne	1d6e0 <flatcc_json_printer_double_vector_field@@Base+0x134>
   1d75c:	ldr	r2, [r4, #20]
   1d760:	ldr	r3, [r4, #16]
   1d764:	cmp	r2, r3
   1d768:	bcc	1d71c <flatcc_json_printer_double_vector_field@@Base+0x170>
   1d76c:	ldr	r3, [r4, #44]	; 0x2c
   1d770:	mov	r1, r8
   1d774:	mov	r0, r4
   1d778:	blx	r3
   1d77c:	b	1d71c <flatcc_json_printer_double_vector_field@@Base+0x170>
   1d780:	mov	r2, sl
   1d784:	mov	r1, #32
   1d788:	bl	124c4 <memset@plt>
   1d78c:	ldr	r3, [r4, #20]
   1d790:	add	sl, r3, sl
   1d794:	str	sl, [r4, #20]
   1d798:	b	1d71c <flatcc_json_printer_double_vector_field@@Base+0x170>
   1d79c:	ldrb	r3, [r4, #25]
   1d7a0:	cmp	r3, #0
   1d7a4:	bne	1d7d4 <flatcc_json_printer_double_vector_field@@Base+0x228>
   1d7a8:	ldr	r3, [r4, #20]
   1d7ac:	add	r2, r3, #1
   1d7b0:	str	r2, [r4, #20]
   1d7b4:	mov	r2, #93	; 0x5d
   1d7b8:	strb	r2, [r3]
   1d7bc:	ldrd	r4, [sp]
   1d7c0:	ldrd	r6, [sp, #8]
   1d7c4:	ldrd	r8, [sp, #16]
   1d7c8:	ldr	sl, [sp, #24]
   1d7cc:	add	sp, sp, #28
   1d7d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d7d4:	ldr	r3, [r4, #20]
   1d7d8:	add	r2, r3, #1
   1d7dc:	str	r2, [r4, #20]
   1d7e0:	mov	r2, #10
   1d7e4:	strb	r2, [r3]
   1d7e8:	ldr	r5, [r4, #32]
   1d7ec:	sub	r5, r5, #1
   1d7f0:	str	r5, [r4, #32]
   1d7f4:	ldrb	r3, [r4, #25]
   1d7f8:	mul	r5, r5, r3
   1d7fc:	ldr	r0, [r4, #20]
   1d800:	add	r3, r0, r5
   1d804:	ldr	r2, [r4, #16]
   1d808:	cmp	r2, r3
   1d80c:	bcs	1d820 <flatcc_json_printer_double_vector_field@@Base+0x274>
   1d810:	mov	r1, r5
   1d814:	mov	r0, r4
   1d818:	bl	15218 <main@@Base+0x163c>
   1d81c:	b	1d7a8 <flatcc_json_printer_double_vector_field@@Base+0x1fc>
   1d820:	mov	r2, r5
   1d824:	mov	r1, #32
   1d828:	bl	124c4 <memset@plt>
   1d82c:	ldr	r3, [r4, #20]
   1d830:	add	r5, r3, r5
   1d834:	str	r5, [r4, #20]
   1d838:	b	1d7a8 <flatcc_json_printer_double_vector_field@@Base+0x1fc>

0001d83c <flatcc_json_printer_utype_enum_vector_field@@Base>:
   1d83c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1d840:	strd	r6, [sp, #8]
   1d844:	strd	r8, [sp, #16]
   1d848:	strd	sl, [sp, #24]
   1d84c:	str	lr, [sp, #32]
   1d850:	sub	sp, sp, #12
   1d854:	mov	r4, r0
   1d858:	ldr	r7, [sp, #52]	; 0x34
   1d85c:	ldrb	r0, [r0, #27]
   1d860:	cmp	r0, #0
   1d864:	bne	1d960 <flatcc_json_printer_utype_enum_vector_field@@Base+0x124>
   1d868:	add	r2, r2, #2
   1d86c:	lsl	r2, r2, #1
   1d870:	ldr	r0, [r1, #8]
   1d874:	cmp	r0, r2
   1d878:	ble	1da60 <flatcc_json_printer_utype_enum_vector_field@@Base+0x224>
   1d87c:	ldr	r0, [r1, #4]
   1d880:	ldrh	r2, [r0, r2]
   1d884:	cmp	r2, #0
   1d888:	beq	1da60 <flatcc_json_printer_utype_enum_vector_field@@Base+0x224>
   1d88c:	ldr	r0, [r1]
   1d890:	adds	ip, r0, r2
   1d894:	beq	1da60 <flatcc_json_printer_utype_enum_vector_field@@Base+0x224>
   1d898:	ldr	lr, [r1, #16]
   1d89c:	add	r5, lr, #1
   1d8a0:	str	r5, [r1, #16]
   1d8a4:	cmp	lr, #0
   1d8a8:	beq	1d8c0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x84>
   1d8ac:	ldr	r1, [r4, #20]
   1d8b0:	add	lr, r1, #1
   1d8b4:	str	lr, [r4, #20]
   1d8b8:	mov	lr, #44	; 0x2c
   1d8bc:	strb	lr, [r1]
   1d8c0:	ldr	r2, [r0, r2]
   1d8c4:	add	r6, ip, r2
   1d8c8:	ldr	r8, [ip, r2]
   1d8cc:	ldr	r2, [sp, #48]	; 0x30
   1d8d0:	mov	r1, r3
   1d8d4:	mov	r0, r4
   1d8d8:	bl	15808 <main@@Base+0x1c2c>
   1d8dc:	ldr	r3, [r4, #32]
   1d8e0:	add	r3, r3, #1
   1d8e4:	str	r3, [r4, #32]
   1d8e8:	ldr	r3, [r4, #20]
   1d8ec:	add	r2, r3, #1
   1d8f0:	str	r2, [r4, #20]
   1d8f4:	mov	r2, #91	; 0x5b
   1d8f8:	strb	r2, [r3]
   1d8fc:	cmp	r8, #0
   1d900:	beq	1da40 <flatcc_json_printer_utype_enum_vector_field@@Base+0x204>
   1d904:	ldrb	r3, [r4, #25]
   1d908:	cmp	r3, #0
   1d90c:	bne	1d974 <flatcc_json_printer_utype_enum_vector_field@@Base+0x138>
   1d910:	ldr	r2, [r4, #20]
   1d914:	ldr	r3, [r4, #16]
   1d918:	cmp	r2, r3
   1d91c:	bcc	1d930 <flatcc_json_printer_utype_enum_vector_field@@Base+0xf4>
   1d920:	ldr	r3, [r4, #44]	; 0x2c
   1d924:	mov	r1, #0
   1d928:	mov	r0, r4
   1d92c:	blx	r3
   1d930:	ldrb	r1, [r6, #4]
   1d934:	mov	r0, r4
   1d938:	blx	r7
   1d93c:	add	r5, r6, #5
   1d940:	cmp	r8, #1
   1d944:	beq	1da40 <flatcc_json_printer_utype_enum_vector_field@@Base+0x204>
   1d948:	add	r8, r8, #4
   1d94c:	add	r6, r6, r8
   1d950:	mov	r8, #44	; 0x2c
   1d954:	mov	r9, #0
   1d958:	mov	sl, #10
   1d95c:	b	1d9e4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a8>
   1d960:	ldr	r0, [sp, #48]	; 0x30
   1d964:	str	r0, [sp]
   1d968:	mov	r0, r4
   1d96c:	bl	1b8f4 <flatcc_json_printer_utype_vector_field@@Base>
   1d970:	b	1da60 <flatcc_json_printer_utype_enum_vector_field@@Base+0x224>
   1d974:	ldr	r3, [r4, #20]
   1d978:	add	r2, r3, #1
   1d97c:	str	r2, [r4, #20]
   1d980:	mov	r2, #10
   1d984:	strb	r2, [r3]
   1d988:	mov	r0, r4
   1d98c:	bl	152dc <main@@Base+0x1700>
   1d990:	b	1d930 <flatcc_json_printer_utype_enum_vector_field@@Base+0xf4>
   1d994:	ldr	r3, [r4, #20]
   1d998:	add	r2, r3, #1
   1d99c:	str	r2, [r4, #20]
   1d9a0:	strb	sl, [r3]
   1d9a4:	ldrb	r3, [r4, #25]
   1d9a8:	ldr	fp, [r4, #32]
   1d9ac:	mul	fp, fp, r3
   1d9b0:	ldr	r0, [r4, #20]
   1d9b4:	add	r3, r0, fp
   1d9b8:	ldr	r2, [r4, #16]
   1d9bc:	cmp	r2, r3
   1d9c0:	bcs	1da24 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1e8>
   1d9c4:	mov	r1, fp
   1d9c8:	mov	r0, r4
   1d9cc:	bl	15218 <main@@Base+0x163c>
   1d9d0:	ldrb	r1, [r5], #1
   1d9d4:	mov	r0, r4
   1d9d8:	blx	r7
   1d9dc:	cmp	r6, r5
   1d9e0:	beq	1da40 <flatcc_json_printer_utype_enum_vector_field@@Base+0x204>
   1d9e4:	ldr	r3, [r4, #20]
   1d9e8:	add	r2, r3, #1
   1d9ec:	str	r2, [r4, #20]
   1d9f0:	strb	r8, [r3]
   1d9f4:	ldrb	r3, [r4, #25]
   1d9f8:	cmp	r3, #0
   1d9fc:	bne	1d994 <flatcc_json_printer_utype_enum_vector_field@@Base+0x158>
   1da00:	ldr	r2, [r4, #20]
   1da04:	ldr	r3, [r4, #16]
   1da08:	cmp	r2, r3
   1da0c:	bcc	1d9d0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x194>
   1da10:	ldr	r3, [r4, #44]	; 0x2c
   1da14:	mov	r1, r9
   1da18:	mov	r0, r4
   1da1c:	blx	r3
   1da20:	b	1d9d0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x194>
   1da24:	mov	r2, fp
   1da28:	mov	r1, #32
   1da2c:	bl	124c4 <memset@plt>
   1da30:	ldr	r3, [r4, #20]
   1da34:	add	fp, r3, fp
   1da38:	str	fp, [r4, #20]
   1da3c:	b	1d9d0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x194>
   1da40:	ldrb	r3, [r4, #25]
   1da44:	cmp	r3, #0
   1da48:	bne	1da7c <flatcc_json_printer_utype_enum_vector_field@@Base+0x240>
   1da4c:	ldr	r3, [r4, #20]
   1da50:	add	r2, r3, #1
   1da54:	str	r2, [r4, #20]
   1da58:	mov	r2, #93	; 0x5d
   1da5c:	strb	r2, [r3]
   1da60:	add	sp, sp, #12
   1da64:	ldrd	r4, [sp]
   1da68:	ldrd	r6, [sp, #8]
   1da6c:	ldrd	r8, [sp, #16]
   1da70:	ldrd	sl, [sp, #24]
   1da74:	add	sp, sp, #32
   1da78:	pop	{pc}		; (ldr pc, [sp], #4)
   1da7c:	ldr	r3, [r4, #20]
   1da80:	add	r2, r3, #1
   1da84:	str	r2, [r4, #20]
   1da88:	mov	r2, #10
   1da8c:	strb	r2, [r3]
   1da90:	ldr	r5, [r4, #32]
   1da94:	sub	r5, r5, #1
   1da98:	str	r5, [r4, #32]
   1da9c:	ldrb	r3, [r4, #25]
   1daa0:	mul	r5, r5, r3
   1daa4:	ldr	r0, [r4, #20]
   1daa8:	add	r3, r0, r5
   1daac:	ldr	r2, [r4, #16]
   1dab0:	cmp	r2, r3
   1dab4:	bcs	1dac8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x28c>
   1dab8:	mov	r1, r5
   1dabc:	mov	r0, r4
   1dac0:	bl	15218 <main@@Base+0x163c>
   1dac4:	b	1da4c <flatcc_json_printer_utype_enum_vector_field@@Base+0x210>
   1dac8:	mov	r2, r5
   1dacc:	mov	r1, #32
   1dad0:	bl	124c4 <memset@plt>
   1dad4:	ldr	r3, [r4, #20]
   1dad8:	add	r5, r3, r5
   1dadc:	str	r5, [r4, #20]
   1dae0:	b	1da4c <flatcc_json_printer_utype_enum_vector_field@@Base+0x210>

0001dae4 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   1dae4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1dae8:	strd	r6, [sp, #8]
   1daec:	strd	r8, [sp, #16]
   1daf0:	strd	sl, [sp, #24]
   1daf4:	str	lr, [sp, #32]
   1daf8:	sub	sp, sp, #12
   1dafc:	mov	r4, r0
   1db00:	ldr	r7, [sp, #52]	; 0x34
   1db04:	ldrb	r0, [r0, #27]
   1db08:	cmp	r0, #0
   1db0c:	bne	1dc08 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x124>
   1db10:	add	r2, r2, #2
   1db14:	lsl	r2, r2, #1
   1db18:	ldr	r0, [r1, #8]
   1db1c:	cmp	r0, r2
   1db20:	ble	1dd08 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x224>
   1db24:	ldr	r0, [r1, #4]
   1db28:	ldrh	r2, [r0, r2]
   1db2c:	cmp	r2, #0
   1db30:	beq	1dd08 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x224>
   1db34:	ldr	r0, [r1]
   1db38:	adds	ip, r0, r2
   1db3c:	beq	1dd08 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x224>
   1db40:	ldr	lr, [r1, #16]
   1db44:	add	r5, lr, #1
   1db48:	str	r5, [r1, #16]
   1db4c:	cmp	lr, #0
   1db50:	beq	1db68 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x84>
   1db54:	ldr	r1, [r4, #20]
   1db58:	add	lr, r1, #1
   1db5c:	str	lr, [r4, #20]
   1db60:	mov	lr, #44	; 0x2c
   1db64:	strb	lr, [r1]
   1db68:	ldr	r2, [r0, r2]
   1db6c:	add	r6, ip, r2
   1db70:	ldr	r8, [ip, r2]
   1db74:	ldr	r2, [sp, #48]	; 0x30
   1db78:	mov	r1, r3
   1db7c:	mov	r0, r4
   1db80:	bl	15808 <main@@Base+0x1c2c>
   1db84:	ldr	r3, [r4, #32]
   1db88:	add	r3, r3, #1
   1db8c:	str	r3, [r4, #32]
   1db90:	ldr	r3, [r4, #20]
   1db94:	add	r2, r3, #1
   1db98:	str	r2, [r4, #20]
   1db9c:	mov	r2, #91	; 0x5b
   1dba0:	strb	r2, [r3]
   1dba4:	cmp	r8, #0
   1dba8:	beq	1dce8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x204>
   1dbac:	ldrb	r3, [r4, #25]
   1dbb0:	cmp	r3, #0
   1dbb4:	bne	1dc1c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x138>
   1dbb8:	ldr	r2, [r4, #20]
   1dbbc:	ldr	r3, [r4, #16]
   1dbc0:	cmp	r2, r3
   1dbc4:	bcc	1dbd8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xf4>
   1dbc8:	ldr	r3, [r4, #44]	; 0x2c
   1dbcc:	mov	r1, #0
   1dbd0:	mov	r0, r4
   1dbd4:	blx	r3
   1dbd8:	ldrb	r1, [r6, #4]
   1dbdc:	mov	r0, r4
   1dbe0:	blx	r7
   1dbe4:	add	r5, r6, #5
   1dbe8:	cmp	r8, #1
   1dbec:	beq	1dce8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x204>
   1dbf0:	add	r8, r8, #4
   1dbf4:	add	r6, r6, r8
   1dbf8:	mov	r8, #44	; 0x2c
   1dbfc:	mov	r9, #0
   1dc00:	mov	sl, #10
   1dc04:	b	1dc8c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a8>
   1dc08:	ldr	r0, [sp, #48]	; 0x30
   1dc0c:	str	r0, [sp]
   1dc10:	mov	r0, r4
   1dc14:	bl	1bb84 <flatcc_json_printer_uint8_vector_field@@Base>
   1dc18:	b	1dd08 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x224>
   1dc1c:	ldr	r3, [r4, #20]
   1dc20:	add	r2, r3, #1
   1dc24:	str	r2, [r4, #20]
   1dc28:	mov	r2, #10
   1dc2c:	strb	r2, [r3]
   1dc30:	mov	r0, r4
   1dc34:	bl	152dc <main@@Base+0x1700>
   1dc38:	b	1dbd8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xf4>
   1dc3c:	ldr	r3, [r4, #20]
   1dc40:	add	r2, r3, #1
   1dc44:	str	r2, [r4, #20]
   1dc48:	strb	sl, [r3]
   1dc4c:	ldrb	r3, [r4, #25]
   1dc50:	ldr	fp, [r4, #32]
   1dc54:	mul	fp, fp, r3
   1dc58:	ldr	r0, [r4, #20]
   1dc5c:	add	r3, r0, fp
   1dc60:	ldr	r2, [r4, #16]
   1dc64:	cmp	r2, r3
   1dc68:	bcs	1dccc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1e8>
   1dc6c:	mov	r1, fp
   1dc70:	mov	r0, r4
   1dc74:	bl	15218 <main@@Base+0x163c>
   1dc78:	ldrb	r1, [r5], #1
   1dc7c:	mov	r0, r4
   1dc80:	blx	r7
   1dc84:	cmp	r6, r5
   1dc88:	beq	1dce8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x204>
   1dc8c:	ldr	r3, [r4, #20]
   1dc90:	add	r2, r3, #1
   1dc94:	str	r2, [r4, #20]
   1dc98:	strb	r8, [r3]
   1dc9c:	ldrb	r3, [r4, #25]
   1dca0:	cmp	r3, #0
   1dca4:	bne	1dc3c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x158>
   1dca8:	ldr	r2, [r4, #20]
   1dcac:	ldr	r3, [r4, #16]
   1dcb0:	cmp	r2, r3
   1dcb4:	bcc	1dc78 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x194>
   1dcb8:	ldr	r3, [r4, #44]	; 0x2c
   1dcbc:	mov	r1, r9
   1dcc0:	mov	r0, r4
   1dcc4:	blx	r3
   1dcc8:	b	1dc78 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x194>
   1dccc:	mov	r2, fp
   1dcd0:	mov	r1, #32
   1dcd4:	bl	124c4 <memset@plt>
   1dcd8:	ldr	r3, [r4, #20]
   1dcdc:	add	fp, r3, fp
   1dce0:	str	fp, [r4, #20]
   1dce4:	b	1dc78 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x194>
   1dce8:	ldrb	r3, [r4, #25]
   1dcec:	cmp	r3, #0
   1dcf0:	bne	1dd24 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x240>
   1dcf4:	ldr	r3, [r4, #20]
   1dcf8:	add	r2, r3, #1
   1dcfc:	str	r2, [r4, #20]
   1dd00:	mov	r2, #93	; 0x5d
   1dd04:	strb	r2, [r3]
   1dd08:	add	sp, sp, #12
   1dd0c:	ldrd	r4, [sp]
   1dd10:	ldrd	r6, [sp, #8]
   1dd14:	ldrd	r8, [sp, #16]
   1dd18:	ldrd	sl, [sp, #24]
   1dd1c:	add	sp, sp, #32
   1dd20:	pop	{pc}		; (ldr pc, [sp], #4)
   1dd24:	ldr	r3, [r4, #20]
   1dd28:	add	r2, r3, #1
   1dd2c:	str	r2, [r4, #20]
   1dd30:	mov	r2, #10
   1dd34:	strb	r2, [r3]
   1dd38:	ldr	r5, [r4, #32]
   1dd3c:	sub	r5, r5, #1
   1dd40:	str	r5, [r4, #32]
   1dd44:	ldrb	r3, [r4, #25]
   1dd48:	mul	r5, r5, r3
   1dd4c:	ldr	r0, [r4, #20]
   1dd50:	add	r3, r0, r5
   1dd54:	ldr	r2, [r4, #16]
   1dd58:	cmp	r2, r3
   1dd5c:	bcs	1dd70 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   1dd60:	mov	r1, r5
   1dd64:	mov	r0, r4
   1dd68:	bl	15218 <main@@Base+0x163c>
   1dd6c:	b	1dcf4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x210>
   1dd70:	mov	r2, r5
   1dd74:	mov	r1, #32
   1dd78:	bl	124c4 <memset@plt>
   1dd7c:	ldr	r3, [r4, #20]
   1dd80:	add	r5, r3, r5
   1dd84:	str	r5, [r4, #20]
   1dd88:	b	1dcf4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x210>

0001dd8c <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   1dd8c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1dd90:	strd	r6, [sp, #8]
   1dd94:	strd	r8, [sp, #16]
   1dd98:	strd	sl, [sp, #24]
   1dd9c:	str	lr, [sp, #32]
   1dda0:	sub	sp, sp, #12
   1dda4:	mov	r4, r0
   1dda8:	ldr	r7, [sp, #52]	; 0x34
   1ddac:	ldrb	r0, [r0, #27]
   1ddb0:	cmp	r0, #0
   1ddb4:	bne	1deac <flatcc_json_printer_uint16_enum_vector_field@@Base+0x120>
   1ddb8:	add	r2, r2, #2
   1ddbc:	lsl	r2, r2, #1
   1ddc0:	ldr	r0, [r1, #8]
   1ddc4:	cmp	r0, r2
   1ddc8:	ble	1dfb0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x224>
   1ddcc:	ldr	r0, [r1, #4]
   1ddd0:	ldrh	r2, [r0, r2]
   1ddd4:	cmp	r2, #0
   1ddd8:	beq	1dfb0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x224>
   1dddc:	ldr	r0, [r1]
   1dde0:	adds	ip, r0, r2
   1dde4:	beq	1dfb0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x224>
   1dde8:	ldr	lr, [r1, #16]
   1ddec:	add	r5, lr, #1
   1ddf0:	str	r5, [r1, #16]
   1ddf4:	cmp	lr, #0
   1ddf8:	beq	1de10 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x84>
   1ddfc:	ldr	r1, [r4, #20]
   1de00:	add	lr, r1, #1
   1de04:	str	lr, [r4, #20]
   1de08:	mov	lr, #44	; 0x2c
   1de0c:	strb	lr, [r1]
   1de10:	ldr	r2, [r0, r2]
   1de14:	add	r6, ip, r2
   1de18:	ldr	r8, [ip, r2]
   1de1c:	ldr	r2, [sp, #48]	; 0x30
   1de20:	mov	r1, r3
   1de24:	mov	r0, r4
   1de28:	bl	15808 <main@@Base+0x1c2c>
   1de2c:	ldr	r3, [r4, #32]
   1de30:	add	r3, r3, #1
   1de34:	str	r3, [r4, #32]
   1de38:	ldr	r3, [r4, #20]
   1de3c:	add	r2, r3, #1
   1de40:	str	r2, [r4, #20]
   1de44:	mov	r2, #91	; 0x5b
   1de48:	strb	r2, [r3]
   1de4c:	cmp	r8, #0
   1de50:	beq	1df90 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x204>
   1de54:	ldrb	r3, [r4, #25]
   1de58:	cmp	r3, #0
   1de5c:	bne	1dec0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x134>
   1de60:	ldr	r2, [r4, #20]
   1de64:	ldr	r3, [r4, #16]
   1de68:	cmp	r2, r3
   1de6c:	bcc	1de80 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xf4>
   1de70:	ldr	r3, [r4, #44]	; 0x2c
   1de74:	mov	r1, #0
   1de78:	mov	r0, r4
   1de7c:	blx	r3
   1de80:	ldrh	r1, [r6, #4]
   1de84:	mov	r0, r4
   1de88:	blx	r7
   1de8c:	add	r6, r6, #6
   1de90:	sub	r5, r8, #2
   1de94:	cmp	r8, #1
   1de98:	beq	1df90 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x204>
   1de9c:	mov	r8, #44	; 0x2c
   1dea0:	mov	r9, #0
   1dea4:	mov	sl, #10
   1dea8:	b	1df34 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a8>
   1deac:	ldr	r0, [sp, #48]	; 0x30
   1deb0:	str	r0, [sp]
   1deb4:	mov	r0, r4
   1deb8:	bl	1be14 <flatcc_json_printer_uint16_vector_field@@Base>
   1debc:	b	1dfb0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x224>
   1dec0:	ldr	r3, [r4, #20]
   1dec4:	add	r2, r3, #1
   1dec8:	str	r2, [r4, #20]
   1decc:	mov	r2, #10
   1ded0:	strb	r2, [r3]
   1ded4:	mov	r0, r4
   1ded8:	bl	152dc <main@@Base+0x1700>
   1dedc:	b	1de80 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xf4>
   1dee0:	ldr	r3, [r4, #20]
   1dee4:	add	r2, r3, #1
   1dee8:	str	r2, [r4, #20]
   1deec:	strb	sl, [r3]
   1def0:	ldrb	r3, [r4, #25]
   1def4:	ldr	fp, [r4, #32]
   1def8:	mul	fp, fp, r3
   1defc:	ldr	r0, [r4, #20]
   1df00:	add	r3, r0, fp
   1df04:	ldr	r2, [r4, #16]
   1df08:	cmp	r2, r3
   1df0c:	bcs	1df74 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1e8>
   1df10:	mov	r1, fp
   1df14:	mov	r0, r4
   1df18:	bl	15218 <main@@Base+0x163c>
   1df1c:	ldrh	r1, [r6], #2
   1df20:	mov	r0, r4
   1df24:	blx	r7
   1df28:	sub	r5, r5, #1
   1df2c:	cmn	r5, #1
   1df30:	beq	1df90 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x204>
   1df34:	ldr	r3, [r4, #20]
   1df38:	add	r2, r3, #1
   1df3c:	str	r2, [r4, #20]
   1df40:	strb	r8, [r3]
   1df44:	ldrb	r3, [r4, #25]
   1df48:	cmp	r3, #0
   1df4c:	bne	1dee0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x154>
   1df50:	ldr	r2, [r4, #20]
   1df54:	ldr	r3, [r4, #16]
   1df58:	cmp	r2, r3
   1df5c:	bcc	1df1c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x190>
   1df60:	ldr	r3, [r4, #44]	; 0x2c
   1df64:	mov	r1, r9
   1df68:	mov	r0, r4
   1df6c:	blx	r3
   1df70:	b	1df1c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x190>
   1df74:	mov	r2, fp
   1df78:	mov	r1, #32
   1df7c:	bl	124c4 <memset@plt>
   1df80:	ldr	r3, [r4, #20]
   1df84:	add	fp, r3, fp
   1df88:	str	fp, [r4, #20]
   1df8c:	b	1df1c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x190>
   1df90:	ldrb	r3, [r4, #25]
   1df94:	cmp	r3, #0
   1df98:	bne	1dfcc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x240>
   1df9c:	ldr	r3, [r4, #20]
   1dfa0:	add	r2, r3, #1
   1dfa4:	str	r2, [r4, #20]
   1dfa8:	mov	r2, #93	; 0x5d
   1dfac:	strb	r2, [r3]
   1dfb0:	add	sp, sp, #12
   1dfb4:	ldrd	r4, [sp]
   1dfb8:	ldrd	r6, [sp, #8]
   1dfbc:	ldrd	r8, [sp, #16]
   1dfc0:	ldrd	sl, [sp, #24]
   1dfc4:	add	sp, sp, #32
   1dfc8:	pop	{pc}		; (ldr pc, [sp], #4)
   1dfcc:	ldr	r3, [r4, #20]
   1dfd0:	add	r2, r3, #1
   1dfd4:	str	r2, [r4, #20]
   1dfd8:	mov	r2, #10
   1dfdc:	strb	r2, [r3]
   1dfe0:	ldr	r5, [r4, #32]
   1dfe4:	sub	r5, r5, #1
   1dfe8:	str	r5, [r4, #32]
   1dfec:	ldrb	r3, [r4, #25]
   1dff0:	mul	r5, r5, r3
   1dff4:	ldr	r0, [r4, #20]
   1dff8:	add	r3, r0, r5
   1dffc:	ldr	r2, [r4, #16]
   1e000:	cmp	r2, r3
   1e004:	bcs	1e018 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x28c>
   1e008:	mov	r1, r5
   1e00c:	mov	r0, r4
   1e010:	bl	15218 <main@@Base+0x163c>
   1e014:	b	1df9c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x210>
   1e018:	mov	r2, r5
   1e01c:	mov	r1, #32
   1e020:	bl	124c4 <memset@plt>
   1e024:	ldr	r3, [r4, #20]
   1e028:	add	r5, r3, r5
   1e02c:	str	r5, [r4, #20]
   1e030:	b	1df9c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x210>

0001e034 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   1e034:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e038:	strd	r6, [sp, #8]
   1e03c:	strd	r8, [sp, #16]
   1e040:	strd	sl, [sp, #24]
   1e044:	str	lr, [sp, #32]
   1e048:	sub	sp, sp, #12
   1e04c:	mov	r4, r0
   1e050:	ldr	r7, [sp, #52]	; 0x34
   1e054:	ldrb	r0, [r0, #27]
   1e058:	cmp	r0, #0
   1e05c:	bne	1e154 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x120>
   1e060:	add	r2, r2, #2
   1e064:	lsl	r2, r2, #1
   1e068:	ldr	r0, [r1, #8]
   1e06c:	cmp	r0, r2
   1e070:	ble	1e258 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x224>
   1e074:	ldr	r0, [r1, #4]
   1e078:	ldrh	r2, [r0, r2]
   1e07c:	cmp	r2, #0
   1e080:	beq	1e258 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x224>
   1e084:	ldr	r0, [r1]
   1e088:	adds	ip, r0, r2
   1e08c:	beq	1e258 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x224>
   1e090:	ldr	lr, [r1, #16]
   1e094:	add	r5, lr, #1
   1e098:	str	r5, [r1, #16]
   1e09c:	cmp	lr, #0
   1e0a0:	beq	1e0b8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x84>
   1e0a4:	ldr	r1, [r4, #20]
   1e0a8:	add	lr, r1, #1
   1e0ac:	str	lr, [r4, #20]
   1e0b0:	mov	lr, #44	; 0x2c
   1e0b4:	strb	lr, [r1]
   1e0b8:	ldr	r2, [r0, r2]
   1e0bc:	add	r6, ip, r2
   1e0c0:	ldr	r8, [ip, r2]
   1e0c4:	ldr	r2, [sp, #48]	; 0x30
   1e0c8:	mov	r1, r3
   1e0cc:	mov	r0, r4
   1e0d0:	bl	15808 <main@@Base+0x1c2c>
   1e0d4:	ldr	r3, [r4, #32]
   1e0d8:	add	r3, r3, #1
   1e0dc:	str	r3, [r4, #32]
   1e0e0:	ldr	r3, [r4, #20]
   1e0e4:	add	r2, r3, #1
   1e0e8:	str	r2, [r4, #20]
   1e0ec:	mov	r2, #91	; 0x5b
   1e0f0:	strb	r2, [r3]
   1e0f4:	cmp	r8, #0
   1e0f8:	beq	1e238 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x204>
   1e0fc:	ldrb	r3, [r4, #25]
   1e100:	cmp	r3, #0
   1e104:	bne	1e168 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x134>
   1e108:	ldr	r2, [r4, #20]
   1e10c:	ldr	r3, [r4, #16]
   1e110:	cmp	r2, r3
   1e114:	bcc	1e128 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xf4>
   1e118:	ldr	r3, [r4, #44]	; 0x2c
   1e11c:	mov	r1, #0
   1e120:	mov	r0, r4
   1e124:	blx	r3
   1e128:	ldr	r1, [r6, #4]
   1e12c:	mov	r0, r4
   1e130:	blx	r7
   1e134:	add	r6, r6, #8
   1e138:	sub	r5, r8, #2
   1e13c:	cmp	r8, #1
   1e140:	beq	1e238 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x204>
   1e144:	mov	r8, #44	; 0x2c
   1e148:	mov	r9, #0
   1e14c:	mov	sl, #10
   1e150:	b	1e1dc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a8>
   1e154:	ldr	r0, [sp, #48]	; 0x30
   1e158:	str	r0, [sp]
   1e15c:	mov	r0, r4
   1e160:	bl	1c0e4 <flatcc_json_printer_uint32_vector_field@@Base>
   1e164:	b	1e258 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x224>
   1e168:	ldr	r3, [r4, #20]
   1e16c:	add	r2, r3, #1
   1e170:	str	r2, [r4, #20]
   1e174:	mov	r2, #10
   1e178:	strb	r2, [r3]
   1e17c:	mov	r0, r4
   1e180:	bl	152dc <main@@Base+0x1700>
   1e184:	b	1e128 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xf4>
   1e188:	ldr	r3, [r4, #20]
   1e18c:	add	r2, r3, #1
   1e190:	str	r2, [r4, #20]
   1e194:	strb	sl, [r3]
   1e198:	ldrb	r3, [r4, #25]
   1e19c:	ldr	fp, [r4, #32]
   1e1a0:	mul	fp, fp, r3
   1e1a4:	ldr	r0, [r4, #20]
   1e1a8:	add	r3, r0, fp
   1e1ac:	ldr	r2, [r4, #16]
   1e1b0:	cmp	r2, r3
   1e1b4:	bcs	1e21c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1e8>
   1e1b8:	mov	r1, fp
   1e1bc:	mov	r0, r4
   1e1c0:	bl	15218 <main@@Base+0x163c>
   1e1c4:	ldr	r1, [r6], #4
   1e1c8:	mov	r0, r4
   1e1cc:	blx	r7
   1e1d0:	sub	r5, r5, #1
   1e1d4:	cmn	r5, #1
   1e1d8:	beq	1e238 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x204>
   1e1dc:	ldr	r3, [r4, #20]
   1e1e0:	add	r2, r3, #1
   1e1e4:	str	r2, [r4, #20]
   1e1e8:	strb	r8, [r3]
   1e1ec:	ldrb	r3, [r4, #25]
   1e1f0:	cmp	r3, #0
   1e1f4:	bne	1e188 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x154>
   1e1f8:	ldr	r2, [r4, #20]
   1e1fc:	ldr	r3, [r4, #16]
   1e200:	cmp	r2, r3
   1e204:	bcc	1e1c4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x190>
   1e208:	ldr	r3, [r4, #44]	; 0x2c
   1e20c:	mov	r1, r9
   1e210:	mov	r0, r4
   1e214:	blx	r3
   1e218:	b	1e1c4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x190>
   1e21c:	mov	r2, fp
   1e220:	mov	r1, #32
   1e224:	bl	124c4 <memset@plt>
   1e228:	ldr	r3, [r4, #20]
   1e22c:	add	fp, r3, fp
   1e230:	str	fp, [r4, #20]
   1e234:	b	1e1c4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x190>
   1e238:	ldrb	r3, [r4, #25]
   1e23c:	cmp	r3, #0
   1e240:	bne	1e274 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x240>
   1e244:	ldr	r3, [r4, #20]
   1e248:	add	r2, r3, #1
   1e24c:	str	r2, [r4, #20]
   1e250:	mov	r2, #93	; 0x5d
   1e254:	strb	r2, [r3]
   1e258:	add	sp, sp, #12
   1e25c:	ldrd	r4, [sp]
   1e260:	ldrd	r6, [sp, #8]
   1e264:	ldrd	r8, [sp, #16]
   1e268:	ldrd	sl, [sp, #24]
   1e26c:	add	sp, sp, #32
   1e270:	pop	{pc}		; (ldr pc, [sp], #4)
   1e274:	ldr	r3, [r4, #20]
   1e278:	add	r2, r3, #1
   1e27c:	str	r2, [r4, #20]
   1e280:	mov	r2, #10
   1e284:	strb	r2, [r3]
   1e288:	ldr	r5, [r4, #32]
   1e28c:	sub	r5, r5, #1
   1e290:	str	r5, [r4, #32]
   1e294:	ldrb	r3, [r4, #25]
   1e298:	mul	r5, r5, r3
   1e29c:	ldr	r0, [r4, #20]
   1e2a0:	add	r3, r0, r5
   1e2a4:	ldr	r2, [r4, #16]
   1e2a8:	cmp	r2, r3
   1e2ac:	bcs	1e2c0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   1e2b0:	mov	r1, r5
   1e2b4:	mov	r0, r4
   1e2b8:	bl	15218 <main@@Base+0x163c>
   1e2bc:	b	1e244 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x210>
   1e2c0:	mov	r2, r5
   1e2c4:	mov	r1, #32
   1e2c8:	bl	124c4 <memset@plt>
   1e2cc:	ldr	r3, [r4, #20]
   1e2d0:	add	r5, r3, r5
   1e2d4:	str	r5, [r4, #20]
   1e2d8:	b	1e244 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x210>

0001e2dc <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   1e2dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e2e0:	strd	r6, [sp, #8]
   1e2e4:	strd	r8, [sp, #16]
   1e2e8:	strd	sl, [sp, #24]
   1e2ec:	str	lr, [sp, #32]
   1e2f0:	sub	sp, sp, #12
   1e2f4:	mov	r4, r0
   1e2f8:	ldr	r7, [sp, #52]	; 0x34
   1e2fc:	ldrb	r0, [r0, #27]
   1e300:	cmp	r0, #0
   1e304:	bne	1e3fc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x120>
   1e308:	add	r2, r2, #2
   1e30c:	lsl	r2, r2, #1
   1e310:	ldr	r0, [r1, #8]
   1e314:	cmp	r0, r2
   1e318:	ble	1e500 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x224>
   1e31c:	ldr	r0, [r1, #4]
   1e320:	ldrh	r2, [r0, r2]
   1e324:	cmp	r2, #0
   1e328:	beq	1e500 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x224>
   1e32c:	ldr	r0, [r1]
   1e330:	adds	ip, r0, r2
   1e334:	beq	1e500 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x224>
   1e338:	ldr	lr, [r1, #16]
   1e33c:	add	r5, lr, #1
   1e340:	str	r5, [r1, #16]
   1e344:	cmp	lr, #0
   1e348:	beq	1e360 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x84>
   1e34c:	ldr	r1, [r4, #20]
   1e350:	add	lr, r1, #1
   1e354:	str	lr, [r4, #20]
   1e358:	mov	lr, #44	; 0x2c
   1e35c:	strb	lr, [r1]
   1e360:	ldr	r2, [r0, r2]
   1e364:	add	r6, ip, r2
   1e368:	ldr	r8, [ip, r2]
   1e36c:	ldr	r2, [sp, #48]	; 0x30
   1e370:	mov	r1, r3
   1e374:	mov	r0, r4
   1e378:	bl	15808 <main@@Base+0x1c2c>
   1e37c:	ldr	r3, [r4, #32]
   1e380:	add	r3, r3, #1
   1e384:	str	r3, [r4, #32]
   1e388:	ldr	r3, [r4, #20]
   1e38c:	add	r2, r3, #1
   1e390:	str	r2, [r4, #20]
   1e394:	mov	r2, #91	; 0x5b
   1e398:	strb	r2, [r3]
   1e39c:	cmp	r8, #0
   1e3a0:	beq	1e4e0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x204>
   1e3a4:	ldrb	r3, [r4, #25]
   1e3a8:	cmp	r3, #0
   1e3ac:	bne	1e410 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x134>
   1e3b0:	ldr	r2, [r4, #20]
   1e3b4:	ldr	r3, [r4, #16]
   1e3b8:	cmp	r2, r3
   1e3bc:	bcc	1e3d0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xf4>
   1e3c0:	ldr	r3, [r4, #44]	; 0x2c
   1e3c4:	mov	r1, #0
   1e3c8:	mov	r0, r4
   1e3cc:	blx	r3
   1e3d0:	ldrd	r2, [r6, #4]
   1e3d4:	mov	r0, r4
   1e3d8:	blx	r7
   1e3dc:	add	r6, r6, #12
   1e3e0:	sub	r5, r8, #2
   1e3e4:	cmp	r8, #1
   1e3e8:	beq	1e4e0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x204>
   1e3ec:	mov	r8, #44	; 0x2c
   1e3f0:	mov	r9, #0
   1e3f4:	mov	sl, #10
   1e3f8:	b	1e484 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a8>
   1e3fc:	ldr	r0, [sp, #48]	; 0x30
   1e400:	str	r0, [sp]
   1e404:	mov	r0, r4
   1e408:	bl	1c374 <flatcc_json_printer_uint64_vector_field@@Base>
   1e40c:	b	1e500 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x224>
   1e410:	ldr	r3, [r4, #20]
   1e414:	add	r2, r3, #1
   1e418:	str	r2, [r4, #20]
   1e41c:	mov	r2, #10
   1e420:	strb	r2, [r3]
   1e424:	mov	r0, r4
   1e428:	bl	152dc <main@@Base+0x1700>
   1e42c:	b	1e3d0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xf4>
   1e430:	ldr	r3, [r4, #20]
   1e434:	add	r2, r3, #1
   1e438:	str	r2, [r4, #20]
   1e43c:	strb	sl, [r3]
   1e440:	ldrb	r3, [r4, #25]
   1e444:	ldr	fp, [r4, #32]
   1e448:	mul	fp, fp, r3
   1e44c:	ldr	r0, [r4, #20]
   1e450:	add	r3, r0, fp
   1e454:	ldr	r2, [r4, #16]
   1e458:	cmp	r2, r3
   1e45c:	bcs	1e4c4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1e8>
   1e460:	mov	r1, fp
   1e464:	mov	r0, r4
   1e468:	bl	15218 <main@@Base+0x163c>
   1e46c:	ldrd	r2, [r6], #8
   1e470:	mov	r0, r4
   1e474:	blx	r7
   1e478:	sub	r5, r5, #1
   1e47c:	cmn	r5, #1
   1e480:	beq	1e4e0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x204>
   1e484:	ldr	r3, [r4, #20]
   1e488:	add	r2, r3, #1
   1e48c:	str	r2, [r4, #20]
   1e490:	strb	r8, [r3]
   1e494:	ldrb	r3, [r4, #25]
   1e498:	cmp	r3, #0
   1e49c:	bne	1e430 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x154>
   1e4a0:	ldr	r2, [r4, #20]
   1e4a4:	ldr	r3, [r4, #16]
   1e4a8:	cmp	r2, r3
   1e4ac:	bcc	1e46c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x190>
   1e4b0:	ldr	r3, [r4, #44]	; 0x2c
   1e4b4:	mov	r1, r9
   1e4b8:	mov	r0, r4
   1e4bc:	blx	r3
   1e4c0:	b	1e46c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x190>
   1e4c4:	mov	r2, fp
   1e4c8:	mov	r1, #32
   1e4cc:	bl	124c4 <memset@plt>
   1e4d0:	ldr	r3, [r4, #20]
   1e4d4:	add	fp, r3, fp
   1e4d8:	str	fp, [r4, #20]
   1e4dc:	b	1e46c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x190>
   1e4e0:	ldrb	r3, [r4, #25]
   1e4e4:	cmp	r3, #0
   1e4e8:	bne	1e51c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x240>
   1e4ec:	ldr	r3, [r4, #20]
   1e4f0:	add	r2, r3, #1
   1e4f4:	str	r2, [r4, #20]
   1e4f8:	mov	r2, #93	; 0x5d
   1e4fc:	strb	r2, [r3]
   1e500:	add	sp, sp, #12
   1e504:	ldrd	r4, [sp]
   1e508:	ldrd	r6, [sp, #8]
   1e50c:	ldrd	r8, [sp, #16]
   1e510:	ldrd	sl, [sp, #24]
   1e514:	add	sp, sp, #32
   1e518:	pop	{pc}		; (ldr pc, [sp], #4)
   1e51c:	ldr	r3, [r4, #20]
   1e520:	add	r2, r3, #1
   1e524:	str	r2, [r4, #20]
   1e528:	mov	r2, #10
   1e52c:	strb	r2, [r3]
   1e530:	ldr	r5, [r4, #32]
   1e534:	sub	r5, r5, #1
   1e538:	str	r5, [r4, #32]
   1e53c:	ldrb	r3, [r4, #25]
   1e540:	mul	r5, r5, r3
   1e544:	ldr	r0, [r4, #20]
   1e548:	add	r3, r0, r5
   1e54c:	ldr	r2, [r4, #16]
   1e550:	cmp	r2, r3
   1e554:	bcs	1e568 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   1e558:	mov	r1, r5
   1e55c:	mov	r0, r4
   1e560:	bl	15218 <main@@Base+0x163c>
   1e564:	b	1e4ec <flatcc_json_printer_uint64_enum_vector_field@@Base+0x210>
   1e568:	mov	r2, r5
   1e56c:	mov	r1, #32
   1e570:	bl	124c4 <memset@plt>
   1e574:	ldr	r3, [r4, #20]
   1e578:	add	r5, r3, r5
   1e57c:	str	r5, [r4, #20]
   1e580:	b	1e4ec <flatcc_json_printer_uint64_enum_vector_field@@Base+0x210>

0001e584 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   1e584:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e588:	strd	r6, [sp, #8]
   1e58c:	strd	r8, [sp, #16]
   1e590:	strd	sl, [sp, #24]
   1e594:	str	lr, [sp, #32]
   1e598:	sub	sp, sp, #12
   1e59c:	mov	r4, r0
   1e5a0:	ldr	r7, [sp, #52]	; 0x34
   1e5a4:	ldrb	r0, [r0, #27]
   1e5a8:	cmp	r0, #0
   1e5ac:	bne	1e6a8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x124>
   1e5b0:	add	r2, r2, #2
   1e5b4:	lsl	r2, r2, #1
   1e5b8:	ldr	r0, [r1, #8]
   1e5bc:	cmp	r0, r2
   1e5c0:	ble	1e7a8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x224>
   1e5c4:	ldr	r0, [r1, #4]
   1e5c8:	ldrh	r2, [r0, r2]
   1e5cc:	cmp	r2, #0
   1e5d0:	beq	1e7a8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x224>
   1e5d4:	ldr	r0, [r1]
   1e5d8:	adds	ip, r0, r2
   1e5dc:	beq	1e7a8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x224>
   1e5e0:	ldr	lr, [r1, #16]
   1e5e4:	add	r5, lr, #1
   1e5e8:	str	r5, [r1, #16]
   1e5ec:	cmp	lr, #0
   1e5f0:	beq	1e608 <flatcc_json_printer_int8_enum_vector_field@@Base+0x84>
   1e5f4:	ldr	r1, [r4, #20]
   1e5f8:	add	lr, r1, #1
   1e5fc:	str	lr, [r4, #20]
   1e600:	mov	lr, #44	; 0x2c
   1e604:	strb	lr, [r1]
   1e608:	ldr	r2, [r0, r2]
   1e60c:	add	r6, ip, r2
   1e610:	ldr	r8, [ip, r2]
   1e614:	ldr	r2, [sp, #48]	; 0x30
   1e618:	mov	r1, r3
   1e61c:	mov	r0, r4
   1e620:	bl	15808 <main@@Base+0x1c2c>
   1e624:	ldr	r3, [r4, #32]
   1e628:	add	r3, r3, #1
   1e62c:	str	r3, [r4, #32]
   1e630:	ldr	r3, [r4, #20]
   1e634:	add	r2, r3, #1
   1e638:	str	r2, [r4, #20]
   1e63c:	mov	r2, #91	; 0x5b
   1e640:	strb	r2, [r3]
   1e644:	cmp	r8, #0
   1e648:	beq	1e788 <flatcc_json_printer_int8_enum_vector_field@@Base+0x204>
   1e64c:	ldrb	r3, [r4, #25]
   1e650:	cmp	r3, #0
   1e654:	bne	1e6bc <flatcc_json_printer_int8_enum_vector_field@@Base+0x138>
   1e658:	ldr	r2, [r4, #20]
   1e65c:	ldr	r3, [r4, #16]
   1e660:	cmp	r2, r3
   1e664:	bcc	1e678 <flatcc_json_printer_int8_enum_vector_field@@Base+0xf4>
   1e668:	ldr	r3, [r4, #44]	; 0x2c
   1e66c:	mov	r1, #0
   1e670:	mov	r0, r4
   1e674:	blx	r3
   1e678:	ldrsb	r1, [r6, #4]
   1e67c:	mov	r0, r4
   1e680:	blx	r7
   1e684:	add	r5, r6, #5
   1e688:	cmp	r8, #1
   1e68c:	beq	1e788 <flatcc_json_printer_int8_enum_vector_field@@Base+0x204>
   1e690:	add	r8, r8, #4
   1e694:	add	r6, r6, r8
   1e698:	mov	r8, #44	; 0x2c
   1e69c:	mov	r9, #0
   1e6a0:	mov	sl, #10
   1e6a4:	b	1e72c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a8>
   1e6a8:	ldr	r0, [sp, #48]	; 0x30
   1e6ac:	str	r0, [sp]
   1e6b0:	mov	r0, r4
   1e6b4:	bl	1c604 <flatcc_json_printer_int8_vector_field@@Base>
   1e6b8:	b	1e7a8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x224>
   1e6bc:	ldr	r3, [r4, #20]
   1e6c0:	add	r2, r3, #1
   1e6c4:	str	r2, [r4, #20]
   1e6c8:	mov	r2, #10
   1e6cc:	strb	r2, [r3]
   1e6d0:	mov	r0, r4
   1e6d4:	bl	152dc <main@@Base+0x1700>
   1e6d8:	b	1e678 <flatcc_json_printer_int8_enum_vector_field@@Base+0xf4>
   1e6dc:	ldr	r3, [r4, #20]
   1e6e0:	add	r2, r3, #1
   1e6e4:	str	r2, [r4, #20]
   1e6e8:	strb	sl, [r3]
   1e6ec:	ldrb	r3, [r4, #25]
   1e6f0:	ldr	fp, [r4, #32]
   1e6f4:	mul	fp, fp, r3
   1e6f8:	ldr	r0, [r4, #20]
   1e6fc:	add	r3, r0, fp
   1e700:	ldr	r2, [r4, #16]
   1e704:	cmp	r2, r3
   1e708:	bcs	1e76c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1e8>
   1e70c:	mov	r1, fp
   1e710:	mov	r0, r4
   1e714:	bl	15218 <main@@Base+0x163c>
   1e718:	ldrsb	r1, [r5], #1
   1e71c:	mov	r0, r4
   1e720:	blx	r7
   1e724:	cmp	r6, r5
   1e728:	beq	1e788 <flatcc_json_printer_int8_enum_vector_field@@Base+0x204>
   1e72c:	ldr	r3, [r4, #20]
   1e730:	add	r2, r3, #1
   1e734:	str	r2, [r4, #20]
   1e738:	strb	r8, [r3]
   1e73c:	ldrb	r3, [r4, #25]
   1e740:	cmp	r3, #0
   1e744:	bne	1e6dc <flatcc_json_printer_int8_enum_vector_field@@Base+0x158>
   1e748:	ldr	r2, [r4, #20]
   1e74c:	ldr	r3, [r4, #16]
   1e750:	cmp	r2, r3
   1e754:	bcc	1e718 <flatcc_json_printer_int8_enum_vector_field@@Base+0x194>
   1e758:	ldr	r3, [r4, #44]	; 0x2c
   1e75c:	mov	r1, r9
   1e760:	mov	r0, r4
   1e764:	blx	r3
   1e768:	b	1e718 <flatcc_json_printer_int8_enum_vector_field@@Base+0x194>
   1e76c:	mov	r2, fp
   1e770:	mov	r1, #32
   1e774:	bl	124c4 <memset@plt>
   1e778:	ldr	r3, [r4, #20]
   1e77c:	add	fp, r3, fp
   1e780:	str	fp, [r4, #20]
   1e784:	b	1e718 <flatcc_json_printer_int8_enum_vector_field@@Base+0x194>
   1e788:	ldrb	r3, [r4, #25]
   1e78c:	cmp	r3, #0
   1e790:	bne	1e7c4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x240>
   1e794:	ldr	r3, [r4, #20]
   1e798:	add	r2, r3, #1
   1e79c:	str	r2, [r4, #20]
   1e7a0:	mov	r2, #93	; 0x5d
   1e7a4:	strb	r2, [r3]
   1e7a8:	add	sp, sp, #12
   1e7ac:	ldrd	r4, [sp]
   1e7b0:	ldrd	r6, [sp, #8]
   1e7b4:	ldrd	r8, [sp, #16]
   1e7b8:	ldrd	sl, [sp, #24]
   1e7bc:	add	sp, sp, #32
   1e7c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1e7c4:	ldr	r3, [r4, #20]
   1e7c8:	add	r2, r3, #1
   1e7cc:	str	r2, [r4, #20]
   1e7d0:	mov	r2, #10
   1e7d4:	strb	r2, [r3]
   1e7d8:	ldr	r5, [r4, #32]
   1e7dc:	sub	r5, r5, #1
   1e7e0:	str	r5, [r4, #32]
   1e7e4:	ldrb	r3, [r4, #25]
   1e7e8:	mul	r5, r5, r3
   1e7ec:	ldr	r0, [r4, #20]
   1e7f0:	add	r3, r0, r5
   1e7f4:	ldr	r2, [r4, #16]
   1e7f8:	cmp	r2, r3
   1e7fc:	bcs	1e810 <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   1e800:	mov	r1, r5
   1e804:	mov	r0, r4
   1e808:	bl	15218 <main@@Base+0x163c>
   1e80c:	b	1e794 <flatcc_json_printer_int8_enum_vector_field@@Base+0x210>
   1e810:	mov	r2, r5
   1e814:	mov	r1, #32
   1e818:	bl	124c4 <memset@plt>
   1e81c:	ldr	r3, [r4, #20]
   1e820:	add	r5, r3, r5
   1e824:	str	r5, [r4, #20]
   1e828:	b	1e794 <flatcc_json_printer_int8_enum_vector_field@@Base+0x210>

0001e82c <flatcc_json_printer_int16_enum_vector_field@@Base>:
   1e82c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e830:	strd	r6, [sp, #8]
   1e834:	strd	r8, [sp, #16]
   1e838:	strd	sl, [sp, #24]
   1e83c:	str	lr, [sp, #32]
   1e840:	sub	sp, sp, #12
   1e844:	mov	r4, r0
   1e848:	ldr	r7, [sp, #52]	; 0x34
   1e84c:	ldrb	r0, [r0, #27]
   1e850:	cmp	r0, #0
   1e854:	bne	1e94c <flatcc_json_printer_int16_enum_vector_field@@Base+0x120>
   1e858:	add	r2, r2, #2
   1e85c:	lsl	r2, r2, #1
   1e860:	ldr	r0, [r1, #8]
   1e864:	cmp	r0, r2
   1e868:	ble	1ea50 <flatcc_json_printer_int16_enum_vector_field@@Base+0x224>
   1e86c:	ldr	r0, [r1, #4]
   1e870:	ldrh	r2, [r0, r2]
   1e874:	cmp	r2, #0
   1e878:	beq	1ea50 <flatcc_json_printer_int16_enum_vector_field@@Base+0x224>
   1e87c:	ldr	r0, [r1]
   1e880:	adds	ip, r0, r2
   1e884:	beq	1ea50 <flatcc_json_printer_int16_enum_vector_field@@Base+0x224>
   1e888:	ldr	lr, [r1, #16]
   1e88c:	add	r5, lr, #1
   1e890:	str	r5, [r1, #16]
   1e894:	cmp	lr, #0
   1e898:	beq	1e8b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x84>
   1e89c:	ldr	r1, [r4, #20]
   1e8a0:	add	lr, r1, #1
   1e8a4:	str	lr, [r4, #20]
   1e8a8:	mov	lr, #44	; 0x2c
   1e8ac:	strb	lr, [r1]
   1e8b0:	ldr	r2, [r0, r2]
   1e8b4:	add	r6, ip, r2
   1e8b8:	ldr	r8, [ip, r2]
   1e8bc:	ldr	r2, [sp, #48]	; 0x30
   1e8c0:	mov	r1, r3
   1e8c4:	mov	r0, r4
   1e8c8:	bl	15808 <main@@Base+0x1c2c>
   1e8cc:	ldr	r3, [r4, #32]
   1e8d0:	add	r3, r3, #1
   1e8d4:	str	r3, [r4, #32]
   1e8d8:	ldr	r3, [r4, #20]
   1e8dc:	add	r2, r3, #1
   1e8e0:	str	r2, [r4, #20]
   1e8e4:	mov	r2, #91	; 0x5b
   1e8e8:	strb	r2, [r3]
   1e8ec:	cmp	r8, #0
   1e8f0:	beq	1ea30 <flatcc_json_printer_int16_enum_vector_field@@Base+0x204>
   1e8f4:	ldrb	r3, [r4, #25]
   1e8f8:	cmp	r3, #0
   1e8fc:	bne	1e960 <flatcc_json_printer_int16_enum_vector_field@@Base+0x134>
   1e900:	ldr	r2, [r4, #20]
   1e904:	ldr	r3, [r4, #16]
   1e908:	cmp	r2, r3
   1e90c:	bcc	1e920 <flatcc_json_printer_int16_enum_vector_field@@Base+0xf4>
   1e910:	ldr	r3, [r4, #44]	; 0x2c
   1e914:	mov	r1, #0
   1e918:	mov	r0, r4
   1e91c:	blx	r3
   1e920:	ldrsh	r1, [r6, #4]
   1e924:	mov	r0, r4
   1e928:	blx	r7
   1e92c:	add	r6, r6, #6
   1e930:	sub	r5, r8, #2
   1e934:	cmp	r8, #1
   1e938:	beq	1ea30 <flatcc_json_printer_int16_enum_vector_field@@Base+0x204>
   1e93c:	mov	r8, #44	; 0x2c
   1e940:	mov	r9, #0
   1e944:	mov	sl, #10
   1e948:	b	1e9d4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a8>
   1e94c:	ldr	r0, [sp, #48]	; 0x30
   1e950:	str	r0, [sp]
   1e954:	mov	r0, r4
   1e958:	bl	1c894 <flatcc_json_printer_int16_vector_field@@Base>
   1e95c:	b	1ea50 <flatcc_json_printer_int16_enum_vector_field@@Base+0x224>
   1e960:	ldr	r3, [r4, #20]
   1e964:	add	r2, r3, #1
   1e968:	str	r2, [r4, #20]
   1e96c:	mov	r2, #10
   1e970:	strb	r2, [r3]
   1e974:	mov	r0, r4
   1e978:	bl	152dc <main@@Base+0x1700>
   1e97c:	b	1e920 <flatcc_json_printer_int16_enum_vector_field@@Base+0xf4>
   1e980:	ldr	r3, [r4, #20]
   1e984:	add	r2, r3, #1
   1e988:	str	r2, [r4, #20]
   1e98c:	strb	sl, [r3]
   1e990:	ldrb	r3, [r4, #25]
   1e994:	ldr	fp, [r4, #32]
   1e998:	mul	fp, fp, r3
   1e99c:	ldr	r0, [r4, #20]
   1e9a0:	add	r3, r0, fp
   1e9a4:	ldr	r2, [r4, #16]
   1e9a8:	cmp	r2, r3
   1e9ac:	bcs	1ea14 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1e8>
   1e9b0:	mov	r1, fp
   1e9b4:	mov	r0, r4
   1e9b8:	bl	15218 <main@@Base+0x163c>
   1e9bc:	ldrsh	r1, [r6], #2
   1e9c0:	mov	r0, r4
   1e9c4:	blx	r7
   1e9c8:	sub	r5, r5, #1
   1e9cc:	cmn	r5, #1
   1e9d0:	beq	1ea30 <flatcc_json_printer_int16_enum_vector_field@@Base+0x204>
   1e9d4:	ldr	r3, [r4, #20]
   1e9d8:	add	r2, r3, #1
   1e9dc:	str	r2, [r4, #20]
   1e9e0:	strb	r8, [r3]
   1e9e4:	ldrb	r3, [r4, #25]
   1e9e8:	cmp	r3, #0
   1e9ec:	bne	1e980 <flatcc_json_printer_int16_enum_vector_field@@Base+0x154>
   1e9f0:	ldr	r2, [r4, #20]
   1e9f4:	ldr	r3, [r4, #16]
   1e9f8:	cmp	r2, r3
   1e9fc:	bcc	1e9bc <flatcc_json_printer_int16_enum_vector_field@@Base+0x190>
   1ea00:	ldr	r3, [r4, #44]	; 0x2c
   1ea04:	mov	r1, r9
   1ea08:	mov	r0, r4
   1ea0c:	blx	r3
   1ea10:	b	1e9bc <flatcc_json_printer_int16_enum_vector_field@@Base+0x190>
   1ea14:	mov	r2, fp
   1ea18:	mov	r1, #32
   1ea1c:	bl	124c4 <memset@plt>
   1ea20:	ldr	r3, [r4, #20]
   1ea24:	add	fp, r3, fp
   1ea28:	str	fp, [r4, #20]
   1ea2c:	b	1e9bc <flatcc_json_printer_int16_enum_vector_field@@Base+0x190>
   1ea30:	ldrb	r3, [r4, #25]
   1ea34:	cmp	r3, #0
   1ea38:	bne	1ea6c <flatcc_json_printer_int16_enum_vector_field@@Base+0x240>
   1ea3c:	ldr	r3, [r4, #20]
   1ea40:	add	r2, r3, #1
   1ea44:	str	r2, [r4, #20]
   1ea48:	mov	r2, #93	; 0x5d
   1ea4c:	strb	r2, [r3]
   1ea50:	add	sp, sp, #12
   1ea54:	ldrd	r4, [sp]
   1ea58:	ldrd	r6, [sp, #8]
   1ea5c:	ldrd	r8, [sp, #16]
   1ea60:	ldrd	sl, [sp, #24]
   1ea64:	add	sp, sp, #32
   1ea68:	pop	{pc}		; (ldr pc, [sp], #4)
   1ea6c:	ldr	r3, [r4, #20]
   1ea70:	add	r2, r3, #1
   1ea74:	str	r2, [r4, #20]
   1ea78:	mov	r2, #10
   1ea7c:	strb	r2, [r3]
   1ea80:	ldr	r5, [r4, #32]
   1ea84:	sub	r5, r5, #1
   1ea88:	str	r5, [r4, #32]
   1ea8c:	ldrb	r3, [r4, #25]
   1ea90:	mul	r5, r5, r3
   1ea94:	ldr	r0, [r4, #20]
   1ea98:	add	r3, r0, r5
   1ea9c:	ldr	r2, [r4, #16]
   1eaa0:	cmp	r2, r3
   1eaa4:	bcs	1eab8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x28c>
   1eaa8:	mov	r1, r5
   1eaac:	mov	r0, r4
   1eab0:	bl	15218 <main@@Base+0x163c>
   1eab4:	b	1ea3c <flatcc_json_printer_int16_enum_vector_field@@Base+0x210>
   1eab8:	mov	r2, r5
   1eabc:	mov	r1, #32
   1eac0:	bl	124c4 <memset@plt>
   1eac4:	ldr	r3, [r4, #20]
   1eac8:	add	r5, r3, r5
   1eacc:	str	r5, [r4, #20]
   1ead0:	b	1ea3c <flatcc_json_printer_int16_enum_vector_field@@Base+0x210>

0001ead4 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   1ead4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ead8:	strd	r6, [sp, #8]
   1eadc:	strd	r8, [sp, #16]
   1eae0:	strd	sl, [sp, #24]
   1eae4:	str	lr, [sp, #32]
   1eae8:	sub	sp, sp, #12
   1eaec:	mov	r4, r0
   1eaf0:	ldr	r7, [sp, #52]	; 0x34
   1eaf4:	ldrb	r0, [r0, #27]
   1eaf8:	cmp	r0, #0
   1eafc:	bne	1ebf4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x120>
   1eb00:	add	r2, r2, #2
   1eb04:	lsl	r2, r2, #1
   1eb08:	ldr	r0, [r1, #8]
   1eb0c:	cmp	r0, r2
   1eb10:	ble	1ecf8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x224>
   1eb14:	ldr	r0, [r1, #4]
   1eb18:	ldrh	r2, [r0, r2]
   1eb1c:	cmp	r2, #0
   1eb20:	beq	1ecf8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x224>
   1eb24:	ldr	r0, [r1]
   1eb28:	adds	ip, r0, r2
   1eb2c:	beq	1ecf8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x224>
   1eb30:	ldr	lr, [r1, #16]
   1eb34:	add	r5, lr, #1
   1eb38:	str	r5, [r1, #16]
   1eb3c:	cmp	lr, #0
   1eb40:	beq	1eb58 <flatcc_json_printer_int32_enum_vector_field@@Base+0x84>
   1eb44:	ldr	r1, [r4, #20]
   1eb48:	add	lr, r1, #1
   1eb4c:	str	lr, [r4, #20]
   1eb50:	mov	lr, #44	; 0x2c
   1eb54:	strb	lr, [r1]
   1eb58:	ldr	r2, [r0, r2]
   1eb5c:	add	r6, ip, r2
   1eb60:	ldr	r8, [ip, r2]
   1eb64:	ldr	r2, [sp, #48]	; 0x30
   1eb68:	mov	r1, r3
   1eb6c:	mov	r0, r4
   1eb70:	bl	15808 <main@@Base+0x1c2c>
   1eb74:	ldr	r3, [r4, #32]
   1eb78:	add	r3, r3, #1
   1eb7c:	str	r3, [r4, #32]
   1eb80:	ldr	r3, [r4, #20]
   1eb84:	add	r2, r3, #1
   1eb88:	str	r2, [r4, #20]
   1eb8c:	mov	r2, #91	; 0x5b
   1eb90:	strb	r2, [r3]
   1eb94:	cmp	r8, #0
   1eb98:	beq	1ecd8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x204>
   1eb9c:	ldrb	r3, [r4, #25]
   1eba0:	cmp	r3, #0
   1eba4:	bne	1ec08 <flatcc_json_printer_int32_enum_vector_field@@Base+0x134>
   1eba8:	ldr	r2, [r4, #20]
   1ebac:	ldr	r3, [r4, #16]
   1ebb0:	cmp	r2, r3
   1ebb4:	bcc	1ebc8 <flatcc_json_printer_int32_enum_vector_field@@Base+0xf4>
   1ebb8:	ldr	r3, [r4, #44]	; 0x2c
   1ebbc:	mov	r1, #0
   1ebc0:	mov	r0, r4
   1ebc4:	blx	r3
   1ebc8:	ldr	r1, [r6, #4]
   1ebcc:	mov	r0, r4
   1ebd0:	blx	r7
   1ebd4:	add	r6, r6, #8
   1ebd8:	sub	r5, r8, #2
   1ebdc:	cmp	r8, #1
   1ebe0:	beq	1ecd8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x204>
   1ebe4:	mov	r8, #44	; 0x2c
   1ebe8:	mov	r9, #0
   1ebec:	mov	sl, #10
   1ebf0:	b	1ec7c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a8>
   1ebf4:	ldr	r0, [sp, #48]	; 0x30
   1ebf8:	str	r0, [sp]
   1ebfc:	mov	r0, r4
   1ec00:	bl	1cb24 <flatcc_json_printer_int32_vector_field@@Base>
   1ec04:	b	1ecf8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x224>
   1ec08:	ldr	r3, [r4, #20]
   1ec0c:	add	r2, r3, #1
   1ec10:	str	r2, [r4, #20]
   1ec14:	mov	r2, #10
   1ec18:	strb	r2, [r3]
   1ec1c:	mov	r0, r4
   1ec20:	bl	152dc <main@@Base+0x1700>
   1ec24:	b	1ebc8 <flatcc_json_printer_int32_enum_vector_field@@Base+0xf4>
   1ec28:	ldr	r3, [r4, #20]
   1ec2c:	add	r2, r3, #1
   1ec30:	str	r2, [r4, #20]
   1ec34:	strb	sl, [r3]
   1ec38:	ldrb	r3, [r4, #25]
   1ec3c:	ldr	fp, [r4, #32]
   1ec40:	mul	fp, fp, r3
   1ec44:	ldr	r0, [r4, #20]
   1ec48:	add	r3, r0, fp
   1ec4c:	ldr	r2, [r4, #16]
   1ec50:	cmp	r2, r3
   1ec54:	bcs	1ecbc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1e8>
   1ec58:	mov	r1, fp
   1ec5c:	mov	r0, r4
   1ec60:	bl	15218 <main@@Base+0x163c>
   1ec64:	ldr	r1, [r6], #4
   1ec68:	mov	r0, r4
   1ec6c:	blx	r7
   1ec70:	sub	r5, r5, #1
   1ec74:	cmn	r5, #1
   1ec78:	beq	1ecd8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x204>
   1ec7c:	ldr	r3, [r4, #20]
   1ec80:	add	r2, r3, #1
   1ec84:	str	r2, [r4, #20]
   1ec88:	strb	r8, [r3]
   1ec8c:	ldrb	r3, [r4, #25]
   1ec90:	cmp	r3, #0
   1ec94:	bne	1ec28 <flatcc_json_printer_int32_enum_vector_field@@Base+0x154>
   1ec98:	ldr	r2, [r4, #20]
   1ec9c:	ldr	r3, [r4, #16]
   1eca0:	cmp	r2, r3
   1eca4:	bcc	1ec64 <flatcc_json_printer_int32_enum_vector_field@@Base+0x190>
   1eca8:	ldr	r3, [r4, #44]	; 0x2c
   1ecac:	mov	r1, r9
   1ecb0:	mov	r0, r4
   1ecb4:	blx	r3
   1ecb8:	b	1ec64 <flatcc_json_printer_int32_enum_vector_field@@Base+0x190>
   1ecbc:	mov	r2, fp
   1ecc0:	mov	r1, #32
   1ecc4:	bl	124c4 <memset@plt>
   1ecc8:	ldr	r3, [r4, #20]
   1eccc:	add	fp, r3, fp
   1ecd0:	str	fp, [r4, #20]
   1ecd4:	b	1ec64 <flatcc_json_printer_int32_enum_vector_field@@Base+0x190>
   1ecd8:	ldrb	r3, [r4, #25]
   1ecdc:	cmp	r3, #0
   1ece0:	bne	1ed14 <flatcc_json_printer_int32_enum_vector_field@@Base+0x240>
   1ece4:	ldr	r3, [r4, #20]
   1ece8:	add	r2, r3, #1
   1ecec:	str	r2, [r4, #20]
   1ecf0:	mov	r2, #93	; 0x5d
   1ecf4:	strb	r2, [r3]
   1ecf8:	add	sp, sp, #12
   1ecfc:	ldrd	r4, [sp]
   1ed00:	ldrd	r6, [sp, #8]
   1ed04:	ldrd	r8, [sp, #16]
   1ed08:	ldrd	sl, [sp, #24]
   1ed0c:	add	sp, sp, #32
   1ed10:	pop	{pc}		; (ldr pc, [sp], #4)
   1ed14:	ldr	r3, [r4, #20]
   1ed18:	add	r2, r3, #1
   1ed1c:	str	r2, [r4, #20]
   1ed20:	mov	r2, #10
   1ed24:	strb	r2, [r3]
   1ed28:	ldr	r5, [r4, #32]
   1ed2c:	sub	r5, r5, #1
   1ed30:	str	r5, [r4, #32]
   1ed34:	ldrb	r3, [r4, #25]
   1ed38:	mul	r5, r5, r3
   1ed3c:	ldr	r0, [r4, #20]
   1ed40:	add	r3, r0, r5
   1ed44:	ldr	r2, [r4, #16]
   1ed48:	cmp	r2, r3
   1ed4c:	bcs	1ed60 <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   1ed50:	mov	r1, r5
   1ed54:	mov	r0, r4
   1ed58:	bl	15218 <main@@Base+0x163c>
   1ed5c:	b	1ece4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x210>
   1ed60:	mov	r2, r5
   1ed64:	mov	r1, #32
   1ed68:	bl	124c4 <memset@plt>
   1ed6c:	ldr	r3, [r4, #20]
   1ed70:	add	r5, r3, r5
   1ed74:	str	r5, [r4, #20]
   1ed78:	b	1ece4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x210>

0001ed7c <flatcc_json_printer_int64_enum_vector_field@@Base>:
   1ed7c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ed80:	strd	r6, [sp, #8]
   1ed84:	strd	r8, [sp, #16]
   1ed88:	strd	sl, [sp, #24]
   1ed8c:	str	lr, [sp, #32]
   1ed90:	sub	sp, sp, #12
   1ed94:	mov	r4, r0
   1ed98:	ldr	r7, [sp, #52]	; 0x34
   1ed9c:	ldrb	r0, [r0, #27]
   1eda0:	cmp	r0, #0
   1eda4:	bne	1ee9c <flatcc_json_printer_int64_enum_vector_field@@Base+0x120>
   1eda8:	add	r2, r2, #2
   1edac:	lsl	r2, r2, #1
   1edb0:	ldr	r0, [r1, #8]
   1edb4:	cmp	r0, r2
   1edb8:	ble	1efa0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x224>
   1edbc:	ldr	r0, [r1, #4]
   1edc0:	ldrh	r2, [r0, r2]
   1edc4:	cmp	r2, #0
   1edc8:	beq	1efa0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x224>
   1edcc:	ldr	r0, [r1]
   1edd0:	adds	ip, r0, r2
   1edd4:	beq	1efa0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x224>
   1edd8:	ldr	lr, [r1, #16]
   1eddc:	add	r5, lr, #1
   1ede0:	str	r5, [r1, #16]
   1ede4:	cmp	lr, #0
   1ede8:	beq	1ee00 <flatcc_json_printer_int64_enum_vector_field@@Base+0x84>
   1edec:	ldr	r1, [r4, #20]
   1edf0:	add	lr, r1, #1
   1edf4:	str	lr, [r4, #20]
   1edf8:	mov	lr, #44	; 0x2c
   1edfc:	strb	lr, [r1]
   1ee00:	ldr	r2, [r0, r2]
   1ee04:	add	r6, ip, r2
   1ee08:	ldr	r8, [ip, r2]
   1ee0c:	ldr	r2, [sp, #48]	; 0x30
   1ee10:	mov	r1, r3
   1ee14:	mov	r0, r4
   1ee18:	bl	15808 <main@@Base+0x1c2c>
   1ee1c:	ldr	r3, [r4, #32]
   1ee20:	add	r3, r3, #1
   1ee24:	str	r3, [r4, #32]
   1ee28:	ldr	r3, [r4, #20]
   1ee2c:	add	r2, r3, #1
   1ee30:	str	r2, [r4, #20]
   1ee34:	mov	r2, #91	; 0x5b
   1ee38:	strb	r2, [r3]
   1ee3c:	cmp	r8, #0
   1ee40:	beq	1ef80 <flatcc_json_printer_int64_enum_vector_field@@Base+0x204>
   1ee44:	ldrb	r3, [r4, #25]
   1ee48:	cmp	r3, #0
   1ee4c:	bne	1eeb0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x134>
   1ee50:	ldr	r2, [r4, #20]
   1ee54:	ldr	r3, [r4, #16]
   1ee58:	cmp	r2, r3
   1ee5c:	bcc	1ee70 <flatcc_json_printer_int64_enum_vector_field@@Base+0xf4>
   1ee60:	ldr	r3, [r4, #44]	; 0x2c
   1ee64:	mov	r1, #0
   1ee68:	mov	r0, r4
   1ee6c:	blx	r3
   1ee70:	ldrd	r2, [r6, #4]
   1ee74:	mov	r0, r4
   1ee78:	blx	r7
   1ee7c:	add	r6, r6, #12
   1ee80:	sub	r5, r8, #2
   1ee84:	cmp	r8, #1
   1ee88:	beq	1ef80 <flatcc_json_printer_int64_enum_vector_field@@Base+0x204>
   1ee8c:	mov	r8, #44	; 0x2c
   1ee90:	mov	r9, #0
   1ee94:	mov	sl, #10
   1ee98:	b	1ef24 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a8>
   1ee9c:	ldr	r0, [sp, #48]	; 0x30
   1eea0:	str	r0, [sp]
   1eea4:	mov	r0, r4
   1eea8:	bl	1cdb4 <flatcc_json_printer_int64_vector_field@@Base>
   1eeac:	b	1efa0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x224>
   1eeb0:	ldr	r3, [r4, #20]
   1eeb4:	add	r2, r3, #1
   1eeb8:	str	r2, [r4, #20]
   1eebc:	mov	r2, #10
   1eec0:	strb	r2, [r3]
   1eec4:	mov	r0, r4
   1eec8:	bl	152dc <main@@Base+0x1700>
   1eecc:	b	1ee70 <flatcc_json_printer_int64_enum_vector_field@@Base+0xf4>
   1eed0:	ldr	r3, [r4, #20]
   1eed4:	add	r2, r3, #1
   1eed8:	str	r2, [r4, #20]
   1eedc:	strb	sl, [r3]
   1eee0:	ldrb	r3, [r4, #25]
   1eee4:	ldr	fp, [r4, #32]
   1eee8:	mul	fp, fp, r3
   1eeec:	ldr	r0, [r4, #20]
   1eef0:	add	r3, r0, fp
   1eef4:	ldr	r2, [r4, #16]
   1eef8:	cmp	r2, r3
   1eefc:	bcs	1ef64 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1e8>
   1ef00:	mov	r1, fp
   1ef04:	mov	r0, r4
   1ef08:	bl	15218 <main@@Base+0x163c>
   1ef0c:	ldrd	r2, [r6], #8
   1ef10:	mov	r0, r4
   1ef14:	blx	r7
   1ef18:	sub	r5, r5, #1
   1ef1c:	cmn	r5, #1
   1ef20:	beq	1ef80 <flatcc_json_printer_int64_enum_vector_field@@Base+0x204>
   1ef24:	ldr	r3, [r4, #20]
   1ef28:	add	r2, r3, #1
   1ef2c:	str	r2, [r4, #20]
   1ef30:	strb	r8, [r3]
   1ef34:	ldrb	r3, [r4, #25]
   1ef38:	cmp	r3, #0
   1ef3c:	bne	1eed0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x154>
   1ef40:	ldr	r2, [r4, #20]
   1ef44:	ldr	r3, [r4, #16]
   1ef48:	cmp	r2, r3
   1ef4c:	bcc	1ef0c <flatcc_json_printer_int64_enum_vector_field@@Base+0x190>
   1ef50:	ldr	r3, [r4, #44]	; 0x2c
   1ef54:	mov	r1, r9
   1ef58:	mov	r0, r4
   1ef5c:	blx	r3
   1ef60:	b	1ef0c <flatcc_json_printer_int64_enum_vector_field@@Base+0x190>
   1ef64:	mov	r2, fp
   1ef68:	mov	r1, #32
   1ef6c:	bl	124c4 <memset@plt>
   1ef70:	ldr	r3, [r4, #20]
   1ef74:	add	fp, r3, fp
   1ef78:	str	fp, [r4, #20]
   1ef7c:	b	1ef0c <flatcc_json_printer_int64_enum_vector_field@@Base+0x190>
   1ef80:	ldrb	r3, [r4, #25]
   1ef84:	cmp	r3, #0
   1ef88:	bne	1efbc <flatcc_json_printer_int64_enum_vector_field@@Base+0x240>
   1ef8c:	ldr	r3, [r4, #20]
   1ef90:	add	r2, r3, #1
   1ef94:	str	r2, [r4, #20]
   1ef98:	mov	r2, #93	; 0x5d
   1ef9c:	strb	r2, [r3]
   1efa0:	add	sp, sp, #12
   1efa4:	ldrd	r4, [sp]
   1efa8:	ldrd	r6, [sp, #8]
   1efac:	ldrd	r8, [sp, #16]
   1efb0:	ldrd	sl, [sp, #24]
   1efb4:	add	sp, sp, #32
   1efb8:	pop	{pc}		; (ldr pc, [sp], #4)
   1efbc:	ldr	r3, [r4, #20]
   1efc0:	add	r2, r3, #1
   1efc4:	str	r2, [r4, #20]
   1efc8:	mov	r2, #10
   1efcc:	strb	r2, [r3]
   1efd0:	ldr	r5, [r4, #32]
   1efd4:	sub	r5, r5, #1
   1efd8:	str	r5, [r4, #32]
   1efdc:	ldrb	r3, [r4, #25]
   1efe0:	mul	r5, r5, r3
   1efe4:	ldr	r0, [r4, #20]
   1efe8:	add	r3, r0, r5
   1efec:	ldr	r2, [r4, #16]
   1eff0:	cmp	r2, r3
   1eff4:	bcs	1f008 <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   1eff8:	mov	r1, r5
   1effc:	mov	r0, r4
   1f000:	bl	15218 <main@@Base+0x163c>
   1f004:	b	1ef8c <flatcc_json_printer_int64_enum_vector_field@@Base+0x210>
   1f008:	mov	r2, r5
   1f00c:	mov	r1, #32
   1f010:	bl	124c4 <memset@plt>
   1f014:	ldr	r3, [r4, #20]
   1f018:	add	r5, r3, r5
   1f01c:	str	r5, [r4, #20]
   1f020:	b	1ef8c <flatcc_json_printer_int64_enum_vector_field@@Base+0x210>

0001f024 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   1f024:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1f028:	strd	r6, [sp, #8]
   1f02c:	strd	r8, [sp, #16]
   1f030:	strd	sl, [sp, #24]
   1f034:	str	lr, [sp, #32]
   1f038:	sub	sp, sp, #12
   1f03c:	mov	r4, r0
   1f040:	ldr	r7, [sp, #52]	; 0x34
   1f044:	ldrb	r0, [r0, #27]
   1f048:	cmp	r0, #0
   1f04c:	bne	1f148 <flatcc_json_printer_bool_enum_vector_field@@Base+0x124>
   1f050:	add	r2, r2, #2
   1f054:	lsl	r2, r2, #1
   1f058:	ldr	r0, [r1, #8]
   1f05c:	cmp	r0, r2
   1f060:	ble	1f248 <flatcc_json_printer_bool_enum_vector_field@@Base+0x224>
   1f064:	ldr	r0, [r1, #4]
   1f068:	ldrh	r2, [r0, r2]
   1f06c:	cmp	r2, #0
   1f070:	beq	1f248 <flatcc_json_printer_bool_enum_vector_field@@Base+0x224>
   1f074:	ldr	r0, [r1]
   1f078:	adds	ip, r0, r2
   1f07c:	beq	1f248 <flatcc_json_printer_bool_enum_vector_field@@Base+0x224>
   1f080:	ldr	lr, [r1, #16]
   1f084:	add	r5, lr, #1
   1f088:	str	r5, [r1, #16]
   1f08c:	cmp	lr, #0
   1f090:	beq	1f0a8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x84>
   1f094:	ldr	r1, [r4, #20]
   1f098:	add	lr, r1, #1
   1f09c:	str	lr, [r4, #20]
   1f0a0:	mov	lr, #44	; 0x2c
   1f0a4:	strb	lr, [r1]
   1f0a8:	ldr	r2, [r0, r2]
   1f0ac:	add	r6, ip, r2
   1f0b0:	ldr	r8, [ip, r2]
   1f0b4:	ldr	r2, [sp, #48]	; 0x30
   1f0b8:	mov	r1, r3
   1f0bc:	mov	r0, r4
   1f0c0:	bl	15808 <main@@Base+0x1c2c>
   1f0c4:	ldr	r3, [r4, #32]
   1f0c8:	add	r3, r3, #1
   1f0cc:	str	r3, [r4, #32]
   1f0d0:	ldr	r3, [r4, #20]
   1f0d4:	add	r2, r3, #1
   1f0d8:	str	r2, [r4, #20]
   1f0dc:	mov	r2, #91	; 0x5b
   1f0e0:	strb	r2, [r3]
   1f0e4:	cmp	r8, #0
   1f0e8:	beq	1f228 <flatcc_json_printer_bool_enum_vector_field@@Base+0x204>
   1f0ec:	ldrb	r3, [r4, #25]
   1f0f0:	cmp	r3, #0
   1f0f4:	bne	1f15c <flatcc_json_printer_bool_enum_vector_field@@Base+0x138>
   1f0f8:	ldr	r2, [r4, #20]
   1f0fc:	ldr	r3, [r4, #16]
   1f100:	cmp	r2, r3
   1f104:	bcc	1f118 <flatcc_json_printer_bool_enum_vector_field@@Base+0xf4>
   1f108:	ldr	r3, [r4, #44]	; 0x2c
   1f10c:	mov	r1, #0
   1f110:	mov	r0, r4
   1f114:	blx	r3
   1f118:	ldrb	r1, [r6, #4]
   1f11c:	mov	r0, r4
   1f120:	blx	r7
   1f124:	add	r5, r6, #5
   1f128:	cmp	r8, #1
   1f12c:	beq	1f228 <flatcc_json_printer_bool_enum_vector_field@@Base+0x204>
   1f130:	add	r8, r8, #4
   1f134:	add	r6, r6, r8
   1f138:	mov	r8, #44	; 0x2c
   1f13c:	mov	r9, #0
   1f140:	mov	sl, #10
   1f144:	b	1f1cc <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a8>
   1f148:	ldr	r0, [sp, #48]	; 0x30
   1f14c:	str	r0, [sp]
   1f150:	mov	r0, r4
   1f154:	bl	1d044 <flatcc_json_printer_bool_vector_field@@Base>
   1f158:	b	1f248 <flatcc_json_printer_bool_enum_vector_field@@Base+0x224>
   1f15c:	ldr	r3, [r4, #20]
   1f160:	add	r2, r3, #1
   1f164:	str	r2, [r4, #20]
   1f168:	mov	r2, #10
   1f16c:	strb	r2, [r3]
   1f170:	mov	r0, r4
   1f174:	bl	152dc <main@@Base+0x1700>
   1f178:	b	1f118 <flatcc_json_printer_bool_enum_vector_field@@Base+0xf4>
   1f17c:	ldr	r3, [r4, #20]
   1f180:	add	r2, r3, #1
   1f184:	str	r2, [r4, #20]
   1f188:	strb	sl, [r3]
   1f18c:	ldrb	r3, [r4, #25]
   1f190:	ldr	fp, [r4, #32]
   1f194:	mul	fp, fp, r3
   1f198:	ldr	r0, [r4, #20]
   1f19c:	add	r3, r0, fp
   1f1a0:	ldr	r2, [r4, #16]
   1f1a4:	cmp	r2, r3
   1f1a8:	bcs	1f20c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1e8>
   1f1ac:	mov	r1, fp
   1f1b0:	mov	r0, r4
   1f1b4:	bl	15218 <main@@Base+0x163c>
   1f1b8:	ldrb	r1, [r5], #1
   1f1bc:	mov	r0, r4
   1f1c0:	blx	r7
   1f1c4:	cmp	r6, r5
   1f1c8:	beq	1f228 <flatcc_json_printer_bool_enum_vector_field@@Base+0x204>
   1f1cc:	ldr	r3, [r4, #20]
   1f1d0:	add	r2, r3, #1
   1f1d4:	str	r2, [r4, #20]
   1f1d8:	strb	r8, [r3]
   1f1dc:	ldrb	r3, [r4, #25]
   1f1e0:	cmp	r3, #0
   1f1e4:	bne	1f17c <flatcc_json_printer_bool_enum_vector_field@@Base+0x158>
   1f1e8:	ldr	r2, [r4, #20]
   1f1ec:	ldr	r3, [r4, #16]
   1f1f0:	cmp	r2, r3
   1f1f4:	bcc	1f1b8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x194>
   1f1f8:	ldr	r3, [r4, #44]	; 0x2c
   1f1fc:	mov	r1, r9
   1f200:	mov	r0, r4
   1f204:	blx	r3
   1f208:	b	1f1b8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x194>
   1f20c:	mov	r2, fp
   1f210:	mov	r1, #32
   1f214:	bl	124c4 <memset@plt>
   1f218:	ldr	r3, [r4, #20]
   1f21c:	add	fp, r3, fp
   1f220:	str	fp, [r4, #20]
   1f224:	b	1f1b8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x194>
   1f228:	ldrb	r3, [r4, #25]
   1f22c:	cmp	r3, #0
   1f230:	bne	1f264 <flatcc_json_printer_bool_enum_vector_field@@Base+0x240>
   1f234:	ldr	r3, [r4, #20]
   1f238:	add	r2, r3, #1
   1f23c:	str	r2, [r4, #20]
   1f240:	mov	r2, #93	; 0x5d
   1f244:	strb	r2, [r3]
   1f248:	add	sp, sp, #12
   1f24c:	ldrd	r4, [sp]
   1f250:	ldrd	r6, [sp, #8]
   1f254:	ldrd	r8, [sp, #16]
   1f258:	ldrd	sl, [sp, #24]
   1f25c:	add	sp, sp, #32
   1f260:	pop	{pc}		; (ldr pc, [sp], #4)
   1f264:	ldr	r3, [r4, #20]
   1f268:	add	r2, r3, #1
   1f26c:	str	r2, [r4, #20]
   1f270:	mov	r2, #10
   1f274:	strb	r2, [r3]
   1f278:	ldr	r5, [r4, #32]
   1f27c:	sub	r5, r5, #1
   1f280:	str	r5, [r4, #32]
   1f284:	ldrb	r3, [r4, #25]
   1f288:	mul	r5, r5, r3
   1f28c:	ldr	r0, [r4, #20]
   1f290:	add	r3, r0, r5
   1f294:	ldr	r2, [r4, #16]
   1f298:	cmp	r2, r3
   1f29c:	bcs	1f2b0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   1f2a0:	mov	r1, r5
   1f2a4:	mov	r0, r4
   1f2a8:	bl	15218 <main@@Base+0x163c>
   1f2ac:	b	1f234 <flatcc_json_printer_bool_enum_vector_field@@Base+0x210>
   1f2b0:	mov	r2, r5
   1f2b4:	mov	r1, #32
   1f2b8:	bl	124c4 <memset@plt>
   1f2bc:	ldr	r3, [r4, #20]
   1f2c0:	add	r5, r3, r5
   1f2c4:	str	r5, [r4, #20]
   1f2c8:	b	1f234 <flatcc_json_printer_bool_enum_vector_field@@Base+0x210>

0001f2cc <flatcc_json_printer_struct_vector_field@@Base>:
   1f2cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1f2d0:	strd	r6, [sp, #8]
   1f2d4:	strd	r8, [sp, #16]
   1f2d8:	strd	sl, [sp, #24]
   1f2dc:	str	lr, [sp, #32]
   1f2e0:	sub	sp, sp, #4
   1f2e4:	ldr	r9, [sp, #44]	; 0x2c
   1f2e8:	ldr	r8, [sp, #48]	; 0x30
   1f2ec:	add	r2, r2, #2
   1f2f0:	lsl	r2, r2, #1
   1f2f4:	ldr	ip, [r1, #8]
   1f2f8:	cmp	r2, ip
   1f2fc:	bge	1f5e0 <flatcc_json_printer_struct_vector_field@@Base+0x314>
   1f300:	ldr	ip, [r1, #4]
   1f304:	ldrh	r2, [ip, r2]
   1f308:	cmp	r2, #0
   1f30c:	beq	1f5e0 <flatcc_json_printer_struct_vector_field@@Base+0x314>
   1f310:	ldr	ip, [r1]
   1f314:	adds	lr, ip, r2
   1f318:	beq	1f5e0 <flatcc_json_printer_struct_vector_field@@Base+0x314>
   1f31c:	ldr	r4, [r1, #16]
   1f320:	add	r5, r4, #1
   1f324:	str	r5, [r1, #16]
   1f328:	cmp	r4, #0
   1f32c:	beq	1f344 <flatcc_json_printer_struct_vector_field@@Base+0x78>
   1f330:	ldr	r1, [r0, #20]
   1f334:	add	r4, r1, #1
   1f338:	str	r4, [r0, #20]
   1f33c:	mov	r4, #44	; 0x2c
   1f340:	strb	r4, [r1]
   1f344:	mov	r1, r3
   1f348:	mov	r4, r0
   1f34c:	ldr	r3, [ip, r2]
   1f350:	add	r5, lr, r3
   1f354:	ldr	r7, [lr, r3]
   1f358:	ldr	r2, [sp, #40]	; 0x28
   1f35c:	bl	15808 <main@@Base+0x1c2c>
   1f360:	ldr	r3, [r4, #32]
   1f364:	add	r3, r3, #1
   1f368:	str	r3, [r4, #32]
   1f36c:	ldr	r3, [r4, #20]
   1f370:	add	r2, r3, #1
   1f374:	str	r2, [r4, #20]
   1f378:	mov	r2, #91	; 0x5b
   1f37c:	strb	r2, [r3]
   1f380:	cmp	r7, #0
   1f384:	beq	1f5c0 <flatcc_json_printer_struct_vector_field@@Base+0x2f4>
   1f388:	ldrb	r3, [r4, #25]
   1f38c:	cmp	r3, #0
   1f390:	bne	1f41c <flatcc_json_printer_struct_vector_field@@Base+0x150>
   1f394:	ldr	r2, [r4, #20]
   1f398:	ldr	r3, [r4, #16]
   1f39c:	cmp	r2, r3
   1f3a0:	bcc	1f3b4 <flatcc_json_printer_struct_vector_field@@Base+0xe8>
   1f3a4:	ldr	r3, [r4, #44]	; 0x2c
   1f3a8:	mov	r1, #0
   1f3ac:	mov	r0, r4
   1f3b0:	blx	r3
   1f3b4:	add	r5, r5, #4
   1f3b8:	ldr	r3, [r4, #32]
   1f3bc:	add	r3, r3, #1
   1f3c0:	str	r3, [r4, #32]
   1f3c4:	ldr	r3, [r4, #20]
   1f3c8:	add	r2, r3, #1
   1f3cc:	str	r2, [r4, #20]
   1f3d0:	mov	r2, #123	; 0x7b
   1f3d4:	strb	r2, [r3]
   1f3d8:	mov	r1, r5
   1f3dc:	mov	r0, r4
   1f3e0:	blx	r8
   1f3e4:	ldrb	r3, [r4, #25]
   1f3e8:	cmp	r3, #0
   1f3ec:	bne	1f43c <flatcc_json_printer_struct_vector_field@@Base+0x170>
   1f3f0:	ldr	r3, [r4, #20]
   1f3f4:	add	r2, r3, #1
   1f3f8:	str	r2, [r4, #20]
   1f3fc:	mov	r2, #125	; 0x7d
   1f400:	strb	r2, [r3]
   1f404:	sub	r6, r7, #2
   1f408:	cmp	r7, #1
   1f40c:	beq	1f5c0 <flatcc_json_printer_struct_vector_field@@Base+0x2f4>
   1f410:	mov	sl, #44	; 0x2c
   1f414:	mov	fp, #10
   1f418:	b	1f4fc <flatcc_json_printer_struct_vector_field@@Base+0x230>
   1f41c:	ldr	r3, [r4, #20]
   1f420:	add	r2, r3, #1
   1f424:	str	r2, [r4, #20]
   1f428:	mov	r2, #10
   1f42c:	strb	r2, [r3]
   1f430:	mov	r0, r4
   1f434:	bl	152dc <main@@Base+0x1700>
   1f438:	b	1f3b4 <flatcc_json_printer_struct_vector_field@@Base+0xe8>
   1f43c:	ldr	r3, [r4, #20]
   1f440:	add	r2, r3, #1
   1f444:	str	r2, [r4, #20]
   1f448:	mov	r2, #10
   1f44c:	strb	r2, [r3]
   1f450:	ldr	r3, [r4, #32]
   1f454:	sub	r3, r3, #1
   1f458:	str	r3, [r4, #32]
   1f45c:	mov	r0, r4
   1f460:	bl	152dc <main@@Base+0x1700>
   1f464:	b	1f3f0 <flatcc_json_printer_struct_vector_field@@Base+0x124>
   1f468:	ldr	r3, [r4, #20]
   1f46c:	add	r2, r3, #1
   1f470:	str	r2, [r4, #20]
   1f474:	strb	fp, [r3]
   1f478:	ldrb	r3, [r4, #25]
   1f47c:	ldr	r7, [r4, #32]
   1f480:	mul	r7, r7, r3
   1f484:	ldr	r0, [r4, #20]
   1f488:	add	r3, r0, r7
   1f48c:	ldr	r2, [r4, #16]
   1f490:	cmp	r2, r3
   1f494:	bcs	1f540 <flatcc_json_printer_struct_vector_field@@Base+0x274>
   1f498:	mov	r1, r7
   1f49c:	mov	r0, r4
   1f4a0:	bl	15218 <main@@Base+0x163c>
   1f4a4:	ldr	r3, [r4, #32]
   1f4a8:	add	r3, r3, #1
   1f4ac:	str	r3, [r4, #32]
   1f4b0:	ldr	r3, [r4, #20]
   1f4b4:	add	r2, r3, #1
   1f4b8:	str	r2, [r4, #20]
   1f4bc:	mov	r2, #123	; 0x7b
   1f4c0:	strb	r2, [r3]
   1f4c4:	mov	r1, r5
   1f4c8:	mov	r0, r4
   1f4cc:	blx	r8
   1f4d0:	ldrb	r3, [r4, #25]
   1f4d4:	cmp	r3, #0
   1f4d8:	bne	1f55c <flatcc_json_printer_struct_vector_field@@Base+0x290>
   1f4dc:	ldr	r3, [r4, #20]
   1f4e0:	add	r2, r3, #1
   1f4e4:	str	r2, [r4, #20]
   1f4e8:	mov	r2, #125	; 0x7d
   1f4ec:	strb	r2, [r3]
   1f4f0:	sub	r6, r6, #1
   1f4f4:	cmn	r6, #1
   1f4f8:	beq	1f5c0 <flatcc_json_printer_struct_vector_field@@Base+0x2f4>
   1f4fc:	add	r5, r5, r9
   1f500:	ldr	r3, [r4, #20]
   1f504:	add	r2, r3, #1
   1f508:	str	r2, [r4, #20]
   1f50c:	strb	sl, [r3]
   1f510:	ldrb	r3, [r4, #25]
   1f514:	cmp	r3, #0
   1f518:	bne	1f468 <flatcc_json_printer_struct_vector_field@@Base+0x19c>
   1f51c:	ldr	r2, [r4, #20]
   1f520:	ldr	r3, [r4, #16]
   1f524:	cmp	r2, r3
   1f528:	bcc	1f4a4 <flatcc_json_printer_struct_vector_field@@Base+0x1d8>
   1f52c:	ldr	r3, [r4, #44]	; 0x2c
   1f530:	mov	r1, #0
   1f534:	mov	r0, r4
   1f538:	blx	r3
   1f53c:	b	1f4a4 <flatcc_json_printer_struct_vector_field@@Base+0x1d8>
   1f540:	mov	r2, r7
   1f544:	mov	r1, #32
   1f548:	bl	124c4 <memset@plt>
   1f54c:	ldr	r3, [r4, #20]
   1f550:	add	r7, r3, r7
   1f554:	str	r7, [r4, #20]
   1f558:	b	1f4a4 <flatcc_json_printer_struct_vector_field@@Base+0x1d8>
   1f55c:	ldr	r3, [r4, #20]
   1f560:	add	r2, r3, #1
   1f564:	str	r2, [r4, #20]
   1f568:	strb	fp, [r3]
   1f56c:	ldr	r7, [r4, #32]
   1f570:	sub	r7, r7, #1
   1f574:	str	r7, [r4, #32]
   1f578:	ldrb	r3, [r4, #25]
   1f57c:	mul	r7, r7, r3
   1f580:	ldr	r0, [r4, #20]
   1f584:	add	r3, r0, r7
   1f588:	ldr	r2, [r4, #16]
   1f58c:	cmp	r2, r3
   1f590:	bcs	1f5a4 <flatcc_json_printer_struct_vector_field@@Base+0x2d8>
   1f594:	mov	r1, r7
   1f598:	mov	r0, r4
   1f59c:	bl	15218 <main@@Base+0x163c>
   1f5a0:	b	1f4dc <flatcc_json_printer_struct_vector_field@@Base+0x210>
   1f5a4:	mov	r2, r7
   1f5a8:	mov	r1, #32
   1f5ac:	bl	124c4 <memset@plt>
   1f5b0:	ldr	r3, [r4, #20]
   1f5b4:	add	r7, r3, r7
   1f5b8:	str	r7, [r4, #20]
   1f5bc:	b	1f4dc <flatcc_json_printer_struct_vector_field@@Base+0x210>
   1f5c0:	ldrb	r3, [r4, #25]
   1f5c4:	cmp	r3, #0
   1f5c8:	bne	1f5fc <flatcc_json_printer_struct_vector_field@@Base+0x330>
   1f5cc:	ldr	r3, [r4, #20]
   1f5d0:	add	r2, r3, #1
   1f5d4:	str	r2, [r4, #20]
   1f5d8:	mov	r2, #93	; 0x5d
   1f5dc:	strb	r2, [r3]
   1f5e0:	add	sp, sp, #4
   1f5e4:	ldrd	r4, [sp]
   1f5e8:	ldrd	r6, [sp, #8]
   1f5ec:	ldrd	r8, [sp, #16]
   1f5f0:	ldrd	sl, [sp, #24]
   1f5f4:	add	sp, sp, #32
   1f5f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1f5fc:	ldr	r3, [r4, #20]
   1f600:	add	r2, r3, #1
   1f604:	str	r2, [r4, #20]
   1f608:	mov	r2, #10
   1f60c:	strb	r2, [r3]
   1f610:	ldr	r5, [r4, #32]
   1f614:	sub	r5, r5, #1
   1f618:	str	r5, [r4, #32]
   1f61c:	ldrb	r3, [r4, #25]
   1f620:	mul	r5, r5, r3
   1f624:	ldr	r0, [r4, #20]
   1f628:	add	r3, r0, r5
   1f62c:	ldr	r2, [r4, #16]
   1f630:	cmp	r2, r3
   1f634:	bcs	1f648 <flatcc_json_printer_struct_vector_field@@Base+0x37c>
   1f638:	mov	r1, r5
   1f63c:	mov	r0, r4
   1f640:	bl	15218 <main@@Base+0x163c>
   1f644:	b	1f5cc <flatcc_json_printer_struct_vector_field@@Base+0x300>
   1f648:	mov	r2, r5
   1f64c:	mov	r1, #32
   1f650:	bl	124c4 <memset@plt>
   1f654:	ldr	r3, [r4, #20]
   1f658:	add	r5, r3, r5
   1f65c:	str	r5, [r4, #20]
   1f660:	b	1f5cc <flatcc_json_printer_struct_vector_field@@Base+0x300>

0001f664 <flatcc_json_printer_string_vector_field@@Base>:
   1f664:	add	r2, r2, #2
   1f668:	lsl	r2, r2, #1
   1f66c:	ldr	ip, [r1, #8]
   1f670:	cmp	ip, r2
   1f674:	bxle	lr
   1f678:	ldr	ip, [r1, #4]
   1f67c:	ldrh	r2, [ip, r2]
   1f680:	cmp	r2, #0
   1f684:	bxeq	lr
   1f688:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1f68c:	strd	r6, [sp, #8]
   1f690:	strd	r8, [sp, #16]
   1f694:	strd	sl, [sp, #24]
   1f698:	str	lr, [sp, #32]
   1f69c:	sub	sp, sp, #4
   1f6a0:	ldr	ip, [r1]
   1f6a4:	adds	lr, ip, r2
   1f6a8:	beq	1f8c4 <flatcc_json_printer_string_vector_field@@Base+0x260>
   1f6ac:	ldr	r4, [r1, #16]
   1f6b0:	add	r5, r4, #1
   1f6b4:	str	r5, [r1, #16]
   1f6b8:	cmp	r4, #0
   1f6bc:	beq	1f6d4 <flatcc_json_printer_string_vector_field@@Base+0x70>
   1f6c0:	ldr	r1, [r0, #20]
   1f6c4:	add	r4, r1, #1
   1f6c8:	str	r4, [r0, #20]
   1f6cc:	mov	r4, #44	; 0x2c
   1f6d0:	strb	r4, [r1]
   1f6d4:	mov	r1, r3
   1f6d8:	mov	r4, r0
   1f6dc:	ldr	r3, [ip, r2]
   1f6e0:	add	r6, lr, r3
   1f6e4:	ldr	r5, [lr, r3]
   1f6e8:	ldr	r2, [sp, #40]	; 0x28
   1f6ec:	bl	15808 <main@@Base+0x1c2c>
   1f6f0:	ldr	r3, [r4, #32]
   1f6f4:	add	r3, r3, #1
   1f6f8:	str	r3, [r4, #32]
   1f6fc:	ldr	r3, [r4, #20]
   1f700:	add	r2, r3, #1
   1f704:	str	r2, [r4, #20]
   1f708:	mov	r2, #91	; 0x5b
   1f70c:	strb	r2, [r3]
   1f710:	cmp	r5, #0
   1f714:	beq	1f8a4 <flatcc_json_printer_string_vector_field@@Base+0x240>
   1f718:	ldrb	r3, [r4, #25]
   1f71c:	cmp	r3, #0
   1f720:	bne	1f780 <flatcc_json_printer_string_vector_field@@Base+0x11c>
   1f724:	ldr	r2, [r4, #20]
   1f728:	ldr	r3, [r4, #16]
   1f72c:	cmp	r2, r3
   1f730:	bcc	1f744 <flatcc_json_printer_string_vector_field@@Base+0xe0>
   1f734:	ldr	r3, [r4, #44]	; 0x2c
   1f738:	mov	r1, #0
   1f73c:	mov	r0, r4
   1f740:	blx	r3
   1f744:	ldr	r3, [r6, #4]
   1f748:	add	r3, r3, #4
   1f74c:	add	r1, r6, r3
   1f750:	ldr	r2, [r6, r3]
   1f754:	add	r1, r1, #4
   1f758:	mov	r0, r4
   1f75c:	bl	15584 <main@@Base+0x19a8>
   1f760:	sub	r7, r5, #2
   1f764:	cmp	r5, #1
   1f768:	beq	1f8a4 <flatcc_json_printer_string_vector_field@@Base+0x240>
   1f76c:	add	r6, r6, #8
   1f770:	mov	r8, #44	; 0x2c
   1f774:	mov	r9, #0
   1f778:	mov	sl, #10
   1f77c:	b	1f844 <flatcc_json_printer_string_vector_field@@Base+0x1e0>
   1f780:	ldr	r3, [r4, #20]
   1f784:	add	r2, r3, #1
   1f788:	str	r2, [r4, #20]
   1f78c:	mov	r2, #10
   1f790:	strb	r2, [r3]
   1f794:	ldrb	r3, [r4, #25]
   1f798:	ldr	r7, [r4, #32]
   1f79c:	mul	r7, r7, r3
   1f7a0:	ldr	r0, [r4, #20]
   1f7a4:	add	r3, r0, r7
   1f7a8:	ldr	r2, [r4, #16]
   1f7ac:	cmp	r2, r3
   1f7b0:	bcs	1f7c4 <flatcc_json_printer_string_vector_field@@Base+0x160>
   1f7b4:	mov	r1, r7
   1f7b8:	mov	r0, r4
   1f7bc:	bl	15218 <main@@Base+0x163c>
   1f7c0:	b	1f744 <flatcc_json_printer_string_vector_field@@Base+0xe0>
   1f7c4:	mov	r2, r7
   1f7c8:	mov	r1, #32
   1f7cc:	bl	124c4 <memset@plt>
   1f7d0:	ldr	r3, [r4, #20]
   1f7d4:	add	r7, r3, r7
   1f7d8:	str	r7, [r4, #20]
   1f7dc:	b	1f744 <flatcc_json_printer_string_vector_field@@Base+0xe0>
   1f7e0:	ldr	r3, [r4, #20]
   1f7e4:	add	r2, r3, #1
   1f7e8:	str	r2, [r4, #20]
   1f7ec:	strb	sl, [r3]
   1f7f0:	ldrb	r3, [r4, #25]
   1f7f4:	ldr	fp, [r4, #32]
   1f7f8:	mul	fp, fp, r3
   1f7fc:	ldr	r0, [r4, #20]
   1f800:	add	r3, r0, fp
   1f804:	ldr	r2, [r4, #16]
   1f808:	cmp	r2, r3
   1f80c:	bcs	1f888 <flatcc_json_printer_string_vector_field@@Base+0x224>
   1f810:	mov	r1, fp
   1f814:	mov	r0, r4
   1f818:	bl	15218 <main@@Base+0x163c>
   1f81c:	add	r6, r6, #4
   1f820:	ldr	r3, [r5]
   1f824:	add	r1, r5, r3
   1f828:	ldr	r2, [r5, r3]
   1f82c:	add	r1, r1, #4
   1f830:	mov	r0, r4
   1f834:	bl	15584 <main@@Base+0x19a8>
   1f838:	sub	r7, r7, #1
   1f83c:	cmn	r7, #1
   1f840:	beq	1f8a4 <flatcc_json_printer_string_vector_field@@Base+0x240>
   1f844:	mov	r5, r6
   1f848:	ldr	r3, [r4, #20]
   1f84c:	add	r2, r3, #1
   1f850:	str	r2, [r4, #20]
   1f854:	strb	r8, [r3]
   1f858:	ldrb	r3, [r4, #25]
   1f85c:	cmp	r3, #0
   1f860:	bne	1f7e0 <flatcc_json_printer_string_vector_field@@Base+0x17c>
   1f864:	ldr	r2, [r4, #20]
   1f868:	ldr	r3, [r4, #16]
   1f86c:	cmp	r2, r3
   1f870:	bcc	1f81c <flatcc_json_printer_string_vector_field@@Base+0x1b8>
   1f874:	ldr	r3, [r4, #44]	; 0x2c
   1f878:	mov	r1, r9
   1f87c:	mov	r0, r4
   1f880:	blx	r3
   1f884:	b	1f81c <flatcc_json_printer_string_vector_field@@Base+0x1b8>
   1f888:	mov	r2, fp
   1f88c:	mov	r1, #32
   1f890:	bl	124c4 <memset@plt>
   1f894:	ldr	r3, [r4, #20]
   1f898:	add	fp, r3, fp
   1f89c:	str	fp, [r4, #20]
   1f8a0:	b	1f81c <flatcc_json_printer_string_vector_field@@Base+0x1b8>
   1f8a4:	ldrb	r3, [r4, #25]
   1f8a8:	cmp	r3, #0
   1f8ac:	bne	1f8e0 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   1f8b0:	ldr	r3, [r4, #20]
   1f8b4:	add	r2, r3, #1
   1f8b8:	str	r2, [r4, #20]
   1f8bc:	mov	r2, #93	; 0x5d
   1f8c0:	strb	r2, [r3]
   1f8c4:	add	sp, sp, #4
   1f8c8:	ldrd	r4, [sp]
   1f8cc:	ldrd	r6, [sp, #8]
   1f8d0:	ldrd	r8, [sp, #16]
   1f8d4:	ldrd	sl, [sp, #24]
   1f8d8:	add	sp, sp, #32
   1f8dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1f8e0:	ldr	r3, [r4, #20]
   1f8e4:	add	r2, r3, #1
   1f8e8:	str	r2, [r4, #20]
   1f8ec:	mov	r2, #10
   1f8f0:	strb	r2, [r3]
   1f8f4:	ldr	r5, [r4, #32]
   1f8f8:	sub	r5, r5, #1
   1f8fc:	str	r5, [r4, #32]
   1f900:	ldrb	r3, [r4, #25]
   1f904:	mul	r5, r5, r3
   1f908:	ldr	r0, [r4, #20]
   1f90c:	add	r3, r0, r5
   1f910:	ldr	r2, [r4, #16]
   1f914:	cmp	r2, r3
   1f918:	bcs	1f92c <flatcc_json_printer_string_vector_field@@Base+0x2c8>
   1f91c:	mov	r1, r5
   1f920:	mov	r0, r4
   1f924:	bl	15218 <main@@Base+0x163c>
   1f928:	b	1f8b0 <flatcc_json_printer_string_vector_field@@Base+0x24c>
   1f92c:	mov	r2, r5
   1f930:	mov	r1, #32
   1f934:	bl	124c4 <memset@plt>
   1f938:	ldr	r3, [r4, #20]
   1f93c:	add	r5, r3, r5
   1f940:	str	r5, [r4, #20]
   1f944:	b	1f8b0 <flatcc_json_printer_string_vector_field@@Base+0x24c>

0001f948 <flatcc_json_printer_table_vector_field@@Base>:
   1f948:	add	r2, r2, #2
   1f94c:	lsl	r2, r2, #1
   1f950:	ldr	ip, [r1, #8]
   1f954:	cmp	ip, r2
   1f958:	bxle	lr
   1f95c:	ldr	ip, [r1, #4]
   1f960:	ldrh	r2, [ip, r2]
   1f964:	cmp	r2, #0
   1f968:	bxeq	lr
   1f96c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1f970:	strd	r6, [sp, #8]
   1f974:	strd	r8, [sp, #16]
   1f978:	strd	sl, [sp, #24]
   1f97c:	str	lr, [sp, #32]
   1f980:	sub	sp, sp, #28
   1f984:	ldr	ip, [r1]
   1f988:	adds	lr, ip, r2
   1f98c:	beq	1fadc <flatcc_json_printer_table_vector_field@@Base+0x194>
   1f990:	ldr	r4, [r1, #16]
   1f994:	add	r5, r4, #1
   1f998:	str	r5, [r1, #16]
   1f99c:	cmp	r4, #0
   1f9a0:	beq	1f9b8 <flatcc_json_printer_table_vector_field@@Base+0x70>
   1f9a4:	ldr	r4, [r0, #20]
   1f9a8:	add	r5, r4, #1
   1f9ac:	str	r5, [r0, #20]
   1f9b0:	mov	r5, #44	; 0x2c
   1f9b4:	strb	r5, [r4]
   1f9b8:	mov	r5, r3
   1f9bc:	mov	r7, r1
   1f9c0:	mov	r4, r0
   1f9c4:	ldr	r3, [ip, r2]
   1f9c8:	add	r8, lr, r3
   1f9cc:	ldr	r6, [lr, r3]
   1f9d0:	ldrb	r3, [r0, #25]
   1f9d4:	cmp	r3, #0
   1f9d8:	bne	1faf8 <flatcc_json_printer_table_vector_field@@Base+0x1b0>
   1f9dc:	ldr	r2, [r0, #20]
   1f9e0:	ldr	r3, [r0, #16]
   1f9e4:	cmp	r2, r3
   1f9e8:	bcc	1f9f8 <flatcc_json_printer_table_vector_field@@Base+0xb0>
   1f9ec:	ldr	r3, [r0, #44]	; 0x2c
   1f9f0:	mov	r1, #0
   1f9f4:	blx	r3
   1f9f8:	ldr	r3, [r4, #20]
   1f9fc:	mov	r2, #34	; 0x22
   1fa00:	strb	r2, [r3]
   1fa04:	ldrb	r3, [r4, #26]
   1fa08:	ldr	r0, [r4, #20]
   1fa0c:	cmp	r3, #0
   1fa10:	addeq	r0, r0, #1
   1fa14:	str	r0, [r4, #20]
   1fa18:	ldr	r3, [sp, #64]	; 0x40
   1fa1c:	add	r3, r0, r3
   1fa20:	ldr	r2, [r4, #16]
   1fa24:	cmp	r2, r3
   1fa28:	bls	1fb58 <flatcc_json_printer_table_vector_field@@Base+0x210>
   1fa2c:	ldr	r2, [sp, #64]	; 0x40
   1fa30:	mov	r1, r5
   1fa34:	bl	12428 <memcpy@plt>
   1fa38:	ldr	r3, [r4, #20]
   1fa3c:	ldr	r2, [sp, #64]	; 0x40
   1fa40:	add	r3, r3, r2
   1fa44:	str	r3, [r4, #20]
   1fa48:	ldr	r3, [r4, #20]
   1fa4c:	mov	r2, #34	; 0x22
   1fa50:	strb	r2, [r3]
   1fa54:	ldrb	r3, [r4, #26]
   1fa58:	clz	r3, r3
   1fa5c:	lsr	r3, r3, #5
   1fa60:	ldr	r1, [r4, #20]
   1fa64:	add	r2, r1, r3
   1fa68:	add	r2, r2, #1
   1fa6c:	str	r2, [r4, #20]
   1fa70:	mov	r2, #58	; 0x3a
   1fa74:	strb	r2, [r1, r3]
   1fa78:	ldr	r3, [r4, #20]
   1fa7c:	mov	r2, #32
   1fa80:	strb	r2, [r3]
   1fa84:	ldrb	r3, [r4, #25]
   1fa88:	adds	r3, r3, #0
   1fa8c:	movne	r3, #1
   1fa90:	ldr	r0, [r4, #20]
   1fa94:	add	r2, r0, r3
   1fa98:	ldr	r1, [r4, #32]
   1fa9c:	add	r1, r1, #1
   1faa0:	str	r1, [r4, #32]
   1faa4:	add	r2, r2, #1
   1faa8:	str	r2, [r4, #20]
   1faac:	mov	r2, #91	; 0x5b
   1fab0:	strb	r2, [r0, r3]
   1fab4:	cmp	r6, #0
   1fab8:	bne	1fb6c <flatcc_json_printer_table_vector_field@@Base+0x224>
   1fabc:	ldrb	r3, [r4, #25]
   1fac0:	cmp	r3, #0
   1fac4:	bne	1fda0 <flatcc_json_printer_table_vector_field@@Base+0x458>
   1fac8:	ldr	r3, [r4, #20]
   1facc:	add	r2, r3, #1
   1fad0:	str	r2, [r4, #20]
   1fad4:	mov	r2, #93	; 0x5d
   1fad8:	strb	r2, [r3]
   1fadc:	add	sp, sp, #28
   1fae0:	ldrd	r4, [sp]
   1fae4:	ldrd	r6, [sp, #8]
   1fae8:	ldrd	r8, [sp, #16]
   1faec:	ldrd	sl, [sp, #24]
   1faf0:	add	sp, sp, #32
   1faf4:	pop	{pc}		; (ldr pc, [sp], #4)
   1faf8:	ldr	r3, [r0, #20]
   1fafc:	add	r2, r3, #1
   1fb00:	str	r2, [r0, #20]
   1fb04:	mov	r2, #10
   1fb08:	strb	r2, [r3]
   1fb0c:	ldrb	r3, [r0, #25]
   1fb10:	ldr	r9, [r0, #32]
   1fb14:	mul	r9, r9, r3
   1fb18:	ldr	r0, [r0, #20]
   1fb1c:	add	r3, r0, r9
   1fb20:	ldr	r2, [r4, #16]
   1fb24:	cmp	r2, r3
   1fb28:	bcs	1fb3c <flatcc_json_printer_table_vector_field@@Base+0x1f4>
   1fb2c:	mov	r1, r9
   1fb30:	mov	r0, r4
   1fb34:	bl	15218 <main@@Base+0x163c>
   1fb38:	b	1f9f8 <flatcc_json_printer_table_vector_field@@Base+0xb0>
   1fb3c:	mov	r2, r9
   1fb40:	mov	r1, #32
   1fb44:	bl	124c4 <memset@plt>
   1fb48:	ldr	r3, [r4, #20]
   1fb4c:	add	r9, r3, r9
   1fb50:	str	r9, [r4, #20]
   1fb54:	b	1f9f8 <flatcc_json_printer_table_vector_field@@Base+0xb0>
   1fb58:	ldr	r2, [sp, #64]	; 0x40
   1fb5c:	mov	r1, r5
   1fb60:	mov	r0, r4
   1fb64:	bl	15108 <main@@Base+0x152c>
   1fb68:	b	1fa48 <flatcc_json_printer_table_vector_field@@Base+0x100>
   1fb6c:	add	r5, r8, #4
   1fb70:	ldr	r3, [r7, #12]
   1fb74:	subs	r2, r3, #1
   1fb78:	beq	1fc0c <flatcc_json_printer_table_vector_field@@Base+0x2c4>
   1fb7c:	ldr	r0, [r8, #4]
   1fb80:	add	r3, r5, r0
   1fb84:	ldr	r1, [r4, #32]
   1fb88:	add	r1, r1, #1
   1fb8c:	str	r1, [r4, #32]
   1fb90:	ldr	r1, [r4, #20]
   1fb94:	add	ip, r1, #1
   1fb98:	str	ip, [r4, #20]
   1fb9c:	mov	ip, #123	; 0x7b
   1fba0:	strb	ip, [r1]
   1fba4:	mov	r1, #0
   1fba8:	str	r1, [sp, #20]
   1fbac:	str	r2, [sp, #16]
   1fbb0:	str	r3, [sp, #4]
   1fbb4:	ldr	r2, [r5, r0]
   1fbb8:	sub	r3, r3, r2
   1fbbc:	str	r3, [sp, #8]
   1fbc0:	ldrh	r3, [r3]
   1fbc4:	str	r3, [sp, #12]
   1fbc8:	add	r1, sp, #4
   1fbcc:	mov	r0, r4
   1fbd0:	ldr	r3, [sp, #68]	; 0x44
   1fbd4:	blx	r3
   1fbd8:	ldrb	r3, [r4, #25]
   1fbdc:	cmp	r3, #0
   1fbe0:	bne	1fc20 <flatcc_json_printer_table_vector_field@@Base+0x2d8>
   1fbe4:	ldr	r3, [r4, #20]
   1fbe8:	add	r2, r3, #1
   1fbec:	str	r2, [r4, #20]
   1fbf0:	mov	r2, #125	; 0x7d
   1fbf4:	strb	r2, [r3]
   1fbf8:	sub	r6, r6, #1
   1fbfc:	mov	r9, #44	; 0x2c
   1fc00:	mov	fp, #123	; 0x7b
   1fc04:	mov	sl, #0
   1fc08:	b	1fcc8 <flatcc_json_printer_table_vector_field@@Base+0x380>
   1fc0c:	ldr	r3, [r4, #36]	; 0x24
   1fc10:	cmp	r3, #0
   1fc14:	moveq	r3, #2
   1fc18:	streq	r3, [r4, #36]	; 0x24
   1fc1c:	b	1fbf8 <flatcc_json_printer_table_vector_field@@Base+0x2b0>
   1fc20:	ldr	r3, [r4, #20]
   1fc24:	add	r2, r3, #1
   1fc28:	str	r2, [r4, #20]
   1fc2c:	mov	r2, #10
   1fc30:	strb	r2, [r3]
   1fc34:	ldr	r8, [r4, #32]
   1fc38:	sub	r8, r8, #1
   1fc3c:	str	r8, [r4, #32]
   1fc40:	ldrb	r3, [r4, #25]
   1fc44:	mul	r8, r8, r3
   1fc48:	ldr	r0, [r4, #20]
   1fc4c:	add	r3, r0, r8
   1fc50:	ldr	r2, [r4, #16]
   1fc54:	cmp	r2, r3
   1fc58:	bcs	1fc6c <flatcc_json_printer_table_vector_field@@Base+0x324>
   1fc5c:	mov	r1, r8
   1fc60:	mov	r0, r4
   1fc64:	bl	15218 <main@@Base+0x163c>
   1fc68:	b	1fbe4 <flatcc_json_printer_table_vector_field@@Base+0x29c>
   1fc6c:	mov	r2, r8
   1fc70:	mov	r1, #32
   1fc74:	bl	124c4 <memset@plt>
   1fc78:	ldr	r3, [r4, #20]
   1fc7c:	add	r8, r3, r8
   1fc80:	str	r8, [r4, #20]
   1fc84:	b	1fbe4 <flatcc_json_printer_table_vector_field@@Base+0x29c>
   1fc88:	ldr	r3, [r4, #36]	; 0x24
   1fc8c:	cmp	r3, #0
   1fc90:	moveq	r3, #2
   1fc94:	streq	r3, [r4, #36]	; 0x24
   1fc98:	b	1fcc8 <flatcc_json_printer_table_vector_field@@Base+0x380>
   1fc9c:	mov	r2, r8
   1fca0:	mov	r1, #32
   1fca4:	bl	124c4 <memset@plt>
   1fca8:	ldr	r3, [r4, #20]
   1fcac:	add	r8, r3, r8
   1fcb0:	str	r8, [r4, #20]
   1fcb4:	ldr	r3, [r4, #20]
   1fcb8:	add	r2, r3, #1
   1fcbc:	str	r2, [r4, #20]
   1fcc0:	mov	r2, #125	; 0x7d
   1fcc4:	strb	r2, [r3]
   1fcc8:	sub	r6, r6, #1
   1fccc:	cmn	r6, #1
   1fcd0:	beq	1fabc <flatcc_json_printer_table_vector_field@@Base+0x174>
   1fcd4:	add	r5, r5, #4
   1fcd8:	ldr	r3, [r4, #20]
   1fcdc:	add	r2, r3, #1
   1fce0:	str	r2, [r4, #20]
   1fce4:	strb	r9, [r3]
   1fce8:	ldr	r3, [r7, #12]
   1fcec:	subs	r3, r3, #1
   1fcf0:	beq	1fc88 <flatcc_json_printer_table_vector_field@@Base+0x340>
   1fcf4:	ldr	r0, [r5]
   1fcf8:	add	r2, r5, r0
   1fcfc:	ldr	r1, [r4, #32]
   1fd00:	add	r1, r1, #1
   1fd04:	str	r1, [r4, #32]
   1fd08:	ldr	r1, [r4, #20]
   1fd0c:	add	ip, r1, #1
   1fd10:	str	ip, [r4, #20]
   1fd14:	strb	fp, [r1]
   1fd18:	str	sl, [sp, #20]
   1fd1c:	str	r3, [sp, #16]
   1fd20:	str	r2, [sp, #4]
   1fd24:	ldr	r3, [r5, r0]
   1fd28:	sub	r3, r2, r3
   1fd2c:	str	r3, [sp, #8]
   1fd30:	ldrh	r3, [r3]
   1fd34:	str	r3, [sp, #12]
   1fd38:	add	r1, sp, #4
   1fd3c:	mov	r0, r4
   1fd40:	ldr	r3, [sp, #68]	; 0x44
   1fd44:	blx	r3
   1fd48:	ldrb	r3, [r4, #25]
   1fd4c:	cmp	r3, #0
   1fd50:	beq	1fcb4 <flatcc_json_printer_table_vector_field@@Base+0x36c>
   1fd54:	ldr	r3, [r4, #20]
   1fd58:	add	r2, r3, #1
   1fd5c:	str	r2, [r4, #20]
   1fd60:	mov	r2, #10
   1fd64:	strb	r2, [r3]
   1fd68:	ldr	r8, [r4, #32]
   1fd6c:	sub	r8, r8, #1
   1fd70:	str	r8, [r4, #32]
   1fd74:	ldrb	r3, [r4, #25]
   1fd78:	mul	r8, r8, r3
   1fd7c:	ldr	r0, [r4, #20]
   1fd80:	add	r3, r0, r8
   1fd84:	ldr	r2, [r4, #16]
   1fd88:	cmp	r2, r3
   1fd8c:	bcs	1fc9c <flatcc_json_printer_table_vector_field@@Base+0x354>
   1fd90:	mov	r1, r8
   1fd94:	mov	r0, r4
   1fd98:	bl	15218 <main@@Base+0x163c>
   1fd9c:	b	1fcb4 <flatcc_json_printer_table_vector_field@@Base+0x36c>
   1fda0:	ldr	r3, [r4, #20]
   1fda4:	add	r2, r3, #1
   1fda8:	str	r2, [r4, #20]
   1fdac:	mov	r2, #10
   1fdb0:	strb	r2, [r3]
   1fdb4:	ldr	r5, [r4, #32]
   1fdb8:	sub	r5, r5, #1
   1fdbc:	str	r5, [r4, #32]
   1fdc0:	ldrb	r3, [r4, #25]
   1fdc4:	mul	r5, r5, r3
   1fdc8:	ldr	r0, [r4, #20]
   1fdcc:	add	r3, r0, r5
   1fdd0:	ldr	r2, [r4, #16]
   1fdd4:	cmp	r2, r3
   1fdd8:	bcs	1fdec <flatcc_json_printer_table_vector_field@@Base+0x4a4>
   1fddc:	mov	r1, r5
   1fde0:	mov	r0, r4
   1fde4:	bl	15218 <main@@Base+0x163c>
   1fde8:	b	1fac8 <flatcc_json_printer_table_vector_field@@Base+0x180>
   1fdec:	mov	r2, r5
   1fdf0:	mov	r1, #32
   1fdf4:	bl	124c4 <memset@plt>
   1fdf8:	ldr	r3, [r4, #20]
   1fdfc:	add	r5, r3, r5
   1fe00:	str	r5, [r4, #20]
   1fe04:	b	1fac8 <flatcc_json_printer_table_vector_field@@Base+0x180>

0001fe08 <flatcc_json_printer_union_vector_field@@Base>:
   1fe08:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1fe0c:	strd	r6, [sp, #8]
   1fe10:	strd	r8, [sp, #16]
   1fe14:	strd	sl, [sp, #24]
   1fe18:	str	lr, [sp, #32]
   1fe1c:	sub	sp, sp, #140	; 0x8c
   1fe20:	mov	r4, r0
   1fe24:	mov	r5, r1
   1fe28:	str	r2, [sp, #12]
   1fe2c:	str	r3, [sp, #8]
   1fe30:	ldr	r6, [sp, #176]	; 0xb0
   1fe34:	add	r3, r2, #1
   1fe38:	lsl	r3, r3, #1
   1fe3c:	ldr	r2, [r1, #8]
   1fe40:	cmp	r3, r2
   1fe44:	movge	r7, #0
   1fe48:	bge	1fe64 <flatcc_json_printer_union_vector_field@@Base+0x5c>
   1fe4c:	ldr	r1, [r1, #4]
   1fe50:	ldrh	r1, [r1, r3]
   1fe54:	cmp	r1, #0
   1fe58:	ldrne	r7, [r5]
   1fe5c:	addne	r7, r7, r1
   1fe60:	moveq	r7, #0
   1fe64:	add	r3, r3, #2
   1fe68:	cmp	r3, r2
   1fe6c:	bge	20134 <flatcc_json_printer_union_vector_field@@Base+0x32c>
   1fe70:	ldr	r2, [r5, #4]
   1fe74:	ldrh	r9, [r2, r3]
   1fe78:	cmp	r9, #0
   1fe7c:	beq	20134 <flatcc_json_printer_union_vector_field@@Base+0x32c>
   1fe80:	ldr	sl, [r5]
   1fe84:	add	fp, sl, r9
   1fe88:	ldr	r3, [r5, #12]
   1fe8c:	str	r3, [sp, #20]
   1fe90:	cmp	r6, #100	; 0x64
   1fe94:	bgt	20144 <flatcc_json_printer_union_vector_field@@Base+0x33c>
   1fe98:	add	r8, sp, #28
   1fe9c:	mov	r2, r6
   1fea0:	ldr	r1, [sp, #8]
   1fea4:	mov	r0, r8
   1fea8:	bl	12428 <memcpy@plt>
   1feac:	add	r2, r8, r6
   1feb0:	movw	r3, #11056	; 0x2b30
   1feb4:	movt	r3, #2
   1feb8:	ldr	r1, [r3]
   1febc:	str	r1, [r8, r6]
   1fec0:	ldrb	r3, [r3, #4]
   1fec4:	strb	r3, [r2, #4]
   1fec8:	cmp	fp, #0
   1fecc:	cmpne	r7, #0
   1fed0:	bne	1fef0 <flatcc_json_printer_union_vector_field@@Base+0xe8>
   1fed4:	add	sp, sp, #140	; 0x8c
   1fed8:	ldrd	r4, [sp]
   1fedc:	ldrd	r6, [sp, #8]
   1fee0:	ldrd	r8, [sp, #16]
   1fee4:	ldrd	sl, [sp, #24]
   1fee8:	add	sp, sp, #32
   1feec:	pop	{pc}		; (ldr pc, [sp], #4)
   1fef0:	ldr	r3, [sp, #180]	; 0xb4
   1fef4:	str	r3, [sp, #4]
   1fef8:	add	r3, r6, #5
   1fefc:	str	r3, [sp]
   1ff00:	add	r3, sp, #28
   1ff04:	ldr	r2, [sp, #12]
   1ff08:	sub	r2, r2, #1
   1ff0c:	mov	r1, r5
   1ff10:	mov	r0, r4
   1ff14:	bl	1d83c <flatcc_json_printer_utype_enum_vector_field@@Base>
   1ff18:	ldr	r3, [r5, #16]
   1ff1c:	add	r2, r3, #1
   1ff20:	str	r2, [r5, #16]
   1ff24:	cmp	r3, #0
   1ff28:	beq	1ff40 <flatcc_json_printer_union_vector_field@@Base+0x138>
   1ff2c:	ldr	r3, [r4, #20]
   1ff30:	add	r2, r3, #1
   1ff34:	str	r2, [r4, #20]
   1ff38:	mov	r2, #44	; 0x2c
   1ff3c:	strb	r2, [r3]
   1ff40:	ldr	r3, [sl, r9]
   1ff44:	add	r5, fp, r3
   1ff48:	ldr	r8, [r7]
   1ff4c:	ldr	r9, [fp, r3]
   1ff50:	mov	r2, r6
   1ff54:	ldr	r1, [sp, #8]
   1ff58:	mov	r0, r4
   1ff5c:	bl	15808 <main@@Base+0x1c2c>
   1ff60:	ldr	r3, [r4, #32]
   1ff64:	add	r3, r3, #1
   1ff68:	str	r3, [r4, #32]
   1ff6c:	ldr	r3, [r4, #20]
   1ff70:	add	r2, r3, #1
   1ff74:	str	r2, [r4, #20]
   1ff78:	mov	r2, #91	; 0x5b
   1ff7c:	strb	r2, [r3]
   1ff80:	cmp	r9, #0
   1ff84:	beq	200a8 <flatcc_json_printer_union_vector_field@@Base+0x2a0>
   1ff88:	add	r7, r7, r8
   1ff8c:	add	r5, r5, #4
   1ff90:	ldrb	r3, [r7, #4]
   1ff94:	cmp	r3, #0
   1ff98:	beq	1ffd0 <flatcc_json_printer_union_vector_field@@Base+0x1c8>
   1ff9c:	strb	r3, [sp, #24]
   1ffa0:	str	r5, [sp, #16]
   1ffa4:	add	r1, sp, #16
   1ffa8:	mov	r0, r4
   1ffac:	ldr	r3, [sp, #184]	; 0xb8
   1ffb0:	blx	r3
   1ffb4:	add	r6, r7, #4
   1ffb8:	add	r9, r9, #3
   1ffbc:	add	r7, r7, r9
   1ffc0:	mov	r8, #44	; 0x2c
   1ffc4:	mov	sl, #110	; 0x6e
   1ffc8:	mov	r9, #117	; 0x75
   1ffcc:	b	20064 <flatcc_json_printer_union_vector_field@@Base+0x25c>
   1ffd0:	ldr	r3, [r4, #20]
   1ffd4:	add	r2, r3, #1
   1ffd8:	str	r2, [r4, #20]
   1ffdc:	mov	r2, #110	; 0x6e
   1ffe0:	strb	r2, [r3]
   1ffe4:	ldr	r3, [r4, #20]
   1ffe8:	add	r2, r3, #1
   1ffec:	str	r2, [r4, #20]
   1fff0:	mov	r2, #117	; 0x75
   1fff4:	strb	r2, [r3]
   1fff8:	ldr	r3, [r4, #20]
   1fffc:	add	r2, r3, #1
   20000:	str	r2, [r4, #20]
   20004:	mov	r2, #108	; 0x6c
   20008:	strb	r2, [r3]
   2000c:	ldr	r3, [r4, #20]
   20010:	add	r1, r3, #1
   20014:	str	r1, [r4, #20]
   20018:	strb	r2, [r3]
   2001c:	b	1ffb4 <flatcc_json_printer_union_vector_field@@Base+0x1ac>
   20020:	ldr	r3, [r4, #20]
   20024:	add	r2, r3, #1
   20028:	str	r2, [r4, #20]
   2002c:	strb	sl, [r3]
   20030:	ldr	r3, [r4, #20]
   20034:	add	r2, r3, #1
   20038:	str	r2, [r4, #20]
   2003c:	strb	r9, [r3]
   20040:	ldr	r3, [r4, #20]
   20044:	add	r2, r3, #1
   20048:	str	r2, [r4, #20]
   2004c:	mov	r2, #108	; 0x6c
   20050:	strb	r2, [r3]
   20054:	ldr	r3, [r4, #20]
   20058:	add	r1, r3, #1
   2005c:	str	r1, [r4, #20]
   20060:	strb	r2, [r3]
   20064:	cmp	r6, r7
   20068:	beq	200a8 <flatcc_json_printer_union_vector_field@@Base+0x2a0>
   2006c:	add	r5, r5, #4
   20070:	ldrb	r2, [r6, #1]!
   20074:	ldr	r3, [r4, #20]
   20078:	add	r1, r3, #1
   2007c:	str	r1, [r4, #20]
   20080:	strb	r8, [r3]
   20084:	cmp	r2, #0
   20088:	beq	20020 <flatcc_json_printer_union_vector_field@@Base+0x218>
   2008c:	strb	r2, [sp, #24]
   20090:	str	r5, [sp, #16]
   20094:	add	r1, sp, #16
   20098:	mov	r0, r4
   2009c:	ldr	r3, [sp, #184]	; 0xb8
   200a0:	blx	r3
   200a4:	b	20064 <flatcc_json_printer_union_vector_field@@Base+0x25c>
   200a8:	ldrb	r3, [r4, #25]
   200ac:	cmp	r3, #0
   200b0:	bne	200cc <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   200b4:	ldr	r3, [r4, #20]
   200b8:	add	r2, r3, #1
   200bc:	str	r2, [r4, #20]
   200c0:	mov	r2, #93	; 0x5d
   200c4:	strb	r2, [r3]
   200c8:	b	1fed4 <flatcc_json_printer_union_vector_field@@Base+0xcc>
   200cc:	ldr	r3, [r4, #20]
   200d0:	add	r2, r3, #1
   200d4:	str	r2, [r4, #20]
   200d8:	mov	r2, #10
   200dc:	strb	r2, [r3]
   200e0:	ldr	r5, [r4, #32]
   200e4:	sub	r5, r5, #1
   200e8:	str	r5, [r4, #32]
   200ec:	ldrb	r3, [r4, #25]
   200f0:	mul	r5, r5, r3
   200f4:	ldr	r0, [r4, #20]
   200f8:	add	r3, r0, r5
   200fc:	ldr	r2, [r4, #16]
   20100:	cmp	r2, r3
   20104:	bcs	20118 <flatcc_json_printer_union_vector_field@@Base+0x310>
   20108:	mov	r1, r5
   2010c:	mov	r0, r4
   20110:	bl	15218 <main@@Base+0x163c>
   20114:	b	200b4 <flatcc_json_printer_union_vector_field@@Base+0x2ac>
   20118:	mov	r2, r5
   2011c:	mov	r1, #32
   20120:	bl	124c4 <memset@plt>
   20124:	ldr	r3, [r4, #20]
   20128:	add	r5, r3, r5
   2012c:	str	r5, [r4, #20]
   20130:	b	200b4 <flatcc_json_printer_union_vector_field@@Base+0x2ac>
   20134:	ldr	r3, [r5, #12]
   20138:	str	r3, [sp, #20]
   2013c:	cmp	r6, #100	; 0x64
   20140:	ble	1fed4 <flatcc_json_printer_union_vector_field@@Base+0xcc>
   20144:	ldr	r3, [r4, #36]	; 0x24
   20148:	cmp	r3, #0
   2014c:	moveq	r3, #1
   20150:	streq	r3, [r4, #36]	; 0x24
   20154:	ldr	r3, [pc, #20]	; 20170 <flatcc_json_printer_union_vector_field@@Base+0x368>
   20158:	movw	r2, #843	; 0x34b
   2015c:	movw	r1, #10632	; 0x2988
   20160:	movt	r1, #2
   20164:	movw	r0, #11028	; 0x2b14
   20168:	movt	r0, #2
   2016c:	bl	1250c <__assert_fail@plt>
   20170:	andeq	r2, r2, r4, asr r8

00020174 <flatcc_json_printer_table_field@@Base>:
   20174:	add	r2, r2, #2
   20178:	lsl	r2, r2, #1
   2017c:	ldr	ip, [r1, #8]
   20180:	cmp	r2, ip
   20184:	bxge	lr
   20188:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2018c:	strd	r6, [sp, #8]
   20190:	strd	r8, [sp, #16]
   20194:	str	sl, [sp, #24]
   20198:	str	lr, [sp, #28]
   2019c:	sub	sp, sp, #24
   201a0:	ldr	ip, [r1, #4]
   201a4:	ldrh	r6, [ip, r2]
   201a8:	cmp	r6, #0
   201ac:	beq	20340 <flatcc_json_printer_table_field@@Base+0x1cc>
   201b0:	ldr	r7, [r1]
   201b4:	adds	r8, r7, r6
   201b8:	beq	20340 <flatcc_json_printer_table_field@@Base+0x1cc>
   201bc:	ldr	r2, [r1, #16]
   201c0:	add	ip, r2, #1
   201c4:	str	ip, [r1, #16]
   201c8:	cmp	r2, #0
   201cc:	beq	201e4 <flatcc_json_printer_table_field@@Base+0x70>
   201d0:	ldr	r2, [r0, #20]
   201d4:	add	ip, r2, #1
   201d8:	str	ip, [r0, #20]
   201dc:	mov	ip, #44	; 0x2c
   201e0:	strb	ip, [r2]
   201e4:	mov	r9, r3
   201e8:	mov	r5, r1
   201ec:	mov	r4, r0
   201f0:	ldrb	r3, [r0, #25]
   201f4:	cmp	r3, #0
   201f8:	bne	2035c <flatcc_json_printer_table_field@@Base+0x1e8>
   201fc:	ldr	r2, [r0, #20]
   20200:	ldr	r3, [r0, #16]
   20204:	cmp	r2, r3
   20208:	bcc	20218 <flatcc_json_printer_table_field@@Base+0xa4>
   2020c:	ldr	r3, [r0, #44]	; 0x2c
   20210:	mov	r1, #0
   20214:	blx	r3
   20218:	ldr	r3, [r4, #20]
   2021c:	mov	r2, #34	; 0x22
   20220:	strb	r2, [r3]
   20224:	ldrb	r3, [r4, #26]
   20228:	ldr	r0, [r4, #20]
   2022c:	cmp	r3, #0
   20230:	addeq	r0, r0, #1
   20234:	str	r0, [r4, #20]
   20238:	ldr	r3, [sp, #56]	; 0x38
   2023c:	add	r3, r0, r3
   20240:	ldr	r2, [r4, #16]
   20244:	cmp	r2, r3
   20248:	bls	203bc <flatcc_json_printer_table_field@@Base+0x248>
   2024c:	ldr	r2, [sp, #56]	; 0x38
   20250:	mov	r1, r9
   20254:	bl	12428 <memcpy@plt>
   20258:	ldr	r3, [r4, #20]
   2025c:	ldr	r2, [sp, #56]	; 0x38
   20260:	add	r3, r3, r2
   20264:	str	r3, [r4, #20]
   20268:	ldr	r3, [r4, #20]
   2026c:	mov	r2, #34	; 0x22
   20270:	strb	r2, [r3]
   20274:	ldrb	r3, [r4, #26]
   20278:	clz	r3, r3
   2027c:	lsr	r3, r3, #5
   20280:	ldr	r1, [r4, #20]
   20284:	add	r2, r1, r3
   20288:	add	r2, r2, #1
   2028c:	str	r2, [r4, #20]
   20290:	mov	r2, #58	; 0x3a
   20294:	strb	r2, [r1, r3]
   20298:	ldr	r3, [r4, #20]
   2029c:	mov	r2, #32
   202a0:	strb	r2, [r3]
   202a4:	ldrb	r0, [r4, #25]
   202a8:	adds	r0, r0, #0
   202ac:	movne	r0, #1
   202b0:	ldr	lr, [r4, #20]
   202b4:	add	r3, lr, r0
   202b8:	str	r3, [r4, #20]
   202bc:	ldr	r2, [r5, #12]
   202c0:	subs	r1, r2, #1
   202c4:	beq	203d0 <flatcc_json_printer_table_field@@Base+0x25c>
   202c8:	ldr	r5, [r7, r6]
   202cc:	add	r2, r8, r5
   202d0:	ldr	ip, [r4, #32]
   202d4:	add	ip, ip, #1
   202d8:	str	ip, [r4, #32]
   202dc:	add	r3, r3, #1
   202e0:	str	r3, [r4, #20]
   202e4:	mov	r3, #123	; 0x7b
   202e8:	strb	r3, [lr, r0]
   202ec:	mov	r3, #0
   202f0:	str	r3, [sp, #20]
   202f4:	str	r1, [sp, #16]
   202f8:	str	r2, [sp, #4]
   202fc:	ldr	r3, [r8, r5]
   20300:	sub	r3, r2, r3
   20304:	str	r3, [sp, #8]
   20308:	ldrh	r3, [r3]
   2030c:	str	r3, [sp, #12]
   20310:	add	r1, sp, #4
   20314:	mov	r0, r4
   20318:	ldr	r3, [sp, #60]	; 0x3c
   2031c:	blx	r3
   20320:	ldrb	r3, [r4, #25]
   20324:	cmp	r3, #0
   20328:	bne	203e4 <flatcc_json_printer_table_field@@Base+0x270>
   2032c:	ldr	r3, [r4, #20]
   20330:	add	r2, r3, #1
   20334:	str	r2, [r4, #20]
   20338:	mov	r2, #125	; 0x7d
   2033c:	strb	r2, [r3]
   20340:	add	sp, sp, #24
   20344:	ldrd	r4, [sp]
   20348:	ldrd	r6, [sp, #8]
   2034c:	ldrd	r8, [sp, #16]
   20350:	ldr	sl, [sp, #24]
   20354:	add	sp, sp, #28
   20358:	pop	{pc}		; (ldr pc, [sp], #4)
   2035c:	ldr	r3, [r0, #20]
   20360:	add	r2, r3, #1
   20364:	str	r2, [r0, #20]
   20368:	mov	r2, #10
   2036c:	strb	r2, [r3]
   20370:	ldrb	r3, [r0, #25]
   20374:	ldr	sl, [r0, #32]
   20378:	mul	sl, sl, r3
   2037c:	ldr	r0, [r0, #20]
   20380:	add	r3, r0, sl
   20384:	ldr	r2, [r4, #16]
   20388:	cmp	r2, r3
   2038c:	bcs	203a0 <flatcc_json_printer_table_field@@Base+0x22c>
   20390:	mov	r1, sl
   20394:	mov	r0, r4
   20398:	bl	15218 <main@@Base+0x163c>
   2039c:	b	20218 <flatcc_json_printer_table_field@@Base+0xa4>
   203a0:	mov	r2, sl
   203a4:	mov	r1, #32
   203a8:	bl	124c4 <memset@plt>
   203ac:	ldr	r3, [r4, #20]
   203b0:	add	sl, r3, sl
   203b4:	str	sl, [r4, #20]
   203b8:	b	20218 <flatcc_json_printer_table_field@@Base+0xa4>
   203bc:	ldr	r2, [sp, #56]	; 0x38
   203c0:	mov	r1, r9
   203c4:	mov	r0, r4
   203c8:	bl	15108 <main@@Base+0x152c>
   203cc:	b	20268 <flatcc_json_printer_table_field@@Base+0xf4>
   203d0:	ldr	r3, [r4, #36]	; 0x24
   203d4:	cmp	r3, #0
   203d8:	moveq	r3, #2
   203dc:	streq	r3, [r4, #36]	; 0x24
   203e0:	b	20340 <flatcc_json_printer_table_field@@Base+0x1cc>
   203e4:	ldr	r3, [r4, #20]
   203e8:	add	r2, r3, #1
   203ec:	str	r2, [r4, #20]
   203f0:	mov	r2, #10
   203f4:	strb	r2, [r3]
   203f8:	ldr	r5, [r4, #32]
   203fc:	sub	r5, r5, #1
   20400:	str	r5, [r4, #32]
   20404:	ldrb	r3, [r4, #25]
   20408:	mul	r5, r5, r3
   2040c:	ldr	r0, [r4, #20]
   20410:	add	r3, r0, r5
   20414:	ldr	r2, [r4, #16]
   20418:	cmp	r2, r3
   2041c:	bcs	20430 <flatcc_json_printer_table_field@@Base+0x2bc>
   20420:	mov	r1, r5
   20424:	mov	r0, r4
   20428:	bl	15218 <main@@Base+0x163c>
   2042c:	b	2032c <flatcc_json_printer_table_field@@Base+0x1b8>
   20430:	mov	r2, r5
   20434:	mov	r1, #32
   20438:	bl	124c4 <memset@plt>
   2043c:	ldr	r3, [r4, #20]
   20440:	add	r5, r3, r5
   20444:	str	r5, [r4, #20]
   20448:	b	2032c <flatcc_json_printer_table_field@@Base+0x1b8>

0002044c <flatcc_json_printer_union_field@@Base>:
   2044c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   20450:	strd	r6, [sp, #8]
   20454:	strd	r8, [sp, #16]
   20458:	str	sl, [sp, #24]
   2045c:	str	lr, [sp, #28]
   20460:	sub	sp, sp, #16
   20464:	ldr	r6, [sp, #48]	; 0x30
   20468:	add	r2, r2, #1
   2046c:	lsl	r2, r2, #1
   20470:	ldr	lr, [r1, #8]
   20474:	cmp	r2, lr
   20478:	movge	ip, #0
   2047c:	bge	20498 <flatcc_json_printer_union_field@@Base+0x4c>
   20480:	ldr	ip, [r1, #4]
   20484:	ldrh	r4, [ip, r2]
   20488:	cmp	r4, #0
   2048c:	ldrne	ip, [r1]
   20490:	addne	ip, ip, r4
   20494:	moveq	ip, #0
   20498:	add	r2, r2, #2
   2049c:	cmp	r2, lr
   204a0:	bge	20618 <flatcc_json_printer_union_field@@Base+0x1cc>
   204a4:	ldr	lr, [r1, #4]
   204a8:	ldrh	r2, [lr, r2]
   204ac:	cmp	r2, #0
   204b0:	beq	20618 <flatcc_json_printer_union_field@@Base+0x1cc>
   204b4:	ldr	r8, [r1]
   204b8:	adds	r8, r8, r2
   204bc:	moveq	r2, #1
   204c0:	movne	r2, #0
   204c4:	cmp	ip, #0
   204c8:	moveq	r2, #1
   204cc:	cmp	r2, #0
   204d0:	bne	20618 <flatcc_json_printer_union_field@@Base+0x1cc>
   204d4:	ldrb	r9, [ip]
   204d8:	ldr	r2, [r1, #16]
   204dc:	add	ip, r2, #1
   204e0:	str	ip, [r1, #16]
   204e4:	cmp	r2, #0
   204e8:	beq	20500 <flatcc_json_printer_union_field@@Base+0xb4>
   204ec:	ldr	r2, [r0, #20]
   204f0:	add	ip, r2, #1
   204f4:	str	ip, [r0, #20]
   204f8:	mov	ip, #44	; 0x2c
   204fc:	strb	ip, [r2]
   20500:	mov	r7, r3
   20504:	mov	r5, r1
   20508:	mov	r4, r0
   2050c:	ldrb	r3, [r0, #25]
   20510:	cmp	r3, #0
   20514:	bne	20634 <flatcc_json_printer_union_field@@Base+0x1e8>
   20518:	ldr	r2, [r0, #20]
   2051c:	ldr	r3, [r0, #16]
   20520:	cmp	r2, r3
   20524:	bcc	20534 <flatcc_json_printer_union_field@@Base+0xe8>
   20528:	ldr	r3, [r0, #44]	; 0x2c
   2052c:	mov	r1, #0
   20530:	blx	r3
   20534:	ldr	r3, [r4, #20]
   20538:	mov	r2, #34	; 0x22
   2053c:	strb	r2, [r3]
   20540:	ldrb	r3, [r4, #26]
   20544:	ldr	r0, [r4, #20]
   20548:	cmp	r3, #0
   2054c:	addeq	r0, r0, #1
   20550:	str	r0, [r4, #20]
   20554:	add	r3, r0, r6
   20558:	ldr	r2, [r4, #16]
   2055c:	cmp	r2, r3
   20560:	bls	20694 <flatcc_json_printer_union_field@@Base+0x248>
   20564:	mov	r2, r6
   20568:	mov	r1, r7
   2056c:	bl	12428 <memcpy@plt>
   20570:	ldr	r3, [r4, #20]
   20574:	add	r3, r3, r6
   20578:	str	r3, [r4, #20]
   2057c:	ldr	r3, [r4, #20]
   20580:	add	r2, r3, #5
   20584:	ldr	r1, [r4, #16]
   20588:	cmp	r1, r2
   2058c:	bhi	206a8 <flatcc_json_printer_union_field@@Base+0x25c>
   20590:	mov	r2, #5
   20594:	movw	r1, #11056	; 0x2b30
   20598:	movt	r1, #2
   2059c:	mov	r0, r4
   205a0:	bl	15108 <main@@Base+0x152c>
   205a4:	ldr	r3, [r4, #20]
   205a8:	mov	r2, #34	; 0x22
   205ac:	strb	r2, [r3]
   205b0:	ldrb	r3, [r4, #26]
   205b4:	clz	r3, r3
   205b8:	lsr	r3, r3, #5
   205bc:	ldr	r1, [r4, #20]
   205c0:	add	r2, r1, r3
   205c4:	add	r2, r2, #1
   205c8:	str	r2, [r4, #20]
   205cc:	mov	r2, #58	; 0x3a
   205d0:	strb	r2, [r1, r3]
   205d4:	ldr	r3, [r4, #20]
   205d8:	mov	r2, #32
   205dc:	strb	r2, [r3]
   205e0:	ldrb	r3, [r4, #25]
   205e4:	ldr	r1, [r4, #20]
   205e8:	cmp	r3, #0
   205ec:	addne	r1, r1, #1
   205f0:	str	r1, [r4, #20]
   205f4:	ldrb	r3, [r4, #27]
   205f8:	cmp	r3, #0
   205fc:	bne	206d0 <flatcc_json_printer_union_field@@Base+0x284>
   20600:	mov	r1, r9
   20604:	mov	r0, r4
   20608:	ldr	r3, [sp, #52]	; 0x34
   2060c:	blx	r3
   20610:	cmp	r9, #0
   20614:	bne	206e8 <flatcc_json_printer_union_field@@Base+0x29c>
   20618:	add	sp, sp, #16
   2061c:	ldrd	r4, [sp]
   20620:	ldrd	r6, [sp, #8]
   20624:	ldrd	r8, [sp, #16]
   20628:	ldr	sl, [sp, #24]
   2062c:	add	sp, sp, #28
   20630:	pop	{pc}		; (ldr pc, [sp], #4)
   20634:	ldr	r3, [r0, #20]
   20638:	add	r2, r3, #1
   2063c:	str	r2, [r0, #20]
   20640:	mov	r2, #10
   20644:	strb	r2, [r3]
   20648:	ldrb	r3, [r0, #25]
   2064c:	ldr	sl, [r0, #32]
   20650:	mul	sl, sl, r3
   20654:	ldr	r0, [r0, #20]
   20658:	add	r3, r0, sl
   2065c:	ldr	r2, [r4, #16]
   20660:	cmp	r2, r3
   20664:	bcs	20678 <flatcc_json_printer_union_field@@Base+0x22c>
   20668:	mov	r1, sl
   2066c:	mov	r0, r4
   20670:	bl	15218 <main@@Base+0x163c>
   20674:	b	20534 <flatcc_json_printer_union_field@@Base+0xe8>
   20678:	mov	r2, sl
   2067c:	mov	r1, #32
   20680:	bl	124c4 <memset@plt>
   20684:	ldr	r3, [r4, #20]
   20688:	add	sl, r3, sl
   2068c:	str	sl, [r4, #20]
   20690:	b	20534 <flatcc_json_printer_union_field@@Base+0xe8>
   20694:	mov	r2, r6
   20698:	mov	r1, r7
   2069c:	mov	r0, r4
   206a0:	bl	15108 <main@@Base+0x152c>
   206a4:	b	2057c <flatcc_json_printer_union_field@@Base+0x130>
   206a8:	movw	r2, #11056	; 0x2b30
   206ac:	movt	r2, #2
   206b0:	ldr	r1, [r2]
   206b4:	str	r1, [r3]
   206b8:	ldrb	r2, [r2, #4]
   206bc:	strb	r2, [r3, #4]
   206c0:	ldr	r3, [r4, #20]
   206c4:	add	r3, r3, #5
   206c8:	str	r3, [r4, #20]
   206cc:	b	205a4 <flatcc_json_printer_union_field@@Base+0x158>
   206d0:	mov	r0, r9
   206d4:	bl	13c90 <main@@Base+0xb4>
   206d8:	ldr	r3, [r4, #20]
   206dc:	add	r0, r3, r0
   206e0:	str	r0, [r4, #20]
   206e4:	b	20610 <flatcc_json_printer_union_field@@Base+0x1c4>
   206e8:	ldr	r3, [r4, #20]
   206ec:	add	r2, r3, #1
   206f0:	str	r2, [r4, #20]
   206f4:	mov	r2, #44	; 0x2c
   206f8:	strb	r2, [r3]
   206fc:	mov	r2, r6
   20700:	mov	r1, r7
   20704:	mov	r0, r4
   20708:	bl	15808 <main@@Base+0x1c2c>
   2070c:	ldr	r3, [r5, #12]
   20710:	str	r3, [sp, #8]
   20714:	strb	r9, [sp, #12]
   20718:	str	r8, [sp, #4]
   2071c:	add	r1, sp, #4
   20720:	mov	r0, r4
   20724:	ldr	r3, [sp, #56]	; 0x38
   20728:	blx	r3
   2072c:	b	20618 <flatcc_json_printer_union_field@@Base+0x1cc>

00020730 <flatcc_json_printer_union_table@@Base>:
   20730:	ldr	r3, [r1, #4]
   20734:	subs	ip, r3, #1
   20738:	beq	207d8 <flatcc_json_printer_union_table@@Base+0xa8>
   2073c:	strd	r4, [sp, #-12]!
   20740:	str	lr, [sp, #8]
   20744:	sub	sp, sp, #28
   20748:	mov	r4, r0
   2074c:	ldr	r1, [r1]
   20750:	ldr	lr, [r1]
   20754:	add	r3, r1, lr
   20758:	ldr	r0, [r0, #32]
   2075c:	add	r0, r0, #1
   20760:	str	r0, [r4, #32]
   20764:	ldr	r0, [r4, #20]
   20768:	add	r5, r0, #1
   2076c:	str	r5, [r4, #20]
   20770:	mov	r5, #123	; 0x7b
   20774:	strb	r5, [r0]
   20778:	mov	r0, #0
   2077c:	str	r0, [sp, #20]
   20780:	str	ip, [sp, #16]
   20784:	str	r3, [sp, #4]
   20788:	ldr	r1, [r1, lr]
   2078c:	sub	r3, r3, r1
   20790:	str	r3, [sp, #8]
   20794:	ldrh	r3, [r3]
   20798:	str	r3, [sp, #12]
   2079c:	add	r1, sp, #4
   207a0:	mov	r0, r4
   207a4:	blx	r2
   207a8:	ldrb	r3, [r4, #25]
   207ac:	cmp	r3, #0
   207b0:	bne	207ec <flatcc_json_printer_union_table@@Base+0xbc>
   207b4:	ldr	r3, [r4, #20]
   207b8:	add	r2, r3, #1
   207bc:	str	r2, [r4, #20]
   207c0:	mov	r2, #125	; 0x7d
   207c4:	strb	r2, [r3]
   207c8:	add	sp, sp, #28
   207cc:	ldrd	r4, [sp]
   207d0:	add	sp, sp, #8
   207d4:	pop	{pc}		; (ldr pc, [sp], #4)
   207d8:	ldr	r3, [r0, #36]	; 0x24
   207dc:	cmp	r3, #0
   207e0:	moveq	r3, #2
   207e4:	streq	r3, [r0, #36]	; 0x24
   207e8:	bx	lr
   207ec:	ldr	r3, [r4, #20]
   207f0:	add	r2, r3, #1
   207f4:	str	r2, [r4, #20]
   207f8:	mov	r2, #10
   207fc:	strb	r2, [r3]
   20800:	ldr	r5, [r4, #32]
   20804:	sub	r5, r5, #1
   20808:	str	r5, [r4, #32]
   2080c:	ldrb	r3, [r4, #25]
   20810:	mul	r5, r5, r3
   20814:	ldr	r0, [r4, #20]
   20818:	add	r3, r0, r5
   2081c:	ldr	r2, [r4, #16]
   20820:	cmp	r2, r3
   20824:	bcs	20838 <flatcc_json_printer_union_table@@Base+0x108>
   20828:	mov	r1, r5
   2082c:	mov	r0, r4
   20830:	bl	15218 <main@@Base+0x163c>
   20834:	b	207b4 <flatcc_json_printer_union_table@@Base+0x84>
   20838:	mov	r2, r5
   2083c:	mov	r1, #32
   20840:	bl	124c4 <memset@plt>
   20844:	ldr	r3, [r4, #20]
   20848:	add	r5, r3, r5
   2084c:	str	r5, [r4, #20]
   20850:	b	207b4 <flatcc_json_printer_union_table@@Base+0x84>

00020854 <flatcc_json_printer_union_struct@@Base>:
   20854:	strd	r4, [sp, #-16]!
   20858:	str	r6, [sp, #8]
   2085c:	str	lr, [sp, #12]
   20860:	mov	r4, r0
   20864:	ldr	r3, [r0, #32]
   20868:	add	r3, r3, #1
   2086c:	str	r3, [r0, #32]
   20870:	ldr	r3, [r0, #20]
   20874:	add	ip, r3, #1
   20878:	str	ip, [r0, #20]
   2087c:	mov	ip, #123	; 0x7b
   20880:	strb	ip, [r3]
   20884:	ldr	r3, [r1]
   20888:	ldr	r1, [r3]
   2088c:	add	r1, r3, r1
   20890:	blx	r2
   20894:	ldrb	r3, [r4, #25]
   20898:	cmp	r3, #0
   2089c:	bne	208c4 <flatcc_json_printer_union_struct@@Base+0x70>
   208a0:	ldr	r3, [r4, #20]
   208a4:	add	r2, r3, #1
   208a8:	str	r2, [r4, #20]
   208ac:	mov	r2, #125	; 0x7d
   208b0:	strb	r2, [r3]
   208b4:	ldrd	r4, [sp]
   208b8:	ldr	r6, [sp, #8]
   208bc:	add	sp, sp, #12
   208c0:	pop	{pc}		; (ldr pc, [sp], #4)
   208c4:	ldr	r3, [r4, #20]
   208c8:	add	r2, r3, #1
   208cc:	str	r2, [r4, #20]
   208d0:	mov	r2, #10
   208d4:	strb	r2, [r3]
   208d8:	ldr	r5, [r4, #32]
   208dc:	sub	r5, r5, #1
   208e0:	str	r5, [r4, #32]
   208e4:	ldrb	r3, [r4, #25]
   208e8:	mul	r5, r5, r3
   208ec:	ldr	r0, [r4, #20]
   208f0:	add	r3, r0, r5
   208f4:	ldr	r2, [r4, #16]
   208f8:	cmp	r2, r3
   208fc:	bcs	20910 <flatcc_json_printer_union_struct@@Base+0xbc>
   20900:	mov	r1, r5
   20904:	mov	r0, r4
   20908:	bl	15218 <main@@Base+0x163c>
   2090c:	b	208a0 <flatcc_json_printer_union_struct@@Base+0x4c>
   20910:	mov	r2, r5
   20914:	mov	r1, #32
   20918:	bl	124c4 <memset@plt>
   2091c:	ldr	r3, [r4, #20]
   20920:	add	r5, r3, r5
   20924:	str	r5, [r4, #20]
   20928:	b	208a0 <flatcc_json_printer_union_struct@@Base+0x4c>

0002092c <flatcc_json_printer_union_string@@Base>:
   2092c:	str	r4, [sp, #-8]!
   20930:	str	lr, [sp, #4]
   20934:	ldr	r3, [r1]
   20938:	ldr	r2, [r3]
   2093c:	add	r1, r3, r2
   20940:	ldr	r2, [r3, r2]
   20944:	add	r1, r1, #4
   20948:	bl	15584 <main@@Base+0x19a8>
   2094c:	ldr	r4, [sp]
   20950:	add	sp, sp, #4
   20954:	pop	{pc}		; (ldr pc, [sp], #4)

00020958 <flatcc_json_printer_embedded_struct_field@@Base>:
   20958:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2095c:	strd	r6, [sp, #8]
   20960:	str	r8, [sp, #16]
   20964:	str	lr, [sp, #20]
   20968:	mov	r4, r0
   2096c:	mov	r6, r2
   20970:	mov	r5, r3
   20974:	ldr	r7, [sp, #28]
   20978:	cmp	r1, #0
   2097c:	beq	20994 <flatcc_json_printer_embedded_struct_field@@Base+0x3c>
   20980:	ldr	r3, [r0, #20]
   20984:	add	r2, r3, #1
   20988:	str	r2, [r0, #20]
   2098c:	mov	r2, #44	; 0x2c
   20990:	strb	r2, [r3]
   20994:	ldrb	r3, [r4, #25]
   20998:	cmp	r3, #0
   2099c:	bne	20ab8 <flatcc_json_printer_embedded_struct_field@@Base+0x160>
   209a0:	ldr	r2, [r4, #20]
   209a4:	ldr	r3, [r4, #16]
   209a8:	cmp	r2, r3
   209ac:	bcc	209c0 <flatcc_json_printer_embedded_struct_field@@Base+0x68>
   209b0:	ldr	r3, [r4, #44]	; 0x2c
   209b4:	mov	r1, #0
   209b8:	mov	r0, r4
   209bc:	blx	r3
   209c0:	ldr	r3, [r4, #20]
   209c4:	mov	r2, #34	; 0x22
   209c8:	strb	r2, [r3]
   209cc:	ldrb	r3, [r4, #26]
   209d0:	ldr	r0, [r4, #20]
   209d4:	cmp	r3, #0
   209d8:	addeq	r0, r0, #1
   209dc:	str	r0, [r4, #20]
   209e0:	add	r3, r0, r7
   209e4:	ldr	r2, [r4, #16]
   209e8:	cmp	r2, r3
   209ec:	bls	20b18 <flatcc_json_printer_embedded_struct_field@@Base+0x1c0>
   209f0:	mov	r2, r7
   209f4:	ldr	r1, [sp, #24]
   209f8:	bl	12428 <memcpy@plt>
   209fc:	ldr	r3, [r4, #20]
   20a00:	add	r7, r3, r7
   20a04:	str	r7, [r4, #20]
   20a08:	ldr	r3, [r4, #20]
   20a0c:	mov	r2, #34	; 0x22
   20a10:	strb	r2, [r3]
   20a14:	ldrb	r3, [r4, #26]
   20a18:	clz	r3, r3
   20a1c:	lsr	r3, r3, #5
   20a20:	ldr	r1, [r4, #20]
   20a24:	add	r2, r1, r3
   20a28:	add	r2, r2, #1
   20a2c:	str	r2, [r4, #20]
   20a30:	mov	r2, #58	; 0x3a
   20a34:	strb	r2, [r1, r3]
   20a38:	ldr	r3, [r4, #20]
   20a3c:	mov	r2, #32
   20a40:	strb	r2, [r3]
   20a44:	ldrb	r3, [r4, #25]
   20a48:	adds	r3, r3, #0
   20a4c:	movne	r3, #1
   20a50:	ldr	r0, [r4, #20]
   20a54:	add	r2, r0, r3
   20a58:	ldr	r1, [r4, #32]
   20a5c:	add	r1, r1, #1
   20a60:	str	r1, [r4, #32]
   20a64:	add	r2, r2, #1
   20a68:	str	r2, [r4, #20]
   20a6c:	mov	r2, #123	; 0x7b
   20a70:	strb	r2, [r0, r3]
   20a74:	add	r1, r6, r5
   20a78:	mov	r0, r4
   20a7c:	ldr	r3, [sp, #32]
   20a80:	blx	r3
   20a84:	ldrb	r3, [r4, #25]
   20a88:	cmp	r3, #0
   20a8c:	bne	20b2c <flatcc_json_printer_embedded_struct_field@@Base+0x1d4>
   20a90:	ldr	r3, [r4, #20]
   20a94:	add	r2, r3, #1
   20a98:	str	r2, [r4, #20]
   20a9c:	mov	r2, #125	; 0x7d
   20aa0:	strb	r2, [r3]
   20aa4:	ldrd	r4, [sp]
   20aa8:	ldrd	r6, [sp, #8]
   20aac:	ldr	r8, [sp, #16]
   20ab0:	add	sp, sp, #20
   20ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   20ab8:	ldr	r3, [r4, #20]
   20abc:	add	r2, r3, #1
   20ac0:	str	r2, [r4, #20]
   20ac4:	mov	r2, #10
   20ac8:	strb	r2, [r3]
   20acc:	ldrb	r3, [r4, #25]
   20ad0:	ldr	r8, [r4, #32]
   20ad4:	mul	r8, r8, r3
   20ad8:	ldr	r0, [r4, #20]
   20adc:	add	r3, r0, r8
   20ae0:	ldr	r2, [r4, #16]
   20ae4:	cmp	r2, r3
   20ae8:	bcs	20afc <flatcc_json_printer_embedded_struct_field@@Base+0x1a4>
   20aec:	mov	r1, r8
   20af0:	mov	r0, r4
   20af4:	bl	15218 <main@@Base+0x163c>
   20af8:	b	209c0 <flatcc_json_printer_embedded_struct_field@@Base+0x68>
   20afc:	mov	r2, r8
   20b00:	mov	r1, #32
   20b04:	bl	124c4 <memset@plt>
   20b08:	ldr	r3, [r4, #20]
   20b0c:	add	r8, r3, r8
   20b10:	str	r8, [r4, #20]
   20b14:	b	209c0 <flatcc_json_printer_embedded_struct_field@@Base+0x68>
   20b18:	mov	r2, r7
   20b1c:	ldr	r1, [sp, #24]
   20b20:	mov	r0, r4
   20b24:	bl	15108 <main@@Base+0x152c>
   20b28:	b	20a08 <flatcc_json_printer_embedded_struct_field@@Base+0xb0>
   20b2c:	ldr	r3, [r4, #20]
   20b30:	add	r2, r3, #1
   20b34:	str	r2, [r4, #20]
   20b38:	mov	r2, #10
   20b3c:	strb	r2, [r3]
   20b40:	ldr	r5, [r4, #32]
   20b44:	sub	r5, r5, #1
   20b48:	str	r5, [r4, #32]
   20b4c:	ldrb	r3, [r4, #25]
   20b50:	mul	r5, r5, r3
   20b54:	ldr	r0, [r4, #20]
   20b58:	add	r3, r0, r5
   20b5c:	ldr	r2, [r4, #16]
   20b60:	cmp	r2, r3
   20b64:	bcs	20b78 <flatcc_json_printer_embedded_struct_field@@Base+0x220>
   20b68:	mov	r1, r5
   20b6c:	mov	r0, r4
   20b70:	bl	15218 <main@@Base+0x163c>
   20b74:	b	20a90 <flatcc_json_printer_embedded_struct_field@@Base+0x138>
   20b78:	mov	r2, r5
   20b7c:	mov	r1, #32
   20b80:	bl	124c4 <memset@plt>
   20b84:	ldr	r3, [r4, #20]
   20b88:	add	r5, r3, r5
   20b8c:	str	r5, [r4, #20]
   20b90:	b	20a90 <flatcc_json_printer_embedded_struct_field@@Base+0x138>

00020b94 <flatcc_json_printer_struct_field@@Base>:
   20b94:	add	r2, r2, #2
   20b98:	lsl	r2, r2, #1
   20b9c:	ldr	ip, [r1, #8]
   20ba0:	cmp	r2, ip
   20ba4:	bxge	lr
   20ba8:	ldr	ip, [r1, #4]
   20bac:	ldrh	r2, [ip, r2]
   20bb0:	cmp	r2, #0
   20bb4:	bxeq	lr
   20bb8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   20bbc:	strd	r6, [sp, #8]
   20bc0:	str	r8, [sp, #16]
   20bc4:	str	lr, [sp, #20]
   20bc8:	ldr	r5, [r1]
   20bcc:	adds	r5, r5, r2
   20bd0:	beq	20d18 <flatcc_json_printer_struct_field@@Base+0x184>
   20bd4:	ldr	r2, [r1, #16]
   20bd8:	add	ip, r2, #1
   20bdc:	str	ip, [r1, #16]
   20be0:	cmp	r2, #0
   20be4:	beq	20bfc <flatcc_json_printer_struct_field@@Base+0x68>
   20be8:	ldr	r2, [r0, #20]
   20bec:	add	r1, r2, #1
   20bf0:	str	r1, [r0, #20]
   20bf4:	mov	r1, #44	; 0x2c
   20bf8:	strb	r1, [r2]
   20bfc:	mov	r6, r3
   20c00:	mov	r4, r0
   20c04:	ldrb	r3, [r0, #25]
   20c08:	cmp	r3, #0
   20c0c:	bne	20d2c <flatcc_json_printer_struct_field@@Base+0x198>
   20c10:	ldr	r2, [r0, #20]
   20c14:	ldr	r3, [r0, #16]
   20c18:	cmp	r2, r3
   20c1c:	bcc	20c2c <flatcc_json_printer_struct_field@@Base+0x98>
   20c20:	ldr	r3, [r0, #44]	; 0x2c
   20c24:	mov	r1, #0
   20c28:	blx	r3
   20c2c:	ldr	r3, [r4, #20]
   20c30:	mov	r2, #34	; 0x22
   20c34:	strb	r2, [r3]
   20c38:	ldrb	r3, [r4, #26]
   20c3c:	ldr	r0, [r4, #20]
   20c40:	cmp	r3, #0
   20c44:	addeq	r0, r0, #1
   20c48:	str	r0, [r4, #20]
   20c4c:	ldr	r3, [sp, #24]
   20c50:	add	r3, r0, r3
   20c54:	ldr	r2, [r4, #16]
   20c58:	cmp	r2, r3
   20c5c:	bls	20d8c <flatcc_json_printer_struct_field@@Base+0x1f8>
   20c60:	ldr	r2, [sp, #24]
   20c64:	mov	r1, r6
   20c68:	bl	12428 <memcpy@plt>
   20c6c:	ldr	r3, [r4, #20]
   20c70:	ldr	r2, [sp, #24]
   20c74:	add	r3, r3, r2
   20c78:	str	r3, [r4, #20]
   20c7c:	ldr	r3, [r4, #20]
   20c80:	mov	r2, #34	; 0x22
   20c84:	strb	r2, [r3]
   20c88:	ldrb	r3, [r4, #26]
   20c8c:	clz	r3, r3
   20c90:	lsr	r3, r3, #5
   20c94:	ldr	r1, [r4, #20]
   20c98:	add	r2, r1, r3
   20c9c:	add	r2, r2, #1
   20ca0:	str	r2, [r4, #20]
   20ca4:	mov	r2, #58	; 0x3a
   20ca8:	strb	r2, [r1, r3]
   20cac:	ldr	r3, [r4, #20]
   20cb0:	mov	r2, #32
   20cb4:	strb	r2, [r3]
   20cb8:	ldrb	r3, [r4, #25]
   20cbc:	adds	r3, r3, #0
   20cc0:	movne	r3, #1
   20cc4:	ldr	r0, [r4, #20]
   20cc8:	add	r2, r0, r3
   20ccc:	ldr	r1, [r4, #32]
   20cd0:	add	r1, r1, #1
   20cd4:	str	r1, [r4, #32]
   20cd8:	add	r2, r2, #1
   20cdc:	str	r2, [r4, #20]
   20ce0:	mov	r2, #123	; 0x7b
   20ce4:	strb	r2, [r0, r3]
   20ce8:	mov	r1, r5
   20cec:	mov	r0, r4
   20cf0:	ldr	r3, [sp, #28]
   20cf4:	blx	r3
   20cf8:	ldrb	r3, [r4, #25]
   20cfc:	cmp	r3, #0
   20d00:	bne	20da0 <flatcc_json_printer_struct_field@@Base+0x20c>
   20d04:	ldr	r3, [r4, #20]
   20d08:	add	r2, r3, #1
   20d0c:	str	r2, [r4, #20]
   20d10:	mov	r2, #125	; 0x7d
   20d14:	strb	r2, [r3]
   20d18:	ldrd	r4, [sp]
   20d1c:	ldrd	r6, [sp, #8]
   20d20:	ldr	r8, [sp, #16]
   20d24:	add	sp, sp, #20
   20d28:	pop	{pc}		; (ldr pc, [sp], #4)
   20d2c:	ldr	r3, [r0, #20]
   20d30:	add	r2, r3, #1
   20d34:	str	r2, [r0, #20]
   20d38:	mov	r2, #10
   20d3c:	strb	r2, [r3]
   20d40:	ldrb	r3, [r0, #25]
   20d44:	ldr	r7, [r0, #32]
   20d48:	mul	r7, r7, r3
   20d4c:	ldr	r0, [r0, #20]
   20d50:	add	r3, r0, r7
   20d54:	ldr	r2, [r4, #16]
   20d58:	cmp	r2, r3
   20d5c:	bcs	20d70 <flatcc_json_printer_struct_field@@Base+0x1dc>
   20d60:	mov	r1, r7
   20d64:	mov	r0, r4
   20d68:	bl	15218 <main@@Base+0x163c>
   20d6c:	b	20c2c <flatcc_json_printer_struct_field@@Base+0x98>
   20d70:	mov	r2, r7
   20d74:	mov	r1, #32
   20d78:	bl	124c4 <memset@plt>
   20d7c:	ldr	r3, [r4, #20]
   20d80:	add	r7, r3, r7
   20d84:	str	r7, [r4, #20]
   20d88:	b	20c2c <flatcc_json_printer_struct_field@@Base+0x98>
   20d8c:	ldr	r2, [sp, #24]
   20d90:	mov	r1, r6
   20d94:	mov	r0, r4
   20d98:	bl	15108 <main@@Base+0x152c>
   20d9c:	b	20c7c <flatcc_json_printer_struct_field@@Base+0xe8>
   20da0:	ldr	r3, [r4, #20]
   20da4:	add	r2, r3, #1
   20da8:	str	r2, [r4, #20]
   20dac:	mov	r2, #10
   20db0:	strb	r2, [r3]
   20db4:	ldr	r5, [r4, #32]
   20db8:	sub	r5, r5, #1
   20dbc:	str	r5, [r4, #32]
   20dc0:	ldrb	r3, [r4, #25]
   20dc4:	mul	r5, r5, r3
   20dc8:	ldr	r0, [r4, #20]
   20dcc:	add	r3, r0, r5
   20dd0:	ldr	r2, [r4, #16]
   20dd4:	cmp	r2, r3
   20dd8:	bcs	20dec <flatcc_json_printer_struct_field@@Base+0x258>
   20ddc:	mov	r1, r5
   20de0:	mov	r0, r4
   20de4:	bl	15218 <main@@Base+0x163c>
   20de8:	b	20d04 <flatcc_json_printer_struct_field@@Base+0x170>
   20dec:	mov	r2, r5
   20df0:	mov	r1, #32
   20df4:	bl	124c4 <memset@plt>
   20df8:	ldr	r3, [r4, #20]
   20dfc:	add	r5, r3, r5
   20e00:	str	r5, [r4, #20]
   20e04:	b	20d04 <flatcc_json_printer_struct_field@@Base+0x170>

00020e08 <flatcc_json_printer_struct_as_root@@Base>:
   20e08:	strd	r4, [sp, #-16]!
   20e0c:	str	r6, [sp, #8]
   20e10:	str	lr, [sp, #12]
   20e14:	mov	r4, r0
   20e18:	mov	r5, r1
   20e1c:	bl	15344 <main@@Base+0x1768>
   20e20:	cmp	r0, #0
   20e24:	beq	20f50 <flatcc_json_printer_struct_as_root@@Base+0x148>
   20e28:	ldr	r3, [r4, #32]
   20e2c:	add	r3, r3, #1
   20e30:	str	r3, [r4, #32]
   20e34:	ldr	r3, [r4, #20]
   20e38:	add	r2, r3, #1
   20e3c:	str	r2, [r4, #20]
   20e40:	mov	r2, #123	; 0x7b
   20e44:	strb	r2, [r3]
   20e48:	ldr	r1, [r5]
   20e4c:	add	r1, r5, r1
   20e50:	mov	r0, r4
   20e54:	ldr	r3, [sp, #16]
   20e58:	blx	r3
   20e5c:	ldrb	r3, [r4, #25]
   20e60:	cmp	r3, #0
   20e64:	bne	20ee8 <flatcc_json_printer_struct_as_root@@Base+0xe0>
   20e68:	ldr	r3, [r4, #20]
   20e6c:	add	r2, r3, #1
   20e70:	str	r2, [r4, #20]
   20e74:	mov	r2, #125	; 0x7d
   20e78:	strb	r2, [r3]
   20e7c:	ldrb	r3, [r4, #25]
   20e80:	cmp	r3, #0
   20e84:	beq	20ea8 <flatcc_json_printer_struct_as_root@@Base+0xa0>
   20e88:	ldr	r3, [r4, #32]
   20e8c:	cmp	r3, #0
   20e90:	bne	20ea8 <flatcc_json_printer_struct_as_root@@Base+0xa0>
   20e94:	ldr	r3, [r4, #20]
   20e98:	add	r2, r3, #1
   20e9c:	str	r2, [r4, #20]
   20ea0:	mov	r2, #10
   20ea4:	strb	r2, [r3]
   20ea8:	ldr	r3, [r4, #44]	; 0x2c
   20eac:	mov	r1, #1
   20eb0:	mov	r0, r4
   20eb4:	blx	r3
   20eb8:	ldr	r3, [r4, #36]	; 0x24
   20ebc:	cmp	r3, #0
   20ec0:	bne	20f58 <flatcc_json_printer_struct_as_root@@Base+0x150>
   20ec4:	ldr	r0, [r4, #20]
   20ec8:	ldr	r3, [r4]
   20ecc:	sub	r0, r0, r3
   20ed0:	ldr	r3, [r4, #12]
   20ed4:	add	r0, r0, r3
   20ed8:	ldrd	r4, [sp]
   20edc:	ldr	r6, [sp, #8]
   20ee0:	add	sp, sp, #12
   20ee4:	pop	{pc}		; (ldr pc, [sp], #4)
   20ee8:	ldr	r3, [r4, #20]
   20eec:	add	r2, r3, #1
   20ef0:	str	r2, [r4, #20]
   20ef4:	mov	r2, #10
   20ef8:	strb	r2, [r3]
   20efc:	ldr	r5, [r4, #32]
   20f00:	sub	r5, r5, #1
   20f04:	str	r5, [r4, #32]
   20f08:	ldrb	r3, [r4, #25]
   20f0c:	mul	r5, r5, r3
   20f10:	ldr	r0, [r4, #20]
   20f14:	add	r3, r0, r5
   20f18:	ldr	r2, [r4, #16]
   20f1c:	cmp	r2, r3
   20f20:	bcs	20f34 <flatcc_json_printer_struct_as_root@@Base+0x12c>
   20f24:	mov	r1, r5
   20f28:	mov	r0, r4
   20f2c:	bl	15218 <main@@Base+0x163c>
   20f30:	b	20e68 <flatcc_json_printer_struct_as_root@@Base+0x60>
   20f34:	mov	r2, r5
   20f38:	mov	r1, #32
   20f3c:	bl	124c4 <memset@plt>
   20f40:	ldr	r3, [r4, #20]
   20f44:	add	r5, r3, r5
   20f48:	str	r5, [r4, #20]
   20f4c:	b	20e68 <flatcc_json_printer_struct_as_root@@Base+0x60>
   20f50:	mvn	r0, #0
   20f54:	b	20ed8 <flatcc_json_printer_struct_as_root@@Base+0xd0>
   20f58:	mvn	r0, #0
   20f5c:	b	20ed8 <flatcc_json_printer_struct_as_root@@Base+0xd0>

00020f60 <flatcc_json_printer_table_as_root@@Base>:
   20f60:	strd	r4, [sp, #-12]!
   20f64:	str	lr, [sp, #8]
   20f68:	sub	sp, sp, #28
   20f6c:	mov	r4, r0
   20f70:	mov	r5, r1
   20f74:	bl	15344 <main@@Base+0x1768>
   20f78:	cmp	r0, #0
   20f7c:	beq	210d4 <flatcc_json_printer_table_as_root@@Base+0x174>
   20f80:	ldr	r1, [r5]
   20f84:	add	r3, r5, r1
   20f88:	ldr	r2, [r4, #32]
   20f8c:	add	r2, r2, #1
   20f90:	str	r2, [r4, #32]
   20f94:	ldr	r2, [r4, #20]
   20f98:	add	r0, r2, #1
   20f9c:	str	r0, [r4, #20]
   20fa0:	mov	r0, #123	; 0x7b
   20fa4:	strb	r0, [r2]
   20fa8:	mov	r2, #0
   20fac:	str	r2, [sp, #20]
   20fb0:	mov	r2, #99	; 0x63
   20fb4:	str	r2, [sp, #16]
   20fb8:	str	r3, [sp, #4]
   20fbc:	ldr	r2, [r5, r1]
   20fc0:	sub	r3, r3, r2
   20fc4:	str	r3, [sp, #8]
   20fc8:	ldrh	r3, [r3]
   20fcc:	str	r3, [sp, #12]
   20fd0:	add	r1, sp, #4
   20fd4:	mov	r0, r4
   20fd8:	ldr	r3, [sp, #40]	; 0x28
   20fdc:	blx	r3
   20fe0:	ldrb	r3, [r4, #25]
   20fe4:	cmp	r3, #0
   20fe8:	bne	2106c <flatcc_json_printer_table_as_root@@Base+0x10c>
   20fec:	ldr	r3, [r4, #20]
   20ff0:	add	r2, r3, #1
   20ff4:	str	r2, [r4, #20]
   20ff8:	mov	r2, #125	; 0x7d
   20ffc:	strb	r2, [r3]
   21000:	ldrb	r3, [r4, #25]
   21004:	cmp	r3, #0
   21008:	beq	2102c <flatcc_json_printer_table_as_root@@Base+0xcc>
   2100c:	ldr	r3, [r4, #32]
   21010:	cmp	r3, #0
   21014:	bne	2102c <flatcc_json_printer_table_as_root@@Base+0xcc>
   21018:	ldr	r3, [r4, #20]
   2101c:	add	r2, r3, #1
   21020:	str	r2, [r4, #20]
   21024:	mov	r2, #10
   21028:	strb	r2, [r3]
   2102c:	ldr	r3, [r4, #44]	; 0x2c
   21030:	mov	r1, #1
   21034:	mov	r0, r4
   21038:	blx	r3
   2103c:	ldr	r3, [r4, #36]	; 0x24
   21040:	cmp	r3, #0
   21044:	bne	210dc <flatcc_json_printer_table_as_root@@Base+0x17c>
   21048:	ldr	r0, [r4, #20]
   2104c:	ldr	r3, [r4]
   21050:	sub	r0, r0, r3
   21054:	ldr	r3, [r4, #12]
   21058:	add	r0, r0, r3
   2105c:	add	sp, sp, #28
   21060:	ldrd	r4, [sp]
   21064:	add	sp, sp, #8
   21068:	pop	{pc}		; (ldr pc, [sp], #4)
   2106c:	ldr	r3, [r4, #20]
   21070:	add	r2, r3, #1
   21074:	str	r2, [r4, #20]
   21078:	mov	r2, #10
   2107c:	strb	r2, [r3]
   21080:	ldr	r5, [r4, #32]
   21084:	sub	r5, r5, #1
   21088:	str	r5, [r4, #32]
   2108c:	ldrb	r3, [r4, #25]
   21090:	mul	r5, r5, r3
   21094:	ldr	r0, [r4, #20]
   21098:	add	r3, r0, r5
   2109c:	ldr	r2, [r4, #16]
   210a0:	cmp	r2, r3
   210a4:	bcs	210b8 <flatcc_json_printer_table_as_root@@Base+0x158>
   210a8:	mov	r1, r5
   210ac:	mov	r0, r4
   210b0:	bl	15218 <main@@Base+0x163c>
   210b4:	b	20fec <flatcc_json_printer_table_as_root@@Base+0x8c>
   210b8:	mov	r2, r5
   210bc:	mov	r1, #32
   210c0:	bl	124c4 <memset@plt>
   210c4:	ldr	r3, [r4, #20]
   210c8:	add	r5, r3, r5
   210cc:	str	r5, [r4, #20]
   210d0:	b	20fec <flatcc_json_printer_table_as_root@@Base+0x8c>
   210d4:	mvn	r0, #0
   210d8:	b	2105c <flatcc_json_printer_table_as_root@@Base+0xfc>
   210dc:	mvn	r0, #0
   210e0:	b	2105c <flatcc_json_printer_table_as_root@@Base+0xfc>

000210e4 <flatcc_json_printer_struct_as_nested_root@@Base>:
   210e4:	add	r2, r2, #2
   210e8:	lsl	r2, r2, #1
   210ec:	ldr	ip, [r1, #8]
   210f0:	cmp	r2, ip
   210f4:	bxge	lr
   210f8:	ldr	ip, [r1, #4]
   210fc:	ldrh	r2, [ip, r2]
   21100:	cmp	r2, #0
   21104:	bxeq	lr
   21108:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2110c:	strd	r6, [sp, #8]
   21110:	strd	r8, [sp, #16]
   21114:	str	sl, [sp, #24]
   21118:	str	lr, [sp, #28]
   2111c:	ldr	ip, [r1]
   21120:	adds	r7, ip, r2
   21124:	beq	211e0 <flatcc_json_printer_struct_as_nested_root@@Base+0xfc>
   21128:	mov	r6, r3
   2112c:	mov	r5, r1
   21130:	mov	r4, r0
   21134:	ldr	r8, [ip, r2]
   21138:	add	r9, r7, r8
   2113c:	ldr	r3, [sp, #36]	; 0x24
   21140:	ldr	r2, [r7, r8]
   21144:	mov	r1, r9
   21148:	bl	15344 <main@@Base+0x1768>
   2114c:	cmp	r0, #0
   21150:	beq	211e0 <flatcc_json_printer_struct_as_nested_root@@Base+0xfc>
   21154:	ldr	r3, [r5, #16]
   21158:	add	r2, r3, #1
   2115c:	str	r2, [r5, #16]
   21160:	cmp	r3, #0
   21164:	beq	2117c <flatcc_json_printer_struct_as_nested_root@@Base+0x98>
   21168:	ldr	r3, [r4, #20]
   2116c:	add	r2, r3, #1
   21170:	str	r2, [r4, #20]
   21174:	mov	r2, #44	; 0x2c
   21178:	strb	r2, [r3]
   2117c:	ldr	r2, [sp, #32]
   21180:	mov	r1, r6
   21184:	mov	r0, r4
   21188:	bl	15808 <main@@Base+0x1c2c>
   2118c:	ldr	r3, [r4, #32]
   21190:	add	r3, r3, #1
   21194:	str	r3, [r4, #32]
   21198:	ldr	r3, [r4, #20]
   2119c:	add	r2, r3, #1
   211a0:	str	r2, [r4, #20]
   211a4:	mov	r2, #123	; 0x7b
   211a8:	strb	r2, [r3]
   211ac:	ldr	r1, [r7, r8]
   211b0:	add	r1, r9, r1
   211b4:	mov	r0, r4
   211b8:	ldr	r3, [sp, #40]	; 0x28
   211bc:	blx	r3
   211c0:	ldrb	r3, [r4, #25]
   211c4:	cmp	r3, #0
   211c8:	bne	211f8 <flatcc_json_printer_struct_as_nested_root@@Base+0x114>
   211cc:	ldr	r3, [r4, #20]
   211d0:	add	r2, r3, #1
   211d4:	str	r2, [r4, #20]
   211d8:	mov	r2, #125	; 0x7d
   211dc:	strb	r2, [r3]
   211e0:	ldrd	r4, [sp]
   211e4:	ldrd	r6, [sp, #8]
   211e8:	ldrd	r8, [sp, #16]
   211ec:	ldr	sl, [sp, #24]
   211f0:	add	sp, sp, #28
   211f4:	pop	{pc}		; (ldr pc, [sp], #4)
   211f8:	ldr	r3, [r4, #20]
   211fc:	add	r2, r3, #1
   21200:	str	r2, [r4, #20]
   21204:	mov	r2, #10
   21208:	strb	r2, [r3]
   2120c:	ldr	r5, [r4, #32]
   21210:	sub	r5, r5, #1
   21214:	str	r5, [r4, #32]
   21218:	ldrb	r3, [r4, #25]
   2121c:	mul	r5, r5, r3
   21220:	ldr	r0, [r4, #20]
   21224:	add	r3, r0, r5
   21228:	ldr	r2, [r4, #16]
   2122c:	cmp	r2, r3
   21230:	bcs	21244 <flatcc_json_printer_struct_as_nested_root@@Base+0x160>
   21234:	mov	r1, r5
   21238:	mov	r0, r4
   2123c:	bl	15218 <main@@Base+0x163c>
   21240:	b	211cc <flatcc_json_printer_struct_as_nested_root@@Base+0xe8>
   21244:	mov	r2, r5
   21248:	mov	r1, #32
   2124c:	bl	124c4 <memset@plt>
   21250:	ldr	r3, [r4, #20]
   21254:	add	r5, r3, r5
   21258:	str	r5, [r4, #20]
   2125c:	b	211cc <flatcc_json_printer_struct_as_nested_root@@Base+0xe8>

00021260 <flatcc_json_printer_table_as_nested_root@@Base>:
   21260:	add	r2, r2, #2
   21264:	lsl	r2, r2, #1
   21268:	ldr	ip, [r1, #8]
   2126c:	cmp	r2, ip
   21270:	bxge	lr
   21274:	ldr	ip, [r1, #4]
   21278:	ldrh	r2, [ip, r2]
   2127c:	cmp	r2, #0
   21280:	bxeq	lr
   21284:	strd	r4, [sp, #-28]!	; 0xffffffe4
   21288:	strd	r6, [sp, #8]
   2128c:	strd	r8, [sp, #16]
   21290:	str	lr, [sp, #24]
   21294:	sub	sp, sp, #28
   21298:	ldr	ip, [r1]
   2129c:	adds	lr, ip, r2
   212a0:	beq	21450 <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   212a4:	mov	r6, r3
   212a8:	mov	r5, r1
   212ac:	mov	r4, r0
   212b0:	ldr	r2, [ip, r2]
   212b4:	add	r8, lr, r2
   212b8:	add	r7, r8, #4
   212bc:	ldr	r3, [sp, #60]	; 0x3c
   212c0:	ldr	r2, [lr, r2]
   212c4:	mov	r1, r7
   212c8:	bl	15344 <main@@Base+0x1768>
   212cc:	cmp	r0, #0
   212d0:	beq	21450 <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   212d4:	ldr	r3, [r5, #16]
   212d8:	add	r2, r3, #1
   212dc:	str	r2, [r5, #16]
   212e0:	cmp	r3, #0
   212e4:	beq	212fc <flatcc_json_printer_table_as_nested_root@@Base+0x9c>
   212e8:	ldr	r3, [r4, #20]
   212ec:	add	r2, r3, #1
   212f0:	str	r2, [r4, #20]
   212f4:	mov	r2, #44	; 0x2c
   212f8:	strb	r2, [r3]
   212fc:	ldrb	r3, [r4, #25]
   21300:	cmp	r3, #0
   21304:	bne	21468 <flatcc_json_printer_table_as_nested_root@@Base+0x208>
   21308:	ldr	r2, [r4, #20]
   2130c:	ldr	r3, [r4, #16]
   21310:	cmp	r2, r3
   21314:	bcc	21328 <flatcc_json_printer_table_as_nested_root@@Base+0xc8>
   21318:	ldr	r3, [r4, #44]	; 0x2c
   2131c:	mov	r1, #0
   21320:	mov	r0, r4
   21324:	blx	r3
   21328:	ldr	r3, [r4, #20]
   2132c:	mov	r2, #34	; 0x22
   21330:	strb	r2, [r3]
   21334:	ldrb	r3, [r4, #26]
   21338:	ldr	r0, [r4, #20]
   2133c:	cmp	r3, #0
   21340:	addeq	r0, r0, #1
   21344:	str	r0, [r4, #20]
   21348:	ldr	r3, [sp, #56]	; 0x38
   2134c:	add	r3, r0, r3
   21350:	ldr	r2, [r4, #16]
   21354:	cmp	r2, r3
   21358:	bls	214c8 <flatcc_json_printer_table_as_nested_root@@Base+0x268>
   2135c:	ldr	r2, [sp, #56]	; 0x38
   21360:	mov	r1, r6
   21364:	bl	12428 <memcpy@plt>
   21368:	ldr	r3, [r4, #20]
   2136c:	ldr	r2, [sp, #56]	; 0x38
   21370:	add	r3, r3, r2
   21374:	str	r3, [r4, #20]
   21378:	ldr	r3, [r4, #20]
   2137c:	mov	r2, #34	; 0x22
   21380:	strb	r2, [r3]
   21384:	ldrb	r3, [r4, #26]
   21388:	clz	r3, r3
   2138c:	lsr	r3, r3, #5
   21390:	ldr	r1, [r4, #20]
   21394:	add	r2, r1, r3
   21398:	add	r2, r2, #1
   2139c:	str	r2, [r4, #20]
   213a0:	mov	r2, #58	; 0x3a
   213a4:	strb	r2, [r1, r3]
   213a8:	ldr	r3, [r4, #20]
   213ac:	mov	r2, #32
   213b0:	strb	r2, [r3]
   213b4:	ldrb	r2, [r4, #25]
   213b8:	adds	r2, r2, #0
   213bc:	movne	r2, #1
   213c0:	ldr	lr, [r4, #20]
   213c4:	add	r1, lr, r2
   213c8:	str	r1, [r4, #20]
   213cc:	ldr	r3, [r5, #12]
   213d0:	subs	r3, r3, #1
   213d4:	beq	214dc <flatcc_json_printer_table_as_nested_root@@Base+0x27c>
   213d8:	ldr	r5, [r8, #4]
   213dc:	add	r0, r7, r5
   213e0:	ldr	ip, [r4, #32]
   213e4:	add	ip, ip, #1
   213e8:	str	ip, [r4, #32]
   213ec:	add	r1, r1, #1
   213f0:	str	r1, [r4, #20]
   213f4:	mov	r1, #123	; 0x7b
   213f8:	strb	r1, [lr, r2]
   213fc:	mov	r2, #0
   21400:	str	r2, [sp, #20]
   21404:	str	r3, [sp, #16]
   21408:	str	r0, [sp, #4]
   2140c:	ldr	r3, [r7, r5]
   21410:	sub	r3, r0, r3
   21414:	str	r3, [sp, #8]
   21418:	ldrh	r3, [r3]
   2141c:	str	r3, [sp, #12]
   21420:	add	r1, sp, #4
   21424:	mov	r0, r4
   21428:	ldr	r3, [sp, #64]	; 0x40
   2142c:	blx	r3
   21430:	ldrb	r3, [r4, #25]
   21434:	cmp	r3, #0
   21438:	bne	214f0 <flatcc_json_printer_table_as_nested_root@@Base+0x290>
   2143c:	ldr	r3, [r4, #20]
   21440:	add	r2, r3, #1
   21444:	str	r2, [r4, #20]
   21448:	mov	r2, #125	; 0x7d
   2144c:	strb	r2, [r3]
   21450:	add	sp, sp, #28
   21454:	ldrd	r4, [sp]
   21458:	ldrd	r6, [sp, #8]
   2145c:	ldrd	r8, [sp, #16]
   21460:	add	sp, sp, #24
   21464:	pop	{pc}		; (ldr pc, [sp], #4)
   21468:	ldr	r3, [r4, #20]
   2146c:	add	r2, r3, #1
   21470:	str	r2, [r4, #20]
   21474:	mov	r2, #10
   21478:	strb	r2, [r3]
   2147c:	ldrb	r3, [r4, #25]
   21480:	ldr	r9, [r4, #32]
   21484:	mul	r9, r9, r3
   21488:	ldr	r0, [r4, #20]
   2148c:	add	r3, r0, r9
   21490:	ldr	r2, [r4, #16]
   21494:	cmp	r2, r3
   21498:	bcs	214ac <flatcc_json_printer_table_as_nested_root@@Base+0x24c>
   2149c:	mov	r1, r9
   214a0:	mov	r0, r4
   214a4:	bl	15218 <main@@Base+0x163c>
   214a8:	b	21328 <flatcc_json_printer_table_as_nested_root@@Base+0xc8>
   214ac:	mov	r2, r9
   214b0:	mov	r1, #32
   214b4:	bl	124c4 <memset@plt>
   214b8:	ldr	r3, [r4, #20]
   214bc:	add	r9, r3, r9
   214c0:	str	r9, [r4, #20]
   214c4:	b	21328 <flatcc_json_printer_table_as_nested_root@@Base+0xc8>
   214c8:	ldr	r2, [sp, #56]	; 0x38
   214cc:	mov	r1, r6
   214d0:	mov	r0, r4
   214d4:	bl	15108 <main@@Base+0x152c>
   214d8:	b	21378 <flatcc_json_printer_table_as_nested_root@@Base+0x118>
   214dc:	ldr	r3, [r4, #36]	; 0x24
   214e0:	cmp	r3, #0
   214e4:	moveq	r3, #2
   214e8:	streq	r3, [r4, #36]	; 0x24
   214ec:	b	21450 <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   214f0:	ldr	r3, [r4, #20]
   214f4:	add	r2, r3, #1
   214f8:	str	r2, [r4, #20]
   214fc:	mov	r2, #10
   21500:	strb	r2, [r3]
   21504:	ldr	r5, [r4, #32]
   21508:	sub	r5, r5, #1
   2150c:	str	r5, [r4, #32]
   21510:	ldrb	r3, [r4, #25]
   21514:	mul	r5, r5, r3
   21518:	ldr	r0, [r4, #20]
   2151c:	add	r3, r0, r5
   21520:	ldr	r2, [r4, #16]
   21524:	cmp	r2, r3
   21528:	bcs	2153c <flatcc_json_printer_table_as_nested_root@@Base+0x2dc>
   2152c:	mov	r1, r5
   21530:	mov	r0, r4
   21534:	bl	15218 <main@@Base+0x163c>
   21538:	b	2143c <flatcc_json_printer_table_as_nested_root@@Base+0x1dc>
   2153c:	mov	r2, r5
   21540:	mov	r1, #32
   21544:	bl	124c4 <memset@plt>
   21548:	ldr	r3, [r4, #20]
   2154c:	add	r5, r3, r5
   21550:	str	r5, [r4, #20]
   21554:	b	2143c <flatcc_json_printer_table_as_nested_root@@Base+0x1dc>

00021558 <flatcc_json_printer_init@@Base>:
   21558:	strd	r4, [sp, #-16]!
   2155c:	str	r6, [sp, #8]
   21560:	str	lr, [sp, #12]
   21564:	mov	r4, r0
   21568:	mov	r5, r1
   2156c:	mov	r2, #48	; 0x30
   21570:	mov	r1, #0
   21574:	bl	124c4 <memset@plt>
   21578:	cmp	r5, #0
   2157c:	beq	215dc <flatcc_json_printer_init@@Base+0x84>
   21580:	str	r5, [r4, #40]	; 0x28
   21584:	movw	r3, #21512	; 0x5408
   21588:	movt	r3, #1
   2158c:	str	r3, [r4, #44]	; 0x2c
   21590:	movw	r0, #16448	; 0x4040
   21594:	bl	12488 <malloc@plt>
   21598:	str	r0, [r4]
   2159c:	cmp	r0, #0
   215a0:	beq	215ec <flatcc_json_printer_init@@Base+0x94>
   215a4:	mov	r3, #1
   215a8:	strb	r3, [r4, #24]
   215ac:	movw	r3, #16448	; 0x4040
   215b0:	str	r3, [r4, #4]
   215b4:	mov	r3, #16384	; 0x4000
   215b8:	str	r3, [r4, #8]
   215bc:	str	r0, [r4, #20]
   215c0:	add	r0, r0, r3
   215c4:	str	r0, [r4, #16]
   215c8:	mov	r0, #0
   215cc:	ldrd	r4, [sp]
   215d0:	ldr	r6, [sp, #8]
   215d4:	add	sp, sp, #12
   215d8:	pop	{pc}		; (ldr pc, [sp], #4)
   215dc:	movw	r3, #12428	; 0x308c
   215e0:	movt	r3, #3
   215e4:	ldr	r5, [r3]
   215e8:	b	21580 <flatcc_json_printer_init@@Base+0x28>
   215ec:	mvn	r0, #0
   215f0:	b	215cc <flatcc_json_printer_init@@Base+0x74>

000215f4 <flatcc_json_printer_init_buffer@@Base>:
   215f4:	strd	r4, [sp, #-16]!
   215f8:	str	r6, [sp, #8]
   215fc:	str	lr, [sp, #12]
   21600:	cmp	r2, #63	; 0x3f
   21604:	bls	21660 <flatcc_json_printer_init_buffer@@Base+0x6c>
   21608:	mov	r4, r0
   2160c:	mov	r6, r1
   21610:	mov	r5, r2
   21614:	mov	r2, #32
   21618:	mov	r1, #0
   2161c:	add	r0, r0, #12
   21620:	bl	124c4 <memset@plt>
   21624:	str	r6, [r4]
   21628:	str	r5, [r4, #4]
   2162c:	sub	r5, r5, #64	; 0x40
   21630:	str	r5, [r4, #8]
   21634:	str	r6, [r4, #20]
   21638:	add	r5, r6, r5
   2163c:	str	r5, [r4, #16]
   21640:	movw	r3, #20408	; 0x4fb8
   21644:	movt	r3, #1
   21648:	str	r3, [r4, #44]	; 0x2c
   2164c:	mov	r0, #0
   21650:	ldrd	r4, [sp]
   21654:	ldr	r6, [sp, #8]
   21658:	add	sp, sp, #12
   2165c:	pop	{pc}		; (ldr pc, [sp], #4)
   21660:	ldr	r3, [pc, #20]	; 2167c <flatcc_json_printer_init_buffer@@Base+0x88>
   21664:	movw	r2, #1165	; 0x48d
   21668:	movw	r1, #10632	; 0x2988
   2166c:	movt	r1, #2
   21670:	movw	r0, #11064	; 0x2b38
   21674:	movt	r0, #2
   21678:	bl	1250c <__assert_fail@plt>
   2167c:	andeq	r2, r2, ip, ror r8

00021680 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   21680:	strd	r4, [sp, #-16]!
   21684:	str	r6, [sp, #8]
   21688:	str	lr, [sp, #12]
   2168c:	mov	r5, r0
   21690:	cmp	r1, #0
   21694:	moveq	r4, #4096	; 0x1000
   21698:	beq	216a8 <flatcc_json_printer_init_dynamic_buffer@@Base+0x28>
   2169c:	cmp	r1, #64	; 0x40
   216a0:	movcs	r4, r1
   216a4:	movcc	r4, #64	; 0x40
   216a8:	mov	r2, #32
   216ac:	mov	r1, #0
   216b0:	add	r0, r5, #12
   216b4:	bl	124c4 <memset@plt>
   216b8:	mov	r0, r4
   216bc:	bl	12488 <malloc@plt>
   216c0:	str	r0, [r5]
   216c4:	mov	r3, #1
   216c8:	strb	r3, [r5, #24]
   216cc:	str	r4, [r5, #4]
   216d0:	sub	r4, r4, #64	; 0x40
   216d4:	str	r4, [r5, #8]
   216d8:	str	r0, [r5, #20]
   216dc:	add	r4, r0, r4
   216e0:	str	r4, [r5, #16]
   216e4:	movw	r3, #21704	; 0x54c8
   216e8:	movt	r3, #1
   216ec:	str	r3, [r5, #44]	; 0x2c
   216f0:	cmp	r0, #0
   216f4:	movne	r0, #0
   216f8:	beq	2170c <flatcc_json_printer_init_dynamic_buffer@@Base+0x8c>
   216fc:	ldrd	r4, [sp]
   21700:	ldr	r6, [sp, #8]
   21704:	add	sp, sp, #12
   21708:	pop	{pc}		; (ldr pc, [sp], #4)
   2170c:	ldr	r3, [r5, #36]	; 0x24
   21710:	cmp	r3, #0
   21714:	moveq	r3, #3
   21718:	streq	r3, [r5, #36]	; 0x24
   2171c:	mvn	r0, #0
   21720:	b	216fc <flatcc_json_printer_init_dynamic_buffer@@Base+0x7c>

00021724 <flatcc_json_printer_get_buffer@@Base>:
   21724:	strd	r4, [sp, #-16]!
   21728:	str	r6, [sp, #8]
   2172c:	str	lr, [sp, #12]
   21730:	mov	r4, r0
   21734:	mov	r5, r1
   21738:	ldr	r3, [r0, #44]	; 0x2c
   2173c:	mov	r1, #0
   21740:	blx	r3
   21744:	cmp	r5, #0
   21748:	beq	2175c <flatcc_json_printer_get_buffer@@Base+0x38>
   2174c:	ldr	r3, [r4, #20]
   21750:	ldr	r2, [r4]
   21754:	sub	r3, r3, r2
   21758:	str	r3, [r5]
   2175c:	ldr	r0, [r4]
   21760:	ldrd	r4, [sp]
   21764:	ldr	r6, [sp, #8]
   21768:	add	sp, sp, #12
   2176c:	pop	{pc}		; (ldr pc, [sp], #4)

00021770 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   21770:	strd	r4, [sp, #-16]!
   21774:	str	r6, [sp, #8]
   21778:	str	lr, [sp, #12]
   2177c:	mov	r5, r0
   21780:	bl	21724 <flatcc_json_printer_get_buffer@@Base>
   21784:	mov	r4, r0
   21788:	mov	r2, #48	; 0x30
   2178c:	mov	r1, #0
   21790:	mov	r0, r5
   21794:	bl	124c4 <memset@plt>
   21798:	mov	r0, r4
   2179c:	ldrd	r4, [sp]
   217a0:	ldr	r6, [sp, #8]
   217a4:	add	sp, sp, #12
   217a8:	pop	{pc}		; (ldr pc, [sp], #4)

000217ac <flatcc_json_printer_clear@@Base>:
   217ac:	str	r4, [sp, #-8]!
   217b0:	str	lr, [sp, #4]
   217b4:	mov	r4, r0
   217b8:	ldrb	r3, [r0, #24]
   217bc:	cmp	r3, #0
   217c0:	beq	217d4 <flatcc_json_printer_clear@@Base+0x28>
   217c4:	ldr	r0, [r0]
   217c8:	cmp	r0, #0
   217cc:	beq	217d4 <flatcc_json_printer_clear@@Base+0x28>
   217d0:	bl	1241c <free@plt>
   217d4:	mov	r2, #48	; 0x30
   217d8:	mov	r1, #0
   217dc:	mov	r0, r4
   217e0:	bl	124c4 <memset@plt>
   217e4:	ldr	r4, [sp]
   217e8:	add	sp, sp, #4
   217ec:	pop	{pc}		; (ldr pc, [sp], #4)
   217f0:	cmp	r3, #0
   217f4:	cmpeq	r2, #0
   217f8:	bne	21810 <flatcc_json_printer_clear@@Base+0x64>
   217fc:	cmp	r1, #0
   21800:	cmpeq	r0, #0
   21804:	mvnne	r1, #0
   21808:	mvnne	r0, #0
   2180c:	b	2182c <flatcc_json_printer_clear@@Base+0x80>
   21810:	sub	sp, sp, #8
   21814:	push	{sp, lr}
   21818:	bl	2183c <flatcc_json_printer_clear@@Base+0x90>
   2181c:	ldr	lr, [sp, #4]
   21820:	add	sp, sp, #8
   21824:	pop	{r2, r3}
   21828:	bx	lr
   2182c:	push	{r1, lr}
   21830:	mov	r0, #8
   21834:	bl	123ec <raise@plt>
   21838:	pop	{r1, pc}
   2183c:	cmp	r1, r3
   21840:	cmpeq	r0, r2
   21844:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21848:	mov	r4, r0
   2184c:	movcc	r0, #0
   21850:	mov	r5, r1
   21854:	ldr	lr, [sp, #36]	; 0x24
   21858:	movcc	r1, r0
   2185c:	bcc	21958 <flatcc_json_printer_clear@@Base+0x1ac>
   21860:	cmp	r3, #0
   21864:	clzeq	ip, r2
   21868:	clzne	ip, r3
   2186c:	addeq	ip, ip, #32
   21870:	cmp	r5, #0
   21874:	clzeq	r1, r4
   21878:	addeq	r1, r1, #32
   2187c:	clzne	r1, r5
   21880:	sub	ip, ip, r1
   21884:	sub	sl, ip, #32
   21888:	lsl	r9, r3, ip
   2188c:	rsb	fp, ip, #32
   21890:	orr	r9, r9, r2, lsl sl
   21894:	orr	r9, r9, r2, lsr fp
   21898:	lsl	r8, r2, ip
   2189c:	cmp	r5, r9
   218a0:	cmpeq	r4, r8
   218a4:	movcc	r0, #0
   218a8:	movcc	r1, r0
   218ac:	bcc	218c8 <flatcc_json_printer_clear@@Base+0x11c>
   218b0:	mov	r0, #1
   218b4:	subs	r4, r4, r8
   218b8:	lsl	r1, r0, sl
   218bc:	orr	r1, r1, r0, lsr fp
   218c0:	lsl	r0, r0, ip
   218c4:	sbc	r5, r5, r9
   218c8:	cmp	ip, #0
   218cc:	beq	21958 <flatcc_json_printer_clear@@Base+0x1ac>
   218d0:	lsr	r6, r8, #1
   218d4:	orr	r6, r6, r9, lsl #31
   218d8:	lsr	r7, r9, #1
   218dc:	mov	r2, ip
   218e0:	b	21904 <flatcc_json_printer_clear@@Base+0x158>
   218e4:	subs	r3, r4, r6
   218e8:	sbc	r8, r5, r7
   218ec:	adds	r3, r3, r3
   218f0:	adc	r8, r8, r8
   218f4:	adds	r4, r3, #1
   218f8:	adc	r5, r8, #0
   218fc:	subs	r2, r2, #1
   21900:	beq	21920 <flatcc_json_printer_clear@@Base+0x174>
   21904:	cmp	r5, r7
   21908:	cmpeq	r4, r6
   2190c:	bcs	218e4 <flatcc_json_printer_clear@@Base+0x138>
   21910:	adds	r4, r4, r4
   21914:	adc	r5, r5, r5
   21918:	subs	r2, r2, #1
   2191c:	bne	21904 <flatcc_json_printer_clear@@Base+0x158>
   21920:	lsr	r3, r4, ip
   21924:	orr	r3, r3, r5, lsl fp
   21928:	lsr	r2, r5, ip
   2192c:	orr	r3, r3, r5, lsr sl
   21930:	adds	r0, r0, r4
   21934:	mov	r4, r3
   21938:	lsl	r3, r2, ip
   2193c:	orr	r3, r3, r4, lsl sl
   21940:	lsl	ip, r4, ip
   21944:	orr	r3, r3, r4, lsr fp
   21948:	adc	r1, r1, r5
   2194c:	subs	r0, r0, ip
   21950:	mov	r5, r2
   21954:	sbc	r1, r1, r3
   21958:	cmp	lr, #0
   2195c:	strdne	r4, [lr]
   21960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00021964 <__libc_csu_init@@Base>:
   21964:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21968:	mov	r7, r0
   2196c:	ldr	r6, [pc, #72]	; 219bc <__libc_csu_init@@Base+0x58>
   21970:	ldr	r5, [pc, #72]	; 219c0 <__libc_csu_init@@Base+0x5c>
   21974:	add	r6, pc, r6
   21978:	add	r5, pc, r5
   2197c:	sub	r6, r6, r5
   21980:	mov	r8, r1
   21984:	mov	r9, r2
   21988:	bl	123cc <raise@plt-0x20>
   2198c:	asrs	r6, r6, #2
   21990:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   21994:	mov	r4, #0
   21998:	add	r4, r4, #1
   2199c:	ldr	r3, [r5], #4
   219a0:	mov	r2, r9
   219a4:	mov	r1, r8
   219a8:	mov	r0, r7
   219ac:	blx	r3
   219b0:	cmp	r6, r4
   219b4:	bne	21998 <__libc_csu_init@@Base+0x34>
   219b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   219bc:	muleq	r1, r8, r5
   219c0:	muleq	r1, r0, r5

000219c4 <__libc_csu_fini@@Base>:
   219c4:	bx	lr

Disassembly of section .fini:

000219c8 <.fini>:
   219c8:	push	{r3, lr}
   219cc:	pop	{r3, pc}
