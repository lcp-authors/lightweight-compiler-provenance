
../repos/sgerbino-table-2fdd8d0/bin/table_version_test:     file format elf32-littlearm


Disassembly of section .init:

00011a74 <.init>:
   11a74:	push	{r3, lr}
   11a78:	bl	11bc8 <_start@@Base+0x3c>
   11a7c:	pop	{r3, pc}

Disassembly of section .plt:

00011a80 <raise@plt-0x14>:
   11a80:	push	{lr}		; (str lr, [sp, #-4]!)
   11a84:	ldr	lr, [pc, #4]	; 11a90 <raise@plt-0x4>
   11a88:	add	lr, pc, lr
   11a8c:	ldr	pc, [lr, #8]!
   11a90:	andeq	r4, r1, r0, ror r5

00011a94 <raise@plt>:
   11a94:	add	ip, pc, #0, 12
   11a98:	add	ip, ip, #20, 20	; 0x14000
   11a9c:	ldr	pc, [ip, #1392]!	; 0x570

00011aa0 <strcmp@plt>:
   11aa0:	add	ip, pc, #0, 12
   11aa4:	add	ip, ip, #20, 20	; 0x14000
   11aa8:	ldr	pc, [ip, #1384]!	; 0x568

00011aac <printf@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #20, 20	; 0x14000
   11ab4:	ldr	pc, [ip, #1376]!	; 0x560

00011ab8 <free@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #20, 20	; 0x14000
   11ac0:	ldr	pc, [ip, #1368]!	; 0x558

00011ac4 <realloc@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #20, 20	; 0x14000
   11acc:	ldr	pc, [ip, #1360]!	; 0x550

00011ad0 <strcpy@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #20, 20	; 0x14000
   11ad8:	ldr	pc, [ip, #1352]!	; 0x548

00011adc <malloc@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #20, 20	; 0x14000
   11ae4:	ldr	pc, [ip, #1344]!	; 0x540

00011ae8 <__libc_start_main@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #20, 20	; 0x14000
   11af0:	ldr	pc, [ip, #1336]!	; 0x538

00011af4 <__gmon_start__@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #20, 20	; 0x14000
   11afc:	ldr	pc, [ip, #1328]!	; 0x530

00011b00 <strlen@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #20, 20	; 0x14000
   11b08:	ldr	pc, [ip, #1320]!	; 0x528

00011b0c <snprintf@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #20, 20	; 0x14000
   11b14:	ldr	pc, [ip, #1312]!	; 0x520

00011b18 <__isoc99_sscanf@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #20, 20	; 0x14000
   11b20:	ldr	pc, [ip, #1304]!	; 0x518

00011b24 <abort@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #20, 20	; 0x14000
   11b2c:	ldr	pc, [ip, #1296]!	; 0x510

Disassembly of section .text:

00011b30 <main@@Base>:
   11b30:	push	{r4, lr}
   11b34:	bl	12350 <table_get_major_version@@Base>
   11b38:	mov	r1, r0
   11b3c:	ldr	r0, [pc, #56]	; 11b7c <main@@Base+0x4c>
   11b40:	bl	11aac <printf@plt>
   11b44:	bl	12358 <table_get_minor_version@@Base>
   11b48:	mov	r1, r0
   11b4c:	ldr	r0, [pc, #44]	; 11b80 <main@@Base+0x50>
   11b50:	bl	11aac <printf@plt>
   11b54:	bl	12360 <table_get_patch_version@@Base>
   11b58:	mov	r1, r0
   11b5c:	ldr	r0, [pc, #32]	; 11b84 <main@@Base+0x54>
   11b60:	bl	11aac <printf@plt>
   11b64:	bl	12368 <table_get_version@@Base>
   11b68:	mov	r1, r0
   11b6c:	ldr	r0, [pc, #20]	; 11b88 <main@@Base+0x58>
   11b70:	bl	11aac <printf@plt>
   11b74:	mov	r0, #0
   11b78:	pop	{r4, pc}
   11b7c:	strheq	r5, [r1], -r4
   11b80:	ldrdeq	r5, [r1], -r0
   11b84:	andeq	r5, r1, ip, ror #1
   11b88:	andeq	r5, r1, r8, lsl #2

00011b8c <_start@@Base>:
   11b8c:	mov	fp, #0
   11b90:	mov	lr, #0
   11b94:	pop	{r1}		; (ldr r1, [sp], #4)
   11b98:	mov	r2, sp
   11b9c:	push	{r2}		; (str r2, [sp, #-4]!)
   11ba0:	push	{r0}		; (str r0, [sp, #-4]!)
   11ba4:	ldr	ip, [pc, #16]	; 11bbc <_start@@Base+0x30>
   11ba8:	push	{ip}		; (str ip, [sp, #-4]!)
   11bac:	ldr	r0, [pc, #12]	; 11bc0 <_start@@Base+0x34>
   11bb0:	ldr	r3, [pc, #12]	; 11bc4 <_start@@Base+0x38>
   11bb4:	bl	11ae8 <__libc_start_main@plt>
   11bb8:	bl	11b24 <abort@plt>
   11bbc:	andeq	r5, r1, r4, lsr #1
   11bc0:	andeq	r1, r1, r0, lsr fp
   11bc4:	andeq	r5, r1, r4, asr #32
   11bc8:	ldr	r3, [pc, #20]	; 11be4 <_start@@Base+0x58>
   11bcc:	ldr	r2, [pc, #20]	; 11be8 <_start@@Base+0x5c>
   11bd0:	add	r3, pc, r3
   11bd4:	ldr	r2, [r3, r2]
   11bd8:	cmp	r2, #0
   11bdc:	bxeq	lr
   11be0:	b	11af4 <__gmon_start__@plt>
   11be4:	andeq	r4, r1, r8, lsr #8
   11be8:	andeq	r0, r0, r0, asr #32
   11bec:	ldr	r3, [pc, #28]	; 11c10 <_start@@Base+0x84>
   11bf0:	ldr	r0, [pc, #28]	; 11c14 <_start@@Base+0x88>
   11bf4:	sub	r3, r3, r0
   11bf8:	cmp	r3, #6
   11bfc:	bxls	lr
   11c00:	ldr	r3, [pc, #16]	; 11c18 <_start@@Base+0x8c>
   11c04:	cmp	r3, #0
   11c08:	bxeq	lr
   11c0c:	bx	r3
   11c10:	andeq	r6, r2, pc, asr #32
   11c14:	andeq	r6, r2, ip, asr #32
   11c18:	andeq	r0, r0, r0
   11c1c:	ldr	r1, [pc, #36]	; 11c48 <_start@@Base+0xbc>
   11c20:	ldr	r0, [pc, #36]	; 11c4c <_start@@Base+0xc0>
   11c24:	sub	r1, r1, r0
   11c28:	asr	r1, r1, #2
   11c2c:	add	r1, r1, r1, lsr #31
   11c30:	asrs	r1, r1, #1
   11c34:	bxeq	lr
   11c38:	ldr	r3, [pc, #16]	; 11c50 <_start@@Base+0xc4>
   11c3c:	cmp	r3, #0
   11c40:	bxeq	lr
   11c44:	bx	r3
   11c48:	andeq	r6, r2, ip, asr #32
   11c4c:	andeq	r6, r2, ip, asr #32
   11c50:	andeq	r0, r0, r0
   11c54:	push	{r4, lr}
   11c58:	ldr	r4, [pc, #24]	; 11c78 <_start@@Base+0xec>
   11c5c:	ldrb	r3, [r4]
   11c60:	cmp	r3, #0
   11c64:	popne	{r4, pc}
   11c68:	bl	11bec <_start@@Base+0x60>
   11c6c:	mov	r3, #1
   11c70:	strb	r3, [r4]
   11c74:	pop	{r4, pc}
   11c78:	andeq	r6, r2, ip, asr #32
   11c7c:	ldr	r0, [pc, #40]	; 11cac <_start@@Base+0x120>
   11c80:	ldr	r3, [r0]
   11c84:	cmp	r3, #0
   11c88:	bne	11c90 <_start@@Base+0x104>
   11c8c:	b	11c1c <_start@@Base+0x90>
   11c90:	ldr	r3, [pc, #24]	; 11cb0 <_start@@Base+0x124>
   11c94:	cmp	r3, #0
   11c98:	beq	11c8c <_start@@Base+0x100>
   11c9c:	push	{r4, lr}
   11ca0:	blx	r3
   11ca4:	pop	{r4, lr}
   11ca8:	b	11c1c <_start@@Base+0x90>
   11cac:	andeq	r5, r2, r4, lsl pc
   11cb0:	andeq	r0, r0, r0

00011cb4 <table_new@@Base>:
   11cb4:	push	{r4, lr}
   11cb8:	mov	r0, #56	; 0x38
   11cbc:	bl	11adc <malloc@plt>
   11cc0:	mov	r2, #0
   11cc4:	mov	r1, #10
   11cc8:	mov	ip, #20
   11ccc:	str	ip, [r0, #24]
   11cd0:	str	r2, [r0]
   11cd4:	str	r2, [r0, #4]
   11cd8:	str	r2, [r0, #12]
   11cdc:	str	r2, [r0, #16]
   11ce0:	str	r2, [r0, #20]
   11ce4:	str	r2, [r0, #28]
   11ce8:	str	r2, [r0, #36]	; 0x24
   11cec:	str	r2, [r0, #40]	; 0x28
   11cf0:	str	r2, [r0, #44]	; 0x2c
   11cf4:	str	r2, [r0, #32]
   11cf8:	str	r2, [r0, #52]	; 0x34
   11cfc:	str	r1, [r0, #8]
   11d00:	str	r1, [r0, #48]	; 0x30
   11d04:	pop	{r4, pc}

00011d08 <table_init@@Base>:
   11d08:	mov	r3, #0
   11d0c:	mov	r2, #10
   11d10:	mov	r1, #20
   11d14:	str	r1, [r0, #24]
   11d18:	str	r3, [r0]
   11d1c:	str	r3, [r0, #4]
   11d20:	str	r3, [r0, #12]
   11d24:	str	r3, [r0, #16]
   11d28:	str	r3, [r0, #20]
   11d2c:	str	r3, [r0, #28]
   11d30:	str	r3, [r0, #36]	; 0x24
   11d34:	str	r3, [r0, #40]	; 0x28
   11d38:	str	r3, [r0, #44]	; 0x2c
   11d3c:	str	r3, [r0, #32]
   11d40:	str	r3, [r0, #52]	; 0x34
   11d44:	str	r2, [r0, #8]
   11d48:	str	r2, [r0, #48]	; 0x30
   11d4c:	bx	lr

00011d50 <table_destroy@@Base>:
   11d50:	push	{r4, r5, r6, lr}
   11d54:	subs	r5, r0, #0
   11d58:	popeq	{r4, r5, r6, pc}
   11d5c:	mvn	r2, #0
   11d60:	mov	r1, r2
   11d64:	mov	r3, #64	; 0x40
   11d68:	bl	125b8 <table_notify@@Base>
   11d6c:	mov	r0, r5
   11d70:	bl	132b0 <table_get_row_length@@Base>
   11d74:	subs	r6, r0, #0
   11d78:	movgt	r4, #0
   11d7c:	ble	11d98 <table_destroy@@Base+0x48>
   11d80:	mov	r1, r4
   11d84:	mov	r0, r5
   11d88:	add	r4, r4, #1
   11d8c:	bl	1325c <table_row_destroy@@Base>
   11d90:	cmp	r6, r4
   11d94:	bne	11d80 <table_destroy@@Base+0x30>
   11d98:	ldr	r0, [r5, #16]
   11d9c:	cmp	r0, #0
   11da0:	beq	11da8 <table_destroy@@Base+0x58>
   11da4:	bl	11ab8 <free@plt>
   11da8:	mov	r0, r5
   11dac:	bl	126a8 <table_get_column_length@@Base>
   11db0:	subs	r6, r0, #0
   11db4:	movgt	r4, #0
   11db8:	ble	11dd4 <table_destroy@@Base+0x84>
   11dbc:	mov	r1, r4
   11dc0:	mov	r0, r5
   11dc4:	add	r4, r4, #1
   11dc8:	bl	12690 <table_column_destroy@@Base>
   11dcc:	cmp	r6, r4
   11dd0:	bne	11dbc <table_destroy@@Base+0x6c>
   11dd4:	ldr	r0, [r5]
   11dd8:	cmp	r0, #0
   11ddc:	beq	11de4 <table_destroy@@Base+0x94>
   11de0:	bl	11ab8 <free@plt>
   11de4:	ldr	r0, [r5, #36]	; 0x24
   11de8:	cmp	r0, #0
   11dec:	beq	11df4 <table_destroy@@Base+0xa4>
   11df0:	bl	11ab8 <free@plt>
   11df4:	ldr	r0, [r5, #40]	; 0x28
   11df8:	cmp	r0, #0
   11dfc:	beq	11e04 <table_destroy@@Base+0xb4>
   11e00:	bl	11ab8 <free@plt>
   11e04:	ldr	r0, [r5, #44]	; 0x2c
   11e08:	cmp	r0, #0
   11e0c:	popeq	{r4, r5, r6, pc}
   11e10:	pop	{r4, r5, r6, lr}
   11e14:	b	11ab8 <free@plt>

00011e18 <table_delete@@Base>:
   11e18:	push	{r4, lr}
   11e1c:	mov	r4, r0
   11e20:	bl	11d50 <table_destroy@@Base>
   11e24:	mov	r0, r4
   11e28:	pop	{r4, lr}
   11e2c:	b	11ab8 <free@plt>

00011e30 <table_dupe@@Base>:
   11e30:	push	{r4, r5, r6, r7, r8, r9, lr}
   11e34:	sub	sp, sp, #20
   11e38:	mov	r6, r0
   11e3c:	bl	132b0 <table_get_row_length@@Base>
   11e40:	mov	r4, #0
   11e44:	mov	r9, r0
   11e48:	mov	r0, r6
   11e4c:	bl	126a8 <table_get_column_length@@Base>
   11e50:	mov	r8, r0
   11e54:	mov	r0, #56	; 0x38
   11e58:	bl	11adc <malloc@plt>
   11e5c:	mov	r3, #10
   11e60:	mov	r2, #20
   11e64:	cmp	r8, #0
   11e68:	mov	r7, r0
   11e6c:	str	r2, [r0, #24]
   11e70:	str	r4, [r0]
   11e74:	str	r4, [r0, #4]
   11e78:	str	r4, [r0, #12]
   11e7c:	str	r4, [r0, #16]
   11e80:	str	r4, [r0, #20]
   11e84:	str	r4, [r0, #28]
   11e88:	str	r4, [r0, #36]	; 0x24
   11e8c:	str	r4, [r0, #40]	; 0x28
   11e90:	str	r4, [r0, #44]	; 0x2c
   11e94:	str	r4, [r0, #32]
   11e98:	str	r4, [r0, #52]	; 0x34
   11e9c:	str	r3, [r0, #8]
   11ea0:	str	r3, [r0, #48]	; 0x30
   11ea4:	ble	11ee0 <table_dupe@@Base+0xb0>
   11ea8:	mov	r1, r4
   11eac:	mov	r0, r6
   11eb0:	bl	129e4 <table_get_column_name@@Base>
   11eb4:	mov	r1, r4
   11eb8:	add	r4, r4, #1
   11ebc:	mov	r5, r0
   11ec0:	mov	r0, r6
   11ec4:	bl	12718 <table_get_column_data_type@@Base>
   11ec8:	mov	r1, r5
   11ecc:	mov	r2, r0
   11ed0:	mov	r0, r7
   11ed4:	bl	1272c <table_add_column@@Base>
   11ed8:	cmp	r8, r4
   11edc:	bne	11ea8 <table_dupe@@Base+0x78>
   11ee0:	cmp	r9, #0
   11ee4:	movgt	r5, #0
   11ee8:	ble	11fb8 <table_dupe@@Base+0x188>
   11eec:	mov	r0, r7
   11ef0:	bl	132b8 <table_add_row@@Base>
   11ef4:	cmp	r8, #0
   11ef8:	movgt	r4, #0
   11efc:	ble	11fac <table_dupe@@Base+0x17c>
   11f00:	mov	r1, r4
   11f04:	mov	r0, r6
   11f08:	bl	12718 <table_get_column_data_type@@Base>
   11f0c:	cmp	r0, #23
   11f10:	ldrls	pc, [pc, r0, lsl #2]
   11f14:	b	11fa0 <table_dupe@@Base+0x170>
   11f18:	andeq	r2, r1, r4, lsl r0
   11f1c:	andeq	r2, r1, r8, lsl #5
   11f20:	andeq	r2, r1, r0, ror #4
   11f24:	andeq	r2, r1, r8, lsr r2
   11f28:	andeq	r2, r1, r0, lsl r2
   11f2c:	andeq	r2, r1, r8, lsr #6
   11f30:	andeq	r2, r1, r0, lsl #6
   11f34:	ldrdeq	r2, [r1], -r8
   11f38:			; <UNDEFINED> instruction: 0x000122b0
   11f3c:	andeq	r2, r1, r8, ror #3
   11f40:	andeq	r2, r1, r0, asr #3
   11f44:	muleq	r1, r8, r1
   11f48:	andeq	r2, r1, r0, ror r1
   11f4c:	andeq	r2, r1, r8, asr #2
   11f50:	andeq	r2, r1, r0, lsr #2
   11f54:	strdeq	r2, [r1], -r8
   11f58:	ldrdeq	r2, [r1], -r4
   11f5c:	strheq	r2, [r1], -r0
   11f60:	andeq	r2, r1, ip, lsl #1
   11f64:	andeq	r2, r1, r4, rrx
   11f68:	andeq	r2, r1, ip, lsr r0
   11f6c:	andeq	r1, r1, ip, ror #31
   11f70:	andeq	r1, r1, r4, asr #31
   11f74:	andeq	r1, r1, r8, ror pc
   11f78:	mov	r2, r4
   11f7c:	mov	r1, r5
   11f80:	mov	r0, r6
   11f84:	bl	1322c <table_get_ptr@@Base>
   11f88:	add	r3, sp, #12
   11f8c:	mov	r2, r4
   11f90:	mov	r1, r5
   11f94:	str	r0, [sp, #12]
   11f98:	mov	r0, r7
   11f9c:	bl	1435c <table_set_ptr@@Base>
   11fa0:	add	r4, r4, #1
   11fa4:	cmp	r8, r4
   11fa8:	bne	11f00 <table_dupe@@Base+0xd0>
   11fac:	add	r5, r5, #1
   11fb0:	cmp	r9, r5
   11fb4:	bne	11eec <table_dupe@@Base+0xbc>
   11fb8:	mov	r0, r7
   11fbc:	add	sp, sp, #20
   11fc0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11fc4:	mov	r2, r4
   11fc8:	mov	r1, r5
   11fcc:	mov	r0, r6
   11fd0:	bl	13064 <table_get_bool@@Base>
   11fd4:	mov	r2, r4
   11fd8:	mov	r1, r5
   11fdc:	mov	r3, r0
   11fe0:	mov	r0, r7
   11fe4:	bl	137d0 <table_set_bool@@Base>
   11fe8:	b	11fa0 <table_dupe@@Base+0x170>
   11fec:	mov	r2, r4
   11ff0:	mov	r1, r5
   11ff4:	mov	r0, r6
   11ff8:	bl	1321c <table_get_string@@Base>
   11ffc:	mov	r2, r4
   12000:	mov	r1, r5
   12004:	mov	r3, r0
   12008:	mov	r0, r7
   1200c:	bl	141e4 <table_set_string@@Base>
   12010:	b	11fa0 <table_dupe@@Base+0x170>
   12014:	mov	r2, r4
   12018:	mov	r1, r5
   1201c:	mov	r0, r6
   12020:	bl	13078 <table_get_int@@Base>
   12024:	mov	r2, r4
   12028:	mov	r1, r5
   1202c:	mov	r3, r0
   12030:	mov	r0, r7
   12034:	bl	1384c <table_set_int@@Base>
   12038:	b	11fa0 <table_dupe@@Base+0x170>
   1203c:	mov	r2, r4
   12040:	mov	r1, r5
   12044:	mov	r0, r6
   12048:	bl	13208 <table_get_uchar@@Base>
   1204c:	mov	r2, r4
   12050:	mov	r1, r5
   12054:	mov	r3, r0
   12058:	mov	r0, r7
   1205c:	bl	142e0 <table_set_uchar@@Base>
   12060:	b	11fa0 <table_dupe@@Base+0x170>
   12064:	mov	r2, r4
   12068:	mov	r1, r5
   1206c:	mov	r0, r6
   12070:	bl	131f4 <table_get_char@@Base>
   12074:	mov	r2, r4
   12078:	mov	r1, r5
   1207c:	mov	r3, r0
   12080:	mov	r0, r7
   12084:	bl	14264 <table_set_char@@Base>
   12088:	b	11fa0 <table_dupe@@Base+0x170>
   1208c:	mov	r2, r4
   12090:	mov	r1, r5
   12094:	mov	r0, r6
   12098:	bl	131e0 <table_get_ldouble@@Base>
   1209c:	mov	r2, r4
   120a0:	mov	r1, r5
   120a4:	mov	r0, r7
   120a8:	bl	1414c <table_set_ldouble@@Base>
   120ac:	b	11fa0 <table_dupe@@Base+0x170>
   120b0:	mov	r2, r4
   120b4:	mov	r1, r5
   120b8:	mov	r0, r6
   120bc:	bl	131cc <table_get_double@@Base>
   120c0:	mov	r2, r4
   120c4:	mov	r1, r5
   120c8:	mov	r0, r7
   120cc:	bl	140b4 <table_set_double@@Base>
   120d0:	b	11fa0 <table_dupe@@Base+0x170>
   120d4:	mov	r2, r4
   120d8:	mov	r1, r5
   120dc:	mov	r0, r6
   120e0:	bl	131b8 <table_get_float@@Base>
   120e4:	mov	r2, r4
   120e8:	mov	r1, r5
   120ec:	mov	r0, r7
   120f0:	bl	14038 <table_set_float@@Base>
   120f4:	b	11fa0 <table_dupe@@Base+0x170>
   120f8:	mov	r2, r4
   120fc:	mov	r1, r5
   12100:	mov	r0, r6
   12104:	bl	131a4 <table_get_ullong@@Base>
   12108:	mov	r2, r4
   1210c:	strd	r0, [sp]
   12110:	mov	r1, r5
   12114:	mov	r0, r7
   12118:	bl	13fb0 <table_set_ullong@@Base>
   1211c:	b	11fa0 <table_dupe@@Base+0x170>
   12120:	mov	r2, r4
   12124:	mov	r1, r5
   12128:	mov	r0, r6
   1212c:	bl	13190 <table_get_llong@@Base>
   12130:	mov	r2, r4
   12134:	strd	r0, [sp]
   12138:	mov	r1, r5
   1213c:	mov	r0, r7
   12140:	bl	13f28 <table_set_llong@@Base>
   12144:	b	11fa0 <table_dupe@@Base+0x170>
   12148:	mov	r2, r4
   1214c:	mov	r1, r5
   12150:	mov	r0, r6
   12154:	bl	1317c <table_get_ulong@@Base>
   12158:	mov	r2, r4
   1215c:	mov	r1, r5
   12160:	mov	r3, r0
   12164:	mov	r0, r7
   12168:	bl	13eac <table_set_ulong@@Base>
   1216c:	b	11fa0 <table_dupe@@Base+0x170>
   12170:	mov	r2, r4
   12174:	mov	r1, r5
   12178:	mov	r0, r6
   1217c:	bl	13168 <table_get_long@@Base>
   12180:	mov	r2, r4
   12184:	mov	r1, r5
   12188:	mov	r3, r0
   1218c:	mov	r0, r7
   12190:	bl	13e30 <table_set_long@@Base>
   12194:	b	11fa0 <table_dupe@@Base+0x170>
   12198:	mov	r2, r4
   1219c:	mov	r1, r5
   121a0:	mov	r0, r6
   121a4:	bl	13154 <table_get_ushort@@Base>
   121a8:	mov	r2, r4
   121ac:	mov	r1, r5
   121b0:	mov	r3, r0
   121b4:	mov	r0, r7
   121b8:	bl	13db4 <table_set_ushort@@Base>
   121bc:	b	11fa0 <table_dupe@@Base+0x170>
   121c0:	mov	r2, r4
   121c4:	mov	r1, r5
   121c8:	mov	r0, r6
   121cc:	bl	13140 <table_get_short@@Base>
   121d0:	mov	r2, r4
   121d4:	mov	r1, r5
   121d8:	mov	r3, r0
   121dc:	mov	r0, r7
   121e0:	bl	13d38 <table_set_short@@Base>
   121e4:	b	11fa0 <table_dupe@@Base+0x170>
   121e8:	mov	r2, r4
   121ec:	mov	r1, r5
   121f0:	mov	r0, r6
   121f4:	bl	1312c <table_get_uint64@@Base>
   121f8:	mov	r2, r4
   121fc:	strd	r0, [sp]
   12200:	mov	r1, r5
   12204:	mov	r0, r7
   12208:	bl	13cb0 <table_set_uint64@@Base>
   1220c:	b	11fa0 <table_dupe@@Base+0x170>
   12210:	mov	r2, r4
   12214:	mov	r1, r5
   12218:	mov	r0, r6
   1221c:	bl	130c8 <table_get_int16@@Base>
   12220:	mov	r2, r4
   12224:	mov	r1, r5
   12228:	mov	r3, r0
   1222c:	mov	r0, r7
   12230:	bl	13a3c <table_set_int16@@Base>
   12234:	b	11fa0 <table_dupe@@Base+0x170>
   12238:	mov	r2, r4
   1223c:	mov	r1, r5
   12240:	mov	r0, r6
   12244:	bl	130b4 <table_get_uint8@@Base>
   12248:	mov	r2, r4
   1224c:	mov	r1, r5
   12250:	mov	r3, r0
   12254:	mov	r0, r7
   12258:	bl	139c0 <table_set_uint8@@Base>
   1225c:	b	11fa0 <table_dupe@@Base+0x170>
   12260:	mov	r2, r4
   12264:	mov	r1, r5
   12268:	mov	r0, r6
   1226c:	bl	130a0 <table_get_int8@@Base>
   12270:	mov	r2, r4
   12274:	mov	r1, r5
   12278:	mov	r3, r0
   1227c:	mov	r0, r7
   12280:	bl	13944 <table_set_int8@@Base>
   12284:	b	11fa0 <table_dupe@@Base+0x170>
   12288:	mov	r2, r4
   1228c:	mov	r1, r5
   12290:	mov	r0, r6
   12294:	bl	1308c <table_get_uint@@Base>
   12298:	mov	r2, r4
   1229c:	mov	r1, r5
   122a0:	mov	r3, r0
   122a4:	mov	r0, r7
   122a8:	bl	138c8 <table_set_uint@@Base>
   122ac:	b	11fa0 <table_dupe@@Base+0x170>
   122b0:	mov	r2, r4
   122b4:	mov	r1, r5
   122b8:	mov	r0, r6
   122bc:	bl	13118 <table_get_int64@@Base>
   122c0:	mov	r2, r4
   122c4:	strd	r0, [sp]
   122c8:	mov	r1, r5
   122cc:	mov	r0, r7
   122d0:	bl	13c2c <table_set_int64@@Base>
   122d4:	b	11fa0 <table_dupe@@Base+0x170>
   122d8:	mov	r2, r4
   122dc:	mov	r1, r5
   122e0:	mov	r0, r6
   122e4:	bl	13104 <table_get_uint32@@Base>
   122e8:	mov	r2, r4
   122ec:	mov	r1, r5
   122f0:	mov	r3, r0
   122f4:	mov	r0, r7
   122f8:	bl	13bb0 <table_set_uint32@@Base>
   122fc:	b	11fa0 <table_dupe@@Base+0x170>
   12300:	mov	r2, r4
   12304:	mov	r1, r5
   12308:	mov	r0, r6
   1230c:	bl	130f0 <table_get_int32@@Base>
   12310:	mov	r2, r4
   12314:	mov	r1, r5
   12318:	mov	r3, r0
   1231c:	mov	r0, r7
   12320:	bl	13b34 <table_set_int32@@Base>
   12324:	b	11fa0 <table_dupe@@Base+0x170>
   12328:	mov	r2, r4
   1232c:	mov	r1, r5
   12330:	mov	r0, r6
   12334:	bl	130dc <table_get_uint16@@Base>
   12338:	mov	r2, r4
   1233c:	mov	r1, r5
   12340:	mov	r3, r0
   12344:	mov	r0, r7
   12348:	bl	13ab8 <table_set_uint16@@Base>
   1234c:	b	11fa0 <table_dupe@@Base+0x170>

00012350 <table_get_major_version@@Base>:
   12350:	mov	r0, #0
   12354:	bx	lr

00012358 <table_get_minor_version@@Base>:
   12358:	mov	r0, #0
   1235c:	bx	lr

00012360 <table_get_patch_version@@Base>:
   12360:	mov	r0, #0
   12364:	bx	lr

00012368 <table_get_version@@Base>:
   12368:	ldr	r0, [pc]	; 12370 <table_get_version@@Base+0x8>
   1236c:	bx	lr
   12370:	andeq	r5, r1, r4, lsl #2

00012374 <table_get_callback_length@@Base>:
   12374:	ldr	r0, [r0, #32]
   12378:	bx	lr

0001237c <table_register_callback@@Base>:
   1237c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12380:	ldr	r5, [r0, #32]
   12384:	ldr	r7, [r0, #36]	; 0x24
   12388:	cmp	r5, #0
   1238c:	ble	123e4 <table_register_callback@@Base+0x68>
   12390:	mov	ip, #0
   12394:	sub	lr, r7, #4
   12398:	b	123a8 <table_register_callback@@Base+0x2c>
   1239c:	add	ip, ip, #1
   123a0:	cmp	ip, r5
   123a4:	beq	123e4 <table_register_callback@@Base+0x68>
   123a8:	ldr	r4, [lr, #4]!
   123ac:	lsl	r6, ip, #2
   123b0:	cmp	r1, r4
   123b4:	bne	1239c <table_register_callback@@Base+0x20>
   123b8:	ldr	r4, [r0, #40]	; 0x28
   123bc:	ldr	r4, [r4, ip, lsl #2]
   123c0:	cmp	r2, r4
   123c4:	bne	1239c <table_register_callback@@Base+0x20>
   123c8:	cmp	ip, #0
   123cc:	beq	123e4 <table_register_callback@@Base+0x68>
   123d0:	ldr	r1, [r0, #44]	; 0x2c
   123d4:	ldr	r2, [r1, r6]
   123d8:	orr	r3, r2, r3
   123dc:	str	r3, [r1, r6]
   123e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   123e4:	ldr	sl, [r0, #48]	; 0x30
   123e8:	mov	r9, r1
   123ec:	mov	r8, r0
   123f0:	mov	r1, sl
   123f4:	mov	r0, r5
   123f8:	mov	r6, r3
   123fc:	mov	r4, r2
   12400:	bl	15014 <table_get_cell_ptr@@Base+0x204>
   12404:	cmp	r1, #0
   12408:	beq	12430 <table_register_callback@@Base+0xb4>
   1240c:	str	r9, [r7, r5, lsl #2]
   12410:	ldr	r3, [r8, #40]	; 0x28
   12414:	str	r4, [r3, r5, lsl #2]
   12418:	ldr	r3, [r8, #44]	; 0x2c
   1241c:	str	r6, [r3, r5, lsl #2]
   12420:	ldr	r3, [r8, #32]
   12424:	add	r3, r3, #1
   12428:	str	r3, [r8, #32]
   1242c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12430:	ldr	r1, [r8, #52]	; 0x34
   12434:	mov	r0, r7
   12438:	add	r1, sl, r1
   1243c:	str	r1, [r8, #52]	; 0x34
   12440:	lsl	r1, r1, #2
   12444:	bl	11ac4 <realloc@plt>
   12448:	ldr	r1, [r8, #52]	; 0x34
   1244c:	lsl	r1, r1, #2
   12450:	str	r0, [r8, #36]	; 0x24
   12454:	ldr	r0, [r8, #40]	; 0x28
   12458:	bl	11ac4 <realloc@plt>
   1245c:	ldr	r1, [r8, #52]	; 0x34
   12460:	lsl	r1, r1, #2
   12464:	str	r0, [r8, #40]	; 0x28
   12468:	ldr	r0, [r8, #44]	; 0x2c
   1246c:	bl	11ac4 <realloc@plt>
   12470:	ldr	r7, [r8, #36]	; 0x24
   12474:	ldr	r5, [r8, #32]
   12478:	str	r0, [r8, #44]	; 0x2c
   1247c:	b	1240c <table_register_callback@@Base+0x90>

00012480 <table_unregister_callback@@Base>:
   12480:	push	{r4, r5, r6, lr}
   12484:	ldr	lr, [r0, #32]
   12488:	cmp	lr, #0
   1248c:	pople	{r4, r5, r6, pc}
   12490:	ldr	r6, [r0, #36]	; 0x24
   12494:	mov	r3, #0
   12498:	sub	r4, r6, #4
   1249c:	b	124ac <table_unregister_callback@@Base+0x2c>
   124a0:	add	r3, r3, #1
   124a4:	cmp	r3, lr
   124a8:	beq	12578 <table_unregister_callback@@Base+0xf8>
   124ac:	ldr	r5, [r4, #4]!
   124b0:	lsl	ip, r3, #2
   124b4:	cmp	r1, r5
   124b8:	bne	124a0 <table_unregister_callback@@Base+0x20>
   124bc:	ldr	r5, [r0, #40]	; 0x28
   124c0:	ldr	r5, [r5, r3, lsl #2]
   124c4:	cmp	r2, r5
   124c8:	bne	124a0 <table_unregister_callback@@Base+0x20>
   124cc:	sub	lr, lr, #1
   124d0:	cmp	lr, r3
   124d4:	bgt	124e0 <table_unregister_callback@@Base+0x60>
   124d8:	b	1251c <table_unregister_callback@@Base+0x9c>
   124dc:	ldr	r6, [r0, #36]	; 0x24
   124e0:	add	r2, ip, #4
   124e4:	add	r3, r3, #1
   124e8:	ldr	r1, [r6, r2]
   124ec:	str	r1, [r6, ip]
   124f0:	ldr	r1, [r0, #40]	; 0x28
   124f4:	ldr	lr, [r1, r2]
   124f8:	str	lr, [r1, ip]
   124fc:	ldr	r1, [r0, #44]	; 0x2c
   12500:	ldr	lr, [r1, r2]
   12504:	str	lr, [r1, ip]
   12508:	ldr	lr, [r0, #32]
   1250c:	mov	ip, r2
   12510:	sub	lr, lr, #1
   12514:	cmp	lr, r3
   12518:	bgt	124dc <table_unregister_callback@@Base+0x5c>
   1251c:	ldr	r6, [r0, #48]	; 0x30
   12520:	str	lr, [r0, #32]
   12524:	mov	r4, r0
   12528:	mov	r1, r6
   1252c:	mov	r0, lr
   12530:	bl	15014 <table_get_cell_ptr@@Base+0x204>
   12534:	cmp	r1, #0
   12538:	popne	{r4, r5, r6, pc}
   1253c:	ldr	r5, [r4, #52]	; 0x34
   12540:	sub	r5, r5, r6
   12544:	cmp	r5, #0
   12548:	str	r5, [r4, #52]	; 0x34
   1254c:	bne	1257c <table_unregister_callback@@Base+0xfc>
   12550:	ldr	r0, [r4, #36]	; 0x24
   12554:	bl	11ab8 <free@plt>
   12558:	ldr	r0, [r4, #40]	; 0x28
   1255c:	bl	11ab8 <free@plt>
   12560:	ldr	r0, [r4, #44]	; 0x2c
   12564:	bl	11ab8 <free@plt>
   12568:	str	r5, [r4, #36]	; 0x24
   1256c:	str	r5, [r4, #40]	; 0x28
   12570:	str	r5, [r4, #44]	; 0x2c
   12574:	pop	{r4, r5, r6, pc}
   12578:	pop	{r4, r5, r6, pc}
   1257c:	lsl	r1, r5, #2
   12580:	ldr	r0, [r4, #36]	; 0x24
   12584:	bl	11ac4 <realloc@plt>
   12588:	ldr	r1, [r4, #52]	; 0x34
   1258c:	lsl	r1, r1, #2
   12590:	str	r0, [r4, #36]	; 0x24
   12594:	ldr	r0, [r4, #40]	; 0x28
   12598:	bl	11ac4 <realloc@plt>
   1259c:	ldr	r1, [r4, #52]	; 0x34
   125a0:	lsl	r1, r1, #2
   125a4:	str	r0, [r4, #40]	; 0x28
   125a8:	ldr	r0, [r4, #44]	; 0x2c
   125ac:	bl	11ac4 <realloc@plt>
   125b0:	str	r0, [r4, #44]	; 0x2c
   125b4:	pop	{r4, r5, r6, pc}

000125b8 <table_notify@@Base>:
   125b8:	ldr	ip, [r0, #32]
   125bc:	cmp	ip, #0
   125c0:	bxle	lr
   125c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   125c8:	mov	r6, r3
   125cc:	sub	sp, sp, #12
   125d0:	mov	r8, r2
   125d4:	mov	r7, r1
   125d8:	mov	r5, r0
   125dc:	mov	r4, #0
   125e0:	b	125f0 <table_notify@@Base+0x38>
   125e4:	add	r4, r4, #1
   125e8:	cmp	r4, ip
   125ec:	bge	12638 <table_notify@@Base+0x80>
   125f0:	ldr	r0, [r5, #44]	; 0x2c
   125f4:	ldr	r0, [r0, r4, lsl #2]
   125f8:	tst	r6, r0
   125fc:	beq	125e4 <table_notify@@Base+0x2c>
   12600:	ldr	r2, [r5, #40]	; 0x28
   12604:	ldr	r0, [r5, #36]	; 0x24
   12608:	mov	r3, r6
   1260c:	ldr	r1, [r2, r4, lsl #2]
   12610:	mov	r2, r8
   12614:	str	r1, [sp]
   12618:	mov	r1, r7
   1261c:	ldr	r9, [r0, r4, lsl #2]
   12620:	mov	r0, r5
   12624:	blx	r9
   12628:	ldr	ip, [r5, #32]
   1262c:	add	r4, r4, #1
   12630:	cmp	r4, ip
   12634:	blt	125f0 <table_notify@@Base+0x38>
   12638:	add	sp, sp, #12
   1263c:	pop	{r4, r5, r6, r7, r8, r9, pc}

00012640 <table_column_init@@Base>:
   12640:	add	r1, r1, r1, lsl #1
   12644:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12648:	lsl	r4, r1, #2
   1264c:	ldr	r6, [r0]
   12650:	mov	r0, r2
   12654:	mov	r9, r3
   12658:	mov	r7, r2
   1265c:	bl	11b00 <strlen@plt>
   12660:	ldr	r8, [sp, #32]
   12664:	add	r5, r6, r4
   12668:	add	r0, r0, #1
   1266c:	bl	11adc <malloc@plt>
   12670:	subs	r3, r0, #0
   12674:	str	r0, [r6, r4]
   12678:	beq	12684 <table_column_init@@Base+0x44>
   1267c:	mov	r1, r7
   12680:	bl	11ad0 <strcpy@plt>
   12684:	str	r9, [r5, #4]
   12688:	str	r8, [r5, #8]
   1268c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00012690 <table_column_destroy@@Base>:
   12690:	ldr	r3, [r0]
   12694:	add	r1, r1, r1, lsl #1
   12698:	ldr	r0, [r3, r1, lsl #2]
   1269c:	cmp	r0, #0
   126a0:	bxeq	lr
   126a4:	b	11ab8 <free@plt>

000126a8 <table_get_column_length@@Base>:
   126a8:	ldr	r0, [r0, #4]
   126ac:	bx	lr

000126b0 <table_get_column@@Base>:
   126b0:	push	{r4, r5, r6, r7, r8, lr}
   126b4:	ldr	r7, [r0, #4]
   126b8:	cmp	r7, #0
   126bc:	ble	1270c <table_get_column@@Base+0x5c>
   126c0:	mov	r4, #0
   126c4:	mov	r6, r1
   126c8:	ldr	r8, [r0]
   126cc:	mov	r5, r4
   126d0:	b	126e0 <table_get_column@@Base+0x30>
   126d4:	add	r5, r5, #1
   126d8:	cmp	r7, r5
   126dc:	beq	12700 <table_get_column@@Base+0x50>
   126e0:	ldr	r0, [r8, r4]
   126e4:	mov	r1, r6
   126e8:	bl	11aa0 <strcmp@plt>
   126ec:	add	r4, r4, #12
   126f0:	cmp	r0, #0
   126f4:	bne	126d4 <table_get_column@@Base+0x24>
   126f8:	mov	r0, r5
   126fc:	pop	{r4, r5, r6, r7, r8, pc}
   12700:	mvn	r5, #0
   12704:	mov	r0, r5
   12708:	pop	{r4, r5, r6, r7, r8, pc}
   1270c:	mvneq	r5, #0
   12710:	movne	r5, #0
   12714:	b	126f8 <table_get_column@@Base+0x48>

00012718 <table_get_column_data_type@@Base>:
   12718:	ldr	r3, [r0]
   1271c:	add	r1, r1, r1, lsl #1
   12720:	add	r3, r3, r1, lsl #2
   12724:	ldr	r0, [r3, #4]
   12728:	bx	lr

0001272c <table_add_column@@Base>:
   1272c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12730:	mov	r5, r0
   12734:	ldmib	r0, {r0, r6}
   12738:	sub	sp, sp, #12
   1273c:	mov	r9, r1
   12740:	mov	r1, r6
   12744:	mov	r8, r2
   12748:	bl	15014 <table_get_cell_ptr@@Base+0x204>
   1274c:	subs	r4, r1, #0
   12750:	beq	12800 <table_add_column@@Base+0xd4>
   12754:	mov	r0, r5
   12758:	bl	132b0 <table_get_row_length@@Base>
   1275c:	ldr	r6, [r5, #4]
   12760:	add	r4, r6, r6, lsl #1
   12764:	lsl	r4, r4, #2
   12768:	mov	r7, r0
   1276c:	mov	r0, r8
   12770:	bl	1303c <table_get_default_compare_function_for_data_type@@Base>
   12774:	mov	fp, r0
   12778:	mov	r0, r9
   1277c:	bl	11b00 <strlen@plt>
   12780:	ldr	r3, [r5]
   12784:	add	sl, r3, r4
   12788:	str	r3, [sp, #4]
   1278c:	add	r0, r0, #1
   12790:	bl	11adc <malloc@plt>
   12794:	ldr	r3, [sp, #4]
   12798:	cmp	r0, #0
   1279c:	str	r0, [r3, r4]
   127a0:	beq	127ac <table_add_column@@Base+0x80>
   127a4:	mov	r1, r9
   127a8:	bl	11ad0 <strcpy@plt>
   127ac:	cmp	r7, #0
   127b0:	stmib	sl, {r8, fp}
   127b4:	ble	127d8 <table_add_column@@Base+0xac>
   127b8:	mov	r4, #0
   127bc:	mov	r1, r4
   127c0:	mov	r2, r6
   127c4:	mov	r0, r5
   127c8:	add	r4, r4, #1
   127cc:	bl	143b8 <table_cell_init@@Base>
   127d0:	cmp	r7, r4
   127d4:	bne	127bc <table_add_column@@Base+0x90>
   127d8:	mov	r0, r5
   127dc:	mov	r3, #8
   127e0:	ldr	r2, [r5, #4]
   127e4:	mvn	r1, #0
   127e8:	bl	125b8 <table_notify@@Base>
   127ec:	ldr	r0, [r5, #4]
   127f0:	add	r3, r0, #1
   127f4:	str	r3, [r5, #4]
   127f8:	add	sp, sp, #12
   127fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12800:	ldr	r1, [r5, #12]
   12804:	ldr	r0, [r5]
   12808:	add	r6, r6, r1
   1280c:	str	r6, [r5, #12]
   12810:	add	r6, r6, r6, lsl #1
   12814:	lsl	r1, r6, #2
   12818:	bl	11ac4 <realloc@plt>
   1281c:	str	r0, [r5]
   12820:	mov	r0, r5
   12824:	bl	132b0 <table_get_row_length@@Base>
   12828:	subs	r7, r0, #0
   1282c:	ble	12754 <table_add_column@@Base+0x28>
   12830:	mov	r1, r4
   12834:	mov	r0, r5
   12838:	bl	13468 <table_get_row_ptr@@Base>
   1283c:	ldr	r1, [r5, #12]
   12840:	add	r4, r4, #1
   12844:	lsl	r1, r1, #2
   12848:	mov	r6, r0
   1284c:	ldr	r0, [r0]
   12850:	bl	11ac4 <realloc@plt>
   12854:	cmp	r7, r4
   12858:	str	r0, [r6]
   1285c:	bne	12830 <table_add_column@@Base+0x104>
   12860:	b	12754 <table_add_column@@Base+0x28>

00012864 <table_remove_column@@Base>:
   12864:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12868:	add	r5, r1, r1, lsl #1
   1286c:	ldr	r3, [r0]
   12870:	lsl	r5, r5, #2
   12874:	mov	r6, r0
   12878:	ldr	r0, [r3, r5]
   1287c:	mov	r9, r1
   12880:	cmp	r0, #0
   12884:	beq	1288c <table_remove_column@@Base+0x28>
   12888:	bl	11ab8 <free@plt>
   1288c:	ldr	r4, [r6, #4]
   12890:	sub	r4, r4, #1
   12894:	cmp	r9, r4
   12898:	movlt	r1, r9
   1289c:	bge	128d8 <table_remove_column@@Base+0x74>
   128a0:	ldr	r3, [r6]
   128a4:	add	r0, r5, #12
   128a8:	add	r2, r3, r0
   128ac:	add	r1, r1, #1
   128b0:	ldr	lr, [r2, #4]
   128b4:	ldr	ip, [r2, #8]
   128b8:	ldr	r7, [r2]
   128bc:	add	r2, r3, r5
   128c0:	cmp	r1, r4
   128c4:	str	r7, [r3, r5]
   128c8:	str	lr, [r2, #4]
   128cc:	str	ip, [r2, #8]
   128d0:	mov	r5, r0
   128d4:	bne	128a0 <table_remove_column@@Base+0x3c>
   128d8:	mov	r0, r6
   128dc:	bl	132b0 <table_get_row_length@@Base>
   128e0:	subs	r7, r0, #0
   128e4:	lslgt	r8, r9, #2
   128e8:	movgt	r5, #0
   128ec:	ble	12948 <table_remove_column@@Base+0xe4>
   128f0:	mov	r2, r9
   128f4:	mov	r1, r5
   128f8:	mov	r0, r6
   128fc:	bl	143d4 <table_cell_destroy@@Base>
   12900:	mov	r1, r5
   12904:	mov	r0, r6
   12908:	bl	13468 <table_get_row_ptr@@Base>
   1290c:	cmp	r9, r4
   12910:	movlt	r2, r8
   12914:	movlt	r3, r9
   12918:	bge	1293c <table_remove_column@@Base+0xd8>
   1291c:	ldr	ip, [r0]
   12920:	add	r1, r2, #4
   12924:	add	r3, r3, #1
   12928:	ldr	lr, [ip, r1]
   1292c:	cmp	r3, r4
   12930:	str	lr, [ip, r2]
   12934:	mov	r2, r1
   12938:	bne	1291c <table_remove_column@@Base+0xb8>
   1293c:	add	r5, r5, #1
   12940:	cmp	r7, r5
   12944:	bne	128f0 <table_remove_column@@Base+0x8c>
   12948:	ldmib	r6, {r0, r5}
   1294c:	sub	r0, r0, #1
   12950:	str	r0, [r6, #4]
   12954:	mov	r1, r5
   12958:	bl	15014 <table_get_cell_ptr@@Base+0x204>
   1295c:	subs	r4, r1, #0
   12960:	beq	12980 <table_remove_column@@Base+0x11c>
   12964:	mov	r0, r6
   12968:	mov	r2, r9
   1296c:	mov	r3, #16
   12970:	mvn	r1, #0
   12974:	bl	125b8 <table_notify@@Base>
   12978:	mov	r0, #0
   1297c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12980:	ldr	r1, [r6, #12]
   12984:	ldr	r0, [r6]
   12988:	sub	r1, r1, r5
   1298c:	str	r1, [r6, #12]
   12990:	add	r1, r1, r1, lsl #1
   12994:	lsl	r1, r1, #2
   12998:	bl	11ac4 <realloc@plt>
   1299c:	str	r0, [r6]
   129a0:	mov	r0, r6
   129a4:	bl	132b0 <table_get_row_length@@Base>
   129a8:	subs	r7, r0, #0
   129ac:	ble	12964 <table_remove_column@@Base+0x100>
   129b0:	mov	r1, r4
   129b4:	mov	r0, r6
   129b8:	bl	13468 <table_get_row_ptr@@Base>
   129bc:	ldr	r1, [r6, #12]
   129c0:	add	r4, r4, #1
   129c4:	lsl	r1, r1, #2
   129c8:	mov	r5, r0
   129cc:	ldr	r0, [r0]
   129d0:	bl	11ac4 <realloc@plt>
   129d4:	cmp	r7, r4
   129d8:	str	r0, [r5]
   129dc:	bne	129b0 <table_remove_column@@Base+0x14c>
   129e0:	b	12964 <table_remove_column@@Base+0x100>

000129e4 <table_get_column_name@@Base>:
   129e4:	ldr	r3, [r0]
   129e8:	add	r1, r1, r1, lsl #1
   129ec:	ldr	r0, [r3, r1, lsl #2]
   129f0:	bx	lr

000129f4 <table_get_col_ptr@@Base>:
   129f4:	add	r1, r1, r1, lsl #1
   129f8:	ldr	r0, [r0]
   129fc:	add	r0, r0, r1, lsl #2
   12a00:	bx	lr

00012a04 <table_get_column_compare_function@@Base>:
   12a04:	ldr	r3, [r0]
   12a08:	add	r1, r1, r1, lsl #1
   12a0c:	add	r3, r3, r1, lsl #2
   12a10:	ldr	r0, [r3, #8]
   12a14:	bx	lr

00012a18 <table_set_column_compare_function@@Base>:
   12a18:	ldr	r3, [r0]
   12a1c:	add	r1, r1, r1, lsl #1
   12a20:	add	r3, r3, r1, lsl #2
   12a24:	str	r2, [r3, #8]
   12a28:	bx	lr

00012a2c <table_compare_bool@@Base>:
   12a2c:	cmp	r0, #0
   12a30:	beq	12a60 <table_compare_bool@@Base+0x34>
   12a34:	cmp	r1, #0
   12a38:	beq	12a58 <table_compare_bool@@Base+0x2c>
   12a3c:	ldrb	r2, [r0]
   12a40:	ldrb	r3, [r1]
   12a44:	cmp	r2, r3
   12a48:	bgt	12a58 <table_compare_bool@@Base+0x2c>
   12a4c:	mvnlt	r0, #0
   12a50:	movge	r0, #0
   12a54:	bx	lr
   12a58:	mov	r0, #1
   12a5c:	bx	lr
   12a60:	adds	r0, r1, #0
   12a64:	mvnne	r0, #0
   12a68:	bx	lr

00012a6c <table_compare_int8@@Base>:
   12a6c:	cmp	r0, #0
   12a70:	beq	12aa0 <table_compare_int8@@Base+0x34>
   12a74:	cmp	r1, #0
   12a78:	beq	12a98 <table_compare_int8@@Base+0x2c>
   12a7c:	ldrsb	r2, [r0]
   12a80:	ldrsb	r3, [r1]
   12a84:	cmp	r2, r3
   12a88:	bgt	12a98 <table_compare_int8@@Base+0x2c>
   12a8c:	mvnlt	r0, #0
   12a90:	movge	r0, #0
   12a94:	bx	lr
   12a98:	mov	r0, #1
   12a9c:	bx	lr
   12aa0:	adds	r0, r1, #0
   12aa4:	mvnne	r0, #0
   12aa8:	bx	lr

00012aac <table_compare_int32@@Base>:
   12aac:	cmp	r0, #0
   12ab0:	beq	12ae0 <table_compare_int32@@Base+0x34>
   12ab4:	cmp	r1, #0
   12ab8:	beq	12ad8 <table_compare_int32@@Base+0x2c>
   12abc:	ldr	r2, [r0]
   12ac0:	ldr	r3, [r1]
   12ac4:	cmp	r2, r3
   12ac8:	bgt	12ad8 <table_compare_int32@@Base+0x2c>
   12acc:	mvnlt	r0, #0
   12ad0:	movge	r0, #0
   12ad4:	bx	lr
   12ad8:	mov	r0, #1
   12adc:	bx	lr
   12ae0:	adds	r0, r1, #0
   12ae4:	mvnne	r0, #0
   12ae8:	bx	lr

00012aec <table_compare_uint32@@Base>:
   12aec:	cmp	r0, #0
   12af0:	beq	12b20 <table_compare_uint32@@Base+0x34>
   12af4:	cmp	r1, #0
   12af8:	beq	12b18 <table_compare_uint32@@Base+0x2c>
   12afc:	ldr	r2, [r0]
   12b00:	ldr	r3, [r1]
   12b04:	cmp	r2, r3
   12b08:	bhi	12b18 <table_compare_uint32@@Base+0x2c>
   12b0c:	mvncc	r0, #0
   12b10:	movcs	r0, #0
   12b14:	bx	lr
   12b18:	mov	r0, #1
   12b1c:	bx	lr
   12b20:	adds	r0, r1, #0
   12b24:	mvnne	r0, #0
   12b28:	bx	lr

00012b2c <table_compare_uint64@@Base>:
   12b2c:	cmp	r0, #0
   12b30:	beq	12b68 <table_compare_uint64@@Base+0x3c>
   12b34:	cmp	r1, #0
   12b38:	beq	12b74 <table_compare_uint64@@Base+0x48>
   12b3c:	ldrd	r2, [r1]
   12b40:	push	{r4, r5}
   12b44:	ldrd	r4, [r0]
   12b48:	cmp	r5, r3
   12b4c:	cmpeq	r4, r2
   12b50:	movhi	r0, #1
   12b54:	bhi	12b60 <table_compare_uint64@@Base+0x34>
   12b58:	mvncc	r0, #0
   12b5c:	movcs	r0, #0
   12b60:	pop	{r4, r5}
   12b64:	bx	lr
   12b68:	adds	r0, r1, #0
   12b6c:	mvnne	r0, #0
   12b70:	bx	lr
   12b74:	mov	r0, #1
   12b78:	bx	lr

00012b7c <table_compare_short@@Base>:
   12b7c:	cmp	r0, #0
   12b80:	beq	12bb0 <table_compare_short@@Base+0x34>
   12b84:	cmp	r1, #0
   12b88:	beq	12ba8 <table_compare_short@@Base+0x2c>
   12b8c:	ldrsh	r2, [r0]
   12b90:	ldrsh	r3, [r1]
   12b94:	cmp	r2, r3
   12b98:	bgt	12ba8 <table_compare_short@@Base+0x2c>
   12b9c:	mvnlt	r0, #0
   12ba0:	movge	r0, #0
   12ba4:	bx	lr
   12ba8:	mov	r0, #1
   12bac:	bx	lr
   12bb0:	adds	r0, r1, #0
   12bb4:	mvnne	r0, #0
   12bb8:	bx	lr

00012bbc <table_compare_ushort@@Base>:
   12bbc:	cmp	r0, #0
   12bc0:	beq	12bf0 <table_compare_ushort@@Base+0x34>
   12bc4:	cmp	r1, #0
   12bc8:	beq	12be8 <table_compare_ushort@@Base+0x2c>
   12bcc:	ldrh	r2, [r0]
   12bd0:	ldrh	r3, [r1]
   12bd4:	cmp	r2, r3
   12bd8:	bhi	12be8 <table_compare_ushort@@Base+0x2c>
   12bdc:	mvncc	r0, #0
   12be0:	movcs	r0, #0
   12be4:	bx	lr
   12be8:	mov	r0, #1
   12bec:	bx	lr
   12bf0:	adds	r0, r1, #0
   12bf4:	mvnne	r0, #0
   12bf8:	bx	lr

00012bfc <table_compare_long@@Base>:
   12bfc:	cmp	r0, #0
   12c00:	beq	12c30 <table_compare_long@@Base+0x34>
   12c04:	cmp	r1, #0
   12c08:	beq	12c28 <table_compare_long@@Base+0x2c>
   12c0c:	ldr	r2, [r0]
   12c10:	ldr	r3, [r1]
   12c14:	cmp	r2, r3
   12c18:	bgt	12c28 <table_compare_long@@Base+0x2c>
   12c1c:	mvnlt	r0, #0
   12c20:	movge	r0, #0
   12c24:	bx	lr
   12c28:	mov	r0, #1
   12c2c:	bx	lr
   12c30:	adds	r0, r1, #0
   12c34:	mvnne	r0, #0
   12c38:	bx	lr

00012c3c <table_compare_llong@@Base>:
   12c3c:	cmp	r0, #0
   12c40:	beq	12c80 <table_compare_llong@@Base+0x44>
   12c44:	cmp	r1, #0
   12c48:	beq	12c8c <table_compare_llong@@Base+0x50>
   12c4c:	ldrd	r2, [r1]
   12c50:	push	{r4, r5}
   12c54:	ldrd	r4, [r0]
   12c58:	cmp	r2, r4
   12c5c:	sbcs	r1, r3, r5
   12c60:	movlt	r0, #1
   12c64:	blt	12c78 <table_compare_llong@@Base+0x3c>
   12c68:	cmp	r4, r2
   12c6c:	sbcs	r3, r5, r3
   12c70:	mvnlt	r0, #0
   12c74:	movge	r0, #0
   12c78:	pop	{r4, r5}
   12c7c:	bx	lr
   12c80:	adds	r0, r1, #0
   12c84:	mvnne	r0, #0
   12c88:	bx	lr
   12c8c:	mov	r0, #1
   12c90:	bx	lr

00012c94 <table_compare_ullong@@Base>:
   12c94:	cmp	r0, #0
   12c98:	beq	12cc8 <table_compare_ullong@@Base+0x34>
   12c9c:	cmp	r1, #0
   12ca0:	beq	12cc0 <table_compare_ullong@@Base+0x2c>
   12ca4:	ldr	r2, [r0]
   12ca8:	ldr	r3, [r1]
   12cac:	cmp	r2, r3
   12cb0:	bhi	12cc0 <table_compare_ullong@@Base+0x2c>
   12cb4:	mvncc	r0, #0
   12cb8:	movcs	r0, #0
   12cbc:	bx	lr
   12cc0:	mov	r0, #1
   12cc4:	bx	lr
   12cc8:	adds	r0, r1, #0
   12ccc:	mvnne	r0, #0
   12cd0:	bx	lr

00012cd4 <table_compare_float@@Base>:
   12cd4:	cmp	r0, #0
   12cd8:	beq	12d0c <table_compare_float@@Base+0x38>
   12cdc:	cmp	r1, #0
   12ce0:	beq	12d04 <table_compare_float@@Base+0x30>
   12ce4:	vldr	s14, [r0]
   12ce8:	vldr	s15, [r1]
   12cec:	vcmpe.f32	s14, s15
   12cf0:	vmrs	APSR_nzcv, fpscr
   12cf4:	bgt	12d04 <table_compare_float@@Base+0x30>
   12cf8:	mvnmi	r0, #0
   12cfc:	movpl	r0, #0
   12d00:	bx	lr
   12d04:	mov	r0, #1
   12d08:	bx	lr
   12d0c:	adds	r0, r1, #0
   12d10:	mvnne	r0, #0
   12d14:	bx	lr

00012d18 <table_compare_double@@Base>:
   12d18:	cmp	r0, #0
   12d1c:	beq	12d50 <table_compare_double@@Base+0x38>
   12d20:	cmp	r1, #0
   12d24:	beq	12d48 <table_compare_double@@Base+0x30>
   12d28:	vldr	d6, [r0]
   12d2c:	vldr	d7, [r1]
   12d30:	vcmpe.f64	d6, d7
   12d34:	vmrs	APSR_nzcv, fpscr
   12d38:	bgt	12d48 <table_compare_double@@Base+0x30>
   12d3c:	mvnmi	r0, #0
   12d40:	movpl	r0, #0
   12d44:	bx	lr
   12d48:	mov	r0, #1
   12d4c:	bx	lr
   12d50:	adds	r0, r1, #0
   12d54:	mvnne	r0, #0
   12d58:	bx	lr

00012d5c <table_compare_ldouble@@Base>:
   12d5c:	cmp	r0, #0
   12d60:	beq	12d94 <table_compare_ldouble@@Base+0x38>
   12d64:	cmp	r1, #0
   12d68:	beq	12d8c <table_compare_ldouble@@Base+0x30>
   12d6c:	vldr	d6, [r0]
   12d70:	vldr	d7, [r1]
   12d74:	vcmpe.f64	d6, d7
   12d78:	vmrs	APSR_nzcv, fpscr
   12d7c:	bgt	12d8c <table_compare_ldouble@@Base+0x30>
   12d80:	mvnmi	r0, #0
   12d84:	movpl	r0, #0
   12d88:	bx	lr
   12d8c:	mov	r0, #1
   12d90:	bx	lr
   12d94:	adds	r0, r1, #0
   12d98:	mvnne	r0, #0
   12d9c:	bx	lr

00012da0 <table_compare_uchar@@Base>:
   12da0:	cmp	r0, #0
   12da4:	beq	12dd4 <table_compare_uchar@@Base+0x34>
   12da8:	cmp	r1, #0
   12dac:	beq	12dcc <table_compare_uchar@@Base+0x2c>
   12db0:	ldrb	r2, [r0]
   12db4:	ldrb	r3, [r1]
   12db8:	cmp	r2, r3
   12dbc:	bhi	12dcc <table_compare_uchar@@Base+0x2c>
   12dc0:	mvncc	r0, #0
   12dc4:	movcs	r0, #0
   12dc8:	bx	lr
   12dcc:	mov	r0, #1
   12dd0:	bx	lr
   12dd4:	adds	r0, r1, #0
   12dd8:	mvnne	r0, #0
   12ddc:	bx	lr

00012de0 <table_compare_ptr@@Base>:
   12de0:	cmp	r0, r1
   12de4:	bhi	12df4 <table_compare_ptr@@Base+0x14>
   12de8:	mvncc	r0, #0
   12dec:	movcs	r0, #0
   12df0:	bx	lr
   12df4:	mov	r0, #1
   12df8:	bx	lr

00012dfc <table_compare_string@@Base>:
   12dfc:	cmp	r0, #0
   12e00:	beq	12e10 <table_compare_string@@Base+0x14>
   12e04:	cmp	r1, #0
   12e08:	beq	12e1c <table_compare_string@@Base+0x20>
   12e0c:	b	11aa0 <strcmp@plt>
   12e10:	adds	r0, r1, #0
   12e14:	mvnne	r0, #0
   12e18:	bx	lr
   12e1c:	mov	r0, #1
   12e20:	bx	lr

00012e24 <table_compare_ulong@@Base>:
   12e24:	cmp	r0, #0
   12e28:	beq	12e58 <table_compare_ulong@@Base+0x34>
   12e2c:	cmp	r1, #0
   12e30:	beq	12e50 <table_compare_ulong@@Base+0x2c>
   12e34:	ldr	r2, [r0]
   12e38:	ldr	r3, [r1]
   12e3c:	cmp	r2, r3
   12e40:	bhi	12e50 <table_compare_ulong@@Base+0x2c>
   12e44:	mvncc	r0, #0
   12e48:	movcs	r0, #0
   12e4c:	bx	lr
   12e50:	mov	r0, #1
   12e54:	bx	lr
   12e58:	adds	r0, r1, #0
   12e5c:	mvnne	r0, #0
   12e60:	bx	lr

00012e64 <table_compare_int@@Base>:
   12e64:	cmp	r0, #0
   12e68:	beq	12e98 <table_compare_int@@Base+0x34>
   12e6c:	cmp	r1, #0
   12e70:	beq	12e90 <table_compare_int@@Base+0x2c>
   12e74:	ldr	r2, [r0]
   12e78:	ldr	r3, [r1]
   12e7c:	cmp	r2, r3
   12e80:	bgt	12e90 <table_compare_int@@Base+0x2c>
   12e84:	mvnlt	r0, #0
   12e88:	movge	r0, #0
   12e8c:	bx	lr
   12e90:	mov	r0, #1
   12e94:	bx	lr
   12e98:	adds	r0, r1, #0
   12e9c:	mvnne	r0, #0
   12ea0:	bx	lr

00012ea4 <table_compare_uint@@Base>:
   12ea4:	cmp	r0, #0
   12ea8:	beq	12ed8 <table_compare_uint@@Base+0x34>
   12eac:	cmp	r1, #0
   12eb0:	beq	12ed0 <table_compare_uint@@Base+0x2c>
   12eb4:	ldr	r2, [r0]
   12eb8:	ldr	r3, [r1]
   12ebc:	cmp	r2, r3
   12ec0:	bhi	12ed0 <table_compare_uint@@Base+0x2c>
   12ec4:	mvncc	r0, #0
   12ec8:	movcs	r0, #0
   12ecc:	bx	lr
   12ed0:	mov	r0, #1
   12ed4:	bx	lr
   12ed8:	adds	r0, r1, #0
   12edc:	mvnne	r0, #0
   12ee0:	bx	lr

00012ee4 <table_compare_int16@@Base>:
   12ee4:	cmp	r0, #0
   12ee8:	beq	12f18 <table_compare_int16@@Base+0x34>
   12eec:	cmp	r1, #0
   12ef0:	beq	12f10 <table_compare_int16@@Base+0x2c>
   12ef4:	ldrsh	r2, [r0]
   12ef8:	ldrsh	r3, [r1]
   12efc:	cmp	r2, r3
   12f00:	bgt	12f10 <table_compare_int16@@Base+0x2c>
   12f04:	mvnlt	r0, #0
   12f08:	movge	r0, #0
   12f0c:	bx	lr
   12f10:	mov	r0, #1
   12f14:	bx	lr
   12f18:	adds	r0, r1, #0
   12f1c:	mvnne	r0, #0
   12f20:	bx	lr

00012f24 <table_compare_uint16@@Base>:
   12f24:	cmp	r0, #0
   12f28:	beq	12f58 <table_compare_uint16@@Base+0x34>
   12f2c:	cmp	r1, #0
   12f30:	beq	12f50 <table_compare_uint16@@Base+0x2c>
   12f34:	ldrh	r2, [r0]
   12f38:	ldrh	r3, [r1]
   12f3c:	cmp	r2, r3
   12f40:	bhi	12f50 <table_compare_uint16@@Base+0x2c>
   12f44:	mvncc	r0, #0
   12f48:	movcs	r0, #0
   12f4c:	bx	lr
   12f50:	mov	r0, #1
   12f54:	bx	lr
   12f58:	adds	r0, r1, #0
   12f5c:	mvnne	r0, #0
   12f60:	bx	lr

00012f64 <table_compare_int64@@Base>:
   12f64:	cmp	r0, #0
   12f68:	beq	12fa8 <table_compare_int64@@Base+0x44>
   12f6c:	cmp	r1, #0
   12f70:	beq	12fb4 <table_compare_int64@@Base+0x50>
   12f74:	ldrd	r2, [r1]
   12f78:	push	{r4, r5}
   12f7c:	ldrd	r4, [r0]
   12f80:	cmp	r2, r4
   12f84:	sbcs	r1, r3, r5
   12f88:	movlt	r0, #1
   12f8c:	blt	12fa0 <table_compare_int64@@Base+0x3c>
   12f90:	cmp	r4, r2
   12f94:	sbcs	r3, r5, r3
   12f98:	mvnlt	r0, #0
   12f9c:	movge	r0, #0
   12fa0:	pop	{r4, r5}
   12fa4:	bx	lr
   12fa8:	adds	r0, r1, #0
   12fac:	mvnne	r0, #0
   12fb0:	bx	lr
   12fb4:	mov	r0, #1
   12fb8:	bx	lr

00012fbc <table_compare_char@@Base>:
   12fbc:	cmp	r0, #0
   12fc0:	beq	12ff0 <table_compare_char@@Base+0x34>
   12fc4:	cmp	r1, #0
   12fc8:	beq	12fe8 <table_compare_char@@Base+0x2c>
   12fcc:	ldrb	r2, [r0]
   12fd0:	ldrb	r3, [r1]
   12fd4:	cmp	r2, r3
   12fd8:	bhi	12fe8 <table_compare_char@@Base+0x2c>
   12fdc:	mvncc	r0, #0
   12fe0:	movcs	r0, #0
   12fe4:	bx	lr
   12fe8:	mov	r0, #1
   12fec:	bx	lr
   12ff0:	adds	r0, r1, #0
   12ff4:	mvnne	r0, #0
   12ff8:	bx	lr

00012ffc <table_compare_uint8@@Base>:
   12ffc:	cmp	r0, #0
   13000:	beq	13030 <table_compare_uint8@@Base+0x34>
   13004:	cmp	r1, #0
   13008:	beq	13028 <table_compare_uint8@@Base+0x2c>
   1300c:	ldrb	r2, [r0]
   13010:	ldrb	r3, [r1]
   13014:	cmp	r2, r3
   13018:	bhi	13028 <table_compare_uint8@@Base+0x2c>
   1301c:	mvncc	r0, #0
   13020:	movcs	r0, #0
   13024:	bx	lr
   13028:	mov	r0, #1
   1302c:	bx	lr
   13030:	adds	r0, r1, #0
   13034:	mvnne	r0, #0
   13038:	bx	lr

0001303c <table_get_default_compare_function_for_data_type@@Base>:
   1303c:	cmp	r0, #23
   13040:	ldrls	r3, [pc, #8]	; 13050 <table_get_default_compare_function_for_data_type@@Base+0x14>
   13044:	ldrls	r0, [r3, r0, lsl #2]
   13048:	movhi	r0, #0
   1304c:	bx	lr
   13050:	andeq	r5, r1, ip, lsl r1

00013054 <table_get@@Base>:
   13054:	push	{r4, lr}
   13058:	bl	14e10 <table_get_cell_ptr@@Base>
   1305c:	ldr	r0, [r0]
   13060:	pop	{r4, pc}

00013064 <table_get_bool@@Base>:
   13064:	push	{r4, lr}
   13068:	bl	14e10 <table_get_cell_ptr@@Base>
   1306c:	ldr	r3, [r0]
   13070:	ldrb	r0, [r3]
   13074:	pop	{r4, pc}

00013078 <table_get_int@@Base>:
   13078:	push	{r4, lr}
   1307c:	bl	14e10 <table_get_cell_ptr@@Base>
   13080:	ldr	r3, [r0]
   13084:	ldr	r0, [r3]
   13088:	pop	{r4, pc}

0001308c <table_get_uint@@Base>:
   1308c:	push	{r4, lr}
   13090:	bl	14e10 <table_get_cell_ptr@@Base>
   13094:	ldr	r3, [r0]
   13098:	ldr	r0, [r3]
   1309c:	pop	{r4, pc}

000130a0 <table_get_int8@@Base>:
   130a0:	push	{r4, lr}
   130a4:	bl	14e10 <table_get_cell_ptr@@Base>
   130a8:	ldr	r3, [r0]
   130ac:	ldrsb	r0, [r3]
   130b0:	pop	{r4, pc}

000130b4 <table_get_uint8@@Base>:
   130b4:	push	{r4, lr}
   130b8:	bl	14e10 <table_get_cell_ptr@@Base>
   130bc:	ldr	r3, [r0]
   130c0:	ldrb	r0, [r3]
   130c4:	pop	{r4, pc}

000130c8 <table_get_int16@@Base>:
   130c8:	push	{r4, lr}
   130cc:	bl	14e10 <table_get_cell_ptr@@Base>
   130d0:	ldr	r3, [r0]
   130d4:	ldrsh	r0, [r3]
   130d8:	pop	{r4, pc}

000130dc <table_get_uint16@@Base>:
   130dc:	push	{r4, lr}
   130e0:	bl	14e10 <table_get_cell_ptr@@Base>
   130e4:	ldr	r3, [r0]
   130e8:	ldrh	r0, [r3]
   130ec:	pop	{r4, pc}

000130f0 <table_get_int32@@Base>:
   130f0:	push	{r4, lr}
   130f4:	bl	14e10 <table_get_cell_ptr@@Base>
   130f8:	ldr	r3, [r0]
   130fc:	ldr	r0, [r3]
   13100:	pop	{r4, pc}

00013104 <table_get_uint32@@Base>:
   13104:	push	{r4, lr}
   13108:	bl	14e10 <table_get_cell_ptr@@Base>
   1310c:	ldr	r3, [r0]
   13110:	ldr	r0, [r3]
   13114:	pop	{r4, pc}

00013118 <table_get_int64@@Base>:
   13118:	push	{r4, lr}
   1311c:	bl	14e10 <table_get_cell_ptr@@Base>
   13120:	ldr	r3, [r0]
   13124:	ldrd	r0, [r3]
   13128:	pop	{r4, pc}

0001312c <table_get_uint64@@Base>:
   1312c:	push	{r4, lr}
   13130:	bl	14e10 <table_get_cell_ptr@@Base>
   13134:	ldr	r3, [r0]
   13138:	ldrd	r0, [r3]
   1313c:	pop	{r4, pc}

00013140 <table_get_short@@Base>:
   13140:	push	{r4, lr}
   13144:	bl	14e10 <table_get_cell_ptr@@Base>
   13148:	ldr	r3, [r0]
   1314c:	ldrsh	r0, [r3]
   13150:	pop	{r4, pc}

00013154 <table_get_ushort@@Base>:
   13154:	push	{r4, lr}
   13158:	bl	14e10 <table_get_cell_ptr@@Base>
   1315c:	ldr	r3, [r0]
   13160:	ldrh	r0, [r3]
   13164:	pop	{r4, pc}

00013168 <table_get_long@@Base>:
   13168:	push	{r4, lr}
   1316c:	bl	14e10 <table_get_cell_ptr@@Base>
   13170:	ldr	r3, [r0]
   13174:	ldr	r0, [r3]
   13178:	pop	{r4, pc}

0001317c <table_get_ulong@@Base>:
   1317c:	push	{r4, lr}
   13180:	bl	14e10 <table_get_cell_ptr@@Base>
   13184:	ldr	r3, [r0]
   13188:	ldr	r0, [r3]
   1318c:	pop	{r4, pc}

00013190 <table_get_llong@@Base>:
   13190:	push	{r4, lr}
   13194:	bl	14e10 <table_get_cell_ptr@@Base>
   13198:	ldr	r3, [r0]
   1319c:	ldrd	r0, [r3]
   131a0:	pop	{r4, pc}

000131a4 <table_get_ullong@@Base>:
   131a4:	push	{r4, lr}
   131a8:	bl	14e10 <table_get_cell_ptr@@Base>
   131ac:	ldr	r3, [r0]
   131b0:	ldrd	r0, [r3]
   131b4:	pop	{r4, pc}

000131b8 <table_get_float@@Base>:
   131b8:	push	{r4, lr}
   131bc:	bl	14e10 <table_get_cell_ptr@@Base>
   131c0:	ldr	r3, [r0]
   131c4:	vldr	s0, [r3]
   131c8:	pop	{r4, pc}

000131cc <table_get_double@@Base>:
   131cc:	push	{r4, lr}
   131d0:	bl	14e10 <table_get_cell_ptr@@Base>
   131d4:	ldr	r3, [r0]
   131d8:	vldr	d0, [r3]
   131dc:	pop	{r4, pc}

000131e0 <table_get_ldouble@@Base>:
   131e0:	push	{r4, lr}
   131e4:	bl	14e10 <table_get_cell_ptr@@Base>
   131e8:	ldr	r3, [r0]
   131ec:	vldr	d0, [r3]
   131f0:	pop	{r4, pc}

000131f4 <table_get_char@@Base>:
   131f4:	push	{r4, lr}
   131f8:	bl	14e10 <table_get_cell_ptr@@Base>
   131fc:	ldr	r3, [r0]
   13200:	ldrb	r0, [r3]
   13204:	pop	{r4, pc}

00013208 <table_get_uchar@@Base>:
   13208:	push	{r4, lr}
   1320c:	bl	14e10 <table_get_cell_ptr@@Base>
   13210:	ldr	r3, [r0]
   13214:	ldrb	r0, [r3]
   13218:	pop	{r4, pc}

0001321c <table_get_string@@Base>:
   1321c:	push	{r4, lr}
   13220:	bl	14e10 <table_get_cell_ptr@@Base>
   13224:	ldr	r0, [r0]
   13228:	pop	{r4, pc}

0001322c <table_get_ptr@@Base>:
   1322c:	push	{r4, lr}
   13230:	bl	14e10 <table_get_cell_ptr@@Base>
   13234:	ldr	r0, [r0]
   13238:	pop	{r4, pc}

0001323c <table_row_init@@Base>:
   1323c:	ldr	r3, [r0, #12]
   13240:	push	{r4, r5, r6, lr}
   13244:	mov	r5, r1
   13248:	ldr	r4, [r0, #16]
   1324c:	lsl	r0, r3, #2
   13250:	bl	11adc <malloc@plt>
   13254:	str	r0, [r4, r5, lsl #2]
   13258:	pop	{r4, r5, r6, pc}

0001325c <table_row_destroy@@Base>:
   1325c:	push	{r4, r5, r6, r7, r8, lr}
   13260:	mov	r6, r0
   13264:	mov	r5, r1
   13268:	bl	126a8 <table_get_column_length@@Base>
   1326c:	ldr	r8, [r6, #16]
   13270:	subs	r7, r0, #0
   13274:	movgt	r4, #0
   13278:	ble	13298 <table_row_destroy@@Base+0x3c>
   1327c:	mov	r2, r4
   13280:	mov	r1, r5
   13284:	add	r4, r4, #1
   13288:	mov	r0, r6
   1328c:	bl	143d4 <table_cell_destroy@@Base>
   13290:	cmp	r7, r4
   13294:	bne	1327c <table_row_destroy@@Base+0x20>
   13298:	ldr	r0, [r8, r5, lsl #2]
   1329c:	cmp	r0, #0
   132a0:	beq	132ac <table_row_destroy@@Base+0x50>
   132a4:	pop	{r4, r5, r6, r7, r8, lr}
   132a8:	b	11ab8 <free@plt>
   132ac:	pop	{r4, r5, r6, r7, r8, pc}

000132b0 <table_get_row_length@@Base>:
   132b0:	ldr	r0, [r0, #20]
   132b4:	bx	lr

000132b8 <table_add_row@@Base>:
   132b8:	push	{r4, r5, r6, r7, r8, lr}
   132bc:	mov	r5, r0
   132c0:	ldr	r4, [r0, #24]
   132c4:	ldr	r6, [r0, #20]
   132c8:	mov	r1, r4
   132cc:	mov	r0, r6
   132d0:	bl	15014 <table_get_cell_ptr@@Base+0x204>
   132d4:	cmp	r1, #0
   132d8:	bne	132fc <table_add_row@@Base+0x44>
   132dc:	ldr	r1, [r5, #28]
   132e0:	ldr	r0, [r5, #16]
   132e4:	add	r1, r4, r1
   132e8:	str	r1, [r5, #28]
   132ec:	lsl	r1, r1, #2
   132f0:	bl	11ac4 <realloc@plt>
   132f4:	ldr	r6, [r5, #20]
   132f8:	str	r0, [r5, #16]
   132fc:	mov	r0, r5
   13300:	bl	126a8 <table_get_column_length@@Base>
   13304:	ldr	r4, [r5, #16]
   13308:	mov	r7, r0
   1330c:	ldr	r0, [r5, #12]
   13310:	lsl	r0, r0, #2
   13314:	bl	11adc <malloc@plt>
   13318:	cmp	r7, #0
   1331c:	str	r0, [r4, r6, lsl #2]
   13320:	ble	13344 <table_add_row@@Base+0x8c>
   13324:	mov	r4, #0
   13328:	mov	r2, r4
   1332c:	mov	r1, r6
   13330:	add	r4, r4, #1
   13334:	mov	r0, r5
   13338:	bl	143b8 <table_cell_init@@Base>
   1333c:	cmp	r7, r4
   13340:	bne	13328 <table_add_row@@Base+0x70>
   13344:	mov	r0, r5
   13348:	mov	r3, #2
   1334c:	mvn	r2, #0
   13350:	ldr	r1, [r5, #20]
   13354:	bl	125b8 <table_notify@@Base>
   13358:	ldr	r0, [r5, #20]
   1335c:	add	r3, r0, #1
   13360:	str	r3, [r5, #20]
   13364:	pop	{r4, r5, r6, r7, r8, pc}

00013368 <table_remove_row@@Base>:
   13368:	push	{r4, r5, r6, r7, r8, lr}
   1336c:	mov	r5, r0
   13370:	mov	r6, r1
   13374:	ldr	r7, [r0, #20]
   13378:	bl	126a8 <table_get_column_length@@Base>
   1337c:	subs	r8, r0, #0
   13380:	movgt	r4, #0
   13384:	ble	133c8 <table_remove_row@@Base+0x60>
   13388:	mov	r1, r4
   1338c:	mov	r0, r5
   13390:	bl	12718 <table_get_column_data_type@@Base>
   13394:	mov	r2, r4
   13398:	mov	r1, r6
   1339c:	add	r4, r4, #1
   133a0:	cmp	r0, #23
   133a4:	mov	r0, r5
   133a8:	beq	133c0 <table_remove_row@@Base+0x58>
   133ac:	bl	14e10 <table_get_cell_ptr@@Base>
   133b0:	ldr	r3, [r0]
   133b4:	subs	r0, r3, #0
   133b8:	beq	133c0 <table_remove_row@@Base+0x58>
   133bc:	bl	11ab8 <free@plt>
   133c0:	cmp	r8, r4
   133c4:	bne	13388 <table_remove_row@@Base+0x20>
   133c8:	ldr	r3, [r5, #16]
   133cc:	lsl	r4, r6, #2
   133d0:	ldr	r0, [r3, r6, lsl #2]
   133d4:	cmp	r0, #0
   133d8:	beq	133e0 <table_remove_row@@Base+0x78>
   133dc:	bl	11ab8 <free@plt>
   133e0:	sub	ip, r7, #1
   133e4:	cmp	r6, ip
   133e8:	movlt	r3, r6
   133ec:	bge	13410 <table_remove_row@@Base+0xa8>
   133f0:	ldr	r1, [r5, #16]
   133f4:	add	r2, r4, #4
   133f8:	add	r3, r3, #1
   133fc:	ldr	r0, [r1, r2]
   13400:	cmp	r3, ip
   13404:	str	r0, [r1, r4]
   13408:	mov	r4, r2
   1340c:	bne	133f0 <table_remove_row@@Base+0x88>
   13410:	ldr	r0, [r5, #20]
   13414:	ldr	r4, [r5, #24]
   13418:	sub	r0, r0, #1
   1341c:	str	r0, [r5, #20]
   13420:	mov	r1, r4
   13424:	bl	15014 <table_get_cell_ptr@@Base+0x204>
   13428:	cmp	r1, #0
   1342c:	bne	1344c <table_remove_row@@Base+0xe4>
   13430:	ldr	r1, [r5, #28]
   13434:	ldr	r0, [r5, #16]
   13438:	sub	r1, r1, r4
   1343c:	str	r1, [r5, #28]
   13440:	lsl	r1, r1, #2
   13444:	bl	11ac4 <realloc@plt>
   13448:	str	r0, [r5, #16]
   1344c:	mov	r0, r5
   13450:	mov	r1, r6
   13454:	mov	r3, #4
   13458:	mvn	r2, #0
   1345c:	bl	125b8 <table_notify@@Base>
   13460:	mov	r0, #0
   13464:	pop	{r4, r5, r6, r7, r8, pc}

00013468 <table_get_row_ptr@@Base>:
   13468:	ldr	r0, [r0, #16]
   1346c:	add	r0, r0, r1, lsl #2
   13470:	bx	lr

00013474 <table_set_row_ptr@@Base>:
   13474:	ldr	r3, [r0, #16]
   13478:	ldr	r2, [r2]
   1347c:	str	r2, [r3, r1, lsl #2]
   13480:	bx	lr

00013484 <table_set@@Base>:
   13484:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13488:	mov	r5, r0
   1348c:	mov	r6, r2
   13490:	ldr	r4, [sp, #32]
   13494:	mov	r9, r1
   13498:	mov	r7, r3
   1349c:	bl	14e10 <table_get_cell_ptr@@Base>
   134a0:	mov	r1, r6
   134a4:	mov	r8, r0
   134a8:	mov	r0, r5
   134ac:	bl	129f4 <table_get_col_ptr@@Base>
   134b0:	cmp	r4, #23
   134b4:	ldrls	pc, [pc, r4, lsl #2]
   134b8:	b	13530 <table_set@@Base+0xac>
   134bc:	ldrdeq	r3, [r1], -r4
   134c0:	andeq	r3, r1, r4, asr #13
   134c4:			; <UNDEFINED> instruction: 0x000136b4
   134c8:	andeq	r3, r1, r4, lsr #13
   134cc:	muleq	r1, r4, r6
   134d0:	andeq	r3, r1, r0, ror r6
   134d4:	andeq	r3, r1, r0, ror #12
   134d8:	andeq	r3, r1, r0, asr r6
   134dc:	andeq	r3, r1, r4, lsl r7
   134e0:	andeq	r3, r1, r4, lsl #14
   134e4:	strdeq	r3, [r1], -r4
   134e8:	andeq	r3, r1, r4, ror #13
   134ec:	andeq	r3, r1, r0, ror #14
   134f0:	andeq	r3, r1, r0, asr #14
   134f4:	andeq	r3, r1, r0, asr r7
   134f8:	andeq	r3, r1, r0, asr #12
   134fc:	andeq	r3, r1, ip, lsl r6
   13500:	andeq	r3, r1, ip, lsl #12
   13504:	andeq	r3, r1, r0, ror #11
   13508:	ldrdeq	r3, [r1], -r0
   1350c:	andeq	r3, r1, r0, asr #11
   13510:	andeq	r3, r1, r8, lsl #11
   13514:	andeq	r3, r1, r4, ror #10
   13518:	andeq	r3, r1, r8, lsr r5
   1351c:	bl	11adc <malloc@plt>
   13520:	cmp	r0, #0
   13524:	mov	r3, r0
   13528:	str	r0, [r8]
   1352c:	bne	1372c <table_set@@Base+0x2a8>
   13530:	mvn	r0, #0
   13534:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13538:	ldr	r3, [r0, #4]
   1353c:	cmp	r3, #23
   13540:	bne	13530 <table_set@@Base+0xac>
   13544:	str	r7, [r8]
   13548:	mov	r0, r5
   1354c:	mov	r2, r6
   13550:	mov	r1, r9
   13554:	mov	r3, #1
   13558:	bl	125b8 <table_notify@@Base>
   1355c:	mov	r0, #0
   13560:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13564:	ldr	r3, [r0, #4]
   13568:	cmp	r3, #22
   1356c:	bne	13530 <table_set@@Base+0xac>
   13570:	ldr	r0, [r8]
   13574:	cmp	r0, #0
   13578:	beq	13788 <table_set@@Base+0x304>
   1357c:	ldrb	r3, [r7]
   13580:	strb	r3, [r0]
   13584:	b	13548 <table_set@@Base+0xc4>
   13588:	ldr	r3, [r0, #4]
   1358c:	cmp	r3, #21
   13590:	bne	13530 <table_set@@Base+0xac>
   13594:	mov	r0, r7
   13598:	bl	11b00 <strlen@plt>
   1359c:	add	r1, r0, #1
   135a0:	ldr	r0, [r8]
   135a4:	bl	11ac4 <realloc@plt>
   135a8:	cmp	r0, #0
   135ac:	str	r0, [r8]
   135b0:	beq	13530 <table_set@@Base+0xac>
   135b4:	mov	r1, r7
   135b8:	bl	11ad0 <strcpy@plt>
   135bc:	b	13548 <table_set@@Base+0xc4>
   135c0:	ldr	r3, [r0, #4]
   135c4:	cmp	r3, #20
   135c8:	beq	13570 <table_set@@Base+0xec>
   135cc:	b	13530 <table_set@@Base+0xac>
   135d0:	ldr	r3, [r0, #4]
   135d4:	cmp	r3, #19
   135d8:	beq	13570 <table_set@@Base+0xec>
   135dc:	b	13530 <table_set@@Base+0xac>
   135e0:	ldr	r3, [r0, #4]
   135e4:	cmp	r3, #18
   135e8:	bne	13530 <table_set@@Base+0xac>
   135ec:	ldr	r0, [r8]
   135f0:	cmp	r0, #0
   135f4:	beq	137a0 <table_set@@Base+0x31c>
   135f8:	ldr	r2, [r7]
   135fc:	ldr	r3, [r7, #4]
   13600:	str	r2, [r0]
   13604:	str	r3, [r0, #4]
   13608:	b	13548 <table_set@@Base+0xc4>
   1360c:	ldr	r3, [r0, #4]
   13610:	cmp	r3, #17
   13614:	beq	135ec <table_set@@Base+0x168>
   13618:	b	13530 <table_set@@Base+0xac>
   1361c:	ldr	r3, [r0, #4]
   13620:	cmp	r3, #16
   13624:	bne	13530 <table_set@@Base+0xac>
   13628:	ldr	r0, [r8]
   1362c:	cmp	r0, #0
   13630:	beq	13770 <table_set@@Base+0x2ec>
   13634:	ldr	r3, [r7]
   13638:	str	r3, [r0]
   1363c:	b	13548 <table_set@@Base+0xc4>
   13640:	ldr	r3, [r0, #4]
   13644:	cmp	r3, #15
   13648:	beq	135ec <table_set@@Base+0x168>
   1364c:	b	13530 <table_set@@Base+0xac>
   13650:	ldr	r3, [r0, #4]
   13654:	cmp	r3, #7
   13658:	beq	13628 <table_set@@Base+0x1a4>
   1365c:	b	13530 <table_set@@Base+0xac>
   13660:	ldr	r3, [r0, #4]
   13664:	cmp	r3, #6
   13668:	beq	13628 <table_set@@Base+0x1a4>
   1366c:	b	13530 <table_set@@Base+0xac>
   13670:	ldr	r3, [r0, #4]
   13674:	cmp	r3, #5
   13678:	bne	13530 <table_set@@Base+0xac>
   1367c:	ldr	r0, [r8]
   13680:	cmp	r0, #0
   13684:	beq	137b8 <table_set@@Base+0x334>
   13688:	ldrh	r3, [r7]
   1368c:	strh	r3, [r0]
   13690:	b	13548 <table_set@@Base+0xc4>
   13694:	ldr	r3, [r0, #4]
   13698:	cmp	r3, #4
   1369c:	beq	1367c <table_set@@Base+0x1f8>
   136a0:	b	13530 <table_set@@Base+0xac>
   136a4:	ldr	r3, [r0, #4]
   136a8:	cmp	r3, #3
   136ac:	beq	13570 <table_set@@Base+0xec>
   136b0:	b	13530 <table_set@@Base+0xac>
   136b4:	ldr	r3, [r0, #4]
   136b8:	cmp	r3, #2
   136bc:	beq	13570 <table_set@@Base+0xec>
   136c0:	b	13530 <table_set@@Base+0xac>
   136c4:	ldr	r3, [r0, #4]
   136c8:	cmp	r3, #1
   136cc:	beq	13628 <table_set@@Base+0x1a4>
   136d0:	b	13530 <table_set@@Base+0xac>
   136d4:	ldr	r3, [r0, #4]
   136d8:	cmp	r3, #0
   136dc:	beq	13628 <table_set@@Base+0x1a4>
   136e0:	b	13530 <table_set@@Base+0xac>
   136e4:	ldr	r3, [r0, #4]
   136e8:	cmp	r3, #11
   136ec:	beq	1367c <table_set@@Base+0x1f8>
   136f0:	b	13530 <table_set@@Base+0xac>
   136f4:	ldr	r3, [r0, #4]
   136f8:	cmp	r3, #10
   136fc:	beq	1367c <table_set@@Base+0x1f8>
   13700:	b	13530 <table_set@@Base+0xac>
   13704:	ldr	r3, [r0, #4]
   13708:	cmp	r3, #9
   1370c:	beq	135ec <table_set@@Base+0x168>
   13710:	b	13530 <table_set@@Base+0xac>
   13714:	ldr	r0, [r0, #4]
   13718:	cmp	r0, #8
   1371c:	bne	13530 <table_set@@Base+0xac>
   13720:	ldr	r3, [r8]
   13724:	cmp	r3, #0
   13728:	beq	1351c <table_set@@Base+0x98>
   1372c:	ldr	r1, [r7]
   13730:	ldr	r2, [r7, #4]
   13734:	str	r1, [r3]
   13738:	str	r2, [r3, #4]
   1373c:	b	13548 <table_set@@Base+0xc4>
   13740:	ldr	r3, [r0, #4]
   13744:	cmp	r3, #13
   13748:	beq	13628 <table_set@@Base+0x1a4>
   1374c:	b	13530 <table_set@@Base+0xac>
   13750:	ldr	r3, [r0, #4]
   13754:	cmp	r3, #14
   13758:	beq	135ec <table_set@@Base+0x168>
   1375c:	b	13530 <table_set@@Base+0xac>
   13760:	ldr	r3, [r0, #4]
   13764:	cmp	r3, #12
   13768:	beq	13628 <table_set@@Base+0x1a4>
   1376c:	b	13530 <table_set@@Base+0xac>
   13770:	mov	r0, #4
   13774:	bl	11adc <malloc@plt>
   13778:	cmp	r0, #0
   1377c:	str	r0, [r8]
   13780:	bne	13634 <table_set@@Base+0x1b0>
   13784:	b	13530 <table_set@@Base+0xac>
   13788:	mov	r0, #1
   1378c:	bl	11adc <malloc@plt>
   13790:	cmp	r0, #0
   13794:	str	r0, [r8]
   13798:	bne	1357c <table_set@@Base+0xf8>
   1379c:	b	13530 <table_set@@Base+0xac>
   137a0:	mov	r0, #8
   137a4:	bl	11adc <malloc@plt>
   137a8:	cmp	r0, #0
   137ac:	str	r0, [r8]
   137b0:	bne	135f8 <table_set@@Base+0x174>
   137b4:	b	13530 <table_set@@Base+0xac>
   137b8:	mov	r0, #2
   137bc:	bl	11adc <malloc@plt>
   137c0:	cmp	r0, #0
   137c4:	str	r0, [r8]
   137c8:	bne	13688 <table_set@@Base+0x204>
   137cc:	b	13530 <table_set@@Base+0xac>

000137d0 <table_set_bool@@Base>:
   137d0:	push	{r4, r5, r6, r7, r8, lr}
   137d4:	mov	r5, r2
   137d8:	mov	r4, r0
   137dc:	mov	r8, r3
   137e0:	mov	r7, r1
   137e4:	bl	14e10 <table_get_cell_ptr@@Base>
   137e8:	mov	r1, r5
   137ec:	mov	r6, r0
   137f0:	mov	r0, r4
   137f4:	bl	129f4 <table_get_col_ptr@@Base>
   137f8:	ldr	r2, [r0, #4]
   137fc:	cmp	r2, #22
   13800:	bne	13844 <table_set_bool@@Base+0x74>
   13804:	ldr	r0, [r6]
   13808:	cmp	r0, #0
   1380c:	beq	13830 <table_set_bool@@Base+0x60>
   13810:	strb	r8, [r0]
   13814:	mov	r2, r5
   13818:	mov	r0, r4
   1381c:	mov	r1, r7
   13820:	mov	r3, #1
   13824:	bl	125b8 <table_notify@@Base>
   13828:	mov	r0, #0
   1382c:	pop	{r4, r5, r6, r7, r8, pc}
   13830:	mov	r0, #1
   13834:	bl	11adc <malloc@plt>
   13838:	cmp	r0, #0
   1383c:	str	r0, [r6]
   13840:	bne	13810 <table_set_bool@@Base+0x40>
   13844:	mvn	r0, #0
   13848:	pop	{r4, r5, r6, r7, r8, pc}

0001384c <table_set_int@@Base>:
   1384c:	push	{r4, r5, r6, r7, r8, lr}
   13850:	mov	r5, r2
   13854:	mov	r4, r0
   13858:	mov	r8, r3
   1385c:	mov	r7, r1
   13860:	bl	14e10 <table_get_cell_ptr@@Base>
   13864:	mov	r1, r5
   13868:	mov	r6, r0
   1386c:	mov	r0, r4
   13870:	bl	129f4 <table_get_col_ptr@@Base>
   13874:	ldr	r2, [r0, #4]
   13878:	cmp	r2, #0
   1387c:	bne	138c0 <table_set_int@@Base+0x74>
   13880:	ldr	r0, [r6]
   13884:	cmp	r0, #0
   13888:	beq	138ac <table_set_int@@Base+0x60>
   1388c:	str	r8, [r0]
   13890:	mov	r2, r5
   13894:	mov	r0, r4
   13898:	mov	r1, r7
   1389c:	mov	r3, #1
   138a0:	bl	125b8 <table_notify@@Base>
   138a4:	mov	r0, #0
   138a8:	pop	{r4, r5, r6, r7, r8, pc}
   138ac:	mov	r0, #4
   138b0:	bl	11adc <malloc@plt>
   138b4:	cmp	r0, #0
   138b8:	str	r0, [r6]
   138bc:	bne	1388c <table_set_int@@Base+0x40>
   138c0:	mvn	r0, #0
   138c4:	pop	{r4, r5, r6, r7, r8, pc}

000138c8 <table_set_uint@@Base>:
   138c8:	push	{r4, r5, r6, r7, r8, lr}
   138cc:	mov	r5, r2
   138d0:	mov	r4, r0
   138d4:	mov	r8, r3
   138d8:	mov	r7, r1
   138dc:	bl	14e10 <table_get_cell_ptr@@Base>
   138e0:	mov	r1, r5
   138e4:	mov	r6, r0
   138e8:	mov	r0, r4
   138ec:	bl	129f4 <table_get_col_ptr@@Base>
   138f0:	ldr	r2, [r0, #4]
   138f4:	cmp	r2, #1
   138f8:	bne	1393c <table_set_uint@@Base+0x74>
   138fc:	ldr	r0, [r6]
   13900:	cmp	r0, #0
   13904:	beq	13928 <table_set_uint@@Base+0x60>
   13908:	str	r8, [r0]
   1390c:	mov	r2, r5
   13910:	mov	r0, r4
   13914:	mov	r1, r7
   13918:	mov	r3, #1
   1391c:	bl	125b8 <table_notify@@Base>
   13920:	mov	r0, #0
   13924:	pop	{r4, r5, r6, r7, r8, pc}
   13928:	mov	r0, #4
   1392c:	bl	11adc <malloc@plt>
   13930:	cmp	r0, #0
   13934:	str	r0, [r6]
   13938:	bne	13908 <table_set_uint@@Base+0x40>
   1393c:	mvn	r0, #0
   13940:	pop	{r4, r5, r6, r7, r8, pc}

00013944 <table_set_int8@@Base>:
   13944:	push	{r4, r5, r6, r7, r8, lr}
   13948:	mov	r5, r2
   1394c:	mov	r4, r0
   13950:	mov	r8, r3
   13954:	mov	r7, r1
   13958:	bl	14e10 <table_get_cell_ptr@@Base>
   1395c:	mov	r1, r5
   13960:	mov	r6, r0
   13964:	mov	r0, r4
   13968:	bl	129f4 <table_get_col_ptr@@Base>
   1396c:	ldr	r2, [r0, #4]
   13970:	cmp	r2, #2
   13974:	bne	139b8 <table_set_int8@@Base+0x74>
   13978:	ldr	r0, [r6]
   1397c:	cmp	r0, #0
   13980:	beq	139a4 <table_set_int8@@Base+0x60>
   13984:	strb	r8, [r0]
   13988:	mov	r2, r5
   1398c:	mov	r0, r4
   13990:	mov	r1, r7
   13994:	mov	r3, #1
   13998:	bl	125b8 <table_notify@@Base>
   1399c:	mov	r0, #0
   139a0:	pop	{r4, r5, r6, r7, r8, pc}
   139a4:	mov	r0, #1
   139a8:	bl	11adc <malloc@plt>
   139ac:	cmp	r0, #0
   139b0:	str	r0, [r6]
   139b4:	bne	13984 <table_set_int8@@Base+0x40>
   139b8:	mvn	r0, #0
   139bc:	pop	{r4, r5, r6, r7, r8, pc}

000139c0 <table_set_uint8@@Base>:
   139c0:	push	{r4, r5, r6, r7, r8, lr}
   139c4:	mov	r5, r2
   139c8:	mov	r4, r0
   139cc:	mov	r8, r3
   139d0:	mov	r7, r1
   139d4:	bl	14e10 <table_get_cell_ptr@@Base>
   139d8:	mov	r1, r5
   139dc:	mov	r6, r0
   139e0:	mov	r0, r4
   139e4:	bl	129f4 <table_get_col_ptr@@Base>
   139e8:	ldr	r2, [r0, #4]
   139ec:	cmp	r2, #3
   139f0:	bne	13a34 <table_set_uint8@@Base+0x74>
   139f4:	ldr	r0, [r6]
   139f8:	cmp	r0, #0
   139fc:	beq	13a20 <table_set_uint8@@Base+0x60>
   13a00:	strb	r8, [r0]
   13a04:	mov	r2, r5
   13a08:	mov	r0, r4
   13a0c:	mov	r1, r7
   13a10:	mov	r3, #1
   13a14:	bl	125b8 <table_notify@@Base>
   13a18:	mov	r0, #0
   13a1c:	pop	{r4, r5, r6, r7, r8, pc}
   13a20:	mov	r0, #1
   13a24:	bl	11adc <malloc@plt>
   13a28:	cmp	r0, #0
   13a2c:	str	r0, [r6]
   13a30:	bne	13a00 <table_set_uint8@@Base+0x40>
   13a34:	mvn	r0, #0
   13a38:	pop	{r4, r5, r6, r7, r8, pc}

00013a3c <table_set_int16@@Base>:
   13a3c:	push	{r4, r5, r6, r7, r8, lr}
   13a40:	mov	r5, r2
   13a44:	mov	r4, r0
   13a48:	mov	r8, r3
   13a4c:	mov	r7, r1
   13a50:	bl	14e10 <table_get_cell_ptr@@Base>
   13a54:	mov	r1, r5
   13a58:	mov	r6, r0
   13a5c:	mov	r0, r4
   13a60:	bl	129f4 <table_get_col_ptr@@Base>
   13a64:	ldr	r2, [r0, #4]
   13a68:	cmp	r2, #4
   13a6c:	bne	13ab0 <table_set_int16@@Base+0x74>
   13a70:	ldr	r0, [r6]
   13a74:	cmp	r0, #0
   13a78:	beq	13a9c <table_set_int16@@Base+0x60>
   13a7c:	strh	r8, [r0]
   13a80:	mov	r2, r5
   13a84:	mov	r0, r4
   13a88:	mov	r1, r7
   13a8c:	mov	r3, #1
   13a90:	bl	125b8 <table_notify@@Base>
   13a94:	mov	r0, #0
   13a98:	pop	{r4, r5, r6, r7, r8, pc}
   13a9c:	mov	r0, #2
   13aa0:	bl	11adc <malloc@plt>
   13aa4:	cmp	r0, #0
   13aa8:	str	r0, [r6]
   13aac:	bne	13a7c <table_set_int16@@Base+0x40>
   13ab0:	mvn	r0, #0
   13ab4:	pop	{r4, r5, r6, r7, r8, pc}

00013ab8 <table_set_uint16@@Base>:
   13ab8:	push	{r4, r5, r6, r7, r8, lr}
   13abc:	mov	r5, r2
   13ac0:	mov	r4, r0
   13ac4:	mov	r8, r3
   13ac8:	mov	r7, r1
   13acc:	bl	14e10 <table_get_cell_ptr@@Base>
   13ad0:	mov	r1, r5
   13ad4:	mov	r6, r0
   13ad8:	mov	r0, r4
   13adc:	bl	129f4 <table_get_col_ptr@@Base>
   13ae0:	ldr	r2, [r0, #4]
   13ae4:	cmp	r2, #5
   13ae8:	bne	13b2c <table_set_uint16@@Base+0x74>
   13aec:	ldr	r0, [r6]
   13af0:	cmp	r0, #0
   13af4:	beq	13b18 <table_set_uint16@@Base+0x60>
   13af8:	strh	r8, [r0]
   13afc:	mov	r2, r5
   13b00:	mov	r0, r4
   13b04:	mov	r1, r7
   13b08:	mov	r3, #1
   13b0c:	bl	125b8 <table_notify@@Base>
   13b10:	mov	r0, #0
   13b14:	pop	{r4, r5, r6, r7, r8, pc}
   13b18:	mov	r0, #2
   13b1c:	bl	11adc <malloc@plt>
   13b20:	cmp	r0, #0
   13b24:	str	r0, [r6]
   13b28:	bne	13af8 <table_set_uint16@@Base+0x40>
   13b2c:	mvn	r0, #0
   13b30:	pop	{r4, r5, r6, r7, r8, pc}

00013b34 <table_set_int32@@Base>:
   13b34:	push	{r4, r5, r6, r7, r8, lr}
   13b38:	mov	r5, r2
   13b3c:	mov	r4, r0
   13b40:	mov	r8, r3
   13b44:	mov	r7, r1
   13b48:	bl	14e10 <table_get_cell_ptr@@Base>
   13b4c:	mov	r1, r5
   13b50:	mov	r6, r0
   13b54:	mov	r0, r4
   13b58:	bl	129f4 <table_get_col_ptr@@Base>
   13b5c:	ldr	r2, [r0, #4]
   13b60:	cmp	r2, #6
   13b64:	bne	13ba8 <table_set_int32@@Base+0x74>
   13b68:	ldr	r0, [r6]
   13b6c:	cmp	r0, #0
   13b70:	beq	13b94 <table_set_int32@@Base+0x60>
   13b74:	str	r8, [r0]
   13b78:	mov	r2, r5
   13b7c:	mov	r0, r4
   13b80:	mov	r1, r7
   13b84:	mov	r3, #1
   13b88:	bl	125b8 <table_notify@@Base>
   13b8c:	mov	r0, #0
   13b90:	pop	{r4, r5, r6, r7, r8, pc}
   13b94:	mov	r0, #4
   13b98:	bl	11adc <malloc@plt>
   13b9c:	cmp	r0, #0
   13ba0:	str	r0, [r6]
   13ba4:	bne	13b74 <table_set_int32@@Base+0x40>
   13ba8:	mvn	r0, #0
   13bac:	pop	{r4, r5, r6, r7, r8, pc}

00013bb0 <table_set_uint32@@Base>:
   13bb0:	push	{r4, r5, r6, r7, r8, lr}
   13bb4:	mov	r5, r2
   13bb8:	mov	r4, r0
   13bbc:	mov	r8, r3
   13bc0:	mov	r7, r1
   13bc4:	bl	14e10 <table_get_cell_ptr@@Base>
   13bc8:	mov	r1, r5
   13bcc:	mov	r6, r0
   13bd0:	mov	r0, r4
   13bd4:	bl	129f4 <table_get_col_ptr@@Base>
   13bd8:	ldr	r2, [r0, #4]
   13bdc:	cmp	r2, #7
   13be0:	bne	13c24 <table_set_uint32@@Base+0x74>
   13be4:	ldr	r0, [r6]
   13be8:	cmp	r0, #0
   13bec:	beq	13c10 <table_set_uint32@@Base+0x60>
   13bf0:	str	r8, [r0]
   13bf4:	mov	r2, r5
   13bf8:	mov	r0, r4
   13bfc:	mov	r1, r7
   13c00:	mov	r3, #1
   13c04:	bl	125b8 <table_notify@@Base>
   13c08:	mov	r0, #0
   13c0c:	pop	{r4, r5, r6, r7, r8, pc}
   13c10:	mov	r0, #4
   13c14:	bl	11adc <malloc@plt>
   13c18:	cmp	r0, #0
   13c1c:	str	r0, [r6]
   13c20:	bne	13bf0 <table_set_uint32@@Base+0x40>
   13c24:	mvn	r0, #0
   13c28:	pop	{r4, r5, r6, r7, r8, pc}

00013c2c <table_set_int64@@Base>:
   13c2c:	push	{r4, r5, r6, r7, r8, lr}
   13c30:	mov	r5, r2
   13c34:	mov	r4, r0
   13c38:	mov	r7, r1
   13c3c:	bl	14e10 <table_get_cell_ptr@@Base>
   13c40:	mov	r1, r5
   13c44:	mov	r6, r0
   13c48:	mov	r0, r4
   13c4c:	bl	129f4 <table_get_col_ptr@@Base>
   13c50:	ldr	r0, [r0, #4]
   13c54:	cmp	r0, #8
   13c58:	bne	13ca8 <table_set_int64@@Base+0x7c>
   13c5c:	ldr	ip, [r6]
   13c60:	cmp	ip, #0
   13c64:	beq	13c94 <table_set_int64@@Base+0x68>
   13c68:	add	r3, sp, #24
   13c6c:	mov	r2, r5
   13c70:	ldm	r3!, {r0, r1}
   13c74:	mov	r3, #1
   13c78:	str	r0, [ip]
   13c7c:	str	r1, [ip, #4]
   13c80:	mov	r0, r4
   13c84:	mov	r1, r7
   13c88:	bl	125b8 <table_notify@@Base>
   13c8c:	mov	r0, #0
   13c90:	pop	{r4, r5, r6, r7, r8, pc}
   13c94:	bl	11adc <malloc@plt>
   13c98:	cmp	r0, #0
   13c9c:	mov	ip, r0
   13ca0:	str	r0, [r6]
   13ca4:	bne	13c68 <table_set_int64@@Base+0x3c>
   13ca8:	mvn	r0, #0
   13cac:	pop	{r4, r5, r6, r7, r8, pc}

00013cb0 <table_set_uint64@@Base>:
   13cb0:	push	{r4, r5, r6, r7, r8, lr}
   13cb4:	mov	r5, r2
   13cb8:	mov	r4, r0
   13cbc:	mov	r7, r1
   13cc0:	bl	14e10 <table_get_cell_ptr@@Base>
   13cc4:	mov	r1, r5
   13cc8:	mov	r6, r0
   13ccc:	mov	r0, r4
   13cd0:	bl	129f4 <table_get_col_ptr@@Base>
   13cd4:	ldr	r3, [r0, #4]
   13cd8:	cmp	r3, #9
   13cdc:	bne	13d30 <table_set_uint64@@Base+0x80>
   13ce0:	ldr	ip, [r6]
   13ce4:	cmp	ip, #0
   13ce8:	beq	13d18 <table_set_uint64@@Base+0x68>
   13cec:	add	r3, sp, #24
   13cf0:	mov	r2, r5
   13cf4:	ldm	r3!, {r0, r1}
   13cf8:	mov	r3, #1
   13cfc:	str	r0, [ip]
   13d00:	str	r1, [ip, #4]
   13d04:	mov	r0, r4
   13d08:	mov	r1, r7
   13d0c:	bl	125b8 <table_notify@@Base>
   13d10:	mov	r0, #0
   13d14:	pop	{r4, r5, r6, r7, r8, pc}
   13d18:	mov	r0, #8
   13d1c:	bl	11adc <malloc@plt>
   13d20:	cmp	r0, #0
   13d24:	mov	ip, r0
   13d28:	str	r0, [r6]
   13d2c:	bne	13cec <table_set_uint64@@Base+0x3c>
   13d30:	mvn	r0, #0
   13d34:	pop	{r4, r5, r6, r7, r8, pc}

00013d38 <table_set_short@@Base>:
   13d38:	push	{r4, r5, r6, r7, r8, lr}
   13d3c:	mov	r5, r2
   13d40:	mov	r4, r0
   13d44:	mov	r8, r3
   13d48:	mov	r7, r1
   13d4c:	bl	14e10 <table_get_cell_ptr@@Base>
   13d50:	mov	r1, r5
   13d54:	mov	r6, r0
   13d58:	mov	r0, r4
   13d5c:	bl	129f4 <table_get_col_ptr@@Base>
   13d60:	ldr	r2, [r0, #4]
   13d64:	cmp	r2, #10
   13d68:	bne	13dac <table_set_short@@Base+0x74>
   13d6c:	ldr	r0, [r6]
   13d70:	cmp	r0, #0
   13d74:	beq	13d98 <table_set_short@@Base+0x60>
   13d78:	strh	r8, [r0]
   13d7c:	mov	r2, r5
   13d80:	mov	r0, r4
   13d84:	mov	r1, r7
   13d88:	mov	r3, #1
   13d8c:	bl	125b8 <table_notify@@Base>
   13d90:	mov	r0, #0
   13d94:	pop	{r4, r5, r6, r7, r8, pc}
   13d98:	mov	r0, #2
   13d9c:	bl	11adc <malloc@plt>
   13da0:	cmp	r0, #0
   13da4:	str	r0, [r6]
   13da8:	bne	13d78 <table_set_short@@Base+0x40>
   13dac:	mvn	r0, #0
   13db0:	pop	{r4, r5, r6, r7, r8, pc}

00013db4 <table_set_ushort@@Base>:
   13db4:	push	{r4, r5, r6, r7, r8, lr}
   13db8:	mov	r5, r2
   13dbc:	mov	r4, r0
   13dc0:	mov	r8, r3
   13dc4:	mov	r7, r1
   13dc8:	bl	14e10 <table_get_cell_ptr@@Base>
   13dcc:	mov	r1, r5
   13dd0:	mov	r6, r0
   13dd4:	mov	r0, r4
   13dd8:	bl	129f4 <table_get_col_ptr@@Base>
   13ddc:	ldr	r2, [r0, #4]
   13de0:	cmp	r2, #11
   13de4:	bne	13e28 <table_set_ushort@@Base+0x74>
   13de8:	ldr	r0, [r6]
   13dec:	cmp	r0, #0
   13df0:	beq	13e14 <table_set_ushort@@Base+0x60>
   13df4:	strh	r8, [r0]
   13df8:	mov	r2, r5
   13dfc:	mov	r0, r4
   13e00:	mov	r1, r7
   13e04:	mov	r3, #1
   13e08:	bl	125b8 <table_notify@@Base>
   13e0c:	mov	r0, #0
   13e10:	pop	{r4, r5, r6, r7, r8, pc}
   13e14:	mov	r0, #2
   13e18:	bl	11adc <malloc@plt>
   13e1c:	cmp	r0, #0
   13e20:	str	r0, [r6]
   13e24:	bne	13df4 <table_set_ushort@@Base+0x40>
   13e28:	mvn	r0, #0
   13e2c:	pop	{r4, r5, r6, r7, r8, pc}

00013e30 <table_set_long@@Base>:
   13e30:	push	{r4, r5, r6, r7, r8, lr}
   13e34:	mov	r5, r2
   13e38:	mov	r4, r0
   13e3c:	mov	r8, r3
   13e40:	mov	r7, r1
   13e44:	bl	14e10 <table_get_cell_ptr@@Base>
   13e48:	mov	r1, r5
   13e4c:	mov	r6, r0
   13e50:	mov	r0, r4
   13e54:	bl	129f4 <table_get_col_ptr@@Base>
   13e58:	ldr	r2, [r0, #4]
   13e5c:	cmp	r2, #12
   13e60:	bne	13ea4 <table_set_long@@Base+0x74>
   13e64:	ldr	r0, [r6]
   13e68:	cmp	r0, #0
   13e6c:	beq	13e90 <table_set_long@@Base+0x60>
   13e70:	str	r8, [r0]
   13e74:	mov	r2, r5
   13e78:	mov	r0, r4
   13e7c:	mov	r1, r7
   13e80:	mov	r3, #1
   13e84:	bl	125b8 <table_notify@@Base>
   13e88:	mov	r0, #0
   13e8c:	pop	{r4, r5, r6, r7, r8, pc}
   13e90:	mov	r0, #4
   13e94:	bl	11adc <malloc@plt>
   13e98:	cmp	r0, #0
   13e9c:	str	r0, [r6]
   13ea0:	bne	13e70 <table_set_long@@Base+0x40>
   13ea4:	mvn	r0, #0
   13ea8:	pop	{r4, r5, r6, r7, r8, pc}

00013eac <table_set_ulong@@Base>:
   13eac:	push	{r4, r5, r6, r7, r8, lr}
   13eb0:	mov	r5, r2
   13eb4:	mov	r4, r0
   13eb8:	mov	r8, r3
   13ebc:	mov	r7, r1
   13ec0:	bl	14e10 <table_get_cell_ptr@@Base>
   13ec4:	mov	r1, r5
   13ec8:	mov	r6, r0
   13ecc:	mov	r0, r4
   13ed0:	bl	129f4 <table_get_col_ptr@@Base>
   13ed4:	ldr	r2, [r0, #4]
   13ed8:	cmp	r2, #13
   13edc:	bne	13f20 <table_set_ulong@@Base+0x74>
   13ee0:	ldr	r0, [r6]
   13ee4:	cmp	r0, #0
   13ee8:	beq	13f0c <table_set_ulong@@Base+0x60>
   13eec:	str	r8, [r0]
   13ef0:	mov	r2, r5
   13ef4:	mov	r0, r4
   13ef8:	mov	r1, r7
   13efc:	mov	r3, #1
   13f00:	bl	125b8 <table_notify@@Base>
   13f04:	mov	r0, #0
   13f08:	pop	{r4, r5, r6, r7, r8, pc}
   13f0c:	mov	r0, #4
   13f10:	bl	11adc <malloc@plt>
   13f14:	cmp	r0, #0
   13f18:	str	r0, [r6]
   13f1c:	bne	13eec <table_set_ulong@@Base+0x40>
   13f20:	mvn	r0, #0
   13f24:	pop	{r4, r5, r6, r7, r8, pc}

00013f28 <table_set_llong@@Base>:
   13f28:	push	{r4, r5, r6, r7, r8, lr}
   13f2c:	mov	r5, r2
   13f30:	mov	r4, r0
   13f34:	mov	r7, r1
   13f38:	bl	14e10 <table_get_cell_ptr@@Base>
   13f3c:	mov	r1, r5
   13f40:	mov	r6, r0
   13f44:	mov	r0, r4
   13f48:	bl	129f4 <table_get_col_ptr@@Base>
   13f4c:	ldr	r3, [r0, #4]
   13f50:	cmp	r3, #14
   13f54:	bne	13fa8 <table_set_llong@@Base+0x80>
   13f58:	ldr	ip, [r6]
   13f5c:	cmp	ip, #0
   13f60:	beq	13f90 <table_set_llong@@Base+0x68>
   13f64:	add	r3, sp, #24
   13f68:	mov	r2, r5
   13f6c:	ldm	r3!, {r0, r1}
   13f70:	mov	r3, #1
   13f74:	str	r0, [ip]
   13f78:	str	r1, [ip, #4]
   13f7c:	mov	r0, r4
   13f80:	mov	r1, r7
   13f84:	bl	125b8 <table_notify@@Base>
   13f88:	mov	r0, #0
   13f8c:	pop	{r4, r5, r6, r7, r8, pc}
   13f90:	mov	r0, #8
   13f94:	bl	11adc <malloc@plt>
   13f98:	cmp	r0, #0
   13f9c:	mov	ip, r0
   13fa0:	str	r0, [r6]
   13fa4:	bne	13f64 <table_set_llong@@Base+0x3c>
   13fa8:	mvn	r0, #0
   13fac:	pop	{r4, r5, r6, r7, r8, pc}

00013fb0 <table_set_ullong@@Base>:
   13fb0:	push	{r4, r5, r6, r7, r8, lr}
   13fb4:	mov	r5, r2
   13fb8:	mov	r4, r0
   13fbc:	mov	r7, r1
   13fc0:	bl	14e10 <table_get_cell_ptr@@Base>
   13fc4:	mov	r1, r5
   13fc8:	mov	r6, r0
   13fcc:	mov	r0, r4
   13fd0:	bl	129f4 <table_get_col_ptr@@Base>
   13fd4:	ldr	r3, [r0, #4]
   13fd8:	cmp	r3, #15
   13fdc:	bne	14030 <table_set_ullong@@Base+0x80>
   13fe0:	ldr	ip, [r6]
   13fe4:	cmp	ip, #0
   13fe8:	beq	14018 <table_set_ullong@@Base+0x68>
   13fec:	add	r3, sp, #24
   13ff0:	mov	r2, r5
   13ff4:	ldm	r3!, {r0, r1}
   13ff8:	mov	r3, #1
   13ffc:	str	r0, [ip]
   14000:	str	r1, [ip, #4]
   14004:	mov	r0, r4
   14008:	mov	r1, r7
   1400c:	bl	125b8 <table_notify@@Base>
   14010:	mov	r0, #0
   14014:	pop	{r4, r5, r6, r7, r8, pc}
   14018:	mov	r0, #8
   1401c:	bl	11adc <malloc@plt>
   14020:	cmp	r0, #0
   14024:	mov	ip, r0
   14028:	str	r0, [r6]
   1402c:	bne	13fec <table_set_ullong@@Base+0x3c>
   14030:	mvn	r0, #0
   14034:	pop	{r4, r5, r6, r7, r8, pc}

00014038 <table_set_float@@Base>:
   14038:	push	{r4, r5, r6, r7, r8, lr}
   1403c:	mov	r5, r2
   14040:	mov	r4, r0
   14044:	mov	r7, r1
   14048:	vmov	r8, s0
   1404c:	bl	14e10 <table_get_cell_ptr@@Base>
   14050:	mov	r1, r5
   14054:	mov	r6, r0
   14058:	mov	r0, r4
   1405c:	bl	129f4 <table_get_col_ptr@@Base>
   14060:	ldr	r3, [r0, #4]
   14064:	cmp	r3, #16
   14068:	bne	140ac <table_set_float@@Base+0x74>
   1406c:	ldr	r0, [r6]
   14070:	cmp	r0, #0
   14074:	beq	14098 <table_set_float@@Base+0x60>
   14078:	str	r8, [r0]
   1407c:	mov	r2, r5
   14080:	mov	r0, r4
   14084:	mov	r1, r7
   14088:	mov	r3, #1
   1408c:	bl	125b8 <table_notify@@Base>
   14090:	mov	r0, #0
   14094:	pop	{r4, r5, r6, r7, r8, pc}
   14098:	mov	r0, #4
   1409c:	bl	11adc <malloc@plt>
   140a0:	cmp	r0, #0
   140a4:	str	r0, [r6]
   140a8:	bne	14078 <table_set_float@@Base+0x40>
   140ac:	mvn	r0, #0
   140b0:	pop	{r4, r5, r6, r7, r8, pc}

000140b4 <table_set_double@@Base>:
   140b4:	push	{r4, r5, r6, r7, lr}
   140b8:	sub	sp, sp, #12
   140bc:	mov	r5, r2
   140c0:	mov	r4, r0
   140c4:	vstr	d0, [sp]
   140c8:	mov	r7, r1
   140cc:	bl	14e10 <table_get_cell_ptr@@Base>
   140d0:	mov	r1, r5
   140d4:	mov	r6, r0
   140d8:	mov	r0, r4
   140dc:	bl	129f4 <table_get_col_ptr@@Base>
   140e0:	ldr	r3, [r0, #4]
   140e4:	cmp	r3, #17
   140e8:	bne	14140 <table_set_double@@Base+0x8c>
   140ec:	ldr	ip, [r6]
   140f0:	cmp	ip, #0
   140f4:	beq	14128 <table_set_double@@Base+0x74>
   140f8:	mov	r3, sp
   140fc:	mov	r2, r5
   14100:	ldm	r3!, {r0, r1}
   14104:	mov	r3, #1
   14108:	str	r0, [ip]
   1410c:	str	r1, [ip, #4]
   14110:	mov	r0, r4
   14114:	mov	r1, r7
   14118:	bl	125b8 <table_notify@@Base>
   1411c:	mov	r0, #0
   14120:	add	sp, sp, #12
   14124:	pop	{r4, r5, r6, r7, pc}
   14128:	mov	r0, #8
   1412c:	bl	11adc <malloc@plt>
   14130:	cmp	r0, #0
   14134:	mov	ip, r0
   14138:	str	r0, [r6]
   1413c:	bne	140f8 <table_set_double@@Base+0x44>
   14140:	mvn	r0, #0
   14144:	add	sp, sp, #12
   14148:	pop	{r4, r5, r6, r7, pc}

0001414c <table_set_ldouble@@Base>:
   1414c:	push	{r4, r5, r6, r7, lr}
   14150:	sub	sp, sp, #12
   14154:	mov	r5, r2
   14158:	mov	r4, r0
   1415c:	vstr	d0, [sp]
   14160:	mov	r7, r1
   14164:	bl	14e10 <table_get_cell_ptr@@Base>
   14168:	mov	r1, r5
   1416c:	mov	r6, r0
   14170:	mov	r0, r4
   14174:	bl	129f4 <table_get_col_ptr@@Base>
   14178:	ldr	r3, [r0, #4]
   1417c:	cmp	r3, #18
   14180:	bne	141d8 <table_set_ldouble@@Base+0x8c>
   14184:	ldr	ip, [r6]
   14188:	cmp	ip, #0
   1418c:	beq	141c0 <table_set_ldouble@@Base+0x74>
   14190:	mov	r3, sp
   14194:	mov	r2, r5
   14198:	ldm	r3!, {r0, r1}
   1419c:	mov	r3, #1
   141a0:	str	r0, [ip]
   141a4:	str	r1, [ip, #4]
   141a8:	mov	r0, r4
   141ac:	mov	r1, r7
   141b0:	bl	125b8 <table_notify@@Base>
   141b4:	mov	r0, #0
   141b8:	add	sp, sp, #12
   141bc:	pop	{r4, r5, r6, r7, pc}
   141c0:	mov	r0, #8
   141c4:	bl	11adc <malloc@plt>
   141c8:	cmp	r0, #0
   141cc:	mov	ip, r0
   141d0:	str	r0, [r6]
   141d4:	bne	14190 <table_set_ldouble@@Base+0x44>
   141d8:	mvn	r0, #0
   141dc:	add	sp, sp, #12
   141e0:	pop	{r4, r5, r6, r7, pc}

000141e4 <table_set_string@@Base>:
   141e4:	push	{r4, r5, r6, r7, r8, lr}
   141e8:	mov	r5, r2
   141ec:	mov	r7, r3
   141f0:	mov	r4, r0
   141f4:	mov	r8, r1
   141f8:	bl	14e10 <table_get_cell_ptr@@Base>
   141fc:	mov	r1, r5
   14200:	mov	r6, r0
   14204:	mov	r0, r4
   14208:	bl	129f4 <table_get_col_ptr@@Base>
   1420c:	ldr	r3, [r0, #4]
   14210:	cmp	r3, #21
   14214:	bne	1425c <table_set_string@@Base+0x78>
   14218:	mov	r0, r7
   1421c:	bl	11b00 <strlen@plt>
   14220:	add	r1, r0, #1
   14224:	ldr	r0, [r6]
   14228:	bl	11ac4 <realloc@plt>
   1422c:	cmp	r0, #0
   14230:	str	r0, [r6]
   14234:	beq	1425c <table_set_string@@Base+0x78>
   14238:	mov	r1, r7
   1423c:	bl	11ad0 <strcpy@plt>
   14240:	mov	r0, r4
   14244:	mov	r2, r5
   14248:	mov	r1, r8
   1424c:	mov	r3, #1
   14250:	bl	125b8 <table_notify@@Base>
   14254:	mov	r0, #0
   14258:	pop	{r4, r5, r6, r7, r8, pc}
   1425c:	mvn	r0, #0
   14260:	pop	{r4, r5, r6, r7, r8, pc}

00014264 <table_set_char@@Base>:
   14264:	push	{r4, r5, r6, r7, r8, lr}
   14268:	mov	r5, r2
   1426c:	mov	r4, r0
   14270:	mov	r8, r3
   14274:	mov	r7, r1
   14278:	bl	14e10 <table_get_cell_ptr@@Base>
   1427c:	mov	r1, r5
   14280:	mov	r6, r0
   14284:	mov	r0, r4
   14288:	bl	129f4 <table_get_col_ptr@@Base>
   1428c:	ldr	r2, [r0, #4]
   14290:	cmp	r2, #19
   14294:	bne	142d8 <table_set_char@@Base+0x74>
   14298:	ldr	r0, [r6]
   1429c:	cmp	r0, #0
   142a0:	beq	142c4 <table_set_char@@Base+0x60>
   142a4:	strb	r8, [r0]
   142a8:	mov	r2, r5
   142ac:	mov	r0, r4
   142b0:	mov	r1, r7
   142b4:	mov	r3, #1
   142b8:	bl	125b8 <table_notify@@Base>
   142bc:	mov	r0, #0
   142c0:	pop	{r4, r5, r6, r7, r8, pc}
   142c4:	mov	r0, #1
   142c8:	bl	11adc <malloc@plt>
   142cc:	cmp	r0, #0
   142d0:	str	r0, [r6]
   142d4:	bne	142a4 <table_set_char@@Base+0x40>
   142d8:	mvn	r0, #0
   142dc:	pop	{r4, r5, r6, r7, r8, pc}

000142e0 <table_set_uchar@@Base>:
   142e0:	push	{r4, r5, r6, r7, r8, lr}
   142e4:	mov	r5, r2
   142e8:	mov	r4, r0
   142ec:	mov	r8, r3
   142f0:	mov	r7, r1
   142f4:	bl	14e10 <table_get_cell_ptr@@Base>
   142f8:	mov	r1, r5
   142fc:	mov	r6, r0
   14300:	mov	r0, r4
   14304:	bl	129f4 <table_get_col_ptr@@Base>
   14308:	ldr	r2, [r0, #4]
   1430c:	cmp	r2, #20
   14310:	bne	14354 <table_set_uchar@@Base+0x74>
   14314:	ldr	r0, [r6]
   14318:	cmp	r0, #0
   1431c:	beq	14340 <table_set_uchar@@Base+0x60>
   14320:	strb	r8, [r0]
   14324:	mov	r2, r5
   14328:	mov	r0, r4
   1432c:	mov	r1, r7
   14330:	mov	r3, #1
   14334:	bl	125b8 <table_notify@@Base>
   14338:	mov	r0, #0
   1433c:	pop	{r4, r5, r6, r7, r8, pc}
   14340:	mov	r0, #1
   14344:	bl	11adc <malloc@plt>
   14348:	cmp	r0, #0
   1434c:	str	r0, [r6]
   14350:	bne	14320 <table_set_uchar@@Base+0x40>
   14354:	mvn	r0, #0
   14358:	pop	{r4, r5, r6, r7, r8, pc}

0001435c <table_set_ptr@@Base>:
   1435c:	push	{r4, r5, r6, r7, r8, lr}
   14360:	mov	r5, r2
   14364:	mov	r4, r0
   14368:	mov	r8, r3
   1436c:	mov	r6, r1
   14370:	bl	14e10 <table_get_cell_ptr@@Base>
   14374:	mov	r1, r5
   14378:	mov	r7, r0
   1437c:	mov	r0, r4
   14380:	bl	129f4 <table_get_col_ptr@@Base>
   14384:	ldr	r2, [r0, #4]
   14388:	cmp	r2, #23
   1438c:	bne	143b0 <table_set_ptr@@Base+0x54>
   14390:	mov	r0, r4
   14394:	str	r8, [r7]
   14398:	mov	r2, r5
   1439c:	mov	r1, r6
   143a0:	mov	r3, #1
   143a4:	bl	125b8 <table_notify@@Base>
   143a8:	mov	r0, #0
   143ac:	pop	{r4, r5, r6, r7, r8, pc}
   143b0:	mvn	r0, #0
   143b4:	pop	{r4, r5, r6, r7, r8, pc}

000143b8 <table_cell_init@@Base>:
   143b8:	push	{r4, lr}
   143bc:	mov	r4, r2
   143c0:	bl	13468 <table_get_row_ptr@@Base>
   143c4:	mov	r2, #0
   143c8:	ldr	r3, [r0]
   143cc:	str	r2, [r3, r4, lsl #2]
   143d0:	pop	{r4, pc}

000143d4 <table_cell_destroy@@Base>:
   143d4:	push	{r4, r5, r6, lr}
   143d8:	mov	r6, r1
   143dc:	mov	r1, r2
   143e0:	mov	r4, r2
   143e4:	mov	r5, r0
   143e8:	bl	12718 <table_get_column_data_type@@Base>
   143ec:	cmp	r0, #23
   143f0:	popeq	{r4, r5, r6, pc}
   143f4:	mov	r1, r6
   143f8:	mov	r0, r5
   143fc:	bl	13468 <table_get_row_ptr@@Base>
   14400:	ldr	r3, [r0]
   14404:	ldr	r0, [r3, r4, lsl #2]
   14408:	cmp	r0, #0
   1440c:	popeq	{r4, r5, r6, pc}
   14410:	pop	{r4, r5, r6, lr}
   14414:	b	11ab8 <free@plt>

00014418 <table_cell_to_buffer@@Base>:
   14418:	push	{r4, r5, r6, r7, lr}
   1441c:	mov	r7, r1
   14420:	sub	sp, sp, #12
   14424:	mov	r1, r2
   14428:	mov	r4, r2
   1442c:	mov	r5, r3
   14430:	mov	r6, r0
   14434:	bl	12718 <table_get_column_data_type@@Base>
   14438:	cmp	r0, #23
   1443c:	ldrls	pc, [pc, r0, lsl #2]
   14440:	b	144c8 <table_cell_to_buffer@@Base+0xb0>
   14444:	muleq	r1, ip, r7
   14448:	andeq	r4, r1, r8, lsl #15
   1444c:	andeq	r4, r1, r4, ror r7
   14450:	andeq	r4, r1, r0, ror #14
   14454:	andeq	r4, r1, ip, asr #14
   14458:	andeq	r4, r1, r8, lsr r7
   1445c:	andeq	r4, r1, r4, lsr #14
   14460:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14464:	andeq	r4, r1, r0, ror #13
   14468:	andeq	r4, r1, ip, asr #13
   1446c:	andeq	r4, r1, r4, lsr #13
   14470:	andeq	r4, r1, ip, ror r6
   14474:	andeq	r4, r1, r4, asr r6
   14478:	andeq	r4, r1, ip, lsr #12
   1447c:	andeq	r4, r1, r4, lsl #12
   14480:	ldrdeq	r4, [r1], -ip
   14484:			; <UNDEFINED> instruction: 0x000145b0
   14488:	andeq	r4, r1, r8, lsl #11
   1448c:	andeq	r4, r1, r0, ror #10
   14490:	andeq	r4, r1, ip, asr #10
   14494:	andeq	r4, r1, r4, lsr #10
   14498:	strdeq	r4, [r1], -ip
   1449c:	andeq	r4, r1, r4, lsr #9
   144a0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   144a4:	mov	r2, r4
   144a8:	mov	r1, r7
   144ac:	mov	r0, r6
   144b0:	bl	13064 <table_get_bool@@Base>
   144b4:	mov	r3, r0
   144b8:	ldr	r2, [pc, #752]	; 147b0 <table_cell_to_buffer@@Base+0x398>
   144bc:	mov	r0, r5
   144c0:	ldr	r1, [sp, #32]
   144c4:	bl	11b0c <snprintf@plt>
   144c8:	mov	r0, #0
   144cc:	add	sp, sp, #12
   144d0:	pop	{r4, r5, r6, r7, pc}
   144d4:	mov	r2, r4
   144d8:	mov	r1, r7
   144dc:	mov	r0, r6
   144e0:	bl	1322c <table_get_ptr@@Base>
   144e4:	ldr	r2, [pc, #712]	; 147b4 <table_cell_to_buffer@@Base+0x39c>
   144e8:	ldr	r1, [sp, #32]
   144ec:	mov	r3, r0
   144f0:	mov	r0, r5
   144f4:	bl	11b0c <snprintf@plt>
   144f8:	b	144c8 <table_cell_to_buffer@@Base+0xb0>
   144fc:	mov	r2, r4
   14500:	mov	r1, r7
   14504:	mov	r0, r6
   14508:	bl	1321c <table_get_string@@Base>
   1450c:	ldr	r2, [pc, #676]	; 147b8 <table_cell_to_buffer@@Base+0x3a0>
   14510:	ldr	r1, [sp, #32]
   14514:	mov	r3, r0
   14518:	mov	r0, r5
   1451c:	bl	11b0c <snprintf@plt>
   14520:	b	144c8 <table_cell_to_buffer@@Base+0xb0>
   14524:	mov	r2, r4
   14528:	mov	r1, r7
   1452c:	mov	r0, r6
   14530:	bl	13208 <table_get_uchar@@Base>
   14534:	mov	r3, r0
   14538:	ldr	r2, [pc, #636]	; 147bc <table_cell_to_buffer@@Base+0x3a4>
   1453c:	mov	r0, r5
   14540:	ldr	r1, [sp, #32]
   14544:	bl	11b0c <snprintf@plt>
   14548:	b	144c8 <table_cell_to_buffer@@Base+0xb0>
   1454c:	mov	r2, r4
   14550:	mov	r1, r7
   14554:	mov	r0, r6
   14558:	bl	131f4 <table_get_char@@Base>
   1455c:	b	14534 <table_cell_to_buffer@@Base+0x11c>
   14560:	mov	r2, r4
   14564:	mov	r1, r7
   14568:	mov	r0, r6
   1456c:	bl	131e0 <table_get_ldouble@@Base>
   14570:	mov	r0, r5
   14574:	ldr	r2, [pc, #580]	; 147c0 <table_cell_to_buffer@@Base+0x3a8>
   14578:	ldr	r1, [sp, #32]
   1457c:	vstr	d0, [sp]
   14580:	bl	11b0c <snprintf@plt>
   14584:	b	144c8 <table_cell_to_buffer@@Base+0xb0>
   14588:	mov	r2, r4
   1458c:	mov	r1, r7
   14590:	mov	r0, r6
   14594:	bl	131cc <table_get_double@@Base>
   14598:	mov	r0, r5
   1459c:	ldr	r2, [pc, #544]	; 147c4 <table_cell_to_buffer@@Base+0x3ac>
   145a0:	ldr	r1, [sp, #32]
   145a4:	vstr	d0, [sp]
   145a8:	bl	11b0c <snprintf@plt>
   145ac:	b	144c8 <table_cell_to_buffer@@Base+0xb0>
   145b0:	mov	r2, r4
   145b4:	mov	r1, r7
   145b8:	mov	r0, r6
   145bc:	bl	131b8 <table_get_float@@Base>
   145c0:	mov	r0, r5
   145c4:	ldr	r2, [pc, #508]	; 147c8 <table_cell_to_buffer@@Base+0x3b0>
   145c8:	ldr	r1, [sp, #32]
   145cc:	vcvt.f64.f32	d0, s0
   145d0:	vstr	d0, [sp]
   145d4:	bl	11b0c <snprintf@plt>
   145d8:	b	144c8 <table_cell_to_buffer@@Base+0xb0>
   145dc:	mov	r2, r4
   145e0:	mov	r1, r7
   145e4:	mov	r0, r6
   145e8:	bl	131a4 <table_get_ullong@@Base>
   145ec:	strd	r0, [sp]
   145f0:	ldr	r2, [pc, #468]	; 147cc <table_cell_to_buffer@@Base+0x3b4>
   145f4:	mov	r0, r5
   145f8:	ldr	r1, [sp, #32]
   145fc:	bl	11b0c <snprintf@plt>
   14600:	b	144c8 <table_cell_to_buffer@@Base+0xb0>
   14604:	mov	r2, r4
   14608:	mov	r1, r7
   1460c:	mov	r0, r6
   14610:	bl	13190 <table_get_llong@@Base>
   14614:	strd	r0, [sp]
   14618:	ldr	r2, [pc, #432]	; 147d0 <table_cell_to_buffer@@Base+0x3b8>
   1461c:	mov	r0, r5
   14620:	ldr	r1, [sp, #32]
   14624:	bl	11b0c <snprintf@plt>
   14628:	b	144c8 <table_cell_to_buffer@@Base+0xb0>
   1462c:	mov	r2, r4
   14630:	mov	r1, r7
   14634:	mov	r0, r6
   14638:	bl	1317c <table_get_ulong@@Base>
   1463c:	ldr	r2, [pc, #400]	; 147d4 <table_cell_to_buffer@@Base+0x3bc>
   14640:	ldr	r1, [sp, #32]
   14644:	mov	r3, r0
   14648:	mov	r0, r5
   1464c:	bl	11b0c <snprintf@plt>
   14650:	b	144c8 <table_cell_to_buffer@@Base+0xb0>
   14654:	mov	r2, r4
   14658:	mov	r1, r7
   1465c:	mov	r0, r6
   14660:	bl	13168 <table_get_long@@Base>
   14664:	ldr	r2, [pc, #364]	; 147d8 <table_cell_to_buffer@@Base+0x3c0>
   14668:	ldr	r1, [sp, #32]
   1466c:	mov	r3, r0
   14670:	mov	r0, r5
   14674:	bl	11b0c <snprintf@plt>
   14678:	b	144c8 <table_cell_to_buffer@@Base+0xb0>
   1467c:	mov	r2, r4
   14680:	mov	r1, r7
   14684:	mov	r0, r6
   14688:	bl	13154 <table_get_ushort@@Base>
   1468c:	ldr	r2, [pc, #328]	; 147dc <table_cell_to_buffer@@Base+0x3c4>
   14690:	ldr	r1, [sp, #32]
   14694:	mov	r3, r0
   14698:	mov	r0, r5
   1469c:	bl	11b0c <snprintf@plt>
   146a0:	b	144c8 <table_cell_to_buffer@@Base+0xb0>
   146a4:	mov	r2, r4
   146a8:	mov	r1, r7
   146ac:	mov	r0, r6
   146b0:	bl	13140 <table_get_short@@Base>
   146b4:	ldr	r2, [pc, #292]	; 147e0 <table_cell_to_buffer@@Base+0x3c8>
   146b8:	ldr	r1, [sp, #32]
   146bc:	mov	r3, r0
   146c0:	mov	r0, r5
   146c4:	bl	11b0c <snprintf@plt>
   146c8:	b	144c8 <table_cell_to_buffer@@Base+0xb0>
   146cc:	mov	r2, r4
   146d0:	mov	r1, r7
   146d4:	mov	r0, r6
   146d8:	bl	1312c <table_get_uint64@@Base>
   146dc:	b	145ec <table_cell_to_buffer@@Base+0x1d4>
   146e0:	mov	r2, r4
   146e4:	mov	r1, r7
   146e8:	mov	r0, r6
   146ec:	bl	13118 <table_get_int64@@Base>
   146f0:	b	14614 <table_cell_to_buffer@@Base+0x1fc>
   146f4:	mov	r2, r4
   146f8:	mov	r1, r7
   146fc:	mov	r0, r6
   14700:	bl	13104 <table_get_uint32@@Base>
   14704:	mov	r3, r0
   14708:	ldr	r2, [pc, #212]	; 147e4 <table_cell_to_buffer@@Base+0x3cc>
   1470c:	mov	r0, r5
   14710:	ldr	r1, [sp, #32]
   14714:	bl	11b0c <snprintf@plt>
   14718:	mov	r0, #0
   1471c:	add	sp, sp, #12
   14720:	pop	{r4, r5, r6, r7, pc}
   14724:	mov	r2, r4
   14728:	mov	r1, r7
   1472c:	mov	r0, r6
   14730:	bl	130f0 <table_get_int32@@Base>
   14734:	b	144b4 <table_cell_to_buffer@@Base+0x9c>
   14738:	mov	r2, r4
   1473c:	mov	r1, r7
   14740:	mov	r0, r6
   14744:	bl	130dc <table_get_uint16@@Base>
   14748:	b	14704 <table_cell_to_buffer@@Base+0x2ec>
   1474c:	mov	r2, r4
   14750:	mov	r1, r7
   14754:	mov	r0, r6
   14758:	bl	130c8 <table_get_int16@@Base>
   1475c:	b	144b4 <table_cell_to_buffer@@Base+0x9c>
   14760:	mov	r2, r4
   14764:	mov	r1, r7
   14768:	mov	r0, r6
   1476c:	bl	130b4 <table_get_uint8@@Base>
   14770:	b	14704 <table_cell_to_buffer@@Base+0x2ec>
   14774:	mov	r2, r4
   14778:	mov	r1, r7
   1477c:	mov	r0, r6
   14780:	bl	130a0 <table_get_int8@@Base>
   14784:	b	144b4 <table_cell_to_buffer@@Base+0x9c>
   14788:	mov	r2, r4
   1478c:	mov	r1, r7
   14790:	mov	r0, r6
   14794:	bl	1308c <table_get_uint@@Base>
   14798:	b	14704 <table_cell_to_buffer@@Base+0x2ec>
   1479c:	mov	r2, r4
   147a0:	mov	r1, r7
   147a4:	mov	r0, r6
   147a8:	bl	13078 <table_get_int@@Base>
   147ac:	b	144b4 <table_cell_to_buffer@@Base+0x9c>
   147b0:	andeq	r5, r1, ip, ror r1
   147b4:			; <UNDEFINED> instruction: 0x000151b8
   147b8:	andeq	r5, r1, r4, lsr #3
   147bc:			; <UNDEFINED> instruction: 0x000151b4
   147c0:			; <UNDEFINED> instruction: 0x000151b0
   147c4:	andeq	r5, r1, ip, lsr #3
   147c8:	andeq	r5, r1, r8, lsr #3
   147cc:	andeq	r5, r1, ip, lsl #3
   147d0:	andeq	r5, r1, r4, lsl #3
   147d4:	andeq	r5, r1, r0, lsr #3
   147d8:	muleq	r1, ip, r1
   147dc:	muleq	r1, r8, r1
   147e0:	muleq	r1, r4, r1
   147e4:	andeq	r5, r1, r0, lsl #3

000147e8 <table_cell_from_buffer@@Base>:
   147e8:	push	{r4, r5, r6, r7, r8, lr}
   147ec:	mov	r8, r1
   147f0:	sub	sp, sp, #264	; 0x108
   147f4:	mov	r1, r2
   147f8:	mov	r4, r2
   147fc:	mov	r6, r3
   14800:	mov	r5, r0
   14804:	bl	12718 <table_get_column_data_type@@Base>
   14808:	cmp	r0, #23
   1480c:	ldrls	pc, [pc, r0, lsl #2]
   14810:	b	14d98 <table_cell_from_buffer@@Base+0x5b0>
   14814:	andeq	r4, r1, r0, lsr sp
   14818:	strdeq	r4, [r1], -ip
   1481c:	andeq	r4, r1, r8, asr #25
   14820:	muleq	r1, r4, ip
   14824:	andeq	r4, r1, r0, ror #24
   14828:	andeq	r4, r1, ip, lsr #24
   1482c:	strdeq	r4, [r1], -r8
   14830:	andeq	r4, r1, r4, asr #23
   14834:	andeq	r4, r1, ip, lsl #23
   14838:	andeq	r4, r1, r4, asr fp
   1483c:	andeq	r4, r1, r0, lsr #22
   14840:	andeq	r4, r1, ip, ror #21
   14844:			; <UNDEFINED> instruction: 0x00014ab8
   14848:	andeq	r4, r1, r4, lsl #21
   1484c:	andeq	r4, r1, ip, asr #20
   14850:	andeq	r4, r1, r4, lsl sl
   14854:	andeq	r4, r1, ip, lsr #19
   14858:	andeq	r4, r1, r8, ror r9
   1485c:	andeq	r4, r1, r0, ror #19
   14860:	ldrdeq	r4, [r1], -ip
   14864:	andeq	r4, r1, r4, asr #18
   14868:	andeq	r4, r1, r0, lsl r9
   1486c:	muleq	r1, ip, r8
   14870:	andeq	r4, r1, r4, ror r8
   14874:	mov	r0, r6
   14878:	add	r2, sp, #8
   1487c:	ldr	r1, [pc, #1308]	; 14da0 <table_cell_from_buffer@@Base+0x5b8>
   14880:	bl	11b18 <__isoc99_sscanf@plt>
   14884:	cmp	r0, #1
   14888:	beq	14d7c <table_cell_from_buffer@@Base+0x594>
   1488c:	mvn	r6, #0
   14890:	mov	r0, r6
   14894:	add	sp, sp, #264	; 0x108
   14898:	pop	{r4, r5, r6, r7, r8, pc}
   1489c:	mov	r0, r6
   148a0:	add	r2, sp, #8
   148a4:	ldr	r1, [pc, #1272]	; 14da4 <table_cell_from_buffer@@Base+0x5bc>
   148a8:	bl	11b18 <__isoc99_sscanf@plt>
   148ac:	cmp	r0, #1
   148b0:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   148b4:	ldr	r6, [sp, #8]
   148b8:	cmp	r6, #0
   148bc:	beq	14d64 <table_cell_from_buffer@@Base+0x57c>
   148c0:	mov	r3, r0
   148c4:	mov	r2, r4
   148c8:	mov	r1, r8
   148cc:	mov	r0, r5
   148d0:	bl	137d0 <table_set_bool@@Base>
   148d4:	mov	r6, #0
   148d8:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   148dc:	mov	r0, r6
   148e0:	add	r2, sp, #8
   148e4:	ldr	r1, [pc, #1212]	; 14da8 <table_cell_from_buffer@@Base+0x5c0>
   148e8:	bl	11b18 <__isoc99_sscanf@plt>
   148ec:	cmp	r0, #1
   148f0:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   148f4:	mov	r2, r4
   148f8:	mov	r1, r8
   148fc:	mov	r0, r5
   14900:	ldrb	r3, [sp, #8]
   14904:	bl	14264 <table_set_char@@Base>
   14908:	mov	r6, #0
   1490c:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14910:	mov	r0, r6
   14914:	add	r2, sp, #8
   14918:	ldr	r1, [pc, #1164]	; 14dac <table_cell_from_buffer@@Base+0x5c4>
   1491c:	bl	11b18 <__isoc99_sscanf@plt>
   14920:	cmp	r0, #1
   14924:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14928:	add	r3, sp, #8
   1492c:	mov	r2, r4
   14930:	mov	r1, r8
   14934:	mov	r0, r5
   14938:	bl	141e4 <table_set_string@@Base>
   1493c:	mov	r6, #0
   14940:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14944:	mov	r0, r6
   14948:	add	r2, sp, #8
   1494c:	ldr	r1, [pc, #1108]	; 14da8 <table_cell_from_buffer@@Base+0x5c0>
   14950:	bl	11b18 <__isoc99_sscanf@plt>
   14954:	cmp	r0, #1
   14958:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   1495c:	mov	r2, r4
   14960:	mov	r1, r8
   14964:	mov	r0, r5
   14968:	ldrb	r3, [sp, #8]
   1496c:	bl	142e0 <table_set_uchar@@Base>
   14970:	mov	r6, #0
   14974:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14978:	mov	r0, r6
   1497c:	add	r2, sp, #8
   14980:	ldr	r1, [pc, #1064]	; 14db0 <table_cell_from_buffer@@Base+0x5c8>
   14984:	bl	11b18 <__isoc99_sscanf@plt>
   14988:	cmp	r0, #1
   1498c:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14990:	mov	r2, r4
   14994:	mov	r1, r8
   14998:	mov	r0, r5
   1499c:	vldr	d0, [sp, #8]
   149a0:	bl	140b4 <table_set_double@@Base>
   149a4:	mov	r6, #0
   149a8:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   149ac:	mov	r0, r6
   149b0:	add	r2, sp, #8
   149b4:	ldr	r1, [pc, #1016]	; 14db4 <table_cell_from_buffer@@Base+0x5cc>
   149b8:	bl	11b18 <__isoc99_sscanf@plt>
   149bc:	cmp	r0, #1
   149c0:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   149c4:	mov	r2, r4
   149c8:	mov	r1, r8
   149cc:	mov	r0, r5
   149d0:	vldr	s0, [sp, #8]
   149d4:	bl	14038 <table_set_float@@Base>
   149d8:	mov	r6, #0
   149dc:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   149e0:	mov	r0, r6
   149e4:	add	r2, sp, #8
   149e8:	ldr	r1, [pc, #968]	; 14db8 <table_cell_from_buffer@@Base+0x5d0>
   149ec:	bl	11b18 <__isoc99_sscanf@plt>
   149f0:	cmp	r0, #1
   149f4:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   149f8:	mov	r2, r4
   149fc:	mov	r1, r8
   14a00:	mov	r0, r5
   14a04:	vldr	d0, [sp, #8]
   14a08:	bl	1414c <table_set_ldouble@@Base>
   14a0c:	mov	r6, #0
   14a10:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14a14:	mov	r0, r6
   14a18:	add	r2, sp, #8
   14a1c:	ldr	r1, [pc, #920]	; 14dbc <table_cell_from_buffer@@Base+0x5d4>
   14a20:	bl	11b18 <__isoc99_sscanf@plt>
   14a24:	cmp	r0, #1
   14a28:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14a2c:	ldrd	r6, [sp, #8]
   14a30:	mov	r2, r4
   14a34:	mov	r1, r8
   14a38:	strd	r6, [sp]
   14a3c:	mov	r0, r5
   14a40:	bl	13fb0 <table_set_ullong@@Base>
   14a44:	mov	r6, #0
   14a48:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14a4c:	mov	r0, r6
   14a50:	add	r2, sp, #8
   14a54:	ldr	r1, [pc, #868]	; 14dc0 <table_cell_from_buffer@@Base+0x5d8>
   14a58:	bl	11b18 <__isoc99_sscanf@plt>
   14a5c:	cmp	r0, #1
   14a60:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14a64:	ldrd	r6, [sp, #8]
   14a68:	mov	r2, r4
   14a6c:	mov	r1, r8
   14a70:	strd	r6, [sp]
   14a74:	mov	r0, r5
   14a78:	bl	13f28 <table_set_llong@@Base>
   14a7c:	mov	r6, #0
   14a80:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14a84:	mov	r0, r6
   14a88:	add	r2, sp, #8
   14a8c:	ldr	r1, [pc, #816]	; 14dc4 <table_cell_from_buffer@@Base+0x5dc>
   14a90:	bl	11b18 <__isoc99_sscanf@plt>
   14a94:	cmp	r0, #1
   14a98:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14a9c:	mov	r2, r4
   14aa0:	mov	r1, r8
   14aa4:	mov	r0, r5
   14aa8:	ldr	r3, [sp, #8]
   14aac:	bl	13eac <table_set_ulong@@Base>
   14ab0:	mov	r6, #0
   14ab4:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14ab8:	mov	r0, r6
   14abc:	add	r2, sp, #8
   14ac0:	ldr	r1, [pc, #768]	; 14dc8 <table_cell_from_buffer@@Base+0x5e0>
   14ac4:	bl	11b18 <__isoc99_sscanf@plt>
   14ac8:	cmp	r0, #1
   14acc:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14ad0:	mov	r2, r4
   14ad4:	mov	r1, r8
   14ad8:	mov	r0, r5
   14adc:	ldr	r3, [sp, #8]
   14ae0:	bl	13e30 <table_set_long@@Base>
   14ae4:	mov	r6, #0
   14ae8:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14aec:	mov	r0, r6
   14af0:	add	r2, sp, #8
   14af4:	ldr	r1, [pc, #720]	; 14dcc <table_cell_from_buffer@@Base+0x5e4>
   14af8:	bl	11b18 <__isoc99_sscanf@plt>
   14afc:	cmp	r0, #1
   14b00:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14b04:	ldrh	r3, [sp, #8]
   14b08:	mov	r2, r4
   14b0c:	mov	r1, r8
   14b10:	mov	r0, r5
   14b14:	bl	13db4 <table_set_ushort@@Base>
   14b18:	mov	r6, #0
   14b1c:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14b20:	mov	r0, r6
   14b24:	add	r2, sp, #8
   14b28:	ldr	r1, [pc, #672]	; 14dd0 <table_cell_from_buffer@@Base+0x5e8>
   14b2c:	bl	11b18 <__isoc99_sscanf@plt>
   14b30:	cmp	r0, #1
   14b34:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14b38:	ldrsh	r3, [sp, #8]
   14b3c:	mov	r2, r4
   14b40:	mov	r1, r8
   14b44:	mov	r0, r5
   14b48:	bl	13d38 <table_set_short@@Base>
   14b4c:	mov	r6, #0
   14b50:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14b54:	mov	r0, r6
   14b58:	add	r2, sp, #8
   14b5c:	ldr	r1, [pc, #600]	; 14dbc <table_cell_from_buffer@@Base+0x5d4>
   14b60:	bl	11b18 <__isoc99_sscanf@plt>
   14b64:	cmp	r0, #1
   14b68:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14b6c:	ldrd	r6, [sp, #8]
   14b70:	mov	r2, r4
   14b74:	mov	r1, r8
   14b78:	strd	r6, [sp]
   14b7c:	mov	r0, r5
   14b80:	bl	13cb0 <table_set_uint64@@Base>
   14b84:	mov	r6, #0
   14b88:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14b8c:	mov	r0, r6
   14b90:	add	r2, sp, #8
   14b94:	ldr	r1, [pc, #548]	; 14dc0 <table_cell_from_buffer@@Base+0x5d8>
   14b98:	bl	11b18 <__isoc99_sscanf@plt>
   14b9c:	cmp	r0, #1
   14ba0:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14ba4:	ldrd	r6, [sp, #8]
   14ba8:	mov	r2, r4
   14bac:	mov	r1, r8
   14bb0:	strd	r6, [sp]
   14bb4:	mov	r0, r5
   14bb8:	bl	13c2c <table_set_int64@@Base>
   14bbc:	mov	r6, #0
   14bc0:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14bc4:	mov	r0, r6
   14bc8:	add	r2, sp, #8
   14bcc:	ldr	r1, [pc, #512]	; 14dd4 <table_cell_from_buffer@@Base+0x5ec>
   14bd0:	bl	11b18 <__isoc99_sscanf@plt>
   14bd4:	cmp	r0, #1
   14bd8:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14bdc:	mov	r2, r4
   14be0:	mov	r1, r8
   14be4:	mov	r0, r5
   14be8:	ldr	r3, [sp, #8]
   14bec:	bl	13bb0 <table_set_uint32@@Base>
   14bf0:	mov	r6, #0
   14bf4:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14bf8:	mov	r0, r6
   14bfc:	add	r2, sp, #8
   14c00:	ldr	r1, [pc, #412]	; 14da4 <table_cell_from_buffer@@Base+0x5bc>
   14c04:	bl	11b18 <__isoc99_sscanf@plt>
   14c08:	cmp	r0, #1
   14c0c:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14c10:	mov	r2, r4
   14c14:	mov	r1, r8
   14c18:	mov	r0, r5
   14c1c:	ldr	r3, [sp, #8]
   14c20:	bl	13b34 <table_set_int32@@Base>
   14c24:	mov	r6, #0
   14c28:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14c2c:	mov	r0, r6
   14c30:	add	r2, sp, #8
   14c34:	ldr	r1, [pc, #400]	; 14dcc <table_cell_from_buffer@@Base+0x5e4>
   14c38:	bl	11b18 <__isoc99_sscanf@plt>
   14c3c:	cmp	r0, #1
   14c40:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14c44:	ldrh	r3, [sp, #8]
   14c48:	mov	r2, r4
   14c4c:	mov	r1, r8
   14c50:	mov	r0, r5
   14c54:	bl	13ab8 <table_set_uint16@@Base>
   14c58:	mov	r6, #0
   14c5c:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14c60:	mov	r0, r6
   14c64:	add	r2, sp, #8
   14c68:	ldr	r1, [pc, #352]	; 14dd0 <table_cell_from_buffer@@Base+0x5e8>
   14c6c:	bl	11b18 <__isoc99_sscanf@plt>
   14c70:	cmp	r0, #1
   14c74:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14c78:	ldrsh	r3, [sp, #8]
   14c7c:	mov	r2, r4
   14c80:	mov	r1, r8
   14c84:	mov	r0, r5
   14c88:	bl	13a3c <table_set_int16@@Base>
   14c8c:	mov	r6, #0
   14c90:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14c94:	mov	r0, r6
   14c98:	add	r2, sp, #8
   14c9c:	ldr	r1, [pc, #308]	; 14dd8 <table_cell_from_buffer@@Base+0x5f0>
   14ca0:	bl	11b18 <__isoc99_sscanf@plt>
   14ca4:	cmp	r0, #1
   14ca8:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14cac:	mov	r2, r4
   14cb0:	mov	r1, r8
   14cb4:	mov	r0, r5
   14cb8:	ldrb	r3, [sp, #8]
   14cbc:	bl	139c0 <table_set_uint8@@Base>
   14cc0:	mov	r6, #0
   14cc4:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14cc8:	mov	r0, r6
   14ccc:	add	r2, sp, #8
   14cd0:	ldr	r1, [pc, #260]	; 14ddc <table_cell_from_buffer@@Base+0x5f4>
   14cd4:	bl	11b18 <__isoc99_sscanf@plt>
   14cd8:	cmp	r0, #1
   14cdc:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14ce0:	ldrsb	r3, [sp, #8]
   14ce4:	mov	r2, r4
   14ce8:	mov	r1, r8
   14cec:	mov	r0, r5
   14cf0:	bl	13944 <table_set_int8@@Base>
   14cf4:	mov	r6, #0
   14cf8:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14cfc:	mov	r0, r6
   14d00:	add	r2, sp, #8
   14d04:	ldr	r1, [pc, #200]	; 14dd4 <table_cell_from_buffer@@Base+0x5ec>
   14d08:	bl	11b18 <__isoc99_sscanf@plt>
   14d0c:	cmp	r0, #1
   14d10:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14d14:	mov	r2, r4
   14d18:	mov	r1, r8
   14d1c:	mov	r0, r5
   14d20:	ldr	r3, [sp, #8]
   14d24:	bl	138c8 <table_set_uint@@Base>
   14d28:	mov	r6, #0
   14d2c:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14d30:	mov	r0, r6
   14d34:	add	r2, sp, #8
   14d38:	ldr	r1, [pc, #100]	; 14da4 <table_cell_from_buffer@@Base+0x5bc>
   14d3c:	bl	11b18 <__isoc99_sscanf@plt>
   14d40:	cmp	r0, #1
   14d44:	bne	1488c <table_cell_from_buffer@@Base+0xa4>
   14d48:	mov	r2, r4
   14d4c:	mov	r1, r8
   14d50:	mov	r0, r5
   14d54:	ldr	r3, [sp, #8]
   14d58:	bl	1384c <table_set_int@@Base>
   14d5c:	mov	r6, #0
   14d60:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14d64:	mov	r2, r4
   14d68:	mov	r1, r8
   14d6c:	mov	r0, r5
   14d70:	mov	r3, r6
   14d74:	bl	137d0 <table_set_bool@@Base>
   14d78:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14d7c:	mov	r2, r4
   14d80:	mov	r1, r8
   14d84:	mov	r0, r5
   14d88:	ldr	r3, [sp, #8]
   14d8c:	bl	1435c <table_set_ptr@@Base>
   14d90:	mov	r6, #0
   14d94:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14d98:	mov	r6, #0
   14d9c:	b	14890 <table_cell_from_buffer@@Base+0xa8>
   14da0:			; <UNDEFINED> instruction: 0x000151b8
   14da4:	andeq	r5, r1, ip, ror r1
   14da8:			; <UNDEFINED> instruction: 0x000151b4
   14dac:	andeq	r5, r1, r4, lsr #3
   14db0:	andeq	r5, r1, ip, lsr #3
   14db4:	andeq	r5, r1, r8, lsr #3
   14db8:			; <UNDEFINED> instruction: 0x000151b0
   14dbc:	andeq	r5, r1, ip, lsl #3
   14dc0:	andeq	r5, r1, r4, lsl #3
   14dc4:	andeq	r5, r1, r0, lsr #3
   14dc8:	muleq	r1, ip, r1
   14dcc:	muleq	r1, r8, r1
   14dd0:	muleq	r1, r4, r1
   14dd4:	andeq	r5, r1, r0, lsl #3
   14dd8:	andeq	r5, r1, r4, asr #3
   14ddc:			; <UNDEFINED> instruction: 0x000151bc

00014de0 <table_cell_nullify@@Base>:
   14de0:	push	{r4, r5, r6, lr}
   14de4:	mov	r5, r2
   14de8:	bl	13468 <table_get_row_ptr@@Base>
   14dec:	ldr	r4, [r0]
   14df0:	ldr	r0, [r4, r5, lsl #2]
   14df4:	cmp	r0, #0
   14df8:	beq	14e08 <table_cell_nullify@@Base+0x28>
   14dfc:	bl	11ab8 <free@plt>
   14e00:	mov	r3, #0
   14e04:	str	r3, [r4, r5, lsl #2]
   14e08:	mov	r0, #0
   14e0c:	pop	{r4, r5, r6, pc}

00014e10 <table_get_cell_ptr@@Base>:
   14e10:	push	{r4, lr}
   14e14:	mov	r4, r2
   14e18:	bl	13468 <table_get_row_ptr@@Base>
   14e1c:	ldr	r0, [r0]
   14e20:	add	r0, r0, r4, lsl #2
   14e24:	pop	{r4, pc}
   14e28:	subs	r2, r1, #1
   14e2c:	bxeq	lr
   14e30:	bcc	15008 <table_get_cell_ptr@@Base+0x1f8>
   14e34:	cmp	r0, r1
   14e38:	bls	14fec <table_get_cell_ptr@@Base+0x1dc>
   14e3c:	tst	r1, r2
   14e40:	beq	14ff8 <table_get_cell_ptr@@Base+0x1e8>
   14e44:	clz	r3, r0
   14e48:	clz	r2, r1
   14e4c:	sub	r3, r2, r3
   14e50:	rsbs	r3, r3, #31
   14e54:	addne	r3, r3, r3, lsl #1
   14e58:	mov	r2, #0
   14e5c:	addne	pc, pc, r3, lsl #2
   14e60:	nop			; (mov r0, r0)
   14e64:	cmp	r0, r1, lsl #31
   14e68:	adc	r2, r2, r2
   14e6c:	subcs	r0, r0, r1, lsl #31
   14e70:	cmp	r0, r1, lsl #30
   14e74:	adc	r2, r2, r2
   14e78:	subcs	r0, r0, r1, lsl #30
   14e7c:	cmp	r0, r1, lsl #29
   14e80:	adc	r2, r2, r2
   14e84:	subcs	r0, r0, r1, lsl #29
   14e88:	cmp	r0, r1, lsl #28
   14e8c:	adc	r2, r2, r2
   14e90:	subcs	r0, r0, r1, lsl #28
   14e94:	cmp	r0, r1, lsl #27
   14e98:	adc	r2, r2, r2
   14e9c:	subcs	r0, r0, r1, lsl #27
   14ea0:	cmp	r0, r1, lsl #26
   14ea4:	adc	r2, r2, r2
   14ea8:	subcs	r0, r0, r1, lsl #26
   14eac:	cmp	r0, r1, lsl #25
   14eb0:	adc	r2, r2, r2
   14eb4:	subcs	r0, r0, r1, lsl #25
   14eb8:	cmp	r0, r1, lsl #24
   14ebc:	adc	r2, r2, r2
   14ec0:	subcs	r0, r0, r1, lsl #24
   14ec4:	cmp	r0, r1, lsl #23
   14ec8:	adc	r2, r2, r2
   14ecc:	subcs	r0, r0, r1, lsl #23
   14ed0:	cmp	r0, r1, lsl #22
   14ed4:	adc	r2, r2, r2
   14ed8:	subcs	r0, r0, r1, lsl #22
   14edc:	cmp	r0, r1, lsl #21
   14ee0:	adc	r2, r2, r2
   14ee4:	subcs	r0, r0, r1, lsl #21
   14ee8:	cmp	r0, r1, lsl #20
   14eec:	adc	r2, r2, r2
   14ef0:	subcs	r0, r0, r1, lsl #20
   14ef4:	cmp	r0, r1, lsl #19
   14ef8:	adc	r2, r2, r2
   14efc:	subcs	r0, r0, r1, lsl #19
   14f00:	cmp	r0, r1, lsl #18
   14f04:	adc	r2, r2, r2
   14f08:	subcs	r0, r0, r1, lsl #18
   14f0c:	cmp	r0, r1, lsl #17
   14f10:	adc	r2, r2, r2
   14f14:	subcs	r0, r0, r1, lsl #17
   14f18:	cmp	r0, r1, lsl #16
   14f1c:	adc	r2, r2, r2
   14f20:	subcs	r0, r0, r1, lsl #16
   14f24:	cmp	r0, r1, lsl #15
   14f28:	adc	r2, r2, r2
   14f2c:	subcs	r0, r0, r1, lsl #15
   14f30:	cmp	r0, r1, lsl #14
   14f34:	adc	r2, r2, r2
   14f38:	subcs	r0, r0, r1, lsl #14
   14f3c:	cmp	r0, r1, lsl #13
   14f40:	adc	r2, r2, r2
   14f44:	subcs	r0, r0, r1, lsl #13
   14f48:	cmp	r0, r1, lsl #12
   14f4c:	adc	r2, r2, r2
   14f50:	subcs	r0, r0, r1, lsl #12
   14f54:	cmp	r0, r1, lsl #11
   14f58:	adc	r2, r2, r2
   14f5c:	subcs	r0, r0, r1, lsl #11
   14f60:	cmp	r0, r1, lsl #10
   14f64:	adc	r2, r2, r2
   14f68:	subcs	r0, r0, r1, lsl #10
   14f6c:	cmp	r0, r1, lsl #9
   14f70:	adc	r2, r2, r2
   14f74:	subcs	r0, r0, r1, lsl #9
   14f78:	cmp	r0, r1, lsl #8
   14f7c:	adc	r2, r2, r2
   14f80:	subcs	r0, r0, r1, lsl #8
   14f84:	cmp	r0, r1, lsl #7
   14f88:	adc	r2, r2, r2
   14f8c:	subcs	r0, r0, r1, lsl #7
   14f90:	cmp	r0, r1, lsl #6
   14f94:	adc	r2, r2, r2
   14f98:	subcs	r0, r0, r1, lsl #6
   14f9c:	cmp	r0, r1, lsl #5
   14fa0:	adc	r2, r2, r2
   14fa4:	subcs	r0, r0, r1, lsl #5
   14fa8:	cmp	r0, r1, lsl #4
   14fac:	adc	r2, r2, r2
   14fb0:	subcs	r0, r0, r1, lsl #4
   14fb4:	cmp	r0, r1, lsl #3
   14fb8:	adc	r2, r2, r2
   14fbc:	subcs	r0, r0, r1, lsl #3
   14fc0:	cmp	r0, r1, lsl #2
   14fc4:	adc	r2, r2, r2
   14fc8:	subcs	r0, r0, r1, lsl #2
   14fcc:	cmp	r0, r1, lsl #1
   14fd0:	adc	r2, r2, r2
   14fd4:	subcs	r0, r0, r1, lsl #1
   14fd8:	cmp	r0, r1
   14fdc:	adc	r2, r2, r2
   14fe0:	subcs	r0, r0, r1
   14fe4:	mov	r0, r2
   14fe8:	bx	lr
   14fec:	moveq	r0, #1
   14ff0:	movne	r0, #0
   14ff4:	bx	lr
   14ff8:	clz	r2, r1
   14ffc:	rsb	r2, r2, #31
   15000:	lsr	r0, r0, r2
   15004:	bx	lr
   15008:	cmp	r0, #0
   1500c:	mvnne	r0, #0
   15010:	b	15034 <table_get_cell_ptr@@Base+0x224>
   15014:	cmp	r1, #0
   15018:	beq	15008 <table_get_cell_ptr@@Base+0x1f8>
   1501c:	push	{r0, r1, lr}
   15020:	bl	14e28 <table_get_cell_ptr@@Base+0x18>
   15024:	pop	{r1, r2, lr}
   15028:	mul	r3, r2, r0
   1502c:	sub	r1, r1, r3
   15030:	bx	lr
   15034:	push	{r1, lr}
   15038:	mov	r0, #8
   1503c:	bl	11a94 <raise@plt>
   15040:	pop	{r1, pc}

00015044 <__libc_csu_init@@Base>:
   15044:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15048:	mov	r7, r0
   1504c:	ldr	r6, [pc, #72]	; 1509c <__libc_csu_init@@Base+0x58>
   15050:	ldr	r5, [pc, #72]	; 150a0 <__libc_csu_init@@Base+0x5c>
   15054:	add	r6, pc, r6
   15058:	add	r5, pc, r5
   1505c:	sub	r6, r6, r5
   15060:	mov	r8, r1
   15064:	mov	r9, r2
   15068:	bl	11a74 <raise@plt-0x20>
   1506c:	asrs	r6, r6, #2
   15070:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15074:	mov	r4, #0
   15078:	add	r4, r4, #1
   1507c:	ldr	r3, [r5], #4
   15080:	mov	r2, r9
   15084:	mov	r1, r8
   15088:	mov	r0, r7
   1508c:	blx	r3
   15090:	cmp	r6, r4
   15094:	bne	15078 <__libc_csu_init@@Base+0x34>
   15098:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1509c:			; <UNDEFINED> instruction: 0x00010eb4
   150a0:	andeq	r0, r1, ip, lsr #29

000150a4 <__libc_csu_fini@@Base>:
   150a4:	bx	lr

Disassembly of section .fini:

000150a8 <.fini>:
   150a8:	push	{r3, lr}
   150ac:	pop	{r3, pc}
