
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

00010760 <.init>:
   10760:	push	{r3, lr}
   10764:	bl	108ec <abort@plt+0x4c>
   10768:	pop	{r3, pc}

Disassembly of section .plt:

0001076c <calloc@plt-0x14>:
   1076c:	push	{lr}		; (str lr, [sp, #-4]!)
   10770:	ldr	lr, [pc, #4]	; 1077c <calloc@plt-0x4>
   10774:	add	lr, pc, lr
   10778:	ldr	pc, [lr, #8]!
   1077c:	andeq	r2, r1, r4, lsl #17

00010780 <calloc@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #73728	; 0x12000
   10788:	ldr	pc, [ip, #2180]!	; 0x884

0001078c <strcmp@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #73728	; 0x12000
   10794:	ldr	pc, [ip, #2172]!	; 0x87c

00010798 <strtol@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #73728	; 0x12000
   107a0:	ldr	pc, [ip, #2164]!	; 0x874

000107a4 <printf@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #73728	; 0x12000
   107ac:	ldr	pc, [ip, #2156]!	; 0x86c

000107b0 <fopen@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #73728	; 0x12000
   107b8:	ldr	pc, [ip, #2148]!	; 0x864

000107bc <free@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #73728	; 0x12000
   107c4:	ldr	pc, [ip, #2140]!	; 0x85c

000107c8 <fgets@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2132]!	; 0x854

000107d4 <strdup@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2124]!	; 0x84c

000107e0 <unlink@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2116]!	; 0x844

000107ec <__xstat@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2108]!	; 0x83c

000107f8 <fwrite@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2100]!	; 0x834

00010804 <__libc_start_main@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2092]!	; 0x82c

00010810 <__sysv_signal@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2084]!	; 0x824

0001081c <__gmon_start__@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2076]!	; 0x81c

00010828 <getpid@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2068]!	; 0x814

00010834 <exit@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #73728	; 0x12000
   1083c:	ldr	pc, [ip, #2060]!	; 0x80c

00010840 <strlen@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #73728	; 0x12000
   10848:	ldr	pc, [ip, #2052]!	; 0x804

0001084c <fprintf@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #73728	; 0x12000
   10854:	ldr	pc, [ip, #2044]!	; 0x7fc

00010858 <sqrt@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #73728	; 0x12000
   10860:	ldr	pc, [ip, #2036]!	; 0x7f4

00010864 <__isoc99_sscanf@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #73728	; 0x12000
   1086c:	ldr	pc, [ip, #2028]!	; 0x7ec

00010870 <fclose@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #2020]!	; 0x7e4

0001087c <fputc@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #2012]!	; 0x7dc

00010888 <sprintf@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #2004]!	; 0x7d4

00010894 <strncmp@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #1996]!	; 0x7cc

000108a0 <abort@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #73728	; 0x12000
   108a8:	ldr	pc, [ip, #1988]!	; 0x7c4

Disassembly of section .text:

000108b0 <error@@Base-0x11fc>:
   108b0:	mov	fp, #0
   108b4:	mov	lr, #0
   108b8:	pop	{r1}		; (ldr r1, [sp], #4)
   108bc:	mov	r2, sp
   108c0:	push	{r2}		; (str r2, [sp, #-4]!)
   108c4:	push	{r0}		; (str r0, [sp, #-4]!)
   108c8:	ldr	ip, [pc, #16]	; 108e0 <abort@plt+0x40>
   108cc:	push	{ip}		; (str ip, [sp, #-4]!)
   108d0:	ldr	r0, [pc, #12]	; 108e4 <abort@plt+0x44>
   108d4:	ldr	r3, [pc, #12]	; 108e8 <abort@plt+0x48>
   108d8:	bl	10804 <__libc_start_main@plt>
   108dc:	bl	108a0 <abort@plt>
   108e0:	ldrdeq	r2, [r1], -ip
   108e4:	andeq	r0, r1, r0, ror #21
   108e8:	andeq	r2, r1, ip, ror r1
   108ec:	ldr	r3, [pc, #20]	; 10908 <abort@plt+0x68>
   108f0:	ldr	r2, [pc, #20]	; 1090c <abort@plt+0x6c>
   108f4:	add	r3, pc, r3
   108f8:	ldr	r2, [r3, r2]
   108fc:	cmp	r2, #0
   10900:	bxeq	lr
   10904:	b	1081c <__gmon_start__@plt>
   10908:	andeq	r2, r1, r4, lsl #14
   1090c:	andeq	r0, r0, r0, ror r0
   10910:	ldr	r3, [pc, #28]	; 10934 <abort@plt+0x94>
   10914:	ldr	r0, [pc, #28]	; 10938 <abort@plt+0x98>
   10918:	sub	r3, r3, r0
   1091c:	cmp	r3, #6
   10920:	bxls	lr
   10924:	ldr	r3, [pc, #16]	; 1093c <abort@plt+0x9c>
   10928:	cmp	r3, #0
   1092c:	bxeq	lr
   10930:	bx	r3
   10934:	andeq	r3, r2, r7, lsl #1
   10938:	andeq	r3, r2, r4, lsl #1
   1093c:	andeq	r0, r0, r0
   10940:	ldr	r1, [pc, #36]	; 1096c <abort@plt+0xcc>
   10944:	ldr	r0, [pc, #36]	; 10970 <abort@plt+0xd0>
   10948:	sub	r1, r1, r0
   1094c:	asr	r1, r1, #2
   10950:	add	r1, r1, r1, lsr #31
   10954:	asrs	r1, r1, #1
   10958:	bxeq	lr
   1095c:	ldr	r3, [pc, #16]	; 10974 <abort@plt+0xd4>
   10960:	cmp	r3, #0
   10964:	bxeq	lr
   10968:	bx	r3
   1096c:	andeq	r3, r2, r4, lsl #1
   10970:	andeq	r3, r2, r4, lsl #1
   10974:	andeq	r0, r0, r0
   10978:	push	{r4, lr}
   1097c:	ldr	r4, [pc, #24]	; 1099c <abort@plt+0xfc>
   10980:	ldrb	r3, [r4]
   10984:	cmp	r3, #0
   10988:	popne	{r4, pc}
   1098c:	bl	10910 <abort@plt+0x70>
   10990:	mov	r3, #1
   10994:	strb	r3, [r4]
   10998:	pop	{r4, pc}
   1099c:	muleq	r2, r8, r0
   109a0:	ldr	r0, [pc, #40]	; 109d0 <abort@plt+0x130>
   109a4:	ldr	r3, [r0]
   109a8:	cmp	r3, #0
   109ac:	bne	109b4 <abort@plt+0x114>
   109b0:	b	10940 <abort@plt+0xa0>
   109b4:	ldr	r3, [pc, #24]	; 109d4 <abort@plt+0x134>
   109b8:	cmp	r3, #0
   109bc:	beq	109b0 <abort@plt+0x110>
   109c0:	push	{r4, lr}
   109c4:	blx	r3
   109c8:	pop	{r4, lr}
   109cc:	b	10940 <abort@plt+0xa0>
   109d0:	andeq	r2, r2, r4, lsl #30
   109d4:	andeq	r0, r0, r0
   109d8:	push	{r4, r5, r6, lr}
   109dc:	ldr	r4, [pc, #44]	; 10a10 <abort@plt+0x170>
   109e0:	ldr	r5, [r4]
   109e4:	ldr	r6, [r4, #4]
   109e8:	mov	r1, r0
   109ec:	mov	r0, r4
   109f0:	bl	112ec <abort@plt+0xa4c>
   109f4:	ldr	r2, [r4, #4]
   109f8:	ldr	r1, [r4]
   109fc:	sub	r2, r2, r6
   10a00:	sub	r1, r1, r5
   10a04:	ldr	r0, [pc, #8]	; 10a14 <abort@plt+0x174>
   10a08:	bl	10b50 <abort@plt+0x2b0>
   10a0c:	pop	{r4, r5, r6, pc}
   10a10:	andeq	r3, r2, r0, lsl r1
   10a14:	andeq	r7, r2, r0, ror #7
   10a18:	push	{r4, lr}
   10a1c:	sub	sp, sp, #32
   10a20:	ldr	r4, [pc, #152]	; 10ac0 <abort@plt+0x220>
   10a24:	add	r2, sp, #16
   10a28:	add	r1, sp, #24
   10a2c:	mov	r0, r4
   10a30:	bl	10b9c <abort@plt+0x2fc>
   10a34:	ldr	r1, [r4, #12]
   10a38:	ldr	r0, [pc, #132]	; 10ac4 <abort@plt+0x224>
   10a3c:	bl	107a4 <printf@plt>
   10a40:	ldr	r4, [pc, #128]	; 10ac8 <abort@plt+0x228>
   10a44:	ldr	r1, [r4]
   10a48:	ldr	r0, [pc, #124]	; 10acc <abort@plt+0x22c>
   10a4c:	bl	107a4 <printf@plt>
   10a50:	ldr	r1, [r4, #4]
   10a54:	ldr	r0, [pc, #116]	; 10ad0 <abort@plt+0x230>
   10a58:	bl	107a4 <printf@plt>
   10a5c:	ldr	r2, [r4]
   10a60:	ldr	r3, [r4, #4]
   10a64:	sub	r3, r2, r3
   10a68:	vmov	s14, r3
   10a6c:	vcvt.f64.s32	d7, s14
   10a70:	vldr	d6, [pc, #64]	; 10ab8 <abort@plt+0x218>
   10a74:	vmul.f64	d7, d7, d6
   10a78:	vmov	s13, r2
   10a7c:	vcvt.f64.s32	d6, s13
   10a80:	vdiv.f64	d5, d7, d6
   10a84:	vmov	r2, r3, d5
   10a88:	ldr	r0, [pc, #68]	; 10ad4 <abort@plt+0x234>
   10a8c:	bl	107a4 <printf@plt>
   10a90:	ldr	r3, [pc, #64]	; 10ad8 <abort@plt+0x238>
   10a94:	str	r3, [sp, #8]
   10a98:	ldrd	r2, [sp, #16]
   10a9c:	strd	r2, [sp]
   10aa0:	ldrd	r2, [sp, #24]
   10aa4:	ldr	r0, [pc, #48]	; 10adc <abort@plt+0x23c>
   10aa8:	bl	107a4 <printf@plt>
   10aac:	add	sp, sp, #32
   10ab0:	pop	{r4, pc}
   10ab4:	nop			; (mov r0, r0)
   10ab8:	andeq	r0, r0, r0
   10abc:	subsmi	r0, r9, r0
   10ac0:	andeq	r7, r2, r0, ror #7
   10ac4:	andeq	r2, r1, ip, ror #3
   10ac8:	andeq	r3, r2, r0, lsl r1
   10acc:	andeq	r2, r1, r4, lsl #4
   10ad0:	andeq	r2, r1, r4, lsl r2
   10ad4:	andeq	r2, r1, ip, lsr #4
   10ad8:	andeq	r2, r1, r8, asr r2
   10adc:	andeq	r2, r1, r0, asr #4
   10ae0:	push	{r4, r5, lr}
   10ae4:	sub	sp, sp, #12
   10ae8:	add	ip, sp, #8
   10aec:	str	r0, [ip, #-4]!
   10af0:	mov	r5, r1
   10af4:	mov	r3, #0
   10af8:	ldr	r2, [pc, #72]	; 10b48 <abort@plt+0x2a8>
   10afc:	mov	r0, ip
   10b00:	bl	11bec <error@@Base+0x140>
   10b04:	ldr	r3, [sp, #4]
   10b08:	cmp	r3, #1
   10b0c:	ble	10b40 <abort@plt+0x2a0>
   10b10:	cmp	r3, #0
   10b14:	subgt	r5, r5, #4
   10b18:	movgt	r4, #0
   10b1c:	ble	10b38 <abort@plt+0x298>
   10b20:	ldr	r0, [r5, #4]!
   10b24:	bl	109d8 <abort@plt+0x138>
   10b28:	add	r4, r4, #1
   10b2c:	ldr	r3, [sp, #4]
   10b30:	cmp	r3, r4
   10b34:	bgt	10b20 <abort@plt+0x280>
   10b38:	bl	10a18 <abort@plt+0x178>
   10b3c:	bl	11a54 <abort@plt+0x11b4>
   10b40:	ldr	r0, [pc, #4]	; 10b4c <abort@plt+0x2ac>
   10b44:	bl	11aac <error@@Base>
   10b48:	andeq	r2, r1, ip, lsl #5
   10b4c:			; <UNDEFINED> instruction: 0x000122bc
   10b50:	push	{r4, r5, r6, lr}
   10b54:	mov	r4, r0
   10b58:	mov	r6, r1
   10b5c:	mov	r5, r2
   10b60:	mov	r1, #32
   10b64:	mov	r0, #1
   10b68:	bl	11ae8 <error@@Base+0x3c>
   10b6c:	str	r6, [r0, #8]
   10b70:	str	r5, [r0, #12]
   10b74:	ldr	r1, [r4, #24]
   10b78:	add	r1, r1, r6
   10b7c:	str	r1, [r4, #24]
   10b80:	ldr	r2, [r4, #28]
   10b84:	add	r2, r2, r5
   10b88:	str	r2, [r4, #28]
   10b8c:	mov	r1, r0
   10b90:	mov	r0, r4
   10b94:	bl	11ec4 <error@@Base+0x418>
   10b98:	pop	{r4, r5, r6, pc}
   10b9c:	push	{r4, r5, r6, lr}
   10ba0:	vpush	{d8}
   10ba4:	mov	r6, r2
   10ba8:	ldr	r2, [r0]
   10bac:	cmp	r2, #0
   10bb0:	beq	10d0c <abort@plt+0x46c>
   10bb4:	mov	r4, r0
   10bb8:	mov	r5, r1
   10bbc:	mov	r3, r2
   10bc0:	mov	r0, #0
   10bc4:	ldr	r1, [r3, #8]
   10bc8:	cmp	r1, #0
   10bcc:	addgt	r0, r0, #1
   10bd0:	ldr	r3, [r3, #4]
   10bd4:	cmp	r3, #0
   10bd8:	bne	10bc4 <abort@plt+0x324>
   10bdc:	cmp	r0, #1
   10be0:	ble	10d0c <abort@plt+0x46c>
   10be4:	ldr	r3, [r4, #28]
   10be8:	ldr	r1, [r4, #24]
   10bec:	sub	r3, r1, r3
   10bf0:	vmov	s14, r3
   10bf4:	vcvt.f64.s32	d7, s14
   10bf8:	vldr	d6, [pc, #392]	; 10d88 <abort@plt+0x4e8>
   10bfc:	vmul.f64	d7, d7, d6
   10c00:	vmov	s13, r1
   10c04:	vcvt.f64.s32	d6, s13
   10c08:	vdiv.f64	d1, d7, d6
   10c0c:	vstr	d1, [r4, #32]
   10c10:	vldr	s15, [r4, #12]
   10c14:	vcvt.f64.s32	d2, s15
   10c18:	vmul.f64	d1, d1, d2
   10c1c:	vldr	d4, [pc, #364]	; 10d90 <abort@plt+0x4f0>
   10c20:	vldr	d0, [pc, #352]	; 10d88 <abort@plt+0x4e8>
   10c24:	vmov	r3, s15
   10c28:	sub	r3, r3, #1
   10c2c:	vmov	s6, r3
   10c30:	vcvt.f64.s32	d3, s6
   10c34:	ldr	r1, [r4, #24]
   10c38:	ldr	r3, [r2, #8]
   10c3c:	sub	r1, r1, r3
   10c40:	ldr	r3, [r4, #28]
   10c44:	ldr	r0, [r2, #12]
   10c48:	sub	r3, r3, r0
   10c4c:	sub	r3, r1, r3
   10c50:	vmov	s14, r3
   10c54:	vcvt.f64.s32	d7, s14
   10c58:	vmul.f64	d7, d7, d0
   10c5c:	vmov	s13, r1
   10c60:	vcvt.f64.s32	d6, s13
   10c64:	vdiv.f64	d5, d7, d6
   10c68:	vstr	d5, [r2, #16]
   10c6c:	vmov.f64	d7, d1
   10c70:	vmls.f64	d7, d3, d5
   10c74:	vstr	d7, [r2, #24]
   10c78:	vadd.f64	d4, d4, d5
   10c7c:	ldr	r2, [r2, #4]
   10c80:	cmp	r2, #0
   10c84:	bne	10c34 <abort@plt+0x394>
   10c88:	vmul.f64	d4, d3, d4
   10c8c:	vdiv.f64	d7, d4, d2
   10c90:	vsub.f64	d1, d1, d7
   10c94:	vstr	d1, [r4, #40]	; 0x28
   10c98:	ldr	r3, [r4]
   10c9c:	cmp	r3, #0
   10ca0:	beq	10d14 <abort@plt+0x474>
   10ca4:	vldr	d6, [pc, #228]	; 10d90 <abort@plt+0x4f0>
   10ca8:	vldr	d7, [r3, #24]
   10cac:	vsub.f64	d7, d7, d1
   10cb0:	vmla.f64	d6, d7, d7
   10cb4:	ldr	r3, [r3, #4]
   10cb8:	cmp	r3, #0
   10cbc:	bne	10ca8 <abort@plt+0x408>
   10cc0:	vdiv.f64	d7, d6, d3
   10cc4:	vdiv.f64	d0, d7, d2
   10cc8:	vsqrt.f64	d8, d0
   10ccc:	vcmp.f64	d0, #0.0
   10cd0:	vmrs	APSR_nzcv, fpscr
   10cd4:	bmi	10d1c <abort@plt+0x47c>
   10cd8:	vldr	d7, [pc, #184]	; 10d98 <abort@plt+0x4f8>
   10cdc:	vmul.f64	d7, d8, d7
   10ce0:	vldr	d6, [r4, #40]	; 0x28
   10ce4:	vsub.f64	d6, d6, d7
   10ce8:	vldr	d5, [pc, #152]	; 10d88 <abort@plt+0x4e8>
   10cec:	vcmpe.f64	d6, d5
   10cf0:	vmrs	APSR_nzcv, fpscr
   10cf4:	bgt	10d34 <abort@plt+0x494>
   10cf8:	vcmpe.f64	d6, #0.0
   10cfc:	vmrs	APSR_nzcv, fpscr
   10d00:	bpl	10d24 <abort@plt+0x484>
   10d04:	vldr	d6, [pc, #132]	; 10d90 <abort@plt+0x4f0>
   10d08:	b	10d38 <abort@plt+0x498>
   10d0c:	ldr	r0, [pc, #140]	; 10da0 <abort@plt+0x500>
   10d10:	bl	11aac <error@@Base>
   10d14:	vldr	d6, [pc, #116]	; 10d90 <abort@plt+0x4f0>
   10d18:	b	10cc0 <abort@plt+0x420>
   10d1c:	bl	10858 <sqrt@plt>
   10d20:	b	10cd8 <abort@plt+0x438>
   10d24:	vcmp.f64	d6, d5
   10d28:	vmrs	APSR_nzcv, fpscr
   10d2c:	vmovgt.f64	d6, d5
   10d30:	b	10d38 <abort@plt+0x498>
   10d34:	vldr	d6, [pc, #76]	; 10d88 <abort@plt+0x4e8>
   10d38:	vstr	d6, [r5]
   10d3c:	vldr	d6, [r4, #40]	; 0x28
   10d40:	vadd.f64	d7, d7, d6
   10d44:	vldr	d6, [pc, #60]	; 10d88 <abort@plt+0x4e8>
   10d48:	vcmpe.f64	d7, d6
   10d4c:	vmrs	APSR_nzcv, fpscr
   10d50:	bgt	10d74 <abort@plt+0x4d4>
   10d54:	vcmpe.f64	d7, #0.0
   10d58:	vmrs	APSR_nzcv, fpscr
   10d5c:	vldrmi	d7, [pc, #44]	; 10d90 <abort@plt+0x4f0>
   10d60:	bmi	10d78 <abort@plt+0x4d8>
   10d64:	vcmp.f64	d7, d6
   10d68:	vmrs	APSR_nzcv, fpscr
   10d6c:	vmovgt.f64	d7, d6
   10d70:	b	10d78 <abort@plt+0x4d8>
   10d74:	vldr	d7, [pc, #12]	; 10d88 <abort@plt+0x4e8>
   10d78:	vstr	d7, [r6]
   10d7c:	vpop	{d8}
   10d80:	pop	{r4, r5, r6, pc}
   10d84:	nop			; (mov r0, r0)
   10d88:	andeq	r0, r0, r0
   10d8c:	subsmi	r0, r9, r0
	...
   10d98:			; <UNDEFINED> instruction: 0xf5c28f5c
   10d9c:	svccc	0x00ff5c28
   10da0:	ldrdeq	r2, [r1], -r4
   10da4:	andeq	r0, r0, r0
   10da8:	push	{r4, lr}
   10dac:	mov	r2, r0
   10db0:	mov	r1, #99	; 0x63
   10db4:	ldr	r0, [pc, #12]	; 10dc8 <abort@plt+0x528>
   10db8:	bl	107c8 <fgets@plt>
   10dbc:	adds	r0, r0, #0
   10dc0:	movne	r0, #1
   10dc4:	pop	{r4, pc}
   10dc8:	muleq	r2, ip, r0
   10dcc:	push	{r4, lr}
   10dd0:	mov	r4, r1
   10dd4:	bl	10da8 <abort@plt+0x508>
   10dd8:	cmp	r0, #0
   10ddc:	bne	10de8 <abort@plt+0x548>
   10de0:	mov	r0, #0
   10de4:	pop	{r4, pc}
   10de8:	mov	r2, r4
   10dec:	ldr	r1, [pc, #20]	; 10e08 <abort@plt+0x568>
   10df0:	ldr	r0, [pc, #20]	; 10e0c <abort@plt+0x56c>
   10df4:	bl	10864 <__isoc99_sscanf@plt>
   10df8:	cmp	r0, #1
   10dfc:	movne	r0, #0
   10e00:	moveq	r0, #1
   10e04:	pop	{r4, pc}
   10e08:	andeq	r2, r1, r8, ror #6
   10e0c:	muleq	r2, ip, r0
   10e10:	push	{r4, lr}
   10e14:	ldr	r2, [r1]
   10e18:	cmp	r2, #0
   10e1c:	beq	10e54 <abort@plt+0x5b4>
   10e20:	ldr	r3, [r1, #4]
   10e24:	sub	r3, r2, r3
   10e28:	vmov	s14, r3
   10e2c:	vcvt.f64.s32	d7, s14
   10e30:	vldr	d6, [pc, #56]	; 10e70 <abort@plt+0x5d0>
   10e34:	vmul.f64	d7, d7, d6
   10e38:	vmov	s13, r2
   10e3c:	vcvt.f64.s32	d6, s13
   10e40:	vdiv.f64	d5, d7, d6
   10e44:	vmov	r2, r3, d5
   10e48:	ldr	r1, [pc, #40]	; 10e78 <abort@plt+0x5d8>
   10e4c:	bl	1084c <fprintf@plt>
   10e50:	pop	{r4, pc}
   10e54:	mov	r3, r0
   10e58:	mov	r2, #8
   10e5c:	mov	r1, #1
   10e60:	ldr	r0, [pc, #20]	; 10e7c <abort@plt+0x5dc>
   10e64:	bl	107f8 <fwrite@plt>
   10e68:	pop	{r4, pc}
   10e6c:	nop			; (mov r0, r0)
   10e70:	andeq	r0, r0, r0
   10e74:	subsmi	r0, r9, r0
   10e78:	strdeq	r2, [r1], -r8
   10e7c:	andeq	r2, r1, ip, ror #5
   10e80:	push	{r4, r5, r6, lr}
   10e84:	mov	r4, r0
   10e88:	subs	r5, r1, #0
   10e8c:	beq	10ec4 <abort@plt+0x624>
   10e90:	ldr	r3, [r5, #4]
   10e94:	ldr	r2, [r5]
   10e98:	ldr	r1, [pc, #60]	; 10edc <abort@plt+0x63c>
   10e9c:	bl	1084c <fprintf@plt>
   10ea0:	mov	r1, r5
   10ea4:	mov	r0, r4
   10ea8:	bl	10e10 <abort@plt+0x570>
   10eac:	mov	r3, r4
   10eb0:	mov	r2, #3
   10eb4:	mov	r1, #1
   10eb8:	ldr	r0, [pc, #32]	; 10ee0 <abort@plt+0x640>
   10ebc:	bl	107f8 <fwrite@plt>
   10ec0:	pop	{r4, r5, r6, pc}
   10ec4:	mov	r3, r0
   10ec8:	mov	r2, #26
   10ecc:	mov	r1, #1
   10ed0:	ldr	r0, [pc, #12]	; 10ee4 <abort@plt+0x644>
   10ed4:	bl	107f8 <fwrite@plt>
   10ed8:	b	10eac <abort@plt+0x60c>
   10edc:	andeq	r2, r1, r0, lsl #6
   10ee0:	andeq	r2, r1, r8, lsr #6
   10ee4:	andeq	r2, r1, ip, lsl #6
   10ee8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10eec:	mov	r6, r0
   10ef0:	mov	r5, r1
   10ef4:	mov	r7, r2
   10ef8:	ldrb	r9, [sp, #32]
   10efc:	ldrb	sl, [sp, #36]	; 0x24
   10f00:	mov	r2, r3
   10f04:	ldr	r1, [pc, #240]	; 10ffc <abort@plt+0x75c>
   10f08:	bl	1084c <fprintf@plt>
   10f0c:	mov	r1, #0
   10f10:	mov	r0, r6
   10f14:	bl	10e80 <abort@plt+0x5e0>
   10f18:	cmp	r9, #0
   10f1c:	bne	10fd8 <abort@plt+0x738>
   10f20:	ldr	r2, [pc, #216]	; 11000 <abort@plt+0x760>
   10f24:	ldr	r1, [pc, #216]	; 11004 <abort@plt+0x764>
   10f28:	mov	r0, r6
   10f2c:	bl	1084c <fprintf@plt>
   10f30:	cmp	r7, #0
   10f34:	bgt	10ff0 <abort@plt+0x750>
   10f38:	b	10fac <abort@plt+0x70c>
   10f3c:	add	r4, r4, #1
   10f40:	sxth	r4, r4
   10f44:	cmp	r7, r4
   10f48:	blt	10f78 <abort@plt+0x6d8>
   10f4c:	add	r1, r5, r4, lsl #3
   10f50:	ldr	r3, [r5, r4, lsl #3]
   10f54:	cmp	r3, #0
   10f58:	ble	10f3c <abort@plt+0x69c>
   10f5c:	mov	r0, r6
   10f60:	bl	10e80 <abort@plt+0x5e0>
   10f64:	mov	r2, r4
   10f68:	mov	r1, r8
   10f6c:	mov	r0, r6
   10f70:	bl	1084c <fprintf@plt>
   10f74:	b	10f3c <abort@plt+0x69c>
   10f78:	cmp	r9, #0
   10f7c:	beq	10fac <abort@plt+0x70c>
   10f80:	add	r3, r7, #1
   10f84:	add	r1, r5, r3, lsl #3
   10f88:	ldr	r3, [r5, r3, lsl #3]
   10f8c:	cmp	r3, #0
   10f90:	ble	10fac <abort@plt+0x70c>
   10f94:	mov	r0, r6
   10f98:	bl	10e80 <abort@plt+0x5e0>
   10f9c:	mov	r2, r7
   10fa0:	ldr	r1, [pc, #96]	; 11008 <abort@plt+0x768>
   10fa4:	mov	r0, r6
   10fa8:	bl	1084c <fprintf@plt>
   10fac:	cmp	sl, #0
   10fb0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10fb4:	mov	r1, r5
   10fb8:	mov	r0, r6
   10fbc:	bl	10e80 <abort@plt+0x5e0>
   10fc0:	mov	r3, r6
   10fc4:	mov	r2, #7
   10fc8:	mov	r1, #1
   10fcc:	ldr	r0, [pc, #56]	; 1100c <abort@plt+0x76c>
   10fd0:	bl	107f8 <fwrite@plt>
   10fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10fd8:	ldr	r2, [pc, #48]	; 11010 <abort@plt+0x770>
   10fdc:	ldr	r1, [pc, #32]	; 11004 <abort@plt+0x764>
   10fe0:	mov	r0, r6
   10fe4:	bl	1084c <fprintf@plt>
   10fe8:	cmp	r7, #0
   10fec:	ble	10f80 <abort@plt+0x6e0>
   10ff0:	mov	r4, #1
   10ff4:	ldr	r8, [pc, #24]	; 11014 <abort@plt+0x774>
   10ff8:	b	10f4c <abort@plt+0x6ac>
   10ffc:	andeq	r2, r1, ip, lsr #6
   11000:	andeq	r2, r1, ip, asr r3
   11004:	muleq	r1, r0, r4
   11008:	andeq	r2, r1, r0, asr #6
   1100c:	andeq	r2, r1, ip, asr #6
   11010:	andeq	r2, r1, r4, asr r3
   11014:	andeq	r2, r1, r4, lsr r3
   11018:	push	{r4, r5, r6, r7, r8, lr}
   1101c:	mov	r6, r0
   11020:	mov	r5, r1
   11024:	mov	r7, r2
   11028:	mov	r0, r1
   1102c:	bl	11750 <abort@plt+0xeb0>
   11030:	add	r4, r5, #4096	; 0x1000
   11034:	ldr	r2, [pc, #136]	; 110c4 <abort@plt+0x824>
   11038:	ldr	r1, [r4, #3952]	; 0xf70
   1103c:	ldr	r0, [r4, #3956]	; 0xf74
   11040:	bl	12150 <error@@Base+0x6a4>
   11044:	mov	r2, r7
   11048:	ldr	r1, [pc, #120]	; 110c8 <abort@plt+0x828>
   1104c:	mov	r0, r6
   11050:	bl	1084c <fprintf@plt>
   11054:	mov	r1, #0
   11058:	mov	r0, r6
   1105c:	bl	10e80 <abort@plt+0x5e0>
   11060:	mov	r1, r6
   11064:	mov	r0, #10
   11068:	bl	1087c <fputc@plt>
   1106c:	ldr	r3, [r4, #3956]	; 0xf74
   11070:	cmp	r3, #0
   11074:	pople	{r4, r5, r6, r7, r8, pc}
   11078:	mov	r4, #0
   1107c:	add	r5, r5, #4096	; 0x1000
   11080:	ldr	r7, [pc, #68]	; 110cc <abort@plt+0x82c>
   11084:	ldr	r3, [r5, #3952]	; 0xf70
   11088:	ldr	r1, [r3, r4, lsl #2]
   1108c:	add	r1, r1, #12
   11090:	mov	r0, r6
   11094:	bl	10e80 <abort@plt+0x5e0>
   11098:	ldr	r3, [r5, #3952]	; 0xf70
   1109c:	ldr	r3, [r3, r4, lsl #2]
   110a0:	ldr	r2, [r3, #8]
   110a4:	mov	r1, r7
   110a8:	mov	r0, r6
   110ac:	bl	1084c <fprintf@plt>
   110b0:	add	r4, r4, #1
   110b4:	ldr	r3, [r5, #3956]	; 0xf74
   110b8:	cmp	r3, r4
   110bc:	bgt	11084 <abort@plt+0x7e4>
   110c0:	pop	{r4, r5, r6, r7, r8, pc}
   110c4:	ldrdeq	r1, [r1], -r0
   110c8:	andeq	r2, r1, ip, lsr #6
   110cc:	muleq	r1, r0, r4
   110d0:	push	{r4, lr}
   110d4:	ldr	r1, [r1, #8]
   110d8:	ldr	r0, [r0, #8]
   110dc:	bl	118fc <abort@plt+0x105c>
   110e0:	pop	{r4, pc}
   110e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110e8:	sub	sp, sp, #8
   110ec:	mov	r5, r0
   110f0:	mov	r4, r1
   110f4:	bl	10da8 <abort@plt+0x508>
   110f8:	cmp	r0, #0
   110fc:	moveq	r7, #0
   11100:	beq	111b0 <abort@plt+0x910>
   11104:	mov	r0, r5
   11108:	bl	10da8 <abort@plt+0x508>
   1110c:	cmp	r0, #0
   11110:	moveq	r7, #0
   11114:	beq	111b0 <abort@plt+0x910>
   11118:	mov	r7, #0
   1111c:	ldr	sl, [pc, #152]	; 111bc <abort@plt+0x91c>
   11120:	ldr	r8, [pc, #152]	; 111c0 <abort@plt+0x920>
   11124:	add	r6, r8, #29
   11128:	ldr	r9, [pc, #148]	; 111c4 <abort@plt+0x924>
   1112c:	b	111a0 <abort@plt+0x900>
   11130:	mov	r3, sp
   11134:	add	r2, sp, #4
   11138:	mov	r1, sl
   1113c:	mov	r0, r8
   11140:	bl	10864 <__isoc99_sscanf@plt>
   11144:	cmp	r0, #2
   11148:	bne	111b0 <abort@plt+0x910>
   1114c:	mov	r2, #10
   11150:	mov	r1, #0
   11154:	mov	r0, r6
   11158:	bl	10798 <strtol@plt>
   1115c:	cmp	r0, #0
   11160:	bne	1117c <abort@plt+0x8dc>
   11164:	mov	r1, r9
   11168:	mov	r0, r6
   1116c:	bl	1078c <strcmp@plt>
   11170:	cmp	r0, #0
   11174:	ldreq	r7, [sp, #4]
   11178:	movne	r0, #11
   1117c:	add	r2, r4, r0, lsl #3
   11180:	ldr	r3, [r4, r0, lsl #3]
   11184:	ldr	r1, [sp, #4]
   11188:	add	r3, r3, r1
   1118c:	str	r3, [r4, r0, lsl #3]
   11190:	ldr	r3, [r2, #4]
   11194:	ldr	r1, [sp]
   11198:	add	r3, r3, r1
   1119c:	str	r3, [r2, #4]
   111a0:	mov	r0, r5
   111a4:	bl	10da8 <abort@plt+0x508>
   111a8:	cmp	r0, #0
   111ac:	bne	11130 <abort@plt+0x890>
   111b0:	mov	r0, r7
   111b4:	add	sp, sp, #8
   111b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   111bc:	andeq	r2, r1, r4, ror #6
   111c0:	muleq	r2, ip, r0
   111c4:	andeq	r2, r1, ip, asr #6
   111c8:	ldr	r3, [r0]
   111cc:	add	r1, r3, r1
   111d0:	str	r1, [r0]
   111d4:	ldr	r3, [r0, #4]
   111d8:	add	r2, r3, r2
   111dc:	str	r2, [r0, #4]
   111e0:	bx	lr
   111e4:	push	{r4, r5, r6, r7, r8, lr}
   111e8:	mov	r7, r0
   111ec:	mov	r8, r1
   111f0:	mov	r6, r2
   111f4:	mov	r5, r3
   111f8:	bl	11660 <abort@plt+0xdc0>
   111fc:	subs	r4, r0, #0
   11200:	beq	11220 <abort@plt+0x980>
   11204:	ldr	r2, [r4, #12]
   11208:	add	r2, r2, r6
   1120c:	str	r2, [r4, #12]
   11210:	ldr	r3, [r4, #16]
   11214:	add	r3, r3, r5
   11218:	str	r3, [r4, #16]
   1121c:	pop	{r4, r5, r6, r7, r8, pc}
   11220:	mov	r1, #20
   11224:	mov	r0, #1
   11228:	bl	11ae8 <error@@Base+0x3c>
   1122c:	mov	r4, r0
   11230:	mov	r0, r8
   11234:	bl	107d4 <strdup@plt>
   11238:	str	r0, [r4, #8]
   1123c:	mov	r1, r4
   11240:	mov	r0, r7
   11244:	bl	116a8 <abort@plt+0xe08>
   11248:	b	11204 <abort@plt+0x964>
   1124c:	push	{r4, r5, r6, r7, r8, r9, lr}
   11250:	sub	sp, sp, #12
   11254:	mov	r5, r0
   11258:	mov	r6, r1
   1125c:	bl	10da8 <abort@plt+0x508>
   11260:	cmp	r0, #0
   11264:	beq	112dc <abort@plt+0xa3c>
   11268:	mov	r0, r5
   1126c:	bl	10da8 <abort@plt+0x508>
   11270:	cmp	r0, #0
   11274:	beq	112dc <abort@plt+0xa3c>
   11278:	ldr	r9, [pc, #100]	; 112e4 <abort@plt+0xa44>
   1127c:	ldr	r4, [pc, #100]	; 112e8 <abort@plt+0xa48>
   11280:	mov	r8, #0
   11284:	add	r7, r4, #29
   11288:	b	112cc <abort@plt+0xa2c>
   1128c:	mov	r3, sp
   11290:	add	r2, sp, #4
   11294:	mov	r1, r9
   11298:	mov	r0, r4
   1129c:	bl	10864 <__isoc99_sscanf@plt>
   112a0:	cmp	r0, #2
   112a4:	bne	112dc <abort@plt+0xa3c>
   112a8:	mov	r0, r4
   112ac:	bl	10840 <strlen@plt>
   112b0:	add	r0, r4, r0
   112b4:	strb	r8, [r0, #-1]
   112b8:	ldr	r3, [sp]
   112bc:	ldr	r2, [sp, #4]
   112c0:	mov	r1, r7
   112c4:	mov	r0, r6
   112c8:	bl	111e4 <abort@plt+0x944>
   112cc:	mov	r0, r5
   112d0:	bl	10da8 <abort@plt+0x508>
   112d4:	cmp	r0, #0
   112d8:	bne	1128c <abort@plt+0x9ec>
   112dc:	add	sp, sp, #12
   112e0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   112e4:	andeq	r2, r1, r4, ror #6
   112e8:	muleq	r2, ip, r0
   112ec:	push	{r4, r5, r6, r7, lr}
   112f0:	sub	sp, sp, #12
   112f4:	mov	r5, r0
   112f8:	mov	r6, r1
   112fc:	ldr	r1, [pc, #332]	; 11450 <abort@plt+0xbb0>
   11300:	mov	r0, r6
   11304:	bl	11b80 <error@@Base+0xd4>
   11308:	mov	r4, r0
   1130c:	bl	10da8 <abort@plt+0x508>
   11310:	cmp	r0, #0
   11314:	beq	1143c <abort@plt+0xb9c>
   11318:	mov	r2, #45	; 0x2d
   1131c:	ldr	r1, [pc, #304]	; 11454 <abort@plt+0xbb4>
   11320:	ldr	r0, [pc, #304]	; 11458 <abort@plt+0xbb8>
   11324:	bl	10894 <strncmp@plt>
   11328:	cmp	r0, #0
   1132c:	bne	1143c <abort@plt+0xb9c>
   11330:	mov	r0, r4
   11334:	bl	10da8 <abort@plt+0x508>
   11338:	cmp	r0, #0
   1133c:	beq	1143c <abort@plt+0xb9c>
   11340:	ldr	r1, [pc, #276]	; 1145c <abort@plt+0xbbc>
   11344:	ldr	r0, [pc, #268]	; 11458 <abort@plt+0xbb8>
   11348:	bl	1078c <strcmp@plt>
   1134c:	cmp	r0, #0
   11350:	bne	1143c <abort@plt+0xb9c>
   11354:	add	r1, sp, #4
   11358:	mov	r0, r4
   1135c:	bl	10dcc <abort@plt+0x52c>
   11360:	cmp	r0, #0
   11364:	beq	1143c <abort@plt+0xb9c>
   11368:	mov	r1, sp
   1136c:	mov	r0, r4
   11370:	bl	10dcc <abort@plt+0x52c>
   11374:	cmp	r0, #0
   11378:	beq	1143c <abort@plt+0xb9c>
   1137c:	mov	r0, r4
   11380:	bl	10da8 <abort@plt+0x508>
   11384:	cmp	r0, #0
   11388:	beq	1143c <abort@plt+0xb9c>
   1138c:	mov	r0, r4
   11390:	bl	10da8 <abort@plt+0x508>
   11394:	cmp	r0, #0
   11398:	beq	1143c <abort@plt+0xb9c>
   1139c:	ldr	r3, [r5]
   113a0:	ldr	r2, [sp, #4]
   113a4:	add	r3, r3, r2
   113a8:	str	r3, [r5]
   113ac:	ldr	r3, [r5, #4]
   113b0:	ldr	r2, [sp]
   113b4:	add	r3, r3, r2
   113b8:	str	r3, [r5, #4]
   113bc:	add	r1, r5, #8
   113c0:	mov	r0, r4
   113c4:	bl	110e4 <abort@plt+0x844>
   113c8:	mov	r7, r0
   113cc:	add	r1, r5, #416	; 0x1a0
   113d0:	mov	r0, r4
   113d4:	bl	110e4 <abort@plt+0x844>
   113d8:	mov	r6, r0
   113dc:	add	r1, r5, #824	; 0x338
   113e0:	mov	r0, r4
   113e4:	bl	110e4 <abort@plt+0x844>
   113e8:	ldr	r3, [sp, #4]
   113ec:	cmp	r3, #0
   113f0:	ble	1142c <abort@plt+0xb8c>
   113f4:	add	r1, r5, #920	; 0x398
   113f8:	mov	r0, r4
   113fc:	bl	110e4 <abort@plt+0x844>
   11400:	cmp	r7, #0
   11404:	ble	11414 <abort@plt+0xb74>
   11408:	add	r1, r5, #992	; 0x3e0
   1140c:	mov	r0, r4
   11410:	bl	1124c <abort@plt+0x9ac>
   11414:	cmp	r6, #0
   11418:	ble	1142c <abort@plt+0xb8c>
   1141c:	add	r1, r5, #9024	; 0x2340
   11420:	add	r1, r1, #24
   11424:	mov	r0, r4
   11428:	bl	1124c <abort@plt+0x9ac>
   1142c:	mov	r0, r4
   11430:	bl	11978 <abort@plt+0x10d8>
   11434:	add	sp, sp, #12
   11438:	pop	{r4, r5, r6, r7, pc}
   1143c:	ldr	r1, [pc, #28]	; 11460 <abort@plt+0xbc0>
   11440:	cmp	r6, #0
   11444:	movne	r1, r6
   11448:	ldr	r0, [pc, #20]	; 11464 <abort@plt+0xbc4>
   1144c:	bl	11b38 <error@@Base+0x8c>
   11450:	andeq	r2, r1, r4, ror r3
   11454:	andeq	r2, r1, r8, ror r3
   11458:	muleq	r2, ip, r0
   1145c:	andeq	r2, r1, r8, lsr #7
   11460:	andeq	r2, r1, ip, ror #6
   11464:	ldrdeq	r2, [r1], -r8
   11468:	push	{r4, r5, r6, r7, lr}
   1146c:	sub	sp, sp, #12
   11470:	mov	r4, r0
   11474:	mov	r0, r1
   11478:	ldr	r1, [pc, #292]	; 115a4 <abort@plt+0xd04>
   1147c:	bl	11b80 <error@@Base+0xd4>
   11480:	mov	r5, r0
   11484:	ldr	r3, [pc, #284]	; 115a8 <abort@plt+0xd08>
   11488:	ldr	r2, [pc, #284]	; 115ac <abort@plt+0xd0c>
   1148c:	ldr	r1, [pc, #284]	; 115b0 <abort@plt+0xd10>
   11490:	bl	1084c <fprintf@plt>
   11494:	ldr	r2, [r4]
   11498:	ldr	r1, [pc, #276]	; 115b4 <abort@plt+0xd14>
   1149c:	mov	r0, r5
   114a0:	bl	1084c <fprintf@plt>
   114a4:	ldr	r2, [r4, #4]
   114a8:	ldr	r1, [pc, #264]	; 115b8 <abort@plt+0xd18>
   114ac:	mov	r0, r5
   114b0:	bl	1084c <fprintf@plt>
   114b4:	mov	r1, r4
   114b8:	mov	r0, r5
   114bc:	bl	10e10 <abort@plt+0x570>
   114c0:	mov	r3, r5
   114c4:	mov	r2, #12
   114c8:	mov	r1, #1
   114cc:	ldr	r0, [pc, #232]	; 115bc <abort@plt+0xd1c>
   114d0:	bl	107f8 <fwrite@plt>
   114d4:	mov	r6, #1
   114d8:	str	r6, [sp, #4]
   114dc:	mov	r7, #0
   114e0:	str	r7, [sp]
   114e4:	ldr	r3, [pc, #212]	; 115c0 <abort@plt+0xd20>
   114e8:	mov	r2, #50	; 0x32
   114ec:	add	r1, r4, #8
   114f0:	mov	r0, r5
   114f4:	bl	10ee8 <abort@plt+0x648>
   114f8:	str	r6, [sp, #4]
   114fc:	str	r7, [sp]
   11500:	ldr	r3, [pc, #188]	; 115c4 <abort@plt+0xd24>
   11504:	mov	r2, #50	; 0x32
   11508:	add	r1, r4, #416	; 0x1a0
   1150c:	mov	r0, r5
   11510:	bl	10ee8 <abort@plt+0x648>
   11514:	str	r6, [sp, #4]
   11518:	str	r6, [sp]
   1151c:	ldr	r3, [pc, #164]	; 115c8 <abort@plt+0xd28>
   11520:	mov	r2, #10
   11524:	add	r1, r4, #824	; 0x338
   11528:	mov	r0, r5
   1152c:	bl	10ee8 <abort@plt+0x648>
   11530:	ldr	r3, [r4]
   11534:	cmp	r3, r7
   11538:	ble	11594 <abort@plt+0xcf4>
   1153c:	str	r7, [sp, #4]
   11540:	str	r7, [sp]
   11544:	ldr	r3, [pc, #128]	; 115cc <abort@plt+0xd2c>
   11548:	mov	r2, #8
   1154c:	add	r1, r4, #920	; 0x398
   11550:	mov	r0, r5
   11554:	bl	10ee8 <abort@plt+0x648>
   11558:	ldr	r3, [r4, #8]
   1155c:	cmp	r3, r7
   11560:	ble	11574 <abort@plt+0xcd4>
   11564:	ldr	r2, [pc, #84]	; 115c0 <abort@plt+0xd20>
   11568:	add	r1, r4, #992	; 0x3e0
   1156c:	mov	r0, r5
   11570:	bl	11018 <abort@plt+0x778>
   11574:	ldr	r3, [r4, #416]	; 0x1a0
   11578:	cmp	r3, #0
   1157c:	ble	11594 <abort@plt+0xcf4>
   11580:	add	r1, r4, #9024	; 0x2340
   11584:	ldr	r2, [pc, #56]	; 115c4 <abort@plt+0xd24>
   11588:	add	r1, r1, #24
   1158c:	mov	r0, r5
   11590:	bl	11018 <abort@plt+0x778>
   11594:	mov	r0, r5
   11598:	bl	11978 <abort@plt+0x10d8>
   1159c:	add	sp, sp, #12
   115a0:	pop	{r4, r5, r6, r7, pc}
   115a4:	andeq	r2, r1, ip, ror #7
   115a8:	andeq	r2, r1, r8, lsr #7
   115ac:	andeq	r2, r1, r8, ror r3
   115b0:	strdeq	r2, [r1], -r0
   115b4:	strdeq	r2, [r1], -r8
   115b8:	andeq	r2, r1, r8, lsl #8
   115bc:	andeq	r2, r1, r0, lsr #8
   115c0:	andeq	r2, r1, r0, lsr r4
   115c4:	andeq	r2, r1, ip, lsr r4
   115c8:	andeq	r2, r1, ip, asr #8
   115cc:	andeq	r2, r1, r4, ror #8
   115d0:	ldrb	r3, [r0]
   115d4:	cmp	r3, #0
   115d8:	beq	11618 <abort@plt+0xd78>
   115dc:	mov	r2, #0
   115e0:	add	r2, r2, r3
   115e4:	ldrb	r3, [r0, #1]!
   115e8:	cmp	r3, #0
   115ec:	bne	115e0 <abort@plt+0xd40>
   115f0:	ldr	r0, [pc, #40]	; 11620 <abort@plt+0xd80>
   115f4:	smull	r3, r0, r0, r2
   115f8:	add	r3, r0, r2
   115fc:	asr	r0, r2, #31
   11600:	rsb	r0, r0, r3, asr #8
   11604:	rsb	r3, r0, r0, lsl #6
   11608:	rsb	r0, r0, r3, lsl #3
   1160c:	sub	r0, r2, r0
   11610:	sxth	r0, r0
   11614:	bx	lr
   11618:	mov	r2, #0
   1161c:	b	115f0 <abort@plt+0xd50>
   11620:	subhi	r4, sl, #1552	; 0x610
   11624:	push	{r4, r5, r6, lr}
   11628:	mov	r6, r0
   1162c:	mov	r4, r0
   11630:	add	r5, r0, #8000	; 0x1f40
   11634:	add	r5, r5, #48	; 0x30
   11638:	mov	r0, r4
   1163c:	bl	11e94 <error@@Base+0x3e8>
   11640:	add	r4, r4, #16
   11644:	cmp	r4, r5
   11648:	bne	11638 <abort@plt+0xd98>
   1164c:	add	r6, r6, #4096	; 0x1000
   11650:	mov	r3, #0
   11654:	str	r3, [r6, #3952]	; 0xf70
   11658:	str	r3, [r6, #3956]	; 0xf74
   1165c:	pop	{r4, r5, r6, pc}
   11660:	push	{r4, r5, r6, lr}
   11664:	mov	r4, r0
   11668:	mov	r5, r1
   1166c:	mov	r0, r1
   11670:	bl	115d0 <abort@plt+0xd30>
   11674:	ldr	r4, [r4, r0, lsl #4]
   11678:	cmp	r4, #0
   1167c:	beq	116a0 <abort@plt+0xe00>
   11680:	ldr	r1, [r4, #8]
   11684:	mov	r0, r5
   11688:	bl	1078c <strcmp@plt>
   1168c:	cmp	r0, #0
   11690:	beq	116a0 <abort@plt+0xe00>
   11694:	ldr	r4, [r4, #4]
   11698:	cmp	r4, #0
   1169c:	bne	11680 <abort@plt+0xde0>
   116a0:	mov	r0, r4
   116a4:	pop	{r4, r5, r6, pc}
   116a8:	push	{r4, r5, r6, lr}
   116ac:	mov	r4, r0
   116b0:	mov	r5, r1
   116b4:	ldr	r0, [r1, #8]
   116b8:	bl	115d0 <abort@plt+0xd30>
   116bc:	mov	r1, r5
   116c0:	add	r0, r4, r0, lsl #4
   116c4:	bl	11eac <error@@Base+0x400>
   116c8:	add	r3, r4, #4096	; 0x1000
   116cc:	ldr	r0, [r3, #3952]	; 0xf70
   116d0:	cmp	r0, #0
   116d4:	beq	116e8 <abort@plt+0xe48>
   116d8:	bl	107bc <free@plt>
   116dc:	add	r3, r4, #4096	; 0x1000
   116e0:	mov	r2, #0
   116e4:	str	r2, [r3, #3952]	; 0xf70
   116e8:	add	r4, r4, #4096	; 0x1000
   116ec:	ldr	r3, [r4, #3956]	; 0xf74
   116f0:	add	r3, r3, #1
   116f4:	str	r3, [r4, #3956]	; 0xf74
   116f8:	pop	{r4, r5, r6, pc}
   116fc:	push	{r4, r5, r6, lr}
   11700:	mov	r4, r0
   11704:	mov	r5, r1
   11708:	ldr	r0, [r1, #8]
   1170c:	bl	115d0 <abort@plt+0xd30>
   11710:	mov	r1, r5
   11714:	add	r0, r4, r0, lsl #4
   11718:	bl	11f08 <error@@Base+0x45c>
   1171c:	add	r3, r4, #4096	; 0x1000
   11720:	ldr	r0, [r3, #3952]	; 0xf70
   11724:	cmp	r0, #0
   11728:	beq	1173c <abort@plt+0xe9c>
   1172c:	bl	107bc <free@plt>
   11730:	add	r3, r4, #4096	; 0x1000
   11734:	mov	r2, #0
   11738:	str	r2, [r3, #3952]	; 0xf70
   1173c:	add	r4, r4, #4096	; 0x1000
   11740:	ldr	r3, [r4, #3956]	; 0xf74
   11744:	sub	r3, r3, #1
   11748:	str	r3, [r4, #3956]	; 0xf74
   1174c:	pop	{r4, r5, r6, pc}
   11750:	add	r3, r0, #4096	; 0x1000
   11754:	ldr	r3, [r3, #3952]	; 0xf70
   11758:	cmp	r3, #0
   1175c:	bxne	lr
   11760:	add	r3, r0, #4096	; 0x1000
   11764:	ldr	r3, [r3, #3956]	; 0xf74
   11768:	cmp	r3, #0
   1176c:	bxeq	lr
   11770:	push	{r4, r5, r6, lr}
   11774:	mov	r4, r0
   11778:	mov	r1, #4
   1177c:	mov	r0, r3
   11780:	bl	11ae8 <error@@Base+0x3c>
   11784:	add	r3, r4, #4096	; 0x1000
   11788:	str	r0, [r3, #3952]	; 0xf70
   1178c:	mov	r1, #0
   11790:	mov	lr, r1
   11794:	mov	ip, r3
   11798:	ldr	r5, [pc, #64]	; 117e0 <abort@plt+0xf40>
   1179c:	b	117ac <abort@plt+0xf0c>
   117a0:	add	lr, lr, #1
   117a4:	cmp	lr, r5
   117a8:	beq	117dc <abort@plt+0xf3c>
   117ac:	ldr	r3, [r4, lr, lsl #4]
   117b0:	cmp	r3, #0
   117b4:	beq	117a0 <abort@plt+0xf00>
   117b8:	lsl	r2, r1, #2
   117bc:	add	r1, r1, #1
   117c0:	ldr	r0, [ip, #3952]	; 0xf70
   117c4:	str	r3, [r0, r2]
   117c8:	ldr	r3, [r3, #4]
   117cc:	add	r2, r2, #4
   117d0:	cmp	r3, #0
   117d4:	bne	117bc <abort@plt+0xf1c>
   117d8:	b	117a0 <abort@plt+0xf00>
   117dc:	pop	{r4, r5, r6, pc}
   117e0:	strdeq	r0, [r0], -r7
   117e4:	push	{r4, r5, r6, r7, r8, lr}
   117e8:	mov	r7, r0
   117ec:	mov	r6, r1
   117f0:	mov	r4, r0
   117f4:	add	r5, r0, #8000	; 0x1f40
   117f8:	add	r5, r5, #48	; 0x30
   117fc:	mov	r1, r6
   11800:	mov	r0, r4
   11804:	bl	11fd0 <error@@Base+0x524>
   11808:	add	r4, r4, #16
   1180c:	cmp	r4, r5
   11810:	bne	117fc <abort@plt+0xf5c>
   11814:	add	r3, r7, #4096	; 0x1000
   11818:	ldr	r0, [r3, #3952]	; 0xf70
   1181c:	cmp	r0, #0
   11820:	beq	11834 <abort@plt+0xf94>
   11824:	bl	107bc <free@plt>
   11828:	add	r3, r7, #4096	; 0x1000
   1182c:	mov	r2, #0
   11830:	str	r2, [r3, #3952]	; 0xf70
   11834:	add	r7, r7, #4096	; 0x1000
   11838:	mov	r3, #0
   1183c:	str	r3, [r7, #3956]	; 0xf74
   11840:	pop	{r4, r5, r6, r7, r8, pc}
   11844:	push	{r4, r5, lr}
   11848:	sub	sp, sp, #116	; 0x74
   1184c:	mov	r5, r0
   11850:	ldr	r3, [pc, #44]	; 11884 <abort@plt+0xfe4>
   11854:	ldr	r4, [r3]
   11858:	bl	10828 <getpid@plt>
   1185c:	str	r5, [sp]
   11860:	mov	r3, r0
   11864:	mov	r2, r4
   11868:	ldr	r1, [pc, #24]	; 11888 <abort@plt+0xfe8>
   1186c:	add	r0, sp, #12
   11870:	bl	10888 <sprintf@plt>
   11874:	add	r0, sp, #12
   11878:	bl	107d4 <strdup@plt>
   1187c:	add	sp, sp, #116	; 0x74
   11880:	pop	{r4, r5, pc}
   11884:	andeq	r7, r2, r4, lsl r4
   11888:	andeq	r2, r1, ip, ror #8
   1188c:	push	{r7, lr}
   11890:	mov	r7, r0
   11894:	ldr	r3, [pc, #88]	; 118f4 <abort@plt+0x1054>
   11898:	ldr	r3, [r3]
   1189c:	cmp	r3, #0
   118a0:	beq	118a8 <abort@plt+0x1008>
   118a4:	blx	r3
   118a8:	ldr	r3, [pc, #72]	; 118f8 <abort@plt+0x1058>
   118ac:	ldrsh	r3, [r3]
   118b0:	cmp	r3, #0
   118b4:	ble	118ec <abort@plt+0x104c>
   118b8:	mov	r4, #1
   118bc:	ldr	r6, [pc, #52]	; 118f8 <abort@plt+0x1058>
   118c0:	mov	r0, r4
   118c4:	bl	11844 <abort@plt+0xfa4>
   118c8:	mov	r5, r0
   118cc:	bl	107e0 <unlink@plt>
   118d0:	mov	r0, r5
   118d4:	bl	107bc <free@plt>
   118d8:	add	r4, r4, #1
   118dc:	sxth	r4, r4
   118e0:	ldrsh	r3, [r6]
   118e4:	cmp	r3, r4
   118e8:	bge	118c0 <abort@plt+0x1020>
   118ec:	mov	r0, r7
   118f0:	bl	10834 <exit@plt>
   118f4:	andeq	r7, r2, r8, lsl r4
   118f8:	andeq	r3, r2, r0, lsl #2
   118fc:	push	{r4, lr}
   11900:	ldrb	r3, [r0]
   11904:	cmp	r3, #0
   11908:	beq	11954 <abort@plt+0x10b4>
   1190c:	ldrb	r2, [r1]
   11910:	cmp	r2, r3
   11914:	bne	11970 <abort@plt+0x10d0>
   11918:	mov	ip, r1
   1191c:	mov	r2, #0
   11920:	add	r2, r2, #1
   11924:	mov	r4, r2
   11928:	ldrb	r3, [r0, #1]!
   1192c:	cmp	r3, #0
   11930:	beq	11958 <abort@plt+0x10b8>
   11934:	ldrb	lr, [ip, #1]!
   11938:	cmp	lr, r3
   1193c:	beq	11920 <abort@plt+0x1080>
   11940:	ldrb	r2, [r1, r4]
   11944:	cmp	r2, r3
   11948:	mvnhi	r0, #0
   1194c:	movls	r0, #1
   11950:	pop	{r4, pc}
   11954:	mov	r4, #0
   11958:	ldrb	r3, [r1, r4]
   1195c:	cmp	r3, #0
   11960:	movne	r3, #0
   11964:	bne	11940 <abort@plt+0x10a0>
   11968:	mov	r0, #0
   1196c:	pop	{r4, pc}
   11970:	mov	r4, #0
   11974:	b	11940 <abort@plt+0x10a0>
   11978:	ldr	r3, [pc, #36]	; 119a4 <abort@plt+0x1104>
   1197c:	ldr	r3, [r3]
   11980:	cmp	r3, r0
   11984:	bxeq	lr
   11988:	ldr	r3, [pc, #24]	; 119a8 <abort@plt+0x1108>
   1198c:	ldr	r3, [r3]
   11990:	cmp	r0, r3
   11994:	bxeq	lr
   11998:	push	{r4, lr}
   1199c:	bl	10870 <fclose@plt>
   119a0:	pop	{r4, pc}
   119a4:	muleq	r2, r0, r0
   119a8:	muleq	r2, r4, r0
   119ac:	push	{lr}		; (str lr, [sp, #-4]!)
   119b0:	sub	sp, sp, #92	; 0x5c
   119b4:	mov	r2, sp
   119b8:	mov	r1, r0
   119bc:	mov	r0, #3
   119c0:	bl	107ec <__xstat@plt>
   119c4:	clz	r0, r0
   119c8:	lsr	r0, r0, #5
   119cc:	add	sp, sp, #92	; 0x5c
   119d0:	pop	{pc}		; (ldr pc, [sp], #4)
   119d4:	push	{r4, lr}
   119d8:	ldr	r3, [pc, #32]	; 11a00 <abort@plt+0x1160>
   119dc:	ldrh	r0, [r3]
   119e0:	add	r0, r0, #1
   119e4:	sxth	r0, r0
   119e8:	strh	r0, [r3]
   119ec:	bl	11844 <abort@plt+0xfa4>
   119f0:	mov	r4, r0
   119f4:	bl	107e0 <unlink@plt>
   119f8:	mov	r0, r4
   119fc:	pop	{r4, pc}
   11a00:	andeq	r3, r2, r0, lsl #2
   11a04:	push	{r4, lr}
   11a08:	mov	r4, r0
   11a0c:	bl	10840 <strlen@plt>
   11a10:	sub	r0, r0, #1
   11a14:	sxth	r0, r0
   11a18:	cmp	r0, #0
   11a1c:	blt	11a48 <abort@plt+0x11a8>
   11a20:	ldrb	r3, [r4, r0]
   11a24:	cmp	r3, #47	; 0x2f
   11a28:	beq	11a48 <abort@plt+0x11a8>
   11a2c:	sub	r0, r0, #1
   11a30:	sxth	r0, r0
   11a34:	cmp	r0, #0
   11a38:	blt	11a48 <abort@plt+0x11a8>
   11a3c:	ldrb	r3, [r4, r0]
   11a40:	cmp	r3, #47	; 0x2f
   11a44:	bne	11a2c <abort@plt+0x118c>
   11a48:	add	r0, r0, #1
   11a4c:	add	r0, r4, r0
   11a50:	pop	{r4, pc}
   11a54:	push	{r4, lr}
   11a58:	mov	r0, #0
   11a5c:	bl	1188c <abort@plt+0xfec>
   11a60:	push	{r4, lr}
   11a64:	ldr	r2, [pc, #48]	; 11a9c <abort@plt+0x11fc>
   11a68:	ldr	r2, [r2]
   11a6c:	cmp	r2, #0
   11a70:	beq	11a7c <abort@plt+0x11dc>
   11a74:	blx	r2
   11a78:	bl	11a54 <abort@plt+0x11b4>
   11a7c:	mov	r3, r0
   11a80:	ldr	r2, [pc, #24]	; 11aa0 <abort@plt+0x1200>
   11a84:	ldr	r2, [r2]
   11a88:	ldr	r1, [pc, #20]	; 11aa4 <abort@plt+0x1204>
   11a8c:	ldr	r0, [pc, #20]	; 11aa8 <abort@plt+0x1208>
   11a90:	ldr	r0, [r0]
   11a94:	bl	1084c <fprintf@plt>
   11a98:	b	11a78 <abort@plt+0x11d8>
   11a9c:	andeq	r7, r2, r0, lsl r4
   11aa0:	andeq	r7, r2, r4, lsl r4
   11aa4:	andeq	r2, r1, ip, ror r4
   11aa8:	andeq	r3, r2, r8, lsl #1

00011aac <error@@Base>:
   11aac:	push	{r4, lr}
   11ab0:	mov	r3, r0
   11ab4:	ldr	r2, [pc, #28]	; 11ad8 <error@@Base+0x2c>
   11ab8:	ldr	r2, [r2]
   11abc:	ldr	r1, [pc, #24]	; 11adc <error@@Base+0x30>
   11ac0:	ldr	r0, [pc, #24]	; 11ae0 <error@@Base+0x34>
   11ac4:	ldr	r0, [r0]
   11ac8:	bl	1084c <fprintf@plt>
   11acc:	ldr	r3, [pc, #16]	; 11ae4 <error@@Base+0x38>
   11ad0:	ldr	r0, [r3]
   11ad4:	bl	1188c <abort@plt+0xfec>
   11ad8:	andeq	r7, r2, r4, lsl r4
   11adc:	andeq	r2, r1, ip, lsl #9
   11ae0:	andeq	r3, r2, r8, lsl #1
   11ae4:	andeq	r3, r2, ip, ror r0
   11ae8:	push	{r4, lr}
   11aec:	bl	10780 <calloc@plt>
   11af0:	cmp	r0, #0
   11af4:	popne	{r4, pc}
   11af8:	ldr	r0, [pc]	; 11b00 <error@@Base+0x54>
   11afc:	bl	11aac <error@@Base>
   11b00:	muleq	r1, r4, r4
   11b04:	ldr	r3, [pc, #36]	; 11b30 <error@@Base+0x84>
   11b08:	ldrb	r3, [r3, #2]
   11b0c:	cmp	r3, #0
   11b10:	beq	11b18 <error@@Base+0x6c>
   11b14:	bx	lr
   11b18:	push	{r4, lr}
   11b1c:	mov	r2, #1
   11b20:	ldr	r3, [pc, #8]	; 11b30 <error@@Base+0x84>
   11b24:	strb	r2, [r3, #2]
   11b28:	ldr	r0, [pc, #4]	; 11b34 <error@@Base+0x88>
   11b2c:	bl	11aac <error@@Base>
   11b30:	andeq	r3, r2, r0, lsl #2
   11b34:			; <UNDEFINED> instruction: 0x000124b0
   11b38:	push	{lr}		; (str lr, [sp, #-4]!)
   11b3c:	sub	sp, sp, #12
   11b40:	ldr	r3, [pc, #40]	; 11b70 <error@@Base+0xc4>
   11b44:	ldr	r2, [r3]
   11b48:	ldr	r3, [pc, #36]	; 11b74 <error@@Base+0xc8>
   11b4c:	ldr	ip, [r3]
   11b50:	str	r1, [sp]
   11b54:	mov	r3, r0
   11b58:	ldr	r1, [pc, #24]	; 11b78 <error@@Base+0xcc>
   11b5c:	mov	r0, ip
   11b60:	bl	1084c <fprintf@plt>
   11b64:	ldr	r3, [pc, #16]	; 11b7c <error@@Base+0xd0>
   11b68:	ldr	r0, [r3]
   11b6c:	bl	1188c <abort@plt+0xfec>
   11b70:	andeq	r7, r2, r4, lsl r4
   11b74:	andeq	r3, r2, r8, lsl #1
   11b78:	andeq	r2, r1, r0, asr #9
   11b7c:	andeq	r3, r2, ip, ror r0
   11b80:	push	{r4, r5, r6, lr}
   11b84:	subs	r5, r0, #0
   11b88:	beq	11bb8 <error@@Base+0x10c>
   11b8c:	mov	r4, r1
   11b90:	mov	r0, r5
   11b94:	bl	107b0 <fopen@plt>
   11b98:	cmp	r0, #0
   11b9c:	popne	{r4, r5, r6, pc}
   11ba0:	ldrb	r3, [r4]
   11ba4:	cmp	r3, #119	; 0x77
   11ba8:	beq	11bd0 <error@@Base+0x124>
   11bac:	mov	r1, r5
   11bb0:	ldr	r0, [pc, #36]	; 11bdc <error@@Base+0x130>
   11bb4:	bl	11b38 <error@@Base+0x8c>
   11bb8:	ldrb	r3, [r1]
   11bbc:	cmp	r3, #114	; 0x72
   11bc0:	ldreq	r3, [pc, #24]	; 11be0 <error@@Base+0x134>
   11bc4:	ldrne	r3, [pc, #24]	; 11be4 <error@@Base+0x138>
   11bc8:	ldr	r0, [r3]
   11bcc:	pop	{r4, r5, r6, pc}
   11bd0:	mov	r1, r5
   11bd4:	ldr	r0, [pc, #12]	; 11be8 <error@@Base+0x13c>
   11bd8:	bl	11b38 <error@@Base+0x8c>
   11bdc:	andeq	r2, r1, r8, ror #9
   11be0:	muleq	r2, r0, r0
   11be4:	muleq	r2, r4, r0
   11be8:	ldrdeq	r2, [r1], -r0
   11bec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bf0:	sub	sp, sp, #20
   11bf4:	mov	r5, r0
   11bf8:	str	r0, [sp, #8]
   11bfc:	mov	sl, r1
   11c00:	str	r2, [sp, #12]
   11c04:	mov	r6, r3
   11c08:	ldr	r0, [r1]
   11c0c:	bl	11a04 <abort@plt+0x1164>
   11c10:	ldr	r3, [pc, #468]	; 11dec <error@@Base+0x340>
   11c14:	str	r0, [r3]
   11c18:	ldr	r4, [pc, #464]	; 11df0 <error@@Base+0x344>
   11c1c:	mov	r1, r4
   11c20:	mov	r0, #2
   11c24:	bl	10810 <__sysv_signal@plt>
   11c28:	mov	r1, r4
   11c2c:	mov	r0, #15
   11c30:	bl	10810 <__sysv_signal@plt>
   11c34:	ldr	r8, [r5]
   11c38:	cmp	r8, #1
   11c3c:	beq	11c5c <error@@Base+0x1b0>
   11c40:	movle	r7, #0
   11c44:	ble	11c70 <error@@Base+0x1c4>
   11c48:	mov	r7, #0
   11c4c:	mov	r3, #1
   11c50:	str	r3, [sp, #4]
   11c54:	mov	r4, r3
   11c58:	b	11d08 <error@@Base+0x25c>
   11c5c:	ldr	r3, [pc, #400]	; 11df4 <error@@Base+0x348>
   11c60:	ldrb	r3, [r3, #4]
   11c64:	cmp	r3, #0
   11c68:	moveq	r7, #0
   11c6c:	bne	11c80 <error@@Base+0x1d4>
   11c70:	ldr	r3, [sp, #8]
   11c74:	str	r7, [r3]
   11c78:	add	sp, sp, #20
   11c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c80:	ldr	r0, [sp, #12]
   11c84:	bl	11a60 <abort@plt+0x11c0>
   11c88:	ldr	r0, [sp, #12]
   11c8c:	bl	11a60 <abort@plt+0x11c0>
   11c90:	mov	r1, r6
   11c94:	b	11d9c <error@@Base+0x2f0>
   11c98:	ldr	r3, [r1, #8]
   11c9c:	cmp	r3, #0
   11ca0:	beq	11cc8 <error@@Base+0x21c>
   11ca4:	ldrb	r2, [r5, #2]
   11ca8:	cmp	r2, #0
   11cac:	bne	11cc8 <error@@Base+0x21c>
   11cb0:	ldrb	r2, [r3]
   11cb4:	cmp	r2, #0
   11cb8:	bne	11cd4 <error@@Base+0x228>
   11cbc:	mov	r2, #1
   11cc0:	strb	r2, [r3]
   11cc4:	b	11cec <error@@Base+0x240>
   11cc8:	mov	r1, r5
   11ccc:	ldr	r0, [pc, #292]	; 11df8 <error@@Base+0x34c>
   11cd0:	bl	11b38 <error@@Base+0x8c>
   11cd4:	mov	r1, r5
   11cd8:	ldr	r0, [pc, #284]	; 11dfc <error@@Base+0x350>
   11cdc:	bl	11b38 <error@@Base+0x8c>
   11ce0:	add	r3, r7, #1
   11ce4:	str	r5, [sl, r7, lsl #2]
   11ce8:	sxth	r7, r3
   11cec:	add	r4, r4, #1
   11cf0:	sxth	r4, r4
   11cf4:	str	r4, [sp, #4]
   11cf8:	ldr	r3, [sp, #8]
   11cfc:	ldr	r8, [r3]
   11d00:	cmp	r4, r8
   11d04:	bge	11c70 <error@@Base+0x1c4>
   11d08:	lsl	fp, r4, #2
   11d0c:	ldr	r5, [sl, r4, lsl #2]
   11d10:	ldrb	r3, [r5]
   11d14:	cmp	r3, #45	; 0x2d
   11d18:	bne	11ce0 <error@@Base+0x234>
   11d1c:	ldrb	r9, [r5, #1]
   11d20:	cmp	r9, #0
   11d24:	beq	11ce0 <error@@Base+0x234>
   11d28:	mov	r0, r5
   11d2c:	bl	10840 <strlen@plt>
   11d30:	mov	r2, r0
   11d34:	mov	r1, r5
   11d38:	ldr	r0, [pc, #192]	; 11e00 <error@@Base+0x354>
   11d3c:	bl	10894 <strncmp@plt>
   11d40:	cmp	r0, #0
   11d44:	beq	11c88 <error@@Base+0x1dc>
   11d48:	ldr	r3, [sp, #4]
   11d4c:	add	r3, r3, #1
   11d50:	cmp	r3, r8
   11d54:	addlt	r3, sl, fp
   11d58:	ldrlt	r0, [r3, #4]
   11d5c:	movge	r0, #0
   11d60:	cmp	r6, #0
   11d64:	beq	11cc8 <error@@Base+0x21c>
   11d68:	ldrb	r2, [r6]
   11d6c:	cmp	r9, r2
   11d70:	cmpne	r2, #0
   11d74:	beq	11c90 <error@@Base+0x1e4>
   11d78:	mov	r3, #0
   11d7c:	add	r3, r3, #1
   11d80:	sxth	r3, r3
   11d84:	add	r2, r3, r3, lsl #1
   11d88:	add	r1, r6, r2, lsl #2
   11d8c:	ldrb	r2, [r6, r2, lsl #2]
   11d90:	cmp	r9, r2
   11d94:	cmpne	r2, #0
   11d98:	bne	11d7c <error@@Base+0x2d0>
   11d9c:	cmp	r2, #0
   11da0:	beq	11cc8 <error@@Base+0x21c>
   11da4:	ldr	r3, [r1, #4]
   11da8:	cmp	r3, #0
   11dac:	beq	11c98 <error@@Base+0x1ec>
   11db0:	ldrb	r2, [r5, #2]
   11db4:	cmp	r2, #0
   11db8:	cmpeq	r0, #0
   11dbc:	beq	11c98 <error@@Base+0x1ec>
   11dc0:	ldr	r1, [r3]
   11dc4:	cmp	r1, #0
   11dc8:	bne	11cd4 <error@@Base+0x228>
   11dcc:	cmp	r2, #0
   11dd0:	addne	r0, r5, #2
   11dd4:	str	r0, [r3]
   11dd8:	ldrb	r3, [r5, #2]
   11ddc:	cmp	r3, #0
   11de0:	addeq	r4, r4, #1
   11de4:	sxtheq	r4, r4
   11de8:	b	11cec <error@@Base+0x240>
   11dec:	andeq	r7, r2, r4, lsl r4
   11df0:	andeq	r1, r1, r4, lsl #22
   11df4:	andeq	r3, r2, ip, ror r0
   11df8:	andeq	r2, r1, r4, lsl #10
   11dfc:	andeq	r2, r1, r4, lsl r5
   11e00:	strdeq	r2, [r1], -ip
   11e04:	push	{lr}		; (str lr, [sp, #-4]!)
   11e08:	sub	sp, sp, #12
   11e0c:	ldr	r3, [pc, #36]	; 11e38 <error@@Base+0x38c>
   11e10:	ldr	r2, [r3]
   11e14:	ldr	r3, [pc, #32]	; 11e3c <error@@Base+0x390>
   11e18:	ldr	ip, [r3]
   11e1c:	str	r1, [sp]
   11e20:	mov	r3, r0
   11e24:	ldr	r1, [pc, #20]	; 11e40 <error@@Base+0x394>
   11e28:	mov	r0, ip
   11e2c:	bl	1084c <fprintf@plt>
   11e30:	add	sp, sp, #12
   11e34:	pop	{pc}		; (ldr pc, [sp], #4)
   11e38:	andeq	r7, r2, r4, lsl r4
   11e3c:	andeq	r3, r2, r8, lsl #1
   11e40:	andeq	r2, r1, r0, asr #9
   11e44:	push	{r4, lr}
   11e48:	mov	r4, r0
   11e4c:	str	r1, [r2]
   11e50:	str	r3, [r2, #4]
   11e54:	cmp	r1, #0
   11e58:	strne	r2, [r1, #4]
   11e5c:	streq	r2, [r0]
   11e60:	cmp	r3, #0
   11e64:	strne	r2, [r3]
   11e68:	streq	r2, [r0, #4]
   11e6c:	ldr	r0, [r0, #8]
   11e70:	cmp	r0, #0
   11e74:	beq	11e84 <error@@Base+0x3d8>
   11e78:	bl	107bc <free@plt>
   11e7c:	mov	r3, #0
   11e80:	str	r3, [r4, #8]
   11e84:	ldr	r3, [r4, #12]
   11e88:	add	r3, r3, #1
   11e8c:	str	r3, [r4, #12]
   11e90:	pop	{r4, pc}
   11e94:	mov	r3, #0
   11e98:	str	r3, [r0, #4]
   11e9c:	str	r3, [r0]
   11ea0:	str	r3, [r0, #8]
   11ea4:	str	r3, [r0, #12]
   11ea8:	bx	lr
   11eac:	push	{r4, lr}
   11eb0:	ldr	r3, [r0]
   11eb4:	mov	r2, r1
   11eb8:	mov	r1, #0
   11ebc:	bl	11e44 <error@@Base+0x398>
   11ec0:	pop	{r4, pc}
   11ec4:	push	{r4, lr}
   11ec8:	mov	r3, #0
   11ecc:	mov	r2, r1
   11ed0:	ldr	r1, [r0, #4]
   11ed4:	bl	11e44 <error@@Base+0x398>
   11ed8:	pop	{r4, pc}
   11edc:	push	{r4, lr}
   11ee0:	mov	ip, r2
   11ee4:	mov	r3, r2
   11ee8:	mov	r2, r1
   11eec:	ldr	r1, [ip]
   11ef0:	bl	11e44 <error@@Base+0x398>
   11ef4:	pop	{r4, pc}
   11ef8:	push	{r4, lr}
   11efc:	ldr	r3, [r1, #4]
   11f00:	bl	11e44 <error@@Base+0x398>
   11f04:	pop	{r4, pc}
   11f08:	push	{r4, lr}
   11f0c:	mov	r4, r0
   11f10:	ldr	r3, [r1]
   11f14:	cmp	r3, #0
   11f18:	ldrne	r2, [r1, #4]
   11f1c:	strne	r2, [r3, #4]
   11f20:	ldreq	r3, [r1, #4]
   11f24:	streq	r3, [r0]
   11f28:	ldr	r3, [r1, #4]
   11f2c:	cmp	r3, #0
   11f30:	ldrne	r2, [r1]
   11f34:	strne	r2, [r3]
   11f38:	ldreq	r3, [r1]
   11f3c:	streq	r3, [r0, #4]
   11f40:	mov	r3, #0
   11f44:	str	r3, [r1, #4]
   11f48:	str	r3, [r1]
   11f4c:	ldr	r0, [r0, #8]
   11f50:	cmp	r0, r3
   11f54:	beq	11f64 <error@@Base+0x4b8>
   11f58:	bl	107bc <free@plt>
   11f5c:	mov	r3, #0
   11f60:	str	r3, [r4, #8]
   11f64:	ldr	r3, [r4, #12]
   11f68:	sub	r3, r3, #1
   11f6c:	str	r3, [r4, #12]
   11f70:	pop	{r4, pc}
   11f74:	ldr	r3, [r0, #8]
   11f78:	cmp	r3, #0
   11f7c:	bxne	lr
   11f80:	ldr	r3, [r0, #12]
   11f84:	cmp	r3, #0
   11f88:	bxeq	lr
   11f8c:	push	{r4, lr}
   11f90:	mov	r4, r0
   11f94:	mov	r1, #4
   11f98:	mov	r0, r3
   11f9c:	bl	11ae8 <error@@Base+0x3c>
   11fa0:	str	r0, [r4, #8]
   11fa4:	ldr	r3, [r4]
   11fa8:	cmp	r3, #0
   11fac:	popeq	{r4, pc}
   11fb0:	mov	r2, #0
   11fb4:	ldr	r1, [r4, #8]
   11fb8:	str	r3, [r1, r2]
   11fbc:	ldr	r3, [r3, #4]
   11fc0:	add	r2, r2, #4
   11fc4:	cmp	r3, #0
   11fc8:	bne	11fb4 <error@@Base+0x508>
   11fcc:	pop	{r4, pc}
   11fd0:	push	{r4, r5, r6, lr}
   11fd4:	mov	r5, r0
   11fd8:	mov	r6, r1
   11fdc:	ldr	r4, [r0]
   11fe0:	cmp	r4, #0
   11fe4:	popeq	{r4, r5, r6, pc}
   11fe8:	mov	r1, r4
   11fec:	mov	r0, r5
   11ff0:	bl	11f08 <error@@Base+0x45c>
   11ff4:	mov	r0, r4
   11ff8:	blx	r6
   11ffc:	ldr	r4, [r5]
   12000:	cmp	r4, #0
   12004:	bne	11fe8 <error@@Base+0x53c>
   12008:	pop	{r4, r5, r6, pc}
   1200c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12010:	mov	sl, r0
   12014:	mov	r9, r1
   12018:	ldr	r3, [pc, #300]	; 1214c <error@@Base+0x6a0>
   1201c:	ldr	r3, [r3]
   12020:	ldr	r8, [r3, r0, lsl #2]
   12024:	cmp	r0, r1
   12028:	movge	r3, r1
   1202c:	movge	r4, r0
   12030:	bge	12110 <error@@Base+0x664>
   12034:	mov	r4, r0
   12038:	mov	r3, r1
   1203c:	ldr	r6, [pc, #264]	; 1214c <error@@Base+0x6a0>
   12040:	b	120c4 <error@@Base+0x618>
   12044:	mov	r5, r3
   12048:	cmp	r4, r5
   1204c:	beq	12108 <error@@Base+0x65c>
   12050:	ldr	r2, [r6]
   12054:	add	r3, r4, #1
   12058:	lsl	r7, r4, #2
   1205c:	ldr	r1, [r2, r5, lsl #2]
   12060:	str	r1, [r2, r4, lsl #2]
   12064:	cmp	r3, r5
   12068:	movge	r4, r3
   1206c:	bge	120a4 <error@@Base+0x5f8>
   12070:	add	r7, r7, #4
   12074:	mov	r4, r3
   12078:	ldr	r2, [r6]
   1207c:	ldr	r3, [r6, #4]
   12080:	ldr	r1, [r2, r7]
   12084:	mov	r0, r8
   12088:	blx	r3
   1208c:	cmp	r0, #0
   12090:	ble	120a4 <error@@Base+0x5f8>
   12094:	add	r4, r4, #1
   12098:	add	r7, r7, #4
   1209c:	cmp	r4, r5
   120a0:	blt	12078 <error@@Base+0x5cc>
   120a4:	cmp	r4, r5
   120a8:	beq	1210c <error@@Base+0x660>
   120ac:	ldr	r2, [r6]
   120b0:	sub	r3, r5, #1
   120b4:	ldr	r1, [r2, r4, lsl #2]
   120b8:	str	r1, [r2, r5, lsl #2]
   120bc:	cmp	r3, r4
   120c0:	ble	12110 <error@@Base+0x664>
   120c4:	cmp	r3, r4
   120c8:	ble	12044 <error@@Base+0x598>
   120cc:	lsl	r7, r3, #2
   120d0:	mov	r5, r3
   120d4:	ldr	r2, [r6]
   120d8:	ldr	r3, [r6, #4]
   120dc:	ldr	r1, [r2, r7]
   120e0:	mov	r0, r8
   120e4:	blx	r3
   120e8:	cmp	r0, #0
   120ec:	bge	12048 <error@@Base+0x59c>
   120f0:	sub	r5, r5, #1
   120f4:	sub	r7, r7, #4
   120f8:	cmp	r5, r4
   120fc:	bne	120d4 <error@@Base+0x628>
   12100:	mov	r4, r5
   12104:	b	120a4 <error@@Base+0x5f8>
   12108:	mov	r4, r5
   1210c:	mov	r3, r4
   12110:	ldr	r2, [pc, #52]	; 1214c <error@@Base+0x6a0>
   12114:	ldr	r2, [r2]
   12118:	str	r8, [r2, r3, lsl #2]
   1211c:	sub	r1, r3, #1
   12120:	cmp	sl, r1
   12124:	blt	12140 <error@@Base+0x694>
   12128:	add	r0, r4, #1
   1212c:	cmp	r9, r0
   12130:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   12134:	mov	r1, r9
   12138:	bl	1200c <error@@Base+0x560>
   1213c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12140:	mov	r0, sl
   12144:	bl	1200c <error@@Base+0x560>
   12148:	b	12128 <error@@Base+0x67c>
   1214c:	andeq	r3, r2, r4, lsl #2
   12150:	cmp	r0, #1
   12154:	bxle	lr
   12158:	push	{r4, lr}
   1215c:	ldr	r3, [pc, #20]	; 12178 <error@@Base+0x6cc>
   12160:	str	r1, [r3]
   12164:	str	r2, [r3, #4]
   12168:	sub	r1, r0, #1
   1216c:	mov	r0, #0
   12170:	bl	1200c <error@@Base+0x560>
   12174:	pop	{r4, pc}
   12178:	andeq	r3, r2, r4, lsl #2
   1217c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12180:	mov	r7, r0
   12184:	ldr	r6, [pc, #72]	; 121d4 <error@@Base+0x728>
   12188:	ldr	r5, [pc, #72]	; 121d8 <error@@Base+0x72c>
   1218c:	add	r6, pc, r6
   12190:	add	r5, pc, r5
   12194:	sub	r6, r6, r5
   12198:	mov	r8, r1
   1219c:	mov	r9, r2
   121a0:	bl	10760 <calloc@plt-0x20>
   121a4:	asrs	r6, r6, #2
   121a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   121ac:	mov	r4, #0
   121b0:	add	r4, r4, #1
   121b4:	ldr	r3, [r5], #4
   121b8:	mov	r2, r9
   121bc:	mov	r1, r8
   121c0:	mov	r0, r7
   121c4:	blx	r3
   121c8:	cmp	r6, r4
   121cc:	bne	121b0 <error@@Base+0x704>
   121d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   121d4:	andeq	r0, r1, ip, ror #26
   121d8:	andeq	r0, r1, r4, ror #26
   121dc:	bx	lr

Disassembly of section .fini:

000121e0 <.fini>:
   121e0:	push	{r3, lr}
   121e4:	pop	{r3, pc}
