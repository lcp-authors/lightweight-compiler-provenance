
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uql:     file format elf32-littlearm


Disassembly of section .init:

00014e04 <.init>:
   14e04:	push	{r3, lr}
   14e08:	bl	14f84 <_start@@Base+0x3c>
   14e0c:	pop	{r3, pc}

Disassembly of section .plt:

00014e10 <raise@plt-0x14>:
   14e10:	push	{lr}		; (str lr, [sp, #-4]!)
   14e14:	ldr	lr, [pc, #4]	; 14e20 <raise@plt-0x4>
   14e18:	add	lr, pc, lr
   14e1c:	ldr	pc, [lr, #8]!
   14e20:	andeq	sl, r4, r0, ror #3

00014e24 <raise@plt>:
   14e24:	add	ip, pc, #0, 12
   14e28:	add	ip, ip, #303104	; 0x4a000
   14e2c:	ldr	pc, [ip, #480]!	; 0x1e0

00014e30 <strcmp@plt>:
   14e30:	add	ip, pc, #0, 12
   14e34:	add	ip, ip, #303104	; 0x4a000
   14e38:	ldr	pc, [ip, #472]!	; 0x1d8

00014e3c <memmove@plt>:
   14e3c:	add	ip, pc, #0, 12
   14e40:	add	ip, ip, #303104	; 0x4a000
   14e44:	ldr	pc, [ip, #464]!	; 0x1d0

00014e48 <free@plt>:
   14e48:	add	ip, pc, #0, 12
   14e4c:	add	ip, ip, #303104	; 0x4a000
   14e50:	ldr	pc, [ip, #456]!	; 0x1c8

00014e54 <memcpy@plt>:
   14e54:	add	ip, pc, #0, 12
   14e58:	add	ip, ip, #303104	; 0x4a000
   14e5c:	ldr	pc, [ip, #448]!	; 0x1c0

00014e60 <__isinff@plt>:
   14e60:	add	ip, pc, #0, 12
   14e64:	add	ip, ip, #303104	; 0x4a000
   14e68:	ldr	pc, [ip, #440]!	; 0x1b8

00014e6c <__isinf@plt>:
   14e6c:	add	ip, pc, #0, 12
   14e70:	add	ip, ip, #303104	; 0x4a000
   14e74:	ldr	pc, [ip, #432]!	; 0x1b0

00014e78 <realloc@plt>:
   14e78:	add	ip, pc, #0, 12
   14e7c:	add	ip, ip, #303104	; 0x4a000
   14e80:	ldr	pc, [ip, #424]!	; 0x1a8

00014e84 <fwrite@plt>:
   14e84:	add	ip, pc, #0, 12
   14e88:	add	ip, ip, #303104	; 0x4a000
   14e8c:	ldr	pc, [ip, #416]!	; 0x1a0

00014e90 <malloc@plt>:
   14e90:	add	ip, pc, #0, 12
   14e94:	add	ip, ip, #303104	; 0x4a000
   14e98:	ldr	pc, [ip, #408]!	; 0x198

00014e9c <__libc_start_main@plt>:
   14e9c:	add	ip, pc, #0, 12
   14ea0:	add	ip, ip, #303104	; 0x4a000
   14ea4:	ldr	pc, [ip, #400]!	; 0x190

00014ea8 <__gmon_start__@plt>:
   14ea8:	add	ip, pc, #0, 12
   14eac:	add	ip, ip, #303104	; 0x4a000
   14eb0:	ldr	pc, [ip, #392]!	; 0x188

00014eb4 <bcmp@plt>:
   14eb4:	add	ip, pc, #0, 12
   14eb8:	add	ip, ip, #303104	; 0x4a000
   14ebc:	ldr	pc, [ip, #384]!	; 0x180

00014ec0 <strlen@plt>:
   14ec0:	add	ip, pc, #0, 12
   14ec4:	add	ip, ip, #303104	; 0x4a000
   14ec8:	ldr	pc, [ip, #376]!	; 0x178

00014ecc <fprintf@plt>:
   14ecc:	add	ip, pc, #0, 12
   14ed0:	add	ip, ip, #303104	; 0x4a000
   14ed4:	ldr	pc, [ip, #368]!	; 0x170

00014ed8 <posix_memalign@plt>:
   14ed8:	add	ip, pc, #0, 12
   14edc:	add	ip, ip, #303104	; 0x4a000
   14ee0:	ldr	pc, [ip, #360]!	; 0x168

00014ee4 <memset@plt>:
   14ee4:	add	ip, pc, #0, 12
   14ee8:	add	ip, ip, #303104	; 0x4a000
   14eec:	ldr	pc, [ip, #352]!	; 0x160

00014ef0 <strncpy@plt>:
   14ef0:	add	ip, pc, #0, 12
   14ef4:	add	ip, ip, #303104	; 0x4a000
   14ef8:	ldr	pc, [ip, #344]!	; 0x158

00014efc <strtod@plt>:
   14efc:	add	ip, pc, #0, 12
   14f00:	add	ip, ip, #303104	; 0x4a000
   14f04:	ldr	pc, [ip, #336]!	; 0x150

00014f08 <memchr@plt>:
   14f08:	add	ip, pc, #0, 12
   14f0c:	add	ip, ip, #303104	; 0x4a000
   14f10:	ldr	pc, [ip, #328]!	; 0x148

00014f14 <fputc@plt>:
   14f14:	add	ip, pc, #0, 12
   14f18:	add	ip, ip, #303104	; 0x4a000
   14f1c:	ldr	pc, [ip, #320]!	; 0x140

00014f20 <sprintf@plt>:
   14f20:	add	ip, pc, #0, 12
   14f24:	add	ip, ip, #303104	; 0x4a000
   14f28:	ldr	pc, [ip, #312]!	; 0x138

00014f2c <abort@plt>:
   14f2c:	add	ip, pc, #0, 12
   14f30:	add	ip, ip, #303104	; 0x4a000
   14f34:	ldr	pc, [ip, #304]!	; 0x130

00014f38 <__assert_fail@plt>:
   14f38:	add	ip, pc, #0, 12
   14f3c:	add	ip, ip, #303104	; 0x4a000
   14f40:	ldr	pc, [ip, #296]!	; 0x128

Disassembly of section .text:

00014f48 <_start@@Base>:
   14f48:	mov	fp, #0
   14f4c:	mov	lr, #0
   14f50:	pop	{r1}		; (ldr r1, [sp], #4)
   14f54:	mov	r2, sp
   14f58:	push	{r2}		; (str r2, [sp, #-4]!)
   14f5c:	push	{r0}		; (str r0, [sp, #-4]!)
   14f60:	ldr	ip, [pc, #16]	; 14f78 <_start@@Base+0x30>
   14f64:	push	{ip}		; (str ip, [sp, #-4]!)
   14f68:	ldr	r0, [pc, #12]	; 14f7c <_start@@Base+0x34>
   14f6c:	ldr	r3, [pc, #12]	; 14f80 <_start@@Base+0x38>
   14f70:	bl	14e9c <__libc_start_main@plt>
   14f74:	bl	14f2c <abort@plt>
   14f78:	muleq	r4, r8, r8
   14f7c:	andeq	r6, r1, ip, asr r2
   14f80:	andeq	r7, r4, r8, lsr r8
   14f84:	ldr	r3, [pc, #20]	; 14fa0 <_start@@Base+0x58>
   14f88:	ldr	r2, [pc, #20]	; 14fa4 <_start@@Base+0x5c>
   14f8c:	add	r3, pc, r3
   14f90:	ldr	r2, [r3, r2]
   14f94:	cmp	r2, #0
   14f98:	bxeq	lr
   14f9c:	b	14ea8 <__gmon_start__@plt>
   14fa0:	andeq	sl, r4, ip, rrx
   14fa4:	andeq	r0, r0, r4, ror r0
   14fa8:	ldr	r0, [pc, #24]	; 14fc8 <_start@@Base+0x80>
   14fac:	ldr	r3, [pc, #24]	; 14fcc <_start@@Base+0x84>
   14fb0:	cmp	r3, r0
   14fb4:	bxeq	lr
   14fb8:	ldr	r3, [pc, #16]	; 14fd0 <_start@@Base+0x88>
   14fbc:	cmp	r3, #0
   14fc0:	bxeq	lr
   14fc4:	bx	r3
   14fc8:	andeq	pc, r5, r8, asr r3	; <UNPREDICTABLE>
   14fcc:	andeq	pc, r5, r8, asr r3	; <UNPREDICTABLE>
   14fd0:	andeq	r0, r0, r0
   14fd4:	ldr	r0, [pc, #36]	; 15000 <_start@@Base+0xb8>
   14fd8:	ldr	r1, [pc, #36]	; 15004 <_start@@Base+0xbc>
   14fdc:	sub	r1, r1, r0
   14fe0:	asr	r1, r1, #2
   14fe4:	add	r1, r1, r1, lsr #31
   14fe8:	asrs	r1, r1, #1
   14fec:	bxeq	lr
   14ff0:	ldr	r3, [pc, #16]	; 15008 <_start@@Base+0xc0>
   14ff4:	cmp	r3, #0
   14ff8:	bxeq	lr
   14ffc:	bx	r3
   15000:	andeq	pc, r5, r8, asr r3	; <UNPREDICTABLE>
   15004:	andeq	pc, r5, r8, asr r3	; <UNPREDICTABLE>
   15008:	andeq	r0, r0, r0
   1500c:	push	{r4, lr}
   15010:	ldr	r4, [pc, #24]	; 15030 <_start@@Base+0xe8>
   15014:	ldrb	r3, [r4]
   15018:	cmp	r3, #0
   1501c:	popne	{r4, pc}
   15020:	bl	14fa8 <_start@@Base+0x60>
   15024:	mov	r3, #1
   15028:	strb	r3, [r4]
   1502c:	pop	{r4, pc}
   15030:	andeq	pc, r5, r8, asr r3	; <UNPREDICTABLE>
   15034:	b	14fd4 <_start@@Base+0x8c>

00015038 <test_json@@Base>:
   15038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1503c:	add	fp, sp, #28
   15040:	sub	sp, sp, #372	; 0x174
   15044:	mov	r6, r0
   15048:	add	r0, sp, #108	; 0x6c
   1504c:	mov	r7, r3
   15050:	mov	r9, r2
   15054:	mov	r4, r1
   15058:	bl	2efc4 <flatcc_builder_init@@Base>
   1505c:	add	r0, sp, #16
   15060:	mov	r1, #0
   15064:	bl	46d5c <flatcc_json_printer_init_dynamic_buffer@@Base>
   15068:	ldr	r0, [fp, #12]
   1506c:	ldr	r5, [fp, #8]
   15070:	ldr	r8, [fp, #16]
   15074:	uxtb	r1, r0
   15078:	tst	r0, #16
   1507c:	ubfx	r2, r1, #3, #1
   15080:	strb	r2, [sp, #45]	; 0x2d
   15084:	ubfx	r2, r1, #2, #1
   15088:	strb	r2, [sp, #44]	; 0x2c
   1508c:	ubfx	r1, r1, #1, #1
   15090:	strb	r1, [sp, #43]	; 0x2b
   15094:	and	r1, r0, #1
   15098:	strb	r1, [sp, #42]	; 0x2a
   1509c:	movne	r1, #2
   150a0:	strbne	r1, [sp, #41]	; 0x29
   150a4:	tst	r0, #32
   150a8:	movne	r0, #0
   150ac:	strbne	r0, [sp, #43]	; 0x2b
   150b0:	movwne	r0, #258	; 0x102
   150b4:	strhne	r0, [sp, #41]	; 0x29
   150b8:	mov	r0, r4
   150bc:	bl	14ec0 <strlen@plt>
   150c0:	mov	r3, r0
   150c4:	ldm	r6, {r0, r1}
   150c8:	str	r5, [sp]
   150cc:	mov	r2, r4
   150d0:	stmib	sp, {r0, r1}
   150d4:	add	r0, sp, #108	; 0x6c
   150d8:	add	r1, sp, #64	; 0x40
   150dc:	bl	39f58 <flatcc_json_parser_table_as_root@@Base>
   150e0:	cmp	r0, r7
   150e4:	bne	15194 <test_json@@Base+0x15c>
   150e8:	mov	r5, #0
   150ec:	cmp	r7, #0
   150f0:	beq	150fc <test_json@@Base+0xc4>
   150f4:	mov	r4, #0
   150f8:	b	15170 <test_json@@Base+0x138>
   150fc:	add	r0, sp, #108	; 0x6c
   15100:	sub	r1, fp, #56	; 0x38
   15104:	bl	33b18 <flatcc_builder_finalize_aligned_buffer@@Base>
   15108:	ldr	r2, [r6]
   1510c:	ldr	r3, [r6, #12]
   15110:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15114:	mov	r4, r0
   15118:	bl	34e30 <flatcc_verify_table_as_root@@Base>
   1511c:	cmp	r0, #0
   15120:	bne	15254 <test_json@@Base+0x21c>
   15124:	ldr	r0, [r6, #8]
   15128:	ldr	r3, [r6]
   1512c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15130:	add	r6, sp, #16
   15134:	mov	r1, r4
   15138:	str	r0, [sp]
   1513c:	mov	r0, r6
   15140:	bl	463ac <flatcc_json_printer_table_as_root@@Base>
   15144:	sub	r1, fp, #60	; 0x3c
   15148:	mov	r0, r6
   1514c:	bl	46e84 <flatcc_json_printer_get_buffer@@Base>
   15150:	mov	r6, r0
   15154:	cmp	r0, #0
   15158:	beq	151c8 <test_json@@Base+0x190>
   1515c:	mov	r0, r9
   15160:	mov	r1, r6
   15164:	bl	14e30 <strcmp@plt>
   15168:	cmp	r0, #0
   1516c:	bne	151c8 <test_json@@Base+0x190>
   15170:	mov	r0, r4
   15174:	bl	33c58 <flatcc_builder_aligned_free@@Base>
   15178:	add	r0, sp, #108	; 0x6c
   1517c:	bl	2f334 <flatcc_builder_clear@@Base>
   15180:	add	r0, sp, #16
   15184:	bl	46f1c <flatcc_json_printer_clear@@Base>
   15188:	mov	r0, r5
   1518c:	sub	sp, fp, #28
   15190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15194:	cmp	r7, #0
   15198:	beq	15228 <test_json@@Base+0x1f0>
   1519c:	ldr	r6, [pc, #708]	; 15468 <test_json@@Base+0x430>
   151a0:	cmp	r0, #0
   151a4:	ldr	r6, [pc, r6]
   151a8:	ldr	r5, [r6]
   151ac:	bne	152d4 <test_json@@Base+0x29c>
   151b0:	mov	r0, r7
   151b4:	bl	35f54 <flatcc_json_parser_error_string@@Base>
   151b8:	ldr	r1, [pc, #692]	; 15474 <test_json@@Base+0x43c>
   151bc:	mov	r3, r0
   151c0:	add	r1, pc, r1
   151c4:	b	15244 <test_json@@Base+0x20c>
   151c8:	ldr	r7, [pc, #712]	; 15498 <test_json@@Base+0x460>
   151cc:	mov	r2, r8
   151d0:	ldr	r7, [pc, r7]
   151d4:	ldr	r0, [r7]
   151d8:	ldr	r1, [pc, #700]	; 1549c <test_json@@Base+0x464>
   151dc:	add	r1, pc, r1
   151e0:	bl	14ecc <fprintf@plt>
   151e4:	ldr	r0, [r7]
   151e8:	ldr	r5, [pc, #688]	; 154a0 <test_json@@Base+0x468>
   151ec:	mov	r2, r6
   151f0:	add	r5, pc, r5
   151f4:	mov	r1, r5
   151f8:	bl	14ecc <fprintf@plt>
   151fc:	ldr	r3, [r7]
   15200:	ldr	r0, [pc, #668]	; 154a4 <test_json@@Base+0x46c>
   15204:	mov	r1, #10
   15208:	mov	r2, #1
   1520c:	add	r0, pc, r0
   15210:	bl	14e84 <fwrite@plt>
   15214:	ldr	r0, [r7]
   15218:	mov	r1, r5
   1521c:	mov	r2, r9
   15220:	bl	14ecc <fprintf@plt>
   15224:	b	15284 <test_json@@Base+0x24c>
   15228:	ldr	r1, [pc, #584]	; 15478 <test_json@@Base+0x440>
   1522c:	ldr	r1, [pc, r1]
   15230:	ldr	r5, [r1]
   15234:	bl	35f54 <flatcc_json_parser_error_string@@Base>
   15238:	ldr	r1, [pc, #572]	; 1547c <test_json@@Base+0x444>
   1523c:	mov	r3, r0
   15240:	add	r1, pc, r1
   15244:	mov	r0, r5
   15248:	mov	r2, r8
   1524c:	bl	14ecc <fprintf@plt>
   15250:	b	15310 <test_json@@Base+0x2d8>
   15254:	ldr	r1, [pc, #560]	; 1548c <test_json@@Base+0x454>
   15258:	ldr	r1, [pc, r1]
   1525c:	ldr	r5, [r1]
   15260:	bl	341ec <flatcc_verify_error_string@@Base>
   15264:	str	r0, [sp]
   15268:	mov	r0, r5
   1526c:	mov	r3, r8
   15270:	ldr	r1, [pc, #536]	; 15490 <test_json@@Base+0x458>
   15274:	ldr	r2, [pc, #536]	; 15494 <test_json@@Base+0x45c>
   15278:	add	r1, pc, r1
   1527c:	add	r2, pc, r2
   15280:	bl	14ecc <fprintf@plt>
   15284:	mvn	r5, #0
   15288:	cmp	r4, #0
   1528c:	beq	150f4 <test_json@@Base+0xbc>
   15290:	ldr	r0, [pc, #528]	; 154a8 <test_json@@Base+0x470>
   15294:	ldr	r0, [pc, r0]
   15298:	ldr	r9, [fp, #-56]	; 0xffffffc8
   1529c:	ldr	r6, [r0]
   152a0:	ldr	r1, [pc, #516]	; 154ac <test_json@@Base+0x474>
   152a4:	ldr	r2, [pc, #516]	; 154b0 <test_json@@Base+0x478>
   152a8:	add	r1, pc, r1
   152ac:	add	r2, pc, r2
   152b0:	mov	r0, r6
   152b4:	bl	14ecc <fprintf@plt>
   152b8:	cmp	r9, #0
   152bc:	beq	15450 <test_json@@Base+0x418>
   152c0:	sub	r7, fp, #49	; 0x31
   152c4:	mov	r8, #0
   152c8:	ands	sl, r8, #15
   152cc:	bne	15400 <test_json@@Base+0x3c8>
   152d0:	b	153e0 <test_json@@Base+0x3a8>
   152d4:	bl	35f54 <flatcc_json_parser_error_string@@Base>
   152d8:	ldr	r1, [pc, #396]	; 1546c <test_json@@Base+0x434>
   152dc:	mov	r3, r0
   152e0:	mov	r0, r5
   152e4:	mov	r2, r8
   152e8:	add	r1, pc, r1
   152ec:	bl	14ecc <fprintf@plt>
   152f0:	ldr	r5, [r6]
   152f4:	mov	r0, r7
   152f8:	bl	35f54 <flatcc_json_parser_error_string@@Base>
   152fc:	ldr	r1, [pc, #364]	; 15470 <test_json@@Base+0x438>
   15300:	mov	r2, r0
   15304:	mov	r0, r5
   15308:	add	r1, pc, r1
   1530c:	bl	14ecc <fprintf@plt>
   15310:	ldr	r5, [pc, #360]	; 15480 <test_json@@Base+0x448>
   15314:	mov	r2, r4
   15318:	ldr	r5, [pc, r5]
   1531c:	ldr	r0, [r5]
   15320:	ldr	r1, [pc, #348]	; 15484 <test_json@@Base+0x44c>
   15324:	add	r1, pc, r1
   15328:	bl	14ecc <fprintf@plt>
   1532c:	ldr	r0, [sp, #84]	; 0x54
   15330:	ldr	r3, [r5]
   15334:	cmp	r0, #2
   15338:	blt	15364 <test_json@@Base+0x32c>
   1533c:	mov	r4, #0
   15340:	mov	r0, #32
   15344:	mov	r1, r3
   15348:	bl	14f14 <fputc@plt>
   1534c:	ldr	r0, [sp, #84]	; 0x54
   15350:	ldr	r3, [r5]
   15354:	add	r4, r4, #1
   15358:	sub	r0, r0, #1
   1535c:	cmp	r4, r0
   15360:	blt	15340 <test_json@@Base+0x308>
   15364:	ldr	r0, [pc, #284]	; 15488 <test_json@@Base+0x450>
   15368:	mov	r1, #2
   1536c:	mov	r2, #1
   15370:	add	r0, pc, r0
   15374:	bl	14e84 <fwrite@plt>
   15378:	mvn	r5, #0
   1537c:	b	150f4 <test_json@@Base+0xbc>
   15380:	ldr	r1, [pc, #304]	; 154b8 <test_json@@Base+0x480>
   15384:	mov	r0, r6
   15388:	mov	r2, r8
   1538c:	add	r1, pc, r1
   15390:	bl	14ecc <fprintf@plt>
   15394:	ldrb	r2, [r4, r8]
   15398:	ldr	r1, [pc, #292]	; 154c4 <test_json@@Base+0x48c>
   1539c:	mov	r0, r6
   153a0:	add	r1, pc, r1
   153a4:	bl	14ecc <fprintf@plt>
   153a8:	ldrb	r0, [r4, r8]
   153ac:	add	r8, r8, #1
   153b0:	sub	r1, r0, #32
   153b4:	uxtb	r1, r1
   153b8:	cmp	r1, #94	; 0x5e
   153bc:	mov	r1, #0
   153c0:	movwhi	r0, #46	; 0x2e
   153c4:	cmp	r9, r8
   153c8:	strb	r0, [r7, sl]
   153cc:	add	r0, r7, sl
   153d0:	strb	r1, [r0, #1]
   153d4:	beq	15418 <test_json@@Base+0x3e0>
   153d8:	ands	sl, r8, #15
   153dc:	bne	15400 <test_json@@Base+0x3c8>
   153e0:	cmp	r8, #0
   153e4:	beq	15380 <test_json@@Base+0x348>
   153e8:	ldr	r1, [pc, #196]	; 154b4 <test_json@@Base+0x47c>
   153ec:	mov	r0, r6
   153f0:	mov	r2, r7
   153f4:	add	r1, pc, r1
   153f8:	bl	14ecc <fprintf@plt>
   153fc:	b	15380 <test_json@@Base+0x348>
   15400:	tst	r8, #7
   15404:	bne	15394 <test_json@@Base+0x35c>
   15408:	mov	r0, #32
   1540c:	mov	r1, r6
   15410:	bl	14f14 <fputc@plt>
   15414:	b	15394 <test_json@@Base+0x35c>
   15418:	tst	r9, #15
   1541c:	beq	15450 <test_json@@Base+0x418>
   15420:	ldr	r8, [pc, #148]	; 154bc <test_json@@Base+0x484>
   15424:	add	r7, r9, #1
   15428:	add	r8, pc, r8
   1542c:	mov	r0, r8
   15430:	mov	r1, #3
   15434:	mov	r2, #1
   15438:	mov	r3, r6
   1543c:	bl	14e84 <fwrite@plt>
   15440:	add	r0, r7, #1
   15444:	tst	r7, #15
   15448:	mov	r7, r0
   1544c:	bne	1542c <test_json@@Base+0x3f4>
   15450:	ldr	r1, [pc, #104]	; 154c0 <test_json@@Base+0x488>
   15454:	sub	r2, fp, #49	; 0x31
   15458:	mov	r0, r6
   1545c:	add	r1, pc, r1
   15460:	bl	14ecc <fprintf@plt>
   15464:	b	15170 <test_json@@Base+0x138>
   15468:	andeq	r9, r4, r4, asr #29
   1546c:			; <UNDEFINED> instruction: 0x000325bc
   15470:	andeq	r2, r3, r3, ror #11
   15474:	andeq	r2, r3, sl, lsl #14
   15478:	andeq	r9, r4, ip, lsr lr
   1547c:	andeq	r2, r3, sl, asr #13
   15480:	andeq	r9, r4, r0, asr sp
   15484:	andeq	r5, r3, sl, ror sp
   15488:			; <UNDEFINED> instruction: 0x000325bb
   1548c:	andeq	r9, r4, r0, lsl lr
   15490:			; <UNDEFINED> instruction: 0x000326b6
   15494:	ldrdeq	r2, [r3], -r9
   15498:	muleq	r4, r8, lr
   1549c:	ldrdeq	r2, [r3], -fp
   154a0:	andeq	r5, r3, lr, lsr #29
   154a4:	andeq	r2, r3, r0, ror #15
   154a8:	ldrdeq	r9, [r4], -r4
   154ac:	andeq	r5, r3, pc, ror #27
   154b0:	andeq	r2, r3, fp, asr #14
   154b4:	andeq	r5, r3, r8, lsr #25
   154b8:	andeq	r5, r3, r6, lsl sp
   154bc:	andeq	r5, r3, r8, lsl #25
   154c0:	andeq	r5, r3, r0, asr #24
   154c4:	andeq	r5, r3, sl, lsl #26

000154c8 <edge_case_tests@@Base>:
   154c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154cc:	add	fp, sp, #28
   154d0:	sub	sp, sp, #60	; 0x3c
   154d4:	mov	sl, #0
   154d8:	mov	r0, #155	; 0x9b
   154dc:	mov	r3, #0
   154e0:	str	sl, [sp]
   154e4:	str	sl, [sp, #4]
   154e8:	str	r0, [sp, #8]
   154ec:	ldr	r4, [pc, #892]	; 15870 <edge_case_tests@@Base+0x3a8>
   154f0:	ldr	r1, [pc, #892]	; 15874 <edge_case_tests@@Base+0x3ac>
   154f4:	ldr	r2, [pc, #892]	; 15878 <edge_case_tests@@Base+0x3b0>
   154f8:	add	r4, pc, r4
   154fc:	add	r1, pc, r1
   15500:	add	r2, pc, r2
   15504:	mov	r0, r4
   15508:	bl	15038 <test_json@@Base>
   1550c:	str	r0, [fp, #-32]	; 0xffffffe0
   15510:	mov	r9, #2
   15514:	mov	r0, #168	; 0xa8
   15518:	mov	r3, #0
   1551c:	stm	sp, {r9, sl}
   15520:	str	r0, [sp, #8]
   15524:	mov	r0, r4
   15528:	ldr	r5, [pc, #844]	; 1587c <edge_case_tests@@Base+0x3b4>
   1552c:	ldr	r8, [pc, #844]	; 15880 <edge_case_tests@@Base+0x3b8>
   15530:	add	r5, pc, r5
   15534:	add	r8, pc, r8
   15538:	mov	r1, r5
   1553c:	mov	r2, r8
   15540:	bl	15038 <test_json@@Base>
   15544:	str	r0, [fp, #-36]	; 0xffffffdc
   15548:	mov	r0, #172	; 0xac
   1554c:	str	sl, [sp]
   15550:	str	r9, [sp, #4]
   15554:	mov	r3, #0
   15558:	str	r0, [sp, #8]
   1555c:	mov	r0, r4
   15560:	ldr	r1, [pc, #796]	; 15884 <edge_case_tests@@Base+0x3bc>
   15564:	ldr	r2, [pc, #796]	; 15888 <edge_case_tests@@Base+0x3c0>
   15568:	add	r1, pc, r1
   1556c:	add	r2, pc, r2
   15570:	bl	15038 <test_json@@Base>
   15574:	str	r0, [fp, #-40]	; 0xffffffd8
   15578:	mov	r0, #176	; 0xb0
   1557c:	mov	r1, #4
   15580:	str	r9, [sp]
   15584:	mov	r3, #0
   15588:	str	r1, [sp, #4]
   1558c:	str	r0, [sp, #8]
   15590:	mov	r0, r4
   15594:	mov	r1, r5
   15598:	ldr	r2, [pc, #748]	; 1588c <edge_case_tests@@Base+0x3c4>
   1559c:	add	r2, pc, r2
   155a0:	bl	15038 <test_json@@Base>
   155a4:	str	r0, [sp, #44]	; 0x2c
   155a8:	mov	r0, #180	; 0xb4
   155ac:	mov	r1, #8
   155b0:	str	sl, [sp]
   155b4:	mov	r3, #0
   155b8:	str	r0, [sp, #8]
   155bc:	str	r1, [sp, #4]
   155c0:	mov	r0, r4
   155c4:	ldr	r1, [pc, #708]	; 15890 <edge_case_tests@@Base+0x3c8>
   155c8:	ldr	r2, [pc, #708]	; 15894 <edge_case_tests@@Base+0x3cc>
   155cc:	add	r1, pc, r1
   155d0:	add	r2, pc, r2
   155d4:	bl	15038 <test_json@@Base>
   155d8:	str	r0, [sp, #40]	; 0x28
   155dc:	mov	r0, #195	; 0xc3
   155e0:	stm	sp, {r9, sl}
   155e4:	mov	r2, r8
   155e8:	mov	r3, #0
   155ec:	str	r0, [sp, #8]
   155f0:	mov	r0, r4
   155f4:	ldr	r1, [pc, #668]	; 15898 <edge_case_tests@@Base+0x3d0>
   155f8:	add	r1, pc, r1
   155fc:	bl	15038 <test_json@@Base>
   15600:	str	r0, [sp, #36]	; 0x24
   15604:	mov	r6, #1
   15608:	mov	r0, #199	; 0xc7
   1560c:	mov	r3, #0
   15610:	stm	sp, {r6, sl}
   15614:	str	r0, [sp, #8]
   15618:	mov	r0, r4
   1561c:	ldr	r5, [pc, #632]	; 1589c <edge_case_tests@@Base+0x3d4>
   15620:	ldr	r7, [pc, #632]	; 158a0 <edge_case_tests@@Base+0x3d8>
   15624:	add	r5, pc, r5
   15628:	add	r7, pc, r7
   1562c:	mov	r1, r5
   15630:	mov	r2, r7
   15634:	bl	15038 <test_json@@Base>
   15638:	str	r0, [sp, #32]
   1563c:	mov	r0, #203	; 0xcb
   15640:	str	r6, [sp]
   15644:	str	r6, [sp, #4]
   15648:	mov	r1, r5
   1564c:	mov	r3, #0
   15650:	str	r0, [sp, #8]
   15654:	mov	r0, r4
   15658:	ldr	r2, [pc, #580]	; 158a4 <edge_case_tests@@Base+0x3dc>
   1565c:	add	r2, pc, r2
   15660:	bl	15038 <test_json@@Base>
   15664:	str	r0, [sp, #28]
   15668:	mov	r0, #209	; 0xd1
   1566c:	stm	sp, {r6, sl}
   15670:	mov	r2, r7
   15674:	mov	r3, #0
   15678:	str	r0, [sp, #8]
   1567c:	mov	r0, r4
   15680:	ldr	r1, [pc, #544]	; 158a8 <edge_case_tests@@Base+0x3e0>
   15684:	add	r1, pc, r1
   15688:	bl	15038 <test_json@@Base>
   1568c:	str	r0, [sp, #24]
   15690:	mov	r0, #217	; 0xd9
   15694:	stm	sp, {r9, sl}
   15698:	mov	r2, r8
   1569c:	mov	r3, #0
   156a0:	str	r0, [sp, #8]
   156a4:	mov	r0, r4
   156a8:	ldr	r5, [pc, #508]	; 158ac <edge_case_tests@@Base+0x3e4>
   156ac:	add	r5, pc, r5
   156b0:	mov	r1, r5
   156b4:	bl	15038 <test_json@@Base>
   156b8:	str	r0, [sp, #20]
   156bc:	mov	r0, #221	; 0xdd
   156c0:	str	sl, [sp]
   156c4:	str	r9, [sp, #4]
   156c8:	mov	r3, #0
   156cc:	str	r0, [sp, #8]
   156d0:	mov	r0, r4
   156d4:	ldr	r1, [pc, #468]	; 158b0 <edge_case_tests@@Base+0x3e8>
   156d8:	ldr	r2, [pc, #468]	; 158b4 <edge_case_tests@@Base+0x3ec>
   156dc:	add	r1, pc, r1
   156e0:	add	r2, pc, r2
   156e4:	bl	15038 <test_json@@Base>
   156e8:	str	r0, [sp, #16]
   156ec:	mov	r0, #225	; 0xe1
   156f0:	mov	r1, #4
   156f4:	str	r9, [sp]
   156f8:	mov	r3, #0
   156fc:	str	r1, [sp, #4]
   15700:	str	r0, [sp, #8]
   15704:	mov	r0, r4
   15708:	mov	r1, r5
   1570c:	ldr	r2, [pc, #420]	; 158b8 <edge_case_tests@@Base+0x3f0>
   15710:	add	r2, pc, r2
   15714:	bl	15038 <test_json@@Base>
   15718:	str	r0, [sp, #12]
   1571c:	mov	r0, #229	; 0xe5
   15720:	mov	r1, #8
   15724:	str	sl, [sp]
   15728:	mov	r3, #0
   1572c:	str	r0, [sp, #8]
   15730:	str	r1, [sp, #4]
   15734:	mov	r0, r4
   15738:	ldr	r1, [pc, #380]	; 158bc <edge_case_tests@@Base+0x3f4>
   1573c:	ldr	r2, [pc, #380]	; 158c0 <edge_case_tests@@Base+0x3f8>
   15740:	add	r1, pc, r1
   15744:	add	r2, pc, r2
   15748:	bl	15038 <test_json@@Base>
   1574c:	mov	r5, r0
   15750:	mov	r0, #233	; 0xe9
   15754:	stm	sp, {r9, sl}
   15758:	mov	r2, r8
   1575c:	mov	r3, #0
   15760:	str	r0, [sp, #8]
   15764:	mov	r0, r4
   15768:	ldr	r1, [pc, #340]	; 158c4 <edge_case_tests@@Base+0x3fc>
   1576c:	add	r1, pc, r1
   15770:	bl	15038 <test_json@@Base>
   15774:	mov	r8, r0
   15778:	mov	r0, #237	; 0xed
   1577c:	stm	sp, {r6, sl}
   15780:	mov	r3, #0
   15784:	str	r0, [sp, #8]
   15788:	mov	r0, r4
   1578c:	ldr	r9, [pc, #308]	; 158c8 <edge_case_tests@@Base+0x400>
   15790:	ldr	r2, [pc, #308]	; 158cc <edge_case_tests@@Base+0x404>
   15794:	add	r9, pc, r9
   15798:	add	r2, pc, r2
   1579c:	mov	r1, r9
   157a0:	bl	15038 <test_json@@Base>
   157a4:	mov	r7, r0
   157a8:	mov	r0, #241	; 0xf1
   157ac:	str	r6, [sp]
   157b0:	str	r6, [sp, #4]
   157b4:	mov	r1, r9
   157b8:	mov	r3, #0
   157bc:	str	r0, [sp, #8]
   157c0:	mov	r0, r4
   157c4:	ldr	r2, [pc, #260]	; 158d0 <edge_case_tests@@Base+0x408>
   157c8:	add	r2, pc, r2
   157cc:	bl	15038 <test_json@@Base>
   157d0:	mov	r1, #247	; 0xf7
   157d4:	stm	sp, {r6, sl}
   157d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   157dc:	mov	r3, #0
   157e0:	str	r1, [sp, #8]
   157e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   157e8:	orr	r1, r2, r1
   157ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   157f0:	orr	r1, r1, r2
   157f4:	ldr	r2, [sp, #44]	; 0x2c
   157f8:	orr	r1, r1, r2
   157fc:	ldr	r2, [sp, #40]	; 0x28
   15800:	orr	r1, r1, r2
   15804:	ldr	r2, [sp, #36]	; 0x24
   15808:	orr	r1, r1, r2
   1580c:	ldr	r2, [sp, #32]
   15810:	orr	r1, r1, r2
   15814:	ldr	r2, [sp, #28]
   15818:	orr	r1, r1, r2
   1581c:	ldr	r2, [sp, #24]
   15820:	orr	r1, r1, r2
   15824:	ldr	r2, [sp, #20]
   15828:	orr	r1, r1, r2
   1582c:	ldr	r2, [sp, #16]
   15830:	orr	r1, r1, r2
   15834:	ldr	r2, [sp, #12]
   15838:	orr	r1, r1, r2
   1583c:	orr	r1, r1, r5
   15840:	orr	r1, r1, r8
   15844:	orr	r1, r1, r7
   15848:	orr	r5, r1, r0
   1584c:	ldr	r1, [pc, #128]	; 158d4 <edge_case_tests@@Base+0x40c>
   15850:	ldr	r2, [pc, #128]	; 158d8 <edge_case_tests@@Base+0x410>
   15854:	mov	r0, r4
   15858:	add	r1, pc, r1
   1585c:	add	r2, pc, r2
   15860:	bl	15038 <test_json@@Base>
   15864:	orr	r0, r5, r0
   15868:	sub	sp, fp, #28
   1586c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15870:	muleq	r4, r0, r8
   15874:	andeq	r2, r3, r9, lsl #10
   15878:	andeq	r2, r3, r6, lsr r5
   1587c:	andeq	r2, r3, r4, lsr #10
   15880:	andeq	r2, r3, r1, asr #10
   15884:	andeq	r2, r3, pc, lsr #10
   15888:	andeq	r2, r3, r2, asr r5
   1588c:	andeq	r2, r3, pc, lsr r5
   15890:	andeq	r2, r3, r2, lsr #10
   15894:	andeq	r2, r3, r0, asr #10
   15898:	andeq	r2, r3, sl, lsr #12
   1589c:	andeq	r2, r3, r4, lsr #12
   158a0:	andeq	r2, r3, r2, asr r6
   158a4:	andeq	r2, r3, r9, lsr r6
   158a8:	andeq	r2, r3, r8, lsr #12
   158ac:	andeq	r2, r3, r1, ror r6
   158b0:	andeq	r2, r3, lr, asr r6
   158b4:	ldrdeq	r2, [r3], -lr
   158b8:	andeq	r2, r3, fp, asr #7
   158bc:	andeq	r2, r3, fp, lsl r6
   158c0:	andeq	r2, r3, sl, lsr #12
   158c4:	andeq	r2, r3, r9, lsl r7
   158c8:	andeq	r2, r3, r1, lsl r7
   158cc:	andeq	r2, r3, r2, ror #9
   158d0:	andeq	r2, r3, sp, asr #9
   158d4:	andeq	r2, r3, r7, ror r6
   158d8:	andeq	r2, r3, lr, lsl r4

000158dc <error_case_tests@@Base>:
   158dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158e0:	add	fp, sp, #28
   158e4:	sub	sp, sp, #60	; 0x3c
   158e8:	mov	r6, #0
   158ec:	movw	r0, #285	; 0x11d
   158f0:	mov	r2, #0
   158f4:	mov	r3, #13
   158f8:	str	r6, [sp]
   158fc:	str	r6, [sp, #4]
   15900:	str	r0, [sp, #8]
   15904:	ldr	r4, [pc, #880]	; 15c7c <error_case_tests@@Base+0x3a0>
   15908:	ldr	r1, [pc, #880]	; 15c80 <error_case_tests@@Base+0x3a4>
   1590c:	add	r4, pc, r4
   15910:	add	r1, pc, r1
   15914:	mov	r0, r4
   15918:	bl	15038 <test_json@@Base>
   1591c:	str	r0, [fp, #-32]	; 0xffffffe0
   15920:	movw	r0, #287	; 0x11f
   15924:	str	r6, [sp]
   15928:	str	r6, [sp, #4]
   1592c:	mov	r2, #0
   15930:	mov	r3, #13
   15934:	str	r0, [sp, #8]
   15938:	mov	r0, r4
   1593c:	ldr	r1, [pc, #832]	; 15c84 <error_case_tests@@Base+0x3a8>
   15940:	add	r1, pc, r1
   15944:	bl	15038 <test_json@@Base>
   15948:	str	r0, [fp, #-36]	; 0xffffffdc
   1594c:	movw	r0, #289	; 0x121
   15950:	str	r6, [sp]
   15954:	str	r6, [sp, #4]
   15958:	mov	r2, #0
   1595c:	mov	r3, #13
   15960:	str	r0, [sp, #8]
   15964:	mov	r0, r4
   15968:	ldr	r1, [pc, #792]	; 15c88 <error_case_tests@@Base+0x3ac>
   1596c:	add	r1, pc, r1
   15970:	bl	15038 <test_json@@Base>
   15974:	str	r0, [fp, #-40]	; 0xffffffd8
   15978:	movw	r0, #291	; 0x123
   1597c:	str	r6, [sp]
   15980:	str	r6, [sp, #4]
   15984:	mov	r2, #0
   15988:	mov	r3, #13
   1598c:	str	r0, [sp, #8]
   15990:	mov	r0, r4
   15994:	ldr	r1, [pc, #752]	; 15c8c <error_case_tests@@Base+0x3b0>
   15998:	add	r1, pc, r1
   1599c:	bl	15038 <test_json@@Base>
   159a0:	str	r0, [sp, #44]	; 0x2c
   159a4:	movw	r0, #293	; 0x125
   159a8:	str	r6, [sp]
   159ac:	str	r6, [sp, #4]
   159b0:	mov	r2, #0
   159b4:	mov	r3, #13
   159b8:	str	r0, [sp, #8]
   159bc:	mov	r0, r4
   159c0:	ldr	r1, [pc, #712]	; 15c90 <error_case_tests@@Base+0x3b4>
   159c4:	add	r1, pc, r1
   159c8:	bl	15038 <test_json@@Base>
   159cc:	str	r0, [sp, #40]	; 0x28
   159d0:	mov	r0, #296	; 0x128
   159d4:	str	r6, [sp]
   159d8:	str	r6, [sp, #4]
   159dc:	mov	r2, #0
   159e0:	mov	r3, #13
   159e4:	str	r0, [sp, #8]
   159e8:	mov	r0, r4
   159ec:	ldr	r1, [pc, #672]	; 15c94 <error_case_tests@@Base+0x3b8>
   159f0:	add	r1, pc, r1
   159f4:	bl	15038 <test_json@@Base>
   159f8:	str	r0, [sp, #36]	; 0x24
   159fc:	movw	r0, #299	; 0x12b
   15a00:	str	r6, [sp]
   15a04:	str	r6, [sp, #4]
   15a08:	mov	r2, #0
   15a0c:	mov	r3, #13
   15a10:	str	r0, [sp, #8]
   15a14:	mov	r0, r4
   15a18:	ldr	r1, [pc, #632]	; 15c98 <error_case_tests@@Base+0x3bc>
   15a1c:	add	r1, pc, r1
   15a20:	bl	15038 <test_json@@Base>
   15a24:	str	r0, [sp, #32]
   15a28:	movw	r0, #303	; 0x12f
   15a2c:	str	r6, [sp]
   15a30:	str	r6, [sp, #4]
   15a34:	mov	r2, #0
   15a38:	mov	r3, #13
   15a3c:	str	r0, [sp, #8]
   15a40:	mov	r0, r4
   15a44:	ldr	r1, [pc, #592]	; 15c9c <error_case_tests@@Base+0x3c0>
   15a48:	add	r1, pc, r1
   15a4c:	bl	15038 <test_json@@Base>
   15a50:	str	r0, [sp, #28]
   15a54:	movw	r0, #307	; 0x133
   15a58:	str	r6, [sp]
   15a5c:	str	r6, [sp, #4]
   15a60:	mov	r2, #0
   15a64:	mov	r3, #13
   15a68:	str	r0, [sp, #8]
   15a6c:	mov	r0, r4
   15a70:	ldr	r1, [pc, #552]	; 15ca0 <error_case_tests@@Base+0x3c4>
   15a74:	add	r1, pc, r1
   15a78:	bl	15038 <test_json@@Base>
   15a7c:	str	r0, [sp, #24]
   15a80:	movw	r0, #322	; 0x142
   15a84:	str	r6, [sp]
   15a88:	str	r6, [sp, #4]
   15a8c:	mov	r2, #0
   15a90:	mov	r3, #13
   15a94:	str	r0, [sp, #8]
   15a98:	mov	r0, r4
   15a9c:	ldr	r1, [pc, #512]	; 15ca4 <error_case_tests@@Base+0x3c8>
   15aa0:	add	r1, pc, r1
   15aa4:	bl	15038 <test_json@@Base>
   15aa8:	str	r0, [sp, #20]
   15aac:	mov	r0, #324	; 0x144
   15ab0:	str	r6, [sp]
   15ab4:	str	r6, [sp, #4]
   15ab8:	mov	r2, #0
   15abc:	mov	r3, #13
   15ac0:	str	r0, [sp, #8]
   15ac4:	mov	r0, r4
   15ac8:	ldr	r1, [pc, #472]	; 15ca8 <error_case_tests@@Base+0x3cc>
   15acc:	add	r1, pc, r1
   15ad0:	bl	15038 <test_json@@Base>
   15ad4:	str	r0, [sp, #16]
   15ad8:	movw	r0, #326	; 0x146
   15adc:	str	r6, [sp]
   15ae0:	str	r6, [sp, #4]
   15ae4:	mov	r2, #0
   15ae8:	mov	r3, #13
   15aec:	str	r0, [sp, #8]
   15af0:	mov	r0, r4
   15af4:	ldr	r1, [pc, #432]	; 15cac <error_case_tests@@Base+0x3d0>
   15af8:	add	r1, pc, r1
   15afc:	bl	15038 <test_json@@Base>
   15b00:	mov	r7, r0
   15b04:	mov	r0, #328	; 0x148
   15b08:	str	r6, [sp]
   15b0c:	str	r6, [sp, #4]
   15b10:	mov	r2, #0
   15b14:	mov	r3, #13
   15b18:	str	r0, [sp, #8]
   15b1c:	mov	r0, r4
   15b20:	ldr	r1, [pc, #392]	; 15cb0 <error_case_tests@@Base+0x3d4>
   15b24:	add	r1, pc, r1
   15b28:	bl	15038 <test_json@@Base>
   15b2c:	mov	r8, r0
   15b30:	movw	r0, #330	; 0x14a
   15b34:	str	r6, [sp]
   15b38:	str	r6, [sp, #4]
   15b3c:	mov	r2, #0
   15b40:	mov	r3, #13
   15b44:	str	r0, [sp, #8]
   15b48:	mov	r0, r4
   15b4c:	ldr	r1, [pc, #352]	; 15cb4 <error_case_tests@@Base+0x3d8>
   15b50:	add	r1, pc, r1
   15b54:	bl	15038 <test_json@@Base>
   15b58:	mov	r9, r0
   15b5c:	movw	r0, #333	; 0x14d
   15b60:	str	r6, [sp]
   15b64:	str	r6, [sp, #4]
   15b68:	mov	r2, #0
   15b6c:	mov	r3, #13
   15b70:	str	r0, [sp, #8]
   15b74:	mov	r0, r4
   15b78:	ldr	r1, [pc, #312]	; 15cb8 <error_case_tests@@Base+0x3dc>
   15b7c:	add	r1, pc, r1
   15b80:	bl	15038 <test_json@@Base>
   15b84:	mov	sl, r0
   15b88:	mov	r0, #336	; 0x150
   15b8c:	str	r6, [sp]
   15b90:	str	r6, [sp, #4]
   15b94:	mov	r2, #0
   15b98:	mov	r3, #13
   15b9c:	str	r0, [sp, #8]
   15ba0:	mov	r0, r4
   15ba4:	ldr	r1, [pc, #272]	; 15cbc <error_case_tests@@Base+0x3e0>
   15ba8:	add	r1, pc, r1
   15bac:	bl	15038 <test_json@@Base>
   15bb0:	mov	r5, r0
   15bb4:	mov	r0, #340	; 0x154
   15bb8:	str	r6, [sp]
   15bbc:	str	r6, [sp, #4]
   15bc0:	mov	r2, #0
   15bc4:	mov	r3, #13
   15bc8:	str	r0, [sp, #8]
   15bcc:	mov	r0, r4
   15bd0:	ldr	r1, [pc, #232]	; 15cc0 <error_case_tests@@Base+0x3e4>
   15bd4:	add	r1, pc, r1
   15bd8:	bl	15038 <test_json@@Base>
   15bdc:	mov	r1, #344	; 0x158
   15be0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15be4:	str	r6, [sp]
   15be8:	str	r6, [sp, #4]
   15bec:	mov	r3, #13
   15bf0:	str	r1, [sp, #8]
   15bf4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15bf8:	orr	r1, r2, r1
   15bfc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15c00:	orr	r1, r1, r2
   15c04:	ldr	r2, [sp, #44]	; 0x2c
   15c08:	orr	r1, r1, r2
   15c0c:	ldr	r2, [sp, #40]	; 0x28
   15c10:	orr	r1, r1, r2
   15c14:	ldr	r2, [sp, #36]	; 0x24
   15c18:	orr	r1, r1, r2
   15c1c:	ldr	r2, [sp, #32]
   15c20:	orr	r1, r1, r2
   15c24:	ldr	r2, [sp, #28]
   15c28:	orr	r1, r1, r2
   15c2c:	ldr	r2, [sp, #24]
   15c30:	orr	r1, r1, r2
   15c34:	ldr	r2, [sp, #20]
   15c38:	orr	r1, r1, r2
   15c3c:	ldr	r2, [sp, #16]
   15c40:	orr	r1, r1, r2
   15c44:	mov	r2, #0
   15c48:	orr	r1, r1, r7
   15c4c:	orr	r1, r1, r8
   15c50:	orr	r1, r1, r9
   15c54:	orr	r1, r1, sl
   15c58:	orr	r1, r1, r5
   15c5c:	orr	r5, r1, r0
   15c60:	ldr	r1, [pc, #92]	; 15cc4 <error_case_tests@@Base+0x3e8>
   15c64:	mov	r0, r4
   15c68:	add	r1, pc, r1
   15c6c:	bl	15038 <test_json@@Base>
   15c70:	orr	r0, r5, r0
   15c74:	sub	sp, fp, #28
   15c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c7c:	andeq	r9, r4, ip, ror r4
   15c80:	andeq	r2, r3, lr, lsl r6
   15c84:	andeq	r2, r3, r8, lsl #12
   15c88:	andeq	r2, r3, sp, lsr r6
   15c8c:	andeq	r2, r3, pc, ror #12
   15c90:	muleq	r3, fp, r6
   15c94:	andeq	r2, r3, r4, asr #13
   15c98:	andeq	r2, r3, r6, lsr r7
   15c9c:	andeq	r2, r3, r5, lsr #15
   15ca0:	andeq	r2, r3, r0, asr #16
   15ca4:	ldrdeq	r2, [r3], -fp
   15ca8:	andeq	r2, r3, r7, asr #17
   15cac:	strdeq	r2, [r3], -r0
   15cb0:	andeq	r2, r3, r6, lsl r9
   15cb4:	andeq	r2, r3, sl, lsr r9
   15cb8:	andeq	r2, r3, fp, asr r9
   15cbc:			; <UNDEFINED> instruction: 0x000329bb
   15cc0:	andeq	r2, r3, r8, lsl sl
   15cc4:	andeq	r2, r3, r3, lsr sl

00015cc8 <base64_tests@@Base>:
   15cc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ccc:	add	fp, sp, #28
   15cd0:	sub	sp, sp, #28
   15cd4:	mov	r5, #0
   15cd8:	movw	r0, #369	; 0x171
   15cdc:	mov	r3, #0
   15ce0:	str	r5, [sp]
   15ce4:	str	r5, [sp, #4]
   15ce8:	str	r0, [sp, #8]
   15cec:	ldr	r4, [pc, #504]	; 15eec <base64_tests@@Base+0x224>
   15cf0:	ldr	r1, [pc, #504]	; 15ef0 <base64_tests@@Base+0x228>
   15cf4:	ldr	r2, [pc, #504]	; 15ef4 <base64_tests@@Base+0x22c>
   15cf8:	add	r4, pc, r4
   15cfc:	add	r1, pc, r1
   15d00:	add	r2, pc, r2
   15d04:	mov	r0, r4
   15d08:	bl	15038 <test_json@@Base>
   15d0c:	str	r0, [sp, #24]
   15d10:	mov	r0, #372	; 0x174
   15d14:	str	r5, [sp]
   15d18:	str	r5, [sp, #4]
   15d1c:	mov	r3, #0
   15d20:	str	r0, [sp, #8]
   15d24:	mov	r0, r4
   15d28:	ldr	r1, [pc, #456]	; 15ef8 <base64_tests@@Base+0x230>
   15d2c:	ldr	r2, [pc, #456]	; 15efc <base64_tests@@Base+0x234>
   15d30:	add	r1, pc, r1
   15d34:	add	r2, pc, r2
   15d38:	bl	15038 <test_json@@Base>
   15d3c:	str	r0, [sp, #20]
   15d40:	mov	r0, #376	; 0x178
   15d44:	str	r5, [sp]
   15d48:	str	r5, [sp, #4]
   15d4c:	mov	r3, #0
   15d50:	str	r0, [sp, #8]
   15d54:	mov	r0, r4
   15d58:	ldr	r1, [pc, #416]	; 15f00 <base64_tests@@Base+0x238>
   15d5c:	ldr	r6, [pc, #416]	; 15f04 <base64_tests@@Base+0x23c>
   15d60:	add	r6, pc, r6
   15d64:	add	r1, pc, r1
   15d68:	mov	r2, r6
   15d6c:	bl	15038 <test_json@@Base>
   15d70:	str	r0, [sp, #16]
   15d74:	movw	r0, #379	; 0x17b
   15d78:	str	r5, [sp]
   15d7c:	str	r5, [sp, #4]
   15d80:	mov	r3, #0
   15d84:	str	r0, [sp, #8]
   15d88:	mov	r0, r4
   15d8c:	ldr	r1, [pc, #372]	; 15f08 <base64_tests@@Base+0x240>
   15d90:	ldr	r7, [pc, #372]	; 15f0c <base64_tests@@Base+0x244>
   15d94:	add	r7, pc, r7
   15d98:	add	r1, pc, r1
   15d9c:	mov	r2, r7
   15da0:	bl	15038 <test_json@@Base>
   15da4:	str	r0, [sp, #12]
   15da8:	movw	r0, #382	; 0x17e
   15dac:	str	r5, [sp]
   15db0:	str	r5, [sp, #4]
   15db4:	mov	r2, r6
   15db8:	mov	r3, #0
   15dbc:	str	r0, [sp, #8]
   15dc0:	mov	r0, r4
   15dc4:	ldr	r1, [pc, #324]	; 15f10 <base64_tests@@Base+0x248>
   15dc8:	add	r1, pc, r1
   15dcc:	bl	15038 <test_json@@Base>
   15dd0:	mov	r6, r0
   15dd4:	movw	r0, #385	; 0x181
   15dd8:	str	r5, [sp]
   15ddc:	str	r5, [sp, #4]
   15de0:	mov	r2, r7
   15de4:	mov	r3, #0
   15de8:	str	r0, [sp, #8]
   15dec:	mov	r0, r4
   15df0:	ldr	r1, [pc, #284]	; 15f14 <base64_tests@@Base+0x24c>
   15df4:	add	r1, pc, r1
   15df8:	bl	15038 <test_json@@Base>
   15dfc:	mov	r7, r0
   15e00:	mov	r0, #388	; 0x184
   15e04:	str	r5, [sp]
   15e08:	str	r5, [sp, #4]
   15e0c:	mov	r2, #0
   15e10:	mov	r3, #31
   15e14:	str	r0, [sp, #8]
   15e18:	mov	r0, r4
   15e1c:	ldr	r1, [pc, #244]	; 15f18 <base64_tests@@Base+0x250>
   15e20:	add	r1, pc, r1
   15e24:	bl	15038 <test_json@@Base>
   15e28:	mov	r8, r0
   15e2c:	movw	r0, #391	; 0x187
   15e30:	str	r5, [sp]
   15e34:	str	r5, [sp, #4]
   15e38:	mov	r2, #0
   15e3c:	mov	r3, #32
   15e40:	str	r0, [sp, #8]
   15e44:	mov	r0, r4
   15e48:	ldr	r1, [pc, #204]	; 15f1c <base64_tests@@Base+0x254>
   15e4c:	add	r1, pc, r1
   15e50:	bl	15038 <test_json@@Base>
   15e54:	mov	r9, r0
   15e58:	movw	r0, #406	; 0x196
   15e5c:	str	r5, [sp]
   15e60:	str	r5, [sp, #4]
   15e64:	mov	r3, #0
   15e68:	str	r0, [sp, #8]
   15e6c:	mov	r0, r4
   15e70:	ldr	r1, [pc, #168]	; 15f20 <base64_tests@@Base+0x258>
   15e74:	ldr	sl, [pc, #168]	; 15f24 <base64_tests@@Base+0x25c>
   15e78:	add	sl, pc, sl
   15e7c:	add	r1, pc, r1
   15e80:	mov	r2, sl
   15e84:	bl	15038 <test_json@@Base>
   15e88:	movw	r1, #419	; 0x1a3
   15e8c:	ldr	r2, [sp, #20]
   15e90:	str	r5, [sp]
   15e94:	str	r5, [sp, #4]
   15e98:	mov	r3, #0
   15e9c:	str	r1, [sp, #8]
   15ea0:	ldr	r1, [sp, #24]
   15ea4:	orr	r1, r2, r1
   15ea8:	ldr	r2, [sp, #16]
   15eac:	orr	r1, r1, r2
   15eb0:	ldr	r2, [sp, #12]
   15eb4:	orr	r1, r1, r2
   15eb8:	mov	r2, sl
   15ebc:	orr	r1, r1, r6
   15ec0:	orr	r1, r1, r7
   15ec4:	orr	r1, r1, r8
   15ec8:	orr	r1, r1, r9
   15ecc:	orr	r5, r1, r0
   15ed0:	ldr	r1, [pc, #80]	; 15f28 <base64_tests@@Base+0x260>
   15ed4:	mov	r0, r4
   15ed8:	add	r1, pc, r1
   15edc:	bl	15038 <test_json@@Base>
   15ee0:	orr	r0, r5, r0
   15ee4:	sub	sp, fp, #28
   15ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15eec:	muleq	r4, r0, r0
   15ef0:	andeq	r2, r3, lr, asr #20
   15ef4:	ldrdeq	r1, [r3], -fp
   15ef8:	andeq	r2, r3, r0, lsr sl
   15efc:	andeq	r2, r3, r3, asr sl
   15f00:	andeq	r2, r3, r6, asr #20
   15f04:	andeq	r2, r3, r3, lsl #22
   15f08:	andeq	r2, r3, pc, ror fp
   15f0c:	andeq	r2, r3, pc, lsr ip
   15f10:	andeq	r2, r3, r2, asr #25
   15f14:	andeq	r2, r3, sp, asr #26
   15f18:	ldrdeq	r2, [r3], -fp
   15f1c:	andeq	r2, r3, r8, ror #28
   15f20:	strdeq	r2, [r3], -r4
   15f24:	andeq	r2, r3, r8, asr #31
   15f28:	andeq	r3, r3, sp, lsr r0

00015f2c <mixed_type_union_tests@@Base>:
   15f2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f30:	add	fp, sp, #28
   15f34:	sub	sp, sp, #20
   15f38:	mov	r8, #0
   15f3c:	mov	r0, #432	; 0x1b0
   15f40:	mov	r3, #0
   15f44:	str	r8, [sp]
   15f48:	str	r8, [sp, #4]
   15f4c:	str	r0, [sp, #8]
   15f50:	ldr	r4, [pc, #340]	; 160ac <mixed_type_union_tests@@Base+0x180>
   15f54:	ldr	r1, [pc, #340]	; 160b0 <mixed_type_union_tests@@Base+0x184>
   15f58:	ldr	r2, [pc, #340]	; 160b4 <mixed_type_union_tests@@Base+0x188>
   15f5c:	add	r4, pc, r4
   15f60:	add	r1, pc, r1
   15f64:	add	r2, pc, r2
   15f68:	mov	r0, r4
   15f6c:	bl	15038 <test_json@@Base>
   15f70:	str	r0, [sp, #16]
   15f74:	movw	r0, #437	; 0x1b5
   15f78:	str	r8, [sp]
   15f7c:	str	r8, [sp, #4]
   15f80:	mov	r3, #0
   15f84:	str	r0, [sp, #8]
   15f88:	mov	r0, r4
   15f8c:	ldr	r1, [pc, #292]	; 160b8 <mixed_type_union_tests@@Base+0x18c>
   15f90:	ldr	r9, [pc, #292]	; 160bc <mixed_type_union_tests@@Base+0x190>
   15f94:	add	r9, pc, r9
   15f98:	add	r1, pc, r1
   15f9c:	mov	r2, r9
   15fa0:	bl	15038 <test_json@@Base>
   15fa4:	mov	sl, r0
   15fa8:	movw	r0, #442	; 0x1ba
   15fac:	str	r8, [sp]
   15fb0:	str	r8, [sp, #4]
   15fb4:	mov	r2, r9
   15fb8:	mov	r3, #0
   15fbc:	str	r0, [sp, #8]
   15fc0:	mov	r0, r4
   15fc4:	ldr	r1, [pc, #244]	; 160c0 <mixed_type_union_tests@@Base+0x194>
   15fc8:	add	r1, pc, r1
   15fcc:	bl	15038 <test_json@@Base>
   15fd0:	mov	r5, r0
   15fd4:	movw	r0, #449	; 0x1c1
   15fd8:	str	r8, [sp]
   15fdc:	str	r8, [sp, #4]
   15fe0:	mov	r3, #0
   15fe4:	str	r0, [sp, #8]
   15fe8:	mov	r0, r4
   15fec:	ldr	r1, [pc, #208]	; 160c4 <mixed_type_union_tests@@Base+0x198>
   15ff0:	ldr	r2, [pc, #208]	; 160c8 <mixed_type_union_tests@@Base+0x19c>
   15ff4:	add	r1, pc, r1
   15ff8:	add	r2, pc, r2
   15ffc:	bl	15038 <test_json@@Base>
   16000:	mov	r6, r0
   16004:	movw	r0, #458	; 0x1ca
   16008:	str	r8, [sp]
   1600c:	str	r8, [sp, #4]
   16010:	mov	r3, #0
   16014:	str	r0, [sp, #8]
   16018:	mov	r0, r4
   1601c:	ldr	r1, [pc, #168]	; 160cc <mixed_type_union_tests@@Base+0x1a0>
   16020:	ldr	r2, [pc, #168]	; 160d0 <mixed_type_union_tests@@Base+0x1a4>
   16024:	add	r1, pc, r1
   16028:	add	r2, pc, r2
   1602c:	bl	15038 <test_json@@Base>
   16030:	mov	r7, r0
   16034:	movw	r0, #469	; 0x1d5
   16038:	str	r8, [sp]
   1603c:	str	r8, [sp, #4]
   16040:	mov	r3, #0
   16044:	str	r0, [sp, #8]
   16048:	mov	r0, r4
   1604c:	ldr	r1, [pc, #128]	; 160d4 <mixed_type_union_tests@@Base+0x1a8>
   16050:	ldr	r2, [pc, #128]	; 160d8 <mixed_type_union_tests@@Base+0x1ac>
   16054:	add	r1, pc, r1
   16058:	add	r2, pc, r2
   1605c:	bl	15038 <test_json@@Base>
   16060:	movw	r1, #474	; 0x1da
   16064:	str	r8, [sp]
   16068:	str	r8, [sp, #4]
   1606c:	mov	r2, r9
   16070:	mov	r3, #0
   16074:	str	r1, [sp, #8]
   16078:	ldr	r1, [sp, #16]
   1607c:	orr	r1, sl, r1
   16080:	orr	r1, r1, r5
   16084:	orr	r1, r1, r6
   16088:	orr	r1, r1, r7
   1608c:	orr	r5, r1, r0
   16090:	ldr	r1, [pc, #68]	; 160dc <mixed_type_union_tests@@Base+0x1b0>
   16094:	mov	r0, r4
   16098:	add	r1, pc, r1
   1609c:	bl	15038 <test_json@@Base>
   160a0:	orr	r0, r5, r0
   160a4:	sub	sp, fp, #28
   160a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160ac:	andeq	r8, r4, ip, lsr lr
   160b0:	andeq	r3, r3, r1, lsl #1
   160b4:	andeq	r3, r3, ip, asr #1
   160b8:	ldrdeq	r3, [r3], -pc	; <UNPREDICTABLE>
   160bc:	andeq	r3, r3, r6, ror #2
   160c0:	andeq	r3, r3, r9, lsr #3
   160c4:	andeq	r3, r3, r3, lsl r2
   160c8:	andeq	r3, r3, ip, ror #5
   160cc:	andeq	r3, r3, r9, ror r3
   160d0:	andeq	r3, r3, fp, ror r4
   160d4:	andeq	r3, r3, sp, lsr #10
   160d8:	andeq	r3, r3, sl, lsr #13
   160dc:			; <UNDEFINED> instruction: 0x000337b0

000160e0 <union_vector_tests@@Base>:
   160e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160e4:	add	fp, sp, #28
   160e8:	sub	sp, sp, #12
   160ec:	mov	r7, #0
   160f0:	movw	r0, #485	; 0x1e5
   160f4:	mov	r3, #0
   160f8:	str	r7, [sp]
   160fc:	str	r7, [sp, #4]
   16100:	str	r0, [sp, #8]
   16104:	ldr	r4, [pc, #288]	; 1622c <union_vector_tests@@Base+0x14c>
   16108:	ldr	r1, [pc, #288]	; 16230 <union_vector_tests@@Base+0x150>
   1610c:	ldr	r8, [pc, #288]	; 16234 <union_vector_tests@@Base+0x154>
   16110:	add	r4, pc, r4
   16114:	add	r8, pc, r8
   16118:	add	r1, pc, r1
   1611c:	mov	r0, r4
   16120:	mov	r2, r8
   16124:	bl	15038 <test_json@@Base>
   16128:	mov	r9, r0
   1612c:	mov	r0, #488	; 0x1e8
   16130:	str	r7, [sp]
   16134:	str	r7, [sp, #4]
   16138:	mov	r3, #0
   1613c:	str	r0, [sp, #8]
   16140:	mov	r0, r4
   16144:	ldr	r1, [pc, #236]	; 16238 <union_vector_tests@@Base+0x158>
   16148:	ldr	r2, [pc, #236]	; 1623c <union_vector_tests@@Base+0x15c>
   1614c:	add	r1, pc, r1
   16150:	add	r2, pc, r2
   16154:	bl	15038 <test_json@@Base>
   16158:	mov	sl, r0
   1615c:	movw	r0, #491	; 0x1eb
   16160:	str	r7, [sp]
   16164:	str	r7, [sp, #4]
   16168:	mov	r3, #0
   1616c:	str	r0, [sp, #8]
   16170:	mov	r0, r4
   16174:	ldr	r1, [pc, #196]	; 16240 <union_vector_tests@@Base+0x160>
   16178:	ldr	r2, [pc, #196]	; 16244 <union_vector_tests@@Base+0x164>
   1617c:	add	r1, pc, r1
   16180:	add	r2, pc, r2
   16184:	bl	15038 <test_json@@Base>
   16188:	mov	r6, r0
   1618c:	movw	r0, #494	; 0x1ee
   16190:	str	r7, [sp]
   16194:	str	r7, [sp, #4]
   16198:	mov	r3, #0
   1619c:	str	r0, [sp, #8]
   161a0:	mov	r0, r4
   161a4:	ldr	r1, [pc, #156]	; 16248 <union_vector_tests@@Base+0x168>
   161a8:	ldr	r2, [pc, #156]	; 1624c <union_vector_tests@@Base+0x16c>
   161ac:	add	r1, pc, r1
   161b0:	add	r2, pc, r2
   161b4:	bl	15038 <test_json@@Base>
   161b8:	mov	r5, r0
   161bc:	movw	r0, #497	; 0x1f1
   161c0:	str	r7, [sp]
   161c4:	str	r7, [sp, #4]
   161c8:	mov	r2, r8
   161cc:	mov	r3, #0
   161d0:	str	r0, [sp, #8]
   161d4:	mov	r0, r4
   161d8:	ldr	r1, [pc, #112]	; 16250 <union_vector_tests@@Base+0x170>
   161dc:	add	r1, pc, r1
   161e0:	bl	15038 <test_json@@Base>
   161e4:	mov	r1, #500	; 0x1f4
   161e8:	str	r7, [sp]
   161ec:	str	r7, [sp, #4]
   161f0:	mov	r3, #0
   161f4:	str	r1, [sp, #8]
   161f8:	orr	r1, sl, r9
   161fc:	orr	r1, r1, r6
   16200:	orr	r1, r1, r5
   16204:	orr	r5, r1, r0
   16208:	ldr	r1, [pc, #68]	; 16254 <union_vector_tests@@Base+0x174>
   1620c:	ldr	r2, [pc, #68]	; 16258 <union_vector_tests@@Base+0x178>
   16210:	mov	r0, r4
   16214:	add	r1, pc, r1
   16218:	add	r2, pc, r2
   1621c:	bl	15038 <test_json@@Base>
   16220:	orr	r0, r5, r0
   16224:	sub	sp, fp, #28
   16228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1622c:	muleq	r4, r8, ip
   16230:			; <UNDEFINED> instruction: 0x000337bd
   16234:	andeq	r3, r3, r1, lsl #16
   16238:	andeq	r3, r3, r1, lsl #16
   1623c:	andeq	r3, r3, r0, lsr r8
   16240:	andeq	r3, r3, pc, lsr #16
   16244:	andeq	r3, r3, r8, ror r8
   16248:	muleq	r3, r0, r8
   1624c:	andeq	r3, r3, r9, lsl #18
   16250:	andeq	r3, r3, r9, asr #18
   16254:	andeq	r3, r3, r0, asr r9
   16258:			; <UNDEFINED> instruction: 0x000339b2

0001625c <main@@Base>:
   1625c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16260:	add	fp, sp, #28
   16264:	sub	sp, sp, #284	; 0x11c
   16268:	bl	154c8 <edge_case_tests@@Base>
   1626c:	str	r0, [fp, #-32]	; 0xffffffe0
   16270:	bl	158dc <error_case_tests@@Base>
   16274:	str	r0, [fp, #-36]	; 0xffffffdc
   16278:	bl	160e0 <union_vector_tests@@Base>
   1627c:	str	r0, [fp, #-40]	; 0xffffffd8
   16280:	bl	15cc8 <base64_tests@@Base>
   16284:	str	r0, [fp, #-44]	; 0xffffffd4
   16288:	bl	15f2c <mixed_type_union_tests@@Base>
   1628c:	mov	r8, #0
   16290:	str	r0, [fp, #-48]	; 0xffffffd0
   16294:	movw	r0, #525	; 0x20d
   16298:	mov	r3, #0
   1629c:	str	r8, [sp]
   162a0:	str	r8, [sp, #4]
   162a4:	str	r0, [sp, #8]
   162a8:	ldr	r4, [pc, #3744]	; 17150 <main@@Base+0xef4>
   162ac:	ldr	r1, [pc, #3744]	; 17154 <main@@Base+0xef8>
   162b0:	ldr	sl, [pc, #3744]	; 17158 <main@@Base+0xefc>
   162b4:	add	r4, pc, r4
   162b8:	add	sl, pc, sl
   162bc:	add	r1, pc, r1
   162c0:	mov	r0, r4
   162c4:	mov	r2, sl
   162c8:	bl	15038 <test_json@@Base>
   162cc:	str	r0, [fp, #-52]	; 0xffffffcc
   162d0:	mov	r0, #528	; 0x210
   162d4:	str	r8, [sp]
   162d8:	str	r8, [sp, #4]
   162dc:	mov	r3, #0
   162e0:	str	r0, [sp, #8]
   162e4:	mov	r0, r4
   162e8:	ldr	r1, [pc, #3692]	; 1715c <main@@Base+0xf00>
   162ec:	ldr	r7, [pc, #3692]	; 17160 <main@@Base+0xf04>
   162f0:	add	r7, pc, r7
   162f4:	add	r1, pc, r1
   162f8:	mov	r2, r7
   162fc:	bl	15038 <test_json@@Base>
   16300:	str	r0, [fp, #-56]	; 0xffffffc8
   16304:	movw	r0, #531	; 0x213
   16308:	str	r8, [sp]
   1630c:	str	r8, [sp, #4]
   16310:	mov	r3, #0
   16314:	str	r0, [sp, #8]
   16318:	mov	r0, r4
   1631c:	ldr	r1, [pc, #3648]	; 17164 <main@@Base+0xf08>
   16320:	ldr	r6, [pc, #3648]	; 17168 <main@@Base+0xf0c>
   16324:	add	r6, pc, r6
   16328:	add	r1, pc, r1
   1632c:	mov	r2, r6
   16330:	bl	15038 <test_json@@Base>
   16334:	str	r0, [fp, #-60]	; 0xffffffc4
   16338:	movw	r0, #534	; 0x216
   1633c:	str	r8, [sp]
   16340:	str	r8, [sp, #4]
   16344:	mov	r3, #0
   16348:	str	r0, [sp, #8]
   1634c:	mov	r0, r4
   16350:	ldr	r1, [pc, #3604]	; 1716c <main@@Base+0xf10>
   16354:	ldr	r9, [pc, #3604]	; 17170 <main@@Base+0xf14>
   16358:	add	r9, pc, r9
   1635c:	add	r1, pc, r1
   16360:	mov	r2, r9
   16364:	bl	15038 <test_json@@Base>
   16368:	str	r0, [fp, #-64]	; 0xffffffc0
   1636c:	movw	r0, #537	; 0x219
   16370:	str	r8, [sp]
   16374:	str	r8, [sp, #4]
   16378:	mov	r2, r9
   1637c:	mov	r3, #0
   16380:	str	r0, [sp, #8]
   16384:	mov	r0, r4
   16388:	ldr	r1, [pc, #3556]	; 17174 <main@@Base+0xf18>
   1638c:	add	r1, pc, r1
   16390:	bl	15038 <test_json@@Base>
   16394:	str	r0, [fp, #-68]	; 0xffffffbc
   16398:	mov	r0, #540	; 0x21c
   1639c:	str	r8, [sp]
   163a0:	str	r8, [sp, #4]
   163a4:	mov	r2, r7
   163a8:	mov	r3, #0
   163ac:	str	r0, [sp, #8]
   163b0:	mov	r0, r4
   163b4:	ldr	r1, [pc, #3516]	; 17178 <main@@Base+0xf1c>
   163b8:	add	r1, pc, r1
   163bc:	bl	15038 <test_json@@Base>
   163c0:	str	r0, [fp, #-72]	; 0xffffffb8
   163c4:	movw	r0, #543	; 0x21f
   163c8:	str	r8, [sp]
   163cc:	str	r8, [sp, #4]
   163d0:	mov	r2, r6
   163d4:	mov	r3, #0
   163d8:	str	r0, [sp, #8]
   163dc:	mov	r0, r4
   163e0:	ldr	r1, [pc, #3476]	; 1717c <main@@Base+0xf20>
   163e4:	add	r1, pc, r1
   163e8:	bl	15038 <test_json@@Base>
   163ec:	str	r0, [fp, #-76]	; 0xffffffb4
   163f0:	movw	r0, #547	; 0x223
   163f4:	str	r8, [sp]
   163f8:	str	r8, [sp, #4]
   163fc:	mov	r2, sl
   16400:	mov	r3, #0
   16404:	str	r0, [sp, #8]
   16408:	mov	r0, r4
   1640c:	ldr	r1, [pc, #3436]	; 17180 <main@@Base+0xf24>
   16410:	add	r1, pc, r1
   16414:	bl	15038 <test_json@@Base>
   16418:	str	r0, [fp, #-80]	; 0xffffffb0
   1641c:	movw	r0, #551	; 0x227
   16420:	str	r8, [sp]
   16424:	str	r8, [sp, #4]
   16428:	mov	r2, sl
   1642c:	mov	r3, #0
   16430:	str	r0, [sp, #8]
   16434:	mov	r0, r4
   16438:	ldr	r1, [pc, #3396]	; 17184 <main@@Base+0xf28>
   1643c:	add	r1, pc, r1
   16440:	bl	15038 <test_json@@Base>
   16444:	str	r0, [fp, #-84]	; 0xffffffac
   16448:	movw	r0, #555	; 0x22b
   1644c:	str	r8, [sp]
   16450:	str	r8, [sp, #4]
   16454:	mov	r2, sl
   16458:	mov	r3, #0
   1645c:	str	r0, [sp, #8]
   16460:	mov	r0, r4
   16464:	ldr	r1, [pc, #3356]	; 17188 <main@@Base+0xf2c>
   16468:	add	r1, pc, r1
   1646c:	bl	15038 <test_json@@Base>
   16470:	str	r0, [fp, #-88]	; 0xffffffa8
   16474:	movw	r0, #558	; 0x22e
   16478:	str	r8, [sp]
   1647c:	str	r8, [sp, #4]
   16480:	mov	r2, r7
   16484:	mov	r3, #0
   16488:	str	r0, [sp, #8]
   1648c:	mov	r0, r4
   16490:	ldr	r1, [pc, #3316]	; 1718c <main@@Base+0xf30>
   16494:	add	r1, pc, r1
   16498:	bl	15038 <test_json@@Base>
   1649c:	str	r0, [fp, #-92]	; 0xffffffa4
   164a0:	movw	r0, #561	; 0x231
   164a4:	str	r8, [sp]
   164a8:	str	r8, [sp, #4]
   164ac:	mov	r2, r6
   164b0:	mov	r3, #0
   164b4:	str	r0, [sp, #8]
   164b8:	mov	r0, r4
   164bc:	ldr	r1, [pc, #3276]	; 17190 <main@@Base+0xf34>
   164c0:	add	r1, pc, r1
   164c4:	bl	15038 <test_json@@Base>
   164c8:	str	r0, [fp, #-96]	; 0xffffffa0
   164cc:	mov	r0, #564	; 0x234
   164d0:	str	r8, [sp]
   164d4:	str	r8, [sp, #4]
   164d8:	mov	r2, r9
   164dc:	mov	r3, #0
   164e0:	str	r0, [sp, #8]
   164e4:	mov	r0, r4
   164e8:	ldr	r1, [pc, #3236]	; 17194 <main@@Base+0xf38>
   164ec:	add	r1, pc, r1
   164f0:	bl	15038 <test_json@@Base>
   164f4:	str	r0, [fp, #-100]	; 0xffffff9c
   164f8:	movw	r0, #567	; 0x237
   164fc:	str	r8, [sp]
   16500:	str	r8, [sp, #4]
   16504:	mov	r2, r9
   16508:	mov	r3, #0
   1650c:	str	r0, [sp, #8]
   16510:	mov	r0, r4
   16514:	ldr	r1, [pc, #3196]	; 17198 <main@@Base+0xf3c>
   16518:	add	r1, pc, r1
   1651c:	bl	15038 <test_json@@Base>
   16520:	str	r0, [fp, #-104]	; 0xffffff98
   16524:	movw	r0, #570	; 0x23a
   16528:	str	r8, [sp]
   1652c:	str	r8, [sp, #4]
   16530:	mov	r2, r7
   16534:	mov	r3, #0
   16538:	str	r0, [sp, #8]
   1653c:	mov	r0, r4
   16540:	ldr	r1, [pc, #3156]	; 1719c <main@@Base+0xf40>
   16544:	add	r1, pc, r1
   16548:	bl	15038 <test_json@@Base>
   1654c:	str	r0, [fp, #-108]	; 0xffffff94
   16550:	movw	r0, #573	; 0x23d
   16554:	str	r8, [sp]
   16558:	str	r8, [sp, #4]
   1655c:	mov	r2, r6
   16560:	mov	r3, #0
   16564:	str	r0, [sp, #8]
   16568:	mov	r0, r4
   1656c:	ldr	r1, [pc, #3116]	; 171a0 <main@@Base+0xf44>
   16570:	add	r1, pc, r1
   16574:	bl	15038 <test_json@@Base>
   16578:	str	r0, [fp, #-112]	; 0xffffff90
   1657c:	movw	r0, #577	; 0x241
   16580:	str	r8, [sp]
   16584:	str	r8, [sp, #4]
   16588:	mov	r2, sl
   1658c:	mov	r3, #0
   16590:	str	r0, [sp, #8]
   16594:	mov	r0, r4
   16598:	ldr	r1, [pc, #3076]	; 171a4 <main@@Base+0xf48>
   1659c:	add	r1, pc, r1
   165a0:	bl	15038 <test_json@@Base>
   165a4:	str	r0, [fp, #-116]	; 0xffffff8c
   165a8:	movw	r0, #581	; 0x245
   165ac:	str	r8, [sp]
   165b0:	str	r8, [sp, #4]
   165b4:	mov	r2, sl
   165b8:	mov	r3, #0
   165bc:	str	r0, [sp, #8]
   165c0:	mov	r0, r4
   165c4:	ldr	r1, [pc, #3036]	; 171a8 <main@@Base+0xf4c>
   165c8:	add	r1, pc, r1
   165cc:	bl	15038 <test_json@@Base>
   165d0:	str	r0, [fp, #-120]	; 0xffffff88
   165d4:	movw	r0, #585	; 0x249
   165d8:	str	r8, [sp]
   165dc:	str	r8, [sp, #4]
   165e0:	mov	r3, #0
   165e4:	str	r0, [sp, #8]
   165e8:	mov	r0, r4
   165ec:	ldr	r1, [pc, #3000]	; 171ac <main@@Base+0xf50>
   165f0:	ldr	r5, [pc, #3000]	; 171b0 <main@@Base+0xf54>
   165f4:	add	r5, pc, r5
   165f8:	add	r1, pc, r1
   165fc:	mov	r2, r5
   16600:	bl	15038 <test_json@@Base>
   16604:	str	r0, [fp, #-124]	; 0xffffff84
   16608:	movw	r0, #591	; 0x24f
   1660c:	str	r8, [sp]
   16610:	str	r8, [sp, #4]
   16614:	mov	r2, r5
   16618:	mov	r3, #0
   1661c:	str	r0, [sp, #8]
   16620:	mov	r0, r4
   16624:	ldr	r1, [pc, #2952]	; 171b4 <main@@Base+0xf58>
   16628:	add	r1, pc, r1
   1662c:	bl	15038 <test_json@@Base>
   16630:	str	r0, [fp, #-128]	; 0xffffff80
   16634:	movw	r0, #594	; 0x252
   16638:	str	r8, [sp]
   1663c:	str	r8, [sp, #4]
   16640:	mov	r2, r5
   16644:	mov	r3, #0
   16648:	str	r0, [sp, #8]
   1664c:	mov	r0, r4
   16650:	ldr	r1, [pc, #2912]	; 171b8 <main@@Base+0xf5c>
   16654:	add	r1, pc, r1
   16658:	bl	15038 <test_json@@Base>
   1665c:	str	r0, [fp, #-132]	; 0xffffff7c
   16660:	movw	r0, #597	; 0x255
   16664:	str	r8, [sp]
   16668:	str	r8, [sp, #4]
   1666c:	mov	r2, r9
   16670:	mov	r3, #0
   16674:	str	r0, [sp, #8]
   16678:	mov	r0, r4
   1667c:	ldr	r1, [pc, #2872]	; 171bc <main@@Base+0xf60>
   16680:	add	r1, pc, r1
   16684:	bl	15038 <test_json@@Base>
   16688:	str	r0, [fp, #-136]	; 0xffffff78
   1668c:	movw	r0, #601	; 0x259
   16690:	str	r8, [sp]
   16694:	str	r8, [sp, #4]
   16698:	mov	r2, r7
   1669c:	mov	r3, #0
   166a0:	str	r0, [sp, #8]
   166a4:	mov	r0, r4
   166a8:	ldr	r1, [pc, #2832]	; 171c0 <main@@Base+0xf64>
   166ac:	add	r1, pc, r1
   166b0:	bl	15038 <test_json@@Base>
   166b4:	str	r0, [fp, #-140]	; 0xffffff74
   166b8:	mov	r0, #604	; 0x25c
   166bc:	str	r8, [sp]
   166c0:	str	r8, [sp, #4]
   166c4:	mov	r2, r6
   166c8:	mov	r3, #0
   166cc:	str	r0, [sp, #8]
   166d0:	mov	r0, r4
   166d4:	ldr	r1, [pc, #2792]	; 171c4 <main@@Base+0xf68>
   166d8:	add	r1, pc, r1
   166dc:	bl	15038 <test_json@@Base>
   166e0:	str	r0, [fp, #-144]	; 0xffffff70
   166e4:	movw	r0, #607	; 0x25f
   166e8:	str	r8, [sp]
   166ec:	str	r8, [sp, #4]
   166f0:	mov	r3, #0
   166f4:	str	r0, [sp, #8]
   166f8:	mov	r0, r4
   166fc:	ldr	r1, [pc, #2756]	; 171c8 <main@@Base+0xf6c>
   16700:	ldr	r2, [pc, #2756]	; 171cc <main@@Base+0xf70>
   16704:	add	r1, pc, r1
   16708:	add	r2, pc, r2
   1670c:	bl	15038 <test_json@@Base>
   16710:	str	r0, [fp, #-148]	; 0xffffff6c
   16714:	movw	r0, #610	; 0x262
   16718:	str	r8, [sp]
   1671c:	str	r8, [sp, #4]
   16720:	mov	r2, r9
   16724:	mov	r3, #0
   16728:	str	r0, [sp, #8]
   1672c:	mov	r0, r4
   16730:	ldr	r1, [pc, #2712]	; 171d0 <main@@Base+0xf74>
   16734:	add	r1, pc, r1
   16738:	bl	15038 <test_json@@Base>
   1673c:	str	r0, [fp, #-152]	; 0xffffff68
   16740:	movw	r0, #613	; 0x265
   16744:	str	r8, [sp]
   16748:	str	r8, [sp, #4]
   1674c:	mov	r3, #0
   16750:	str	r0, [sp, #8]
   16754:	mov	r0, r4
   16758:	ldr	r1, [pc, #2676]	; 171d4 <main@@Base+0xf78>
   1675c:	ldr	r2, [pc, #2676]	; 171d8 <main@@Base+0xf7c>
   16760:	add	r1, pc, r1
   16764:	add	r2, pc, r2
   16768:	bl	15038 <test_json@@Base>
   1676c:	str	r0, [sp, #156]	; 0x9c
   16770:	mov	r0, #616	; 0x268
   16774:	str	r8, [sp]
   16778:	str	r8, [sp, #4]
   1677c:	mov	r3, #0
   16780:	str	r0, [sp, #8]
   16784:	mov	r0, r4
   16788:	ldr	r1, [pc, #2636]	; 171dc <main@@Base+0xf80>
   1678c:	ldr	r2, [pc, #2636]	; 171e0 <main@@Base+0xf84>
   16790:	add	r1, pc, r1
   16794:	add	r2, pc, r2
   16798:	bl	15038 <test_json@@Base>
   1679c:	str	r0, [sp, #152]	; 0x98
   167a0:	movw	r0, #619	; 0x26b
   167a4:	str	r8, [sp]
   167a8:	str	r8, [sp, #4]
   167ac:	mov	r3, #0
   167b0:	str	r0, [sp, #8]
   167b4:	mov	r0, r4
   167b8:	ldr	r1, [pc, #2596]	; 171e4 <main@@Base+0xf88>
   167bc:	ldr	r2, [pc, #2596]	; 171e8 <main@@Base+0xf8c>
   167c0:	add	r1, pc, r1
   167c4:	add	r2, pc, r2
   167c8:	bl	15038 <test_json@@Base>
   167cc:	str	r0, [sp, #148]	; 0x94
   167d0:	movw	r0, #622	; 0x26e
   167d4:	str	r8, [sp]
   167d8:	str	r8, [sp, #4]
   167dc:	mov	r2, r7
   167e0:	mov	r3, #0
   167e4:	str	r0, [sp, #8]
   167e8:	mov	r0, r4
   167ec:	ldr	r1, [pc, #2552]	; 171ec <main@@Base+0xf90>
   167f0:	add	r1, pc, r1
   167f4:	bl	15038 <test_json@@Base>
   167f8:	str	r0, [sp, #144]	; 0x90
   167fc:	movw	r0, #625	; 0x271
   16800:	str	r8, [sp]
   16804:	str	r8, [sp, #4]
   16808:	mov	r2, r7
   1680c:	mov	r3, #0
   16810:	str	r0, [sp, #8]
   16814:	mov	r0, r4
   16818:	ldr	r1, [pc, #2512]	; 171f0 <main@@Base+0xf94>
   1681c:	add	r1, pc, r1
   16820:	bl	15038 <test_json@@Base>
   16824:	str	r0, [sp, #140]	; 0x8c
   16828:	mov	r0, #628	; 0x274
   1682c:	str	r8, [sp]
   16830:	str	r8, [sp, #4]
   16834:	mov	r3, #0
   16838:	str	r0, [sp, #8]
   1683c:	mov	r0, r4
   16840:	ldr	r6, [pc, #2476]	; 171f4 <main@@Base+0xf98>
   16844:	ldr	r5, [pc, #2476]	; 171f8 <main@@Base+0xf9c>
   16848:	add	r6, pc, r6
   1684c:	add	r5, pc, r5
   16850:	mov	r1, r6
   16854:	mov	r2, r5
   16858:	bl	15038 <test_json@@Base>
   1685c:	str	r0, [sp, #136]	; 0x88
   16860:	movw	r0, #631	; 0x277
   16864:	mov	r1, r6
   16868:	mov	r2, r5
   1686c:	mov	r3, #0
   16870:	str	r8, [sp]
   16874:	str	r8, [sp, #4]
   16878:	str	r0, [sp, #8]
   1687c:	mov	r0, r4
   16880:	bl	15038 <test_json@@Base>
   16884:	str	r0, [sp, #132]	; 0x84
   16888:	movw	r0, #634	; 0x27a
   1688c:	str	r8, [sp]
   16890:	str	r8, [sp, #4]
   16894:	mov	r3, #0
   16898:	str	r0, [sp, #8]
   1689c:	mov	r0, r4
   168a0:	ldr	r1, [pc, #2388]	; 171fc <main@@Base+0xfa0>
   168a4:	ldr	r2, [pc, #2388]	; 17200 <main@@Base+0xfa4>
   168a8:	add	r1, pc, r1
   168ac:	add	r2, pc, r2
   168b0:	bl	15038 <test_json@@Base>
   168b4:	str	r0, [sp, #128]	; 0x80
   168b8:	movw	r0, #638	; 0x27e
   168bc:	str	r8, [sp]
   168c0:	str	r8, [sp, #4]
   168c4:	mov	r3, #0
   168c8:	str	r0, [sp, #8]
   168cc:	mov	r0, r4
   168d0:	ldr	r1, [pc, #2348]	; 17204 <main@@Base+0xfa8>
   168d4:	ldr	r2, [pc, #2348]	; 17208 <main@@Base+0xfac>
   168d8:	add	r1, pc, r1
   168dc:	add	r2, pc, r2
   168e0:	bl	15038 <test_json@@Base>
   168e4:	str	r0, [sp, #124]	; 0x7c
   168e8:	movw	r0, #642	; 0x282
   168ec:	str	r8, [sp]
   168f0:	str	r8, [sp, #4]
   168f4:	mov	r3, #0
   168f8:	str	r0, [sp, #8]
   168fc:	mov	r0, r4
   16900:	ldr	r1, [pc, #2308]	; 1720c <main@@Base+0xfb0>
   16904:	ldr	r2, [pc, #2308]	; 17210 <main@@Base+0xfb4>
   16908:	add	r1, pc, r1
   1690c:	add	r2, pc, r2
   16910:	bl	15038 <test_json@@Base>
   16914:	str	r0, [sp, #120]	; 0x78
   16918:	movw	r0, #646	; 0x286
   1691c:	str	r8, [sp]
   16920:	str	r8, [sp, #4]
   16924:	mov	r2, sl
   16928:	mov	r3, #0
   1692c:	str	r0, [sp, #8]
   16930:	mov	r0, r4
   16934:	ldr	r1, [pc, #2264]	; 17214 <main@@Base+0xfb8>
   16938:	add	r1, pc, r1
   1693c:	bl	15038 <test_json@@Base>
   16940:	str	r0, [sp, #116]	; 0x74
   16944:	movw	r0, #649	; 0x289
   16948:	str	r8, [sp]
   1694c:	str	r8, [sp, #4]
   16950:	mov	r2, sl
   16954:	mov	r3, #0
   16958:	str	r0, [sp, #8]
   1695c:	mov	r0, r4
   16960:	ldr	r1, [pc, #2224]	; 17218 <main@@Base+0xfbc>
   16964:	add	r1, pc, r1
   16968:	bl	15038 <test_json@@Base>
   1696c:	str	r0, [sp, #112]	; 0x70
   16970:	movw	r0, #653	; 0x28d
   16974:	str	r8, [sp]
   16978:	str	r8, [sp, #4]
   1697c:	mov	r2, r7
   16980:	mov	r3, #0
   16984:	str	r0, [sp, #8]
   16988:	mov	r0, r4
   1698c:	ldr	r1, [pc, #2184]	; 1721c <main@@Base+0xfc0>
   16990:	add	r1, pc, r1
   16994:	bl	15038 <test_json@@Base>
   16998:	str	r0, [sp, #108]	; 0x6c
   1699c:	mov	r0, #656	; 0x290
   169a0:	str	r8, [sp]
   169a4:	str	r8, [sp, #4]
   169a8:	mov	r3, #0
   169ac:	str	r0, [sp, #8]
   169b0:	mov	r0, r4
   169b4:	ldr	r1, [pc, #2148]	; 17220 <main@@Base+0xfc4>
   169b8:	ldr	r2, [pc, #2148]	; 17224 <main@@Base+0xfc8>
   169bc:	add	r1, pc, r1
   169c0:	add	r2, pc, r2
   169c4:	bl	15038 <test_json@@Base>
   169c8:	str	r0, [sp, #104]	; 0x68
   169cc:	movw	r0, #659	; 0x293
   169d0:	str	r8, [sp]
   169d4:	str	r8, [sp, #4]
   169d8:	mov	r3, #0
   169dc:	str	r0, [sp, #8]
   169e0:	mov	r0, r4
   169e4:	ldr	r1, [pc, #2108]	; 17228 <main@@Base+0xfcc>
   169e8:	ldr	r2, [pc, #2108]	; 1722c <main@@Base+0xfd0>
   169ec:	add	r1, pc, r1
   169f0:	add	r2, pc, r2
   169f4:	bl	15038 <test_json@@Base>
   169f8:	str	r0, [sp, #100]	; 0x64
   169fc:	movw	r0, #662	; 0x296
   16a00:	str	r8, [sp]
   16a04:	str	r8, [sp, #4]
   16a08:	mov	r2, r9
   16a0c:	mov	r3, #0
   16a10:	str	r0, [sp, #8]
   16a14:	mov	r0, r4
   16a18:	ldr	r1, [pc, #2064]	; 17230 <main@@Base+0xfd4>
   16a1c:	add	r1, pc, r1
   16a20:	bl	15038 <test_json@@Base>
   16a24:	str	r0, [sp, #96]	; 0x60
   16a28:	movw	r0, #665	; 0x299
   16a2c:	str	r8, [sp]
   16a30:	str	r8, [sp, #4]
   16a34:	mov	r3, #0
   16a38:	str	r0, [sp, #8]
   16a3c:	mov	r0, r4
   16a40:	ldr	r1, [pc, #2028]	; 17234 <main@@Base+0xfd8>
   16a44:	ldr	r2, [pc, #2028]	; 17238 <main@@Base+0xfdc>
   16a48:	add	r1, pc, r1
   16a4c:	add	r2, pc, r2
   16a50:	bl	15038 <test_json@@Base>
   16a54:	str	r0, [sp, #92]	; 0x5c
   16a58:	mov	r0, #668	; 0x29c
   16a5c:	str	r8, [sp]
   16a60:	str	r8, [sp, #4]
   16a64:	mov	r3, #0
   16a68:	str	r0, [sp, #8]
   16a6c:	mov	r0, r4
   16a70:	ldr	r1, [pc, #1988]	; 1723c <main@@Base+0xfe0>
   16a74:	ldr	r2, [pc, #1988]	; 17240 <main@@Base+0xfe4>
   16a78:	add	r1, pc, r1
   16a7c:	add	r2, pc, r2
   16a80:	bl	15038 <test_json@@Base>
   16a84:	str	r0, [sp, #88]	; 0x58
   16a88:	movw	r0, #671	; 0x29f
   16a8c:	str	r8, [sp]
   16a90:	str	r8, [sp, #4]
   16a94:	mov	r3, #0
   16a98:	str	r0, [sp, #8]
   16a9c:	mov	r0, r4
   16aa0:	ldr	r1, [pc, #1948]	; 17244 <main@@Base+0xfe8>
   16aa4:	ldr	r2, [pc, #1948]	; 17248 <main@@Base+0xfec>
   16aa8:	add	r1, pc, r1
   16aac:	add	r2, pc, r2
   16ab0:	bl	15038 <test_json@@Base>
   16ab4:	str	r0, [sp, #84]	; 0x54
   16ab8:	movw	r0, #674	; 0x2a2
   16abc:	str	r8, [sp]
   16ac0:	str	r8, [sp, #4]
   16ac4:	mov	r2, r7
   16ac8:	mov	r3, #0
   16acc:	str	r0, [sp, #8]
   16ad0:	mov	r0, r4
   16ad4:	ldr	r1, [pc, #1904]	; 1724c <main@@Base+0xff0>
   16ad8:	add	r1, pc, r1
   16adc:	bl	15038 <test_json@@Base>
   16ae0:	str	r0, [sp, #80]	; 0x50
   16ae4:	movw	r0, #677	; 0x2a5
   16ae8:	str	r8, [sp]
   16aec:	str	r8, [sp, #4]
   16af0:	mov	r2, r7
   16af4:	mov	r3, #0
   16af8:	str	r0, [sp, #8]
   16afc:	mov	r0, r4
   16b00:	ldr	r1, [pc, #1864]	; 17250 <main@@Base+0xff4>
   16b04:	add	r1, pc, r1
   16b08:	bl	15038 <test_json@@Base>
   16b0c:	str	r0, [sp, #76]	; 0x4c
   16b10:	mov	r0, #680	; 0x2a8
   16b14:	str	r8, [sp]
   16b18:	str	r8, [sp, #4]
   16b1c:	mov	r2, r5
   16b20:	mov	r3, #0
   16b24:	str	r0, [sp, #8]
   16b28:	mov	r0, r4
   16b2c:	ldr	r6, [pc, #1824]	; 17254 <main@@Base+0xff8>
   16b30:	add	r6, pc, r6
   16b34:	mov	r1, r6
   16b38:	bl	15038 <test_json@@Base>
   16b3c:	str	r0, [sp, #72]	; 0x48
   16b40:	movw	r0, #683	; 0x2ab
   16b44:	mov	r1, r6
   16b48:	mov	r2, r5
   16b4c:	mov	r3, #0
   16b50:	str	r8, [sp]
   16b54:	str	r8, [sp, #4]
   16b58:	str	r0, [sp, #8]
   16b5c:	mov	r0, r4
   16b60:	bl	15038 <test_json@@Base>
   16b64:	str	r0, [sp, #68]	; 0x44
   16b68:	movw	r0, #686	; 0x2ae
   16b6c:	str	r8, [sp]
   16b70:	str	r8, [sp, #4]
   16b74:	mov	r3, #0
   16b78:	str	r0, [sp, #8]
   16b7c:	mov	r0, r4
   16b80:	ldr	r1, [pc, #1744]	; 17258 <main@@Base+0xffc>
   16b84:	ldr	r2, [pc, #1744]	; 1725c <main@@Base+0x1000>
   16b88:	add	r1, pc, r1
   16b8c:	add	r2, pc, r2
   16b90:	bl	15038 <test_json@@Base>
   16b94:	str	r0, [sp, #64]	; 0x40
   16b98:	movw	r0, #690	; 0x2b2
   16b9c:	str	r8, [sp]
   16ba0:	str	r8, [sp, #4]
   16ba4:	mov	r3, #0
   16ba8:	str	r0, [sp, #8]
   16bac:	mov	r0, r4
   16bb0:	ldr	r1, [pc, #1704]	; 17260 <main@@Base+0x1004>
   16bb4:	ldr	r2, [pc, #1704]	; 17264 <main@@Base+0x1008>
   16bb8:	add	r1, pc, r1
   16bbc:	add	r2, pc, r2
   16bc0:	bl	15038 <test_json@@Base>
   16bc4:	str	r0, [sp, #60]	; 0x3c
   16bc8:	movw	r0, #694	; 0x2b6
   16bcc:	str	r8, [sp]
   16bd0:	str	r8, [sp, #4]
   16bd4:	mov	r3, #0
   16bd8:	str	r0, [sp, #8]
   16bdc:	mov	r0, r4
   16be0:	ldr	r1, [pc, #1664]	; 17268 <main@@Base+0x100c>
   16be4:	ldr	r2, [pc, #1664]	; 1726c <main@@Base+0x1010>
   16be8:	add	r1, pc, r1
   16bec:	add	r2, pc, r2
   16bf0:	bl	15038 <test_json@@Base>
   16bf4:	str	r0, [sp, #56]	; 0x38
   16bf8:	movw	r0, #698	; 0x2ba
   16bfc:	str	r8, [sp]
   16c00:	str	r8, [sp, #4]
   16c04:	mov	r2, sl
   16c08:	mov	r3, #0
   16c0c:	str	r0, [sp, #8]
   16c10:	mov	r0, r4
   16c14:	ldr	r1, [pc, #1620]	; 17270 <main@@Base+0x1014>
   16c18:	add	r1, pc, r1
   16c1c:	bl	15038 <test_json@@Base>
   16c20:	str	r0, [sp, #52]	; 0x34
   16c24:	movw	r0, #701	; 0x2bd
   16c28:	str	r8, [sp]
   16c2c:	str	r8, [sp, #4]
   16c30:	mov	r2, sl
   16c34:	mov	r3, #0
   16c38:	str	r0, [sp, #8]
   16c3c:	mov	r0, r4
   16c40:	ldr	r1, [pc, #1580]	; 17274 <main@@Base+0x1018>
   16c44:	add	r1, pc, r1
   16c48:	bl	15038 <test_json@@Base>
   16c4c:	str	r0, [sp, #48]	; 0x30
   16c50:	movw	r0, #711	; 0x2c7
   16c54:	str	r8, [sp]
   16c58:	str	r8, [sp, #4]
   16c5c:	mov	r3, #0
   16c60:	str	r0, [sp, #8]
   16c64:	mov	r0, r4
   16c68:	ldr	r1, [pc, #1544]	; 17278 <main@@Base+0x101c>
   16c6c:	ldr	r5, [pc, #1544]	; 1727c <main@@Base+0x1020>
   16c70:	add	r5, pc, r5
   16c74:	add	r1, pc, r1
   16c78:	mov	r2, r5
   16c7c:	bl	15038 <test_json@@Base>
   16c80:	str	r0, [sp, #44]	; 0x2c
   16c84:	mov	r0, #716	; 0x2cc
   16c88:	str	r8, [sp]
   16c8c:	str	r8, [sp, #4]
   16c90:	mov	r2, r5
   16c94:	mov	r3, #0
   16c98:	str	r0, [sp, #8]
   16c9c:	mov	r0, r4
   16ca0:	ldr	r1, [pc, #1496]	; 17280 <main@@Base+0x1024>
   16ca4:	add	r1, pc, r1
   16ca8:	bl	15038 <test_json@@Base>
   16cac:	str	r0, [sp, #40]	; 0x28
   16cb0:	movw	r0, #731	; 0x2db
   16cb4:	str	r8, [sp]
   16cb8:	str	r8, [sp, #4]
   16cbc:	mov	r3, #0
   16cc0:	str	r0, [sp, #8]
   16cc4:	mov	r0, r4
   16cc8:	ldr	r1, [pc, #1460]	; 17284 <main@@Base+0x1028>
   16ccc:	ldr	r2, [pc, #1460]	; 17288 <main@@Base+0x102c>
   16cd0:	add	r1, pc, r1
   16cd4:	add	r2, pc, r2
   16cd8:	bl	15038 <test_json@@Base>
   16cdc:	str	r0, [sp, #36]	; 0x24
   16ce0:	movw	r0, #734	; 0x2de
   16ce4:	str	r8, [sp]
   16ce8:	str	r8, [sp, #4]
   16cec:	mov	r3, #0
   16cf0:	str	r0, [sp, #8]
   16cf4:	mov	r0, r4
   16cf8:	ldr	r1, [pc, #1420]	; 1728c <main@@Base+0x1030>
   16cfc:	ldr	r2, [pc, #1420]	; 17290 <main@@Base+0x1034>
   16d00:	add	r1, pc, r1
   16d04:	add	r2, pc, r2
   16d08:	bl	15038 <test_json@@Base>
   16d0c:	str	r0, [sp, #32]
   16d10:	movw	r0, #738	; 0x2e2
   16d14:	str	r8, [sp]
   16d18:	str	r8, [sp, #4]
   16d1c:	mov	r3, #0
   16d20:	str	r0, [sp, #8]
   16d24:	mov	r0, r4
   16d28:	ldr	r1, [pc, #1380]	; 17294 <main@@Base+0x1038>
   16d2c:	ldr	r5, [pc, #1380]	; 17298 <main@@Base+0x103c>
   16d30:	add	r5, pc, r5
   16d34:	add	r1, pc, r1
   16d38:	mov	r2, r5
   16d3c:	bl	15038 <test_json@@Base>
   16d40:	str	r0, [sp, #28]
   16d44:	movw	r0, #750	; 0x2ee
   16d48:	str	r8, [sp]
   16d4c:	str	r8, [sp, #4]
   16d50:	mov	r2, r5
   16d54:	mov	r3, #0
   16d58:	str	r0, [sp, #8]
   16d5c:	mov	r0, r4
   16d60:	ldr	r1, [pc, #1332]	; 1729c <main@@Base+0x1040>
   16d64:	add	r1, pc, r1
   16d68:	bl	15038 <test_json@@Base>
   16d6c:	str	r0, [sp, #24]
   16d70:	movw	r0, #766	; 0x2fe
   16d74:	str	r8, [sp]
   16d78:	str	r8, [sp, #4]
   16d7c:	mov	r3, #0
   16d80:	str	r0, [sp, #8]
   16d84:	mov	r0, r4
   16d88:	ldr	r1, [pc, #1296]	; 172a0 <main@@Base+0x1044>
   16d8c:	ldr	r2, [pc, #1296]	; 172a4 <main@@Base+0x1048>
   16d90:	add	r1, pc, r1
   16d94:	add	r2, pc, r2
   16d98:	bl	15038 <test_json@@Base>
   16d9c:	str	r0, [sp, #20]
   16da0:	movw	r0, #770	; 0x302
   16da4:	str	r8, [sp]
   16da8:	str	r8, [sp, #4]
   16dac:	mov	r3, #0
   16db0:	str	r0, [sp, #8]
   16db4:	mov	r0, r4
   16db8:	ldr	r1, [pc, #1256]	; 172a8 <main@@Base+0x104c>
   16dbc:	ldr	r2, [pc, #1256]	; 172ac <main@@Base+0x1050>
   16dc0:	add	r1, pc, r1
   16dc4:	add	r2, pc, r2
   16dc8:	bl	15038 <test_json@@Base>
   16dcc:	str	r0, [sp, #16]
   16dd0:	mov	r0, #776	; 0x308
   16dd4:	str	r8, [sp]
   16dd8:	str	r8, [sp, #4]
   16ddc:	mov	r3, #0
   16de0:	str	r0, [sp, #8]
   16de4:	mov	r0, r4
   16de8:	ldr	r1, [pc, #1216]	; 172b0 <main@@Base+0x1054>
   16dec:	ldr	r2, [pc, #1216]	; 172b4 <main@@Base+0x1058>
   16df0:	add	r1, pc, r1
   16df4:	add	r2, pc, r2
   16df8:	bl	15038 <test_json@@Base>
   16dfc:	mov	r7, r0
   16e00:	movw	r0, #781	; 0x30d
   16e04:	str	r8, [sp]
   16e08:	str	r8, [sp, #4]
   16e0c:	mov	r2, sl
   16e10:	mov	r3, #0
   16e14:	str	r0, [sp, #8]
   16e18:	mov	r0, r4
   16e1c:	ldr	r1, [pc, #1172]	; 172b8 <main@@Base+0x105c>
   16e20:	add	r1, pc, r1
   16e24:	bl	15038 <test_json@@Base>
   16e28:	mov	r5, r0
   16e2c:	movw	r0, #786	; 0x312
   16e30:	str	r8, [sp]
   16e34:	str	r8, [sp, #4]
   16e38:	mov	r3, #0
   16e3c:	str	r0, [sp, #8]
   16e40:	mov	r0, r4
   16e44:	ldr	r1, [pc, #1136]	; 172bc <main@@Base+0x1060>
   16e48:	ldr	r2, [pc, #1136]	; 172c0 <main@@Base+0x1064>
   16e4c:	add	r1, pc, r1
   16e50:	add	r2, pc, r2
   16e54:	bl	15038 <test_json@@Base>
   16e58:	mov	r6, r0
   16e5c:	movw	r0, #791	; 0x317
   16e60:	str	r8, [sp]
   16e64:	str	r8, [sp, #4]
   16e68:	mov	r3, #0
   16e6c:	str	r0, [sp, #8]
   16e70:	mov	r0, r4
   16e74:	ldr	r1, [pc, #1096]	; 172c4 <main@@Base+0x1068>
   16e78:	ldr	r2, [pc, #1096]	; 172c8 <main@@Base+0x106c>
   16e7c:	add	r1, pc, r1
   16e80:	add	r2, pc, r2
   16e84:	bl	15038 <test_json@@Base>
   16e88:	mov	sl, r0
   16e8c:	mov	r0, #796	; 0x31c
   16e90:	str	r8, [sp]
   16e94:	str	r8, [sp, #4]
   16e98:	mov	r3, #0
   16e9c:	str	r0, [sp, #8]
   16ea0:	mov	r0, r4
   16ea4:	ldr	r1, [pc, #1056]	; 172cc <main@@Base+0x1070>
   16ea8:	ldr	r2, [pc, #1056]	; 172d0 <main@@Base+0x1074>
   16eac:	add	r1, pc, r1
   16eb0:	add	r2, pc, r2
   16eb4:	bl	15038 <test_json@@Base>
   16eb8:	mov	r9, r0
   16ebc:	movw	r0, #801	; 0x321
   16ec0:	str	r8, [sp]
   16ec4:	str	r8, [sp, #4]
   16ec8:	mov	r3, #0
   16ecc:	str	r0, [sp, #8]
   16ed0:	mov	r0, r4
   16ed4:	ldr	r1, [pc, #1016]	; 172d4 <main@@Base+0x1078>
   16ed8:	ldr	r2, [pc, #1016]	; 172d8 <main@@Base+0x107c>
   16edc:	add	r1, pc, r1
   16ee0:	add	r2, pc, r2
   16ee4:	bl	15038 <test_json@@Base>
   16ee8:	movw	r1, #806	; 0x326
   16eec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16ef0:	str	r8, [sp]
   16ef4:	str	r8, [sp, #4]
   16ef8:	mov	r3, #0
   16efc:	str	r1, [sp, #8]
   16f00:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16f04:	orr	r1, r2, r1
   16f08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16f0c:	orr	r1, r1, r2
   16f10:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16f14:	orr	r1, r1, r2
   16f18:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16f1c:	orr	r1, r1, r2
   16f20:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16f24:	orr	r1, r1, r2
   16f28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16f2c:	orr	r1, r1, r2
   16f30:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16f34:	orr	r1, r1, r2
   16f38:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16f3c:	orr	r1, r1, r2
   16f40:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16f44:	orr	r1, r1, r2
   16f48:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16f4c:	orr	r1, r1, r2
   16f50:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16f54:	orr	r1, r1, r2
   16f58:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16f5c:	orr	r1, r1, r2
   16f60:	ldr	r2, [fp, #-84]	; 0xffffffac
   16f64:	orr	r1, r1, r2
   16f68:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16f6c:	orr	r1, r1, r2
   16f70:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16f74:	orr	r1, r1, r2
   16f78:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16f7c:	orr	r1, r1, r2
   16f80:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16f84:	orr	r1, r1, r2
   16f88:	ldr	r2, [fp, #-104]	; 0xffffff98
   16f8c:	orr	r1, r1, r2
   16f90:	ldr	r2, [fp, #-108]	; 0xffffff94
   16f94:	orr	r1, r1, r2
   16f98:	ldr	r2, [fp, #-112]	; 0xffffff90
   16f9c:	orr	r1, r1, r2
   16fa0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16fa4:	orr	r1, r1, r2
   16fa8:	ldr	r2, [fp, #-120]	; 0xffffff88
   16fac:	orr	r1, r1, r2
   16fb0:	ldr	r2, [fp, #-124]	; 0xffffff84
   16fb4:	orr	r1, r1, r2
   16fb8:	ldr	r2, [fp, #-128]	; 0xffffff80
   16fbc:	orr	r1, r1, r2
   16fc0:	ldr	r2, [fp, #-132]	; 0xffffff7c
   16fc4:	orr	r1, r1, r2
   16fc8:	ldr	r2, [fp, #-136]	; 0xffffff78
   16fcc:	orr	r1, r1, r2
   16fd0:	ldr	r2, [fp, #-140]	; 0xffffff74
   16fd4:	orr	r1, r1, r2
   16fd8:	ldr	r2, [fp, #-144]	; 0xffffff70
   16fdc:	orr	r1, r1, r2
   16fe0:	ldr	r2, [fp, #-148]	; 0xffffff6c
   16fe4:	orr	r1, r1, r2
   16fe8:	ldr	r2, [fp, #-152]	; 0xffffff68
   16fec:	orr	r1, r1, r2
   16ff0:	ldr	r2, [sp, #156]	; 0x9c
   16ff4:	orr	r1, r1, r2
   16ff8:	ldr	r2, [sp, #152]	; 0x98
   16ffc:	orr	r1, r1, r2
   17000:	ldr	r2, [sp, #148]	; 0x94
   17004:	orr	r1, r1, r2
   17008:	ldr	r2, [sp, #144]	; 0x90
   1700c:	orr	r1, r1, r2
   17010:	ldr	r2, [sp, #140]	; 0x8c
   17014:	orr	r1, r1, r2
   17018:	ldr	r2, [sp, #136]	; 0x88
   1701c:	orr	r1, r1, r2
   17020:	ldr	r2, [sp, #132]	; 0x84
   17024:	orr	r1, r1, r2
   17028:	ldr	r2, [sp, #128]	; 0x80
   1702c:	orr	r1, r1, r2
   17030:	ldr	r2, [sp, #124]	; 0x7c
   17034:	orr	r1, r1, r2
   17038:	ldr	r2, [sp, #120]	; 0x78
   1703c:	orr	r1, r1, r2
   17040:	ldr	r2, [sp, #116]	; 0x74
   17044:	orr	r1, r1, r2
   17048:	ldr	r2, [sp, #112]	; 0x70
   1704c:	orr	r1, r1, r2
   17050:	ldr	r2, [sp, #108]	; 0x6c
   17054:	orr	r1, r1, r2
   17058:	ldr	r2, [sp, #104]	; 0x68
   1705c:	orr	r1, r1, r2
   17060:	ldr	r2, [sp, #100]	; 0x64
   17064:	orr	r1, r1, r2
   17068:	ldr	r2, [sp, #96]	; 0x60
   1706c:	orr	r1, r1, r2
   17070:	ldr	r2, [sp, #92]	; 0x5c
   17074:	orr	r1, r1, r2
   17078:	ldr	r2, [sp, #88]	; 0x58
   1707c:	orr	r1, r1, r2
   17080:	ldr	r2, [sp, #84]	; 0x54
   17084:	orr	r1, r1, r2
   17088:	ldr	r2, [sp, #80]	; 0x50
   1708c:	orr	r1, r1, r2
   17090:	ldr	r2, [sp, #76]	; 0x4c
   17094:	orr	r1, r1, r2
   17098:	ldr	r2, [sp, #72]	; 0x48
   1709c:	orr	r1, r1, r2
   170a0:	ldr	r2, [sp, #68]	; 0x44
   170a4:	orr	r1, r1, r2
   170a8:	ldr	r2, [sp, #64]	; 0x40
   170ac:	orr	r1, r1, r2
   170b0:	ldr	r2, [sp, #60]	; 0x3c
   170b4:	orr	r1, r1, r2
   170b8:	ldr	r2, [sp, #56]	; 0x38
   170bc:	orr	r1, r1, r2
   170c0:	ldr	r2, [sp, #52]	; 0x34
   170c4:	orr	r1, r1, r2
   170c8:	ldr	r2, [sp, #48]	; 0x30
   170cc:	orr	r1, r1, r2
   170d0:	ldr	r2, [sp, #44]	; 0x2c
   170d4:	orr	r1, r1, r2
   170d8:	ldr	r2, [sp, #40]	; 0x28
   170dc:	orr	r1, r1, r2
   170e0:	ldr	r2, [sp, #36]	; 0x24
   170e4:	orr	r1, r1, r2
   170e8:	ldr	r2, [sp, #32]
   170ec:	orr	r1, r1, r2
   170f0:	ldr	r2, [sp, #28]
   170f4:	orr	r1, r1, r2
   170f8:	ldr	r2, [sp, #24]
   170fc:	orr	r1, r1, r2
   17100:	ldr	r2, [sp, #20]
   17104:	orr	r1, r1, r2
   17108:	ldr	r2, [sp, #16]
   1710c:	orr	r1, r1, r2
   17110:	orr	r1, r1, r7
   17114:	orr	r1, r1, r5
   17118:	orr	r1, r1, r6
   1711c:	orr	r1, r1, sl
   17120:	orr	r1, r1, r9
   17124:	orr	r5, r1, r0
   17128:	ldr	r1, [pc, #428]	; 172dc <main@@Base+0x1080>
   1712c:	ldr	r2, [pc, #428]	; 172e0 <main@@Base+0x1084>
   17130:	mov	r0, r4
   17134:	add	r1, pc, r1
   17138:	add	r2, pc, r2
   1713c:	bl	15038 <test_json@@Base>
   17140:	orrs	r0, r5, r0
   17144:	mvnne	r0, #0
   17148:	sub	sp, fp, #28
   1714c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17150:	ldrdeq	r8, [r4], -r4
   17154:	andeq	r3, r3, sl, ror #18
   17158:	andeq	r1, r3, r3, lsr #16
   1715c:	andeq	r3, r3, r9, asr #18
   17160:	andeq	r3, r3, r4, ror r9
   17164:	andeq	r3, r3, sp, asr r9
   17168:	andeq	r3, r3, r9, lsl #19
   1716c:	andeq	r3, r3, r4, ror r9
   17170:	andeq	r3, r3, r9, lsr #19
   17174:	andeq	r3, r3, r1, lsr #19
   17178:	andeq	r3, r3, pc, lsr #19
   1717c:	andeq	r3, r3, r9, lsr #19
   17180:	andeq	r3, r3, r6, lsr #19
   17184:	andeq	r1, r3, r8, lsl r6
   17188:	andeq	r3, r3, r5, ror r9
   1718c:	andeq	r3, r3, lr, asr r9
   17190:	andeq	r3, r3, r5, asr r9
   17194:	andeq	r3, r3, sp, asr #18
   17198:	andeq	r3, r3, lr, asr #18
   1719c:	andeq	r3, r3, r8, asr r9
   171a0:	andeq	r3, r3, ip, asr #18
   171a4:	andeq	r3, r3, r2, asr #18
   171a8:	andeq	r1, r3, r5, asr r7
   171ac:	andeq	r3, r3, r7, lsl #18
   171b0:	andeq	r3, r3, r1, lsr r9
   171b4:	andeq	r3, r3, r4, lsr #18
   171b8:	andeq	r3, r3, sp, lsl r9
   171bc:	andeq	r3, r3, r6, lsl r9
   171c0:	andeq	r3, r3, r8, lsl r9
   171c4:	andeq	r3, r3, sp, lsl #18
   171c8:	andeq	r3, r3, r2, lsl #18
   171cc:	andeq	r3, r3, pc, lsl r9
   171d0:	andeq	r3, r3, r9, lsl r9
   171d4:	andeq	r3, r3, pc, lsl #18
   171d8:	andeq	r3, r3, sp, lsr #18
   171dc:	andeq	r3, r3, pc, lsl r9
   171e0:	andeq	r3, r3, sp, lsr r9
   171e4:	andeq	r3, r3, pc, lsr #18
   171e8:	andeq	r3, r3, ip, asr #18
   171ec:	andeq	r3, r3, sp, lsr r9
   171f0:	andeq	r3, r3, ip, lsr r9
   171f4:	andeq	r3, r3, sl, asr #18
   171f8:	andeq	r3, r3, r0, ror r9
   171fc:	andeq	r3, r3, lr, lsr #18
   17200:	andeq	r3, r3, fp, ror r9
   17204:	muleq	r3, r6, r9
   17208:	andeq	r3, r3, r7, ror #19
   1720c:	andeq	r3, r3, r5, lsl #20
   17210:	andeq	r3, r3, r0, ror sl
   17214:	andeq	r3, r3, r6, lsr #21
   17218:	andeq	r3, r3, r5, lsr #21
   1721c:	muleq	r3, pc, sl	; <UNPREDICTABLE>
   17220:	muleq	r3, r0, sl
   17224:	andeq	r3, r3, sp, ror #5
   17228:	andeq	r3, r3, sp, ror sl
   1722c:	andeq	r3, r3, r7, lsr r6
   17230:	andeq	r3, r3, sl, ror #20
   17234:	andeq	r3, r3, ip, asr sl
   17238:	andeq	r3, r3, r5, asr #12
   1723c:	andeq	r3, r3, sl, asr #20
   17240:	andeq	r3, r3, r5, asr r6
   17244:	andeq	r3, r3, r8, lsr sl
   17248:	andeq	r3, r3, r4, ror #12
   1724c:	andeq	r3, r3, r5, lsr #20
   17250:	andeq	r3, r3, lr, lsl sl
   17254:	andeq	r3, r3, r6, lsr #20
   17258:	strdeq	r3, [r3], -r2
   1725c:	muleq	r3, fp, r6
   17260:	andeq	r3, r3, r9, lsl #20
   17264:	andeq	r3, r3, r7, lsl #14
   17268:	andeq	r3, r3, r4, lsr #20
   1726c:	muleq	r3, r0, r7
   17270:	andeq	r3, r3, r3, asr sl
   17274:	andeq	r3, r3, ip, asr #20
   17278:	andeq	r3, r3, lr, lsr sl
   1727c:	muleq	r3, pc, sl	; <UNPREDICTABLE>
   17280:	andeq	r3, r3, r9, asr #21
   17284:	andeq	r3, r3, sl, lsl #22
   17288:	andeq	r3, r3, r3, asr #22
   1728c:	andeq	r3, r3, r7, asr #22
   17290:	andeq	r3, r3, sp, asr fp
   17294:	andeq	r3, r3, pc, lsr fp
   17298:	andeq	r3, r3, fp, lsl #23
   1729c:	muleq	r3, r8, fp
   172a0:	andeq	r3, r3, r9, lsl #24
   172a4:	andeq	r3, r3, ip, lsr #24
   172a8:	andeq	r3, r3, r2, lsr #24
   172ac:	andeq	r3, r3, sp, asr #24
   172b0:	andeq	r3, r3, fp, asr #24
   172b4:	andeq	r3, r3, r2, asr #25
   172b8:	andeq	r3, r3, r6, lsl #26
   172bc:	andeq	r3, r3, r2, asr sp
   172c0:	andeq	r3, r3, r8, asr #27
   172c4:	andeq	r3, r3, fp, lsl #28
   172c8:	muleq	r3, r2, lr
   172cc:	andeq	r3, r3, r4, ror #29
   172d0:	andeq	r3, r3, fp, asr pc
   172d4:	muleq	r3, pc, pc	; <UNPREDICTABLE>
   172d8:	andeq	r4, r3, r5, lsr #32
   172dc:	andeq	r3, r3, r0, asr lr
   172e0:	ldrdeq	r3, [r3], -fp
   172e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   172e8:	add	fp, sp, #28
   172ec:	sub	sp, sp, #4
   172f0:	vpush	{d8-d9}
   172f4:	sub	sp, sp, #80	; 0x50
   172f8:	mov	r8, r0
   172fc:	mov	r0, #0
   17300:	mov	r4, r1
   17304:	mov	r1, #36	; 0x24
   17308:	mov	sl, r3
   1730c:	mov	r5, r2
   17310:	str	r0, [r3]
   17314:	ldr	r0, [r8]
   17318:	bl	31348 <flatcc_builder_start_table@@Base>
   1731c:	cmp	r0, #0
   17320:	beq	17350 <main@@Base+0x10f4>
   17324:	mov	r0, r8
   17328:	mov	r1, r4
   1732c:	mov	r2, r5
   17330:	mov	r3, #33	; 0x21
   17334:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   17338:	mov	r7, r0
   1733c:	mov	r0, r7
   17340:	sub	sp, fp, #48	; 0x30
   17344:	vpop	{d8-d9}
   17348:	add	sp, sp, #4
   1734c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17350:	add	r0, sp, #48	; 0x30
   17354:	mov	r1, r4
   17358:	mov	r2, r5
   1735c:	mov	r3, #1
   17360:	str	r0, [sp]
   17364:	mov	r0, r8
   17368:	bl	38b5c <flatcc_json_parser_prepare_unions@@Base>
   1736c:	cmp	r0, r5
   17370:	beq	17324 <main@@Base+0x10c8>
   17374:	cmp	r4, r5
   17378:	beq	173ac <main@@Base+0x1150>
   1737c:	ldrb	r0, [r4]
   17380:	cmp	r0, #123	; 0x7b
   17384:	bne	173ac <main@@Base+0x1150>
   17388:	add	r1, r4, #1
   1738c:	sub	r0, r5, r1
   17390:	cmp	r0, #2
   17394:	blt	17444 <main@@Base+0x11e8>
   17398:	ldrb	r0, [r1]
   1739c:	cmp	r0, #32
   173a0:	bls	17434 <main@@Base+0x11d8>
   173a4:	mov	r4, r1
   173a8:	b	17454 <main@@Base+0x11f8>
   173ac:	mov	r0, r8
   173b0:	mov	r1, r4
   173b4:	mov	r2, r5
   173b8:	mov	r3, #21
   173bc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   173c0:	mov	r4, r0
   173c4:	ldr	r0, [r8, #24]
   173c8:	cmp	r0, #0
   173cc:	bne	17324 <main@@Base+0x10c8>
   173d0:	ldr	r0, [r8]
   173d4:	mov	r1, #3
   173d8:	bl	31bd0 <flatcc_builder_check_required_field@@Base>
   173dc:	cmp	r0, #0
   173e0:	beq	17418 <main@@Base+0x11bc>
   173e4:	ldr	r3, [sp, #48]	; 0x30
   173e8:	mov	r0, r8
   173ec:	mov	r1, r4
   173f0:	mov	r2, r5
   173f4:	bl	38bec <flatcc_json_parser_finalize_unions@@Base>
   173f8:	mov	r7, r0
   173fc:	ldr	r0, [r8]
   17400:	bl	31d70 <flatcc_builder_end_table@@Base>
   17404:	cmp	r0, #0
   17408:	mov	r4, r7
   1740c:	str	r0, [sl]
   17410:	bne	1733c <main@@Base+0x10e0>
   17414:	b	17324 <main@@Base+0x10c8>
   17418:	mov	r0, r8
   1741c:	mov	r1, r4
   17420:	mov	r2, r5
   17424:	mov	r3, #29
   17428:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1742c:	mov	r4, r0
   17430:	b	17324 <main@@Base+0x10c8>
   17434:	bne	17444 <main@@Base+0x11e8>
   17438:	ldrb	r0, [r4, #2]!
   1743c:	cmp	r0, #32
   17440:	bhi	17454 <main@@Base+0x11f8>
   17444:	mov	r0, r8
   17448:	mov	r2, r5
   1744c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   17450:	mov	r4, r0
   17454:	cmp	r4, r5
   17458:	mov	r2, r5
   1745c:	beq	174a0 <main@@Base+0x1244>
   17460:	ldrb	r0, [r4]
   17464:	cmp	r0, #125	; 0x7d
   17468:	bne	1749c <main@@Base+0x1240>
   1746c:	add	r1, r4, #1
   17470:	sub	r0, r5, r1
   17474:	cmp	r0, #2
   17478:	blt	21434 <main@@Base+0xb1d8>
   1747c:	ldrb	r0, [r1]
   17480:	cmp	r0, #32
   17484:	bhi	213f8 <main@@Base+0xb19c>
   17488:	bne	21434 <main@@Base+0xb1d8>
   1748c:	ldrb	r0, [r4, #2]!
   17490:	cmp	r0, #32
   17494:	bhi	173c4 <main@@Base+0x1168>
   17498:	b	21434 <main@@Base+0xb1d8>
   1749c:	mov	r2, r4
   174a0:	add	r0, r8, #12
   174a4:	vldr	s18, [pc, #896]	; 1782c <main@@Base+0x15d0>
   174a8:	movw	lr, #29556	; 0x7374
   174ac:	vmov.f32	s16, #8	; 0x40400000  3.0
   174b0:	str	r5, [sp, #44]	; 0x2c
   174b4:	str	r8, [sp, #40]	; 0x28
   174b8:	str	sl, [sp, #36]	; 0x24
   174bc:	str	r0, [sp, #32]
   174c0:	movw	r0, #13407	; 0x345f
   174c4:	movt	lr, #29797	; 0x7465
   174c8:	movt	r0, #29494	; 0x7336
   174cc:	sub	r0, r0, #512	; 0x200
   174d0:	sub	r0, r0, #196608	; 0x30000
   174d4:	str	r0, [sp, #28]
   174d8:	cmp	r2, r5
   174dc:	mov	r9, r5
   174e0:	beq	1753c <main@@Base+0x12e0>
   174e4:	ldrb	r0, [r2]
   174e8:	cmp	r0, #46	; 0x2e
   174ec:	beq	17508 <main@@Base+0x12ac>
   174f0:	cmp	r0, #34	; 0x22
   174f4:	bne	1752c <main@@Base+0x12d0>
   174f8:	ldr	r0, [sp, #32]
   174fc:	mov	r1, #0
   17500:	add	r9, r2, #1
   17504:	b	17538 <main@@Base+0x12dc>
   17508:	mov	r1, r2
   1750c:	mov	r0, r8
   17510:	mov	r2, r5
   17514:	mov	r3, #5
   17518:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1751c:	movw	lr, #29556	; 0x7374
   17520:	mov	r9, r0
   17524:	movt	lr, #29797	; 0x7465
   17528:	b	1753c <main@@Base+0x12e0>
   1752c:	ldr	r0, [sp, #32]
   17530:	mov	r1, #1
   17534:	mov	r9, r2
   17538:	str	r1, [r0]
   1753c:	sub	r8, r5, r9
   17540:	mov	r0, #8
   17544:	cmp	r8, #8
   17548:	movcc	r0, r8
   1754c:	sub	r0, r0, #1
   17550:	cmp	r0, #7
   17554:	bhi	187e4 <main@@Base+0x2588>
   17558:	add	r7, pc, #36	; 0x24
   1755c:	mov	sl, #0
   17560:	mov	ip, #0
   17564:	mov	r4, #0
   17568:	mov	r1, #0
   1756c:	mov	r2, #0
   17570:	mov	r3, #0
   17574:	mov	r6, #0
   17578:	mov	r5, #0
   1757c:	ldr	r0, [r7, r0, lsl #2]
   17580:	add	pc, r7, r0
   17584:	andeq	r0, r0, r4, rrx
   17588:	andeq	r0, r0, ip, asr r0
   1758c:	andeq	r0, r0, r4, asr r0
   17590:	andeq	r0, r0, ip, asr #32
   17594:	andeq	r0, r0, r0, asr #32
   17598:	andeq	r0, r0, r4, lsr r0
   1759c:	andeq	r0, r0, r4, lsr #32
   175a0:	andeq	r0, r0, r0, lsr #32
   175a4:	ldrb	ip, [r9, #7]
   175a8:	ldrb	r0, [r9, #6]
   175ac:	mov	r4, sl
   175b0:	orr	r0, ip, r0, lsl #8
   175b4:	mov	sl, r0
   175b8:	ldrb	r0, [r9, #5]
   175bc:	mov	r1, r4
   175c0:	orr	sl, sl, r0, lsl #16
   175c4:	ldrb	r0, [r9, #4]
   175c8:	mov	r2, r1
   175cc:	orr	sl, sl, r0, lsl #24
   175d0:	ldrb	r0, [r9, #3]
   175d4:	orr	r3, r0, r2
   175d8:	ldrb	r0, [r9, #2]
   175dc:	orr	r6, r3, r0, lsl #8
   175e0:	ldrb	r0, [r9, #1]
   175e4:	orr	r5, r6, r0, lsl #16
   175e8:	ldrb	r0, [r9]
   175ec:	movw	r1, #29281	; 0x7261
   175f0:	movt	r1, #24946	; 0x6172
   175f4:	subs	r1, sl, r1
   175f8:	orr	r0, r5, r0, lsl #24
   175fc:	sbcs	r1, r0, lr
   17600:	bcs	176ac <main@@Base+0x1450>
   17604:	movw	r1, #28004	; 0x6d64
   17608:	movt	r1, #28257	; 0x6e61
   1760c:	cmp	r0, r1
   17610:	bhi	17830 <main@@Base+0x15d4>
   17614:	movw	r1, #25975	; 0x6577
   17618:	ldr	r5, [sp, #44]	; 0x2c
   1761c:	movt	r1, #26220	; 0x666c
   17620:	cmp	r0, r1
   17624:	bhi	17944 <main@@Base+0x16e8>
   17628:	movw	r1, #27759	; 0x6c6f
   1762c:	movt	r1, #25455	; 0x636f
   17630:	eor	r2, r0, r1
   17634:	and	r1, sl, #-16777216	; 0xff000000
   17638:	eor	r3, r1, #1912602624	; 0x72000000
   1763c:	orrs	r2, r3, r2
   17640:	beq	18200 <main@@Base+0x1fa4>
   17644:	movw	r2, #25965	; 0x656d
   17648:	ldr	sl, [sp, #36]	; 0x24
   1764c:	eor	r1, r1, #2030043136	; 0x79000000
   17650:	movt	r2, #25966	; 0x656e
   17654:	eor	r0, r0, r2
   17658:	orrs	r0, r1, r0
   1765c:	bne	187e4 <main@@Base+0x2588>
   17660:	cmp	r8, #6
   17664:	ldr	r8, [sp, #40]	; 0x28
   17668:	mov	r1, r9
   1766c:	blt	199e0 <main@@Base+0x3784>
   17670:	ldr	r1, [sp, #32]
   17674:	mov	r2, r9
   17678:	ldrb	r0, [r2, #5]!
   1767c:	ldr	r1, [r1]
   17680:	cmp	r1, #0
   17684:	beq	18984 <main@@Base+0x2728>
   17688:	cmp	r0, #33	; 0x21
   1768c:	bcc	1769c <main@@Base+0x1440>
   17690:	cmp	r0, #58	; 0x3a
   17694:	mov	r1, r9
   17698:	bne	199e0 <main@@Base+0x3784>
   1769c:	ldr	r0, [sp, #32]
   176a0:	mov	r1, #0
   176a4:	str	r1, [r0]
   176a8:	b	18994 <main@@Base+0x2738>
   176ac:	movw	r1, #0
   176b0:	movt	r1, #26163	; 0x6633
   176b4:	subs	r1, sl, r1
   176b8:	sbcs	r1, r0, lr
   176bc:	bcs	178c0 <main@@Base+0x1664>
   176c0:	movw	r1, #29281	; 0x7261
   176c4:	ldr	r5, [sp, #44]	; 0x2c
   176c8:	movt	r1, #24946	; 0x6172
   176cc:	eor	r2, sl, r1
   176d0:	eor	r1, r0, lr
   176d4:	orrs	r2, r2, r1
   176d8:	bne	179c4 <main@@Base+0x1768>
   176dc:	add	sl, r9, #8
   176e0:	mov	r0, #8
   176e4:	sub	ip, r5, sl
   176e8:	cmp	ip, #8
   176ec:	movcc	r0, ip
   176f0:	sub	r0, r0, #1
   176f4:	cmp	r0, #7
   176f8:	bhi	1969c <main@@Base+0x3440>
   176fc:	add	r2, pc, #36	; 0x24
   17700:	mov	r1, #0
   17704:	mov	lr, #0
   17708:	mov	r8, #0
   1770c:	mov	r6, #0
   17710:	mov	r3, #0
   17714:	mov	r4, #0
   17718:	mov	r7, #0
   1771c:	ldr	r5, [r2, r0, lsl #2]
   17720:	mov	r0, #0
   17724:	add	pc, r2, r5
   17728:	andeq	r0, r0, r4, rrx
   1772c:	andeq	r0, r0, ip, asr r0
   17730:	andeq	r0, r0, r4, asr r0
   17734:	andeq	r0, r0, ip, asr #32
   17738:	andeq	r0, r0, r0, asr #32
   1773c:	andeq	r0, r0, r4, lsr r0
   17740:	andeq	r0, r0, r4, lsr #32
   17744:	andeq	r0, r0, r0, lsr #32
   17748:	ldrb	lr, [r9, #15]
   1774c:	ldrb	r0, [r9, #14]
   17750:	mov	r8, r1
   17754:	orr	r0, lr, r0, lsl #8
   17758:	mov	r1, r0
   1775c:	ldrb	r0, [r9, #13]
   17760:	mov	r6, r8
   17764:	orr	r1, r1, r0, lsl #16
   17768:	ldrb	r0, [r9, #12]
   1776c:	mov	r3, r6
   17770:	orr	r1, r1, r0, lsl #24
   17774:	ldrb	r0, [r9, #11]
   17778:	orr	r4, r0, r3
   1777c:	ldrb	r0, [r9, #10]
   17780:	orr	r7, r4, r0, lsl #8
   17784:	ldrb	r0, [r9, #9]
   17788:	orr	r0, r7, r0, lsl #16
   1778c:	ldrb	r2, [sl]
   17790:	movw	r7, #26227	; 0x6673
   17794:	movt	r7, #31087	; 0x796f
   17798:	orr	r2, r0, r2, lsl #24
   1779c:	movw	r0, #26989	; 0x696d
   177a0:	movt	r0, #29810	; 0x7472
   177a4:	subs	r0, r0, r1
   177a8:	sbcs	r0, r7, r2
   177ac:	bcc	18134 <main@@Base+0x1ed8>
   177b0:	movw	r0, #29797	; 0x7465
   177b4:	ldr	r5, [sp, #44]	; 0x2c
   177b8:	eor	r3, r2, r7
   177bc:	movt	r0, #28530	; 0x6f72
   177c0:	eor	r0, r1, r0
   177c4:	orrs	r0, r0, r3
   177c8:	beq	185e4 <main@@Base+0x2388>
   177cc:	movw	r0, #27763	; 0x6c73
   177d0:	movt	r0, #28527	; 0x6f6f
   177d4:	eor	r0, r1, r0
   177d8:	movw	r1, #26210	; 0x6662
   177dc:	movt	r1, #31087	; 0x796f
   177e0:	eor	r1, r2, r1
   177e4:	orrs	r0, r0, r1
   177e8:	bne	1969c <main@@Base+0x3440>
   177ec:	cmp	ip, #9
   177f0:	blt	1969c <main@@Base+0x3440>
   177f4:	ldr	r2, [sp, #32]
   177f8:	mov	r1, r9
   177fc:	ldrb	r0, [r1, #16]!
   17800:	ldr	r2, [r2]
   17804:	cmp	r2, #0
   17808:	beq	18ca8 <main@@Base+0x2a4c>
   1780c:	cmp	r0, #33	; 0x21
   17810:	bcc	1781c <main@@Base+0x15c0>
   17814:	cmp	r0, #58	; 0x3a
   17818:	bne	1969c <main@@Base+0x3440>
   1781c:	ldr	r0, [sp, #32]
   17820:	mov	r2, #0
   17824:	str	r2, [r0]
   17828:	b	18cb4 <main@@Base+0x2a58>
   1782c:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   17830:	movw	r1, #29555	; 0x7373
   17834:	ldr	r5, [sp, #44]	; 0x2c
   17838:	movt	r1, #29797	; 0x7465
   1783c:	cmp	r0, r1
   17840:	bhi	17a90 <main@@Base+0x1834>
   17844:	movw	r3, #24430	; 0x5f6e
   17848:	movw	r2, #29285	; 0x7265
   1784c:	movt	r3, #28276	; 0x6e74
   17850:	movt	r2, #28769	; 0x7061
   17854:	subs	r1, sl, r3
   17858:	sbcs	r1, r0, r2
   1785c:	bcs	17c2c <main@@Base+0x19d0>
   17860:	movw	r1, #28005	; 0x6d65
   17864:	movt	r1, #28257	; 0x6e61
   17868:	teq	r0, r1
   1786c:	bne	1a56c <main@@Base+0x4310>
   17870:	cmp	r8, #5
   17874:	ldr	r8, [sp, #40]	; 0x28
   17878:	ldr	sl, [sp, #36]	; 0x24
   1787c:	mov	r1, r9
   17880:	blt	19c80 <main@@Base+0x3a24>
   17884:	ldr	r1, [sp, #32]
   17888:	mov	r2, r9
   1788c:	ldrb	r0, [r2, #4]!
   17890:	ldr	r1, [r1]
   17894:	cmp	r1, #0
   17898:	beq	18a64 <main@@Base+0x2808>
   1789c:	cmp	r0, #33	; 0x21
   178a0:	bcc	178b0 <main@@Base+0x1654>
   178a4:	cmp	r0, #58	; 0x3a
   178a8:	mov	r1, r9
   178ac:	bne	19c80 <main@@Base+0x3a24>
   178b0:	ldr	r0, [sp, #32]
   178b4:	mov	r1, #0
   178b8:	str	r1, [r0]
   178bc:	b	18a74 <main@@Base+0x2818>
   178c0:	movw	r2, #29544	; 0x7368
   178c4:	ldr	r5, [sp, #44]	; 0x2c
   178c8:	movt	r2, #26721	; 0x6861
   178cc:	subs	r1, sl, r2
   178d0:	sbcs	r1, r0, lr
   178d4:	bcs	17aec <main@@Base+0x1890>
   178d8:	movw	r1, #0
   178dc:	bfc	sl, #0, #16
   178e0:	eor	r0, r0, lr
   178e4:	movt	r1, #26163	; 0x6633
   178e8:	eor	r1, sl, r1
   178ec:	orrs	r0, r1, r0
   178f0:	bne	1a56c <main@@Base+0x4310>
   178f4:	cmp	r8, #7
   178f8:	ldr	r8, [sp, #40]	; 0x28
   178fc:	ldr	sl, [sp, #36]	; 0x24
   17900:	mov	r7, r9
   17904:	blt	1930c <main@@Base+0x30b0>
   17908:	ldr	r2, [sp, #32]
   1790c:	mov	r1, r9
   17910:	ldrb	r0, [r1, #6]!
   17914:	ldr	r2, [r2]
   17918:	cmp	r2, #0
   1791c:	beq	188bc <main@@Base+0x2660>
   17920:	cmp	r0, #33	; 0x21
   17924:	bcc	17934 <main@@Base+0x16d8>
   17928:	cmp	r0, #58	; 0x3a
   1792c:	mov	r7, r9
   17930:	bne	1930c <main@@Base+0x30b0>
   17934:	ldr	r0, [sp, #32]
   17938:	mov	r2, #0
   1793c:	str	r2, [r0]
   17940:	b	188cc <main@@Base+0x2670>
   17944:	movw	r1, #65535	; 0xffff
   17948:	movw	r2, #30309	; 0x7665
   1794c:	movw	r3, #28530	; 0x6f72
   17950:	movt	r1, #26735	; 0x686f
   17954:	movt	r2, #26990	; 0x696e
   17958:	movt	r3, #28276	; 0x6e74
   1795c:	cmp	r0, r1
   17960:	bhi	17e08 <main@@Base+0x1bac>
   17964:	movw	r1, #25976	; 0x6578
   17968:	movt	r1, #26220	; 0x666c
   1796c:	teq	r0, r1
   17970:	bne	1a56c <main@@Base+0x4310>
   17974:	cmp	r8, #5
   17978:	ldr	r8, [sp, #40]	; 0x28
   1797c:	ldr	sl, [sp, #36]	; 0x24
   17980:	mov	r4, r9
   17984:	blt	19cd4 <main@@Base+0x3a78>
   17988:	ldr	r2, [sp, #32]
   1798c:	mov	r1, r9
   17990:	ldrb	r0, [r1, #4]!
   17994:	ldr	r2, [r2]
   17998:	cmp	r2, #0
   1799c:	beq	18a9c <main@@Base+0x2840>
   179a0:	cmp	r0, #33	; 0x21
   179a4:	bcc	179b4 <main@@Base+0x1758>
   179a8:	cmp	r0, #58	; 0x3a
   179ac:	mov	r4, r9
   179b0:	bne	19cd4 <main@@Base+0x3a78>
   179b4:	ldr	r0, [sp, #32]
   179b8:	mov	r2, #0
   179bc:	str	r2, [r0]
   179c0:	b	18aac <main@@Base+0x2850>
   179c4:	movw	r2, #28788	; 0x7074
   179c8:	movt	r2, #25965	; 0x656d
   179cc:	subs	r2, sl, r2
   179d0:	sbcs	r2, r0, lr
   179d4:	bcs	17e78 <main@@Base+0x1c1c>
   179d8:	movw	r0, #28524	; 0x6f6c
   179dc:	movt	r0, #25199	; 0x626f
   179e0:	eor	r0, sl, r0
   179e4:	orrs	r0, r0, r1
   179e8:	beq	18594 <main@@Base+0x2338>
   179ec:	movw	r0, #29541	; 0x7365
   179f0:	movt	r0, #25185	; 0x6261
   179f4:	eor	r0, sl, r0
   179f8:	orrs	r0, r0, r1
   179fc:	bne	1a56c <main@@Base+0x4310>
   17a00:	add	r7, r9, #8
   17a04:	ldr	r8, [sp, #40]	; 0x28
   17a08:	ldr	sl, [sp, #36]	; 0x24
   17a0c:	mov	r2, #8
   17a10:	sub	r0, r5, r7
   17a14:	cmp	r0, #8
   17a18:	movcc	r2, r0
   17a1c:	sub	r1, r2, #2
   17a20:	cmp	r1, #7
   17a24:	bcs	18b0c <main@@Base+0x28b0>
   17a28:	ldrb	r1, [r9, #9]
   17a2c:	lsl	r2, r1, #16
   17a30:	mov	r1, #0
   17a34:	ldrb	r3, [r7]
   17a38:	orr	r2, r2, r3, lsl #24
   17a3c:	movw	r3, #0
   17a40:	movt	r3, #13876	; 0x3634
   17a44:	eor	r2, r2, r3
   17a48:	orrs	r1, r1, r2
   17a4c:	bne	1f6e4 <main@@Base+0x9488>
   17a50:	cmp	r0, #3
   17a54:	blt	1f6e4 <main@@Base+0x9488>
   17a58:	ldr	r2, [sp, #32]
   17a5c:	mov	r1, r9
   17a60:	ldrb	r0, [r1, #10]!
   17a64:	ldr	r2, [r2]
   17a68:	cmp	r2, #0
   17a6c:	beq	190b4 <main@@Base+0x2e58>
   17a70:	cmp	r0, #33	; 0x21
   17a74:	bcc	17a80 <main@@Base+0x1824>
   17a78:	cmp	r0, #58	; 0x3a
   17a7c:	bne	1f6e4 <main@@Base+0x9488>
   17a80:	ldr	r0, [sp, #32]
   17a84:	mov	r2, #0
   17a88:	str	r2, [r0]
   17a8c:	b	190c0 <main@@Base+0x2e64>
   17a90:	and	r6, sl, #-16777216	; 0xff000000
   17a94:	eor	r4, r0, lr
   17a98:	eor	r1, r6, #872415232	; 0x34000000
   17a9c:	orrs	r1, r1, r4
   17aa0:	bne	17f10 <main@@Base+0x1cb4>
   17aa4:	cmp	r8, #6
   17aa8:	mov	r7, r9
   17aac:	blt	193cc <main@@Base+0x3170>
   17ab0:	ldr	r2, [sp, #32]
   17ab4:	mov	r1, r9
   17ab8:	ldrb	r0, [r1, #5]!
   17abc:	ldr	r2, [r2]
   17ac0:	cmp	r2, #0
   17ac4:	beq	188f4 <main@@Base+0x2698>
   17ac8:	cmp	r0, #33	; 0x21
   17acc:	bcc	17adc <main@@Base+0x1880>
   17ad0:	cmp	r0, #58	; 0x3a
   17ad4:	mov	r7, r9
   17ad8:	bne	193cc <main@@Base+0x3170>
   17adc:	ldr	r0, [sp, #32]
   17ae0:	mov	r2, #0
   17ae4:	str	r2, [r0]
   17ae8:	b	18904 <main@@Base+0x26a8>
   17aec:	eor	r2, sl, r2
   17af0:	eor	r1, r0, lr
   17af4:	orrs	r2, r2, r1
   17af8:	bne	17f60 <main@@Base+0x1d04>
   17afc:	add	sl, r9, #8
   17b00:	mov	r0, #8
   17b04:	sub	ip, r5, sl
   17b08:	cmp	ip, #8
   17b0c:	movcc	r0, ip
   17b10:	sub	r0, r0, #1
   17b14:	cmp	r0, #7
   17b18:	bhi	1969c <main@@Base+0x3440>
   17b1c:	add	r2, pc, #36	; 0x24
   17b20:	mov	r1, #0
   17b24:	mov	lr, #0
   17b28:	mov	r8, #0
   17b2c:	mov	r7, #0
   17b30:	mov	r3, #0
   17b34:	mov	r6, #0
   17b38:	mov	r4, #0
   17b3c:	ldr	r5, [r2, r0, lsl #2]
   17b40:	mov	r0, #0
   17b44:	add	pc, r2, r5
   17b48:	andeq	r0, r0, r4, rrx
   17b4c:	andeq	r0, r0, ip, asr r0
   17b50:	andeq	r0, r0, r4, asr r0
   17b54:	andeq	r0, r0, ip, asr #32
   17b58:	andeq	r0, r0, r0, asr #32
   17b5c:	andeq	r0, r0, r4, lsr r0
   17b60:	andeq	r0, r0, r4, lsr #32
   17b64:	andeq	r0, r0, r0, lsr #32
   17b68:	ldrb	lr, [r9, #15]
   17b6c:	ldrb	r0, [r9, #14]
   17b70:	mov	r8, r1
   17b74:	orr	r0, lr, r0, lsl #8
   17b78:	mov	r1, r0
   17b7c:	ldrb	r0, [r9, #13]
   17b80:	mov	r7, r8
   17b84:	orr	r1, r1, r0, lsl #16
   17b88:	ldrb	r0, [r9, #12]
   17b8c:	mov	r3, r7
   17b90:	orr	r1, r1, r0, lsl #24
   17b94:	ldrb	r0, [r9, #11]
   17b98:	orr	r6, r0, r3
   17b9c:	ldrb	r0, [r9, #10]
   17ba0:	orr	r4, r6, r0, lsl #8
   17ba4:	ldrb	r0, [r9, #9]
   17ba8:	orr	r0, r4, r0, lsl #16
   17bac:	ldrb	r2, [sl]
   17bb0:	movw	r3, #30257	; 0x7631
   17bb4:	movt	r3, #26222	; 0x666e
   17bb8:	orr	r2, r0, r2, lsl #24
   17bbc:	subs	r0, r1, r3
   17bc0:	movw	r0, #13407	; 0x345f
   17bc4:	movt	r0, #29494	; 0x7336
   17bc8:	sbcs	r0, r2, r0
   17bcc:	bcs	18510 <main@@Base+0x22b4>
   17bd0:	eor	r0, r1, r3
   17bd4:	ldr	r1, [sp, #28]
   17bd8:	ldr	r5, [sp, #44]	; 0x2c
   17bdc:	eor	r1, r2, r1
   17be0:	orrs	r0, r0, r1
   17be4:	bne	1969c <main@@Base+0x3440>
   17be8:	ldr	r8, [sp, #40]	; 0x28
   17bec:	cmp	ip, #9
   17bf0:	blt	19934 <main@@Base+0x36d8>
   17bf4:	ldr	r2, [sp, #32]
   17bf8:	mov	r1, r9
   17bfc:	ldrb	r0, [r1, #16]!
   17c00:	ldr	r2, [r2]
   17c04:	cmp	r2, #0
   17c08:	beq	18d88 <main@@Base+0x2b2c>
   17c0c:	cmp	r0, #33	; 0x21
   17c10:	bcc	17c1c <main@@Base+0x19c0>
   17c14:	cmp	r0, #58	; 0x3a
   17c18:	bne	19934 <main@@Base+0x36d8>
   17c1c:	ldr	r0, [sp, #32]
   17c20:	mov	r2, #0
   17c24:	str	r2, [r0]
   17c28:	b	18d94 <main@@Base+0x2b38>
   17c2c:	eor	r1, sl, r3
   17c30:	eor	r2, r0, r2
   17c34:	orrs	r1, r1, r2
   17c38:	bne	18250 <main@@Base+0x1ff4>
   17c3c:	add	r1, r9, #8
   17c40:	mov	r2, #8
   17c44:	ldr	sl, [sp, #36]	; 0x24
   17c48:	sub	r0, r5, r1
   17c4c:	cmp	r0, #8
   17c50:	movcs	r0, r2
   17c54:	sub	r2, r0, #1
   17c58:	cmp	r2, #7
   17c5c:	bhi	18778 <main@@Base+0x251c>
   17c60:	add	r4, pc, #36	; 0x24
   17c64:	mov	r8, #0
   17c68:	mov	ip, #0
   17c6c:	mov	lr, #0
   17c70:	mov	r7, #0
   17c74:	mov	r3, #0
   17c78:	mov	r6, #0
   17c7c:	mov	r5, #0
   17c80:	ldr	r0, [r4, r2, lsl #2]
   17c84:	mov	r2, #0
   17c88:	add	pc, r4, r0
   17c8c:	andeq	r0, r0, r4, rrx
   17c90:	andeq	r0, r0, ip, asr r0
   17c94:	andeq	r0, r0, r4, asr r0
   17c98:	andeq	r0, r0, ip, asr #32
   17c9c:	andeq	r0, r0, r0, asr #32
   17ca0:	andeq	r0, r0, r4, lsr r0
   17ca4:	andeq	r0, r0, r4, lsr #32
   17ca8:	andeq	r0, r0, r0, lsr #32
   17cac:	ldrb	ip, [r9, #15]
   17cb0:	ldrb	r0, [r9, #14]
   17cb4:	mov	lr, r8
   17cb8:	orr	r0, ip, r0, lsl #8
   17cbc:	mov	r8, r0
   17cc0:	ldrb	r0, [r9, #13]
   17cc4:	mov	r7, lr
   17cc8:	orr	r8, r8, r0, lsl #16
   17ccc:	ldrb	r0, [r9, #12]
   17cd0:	mov	r3, r7
   17cd4:	orr	r8, r8, r0, lsl #24
   17cd8:	ldrb	r0, [r9, #11]
   17cdc:	orr	r6, r0, r3
   17ce0:	ldrb	r0, [r9, #10]
   17ce4:	orr	r5, r6, r0, lsl #8
   17ce8:	ldrb	r0, [r9, #9]
   17cec:	orr	r2, r5, r0, lsl #16
   17cf0:	ldrb	r3, [r1]
   17cf4:	movw	r0, #25445	; 0x6365
   17cf8:	ldr	r5, [sp, #44]	; 0x2c
   17cfc:	movt	r0, #28769	; 0x7061
   17d00:	eor	r0, r8, r0
   17d04:	orr	r2, r2, r3, lsl #24
   17d08:	movw	r3, #25971	; 0x6573
   17d0c:	movt	r3, #24941	; 0x616d
   17d10:	eor	r2, r2, r3
   17d14:	orrs	r0, r0, r2
   17d18:	bne	18778 <main@@Base+0x251c>
   17d1c:	add	r8, r9, #16
   17d20:	mov	r1, #8
   17d24:	sub	r0, r5, r8
   17d28:	cmp	r0, #8
   17d2c:	movcc	r1, r0
   17d30:	sub	r2, r1, #1
   17d34:	cmp	r2, #7
   17d38:	bhi	1aa70 <main@@Base+0x4814>
   17d3c:	add	r4, pc, #24
   17d40:	mov	r1, #0
   17d44:	mov	r3, #0
   17d48:	mov	r6, #0
   17d4c:	mov	r5, #0
   17d50:	ldr	r7, [r4, r2, lsl #2]
   17d54:	mov	r2, #0
   17d58:	add	pc, r4, r7
   17d5c:	andeq	r0, r0, r4, asr #32
   17d60:	andeq	r0, r0, ip, lsr r0
   17d64:	andeq	r0, r0, r4, lsr r0
   17d68:	andeq	r0, r0, r8, lsr #32
   17d6c:	andeq	r0, r0, r0, lsr #32
   17d70:	andeq	r0, r0, r0, lsr #32
   17d74:	andeq	r0, r0, r0, lsr #32
   17d78:	andeq	r0, r0, r0, lsr #32
   17d7c:	ldrb	r2, [r9, #20]
   17d80:	lsl	r2, r2, #24
   17d84:	ldrb	r3, [r9, #19]
   17d88:	orr	r3, r3, r1
   17d8c:	mov	r1, r2
   17d90:	ldrb	r2, [r9, #18]
   17d94:	orr	r6, r3, r2, lsl #8
   17d98:	ldrb	r2, [r9, #17]
   17d9c:	orr	r5, r6, r2, lsl #16
   17da0:	ldrb	r2, [r8]
   17da4:	movw	r3, #25971	; 0x6573
   17da8:	and	r1, r1, #-16777216	; 0xff000000
   17dac:	movt	r3, #24436	; 0x5f74
   17db0:	eor	r1, r1, #1946157056	; 0x74000000
   17db4:	orr	r2, r5, r2, lsl #24
   17db8:	ldr	r5, [sp, #44]	; 0x2c
   17dbc:	eor	r2, r2, r3
   17dc0:	orrs	r1, r1, r2
   17dc4:	bne	1aa70 <main@@Base+0x4814>
   17dc8:	cmp	r0, #6
   17dcc:	blt	1aa70 <main@@Base+0x4814>
   17dd0:	ldr	r2, [sp, #32]
   17dd4:	mov	r1, r9
   17dd8:	ldrb	r0, [r1, #21]!
   17ddc:	ldr	r2, [r2]
   17de0:	cmp	r2, #0
   17de4:	beq	19608 <main@@Base+0x33ac>
   17de8:	cmp	r0, #33	; 0x21
   17dec:	bcc	17df8 <main@@Base+0x1b9c>
   17df0:	cmp	r0, #58	; 0x3a
   17df4:	bne	1aa70 <main@@Base+0x4814>
   17df8:	ldr	r0, [sp, #32]
   17dfc:	mov	r2, #0
   17e00:	str	r2, [r0]
   17e04:	b	19614 <main@@Base+0x33b8>
   17e08:	subs	r1, sl, r3
   17e0c:	sbcs	r1, r0, r2
   17e10:	bcs	182b4 <main@@Base+0x2058>
   17e14:	movw	r1, #0
   17e18:	bfc	r0, #0, #16
   17e1c:	movt	r1, #26736	; 0x6870
   17e20:	teq	r0, r1
   17e24:	bne	1a56c <main@@Base+0x4310>
   17e28:	cmp	r8, #3
   17e2c:	ldr	r8, [sp, #40]	; 0x28
   17e30:	ldr	sl, [sp, #36]	; 0x24
   17e34:	mov	r7, r9
   17e38:	blt	1abc0 <main@@Base+0x4964>
   17e3c:	ldr	r2, [sp, #32]
   17e40:	mov	r1, r9
   17e44:	ldrb	r0, [r1, #2]!
   17e48:	ldr	r2, [r2]
   17e4c:	cmp	r2, #0
   17e50:	beq	18ce0 <main@@Base+0x2a84>
   17e54:	cmp	r0, #33	; 0x21
   17e58:	bcc	17e68 <main@@Base+0x1c0c>
   17e5c:	cmp	r0, #58	; 0x3a
   17e60:	mov	r7, r9
   17e64:	bne	1abc0 <main@@Base+0x4964>
   17e68:	ldr	r0, [sp, #32]
   17e6c:	mov	r2, #0
   17e70:	str	r2, [r0]
   17e74:	b	18cf0 <main@@Base+0x2a94>
   17e78:	mvn	r2, #-1711276032	; 0x9a000000
   17e7c:	subs	r2, r2, sl
   17e80:	sbcs	r2, lr, r0
   17e84:	bcc	18338 <main@@Base+0x20dc>
   17e88:	movw	r0, #28788	; 0x7074
   17e8c:	movt	r0, #25965	; 0x656d
   17e90:	eor	r0, sl, r0
   17e94:	orrs	r0, r0, r1
   17e98:	bne	1a56c <main@@Base+0x4310>
   17e9c:	add	r7, r9, #8
   17ea0:	ldr	r8, [sp, #40]	; 0x28
   17ea4:	ldr	sl, [sp, #36]	; 0x24
   17ea8:	mov	r1, #8
   17eac:	sub	r0, r5, r7
   17eb0:	cmp	r0, #8
   17eb4:	movcc	r1, r0
   17eb8:	sub	r1, r1, #1
   17ebc:	cmp	r1, #7
   17ec0:	bhi	1f6e4 <main@@Base+0x9488>
   17ec4:	ldrb	r1, [r7]
   17ec8:	cmp	r1, #121	; 0x79
   17ecc:	bne	1f6e4 <main@@Base+0x9488>
   17ed0:	cmp	r0, #2
   17ed4:	blt	1f6e4 <main@@Base+0x9488>
   17ed8:	ldr	r2, [sp, #32]
   17edc:	mov	r1, r9
   17ee0:	ldrb	r0, [r1, #9]!
   17ee4:	ldr	r2, [r2]
   17ee8:	cmp	r2, #0
   17eec:	beq	19bc0 <main@@Base+0x3964>
   17ef0:	cmp	r0, #33	; 0x21
   17ef4:	bcc	17f00 <main@@Base+0x1ca4>
   17ef8:	cmp	r0, #58	; 0x3a
   17efc:	bne	1f6e4 <main@@Base+0x9488>
   17f00:	ldr	r0, [sp, #32]
   17f04:	mov	r2, #0
   17f08:	str	r2, [r0]
   17f0c:	b	19bcc <main@@Base+0x3970>
   17f10:	teq	r0, lr
   17f14:	bne	19010 <main@@Base+0x2db4>
   17f18:	cmp	r8, #5
   17f1c:	mov	r1, r9
   17f20:	blt	1a040 <main@@Base+0x3de4>
   17f24:	ldr	r1, [sp, #32]
   17f28:	mov	r2, r9
   17f2c:	ldrb	r0, [r2, #4]!
   17f30:	ldr	r1, [r1]
   17f34:	cmp	r1, #0
   17f38:	beq	18ad4 <main@@Base+0x2878>
   17f3c:	cmp	r0, #33	; 0x21
   17f40:	bcc	17f50 <main@@Base+0x1cf4>
   17f44:	cmp	r0, #58	; 0x3a
   17f48:	mov	r1, r9
   17f4c:	bne	1a040 <main@@Base+0x3de4>
   17f50:	ldr	r0, [sp, #32]
   17f54:	mov	r1, #0
   17f58:	str	r1, [r0]
   17f5c:	b	18ae4 <main@@Base+0x2888>
   17f60:	movw	r7, #24431	; 0x5f6f
   17f64:	movw	r3, #25460	; 0x6374
   17f68:	ldr	r8, [sp, #40]	; 0x28
   17f6c:	movt	r7, #28530	; 0x6f72
   17f70:	movt	r3, #30309	; 0x7665
   17f74:	subs	r2, sl, r7
   17f78:	sbcs	r2, r0, r3
   17f7c:	bcs	183b0 <main@@Base+0x2154>
   17f80:	movw	r0, #29556	; 0x7374
   17f84:	movt	r0, #28261	; 0x6e65
   17f88:	eor	r0, sl, r0
   17f8c:	orrs	r0, r0, r1
   17f90:	bne	1a570 <main@@Base+0x4314>
   17f94:	add	r1, r9, #8
   17f98:	mov	r2, #8
   17f9c:	ldr	sl, [sp, #36]	; 0x24
   17fa0:	sub	r0, r5, r1
   17fa4:	cmp	r0, #8
   17fa8:	movcs	r0, r2
   17fac:	sub	r2, r0, #1
   17fb0:	cmp	r2, #7
   17fb4:	bhi	1877c <main@@Base+0x2520>
   17fb8:	add	r5, pc, #36	; 0x24
   17fbc:	mov	r8, #0
   17fc0:	mov	ip, #0
   17fc4:	mov	lr, #0
   17fc8:	mov	r7, #0
   17fcc:	mov	r3, #0
   17fd0:	mov	r6, #0
   17fd4:	mov	r4, #0
   17fd8:	ldr	r0, [r5, r2, lsl #2]
   17fdc:	mov	r2, #0
   17fe0:	add	pc, r5, r0
   17fe4:	andeq	r0, r0, r4, rrx
   17fe8:	andeq	r0, r0, ip, asr r0
   17fec:	andeq	r0, r0, r4, asr r0
   17ff0:	andeq	r0, r0, ip, asr #32
   17ff4:	andeq	r0, r0, r0, asr #32
   17ff8:	andeq	r0, r0, r4, lsr r0
   17ffc:	andeq	r0, r0, r4, lsr #32
   18000:	andeq	r0, r0, r0, lsr #32
   18004:	ldrb	ip, [r9, #15]
   18008:	ldrb	r0, [r9, #14]
   1800c:	mov	lr, r8
   18010:	orr	r0, ip, r0, lsl #8
   18014:	mov	r8, r0
   18018:	ldrb	r0, [r9, #13]
   1801c:	mov	r7, lr
   18020:	orr	r8, r8, r0, lsl #16
   18024:	ldrb	r0, [r9, #12]
   18028:	mov	r3, r7
   1802c:	orr	r8, r8, r0, lsl #24
   18030:	ldrb	r0, [r9, #11]
   18034:	orr	r6, r0, r3
   18038:	ldrb	r0, [r9, #10]
   1803c:	orr	r4, r6, r0, lsl #8
   18040:	ldrb	r0, [r9, #9]
   18044:	orr	r2, r4, r0, lsl #16
   18048:	ldrb	r3, [r1]
   1804c:	movw	r0, #25205	; 0x6275
   18050:	ldr	r5, [sp, #44]	; 0x2c
   18054:	movt	r0, #24948	; 0x6174
   18058:	eor	r0, r8, r0
   1805c:	ldr	r8, [sp, #40]	; 0x28
   18060:	orr	r2, r2, r3, lsl #24
   18064:	movw	r3, #26220	; 0x666c
   18068:	movt	r3, #25956	; 0x6564
   1806c:	eor	r2, r2, r3
   18070:	orrs	r0, r0, r2
   18074:	bne	1877c <main@@Base+0x2520>
   18078:	add	r7, r9, #16
   1807c:	mov	r1, #8
   18080:	sub	r0, r5, r7
   18084:	cmp	r0, #8
   18088:	movcc	r1, r0
   1808c:	sub	r2, r1, #1
   18090:	cmp	r2, #7
   18094:	bhi	1f6e4 <main@@Base+0x9488>
   18098:	add	r3, pc, #8
   1809c:	mov	r1, #0
   180a0:	ldr	r2, [r3, r2, lsl #2]
   180a4:	add	pc, r3, r2
   180a8:	andeq	r0, r0, r4, lsr r0
   180ac:	andeq	r0, r0, ip, lsr #32
   180b0:	andeq	r0, r0, r4, lsr #32
   180b4:	andeq	r0, r0, r0, lsr #32
   180b8:	andeq	r0, r0, r0, lsr #32
   180bc:	andeq	r0, r0, r0, lsr #32
   180c0:	andeq	r0, r0, r0, lsr #32
   180c4:	andeq	r0, r0, r0, lsr #32
   180c8:	ldrb	r1, [r9, #19]
   180cc:	ldrb	r2, [r9, #18]
   180d0:	orr	r1, r1, r2, lsl #8
   180d4:	ldrb	r2, [r9, #17]
   180d8:	orr	r1, r1, r2, lsl #16
   180dc:	ldrb	r2, [r7]
   180e0:	orr	r1, r1, r2, lsl #24
   180e4:	movw	r2, #25970	; 0x6572
   180e8:	movt	r2, #26214	; 0x6666
   180ec:	teq	r1, r2
   180f0:	bne	1f6e4 <main@@Base+0x9488>
   180f4:	cmp	r0, #5
   180f8:	blt	1f6e4 <main@@Base+0x9488>
   180fc:	ldr	r2, [sp, #32]
   18100:	mov	r1, r9
   18104:	ldrb	r0, [r1, #20]!
   18108:	ldr	r2, [r2]
   1810c:	cmp	r2, #0
   18110:	beq	1a0a0 <main@@Base+0x3e44>
   18114:	cmp	r0, #33	; 0x21
   18118:	bcc	18124 <main@@Base+0x1ec8>
   1811c:	cmp	r0, #58	; 0x3a
   18120:	bne	1f6e4 <main@@Base+0x9488>
   18124:	ldr	r0, [sp, #32]
   18128:	mov	r2, #0
   1812c:	str	r2, [r0]
   18130:	b	1a0ac <main@@Base+0x3e50>
   18134:	movw	r0, #27749	; 0x6c65
   18138:	movw	r3, #26228	; 0x6674
   1813c:	ldr	r5, [sp, #44]	; 0x2c
   18140:	ldr	r8, [sp, #40]	; 0x28
   18144:	movt	r0, #24930	; 0x6162
   18148:	movt	r3, #31087	; 0x796f
   1814c:	eor	r0, r1, r0
   18150:	eor	r3, r2, r3
   18154:	orrs	r0, r0, r3
   18158:	beq	186fc <main@@Base+0x24a0>
   1815c:	movw	r0, #26990	; 0x696e
   18160:	movt	r0, #29810	; 0x7472
   18164:	eor	r0, r1, r0
   18168:	eor	r1, r2, r7
   1816c:	orrs	r0, r0, r1
   18170:	bne	196a0 <main@@Base+0x3444>
   18174:	add	r7, r9, #16
   18178:	mov	r2, #8
   1817c:	sub	r0, r5, r7
   18180:	cmp	r0, #8
   18184:	movcc	r2, r0
   18188:	sub	r1, r2, #2
   1818c:	cmp	r1, #7
   18190:	bcs	18b60 <main@@Base+0x2904>
   18194:	ldrb	r1, [r9, #17]
   18198:	ldr	sl, [sp, #36]	; 0x24
   1819c:	lsl	r2, r1, #16
   181a0:	mov	r1, #0
   181a4:	ldrb	r3, [r7]
   181a8:	orr	r2, r2, r3, lsl #24
   181ac:	movw	r3, #0
   181b0:	movt	r3, #26418	; 0x6732
   181b4:	eor	r3, r2, r3
   181b8:	orrs	r1, r1, r3
   181bc:	bne	18938 <main@@Base+0x26dc>
   181c0:	cmp	r0, #3
   181c4:	blt	1f6e4 <main@@Base+0x9488>
   181c8:	ldr	r2, [sp, #32]
   181cc:	mov	r1, r9
   181d0:	ldrb	r0, [r1, #18]!
   181d4:	ldr	r2, [r2]
   181d8:	cmp	r2, #0
   181dc:	beq	190e8 <main@@Base+0x2e8c>
   181e0:	cmp	r0, #33	; 0x21
   181e4:	bcc	181f0 <main@@Base+0x1f94>
   181e8:	cmp	r0, #58	; 0x3a
   181ec:	bne	1f6e4 <main@@Base+0x9488>
   181f0:	ldr	r0, [sp, #32]
   181f4:	mov	r2, #0
   181f8:	str	r2, [r0]
   181fc:	b	190f4 <main@@Base+0x2e98>
   18200:	cmp	r8, #6
   18204:	ldr	r8, [sp, #40]	; 0x28
   18208:	ldr	sl, [sp, #36]	; 0x24
   1820c:	mov	r7, r9
   18210:	blt	19a34 <main@@Base+0x37d8>
   18214:	ldr	r2, [sp, #32]
   18218:	mov	r1, r9
   1821c:	ldrb	r0, [r1, #5]!
   18220:	ldr	r2, [r2]
   18224:	cmp	r2, #0
   18228:	beq	189bc <main@@Base+0x2760>
   1822c:	cmp	r0, #33	; 0x21
   18230:	bcc	18240 <main@@Base+0x1fe4>
   18234:	cmp	r0, #58	; 0x3a
   18238:	mov	r7, r9
   1823c:	bne	19a34 <main@@Base+0x37d8>
   18240:	ldr	r0, [sp, #32]
   18244:	mov	r2, #0
   18248:	str	r2, [r0]
   1824c:	b	189cc <main@@Base+0x2770>
   18250:	movw	r1, #29440	; 0x7300
   18254:	ldr	sl, [sp, #36]	; 0x24
   18258:	bic	r0, r0, #255	; 0xff
   1825c:	movt	r1, #28783	; 0x706f
   18260:	teq	r0, r1
   18264:	bne	187e4 <main@@Base+0x2588>
   18268:	cmp	r8, #4
   1826c:	ldr	r8, [sp, #40]	; 0x28
   18270:	mov	r4, r9
   18274:	blt	1ad38 <main@@Base+0x4adc>
   18278:	ldr	r2, [sp, #32]
   1827c:	mov	r1, r9
   18280:	ldrb	r0, [r1, #3]!
   18284:	ldr	r2, [r2]
   18288:	cmp	r2, #0
   1828c:	beq	18d18 <main@@Base+0x2abc>
   18290:	cmp	r0, #33	; 0x21
   18294:	bcc	182a4 <main@@Base+0x2048>
   18298:	cmp	r0, #58	; 0x3a
   1829c:	mov	r4, r9
   182a0:	bne	1ad38 <main@@Base+0x4adc>
   182a4:	ldr	r0, [sp, #32]
   182a8:	mov	r2, #0
   182ac:	str	r2, [r0]
   182b0:	b	18d28 <main@@Base+0x2acc>
   182b4:	eor	r1, sl, r3
   182b8:	eor	r2, r0, r2
   182bc:	orrs	r1, r1, r2
   182c0:	bne	18784 <main@@Base+0x2528>
   182c4:	add	r7, r9, #8
   182c8:	ldr	sl, [sp, #36]	; 0x24
   182cc:	mov	r1, #8
   182d0:	sub	r0, r5, r7
   182d4:	cmp	r0, #8
   182d8:	movcc	r1, r0
   182dc:	sub	r1, r1, #1
   182e0:	cmp	r1, #7
   182e4:	bhi	18930 <main@@Base+0x26d4>
   182e8:	ldrb	r1, [r7]
   182ec:	cmp	r1, #121	; 0x79
   182f0:	bne	18930 <main@@Base+0x26d4>
   182f4:	ldr	r8, [sp, #40]	; 0x28
   182f8:	cmp	r0, #2
   182fc:	blt	1f6e4 <main@@Base+0x9488>
   18300:	ldr	r2, [sp, #32]
   18304:	mov	r1, r9
   18308:	ldrb	r0, [r1, #9]!
   1830c:	ldr	r2, [r2]
   18310:	cmp	r2, #0
   18314:	beq	19bf4 <main@@Base+0x3998>
   18318:	cmp	r0, #33	; 0x21
   1831c:	bcc	18328 <main@@Base+0x20cc>
   18320:	cmp	r0, #58	; 0x3a
   18324:	bne	1f6e4 <main@@Base+0x9488>
   18328:	ldr	r0, [sp, #32]
   1832c:	mov	r2, #0
   18330:	str	r2, [r0]
   18334:	b	19c00 <main@@Base+0x39a4>
   18338:	movw	r3, #0
   1833c:	mov	r2, sl
   18340:	movt	r3, #26163	; 0x6633
   18344:	bfc	r2, #0, #16
   18348:	subs	r3, r3, #65536	; 0x10000
   1834c:	eor	r2, r2, r3
   18350:	sbc	r3, lr, #0
   18354:	eor	r0, r0, r3
   18358:	orrs	r0, r2, r0
   1835c:	bne	187f4 <main@@Base+0x2598>
   18360:	cmp	r8, #7
   18364:	ldr	r8, [sp, #40]	; 0x28
   18368:	ldr	sl, [sp, #36]	; 0x24
   1836c:	mov	r7, r9
   18370:	blt	1bbfc <main@@Base+0x59a0>
   18374:	ldr	r2, [sp, #32]
   18378:	mov	r1, r9
   1837c:	ldrb	r0, [r1, #6]!
   18380:	ldr	r2, [r2]
   18384:	cmp	r2, #0
   18388:	beq	18d50 <main@@Base+0x2af4>
   1838c:	cmp	r0, #33	; 0x21
   18390:	bcc	183a0 <main@@Base+0x2144>
   18394:	cmp	r0, #58	; 0x3a
   18398:	mov	r7, r9
   1839c:	bne	1bbfc <main@@Base+0x59a0>
   183a0:	ldr	r0, [sp, #32]
   183a4:	mov	r2, #0
   183a8:	str	r2, [r0]
   183ac:	b	18d60 <main@@Base+0x2b04>
   183b0:	eor	r1, sl, r7
   183b4:	eor	r0, r0, r3
   183b8:	orrs	r0, r1, r0
   183bc:	bne	1a570 <main@@Base+0x4314>
   183c0:	add	sl, r9, #8
   183c4:	mov	r1, #8
   183c8:	sub	lr, r5, sl
   183cc:	cmp	lr, #8
   183d0:	movcc	r1, lr
   183d4:	sub	r2, r1, #1
   183d8:	cmp	r2, #7
   183dc:	bhi	196a0 <main@@Base+0x3444>
   183e0:	add	r0, pc, #36	; 0x24
   183e4:	mov	r1, #0
   183e8:	mov	ip, #0
   183ec:	mov	r8, #0
   183f0:	mov	r6, #0
   183f4:	mov	r3, #0
   183f8:	mov	r4, #0
   183fc:	mov	r7, #0
   18400:	ldr	r5, [r0, r2, lsl #2]
   18404:	mov	r2, #0
   18408:	add	pc, r0, r5
   1840c:	andeq	r0, r0, r4, rrx
   18410:	andeq	r0, r0, ip, asr r0
   18414:	andeq	r0, r0, r4, asr r0
   18418:	andeq	r0, r0, ip, asr #32
   1841c:	andeq	r0, r0, r0, asr #32
   18420:	andeq	r0, r0, r4, lsr r0
   18424:	andeq	r0, r0, r4, lsr #32
   18428:	andeq	r0, r0, r0, lsr #32
   1842c:	ldrb	ip, [r9, #15]
   18430:	ldrb	r0, [r9, #14]
   18434:	mov	r8, r1
   18438:	orr	r0, ip, r0, lsl #8
   1843c:	mov	r1, r0
   18440:	ldrb	r0, [r9, #13]
   18444:	mov	r6, r8
   18448:	orr	r1, r1, r0, lsl #16
   1844c:	ldrb	r0, [r9, #12]
   18450:	mov	r3, r6
   18454:	orr	r1, r1, r0, lsl #24
   18458:	ldrb	r0, [r9, #11]
   1845c:	orr	r4, r0, r3
   18460:	ldrb	r0, [r9, #10]
   18464:	orr	r7, r4, r0, lsl #8
   18468:	ldrb	r0, [r9, #9]
   1846c:	orr	r2, r7, r0, lsl #16
   18470:	ldrb	r3, [sl]
   18474:	movw	r0, #27749	; 0x6c65
   18478:	movt	r0, #30050	; 0x7562
   1847c:	eor	r0, r1, r0
   18480:	orr	r2, r2, r3, lsl #24
   18484:	movw	r3, #25711	; 0x646f
   18488:	movt	r3, #26207	; 0x665f
   1848c:	eor	r3, r2, r3
   18490:	orrs	r0, r0, r3
   18494:	bne	189f4 <main@@Base+0x2798>
   18498:	ldr	r5, [sp, #44]	; 0x2c
   1849c:	add	r7, r9, #16
   184a0:	ldr	r8, [sp, #40]	; 0x28
   184a4:	mov	r1, #8
   184a8:	sub	r0, r5, r7
   184ac:	cmp	r0, #8
   184b0:	movcc	r1, r0
   184b4:	sub	r1, r1, #1
   184b8:	cmp	r1, #7
   184bc:	bhi	1876c <main@@Base+0x2510>
   184c0:	ldrb	r1, [r7]
   184c4:	cmp	r1, #115	; 0x73
   184c8:	bne	1876c <main@@Base+0x2510>
   184cc:	ldr	sl, [sp, #36]	; 0x24
   184d0:	cmp	r0, #2
   184d4:	blt	1f6e4 <main@@Base+0x9488>
   184d8:	ldr	r2, [sp, #32]
   184dc:	mov	r1, r9
   184e0:	ldrb	r0, [r1, #17]!
   184e4:	ldr	r2, [r2]
   184e8:	cmp	r2, #0
   184ec:	beq	1ab6c <main@@Base+0x4910>
   184f0:	cmp	r0, #33	; 0x21
   184f4:	bcc	18500 <main@@Base+0x22a4>
   184f8:	cmp	r0, #58	; 0x3a
   184fc:	bne	1f6e4 <main@@Base+0x9488>
   18500:	ldr	r0, [sp, #32]
   18504:	mov	r2, #0
   18508:	str	r2, [r0]
   1850c:	b	1ab78 <main@@Base+0x491c>
   18510:	movw	r0, #30256	; 0x7630
   18514:	ldr	r5, [sp, #44]	; 0x2c
   18518:	ldr	r8, [sp, #40]	; 0x28
   1851c:	movt	r0, #26222	; 0x666e
   18520:	subs	r0, r0, r1
   18524:	movw	r0, #12895	; 0x325f
   18528:	movt	r0, #30003	; 0x7533
   1852c:	sbcs	r0, r0, r2
   18530:	movw	r0, #30257	; 0x7631
   18534:	movt	r0, #26222	; 0x666e
   18538:	eor	r0, r1, r0
   1853c:	bcc	18854 <main@@Base+0x25f8>
   18540:	movw	r1, #13407	; 0x345f
   18544:	movt	r1, #29494	; 0x7336
   18548:	eor	r1, r2, r1
   1854c:	orrs	r0, r0, r1
   18550:	bne	196a0 <main@@Base+0x3444>
   18554:	cmp	ip, #9
   18558:	blt	1a3d8 <main@@Base+0x417c>
   1855c:	ldr	r2, [sp, #32]
   18560:	mov	r1, r9
   18564:	ldrb	r0, [r1, #16]!
   18568:	ldr	r2, [r2]
   1856c:	cmp	r2, #0
   18570:	beq	1923c <main@@Base+0x2fe0>
   18574:	cmp	r0, #33	; 0x21
   18578:	bcc	18584 <main@@Base+0x2328>
   1857c:	cmp	r0, #58	; 0x3a
   18580:	bne	1a3d8 <main@@Base+0x417c>
   18584:	ldr	r0, [sp, #32]
   18588:	mov	r2, #0
   1858c:	str	r2, [r0]
   18590:	b	19248 <main@@Base+0x2fec>
   18594:	cmp	r8, #9
   18598:	ldr	r8, [sp, #40]	; 0x28
   1859c:	ldr	sl, [sp, #36]	; 0x24
   185a0:	mov	r7, r9
   185a4:	blt	1a878 <main@@Base+0x461c>
   185a8:	ldr	r2, [sp, #32]
   185ac:	mov	r1, r9
   185b0:	ldrb	r0, [r1, #8]!
   185b4:	ldr	r2, [r2]
   185b8:	cmp	r2, #0
   185bc:	beq	18b78 <main@@Base+0x291c>
   185c0:	cmp	r0, #33	; 0x21
   185c4:	bcc	185d4 <main@@Base+0x2378>
   185c8:	cmp	r0, #58	; 0x3a
   185cc:	mov	r7, r9
   185d0:	bne	1a878 <main@@Base+0x461c>
   185d4:	ldr	r0, [sp, #32]
   185d8:	mov	r2, #0
   185dc:	str	r2, [r0]
   185e0:	b	18b88 <main@@Base+0x292c>
   185e4:	add	sl, r9, #16
   185e8:	ldr	r8, [sp, #40]	; 0x28
   185ec:	mov	r1, #8
   185f0:	sub	ip, r5, sl
   185f4:	cmp	ip, #8
   185f8:	movcc	r1, ip
   185fc:	sub	r2, r1, #1
   18600:	cmp	r2, #7
   18604:	bhi	196a0 <main@@Base+0x3444>
   18608:	add	r0, pc, #32
   1860c:	mov	r1, #0
   18610:	mov	lr, #0
   18614:	mov	r6, #0
   18618:	mov	r3, #0
   1861c:	mov	r7, #0
   18620:	mov	r5, #0
   18624:	mov	r4, #0
   18628:	ldr	r2, [r0, r2, lsl #2]
   1862c:	add	pc, r0, r2
   18630:	andeq	r0, r0, ip, asr r0
   18634:	andeq	r0, r0, r4, asr r0
   18638:	andeq	r0, r0, ip, asr #32
   1863c:	andeq	r0, r0, r4, asr #32
   18640:	andeq	r0, r0, r8, lsr r0
   18644:	andeq	r0, r0, r8, lsr #32
   18648:	andeq	r0, r0, r0, lsr #32
   1864c:	andeq	r0, r0, r0, lsr #32
   18650:	ldrb	r0, [r9, #22]
   18654:	lsl	lr, r0, #8
   18658:	ldrb	r0, [r9, #21]
   1865c:	mov	r6, r1
   18660:	orr	r0, lr, r0, lsl #16
   18664:	mov	r1, r0
   18668:	ldrb	r0, [r9, #20]
   1866c:	mov	r3, r6
   18670:	orr	r1, r1, r0, lsl #24
   18674:	ldrb	r0, [r9, #19]
   18678:	orr	r7, r0, r3
   1867c:	ldrb	r0, [r9, #18]
   18680:	orr	r5, r7, r0, lsl #8
   18684:	ldrb	r0, [r9, #17]
   18688:	orr	r4, r5, r0, lsl #16
   1868c:	bic	r0, r1, #255	; 0xff
   18690:	movw	r1, #29696	; 0x7400
   18694:	movw	r2, #29810	; 0x7472
   18698:	ldr	r5, [sp, #44]	; 0x2c
   1869c:	movt	r1, #30051	; 0x7563
   186a0:	movt	r2, #25715	; 0x6473
   186a4:	eor	r0, r0, r1
   186a8:	ldrb	r1, [sl]
   186ac:	orr	r1, r4, r1, lsl #24
   186b0:	eor	r1, r1, r2
   186b4:	orrs	r0, r0, r1
   186b8:	bne	196a0 <main@@Base+0x3444>
   186bc:	cmp	ip, #8
   186c0:	blt	196a0 <main@@Base+0x3444>
   186c4:	ldr	r2, [sp, #32]
   186c8:	mov	r1, r9
   186cc:	ldrb	r0, [r1, #23]!
   186d0:	ldr	r2, [r2]
   186d4:	cmp	r2, #0
   186d8:	beq	1911c <main@@Base+0x2ec0>
   186dc:	cmp	r0, #33	; 0x21
   186e0:	bcc	186ec <main@@Base+0x2490>
   186e4:	cmp	r0, #58	; 0x3a
   186e8:	bne	196a0 <main@@Base+0x3444>
   186ec:	ldr	r0, [sp, #32]
   186f0:	mov	r2, #0
   186f4:	str	r2, [r0]
   186f8:	b	19128 <main@@Base+0x2ecc>
   186fc:	add	r7, r9, #16
   18700:	mov	r1, #8
   18704:	sub	r0, r5, r7
   18708:	cmp	r0, #8
   1870c:	movcc	r1, r0
   18710:	sub	r1, r1, #1
   18714:	cmp	r1, #7
   18718:	bhi	1876c <main@@Base+0x2510>
   1871c:	ldrb	r1, [r7]
   18720:	cmp	r1, #115	; 0x73
   18724:	bne	1876c <main@@Base+0x2510>
   18728:	ldr	sl, [sp, #36]	; 0x24
   1872c:	cmp	r0, #2
   18730:	blt	1f6e4 <main@@Base+0x9488>
   18734:	ldr	r2, [sp, #32]
   18738:	mov	r1, r9
   1873c:	ldrb	r0, [r1, #17]!
   18740:	ldr	r2, [r2]
   18744:	cmp	r2, #0
   18748:	beq	19838 <main@@Base+0x35dc>
   1874c:	cmp	r0, #33	; 0x21
   18750:	bcc	1875c <main@@Base+0x2500>
   18754:	cmp	r0, #58	; 0x3a
   18758:	bne	1f6e4 <main@@Base+0x9488>
   1875c:	ldr	r0, [sp, #32]
   18760:	mov	r2, #0
   18764:	str	r2, [r0]
   18768:	b	19844 <main@@Base+0x35e8>
   1876c:	mov	r0, r8
   18770:	mov	r1, r7
   18774:	b	1a578 <main@@Base+0x431c>
   18778:	ldr	r8, [sp, #40]	; 0x28
   1877c:	mov	r0, r8
   18780:	b	2015c <main@@Base+0x9f00>
   18784:	movw	r1, #28257	; 0x6e61
   18788:	ldr	sl, [sp, #36]	; 0x24
   1878c:	movt	r1, #28001	; 0x6d61
   18790:	teq	r0, r1
   18794:	bne	187e4 <main@@Base+0x2588>
   18798:	cmp	r8, #5
   1879c:	ldr	r8, [sp, #40]	; 0x28
   187a0:	mov	r7, r9
   187a4:	blt	1c980 <main@@Base+0x6724>
   187a8:	ldr	r2, [sp, #32]
   187ac:	mov	r1, r9
   187b0:	ldrb	r0, [r1, #4]!
   187b4:	ldr	r2, [r2]
   187b8:	cmp	r2, #0
   187bc:	beq	19150 <main@@Base+0x2ef4>
   187c0:	cmp	r0, #33	; 0x21
   187c4:	bcc	187d4 <main@@Base+0x2578>
   187c8:	cmp	r0, #58	; 0x3a
   187cc:	mov	r7, r9
   187d0:	bne	1c980 <main@@Base+0x6724>
   187d4:	ldr	r0, [sp, #32]
   187d8:	mov	r2, #0
   187dc:	str	r2, [r0]
   187e0:	b	19160 <main@@Base+0x2f04>
   187e4:	ldr	r8, [sp, #40]	; 0x28
   187e8:	mov	r0, r8
   187ec:	mov	r1, r9
   187f0:	b	2015c <main@@Base+0x9f00>
   187f4:	and	r0, sl, #-16777216	; 0xff000000
   187f8:	eor	r0, r0, #1711276032	; 0x66000000
   187fc:	orrs	r0, r0, r1
   18800:	bne	1a56c <main@@Base+0x4310>
   18804:	cmp	r8, #6
   18808:	ldr	r8, [sp, #40]	; 0x28
   1880c:	ldr	sl, [sp, #36]	; 0x24
   18810:	mov	r7, r9
   18814:	blt	1cb00 <main@@Base+0x68a4>
   18818:	ldr	r2, [sp, #32]
   1881c:	mov	r1, r9
   18820:	ldrb	r0, [r1, #5]!
   18824:	ldr	r2, [r2]
   18828:	cmp	r2, #0
   1882c:	beq	19188 <main@@Base+0x2f2c>
   18830:	cmp	r0, #33	; 0x21
   18834:	bcc	18844 <main@@Base+0x25e8>
   18838:	cmp	r0, #58	; 0x3a
   1883c:	mov	r7, r9
   18840:	bne	1cb00 <main@@Base+0x68a4>
   18844:	ldr	r0, [sp, #32]
   18848:	mov	r2, #0
   1884c:	str	r2, [r0]
   18850:	b	19198 <main@@Base+0x2f3c>
   18854:	movw	r1, #13407	; 0x345f
   18858:	movt	r1, #30006	; 0x7536
   1885c:	eor	r1, r2, r1
   18860:	orrs	r1, r0, r1
   18864:	beq	18b20 <main@@Base+0x28c4>
   18868:	movw	r1, #12895	; 0x325f
   1886c:	movt	r1, #30003	; 0x7533
   18870:	eor	r1, r2, r1
   18874:	orrs	r0, r0, r1
   18878:	bne	196a0 <main@@Base+0x3444>
   1887c:	cmp	ip, #9
   18880:	blt	1bd78 <main@@Base+0x5b1c>
   18884:	ldr	r2, [sp, #32]
   18888:	mov	r1, r9
   1888c:	ldrb	r0, [r1, #16]!
   18890:	ldr	r2, [r2]
   18894:	cmp	r2, #0
   18898:	beq	1986c <main@@Base+0x3610>
   1889c:	cmp	r0, #33	; 0x21
   188a0:	bcc	188ac <main@@Base+0x2650>
   188a4:	cmp	r0, #58	; 0x3a
   188a8:	bne	1bd78 <main@@Base+0x5b1c>
   188ac:	ldr	r0, [sp, #32]
   188b0:	mov	r2, #0
   188b4:	str	r2, [r0]
   188b8:	b	19878 <main@@Base+0x361c>
   188bc:	cmp	r0, #34	; 0x22
   188c0:	mov	r7, r9
   188c4:	bne	1930c <main@@Base+0x30b0>
   188c8:	add	r1, r9, #7
   188cc:	sub	r0, r5, r1
   188d0:	cmp	r0, #2
   188d4:	blt	18bc4 <main@@Base+0x2968>
   188d8:	ldrb	r0, [r1]
   188dc:	cmp	r0, #32
   188e0:	bls	18bb0 <main@@Base+0x2954>
   188e4:	mov	r7, r1
   188e8:	cmp	r7, r5
   188ec:	bne	18bdc <main@@Base+0x2980>
   188f0:	b	18c14 <main@@Base+0x29b8>
   188f4:	cmp	r0, #34	; 0x22
   188f8:	mov	r7, r9
   188fc:	bne	193cc <main@@Base+0x3170>
   18900:	add	r1, r9, #6
   18904:	ldr	r6, [sp, #40]	; 0x28
   18908:	sub	r0, r5, r1
   1890c:	cmp	r0, #2
   18910:	blt	18c40 <main@@Base+0x29e4>
   18914:	ldrb	r0, [r1]
   18918:	cmp	r0, #32
   1891c:	bls	18c2c <main@@Base+0x29d0>
   18920:	mov	r7, r1
   18924:	cmp	r7, r5
   18928:	bne	18c58 <main@@Base+0x29fc>
   1892c:	b	18c90 <main@@Base+0x2a34>
   18930:	ldr	r8, [sp, #40]	; 0x28
   18934:	b	1f6e4 <main@@Base+0x9488>
   18938:	and	r1, r2, #-16777216	; 0xff000000
   1893c:	teq	r1, #1728053248	; 0x67000000
   18940:	bne	1f6e4 <main@@Base+0x9488>
   18944:	cmp	r0, #2
   18948:	blt	1f6e4 <main@@Base+0x9488>
   1894c:	ldr	r2, [sp, #32]
   18950:	mov	r1, r9
   18954:	ldrb	r0, [r1, #17]!
   18958:	ldr	r2, [r2]
   1895c:	cmp	r2, #0
   18960:	beq	19b8c <main@@Base+0x3930>
   18964:	cmp	r0, #33	; 0x21
   18968:	bcc	18974 <main@@Base+0x2718>
   1896c:	cmp	r0, #58	; 0x3a
   18970:	bne	1f6e4 <main@@Base+0x9488>
   18974:	ldr	r0, [sp, #32]
   18978:	mov	r2, #0
   1897c:	str	r2, [r0]
   18980:	b	19b98 <main@@Base+0x393c>
   18984:	cmp	r0, #34	; 0x22
   18988:	mov	r1, r9
   1898c:	bne	199e0 <main@@Base+0x3784>
   18990:	add	r2, r9, #6
   18994:	sub	r0, r5, r2
   18998:	cmp	r0, #2
   1899c:	blt	18dd0 <main@@Base+0x2b74>
   189a0:	ldrb	r0, [r2]
   189a4:	cmp	r0, #32
   189a8:	bls	18dbc <main@@Base+0x2b60>
   189ac:	mov	r1, r2
   189b0:	cmp	r1, r5
   189b4:	bne	18dec <main@@Base+0x2b90>
   189b8:	b	18e24 <main@@Base+0x2bc8>
   189bc:	cmp	r0, #34	; 0x22
   189c0:	mov	r7, r9
   189c4:	bne	19a34 <main@@Base+0x37d8>
   189c8:	add	r1, r9, #6
   189cc:	sub	r0, r5, r1
   189d0:	cmp	r0, #2
   189d4:	blt	18e4c <main@@Base+0x2bf0>
   189d8:	ldrb	r0, [r1]
   189dc:	cmp	r0, #32
   189e0:	bls	18e38 <main@@Base+0x2bdc>
   189e4:	mov	r7, r1
   189e8:	cmp	r7, r5
   189ec:	bne	18e64 <main@@Base+0x2c08>
   189f0:	b	18e9c <main@@Base+0x2c40>
   189f4:	movw	r0, #24428	; 0x5f6c
   189f8:	lsr	r1, r1, #8
   189fc:	ldr	r5, [sp, #44]	; 0x2c
   18a00:	ldr	r8, [sp, #40]	; 0x28
   18a04:	movt	r0, #102	; 0x66
   18a08:	orr	r1, r1, r2, lsl #24
   18a0c:	eor	r0, r0, r2, lsr #8
   18a10:	movw	r2, #26483	; 0x6773
   18a14:	movt	r2, #28526	; 0x6f6e
   18a18:	eor	r1, r1, r2
   18a1c:	orrs	r0, r1, r0
   18a20:	bne	196a0 <main@@Base+0x3444>
   18a24:	cmp	lr, #8
   18a28:	blt	196a0 <main@@Base+0x3444>
   18a2c:	ldr	r2, [sp, #32]
   18a30:	mov	r1, r9
   18a34:	ldrb	r0, [r1, #15]!
   18a38:	ldr	r2, [r2]
   18a3c:	cmp	r2, #0
   18a40:	beq	19c28 <main@@Base+0x39cc>
   18a44:	cmp	r0, #33	; 0x21
   18a48:	bcc	18a54 <main@@Base+0x27f8>
   18a4c:	cmp	r0, #58	; 0x3a
   18a50:	bne	196a0 <main@@Base+0x3444>
   18a54:	ldr	r0, [sp, #32]
   18a58:	mov	r2, #0
   18a5c:	str	r2, [r0]
   18a60:	b	19c34 <main@@Base+0x39d8>
   18a64:	cmp	r0, #34	; 0x22
   18a68:	mov	r1, r9
   18a6c:	bne	19c80 <main@@Base+0x3a24>
   18a70:	add	r2, r9, #5
   18a74:	sub	r0, r5, r2
   18a78:	cmp	r0, #2
   18a7c:	blt	18ec8 <main@@Base+0x2c6c>
   18a80:	ldrb	r0, [r2]
   18a84:	cmp	r0, #32
   18a88:	bls	18eb4 <main@@Base+0x2c58>
   18a8c:	mov	r1, r2
   18a90:	cmp	r1, r5
   18a94:	bne	18ee4 <main@@Base+0x2c88>
   18a98:	b	18f1c <main@@Base+0x2cc0>
   18a9c:	cmp	r0, #34	; 0x22
   18aa0:	mov	r4, r9
   18aa4:	bne	19cd4 <main@@Base+0x3a78>
   18aa8:	add	r1, r9, #5
   18aac:	sub	r0, r5, r1
   18ab0:	cmp	r0, #2
   18ab4:	blt	18f44 <main@@Base+0x2ce8>
   18ab8:	ldrb	r0, [r1]
   18abc:	cmp	r0, #32
   18ac0:	bls	18f30 <main@@Base+0x2cd4>
   18ac4:	mov	r4, r1
   18ac8:	cmp	r4, r5
   18acc:	bne	18f5c <main@@Base+0x2d00>
   18ad0:	b	18f94 <main@@Base+0x2d38>
   18ad4:	cmp	r0, #34	; 0x22
   18ad8:	mov	r1, r9
   18adc:	bne	1a040 <main@@Base+0x3de4>
   18ae0:	add	r2, r9, #5
   18ae4:	sub	r0, r5, r2
   18ae8:	cmp	r0, #2
   18aec:	blt	18fc0 <main@@Base+0x2d64>
   18af0:	ldrb	r0, [r2]
   18af4:	cmp	r0, #32
   18af8:	bls	18fac <main@@Base+0x2d50>
   18afc:	mov	r1, r2
   18b00:	cmp	r1, r5
   18b04:	bne	18fdc <main@@Base+0x2d80>
   18b08:	b	19064 <main@@Base+0x2e08>
   18b0c:	cmp	r2, #1
   18b10:	mov	r1, #0
   18b14:	mov	r2, #0
   18b18:	beq	17a34 <main@@Base+0x17d8>
   18b1c:	b	1f6e4 <main@@Base+0x9488>
   18b20:	cmp	ip, #9
   18b24:	blt	1be68 <main@@Base+0x5c0c>
   18b28:	ldr	r2, [sp, #32]
   18b2c:	mov	r1, r9
   18b30:	ldrb	r0, [r1, #16]!
   18b34:	ldr	r2, [r2]
   18b38:	cmp	r2, #0
   18b3c:	beq	198a0 <main@@Base+0x3644>
   18b40:	cmp	r0, #33	; 0x21
   18b44:	bcc	18b50 <main@@Base+0x28f4>
   18b48:	cmp	r0, #58	; 0x3a
   18b4c:	bne	1be68 <main@@Base+0x5c0c>
   18b50:	ldr	r0, [sp, #32]
   18b54:	mov	r2, #0
   18b58:	str	r2, [r0]
   18b5c:	b	198ac <main@@Base+0x3650>
   18b60:	ldr	sl, [sp, #36]	; 0x24
   18b64:	cmp	r2, #1
   18b68:	mov	r1, #0
   18b6c:	mov	r2, #0
   18b70:	beq	181a4 <main@@Base+0x1f48>
   18b74:	b	1f6e4 <main@@Base+0x9488>
   18b78:	cmp	r0, #34	; 0x22
   18b7c:	mov	r7, r9
   18b80:	bne	1a878 <main@@Base+0x461c>
   18b84:	add	r1, r9, #9
   18b88:	sub	r0, r5, r1
   18b8c:	cmp	r0, #2
   18b90:	blt	19284 <main@@Base+0x3028>
   18b94:	ldrb	r0, [r1]
   18b98:	cmp	r0, #32
   18b9c:	bls	19270 <main@@Base+0x3014>
   18ba0:	mov	r7, r1
   18ba4:	cmp	r7, r5
   18ba8:	bne	1929c <main@@Base+0x3040>
   18bac:	b	192d4 <main@@Base+0x3078>
   18bb0:	bne	18bc4 <main@@Base+0x2968>
   18bb4:	mov	r7, r1
   18bb8:	ldrb	r0, [r7, #1]!
   18bbc:	cmp	r0, #32
   18bc0:	bhi	18bd4 <main@@Base+0x2978>
   18bc4:	mov	r0, r8
   18bc8:	mov	r2, r5
   18bcc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   18bd0:	mov	r7, r0
   18bd4:	cmp	r7, r5
   18bd8:	beq	18c14 <main@@Base+0x29b8>
   18bdc:	ldrb	r0, [r7]
   18be0:	cmp	r0, #58	; 0x3a
   18be4:	bne	18c14 <main@@Base+0x29b8>
   18be8:	add	r1, r7, #1
   18bec:	sub	r0, r5, r1
   18bf0:	cmp	r0, #2
   18bf4:	blt	192fc <main@@Base+0x30a0>
   18bf8:	ldrb	r0, [r1]
   18bfc:	cmp	r0, #32
   18c00:	bls	192ec <main@@Base+0x3090>
   18c04:	mov	r7, r1
   18c08:	cmp	r9, r7
   18c0c:	bne	19314 <main@@Base+0x30b8>
   18c10:	b	187e8 <main@@Base+0x258c>
   18c14:	mov	r0, r8
   18c18:	mov	r1, r7
   18c1c:	mov	r2, r5
   18c20:	mov	r3, #4
   18c24:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   18c28:	b	19308 <main@@Base+0x30ac>
   18c2c:	bne	18c40 <main@@Base+0x29e4>
   18c30:	mov	r7, r1
   18c34:	ldrb	r0, [r7, #1]!
   18c38:	cmp	r0, #32
   18c3c:	bhi	18c50 <main@@Base+0x29f4>
   18c40:	mov	r0, r6
   18c44:	mov	r2, r5
   18c48:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   18c4c:	mov	r7, r0
   18c50:	cmp	r7, r5
   18c54:	beq	18c90 <main@@Base+0x2a34>
   18c58:	ldrb	r0, [r7]
   18c5c:	cmp	r0, #58	; 0x3a
   18c60:	bne	18c90 <main@@Base+0x2a34>
   18c64:	add	r1, r7, #1
   18c68:	sub	r0, r5, r1
   18c6c:	cmp	r0, #2
   18c70:	blt	193bc <main@@Base+0x3160>
   18c74:	ldrb	r0, [r1]
   18c78:	cmp	r0, #32
   18c7c:	bls	193ac <main@@Base+0x3150>
   18c80:	mov	r7, r1
   18c84:	cmp	r9, r7
   18c88:	bne	193d4 <main@@Base+0x3178>
   18c8c:	b	1a4e4 <main@@Base+0x4288>
   18c90:	mov	r0, r6
   18c94:	mov	r1, r7
   18c98:	mov	r2, r5
   18c9c:	mov	r3, #4
   18ca0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   18ca4:	b	193c8 <main@@Base+0x316c>
   18ca8:	cmp	r0, #34	; 0x22
   18cac:	bne	1969c <main@@Base+0x3440>
   18cb0:	add	r1, r9, #17
   18cb4:	ldr	r6, [sp, #40]	; 0x28
   18cb8:	sub	r0, r5, r1
   18cbc:	cmp	r0, #2
   18cc0:	blt	19650 <main@@Base+0x33f4>
   18cc4:	ldrb	r0, [r1]
   18cc8:	cmp	r0, #32
   18ccc:	bls	1963c <main@@Base+0x33e0>
   18cd0:	mov	r4, r1
   18cd4:	cmp	r4, r5
   18cd8:	bne	19668 <main@@Base+0x340c>
   18cdc:	b	196ac <main@@Base+0x3450>
   18ce0:	cmp	r0, #34	; 0x22
   18ce4:	mov	r7, r9
   18ce8:	bne	1abc0 <main@@Base+0x4964>
   18cec:	add	r1, r9, #3
   18cf0:	sub	r0, r5, r1
   18cf4:	cmp	r0, #2
   18cf8:	blt	196d8 <main@@Base+0x347c>
   18cfc:	ldrb	r0, [r1]
   18d00:	cmp	r0, #32
   18d04:	bls	196c4 <main@@Base+0x3468>
   18d08:	mov	r7, r1
   18d0c:	cmp	r7, r5
   18d10:	bne	196f0 <main@@Base+0x3494>
   18d14:	b	19728 <main@@Base+0x34cc>
   18d18:	cmp	r0, #34	; 0x22
   18d1c:	mov	r4, r9
   18d20:	bne	1ad38 <main@@Base+0x4adc>
   18d24:	add	r1, r9, #4
   18d28:	sub	r0, r5, r1
   18d2c:	cmp	r0, #2
   18d30:	blt	19754 <main@@Base+0x34f8>
   18d34:	ldrb	r0, [r1]
   18d38:	cmp	r0, #32
   18d3c:	bls	19740 <main@@Base+0x34e4>
   18d40:	mov	r4, r1
   18d44:	cmp	r4, r5
   18d48:	bne	1976c <main@@Base+0x3510>
   18d4c:	b	197a4 <main@@Base+0x3548>
   18d50:	cmp	r0, #34	; 0x22
   18d54:	mov	r7, r9
   18d58:	bne	1bbfc <main@@Base+0x59a0>
   18d5c:	add	r1, r9, #7
   18d60:	sub	r0, r5, r1
   18d64:	cmp	r0, #2
   18d68:	blt	197d0 <main@@Base+0x3574>
   18d6c:	ldrb	r0, [r1]
   18d70:	cmp	r0, #32
   18d74:	bls	197bc <main@@Base+0x3560>
   18d78:	mov	r7, r1
   18d7c:	cmp	r7, r5
   18d80:	bne	197e8 <main@@Base+0x358c>
   18d84:	b	19820 <main@@Base+0x35c4>
   18d88:	cmp	r0, #34	; 0x22
   18d8c:	bne	19934 <main@@Base+0x36d8>
   18d90:	add	r1, r9, #17
   18d94:	sub	r0, r5, r1
   18d98:	cmp	r0, #2
   18d9c:	blt	198e8 <main@@Base+0x368c>
   18da0:	ldrb	r0, [r1]
   18da4:	cmp	r0, #32
   18da8:	bls	198d4 <main@@Base+0x3678>
   18dac:	mov	r7, r1
   18db0:	cmp	r7, r5
   18db4:	bne	19900 <main@@Base+0x36a4>
   18db8:	b	199a4 <main@@Base+0x3748>
   18dbc:	bne	18dd0 <main@@Base+0x2b74>
   18dc0:	mov	r1, r2
   18dc4:	ldrb	r0, [r1, #1]!
   18dc8:	cmp	r0, #32
   18dcc:	bhi	18de4 <main@@Base+0x2b88>
   18dd0:	mov	r1, r2
   18dd4:	mov	r0, r8
   18dd8:	mov	r2, r5
   18ddc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   18de0:	mov	r1, r0
   18de4:	cmp	r1, r5
   18de8:	beq	18e24 <main@@Base+0x2bc8>
   18dec:	ldrb	r0, [r1]
   18df0:	cmp	r0, #58	; 0x3a
   18df4:	bne	18e24 <main@@Base+0x2bc8>
   18df8:	add	r2, r1, #1
   18dfc:	sub	r0, r5, r2
   18e00:	cmp	r0, #2
   18e04:	blt	199cc <main@@Base+0x3770>
   18e08:	ldrb	r0, [r2]
   18e0c:	cmp	r0, #32
   18e10:	bls	199bc <main@@Base+0x3760>
   18e14:	mov	r1, r2
   18e18:	cmp	r9, r1
   18e1c:	bne	199e8 <main@@Base+0x378c>
   18e20:	b	187e8 <main@@Base+0x258c>
   18e24:	mov	r0, r8
   18e28:	mov	r2, r5
   18e2c:	mov	r3, #4
   18e30:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   18e34:	b	199dc <main@@Base+0x3780>
   18e38:	bne	18e4c <main@@Base+0x2bf0>
   18e3c:	mov	r7, r1
   18e40:	ldrb	r0, [r7, #1]!
   18e44:	cmp	r0, #32
   18e48:	bhi	18e5c <main@@Base+0x2c00>
   18e4c:	mov	r0, r8
   18e50:	mov	r2, r5
   18e54:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   18e58:	mov	r7, r0
   18e5c:	cmp	r7, r5
   18e60:	beq	18e9c <main@@Base+0x2c40>
   18e64:	ldrb	r0, [r7]
   18e68:	cmp	r0, #58	; 0x3a
   18e6c:	bne	18e9c <main@@Base+0x2c40>
   18e70:	add	r1, r7, #1
   18e74:	sub	r0, r5, r1
   18e78:	cmp	r0, #2
   18e7c:	blt	19a24 <main@@Base+0x37c8>
   18e80:	ldrb	r0, [r1]
   18e84:	cmp	r0, #32
   18e88:	bls	19a14 <main@@Base+0x37b8>
   18e8c:	mov	r7, r1
   18e90:	cmp	r9, r7
   18e94:	bne	19a3c <main@@Base+0x37e0>
   18e98:	b	187e8 <main@@Base+0x258c>
   18e9c:	mov	r0, r8
   18ea0:	mov	r1, r7
   18ea4:	mov	r2, r5
   18ea8:	mov	r3, #4
   18eac:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   18eb0:	b	19a30 <main@@Base+0x37d4>
   18eb4:	bne	18ec8 <main@@Base+0x2c6c>
   18eb8:	mov	r1, r2
   18ebc:	ldrb	r0, [r1, #1]!
   18ec0:	cmp	r0, #32
   18ec4:	bhi	18edc <main@@Base+0x2c80>
   18ec8:	mov	r1, r2
   18ecc:	mov	r0, r8
   18ed0:	mov	r2, r5
   18ed4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   18ed8:	mov	r1, r0
   18edc:	cmp	r1, r5
   18ee0:	beq	18f1c <main@@Base+0x2cc0>
   18ee4:	ldrb	r0, [r1]
   18ee8:	cmp	r0, #58	; 0x3a
   18eec:	bne	18f1c <main@@Base+0x2cc0>
   18ef0:	add	r2, r1, #1
   18ef4:	sub	r0, r5, r2
   18ef8:	cmp	r0, #2
   18efc:	blt	19c6c <main@@Base+0x3a10>
   18f00:	ldrb	r0, [r2]
   18f04:	cmp	r0, #32
   18f08:	bls	19c5c <main@@Base+0x3a00>
   18f0c:	mov	r1, r2
   18f10:	cmp	r9, r1
   18f14:	bne	19c88 <main@@Base+0x3a2c>
   18f18:	b	187e8 <main@@Base+0x258c>
   18f1c:	mov	r0, r8
   18f20:	mov	r2, r5
   18f24:	mov	r3, #4
   18f28:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   18f2c:	b	19c7c <main@@Base+0x3a20>
   18f30:	bne	18f44 <main@@Base+0x2ce8>
   18f34:	mov	r4, r1
   18f38:	ldrb	r0, [r4, #1]!
   18f3c:	cmp	r0, #32
   18f40:	bhi	18f54 <main@@Base+0x2cf8>
   18f44:	mov	r0, r8
   18f48:	mov	r2, r5
   18f4c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   18f50:	mov	r4, r0
   18f54:	cmp	r4, r5
   18f58:	beq	18f94 <main@@Base+0x2d38>
   18f5c:	ldrb	r0, [r4]
   18f60:	cmp	r0, #58	; 0x3a
   18f64:	bne	18f94 <main@@Base+0x2d38>
   18f68:	add	r1, r4, #1
   18f6c:	sub	r0, r5, r1
   18f70:	cmp	r0, #2
   18f74:	blt	19cc4 <main@@Base+0x3a68>
   18f78:	ldrb	r0, [r1]
   18f7c:	cmp	r0, #32
   18f80:	bls	19cb4 <main@@Base+0x3a58>
   18f84:	mov	r4, r1
   18f88:	cmp	r9, r4
   18f8c:	bne	19cdc <main@@Base+0x3a80>
   18f90:	b	187e8 <main@@Base+0x258c>
   18f94:	mov	r0, r8
   18f98:	mov	r1, r4
   18f9c:	mov	r2, r5
   18fa0:	mov	r3, #4
   18fa4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   18fa8:	b	19cd0 <main@@Base+0x3a74>
   18fac:	bne	18fc0 <main@@Base+0x2d64>
   18fb0:	mov	r1, r2
   18fb4:	ldrb	r0, [r1, #1]!
   18fb8:	cmp	r0, #32
   18fbc:	bhi	18fd4 <main@@Base+0x2d78>
   18fc0:	ldr	r0, [sp, #40]	; 0x28
   18fc4:	mov	r1, r2
   18fc8:	mov	r2, r5
   18fcc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   18fd0:	mov	r1, r0
   18fd4:	cmp	r1, r5
   18fd8:	beq	19064 <main@@Base+0x2e08>
   18fdc:	ldrb	r0, [r1]
   18fe0:	cmp	r0, #58	; 0x3a
   18fe4:	bne	19064 <main@@Base+0x2e08>
   18fe8:	add	r2, r1, #1
   18fec:	sub	r0, r5, r2
   18ff0:	cmp	r0, #2
   18ff4:	blt	1a02c <main@@Base+0x3dd0>
   18ff8:	ldrb	r0, [r2]
   18ffc:	cmp	r0, #32
   19000:	bls	1a01c <main@@Base+0x3dc0>
   19004:	mov	r1, r2
   19008:	cmp	r9, r1
   1900c:	bne	1a048 <main@@Base+0x3dec>
   19010:	eor	r0, r6, #889192448	; 0x35000000
   19014:	orrs	r0, r0, r4
   19018:	bne	1a4e4 <main@@Base+0x4288>
   1901c:	cmp	r8, #6
   19020:	mov	r7, r9
   19024:	blt	1a480 <main@@Base+0x4224>
   19028:	ldr	r2, [sp, #32]
   1902c:	mov	r1, r9
   19030:	ldrb	r0, [r1, #5]!
   19034:	ldr	r2, [r2]
   19038:	cmp	r2, #0
   1903c:	beq	19078 <main@@Base+0x2e1c>
   19040:	cmp	r0, #33	; 0x21
   19044:	bcc	19054 <main@@Base+0x2df8>
   19048:	cmp	r0, #58	; 0x3a
   1904c:	mov	r7, r9
   19050:	bne	1a480 <main@@Base+0x4224>
   19054:	ldr	r0, [sp, #32]
   19058:	mov	r2, #0
   1905c:	str	r2, [r0]
   19060:	b	19088 <main@@Base+0x2e2c>
   19064:	ldr	r0, [sp, #40]	; 0x28
   19068:	mov	r2, r5
   1906c:	mov	r3, #4
   19070:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   19074:	b	1a03c <main@@Base+0x3de0>
   19078:	cmp	r0, #34	; 0x22
   1907c:	mov	r7, r9
   19080:	bne	1a480 <main@@Base+0x4224>
   19084:	add	r1, r9, #6
   19088:	ldr	r6, [sp, #40]	; 0x28
   1908c:	sub	r0, r5, r1
   19090:	cmp	r0, #2
   19094:	blt	191d4 <main@@Base+0x2f78>
   19098:	ldrb	r0, [r1]
   1909c:	cmp	r0, #32
   190a0:	bls	191c0 <main@@Base+0x2f64>
   190a4:	mov	r7, r1
   190a8:	cmp	r7, r5
   190ac:	bne	191ec <main@@Base+0x2f90>
   190b0:	b	19224 <main@@Base+0x2fc8>
   190b4:	cmp	r0, #34	; 0x22
   190b8:	bne	1f6e4 <main@@Base+0x9488>
   190bc:	add	r1, r9, #11
   190c0:	sub	r0, r5, r1
   190c4:	cmp	r0, #2
   190c8:	blt	1a0e8 <main@@Base+0x3e8c>
   190cc:	ldrb	r0, [r1]
   190d0:	cmp	r0, #32
   190d4:	bls	1a0d4 <main@@Base+0x3e78>
   190d8:	mov	r4, r1
   190dc:	cmp	r4, r5
   190e0:	bne	1a100 <main@@Base+0x3ea4>
   190e4:	b	1a138 <main@@Base+0x3edc>
   190e8:	cmp	r0, #34	; 0x22
   190ec:	bne	1f6e4 <main@@Base+0x9488>
   190f0:	add	r1, r9, #19
   190f4:	sub	r0, r5, r1
   190f8:	cmp	r0, #2
   190fc:	blt	1a198 <main@@Base+0x3f3c>
   19100:	ldrb	r0, [r1]
   19104:	cmp	r0, #32
   19108:	bls	1a184 <main@@Base+0x3f28>
   1910c:	mov	r4, r1
   19110:	cmp	r4, r5
   19114:	bne	1a1b0 <main@@Base+0x3f54>
   19118:	b	1a1e8 <main@@Base+0x3f8c>
   1911c:	cmp	r0, #34	; 0x22
   19120:	bne	196a0 <main@@Base+0x3444>
   19124:	add	r1, r9, #24
   19128:	sub	r0, r5, r1
   1912c:	cmp	r0, #2
   19130:	blt	1a214 <main@@Base+0x3fb8>
   19134:	ldrb	r0, [r1]
   19138:	cmp	r0, #32
   1913c:	bls	1a200 <main@@Base+0x3fa4>
   19140:	mov	r7, r1
   19144:	cmp	r7, r5
   19148:	bne	1a22c <main@@Base+0x3fd0>
   1914c:	b	1a264 <main@@Base+0x4008>
   19150:	cmp	r0, #34	; 0x22
   19154:	mov	r7, r9
   19158:	bne	1c980 <main@@Base+0x6724>
   1915c:	add	r1, r9, #5
   19160:	sub	r0, r5, r1
   19164:	cmp	r0, #2
   19168:	blt	1a290 <main@@Base+0x4034>
   1916c:	ldrb	r0, [r1]
   19170:	cmp	r0, #32
   19174:	bls	1a27c <main@@Base+0x4020>
   19178:	mov	r7, r1
   1917c:	cmp	r7, r5
   19180:	bne	1a2a8 <main@@Base+0x404c>
   19184:	b	1a2e0 <main@@Base+0x4084>
   19188:	cmp	r0, #34	; 0x22
   1918c:	mov	r7, r9
   19190:	bne	1cb00 <main@@Base+0x68a4>
   19194:	add	r1, r9, #6
   19198:	sub	r0, r5, r1
   1919c:	cmp	r0, #2
   191a0:	blt	1a310 <main@@Base+0x40b4>
   191a4:	ldrb	r0, [r1]
   191a8:	cmp	r0, #32
   191ac:	bls	1a2fc <main@@Base+0x40a0>
   191b0:	mov	r7, r1
   191b4:	cmp	r7, r5
   191b8:	bne	1a328 <main@@Base+0x40cc>
   191bc:	b	1a360 <main@@Base+0x4104>
   191c0:	bne	191d4 <main@@Base+0x2f78>
   191c4:	mov	r7, r1
   191c8:	ldrb	r0, [r7, #1]!
   191cc:	cmp	r0, #32
   191d0:	bhi	191e4 <main@@Base+0x2f88>
   191d4:	mov	r0, r6
   191d8:	mov	r2, r5
   191dc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   191e0:	mov	r7, r0
   191e4:	cmp	r7, r5
   191e8:	beq	19224 <main@@Base+0x2fc8>
   191ec:	ldrb	r0, [r7]
   191f0:	cmp	r0, #58	; 0x3a
   191f4:	bne	19224 <main@@Base+0x2fc8>
   191f8:	add	r1, r7, #1
   191fc:	sub	r0, r5, r1
   19200:	cmp	r0, #2
   19204:	blt	1a470 <main@@Base+0x4214>
   19208:	ldrb	r0, [r1]
   1920c:	cmp	r0, #32
   19210:	bls	1a460 <main@@Base+0x4204>
   19214:	mov	r7, r1
   19218:	cmp	r9, r7
   1921c:	bne	1a488 <main@@Base+0x422c>
   19220:	b	1a4e4 <main@@Base+0x4288>
   19224:	mov	r0, r6
   19228:	mov	r1, r7
   1922c:	mov	r2, r5
   19230:	mov	r3, #4
   19234:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   19238:	b	1a47c <main@@Base+0x4220>
   1923c:	cmp	r0, #34	; 0x22
   19240:	bne	1a3d8 <main@@Base+0x417c>
   19244:	add	r1, r9, #17
   19248:	sub	r0, r5, r1
   1924c:	cmp	r0, #2
   19250:	blt	1a38c <main@@Base+0x4130>
   19254:	ldrb	r0, [r1]
   19258:	cmp	r0, #32
   1925c:	bls	1a378 <main@@Base+0x411c>
   19260:	mov	r7, r1
   19264:	cmp	r7, r5
   19268:	bne	1a3a4 <main@@Base+0x4148>
   1926c:	b	1a448 <main@@Base+0x41ec>
   19270:	bne	19284 <main@@Base+0x3028>
   19274:	mov	r7, r1
   19278:	ldrb	r0, [r7, #1]!
   1927c:	cmp	r0, #32
   19280:	bhi	19294 <main@@Base+0x3038>
   19284:	mov	r0, r8
   19288:	mov	r2, r5
   1928c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   19290:	mov	r7, r0
   19294:	cmp	r7, r5
   19298:	beq	192d4 <main@@Base+0x3078>
   1929c:	ldrb	r0, [r7]
   192a0:	cmp	r0, #58	; 0x3a
   192a4:	bne	192d4 <main@@Base+0x3078>
   192a8:	add	r1, r7, #1
   192ac:	sub	r0, r5, r1
   192b0:	cmp	r0, #2
   192b4:	blt	1a868 <main@@Base+0x460c>
   192b8:	ldrb	r0, [r1]
   192bc:	cmp	r0, #32
   192c0:	bls	1a858 <main@@Base+0x45fc>
   192c4:	mov	r7, r1
   192c8:	cmp	r9, r7
   192cc:	bne	1a880 <main@@Base+0x4624>
   192d0:	b	187e8 <main@@Base+0x258c>
   192d4:	mov	r0, r8
   192d8:	mov	r1, r7
   192dc:	mov	r2, r5
   192e0:	mov	r3, #4
   192e4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   192e8:	b	1a874 <main@@Base+0x4618>
   192ec:	bne	192fc <main@@Base+0x30a0>
   192f0:	ldrb	r0, [r7, #2]!
   192f4:	cmp	r0, #32
   192f8:	bhi	1930c <main@@Base+0x30b0>
   192fc:	mov	r0, r8
   19300:	mov	r2, r5
   19304:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   19308:	mov	r7, r0
   1930c:	cmp	r9, r7
   19310:	beq	187e8 <main@@Base+0x258c>
   19314:	mov	r0, #0
   19318:	mov	r1, r7
   1931c:	mov	r2, r5
   19320:	sub	r3, fp, #56	; 0x38
   19324:	str	r0, [fp, #-56]	; 0xffffffc8
   19328:	mov	r0, r8
   1932c:	bl	38198 <flatcc_json_parser_float@@Base>
   19330:	mov	r4, r0
   19334:	cmp	r7, r0
   19338:	bne	1936c <main@@Base+0x3110>
   1933c:	sub	r0, fp, #56	; 0x38
   19340:	mov	r1, r7
   19344:	mov	r2, r5
   19348:	str	r0, [sp]
   1934c:	mov	r0, r8
   19350:	ldr	r3, [pc, #4000]	; 1a2f8 <main@@Base+0x409c>
   19354:	add	r3, pc, r3
   19358:	bl	257cc <main@@Base+0xf570>
   1935c:	mov	r4, r0
   19360:	cmp	r0, r7
   19364:	cmpne	r4, r5
   19368:	beq	17324 <main@@Base+0x10c8>
   1936c:	vldr	s0, [fp, #-56]	; 0xffffffc8
   19370:	vcmp.f32	s0, #0.0
   19374:	vmrs	APSR_nzcv, fpscr
   19378:	bne	19388 <main@@Base+0x312c>
   1937c:	ldrb	r0, [r8, #8]
   19380:	tst	r0, #2
   19384:	beq	20168 <main@@Base+0x9f0c>
   19388:	ldr	r0, [r8]
   1938c:	mov	r1, #27
   19390:	mov	r2, #4
   19394:	mov	r3, #4
   19398:	bl	327e4 <flatcc_builder_table_add@@Base>
   1939c:	cmp	r0, #0
   193a0:	beq	17324 <main@@Base+0x10c8>
   193a4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   193a8:	b	1a5d8 <main@@Base+0x437c>
   193ac:	bne	193bc <main@@Base+0x3160>
   193b0:	ldrb	r0, [r7, #2]!
   193b4:	cmp	r0, #32
   193b8:	bhi	193cc <main@@Base+0x3170>
   193bc:	ldr	r0, [sp, #40]	; 0x28
   193c0:	mov	r2, r5
   193c4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   193c8:	mov	r7, r0
   193cc:	cmp	r9, r7
   193d0:	beq	1a4e4 <main@@Base+0x4288>
   193d4:	ldr	r8, [sp, #40]	; 0x28
   193d8:	mov	r1, #4
   193dc:	mov	r2, #2
   193e0:	mvn	r3, #-1073741824	; 0xc0000000
   193e4:	ldr	r0, [r8]
   193e8:	bl	30e38 <flatcc_builder_start_vector@@Base>
   193ec:	cmp	r0, #0
   193f0:	bne	21448 <main@@Base+0xb1ec>
   193f4:	cmp	r7, r5
   193f8:	beq	19430 <main@@Base+0x31d4>
   193fc:	ldrb	r0, [r7]
   19400:	cmp	r0, #91	; 0x5b
   19404:	bne	19430 <main@@Base+0x31d4>
   19408:	ldr	sl, [sp, #36]	; 0x24
   1940c:	add	r1, r7, #1
   19410:	sub	r0, r5, r1
   19414:	cmp	r0, #2
   19418:	blt	1947c <main@@Base+0x3220>
   1941c:	ldrb	r0, [r1]
   19420:	cmp	r0, #32
   19424:	bls	1946c <main@@Base+0x3210>
   19428:	mov	r7, r1
   1942c:	b	1948c <main@@Base+0x3230>
   19430:	mov	r0, r8
   19434:	mov	r1, r7
   19438:	mov	r2, r5
   1943c:	mov	r3, #22
   19440:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   19444:	ldr	sl, [sp, #36]	; 0x24
   19448:	mov	r7, r0
   1944c:	ldr	r0, [r8]
   19450:	bl	320b0 <flatcc_builder_end_vector@@Base>
   19454:	cmp	r0, #0
   19458:	str	r0, [sp, #52]	; 0x34
   1945c:	beq	21448 <main@@Base+0xb1ec>
   19460:	ldr	r0, [r8]
   19464:	mov	r1, #9
   19468:	b	1a5c4 <main@@Base+0x4368>
   1946c:	bne	1947c <main@@Base+0x3220>
   19470:	ldrb	r0, [r7, #2]!
   19474:	cmp	r0, #32
   19478:	bhi	1948c <main@@Base+0x3230>
   1947c:	mov	r0, r8
   19480:	mov	r2, r5
   19484:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   19488:	mov	r7, r0
   1948c:	cmp	r7, r5
   19490:	mov	r4, r5
   19494:	beq	194d8 <main@@Base+0x327c>
   19498:	ldrb	r0, [r7]
   1949c:	cmp	r0, #93	; 0x5d
   194a0:	bne	194d4 <main@@Base+0x3278>
   194a4:	add	r1, r7, #1
   194a8:	sub	r0, r5, r1
   194ac:	cmp	r0, #2
   194b0:	blt	1a090 <main@@Base+0x3e34>
   194b4:	ldrb	r0, [r1]
   194b8:	cmp	r0, #32
   194bc:	bhi	195f4 <main@@Base+0x3398>
   194c0:	bne	1a090 <main@@Base+0x3e34>
   194c4:	ldrb	r0, [r7, #2]!
   194c8:	cmp	r0, #32
   194cc:	bls	1a090 <main@@Base+0x3e34>
   194d0:	b	1944c <main@@Base+0x31f0>
   194d4:	mov	r4, r7
   194d8:	ldr	r0, [r8]
   194dc:	mov	r1, #1
   194e0:	bl	30274 <flatcc_builder_extend_vector@@Base>
   194e4:	mov	r3, r0
   194e8:	cmp	r0, #0
   194ec:	beq	17324 <main@@Base+0x10c8>
   194f0:	mov	r0, r8
   194f4:	mov	r1, r4
   194f8:	mov	r2, r5
   194fc:	bl	239c0 <main@@Base+0xd764>
   19500:	mov	r1, r0
   19504:	sub	r0, r5, r0
   19508:	cmp	r0, #2
   1950c:	blt	19540 <main@@Base+0x32e4>
   19510:	ldrb	r0, [r1]
   19514:	cmp	r0, #32
   19518:	bls	1952c <main@@Base+0x32d0>
   1951c:	mov	r4, r1
   19520:	cmp	r4, r5
   19524:	bne	19558 <main@@Base+0x32fc>
   19528:	b	195c8 <main@@Base+0x336c>
   1952c:	bne	19540 <main@@Base+0x32e4>
   19530:	mov	r4, r1
   19534:	ldrb	r0, [r4, #1]!
   19538:	cmp	r0, #32
   1953c:	bhi	19550 <main@@Base+0x32f4>
   19540:	mov	r0, r8
   19544:	mov	r2, r5
   19548:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1954c:	mov	r4, r0
   19550:	cmp	r4, r5
   19554:	beq	195c8 <main@@Base+0x336c>
   19558:	ldrb	r0, [r4]
   1955c:	cmp	r0, #44	; 0x2c
   19560:	bne	195d0 <main@@Base+0x3374>
   19564:	add	r1, r4, #1
   19568:	sub	r0, r5, r1
   1956c:	cmp	r0, #2
   19570:	blt	195a0 <main@@Base+0x3344>
   19574:	ldrb	r0, [r1]
   19578:	cmp	r0, #32
   1957c:	bls	19590 <main@@Base+0x3334>
   19580:	mov	r4, r1
   19584:	cmp	r4, r5
   19588:	bne	195b8 <main@@Base+0x335c>
   1958c:	b	195fc <main@@Base+0x33a0>
   19590:	bne	195a0 <main@@Base+0x3344>
   19594:	ldrb	r0, [r4, #2]!
   19598:	cmp	r0, #32
   1959c:	bhi	195b0 <main@@Base+0x3354>
   195a0:	mov	r0, r8
   195a4:	mov	r2, r5
   195a8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   195ac:	mov	r4, r0
   195b0:	cmp	r4, r5
   195b4:	beq	195fc <main@@Base+0x33a0>
   195b8:	ldrb	r0, [r4]
   195bc:	cmp	r0, #93	; 0x5d
   195c0:	bne	194d8 <main@@Base+0x327c>
   195c4:	b	195d8 <main@@Base+0x337c>
   195c8:	mov	r7, r5
   195cc:	b	1944c <main@@Base+0x31f0>
   195d0:	cmp	r0, #93	; 0x5d
   195d4:	bne	19b74 <main@@Base+0x3918>
   195d8:	add	r1, r4, #1
   195dc:	sub	r0, r5, r1
   195e0:	cmp	r0, #2
   195e4:	blt	1a090 <main@@Base+0x3e34>
   195e8:	ldrb	r0, [r1]
   195ec:	cmp	r0, #32
   195f0:	bls	1a07c <main@@Base+0x3e20>
   195f4:	mov	r7, r1
   195f8:	b	1944c <main@@Base+0x31f0>
   195fc:	mov	r0, r8
   19600:	mov	r1, r5
   19604:	b	19b7c <main@@Base+0x3920>
   19608:	cmp	r0, #34	; 0x22
   1960c:	bne	1aa70 <main@@Base+0x4814>
   19610:	add	r1, r9, #22
   19614:	sub	r0, r5, r1
   19618:	cmp	r0, #2
   1961c:	blt	1aa24 <main@@Base+0x47c8>
   19620:	ldrb	r0, [r1]
   19624:	cmp	r0, #32
   19628:	bls	1aa10 <main@@Base+0x47b4>
   1962c:	mov	r4, r1
   19630:	cmp	r4, r5
   19634:	bne	1aa3c <main@@Base+0x47e0>
   19638:	b	1aa80 <main@@Base+0x4824>
   1963c:	bne	19650 <main@@Base+0x33f4>
   19640:	mov	r4, r1
   19644:	ldrb	r0, [r4, #1]!
   19648:	cmp	r0, #32
   1964c:	bhi	19660 <main@@Base+0x3404>
   19650:	mov	r0, r6
   19654:	mov	r2, r5
   19658:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1965c:	mov	r4, r0
   19660:	cmp	r4, r5
   19664:	beq	196ac <main@@Base+0x3450>
   19668:	ldrb	r0, [r4]
   1966c:	cmp	r0, #58	; 0x3a
   19670:	bne	196ac <main@@Base+0x3450>
   19674:	add	r1, r4, #1
   19678:	sub	r0, r5, r1
   1967c:	cmp	r0, #2
   19680:	blt	1aabc <main@@Base+0x4860>
   19684:	ldrb	r0, [r1]
   19688:	cmp	r0, #32
   1968c:	bls	1aaac <main@@Base+0x4850>
   19690:	mov	r4, r1
   19694:	cmp	sl, r4
   19698:	bne	1aad4 <main@@Base+0x4878>
   1969c:	ldr	r8, [sp, #40]	; 0x28
   196a0:	mov	r0, r8
   196a4:	mov	r1, sl
   196a8:	b	1a578 <main@@Base+0x431c>
   196ac:	mov	r0, r6
   196b0:	mov	r1, r4
   196b4:	mov	r2, r5
   196b8:	mov	r3, #4
   196bc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   196c0:	b	1aac8 <main@@Base+0x486c>
   196c4:	bne	196d8 <main@@Base+0x347c>
   196c8:	mov	r7, r1
   196cc:	ldrb	r0, [r7, #1]!
   196d0:	cmp	r0, #32
   196d4:	bhi	196e8 <main@@Base+0x348c>
   196d8:	mov	r0, r8
   196dc:	mov	r2, r5
   196e0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   196e4:	mov	r7, r0
   196e8:	cmp	r7, r5
   196ec:	beq	19728 <main@@Base+0x34cc>
   196f0:	ldrb	r0, [r7]
   196f4:	cmp	r0, #58	; 0x3a
   196f8:	bne	19728 <main@@Base+0x34cc>
   196fc:	add	r1, r7, #1
   19700:	sub	r0, r5, r1
   19704:	cmp	r0, #2
   19708:	blt	1abb0 <main@@Base+0x4954>
   1970c:	ldrb	r0, [r1]
   19710:	cmp	r0, #32
   19714:	bls	1aba0 <main@@Base+0x4944>
   19718:	mov	r7, r1
   1971c:	cmp	r9, r7
   19720:	bne	1abc8 <main@@Base+0x496c>
   19724:	b	187e8 <main@@Base+0x258c>
   19728:	mov	r0, r8
   1972c:	mov	r1, r7
   19730:	mov	r2, r5
   19734:	mov	r3, #4
   19738:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1973c:	b	1abbc <main@@Base+0x4960>
   19740:	bne	19754 <main@@Base+0x34f8>
   19744:	mov	r4, r1
   19748:	ldrb	r0, [r4, #1]!
   1974c:	cmp	r0, #32
   19750:	bhi	19764 <main@@Base+0x3508>
   19754:	mov	r0, r8
   19758:	mov	r2, r5
   1975c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   19760:	mov	r4, r0
   19764:	cmp	r4, r5
   19768:	beq	197a4 <main@@Base+0x3548>
   1976c:	ldrb	r0, [r4]
   19770:	cmp	r0, #58	; 0x3a
   19774:	bne	197a4 <main@@Base+0x3548>
   19778:	add	r1, r4, #1
   1977c:	sub	r0, r5, r1
   19780:	cmp	r0, #2
   19784:	blt	1ad28 <main@@Base+0x4acc>
   19788:	ldrb	r0, [r1]
   1978c:	cmp	r0, #32
   19790:	bls	1ad18 <main@@Base+0x4abc>
   19794:	mov	r4, r1
   19798:	cmp	r9, r4
   1979c:	bne	1ad40 <main@@Base+0x4ae4>
   197a0:	b	187e8 <main@@Base+0x258c>
   197a4:	mov	r0, r8
   197a8:	mov	r1, r4
   197ac:	mov	r2, r5
   197b0:	mov	r3, #4
   197b4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   197b8:	b	1ad34 <main@@Base+0x4ad8>
   197bc:	bne	197d0 <main@@Base+0x3574>
   197c0:	mov	r7, r1
   197c4:	ldrb	r0, [r7, #1]!
   197c8:	cmp	r0, #32
   197cc:	bhi	197e0 <main@@Base+0x3584>
   197d0:	mov	r0, r8
   197d4:	mov	r2, r5
   197d8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   197dc:	mov	r7, r0
   197e0:	cmp	r7, r5
   197e4:	beq	19820 <main@@Base+0x35c4>
   197e8:	ldrb	r0, [r7]
   197ec:	cmp	r0, #58	; 0x3a
   197f0:	bne	19820 <main@@Base+0x35c4>
   197f4:	add	r1, r7, #1
   197f8:	sub	r0, r5, r1
   197fc:	cmp	r0, #2
   19800:	blt	1bbec <main@@Base+0x5990>
   19804:	ldrb	r0, [r1]
   19808:	cmp	r0, #32
   1980c:	bls	1bbdc <main@@Base+0x5980>
   19810:	mov	r7, r1
   19814:	cmp	r9, r7
   19818:	bne	1bc04 <main@@Base+0x59a8>
   1981c:	b	187e8 <main@@Base+0x258c>
   19820:	mov	r0, r8
   19824:	mov	r1, r7
   19828:	mov	r2, r5
   1982c:	mov	r3, #4
   19830:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   19834:	b	1bbf8 <main@@Base+0x599c>
   19838:	cmp	r0, #34	; 0x22
   1983c:	bne	1f6e4 <main@@Base+0x9488>
   19840:	add	r1, r9, #18
   19844:	sub	r0, r5, r1
   19848:	cmp	r0, #2
   1984c:	blt	1bc9c <main@@Base+0x5a40>
   19850:	ldrb	r0, [r1]
   19854:	cmp	r0, #32
   19858:	bls	1bc88 <main@@Base+0x5a2c>
   1985c:	mov	r4, r1
   19860:	cmp	r4, r5
   19864:	bne	1bcb4 <main@@Base+0x5a58>
   19868:	b	1bcf8 <main@@Base+0x5a9c>
   1986c:	cmp	r0, #34	; 0x22
   19870:	bne	1bd78 <main@@Base+0x5b1c>
   19874:	add	r1, r9, #17
   19878:	sub	r0, r5, r1
   1987c:	cmp	r0, #2
   19880:	blt	1bd24 <main@@Base+0x5ac8>
   19884:	ldrb	r0, [r1]
   19888:	cmp	r0, #32
   1988c:	bls	1bd10 <main@@Base+0x5ab4>
   19890:	mov	r7, r1
   19894:	cmp	r7, r5
   19898:	bne	1bd3c <main@@Base+0x5ae0>
   1989c:	b	1bde8 <main@@Base+0x5b8c>
   198a0:	cmp	r0, #34	; 0x22
   198a4:	bne	1be68 <main@@Base+0x5c0c>
   198a8:	add	r1, r9, #17
   198ac:	sub	r0, r5, r1
   198b0:	cmp	r0, #2
   198b4:	blt	1be14 <main@@Base+0x5bb8>
   198b8:	ldrb	r0, [r1]
   198bc:	cmp	r0, #32
   198c0:	bls	1be00 <main@@Base+0x5ba4>
   198c4:	mov	r7, r1
   198c8:	cmp	r7, r5
   198cc:	bne	1be2c <main@@Base+0x5bd0>
   198d0:	b	1bee4 <main@@Base+0x5c88>
   198d4:	bne	198e8 <main@@Base+0x368c>
   198d8:	mov	r7, r1
   198dc:	ldrb	r0, [r7, #1]!
   198e0:	cmp	r0, #32
   198e4:	bhi	198f8 <main@@Base+0x369c>
   198e8:	mov	r0, r8
   198ec:	mov	r2, r5
   198f0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   198f4:	mov	r7, r0
   198f8:	cmp	r7, r5
   198fc:	beq	199a4 <main@@Base+0x3748>
   19900:	ldrb	r0, [r7]
   19904:	cmp	r0, #58	; 0x3a
   19908:	bne	199a4 <main@@Base+0x3748>
   1990c:	add	r1, r7, #1
   19910:	sub	r0, r5, r1
   19914:	cmp	r0, #2
   19918:	blt	1bf58 <main@@Base+0x5cfc>
   1991c:	ldrb	r0, [r1]
   19920:	cmp	r0, #32
   19924:	bls	1bf48 <main@@Base+0x5cec>
   19928:	mov	r7, r1
   1992c:	cmp	sl, r7
   19930:	bne	1bf70 <main@@Base+0x5d14>
   19934:	add	r4, r9, #16
   19938:	mov	r1, #8
   1993c:	sub	r0, r5, r4
   19940:	cmp	r0, #8
   19944:	movcc	r1, r0
   19948:	sub	r1, r1, #1
   1994c:	cmp	r1, #7
   19950:	bhi	1bed8 <main@@Base+0x5c7c>
   19954:	ldrb	r1, [r4]
   19958:	cmp	r1, #97	; 0x61
   1995c:	bne	1bed8 <main@@Base+0x5c7c>
   19960:	ldr	sl, [sp, #36]	; 0x24
   19964:	cmp	r0, #2
   19968:	blt	20154 <main@@Base+0x9ef8>
   1996c:	ldr	r2, [sp, #32]
   19970:	mov	r1, r9
   19974:	ldrb	r0, [r1, #17]!
   19978:	ldr	r2, [r2]
   1997c:	cmp	r2, #0
   19980:	beq	1a150 <main@@Base+0x3ef4>
   19984:	cmp	r0, #33	; 0x21
   19988:	bcc	19994 <main@@Base+0x3738>
   1998c:	cmp	r0, #58	; 0x3a
   19990:	bne	20154 <main@@Base+0x9ef8>
   19994:	ldr	r0, [sp, #32]
   19998:	mov	r2, #0
   1999c:	str	r2, [r0]
   199a0:	b	1a15c <main@@Base+0x3f00>
   199a4:	mov	r0, r8
   199a8:	mov	r1, r7
   199ac:	mov	r2, r5
   199b0:	mov	r3, #4
   199b4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   199b8:	b	1bf64 <main@@Base+0x5d08>
   199bc:	bne	199cc <main@@Base+0x3770>
   199c0:	ldrb	r0, [r1, #2]!
   199c4:	cmp	r0, #32
   199c8:	bhi	199e0 <main@@Base+0x3784>
   199cc:	mov	r1, r2
   199d0:	mov	r0, r8
   199d4:	mov	r2, r5
   199d8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   199dc:	mov	r1, r0
   199e0:	cmp	r9, r1
   199e4:	beq	187e8 <main@@Base+0x258c>
   199e8:	mov	r0, r8
   199ec:	mov	r2, r5
   199f0:	add	r3, sp, #52	; 0x34
   199f4:	bl	172e4 <main@@Base+0x1088>
   199f8:	mov	r4, r0
   199fc:	ldr	r0, [sp, #52]	; 0x34
   19a00:	cmp	r0, #0
   19a04:	beq	17324 <main@@Base+0x10c8>
   19a08:	ldr	r0, [r8]
   19a0c:	mov	r1, #12
   19a10:	b	19d64 <main@@Base+0x3b08>
   19a14:	bne	19a24 <main@@Base+0x37c8>
   19a18:	ldrb	r0, [r7, #2]!
   19a1c:	cmp	r0, #32
   19a20:	bhi	19a34 <main@@Base+0x37d8>
   19a24:	mov	r0, r8
   19a28:	mov	r2, r5
   19a2c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   19a30:	mov	r7, r0
   19a34:	cmp	r9, r7
   19a38:	beq	187e8 <main@@Base+0x258c>
   19a3c:	mov	r6, #0
   19a40:	cmp	r7, r5
   19a44:	str	r6, [fp, #-52]	; 0xffffffcc
   19a48:	str	r6, [fp, #-56]	; 0xffffffc8
   19a4c:	strb	r6, [fp, #-60]	; 0xffffffc4
   19a50:	str	r6, [sp, #56]	; 0x38
   19a54:	beq	19ab4 <main@@Base+0x3858>
   19a58:	sub	r0, fp, #56	; 0x38
   19a5c:	mov	r1, r7
   19a60:	mov	r2, r5
   19a64:	add	r3, sp, #56	; 0x38
   19a68:	str	r0, [sp]
   19a6c:	mov	r0, r8
   19a70:	bl	382dc <flatcc_json_parser_integer@@Base>
   19a74:	cmp	r0, r7
   19a78:	beq	19ac4 <main@@Base+0x3868>
   19a7c:	ldr	r2, [sp, #56]	; 0x38
   19a80:	mov	r4, r0
   19a84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19a88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19a8c:	cmp	r2, #0
   19a90:	beq	19ad4 <main@@Base+0x3878>
   19a94:	subs	r2, r0, #129	; 0x81
   19a98:	sbcs	r1, r1, #0
   19a9c:	bcc	19b04 <main@@Base+0x38a8>
   19aa0:	mov	r0, r8
   19aa4:	mov	r1, r4
   19aa8:	mov	r2, r5
   19aac:	mov	r3, #8
   19ab0:	b	19af0 <main@@Base+0x3894>
   19ab4:	mov	r4, r5
   19ab8:	cmp	r7, r4
   19abc:	bne	19b50 <main@@Base+0x38f4>
   19ac0:	b	19b1c <main@@Base+0x38c0>
   19ac4:	mov	r4, r7
   19ac8:	cmp	r7, r4
   19acc:	bne	19b50 <main@@Base+0x38f4>
   19ad0:	b	19b1c <main@@Base+0x38c0>
   19ad4:	subs	r2, r0, #128	; 0x80
   19ad8:	sbcs	r1, r1, #0
   19adc:	bcc	19b0c <main@@Base+0x38b0>
   19ae0:	mov	r0, r8
   19ae4:	mov	r1, r4
   19ae8:	mov	r2, r5
   19aec:	mov	r3, #7
   19af0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   19af4:	mov	r4, r0
   19af8:	cmp	r7, r4
   19afc:	bne	19b50 <main@@Base+0x38f4>
   19b00:	b	19b1c <main@@Base+0x38c0>
   19b04:	rsb	r6, r0, #0
   19b08:	b	19b10 <main@@Base+0x38b4>
   19b0c:	mov	r6, r0
   19b10:	strb	r6, [fp, #-60]	; 0xffffffc4
   19b14:	cmp	r7, r4
   19b18:	bne	19b50 <main@@Base+0x38f4>
   19b1c:	sub	r0, fp, #60	; 0x3c
   19b20:	mov	r1, r7
   19b24:	mov	r2, r5
   19b28:	str	r0, [sp]
   19b2c:	mov	r0, r8
   19b30:	ldr	r3, [pc, #4088]	; 1ab30 <main@@Base+0x48d4>
   19b34:	add	r3, pc, r3
   19b38:	bl	23394 <main@@Base+0xd138>
   19b3c:	mov	r4, r0
   19b40:	cmp	r0, r7
   19b44:	cmpne	r4, r5
   19b48:	beq	17324 <main@@Base+0x10c8>
   19b4c:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   19b50:	uxtb	r0, r6
   19b54:	cmp	r0, #8
   19b58:	bne	19b68 <main@@Base+0x390c>
   19b5c:	ldrb	r0, [r8, #8]
   19b60:	tst	r0, #2
   19b64:	beq	20168 <main@@Base+0x9f0c>
   19b68:	ldr	r0, [r8]
   19b6c:	mov	r1, #6
   19b70:	b	1a9dc <main@@Base+0x4780>
   19b74:	mov	r0, r8
   19b78:	mov	r1, r4
   19b7c:	mov	r2, r5
   19b80:	mov	r3, #9
   19b84:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   19b88:	b	19448 <main@@Base+0x31ec>
   19b8c:	cmp	r0, #34	; 0x22
   19b90:	bne	1f6e4 <main@@Base+0x9488>
   19b94:	add	r1, r9, #18
   19b98:	sub	r0, r5, r1
   19b9c:	cmp	r0, #2
   19ba0:	blt	1c068 <main@@Base+0x5e0c>
   19ba4:	ldrb	r0, [r1]
   19ba8:	cmp	r0, #32
   19bac:	bls	1c054 <main@@Base+0x5df8>
   19bb0:	mov	r4, r1
   19bb4:	cmp	r4, r5
   19bb8:	bne	1c080 <main@@Base+0x5e24>
   19bbc:	b	1c0c4 <main@@Base+0x5e68>
   19bc0:	cmp	r0, #34	; 0x22
   19bc4:	bne	1f6e4 <main@@Base+0x9488>
   19bc8:	add	r1, r9, #10
   19bcc:	sub	r0, r5, r1
   19bd0:	cmp	r0, #2
   19bd4:	blt	1c0f0 <main@@Base+0x5e94>
   19bd8:	ldrb	r0, [r1]
   19bdc:	cmp	r0, #32
   19be0:	bls	1c0dc <main@@Base+0x5e80>
   19be4:	mov	r4, r1
   19be8:	cmp	r4, r5
   19bec:	bne	1c108 <main@@Base+0x5eac>
   19bf0:	b	1c14c <main@@Base+0x5ef0>
   19bf4:	cmp	r0, #34	; 0x22
   19bf8:	bne	1f6e4 <main@@Base+0x9488>
   19bfc:	add	r1, r9, #10
   19c00:	sub	r0, r5, r1
   19c04:	cmp	r0, #2
   19c08:	blt	1c178 <main@@Base+0x5f1c>
   19c0c:	ldrb	r0, [r1]
   19c10:	cmp	r0, #32
   19c14:	bls	1c164 <main@@Base+0x5f08>
   19c18:	mov	r4, r1
   19c1c:	cmp	r4, r5
   19c20:	bne	1c190 <main@@Base+0x5f34>
   19c24:	b	1c1d4 <main@@Base+0x5f78>
   19c28:	cmp	r0, #34	; 0x22
   19c2c:	bne	196a0 <main@@Base+0x3444>
   19c30:	add	r1, r9, #16
   19c34:	sub	r0, r5, r1
   19c38:	cmp	r0, #2
   19c3c:	blt	1c498 <main@@Base+0x623c>
   19c40:	ldrb	r0, [r1]
   19c44:	cmp	r0, #32
   19c48:	bls	1c484 <main@@Base+0x6228>
   19c4c:	mov	r4, r1
   19c50:	cmp	r4, r5
   19c54:	bne	1c4b0 <main@@Base+0x6254>
   19c58:	b	1c4f0 <main@@Base+0x6294>
   19c5c:	bne	19c6c <main@@Base+0x3a10>
   19c60:	ldrb	r0, [r1, #2]!
   19c64:	cmp	r0, #32
   19c68:	bhi	19c80 <main@@Base+0x3a24>
   19c6c:	mov	r1, r2
   19c70:	mov	r0, r8
   19c74:	mov	r2, r5
   19c78:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   19c7c:	mov	r1, r0
   19c80:	cmp	r9, r1
   19c84:	beq	187e8 <main@@Base+0x258c>
   19c88:	mov	r0, r8
   19c8c:	mov	r2, r5
   19c90:	add	r3, sp, #52	; 0x34
   19c94:	bl	38888 <flatcc_json_parser_build_string@@Base>
   19c98:	mov	r4, r0
   19c9c:	ldr	r0, [sp, #52]	; 0x34
   19ca0:	cmp	r0, #0
   19ca4:	beq	17324 <main@@Base+0x10c8>
   19ca8:	ldr	r0, [r8]
   19cac:	mov	r1, #3
   19cb0:	b	19d64 <main@@Base+0x3b08>
   19cb4:	bne	19cc4 <main@@Base+0x3a68>
   19cb8:	ldrb	r0, [r4, #2]!
   19cbc:	cmp	r0, #32
   19cc0:	bhi	19cd4 <main@@Base+0x3a78>
   19cc4:	mov	r0, r8
   19cc8:	mov	r2, r5
   19ccc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   19cd0:	mov	r4, r0
   19cd4:	cmp	r9, r4
   19cd8:	beq	187e8 <main@@Base+0x258c>
   19cdc:	ldr	r0, [r8]
   19ce0:	mov	r1, #1
   19ce4:	mov	r2, #1
   19ce8:	mvn	r3, #0
   19cec:	bl	30e38 <flatcc_builder_start_vector@@Base>
   19cf0:	cmp	r0, #0
   19cf4:	bne	17324 <main@@Base+0x10c8>
   19cf8:	cmp	r4, r5
   19cfc:	beq	19d30 <main@@Base+0x3ad4>
   19d00:	ldrb	r0, [r4]
   19d04:	cmp	r0, #91	; 0x5b
   19d08:	bne	19d30 <main@@Base+0x3ad4>
   19d0c:	add	r1, r4, #1
   19d10:	sub	r0, r5, r1
   19d14:	cmp	r0, #2
   19d18:	blt	19d88 <main@@Base+0x3b2c>
   19d1c:	ldrb	r0, [r1]
   19d20:	cmp	r0, #32
   19d24:	bls	19d78 <main@@Base+0x3b1c>
   19d28:	mov	r4, r1
   19d2c:	b	19d98 <main@@Base+0x3b3c>
   19d30:	mov	r0, r8
   19d34:	mov	r1, r4
   19d38:	mov	r2, r5
   19d3c:	mov	r3, #22
   19d40:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   19d44:	mov	r4, r0
   19d48:	ldr	r0, [r8]
   19d4c:	bl	320b0 <flatcc_builder_end_vector@@Base>
   19d50:	cmp	r0, #0
   19d54:	str	r0, [sp, #52]	; 0x34
   19d58:	beq	17324 <main@@Base+0x10c8>
   19d5c:	ldr	r0, [r8]
   19d60:	mov	r1, #30
   19d64:	bl	32630 <flatcc_builder_table_add_offset@@Base>
   19d68:	cmp	r0, #0
   19d6c:	beq	17324 <main@@Base+0x10c8>
   19d70:	ldr	r1, [sp, #52]	; 0x34
   19d74:	b	1a5d8 <main@@Base+0x437c>
   19d78:	bne	19d88 <main@@Base+0x3b2c>
   19d7c:	ldrb	r0, [r4, #2]!
   19d80:	cmp	r0, #32
   19d84:	bhi	19d98 <main@@Base+0x3b3c>
   19d88:	mov	r0, r8
   19d8c:	mov	r2, r5
   19d90:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   19d94:	mov	r4, r0
   19d98:	cmp	r4, r5
   19d9c:	mov	r6, r5
   19da0:	beq	19db4 <main@@Base+0x3b58>
   19da4:	ldrb	r0, [r4]
   19da8:	cmp	r0, #93	; 0x5d
   19dac:	beq	19fcc <main@@Base+0x3d70>
   19db0:	mov	r6, r4
   19db4:	mov	r0, #0
   19db8:	mov	r1, #1
   19dbc:	strb	r0, [fp, #-60]	; 0xffffffc4
   19dc0:	ldr	r0, [r8]
   19dc4:	bl	30274 <flatcc_builder_extend_vector@@Base>
   19dc8:	cmp	r0, #0
   19dcc:	beq	21450 <main@@Base+0xb1f4>
   19dd0:	mov	r7, r0
   19dd4:	mov	r4, r6
   19dd8:	mov	r6, #0
   19ddc:	cmp	r4, r5
   19de0:	str	r6, [fp, #-52]	; 0xffffffcc
   19de4:	str	r6, [fp, #-56]	; 0xffffffc8
   19de8:	strb	r6, [fp, #-60]	; 0xffffffc4
   19dec:	str	r6, [sp, #56]	; 0x38
   19df0:	beq	19e38 <main@@Base+0x3bdc>
   19df4:	sub	r0, fp, #56	; 0x38
   19df8:	mov	r1, r4
   19dfc:	mov	r2, r5
   19e00:	add	r3, sp, #56	; 0x38
   19e04:	str	r0, [sp]
   19e08:	mov	r0, r8
   19e0c:	bl	382dc <flatcc_json_parser_integer@@Base>
   19e10:	cmp	r0, r4
   19e14:	beq	19e48 <main@@Base+0x3bec>
   19e18:	mov	r1, r0
   19e1c:	ldr	r0, [sp, #56]	; 0x38
   19e20:	cmp	r0, #0
   19e24:	beq	19e58 <main@@Base+0x3bfc>
   19e28:	mov	r0, r8
   19e2c:	mov	r2, r5
   19e30:	mov	r3, #8
   19e34:	b	19e78 <main@@Base+0x3c1c>
   19e38:	mov	r1, r5
   19e3c:	cmp	r4, r1
   19e40:	bne	19ec0 <main@@Base+0x3c64>
   19e44:	b	19e88 <main@@Base+0x3c2c>
   19e48:	mov	r1, r4
   19e4c:	cmp	r4, r1
   19e50:	bne	19ec0 <main@@Base+0x3c64>
   19e54:	b	19e88 <main@@Base+0x3c2c>
   19e58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19e5c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19e60:	subs	r3, r0, #256	; 0x100
   19e64:	sbcs	r2, r2, #0
   19e68:	bcc	19fa8 <main@@Base+0x3d4c>
   19e6c:	mov	r0, r8
   19e70:	mov	r2, r5
   19e74:	mov	r3, #7
   19e78:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   19e7c:	mov	r1, r0
   19e80:	cmp	r4, r1
   19e84:	bne	19ec0 <main@@Base+0x3c64>
   19e88:	sub	r0, fp, #60	; 0x3c
   19e8c:	mov	r1, r4
   19e90:	mov	r2, r5
   19e94:	str	r0, [sp]
   19e98:	mov	r0, r8
   19e9c:	ldr	r3, [pc, #4048]	; 1ae74 <main@@Base+0x4c18>
   19ea0:	add	r3, pc, r3
   19ea4:	bl	235a4 <main@@Base+0xd348>
   19ea8:	mov	r1, r0
   19eac:	cmp	r0, r4
   19eb0:	beq	2145c <main@@Base+0xb200>
   19eb4:	cmp	r1, r5
   19eb8:	beq	2145c <main@@Base+0xb200>
   19ebc:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   19ec0:	sub	r0, r5, r1
   19ec4:	strb	r6, [r7]
   19ec8:	cmp	r0, #2
   19ecc:	blt	19f00 <main@@Base+0x3ca4>
   19ed0:	ldrb	r0, [r1]
   19ed4:	cmp	r0, #32
   19ed8:	bls	19eec <main@@Base+0x3c90>
   19edc:	mov	r4, r1
   19ee0:	cmp	r4, r5
   19ee4:	bne	19f18 <main@@Base+0x3cbc>
   19ee8:	b	19fbc <main@@Base+0x3d60>
   19eec:	bne	19f00 <main@@Base+0x3ca4>
   19ef0:	mov	r4, r1
   19ef4:	ldrb	r0, [r4, #1]!
   19ef8:	cmp	r0, #32
   19efc:	bhi	19f10 <main@@Base+0x3cb4>
   19f00:	mov	r0, r8
   19f04:	mov	r2, r5
   19f08:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   19f0c:	mov	r4, r0
   19f10:	cmp	r4, r5
   19f14:	beq	19fbc <main@@Base+0x3d60>
   19f18:	ldrb	r0, [r4]
   19f1c:	cmp	r0, #44	; 0x2c
   19f20:	bne	19fc4 <main@@Base+0x3d68>
   19f24:	add	r1, r4, #1
   19f28:	sub	r0, r5, r1
   19f2c:	cmp	r0, #2
   19f30:	blt	19f60 <main@@Base+0x3d04>
   19f34:	ldrb	r0, [r1]
   19f38:	cmp	r0, #32
   19f3c:	bls	19f50 <main@@Base+0x3cf4>
   19f40:	mov	r4, r1
   19f44:	cmp	r4, r5
   19f48:	bne	19f78 <main@@Base+0x3d1c>
   19f4c:	b	1a010 <main@@Base+0x3db4>
   19f50:	bne	19f60 <main@@Base+0x3d04>
   19f54:	ldrb	r0, [r4, #2]!
   19f58:	cmp	r0, #32
   19f5c:	bhi	19f70 <main@@Base+0x3d14>
   19f60:	mov	r0, r8
   19f64:	mov	r2, r5
   19f68:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   19f6c:	mov	r4, r0
   19f70:	cmp	r4, r5
   19f74:	beq	1a010 <main@@Base+0x3db4>
   19f78:	ldrb	r0, [r4]
   19f7c:	cmp	r0, #93	; 0x5d
   19f80:	beq	19fcc <main@@Base+0x3d70>
   19f84:	mov	r0, #0
   19f88:	mov	r1, #1
   19f8c:	strb	r0, [fp, #-60]	; 0xffffffc4
   19f90:	ldr	r0, [r8]
   19f94:	bl	30274 <flatcc_builder_extend_vector@@Base>
   19f98:	mov	r7, r0
   19f9c:	cmp	r0, #0
   19fa0:	bne	19dd8 <main@@Base+0x3b7c>
   19fa4:	b	17324 <main@@Base+0x10c8>
   19fa8:	mov	r6, r0
   19fac:	strb	r0, [fp, #-60]	; 0xffffffc4
   19fb0:	cmp	r4, r1
   19fb4:	bne	19ec0 <main@@Base+0x3c64>
   19fb8:	b	19e88 <main@@Base+0x3c2c>
   19fbc:	mov	r4, r5
   19fc0:	b	19d48 <main@@Base+0x3aec>
   19fc4:	cmp	r0, #93	; 0x5d
   19fc8:	bne	1aa98 <main@@Base+0x483c>
   19fcc:	add	r1, r4, #1
   19fd0:	sub	r0, r5, r1
   19fd4:	cmp	r0, #2
   19fd8:	blt	1a000 <main@@Base+0x3da4>
   19fdc:	ldrb	r0, [r1]
   19fe0:	cmp	r0, #32
   19fe4:	bls	19ff0 <main@@Base+0x3d94>
   19fe8:	mov	r4, r1
   19fec:	b	19d48 <main@@Base+0x3aec>
   19ff0:	bne	1a000 <main@@Base+0x3da4>
   19ff4:	ldrb	r0, [r4, #2]!
   19ff8:	cmp	r0, #32
   19ffc:	bhi	19d48 <main@@Base+0x3aec>
   1a000:	mov	r0, r8
   1a004:	mov	r2, r5
   1a008:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a00c:	b	19d44 <main@@Base+0x3ae8>
   1a010:	mov	r0, r8
   1a014:	mov	r1, r5
   1a018:	b	1aaa0 <main@@Base+0x4844>
   1a01c:	bne	1a02c <main@@Base+0x3dd0>
   1a020:	ldrb	r0, [r1, #2]!
   1a024:	cmp	r0, #32
   1a028:	bhi	1a040 <main@@Base+0x3de4>
   1a02c:	ldr	r0, [sp, #40]	; 0x28
   1a030:	mov	r1, r2
   1a034:	mov	r2, r5
   1a038:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a03c:	mov	r1, r0
   1a040:	cmp	r9, r1
   1a044:	beq	19010 <main@@Base+0x2db4>
   1a048:	ldr	r0, [sp, #48]	; 0x30
   1a04c:	mov	r2, #8
   1a050:	mov	r3, #0
   1a054:	str	r2, [sp]
   1a058:	mov	r2, r5
   1a05c:	str	r0, [sp, #4]
   1a060:	ldr	r0, [pc, #4040]	; 1b030 <main@@Base+0x4dd4>
   1a064:	ldr	r8, [sp, #40]	; 0x28
   1a068:	add	r0, pc, r0
   1a06c:	str	r0, [sp, #8]
   1a070:	mov	r0, r8
   1a074:	bl	38c60 <flatcc_json_parser_union@@Base>
   1a078:	b	1a580 <main@@Base+0x4324>
   1a07c:	bne	1a090 <main@@Base+0x3e34>
   1a080:	ldrb	r0, [r4, #2]!
   1a084:	mov	r7, r4
   1a088:	cmp	r0, #32
   1a08c:	bhi	1944c <main@@Base+0x31f0>
   1a090:	mov	r0, r8
   1a094:	mov	r2, r5
   1a098:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a09c:	b	19448 <main@@Base+0x31ec>
   1a0a0:	cmp	r0, #34	; 0x22
   1a0a4:	bne	1f6e4 <main@@Base+0x9488>
   1a0a8:	add	r1, r9, #21
   1a0ac:	sub	r0, r5, r1
   1a0b0:	cmp	r0, #2
   1a0b4:	blt	1c51c <main@@Base+0x62c0>
   1a0b8:	ldrb	r0, [r1]
   1a0bc:	cmp	r0, #32
   1a0c0:	bls	1c508 <main@@Base+0x62ac>
   1a0c4:	mov	r4, r1
   1a0c8:	cmp	r4, r5
   1a0cc:	bne	1c534 <main@@Base+0x62d8>
   1a0d0:	b	1c578 <main@@Base+0x631c>
   1a0d4:	bne	1a0e8 <main@@Base+0x3e8c>
   1a0d8:	mov	r4, r1
   1a0dc:	ldrb	r0, [r4, #1]!
   1a0e0:	cmp	r0, #32
   1a0e4:	bhi	1a0f8 <main@@Base+0x3e9c>
   1a0e8:	mov	r0, r8
   1a0ec:	mov	r2, r5
   1a0f0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a0f4:	mov	r4, r0
   1a0f8:	cmp	r4, r5
   1a0fc:	beq	1a138 <main@@Base+0x3edc>
   1a100:	ldrb	r0, [r4]
   1a104:	cmp	r0, #58	; 0x3a
   1a108:	bne	1a138 <main@@Base+0x3edc>
   1a10c:	add	r1, r4, #1
   1a110:	sub	r0, r5, r1
   1a114:	cmp	r0, #2
   1a118:	blt	1c6a0 <main@@Base+0x6444>
   1a11c:	ldrb	r0, [r1]
   1a120:	cmp	r0, #32
   1a124:	bls	1c690 <main@@Base+0x6434>
   1a128:	mov	r4, r1
   1a12c:	cmp	r7, r4
   1a130:	bne	1c6b8 <main@@Base+0x645c>
   1a134:	b	1f6e4 <main@@Base+0x9488>
   1a138:	mov	r0, r8
   1a13c:	mov	r1, r4
   1a140:	mov	r2, r5
   1a144:	mov	r3, #4
   1a148:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1a14c:	b	1c6ac <main@@Base+0x6450>
   1a150:	cmp	r0, #34	; 0x22
   1a154:	bne	20154 <main@@Base+0x9ef8>
   1a158:	add	r1, r9, #18
   1a15c:	sub	r0, r5, r1
   1a160:	cmp	r0, #2
   1a164:	blt	1c5a4 <main@@Base+0x6348>
   1a168:	ldrb	r0, [r1]
   1a16c:	cmp	r0, #32
   1a170:	bls	1c590 <main@@Base+0x6334>
   1a174:	mov	r7, r1
   1a178:	cmp	r7, r5
   1a17c:	bne	1c5bc <main@@Base+0x6360>
   1a180:	b	1c600 <main@@Base+0x63a4>
   1a184:	bne	1a198 <main@@Base+0x3f3c>
   1a188:	mov	r4, r1
   1a18c:	ldrb	r0, [r4, #1]!
   1a190:	cmp	r0, #32
   1a194:	bhi	1a1a8 <main@@Base+0x3f4c>
   1a198:	mov	r0, r8
   1a19c:	mov	r2, r5
   1a1a0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a1a4:	mov	r4, r0
   1a1a8:	cmp	r4, r5
   1a1ac:	beq	1a1e8 <main@@Base+0x3f8c>
   1a1b0:	ldrb	r0, [r4]
   1a1b4:	cmp	r0, #58	; 0x3a
   1a1b8:	bne	1a1e8 <main@@Base+0x3f8c>
   1a1bc:	add	r1, r4, #1
   1a1c0:	sub	r0, r5, r1
   1a1c4:	cmp	r0, #2
   1a1c8:	blt	1c7a0 <main@@Base+0x6544>
   1a1cc:	ldrb	r0, [r1]
   1a1d0:	cmp	r0, #32
   1a1d4:	bls	1c790 <main@@Base+0x6534>
   1a1d8:	mov	r4, r1
   1a1dc:	cmp	r7, r4
   1a1e0:	bne	1c7b8 <main@@Base+0x655c>
   1a1e4:	b	1f6e4 <main@@Base+0x9488>
   1a1e8:	mov	r0, r8
   1a1ec:	mov	r1, r4
   1a1f0:	mov	r2, r5
   1a1f4:	mov	r3, #4
   1a1f8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1a1fc:	b	1c7ac <main@@Base+0x6550>
   1a200:	bne	1a214 <main@@Base+0x3fb8>
   1a204:	mov	r7, r1
   1a208:	ldrb	r0, [r7, #1]!
   1a20c:	cmp	r0, #32
   1a210:	bhi	1a224 <main@@Base+0x3fc8>
   1a214:	mov	r0, r8
   1a218:	mov	r2, r5
   1a21c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a220:	mov	r7, r0
   1a224:	cmp	r7, r5
   1a228:	beq	1a264 <main@@Base+0x4008>
   1a22c:	ldrb	r0, [r7]
   1a230:	cmp	r0, #58	; 0x3a
   1a234:	bne	1a264 <main@@Base+0x4008>
   1a238:	add	r1, r7, #1
   1a23c:	sub	r0, r5, r1
   1a240:	cmp	r0, #2
   1a244:	blt	1c848 <main@@Base+0x65ec>
   1a248:	ldrb	r0, [r1]
   1a24c:	cmp	r0, #32
   1a250:	bls	1c838 <main@@Base+0x65dc>
   1a254:	mov	r7, r1
   1a258:	cmp	sl, r7
   1a25c:	bne	1c860 <main@@Base+0x6604>
   1a260:	b	196a0 <main@@Base+0x3444>
   1a264:	mov	r0, r8
   1a268:	mov	r1, r7
   1a26c:	mov	r2, r5
   1a270:	mov	r3, #4
   1a274:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1a278:	b	1c854 <main@@Base+0x65f8>
   1a27c:	bne	1a290 <main@@Base+0x4034>
   1a280:	mov	r7, r1
   1a284:	ldrb	r0, [r7, #1]!
   1a288:	cmp	r0, #32
   1a28c:	bhi	1a2a0 <main@@Base+0x4044>
   1a290:	mov	r0, r8
   1a294:	mov	r2, r5
   1a298:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a29c:	mov	r7, r0
   1a2a0:	cmp	r7, r5
   1a2a4:	beq	1a2e0 <main@@Base+0x4084>
   1a2a8:	ldrb	r0, [r7]
   1a2ac:	cmp	r0, #58	; 0x3a
   1a2b0:	bne	1a2e0 <main@@Base+0x4084>
   1a2b4:	add	r1, r7, #1
   1a2b8:	sub	r0, r5, r1
   1a2bc:	cmp	r0, #2
   1a2c0:	blt	1c970 <main@@Base+0x6714>
   1a2c4:	ldrb	r0, [r1]
   1a2c8:	cmp	r0, #32
   1a2cc:	bls	1c960 <main@@Base+0x6704>
   1a2d0:	mov	r7, r1
   1a2d4:	cmp	r9, r7
   1a2d8:	bne	1c988 <main@@Base+0x672c>
   1a2dc:	b	187e8 <main@@Base+0x258c>
   1a2e0:	mov	r0, r8
   1a2e4:	mov	r1, r7
   1a2e8:	mov	r2, r5
   1a2ec:	mov	r3, #4
   1a2f0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1a2f4:	b	1c97c <main@@Base+0x6720>
   1a2f8:			; <UNDEFINED> instruction: 0x00045db0
   1a2fc:	bne	1a310 <main@@Base+0x40b4>
   1a300:	mov	r7, r1
   1a304:	ldrb	r0, [r7, #1]!
   1a308:	cmp	r0, #32
   1a30c:	bhi	1a320 <main@@Base+0x40c4>
   1a310:	mov	r0, r8
   1a314:	mov	r2, r5
   1a318:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a31c:	mov	r7, r0
   1a320:	cmp	r7, r5
   1a324:	beq	1a360 <main@@Base+0x4104>
   1a328:	ldrb	r0, [r7]
   1a32c:	cmp	r0, #58	; 0x3a
   1a330:	bne	1a360 <main@@Base+0x4104>
   1a334:	add	r1, r7, #1
   1a338:	sub	r0, r5, r1
   1a33c:	cmp	r0, #2
   1a340:	blt	1caf0 <main@@Base+0x6894>
   1a344:	ldrb	r0, [r1]
   1a348:	cmp	r0, #32
   1a34c:	bls	1cae0 <main@@Base+0x6884>
   1a350:	mov	r7, r1
   1a354:	cmp	r9, r7
   1a358:	bne	1cb08 <main@@Base+0x68ac>
   1a35c:	b	187e8 <main@@Base+0x258c>
   1a360:	mov	r0, r8
   1a364:	mov	r1, r7
   1a368:	mov	r2, r5
   1a36c:	mov	r3, #4
   1a370:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1a374:	b	1cafc <main@@Base+0x68a0>
   1a378:	bne	1a38c <main@@Base+0x4130>
   1a37c:	mov	r7, r1
   1a380:	ldrb	r0, [r7, #1]!
   1a384:	cmp	r0, #32
   1a388:	bhi	1a39c <main@@Base+0x4140>
   1a38c:	mov	r0, r8
   1a390:	mov	r2, r5
   1a394:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a398:	mov	r7, r0
   1a39c:	cmp	r7, r5
   1a3a0:	beq	1a448 <main@@Base+0x41ec>
   1a3a4:	ldrb	r0, [r7]
   1a3a8:	cmp	r0, #58	; 0x3a
   1a3ac:	bne	1a448 <main@@Base+0x41ec>
   1a3b0:	add	r1, r7, #1
   1a3b4:	sub	r0, r5, r1
   1a3b8:	cmp	r0, #2
   1a3bc:	blt	1cb98 <main@@Base+0x693c>
   1a3c0:	ldrb	r0, [r1]
   1a3c4:	cmp	r0, #32
   1a3c8:	bls	1cb88 <main@@Base+0x692c>
   1a3cc:	mov	r7, r1
   1a3d0:	cmp	sl, r7
   1a3d4:	bne	1cbb0 <main@@Base+0x6954>
   1a3d8:	add	r4, r9, #16
   1a3dc:	mov	r1, #8
   1a3e0:	sub	r0, r5, r4
   1a3e4:	cmp	r0, #8
   1a3e8:	movcc	r1, r0
   1a3ec:	sub	r1, r1, #1
   1a3f0:	cmp	r1, #7
   1a3f4:	bhi	1bed8 <main@@Base+0x5c7c>
   1a3f8:	ldrb	r1, [r4]
   1a3fc:	cmp	r1, #97	; 0x61
   1a400:	bne	1bed8 <main@@Base+0x5c7c>
   1a404:	ldr	sl, [sp, #36]	; 0x24
   1a408:	cmp	r0, #2
   1a40c:	blt	20154 <main@@Base+0x9ef8>
   1a410:	ldr	r2, [sp, #32]
   1a414:	mov	r1, r9
   1a418:	ldrb	r0, [r1, #17]!
   1a41c:	ldr	r2, [r2]
   1a420:	cmp	r2, #0
   1a424:	beq	1bf14 <main@@Base+0x5cb8>
   1a428:	cmp	r0, #33	; 0x21
   1a42c:	bcc	1a438 <main@@Base+0x41dc>
   1a430:	cmp	r0, #58	; 0x3a
   1a434:	bne	20154 <main@@Base+0x9ef8>
   1a438:	ldr	r0, [sp, #32]
   1a43c:	mov	r2, #0
   1a440:	str	r2, [r0]
   1a444:	b	1bf20 <main@@Base+0x5cc4>
   1a448:	mov	r0, r8
   1a44c:	mov	r1, r7
   1a450:	mov	r2, r5
   1a454:	mov	r3, #4
   1a458:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1a45c:	b	1cba4 <main@@Base+0x6948>
   1a460:	bne	1a470 <main@@Base+0x4214>
   1a464:	ldrb	r0, [r7, #2]!
   1a468:	cmp	r0, #32
   1a46c:	bhi	1a480 <main@@Base+0x4224>
   1a470:	ldr	r0, [sp, #40]	; 0x28
   1a474:	mov	r2, r5
   1a478:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a47c:	mov	r7, r0
   1a480:	cmp	r9, r7
   1a484:	beq	1a4e4 <main@@Base+0x4288>
   1a488:	ldr	r8, [sp, #40]	; 0x28
   1a48c:	mov	r1, #4
   1a490:	mov	r2, #2
   1a494:	mvn	r3, #-1073741824	; 0xc0000000
   1a498:	ldr	r0, [r8]
   1a49c:	bl	30e38 <flatcc_builder_start_vector@@Base>
   1a4a0:	cmp	r0, #0
   1a4a4:	bne	21448 <main@@Base+0xb1ec>
   1a4a8:	cmp	r7, r5
   1a4ac:	beq	1a58c <main@@Base+0x4330>
   1a4b0:	ldrb	r0, [r7]
   1a4b4:	cmp	r0, #91	; 0x5b
   1a4b8:	bne	1a58c <main@@Base+0x4330>
   1a4bc:	ldr	sl, [sp, #36]	; 0x24
   1a4c0:	add	r1, r7, #1
   1a4c4:	sub	r0, r5, r1
   1a4c8:	cmp	r0, #2
   1a4cc:	blt	1a624 <main@@Base+0x43c8>
   1a4d0:	ldrb	r0, [r1]
   1a4d4:	cmp	r0, #32
   1a4d8:	bls	1a614 <main@@Base+0x43b8>
   1a4dc:	mov	r7, r1
   1a4e0:	b	1a634 <main@@Base+0x43d8>
   1a4e4:	movw	r0, #31088	; 0x7970
   1a4e8:	movt	r0, #24436	; 0x5f74
   1a4ec:	eor	r0, sl, r0
   1a4f0:	orrs	r0, r0, r4
   1a4f4:	bne	1a56c <main@@Base+0x4310>
   1a4f8:	add	r4, r9, #8
   1a4fc:	ldr	r8, [sp, #40]	; 0x28
   1a500:	ldr	sl, [sp, #36]	; 0x24
   1a504:	mov	r1, #8
   1a508:	sub	r0, r5, r4
   1a50c:	cmp	r0, #8
   1a510:	movcc	r1, r0
   1a514:	sub	r1, r1, #1
   1a518:	cmp	r1, #7
   1a51c:	bhi	20154 <main@@Base+0x9ef8>
   1a520:	ldrb	r1, [r4]
   1a524:	cmp	r1, #101	; 0x65
   1a528:	bne	20154 <main@@Base+0x9ef8>
   1a52c:	cmp	r0, #2
   1a530:	blt	20154 <main@@Base+0x9ef8>
   1a534:	ldr	r2, [sp, #32]
   1a538:	mov	r1, r9
   1a53c:	ldrb	r0, [r1, #9]!
   1a540:	ldr	r2, [r2]
   1a544:	cmp	r2, #0
   1a548:	beq	1a5e0 <main@@Base+0x4384>
   1a54c:	cmp	r0, #33	; 0x21
   1a550:	bcc	1a55c <main@@Base+0x4300>
   1a554:	cmp	r0, #58	; 0x3a
   1a558:	bne	20154 <main@@Base+0x9ef8>
   1a55c:	ldr	r0, [sp, #32]
   1a560:	mov	r2, #0
   1a564:	str	r2, [r0]
   1a568:	b	1a5ec <main@@Base+0x4390>
   1a56c:	ldr	r8, [sp, #40]	; 0x28
   1a570:	mov	r0, r8
   1a574:	mov	r1, r9
   1a578:	mov	r2, r5
   1a57c:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   1a580:	mov	r4, r0
   1a584:	ldr	sl, [sp, #36]	; 0x24
   1a588:	b	20168 <main@@Base+0x9f0c>
   1a58c:	mov	r0, r8
   1a590:	mov	r1, r7
   1a594:	mov	r2, r5
   1a598:	mov	r3, #22
   1a59c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1a5a0:	ldr	sl, [sp, #36]	; 0x24
   1a5a4:	mov	r7, r0
   1a5a8:	ldr	r0, [r8]
   1a5ac:	bl	320b0 <flatcc_builder_end_vector@@Base>
   1a5b0:	cmp	r0, #0
   1a5b4:	str	r0, [sp, #52]	; 0x34
   1a5b8:	beq	21448 <main@@Base+0xb1ec>
   1a5bc:	ldr	r0, [r8]
   1a5c0:	mov	r1, #31
   1a5c4:	bl	32630 <flatcc_builder_table_add_offset@@Base>
   1a5c8:	cmp	r0, #0
   1a5cc:	beq	21448 <main@@Base+0xb1ec>
   1a5d0:	ldr	r1, [sp, #52]	; 0x34
   1a5d4:	mov	r4, r7
   1a5d8:	str	r1, [r0]
   1a5dc:	b	20168 <main@@Base+0x9f0c>
   1a5e0:	cmp	r0, #34	; 0x22
   1a5e4:	bne	20154 <main@@Base+0x9ef8>
   1a5e8:	add	r1, r9, #10
   1a5ec:	sub	r0, r5, r1
   1a5f0:	cmp	r0, #2
   1a5f4:	blt	1a7f0 <main@@Base+0x4594>
   1a5f8:	ldrb	r0, [r1]
   1a5fc:	cmp	r0, #32
   1a600:	bls	1a7dc <main@@Base+0x4580>
   1a604:	mov	r2, r1
   1a608:	cmp	r2, r5
   1a60c:	bne	1a808 <main@@Base+0x45ac>
   1a610:	b	1a840 <main@@Base+0x45e4>
   1a614:	bne	1a624 <main@@Base+0x43c8>
   1a618:	ldrb	r0, [r7, #2]!
   1a61c:	cmp	r0, #32
   1a620:	bhi	1a634 <main@@Base+0x43d8>
   1a624:	mov	r0, r8
   1a628:	mov	r2, r5
   1a62c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a630:	mov	r7, r0
   1a634:	cmp	r7, r5
   1a638:	mov	r4, r5
   1a63c:	beq	1a680 <main@@Base+0x4424>
   1a640:	ldrb	r0, [r7]
   1a644:	cmp	r0, #93	; 0x5d
   1a648:	bne	1a67c <main@@Base+0x4420>
   1a64c:	add	r1, r7, #1
   1a650:	sub	r0, r5, r1
   1a654:	cmp	r0, #2
   1a658:	blt	1e124 <main@@Base+0x7ec8>
   1a65c:	ldrb	r0, [r1]
   1a660:	cmp	r0, #32
   1a664:	bhi	1a788 <main@@Base+0x452c>
   1a668:	bne	1e124 <main@@Base+0x7ec8>
   1a66c:	ldrb	r0, [r7, #2]!
   1a670:	cmp	r0, #32
   1a674:	bls	1e124 <main@@Base+0x7ec8>
   1a678:	b	1a5a8 <main@@Base+0x434c>
   1a67c:	mov	r4, r7
   1a680:	ldr	r0, [r8]
   1a684:	mov	r1, #1
   1a688:	bl	30274 <flatcc_builder_extend_vector@@Base>
   1a68c:	mov	r3, r0
   1a690:	cmp	r0, #0
   1a694:	beq	17324 <main@@Base+0x10c8>
   1a698:	mov	r0, r8
   1a69c:	mov	r1, r4
   1a6a0:	mov	r2, r5
   1a6a4:	bl	239c0 <main@@Base+0xd764>
   1a6a8:	mov	r1, r0
   1a6ac:	sub	r0, r5, r0
   1a6b0:	cmp	r0, #2
   1a6b4:	blt	1a6e8 <main@@Base+0x448c>
   1a6b8:	ldrb	r0, [r1]
   1a6bc:	cmp	r0, #32
   1a6c0:	bls	1a6d4 <main@@Base+0x4478>
   1a6c4:	mov	r4, r1
   1a6c8:	cmp	r4, r5
   1a6cc:	bne	1a700 <main@@Base+0x44a4>
   1a6d0:	b	1a790 <main@@Base+0x4534>
   1a6d4:	bne	1a6e8 <main@@Base+0x448c>
   1a6d8:	mov	r4, r1
   1a6dc:	ldrb	r0, [r4, #1]!
   1a6e0:	cmp	r0, #32
   1a6e4:	bhi	1a6f8 <main@@Base+0x449c>
   1a6e8:	mov	r0, r8
   1a6ec:	mov	r2, r5
   1a6f0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a6f4:	mov	r4, r0
   1a6f8:	cmp	r4, r5
   1a6fc:	beq	1a790 <main@@Base+0x4534>
   1a700:	ldrb	r0, [r4]
   1a704:	cmp	r0, #44	; 0x2c
   1a708:	bne	1a798 <main@@Base+0x453c>
   1a70c:	add	r1, r4, #1
   1a710:	sub	r0, r5, r1
   1a714:	cmp	r0, #2
   1a718:	blt	1a748 <main@@Base+0x44ec>
   1a71c:	ldrb	r0, [r1]
   1a720:	cmp	r0, #32
   1a724:	bls	1a738 <main@@Base+0x44dc>
   1a728:	mov	r4, r1
   1a72c:	cmp	r4, r5
   1a730:	bne	1a760 <main@@Base+0x4504>
   1a734:	b	1a7d0 <main@@Base+0x4574>
   1a738:	bne	1a748 <main@@Base+0x44ec>
   1a73c:	ldrb	r0, [r4, #2]!
   1a740:	cmp	r0, #32
   1a744:	bhi	1a758 <main@@Base+0x44fc>
   1a748:	mov	r0, r8
   1a74c:	mov	r2, r5
   1a750:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a754:	mov	r4, r0
   1a758:	cmp	r4, r5
   1a75c:	beq	1a7d0 <main@@Base+0x4574>
   1a760:	ldrb	r0, [r4]
   1a764:	cmp	r0, #93	; 0x5d
   1a768:	bne	1a680 <main@@Base+0x4424>
   1a76c:	add	r1, r4, #1
   1a770:	sub	r0, r5, r1
   1a774:	cmp	r0, #2
   1a778:	blt	1e124 <main@@Base+0x7ec8>
   1a77c:	ldrb	r0, [r1]
   1a780:	cmp	r0, #32
   1a784:	bls	1cce8 <main@@Base+0x6a8c>
   1a788:	mov	r7, r1
   1a78c:	b	1a5a8 <main@@Base+0x434c>
   1a790:	mov	r7, r5
   1a794:	b	1a5a8 <main@@Base+0x434c>
   1a798:	cmp	r0, #93	; 0x5d
   1a79c:	bne	1befc <main@@Base+0x5ca0>
   1a7a0:	add	r1, r4, #1
   1a7a4:	sub	r0, r5, r1
   1a7a8:	cmp	r0, #2
   1a7ac:	blt	1e124 <main@@Base+0x7ec8>
   1a7b0:	ldrb	r0, [r1]
   1a7b4:	cmp	r0, #32
   1a7b8:	bls	1e104 <main@@Base+0x7ea8>
   1a7bc:	ldr	r5, [sp, #44]	; 0x2c
   1a7c0:	ldr	r8, [sp, #40]	; 0x28
   1a7c4:	ldr	sl, [sp, #36]	; 0x24
   1a7c8:	mov	r7, r1
   1a7cc:	b	1a5a8 <main@@Base+0x434c>
   1a7d0:	mov	r0, r8
   1a7d4:	mov	r1, r5
   1a7d8:	b	1bf04 <main@@Base+0x5ca8>
   1a7dc:	bne	1a7f0 <main@@Base+0x4594>
   1a7e0:	mov	r2, r1
   1a7e4:	ldrb	r0, [r2, #1]!
   1a7e8:	cmp	r0, #32
   1a7ec:	bhi	1a800 <main@@Base+0x45a4>
   1a7f0:	mov	r0, r8
   1a7f4:	mov	r2, r5
   1a7f8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a7fc:	mov	r2, r0
   1a800:	cmp	r2, r5
   1a804:	beq	1a840 <main@@Base+0x45e4>
   1a808:	ldrb	r0, [r2]
   1a80c:	cmp	r0, #58	; 0x3a
   1a810:	bne	1a840 <main@@Base+0x45e4>
   1a814:	add	r1, r2, #1
   1a818:	sub	r0, r5, r1
   1a81c:	cmp	r0, #2
   1a820:	blt	1cd00 <main@@Base+0x6aa4>
   1a824:	ldrb	r0, [r1]
   1a828:	cmp	r0, #32
   1a82c:	bls	1ccf0 <main@@Base+0x6a94>
   1a830:	mov	r2, r1
   1a834:	cmp	r4, r2
   1a838:	bne	1cd18 <main@@Base+0x6abc>
   1a83c:	b	20154 <main@@Base+0x9ef8>
   1a840:	mov	r1, r2
   1a844:	mov	r0, r8
   1a848:	mov	r2, r5
   1a84c:	mov	r3, #4
   1a850:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1a854:	b	1cd0c <main@@Base+0x6ab0>
   1a858:	bne	1a868 <main@@Base+0x460c>
   1a85c:	ldrb	r0, [r7, #2]!
   1a860:	cmp	r0, #32
   1a864:	bhi	1a878 <main@@Base+0x461c>
   1a868:	mov	r0, r8
   1a86c:	mov	r2, r5
   1a870:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1a874:	mov	r7, r0
   1a878:	cmp	r9, r7
   1a87c:	beq	187e8 <main@@Base+0x258c>
   1a880:	sub	r4, r5, r7
   1a884:	mov	r0, #0
   1a888:	cmp	r4, #4
   1a88c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a890:	blt	1a8d4 <main@@Base+0x4678>
   1a894:	ldr	r1, [pc, #4088]	; 1b894 <main@@Base+0x5638>
   1a898:	mov	r0, r7
   1a89c:	mov	r2, #4
   1a8a0:	add	r1, pc, r1
   1a8a4:	bl	14eb4 <bcmp@plt>
   1a8a8:	cmp	r0, #0
   1a8ac:	beq	1a938 <main@@Base+0x46dc>
   1a8b0:	cmp	r4, #5
   1a8b4:	blt	1a8d4 <main@@Base+0x4678>
   1a8b8:	ldr	r1, [pc, #4056]	; 1b898 <main@@Base+0x563c>
   1a8bc:	mov	r0, r7
   1a8c0:	mov	r2, #5
   1a8c4:	add	r1, pc, r1
   1a8c8:	bl	14eb4 <bcmp@plt>
   1a8cc:	cmp	r0, #0
   1a8d0:	beq	1a9f8 <main@@Base+0x479c>
   1a8d4:	mov	r6, #0
   1a8d8:	cmp	r7, r5
   1a8dc:	str	r6, [fp, #-52]	; 0xffffffcc
   1a8e0:	str	r6, [fp, #-56]	; 0xffffffc8
   1a8e4:	str	r6, [sp, #56]	; 0x38
   1a8e8:	beq	1a930 <main@@Base+0x46d4>
   1a8ec:	sub	r0, fp, #56	; 0x38
   1a8f0:	mov	r1, r7
   1a8f4:	mov	r2, r5
   1a8f8:	add	r3, sp, #56	; 0x38
   1a8fc:	str	r0, [sp]
   1a900:	mov	r0, r8
   1a904:	bl	382dc <flatcc_json_parser_integer@@Base>
   1a908:	cmp	r0, r7
   1a90c:	beq	1a944 <main@@Base+0x46e8>
   1a910:	mov	r1, r0
   1a914:	ldr	r0, [sp, #56]	; 0x38
   1a918:	cmp	r0, #0
   1a91c:	beq	1a94c <main@@Base+0x46f0>
   1a920:	mov	r0, r8
   1a924:	mov	r2, r5
   1a928:	mov	r3, #8
   1a92c:	b	1a96c <main@@Base+0x4710>
   1a930:	mov	r4, r5
   1a934:	b	1a974 <main@@Base+0x4718>
   1a938:	mov	r6, #1
   1a93c:	add	r4, r7, #4
   1a940:	b	1a980 <main@@Base+0x4724>
   1a944:	mov	r4, r7
   1a948:	b	1a974 <main@@Base+0x4718>
   1a94c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a950:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a954:	subs	r3, r0, #256	; 0x100
   1a958:	sbcs	r2, r2, #0
   1a95c:	bcc	1aa04 <main@@Base+0x47a8>
   1a960:	mov	r0, r8
   1a964:	mov	r2, r5
   1a968:	mov	r3, #7
   1a96c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1a970:	mov	r4, r0
   1a974:	uxtb	r6, r6
   1a978:	cmp	r6, #0
   1a97c:	movwne	r6, #1
   1a980:	strb	r6, [fp, #-60]	; 0xffffffc4
   1a984:	cmp	r7, r4
   1a988:	bne	1a9c0 <main@@Base+0x4764>
   1a98c:	sub	r0, fp, #60	; 0x3c
   1a990:	mov	r1, r7
   1a994:	mov	r2, r5
   1a998:	str	r0, [sp]
   1a99c:	mov	r0, r8
   1a9a0:	ldr	r3, [pc, #3984]	; 1b938 <main@@Base+0x56dc>
   1a9a4:	add	r3, pc, r3
   1a9a8:	bl	255f4 <main@@Base+0xf398>
   1a9ac:	mov	r4, r0
   1a9b0:	cmp	r0, r7
   1a9b4:	cmpne	r4, r5
   1a9b8:	beq	17324 <main@@Base+0x10c8>
   1a9bc:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1a9c0:	cmp	r6, #1
   1a9c4:	bne	1a9d4 <main@@Base+0x4778>
   1a9c8:	ldrb	r0, [r8, #8]
   1a9cc:	tst	r0, #2
   1a9d0:	beq	20168 <main@@Base+0x9f0c>
   1a9d4:	ldr	r0, [r8]
   1a9d8:	mov	r1, #15
   1a9dc:	mov	r2, #1
   1a9e0:	mov	r3, #1
   1a9e4:	bl	327e4 <flatcc_builder_table_add@@Base>
   1a9e8:	cmp	r0, #0
   1a9ec:	beq	17324 <main@@Base+0x10c8>
   1a9f0:	strb	r6, [r0]
   1a9f4:	b	20168 <main@@Base+0x9f0c>
   1a9f8:	mov	r6, #0
   1a9fc:	add	r4, r7, #5
   1aa00:	b	1a980 <main@@Base+0x4724>
   1aa04:	mov	r6, r0
   1aa08:	mov	r4, r1
   1aa0c:	b	1a974 <main@@Base+0x4718>
   1aa10:	bne	1aa24 <main@@Base+0x47c8>
   1aa14:	mov	r4, r1
   1aa18:	ldrb	r0, [r4, #1]!
   1aa1c:	cmp	r0, #32
   1aa20:	bhi	1aa34 <main@@Base+0x47d8>
   1aa24:	ldr	r0, [sp, #40]	; 0x28
   1aa28:	mov	r2, r5
   1aa2c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1aa30:	mov	r4, r0
   1aa34:	cmp	r4, r5
   1aa38:	beq	1aa80 <main@@Base+0x4824>
   1aa3c:	ldrb	r0, [r4]
   1aa40:	cmp	r0, #58	; 0x3a
   1aa44:	bne	1aa80 <main@@Base+0x4824>
   1aa48:	add	r1, r4, #1
   1aa4c:	sub	r0, r5, r1
   1aa50:	cmp	r0, #2
   1aa54:	blt	1cd68 <main@@Base+0x6b0c>
   1aa58:	ldrb	r0, [r1]
   1aa5c:	cmp	r0, #32
   1aa60:	bls	1cd58 <main@@Base+0x6afc>
   1aa64:	mov	r4, r1
   1aa68:	cmp	r8, r4
   1aa6c:	bne	1cd80 <main@@Base+0x6b24>
   1aa70:	ldr	r0, [sp, #40]	; 0x28
   1aa74:	mov	r1, r8
   1aa78:	mov	r8, r0
   1aa7c:	b	2015c <main@@Base+0x9f00>
   1aa80:	ldr	r0, [sp, #40]	; 0x28
   1aa84:	mov	r1, r4
   1aa88:	mov	r2, r5
   1aa8c:	mov	r3, #4
   1aa90:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1aa94:	b	1cd74 <main@@Base+0x6b18>
   1aa98:	mov	r0, r8
   1aa9c:	mov	r1, r4
   1aaa0:	mov	r2, r5
   1aaa4:	mov	r3, #9
   1aaa8:	b	19d40 <main@@Base+0x3ae4>
   1aaac:	bne	1aabc <main@@Base+0x4860>
   1aab0:	ldrb	r0, [r4, #2]!
   1aab4:	cmp	r0, #32
   1aab8:	bhi	1aacc <main@@Base+0x4870>
   1aabc:	mov	r0, r6
   1aac0:	mov	r2, r5
   1aac4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1aac8:	mov	r4, r0
   1aacc:	cmp	sl, r4
   1aad0:	beq	1969c <main@@Base+0x3440>
   1aad4:	ldr	r8, [sp, #40]	; 0x28
   1aad8:	mov	r1, #1
   1aadc:	mov	r2, #1
   1aae0:	mvn	r3, #0
   1aae4:	ldr	r0, [r8]
   1aae8:	bl	30e38 <flatcc_builder_start_vector@@Base>
   1aaec:	cmp	r0, #0
   1aaf0:	bne	17324 <main@@Base+0x10c8>
   1aaf4:	ldr	sl, [sp, #36]	; 0x24
   1aaf8:	cmp	r4, r5
   1aafc:	beq	1ab34 <main@@Base+0x48d8>
   1ab00:	ldrb	r0, [r4]
   1ab04:	cmp	r0, #91	; 0x5b
   1ab08:	bne	1ab34 <main@@Base+0x48d8>
   1ab0c:	add	r1, r4, #1
   1ab10:	sub	r0, r5, r1
   1ab14:	cmp	r0, #2
   1ab18:	blt	1c1fc <main@@Base+0x5fa0>
   1ab1c:	ldrb	r0, [r1]
   1ab20:	cmp	r0, #32
   1ab24:	bls	1c1ec <main@@Base+0x5f90>
   1ab28:	mov	r4, r1
   1ab2c:	b	1c20c <main@@Base+0x5fb0>
   1ab30:	andeq	r5, r4, r0, asr r5
   1ab34:	mov	r0, r8
   1ab38:	mov	r1, r4
   1ab3c:	mov	r2, r5
   1ab40:	mov	r3, #22
   1ab44:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1ab48:	mov	r4, r0
   1ab4c:	ldr	r0, [r8]
   1ab50:	bl	320b0 <flatcc_builder_end_vector@@Base>
   1ab54:	cmp	r0, #0
   1ab58:	str	r0, [sp, #52]	; 0x34
   1ab5c:	beq	17324 <main@@Base+0x10c8>
   1ab60:	ldr	r0, [r8]
   1ab64:	mov	r1, #24
   1ab68:	b	19d64 <main@@Base+0x3b08>
   1ab6c:	cmp	r0, #34	; 0x22
   1ab70:	bne	1f6e4 <main@@Base+0x9488>
   1ab74:	add	r1, r9, #18
   1ab78:	sub	r0, r5, r1
   1ab7c:	cmp	r0, #2
   1ab80:	blt	1ceb0 <main@@Base+0x6c54>
   1ab84:	ldrb	r0, [r1]
   1ab88:	cmp	r0, #32
   1ab8c:	bls	1ce9c <main@@Base+0x6c40>
   1ab90:	mov	r9, r1
   1ab94:	cmp	r9, r5
   1ab98:	bne	1cec8 <main@@Base+0x6c6c>
   1ab9c:	b	1cf0c <main@@Base+0x6cb0>
   1aba0:	bne	1abb0 <main@@Base+0x4954>
   1aba4:	ldrb	r0, [r7, #2]!
   1aba8:	cmp	r0, #32
   1abac:	bhi	1abc0 <main@@Base+0x4964>
   1abb0:	mov	r0, r8
   1abb4:	mov	r2, r5
   1abb8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1abbc:	mov	r7, r0
   1abc0:	cmp	r9, r7
   1abc4:	beq	187e8 <main@@Base+0x258c>
   1abc8:	mov	r6, #0
   1abcc:	cmp	r7, r5
   1abd0:	str	r6, [fp, #-52]	; 0xffffffcc
   1abd4:	str	r6, [fp, #-56]	; 0xffffffc8
   1abd8:	strh	r6, [fp, #-60]	; 0xffffffc4
   1abdc:	str	r6, [sp, #56]	; 0x38
   1abe0:	beq	1ac44 <main@@Base+0x49e8>
   1abe4:	sub	r0, fp, #56	; 0x38
   1abe8:	mov	r1, r7
   1abec:	mov	r2, r5
   1abf0:	add	r3, sp, #56	; 0x38
   1abf4:	str	r0, [sp]
   1abf8:	mov	r0, r8
   1abfc:	bl	382dc <flatcc_json_parser_integer@@Base>
   1ac00:	cmp	r0, r7
   1ac04:	beq	1ac54 <main@@Base+0x49f8>
   1ac08:	ldr	r2, [sp, #56]	; 0x38
   1ac0c:	mov	r4, r0
   1ac10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ac14:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ac18:	cmp	r2, #0
   1ac1c:	beq	1ac64 <main@@Base+0x4a08>
   1ac20:	movw	r2, #32769	; 0x8001
   1ac24:	subs	r2, r0, r2
   1ac28:	sbcs	r1, r1, #0
   1ac2c:	bcc	1ac94 <main@@Base+0x4a38>
   1ac30:	mov	r0, r8
   1ac34:	mov	r1, r4
   1ac38:	mov	r2, r5
   1ac3c:	mov	r3, #8
   1ac40:	b	1ac80 <main@@Base+0x4a24>
   1ac44:	mov	r4, r5
   1ac48:	cmp	r7, r4
   1ac4c:	bne	1ace0 <main@@Base+0x4a84>
   1ac50:	b	1acac <main@@Base+0x4a50>
   1ac54:	mov	r4, r7
   1ac58:	cmp	r7, r4
   1ac5c:	bne	1ace0 <main@@Base+0x4a84>
   1ac60:	b	1acac <main@@Base+0x4a50>
   1ac64:	subs	r2, r0, #32768	; 0x8000
   1ac68:	sbcs	r1, r1, #0
   1ac6c:	bcc	1ac9c <main@@Base+0x4a40>
   1ac70:	mov	r0, r8
   1ac74:	mov	r1, r4
   1ac78:	mov	r2, r5
   1ac7c:	mov	r3, #7
   1ac80:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1ac84:	mov	r4, r0
   1ac88:	cmp	r7, r4
   1ac8c:	bne	1ace0 <main@@Base+0x4a84>
   1ac90:	b	1acac <main@@Base+0x4a50>
   1ac94:	rsb	r6, r0, #0
   1ac98:	b	1aca0 <main@@Base+0x4a44>
   1ac9c:	mov	r6, r0
   1aca0:	strh	r6, [fp, #-60]	; 0xffffffc4
   1aca4:	cmp	r7, r4
   1aca8:	bne	1ace0 <main@@Base+0x4a84>
   1acac:	sub	r0, fp, #60	; 0x3c
   1acb0:	mov	r1, r7
   1acb4:	mov	r2, r5
   1acb8:	str	r0, [sp]
   1acbc:	mov	r0, r8
   1acc0:	ldr	r3, [pc, #4028]	; 1bc84 <main@@Base+0x5a28>
   1acc4:	add	r3, pc, r3
   1acc8:	bl	237ac <main@@Base+0xd550>
   1accc:	mov	r4, r0
   1acd0:	cmp	r0, r7
   1acd4:	cmpne	r4, r5
   1acd8:	beq	17324 <main@@Base+0x10c8>
   1acdc:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1ace0:	uxth	r0, r6
   1ace4:	cmp	r0, #100	; 0x64
   1ace8:	bne	1acf8 <main@@Base+0x4a9c>
   1acec:	ldrb	r0, [r8, #8]
   1acf0:	tst	r0, #2
   1acf4:	beq	20168 <main@@Base+0x9f0c>
   1acf8:	ldr	r0, [r8]
   1acfc:	mov	r1, #2
   1ad00:	mov	r2, #2
   1ad04:	mov	r3, #2
   1ad08:	bl	327e4 <flatcc_builder_table_add@@Base>
   1ad0c:	cmp	r0, #0
   1ad10:	bne	1cad8 <main@@Base+0x687c>
   1ad14:	b	17324 <main@@Base+0x10c8>
   1ad18:	bne	1ad28 <main@@Base+0x4acc>
   1ad1c:	ldrb	r0, [r4, #2]!
   1ad20:	cmp	r0, #32
   1ad24:	bhi	1ad38 <main@@Base+0x4adc>
   1ad28:	mov	r0, r8
   1ad2c:	mov	r2, r5
   1ad30:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1ad34:	mov	r4, r0
   1ad38:	cmp	r9, r4
   1ad3c:	beq	187e8 <main@@Base+0x258c>
   1ad40:	ldr	r0, [r8]
   1ad44:	mov	r1, #0
   1ad48:	mov	r2, #32
   1ad4c:	mov	r3, #16
   1ad50:	bl	327e4 <flatcc_builder_table_add@@Base>
   1ad54:	cmp	r0, #0
   1ad58:	beq	17324 <main@@Base+0x10c8>
   1ad5c:	cmp	r4, r5
   1ad60:	beq	1ad98 <main@@Base+0x4b3c>
   1ad64:	mov	r9, r0
   1ad68:	ldrb	r0, [r4]
   1ad6c:	cmp	r0, #123	; 0x7b
   1ad70:	bne	1ad98 <main@@Base+0x4b3c>
   1ad74:	add	r1, r4, #1
   1ad78:	sub	r0, r5, r1
   1ad7c:	cmp	r0, #2
   1ad80:	blt	1adc0 <main@@Base+0x4b64>
   1ad84:	ldrb	r0, [r1]
   1ad88:	cmp	r0, #32
   1ad8c:	bls	1adb0 <main@@Base+0x4b54>
   1ad90:	mov	r4, r1
   1ad94:	b	1add0 <main@@Base+0x4b74>
   1ad98:	mov	r0, r8
   1ad9c:	mov	r1, r4
   1ada0:	mov	r2, r5
   1ada4:	mov	r3, #21
   1ada8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1adac:	b	20164 <main@@Base+0x9f08>
   1adb0:	bne	1adc0 <main@@Base+0x4b64>
   1adb4:	ldrb	r0, [r4, #2]!
   1adb8:	cmp	r0, #32
   1adbc:	bhi	1add0 <main@@Base+0x4b74>
   1adc0:	mov	r0, r8
   1adc4:	mov	r2, r5
   1adc8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1adcc:	mov	r4, r0
   1add0:	cmp	r4, r5
   1add4:	mov	r2, r5
   1add8:	beq	1ae1c <main@@Base+0x4bc0>
   1addc:	ldrb	r0, [r4]
   1ade0:	cmp	r0, #125	; 0x7d
   1ade4:	bne	1ae18 <main@@Base+0x4bbc>
   1ade8:	add	r1, r4, #1
   1adec:	sub	r0, r5, r1
   1adf0:	cmp	r0, #2
   1adf4:	blt	1ebd4 <main@@Base+0x8978>
   1adf8:	ldrb	r0, [r1]
   1adfc:	cmp	r0, #32
   1ae00:	bhi	1bb70 <main@@Base+0x5914>
   1ae04:	bne	1ebd4 <main@@Base+0x8978>
   1ae08:	ldrb	r0, [r4, #2]!
   1ae0c:	cmp	r0, #32
   1ae10:	bhi	20168 <main@@Base+0x9f0c>
   1ae14:	b	1ebd4 <main@@Base+0x8978>
   1ae18:	mov	r2, r4
   1ae1c:	add	r0, r9, #26
   1ae20:	str	r9, [sp, #24]
   1ae24:	str	r0, [sp, #20]
   1ae28:	cmp	r2, r5
   1ae2c:	mov	sl, r5
   1ae30:	beq	1ae88 <main@@Base+0x4c2c>
   1ae34:	ldrb	r0, [r2]
   1ae38:	cmp	r0, #46	; 0x2e
   1ae3c:	beq	1ae58 <main@@Base+0x4bfc>
   1ae40:	cmp	r0, #34	; 0x22
   1ae44:	bne	1ae78 <main@@Base+0x4c1c>
   1ae48:	ldr	r0, [sp, #32]
   1ae4c:	mov	r1, #0
   1ae50:	add	sl, r2, #1
   1ae54:	b	1ae84 <main@@Base+0x4c28>
   1ae58:	mov	r1, r2
   1ae5c:	mov	r0, r8
   1ae60:	mov	r2, r5
   1ae64:	mov	r3, #5
   1ae68:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1ae6c:	mov	sl, r0
   1ae70:	b	1ae88 <main@@Base+0x4c2c>
   1ae74:	strdeq	r5, [r4], -r4
   1ae78:	ldr	r0, [sp, #32]
   1ae7c:	mov	r1, #1
   1ae80:	mov	sl, r2
   1ae84:	str	r1, [r0]
   1ae88:	sub	ip, r5, sl
   1ae8c:	mov	r0, #8
   1ae90:	cmp	ip, #8
   1ae94:	movcc	r0, ip
   1ae98:	sub	r0, r0, #1
   1ae9c:	cmp	r0, #7
   1aea0:	bhi	1ba7c <main@@Base+0x5820>
   1aea4:	add	r2, pc, #36	; 0x24
   1aea8:	mov	r1, #0
   1aeac:	mov	lr, #0
   1aeb0:	mov	r8, #0
   1aeb4:	mov	r7, #0
   1aeb8:	mov	r3, #0
   1aebc:	mov	r6, #0
   1aec0:	mov	r5, #0
   1aec4:	ldr	r4, [r2, r0, lsl #2]
   1aec8:	mov	r0, #0
   1aecc:	add	pc, r2, r4
   1aed0:	andeq	r0, r0, r4, rrx
   1aed4:	andeq	r0, r0, ip, asr r0
   1aed8:	andeq	r0, r0, r4, asr r0
   1aedc:	andeq	r0, r0, ip, asr #32
   1aee0:	andeq	r0, r0, r0, asr #32
   1aee4:	andeq	r0, r0, r4, lsr r0
   1aee8:	andeq	r0, r0, r4, lsr #32
   1aeec:	andeq	r0, r0, r0, lsr #32
   1aef0:	ldrb	lr, [sl, #7]
   1aef4:	ldrb	r0, [sl, #6]
   1aef8:	mov	r8, r1
   1aefc:	orr	r0, lr, r0, lsl #8
   1af00:	mov	r1, r0
   1af04:	ldrb	r0, [sl, #5]
   1af08:	mov	r7, r8
   1af0c:	orr	r1, r1, r0, lsl #16
   1af10:	ldrb	r0, [sl, #4]
   1af14:	mov	r3, r7
   1af18:	orr	r1, r1, r0, lsl #24
   1af1c:	ldrb	r0, [sl, #3]
   1af20:	orr	r6, r0, r3
   1af24:	ldrb	r0, [sl, #2]
   1af28:	orr	r5, r6, r0, lsl #8
   1af2c:	ldrb	r0, [sl, #1]
   1af30:	orr	r0, r5, r0, lsl #16
   1af34:	ldrb	r2, [sl]
   1af38:	movw	r3, #29556	; 0x7374
   1af3c:	movt	r3, #29797	; 0x7465
   1af40:	orr	r2, r0, r2, lsl #24
   1af44:	mvn	r0, #-855638016	; 0xcd000000
   1af48:	subs	r0, r0, r1
   1af4c:	sbcs	r0, r3, r2
   1af50:	bcc	1afc4 <main@@Base+0x4d68>
   1af54:	ldr	r5, [sp, #44]	; 0x2c
   1af58:	ldr	r8, [sp, #40]	; 0x28
   1af5c:	and	r1, r1, #-16777216	; 0xff000000
   1af60:	eor	r0, r2, r3
   1af64:	eor	r2, r1, #822083584	; 0x31000000
   1af68:	orrs	r2, r2, r0
   1af6c:	beq	1b094 <main@@Base+0x4e38>
   1af70:	eor	r1, r1, #838860800	; 0x32000000
   1af74:	orrs	r0, r1, r0
   1af78:	bne	1ba7c <main@@Base+0x5820>
   1af7c:	cmp	ip, #6
   1af80:	mov	r9, sl
   1af84:	blt	1b554 <main@@Base+0x52f8>
   1af88:	ldr	r2, [sp, #32]
   1af8c:	mov	r1, sl
   1af90:	ldrb	r0, [r1, #5]!
   1af94:	ldr	r2, [r2]
   1af98:	cmp	r2, #0
   1af9c:	beq	1b17c <main@@Base+0x4f20>
   1afa0:	cmp	r0, #33	; 0x21
   1afa4:	bcc	1afb4 <main@@Base+0x4d58>
   1afa8:	cmp	r0, #58	; 0x3a
   1afac:	mov	r9, sl
   1afb0:	bne	1b554 <main@@Base+0x52f8>
   1afb4:	ldr	r0, [sp, #32]
   1afb8:	mov	r2, #0
   1afbc:	str	r2, [r0]
   1afc0:	b	1b18c <main@@Base+0x4f30>
   1afc4:	ldr	r5, [sp, #44]	; 0x2c
   1afc8:	ldr	r8, [sp, #40]	; 0x28
   1afcc:	cmn	r2, #-2013265919	; 0x88000001
   1afd0:	bhi	1b034 <main@@Base+0x4dd8>
   1afd4:	and	r1, r1, #-16777216	; 0xff000000
   1afd8:	eor	r0, r2, r3
   1afdc:	eor	r1, r1, #855638016	; 0x33000000
   1afe0:	orrs	r0, r1, r0
   1afe4:	bne	1ba7c <main@@Base+0x5820>
   1afe8:	cmp	ip, #6
   1afec:	mov	r1, sl
   1aff0:	blt	1b878 <main@@Base+0x561c>
   1aff4:	ldr	r1, [sp, #32]
   1aff8:	mov	r2, sl
   1affc:	ldrb	r0, [r2, #5]!
   1b000:	ldr	r1, [r1]
   1b004:	cmp	r1, #0
   1b008:	beq	1b1ec <main@@Base+0x4f90>
   1b00c:	cmp	r0, #33	; 0x21
   1b010:	bcc	1b020 <main@@Base+0x4dc4>
   1b014:	cmp	r0, #58	; 0x3a
   1b018:	mov	r1, sl
   1b01c:	bne	1b878 <main@@Base+0x561c>
   1b020:	ldr	r0, [sp, #32]
   1b024:	mov	r1, #0
   1b028:	str	r1, [r0]
   1b02c:	b	1b1fc <main@@Base+0x4fa0>
   1b030:	strheq	sl, [r0], -r0
   1b034:	lsr	r0, r2, #24
   1b038:	and	r1, r2, #-16777216	; 0xff000000
   1b03c:	cmp	r0, #120	; 0x78
   1b040:	bhi	1b0dc <main@@Base+0x4e80>
   1b044:	teq	r1, #2013265920	; 0x78000000
   1b048:	bne	1ba7c <main@@Base+0x5820>
   1b04c:	cmp	ip, #2
   1b050:	mov	r7, sl
   1b054:	blt	1b8c8 <main@@Base+0x566c>
   1b058:	ldr	r2, [sp, #32]
   1b05c:	mov	r1, sl
   1b060:	ldrb	r0, [r1, #1]!
   1b064:	ldr	r2, [r2]
   1b068:	cmp	r2, #0
   1b06c:	beq	1b224 <main@@Base+0x4fc8>
   1b070:	cmp	r0, #33	; 0x21
   1b074:	bcc	1b084 <main@@Base+0x4e28>
   1b078:	cmp	r0, #58	; 0x3a
   1b07c:	mov	r7, sl
   1b080:	bne	1b8c8 <main@@Base+0x566c>
   1b084:	ldr	r0, [sp, #32]
   1b088:	mov	r2, #0
   1b08c:	str	r2, [r0]
   1b090:	b	1b234 <main@@Base+0x4fd8>
   1b094:	cmp	ip, #6
   1b098:	mov	r7, sl
   1b09c:	blt	1b68c <main@@Base+0x5430>
   1b0a0:	ldr	r2, [sp, #32]
   1b0a4:	mov	r1, sl
   1b0a8:	ldrb	r0, [r1, #5]!
   1b0ac:	ldr	r2, [r2]
   1b0b0:	cmp	r2, #0
   1b0b4:	beq	1b1b4 <main@@Base+0x4f58>
   1b0b8:	cmp	r0, #33	; 0x21
   1b0bc:	bcc	1b0cc <main@@Base+0x4e70>
   1b0c0:	cmp	r0, #58	; 0x3a
   1b0c4:	mov	r7, sl
   1b0c8:	bne	1b68c <main@@Base+0x5430>
   1b0cc:	ldr	r0, [sp, #32]
   1b0d0:	mov	r2, #0
   1b0d4:	str	r2, [r0]
   1b0d8:	b	1b1c4 <main@@Base+0x4f68>
   1b0dc:	teq	r1, #2030043136	; 0x79000000
   1b0e0:	beq	1b134 <main@@Base+0x4ed8>
   1b0e4:	teq	r1, #2046820352	; 0x7a000000
   1b0e8:	bne	1ba7c <main@@Base+0x5820>
   1b0ec:	cmp	ip, #2
   1b0f0:	mov	r7, sl
   1b0f4:	blt	1b968 <main@@Base+0x570c>
   1b0f8:	ldr	r2, [sp, #32]
   1b0fc:	mov	r1, sl
   1b100:	ldrb	r0, [r1, #1]!
   1b104:	ldr	r2, [r2]
   1b108:	cmp	r2, #0
   1b10c:	beq	1b388 <main@@Base+0x512c>
   1b110:	cmp	r0, #33	; 0x21
   1b114:	bcc	1b124 <main@@Base+0x4ec8>
   1b118:	cmp	r0, #58	; 0x3a
   1b11c:	mov	r7, sl
   1b120:	bne	1b968 <main@@Base+0x570c>
   1b124:	ldr	r0, [sp, #32]
   1b128:	mov	r2, #0
   1b12c:	str	r2, [r0]
   1b130:	b	1b398 <main@@Base+0x513c>
   1b134:	cmp	ip, #2
   1b138:	mov	r7, sl
   1b13c:	blt	1ba08 <main@@Base+0x57ac>
   1b140:	ldr	r2, [sp, #32]
   1b144:	mov	r1, sl
   1b148:	ldrb	r0, [r1, #1]!
   1b14c:	ldr	r2, [r2]
   1b150:	cmp	r2, #0
   1b154:	beq	1b3c8 <main@@Base+0x516c>
   1b158:	cmp	r0, #33	; 0x21
   1b15c:	bcc	1b16c <main@@Base+0x4f10>
   1b160:	cmp	r0, #58	; 0x3a
   1b164:	mov	r7, sl
   1b168:	bne	1ba08 <main@@Base+0x57ac>
   1b16c:	ldr	r0, [sp, #32]
   1b170:	mov	r2, #0
   1b174:	str	r2, [r0]
   1b178:	b	1b3d8 <main@@Base+0x517c>
   1b17c:	cmp	r0, #34	; 0x22
   1b180:	mov	r9, sl
   1b184:	bne	1b554 <main@@Base+0x52f8>
   1b188:	add	r1, sl, #6
   1b18c:	sub	r0, r5, r1
   1b190:	cmp	r0, #2
   1b194:	blt	1b274 <main@@Base+0x5018>
   1b198:	ldrb	r0, [r1]
   1b19c:	cmp	r0, #32
   1b1a0:	bls	1b260 <main@@Base+0x5004>
   1b1a4:	mov	r9, r1
   1b1a8:	cmp	r9, r5
   1b1ac:	bne	1b28c <main@@Base+0x5030>
   1b1b0:	b	1b2e8 <main@@Base+0x508c>
   1b1b4:	cmp	r0, #34	; 0x22
   1b1b8:	mov	r7, sl
   1b1bc:	bne	1b68c <main@@Base+0x5430>
   1b1c0:	add	r1, sl, #6
   1b1c4:	sub	r0, r5, r1
   1b1c8:	cmp	r0, #2
   1b1cc:	blt	1b314 <main@@Base+0x50b8>
   1b1d0:	ldrb	r0, [r1]
   1b1d4:	cmp	r0, #32
   1b1d8:	bls	1b300 <main@@Base+0x50a4>
   1b1dc:	mov	r7, r1
   1b1e0:	cmp	r7, r5
   1b1e4:	bne	1b32c <main@@Base+0x50d0>
   1b1e8:	b	1b370 <main@@Base+0x5114>
   1b1ec:	cmp	r0, #34	; 0x22
   1b1f0:	mov	r1, sl
   1b1f4:	bne	1b878 <main@@Base+0x561c>
   1b1f8:	add	r2, sl, #6
   1b1fc:	sub	r0, r5, r2
   1b200:	cmp	r0, #2
   1b204:	blt	1b41c <main@@Base+0x51c0>
   1b208:	ldrb	r0, [r2]
   1b20c:	cmp	r0, #32
   1b210:	bls	1b408 <main@@Base+0x51ac>
   1b214:	mov	r1, r2
   1b218:	cmp	r1, r5
   1b21c:	bne	1b438 <main@@Base+0x51dc>
   1b220:	b	1b47c <main@@Base+0x5220>
   1b224:	cmp	r0, #34	; 0x22
   1b228:	mov	r7, sl
   1b22c:	bne	1b8c8 <main@@Base+0x566c>
   1b230:	add	r1, sl, #2
   1b234:	sub	r0, r5, r1
   1b238:	cmp	r0, #2
   1b23c:	blt	1b4a8 <main@@Base+0x524c>
   1b240:	ldrb	r0, [r1]
   1b244:	cmp	r0, #32
   1b248:	bls	1b490 <main@@Base+0x5234>
   1b24c:	ldr	r5, [sp, #44]	; 0x2c
   1b250:	mov	r7, r1
   1b254:	cmp	r7, r5
   1b258:	bne	1b4c0 <main@@Base+0x5264>
   1b25c:	b	1b500 <main@@Base+0x52a4>
   1b260:	bne	1b274 <main@@Base+0x5018>
   1b264:	mov	r9, r1
   1b268:	ldrb	r0, [r9, #1]!
   1b26c:	cmp	r0, #32
   1b270:	bhi	1b284 <main@@Base+0x5028>
   1b274:	mov	r0, r8
   1b278:	mov	r2, r5
   1b27c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1b280:	mov	r9, r0
   1b284:	cmp	r9, r5
   1b288:	beq	1b2e8 <main@@Base+0x508c>
   1b28c:	ldrb	r0, [r9]
   1b290:	cmp	r0, #58	; 0x3a
   1b294:	bne	1b2e8 <main@@Base+0x508c>
   1b298:	add	r1, r9, #1
   1b29c:	sub	r0, r5, r1
   1b2a0:	cmp	r0, #2
   1b2a4:	blt	1b544 <main@@Base+0x52e8>
   1b2a8:	ldrb	r0, [r1]
   1b2ac:	cmp	r0, #32
   1b2b0:	bls	1b52c <main@@Base+0x52d0>
   1b2b4:	ldr	r5, [sp, #44]	; 0x2c
   1b2b8:	ldr	r8, [sp, #40]	; 0x28
   1b2bc:	mov	r9, r1
   1b2c0:	cmp	sl, r9
   1b2c4:	bne	1b55c <main@@Base+0x5300>
   1b2c8:	mov	r0, r8
   1b2cc:	mov	r1, sl
   1b2d0:	mov	r2, r5
   1b2d4:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   1b2d8:	ldr	sl, [sp, #36]	; 0x24
   1b2dc:	ldr	r9, [sp, #24]
   1b2e0:	mov	r1, r0
   1b2e4:	b	1ba94 <main@@Base+0x5838>
   1b2e8:	mov	r0, r8
   1b2ec:	mov	r1, r9
   1b2f0:	mov	r2, r5
   1b2f4:	mov	r3, #4
   1b2f8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1b2fc:	b	1b550 <main@@Base+0x52f4>
   1b300:	bne	1b314 <main@@Base+0x50b8>
   1b304:	mov	r7, r1
   1b308:	ldrb	r0, [r7, #1]!
   1b30c:	cmp	r0, #32
   1b310:	bhi	1b324 <main@@Base+0x50c8>
   1b314:	mov	r0, r8
   1b318:	mov	r2, r5
   1b31c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1b320:	mov	r7, r0
   1b324:	cmp	r7, r5
   1b328:	beq	1b370 <main@@Base+0x5114>
   1b32c:	ldrb	r0, [r7]
   1b330:	cmp	r0, #58	; 0x3a
   1b334:	bne	1b370 <main@@Base+0x5114>
   1b338:	add	r1, r7, #1
   1b33c:	sub	r0, r5, r1
   1b340:	cmp	r0, #2
   1b344:	blt	1b67c <main@@Base+0x5420>
   1b348:	ldrb	r0, [r1]
   1b34c:	cmp	r0, #32
   1b350:	bls	1b660 <main@@Base+0x5404>
   1b354:	ldr	r5, [sp, #44]	; 0x2c
   1b358:	ldr	r8, [sp, #40]	; 0x28
   1b35c:	ldr	r9, [sp, #24]
   1b360:	mov	r7, r1
   1b364:	cmp	sl, r7
   1b368:	bne	1b694 <main@@Base+0x5438>
   1b36c:	b	1ba7c <main@@Base+0x5820>
   1b370:	mov	r0, r8
   1b374:	mov	r1, r7
   1b378:	mov	r2, r5
   1b37c:	mov	r3, #4
   1b380:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1b384:	b	1b688 <main@@Base+0x542c>
   1b388:	cmp	r0, #34	; 0x22
   1b38c:	mov	r7, sl
   1b390:	bne	1b968 <main@@Base+0x570c>
   1b394:	add	r1, sl, #2
   1b398:	ldr	r4, [sp, #44]	; 0x2c
   1b39c:	sub	r0, r4, r1
   1b3a0:	cmp	r0, #2
   1b3a4:	blt	1b718 <main@@Base+0x54bc>
   1b3a8:	ldrb	r0, [r1]
   1b3ac:	cmp	r0, #32
   1b3b0:	bls	1b700 <main@@Base+0x54a4>
   1b3b4:	ldr	r4, [sp, #44]	; 0x2c
   1b3b8:	mov	r7, r1
   1b3bc:	cmp	r7, r4
   1b3c0:	bne	1b730 <main@@Base+0x54d4>
   1b3c4:	b	1b774 <main@@Base+0x5518>
   1b3c8:	cmp	r0, #34	; 0x22
   1b3cc:	mov	r7, sl
   1b3d0:	bne	1ba08 <main@@Base+0x57ac>
   1b3d4:	add	r1, sl, #2
   1b3d8:	ldr	r4, [sp, #44]	; 0x2c
   1b3dc:	sub	r0, r4, r1
   1b3e0:	cmp	r0, #2
   1b3e4:	blt	1b7bc <main@@Base+0x5560>
   1b3e8:	ldrb	r0, [r1]
   1b3ec:	cmp	r0, #32
   1b3f0:	bls	1b7a4 <main@@Base+0x5548>
   1b3f4:	ldr	r4, [sp, #44]	; 0x2c
   1b3f8:	mov	r7, r1
   1b3fc:	cmp	r7, r4
   1b400:	bne	1b7d4 <main@@Base+0x5578>
   1b404:	b	1b818 <main@@Base+0x55bc>
   1b408:	bne	1b41c <main@@Base+0x51c0>
   1b40c:	mov	r1, r2
   1b410:	ldrb	r0, [r1, #1]!
   1b414:	cmp	r0, #32
   1b418:	bhi	1b430 <main@@Base+0x51d4>
   1b41c:	mov	r1, r2
   1b420:	mov	r0, r8
   1b424:	mov	r2, r5
   1b428:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1b42c:	mov	r1, r0
   1b430:	cmp	r1, r5
   1b434:	beq	1b47c <main@@Base+0x5220>
   1b438:	ldrb	r0, [r1]
   1b43c:	cmp	r0, #58	; 0x3a
   1b440:	bne	1b47c <main@@Base+0x5220>
   1b444:	add	r2, r1, #1
   1b448:	sub	r0, r5, r2
   1b44c:	cmp	r0, #2
   1b450:	blt	1b864 <main@@Base+0x5608>
   1b454:	ldrb	r0, [r2]
   1b458:	cmp	r0, #32
   1b45c:	bls	1b848 <main@@Base+0x55ec>
   1b460:	ldr	r5, [sp, #44]	; 0x2c
   1b464:	ldr	r8, [sp, #40]	; 0x28
   1b468:	ldr	r9, [sp, #24]
   1b46c:	mov	r1, r2
   1b470:	cmp	sl, r1
   1b474:	bne	1b880 <main@@Base+0x5624>
   1b478:	b	1ba7c <main@@Base+0x5820>
   1b47c:	mov	r0, r8
   1b480:	mov	r2, r5
   1b484:	mov	r3, #4
   1b488:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1b48c:	b	1b874 <main@@Base+0x5618>
   1b490:	ldr	r5, [sp, #44]	; 0x2c
   1b494:	bne	1b4a8 <main@@Base+0x524c>
   1b498:	mov	r7, r1
   1b49c:	ldrb	r0, [r7, #1]!
   1b4a0:	cmp	r0, #32
   1b4a4:	bhi	1b4b8 <main@@Base+0x525c>
   1b4a8:	ldr	r0, [sp, #40]	; 0x28
   1b4ac:	mov	r2, r5
   1b4b0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1b4b4:	mov	r7, r0
   1b4b8:	cmp	r7, r5
   1b4bc:	beq	1b500 <main@@Base+0x52a4>
   1b4c0:	ldrb	r0, [r7]
   1b4c4:	cmp	r0, #58	; 0x3a
   1b4c8:	bne	1b500 <main@@Base+0x52a4>
   1b4cc:	ldr	r8, [sp, #40]	; 0x28
   1b4d0:	ldr	r9, [sp, #24]
   1b4d4:	add	r1, r7, #1
   1b4d8:	sub	r0, r5, r1
   1b4dc:	cmp	r0, #2
   1b4e0:	blt	1b8b8 <main@@Base+0x565c>
   1b4e4:	ldrb	r0, [r1]
   1b4e8:	cmp	r0, #32
   1b4ec:	bls	1b89c <main@@Base+0x5640>
   1b4f0:	ldr	r5, [sp, #44]	; 0x2c
   1b4f4:	ldr	r8, [sp, #40]	; 0x28
   1b4f8:	mov	r7, r1
   1b4fc:	b	1b51c <main@@Base+0x52c0>
   1b500:	ldr	r8, [sp, #40]	; 0x28
   1b504:	mov	r1, r7
   1b508:	mov	r2, r5
   1b50c:	mov	r3, #4
   1b510:	mov	r0, r8
   1b514:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1b518:	mov	r7, r0
   1b51c:	ldr	r9, [sp, #24]
   1b520:	cmp	sl, r7
   1b524:	bne	1b8d0 <main@@Base+0x5674>
   1b528:	b	1ba7c <main@@Base+0x5820>
   1b52c:	ldr	r5, [sp, #44]	; 0x2c
   1b530:	ldr	r8, [sp, #40]	; 0x28
   1b534:	bne	1b544 <main@@Base+0x52e8>
   1b538:	ldrb	r0, [r9, #2]!
   1b53c:	cmp	r0, #32
   1b540:	bhi	1b554 <main@@Base+0x52f8>
   1b544:	mov	r0, r8
   1b548:	mov	r2, r5
   1b54c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1b550:	mov	r9, r0
   1b554:	cmp	sl, r9
   1b558:	beq	1b2c8 <main@@Base+0x506c>
   1b55c:	mov	r4, #0
   1b560:	cmp	r9, r5
   1b564:	str	r4, [fp, #-52]	; 0xffffffcc
   1b568:	str	r4, [fp, #-56]	; 0xffffffc8
   1b56c:	strb	r4, [fp, #-60]	; 0xffffffc4
   1b570:	str	r4, [sp, #56]	; 0x38
   1b574:	beq	1b5d0 <main@@Base+0x5374>
   1b578:	sub	r0, fp, #56	; 0x38
   1b57c:	mov	r1, r9
   1b580:	mov	r2, r5
   1b584:	add	r3, sp, #56	; 0x38
   1b588:	str	r0, [sp]
   1b58c:	mov	r0, r8
   1b590:	bl	382dc <flatcc_json_parser_integer@@Base>
   1b594:	cmp	r0, r9
   1b598:	beq	1b5d8 <main@@Base+0x537c>
   1b59c:	ldr	r3, [sp, #56]	; 0x38
   1b5a0:	mov	r1, r0
   1b5a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b5a8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b5ac:	cmp	r3, #0
   1b5b0:	beq	1b5e0 <main@@Base+0x5384>
   1b5b4:	subs	r3, r0, #129	; 0x81
   1b5b8:	sbcs	r2, r2, #0
   1b5bc:	bcc	1b604 <main@@Base+0x53a8>
   1b5c0:	mov	r0, r8
   1b5c4:	mov	r2, r5
   1b5c8:	mov	r3, #8
   1b5cc:	b	1b5f8 <main@@Base+0x539c>
   1b5d0:	mov	r1, r5
   1b5d4:	b	1b614 <main@@Base+0x53b8>
   1b5d8:	mov	r1, r9
   1b5dc:	b	1b614 <main@@Base+0x53b8>
   1b5e0:	subs	r3, r0, #128	; 0x80
   1b5e4:	sbcs	r2, r2, #0
   1b5e8:	bcc	1b60c <main@@Base+0x53b0>
   1b5ec:	mov	r0, r8
   1b5f0:	mov	r2, r5
   1b5f4:	mov	r3, #7
   1b5f8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1b5fc:	mov	r1, r0
   1b600:	b	1b614 <main@@Base+0x53b8>
   1b604:	rsb	r4, r0, #0
   1b608:	b	1b610 <main@@Base+0x53b4>
   1b60c:	mov	r4, r0
   1b610:	strb	r4, [fp, #-60]	; 0xffffffc4
   1b614:	ldr	sl, [sp, #36]	; 0x24
   1b618:	cmp	r9, r1
   1b61c:	bne	1b654 <main@@Base+0x53f8>
   1b620:	sub	r0, fp, #60	; 0x3c
   1b624:	mov	r1, r9
   1b628:	mov	r2, r5
   1b62c:	str	r0, [sp]
   1b630:	mov	r0, r8
   1b634:	ldr	r3, [pc, #4060]	; 1c618 <main@@Base+0x63bc>
   1b638:	add	r3, pc, r3
   1b63c:	bl	23394 <main@@Base+0xd138>
   1b640:	mov	r1, r0
   1b644:	cmp	r0, r9
   1b648:	cmpne	r1, r5
   1b64c:	beq	1bb78 <main@@Base+0x591c>
   1b650:	ldrb	r4, [fp, #-60]	; 0xffffffc4
   1b654:	ldr	r9, [sp, #24]
   1b658:	strb	r4, [r9, #24]
   1b65c:	b	1ba94 <main@@Base+0x5838>
   1b660:	ldr	r5, [sp, #44]	; 0x2c
   1b664:	ldr	r8, [sp, #40]	; 0x28
   1b668:	ldr	r9, [sp, #24]
   1b66c:	bne	1b67c <main@@Base+0x5420>
   1b670:	ldrb	r0, [r7, #2]!
   1b674:	cmp	r0, #32
   1b678:	bhi	1b68c <main@@Base+0x5430>
   1b67c:	mov	r0, r8
   1b680:	mov	r2, r5
   1b684:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1b688:	mov	r7, r0
   1b68c:	cmp	sl, r7
   1b690:	beq	1ba7c <main@@Base+0x5820>
   1b694:	mov	r0, #0
   1b698:	mov	r1, r7
   1b69c:	mov	r2, r5
   1b6a0:	sub	r3, fp, #56	; 0x38
   1b6a4:	str	r0, [fp, #-52]	; 0xffffffcc
   1b6a8:	str	r0, [fp, #-56]	; 0xffffffc8
   1b6ac:	mov	r0, r8
   1b6b0:	bl	377d8 <flatcc_json_parser_double@@Base>
   1b6b4:	ldr	sl, [sp, #36]	; 0x24
   1b6b8:	mov	r1, r0
   1b6bc:	cmp	r7, r0
   1b6c0:	bne	1b6f4 <main@@Base+0x5498>
   1b6c4:	sub	r0, fp, #56	; 0x38
   1b6c8:	mov	r1, r7
   1b6cc:	mov	r2, r5
   1b6d0:	str	r0, [sp]
   1b6d4:	mov	r0, r8
   1b6d8:	ldr	r3, [pc, #4012]	; 1c68c <main@@Base+0x6430>
   1b6dc:	add	r3, pc, r3
   1b6e0:	bl	26188 <main@@Base+0xff2c>
   1b6e4:	mov	r1, r0
   1b6e8:	cmp	r0, r7
   1b6ec:	cmpne	r1, r5
   1b6f0:	beq	1bb78 <main@@Base+0x591c>
   1b6f4:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1b6f8:	vstr	d16, [r9, #16]
   1b6fc:	b	1ba94 <main@@Base+0x5838>
   1b700:	ldr	r4, [sp, #44]	; 0x2c
   1b704:	bne	1b718 <main@@Base+0x54bc>
   1b708:	mov	r7, r1
   1b70c:	ldrb	r0, [r7, #1]!
   1b710:	cmp	r0, #32
   1b714:	bhi	1b728 <main@@Base+0x54cc>
   1b718:	ldr	r0, [sp, #40]	; 0x28
   1b71c:	mov	r2, r4
   1b720:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1b724:	mov	r7, r0
   1b728:	cmp	r7, r4
   1b72c:	beq	1b774 <main@@Base+0x5518>
   1b730:	ldrb	r0, [r7]
   1b734:	cmp	r0, #58	; 0x3a
   1b738:	bne	1b774 <main@@Base+0x5518>
   1b73c:	ldr	r5, [sp, #44]	; 0x2c
   1b740:	ldr	r8, [sp, #40]	; 0x28
   1b744:	ldr	r9, [sp, #24]
   1b748:	add	r1, r7, #1
   1b74c:	sub	r0, r5, r1
   1b750:	cmp	r0, #2
   1b754:	blt	1b958 <main@@Base+0x56fc>
   1b758:	ldrb	r0, [r1]
   1b75c:	cmp	r0, #32
   1b760:	bls	1b93c <main@@Base+0x56e0>
   1b764:	ldr	r5, [sp, #44]	; 0x2c
   1b768:	ldr	r8, [sp, #40]	; 0x28
   1b76c:	mov	r7, r1
   1b770:	b	1b794 <main@@Base+0x5538>
   1b774:	ldr	r8, [sp, #40]	; 0x28
   1b778:	ldr	r5, [sp, #44]	; 0x2c
   1b77c:	mov	r1, r7
   1b780:	mov	r3, #4
   1b784:	mov	r0, r8
   1b788:	mov	r2, r5
   1b78c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1b790:	mov	r7, r0
   1b794:	ldr	r9, [sp, #24]
   1b798:	cmp	sl, r7
   1b79c:	bne	1b970 <main@@Base+0x5714>
   1b7a0:	b	1ba7c <main@@Base+0x5820>
   1b7a4:	ldr	r4, [sp, #44]	; 0x2c
   1b7a8:	bne	1b7bc <main@@Base+0x5560>
   1b7ac:	mov	r7, r1
   1b7b0:	ldrb	r0, [r7, #1]!
   1b7b4:	cmp	r0, #32
   1b7b8:	bhi	1b7cc <main@@Base+0x5570>
   1b7bc:	ldr	r0, [sp, #40]	; 0x28
   1b7c0:	mov	r2, r4
   1b7c4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1b7c8:	mov	r7, r0
   1b7cc:	cmp	r7, r4
   1b7d0:	beq	1b818 <main@@Base+0x55bc>
   1b7d4:	ldrb	r0, [r7]
   1b7d8:	cmp	r0, #58	; 0x3a
   1b7dc:	bne	1b818 <main@@Base+0x55bc>
   1b7e0:	ldr	r5, [sp, #44]	; 0x2c
   1b7e4:	ldr	r8, [sp, #40]	; 0x28
   1b7e8:	ldr	r9, [sp, #24]
   1b7ec:	add	r1, r7, #1
   1b7f0:	sub	r0, r5, r1
   1b7f4:	cmp	r0, #2
   1b7f8:	blt	1b9f8 <main@@Base+0x579c>
   1b7fc:	ldrb	r0, [r1]
   1b800:	cmp	r0, #32
   1b804:	bls	1b9dc <main@@Base+0x5780>
   1b808:	ldr	r5, [sp, #44]	; 0x2c
   1b80c:	ldr	r8, [sp, #40]	; 0x28
   1b810:	mov	r7, r1
   1b814:	b	1b838 <main@@Base+0x55dc>
   1b818:	ldr	r8, [sp, #40]	; 0x28
   1b81c:	ldr	r5, [sp, #44]	; 0x2c
   1b820:	mov	r1, r7
   1b824:	mov	r3, #4
   1b828:	mov	r0, r8
   1b82c:	mov	r2, r5
   1b830:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1b834:	mov	r7, r0
   1b838:	ldr	r9, [sp, #24]
   1b83c:	cmp	sl, r7
   1b840:	bne	1ba10 <main@@Base+0x57b4>
   1b844:	b	1ba7c <main@@Base+0x5820>
   1b848:	ldr	r5, [sp, #44]	; 0x2c
   1b84c:	ldr	r8, [sp, #40]	; 0x28
   1b850:	ldr	r9, [sp, #24]
   1b854:	bne	1b864 <main@@Base+0x5608>
   1b858:	ldrb	r0, [r1, #2]!
   1b85c:	cmp	r0, #32
   1b860:	bhi	1b878 <main@@Base+0x561c>
   1b864:	mov	r1, r2
   1b868:	mov	r0, r8
   1b86c:	mov	r2, r5
   1b870:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1b874:	mov	r1, r0
   1b878:	cmp	sl, r1
   1b87c:	beq	1ba7c <main@@Base+0x5820>
   1b880:	ldr	r3, [sp, #20]
   1b884:	mov	r0, r8
   1b888:	mov	r2, r5
   1b88c:	bl	239c0 <main@@Base+0xd764>
   1b890:	b	1ba8c <main@@Base+0x5830>
   1b894:	andeq	r0, r3, r9, lsl r8
   1b898:	strdeq	r0, [r3], -sl
   1b89c:	ldr	r5, [sp, #44]	; 0x2c
   1b8a0:	ldr	r8, [sp, #40]	; 0x28
   1b8a4:	ldr	r9, [sp, #24]
   1b8a8:	bne	1b8b8 <main@@Base+0x565c>
   1b8ac:	ldrb	r0, [r7, #2]!
   1b8b0:	cmp	r0, #32
   1b8b4:	bhi	1b8c8 <main@@Base+0x566c>
   1b8b8:	mov	r0, r8
   1b8bc:	mov	r2, r5
   1b8c0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1b8c4:	mov	r7, r0
   1b8c8:	cmp	sl, r7
   1b8cc:	beq	1ba7c <main@@Base+0x5820>
   1b8d0:	mov	r0, #0
   1b8d4:	mov	r1, r7
   1b8d8:	mov	r2, r5
   1b8dc:	sub	r3, fp, #56	; 0x38
   1b8e0:	str	r0, [fp, #-56]	; 0xffffffc8
   1b8e4:	mov	r0, r8
   1b8e8:	bl	38198 <flatcc_json_parser_float@@Base>
   1b8ec:	ldr	sl, [sp, #36]	; 0x24
   1b8f0:	mov	r1, r0
   1b8f4:	cmp	r7, r0
   1b8f8:	bne	1b92c <main@@Base+0x56d0>
   1b8fc:	sub	r0, fp, #56	; 0x38
   1b900:	mov	r1, r7
   1b904:	mov	r2, r5
   1b908:	str	r0, [sp]
   1b90c:	mov	r0, r8
   1b910:	ldr	r3, [pc, #4056]	; 1c8f0 <main@@Base+0x6694>
   1b914:	add	r3, pc, r3
   1b918:	bl	257cc <main@@Base+0xf570>
   1b91c:	mov	r1, r0
   1b920:	cmp	r0, r7
   1b924:	cmpne	r1, r5
   1b928:	beq	1bb78 <main@@Base+0x591c>
   1b92c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b930:	str	r0, [r9]
   1b934:	b	1ba94 <main@@Base+0x5838>
   1b938:	andeq	r4, r4, ip, lsr r7
   1b93c:	ldr	r5, [sp, #44]	; 0x2c
   1b940:	ldr	r8, [sp, #40]	; 0x28
   1b944:	ldr	r9, [sp, #24]
   1b948:	bne	1b958 <main@@Base+0x56fc>
   1b94c:	ldrb	r0, [r7, #2]!
   1b950:	cmp	r0, #32
   1b954:	bhi	1b968 <main@@Base+0x570c>
   1b958:	mov	r0, r8
   1b95c:	mov	r2, r5
   1b960:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1b964:	mov	r7, r0
   1b968:	cmp	sl, r7
   1b96c:	beq	1ba7c <main@@Base+0x5820>
   1b970:	mov	r0, #0
   1b974:	mov	r1, r7
   1b978:	mov	r2, r5
   1b97c:	sub	r3, fp, #56	; 0x38
   1b980:	str	r0, [fp, #-56]	; 0xffffffc8
   1b984:	mov	r0, r8
   1b988:	bl	38198 <flatcc_json_parser_float@@Base>
   1b98c:	mov	r1, r0
   1b990:	cmp	r7, r0
   1b994:	bne	1b9d0 <main@@Base+0x5774>
   1b998:	sub	r0, fp, #56	; 0x38
   1b99c:	mov	r1, r7
   1b9a0:	mov	r2, r5
   1b9a4:	str	r0, [sp]
   1b9a8:	mov	r0, r8
   1b9ac:	ldr	r3, [pc, #4008]	; 1c95c <main@@Base+0x6700>
   1b9b0:	add	r3, pc, r3
   1b9b4:	bl	257cc <main@@Base+0xf570>
   1b9b8:	mov	r1, r0
   1b9bc:	cmp	r0, r7
   1b9c0:	cmpne	r1, r5
   1b9c4:	beq	1bb78 <main@@Base+0x591c>
   1b9c8:	ldr	r8, [sp, #40]	; 0x28
   1b9cc:	ldr	r9, [sp, #24]
   1b9d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b9d4:	str	r0, [r9, #8]
   1b9d8:	b	1ba90 <main@@Base+0x5834>
   1b9dc:	ldr	r5, [sp, #44]	; 0x2c
   1b9e0:	ldr	r8, [sp, #40]	; 0x28
   1b9e4:	ldr	r9, [sp, #24]
   1b9e8:	bne	1b9f8 <main@@Base+0x579c>
   1b9ec:	ldrb	r0, [r7, #2]!
   1b9f0:	cmp	r0, #32
   1b9f4:	bhi	1ba08 <main@@Base+0x57ac>
   1b9f8:	mov	r0, r8
   1b9fc:	mov	r2, r5
   1ba00:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1ba04:	mov	r7, r0
   1ba08:	cmp	sl, r7
   1ba0c:	beq	1ba7c <main@@Base+0x5820>
   1ba10:	mov	r0, #0
   1ba14:	mov	r1, r7
   1ba18:	mov	r2, r5
   1ba1c:	sub	r3, fp, #56	; 0x38
   1ba20:	str	r0, [fp, #-56]	; 0xffffffc8
   1ba24:	mov	r0, r8
   1ba28:	bl	38198 <flatcc_json_parser_float@@Base>
   1ba2c:	mov	r1, r0
   1ba30:	cmp	r7, r0
   1ba34:	bne	1ba70 <main@@Base+0x5814>
   1ba38:	sub	r0, fp, #56	; 0x38
   1ba3c:	mov	r1, r7
   1ba40:	mov	r2, r5
   1ba44:	str	r0, [sp]
   1ba48:	mov	r0, r8
   1ba4c:	ldr	r3, [pc, #4048]	; 1ca24 <main@@Base+0x67c8>
   1ba50:	add	r3, pc, r3
   1ba54:	bl	257cc <main@@Base+0xf570>
   1ba58:	mov	r1, r0
   1ba5c:	cmp	r0, r7
   1ba60:	cmpne	r1, r5
   1ba64:	beq	1bb78 <main@@Base+0x591c>
   1ba68:	ldr	r8, [sp, #40]	; 0x28
   1ba6c:	ldr	r9, [sp, #24]
   1ba70:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ba74:	str	r0, [r9, #4]
   1ba78:	b	1ba90 <main@@Base+0x5834>
   1ba7c:	mov	r0, r8
   1ba80:	mov	r1, sl
   1ba84:	mov	r2, r5
   1ba88:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   1ba8c:	mov	r1, r0
   1ba90:	ldr	sl, [sp, #36]	; 0x24
   1ba94:	sub	r0, r5, r1
   1ba98:	cmp	r0, #2
   1ba9c:	blt	1bad0 <main@@Base+0x5874>
   1baa0:	ldrb	r0, [r1]
   1baa4:	cmp	r0, #32
   1baa8:	bls	1babc <main@@Base+0x5860>
   1baac:	mov	r2, r1
   1bab0:	cmp	r2, r5
   1bab4:	bne	1bae8 <main@@Base+0x588c>
   1bab8:	b	1bb94 <main@@Base+0x5938>
   1babc:	bne	1bad0 <main@@Base+0x5874>
   1bac0:	mov	r2, r1
   1bac4:	ldrb	r0, [r2, #1]!
   1bac8:	cmp	r0, #32
   1bacc:	bhi	1bae0 <main@@Base+0x5884>
   1bad0:	mov	r0, r8
   1bad4:	mov	r2, r5
   1bad8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1badc:	mov	r2, r0
   1bae0:	cmp	r2, r5
   1bae4:	beq	1bb94 <main@@Base+0x5938>
   1bae8:	ldrb	r0, [r2]
   1baec:	cmp	r0, #44	; 0x2c
   1baf0:	bne	1bb9c <main@@Base+0x5940>
   1baf4:	add	r1, r2, #1
   1baf8:	sub	r0, r5, r1
   1bafc:	cmp	r0, #2
   1bb00:	blt	1bb30 <main@@Base+0x58d4>
   1bb04:	ldrb	r0, [r1]
   1bb08:	cmp	r0, #32
   1bb0c:	bls	1bb20 <main@@Base+0x58c4>
   1bb10:	mov	r2, r1
   1bb14:	cmp	r2, r5
   1bb18:	bne	1bb48 <main@@Base+0x58ec>
   1bb1c:	b	1bbd0 <main@@Base+0x5974>
   1bb20:	bne	1bb30 <main@@Base+0x58d4>
   1bb24:	ldrb	r0, [r2, #2]!
   1bb28:	cmp	r0, #32
   1bb2c:	bhi	1bb40 <main@@Base+0x58e4>
   1bb30:	mov	r0, r8
   1bb34:	mov	r2, r5
   1bb38:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1bb3c:	mov	r2, r0
   1bb40:	cmp	r2, r5
   1bb44:	beq	1bbd0 <main@@Base+0x5974>
   1bb48:	ldrb	r0, [r2]
   1bb4c:	cmp	r0, #125	; 0x7d
   1bb50:	bne	1ae28 <main@@Base+0x4bcc>
   1bb54:	add	r1, r2, #1
   1bb58:	sub	r0, r5, r1
   1bb5c:	cmp	r0, #2
   1bb60:	blt	1ebd4 <main@@Base+0x8978>
   1bb64:	ldrb	r0, [r1]
   1bb68:	cmp	r0, #32
   1bb6c:	bls	1dea0 <main@@Base+0x7c44>
   1bb70:	mov	r4, r1
   1bb74:	b	20168 <main@@Base+0x9f0c>
   1bb78:	ldr	r8, [sp, #40]	; 0x28
   1bb7c:	ldr	r5, [sp, #44]	; 0x2c
   1bb80:	mov	r3, #33	; 0x21
   1bb84:	mov	r0, r8
   1bb88:	mov	r2, r5
   1bb8c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1bb90:	b	1a580 <main@@Base+0x4324>
   1bb94:	mov	r4, r5
   1bb98:	b	20168 <main@@Base+0x9f0c>
   1bb9c:	cmp	r0, #125	; 0x7d
   1bba0:	bne	1c77c <main@@Base+0x6520>
   1bba4:	add	r1, r2, #1
   1bba8:	sub	r0, r5, r1
   1bbac:	cmp	r0, #2
   1bbb0:	blt	1ebd4 <main@@Base+0x8978>
   1bbb4:	ldrb	r0, [r1]
   1bbb8:	cmp	r0, #32
   1bbbc:	bls	1ebb4 <main@@Base+0x8958>
   1bbc0:	ldr	r5, [sp, #44]	; 0x2c
   1bbc4:	ldr	r8, [sp, #40]	; 0x28
   1bbc8:	mov	r4, r1
   1bbcc:	b	1a584 <main@@Base+0x4328>
   1bbd0:	mov	r0, r8
   1bbd4:	mov	r1, r5
   1bbd8:	b	1c784 <main@@Base+0x6528>
   1bbdc:	bne	1bbec <main@@Base+0x5990>
   1bbe0:	ldrb	r0, [r7, #2]!
   1bbe4:	cmp	r0, #32
   1bbe8:	bhi	1bbfc <main@@Base+0x59a0>
   1bbec:	mov	r0, r8
   1bbf0:	mov	r2, r5
   1bbf4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1bbf8:	mov	r7, r0
   1bbfc:	cmp	r9, r7
   1bc00:	beq	187e8 <main@@Base+0x258c>
   1bc04:	mov	r0, #0
   1bc08:	mov	r1, r7
   1bc0c:	mov	r2, r5
   1bc10:	sub	r3, fp, #56	; 0x38
   1bc14:	str	r0, [fp, #-56]	; 0xffffffc8
   1bc18:	mov	r0, r8
   1bc1c:	bl	38198 <flatcc_json_parser_float@@Base>
   1bc20:	mov	r4, r0
   1bc24:	cmp	r7, r0
   1bc28:	bne	1bc5c <main@@Base+0x5a00>
   1bc2c:	sub	r0, fp, #56	; 0x38
   1bc30:	mov	r1, r7
   1bc34:	mov	r2, r5
   1bc38:	str	r0, [sp]
   1bc3c:	mov	r0, r8
   1bc40:	ldr	r3, [pc, #4092]	; 1cc44 <main@@Base+0x69e8>
   1bc44:	add	r3, pc, r3
   1bc48:	bl	257cc <main@@Base+0xf570>
   1bc4c:	mov	r4, r0
   1bc50:	cmp	r0, r7
   1bc54:	cmpne	r4, r5
   1bc58:	beq	17324 <main@@Base+0x10c8>
   1bc5c:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1bc60:	vcmp.f32	s0, s16
   1bc64:	vmrs	APSR_nzcv, fpscr
   1bc68:	bne	1bc78 <main@@Base+0x5a1c>
   1bc6c:	ldrb	r0, [r8, #8]
   1bc70:	tst	r0, #2
   1bc74:	beq	20168 <main@@Base+0x9f0c>
   1bc78:	ldr	r0, [r8]
   1bc7c:	mov	r1, #26
   1bc80:	b	19390 <main@@Base+0x3134>
   1bc84:	ldrdeq	r4, [r4], -ip
   1bc88:	bne	1bc9c <main@@Base+0x5a40>
   1bc8c:	mov	r4, r1
   1bc90:	ldrb	r0, [r4, #1]!
   1bc94:	cmp	r0, #32
   1bc98:	bhi	1bcac <main@@Base+0x5a50>
   1bc9c:	mov	r0, r8
   1bca0:	mov	r2, r5
   1bca4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1bca8:	mov	r4, r0
   1bcac:	cmp	r4, r5
   1bcb0:	beq	1bcf8 <main@@Base+0x5a9c>
   1bcb4:	ldrb	r0, [r4]
   1bcb8:	cmp	r0, #58	; 0x3a
   1bcbc:	bne	1bcf8 <main@@Base+0x5a9c>
   1bcc0:	add	r1, r4, #1
   1bcc4:	sub	r0, r5, r1
   1bcc8:	cmp	r0, #2
   1bccc:	blt	1db6c <main@@Base+0x7910>
   1bcd0:	ldrb	r0, [r1]
   1bcd4:	cmp	r0, #32
   1bcd8:	bls	1db50 <main@@Base+0x78f4>
   1bcdc:	ldr	r5, [sp, #44]	; 0x2c
   1bce0:	ldr	r8, [sp, #40]	; 0x28
   1bce4:	ldr	sl, [sp, #36]	; 0x24
   1bce8:	mov	r4, r1
   1bcec:	cmp	r7, r4
   1bcf0:	bne	1db84 <main@@Base+0x7928>
   1bcf4:	b	1f6e4 <main@@Base+0x9488>
   1bcf8:	mov	r0, r8
   1bcfc:	mov	r1, r4
   1bd00:	mov	r2, r5
   1bd04:	mov	r3, #4
   1bd08:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1bd0c:	b	1db78 <main@@Base+0x791c>
   1bd10:	bne	1bd24 <main@@Base+0x5ac8>
   1bd14:	mov	r7, r1
   1bd18:	ldrb	r0, [r7, #1]!
   1bd1c:	cmp	r0, #32
   1bd20:	bhi	1bd34 <main@@Base+0x5ad8>
   1bd24:	mov	r0, r8
   1bd28:	mov	r2, r5
   1bd2c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1bd30:	mov	r7, r0
   1bd34:	cmp	r7, r5
   1bd38:	beq	1bde8 <main@@Base+0x5b8c>
   1bd3c:	ldrb	r0, [r7]
   1bd40:	cmp	r0, #58	; 0x3a
   1bd44:	bne	1bde8 <main@@Base+0x5b8c>
   1bd48:	add	r1, r7, #1
   1bd4c:	sub	r0, r5, r1
   1bd50:	cmp	r0, #2
   1bd54:	blt	1dc24 <main@@Base+0x79c8>
   1bd58:	ldrb	r0, [r1]
   1bd5c:	cmp	r0, #32
   1bd60:	bls	1dc0c <main@@Base+0x79b0>
   1bd64:	ldr	r5, [sp, #44]	; 0x2c
   1bd68:	ldr	r8, [sp, #40]	; 0x28
   1bd6c:	mov	r7, r1
   1bd70:	cmp	sl, r7
   1bd74:	bne	1dc3c <main@@Base+0x79e0>
   1bd78:	add	r4, r9, #16
   1bd7c:	mov	r1, #8
   1bd80:	sub	r0, r5, r4
   1bd84:	cmp	r0, #8
   1bd88:	movcc	r1, r0
   1bd8c:	sub	r1, r1, #1
   1bd90:	cmp	r1, #7
   1bd94:	bhi	1bed8 <main@@Base+0x5c7c>
   1bd98:	ldrb	r1, [r4]
   1bd9c:	cmp	r1, #97	; 0x61
   1bda0:	bne	1bed8 <main@@Base+0x5c7c>
   1bda4:	ldr	sl, [sp, #36]	; 0x24
   1bda8:	cmp	r0, #2
   1bdac:	blt	20154 <main@@Base+0x9ef8>
   1bdb0:	ldr	r2, [sp, #32]
   1bdb4:	mov	r1, r9
   1bdb8:	ldrb	r0, [r1, #17]!
   1bdbc:	ldr	r2, [r2]
   1bdc0:	cmp	r2, #0
   1bdc4:	beq	1c61c <main@@Base+0x63c0>
   1bdc8:	cmp	r0, #33	; 0x21
   1bdcc:	bcc	1bdd8 <main@@Base+0x5b7c>
   1bdd0:	cmp	r0, #58	; 0x3a
   1bdd4:	bne	20154 <main@@Base+0x9ef8>
   1bdd8:	ldr	r0, [sp, #32]
   1bddc:	mov	r2, #0
   1bde0:	str	r2, [r0]
   1bde4:	b	1c628 <main@@Base+0x63cc>
   1bde8:	mov	r0, r8
   1bdec:	mov	r1, r7
   1bdf0:	mov	r2, r5
   1bdf4:	mov	r3, #4
   1bdf8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1bdfc:	b	1dc30 <main@@Base+0x79d4>
   1be00:	bne	1be14 <main@@Base+0x5bb8>
   1be04:	mov	r7, r1
   1be08:	ldrb	r0, [r7, #1]!
   1be0c:	cmp	r0, #32
   1be10:	bhi	1be24 <main@@Base+0x5bc8>
   1be14:	mov	r0, r8
   1be18:	mov	r2, r5
   1be1c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1be20:	mov	r7, r0
   1be24:	cmp	r7, r5
   1be28:	beq	1bee4 <main@@Base+0x5c88>
   1be2c:	ldrb	r0, [r7]
   1be30:	cmp	r0, #58	; 0x3a
   1be34:	bne	1bee4 <main@@Base+0x5c88>
   1be38:	add	r1, r7, #1
   1be3c:	sub	r0, r5, r1
   1be40:	cmp	r0, #2
   1be44:	blt	1dd60 <main@@Base+0x7b04>
   1be48:	ldrb	r0, [r1]
   1be4c:	cmp	r0, #32
   1be50:	bls	1dd48 <main@@Base+0x7aec>
   1be54:	ldr	r5, [sp, #44]	; 0x2c
   1be58:	ldr	r8, [sp, #40]	; 0x28
   1be5c:	mov	r7, r1
   1be60:	cmp	sl, r7
   1be64:	bne	1dd78 <main@@Base+0x7b1c>
   1be68:	add	r4, r9, #16
   1be6c:	mov	r1, #8
   1be70:	sub	r0, r5, r4
   1be74:	cmp	r0, #8
   1be78:	movcc	r1, r0
   1be7c:	sub	r1, r1, #1
   1be80:	cmp	r1, #7
   1be84:	bhi	1bed8 <main@@Base+0x5c7c>
   1be88:	ldrb	r1, [r4]
   1be8c:	cmp	r1, #97	; 0x61
   1be90:	bne	1bed8 <main@@Base+0x5c7c>
   1be94:	ldr	sl, [sp, #36]	; 0x24
   1be98:	cmp	r0, #2
   1be9c:	blt	20154 <main@@Base+0x9ef8>
   1bea0:	ldr	r2, [sp, #32]
   1bea4:	mov	r1, r9
   1bea8:	ldrb	r0, [r1, #17]!
   1beac:	ldr	r2, [r2]
   1beb0:	cmp	r2, #0
   1beb4:	beq	1c654 <main@@Base+0x63f8>
   1beb8:	cmp	r0, #33	; 0x21
   1bebc:	bcc	1bec8 <main@@Base+0x5c6c>
   1bec0:	cmp	r0, #58	; 0x3a
   1bec4:	bne	20154 <main@@Base+0x9ef8>
   1bec8:	ldr	r0, [sp, #32]
   1becc:	mov	r2, #0
   1bed0:	str	r2, [r0]
   1bed4:	b	1c660 <main@@Base+0x6404>
   1bed8:	mov	r0, r8
   1bedc:	mov	r1, r4
   1bee0:	b	1a578 <main@@Base+0x431c>
   1bee4:	mov	r0, r8
   1bee8:	mov	r1, r7
   1beec:	mov	r2, r5
   1bef0:	mov	r3, #4
   1bef4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1bef8:	b	1dd6c <main@@Base+0x7b10>
   1befc:	mov	r0, r8
   1bf00:	mov	r1, r4
   1bf04:	mov	r2, r5
   1bf08:	mov	r3, #9
   1bf0c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1bf10:	b	1a5a4 <main@@Base+0x4348>
   1bf14:	cmp	r0, #34	; 0x22
   1bf18:	bne	20154 <main@@Base+0x9ef8>
   1bf1c:	add	r1, r9, #18
   1bf20:	sub	r0, r5, r1
   1bf24:	cmp	r0, #2
   1bf28:	blt	1dad8 <main@@Base+0x787c>
   1bf2c:	ldrb	r0, [r1]
   1bf30:	cmp	r0, #32
   1bf34:	bls	1dac4 <main@@Base+0x7868>
   1bf38:	mov	r7, r1
   1bf3c:	cmp	r7, r5
   1bf40:	bne	1daf0 <main@@Base+0x7894>
   1bf44:	b	1db38 <main@@Base+0x78dc>
   1bf48:	bne	1bf58 <main@@Base+0x5cfc>
   1bf4c:	ldrb	r0, [r7, #2]!
   1bf50:	cmp	r0, #32
   1bf54:	bhi	1bf68 <main@@Base+0x5d0c>
   1bf58:	mov	r0, r8
   1bf5c:	mov	r2, r5
   1bf60:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1bf64:	mov	r7, r0
   1bf68:	cmp	sl, r7
   1bf6c:	beq	19934 <main@@Base+0x36d8>
   1bf70:	mov	r6, #0
   1bf74:	cmp	r7, r5
   1bf78:	str	r6, [fp, #-52]	; 0xffffffcc
   1bf7c:	str	r6, [fp, #-56]	; 0xffffffc8
   1bf80:	str	r6, [fp, #-60]	; 0xffffffc4
   1bf84:	str	r6, [sp, #56]	; 0x38
   1bf88:	beq	1bff0 <main@@Base+0x5d94>
   1bf8c:	sub	r0, fp, #56	; 0x38
   1bf90:	mov	r1, r7
   1bf94:	mov	r2, r5
   1bf98:	add	r3, sp, #56	; 0x38
   1bf9c:	str	r0, [sp]
   1bfa0:	mov	r0, r8
   1bfa4:	bl	382dc <flatcc_json_parser_integer@@Base>
   1bfa8:	cmp	r0, r7
   1bfac:	beq	1c004 <main@@Base+0x5da8>
   1bfb0:	ldr	r2, [sp, #56]	; 0x38
   1bfb4:	mov	r4, r0
   1bfb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bfbc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1bfc0:	cmp	r2, #0
   1bfc4:	beq	1c018 <main@@Base+0x5dbc>
   1bfc8:	ldr	sl, [sp, #36]	; 0x24
   1bfcc:	subs	r2, r0, #-2147483647	; 0x80000001
   1bfd0:	sbcs	r1, r1, #0
   1bfd4:	bcc	1c04c <main@@Base+0x5df0>
   1bfd8:	mov	r0, r8
   1bfdc:	mov	r1, r4
   1bfe0:	mov	r2, r5
   1bfe4:	mov	r3, #8
   1bfe8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1bfec:	b	1c03c <main@@Base+0x5de0>
   1bff0:	ldr	sl, [sp, #36]	; 0x24
   1bff4:	mov	r4, r5
   1bff8:	cmp	r7, r4
   1bffc:	bne	1c93c <main@@Base+0x66e0>
   1c000:	b	1c908 <main@@Base+0x66ac>
   1c004:	ldr	sl, [sp, #36]	; 0x24
   1c008:	mov	r4, r7
   1c00c:	cmp	r7, r4
   1c010:	bne	1c93c <main@@Base+0x66e0>
   1c014:	b	1c908 <main@@Base+0x66ac>
   1c018:	subs	r2, r0, #-2147483648	; 0x80000000
   1c01c:	sbcs	r1, r1, #0
   1c020:	bcc	1c8f4 <main@@Base+0x6698>
   1c024:	mov	r0, r8
   1c028:	mov	r1, r4
   1c02c:	mov	r2, r5
   1c030:	mov	r3, #7
   1c034:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1c038:	ldr	sl, [sp, #36]	; 0x24
   1c03c:	mov	r4, r0
   1c040:	cmp	r7, r4
   1c044:	bne	1c93c <main@@Base+0x66e0>
   1c048:	b	1c908 <main@@Base+0x66ac>
   1c04c:	rsb	r6, r0, #0
   1c050:	b	1c8fc <main@@Base+0x66a0>
   1c054:	bne	1c068 <main@@Base+0x5e0c>
   1c058:	mov	r4, r1
   1c05c:	ldrb	r0, [r4, #1]!
   1c060:	cmp	r0, #32
   1c064:	bhi	1c078 <main@@Base+0x5e1c>
   1c068:	mov	r0, r8
   1c06c:	mov	r2, r5
   1c070:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1c074:	mov	r4, r0
   1c078:	cmp	r4, r5
   1c07c:	beq	1c0c4 <main@@Base+0x5e68>
   1c080:	ldrb	r0, [r4]
   1c084:	cmp	r0, #58	; 0x3a
   1c088:	bne	1c0c4 <main@@Base+0x5e68>
   1c08c:	add	r1, r4, #1
   1c090:	sub	r0, r5, r1
   1c094:	cmp	r0, #2
   1c098:	blt	1dec4 <main@@Base+0x7c68>
   1c09c:	ldrb	r0, [r1]
   1c0a0:	cmp	r0, #32
   1c0a4:	bls	1dea8 <main@@Base+0x7c4c>
   1c0a8:	ldr	r5, [sp, #44]	; 0x2c
   1c0ac:	ldr	r8, [sp, #40]	; 0x28
   1c0b0:	ldr	sl, [sp, #36]	; 0x24
   1c0b4:	mov	r4, r1
   1c0b8:	cmp	r7, r4
   1c0bc:	bne	1dedc <main@@Base+0x7c80>
   1c0c0:	b	1f6e4 <main@@Base+0x9488>
   1c0c4:	mov	r0, r8
   1c0c8:	mov	r1, r4
   1c0cc:	mov	r2, r5
   1c0d0:	mov	r3, #4
   1c0d4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1c0d8:	b	1ded0 <main@@Base+0x7c74>
   1c0dc:	bne	1c0f0 <main@@Base+0x5e94>
   1c0e0:	mov	r4, r1
   1c0e4:	ldrb	r0, [r4, #1]!
   1c0e8:	cmp	r0, #32
   1c0ec:	bhi	1c100 <main@@Base+0x5ea4>
   1c0f0:	mov	r0, r8
   1c0f4:	mov	r2, r5
   1c0f8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1c0fc:	mov	r4, r0
   1c100:	cmp	r4, r5
   1c104:	beq	1c14c <main@@Base+0x5ef0>
   1c108:	ldrb	r0, [r4]
   1c10c:	cmp	r0, #58	; 0x3a
   1c110:	bne	1c14c <main@@Base+0x5ef0>
   1c114:	add	r1, r4, #1
   1c118:	sub	r0, r5, r1
   1c11c:	cmp	r0, #2
   1c120:	blt	1df7c <main@@Base+0x7d20>
   1c124:	ldrb	r0, [r1]
   1c128:	cmp	r0, #32
   1c12c:	bls	1df60 <main@@Base+0x7d04>
   1c130:	ldr	r5, [sp, #44]	; 0x2c
   1c134:	ldr	r8, [sp, #40]	; 0x28
   1c138:	ldr	sl, [sp, #36]	; 0x24
   1c13c:	mov	r4, r1
   1c140:	cmp	r7, r4
   1c144:	bne	1df94 <main@@Base+0x7d38>
   1c148:	b	1f6e4 <main@@Base+0x9488>
   1c14c:	mov	r0, r8
   1c150:	mov	r1, r4
   1c154:	mov	r2, r5
   1c158:	mov	r3, #4
   1c15c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1c160:	b	1df88 <main@@Base+0x7d2c>
   1c164:	bne	1c178 <main@@Base+0x5f1c>
   1c168:	mov	r4, r1
   1c16c:	ldrb	r0, [r4, #1]!
   1c170:	cmp	r0, #32
   1c174:	bhi	1c188 <main@@Base+0x5f2c>
   1c178:	mov	r0, r8
   1c17c:	mov	r2, r5
   1c180:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1c184:	mov	r4, r0
   1c188:	cmp	r4, r5
   1c18c:	beq	1c1d4 <main@@Base+0x5f78>
   1c190:	ldrb	r0, [r4]
   1c194:	cmp	r0, #58	; 0x3a
   1c198:	bne	1c1d4 <main@@Base+0x5f78>
   1c19c:	add	r1, r4, #1
   1c1a0:	sub	r0, r5, r1
   1c1a4:	cmp	r0, #2
   1c1a8:	blt	1e054 <main@@Base+0x7df8>
   1c1ac:	ldrb	r0, [r1]
   1c1b0:	cmp	r0, #32
   1c1b4:	bls	1e038 <main@@Base+0x7ddc>
   1c1b8:	ldr	r5, [sp, #44]	; 0x2c
   1c1bc:	ldr	r8, [sp, #40]	; 0x28
   1c1c0:	ldr	sl, [sp, #36]	; 0x24
   1c1c4:	mov	r4, r1
   1c1c8:	cmp	r7, r4
   1c1cc:	bne	1e06c <main@@Base+0x7e10>
   1c1d0:	b	1f6e4 <main@@Base+0x9488>
   1c1d4:	mov	r0, r8
   1c1d8:	mov	r1, r4
   1c1dc:	mov	r2, r5
   1c1e0:	mov	r3, #4
   1c1e4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1c1e8:	b	1e060 <main@@Base+0x7e04>
   1c1ec:	bne	1c1fc <main@@Base+0x5fa0>
   1c1f0:	ldrb	r0, [r4, #2]!
   1c1f4:	cmp	r0, #32
   1c1f8:	bhi	1c20c <main@@Base+0x5fb0>
   1c1fc:	mov	r0, r8
   1c200:	mov	r2, r5
   1c204:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1c208:	mov	r4, r0
   1c20c:	cmp	r4, r5
   1c210:	mov	r6, r5
   1c214:	beq	1c228 <main@@Base+0x5fcc>
   1c218:	ldrb	r0, [r4]
   1c21c:	cmp	r0, #93	; 0x5d
   1c220:	beq	1ce6c <main@@Base+0x6c10>
   1c224:	mov	r6, r4
   1c228:	mov	r0, #0
   1c22c:	mov	r1, #1
   1c230:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c234:	ldr	r0, [r8]
   1c238:	bl	30274 <flatcc_builder_extend_vector@@Base>
   1c23c:	cmp	r0, #0
   1c240:	beq	21450 <main@@Base+0xb1f4>
   1c244:	mov	r7, r0
   1c248:	mov	r4, r6
   1c24c:	sub	r6, r5, r4
   1c250:	cmp	r6, #4
   1c254:	blt	1c298 <main@@Base+0x603c>
   1c258:	ldr	r1, [pc, #4060]	; 1d23c <main@@Base+0x6fe0>
   1c25c:	mov	r0, r4
   1c260:	mov	r2, #4
   1c264:	add	r1, pc, r1
   1c268:	bl	14eb4 <bcmp@plt>
   1c26c:	cmp	r0, #0
   1c270:	beq	1c2fc <main@@Base+0x60a0>
   1c274:	cmp	r6, #5
   1c278:	blt	1c298 <main@@Base+0x603c>
   1c27c:	ldr	r1, [pc, #4080]	; 1d274 <main@@Base+0x7018>
   1c280:	mov	r0, r4
   1c284:	mov	r2, #5
   1c288:	add	r1, pc, r1
   1c28c:	bl	14eb4 <bcmp@plt>
   1c290:	cmp	r0, #0
   1c294:	beq	1c470 <main@@Base+0x6214>
   1c298:	mov	r6, #0
   1c29c:	cmp	r4, r5
   1c2a0:	str	r6, [fp, #-52]	; 0xffffffcc
   1c2a4:	str	r6, [fp, #-56]	; 0xffffffc8
   1c2a8:	str	r6, [sp, #56]	; 0x38
   1c2ac:	beq	1c2f4 <main@@Base+0x6098>
   1c2b0:	sub	r0, fp, #56	; 0x38
   1c2b4:	mov	r1, r4
   1c2b8:	mov	r2, r5
   1c2bc:	add	r3, sp, #56	; 0x38
   1c2c0:	str	r0, [sp]
   1c2c4:	mov	r0, r8
   1c2c8:	bl	382dc <flatcc_json_parser_integer@@Base>
   1c2cc:	cmp	r0, r4
   1c2d0:	beq	1c308 <main@@Base+0x60ac>
   1c2d4:	mov	r1, r0
   1c2d8:	ldr	r0, [sp, #56]	; 0x38
   1c2dc:	cmp	r0, #0
   1c2e0:	beq	1c310 <main@@Base+0x60b4>
   1c2e4:	mov	r0, r8
   1c2e8:	mov	r2, r5
   1c2ec:	mov	r3, #8
   1c2f0:	b	1c330 <main@@Base+0x60d4>
   1c2f4:	mov	r1, r5
   1c2f8:	b	1c338 <main@@Base+0x60dc>
   1c2fc:	mov	r0, #1
   1c300:	add	r1, r4, #4
   1c304:	b	1c344 <main@@Base+0x60e8>
   1c308:	mov	r1, r4
   1c30c:	b	1c338 <main@@Base+0x60dc>
   1c310:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c314:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c318:	subs	r3, r0, #256	; 0x100
   1c31c:	sbcs	r2, r2, #0
   1c320:	bcc	1c47c <main@@Base+0x6220>
   1c324:	mov	r0, r8
   1c328:	mov	r2, r5
   1c32c:	mov	r3, #7
   1c330:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1c334:	mov	r1, r0
   1c338:	uxtb	r0, r6
   1c33c:	cmp	r0, #0
   1c340:	movwne	r0, #1
   1c344:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c348:	cmp	r4, r1
   1c34c:	bne	1c388 <main@@Base+0x612c>
   1c350:	sub	r0, fp, #60	; 0x3c
   1c354:	mov	r1, r4
   1c358:	mov	r2, r5
   1c35c:	str	r0, [sp]
   1c360:	mov	r0, r8
   1c364:	ldr	r3, [pc, #4000]	; 1d30c <main@@Base+0x70b0>
   1c368:	add	r3, pc, r3
   1c36c:	bl	255f4 <main@@Base+0xf398>
   1c370:	mov	r1, r0
   1c374:	cmp	r0, r4
   1c378:	beq	2145c <main@@Base+0xb200>
   1c37c:	cmp	r1, r5
   1c380:	beq	2145c <main@@Base+0xb200>
   1c384:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1c388:	strb	r0, [r7]
   1c38c:	sub	r0, r5, r1
   1c390:	cmp	r0, #2
   1c394:	blt	1c3c8 <main@@Base+0x616c>
   1c398:	ldrb	r0, [r1]
   1c39c:	cmp	r0, #32
   1c3a0:	bls	1c3b4 <main@@Base+0x6158>
   1c3a4:	mov	r4, r1
   1c3a8:	cmp	r4, r5
   1c3ac:	bne	1c3e0 <main@@Base+0x6184>
   1c3b0:	b	1ce50 <main@@Base+0x6bf4>
   1c3b4:	bne	1c3c8 <main@@Base+0x616c>
   1c3b8:	mov	r4, r1
   1c3bc:	ldrb	r0, [r4, #1]!
   1c3c0:	cmp	r0, #32
   1c3c4:	bhi	1c3d8 <main@@Base+0x617c>
   1c3c8:	mov	r0, r8
   1c3cc:	mov	r2, r5
   1c3d0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1c3d4:	mov	r4, r0
   1c3d8:	cmp	r4, r5
   1c3dc:	beq	1ce50 <main@@Base+0x6bf4>
   1c3e0:	ldrb	r0, [r4]
   1c3e4:	cmp	r0, #44	; 0x2c
   1c3e8:	bne	1ce58 <main@@Base+0x6bfc>
   1c3ec:	add	r1, r4, #1
   1c3f0:	sub	r0, r5, r1
   1c3f4:	cmp	r0, #2
   1c3f8:	blt	1c428 <main@@Base+0x61cc>
   1c3fc:	ldrb	r0, [r1]
   1c400:	cmp	r0, #32
   1c404:	bls	1c418 <main@@Base+0x61bc>
   1c408:	mov	r4, r1
   1c40c:	cmp	r4, r5
   1c410:	bne	1c440 <main@@Base+0x61e4>
   1c414:	b	1cf50 <main@@Base+0x6cf4>
   1c418:	bne	1c428 <main@@Base+0x61cc>
   1c41c:	ldrb	r0, [r4, #2]!
   1c420:	cmp	r0, #32
   1c424:	bhi	1c438 <main@@Base+0x61dc>
   1c428:	mov	r0, r8
   1c42c:	mov	r2, r5
   1c430:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1c434:	mov	r4, r0
   1c438:	cmp	r4, r5
   1c43c:	beq	1cf50 <main@@Base+0x6cf4>
   1c440:	ldrb	r0, [r4]
   1c444:	cmp	r0, #93	; 0x5d
   1c448:	beq	1ce6c <main@@Base+0x6c10>
   1c44c:	mov	r0, #0
   1c450:	mov	r1, #1
   1c454:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c458:	ldr	r0, [r8]
   1c45c:	bl	30274 <flatcc_builder_extend_vector@@Base>
   1c460:	mov	r7, r0
   1c464:	cmp	r0, #0
   1c468:	bne	1c24c <main@@Base+0x5ff0>
   1c46c:	b	17324 <main@@Base+0x10c8>
   1c470:	mov	r0, #0
   1c474:	add	r1, r4, #5
   1c478:	b	1c344 <main@@Base+0x60e8>
   1c47c:	mov	r6, r0
   1c480:	b	1c338 <main@@Base+0x60dc>
   1c484:	bne	1c498 <main@@Base+0x623c>
   1c488:	mov	r4, r1
   1c48c:	ldrb	r0, [r4, #1]!
   1c490:	cmp	r0, #32
   1c494:	bhi	1c4a8 <main@@Base+0x624c>
   1c498:	mov	r0, r8
   1c49c:	mov	r2, r5
   1c4a0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1c4a4:	mov	r4, r0
   1c4a8:	cmp	r4, r5
   1c4ac:	beq	1c4f0 <main@@Base+0x6294>
   1c4b0:	ldrb	r0, [r4]
   1c4b4:	cmp	r0, #58	; 0x3a
   1c4b8:	bne	1c4f0 <main@@Base+0x6294>
   1c4bc:	add	r1, r4, #1
   1c4c0:	sub	r0, r5, r1
   1c4c4:	cmp	r0, #2
   1c4c8:	blt	1e14c <main@@Base+0x7ef0>
   1c4cc:	ldrb	r0, [r1]
   1c4d0:	cmp	r0, #32
   1c4d4:	bls	1e134 <main@@Base+0x7ed8>
   1c4d8:	ldr	r5, [sp, #44]	; 0x2c
   1c4dc:	ldr	r8, [sp, #40]	; 0x28
   1c4e0:	mov	r4, r1
   1c4e4:	cmp	sl, r4
   1c4e8:	bne	1e164 <main@@Base+0x7f08>
   1c4ec:	b	196a0 <main@@Base+0x3444>
   1c4f0:	mov	r0, r8
   1c4f4:	mov	r1, r4
   1c4f8:	mov	r2, r5
   1c4fc:	mov	r3, #4
   1c500:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1c504:	b	1e158 <main@@Base+0x7efc>
   1c508:	bne	1c51c <main@@Base+0x62c0>
   1c50c:	mov	r4, r1
   1c510:	ldrb	r0, [r4, #1]!
   1c514:	cmp	r0, #32
   1c518:	bhi	1c52c <main@@Base+0x62d0>
   1c51c:	mov	r0, r8
   1c520:	mov	r2, r5
   1c524:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1c528:	mov	r4, r0
   1c52c:	cmp	r4, r5
   1c530:	beq	1c578 <main@@Base+0x631c>
   1c534:	ldrb	r0, [r4]
   1c538:	cmp	r0, #58	; 0x3a
   1c53c:	bne	1c578 <main@@Base+0x631c>
   1c540:	add	r1, r4, #1
   1c544:	sub	r0, r5, r1
   1c548:	cmp	r0, #2
   1c54c:	blt	1e32c <main@@Base+0x80d0>
   1c550:	ldrb	r0, [r1]
   1c554:	cmp	r0, #32
   1c558:	bls	1e310 <main@@Base+0x80b4>
   1c55c:	ldr	r5, [sp, #44]	; 0x2c
   1c560:	ldr	r8, [sp, #40]	; 0x28
   1c564:	ldr	sl, [sp, #36]	; 0x24
   1c568:	mov	r4, r1
   1c56c:	cmp	r7, r4
   1c570:	bne	1e344 <main@@Base+0x80e8>
   1c574:	b	1f6e4 <main@@Base+0x9488>
   1c578:	mov	r0, r8
   1c57c:	mov	r1, r4
   1c580:	mov	r2, r5
   1c584:	mov	r3, #4
   1c588:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1c58c:	b	1e338 <main@@Base+0x80dc>
   1c590:	bne	1c5a4 <main@@Base+0x6348>
   1c594:	mov	r7, r1
   1c598:	ldrb	r0, [r7, #1]!
   1c59c:	cmp	r0, #32
   1c5a0:	bhi	1c5b4 <main@@Base+0x6358>
   1c5a4:	mov	r0, r8
   1c5a8:	mov	r2, r5
   1c5ac:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1c5b0:	mov	r7, r0
   1c5b4:	cmp	r7, r5
   1c5b8:	beq	1c600 <main@@Base+0x63a4>
   1c5bc:	ldrb	r0, [r7]
   1c5c0:	cmp	r0, #58	; 0x3a
   1c5c4:	bne	1c600 <main@@Base+0x63a4>
   1c5c8:	add	r1, r7, #1
   1c5cc:	sub	r0, r5, r1
   1c5d0:	cmp	r0, #2
   1c5d4:	blt	1e428 <main@@Base+0x81cc>
   1c5d8:	ldrb	r0, [r1]
   1c5dc:	cmp	r0, #32
   1c5e0:	bls	1e40c <main@@Base+0x81b0>
   1c5e4:	ldr	r5, [sp, #44]	; 0x2c
   1c5e8:	ldr	r8, [sp, #40]	; 0x28
   1c5ec:	ldr	sl, [sp, #36]	; 0x24
   1c5f0:	mov	r7, r1
   1c5f4:	cmp	r4, r7
   1c5f8:	bne	1e440 <main@@Base+0x81e4>
   1c5fc:	b	20154 <main@@Base+0x9ef8>
   1c600:	mov	r0, r8
   1c604:	mov	r1, r7
   1c608:	mov	r2, r5
   1c60c:	mov	r3, #4
   1c610:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1c614:	b	1e434 <main@@Base+0x81d8>
   1c618:	andeq	r3, r4, ip, asr fp
   1c61c:	cmp	r0, #34	; 0x22
   1c620:	bne	20154 <main@@Base+0x9ef8>
   1c624:	add	r1, r9, #18
   1c628:	sub	r0, r5, r1
   1c62c:	cmp	r0, #2
   1c630:	blt	1e218 <main@@Base+0x7fbc>
   1c634:	ldrb	r0, [r1]
   1c638:	cmp	r0, #32
   1c63c:	bls	1e200 <main@@Base+0x7fa4>
   1c640:	ldr	r5, [sp, #44]	; 0x2c
   1c644:	mov	r7, r1
   1c648:	cmp	r7, r5
   1c64c:	bne	1e230 <main@@Base+0x7fd4>
   1c650:	b	1e26c <main@@Base+0x8010>
   1c654:	cmp	r0, #34	; 0x22
   1c658:	bne	20154 <main@@Base+0x9ef8>
   1c65c:	add	r1, r9, #18
   1c660:	sub	r0, r5, r1
   1c664:	cmp	r0, #2
   1c668:	blt	1e2a0 <main@@Base+0x8044>
   1c66c:	ldrb	r0, [r1]
   1c670:	cmp	r0, #32
   1c674:	bls	1e288 <main@@Base+0x802c>
   1c678:	ldr	r5, [sp, #44]	; 0x2c
   1c67c:	mov	r7, r1
   1c680:	cmp	r7, r5
   1c684:	bne	1e2b8 <main@@Base+0x805c>
   1c688:	b	1e2f4 <main@@Base+0x8098>
   1c68c:	andeq	r3, r4, r8, asr #21
   1c690:	bne	1c6a0 <main@@Base+0x6444>
   1c694:	ldrb	r0, [r4, #2]!
   1c698:	cmp	r0, #32
   1c69c:	bhi	1c6b0 <main@@Base+0x6454>
   1c6a0:	mov	r0, r8
   1c6a4:	mov	r2, r5
   1c6a8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1c6ac:	mov	r4, r0
   1c6b0:	cmp	r7, r4
   1c6b4:	beq	1f6e4 <main@@Base+0x9488>
   1c6b8:	mov	r0, #0
   1c6bc:	mov	r1, #3
   1c6c0:	str	r0, [sp, #52]	; 0x34
   1c6c4:	ldr	r0, [r8]
   1c6c8:	bl	31348 <flatcc_builder_start_table@@Base>
   1c6cc:	cmp	r0, #0
   1c6d0:	bne	1c734 <main@@Base+0x64d8>
   1c6d4:	cmp	r4, r5
   1c6d8:	beq	1c710 <main@@Base+0x64b4>
   1c6dc:	ldrb	r0, [r4]
   1c6e0:	cmp	r0, #123	; 0x7b
   1c6e4:	bne	1c710 <main@@Base+0x64b4>
   1c6e8:	add	r1, r4, #1
   1c6ec:	sub	r0, r5, r1
   1c6f0:	cmp	r0, #2
   1c6f4:	blt	1ec4c <main@@Base+0x89f0>
   1c6f8:	ldrb	r0, [r1]
   1c6fc:	cmp	r0, #32
   1c700:	bls	1ec34 <main@@Base+0x89d8>
   1c704:	ldr	r5, [sp, #44]	; 0x2c
   1c708:	mov	r4, r1
   1c70c:	b	1ec5c <main@@Base+0x8a00>
   1c710:	mov	r0, r8
   1c714:	mov	r1, r4
   1c718:	mov	r2, r5
   1c71c:	mov	r3, #21
   1c720:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1c724:	mov	r4, r0
   1c728:	ldr	r0, [r8, #24]
   1c72c:	cmp	r0, #0
   1c730:	beq	1c764 <main@@Base+0x6508>
   1c734:	mov	r0, r8
   1c738:	mov	r1, r4
   1c73c:	mov	r2, r5
   1c740:	mov	r3, #33	; 0x21
   1c744:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1c748:	mov	r4, r0
   1c74c:	ldr	r0, [sp, #52]	; 0x34
   1c750:	cmp	r0, #0
   1c754:	beq	17324 <main@@Base+0x10c8>
   1c758:	ldr	r0, [r8]
   1c75c:	mov	r1, #35	; 0x23
   1c760:	b	19d64 <main@@Base+0x3b08>
   1c764:	ldr	r0, [r8]
   1c768:	bl	31d70 <flatcc_builder_end_table@@Base>
   1c76c:	cmp	r0, #0
   1c770:	str	r0, [sp, #52]	; 0x34
   1c774:	bne	1c758 <main@@Base+0x64fc>
   1c778:	b	1c734 <main@@Base+0x64d8>
   1c77c:	mov	r0, r8
   1c780:	mov	r1, r2
   1c784:	mov	r2, r5
   1c788:	mov	r3, #10
   1c78c:	b	1ada8 <main@@Base+0x4b4c>
   1c790:	bne	1c7a0 <main@@Base+0x6544>
   1c794:	ldrb	r0, [r4, #2]!
   1c798:	cmp	r0, #32
   1c79c:	bhi	1c7b0 <main@@Base+0x6554>
   1c7a0:	mov	r0, r8
   1c7a4:	mov	r2, r5
   1c7a8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1c7ac:	mov	r4, r0
   1c7b0:	cmp	r7, r4
   1c7b4:	beq	1f6e4 <main@@Base+0x9488>
   1c7b8:	ldr	r0, [r8]
   1c7bc:	bl	30ec4 <flatcc_builder_start_offset_vector@@Base>
   1c7c0:	cmp	r0, #0
   1c7c4:	bne	17324 <main@@Base+0x10c8>
   1c7c8:	cmp	r4, r5
   1c7cc:	beq	1c800 <main@@Base+0x65a4>
   1c7d0:	ldrb	r0, [r4]
   1c7d4:	cmp	r0, #91	; 0x5b
   1c7d8:	bne	1c800 <main@@Base+0x65a4>
   1c7dc:	add	r1, r4, #1
   1c7e0:	sub	r0, r5, r1
   1c7e4:	cmp	r0, #2
   1c7e8:	blt	1cf74 <main@@Base+0x6d18>
   1c7ec:	ldrb	r0, [r1]
   1c7f0:	cmp	r0, #32
   1c7f4:	bls	1cf64 <main@@Base+0x6d08>
   1c7f8:	mov	r4, r1
   1c7fc:	b	1cf84 <main@@Base+0x6d28>
   1c800:	mov	r0, r8
   1c804:	mov	r1, r4
   1c808:	mov	r2, r5
   1c80c:	mov	r3, #22
   1c810:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1c814:	mov	r4, r0
   1c818:	ldr	r0, [r8]
   1c81c:	bl	310ac <flatcc_builder_end_offset_vector@@Base>
   1c820:	cmp	r0, #0
   1c824:	str	r0, [sp, #52]	; 0x34
   1c828:	beq	17324 <main@@Base+0x10c8>
   1c82c:	ldr	r0, [r8]
   1c830:	mov	r1, #28
   1c834:	b	19d64 <main@@Base+0x3b08>
   1c838:	bne	1c848 <main@@Base+0x65ec>
   1c83c:	ldrb	r0, [r7, #2]!
   1c840:	cmp	r0, #32
   1c844:	bhi	1c858 <main@@Base+0x65fc>
   1c848:	mov	r0, r8
   1c84c:	mov	r2, r5
   1c850:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1c854:	mov	r7, r0
   1c858:	cmp	sl, r7
   1c85c:	beq	196a0 <main@@Base+0x3444>
   1c860:	ldr	r0, [r8]
   1c864:	mov	r1, #8
   1c868:	mov	r2, #4
   1c86c:	mvn	r3, #-536870912	; 0xe0000000
   1c870:	bl	30e38 <flatcc_builder_start_vector@@Base>
   1c874:	cmp	r0, #0
   1c878:	bne	21448 <main@@Base+0xb1ec>
   1c87c:	ldr	sl, [sp, #36]	; 0x24
   1c880:	cmp	r7, r5
   1c884:	beq	1c8b8 <main@@Base+0x665c>
   1c888:	ldrb	r0, [r7]
   1c88c:	cmp	r0, #91	; 0x5b
   1c890:	bne	1c8b8 <main@@Base+0x665c>
   1c894:	add	r1, r7, #1
   1c898:	sub	r0, r5, r1
   1c89c:	cmp	r0, #2
   1c8a0:	blt	1d0f4 <main@@Base+0x6e98>
   1c8a4:	ldrb	r0, [r1]
   1c8a8:	cmp	r0, #32
   1c8ac:	bls	1d0e4 <main@@Base+0x6e88>
   1c8b0:	mov	r7, r1
   1c8b4:	b	1d104 <main@@Base+0x6ea8>
   1c8b8:	mov	r0, r8
   1c8bc:	mov	r1, r7
   1c8c0:	mov	r2, r5
   1c8c4:	mov	r3, #22
   1c8c8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1c8cc:	mov	r7, r0
   1c8d0:	ldr	r0, [r8]
   1c8d4:	bl	320b0 <flatcc_builder_end_vector@@Base>
   1c8d8:	cmp	r0, #0
   1c8dc:	str	r0, [sp, #52]	; 0x34
   1c8e0:	beq	21448 <main@@Base+0xb1ec>
   1c8e4:	ldr	r0, [r8]
   1c8e8:	mov	r1, #29
   1c8ec:	b	1a5c4 <main@@Base+0x4368>
   1c8f0:	muleq	r4, ip, r8
   1c8f4:	ldr	sl, [sp, #36]	; 0x24
   1c8f8:	mov	r6, r0
   1c8fc:	str	r6, [fp, #-60]	; 0xffffffc4
   1c900:	cmp	r7, r4
   1c904:	bne	1c93c <main@@Base+0x66e0>
   1c908:	sub	r0, fp, #60	; 0x3c
   1c90c:	mov	r1, r7
   1c910:	mov	r2, r5
   1c914:	str	r0, [sp]
   1c918:	mov	r0, r8
   1c91c:	ldr	r3, [pc, #4080]	; 1d914 <main@@Base+0x76b8>
   1c920:	add	r3, pc, r3
   1c924:	bl	25970 <main@@Base+0xf714>
   1c928:	mov	r4, r0
   1c92c:	cmp	r0, r7
   1c930:	cmpne	r4, r5
   1c934:	beq	214a0 <main@@Base+0xb244>
   1c938:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1c93c:	cmp	r6, #0
   1c940:	bne	1c950 <main@@Base+0x66f4>
   1c944:	ldrb	r0, [r8, #8]
   1c948:	tst	r0, #2
   1c94c:	beq	20168 <main@@Base+0x9f0c>
   1c950:	ldr	r0, [r8]
   1c954:	mov	r1, #16
   1c958:	b	1f7c4 <main@@Base+0x9568>
   1c95c:	andeq	r3, r4, ip, lsl #16
   1c960:	bne	1c970 <main@@Base+0x6714>
   1c964:	ldrb	r0, [r7, #2]!
   1c968:	cmp	r0, #32
   1c96c:	bhi	1c980 <main@@Base+0x6724>
   1c970:	mov	r0, r8
   1c974:	mov	r2, r5
   1c978:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1c97c:	mov	r7, r0
   1c980:	cmp	r9, r7
   1c984:	beq	187e8 <main@@Base+0x258c>
   1c988:	mov	r6, #0
   1c98c:	cmp	r7, r5
   1c990:	str	r6, [fp, #-52]	; 0xffffffcc
   1c994:	str	r6, [fp, #-56]	; 0xffffffc8
   1c998:	strh	r6, [fp, #-60]	; 0xffffffc4
   1c99c:	str	r6, [sp, #56]	; 0x38
   1c9a0:	beq	1ca04 <main@@Base+0x67a8>
   1c9a4:	sub	r0, fp, #56	; 0x38
   1c9a8:	mov	r1, r7
   1c9ac:	mov	r2, r5
   1c9b0:	add	r3, sp, #56	; 0x38
   1c9b4:	str	r0, [sp]
   1c9b8:	mov	r0, r8
   1c9bc:	bl	382dc <flatcc_json_parser_integer@@Base>
   1c9c0:	cmp	r0, r7
   1c9c4:	beq	1ca14 <main@@Base+0x67b8>
   1c9c8:	ldr	r2, [sp, #56]	; 0x38
   1c9cc:	mov	r4, r0
   1c9d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c9d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c9d8:	cmp	r2, #0
   1c9dc:	beq	1ca28 <main@@Base+0x67cc>
   1c9e0:	movw	r2, #32769	; 0x8001
   1c9e4:	subs	r2, r0, r2
   1c9e8:	sbcs	r1, r1, #0
   1c9ec:	bcc	1ca58 <main@@Base+0x67fc>
   1c9f0:	mov	r0, r8
   1c9f4:	mov	r1, r4
   1c9f8:	mov	r2, r5
   1c9fc:	mov	r3, #8
   1ca00:	b	1ca44 <main@@Base+0x67e8>
   1ca04:	mov	r4, r5
   1ca08:	cmp	r7, r4
   1ca0c:	bne	1caa4 <main@@Base+0x6848>
   1ca10:	b	1ca70 <main@@Base+0x6814>
   1ca14:	mov	r4, r7
   1ca18:	cmp	r7, r4
   1ca1c:	bne	1caa4 <main@@Base+0x6848>
   1ca20:	b	1ca70 <main@@Base+0x6814>
   1ca24:	andeq	r3, r4, r8, ror r7
   1ca28:	subs	r2, r0, #32768	; 0x8000
   1ca2c:	sbcs	r1, r1, #0
   1ca30:	bcc	1ca60 <main@@Base+0x6804>
   1ca34:	mov	r0, r8
   1ca38:	mov	r1, r4
   1ca3c:	mov	r2, r5
   1ca40:	mov	r3, #7
   1ca44:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1ca48:	mov	r4, r0
   1ca4c:	cmp	r7, r4
   1ca50:	bne	1caa4 <main@@Base+0x6848>
   1ca54:	b	1ca70 <main@@Base+0x6814>
   1ca58:	rsb	r6, r0, #0
   1ca5c:	b	1ca64 <main@@Base+0x6808>
   1ca60:	mov	r6, r0
   1ca64:	strh	r6, [fp, #-60]	; 0xffffffc4
   1ca68:	cmp	r7, r4
   1ca6c:	bne	1caa4 <main@@Base+0x6848>
   1ca70:	sub	r0, fp, #60	; 0x3c
   1ca74:	mov	r1, r7
   1ca78:	mov	r2, r5
   1ca7c:	str	r0, [sp]
   1ca80:	mov	r0, r8
   1ca84:	ldr	r3, [pc, #4040]	; 1da54 <main@@Base+0x77f8>
   1ca88:	add	r3, pc, r3
   1ca8c:	bl	237ac <main@@Base+0xd550>
   1ca90:	mov	r4, r0
   1ca94:	cmp	r0, r7
   1ca98:	cmpne	r4, r5
   1ca9c:	beq	214a0 <main@@Base+0xb244>
   1caa0:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1caa4:	uxth	r0, r6
   1caa8:	cmp	r0, #150	; 0x96
   1caac:	bne	1cabc <main@@Base+0x6860>
   1cab0:	ldrb	r0, [r8, #8]
   1cab4:	tst	r0, #2
   1cab8:	beq	20168 <main@@Base+0x9f0c>
   1cabc:	ldr	r0, [r8]
   1cac0:	mov	r1, #1
   1cac4:	mov	r2, #2
   1cac8:	mov	r3, #2
   1cacc:	bl	327e4 <flatcc_builder_table_add@@Base>
   1cad0:	cmp	r0, #0
   1cad4:	beq	214a0 <main@@Base+0xb244>
   1cad8:	strh	r6, [r0]
   1cadc:	b	20168 <main@@Base+0x9f0c>
   1cae0:	bne	1caf0 <main@@Base+0x6894>
   1cae4:	ldrb	r0, [r7, #2]!
   1cae8:	cmp	r0, #32
   1caec:	bhi	1cb00 <main@@Base+0x68a4>
   1caf0:	mov	r0, r8
   1caf4:	mov	r2, r5
   1caf8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1cafc:	mov	r7, r0
   1cb00:	cmp	r9, r7
   1cb04:	beq	187e8 <main@@Base+0x258c>
   1cb08:	mov	r0, #0
   1cb0c:	mov	r1, r7
   1cb10:	mov	r2, r5
   1cb14:	sub	r3, fp, #56	; 0x38
   1cb18:	str	r0, [fp, #-56]	; 0xffffffc8
   1cb1c:	mov	r0, r8
   1cb20:	bl	38198 <flatcc_json_parser_float@@Base>
   1cb24:	mov	r4, r0
   1cb28:	cmp	r7, r0
   1cb2c:	bne	1cb60 <main@@Base+0x6904>
   1cb30:	sub	r0, fp, #56	; 0x38
   1cb34:	mov	r1, r7
   1cb38:	mov	r2, r5
   1cb3c:	str	r0, [sp]
   1cb40:	mov	r0, r8
   1cb44:	ldr	r3, [pc, #4072]	; 1db34 <main@@Base+0x78d8>
   1cb48:	add	r3, pc, r3
   1cb4c:	bl	257cc <main@@Base+0xf570>
   1cb50:	mov	r4, r0
   1cb54:	cmp	r0, r7
   1cb58:	cmpne	r4, r5
   1cb5c:	beq	17324 <main@@Base+0x10c8>
   1cb60:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1cb64:	vcmp.f32	s0, s18
   1cb68:	vmrs	APSR_nzcv, fpscr
   1cb6c:	bne	1cb7c <main@@Base+0x6920>
   1cb70:	ldrb	r0, [r8, #8]
   1cb74:	tst	r0, #2
   1cb78:	beq	20168 <main@@Base+0x9f0c>
   1cb7c:	ldr	r0, [r8]
   1cb80:	mov	r1, #25
   1cb84:	b	19390 <main@@Base+0x3134>
   1cb88:	bne	1cb98 <main@@Base+0x693c>
   1cb8c:	ldrb	r0, [r7, #2]!
   1cb90:	cmp	r0, #32
   1cb94:	bhi	1cba8 <main@@Base+0x694c>
   1cb98:	mov	r0, r8
   1cb9c:	mov	r2, r5
   1cba0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1cba4:	mov	r7, r0
   1cba8:	cmp	sl, r7
   1cbac:	beq	1a3d8 <main@@Base+0x417c>
   1cbb0:	mov	r6, #0
   1cbb4:	cmp	r7, r5
   1cbb8:	str	r6, [fp, #-52]	; 0xffffffcc
   1cbbc:	str	r6, [fp, #-56]	; 0xffffffc8
   1cbc0:	str	r6, [sp, #60]	; 0x3c
   1cbc4:	str	r6, [sp, #56]	; 0x38
   1cbc8:	str	r6, [fp, #-60]	; 0xffffffc4
   1cbcc:	beq	1cc28 <main@@Base+0x69cc>
   1cbd0:	sub	r0, fp, #56	; 0x38
   1cbd4:	mov	r1, r7
   1cbd8:	mov	r2, r5
   1cbdc:	sub	r3, fp, #60	; 0x3c
   1cbe0:	str	r0, [sp]
   1cbe4:	mov	r0, r8
   1cbe8:	bl	382dc <flatcc_json_parser_integer@@Base>
   1cbec:	cmp	r0, r7
   1cbf0:	beq	1cc34 <main@@Base+0x69d8>
   1cbf4:	sub	r9, fp, #60	; 0x3c
   1cbf8:	mov	r4, r0
   1cbfc:	ldm	r9, {r0, r6, r9}
   1cc00:	cmp	r0, #0
   1cc04:	beq	1cc48 <main@@Base+0x69ec>
   1cc08:	subs	r0, r6, #1
   1cc0c:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1cc10:	bcc	1cc74 <main@@Base+0x6a18>
   1cc14:	mov	r0, r8
   1cc18:	mov	r1, r4
   1cc1c:	mov	r2, r5
   1cc20:	mov	r3, #8
   1cc24:	b	1cc60 <main@@Base+0x6a04>
   1cc28:	mov	r9, #0
   1cc2c:	mov	r4, r5
   1cc30:	b	1cc84 <main@@Base+0x6a28>
   1cc34:	mov	r6, #0
   1cc38:	mov	r9, #0
   1cc3c:	mov	r4, r7
   1cc40:	b	1cc84 <main@@Base+0x6a28>
   1cc44:	andeq	r3, r4, r8, lsr #9
   1cc48:	cmn	r9, #1
   1cc4c:	bgt	1cc7c <main@@Base+0x6a20>
   1cc50:	mov	r0, r8
   1cc54:	mov	r1, r4
   1cc58:	mov	r2, r5
   1cc5c:	mov	r3, #7
   1cc60:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1cc64:	mov	r4, r0
   1cc68:	mov	r6, #0
   1cc6c:	mov	r9, #0
   1cc70:	b	1cc84 <main@@Base+0x6a28>
   1cc74:	rsbs	r6, r6, #0
   1cc78:	rsc	r9, r9, #0
   1cc7c:	str	r6, [sp, #56]	; 0x38
   1cc80:	str	r9, [sp, #60]	; 0x3c
   1cc84:	ldr	sl, [sp, #36]	; 0x24
   1cc88:	cmp	r7, r4
   1cc8c:	bne	1ccc8 <main@@Base+0x6a6c>
   1cc90:	add	r0, sp, #56	; 0x38
   1cc94:	mov	r1, r7
   1cc98:	mov	r2, r5
   1cc9c:	str	r0, [sp]
   1cca0:	mov	r0, r8
   1cca4:	ldr	r3, [pc, #4088]	; 1dca4 <main@@Base+0x7a48>
   1cca8:	add	r3, pc, r3
   1ccac:	bl	25b80 <main@@Base+0xf924>
   1ccb0:	mov	r4, r0
   1ccb4:	cmp	r0, r7
   1ccb8:	cmpne	r4, r5
   1ccbc:	beq	214a0 <main@@Base+0xb244>
   1ccc0:	ldr	r6, [sp, #56]	; 0x38
   1ccc4:	ldr	r9, [sp, #60]	; 0x3c
   1ccc8:	orrs	r0, r6, r9
   1cccc:	bne	1ccdc <main@@Base+0x6a80>
   1ccd0:	ldrb	r0, [r8, #8]
   1ccd4:	tst	r0, #2
   1ccd8:	beq	20168 <main@@Base+0x9f0c>
   1ccdc:	ldr	r0, [r8]
   1cce0:	mov	r1, #18
   1cce4:	b	1de84 <main@@Base+0x7c28>
   1cce8:	beq	1e114 <main@@Base+0x7eb8>
   1ccec:	b	1e124 <main@@Base+0x7ec8>
   1ccf0:	bne	1cd00 <main@@Base+0x6aa4>
   1ccf4:	ldrb	r0, [r2, #2]!
   1ccf8:	cmp	r0, #32
   1ccfc:	bhi	1cd10 <main@@Base+0x6ab4>
   1cd00:	mov	r0, r8
   1cd04:	mov	r2, r5
   1cd08:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1cd0c:	mov	r2, r0
   1cd10:	cmp	r4, r2
   1cd14:	beq	20154 <main@@Base+0x9ef8>
   1cd18:	ldr	r0, [sp, #48]	; 0x30
   1cd1c:	mov	r1, #8
   1cd20:	mov	r3, #0
   1cd24:	str	r1, [sp]
   1cd28:	mov	r1, r2
   1cd2c:	mov	r2, r5
   1cd30:	str	r0, [sp, #4]
   1cd34:	ldr	r0, [pc, #3956]	; 1dcb0 <main@@Base+0x7a54>
   1cd38:	add	r0, pc, r0
   1cd3c:	str	r0, [sp, #8]
   1cd40:	ldr	r0, [pc, #4092]	; 1dd44 <main@@Base+0x7ae8>
   1cd44:	add	r0, pc, r0
   1cd48:	str	r0, [sp, #12]
   1cd4c:	mov	r0, r8
   1cd50:	bl	38da0 <flatcc_json_parser_union_type@@Base>
   1cd54:	b	20164 <main@@Base+0x9f08>
   1cd58:	bne	1cd68 <main@@Base+0x6b0c>
   1cd5c:	ldrb	r0, [r4, #2]!
   1cd60:	cmp	r0, #32
   1cd64:	bhi	1cd78 <main@@Base+0x6b1c>
   1cd68:	ldr	r0, [sp, #40]	; 0x28
   1cd6c:	mov	r2, r5
   1cd70:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1cd74:	mov	r4, r0
   1cd78:	cmp	r8, r4
   1cd7c:	beq	1aa70 <main@@Base+0x4814>
   1cd80:	ldr	r8, [sp, #40]	; 0x28
   1cd84:	mov	r0, #0
   1cd88:	mov	r1, #0
   1cd8c:	str	r0, [sp, #52]	; 0x34
   1cd90:	ldr	r0, [r8]
   1cd94:	bl	31348 <flatcc_builder_start_table@@Base>
   1cd98:	cmp	r0, #0
   1cd9c:	bne	1ce04 <main@@Base+0x6ba8>
   1cda0:	cmp	r4, r5
   1cda4:	beq	1cddc <main@@Base+0x6b80>
   1cda8:	ldrb	r0, [r4]
   1cdac:	cmp	r0, #123	; 0x7b
   1cdb0:	bne	1cddc <main@@Base+0x6b80>
   1cdb4:	add	r1, r4, #1
   1cdb8:	sub	r0, r5, r1
   1cdbc:	cmp	r0, #2
   1cdc0:	blt	1f900 <main@@Base+0x96a4>
   1cdc4:	ldrb	r0, [r1]
   1cdc8:	cmp	r0, #32
   1cdcc:	bls	1f8ec <main@@Base+0x9690>
   1cdd0:	ldr	r5, [sp, #44]	; 0x2c
   1cdd4:	mov	r4, r1
   1cdd8:	b	1f910 <main@@Base+0x96b4>
   1cddc:	mov	r0, r8
   1cde0:	mov	r1, r4
   1cde4:	mov	r2, r5
   1cde8:	mov	r3, #21
   1cdec:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1cdf0:	mov	r4, r0
   1cdf4:	ldr	r0, [r8, #24]
   1cdf8:	cmp	r0, #0
   1cdfc:	beq	1ce34 <main@@Base+0x6bd8>
   1ce00:	ldr	sl, [sp, #36]	; 0x24
   1ce04:	mov	r0, r8
   1ce08:	mov	r1, r4
   1ce0c:	mov	r2, r5
   1ce10:	mov	r3, #33	; 0x21
   1ce14:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1ce18:	mov	r4, r0
   1ce1c:	ldr	r0, [sp, #52]	; 0x34
   1ce20:	cmp	r0, #0
   1ce24:	beq	17324 <main@@Base+0x10c8>
   1ce28:	ldr	r0, [r8]
   1ce2c:	mov	r1, #34	; 0x22
   1ce30:	b	19d64 <main@@Base+0x3b08>
   1ce34:	ldr	r0, [r8]
   1ce38:	bl	31d70 <flatcc_builder_end_table@@Base>
   1ce3c:	ldr	sl, [sp, #36]	; 0x24
   1ce40:	cmp	r0, #0
   1ce44:	str	r0, [sp, #52]	; 0x34
   1ce48:	bne	1ce28 <main@@Base+0x6bcc>
   1ce4c:	b	1ce04 <main@@Base+0x6ba8>
   1ce50:	mov	r4, r5
   1ce54:	b	1ab4c <main@@Base+0x48f0>
   1ce58:	cmp	r0, #93	; 0x5d
   1ce5c:	bne	1e510 <main@@Base+0x82b4>
   1ce60:	ldr	r5, [sp, #44]	; 0x2c
   1ce64:	ldr	r8, [sp, #40]	; 0x28
   1ce68:	ldr	sl, [sp, #36]	; 0x24
   1ce6c:	add	r1, r4, #1
   1ce70:	sub	r0, r5, r1
   1ce74:	cmp	r0, #2
   1ce78:	blt	1cf40 <main@@Base+0x6ce4>
   1ce7c:	ldrb	r0, [r1]
   1ce80:	cmp	r0, #32
   1ce84:	bls	1cf24 <main@@Base+0x6cc8>
   1ce88:	ldr	r5, [sp, #44]	; 0x2c
   1ce8c:	ldr	r8, [sp, #40]	; 0x28
   1ce90:	ldr	sl, [sp, #36]	; 0x24
   1ce94:	mov	r4, r1
   1ce98:	b	1ab4c <main@@Base+0x48f0>
   1ce9c:	bne	1ceb0 <main@@Base+0x6c54>
   1cea0:	mov	r9, r1
   1cea4:	ldrb	r0, [r9, #1]!
   1cea8:	cmp	r0, #32
   1ceac:	bhi	1cec0 <main@@Base+0x6c64>
   1ceb0:	mov	r0, r8
   1ceb4:	mov	r2, r5
   1ceb8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1cebc:	mov	r9, r0
   1cec0:	cmp	r9, r5
   1cec4:	beq	1cf0c <main@@Base+0x6cb0>
   1cec8:	ldrb	r0, [r9]
   1cecc:	cmp	r0, #58	; 0x3a
   1ced0:	bne	1cf0c <main@@Base+0x6cb0>
   1ced4:	add	r1, r9, #1
   1ced8:	sub	r0, r5, r1
   1cedc:	cmp	r0, #2
   1cee0:	blt	1f678 <main@@Base+0x941c>
   1cee4:	ldrb	r0, [r1]
   1cee8:	cmp	r0, #32
   1ceec:	bls	1f65c <main@@Base+0x9400>
   1cef0:	ldr	r5, [sp, #44]	; 0x2c
   1cef4:	ldr	r8, [sp, #40]	; 0x28
   1cef8:	ldr	sl, [sp, #36]	; 0x24
   1cefc:	mov	r9, r1
   1cf00:	cmp	r7, r9
   1cf04:	bne	1f690 <main@@Base+0x9434>
   1cf08:	b	1f6e4 <main@@Base+0x9488>
   1cf0c:	mov	r0, r8
   1cf10:	mov	r1, r9
   1cf14:	mov	r2, r5
   1cf18:	mov	r3, #4
   1cf1c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1cf20:	b	1f684 <main@@Base+0x9428>
   1cf24:	ldr	r5, [sp, #44]	; 0x2c
   1cf28:	ldr	r8, [sp, #40]	; 0x28
   1cf2c:	ldr	sl, [sp, #36]	; 0x24
   1cf30:	bne	1cf40 <main@@Base+0x6ce4>
   1cf34:	ldrb	r0, [r4, #2]!
   1cf38:	cmp	r0, #32
   1cf3c:	bhi	1ab4c <main@@Base+0x48f0>
   1cf40:	mov	r0, r8
   1cf44:	mov	r2, r5
   1cf48:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1cf4c:	b	1ab48 <main@@Base+0x48ec>
   1cf50:	mov	r0, r8
   1cf54:	mov	r1, r5
   1cf58:	mov	r2, r5
   1cf5c:	mov	r3, #9
   1cf60:	b	1ab44 <main@@Base+0x48e8>
   1cf64:	bne	1cf74 <main@@Base+0x6d18>
   1cf68:	ldrb	r0, [r4, #2]!
   1cf6c:	cmp	r0, #32
   1cf70:	bhi	1cf84 <main@@Base+0x6d28>
   1cf74:	mov	r0, r8
   1cf78:	mov	r2, r5
   1cf7c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1cf80:	mov	r4, r0
   1cf84:	cmp	r4, r5
   1cf88:	mov	r2, r5
   1cf8c:	beq	1cfdc <main@@Base+0x6d80>
   1cf90:	ldrb	r0, [r4]
   1cf94:	cmp	r0, #93	; 0x5d
   1cf98:	bne	1cfd8 <main@@Base+0x6d7c>
   1cf9c:	add	r1, r4, #1
   1cfa0:	sub	r0, r5, r1
   1cfa4:	cmp	r0, #2
   1cfa8:	blt	20f4c <main@@Base+0xacf0>
   1cfac:	ldrb	r0, [r1]
   1cfb0:	cmp	r0, #32
   1cfb4:	bhi	1ec14 <main@@Base+0x89b8>
   1cfb8:	ldr	r5, [sp, #44]	; 0x2c
   1cfbc:	ldr	r8, [sp, #40]	; 0x28
   1cfc0:	ldr	sl, [sp, #36]	; 0x24
   1cfc4:	bne	20f4c <main@@Base+0xacf0>
   1cfc8:	ldrb	r0, [r4, #2]!
   1cfcc:	cmp	r0, #32
   1cfd0:	bhi	1c818 <main@@Base+0x65bc>
   1cfd4:	b	20f4c <main@@Base+0xacf0>
   1cfd8:	mov	r2, r4
   1cfdc:	mov	r1, r2
   1cfe0:	mov	r0, r8
   1cfe4:	mov	r2, r5
   1cfe8:	add	r3, sp, #52	; 0x34
   1cfec:	bl	38888 <flatcc_json_parser_build_string@@Base>
   1cff0:	mov	r4, r0
   1cff4:	ldr	r0, [sp, #52]	; 0x34
   1cff8:	cmp	r0, #0
   1cffc:	beq	17324 <main@@Base+0x10c8>
   1d000:	ldr	r0, [r8]
   1d004:	mov	r1, #1
   1d008:	bl	3061c <flatcc_builder_extend_offset_vector@@Base>
   1d00c:	cmp	r0, #0
   1d010:	beq	17324 <main@@Base+0x10c8>
   1d014:	ldr	r1, [sp, #52]	; 0x34
   1d018:	str	r1, [r0]
   1d01c:	sub	r0, r5, r4
   1d020:	cmp	r0, #2
   1d024:	blt	1d058 <main@@Base+0x6dfc>
   1d028:	ldrb	r0, [r4]
   1d02c:	cmp	r0, #32
   1d030:	bls	1d044 <main@@Base+0x6de8>
   1d034:	mov	r2, r4
   1d038:	cmp	r2, r5
   1d03c:	bne	1d074 <main@@Base+0x6e18>
   1d040:	b	1eba8 <main@@Base+0x894c>
   1d044:	bne	1d058 <main@@Base+0x6dfc>
   1d048:	mov	r2, r4
   1d04c:	ldrb	r0, [r2, #1]!
   1d050:	cmp	r0, #32
   1d054:	bhi	1d06c <main@@Base+0x6e10>
   1d058:	mov	r0, r8
   1d05c:	mov	r1, r4
   1d060:	mov	r2, r5
   1d064:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1d068:	mov	r2, r0
   1d06c:	cmp	r2, r5
   1d070:	beq	1eba8 <main@@Base+0x894c>
   1d074:	ldrb	r0, [r2]
   1d078:	cmp	r0, #44	; 0x2c
   1d07c:	bne	1ebe4 <main@@Base+0x8988>
   1d080:	add	r1, r2, #1
   1d084:	sub	r0, r5, r1
   1d088:	cmp	r0, #2
   1d08c:	blt	1d0bc <main@@Base+0x6e60>
   1d090:	ldrb	r0, [r1]
   1d094:	cmp	r0, #32
   1d098:	bls	1d0ac <main@@Base+0x6e50>
   1d09c:	mov	r2, r1
   1d0a0:	cmp	r2, r5
   1d0a4:	bne	1d0d4 <main@@Base+0x6e78>
   1d0a8:	b	1ec28 <main@@Base+0x89cc>
   1d0ac:	bne	1d0bc <main@@Base+0x6e60>
   1d0b0:	ldrb	r0, [r2, #2]!
   1d0b4:	cmp	r0, #32
   1d0b8:	bhi	1d0cc <main@@Base+0x6e70>
   1d0bc:	mov	r0, r8
   1d0c0:	mov	r2, r5
   1d0c4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1d0c8:	mov	r2, r0
   1d0cc:	cmp	r2, r5
   1d0d0:	beq	1ec28 <main@@Base+0x89cc>
   1d0d4:	ldrb	r0, [r2]
   1d0d8:	cmp	r0, #93	; 0x5d
   1d0dc:	bne	1cfdc <main@@Base+0x6d80>
   1d0e0:	b	1ebf4 <main@@Base+0x8998>
   1d0e4:	bne	1d0f4 <main@@Base+0x6e98>
   1d0e8:	ldrb	r0, [r7, #2]!
   1d0ec:	cmp	r0, #32
   1d0f0:	bhi	1d104 <main@@Base+0x6ea8>
   1d0f4:	mov	r0, r8
   1d0f8:	mov	r2, r5
   1d0fc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1d100:	mov	r7, r0
   1d104:	cmp	r7, r5
   1d108:	mov	r4, r5
   1d10c:	beq	1d15c <main@@Base+0x6f00>
   1d110:	ldrb	r0, [r7]
   1d114:	cmp	r0, #93	; 0x5d
   1d118:	bne	1d158 <main@@Base+0x6efc>
   1d11c:	add	r1, r7, #1
   1d120:	sub	r0, r5, r1
   1d124:	cmp	r0, #2
   1d128:	blt	20fa8 <main@@Base+0xad4c>
   1d12c:	ldrb	r0, [r1]
   1d130:	cmp	r0, #32
   1d134:	bhi	1e73c <main@@Base+0x84e0>
   1d138:	ldr	r5, [sp, #44]	; 0x2c
   1d13c:	ldr	r8, [sp, #40]	; 0x28
   1d140:	ldr	sl, [sp, #36]	; 0x24
   1d144:	bne	20fa8 <main@@Base+0xad4c>
   1d148:	ldrb	r0, [r7, #2]!
   1d14c:	cmp	r0, #32
   1d150:	bhi	1c8d0 <main@@Base+0x6674>
   1d154:	b	20fa8 <main@@Base+0xad4c>
   1d158:	mov	r4, r7
   1d15c:	ldr	r0, [r8]
   1d160:	mov	r1, #1
   1d164:	bl	30274 <flatcc_builder_extend_vector@@Base>
   1d168:	mov	r9, r0
   1d16c:	cmp	r0, #0
   1d170:	beq	17324 <main@@Base+0x10c8>
   1d174:	cmp	r4, r5
   1d178:	beq	1d1ac <main@@Base+0x6f50>
   1d17c:	ldrb	r0, [r4]
   1d180:	cmp	r0, #123	; 0x7b
   1d184:	bne	1d1ac <main@@Base+0x6f50>
   1d188:	add	r1, r4, #1
   1d18c:	sub	r0, r5, r1
   1d190:	cmp	r0, #2
   1d194:	blt	1d1d8 <main@@Base+0x6f7c>
   1d198:	ldrb	r0, [r1]
   1d19c:	cmp	r0, #32
   1d1a0:	bls	1d1c8 <main@@Base+0x6f6c>
   1d1a4:	mov	r4, r1
   1d1a8:	b	1d1e8 <main@@Base+0x6f8c>
   1d1ac:	mov	r0, r8
   1d1b0:	mov	r1, r4
   1d1b4:	mov	r2, r5
   1d1b8:	mov	r3, #21
   1d1bc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1d1c0:	mov	r4, r0
   1d1c4:	b	1d9c4 <main@@Base+0x7768>
   1d1c8:	bne	1d1d8 <main@@Base+0x6f7c>
   1d1cc:	ldrb	r0, [r4, #2]!
   1d1d0:	cmp	r0, #32
   1d1d4:	bhi	1d1e8 <main@@Base+0x6f8c>
   1d1d8:	mov	r0, r8
   1d1dc:	mov	r2, r5
   1d1e0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1d1e4:	mov	r4, r0
   1d1e8:	cmp	r4, r5
   1d1ec:	mov	r2, r5
   1d1f0:	beq	1d244 <main@@Base+0x6fe8>
   1d1f4:	ldrb	r0, [r4]
   1d1f8:	cmp	r0, #125	; 0x7d
   1d1fc:	bne	1d240 <main@@Base+0x6fe4>
   1d200:	add	r1, r4, #1
   1d204:	sub	r0, r5, r1
   1d208:	cmp	r0, #2
   1d20c:	blt	1dab4 <main@@Base+0x7858>
   1d210:	ldrb	r0, [r1]
   1d214:	cmp	r0, #32
   1d218:	bhi	1d984 <main@@Base+0x7728>
   1d21c:	ldr	r5, [sp, #44]	; 0x2c
   1d220:	ldr	r8, [sp, #40]	; 0x28
   1d224:	ldr	sl, [sp, #36]	; 0x24
   1d228:	bne	1dab4 <main@@Base+0x7858>
   1d22c:	ldrb	r0, [r4, #2]!
   1d230:	cmp	r0, #32
   1d234:	bls	1dab4 <main@@Base+0x7858>
   1d238:	b	1d9c4 <main@@Base+0x7768>
   1d23c:	andeq	lr, r2, r5, asr lr
   1d240:	mov	r2, r4
   1d244:	cmp	r2, r5
   1d248:	mov	sl, r5
   1d24c:	beq	1d2a4 <main@@Base+0x7048>
   1d250:	ldrb	r0, [r2]
   1d254:	cmp	r0, #46	; 0x2e
   1d258:	beq	1d278 <main@@Base+0x701c>
   1d25c:	cmp	r0, #34	; 0x22
   1d260:	bne	1d294 <main@@Base+0x7038>
   1d264:	ldr	r0, [sp, #32]
   1d268:	mov	r1, #0
   1d26c:	add	sl, r2, #1
   1d270:	b	1d2a0 <main@@Base+0x7044>
   1d274:	andeq	lr, r2, r6, lsr lr
   1d278:	mov	r1, r2
   1d27c:	mov	r0, r8
   1d280:	mov	r2, r5
   1d284:	mov	r3, #5
   1d288:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1d28c:	mov	sl, r0
   1d290:	b	1d2a4 <main@@Base+0x7048>
   1d294:	ldr	r0, [sp, #32]
   1d298:	mov	r1, #1
   1d29c:	mov	sl, r2
   1d2a0:	str	r1, [r0]
   1d2a4:	sub	lr, r5, sl
   1d2a8:	mov	r1, #8
   1d2ac:	cmp	lr, #8
   1d2b0:	movcc	r1, lr
   1d2b4:	sub	r2, r1, #1
   1d2b8:	cmp	r2, #7
   1d2bc:	bhi	1d7a4 <main@@Base+0x7548>
   1d2c0:	add	r0, pc, #36	; 0x24
   1d2c4:	mov	r1, #0
   1d2c8:	mov	ip, #0
   1d2cc:	mov	r8, #0
   1d2d0:	mov	r7, #0
   1d2d4:	mov	r3, #0
   1d2d8:	mov	r6, #0
   1d2dc:	mov	r4, #0
   1d2e0:	ldr	r5, [r0, r2, lsl #2]
   1d2e4:	mov	r2, #0
   1d2e8:	add	pc, r0, r5
   1d2ec:	andeq	r0, r0, r8, rrx
   1d2f0:	andeq	r0, r0, r0, rrx
   1d2f4:	andeq	r0, r0, r8, asr r0
   1d2f8:	andeq	r0, r0, r0, asr r0
   1d2fc:	andeq	r0, r0, r4, asr #32
   1d300:	andeq	r0, r0, r8, lsr r0
   1d304:	andeq	r0, r0, r8, lsr #32
   1d308:	andeq	r0, r0, r4, lsr #32
   1d30c:	andeq	r2, r4, ip, ror #26
   1d310:	ldrb	ip, [sl, #7]
   1d314:	ldrb	r0, [sl, #6]
   1d318:	mov	r8, r1
   1d31c:	orr	r0, ip, r0, lsl #8
   1d320:	mov	r1, r0
   1d324:	ldrb	r0, [sl, #5]
   1d328:	mov	r7, r8
   1d32c:	orr	r1, r1, r0, lsl #16
   1d330:	ldrb	r0, [sl, #4]
   1d334:	mov	r3, r7
   1d338:	orr	r1, r1, r0, lsl #24
   1d33c:	ldrb	r0, [sl, #3]
   1d340:	orr	r6, r0, r3
   1d344:	ldrb	r0, [sl, #2]
   1d348:	orr	r4, r6, r0, lsl #8
   1d34c:	ldrb	r0, [sl, #1]
   1d350:	orr	r2, r4, r0, lsl #16
   1d354:	ldrb	r0, [sl]
   1d358:	movw	r3, #0
   1d35c:	movt	r3, #26980	; 0x6964
   1d360:	orr	r2, r2, r0, lsl #24
   1d364:	mov	r0, r2
   1d368:	bfc	r0, #0, #16
   1d36c:	teq	r0, r3
   1d370:	bne	1d3c4 <main@@Base+0x7168>
   1d374:	ldr	r5, [sp, #44]	; 0x2c
   1d378:	ldr	r8, [sp, #40]	; 0x28
   1d37c:	cmp	lr, #3
   1d380:	mov	r7, sl
   1d384:	blt	1d600 <main@@Base+0x73a4>
   1d388:	ldr	r2, [sp, #32]
   1d38c:	mov	r1, sl
   1d390:	ldrb	r0, [r1, #2]!
   1d394:	ldr	r2, [r2]
   1d398:	cmp	r2, #0
   1d39c:	beq	1d434 <main@@Base+0x71d8>
   1d3a0:	cmp	r0, #33	; 0x21
   1d3a4:	bcc	1d3b4 <main@@Base+0x7158>
   1d3a8:	cmp	r0, #58	; 0x3a
   1d3ac:	mov	r7, sl
   1d3b0:	bne	1d600 <main@@Base+0x73a4>
   1d3b4:	ldr	r0, [sp, #32]
   1d3b8:	mov	r2, #0
   1d3bc:	str	r2, [r0]
   1d3c0:	b	1d444 <main@@Base+0x71e8>
   1d3c4:	movw	r0, #25445	; 0x6365
   1d3c8:	ldr	r5, [sp, #44]	; 0x2c
   1d3cc:	ldr	r8, [sp, #40]	; 0x28
   1d3d0:	movt	r0, #24942	; 0x616e
   1d3d4:	eor	r0, r1, r0
   1d3d8:	movw	r1, #29556	; 0x7374
   1d3dc:	movt	r1, #25705	; 0x6469
   1d3e0:	eor	r1, r2, r1
   1d3e4:	orrs	r0, r0, r1
   1d3e8:	bne	1d7a4 <main@@Base+0x7548>
   1d3ec:	cmp	lr, #9
   1d3f0:	mov	r7, sl
   1d3f4:	blt	1d73c <main@@Base+0x74e0>
   1d3f8:	ldr	r2, [sp, #32]
   1d3fc:	mov	r1, sl
   1d400:	ldrb	r0, [r1, #8]!
   1d404:	ldr	r2, [r2]
   1d408:	cmp	r2, #0
   1d40c:	beq	1d474 <main@@Base+0x7218>
   1d410:	cmp	r0, #33	; 0x21
   1d414:	bcc	1d424 <main@@Base+0x71c8>
   1d418:	cmp	r0, #58	; 0x3a
   1d41c:	mov	r7, sl
   1d420:	bne	1d73c <main@@Base+0x74e0>
   1d424:	ldr	r0, [sp, #32]
   1d428:	mov	r2, #0
   1d42c:	str	r2, [r0]
   1d430:	b	1d484 <main@@Base+0x7228>
   1d434:	cmp	r0, #34	; 0x22
   1d438:	mov	r7, sl
   1d43c:	bne	1d600 <main@@Base+0x73a4>
   1d440:	add	r1, sl, #3
   1d444:	sub	r0, r5, r1
   1d448:	cmp	r0, #2
   1d44c:	blt	1d4d0 <main@@Base+0x7274>
   1d450:	ldrb	r0, [r1]
   1d454:	cmp	r0, #32
   1d458:	bls	1d4b4 <main@@Base+0x7258>
   1d45c:	ldr	r5, [sp, #44]	; 0x2c
   1d460:	ldr	r8, [sp, #40]	; 0x28
   1d464:	mov	r7, r1
   1d468:	cmp	r7, r5
   1d46c:	bne	1d4e8 <main@@Base+0x728c>
   1d470:	b	1d528 <main@@Base+0x72cc>
   1d474:	cmp	r0, #34	; 0x22
   1d478:	mov	r7, sl
   1d47c:	bne	1d73c <main@@Base+0x74e0>
   1d480:	add	r1, sl, #9
   1d484:	ldr	r4, [sp, #44]	; 0x2c
   1d488:	sub	r0, r4, r1
   1d48c:	cmp	r0, #2
   1d490:	blt	1d558 <main@@Base+0x72fc>
   1d494:	ldrb	r0, [r1]
   1d498:	cmp	r0, #32
   1d49c:	bls	1d540 <main@@Base+0x72e4>
   1d4a0:	ldr	r4, [sp, #44]	; 0x2c
   1d4a4:	mov	r7, r1
   1d4a8:	cmp	r7, r4
   1d4ac:	bne	1d570 <main@@Base+0x7314>
   1d4b0:	b	1d5b8 <main@@Base+0x735c>
   1d4b4:	ldr	r5, [sp, #44]	; 0x2c
   1d4b8:	ldr	r8, [sp, #40]	; 0x28
   1d4bc:	bne	1d4d0 <main@@Base+0x7274>
   1d4c0:	mov	r7, r1
   1d4c4:	ldrb	r0, [r7, #1]!
   1d4c8:	cmp	r0, #32
   1d4cc:	bhi	1d4e0 <main@@Base+0x7284>
   1d4d0:	mov	r0, r8
   1d4d4:	mov	r2, r5
   1d4d8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1d4dc:	mov	r7, r0
   1d4e0:	cmp	r7, r5
   1d4e4:	beq	1d528 <main@@Base+0x72cc>
   1d4e8:	ldrb	r0, [r7]
   1d4ec:	cmp	r0, #58	; 0x3a
   1d4f0:	bne	1d528 <main@@Base+0x72cc>
   1d4f4:	add	r1, r7, #1
   1d4f8:	sub	r0, r5, r1
   1d4fc:	cmp	r0, #2
   1d500:	blt	1d5f0 <main@@Base+0x7394>
   1d504:	ldrb	r0, [r1]
   1d508:	cmp	r0, #32
   1d50c:	bls	1d5d8 <main@@Base+0x737c>
   1d510:	ldr	r5, [sp, #44]	; 0x2c
   1d514:	ldr	r8, [sp, #40]	; 0x28
   1d518:	mov	r7, r1
   1d51c:	cmp	sl, r7
   1d520:	bne	1d608 <main@@Base+0x73ac>
   1d524:	b	1d7a4 <main@@Base+0x7548>
   1d528:	mov	r0, r8
   1d52c:	mov	r1, r7
   1d530:	mov	r2, r5
   1d534:	mov	r3, #4
   1d538:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1d53c:	b	1d5fc <main@@Base+0x73a0>
   1d540:	ldr	r4, [sp, #44]	; 0x2c
   1d544:	bne	1d558 <main@@Base+0x72fc>
   1d548:	mov	r7, r1
   1d54c:	ldrb	r0, [r7, #1]!
   1d550:	cmp	r0, #32
   1d554:	bhi	1d568 <main@@Base+0x730c>
   1d558:	ldr	r0, [sp, #40]	; 0x28
   1d55c:	mov	r2, r4
   1d560:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1d564:	mov	r7, r0
   1d568:	cmp	r7, r4
   1d56c:	beq	1d5b8 <main@@Base+0x735c>
   1d570:	ldrb	r0, [r7]
   1d574:	cmp	r0, #58	; 0x3a
   1d578:	bne	1d5b8 <main@@Base+0x735c>
   1d57c:	ldr	r5, [sp, #44]	; 0x2c
   1d580:	ldr	r8, [sp, #40]	; 0x28
   1d584:	add	r1, r7, #1
   1d588:	sub	r0, r5, r1
   1d58c:	cmp	r0, #2
   1d590:	blt	1d72c <main@@Base+0x74d0>
   1d594:	ldrb	r0, [r1]
   1d598:	cmp	r0, #32
   1d59c:	bls	1d714 <main@@Base+0x74b8>
   1d5a0:	ldr	r5, [sp, #44]	; 0x2c
   1d5a4:	ldr	r8, [sp, #40]	; 0x28
   1d5a8:	mov	r7, r1
   1d5ac:	cmp	sl, r7
   1d5b0:	bne	1d744 <main@@Base+0x74e8>
   1d5b4:	b	1d7a4 <main@@Base+0x7548>
   1d5b8:	ldr	r8, [sp, #40]	; 0x28
   1d5bc:	ldr	r5, [sp, #44]	; 0x2c
   1d5c0:	mov	r1, r7
   1d5c4:	mov	r3, #4
   1d5c8:	mov	r0, r8
   1d5cc:	mov	r2, r5
   1d5d0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1d5d4:	b	1d738 <main@@Base+0x74dc>
   1d5d8:	ldr	r5, [sp, #44]	; 0x2c
   1d5dc:	ldr	r8, [sp, #40]	; 0x28
   1d5e0:	bne	1d5f0 <main@@Base+0x7394>
   1d5e4:	ldrb	r0, [r7, #2]!
   1d5e8:	cmp	r0, #32
   1d5ec:	bhi	1d600 <main@@Base+0x73a4>
   1d5f0:	mov	r0, r8
   1d5f4:	mov	r2, r5
   1d5f8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1d5fc:	mov	r7, r0
   1d600:	cmp	sl, r7
   1d604:	beq	1d7a4 <main@@Base+0x7548>
   1d608:	mov	r4, #0
   1d60c:	cmp	r7, r5
   1d610:	str	r4, [fp, #-52]	; 0xffffffcc
   1d614:	str	r4, [fp, #-56]	; 0xffffffc8
   1d618:	str	r4, [fp, #-60]	; 0xffffffc4
   1d61c:	str	r4, [sp, #56]	; 0x38
   1d620:	beq	1d668 <main@@Base+0x740c>
   1d624:	sub	r0, fp, #56	; 0x38
   1d628:	mov	r1, r7
   1d62c:	mov	r2, r5
   1d630:	add	r3, sp, #56	; 0x38
   1d634:	str	r0, [sp]
   1d638:	mov	r0, r8
   1d63c:	bl	382dc <flatcc_json_parser_integer@@Base>
   1d640:	cmp	r0, r7
   1d644:	beq	1d678 <main@@Base+0x741c>
   1d648:	mov	r1, r0
   1d64c:	ldr	r0, [sp, #56]	; 0x38
   1d650:	cmp	r0, #0
   1d654:	beq	1d688 <main@@Base+0x742c>
   1d658:	mov	r0, r8
   1d65c:	mov	r2, r5
   1d660:	mov	r3, #8
   1d664:	b	1d6a8 <main@@Base+0x744c>
   1d668:	mov	r1, r5
   1d66c:	cmp	r7, r1
   1d670:	bne	1d6f0 <main@@Base+0x7494>
   1d674:	b	1d6b8 <main@@Base+0x745c>
   1d678:	mov	r1, r7
   1d67c:	cmp	r7, r1
   1d680:	bne	1d6f0 <main@@Base+0x7494>
   1d684:	b	1d6b8 <main@@Base+0x745c>
   1d688:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d68c:	cmp	r0, #0
   1d690:	beq	1d6f8 <main@@Base+0x749c>
   1d694:	ldr	r8, [sp, #40]	; 0x28
   1d698:	ldr	r5, [sp, #44]	; 0x2c
   1d69c:	mov	r3, #7
   1d6a0:	mov	r0, r8
   1d6a4:	mov	r2, r5
   1d6a8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1d6ac:	mov	r1, r0
   1d6b0:	cmp	r7, r1
   1d6b4:	bne	1d6f0 <main@@Base+0x7494>
   1d6b8:	sub	r0, fp, #60	; 0x3c
   1d6bc:	mov	r1, r7
   1d6c0:	mov	r2, r5
   1d6c4:	str	r0, [sp]
   1d6c8:	mov	r0, r8
   1d6cc:	ldr	r3, [pc, #4044]	; 1e6a0 <main@@Base+0x8444>
   1d6d0:	add	r3, pc, r3
   1d6d4:	bl	25d9c <main@@Base+0xfb40>
   1d6d8:	mov	r1, r0
   1d6dc:	cmp	r0, r7
   1d6e0:	cmpne	r1, r5
   1d6e4:	beq	1d934 <main@@Base+0x76d8>
   1d6e8:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1d6ec:	ldr	r8, [sp, #40]	; 0x28
   1d6f0:	str	r4, [r9]
   1d6f4:	b	1d7b8 <main@@Base+0x755c>
   1d6f8:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1d6fc:	ldr	r5, [sp, #44]	; 0x2c
   1d700:	ldr	r8, [sp, #40]	; 0x28
   1d704:	str	r4, [fp, #-60]	; 0xffffffc4
   1d708:	cmp	r7, r1
   1d70c:	bne	1d6f0 <main@@Base+0x7494>
   1d710:	b	1d6b8 <main@@Base+0x745c>
   1d714:	ldr	r5, [sp, #44]	; 0x2c
   1d718:	ldr	r8, [sp, #40]	; 0x28
   1d71c:	bne	1d72c <main@@Base+0x74d0>
   1d720:	ldrb	r0, [r7, #2]!
   1d724:	cmp	r0, #32
   1d728:	bhi	1d73c <main@@Base+0x74e0>
   1d72c:	mov	r0, r8
   1d730:	mov	r2, r5
   1d734:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1d738:	mov	r7, r0
   1d73c:	cmp	sl, r7
   1d740:	beq	1d7a4 <main@@Base+0x7548>
   1d744:	mov	r4, #0
   1d748:	cmp	r7, r5
   1d74c:	str	r4, [fp, #-52]	; 0xffffffcc
   1d750:	str	r4, [fp, #-56]	; 0xffffffc8
   1d754:	str	r4, [fp, #-60]	; 0xffffffc4
   1d758:	str	r4, [sp, #56]	; 0x38
   1d75c:	beq	1d87c <main@@Base+0x7620>
   1d760:	sub	r0, fp, #56	; 0x38
   1d764:	mov	r1, r7
   1d768:	mov	r2, r5
   1d76c:	add	r3, sp, #56	; 0x38
   1d770:	str	r0, [sp]
   1d774:	mov	r0, r8
   1d778:	bl	382dc <flatcc_json_parser_integer@@Base>
   1d77c:	cmp	r0, r7
   1d780:	beq	1d88c <main@@Base+0x7630>
   1d784:	mov	r1, r0
   1d788:	ldr	r0, [sp, #56]	; 0x38
   1d78c:	cmp	r0, #0
   1d790:	beq	1d89c <main@@Base+0x7640>
   1d794:	ldr	r8, [sp, #40]	; 0x28
   1d798:	ldr	r5, [sp, #44]	; 0x2c
   1d79c:	mov	r3, #8
   1d7a0:	b	1d8b4 <main@@Base+0x7658>
   1d7a4:	mov	r0, r8
   1d7a8:	mov	r1, sl
   1d7ac:	mov	r2, r5
   1d7b0:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   1d7b4:	mov	r1, r0
   1d7b8:	sub	r0, r5, r1
   1d7bc:	cmp	r0, #2
   1d7c0:	blt	1d7f4 <main@@Base+0x7598>
   1d7c4:	ldrb	r0, [r1]
   1d7c8:	cmp	r0, #32
   1d7cc:	bls	1d7e0 <main@@Base+0x7584>
   1d7d0:	mov	r2, r1
   1d7d4:	cmp	r2, r5
   1d7d8:	bne	1d80c <main@@Base+0x75b0>
   1d7dc:	b	1d94c <main@@Base+0x76f0>
   1d7e0:	bne	1d7f4 <main@@Base+0x7598>
   1d7e4:	mov	r2, r1
   1d7e8:	ldrb	r0, [r2, #1]!
   1d7ec:	cmp	r0, #32
   1d7f0:	bhi	1d804 <main@@Base+0x75a8>
   1d7f4:	mov	r0, r8
   1d7f8:	mov	r2, r5
   1d7fc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1d800:	mov	r2, r0
   1d804:	cmp	r2, r5
   1d808:	beq	1d94c <main@@Base+0x76f0>
   1d80c:	ldrb	r0, [r2]
   1d810:	cmp	r0, #44	; 0x2c
   1d814:	bne	1d954 <main@@Base+0x76f8>
   1d818:	add	r1, r2, #1
   1d81c:	sub	r0, r5, r1
   1d820:	cmp	r0, #2
   1d824:	blt	1d854 <main@@Base+0x75f8>
   1d828:	ldrb	r0, [r1]
   1d82c:	cmp	r0, #32
   1d830:	bls	1d844 <main@@Base+0x75e8>
   1d834:	mov	r2, r1
   1d838:	cmp	r2, r5
   1d83c:	bne	1d86c <main@@Base+0x7610>
   1d840:	b	1d994 <main@@Base+0x7738>
   1d844:	bne	1d854 <main@@Base+0x75f8>
   1d848:	ldrb	r0, [r2, #2]!
   1d84c:	cmp	r0, #32
   1d850:	bhi	1d864 <main@@Base+0x7608>
   1d854:	mov	r0, r8
   1d858:	mov	r2, r5
   1d85c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1d860:	mov	r2, r0
   1d864:	cmp	r2, r5
   1d868:	beq	1d994 <main@@Base+0x7738>
   1d86c:	ldrb	r0, [r2]
   1d870:	cmp	r0, #125	; 0x7d
   1d874:	bne	1d244 <main@@Base+0x6fe8>
   1d878:	b	1d964 <main@@Base+0x7708>
   1d87c:	mov	r1, r5
   1d880:	cmp	r7, r1
   1d884:	bne	1d90c <main@@Base+0x76b0>
   1d888:	b	1d8cc <main@@Base+0x7670>
   1d88c:	mov	r1, r7
   1d890:	cmp	r7, r1
   1d894:	bne	1d90c <main@@Base+0x76b0>
   1d898:	b	1d8cc <main@@Base+0x7670>
   1d89c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d8a0:	cmp	r0, #0
   1d8a4:	beq	1d918 <main@@Base+0x76bc>
   1d8a8:	ldr	r8, [sp, #40]	; 0x28
   1d8ac:	ldr	r5, [sp, #44]	; 0x2c
   1d8b0:	mov	r3, #7
   1d8b4:	mov	r0, r8
   1d8b8:	mov	r2, r5
   1d8bc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1d8c0:	mov	r1, r0
   1d8c4:	cmp	r7, r1
   1d8c8:	bne	1d90c <main@@Base+0x76b0>
   1d8cc:	sub	r0, fp, #60	; 0x3c
   1d8d0:	mov	r1, r7
   1d8d4:	mov	r2, r5
   1d8d8:	str	r0, [sp]
   1d8dc:	mov	r0, r8
   1d8e0:	ldr	r3, [pc, #4044]	; 1e8b4 <main@@Base+0x8658>
   1d8e4:	add	r3, pc, r3
   1d8e8:	bl	25d9c <main@@Base+0xfb40>
   1d8ec:	cmp	r0, r7
   1d8f0:	mov	r1, r0
   1d8f4:	ldrne	r0, [sp, #44]	; 0x2c
   1d8f8:	cmpne	r1, r0
   1d8fc:	beq	1d934 <main@@Base+0x76d8>
   1d900:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1d904:	ldr	r5, [sp, #44]	; 0x2c
   1d908:	ldr	r8, [sp, #40]	; 0x28
   1d90c:	str	r4, [r9, #4]
   1d910:	b	1d7b8 <main@@Base+0x755c>
   1d914:	strdeq	r2, [r4], -r0
   1d918:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1d91c:	ldr	r5, [sp, #44]	; 0x2c
   1d920:	ldr	r8, [sp, #40]	; 0x28
   1d924:	str	r4, [fp, #-60]	; 0xffffffc4
   1d928:	cmp	r7, r1
   1d92c:	bne	1d90c <main@@Base+0x76b0>
   1d930:	b	1d8cc <main@@Base+0x7670>
   1d934:	ldr	r8, [sp, #40]	; 0x28
   1d938:	ldr	r5, [sp, #44]	; 0x2c
   1d93c:	mov	r3, #33	; 0x21
   1d940:	mov	r0, r8
   1d944:	mov	r2, r5
   1d948:	b	1d9b8 <main@@Base+0x775c>
   1d94c:	mov	r4, r5
   1d950:	b	1d9c0 <main@@Base+0x7764>
   1d954:	cmp	r0, #125	; 0x7d
   1d958:	bne	1d9a0 <main@@Base+0x7744>
   1d95c:	ldr	r5, [sp, #44]	; 0x2c
   1d960:	ldr	r8, [sp, #40]	; 0x28
   1d964:	add	r1, r2, #1
   1d968:	sub	r0, r5, r1
   1d96c:	cmp	r0, #2
   1d970:	ldr	sl, [sp, #36]	; 0x24
   1d974:	blt	1dab4 <main@@Base+0x7858>
   1d978:	ldrb	r0, [r1]
   1d97c:	cmp	r0, #32
   1d980:	bls	1da94 <main@@Base+0x7838>
   1d984:	ldr	r5, [sp, #44]	; 0x2c
   1d988:	ldr	r8, [sp, #40]	; 0x28
   1d98c:	mov	r4, r1
   1d990:	b	1d9c0 <main@@Base+0x7764>
   1d994:	mov	r0, r8
   1d998:	mov	r1, r5
   1d99c:	b	1d9b0 <main@@Base+0x7754>
   1d9a0:	ldr	r8, [sp, #40]	; 0x28
   1d9a4:	ldr	r5, [sp, #44]	; 0x2c
   1d9a8:	mov	r1, r2
   1d9ac:	mov	r0, r8
   1d9b0:	mov	r2, r5
   1d9b4:	mov	r3, #10
   1d9b8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1d9bc:	mov	r4, r0
   1d9c0:	ldr	sl, [sp, #36]	; 0x24
   1d9c4:	sub	r0, r5, r4
   1d9c8:	cmp	r0, #2
   1d9cc:	blt	1da00 <main@@Base+0x77a4>
   1d9d0:	ldrb	r0, [r4]
   1d9d4:	cmp	r0, #32
   1d9d8:	bls	1d9ec <main@@Base+0x7790>
   1d9dc:	mov	r7, r4
   1d9e0:	cmp	r7, r5
   1d9e4:	bne	1da1c <main@@Base+0x77c0>
   1d9e8:	b	1e534 <main@@Base+0x82d8>
   1d9ec:	bne	1da00 <main@@Base+0x77a4>
   1d9f0:	mov	r7, r4
   1d9f4:	ldrb	r0, [r7, #1]!
   1d9f8:	cmp	r0, #32
   1d9fc:	bhi	1da14 <main@@Base+0x77b8>
   1da00:	mov	r0, r8
   1da04:	mov	r1, r4
   1da08:	mov	r2, r5
   1da0c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1da10:	mov	r7, r0
   1da14:	cmp	r7, r5
   1da18:	beq	1e534 <main@@Base+0x82d8>
   1da1c:	ldrb	r0, [r7]
   1da20:	cmp	r0, #44	; 0x2c
   1da24:	bne	1e6dc <main@@Base+0x8480>
   1da28:	add	r1, r7, #1
   1da2c:	sub	r0, r5, r1
   1da30:	cmp	r0, #2
   1da34:	blt	1da6c <main@@Base+0x7810>
   1da38:	ldrb	r0, [r1]
   1da3c:	cmp	r0, #32
   1da40:	bls	1da58 <main@@Base+0x77fc>
   1da44:	mov	r4, r1
   1da48:	cmp	r4, r5
   1da4c:	bne	1da84 <main@@Base+0x7828>
   1da50:	b	1e70c <main@@Base+0x84b0>
   1da54:	andeq	r2, r4, r0, lsr r6
   1da58:	bne	1da6c <main@@Base+0x7810>
   1da5c:	ldrb	r0, [r7, #2]!
   1da60:	mov	r4, r7
   1da64:	cmp	r0, #32
   1da68:	bhi	1da7c <main@@Base+0x7820>
   1da6c:	mov	r0, r8
   1da70:	mov	r2, r5
   1da74:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1da78:	mov	r4, r0
   1da7c:	cmp	r4, r5
   1da80:	beq	1e70c <main@@Base+0x84b0>
   1da84:	ldrb	r0, [r4]
   1da88:	cmp	r0, #93	; 0x5d
   1da8c:	bne	1d15c <main@@Base+0x6f00>
   1da90:	b	1e720 <main@@Base+0x84c4>
   1da94:	ldr	r5, [sp, #44]	; 0x2c
   1da98:	ldr	r8, [sp, #40]	; 0x28
   1da9c:	ldr	sl, [sp, #36]	; 0x24
   1daa0:	bne	1dab4 <main@@Base+0x7858>
   1daa4:	ldrb	r0, [r2, #2]!
   1daa8:	mov	r4, r2
   1daac:	cmp	r0, #32
   1dab0:	bhi	1d9c4 <main@@Base+0x7768>
   1dab4:	mov	r0, r8
   1dab8:	mov	r2, r5
   1dabc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1dac0:	b	1d1c0 <main@@Base+0x6f64>
   1dac4:	bne	1dad8 <main@@Base+0x787c>
   1dac8:	mov	r7, r1
   1dacc:	ldrb	r0, [r7, #1]!
   1dad0:	cmp	r0, #32
   1dad4:	bhi	1dae8 <main@@Base+0x788c>
   1dad8:	mov	r0, r8
   1dadc:	mov	r2, r5
   1dae0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1dae4:	mov	r7, r0
   1dae8:	cmp	r7, r5
   1daec:	beq	1db38 <main@@Base+0x78dc>
   1daf0:	ldrb	r0, [r7]
   1daf4:	cmp	r0, #58	; 0x3a
   1daf8:	bne	1db38 <main@@Base+0x78dc>
   1dafc:	add	r1, r7, #1
   1db00:	sub	r0, r5, r1
   1db04:	cmp	r0, #2
   1db08:	blt	1f7fc <main@@Base+0x95a0>
   1db0c:	ldrb	r0, [r1]
   1db10:	cmp	r0, #32
   1db14:	bls	1f7e0 <main@@Base+0x9584>
   1db18:	ldr	r5, [sp, #44]	; 0x2c
   1db1c:	ldr	r8, [sp, #40]	; 0x28
   1db20:	ldr	sl, [sp, #36]	; 0x24
   1db24:	mov	r7, r1
   1db28:	cmp	r4, r7
   1db2c:	bne	1f814 <main@@Base+0x95b8>
   1db30:	b	20154 <main@@Base+0x9ef8>
   1db34:			; <UNDEFINED> instruction: 0x000425b0
   1db38:	mov	r0, r8
   1db3c:	mov	r1, r7
   1db40:	mov	r2, r5
   1db44:	mov	r3, #4
   1db48:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1db4c:	b	1f808 <main@@Base+0x95ac>
   1db50:	ldr	r5, [sp, #44]	; 0x2c
   1db54:	ldr	r8, [sp, #40]	; 0x28
   1db58:	ldr	sl, [sp, #36]	; 0x24
   1db5c:	bne	1db6c <main@@Base+0x7910>
   1db60:	ldrb	r0, [r4, #2]!
   1db64:	cmp	r0, #32
   1db68:	bhi	1db7c <main@@Base+0x7920>
   1db6c:	mov	r0, r8
   1db70:	mov	r2, r5
   1db74:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1db78:	mov	r4, r0
   1db7c:	cmp	r7, r4
   1db80:	beq	1f6e4 <main@@Base+0x9488>
   1db84:	ldr	r0, [r8]
   1db88:	bl	30ec4 <flatcc_builder_start_offset_vector@@Base>
   1db8c:	cmp	r0, #0
   1db90:	bne	17324 <main@@Base+0x10c8>
   1db94:	cmp	r4, r5
   1db98:	beq	1dbd4 <main@@Base+0x7978>
   1db9c:	ldrb	r0, [r4]
   1dba0:	cmp	r0, #91	; 0x5b
   1dba4:	bne	1dbd4 <main@@Base+0x7978>
   1dba8:	add	r1, r4, #1
   1dbac:	sub	r0, r5, r1
   1dbb0:	cmp	r0, #2
   1dbb4:	blt	1e554 <main@@Base+0x82f8>
   1dbb8:	ldrb	r0, [r1]
   1dbbc:	cmp	r0, #32
   1dbc0:	bls	1e53c <main@@Base+0x82e0>
   1dbc4:	ldr	r5, [sp, #44]	; 0x2c
   1dbc8:	ldr	r8, [sp, #40]	; 0x28
   1dbcc:	mov	r4, r1
   1dbd0:	b	1e564 <main@@Base+0x8308>
   1dbd4:	mov	r0, r8
   1dbd8:	mov	r1, r4
   1dbdc:	mov	r2, r5
   1dbe0:	mov	r3, #22
   1dbe4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1dbe8:	mov	r4, r0
   1dbec:	ldr	r0, [r8]
   1dbf0:	bl	310ac <flatcc_builder_end_offset_vector@@Base>
   1dbf4:	cmp	r0, #0
   1dbf8:	str	r0, [sp, #52]	; 0x34
   1dbfc:	beq	17324 <main@@Base+0x10c8>
   1dc00:	ldr	r0, [r8]
   1dc04:	mov	r1, #11
   1dc08:	b	19d64 <main@@Base+0x3b08>
   1dc0c:	ldr	r5, [sp, #44]	; 0x2c
   1dc10:	ldr	r8, [sp, #40]	; 0x28
   1dc14:	bne	1dc24 <main@@Base+0x79c8>
   1dc18:	ldrb	r0, [r7, #2]!
   1dc1c:	cmp	r0, #32
   1dc20:	bhi	1dc34 <main@@Base+0x79d8>
   1dc24:	mov	r0, r8
   1dc28:	mov	r2, r5
   1dc2c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1dc30:	mov	r7, r0
   1dc34:	cmp	sl, r7
   1dc38:	beq	1bd78 <main@@Base+0x5b1c>
   1dc3c:	mov	r6, #0
   1dc40:	cmp	r7, r5
   1dc44:	str	r6, [fp, #-52]	; 0xffffffcc
   1dc48:	str	r6, [fp, #-56]	; 0xffffffc8
   1dc4c:	str	r6, [fp, #-60]	; 0xffffffc4
   1dc50:	str	r6, [sp, #56]	; 0x38
   1dc54:	beq	1dc9c <main@@Base+0x7a40>
   1dc58:	sub	r0, fp, #56	; 0x38
   1dc5c:	mov	r1, r7
   1dc60:	mov	r2, r5
   1dc64:	add	r3, sp, #56	; 0x38
   1dc68:	str	r0, [sp]
   1dc6c:	mov	r0, r8
   1dc70:	bl	382dc <flatcc_json_parser_integer@@Base>
   1dc74:	cmp	r0, r7
   1dc78:	beq	1dca8 <main@@Base+0x7a4c>
   1dc7c:	mov	r1, r0
   1dc80:	ldr	r0, [sp, #56]	; 0x38
   1dc84:	cmp	r0, #0
   1dc88:	beq	1dcb4 <main@@Base+0x7a58>
   1dc8c:	mov	r0, r8
   1dc90:	mov	r2, r5
   1dc94:	mov	r3, #8
   1dc98:	b	1dcd4 <main@@Base+0x7a78>
   1dc9c:	mov	r4, r5
   1dca0:	b	1dcdc <main@@Base+0x7a80>
   1dca4:	andeq	r2, r4, r0, lsl #9
   1dca8:	mov	r4, r7
   1dcac:	b	1dcdc <main@@Base+0x7a80>
   1dcb0:	andeq	r2, r4, ip, lsl #7
   1dcb4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1dcb8:	cmp	r0, #0
   1dcbc:	beq	1e6f4 <main@@Base+0x8498>
   1dcc0:	ldr	r8, [sp, #40]	; 0x28
   1dcc4:	ldr	r5, [sp, #44]	; 0x2c
   1dcc8:	mov	r3, #7
   1dccc:	mov	r0, r8
   1dcd0:	mov	r2, r5
   1dcd4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1dcd8:	mov	r4, r0
   1dcdc:	ldr	sl, [sp, #36]	; 0x24
   1dce0:	cmp	r7, r4
   1dce4:	bne	1dd24 <main@@Base+0x7ac8>
   1dce8:	sub	r0, fp, #60	; 0x3c
   1dcec:	mov	r1, r7
   1dcf0:	mov	r2, r5
   1dcf4:	str	r0, [sp]
   1dcf8:	mov	r0, r8
   1dcfc:	ldr	r3, [pc, #4084]	; 1ecf8 <main@@Base+0x8a9c>
   1dd00:	add	r3, pc, r3
   1dd04:	bl	25d9c <main@@Base+0xfb40>
   1dd08:	mov	r4, r0
   1dd0c:	cmp	r0, r7
   1dd10:	cmpne	r4, r5
   1dd14:	beq	214a0 <main@@Base+0xb244>
   1dd18:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1dd1c:	ldr	r8, [sp, #40]	; 0x28
   1dd20:	ldr	sl, [sp, #36]	; 0x24
   1dd24:	cmp	r6, #0
   1dd28:	bne	1dd38 <main@@Base+0x7adc>
   1dd2c:	ldrb	r0, [r8, #8]
   1dd30:	tst	r0, #2
   1dd34:	beq	20168 <main@@Base+0x9f0c>
   1dd38:	ldr	r0, [r8]
   1dd3c:	mov	r1, #17
   1dd40:	b	1f7c4 <main@@Base+0x9568>
   1dd44:	ldrdeq	r7, [r0], -r4
   1dd48:	ldr	r5, [sp, #44]	; 0x2c
   1dd4c:	ldr	r8, [sp, #40]	; 0x28
   1dd50:	bne	1dd60 <main@@Base+0x7b04>
   1dd54:	ldrb	r0, [r7, #2]!
   1dd58:	cmp	r0, #32
   1dd5c:	bhi	1dd70 <main@@Base+0x7b14>
   1dd60:	mov	r0, r8
   1dd64:	mov	r2, r5
   1dd68:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1dd6c:	mov	r7, r0
   1dd70:	cmp	sl, r7
   1dd74:	beq	1be68 <main@@Base+0x5c0c>
   1dd78:	mov	r6, #0
   1dd7c:	cmp	r7, r5
   1dd80:	str	r6, [fp, #-52]	; 0xffffffcc
   1dd84:	str	r6, [fp, #-56]	; 0xffffffc8
   1dd88:	str	r6, [sp, #60]	; 0x3c
   1dd8c:	str	r6, [sp, #56]	; 0x38
   1dd90:	str	r6, [fp, #-60]	; 0xffffffc4
   1dd94:	beq	1ddec <main@@Base+0x7b90>
   1dd98:	sub	r0, fp, #56	; 0x38
   1dd9c:	mov	r1, r7
   1dda0:	mov	r2, r5
   1dda4:	sub	r3, fp, #60	; 0x3c
   1dda8:	str	r0, [sp]
   1ddac:	mov	r0, r8
   1ddb0:	bl	382dc <flatcc_json_parser_integer@@Base>
   1ddb4:	cmp	r0, r7
   1ddb8:	beq	1ddf8 <main@@Base+0x7b9c>
   1ddbc:	mov	r1, r0
   1ddc0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1ddc4:	cmp	r0, #0
   1ddc8:	beq	1de08 <main@@Base+0x7bac>
   1ddcc:	mov	r0, r8
   1ddd0:	mov	r2, r5
   1ddd4:	mov	r3, #8
   1ddd8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1dddc:	mov	r4, r0
   1dde0:	mov	r6, #0
   1dde4:	mov	r9, #0
   1dde8:	b	1de1c <main@@Base+0x7bc0>
   1ddec:	mov	r9, #0
   1ddf0:	mov	r4, r5
   1ddf4:	b	1de1c <main@@Base+0x7bc0>
   1ddf8:	mov	r6, #0
   1ddfc:	mov	r9, #0
   1de00:	mov	r4, r7
   1de04:	b	1de1c <main@@Base+0x7bc0>
   1de08:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1de0c:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1de10:	mov	r4, r1
   1de14:	str	r9, [sp, #60]	; 0x3c
   1de18:	str	r6, [sp, #56]	; 0x38
   1de1c:	ldr	sl, [sp, #36]	; 0x24
   1de20:	cmp	r7, r4
   1de24:	bne	1de68 <main@@Base+0x7c0c>
   1de28:	add	r0, sp, #56	; 0x38
   1de2c:	mov	r1, r7
   1de30:	mov	r2, r5
   1de34:	str	r0, [sp]
   1de38:	mov	r0, r8
   1de3c:	ldr	r3, [pc, #3916]	; 1ed90 <main@@Base+0x8b34>
   1de40:	add	r3, pc, r3
   1de44:	bl	25fa0 <main@@Base+0xfd44>
   1de48:	mov	r4, r0
   1de4c:	cmp	r0, r7
   1de50:	cmpne	r4, r5
   1de54:	beq	214a0 <main@@Base+0xb244>
   1de58:	ldr	r6, [sp, #56]	; 0x38
   1de5c:	ldr	r9, [sp, #60]	; 0x3c
   1de60:	ldr	r8, [sp, #40]	; 0x28
   1de64:	ldr	sl, [sp, #36]	; 0x24
   1de68:	orrs	r0, r6, r9
   1de6c:	bne	1de7c <main@@Base+0x7c20>
   1de70:	ldrb	r0, [r8, #8]
   1de74:	tst	r0, #2
   1de78:	beq	20168 <main@@Base+0x9f0c>
   1de7c:	ldr	r0, [r8]
   1de80:	mov	r1, #19
   1de84:	mov	r2, #8
   1de88:	mov	r3, #8
   1de8c:	bl	327e4 <flatcc_builder_table_add@@Base>
   1de90:	cmp	r0, #0
   1de94:	beq	214a0 <main@@Base+0xb244>
   1de98:	stm	r0, {r6, r9}
   1de9c:	b	20168 <main@@Base+0x9f0c>
   1dea0:	beq	1ebc4 <main@@Base+0x8968>
   1dea4:	b	1ebd4 <main@@Base+0x8978>
   1dea8:	ldr	r5, [sp, #44]	; 0x2c
   1deac:	ldr	r8, [sp, #40]	; 0x28
   1deb0:	ldr	sl, [sp, #36]	; 0x24
   1deb4:	bne	1dec4 <main@@Base+0x7c68>
   1deb8:	ldrb	r0, [r4, #2]!
   1debc:	cmp	r0, #32
   1dec0:	bhi	1ded4 <main@@Base+0x7c78>
   1dec4:	mov	r0, r8
   1dec8:	mov	r2, r5
   1decc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1ded0:	mov	r4, r0
   1ded4:	cmp	r7, r4
   1ded8:	beq	1f6e4 <main@@Base+0x9488>
   1dedc:	ldr	r0, [r8]
   1dee0:	bl	30ec4 <flatcc_builder_start_offset_vector@@Base>
   1dee4:	cmp	r0, #0
   1dee8:	bne	17324 <main@@Base+0x10c8>
   1deec:	cmp	r4, r5
   1def0:	beq	1df28 <main@@Base+0x7ccc>
   1def4:	ldrb	r0, [r4]
   1def8:	cmp	r0, #91	; 0x5b
   1defc:	bne	1df28 <main@@Base+0x7ccc>
   1df00:	add	r1, r4, #1
   1df04:	sub	r0, r5, r1
   1df08:	cmp	r0, #2
   1df0c:	blt	1e768 <main@@Base+0x850c>
   1df10:	ldrb	r0, [r1]
   1df14:	cmp	r0, #32
   1df18:	bls	1e750 <main@@Base+0x84f4>
   1df1c:	ldr	r5, [sp, #44]	; 0x2c
   1df20:	mov	r4, r1
   1df24:	b	1e778 <main@@Base+0x851c>
   1df28:	mov	r0, r8
   1df2c:	mov	r1, r4
   1df30:	mov	r2, r5
   1df34:	mov	r3, #22
   1df38:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1df3c:	mov	r4, r0
   1df40:	ldr	r0, [r8]
   1df44:	bl	310ac <flatcc_builder_end_offset_vector@@Base>
   1df48:	cmp	r0, #0
   1df4c:	str	r0, [sp, #52]	; 0x34
   1df50:	beq	17324 <main@@Base+0x10c8>
   1df54:	ldr	r0, [r8]
   1df58:	mov	r1, #10
   1df5c:	b	19d64 <main@@Base+0x3b08>
   1df60:	ldr	r5, [sp, #44]	; 0x2c
   1df64:	ldr	r8, [sp, #40]	; 0x28
   1df68:	ldr	sl, [sp, #36]	; 0x24
   1df6c:	bne	1df7c <main@@Base+0x7d20>
   1df70:	ldrb	r0, [r4, #2]!
   1df74:	cmp	r0, #32
   1df78:	bhi	1df8c <main@@Base+0x7d30>
   1df7c:	mov	r0, r8
   1df80:	mov	r2, r5
   1df84:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1df88:	mov	r4, r0
   1df8c:	cmp	r7, r4
   1df90:	beq	1f6e4 <main@@Base+0x9488>
   1df94:	mov	r0, #0
   1df98:	mov	r1, #3
   1df9c:	str	r0, [sp, #52]	; 0x34
   1dfa0:	ldr	r0, [r8]
   1dfa4:	bl	31348 <flatcc_builder_start_table@@Base>
   1dfa8:	cmp	r0, #0
   1dfac:	bne	20efc <main@@Base+0xaca0>
   1dfb0:	cmp	r4, r5
   1dfb4:	beq	1dfe8 <main@@Base+0x7d8c>
   1dfb8:	ldrb	r0, [r4]
   1dfbc:	cmp	r0, #123	; 0x7b
   1dfc0:	bne	1dfe8 <main@@Base+0x7d8c>
   1dfc4:	add	r1, r4, #1
   1dfc8:	sub	r0, r5, r1
   1dfcc:	cmp	r0, #2
   1dfd0:	blt	2059c <main@@Base+0xa340>
   1dfd4:	ldrb	r0, [r1]
   1dfd8:	cmp	r0, #32
   1dfdc:	bls	2058c <main@@Base+0xa330>
   1dfe0:	mov	r4, r1
   1dfe4:	b	205ac <main@@Base+0xa350>
   1dfe8:	mov	r0, r8
   1dfec:	mov	r1, r4
   1dff0:	mov	r2, r5
   1dff4:	mov	r3, #21
   1dff8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1dffc:	mov	r4, r0
   1e000:	ldr	r0, [r8, #24]
   1e004:	cmp	r0, #0
   1e008:	beq	1e014 <main@@Base+0x7db8>
   1e00c:	ldr	r5, [sp, #44]	; 0x2c
   1e010:	b	20ef8 <main@@Base+0xac9c>
   1e014:	ldr	r0, [r8]
   1e018:	bl	31d70 <flatcc_builder_end_table@@Base>
   1e01c:	cmp	r0, #0
   1e020:	str	r0, [sp, #52]	; 0x34
   1e024:	beq	20ef0 <main@@Base+0xac94>
   1e028:	ldr	r5, [sp, #44]	; 0x2c
   1e02c:	ldr	r8, [sp, #40]	; 0x28
   1e030:	ldr	sl, [sp, #36]	; 0x24
   1e034:	b	20f20 <main@@Base+0xacc4>
   1e038:	ldr	r5, [sp, #44]	; 0x2c
   1e03c:	ldr	r8, [sp, #40]	; 0x28
   1e040:	ldr	sl, [sp, #36]	; 0x24
   1e044:	bne	1e054 <main@@Base+0x7df8>
   1e048:	ldrb	r0, [r4, #2]!
   1e04c:	cmp	r0, #32
   1e050:	bhi	1e064 <main@@Base+0x7e08>
   1e054:	mov	r0, r8
   1e058:	mov	r2, r5
   1e05c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e060:	mov	r4, r0
   1e064:	cmp	r7, r4
   1e068:	beq	1f6e4 <main@@Base+0x9488>
   1e06c:	ldr	r0, [r8]
   1e070:	mov	r1, #1
   1e074:	mov	r2, #1
   1e078:	mvn	r3, #0
   1e07c:	bl	30e38 <flatcc_builder_start_vector@@Base>
   1e080:	cmp	r0, #0
   1e084:	bne	17324 <main@@Base+0x10c8>
   1e088:	cmp	r4, r5
   1e08c:	beq	1e0cc <main@@Base+0x7e70>
   1e090:	ldrb	r0, [r4]
   1e094:	cmp	r0, #91	; 0x5b
   1e098:	bne	1e0cc <main@@Base+0x7e70>
   1e09c:	add	r1, r4, #1
   1e0a0:	sub	r0, r5, r1
   1e0a4:	cmp	r0, #2
   1e0a8:	blt	1e908 <main@@Base+0x86ac>
   1e0ac:	ldrb	r0, [r1]
   1e0b0:	cmp	r0, #32
   1e0b4:	bls	1e8f0 <main@@Base+0x8694>
   1e0b8:	ldr	r5, [sp, #44]	; 0x2c
   1e0bc:	mov	r4, r1
   1e0c0:	cmp	r4, r5
   1e0c4:	bne	1e920 <main@@Base+0x86c4>
   1e0c8:	b	1e984 <main@@Base+0x8728>
   1e0cc:	mov	r0, r8
   1e0d0:	mov	r1, r4
   1e0d4:	mov	r2, r5
   1e0d8:	mov	r3, #22
   1e0dc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1e0e0:	mov	r4, r0
   1e0e4:	ldr	r0, [r8]
   1e0e8:	bl	320b0 <flatcc_builder_end_vector@@Base>
   1e0ec:	cmp	r0, #0
   1e0f0:	str	r0, [sp, #52]	; 0x34
   1e0f4:	beq	17324 <main@@Base+0x10c8>
   1e0f8:	ldr	r0, [r8]
   1e0fc:	mov	r1, #5
   1e100:	b	19d64 <main@@Base+0x3b08>
   1e104:	ldr	r5, [sp, #44]	; 0x2c
   1e108:	ldr	r8, [sp, #40]	; 0x28
   1e10c:	ldr	sl, [sp, #36]	; 0x24
   1e110:	bne	1e124 <main@@Base+0x7ec8>
   1e114:	ldrb	r0, [r4, #2]!
   1e118:	mov	r7, r4
   1e11c:	cmp	r0, #32
   1e120:	bhi	1a5a8 <main@@Base+0x434c>
   1e124:	mov	r0, r8
   1e128:	mov	r2, r5
   1e12c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e130:	b	1a5a4 <main@@Base+0x4348>
   1e134:	ldr	r5, [sp, #44]	; 0x2c
   1e138:	ldr	r8, [sp, #40]	; 0x28
   1e13c:	bne	1e14c <main@@Base+0x7ef0>
   1e140:	ldrb	r0, [r4, #2]!
   1e144:	cmp	r0, #32
   1e148:	bhi	1e15c <main@@Base+0x7f00>
   1e14c:	mov	r0, r8
   1e150:	mov	r2, r5
   1e154:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e158:	mov	r4, r0
   1e15c:	cmp	sl, r4
   1e160:	beq	196a0 <main@@Base+0x3444>
   1e164:	ldr	r0, [r8]
   1e168:	mov	r1, #8
   1e16c:	mov	r2, #8
   1e170:	mvn	r3, #-536870912	; 0xe0000000
   1e174:	bl	30e38 <flatcc_builder_start_vector@@Base>
   1e178:	cmp	r0, #0
   1e17c:	bne	17324 <main@@Base+0x10c8>
   1e180:	cmp	r4, r5
   1e184:	beq	1e1c4 <main@@Base+0x7f68>
   1e188:	ldrb	r0, [r4]
   1e18c:	cmp	r0, #91	; 0x5b
   1e190:	bne	1e1c4 <main@@Base+0x7f68>
   1e194:	add	r1, r4, #1
   1e198:	sub	r0, r5, r1
   1e19c:	cmp	r0, #2
   1e1a0:	blt	1f3a8 <main@@Base+0x914c>
   1e1a4:	ldrb	r0, [r1]
   1e1a8:	cmp	r0, #32
   1e1ac:	bls	1f390 <main@@Base+0x9134>
   1e1b0:	ldr	r5, [sp, #44]	; 0x2c
   1e1b4:	mov	r4, r1
   1e1b8:	cmp	r4, r5
   1e1bc:	bne	1f3c0 <main@@Base+0x9164>
   1e1c0:	b	1f400 <main@@Base+0x91a4>
   1e1c4:	mov	r0, r8
   1e1c8:	mov	r1, r4
   1e1cc:	mov	r2, r5
   1e1d0:	mov	r3, #22
   1e1d4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1e1d8:	ldr	sl, [sp, #36]	; 0x24
   1e1dc:	mov	r4, r0
   1e1e0:	ldr	r0, [r8]
   1e1e4:	bl	320b0 <flatcc_builder_end_vector@@Base>
   1e1e8:	cmp	r0, #0
   1e1ec:	str	r0, [sp, #52]	; 0x34
   1e1f0:	beq	17324 <main@@Base+0x10c8>
   1e1f4:	ldr	r0, [r8]
   1e1f8:	mov	r1, #32
   1e1fc:	b	19d64 <main@@Base+0x3b08>
   1e200:	ldr	r5, [sp, #44]	; 0x2c
   1e204:	bne	1e218 <main@@Base+0x7fbc>
   1e208:	mov	r7, r1
   1e20c:	ldrb	r0, [r7, #1]!
   1e210:	cmp	r0, #32
   1e214:	bhi	1e228 <main@@Base+0x7fcc>
   1e218:	ldr	r0, [sp, #40]	; 0x28
   1e21c:	mov	r2, r5
   1e220:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e224:	mov	r7, r0
   1e228:	cmp	r7, r5
   1e22c:	beq	1e26c <main@@Base+0x8010>
   1e230:	ldrb	r0, [r7]
   1e234:	cmp	r0, #58	; 0x3a
   1e238:	bne	1e26c <main@@Base+0x8010>
   1e23c:	ldr	r8, [sp, #40]	; 0x28
   1e240:	add	r1, r7, #1
   1e244:	sub	r0, r5, r1
   1e248:	cmp	r0, #2
   1e24c:	blt	1ff78 <main@@Base+0x9d1c>
   1e250:	ldrb	r0, [r1]
   1e254:	cmp	r0, #32
   1e258:	bls	1ff60 <main@@Base+0x9d04>
   1e25c:	ldr	r5, [sp, #44]	; 0x2c
   1e260:	ldr	r8, [sp, #40]	; 0x28
   1e264:	mov	r7, r1
   1e268:	b	1ff88 <main@@Base+0x9d2c>
   1e26c:	ldr	r8, [sp, #40]	; 0x28
   1e270:	mov	r1, r7
   1e274:	mov	r2, r5
   1e278:	mov	r3, #4
   1e27c:	mov	r0, r8
   1e280:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1e284:	b	1ff84 <main@@Base+0x9d28>
   1e288:	ldr	r5, [sp, #44]	; 0x2c
   1e28c:	bne	1e2a0 <main@@Base+0x8044>
   1e290:	mov	r7, r1
   1e294:	ldrb	r0, [r7, #1]!
   1e298:	cmp	r0, #32
   1e29c:	bhi	1e2b0 <main@@Base+0x8054>
   1e2a0:	ldr	r0, [sp, #40]	; 0x28
   1e2a4:	mov	r2, r5
   1e2a8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e2ac:	mov	r7, r0
   1e2b0:	cmp	r7, r5
   1e2b4:	beq	1e2f4 <main@@Base+0x8098>
   1e2b8:	ldrb	r0, [r7]
   1e2bc:	cmp	r0, #58	; 0x3a
   1e2c0:	bne	1e2f4 <main@@Base+0x8098>
   1e2c4:	ldr	r8, [sp, #40]	; 0x28
   1e2c8:	add	r1, r7, #1
   1e2cc:	sub	r0, r5, r1
   1e2d0:	cmp	r0, #2
   1e2d4:	blt	200c8 <main@@Base+0x9e6c>
   1e2d8:	ldrb	r0, [r1]
   1e2dc:	cmp	r0, #32
   1e2e0:	bls	200b0 <main@@Base+0x9e54>
   1e2e4:	ldr	r5, [sp, #44]	; 0x2c
   1e2e8:	ldr	r8, [sp, #40]	; 0x28
   1e2ec:	mov	r7, r1
   1e2f0:	b	200d8 <main@@Base+0x9e7c>
   1e2f4:	ldr	r8, [sp, #40]	; 0x28
   1e2f8:	mov	r1, r7
   1e2fc:	mov	r2, r5
   1e300:	mov	r3, #4
   1e304:	mov	r0, r8
   1e308:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1e30c:	b	200d4 <main@@Base+0x9e78>
   1e310:	ldr	r5, [sp, #44]	; 0x2c
   1e314:	ldr	r8, [sp, #40]	; 0x28
   1e318:	ldr	sl, [sp, #36]	; 0x24
   1e31c:	bne	1e32c <main@@Base+0x80d0>
   1e320:	ldrb	r0, [r4, #2]!
   1e324:	cmp	r0, #32
   1e328:	bhi	1e33c <main@@Base+0x80e0>
   1e32c:	mov	r0, r8
   1e330:	mov	r2, r5
   1e334:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e338:	mov	r4, r0
   1e33c:	cmp	r7, r4
   1e340:	beq	1f6e4 <main@@Base+0x9488>
   1e344:	cmp	r4, r5
   1e348:	beq	1e3a8 <main@@Base+0x814c>
   1e34c:	ldrb	r0, [r4]
   1e350:	cmp	r0, #91	; 0x5b
   1e354:	bne	1e3a8 <main@@Base+0x814c>
   1e358:	ldr	r0, [r8]
   1e35c:	mov	r1, #1
   1e360:	mov	r2, #1
   1e364:	mvn	r3, #0
   1e368:	bl	30e38 <flatcc_builder_start_vector@@Base>
   1e36c:	cmp	r0, #0
   1e370:	bne	214a0 <main@@Base+0xb244>
   1e374:	ldrb	r0, [r4]
   1e378:	cmp	r0, #91	; 0x5b
   1e37c:	bne	1e3f4 <main@@Base+0x8198>
   1e380:	ldr	r0, [sp, #44]	; 0x2c
   1e384:	add	r1, r4, #1
   1e388:	sub	r0, r0, r1
   1e38c:	cmp	r0, #2
   1e390:	blt	20310 <main@@Base+0xa0b4>
   1e394:	ldrb	r0, [r1]
   1e398:	cmp	r0, #32
   1e39c:	bls	20300 <main@@Base+0xa0a4>
   1e3a0:	mov	r4, r1
   1e3a4:	b	20320 <main@@Base+0xa0c4>
   1e3a8:	ldr	r0, [r8]
   1e3ac:	mov	r1, #0
   1e3b0:	mov	r2, #0
   1e3b4:	mov	r3, #0
   1e3b8:	bl	2fd6c <flatcc_builder_start_buffer@@Base>
   1e3bc:	cmp	r0, #0
   1e3c0:	bne	17324 <main@@Base+0x10c8>
   1e3c4:	mov	r0, r8
   1e3c8:	mov	r1, r4
   1e3cc:	mov	r2, r5
   1e3d0:	add	r3, sp, #52	; 0x34
   1e3d4:	bl	172e4 <main@@Base+0x1088>
   1e3d8:	ldr	r1, [sp, #52]	; 0x34
   1e3dc:	mov	r4, r0
   1e3e0:	cmp	r1, #0
   1e3e4:	beq	17324 <main@@Base+0x10c8>
   1e3e8:	ldr	r0, [r8]
   1e3ec:	bl	2ff6c <flatcc_builder_end_buffer@@Base>
   1e3f0:	b	21320 <main@@Base+0xb0c4>
   1e3f4:	ldr	r0, [sp, #40]	; 0x28
   1e3f8:	ldr	r2, [sp, #44]	; 0x2c
   1e3fc:	mov	r1, r4
   1e400:	mov	r3, #22
   1e404:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1e408:	b	2130c <main@@Base+0xb0b0>
   1e40c:	ldr	r5, [sp, #44]	; 0x2c
   1e410:	ldr	r8, [sp, #40]	; 0x28
   1e414:	ldr	sl, [sp, #36]	; 0x24
   1e418:	bne	1e428 <main@@Base+0x81cc>
   1e41c:	ldrb	r0, [r7, #2]!
   1e420:	cmp	r0, #32
   1e424:	bhi	1e438 <main@@Base+0x81dc>
   1e428:	mov	r0, r8
   1e42c:	mov	r2, r5
   1e430:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e434:	mov	r7, r0
   1e438:	cmp	r4, r7
   1e43c:	beq	20154 <main@@Base+0x9ef8>
   1e440:	mov	r6, #0
   1e444:	cmp	r7, r5
   1e448:	str	r6, [fp, #-52]	; 0xffffffcc
   1e44c:	str	r6, [fp, #-56]	; 0xffffffc8
   1e450:	str	r6, [fp, #-60]	; 0xffffffc4
   1e454:	str	r6, [sp, #56]	; 0x38
   1e458:	beq	1e4b8 <main@@Base+0x825c>
   1e45c:	sub	r0, fp, #56	; 0x38
   1e460:	mov	r1, r7
   1e464:	mov	r2, r5
   1e468:	add	r3, sp, #56	; 0x38
   1e46c:	str	r0, [sp]
   1e470:	mov	r0, r8
   1e474:	bl	382dc <flatcc_json_parser_integer@@Base>
   1e478:	cmp	r0, r7
   1e47c:	beq	1e4c8 <main@@Base+0x826c>
   1e480:	ldr	r2, [sp, #56]	; 0x38
   1e484:	mov	r4, r0
   1e488:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e48c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1e490:	cmp	r2, #0
   1e494:	beq	1e4d8 <main@@Base+0x827c>
   1e498:	subs	r2, r0, #-2147483647	; 0x80000001
   1e49c:	sbcs	r1, r1, #0
   1e4a0:	bcc	1e508 <main@@Base+0x82ac>
   1e4a4:	ldr	r8, [sp, #40]	; 0x28
   1e4a8:	ldr	r5, [sp, #44]	; 0x2c
   1e4ac:	mov	r1, r4
   1e4b0:	mov	r3, #8
   1e4b4:	b	1e4f4 <main@@Base+0x8298>
   1e4b8:	mov	r4, r5
   1e4bc:	cmp	r7, r4
   1e4c0:	bne	1f7a8 <main@@Base+0x954c>
   1e4c4:	b	1f764 <main@@Base+0x9508>
   1e4c8:	mov	r4, r7
   1e4cc:	cmp	r7, r4
   1e4d0:	bne	1f7a8 <main@@Base+0x954c>
   1e4d4:	b	1f764 <main@@Base+0x9508>
   1e4d8:	subs	r2, r0, #-2147483648	; 0x80000000
   1e4dc:	sbcs	r1, r1, #0
   1e4e0:	bcc	1f748 <main@@Base+0x94ec>
   1e4e4:	ldr	r8, [sp, #40]	; 0x28
   1e4e8:	ldr	r5, [sp, #44]	; 0x2c
   1e4ec:	mov	r1, r4
   1e4f0:	mov	r3, #7
   1e4f4:	mov	r0, r8
   1e4f8:	mov	r2, r5
   1e4fc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1e500:	mov	r4, r0
   1e504:	b	1f758 <main@@Base+0x94fc>
   1e508:	rsb	r6, r0, #0
   1e50c:	b	1f74c <main@@Base+0x94f0>
   1e510:	ldr	r8, [sp, #40]	; 0x28
   1e514:	ldr	r5, [sp, #44]	; 0x2c
   1e518:	mov	r1, r4
   1e51c:	mov	r3, #9
   1e520:	mov	r0, r8
   1e524:	mov	r2, r5
   1e528:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1e52c:	ldr	sl, [sp, #36]	; 0x24
   1e530:	b	1ab48 <main@@Base+0x48ec>
   1e534:	mov	r7, r5
   1e538:	b	1c8d0 <main@@Base+0x6674>
   1e53c:	ldr	r5, [sp, #44]	; 0x2c
   1e540:	ldr	r8, [sp, #40]	; 0x28
   1e544:	bne	1e554 <main@@Base+0x82f8>
   1e548:	ldrb	r0, [r4, #2]!
   1e54c:	cmp	r0, #32
   1e550:	bhi	1e564 <main@@Base+0x8308>
   1e554:	mov	r0, r8
   1e558:	mov	r2, r5
   1e55c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e560:	mov	r4, r0
   1e564:	cmp	r4, r5
   1e568:	mov	r2, r5
   1e56c:	beq	1e5d0 <main@@Base+0x8374>
   1e570:	ldrb	r0, [r4]
   1e574:	cmp	r0, #93	; 0x5d
   1e578:	bne	1e5c4 <main@@Base+0x8368>
   1e57c:	ldr	r5, [sp, #44]	; 0x2c
   1e580:	ldr	r8, [sp, #40]	; 0x28
   1e584:	ldr	sl, [sp, #36]	; 0x24
   1e588:	add	r1, r4, #1
   1e58c:	sub	r0, r5, r1
   1e590:	cmp	r0, #2
   1e594:	blt	21184 <main@@Base+0xaf28>
   1e598:	ldrb	r0, [r1]
   1e59c:	cmp	r0, #32
   1e5a0:	bhi	1fbd8 <main@@Base+0x997c>
   1e5a4:	ldr	r5, [sp, #44]	; 0x2c
   1e5a8:	ldr	r8, [sp, #40]	; 0x28
   1e5ac:	ldr	sl, [sp, #36]	; 0x24
   1e5b0:	bne	21184 <main@@Base+0xaf28>
   1e5b4:	ldrb	r0, [r4, #2]!
   1e5b8:	cmp	r0, #32
   1e5bc:	bhi	1dbec <main@@Base+0x7990>
   1e5c0:	b	21184 <main@@Base+0xaf28>
   1e5c4:	ldr	r5, [sp, #44]	; 0x2c
   1e5c8:	ldr	r8, [sp, #40]	; 0x28
   1e5cc:	mov	r2, r4
   1e5d0:	mov	r1, r2
   1e5d4:	mov	r0, r8
   1e5d8:	mov	r2, r5
   1e5dc:	add	r3, sp, #52	; 0x34
   1e5e0:	bl	172e4 <main@@Base+0x1088>
   1e5e4:	mov	r4, r0
   1e5e8:	ldr	r0, [sp, #52]	; 0x34
   1e5ec:	cmp	r0, #0
   1e5f0:	beq	17324 <main@@Base+0x10c8>
   1e5f4:	ldr	r0, [r8]
   1e5f8:	mov	r1, #1
   1e5fc:	bl	3061c <flatcc_builder_extend_offset_vector@@Base>
   1e600:	cmp	r0, #0
   1e604:	beq	17324 <main@@Base+0x10c8>
   1e608:	ldr	r1, [sp, #52]	; 0x34
   1e60c:	str	r1, [r0]
   1e610:	sub	r0, r5, r4
   1e614:	cmp	r0, #2
   1e618:	blt	1e64c <main@@Base+0x83f0>
   1e61c:	ldrb	r0, [r4]
   1e620:	cmp	r0, #32
   1e624:	bls	1e638 <main@@Base+0x83dc>
   1e628:	mov	r2, r4
   1e62c:	cmp	r2, r5
   1e630:	bne	1e668 <main@@Base+0x840c>
   1e634:	b	1fb58 <main@@Base+0x98fc>
   1e638:	bne	1e64c <main@@Base+0x83f0>
   1e63c:	mov	r2, r4
   1e640:	ldrb	r0, [r2, #1]!
   1e644:	cmp	r0, #32
   1e648:	bhi	1e660 <main@@Base+0x8404>
   1e64c:	mov	r0, r8
   1e650:	mov	r1, r4
   1e654:	mov	r2, r5
   1e658:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e65c:	mov	r2, r0
   1e660:	cmp	r2, r5
   1e664:	beq	1fb58 <main@@Base+0x98fc>
   1e668:	ldrb	r0, [r2]
   1e66c:	cmp	r0, #44	; 0x2c
   1e670:	bne	1fba8 <main@@Base+0x994c>
   1e674:	add	r1, r2, #1
   1e678:	sub	r0, r5, r1
   1e67c:	cmp	r0, #2
   1e680:	blt	1e6b4 <main@@Base+0x8458>
   1e684:	ldrb	r0, [r1]
   1e688:	cmp	r0, #32
   1e68c:	bls	1e6a4 <main@@Base+0x8448>
   1e690:	mov	r2, r1
   1e694:	cmp	r2, r5
   1e698:	bne	1e6cc <main@@Base+0x8470>
   1e69c:	b	1fc00 <main@@Base+0x99a4>
   1e6a0:	andeq	r1, r4, r0, asr ip
   1e6a4:	bne	1e6b4 <main@@Base+0x8458>
   1e6a8:	ldrb	r0, [r2, #2]!
   1e6ac:	cmp	r0, #32
   1e6b0:	bhi	1e6c4 <main@@Base+0x8468>
   1e6b4:	mov	r0, r8
   1e6b8:	mov	r2, r5
   1e6bc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e6c0:	mov	r2, r0
   1e6c4:	cmp	r2, r5
   1e6c8:	beq	1fc00 <main@@Base+0x99a4>
   1e6cc:	ldrb	r0, [r2]
   1e6d0:	cmp	r0, #93	; 0x5d
   1e6d4:	bne	1e5d0 <main@@Base+0x8374>
   1e6d8:	b	1fbb8 <main@@Base+0x995c>
   1e6dc:	cmp	r0, #93	; 0x5d
   1e6e0:	bne	1fb28 <main@@Base+0x98cc>
   1e6e4:	ldr	r5, [sp, #44]	; 0x2c
   1e6e8:	ldr	r8, [sp, #40]	; 0x28
   1e6ec:	ldr	sl, [sp, #36]	; 0x24
   1e6f0:	b	1d11c <main@@Base+0x6ec0>
   1e6f4:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1e6f8:	ldr	r5, [sp, #44]	; 0x2c
   1e6fc:	ldr	r8, [sp, #40]	; 0x28
   1e700:	mov	r4, r1
   1e704:	str	r6, [fp, #-60]	; 0xffffffc4
   1e708:	b	1dcdc <main@@Base+0x7a80>
   1e70c:	mov	r0, r8
   1e710:	mov	r1, r5
   1e714:	mov	r2, r5
   1e718:	mov	r3, #9
   1e71c:	b	1c8c8 <main@@Base+0x666c>
   1e720:	add	r1, r4, #1
   1e724:	sub	r0, r5, r1
   1e728:	cmp	r0, #2
   1e72c:	blt	20fa8 <main@@Base+0xad4c>
   1e730:	ldrb	r0, [r1]
   1e734:	cmp	r0, #32
   1e738:	bls	20f88 <main@@Base+0xad2c>
   1e73c:	ldr	r5, [sp, #44]	; 0x2c
   1e740:	ldr	r8, [sp, #40]	; 0x28
   1e744:	ldr	sl, [sp, #36]	; 0x24
   1e748:	mov	r7, r1
   1e74c:	b	1c8d0 <main@@Base+0x6674>
   1e750:	ldr	r5, [sp, #44]	; 0x2c
   1e754:	ldr	r8, [sp, #40]	; 0x28
   1e758:	bne	1e768 <main@@Base+0x850c>
   1e75c:	ldrb	r0, [r4, #2]!
   1e760:	cmp	r0, #32
   1e764:	bhi	1e778 <main@@Base+0x851c>
   1e768:	mov	r0, r8
   1e76c:	mov	r2, r5
   1e770:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e774:	mov	r4, r0
   1e778:	cmp	r4, r5
   1e77c:	mov	r2, r5
   1e780:	beq	1e7dc <main@@Base+0x8580>
   1e784:	ldrb	r0, [r4]
   1e788:	cmp	r0, #93	; 0x5d
   1e78c:	bne	1e7d8 <main@@Base+0x857c>
   1e790:	ldr	r5, [sp, #44]	; 0x2c
   1e794:	ldr	r8, [sp, #40]	; 0x28
   1e798:	ldr	sl, [sp, #36]	; 0x24
   1e79c:	add	r1, r4, #1
   1e7a0:	sub	r0, r5, r1
   1e7a4:	cmp	r0, #2
   1e7a8:	blt	21294 <main@@Base+0xb038>
   1e7ac:	ldrb	r0, [r1]
   1e7b0:	cmp	r0, #32
   1e7b4:	bhi	1fc9c <main@@Base+0x9a40>
   1e7b8:	ldr	r5, [sp, #44]	; 0x2c
   1e7bc:	ldr	r8, [sp, #40]	; 0x28
   1e7c0:	ldr	sl, [sp, #36]	; 0x24
   1e7c4:	bne	21294 <main@@Base+0xb038>
   1e7c8:	ldrb	r0, [r4, #2]!
   1e7cc:	cmp	r0, #32
   1e7d0:	bhi	1df40 <main@@Base+0x7ce4>
   1e7d4:	b	21294 <main@@Base+0xb038>
   1e7d8:	mov	r2, r4
   1e7dc:	ldr	r5, [sp, #44]	; 0x2c
   1e7e0:	ldr	r8, [sp, #40]	; 0x28
   1e7e4:	mov	r1, r2
   1e7e8:	mov	r0, r8
   1e7ec:	mov	r2, r5
   1e7f0:	add	r3, sp, #52	; 0x34
   1e7f4:	bl	38888 <flatcc_json_parser_build_string@@Base>
   1e7f8:	mov	r4, r0
   1e7fc:	ldr	r0, [sp, #52]	; 0x34
   1e800:	cmp	r0, #0
   1e804:	beq	17324 <main@@Base+0x10c8>
   1e808:	ldr	r0, [r8]
   1e80c:	mov	r1, #1
   1e810:	bl	3061c <flatcc_builder_extend_offset_vector@@Base>
   1e814:	cmp	r0, #0
   1e818:	beq	17324 <main@@Base+0x10c8>
   1e81c:	ldr	r1, [sp, #52]	; 0x34
   1e820:	str	r1, [r0]
   1e824:	sub	r0, r5, r4
   1e828:	cmp	r0, #2
   1e82c:	blt	1e860 <main@@Base+0x8604>
   1e830:	ldrb	r0, [r4]
   1e834:	cmp	r0, #32
   1e838:	bls	1e84c <main@@Base+0x85f0>
   1e83c:	mov	r2, r4
   1e840:	cmp	r2, r5
   1e844:	bne	1e87c <main@@Base+0x8620>
   1e848:	b	1fc3c <main@@Base+0x99e0>
   1e84c:	bne	1e860 <main@@Base+0x8604>
   1e850:	mov	r2, r4
   1e854:	ldrb	r0, [r2, #1]!
   1e858:	cmp	r0, #32
   1e85c:	bhi	1e874 <main@@Base+0x8618>
   1e860:	mov	r0, r8
   1e864:	mov	r1, r4
   1e868:	mov	r2, r5
   1e86c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e870:	mov	r2, r0
   1e874:	cmp	r2, r5
   1e878:	beq	1fc3c <main@@Base+0x99e0>
   1e87c:	ldrb	r0, [r2]
   1e880:	cmp	r0, #44	; 0x2c
   1e884:	bne	1fc6c <main@@Base+0x9a10>
   1e888:	add	r1, r2, #1
   1e88c:	sub	r0, r5, r1
   1e890:	cmp	r0, #2
   1e894:	blt	1e8c8 <main@@Base+0x866c>
   1e898:	ldrb	r0, [r1]
   1e89c:	cmp	r0, #32
   1e8a0:	bls	1e8b8 <main@@Base+0x865c>
   1e8a4:	mov	r2, r1
   1e8a8:	cmp	r2, r5
   1e8ac:	bne	1e8e0 <main@@Base+0x8684>
   1e8b0:	b	1fcd4 <main@@Base+0x9a78>
   1e8b4:	andeq	r1, r4, r8, asr #20
   1e8b8:	bne	1e8c8 <main@@Base+0x866c>
   1e8bc:	ldrb	r0, [r2, #2]!
   1e8c0:	cmp	r0, #32
   1e8c4:	bhi	1e8d8 <main@@Base+0x867c>
   1e8c8:	mov	r0, r8
   1e8cc:	mov	r2, r5
   1e8d0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e8d4:	mov	r2, r0
   1e8d8:	cmp	r2, r5
   1e8dc:	beq	1fcd4 <main@@Base+0x9a78>
   1e8e0:	ldrb	r0, [r2]
   1e8e4:	cmp	r0, #93	; 0x5d
   1e8e8:	bne	1e7e4 <main@@Base+0x8588>
   1e8ec:	b	1fc7c <main@@Base+0x9a20>
   1e8f0:	ldr	r5, [sp, #44]	; 0x2c
   1e8f4:	ldr	r8, [sp, #40]	; 0x28
   1e8f8:	bne	1e908 <main@@Base+0x86ac>
   1e8fc:	ldrb	r0, [r4, #2]!
   1e900:	cmp	r0, #32
   1e904:	bhi	1e918 <main@@Base+0x86bc>
   1e908:	mov	r0, r8
   1e90c:	mov	r2, r5
   1e910:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e914:	mov	r4, r0
   1e918:	cmp	r4, r5
   1e91c:	beq	1e984 <main@@Base+0x8728>
   1e920:	ldrb	r0, [r4]
   1e924:	cmp	r0, #93	; 0x5d
   1e928:	bne	1e980 <main@@Base+0x8724>
   1e92c:	ldr	r5, [sp, #44]	; 0x2c
   1e930:	ldr	r8, [sp, #40]	; 0x28
   1e934:	ldr	sl, [sp, #36]	; 0x24
   1e938:	add	r1, r4, #1
   1e93c:	sub	r0, r5, r1
   1e940:	cmp	r0, #2
   1e944:	blt	1e970 <main@@Base+0x8714>
   1e948:	ldrb	r0, [r1]
   1e94c:	cmp	r0, #32
   1e950:	bhi	1fc64 <main@@Base+0x9a08>
   1e954:	ldr	r5, [sp, #44]	; 0x2c
   1e958:	ldr	r8, [sp, #40]	; 0x28
   1e95c:	ldr	sl, [sp, #36]	; 0x24
   1e960:	bne	1e970 <main@@Base+0x8714>
   1e964:	ldrb	r0, [r4, #2]!
   1e968:	cmp	r0, #32
   1e96c:	bhi	1e0e4 <main@@Base+0x7e88>
   1e970:	mov	r0, r8
   1e974:	mov	r2, r5
   1e978:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1e97c:	b	1e0e0 <main@@Base+0x7e84>
   1e980:	mov	r5, r4
   1e984:	mov	r0, #0
   1e988:	mov	r1, #1
   1e98c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1e990:	ldr	r0, [sp, #40]	; 0x28
   1e994:	ldr	r0, [r0]
   1e998:	bl	30274 <flatcc_builder_extend_vector@@Base>
   1e99c:	cmp	r0, #0
   1e9a0:	beq	2147c <main@@Base+0xb220>
   1e9a4:	mov	r4, r5
   1e9a8:	ldr	r5, [sp, #44]	; 0x2c
   1e9ac:	ldr	r8, [sp, #40]	; 0x28
   1e9b0:	mov	r7, r0
   1e9b4:	mov	r6, #0
   1e9b8:	cmp	r4, r5
   1e9bc:	str	r6, [fp, #-52]	; 0xffffffcc
   1e9c0:	str	r6, [fp, #-56]	; 0xffffffc8
   1e9c4:	strb	r6, [fp, #-60]	; 0xffffffc4
   1e9c8:	str	r6, [sp, #56]	; 0x38
   1e9cc:	beq	1ea14 <main@@Base+0x87b8>
   1e9d0:	sub	r0, fp, #56	; 0x38
   1e9d4:	mov	r1, r4
   1e9d8:	mov	r2, r5
   1e9dc:	add	r3, sp, #56	; 0x38
   1e9e0:	str	r0, [sp]
   1e9e4:	mov	r0, r8
   1e9e8:	bl	382dc <flatcc_json_parser_integer@@Base>
   1e9ec:	cmp	r0, r4
   1e9f0:	beq	1ea24 <main@@Base+0x87c8>
   1e9f4:	mov	r1, r0
   1e9f8:	ldr	r0, [sp, #56]	; 0x38
   1e9fc:	cmp	r0, #0
   1ea00:	beq	1ea34 <main@@Base+0x87d8>
   1ea04:	mov	r0, r8
   1ea08:	mov	r2, r5
   1ea0c:	mov	r3, #8
   1ea10:	b	1ea5c <main@@Base+0x8800>
   1ea14:	mov	r1, r5
   1ea18:	cmp	r4, r1
   1ea1c:	bne	1eaa4 <main@@Base+0x8848>
   1ea20:	b	1ea6c <main@@Base+0x8810>
   1ea24:	mov	r1, r4
   1ea28:	cmp	r4, r1
   1ea2c:	bne	1eaa4 <main@@Base+0x8848>
   1ea30:	b	1ea6c <main@@Base+0x8810>
   1ea34:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ea38:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ea3c:	subs	r3, r0, #256	; 0x100
   1ea40:	sbcs	r2, r2, #0
   1ea44:	bcc	1eb8c <main@@Base+0x8930>
   1ea48:	ldr	r8, [sp, #40]	; 0x28
   1ea4c:	ldr	r5, [sp, #44]	; 0x2c
   1ea50:	mov	r3, #7
   1ea54:	mov	r0, r8
   1ea58:	mov	r2, r5
   1ea5c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1ea60:	mov	r1, r0
   1ea64:	cmp	r4, r1
   1ea68:	bne	1eaa4 <main@@Base+0x8848>
   1ea6c:	sub	r0, fp, #60	; 0x3c
   1ea70:	mov	r1, r4
   1ea74:	mov	r2, r5
   1ea78:	str	r0, [sp]
   1ea7c:	mov	r0, r8
   1ea80:	ldr	r3, [pc, #4076]	; 1fa74 <main@@Base+0x9818>
   1ea84:	add	r3, pc, r3
   1ea88:	bl	235a4 <main@@Base+0xd348>
   1ea8c:	mov	r1, r0
   1ea90:	cmp	r0, r4
   1ea94:	cmpne	r1, r5
   1ea98:	beq	21458 <main@@Base+0xb1fc>
   1ea9c:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1eaa0:	ldr	r8, [sp, #40]	; 0x28
   1eaa4:	sub	r0, r5, r1
   1eaa8:	strb	r6, [r7]
   1eaac:	cmp	r0, #2
   1eab0:	blt	1eae4 <main@@Base+0x8888>
   1eab4:	ldrb	r0, [r1]
   1eab8:	cmp	r0, #32
   1eabc:	bls	1ead0 <main@@Base+0x8874>
   1eac0:	mov	r4, r1
   1eac4:	cmp	r4, r5
   1eac8:	bne	1eafc <main@@Base+0x88a0>
   1eacc:	b	1fbec <main@@Base+0x9990>
   1ead0:	bne	1eae4 <main@@Base+0x8888>
   1ead4:	mov	r4, r1
   1ead8:	ldrb	r0, [r4, #1]!
   1eadc:	cmp	r0, #32
   1eae0:	bhi	1eaf4 <main@@Base+0x8898>
   1eae4:	mov	r0, r8
   1eae8:	mov	r2, r5
   1eaec:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1eaf0:	mov	r4, r0
   1eaf4:	cmp	r4, r5
   1eaf8:	beq	1fbec <main@@Base+0x9990>
   1eafc:	ldrb	r0, [r4]
   1eb00:	cmp	r0, #44	; 0x2c
   1eb04:	bne	1fc0c <main@@Base+0x99b0>
   1eb08:	add	r1, r4, #1
   1eb0c:	sub	r0, r5, r1
   1eb10:	cmp	r0, #2
   1eb14:	blt	1eb44 <main@@Base+0x88e8>
   1eb18:	ldrb	r0, [r1]
   1eb1c:	cmp	r0, #32
   1eb20:	bls	1eb34 <main@@Base+0x88d8>
   1eb24:	mov	r4, r1
   1eb28:	cmp	r4, r5
   1eb2c:	bne	1eb5c <main@@Base+0x8900>
   1eb30:	b	1fc2c <main@@Base+0x99d0>
   1eb34:	bne	1eb44 <main@@Base+0x88e8>
   1eb38:	ldrb	r0, [r4, #2]!
   1eb3c:	cmp	r0, #32
   1eb40:	bhi	1eb54 <main@@Base+0x88f8>
   1eb44:	mov	r0, r8
   1eb48:	mov	r2, r5
   1eb4c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1eb50:	mov	r4, r0
   1eb54:	cmp	r4, r5
   1eb58:	beq	1fc2c <main@@Base+0x99d0>
   1eb5c:	ldrb	r0, [r4]
   1eb60:	cmp	r0, #93	; 0x5d
   1eb64:	beq	1fc48 <main@@Base+0x99ec>
   1eb68:	mov	r0, #0
   1eb6c:	mov	r1, #1
   1eb70:	strb	r0, [fp, #-60]	; 0xffffffc4
   1eb74:	ldr	r0, [r8]
   1eb78:	bl	30274 <flatcc_builder_extend_vector@@Base>
   1eb7c:	mov	r7, r0
   1eb80:	cmp	r0, #0
   1eb84:	bne	1e9b4 <main@@Base+0x8758>
   1eb88:	b	17324 <main@@Base+0x10c8>
   1eb8c:	ldr	r5, [sp, #44]	; 0x2c
   1eb90:	ldr	r8, [sp, #40]	; 0x28
   1eb94:	mov	r6, r0
   1eb98:	strb	r0, [fp, #-60]	; 0xffffffc4
   1eb9c:	cmp	r4, r1
   1eba0:	bne	1eaa4 <main@@Base+0x8848>
   1eba4:	b	1ea6c <main@@Base+0x8810>
   1eba8:	ldr	sl, [sp, #36]	; 0x24
   1ebac:	mov	r4, r5
   1ebb0:	b	1c818 <main@@Base+0x65bc>
   1ebb4:	ldr	r5, [sp, #44]	; 0x2c
   1ebb8:	ldr	r8, [sp, #40]	; 0x28
   1ebbc:	ldr	sl, [sp, #36]	; 0x24
   1ebc0:	bne	1ebd4 <main@@Base+0x8978>
   1ebc4:	ldrb	r0, [r2, #2]!
   1ebc8:	mov	r4, r2
   1ebcc:	cmp	r0, #32
   1ebd0:	bhi	20168 <main@@Base+0x9f0c>
   1ebd4:	mov	r0, r8
   1ebd8:	mov	r2, r5
   1ebdc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1ebe0:	b	20164 <main@@Base+0x9f08>
   1ebe4:	cmp	r0, #93	; 0x5d
   1ebe8:	bne	1fcb0 <main@@Base+0x9a54>
   1ebec:	ldr	r5, [sp, #44]	; 0x2c
   1ebf0:	ldr	r8, [sp, #40]	; 0x28
   1ebf4:	add	r1, r2, #1
   1ebf8:	sub	r0, r5, r1
   1ebfc:	cmp	r0, #2
   1ec00:	ldr	sl, [sp, #36]	; 0x24
   1ec04:	blt	20f4c <main@@Base+0xacf0>
   1ec08:	ldrb	r0, [r1]
   1ec0c:	cmp	r0, #32
   1ec10:	bls	20f2c <main@@Base+0xacd0>
   1ec14:	ldr	r5, [sp, #44]	; 0x2c
   1ec18:	ldr	r8, [sp, #40]	; 0x28
   1ec1c:	ldr	sl, [sp, #36]	; 0x24
   1ec20:	mov	r4, r1
   1ec24:	b	1c818 <main@@Base+0x65bc>
   1ec28:	mov	r0, r8
   1ec2c:	mov	r1, r5
   1ec30:	b	1fcc0 <main@@Base+0x9a64>
   1ec34:	ldr	r5, [sp, #44]	; 0x2c
   1ec38:	ldr	r8, [sp, #40]	; 0x28
   1ec3c:	bne	1ec4c <main@@Base+0x89f0>
   1ec40:	ldrb	r0, [r4, #2]!
   1ec44:	cmp	r0, #32
   1ec48:	bhi	1ec5c <main@@Base+0x8a00>
   1ec4c:	mov	r0, r8
   1ec50:	mov	r2, r5
   1ec54:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1ec58:	mov	r4, r0
   1ec5c:	cmp	r4, r5
   1ec60:	mov	r2, r5
   1ec64:	beq	1ecc0 <main@@Base+0x8a64>
   1ec68:	ldrb	r0, [r4]
   1ec6c:	cmp	r0, #125	; 0x7d
   1ec70:	bne	1ecbc <main@@Base+0x8a60>
   1ec74:	ldr	r5, [sp, #44]	; 0x2c
   1ec78:	ldr	r8, [sp, #40]	; 0x28
   1ec7c:	ldr	sl, [sp, #36]	; 0x24
   1ec80:	add	r1, r4, #1
   1ec84:	sub	r0, r5, r1
   1ec88:	cmp	r0, #2
   1ec8c:	blt	2111c <main@@Base+0xaec0>
   1ec90:	ldrb	r0, [r1]
   1ec94:	cmp	r0, #32
   1ec98:	bhi	1fb94 <main@@Base+0x9938>
   1ec9c:	ldr	r5, [sp, #44]	; 0x2c
   1eca0:	ldr	r8, [sp, #40]	; 0x28
   1eca4:	ldr	sl, [sp, #36]	; 0x24
   1eca8:	bne	2111c <main@@Base+0xaec0>
   1ecac:	ldrb	r0, [r4, #2]!
   1ecb0:	cmp	r0, #32
   1ecb4:	bhi	1c728 <main@@Base+0x64cc>
   1ecb8:	b	2111c <main@@Base+0xaec0>
   1ecbc:	mov	r2, r4
   1ecc0:	ldr	r5, [sp, #44]	; 0x2c
   1ecc4:	ldr	r8, [sp, #40]	; 0x28
   1ecc8:	cmp	r2, r5
   1eccc:	mov	r9, r5
   1ecd0:	beq	1ed28 <main@@Base+0x8acc>
   1ecd4:	ldrb	r0, [r2]
   1ecd8:	cmp	r0, #46	; 0x2e
   1ecdc:	beq	1ecfc <main@@Base+0x8aa0>
   1ece0:	cmp	r0, #34	; 0x22
   1ece4:	bne	1ed18 <main@@Base+0x8abc>
   1ece8:	ldr	r0, [sp, #32]
   1ecec:	mov	r1, #0
   1ecf0:	add	r9, r2, #1
   1ecf4:	b	1ed24 <main@@Base+0x8ac8>
   1ecf8:	andeq	r1, r4, r0, asr #8
   1ecfc:	mov	r1, r2
   1ed00:	mov	r0, r8
   1ed04:	mov	r2, r5
   1ed08:	mov	r3, #5
   1ed0c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1ed10:	mov	r9, r0
   1ed14:	b	1ed28 <main@@Base+0x8acc>
   1ed18:	ldr	r0, [sp, #32]
   1ed1c:	mov	r1, #1
   1ed20:	mov	r9, r2
   1ed24:	str	r1, [r0]
   1ed28:	sub	lr, r5, r9
   1ed2c:	mov	r1, #8
   1ed30:	cmp	lr, #8
   1ed34:	movcc	r1, lr
   1ed38:	sub	r2, r1, #1
   1ed3c:	cmp	r2, #7
   1ed40:	bhi	1eecc <main@@Base+0x8c70>
   1ed44:	add	r0, pc, #36	; 0x24
   1ed48:	mov	r1, #0
   1ed4c:	mov	ip, #0
   1ed50:	mov	r8, #0
   1ed54:	mov	r7, #0
   1ed58:	mov	r3, #0
   1ed5c:	mov	r6, #0
   1ed60:	mov	r4, #0
   1ed64:	ldr	r5, [r0, r2, lsl #2]
   1ed68:	mov	r2, #0
   1ed6c:	add	pc, r0, r5
   1ed70:	andeq	r0, r0, r8, rrx
   1ed74:	andeq	r0, r0, r0, rrx
   1ed78:	andeq	r0, r0, r8, asr r0
   1ed7c:	andeq	r0, r0, r0, asr r0
   1ed80:	andeq	r0, r0, r4, asr #32
   1ed84:	andeq	r0, r0, r8, lsr r0
   1ed88:	andeq	r0, r0, r8, lsr #32
   1ed8c:	andeq	r0, r0, r4, lsr #32
   1ed90:	andeq	r1, r4, r8, lsl r3
   1ed94:	ldrb	ip, [r9, #7]
   1ed98:	ldrb	r0, [r9, #6]
   1ed9c:	mov	r8, r1
   1eda0:	orr	r0, ip, r0, lsl #8
   1eda4:	mov	r1, r0
   1eda8:	ldrb	r0, [r9, #5]
   1edac:	mov	r7, r8
   1edb0:	orr	r1, r1, r0, lsl #16
   1edb4:	ldrb	r0, [r9, #4]
   1edb8:	mov	r3, r7
   1edbc:	orr	r1, r1, r0, lsl #24
   1edc0:	ldrb	r0, [r9, #3]
   1edc4:	orr	r6, r0, r3
   1edc8:	ldrb	r0, [r9, #2]
   1edcc:	orr	r4, r6, r0, lsl #8
   1edd0:	ldrb	r0, [r9, #1]
   1edd4:	orr	r2, r4, r0, lsl #16
   1edd8:	ldrb	r0, [r9]
   1eddc:	orr	r2, r2, r0, lsl #24
   1ede0:	movw	r0, #0
   1ede4:	movt	r0, #25956	; 0x6564
   1ede8:	subs	r0, r1, r0
   1edec:	movw	r0, #29556	; 0x7374
   1edf0:	movt	r0, #28261	; 0x6e65
   1edf4:	sbcs	r0, r2, r0
   1edf8:	bcs	1ee5c <main@@Base+0x8c00>
   1edfc:	movw	r0, #29793	; 0x7461
   1ee00:	ldr	r5, [sp, #44]	; 0x2c
   1ee04:	ldr	r8, [sp, #40]	; 0x28
   1ee08:	movt	r0, #25697	; 0x6461
   1ee0c:	teq	r2, r0
   1ee10:	bne	1eecc <main@@Base+0x8c70>
   1ee14:	cmp	lr, #5
   1ee18:	mov	r1, r9
   1ee1c:	blt	1f190 <main@@Base+0x8f34>
   1ee20:	ldr	r1, [sp, #32]
   1ee24:	mov	r2, r9
   1ee28:	ldrb	r0, [r2, #4]!
   1ee2c:	ldr	r1, [r1]
   1ee30:	cmp	r1, #0
   1ee34:	beq	1ef44 <main@@Base+0x8ce8>
   1ee38:	cmp	r0, #33	; 0x21
   1ee3c:	bcc	1ee4c <main@@Base+0x8bf0>
   1ee40:	cmp	r0, #58	; 0x3a
   1ee44:	mov	r1, r9
   1ee48:	bne	1f190 <main@@Base+0x8f34>
   1ee4c:	ldr	r0, [sp, #32]
   1ee50:	mov	r1, #0
   1ee54:	str	r1, [r0]
   1ee58:	b	1ef54 <main@@Base+0x8cf8>
   1ee5c:	movw	r0, #29292	; 0x726c
   1ee60:	lsr	r3, r1, #8
   1ee64:	movw	r7, #29793	; 0x7461
   1ee68:	movt	r0, #117	; 0x75
   1ee6c:	orr	r3, r3, r2, lsl #24
   1ee70:	movt	r7, #25697	; 0x6461
   1ee74:	eor	r0, r0, r2, lsr #8
   1ee78:	eor	r3, r3, r7
   1ee7c:	orrs	r0, r3, r0
   1ee80:	bne	1eed8 <main@@Base+0x8c7c>
   1ee84:	cmp	lr, #8
   1ee88:	mov	r1, r9
   1ee8c:	blt	1f1f0 <main@@Base+0x8f94>
   1ee90:	ldr	r1, [sp, #32]
   1ee94:	mov	r2, r9
   1ee98:	ldrb	r0, [r2, #7]!
   1ee9c:	ldr	r1, [r1]
   1eea0:	cmp	r1, #0
   1eea4:	beq	1ef78 <main@@Base+0x8d1c>
   1eea8:	cmp	r0, #33	; 0x21
   1eeac:	bcc	1eebc <main@@Base+0x8c60>
   1eeb0:	cmp	r0, #58	; 0x3a
   1eeb4:	mov	r1, r9
   1eeb8:	bne	1f1f0 <main@@Base+0x8f94>
   1eebc:	ldr	r0, [sp, #32]
   1eec0:	mov	r1, #0
   1eec4:	str	r1, [r0]
   1eec8:	b	1ef88 <main@@Base+0x8d2c>
   1eecc:	mov	r0, r8
   1eed0:	mov	r1, r9
   1eed4:	b	1f2bc <main@@Base+0x9060>
   1eed8:	movw	r0, #29556	; 0x7374
   1eedc:	bfc	r1, #0, #16
   1eee0:	movt	r0, #28261	; 0x6e65
   1eee4:	eor	r0, r2, r0
   1eee8:	movw	r2, #0
   1eeec:	movt	r2, #25956	; 0x6564
   1eef0:	eor	r1, r1, r2
   1eef4:	orrs	r0, r1, r0
   1eef8:	bne	1f2ac <main@@Base+0x9050>
   1eefc:	cmp	lr, #7
   1ef00:	mov	r1, r9
   1ef04:	blt	1f250 <main@@Base+0x8ff4>
   1ef08:	ldr	r1, [sp, #32]
   1ef0c:	mov	r2, r9
   1ef10:	ldrb	r0, [r2, #6]!
   1ef14:	ldr	r1, [r1]
   1ef18:	cmp	r1, #0
   1ef1c:	beq	1efac <main@@Base+0x8d50>
   1ef20:	cmp	r0, #33	; 0x21
   1ef24:	bcc	1ef34 <main@@Base+0x8cd8>
   1ef28:	cmp	r0, #58	; 0x3a
   1ef2c:	mov	r1, r9
   1ef30:	bne	1f250 <main@@Base+0x8ff4>
   1ef34:	ldr	r0, [sp, #32]
   1ef38:	mov	r1, #0
   1ef3c:	str	r1, [r0]
   1ef40:	b	1efbc <main@@Base+0x8d60>
   1ef44:	cmp	r0, #34	; 0x22
   1ef48:	mov	r1, r9
   1ef4c:	bne	1f190 <main@@Base+0x8f34>
   1ef50:	add	r2, r9, #5
   1ef54:	ldr	r0, [sp, #44]	; 0x2c
   1ef58:	sub	r0, r0, r2
   1ef5c:	cmp	r0, #2
   1ef60:	blt	1eff4 <main@@Base+0x8d98>
   1ef64:	ldrb	r0, [r2]
   1ef68:	cmp	r0, #32
   1ef6c:	bls	1efe0 <main@@Base+0x8d84>
   1ef70:	mov	r1, r2
   1ef74:	b	1f008 <main@@Base+0x8dac>
   1ef78:	cmp	r0, #34	; 0x22
   1ef7c:	mov	r1, r9
   1ef80:	bne	1f1f0 <main@@Base+0x8f94>
   1ef84:	add	r2, r9, #8
   1ef88:	ldr	r0, [sp, #44]	; 0x2c
   1ef8c:	sub	r0, r0, r2
   1ef90:	cmp	r0, #2
   1ef94:	blt	1f078 <main@@Base+0x8e1c>
   1ef98:	ldrb	r0, [r2]
   1ef9c:	cmp	r0, #32
   1efa0:	bls	1f064 <main@@Base+0x8e08>
   1efa4:	mov	r1, r2
   1efa8:	b	1f08c <main@@Base+0x8e30>
   1efac:	cmp	r0, #34	; 0x22
   1efb0:	mov	r1, r9
   1efb4:	bne	1f250 <main@@Base+0x8ff4>
   1efb8:	add	r2, r9, #7
   1efbc:	ldr	r0, [sp, #44]	; 0x2c
   1efc0:	sub	r0, r0, r2
   1efc4:	cmp	r0, #2
   1efc8:	blt	1f0fc <main@@Base+0x8ea0>
   1efcc:	ldrb	r0, [r2]
   1efd0:	cmp	r0, #32
   1efd4:	bls	1f0e8 <main@@Base+0x8e8c>
   1efd8:	mov	r1, r2
   1efdc:	b	1f110 <main@@Base+0x8eb4>
   1efe0:	bne	1eff4 <main@@Base+0x8d98>
   1efe4:	mov	r1, r2
   1efe8:	ldrb	r0, [r1, #1]!
   1efec:	cmp	r0, #32
   1eff0:	bhi	1f008 <main@@Base+0x8dac>
   1eff4:	mov	r1, r2
   1eff8:	ldr	r0, [sp, #40]	; 0x28
   1effc:	ldr	r2, [sp, #44]	; 0x2c
   1f000:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1f004:	mov	r1, r0
   1f008:	ldr	r0, [sp, #44]	; 0x2c
   1f00c:	cmp	r1, r0
   1f010:	beq	1f050 <main@@Base+0x8df4>
   1f014:	ldrb	r0, [r1]
   1f018:	cmp	r0, #58	; 0x3a
   1f01c:	bne	1f050 <main@@Base+0x8df4>
   1f020:	ldr	r0, [sp, #44]	; 0x2c
   1f024:	add	r2, r1, #1
   1f028:	sub	r0, r0, r2
   1f02c:	cmp	r0, #2
   1f030:	blt	1f17c <main@@Base+0x8f20>
   1f034:	ldrb	r0, [r2]
   1f038:	cmp	r0, #32
   1f03c:	bls	1f16c <main@@Base+0x8f10>
   1f040:	mov	r1, r2
   1f044:	cmp	r9, r1
   1f048:	bne	1f198 <main@@Base+0x8f3c>
   1f04c:	b	1f2ac <main@@Base+0x9050>
   1f050:	ldr	r0, [sp, #40]	; 0x28
   1f054:	ldr	r2, [sp, #44]	; 0x2c
   1f058:	mov	r3, #4
   1f05c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1f060:	b	1f18c <main@@Base+0x8f30>
   1f064:	bne	1f078 <main@@Base+0x8e1c>
   1f068:	mov	r1, r2
   1f06c:	ldrb	r0, [r1, #1]!
   1f070:	cmp	r0, #32
   1f074:	bhi	1f08c <main@@Base+0x8e30>
   1f078:	mov	r1, r2
   1f07c:	ldr	r0, [sp, #40]	; 0x28
   1f080:	ldr	r2, [sp, #44]	; 0x2c
   1f084:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1f088:	mov	r1, r0
   1f08c:	ldr	r0, [sp, #44]	; 0x2c
   1f090:	cmp	r1, r0
   1f094:	beq	1f0d4 <main@@Base+0x8e78>
   1f098:	ldrb	r0, [r1]
   1f09c:	cmp	r0, #58	; 0x3a
   1f0a0:	bne	1f0d4 <main@@Base+0x8e78>
   1f0a4:	ldr	r0, [sp, #44]	; 0x2c
   1f0a8:	add	r2, r1, #1
   1f0ac:	sub	r0, r0, r2
   1f0b0:	cmp	r0, #2
   1f0b4:	blt	1f1dc <main@@Base+0x8f80>
   1f0b8:	ldrb	r0, [r2]
   1f0bc:	cmp	r0, #32
   1f0c0:	bls	1f1cc <main@@Base+0x8f70>
   1f0c4:	mov	r1, r2
   1f0c8:	cmp	r9, r1
   1f0cc:	bne	1f1f8 <main@@Base+0x8f9c>
   1f0d0:	b	1f2ac <main@@Base+0x9050>
   1f0d4:	ldr	r0, [sp, #40]	; 0x28
   1f0d8:	ldr	r2, [sp, #44]	; 0x2c
   1f0dc:	mov	r3, #4
   1f0e0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1f0e4:	b	1f1ec <main@@Base+0x8f90>
   1f0e8:	bne	1f0fc <main@@Base+0x8ea0>
   1f0ec:	mov	r1, r2
   1f0f0:	ldrb	r0, [r1, #1]!
   1f0f4:	cmp	r0, #32
   1f0f8:	bhi	1f110 <main@@Base+0x8eb4>
   1f0fc:	mov	r1, r2
   1f100:	ldr	r0, [sp, #40]	; 0x28
   1f104:	ldr	r2, [sp, #44]	; 0x2c
   1f108:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1f10c:	mov	r1, r0
   1f110:	ldr	r0, [sp, #44]	; 0x2c
   1f114:	cmp	r1, r0
   1f118:	beq	1f158 <main@@Base+0x8efc>
   1f11c:	ldrb	r0, [r1]
   1f120:	cmp	r0, #58	; 0x3a
   1f124:	bne	1f158 <main@@Base+0x8efc>
   1f128:	ldr	r0, [sp, #44]	; 0x2c
   1f12c:	add	r2, r1, #1
   1f130:	sub	r0, r0, r2
   1f134:	cmp	r0, #2
   1f138:	blt	1f23c <main@@Base+0x8fe0>
   1f13c:	ldrb	r0, [r2]
   1f140:	cmp	r0, #32
   1f144:	bls	1f22c <main@@Base+0x8fd0>
   1f148:	mov	r1, r2
   1f14c:	cmp	r9, r1
   1f150:	bne	1f258 <main@@Base+0x8ffc>
   1f154:	b	1f2ac <main@@Base+0x9050>
   1f158:	ldr	r0, [sp, #40]	; 0x28
   1f15c:	ldr	r2, [sp, #44]	; 0x2c
   1f160:	mov	r3, #4
   1f164:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1f168:	b	1f24c <main@@Base+0x8ff0>
   1f16c:	bne	1f17c <main@@Base+0x8f20>
   1f170:	ldrb	r0, [r1, #2]!
   1f174:	cmp	r0, #32
   1f178:	bhi	1f190 <main@@Base+0x8f34>
   1f17c:	mov	r1, r2
   1f180:	ldr	r0, [sp, #40]	; 0x28
   1f184:	ldr	r2, [sp, #44]	; 0x2c
   1f188:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1f18c:	mov	r1, r0
   1f190:	cmp	r9, r1
   1f194:	beq	1f2ac <main@@Base+0x9050>
   1f198:	mov	r0, #0
   1f19c:	ldr	r2, [sp, #44]	; 0x2c
   1f1a0:	sub	r3, fp, #56	; 0x38
   1f1a4:	str	r0, [sp]
   1f1a8:	ldr	r0, [sp, #40]	; 0x28
   1f1ac:	bl	3844c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1f1b0:	mov	r4, r0
   1f1b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f1b8:	cmp	r0, #0
   1f1bc:	beq	2057c <main@@Base+0xa320>
   1f1c0:	ldr	r0, [sp, #40]	; 0x28
   1f1c4:	mov	r1, #0
   1f1c8:	b	1f288 <main@@Base+0x902c>
   1f1cc:	bne	1f1dc <main@@Base+0x8f80>
   1f1d0:	ldrb	r0, [r1, #2]!
   1f1d4:	cmp	r0, #32
   1f1d8:	bhi	1f1f0 <main@@Base+0x8f94>
   1f1dc:	mov	r1, r2
   1f1e0:	ldr	r0, [sp, #40]	; 0x28
   1f1e4:	ldr	r2, [sp, #44]	; 0x2c
   1f1e8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1f1ec:	mov	r1, r0
   1f1f0:	cmp	r9, r1
   1f1f4:	beq	1f2ac <main@@Base+0x9050>
   1f1f8:	mov	r0, #1
   1f1fc:	ldr	r2, [sp, #44]	; 0x2c
   1f200:	sub	r3, fp, #56	; 0x38
   1f204:	str	r0, [sp]
   1f208:	ldr	r0, [sp, #40]	; 0x28
   1f20c:	bl	3844c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1f210:	mov	r4, r0
   1f214:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f218:	cmp	r0, #0
   1f21c:	beq	2057c <main@@Base+0xa320>
   1f220:	ldr	r0, [sp, #40]	; 0x28
   1f224:	mov	r1, #1
   1f228:	b	1f288 <main@@Base+0x902c>
   1f22c:	bne	1f23c <main@@Base+0x8fe0>
   1f230:	ldrb	r0, [r1, #2]!
   1f234:	cmp	r0, #32
   1f238:	bhi	1f250 <main@@Base+0x8ff4>
   1f23c:	mov	r1, r2
   1f240:	ldr	r0, [sp, #40]	; 0x28
   1f244:	ldr	r2, [sp, #44]	; 0x2c
   1f248:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1f24c:	mov	r1, r0
   1f250:	cmp	r9, r1
   1f254:	beq	1f2ac <main@@Base+0x9050>
   1f258:	mov	r0, #0
   1f25c:	ldr	r2, [sp, #44]	; 0x2c
   1f260:	sub	r3, fp, #56	; 0x38
   1f264:	str	r0, [sp]
   1f268:	ldr	r0, [sp, #40]	; 0x28
   1f26c:	bl	3844c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1f270:	mov	r4, r0
   1f274:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f278:	cmp	r0, #0
   1f27c:	beq	2057c <main@@Base+0xa320>
   1f280:	ldr	r0, [sp, #40]	; 0x28
   1f284:	mov	r1, #2
   1f288:	ldr	r0, [r0]
   1f28c:	bl	32630 <flatcc_builder_table_add_offset@@Base>
   1f290:	cmp	r0, #0
   1f294:	beq	2057c <main@@Base+0xa320>
   1f298:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1f29c:	str	r1, [r0]
   1f2a0:	ldr	r5, [sp, #44]	; 0x2c
   1f2a4:	ldr	r8, [sp, #40]	; 0x28
   1f2a8:	b	1f2c8 <main@@Base+0x906c>
   1f2ac:	ldr	r8, [sp, #40]	; 0x28
   1f2b0:	ldr	r5, [sp, #44]	; 0x2c
   1f2b4:	mov	r1, r9
   1f2b8:	mov	r0, r8
   1f2bc:	mov	r2, r5
   1f2c0:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   1f2c4:	mov	r4, r0
   1f2c8:	sub	r0, r5, r4
   1f2cc:	cmp	r0, #2
   1f2d0:	blt	1f304 <main@@Base+0x90a8>
   1f2d4:	ldrb	r0, [r4]
   1f2d8:	cmp	r0, #32
   1f2dc:	bls	1f2f0 <main@@Base+0x9094>
   1f2e0:	mov	r2, r4
   1f2e4:	cmp	r2, r5
   1f2e8:	bne	1f320 <main@@Base+0x90c4>
   1f2ec:	b	1fb4c <main@@Base+0x98f0>
   1f2f0:	bne	1f304 <main@@Base+0x90a8>
   1f2f4:	mov	r2, r4
   1f2f8:	ldrb	r0, [r2, #1]!
   1f2fc:	cmp	r0, #32
   1f300:	bhi	1f318 <main@@Base+0x90bc>
   1f304:	mov	r0, r8
   1f308:	mov	r1, r4
   1f30c:	mov	r2, r5
   1f310:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1f314:	mov	r2, r0
   1f318:	cmp	r2, r5
   1f31c:	beq	1fb4c <main@@Base+0x98f0>
   1f320:	ldrb	r0, [r2]
   1f324:	cmp	r0, #44	; 0x2c
   1f328:	bne	1fb64 <main@@Base+0x9908>
   1f32c:	add	r1, r2, #1
   1f330:	sub	r0, r5, r1
   1f334:	cmp	r0, #2
   1f338:	blt	1f368 <main@@Base+0x910c>
   1f33c:	ldrb	r0, [r1]
   1f340:	cmp	r0, #32
   1f344:	bls	1f358 <main@@Base+0x90fc>
   1f348:	mov	r2, r1
   1f34c:	cmp	r2, r5
   1f350:	bne	1f380 <main@@Base+0x9124>
   1f354:	b	1fbf4 <main@@Base+0x9998>
   1f358:	bne	1f368 <main@@Base+0x910c>
   1f35c:	ldrb	r0, [r2, #2]!
   1f360:	cmp	r0, #32
   1f364:	bhi	1f378 <main@@Base+0x911c>
   1f368:	mov	r0, r8
   1f36c:	mov	r2, r5
   1f370:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1f374:	mov	r2, r0
   1f378:	cmp	r2, r5
   1f37c:	beq	1fbf4 <main@@Base+0x9998>
   1f380:	ldrb	r0, [r2]
   1f384:	cmp	r0, #125	; 0x7d
   1f388:	bne	1ecc8 <main@@Base+0x8a6c>
   1f38c:	b	1fb74 <main@@Base+0x9918>
   1f390:	ldr	r5, [sp, #44]	; 0x2c
   1f394:	ldr	r8, [sp, #40]	; 0x28
   1f398:	bne	1f3a8 <main@@Base+0x914c>
   1f39c:	ldrb	r0, [r4, #2]!
   1f3a0:	cmp	r0, #32
   1f3a4:	bhi	1f3b8 <main@@Base+0x915c>
   1f3a8:	mov	r0, r8
   1f3ac:	mov	r2, r5
   1f3b0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1f3b4:	mov	r4, r0
   1f3b8:	cmp	r4, r5
   1f3bc:	beq	1f400 <main@@Base+0x91a4>
   1f3c0:	ldrb	r0, [r4]
   1f3c4:	cmp	r0, #93	; 0x5d
   1f3c8:	bne	1f3fc <main@@Base+0x91a0>
   1f3cc:	ldr	r5, [sp, #44]	; 0x2c
   1f3d0:	ldr	r8, [sp, #40]	; 0x28
   1f3d4:	ldr	sl, [sp, #36]	; 0x24
   1f3d8:	add	r1, r4, #1
   1f3dc:	sub	r0, r5, r1
   1f3e0:	cmp	r0, #2
   1f3e4:	blt	20f78 <main@@Base+0xad1c>
   1f3e8:	ldrb	r0, [r1]
   1f3ec:	cmp	r0, #32
   1f3f0:	bls	20f5c <main@@Base+0xad00>
   1f3f4:	mov	r4, r1
   1f3f8:	b	21354 <main@@Base+0xb0f8>
   1f3fc:	mov	r5, r4
   1f400:	mov	r0, #0
   1f404:	mov	r1, #1
   1f408:	str	r0, [sp, #60]	; 0x3c
   1f40c:	str	r0, [sp, #56]	; 0x38
   1f410:	ldr	r0, [sp, #40]	; 0x28
   1f414:	ldr	r0, [r0]
   1f418:	bl	30274 <flatcc_builder_extend_vector@@Base>
   1f41c:	cmp	r0, #0
   1f420:	beq	2147c <main@@Base+0xb220>
   1f424:	mov	r4, r5
   1f428:	ldr	r5, [sp, #44]	; 0x2c
   1f42c:	ldr	r8, [sp, #40]	; 0x28
   1f430:	mov	r7, r0
   1f434:	mov	r0, #0
   1f438:	cmp	r4, r5
   1f43c:	str	r0, [fp, #-52]	; 0xffffffcc
   1f440:	str	r0, [fp, #-56]	; 0xffffffc8
   1f444:	str	r0, [sp, #60]	; 0x3c
   1f448:	str	r0, [sp, #56]	; 0x38
   1f44c:	str	r0, [fp, #-60]	; 0xffffffc4
   1f450:	beq	1f4b0 <main@@Base+0x9254>
   1f454:	sub	r0, fp, #56	; 0x38
   1f458:	mov	r1, r4
   1f45c:	mov	r2, r5
   1f460:	sub	r3, fp, #60	; 0x3c
   1f464:	str	r0, [sp]
   1f468:	mov	r0, r8
   1f46c:	bl	382dc <flatcc_json_parser_integer@@Base>
   1f470:	cmp	r0, r4
   1f474:	beq	1f4c4 <main@@Base+0x9268>
   1f478:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1f47c:	mov	r1, r0
   1f480:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f484:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f488:	cmp	r2, #0
   1f48c:	beq	1f4dc <main@@Base+0x9280>
   1f490:	rsbs	r2, r0, #0
   1f494:	mov	r2, #-2147483648	; 0x80000000
   1f498:	sbcs	r2, r2, r3
   1f49c:	bcs	1f514 <main@@Base+0x92b8>
   1f4a0:	ldr	r8, [sp, #40]	; 0x28
   1f4a4:	ldr	r5, [sp, #44]	; 0x2c
   1f4a8:	mov	r3, #8
   1f4ac:	b	1f4f0 <main@@Base+0x9294>
   1f4b0:	mov	r3, #0
   1f4b4:	mov	r1, r5
   1f4b8:	cmp	r4, r1
   1f4bc:	bne	1f570 <main@@Base+0x9314>
   1f4c0:	b	1f534 <main@@Base+0x92d8>
   1f4c4:	mov	r0, #0
   1f4c8:	mov	r3, #0
   1f4cc:	mov	r1, r4
   1f4d0:	cmp	r4, r1
   1f4d4:	bne	1f570 <main@@Base+0x9314>
   1f4d8:	b	1f534 <main@@Base+0x92d8>
   1f4dc:	cmn	r3, #1
   1f4e0:	bgt	1f51c <main@@Base+0x92c0>
   1f4e4:	ldr	r8, [sp, #40]	; 0x28
   1f4e8:	ldr	r5, [sp, #44]	; 0x2c
   1f4ec:	mov	r3, #7
   1f4f0:	mov	r0, r8
   1f4f4:	mov	r2, r5
   1f4f8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1f4fc:	mov	r1, r0
   1f500:	mov	r0, #0
   1f504:	mov	r3, #0
   1f508:	cmp	r4, r1
   1f50c:	bne	1f570 <main@@Base+0x9314>
   1f510:	b	1f534 <main@@Base+0x92d8>
   1f514:	rsbs	r0, r0, #0
   1f518:	rsc	r3, r3, #0
   1f51c:	ldr	r5, [sp, #44]	; 0x2c
   1f520:	ldr	r8, [sp, #40]	; 0x28
   1f524:	str	r0, [sp, #56]	; 0x38
   1f528:	str	r3, [sp, #60]	; 0x3c
   1f52c:	cmp	r4, r1
   1f530:	bne	1f570 <main@@Base+0x9314>
   1f534:	add	r0, sp, #56	; 0x38
   1f538:	mov	r1, r4
   1f53c:	mov	r2, r5
   1f540:	str	r0, [sp]
   1f544:	mov	r0, r8
   1f548:	ldr	r3, [pc, #4040]	; 20518 <main@@Base+0xa2bc>
   1f54c:	add	r3, pc, r3
   1f550:	bl	25b80 <main@@Base+0xf924>
   1f554:	mov	r1, r0
   1f558:	cmp	r0, r4
   1f55c:	cmpne	r1, r5
   1f560:	beq	21458 <main@@Base+0xb1fc>
   1f564:	ldr	r0, [sp, #56]	; 0x38
   1f568:	ldr	r3, [sp, #60]	; 0x3c
   1f56c:	ldr	r8, [sp, #40]	; 0x28
   1f570:	stm	r7, {r0, r3}
   1f574:	sub	r0, r5, r1
   1f578:	cmp	r0, #2
   1f57c:	blt	1f5b0 <main@@Base+0x9354>
   1f580:	ldrb	r0, [r1]
   1f584:	cmp	r0, #32
   1f588:	bls	1f59c <main@@Base+0x9340>
   1f58c:	mov	r4, r1
   1f590:	cmp	r4, r5
   1f594:	bne	1f5c8 <main@@Base+0x936c>
   1f598:	b	2115c <main@@Base+0xaf00>
   1f59c:	bne	1f5b0 <main@@Base+0x9354>
   1f5a0:	mov	r4, r1
   1f5a4:	ldrb	r0, [r4, #1]!
   1f5a8:	cmp	r0, #32
   1f5ac:	bhi	1f5c0 <main@@Base+0x9364>
   1f5b0:	mov	r0, r8
   1f5b4:	mov	r2, r5
   1f5b8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1f5bc:	mov	r4, r0
   1f5c0:	cmp	r4, r5
   1f5c4:	beq	2115c <main@@Base+0xaf00>
   1f5c8:	ldrb	r0, [r4]
   1f5cc:	cmp	r0, #44	; 0x2c
   1f5d0:	bne	21194 <main@@Base+0xaf38>
   1f5d4:	add	r1, r4, #1
   1f5d8:	sub	r0, r5, r1
   1f5dc:	cmp	r0, #2
   1f5e0:	blt	1f610 <main@@Base+0x93b4>
   1f5e4:	ldrb	r0, [r1]
   1f5e8:	cmp	r0, #32
   1f5ec:	bls	1f600 <main@@Base+0x93a4>
   1f5f0:	mov	r4, r1
   1f5f4:	cmp	r4, r5
   1f5f8:	bne	1f628 <main@@Base+0x93cc>
   1f5fc:	b	211e4 <main@@Base+0xaf88>
   1f600:	bne	1f610 <main@@Base+0x93b4>
   1f604:	ldrb	r0, [r4, #2]!
   1f608:	cmp	r0, #32
   1f60c:	bhi	1f620 <main@@Base+0x93c4>
   1f610:	mov	r0, r8
   1f614:	mov	r2, r5
   1f618:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1f61c:	mov	r4, r0
   1f620:	cmp	r4, r5
   1f624:	beq	211e4 <main@@Base+0xaf88>
   1f628:	ldrb	r0, [r4]
   1f62c:	cmp	r0, #93	; 0x5d
   1f630:	beq	211fc <main@@Base+0xafa0>
   1f634:	mov	r0, #0
   1f638:	mov	r1, #1
   1f63c:	str	r0, [sp, #60]	; 0x3c
   1f640:	str	r0, [sp, #56]	; 0x38
   1f644:	ldr	r0, [r8]
   1f648:	bl	30274 <flatcc_builder_extend_vector@@Base>
   1f64c:	mov	r7, r0
   1f650:	cmp	r0, #0
   1f654:	bne	1f434 <main@@Base+0x91d8>
   1f658:	b	17324 <main@@Base+0x10c8>
   1f65c:	ldr	r5, [sp, #44]	; 0x2c
   1f660:	ldr	r8, [sp, #40]	; 0x28
   1f664:	ldr	sl, [sp, #36]	; 0x24
   1f668:	bne	1f678 <main@@Base+0x941c>
   1f66c:	ldrb	r0, [r9, #2]!
   1f670:	cmp	r0, #32
   1f674:	bhi	1f688 <main@@Base+0x942c>
   1f678:	mov	r0, r8
   1f67c:	mov	r2, r5
   1f680:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1f684:	mov	r9, r0
   1f688:	cmp	r7, r9
   1f68c:	beq	1f6e4 <main@@Base+0x9488>
   1f690:	ldr	r0, [r8]
   1f694:	mov	r1, #8
   1f698:	mov	r2, #8
   1f69c:	mvn	r3, #-536870912	; 0xe0000000
   1f6a0:	bl	30e38 <flatcc_builder_start_vector@@Base>
   1f6a4:	cmp	r0, #0
   1f6a8:	bne	21470 <main@@Base+0xb214>
   1f6ac:	cmp	r9, r5
   1f6b0:	beq	1f6f0 <main@@Base+0x9494>
   1f6b4:	ldrb	r0, [r9]
   1f6b8:	cmp	r0, #91	; 0x5b
   1f6bc:	bne	1f6f0 <main@@Base+0x9494>
   1f6c0:	add	r1, r9, #1
   1f6c4:	sub	r0, r5, r1
   1f6c8:	cmp	r0, #2
   1f6cc:	blt	1fcf0 <main@@Base+0x9a94>
   1f6d0:	ldrb	r0, [r1]
   1f6d4:	cmp	r0, #32
   1f6d8:	bls	1fce0 <main@@Base+0x9a84>
   1f6dc:	mov	r9, r1
   1f6e0:	b	1fd00 <main@@Base+0x9aa4>
   1f6e4:	mov	r0, r8
   1f6e8:	mov	r1, r7
   1f6ec:	b	2015c <main@@Base+0x9f00>
   1f6f0:	ldr	r8, [sp, #40]	; 0x28
   1f6f4:	mov	r1, r9
   1f6f8:	mov	r2, r5
   1f6fc:	mov	r3, #22
   1f700:	mov	r0, r8
   1f704:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1f708:	mov	r9, r0
   1f70c:	ldr	r0, [r8]
   1f710:	bl	320b0 <flatcc_builder_end_vector@@Base>
   1f714:	cmp	r0, #0
   1f718:	str	r0, [sp, #52]	; 0x34
   1f71c:	beq	21464 <main@@Base+0xb208>
   1f720:	ldr	r0, [r8]
   1f724:	mov	r1, #33	; 0x21
   1f728:	bl	32630 <flatcc_builder_table_add_offset@@Base>
   1f72c:	cmp	r0, #0
   1f730:	beq	21464 <main@@Base+0xb208>
   1f734:	ldr	r1, [sp, #52]	; 0x34
   1f738:	ldr	r5, [sp, #44]	; 0x2c
   1f73c:	mov	r4, r9
   1f740:	str	r1, [r0]
   1f744:	b	1a584 <main@@Base+0x4328>
   1f748:	mov	r6, r0
   1f74c:	ldr	r5, [sp, #44]	; 0x2c
   1f750:	ldr	r8, [sp, #40]	; 0x28
   1f754:	str	r6, [fp, #-60]	; 0xffffffc4
   1f758:	ldr	sl, [sp, #36]	; 0x24
   1f75c:	cmp	r7, r4
   1f760:	bne	1f7a8 <main@@Base+0x954c>
   1f764:	sub	r0, fp, #60	; 0x3c
   1f768:	mov	r1, r7
   1f76c:	mov	r2, r5
   1f770:	str	r0, [sp]
   1f774:	mov	r0, r8
   1f778:	ldr	r3, [pc, #3924]	; 206d4 <main@@Base+0xa478>
   1f77c:	add	r3, pc, r3
   1f780:	bl	25970 <main@@Base+0xf714>
   1f784:	cmp	r0, r7
   1f788:	mov	r4, r0
   1f78c:	ldrne	r1, [sp, #44]	; 0x2c
   1f790:	cmpne	r4, r1
   1f794:	beq	214a0 <main@@Base+0xb244>
   1f798:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1f79c:	ldr	r5, [sp, #44]	; 0x2c
   1f7a0:	ldr	r8, [sp, #40]	; 0x28
   1f7a4:	ldr	sl, [sp, #36]	; 0x24
   1f7a8:	cmp	r6, #0
   1f7ac:	bne	1f7bc <main@@Base+0x9560>
   1f7b0:	ldrb	r0, [r8, #8]
   1f7b4:	tst	r0, #2
   1f7b8:	beq	20168 <main@@Base+0x9f0c>
   1f7bc:	ldr	r0, [r8]
   1f7c0:	mov	r1, #20
   1f7c4:	mov	r2, #4
   1f7c8:	mov	r3, #4
   1f7cc:	bl	327e4 <flatcc_builder_table_add@@Base>
   1f7d0:	cmp	r0, #0
   1f7d4:	beq	214a0 <main@@Base+0xb244>
   1f7d8:	str	r6, [r0]
   1f7dc:	b	20168 <main@@Base+0x9f0c>
   1f7e0:	ldr	r5, [sp, #44]	; 0x2c
   1f7e4:	ldr	r8, [sp, #40]	; 0x28
   1f7e8:	ldr	sl, [sp, #36]	; 0x24
   1f7ec:	bne	1f7fc <main@@Base+0x95a0>
   1f7f0:	ldrb	r0, [r7, #2]!
   1f7f4:	cmp	r0, #32
   1f7f8:	bhi	1f80c <main@@Base+0x95b0>
   1f7fc:	mov	r0, r8
   1f800:	mov	r2, r5
   1f804:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1f808:	mov	r7, r0
   1f80c:	cmp	r4, r7
   1f810:	beq	20154 <main@@Base+0x9ef8>
   1f814:	mov	r6, #0
   1f818:	cmp	r7, r5
   1f81c:	str	r6, [fp, #-52]	; 0xffffffcc
   1f820:	str	r6, [fp, #-56]	; 0xffffffc8
   1f824:	str	r6, [sp, #60]	; 0x3c
   1f828:	str	r6, [sp, #56]	; 0x38
   1f82c:	str	r6, [fp, #-60]	; 0xffffffc4
   1f830:	beq	1f88c <main@@Base+0x9630>
   1f834:	sub	r0, fp, #56	; 0x38
   1f838:	mov	r1, r7
   1f83c:	mov	r2, r5
   1f840:	sub	r3, fp, #60	; 0x3c
   1f844:	str	r0, [sp]
   1f848:	mov	r0, r8
   1f84c:	bl	382dc <flatcc_json_parser_integer@@Base>
   1f850:	cmp	r0, r7
   1f854:	beq	1f8a0 <main@@Base+0x9644>
   1f858:	sub	r9, fp, #60	; 0x3c
   1f85c:	mov	r4, r0
   1f860:	ldm	r9, {r0, r6, r9}
   1f864:	cmp	r0, #0
   1f868:	beq	1f8b8 <main@@Base+0x965c>
   1f86c:	subs	r0, r6, #1
   1f870:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1f874:	bcc	1fab0 <main@@Base+0x9854>
   1f878:	ldr	r0, [sp, #40]	; 0x28
   1f87c:	ldr	r2, [sp, #44]	; 0x2c
   1f880:	mov	r1, r4
   1f884:	mov	r3, #8
   1f888:	b	1f8d0 <main@@Base+0x9674>
   1f88c:	mov	r9, #0
   1f890:	mov	r4, r5
   1f894:	cmp	r7, r4
   1f898:	bne	1fb04 <main@@Base+0x98a8>
   1f89c:	b	1fac8 <main@@Base+0x986c>
   1f8a0:	mov	r6, #0
   1f8a4:	mov	r9, #0
   1f8a8:	mov	r4, r7
   1f8ac:	cmp	r7, r4
   1f8b0:	bne	1fb04 <main@@Base+0x98a8>
   1f8b4:	b	1fac8 <main@@Base+0x986c>
   1f8b8:	cmn	r9, #1
   1f8bc:	bgt	1fab8 <main@@Base+0x985c>
   1f8c0:	ldr	r0, [sp, #40]	; 0x28
   1f8c4:	ldr	r2, [sp, #44]	; 0x2c
   1f8c8:	mov	r1, r4
   1f8cc:	mov	r3, #7
   1f8d0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1f8d4:	mov	r4, r0
   1f8d8:	mov	r6, #0
   1f8dc:	mov	r9, #0
   1f8e0:	cmp	r7, r4
   1f8e4:	bne	1fb04 <main@@Base+0x98a8>
   1f8e8:	b	1fac8 <main@@Base+0x986c>
   1f8ec:	ldr	r5, [sp, #44]	; 0x2c
   1f8f0:	bne	1f900 <main@@Base+0x96a4>
   1f8f4:	ldrb	r0, [r4, #2]!
   1f8f8:	cmp	r0, #32
   1f8fc:	bhi	1f910 <main@@Base+0x96b4>
   1f900:	ldr	r0, [sp, #40]	; 0x28
   1f904:	mov	r2, r5
   1f908:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1f90c:	mov	r4, r0
   1f910:	cmp	r4, r5
   1f914:	mov	r3, r5
   1f918:	beq	1f96c <main@@Base+0x9710>
   1f91c:	ldrb	r0, [r4]
   1f920:	cmp	r0, #125	; 0x7d
   1f924:	bne	1f968 <main@@Base+0x970c>
   1f928:	ldr	r5, [sp, #44]	; 0x2c
   1f92c:	ldr	r8, [sp, #40]	; 0x28
   1f930:	add	r1, r4, #1
   1f934:	sub	r0, r5, r1
   1f938:	cmp	r0, #2
   1f93c:	blt	212d0 <main@@Base+0xb074>
   1f940:	ldrb	r0, [r1]
   1f944:	cmp	r0, #32
   1f948:	bhi	1ff44 <main@@Base+0x9ce8>
   1f94c:	ldr	r5, [sp, #44]	; 0x2c
   1f950:	ldr	r8, [sp, #40]	; 0x28
   1f954:	bne	212d0 <main@@Base+0xb074>
   1f958:	ldrb	r0, [r4, #2]!
   1f95c:	cmp	r0, #32
   1f960:	bhi	1cdf4 <main@@Base+0x6b98>
   1f964:	b	212d0 <main@@Base+0xb074>
   1f968:	mov	r3, r4
   1f96c:	ldr	r5, [sp, #44]	; 0x2c
   1f970:	ldr	r8, [sp, #40]	; 0x28
   1f974:	cmp	r3, r5
   1f978:	mov	r1, r5
   1f97c:	beq	1f9d4 <main@@Base+0x9778>
   1f980:	ldrb	r0, [r3]
   1f984:	cmp	r0, #46	; 0x2e
   1f988:	beq	1f9a8 <main@@Base+0x974c>
   1f98c:	cmp	r0, #34	; 0x22
   1f990:	bne	1f9c4 <main@@Base+0x9768>
   1f994:	ldr	r0, [sp, #32]
   1f998:	mov	r1, #0
   1f99c:	str	r1, [r0]
   1f9a0:	add	r1, r3, #1
   1f9a4:	b	1f9d4 <main@@Base+0x9778>
   1f9a8:	mov	r1, r3
   1f9ac:	mov	r0, r8
   1f9b0:	mov	r2, r5
   1f9b4:	mov	r3, #5
   1f9b8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1f9bc:	mov	r1, r0
   1f9c0:	b	1f9d4 <main@@Base+0x9778>
   1f9c4:	ldr	r0, [sp, #32]
   1f9c8:	mov	r1, #1
   1f9cc:	str	r1, [r0]
   1f9d0:	mov	r1, r3
   1f9d4:	mov	r0, r8
   1f9d8:	mov	r2, r5
   1f9dc:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   1f9e0:	mov	r2, r0
   1f9e4:	sub	r0, r5, r0
   1f9e8:	cmp	r0, #2
   1f9ec:	blt	1fa20 <main@@Base+0x97c4>
   1f9f0:	ldrb	r0, [r2]
   1f9f4:	cmp	r0, #32
   1f9f8:	bls	1fa0c <main@@Base+0x97b0>
   1f9fc:	mov	r3, r2
   1fa00:	cmp	r3, r5
   1fa04:	bne	1fa3c <main@@Base+0x97e0>
   1fa08:	b	1ff10 <main@@Base+0x9cb4>
   1fa0c:	bne	1fa20 <main@@Base+0x97c4>
   1fa10:	mov	r3, r2
   1fa14:	ldrb	r0, [r3, #1]!
   1fa18:	cmp	r0, #32
   1fa1c:	bhi	1fa34 <main@@Base+0x97d8>
   1fa20:	mov	r1, r2
   1fa24:	mov	r0, r8
   1fa28:	mov	r2, r5
   1fa2c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1fa30:	mov	r3, r0
   1fa34:	cmp	r3, r5
   1fa38:	beq	1ff10 <main@@Base+0x9cb4>
   1fa3c:	ldrb	r0, [r3]
   1fa40:	cmp	r0, #44	; 0x2c
   1fa44:	bne	1ff18 <main@@Base+0x9cbc>
   1fa48:	add	r1, r3, #1
   1fa4c:	sub	r0, r5, r1
   1fa50:	cmp	r0, #2
   1fa54:	blt	1fa88 <main@@Base+0x982c>
   1fa58:	ldrb	r0, [r1]
   1fa5c:	cmp	r0, #32
   1fa60:	bls	1fa78 <main@@Base+0x981c>
   1fa64:	mov	r3, r1
   1fa68:	cmp	r3, r5
   1fa6c:	bne	1faa0 <main@@Base+0x9844>
   1fa70:	b	1ff54 <main@@Base+0x9cf8>
   1fa74:	andeq	r0, r4, r8, lsr #12
   1fa78:	bne	1fa88 <main@@Base+0x982c>
   1fa7c:	ldrb	r0, [r3, #2]!
   1fa80:	cmp	r0, #32
   1fa84:	bhi	1fa98 <main@@Base+0x983c>
   1fa88:	mov	r0, r8
   1fa8c:	mov	r2, r5
   1fa90:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1fa94:	mov	r3, r0
   1fa98:	cmp	r3, r5
   1fa9c:	beq	1ff54 <main@@Base+0x9cf8>
   1faa0:	ldrb	r0, [r3]
   1faa4:	cmp	r0, #125	; 0x7d
   1faa8:	bne	1f974 <main@@Base+0x9718>
   1faac:	b	1ff28 <main@@Base+0x9ccc>
   1fab0:	rsbs	r6, r6, #0
   1fab4:	rsc	r9, r9, #0
   1fab8:	str	r6, [sp, #56]	; 0x38
   1fabc:	str	r9, [sp, #60]	; 0x3c
   1fac0:	cmp	r7, r4
   1fac4:	bne	1fb04 <main@@Base+0x98a8>
   1fac8:	add	r0, sp, #56	; 0x38
   1facc:	ldr	r2, [sp, #44]	; 0x2c
   1fad0:	mov	r1, r7
   1fad4:	str	r0, [sp]
   1fad8:	ldr	r0, [sp, #40]	; 0x28
   1fadc:	ldr	r3, [pc, #3988]	; 20a78 <main@@Base+0xa81c>
   1fae0:	add	r3, pc, r3
   1fae4:	bl	25b80 <main@@Base+0xf924>
   1fae8:	cmp	r0, r7
   1faec:	mov	r4, r0
   1faf0:	ldrne	r1, [sp, #44]	; 0x2c
   1faf4:	cmpne	r4, r1
   1faf8:	beq	214a0 <main@@Base+0xb244>
   1fafc:	ldr	r6, [sp, #56]	; 0x38
   1fb00:	ldr	r9, [sp, #60]	; 0x3c
   1fb04:	ldr	r8, [sp, #40]	; 0x28
   1fb08:	orrs	r0, r6, r9
   1fb0c:	bne	1fb1c <main@@Base+0x98c0>
   1fb10:	ldrb	r0, [r8, #8]
   1fb14:	tst	r0, #2
   1fb18:	beq	202f8 <main@@Base+0xa09c>
   1fb1c:	ldr	r0, [r8]
   1fb20:	mov	r1, #22
   1fb24:	b	202dc <main@@Base+0xa080>
   1fb28:	ldr	r8, [sp, #40]	; 0x28
   1fb2c:	ldr	r5, [sp, #44]	; 0x2c
   1fb30:	mov	r1, r7
   1fb34:	mov	r3, #9
   1fb38:	mov	r0, r8
   1fb3c:	mov	r2, r5
   1fb40:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1fb44:	ldr	sl, [sp, #36]	; 0x24
   1fb48:	b	1c8cc <main@@Base+0x6670>
   1fb4c:	ldr	sl, [sp, #36]	; 0x24
   1fb50:	mov	r4, r5
   1fb54:	b	1c728 <main@@Base+0x64cc>
   1fb58:	ldr	sl, [sp, #36]	; 0x24
   1fb5c:	mov	r4, r5
   1fb60:	b	1dbec <main@@Base+0x7990>
   1fb64:	cmp	r0, #125	; 0x7d
   1fb68:	bne	20fb8 <main@@Base+0xad5c>
   1fb6c:	ldr	r5, [sp, #44]	; 0x2c
   1fb70:	ldr	r8, [sp, #40]	; 0x28
   1fb74:	add	r1, r2, #1
   1fb78:	sub	r0, r5, r1
   1fb7c:	cmp	r0, #2
   1fb80:	ldr	sl, [sp, #36]	; 0x24
   1fb84:	blt	2111c <main@@Base+0xaec0>
   1fb88:	ldrb	r0, [r1]
   1fb8c:	cmp	r0, #32
   1fb90:	bls	210fc <main@@Base+0xaea0>
   1fb94:	ldr	r5, [sp, #44]	; 0x2c
   1fb98:	ldr	r8, [sp, #40]	; 0x28
   1fb9c:	ldr	sl, [sp, #36]	; 0x24
   1fba0:	mov	r4, r1
   1fba4:	b	1c728 <main@@Base+0x64cc>
   1fba8:	cmp	r0, #93	; 0x5d
   1fbac:	bne	20fdc <main@@Base+0xad80>
   1fbb0:	ldr	r5, [sp, #44]	; 0x2c
   1fbb4:	ldr	r8, [sp, #40]	; 0x28
   1fbb8:	add	r1, r2, #1
   1fbbc:	sub	r0, r5, r1
   1fbc0:	cmp	r0, #2
   1fbc4:	ldr	sl, [sp, #36]	; 0x24
   1fbc8:	blt	21184 <main@@Base+0xaf28>
   1fbcc:	ldrb	r0, [r1]
   1fbd0:	cmp	r0, #32
   1fbd4:	bls	21164 <main@@Base+0xaf08>
   1fbd8:	ldr	r5, [sp, #44]	; 0x2c
   1fbdc:	ldr	r8, [sp, #40]	; 0x28
   1fbe0:	ldr	sl, [sp, #36]	; 0x24
   1fbe4:	mov	r4, r1
   1fbe8:	b	1dbec <main@@Base+0x7990>
   1fbec:	mov	r4, r5
   1fbf0:	b	211d4 <main@@Base+0xaf78>
   1fbf4:	mov	r0, r8
   1fbf8:	mov	r1, r5
   1fbfc:	b	20fc8 <main@@Base+0xad6c>
   1fc00:	mov	r0, r8
   1fc04:	mov	r1, r5
   1fc08:	b	20fec <main@@Base+0xad90>
   1fc0c:	cmp	r0, #93	; 0x5d
   1fc10:	bne	21000 <main@@Base+0xada4>
   1fc14:	ldr	r0, [sp, #44]	; 0x2c
   1fc18:	add	r1, r4, #1
   1fc1c:	sub	r0, r0, r1
   1fc20:	cmp	r0, #2
   1fc24:	blt	211c4 <main@@Base+0xaf68>
   1fc28:	b	1fc58 <main@@Base+0x99fc>
   1fc2c:	mov	r0, r8
   1fc30:	mov	r1, r5
   1fc34:	mov	r2, r5
   1fc38:	b	2100c <main@@Base+0xadb0>
   1fc3c:	ldr	sl, [sp, #36]	; 0x24
   1fc40:	mov	r4, r5
   1fc44:	b	1df40 <main@@Base+0x7ce4>
   1fc48:	add	r1, r4, #1
   1fc4c:	sub	r0, r5, r1
   1fc50:	cmp	r0, #2
   1fc54:	blt	211c4 <main@@Base+0xaf68>
   1fc58:	ldrb	r0, [r1]
   1fc5c:	cmp	r0, #32
   1fc60:	bls	211b4 <main@@Base+0xaf58>
   1fc64:	mov	r4, r1
   1fc68:	b	211d4 <main@@Base+0xaf78>
   1fc6c:	cmp	r0, #93	; 0x5d
   1fc70:	bne	21030 <main@@Base+0xadd4>
   1fc74:	ldr	r5, [sp, #44]	; 0x2c
   1fc78:	ldr	r8, [sp, #40]	; 0x28
   1fc7c:	add	r1, r2, #1
   1fc80:	sub	r0, r5, r1
   1fc84:	cmp	r0, #2
   1fc88:	ldr	sl, [sp, #36]	; 0x24
   1fc8c:	blt	21294 <main@@Base+0xb038>
   1fc90:	ldrb	r0, [r1]
   1fc94:	cmp	r0, #32
   1fc98:	bls	21274 <main@@Base+0xb018>
   1fc9c:	ldr	r5, [sp, #44]	; 0x2c
   1fca0:	ldr	r8, [sp, #40]	; 0x28
   1fca4:	ldr	sl, [sp, #36]	; 0x24
   1fca8:	mov	r4, r1
   1fcac:	b	1df40 <main@@Base+0x7ce4>
   1fcb0:	ldr	r8, [sp, #40]	; 0x28
   1fcb4:	ldr	r5, [sp, #44]	; 0x2c
   1fcb8:	mov	r1, r2
   1fcbc:	mov	r0, r8
   1fcc0:	mov	r2, r5
   1fcc4:	mov	r3, #9
   1fcc8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   1fccc:	ldr	sl, [sp, #36]	; 0x24
   1fcd0:	b	1c814 <main@@Base+0x65b8>
   1fcd4:	mov	r0, r8
   1fcd8:	mov	r1, r5
   1fcdc:	b	21040 <main@@Base+0xade4>
   1fce0:	bne	1fcf0 <main@@Base+0x9a94>
   1fce4:	ldrb	r0, [r9, #2]!
   1fce8:	cmp	r0, #32
   1fcec:	bhi	1fd00 <main@@Base+0x9aa4>
   1fcf0:	ldr	r0, [sp, #40]	; 0x28
   1fcf4:	ldr	r2, [sp, #44]	; 0x2c
   1fcf8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1fcfc:	mov	r9, r0
   1fd00:	ldr	r7, [sp, #44]	; 0x2c
   1fd04:	cmp	r9, r7
   1fd08:	beq	1fd64 <main@@Base+0x9b08>
   1fd0c:	ldrb	r0, [r9]
   1fd10:	cmp	r0, #93	; 0x5d
   1fd14:	bne	1fd60 <main@@Base+0x9b04>
   1fd18:	ldr	r0, [sp, #44]	; 0x2c
   1fd1c:	ldr	r8, [sp, #40]	; 0x28
   1fd20:	add	r1, r9, #1
   1fd24:	sub	r0, r0, r1
   1fd28:	cmp	r0, #2
   1fd2c:	blt	1fd50 <main@@Base+0x9af4>
   1fd30:	ldrb	r0, [r1]
   1fd34:	cmp	r0, #32
   1fd38:	bhi	2108c <main@@Base+0xae30>
   1fd3c:	ldr	r8, [sp, #40]	; 0x28
   1fd40:	bne	1fd50 <main@@Base+0x9af4>
   1fd44:	ldrb	r0, [r9, #2]!
   1fd48:	cmp	r0, #32
   1fd4c:	bhi	1f70c <main@@Base+0x94b0>
   1fd50:	ldr	r2, [sp, #44]	; 0x2c
   1fd54:	mov	r0, r8
   1fd58:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1fd5c:	b	1f708 <main@@Base+0x94ac>
   1fd60:	mov	r7, r9
   1fd64:	mov	r0, #0
   1fd68:	mov	r1, #1
   1fd6c:	str	r0, [fp, #-52]	; 0xffffffcc
   1fd70:	str	r0, [fp, #-56]	; 0xffffffc8
   1fd74:	ldr	r0, [sp, #40]	; 0x28
   1fd78:	ldr	r0, [r0]
   1fd7c:	bl	30274 <flatcc_builder_extend_vector@@Base>
   1fd80:	cmp	r0, #0
   1fd84:	beq	21484 <main@@Base+0xb228>
   1fd88:	ldr	r5, [sp, #44]	; 0x2c
   1fd8c:	ldr	r8, [sp, #40]	; 0x28
   1fd90:	mov	r4, r0
   1fd94:	mov	r9, r7
   1fd98:	mov	r0, r8
   1fd9c:	mov	r1, r9
   1fda0:	mov	r2, r5
   1fda4:	sub	r3, fp, #56	; 0x38
   1fda8:	bl	377d8 <flatcc_json_parser_double@@Base>
   1fdac:	mov	r7, r0
   1fdb0:	cmp	r9, r0
   1fdb4:	bne	1fdf4 <main@@Base+0x9b98>
   1fdb8:	sub	r0, fp, #56	; 0x38
   1fdbc:	mov	r1, r9
   1fdc0:	mov	r2, r5
   1fdc4:	str	r0, [sp]
   1fdc8:	mov	r0, r8
   1fdcc:	ldr	r3, [pc, #4008]	; 20d7c <main@@Base+0xab20>
   1fdd0:	add	r3, pc, r3
   1fdd4:	bl	26188 <main@@Base+0xff2c>
   1fdd8:	mov	r7, r0
   1fddc:	cmp	r0, r9
   1fde0:	beq	21484 <main@@Base+0xb228>
   1fde4:	ldr	r5, [sp, #44]	; 0x2c
   1fde8:	ldr	r8, [sp, #40]	; 0x28
   1fdec:	cmp	r7, r5
   1fdf0:	beq	21448 <main@@Base+0xb1ec>
   1fdf4:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1fdf8:	sub	r0, r5, r7
   1fdfc:	cmp	r0, #2
   1fe00:	vstr	d16, [r4]
   1fe04:	blt	1fe44 <main@@Base+0x9be8>
   1fe08:	ldrb	r0, [r7]
   1fe0c:	cmp	r0, #32
   1fe10:	bls	1fe28 <main@@Base+0x9bcc>
   1fe14:	ldr	r5, [sp, #44]	; 0x2c
   1fe18:	mov	r9, r7
   1fe1c:	cmp	r9, r5
   1fe20:	bne	1fe60 <main@@Base+0x9c04>
   1fe24:	b	21058 <main@@Base+0xadfc>
   1fe28:	ldr	r5, [sp, #44]	; 0x2c
   1fe2c:	ldr	r8, [sp, #40]	; 0x28
   1fe30:	bne	1fe44 <main@@Base+0x9be8>
   1fe34:	mov	r9, r7
   1fe38:	ldrb	r0, [r9, #1]!
   1fe3c:	cmp	r0, #32
   1fe40:	bhi	1fe58 <main@@Base+0x9bfc>
   1fe44:	mov	r0, r8
   1fe48:	mov	r1, r7
   1fe4c:	mov	r2, r5
   1fe50:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1fe54:	mov	r9, r0
   1fe58:	cmp	r9, r5
   1fe5c:	beq	21058 <main@@Base+0xadfc>
   1fe60:	ldrb	r0, [r9]
   1fe64:	cmp	r0, #44	; 0x2c
   1fe68:	bne	21064 <main@@Base+0xae08>
   1fe6c:	ldr	r4, [sp, #44]	; 0x2c
   1fe70:	add	r1, r9, #1
   1fe74:	sub	r0, r4, r1
   1fe78:	cmp	r0, #2
   1fe7c:	ldr	r0, [sp, #40]	; 0x28
   1fe80:	blt	1febc <main@@Base+0x9c60>
   1fe84:	ldrb	r0, [r1]
   1fe88:	cmp	r0, #32
   1fe8c:	bls	1fea4 <main@@Base+0x9c48>
   1fe90:	ldr	r4, [sp, #44]	; 0x2c
   1fe94:	mov	r9, r1
   1fe98:	cmp	r9, r4
   1fe9c:	bne	1fed0 <main@@Base+0x9c74>
   1fea0:	b	21098 <main@@Base+0xae3c>
   1fea4:	ldr	r4, [sp, #44]	; 0x2c
   1fea8:	ldr	r0, [sp, #40]	; 0x28
   1feac:	bne	1febc <main@@Base+0x9c60>
   1feb0:	ldrb	r2, [r9, #2]!
   1feb4:	cmp	r2, #32
   1feb8:	bhi	1fec8 <main@@Base+0x9c6c>
   1febc:	mov	r2, r4
   1fec0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1fec4:	mov	r9, r0
   1fec8:	cmp	r9, r4
   1fecc:	beq	21098 <main@@Base+0xae3c>
   1fed0:	ldrb	r0, [r9]
   1fed4:	cmp	r0, #93	; 0x5d
   1fed8:	beq	2106c <main@@Base+0xae10>
   1fedc:	ldr	r8, [sp, #40]	; 0x28
   1fee0:	mov	r0, #0
   1fee4:	mov	r1, #1
   1fee8:	str	r0, [fp, #-52]	; 0xffffffcc
   1feec:	str	r0, [fp, #-56]	; 0xffffffc8
   1fef0:	ldr	r0, [r8]
   1fef4:	bl	30274 <flatcc_builder_extend_vector@@Base>
   1fef8:	ldr	r5, [sp, #44]	; 0x2c
   1fefc:	mov	r4, r0
   1ff00:	cmp	r0, #0
   1ff04:	mov	r7, r9
   1ff08:	bne	1fd98 <main@@Base+0x9b3c>
   1ff0c:	b	21448 <main@@Base+0xb1ec>
   1ff10:	mov	r4, r5
   1ff14:	b	1cdf4 <main@@Base+0x6b98>
   1ff18:	cmp	r0, #125	; 0x7d
   1ff1c:	bne	210a8 <main@@Base+0xae4c>
   1ff20:	ldr	r5, [sp, #44]	; 0x2c
   1ff24:	ldr	r8, [sp, #40]	; 0x28
   1ff28:	add	r1, r3, #1
   1ff2c:	sub	r0, r5, r1
   1ff30:	cmp	r0, #2
   1ff34:	blt	212d0 <main@@Base+0xb074>
   1ff38:	ldrb	r0, [r1]
   1ff3c:	cmp	r0, #32
   1ff40:	bls	212b4 <main@@Base+0xb058>
   1ff44:	ldr	r5, [sp, #44]	; 0x2c
   1ff48:	ldr	r8, [sp, #40]	; 0x28
   1ff4c:	mov	r4, r1
   1ff50:	b	1cdf4 <main@@Base+0x6b98>
   1ff54:	mov	r0, r8
   1ff58:	mov	r1, r5
   1ff5c:	b	210b8 <main@@Base+0xae5c>
   1ff60:	ldr	r5, [sp, #44]	; 0x2c
   1ff64:	ldr	r8, [sp, #40]	; 0x28
   1ff68:	bne	1ff78 <main@@Base+0x9d1c>
   1ff6c:	ldrb	r0, [r7, #2]!
   1ff70:	cmp	r0, #32
   1ff74:	bhi	1ff88 <main@@Base+0x9d2c>
   1ff78:	mov	r0, r8
   1ff7c:	mov	r2, r5
   1ff80:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   1ff84:	mov	r7, r0
   1ff88:	ldr	sl, [sp, #36]	; 0x24
   1ff8c:	cmp	r4, r7
   1ff90:	beq	20154 <main@@Base+0x9ef8>
   1ff94:	mov	r6, #0
   1ff98:	cmp	r7, r5
   1ff9c:	str	r6, [fp, #-52]	; 0xffffffcc
   1ffa0:	str	r6, [fp, #-56]	; 0xffffffc8
   1ffa4:	str	r6, [fp, #-60]	; 0xffffffc4
   1ffa8:	str	r6, [sp, #56]	; 0x38
   1ffac:	beq	1fff4 <main@@Base+0x9d98>
   1ffb0:	sub	r0, fp, #56	; 0x38
   1ffb4:	ldr	r2, [sp, #44]	; 0x2c
   1ffb8:	mov	r1, r7
   1ffbc:	add	r3, sp, #56	; 0x38
   1ffc0:	str	r0, [sp]
   1ffc4:	ldr	r0, [sp, #40]	; 0x28
   1ffc8:	bl	382dc <flatcc_json_parser_integer@@Base>
   1ffcc:	cmp	r0, r7
   1ffd0:	beq	20004 <main@@Base+0x9da8>
   1ffd4:	mov	r1, r0
   1ffd8:	ldr	r0, [sp, #56]	; 0x38
   1ffdc:	cmp	r0, #0
   1ffe0:	beq	20014 <main@@Base+0x9db8>
   1ffe4:	ldr	r0, [sp, #40]	; 0x28
   1ffe8:	ldr	r2, [sp, #44]	; 0x2c
   1ffec:	mov	r3, #8
   1fff0:	b	2002c <main@@Base+0x9dd0>
   1fff4:	ldr	r4, [sp, #44]	; 0x2c
   1fff8:	cmp	r7, r4
   1fffc:	bne	20074 <main@@Base+0x9e18>
   20000:	b	2003c <main@@Base+0x9de0>
   20004:	mov	r4, r7
   20008:	cmp	r7, r4
   2000c:	bne	20074 <main@@Base+0x9e18>
   20010:	b	2003c <main@@Base+0x9de0>
   20014:	ldr	r0, [fp, #-52]	; 0xffffffcc
   20018:	cmp	r0, #0
   2001c:	beq	21018 <main@@Base+0xadbc>
   20020:	ldr	r0, [sp, #40]	; 0x28
   20024:	ldr	r2, [sp, #44]	; 0x2c
   20028:	mov	r3, #7
   2002c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   20030:	mov	r4, r0
   20034:	cmp	r7, r4
   20038:	bne	20074 <main@@Base+0x9e18>
   2003c:	sub	r0, fp, #60	; 0x3c
   20040:	ldr	r2, [sp, #44]	; 0x2c
   20044:	mov	r1, r7
   20048:	str	r0, [sp]
   2004c:	ldr	r0, [sp, #40]	; 0x28
   20050:	ldr	r3, [pc, #4092]	; 21054 <main@@Base+0xadf8>
   20054:	add	r3, pc, r3
   20058:	bl	25d9c <main@@Base+0xfb40>
   2005c:	cmp	r0, r7
   20060:	mov	r4, r0
   20064:	ldrne	r1, [sp, #44]	; 0x2c
   20068:	cmpne	r4, r1
   2006c:	beq	214a0 <main@@Base+0xb244>
   20070:	ldr	r6, [fp, #-60]	; 0xffffffc4
   20074:	ldr	r8, [sp, #40]	; 0x28
   20078:	cmp	r6, #0
   2007c:	bne	2008c <main@@Base+0x9e30>
   20080:	ldrb	r0, [r8, #8]
   20084:	tst	r0, #2
   20088:	beq	202f8 <main@@Base+0xa09c>
   2008c:	ldr	r0, [r8]
   20090:	mov	r1, #21
   20094:	mov	r2, #4
   20098:	mov	r3, #4
   2009c:	bl	327e4 <flatcc_builder_table_add@@Base>
   200a0:	cmp	r0, #0
   200a4:	beq	214a0 <main@@Base+0xb244>
   200a8:	str	r6, [r0]
   200ac:	b	202f4 <main@@Base+0xa098>
   200b0:	ldr	r5, [sp, #44]	; 0x2c
   200b4:	ldr	r8, [sp, #40]	; 0x28
   200b8:	bne	200c8 <main@@Base+0x9e6c>
   200bc:	ldrb	r0, [r7, #2]!
   200c0:	cmp	r0, #32
   200c4:	bhi	200d8 <main@@Base+0x9e7c>
   200c8:	mov	r0, r8
   200cc:	mov	r2, r5
   200d0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   200d4:	mov	r7, r0
   200d8:	ldr	sl, [sp, #36]	; 0x24
   200dc:	cmp	r4, r7
   200e0:	beq	20154 <main@@Base+0x9ef8>
   200e4:	mov	r6, #0
   200e8:	cmp	r7, r5
   200ec:	str	r6, [fp, #-52]	; 0xffffffcc
   200f0:	str	r6, [fp, #-56]	; 0xffffffc8
   200f4:	str	r6, [sp, #60]	; 0x3c
   200f8:	str	r6, [sp, #56]	; 0x38
   200fc:	str	r6, [fp, #-60]	; 0xffffffc4
   20100:	beq	20238 <main@@Base+0x9fdc>
   20104:	sub	r0, fp, #56	; 0x38
   20108:	ldr	r2, [sp, #44]	; 0x2c
   2010c:	mov	r1, r7
   20110:	sub	r3, fp, #60	; 0x3c
   20114:	str	r0, [sp]
   20118:	ldr	r0, [sp, #40]	; 0x28
   2011c:	bl	382dc <flatcc_json_parser_integer@@Base>
   20120:	cmp	r0, r7
   20124:	beq	2024c <main@@Base+0x9ff0>
   20128:	mov	r1, r0
   2012c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   20130:	cmp	r0, #0
   20134:	beq	20264 <main@@Base+0xa008>
   20138:	ldr	r0, [sp, #40]	; 0x28
   2013c:	ldr	r2, [sp, #44]	; 0x2c
   20140:	mov	r3, #8
   20144:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   20148:	mov	r4, r0
   2014c:	mov	r6, #0
   20150:	b	2023c <main@@Base+0x9fe0>
   20154:	mov	r0, r8
   20158:	mov	r1, r4
   2015c:	mov	r2, r5
   20160:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   20164:	mov	r4, r0
   20168:	sub	r0, r5, r4
   2016c:	cmp	r0, #2
   20170:	blt	201a4 <main@@Base+0x9f48>
   20174:	ldrb	r0, [r4]
   20178:	cmp	r0, #32
   2017c:	bls	20190 <main@@Base+0x9f34>
   20180:	mov	r2, r4
   20184:	cmp	r2, r5
   20188:	bne	201c0 <main@@Base+0x9f64>
   2018c:	b	213cc <main@@Base+0xb170>
   20190:	bne	201a4 <main@@Base+0x9f48>
   20194:	mov	r2, r4
   20198:	ldrb	r0, [r2, #1]!
   2019c:	cmp	r0, #32
   201a0:	bhi	201b8 <main@@Base+0x9f5c>
   201a4:	mov	r0, r8
   201a8:	mov	r1, r4
   201ac:	mov	r2, r5
   201b0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   201b4:	mov	r2, r0
   201b8:	cmp	r2, r5
   201bc:	beq	213cc <main@@Base+0xb170>
   201c0:	ldrb	r0, [r2]
   201c4:	cmp	r0, #44	; 0x2c
   201c8:	bne	213d4 <main@@Base+0xb178>
   201cc:	add	r1, r2, #1
   201d0:	sub	r0, r5, r1
   201d4:	cmp	r0, #2
   201d8:	blt	20208 <main@@Base+0x9fac>
   201dc:	ldrb	r0, [r1]
   201e0:	cmp	r0, #32
   201e4:	bls	201f8 <main@@Base+0x9f9c>
   201e8:	mov	r2, r1
   201ec:	cmp	r2, r5
   201f0:	bne	20220 <main@@Base+0x9fc4>
   201f4:	b	21400 <main@@Base+0xb1a4>
   201f8:	bne	20208 <main@@Base+0x9fac>
   201fc:	ldrb	r0, [r2, #2]!
   20200:	cmp	r0, #32
   20204:	bhi	20218 <main@@Base+0x9fbc>
   20208:	mov	r0, r8
   2020c:	mov	r2, r5
   20210:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   20214:	mov	r2, r0
   20218:	cmp	r2, r5
   2021c:	beq	21400 <main@@Base+0xb1a4>
   20220:	ldrb	r0, [r2]
   20224:	movw	lr, #29556	; 0x7374
   20228:	movt	lr, #29797	; 0x7465
   2022c:	cmp	r0, #125	; 0x7d
   20230:	bne	174d8 <main@@Base+0x127c>
   20234:	b	213dc <main@@Base+0xb180>
   20238:	ldr	r4, [sp, #44]	; 0x2c
   2023c:	mov	r9, #0
   20240:	cmp	r7, r4
   20244:	bne	202bc <main@@Base+0xa060>
   20248:	b	20280 <main@@Base+0xa024>
   2024c:	mov	r6, #0
   20250:	mov	r9, #0
   20254:	mov	r4, r7
   20258:	cmp	r7, r4
   2025c:	bne	202bc <main@@Base+0xa060>
   20260:	b	20280 <main@@Base+0xa024>
   20264:	ldr	r6, [fp, #-56]	; 0xffffffc8
   20268:	ldr	r9, [fp, #-52]	; 0xffffffcc
   2026c:	mov	r4, r1
   20270:	str	r9, [sp, #60]	; 0x3c
   20274:	str	r6, [sp, #56]	; 0x38
   20278:	cmp	r7, r4
   2027c:	bne	202bc <main@@Base+0xa060>
   20280:	add	r0, sp, #56	; 0x38
   20284:	ldr	r2, [sp, #44]	; 0x2c
   20288:	mov	r1, r7
   2028c:	str	r0, [sp]
   20290:	ldr	r0, [sp, #40]	; 0x28
   20294:	ldr	r3, [pc, #4052]	; 21270 <main@@Base+0xb014>
   20298:	add	r3, pc, r3
   2029c:	bl	25fa0 <main@@Base+0xfd44>
   202a0:	cmp	r0, r7
   202a4:	mov	r4, r0
   202a8:	ldrne	r1, [sp, #44]	; 0x2c
   202ac:	cmpne	r4, r1
   202b0:	beq	214a0 <main@@Base+0xb244>
   202b4:	ldr	r6, [sp, #56]	; 0x38
   202b8:	ldr	r9, [sp, #60]	; 0x3c
   202bc:	ldr	r8, [sp, #40]	; 0x28
   202c0:	orrs	r0, r6, r9
   202c4:	bne	202d4 <main@@Base+0xa078>
   202c8:	ldrb	r0, [r8, #8]
   202cc:	tst	r0, #2
   202d0:	beq	202f8 <main@@Base+0xa09c>
   202d4:	ldr	r0, [r8]
   202d8:	mov	r1, #23
   202dc:	mov	r2, #8
   202e0:	mov	r3, #8
   202e4:	bl	327e4 <flatcc_builder_table_add@@Base>
   202e8:	cmp	r0, #0
   202ec:	beq	214a0 <main@@Base+0xb244>
   202f0:	stm	r0, {r6, r9}
   202f4:	ldr	r8, [sp, #40]	; 0x28
   202f8:	ldr	r5, [sp, #44]	; 0x2c
   202fc:	b	1a584 <main@@Base+0x4328>
   20300:	bne	20310 <main@@Base+0xa0b4>
   20304:	ldrb	r0, [r4, #2]!
   20308:	cmp	r0, #32
   2030c:	bhi	20320 <main@@Base+0xa0c4>
   20310:	ldr	r0, [sp, #40]	; 0x28
   20314:	ldr	r2, [sp, #44]	; 0x2c
   20318:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2031c:	mov	r4, r0
   20320:	ldr	r6, [sp, #44]	; 0x2c
   20324:	cmp	r4, r6
   20328:	beq	2033c <main@@Base+0xa0e0>
   2032c:	ldrb	r0, [r4]
   20330:	cmp	r0, #93	; 0x5d
   20334:	beq	210d4 <main@@Base+0xae78>
   20338:	mov	r6, r4
   2033c:	mov	r0, #0
   20340:	mov	r1, #1
   20344:	strb	r0, [fp, #-60]	; 0xffffffc4
   20348:	ldr	r0, [sp, #40]	; 0x28
   2034c:	ldr	r0, [r0]
   20350:	bl	30274 <flatcc_builder_extend_vector@@Base>
   20354:	cmp	r0, #0
   20358:	beq	2149c <main@@Base+0xb240>
   2035c:	mov	r8, r0
   20360:	mov	r4, r6
   20364:	ldr	r5, [sp, #44]	; 0x2c
   20368:	mov	r6, #0
   2036c:	str	r6, [fp, #-52]	; 0xffffffcc
   20370:	str	r6, [fp, #-56]	; 0xffffffc8
   20374:	strb	r6, [fp, #-60]	; 0xffffffc4
   20378:	str	r6, [sp, #56]	; 0x38
   2037c:	cmp	r4, r5
   20380:	beq	203c8 <main@@Base+0xa16c>
   20384:	sub	r0, fp, #56	; 0x38
   20388:	mov	r1, r4
   2038c:	mov	r2, r5
   20390:	add	r3, sp, #56	; 0x38
   20394:	str	r0, [sp]
   20398:	ldr	r0, [sp, #40]	; 0x28
   2039c:	bl	382dc <flatcc_json_parser_integer@@Base>
   203a0:	cmp	r0, r4
   203a4:	beq	203d0 <main@@Base+0xa174>
   203a8:	mov	r1, r0
   203ac:	ldr	r0, [sp, #56]	; 0x38
   203b0:	cmp	r0, #0
   203b4:	beq	203d8 <main@@Base+0xa17c>
   203b8:	ldr	r7, [sp, #40]	; 0x28
   203bc:	ldr	r5, [sp, #44]	; 0x2c
   203c0:	mov	r3, #8
   203c4:	b	203f8 <main@@Base+0xa19c>
   203c8:	mov	r1, r5
   203cc:	b	20420 <main@@Base+0xa1c4>
   203d0:	mov	r1, r4
   203d4:	b	2041c <main@@Base+0xa1c0>
   203d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   203dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   203e0:	subs	r3, r0, #256	; 0x100
   203e4:	sbcs	r2, r2, #0
   203e8:	bcc	20414 <main@@Base+0xa1b8>
   203ec:	ldr	r7, [sp, #40]	; 0x28
   203f0:	ldr	r5, [sp, #44]	; 0x2c
   203f4:	mov	r3, #7
   203f8:	mov	r0, r7
   203fc:	mov	r2, r5
   20400:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   20404:	mov	r1, r0
   20408:	cmp	r4, r1
   2040c:	bne	20470 <main@@Base+0xa214>
   20410:	b	2042c <main@@Base+0xa1d0>
   20414:	mov	r6, r0
   20418:	strb	r0, [fp, #-60]	; 0xffffffc4
   2041c:	ldr	r5, [sp, #44]	; 0x2c
   20420:	ldr	r7, [sp, #40]	; 0x28
   20424:	cmp	r4, r1
   20428:	bne	20470 <main@@Base+0xa214>
   2042c:	sub	r0, fp, #60	; 0x3c
   20430:	mov	r1, r4
   20434:	mov	r2, r5
   20438:	str	r0, [sp]
   2043c:	mov	r0, r7
   20440:	ldr	r3, [pc, #4092]	; 21444 <main@@Base+0xb1e8>
   20444:	add	r3, pc, r3
   20448:	bl	235a4 <main@@Base+0xd348>
   2044c:	mov	r1, r0
   20450:	cmp	r0, r4
   20454:	beq	21494 <main@@Base+0xb238>
   20458:	ldr	r0, [sp, #44]	; 0x2c
   2045c:	cmp	r1, r0
   20460:	beq	21494 <main@@Base+0xb238>
   20464:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   20468:	ldr	r5, [sp, #44]	; 0x2c
   2046c:	ldr	r7, [sp, #40]	; 0x28
   20470:	sub	r0, r5, r1
   20474:	strb	r6, [r8]
   20478:	cmp	r0, #2
   2047c:	blt	204bc <main@@Base+0xa260>
   20480:	ldrb	r0, [r1]
   20484:	cmp	r0, #32
   20488:	bls	204a0 <main@@Base+0xa244>
   2048c:	ldr	r5, [sp, #44]	; 0x2c
   20490:	mov	r4, r1
   20494:	cmp	r4, r5
   20498:	bne	204d4 <main@@Base+0xa278>
   2049c:	b	210c4 <main@@Base+0xae68>
   204a0:	ldr	r5, [sp, #44]	; 0x2c
   204a4:	ldr	r7, [sp, #40]	; 0x28
   204a8:	bne	204bc <main@@Base+0xa260>
   204ac:	mov	r4, r1
   204b0:	ldrb	r0, [r4, #1]!
   204b4:	cmp	r0, #32
   204b8:	bhi	204cc <main@@Base+0xa270>
   204bc:	mov	r0, r7
   204c0:	mov	r2, r5
   204c4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   204c8:	mov	r4, r0
   204cc:	cmp	r4, r5
   204d0:	beq	210c4 <main@@Base+0xae68>
   204d4:	ldrb	r0, [r4]
   204d8:	cmp	r0, #44	; 0x2c
   204dc:	bne	210cc <main@@Base+0xae70>
   204e0:	ldr	r5, [sp, #44]	; 0x2c
   204e4:	add	r1, r4, #1
   204e8:	sub	r0, r5, r1
   204ec:	cmp	r0, #2
   204f0:	ldr	r0, [sp, #40]	; 0x28
   204f4:	blt	20534 <main@@Base+0xa2d8>
   204f8:	ldrb	r0, [r1]
   204fc:	cmp	r0, #32
   20500:	bls	2051c <main@@Base+0xa2c0>
   20504:	ldr	r5, [sp, #44]	; 0x2c
   20508:	mov	r4, r1
   2050c:	cmp	r4, r5
   20510:	bne	20548 <main@@Base+0xa2ec>
   20514:	b	2112c <main@@Base+0xaed0>
   20518:	andeq	pc, r3, ip, lsr ip	; <UNPREDICTABLE>
   2051c:	ldr	r5, [sp, #44]	; 0x2c
   20520:	ldr	r0, [sp, #40]	; 0x28
   20524:	bne	20534 <main@@Base+0xa2d8>
   20528:	ldrb	r2, [r4, #2]!
   2052c:	cmp	r2, #32
   20530:	bhi	20540 <main@@Base+0xa2e4>
   20534:	mov	r2, r5
   20538:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2053c:	mov	r4, r0
   20540:	cmp	r4, r5
   20544:	beq	2112c <main@@Base+0xaed0>
   20548:	ldrb	r0, [r4]
   2054c:	cmp	r0, #93	; 0x5d
   20550:	beq	210d4 <main@@Base+0xae78>
   20554:	mov	r0, #0
   20558:	mov	r1, #1
   2055c:	strb	r0, [fp, #-60]	; 0xffffffc4
   20560:	ldr	r0, [sp, #40]	; 0x28
   20564:	ldr	r0, [r0]
   20568:	bl	30274 <flatcc_builder_extend_vector@@Base>
   2056c:	mov	r8, r0
   20570:	cmp	r0, #0
   20574:	bne	20364 <main@@Base+0xa108>
   20578:	b	214a0 <main@@Base+0xb244>
   2057c:	ldr	r5, [sp, #44]	; 0x2c
   20580:	ldr	r8, [sp, #40]	; 0x28
   20584:	ldr	sl, [sp, #36]	; 0x24
   20588:	b	1c734 <main@@Base+0x64d8>
   2058c:	bne	2059c <main@@Base+0xa340>
   20590:	ldrb	r0, [r4, #2]!
   20594:	cmp	r0, #32
   20598:	bhi	205ac <main@@Base+0xa350>
   2059c:	ldr	r0, [sp, #40]	; 0x28
   205a0:	ldr	r2, [sp, #44]	; 0x2c
   205a4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   205a8:	mov	r4, r0
   205ac:	ldr	r2, [sp, #44]	; 0x2c
   205b0:	cmp	r4, r2
   205b4:	beq	20604 <main@@Base+0xa3a8>
   205b8:	ldrb	r0, [r4]
   205bc:	cmp	r0, #125	; 0x7d
   205c0:	bne	20600 <main@@Base+0xa3a4>
   205c4:	ldr	r0, [sp, #44]	; 0x2c
   205c8:	ldr	r8, [sp, #40]	; 0x28
   205cc:	add	r1, r4, #1
   205d0:	sub	r0, r0, r1
   205d4:	cmp	r0, #2
   205d8:	blt	213bc <main@@Base+0xb160>
   205dc:	ldrb	r0, [r1]
   205e0:	cmp	r0, #32
   205e4:	bhi	21264 <main@@Base+0xb008>
   205e8:	ldr	r8, [sp, #40]	; 0x28
   205ec:	bne	213bc <main@@Base+0xb160>
   205f0:	ldrb	r0, [r4, #2]!
   205f4:	cmp	r0, #32
   205f8:	bhi	1e000 <main@@Base+0x7da4>
   205fc:	b	213bc <main@@Base+0xb160>
   20600:	mov	r2, r4
   20604:	ldr	r5, [sp, #44]	; 0x2c
   20608:	cmp	r2, r5
   2060c:	mov	r9, r5
   20610:	beq	2066c <main@@Base+0xa410>
   20614:	ldrb	r0, [r2]
   20618:	cmp	r0, #46	; 0x2e
   2061c:	beq	20638 <main@@Base+0xa3dc>
   20620:	cmp	r0, #34	; 0x22
   20624:	bne	20658 <main@@Base+0xa3fc>
   20628:	ldr	r0, [sp, #32]
   2062c:	mov	r1, #0
   20630:	add	r9, r2, #1
   20634:	b	20664 <main@@Base+0xa408>
   20638:	ldr	r5, [sp, #44]	; 0x2c
   2063c:	ldr	r0, [sp, #40]	; 0x28
   20640:	mov	r1, r2
   20644:	mov	r3, #5
   20648:	mov	r2, r5
   2064c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   20650:	mov	r9, r0
   20654:	b	2066c <main@@Base+0xa410>
   20658:	ldr	r0, [sp, #32]
   2065c:	mov	r1, #1
   20660:	mov	r9, r2
   20664:	str	r1, [r0]
   20668:	ldr	r5, [sp, #44]	; 0x2c
   2066c:	sub	lr, r5, r9
   20670:	mov	r1, #8
   20674:	cmp	lr, #8
   20678:	movcc	r1, lr
   2067c:	sub	r2, r1, #1
   20680:	cmp	r2, #7
   20684:	bhi	20df8 <main@@Base+0xab9c>
   20688:	add	r0, pc, #36	; 0x24
   2068c:	mov	r1, #0
   20690:	mov	ip, #0
   20694:	mov	r8, #0
   20698:	mov	r7, #0
   2069c:	mov	r3, #0
   206a0:	mov	r6, #0
   206a4:	mov	r4, #0
   206a8:	ldr	r5, [r0, r2, lsl #2]
   206ac:	mov	r2, #0
   206b0:	add	pc, r0, r5
   206b4:	andeq	r0, r0, r8, rrx
   206b8:	andeq	r0, r0, r0, rrx
   206bc:	andeq	r0, r0, r8, asr r0
   206c0:	andeq	r0, r0, r0, asr r0
   206c4:	andeq	r0, r0, r4, asr #32
   206c8:	andeq	r0, r0, r8, lsr r0
   206cc:	andeq	r0, r0, r8, lsr #32
   206d0:	andeq	r0, r0, r4, lsr #32
   206d4:	andeq	pc, r3, r0, lsr #19
   206d8:	ldrb	ip, [r9, #7]
   206dc:	ldrb	r0, [r9, #6]
   206e0:	mov	r8, r1
   206e4:	orr	r0, ip, r0, lsl #8
   206e8:	mov	r1, r0
   206ec:	ldrb	r0, [r9, #5]
   206f0:	mov	r7, r8
   206f4:	orr	r1, r1, r0, lsl #16
   206f8:	ldrb	r0, [r9, #4]
   206fc:	mov	r3, r7
   20700:	orr	r1, r1, r0, lsl #24
   20704:	ldrb	r0, [r9, #3]
   20708:	orr	r6, r0, r3
   2070c:	ldrb	r0, [r9, #2]
   20710:	orr	r4, r6, r0, lsl #8
   20714:	ldrb	r0, [r9, #1]
   20718:	orr	r2, r4, r0, lsl #16
   2071c:	ldrb	r0, [r9]
   20720:	orr	r2, r2, r0, lsl #24
   20724:	movw	r0, #65535	; 0xffff
   20728:	movt	r0, #26979	; 0x6963
   2072c:	cmp	r2, r0
   20730:	bhi	20798 <main@@Base+0xa53c>
   20734:	movw	r0, #30062	; 0x756e
   20738:	and	r1, r1, #-16777216	; 0xff000000
   2073c:	movt	r0, #25455	; 0x636f
   20740:	eor	r1, r1, #1946157056	; 0x74000000
   20744:	eor	r0, r2, r0
   20748:	orrs	r0, r1, r0
   2074c:	bne	20df8 <main@@Base+0xab9c>
   20750:	cmp	lr, #6
   20754:	mov	r7, r9
   20758:	blt	20a9c <main@@Base+0xa840>
   2075c:	ldr	r2, [sp, #32]
   20760:	mov	r1, r9
   20764:	ldrb	r0, [r1, #5]!
   20768:	ldr	r2, [r2]
   2076c:	cmp	r2, #0
   20770:	beq	20850 <main@@Base+0xa5f4>
   20774:	cmp	r0, #33	; 0x21
   20778:	bcc	20788 <main@@Base+0xa52c>
   2077c:	cmp	r0, #58	; 0x3a
   20780:	mov	r7, r9
   20784:	bne	20a9c <main@@Base+0xa840>
   20788:	ldr	r0, [sp, #32]
   2078c:	mov	r2, #0
   20790:	str	r2, [r0]
   20794:	b	20860 <main@@Base+0xa604>
   20798:	movw	r1, #27648	; 0x6c00
   2079c:	bic	r0, r2, #255	; 0xff
   207a0:	movt	r1, #30305	; 0x7661
   207a4:	teq	r0, r1
   207a8:	bne	207f4 <main@@Base+0xa598>
   207ac:	cmp	lr, #4
   207b0:	mov	r7, r9
   207b4:	blt	20c10 <main@@Base+0xa9b4>
   207b8:	ldr	r2, [sp, #32]
   207bc:	mov	r1, r9
   207c0:	ldrb	r0, [r1, #3]!
   207c4:	ldr	r2, [r2]
   207c8:	cmp	r2, #0
   207cc:	beq	20884 <main@@Base+0xa628>
   207d0:	cmp	r0, #33	; 0x21
   207d4:	bcc	207e4 <main@@Base+0xa588>
   207d8:	cmp	r0, #58	; 0x3a
   207dc:	mov	r7, r9
   207e0:	bne	20c10 <main@@Base+0xa9b4>
   207e4:	ldr	r0, [sp, #32]
   207e8:	mov	r2, #0
   207ec:	str	r2, [r0]
   207f0:	b	20894 <main@@Base+0xa638>
   207f4:	movw	r0, #0
   207f8:	bfc	r2, #0, #16
   207fc:	movt	r0, #26980	; 0x6964
   20800:	teq	r2, r0
   20804:	bne	20df8 <main@@Base+0xab9c>
   20808:	cmp	lr, #3
   2080c:	mov	r1, r9
   20810:	blt	20da4 <main@@Base+0xab48>
   20814:	ldr	r1, [sp, #32]
   20818:	mov	r2, r9
   2081c:	ldrb	r0, [r2, #2]!
   20820:	ldr	r1, [r1]
   20824:	cmp	r1, #0
   20828:	beq	208b8 <main@@Base+0xa65c>
   2082c:	cmp	r0, #33	; 0x21
   20830:	bcc	20840 <main@@Base+0xa5e4>
   20834:	cmp	r0, #58	; 0x3a
   20838:	mov	r1, r9
   2083c:	bne	20da4 <main@@Base+0xab48>
   20840:	ldr	r0, [sp, #32]
   20844:	mov	r1, #0
   20848:	str	r1, [r0]
   2084c:	b	208c8 <main@@Base+0xa66c>
   20850:	cmp	r0, #34	; 0x22
   20854:	mov	r7, r9
   20858:	bne	20a9c <main@@Base+0xa840>
   2085c:	add	r1, r9, #6
   20860:	ldr	r0, [sp, #44]	; 0x2c
   20864:	sub	r0, r0, r1
   20868:	cmp	r0, #2
   2086c:	blt	20900 <main@@Base+0xa6a4>
   20870:	ldrb	r0, [r1]
   20874:	cmp	r0, #32
   20878:	bls	208ec <main@@Base+0xa690>
   2087c:	mov	r7, r1
   20880:	b	20910 <main@@Base+0xa6b4>
   20884:	cmp	r0, #34	; 0x22
   20888:	mov	r7, r9
   2088c:	bne	20c10 <main@@Base+0xa9b4>
   20890:	add	r1, r9, #4
   20894:	ldr	r0, [sp, #44]	; 0x2c
   20898:	sub	r0, r0, r1
   2089c:	cmp	r0, #2
   208a0:	blt	20984 <main@@Base+0xa728>
   208a4:	ldrb	r0, [r1]
   208a8:	cmp	r0, #32
   208ac:	bls	20970 <main@@Base+0xa714>
   208b0:	mov	r7, r1
   208b4:	b	20994 <main@@Base+0xa738>
   208b8:	cmp	r0, #34	; 0x22
   208bc:	mov	r1, r9
   208c0:	bne	20da4 <main@@Base+0xab48>
   208c4:	add	r2, r9, #3
   208c8:	ldr	r0, [sp, #44]	; 0x2c
   208cc:	sub	r0, r0, r2
   208d0:	cmp	r0, #2
   208d4:	blt	20a08 <main@@Base+0xa7ac>
   208d8:	ldrb	r0, [r2]
   208dc:	cmp	r0, #32
   208e0:	bls	209f4 <main@@Base+0xa798>
   208e4:	mov	r1, r2
   208e8:	b	20a1c <main@@Base+0xa7c0>
   208ec:	bne	20900 <main@@Base+0xa6a4>
   208f0:	mov	r7, r1
   208f4:	ldrb	r0, [r7, #1]!
   208f8:	cmp	r0, #32
   208fc:	bhi	20910 <main@@Base+0xa6b4>
   20900:	ldr	r0, [sp, #40]	; 0x28
   20904:	ldr	r2, [sp, #44]	; 0x2c
   20908:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2090c:	mov	r7, r0
   20910:	ldr	r0, [sp, #44]	; 0x2c
   20914:	cmp	r7, r0
   20918:	beq	20958 <main@@Base+0xa6fc>
   2091c:	ldrb	r0, [r7]
   20920:	cmp	r0, #58	; 0x3a
   20924:	bne	20958 <main@@Base+0xa6fc>
   20928:	ldr	r0, [sp, #44]	; 0x2c
   2092c:	add	r1, r7, #1
   20930:	sub	r0, r0, r1
   20934:	cmp	r0, #2
   20938:	blt	20a8c <main@@Base+0xa830>
   2093c:	ldrb	r0, [r1]
   20940:	cmp	r0, #32
   20944:	bls	20a7c <main@@Base+0xa820>
   20948:	mov	r7, r1
   2094c:	cmp	r9, r7
   20950:	bne	20aa4 <main@@Base+0xa848>
   20954:	b	20df8 <main@@Base+0xab9c>
   20958:	ldr	r0, [sp, #40]	; 0x28
   2095c:	ldr	r2, [sp, #44]	; 0x2c
   20960:	mov	r1, r7
   20964:	mov	r3, #4
   20968:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2096c:	b	20a98 <main@@Base+0xa83c>
   20970:	bne	20984 <main@@Base+0xa728>
   20974:	mov	r7, r1
   20978:	ldrb	r0, [r7, #1]!
   2097c:	cmp	r0, #32
   20980:	bhi	20994 <main@@Base+0xa738>
   20984:	ldr	r0, [sp, #40]	; 0x28
   20988:	ldr	r2, [sp, #44]	; 0x2c
   2098c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   20990:	mov	r7, r0
   20994:	ldr	r0, [sp, #44]	; 0x2c
   20998:	cmp	r7, r0
   2099c:	beq	209dc <main@@Base+0xa780>
   209a0:	ldrb	r0, [r7]
   209a4:	cmp	r0, #58	; 0x3a
   209a8:	bne	209dc <main@@Base+0xa780>
   209ac:	ldr	r0, [sp, #44]	; 0x2c
   209b0:	add	r1, r7, #1
   209b4:	sub	r0, r0, r1
   209b8:	cmp	r0, #2
   209bc:	blt	20c00 <main@@Base+0xa9a4>
   209c0:	ldrb	r0, [r1]
   209c4:	cmp	r0, #32
   209c8:	bls	20bf0 <main@@Base+0xa994>
   209cc:	mov	r7, r1
   209d0:	cmp	r9, r7
   209d4:	bne	20c18 <main@@Base+0xa9bc>
   209d8:	b	20df8 <main@@Base+0xab9c>
   209dc:	ldr	r0, [sp, #40]	; 0x28
   209e0:	ldr	r2, [sp, #44]	; 0x2c
   209e4:	mov	r1, r7
   209e8:	mov	r3, #4
   209ec:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   209f0:	b	20c0c <main@@Base+0xa9b0>
   209f4:	bne	20a08 <main@@Base+0xa7ac>
   209f8:	mov	r1, r2
   209fc:	ldrb	r0, [r1, #1]!
   20a00:	cmp	r0, #32
   20a04:	bhi	20a1c <main@@Base+0xa7c0>
   20a08:	mov	r1, r2
   20a0c:	ldr	r0, [sp, #40]	; 0x28
   20a10:	ldr	r2, [sp, #44]	; 0x2c
   20a14:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   20a18:	mov	r1, r0
   20a1c:	ldr	r0, [sp, #44]	; 0x2c
   20a20:	cmp	r1, r0
   20a24:	beq	20a64 <main@@Base+0xa808>
   20a28:	ldrb	r0, [r1]
   20a2c:	cmp	r0, #58	; 0x3a
   20a30:	bne	20a64 <main@@Base+0xa808>
   20a34:	ldr	r0, [sp, #44]	; 0x2c
   20a38:	add	r2, r1, #1
   20a3c:	sub	r0, r0, r2
   20a40:	cmp	r0, #2
   20a44:	blt	20d90 <main@@Base+0xab34>
   20a48:	ldrb	r0, [r2]
   20a4c:	cmp	r0, #32
   20a50:	bls	20d80 <main@@Base+0xab24>
   20a54:	mov	r1, r2
   20a58:	cmp	r9, r1
   20a5c:	bne	20dac <main@@Base+0xab50>
   20a60:	b	20df8 <main@@Base+0xab9c>
   20a64:	ldr	r0, [sp, #40]	; 0x28
   20a68:	ldr	r2, [sp, #44]	; 0x2c
   20a6c:	mov	r3, #4
   20a70:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   20a74:	b	20da0 <main@@Base+0xab44>
   20a78:	andeq	pc, r3, r4, asr r6	; <UNPREDICTABLE>
   20a7c:	bne	20a8c <main@@Base+0xa830>
   20a80:	ldrb	r0, [r7, #2]!
   20a84:	cmp	r0, #32
   20a88:	bhi	20a9c <main@@Base+0xa840>
   20a8c:	ldr	r0, [sp, #40]	; 0x28
   20a90:	ldr	r2, [sp, #44]	; 0x2c
   20a94:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   20a98:	mov	r7, r0
   20a9c:	cmp	r9, r7
   20aa0:	beq	20df8 <main@@Base+0xab9c>
   20aa4:	ldr	r0, [sp, #44]	; 0x2c
   20aa8:	mov	r6, #0
   20aac:	str	r6, [fp, #-52]	; 0xffffffcc
   20ab0:	str	r6, [fp, #-56]	; 0xffffffc8
   20ab4:	strh	r6, [fp, #-60]	; 0xffffffc4
   20ab8:	str	r6, [sp, #56]	; 0x38
   20abc:	cmp	r7, r0
   20ac0:	beq	20b0c <main@@Base+0xa8b0>
   20ac4:	sub	r0, fp, #56	; 0x38
   20ac8:	ldr	r2, [sp, #44]	; 0x2c
   20acc:	mov	r1, r7
   20ad0:	add	r3, sp, #56	; 0x38
   20ad4:	str	r0, [sp]
   20ad8:	ldr	r0, [sp, #40]	; 0x28
   20adc:	bl	382dc <flatcc_json_parser_integer@@Base>
   20ae0:	cmp	r0, r7
   20ae4:	beq	20b1c <main@@Base+0xa8c0>
   20ae8:	mov	r4, r0
   20aec:	ldr	r0, [sp, #56]	; 0x38
   20af0:	cmp	r0, #0
   20af4:	beq	20b2c <main@@Base+0xa8d0>
   20af8:	ldr	r0, [sp, #40]	; 0x28
   20afc:	ldr	r2, [sp, #44]	; 0x2c
   20b00:	mov	r1, r4
   20b04:	mov	r3, #8
   20b08:	b	20b50 <main@@Base+0xa8f4>
   20b0c:	ldr	r4, [sp, #44]	; 0x2c
   20b10:	cmp	r7, r4
   20b14:	bne	20b98 <main@@Base+0xa93c>
   20b18:	b	20b60 <main@@Base+0xa904>
   20b1c:	mov	r4, r7
   20b20:	cmp	r7, r4
   20b24:	bne	20b98 <main@@Base+0xa93c>
   20b28:	b	20b60 <main@@Base+0xa904>
   20b2c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20b30:	ldr	r1, [fp, #-52]	; 0xffffffcc
   20b34:	subs	r2, r0, #65536	; 0x10000
   20b38:	sbcs	r1, r1, #0
   20b3c:	bcc	20bdc <main@@Base+0xa980>
   20b40:	ldr	r0, [sp, #40]	; 0x28
   20b44:	ldr	r2, [sp, #44]	; 0x2c
   20b48:	mov	r1, r4
   20b4c:	mov	r3, #7
   20b50:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   20b54:	mov	r4, r0
   20b58:	cmp	r7, r4
   20b5c:	bne	20b98 <main@@Base+0xa93c>
   20b60:	sub	r0, fp, #60	; 0x3c
   20b64:	ldr	r2, [sp, #44]	; 0x2c
   20b68:	mov	r1, r7
   20b6c:	str	r0, [sp]
   20b70:	ldr	r0, [sp, #40]	; 0x28
   20b74:	ldr	r3, [pc, #2352]	; 214ac <main@@Base+0xb250>
   20b78:	add	r3, pc, r3
   20b7c:	bl	2da6c <main@@Base+0x17810>
   20b80:	cmp	r0, r7
   20b84:	mov	r4, r0
   20b88:	ldrne	r0, [sp, #44]	; 0x2c
   20b8c:	cmpne	r4, r0
   20b90:	beq	20ef0 <main@@Base+0xac94>
   20b94:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   20b98:	movw	r0, #65535	; 0xffff
   20b9c:	tst	r6, r0
   20ba0:	bne	20bb4 <main@@Base+0xa958>
   20ba4:	ldr	r0, [sp, #40]	; 0x28
   20ba8:	ldrb	r0, [r0, #8]
   20bac:	tst	r0, #2
   20bb0:	beq	20dec <main@@Base+0xab90>
   20bb4:	ldr	r0, [sp, #40]	; 0x28
   20bb8:	mov	r1, #2
   20bbc:	mov	r2, #2
   20bc0:	mov	r3, #2
   20bc4:	ldr	r0, [r0]
   20bc8:	bl	327e4 <flatcc_builder_table_add@@Base>
   20bcc:	cmp	r0, #0
   20bd0:	beq	20ef0 <main@@Base+0xac94>
   20bd4:	strh	r6, [r0]
   20bd8:	b	20dec <main@@Base+0xab90>
   20bdc:	mov	r6, r0
   20be0:	strh	r0, [fp, #-60]	; 0xffffffc4
   20be4:	cmp	r7, r4
   20be8:	bne	20b98 <main@@Base+0xa93c>
   20bec:	b	20b60 <main@@Base+0xa904>
   20bf0:	bne	20c00 <main@@Base+0xa9a4>
   20bf4:	ldrb	r0, [r7, #2]!
   20bf8:	cmp	r0, #32
   20bfc:	bhi	20c10 <main@@Base+0xa9b4>
   20c00:	ldr	r0, [sp, #40]	; 0x28
   20c04:	ldr	r2, [sp, #44]	; 0x2c
   20c08:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   20c0c:	mov	r7, r0
   20c10:	cmp	r9, r7
   20c14:	beq	20df8 <main@@Base+0xab9c>
   20c18:	ldr	r0, [sp, #44]	; 0x2c
   20c1c:	mov	r6, #0
   20c20:	str	r6, [fp, #-52]	; 0xffffffcc
   20c24:	str	r6, [fp, #-56]	; 0xffffffc8
   20c28:	str	r6, [sp, #60]	; 0x3c
   20c2c:	str	r6, [sp, #56]	; 0x38
   20c30:	str	r6, [fp, #-60]	; 0xffffffc4
   20c34:	cmp	r7, r0
   20c38:	beq	20c94 <main@@Base+0xaa38>
   20c3c:	sub	r0, fp, #56	; 0x38
   20c40:	ldr	r2, [sp, #44]	; 0x2c
   20c44:	mov	r1, r7
   20c48:	sub	r3, fp, #60	; 0x3c
   20c4c:	str	r0, [sp]
   20c50:	ldr	r0, [sp, #40]	; 0x28
   20c54:	bl	382dc <flatcc_json_parser_integer@@Base>
   20c58:	cmp	r0, r7
   20c5c:	beq	20c9c <main@@Base+0xaa40>
   20c60:	sub	r9, fp, #60	; 0x3c
   20c64:	mov	r4, r0
   20c68:	ldm	r9, {r0, r6, r9}
   20c6c:	cmp	r0, #0
   20c70:	beq	20cb4 <main@@Base+0xaa58>
   20c74:	subs	r0, r6, #1
   20c78:	sbcs	r0, r9, #-2147483648	; 0x80000000
   20c7c:	bcc	20ce8 <main@@Base+0xaa8c>
   20c80:	ldr	r0, [sp, #40]	; 0x28
   20c84:	ldr	r2, [sp, #44]	; 0x2c
   20c88:	mov	r1, r4
   20c8c:	mov	r3, #8
   20c90:	b	20ccc <main@@Base+0xaa70>
   20c94:	ldr	r4, [sp, #44]	; 0x2c
   20c98:	b	20cd8 <main@@Base+0xaa7c>
   20c9c:	mov	r6, #0
   20ca0:	mov	r9, #0
   20ca4:	mov	r4, r7
   20ca8:	cmp	r7, r4
   20cac:	bne	20d3c <main@@Base+0xaae0>
   20cb0:	b	20d00 <main@@Base+0xaaa4>
   20cb4:	cmn	r9, #1
   20cb8:	bgt	20cf0 <main@@Base+0xaa94>
   20cbc:	ldr	r0, [sp, #40]	; 0x28
   20cc0:	ldr	r2, [sp, #44]	; 0x2c
   20cc4:	mov	r1, r4
   20cc8:	mov	r3, #7
   20ccc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   20cd0:	mov	r4, r0
   20cd4:	mov	r6, #0
   20cd8:	mov	r9, #0
   20cdc:	cmp	r7, r4
   20ce0:	bne	20d3c <main@@Base+0xaae0>
   20ce4:	b	20d00 <main@@Base+0xaaa4>
   20ce8:	rsbs	r6, r6, #0
   20cec:	rsc	r9, r9, #0
   20cf0:	str	r6, [sp, #56]	; 0x38
   20cf4:	str	r9, [sp, #60]	; 0x3c
   20cf8:	cmp	r7, r4
   20cfc:	bne	20d3c <main@@Base+0xaae0>
   20d00:	add	r0, sp, #56	; 0x38
   20d04:	ldr	r2, [sp, #44]	; 0x2c
   20d08:	mov	r1, r7
   20d0c:	str	r0, [sp]
   20d10:	ldr	r0, [sp, #40]	; 0x28
   20d14:	ldr	r3, [pc, #1940]	; 214b0 <main@@Base+0xb254>
   20d18:	add	r3, pc, r3
   20d1c:	bl	25b80 <main@@Base+0xf924>
   20d20:	cmp	r0, r7
   20d24:	mov	r4, r0
   20d28:	ldrne	r0, [sp, #44]	; 0x2c
   20d2c:	cmpne	r4, r0
   20d30:	beq	20ef0 <main@@Base+0xac94>
   20d34:	ldr	r6, [sp, #56]	; 0x38
   20d38:	ldr	r9, [sp, #60]	; 0x3c
   20d3c:	orrs	r0, r6, r9
   20d40:	bne	20d54 <main@@Base+0xaaf8>
   20d44:	ldr	r0, [sp, #40]	; 0x28
   20d48:	ldrb	r0, [r0, #8]
   20d4c:	tst	r0, #2
   20d50:	beq	20dec <main@@Base+0xab90>
   20d54:	ldr	r0, [sp, #40]	; 0x28
   20d58:	mov	r1, #1
   20d5c:	mov	r2, #8
   20d60:	mov	r3, #8
   20d64:	ldr	r0, [r0]
   20d68:	bl	327e4 <flatcc_builder_table_add@@Base>
   20d6c:	cmp	r0, #0
   20d70:	beq	20ef0 <main@@Base+0xac94>
   20d74:	stm	r0, {r6, r9}
   20d78:	b	20dec <main@@Base+0xab90>
   20d7c:	andeq	pc, r3, ip, lsr #7
   20d80:	bne	20d90 <main@@Base+0xab34>
   20d84:	ldrb	r0, [r1, #2]!
   20d88:	cmp	r0, #32
   20d8c:	bhi	20da4 <main@@Base+0xab48>
   20d90:	mov	r1, r2
   20d94:	ldr	r0, [sp, #40]	; 0x28
   20d98:	ldr	r2, [sp, #44]	; 0x2c
   20d9c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   20da0:	mov	r1, r0
   20da4:	cmp	r9, r1
   20da8:	beq	20df8 <main@@Base+0xab9c>
   20dac:	ldr	r0, [sp, #40]	; 0x28
   20db0:	ldr	r2, [sp, #44]	; 0x2c
   20db4:	add	r3, sp, #64	; 0x40
   20db8:	bl	38888 <flatcc_json_parser_build_string@@Base>
   20dbc:	mov	r4, r0
   20dc0:	ldr	r0, [sp, #64]	; 0x40
   20dc4:	cmp	r0, #0
   20dc8:	beq	20ef0 <main@@Base+0xac94>
   20dcc:	ldr	r0, [sp, #40]	; 0x28
   20dd0:	mov	r1, #0
   20dd4:	ldr	r0, [r0]
   20dd8:	bl	32630 <flatcc_builder_table_add_offset@@Base>
   20ddc:	cmp	r0, #0
   20de0:	beq	20ef0 <main@@Base+0xac94>
   20de4:	ldr	r1, [sp, #64]	; 0x40
   20de8:	str	r1, [r0]
   20dec:	ldr	r5, [sp, #44]	; 0x2c
   20df0:	ldr	r8, [sp, #40]	; 0x28
   20df4:	b	20e14 <main@@Base+0xabb8>
   20df8:	ldr	r8, [sp, #40]	; 0x28
   20dfc:	ldr	r5, [sp, #44]	; 0x2c
   20e00:	mov	r1, r9
   20e04:	mov	r0, r8
   20e08:	mov	r2, r5
   20e0c:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   20e10:	mov	r4, r0
   20e14:	sub	r0, r5, r4
   20e18:	cmp	r0, #2
   20e1c:	blt	20e50 <main@@Base+0xabf4>
   20e20:	ldrb	r0, [r4]
   20e24:	cmp	r0, #32
   20e28:	bls	20e3c <main@@Base+0xabe0>
   20e2c:	mov	r2, r4
   20e30:	cmp	r2, r5
   20e34:	bne	20e6c <main@@Base+0xac10>
   20e38:	b	211f4 <main@@Base+0xaf98>
   20e3c:	bne	20e50 <main@@Base+0xabf4>
   20e40:	mov	r2, r4
   20e44:	ldrb	r0, [r2, #1]!
   20e48:	cmp	r0, #32
   20e4c:	bhi	20e64 <main@@Base+0xac08>
   20e50:	mov	r0, r8
   20e54:	mov	r1, r4
   20e58:	mov	r2, r5
   20e5c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   20e60:	mov	r2, r0
   20e64:	cmp	r2, r5
   20e68:	beq	211f4 <main@@Base+0xaf98>
   20e6c:	ldrb	r0, [r2]
   20e70:	cmp	r0, #44	; 0x2c
   20e74:	bne	21238 <main@@Base+0xafdc>
   20e78:	add	r1, r2, #1
   20e7c:	sub	r0, r5, r1
   20e80:	cmp	r0, #2
   20e84:	blt	20ec0 <main@@Base+0xac64>
   20e88:	ldrb	r0, [r1]
   20e8c:	cmp	r0, #32
   20e90:	bls	20ea8 <main@@Base+0xac4c>
   20e94:	ldr	r5, [sp, #44]	; 0x2c
   20e98:	mov	r2, r1
   20e9c:	cmp	r2, r5
   20ea0:	bne	20ed8 <main@@Base+0xac7c>
   20ea4:	b	212a4 <main@@Base+0xb048>
   20ea8:	ldr	r5, [sp, #44]	; 0x2c
   20eac:	ldr	r8, [sp, #40]	; 0x28
   20eb0:	bne	20ec0 <main@@Base+0xac64>
   20eb4:	ldrb	r0, [r2, #2]!
   20eb8:	cmp	r0, #32
   20ebc:	bhi	20ed0 <main@@Base+0xac74>
   20ec0:	mov	r0, r8
   20ec4:	mov	r2, r5
   20ec8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   20ecc:	mov	r2, r0
   20ed0:	cmp	r2, r5
   20ed4:	beq	212a4 <main@@Base+0xb048>
   20ed8:	ldrb	r0, [r2]
   20edc:	cmp	r0, #125	; 0x7d
   20ee0:	bne	20608 <main@@Base+0xa3ac>
   20ee4:	add	r1, r2, #1
   20ee8:	sub	r0, r5, r1
   20eec:	b	2124c <main@@Base+0xaff0>
   20ef0:	ldr	r5, [sp, #44]	; 0x2c
   20ef4:	ldr	r8, [sp, #40]	; 0x28
   20ef8:	ldr	sl, [sp, #36]	; 0x24
   20efc:	mov	r0, r8
   20f00:	mov	r1, r4
   20f04:	mov	r2, r5
   20f08:	mov	r3, #33	; 0x21
   20f0c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   20f10:	mov	r4, r0
   20f14:	ldr	r0, [sp, #52]	; 0x34
   20f18:	cmp	r0, #0
   20f1c:	beq	17324 <main@@Base+0x10c8>
   20f20:	ldr	r0, [r8]
   20f24:	mov	r1, #14
   20f28:	b	19d64 <main@@Base+0x3b08>
   20f2c:	ldr	r5, [sp, #44]	; 0x2c
   20f30:	ldr	r8, [sp, #40]	; 0x28
   20f34:	ldr	sl, [sp, #36]	; 0x24
   20f38:	bne	20f4c <main@@Base+0xacf0>
   20f3c:	ldrb	r0, [r2, #2]!
   20f40:	mov	r4, r2
   20f44:	cmp	r0, #32
   20f48:	bhi	1c818 <main@@Base+0x65bc>
   20f4c:	mov	r0, r8
   20f50:	mov	r2, r5
   20f54:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   20f58:	b	1c814 <main@@Base+0x65b8>
   20f5c:	ldr	r5, [sp, #44]	; 0x2c
   20f60:	ldr	r8, [sp, #40]	; 0x28
   20f64:	ldr	sl, [sp, #36]	; 0x24
   20f68:	bne	20f78 <main@@Base+0xad1c>
   20f6c:	ldrb	r0, [r4, #2]!
   20f70:	cmp	r0, #32
   20f74:	bhi	1e1e0 <main@@Base+0x7f84>
   20f78:	mov	r0, r8
   20f7c:	mov	r2, r5
   20f80:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   20f84:	b	1e1dc <main@@Base+0x7f80>
   20f88:	ldr	r5, [sp, #44]	; 0x2c
   20f8c:	ldr	r8, [sp, #40]	; 0x28
   20f90:	ldr	sl, [sp, #36]	; 0x24
   20f94:	bne	20fa8 <main@@Base+0xad4c>
   20f98:	ldrb	r0, [r4, #2]!
   20f9c:	mov	r7, r4
   20fa0:	cmp	r0, #32
   20fa4:	bhi	1c8d0 <main@@Base+0x6674>
   20fa8:	mov	r0, r8
   20fac:	mov	r2, r5
   20fb0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   20fb4:	b	1c8cc <main@@Base+0x6670>
   20fb8:	ldr	r8, [sp, #40]	; 0x28
   20fbc:	ldr	r5, [sp, #44]	; 0x2c
   20fc0:	mov	r1, r2
   20fc4:	mov	r0, r8
   20fc8:	mov	r2, r5
   20fcc:	mov	r3, #10
   20fd0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   20fd4:	ldr	sl, [sp, #36]	; 0x24
   20fd8:	b	1c724 <main@@Base+0x64c8>
   20fdc:	ldr	r8, [sp, #40]	; 0x28
   20fe0:	ldr	r5, [sp, #44]	; 0x2c
   20fe4:	mov	r1, r2
   20fe8:	mov	r0, r8
   20fec:	mov	r2, r5
   20ff0:	mov	r3, #9
   20ff4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   20ff8:	ldr	sl, [sp, #36]	; 0x24
   20ffc:	b	1dbe8 <main@@Base+0x798c>
   21000:	ldr	r0, [sp, #40]	; 0x28
   21004:	ldr	r2, [sp, #44]	; 0x2c
   21008:	mov	r1, r4
   2100c:	mov	r3, #9
   21010:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   21014:	b	211d0 <main@@Base+0xaf74>
   21018:	ldr	r6, [fp, #-56]	; 0xffffffc8
   2101c:	mov	r4, r1
   21020:	str	r6, [fp, #-60]	; 0xffffffc4
   21024:	cmp	r7, r4
   21028:	bne	20074 <main@@Base+0x9e18>
   2102c:	b	2003c <main@@Base+0x9de0>
   21030:	ldr	r8, [sp, #40]	; 0x28
   21034:	ldr	r5, [sp, #44]	; 0x2c
   21038:	mov	r1, r2
   2103c:	mov	r0, r8
   21040:	mov	r2, r5
   21044:	mov	r3, #9
   21048:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2104c:	ldr	sl, [sp, #36]	; 0x24
   21050:	b	1df3c <main@@Base+0x7ce0>
   21054:	strdeq	pc, [r3], -r8
   21058:	ldr	r9, [sp, #44]	; 0x2c
   2105c:	ldr	r8, [sp, #40]	; 0x28
   21060:	b	1f70c <main@@Base+0x94b0>
   21064:	cmp	r0, #93	; 0x5d
   21068:	bne	212e0 <main@@Base+0xb084>
   2106c:	ldr	r0, [sp, #44]	; 0x2c
   21070:	add	r1, r9, #1
   21074:	sub	r0, r0, r1
   21078:	cmp	r0, #2
   2107c:	blt	2138c <main@@Base+0xb130>
   21080:	ldrb	r0, [r1]
   21084:	cmp	r0, #32
   21088:	bls	2137c <main@@Base+0xb120>
   2108c:	ldr	r8, [sp, #40]	; 0x28
   21090:	mov	r9, r1
   21094:	b	1f70c <main@@Base+0x94b0>
   21098:	ldr	r1, [sp, #44]	; 0x2c
   2109c:	ldr	r0, [sp, #40]	; 0x28
   210a0:	mov	r2, r1
   210a4:	b	212ec <main@@Base+0xb090>
   210a8:	ldr	r8, [sp, #40]	; 0x28
   210ac:	ldr	r5, [sp, #44]	; 0x2c
   210b0:	mov	r1, r3
   210b4:	mov	r0, r8
   210b8:	mov	r2, r5
   210bc:	mov	r3, #10
   210c0:	b	1cdec <main@@Base+0x6b90>
   210c4:	ldr	r4, [sp, #44]	; 0x2c
   210c8:	b	21310 <main@@Base+0xb0b4>
   210cc:	cmp	r0, #93	; 0x5d
   210d0:	bne	212f8 <main@@Base+0xb09c>
   210d4:	ldr	r0, [sp, #44]	; 0x2c
   210d8:	add	r1, r4, #1
   210dc:	sub	r0, r0, r1
   210e0:	cmp	r0, #2
   210e4:	blt	2114c <main@@Base+0xaef0>
   210e8:	ldrb	r0, [r1]
   210ec:	cmp	r0, #32
   210f0:	bls	2113c <main@@Base+0xaee0>
   210f4:	mov	r4, r1
   210f8:	b	21310 <main@@Base+0xb0b4>
   210fc:	ldr	r5, [sp, #44]	; 0x2c
   21100:	ldr	r8, [sp, #40]	; 0x28
   21104:	ldr	sl, [sp, #36]	; 0x24
   21108:	bne	2111c <main@@Base+0xaec0>
   2110c:	ldrb	r0, [r2, #2]!
   21110:	mov	r4, r2
   21114:	cmp	r0, #32
   21118:	bhi	1c728 <main@@Base+0x64cc>
   2111c:	mov	r0, r8
   21120:	mov	r2, r5
   21124:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   21128:	b	1c724 <main@@Base+0x64c8>
   2112c:	ldr	r1, [sp, #44]	; 0x2c
   21130:	ldr	r0, [sp, #40]	; 0x28
   21134:	mov	r2, r1
   21138:	b	21304 <main@@Base+0xb0a8>
   2113c:	bne	2114c <main@@Base+0xaef0>
   21140:	ldrb	r0, [r4, #2]!
   21144:	cmp	r0, #32
   21148:	bhi	21310 <main@@Base+0xb0b4>
   2114c:	ldr	r0, [sp, #40]	; 0x28
   21150:	ldr	r2, [sp, #44]	; 0x2c
   21154:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   21158:	b	2130c <main@@Base+0xb0b0>
   2115c:	mov	r4, r5
   21160:	b	21354 <main@@Base+0xb0f8>
   21164:	ldr	r5, [sp, #44]	; 0x2c
   21168:	ldr	r8, [sp, #40]	; 0x28
   2116c:	ldr	sl, [sp, #36]	; 0x24
   21170:	bne	21184 <main@@Base+0xaf28>
   21174:	ldrb	r0, [r2, #2]!
   21178:	mov	r4, r2
   2117c:	cmp	r0, #32
   21180:	bhi	1dbec <main@@Base+0x7990>
   21184:	mov	r0, r8
   21188:	mov	r2, r5
   2118c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   21190:	b	1dbe8 <main@@Base+0x798c>
   21194:	cmp	r0, #93	; 0x5d
   21198:	bne	2133c <main@@Base+0xb0e0>
   2119c:	ldr	r0, [sp, #44]	; 0x2c
   211a0:	add	r1, r4, #1
   211a4:	sub	r0, r0, r1
   211a8:	cmp	r0, #2
   211ac:	blt	21228 <main@@Base+0xafcc>
   211b0:	b	2120c <main@@Base+0xafb0>
   211b4:	bne	211c4 <main@@Base+0xaf68>
   211b8:	ldrb	r0, [r4, #2]!
   211bc:	cmp	r0, #32
   211c0:	bhi	211d4 <main@@Base+0xaf78>
   211c4:	ldr	r0, [sp, #40]	; 0x28
   211c8:	ldr	r2, [sp, #44]	; 0x2c
   211cc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   211d0:	mov	r4, r0
   211d4:	ldr	r5, [sp, #44]	; 0x2c
   211d8:	ldr	r8, [sp, #40]	; 0x28
   211dc:	ldr	sl, [sp, #36]	; 0x24
   211e0:	b	1e0e4 <main@@Base+0x7e88>
   211e4:	mov	r0, r8
   211e8:	mov	r1, r5
   211ec:	mov	r2, r5
   211f0:	b	21348 <main@@Base+0xb0ec>
   211f4:	mov	r4, r5
   211f8:	b	1e000 <main@@Base+0x7da4>
   211fc:	add	r1, r4, #1
   21200:	sub	r0, r5, r1
   21204:	cmp	r0, #2
   21208:	blt	21228 <main@@Base+0xafcc>
   2120c:	ldrb	r0, [r1]
   21210:	cmp	r0, #32
   21214:	bhi	1f3f4 <main@@Base+0x9198>
   21218:	bne	21228 <main@@Base+0xafcc>
   2121c:	ldrb	r0, [r4, #2]!
   21220:	cmp	r0, #32
   21224:	bhi	21354 <main@@Base+0xb0f8>
   21228:	ldr	r0, [sp, #40]	; 0x28
   2122c:	ldr	r2, [sp, #44]	; 0x2c
   21230:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   21234:	b	21350 <main@@Base+0xb0f4>
   21238:	cmp	r0, #125	; 0x7d
   2123c:	bne	21364 <main@@Base+0xb108>
   21240:	ldr	r0, [sp, #44]	; 0x2c
   21244:	add	r1, r2, #1
   21248:	sub	r0, r0, r1
   2124c:	ldr	r8, [sp, #40]	; 0x28
   21250:	cmp	r0, #2
   21254:	blt	213bc <main@@Base+0xb160>
   21258:	ldrb	r0, [r1]
   2125c:	cmp	r0, #32
   21260:	bls	213a4 <main@@Base+0xb148>
   21264:	ldr	r8, [sp, #40]	; 0x28
   21268:	mov	r4, r1
   2126c:	b	1e000 <main@@Base+0x7da4>
   21270:	andeq	lr, r3, ip, asr #29
   21274:	ldr	r5, [sp, #44]	; 0x2c
   21278:	ldr	r8, [sp, #40]	; 0x28
   2127c:	ldr	sl, [sp, #36]	; 0x24
   21280:	bne	21294 <main@@Base+0xb038>
   21284:	ldrb	r0, [r2, #2]!
   21288:	mov	r4, r2
   2128c:	cmp	r0, #32
   21290:	bhi	1df40 <main@@Base+0x7ce4>
   21294:	mov	r0, r8
   21298:	mov	r2, r5
   2129c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   212a0:	b	1df3c <main@@Base+0x7ce0>
   212a4:	ldr	r8, [sp, #40]	; 0x28
   212a8:	mov	r1, r5
   212ac:	mov	r2, r5
   212b0:	b	21370 <main@@Base+0xb114>
   212b4:	ldr	r5, [sp, #44]	; 0x2c
   212b8:	ldr	r8, [sp, #40]	; 0x28
   212bc:	bne	212d0 <main@@Base+0xb074>
   212c0:	ldrb	r0, [r3, #2]!
   212c4:	mov	r4, r3
   212c8:	cmp	r0, #32
   212cc:	bhi	1cdf4 <main@@Base+0x6b98>
   212d0:	mov	r0, r8
   212d4:	mov	r2, r5
   212d8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   212dc:	b	1cdf0 <main@@Base+0x6b94>
   212e0:	ldr	r0, [sp, #40]	; 0x28
   212e4:	ldr	r2, [sp, #44]	; 0x2c
   212e8:	mov	r1, r9
   212ec:	mov	r3, #9
   212f0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   212f4:	b	21398 <main@@Base+0xb13c>
   212f8:	ldr	r0, [sp, #40]	; 0x28
   212fc:	ldr	r2, [sp, #44]	; 0x2c
   21300:	mov	r1, r4
   21304:	mov	r3, #9
   21308:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2130c:	mov	r4, r0
   21310:	ldr	r8, [sp, #40]	; 0x28
   21314:	ldr	r0, [r8]
   21318:	bl	320b0 <flatcc_builder_end_vector@@Base>
   2131c:	ldr	r5, [sp, #44]	; 0x2c
   21320:	ldr	sl, [sp, #36]	; 0x24
   21324:	cmp	r0, #0
   21328:	str	r0, [sp, #52]	; 0x34
   2132c:	beq	17324 <main@@Base+0x10c8>
   21330:	ldr	r0, [r8]
   21334:	mov	r1, #13
   21338:	b	19d64 <main@@Base+0x3b08>
   2133c:	ldr	r0, [sp, #40]	; 0x28
   21340:	ldr	r2, [sp, #44]	; 0x2c
   21344:	mov	r1, r4
   21348:	mov	r3, #9
   2134c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   21350:	mov	r4, r0
   21354:	ldr	r5, [sp, #44]	; 0x2c
   21358:	ldr	r8, [sp, #40]	; 0x28
   2135c:	ldr	sl, [sp, #36]	; 0x24
   21360:	b	1e1e0 <main@@Base+0x7f84>
   21364:	ldr	r8, [sp, #40]	; 0x28
   21368:	mov	r1, r2
   2136c:	ldr	r2, [sp, #44]	; 0x2c
   21370:	mov	r0, r8
   21374:	mov	r3, #10
   21378:	b	1dff8 <main@@Base+0x7d9c>
   2137c:	bne	2138c <main@@Base+0xb130>
   21380:	ldrb	r0, [r9, #2]!
   21384:	cmp	r0, #32
   21388:	bhi	2139c <main@@Base+0xb140>
   2138c:	ldr	r0, [sp, #40]	; 0x28
   21390:	ldr	r2, [sp, #44]	; 0x2c
   21394:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   21398:	mov	r9, r0
   2139c:	ldr	r8, [sp, #40]	; 0x28
   213a0:	b	1f70c <main@@Base+0x94b0>
   213a4:	ldr	r8, [sp, #40]	; 0x28
   213a8:	bne	213bc <main@@Base+0xb160>
   213ac:	ldrb	r0, [r2, #2]!
   213b0:	mov	r4, r2
   213b4:	cmp	r0, #32
   213b8:	bhi	1e000 <main@@Base+0x7da4>
   213bc:	ldr	r2, [sp, #44]	; 0x2c
   213c0:	mov	r0, r8
   213c4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   213c8:	b	1dffc <main@@Base+0x7da0>
   213cc:	mov	r4, r5
   213d0:	b	173c4 <main@@Base+0x1168>
   213d4:	cmp	r0, #125	; 0x7d
   213d8:	bne	2140c <main@@Base+0xb1b0>
   213dc:	add	r1, r2, #1
   213e0:	sub	r0, r5, r1
   213e4:	cmp	r0, #2
   213e8:	blt	21434 <main@@Base+0xb1d8>
   213ec:	ldrb	r0, [r1]
   213f0:	cmp	r0, #32
   213f4:	bls	21420 <main@@Base+0xb1c4>
   213f8:	mov	r4, r1
   213fc:	b	173c4 <main@@Base+0x1168>
   21400:	mov	r0, r8
   21404:	mov	r1, r5
   21408:	b	21414 <main@@Base+0xb1b8>
   2140c:	mov	r0, r8
   21410:	mov	r1, r2
   21414:	mov	r2, r5
   21418:	mov	r3, #10
   2141c:	b	173bc <main@@Base+0x1160>
   21420:	bne	21434 <main@@Base+0xb1d8>
   21424:	ldrb	r0, [r2, #2]!
   21428:	mov	r4, r2
   2142c:	cmp	r0, #32
   21430:	bhi	173c4 <main@@Base+0x1168>
   21434:	mov	r0, r8
   21438:	mov	r2, r5
   2143c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   21440:	b	173c0 <main@@Base+0x1164>
   21444:	andeq	lr, r3, ip, lsr #26
   21448:	mov	r4, r7
   2144c:	b	17324 <main@@Base+0x10c8>
   21450:	mov	r4, r6
   21454:	b	17324 <main@@Base+0x10c8>
   21458:	ldr	r8, [sp, #40]	; 0x28
   2145c:	mov	r4, r1
   21460:	b	17324 <main@@Base+0x10c8>
   21464:	ldr	r5, [sp, #44]	; 0x2c
   21468:	mov	r4, r9
   2146c:	b	17324 <main@@Base+0x10c8>
   21470:	ldr	r8, [sp, #40]	; 0x28
   21474:	mov	r4, r9
   21478:	b	17324 <main@@Base+0x10c8>
   2147c:	mov	r4, r5
   21480:	b	214a0 <main@@Base+0xb244>
   21484:	ldr	r5, [sp, #44]	; 0x2c
   21488:	ldr	r8, [sp, #40]	; 0x28
   2148c:	mov	r4, r7
   21490:	b	17324 <main@@Base+0x10c8>
   21494:	mov	r4, r1
   21498:	b	214a0 <main@@Base+0xb244>
   2149c:	mov	r4, r6
   214a0:	ldr	r5, [sp, #44]	; 0x2c
   214a4:	ldr	r8, [sp, #40]	; 0x28
   214a8:	b	17324 <main@@Base+0x10c8>
   214ac:	andeq	lr, r3, r0, asr #15
   214b0:	andeq	lr, r3, ip, lsr #12
   214b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   214b8:	add	fp, sp, #28
   214bc:	sub	sp, sp, #20
   214c0:	mov	r5, r0
   214c4:	ldr	r0, [pc, #1268]	; 219c0 <main@@Base+0xb764>
   214c8:	mov	r4, r1
   214cc:	mov	r1, #3
   214d0:	mov	r2, #0
   214d4:	mov	r8, #0
   214d8:	str	r1, [sp]
   214dc:	mov	r1, r4
   214e0:	add	r0, pc, r0
   214e4:	str	r0, [sp, #4]
   214e8:	mov	r0, r5
   214ec:	ldr	r3, [pc, #1232]	; 219c4 <main@@Base+0xb768>
   214f0:	add	r3, pc, r3
   214f4:	bl	45fd4 <flatcc_json_printer_struct_field@@Base>
   214f8:	mov	r0, #150	; 0x96
   214fc:	mov	r1, #4
   21500:	mov	r2, #1
   21504:	mov	r6, #4
   21508:	str	r1, [sp]
   2150c:	str	r0, [sp, #4]
   21510:	mov	r0, r5
   21514:	mov	r1, r4
   21518:	ldr	r3, [pc, #1192]	; 219c8 <main@@Base+0xb76c>
   2151c:	add	r3, pc, r3
   21520:	bl	3ce44 <flatcc_json_printer_int16_field@@Base>
   21524:	mov	r0, #100	; 0x64
   21528:	mov	r1, #2
   2152c:	mov	r2, #2
   21530:	str	r1, [sp]
   21534:	str	r0, [sp, #4]
   21538:	mov	r0, r5
   2153c:	mov	r1, r4
   21540:	ldr	r3, [pc, #1156]	; 219cc <main@@Base+0xb770>
   21544:	add	r3, pc, r3
   21548:	bl	3ce44 <flatcc_json_printer_int16_field@@Base>
   2154c:	str	r6, [sp]
   21550:	mov	r0, r5
   21554:	mov	r1, r4
   21558:	mov	r2, #3
   2155c:	ldr	r3, [pc, #1132]	; 219d0 <main@@Base+0xb774>
   21560:	add	r3, pc, r3
   21564:	bl	3c45c <flatcc_json_printer_string_field@@Base>
   21568:	mov	r0, #9
   2156c:	mov	r1, r4
   21570:	mov	r2, #5
   21574:	mov	r7, #5
   21578:	str	r0, [sp]
   2157c:	mov	r0, r5
   21580:	ldr	r3, [pc, #1100]	; 219d4 <main@@Base+0xb778>
   21584:	add	r3, pc, r3
   21588:	bl	3efcc <flatcc_json_printer_uint8_vector_field@@Base>
   2158c:	ldr	r0, [pc, #1092]	; 219d8 <main@@Base+0xb77c>
   21590:	mov	r1, #8
   21594:	str	r7, [sp]
   21598:	mov	r2, #6
   2159c:	mov	r7, #5
   215a0:	str	r1, [sp, #4]
   215a4:	mov	r1, r4
   215a8:	add	r0, pc, r0
   215ac:	str	r0, [sp, #8]
   215b0:	mov	r0, r5
   215b4:	ldr	r3, [pc, #1056]	; 219dc <main@@Base+0xb780>
   215b8:	add	r3, pc, r3
   215bc:	bl	3d80c <flatcc_json_printer_int8_enum_field@@Base>
   215c0:	ldr	r0, [pc, #1048]	; 219e0 <main@@Base+0xb784>
   215c4:	ldr	r1, [pc, #1048]	; 219e4 <main@@Base+0xb788>
   215c8:	str	r6, [sp]
   215cc:	mov	r2, #8
   215d0:	add	r0, pc, r0
   215d4:	add	r1, pc, r1
   215d8:	str	r1, [sp, #4]
   215dc:	str	r0, [sp, #8]
   215e0:	mov	r0, r5
   215e4:	mov	r1, r4
   215e8:	ldr	r3, [pc, #1016]	; 219e8 <main@@Base+0xb78c>
   215ec:	add	r3, pc, r3
   215f0:	bl	456c8 <flatcc_json_printer_union_field@@Base>
   215f4:	ldr	r0, [pc, #1008]	; 219ec <main@@Base+0xb790>
   215f8:	str	r7, [sp]
   215fc:	str	r6, [sp, #4]
   21600:	mov	r1, r4
   21604:	mov	r2, #9
   21608:	mov	sl, #5
   2160c:	add	r0, pc, r0
   21610:	str	r0, [sp, #8]
   21614:	mov	r0, r5
   21618:	ldr	r3, [pc, #976]	; 219f0 <main@@Base+0xb794>
   2161c:	add	r3, pc, r3
   21620:	bl	44304 <flatcc_json_printer_struct_vector_field@@Base>
   21624:	mov	r7, #17
   21628:	mov	r0, r5
   2162c:	mov	r1, r4
   21630:	mov	r2, #10
   21634:	str	r7, [sp]
   21638:	ldr	r3, [pc, #948]	; 219f4 <main@@Base+0xb798>
   2163c:	add	r3, pc, r3
   21640:	bl	448ac <flatcc_json_printer_string_vector_field@@Base>
   21644:	ldr	r9, [pc, #940]	; 219f8 <main@@Base+0xb79c>
   21648:	mov	r0, r5
   2164c:	mov	r1, r4
   21650:	mov	r2, #11
   21654:	add	r9, pc, r9
   21658:	stm	sp, {r7, r9}
   2165c:	ldr	r3, [pc, #920]	; 219fc <main@@Base+0xb7a0>
   21660:	add	r3, pc, r3
   21664:	bl	44c70 <flatcc_json_printer_table_vector_field@@Base>
   21668:	str	sl, [sp]
   2166c:	str	r9, [sp, #4]
   21670:	mov	r0, r5
   21674:	mov	r1, r4
   21678:	mov	r2, #12
   2167c:	mov	sl, #5
   21680:	ldr	r3, [pc, #888]	; 21a00 <main@@Base+0xb7a4>
   21684:	add	r3, pc, r3
   21688:	bl	454dc <flatcc_json_printer_table_field@@Base>
   2168c:	mov	r0, #20
   21690:	mov	r1, r4
   21694:	mov	r2, #13
   21698:	stm	sp, {r0, r8, r9}
   2169c:	mov	r0, r5
   216a0:	ldr	r3, [pc, #860]	; 21a04 <main@@Base+0xb7a8>
   216a4:	add	r3, pc, r3
   216a8:	bl	4688c <flatcc_json_printer_table_as_nested_root@@Base>
   216ac:	ldr	r0, [pc, #852]	; 21a08 <main@@Base+0xb7ac>
   216b0:	mov	r1, #9
   216b4:	mov	r2, #14
   216b8:	str	r1, [sp]
   216bc:	mov	r1, r4
   216c0:	add	r0, pc, r0
   216c4:	str	r0, [sp, #4]
   216c8:	mov	r0, r5
   216cc:	ldr	r3, [pc, #824]	; 21a0c <main@@Base+0xb7b0>
   216d0:	add	r3, pc, r3
   216d4:	bl	454dc <flatcc_json_printer_table_field@@Base>
   216d8:	mov	r9, #8
   216dc:	mov	r0, #1
   216e0:	mov	r1, r4
   216e4:	mov	r2, #15
   216e8:	str	r0, [sp, #4]
   216ec:	str	r9, [sp]
   216f0:	mov	r0, r5
   216f4:	ldr	r3, [pc, #788]	; 21a10 <main@@Base+0xb7b4>
   216f8:	add	r3, pc, r3
   216fc:	bl	3d104 <flatcc_json_printer_bool_field@@Base>
   21700:	mov	r6, #16
   21704:	mov	r0, r5
   21708:	mov	r1, r4
   2170c:	mov	r2, #16
   21710:	stm	sp, {r6, r8}
   21714:	ldr	r3, [pc, #760]	; 21a14 <main@@Base+0xb7b8>
   21718:	add	r3, pc, r3
   2171c:	bl	3cf2c <flatcc_json_printer_int32_field@@Base>
   21720:	stm	sp, {r6, r8}
   21724:	mov	r0, r5
   21728:	mov	r1, r4
   2172c:	mov	r2, #17
   21730:	ldr	r3, [pc, #736]	; 21a18 <main@@Base+0xb7bc>
   21734:	add	r3, pc, r3
   21738:	bl	3cb08 <flatcc_json_printer_uint32_field@@Base>
   2173c:	str	r8, [sp, #8]
   21740:	str	r8, [sp, #12]
   21744:	str	r6, [sp]
   21748:	mov	r0, r5
   2174c:	mov	r1, r4
   21750:	mov	r2, #18
   21754:	ldr	r3, [pc, #704]	; 21a1c <main@@Base+0xb7c0>
   21758:	add	r3, pc, r3
   2175c:	bl	3d008 <flatcc_json_printer_int64_field@@Base>
   21760:	str	r8, [sp, #8]
   21764:	str	r8, [sp, #12]
   21768:	str	r6, [sp]
   2176c:	mov	r0, r5
   21770:	mov	r1, r4
   21774:	mov	r2, #19
   21778:	ldr	r3, [pc, #672]	; 21a20 <main@@Base+0xb7c4>
   2177c:	add	r3, pc, r3
   21780:	bl	3cbcc <flatcc_json_printer_uint64_field@@Base>
   21784:	stm	sp, {r7, r8}
   21788:	mov	r0, r5
   2178c:	mov	r1, r4
   21790:	mov	r2, #20
   21794:	ldr	r3, [pc, #648]	; 21a24 <main@@Base+0xb7c8>
   21798:	add	r3, pc, r3
   2179c:	bl	3cf2c <flatcc_json_printer_int32_field@@Base>
   217a0:	stm	sp, {r7, r8}
   217a4:	mov	r0, r5
   217a8:	mov	r1, r4
   217ac:	mov	r2, #21
   217b0:	ldr	r3, [pc, #624]	; 21a28 <main@@Base+0xb7cc>
   217b4:	add	r3, pc, r3
   217b8:	bl	3cb08 <flatcc_json_printer_uint32_field@@Base>
   217bc:	str	r8, [sp, #8]
   217c0:	str	r8, [sp, #12]
   217c4:	str	r7, [sp]
   217c8:	mov	r0, r5
   217cc:	mov	r1, r4
   217d0:	mov	r2, #22
   217d4:	ldr	r3, [pc, #592]	; 21a2c <main@@Base+0xb7d0>
   217d8:	add	r3, pc, r3
   217dc:	bl	3d008 <flatcc_json_printer_int64_field@@Base>
   217e0:	str	r8, [sp, #8]
   217e4:	str	r8, [sp, #12]
   217e8:	str	r7, [sp]
   217ec:	mov	r0, r5
   217f0:	mov	r1, r4
   217f4:	mov	r2, #23
   217f8:	mov	r8, #23
   217fc:	ldr	r3, [pc, #556]	; 21a30 <main@@Base+0xb7d4>
   21800:	add	r3, pc, r3
   21804:	bl	3cbcc <flatcc_json_printer_uint64_field@@Base>
   21808:	str	r6, [sp]
   2180c:	mov	r0, r5
   21810:	mov	r1, r4
   21814:	mov	r2, #24
   21818:	ldr	r3, [pc, #532]	; 21a34 <main@@Base+0xb7d8>
   2181c:	add	r3, pc, r3
   21820:	bl	41174 <flatcc_json_printer_bool_vector_field@@Base>
   21824:	str	sl, [sp]
   21828:	vldr	s0, [pc, #392]	; 219b8 <main@@Base+0xb75c>
   2182c:	mov	r0, r5
   21830:	mov	r1, r4
   21834:	mov	r2, #25
   21838:	ldr	r3, [pc, #504]	; 21a38 <main@@Base+0xb7dc>
   2183c:	add	r3, pc, r3
   21840:	bl	3d1fc <flatcc_json_printer_float_field@@Base>
   21844:	mov	r6, #6
   21848:	vmov.f32	s0, #8	; 0x40400000  3.0
   2184c:	mov	r0, r5
   21850:	mov	r1, r4
   21854:	mov	r2, #26
   21858:	str	r6, [sp]
   2185c:	ldr	r3, [pc, #472]	; 21a3c <main@@Base+0xb7e0>
   21860:	add	r3, pc, r3
   21864:	bl	3d1fc <flatcc_json_printer_float_field@@Base>
   21868:	str	r6, [sp]
   2186c:	vldr	s0, [pc, #328]	; 219bc <main@@Base+0xb760>
   21870:	mov	r0, r5
   21874:	mov	r1, r4
   21878:	mov	r2, #27
   2187c:	ldr	r3, [pc, #444]	; 21a40 <main@@Base+0xb7e4>
   21880:	add	r3, pc, r3
   21884:	bl	3d1fc <flatcc_json_printer_float_field@@Base>
   21888:	mov	r0, #18
   2188c:	mov	r1, r4
   21890:	mov	r2, #28
   21894:	str	r0, [sp]
   21898:	mov	r0, r5
   2189c:	ldr	r3, [pc, #416]	; 21a44 <main@@Base+0xb7e8>
   218a0:	add	r3, pc, r3
   218a4:	bl	448ac <flatcc_json_printer_string_vector_field@@Base>
   218a8:	ldr	r0, [pc, #408]	; 21a48 <main@@Base+0xb7ec>
   218ac:	stm	sp, {r8, r9}
   218b0:	mov	r1, r4
   218b4:	mov	r2, #29
   218b8:	add	r0, pc, r0
   218bc:	str	r0, [sp, #8]
   218c0:	mov	r0, r5
   218c4:	ldr	r3, [pc, #384]	; 21a4c <main@@Base+0xb7f0>
   218c8:	add	r3, pc, r3
   218cc:	bl	44304 <flatcc_json_printer_struct_vector_field@@Base>
   218d0:	mov	r6, #4
   218d4:	mov	r0, r5
   218d8:	mov	r1, r4
   218dc:	mov	r2, #30
   218e0:	str	r6, [sp]
   218e4:	ldr	r3, [pc, #356]	; 21a50 <main@@Base+0xb7f4>
   218e8:	add	r3, pc, r3
   218ec:	bl	3efcc <flatcc_json_printer_uint8_vector_field@@Base>
   218f0:	str	sl, [sp]
   218f4:	str	r6, [sp, #4]
   218f8:	mov	r1, r4
   218fc:	mov	r2, #31
   21900:	ldr	r0, [pc, #332]	; 21a54 <main@@Base+0xb7f8>
   21904:	add	r0, pc, r0
   21908:	str	r0, [sp, #8]
   2190c:	mov	r0, r5
   21910:	ldr	r3, [pc, #320]	; 21a58 <main@@Base+0xb7fc>
   21914:	add	r3, pc, r3
   21918:	bl	44304 <flatcc_json_printer_struct_vector_field@@Base>
   2191c:	mov	r0, #15
   21920:	mov	r1, r4
   21924:	mov	r2, #32
   21928:	str	r0, [sp]
   2192c:	mov	r0, r5
   21930:	ldr	r3, [pc, #292]	; 21a5c <main@@Base+0xb800>
   21934:	add	r3, pc, r3
   21938:	bl	40d70 <flatcc_json_printer_int64_vector_field@@Base>
   2193c:	str	r7, [sp]
   21940:	mov	r0, r5
   21944:	mov	r1, r4
   21948:	mov	r2, #33	; 0x21
   2194c:	ldr	r3, [pc, #268]	; 21a60 <main@@Base+0xb804>
   21950:	add	r3, pc, r3
   21954:	bl	41968 <flatcc_json_printer_double_vector_field@@Base>
   21958:	ldr	r0, [pc, #260]	; 21a64 <main@@Base+0xb808>
   2195c:	mov	r1, #21
   21960:	mov	r2, #34	; 0x22
   21964:	str	r1, [sp]
   21968:	mov	r1, r4
   2196c:	add	r0, pc, r0
   21970:	str	r0, [sp, #4]
   21974:	mov	r0, r5
   21978:	ldr	r3, [pc, #232]	; 21a68 <main@@Base+0xb80c>
   2197c:	add	r3, pc, r3
   21980:	bl	454dc <flatcc_json_printer_table_field@@Base>
   21984:	ldr	r0, [pc, #224]	; 21a6c <main@@Base+0xb810>
   21988:	mov	r1, #10
   2198c:	mov	r2, #35	; 0x23
   21990:	str	r1, [sp]
   21994:	mov	r1, r4
   21998:	add	r0, pc, r0
   2199c:	str	r0, [sp, #4]
   219a0:	mov	r0, r5
   219a4:	ldr	r3, [pc, #196]	; 21a70 <main@@Base+0xb814>
   219a8:	add	r3, pc, r3
   219ac:	bl	454dc <flatcc_json_printer_table_field@@Base>
   219b0:	sub	sp, fp, #28
   219b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   219b8:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   219bc:	andeq	r0, r0, r0
   219c0:	andeq	ip, r0, ip, lsl #15
   219c4:	ldrdeq	r9, [r2], -r4
   219c8:	andeq	r9, r2, ip, lsr #23
   219cc:	andeq	r9, r2, r9, lsl #23
   219d0:	andeq	r9, r2, r0, ror fp
   219d4:	andeq	r9, r2, r1, asr fp
   219d8:	andeq	ip, r0, r0, ror #15
   219dc:	andeq	r9, r2, r7, lsr #22
   219e0:	andeq	ip, r0, r8, lsr #18
   219e4:	muleq	r0, r8, r8
   219e8:	andeq	r9, r2, fp, ror #24
   219ec:	andeq	ip, r0, r8, lsl r9
   219f0:	andeq	r9, r2, r9, asr #21
   219f4:	andeq	r9, r2, pc, lsr #21
   219f8:			; <UNDEFINED> instruction: 0xfffffe58
   219fc:	muleq	r2, sp, sl
   21a00:	andeq	r9, r2, fp, lsl #21
   21a04:	andeq	r9, r2, r1, ror sl
   21a08:	andeq	ip, r0, ip, asr #17
   21a0c:	andeq	r9, r2, sl, asr sl
   21a10:	andeq	r9, r2, ip, lsr sl
   21a14:	andeq	r9, r2, r5, lsr #20
   21a18:	andeq	r9, r2, sl, lsl sl
   21a1c:	andeq	r9, r2, r7, lsl #20
   21a20:	strdeq	r9, [r2], -r4
   21a24:	andeq	r9, r2, r9, ror #19
   21a28:	ldrdeq	r9, [r2], -pc	; <UNPREDICTABLE>
   21a2c:	andeq	r9, r2, sp, asr #19
   21a30:			; <UNDEFINED> instruction: 0x000299b7
   21a34:	andeq	r9, r2, sp, lsr #19
   21a38:	muleq	r2, lr, r9
   21a3c:	andeq	r9, r2, r0, lsl #19
   21a40:	andeq	r9, r2, r7, ror #18
   21a44:	andeq	r9, r2, lr, asr #18
   21a48:	andeq	ip, r0, r4, ror #14
   21a4c:	andeq	r9, r2, r9, lsr r9
   21a50:	andeq	r9, r2, r1, lsr r9
   21a54:	andeq	ip, r0, r0, lsr #12
   21a58:	andeq	r9, r2, sl, lsl #18
   21a5c:	strdeq	r9, [r2], -r0
   21a60:	andeq	r9, r2, r4, ror #17
   21a64:	andeq	ip, r0, r4, lsr #14
   21a68:	andeq	r9, r2, sl, asr #17
   21a6c:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   21a70:			; <UNDEFINED> instruction: 0x000298b4
   21a74:	push	{r4, r5, r6, r7, fp, lr}
   21a78:	add	fp, sp, #16
   21a7c:	sub	sp, sp, #8
   21a80:	mov	r1, #0
   21a84:	mov	r2, #32
   21a88:	mov	r3, #16
   21a8c:	mov	r4, r0
   21a90:	bl	34218 <flatcc_verify_field@@Base>
   21a94:	cmp	r0, #0
   21a98:	bne	21ea0 <main@@Base+0xbc44>
   21a9c:	mov	r0, r4
   21aa0:	mov	r1, #2
   21aa4:	mov	r2, #2
   21aa8:	mov	r3, #2
   21aac:	bl	34218 <flatcc_verify_field@@Base>
   21ab0:	cmp	r0, #0
   21ab4:	bne	21ea0 <main@@Base+0xbc44>
   21ab8:	mov	r0, r4
   21abc:	mov	r1, #1
   21ac0:	mov	r2, #2
   21ac4:	mov	r3, #2
   21ac8:	bl	34218 <flatcc_verify_field@@Base>
   21acc:	cmp	r0, #0
   21ad0:	bne	21ea0 <main@@Base+0xbc44>
   21ad4:	mov	r0, r4
   21ad8:	mov	r1, #3
   21adc:	mov	r2, #1
   21ae0:	bl	3429c <flatcc_verify_string_field@@Base>
   21ae4:	cmp	r0, #0
   21ae8:	bne	21ea0 <main@@Base+0xbc44>
   21aec:	mov	r0, r4
   21af0:	mov	r1, #6
   21af4:	mov	r2, #1
   21af8:	mov	r3, #1
   21afc:	mov	r5, #1
   21b00:	bl	34218 <flatcc_verify_field@@Base>
   21b04:	cmp	r0, #0
   21b08:	bne	21ea0 <main@@Base+0xbc44>
   21b0c:	mvn	r0, #0
   21b10:	mov	r1, #5
   21b14:	mov	r2, #0
   21b18:	mov	r3, #1
   21b1c:	str	r5, [sp]
   21b20:	str	r0, [sp, #4]
   21b24:	mov	r0, r4
   21b28:	bl	3437c <flatcc_verify_vector_field@@Base>
   21b2c:	cmp	r0, #0
   21b30:	bne	21ea0 <main@@Base+0xbc44>
   21b34:	ldr	r3, [pc, #908]	; 21ec8 <main@@Base+0xbc6c>
   21b38:	mov	r0, r4
   21b3c:	mov	r1, #11
   21b40:	mov	r2, #0
   21b44:	add	r3, pc, r3
   21b48:	bl	34764 <flatcc_verify_table_vector_field@@Base>
   21b4c:	cmp	r0, #0
   21b50:	bne	21ea0 <main@@Base+0xbc44>
   21b54:	mov	r0, r4
   21b58:	mov	r1, #10
   21b5c:	mov	r2, #0
   21b60:	bl	34474 <flatcc_verify_string_vector_field@@Base>
   21b64:	cmp	r0, #0
   21b68:	bne	21ea0 <main@@Base+0xbc44>
   21b6c:	mov	r0, r4
   21b70:	mov	r1, #28
   21b74:	mov	r2, #0
   21b78:	bl	34474 <flatcc_verify_string_vector_field@@Base>
   21b7c:	cmp	r0, #0
   21b80:	bne	21ea0 <main@@Base+0xbc44>
   21b84:	mvn	r0, #0
   21b88:	mov	r1, #1
   21b8c:	mov	r2, #0
   21b90:	mov	r3, #1
   21b94:	str	r1, [sp]
   21b98:	str	r0, [sp, #4]
   21b9c:	mov	r0, r4
   21ba0:	mov	r1, #24
   21ba4:	bl	3437c <flatcc_verify_vector_field@@Base>
   21ba8:	cmp	r0, #0
   21bac:	bne	21ea0 <main@@Base+0xbc44>
   21bb0:	mvn	r0, #-536870912	; 0xe0000000
   21bb4:	mov	r1, #4
   21bb8:	mov	r2, #0
   21bbc:	mov	r3, #8
   21bc0:	str	r1, [sp]
   21bc4:	str	r0, [sp, #4]
   21bc8:	mov	r0, r4
   21bcc:	mov	r1, #29
   21bd0:	bl	3437c <flatcc_verify_vector_field@@Base>
   21bd4:	cmp	r0, #0
   21bd8:	bne	21ea0 <main@@Base+0xbc44>
   21bdc:	ldr	r5, [pc, #744]	; 21ecc <main@@Base+0xbc70>
   21be0:	mov	r0, r4
   21be4:	mov	r1, #12
   21be8:	mov	r2, #0
   21bec:	add	r5, pc, r5
   21bf0:	mov	r3, r5
   21bf4:	bl	345fc <flatcc_verify_table_field@@Base>
   21bf8:	cmp	r0, #0
   21bfc:	bne	21ea0 <main@@Base+0xbc44>
   21c00:	ldr	r3, [pc, #712]	; 21ed0 <main@@Base+0xbc74>
   21c04:	mov	r0, r4
   21c08:	mov	r1, #8
   21c0c:	mov	r2, #0
   21c10:	add	r3, pc, r3
   21c14:	bl	3558c <flatcc_verify_union_field@@Base>
   21c18:	cmp	r0, #0
   21c1c:	bne	21ea0 <main@@Base+0xbc44>
   21c20:	mvn	r6, #-1073741824	; 0xc0000000
   21c24:	mov	r7, #2
   21c28:	mov	r0, r4
   21c2c:	mov	r1, #9
   21c30:	mov	r2, #0
   21c34:	mov	r3, #4
   21c38:	str	r7, [sp]
   21c3c:	str	r6, [sp, #4]
   21c40:	bl	3437c <flatcc_verify_vector_field@@Base>
   21c44:	cmp	r0, #0
   21c48:	bne	21ea0 <main@@Base+0xbc44>
   21c4c:	mov	r0, r4
   21c50:	mov	r1, #31
   21c54:	mov	r2, #0
   21c58:	mov	r3, #4
   21c5c:	str	r7, [sp]
   21c60:	str	r6, [sp, #4]
   21c64:	bl	3437c <flatcc_verify_vector_field@@Base>
   21c68:	cmp	r0, #0
   21c6c:	bne	21ea0 <main@@Base+0xbc44>
   21c70:	mov	r0, #1
   21c74:	mov	r1, #13
   21c78:	mov	r2, #0
   21c7c:	mov	r3, #0
   21c80:	stm	sp, {r0, r5}
   21c84:	mov	r0, r4
   21c88:	bl	3526c <flatcc_verify_table_as_nested_root@@Base>
   21c8c:	cmp	r0, #0
   21c90:	bne	21ea0 <main@@Base+0xbc44>
   21c94:	ldr	r3, [pc, #568]	; 21ed4 <main@@Base+0xbc78>
   21c98:	mov	r0, r4
   21c9c:	mov	r1, #14
   21ca0:	mov	r2, #0
   21ca4:	add	r3, pc, r3
   21ca8:	bl	345fc <flatcc_verify_table_field@@Base>
   21cac:	cmp	r0, #0
   21cb0:	bne	21ea0 <main@@Base+0xbc44>
   21cb4:	mov	r0, r4
   21cb8:	mov	r1, #15
   21cbc:	mov	r2, #1
   21cc0:	mov	r3, #1
   21cc4:	bl	34218 <flatcc_verify_field@@Base>
   21cc8:	cmp	r0, #0
   21ccc:	bne	21ea0 <main@@Base+0xbc44>
   21cd0:	mov	r0, r4
   21cd4:	mov	r1, #16
   21cd8:	mov	r2, #4
   21cdc:	mov	r3, #4
   21ce0:	bl	34218 <flatcc_verify_field@@Base>
   21ce4:	cmp	r0, #0
   21ce8:	bne	21ea0 <main@@Base+0xbc44>
   21cec:	mov	r0, r4
   21cf0:	mov	r1, #17
   21cf4:	mov	r2, #4
   21cf8:	mov	r3, #4
   21cfc:	bl	34218 <flatcc_verify_field@@Base>
   21d00:	cmp	r0, #0
   21d04:	bne	21ea0 <main@@Base+0xbc44>
   21d08:	mov	r0, r4
   21d0c:	mov	r1, #18
   21d10:	mov	r2, #8
   21d14:	mov	r3, #8
   21d18:	bl	34218 <flatcc_verify_field@@Base>
   21d1c:	cmp	r0, #0
   21d20:	bne	21ea0 <main@@Base+0xbc44>
   21d24:	mov	r0, r4
   21d28:	mov	r1, #19
   21d2c:	mov	r2, #8
   21d30:	mov	r3, #8
   21d34:	bl	34218 <flatcc_verify_field@@Base>
   21d38:	cmp	r0, #0
   21d3c:	bne	21ea0 <main@@Base+0xbc44>
   21d40:	mov	r0, r4
   21d44:	mov	r1, #20
   21d48:	mov	r2, #4
   21d4c:	mov	r3, #4
   21d50:	bl	34218 <flatcc_verify_field@@Base>
   21d54:	cmp	r0, #0
   21d58:	bne	21ea0 <main@@Base+0xbc44>
   21d5c:	mov	r0, r4
   21d60:	mov	r1, #21
   21d64:	mov	r2, #4
   21d68:	mov	r3, #4
   21d6c:	bl	34218 <flatcc_verify_field@@Base>
   21d70:	cmp	r0, #0
   21d74:	bne	21ea0 <main@@Base+0xbc44>
   21d78:	mov	r0, r4
   21d7c:	mov	r1, #22
   21d80:	mov	r2, #8
   21d84:	mov	r3, #8
   21d88:	bl	34218 <flatcc_verify_field@@Base>
   21d8c:	cmp	r0, #0
   21d90:	bne	21ea0 <main@@Base+0xbc44>
   21d94:	mov	r0, r4
   21d98:	mov	r1, #23
   21d9c:	mov	r2, #8
   21da0:	mov	r3, #8
   21da4:	bl	34218 <flatcc_verify_field@@Base>
   21da8:	cmp	r0, #0
   21dac:	bne	21ea0 <main@@Base+0xbc44>
   21db0:	mov	r0, r4
   21db4:	mov	r1, #25
   21db8:	mov	r2, #4
   21dbc:	mov	r3, #4
   21dc0:	bl	34218 <flatcc_verify_field@@Base>
   21dc4:	cmp	r0, #0
   21dc8:	bne	21ea0 <main@@Base+0xbc44>
   21dcc:	mov	r0, r4
   21dd0:	mov	r1, #26
   21dd4:	mov	r2, #4
   21dd8:	mov	r3, #4
   21ddc:	bl	34218 <flatcc_verify_field@@Base>
   21de0:	cmp	r0, #0
   21de4:	bne	21ea0 <main@@Base+0xbc44>
   21de8:	mov	r0, r4
   21dec:	mov	r1, #27
   21df0:	mov	r2, #4
   21df4:	mov	r3, #4
   21df8:	bl	34218 <flatcc_verify_field@@Base>
   21dfc:	cmp	r0, #0
   21e00:	bne	21ea0 <main@@Base+0xbc44>
   21e04:	mvn	r0, #0
   21e08:	mov	r1, #1
   21e0c:	mov	r2, #0
   21e10:	mov	r3, #1
   21e14:	str	r1, [sp]
   21e18:	str	r0, [sp, #4]
   21e1c:	mov	r0, r4
   21e20:	mov	r1, #30
   21e24:	bl	3437c <flatcc_verify_vector_field@@Base>
   21e28:	cmp	r0, #0
   21e2c:	bne	21ea0 <main@@Base+0xbc44>
   21e30:	mvn	r5, #-536870912	; 0xe0000000
   21e34:	mov	r6, #8
   21e38:	mov	r0, r4
   21e3c:	mov	r1, #32
   21e40:	mov	r2, #0
   21e44:	mov	r3, #8
   21e48:	str	r6, [sp]
   21e4c:	str	r5, [sp, #4]
   21e50:	bl	3437c <flatcc_verify_vector_field@@Base>
   21e54:	cmp	r0, #0
   21e58:	bne	21ea0 <main@@Base+0xbc44>
   21e5c:	mov	r0, r4
   21e60:	mov	r1, #33	; 0x21
   21e64:	mov	r2, #0
   21e68:	mov	r3, #8
   21e6c:	str	r6, [sp]
   21e70:	str	r5, [sp, #4]
   21e74:	bl	3437c <flatcc_verify_vector_field@@Base>
   21e78:	cmp	r0, #0
   21e7c:	bne	21ea0 <main@@Base+0xbc44>
   21e80:	ldr	r3, [pc, #80]	; 21ed8 <main@@Base+0xbc7c>
   21e84:	mov	r0, r4
   21e88:	mov	r1, #34	; 0x22
   21e8c:	mov	r2, #0
   21e90:	add	r3, pc, r3
   21e94:	bl	345fc <flatcc_verify_table_field@@Base>
   21e98:	cmp	r0, #0
   21e9c:	beq	21ea8 <main@@Base+0xbc4c>
   21ea0:	sub	sp, fp, #16
   21ea4:	pop	{r4, r5, r6, r7, fp, pc}
   21ea8:	ldr	r3, [pc, #44]	; 21edc <main@@Base+0xbc80>
   21eac:	mov	r0, r4
   21eb0:	mov	r1, #35	; 0x23
   21eb4:	mov	r2, #0
   21eb8:	add	r3, pc, r3
   21ebc:	sub	sp, fp, #16
   21ec0:	pop	{r4, r5, r6, r7, fp, lr}
   21ec4:	b	345fc <flatcc_verify_table_field@@Base>
   21ec8:			; <UNDEFINED> instruction: 0xffffff28
   21ecc:			; <UNDEFINED> instruction: 0xfffffe80
   21ed0:	muleq	r0, r4, ip
   21ed4:	andeq	ip, r0, r0, lsr ip
   21ed8:	muleq	r0, ip, sl
   21edc:	andeq	ip, r0, ip, ror sl
   21ee0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21ee4:	add	fp, sp, #28
   21ee8:	sub	sp, sp, #12
   21eec:	mov	r5, r1
   21ef0:	sub	r1, r2, r1
   21ef4:	cmp	r1, #8
   21ef8:	movcs	r1, #8
   21efc:	sub	r1, r1, #1
   21f00:	cmp	r1, #7
   21f04:	bhi	22078 <main@@Base+0xbe1c>
   21f08:	str	r3, [sp, #8]
   21f0c:	add	r4, pc, #36	; 0x24
   21f10:	mov	r9, #0
   21f14:	mov	ip, #0
   21f18:	mov	lr, #0
   21f1c:	mov	sl, #0
   21f20:	mov	r6, #0
   21f24:	mov	r7, #0
   21f28:	mov	r3, #0
   21f2c:	ldr	r8, [r4, r1, lsl #2]
   21f30:	mov	r1, #0
   21f34:	add	pc, r4, r8
   21f38:	andeq	r0, r0, r4, rrx
   21f3c:	andeq	r0, r0, ip, asr r0
   21f40:	andeq	r0, r0, r4, asr r0
   21f44:	andeq	r0, r0, ip, asr #32
   21f48:	andeq	r0, r0, r0, asr #32
   21f4c:	andeq	r0, r0, r4, lsr r0
   21f50:	andeq	r0, r0, r4, lsr #32
   21f54:	andeq	r0, r0, r0, lsr #32
   21f58:	ldrb	ip, [r5, #7]
   21f5c:	ldrb	r1, [r5, #6]
   21f60:	mov	lr, r9
   21f64:	orr	r1, ip, r1, lsl #8
   21f68:	mov	r9, r1
   21f6c:	ldrb	r1, [r5, #5]
   21f70:	mov	sl, lr
   21f74:	orr	r9, r9, r1, lsl #16
   21f78:	ldrb	r1, [r5, #4]
   21f7c:	mov	r6, sl
   21f80:	orr	r9, r9, r1, lsl #24
   21f84:	ldrb	r1, [r5, #3]
   21f88:	orr	r7, r1, r6
   21f8c:	ldrb	r1, [r5, #2]
   21f90:	orr	r3, r7, r1, lsl #8
   21f94:	ldrb	r1, [r5, #1]
   21f98:	orr	r1, r3, r1, lsl #16
   21f9c:	ldrb	r7, [r5]
   21fa0:	ldr	r3, [fp, #12]
   21fa4:	ldr	r8, [fp, #8]
   21fa8:	orr	r4, r1, r7, lsl #24
   21fac:	movw	r7, #25957	; 0x6565
   21fb0:	mvn	r1, #-1845493760	; 0x92000000
   21fb4:	movt	r7, #18290	; 0x4772
   21fb8:	subs	r1, r1, r9
   21fbc:	sbcs	r1, r7, r4
   21fc0:	bcc	21ff8 <main@@Base+0xbd9c>
   21fc4:	movw	r1, #30053	; 0x7565
   21fc8:	movt	r1, #17004	; 0x426c
   21fcc:	teq	r4, r1
   21fd0:	bne	22078 <main@@Base+0xbe1c>
   21fd4:	str	r3, [sp]
   21fd8:	mov	r1, r5
   21fdc:	mov	r3, #4
   21fe0:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   21fe4:	cmp	r0, r5
   21fe8:	beq	22078 <main@@Base+0xbe1c>
   21fec:	mov	r1, #0
   21ff0:	mov	r2, #8
   21ff4:	b	22064 <main@@Base+0xbe08>
   21ff8:	movw	r6, #25600	; 0x6400
   21ffc:	bic	r1, r4, #255	; 0xff
   22000:	movt	r6, #21093	; 0x5265
   22004:	teq	r1, r6
   22008:	bne	22030 <main@@Base+0xbdd4>
   2200c:	str	r3, [sp]
   22010:	mov	r1, r5
   22014:	mov	r3, #3
   22018:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   2201c:	cmp	r0, r5
   22020:	beq	22078 <main@@Base+0xbe1c>
   22024:	mov	r1, #0
   22028:	mov	r2, #1
   2202c:	b	22064 <main@@Base+0xbe08>
   22030:	eor	r1, r4, r7
   22034:	and	r7, r9, #-16777216	; 0xff000000
   22038:	eor	r7, r7, #1845493760	; 0x6e000000
   2203c:	orrs	r1, r7, r1
   22040:	bne	22078 <main@@Base+0xbe1c>
   22044:	str	r3, [sp]
   22048:	mov	r1, r5
   2204c:	mov	r3, #5
   22050:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   22054:	cmp	r0, r5
   22058:	beq	22078 <main@@Base+0xbe1c>
   2205c:	mov	r1, #0
   22060:	mov	r2, #2
   22064:	str	r2, [r8]
   22068:	str	r1, [r8, #4]
   2206c:	mov	r5, r0
   22070:	ldr	r2, [sp, #8]
   22074:	str	r1, [r2]
   22078:	mov	r0, r5
   2207c:	sub	sp, fp, #28
   22080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22084:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22088:	add	fp, sp, #28
   2208c:	sub	sp, sp, #20
   22090:	sub	sl, r2, r1
   22094:	cmp	sl, #8
   22098:	mov	r7, sl
   2209c:	movcs	r7, #8
   220a0:	sub	r7, r7, #1
   220a4:	cmp	r7, #7
   220a8:	bhi	224ac <main@@Base+0xc250>
   220ac:	str	r0, [sp, #16]
   220b0:	str	r3, [sp, #12]
   220b4:	mov	r4, #0
   220b8:	mov	lr, #0
   220bc:	mov	r6, #0
   220c0:	mov	r3, #0
   220c4:	mov	r5, #0
   220c8:	mov	r8, #0
   220cc:	mov	r9, #0
   220d0:	ldr	r0, [fp, #12]
   220d4:	str	r0, [sp, #8]
   220d8:	ldr	r0, [fp, #8]
   220dc:	str	r0, [sp, #4]
   220e0:	add	ip, pc, #8
   220e4:	ldr	r0, [ip, r7, lsl #2]
   220e8:	mov	r7, #0
   220ec:	add	pc, ip, r0
   220f0:	andeq	r0, r0, r4, rrx
   220f4:	andeq	r0, r0, ip, asr r0
   220f8:	andeq	r0, r0, r4, asr r0
   220fc:	andeq	r0, r0, ip, asr #32
   22100:	andeq	r0, r0, r0, asr #32
   22104:	andeq	r0, r0, r4, lsr r0
   22108:	andeq	r0, r0, r4, lsr #32
   2210c:	andeq	r0, r0, r0, lsr #32
   22110:	ldrb	lr, [r1, #7]
   22114:	ldrb	r0, [r1, #6]
   22118:	mov	r7, r4
   2211c:	orr	r0, lr, r0, lsl #8
   22120:	mov	r4, r0
   22124:	ldrb	r0, [r1, #5]
   22128:	mov	r6, r7
   2212c:	orr	r4, r4, r0, lsl #16
   22130:	ldrb	r0, [r1, #4]
   22134:	mov	r3, r6
   22138:	orr	r4, r4, r0, lsl #24
   2213c:	ldrb	r0, [r1, #3]
   22140:	orr	r5, r0, r3
   22144:	ldrb	r0, [r1, #2]
   22148:	orr	r8, r5, r0, lsl #8
   2214c:	ldrb	r0, [r1, #1]
   22150:	orr	r9, r8, r0, lsl #16
   22154:	ldrb	r0, [r1]
   22158:	movw	lr, #30061	; 0x756d
   2215c:	movw	r3, #30815	; 0x785f
   22160:	movt	lr, #25966	; 0x656e
   22164:	movt	r3, #26725	; 0x6865
   22168:	orr	r6, r9, r0, lsl #24
   2216c:	subs	r0, r4, lr
   22170:	sbcs	r0, r6, r3
   22174:	bcs	221dc <main@@Base+0xbf80>
   22178:	movw	r3, #27759	; 0x6c6f
   2217c:	mvn	r0, #-1912602624	; 0x8e000000
   22180:	bic	r7, r6, #255	; 0xff
   22184:	movt	r3, #17263	; 0x436f
   22188:	subs	r0, r0, r4
   2218c:	sbcs	r0, r3, r6
   22190:	bcc	22238 <main@@Base+0xbfdc>
   22194:	cmp	sl, #4
   22198:	blt	224ac <main@@Base+0xc250>
   2219c:	movw	r0, #30976	; 0x7900
   221a0:	movt	r0, #16750	; 0x416e
   221a4:	teq	r7, r0
   221a8:	bne	224ac <main@@Base+0xc250>
   221ac:	ldrb	r0, [r1, #3]
   221b0:	mov	r3, r1
   221b4:	cmp	r0, #46	; 0x2e
   221b8:	addeq	r3, r3, #4
   221bc:	cmp	r3, r1
   221c0:	beq	224ac <main@@Base+0xc250>
   221c4:	mov	r1, r3
   221c8:	ldr	r0, [sp, #16]
   221cc:	ldr	r3, [sp, #12]
   221d0:	sub	sp, fp, #28
   221d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   221d8:	b	251b8 <main@@Base+0xef5c>
   221dc:	add	r0, r3, #64512	; 0xfc00
   221e0:	add	r7, r0, #17301504	; 0x1080000
   221e4:	subs	r0, r4, lr
   221e8:	sbcs	r0, r6, r7
   221ec:	bcs	22280 <main@@Base+0xc024>
   221f0:	cmp	sl, #9
   221f4:	blt	224ac <main@@Base+0xc250>
   221f8:	eor	r0, r4, lr
   221fc:	eor	r3, r6, r3
   22200:	orrs	r0, r0, r3
   22204:	bne	224ac <main@@Base+0xc250>
   22208:	ldrb	r0, [r1, #8]
   2220c:	mov	r3, r1
   22210:	cmp	r0, #46	; 0x2e
   22214:	addeq	r3, r3, #9
   22218:	cmp	r3, r1
   2221c:	beq	224ac <main@@Base+0xc250>
   22220:	mov	r1, r3
   22224:	ldr	r0, [sp, #16]
   22228:	ldr	r3, [sp, #12]
   2222c:	sub	sp, fp, #28
   22230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22234:	b	265a0 <main@@Base+0x10344>
   22238:	movw	r0, #28416	; 0x6f00
   2223c:	movt	r0, #18031	; 0x466f
   22240:	teq	r7, r0
   22244:	bne	222dc <main@@Base+0xc080>
   22248:	cmp	sl, #4
   2224c:	blt	224ac <main@@Base+0xc250>
   22250:	ldrb	r0, [r1, #3]
   22254:	mov	r3, r1
   22258:	cmp	r0, #46	; 0x2e
   2225c:	addeq	r3, r3, #4
   22260:	cmp	r3, r1
   22264:	beq	224ac <main@@Base+0xc250>
   22268:	mov	r1, r3
   2226c:	ldr	r0, [sp, #16]
   22270:	ldr	r3, [sp, #12]
   22274:	sub	sp, fp, #28
   22278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2227c:	b	26338 <main@@Base+0x100dc>
   22280:	sub	r0, r3, #4352	; 0x1100
   22284:	subs	r3, r4, lr
   22288:	sub	r0, r0, #-100663296	; 0xfa000000
   2228c:	sbcs	r0, r6, r0
   22290:	bcs	22328 <main@@Base+0xc0cc>
   22294:	cmp	sl, #9
   22298:	blt	224ac <main@@Base+0xc250>
   2229c:	eor	r0, r4, lr
   222a0:	eor	r3, r6, r7
   222a4:	orrs	r0, r0, r3
   222a8:	bne	224ac <main@@Base+0xc250>
   222ac:	ldrb	r0, [r1, #8]
   222b0:	mov	r3, r1
   222b4:	cmp	r0, #46	; 0x2e
   222b8:	addeq	r3, r3, #9
   222bc:	cmp	r3, r1
   222c0:	beq	224ac <main@@Base+0xc250>
   222c4:	mov	r1, r3
   222c8:	ldr	r0, [sp, #16]
   222cc:	ldr	r3, [sp, #12]
   222d0:	sub	sp, fp, #28
   222d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   222d8:	b	26750 <main@@Base+0x104f4>
   222dc:	cmp	sl, #6
   222e0:	blt	224ac <main@@Base+0xc250>
   222e4:	and	r0, r4, #-16777216	; 0xff000000
   222e8:	eor	r3, r6, r3
   222ec:	eor	r0, r0, #1912602624	; 0x72000000
   222f0:	orrs	r0, r0, r3
   222f4:	bne	224ac <main@@Base+0xc250>
   222f8:	ldrb	r0, [r1, #5]
   222fc:	mov	r3, r1
   22300:	cmp	r0, #46	; 0x2e
   22304:	addeq	r3, r3, #6
   22308:	cmp	r3, r1
   2230c:	beq	224ac <main@@Base+0xc250>
   22310:	mov	r1, r3
   22314:	ldr	r0, [sp, #16]
   22318:	ldr	r3, [sp, #12]
   2231c:	sub	sp, fp, #28
   22320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22324:	b	21ee0 <main@@Base+0xbc84>
   22328:	movw	r0, #29817	; 0x7479
   2232c:	movw	r3, #29797	; 0x7465
   22330:	movt	r0, #28016	; 0x6d70
   22334:	movt	r3, #28271	; 0x6e6f
   22338:	eor	r0, r4, r0
   2233c:	eor	r3, r6, r3
   22340:	orrs	r0, r0, r3
   22344:	beq	22398 <main@@Base+0xc13c>
   22348:	movw	r3, #26463	; 0x675f
   2234c:	eor	r0, r4, lr
   22350:	movt	r3, #28261	; 0x6e65
   22354:	eor	r3, r6, r3
   22358:	orrs	r0, r0, r3
   2235c:	bne	224ac <main@@Base+0xc250>
   22360:	cmp	sl, #9
   22364:	blt	224ac <main@@Base+0xc250>
   22368:	ldrb	r0, [r1, #8]
   2236c:	mov	r3, r1
   22370:	cmp	r0, #46	; 0x2e
   22374:	addeq	r3, r3, #9
   22378:	cmp	r3, r1
   2237c:	beq	224ac <main@@Base+0xc250>
   22380:	mov	r1, r3
   22384:	ldr	r0, [sp, #16]
   22388:	ldr	r3, [sp, #12]
   2238c:	sub	sp, fp, #28
   22390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22394:	b	26944 <main@@Base+0x106e8>
   22398:	add	ip, r1, #8
   2239c:	sub	r5, r2, ip
   223a0:	cmp	r5, #8
   223a4:	mov	r0, r5
   223a8:	movcs	r0, #8
   223ac:	sub	r3, r0, #1
   223b0:	cmp	r3, #7
   223b4:	bhi	224ac <main@@Base+0xc250>
   223b8:	add	r0, pc, #20
   223bc:	mov	r8, #0
   223c0:	mov	r4, #0
   223c4:	mov	r7, #0
   223c8:	ldr	r6, [r0, r3, lsl #2]
   223cc:	mov	r3, #0
   223d0:	add	pc, r0, r6
   223d4:	andeq	r0, r0, r8, lsr r0
   223d8:	andeq	r0, r0, r0, lsr r0
   223dc:	andeq	r0, r0, r8, lsr #32
   223e0:	andeq	r0, r0, r0, lsr #32
   223e4:	andeq	r0, r0, r0, lsr #32
   223e8:	andeq	r0, r0, r0, lsr #32
   223ec:	andeq	r0, r0, r0, lsr #32
   223f0:	andeq	r0, r0, r0, lsr #32
   223f4:	ldrb	r3, [r1, #11]
   223f8:	mov	r8, #0
   223fc:	ldrb	r0, [r1, #10]
   22400:	orr	r4, r3, r0, lsl #8
   22404:	ldrb	r0, [r1, #9]
   22408:	orr	r7, r4, r0, lsl #16
   2240c:	cmp	r5, #5
   22410:	blt	224ac <main@@Base+0xc250>
   22414:	ldrb	r0, [ip]
   22418:	orr	r0, r7, r0, lsl #24
   2241c:	eor	r0, r0, lr
   22420:	orrs	r0, r8, r0
   22424:	bne	224ac <main@@Base+0xc250>
   22428:	ldrb	r0, [r1, #12]
   2242c:	mov	r5, ip
   22430:	cmp	r0, #46	; 0x2e
   22434:	addeq	r5, r1, #13
   22438:	cmp	r5, ip
   2243c:	beq	224ac <main@@Base+0xc250>
   22440:	sub	r0, r2, r5
   22444:	cmp	r0, #8
   22448:	movcs	r0, #8
   2244c:	sub	r0, r0, #1
   22450:	cmp	r0, #7
   22454:	bhi	224a8 <main@@Base+0xc24c>
   22458:	ldrb	r0, [r5]
   2245c:	cmp	r0, #120	; 0x78
   22460:	bne	224a8 <main@@Base+0xc24c>
   22464:	ldr	r0, [sp, #8]
   22468:	mov	r1, r5
   2246c:	mov	r3, #1
   22470:	str	r0, [sp]
   22474:	ldr	r0, [sp, #16]
   22478:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   2247c:	cmp	r0, r5
   22480:	mov	r1, r5
   22484:	beq	224ac <main@@Base+0xc250>
   22488:	ldr	r2, [sp, #4]
   2248c:	mov	r1, #0
   22490:	str	r1, [r2]
   22494:	str	r1, [r2, #4]
   22498:	ldr	r2, [sp, #12]
   2249c:	str	r1, [r2]
   224a0:	mov	r1, r0
   224a4:	b	224ac <main@@Base+0xc250>
   224a8:	mov	r1, r5
   224ac:	mov	r0, r1
   224b0:	sub	sp, fp, #28
   224b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   224b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   224bc:	add	fp, sp, #28
   224c0:	sub	sp, sp, #28
   224c4:	mov	r8, r2
   224c8:	sub	r2, r2, r1
   224cc:	cmp	r2, #8
   224d0:	movcs	r2, #8
   224d4:	sub	r2, r2, #1
   224d8:	cmp	r2, #7
   224dc:	bhi	23388 <main@@Base+0xd12c>
   224e0:	str	r0, [sp, #24]
   224e4:	mov	r0, #0
   224e8:	mov	ip, #0
   224ec:	mov	lr, #0
   224f0:	mov	sl, #0
   224f4:	mov	r6, #0
   224f8:	mov	r5, #0
   224fc:	ldr	r7, [fp, #12]
   22500:	str	r7, [sp, #20]
   22504:	ldr	r7, [fp, #8]
   22508:	str	r7, [sp, #16]
   2250c:	add	r4, pc, #12
   22510:	mov	r7, #0
   22514:	ldr	r9, [r4, r2, lsl #2]
   22518:	mov	r2, #0
   2251c:	add	pc, r4, r9
   22520:	andeq	r0, r0, r4, rrx
   22524:	andeq	r0, r0, ip, asr r0
   22528:	andeq	r0, r0, r4, asr r0
   2252c:	andeq	r0, r0, ip, asr #32
   22530:	andeq	r0, r0, r0, asr #32
   22534:	andeq	r0, r0, r4, lsr r0
   22538:	andeq	r0, r0, r4, lsr #32
   2253c:	andeq	r0, r0, r0, lsr #32
   22540:	ldrb	ip, [r1, #7]
   22544:	ldrb	r2, [r1, #6]
   22548:	mov	lr, r0
   2254c:	orr	r2, ip, r2, lsl #8
   22550:	mov	r0, r2
   22554:	ldrb	r2, [r1, #5]
   22558:	mov	sl, lr
   2255c:	orr	r0, r0, r2, lsl #16
   22560:	ldrb	r2, [r1, #4]
   22564:	mov	r6, sl
   22568:	orr	r0, r0, r2, lsl #24
   2256c:	ldrb	r2, [r1, #3]
   22570:	orr	r7, r2, r6
   22574:	ldrb	r2, [r1, #2]
   22578:	orr	r5, r7, r2, lsl #8
   2257c:	ldrb	r2, [r1, #1]
   22580:	orr	r2, r5, r2, lsl #16
   22584:	ldrb	r7, [r1]
   22588:	movw	r6, #18273	; 0x4761
   2258c:	movt	r6, #19833	; 0x4d79
   22590:	orr	r2, r2, r7, lsl #24
   22594:	movw	r7, #11844	; 0x2e44
   22598:	movt	r7, #28005	; 0x6d65
   2259c:	subs	r7, r7, r0
   225a0:	sbcs	r7, r6, r2
   225a4:	bcc	22708 <main@@Base+0xc4ac>
   225a8:	movw	r7, #31022	; 0x792e
   225ac:	movt	r7, #24947	; 0x6173
   225b0:	eor	r0, r0, r7
   225b4:	movw	r7, #28276	; 0x6e74
   225b8:	movt	r7, #18017	; 0x4661
   225bc:	eor	r2, r2, r7
   225c0:	orrs	r0, r0, r2
   225c4:	bne	23388 <main@@Base+0xd12c>
   225c8:	add	lr, r1, #8
   225cc:	sub	r0, r8, lr
   225d0:	cmp	r0, #8
   225d4:	movcs	r0, #8
   225d8:	sub	r0, r0, #1
   225dc:	cmp	r0, #7
   225e0:	bhi	23388 <main@@Base+0xd12c>
   225e4:	str	r3, [sp, #12]
   225e8:	add	r5, pc, #36	; 0x24
   225ec:	mov	sl, #0
   225f0:	mov	ip, #0
   225f4:	mov	r9, #0
   225f8:	mov	r6, #0
   225fc:	mov	r7, #0
   22600:	mov	r4, #0
   22604:	mov	r3, #0
   22608:	ldr	r2, [r5, r0, lsl #2]
   2260c:	mov	r0, #0
   22610:	add	pc, r5, r2
   22614:	andeq	r0, r0, r4, rrx
   22618:	andeq	r0, r0, ip, asr r0
   2261c:	andeq	r0, r0, r4, asr r0
   22620:	andeq	r0, r0, ip, asr #32
   22624:	andeq	r0, r0, r0, asr #32
   22628:	andeq	r0, r0, r4, lsr r0
   2262c:	andeq	r0, r0, r4, lsr #32
   22630:	andeq	r0, r0, r0, lsr #32
   22634:	ldrb	ip, [r1, #15]
   22638:	ldrb	r0, [r1, #14]
   2263c:	mov	r9, sl
   22640:	orr	r0, ip, r0, lsl #8
   22644:	mov	sl, r0
   22648:	ldrb	r0, [r1, #13]
   2264c:	mov	r6, r9
   22650:	orr	sl, sl, r0, lsl #16
   22654:	ldrb	r0, [r1, #12]
   22658:	mov	r7, r6
   2265c:	orr	sl, sl, r0, lsl #24
   22660:	ldrb	r0, [r1, #11]
   22664:	orr	r4, r0, r7
   22668:	ldrb	r0, [r1, #10]
   2266c:	orr	r3, r4, r0, lsl #8
   22670:	ldrb	r0, [r1, #9]
   22674:	orr	r0, r3, r0, lsl #16
   22678:	ldrb	r3, [lr]
   2267c:	movw	r2, #29797	; 0x7465
   22680:	movt	r2, #24931	; 0x6163
   22684:	eor	r2, sl, r2
   22688:	orr	r0, r0, r3, lsl #24
   2268c:	movw	r3, #24946	; 0x6172
   22690:	movt	r3, #17256	; 0x4368
   22694:	eor	r0, r0, r3
   22698:	orrs	r0, r2, r0
   2269c:	bne	23388 <main@@Base+0xd12c>
   226a0:	add	r0, r1, #16
   226a4:	sub	r2, r8, r0
   226a8:	cmp	r2, #8
   226ac:	mov	r3, r2
   226b0:	movcs	r3, #8
   226b4:	sub	r3, r3, #1
   226b8:	cmp	r3, #7
   226bc:	bhi	23388 <main@@Base+0xd12c>
   226c0:	cmp	r2, #2
   226c4:	blt	23388 <main@@Base+0xd12c>
   226c8:	ldrb	r2, [r0]
   226cc:	cmp	r2, #114	; 0x72
   226d0:	bne	23388 <main@@Base+0xd12c>
   226d4:	ldrb	r2, [r1, #17]
   226d8:	ldr	r3, [sp, #12]
   226dc:	cmp	r2, #46	; 0x2e
   226e0:	mov	r2, r0
   226e4:	addeq	r2, r1, #18
   226e8:	cmp	r2, r0
   226ec:	beq	23388 <main@@Base+0xd12c>
   226f0:	ldr	r0, [sp, #24]
   226f4:	mov	r1, r2
   226f8:	mov	r2, r8
   226fc:	sub	sp, fp, #28
   22700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22704:	b	26a90 <main@@Base+0x10834>
   22708:	movw	r7, #11855	; 0x2e4f
   2270c:	eor	r2, r2, r6
   22710:	movt	r7, #28005	; 0x6d65
   22714:	eor	r7, r0, r7
   22718:	orrs	r7, r7, r2
   2271c:	beq	228b8 <main@@Base+0xc65c>
   22720:	movw	r7, #11845	; 0x2e45
   22724:	movt	r7, #28005	; 0x6d65
   22728:	eor	r0, r0, r7
   2272c:	orrs	r0, r0, r2
   22730:	bne	23388 <main@@Base+0xd12c>
   22734:	add	lr, r1, #8
   22738:	sub	r0, r8, lr
   2273c:	cmp	r0, #8
   22740:	movcs	r0, #8
   22744:	sub	r2, r0, #1
   22748:	cmp	r2, #7
   2274c:	bhi	23388 <main@@Base+0xd12c>
   22750:	str	r3, [sp, #12]
   22754:	add	r5, pc, #36	; 0x24
   22758:	mov	r0, #0
   2275c:	mov	ip, #0
   22760:	mov	r9, #0
   22764:	mov	r7, #0
   22768:	mov	r6, #0
   2276c:	mov	r4, #0
   22770:	mov	r3, #0
   22774:	ldr	sl, [r5, r2, lsl #2]
   22778:	mov	r2, #0
   2277c:	add	pc, r5, sl
   22780:	andeq	r0, r0, r4, rrx
   22784:	andeq	r0, r0, ip, asr r0
   22788:	andeq	r0, r0, r4, asr r0
   2278c:	andeq	r0, r0, ip, asr #32
   22790:	andeq	r0, r0, r0, asr #32
   22794:	andeq	r0, r0, r4, lsr r0
   22798:	andeq	r0, r0, r4, lsr #32
   2279c:	andeq	r0, r0, r0, lsr #32
   227a0:	ldrb	ip, [r1, #15]
   227a4:	ldrb	r2, [r1, #14]
   227a8:	mov	r9, r0
   227ac:	orr	r2, ip, r2, lsl #8
   227b0:	mov	r0, r2
   227b4:	ldrb	r2, [r1, #13]
   227b8:	mov	r7, r9
   227bc:	orr	r0, r0, r2, lsl #16
   227c0:	ldrb	r2, [r1, #12]
   227c4:	mov	r6, r7
   227c8:	orr	r0, r0, r2, lsl #24
   227cc:	ldrb	r2, [r1, #11]
   227d0:	orr	r4, r2, r6
   227d4:	ldrb	r2, [r1, #10]
   227d8:	orr	r3, r4, r2, lsl #8
   227dc:	ldrb	r2, [r1, #9]
   227e0:	orr	r2, r3, r2, lsl #16
   227e4:	ldrb	r3, [lr]
   227e8:	movw	r6, #11880	; 0x2e68
   227ec:	movt	r6, #27749	; 0x6c65
   227f0:	subs	r7, r0, r6
   227f4:	orr	r2, r2, r3, lsl #24
   227f8:	movw	r3, #28016	; 0x6d70
   227fc:	movt	r3, #30817	; 0x7861
   22800:	sbcs	r7, r2, r3
   22804:	bcs	22c84 <main@@Base+0xca28>
   22808:	ldr	lr, [sp, #12]
   2280c:	subs	r7, r6, #37	; 0x25
   22810:	sbc	r5, r3, #0
   22814:	subs	r7, r0, r7
   22818:	sbcs	r7, r2, r5
   2281c:	bcs	22da0 <main@@Base+0xcb44>
   22820:	subs	r7, r6, #39	; 0x27
   22824:	sbc	r3, r3, #0
   22828:	eor	r0, r0, r7
   2282c:	eor	r2, r2, r3
   22830:	orrs	r0, r0, r2
   22834:	bne	23388 <main@@Base+0xd12c>
   22838:	add	r0, r1, #16
   2283c:	sub	r6, r8, r0
   22840:	cmp	r6, #8
   22844:	mov	r2, r6
   22848:	movcs	r2, #8
   2284c:	sub	r3, r2, #2
   22850:	cmp	r3, #7
   22854:	bcs	2326c <main@@Base+0xd010>
   22858:	ldrb	r2, [r1, #17]
   2285c:	mov	r3, #0
   22860:	lsl	r7, r2, #16
   22864:	cmp	r6, #3
   22868:	blt	23388 <main@@Base+0xd12c>
   2286c:	ldrb	r2, [r0]
   22870:	orr	r2, r7, r2, lsl #24
   22874:	eor	r2, r2, #7929856	; 0x790000
   22878:	eor	r2, r2, #1845493760	; 0x6e000000
   2287c:	orrs	r2, r3, r2
   22880:	bne	23388 <main@@Base+0xd12c>
   22884:	ldrb	r2, [r1, #18]
   22888:	cmp	r2, #46	; 0x2e
   2288c:	mov	r2, r0
   22890:	addeq	r2, r1, #19
   22894:	cmp	r2, r0
   22898:	beq	23388 <main@@Base+0xd12c>
   2289c:	ldr	r0, [sp, #24]
   228a0:	mov	r1, r2
   228a4:	mov	r2, r8
   228a8:	mov	r3, lr
   228ac:	sub	sp, fp, #28
   228b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   228b4:	b	251b8 <main@@Base+0xef5c>
   228b8:	add	lr, r1, #8
   228bc:	sub	r0, r8, lr
   228c0:	cmp	r0, #8
   228c4:	movcs	r0, #8
   228c8:	sub	r0, r0, #1
   228cc:	cmp	r0, #7
   228d0:	bhi	23388 <main@@Base+0xd12c>
   228d4:	str	r3, [sp, #12]
   228d8:	add	r5, pc, #36	; 0x24
   228dc:	mov	sl, #0
   228e0:	mov	ip, #0
   228e4:	mov	r9, #0
   228e8:	mov	r7, #0
   228ec:	mov	r6, #0
   228f0:	mov	r4, #0
   228f4:	mov	r3, #0
   228f8:	ldr	r2, [r5, r0, lsl #2]
   228fc:	mov	r0, #0
   22900:	add	pc, r5, r2
   22904:	andeq	r0, r0, r4, rrx
   22908:	andeq	r0, r0, ip, asr r0
   2290c:	andeq	r0, r0, r4, asr r0
   22910:	andeq	r0, r0, ip, asr #32
   22914:	andeq	r0, r0, r0, asr #32
   22918:	andeq	r0, r0, r4, lsr r0
   2291c:	andeq	r0, r0, r4, lsr #32
   22920:	andeq	r0, r0, r0, lsr #32
   22924:	ldrb	ip, [r1, #15]
   22928:	ldrb	r0, [r1, #14]
   2292c:	mov	r9, sl
   22930:	orr	r0, ip, r0, lsl #8
   22934:	mov	sl, r0
   22938:	ldrb	r0, [r1, #13]
   2293c:	mov	r7, r9
   22940:	orr	sl, sl, r0, lsl #16
   22944:	ldrb	r0, [r1, #12]
   22948:	mov	r6, r7
   2294c:	orr	sl, sl, r0, lsl #24
   22950:	ldrb	r0, [r1, #11]
   22954:	orr	r4, r0, r6
   22958:	ldrb	r0, [r1, #10]
   2295c:	orr	r3, r4, r0, lsl #8
   22960:	ldrb	r0, [r1, #9]
   22964:	orr	r0, r3, r0, lsl #16
   22968:	ldrb	r3, [lr]
   2296c:	movw	r2, #28005	; 0x6d65
   22970:	movt	r2, #20065	; 0x4e61
   22974:	eor	r2, sl, r2
   22978:	orr	r0, r0, r3, lsl #24
   2297c:	movw	r3, #25970	; 0x6572
   22980:	movt	r3, #29800	; 0x7468
   22984:	eor	r0, r0, r3
   22988:	orrs	r0, r2, r0
   2298c:	bne	23388 <main@@Base+0xd12c>
   22990:	add	lr, r1, #16
   22994:	sub	r0, r8, lr
   22998:	cmp	r0, #8
   2299c:	movcs	r0, #8
   229a0:	sub	r0, r0, #1
   229a4:	cmp	r0, #7
   229a8:	bhi	23388 <main@@Base+0xd12c>
   229ac:	add	r5, pc, #36	; 0x24
   229b0:	mov	sl, #0
   229b4:	mov	ip, #0
   229b8:	mov	r9, #0
   229bc:	mov	r7, #0
   229c0:	mov	r6, #0
   229c4:	mov	r4, #0
   229c8:	mov	r3, #0
   229cc:	ldr	r2, [r5, r0, lsl #2]
   229d0:	mov	r0, #0
   229d4:	add	pc, r5, r2
   229d8:	andeq	r0, r0, r4, rrx
   229dc:	andeq	r0, r0, ip, asr r0
   229e0:	andeq	r0, r0, r4, asr r0
   229e4:	andeq	r0, r0, ip, asr #32
   229e8:	andeq	r0, r0, r0, asr #32
   229ec:	andeq	r0, r0, r4, lsr r0
   229f0:	andeq	r0, r0, r4, lsr #32
   229f4:	andeq	r0, r0, r0, lsr #32
   229f8:	ldrb	ip, [r1, #23]
   229fc:	ldrb	r0, [r1, #22]
   22a00:	mov	r9, sl
   22a04:	orr	r0, ip, r0, lsl #8
   22a08:	mov	sl, r0
   22a0c:	ldrb	r0, [r1, #21]
   22a10:	mov	r7, r9
   22a14:	orr	sl, sl, r0, lsl #16
   22a18:	ldrb	r0, [r1, #20]
   22a1c:	mov	r6, r7
   22a20:	orr	sl, sl, r0, lsl #24
   22a24:	ldrb	r0, [r1, #19]
   22a28:	orr	r4, r0, r6
   22a2c:	ldrb	r0, [r1, #18]
   22a30:	orr	r3, r4, r0, lsl #8
   22a34:	ldrb	r0, [r1, #17]
   22a38:	orr	r0, r3, r0, lsl #16
   22a3c:	ldrb	r3, [lr]
   22a40:	movw	r2, #18034	; 0x4672
   22a44:	movt	r2, #25902	; 0x652e
   22a48:	eor	r2, sl, r2
   22a4c:	orr	r0, r0, r3, lsl #24
   22a50:	movw	r3, #24931	; 0x6163
   22a54:	movt	r3, #21360	; 0x5370
   22a58:	eor	r0, r0, r3
   22a5c:	orrs	r0, r2, r0
   22a60:	bne	23388 <main@@Base+0xd12c>
   22a64:	add	lr, r1, #24
   22a68:	sub	r0, r8, lr
   22a6c:	cmp	r0, #8
   22a70:	movcs	r0, #8
   22a74:	sub	r0, r0, #1
   22a78:	cmp	r0, #7
   22a7c:	bhi	23388 <main@@Base+0xd12c>
   22a80:	add	r5, pc, #36	; 0x24
   22a84:	mov	sl, #0
   22a88:	mov	ip, #0
   22a8c:	mov	r9, #0
   22a90:	mov	r7, #0
   22a94:	mov	r6, #0
   22a98:	mov	r4, #0
   22a9c:	mov	r3, #0
   22aa0:	ldr	r2, [r5, r0, lsl #2]
   22aa4:	mov	r0, #0
   22aa8:	add	pc, r5, r2
   22aac:	andeq	r0, r0, r4, rrx
   22ab0:	andeq	r0, r0, ip, asr r0
   22ab4:	andeq	r0, r0, r4, asr r0
   22ab8:	andeq	r0, r0, ip, asr #32
   22abc:	andeq	r0, r0, r0, asr #32
   22ac0:	andeq	r0, r0, r4, lsr r0
   22ac4:	andeq	r0, r0, r4, lsr #32
   22ac8:	andeq	r0, r0, r0, lsr #32
   22acc:	ldrb	ip, [r1, #31]
   22ad0:	ldrb	r0, [r1, #30]
   22ad4:	mov	r9, sl
   22ad8:	orr	r0, ip, r0, lsl #8
   22adc:	mov	sl, r0
   22ae0:	ldrb	r0, [r1, #29]
   22ae4:	mov	r7, r9
   22ae8:	orr	sl, sl, r0, lsl #16
   22aec:	ldrb	r0, [r1, #28]
   22af0:	mov	r6, r7
   22af4:	orr	sl, sl, r0, lsl #24
   22af8:	ldrb	r0, [r1, #27]
   22afc:	orr	r4, r0, r6
   22b00:	ldrb	r0, [r1, #26]
   22b04:	orr	r3, r4, r0, lsl #8
   22b08:	ldrb	r0, [r1, #25]
   22b0c:	orr	r0, r3, r0, lsl #16
   22b10:	ldrb	r3, [lr]
   22b14:	movw	r2, #30052	; 0x7564
   22b18:	movt	r2, #25452	; 0x636c
   22b1c:	eor	r2, sl, r2
   22b20:	orr	r0, r0, r3, lsl #24
   22b24:	movw	r3, #18798	; 0x496e
   22b28:	movt	r3, #28525	; 0x6f6d
   22b2c:	eor	r0, r0, r3
   22b30:	orrs	r0, r2, r0
   22b34:	bne	23388 <main@@Base+0xd12c>
   22b38:	add	r0, r1, #32
   22b3c:	sub	r2, r8, r0
   22b40:	cmp	r2, #8
   22b44:	mov	r3, r2
   22b48:	movcs	r3, #8
   22b4c:	sub	r3, r3, #1
   22b50:	cmp	r3, #7
   22b54:	bhi	23388 <main@@Base+0xd12c>
   22b58:	cmp	r2, #2
   22b5c:	blt	23388 <main@@Base+0xd12c>
   22b60:	ldrb	r2, [r0]
   22b64:	cmp	r2, #101	; 0x65
   22b68:	bne	23388 <main@@Base+0xd12c>
   22b6c:	ldrb	r2, [r1, #33]	; 0x21
   22b70:	ldr	r9, [sp, #12]
   22b74:	mov	r7, r0
   22b78:	cmp	r2, #46	; 0x2e
   22b7c:	addeq	r7, r1, #34	; 0x22
   22b80:	cmp	r7, r0
   22b84:	beq	23388 <main@@Base+0xd12c>
   22b88:	sub	r0, r8, r7
   22b8c:	cmp	r0, #8
   22b90:	movcs	r0, #8
   22b94:	sub	r0, r0, #1
   22b98:	cmp	r0, #7
   22b9c:	bhi	23384 <main@@Base+0xd128>
   22ba0:	add	r6, pc, #36	; 0x24
   22ba4:	mov	sl, #0
   22ba8:	mov	ip, #0
   22bac:	mov	lr, #0
   22bb0:	mov	r1, #0
   22bb4:	mov	r2, #0
   22bb8:	mov	r3, #0
   22bbc:	mov	r5, #0
   22bc0:	mov	r4, #0
   22bc4:	ldr	r0, [r6, r0, lsl #2]
   22bc8:	add	pc, r6, r0
   22bcc:	andeq	r0, r0, r4, rrx
   22bd0:	andeq	r0, r0, ip, asr r0
   22bd4:	andeq	r0, r0, r4, asr r0
   22bd8:	andeq	r0, r0, ip, asr #32
   22bdc:	andeq	r0, r0, r0, asr #32
   22be0:	andeq	r0, r0, r4, lsr r0
   22be4:	andeq	r0, r0, r4, lsr #32
   22be8:	andeq	r0, r0, r0, lsr #32
   22bec:	ldrb	ip, [r7, #7]
   22bf0:	ldrb	r0, [r7, #6]
   22bf4:	mov	lr, sl
   22bf8:	orr	r0, ip, r0, lsl #8
   22bfc:	mov	sl, r0
   22c00:	ldrb	r0, [r7, #5]
   22c04:	mov	r1, lr
   22c08:	orr	sl, sl, r0, lsl #16
   22c0c:	ldrb	r0, [r7, #4]
   22c10:	mov	r2, r1
   22c14:	orr	sl, sl, r0, lsl #24
   22c18:	ldrb	r0, [r7, #3]
   22c1c:	orr	r3, r0, r2
   22c20:	ldrb	r0, [r7, #2]
   22c24:	orr	r5, r3, r0, lsl #8
   22c28:	ldrb	r0, [r7, #1]
   22c2c:	orr	r4, r5, r0, lsl #16
   22c30:	ldrb	r0, [r7]
   22c34:	movw	r1, #28416	; 0x6f00
   22c38:	movt	r1, #18031	; 0x466f
   22c3c:	orr	r6, r4, r0, lsl #24
   22c40:	ldr	r4, [sp, #24]
   22c44:	bic	r0, r6, #255	; 0xff
   22c48:	teq	r0, r1
   22c4c:	bne	23294 <main@@Base+0xd038>
   22c50:	ldr	r0, [sp, #20]
   22c54:	mov	r1, r7
   22c58:	mov	r2, r8
   22c5c:	mov	r3, #3
   22c60:	str	r0, [sp]
   22c64:	mov	r0, r4
   22c68:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   22c6c:	cmp	r0, r7
   22c70:	beq	23294 <main@@Base+0xd038>
   22c74:	mov	r1, r0
   22c78:	mov	r3, #0
   22c7c:	mov	r2, #17
   22c80:	b	23328 <main@@Base+0xd0cc>
   22c84:	eor	r5, r0, r6
   22c88:	eor	r7, r2, r3
   22c8c:	orrs	r5, r5, r7
   22c90:	bne	22e98 <main@@Base+0xcc3c>
   22c94:	add	ip, r1, #16
   22c98:	sub	r2, r8, ip
   22c9c:	cmp	r2, #8
   22ca0:	mov	r0, r2
   22ca4:	movcs	r0, #8
   22ca8:	sub	r0, r0, #1
   22cac:	cmp	r0, #7
   22cb0:	bhi	23388 <main@@Base+0xd12c>
   22cb4:	add	r5, pc, #32
   22cb8:	mov	r9, #0
   22cbc:	mov	lr, #0
   22cc0:	mov	sl, #0
   22cc4:	mov	r3, #0
   22cc8:	mov	r4, #0
   22ccc:	mov	r7, #0
   22cd0:	ldr	r6, [r5, r0, lsl #2]
   22cd4:	mov	r0, #0
   22cd8:	add	pc, r5, r6
   22cdc:	andeq	r0, r0, ip, asr r0
   22ce0:	andeq	r0, r0, r4, asr r0
   22ce4:	andeq	r0, r0, ip, asr #32
   22ce8:	andeq	r0, r0, r4, asr #32
   22cec:	andeq	r0, r0, r8, lsr r0
   22cf0:	andeq	r0, r0, r8, lsr #32
   22cf4:	andeq	r0, r0, r0, lsr #32
   22cf8:	andeq	r0, r0, r0, lsr #32
   22cfc:	ldrb	r0, [r1, #22]
   22d00:	lsl	lr, r0, #8
   22d04:	ldrb	r0, [r1, #21]
   22d08:	mov	sl, r9
   22d0c:	orr	r0, lr, r0, lsl #16
   22d10:	mov	r9, r0
   22d14:	ldrb	r0, [r1, #20]
   22d18:	mov	r3, sl
   22d1c:	orr	r9, r9, r0, lsl #24
   22d20:	ldrb	r0, [r1, #19]
   22d24:	orr	r4, r0, r3
   22d28:	ldrb	r0, [r1, #18]
   22d2c:	orr	r7, r4, r0, lsl #8
   22d30:	ldrb	r0, [r1, #17]
   22d34:	orr	r0, r7, r0, lsl #16
   22d38:	cmp	r2, #8
   22d3c:	blt	23388 <main@@Base+0xd12c>
   22d40:	ldrb	r2, [ip]
   22d44:	movw	r3, #27904	; 0x6d00
   22d48:	movt	r3, #28277	; 0x6e75
   22d4c:	eor	r3, r9, r3
   22d50:	orr	r0, r0, r2, lsl #24
   22d54:	movw	r2, #24421	; 0x5f65
   22d58:	movt	r2, #25959	; 0x6567
   22d5c:	add	r2, r2, #1114112	; 0x110000
   22d60:	eor	r0, r0, r2
   22d64:	orrs	r0, r3, r0
   22d68:	bne	23388 <main@@Base+0xd12c>
   22d6c:	ldrb	r0, [r1, #23]
   22d70:	ldr	r3, [sp, #12]
   22d74:	mov	r2, ip
   22d78:	cmp	r0, #46	; 0x2e
   22d7c:	addeq	r2, r1, #24
   22d80:	cmp	r2, ip
   22d84:	beq	23388 <main@@Base+0xd12c>
   22d88:	ldr	r0, [sp, #24]
   22d8c:	mov	r1, r2
   22d90:	mov	r2, r8
   22d94:	sub	sp, fp, #28
   22d98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22d9c:	b	265a0 <main@@Base+0x10344>
   22da0:	movw	r7, #11846	; 0x2e46
   22da4:	eor	r2, r2, r3
   22da8:	movt	r7, #27749	; 0x6c65
   22dac:	eor	r7, r0, r7
   22db0:	orrs	r3, r7, r2
   22db4:	beq	230f8 <main@@Base+0xce9c>
   22db8:	movw	r3, #11843	; 0x2e43
   22dbc:	movt	r3, #27749	; 0x6c65
   22dc0:	eor	r0, r0, r3
   22dc4:	orrs	r0, r0, r2
   22dc8:	bne	23388 <main@@Base+0xd12c>
   22dcc:	add	r0, r1, #16
   22dd0:	sub	r2, r8, r0
   22dd4:	cmp	r2, #8
   22dd8:	mov	r3, r2
   22ddc:	movcs	r3, #8
   22de0:	sub	r7, r3, #1
   22de4:	cmp	r7, #7
   22de8:	bhi	23388 <main@@Base+0xd12c>
   22dec:	add	r4, pc, #20
   22df0:	mov	ip, #0
   22df4:	mov	r5, #0
   22df8:	mov	r6, #0
   22dfc:	ldr	r3, [r4, r7, lsl #2]
   22e00:	mov	r7, #0
   22e04:	add	pc, r4, r3
   22e08:	andeq	r0, r0, r8, lsr r0
   22e0c:	andeq	r0, r0, r0, lsr r0
   22e10:	andeq	r0, r0, r8, lsr #32
   22e14:	andeq	r0, r0, r0, lsr #32
   22e18:	andeq	r0, r0, r0, lsr #32
   22e1c:	andeq	r0, r0, r0, lsr #32
   22e20:	andeq	r0, r0, r0, lsr #32
   22e24:	andeq	r0, r0, r0, lsr #32
   22e28:	ldrb	r7, [r1, #19]
   22e2c:	mov	ip, #0
   22e30:	ldrb	r3, [r1, #18]
   22e34:	orr	r5, r7, r3, lsl #8
   22e38:	ldrb	r3, [r1, #17]
   22e3c:	orr	r6, r5, r3, lsl #16
   22e40:	cmp	r2, #5
   22e44:	blt	23388 <main@@Base+0xd12c>
   22e48:	ldrb	r2, [r0]
   22e4c:	movw	r3, #28530	; 0x6f72
   22e50:	movt	r3, #28524	; 0x6f6c
   22e54:	orr	r2, r6, r2, lsl #24
   22e58:	eor	r2, r2, r3
   22e5c:	orrs	r2, ip, r2
   22e60:	bne	23388 <main@@Base+0xd12c>
   22e64:	ldrb	r2, [r1, #20]
   22e68:	cmp	r2, #46	; 0x2e
   22e6c:	mov	r2, r0
   22e70:	addeq	r2, r1, #21
   22e74:	cmp	r2, r0
   22e78:	beq	23388 <main@@Base+0xd12c>
   22e7c:	ldr	r0, [sp, #24]
   22e80:	mov	r1, r2
   22e84:	mov	r2, r8
   22e88:	mov	r3, lr
   22e8c:	sub	sp, fp, #28
   22e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22e94:	b	21ee0 <main@@Base+0xbc84>
   22e98:	add	r5, r6, #6
   22e9c:	subs	r4, r0, r5
   22ea0:	sbcs	r2, r2, r3
   22ea4:	bcs	22fc8 <main@@Base+0xcd6c>
   22ea8:	add	r2, r6, #1
   22eac:	eor	r0, r0, r2
   22eb0:	orrs	r0, r0, r7
   22eb4:	bne	23388 <main@@Base+0xd12c>
   22eb8:	add	ip, r1, #16
   22ebc:	sub	r2, r8, ip
   22ec0:	cmp	r2, #8
   22ec4:	mov	r0, r2
   22ec8:	movcs	r0, #8
   22ecc:	sub	r0, r0, #1
   22ed0:	cmp	r0, #7
   22ed4:	bhi	23388 <main@@Base+0xd12c>
   22ed8:	add	r7, pc, #32
   22edc:	mov	lr, #0
   22ee0:	mov	r9, #0
   22ee4:	mov	sl, #0
   22ee8:	mov	r3, #0
   22eec:	mov	r5, #0
   22ef0:	mov	r4, #0
   22ef4:	ldr	r6, [r7, r0, lsl #2]
   22ef8:	mov	r0, #0
   22efc:	add	pc, r7, r6
   22f00:	andeq	r0, r0, ip, asr r0
   22f04:	andeq	r0, r0, r4, asr r0
   22f08:	andeq	r0, r0, ip, asr #32
   22f0c:	andeq	r0, r0, r4, asr #32
   22f10:	andeq	r0, r0, r8, lsr r0
   22f14:	andeq	r0, r0, r8, lsr #32
   22f18:	andeq	r0, r0, r0, lsr #32
   22f1c:	andeq	r0, r0, r0, lsr #32
   22f20:	ldrb	r0, [r1, #22]
   22f24:	lsl	r9, r0, #8
   22f28:	ldrb	r0, [r1, #21]
   22f2c:	mov	sl, lr
   22f30:	orr	r0, r9, r0, lsl #16
   22f34:	mov	lr, r0
   22f38:	ldrb	r0, [r1, #20]
   22f3c:	mov	r3, sl
   22f40:	orr	lr, lr, r0, lsl #24
   22f44:	ldrb	r0, [r1, #19]
   22f48:	orr	r0, r0, r3
   22f4c:	ldrb	r3, [r1, #18]
   22f50:	orr	r5, r0, r3, lsl #8
   22f54:	ldrb	r0, [r1, #17]
   22f58:	orr	r4, r5, r0, lsl #16
   22f5c:	cmp	r2, #8
   22f60:	blt	23388 <main@@Base+0xd12c>
   22f64:	ldrb	r2, [ip]
   22f68:	movw	r0, #24421	; 0x5f65
   22f6c:	movw	r3, #27904	; 0x6d00
   22f70:	movt	r0, #25959	; 0x6567
   22f74:	movt	r3, #28277	; 0x6e75
   22f78:	add	r0, r0, #851968	; 0xd0000
   22f7c:	eor	r3, lr, r3
   22f80:	orr	r2, r4, r2, lsl #24
   22f84:	add	r0, r0, #150994944	; 0x9000000
   22f88:	eor	r0, r2, r0
   22f8c:	orrs	r0, r3, r0
   22f90:	bne	23388 <main@@Base+0xd12c>
   22f94:	ldrb	r0, [r1, #23]
   22f98:	ldr	r3, [sp, #12]
   22f9c:	mov	r2, ip
   22fa0:	cmp	r0, #46	; 0x2e
   22fa4:	addeq	r2, r1, #24
   22fa8:	cmp	r2, ip
   22fac:	beq	23388 <main@@Base+0xd12c>
   22fb0:	ldr	r0, [sp, #24]
   22fb4:	mov	r1, r2
   22fb8:	mov	r2, r8
   22fbc:	sub	sp, fp, #28
   22fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22fc4:	b	26750 <main@@Base+0x104f4>
   22fc8:	eor	r0, r0, r5
   22fcc:	orrs	r0, r0, r7
   22fd0:	bne	23388 <main@@Base+0xd12c>
   22fd4:	add	lr, r1, #16
   22fd8:	sub	r2, r8, lr
   22fdc:	cmp	r2, #8
   22fe0:	mov	r0, r2
   22fe4:	movcs	r0, #8
   22fe8:	sub	r0, r0, #1
   22fec:	cmp	r0, #7
   22ff0:	bhi	23388 <main@@Base+0xd12c>
   22ff4:	add	r5, pc, #40	; 0x28
   22ff8:	mov	sl, #0
   22ffc:	mov	r9, #0
   23000:	mov	r7, #0
   23004:	mov	r6, #0
   23008:	mov	r4, #0
   2300c:	mov	ip, #0
   23010:	ldr	r3, [r5, r0, lsl #2]
   23014:	mov	r0, #0
   23018:	str	r0, [sp, #8]
   2301c:	mov	r0, #0
   23020:	add	pc, r5, r3
   23024:	andeq	r0, r0, ip, rrx
   23028:	andeq	r0, r0, r4, rrx
   2302c:	andeq	r0, r0, ip, asr r0
   23030:	andeq	r0, r0, r4, asr r0
   23034:	andeq	r0, r0, r8, asr #32
   23038:	andeq	r0, r0, ip, lsr r0
   2303c:	andeq	r0, r0, r8, lsr #32
   23040:	andeq	r0, r0, r0, lsr #32
   23044:	ldrb	r0, [r1, #23]
   23048:	str	r0, [sp, #8]
   2304c:	ldrb	r0, [r1, #22]
   23050:	ldr	r3, [sp, #8]
   23054:	mov	r9, sl
   23058:	orr	r0, r3, r0, lsl #8
   2305c:	mov	sl, r0
   23060:	ldrb	r0, [r1, #21]
   23064:	mov	r7, r9
   23068:	orr	sl, sl, r0, lsl #16
   2306c:	ldrb	r0, [r1, #20]
   23070:	mov	r6, r7
   23074:	orr	sl, sl, r0, lsl #24
   23078:	ldrb	r0, [r1, #19]
   2307c:	orr	r4, r0, r6
   23080:	ldrb	r0, [r1, #18]
   23084:	orr	r0, r4, r0, lsl #8
   23088:	ldrb	r3, [r1, #17]
   2308c:	orr	ip, r0, r3, lsl #16
   23090:	ldrb	r0, [lr]
   23094:	cmp	r2, #8
   23098:	orr	r6, ip, r0, lsl #24
   2309c:	movw	ip, #27904	; 0x6d00
   230a0:	movt	ip, #28277	; 0x6e75
   230a4:	blt	23178 <main@@Base+0xcf1c>
   230a8:	movw	r2, #24421	; 0x5f65
   230ac:	bic	r0, sl, #255	; 0xff
   230b0:	movt	r2, #25959	; 0x6567
   230b4:	eor	r0, r0, ip
   230b8:	eor	r2, r6, r2
   230bc:	orrs	r0, r0, r2
   230c0:	bne	23178 <main@@Base+0xcf1c>
   230c4:	ldrb	r0, [r1, #23]
   230c8:	mov	r2, lr
   230cc:	cmp	r0, #46	; 0x2e
   230d0:	addeq	r2, r1, #24
   230d4:	cmp	r2, lr
   230d8:	beq	23178 <main@@Base+0xcf1c>
   230dc:	ldr	r0, [sp, #24]
   230e0:	ldr	r3, [sp, #12]
   230e4:	mov	r1, r2
   230e8:	mov	r2, r8
   230ec:	sub	sp, fp, #28
   230f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   230f4:	b	26944 <main@@Base+0x106e8>
   230f8:	add	r0, r1, #16
   230fc:	sub	r6, r8, r0
   23100:	cmp	r6, #8
   23104:	mov	r2, r6
   23108:	movcs	r2, #8
   2310c:	sub	r3, r2, #2
   23110:	cmp	r3, #7
   23114:	bcs	23280 <main@@Base+0xd024>
   23118:	ldrb	r2, [r1, #17]
   2311c:	mov	r3, #0
   23120:	lsl	r7, r2, #16
   23124:	cmp	r6, #3
   23128:	blt	23388 <main@@Base+0xd12c>
   2312c:	ldrb	r2, [r0]
   23130:	orr	r2, r7, r2, lsl #24
   23134:	eor	r2, r2, #7274496	; 0x6f0000
   23138:	eor	r2, r2, #1862270976	; 0x6f000000
   2313c:	orrs	r2, r3, r2
   23140:	bne	23388 <main@@Base+0xd12c>
   23144:	ldrb	r2, [r1, #18]
   23148:	cmp	r2, #46	; 0x2e
   2314c:	mov	r2, r0
   23150:	addeq	r2, r1, #19
   23154:	cmp	r2, r0
   23158:	beq	23388 <main@@Base+0xd12c>
   2315c:	ldr	r0, [sp, #24]
   23160:	mov	r1, r2
   23164:	mov	r2, r8
   23168:	mov	r3, lr
   2316c:	sub	sp, fp, #28
   23170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23174:	b	26338 <main@@Base+0x100dc>
   23178:	movw	r0, #31077	; 0x7965
   2317c:	movw	r2, #25965	; 0x656d
   23180:	movt	r0, #28788	; 0x7074
   23184:	movt	r2, #28532	; 0x6f74
   23188:	eor	r0, sl, r0
   2318c:	eor	r2, r6, r2
   23190:	orrs	r0, r0, r2
   23194:	bne	23388 <main@@Base+0xd12c>
   23198:	add	r0, r1, #24
   2319c:	sub	r6, r8, r0
   231a0:	cmp	r6, #8
   231a4:	mov	r2, r6
   231a8:	movcs	r2, #8
   231ac:	sub	r3, r2, #3
   231b0:	cmp	r3, #6
   231b4:	bcs	2333c <main@@Base+0xd0e0>
   231b8:	ldrb	r2, [r1, #26]
   231bc:	ldr	r4, [sp, #12]
   231c0:	mov	r3, #0
   231c4:	lsl	r2, r2, #8
   231c8:	ldrb	r7, [r1, #25]
   231cc:	orr	r7, r2, r7, lsl #16
   231d0:	cmp	r6, #4
   231d4:	blt	23388 <main@@Base+0xd12c>
   231d8:	ldrb	r2, [r0]
   231dc:	orr	r2, r7, r2, lsl #24
   231e0:	eor	r2, r2, ip
   231e4:	orrs	r2, r3, r2
   231e8:	bne	23388 <main@@Base+0xd12c>
   231ec:	ldrb	r2, [r1, #27]
   231f0:	mov	r6, r0
   231f4:	cmp	r2, #46	; 0x2e
   231f8:	addeq	r6, r1, #28
   231fc:	cmp	r6, r0
   23200:	beq	23388 <main@@Base+0xd12c>
   23204:	sub	r0, r8, r6
   23208:	cmp	r0, #8
   2320c:	movcs	r0, #8
   23210:	sub	r0, r0, #1
   23214:	cmp	r0, #7
   23218:	bhi	2335c <main@@Base+0xd100>
   2321c:	ldrb	r0, [r6]
   23220:	cmp	r0, #120	; 0x78
   23224:	bne	2335c <main@@Base+0xd100>
   23228:	ldr	r0, [sp, #20]
   2322c:	mov	r1, r6
   23230:	mov	r2, r8
   23234:	mov	r3, #1
   23238:	str	r0, [sp]
   2323c:	ldr	r0, [sp, #24]
   23240:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   23244:	cmp	r0, r6
   23248:	mov	r1, r6
   2324c:	beq	23388 <main@@Base+0xd12c>
   23250:	ldr	r2, [sp, #16]
   23254:	mov	r1, #0
   23258:	str	r1, [r2]
   2325c:	str	r1, [r2, #4]
   23260:	str	r1, [r4]
   23264:	mov	r1, r0
   23268:	b	23388 <main@@Base+0xd12c>
   2326c:	mov	r3, #0
   23270:	cmp	r2, #1
   23274:	mov	r7, #0
   23278:	beq	22864 <main@@Base+0xc608>
   2327c:	b	23388 <main@@Base+0xd12c>
   23280:	mov	r3, #0
   23284:	cmp	r2, #1
   23288:	mov	r7, #0
   2328c:	beq	23124 <main@@Base+0xcec8>
   23290:	b	23388 <main@@Base+0xd12c>
   23294:	movw	r0, #25942	; 0x6556
   23298:	movw	r1, #25452	; 0x636c
   2329c:	movt	r0, #30052	; 0x7564
   232a0:	movt	r1, #18798	; 0x496e
   232a4:	eor	r0, sl, r0
   232a8:	eor	r1, r6, r1
   232ac:	orrs	r0, r0, r1
   232b0:	bne	23384 <main@@Base+0xd128>
   232b4:	add	r6, r7, #8
   232b8:	sub	r1, r8, r6
   232bc:	cmp	r1, #8
   232c0:	movcs	r1, #8
   232c4:	sub	r0, r1, #2
   232c8:	cmp	r0, #7
   232cc:	bcs	23374 <main@@Base+0xd118>
   232d0:	ldrb	r0, [r7, #9]
   232d4:	lsl	r1, r0, #16
   232d8:	mov	r0, #0
   232dc:	ldrb	r2, [r6]
   232e0:	orr	r1, r1, r2, lsl #24
   232e4:	eor	r1, r1, #23855104	; 0x16c0000
   232e8:	eor	r1, r1, #1610612736	; 0x60000000
   232ec:	orrs	r0, r0, r1
   232f0:	bne	23384 <main@@Base+0xd128>
   232f4:	ldr	r0, [sp, #20]
   232f8:	mov	r1, r6
   232fc:	mov	r2, r8
   23300:	mov	r3, #2
   23304:	str	r0, [sp]
   23308:	mov	r0, r4
   2330c:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   23310:	cmp	r0, r6
   23314:	mov	r1, r7
   23318:	beq	23388 <main@@Base+0xd12c>
   2331c:	mov	r2, #0
   23320:	mov	r3, #0
   23324:	mov	r1, r0
   23328:	ldr	r0, [sp, #16]
   2332c:	strd	r2, [r0]
   23330:	mov	r0, #0
   23334:	str	r0, [r9]
   23338:	b	23388 <main@@Base+0xd12c>
   2333c:	ldr	r4, [sp, #12]
   23340:	mov	r3, #0
   23344:	cmp	r2, #1
   23348:	beq	23364 <main@@Base+0xd108>
   2334c:	cmp	r2, #2
   23350:	mov	r2, #0
   23354:	beq	231c8 <main@@Base+0xcf6c>
   23358:	b	23388 <main@@Base+0xd12c>
   2335c:	mov	r1, r6
   23360:	b	23388 <main@@Base+0xd12c>
   23364:	mov	r7, #0
   23368:	cmp	r6, #4
   2336c:	bge	231d8 <main@@Base+0xcf7c>
   23370:	b	23388 <main@@Base+0xd12c>
   23374:	cmp	r1, #1
   23378:	mov	r0, #0
   2337c:	mov	r1, #0
   23380:	beq	232dc <main@@Base+0xd080>
   23384:	mov	r1, r7
   23388:	mov	r0, r1
   2338c:	sub	sp, fp, #28
   23390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23394:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23398:	add	fp, sp, #28
   2339c:	sub	sp, sp, #44	; 0x2c
   233a0:	mov	r6, r2
   233a4:	ldr	r2, [fp, #8]
   233a8:	mov	r5, r0
   233ac:	mov	r0, #0
   233b0:	mov	sl, r3
   233b4:	cmp	r1, r6
   233b8:	strb	r0, [r2]
   233bc:	beq	23400 <main@@Base+0xd1a4>
   233c0:	ldrb	r0, [r1]
   233c4:	cmp	r0, #46	; 0x2e
   233c8:	beq	233e0 <main@@Base+0xd184>
   233cc:	cmp	r0, #34	; 0x22
   233d0:	bne	233f8 <main@@Base+0xd19c>
   233d4:	mov	r0, #0
   233d8:	add	r1, r1, #1
   233dc:	b	233fc <main@@Base+0xd1a0>
   233e0:	mov	r0, r5
   233e4:	mov	r2, r6
   233e8:	mov	r3, #5
   233ec:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   233f0:	mov	r1, r0
   233f4:	b	23400 <main@@Base+0xd1a4>
   233f8:	mov	r0, #1
   233fc:	str	r0, [r5, #12]
   23400:	ldr	r0, [r5, #12]
   23404:	cmp	r0, #0
   23408:	beq	2341c <main@@Base+0xd1c0>
   2340c:	mov	r7, r1
   23410:	cmp	r7, r6
   23414:	bne	23460 <main@@Base+0xd204>
   23418:	b	23578 <main@@Base+0xd31c>
   2341c:	sub	r0, r6, r1
   23420:	cmp	r0, #2
   23424:	blt	23448 <main@@Base+0xd1ec>
   23428:	ldrb	r0, [r1]
   2342c:	cmp	r0, #32
   23430:	bhi	2340c <main@@Base+0xd1b0>
   23434:	bne	23448 <main@@Base+0xd1ec>
   23438:	mov	r7, r1
   2343c:	ldrb	r0, [r7, #1]!
   23440:	cmp	r0, #32
   23444:	bhi	23458 <main@@Base+0xd1fc>
   23448:	mov	r0, r5
   2344c:	mov	r2, r6
   23450:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   23454:	mov	r7, r0
   23458:	cmp	r7, r6
   2345c:	beq	23578 <main@@Base+0xd31c>
   23460:	add	r0, sl, #4
   23464:	mov	r2, #0
   23468:	add	r8, sp, #32
   2346c:	add	r9, sp, #28
   23470:	str	sl, [sp, #16]
   23474:	str	r0, [sp, #12]
   23478:	ldr	r4, [sl]
   2347c:	mov	sl, r0
   23480:	str	r2, [sp, #20]
   23484:	add	r0, sp, #24
   23488:	mov	r1, r7
   2348c:	mov	r2, r6
   23490:	mov	r3, r9
   23494:	str	r8, [sp]
   23498:	str	r0, [sp, #4]
   2349c:	mov	r0, r5
   234a0:	blx	r4
   234a4:	cmp	r0, r6
   234a8:	beq	23578 <main@@Base+0xd31c>
   234ac:	mov	r4, r0
   234b0:	cmp	r0, r7
   234b4:	bne	234c8 <main@@Base+0xd26c>
   234b8:	ldr	r4, [sl], #4
   234bc:	cmp	r4, #0
   234c0:	bne	23484 <main@@Base+0xd228>
   234c4:	b	23580 <main@@Base+0xd324>
   234c8:	ldr	r2, [sp, #28]
   234cc:	ldr	r0, [sp, #32]
   234d0:	ldr	r1, [sp, #36]	; 0x24
   234d4:	cmp	r2, #0
   234d8:	beq	23500 <main@@Base+0xd2a4>
   234dc:	ldr	sl, [sp, #16]
   234e0:	subs	r2, r0, #129	; 0x81
   234e4:	sbcs	r1, r1, #0
   234e8:	bcc	23534 <main@@Base+0xd2d8>
   234ec:	mov	r0, r5
   234f0:	mov	r1, r4
   234f4:	mov	r2, r6
   234f8:	mov	r3, #8
   234fc:	b	23520 <main@@Base+0xd2c4>
   23500:	ldr	sl, [sp, #16]
   23504:	subs	r2, r0, #128	; 0x80
   23508:	sbcs	r1, r1, #0
   2350c:	bcc	2353c <main@@Base+0xd2e0>
   23510:	mov	r0, r5
   23514:	mov	r1, r4
   23518:	mov	r2, r6
   2351c:	mov	r3, #7
   23520:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   23524:	ldr	r2, [sp, #20]
   23528:	cmp	r0, r6
   2352c:	bne	2354c <main@@Base+0xd2f0>
   23530:	b	23578 <main@@Base+0xd31c>
   23534:	rsb	r2, r0, #0
   23538:	b	23540 <main@@Base+0xd2e4>
   2353c:	mov	r2, r0
   23540:	mov	r0, r4
   23544:	cmp	r0, r6
   23548:	beq	23578 <main@@Base+0xd31c>
   2354c:	ldr	r0, [fp, #8]
   23550:	mov	r7, r4
   23554:	mov	r1, r0
   23558:	ldrb	r0, [r0]
   2355c:	add	r0, r0, r2
   23560:	strb	r0, [r1]
   23564:	ldr	r0, [sp, #24]
   23568:	cmp	r0, #0
   2356c:	ldr	r0, [sp, #12]
   23570:	bne	23478 <main@@Base+0xd21c>
   23574:	b	23598 <main@@Base+0xd33c>
   23578:	mov	r4, r6
   2357c:	b	23598 <main@@Base+0xd33c>
   23580:	mov	r0, r5
   23584:	mov	r1, r7
   23588:	mov	r2, r6
   2358c:	mov	r3, #23
   23590:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   23594:	mov	r4, r0
   23598:	mov	r0, r4
   2359c:	sub	sp, fp, #28
   235a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   235a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   235a8:	add	fp, sp, #28
   235ac:	sub	sp, sp, #44	; 0x2c
   235b0:	mov	r6, r2
   235b4:	ldr	r2, [fp, #8]
   235b8:	mov	r5, r0
   235bc:	mov	r0, #0
   235c0:	mov	r8, r3
   235c4:	cmp	r1, r6
   235c8:	strb	r0, [r2]
   235cc:	beq	23610 <main@@Base+0xd3b4>
   235d0:	ldrb	r0, [r1]
   235d4:	cmp	r0, #46	; 0x2e
   235d8:	beq	235f0 <main@@Base+0xd394>
   235dc:	cmp	r0, #34	; 0x22
   235e0:	bne	23608 <main@@Base+0xd3ac>
   235e4:	mov	r0, #0
   235e8:	add	r1, r1, #1
   235ec:	b	2360c <main@@Base+0xd3b0>
   235f0:	mov	r0, r5
   235f4:	mov	r2, r6
   235f8:	mov	r3, #5
   235fc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   23600:	mov	r1, r0
   23604:	b	23610 <main@@Base+0xd3b4>
   23608:	mov	r0, #1
   2360c:	str	r0, [r5, #12]
   23610:	ldr	r0, [r5, #12]
   23614:	cmp	r0, #0
   23618:	beq	2362c <main@@Base+0xd3d0>
   2361c:	mov	r7, r1
   23620:	cmp	r7, r6
   23624:	bne	23670 <main@@Base+0xd414>
   23628:	b	23780 <main@@Base+0xd524>
   2362c:	sub	r0, r6, r1
   23630:	cmp	r0, #2
   23634:	blt	23658 <main@@Base+0xd3fc>
   23638:	ldrb	r0, [r1]
   2363c:	cmp	r0, #32
   23640:	bhi	2361c <main@@Base+0xd3c0>
   23644:	bne	23658 <main@@Base+0xd3fc>
   23648:	mov	r7, r1
   2364c:	ldrb	r0, [r7, #1]!
   23650:	cmp	r0, #32
   23654:	bhi	23668 <main@@Base+0xd40c>
   23658:	mov	r0, r5
   2365c:	mov	r2, r6
   23660:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   23664:	mov	r7, r0
   23668:	cmp	r7, r6
   2366c:	beq	23780 <main@@Base+0xd524>
   23670:	add	r0, r8, #4
   23674:	mov	r1, #0
   23678:	add	sl, sp, #32
   2367c:	add	r9, sp, #28
   23680:	str	r8, [sp, #16]
   23684:	str	r1, [sp, #20]
   23688:	str	r0, [sp, #12]
   2368c:	ldr	r4, [r8]
   23690:	mov	r8, r0
   23694:	add	r0, sp, #24
   23698:	mov	r1, r7
   2369c:	mov	r2, r6
   236a0:	mov	r3, r9
   236a4:	str	sl, [sp]
   236a8:	str	r0, [sp, #4]
   236ac:	mov	r0, r5
   236b0:	blx	r4
   236b4:	cmp	r0, r6
   236b8:	beq	23780 <main@@Base+0xd524>
   236bc:	mov	r4, r0
   236c0:	cmp	r0, r7
   236c4:	bne	236d8 <main@@Base+0xd47c>
   236c8:	ldr	r4, [r8], #4
   236cc:	cmp	r4, #0
   236d0:	bne	23694 <main@@Base+0xd438>
   236d4:	b	23788 <main@@Base+0xd52c>
   236d8:	ldr	r0, [sp, #28]
   236dc:	cmp	r0, #0
   236e0:	beq	23708 <main@@Base+0xd4ac>
   236e4:	mov	r0, r5
   236e8:	mov	r1, r4
   236ec:	mov	r2, r6
   236f0:	mov	r3, #8
   236f4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   236f8:	ldr	r8, [sp, #16]
   236fc:	cmp	r0, r6
   23700:	bne	23750 <main@@Base+0xd4f4>
   23704:	b	23780 <main@@Base+0xd524>
   23708:	ldr	r0, [sp, #32]
   2370c:	ldr	r1, [sp, #36]	; 0x24
   23710:	ldr	r8, [sp, #16]
   23714:	subs	r2, r0, #256	; 0x100
   23718:	sbcs	r1, r1, #0
   2371c:	bcc	23740 <main@@Base+0xd4e4>
   23720:	mov	r0, r5
   23724:	mov	r1, r4
   23728:	mov	r2, r6
   2372c:	mov	r3, #7
   23730:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   23734:	cmp	r0, r6
   23738:	bne	23750 <main@@Base+0xd4f4>
   2373c:	b	23780 <main@@Base+0xd524>
   23740:	str	r0, [sp, #20]
   23744:	mov	r0, r4
   23748:	cmp	r0, r6
   2374c:	beq	23780 <main@@Base+0xd524>
   23750:	ldr	r0, [fp, #8]
   23754:	ldr	r2, [sp, #20]
   23758:	mov	r7, r4
   2375c:	mov	r1, r0
   23760:	ldrb	r0, [r0]
   23764:	add	r0, r0, r2
   23768:	strb	r0, [r1]
   2376c:	ldr	r0, [sp, #24]
   23770:	cmp	r0, #0
   23774:	ldr	r0, [sp, #12]
   23778:	bne	2368c <main@@Base+0xd430>
   2377c:	b	237a0 <main@@Base+0xd544>
   23780:	mov	r4, r6
   23784:	b	237a0 <main@@Base+0xd544>
   23788:	mov	r0, r5
   2378c:	mov	r1, r7
   23790:	mov	r2, r6
   23794:	mov	r3, #23
   23798:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2379c:	mov	r4, r0
   237a0:	mov	r0, r4
   237a4:	sub	sp, fp, #28
   237a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   237b0:	add	fp, sp, #28
   237b4:	sub	sp, sp, #44	; 0x2c
   237b8:	mov	r6, r2
   237bc:	ldr	r2, [fp, #8]
   237c0:	mov	r5, r0
   237c4:	mov	r0, #0
   237c8:	mov	sl, r3
   237cc:	cmp	r1, r6
   237d0:	strh	r0, [r2]
   237d4:	beq	23818 <main@@Base+0xd5bc>
   237d8:	ldrb	r0, [r1]
   237dc:	cmp	r0, #46	; 0x2e
   237e0:	beq	237f8 <main@@Base+0xd59c>
   237e4:	cmp	r0, #34	; 0x22
   237e8:	bne	23810 <main@@Base+0xd5b4>
   237ec:	mov	r0, #0
   237f0:	add	r1, r1, #1
   237f4:	b	23814 <main@@Base+0xd5b8>
   237f8:	mov	r0, r5
   237fc:	mov	r2, r6
   23800:	mov	r3, #5
   23804:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   23808:	mov	r1, r0
   2380c:	b	23818 <main@@Base+0xd5bc>
   23810:	mov	r0, #1
   23814:	str	r0, [r5, #12]
   23818:	ldr	r0, [r5, #12]
   2381c:	cmp	r0, #0
   23820:	beq	23834 <main@@Base+0xd5d8>
   23824:	mov	r7, r1
   23828:	cmp	r7, r6
   2382c:	bne	23878 <main@@Base+0xd61c>
   23830:	b	23994 <main@@Base+0xd738>
   23834:	sub	r0, r6, r1
   23838:	cmp	r0, #2
   2383c:	blt	23860 <main@@Base+0xd604>
   23840:	ldrb	r0, [r1]
   23844:	cmp	r0, #32
   23848:	bhi	23824 <main@@Base+0xd5c8>
   2384c:	bne	23860 <main@@Base+0xd604>
   23850:	mov	r7, r1
   23854:	ldrb	r0, [r7, #1]!
   23858:	cmp	r0, #32
   2385c:	bhi	23870 <main@@Base+0xd614>
   23860:	mov	r0, r5
   23864:	mov	r2, r6
   23868:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2386c:	mov	r7, r0
   23870:	cmp	r7, r6
   23874:	beq	23994 <main@@Base+0xd738>
   23878:	add	r0, sl, #4
   2387c:	mov	r2, #0
   23880:	add	r8, sp, #32
   23884:	add	r9, sp, #28
   23888:	str	sl, [sp, #16]
   2388c:	str	r0, [sp, #12]
   23890:	ldr	r4, [sl]
   23894:	mov	sl, r0
   23898:	str	r2, [sp, #20]
   2389c:	add	r0, sp, #24
   238a0:	mov	r1, r7
   238a4:	mov	r2, r6
   238a8:	mov	r3, r9
   238ac:	str	r8, [sp]
   238b0:	str	r0, [sp, #4]
   238b4:	mov	r0, r5
   238b8:	blx	r4
   238bc:	cmp	r0, r6
   238c0:	beq	23994 <main@@Base+0xd738>
   238c4:	mov	r4, r0
   238c8:	cmp	r0, r7
   238cc:	bne	238e0 <main@@Base+0xd684>
   238d0:	ldr	r4, [sl], #4
   238d4:	cmp	r4, #0
   238d8:	bne	2389c <main@@Base+0xd640>
   238dc:	b	2399c <main@@Base+0xd740>
   238e0:	ldr	r2, [sp, #28]
   238e4:	ldr	r0, [sp, #32]
   238e8:	ldr	r1, [sp, #36]	; 0x24
   238ec:	cmp	r2, #0
   238f0:	beq	2391c <main@@Base+0xd6c0>
   238f4:	ldr	sl, [sp, #16]
   238f8:	movw	r2, #32769	; 0x8001
   238fc:	subs	r2, r0, r2
   23900:	sbcs	r1, r1, #0
   23904:	bcc	23950 <main@@Base+0xd6f4>
   23908:	mov	r0, r5
   2390c:	mov	r1, r4
   23910:	mov	r2, r6
   23914:	mov	r3, #8
   23918:	b	2393c <main@@Base+0xd6e0>
   2391c:	ldr	sl, [sp, #16]
   23920:	subs	r2, r0, #32768	; 0x8000
   23924:	sbcs	r1, r1, #0
   23928:	bcc	23958 <main@@Base+0xd6fc>
   2392c:	mov	r0, r5
   23930:	mov	r1, r4
   23934:	mov	r2, r6
   23938:	mov	r3, #7
   2393c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   23940:	ldr	r2, [sp, #20]
   23944:	cmp	r0, r6
   23948:	bne	23968 <main@@Base+0xd70c>
   2394c:	b	23994 <main@@Base+0xd738>
   23950:	rsb	r2, r0, #0
   23954:	b	2395c <main@@Base+0xd700>
   23958:	mov	r2, r0
   2395c:	mov	r0, r4
   23960:	cmp	r0, r6
   23964:	beq	23994 <main@@Base+0xd738>
   23968:	ldr	r0, [fp, #8]
   2396c:	mov	r7, r4
   23970:	mov	r1, r0
   23974:	ldrh	r0, [r0]
   23978:	add	r0, r0, r2
   2397c:	strh	r0, [r1]
   23980:	ldr	r0, [sp, #24]
   23984:	cmp	r0, #0
   23988:	ldr	r0, [sp, #12]
   2398c:	bne	23890 <main@@Base+0xd634>
   23990:	b	239b4 <main@@Base+0xd758>
   23994:	mov	r4, r6
   23998:	b	239b4 <main@@Base+0xd758>
   2399c:	mov	r0, r5
   239a0:	mov	r1, r7
   239a4:	mov	r2, r6
   239a8:	mov	r3, #23
   239ac:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   239b0:	mov	r4, r0
   239b4:	mov	r0, r4
   239b8:	sub	sp, fp, #28
   239bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   239c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   239c4:	add	fp, sp, #28
   239c8:	sub	sp, sp, #28
   239cc:	mov	r7, r2
   239d0:	mov	r5, r0
   239d4:	cmp	r1, r2
   239d8:	beq	23a10 <main@@Base+0xd7b4>
   239dc:	ldrb	r0, [r1]
   239e0:	cmp	r0, #123	; 0x7b
   239e4:	bne	23a10 <main@@Base+0xd7b4>
   239e8:	add	r2, r1, #1
   239ec:	mov	r9, r3
   239f0:	sub	r0, r7, r2
   239f4:	cmp	r0, #2
   239f8:	blt	23a38 <main@@Base+0xd7dc>
   239fc:	ldrb	r0, [r2]
   23a00:	cmp	r0, #32
   23a04:	bls	23a28 <main@@Base+0xd7cc>
   23a08:	mov	r1, r2
   23a0c:	b	23a4c <main@@Base+0xd7f0>
   23a10:	mov	r0, r5
   23a14:	mov	r2, r7
   23a18:	mov	r3, #21
   23a1c:	sub	sp, fp, #28
   23a20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a24:	b	35f80 <flatcc_json_parser_set_error@@Base>
   23a28:	bne	23a38 <main@@Base+0xd7dc>
   23a2c:	ldrb	r0, [r1, #2]!
   23a30:	cmp	r0, #32
   23a34:	bhi	23a4c <main@@Base+0xd7f0>
   23a38:	mov	r1, r2
   23a3c:	mov	r0, r5
   23a40:	mov	r2, r7
   23a44:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   23a48:	mov	r1, r0
   23a4c:	cmp	r1, r7
   23a50:	mov	r2, r7
   23a54:	beq	23a8c <main@@Base+0xd830>
   23a58:	ldrb	r0, [r1]
   23a5c:	cmp	r0, #125	; 0x7d
   23a60:	bne	23a88 <main@@Base+0xd82c>
   23a64:	add	r2, r1, #1
   23a68:	sub	r0, r7, r2
   23a6c:	cmp	r0, #2
   23a70:	blt	240b4 <main@@Base+0xde58>
   23a74:	ldrb	r0, [r2]
   23a78:	cmp	r0, #32
   23a7c:	bls	240a4 <main@@Base+0xde48>
   23a80:	mov	r1, r2
   23a84:	b	2410c <main@@Base+0xdeb0>
   23a88:	mov	r2, r1
   23a8c:	mov	sl, #1627389952	; 0x61000000
   23a90:	cmp	r2, r7
   23a94:	mov	r4, r7
   23a98:	beq	23ae4 <main@@Base+0xd888>
   23a9c:	ldrb	r0, [r2]
   23aa0:	cmp	r0, #46	; 0x2e
   23aa4:	beq	23abc <main@@Base+0xd860>
   23aa8:	cmp	r0, #34	; 0x22
   23aac:	bne	23ad8 <main@@Base+0xd87c>
   23ab0:	mov	r0, #0
   23ab4:	add	r4, r2, #1
   23ab8:	b	23ae0 <main@@Base+0xd884>
   23abc:	mov	r1, r2
   23ac0:	mov	r0, r5
   23ac4:	mov	r2, r7
   23ac8:	mov	r3, #5
   23acc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   23ad0:	mov	r4, r0
   23ad4:	b	23ae4 <main@@Base+0xd888>
   23ad8:	mov	r0, #1
   23adc:	mov	r4, r2
   23ae0:	str	r0, [r5, #12]
   23ae4:	sub	r0, r7, r4
   23ae8:	mov	r1, #8
   23aec:	cmp	r0, #8
   23af0:	movcc	r1, r0
   23af4:	sub	r1, r1, #1
   23af8:	cmp	r1, #7
   23afc:	bhi	23edc <main@@Base+0xdc80>
   23b00:	ldrb	r1, [r4]
   23b04:	teq	sl, r1, lsl #24
   23b08:	beq	23b58 <main@@Base+0xd8fc>
   23b0c:	lsl	r1, r1, #24
   23b10:	teq	r1, #1644167168	; 0x62000000
   23b14:	bne	23edc <main@@Base+0xdc80>
   23b18:	cmp	r0, #2
   23b1c:	mov	r8, r4
   23b20:	blt	23d20 <main@@Base+0xdac4>
   23b24:	mov	r1, r4
   23b28:	ldr	r2, [r5, #12]
   23b2c:	ldrb	r0, [r1, #1]!
   23b30:	cmp	r2, #0
   23b34:	beq	23b98 <main@@Base+0xd93c>
   23b38:	cmp	r0, #33	; 0x21
   23b3c:	bcc	23b4c <main@@Base+0xd8f0>
   23b40:	cmp	r0, #58	; 0x3a
   23b44:	mov	r8, r4
   23b48:	bne	23d20 <main@@Base+0xdac4>
   23b4c:	mov	r0, #0
   23b50:	str	r0, [r5, #12]
   23b54:	b	23ba8 <main@@Base+0xd94c>
   23b58:	cmp	r0, #2
   23b5c:	mov	r6, r4
   23b60:	blt	23e5c <main@@Base+0xdc00>
   23b64:	mov	r1, r4
   23b68:	ldr	r2, [r5, #12]
   23b6c:	ldrb	r0, [r1, #1]!
   23b70:	cmp	r2, #0
   23b74:	beq	23bd0 <main@@Base+0xd974>
   23b78:	cmp	r0, #33	; 0x21
   23b7c:	bcc	23b8c <main@@Base+0xd930>
   23b80:	cmp	r0, #58	; 0x3a
   23b84:	mov	r6, r4
   23b88:	bne	23e5c <main@@Base+0xdc00>
   23b8c:	mov	r0, #0
   23b90:	str	r0, [r5, #12]
   23b94:	b	23be0 <main@@Base+0xd984>
   23b98:	cmp	r0, #34	; 0x22
   23b9c:	mov	r8, r4
   23ba0:	bne	23d20 <main@@Base+0xdac4>
   23ba4:	add	r1, r4, #2
   23ba8:	sub	r0, r7, r1
   23bac:	cmp	r0, #2
   23bb0:	blt	23c1c <main@@Base+0xd9c0>
   23bb4:	ldrb	r0, [r1]
   23bb8:	cmp	r0, #32
   23bbc:	bls	23c08 <main@@Base+0xd9ac>
   23bc0:	mov	r8, r1
   23bc4:	cmp	r8, r7
   23bc8:	bne	23c34 <main@@Base+0xd9d8>
   23bcc:	b	23c6c <main@@Base+0xda10>
   23bd0:	cmp	r0, #34	; 0x22
   23bd4:	mov	r6, r4
   23bd8:	bne	23e5c <main@@Base+0xdc00>
   23bdc:	add	r1, r4, #2
   23be0:	sub	r0, r7, r1
   23be4:	cmp	r0, #2
   23be8:	blt	23c98 <main@@Base+0xda3c>
   23bec:	ldrb	r0, [r1]
   23bf0:	cmp	r0, #32
   23bf4:	bls	23c84 <main@@Base+0xda28>
   23bf8:	mov	r6, r1
   23bfc:	cmp	r6, r7
   23c00:	bne	23cb0 <main@@Base+0xda54>
   23c04:	b	23ce8 <main@@Base+0xda8c>
   23c08:	bne	23c1c <main@@Base+0xd9c0>
   23c0c:	mov	r8, r1
   23c10:	ldrb	r0, [r8, #1]!
   23c14:	cmp	r0, #32
   23c18:	bhi	23c2c <main@@Base+0xd9d0>
   23c1c:	mov	r0, r5
   23c20:	mov	r2, r7
   23c24:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   23c28:	mov	r8, r0
   23c2c:	cmp	r8, r7
   23c30:	beq	23c6c <main@@Base+0xda10>
   23c34:	ldrb	r0, [r8]
   23c38:	cmp	r0, #58	; 0x3a
   23c3c:	bne	23c6c <main@@Base+0xda10>
   23c40:	add	r1, r8, #1
   23c44:	sub	r0, r7, r1
   23c48:	cmp	r0, #2
   23c4c:	blt	23d10 <main@@Base+0xdab4>
   23c50:	ldrb	r0, [r1]
   23c54:	cmp	r0, #32
   23c58:	bls	23d00 <main@@Base+0xdaa4>
   23c5c:	mov	r8, r1
   23c60:	cmp	r4, r8
   23c64:	bne	23d28 <main@@Base+0xdacc>
   23c68:	b	23edc <main@@Base+0xdc80>
   23c6c:	mov	r0, r5
   23c70:	mov	r1, r8
   23c74:	mov	r2, r7
   23c78:	mov	r3, #4
   23c7c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   23c80:	b	23d1c <main@@Base+0xdac0>
   23c84:	bne	23c98 <main@@Base+0xda3c>
   23c88:	mov	r6, r1
   23c8c:	ldrb	r0, [r6, #1]!
   23c90:	cmp	r0, #32
   23c94:	bhi	23ca8 <main@@Base+0xda4c>
   23c98:	mov	r0, r5
   23c9c:	mov	r2, r7
   23ca0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   23ca4:	mov	r6, r0
   23ca8:	cmp	r6, r7
   23cac:	beq	23ce8 <main@@Base+0xda8c>
   23cb0:	ldrb	r0, [r6]
   23cb4:	cmp	r0, #58	; 0x3a
   23cb8:	bne	23ce8 <main@@Base+0xda8c>
   23cbc:	add	r1, r6, #1
   23cc0:	sub	r0, r7, r1
   23cc4:	cmp	r0, #2
   23cc8:	blt	23e4c <main@@Base+0xdbf0>
   23ccc:	ldrb	r0, [r1]
   23cd0:	cmp	r0, #32
   23cd4:	bls	23e3c <main@@Base+0xdbe0>
   23cd8:	mov	r6, r1
   23cdc:	cmp	r4, r6
   23ce0:	bne	23e64 <main@@Base+0xdc08>
   23ce4:	b	23edc <main@@Base+0xdc80>
   23ce8:	mov	r0, r5
   23cec:	mov	r1, r6
   23cf0:	mov	r2, r7
   23cf4:	mov	r3, #4
   23cf8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   23cfc:	b	23e58 <main@@Base+0xdbfc>
   23d00:	bne	23d10 <main@@Base+0xdab4>
   23d04:	ldrb	r0, [r8, #2]!
   23d08:	cmp	r0, #32
   23d0c:	bhi	23d20 <main@@Base+0xdac4>
   23d10:	mov	r0, r5
   23d14:	mov	r2, r7
   23d18:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   23d1c:	mov	r8, r0
   23d20:	cmp	r4, r8
   23d24:	beq	23edc <main@@Base+0xdc80>
   23d28:	mov	r4, #0
   23d2c:	cmp	r8, r7
   23d30:	str	r4, [sp, #20]
   23d34:	str	r4, [sp, #16]
   23d38:	strb	r4, [sp, #10]
   23d3c:	str	r4, [sp, #12]
   23d40:	beq	23d9c <main@@Base+0xdb40>
   23d44:	add	r0, sp, #16
   23d48:	mov	r1, r8
   23d4c:	mov	r2, r7
   23d50:	add	r3, sp, #12
   23d54:	str	r0, [sp]
   23d58:	mov	r0, r5
   23d5c:	bl	382dc <flatcc_json_parser_integer@@Base>
   23d60:	cmp	r0, r8
   23d64:	beq	23dac <main@@Base+0xdb50>
   23d68:	ldr	r3, [sp, #12]
   23d6c:	mov	r1, r0
   23d70:	ldr	r0, [sp, #16]
   23d74:	ldr	r2, [sp, #20]
   23d78:	cmp	r3, #0
   23d7c:	beq	23dbc <main@@Base+0xdb60>
   23d80:	subs	r3, r0, #129	; 0x81
   23d84:	sbcs	r2, r2, #0
   23d88:	bcc	23de8 <main@@Base+0xdb8c>
   23d8c:	mov	r0, r5
   23d90:	mov	r2, r7
   23d94:	mov	r3, #8
   23d98:	b	23dd4 <main@@Base+0xdb78>
   23d9c:	mov	r1, r7
   23da0:	cmp	r8, r1
   23da4:	bne	23e34 <main@@Base+0xdbd8>
   23da8:	b	23e00 <main@@Base+0xdba4>
   23dac:	mov	r1, r8
   23db0:	cmp	r8, r1
   23db4:	bne	23e34 <main@@Base+0xdbd8>
   23db8:	b	23e00 <main@@Base+0xdba4>
   23dbc:	subs	r3, r0, #128	; 0x80
   23dc0:	sbcs	r2, r2, #0
   23dc4:	bcc	23df0 <main@@Base+0xdb94>
   23dc8:	mov	r0, r5
   23dcc:	mov	r2, r7
   23dd0:	mov	r3, #7
   23dd4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   23dd8:	mov	r1, r0
   23ddc:	cmp	r8, r1
   23de0:	bne	23e34 <main@@Base+0xdbd8>
   23de4:	b	23e00 <main@@Base+0xdba4>
   23de8:	rsb	r4, r0, #0
   23dec:	b	23df4 <main@@Base+0xdb98>
   23df0:	mov	r4, r0
   23df4:	strb	r4, [sp, #10]
   23df8:	cmp	r8, r1
   23dfc:	bne	23e34 <main@@Base+0xdbd8>
   23e00:	add	r0, sp, #10
   23e04:	mov	r1, r8
   23e08:	mov	r2, r7
   23e0c:	str	r0, [sp]
   23e10:	mov	r0, r5
   23e14:	ldr	r3, [pc, #764]	; 24118 <main@@Base+0xdebc>
   23e18:	add	r3, pc, r3
   23e1c:	bl	23394 <main@@Base+0xd138>
   23e20:	mov	r1, r0
   23e24:	cmp	r0, r8
   23e28:	cmpne	r1, r7
   23e2c:	beq	24054 <main@@Base+0xddf8>
   23e30:	ldrb	r4, [sp, #10]
   23e34:	strb	r4, [r9, #2]
   23e38:	b	23ef0 <main@@Base+0xdc94>
   23e3c:	bne	23e4c <main@@Base+0xdbf0>
   23e40:	ldrb	r0, [r6, #2]!
   23e44:	cmp	r0, #32
   23e48:	bhi	23e5c <main@@Base+0xdc00>
   23e4c:	mov	r0, r5
   23e50:	mov	r2, r7
   23e54:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   23e58:	mov	r6, r0
   23e5c:	cmp	r4, r6
   23e60:	beq	23edc <main@@Base+0xdc80>
   23e64:	mov	r4, #0
   23e68:	cmp	r6, r7
   23e6c:	str	r4, [sp, #20]
   23e70:	str	r4, [sp, #16]
   23e74:	strh	r4, [sp, #10]
   23e78:	str	r4, [sp, #12]
   23e7c:	beq	23fb4 <main@@Base+0xdd58>
   23e80:	add	r0, sp, #16
   23e84:	mov	r1, r6
   23e88:	mov	r2, r7
   23e8c:	add	r3, sp, #12
   23e90:	str	r0, [sp]
   23e94:	mov	r0, r5
   23e98:	bl	382dc <flatcc_json_parser_integer@@Base>
   23e9c:	cmp	r0, r6
   23ea0:	beq	23fc4 <main@@Base+0xdd68>
   23ea4:	ldr	r3, [sp, #12]
   23ea8:	mov	r1, r0
   23eac:	ldr	r0, [sp, #16]
   23eb0:	ldr	r2, [sp, #20]
   23eb4:	cmp	r3, #0
   23eb8:	beq	23fd4 <main@@Base+0xdd78>
   23ebc:	movw	r3, #32769	; 0x8001
   23ec0:	subs	r3, r0, r3
   23ec4:	sbcs	r2, r2, #0
   23ec8:	bcc	24000 <main@@Base+0xdda4>
   23ecc:	mov	r0, r5
   23ed0:	mov	r2, r7
   23ed4:	mov	r3, #8
   23ed8:	b	23fec <main@@Base+0xdd90>
   23edc:	mov	r0, r5
   23ee0:	mov	r1, r4
   23ee4:	mov	r2, r7
   23ee8:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   23eec:	mov	r1, r0
   23ef0:	sub	r0, r7, r1
   23ef4:	cmp	r0, #2
   23ef8:	blt	23f2c <main@@Base+0xdcd0>
   23efc:	ldrb	r0, [r1]
   23f00:	cmp	r0, #32
   23f04:	bls	23f18 <main@@Base+0xdcbc>
   23f08:	mov	r2, r1
   23f0c:	cmp	r2, r7
   23f10:	bne	23f44 <main@@Base+0xdce8>
   23f14:	b	24064 <main@@Base+0xde08>
   23f18:	bne	23f2c <main@@Base+0xdcd0>
   23f1c:	mov	r2, r1
   23f20:	ldrb	r0, [r2, #1]!
   23f24:	cmp	r0, #32
   23f28:	bhi	23f3c <main@@Base+0xdce0>
   23f2c:	mov	r0, r5
   23f30:	mov	r2, r7
   23f34:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   23f38:	mov	r2, r0
   23f3c:	cmp	r2, r7
   23f40:	beq	24064 <main@@Base+0xde08>
   23f44:	ldrb	r0, [r2]
   23f48:	cmp	r0, #44	; 0x2c
   23f4c:	bne	2406c <main@@Base+0xde10>
   23f50:	add	r1, r2, #1
   23f54:	sub	r0, r7, r1
   23f58:	cmp	r0, #2
   23f5c:	blt	23f8c <main@@Base+0xdd30>
   23f60:	ldrb	r0, [r1]
   23f64:	cmp	r0, #32
   23f68:	bls	23f7c <main@@Base+0xdd20>
   23f6c:	mov	r2, r1
   23f70:	cmp	r2, r7
   23f74:	bne	23fa4 <main@@Base+0xdd48>
   23f78:	b	24098 <main@@Base+0xde3c>
   23f7c:	bne	23f8c <main@@Base+0xdd30>
   23f80:	ldrb	r0, [r2, #2]!
   23f84:	cmp	r0, #32
   23f88:	bhi	23f9c <main@@Base+0xdd40>
   23f8c:	mov	r0, r5
   23f90:	mov	r2, r7
   23f94:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   23f98:	mov	r2, r0
   23f9c:	cmp	r2, r7
   23fa0:	beq	24098 <main@@Base+0xde3c>
   23fa4:	ldrb	r0, [r2]
   23fa8:	cmp	r0, #125	; 0x7d
   23fac:	bne	23a90 <main@@Base+0xd834>
   23fb0:	b	24074 <main@@Base+0xde18>
   23fb4:	mov	r1, r7
   23fb8:	cmp	r6, r1
   23fbc:	bne	2404c <main@@Base+0xddf0>
   23fc0:	b	24018 <main@@Base+0xddbc>
   23fc4:	mov	r1, r6
   23fc8:	cmp	r6, r1
   23fcc:	bne	2404c <main@@Base+0xddf0>
   23fd0:	b	24018 <main@@Base+0xddbc>
   23fd4:	subs	r3, r0, #32768	; 0x8000
   23fd8:	sbcs	r2, r2, #0
   23fdc:	bcc	24008 <main@@Base+0xddac>
   23fe0:	mov	r0, r5
   23fe4:	mov	r2, r7
   23fe8:	mov	r3, #7
   23fec:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   23ff0:	mov	r1, r0
   23ff4:	cmp	r6, r1
   23ff8:	bne	2404c <main@@Base+0xddf0>
   23ffc:	b	24018 <main@@Base+0xddbc>
   24000:	rsb	r4, r0, #0
   24004:	b	2400c <main@@Base+0xddb0>
   24008:	mov	r4, r0
   2400c:	strh	r4, [sp, #10]
   24010:	cmp	r6, r1
   24014:	bne	2404c <main@@Base+0xddf0>
   24018:	add	r0, sp, #10
   2401c:	mov	r1, r6
   24020:	mov	r2, r7
   24024:	str	r0, [sp]
   24028:	mov	r0, r5
   2402c:	ldr	r3, [pc, #232]	; 2411c <main@@Base+0xdec0>
   24030:	add	r3, pc, r3
   24034:	bl	237ac <main@@Base+0xd550>
   24038:	mov	r1, r0
   2403c:	cmp	r0, r6
   24040:	cmpne	r1, r7
   24044:	beq	24054 <main@@Base+0xddf8>
   24048:	ldrh	r4, [sp, #10]
   2404c:	strh	r4, [r9]
   24050:	b	23ef0 <main@@Base+0xdc94>
   24054:	mov	r0, r5
   24058:	mov	r2, r7
   2405c:	mov	r3, #33	; 0x21
   24060:	b	240dc <main@@Base+0xde80>
   24064:	mov	r1, r7
   24068:	b	2410c <main@@Base+0xdeb0>
   2406c:	cmp	r0, #125	; 0x7d
   24070:	bne	240cc <main@@Base+0xde70>
   24074:	add	r3, r2, #1
   24078:	sub	r0, r7, r3
   2407c:	cmp	r0, #2
   24080:	blt	240f8 <main@@Base+0xde9c>
   24084:	ldrb	r0, [r3]
   24088:	cmp	r0, #32
   2408c:	bls	240e4 <main@@Base+0xde88>
   24090:	mov	r1, r3
   24094:	b	2410c <main@@Base+0xdeb0>
   24098:	mov	r0, r5
   2409c:	mov	r1, r7
   240a0:	b	240d4 <main@@Base+0xde78>
   240a4:	bne	240b4 <main@@Base+0xde58>
   240a8:	ldrb	r0, [r1, #2]!
   240ac:	cmp	r0, #32
   240b0:	bhi	2410c <main@@Base+0xdeb0>
   240b4:	mov	r1, r2
   240b8:	mov	r0, r5
   240bc:	mov	r2, r7
   240c0:	sub	sp, fp, #28
   240c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   240c8:	b	36030 <flatcc_json_parser_space_ext@@Base>
   240cc:	mov	r0, r5
   240d0:	mov	r1, r2
   240d4:	mov	r2, r7
   240d8:	mov	r3, #10
   240dc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   240e0:	b	24108 <main@@Base+0xdeac>
   240e4:	bne	240f8 <main@@Base+0xde9c>
   240e8:	ldrb	r0, [r2, #2]!
   240ec:	mov	r1, r2
   240f0:	cmp	r0, #32
   240f4:	bhi	2410c <main@@Base+0xdeb0>
   240f8:	mov	r0, r5
   240fc:	mov	r1, r3
   24100:	mov	r2, r7
   24104:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   24108:	mov	r1, r0
   2410c:	mov	r0, r1
   24110:	sub	sp, fp, #28
   24114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24118:			; <UNDEFINED> instruction: 0x0003b3bc
   2411c:			; <UNDEFINED> instruction: 0x0003b1b0
   24120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24124:	add	fp, sp, #28
   24128:	sub	sp, sp, #28
   2412c:	ldr	r5, [fp, #8]
   24130:	mov	r8, r0
   24134:	mov	r0, #0
   24138:	mov	sl, r2
   2413c:	mov	r4, r1
   24140:	cmp	r3, #4
   24144:	str	r0, [r5]
   24148:	bhi	241a8 <main@@Base+0xdf4c>
   2414c:	add	r0, pc, #4
   24150:	ldr	r1, [r0, r3, lsl #2]
   24154:	add	pc, r0, r1
   24158:	andeq	r0, r0, r4, lsl r0
   2415c:	andeq	r0, r0, r8, ror r0
   24160:	muleq	r0, r0, r0
   24164:	andeq	r0, r0, r4, ror #1
   24168:	andeq	r0, r0, r8, lsr r1
   2416c:	sub	r0, sl, r4
   24170:	cmp	r0, #4
   24174:	blt	24194 <main@@Base+0xdf38>
   24178:	ldr	r1, [pc, #4076]	; 2516c <main@@Base+0xef10>
   2417c:	mov	r0, r4
   24180:	mov	r2, #4
   24184:	add	r1, pc, r1
   24188:	bl	14eb4 <bcmp@plt>
   2418c:	cmp	r0, #0
   24190:	beq	24348 <main@@Base+0xe0ec>
   24194:	mov	r0, r8
   24198:	mov	r1, r4
   2419c:	mov	r2, sl
   241a0:	mov	r3, #26
   241a4:	b	241c4 <main@@Base+0xdf68>
   241a8:	ldrb	r0, [r8, #8]
   241ac:	tst	r0, #1
   241b0:	bne	24318 <main@@Base+0xe0bc>
   241b4:	mov	r0, r8
   241b8:	mov	r1, r4
   241bc:	mov	r2, sl
   241c0:	mov	r3, #15
   241c4:	sub	sp, fp, #28
   241c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   241cc:	b	35f80 <flatcc_json_parser_set_error@@Base>
   241d0:	mov	r0, r8
   241d4:	mov	r1, r4
   241d8:	mov	r2, sl
   241dc:	mov	r3, r5
   241e0:	bl	172e4 <main@@Base+0x1088>
   241e4:	b	242e0 <main@@Base+0xe084>
   241e8:	mov	r0, #0
   241ec:	mov	r1, #4
   241f0:	str	r0, [r5]
   241f4:	ldr	r0, [r8]
   241f8:	bl	31348 <flatcc_builder_start_table@@Base>
   241fc:	cmp	r0, #0
   24200:	bne	242cc <main@@Base+0xe070>
   24204:	cmp	r4, sl
   24208:	beq	242a8 <main@@Base+0xe04c>
   2420c:	ldrb	r0, [r4]
   24210:	cmp	r0, #123	; 0x7b
   24214:	bne	242a8 <main@@Base+0xe04c>
   24218:	add	r1, r4, #1
   2421c:	sub	r0, sl, r1
   24220:	cmp	r0, #2
   24224:	blt	24368 <main@@Base+0xe10c>
   24228:	ldrb	r0, [r1]
   2422c:	cmp	r0, #32
   24230:	bls	24358 <main@@Base+0xe0fc>
   24234:	mov	r4, r1
   24238:	b	24378 <main@@Base+0xe11c>
   2423c:	mov	r0, #0
   24240:	mov	r1, #0
   24244:	str	r0, [r5]
   24248:	ldr	r0, [r8]
   2424c:	bl	31348 <flatcc_builder_start_table@@Base>
   24250:	cmp	r0, #0
   24254:	bne	242cc <main@@Base+0xe070>
   24258:	cmp	r4, sl
   2425c:	beq	242a8 <main@@Base+0xe04c>
   24260:	ldrb	r0, [r4]
   24264:	cmp	r0, #123	; 0x7b
   24268:	bne	242a8 <main@@Base+0xe04c>
   2426c:	add	r1, r4, #1
   24270:	sub	r0, sl, r1
   24274:	cmp	r0, #2
   24278:	blt	24f60 <main@@Base+0xed04>
   2427c:	ldrb	r0, [r1]
   24280:	cmp	r0, #32
   24284:	bls	24f50 <main@@Base+0xecf4>
   24288:	mov	r4, r1
   2428c:	b	24f70 <main@@Base+0xed14>
   24290:	mov	r0, r8
   24294:	mov	r1, r4
   24298:	mov	r2, sl
   2429c:	mov	r3, r5
   242a0:	bl	26d78 <main@@Base+0x10b1c>
   242a4:	b	242e0 <main@@Base+0xe084>
   242a8:	mov	r0, r8
   242ac:	mov	r1, r4
   242b0:	mov	r2, sl
   242b4:	mov	r3, #21
   242b8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   242bc:	mov	r4, r0
   242c0:	ldr	r0, [r8, #24]
   242c4:	cmp	r0, #0
   242c8:	beq	24330 <main@@Base+0xe0d4>
   242cc:	mov	r0, r8
   242d0:	mov	r1, r4
   242d4:	mov	r2, sl
   242d8:	mov	r3, #33	; 0x21
   242dc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   242e0:	mov	r4, r0
   242e4:	ldr	r0, [r8, #24]
   242e8:	cmp	r0, #0
   242ec:	bne	2434c <main@@Base+0xe0f0>
   242f0:	ldr	r0, [r5]
   242f4:	cmp	r0, #0
   242f8:	bne	2434c <main@@Base+0xe0f0>
   242fc:	mov	r0, r8
   24300:	mov	r1, r4
   24304:	mov	r2, sl
   24308:	mov	r3, #33	; 0x21
   2430c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   24310:	mov	r4, r0
   24314:	b	2434c <main@@Base+0xe0f0>
   24318:	mov	r0, r8
   2431c:	mov	r1, r4
   24320:	mov	r2, sl
   24324:	sub	sp, fp, #28
   24328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2432c:	b	36a8c <flatcc_json_parser_generic_json@@Base>
   24330:	ldr	r0, [r8]
   24334:	bl	31d70 <flatcc_builder_end_table@@Base>
   24338:	cmp	r0, #0
   2433c:	str	r0, [r5]
   24340:	bne	242e4 <main@@Base+0xe088>
   24344:	b	242cc <main@@Base+0xe070>
   24348:	add	r4, r4, #4
   2434c:	mov	r0, r4
   24350:	sub	sp, fp, #28
   24354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24358:	bne	24368 <main@@Base+0xe10c>
   2435c:	ldrb	r0, [r4, #2]!
   24360:	cmp	r0, #32
   24364:	bhi	24378 <main@@Base+0xe11c>
   24368:	mov	r0, r8
   2436c:	mov	r2, sl
   24370:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   24374:	mov	r4, r0
   24378:	cmp	r4, sl
   2437c:	mov	r2, sl
   24380:	beq	24394 <main@@Base+0xe138>
   24384:	ldrb	r0, [r4]
   24388:	cmp	r0, #125	; 0x7d
   2438c:	beq	24f88 <main@@Base+0xed2c>
   24390:	mov	r2, r4
   24394:	cmp	r2, sl
   24398:	mov	r9, sl
   2439c:	beq	243e8 <main@@Base+0xe18c>
   243a0:	ldrb	r0, [r2]
   243a4:	cmp	r0, #46	; 0x2e
   243a8:	beq	243c0 <main@@Base+0xe164>
   243ac:	cmp	r0, #34	; 0x22
   243b0:	bne	243dc <main@@Base+0xe180>
   243b4:	mov	r0, #0
   243b8:	add	r9, r2, #1
   243bc:	b	243e4 <main@@Base+0xe188>
   243c0:	mov	r1, r2
   243c4:	mov	r0, r8
   243c8:	mov	r2, sl
   243cc:	mov	r3, #5
   243d0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   243d4:	mov	r9, r0
   243d8:	b	243e8 <main@@Base+0xe18c>
   243dc:	mov	r0, #1
   243e0:	mov	r9, r2
   243e4:	str	r0, [r8, #12]
   243e8:	sub	lr, sl, r9
   243ec:	mov	r0, #8
   243f0:	cmp	lr, #8
   243f4:	movcc	r0, lr
   243f8:	sub	r1, r0, #1
   243fc:	cmp	r1, #7
   24400:	bhi	24d9c <main@@Base+0xeb40>
   24404:	add	r4, pc, #32
   24408:	mov	ip, r5
   2440c:	mov	r0, #0
   24410:	mov	r2, #0
   24414:	mov	r3, #0
   24418:	mov	r7, #0
   2441c:	mov	r6, #0
   24420:	ldr	r5, [r4, r1, lsl #2]
   24424:	mov	r1, #0
   24428:	add	pc, r4, r5
   2442c:	andeq	r0, r0, r0, asr r0
   24430:	andeq	r0, r0, r8, asr #32
   24434:	andeq	r0, r0, r0, asr #32
   24438:	andeq	r0, r0, r8, lsr r0
   2443c:	andeq	r0, r0, r8, lsr #32
   24440:	andeq	r0, r0, r0, lsr #32
   24444:	andeq	r0, r0, r0, lsr #32
   24448:	andeq	r0, r0, r0, lsr #32
   2444c:	ldrb	r1, [r9, #5]
   24450:	lsl	r1, r1, #16
   24454:	ldrb	r2, [r9, #4]
   24458:	orr	r1, r1, r2, lsl #24
   2445c:	mov	r2, r0
   24460:	mov	r0, r1
   24464:	ldrb	r1, [r9, #3]
   24468:	orr	r3, r1, r2
   2446c:	ldrb	r1, [r9, #2]
   24470:	orr	r7, r3, r1, lsl #8
   24474:	ldrb	r1, [r9, #1]
   24478:	orr	r6, r7, r1, lsl #16
   2447c:	ldrb	r1, [r9]
   24480:	movw	r3, #29234	; 0x7232
   24484:	lsr	r2, r0, #16
   24488:	movt	r3, #27759	; 0x6c6f
   2448c:	orr	r7, r6, r1, lsl #24
   24490:	movw	r1, #25455	; 0x636f
   24494:	orr	r2, r2, r7, lsl #16
   24498:	eor	r1, r1, r7, lsr #16
   2449c:	eor	r2, r2, r3
   244a0:	orrs	r1, r2, r1
   244a4:	bne	244ec <main@@Base+0xe290>
   244a8:	cmp	lr, #7
   244ac:	mov	r6, r9
   244b0:	mov	r5, ip
   244b4:	blt	246f4 <main@@Base+0xe498>
   244b8:	mov	r1, r9
   244bc:	ldr	r2, [r8, #12]
   244c0:	ldrb	r0, [r1, #6]!
   244c4:	cmp	r2, #0
   244c8:	beq	2454c <main@@Base+0xe2f0>
   244cc:	cmp	r0, #33	; 0x21
   244d0:	bcc	244e0 <main@@Base+0xe284>
   244d4:	cmp	r0, #58	; 0x3a
   244d8:	mov	r6, r9
   244dc:	bne	246f4 <main@@Base+0xe498>
   244e0:	mov	r0, #0
   244e4:	str	r0, [r8, #12]
   244e8:	b	2455c <main@@Base+0xe300>
   244ec:	movw	r1, #27759	; 0x6c6f
   244f0:	and	r0, r0, #-16777216	; 0xff000000
   244f4:	mov	r5, ip
   244f8:	movt	r1, #25455	; 0x636f
   244fc:	eor	r0, r0, #1912602624	; 0x72000000
   24500:	eor	r1, r7, r1
   24504:	orrs	r0, r0, r1
   24508:	bne	248dc <main@@Base+0xe680>
   2450c:	cmp	lr, #6
   24510:	mov	r6, r9
   24514:	blt	2485c <main@@Base+0xe600>
   24518:	mov	r1, r9
   2451c:	ldr	r2, [r8, #12]
   24520:	ldrb	r0, [r1, #5]!
   24524:	cmp	r2, #0
   24528:	beq	24584 <main@@Base+0xe328>
   2452c:	cmp	r0, #33	; 0x21
   24530:	bcc	24540 <main@@Base+0xe2e4>
   24534:	cmp	r0, #58	; 0x3a
   24538:	mov	r6, r9
   2453c:	bne	2485c <main@@Base+0xe600>
   24540:	mov	r0, #0
   24544:	str	r0, [r8, #12]
   24548:	b	24594 <main@@Base+0xe338>
   2454c:	cmp	r0, #34	; 0x22
   24550:	mov	r6, r9
   24554:	bne	246f4 <main@@Base+0xe498>
   24558:	add	r1, r9, #7
   2455c:	sub	r0, sl, r1
   24560:	cmp	r0, #2
   24564:	blt	245d0 <main@@Base+0xe374>
   24568:	ldrb	r0, [r1]
   2456c:	cmp	r0, #32
   24570:	bls	245bc <main@@Base+0xe360>
   24574:	mov	r6, r1
   24578:	cmp	r6, sl
   2457c:	bne	245f0 <main@@Base+0xe394>
   24580:	b	24628 <main@@Base+0xe3cc>
   24584:	cmp	r0, #34	; 0x22
   24588:	mov	r6, r9
   2458c:	bne	2485c <main@@Base+0xe600>
   24590:	add	r1, r9, #6
   24594:	sub	r0, sl, r1
   24598:	cmp	r0, #2
   2459c:	blt	24658 <main@@Base+0xe3fc>
   245a0:	ldrb	r0, [r1]
   245a4:	cmp	r0, #32
   245a8:	bls	24644 <main@@Base+0xe3e8>
   245ac:	mov	r6, r1
   245b0:	cmp	r6, sl
   245b4:	bne	24678 <main@@Base+0xe41c>
   245b8:	b	246b0 <main@@Base+0xe454>
   245bc:	bne	245d0 <main@@Base+0xe374>
   245c0:	mov	r6, r1
   245c4:	ldrb	r0, [r6, #1]!
   245c8:	cmp	r0, #32
   245cc:	bhi	245e8 <main@@Base+0xe38c>
   245d0:	mov	r0, r8
   245d4:	mov	r2, sl
   245d8:	mov	r4, lr
   245dc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   245e0:	mov	lr, r4
   245e4:	mov	r6, r0
   245e8:	cmp	r6, sl
   245ec:	beq	24628 <main@@Base+0xe3cc>
   245f0:	ldrb	r0, [r6]
   245f4:	cmp	r0, #58	; 0x3a
   245f8:	bne	24628 <main@@Base+0xe3cc>
   245fc:	add	r1, r6, #1
   24600:	sub	r0, sl, r1
   24604:	cmp	r0, #2
   24608:	blt	246dc <main@@Base+0xe480>
   2460c:	ldrb	r0, [r1]
   24610:	cmp	r0, #32
   24614:	bls	246cc <main@@Base+0xe470>
   24618:	mov	r6, r1
   2461c:	cmp	r9, r6
   24620:	bne	246fc <main@@Base+0xe4a0>
   24624:	b	248dc <main@@Base+0xe680>
   24628:	mov	r0, r8
   2462c:	mov	r1, r6
   24630:	mov	r2, sl
   24634:	mov	r3, #4
   24638:	mov	r4, lr
   2463c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   24640:	b	246ec <main@@Base+0xe490>
   24644:	bne	24658 <main@@Base+0xe3fc>
   24648:	mov	r6, r1
   2464c:	ldrb	r0, [r6, #1]!
   24650:	cmp	r0, #32
   24654:	bhi	24670 <main@@Base+0xe414>
   24658:	mov	r0, r8
   2465c:	mov	r2, sl
   24660:	mov	r4, lr
   24664:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   24668:	mov	lr, r4
   2466c:	mov	r6, r0
   24670:	cmp	r6, sl
   24674:	beq	246b0 <main@@Base+0xe454>
   24678:	ldrb	r0, [r6]
   2467c:	cmp	r0, #58	; 0x3a
   24680:	bne	246b0 <main@@Base+0xe454>
   24684:	add	r1, r6, #1
   24688:	sub	r0, sl, r1
   2468c:	cmp	r0, #2
   24690:	blt	24844 <main@@Base+0xe5e8>
   24694:	ldrb	r0, [r1]
   24698:	cmp	r0, #32
   2469c:	bls	24834 <main@@Base+0xe5d8>
   246a0:	mov	r6, r1
   246a4:	cmp	r9, r6
   246a8:	bne	24864 <main@@Base+0xe608>
   246ac:	b	248dc <main@@Base+0xe680>
   246b0:	mov	r0, r8
   246b4:	mov	r1, r6
   246b8:	mov	r2, sl
   246bc:	mov	r3, #4
   246c0:	mov	r4, lr
   246c4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   246c8:	b	24854 <main@@Base+0xe5f8>
   246cc:	bne	246dc <main@@Base+0xe480>
   246d0:	ldrb	r0, [r6, #2]!
   246d4:	cmp	r0, #32
   246d8:	bhi	246f4 <main@@Base+0xe498>
   246dc:	mov	r0, r8
   246e0:	mov	r2, sl
   246e4:	mov	r4, lr
   246e8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   246ec:	mov	lr, r4
   246f0:	mov	r6, r0
   246f4:	cmp	r9, r6
   246f8:	beq	248dc <main@@Base+0xe680>
   246fc:	mov	r7, #0
   24700:	cmp	r6, sl
   24704:	str	r7, [sp, #20]
   24708:	str	r7, [sp, #16]
   2470c:	strb	r7, [sp, #11]
   24710:	str	r7, [sp, #12]
   24714:	beq	24774 <main@@Base+0xe518>
   24718:	add	r0, sp, #16
   2471c:	mov	r1, r6
   24720:	mov	r2, sl
   24724:	add	r3, sp, #12
   24728:	str	r0, [sp]
   2472c:	mov	r0, r8
   24730:	bl	382dc <flatcc_json_parser_integer@@Base>
   24734:	cmp	r0, r6
   24738:	beq	24784 <main@@Base+0xe528>
   2473c:	ldr	r2, [sp, #12]
   24740:	mov	r4, r0
   24744:	ldr	r0, [sp, #16]
   24748:	ldr	r1, [sp, #20]
   2474c:	cmp	r2, #0
   24750:	beq	24794 <main@@Base+0xe538>
   24754:	subs	r2, r0, #129	; 0x81
   24758:	sbcs	r1, r1, #0
   2475c:	bcc	247c4 <main@@Base+0xe568>
   24760:	mov	r0, r8
   24764:	mov	r1, r4
   24768:	mov	r2, sl
   2476c:	mov	r3, #8
   24770:	b	247b0 <main@@Base+0xe554>
   24774:	mov	r4, sl
   24778:	cmp	r6, r4
   2477c:	bne	24810 <main@@Base+0xe5b4>
   24780:	b	247dc <main@@Base+0xe580>
   24784:	mov	r4, r6
   24788:	cmp	r6, r4
   2478c:	bne	24810 <main@@Base+0xe5b4>
   24790:	b	247dc <main@@Base+0xe580>
   24794:	subs	r2, r0, #128	; 0x80
   24798:	sbcs	r1, r1, #0
   2479c:	bcc	247cc <main@@Base+0xe570>
   247a0:	mov	r0, r8
   247a4:	mov	r1, r4
   247a8:	mov	r2, sl
   247ac:	mov	r3, #7
   247b0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   247b4:	mov	r4, r0
   247b8:	cmp	r6, r4
   247bc:	bne	24810 <main@@Base+0xe5b4>
   247c0:	b	247dc <main@@Base+0xe580>
   247c4:	rsb	r7, r0, #0
   247c8:	b	247d0 <main@@Base+0xe574>
   247cc:	mov	r7, r0
   247d0:	strb	r7, [sp, #11]
   247d4:	cmp	r6, r4
   247d8:	bne	24810 <main@@Base+0xe5b4>
   247dc:	add	r0, sp, #11
   247e0:	mov	r1, r6
   247e4:	mov	r2, sl
   247e8:	str	r0, [sp]
   247ec:	mov	r0, r8
   247f0:	ldr	r3, [pc, #2480]	; 251a8 <main@@Base+0xef4c>
   247f4:	add	r3, pc, r3
   247f8:	bl	23394 <main@@Base+0xd138>
   247fc:	mov	r4, r0
   24800:	cmp	r0, r6
   24804:	cmpne	r4, sl
   24808:	beq	242cc <main@@Base+0xe070>
   2480c:	ldrb	r7, [sp, #11]
   24810:	uxtb	r0, r7
   24814:	cmp	r0, #2
   24818:	bne	24828 <main@@Base+0xe5cc>
   2481c:	ldrb	r0, [r8, #8]
   24820:	tst	r0, #2
   24824:	beq	24e88 <main@@Base+0xec2c>
   24828:	ldr	r0, [r8]
   2482c:	mov	r1, #1
   24830:	b	24b2c <main@@Base+0xe8d0>
   24834:	bne	24844 <main@@Base+0xe5e8>
   24838:	ldrb	r0, [r6, #2]!
   2483c:	cmp	r0, #32
   24840:	bhi	2485c <main@@Base+0xe600>
   24844:	mov	r0, r8
   24848:	mov	r2, sl
   2484c:	mov	r4, lr
   24850:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   24854:	mov	lr, r4
   24858:	mov	r6, r0
   2485c:	cmp	r9, r6
   24860:	beq	248dc <main@@Base+0xe680>
   24864:	mov	r7, #0
   24868:	cmp	r6, sl
   2486c:	str	r7, [sp, #20]
   24870:	str	r7, [sp, #16]
   24874:	strb	r7, [sp, #11]
   24878:	str	r7, [sp, #12]
   2487c:	beq	24984 <main@@Base+0xe728>
   24880:	add	r0, sp, #16
   24884:	mov	r1, r6
   24888:	mov	r2, sl
   2488c:	add	r3, sp, #12
   24890:	str	r0, [sp]
   24894:	mov	r0, r8
   24898:	bl	382dc <flatcc_json_parser_integer@@Base>
   2489c:	cmp	r0, r6
   248a0:	beq	249cc <main@@Base+0xe770>
   248a4:	ldr	r2, [sp, #12]
   248a8:	mov	r4, r0
   248ac:	ldr	r0, [sp, #16]
   248b0:	ldr	r1, [sp, #20]
   248b4:	cmp	r2, #0
   248b8:	beq	24a14 <main@@Base+0xe7b8>
   248bc:	subs	r2, r0, #129	; 0x81
   248c0:	sbcs	r1, r1, #0
   248c4:	bcc	24a44 <main@@Base+0xe7e8>
   248c8:	mov	r0, r8
   248cc:	mov	r1, r4
   248d0:	mov	r2, sl
   248d4:	mov	r3, #8
   248d8:	b	24a30 <main@@Base+0xe7d4>
   248dc:	movw	r1, #12800	; 0x3200
   248e0:	bic	r0, r7, #255	; 0xff
   248e4:	movt	r1, #30051	; 0x7563
   248e8:	teq	r0, r1
   248ec:	bne	24930 <main@@Base+0xe6d4>
   248f0:	cmp	lr, #4
   248f4:	mov	r7, r9
   248f8:	blt	24be4 <main@@Base+0xe988>
   248fc:	mov	r1, r9
   24900:	ldr	r2, [r8, #12]
   24904:	ldrb	r0, [r1, #3]!
   24908:	cmp	r2, #0
   2490c:	beq	24994 <main@@Base+0xe738>
   24910:	cmp	r0, #33	; 0x21
   24914:	bcc	24924 <main@@Base+0xe6c8>
   24918:	cmp	r0, #58	; 0x3a
   2491c:	mov	r7, r9
   24920:	bne	24be4 <main@@Base+0xe988>
   24924:	mov	r0, #0
   24928:	str	r0, [r8, #12]
   2492c:	b	249a4 <main@@Base+0xe748>
   24930:	movw	r0, #0
   24934:	bfc	r7, #0, #16
   24938:	movt	r0, #30051	; 0x7563
   2493c:	teq	r7, r0
   24940:	bne	24d9c <main@@Base+0xeb40>
   24944:	cmp	lr, #3
   24948:	mov	r7, r9
   2494c:	blt	24d30 <main@@Base+0xead4>
   24950:	mov	r1, r9
   24954:	ldr	r2, [r8, #12]
   24958:	ldrb	r0, [r1, #2]!
   2495c:	cmp	r2, #0
   24960:	beq	249dc <main@@Base+0xe780>
   24964:	cmp	r0, #33	; 0x21
   24968:	bcc	24978 <main@@Base+0xe71c>
   2496c:	cmp	r0, #58	; 0x3a
   24970:	mov	r7, r9
   24974:	bne	24d30 <main@@Base+0xead4>
   24978:	mov	r0, #0
   2497c:	str	r0, [r8, #12]
   24980:	b	249ec <main@@Base+0xe790>
   24984:	mov	r4, sl
   24988:	cmp	r6, r4
   2498c:	bne	24b0c <main@@Base+0xe8b0>
   24990:	b	24ad8 <main@@Base+0xe87c>
   24994:	cmp	r0, #34	; 0x22
   24998:	mov	r7, r9
   2499c:	bne	24be4 <main@@Base+0xe988>
   249a0:	add	r1, r9, #4
   249a4:	sub	r0, sl, r1
   249a8:	cmp	r0, #2
   249ac:	blt	24a60 <main@@Base+0xe804>
   249b0:	ldrb	r0, [r1]
   249b4:	cmp	r0, #32
   249b8:	bls	24a4c <main@@Base+0xe7f0>
   249bc:	mov	r7, r1
   249c0:	cmp	r7, sl
   249c4:	bne	24a78 <main@@Base+0xe81c>
   249c8:	b	24ab0 <main@@Base+0xe854>
   249cc:	mov	r4, r6
   249d0:	cmp	r6, r4
   249d4:	bne	24b0c <main@@Base+0xe8b0>
   249d8:	b	24ad8 <main@@Base+0xe87c>
   249dc:	cmp	r0, #34	; 0x22
   249e0:	mov	r7, r9
   249e4:	bne	24d30 <main@@Base+0xead4>
   249e8:	add	r1, r9, #3
   249ec:	sub	r0, sl, r1
   249f0:	cmp	r0, #2
   249f4:	blt	24b5c <main@@Base+0xe900>
   249f8:	ldrb	r0, [r1]
   249fc:	cmp	r0, #32
   24a00:	bls	24b48 <main@@Base+0xe8ec>
   24a04:	mov	r7, r1
   24a08:	cmp	r7, sl
   24a0c:	bne	24b74 <main@@Base+0xe918>
   24a10:	b	24bac <main@@Base+0xe950>
   24a14:	subs	r2, r0, #128	; 0x80
   24a18:	sbcs	r1, r1, #0
   24a1c:	bcc	24ac8 <main@@Base+0xe86c>
   24a20:	mov	r0, r8
   24a24:	mov	r1, r4
   24a28:	mov	r2, sl
   24a2c:	mov	r3, #7
   24a30:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   24a34:	mov	r4, r0
   24a38:	cmp	r6, r4
   24a3c:	bne	24b0c <main@@Base+0xe8b0>
   24a40:	b	24ad8 <main@@Base+0xe87c>
   24a44:	rsb	r7, r0, #0
   24a48:	b	24acc <main@@Base+0xe870>
   24a4c:	bne	24a60 <main@@Base+0xe804>
   24a50:	mov	r7, r1
   24a54:	ldrb	r0, [r7, #1]!
   24a58:	cmp	r0, #32
   24a5c:	bhi	24a70 <main@@Base+0xe814>
   24a60:	mov	r0, r8
   24a64:	mov	r2, sl
   24a68:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   24a6c:	mov	r7, r0
   24a70:	cmp	r7, sl
   24a74:	beq	24ab0 <main@@Base+0xe854>
   24a78:	ldrb	r0, [r7]
   24a7c:	cmp	r0, #58	; 0x3a
   24a80:	bne	24ab0 <main@@Base+0xe854>
   24a84:	add	r1, r7, #1
   24a88:	sub	r0, sl, r1
   24a8c:	cmp	r0, #2
   24a90:	blt	24bd4 <main@@Base+0xe978>
   24a94:	ldrb	r0, [r1]
   24a98:	cmp	r0, #32
   24a9c:	bls	24bc4 <main@@Base+0xe968>
   24aa0:	mov	r7, r1
   24aa4:	cmp	r9, r7
   24aa8:	bne	24bec <main@@Base+0xe990>
   24aac:	b	24d9c <main@@Base+0xeb40>
   24ab0:	mov	r0, r8
   24ab4:	mov	r1, r7
   24ab8:	mov	r2, sl
   24abc:	mov	r3, #4
   24ac0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   24ac4:	b	24be0 <main@@Base+0xe984>
   24ac8:	mov	r7, r0
   24acc:	strb	r7, [sp, #11]
   24ad0:	cmp	r6, r4
   24ad4:	bne	24b0c <main@@Base+0xe8b0>
   24ad8:	add	r0, sp, #11
   24adc:	mov	r1, r6
   24ae0:	mov	r2, sl
   24ae4:	str	r0, [sp]
   24ae8:	mov	r0, r8
   24aec:	ldr	r3, [pc, #1720]	; 251ac <main@@Base+0xef50>
   24af0:	add	r3, pc, r3
   24af4:	bl	23394 <main@@Base+0xd138>
   24af8:	mov	r4, r0
   24afc:	cmp	r0, r6
   24b00:	cmpne	r4, sl
   24b04:	beq	242cc <main@@Base+0xe070>
   24b08:	ldrb	r7, [sp, #11]
   24b0c:	uxtb	r0, r7
   24b10:	cmp	r0, #2
   24b14:	bne	24b24 <main@@Base+0xe8c8>
   24b18:	ldrb	r0, [r8, #8]
   24b1c:	tst	r0, #2
   24b20:	beq	24e88 <main@@Base+0xec2c>
   24b24:	ldr	r0, [r8]
   24b28:	mov	r1, #0
   24b2c:	mov	r2, #1
   24b30:	mov	r3, #1
   24b34:	bl	327e4 <flatcc_builder_table_add@@Base>
   24b38:	cmp	r0, #0
   24b3c:	beq	242cc <main@@Base+0xe070>
   24b40:	strb	r7, [r0]
   24b44:	b	24e88 <main@@Base+0xec2c>
   24b48:	bne	24b5c <main@@Base+0xe900>
   24b4c:	mov	r7, r1
   24b50:	ldrb	r0, [r7, #1]!
   24b54:	cmp	r0, #32
   24b58:	bhi	24b6c <main@@Base+0xe910>
   24b5c:	mov	r0, r8
   24b60:	mov	r2, sl
   24b64:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   24b68:	mov	r7, r0
   24b6c:	cmp	r7, sl
   24b70:	beq	24bac <main@@Base+0xe950>
   24b74:	ldrb	r0, [r7]
   24b78:	cmp	r0, #58	; 0x3a
   24b7c:	bne	24bac <main@@Base+0xe950>
   24b80:	add	r1, r7, #1
   24b84:	sub	r0, sl, r1
   24b88:	cmp	r0, #2
   24b8c:	blt	24d20 <main@@Base+0xeac4>
   24b90:	ldrb	r0, [r1]
   24b94:	cmp	r0, #32
   24b98:	bls	24d10 <main@@Base+0xeab4>
   24b9c:	mov	r7, r1
   24ba0:	cmp	r9, r7
   24ba4:	bne	24d38 <main@@Base+0xeadc>
   24ba8:	b	24d9c <main@@Base+0xeb40>
   24bac:	mov	r0, r8
   24bb0:	mov	r1, r7
   24bb4:	mov	r2, sl
   24bb8:	mov	r3, #4
   24bbc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   24bc0:	b	24d2c <main@@Base+0xead0>
   24bc4:	bne	24bd4 <main@@Base+0xe978>
   24bc8:	ldrb	r0, [r7, #2]!
   24bcc:	cmp	r0, #32
   24bd0:	bhi	24be4 <main@@Base+0xe988>
   24bd4:	mov	r0, r8
   24bd8:	mov	r2, sl
   24bdc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   24be0:	mov	r7, r0
   24be4:	cmp	r9, r7
   24be8:	beq	24d9c <main@@Base+0xeb40>
   24bec:	mov	r6, #0
   24bf0:	cmp	r7, sl
   24bf4:	str	r6, [sp, #20]
   24bf8:	str	r6, [sp, #16]
   24bfc:	strb	r6, [sp, #11]
   24c00:	str	r6, [sp, #12]
   24c04:	beq	24c50 <main@@Base+0xe9f4>
   24c08:	add	r0, sp, #16
   24c0c:	mov	r1, r7
   24c10:	mov	r2, sl
   24c14:	add	r3, sp, #12
   24c18:	str	r0, [sp]
   24c1c:	mov	r0, r8
   24c20:	bl	382dc <flatcc_json_parser_integer@@Base>
   24c24:	cmp	r0, r7
   24c28:	beq	24c60 <main@@Base+0xea04>
   24c2c:	mov	r4, r0
   24c30:	ldr	r0, [sp, #12]
   24c34:	cmp	r0, #0
   24c38:	beq	24c70 <main@@Base+0xea14>
   24c3c:	mov	r0, r8
   24c40:	mov	r1, r4
   24c44:	mov	r2, sl
   24c48:	mov	r3, #8
   24c4c:	b	24c94 <main@@Base+0xea38>
   24c50:	mov	r4, sl
   24c54:	cmp	r7, r4
   24c58:	bne	24cd8 <main@@Base+0xea7c>
   24c5c:	b	24ca4 <main@@Base+0xea48>
   24c60:	mov	r4, r7
   24c64:	cmp	r7, r4
   24c68:	bne	24cd8 <main@@Base+0xea7c>
   24c6c:	b	24ca4 <main@@Base+0xea48>
   24c70:	ldr	r0, [sp, #16]
   24c74:	ldr	r1, [sp, #20]
   24c78:	subs	r2, r0, #256	; 0x100
   24c7c:	sbcs	r1, r1, #0
   24c80:	bcc	24cfc <main@@Base+0xeaa0>
   24c84:	mov	r0, r8
   24c88:	mov	r1, r4
   24c8c:	mov	r2, sl
   24c90:	mov	r3, #7
   24c94:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   24c98:	mov	r4, r0
   24c9c:	cmp	r7, r4
   24ca0:	bne	24cd8 <main@@Base+0xea7c>
   24ca4:	add	r0, sp, #11
   24ca8:	mov	r1, r7
   24cac:	mov	r2, sl
   24cb0:	str	r0, [sp]
   24cb4:	mov	r0, r8
   24cb8:	ldr	r3, [pc, #1264]	; 251b0 <main@@Base+0xef54>
   24cbc:	add	r3, pc, r3
   24cc0:	bl	235a4 <main@@Base+0xd348>
   24cc4:	mov	r4, r0
   24cc8:	cmp	r0, r7
   24ccc:	cmpne	r4, sl
   24cd0:	beq	242cc <main@@Base+0xe070>
   24cd4:	ldrb	r6, [sp, #11]
   24cd8:	uxtb	r0, r6
   24cdc:	cmp	r0, #2
   24ce0:	bne	24cf0 <main@@Base+0xea94>
   24ce4:	ldrb	r0, [r8, #8]
   24ce8:	tst	r0, #2
   24cec:	beq	24e88 <main@@Base+0xec2c>
   24cf0:	ldr	r0, [r8]
   24cf4:	mov	r1, #3
   24cf8:	b	24e70 <main@@Base+0xec14>
   24cfc:	mov	r6, r0
   24d00:	strb	r0, [sp, #11]
   24d04:	cmp	r7, r4
   24d08:	bne	24cd8 <main@@Base+0xea7c>
   24d0c:	b	24ca4 <main@@Base+0xea48>
   24d10:	bne	24d20 <main@@Base+0xeac4>
   24d14:	ldrb	r0, [r7, #2]!
   24d18:	cmp	r0, #32
   24d1c:	bhi	24d30 <main@@Base+0xead4>
   24d20:	mov	r0, r8
   24d24:	mov	r2, sl
   24d28:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   24d2c:	mov	r7, r0
   24d30:	cmp	r9, r7
   24d34:	beq	24d9c <main@@Base+0xeb40>
   24d38:	mov	r6, #0
   24d3c:	cmp	r7, sl
   24d40:	str	r6, [sp, #20]
   24d44:	str	r6, [sp, #16]
   24d48:	strb	r6, [sp, #11]
   24d4c:	str	r6, [sp, #12]
   24d50:	beq	24db4 <main@@Base+0xeb58>
   24d54:	add	r0, sp, #16
   24d58:	mov	r1, r7
   24d5c:	mov	r2, sl
   24d60:	add	r3, sp, #12
   24d64:	str	r0, [sp]
   24d68:	mov	r0, r8
   24d6c:	bl	382dc <flatcc_json_parser_integer@@Base>
   24d70:	cmp	r0, r7
   24d74:	beq	24dc4 <main@@Base+0xeb68>
   24d78:	mov	r4, r0
   24d7c:	ldr	r0, [sp, #12]
   24d80:	cmp	r0, #0
   24d84:	beq	24dd4 <main@@Base+0xeb78>
   24d88:	mov	r0, r8
   24d8c:	mov	r1, r4
   24d90:	mov	r2, sl
   24d94:	mov	r3, #8
   24d98:	b	24df8 <main@@Base+0xeb9c>
   24d9c:	mov	r0, r8
   24da0:	mov	r1, r9
   24da4:	mov	r2, sl
   24da8:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   24dac:	mov	r4, r0
   24db0:	b	24e88 <main@@Base+0xec2c>
   24db4:	mov	r4, sl
   24db8:	cmp	r7, r4
   24dbc:	bne	24e50 <main@@Base+0xebf4>
   24dc0:	b	24e08 <main@@Base+0xebac>
   24dc4:	mov	r4, r7
   24dc8:	cmp	r7, r4
   24dcc:	bne	24e50 <main@@Base+0xebf4>
   24dd0:	b	24e08 <main@@Base+0xebac>
   24dd4:	ldr	r0, [sp, #16]
   24dd8:	ldr	r1, [sp, #20]
   24ddc:	subs	r2, r0, #256	; 0x100
   24de0:	sbcs	r1, r1, #0
   24de4:	bcc	24e40 <main@@Base+0xebe4>
   24de8:	mov	r0, r8
   24dec:	mov	r1, r4
   24df0:	mov	r2, sl
   24df4:	mov	r3, #7
   24df8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   24dfc:	mov	r4, r0
   24e00:	cmp	r7, r4
   24e04:	bne	24e50 <main@@Base+0xebf4>
   24e08:	add	r0, sp, #11
   24e0c:	mov	r1, r7
   24e10:	mov	r2, sl
   24e14:	str	r0, [sp]
   24e18:	mov	r0, r8
   24e1c:	ldr	r3, [pc, #912]	; 251b4 <main@@Base+0xef58>
   24e20:	add	r3, pc, r3
   24e24:	bl	235a4 <main@@Base+0xd348>
   24e28:	mov	r4, r0
   24e2c:	cmp	r0, r7
   24e30:	cmpne	r4, sl
   24e34:	beq	242cc <main@@Base+0xe070>
   24e38:	ldrb	r6, [sp, #11]
   24e3c:	b	24e50 <main@@Base+0xebf4>
   24e40:	mov	r6, r0
   24e44:	strb	r0, [sp, #11]
   24e48:	cmp	r7, r4
   24e4c:	beq	24e08 <main@@Base+0xebac>
   24e50:	uxtb	r0, r6
   24e54:	cmp	r0, #2
   24e58:	bne	24e68 <main@@Base+0xec0c>
   24e5c:	ldrb	r0, [r8, #8]
   24e60:	tst	r0, #2
   24e64:	beq	24e88 <main@@Base+0xec2c>
   24e68:	ldr	r0, [r8]
   24e6c:	mov	r1, #2
   24e70:	mov	r2, #1
   24e74:	mov	r3, #1
   24e78:	bl	327e4 <flatcc_builder_table_add@@Base>
   24e7c:	cmp	r0, #0
   24e80:	beq	242cc <main@@Base+0xe070>
   24e84:	strb	r6, [r0]
   24e88:	sub	r0, sl, r4
   24e8c:	cmp	r0, #2
   24e90:	blt	24ec4 <main@@Base+0xec68>
   24e94:	ldrb	r0, [r4]
   24e98:	cmp	r0, #32
   24e9c:	bls	24eb0 <main@@Base+0xec54>
   24ea0:	mov	r2, r4
   24ea4:	cmp	r2, sl
   24ea8:	bne	24ee0 <main@@Base+0xec84>
   24eac:	b	250e4 <main@@Base+0xee88>
   24eb0:	bne	24ec4 <main@@Base+0xec68>
   24eb4:	mov	r2, r4
   24eb8:	ldrb	r0, [r2, #1]!
   24ebc:	cmp	r0, #32
   24ec0:	bhi	24ed8 <main@@Base+0xec7c>
   24ec4:	mov	r0, r8
   24ec8:	mov	r1, r4
   24ecc:	mov	r2, sl
   24ed0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   24ed4:	mov	r2, r0
   24ed8:	cmp	r2, sl
   24edc:	beq	250e4 <main@@Base+0xee88>
   24ee0:	ldrb	r0, [r2]
   24ee4:	cmp	r0, #44	; 0x2c
   24ee8:	bne	25140 <main@@Base+0xeee4>
   24eec:	add	r1, r2, #1
   24ef0:	sub	r0, sl, r1
   24ef4:	cmp	r0, #2
   24ef8:	blt	24f28 <main@@Base+0xeccc>
   24efc:	ldrb	r0, [r1]
   24f00:	cmp	r0, #32
   24f04:	bls	24f18 <main@@Base+0xecbc>
   24f08:	mov	r2, r1
   24f0c:	cmp	r2, sl
   24f10:	bne	24f40 <main@@Base+0xece4>
   24f14:	b	250ec <main@@Base+0xee90>
   24f18:	bne	24f28 <main@@Base+0xeccc>
   24f1c:	ldrb	r0, [r2, #2]!
   24f20:	cmp	r0, #32
   24f24:	bhi	24f38 <main@@Base+0xecdc>
   24f28:	mov	r0, r8
   24f2c:	mov	r2, sl
   24f30:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   24f34:	mov	r2, r0
   24f38:	cmp	r2, sl
   24f3c:	beq	250ec <main@@Base+0xee90>
   24f40:	ldrb	r0, [r2]
   24f44:	cmp	r0, #125	; 0x7d
   24f48:	bne	24394 <main@@Base+0xe138>
   24f4c:	b	25148 <main@@Base+0xeeec>
   24f50:	bne	24f60 <main@@Base+0xed04>
   24f54:	ldrb	r0, [r4, #2]!
   24f58:	cmp	r0, #32
   24f5c:	bhi	24f70 <main@@Base+0xed14>
   24f60:	mov	r0, r8
   24f64:	mov	r2, sl
   24f68:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   24f6c:	mov	r4, r0
   24f70:	cmp	r4, sl
   24f74:	mov	r3, sl
   24f78:	beq	24fbc <main@@Base+0xed60>
   24f7c:	ldrb	r0, [r4]
   24f80:	cmp	r0, #125	; 0x7d
   24f84:	bne	24fb8 <main@@Base+0xed5c>
   24f88:	add	r1, r4, #1
   24f8c:	sub	r0, sl, r1
   24f90:	cmp	r0, #2
   24f94:	blt	25198 <main@@Base+0xef3c>
   24f98:	ldrb	r0, [r1]
   24f9c:	cmp	r0, #32
   24fa0:	bhi	25164 <main@@Base+0xef08>
   24fa4:	bne	25198 <main@@Base+0xef3c>
   24fa8:	ldrb	r0, [r4, #2]!
   24fac:	cmp	r0, #32
   24fb0:	bhi	242c0 <main@@Base+0xe064>
   24fb4:	b	25198 <main@@Base+0xef3c>
   24fb8:	mov	r3, r4
   24fbc:	mov	r4, #0
   24fc0:	mov	r7, #1
   24fc4:	cmp	r3, sl
   24fc8:	mov	r1, sl
   24fcc:	beq	2500c <main@@Base+0xedb0>
   24fd0:	ldrb	r0, [r3]
   24fd4:	cmp	r0, #46	; 0x2e
   24fd8:	beq	24ff4 <main@@Base+0xed98>
   24fdc:	cmp	r0, #34	; 0x22
   24fe0:	movne	r1, r3
   24fe4:	strne	r7, [r8, #12]
   24fe8:	streq	r4, [r8, #12]
   24fec:	addeq	r1, r3, #1
   24ff0:	b	2500c <main@@Base+0xedb0>
   24ff4:	mov	r1, r3
   24ff8:	mov	r0, r8
   24ffc:	mov	r2, sl
   25000:	mov	r3, #5
   25004:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   25008:	mov	r1, r0
   2500c:	mov	r0, r8
   25010:	mov	r2, sl
   25014:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   25018:	mov	r2, r0
   2501c:	sub	r0, sl, r0
   25020:	cmp	r0, #2
   25024:	blt	25058 <main@@Base+0xedfc>
   25028:	ldrb	r0, [r2]
   2502c:	cmp	r0, #32
   25030:	bls	25044 <main@@Base+0xede8>
   25034:	mov	r3, r2
   25038:	cmp	r3, sl
   2503c:	bne	25074 <main@@Base+0xee18>
   25040:	b	250e4 <main@@Base+0xee88>
   25044:	bne	25058 <main@@Base+0xedfc>
   25048:	mov	r3, r2
   2504c:	ldrb	r0, [r3, #1]!
   25050:	cmp	r0, #32
   25054:	bhi	2506c <main@@Base+0xee10>
   25058:	mov	r1, r2
   2505c:	mov	r0, r8
   25060:	mov	r2, sl
   25064:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   25068:	mov	r3, r0
   2506c:	cmp	r3, sl
   25070:	beq	250e4 <main@@Base+0xee88>
   25074:	ldrb	r0, [r3]
   25078:	cmp	r0, #44	; 0x2c
   2507c:	bne	250f8 <main@@Base+0xee9c>
   25080:	add	r1, r3, #1
   25084:	sub	r0, sl, r1
   25088:	cmp	r0, #2
   2508c:	blt	250bc <main@@Base+0xee60>
   25090:	ldrb	r0, [r1]
   25094:	cmp	r0, #32
   25098:	bls	250ac <main@@Base+0xee50>
   2509c:	mov	r3, r1
   250a0:	cmp	r3, sl
   250a4:	bne	250d4 <main@@Base+0xee78>
   250a8:	b	250ec <main@@Base+0xee90>
   250ac:	bne	250bc <main@@Base+0xee60>
   250b0:	ldrb	r0, [r3, #2]!
   250b4:	cmp	r0, #32
   250b8:	bhi	250cc <main@@Base+0xee70>
   250bc:	mov	r0, r8
   250c0:	mov	r2, sl
   250c4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   250c8:	mov	r3, r0
   250cc:	cmp	r3, sl
   250d0:	beq	250ec <main@@Base+0xee90>
   250d4:	ldrb	r0, [r3]
   250d8:	cmp	r0, #125	; 0x7d
   250dc:	bne	24fc4 <main@@Base+0xed68>
   250e0:	b	25100 <main@@Base+0xeea4>
   250e4:	mov	r4, sl
   250e8:	b	242c0 <main@@Base+0xe064>
   250ec:	mov	r0, r8
   250f0:	mov	r1, sl
   250f4:	b	25178 <main@@Base+0xef1c>
   250f8:	cmp	r0, #125	; 0x7d
   250fc:	bne	25134 <main@@Base+0xeed8>
   25100:	add	r1, r3, #1
   25104:	sub	r0, sl, r1
   25108:	cmp	r0, #2
   2510c:	blt	25198 <main@@Base+0xef3c>
   25110:	ldrb	r0, [r1]
   25114:	cmp	r0, #32
   25118:	bhi	25164 <main@@Base+0xef08>
   2511c:	bne	25198 <main@@Base+0xef3c>
   25120:	ldrb	r0, [r3, #2]!
   25124:	mov	r4, r3
   25128:	cmp	r0, #32
   2512c:	bhi	242c0 <main@@Base+0xe064>
   25130:	b	25198 <main@@Base+0xef3c>
   25134:	mov	r0, r8
   25138:	mov	r1, r3
   2513c:	b	25178 <main@@Base+0xef1c>
   25140:	cmp	r0, #125	; 0x7d
   25144:	bne	25170 <main@@Base+0xef14>
   25148:	add	r1, r2, #1
   2514c:	sub	r0, sl, r1
   25150:	cmp	r0, #2
   25154:	blt	25198 <main@@Base+0xef3c>
   25158:	ldrb	r0, [r1]
   2515c:	cmp	r0, #32
   25160:	bls	25184 <main@@Base+0xef28>
   25164:	mov	r4, r1
   25168:	b	242c0 <main@@Base+0xe064>
   2516c:	andeq	r9, r2, r5, lsl #12
   25170:	mov	r0, r8
   25174:	mov	r1, r2
   25178:	mov	r2, sl
   2517c:	mov	r3, #10
   25180:	b	242b8 <main@@Base+0xe05c>
   25184:	bne	25198 <main@@Base+0xef3c>
   25188:	ldrb	r0, [r2, #2]!
   2518c:	mov	r4, r2
   25190:	cmp	r0, #32
   25194:	bhi	242c0 <main@@Base+0xe064>
   25198:	mov	r0, r8
   2519c:	mov	r2, sl
   251a0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   251a4:	b	242bc <main@@Base+0xe060>
   251a8:	strdeq	sl, [r3], -r8
   251ac:	andeq	sl, r3, ip, lsl #14
   251b0:	andeq	sl, r3, r0, asr r5
   251b4:	strdeq	sl, [r3], -r8
   251b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   251bc:	add	fp, sp, #28
   251c0:	sub	sp, sp, #20
   251c4:	mov	r8, r1
   251c8:	sub	r1, r2, r1
   251cc:	cmp	r1, #8
   251d0:	movcs	r1, #8
   251d4:	sub	r1, r1, #1
   251d8:	cmp	r1, #7
   251dc:	bhi	253e4 <main@@Base+0xf188>
   251e0:	str	r2, [sp, #16]
   251e4:	str	r0, [sp, #12]
   251e8:	add	r4, pc, #40	; 0x28
   251ec:	mov	lr, r3
   251f0:	mov	sl, #0
   251f4:	mov	ip, #0
   251f8:	mov	r5, #0
   251fc:	mov	r2, #0
   25200:	mov	r3, #0
   25204:	mov	r7, #0
   25208:	mov	r6, #0
   2520c:	ldr	r0, [r4, r1, lsl #2]
   25210:	mov	r1, #0
   25214:	add	pc, r4, r0
   25218:	andeq	r0, r0, r4, rrx
   2521c:	andeq	r0, r0, ip, asr r0
   25220:	andeq	r0, r0, r4, asr r0
   25224:	andeq	r0, r0, ip, asr #32
   25228:	andeq	r0, r0, r0, asr #32
   2522c:	andeq	r0, r0, r4, lsr r0
   25230:	andeq	r0, r0, r4, lsr #32
   25234:	andeq	r0, r0, r0, lsr #32
   25238:	ldrb	ip, [r8, #7]
   2523c:	ldrb	r0, [r8, #6]
   25240:	mov	r5, sl
   25244:	orr	r0, ip, r0, lsl #8
   25248:	mov	sl, r0
   2524c:	ldrb	r0, [r8, #5]
   25250:	mov	r1, r5
   25254:	orr	sl, sl, r0, lsl #16
   25258:	ldrb	r0, [r8, #4]
   2525c:	mov	r2, r1
   25260:	orr	sl, sl, r0, lsl #24
   25264:	ldrb	r0, [r8, #3]
   25268:	orr	r3, r0, r2
   2526c:	ldrb	r0, [r8, #2]
   25270:	orr	r7, r3, r0, lsl #8
   25274:	ldrb	r0, [r8, #1]
   25278:	orr	r6, r7, r0, lsl #16
   2527c:	ldrb	r0, [r8]
   25280:	movw	r1, #28275	; 0x6e73
   25284:	ldr	r5, [fp, #12]
   25288:	ldr	r7, [fp, #8]
   2528c:	movt	r1, #19823	; 0x4d6f
   25290:	orr	r9, r6, r0, lsl #24
   25294:	movw	r0, #29184	; 0x7200
   25298:	movt	r0, #29797	; 0x7465
   2529c:	subs	r2, sl, r0
   252a0:	sbcs	r2, r9, r1
   252a4:	bcs	252ec <main@@Base+0xf090>
   252a8:	movw	r1, #29696	; 0x7400
   252ac:	bic	r0, r9, #255	; 0xff
   252b0:	movt	r1, #16748	; 0x416c
   252b4:	teq	r0, r1
   252b8:	bne	253e4 <main@@Base+0xf188>
   252bc:	ldr	r0, [sp, #12]
   252c0:	ldr	r2, [sp, #16]
   252c4:	mov	r1, r8
   252c8:	mov	r3, #3
   252cc:	mov	r4, lr
   252d0:	str	r5, [sp]
   252d4:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   252d8:	cmp	r0, r8
   252dc:	beq	253e4 <main@@Base+0xf188>
   252e0:	mov	r1, #0
   252e4:	mov	r2, #4
   252e8:	b	2532c <main@@Base+0xf0d0>
   252ec:	add	r2, r0, #50	; 0x32
   252f0:	eor	r1, r9, r1
   252f4:	eor	r2, sl, r2
   252f8:	orrs	r2, r2, r1
   252fc:	bne	2533c <main@@Base+0xf0e0>
   25300:	ldr	r0, [sp, #12]
   25304:	ldr	r2, [sp, #16]
   25308:	mov	r1, r8
   2530c:	mov	r3, #8
   25310:	mov	r4, lr
   25314:	str	r5, [sp]
   25318:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   2531c:	cmp	r0, r8
   25320:	beq	253e4 <main@@Base+0xf188>
   25324:	mov	r1, #0
   25328:	mov	r2, #3
   2532c:	str	r2, [r7]
   25330:	str	r1, [r7, #4]
   25334:	str	r1, [r4]
   25338:	b	253e0 <main@@Base+0xf184>
   2533c:	ldr	r6, [sp, #16]
   25340:	ldr	r7, [sp, #12]
   25344:	bic	r2, sl, #255	; 0xff
   25348:	eor	r0, r2, r0
   2534c:	orrs	r0, r0, r1
   25350:	bne	25394 <main@@Base+0xf138>
   25354:	mov	r0, r7
   25358:	mov	r1, r8
   2535c:	mov	r2, r6
   25360:	mov	r3, #7
   25364:	str	r5, [sp]
   25368:	mov	r4, lr
   2536c:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   25370:	mov	lr, r4
   25374:	cmp	r0, r8
   25378:	beq	25394 <main@@Base+0xf138>
   2537c:	ldr	r3, [fp, #8]
   25380:	mov	r2, #1
   25384:	mov	r1, #0
   25388:	str	r2, [r3]
   2538c:	str	r1, [r3, #4]
   25390:	b	253dc <main@@Base+0xf180>
   25394:	movw	r0, #20037	; 0x4e45
   25398:	movt	r0, #20047	; 0x4e4f
   2539c:	teq	r9, r0
   253a0:	bne	253f0 <main@@Base+0xf194>
   253a4:	mov	r0, r7
   253a8:	mov	r1, r8
   253ac:	mov	r2, r6
   253b0:	mov	r3, #4
   253b4:	str	r5, [sp]
   253b8:	mov	r4, lr
   253bc:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   253c0:	mov	lr, r4
   253c4:	cmp	r0, r8
   253c8:	beq	253f0 <main@@Base+0xf194>
   253cc:	ldr	r2, [fp, #8]
   253d0:	mov	r1, #0
   253d4:	str	r1, [r2]
   253d8:	str	r1, [r2, #4]
   253dc:	str	r1, [lr]
   253e0:	mov	r8, r0
   253e4:	mov	r0, r8
   253e8:	sub	sp, fp, #28
   253ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   253f0:	movw	r0, #28016	; 0x6d70
   253f4:	movw	r1, #29556	; 0x7374
   253f8:	movt	r0, #21353	; 0x5369
   253fc:	movt	r1, #21605	; 0x5465
   25400:	eor	r0, sl, r0
   25404:	eor	r1, r9, r1
   25408:	orrs	r0, r0, r1
   2540c:	bne	253e4 <main@@Base+0xf188>
   25410:	str	lr, [sp, #8]
   25414:	add	lr, r8, #8
   25418:	sub	r0, r6, lr
   2541c:	cmp	r0, #8
   25420:	movcs	r0, #8
   25424:	sub	r0, r0, #1
   25428:	cmp	r0, #7
   2542c:	bhi	253e4 <main@@Base+0xf188>
   25430:	add	r4, pc, #36	; 0x24
   25434:	mov	sl, #0
   25438:	mov	ip, #0
   2543c:	mov	r9, #0
   25440:	mov	r3, #0
   25444:	mov	r2, #0
   25448:	mov	r6, #0
   2544c:	mov	r7, #0
   25450:	ldr	r1, [r4, r0, lsl #2]
   25454:	mov	r0, #0
   25458:	add	pc, r4, r1
   2545c:	andeq	r0, r0, r4, rrx
   25460:	andeq	r0, r0, ip, asr r0
   25464:	andeq	r0, r0, r4, asr r0
   25468:	andeq	r0, r0, ip, asr #32
   2546c:	andeq	r0, r0, r0, asr #32
   25470:	andeq	r0, r0, r4, lsr r0
   25474:	andeq	r0, r0, r4, lsr #32
   25478:	andeq	r0, r0, r0, lsr #32
   2547c:	ldrb	ip, [r8, #15]
   25480:	ldrb	r0, [r8, #14]
   25484:	mov	r9, sl
   25488:	orr	r0, ip, r0, lsl #8
   2548c:	mov	sl, r0
   25490:	ldrb	r0, [r8, #13]
   25494:	orr	sl, sl, r0, lsl #16
   25498:	mov	r0, r9
   2549c:	ldrb	r1, [r8, #12]
   254a0:	mov	r3, r0
   254a4:	orr	sl, sl, r1, lsl #24
   254a8:	ldrb	r0, [r8, #11]
   254ac:	orr	r2, r0, r3
   254b0:	ldrb	r0, [r8, #10]
   254b4:	orr	r6, r2, r0, lsl #8
   254b8:	ldrb	r0, [r8, #9]
   254bc:	orr	r7, r6, r0, lsl #16
   254c0:	ldrb	r1, [lr]
   254c4:	movw	r0, #25943	; 0x6557
   254c8:	movw	r2, #21601	; 0x5461
   254cc:	movt	r0, #25196	; 0x626c
   254d0:	movt	r2, #27749	; 0x6c65
   254d4:	eor	r0, sl, r0
   254d8:	orr	r1, r7, r1, lsl #24
   254dc:	eor	r1, r1, r2
   254e0:	orrs	r0, r0, r1
   254e4:	bne	253e4 <main@@Base+0xf188>
   254e8:	ldr	r0, [sp, #16]
   254ec:	add	r9, r8, #16
   254f0:	sub	r0, r0, r9
   254f4:	cmp	r0, #8
   254f8:	movcs	r0, #8
   254fc:	sub	r0, r0, #1
   25500:	cmp	r0, #7
   25504:	bhi	253e4 <main@@Base+0xf188>
   25508:	add	r4, pc, #32
   2550c:	mov	lr, #0
   25510:	mov	ip, #0
   25514:	mov	r2, #0
   25518:	mov	r3, #0
   2551c:	mov	r7, #0
   25520:	mov	r6, #0
   25524:	ldr	r1, [r4, r0, lsl #2]
   25528:	mov	r0, #0
   2552c:	add	pc, r4, r1
   25530:	andeq	r0, r0, ip, asr r0
   25534:	andeq	r0, r0, r4, asr r0
   25538:	andeq	r0, r0, ip, asr #32
   2553c:	andeq	r0, r0, r4, asr #32
   25540:	andeq	r0, r0, r8, lsr r0
   25544:	andeq	r0, r0, r8, lsr #32
   25548:	andeq	r0, r0, r0, lsr #32
   2554c:	andeq	r0, r0, r0, lsr #32
   25550:	ldrb	r0, [r8, #22]
   25554:	lsl	ip, r0, #8
   25558:	ldrb	r0, [r8, #21]
   2555c:	orr	r1, ip, r0, lsl #16
   25560:	mov	r0, lr
   25564:	mov	lr, r1
   25568:	ldrb	r1, [r8, #20]
   2556c:	mov	r2, r0
   25570:	orr	lr, lr, r1, lsl #24
   25574:	ldrb	r0, [r8, #19]
   25578:	orr	r3, r0, r2
   2557c:	ldrb	r0, [r8, #18]
   25580:	orr	r7, r3, r0, lsl #8
   25584:	ldrb	r0, [r8, #17]
   25588:	orr	r6, r7, r0, lsl #16
   2558c:	ldrb	r1, [r9]
   25590:	movw	r0, #27904	; 0x6d00
   25594:	movw	r2, #26693	; 0x6845
   25598:	movt	r0, #28277	; 0x6e75
   2559c:	movt	r2, #26996	; 0x6974
   255a0:	eor	r0, lr, r0
   255a4:	orr	r1, r6, r1, lsl #24
   255a8:	eor	r1, r1, r2
   255ac:	orrs	r0, r0, r1
   255b0:	bne	253e4 <main@@Base+0xf188>
   255b4:	ldr	r0, [sp, #12]
   255b8:	ldr	r2, [sp, #16]
   255bc:	mov	r1, r9
   255c0:	mov	r3, #7
   255c4:	str	r5, [sp]
   255c8:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   255cc:	ldr	r3, [fp, #8]
   255d0:	cmp	r0, r9
   255d4:	beq	253e4 <main@@Base+0xf188>
   255d8:	mov	r2, #2
   255dc:	mov	r1, #0
   255e0:	str	r2, [r3]
   255e4:	str	r1, [r3, #4]
   255e8:	ldr	r2, [sp, #8]
   255ec:	str	r1, [r2]
   255f0:	b	253e0 <main@@Base+0xf184>
   255f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   255f8:	add	fp, sp, #28
   255fc:	sub	sp, sp, #44	; 0x2c
   25600:	mov	r7, r2
   25604:	ldr	r2, [fp, #8]
   25608:	mov	r5, r0
   2560c:	mov	r0, #0
   25610:	mov	r8, r3
   25614:	cmp	r1, r7
   25618:	strb	r0, [r2]
   2561c:	beq	25660 <main@@Base+0xf404>
   25620:	ldrb	r0, [r1]
   25624:	cmp	r0, #46	; 0x2e
   25628:	beq	25640 <main@@Base+0xf3e4>
   2562c:	cmp	r0, #34	; 0x22
   25630:	bne	25658 <main@@Base+0xf3fc>
   25634:	mov	r0, #0
   25638:	add	r1, r1, #1
   2563c:	b	2565c <main@@Base+0xf400>
   25640:	mov	r0, r5
   25644:	mov	r2, r7
   25648:	mov	r3, #5
   2564c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   25650:	mov	r1, r0
   25654:	b	25660 <main@@Base+0xf404>
   25658:	mov	r0, #1
   2565c:	str	r0, [r5, #12]
   25660:	ldr	r0, [r5, #12]
   25664:	cmp	r0, #0
   25668:	beq	2567c <main@@Base+0xf420>
   2566c:	mov	r6, r1
   25670:	cmp	r6, r7
   25674:	bne	256c0 <main@@Base+0xf464>
   25678:	b	257a0 <main@@Base+0xf544>
   2567c:	sub	r0, r7, r1
   25680:	cmp	r0, #2
   25684:	blt	256a8 <main@@Base+0xf44c>
   25688:	ldrb	r0, [r1]
   2568c:	cmp	r0, #32
   25690:	bhi	2566c <main@@Base+0xf410>
   25694:	bne	256a8 <main@@Base+0xf44c>
   25698:	mov	r6, r1
   2569c:	ldrb	r0, [r6, #1]!
   256a0:	cmp	r0, #32
   256a4:	bhi	256b8 <main@@Base+0xf45c>
   256a8:	mov	r0, r5
   256ac:	mov	r2, r7
   256b0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   256b4:	mov	r6, r0
   256b8:	cmp	r6, r7
   256bc:	beq	257a0 <main@@Base+0xf544>
   256c0:	add	r0, r8, #4
   256c4:	mov	r1, #0
   256c8:	add	sl, sp, #32
   256cc:	add	r9, sp, #28
   256d0:	str	r8, [sp, #16]
   256d4:	str	r1, [sp, #20]
   256d8:	str	r0, [sp, #12]
   256dc:	ldr	r4, [r8]
   256e0:	mov	r8, r0
   256e4:	add	r0, sp, #24
   256e8:	mov	r1, r6
   256ec:	mov	r2, r7
   256f0:	mov	r3, r9
   256f4:	str	sl, [sp]
   256f8:	str	r0, [sp, #4]
   256fc:	mov	r0, r5
   25700:	blx	r4
   25704:	cmp	r0, r7
   25708:	beq	257a0 <main@@Base+0xf544>
   2570c:	mov	r4, r0
   25710:	cmp	r0, r6
   25714:	bne	25728 <main@@Base+0xf4cc>
   25718:	ldr	r4, [r8], #4
   2571c:	cmp	r4, #0
   25720:	bne	256e4 <main@@Base+0xf488>
   25724:	b	257a8 <main@@Base+0xf54c>
   25728:	ldr	r0, [sp, #28]
   2572c:	cmp	r0, #0
   25730:	beq	2574c <main@@Base+0xf4f0>
   25734:	mov	r0, r5
   25738:	mov	r1, r4
   2573c:	mov	r2, r7
   25740:	mov	r3, #8
   25744:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   25748:	b	25764 <main@@Base+0xf508>
   2574c:	ldr	r0, [sp, #32]
   25750:	ldr	r1, [sp, #36]	; 0x24
   25754:	orrs	r0, r0, r1
   25758:	movwne	r0, #1
   2575c:	str	r0, [sp, #20]
   25760:	mov	r0, r4
   25764:	ldr	r8, [sp, #16]
   25768:	cmp	r0, r7
   2576c:	beq	257a0 <main@@Base+0xf544>
   25770:	ldr	r0, [fp, #8]
   25774:	ldr	r2, [sp, #20]
   25778:	mov	r6, r4
   2577c:	mov	r1, r0
   25780:	ldrb	r0, [r0]
   25784:	add	r0, r0, r2
   25788:	strb	r0, [r1]
   2578c:	ldr	r0, [sp, #24]
   25790:	cmp	r0, #0
   25794:	ldr	r0, [sp, #12]
   25798:	bne	256dc <main@@Base+0xf480>
   2579c:	b	257c0 <main@@Base+0xf564>
   257a0:	mov	r4, r7
   257a4:	b	257c0 <main@@Base+0xf564>
   257a8:	mov	r0, r5
   257ac:	mov	r1, r6
   257b0:	mov	r2, r7
   257b4:	mov	r3, #23
   257b8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   257bc:	mov	r4, r0
   257c0:	mov	r0, r4
   257c4:	sub	sp, fp, #28
   257c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   257cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   257d0:	add	fp, sp, #28
   257d4:	sub	sp, sp, #36	; 0x24
   257d8:	mov	r6, r2
   257dc:	ldr	r2, [fp, #8]
   257e0:	mov	r5, r0
   257e4:	mov	r0, #0
   257e8:	mov	r8, r3
   257ec:	cmp	r1, r6
   257f0:	str	r0, [r2]
   257f4:	beq	25838 <main@@Base+0xf5dc>
   257f8:	ldrb	r0, [r1]
   257fc:	cmp	r0, #46	; 0x2e
   25800:	beq	25818 <main@@Base+0xf5bc>
   25804:	cmp	r0, #34	; 0x22
   25808:	bne	25830 <main@@Base+0xf5d4>
   2580c:	mov	r0, #0
   25810:	add	r1, r1, #1
   25814:	b	25834 <main@@Base+0xf5d8>
   25818:	mov	r0, r5
   2581c:	mov	r2, r6
   25820:	mov	r3, #5
   25824:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   25828:	mov	r1, r0
   2582c:	b	25838 <main@@Base+0xf5dc>
   25830:	mov	r0, #1
   25834:	str	r0, [r5, #12]
   25838:	ldr	r0, [r5, #12]
   2583c:	cmp	r0, #0
   25840:	beq	25854 <main@@Base+0xf5f8>
   25844:	mov	r7, r1
   25848:	cmp	r7, r6
   2584c:	bne	25898 <main@@Base+0xf63c>
   25850:	b	25944 <main@@Base+0xf6e8>
   25854:	sub	r0, r6, r1
   25858:	cmp	r0, #2
   2585c:	blt	25880 <main@@Base+0xf624>
   25860:	ldrb	r0, [r1]
   25864:	cmp	r0, #32
   25868:	bhi	25844 <main@@Base+0xf5e8>
   2586c:	bne	25880 <main@@Base+0xf624>
   25870:	mov	r7, r1
   25874:	ldrb	r0, [r7, #1]!
   25878:	cmp	r0, #32
   2587c:	bhi	25890 <main@@Base+0xf634>
   25880:	mov	r0, r5
   25884:	mov	r2, r6
   25888:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2588c:	mov	r7, r0
   25890:	cmp	r7, r6
   25894:	beq	25944 <main@@Base+0xf6e8>
   25898:	add	r0, r8, #4
   2589c:	add	sl, sp, #24
   258a0:	add	r9, sp, #20
   258a4:	str	r8, [sp, #12]
   258a8:	str	r0, [sp, #8]
   258ac:	ldr	r4, [r8]
   258b0:	mov	r8, r0
   258b4:	add	r0, sp, #16
   258b8:	mov	r1, r7
   258bc:	mov	r2, r6
   258c0:	mov	r3, r9
   258c4:	str	sl, [sp]
   258c8:	str	r0, [sp, #4]
   258cc:	mov	r0, r5
   258d0:	blx	r4
   258d4:	cmp	r0, r6
   258d8:	beq	25944 <main@@Base+0xf6e8>
   258dc:	mov	r4, r0
   258e0:	cmp	r0, r7
   258e4:	bne	258f8 <main@@Base+0xf69c>
   258e8:	ldr	r4, [r8], #4
   258ec:	cmp	r4, #0
   258f0:	bne	258b4 <main@@Base+0xf658>
   258f4:	b	2594c <main@@Base+0xf6f0>
   258f8:	ldr	r0, [sp, #24]
   258fc:	ldr	r1, [sp, #28]
   25900:	bl	47638 <flatcc_json_printer_clear@@Base+0x71c>
   25904:	vmov	s2, r0
   25908:	ldr	r2, [fp, #8]
   2590c:	ldr	r1, [sp, #20]
   25910:	ldr	r8, [sp, #12]
   25914:	mov	r7, r4
   25918:	vldr	s0, [r2]
   2591c:	cmp	r1, #0
   25920:	vneg.f32	s4, s2
   25924:	vseleq.f32	s2, s2, s4
   25928:	vadd.f32	s0, s0, s2
   2592c:	vstr	s0, [r2]
   25930:	ldr	r0, [sp, #16]
   25934:	cmp	r0, #0
   25938:	ldr	r0, [sp, #8]
   2593c:	bne	258ac <main@@Base+0xf650>
   25940:	b	25964 <main@@Base+0xf708>
   25944:	mov	r4, r6
   25948:	b	25964 <main@@Base+0xf708>
   2594c:	mov	r0, r5
   25950:	mov	r1, r7
   25954:	mov	r2, r6
   25958:	mov	r3, #23
   2595c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   25960:	mov	r4, r0
   25964:	mov	r0, r4
   25968:	sub	sp, fp, #28
   2596c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25974:	add	fp, sp, #28
   25978:	sub	sp, sp, #44	; 0x2c
   2597c:	mov	r6, r2
   25980:	ldr	r2, [fp, #8]
   25984:	mov	r5, r0
   25988:	mov	r0, #0
   2598c:	mov	sl, r3
   25990:	cmp	r1, r6
   25994:	str	r0, [r2]
   25998:	beq	259dc <main@@Base+0xf780>
   2599c:	ldrb	r0, [r1]
   259a0:	cmp	r0, #46	; 0x2e
   259a4:	beq	259bc <main@@Base+0xf760>
   259a8:	cmp	r0, #34	; 0x22
   259ac:	bne	259d4 <main@@Base+0xf778>
   259b0:	mov	r0, #0
   259b4:	add	r1, r1, #1
   259b8:	b	259d8 <main@@Base+0xf77c>
   259bc:	mov	r0, r5
   259c0:	mov	r2, r6
   259c4:	mov	r3, #5
   259c8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   259cc:	mov	r1, r0
   259d0:	b	259dc <main@@Base+0xf780>
   259d4:	mov	r0, #1
   259d8:	str	r0, [r5, #12]
   259dc:	ldr	r0, [r5, #12]
   259e0:	cmp	r0, #0
   259e4:	beq	259f8 <main@@Base+0xf79c>
   259e8:	mov	r7, r1
   259ec:	cmp	r7, r6
   259f0:	bne	25a3c <main@@Base+0xf7e0>
   259f4:	b	25b54 <main@@Base+0xf8f8>
   259f8:	sub	r0, r6, r1
   259fc:	cmp	r0, #2
   25a00:	blt	25a24 <main@@Base+0xf7c8>
   25a04:	ldrb	r0, [r1]
   25a08:	cmp	r0, #32
   25a0c:	bhi	259e8 <main@@Base+0xf78c>
   25a10:	bne	25a24 <main@@Base+0xf7c8>
   25a14:	mov	r7, r1
   25a18:	ldrb	r0, [r7, #1]!
   25a1c:	cmp	r0, #32
   25a20:	bhi	25a34 <main@@Base+0xf7d8>
   25a24:	mov	r0, r5
   25a28:	mov	r2, r6
   25a2c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   25a30:	mov	r7, r0
   25a34:	cmp	r7, r6
   25a38:	beq	25b54 <main@@Base+0xf8f8>
   25a3c:	add	r0, sl, #4
   25a40:	mov	r2, #0
   25a44:	add	r8, sp, #32
   25a48:	add	r9, sp, #28
   25a4c:	str	sl, [sp, #16]
   25a50:	str	r0, [sp, #12]
   25a54:	ldr	r4, [sl]
   25a58:	mov	sl, r0
   25a5c:	str	r2, [sp, #20]
   25a60:	add	r0, sp, #24
   25a64:	mov	r1, r7
   25a68:	mov	r2, r6
   25a6c:	mov	r3, r9
   25a70:	str	r8, [sp]
   25a74:	str	r0, [sp, #4]
   25a78:	mov	r0, r5
   25a7c:	blx	r4
   25a80:	cmp	r0, r6
   25a84:	beq	25b54 <main@@Base+0xf8f8>
   25a88:	mov	r4, r0
   25a8c:	cmp	r0, r7
   25a90:	bne	25aa4 <main@@Base+0xf848>
   25a94:	ldr	r4, [sl], #4
   25a98:	cmp	r4, #0
   25a9c:	bne	25a60 <main@@Base+0xf804>
   25aa0:	b	25b5c <main@@Base+0xf900>
   25aa4:	ldr	r2, [sp, #28]
   25aa8:	ldr	r0, [sp, #32]
   25aac:	ldr	r1, [sp, #36]	; 0x24
   25ab0:	cmp	r2, #0
   25ab4:	beq	25adc <main@@Base+0xf880>
   25ab8:	ldr	sl, [sp, #16]
   25abc:	subs	r2, r0, #-2147483647	; 0x80000001
   25ac0:	sbcs	r1, r1, #0
   25ac4:	bcc	25b10 <main@@Base+0xf8b4>
   25ac8:	mov	r0, r5
   25acc:	mov	r1, r4
   25ad0:	mov	r2, r6
   25ad4:	mov	r3, #8
   25ad8:	b	25afc <main@@Base+0xf8a0>
   25adc:	ldr	sl, [sp, #16]
   25ae0:	subs	r2, r0, #-2147483648	; 0x80000000
   25ae4:	sbcs	r1, r1, #0
   25ae8:	bcc	25b18 <main@@Base+0xf8bc>
   25aec:	mov	r0, r5
   25af0:	mov	r1, r4
   25af4:	mov	r2, r6
   25af8:	mov	r3, #7
   25afc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   25b00:	ldr	r2, [sp, #20]
   25b04:	cmp	r0, r6
   25b08:	bne	25b28 <main@@Base+0xf8cc>
   25b0c:	b	25b54 <main@@Base+0xf8f8>
   25b10:	rsb	r2, r0, #0
   25b14:	b	25b1c <main@@Base+0xf8c0>
   25b18:	mov	r2, r0
   25b1c:	mov	r0, r4
   25b20:	cmp	r0, r6
   25b24:	beq	25b54 <main@@Base+0xf8f8>
   25b28:	ldr	r0, [fp, #8]
   25b2c:	mov	r7, r4
   25b30:	mov	r1, r0
   25b34:	ldr	r0, [r0]
   25b38:	add	r0, r0, r2
   25b3c:	str	r0, [r1]
   25b40:	ldr	r0, [sp, #24]
   25b44:	cmp	r0, #0
   25b48:	ldr	r0, [sp, #12]
   25b4c:	bne	25a54 <main@@Base+0xf7f8>
   25b50:	b	25b74 <main@@Base+0xf918>
   25b54:	mov	r4, r6
   25b58:	b	25b74 <main@@Base+0xf918>
   25b5c:	mov	r0, r5
   25b60:	mov	r1, r7
   25b64:	mov	r2, r6
   25b68:	mov	r3, #23
   25b6c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   25b70:	mov	r4, r0
   25b74:	mov	r0, r4
   25b78:	sub	sp, fp, #28
   25b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25b84:	add	fp, sp, #28
   25b88:	sub	sp, sp, #44	; 0x2c
   25b8c:	mov	r6, r2
   25b90:	ldr	r2, [fp, #8]
   25b94:	mov	r5, r0
   25b98:	mov	r0, #0
   25b9c:	mov	sl, r3
   25ba0:	cmp	r1, r6
   25ba4:	str	r0, [r2]
   25ba8:	str	r0, [r2, #4]
   25bac:	beq	25bf0 <main@@Base+0xf994>
   25bb0:	ldrb	r0, [r1]
   25bb4:	cmp	r0, #46	; 0x2e
   25bb8:	beq	25bd0 <main@@Base+0xf974>
   25bbc:	cmp	r0, #34	; 0x22
   25bc0:	bne	25be8 <main@@Base+0xf98c>
   25bc4:	mov	r0, #0
   25bc8:	add	r1, r1, #1
   25bcc:	b	25bec <main@@Base+0xf990>
   25bd0:	mov	r0, r5
   25bd4:	mov	r2, r6
   25bd8:	mov	r3, #5
   25bdc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   25be0:	mov	r1, r0
   25be4:	b	25bf0 <main@@Base+0xf994>
   25be8:	mov	r0, #1
   25bec:	str	r0, [r5, #12]
   25bf0:	ldr	r0, [r5, #12]
   25bf4:	cmp	r0, #0
   25bf8:	beq	25c0c <main@@Base+0xf9b0>
   25bfc:	mov	r7, r1
   25c00:	cmp	r7, r6
   25c04:	bne	25c50 <main@@Base+0xf9f4>
   25c08:	b	25d70 <main@@Base+0xfb14>
   25c0c:	sub	r0, r6, r1
   25c10:	cmp	r0, #2
   25c14:	blt	25c38 <main@@Base+0xf9dc>
   25c18:	ldrb	r0, [r1]
   25c1c:	cmp	r0, #32
   25c20:	bhi	25bfc <main@@Base+0xf9a0>
   25c24:	bne	25c38 <main@@Base+0xf9dc>
   25c28:	mov	r7, r1
   25c2c:	ldrb	r0, [r7, #1]!
   25c30:	cmp	r0, #32
   25c34:	bhi	25c48 <main@@Base+0xf9ec>
   25c38:	mov	r0, r5
   25c3c:	mov	r2, r6
   25c40:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   25c44:	mov	r7, r0
   25c48:	cmp	r7, r6
   25c4c:	beq	25d70 <main@@Base+0xfb14>
   25c50:	add	r0, sl, #4
   25c54:	mov	r1, #0
   25c58:	add	r8, sp, #32
   25c5c:	add	r9, sp, #28
   25c60:	mov	r2, #0
   25c64:	str	sl, [sp, #12]
   25c68:	str	r0, [sp, #8]
   25c6c:	ldr	r4, [sl]
   25c70:	mov	sl, r0
   25c74:	str	r2, [sp, #16]
   25c78:	str	r1, [sp, #20]
   25c7c:	add	r0, sp, #24
   25c80:	mov	r1, r7
   25c84:	mov	r2, r6
   25c88:	mov	r3, r9
   25c8c:	str	r8, [sp]
   25c90:	str	r0, [sp, #4]
   25c94:	mov	r0, r5
   25c98:	blx	r4
   25c9c:	cmp	r0, r6
   25ca0:	beq	25d70 <main@@Base+0xfb14>
   25ca4:	mov	r4, r0
   25ca8:	cmp	r0, r7
   25cac:	bne	25cc0 <main@@Base+0xfa64>
   25cb0:	ldr	r4, [sl], #4
   25cb4:	cmp	r4, #0
   25cb8:	bne	25c7c <main@@Base+0xfa20>
   25cbc:	b	25d78 <main@@Base+0xfb1c>
   25cc0:	add	r2, sp, #28
   25cc4:	ldm	r2, {r0, r1, r2}
   25cc8:	cmp	r0, #0
   25ccc:	beq	25cf4 <main@@Base+0xfa98>
   25cd0:	ldr	sl, [sp, #12]
   25cd4:	subs	r0, r1, #1
   25cd8:	sbcs	r0, r2, #-2147483648	; 0x80000000
   25cdc:	bcc	25d2c <main@@Base+0xfad0>
   25ce0:	mov	r0, r5
   25ce4:	mov	r1, r4
   25ce8:	mov	r2, r6
   25cec:	mov	r3, #8
   25cf0:	b	25d14 <main@@Base+0xfab8>
   25cf4:	ldr	sl, [sp, #12]
   25cf8:	cmn	r2, #1
   25cfc:	mov	r0, r4
   25d00:	bgt	25d20 <main@@Base+0xfac4>
   25d04:	mov	r0, r5
   25d08:	mov	r1, r4
   25d0c:	mov	r2, r6
   25d10:	mov	r3, #7
   25d14:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   25d18:	ldr	r1, [sp, #20]
   25d1c:	ldr	r2, [sp, #16]
   25d20:	cmp	r0, r6
   25d24:	bne	25d40 <main@@Base+0xfae4>
   25d28:	b	25d70 <main@@Base+0xfb14>
   25d2c:	rsbs	r1, r1, #0
   25d30:	mov	r0, r4
   25d34:	rsc	r2, r2, #0
   25d38:	cmp	r0, r6
   25d3c:	beq	25d70 <main@@Base+0xfb14>
   25d40:	ldr	r0, [fp, #8]
   25d44:	mov	r7, r0
   25d48:	ldm	r0, {r0, r3}
   25d4c:	adds	r0, r0, r1
   25d50:	adc	r3, r3, r2
   25d54:	stm	r7, {r0, r3}
   25d58:	mov	r7, r4
   25d5c:	ldr	r0, [sp, #24]
   25d60:	cmp	r0, #0
   25d64:	ldr	r0, [sp, #8]
   25d68:	bne	25c6c <main@@Base+0xfa10>
   25d6c:	b	25d90 <main@@Base+0xfb34>
   25d70:	mov	r4, r6
   25d74:	b	25d90 <main@@Base+0xfb34>
   25d78:	mov	r0, r5
   25d7c:	mov	r1, r7
   25d80:	mov	r2, r6
   25d84:	mov	r3, #23
   25d88:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   25d8c:	mov	r4, r0
   25d90:	mov	r0, r4
   25d94:	sub	sp, fp, #28
   25d98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25d9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25da0:	add	fp, sp, #28
   25da4:	sub	sp, sp, #44	; 0x2c
   25da8:	mov	r6, r2
   25dac:	ldr	r2, [fp, #8]
   25db0:	mov	r5, r0
   25db4:	mov	r0, #0
   25db8:	mov	r8, r3
   25dbc:	cmp	r1, r6
   25dc0:	str	r0, [r2]
   25dc4:	beq	25e08 <main@@Base+0xfbac>
   25dc8:	ldrb	r0, [r1]
   25dcc:	cmp	r0, #46	; 0x2e
   25dd0:	beq	25de8 <main@@Base+0xfb8c>
   25dd4:	cmp	r0, #34	; 0x22
   25dd8:	bne	25e00 <main@@Base+0xfba4>
   25ddc:	mov	r0, #0
   25de0:	add	r1, r1, #1
   25de4:	b	25e04 <main@@Base+0xfba8>
   25de8:	mov	r0, r5
   25dec:	mov	r2, r6
   25df0:	mov	r3, #5
   25df4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   25df8:	mov	r1, r0
   25dfc:	b	25e08 <main@@Base+0xfbac>
   25e00:	mov	r0, #1
   25e04:	str	r0, [r5, #12]
   25e08:	ldr	r0, [r5, #12]
   25e0c:	cmp	r0, #0
   25e10:	beq	25e24 <main@@Base+0xfbc8>
   25e14:	mov	r7, r1
   25e18:	cmp	r7, r6
   25e1c:	bne	25e68 <main@@Base+0xfc0c>
   25e20:	b	25f74 <main@@Base+0xfd18>
   25e24:	sub	r0, r6, r1
   25e28:	cmp	r0, #2
   25e2c:	blt	25e50 <main@@Base+0xfbf4>
   25e30:	ldrb	r0, [r1]
   25e34:	cmp	r0, #32
   25e38:	bhi	25e14 <main@@Base+0xfbb8>
   25e3c:	bne	25e50 <main@@Base+0xfbf4>
   25e40:	mov	r7, r1
   25e44:	ldrb	r0, [r7, #1]!
   25e48:	cmp	r0, #32
   25e4c:	bhi	25e60 <main@@Base+0xfc04>
   25e50:	mov	r0, r5
   25e54:	mov	r2, r6
   25e58:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   25e5c:	mov	r7, r0
   25e60:	cmp	r7, r6
   25e64:	beq	25f74 <main@@Base+0xfd18>
   25e68:	add	r0, r8, #4
   25e6c:	mov	r1, #0
   25e70:	add	sl, sp, #32
   25e74:	add	r9, sp, #28
   25e78:	str	r8, [sp, #16]
   25e7c:	str	r1, [sp, #20]
   25e80:	str	r0, [sp, #12]
   25e84:	ldr	r4, [r8]
   25e88:	mov	r8, r0
   25e8c:	add	r0, sp, #24
   25e90:	mov	r1, r7
   25e94:	mov	r2, r6
   25e98:	mov	r3, r9
   25e9c:	str	sl, [sp]
   25ea0:	str	r0, [sp, #4]
   25ea4:	mov	r0, r5
   25ea8:	blx	r4
   25eac:	cmp	r0, r6
   25eb0:	beq	25f74 <main@@Base+0xfd18>
   25eb4:	mov	r4, r0
   25eb8:	cmp	r0, r7
   25ebc:	bne	25ed0 <main@@Base+0xfc74>
   25ec0:	ldr	r4, [r8], #4
   25ec4:	cmp	r4, #0
   25ec8:	bne	25e8c <main@@Base+0xfc30>
   25ecc:	b	25f7c <main@@Base+0xfd20>
   25ed0:	ldr	r0, [sp, #28]
   25ed4:	cmp	r0, #0
   25ed8:	beq	25f00 <main@@Base+0xfca4>
   25edc:	mov	r0, r5
   25ee0:	mov	r1, r4
   25ee4:	mov	r2, r6
   25ee8:	mov	r3, #8
   25eec:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   25ef0:	ldr	r8, [sp, #16]
   25ef4:	cmp	r0, r6
   25ef8:	bne	25f44 <main@@Base+0xfce8>
   25efc:	b	25f74 <main@@Base+0xfd18>
   25f00:	ldr	r0, [sp, #36]	; 0x24
   25f04:	ldr	r8, [sp, #16]
   25f08:	cmp	r0, #0
   25f0c:	beq	25f30 <main@@Base+0xfcd4>
   25f10:	mov	r0, r5
   25f14:	mov	r1, r4
   25f18:	mov	r2, r6
   25f1c:	mov	r3, #7
   25f20:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   25f24:	cmp	r0, r6
   25f28:	bne	25f44 <main@@Base+0xfce8>
   25f2c:	b	25f74 <main@@Base+0xfd18>
   25f30:	ldr	r0, [sp, #32]
   25f34:	str	r0, [sp, #20]
   25f38:	mov	r0, r4
   25f3c:	cmp	r0, r6
   25f40:	beq	25f74 <main@@Base+0xfd18>
   25f44:	ldr	r0, [fp, #8]
   25f48:	ldr	r2, [sp, #20]
   25f4c:	mov	r7, r4
   25f50:	mov	r1, r0
   25f54:	ldr	r0, [r0]
   25f58:	add	r0, r0, r2
   25f5c:	str	r0, [r1]
   25f60:	ldr	r0, [sp, #24]
   25f64:	cmp	r0, #0
   25f68:	ldr	r0, [sp, #12]
   25f6c:	bne	25e84 <main@@Base+0xfc28>
   25f70:	b	25f94 <main@@Base+0xfd38>
   25f74:	mov	r4, r6
   25f78:	b	25f94 <main@@Base+0xfd38>
   25f7c:	mov	r0, r5
   25f80:	mov	r1, r7
   25f84:	mov	r2, r6
   25f88:	mov	r3, #23
   25f8c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   25f90:	mov	r4, r0
   25f94:	mov	r0, r4
   25f98:	sub	sp, fp, #28
   25f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25fa4:	add	fp, sp, #28
   25fa8:	sub	sp, sp, #44	; 0x2c
   25fac:	mov	r7, r2
   25fb0:	ldr	r2, [fp, #8]
   25fb4:	mov	r5, r0
   25fb8:	mov	r0, #0
   25fbc:	mov	r8, r3
   25fc0:	cmp	r1, r7
   25fc4:	str	r0, [r2]
   25fc8:	str	r0, [r2, #4]
   25fcc:	beq	26010 <main@@Base+0xfdb4>
   25fd0:	ldrb	r0, [r1]
   25fd4:	cmp	r0, #46	; 0x2e
   25fd8:	beq	25ff0 <main@@Base+0xfd94>
   25fdc:	cmp	r0, #34	; 0x22
   25fe0:	bne	26008 <main@@Base+0xfdac>
   25fe4:	mov	r0, #0
   25fe8:	add	r1, r1, #1
   25fec:	b	2600c <main@@Base+0xfdb0>
   25ff0:	mov	r0, r5
   25ff4:	mov	r2, r7
   25ff8:	mov	r3, #5
   25ffc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   26000:	mov	r1, r0
   26004:	b	26010 <main@@Base+0xfdb4>
   26008:	mov	r0, #1
   2600c:	str	r0, [r5, #12]
   26010:	ldr	r0, [r5, #12]
   26014:	cmp	r0, #0
   26018:	beq	2602c <main@@Base+0xfdd0>
   2601c:	mov	r6, r1
   26020:	cmp	r6, r7
   26024:	bne	26070 <main@@Base+0xfe14>
   26028:	b	2615c <main@@Base+0xff00>
   2602c:	sub	r0, r7, r1
   26030:	cmp	r0, #2
   26034:	blt	26058 <main@@Base+0xfdfc>
   26038:	ldrb	r0, [r1]
   2603c:	cmp	r0, #32
   26040:	bhi	2601c <main@@Base+0xfdc0>
   26044:	bne	26058 <main@@Base+0xfdfc>
   26048:	mov	r6, r1
   2604c:	ldrb	r0, [r6, #1]!
   26050:	cmp	r0, #32
   26054:	bhi	26068 <main@@Base+0xfe0c>
   26058:	mov	r0, r5
   2605c:	mov	r2, r7
   26060:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   26064:	mov	r6, r0
   26068:	cmp	r6, r7
   2606c:	beq	2615c <main@@Base+0xff00>
   26070:	mov	r1, #0
   26074:	add	r0, r8, #4
   26078:	add	sl, sp, #32
   2607c:	add	r9, sp, #28
   26080:	str	r8, [sp, #12]
   26084:	str	r1, [sp, #20]
   26088:	mov	r1, #0
   2608c:	str	r0, [sp, #8]
   26090:	str	r1, [sp, #16]
   26094:	ldr	r4, [r8]
   26098:	mov	r8, r0
   2609c:	add	r0, sp, #24
   260a0:	mov	r1, r6
   260a4:	mov	r2, r7
   260a8:	mov	r3, r9
   260ac:	str	sl, [sp]
   260b0:	str	r0, [sp, #4]
   260b4:	mov	r0, r5
   260b8:	blx	r4
   260bc:	cmp	r0, r7
   260c0:	beq	2615c <main@@Base+0xff00>
   260c4:	mov	r4, r0
   260c8:	cmp	r0, r6
   260cc:	bne	260e0 <main@@Base+0xfe84>
   260d0:	ldr	r4, [r8], #4
   260d4:	cmp	r4, #0
   260d8:	bne	2609c <main@@Base+0xfe40>
   260dc:	b	26164 <main@@Base+0xff08>
   260e0:	ldr	r0, [sp, #28]
   260e4:	cmp	r0, #0
   260e8:	beq	26104 <main@@Base+0xfea8>
   260ec:	mov	r0, r5
   260f0:	mov	r1, r4
   260f4:	mov	r2, r7
   260f8:	mov	r3, #8
   260fc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   26100:	b	26118 <main@@Base+0xfebc>
   26104:	ldr	r0, [sp, #32]
   26108:	str	r0, [sp, #20]
   2610c:	ldr	r0, [sp, #36]	; 0x24
   26110:	str	r0, [sp, #16]
   26114:	mov	r0, r4
   26118:	ldr	r8, [sp, #12]
   2611c:	cmp	r0, r7
   26120:	beq	2615c <main@@Base+0xff00>
   26124:	ldr	r0, [fp, #8]
   26128:	ldr	r3, [sp, #20]
   2612c:	mov	r6, r4
   26130:	mov	r2, r0
   26134:	ldrd	r0, [r0]
   26138:	adds	r0, r0, r3
   2613c:	ldr	r3, [sp, #16]
   26140:	adc	r1, r1, r3
   26144:	strd	r0, [r2]
   26148:	ldr	r0, [sp, #24]
   2614c:	cmp	r0, #0
   26150:	ldr	r0, [sp, #8]
   26154:	bne	26094 <main@@Base+0xfe38>
   26158:	b	2617c <main@@Base+0xff20>
   2615c:	mov	r4, r7
   26160:	b	2617c <main@@Base+0xff20>
   26164:	mov	r0, r5
   26168:	mov	r1, r6
   2616c:	mov	r2, r7
   26170:	mov	r3, #23
   26174:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   26178:	mov	r4, r0
   2617c:	mov	r0, r4
   26180:	sub	sp, fp, #28
   26184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26188:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2618c:	add	fp, sp, #28
   26190:	sub	sp, sp, #36	; 0x24
   26194:	mov	r6, r2
   26198:	ldr	r2, [fp, #8]
   2619c:	mov	r5, r0
   261a0:	mov	r0, #0
   261a4:	mov	r8, r3
   261a8:	cmp	r1, r6
   261ac:	str	r0, [r2]
   261b0:	str	r0, [r2, #4]
   261b4:	beq	261f8 <main@@Base+0xff9c>
   261b8:	ldrb	r0, [r1]
   261bc:	cmp	r0, #46	; 0x2e
   261c0:	beq	261d8 <main@@Base+0xff7c>
   261c4:	cmp	r0, #34	; 0x22
   261c8:	bne	261f0 <main@@Base+0xff94>
   261cc:	mov	r0, #0
   261d0:	add	r1, r1, #1
   261d4:	b	261f4 <main@@Base+0xff98>
   261d8:	mov	r0, r5
   261dc:	mov	r2, r6
   261e0:	mov	r3, #5
   261e4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   261e8:	mov	r1, r0
   261ec:	b	261f8 <main@@Base+0xff9c>
   261f0:	mov	r0, #1
   261f4:	str	r0, [r5, #12]
   261f8:	ldr	r0, [r5, #12]
   261fc:	cmp	r0, #0
   26200:	beq	26214 <main@@Base+0xffb8>
   26204:	mov	r7, r1
   26208:	cmp	r7, r6
   2620c:	bne	26258 <main@@Base+0xfffc>
   26210:	b	2630c <main@@Base+0x100b0>
   26214:	sub	r0, r6, r1
   26218:	cmp	r0, #2
   2621c:	blt	26240 <main@@Base+0xffe4>
   26220:	ldrb	r0, [r1]
   26224:	cmp	r0, #32
   26228:	bhi	26204 <main@@Base+0xffa8>
   2622c:	bne	26240 <main@@Base+0xffe4>
   26230:	mov	r7, r1
   26234:	ldrb	r0, [r7, #1]!
   26238:	cmp	r0, #32
   2623c:	bhi	26250 <main@@Base+0xfff4>
   26240:	mov	r0, r5
   26244:	mov	r2, r6
   26248:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2624c:	mov	r7, r0
   26250:	cmp	r7, r6
   26254:	beq	2630c <main@@Base+0x100b0>
   26258:	add	r0, r8, #4
   2625c:	add	sl, sp, #24
   26260:	add	r9, sp, #20
   26264:	str	r8, [sp, #12]
   26268:	str	r0, [sp, #8]
   2626c:	ldr	r4, [r8]
   26270:	mov	r8, r0
   26274:	add	r0, sp, #16
   26278:	mov	r1, r7
   2627c:	mov	r2, r6
   26280:	mov	r3, r9
   26284:	str	sl, [sp]
   26288:	str	r0, [sp, #4]
   2628c:	mov	r0, r5
   26290:	blx	r4
   26294:	cmp	r0, r6
   26298:	beq	2630c <main@@Base+0x100b0>
   2629c:	mov	r4, r0
   262a0:	cmp	r0, r7
   262a4:	bne	262b8 <main@@Base+0x1005c>
   262a8:	ldr	r4, [r8], #4
   262ac:	cmp	r4, #0
   262b0:	bne	26274 <main@@Base+0x10018>
   262b4:	b	26314 <main@@Base+0x100b8>
   262b8:	ldr	r0, [sp, #24]
   262bc:	ldr	r1, [sp, #28]
   262c0:	bl	47400 <flatcc_json_printer_clear@@Base+0x4e4>
   262c4:	ldr	r2, [fp, #8]
   262c8:	vmov	d17, r0, r1
   262cc:	ldr	r3, [sp, #20]
   262d0:	ldr	r8, [sp, #12]
   262d4:	mov	r7, r2
   262d8:	vldr	d16, [r2]
   262dc:	eor	r2, r1, #-2147483648	; 0x80000000
   262e0:	cmp	r3, #0
   262e4:	vmov	d18, r0, r2
   262e8:	vseleq.f64	d17, d17, d18
   262ec:	vadd.f64	d16, d16, d17
   262f0:	vstr	d16, [r7]
   262f4:	mov	r7, r4
   262f8:	ldr	r0, [sp, #16]
   262fc:	cmp	r0, #0
   26300:	ldr	r0, [sp, #8]
   26304:	bne	2626c <main@@Base+0x10010>
   26308:	b	2632c <main@@Base+0x100d0>
   2630c:	mov	r4, r6
   26310:	b	2632c <main@@Base+0x100d0>
   26314:	mov	r0, r5
   26318:	mov	r1, r7
   2631c:	mov	r2, r6
   26320:	mov	r3, #23
   26324:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   26328:	mov	r4, r0
   2632c:	mov	r0, r4
   26330:	sub	sp, fp, #28
   26334:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2633c:	add	fp, sp, #28
   26340:	sub	sp, sp, #12
   26344:	mov	sl, r1
   26348:	sub	r1, r2, r1
   2634c:	cmp	r1, #8
   26350:	movcs	r1, #8
   26354:	sub	r1, r1, #1
   26358:	cmp	r1, #7
   2635c:	bhi	26594 <main@@Base+0x10338>
   26360:	str	r3, [sp, #8]
   26364:	add	r3, pc, #36	; 0x24
   26368:	mov	r8, #0
   2636c:	mov	ip, #0
   26370:	mov	lr, #0
   26374:	mov	r5, #0
   26378:	mov	r6, #0
   2637c:	mov	r7, #0
   26380:	mov	r4, #0
   26384:	ldr	r9, [r3, r1, lsl #2]
   26388:	mov	r1, #0
   2638c:	add	pc, r3, r9
   26390:	andeq	r0, r0, r4, rrx
   26394:	andeq	r0, r0, ip, asr r0
   26398:	andeq	r0, r0, r4, asr r0
   2639c:	andeq	r0, r0, ip, asr #32
   263a0:	andeq	r0, r0, r0, asr #32
   263a4:	andeq	r0, r0, r4, lsr r0
   263a8:	andeq	r0, r0, r4, lsr #32
   263ac:	andeq	r0, r0, r0, lsr #32
   263b0:	ldrb	ip, [sl, #7]
   263b4:	ldrb	r1, [sl, #6]
   263b8:	mov	lr, r8
   263bc:	orr	r1, ip, r1, lsl #8
   263c0:	mov	r8, r1
   263c4:	ldrb	r1, [sl, #5]
   263c8:	mov	r5, lr
   263cc:	orr	r8, r8, r1, lsl #16
   263d0:	ldrb	r1, [sl, #4]
   263d4:	mov	r6, r5
   263d8:	orr	r8, r8, r1, lsl #24
   263dc:	ldrb	r1, [sl, #3]
   263e0:	orr	r7, r1, r6
   263e4:	ldrb	r1, [sl, #2]
   263e8:	orr	r4, r7, r1, lsl #8
   263ec:	ldrb	r1, [sl, #1]
   263f0:	orr	r1, r4, r1, lsl #16
   263f4:	ldrb	r7, [sl]
   263f8:	movw	r3, #28276	; 0x6e74
   263fc:	ldr	r6, [fp, #12]
   26400:	movt	r3, #29285	; 0x7265
   26404:	eor	r3, r8, r3
   26408:	orr	r1, r1, r7, lsl #24
   2640c:	movw	r7, #20577	; 0x5061
   26410:	movt	r7, #18798	; 0x496e
   26414:	eor	r7, r1, r7
   26418:	orrs	r3, r3, r7
   2641c:	bne	26548 <main@@Base+0x102ec>
   26420:	add	r8, sl, #8
   26424:	sub	r1, r2, r8
   26428:	cmp	r1, #8
   2642c:	movcs	r1, #8
   26430:	sub	r1, r1, #1
   26434:	cmp	r1, #7
   26438:	bhi	26594 <main@@Base+0x10338>
   2643c:	str	r0, [sp, #4]
   26440:	add	r3, pc, #36	; 0x24
   26444:	mov	r6, #0
   26448:	mov	r0, #0
   2644c:	mov	r9, #0
   26450:	mov	r7, #0
   26454:	mov	r5, #0
   26458:	mov	r4, #0
   2645c:	mov	ip, #0
   26460:	ldr	lr, [r3, r1, lsl #2]
   26464:	mov	r1, #0
   26468:	add	pc, r3, lr
   2646c:	andeq	r0, r0, r4, rrx
   26470:	andeq	r0, r0, ip, asr r0
   26474:	andeq	r0, r0, r4, asr r0
   26478:	andeq	r0, r0, ip, asr #32
   2647c:	andeq	r0, r0, r0, asr #32
   26480:	andeq	r0, r0, r4, lsr r0
   26484:	andeq	r0, r0, r4, lsr #32
   26488:	andeq	r0, r0, r0, lsr #32
   2648c:	ldrb	r0, [sl, #15]
   26490:	ldrb	r1, [sl, #14]
   26494:	mov	r9, r6
   26498:	orr	r0, r0, r1, lsl #8
   2649c:	mov	r6, r0
   264a0:	ldrb	r0, [sl, #13]
   264a4:	mov	r7, r9
   264a8:	orr	r6, r6, r0, lsl #16
   264ac:	ldrb	r0, [sl, #12]
   264b0:	mov	r5, r7
   264b4:	orr	r6, r6, r0, lsl #24
   264b8:	ldrb	r0, [sl, #11]
   264bc:	orr	r1, r0, r5
   264c0:	ldrb	r0, [sl, #10]
   264c4:	orr	r4, r1, r0, lsl #8
   264c8:	ldrb	r0, [sl, #9]
   264cc:	orr	ip, r4, r0, lsl #16
   264d0:	ldrb	r1, [r8]
   264d4:	movw	r0, #24931	; 0x6163
   264d8:	movw	r3, #28005	; 0x6d65
   264dc:	movt	r0, #29552	; 0x7370
   264e0:	movt	r3, #20065	; 0x4e61
   264e4:	eor	r0, r6, r0
   264e8:	orr	r1, ip, r1, lsl #24
   264ec:	eor	r1, r1, r3
   264f0:	orrs	r0, r0, r1
   264f4:	bne	26594 <main@@Base+0x10338>
   264f8:	add	r6, sl, #16
   264fc:	sub	r0, r2, r6
   26500:	cmp	r0, #8
   26504:	movcs	r0, #8
   26508:	sub	r0, r0, #1
   2650c:	cmp	r0, #7
   26510:	bhi	26594 <main@@Base+0x10338>
   26514:	ldrb	r0, [r6]
   26518:	cmp	r0, #101	; 0x65
   2651c:	bne	26594 <main@@Base+0x10338>
   26520:	ldr	r0, [fp, #12]
   26524:	mov	r1, r6
   26528:	mov	r3, #1
   2652c:	mov	r8, #1
   26530:	str	r0, [sp]
   26534:	ldr	r0, [sp, #4]
   26538:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   2653c:	cmp	r0, r6
   26540:	bne	26574 <main@@Base+0x10318>
   26544:	b	26594 <main@@Base+0x10338>
   26548:	movw	r3, #20037	; 0x4e45
   2654c:	movt	r3, #20047	; 0x4e4f
   26550:	teq	r1, r3
   26554:	bne	26594 <main@@Base+0x10338>
   26558:	mov	r1, sl
   2655c:	mov	r3, #4
   26560:	str	r6, [sp]
   26564:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   26568:	cmp	r0, sl
   2656c:	beq	26594 <main@@Base+0x10338>
   26570:	mov	r8, #0
   26574:	mov	sl, r0
   26578:	ldr	r0, [fp, #8]
   2657c:	mov	r1, #0
   26580:	str	r8, [r0]
   26584:	str	r1, [r0, #4]
   26588:	mov	r0, #0
   2658c:	ldr	r1, [sp, #8]
   26590:	str	r0, [r1]
   26594:	mov	r0, sl
   26598:	sub	sp, fp, #28
   2659c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   265a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   265a4:	add	fp, sp, #28
   265a8:	sub	sp, sp, #12
   265ac:	mov	r5, r1
   265b0:	sub	r1, r2, r1
   265b4:	cmp	r1, #8
   265b8:	movcs	r1, #8
   265bc:	sub	r1, r1, #1
   265c0:	cmp	r1, #7
   265c4:	bhi	26744 <main@@Base+0x104e8>
   265c8:	str	r3, [sp, #8]
   265cc:	add	r6, pc, #36	; 0x24
   265d0:	mov	lr, #0
   265d4:	mov	ip, #0
   265d8:	mov	r9, #0
   265dc:	mov	sl, #0
   265e0:	mov	r4, #0
   265e4:	mov	r3, #0
   265e8:	mov	r7, #0
   265ec:	ldr	r8, [r6, r1, lsl #2]
   265f0:	mov	r1, #0
   265f4:	add	pc, r6, r8
   265f8:	andeq	r0, r0, r4, rrx
   265fc:	andeq	r0, r0, ip, asr r0
   26600:	andeq	r0, r0, r4, asr r0
   26604:	andeq	r0, r0, ip, asr #32
   26608:	andeq	r0, r0, r0, asr #32
   2660c:	andeq	r0, r0, r4, lsr r0
   26610:	andeq	r0, r0, r4, lsr #32
   26614:	andeq	r0, r0, r0, lsr #32
   26618:	ldrb	ip, [r5, #7]
   2661c:	ldrb	r1, [r5, #6]
   26620:	mov	r9, lr
   26624:	orr	r1, ip, r1, lsl #8
   26628:	mov	lr, r1
   2662c:	ldrb	r1, [r5, #5]
   26630:	mov	sl, r9
   26634:	orr	lr, lr, r1, lsl #16
   26638:	ldrb	r1, [r5, #4]
   2663c:	orr	lr, lr, r1, lsl #24
   26640:	mov	r1, sl
   26644:	ldrb	r3, [r5, #3]
   26648:	orr	r4, r3, r1
   2664c:	ldrb	r1, [r5, #2]
   26650:	orr	r3, r4, r1, lsl #8
   26654:	ldrb	r1, [r5, #1]
   26658:	orr	r7, r3, r1, lsl #16
   2665c:	ldrb	r1, [r5]
   26660:	ldr	r3, [fp, #12]
   26664:	ldr	r8, [fp, #8]
   26668:	orr	r1, r7, r1, lsl #24
   2666c:	movw	r7, #30769	; 0x7831
   26670:	movt	r7, #26725	; 0x6865
   26674:	cmp	r1, r7
   26678:	bhi	266a8 <main@@Base+0x1044c>
   2667c:	teq	r1, r7
   26680:	bne	26744 <main@@Base+0x104e8>
   26684:	str	r3, [sp]
   26688:	mov	r1, r5
   2668c:	mov	r3, #4
   26690:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   26694:	cmp	r0, r5
   26698:	beq	26744 <main@@Base+0x104e8>
   2669c:	mov	r1, #0
   266a0:	mov	r2, #3
   266a4:	b	26730 <main@@Base+0x104d4>
   266a8:	lsr	r4, lr, #16
   266ac:	movw	r6, #25959	; 0x6567
   266b0:	movw	r7, #26725	; 0x6865
   266b4:	orr	r4, r4, r1, lsl #16
   266b8:	movt	r6, #30830	; 0x786e
   266bc:	eor	r7, r7, r1, lsr #16
   266c0:	eor	r6, r4, r6
   266c4:	orrs	r7, r6, r7
   266c8:	bne	266fc <main@@Base+0x104a0>
   266cc:	str	r3, [sp]
   266d0:	mov	r1, r5
   266d4:	mov	r3, #6
   266d8:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   266dc:	cmp	r0, r5
   266e0:	beq	26744 <main@@Base+0x104e8>
   266e4:	mvn	r2, #1
   266e8:	mvn	r1, #0
   266ec:	str	r2, [r8]
   266f0:	str	r1, [r8, #4]
   266f4:	mov	r1, #1
   266f8:	b	26738 <main@@Base+0x104dc>
   266fc:	movw	r7, #30770	; 0x7832
   26700:	movt	r7, #26725	; 0x6865
   26704:	teq	r1, r7
   26708:	bne	26744 <main@@Base+0x104e8>
   2670c:	str	r3, [sp]
   26710:	mov	r1, r5
   26714:	mov	r3, #4
   26718:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   2671c:	cmp	r0, r5
   26720:	beq	26744 <main@@Base+0x104e8>
   26724:	movw	r2, #48815	; 0xbeaf
   26728:	mov	r1, #0
   2672c:	movt	r2, #32431	; 0x7eaf
   26730:	str	r2, [r8]
   26734:	str	r1, [r8, #4]
   26738:	ldr	r2, [sp, #8]
   2673c:	mov	r5, r0
   26740:	str	r1, [r2]
   26744:	mov	r0, r5
   26748:	sub	sp, fp, #28
   2674c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26754:	add	fp, sp, #28
   26758:	sub	sp, sp, #12
   2675c:	mov	r8, r1
   26760:	sub	r1, r2, r1
   26764:	cmp	r1, #8
   26768:	movcs	r1, #8
   2676c:	sub	r1, r1, #1
   26770:	cmp	r1, #7
   26774:	bhi	26938 <main@@Base+0x106dc>
   26778:	str	r3, [sp, #8]
   2677c:	add	r5, pc, #36	; 0x24
   26780:	mov	sl, #0
   26784:	mov	ip, #0
   26788:	mov	lr, #0
   2678c:	mov	r4, #0
   26790:	mov	r6, #0
   26794:	mov	r7, #0
   26798:	mov	r3, #0
   2679c:	ldr	r9, [r5, r1, lsl #2]
   267a0:	mov	r1, #0
   267a4:	add	pc, r5, r9
   267a8:	andeq	r0, r0, r4, rrx
   267ac:	andeq	r0, r0, ip, asr r0
   267b0:	andeq	r0, r0, r4, asr r0
   267b4:	andeq	r0, r0, ip, asr #32
   267b8:	andeq	r0, r0, r0, asr #32
   267bc:	andeq	r0, r0, r4, lsr r0
   267c0:	andeq	r0, r0, r4, lsr #32
   267c4:	andeq	r0, r0, r0, lsr #32
   267c8:	ldrb	ip, [r8, #7]
   267cc:	ldrb	r1, [r8, #6]
   267d0:	mov	lr, sl
   267d4:	orr	r1, ip, r1, lsl #8
   267d8:	mov	sl, r1
   267dc:	ldrb	r1, [r8, #5]
   267e0:	mov	r4, lr
   267e4:	orr	sl, sl, r1, lsl #16
   267e8:	ldrb	r1, [r8, #4]
   267ec:	mov	r6, r4
   267f0:	orr	sl, sl, r1, lsl #24
   267f4:	ldrb	r1, [r8, #3]
   267f8:	orr	r7, r1, r6
   267fc:	ldrb	r1, [r8, #2]
   26800:	orr	r3, r7, r1, lsl #8
   26804:	ldrb	r1, [r8, #1]
   26808:	orr	r1, r3, r1, lsl #16
   2680c:	ldrb	r7, [r8]
   26810:	ldr	r3, [fp, #12]
   26814:	ldr	r5, [fp, #8]
   26818:	orr	r4, r1, r7, lsl #24
   2681c:	movw	r1, #29745	; 0x7431
   26820:	movt	r1, #26990	; 0x696e
   26824:	cmp	r4, r1
   26828:	bhi	26858 <main@@Base+0x105fc>
   2682c:	teq	r4, r1
   26830:	bne	26938 <main@@Base+0x106dc>
   26834:	str	r3, [sp]
   26838:	mov	r1, r8
   2683c:	mov	r3, #4
   26840:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   26844:	cmp	r0, r8
   26848:	beq	26938 <main@@Base+0x106dc>
   2684c:	mov	r1, #0
   26850:	mov	r2, #2
   26854:	b	268a4 <main@@Base+0x10648>
   26858:	movw	r6, #0
   2685c:	movw	r1, #29806	; 0x746e
   26860:	movt	r6, #25959	; 0x6567
   26864:	movt	r1, #26990	; 0x696e
   26868:	subs	r7, sl, r6
   2686c:	sbcs	r7, r4, r1
   26870:	bcs	268b0 <main@@Base+0x10654>
   26874:	movw	r1, #29746	; 0x7432
   26878:	movt	r1, #26990	; 0x696e
   2687c:	teq	r4, r1
   26880:	bne	26938 <main@@Base+0x106dc>
   26884:	str	r3, [sp]
   26888:	mov	r1, r8
   2688c:	mov	r3, #4
   26890:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   26894:	cmp	r0, r8
   26898:	beq	26938 <main@@Base+0x106dc>
   2689c:	mov	r1, #0
   268a0:	mov	r2, #42	; 0x2a
   268a4:	str	r2, [r5]
   268a8:	str	r1, [r5, #4]
   268ac:	b	2692c <main@@Base+0x106d0>
   268b0:	eor	r1, r4, r1
   268b4:	add	r7, r6, #12800	; 0x3200
   268b8:	bic	r4, sl, #255	; 0xff
   268bc:	eor	r7, r4, r7
   268c0:	orrs	r7, r7, r1
   268c4:	bne	268f0 <main@@Base+0x10694>
   268c8:	str	r3, [sp]
   268cc:	mov	r1, r8
   268d0:	mov	r3, #7
   268d4:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   268d8:	cmp	r0, r8
   268dc:	beq	26938 <main@@Base+0x106dc>
   268e0:	mvn	r2, #1
   268e4:	mvn	r1, #0
   268e8:	orr	r2, r2, #1
   268ec:	b	26920 <main@@Base+0x106c4>
   268f0:	bfc	sl, #0, #16
   268f4:	eor	r7, sl, r6
   268f8:	orrs	r1, r7, r1
   268fc:	bne	26938 <main@@Base+0x106dc>
   26900:	str	r3, [sp]
   26904:	mov	r1, r8
   26908:	mov	r3, #6
   2690c:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   26910:	cmp	r0, r8
   26914:	beq	26938 <main@@Base+0x106dc>
   26918:	mvn	r1, #0
   2691c:	mvn	r2, #1
   26920:	str	r2, [r5]
   26924:	str	r1, [r5, #4]
   26928:	mov	r1, #1
   2692c:	ldr	r2, [sp, #8]
   26930:	mov	r8, r0
   26934:	str	r1, [r2]
   26938:	mov	r0, r8
   2693c:	sub	sp, fp, #28
   26940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26944:	push	{r4, r5, r6, r7, fp, lr}
   26948:	add	fp, sp, #16
   2694c:	sub	sp, sp, #8
   26950:	mov	r5, r1
   26954:	sub	r1, r2, r1
   26958:	mov	r4, r3
   2695c:	cmp	r1, #8
   26960:	movcs	r1, #8
   26964:	sub	r3, r1, #1
   26968:	cmp	r3, #7
   2696c:	bhi	26a84 <main@@Base+0x10828>
   26970:	add	r7, pc, #8
   26974:	mov	r1, #0
   26978:	ldr	r3, [r7, r3, lsl #2]
   2697c:	add	pc, r7, r3
   26980:	andeq	r0, r0, r8, lsr r0
   26984:	andeq	r0, r0, r0, lsr r0
   26988:	andeq	r0, r0, r8, lsr #32
   2698c:	andeq	r0, r0, r0, lsr #32
   26990:	andeq	r0, r0, r0, lsr #32
   26994:	andeq	r0, r0, r0, lsr #32
   26998:	andeq	r0, r0, r0, lsr #32
   2699c:	andeq	r0, r0, r0, lsr #32
   269a0:	ldrb	r3, [r5, #3]
   269a4:	orr	r1, r3, r1
   269a8:	ldrb	r3, [r5, #2]
   269ac:	orr	r1, r1, r3, lsl #8
   269b0:	ldrb	r3, [r5, #1]
   269b4:	orr	r1, r1, r3, lsl #16
   269b8:	ldrb	r6, [r5]
   269bc:	ldr	r3, [fp, #12]
   269c0:	ldr	r7, [fp, #8]
   269c4:	orr	r1, r1, r6, lsl #24
   269c8:	movw	r6, #26417	; 0x6731
   269cc:	movt	r6, #28261	; 0x6e65
   269d0:	cmp	r1, r6
   269d4:	bhi	26a04 <main@@Base+0x107a8>
   269d8:	teq	r1, r6
   269dc:	bne	26a84 <main@@Base+0x10828>
   269e0:	str	r3, [sp]
   269e4:	mov	r1, r5
   269e8:	mov	r3, #4
   269ec:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   269f0:	cmp	r0, r5
   269f4:	beq	26a84 <main@@Base+0x10828>
   269f8:	mvn	r1, #0
   269fc:	mvn	r2, #11
   26a00:	b	26a70 <main@@Base+0x10814>
   26a04:	movw	r6, #26418	; 0x6732
   26a08:	movt	r6, #28261	; 0x6e65
   26a0c:	teq	r1, r6
   26a10:	beq	26a4c <main@@Base+0x107f0>
   26a14:	movw	r6, #26419	; 0x6733
   26a18:	movt	r6, #28261	; 0x6e65
   26a1c:	teq	r1, r6
   26a20:	bne	26a84 <main@@Base+0x10828>
   26a24:	str	r3, [sp]
   26a28:	mov	r1, r5
   26a2c:	mov	r3, #4
   26a30:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   26a34:	cmp	r0, r5
   26a38:	beq	26a84 <main@@Base+0x10828>
   26a3c:	mvn	r2, #11
   26a40:	mvn	r1, #0
   26a44:	orr	r2, r2, #2
   26a48:	b	26a70 <main@@Base+0x10814>
   26a4c:	str	r3, [sp]
   26a50:	mov	r1, r5
   26a54:	mov	r3, #4
   26a58:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   26a5c:	cmp	r0, r5
   26a60:	beq	26a84 <main@@Base+0x10828>
   26a64:	mvn	r2, #11
   26a68:	mvn	r1, #0
   26a6c:	orr	r2, r2, #1
   26a70:	str	r2, [r7]
   26a74:	str	r1, [r7, #4]
   26a78:	mov	r1, #1
   26a7c:	mov	r5, r0
   26a80:	str	r1, [r4]
   26a84:	mov	r0, r5
   26a88:	sub	sp, fp, #16
   26a8c:	pop	{r4, r5, r6, r7, fp, pc}
   26a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26a94:	add	fp, sp, #28
   26a98:	sub	sp, sp, #12
   26a9c:	mov	sl, r1
   26aa0:	sub	r1, r2, r1
   26aa4:	cmp	r1, #8
   26aa8:	movcs	r1, #8
   26aac:	sub	r7, r1, #1
   26ab0:	cmp	r7, #7
   26ab4:	bhi	26d34 <main@@Base+0x10ad8>
   26ab8:	str	r3, [sp, #8]
   26abc:	add	r1, pc, #36	; 0x24
   26ac0:	mov	r9, #0
   26ac4:	mov	ip, #0
   26ac8:	mov	lr, #0
   26acc:	mov	r6, #0
   26ad0:	mov	r4, #0
   26ad4:	mov	r5, #0
   26ad8:	mov	r8, #0
   26adc:	ldr	r3, [r1, r7, lsl #2]
   26ae0:	mov	r7, #0
   26ae4:	add	pc, r1, r3
   26ae8:	andeq	r0, r0, r4, rrx
   26aec:	andeq	r0, r0, ip, asr r0
   26af0:	andeq	r0, r0, r4, asr r0
   26af4:	andeq	r0, r0, ip, asr #32
   26af8:	andeq	r0, r0, r0, asr #32
   26afc:	andeq	r0, r0, r4, lsr r0
   26b00:	andeq	r0, r0, r4, lsr #32
   26b04:	andeq	r0, r0, r0, lsr #32
   26b08:	ldrb	ip, [sl, #7]
   26b0c:	ldrb	r1, [sl, #6]
   26b10:	mov	lr, r9
   26b14:	orr	r1, ip, r1, lsl #8
   26b18:	mov	r9, r1
   26b1c:	ldrb	r1, [sl, #5]
   26b20:	mov	r6, lr
   26b24:	orr	r9, r9, r1, lsl #16
   26b28:	ldrb	r1, [sl, #4]
   26b2c:	mov	r7, r6
   26b30:	orr	r9, r9, r1, lsl #24
   26b34:	ldrb	r1, [sl, #3]
   26b38:	orr	r4, r1, r7
   26b3c:	ldrb	r1, [sl, #2]
   26b40:	orr	r5, r4, r1, lsl #8
   26b44:	ldrb	r1, [sl, #1]
   26b48:	orr	r8, r5, r1, lsl #16
   26b4c:	ldrb	r1, [sl]
   26b50:	ldr	lr, [fp, #12]
   26b54:	ldr	r5, [fp, #8]
   26b58:	orr	r6, r8, r1, lsl #24
   26b5c:	movw	r1, #20036	; 0x4e44
   26b60:	movt	r1, #20047	; 0x4e4f
   26b64:	cmp	r6, r1
   26b68:	bhi	26bc8 <main@@Base+0x1096c>
   26b6c:	movw	r7, #28160	; 0x6e00
   26b70:	movw	r4, #28523	; 0x6f6b
   26b74:	and	r3, r9, #-16777216	; 0xff000000
   26b78:	movt	r7, #18017	; 0x4661
   26b7c:	movt	r4, #17007	; 0x426f
   26b80:	subs	r1, r9, r7
   26b84:	sbcs	r1, r6, r4
   26b88:	bcs	26c14 <main@@Base+0x109b8>
   26b8c:	movw	r1, #27756	; 0x6c6c
   26b90:	eor	r3, r3, #1694498816	; 0x65000000
   26b94:	movt	r1, #16997	; 0x4265
   26b98:	eor	r1, r6, r1
   26b9c:	orrs	r1, r3, r1
   26ba0:	bne	26d34 <main@@Base+0x10ad8>
   26ba4:	mov	r1, sl
   26ba8:	mov	r3, #5
   26bac:	str	lr, [sp]
   26bb0:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   26bb4:	cmp	r0, sl
   26bb8:	beq	26d34 <main@@Base+0x10ad8>
   26bbc:	mov	r1, #0
   26bc0:	mov	r2, #9
   26bc4:	b	26d20 <main@@Base+0x10ac4>
   26bc8:	movw	r7, #26725	; 0x6865
   26bcc:	mvn	r1, #-1912602624	; 0x8e000000
   26bd0:	movt	r7, #20340	; 0x4f74
   26bd4:	subs	r1, r1, r9
   26bd8:	sbcs	r1, r7, r6
   26bdc:	bcc	26c50 <main@@Base+0x109f4>
   26be0:	movw	r1, #20037	; 0x4e45
   26be4:	movt	r1, #20047	; 0x4e4f
   26be8:	teq	r6, r1
   26bec:	bne	26d34 <main@@Base+0x10ad8>
   26bf0:	mov	r1, sl
   26bf4:	mov	r3, #4
   26bf8:	str	lr, [sp]
   26bfc:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   26c00:	cmp	r0, sl
   26c04:	beq	26d34 <main@@Base+0x10ad8>
   26c08:	mov	r1, #0
   26c0c:	str	r1, [r5]
   26c10:	b	26d24 <main@@Base+0x10ac8>
   26c14:	movw	r1, #19553	; 0x4c61
   26c18:	eor	r3, r3, #1845493760	; 0x6e000000
   26c1c:	movt	r1, #19829	; 0x4d75
   26c20:	eor	r1, r6, r1
   26c24:	orrs	r1, r3, r1
   26c28:	bne	26ca4 <main@@Base+0x10a48>
   26c2c:	mov	r1, sl
   26c30:	mov	r3, #5
   26c34:	str	lr, [sp]
   26c38:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   26c3c:	cmp	r0, sl
   26c40:	beq	26d34 <main@@Base+0x10ad8>
   26c44:	mov	r1, #0
   26c48:	mov	r2, #2
   26c4c:	b	26d20 <main@@Base+0x10ac4>
   26c50:	movw	r4, #25964	; 0x656c
   26c54:	movw	ip, #28789	; 0x7075
   26c58:	movt	r4, #28282	; 0x6e7a
   26c5c:	movt	ip, #21089	; 0x5261
   26c60:	subs	r1, r9, r4
   26c64:	sbcs	r1, r6, ip
   26c68:	bcs	26cdc <main@@Base+0x10a80>
   26c6c:	and	r3, r9, #-16777216	; 0xff000000
   26c70:	eor	r1, r6, r7
   26c74:	eor	r3, r3, #1912602624	; 0x72000000
   26c78:	orrs	r1, r3, r1
   26c7c:	bne	26d34 <main@@Base+0x10ad8>
   26c80:	mov	r1, sl
   26c84:	mov	r3, #5
   26c88:	str	lr, [sp]
   26c8c:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   26c90:	cmp	r0, sl
   26c94:	beq	26d34 <main@@Base+0x10ad8>
   26c98:	mov	r1, #0
   26c9c:	mov	r2, #11
   26ca0:	b	26d20 <main@@Base+0x10ac4>
   26ca4:	bic	r3, r9, #255	; 0xff
   26ca8:	eor	r1, r6, r4
   26cac:	eor	r3, r3, r7
   26cb0:	orrs	r1, r3, r1
   26cb4:	bne	26d34 <main@@Base+0x10ad8>
   26cb8:	mov	r1, sl
   26cbc:	mov	r3, #7
   26cc0:	str	lr, [sp]
   26cc4:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   26cc8:	cmp	r0, sl
   26ccc:	beq	26d34 <main@@Base+0x10ad8>
   26cd0:	mov	r1, #0
   26cd4:	mov	r2, #10
   26cd8:	b	26d20 <main@@Base+0x10ac4>
   26cdc:	lsr	r3, r9, #16
   26ce0:	movw	r7, #25956	; 0x6564
   26ce4:	movw	r1, #21870	; 0x556e
   26ce8:	orr	r3, r3, r6, lsl #16
   26cec:	movt	r7, #30067	; 0x7573
   26cf0:	eor	r1, r1, r6, lsr #16
   26cf4:	eor	r3, r3, r7
   26cf8:	orrs	r1, r3, r1
   26cfc:	bne	26d40 <main@@Base+0x10ae4>
   26d00:	mov	r1, sl
   26d04:	mov	r3, #6
   26d08:	str	lr, [sp]
   26d0c:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   26d10:	cmp	r0, sl
   26d14:	beq	26d34 <main@@Base+0x10ad8>
   26d18:	mov	r1, #0
   26d1c:	mov	r2, #255	; 0xff
   26d20:	str	r2, [r5]
   26d24:	str	r1, [r5, #4]
   26d28:	mov	sl, r0
   26d2c:	ldr	r2, [sp, #8]
   26d30:	str	r1, [r2]
   26d34:	mov	r0, sl
   26d38:	sub	sp, fp, #28
   26d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26d40:	eor	r1, r9, r4
   26d44:	eor	r3, r6, ip
   26d48:	orrs	r1, r1, r3
   26d4c:	bne	26d34 <main@@Base+0x10ad8>
   26d50:	mov	r1, sl
   26d54:	mov	r3, #8
   26d58:	str	lr, [sp]
   26d5c:	mov	r4, #8
   26d60:	bl	36654 <flatcc_json_parser_match_constant@@Base>
   26d64:	cmp	r0, sl
   26d68:	beq	26d34 <main@@Base+0x10ad8>
   26d6c:	mov	r1, #0
   26d70:	str	r4, [r5]
   26d74:	b	26d24 <main@@Base+0x10ac8>
   26d78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26d7c:	add	fp, sp, #28
   26d80:	sub	sp, sp, #36	; 0x24
   26d84:	mov	r5, r0
   26d88:	mov	r0, #0
   26d8c:	mov	r4, r1
   26d90:	mov	r1, #4
   26d94:	mov	r7, r3
   26d98:	mov	r8, r2
   26d9c:	str	r0, [r3]
   26da0:	ldr	r0, [r5]
   26da4:	bl	31348 <flatcc_builder_start_table@@Base>
   26da8:	cmp	r0, #0
   26dac:	beq	26dd4 <main@@Base+0x10b78>
   26db0:	mov	r0, r5
   26db4:	mov	r1, r4
   26db8:	mov	r2, r8
   26dbc:	mov	r3, #33	; 0x21
   26dc0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   26dc4:	mov	r4, r0
   26dc8:	mov	r0, r4
   26dcc:	sub	sp, fp, #28
   26dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26dd4:	add	r0, sp, #28
   26dd8:	mov	r1, r4
   26ddc:	mov	r2, r8
   26de0:	mov	r3, #1
   26de4:	str	r0, [sp]
   26de8:	mov	r0, r5
   26dec:	bl	38b5c <flatcc_json_parser_prepare_unions@@Base>
   26df0:	cmp	r0, r8
   26df4:	beq	26db0 <main@@Base+0x10b54>
   26df8:	cmp	r4, r8
   26dfc:	beq	26e30 <main@@Base+0x10bd4>
   26e00:	ldrb	r0, [r4]
   26e04:	cmp	r0, #123	; 0x7b
   26e08:	bne	26e30 <main@@Base+0x10bd4>
   26e0c:	add	r1, r4, #1
   26e10:	sub	r0, r8, r1
   26e14:	cmp	r0, #2
   26e18:	blt	26e94 <main@@Base+0x10c38>
   26e1c:	ldrb	r0, [r1]
   26e20:	cmp	r0, #32
   26e24:	bls	26e84 <main@@Base+0x10c28>
   26e28:	mov	r4, r1
   26e2c:	b	26ea4 <main@@Base+0x10c48>
   26e30:	mov	r0, r5
   26e34:	mov	r1, r4
   26e38:	mov	r2, r8
   26e3c:	mov	r3, #21
   26e40:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   26e44:	mov	r4, r0
   26e48:	ldr	r0, [r5, #24]
   26e4c:	cmp	r0, #0
   26e50:	bne	26db0 <main@@Base+0x10b54>
   26e54:	ldr	r3, [sp, #28]
   26e58:	mov	r0, r5
   26e5c:	mov	r1, r4
   26e60:	mov	r2, r8
   26e64:	bl	38bec <flatcc_json_parser_finalize_unions@@Base>
   26e68:	mov	r4, r0
   26e6c:	ldr	r0, [r5]
   26e70:	bl	31d70 <flatcc_builder_end_table@@Base>
   26e74:	cmp	r0, #0
   26e78:	str	r0, [r7]
   26e7c:	bne	26dc8 <main@@Base+0x10b6c>
   26e80:	b	26db0 <main@@Base+0x10b54>
   26e84:	bne	26e94 <main@@Base+0x10c38>
   26e88:	ldrb	r0, [r4, #2]!
   26e8c:	cmp	r0, #32
   26e90:	bhi	26ea4 <main@@Base+0x10c48>
   26e94:	mov	r0, r5
   26e98:	mov	r2, r8
   26e9c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   26ea0:	mov	r4, r0
   26ea4:	cmp	r4, r8
   26ea8:	mov	r2, r8
   26eac:	beq	26ef0 <main@@Base+0x10c94>
   26eb0:	ldrb	r0, [r4]
   26eb4:	cmp	r0, #125	; 0x7d
   26eb8:	bne	26eec <main@@Base+0x10c90>
   26ebc:	add	r1, r4, #1
   26ec0:	sub	r0, r8, r1
   26ec4:	cmp	r0, #2
   26ec8:	blt	277ac <main@@Base+0x11550>
   26ecc:	ldrb	r0, [r1]
   26ed0:	cmp	r0, #32
   26ed4:	bhi	27770 <main@@Base+0x11514>
   26ed8:	bne	277ac <main@@Base+0x11550>
   26edc:	ldrb	r0, [r4, #2]!
   26ee0:	cmp	r0, #32
   26ee4:	bhi	26e48 <main@@Base+0x10bec>
   26ee8:	b	277ac <main@@Base+0x11550>
   26eec:	mov	r2, r4
   26ef0:	str	r7, [sp, #20]
   26ef4:	cmp	r2, r8
   26ef8:	mov	r9, r8
   26efc:	beq	26f48 <main@@Base+0x10cec>
   26f00:	ldrb	r0, [r2]
   26f04:	cmp	r0, #46	; 0x2e
   26f08:	beq	26f20 <main@@Base+0x10cc4>
   26f0c:	cmp	r0, #34	; 0x22
   26f10:	bne	26f3c <main@@Base+0x10ce0>
   26f14:	mov	r0, #0
   26f18:	add	r9, r2, #1
   26f1c:	b	26f44 <main@@Base+0x10ce8>
   26f20:	mov	r1, r2
   26f24:	mov	r0, r5
   26f28:	mov	r2, r8
   26f2c:	mov	r3, #5
   26f30:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   26f34:	mov	r9, r0
   26f38:	b	26f48 <main@@Base+0x10cec>
   26f3c:	mov	r0, #1
   26f40:	mov	r9, r2
   26f44:	str	r0, [r5, #12]
   26f48:	sub	r1, r8, r9
   26f4c:	mov	r0, #8
   26f50:	cmp	r1, #8
   26f54:	movcc	r0, r1
   26f58:	sub	r0, r0, #1
   26f5c:	cmp	r0, #7
   26f60:	bhi	27668 <main@@Base+0x1140c>
   26f64:	str	r1, [sp, #24]
   26f68:	add	r4, pc, #40	; 0x28
   26f6c:	mov	lr, r5
   26f70:	mov	sl, #0
   26f74:	mov	ip, #0
   26f78:	mov	r5, #0
   26f7c:	mov	r1, #0
   26f80:	mov	r2, #0
   26f84:	mov	r3, #0
   26f88:	mov	r6, #0
   26f8c:	mov	r7, #0
   26f90:	ldr	r0, [r4, r0, lsl #2]
   26f94:	add	pc, r4, r0
   26f98:	andeq	r0, r0, r4, rrx
   26f9c:	andeq	r0, r0, ip, asr r0
   26fa0:	andeq	r0, r0, r4, asr r0
   26fa4:	andeq	r0, r0, ip, asr #32
   26fa8:	andeq	r0, r0, r0, asr #32
   26fac:	andeq	r0, r0, r4, lsr r0
   26fb0:	andeq	r0, r0, r4, lsr #32
   26fb4:	andeq	r0, r0, r0, lsr #32
   26fb8:	ldrb	ip, [r9, #7]
   26fbc:	ldrb	r0, [r9, #6]
   26fc0:	mov	r5, sl
   26fc4:	orr	r0, ip, r0, lsl #8
   26fc8:	mov	sl, r0
   26fcc:	ldrb	r0, [r9, #5]
   26fd0:	mov	r1, r5
   26fd4:	orr	sl, sl, r0, lsl #16
   26fd8:	ldrb	r0, [r9, #4]
   26fdc:	mov	r2, r1
   26fe0:	orr	sl, sl, r0, lsl #24
   26fe4:	ldrb	r0, [r9, #3]
   26fe8:	orr	r3, r0, r2
   26fec:	ldrb	r0, [r9, #2]
   26ff0:	orr	r6, r3, r0, lsl #8
   26ff4:	ldrb	r0, [r9, #1]
   26ff8:	orr	r7, r6, r0, lsl #16
   26ffc:	movw	r2, #30976	; 0x7900
   27000:	movt	r2, #24942	; 0x616e
   27004:	add	r0, r2, #95	; 0x5f
   27008:	eor	r1, sl, r0
   2700c:	ldrb	r0, [r9]
   27010:	orr	r4, r7, r0, lsl #24
   27014:	movw	r0, #28281	; 0x6e79
   27018:	movt	r0, #28001	; 0x6d61
   2701c:	eor	r0, r4, r0
   27020:	orrs	r1, r1, r0
   27024:	bne	270e4 <main@@Base+0x10e88>
   27028:	add	r6, r9, #8
   2702c:	ldr	r7, [sp, #20]
   27030:	mov	r1, #8
   27034:	mov	r5, lr
   27038:	sub	r0, r8, r6
   2703c:	cmp	r0, #8
   27040:	movcc	r1, r0
   27044:	sub	r2, r1, #1
   27048:	cmp	r2, #7
   2704c:	bhi	273b8 <main@@Base+0x1115c>
   27050:	add	r3, pc, #8
   27054:	mov	r1, #0
   27058:	ldr	r2, [r3, r2, lsl #2]
   2705c:	add	pc, r3, r2
   27060:	andeq	r0, r0, r4, lsr r0
   27064:	andeq	r0, r0, ip, lsr #32
   27068:	andeq	r0, r0, r4, lsr #32
   2706c:	andeq	r0, r0, r0, lsr #32
   27070:	andeq	r0, r0, r0, lsr #32
   27074:	andeq	r0, r0, r0, lsr #32
   27078:	andeq	r0, r0, r0, lsr #32
   2707c:	andeq	r0, r0, r0, lsr #32
   27080:	ldrb	r1, [r9, #11]
   27084:	ldrb	r2, [r9, #10]
   27088:	orr	r1, r1, r2, lsl #8
   2708c:	ldrb	r2, [r9, #9]
   27090:	orr	r1, r1, r2, lsl #16
   27094:	ldrb	r2, [r6]
   27098:	orr	r1, r1, r2, lsl #24
   2709c:	movw	r2, #28773	; 0x7065
   270a0:	movt	r2, #29817	; 0x7479
   270a4:	teq	r1, r2
   270a8:	bne	273b8 <main@@Base+0x1115c>
   270ac:	cmp	r0, #5
   270b0:	blt	273b8 <main@@Base+0x1115c>
   270b4:	mov	r1, r9
   270b8:	ldr	r2, [r5, #12]
   270bc:	ldrb	r0, [r1, #12]!
   270c0:	cmp	r2, #0
   270c4:	beq	27174 <main@@Base+0x10f18>
   270c8:	cmp	r0, #33	; 0x21
   270cc:	bcc	270d8 <main@@Base+0x10e7c>
   270d0:	cmp	r0, #58	; 0x3a
   270d4:	bne	273b8 <main@@Base+0x1115c>
   270d8:	mov	r0, #0
   270dc:	str	r0, [r5, #12]
   270e0:	b	27180 <main@@Base+0x10f24>
   270e4:	ldr	r6, [sp, #24]
   270e8:	bic	r1, sl, #255	; 0xff
   270ec:	mov	r5, lr
   270f0:	eor	r1, r1, r2
   270f4:	orrs	r0, r1, r0
   270f8:	bne	2720c <main@@Base+0x10fb0>
   270fc:	cmp	r6, #8
   27100:	mov	r1, r9
   27104:	blt	274f8 <main@@Base+0x1129c>
   27108:	mov	r2, r9
   2710c:	ldr	r1, [r5, #12]
   27110:	ldrb	r0, [r2, #7]!
   27114:	cmp	r1, #0
   27118:	beq	2713c <main@@Base+0x10ee0>
   2711c:	cmp	r0, #33	; 0x21
   27120:	bcc	27130 <main@@Base+0x10ed4>
   27124:	cmp	r0, #58	; 0x3a
   27128:	mov	r1, r9
   2712c:	bne	274f8 <main@@Base+0x1129c>
   27130:	mov	r0, #0
   27134:	str	r0, [r5, #12]
   27138:	b	2714c <main@@Base+0x10ef0>
   2713c:	cmp	r0, #34	; 0x22
   27140:	mov	r1, r9
   27144:	bne	274f8 <main@@Base+0x1129c>
   27148:	add	r2, r9, #8
   2714c:	sub	r0, r8, r2
   27150:	cmp	r0, #2
   27154:	blt	271bc <main@@Base+0x10f60>
   27158:	ldrb	r0, [r2]
   2715c:	cmp	r0, #32
   27160:	bls	271a8 <main@@Base+0x10f4c>
   27164:	mov	r1, r2
   27168:	cmp	r1, r8
   2716c:	bne	271d8 <main@@Base+0x10f7c>
   27170:	b	272d4 <main@@Base+0x11078>
   27174:	cmp	r0, #34	; 0x22
   27178:	bne	273b8 <main@@Base+0x1115c>
   2717c:	add	r1, r9, #13
   27180:	sub	r0, r8, r1
   27184:	cmp	r0, #2
   27188:	blt	2736c <main@@Base+0x11110>
   2718c:	ldrb	r0, [r1]
   27190:	cmp	r0, #32
   27194:	bls	27358 <main@@Base+0x110fc>
   27198:	mov	r2, r1
   2719c:	cmp	r2, r8
   271a0:	bne	27384 <main@@Base+0x11128>
   271a4:	b	273c4 <main@@Base+0x11168>
   271a8:	bne	271bc <main@@Base+0x10f60>
   271ac:	mov	r1, r2
   271b0:	ldrb	r0, [r1, #1]!
   271b4:	cmp	r0, #32
   271b8:	bhi	271d0 <main@@Base+0x10f74>
   271bc:	mov	r1, r2
   271c0:	mov	r0, r5
   271c4:	mov	r2, r8
   271c8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   271cc:	mov	r1, r0
   271d0:	cmp	r1, r8
   271d4:	beq	272d4 <main@@Base+0x11078>
   271d8:	ldrb	r0, [r1]
   271dc:	cmp	r0, #58	; 0x3a
   271e0:	bne	272d4 <main@@Base+0x11078>
   271e4:	add	r2, r1, #1
   271e8:	sub	r0, r8, r2
   271ec:	cmp	r0, #2
   271f0:	blt	274e4 <main@@Base+0x11288>
   271f4:	ldrb	r0, [r2]
   271f8:	cmp	r0, #32
   271fc:	bls	274d4 <main@@Base+0x11278>
   27200:	mov	r1, r2
   27204:	cmp	r9, r1
   27208:	bne	27500 <main@@Base+0x112a4>
   2720c:	lsr	r1, sl, #16
   27210:	movw	r2, #27000	; 0x6978
   27214:	movw	r0, #28786	; 0x7072
   27218:	orr	r1, r1, r4, lsl #16
   2721c:	movt	r2, #25958	; 0x6566
   27220:	eor	r0, r0, r4, lsr #16
   27224:	eor	r1, r1, r2
   27228:	orrs	r0, r1, r0
   2722c:	bne	27274 <main@@Base+0x11018>
   27230:	ldr	r7, [sp, #20]
   27234:	cmp	r6, #7
   27238:	mov	r1, r9
   2723c:	blt	275cc <main@@Base+0x11370>
   27240:	mov	r2, r9
   27244:	ldr	r1, [r5, #12]
   27248:	ldrb	r0, [r2, #6]!
   2724c:	cmp	r1, #0
   27250:	beq	272e8 <main@@Base+0x1108c>
   27254:	cmp	r0, #33	; 0x21
   27258:	bcc	27268 <main@@Base+0x1100c>
   2725c:	cmp	r0, #58	; 0x3a
   27260:	mov	r1, r9
   27264:	bne	275cc <main@@Base+0x11370>
   27268:	mov	r0, #0
   2726c:	str	r0, [r5, #12]
   27270:	b	272f8 <main@@Base+0x1109c>
   27274:	movw	r0, #30313	; 0x7669
   27278:	ldr	r7, [sp, #20]
   2727c:	and	r1, sl, #-16777216	; 0xff000000
   27280:	movt	r0, #28015	; 0x6d6f
   27284:	eor	r1, r1, #1694498816	; 0x65000000
   27288:	eor	r0, r4, r0
   2728c:	orrs	r0, r1, r0
   27290:	bne	27668 <main@@Base+0x1140c>
   27294:	cmp	r6, #6
   27298:	mov	r1, r9
   2729c:	blt	27624 <main@@Base+0x113c8>
   272a0:	mov	r2, r9
   272a4:	ldr	r1, [r5, #12]
   272a8:	ldrb	r0, [r2, #5]!
   272ac:	cmp	r1, #0
   272b0:	beq	27320 <main@@Base+0x110c4>
   272b4:	cmp	r0, #33	; 0x21
   272b8:	bcc	272c8 <main@@Base+0x1106c>
   272bc:	cmp	r0, #58	; 0x3a
   272c0:	mov	r1, r9
   272c4:	bne	27624 <main@@Base+0x113c8>
   272c8:	mov	r0, #0
   272cc:	str	r0, [r5, #12]
   272d0:	b	27330 <main@@Base+0x110d4>
   272d4:	mov	r0, r5
   272d8:	mov	r2, r8
   272dc:	mov	r3, #4
   272e0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   272e4:	b	274f4 <main@@Base+0x11298>
   272e8:	cmp	r0, #34	; 0x22
   272ec:	mov	r1, r9
   272f0:	bne	275cc <main@@Base+0x11370>
   272f4:	add	r2, r9, #7
   272f8:	sub	r0, r8, r2
   272fc:	cmp	r0, #2
   27300:	blt	273f0 <main@@Base+0x11194>
   27304:	ldrb	r0, [r2]
   27308:	cmp	r0, #32
   2730c:	bls	273dc <main@@Base+0x11180>
   27310:	mov	r1, r2
   27314:	cmp	r1, r8
   27318:	bne	2740c <main@@Base+0x111b0>
   2731c:	b	27444 <main@@Base+0x111e8>
   27320:	cmp	r0, #34	; 0x22
   27324:	mov	r1, r9
   27328:	bne	27624 <main@@Base+0x113c8>
   2732c:	add	r2, r9, #6
   27330:	sub	r0, r8, r2
   27334:	cmp	r0, #2
   27338:	blt	2746c <main@@Base+0x11210>
   2733c:	ldrb	r0, [r2]
   27340:	cmp	r0, #32
   27344:	bls	27458 <main@@Base+0x111fc>
   27348:	mov	r1, r2
   2734c:	cmp	r1, r8
   27350:	bne	27488 <main@@Base+0x1122c>
   27354:	b	274c0 <main@@Base+0x11264>
   27358:	bne	2736c <main@@Base+0x11110>
   2735c:	mov	r2, r1
   27360:	ldrb	r0, [r2, #1]!
   27364:	cmp	r0, #32
   27368:	bhi	2737c <main@@Base+0x11120>
   2736c:	mov	r0, r5
   27370:	mov	r2, r8
   27374:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   27378:	mov	r2, r0
   2737c:	cmp	r2, r8
   27380:	beq	273c4 <main@@Base+0x11168>
   27384:	ldrb	r0, [r2]
   27388:	cmp	r0, #58	; 0x3a
   2738c:	bne	273c4 <main@@Base+0x11168>
   27390:	add	r1, r2, #1
   27394:	sub	r0, r8, r1
   27398:	cmp	r0, #2
   2739c:	blt	27544 <main@@Base+0x112e8>
   273a0:	ldrb	r0, [r1]
   273a4:	cmp	r0, #32
   273a8:	bls	27534 <main@@Base+0x112d8>
   273ac:	mov	r2, r1
   273b0:	cmp	r6, r2
   273b4:	bne	2755c <main@@Base+0x11300>
   273b8:	mov	r0, r5
   273bc:	mov	r1, r6
   273c0:	b	27670 <main@@Base+0x11414>
   273c4:	mov	r1, r2
   273c8:	mov	r0, r5
   273cc:	mov	r2, r8
   273d0:	mov	r3, #4
   273d4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   273d8:	b	27550 <main@@Base+0x112f4>
   273dc:	bne	273f0 <main@@Base+0x11194>
   273e0:	mov	r1, r2
   273e4:	ldrb	r0, [r1, #1]!
   273e8:	cmp	r0, #32
   273ec:	bhi	27404 <main@@Base+0x111a8>
   273f0:	mov	r1, r2
   273f4:	mov	r0, r5
   273f8:	mov	r2, r8
   273fc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   27400:	mov	r1, r0
   27404:	cmp	r1, r8
   27408:	beq	27444 <main@@Base+0x111e8>
   2740c:	ldrb	r0, [r1]
   27410:	cmp	r0, #58	; 0x3a
   27414:	bne	27444 <main@@Base+0x111e8>
   27418:	add	r2, r1, #1
   2741c:	sub	r0, r8, r2
   27420:	cmp	r0, #2
   27424:	blt	275b8 <main@@Base+0x1135c>
   27428:	ldrb	r0, [r2]
   2742c:	cmp	r0, #32
   27430:	bls	275a8 <main@@Base+0x1134c>
   27434:	mov	r1, r2
   27438:	cmp	r9, r1
   2743c:	bne	275d4 <main@@Base+0x11378>
   27440:	b	27668 <main@@Base+0x1140c>
   27444:	mov	r0, r5
   27448:	mov	r2, r8
   2744c:	mov	r3, #4
   27450:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   27454:	b	275c8 <main@@Base+0x1136c>
   27458:	bne	2746c <main@@Base+0x11210>
   2745c:	mov	r1, r2
   27460:	ldrb	r0, [r1, #1]!
   27464:	cmp	r0, #32
   27468:	bhi	27480 <main@@Base+0x11224>
   2746c:	mov	r1, r2
   27470:	mov	r0, r5
   27474:	mov	r2, r8
   27478:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2747c:	mov	r1, r0
   27480:	cmp	r1, r8
   27484:	beq	274c0 <main@@Base+0x11264>
   27488:	ldrb	r0, [r1]
   2748c:	cmp	r0, #58	; 0x3a
   27490:	bne	274c0 <main@@Base+0x11264>
   27494:	add	r2, r1, #1
   27498:	sub	r0, r8, r2
   2749c:	cmp	r0, #2
   274a0:	blt	27610 <main@@Base+0x113b4>
   274a4:	ldrb	r0, [r2]
   274a8:	cmp	r0, #32
   274ac:	bls	27600 <main@@Base+0x113a4>
   274b0:	mov	r1, r2
   274b4:	cmp	r9, r1
   274b8:	bne	2762c <main@@Base+0x113d0>
   274bc:	b	27668 <main@@Base+0x1140c>
   274c0:	mov	r0, r5
   274c4:	mov	r2, r8
   274c8:	mov	r3, #4
   274cc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   274d0:	b	27620 <main@@Base+0x113c4>
   274d4:	bne	274e4 <main@@Base+0x11288>
   274d8:	ldrb	r0, [r1, #2]!
   274dc:	cmp	r0, #32
   274e0:	bhi	274f8 <main@@Base+0x1129c>
   274e4:	mov	r1, r2
   274e8:	mov	r0, r5
   274ec:	mov	r2, r8
   274f0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   274f4:	mov	r1, r0
   274f8:	cmp	r9, r1
   274fc:	beq	2720c <main@@Base+0x10fb0>
   27500:	ldr	r0, [sp, #28]
   27504:	mov	r2, #3
   27508:	mov	r3, #0
   2750c:	str	r2, [sp]
   27510:	mov	r2, r8
   27514:	str	r0, [sp, #4]
   27518:	ldr	r0, [pc, #680]	; 277c8 <main@@Base+0x1156c>
   2751c:	add	r0, pc, r0
   27520:	str	r0, [sp, #8]
   27524:	mov	r0, r5
   27528:	bl	3933c <flatcc_json_parser_union_vector@@Base>
   2752c:	ldr	r7, [sp, #20]
   27530:	b	27678 <main@@Base+0x1141c>
   27534:	bne	27544 <main@@Base+0x112e8>
   27538:	ldrb	r0, [r2, #2]!
   2753c:	cmp	r0, #32
   27540:	bhi	27554 <main@@Base+0x112f8>
   27544:	mov	r0, r5
   27548:	mov	r2, r8
   2754c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   27550:	mov	r2, r0
   27554:	cmp	r6, r2
   27558:	beq	273b8 <main@@Base+0x1115c>
   2755c:	ldr	r0, [sp, #28]
   27560:	mov	r1, #3
   27564:	mov	r3, #0
   27568:	str	r1, [sp]
   2756c:	mov	r1, r2
   27570:	mov	r2, r8
   27574:	str	r0, [sp, #4]
   27578:	ldr	r0, [pc, #572]	; 277bc <main@@Base+0x11560>
   2757c:	add	r0, pc, r0
   27580:	str	r0, [sp, #8]
   27584:	ldr	r0, [pc, #564]	; 277c0 <main@@Base+0x11564>
   27588:	add	r0, pc, r0
   2758c:	str	r0, [sp, #12]
   27590:	ldr	r0, [pc, #556]	; 277c4 <main@@Base+0x11568>
   27594:	add	r0, pc, r0
   27598:	str	r0, [sp, #16]
   2759c:	mov	r0, r5
   275a0:	bl	39838 <flatcc_json_parser_union_type_vector@@Base>
   275a4:	b	27678 <main@@Base+0x1141c>
   275a8:	bne	275b8 <main@@Base+0x1135c>
   275ac:	ldrb	r0, [r1, #2]!
   275b0:	cmp	r0, #32
   275b4:	bhi	275cc <main@@Base+0x11370>
   275b8:	mov	r1, r2
   275bc:	mov	r0, r5
   275c0:	mov	r2, r8
   275c4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   275c8:	mov	r1, r0
   275cc:	cmp	r9, r1
   275d0:	beq	27668 <main@@Base+0x1140c>
   275d4:	mov	r0, r5
   275d8:	mov	r2, r8
   275dc:	add	r3, sp, #32
   275e0:	bl	277e0 <main@@Base+0x11584>
   275e4:	ldr	r6, [sp, #32]
   275e8:	mov	r4, r0
   275ec:	cmp	r6, #0
   275f0:	beq	26db0 <main@@Base+0x10b54>
   275f4:	ldr	r0, [r5]
   275f8:	mov	r1, #0
   275fc:	b	27654 <main@@Base+0x113f8>
   27600:	bne	27610 <main@@Base+0x113b4>
   27604:	ldrb	r0, [r1, #2]!
   27608:	cmp	r0, #32
   2760c:	bhi	27624 <main@@Base+0x113c8>
   27610:	mov	r1, r2
   27614:	mov	r0, r5
   27618:	mov	r2, r8
   2761c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   27620:	mov	r1, r0
   27624:	cmp	r9, r1
   27628:	beq	27668 <main@@Base+0x1140c>
   2762c:	mov	r0, r5
   27630:	mov	r2, r8
   27634:	add	r3, sp, #32
   27638:	bl	2acc4 <main@@Base+0x14a68>
   2763c:	ldr	r6, [sp, #32]
   27640:	mov	r4, r0
   27644:	cmp	r6, #0
   27648:	beq	26db0 <main@@Base+0x10b54>
   2764c:	ldr	r0, [r5]
   27650:	mov	r1, #1
   27654:	bl	32630 <flatcc_builder_table_add_offset@@Base>
   27658:	cmp	r0, #0
   2765c:	beq	26db0 <main@@Base+0x10b54>
   27660:	str	r6, [r0]
   27664:	b	2767c <main@@Base+0x11420>
   27668:	mov	r0, r5
   2766c:	mov	r1, r9
   27670:	mov	r2, r8
   27674:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   27678:	mov	r4, r0
   2767c:	sub	r0, r8, r4
   27680:	cmp	r0, #2
   27684:	blt	276b8 <main@@Base+0x1145c>
   27688:	ldrb	r0, [r4]
   2768c:	cmp	r0, #32
   27690:	bls	276a4 <main@@Base+0x11448>
   27694:	mov	r2, r4
   27698:	cmp	r2, r8
   2769c:	bne	276d4 <main@@Base+0x11478>
   276a0:	b	27744 <main@@Base+0x114e8>
   276a4:	bne	276b8 <main@@Base+0x1145c>
   276a8:	mov	r2, r4
   276ac:	ldrb	r0, [r2, #1]!
   276b0:	cmp	r0, #32
   276b4:	bhi	276cc <main@@Base+0x11470>
   276b8:	mov	r0, r5
   276bc:	mov	r1, r4
   276c0:	mov	r2, r8
   276c4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   276c8:	mov	r2, r0
   276cc:	cmp	r2, r8
   276d0:	beq	27744 <main@@Base+0x114e8>
   276d4:	ldrb	r0, [r2]
   276d8:	cmp	r0, #44	; 0x2c
   276dc:	bne	2774c <main@@Base+0x114f0>
   276e0:	add	r1, r2, #1
   276e4:	sub	r0, r8, r1
   276e8:	cmp	r0, #2
   276ec:	blt	2771c <main@@Base+0x114c0>
   276f0:	ldrb	r0, [r1]
   276f4:	cmp	r0, #32
   276f8:	bls	2770c <main@@Base+0x114b0>
   276fc:	mov	r2, r1
   27700:	cmp	r2, r8
   27704:	bne	27734 <main@@Base+0x114d8>
   27708:	b	27778 <main@@Base+0x1151c>
   2770c:	bne	2771c <main@@Base+0x114c0>
   27710:	ldrb	r0, [r2, #2]!
   27714:	cmp	r0, #32
   27718:	bhi	2772c <main@@Base+0x114d0>
   2771c:	mov	r0, r5
   27720:	mov	r2, r8
   27724:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   27728:	mov	r2, r0
   2772c:	cmp	r2, r8
   27730:	beq	27778 <main@@Base+0x1151c>
   27734:	ldrb	r0, [r2]
   27738:	cmp	r0, #125	; 0x7d
   2773c:	bne	26ef4 <main@@Base+0x10c98>
   27740:	b	27754 <main@@Base+0x114f8>
   27744:	mov	r4, r8
   27748:	b	26e48 <main@@Base+0x10bec>
   2774c:	cmp	r0, #125	; 0x7d
   27750:	bne	27784 <main@@Base+0x11528>
   27754:	add	r1, r2, #1
   27758:	sub	r0, r8, r1
   2775c:	cmp	r0, #2
   27760:	blt	277ac <main@@Base+0x11550>
   27764:	ldrb	r0, [r1]
   27768:	cmp	r0, #32
   2776c:	bls	27798 <main@@Base+0x1153c>
   27770:	mov	r4, r1
   27774:	b	26e48 <main@@Base+0x10bec>
   27778:	mov	r0, r5
   2777c:	mov	r1, r8
   27780:	b	2778c <main@@Base+0x11530>
   27784:	mov	r0, r5
   27788:	mov	r1, r2
   2778c:	mov	r2, r8
   27790:	mov	r3, #10
   27794:	b	26e40 <main@@Base+0x10be4>
   27798:	bne	277ac <main@@Base+0x11550>
   2779c:	ldrb	r0, [r2, #2]!
   277a0:	mov	r4, r2
   277a4:	cmp	r0, #32
   277a8:	bhi	26e48 <main@@Base+0x10bec>
   277ac:	mov	r0, r5
   277b0:	mov	r2, r8
   277b4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   277b8:	b	26e44 <main@@Base+0x10be8>
   277bc:	andeq	r7, r3, r8, lsr #25
   277c0:			; <UNDEFINED> instruction: 0xffffcb90
   277c4:	andeq	r0, r0, r0, lsr r2
   277c8:			; <UNDEFINED> instruction: 0xffffcbfc
   277cc:	cmp	r0, #5
   277d0:	mov	r1, #0
   277d4:	movwcc	r1, #1
   277d8:	mov	r0, r1
   277dc:	bx	lr
   277e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   277e4:	add	fp, sp, #28
   277e8:	sub	sp, sp, #60	; 0x3c
   277ec:	mov	r9, r0
   277f0:	mov	r0, #0
   277f4:	mov	r4, r1
   277f8:	mov	r1, #3
   277fc:	mov	r6, r3
   27800:	mov	r8, r2
   27804:	str	r0, [r3]
   27808:	ldr	r0, [r9]
   2780c:	bl	31348 <flatcc_builder_start_table@@Base>
   27810:	cmp	r0, #0
   27814:	bne	27874 <main@@Base+0x11618>
   27818:	cmp	r4, r8
   2781c:	beq	27850 <main@@Base+0x115f4>
   27820:	ldrb	r0, [r4]
   27824:	cmp	r0, #123	; 0x7b
   27828:	bne	27850 <main@@Base+0x115f4>
   2782c:	add	r1, r4, #1
   27830:	sub	r0, r8, r1
   27834:	cmp	r0, #2
   27838:	blt	278c0 <main@@Base+0x11664>
   2783c:	ldrb	r0, [r1]
   27840:	cmp	r0, #32
   27844:	bls	278b0 <main@@Base+0x11654>
   27848:	mov	r4, r1
   2784c:	b	278d0 <main@@Base+0x11674>
   27850:	mov	r0, r9
   27854:	mov	r1, r4
   27858:	mov	r2, r8
   2785c:	mov	r3, #21
   27860:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   27864:	mov	r4, r0
   27868:	ldr	r0, [r9, #24]
   2786c:	cmp	r0, #0
   27870:	beq	27898 <main@@Base+0x1163c>
   27874:	mov	r0, r9
   27878:	mov	r1, r4
   2787c:	mov	r2, r8
   27880:	mov	r3, #33	; 0x21
   27884:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   27888:	mov	r4, r0
   2788c:	mov	r0, r4
   27890:	sub	sp, fp, #28
   27894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27898:	ldr	r0, [r9]
   2789c:	bl	31d70 <flatcc_builder_end_table@@Base>
   278a0:	cmp	r0, #0
   278a4:	str	r0, [r6]
   278a8:	bne	2788c <main@@Base+0x11630>
   278ac:	b	27874 <main@@Base+0x11618>
   278b0:	bne	278c0 <main@@Base+0x11664>
   278b4:	ldrb	r0, [r4, #2]!
   278b8:	cmp	r0, #32
   278bc:	bhi	278d0 <main@@Base+0x11674>
   278c0:	mov	r0, r9
   278c4:	mov	r2, r8
   278c8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   278cc:	mov	r4, r0
   278d0:	cmp	r4, r8
   278d4:	mov	r2, r8
   278d8:	beq	2791c <main@@Base+0x116c0>
   278dc:	ldrb	r0, [r4]
   278e0:	cmp	r0, #125	; 0x7d
   278e4:	bne	27918 <main@@Base+0x116bc>
   278e8:	add	r1, r4, #1
   278ec:	sub	r0, r8, r1
   278f0:	cmp	r0, #2
   278f4:	blt	2ac84 <main@@Base+0x14a28>
   278f8:	ldrb	r0, [r1]
   278fc:	cmp	r0, #32
   27900:	bhi	2ac48 <main@@Base+0x149ec>
   27904:	bne	2ac84 <main@@Base+0x14a28>
   27908:	ldrb	r0, [r4, #2]!
   2790c:	cmp	r0, #32
   27910:	bhi	27868 <main@@Base+0x1160c>
   27914:	b	2ac84 <main@@Base+0x14a28>
   27918:	mov	r2, r4
   2791c:	add	r0, r9, #12
   27920:	movw	r1, #25186	; 0x6262
   27924:	str	r9, [sp, #16]
   27928:	str	r6, [sp, #24]
   2792c:	str	r0, [sp, #20]
   27930:	movw	r0, #257	; 0x101
   27934:	movt	r1, #25186	; 0x6262
   27938:	movt	r0, #257	; 0x101
   2793c:	add	r0, r1, r0
   27940:	str	r0, [sp, #12]
   27944:	movw	r0, #514	; 0x202
   27948:	movt	r0, #514	; 0x202
   2794c:	add	r0, r1, r0
   27950:	str	r0, [sp, #8]
   27954:	cmp	r2, r8
   27958:	mov	sl, r8
   2795c:	beq	279b0 <main@@Base+0x11754>
   27960:	ldrb	r0, [r2]
   27964:	cmp	r0, #46	; 0x2e
   27968:	beq	27984 <main@@Base+0x11728>
   2796c:	cmp	r0, #34	; 0x22
   27970:	bne	279a0 <main@@Base+0x11744>
   27974:	ldr	r0, [sp, #20]
   27978:	mov	r1, #0
   2797c:	add	sl, r2, #1
   27980:	b	279ac <main@@Base+0x11750>
   27984:	mov	r1, r2
   27988:	mov	r0, r9
   2798c:	mov	r2, r8
   27990:	mov	r3, #5
   27994:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   27998:	mov	sl, r0
   2799c:	b	279b0 <main@@Base+0x11754>
   279a0:	ldr	r0, [sp, #20]
   279a4:	mov	r1, #1
   279a8:	mov	sl, r2
   279ac:	str	r1, [r0]
   279b0:	sub	r0, r8, sl
   279b4:	mov	r1, #8
   279b8:	cmp	r0, #8
   279bc:	movcs	r0, r1
   279c0:	sub	r1, r0, #1
   279c4:	cmp	r1, #7
   279c8:	bhi	27c60 <main@@Base+0x11a04>
   279cc:	add	r6, pc, #36	; 0x24
   279d0:	mov	r0, #0
   279d4:	mov	ip, #0
   279d8:	mov	lr, #0
   279dc:	mov	r2, #0
   279e0:	mov	r3, #0
   279e4:	mov	r7, #0
   279e8:	mov	r5, #0
   279ec:	mov	r4, #0
   279f0:	ldr	r1, [r6, r1, lsl #2]
   279f4:	add	pc, r6, r1
   279f8:	andeq	r0, r0, r4, rrx
   279fc:	andeq	r0, r0, ip, asr r0
   27a00:	andeq	r0, r0, r4, asr r0
   27a04:	andeq	r0, r0, ip, asr #32
   27a08:	andeq	r0, r0, r0, asr #32
   27a0c:	andeq	r0, r0, r4, lsr r0
   27a10:	andeq	r0, r0, r4, lsr #32
   27a14:	andeq	r0, r0, r0, lsr #32
   27a18:	ldrb	ip, [sl, #7]
   27a1c:	ldrb	r1, [sl, #6]
   27a20:	mov	lr, r0
   27a24:	orr	r1, ip, r1, lsl #8
   27a28:	mov	r0, r1
   27a2c:	ldrb	r1, [sl, #5]
   27a30:	mov	r2, lr
   27a34:	orr	r0, r0, r1, lsl #16
   27a38:	ldrb	r1, [sl, #4]
   27a3c:	mov	r3, r2
   27a40:	orr	r0, r0, r1, lsl #24
   27a44:	ldrb	r1, [sl, #3]
   27a48:	orr	r7, r1, r3
   27a4c:	ldrb	r1, [sl, #2]
   27a50:	orr	r5, r7, r1, lsl #8
   27a54:	ldrb	r1, [sl, #1]
   27a58:	orr	r4, r5, r1, lsl #16
   27a5c:	movw	r1, #28526	; 0x6f6e
   27a60:	movw	r2, #29556	; 0x7374
   27a64:	movt	r1, #27251	; 0x6a73
   27a68:	movt	r2, #29797	; 0x7465
   27a6c:	eor	r0, r0, r1
   27a70:	ldrb	r1, [sl]
   27a74:	orr	r1, r4, r1, lsl #24
   27a78:	eor	r1, r1, r2
   27a7c:	orrs	r0, r0, r1
   27a80:	bne	27c60 <main@@Base+0x11a04>
   27a84:	add	r1, sl, #8
   27a88:	mov	r2, #8
   27a8c:	sub	r0, r8, r1
   27a90:	cmp	r0, #8
   27a94:	movcs	r0, r2
   27a98:	sub	r2, r0, #1
   27a9c:	cmp	r2, #7
   27aa0:	bhi	27c6c <main@@Base+0x11a10>
   27aa4:	add	r5, pc, #36	; 0x24
   27aa8:	mov	r9, #0
   27aac:	mov	ip, #0
   27ab0:	mov	lr, #0
   27ab4:	mov	r7, #0
   27ab8:	mov	r3, #0
   27abc:	mov	r6, #0
   27ac0:	mov	r4, #0
   27ac4:	ldr	r0, [r5, r2, lsl #2]
   27ac8:	mov	r2, #0
   27acc:	add	pc, r5, r0
   27ad0:	andeq	r0, r0, r4, rrx
   27ad4:	andeq	r0, r0, ip, asr r0
   27ad8:	andeq	r0, r0, r4, asr r0
   27adc:	andeq	r0, r0, ip, asr #32
   27ae0:	andeq	r0, r0, r0, asr #32
   27ae4:	andeq	r0, r0, r4, lsr r0
   27ae8:	andeq	r0, r0, r4, lsr #32
   27aec:	andeq	r0, r0, r0, lsr #32
   27af0:	ldrb	ip, [sl, #15]
   27af4:	ldrb	r0, [sl, #14]
   27af8:	mov	lr, r9
   27afc:	orr	r0, ip, r0, lsl #8
   27b00:	mov	r9, r0
   27b04:	ldrb	r0, [sl, #13]
   27b08:	mov	r7, lr
   27b0c:	orr	r9, r9, r0, lsl #16
   27b10:	ldrb	r0, [sl, #12]
   27b14:	mov	r3, r7
   27b18:	orr	r9, r9, r0, lsl #24
   27b1c:	ldrb	r0, [sl, #11]
   27b20:	orr	r6, r0, r3
   27b24:	ldrb	r0, [sl, #10]
   27b28:	orr	r4, r6, r0, lsl #8
   27b2c:	ldrb	r0, [sl, #9]
   27b30:	orr	r2, r4, r0, lsl #16
   27b34:	ldrb	r3, [r1]
   27b38:	movw	r0, #28769	; 0x7061
   27b3c:	movt	r0, #27000	; 0x6978
   27b40:	eor	r0, r9, r0
   27b44:	orr	r2, r2, r3, lsl #24
   27b48:	movw	r3, #25958	; 0x6566
   27b4c:	movt	r3, #28786	; 0x7072
   27b50:	eor	r2, r2, r3
   27b54:	orrs	r0, r0, r2
   27b58:	bne	27c6c <main@@Base+0x11a10>
   27b5c:	add	ip, sl, #16
   27b60:	mov	r0, #8
   27b64:	sub	r9, r8, ip
   27b68:	cmp	r9, #8
   27b6c:	movcc	r0, r9
   27b70:	sub	r1, r0, #1
   27b74:	cmp	r1, #7
   27b78:	bhi	27fd4 <main@@Base+0x11d78>
   27b7c:	add	r4, pc, #28
   27b80:	mov	r0, #0
   27b84:	mov	r2, #0
   27b88:	mov	r3, #0
   27b8c:	mov	r6, #0
   27b90:	mov	r5, #0
   27b94:	ldr	r7, [r4, r1, lsl #2]
   27b98:	mov	r1, #0
   27b9c:	add	pc, r4, r7
   27ba0:	andeq	r0, r0, r0, asr r0
   27ba4:	andeq	r0, r0, r8, asr #32
   27ba8:	andeq	r0, r0, r0, asr #32
   27bac:	andeq	r0, r0, r8, lsr r0
   27bb0:	andeq	r0, r0, r8, lsr #32
   27bb4:	andeq	r0, r0, r0, lsr #32
   27bb8:	andeq	r0, r0, r0, lsr #32
   27bbc:	andeq	r0, r0, r0, lsr #32
   27bc0:	ldrb	r1, [sl, #21]
   27bc4:	lsl	r1, r1, #16
   27bc8:	ldrb	r2, [sl, #20]
   27bcc:	orr	r1, r1, r2, lsl #24
   27bd0:	mov	r2, r0
   27bd4:	mov	r0, r1
   27bd8:	ldrb	r1, [sl, #19]
   27bdc:	orr	r3, r1, r2
   27be0:	ldrb	r1, [sl, #18]
   27be4:	orr	r6, r3, r1, lsl #8
   27be8:	ldrb	r1, [sl, #17]
   27bec:	orr	r5, r6, r1, lsl #16
   27bf0:	mov	r6, r0
   27bf4:	movw	r1, #0
   27bf8:	movw	r3, #26990	; 0x696e
   27bfc:	bfc	r6, #0, #16
   27c00:	movt	r1, #26418	; 0x6732
   27c04:	movt	r3, #29299	; 0x7273
   27c08:	eor	r2, r6, r1
   27c0c:	ldrb	r1, [ip]
   27c10:	orr	r1, r5, r1, lsl #24
   27c14:	eor	r5, r1, r3
   27c18:	orrs	r2, r2, r5
   27c1c:	bne	27c78 <main@@Base+0x11a1c>
   27c20:	cmp	r9, #7
   27c24:	blt	27fd4 <main@@Base+0x11d78>
   27c28:	ldr	r2, [sp, #20]
   27c2c:	mov	r1, sl
   27c30:	ldrb	r0, [r1, #22]!
   27c34:	ldr	r2, [r2]
   27c38:	cmp	r2, #0
   27c3c:	beq	27cd4 <main@@Base+0x11a78>
   27c40:	cmp	r0, #33	; 0x21
   27c44:	bcc	27c50 <main@@Base+0x119f4>
   27c48:	cmp	r0, #58	; 0x3a
   27c4c:	bne	27fd4 <main@@Base+0x11d78>
   27c50:	ldr	r0, [sp, #20]
   27c54:	mov	r2, #0
   27c58:	str	r2, [r0]
   27c5c:	b	27ce0 <main@@Base+0x11a84>
   27c60:	mov	r0, r9
   27c64:	mov	r1, sl
   27c68:	b	27fe0 <main@@Base+0x11d84>
   27c6c:	ldr	r9, [sp, #16]
   27c70:	mov	r0, r9
   27c74:	b	27fe0 <main@@Base+0x11d84>
   27c78:	cmp	r9, #6
   27c7c:	blt	27f78 <main@@Base+0x11d1c>
   27c80:	movw	r2, #26990	; 0x696e
   27c84:	and	r0, r0, #-16777216	; 0xff000000
   27c88:	movt	r2, #29299	; 0x7273
   27c8c:	eor	r0, r0, #1728053248	; 0x67000000
   27c90:	eor	r1, r1, r2
   27c94:	orrs	r0, r0, r1
   27c98:	bne	27f78 <main@@Base+0x11d1c>
   27c9c:	ldr	r2, [sp, #20]
   27ca0:	mov	r1, sl
   27ca4:	ldrb	r0, [r1, #21]!
   27ca8:	ldr	r2, [r2]
   27cac:	cmp	r2, #0
   27cb0:	beq	27d04 <main@@Base+0x11aa8>
   27cb4:	cmp	r0, #33	; 0x21
   27cb8:	bcc	27cc4 <main@@Base+0x11a68>
   27cbc:	cmp	r0, #58	; 0x3a
   27cc0:	bne	27f78 <main@@Base+0x11d1c>
   27cc4:	ldr	r0, [sp, #20]
   27cc8:	mov	r2, #0
   27ccc:	str	r2, [r0]
   27cd0:	b	27d10 <main@@Base+0x11ab4>
   27cd4:	cmp	r0, #34	; 0x22
   27cd8:	bne	27fd4 <main@@Base+0x11d78>
   27cdc:	add	r1, sl, #23
   27ce0:	ldr	r5, [sp, #16]
   27ce4:	sub	r0, r8, r1
   27ce8:	cmp	r0, #2
   27cec:	blt	27d44 <main@@Base+0x11ae8>
   27cf0:	ldrb	r0, [r1]
   27cf4:	cmp	r0, #32
   27cf8:	bls	27d30 <main@@Base+0x11ad4>
   27cfc:	mov	r4, r1
   27d00:	b	27d5c <main@@Base+0x11b00>
   27d04:	cmp	r0, #34	; 0x22
   27d08:	bne	27f78 <main@@Base+0x11d1c>
   27d0c:	add	r1, sl, #22
   27d10:	sub	r0, r8, r1
   27d14:	cmp	r0, #2
   27d18:	blt	27dc4 <main@@Base+0x11b68>
   27d1c:	ldrb	r0, [r1]
   27d20:	cmp	r0, #32
   27d24:	bls	27db0 <main@@Base+0x11b54>
   27d28:	mov	r4, r1
   27d2c:	b	27ddc <main@@Base+0x11b80>
   27d30:	bne	27d44 <main@@Base+0x11ae8>
   27d34:	mov	r4, r1
   27d38:	ldrb	r0, [r4, #1]!
   27d3c:	cmp	r0, #32
   27d40:	bhi	27d5c <main@@Base+0x11b00>
   27d44:	mov	r0, r5
   27d48:	mov	r2, r8
   27d4c:	mov	r4, ip
   27d50:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   27d54:	mov	ip, r4
   27d58:	mov	r4, r0
   27d5c:	mov	r6, ip
   27d60:	cmp	r4, r8
   27d64:	beq	27d98 <main@@Base+0x11b3c>
   27d68:	ldrb	r0, [r4]
   27d6c:	cmp	r0, #58	; 0x3a
   27d70:	bne	27d98 <main@@Base+0x11b3c>
   27d74:	add	r1, r4, #1
   27d78:	sub	r0, r8, r1
   27d7c:	cmp	r0, #2
   27d80:	blt	27e40 <main@@Base+0x11be4>
   27d84:	ldrb	r0, [r1]
   27d88:	cmp	r0, #32
   27d8c:	bls	27e30 <main@@Base+0x11bd4>
   27d90:	mov	r4, r1
   27d94:	b	27e50 <main@@Base+0x11bf4>
   27d98:	mov	r0, r5
   27d9c:	mov	r1, r4
   27da0:	mov	r2, r8
   27da4:	mov	r3, #4
   27da8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   27dac:	b	27e4c <main@@Base+0x11bf0>
   27db0:	bne	27dc4 <main@@Base+0x11b68>
   27db4:	mov	r4, r1
   27db8:	ldrb	r0, [r4, #1]!
   27dbc:	cmp	r0, #32
   27dc0:	bhi	27ddc <main@@Base+0x11b80>
   27dc4:	ldr	r0, [sp, #16]
   27dc8:	mov	r2, r8
   27dcc:	mov	r4, ip
   27dd0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   27dd4:	mov	ip, r4
   27dd8:	mov	r4, r0
   27ddc:	mov	r7, ip
   27de0:	cmp	r4, r8
   27de4:	beq	27e18 <main@@Base+0x11bbc>
   27de8:	ldrb	r0, [r4]
   27dec:	cmp	r0, #58	; 0x3a
   27df0:	bne	27e18 <main@@Base+0x11bbc>
   27df4:	add	r1, r4, #1
   27df8:	sub	r0, r8, r1
   27dfc:	cmp	r0, #2
   27e00:	blt	27f08 <main@@Base+0x11cac>
   27e04:	ldrb	r0, [r1]
   27e08:	cmp	r0, #32
   27e0c:	bls	27ef8 <main@@Base+0x11c9c>
   27e10:	mov	r4, r1
   27e14:	b	27f18 <main@@Base+0x11cbc>
   27e18:	ldr	r0, [sp, #16]
   27e1c:	mov	r1, r4
   27e20:	mov	r2, r8
   27e24:	mov	r3, #4
   27e28:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   27e2c:	b	27f14 <main@@Base+0x11cb8>
   27e30:	bne	27e40 <main@@Base+0x11be4>
   27e34:	ldrb	r0, [r4, #2]!
   27e38:	cmp	r0, #32
   27e3c:	bhi	27e50 <main@@Base+0x11bf4>
   27e40:	mov	r0, r5
   27e44:	mov	r2, r8
   27e48:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   27e4c:	mov	r4, r0
   27e50:	mov	ip, r6
   27e54:	cmp	r6, r4
   27e58:	beq	27fd4 <main@@Base+0x11d78>
   27e5c:	ldr	r9, [sp, #16]
   27e60:	mov	r1, #2
   27e64:	ldr	r0, [r9]
   27e68:	bl	31348 <flatcc_builder_start_table@@Base>
   27e6c:	cmp	r0, #0
   27e70:	bne	2ac98 <main@@Base+0x14a3c>
   27e74:	cmp	r4, r8
   27e78:	beq	27eb0 <main@@Base+0x11c54>
   27e7c:	ldrb	r0, [r4]
   27e80:	cmp	r0, #123	; 0x7b
   27e84:	bne	27eb0 <main@@Base+0x11c54>
   27e88:	ldr	r6, [sp, #24]
   27e8c:	add	r1, r4, #1
   27e90:	sub	r0, r8, r1
   27e94:	cmp	r0, #2
   27e98:	blt	281bc <main@@Base+0x11f60>
   27e9c:	ldrb	r0, [r1]
   27ea0:	cmp	r0, #32
   27ea4:	bls	281ac <main@@Base+0x11f50>
   27ea8:	mov	r4, r1
   27eac:	b	281cc <main@@Base+0x11f70>
   27eb0:	mov	r0, r9
   27eb4:	mov	r1, r4
   27eb8:	mov	r2, r8
   27ebc:	mov	r3, #21
   27ec0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   27ec4:	ldr	r6, [sp, #24]
   27ec8:	mov	r4, r0
   27ecc:	ldr	r0, [r9, #24]
   27ed0:	cmp	r0, #0
   27ed4:	bne	2ac98 <main@@Base+0x14a3c>
   27ed8:	ldr	r0, [r9]
   27edc:	bl	31d70 <flatcc_builder_end_table@@Base>
   27ee0:	cmp	r0, #0
   27ee4:	beq	2ac98 <main@@Base+0x14a3c>
   27ee8:	mov	r7, r0
   27eec:	ldr	r0, [r9]
   27ef0:	mov	r1, #1
   27ef4:	b	2a124 <main@@Base+0x13ec8>
   27ef8:	bne	27f08 <main@@Base+0x11cac>
   27efc:	ldrb	r0, [r4, #2]!
   27f00:	cmp	r0, #32
   27f04:	bhi	27f18 <main@@Base+0x11cbc>
   27f08:	ldr	r0, [sp, #16]
   27f0c:	mov	r2, r8
   27f10:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   27f14:	mov	r4, r0
   27f18:	mov	ip, r7
   27f1c:	cmp	r7, r4
   27f20:	beq	27f78 <main@@Base+0x11d1c>
   27f24:	ldr	r9, [sp, #16]
   27f28:	mov	r1, #9
   27f2c:	ldr	r0, [r9]
   27f30:	bl	31348 <flatcc_builder_start_table@@Base>
   27f34:	cmp	r0, #0
   27f38:	bne	2ac98 <main@@Base+0x14a3c>
   27f3c:	cmp	r4, r8
   27f40:	beq	280b8 <main@@Base+0x11e5c>
   27f44:	ldrb	r0, [r4]
   27f48:	cmp	r0, #123	; 0x7b
   27f4c:	bne	280b8 <main@@Base+0x11e5c>
   27f50:	ldr	r6, [sp, #24]
   27f54:	add	r1, r4, #1
   27f58:	sub	r0, r8, r1
   27f5c:	cmp	r0, #2
   27f60:	blt	28a4c <main@@Base+0x127f0>
   27f64:	ldrb	r0, [r1]
   27f68:	cmp	r0, #32
   27f6c:	bls	28a3c <main@@Base+0x127e0>
   27f70:	mov	r4, r1
   27f74:	b	28a5c <main@@Base+0x12800>
   27f78:	movw	r0, #0
   27f7c:	movt	r0, #26418	; 0x6732
   27f80:	add	r0, r0, #65536	; 0x10000
   27f84:	eor	r0, r6, r0
   27f88:	orrs	r0, r0, r5
   27f8c:	bne	27fd4 <main@@Base+0x11d78>
   27f90:	cmp	r9, #7
   27f94:	ldr	r9, [sp, #16]
   27f98:	blt	27fd8 <main@@Base+0x11d7c>
   27f9c:	ldr	r2, [sp, #20]
   27fa0:	mov	r1, sl
   27fa4:	ldrb	r0, [r1, #22]!
   27fa8:	ldr	r2, [r2]
   27fac:	cmp	r2, #0
   27fb0:	beq	28100 <main@@Base+0x11ea4>
   27fb4:	cmp	r0, #33	; 0x21
   27fb8:	bcc	27fc4 <main@@Base+0x11d68>
   27fbc:	cmp	r0, #58	; 0x3a
   27fc0:	bne	27fd8 <main@@Base+0x11d7c>
   27fc4:	ldr	r0, [sp, #20]
   27fc8:	mov	r2, #0
   27fcc:	str	r2, [r0]
   27fd0:	b	2810c <main@@Base+0x11eb0>
   27fd4:	ldr	r9, [sp, #16]
   27fd8:	mov	r0, r9
   27fdc:	mov	r1, ip
   27fe0:	mov	r2, r8
   27fe4:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   27fe8:	ldr	r6, [sp, #24]
   27fec:	mov	r4, r0
   27ff0:	sub	r0, r8, r4
   27ff4:	cmp	r0, #2
   27ff8:	blt	2802c <main@@Base+0x11dd0>
   27ffc:	ldrb	r0, [r4]
   28000:	cmp	r0, #32
   28004:	bls	28018 <main@@Base+0x11dbc>
   28008:	mov	r2, r4
   2800c:	cmp	r2, r8
   28010:	bne	28048 <main@@Base+0x11dec>
   28014:	b	2ac1c <main@@Base+0x149c0>
   28018:	bne	2802c <main@@Base+0x11dd0>
   2801c:	mov	r2, r4
   28020:	ldrb	r0, [r2, #1]!
   28024:	cmp	r0, #32
   28028:	bhi	28040 <main@@Base+0x11de4>
   2802c:	mov	r0, r9
   28030:	mov	r1, r4
   28034:	mov	r2, r8
   28038:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2803c:	mov	r2, r0
   28040:	cmp	r2, r8
   28044:	beq	2ac1c <main@@Base+0x149c0>
   28048:	ldrb	r0, [r2]
   2804c:	cmp	r0, #44	; 0x2c
   28050:	bne	2ac24 <main@@Base+0x149c8>
   28054:	add	r1, r2, #1
   28058:	sub	r0, r8, r1
   2805c:	cmp	r0, #2
   28060:	blt	28090 <main@@Base+0x11e34>
   28064:	ldrb	r0, [r1]
   28068:	cmp	r0, #32
   2806c:	bls	28080 <main@@Base+0x11e24>
   28070:	mov	r2, r1
   28074:	cmp	r2, r8
   28078:	bne	280a8 <main@@Base+0x11e4c>
   2807c:	b	2ac50 <main@@Base+0x149f4>
   28080:	bne	28090 <main@@Base+0x11e34>
   28084:	ldrb	r0, [r2, #2]!
   28088:	cmp	r0, #32
   2808c:	bhi	280a0 <main@@Base+0x11e44>
   28090:	mov	r0, r9
   28094:	mov	r2, r8
   28098:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2809c:	mov	r2, r0
   280a0:	cmp	r2, r8
   280a4:	beq	2ac50 <main@@Base+0x149f4>
   280a8:	ldrb	r0, [r2]
   280ac:	cmp	r0, #125	; 0x7d
   280b0:	bne	27954 <main@@Base+0x116f8>
   280b4:	b	2ac2c <main@@Base+0x149d0>
   280b8:	mov	r0, r9
   280bc:	mov	r1, r4
   280c0:	mov	r2, r8
   280c4:	mov	r3, #21
   280c8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   280cc:	ldr	r6, [sp, #24]
   280d0:	mov	r4, r0
   280d4:	ldr	r0, [r9, #24]
   280d8:	cmp	r0, #0
   280dc:	bne	2ac98 <main@@Base+0x14a3c>
   280e0:	ldr	r0, [r9]
   280e4:	bl	31d70 <flatcc_builder_end_table@@Base>
   280e8:	cmp	r0, #0
   280ec:	beq	2ac98 <main@@Base+0x14a3c>
   280f0:	mov	r7, r0
   280f4:	ldr	r0, [r9]
   280f8:	mov	r1, #0
   280fc:	b	2a124 <main@@Base+0x13ec8>
   28100:	cmp	r0, #34	; 0x22
   28104:	bne	27fd8 <main@@Base+0x11d7c>
   28108:	add	r1, sl, #23
   2810c:	sub	r0, r8, r1
   28110:	cmp	r0, #2
   28114:	blt	28140 <main@@Base+0x11ee4>
   28118:	ldrb	r0, [r1]
   2811c:	cmp	r0, #32
   28120:	bls	2812c <main@@Base+0x11ed0>
   28124:	mov	r4, r1
   28128:	b	28158 <main@@Base+0x11efc>
   2812c:	bne	28140 <main@@Base+0x11ee4>
   28130:	mov	r4, r1
   28134:	ldrb	r0, [r4, #1]!
   28138:	cmp	r0, #32
   2813c:	bhi	28158 <main@@Base+0x11efc>
   28140:	mov	r0, r9
   28144:	mov	r2, r8
   28148:	mov	r4, ip
   2814c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   28150:	mov	ip, r4
   28154:	mov	r4, r0
   28158:	mov	r5, ip
   2815c:	cmp	r4, r8
   28160:	beq	28194 <main@@Base+0x11f38>
   28164:	ldrb	r0, [r4]
   28168:	cmp	r0, #58	; 0x3a
   2816c:	bne	28194 <main@@Base+0x11f38>
   28170:	add	r1, r4, #1
   28174:	sub	r0, r8, r1
   28178:	cmp	r0, #2
   2817c:	blt	2a074 <main@@Base+0x13e18>
   28180:	ldrb	r0, [r1]
   28184:	cmp	r0, #32
   28188:	bls	2a064 <main@@Base+0x13e08>
   2818c:	mov	r4, r1
   28190:	b	2a084 <main@@Base+0x13e28>
   28194:	mov	r0, r9
   28198:	mov	r1, r4
   2819c:	mov	r2, r8
   281a0:	mov	r3, #4
   281a4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   281a8:	b	2a080 <main@@Base+0x13e24>
   281ac:	bne	281bc <main@@Base+0x11f60>
   281b0:	ldrb	r0, [r4, #2]!
   281b4:	cmp	r0, #32
   281b8:	bhi	281cc <main@@Base+0x11f70>
   281bc:	mov	r0, r9
   281c0:	mov	r2, r8
   281c4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   281c8:	mov	r4, r0
   281cc:	cmp	r4, r8
   281d0:	mov	r2, r8
   281d4:	beq	28218 <main@@Base+0x11fbc>
   281d8:	ldrb	r0, [r4]
   281dc:	cmp	r0, #125	; 0x7d
   281e0:	bne	28214 <main@@Base+0x11fb8>
   281e4:	add	r1, r4, #1
   281e8:	sub	r0, r8, r1
   281ec:	cmp	r0, #2
   281f0:	blt	2ab84 <main@@Base+0x14928>
   281f4:	ldrb	r0, [r1]
   281f8:	cmp	r0, #32
   281fc:	bhi	2a164 <main@@Base+0x13f08>
   28200:	bne	2ab84 <main@@Base+0x14928>
   28204:	ldrb	r0, [r4, #2]!
   28208:	cmp	r0, #32
   2820c:	bls	2ab84 <main@@Base+0x14928>
   28210:	b	27ecc <main@@Base+0x11c70>
   28214:	mov	r2, r4
   28218:	cmp	r2, r8
   2821c:	mov	r1, r8
   28220:	beq	28278 <main@@Base+0x1201c>
   28224:	ldrb	r0, [r2]
   28228:	cmp	r0, #46	; 0x2e
   2822c:	beq	2824c <main@@Base+0x11ff0>
   28230:	cmp	r0, #34	; 0x22
   28234:	bne	28268 <main@@Base+0x1200c>
   28238:	ldr	r0, [sp, #20]
   2823c:	mov	r1, #0
   28240:	str	r1, [r0]
   28244:	add	r1, r2, #1
   28248:	b	28278 <main@@Base+0x1201c>
   2824c:	mov	r1, r2
   28250:	mov	r0, r9
   28254:	mov	r2, r8
   28258:	mov	r3, #5
   2825c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   28260:	mov	r1, r0
   28264:	b	28278 <main@@Base+0x1201c>
   28268:	ldr	r0, [sp, #20]
   2826c:	mov	r1, #1
   28270:	str	r1, [r0]
   28274:	mov	r1, r2
   28278:	sub	r0, r8, r1
   2827c:	mov	r2, #8
   28280:	cmp	r0, #8
   28284:	movcs	r0, r2
   28288:	sub	r2, r0, #1
   2828c:	cmp	r2, #7
   28290:	bhi	2847c <main@@Base+0x12220>
   28294:	add	r5, pc, #36	; 0x24
   28298:	mov	r9, #0
   2829c:	mov	ip, #0
   282a0:	mov	lr, #0
   282a4:	mov	sl, #0
   282a8:	mov	r3, #0
   282ac:	mov	r7, #0
   282b0:	mov	r4, #0
   282b4:	ldr	r0, [r5, r2, lsl #2]
   282b8:	mov	r2, #0
   282bc:	add	pc, r5, r0
   282c0:	andeq	r0, r0, r4, rrx
   282c4:	andeq	r0, r0, ip, asr r0
   282c8:	andeq	r0, r0, r4, asr r0
   282cc:	andeq	r0, r0, ip, asr #32
   282d0:	andeq	r0, r0, r0, asr #32
   282d4:	andeq	r0, r0, r4, lsr r0
   282d8:	andeq	r0, r0, r4, lsr #32
   282dc:	andeq	r0, r0, r0, lsr #32
   282e0:	ldrb	ip, [r1, #7]
   282e4:	ldrb	r0, [r1, #6]
   282e8:	mov	lr, r9
   282ec:	orr	r0, ip, r0, lsl #8
   282f0:	mov	r9, r0
   282f4:	ldrb	r0, [r1, #5]
   282f8:	mov	sl, lr
   282fc:	orr	r9, r9, r0, lsl #16
   28300:	ldrb	r0, [r1, #4]
   28304:	mov	r3, sl
   28308:	orr	r9, r9, r0, lsl #24
   2830c:	ldrb	r0, [r1, #3]
   28310:	orr	r7, r0, r3
   28314:	ldrb	r0, [r1, #2]
   28318:	orr	r4, r7, r0, lsl #8
   2831c:	ldrb	r0, [r1, #1]
   28320:	orr	r2, r4, r0, lsl #16
   28324:	ldrb	r3, [r1]
   28328:	movw	r0, #25186	; 0x6262
   2832c:	movt	r0, #24418	; 0x5f62
   28330:	eor	r0, r9, r0
   28334:	ldr	r9, [sp, #16]
   28338:	orr	r2, r2, r3, lsl #24
   2833c:	movw	r3, #24929	; 0x6161
   28340:	movt	r3, #24929	; 0x6161
   28344:	eor	r2, r2, r3
   28348:	orrs	r0, r0, r2
   2834c:	bne	2847c <main@@Base+0x12220>
   28350:	add	r4, r1, #8
   28354:	mov	r0, #8
   28358:	sub	lr, r8, r4
   2835c:	cmp	lr, #8
   28360:	movcc	r0, lr
   28364:	sub	r0, r0, #1
   28368:	cmp	r0, #7
   2836c:	bhi	28888 <main@@Base+0x1262c>
   28370:	str	r4, [sp, #4]
   28374:	add	r4, pc, #36	; 0x24
   28378:	mov	r2, #0
   2837c:	mov	ip, #0
   28380:	mov	sl, #0
   28384:	mov	r6, #0
   28388:	mov	r7, #0
   2838c:	mov	r5, #0
   28390:	mov	r3, #0
   28394:	ldr	r9, [r4, r0, lsl #2]
   28398:	mov	r0, #0
   2839c:	add	pc, r4, r9
   283a0:	andeq	r0, r0, r4, rrx
   283a4:	andeq	r0, r0, ip, asr r0
   283a8:	andeq	r0, r0, r4, asr r0
   283ac:	andeq	r0, r0, ip, asr #32
   283b0:	andeq	r0, r0, r0, asr #32
   283b4:	andeq	r0, r0, r4, lsr r0
   283b8:	andeq	r0, r0, r4, lsr #32
   283bc:	andeq	r0, r0, r0, lsr #32
   283c0:	ldrb	ip, [r1, #15]
   283c4:	ldrb	r0, [r1, #14]
   283c8:	mov	sl, r2
   283cc:	orr	r0, ip, r0, lsl #8
   283d0:	mov	r2, r0
   283d4:	ldrb	r0, [r1, #13]
   283d8:	mov	r6, sl
   283dc:	orr	r2, r2, r0, lsl #16
   283e0:	ldrb	r0, [r1, #12]
   283e4:	mov	r7, r6
   283e8:	orr	r2, r2, r0, lsl #24
   283ec:	ldrb	r0, [r1, #11]
   283f0:	orr	r5, r0, r7
   283f4:	ldrb	r0, [r1, #10]
   283f8:	orr	r3, r5, r0, lsl #8
   283fc:	ldrb	r0, [r1, #9]
   28400:	orr	r0, r3, r0, lsl #16
   28404:	ldr	r4, [sp, #4]
   28408:	movw	r7, #29440	; 0x7300
   2840c:	bic	r3, r2, #255	; 0xff
   28410:	movt	r7, #25968	; 0x6570
   28414:	eor	r3, r3, r7
   28418:	ldrb	r7, [r4]
   2841c:	orr	r0, r0, r7, lsl #24
   28420:	movw	r7, #29556	; 0x7374
   28424:	movt	r7, #25183	; 0x625f
   28428:	eor	r0, r0, r7
   2842c:	orrs	r3, r3, r0
   28430:	bne	28484 <main@@Base+0x12228>
   28434:	ldr	r9, [sp, #16]
   28438:	ldr	r6, [sp, #24]
   2843c:	cmp	lr, #8
   28440:	blt	28888 <main@@Base+0x1262c>
   28444:	ldr	r3, [sp, #20]
   28448:	mov	r2, r1
   2844c:	ldrb	r0, [r2, #15]!
   28450:	ldr	r3, [r3]
   28454:	cmp	r3, #0
   28458:	beq	284e0 <main@@Base+0x12284>
   2845c:	cmp	r0, #33	; 0x21
   28460:	bcc	2846c <main@@Base+0x12210>
   28464:	cmp	r0, #58	; 0x3a
   28468:	bne	28888 <main@@Base+0x1262c>
   2846c:	ldr	r0, [sp, #20]
   28470:	mov	r1, #0
   28474:	str	r1, [r0]
   28478:	b	284ec <main@@Base+0x12290>
   2847c:	mov	r0, r9
   28480:	b	28890 <main@@Base+0x12634>
   28484:	movw	r3, #29791	; 0x745f
   28488:	ldr	r9, [sp, #16]
   2848c:	ldr	r6, [sp, #24]
   28490:	movt	r3, #24946	; 0x6172
   28494:	eor	r2, r2, r3
   28498:	orrs	r0, r2, r0
   2849c:	bne	28888 <main@@Base+0x1262c>
   284a0:	cmp	lr, #9
   284a4:	blt	28888 <main@@Base+0x1262c>
   284a8:	ldr	r3, [sp, #20]
   284ac:	mov	r2, r1
   284b0:	ldrb	r0, [r2, #16]!
   284b4:	ldr	r3, [r3]
   284b8:	cmp	r3, #0
   284bc:	beq	28514 <main@@Base+0x122b8>
   284c0:	cmp	r0, #33	; 0x21
   284c4:	bcc	284d0 <main@@Base+0x12274>
   284c8:	cmp	r0, #58	; 0x3a
   284cc:	bne	28888 <main@@Base+0x1262c>
   284d0:	ldr	r0, [sp, #20]
   284d4:	mov	r1, #0
   284d8:	str	r1, [r0]
   284dc:	b	28520 <main@@Base+0x122c4>
   284e0:	cmp	r0, #34	; 0x22
   284e4:	bne	28888 <main@@Base+0x1262c>
   284e8:	add	r2, r1, #16
   284ec:	sub	r0, r8, r2
   284f0:	cmp	r0, #2
   284f4:	blt	2855c <main@@Base+0x12300>
   284f8:	ldrb	r0, [r2]
   284fc:	cmp	r0, #32
   28500:	bls	28548 <main@@Base+0x122ec>
   28504:	mov	r7, r2
   28508:	cmp	r7, r8
   2850c:	bne	28578 <main@@Base+0x1231c>
   28510:	b	285b0 <main@@Base+0x12354>
   28514:	cmp	r0, #34	; 0x22
   28518:	bne	28888 <main@@Base+0x1262c>
   2851c:	add	r2, r1, #17
   28520:	sub	r0, r8, r2
   28524:	cmp	r0, #2
   28528:	blt	285dc <main@@Base+0x12380>
   2852c:	ldrb	r0, [r2]
   28530:	cmp	r0, #32
   28534:	bls	285c8 <main@@Base+0x1236c>
   28538:	mov	r7, r2
   2853c:	cmp	r7, r8
   28540:	bne	285f8 <main@@Base+0x1239c>
   28544:	b	2863c <main@@Base+0x123e0>
   28548:	bne	2855c <main@@Base+0x12300>
   2854c:	mov	r7, r2
   28550:	ldrb	r0, [r7, #1]!
   28554:	cmp	r0, #32
   28558:	bhi	28570 <main@@Base+0x12314>
   2855c:	mov	r1, r2
   28560:	mov	r0, r9
   28564:	mov	r2, r8
   28568:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2856c:	mov	r7, r0
   28570:	cmp	r7, r8
   28574:	beq	285b0 <main@@Base+0x12354>
   28578:	ldrb	r0, [r7]
   2857c:	cmp	r0, #58	; 0x3a
   28580:	bne	285b0 <main@@Base+0x12354>
   28584:	add	r1, r7, #1
   28588:	sub	r0, r8, r1
   2858c:	cmp	r0, #2
   28590:	blt	28664 <main@@Base+0x12408>
   28594:	ldrb	r0, [r1]
   28598:	cmp	r0, #32
   2859c:	bls	28654 <main@@Base+0x123f8>
   285a0:	mov	r7, r1
   285a4:	cmp	r4, r7
   285a8:	bne	2867c <main@@Base+0x12420>
   285ac:	b	28888 <main@@Base+0x1262c>
   285b0:	mov	r0, r9
   285b4:	mov	r1, r7
   285b8:	mov	r2, r8
   285bc:	mov	r3, #4
   285c0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   285c4:	b	28670 <main@@Base+0x12414>
   285c8:	bne	285dc <main@@Base+0x12380>
   285cc:	mov	r7, r2
   285d0:	ldrb	r0, [r7, #1]!
   285d4:	cmp	r0, #32
   285d8:	bhi	285f0 <main@@Base+0x12394>
   285dc:	mov	r1, r2
   285e0:	mov	r0, r9
   285e4:	mov	r2, r8
   285e8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   285ec:	mov	r7, r0
   285f0:	cmp	r7, r8
   285f4:	beq	2863c <main@@Base+0x123e0>
   285f8:	ldrb	r0, [r7]
   285fc:	cmp	r0, #58	; 0x3a
   28600:	bne	2863c <main@@Base+0x123e0>
   28604:	add	r1, r7, #1
   28608:	sub	r0, r8, r1
   2860c:	cmp	r0, #2
   28610:	blt	287fc <main@@Base+0x125a0>
   28614:	ldrb	r0, [r1]
   28618:	cmp	r0, #32
   2861c:	bls	287e0 <main@@Base+0x12584>
   28620:	ldr	r9, [sp, #16]
   28624:	ldr	r6, [sp, #24]
   28628:	ldr	r4, [sp, #4]
   2862c:	mov	r7, r1
   28630:	cmp	r4, r7
   28634:	bne	28814 <main@@Base+0x125b8>
   28638:	b	28888 <main@@Base+0x1262c>
   2863c:	mov	r0, r9
   28640:	mov	r1, r7
   28644:	mov	r2, r8
   28648:	mov	r3, #4
   2864c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   28650:	b	28808 <main@@Base+0x125ac>
   28654:	bne	28664 <main@@Base+0x12408>
   28658:	ldrb	r0, [r7, #2]!
   2865c:	cmp	r0, #32
   28660:	bhi	28674 <main@@Base+0x12418>
   28664:	mov	r0, r9
   28668:	mov	r2, r8
   2866c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   28670:	mov	r7, r0
   28674:	cmp	r4, r7
   28678:	beq	28888 <main@@Base+0x1262c>
   2867c:	mov	r5, #0
   28680:	cmp	r7, r8
   28684:	str	r5, [fp, #-36]	; 0xffffffdc
   28688:	str	r5, [fp, #-40]	; 0xffffffd8
   2868c:	str	r5, [sp, #36]	; 0x24
   28690:	str	r5, [sp, #32]
   28694:	str	r5, [sp, #44]	; 0x2c
   28698:	beq	286f8 <main@@Base+0x1249c>
   2869c:	sub	r0, fp, #40	; 0x28
   286a0:	mov	r1, r7
   286a4:	mov	r2, r8
   286a8:	add	r3, sp, #44	; 0x2c
   286ac:	str	r0, [sp]
   286b0:	mov	r0, r9
   286b4:	bl	382dc <flatcc_json_parser_integer@@Base>
   286b8:	cmp	r0, r7
   286bc:	beq	2870c <main@@Base+0x124b0>
   286c0:	mov	r4, r0
   286c4:	ldr	r0, [sp, #44]	; 0x2c
   286c8:	ldr	r5, [fp, #-40]	; 0xffffffd8
   286cc:	ldr	sl, [fp, #-36]	; 0xffffffdc
   286d0:	cmp	r0, #0
   286d4:	beq	28724 <main@@Base+0x124c8>
   286d8:	subs	r0, r5, #1
   286dc:	sbcs	r0, sl, #-2147483648	; 0x80000000
   286e0:	bcc	28758 <main@@Base+0x124fc>
   286e4:	mov	r0, r9
   286e8:	mov	r1, r4
   286ec:	mov	r2, r8
   286f0:	mov	r3, #8
   286f4:	b	2873c <main@@Base+0x124e0>
   286f8:	mov	sl, #0
   286fc:	mov	r4, r8
   28700:	cmp	r7, r4
   28704:	bne	287a8 <main@@Base+0x1254c>
   28708:	b	28770 <main@@Base+0x12514>
   2870c:	mov	r5, #0
   28710:	mov	sl, #0
   28714:	mov	r4, r7
   28718:	cmp	r7, r4
   2871c:	bne	287a8 <main@@Base+0x1254c>
   28720:	b	28770 <main@@Base+0x12514>
   28724:	cmn	sl, #1
   28728:	bgt	28760 <main@@Base+0x12504>
   2872c:	mov	r0, r9
   28730:	mov	r1, r4
   28734:	mov	r2, r8
   28738:	mov	r3, #7
   2873c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   28740:	mov	r4, r0
   28744:	mov	r5, #0
   28748:	mov	sl, #0
   2874c:	cmp	r7, r4
   28750:	bne	287a8 <main@@Base+0x1254c>
   28754:	b	28770 <main@@Base+0x12514>
   28758:	rsbs	r5, r5, #0
   2875c:	rsc	sl, sl, #0
   28760:	str	r5, [sp, #32]
   28764:	str	sl, [sp, #36]	; 0x24
   28768:	cmp	r7, r4
   2876c:	bne	287a8 <main@@Base+0x1254c>
   28770:	add	r0, sp, #32
   28774:	mov	r1, r7
   28778:	mov	r2, r8
   2877c:	str	r0, [sp]
   28780:	mov	r0, r9
   28784:	ldr	r3, [pc, #4084]	; 29780 <main@@Base+0x13524>
   28788:	add	r3, pc, r3
   2878c:	bl	25b80 <main@@Base+0xf924>
   28790:	mov	r4, r0
   28794:	cmp	r0, r7
   28798:	cmpne	r4, r8
   2879c:	beq	2ac94 <main@@Base+0x14a38>
   287a0:	ldr	r5, [sp, #32]
   287a4:	ldr	sl, [sp, #36]	; 0x24
   287a8:	orrs	r0, r5, sl
   287ac:	bne	287bc <main@@Base+0x12560>
   287b0:	ldrb	r0, [r9, #8]
   287b4:	tst	r0, #2
   287b8:	beq	2889c <main@@Base+0x12640>
   287bc:	ldr	r0, [r9]
   287c0:	mov	r1, #0
   287c4:	mov	r2, #8
   287c8:	mov	r3, #8
   287cc:	bl	327e4 <flatcc_builder_table_add@@Base>
   287d0:	cmp	r0, #0
   287d4:	beq	2ac94 <main@@Base+0x14a38>
   287d8:	stm	r0, {r5, sl}
   287dc:	b	2889c <main@@Base+0x12640>
   287e0:	ldr	r9, [sp, #16]
   287e4:	ldr	r6, [sp, #24]
   287e8:	ldr	r4, [sp, #4]
   287ec:	bne	287fc <main@@Base+0x125a0>
   287f0:	ldrb	r0, [r7, #2]!
   287f4:	cmp	r0, #32
   287f8:	bhi	2880c <main@@Base+0x125b0>
   287fc:	mov	r0, r9
   28800:	mov	r2, r8
   28804:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   28808:	mov	r7, r0
   2880c:	cmp	r4, r7
   28810:	beq	28888 <main@@Base+0x1262c>
   28814:	mov	r5, #0
   28818:	cmp	r7, r8
   2881c:	str	r5, [fp, #-36]	; 0xffffffdc
   28820:	str	r5, [fp, #-40]	; 0xffffffd8
   28824:	str	r5, [sp, #44]	; 0x2c
   28828:	str	r5, [sp, #32]
   2882c:	beq	28964 <main@@Base+0x12708>
   28830:	sub	r0, fp, #40	; 0x28
   28834:	mov	r1, r7
   28838:	mov	r2, r8
   2883c:	add	r3, sp, #32
   28840:	str	r0, [sp]
   28844:	mov	r0, r9
   28848:	bl	382dc <flatcc_json_parser_integer@@Base>
   2884c:	cmp	r0, r7
   28850:	beq	28974 <main@@Base+0x12718>
   28854:	mov	r4, r0
   28858:	ldr	r0, [sp, #32]
   2885c:	cmp	r0, #0
   28860:	beq	28984 <main@@Base+0x12728>
   28864:	mov	r0, r9
   28868:	mov	r1, r4
   2886c:	mov	r2, r8
   28870:	mov	r3, #8
   28874:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   28878:	mov	r4, r0
   2887c:	cmp	r7, r4
   28880:	bne	28a04 <main@@Base+0x127a8>
   28884:	b	289c8 <main@@Base+0x1276c>
   28888:	mov	r0, r9
   2888c:	mov	r1, r4
   28890:	mov	r2, r8
   28894:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   28898:	mov	r4, r0
   2889c:	sub	r0, r8, r4
   288a0:	cmp	r0, #2
   288a4:	blt	288d8 <main@@Base+0x1267c>
   288a8:	ldrb	r0, [r4]
   288ac:	cmp	r0, #32
   288b0:	bls	288c4 <main@@Base+0x12668>
   288b4:	mov	r2, r4
   288b8:	cmp	r2, r8
   288bc:	bne	288f4 <main@@Base+0x12698>
   288c0:	b	2a138 <main@@Base+0x13edc>
   288c4:	bne	288d8 <main@@Base+0x1267c>
   288c8:	mov	r2, r4
   288cc:	ldrb	r0, [r2, #1]!
   288d0:	cmp	r0, #32
   288d4:	bhi	288ec <main@@Base+0x12690>
   288d8:	mov	r0, r9
   288dc:	mov	r1, r4
   288e0:	mov	r2, r8
   288e4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   288e8:	mov	r2, r0
   288ec:	cmp	r2, r8
   288f0:	beq	2a138 <main@@Base+0x13edc>
   288f4:	ldrb	r0, [r2]
   288f8:	cmp	r0, #44	; 0x2c
   288fc:	bne	2a140 <main@@Base+0x13ee4>
   28900:	add	r1, r2, #1
   28904:	sub	r0, r8, r1
   28908:	cmp	r0, #2
   2890c:	blt	2893c <main@@Base+0x126e0>
   28910:	ldrb	r0, [r1]
   28914:	cmp	r0, #32
   28918:	bls	2892c <main@@Base+0x126d0>
   2891c:	mov	r2, r1
   28920:	cmp	r2, r8
   28924:	bne	28954 <main@@Base+0x126f8>
   28928:	b	2a16c <main@@Base+0x13f10>
   2892c:	bne	2893c <main@@Base+0x126e0>
   28930:	ldrb	r0, [r2, #2]!
   28934:	cmp	r0, #32
   28938:	bhi	2894c <main@@Base+0x126f0>
   2893c:	mov	r0, r9
   28940:	mov	r2, r8
   28944:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   28948:	mov	r2, r0
   2894c:	cmp	r2, r8
   28950:	beq	2a16c <main@@Base+0x13f10>
   28954:	ldrb	r0, [r2]
   28958:	cmp	r0, #125	; 0x7d
   2895c:	bne	28218 <main@@Base+0x11fbc>
   28960:	b	2a148 <main@@Base+0x13eec>
   28964:	mov	r4, r8
   28968:	cmp	r7, r4
   2896c:	bne	28a04 <main@@Base+0x127a8>
   28970:	b	289c8 <main@@Base+0x1276c>
   28974:	mov	r4, r7
   28978:	cmp	r7, r4
   2897c:	bne	28a04 <main@@Base+0x127a8>
   28980:	b	289c8 <main@@Base+0x1276c>
   28984:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28988:	cmp	r0, #0
   2898c:	beq	289b0 <main@@Base+0x12754>
   28990:	ldr	r9, [sp, #16]
   28994:	mov	r1, r4
   28998:	mov	r2, r8
   2899c:	mov	r3, #7
   289a0:	mov	r0, r9
   289a4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   289a8:	mov	r4, r0
   289ac:	b	289bc <main@@Base+0x12760>
   289b0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   289b4:	ldr	r9, [sp, #16]
   289b8:	str	r5, [sp, #44]	; 0x2c
   289bc:	ldr	r6, [sp, #24]
   289c0:	cmp	r7, r4
   289c4:	bne	28a04 <main@@Base+0x127a8>
   289c8:	add	r0, sp, #44	; 0x2c
   289cc:	mov	r1, r7
   289d0:	mov	r2, r8
   289d4:	str	r0, [sp]
   289d8:	mov	r0, r9
   289dc:	ldr	r3, [pc, #4084]	; 299d8 <main@@Base+0x1377c>
   289e0:	add	r3, pc, r3
   289e4:	bl	25d9c <main@@Base+0xfb40>
   289e8:	mov	r4, r0
   289ec:	cmp	r0, r7
   289f0:	cmpne	r4, r8
   289f4:	beq	2ac94 <main@@Base+0x14a38>
   289f8:	ldr	r5, [sp, #44]	; 0x2c
   289fc:	ldr	r9, [sp, #16]
   28a00:	ldr	r6, [sp, #24]
   28a04:	cmp	r5, #0
   28a08:	bne	28a18 <main@@Base+0x127bc>
   28a0c:	ldrb	r0, [r9, #8]
   28a10:	tst	r0, #2
   28a14:	beq	2889c <main@@Base+0x12640>
   28a18:	ldr	r0, [r9]
   28a1c:	mov	r1, #1
   28a20:	mov	r2, #4
   28a24:	mov	r3, #4
   28a28:	bl	327e4 <flatcc_builder_table_add@@Base>
   28a2c:	cmp	r0, #0
   28a30:	beq	2ac94 <main@@Base+0x14a38>
   28a34:	str	r5, [r0]
   28a38:	b	2889c <main@@Base+0x12640>
   28a3c:	bne	28a4c <main@@Base+0x127f0>
   28a40:	ldrb	r0, [r4, #2]!
   28a44:	cmp	r0, #32
   28a48:	bhi	28a5c <main@@Base+0x12800>
   28a4c:	mov	r0, r9
   28a50:	mov	r2, r8
   28a54:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   28a58:	mov	r4, r0
   28a5c:	cmp	r4, r8
   28a60:	mov	r2, r8
   28a64:	beq	28aa8 <main@@Base+0x1284c>
   28a68:	ldrb	r0, [r4]
   28a6c:	cmp	r0, #125	; 0x7d
   28a70:	bne	28aa4 <main@@Base+0x12848>
   28a74:	add	r1, r4, #1
   28a78:	sub	r0, r8, r1
   28a7c:	cmp	r0, #2
   28a80:	blt	2abc0 <main@@Base+0x14964>
   28a84:	ldrb	r0, [r1]
   28a88:	cmp	r0, #32
   28a8c:	bhi	2a1a4 <main@@Base+0x13f48>
   28a90:	bne	2abc0 <main@@Base+0x14964>
   28a94:	ldrb	r0, [r4, #2]!
   28a98:	cmp	r0, #32
   28a9c:	bhi	280d4 <main@@Base+0x11e78>
   28aa0:	b	2abc0 <main@@Base+0x14964>
   28aa4:	mov	r2, r4
   28aa8:	cmp	r2, r8
   28aac:	mov	sl, r8
   28ab0:	beq	28b04 <main@@Base+0x128a8>
   28ab4:	ldrb	r0, [r2]
   28ab8:	cmp	r0, #46	; 0x2e
   28abc:	beq	28ad8 <main@@Base+0x1287c>
   28ac0:	cmp	r0, #34	; 0x22
   28ac4:	bne	28af4 <main@@Base+0x12898>
   28ac8:	ldr	r0, [sp, #20]
   28acc:	mov	r1, #0
   28ad0:	add	sl, r2, #1
   28ad4:	b	28b00 <main@@Base+0x128a4>
   28ad8:	mov	r1, r2
   28adc:	mov	r0, r9
   28ae0:	mov	r2, r8
   28ae4:	mov	r3, #5
   28ae8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   28aec:	mov	sl, r0
   28af0:	b	28b04 <main@@Base+0x128a8>
   28af4:	ldr	r0, [sp, #20]
   28af8:	mov	r1, #1
   28afc:	mov	sl, r2
   28b00:	str	r1, [r0]
   28b04:	sub	r9, r8, sl
   28b08:	mov	r0, #8
   28b0c:	cmp	r9, #8
   28b10:	movcc	r0, r9
   28b14:	sub	r1, r0, #1
   28b18:	cmp	r1, #7
   28b1c:	bhi	29180 <main@@Base+0x12f24>
   28b20:	add	r6, pc, #36	; 0x24
   28b24:	mov	r0, #0
   28b28:	mov	ip, #0
   28b2c:	mov	lr, #0
   28b30:	mov	r2, #0
   28b34:	mov	r3, #0
   28b38:	mov	r7, #0
   28b3c:	mov	r5, #0
   28b40:	mov	r4, #0
   28b44:	ldr	r1, [r6, r1, lsl #2]
   28b48:	add	pc, r6, r1
   28b4c:	andeq	r0, r0, r4, rrx
   28b50:	andeq	r0, r0, ip, asr r0
   28b54:	andeq	r0, r0, r4, asr r0
   28b58:	andeq	r0, r0, ip, asr #32
   28b5c:	andeq	r0, r0, r0, asr #32
   28b60:	andeq	r0, r0, r4, lsr r0
   28b64:	andeq	r0, r0, r4, lsr #32
   28b68:	andeq	r0, r0, r0, lsr #32
   28b6c:	ldrb	ip, [sl, #7]
   28b70:	ldrb	r1, [sl, #6]
   28b74:	mov	lr, r0
   28b78:	orr	r1, ip, r1, lsl #8
   28b7c:	mov	r0, r1
   28b80:	ldrb	r1, [sl, #5]
   28b84:	mov	r2, lr
   28b88:	orr	r0, r0, r1, lsl #16
   28b8c:	ldrb	r1, [sl, #4]
   28b90:	mov	r3, r2
   28b94:	orr	r0, r0, r1, lsl #24
   28b98:	ldrb	r1, [sl, #3]
   28b9c:	orr	r7, r1, r3
   28ba0:	ldrb	r1, [sl, #2]
   28ba4:	orr	r5, r7, r1, lsl #8
   28ba8:	ldrb	r1, [sl, #1]
   28bac:	orr	r4, r5, r1, lsl #16
   28bb0:	ldrb	r1, [sl]
   28bb4:	orr	r7, r4, r1, lsl #24
   28bb8:	movw	r1, #25442	; 0x6362
   28bbc:	movt	r1, #25443	; 0x6363
   28bc0:	cmp	r7, r1
   28bc4:	bhi	28c54 <main@@Base+0x129f8>
   28bc8:	movw	r1, #13108	; 0x3334
   28bcc:	movt	r1, #12594	; 0x3132
   28bd0:	eor	r5, r0, r1
   28bd4:	movw	r1, #24929	; 0x6161
   28bd8:	movt	r1, #24929	; 0x6161
   28bdc:	eor	r0, r7, r1
   28be0:	orrs	r0, r5, r0
   28be4:	bne	28cbc <main@@Base+0x12a60>
   28be8:	add	r7, sl, #8
   28bec:	mov	r1, #8
   28bf0:	sub	r0, r8, r7
   28bf4:	cmp	r0, #8
   28bf8:	movcc	r1, r0
   28bfc:	sub	r1, r1, #1
   28c00:	cmp	r1, #7
   28c04:	bhi	29ea8 <main@@Base+0x13c4c>
   28c08:	ldrb	r1, [r7]
   28c0c:	cmp	r1, #53	; 0x35
   28c10:	bne	29ea8 <main@@Base+0x13c4c>
   28c14:	cmp	r0, #2
   28c18:	blt	29ea8 <main@@Base+0x13c4c>
   28c1c:	ldr	r2, [sp, #20]
   28c20:	mov	r1, sl
   28c24:	ldrb	r0, [r1, #9]!
   28c28:	ldr	r2, [r2]
   28c2c:	cmp	r2, #0
   28c30:	beq	28ef0 <main@@Base+0x12c94>
   28c34:	cmp	r0, #33	; 0x21
   28c38:	bcc	28c44 <main@@Base+0x129e8>
   28c3c:	cmp	r0, #58	; 0x3a
   28c40:	bne	29ea8 <main@@Base+0x13c4c>
   28c44:	ldr	r0, [sp, #20]
   28c48:	mov	r2, #0
   28c4c:	str	r2, [r0]
   28c50:	b	28efc <main@@Base+0x12ca0>
   28c54:	movw	r1, #13108	; 0x3334
   28c58:	movt	r1, #12594	; 0x3132
   28c5c:	eor	r5, r0, r1
   28c60:	ldr	r0, [sp, #12]
   28c64:	eor	r0, r7, r0
   28c68:	orrs	r0, r5, r0
   28c6c:	bne	28d0c <main@@Base+0x12ab0>
   28c70:	cmp	r9, #9
   28c74:	ldr	r9, [sp, #16]
   28c78:	mov	r7, sl
   28c7c:	blt	29364 <main@@Base+0x13108>
   28c80:	ldr	r2, [sp, #20]
   28c84:	mov	r1, sl
   28c88:	ldrb	r0, [r1, #8]!
   28c8c:	ldr	r2, [r2]
   28c90:	cmp	r2, #0
   28c94:	beq	28d64 <main@@Base+0x12b08>
   28c98:	cmp	r0, #33	; 0x21
   28c9c:	bcc	28cac <main@@Base+0x12a50>
   28ca0:	cmp	r0, #58	; 0x3a
   28ca4:	mov	r7, sl
   28ca8:	bne	29364 <main@@Base+0x13108>
   28cac:	ldr	r0, [sp, #20]
   28cb0:	mov	r2, #0
   28cb4:	str	r2, [r0]
   28cb8:	b	28d74 <main@@Base+0x12b18>
   28cbc:	teq	r7, r1
   28cc0:	bne	28f88 <main@@Base+0x12d2c>
   28cc4:	cmp	r9, #5
   28cc8:	mov	r1, sl
   28ccc:	blt	29628 <main@@Base+0x133cc>
   28cd0:	ldr	r1, [sp, #20]
   28cd4:	mov	r2, sl
   28cd8:	ldrb	r0, [r2, #4]!
   28cdc:	ldr	r1, [r1]
   28ce0:	cmp	r1, #0
   28ce4:	beq	28d9c <main@@Base+0x12b40>
   28ce8:	cmp	r0, #33	; 0x21
   28cec:	bcc	28cfc <main@@Base+0x12aa0>
   28cf0:	cmp	r0, #58	; 0x3a
   28cf4:	mov	r1, sl
   28cf8:	bne	29628 <main@@Base+0x133cc>
   28cfc:	ldr	r0, [sp, #20]
   28d00:	mov	r1, #0
   28d04:	str	r1, [r0]
   28d08:	b	28dac <main@@Base+0x12b50>
   28d0c:	movw	r0, #25443	; 0x6363
   28d10:	movt	r0, #25443	; 0x6363
   28d14:	teq	r7, r0
   28d18:	bne	29124 <main@@Base+0x12ec8>
   28d1c:	cmp	r9, #5
   28d20:	mov	r1, sl
   28d24:	blt	29684 <main@@Base+0x13428>
   28d28:	ldr	r1, [sp, #20]
   28d2c:	mov	r2, sl
   28d30:	ldrb	r0, [r2, #4]!
   28d34:	ldr	r1, [r1]
   28d38:	cmp	r1, #0
   28d3c:	beq	28dd4 <main@@Base+0x12b78>
   28d40:	cmp	r0, #33	; 0x21
   28d44:	bcc	28d54 <main@@Base+0x12af8>
   28d48:	cmp	r0, #58	; 0x3a
   28d4c:	mov	r1, sl
   28d50:	bne	29684 <main@@Base+0x13428>
   28d54:	ldr	r0, [sp, #20]
   28d58:	mov	r1, #0
   28d5c:	str	r1, [r0]
   28d60:	b	28de4 <main@@Base+0x12b88>
   28d64:	cmp	r0, #34	; 0x22
   28d68:	mov	r7, sl
   28d6c:	bne	29364 <main@@Base+0x13108>
   28d70:	add	r1, sl, #9
   28d74:	sub	r0, r8, r1
   28d78:	cmp	r0, #2
   28d7c:	blt	28e20 <main@@Base+0x12bc4>
   28d80:	ldrb	r0, [r1]
   28d84:	cmp	r0, #32
   28d88:	bls	28e0c <main@@Base+0x12bb0>
   28d8c:	mov	r7, r1
   28d90:	cmp	r7, r8
   28d94:	bne	28e38 <main@@Base+0x12bdc>
   28d98:	b	28ed8 <main@@Base+0x12c7c>
   28d9c:	cmp	r0, #34	; 0x22
   28da0:	mov	r1, sl
   28da4:	bne	29628 <main@@Base+0x133cc>
   28da8:	add	r2, sl, #5
   28dac:	sub	r0, r8, r2
   28db0:	cmp	r0, #2
   28db4:	blt	28f38 <main@@Base+0x12cdc>
   28db8:	ldrb	r0, [r2]
   28dbc:	cmp	r0, #32
   28dc0:	bls	28f24 <main@@Base+0x12cc8>
   28dc4:	mov	r1, r2
   28dc8:	cmp	r1, r8
   28dcc:	bne	28f54 <main@@Base+0x12cf8>
   28dd0:	b	2903c <main@@Base+0x12de0>
   28dd4:	cmp	r0, #34	; 0x22
   28dd8:	mov	r1, sl
   28ddc:	bne	29684 <main@@Base+0x13428>
   28de0:	add	r2, sl, #5
   28de4:	sub	r0, r8, r2
   28de8:	cmp	r0, #2
   28dec:	blt	290d4 <main@@Base+0x12e78>
   28df0:	ldrb	r0, [r2]
   28df4:	cmp	r0, #32
   28df8:	bls	290c0 <main@@Base+0x12e64>
   28dfc:	mov	r1, r2
   28e00:	cmp	r1, r8
   28e04:	bne	290f0 <main@@Base+0x12e94>
   28e08:	b	29190 <main@@Base+0x12f34>
   28e0c:	bne	28e20 <main@@Base+0x12bc4>
   28e10:	mov	r7, r1
   28e14:	ldrb	r0, [r7, #1]!
   28e18:	cmp	r0, #32
   28e1c:	bhi	28e30 <main@@Base+0x12bd4>
   28e20:	mov	r0, r9
   28e24:	mov	r2, r8
   28e28:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   28e2c:	mov	r7, r0
   28e30:	cmp	r7, r8
   28e34:	beq	28ed8 <main@@Base+0x12c7c>
   28e38:	ldrb	r0, [r7]
   28e3c:	cmp	r0, #58	; 0x3a
   28e40:	bne	28ed8 <main@@Base+0x12c7c>
   28e44:	add	r1, r7, #1
   28e48:	sub	r0, r8, r1
   28e4c:	cmp	r0, #2
   28e50:	blt	29354 <main@@Base+0x130f8>
   28e54:	ldrb	r0, [r1]
   28e58:	cmp	r0, #32
   28e5c:	bls	29344 <main@@Base+0x130e8>
   28e60:	mov	r7, r1
   28e64:	cmp	sl, r7
   28e68:	bne	2936c <main@@Base+0x13110>
   28e6c:	add	r7, sl, #8
   28e70:	mov	r1, #8
   28e74:	sub	r0, r8, r7
   28e78:	cmp	r0, #8
   28e7c:	movcc	r1, r0
   28e80:	sub	r1, r1, #1
   28e84:	cmp	r1, #7
   28e88:	bhi	29eac <main@@Base+0x13c50>
   28e8c:	ldrb	r1, [r7]
   28e90:	cmp	r1, #53	; 0x35
   28e94:	bne	29eac <main@@Base+0x13c50>
   28e98:	cmp	r0, #2
   28e9c:	blt	29ea8 <main@@Base+0x13c4c>
   28ea0:	ldr	r2, [sp, #20]
   28ea4:	mov	r1, sl
   28ea8:	ldrb	r0, [r1, #9]!
   28eac:	ldr	r2, [r2]
   28eb0:	cmp	r2, #0
   28eb4:	beq	294d4 <main@@Base+0x13278>
   28eb8:	cmp	r0, #33	; 0x21
   28ebc:	bcc	28ec8 <main@@Base+0x12c6c>
   28ec0:	cmp	r0, #58	; 0x3a
   28ec4:	bne	29ea8 <main@@Base+0x13c4c>
   28ec8:	ldr	r0, [sp, #20]
   28ecc:	mov	r2, #0
   28ed0:	str	r2, [r0]
   28ed4:	b	294e0 <main@@Base+0x13284>
   28ed8:	mov	r0, r9
   28edc:	mov	r1, r7
   28ee0:	mov	r2, r8
   28ee4:	mov	r3, #4
   28ee8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   28eec:	b	29360 <main@@Base+0x13104>
   28ef0:	cmp	r0, #34	; 0x22
   28ef4:	bne	29ea8 <main@@Base+0x13c4c>
   28ef8:	add	r1, sl, #10
   28efc:	sub	r0, r8, r1
   28f00:	cmp	r0, #2
   28f04:	blt	2951c <main@@Base+0x132c0>
   28f08:	ldrb	r0, [r1]
   28f0c:	cmp	r0, #32
   28f10:	bls	29508 <main@@Base+0x132ac>
   28f14:	mov	r9, r1
   28f18:	cmp	r9, r8
   28f1c:	bne	29534 <main@@Base+0x132d8>
   28f20:	b	2956c <main@@Base+0x13310>
   28f24:	bne	28f38 <main@@Base+0x12cdc>
   28f28:	mov	r1, r2
   28f2c:	ldrb	r0, [r1, #1]!
   28f30:	cmp	r0, #32
   28f34:	bhi	28f4c <main@@Base+0x12cf0>
   28f38:	ldr	r0, [sp, #16]
   28f3c:	mov	r1, r2
   28f40:	mov	r2, r8
   28f44:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   28f48:	mov	r1, r0
   28f4c:	cmp	r1, r8
   28f50:	beq	2903c <main@@Base+0x12de0>
   28f54:	ldrb	r0, [r1]
   28f58:	cmp	r0, #58	; 0x3a
   28f5c:	bne	2903c <main@@Base+0x12de0>
   28f60:	add	r2, r1, #1
   28f64:	sub	r0, r8, r2
   28f68:	cmp	r0, #2
   28f6c:	blt	29614 <main@@Base+0x133b8>
   28f70:	ldrb	r0, [r2]
   28f74:	cmp	r0, #32
   28f78:	bls	29604 <main@@Base+0x133a8>
   28f7c:	mov	r1, r2
   28f80:	cmp	sl, r1
   28f84:	bne	29630 <main@@Base+0x133d4>
   28f88:	movw	r1, #25186	; 0x6262
   28f8c:	movt	r1, #25186	; 0x6262
   28f90:	eor	r0, r7, r1
   28f94:	orrs	r0, r5, r0
   28f98:	bne	28fe8 <main@@Base+0x12d8c>
   28f9c:	cmp	r9, #9
   28fa0:	ldr	r9, [sp, #16]
   28fa4:	mov	r7, sl
   28fa8:	blt	296e0 <main@@Base+0x13484>
   28fac:	ldr	r2, [sp, #20]
   28fb0:	mov	r1, sl
   28fb4:	ldrb	r0, [r1, #8]!
   28fb8:	ldr	r2, [r2]
   28fbc:	cmp	r2, #0
   28fc0:	beq	29050 <main@@Base+0x12df4>
   28fc4:	cmp	r0, #33	; 0x21
   28fc8:	bcc	28fd8 <main@@Base+0x12d7c>
   28fcc:	cmp	r0, #58	; 0x3a
   28fd0:	mov	r7, sl
   28fd4:	bne	296e0 <main@@Base+0x13484>
   28fd8:	ldr	r0, [sp, #20]
   28fdc:	mov	r2, #0
   28fe0:	str	r2, [r0]
   28fe4:	b	29060 <main@@Base+0x12e04>
   28fe8:	teq	r7, r1
   28fec:	bne	29180 <main@@Base+0x12f24>
   28ff0:	cmp	r9, #5
   28ff4:	ldr	r9, [sp, #16]
   28ff8:	mov	r1, sl
   28ffc:	blt	29bfc <main@@Base+0x139a0>
   29000:	ldr	r1, [sp, #20]
   29004:	mov	r2, sl
   29008:	ldrb	r0, [r2, #4]!
   2900c:	ldr	r1, [r1]
   29010:	cmp	r1, #0
   29014:	beq	29088 <main@@Base+0x12e2c>
   29018:	cmp	r0, #33	; 0x21
   2901c:	bcc	2902c <main@@Base+0x12dd0>
   29020:	cmp	r0, #58	; 0x3a
   29024:	mov	r1, sl
   29028:	bne	29bfc <main@@Base+0x139a0>
   2902c:	ldr	r0, [sp, #20]
   29030:	mov	r1, #0
   29034:	str	r1, [r0]
   29038:	b	29098 <main@@Base+0x12e3c>
   2903c:	ldr	r0, [sp, #16]
   29040:	mov	r2, r8
   29044:	mov	r3, #4
   29048:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2904c:	b	29624 <main@@Base+0x133c8>
   29050:	cmp	r0, #34	; 0x22
   29054:	mov	r7, sl
   29058:	bne	296e0 <main@@Base+0x13484>
   2905c:	add	r1, sl, #9
   29060:	sub	r0, r8, r1
   29064:	cmp	r0, #2
   29068:	blt	291f0 <main@@Base+0x12f94>
   2906c:	ldrb	r0, [r1]
   29070:	cmp	r0, #32
   29074:	bls	291dc <main@@Base+0x12f80>
   29078:	mov	r7, r1
   2907c:	cmp	r7, r8
   29080:	bne	29208 <main@@Base+0x12fac>
   29084:	b	29244 <main@@Base+0x12fe8>
   29088:	cmp	r0, #34	; 0x22
   2908c:	mov	r1, sl
   29090:	bne	29bfc <main@@Base+0x139a0>
   29094:	add	r2, sl, #5
   29098:	sub	r0, r8, r2
   2909c:	cmp	r0, #2
   290a0:	blt	29598 <main@@Base+0x1333c>
   290a4:	ldrb	r0, [r2]
   290a8:	cmp	r0, #32
   290ac:	bls	29584 <main@@Base+0x13328>
   290b0:	mov	r1, r2
   290b4:	cmp	r1, r8
   290b8:	bne	295b4 <main@@Base+0x13358>
   290bc:	b	295f0 <main@@Base+0x13394>
   290c0:	bne	290d4 <main@@Base+0x12e78>
   290c4:	mov	r1, r2
   290c8:	ldrb	r0, [r1, #1]!
   290cc:	cmp	r0, #32
   290d0:	bhi	290e8 <main@@Base+0x12e8c>
   290d4:	ldr	r0, [sp, #16]
   290d8:	mov	r1, r2
   290dc:	mov	r2, r8
   290e0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   290e4:	mov	r1, r0
   290e8:	cmp	r1, r8
   290ec:	beq	29190 <main@@Base+0x12f34>
   290f0:	ldrb	r0, [r1]
   290f4:	cmp	r0, #58	; 0x3a
   290f8:	bne	29190 <main@@Base+0x12f34>
   290fc:	add	r2, r1, #1
   29100:	sub	r0, r8, r2
   29104:	cmp	r0, #2
   29108:	blt	29670 <main@@Base+0x13414>
   2910c:	ldrb	r0, [r2]
   29110:	cmp	r0, #32
   29114:	bls	29660 <main@@Base+0x13404>
   29118:	mov	r1, r2
   2911c:	cmp	sl, r1
   29120:	bne	2968c <main@@Base+0x13430>
   29124:	ldr	r0, [sp, #8]
   29128:	eor	r0, r7, r0
   2912c:	orrs	r0, r5, r0
   29130:	bne	29180 <main@@Base+0x12f24>
   29134:	cmp	r9, #9
   29138:	ldr	r9, [sp, #16]
   2913c:	mov	r7, sl
   29140:	blt	29864 <main@@Base+0x13608>
   29144:	ldr	r2, [sp, #20]
   29148:	mov	r1, sl
   2914c:	ldrb	r0, [r1, #8]!
   29150:	ldr	r2, [r2]
   29154:	cmp	r2, #0
   29158:	beq	291a4 <main@@Base+0x12f48>
   2915c:	cmp	r0, #33	; 0x21
   29160:	bcc	29170 <main@@Base+0x12f14>
   29164:	cmp	r0, #58	; 0x3a
   29168:	mov	r7, sl
   2916c:	bne	29864 <main@@Base+0x13608>
   29170:	ldr	r0, [sp, #20]
   29174:	mov	r2, #0
   29178:	str	r2, [r0]
   2917c:	b	291b4 <main@@Base+0x12f58>
   29180:	ldr	r9, [sp, #16]
   29184:	mov	r0, r9
   29188:	mov	r1, sl
   2918c:	b	29eb4 <main@@Base+0x13c58>
   29190:	ldr	r0, [sp, #16]
   29194:	mov	r2, r8
   29198:	mov	r3, #4
   2919c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   291a0:	b	29680 <main@@Base+0x13424>
   291a4:	cmp	r0, #34	; 0x22
   291a8:	mov	r7, sl
   291ac:	bne	29864 <main@@Base+0x13608>
   291b0:	add	r1, sl, #9
   291b4:	sub	r0, r8, r1
   291b8:	cmp	r0, #2
   291bc:	blt	29270 <main@@Base+0x13014>
   291c0:	ldrb	r0, [r1]
   291c4:	cmp	r0, #32
   291c8:	bls	2925c <main@@Base+0x13000>
   291cc:	mov	r7, r1
   291d0:	cmp	r7, r8
   291d4:	bne	29288 <main@@Base+0x1302c>
   291d8:	b	2932c <main@@Base+0x130d0>
   291dc:	bne	291f0 <main@@Base+0x12f94>
   291e0:	mov	r7, r1
   291e4:	ldrb	r0, [r7, #1]!
   291e8:	cmp	r0, #32
   291ec:	bhi	29200 <main@@Base+0x12fa4>
   291f0:	mov	r0, r9
   291f4:	mov	r2, r8
   291f8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   291fc:	mov	r7, r0
   29200:	cmp	r7, r8
   29204:	beq	29244 <main@@Base+0x12fe8>
   29208:	ldrb	r0, [r7]
   2920c:	cmp	r0, #58	; 0x3a
   29210:	bne	29244 <main@@Base+0x12fe8>
   29214:	add	r1, r7, #1
   29218:	sub	r0, r8, r1
   2921c:	cmp	r0, #2
   29220:	blt	296d0 <main@@Base+0x13474>
   29224:	ldrb	r0, [r1]
   29228:	cmp	r0, #32
   2922c:	bls	296bc <main@@Base+0x13460>
   29230:	ldr	r9, [sp, #16]
   29234:	mov	r7, r1
   29238:	cmp	sl, r7
   2923c:	bne	296e8 <main@@Base+0x1348c>
   29240:	b	29184 <main@@Base+0x12f28>
   29244:	mov	r0, r9
   29248:	mov	r1, r7
   2924c:	mov	r2, r8
   29250:	mov	r3, #4
   29254:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   29258:	b	296dc <main@@Base+0x13480>
   2925c:	bne	29270 <main@@Base+0x13014>
   29260:	mov	r7, r1
   29264:	ldrb	r0, [r7, #1]!
   29268:	cmp	r0, #32
   2926c:	bhi	29280 <main@@Base+0x13024>
   29270:	mov	r0, r9
   29274:	mov	r2, r8
   29278:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2927c:	mov	r7, r0
   29280:	cmp	r7, r8
   29284:	beq	2932c <main@@Base+0x130d0>
   29288:	ldrb	r0, [r7]
   2928c:	cmp	r0, #58	; 0x3a
   29290:	bne	2932c <main@@Base+0x130d0>
   29294:	add	r1, r7, #1
   29298:	sub	r0, r8, r1
   2929c:	cmp	r0, #2
   292a0:	blt	29854 <main@@Base+0x135f8>
   292a4:	ldrb	r0, [r1]
   292a8:	cmp	r0, #32
   292ac:	bls	29840 <main@@Base+0x135e4>
   292b0:	ldr	r9, [sp, #16]
   292b4:	mov	r7, r1
   292b8:	cmp	sl, r7
   292bc:	bne	2986c <main@@Base+0x13610>
   292c0:	add	r7, sl, #8
   292c4:	mov	r1, #8
   292c8:	sub	r0, r8, r7
   292cc:	cmp	r0, #8
   292d0:	movcc	r1, r0
   292d4:	sub	r1, r1, #1
   292d8:	cmp	r1, #7
   292dc:	bhi	29eac <main@@Base+0x13c50>
   292e0:	ldrb	r1, [r7]
   292e4:	cmp	r1, #53	; 0x35
   292e8:	bne	29eac <main@@Base+0x13c50>
   292ec:	cmp	r0, #2
   292f0:	blt	29ea8 <main@@Base+0x13c4c>
   292f4:	ldr	r2, [sp, #20]
   292f8:	mov	r1, sl
   292fc:	ldrb	r0, [r1, #9]!
   29300:	ldr	r2, [r2]
   29304:	cmp	r2, #0
   29308:	beq	299dc <main@@Base+0x13780>
   2930c:	cmp	r0, #33	; 0x21
   29310:	bcc	2931c <main@@Base+0x130c0>
   29314:	cmp	r0, #58	; 0x3a
   29318:	bne	29ea8 <main@@Base+0x13c4c>
   2931c:	ldr	r0, [sp, #20]
   29320:	mov	r2, #0
   29324:	str	r2, [r0]
   29328:	b	299e8 <main@@Base+0x1378c>
   2932c:	mov	r0, r9
   29330:	mov	r1, r7
   29334:	mov	r2, r8
   29338:	mov	r3, #4
   2933c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   29340:	b	29860 <main@@Base+0x13604>
   29344:	bne	29354 <main@@Base+0x130f8>
   29348:	ldrb	r0, [r7, #2]!
   2934c:	cmp	r0, #32
   29350:	bhi	29364 <main@@Base+0x13108>
   29354:	mov	r0, r9
   29358:	mov	r2, r8
   2935c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   29360:	mov	r7, r0
   29364:	cmp	sl, r7
   29368:	beq	28e6c <main@@Base+0x12c10>
   2936c:	mov	r5, #0
   29370:	cmp	r7, r8
   29374:	str	r5, [fp, #-36]	; 0xffffffdc
   29378:	str	r5, [fp, #-40]	; 0xffffffd8
   2937c:	str	r5, [sp, #36]	; 0x24
   29380:	str	r5, [sp, #32]
   29384:	str	r5, [sp, #44]	; 0x2c
   29388:	beq	293ec <main@@Base+0x13190>
   2938c:	sub	r0, fp, #40	; 0x28
   29390:	mov	r1, r7
   29394:	mov	r2, r8
   29398:	add	r3, sp, #44	; 0x2c
   2939c:	str	r0, [sp]
   293a0:	mov	r0, r9
   293a4:	bl	382dc <flatcc_json_parser_integer@@Base>
   293a8:	ldr	r6, [sp, #24]
   293ac:	cmp	r0, r7
   293b0:	beq	29404 <main@@Base+0x131a8>
   293b4:	mov	r4, r0
   293b8:	ldr	r0, [sp, #44]	; 0x2c
   293bc:	ldr	r5, [fp, #-40]	; 0xffffffd8
   293c0:	ldr	sl, [fp, #-36]	; 0xffffffdc
   293c4:	cmp	r0, #0
   293c8:	beq	2941c <main@@Base+0x131c0>
   293cc:	subs	r0, r5, #1
   293d0:	sbcs	r0, sl, #-2147483648	; 0x80000000
   293d4:	bcc	29450 <main@@Base+0x131f4>
   293d8:	mov	r0, r9
   293dc:	mov	r1, r4
   293e0:	mov	r2, r8
   293e4:	mov	r3, #8
   293e8:	b	29434 <main@@Base+0x131d8>
   293ec:	ldr	r6, [sp, #24]
   293f0:	mov	sl, #0
   293f4:	mov	r4, r8
   293f8:	cmp	r7, r4
   293fc:	bne	294a0 <main@@Base+0x13244>
   29400:	b	29468 <main@@Base+0x1320c>
   29404:	mov	r5, #0
   29408:	mov	sl, #0
   2940c:	mov	r4, r7
   29410:	cmp	r7, r4
   29414:	bne	294a0 <main@@Base+0x13244>
   29418:	b	29468 <main@@Base+0x1320c>
   2941c:	cmn	sl, #1
   29420:	bgt	29458 <main@@Base+0x131fc>
   29424:	mov	r0, r9
   29428:	mov	r1, r4
   2942c:	mov	r2, r8
   29430:	mov	r3, #7
   29434:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   29438:	mov	r4, r0
   2943c:	mov	r5, #0
   29440:	mov	sl, #0
   29444:	cmp	r7, r4
   29448:	bne	294a0 <main@@Base+0x13244>
   2944c:	b	29468 <main@@Base+0x1320c>
   29450:	rsbs	r5, r5, #0
   29454:	rsc	sl, sl, #0
   29458:	str	r5, [sp, #32]
   2945c:	str	sl, [sp, #36]	; 0x24
   29460:	cmp	r7, r4
   29464:	bne	294a0 <main@@Base+0x13244>
   29468:	add	r0, sp, #32
   2946c:	mov	r1, r7
   29470:	mov	r2, r8
   29474:	str	r0, [sp]
   29478:	mov	r0, r9
   2947c:	ldr	r3, [pc, #4092]	; 2a480 <main@@Base+0x14224>
   29480:	add	r3, pc, r3
   29484:	bl	25b80 <main@@Base+0xf924>
   29488:	mov	r4, r0
   2948c:	cmp	r0, r7
   29490:	cmpne	r4, r8
   29494:	beq	2ac98 <main@@Base+0x14a3c>
   29498:	ldr	r5, [sp, #32]
   2949c:	ldr	sl, [sp, #36]	; 0x24
   294a0:	orrs	r0, r5, sl
   294a4:	bne	294b4 <main@@Base+0x13258>
   294a8:	ldrb	r0, [r9, #8]
   294ac:	tst	r0, #2
   294b0:	beq	29ec4 <main@@Base+0x13c68>
   294b4:	ldr	r0, [r9]
   294b8:	mov	r1, #5
   294bc:	mov	r2, #8
   294c0:	mov	r3, #8
   294c4:	bl	327e4 <flatcc_builder_table_add@@Base>
   294c8:	cmp	r0, #0
   294cc:	bne	299d0 <main@@Base+0x13774>
   294d0:	b	2ac98 <main@@Base+0x14a3c>
   294d4:	cmp	r0, #34	; 0x22
   294d8:	bne	29ea8 <main@@Base+0x13c4c>
   294dc:	add	r1, sl, #10
   294e0:	sub	r0, r8, r1
   294e4:	cmp	r0, #2
   294e8:	blt	29a24 <main@@Base+0x137c8>
   294ec:	ldrb	r0, [r1]
   294f0:	cmp	r0, #32
   294f4:	bls	29a10 <main@@Base+0x137b4>
   294f8:	mov	r9, r1
   294fc:	cmp	r9, r8
   29500:	bne	29a3c <main@@Base+0x137e0>
   29504:	b	29a74 <main@@Base+0x13818>
   29508:	bne	2951c <main@@Base+0x132c0>
   2950c:	mov	r9, r1
   29510:	ldrb	r0, [r9, #1]!
   29514:	cmp	r0, #32
   29518:	bhi	2952c <main@@Base+0x132d0>
   2951c:	ldr	r0, [sp, #16]
   29520:	mov	r2, r8
   29524:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   29528:	mov	r9, r0
   2952c:	cmp	r9, r8
   29530:	beq	2956c <main@@Base+0x13310>
   29534:	ldrb	r0, [r9]
   29538:	cmp	r0, #58	; 0x3a
   2953c:	bne	2956c <main@@Base+0x13310>
   29540:	add	r1, r9, #1
   29544:	sub	r0, r8, r1
   29548:	cmp	r0, #2
   2954c:	blt	29a9c <main@@Base+0x13840>
   29550:	ldrb	r0, [r1]
   29554:	cmp	r0, #32
   29558:	bls	29a8c <main@@Base+0x13830>
   2955c:	mov	r9, r1
   29560:	cmp	r7, r9
   29564:	bne	29ab4 <main@@Base+0x13858>
   29568:	b	29ea8 <main@@Base+0x13c4c>
   2956c:	ldr	r0, [sp, #16]
   29570:	mov	r1, r9
   29574:	mov	r2, r8
   29578:	mov	r3, #4
   2957c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   29580:	b	29aa8 <main@@Base+0x1384c>
   29584:	bne	29598 <main@@Base+0x1333c>
   29588:	mov	r1, r2
   2958c:	ldrb	r0, [r1, #1]!
   29590:	cmp	r0, #32
   29594:	bhi	295ac <main@@Base+0x13350>
   29598:	mov	r1, r2
   2959c:	mov	r0, r9
   295a0:	mov	r2, r8
   295a4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   295a8:	mov	r1, r0
   295ac:	cmp	r1, r8
   295b0:	beq	295f0 <main@@Base+0x13394>
   295b4:	ldrb	r0, [r1]
   295b8:	cmp	r0, #58	; 0x3a
   295bc:	bne	295f0 <main@@Base+0x13394>
   295c0:	add	r2, r1, #1
   295c4:	sub	r0, r8, r2
   295c8:	cmp	r0, #2
   295cc:	blt	29be8 <main@@Base+0x1398c>
   295d0:	ldrb	r0, [r2]
   295d4:	cmp	r0, #32
   295d8:	bls	29bd4 <main@@Base+0x13978>
   295dc:	ldr	r9, [sp, #16]
   295e0:	mov	r1, r2
   295e4:	cmp	sl, r1
   295e8:	bne	29c04 <main@@Base+0x139a8>
   295ec:	b	29184 <main@@Base+0x12f28>
   295f0:	mov	r0, r9
   295f4:	mov	r2, r8
   295f8:	mov	r3, #4
   295fc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   29600:	b	29bf8 <main@@Base+0x1399c>
   29604:	bne	29614 <main@@Base+0x133b8>
   29608:	ldrb	r0, [r1, #2]!
   2960c:	cmp	r0, #32
   29610:	bhi	29628 <main@@Base+0x133cc>
   29614:	ldr	r0, [sp, #16]
   29618:	mov	r1, r2
   2961c:	mov	r2, r8
   29620:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   29624:	mov	r1, r0
   29628:	cmp	sl, r1
   2962c:	beq	28f88 <main@@Base+0x12d2c>
   29630:	ldr	r9, [sp, #16]
   29634:	mov	r2, r8
   29638:	add	r3, sp, #28
   2963c:	mov	r0, r9
   29640:	bl	38888 <flatcc_json_parser_build_string@@Base>
   29644:	mov	r4, r0
   29648:	ldr	r0, [sp, #28]
   2964c:	cmp	r0, #0
   29650:	beq	2ac98 <main@@Base+0x14a3c>
   29654:	ldr	r0, [r9]
   29658:	mov	r1, #0
   2965c:	b	29c2c <main@@Base+0x139d0>
   29660:	bne	29670 <main@@Base+0x13414>
   29664:	ldrb	r0, [r1, #2]!
   29668:	cmp	r0, #32
   2966c:	bhi	29684 <main@@Base+0x13428>
   29670:	ldr	r0, [sp, #16]
   29674:	mov	r1, r2
   29678:	mov	r2, r8
   2967c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   29680:	mov	r1, r0
   29684:	cmp	sl, r1
   29688:	beq	29124 <main@@Base+0x12ec8>
   2968c:	ldr	r9, [sp, #16]
   29690:	mov	r2, r8
   29694:	add	r3, sp, #28
   29698:	mov	r0, r9
   2969c:	bl	38888 <flatcc_json_parser_build_string@@Base>
   296a0:	mov	r4, r0
   296a4:	ldr	r0, [sp, #28]
   296a8:	cmp	r0, #0
   296ac:	beq	2ac98 <main@@Base+0x14a3c>
   296b0:	ldr	r0, [r9]
   296b4:	mov	r1, #4
   296b8:	b	29c2c <main@@Base+0x139d0>
   296bc:	ldr	r9, [sp, #16]
   296c0:	bne	296d0 <main@@Base+0x13474>
   296c4:	ldrb	r0, [r7, #2]!
   296c8:	cmp	r0, #32
   296cc:	bhi	296e0 <main@@Base+0x13484>
   296d0:	mov	r0, r9
   296d4:	mov	r2, r8
   296d8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   296dc:	mov	r7, r0
   296e0:	cmp	sl, r7
   296e4:	beq	29184 <main@@Base+0x12f28>
   296e8:	mov	r5, #0
   296ec:	cmp	r7, r8
   296f0:	str	r5, [fp, #-36]	; 0xffffffdc
   296f4:	str	r5, [fp, #-40]	; 0xffffffd8
   296f8:	str	r5, [sp, #36]	; 0x24
   296fc:	str	r5, [sp, #32]
   29700:	str	r5, [sp, #44]	; 0x2c
   29704:	beq	29768 <main@@Base+0x1350c>
   29708:	sub	r0, fp, #40	; 0x28
   2970c:	mov	r1, r7
   29710:	mov	r2, r8
   29714:	add	r3, sp, #44	; 0x2c
   29718:	str	r0, [sp]
   2971c:	mov	r0, r9
   29720:	bl	382dc <flatcc_json_parser_integer@@Base>
   29724:	ldr	r6, [sp, #24]
   29728:	cmp	r0, r7
   2972c:	beq	29784 <main@@Base+0x13528>
   29730:	mov	r4, r0
   29734:	ldr	r0, [sp, #44]	; 0x2c
   29738:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2973c:	ldr	sl, [fp, #-36]	; 0xffffffdc
   29740:	cmp	r0, #0
   29744:	beq	2979c <main@@Base+0x13540>
   29748:	subs	r0, r5, #1
   2974c:	sbcs	r0, sl, #-2147483648	; 0x80000000
   29750:	bcc	297d0 <main@@Base+0x13574>
   29754:	mov	r0, r9
   29758:	mov	r1, r4
   2975c:	mov	r2, r8
   29760:	mov	r3, #8
   29764:	b	297b4 <main@@Base+0x13558>
   29768:	ldr	r6, [sp, #24]
   2976c:	mov	sl, #0
   29770:	mov	r4, r8
   29774:	cmp	r7, r4
   29778:	bne	29820 <main@@Base+0x135c4>
   2977c:	b	297e8 <main@@Base+0x1358c>
   29780:	andeq	r6, r3, ip, lsr #21
   29784:	mov	r5, #0
   29788:	mov	sl, #0
   2978c:	mov	r4, r7
   29790:	cmp	r7, r4
   29794:	bne	29820 <main@@Base+0x135c4>
   29798:	b	297e8 <main@@Base+0x1358c>
   2979c:	cmn	sl, #1
   297a0:	bgt	297d8 <main@@Base+0x1357c>
   297a4:	mov	r0, r9
   297a8:	mov	r1, r4
   297ac:	mov	r2, r8
   297b0:	mov	r3, #7
   297b4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   297b8:	mov	r4, r0
   297bc:	mov	r5, #0
   297c0:	mov	sl, #0
   297c4:	cmp	r7, r4
   297c8:	bne	29820 <main@@Base+0x135c4>
   297cc:	b	297e8 <main@@Base+0x1358c>
   297d0:	rsbs	r5, r5, #0
   297d4:	rsc	sl, sl, #0
   297d8:	str	r5, [sp, #32]
   297dc:	str	sl, [sp, #36]	; 0x24
   297e0:	cmp	r7, r4
   297e4:	bne	29820 <main@@Base+0x135c4>
   297e8:	add	r0, sp, #32
   297ec:	mov	r1, r7
   297f0:	mov	r2, r8
   297f4:	str	r0, [sp]
   297f8:	mov	r0, r9
   297fc:	ldr	r3, [pc, #4076]	; 2a7f0 <main@@Base+0x14594>
   29800:	add	r3, pc, r3
   29804:	bl	25b80 <main@@Base+0xf924>
   29808:	mov	r4, r0
   2980c:	cmp	r0, r7
   29810:	cmpne	r4, r8
   29814:	beq	2ac94 <main@@Base+0x14a38>
   29818:	ldr	r5, [sp, #32]
   2981c:	ldr	sl, [sp, #36]	; 0x24
   29820:	orrs	r0, r5, sl
   29824:	bne	29834 <main@@Base+0x135d8>
   29828:	ldrb	r0, [r9, #8]
   2982c:	tst	r0, #2
   29830:	beq	29ec4 <main@@Base+0x13c68>
   29834:	ldr	r0, [r9]
   29838:	mov	r1, #3
   2983c:	b	299bc <main@@Base+0x13760>
   29840:	ldr	r9, [sp, #16]
   29844:	bne	29854 <main@@Base+0x135f8>
   29848:	ldrb	r0, [r7, #2]!
   2984c:	cmp	r0, #32
   29850:	bhi	29864 <main@@Base+0x13608>
   29854:	mov	r0, r9
   29858:	mov	r2, r8
   2985c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   29860:	mov	r7, r0
   29864:	cmp	sl, r7
   29868:	beq	292c0 <main@@Base+0x13064>
   2986c:	mov	r5, #0
   29870:	cmp	r7, r8
   29874:	str	r5, [fp, #-36]	; 0xffffffdc
   29878:	str	r5, [fp, #-40]	; 0xffffffd8
   2987c:	str	r5, [sp, #36]	; 0x24
   29880:	str	r5, [sp, #32]
   29884:	str	r5, [sp, #44]	; 0x2c
   29888:	beq	298ec <main@@Base+0x13690>
   2988c:	sub	r0, fp, #40	; 0x28
   29890:	mov	r1, r7
   29894:	mov	r2, r8
   29898:	add	r3, sp, #44	; 0x2c
   2989c:	str	r0, [sp]
   298a0:	mov	r0, r9
   298a4:	bl	382dc <flatcc_json_parser_integer@@Base>
   298a8:	ldr	r6, [sp, #24]
   298ac:	cmp	r0, r7
   298b0:	beq	29904 <main@@Base+0x136a8>
   298b4:	mov	r4, r0
   298b8:	ldr	r0, [sp, #44]	; 0x2c
   298bc:	ldr	r5, [fp, #-40]	; 0xffffffd8
   298c0:	ldr	sl, [fp, #-36]	; 0xffffffdc
   298c4:	cmp	r0, #0
   298c8:	beq	2991c <main@@Base+0x136c0>
   298cc:	subs	r0, r5, #1
   298d0:	sbcs	r0, sl, #-2147483648	; 0x80000000
   298d4:	bcc	29950 <main@@Base+0x136f4>
   298d8:	mov	r0, r9
   298dc:	mov	r1, r4
   298e0:	mov	r2, r8
   298e4:	mov	r3, #8
   298e8:	b	29934 <main@@Base+0x136d8>
   298ec:	ldr	r6, [sp, #24]
   298f0:	mov	sl, #0
   298f4:	mov	r4, r8
   298f8:	cmp	r7, r4
   298fc:	bne	299a0 <main@@Base+0x13744>
   29900:	b	29968 <main@@Base+0x1370c>
   29904:	mov	r5, #0
   29908:	mov	sl, #0
   2990c:	mov	r4, r7
   29910:	cmp	r7, r4
   29914:	bne	299a0 <main@@Base+0x13744>
   29918:	b	29968 <main@@Base+0x1370c>
   2991c:	cmn	sl, #1
   29920:	bgt	29958 <main@@Base+0x136fc>
   29924:	mov	r0, r9
   29928:	mov	r1, r4
   2992c:	mov	r2, r8
   29930:	mov	r3, #7
   29934:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   29938:	mov	r4, r0
   2993c:	mov	r5, #0
   29940:	mov	sl, #0
   29944:	cmp	r7, r4
   29948:	bne	299a0 <main@@Base+0x13744>
   2994c:	b	29968 <main@@Base+0x1370c>
   29950:	rsbs	r5, r5, #0
   29954:	rsc	sl, sl, #0
   29958:	str	r5, [sp, #32]
   2995c:	str	sl, [sp, #36]	; 0x24
   29960:	cmp	r7, r4
   29964:	bne	299a0 <main@@Base+0x13744>
   29968:	add	r0, sp, #32
   2996c:	mov	r1, r7
   29970:	mov	r2, r8
   29974:	str	r0, [sp]
   29978:	mov	r0, r9
   2997c:	ldr	r3, [pc, #3964]	; 2a900 <main@@Base+0x146a4>
   29980:	add	r3, pc, r3
   29984:	bl	25b80 <main@@Base+0xf924>
   29988:	mov	r4, r0
   2998c:	cmp	r0, r7
   29990:	cmpne	r4, r8
   29994:	beq	2ac94 <main@@Base+0x14a38>
   29998:	ldr	r5, [sp, #32]
   2999c:	ldr	sl, [sp, #36]	; 0x24
   299a0:	orrs	r0, r5, sl
   299a4:	bne	299b4 <main@@Base+0x13758>
   299a8:	ldrb	r0, [r9, #8]
   299ac:	tst	r0, #2
   299b0:	beq	29ec4 <main@@Base+0x13c68>
   299b4:	ldr	r0, [r9]
   299b8:	mov	r1, #7
   299bc:	mov	r2, #8
   299c0:	mov	r3, #8
   299c4:	bl	327e4 <flatcc_builder_table_add@@Base>
   299c8:	cmp	r0, #0
   299cc:	beq	2ac94 <main@@Base+0x14a38>
   299d0:	stm	r0, {r5, sl}
   299d4:	b	29ec4 <main@@Base+0x13c68>
   299d8:	andeq	r6, r3, r0, ror #16
   299dc:	cmp	r0, #34	; 0x22
   299e0:	bne	29ea8 <main@@Base+0x13c4c>
   299e4:	add	r1, sl, #10
   299e8:	sub	r0, r8, r1
   299ec:	cmp	r0, #2
   299f0:	blt	29c70 <main@@Base+0x13a14>
   299f4:	ldrb	r0, [r1]
   299f8:	cmp	r0, #32
   299fc:	bls	29c5c <main@@Base+0x13a00>
   29a00:	mov	r9, r1
   29a04:	cmp	r9, r8
   29a08:	bne	29c88 <main@@Base+0x13a2c>
   29a0c:	b	29cc0 <main@@Base+0x13a64>
   29a10:	bne	29a24 <main@@Base+0x137c8>
   29a14:	mov	r9, r1
   29a18:	ldrb	r0, [r9, #1]!
   29a1c:	cmp	r0, #32
   29a20:	bhi	29a34 <main@@Base+0x137d8>
   29a24:	ldr	r0, [sp, #16]
   29a28:	mov	r2, r8
   29a2c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   29a30:	mov	r9, r0
   29a34:	cmp	r9, r8
   29a38:	beq	29a74 <main@@Base+0x13818>
   29a3c:	ldrb	r0, [r9]
   29a40:	cmp	r0, #58	; 0x3a
   29a44:	bne	29a74 <main@@Base+0x13818>
   29a48:	add	r1, r9, #1
   29a4c:	sub	r0, r8, r1
   29a50:	cmp	r0, #2
   29a54:	blt	29ce8 <main@@Base+0x13a8c>
   29a58:	ldrb	r0, [r1]
   29a5c:	cmp	r0, #32
   29a60:	bls	29cd8 <main@@Base+0x13a7c>
   29a64:	mov	r9, r1
   29a68:	cmp	r7, r9
   29a6c:	bne	29d00 <main@@Base+0x13aa4>
   29a70:	b	29ea8 <main@@Base+0x13c4c>
   29a74:	ldr	r0, [sp, #16]
   29a78:	mov	r1, r9
   29a7c:	mov	r2, r8
   29a80:	mov	r3, #4
   29a84:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   29a88:	b	29cf4 <main@@Base+0x13a98>
   29a8c:	bne	29a9c <main@@Base+0x13840>
   29a90:	ldrb	r0, [r9, #2]!
   29a94:	cmp	r0, #32
   29a98:	bhi	29aac <main@@Base+0x13850>
   29a9c:	ldr	r0, [sp, #16]
   29aa0:	mov	r2, r8
   29aa4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   29aa8:	mov	r9, r0
   29aac:	cmp	r7, r9
   29ab0:	beq	29ea8 <main@@Base+0x13c4c>
   29ab4:	mov	r5, #0
   29ab8:	cmp	r9, r8
   29abc:	str	r5, [fp, #-36]	; 0xffffffdc
   29ac0:	str	r5, [fp, #-40]	; 0xffffffd8
   29ac4:	str	r5, [sp, #44]	; 0x2c
   29ac8:	str	r5, [sp, #32]
   29acc:	beq	29b18 <main@@Base+0x138bc>
   29ad0:	sub	r0, fp, #40	; 0x28
   29ad4:	mov	r1, r9
   29ad8:	mov	r2, r8
   29adc:	add	r3, sp, #32
   29ae0:	str	r0, [sp]
   29ae4:	ldr	r0, [sp, #16]
   29ae8:	bl	382dc <flatcc_json_parser_integer@@Base>
   29aec:	cmp	r0, r9
   29af0:	beq	29b28 <main@@Base+0x138cc>
   29af4:	mov	r4, r0
   29af8:	ldr	r0, [sp, #32]
   29afc:	cmp	r0, #0
   29b00:	beq	29b38 <main@@Base+0x138dc>
   29b04:	ldr	r0, [sp, #16]
   29b08:	mov	r1, r4
   29b0c:	mov	r2, r8
   29b10:	mov	r3, #8
   29b14:	b	29b54 <main@@Base+0x138f8>
   29b18:	mov	r4, r8
   29b1c:	cmp	r9, r4
   29b20:	bne	29b98 <main@@Base+0x1393c>
   29b24:	b	29b64 <main@@Base+0x13908>
   29b28:	mov	r4, r9
   29b2c:	cmp	r9, r4
   29b30:	bne	29b98 <main@@Base+0x1393c>
   29b34:	b	29b64 <main@@Base+0x13908>
   29b38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29b3c:	cmp	r0, #0
   29b40:	beq	29c48 <main@@Base+0x139ec>
   29b44:	ldr	r0, [sp, #16]
   29b48:	mov	r1, r4
   29b4c:	mov	r2, r8
   29b50:	mov	r3, #7
   29b54:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   29b58:	mov	r4, r0
   29b5c:	cmp	r9, r4
   29b60:	bne	29b98 <main@@Base+0x1393c>
   29b64:	add	r0, sp, #44	; 0x2c
   29b68:	mov	r1, r9
   29b6c:	mov	r2, r8
   29b70:	str	r0, [sp]
   29b74:	ldr	r0, [sp, #16]
   29b78:	ldr	r3, [pc, #4076]	; 2ab6c <main@@Base+0x14910>
   29b7c:	add	r3, pc, r3
   29b80:	bl	25d9c <main@@Base+0xfb40>
   29b84:	mov	r4, r0
   29b88:	cmp	r0, r9
   29b8c:	cmpne	r4, r8
   29b90:	beq	2ac94 <main@@Base+0x14a38>
   29b94:	ldr	r5, [sp, #44]	; 0x2c
   29b98:	ldr	r9, [sp, #16]
   29b9c:	cmp	r5, #0
   29ba0:	bne	29bb0 <main@@Base+0x13954>
   29ba4:	ldrb	r0, [r9, #8]
   29ba8:	tst	r0, #2
   29bac:	beq	29ec0 <main@@Base+0x13c64>
   29bb0:	ldr	r0, [r9]
   29bb4:	mov	r1, #1
   29bb8:	mov	r2, #4
   29bbc:	mov	r3, #4
   29bc0:	bl	327e4 <flatcc_builder_table_add@@Base>
   29bc4:	cmp	r0, #0
   29bc8:	beq	2ac94 <main@@Base+0x14a38>
   29bcc:	str	r5, [r0]
   29bd0:	b	29ec0 <main@@Base+0x13c64>
   29bd4:	ldr	r9, [sp, #16]
   29bd8:	bne	29be8 <main@@Base+0x1398c>
   29bdc:	ldrb	r0, [r1, #2]!
   29be0:	cmp	r0, #32
   29be4:	bhi	29bfc <main@@Base+0x139a0>
   29be8:	mov	r1, r2
   29bec:	mov	r0, r9
   29bf0:	mov	r2, r8
   29bf4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   29bf8:	mov	r1, r0
   29bfc:	cmp	sl, r1
   29c00:	beq	29184 <main@@Base+0x12f28>
   29c04:	mov	r0, r9
   29c08:	mov	r2, r8
   29c0c:	add	r3, sp, #28
   29c10:	bl	38888 <flatcc_json_parser_build_string@@Base>
   29c14:	mov	r4, r0
   29c18:	ldr	r0, [sp, #28]
   29c1c:	cmp	r0, #0
   29c20:	beq	2ac98 <main@@Base+0x14a3c>
   29c24:	ldr	r0, [r9]
   29c28:	mov	r1, #2
   29c2c:	bl	32630 <flatcc_builder_table_add_offset@@Base>
   29c30:	ldr	r6, [sp, #24]
   29c34:	cmp	r0, #0
   29c38:	beq	2ac98 <main@@Base+0x14a3c>
   29c3c:	ldr	r1, [sp, #28]
   29c40:	str	r1, [r0]
   29c44:	b	29ec4 <main@@Base+0x13c68>
   29c48:	ldr	r5, [fp, #-40]	; 0xffffffd8
   29c4c:	str	r5, [sp, #44]	; 0x2c
   29c50:	cmp	r9, r4
   29c54:	bne	29b98 <main@@Base+0x1393c>
   29c58:	b	29b64 <main@@Base+0x13908>
   29c5c:	bne	29c70 <main@@Base+0x13a14>
   29c60:	mov	r9, r1
   29c64:	ldrb	r0, [r9, #1]!
   29c68:	cmp	r0, #32
   29c6c:	bhi	29c80 <main@@Base+0x13a24>
   29c70:	ldr	r0, [sp, #16]
   29c74:	mov	r2, r8
   29c78:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   29c7c:	mov	r9, r0
   29c80:	cmp	r9, r8
   29c84:	beq	29cc0 <main@@Base+0x13a64>
   29c88:	ldrb	r0, [r9]
   29c8c:	cmp	r0, #58	; 0x3a
   29c90:	bne	29cc0 <main@@Base+0x13a64>
   29c94:	add	r1, r9, #1
   29c98:	sub	r0, r8, r1
   29c9c:	cmp	r0, #2
   29ca0:	blt	29e2c <main@@Base+0x13bd0>
   29ca4:	ldrb	r0, [r1]
   29ca8:	cmp	r0, #32
   29cac:	bls	29e1c <main@@Base+0x13bc0>
   29cb0:	mov	r9, r1
   29cb4:	cmp	r7, r9
   29cb8:	bne	29e44 <main@@Base+0x13be8>
   29cbc:	b	29ea8 <main@@Base+0x13c4c>
   29cc0:	ldr	r0, [sp, #16]
   29cc4:	mov	r1, r9
   29cc8:	mov	r2, r8
   29ccc:	mov	r3, #4
   29cd0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   29cd4:	b	29e38 <main@@Base+0x13bdc>
   29cd8:	bne	29ce8 <main@@Base+0x13a8c>
   29cdc:	ldrb	r0, [r9, #2]!
   29ce0:	cmp	r0, #32
   29ce4:	bhi	29cf8 <main@@Base+0x13a9c>
   29ce8:	ldr	r0, [sp, #16]
   29cec:	mov	r2, r8
   29cf0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   29cf4:	mov	r9, r0
   29cf8:	cmp	r7, r9
   29cfc:	beq	29ea8 <main@@Base+0x13c4c>
   29d00:	mov	r5, #0
   29d04:	cmp	r9, r8
   29d08:	str	r5, [fp, #-36]	; 0xffffffdc
   29d0c:	str	r5, [fp, #-40]	; 0xffffffd8
   29d10:	str	r5, [sp, #44]	; 0x2c
   29d14:	str	r5, [sp, #32]
   29d18:	beq	29d64 <main@@Base+0x13b08>
   29d1c:	sub	r0, fp, #40	; 0x28
   29d20:	mov	r1, r9
   29d24:	mov	r2, r8
   29d28:	add	r3, sp, #32
   29d2c:	str	r0, [sp]
   29d30:	ldr	r0, [sp, #16]
   29d34:	bl	382dc <flatcc_json_parser_integer@@Base>
   29d38:	cmp	r0, r9
   29d3c:	beq	29d74 <main@@Base+0x13b18>
   29d40:	mov	r4, r0
   29d44:	ldr	r0, [sp, #32]
   29d48:	cmp	r0, #0
   29d4c:	beq	29d84 <main@@Base+0x13b28>
   29d50:	ldr	r0, [sp, #16]
   29d54:	mov	r1, r4
   29d58:	mov	r2, r8
   29d5c:	mov	r3, #8
   29d60:	b	29da0 <main@@Base+0x13b44>
   29d64:	mov	r4, r8
   29d68:	cmp	r9, r4
   29d6c:	bne	29de4 <main@@Base+0x13b88>
   29d70:	b	29db0 <main@@Base+0x13b54>
   29d74:	mov	r4, r9
   29d78:	cmp	r9, r4
   29d7c:	bne	29de4 <main@@Base+0x13b88>
   29d80:	b	29db0 <main@@Base+0x13b54>
   29d84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29d88:	cmp	r0, #0
   29d8c:	beq	29e08 <main@@Base+0x13bac>
   29d90:	ldr	r0, [sp, #16]
   29d94:	mov	r1, r4
   29d98:	mov	r2, r8
   29d9c:	mov	r3, #7
   29da0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   29da4:	mov	r4, r0
   29da8:	cmp	r9, r4
   29dac:	bne	29de4 <main@@Base+0x13b88>
   29db0:	add	r0, sp, #44	; 0x2c
   29db4:	mov	r1, r9
   29db8:	mov	r2, r8
   29dbc:	str	r0, [sp]
   29dc0:	ldr	r0, [sp, #16]
   29dc4:	ldr	r3, [pc, #3816]	; 2acb4 <main@@Base+0x14a58>
   29dc8:	add	r3, pc, r3
   29dcc:	bl	25d9c <main@@Base+0xfb40>
   29dd0:	mov	r4, r0
   29dd4:	cmp	r0, r9
   29dd8:	cmpne	r4, r8
   29ddc:	beq	2ac94 <main@@Base+0x14a38>
   29de0:	ldr	r5, [sp, #44]	; 0x2c
   29de4:	cmp	r5, #0
   29de8:	bne	29dfc <main@@Base+0x13ba0>
   29dec:	ldr	r0, [sp, #16]
   29df0:	ldrb	r0, [r0, #8]
   29df4:	tst	r0, #2
   29df8:	beq	2a048 <main@@Base+0x13dec>
   29dfc:	ldr	r0, [sp, #16]
   29e00:	mov	r1, #6
   29e04:	b	2a02c <main@@Base+0x13dd0>
   29e08:	ldr	r5, [fp, #-40]	; 0xffffffd8
   29e0c:	str	r5, [sp, #44]	; 0x2c
   29e10:	cmp	r9, r4
   29e14:	bne	29de4 <main@@Base+0x13b88>
   29e18:	b	29db0 <main@@Base+0x13b54>
   29e1c:	bne	29e2c <main@@Base+0x13bd0>
   29e20:	ldrb	r0, [r9, #2]!
   29e24:	cmp	r0, #32
   29e28:	bhi	29e3c <main@@Base+0x13be0>
   29e2c:	ldr	r0, [sp, #16]
   29e30:	mov	r2, r8
   29e34:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   29e38:	mov	r9, r0
   29e3c:	cmp	r7, r9
   29e40:	beq	29ea8 <main@@Base+0x13c4c>
   29e44:	mov	r5, #0
   29e48:	cmp	r9, r8
   29e4c:	str	r5, [fp, #-36]	; 0xffffffdc
   29e50:	str	r5, [fp, #-40]	; 0xffffffd8
   29e54:	str	r5, [sp, #44]	; 0x2c
   29e58:	str	r5, [sp, #32]
   29e5c:	beq	29f8c <main@@Base+0x13d30>
   29e60:	sub	r0, fp, #40	; 0x28
   29e64:	mov	r1, r9
   29e68:	mov	r2, r8
   29e6c:	add	r3, sp, #32
   29e70:	str	r0, [sp]
   29e74:	ldr	r0, [sp, #16]
   29e78:	bl	382dc <flatcc_json_parser_integer@@Base>
   29e7c:	cmp	r0, r9
   29e80:	beq	29f9c <main@@Base+0x13d40>
   29e84:	mov	r4, r0
   29e88:	ldr	r0, [sp, #32]
   29e8c:	cmp	r0, #0
   29e90:	beq	29fac <main@@Base+0x13d50>
   29e94:	ldr	r0, [sp, #16]
   29e98:	mov	r1, r4
   29e9c:	mov	r2, r8
   29ea0:	mov	r3, #8
   29ea4:	b	29fc8 <main@@Base+0x13d6c>
   29ea8:	ldr	r9, [sp, #16]
   29eac:	mov	r0, r9
   29eb0:	mov	r1, r7
   29eb4:	mov	r2, r8
   29eb8:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   29ebc:	mov	r4, r0
   29ec0:	ldr	r6, [sp, #24]
   29ec4:	sub	r0, r8, r4
   29ec8:	cmp	r0, #2
   29ecc:	blt	29f00 <main@@Base+0x13ca4>
   29ed0:	ldrb	r0, [r4]
   29ed4:	cmp	r0, #32
   29ed8:	bls	29eec <main@@Base+0x13c90>
   29edc:	mov	r2, r4
   29ee0:	cmp	r2, r8
   29ee4:	bne	29f1c <main@@Base+0x13cc0>
   29ee8:	b	2a178 <main@@Base+0x13f1c>
   29eec:	bne	29f00 <main@@Base+0x13ca4>
   29ef0:	mov	r2, r4
   29ef4:	ldrb	r0, [r2, #1]!
   29ef8:	cmp	r0, #32
   29efc:	bhi	29f14 <main@@Base+0x13cb8>
   29f00:	mov	r0, r9
   29f04:	mov	r1, r4
   29f08:	mov	r2, r8
   29f0c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   29f10:	mov	r2, r0
   29f14:	cmp	r2, r8
   29f18:	beq	2a178 <main@@Base+0x13f1c>
   29f1c:	ldrb	r0, [r2]
   29f20:	cmp	r0, #44	; 0x2c
   29f24:	bne	2a180 <main@@Base+0x13f24>
   29f28:	add	r1, r2, #1
   29f2c:	sub	r0, r8, r1
   29f30:	cmp	r0, #2
   29f34:	blt	29f64 <main@@Base+0x13d08>
   29f38:	ldrb	r0, [r1]
   29f3c:	cmp	r0, #32
   29f40:	bls	29f54 <main@@Base+0x13cf8>
   29f44:	mov	r2, r1
   29f48:	cmp	r2, r8
   29f4c:	bne	29f7c <main@@Base+0x13d20>
   29f50:	b	2a1ac <main@@Base+0x13f50>
   29f54:	bne	29f64 <main@@Base+0x13d08>
   29f58:	ldrb	r0, [r2, #2]!
   29f5c:	cmp	r0, #32
   29f60:	bhi	29f74 <main@@Base+0x13d18>
   29f64:	mov	r0, r9
   29f68:	mov	r2, r8
   29f6c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   29f70:	mov	r2, r0
   29f74:	cmp	r2, r8
   29f78:	beq	2a1ac <main@@Base+0x13f50>
   29f7c:	ldrb	r0, [r2]
   29f80:	cmp	r0, #125	; 0x7d
   29f84:	bne	28aa8 <main@@Base+0x1284c>
   29f88:	b	2a188 <main@@Base+0x13f2c>
   29f8c:	mov	r4, r8
   29f90:	cmp	r9, r4
   29f94:	bne	2a00c <main@@Base+0x13db0>
   29f98:	b	29fd8 <main@@Base+0x13d7c>
   29f9c:	mov	r4, r9
   29fa0:	cmp	r9, r4
   29fa4:	bne	2a00c <main@@Base+0x13db0>
   29fa8:	b	29fd8 <main@@Base+0x13d7c>
   29fac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29fb0:	cmp	r0, #0
   29fb4:	beq	2a050 <main@@Base+0x13df4>
   29fb8:	ldr	r0, [sp, #16]
   29fbc:	mov	r1, r4
   29fc0:	mov	r2, r8
   29fc4:	mov	r3, #7
   29fc8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   29fcc:	mov	r4, r0
   29fd0:	cmp	r9, r4
   29fd4:	bne	2a00c <main@@Base+0x13db0>
   29fd8:	add	r0, sp, #44	; 0x2c
   29fdc:	mov	r1, r9
   29fe0:	mov	r2, r8
   29fe4:	str	r0, [sp]
   29fe8:	ldr	r0, [sp, #16]
   29fec:	ldr	r3, [pc, #3268]	; 2acb8 <main@@Base+0x14a5c>
   29ff0:	add	r3, pc, r3
   29ff4:	bl	25d9c <main@@Base+0xfb40>
   29ff8:	mov	r4, r0
   29ffc:	cmp	r0, r9
   2a000:	cmpne	r4, r8
   2a004:	beq	2ac94 <main@@Base+0x14a38>
   2a008:	ldr	r5, [sp, #44]	; 0x2c
   2a00c:	cmp	r5, #0
   2a010:	bne	2a024 <main@@Base+0x13dc8>
   2a014:	ldr	r0, [sp, #16]
   2a018:	ldrb	r0, [r0, #8]
   2a01c:	tst	r0, #2
   2a020:	beq	2a048 <main@@Base+0x13dec>
   2a024:	ldr	r0, [sp, #16]
   2a028:	mov	r1, #8
   2a02c:	mov	r2, #4
   2a030:	mov	r3, #4
   2a034:	ldr	r0, [r0]
   2a038:	bl	327e4 <flatcc_builder_table_add@@Base>
   2a03c:	cmp	r0, #0
   2a040:	beq	2ac94 <main@@Base+0x14a38>
   2a044:	str	r5, [r0]
   2a048:	ldr	r9, [sp, #16]
   2a04c:	b	29ec0 <main@@Base+0x13c64>
   2a050:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2a054:	str	r5, [sp, #44]	; 0x2c
   2a058:	cmp	r9, r4
   2a05c:	bne	2a00c <main@@Base+0x13db0>
   2a060:	b	29fd8 <main@@Base+0x13d7c>
   2a064:	bne	2a074 <main@@Base+0x13e18>
   2a068:	ldrb	r0, [r4, #2]!
   2a06c:	cmp	r0, #32
   2a070:	bhi	2a084 <main@@Base+0x13e28>
   2a074:	mov	r0, r9
   2a078:	mov	r2, r8
   2a07c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2a080:	mov	r4, r0
   2a084:	mov	ip, r5
   2a088:	cmp	r5, r4
   2a08c:	beq	27fd8 <main@@Base+0x11d7c>
   2a090:	ldr	r0, [r9]
   2a094:	mov	r1, #2
   2a098:	bl	31348 <flatcc_builder_start_table@@Base>
   2a09c:	cmp	r0, #0
   2a0a0:	bne	2ac98 <main@@Base+0x14a3c>
   2a0a4:	cmp	r4, r8
   2a0a8:	beq	2a0e0 <main@@Base+0x13e84>
   2a0ac:	ldrb	r0, [r4]
   2a0b0:	cmp	r0, #123	; 0x7b
   2a0b4:	bne	2a0e0 <main@@Base+0x13e84>
   2a0b8:	ldr	r6, [sp, #24]
   2a0bc:	add	r1, r4, #1
   2a0c0:	sub	r0, r8, r1
   2a0c4:	cmp	r0, #2
   2a0c8:	blt	2a1c8 <main@@Base+0x13f6c>
   2a0cc:	ldrb	r0, [r1]
   2a0d0:	cmp	r0, #32
   2a0d4:	bls	2a1b8 <main@@Base+0x13f5c>
   2a0d8:	mov	r4, r1
   2a0dc:	b	2a1d8 <main@@Base+0x13f7c>
   2a0e0:	mov	r0, r9
   2a0e4:	mov	r1, r4
   2a0e8:	mov	r2, r8
   2a0ec:	mov	r3, #21
   2a0f0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2a0f4:	ldr	r6, [sp, #24]
   2a0f8:	mov	r4, r0
   2a0fc:	ldr	r0, [r9, #24]
   2a100:	cmp	r0, #0
   2a104:	bne	2ac98 <main@@Base+0x14a3c>
   2a108:	ldr	r0, [r9]
   2a10c:	bl	31d70 <flatcc_builder_end_table@@Base>
   2a110:	cmp	r0, #0
   2a114:	beq	2ac98 <main@@Base+0x14a3c>
   2a118:	mov	r7, r0
   2a11c:	ldr	r0, [r9]
   2a120:	mov	r1, #2
   2a124:	bl	32630 <flatcc_builder_table_add_offset@@Base>
   2a128:	cmp	r0, #0
   2a12c:	beq	27874 <main@@Base+0x11618>
   2a130:	str	r7, [r0]
   2a134:	b	27ff0 <main@@Base+0x11d94>
   2a138:	mov	r4, r8
   2a13c:	b	27ecc <main@@Base+0x11c70>
   2a140:	cmp	r0, #125	; 0x7d
   2a144:	bne	2aae8 <main@@Base+0x1488c>
   2a148:	add	r1, r2, #1
   2a14c:	sub	r0, r8, r1
   2a150:	cmp	r0, #2
   2a154:	blt	2ab84 <main@@Base+0x14928>
   2a158:	ldrb	r0, [r1]
   2a15c:	cmp	r0, #32
   2a160:	bls	2ab70 <main@@Base+0x14914>
   2a164:	mov	r4, r1
   2a168:	b	27ecc <main@@Base+0x11c70>
   2a16c:	mov	r0, r9
   2a170:	mov	r1, r8
   2a174:	b	2aaf0 <main@@Base+0x14894>
   2a178:	mov	r4, r8
   2a17c:	b	280d4 <main@@Base+0x11e78>
   2a180:	cmp	r0, #125	; 0x7d
   2a184:	bne	2ab94 <main@@Base+0x14938>
   2a188:	add	r1, r2, #1
   2a18c:	sub	r0, r8, r1
   2a190:	cmp	r0, #2
   2a194:	blt	2abc0 <main@@Base+0x14964>
   2a198:	ldrb	r0, [r1]
   2a19c:	cmp	r0, #32
   2a1a0:	bls	2abac <main@@Base+0x14950>
   2a1a4:	mov	r4, r1
   2a1a8:	b	280d4 <main@@Base+0x11e78>
   2a1ac:	mov	r0, r9
   2a1b0:	mov	r1, r8
   2a1b4:	b	2ab9c <main@@Base+0x14940>
   2a1b8:	bne	2a1c8 <main@@Base+0x13f6c>
   2a1bc:	ldrb	r0, [r4, #2]!
   2a1c0:	cmp	r0, #32
   2a1c4:	bhi	2a1d8 <main@@Base+0x13f7c>
   2a1c8:	mov	r0, r9
   2a1cc:	mov	r2, r8
   2a1d0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2a1d4:	mov	r4, r0
   2a1d8:	cmp	r4, r8
   2a1dc:	mov	r2, r8
   2a1e0:	beq	2a224 <main@@Base+0x13fc8>
   2a1e4:	ldrb	r0, [r4]
   2a1e8:	cmp	r0, #125	; 0x7d
   2a1ec:	bne	2a220 <main@@Base+0x13fc4>
   2a1f0:	add	r1, r4, #1
   2a1f4:	sub	r0, r8, r1
   2a1f8:	cmp	r0, #2
   2a1fc:	blt	2ac0c <main@@Base+0x149b0>
   2a200:	ldrb	r0, [r1]
   2a204:	cmp	r0, #32
   2a208:	bhi	2ab64 <main@@Base+0x14908>
   2a20c:	bne	2ac0c <main@@Base+0x149b0>
   2a210:	ldrb	r0, [r4, #2]!
   2a214:	cmp	r0, #32
   2a218:	bls	2ac0c <main@@Base+0x149b0>
   2a21c:	b	2a0fc <main@@Base+0x13ea0>
   2a220:	mov	r2, r4
   2a224:	cmp	r2, r8
   2a228:	mov	r1, r8
   2a22c:	beq	2a284 <main@@Base+0x14028>
   2a230:	ldrb	r0, [r2]
   2a234:	cmp	r0, #46	; 0x2e
   2a238:	beq	2a258 <main@@Base+0x13ffc>
   2a23c:	cmp	r0, #34	; 0x22
   2a240:	bne	2a274 <main@@Base+0x14018>
   2a244:	ldr	r0, [sp, #20]
   2a248:	mov	r1, #0
   2a24c:	str	r1, [r0]
   2a250:	add	r1, r2, #1
   2a254:	b	2a284 <main@@Base+0x14028>
   2a258:	mov	r1, r2
   2a25c:	mov	r0, r9
   2a260:	mov	r2, r8
   2a264:	mov	r3, #5
   2a268:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2a26c:	mov	r1, r0
   2a270:	b	2a284 <main@@Base+0x14028>
   2a274:	ldr	r0, [sp, #20]
   2a278:	mov	r1, #1
   2a27c:	str	r1, [r0]
   2a280:	mov	r1, r2
   2a284:	sub	r0, r8, r1
   2a288:	mov	r2, #8
   2a28c:	cmp	r0, #8
   2a290:	movcs	r0, r2
   2a294:	sub	r2, r0, #1
   2a298:	cmp	r2, #7
   2a29c:	bhi	2a52c <main@@Base+0x142d0>
   2a2a0:	add	r5, pc, #36	; 0x24
   2a2a4:	mov	r9, #0
   2a2a8:	mov	ip, #0
   2a2ac:	mov	lr, #0
   2a2b0:	mov	sl, #0
   2a2b4:	mov	r3, #0
   2a2b8:	mov	r7, #0
   2a2bc:	mov	r4, #0
   2a2c0:	ldr	r0, [r5, r2, lsl #2]
   2a2c4:	mov	r2, #0
   2a2c8:	add	pc, r5, r0
   2a2cc:	andeq	r0, r0, r4, rrx
   2a2d0:	andeq	r0, r0, ip, asr r0
   2a2d4:	andeq	r0, r0, r4, asr r0
   2a2d8:	andeq	r0, r0, ip, asr #32
   2a2dc:	andeq	r0, r0, r0, asr #32
   2a2e0:	andeq	r0, r0, r4, lsr r0
   2a2e4:	andeq	r0, r0, r4, lsr #32
   2a2e8:	andeq	r0, r0, r0, lsr #32
   2a2ec:	ldrb	ip, [r1, #7]
   2a2f0:	ldrb	r0, [r1, #6]
   2a2f4:	mov	lr, r9
   2a2f8:	orr	r0, ip, r0, lsl #8
   2a2fc:	mov	r9, r0
   2a300:	ldrb	r0, [r1, #5]
   2a304:	mov	sl, lr
   2a308:	orr	r9, r9, r0, lsl #16
   2a30c:	ldrb	r0, [r1, #4]
   2a310:	mov	r3, sl
   2a314:	orr	r9, r9, r0, lsl #24
   2a318:	ldrb	r0, [r1, #3]
   2a31c:	orr	r7, r0, r3
   2a320:	ldrb	r0, [r1, #2]
   2a324:	orr	r4, r7, r0, lsl #8
   2a328:	ldrb	r0, [r1, #1]
   2a32c:	orr	r2, r4, r0, lsl #16
   2a330:	ldrb	r3, [r1]
   2a334:	movw	r0, #25186	; 0x6262
   2a338:	movt	r0, #24418	; 0x5f62
   2a33c:	eor	r0, r9, r0
   2a340:	ldr	r9, [sp, #16]
   2a344:	orr	r2, r2, r3, lsl #24
   2a348:	movw	r3, #24929	; 0x6161
   2a34c:	movt	r3, #24929	; 0x6161
   2a350:	eor	r2, r2, r3
   2a354:	orrs	r0, r0, r2
   2a358:	bne	2a52c <main@@Base+0x142d0>
   2a35c:	add	r4, r1, #8
   2a360:	mov	r0, #8
   2a364:	sub	lr, r8, r4
   2a368:	cmp	lr, #8
   2a36c:	movcc	r0, lr
   2a370:	sub	r0, r0, #1
   2a374:	cmp	r0, #7
   2a378:	bhi	2a66c <main@@Base+0x14410>
   2a37c:	str	r4, [sp, #4]
   2a380:	add	r4, pc, #36	; 0x24
   2a384:	mov	r2, #0
   2a388:	mov	ip, #0
   2a38c:	mov	sl, #0
   2a390:	mov	r6, #0
   2a394:	mov	r7, #0
   2a398:	mov	r5, #0
   2a39c:	mov	r3, #0
   2a3a0:	ldr	r9, [r4, r0, lsl #2]
   2a3a4:	mov	r0, #0
   2a3a8:	add	pc, r4, r9
   2a3ac:	andeq	r0, r0, r4, rrx
   2a3b0:	andeq	r0, r0, ip, asr r0
   2a3b4:	andeq	r0, r0, r4, asr r0
   2a3b8:	andeq	r0, r0, ip, asr #32
   2a3bc:	andeq	r0, r0, r0, asr #32
   2a3c0:	andeq	r0, r0, r4, lsr r0
   2a3c4:	andeq	r0, r0, r4, lsr #32
   2a3c8:	andeq	r0, r0, r0, lsr #32
   2a3cc:	ldrb	ip, [r1, #15]
   2a3d0:	ldrb	r0, [r1, #14]
   2a3d4:	mov	sl, r2
   2a3d8:	orr	r0, ip, r0, lsl #8
   2a3dc:	mov	r2, r0
   2a3e0:	ldrb	r0, [r1, #13]
   2a3e4:	mov	r6, sl
   2a3e8:	orr	r2, r2, r0, lsl #16
   2a3ec:	ldrb	r0, [r1, #12]
   2a3f0:	mov	r7, r6
   2a3f4:	orr	r2, r2, r0, lsl #24
   2a3f8:	ldrb	r0, [r1, #11]
   2a3fc:	orr	r5, r0, r7
   2a400:	ldrb	r0, [r1, #10]
   2a404:	orr	r3, r5, r0, lsl #8
   2a408:	ldrb	r0, [r1, #9]
   2a40c:	orr	r0, r3, r0, lsl #16
   2a410:	ldr	r4, [sp, #4]
   2a414:	movw	r3, #29791	; 0x745f
   2a418:	movt	r3, #24946	; 0x6172
   2a41c:	eor	r3, r2, r3
   2a420:	ldrb	r7, [r4]
   2a424:	orr	r0, r0, r7, lsl #24
   2a428:	movw	r7, #29556	; 0x7374
   2a42c:	movt	r7, #25183	; 0x625f
   2a430:	eor	r0, r0, r7
   2a434:	orrs	r3, r3, r0
   2a438:	bne	2a534 <main@@Base+0x142d8>
   2a43c:	add	r9, r1, #16
   2a440:	ldr	r6, [sp, #24]
   2a444:	mov	r2, #8
   2a448:	sub	ip, r8, r9
   2a44c:	cmp	ip, #8
   2a450:	movcc	r2, ip
   2a454:	sub	r3, r2, #1
   2a458:	cmp	r3, #7
   2a45c:	bhi	2a6f8 <main@@Base+0x1449c>
   2a460:	add	r4, pc, #28
   2a464:	mov	lr, #0
   2a468:	mov	r7, #0
   2a46c:	mov	r2, #0
   2a470:	mov	r5, #0
   2a474:	ldr	r0, [r4, r3, lsl #2]
   2a478:	mov	r3, #0
   2a47c:	add	pc, r4, r0
   2a480:	andeq	r5, r3, r4, ror #27
   2a484:	andeq	r0, r0, r4, asr #32
   2a488:	andeq	r0, r0, ip, lsr r0
   2a48c:	andeq	r0, r0, r4, lsr r0
   2a490:	andeq	r0, r0, r8, lsr #32
   2a494:	andeq	r0, r0, r0, lsr #32
   2a498:	andeq	r0, r0, r0, lsr #32
   2a49c:	andeq	r0, r0, r0, lsr #32
   2a4a0:	andeq	r0, r0, r0, lsr #32
   2a4a4:	ldrb	r0, [r1, #20]
   2a4a8:	lsl	r3, r0, #24
   2a4ac:	ldrb	r0, [r1, #19]
   2a4b0:	orr	r7, r0, lr
   2a4b4:	mov	lr, r3
   2a4b8:	ldrb	r0, [r1, #18]
   2a4bc:	orr	r2, r7, r0, lsl #8
   2a4c0:	ldrb	r0, [r1, #17]
   2a4c4:	orr	r5, r2, r0, lsl #16
   2a4c8:	ldrb	r0, [r9]
   2a4cc:	movw	r2, #25968	; 0x6570
   2a4d0:	movt	r2, #29556	; 0x7374
   2a4d4:	orr	r0, r5, r0, lsl #24
   2a4d8:	eor	r0, r0, r2
   2a4dc:	and	r2, lr, #-16777216	; 0xff000000
   2a4e0:	eor	r2, r2, #1929379840	; 0x73000000
   2a4e4:	orrs	r0, r2, r0
   2a4e8:	bne	2a6f8 <main@@Base+0x1449c>
   2a4ec:	cmp	ip, #6
   2a4f0:	blt	2a6f8 <main@@Base+0x1449c>
   2a4f4:	ldr	r3, [sp, #20]
   2a4f8:	mov	r2, r1
   2a4fc:	ldrb	r0, [r2, #21]!
   2a500:	ldr	r3, [r3]
   2a504:	cmp	r3, #0
   2a508:	beq	2a5c8 <main@@Base+0x1436c>
   2a50c:	cmp	r0, #33	; 0x21
   2a510:	bcc	2a51c <main@@Base+0x142c0>
   2a514:	cmp	r0, #58	; 0x3a
   2a518:	bne	2a6f8 <main@@Base+0x1449c>
   2a51c:	ldr	r0, [sp, #20]
   2a520:	mov	r1, #0
   2a524:	str	r1, [r0]
   2a528:	b	2a5d4 <main@@Base+0x14378>
   2a52c:	mov	r0, r9
   2a530:	b	2a704 <main@@Base+0x144a8>
   2a534:	movw	r3, #29440	; 0x7300
   2a538:	ldr	r9, [sp, #16]
   2a53c:	ldr	r6, [sp, #24]
   2a540:	bic	r2, r2, #255	; 0xff
   2a544:	movt	r3, #25968	; 0x6570
   2a548:	eor	r2, r2, r3
   2a54c:	orrs	r0, r2, r0
   2a550:	bne	2a66c <main@@Base+0x14410>
   2a554:	cmp	lr, #8
   2a558:	blt	2a66c <main@@Base+0x14410>
   2a55c:	ldr	r3, [sp, #20]
   2a560:	mov	r2, r1
   2a564:	ldrb	r0, [r2, #15]!
   2a568:	ldr	r3, [r3]
   2a56c:	cmp	r3, #0
   2a570:	beq	2a594 <main@@Base+0x14338>
   2a574:	cmp	r0, #33	; 0x21
   2a578:	bcc	2a584 <main@@Base+0x14328>
   2a57c:	cmp	r0, #58	; 0x3a
   2a580:	bne	2a66c <main@@Base+0x14410>
   2a584:	ldr	r0, [sp, #20]
   2a588:	mov	r1, #0
   2a58c:	str	r1, [r0]
   2a590:	b	2a5a0 <main@@Base+0x14344>
   2a594:	cmp	r0, #34	; 0x22
   2a598:	bne	2a66c <main@@Base+0x14410>
   2a59c:	add	r2, r1, #16
   2a5a0:	sub	r0, r8, r2
   2a5a4:	cmp	r0, #2
   2a5a8:	blt	2a610 <main@@Base+0x143b4>
   2a5ac:	ldrb	r0, [r2]
   2a5b0:	cmp	r0, #32
   2a5b4:	bls	2a5fc <main@@Base+0x143a0>
   2a5b8:	mov	r7, r2
   2a5bc:	cmp	r7, r8
   2a5c0:	bne	2a62c <main@@Base+0x143d0>
   2a5c4:	b	2a678 <main@@Base+0x1441c>
   2a5c8:	cmp	r0, #34	; 0x22
   2a5cc:	bne	2a6f8 <main@@Base+0x1449c>
   2a5d0:	add	r2, r1, #22
   2a5d4:	sub	r0, r8, r2
   2a5d8:	cmp	r0, #2
   2a5dc:	blt	2a6a4 <main@@Base+0x14448>
   2a5e0:	ldrb	r0, [r2]
   2a5e4:	cmp	r0, #32
   2a5e8:	bls	2a690 <main@@Base+0x14434>
   2a5ec:	mov	r7, r2
   2a5f0:	cmp	r7, r8
   2a5f4:	bne	2a6c0 <main@@Base+0x14464>
   2a5f8:	b	2a7d8 <main@@Base+0x1457c>
   2a5fc:	bne	2a610 <main@@Base+0x143b4>
   2a600:	mov	r7, r2
   2a604:	ldrb	r0, [r7, #1]!
   2a608:	cmp	r0, #32
   2a60c:	bhi	2a624 <main@@Base+0x143c8>
   2a610:	mov	r1, r2
   2a614:	mov	r0, r9
   2a618:	mov	r2, r8
   2a61c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2a620:	mov	r7, r0
   2a624:	cmp	r7, r8
   2a628:	beq	2a678 <main@@Base+0x1441c>
   2a62c:	ldrb	r0, [r7]
   2a630:	cmp	r0, #58	; 0x3a
   2a634:	bne	2a678 <main@@Base+0x1441c>
   2a638:	add	r1, r7, #1
   2a63c:	sub	r0, r8, r1
   2a640:	cmp	r0, #2
   2a644:	blt	2a810 <main@@Base+0x145b4>
   2a648:	ldrb	r0, [r1]
   2a64c:	cmp	r0, #32
   2a650:	bls	2a7f4 <main@@Base+0x14598>
   2a654:	ldr	r9, [sp, #16]
   2a658:	ldr	r6, [sp, #24]
   2a65c:	ldr	r4, [sp, #4]
   2a660:	mov	r7, r1
   2a664:	cmp	r4, r7
   2a668:	bne	2a828 <main@@Base+0x145cc>
   2a66c:	mov	r0, r9
   2a670:	mov	r1, r4
   2a674:	b	2a704 <main@@Base+0x144a8>
   2a678:	mov	r0, r9
   2a67c:	mov	r1, r7
   2a680:	mov	r2, r8
   2a684:	mov	r3, #4
   2a688:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2a68c:	b	2a81c <main@@Base+0x145c0>
   2a690:	bne	2a6a4 <main@@Base+0x14448>
   2a694:	mov	r7, r2
   2a698:	ldrb	r0, [r7, #1]!
   2a69c:	cmp	r0, #32
   2a6a0:	bhi	2a6b8 <main@@Base+0x1445c>
   2a6a4:	ldr	r0, [sp, #16]
   2a6a8:	mov	r1, r2
   2a6ac:	mov	r2, r8
   2a6b0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2a6b4:	mov	r7, r0
   2a6b8:	cmp	r7, r8
   2a6bc:	beq	2a7d8 <main@@Base+0x1457c>
   2a6c0:	ldrb	r0, [r7]
   2a6c4:	cmp	r0, #58	; 0x3a
   2a6c8:	bne	2a7d8 <main@@Base+0x1457c>
   2a6cc:	add	r1, r7, #1
   2a6d0:	sub	r0, r8, r1
   2a6d4:	cmp	r0, #2
   2a6d8:	blt	2a9ac <main@@Base+0x14750>
   2a6dc:	ldrb	r0, [r1]
   2a6e0:	cmp	r0, #32
   2a6e4:	bls	2a998 <main@@Base+0x1473c>
   2a6e8:	ldr	r6, [sp, #24]
   2a6ec:	mov	r7, r1
   2a6f0:	cmp	r9, r7
   2a6f4:	bne	2a9c4 <main@@Base+0x14768>
   2a6f8:	ldr	r0, [sp, #16]
   2a6fc:	mov	r1, r9
   2a700:	mov	r9, r0
   2a704:	mov	r2, r8
   2a708:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   2a70c:	mov	r4, r0
   2a710:	sub	r0, r8, r4
   2a714:	cmp	r0, #2
   2a718:	blt	2a74c <main@@Base+0x144f0>
   2a71c:	ldrb	r0, [r4]
   2a720:	cmp	r0, #32
   2a724:	bls	2a738 <main@@Base+0x144dc>
   2a728:	mov	r2, r4
   2a72c:	cmp	r2, r8
   2a730:	bne	2a768 <main@@Base+0x1450c>
   2a734:	b	2ab00 <main@@Base+0x148a4>
   2a738:	bne	2a74c <main@@Base+0x144f0>
   2a73c:	mov	r2, r4
   2a740:	ldrb	r0, [r2, #1]!
   2a744:	cmp	r0, #32
   2a748:	bhi	2a760 <main@@Base+0x14504>
   2a74c:	mov	r0, r9
   2a750:	mov	r1, r4
   2a754:	mov	r2, r8
   2a758:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2a75c:	mov	r2, r0
   2a760:	cmp	r2, r8
   2a764:	beq	2ab00 <main@@Base+0x148a4>
   2a768:	ldrb	r0, [r2]
   2a76c:	cmp	r0, #44	; 0x2c
   2a770:	bne	2ab08 <main@@Base+0x148ac>
   2a774:	add	r1, r2, #1
   2a778:	sub	r0, r8, r1
   2a77c:	cmp	r0, #2
   2a780:	blt	2a7b0 <main@@Base+0x14554>
   2a784:	ldrb	r0, [r1]
   2a788:	cmp	r0, #32
   2a78c:	bls	2a7a0 <main@@Base+0x14544>
   2a790:	mov	r2, r1
   2a794:	cmp	r2, r8
   2a798:	bne	2a7c8 <main@@Base+0x1456c>
   2a79c:	b	2ab3c <main@@Base+0x148e0>
   2a7a0:	bne	2a7b0 <main@@Base+0x14554>
   2a7a4:	ldrb	r0, [r2, #2]!
   2a7a8:	cmp	r0, #32
   2a7ac:	bhi	2a7c0 <main@@Base+0x14564>
   2a7b0:	mov	r0, r9
   2a7b4:	mov	r2, r8
   2a7b8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2a7bc:	mov	r2, r0
   2a7c0:	cmp	r2, r8
   2a7c4:	beq	2ab3c <main@@Base+0x148e0>
   2a7c8:	ldrb	r0, [r2]
   2a7cc:	cmp	r0, #125	; 0x7d
   2a7d0:	bne	2a224 <main@@Base+0x13fc8>
   2a7d4:	b	2ab48 <main@@Base+0x148ec>
   2a7d8:	ldr	r0, [sp, #16]
   2a7dc:	mov	r1, r7
   2a7e0:	mov	r2, r8
   2a7e4:	mov	r3, #4
   2a7e8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2a7ec:	b	2a9b8 <main@@Base+0x1475c>
   2a7f0:	andeq	r5, r3, r8, asr sl
   2a7f4:	ldr	r9, [sp, #16]
   2a7f8:	ldr	r6, [sp, #24]
   2a7fc:	ldr	r4, [sp, #4]
   2a800:	bne	2a810 <main@@Base+0x145b4>
   2a804:	ldrb	r0, [r7, #2]!
   2a808:	cmp	r0, #32
   2a80c:	bhi	2a820 <main@@Base+0x145c4>
   2a810:	mov	r0, r9
   2a814:	mov	r2, r8
   2a818:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2a81c:	mov	r7, r0
   2a820:	cmp	r4, r7
   2a824:	beq	2a66c <main@@Base+0x14410>
   2a828:	mov	r6, #0
   2a82c:	cmp	r7, r8
   2a830:	str	r6, [fp, #-36]	; 0xffffffdc
   2a834:	str	r6, [fp, #-40]	; 0xffffffd8
   2a838:	str	r6, [sp, #36]	; 0x24
   2a83c:	str	r6, [sp, #32]
   2a840:	str	r6, [sp, #44]	; 0x2c
   2a844:	beq	2a8a4 <main@@Base+0x14648>
   2a848:	sub	r0, fp, #40	; 0x28
   2a84c:	mov	r1, r7
   2a850:	mov	r2, r8
   2a854:	add	r3, sp, #44	; 0x2c
   2a858:	str	r0, [sp]
   2a85c:	mov	r0, r9
   2a860:	bl	382dc <flatcc_json_parser_integer@@Base>
   2a864:	cmp	r0, r7
   2a868:	beq	2a8b8 <main@@Base+0x1465c>
   2a86c:	mov	r4, r0
   2a870:	ldr	r0, [sp, #44]	; 0x2c
   2a874:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2a878:	ldr	r5, [fp, #-36]	; 0xffffffdc
   2a87c:	cmp	r0, #0
   2a880:	beq	2a8c8 <main@@Base+0x1466c>
   2a884:	subs	r0, r6, #1
   2a888:	sbcs	r0, r5, #-2147483648	; 0x80000000
   2a88c:	bcc	2a904 <main@@Base+0x146a8>
   2a890:	ldr	r9, [sp, #16]
   2a894:	mov	r1, r4
   2a898:	mov	r2, r8
   2a89c:	mov	r3, #8
   2a8a0:	b	2a8e0 <main@@Base+0x14684>
   2a8a4:	mov	r5, #0
   2a8a8:	mov	r4, r8
   2a8ac:	cmp	r7, r4
   2a8b0:	bne	2a95c <main@@Base+0x14700>
   2a8b4:	b	2a920 <main@@Base+0x146c4>
   2a8b8:	mov	r6, #0
   2a8bc:	mov	r5, #0
   2a8c0:	mov	r4, r7
   2a8c4:	b	2a914 <main@@Base+0x146b8>
   2a8c8:	cmn	r5, #1
   2a8cc:	bgt	2a90c <main@@Base+0x146b0>
   2a8d0:	ldr	r9, [sp, #16]
   2a8d4:	mov	r1, r4
   2a8d8:	mov	r2, r8
   2a8dc:	mov	r3, #7
   2a8e0:	mov	r0, r9
   2a8e4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2a8e8:	mov	r4, r0
   2a8ec:	mov	r6, #0
   2a8f0:	mov	r5, #0
   2a8f4:	cmp	r7, r4
   2a8f8:	bne	2a95c <main@@Base+0x14700>
   2a8fc:	b	2a920 <main@@Base+0x146c4>
   2a900:	strdeq	r5, [r3], -ip
   2a904:	rsbs	r6, r6, #0
   2a908:	rsc	r5, r5, #0
   2a90c:	str	r6, [sp, #32]
   2a910:	str	r5, [sp, #36]	; 0x24
   2a914:	ldr	r9, [sp, #16]
   2a918:	cmp	r7, r4
   2a91c:	bne	2a95c <main@@Base+0x14700>
   2a920:	add	r0, sp, #32
   2a924:	mov	r1, r7
   2a928:	mov	r2, r8
   2a92c:	str	r0, [sp]
   2a930:	mov	r0, r9
   2a934:	ldr	r3, [pc, #900]	; 2acc0 <main@@Base+0x14a64>
   2a938:	add	r3, pc, r3
   2a93c:	bl	25b80 <main@@Base+0xf924>
   2a940:	mov	r4, r0
   2a944:	cmp	r0, r7
   2a948:	cmpne	r4, r8
   2a94c:	beq	2ac94 <main@@Base+0x14a38>
   2a950:	ldr	r6, [sp, #32]
   2a954:	ldr	r5, [sp, #36]	; 0x24
   2a958:	ldr	r9, [sp, #16]
   2a95c:	orrs	r0, r6, r5
   2a960:	bne	2a970 <main@@Base+0x14714>
   2a964:	ldrb	r0, [r9, #8]
   2a968:	tst	r0, #2
   2a96c:	beq	2aad4 <main@@Base+0x14878>
   2a970:	ldr	r0, [r9]
   2a974:	mov	r1, #0
   2a978:	mov	r2, #8
   2a97c:	mov	r3, #8
   2a980:	bl	327e4 <flatcc_builder_table_add@@Base>
   2a984:	cmp	r0, #0
   2a988:	beq	2ac94 <main@@Base+0x14a38>
   2a98c:	str	r6, [r0]
   2a990:	str	r5, [r0, #4]
   2a994:	b	2aad4 <main@@Base+0x14878>
   2a998:	ldr	r6, [sp, #24]
   2a99c:	bne	2a9ac <main@@Base+0x14750>
   2a9a0:	ldrb	r0, [r7, #2]!
   2a9a4:	cmp	r0, #32
   2a9a8:	bhi	2a9bc <main@@Base+0x14760>
   2a9ac:	ldr	r0, [sp, #16]
   2a9b0:	mov	r2, r8
   2a9b4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2a9b8:	mov	r7, r0
   2a9bc:	cmp	r9, r7
   2a9c0:	beq	2a6f8 <main@@Base+0x1449c>
   2a9c4:	mov	r5, #0
   2a9c8:	cmp	r7, r8
   2a9cc:	str	r5, [fp, #-36]	; 0xffffffdc
   2a9d0:	str	r5, [fp, #-40]	; 0xffffffd8
   2a9d4:	str	r5, [sp, #44]	; 0x2c
   2a9d8:	str	r5, [sp, #32]
   2a9dc:	beq	2aa28 <main@@Base+0x147cc>
   2a9e0:	sub	r0, fp, #40	; 0x28
   2a9e4:	mov	r1, r7
   2a9e8:	mov	r2, r8
   2a9ec:	add	r3, sp, #32
   2a9f0:	str	r0, [sp]
   2a9f4:	ldr	r0, [sp, #16]
   2a9f8:	bl	382dc <flatcc_json_parser_integer@@Base>
   2a9fc:	cmp	r0, r7
   2aa00:	beq	2aa30 <main@@Base+0x147d4>
   2aa04:	mov	r4, r0
   2aa08:	ldr	r0, [sp, #32]
   2aa0c:	cmp	r0, #0
   2aa10:	beq	2aa38 <main@@Base+0x147dc>
   2aa14:	ldr	r0, [sp, #16]
   2aa18:	mov	r1, r4
   2aa1c:	mov	r2, r8
   2aa20:	mov	r3, #8
   2aa24:	b	2aa54 <main@@Base+0x147f8>
   2aa28:	mov	r4, r8
   2aa2c:	b	2aa5c <main@@Base+0x14800>
   2aa30:	mov	r4, r7
   2aa34:	b	2aa5c <main@@Base+0x14800>
   2aa38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aa3c:	cmp	r0, #0
   2aa40:	beq	2aadc <main@@Base+0x14880>
   2aa44:	ldr	r0, [sp, #16]
   2aa48:	mov	r1, r4
   2aa4c:	mov	r2, r8
   2aa50:	mov	r3, #7
   2aa54:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2aa58:	mov	r4, r0
   2aa5c:	ldr	r9, [sp, #16]
   2aa60:	cmp	r7, r4
   2aa64:	bne	2aaa0 <main@@Base+0x14844>
   2aa68:	add	r0, sp, #44	; 0x2c
   2aa6c:	mov	r1, r7
   2aa70:	mov	r2, r8
   2aa74:	str	r0, [sp]
   2aa78:	mov	r0, r9
   2aa7c:	ldr	r3, [pc, #568]	; 2acbc <main@@Base+0x14a60>
   2aa80:	add	r3, pc, r3
   2aa84:	bl	25d9c <main@@Base+0xfb40>
   2aa88:	mov	r4, r0
   2aa8c:	cmp	r0, r7
   2aa90:	cmpne	r4, r8
   2aa94:	beq	2ac94 <main@@Base+0x14a38>
   2aa98:	ldr	r5, [sp, #44]	; 0x2c
   2aa9c:	ldr	r9, [sp, #16]
   2aaa0:	cmp	r5, #0
   2aaa4:	bne	2aab4 <main@@Base+0x14858>
   2aaa8:	ldrb	r0, [r9, #8]
   2aaac:	tst	r0, #2
   2aab0:	beq	2aad4 <main@@Base+0x14878>
   2aab4:	ldr	r0, [r9]
   2aab8:	mov	r1, #1
   2aabc:	mov	r2, #4
   2aac0:	mov	r3, #4
   2aac4:	bl	327e4 <flatcc_builder_table_add@@Base>
   2aac8:	cmp	r0, #0
   2aacc:	beq	2ac94 <main@@Base+0x14a38>
   2aad0:	str	r5, [r0]
   2aad4:	ldr	r6, [sp, #24]
   2aad8:	b	2a710 <main@@Base+0x144b4>
   2aadc:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2aae0:	str	r5, [sp, #44]	; 0x2c
   2aae4:	b	2aa5c <main@@Base+0x14800>
   2aae8:	mov	r0, r9
   2aaec:	mov	r1, r2
   2aaf0:	mov	r2, r8
   2aaf4:	mov	r3, #10
   2aaf8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2aafc:	b	27ec8 <main@@Base+0x11c6c>
   2ab00:	mov	r4, r8
   2ab04:	b	2a0fc <main@@Base+0x13ea0>
   2ab08:	cmp	r0, #125	; 0x7d
   2ab0c:	bne	2abd0 <main@@Base+0x14974>
   2ab10:	add	r1, r2, #1
   2ab14:	sub	r0, r8, r1
   2ab18:	cmp	r0, #2
   2ab1c:	blt	2ac0c <main@@Base+0x149b0>
   2ab20:	ldrb	r0, [r1]
   2ab24:	cmp	r0, #32
   2ab28:	bls	2abf0 <main@@Base+0x14994>
   2ab2c:	ldr	r9, [sp, #16]
   2ab30:	ldr	r6, [sp, #24]
   2ab34:	mov	r4, r1
   2ab38:	b	2a0fc <main@@Base+0x13ea0>
   2ab3c:	mov	r0, r9
   2ab40:	mov	r1, r8
   2ab44:	b	2abd8 <main@@Base+0x1497c>
   2ab48:	add	r1, r2, #1
   2ab4c:	sub	r0, r8, r1
   2ab50:	cmp	r0, #2
   2ab54:	blt	2ac0c <main@@Base+0x149b0>
   2ab58:	ldrb	r0, [r1]
   2ab5c:	cmp	r0, #32
   2ab60:	bls	2abe8 <main@@Base+0x1498c>
   2ab64:	mov	r4, r1
   2ab68:	b	2a0fc <main@@Base+0x13ea0>
   2ab6c:	ldrdeq	r5, [r3], -r0
   2ab70:	bne	2ab84 <main@@Base+0x14928>
   2ab74:	ldrb	r0, [r2, #2]!
   2ab78:	mov	r4, r2
   2ab7c:	cmp	r0, #32
   2ab80:	bhi	27ecc <main@@Base+0x11c70>
   2ab84:	mov	r0, r9
   2ab88:	mov	r2, r8
   2ab8c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2ab90:	b	27ec8 <main@@Base+0x11c6c>
   2ab94:	mov	r0, r9
   2ab98:	mov	r1, r2
   2ab9c:	mov	r2, r8
   2aba0:	mov	r3, #10
   2aba4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2aba8:	b	280d0 <main@@Base+0x11e74>
   2abac:	bne	2abc0 <main@@Base+0x14964>
   2abb0:	ldrb	r0, [r2, #2]!
   2abb4:	mov	r4, r2
   2abb8:	cmp	r0, #32
   2abbc:	bhi	280d4 <main@@Base+0x11e78>
   2abc0:	mov	r0, r9
   2abc4:	mov	r2, r8
   2abc8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2abcc:	b	280d0 <main@@Base+0x11e74>
   2abd0:	mov	r0, r9
   2abd4:	mov	r1, r2
   2abd8:	mov	r2, r8
   2abdc:	mov	r3, #10
   2abe0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2abe4:	b	2a0f8 <main@@Base+0x13e9c>
   2abe8:	beq	2abfc <main@@Base+0x149a0>
   2abec:	b	2ac0c <main@@Base+0x149b0>
   2abf0:	ldr	r9, [sp, #16]
   2abf4:	ldr	r6, [sp, #24]
   2abf8:	bne	2ac0c <main@@Base+0x149b0>
   2abfc:	ldrb	r0, [r2, #2]!
   2ac00:	mov	r4, r2
   2ac04:	cmp	r0, #32
   2ac08:	bhi	2a0fc <main@@Base+0x13ea0>
   2ac0c:	mov	r0, r9
   2ac10:	mov	r2, r8
   2ac14:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2ac18:	b	2a0f8 <main@@Base+0x13e9c>
   2ac1c:	mov	r4, r8
   2ac20:	b	27868 <main@@Base+0x1160c>
   2ac24:	cmp	r0, #125	; 0x7d
   2ac28:	bne	2ac5c <main@@Base+0x14a00>
   2ac2c:	add	r1, r2, #1
   2ac30:	sub	r0, r8, r1
   2ac34:	cmp	r0, #2
   2ac38:	blt	2ac84 <main@@Base+0x14a28>
   2ac3c:	ldrb	r0, [r1]
   2ac40:	cmp	r0, #32
   2ac44:	bls	2ac70 <main@@Base+0x14a14>
   2ac48:	mov	r4, r1
   2ac4c:	b	27868 <main@@Base+0x1160c>
   2ac50:	mov	r0, r9
   2ac54:	mov	r1, r8
   2ac58:	b	2ac64 <main@@Base+0x14a08>
   2ac5c:	mov	r0, r9
   2ac60:	mov	r1, r2
   2ac64:	mov	r2, r8
   2ac68:	mov	r3, #10
   2ac6c:	b	27860 <main@@Base+0x11604>
   2ac70:	bne	2ac84 <main@@Base+0x14a28>
   2ac74:	ldrb	r0, [r2, #2]!
   2ac78:	mov	r4, r2
   2ac7c:	cmp	r0, #32
   2ac80:	bhi	27868 <main@@Base+0x1160c>
   2ac84:	mov	r0, r9
   2ac88:	mov	r2, r8
   2ac8c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2ac90:	b	27864 <main@@Base+0x11608>
   2ac94:	ldr	r9, [sp, #16]
   2ac98:	mov	r0, r9
   2ac9c:	mov	r1, r4
   2aca0:	mov	r2, r8
   2aca4:	mov	r3, #33	; 0x21
   2aca8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2acac:	mov	r4, r0
   2acb0:	b	27874 <main@@Base+0x11618>
   2acb4:	andeq	r5, r3, r8, lsr #9
   2acb8:	muleq	r3, r8, r2
   2acbc:	andeq	r4, r3, r4, lsl r8
   2acc0:	andeq	r4, r3, r8, ror #18
   2acc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2acc8:	add	fp, sp, #28
   2accc:	sub	sp, sp, #44	; 0x2c
   2acd0:	mov	r5, r0
   2acd4:	mov	r0, #0
   2acd8:	mov	r7, r1
   2acdc:	mov	r1, #10
   2ace0:	mov	r4, r3
   2ace4:	mov	r9, r2
   2ace8:	str	r0, [r3]
   2acec:	ldr	r0, [r5]
   2acf0:	bl	31348 <flatcc_builder_start_table@@Base>
   2acf4:	cmp	r0, #0
   2acf8:	beq	2ad20 <main@@Base+0x14ac4>
   2acfc:	mov	r0, r5
   2ad00:	mov	r1, r7
   2ad04:	mov	r2, r9
   2ad08:	mov	r3, #33	; 0x21
   2ad0c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2ad10:	mov	r7, r0
   2ad14:	mov	r0, r7
   2ad18:	sub	sp, fp, #28
   2ad1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ad20:	sub	r0, fp, #32
   2ad24:	mov	r1, r7
   2ad28:	mov	r2, r9
   2ad2c:	mov	r3, #5
   2ad30:	str	r0, [sp]
   2ad34:	mov	r0, r5
   2ad38:	bl	38b5c <flatcc_json_parser_prepare_unions@@Base>
   2ad3c:	cmp	r0, r9
   2ad40:	beq	2acfc <main@@Base+0x14aa0>
   2ad44:	cmp	r7, r9
   2ad48:	beq	2ad7c <main@@Base+0x14b20>
   2ad4c:	ldrb	r0, [r7]
   2ad50:	cmp	r0, #123	; 0x7b
   2ad54:	bne	2ad7c <main@@Base+0x14b20>
   2ad58:	add	r1, r7, #1
   2ad5c:	sub	r0, r9, r1
   2ad60:	cmp	r0, #2
   2ad64:	blt	2ade0 <main@@Base+0x14b84>
   2ad68:	ldrb	r0, [r1]
   2ad6c:	cmp	r0, #32
   2ad70:	bls	2add0 <main@@Base+0x14b74>
   2ad74:	mov	r7, r1
   2ad78:	b	2adf0 <main@@Base+0x14b94>
   2ad7c:	mov	r0, r5
   2ad80:	mov	r1, r7
   2ad84:	mov	r2, r9
   2ad88:	mov	r3, #21
   2ad8c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2ad90:	mov	r7, r0
   2ad94:	ldr	r0, [r5, #24]
   2ad98:	cmp	r0, #0
   2ad9c:	bne	2acfc <main@@Base+0x14aa0>
   2ada0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ada4:	mov	r0, r5
   2ada8:	mov	r1, r7
   2adac:	mov	r2, r9
   2adb0:	bl	38bec <flatcc_json_parser_finalize_unions@@Base>
   2adb4:	mov	r7, r0
   2adb8:	ldr	r0, [r5]
   2adbc:	bl	31d70 <flatcc_builder_end_table@@Base>
   2adc0:	cmp	r0, #0
   2adc4:	str	r0, [r4]
   2adc8:	bne	2ad14 <main@@Base+0x14ab8>
   2adcc:	b	2acfc <main@@Base+0x14aa0>
   2add0:	bne	2ade0 <main@@Base+0x14b84>
   2add4:	ldrb	r0, [r7, #2]!
   2add8:	cmp	r0, #32
   2addc:	bhi	2adf0 <main@@Base+0x14b94>
   2ade0:	mov	r0, r5
   2ade4:	mov	r2, r9
   2ade8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2adec:	mov	r7, r0
   2adf0:	cmp	r7, r9
   2adf4:	mov	r3, r9
   2adf8:	beq	2ae3c <main@@Base+0x14be0>
   2adfc:	ldrb	r0, [r7]
   2ae00:	cmp	r0, #125	; 0x7d
   2ae04:	bne	2ae38 <main@@Base+0x14bdc>
   2ae08:	add	r1, r7, #1
   2ae0c:	sub	r0, r9, r1
   2ae10:	cmp	r0, #2
   2ae14:	blt	2c344 <main@@Base+0x160e8>
   2ae18:	ldrb	r0, [r1]
   2ae1c:	cmp	r0, #32
   2ae20:	bhi	2c308 <main@@Base+0x160ac>
   2ae24:	bne	2c344 <main@@Base+0x160e8>
   2ae28:	ldrb	r0, [r7, #2]!
   2ae2c:	cmp	r0, #32
   2ae30:	bhi	2ad94 <main@@Base+0x14b38>
   2ae34:	b	2c344 <main@@Base+0x160e8>
   2ae38:	mov	r3, r7
   2ae3c:	add	r0, r5, #12
   2ae40:	str	r5, [sp, #36]	; 0x24
   2ae44:	str	r4, [sp, #32]
   2ae48:	str	r0, [sp, #28]
   2ae4c:	movw	r0, #24436	; 0x5f74
   2ae50:	movt	r0, #29299	; 0x7273
   2ae54:	add	r0, r0, #65536	; 0x10000
   2ae58:	add	r0, r0, #16777216	; 0x1000000
   2ae5c:	str	r0, [sp, #20]
   2ae60:	cmp	r3, r9
   2ae64:	mov	r8, r9
   2ae68:	beq	2aebc <main@@Base+0x14c60>
   2ae6c:	ldrb	r0, [r3]
   2ae70:	cmp	r0, #46	; 0x2e
   2ae74:	beq	2ae90 <main@@Base+0x14c34>
   2ae78:	cmp	r0, #34	; 0x22
   2ae7c:	bne	2aeac <main@@Base+0x14c50>
   2ae80:	ldr	r0, [sp, #28]
   2ae84:	mov	r1, #0
   2ae88:	add	r8, r3, #1
   2ae8c:	b	2aeb8 <main@@Base+0x14c5c>
   2ae90:	mov	r1, r3
   2ae94:	mov	r0, r5
   2ae98:	mov	r2, r9
   2ae9c:	mov	r3, #5
   2aea0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2aea4:	mov	r8, r0
   2aea8:	b	2aebc <main@@Base+0x14c60>
   2aeac:	ldr	r0, [sp, #28]
   2aeb0:	mov	r1, #1
   2aeb4:	mov	r8, r3
   2aeb8:	str	r1, [r0]
   2aebc:	sub	ip, r9, r8
   2aec0:	mov	r0, #8
   2aec4:	cmp	ip, #8
   2aec8:	movcc	r0, ip
   2aecc:	sub	r0, r0, #1
   2aed0:	cmp	r0, #7
   2aed4:	bhi	2b928 <main@@Base+0x156cc>
   2aed8:	add	r2, pc, #36	; 0x24
   2aedc:	mov	r1, #0
   2aee0:	mov	lr, #0
   2aee4:	mov	r4, #0
   2aee8:	mov	r6, #0
   2aeec:	mov	r3, #0
   2aef0:	mov	r5, #0
   2aef4:	mov	r7, #0
   2aef8:	ldr	sl, [r2, r0, lsl #2]
   2aefc:	mov	r0, #0
   2af00:	add	pc, r2, sl
   2af04:	andeq	r0, r0, r4, rrx
   2af08:	andeq	r0, r0, ip, asr r0
   2af0c:	andeq	r0, r0, r4, asr r0
   2af10:	andeq	r0, r0, ip, asr #32
   2af14:	andeq	r0, r0, r0, asr #32
   2af18:	andeq	r0, r0, r4, lsr r0
   2af1c:	andeq	r0, r0, r4, lsr #32
   2af20:	andeq	r0, r0, r0, lsr #32
   2af24:	ldrb	lr, [r8, #7]
   2af28:	ldrb	r0, [r8, #6]
   2af2c:	mov	r4, r1
   2af30:	orr	r0, lr, r0, lsl #8
   2af34:	mov	r1, r0
   2af38:	ldrb	r0, [r8, #5]
   2af3c:	mov	r6, r4
   2af40:	orr	r1, r1, r0, lsl #16
   2af44:	ldrb	r0, [r8, #4]
   2af48:	mov	r3, r6
   2af4c:	orr	r1, r1, r0, lsl #24
   2af50:	ldrb	r0, [r8, #3]
   2af54:	orr	r5, r0, r3
   2af58:	ldrb	r0, [r8, #2]
   2af5c:	orr	r7, r5, r0, lsl #8
   2af60:	ldrb	r0, [r8, #1]
   2af64:	orr	r0, r7, r0, lsl #16
   2af68:	ldrb	r2, [r8]
   2af6c:	orr	r2, r0, r2, lsl #24
   2af70:	movw	r0, #29797	; 0x7465
   2af74:	movt	r0, #24931	; 0x6163
   2af78:	subs	r0, r1, r0
   2af7c:	movw	r0, #24946	; 0x6172
   2af80:	movt	r0, #25448	; 0x6368
   2af84:	sbcs	r0, r2, r0
   2af88:	bcs	2b0e4 <main@@Base+0x14e88>
   2af8c:	movw	r0, #29817	; 0x7479
   2af90:	movw	r3, #28005	; 0x6d65
   2af94:	ldr	r5, [sp, #36]	; 0x24
   2af98:	movt	r0, #28511	; 0x6f5f
   2af9c:	movt	r3, #25441	; 0x6361
   2afa0:	eor	r0, r1, r0
   2afa4:	eor	r3, r2, r3
   2afa8:	orrs	r0, r0, r3
   2afac:	beq	2b3ec <main@@Base+0x15190>
   2afb0:	movw	r0, #28265	; 0x6e69
   2afb4:	movw	r7, #29793	; 0x7461
   2afb8:	movt	r0, #26479	; 0x676f
   2afbc:	movt	r7, #24942	; 0x616e
   2afc0:	eor	r0, r1, r0
   2afc4:	eor	r2, r2, r7
   2afc8:	orrs	r0, r0, r2
   2afcc:	bne	2b474 <main@@Base+0x15218>
   2afd0:	add	r6, r8, #8
   2afd4:	mov	r1, #8
   2afd8:	sub	ip, r9, r6
   2afdc:	cmp	ip, #8
   2afe0:	movcc	r1, ip
   2afe4:	sub	r1, r1, #1
   2afe8:	cmp	r1, #7
   2afec:	bhi	2c0d4 <main@@Base+0x15e78>
   2aff0:	str	r6, [sp, #24]
   2aff4:	add	r0, pc, #32
   2aff8:	mov	sl, #0
   2affc:	mov	lr, #0
   2b000:	mov	r3, #0
   2b004:	mov	r6, #0
   2b008:	mov	r7, #0
   2b00c:	mov	r4, #0
   2b010:	ldr	r2, [r0, r1, lsl #2]
   2b014:	mov	r1, #0
   2b018:	add	pc, r0, r2
   2b01c:	andeq	r0, r0, ip, asr r0
   2b020:	andeq	r0, r0, r4, asr r0
   2b024:	andeq	r0, r0, ip, asr #32
   2b028:	andeq	r0, r0, r4, asr #32
   2b02c:	andeq	r0, r0, r8, lsr r0
   2b030:	andeq	r0, r0, r8, lsr #32
   2b034:	andeq	r0, r0, r0, lsr #32
   2b038:	andeq	r0, r0, r0, lsr #32
   2b03c:	ldrb	r0, [r8, #14]
   2b040:	lsl	lr, r0, #8
   2b044:	ldrb	r0, [r8, #13]
   2b048:	mov	r1, sl
   2b04c:	orr	r0, lr, r0, lsl #16
   2b050:	mov	sl, r0
   2b054:	ldrb	r0, [r8, #12]
   2b058:	mov	r3, r1
   2b05c:	orr	sl, sl, r0, lsl #24
   2b060:	ldrb	r0, [r8, #11]
   2b064:	orr	r6, r0, r3
   2b068:	ldrb	r0, [r8, #10]
   2b06c:	orr	r7, r6, r0, lsl #8
   2b070:	ldrb	r0, [r8, #9]
   2b074:	orr	r4, r7, r0, lsl #16
   2b078:	ldr	r6, [sp, #24]
   2b07c:	movw	r3, #25856	; 0x6500
   2b080:	bic	r2, sl, #255	; 0xff
   2b084:	movt	r3, #31088	; 0x7970
   2b088:	eor	r2, r2, r3
   2b08c:	ldrb	r0, [r6]
   2b090:	orr	r1, r4, r0, lsl #24
   2b094:	ldr	r0, [sp, #20]
   2b098:	eor	r0, r1, r0
   2b09c:	orrs	r0, r2, r0
   2b0a0:	bne	2b5cc <main@@Base+0x15370>
   2b0a4:	cmp	ip, #8
   2b0a8:	blt	2c0d4 <main@@Base+0x15e78>
   2b0ac:	ldr	r2, [sp, #28]
   2b0b0:	mov	r1, r8
   2b0b4:	ldrb	r0, [r1, #15]!
   2b0b8:	ldr	r2, [r2]
   2b0bc:	cmp	r2, #0
   2b0c0:	beq	2b774 <main@@Base+0x15518>
   2b0c4:	cmp	r0, #33	; 0x21
   2b0c8:	bcc	2b0d4 <main@@Base+0x14e78>
   2b0cc:	cmp	r0, #58	; 0x3a
   2b0d0:	bne	2c0d4 <main@@Base+0x15e78>
   2b0d4:	ldr	r0, [sp, #28]
   2b0d8:	mov	r2, #0
   2b0dc:	str	r2, [r0]
   2b0e0:	b	2b780 <main@@Base+0x15524>
   2b0e4:	movw	r0, #26720	; 0x6860
   2b0e8:	ldr	r5, [sp, #36]	; 0x24
   2b0ec:	movt	r0, #24419	; 0x5f63
   2b0f0:	subs	r0, r0, r1
   2b0f4:	movw	r0, #26990	; 0x696e
   2b0f8:	movt	r0, #28001	; 0x6d61
   2b0fc:	sbcs	r0, r0, r2
   2b100:	bcc	2b23c <main@@Base+0x14fe0>
   2b104:	movw	r0, #29797	; 0x7465
   2b108:	movt	r0, #24931	; 0x6163
   2b10c:	eor	r0, r1, r0
   2b110:	movw	r1, #24946	; 0x6172
   2b114:	movt	r1, #25448	; 0x6368
   2b118:	eor	r1, r2, r1
   2b11c:	orrs	r0, r0, r1
   2b120:	bne	2b928 <main@@Base+0x156cc>
   2b124:	add	r6, r8, #8
   2b128:	mov	r1, #8
   2b12c:	sub	ip, r9, r6
   2b130:	cmp	ip, #8
   2b134:	movcc	r1, ip
   2b138:	sub	r2, r1, #1
   2b13c:	cmp	r2, #7
   2b140:	bhi	2c0d4 <main@@Base+0x15e78>
   2b144:	str	r6, [sp, #24]
   2b148:	add	r0, pc, #32
   2b14c:	mov	r1, #0
   2b150:	mov	lr, #0
   2b154:	mov	sl, #0
   2b158:	mov	r3, #0
   2b15c:	mov	r6, #0
   2b160:	mov	r7, #0
   2b164:	mov	r4, #0
   2b168:	ldr	r2, [r0, r2, lsl #2]
   2b16c:	add	pc, r0, r2
   2b170:	andeq	r0, r0, ip, asr r0
   2b174:	andeq	r0, r0, r4, asr r0
   2b178:	andeq	r0, r0, ip, asr #32
   2b17c:	andeq	r0, r0, r4, asr #32
   2b180:	andeq	r0, r0, r8, lsr r0
   2b184:	andeq	r0, r0, r8, lsr #32
   2b188:	andeq	r0, r0, r0, lsr #32
   2b18c:	andeq	r0, r0, r0, lsr #32
   2b190:	ldrb	r0, [r8, #14]
   2b194:	lsl	lr, r0, #8
   2b198:	ldrb	r0, [r8, #13]
   2b19c:	mov	sl, r1
   2b1a0:	orr	r0, lr, r0, lsl #16
   2b1a4:	mov	r1, r0
   2b1a8:	ldrb	r0, [r8, #12]
   2b1ac:	mov	r3, sl
   2b1b0:	orr	r1, r1, r0, lsl #24
   2b1b4:	ldrb	r0, [r8, #11]
   2b1b8:	orr	r6, r0, r3
   2b1bc:	ldrb	r0, [r8, #10]
   2b1c0:	orr	r7, r6, r0, lsl #8
   2b1c4:	ldrb	r0, [r8, #9]
   2b1c8:	orr	r4, r7, r0, lsl #16
   2b1cc:	ldr	r6, [sp, #24]
   2b1d0:	bic	r0, r1, #255	; 0xff
   2b1d4:	movw	r1, #25856	; 0x6500
   2b1d8:	movw	r2, #24436	; 0x5f74
   2b1dc:	movt	r1, #31088	; 0x7970
   2b1e0:	movt	r2, #29299	; 0x7273
   2b1e4:	eor	r0, r0, r1
   2b1e8:	ldrb	r1, [r6]
   2b1ec:	orr	r1, r4, r1, lsl #24
   2b1f0:	eor	r2, r1, r2
   2b1f4:	orrs	r0, r0, r2
   2b1f8:	bne	2b620 <main@@Base+0x153c4>
   2b1fc:	cmp	ip, #8
   2b200:	blt	2c0d4 <main@@Base+0x15e78>
   2b204:	ldr	r2, [sp, #28]
   2b208:	mov	r1, r8
   2b20c:	ldrb	r0, [r1, #15]!
   2b210:	ldr	r2, [r2]
   2b214:	cmp	r2, #0
   2b218:	beq	2b7f4 <main@@Base+0x15598>
   2b21c:	cmp	r0, #33	; 0x21
   2b220:	bcc	2b22c <main@@Base+0x14fd0>
   2b224:	cmp	r0, #58	; 0x3a
   2b228:	bne	2c0d4 <main@@Base+0x15e78>
   2b22c:	ldr	r0, [sp, #28]
   2b230:	mov	r2, #0
   2b234:	str	r2, [r0]
   2b238:	b	2b800 <main@@Base+0x155a4>
   2b23c:	movw	r0, #26979	; 0x6963
   2b240:	movw	r3, #25701	; 0x6465
   2b244:	movt	r0, #24427	; 0x5f6b
   2b248:	movt	r3, #29545	; 0x7369
   2b24c:	eor	r0, r1, r0
   2b250:	eor	r3, r2, r3
   2b254:	orrs	r0, r0, r3
   2b258:	beq	2b4cc <main@@Base+0x15270>
   2b25c:	movw	r0, #26721	; 0x6861
   2b260:	movt	r0, #24419	; 0x5f63
   2b264:	eor	r0, r1, r0
   2b268:	movw	r1, #26990	; 0x696e
   2b26c:	movt	r1, #28001	; 0x6d61
   2b270:	eor	r1, r2, r1
   2b274:	orrs	r0, r0, r1
   2b278:	bne	2b928 <main@@Base+0x156cc>
   2b27c:	add	r4, r8, #8
   2b280:	mov	r1, #8
   2b284:	sub	lr, r9, r4
   2b288:	cmp	lr, #8
   2b28c:	movcc	r1, lr
   2b290:	sub	r2, r1, #1
   2b294:	cmp	r2, #7
   2b298:	bhi	2c2d0 <main@@Base+0x16074>
   2b29c:	str	r4, [sp, #24]
   2b2a0:	add	r0, pc, #36	; 0x24
   2b2a4:	mov	r1, #0
   2b2a8:	mov	ip, #0
   2b2ac:	mov	sl, #0
   2b2b0:	mov	r6, #0
   2b2b4:	mov	r3, #0
   2b2b8:	mov	r5, #0
   2b2bc:	mov	r7, #0
   2b2c0:	ldr	r4, [r0, r2, lsl #2]
   2b2c4:	mov	r2, #0
   2b2c8:	add	pc, r0, r4
   2b2cc:	andeq	r0, r0, r4, rrx
   2b2d0:	andeq	r0, r0, ip, asr r0
   2b2d4:	andeq	r0, r0, r4, asr r0
   2b2d8:	andeq	r0, r0, ip, asr #32
   2b2dc:	andeq	r0, r0, r0, asr #32
   2b2e0:	andeq	r0, r0, r4, lsr r0
   2b2e4:	andeq	r0, r0, r4, lsr #32
   2b2e8:	andeq	r0, r0, r0, lsr #32
   2b2ec:	ldrb	ip, [r8, #15]
   2b2f0:	ldrb	r0, [r8, #14]
   2b2f4:	mov	sl, r1
   2b2f8:	orr	r0, ip, r0, lsl #8
   2b2fc:	mov	r1, r0
   2b300:	ldrb	r0, [r8, #13]
   2b304:	mov	r6, sl
   2b308:	orr	r1, r1, r0, lsl #16
   2b30c:	ldrb	r0, [r8, #12]
   2b310:	mov	r3, r6
   2b314:	orr	r1, r1, r0, lsl #24
   2b318:	ldrb	r0, [r8, #11]
   2b31c:	orr	r5, r0, r3
   2b320:	ldrb	r0, [r8, #10]
   2b324:	orr	r7, r5, r0, lsl #8
   2b328:	ldrb	r0, [r8, #9]
   2b32c:	orr	r2, r7, r0, lsl #16
   2b330:	ldr	r4, [sp, #24]
   2b334:	movw	r0, #24436	; 0x5f74
   2b338:	movt	r0, #25970	; 0x6572
   2b33c:	eor	r0, r1, r0
   2b340:	ldrb	r3, [r4]
   2b344:	orr	r2, r2, r3, lsl #24
   2b348:	movw	r3, #25460	; 0x6374
   2b34c:	movt	r3, #29281	; 0x7261
   2b350:	eor	r3, r2, r3
   2b354:	orrs	r0, r0, r3
   2b358:	bne	2b674 <main@@Base+0x15418>
   2b35c:	add	r4, r8, #16
   2b360:	ldr	r5, [sp, #36]	; 0x24
   2b364:	mov	r2, #8
   2b368:	sub	r0, r9, r4
   2b36c:	cmp	r0, #8
   2b370:	movcc	r2, r0
   2b374:	sub	r1, r2, #3
   2b378:	cmp	r1, #6
   2b37c:	bcs	2b7dc <main@@Base+0x15580>
   2b380:	ldrb	r1, [r8, #18]
   2b384:	lsl	r1, r1, #8
   2b388:	ldrb	r2, [r8, #17]
   2b38c:	orr	r1, r1, r2, lsl #16
   2b390:	ldrb	r2, [r4]
   2b394:	bic	r1, r1, #255	; 0xff
   2b398:	orr	r1, r1, r2, lsl #24
   2b39c:	movw	r2, #25856	; 0x6500
   2b3a0:	movt	r2, #31088	; 0x7970
   2b3a4:	teq	r1, r2
   2b3a8:	bne	2c2d0 <main@@Base+0x16074>
   2b3ac:	cmp	r0, #4
   2b3b0:	blt	2c2d0 <main@@Base+0x16074>
   2b3b4:	ldr	r2, [sp, #28]
   2b3b8:	mov	r1, r8
   2b3bc:	ldrb	r0, [r1, #19]!
   2b3c0:	ldr	r2, [r2]
   2b3c4:	cmp	r2, #0
   2b3c8:	beq	2bb24 <main@@Base+0x158c8>
   2b3cc:	cmp	r0, #33	; 0x21
   2b3d0:	bcc	2b3dc <main@@Base+0x15180>
   2b3d4:	cmp	r0, #58	; 0x3a
   2b3d8:	bne	2c2d0 <main@@Base+0x16074>
   2b3dc:	ldr	r0, [sp, #28]
   2b3e0:	mov	r2, #0
   2b3e4:	str	r2, [r0]
   2b3e8:	b	2bb30 <main@@Base+0x158d4>
   2b3ec:	add	r6, r8, #8
   2b3f0:	mov	r2, #8
   2b3f4:	sub	r0, r9, r6
   2b3f8:	cmp	r0, #8
   2b3fc:	movcc	r2, r0
   2b400:	sub	r1, r2, #2
   2b404:	cmp	r1, #7
   2b408:	bcs	2b6dc <main@@Base+0x15480>
   2b40c:	ldrb	r1, [r8, #9]
   2b410:	lsl	r2, r1, #16
   2b414:	mov	r1, #0
   2b418:	ldrb	r3, [r6]
   2b41c:	orr	r2, r2, r3, lsl #24
   2b420:	movw	r3, #0
   2b424:	movt	r3, #28773	; 0x7065
   2b428:	eor	r2, r2, r3
   2b42c:	orrs	r1, r1, r2
   2b430:	bne	2c0d4 <main@@Base+0x15e78>
   2b434:	cmp	r0, #3
   2b438:	blt	2c0d4 <main@@Base+0x15e78>
   2b43c:	ldr	r2, [sp, #28]
   2b440:	mov	r1, r8
   2b444:	ldrb	r0, [r1, #10]!
   2b448:	ldr	r2, [r2]
   2b44c:	cmp	r2, #0
   2b450:	beq	2b7a8 <main@@Base+0x1554c>
   2b454:	cmp	r0, #33	; 0x21
   2b458:	bcc	2b464 <main@@Base+0x15208>
   2b45c:	cmp	r0, #58	; 0x3a
   2b460:	bne	2c0d4 <main@@Base+0x15e78>
   2b464:	ldr	r0, [sp, #28]
   2b468:	mov	r2, #0
   2b46c:	str	r2, [r0]
   2b470:	b	2b7b4 <main@@Base+0x15558>
   2b474:	and	r0, r1, #-16777216	; 0xff000000
   2b478:	eor	r0, r0, #1862270976	; 0x6f000000
   2b47c:	orrs	r0, r0, r3
   2b480:	bne	2b928 <main@@Base+0x156cc>
   2b484:	cmp	ip, #6
   2b488:	mov	r1, r8
   2b48c:	blt	2bcf0 <main@@Base+0x15a94>
   2b490:	ldr	r1, [sp, #28]
   2b494:	mov	r2, r8
   2b498:	ldrb	r0, [r2, #5]!
   2b49c:	ldr	r1, [r1]
   2b4a0:	cmp	r1, #0
   2b4a4:	beq	2b73c <main@@Base+0x154e0>
   2b4a8:	cmp	r0, #33	; 0x21
   2b4ac:	bcc	2b4bc <main@@Base+0x15260>
   2b4b0:	cmp	r0, #58	; 0x3a
   2b4b4:	mov	r1, r8
   2b4b8:	bne	2bcf0 <main@@Base+0x15a94>
   2b4bc:	ldr	r0, [sp, #28]
   2b4c0:	mov	r1, #0
   2b4c4:	str	r1, [r0]
   2b4c8:	b	2b74c <main@@Base+0x154f0>
   2b4cc:	add	sl, r8, #8
   2b4d0:	mov	r1, #8
   2b4d4:	sub	r0, r9, sl
   2b4d8:	cmp	r0, #8
   2b4dc:	movcc	r1, r0
   2b4e0:	sub	r2, r1, #1
   2b4e4:	cmp	r2, #7
   2b4e8:	bhi	2c258 <main@@Base+0x15ffc>
   2b4ec:	add	r4, pc, #28
   2b4f0:	mov	ip, #0
   2b4f4:	mov	r3, #0
   2b4f8:	mov	r6, #0
   2b4fc:	mov	r7, #0
   2b500:	mov	r5, #0
   2b504:	ldr	r1, [r4, r2, lsl #2]
   2b508:	mov	r2, #0
   2b50c:	add	pc, r4, r1
   2b510:	andeq	r0, r0, r0, asr r0
   2b514:	andeq	r0, r0, r8, asr #32
   2b518:	andeq	r0, r0, r0, asr #32
   2b51c:	andeq	r0, r0, r8, lsr r0
   2b520:	andeq	r0, r0, r8, lsr #32
   2b524:	andeq	r0, r0, r0, lsr #32
   2b528:	andeq	r0, r0, r0, lsr #32
   2b52c:	andeq	r0, r0, r0, lsr #32
   2b530:	ldrb	r1, [r8, #13]
   2b534:	lsl	r2, r1, #16
   2b538:	ldrb	r1, [r8, #12]
   2b53c:	mov	r3, ip
   2b540:	orr	r1, r2, r1, lsl #24
   2b544:	mov	ip, r1
   2b548:	ldrb	r1, [r8, #11]
   2b54c:	orr	r6, r1, r3
   2b550:	ldrb	r1, [r8, #10]
   2b554:	orr	r7, r6, r1, lsl #8
   2b558:	ldrb	r1, [r8, #9]
   2b55c:	orr	r5, r7, r1, lsl #16
   2b560:	ldrb	r1, [sl]
   2b564:	movw	r7, #28773	; 0x7065
   2b568:	lsr	r3, ip, #16
   2b56c:	movt	r7, #29817	; 0x7479
   2b570:	orr	r2, r5, r1, lsl #24
   2b574:	movw	r1, #27487	; 0x6b5f
   2b578:	orr	r3, r3, r2, lsl #16
   2b57c:	eor	r1, r1, r2, lsr #16
   2b580:	eor	r3, r3, r7
   2b584:	orrs	r1, r3, r1
   2b588:	bne	2b6f0 <main@@Base+0x15494>
   2b58c:	cmp	r0, #7
   2b590:	blt	2c258 <main@@Base+0x15ffc>
   2b594:	ldr	r2, [sp, #28]
   2b598:	mov	r1, r8
   2b59c:	ldrb	r0, [r1, #14]!
   2b5a0:	ldr	r2, [r2]
   2b5a4:	cmp	r2, #0
   2b5a8:	beq	2b828 <main@@Base+0x155cc>
   2b5ac:	cmp	r0, #33	; 0x21
   2b5b0:	bcc	2b5bc <main@@Base+0x15360>
   2b5b4:	cmp	r0, #58	; 0x3a
   2b5b8:	bne	2c258 <main@@Base+0x15ffc>
   2b5bc:	ldr	r0, [sp, #28]
   2b5c0:	mov	r2, #0
   2b5c4:	str	r2, [r0]
   2b5c8:	b	2b834 <main@@Base+0x155d8>
   2b5cc:	movw	r0, #0
   2b5d0:	bfc	r1, #0, #16
   2b5d4:	movt	r0, #29556	; 0x7374
   2b5d8:	teq	r1, r0
   2b5dc:	bne	2c0d4 <main@@Base+0x15e78>
   2b5e0:	cmp	ip, #3
   2b5e4:	blt	2c0d4 <main@@Base+0x15e78>
   2b5e8:	ldr	r2, [sp, #28]
   2b5ec:	mov	r1, r8
   2b5f0:	ldrb	r0, [r1, #10]!
   2b5f4:	ldr	r2, [r2]
   2b5f8:	cmp	r2, #0
   2b5fc:	beq	2b85c <main@@Base+0x15600>
   2b600:	cmp	r0, #33	; 0x21
   2b604:	bcc	2b610 <main@@Base+0x153b4>
   2b608:	cmp	r0, #58	; 0x3a
   2b60c:	bne	2c0d4 <main@@Base+0x15e78>
   2b610:	ldr	r0, [sp, #28]
   2b614:	mov	r2, #0
   2b618:	str	r2, [r0]
   2b61c:	b	2b868 <main@@Base+0x1560c>
   2b620:	movw	r0, #0
   2b624:	bfc	r1, #0, #16
   2b628:	movt	r0, #29299	; 0x7273
   2b62c:	teq	r1, r0
   2b630:	bne	2c0d4 <main@@Base+0x15e78>
   2b634:	cmp	ip, #3
   2b638:	blt	2c0d4 <main@@Base+0x15e78>
   2b63c:	ldr	r2, [sp, #28]
   2b640:	mov	r1, r8
   2b644:	ldrb	r0, [r1, #10]!
   2b648:	ldr	r2, [r2]
   2b64c:	cmp	r2, #0
   2b650:	beq	2b890 <main@@Base+0x15634>
   2b654:	cmp	r0, #33	; 0x21
   2b658:	bcc	2b664 <main@@Base+0x15408>
   2b65c:	cmp	r0, #58	; 0x3a
   2b660:	bne	2c0d4 <main@@Base+0x15e78>
   2b664:	ldr	r0, [sp, #28]
   2b668:	mov	r2, #0
   2b66c:	str	r2, [r0]
   2b670:	b	2b89c <main@@Base+0x15640>
   2b674:	movw	r0, #29281	; 0x7261
   2b678:	lsr	r1, r1, #16
   2b67c:	ldr	r5, [sp, #36]	; 0x24
   2b680:	eor	r0, r0, r2, lsr #16
   2b684:	orr	r1, r1, r2, lsl #16
   2b688:	movw	r2, #25970	; 0x6572
   2b68c:	movt	r2, #25460	; 0x6374
   2b690:	eor	r1, r1, r2
   2b694:	orrs	r0, r1, r0
   2b698:	bne	2c2d0 <main@@Base+0x16074>
   2b69c:	cmp	lr, #7
   2b6a0:	blt	2c2d0 <main@@Base+0x16074>
   2b6a4:	ldr	r2, [sp, #28]
   2b6a8:	mov	r1, r8
   2b6ac:	ldrb	r0, [r1, #14]!
   2b6b0:	ldr	r2, [r2]
   2b6b4:	cmp	r2, #0
   2b6b8:	beq	2ba40 <main@@Base+0x157e4>
   2b6bc:	cmp	r0, #33	; 0x21
   2b6c0:	bcc	2b6cc <main@@Base+0x15470>
   2b6c4:	cmp	r0, #58	; 0x3a
   2b6c8:	bne	2c2d0 <main@@Base+0x16074>
   2b6cc:	ldr	r0, [sp, #28]
   2b6d0:	mov	r2, #0
   2b6d4:	str	r2, [r0]
   2b6d8:	b	2ba4c <main@@Base+0x157f0>
   2b6dc:	cmp	r2, #1
   2b6e0:	mov	r1, #0
   2b6e4:	mov	r2, #0
   2b6e8:	beq	2b418 <main@@Base+0x151bc>
   2b6ec:	b	2c0d4 <main@@Base+0x15e78>
   2b6f0:	and	r1, r2, #-16777216	; 0xff000000
   2b6f4:	teq	r1, #1795162112	; 0x6b000000
   2b6f8:	bne	2c258 <main@@Base+0x15ffc>
   2b6fc:	cmp	r0, #2
   2b700:	blt	2c258 <main@@Base+0x15ffc>
   2b704:	ldr	r2, [sp, #28]
   2b708:	mov	r1, r8
   2b70c:	ldrb	r0, [r1, #9]!
   2b710:	ldr	r2, [r2]
   2b714:	cmp	r2, #0
   2b718:	beq	2ba74 <main@@Base+0x15818>
   2b71c:	cmp	r0, #33	; 0x21
   2b720:	bcc	2b72c <main@@Base+0x154d0>
   2b724:	cmp	r0, #58	; 0x3a
   2b728:	bne	2c258 <main@@Base+0x15ffc>
   2b72c:	ldr	r0, [sp, #28]
   2b730:	mov	r2, #0
   2b734:	str	r2, [r0]
   2b738:	b	2ba80 <main@@Base+0x15824>
   2b73c:	cmp	r0, #34	; 0x22
   2b740:	mov	r1, r8
   2b744:	bne	2bcf0 <main@@Base+0x15a94>
   2b748:	add	r2, r8, #6
   2b74c:	sub	r0, r9, r2
   2b750:	cmp	r0, #2
   2b754:	blt	2b8d8 <main@@Base+0x1567c>
   2b758:	ldrb	r0, [r2]
   2b75c:	cmp	r0, #32
   2b760:	bls	2b8c4 <main@@Base+0x15668>
   2b764:	mov	r1, r2
   2b768:	cmp	r1, r9
   2b76c:	bne	2b8f4 <main@@Base+0x15698>
   2b770:	b	2b934 <main@@Base+0x156d8>
   2b774:	cmp	r0, #34	; 0x22
   2b778:	bne	2c0d4 <main@@Base+0x15e78>
   2b77c:	add	r1, r8, #16
   2b780:	sub	r0, r9, r1
   2b784:	cmp	r0, #2
   2b788:	blt	2b95c <main@@Base+0x15700>
   2b78c:	ldrb	r0, [r1]
   2b790:	cmp	r0, #32
   2b794:	bls	2b948 <main@@Base+0x156ec>
   2b798:	mov	r2, r1
   2b79c:	cmp	r2, r9
   2b7a0:	bne	2b974 <main@@Base+0x15718>
   2b7a4:	b	2b9ac <main@@Base+0x15750>
   2b7a8:	cmp	r0, #34	; 0x22
   2b7ac:	bne	2c0d4 <main@@Base+0x15e78>
   2b7b0:	add	r1, r8, #11
   2b7b4:	sub	r0, r9, r1
   2b7b8:	cmp	r0, #2
   2b7bc:	blt	2b9d8 <main@@Base+0x1577c>
   2b7c0:	ldrb	r0, [r1]
   2b7c4:	cmp	r0, #32
   2b7c8:	bls	2b9c4 <main@@Base+0x15768>
   2b7cc:	mov	r2, r1
   2b7d0:	cmp	r2, r9
   2b7d4:	bne	2b9f0 <main@@Base+0x15794>
   2b7d8:	b	2ba28 <main@@Base+0x157cc>
   2b7dc:	mov	r1, #0
   2b7e0:	cmp	r2, #1
   2b7e4:	beq	2b390 <main@@Base+0x15134>
   2b7e8:	cmp	r2, #2
   2b7ec:	beq	2b388 <main@@Base+0x1512c>
   2b7f0:	b	2c2d0 <main@@Base+0x16074>
   2b7f4:	cmp	r0, #34	; 0x22
   2b7f8:	bne	2c0d4 <main@@Base+0x15e78>
   2b7fc:	add	r1, r8, #16
   2b800:	sub	r0, r9, r1
   2b804:	cmp	r0, #2
   2b808:	blt	2babc <main@@Base+0x15860>
   2b80c:	ldrb	r0, [r1]
   2b810:	cmp	r0, #32
   2b814:	bls	2baa8 <main@@Base+0x1584c>
   2b818:	mov	r2, r1
   2b81c:	cmp	r2, r9
   2b820:	bne	2bad4 <main@@Base+0x15878>
   2b824:	b	2bb0c <main@@Base+0x158b0>
   2b828:	cmp	r0, #34	; 0x22
   2b82c:	bne	2c258 <main@@Base+0x15ffc>
   2b830:	add	r1, r8, #15
   2b834:	sub	r0, r9, r1
   2b838:	cmp	r0, #2
   2b83c:	blt	2bb6c <main@@Base+0x15910>
   2b840:	ldrb	r0, [r1]
   2b844:	cmp	r0, #32
   2b848:	bls	2bb58 <main@@Base+0x158fc>
   2b84c:	mov	r2, r1
   2b850:	cmp	r2, r9
   2b854:	bne	2bb84 <main@@Base+0x15928>
   2b858:	b	2bbbc <main@@Base+0x15960>
   2b85c:	cmp	r0, #34	; 0x22
   2b860:	bne	2c0d4 <main@@Base+0x15e78>
   2b864:	add	r1, r8, #11
   2b868:	sub	r0, r9, r1
   2b86c:	cmp	r0, #2
   2b870:	blt	2bbe8 <main@@Base+0x1598c>
   2b874:	ldrb	r0, [r1]
   2b878:	cmp	r0, #32
   2b87c:	bls	2bbd4 <main@@Base+0x15978>
   2b880:	mov	r2, r1
   2b884:	cmp	r2, r9
   2b888:	bne	2bc00 <main@@Base+0x159a4>
   2b88c:	b	2bc38 <main@@Base+0x159dc>
   2b890:	cmp	r0, #34	; 0x22
   2b894:	bne	2c0d4 <main@@Base+0x15e78>
   2b898:	add	r1, r8, #11
   2b89c:	sub	r0, r9, r1
   2b8a0:	cmp	r0, #2
   2b8a4:	blt	2bc64 <main@@Base+0x15a08>
   2b8a8:	ldrb	r0, [r1]
   2b8ac:	cmp	r0, #32
   2b8b0:	bls	2bc50 <main@@Base+0x159f4>
   2b8b4:	mov	r2, r1
   2b8b8:	cmp	r2, r9
   2b8bc:	bne	2bc7c <main@@Base+0x15a20>
   2b8c0:	b	2bcb4 <main@@Base+0x15a58>
   2b8c4:	bne	2b8d8 <main@@Base+0x1567c>
   2b8c8:	mov	r1, r2
   2b8cc:	ldrb	r0, [r1, #1]!
   2b8d0:	cmp	r0, #32
   2b8d4:	bhi	2b8ec <main@@Base+0x15690>
   2b8d8:	mov	r1, r2
   2b8dc:	mov	r0, r5
   2b8e0:	mov	r2, r9
   2b8e4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2b8e8:	mov	r1, r0
   2b8ec:	cmp	r1, r9
   2b8f0:	beq	2b934 <main@@Base+0x156d8>
   2b8f4:	ldrb	r0, [r1]
   2b8f8:	cmp	r0, #58	; 0x3a
   2b8fc:	bne	2b934 <main@@Base+0x156d8>
   2b900:	add	r2, r1, #1
   2b904:	sub	r0, r9, r2
   2b908:	cmp	r0, #2
   2b90c:	blt	2bcdc <main@@Base+0x15a80>
   2b910:	ldrb	r0, [r2]
   2b914:	cmp	r0, #32
   2b918:	bls	2bccc <main@@Base+0x15a70>
   2b91c:	mov	r1, r2
   2b920:	cmp	r8, r1
   2b924:	bne	2bcf8 <main@@Base+0x15a9c>
   2b928:	mov	r0, r5
   2b92c:	mov	r1, r8
   2b930:	b	2c0dc <main@@Base+0x15e80>
   2b934:	mov	r0, r5
   2b938:	mov	r2, r9
   2b93c:	mov	r3, #4
   2b940:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2b944:	b	2bcec <main@@Base+0x15a90>
   2b948:	bne	2b95c <main@@Base+0x15700>
   2b94c:	mov	r2, r1
   2b950:	ldrb	r0, [r2, #1]!
   2b954:	cmp	r0, #32
   2b958:	bhi	2b96c <main@@Base+0x15710>
   2b95c:	mov	r0, r5
   2b960:	mov	r2, r9
   2b964:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2b968:	mov	r2, r0
   2b96c:	cmp	r2, r9
   2b970:	beq	2b9ac <main@@Base+0x15750>
   2b974:	ldrb	r0, [r2]
   2b978:	cmp	r0, #58	; 0x3a
   2b97c:	bne	2b9ac <main@@Base+0x15750>
   2b980:	add	r1, r2, #1
   2b984:	sub	r0, r9, r1
   2b988:	cmp	r0, #2
   2b98c:	blt	2bd38 <main@@Base+0x15adc>
   2b990:	ldrb	r0, [r1]
   2b994:	cmp	r0, #32
   2b998:	bls	2bd28 <main@@Base+0x15acc>
   2b99c:	mov	r2, r1
   2b9a0:	cmp	r6, r2
   2b9a4:	bne	2bd50 <main@@Base+0x15af4>
   2b9a8:	b	2c0d4 <main@@Base+0x15e78>
   2b9ac:	mov	r1, r2
   2b9b0:	mov	r0, r5
   2b9b4:	mov	r2, r9
   2b9b8:	mov	r3, #4
   2b9bc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2b9c0:	b	2bd44 <main@@Base+0x15ae8>
   2b9c4:	bne	2b9d8 <main@@Base+0x1577c>
   2b9c8:	mov	r2, r1
   2b9cc:	ldrb	r0, [r2, #1]!
   2b9d0:	cmp	r0, #32
   2b9d4:	bhi	2b9e8 <main@@Base+0x1578c>
   2b9d8:	mov	r0, r5
   2b9dc:	mov	r2, r9
   2b9e0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2b9e4:	mov	r2, r0
   2b9e8:	cmp	r2, r9
   2b9ec:	beq	2ba28 <main@@Base+0x157cc>
   2b9f0:	ldrb	r0, [r2]
   2b9f4:	cmp	r0, #58	; 0x3a
   2b9f8:	bne	2ba28 <main@@Base+0x157cc>
   2b9fc:	add	r1, r2, #1
   2ba00:	sub	r0, r9, r1
   2ba04:	cmp	r0, #2
   2ba08:	blt	2bd94 <main@@Base+0x15b38>
   2ba0c:	ldrb	r0, [r1]
   2ba10:	cmp	r0, #32
   2ba14:	bls	2bd84 <main@@Base+0x15b28>
   2ba18:	mov	r2, r1
   2ba1c:	cmp	r6, r2
   2ba20:	bne	2bdac <main@@Base+0x15b50>
   2ba24:	b	2c0d4 <main@@Base+0x15e78>
   2ba28:	mov	r1, r2
   2ba2c:	mov	r0, r5
   2ba30:	mov	r2, r9
   2ba34:	mov	r3, #4
   2ba38:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2ba3c:	b	2bda0 <main@@Base+0x15b44>
   2ba40:	cmp	r0, #34	; 0x22
   2ba44:	bne	2c2d0 <main@@Base+0x16074>
   2ba48:	add	r1, r8, #15
   2ba4c:	sub	r0, r9, r1
   2ba50:	cmp	r0, #2
   2ba54:	blt	2bdf4 <main@@Base+0x15b98>
   2ba58:	ldrb	r0, [r1]
   2ba5c:	cmp	r0, #32
   2ba60:	bls	2bde0 <main@@Base+0x15b84>
   2ba64:	mov	r2, r1
   2ba68:	cmp	r2, r9
   2ba6c:	bne	2be0c <main@@Base+0x15bb0>
   2ba70:	b	2be44 <main@@Base+0x15be8>
   2ba74:	cmp	r0, #34	; 0x22
   2ba78:	bne	2c258 <main@@Base+0x15ffc>
   2ba7c:	add	r1, r8, #10
   2ba80:	sub	r0, r9, r1
   2ba84:	cmp	r0, #2
   2ba88:	blt	2be70 <main@@Base+0x15c14>
   2ba8c:	ldrb	r0, [r1]
   2ba90:	cmp	r0, #32
   2ba94:	bls	2be5c <main@@Base+0x15c00>
   2ba98:	mov	r2, r1
   2ba9c:	cmp	r2, r9
   2baa0:	bne	2be88 <main@@Base+0x15c2c>
   2baa4:	b	2bec0 <main@@Base+0x15c64>
   2baa8:	bne	2babc <main@@Base+0x15860>
   2baac:	mov	r2, r1
   2bab0:	ldrb	r0, [r2, #1]!
   2bab4:	cmp	r0, #32
   2bab8:	bhi	2bacc <main@@Base+0x15870>
   2babc:	mov	r0, r5
   2bac0:	mov	r2, r9
   2bac4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2bac8:	mov	r2, r0
   2bacc:	cmp	r2, r9
   2bad0:	beq	2bb0c <main@@Base+0x158b0>
   2bad4:	ldrb	r0, [r2]
   2bad8:	cmp	r0, #58	; 0x3a
   2badc:	bne	2bb0c <main@@Base+0x158b0>
   2bae0:	add	r1, r2, #1
   2bae4:	sub	r0, r9, r1
   2bae8:	cmp	r0, #2
   2baec:	blt	2bee8 <main@@Base+0x15c8c>
   2baf0:	ldrb	r0, [r1]
   2baf4:	cmp	r0, #32
   2baf8:	bls	2bed8 <main@@Base+0x15c7c>
   2bafc:	mov	r2, r1
   2bb00:	cmp	r6, r2
   2bb04:	bne	2bf00 <main@@Base+0x15ca4>
   2bb08:	b	2c0d4 <main@@Base+0x15e78>
   2bb0c:	mov	r1, r2
   2bb10:	mov	r0, r5
   2bb14:	mov	r2, r9
   2bb18:	mov	r3, #4
   2bb1c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2bb20:	b	2bef4 <main@@Base+0x15c98>
   2bb24:	cmp	r0, #34	; 0x22
   2bb28:	bne	2c2d0 <main@@Base+0x16074>
   2bb2c:	add	r1, r8, #20
   2bb30:	sub	r0, r9, r1
   2bb34:	cmp	r0, #2
   2bb38:	blt	2bf60 <main@@Base+0x15d04>
   2bb3c:	ldrb	r0, [r1]
   2bb40:	cmp	r0, #32
   2bb44:	bls	2bf4c <main@@Base+0x15cf0>
   2bb48:	mov	r2, r1
   2bb4c:	cmp	r2, r9
   2bb50:	bne	2bf78 <main@@Base+0x15d1c>
   2bb54:	b	2bfb0 <main@@Base+0x15d54>
   2bb58:	bne	2bb6c <main@@Base+0x15910>
   2bb5c:	mov	r2, r1
   2bb60:	ldrb	r0, [r2, #1]!
   2bb64:	cmp	r0, #32
   2bb68:	bhi	2bb7c <main@@Base+0x15920>
   2bb6c:	ldr	r0, [sp, #36]	; 0x24
   2bb70:	mov	r2, r9
   2bb74:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2bb78:	mov	r2, r0
   2bb7c:	cmp	r2, r9
   2bb80:	beq	2bbbc <main@@Base+0x15960>
   2bb84:	ldrb	r0, [r2]
   2bb88:	cmp	r0, #58	; 0x3a
   2bb8c:	bne	2bbbc <main@@Base+0x15960>
   2bb90:	add	r1, r2, #1
   2bb94:	sub	r0, r9, r1
   2bb98:	cmp	r0, #2
   2bb9c:	blt	2c028 <main@@Base+0x15dcc>
   2bba0:	ldrb	r0, [r1]
   2bba4:	cmp	r0, #32
   2bba8:	bls	2c018 <main@@Base+0x15dbc>
   2bbac:	mov	r2, r1
   2bbb0:	cmp	sl, r2
   2bbb4:	bne	2c040 <main@@Base+0x15de4>
   2bbb8:	b	2c258 <main@@Base+0x15ffc>
   2bbbc:	ldr	r0, [sp, #36]	; 0x24
   2bbc0:	mov	r1, r2
   2bbc4:	mov	r2, r9
   2bbc8:	mov	r3, #4
   2bbcc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2bbd0:	b	2c034 <main@@Base+0x15dd8>
   2bbd4:	bne	2bbe8 <main@@Base+0x1598c>
   2bbd8:	mov	r2, r1
   2bbdc:	ldrb	r0, [r2, #1]!
   2bbe0:	cmp	r0, #32
   2bbe4:	bhi	2bbf8 <main@@Base+0x1599c>
   2bbe8:	mov	r0, r5
   2bbec:	mov	r2, r9
   2bbf0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2bbf4:	mov	r2, r0
   2bbf8:	cmp	r2, r9
   2bbfc:	beq	2bc38 <main@@Base+0x159dc>
   2bc00:	ldrb	r0, [r2]
   2bc04:	cmp	r0, #58	; 0x3a
   2bc08:	bne	2bc38 <main@@Base+0x159dc>
   2bc0c:	add	r1, r2, #1
   2bc10:	sub	r0, r9, r1
   2bc14:	cmp	r0, #2
   2bc18:	blt	2bfd8 <main@@Base+0x15d7c>
   2bc1c:	ldrb	r0, [r1]
   2bc20:	cmp	r0, #32
   2bc24:	bls	2bfc8 <main@@Base+0x15d6c>
   2bc28:	mov	r2, r1
   2bc2c:	cmp	r6, r2
   2bc30:	bne	2bff0 <main@@Base+0x15d94>
   2bc34:	b	2c0d4 <main@@Base+0x15e78>
   2bc38:	mov	r1, r2
   2bc3c:	mov	r0, r5
   2bc40:	mov	r2, r9
   2bc44:	mov	r3, #4
   2bc48:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2bc4c:	b	2bfe4 <main@@Base+0x15d88>
   2bc50:	bne	2bc64 <main@@Base+0x15a08>
   2bc54:	mov	r2, r1
   2bc58:	ldrb	r0, [r2, #1]!
   2bc5c:	cmp	r0, #32
   2bc60:	bhi	2bc74 <main@@Base+0x15a18>
   2bc64:	mov	r0, r5
   2bc68:	mov	r2, r9
   2bc6c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2bc70:	mov	r2, r0
   2bc74:	cmp	r2, r9
   2bc78:	beq	2bcb4 <main@@Base+0x15a58>
   2bc7c:	ldrb	r0, [r2]
   2bc80:	cmp	r0, #58	; 0x3a
   2bc84:	bne	2bcb4 <main@@Base+0x15a58>
   2bc88:	add	r1, r2, #1
   2bc8c:	sub	r0, r9, r1
   2bc90:	cmp	r0, #2
   2bc94:	blt	2c088 <main@@Base+0x15e2c>
   2bc98:	ldrb	r0, [r1]
   2bc9c:	cmp	r0, #32
   2bca0:	bls	2c078 <main@@Base+0x15e1c>
   2bca4:	mov	r2, r1
   2bca8:	cmp	r6, r2
   2bcac:	bne	2c0a0 <main@@Base+0x15e44>
   2bcb0:	b	2c0d4 <main@@Base+0x15e78>
   2bcb4:	mov	r1, r2
   2bcb8:	mov	r0, r5
   2bcbc:	mov	r2, r9
   2bcc0:	mov	r3, #4
   2bcc4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2bcc8:	b	2c094 <main@@Base+0x15e38>
   2bccc:	bne	2bcdc <main@@Base+0x15a80>
   2bcd0:	ldrb	r0, [r1, #2]!
   2bcd4:	cmp	r0, #32
   2bcd8:	bhi	2bcf0 <main@@Base+0x15a94>
   2bcdc:	mov	r1, r2
   2bce0:	mov	r0, r5
   2bce4:	mov	r2, r9
   2bce8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2bcec:	mov	r1, r0
   2bcf0:	cmp	r8, r1
   2bcf4:	beq	2b928 <main@@Base+0x156cc>
   2bcf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bcfc:	mov	r2, #7
   2bd00:	mov	r3, #3
   2bd04:	str	r2, [sp]
   2bd08:	mov	r2, r9
   2bd0c:	str	r0, [sp, #4]
   2bd10:	ldr	r0, [pc, #1616]	; 2c368 <main@@Base+0x1610c>
   2bd14:	add	r0, pc, r0
   2bd18:	str	r0, [sp, #8]
   2bd1c:	mov	r0, r5
   2bd20:	bl	38c60 <flatcc_json_parser_union@@Base>
   2bd24:	b	2c0e4 <main@@Base+0x15e88>
   2bd28:	bne	2bd38 <main@@Base+0x15adc>
   2bd2c:	ldrb	r0, [r2, #2]!
   2bd30:	cmp	r0, #32
   2bd34:	bhi	2bd48 <main@@Base+0x15aec>
   2bd38:	mov	r0, r5
   2bd3c:	mov	r2, r9
   2bd40:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2bd44:	mov	r2, r0
   2bd48:	cmp	r6, r2
   2bd4c:	beq	2c0d4 <main@@Base+0x15e78>
   2bd50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bd54:	mov	r1, #3
   2bd58:	mov	r3, #1
   2bd5c:	str	r1, [sp]
   2bd60:	mov	r1, r2
   2bd64:	mov	r2, r9
   2bd68:	str	r0, [sp, #4]
   2bd6c:	ldr	r0, [pc, #1504]	; 2c354 <main@@Base+0x160f8>
   2bd70:	add	r0, pc, r0
   2bd74:	str	r0, [sp, #8]
   2bd78:	ldr	r0, [pc, #1496]	; 2c358 <main@@Base+0x160fc>
   2bd7c:	add	r0, pc, r0
   2bd80:	b	2c2c0 <main@@Base+0x16064>
   2bd84:	bne	2bd94 <main@@Base+0x15b38>
   2bd88:	ldrb	r0, [r2, #2]!
   2bd8c:	cmp	r0, #32
   2bd90:	bhi	2bda4 <main@@Base+0x15b48>
   2bd94:	mov	r0, r5
   2bd98:	mov	r2, r9
   2bd9c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2bda0:	mov	r2, r0
   2bda4:	cmp	r6, r2
   2bda8:	beq	2c0d4 <main@@Base+0x15e78>
   2bdac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bdb0:	mov	r1, #7
   2bdb4:	mov	r3, #3
   2bdb8:	str	r1, [sp]
   2bdbc:	mov	r1, r2
   2bdc0:	mov	r2, r9
   2bdc4:	str	r0, [sp, #4]
   2bdc8:	ldr	r0, [pc, #1424]	; 2c360 <main@@Base+0x16104>
   2bdcc:	add	r0, pc, r0
   2bdd0:	str	r0, [sp, #8]
   2bdd4:	ldr	r0, [pc, #1416]	; 2c364 <main@@Base+0x16108>
   2bdd8:	add	r0, pc, r0
   2bddc:	b	2c2c0 <main@@Base+0x16064>
   2bde0:	bne	2bdf4 <main@@Base+0x15b98>
   2bde4:	mov	r2, r1
   2bde8:	ldrb	r0, [r2, #1]!
   2bdec:	cmp	r0, #32
   2bdf0:	bhi	2be04 <main@@Base+0x15ba8>
   2bdf4:	mov	r0, r5
   2bdf8:	mov	r2, r9
   2bdfc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2be00:	mov	r2, r0
   2be04:	cmp	r2, r9
   2be08:	beq	2be44 <main@@Base+0x15be8>
   2be0c:	ldrb	r0, [r2]
   2be10:	cmp	r0, #58	; 0x3a
   2be14:	bne	2be44 <main@@Base+0x15be8>
   2be18:	add	r1, r2, #1
   2be1c:	sub	r0, r9, r1
   2be20:	cmp	r0, #2
   2be24:	blt	2c1c4 <main@@Base+0x15f68>
   2be28:	ldrb	r0, [r1]
   2be2c:	cmp	r0, #32
   2be30:	bls	2c1b4 <main@@Base+0x15f58>
   2be34:	mov	r2, r1
   2be38:	cmp	r4, r2
   2be3c:	bne	2c1dc <main@@Base+0x15f80>
   2be40:	b	2c2d0 <main@@Base+0x16074>
   2be44:	mov	r1, r2
   2be48:	mov	r0, r5
   2be4c:	mov	r2, r9
   2be50:	mov	r3, #4
   2be54:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2be58:	b	2c1d0 <main@@Base+0x15f74>
   2be5c:	bne	2be70 <main@@Base+0x15c14>
   2be60:	mov	r2, r1
   2be64:	ldrb	r0, [r2, #1]!
   2be68:	cmp	r0, #32
   2be6c:	bhi	2be80 <main@@Base+0x15c24>
   2be70:	ldr	r0, [sp, #36]	; 0x24
   2be74:	mov	r2, r9
   2be78:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2be7c:	mov	r2, r0
   2be80:	cmp	r2, r9
   2be84:	beq	2bec0 <main@@Base+0x15c64>
   2be88:	ldrb	r0, [r2]
   2be8c:	cmp	r0, #58	; 0x3a
   2be90:	bne	2bec0 <main@@Base+0x15c64>
   2be94:	add	r1, r2, #1
   2be98:	sub	r0, r9, r1
   2be9c:	cmp	r0, #2
   2bea0:	blt	2c214 <main@@Base+0x15fb8>
   2bea4:	ldrb	r0, [r1]
   2bea8:	cmp	r0, #32
   2beac:	bls	2c204 <main@@Base+0x15fa8>
   2beb0:	mov	r2, r1
   2beb4:	cmp	sl, r2
   2beb8:	bne	2c22c <main@@Base+0x15fd0>
   2bebc:	b	2c258 <main@@Base+0x15ffc>
   2bec0:	ldr	r0, [sp, #36]	; 0x24
   2bec4:	mov	r1, r2
   2bec8:	mov	r2, r9
   2becc:	mov	r3, #4
   2bed0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2bed4:	b	2c220 <main@@Base+0x15fc4>
   2bed8:	bne	2bee8 <main@@Base+0x15c8c>
   2bedc:	ldrb	r0, [r2, #2]!
   2bee0:	cmp	r0, #32
   2bee4:	bhi	2bef8 <main@@Base+0x15c9c>
   2bee8:	mov	r0, r5
   2beec:	mov	r2, r9
   2bef0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2bef4:	mov	r2, r0
   2bef8:	cmp	r6, r2
   2befc:	beq	2c0d4 <main@@Base+0x15e78>
   2bf00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bf04:	mov	r1, #9
   2bf08:	mov	r3, #4
   2bf0c:	str	r1, [sp]
   2bf10:	mov	r1, r2
   2bf14:	mov	r2, r9
   2bf18:	str	r0, [sp, #4]
   2bf1c:	ldr	r0, [pc, #1096]	; 2c36c <main@@Base+0x16110>
   2bf20:	add	r0, pc, r0
   2bf24:	str	r0, [sp, #8]
   2bf28:	ldr	r0, [pc, #1088]	; 2c370 <main@@Base+0x16114>
   2bf2c:	add	r0, pc, r0
   2bf30:	str	r0, [sp, #12]
   2bf34:	ldr	r0, [pc, #1080]	; 2c374 <main@@Base+0x16118>
   2bf38:	add	r0, pc, r0
   2bf3c:	str	r0, [sp, #16]
   2bf40:	mov	r0, r5
   2bf44:	bl	39838 <flatcc_json_parser_union_type_vector@@Base>
   2bf48:	b	2c0e4 <main@@Base+0x15e88>
   2bf4c:	bne	2bf60 <main@@Base+0x15d04>
   2bf50:	mov	r2, r1
   2bf54:	ldrb	r0, [r2, #1]!
   2bf58:	cmp	r0, #32
   2bf5c:	bhi	2bf70 <main@@Base+0x15d14>
   2bf60:	mov	r0, r5
   2bf64:	mov	r2, r9
   2bf68:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2bf6c:	mov	r2, r0
   2bf70:	cmp	r2, r9
   2bf74:	beq	2bfb0 <main@@Base+0x15d54>
   2bf78:	ldrb	r0, [r2]
   2bf7c:	cmp	r0, #58	; 0x3a
   2bf80:	bne	2bfb0 <main@@Base+0x15d54>
   2bf84:	add	r1, r2, #1
   2bf88:	sub	r0, r9, r1
   2bf8c:	cmp	r0, #2
   2bf90:	blt	2c278 <main@@Base+0x1601c>
   2bf94:	ldrb	r0, [r1]
   2bf98:	cmp	r0, #32
   2bf9c:	bls	2c268 <main@@Base+0x1600c>
   2bfa0:	mov	r2, r1
   2bfa4:	cmp	r4, r2
   2bfa8:	bne	2c290 <main@@Base+0x16034>
   2bfac:	b	2c2d0 <main@@Base+0x16074>
   2bfb0:	mov	r1, r2
   2bfb4:	mov	r0, r5
   2bfb8:	mov	r2, r9
   2bfbc:	mov	r3, #4
   2bfc0:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2bfc4:	b	2c284 <main@@Base+0x16028>
   2bfc8:	bne	2bfd8 <main@@Base+0x15d7c>
   2bfcc:	ldrb	r0, [r2, #2]!
   2bfd0:	cmp	r0, #32
   2bfd4:	bhi	2bfe8 <main@@Base+0x15d8c>
   2bfd8:	mov	r0, r5
   2bfdc:	mov	r2, r9
   2bfe0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2bfe4:	mov	r2, r0
   2bfe8:	cmp	r6, r2
   2bfec:	beq	2c0d4 <main@@Base+0x15e78>
   2bff0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bff4:	mov	r1, #3
   2bff8:	mov	r3, #1
   2bffc:	str	r1, [sp]
   2c000:	mov	r1, r2
   2c004:	mov	r2, r9
   2c008:	str	r0, [sp, #4]
   2c00c:	ldr	r0, [pc, #840]	; 2c35c <main@@Base+0x16100>
   2c010:	add	r0, pc, r0
   2c014:	b	2bd18 <main@@Base+0x15abc>
   2c018:	bne	2c028 <main@@Base+0x15dcc>
   2c01c:	ldrb	r0, [r2, #2]!
   2c020:	cmp	r0, #32
   2c024:	bhi	2c038 <main@@Base+0x15ddc>
   2c028:	ldr	r0, [sp, #36]	; 0x24
   2c02c:	mov	r2, r9
   2c030:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2c034:	mov	r2, r0
   2c038:	cmp	sl, r2
   2c03c:	beq	2c258 <main@@Base+0x15ffc>
   2c040:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c044:	mov	r1, #5
   2c048:	mov	r3, #2
   2c04c:	str	r1, [sp]
   2c050:	mov	r1, r2
   2c054:	mov	r2, r9
   2c058:	str	r0, [sp, #4]
   2c05c:	ldr	r0, [pc, #804]	; 2c388 <main@@Base+0x1612c>
   2c060:	add	r0, pc, r0
   2c064:	str	r0, [sp, #8]
   2c068:	ldr	r0, [pc, #796]	; 2c38c <main@@Base+0x16130>
   2c06c:	ldr	r5, [sp, #36]	; 0x24
   2c070:	add	r0, pc, r0
   2c074:	b	2c2c0 <main@@Base+0x16064>
   2c078:	bne	2c088 <main@@Base+0x15e2c>
   2c07c:	ldrb	r0, [r2, #2]!
   2c080:	cmp	r0, #32
   2c084:	bhi	2c098 <main@@Base+0x15e3c>
   2c088:	mov	r0, r5
   2c08c:	mov	r2, r9
   2c090:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2c094:	mov	r2, r0
   2c098:	cmp	r6, r2
   2c09c:	beq	2c0d4 <main@@Base+0x15e78>
   2c0a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c0a4:	mov	r1, #9
   2c0a8:	mov	r3, #4
   2c0ac:	str	r1, [sp]
   2c0b0:	mov	r1, r2
   2c0b4:	mov	r2, r9
   2c0b8:	str	r0, [sp, #4]
   2c0bc:	ldr	r0, [pc, #692]	; 2c378 <main@@Base+0x1611c>
   2c0c0:	add	r0, pc, r0
   2c0c4:	str	r0, [sp, #8]
   2c0c8:	mov	r0, r5
   2c0cc:	bl	3933c <flatcc_json_parser_union_vector@@Base>
   2c0d0:	b	2c0e4 <main@@Base+0x15e88>
   2c0d4:	mov	r0, r5
   2c0d8:	mov	r1, r6
   2c0dc:	mov	r2, r9
   2c0e0:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   2c0e4:	ldr	r4, [sp, #32]
   2c0e8:	mov	r2, r0
   2c0ec:	sub	r0, r9, r0
   2c0f0:	cmp	r0, #2
   2c0f4:	blt	2c128 <main@@Base+0x15ecc>
   2c0f8:	ldrb	r0, [r2]
   2c0fc:	cmp	r0, #32
   2c100:	bls	2c114 <main@@Base+0x15eb8>
   2c104:	mov	r3, r2
   2c108:	cmp	r3, r9
   2c10c:	bne	2c144 <main@@Base+0x15ee8>
   2c110:	b	2c2dc <main@@Base+0x16080>
   2c114:	bne	2c128 <main@@Base+0x15ecc>
   2c118:	mov	r3, r2
   2c11c:	ldrb	r0, [r3, #1]!
   2c120:	cmp	r0, #32
   2c124:	bhi	2c13c <main@@Base+0x15ee0>
   2c128:	mov	r1, r2
   2c12c:	mov	r0, r5
   2c130:	mov	r2, r9
   2c134:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2c138:	mov	r3, r0
   2c13c:	cmp	r3, r9
   2c140:	beq	2c2dc <main@@Base+0x16080>
   2c144:	ldrb	r0, [r3]
   2c148:	cmp	r0, #44	; 0x2c
   2c14c:	bne	2c2e4 <main@@Base+0x16088>
   2c150:	add	r1, r3, #1
   2c154:	sub	r0, r9, r1
   2c158:	cmp	r0, #2
   2c15c:	blt	2c18c <main@@Base+0x15f30>
   2c160:	ldrb	r0, [r1]
   2c164:	cmp	r0, #32
   2c168:	bls	2c17c <main@@Base+0x15f20>
   2c16c:	mov	r3, r1
   2c170:	cmp	r3, r9
   2c174:	bne	2c1a4 <main@@Base+0x15f48>
   2c178:	b	2c310 <main@@Base+0x160b4>
   2c17c:	bne	2c18c <main@@Base+0x15f30>
   2c180:	ldrb	r0, [r3, #2]!
   2c184:	cmp	r0, #32
   2c188:	bhi	2c19c <main@@Base+0x15f40>
   2c18c:	mov	r0, r5
   2c190:	mov	r2, r9
   2c194:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2c198:	mov	r3, r0
   2c19c:	cmp	r3, r9
   2c1a0:	beq	2c310 <main@@Base+0x160b4>
   2c1a4:	ldrb	r0, [r3]
   2c1a8:	cmp	r0, #125	; 0x7d
   2c1ac:	bne	2ae60 <main@@Base+0x14c04>
   2c1b0:	b	2c2ec <main@@Base+0x16090>
   2c1b4:	bne	2c1c4 <main@@Base+0x15f68>
   2c1b8:	ldrb	r0, [r2, #2]!
   2c1bc:	cmp	r0, #32
   2c1c0:	bhi	2c1d4 <main@@Base+0x15f78>
   2c1c4:	mov	r0, r5
   2c1c8:	mov	r2, r9
   2c1cc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2c1d0:	mov	r2, r0
   2c1d4:	cmp	r4, r2
   2c1d8:	beq	2c2d0 <main@@Base+0x16074>
   2c1dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c1e0:	mov	r1, #1
   2c1e4:	mov	r3, #0
   2c1e8:	str	r1, [sp]
   2c1ec:	mov	r1, r2
   2c1f0:	mov	r2, r9
   2c1f4:	str	r0, [sp, #4]
   2c1f8:	ldr	r0, [pc, #388]	; 2c384 <main@@Base+0x16128>
   2c1fc:	add	r0, pc, r0
   2c200:	b	2bd18 <main@@Base+0x15abc>
   2c204:	bne	2c214 <main@@Base+0x15fb8>
   2c208:	ldrb	r0, [r2, #2]!
   2c20c:	cmp	r0, #32
   2c210:	bhi	2c224 <main@@Base+0x15fc8>
   2c214:	ldr	r0, [sp, #36]	; 0x24
   2c218:	mov	r2, r9
   2c21c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2c220:	mov	r2, r0
   2c224:	cmp	sl, r2
   2c228:	beq	2c258 <main@@Base+0x15ffc>
   2c22c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c230:	mov	r1, #5
   2c234:	mov	r3, #2
   2c238:	str	r1, [sp]
   2c23c:	mov	r1, r2
   2c240:	mov	r2, r9
   2c244:	str	r0, [sp, #4]
   2c248:	ldr	r0, [pc, #320]	; 2c390 <main@@Base+0x16134>
   2c24c:	ldr	r5, [sp, #36]	; 0x24
   2c250:	add	r0, pc, r0
   2c254:	b	2bd18 <main@@Base+0x15abc>
   2c258:	ldr	r5, [sp, #36]	; 0x24
   2c25c:	mov	r1, sl
   2c260:	mov	r0, r5
   2c264:	b	2c0dc <main@@Base+0x15e80>
   2c268:	bne	2c278 <main@@Base+0x1601c>
   2c26c:	ldrb	r0, [r2, #2]!
   2c270:	cmp	r0, #32
   2c274:	bhi	2c288 <main@@Base+0x1602c>
   2c278:	mov	r0, r5
   2c27c:	mov	r2, r9
   2c280:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2c284:	mov	r2, r0
   2c288:	cmp	r4, r2
   2c28c:	beq	2c2d0 <main@@Base+0x16074>
   2c290:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c294:	mov	r1, #1
   2c298:	mov	r3, #0
   2c29c:	str	r1, [sp]
   2c2a0:	mov	r1, r2
   2c2a4:	mov	r2, r9
   2c2a8:	str	r0, [sp, #4]
   2c2ac:	ldr	r0, [pc, #200]	; 2c37c <main@@Base+0x16120>
   2c2b0:	add	r0, pc, r0
   2c2b4:	str	r0, [sp, #8]
   2c2b8:	ldr	r0, [pc, #192]	; 2c380 <main@@Base+0x16124>
   2c2bc:	add	r0, pc, r0
   2c2c0:	str	r0, [sp, #12]
   2c2c4:	mov	r0, r5
   2c2c8:	bl	38da0 <flatcc_json_parser_union_type@@Base>
   2c2cc:	b	2c0e4 <main@@Base+0x15e88>
   2c2d0:	mov	r0, r5
   2c2d4:	mov	r1, r4
   2c2d8:	b	2c0dc <main@@Base+0x15e80>
   2c2dc:	mov	r7, r9
   2c2e0:	b	2ad94 <main@@Base+0x14b38>
   2c2e4:	cmp	r0, #125	; 0x7d
   2c2e8:	bne	2c31c <main@@Base+0x160c0>
   2c2ec:	add	r1, r3, #1
   2c2f0:	sub	r0, r9, r1
   2c2f4:	cmp	r0, #2
   2c2f8:	blt	2c344 <main@@Base+0x160e8>
   2c2fc:	ldrb	r0, [r1]
   2c300:	cmp	r0, #32
   2c304:	bls	2c330 <main@@Base+0x160d4>
   2c308:	mov	r7, r1
   2c30c:	b	2ad94 <main@@Base+0x14b38>
   2c310:	mov	r0, r5
   2c314:	mov	r1, r9
   2c318:	b	2c324 <main@@Base+0x160c8>
   2c31c:	mov	r0, r5
   2c320:	mov	r1, r3
   2c324:	mov	r2, r9
   2c328:	mov	r3, #10
   2c32c:	b	2ad8c <main@@Base+0x14b30>
   2c330:	bne	2c344 <main@@Base+0x160e8>
   2c334:	ldrb	r0, [r3, #2]!
   2c338:	mov	r7, r3
   2c33c:	cmp	r0, #32
   2c340:	bhi	2ad94 <main@@Base+0x14b38>
   2c344:	mov	r0, r5
   2c348:	mov	r2, r9
   2c34c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2c350:	b	2ad90 <main@@Base+0x14b34>
   2c354:	andeq	r3, r3, ip, lsr r5
   2c358:	andeq	r0, r0, r8, asr r7
   2c35c:	andeq	r0, r0, r4, asr #9
   2c360:	strdeq	r3, [r3], -r0
   2c364:	strdeq	r0, [r0], -ip
   2c368:	andeq	r0, r0, r0, asr #15
   2c36c:	andeq	r3, r3, ip, lsr #7
   2c370:	andeq	r0, r0, r8, lsr #11
   2c374:	muleq	r0, ip, r4
   2c378:	andeq	r0, r0, r4, lsl r4
   2c37c:	andeq	r3, r3, ip, lsr #32
   2c380:	andeq	r0, r0, r8, lsl r2
   2c384:	ldrdeq	r0, [r0], -r8
   2c388:	andeq	r3, r3, ip, lsl #5
   2c38c:	andeq	r0, r0, r4, ror #8
   2c390:	andeq	r0, r0, r4, lsl #5
   2c394:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c398:	add	fp, sp, #28
   2c39c:	push	{r3}		; (str r3, [sp, #-4]!)
   2c3a0:	sub	r7, r2, r1
   2c3a4:	cmp	r7, #8
   2c3a8:	movcs	r7, #8
   2c3ac:	sub	r7, r7, #1
   2c3b0:	cmp	r7, #7
   2c3b4:	bhi	2c4d0 <main@@Base+0x16274>
   2c3b8:	add	r6, pc, #36	; 0x24
   2c3bc:	mov	ip, #0
   2c3c0:	mov	r3, #0
   2c3c4:	mov	r8, #0
   2c3c8:	mov	r9, #0
   2c3cc:	mov	sl, #0
   2c3d0:	mov	r4, #0
   2c3d4:	mov	r5, #0
   2c3d8:	ldr	lr, [r6, r7, lsl #2]
   2c3dc:	mov	r7, #0
   2c3e0:	add	pc, r6, lr
   2c3e4:	andeq	r0, r0, r4, rrx
   2c3e8:	andeq	r0, r0, ip, asr r0
   2c3ec:	andeq	r0, r0, r4, asr r0
   2c3f0:	andeq	r0, r0, ip, asr #32
   2c3f4:	andeq	r0, r0, r0, asr #32
   2c3f8:	andeq	r0, r0, r4, lsr r0
   2c3fc:	andeq	r0, r0, r4, lsr #32
   2c400:	andeq	r0, r0, r0, lsr #32
   2c404:	ldrb	r3, [r1, #7]
   2c408:	ldrb	r7, [r1, #6]
   2c40c:	mov	r8, ip
   2c410:	orr	r3, r3, r7, lsl #8
   2c414:	mov	ip, r3
   2c418:	ldrb	r3, [r1, #5]
   2c41c:	mov	r9, r8
   2c420:	orr	ip, ip, r3, lsl #16
   2c424:	ldrb	r3, [r1, #4]
   2c428:	mov	sl, r9
   2c42c:	orr	ip, ip, r3, lsl #24
   2c430:	ldrb	r3, [r1, #3]
   2c434:	orr	r7, r3, sl
   2c438:	ldrb	r3, [r1, #2]
   2c43c:	orr	r4, r7, r3, lsl #8
   2c440:	ldrb	r3, [r1, #1]
   2c444:	orr	r5, r4, r3, lsl #16
   2c448:	ldrb	r7, [r1]
   2c44c:	movw	r3, #29797	; 0x7465
   2c450:	movw	r6, #24946	; 0x6172
   2c454:	movt	r3, #24931	; 0x6163
   2c458:	movt	r6, #17256	; 0x4368
   2c45c:	eor	r3, ip, r3
   2c460:	orr	r7, r5, r7, lsl #24
   2c464:	eor	r7, r7, r6
   2c468:	orrs	r3, r3, r7
   2c46c:	bne	2c4d0 <main@@Base+0x16274>
   2c470:	add	lr, r1, #8
   2c474:	sub	r7, r2, lr
   2c478:	cmp	r7, #8
   2c47c:	mov	r3, r7
   2c480:	movcs	r3, #8
   2c484:	sub	r3, r3, #1
   2c488:	cmp	r3, #7
   2c48c:	bhi	2c4d0 <main@@Base+0x16274>
   2c490:	cmp	r7, #2
   2c494:	blt	2c4d0 <main@@Base+0x16274>
   2c498:	ldrb	r3, [lr]
   2c49c:	cmp	r3, #114	; 0x72
   2c4a0:	bne	2c4d0 <main@@Base+0x16274>
   2c4a4:	ldrb	r3, [r1, #9]
   2c4a8:	mov	ip, lr
   2c4ac:	cmp	r3, #46	; 0x2e
   2c4b0:	addeq	ip, r1, #10
   2c4b4:	cmp	ip, lr
   2c4b8:	beq	2c4d0 <main@@Base+0x16274>
   2c4bc:	ldr	r3, [sp]
   2c4c0:	mov	r1, ip
   2c4c4:	sub	sp, fp, #28
   2c4c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c4cc:	b	26a90 <main@@Base+0x10834>
   2c4d0:	mov	r0, r1
   2c4d4:	sub	sp, fp, #28
   2c4d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c4dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c4e0:	add	fp, sp, #28
   2c4e4:	sub	sp, sp, #36	; 0x24
   2c4e8:	ldr	r7, [fp, #8]
   2c4ec:	mov	r9, r0
   2c4f0:	mov	r0, #0
   2c4f4:	mov	r8, r2
   2c4f8:	mov	r4, r1
   2c4fc:	cmp	r3, #11
   2c500:	str	r0, [r7]
   2c504:	bhi	2c55c <main@@Base+0x16300>
   2c508:	add	r0, pc, #4
   2c50c:	ldr	r1, [r0, r3, lsl #2]
   2c510:	add	pc, r0, r1
   2c514:	andeq	r0, r0, r8, lsl #1
   2c518:	andeq	r0, r0, r8, rrx
   2c51c:	andeq	r0, r0, ip, asr #1
   2c520:	andeq	r0, r0, r8, rrx
   2c524:	andeq	r0, r0, r8, rrx
   2c528:	andeq	r0, r0, r8, rrx
   2c52c:	andeq	r0, r0, r8, rrx
   2c530:	andeq	r0, r0, r8, rrx
   2c534:	andeq	r0, r0, r0, lsr #2
   2c538:	andeq	r0, r0, r0, lsr r0
   2c53c:	andeq	r0, r0, r0, lsr r0
   2c540:	andeq	r0, r0, r0, asr r0
   2c544:	mov	r0, r9
   2c548:	mov	r1, r4
   2c54c:	mov	r2, r8
   2c550:	mov	r3, r7
   2c554:	bl	2d408 <main@@Base+0x171ac>
   2c558:	b	2c72c <main@@Base+0x164d0>
   2c55c:	cmp	r3, #255	; 0xff
   2c560:	bne	2c57c <main@@Base+0x16320>
   2c564:	mov	r0, r9
   2c568:	mov	r1, r4
   2c56c:	mov	r2, r8
   2c570:	mov	r3, r7
   2c574:	bl	38888 <flatcc_json_parser_build_string@@Base>
   2c578:	b	2c72c <main@@Base+0x164d0>
   2c57c:	ldrb	r0, [r9, #8]
   2c580:	tst	r0, #1
   2c584:	bne	2c690 <main@@Base+0x16434>
   2c588:	mov	r0, r9
   2c58c:	mov	r1, r4
   2c590:	mov	r2, r8
   2c594:	mov	r3, #15
   2c598:	b	2c5d4 <main@@Base+0x16378>
   2c59c:	sub	r0, r8, r4
   2c5a0:	cmp	r0, #4
   2c5a4:	blt	2c5c4 <main@@Base+0x16368>
   2c5a8:	ldr	r1, [pc, #3616]	; 2d3d0 <main@@Base+0x17174>
   2c5ac:	mov	r0, r4
   2c5b0:	mov	r2, #4
   2c5b4:	add	r1, pc, r1
   2c5b8:	bl	14eb4 <bcmp@plt>
   2c5bc:	cmp	r0, #0
   2c5c0:	beq	2c76c <main@@Base+0x16510>
   2c5c4:	mov	r0, r9
   2c5c8:	mov	r1, r4
   2c5cc:	mov	r2, r8
   2c5d0:	mov	r3, #26
   2c5d4:	sub	sp, fp, #28
   2c5d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c5dc:	b	35f80 <flatcc_json_parser_set_error@@Base>
   2c5e0:	mov	r0, #0
   2c5e4:	mov	r1, #1
   2c5e8:	str	r0, [r7]
   2c5ec:	ldr	r0, [r9]
   2c5f0:	bl	31348 <flatcc_builder_start_table@@Base>
   2c5f4:	cmp	r0, #0
   2c5f8:	bne	2c718 <main@@Base+0x164bc>
   2c5fc:	cmp	r4, r8
   2c600:	beq	2c6f4 <main@@Base+0x16498>
   2c604:	ldrb	r0, [r4]
   2c608:	cmp	r0, #123	; 0x7b
   2c60c:	bne	2c6f4 <main@@Base+0x16498>
   2c610:	add	r1, r4, #1
   2c614:	sub	r0, r8, r1
   2c618:	cmp	r0, #2
   2c61c:	blt	2ccd8 <main@@Base+0x16a7c>
   2c620:	ldrb	r0, [r1]
   2c624:	cmp	r0, #32
   2c628:	bls	2ccc8 <main@@Base+0x16a6c>
   2c62c:	mov	r4, r1
   2c630:	b	2cce8 <main@@Base+0x16a8c>
   2c634:	mov	r0, #0
   2c638:	mov	r1, #2
   2c63c:	mov	r2, #2
   2c640:	str	r0, [r7]
   2c644:	ldr	r0, [r9]
   2c648:	bl	300a8 <flatcc_builder_start_struct@@Base>
   2c64c:	cmp	r0, #0
   2c650:	beq	2c6e8 <main@@Base+0x1648c>
   2c654:	cmp	r4, r8
   2c658:	beq	2c6a8 <main@@Base+0x1644c>
   2c65c:	ldrb	r1, [r4]
   2c660:	cmp	r1, #123	; 0x7b
   2c664:	bne	2c6a8 <main@@Base+0x1644c>
   2c668:	add	r1, r4, #1
   2c66c:	str	r0, [sp, #4]
   2c670:	sub	r0, r8, r1
   2c674:	cmp	r0, #2
   2c678:	blt	2c79c <main@@Base+0x16540>
   2c67c:	ldrb	r0, [r1]
   2c680:	cmp	r0, #32
   2c684:	bls	2c78c <main@@Base+0x16530>
   2c688:	mov	r4, r1
   2c68c:	b	2c7ac <main@@Base+0x16550>
   2c690:	mov	r0, r9
   2c694:	mov	r1, r4
   2c698:	mov	r2, r8
   2c69c:	sub	sp, fp, #28
   2c6a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c6a4:	b	36a8c <flatcc_json_parser_generic_json@@Base>
   2c6a8:	mov	r0, r9
   2c6ac:	mov	r1, r4
   2c6b0:	mov	r2, r8
   2c6b4:	mov	r3, #21
   2c6b8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2c6bc:	mov	r4, r0
   2c6c0:	cmp	r4, r8
   2c6c4:	mov	r1, r8
   2c6c8:	beq	2c6ec <main@@Base+0x16490>
   2c6cc:	ldr	r0, [r9]
   2c6d0:	bl	30190 <flatcc_builder_end_struct@@Base>
   2c6d4:	cmp	r0, #0
   2c6d8:	mov	r1, r4
   2c6dc:	str	r0, [r7]
   2c6e0:	bne	2c730 <main@@Base+0x164d4>
   2c6e4:	b	2c6ec <main@@Base+0x16490>
   2c6e8:	mov	r1, r4
   2c6ec:	mov	r0, r9
   2c6f0:	b	2c720 <main@@Base+0x164c4>
   2c6f4:	mov	r0, r9
   2c6f8:	mov	r1, r4
   2c6fc:	mov	r2, r8
   2c700:	mov	r3, #21
   2c704:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2c708:	mov	r4, r0
   2c70c:	ldr	r0, [r9, #24]
   2c710:	cmp	r0, #0
   2c714:	beq	2c774 <main@@Base+0x16518>
   2c718:	mov	r0, r9
   2c71c:	mov	r1, r4
   2c720:	mov	r2, r8
   2c724:	mov	r3, #33	; 0x21
   2c728:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2c72c:	mov	r4, r0
   2c730:	ldr	r0, [r9, #24]
   2c734:	cmp	r0, #0
   2c738:	bne	2c760 <main@@Base+0x16504>
   2c73c:	ldr	r0, [r7]
   2c740:	cmp	r0, #0
   2c744:	bne	2c760 <main@@Base+0x16504>
   2c748:	mov	r0, r9
   2c74c:	mov	r1, r4
   2c750:	mov	r2, r8
   2c754:	mov	r3, #33	; 0x21
   2c758:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2c75c:	mov	r4, r0
   2c760:	mov	r0, r4
   2c764:	sub	sp, fp, #28
   2c768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c76c:	add	r4, r4, #4
   2c770:	b	2c760 <main@@Base+0x16504>
   2c774:	ldr	r0, [r9]
   2c778:	bl	31d70 <flatcc_builder_end_table@@Base>
   2c77c:	cmp	r0, #0
   2c780:	str	r0, [r7]
   2c784:	bne	2c730 <main@@Base+0x164d4>
   2c788:	b	2c718 <main@@Base+0x164bc>
   2c78c:	bne	2c79c <main@@Base+0x16540>
   2c790:	ldrb	r0, [r4, #2]!
   2c794:	cmp	r0, #32
   2c798:	bhi	2c7ac <main@@Base+0x16550>
   2c79c:	mov	r0, r9
   2c7a0:	mov	r2, r8
   2c7a4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2c7a8:	mov	r4, r0
   2c7ac:	cmp	r4, r8
   2c7b0:	mov	r2, r8
   2c7b4:	beq	2c7f8 <main@@Base+0x1659c>
   2c7b8:	ldrb	r0, [r4]
   2c7bc:	cmp	r0, #125	; 0x7d
   2c7c0:	bne	2c7f4 <main@@Base+0x16598>
   2c7c4:	add	r1, r4, #1
   2c7c8:	sub	r0, r8, r1
   2c7cc:	cmp	r0, #2
   2c7d0:	blt	2d370 <main@@Base+0x17114>
   2c7d4:	ldrb	r0, [r1]
   2c7d8:	cmp	r0, #32
   2c7dc:	bhi	2ccb4 <main@@Base+0x16a58>
   2c7e0:	bne	2d370 <main@@Base+0x17114>
   2c7e4:	ldrb	r0, [r4, #2]!
   2c7e8:	cmp	r0, #32
   2c7ec:	bhi	2c6c0 <main@@Base+0x16464>
   2c7f0:	b	2d370 <main@@Base+0x17114>
   2c7f4:	mov	r2, r4
   2c7f8:	str	r9, [sp, #12]
   2c7fc:	cmp	r2, r8
   2c800:	mov	r1, r8
   2c804:	beq	2c850 <main@@Base+0x165f4>
   2c808:	ldrb	r0, [r2]
   2c80c:	cmp	r0, #46	; 0x2e
   2c810:	beq	2c828 <main@@Base+0x165cc>
   2c814:	cmp	r0, #34	; 0x22
   2c818:	bne	2c844 <main@@Base+0x165e8>
   2c81c:	mov	r0, #0
   2c820:	add	r1, r2, #1
   2c824:	b	2c84c <main@@Base+0x165f0>
   2c828:	mov	r1, r2
   2c82c:	mov	r0, r9
   2c830:	mov	r2, r8
   2c834:	mov	r3, #5
   2c838:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2c83c:	mov	r1, r0
   2c840:	b	2c850 <main@@Base+0x165f4>
   2c844:	mov	r0, #1
   2c848:	mov	r1, r2
   2c84c:	str	r0, [r9, #12]
   2c850:	sub	r0, r8, r1
   2c854:	mov	r2, #8
   2c858:	cmp	r0, #8
   2c85c:	movcs	r0, r2
   2c860:	sub	r2, r0, #1
   2c864:	cmp	r2, #7
   2c868:	bhi	2c9b4 <main@@Base+0x16758>
   2c86c:	add	r5, pc, #40	; 0x28
   2c870:	mov	r9, r7
   2c874:	mov	sl, #0
   2c878:	mov	ip, #0
   2c87c:	mov	lr, #0
   2c880:	mov	r4, #0
   2c884:	mov	r3, #0
   2c888:	mov	r6, #0
   2c88c:	mov	r7, #0
   2c890:	ldr	r0, [r5, r2, lsl #2]
   2c894:	mov	r2, #0
   2c898:	add	pc, r5, r0
   2c89c:	andeq	r0, r0, r4, rrx
   2c8a0:	andeq	r0, r0, ip, asr r0
   2c8a4:	andeq	r0, r0, r4, asr r0
   2c8a8:	andeq	r0, r0, ip, asr #32
   2c8ac:	andeq	r0, r0, r0, asr #32
   2c8b0:	andeq	r0, r0, r4, lsr r0
   2c8b4:	andeq	r0, r0, r4, lsr #32
   2c8b8:	andeq	r0, r0, r0, lsr #32
   2c8bc:	ldrb	ip, [r1, #7]
   2c8c0:	ldrb	r0, [r1, #6]
   2c8c4:	mov	lr, sl
   2c8c8:	orr	r0, ip, r0, lsl #8
   2c8cc:	mov	sl, r0
   2c8d0:	ldrb	r0, [r1, #5]
   2c8d4:	mov	r4, lr
   2c8d8:	orr	sl, sl, r0, lsl #16
   2c8dc:	ldrb	r0, [r1, #4]
   2c8e0:	mov	r3, r4
   2c8e4:	orr	sl, sl, r0, lsl #24
   2c8e8:	ldrb	r0, [r1, #3]
   2c8ec:	orr	r6, r0, r3
   2c8f0:	ldrb	r0, [r1, #2]
   2c8f4:	orr	r7, r6, r0, lsl #8
   2c8f8:	ldrb	r0, [r1, #1]
   2c8fc:	orr	r2, r7, r0, lsl #16
   2c900:	ldrb	r3, [r1]
   2c904:	movw	r0, #25966	; 0x656e
   2c908:	mov	r7, r9
   2c90c:	ldr	r9, [sp, #12]
   2c910:	movt	r0, #24428	; 0x5f6c
   2c914:	eor	r0, sl, r0
   2c918:	orr	r2, r2, r3, lsl #24
   2c91c:	movw	r3, #26994	; 0x6972
   2c920:	movt	r3, #26721	; 0x6861
   2c924:	eor	r2, r2, r3
   2c928:	orrs	r0, r0, r2
   2c92c:	bne	2c9b4 <main@@Base+0x16758>
   2c930:	add	r4, r1, #8
   2c934:	mov	r3, #8
   2c938:	sub	r0, r8, r4
   2c93c:	cmp	r0, #8
   2c940:	movcc	r3, r0
   2c944:	sub	r2, r3, #3
   2c948:	cmp	r2, #6
   2c94c:	bcs	2c9bc <main@@Base+0x16760>
   2c950:	ldrb	r2, [r1, #10]
   2c954:	lsl	r2, r2, #8
   2c958:	ldrb	r3, [r1, #9]
   2c95c:	orr	r2, r2, r3, lsl #16
   2c960:	ldrb	r3, [r4]
   2c964:	bic	r2, r2, #255	; 0xff
   2c968:	orr	r2, r2, r3, lsl #24
   2c96c:	movw	r3, #26624	; 0x6800
   2c970:	movt	r3, #26484	; 0x6774
   2c974:	teq	r2, r3
   2c978:	bne	2ca6c <main@@Base+0x16810>
   2c97c:	cmp	r0, #4
   2c980:	blt	2ca6c <main@@Base+0x16810>
   2c984:	mov	r2, r1
   2c988:	ldr	r3, [r9, #12]
   2c98c:	ldrb	r0, [r2, #11]!
   2c990:	cmp	r3, #0
   2c994:	beq	2c9d4 <main@@Base+0x16778>
   2c998:	cmp	r0, #33	; 0x21
   2c99c:	bcc	2c9a8 <main@@Base+0x1674c>
   2c9a0:	cmp	r0, #58	; 0x3a
   2c9a4:	bne	2ca6c <main@@Base+0x16810>
   2c9a8:	mov	r0, #0
   2c9ac:	str	r0, [r9, #12]
   2c9b0:	b	2c9e0 <main@@Base+0x16784>
   2c9b4:	mov	r0, r9
   2c9b8:	b	2ca74 <main@@Base+0x16818>
   2c9bc:	mov	r2, #0
   2c9c0:	cmp	r3, #1
   2c9c4:	beq	2c960 <main@@Base+0x16704>
   2c9c8:	cmp	r3, #2
   2c9cc:	beq	2c958 <main@@Base+0x166fc>
   2c9d0:	b	2ca6c <main@@Base+0x16810>
   2c9d4:	cmp	r0, #34	; 0x22
   2c9d8:	bne	2ca6c <main@@Base+0x16810>
   2c9dc:	add	r2, r1, #12
   2c9e0:	sub	r0, r8, r2
   2c9e4:	cmp	r0, #2
   2c9e8:	blt	2ca1c <main@@Base+0x167c0>
   2c9ec:	ldrb	r0, [r2]
   2c9f0:	cmp	r0, #32
   2c9f4:	bls	2ca08 <main@@Base+0x167ac>
   2c9f8:	mov	r5, r2
   2c9fc:	cmp	r5, r8
   2ca00:	bne	2ca38 <main@@Base+0x167dc>
   2ca04:	b	2cb44 <main@@Base+0x168e8>
   2ca08:	bne	2ca1c <main@@Base+0x167c0>
   2ca0c:	mov	r5, r2
   2ca10:	ldrb	r0, [r5, #1]!
   2ca14:	cmp	r0, #32
   2ca18:	bhi	2ca30 <main@@Base+0x167d4>
   2ca1c:	mov	r1, r2
   2ca20:	mov	r0, r9
   2ca24:	mov	r2, r8
   2ca28:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2ca2c:	mov	r5, r0
   2ca30:	cmp	r5, r8
   2ca34:	beq	2cb44 <main@@Base+0x168e8>
   2ca38:	ldrb	r0, [r5]
   2ca3c:	cmp	r0, #58	; 0x3a
   2ca40:	bne	2cb44 <main@@Base+0x168e8>
   2ca44:	add	r1, r5, #1
   2ca48:	sub	r0, r8, r1
   2ca4c:	cmp	r0, #2
   2ca50:	blt	2cb6c <main@@Base+0x16910>
   2ca54:	ldrb	r0, [r1]
   2ca58:	cmp	r0, #32
   2ca5c:	bls	2cb5c <main@@Base+0x16900>
   2ca60:	mov	r5, r1
   2ca64:	cmp	r4, r5
   2ca68:	bne	2cb84 <main@@Base+0x16928>
   2ca6c:	mov	r0, r9
   2ca70:	mov	r1, r4
   2ca74:	mov	r2, r8
   2ca78:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   2ca7c:	mov	r1, r0
   2ca80:	sub	r0, r8, r1
   2ca84:	cmp	r0, #2
   2ca88:	blt	2cabc <main@@Base+0x16860>
   2ca8c:	ldrb	r0, [r1]
   2ca90:	cmp	r0, #32
   2ca94:	bls	2caa8 <main@@Base+0x1684c>
   2ca98:	mov	r2, r1
   2ca9c:	cmp	r2, r8
   2caa0:	bne	2cad4 <main@@Base+0x16878>
   2caa4:	b	2cc88 <main@@Base+0x16a2c>
   2caa8:	bne	2cabc <main@@Base+0x16860>
   2caac:	mov	r2, r1
   2cab0:	ldrb	r0, [r2, #1]!
   2cab4:	cmp	r0, #32
   2cab8:	bhi	2cacc <main@@Base+0x16870>
   2cabc:	mov	r0, r9
   2cac0:	mov	r2, r8
   2cac4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2cac8:	mov	r2, r0
   2cacc:	cmp	r2, r8
   2cad0:	beq	2cc88 <main@@Base+0x16a2c>
   2cad4:	ldrb	r0, [r2]
   2cad8:	cmp	r0, #44	; 0x2c
   2cadc:	bne	2cc90 <main@@Base+0x16a34>
   2cae0:	add	r1, r2, #1
   2cae4:	sub	r0, r8, r1
   2cae8:	cmp	r0, #2
   2caec:	blt	2cb1c <main@@Base+0x168c0>
   2caf0:	ldrb	r0, [r1]
   2caf4:	cmp	r0, #32
   2caf8:	bls	2cb0c <main@@Base+0x168b0>
   2cafc:	mov	r2, r1
   2cb00:	cmp	r2, r8
   2cb04:	bne	2cb34 <main@@Base+0x168d8>
   2cb08:	b	2ccbc <main@@Base+0x16a60>
   2cb0c:	bne	2cb1c <main@@Base+0x168c0>
   2cb10:	ldrb	r0, [r2, #2]!
   2cb14:	cmp	r0, #32
   2cb18:	bhi	2cb2c <main@@Base+0x168d0>
   2cb1c:	mov	r0, r9
   2cb20:	mov	r2, r8
   2cb24:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2cb28:	mov	r2, r0
   2cb2c:	cmp	r2, r8
   2cb30:	beq	2ccbc <main@@Base+0x16a60>
   2cb34:	ldrb	r0, [r2]
   2cb38:	cmp	r0, #125	; 0x7d
   2cb3c:	bne	2c7fc <main@@Base+0x165a0>
   2cb40:	b	2cc98 <main@@Base+0x16a3c>
   2cb44:	mov	r0, r9
   2cb48:	mov	r1, r5
   2cb4c:	mov	r2, r8
   2cb50:	mov	r3, #4
   2cb54:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2cb58:	b	2cb78 <main@@Base+0x1691c>
   2cb5c:	bne	2cb6c <main@@Base+0x16910>
   2cb60:	ldrb	r0, [r5, #2]!
   2cb64:	cmp	r0, #32
   2cb68:	bhi	2cb7c <main@@Base+0x16920>
   2cb6c:	mov	r0, r9
   2cb70:	mov	r2, r8
   2cb74:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2cb78:	mov	r5, r0
   2cb7c:	cmp	r4, r5
   2cb80:	beq	2ca6c <main@@Base+0x16810>
   2cb84:	mov	r4, #0
   2cb88:	cmp	r5, r8
   2cb8c:	str	r4, [sp, #28]
   2cb90:	str	r4, [sp, #24]
   2cb94:	strh	r4, [sp, #16]
   2cb98:	str	r4, [sp, #20]
   2cb9c:	beq	2cbe4 <main@@Base+0x16988>
   2cba0:	add	r0, sp, #24
   2cba4:	mov	r1, r5
   2cba8:	mov	r2, r8
   2cbac:	add	r3, sp, #20
   2cbb0:	str	r0, [sp]
   2cbb4:	mov	r0, r9
   2cbb8:	bl	382dc <flatcc_json_parser_integer@@Base>
   2cbbc:	cmp	r0, r5
   2cbc0:	beq	2cbf4 <main@@Base+0x16998>
   2cbc4:	mov	r1, r0
   2cbc8:	ldr	r0, [sp, #20]
   2cbcc:	cmp	r0, #0
   2cbd0:	beq	2cc04 <main@@Base+0x169a8>
   2cbd4:	mov	r0, r9
   2cbd8:	mov	r2, r8
   2cbdc:	mov	r3, #8
   2cbe0:	b	2cc24 <main@@Base+0x169c8>
   2cbe4:	mov	r1, r8
   2cbe8:	cmp	r5, r1
   2cbec:	bne	2cc68 <main@@Base+0x16a0c>
   2cbf0:	b	2cc34 <main@@Base+0x169d8>
   2cbf4:	mov	r1, r5
   2cbf8:	cmp	r5, r1
   2cbfc:	bne	2cc68 <main@@Base+0x16a0c>
   2cc00:	b	2cc34 <main@@Base+0x169d8>
   2cc04:	ldr	r0, [sp, #24]
   2cc08:	ldr	r2, [sp, #28]
   2cc0c:	subs	r3, r0, #65536	; 0x10000
   2cc10:	sbcs	r2, r2, #0
   2cc14:	bcc	2cc74 <main@@Base+0x16a18>
   2cc18:	mov	r0, r9
   2cc1c:	mov	r2, r8
   2cc20:	mov	r3, #7
   2cc24:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2cc28:	mov	r1, r0
   2cc2c:	cmp	r5, r1
   2cc30:	bne	2cc68 <main@@Base+0x16a0c>
   2cc34:	add	r0, sp, #16
   2cc38:	mov	r1, r5
   2cc3c:	mov	r2, r8
   2cc40:	str	r0, [sp]
   2cc44:	mov	r0, r9
   2cc48:	ldr	r3, [pc, #1928]	; 2d3d8 <main@@Base+0x1717c>
   2cc4c:	add	r3, pc, r3
   2cc50:	bl	2da6c <main@@Base+0x17810>
   2cc54:	mov	r1, r0
   2cc58:	cmp	r0, r5
   2cc5c:	cmpne	r1, r8
   2cc60:	beq	2d3b8 <main@@Base+0x1715c>
   2cc64:	ldrh	r4, [sp, #16]
   2cc68:	ldr	r0, [sp, #4]
   2cc6c:	strh	r4, [r0]
   2cc70:	b	2ca80 <main@@Base+0x16824>
   2cc74:	mov	r4, r0
   2cc78:	strh	r0, [sp, #16]
   2cc7c:	cmp	r5, r1
   2cc80:	bne	2cc68 <main@@Base+0x16a0c>
   2cc84:	b	2cc34 <main@@Base+0x169d8>
   2cc88:	mov	r1, r8
   2cc8c:	b	2c6ec <main@@Base+0x16490>
   2cc90:	cmp	r0, #125	; 0x7d
   2cc94:	bne	2d348 <main@@Base+0x170ec>
   2cc98:	add	r1, r2, #1
   2cc9c:	sub	r0, r8, r1
   2cca0:	cmp	r0, #2
   2cca4:	blt	2d370 <main@@Base+0x17114>
   2cca8:	ldrb	r0, [r1]
   2ccac:	cmp	r0, #32
   2ccb0:	bls	2d35c <main@@Base+0x17100>
   2ccb4:	mov	r4, r1
   2ccb8:	b	2c6c0 <main@@Base+0x16464>
   2ccbc:	mov	r0, r9
   2ccc0:	mov	r1, r8
   2ccc4:	b	2d350 <main@@Base+0x170f4>
   2ccc8:	bne	2ccd8 <main@@Base+0x16a7c>
   2cccc:	ldrb	r0, [r4, #2]!
   2ccd0:	cmp	r0, #32
   2ccd4:	bhi	2cce8 <main@@Base+0x16a8c>
   2ccd8:	mov	r0, r9
   2ccdc:	mov	r2, r8
   2cce0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2cce4:	mov	r4, r0
   2cce8:	cmp	r4, r8
   2ccec:	mov	r2, r8
   2ccf0:	beq	2cd34 <main@@Base+0x16ad8>
   2ccf4:	ldrb	r0, [r4]
   2ccf8:	cmp	r0, #125	; 0x7d
   2ccfc:	bne	2cd30 <main@@Base+0x16ad4>
   2cd00:	add	r1, r4, #1
   2cd04:	sub	r0, r8, r1
   2cd08:	cmp	r0, #2
   2cd0c:	blt	2d3a8 <main@@Base+0x1714c>
   2cd10:	ldrb	r0, [r1]
   2cd14:	cmp	r0, #32
   2cd18:	bhi	2d334 <main@@Base+0x170d8>
   2cd1c:	bne	2d3a8 <main@@Base+0x1714c>
   2cd20:	ldrb	r0, [r4, #2]!
   2cd24:	cmp	r0, #32
   2cd28:	bhi	2c70c <main@@Base+0x164b0>
   2cd2c:	b	2d3a8 <main@@Base+0x1714c>
   2cd30:	mov	r2, r4
   2cd34:	str	r7, [sp, #8]
   2cd38:	cmp	r2, r8
   2cd3c:	mov	r1, r8
   2cd40:	beq	2cd8c <main@@Base+0x16b30>
   2cd44:	ldrb	r0, [r2]
   2cd48:	cmp	r0, #46	; 0x2e
   2cd4c:	beq	2cd64 <main@@Base+0x16b08>
   2cd50:	cmp	r0, #34	; 0x22
   2cd54:	bne	2cd80 <main@@Base+0x16b24>
   2cd58:	mov	r0, #0
   2cd5c:	add	r1, r2, #1
   2cd60:	b	2cd88 <main@@Base+0x16b2c>
   2cd64:	mov	r1, r2
   2cd68:	mov	r0, r9
   2cd6c:	mov	r2, r8
   2cd70:	mov	r3, #5
   2cd74:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2cd78:	mov	r1, r0
   2cd7c:	b	2cd8c <main@@Base+0x16b30>
   2cd80:	mov	r0, #1
   2cd84:	mov	r1, r2
   2cd88:	str	r0, [r9, #12]
   2cd8c:	sub	r0, r8, r1
   2cd90:	mov	r2, #8
   2cd94:	cmp	r0, #8
   2cd98:	movcs	r0, r2
   2cd9c:	sub	r2, r0, #1
   2cda0:	cmp	r2, #7
   2cda4:	bhi	2cfcc <main@@Base+0x16d70>
   2cda8:	add	r0, pc, #36	; 0x24
   2cdac:	mov	lr, #0
   2cdb0:	mov	ip, #0
   2cdb4:	mov	r4, #0
   2cdb8:	mov	r3, #0
   2cdbc:	mov	r6, #0
   2cdc0:	mov	r5, #0
   2cdc4:	mov	r7, #0
   2cdc8:	ldr	sl, [r0, r2, lsl #2]
   2cdcc:	mov	r2, #0
   2cdd0:	add	pc, r0, sl
   2cdd4:	andeq	r0, r0, r4, rrx
   2cdd8:	andeq	r0, r0, ip, asr r0
   2cddc:	andeq	r0, r0, r4, asr r0
   2cde0:	andeq	r0, r0, ip, asr #32
   2cde4:	andeq	r0, r0, r0, asr #32
   2cde8:	andeq	r0, r0, r4, lsr r0
   2cdec:	andeq	r0, r0, r4, lsr #32
   2cdf0:	andeq	r0, r0, r0, lsr #32
   2cdf4:	ldrb	ip, [r1, #7]
   2cdf8:	ldrb	r0, [r1, #6]
   2cdfc:	mov	r2, lr
   2ce00:	orr	r0, ip, r0, lsl #8
   2ce04:	mov	lr, r0
   2ce08:	ldrb	r0, [r1, #5]
   2ce0c:	mov	r4, r2
   2ce10:	orr	lr, lr, r0, lsl #16
   2ce14:	ldrb	r0, [r1, #4]
   2ce18:	mov	r3, r4
   2ce1c:	orr	lr, lr, r0, lsl #24
   2ce20:	ldrb	r0, [r1, #3]
   2ce24:	orr	r6, r0, r3
   2ce28:	ldrb	r0, [r1, #2]
   2ce2c:	orr	r5, r6, r0, lsl #8
   2ce30:	ldrb	r0, [r1, #1]
   2ce34:	orr	r7, r5, r0, lsl #16
   2ce38:	ldrb	r2, [r1]
   2ce3c:	movw	r0, #24948	; 0x6174
   2ce40:	movw	r3, #28530	; 0x6f72
   2ce44:	movt	r0, #25695	; 0x645f
   2ce48:	movt	r3, #29559	; 0x7377
   2ce4c:	eor	r0, lr, r0
   2ce50:	orr	r2, r7, r2, lsl #24
   2ce54:	eor	r2, r2, r3
   2ce58:	orrs	r0, r0, r2
   2ce5c:	bne	2cfcc <main@@Base+0x16d70>
   2ce60:	add	lr, r1, #8
   2ce64:	mov	r2, #8
   2ce68:	sub	r0, r8, lr
   2ce6c:	cmp	r0, #8
   2ce70:	movcs	r0, r2
   2ce74:	sub	r2, r0, #1
   2ce78:	cmp	r2, #7
   2ce7c:	bhi	2cfd4 <main@@Base+0x16d78>
   2ce80:	add	r0, pc, #40	; 0x28
   2ce84:	mov	sl, #0
   2ce88:	mov	r3, #0
   2ce8c:	mov	r4, #0
   2ce90:	mov	r6, #0
   2ce94:	mov	r5, #0
   2ce98:	mov	r7, #0
   2ce9c:	ldr	ip, [r0, r2, lsl #2]
   2cea0:	mov	r2, #0
   2cea4:	str	r2, [sp, #4]
   2cea8:	mov	r2, #0
   2ceac:	add	pc, r0, ip
   2ceb0:	andeq	r0, r0, ip, rrx
   2ceb4:	andeq	r0, r0, r4, rrx
   2ceb8:	andeq	r0, r0, ip, asr r0
   2cebc:	andeq	r0, r0, r4, asr r0
   2cec0:	andeq	r0, r0, r8, asr #32
   2cec4:	andeq	r0, r0, ip, lsr r0
   2cec8:	andeq	r0, r0, r8, lsr #32
   2cecc:	andeq	r0, r0, r0, lsr #32
   2ced0:	ldrb	r0, [r1, #15]
   2ced4:	str	r0, [sp, #4]
   2ced8:	ldrb	r0, [r1, #14]
   2cedc:	ldr	r2, [sp, #4]
   2cee0:	orr	r0, r2, r0, lsl #8
   2cee4:	mov	r2, sl
   2cee8:	mov	sl, r0
   2ceec:	ldrb	r0, [r1, #13]
   2cef0:	mov	r3, r2
   2cef4:	orr	sl, sl, r0, lsl #16
   2cef8:	ldrb	r0, [r1, #12]
   2cefc:	mov	r4, r3
   2cf00:	orr	sl, sl, r0, lsl #24
   2cf04:	ldrb	r0, [r1, #11]
   2cf08:	orr	r6, r0, r4
   2cf0c:	ldrb	r0, [r1, #10]
   2cf10:	orr	r5, r6, r0, lsl #8
   2cf14:	ldrb	r0, [r1, #9]
   2cf18:	orr	r7, r5, r0, lsl #16
   2cf1c:	ldrb	r2, [lr]
   2cf20:	movw	r0, #24941	; 0x616d
   2cf24:	movw	r3, #25451	; 0x636b
   2cf28:	movt	r0, #24420	; 0x5f64
   2cf2c:	movt	r3, #29793	; 0x7461
   2cf30:	eor	r0, sl, r0
   2cf34:	orr	r2, r7, r2, lsl #24
   2cf38:	eor	r2, r2, r3
   2cf3c:	orrs	r0, r0, r2
   2cf40:	bne	2cfd4 <main@@Base+0x16d78>
   2cf44:	add	r4, r1, #16
   2cf48:	mov	r3, #8
   2cf4c:	sub	r0, r8, r4
   2cf50:	cmp	r0, #8
   2cf54:	movcc	r3, r0
   2cf58:	sub	r2, r3, #3
   2cf5c:	cmp	r2, #6
   2cf60:	bcs	2d0b4 <main@@Base+0x16e58>
   2cf64:	ldrb	r2, [r1, #18]
   2cf68:	ldr	r7, [sp, #8]
   2cf6c:	lsl	r2, r2, #8
   2cf70:	ldrb	r3, [r1, #17]
   2cf74:	orr	r2, r2, r3, lsl #16
   2cf78:	ldrb	r3, [r4]
   2cf7c:	bic	r2, r2, #255	; 0xff
   2cf80:	orr	r2, r2, r3, lsl #24
   2cf84:	movw	r3, #25856	; 0x6500
   2cf88:	movt	r3, #24935	; 0x6167
   2cf8c:	teq	r2, r3
   2cf90:	bne	2d168 <main@@Base+0x16f0c>
   2cf94:	cmp	r0, #4
   2cf98:	blt	2d168 <main@@Base+0x16f0c>
   2cf9c:	mov	r2, r1
   2cfa0:	ldr	r3, [r9, #12]
   2cfa4:	ldrb	r0, [r2, #19]!
   2cfa8:	cmp	r3, #0
   2cfac:	beq	2d0d0 <main@@Base+0x16e74>
   2cfb0:	cmp	r0, #33	; 0x21
   2cfb4:	bcc	2cfc0 <main@@Base+0x16d64>
   2cfb8:	cmp	r0, #58	; 0x3a
   2cfbc:	bne	2d168 <main@@Base+0x16f0c>
   2cfc0:	mov	r0, #0
   2cfc4:	str	r0, [r9, #12]
   2cfc8:	b	2d0dc <main@@Base+0x16e80>
   2cfcc:	mov	r0, r9
   2cfd0:	b	2cfdc <main@@Base+0x16d80>
   2cfd4:	mov	r0, r9
   2cfd8:	mov	r1, lr
   2cfdc:	mov	r2, r8
   2cfe0:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   2cfe4:	ldr	r7, [sp, #8]
   2cfe8:	mov	r4, r0
   2cfec:	sub	r0, r8, r4
   2cff0:	cmp	r0, #2
   2cff4:	blt	2d028 <main@@Base+0x16dcc>
   2cff8:	ldrb	r0, [r4]
   2cffc:	cmp	r0, #32
   2d000:	bls	2d014 <main@@Base+0x16db8>
   2d004:	mov	r2, r4
   2d008:	cmp	r2, r8
   2d00c:	bne	2d044 <main@@Base+0x16de8>
   2d010:	b	2d308 <main@@Base+0x170ac>
   2d014:	bne	2d028 <main@@Base+0x16dcc>
   2d018:	mov	r2, r4
   2d01c:	ldrb	r0, [r2, #1]!
   2d020:	cmp	r0, #32
   2d024:	bhi	2d03c <main@@Base+0x16de0>
   2d028:	mov	r0, r9
   2d02c:	mov	r1, r4
   2d030:	mov	r2, r8
   2d034:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2d038:	mov	r2, r0
   2d03c:	cmp	r2, r8
   2d040:	beq	2d308 <main@@Base+0x170ac>
   2d044:	ldrb	r0, [r2]
   2d048:	cmp	r0, #44	; 0x2c
   2d04c:	bne	2d310 <main@@Base+0x170b4>
   2d050:	add	r1, r2, #1
   2d054:	sub	r0, r8, r1
   2d058:	cmp	r0, #2
   2d05c:	blt	2d08c <main@@Base+0x16e30>
   2d060:	ldrb	r0, [r1]
   2d064:	cmp	r0, #32
   2d068:	bls	2d07c <main@@Base+0x16e20>
   2d06c:	mov	r2, r1
   2d070:	cmp	r2, r8
   2d074:	bne	2d0a4 <main@@Base+0x16e48>
   2d078:	b	2d33c <main@@Base+0x170e0>
   2d07c:	bne	2d08c <main@@Base+0x16e30>
   2d080:	ldrb	r0, [r2, #2]!
   2d084:	cmp	r0, #32
   2d088:	bhi	2d09c <main@@Base+0x16e40>
   2d08c:	mov	r0, r9
   2d090:	mov	r2, r8
   2d094:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2d098:	mov	r2, r0
   2d09c:	cmp	r2, r8
   2d0a0:	beq	2d33c <main@@Base+0x170e0>
   2d0a4:	ldrb	r0, [r2]
   2d0a8:	cmp	r0, #125	; 0x7d
   2d0ac:	bne	2cd38 <main@@Base+0x16adc>
   2d0b0:	b	2d318 <main@@Base+0x170bc>
   2d0b4:	ldr	r7, [sp, #8]
   2d0b8:	mov	r2, #0
   2d0bc:	cmp	r3, #1
   2d0c0:	beq	2cf78 <main@@Base+0x16d1c>
   2d0c4:	cmp	r3, #2
   2d0c8:	beq	2cf70 <main@@Base+0x16d14>
   2d0cc:	b	2d168 <main@@Base+0x16f0c>
   2d0d0:	cmp	r0, #34	; 0x22
   2d0d4:	bne	2d168 <main@@Base+0x16f0c>
   2d0d8:	add	r2, r1, #20
   2d0dc:	sub	r0, r8, r2
   2d0e0:	cmp	r0, #2
   2d0e4:	blt	2d118 <main@@Base+0x16ebc>
   2d0e8:	ldrb	r0, [r2]
   2d0ec:	cmp	r0, #32
   2d0f0:	bls	2d104 <main@@Base+0x16ea8>
   2d0f4:	mov	r6, r2
   2d0f8:	cmp	r6, r8
   2d0fc:	bne	2d134 <main@@Base+0x16ed8>
   2d100:	b	2d17c <main@@Base+0x16f20>
   2d104:	bne	2d118 <main@@Base+0x16ebc>
   2d108:	mov	r6, r2
   2d10c:	ldrb	r0, [r6, #1]!
   2d110:	cmp	r0, #32
   2d114:	bhi	2d12c <main@@Base+0x16ed0>
   2d118:	mov	r1, r2
   2d11c:	mov	r0, r9
   2d120:	mov	r2, r8
   2d124:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2d128:	mov	r6, r0
   2d12c:	cmp	r6, r8
   2d130:	beq	2d17c <main@@Base+0x16f20>
   2d134:	ldrb	r0, [r6]
   2d138:	cmp	r0, #58	; 0x3a
   2d13c:	bne	2d17c <main@@Base+0x16f20>
   2d140:	add	r1, r6, #1
   2d144:	sub	r0, r8, r1
   2d148:	cmp	r0, #2
   2d14c:	blt	2d1a4 <main@@Base+0x16f48>
   2d150:	ldrb	r0, [r1]
   2d154:	cmp	r0, #32
   2d158:	bls	2d194 <main@@Base+0x16f38>
   2d15c:	mov	r6, r1
   2d160:	cmp	r4, r6
   2d164:	bne	2d1bc <main@@Base+0x16f60>
   2d168:	mov	r0, r9
   2d16c:	mov	r1, r4
   2d170:	mov	r2, r8
   2d174:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   2d178:	b	2cfe8 <main@@Base+0x16d8c>
   2d17c:	mov	r0, r9
   2d180:	mov	r1, r6
   2d184:	mov	r2, r8
   2d188:	mov	r3, #4
   2d18c:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2d190:	b	2d1b0 <main@@Base+0x16f54>
   2d194:	bne	2d1a4 <main@@Base+0x16f48>
   2d198:	ldrb	r0, [r6, #2]!
   2d19c:	cmp	r0, #32
   2d1a0:	bhi	2d1b4 <main@@Base+0x16f58>
   2d1a4:	mov	r0, r9
   2d1a8:	mov	r2, r8
   2d1ac:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2d1b0:	mov	r6, r0
   2d1b4:	cmp	r4, r6
   2d1b8:	beq	2d168 <main@@Base+0x16f0c>
   2d1bc:	mov	r5, #0
   2d1c0:	cmp	r6, r8
   2d1c4:	str	r5, [sp, #28]
   2d1c8:	str	r5, [sp, #24]
   2d1cc:	str	r5, [sp, #16]
   2d1d0:	str	r5, [sp, #20]
   2d1d4:	beq	2d234 <main@@Base+0x16fd8>
   2d1d8:	add	r0, sp, #24
   2d1dc:	mov	r1, r6
   2d1e0:	mov	r2, r8
   2d1e4:	add	r3, sp, #20
   2d1e8:	str	r0, [sp]
   2d1ec:	mov	r0, r9
   2d1f0:	bl	382dc <flatcc_json_parser_integer@@Base>
   2d1f4:	cmp	r0, r6
   2d1f8:	beq	2d244 <main@@Base+0x16fe8>
   2d1fc:	ldr	r2, [sp, #20]
   2d200:	mov	r4, r0
   2d204:	ldr	r0, [sp, #24]
   2d208:	ldr	r1, [sp, #28]
   2d20c:	cmp	r2, #0
   2d210:	beq	2d254 <main@@Base+0x16ff8>
   2d214:	subs	r2, r0, #-2147483647	; 0x80000001
   2d218:	sbcs	r1, r1, #0
   2d21c:	bcc	2d284 <main@@Base+0x17028>
   2d220:	mov	r0, r9
   2d224:	mov	r1, r4
   2d228:	mov	r2, r8
   2d22c:	mov	r3, #8
   2d230:	b	2d270 <main@@Base+0x17014>
   2d234:	mov	r4, r8
   2d238:	cmp	r6, r4
   2d23c:	bne	2d2d0 <main@@Base+0x17074>
   2d240:	b	2d29c <main@@Base+0x17040>
   2d244:	mov	r4, r6
   2d248:	cmp	r6, r4
   2d24c:	bne	2d2d0 <main@@Base+0x17074>
   2d250:	b	2d29c <main@@Base+0x17040>
   2d254:	subs	r2, r0, #-2147483648	; 0x80000000
   2d258:	sbcs	r1, r1, #0
   2d25c:	bcc	2d28c <main@@Base+0x17030>
   2d260:	mov	r0, r9
   2d264:	mov	r1, r4
   2d268:	mov	r2, r8
   2d26c:	mov	r3, #7
   2d270:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2d274:	mov	r4, r0
   2d278:	cmp	r6, r4
   2d27c:	bne	2d2d0 <main@@Base+0x17074>
   2d280:	b	2d29c <main@@Base+0x17040>
   2d284:	rsb	r5, r0, #0
   2d288:	b	2d290 <main@@Base+0x17034>
   2d28c:	mov	r5, r0
   2d290:	str	r5, [sp, #16]
   2d294:	cmp	r6, r4
   2d298:	bne	2d2d0 <main@@Base+0x17074>
   2d29c:	add	r0, sp, #16
   2d2a0:	mov	r1, r6
   2d2a4:	mov	r2, r8
   2d2a8:	str	r0, [sp]
   2d2ac:	mov	r0, r9
   2d2b0:	ldr	r3, [pc, #284]	; 2d3d4 <main@@Base+0x17178>
   2d2b4:	add	r3, pc, r3
   2d2b8:	bl	25970 <main@@Base+0xf714>
   2d2bc:	mov	r4, r0
   2d2c0:	cmp	r0, r6
   2d2c4:	cmpne	r4, r8
   2d2c8:	beq	2d3c8 <main@@Base+0x1716c>
   2d2cc:	ldr	r5, [sp, #16]
   2d2d0:	cmp	r5, #0
   2d2d4:	bne	2d2e4 <main@@Base+0x17088>
   2d2d8:	ldrb	r0, [r9, #8]
   2d2dc:	tst	r0, #2
   2d2e0:	beq	2cfec <main@@Base+0x16d90>
   2d2e4:	ldr	r0, [r9]
   2d2e8:	mov	r1, #0
   2d2ec:	mov	r2, #4
   2d2f0:	mov	r3, #4
   2d2f4:	bl	327e4 <flatcc_builder_table_add@@Base>
   2d2f8:	cmp	r0, #0
   2d2fc:	beq	2d3c8 <main@@Base+0x1716c>
   2d300:	str	r5, [r0]
   2d304:	b	2cfec <main@@Base+0x16d90>
   2d308:	mov	r4, r8
   2d30c:	b	2c70c <main@@Base+0x164b0>
   2d310:	cmp	r0, #125	; 0x7d
   2d314:	bne	2d380 <main@@Base+0x17124>
   2d318:	add	r1, r2, #1
   2d31c:	sub	r0, r8, r1
   2d320:	cmp	r0, #2
   2d324:	blt	2d3a8 <main@@Base+0x1714c>
   2d328:	ldrb	r0, [r1]
   2d32c:	cmp	r0, #32
   2d330:	bls	2d394 <main@@Base+0x17138>
   2d334:	mov	r4, r1
   2d338:	b	2c70c <main@@Base+0x164b0>
   2d33c:	mov	r0, r9
   2d340:	mov	r1, r8
   2d344:	b	2d388 <main@@Base+0x1712c>
   2d348:	mov	r0, r9
   2d34c:	mov	r1, r2
   2d350:	mov	r2, r8
   2d354:	mov	r3, #10
   2d358:	b	2c6b8 <main@@Base+0x1645c>
   2d35c:	bne	2d370 <main@@Base+0x17114>
   2d360:	ldrb	r0, [r2, #2]!
   2d364:	mov	r4, r2
   2d368:	cmp	r0, #32
   2d36c:	bhi	2c6c0 <main@@Base+0x16464>
   2d370:	mov	r0, r9
   2d374:	mov	r2, r8
   2d378:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2d37c:	b	2c6bc <main@@Base+0x16460>
   2d380:	mov	r0, r9
   2d384:	mov	r1, r2
   2d388:	mov	r2, r8
   2d38c:	mov	r3, #10
   2d390:	b	2c704 <main@@Base+0x164a8>
   2d394:	bne	2d3a8 <main@@Base+0x1714c>
   2d398:	ldrb	r0, [r2, #2]!
   2d39c:	mov	r4, r2
   2d3a0:	cmp	r0, #32
   2d3a4:	bhi	2c70c <main@@Base+0x164b0>
   2d3a8:	mov	r0, r9
   2d3ac:	mov	r2, r8
   2d3b0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2d3b4:	b	2c708 <main@@Base+0x164ac>
   2d3b8:	mov	r0, r9
   2d3bc:	mov	r2, r8
   2d3c0:	mov	r3, #33	; 0x21
   2d3c4:	b	2c6b8 <main@@Base+0x1645c>
   2d3c8:	ldr	r7, [sp, #8]
   2d3cc:	b	2c718 <main@@Base+0x164bc>
   2d3d0:	ldrdeq	r1, [r2], -r5
   2d3d4:	andeq	r2, r3, r8, asr #32
   2d3d8:			; <UNDEFINED> instruction: 0x000326bc
   2d3dc:	add	r0, r0, #1
   2d3e0:	uxtb	r1, r0
   2d3e4:	cmp	r1, #12
   2d3e8:	movhi	r0, #0
   2d3ec:	bxhi	lr
   2d3f0:	ldr	r1, [pc, #12]	; 2d404 <main@@Base+0x171a8>
   2d3f4:	sxtb	r0, r0
   2d3f8:	add	r1, pc, r1
   2d3fc:	ldr	r0, [r1, r0, lsl #2]
   2d400:	bx	lr
   2d404:	andeq	lr, r1, r8, asr r0
   2d408:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d40c:	add	fp, sp, #28
   2d410:	sub	sp, sp, #36	; 0x24
   2d414:	mov	r9, r0
   2d418:	mov	r0, #0
   2d41c:	mov	sl, r2
   2d420:	mov	r6, r1
   2d424:	mov	r1, #4
   2d428:	mov	r2, #4
   2d42c:	str	r3, [sp, #12]
   2d430:	str	r0, [r3]
   2d434:	ldr	r0, [r9]
   2d438:	bl	300a8 <flatcc_builder_start_struct@@Base>
   2d43c:	cmp	r0, #0
   2d440:	beq	2d4c4 <main@@Base+0x17268>
   2d444:	cmp	r6, sl
   2d448:	beq	2d480 <main@@Base+0x17224>
   2d44c:	ldrb	r1, [r6]
   2d450:	cmp	r1, #123	; 0x7b
   2d454:	bne	2d480 <main@@Base+0x17224>
   2d458:	add	r1, r6, #1
   2d45c:	str	r0, [sp, #8]
   2d460:	sub	r0, sl, r1
   2d464:	cmp	r0, #2
   2d468:	blt	2d4f8 <main@@Base+0x1729c>
   2d46c:	ldrb	r0, [r1]
   2d470:	cmp	r0, #32
   2d474:	bls	2d4e8 <main@@Base+0x1728c>
   2d478:	mov	r6, r1
   2d47c:	b	2d508 <main@@Base+0x172ac>
   2d480:	mov	r0, r9
   2d484:	mov	r1, r6
   2d488:	mov	r2, sl
   2d48c:	mov	r3, #21
   2d490:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2d494:	mov	r6, r0
   2d498:	cmp	r6, sl
   2d49c:	mov	r1, sl
   2d4a0:	beq	2d4c8 <main@@Base+0x1726c>
   2d4a4:	ldr	r0, [r9]
   2d4a8:	bl	30190 <flatcc_builder_end_struct@@Base>
   2d4ac:	ldr	r1, [sp, #12]
   2d4b0:	cmp	r0, #0
   2d4b4:	str	r0, [r1]
   2d4b8:	mov	r1, r6
   2d4bc:	bne	2d4dc <main@@Base+0x17280>
   2d4c0:	b	2d4c8 <main@@Base+0x1726c>
   2d4c4:	mov	r1, r6
   2d4c8:	mov	r0, r9
   2d4cc:	mov	r2, sl
   2d4d0:	mov	r3, #33	; 0x21
   2d4d4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2d4d8:	mov	r6, r0
   2d4dc:	mov	r0, r6
   2d4e0:	sub	sp, fp, #28
   2d4e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d4e8:	bne	2d4f8 <main@@Base+0x1729c>
   2d4ec:	ldrb	r0, [r6, #2]!
   2d4f0:	cmp	r0, #32
   2d4f4:	bhi	2d508 <main@@Base+0x172ac>
   2d4f8:	mov	r0, r9
   2d4fc:	mov	r2, sl
   2d500:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2d504:	mov	r6, r0
   2d508:	cmp	r6, sl
   2d50c:	mov	r2, sl
   2d510:	beq	2d554 <main@@Base+0x172f8>
   2d514:	ldrb	r0, [r6]
   2d518:	cmp	r0, #125	; 0x7d
   2d51c:	bne	2d550 <main@@Base+0x172f4>
   2d520:	add	r1, r6, #1
   2d524:	sub	r0, sl, r1
   2d528:	cmp	r0, #2
   2d52c:	blt	2da48 <main@@Base+0x177ec>
   2d530:	ldrb	r0, [r1]
   2d534:	cmp	r0, #32
   2d538:	bhi	2da0c <main@@Base+0x177b0>
   2d53c:	bne	2da48 <main@@Base+0x177ec>
   2d540:	ldrb	r0, [r6, #2]!
   2d544:	cmp	r0, #32
   2d548:	bhi	2d498 <main@@Base+0x1723c>
   2d54c:	b	2da48 <main@@Base+0x177ec>
   2d550:	mov	r2, r6
   2d554:	cmp	r2, sl
   2d558:	mov	r1, sl
   2d55c:	beq	2d5a8 <main@@Base+0x1734c>
   2d560:	ldrb	r0, [r2]
   2d564:	cmp	r0, #46	; 0x2e
   2d568:	beq	2d580 <main@@Base+0x17324>
   2d56c:	cmp	r0, #34	; 0x22
   2d570:	bne	2d59c <main@@Base+0x17340>
   2d574:	mov	r0, #0
   2d578:	add	r1, r2, #1
   2d57c:	b	2d5a4 <main@@Base+0x17348>
   2d580:	mov	r1, r2
   2d584:	mov	r0, r9
   2d588:	mov	r2, sl
   2d58c:	mov	r3, #5
   2d590:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2d594:	mov	r1, r0
   2d598:	b	2d5a8 <main@@Base+0x1734c>
   2d59c:	mov	r0, #1
   2d5a0:	mov	r1, r2
   2d5a4:	str	r0, [r9, #12]
   2d5a8:	sub	r0, sl, r1
   2d5ac:	mov	r2, #8
   2d5b0:	cmp	r0, #8
   2d5b4:	movcs	r0, r2
   2d5b8:	sub	r2, r0, #1
   2d5bc:	cmp	r2, #7
   2d5c0:	bhi	2d6fc <main@@Base+0x174a0>
   2d5c4:	add	r5, pc, #36	; 0x24
   2d5c8:	mov	r8, #0
   2d5cc:	mov	ip, #0
   2d5d0:	mov	lr, #0
   2d5d4:	mov	r6, #0
   2d5d8:	mov	r3, #0
   2d5dc:	mov	r7, #0
   2d5e0:	mov	r4, #0
   2d5e4:	ldr	r0, [r5, r2, lsl #2]
   2d5e8:	mov	r2, #0
   2d5ec:	add	pc, r5, r0
   2d5f0:	andeq	r0, r0, r4, rrx
   2d5f4:	andeq	r0, r0, ip, asr r0
   2d5f8:	andeq	r0, r0, r4, asr r0
   2d5fc:	andeq	r0, r0, ip, asr #32
   2d600:	andeq	r0, r0, r0, asr #32
   2d604:	andeq	r0, r0, r4, lsr r0
   2d608:	andeq	r0, r0, r4, lsr #32
   2d60c:	andeq	r0, r0, r0, lsr #32
   2d610:	ldrb	ip, [r1, #7]
   2d614:	ldrb	r0, [r1, #6]
   2d618:	mov	lr, r8
   2d61c:	orr	r0, ip, r0, lsl #8
   2d620:	mov	r8, r0
   2d624:	ldrb	r0, [r1, #5]
   2d628:	mov	r6, lr
   2d62c:	orr	r8, r8, r0, lsl #16
   2d630:	ldrb	r0, [r1, #4]
   2d634:	mov	r3, r6
   2d638:	orr	r8, r8, r0, lsl #24
   2d63c:	ldrb	r0, [r1, #3]
   2d640:	orr	r7, r0, r3
   2d644:	ldrb	r0, [r1, #2]
   2d648:	orr	r4, r7, r0, lsl #8
   2d64c:	ldrb	r0, [r1, #1]
   2d650:	orr	r2, r4, r0, lsl #16
   2d654:	ldrb	r3, [r1]
   2d658:	movw	r0, #29285	; 0x7265
   2d65c:	movt	r0, #29535	; 0x735f
   2d660:	eor	r0, r8, r0
   2d664:	orr	r2, r2, r3, lsl #24
   2d668:	movw	r3, #28523	; 0x6f6b
   2d66c:	movt	r3, #25199	; 0x626f
   2d670:	eor	r2, r2, r3
   2d674:	orrs	r0, r0, r2
   2d678:	bne	2d6fc <main@@Base+0x174a0>
   2d67c:	add	r8, r1, #8
   2d680:	mov	r3, #8
   2d684:	sub	r0, sl, r8
   2d688:	cmp	r0, #8
   2d68c:	movcc	r3, r0
   2d690:	sub	r2, r3, #2
   2d694:	cmp	r2, #7
   2d698:	bcs	2d704 <main@@Base+0x174a8>
   2d69c:	ldrb	r2, [r1, #9]
   2d6a0:	lsl	r3, r2, #16
   2d6a4:	mov	r2, #0
   2d6a8:	ldrb	r7, [r8]
   2d6ac:	orr	r3, r3, r7, lsl #24
   2d6b0:	movw	r7, #0
   2d6b4:	movt	r7, #24932	; 0x6164
   2d6b8:	eor	r3, r3, r7
   2d6bc:	orrs	r2, r2, r3
   2d6c0:	bne	2d7b0 <main@@Base+0x17554>
   2d6c4:	cmp	r0, #3
   2d6c8:	blt	2d7b0 <main@@Base+0x17554>
   2d6cc:	mov	r2, r1
   2d6d0:	ldr	r3, [r9, #12]
   2d6d4:	ldrb	r0, [r2, #10]!
   2d6d8:	cmp	r3, #0
   2d6dc:	beq	2d718 <main@@Base+0x174bc>
   2d6e0:	cmp	r0, #33	; 0x21
   2d6e4:	bcc	2d6f0 <main@@Base+0x17494>
   2d6e8:	cmp	r0, #58	; 0x3a
   2d6ec:	bne	2d7b0 <main@@Base+0x17554>
   2d6f0:	mov	r0, #0
   2d6f4:	str	r0, [r9, #12]
   2d6f8:	b	2d724 <main@@Base+0x174c8>
   2d6fc:	mov	r0, r9
   2d700:	b	2d7b8 <main@@Base+0x1755c>
   2d704:	cmp	r3, #1
   2d708:	mov	r2, #0
   2d70c:	mov	r3, #0
   2d710:	beq	2d6a8 <main@@Base+0x1744c>
   2d714:	b	2d7b0 <main@@Base+0x17554>
   2d718:	cmp	r0, #34	; 0x22
   2d71c:	bne	2d7b0 <main@@Base+0x17554>
   2d720:	add	r2, r1, #11
   2d724:	sub	r0, sl, r2
   2d728:	cmp	r0, #2
   2d72c:	blt	2d760 <main@@Base+0x17504>
   2d730:	ldrb	r0, [r2]
   2d734:	cmp	r0, #32
   2d738:	bls	2d74c <main@@Base+0x174f0>
   2d73c:	mov	r7, r2
   2d740:	cmp	r7, sl
   2d744:	bne	2d77c <main@@Base+0x17520>
   2d748:	b	2d888 <main@@Base+0x1762c>
   2d74c:	bne	2d760 <main@@Base+0x17504>
   2d750:	mov	r7, r2
   2d754:	ldrb	r0, [r7, #1]!
   2d758:	cmp	r0, #32
   2d75c:	bhi	2d774 <main@@Base+0x17518>
   2d760:	mov	r1, r2
   2d764:	mov	r0, r9
   2d768:	mov	r2, sl
   2d76c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2d770:	mov	r7, r0
   2d774:	cmp	r7, sl
   2d778:	beq	2d888 <main@@Base+0x1762c>
   2d77c:	ldrb	r0, [r7]
   2d780:	cmp	r0, #58	; 0x3a
   2d784:	bne	2d888 <main@@Base+0x1762c>
   2d788:	add	r1, r7, #1
   2d78c:	sub	r0, sl, r1
   2d790:	cmp	r0, #2
   2d794:	blt	2d8b0 <main@@Base+0x17654>
   2d798:	ldrb	r0, [r1]
   2d79c:	cmp	r0, #32
   2d7a0:	bls	2d8a0 <main@@Base+0x17644>
   2d7a4:	mov	r7, r1
   2d7a8:	cmp	r8, r7
   2d7ac:	bne	2d8c8 <main@@Base+0x1766c>
   2d7b0:	mov	r0, r9
   2d7b4:	mov	r1, r8
   2d7b8:	mov	r2, sl
   2d7bc:	bl	3682c <flatcc_json_parser_unmatched_symbol@@Base>
   2d7c0:	mov	r1, r0
   2d7c4:	sub	r0, sl, r1
   2d7c8:	cmp	r0, #2
   2d7cc:	blt	2d800 <main@@Base+0x175a4>
   2d7d0:	ldrb	r0, [r1]
   2d7d4:	cmp	r0, #32
   2d7d8:	bls	2d7ec <main@@Base+0x17590>
   2d7dc:	mov	r2, r1
   2d7e0:	cmp	r2, sl
   2d7e4:	bne	2d818 <main@@Base+0x175bc>
   2d7e8:	b	2d9e0 <main@@Base+0x17784>
   2d7ec:	bne	2d800 <main@@Base+0x175a4>
   2d7f0:	mov	r2, r1
   2d7f4:	ldrb	r0, [r2, #1]!
   2d7f8:	cmp	r0, #32
   2d7fc:	bhi	2d810 <main@@Base+0x175b4>
   2d800:	mov	r0, r9
   2d804:	mov	r2, sl
   2d808:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2d80c:	mov	r2, r0
   2d810:	cmp	r2, sl
   2d814:	beq	2d9e0 <main@@Base+0x17784>
   2d818:	ldrb	r0, [r2]
   2d81c:	cmp	r0, #44	; 0x2c
   2d820:	bne	2d9e8 <main@@Base+0x1778c>
   2d824:	add	r1, r2, #1
   2d828:	sub	r0, sl, r1
   2d82c:	cmp	r0, #2
   2d830:	blt	2d860 <main@@Base+0x17604>
   2d834:	ldrb	r0, [r1]
   2d838:	cmp	r0, #32
   2d83c:	bls	2d850 <main@@Base+0x175f4>
   2d840:	mov	r2, r1
   2d844:	cmp	r2, sl
   2d848:	bne	2d878 <main@@Base+0x1761c>
   2d84c:	b	2da14 <main@@Base+0x177b8>
   2d850:	bne	2d860 <main@@Base+0x17604>
   2d854:	ldrb	r0, [r2, #2]!
   2d858:	cmp	r0, #32
   2d85c:	bhi	2d870 <main@@Base+0x17614>
   2d860:	mov	r0, r9
   2d864:	mov	r2, sl
   2d868:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2d86c:	mov	r2, r0
   2d870:	cmp	r2, sl
   2d874:	beq	2da14 <main@@Base+0x177b8>
   2d878:	ldrb	r0, [r2]
   2d87c:	cmp	r0, #125	; 0x7d
   2d880:	bne	2d554 <main@@Base+0x172f8>
   2d884:	b	2d9f0 <main@@Base+0x17794>
   2d888:	mov	r0, r9
   2d88c:	mov	r1, r7
   2d890:	mov	r2, sl
   2d894:	mov	r3, #4
   2d898:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2d89c:	b	2d8bc <main@@Base+0x17660>
   2d8a0:	bne	2d8b0 <main@@Base+0x17654>
   2d8a4:	ldrb	r0, [r7, #2]!
   2d8a8:	cmp	r0, #32
   2d8ac:	bhi	2d8c0 <main@@Base+0x17664>
   2d8b0:	mov	r0, r9
   2d8b4:	mov	r2, sl
   2d8b8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2d8bc:	mov	r7, r0
   2d8c0:	cmp	r8, r7
   2d8c4:	beq	2d7b0 <main@@Base+0x17554>
   2d8c8:	mov	r6, #0
   2d8cc:	cmp	r7, sl
   2d8d0:	str	r6, [sp, #28]
   2d8d4:	str	r6, [sp, #24]
   2d8d8:	str	r6, [sp, #16]
   2d8dc:	str	r6, [sp, #20]
   2d8e0:	beq	2d93c <main@@Base+0x176e0>
   2d8e4:	add	r0, sp, #24
   2d8e8:	mov	r1, r7
   2d8ec:	mov	r2, sl
   2d8f0:	add	r3, sp, #20
   2d8f4:	str	r0, [sp]
   2d8f8:	mov	r0, r9
   2d8fc:	bl	382dc <flatcc_json_parser_integer@@Base>
   2d900:	cmp	r0, r7
   2d904:	beq	2d94c <main@@Base+0x176f0>
   2d908:	ldr	r3, [sp, #20]
   2d90c:	mov	r1, r0
   2d910:	ldr	r0, [sp, #24]
   2d914:	ldr	r2, [sp, #28]
   2d918:	cmp	r3, #0
   2d91c:	beq	2d95c <main@@Base+0x17700>
   2d920:	subs	r3, r0, #-2147483647	; 0x80000001
   2d924:	sbcs	r2, r2, #0
   2d928:	bcc	2d988 <main@@Base+0x1772c>
   2d92c:	mov	r0, r9
   2d930:	mov	r2, sl
   2d934:	mov	r3, #8
   2d938:	b	2d974 <main@@Base+0x17718>
   2d93c:	mov	r1, sl
   2d940:	cmp	r7, r1
   2d944:	bne	2d9d4 <main@@Base+0x17778>
   2d948:	b	2d9a0 <main@@Base+0x17744>
   2d94c:	mov	r1, r7
   2d950:	cmp	r7, r1
   2d954:	bne	2d9d4 <main@@Base+0x17778>
   2d958:	b	2d9a0 <main@@Base+0x17744>
   2d95c:	subs	r3, r0, #-2147483648	; 0x80000000
   2d960:	sbcs	r2, r2, #0
   2d964:	bcc	2d990 <main@@Base+0x17734>
   2d968:	mov	r0, r9
   2d96c:	mov	r2, sl
   2d970:	mov	r3, #7
   2d974:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2d978:	mov	r1, r0
   2d97c:	cmp	r7, r1
   2d980:	bne	2d9d4 <main@@Base+0x17778>
   2d984:	b	2d9a0 <main@@Base+0x17744>
   2d988:	rsb	r6, r0, #0
   2d98c:	b	2d994 <main@@Base+0x17738>
   2d990:	mov	r6, r0
   2d994:	str	r6, [sp, #16]
   2d998:	cmp	r7, r1
   2d99c:	bne	2d9d4 <main@@Base+0x17778>
   2d9a0:	add	r0, sp, #16
   2d9a4:	mov	r1, r7
   2d9a8:	mov	r2, sl
   2d9ac:	str	r0, [sp]
   2d9b0:	mov	r0, r9
   2d9b4:	ldr	r3, [pc, #172]	; 2da68 <main@@Base+0x1780c>
   2d9b8:	add	r3, pc, r3
   2d9bc:	bl	25970 <main@@Base+0xf714>
   2d9c0:	mov	r1, r0
   2d9c4:	cmp	r0, r7
   2d9c8:	cmpne	r1, sl
   2d9cc:	beq	2da58 <main@@Base+0x177fc>
   2d9d0:	ldr	r6, [sp, #16]
   2d9d4:	ldr	r0, [sp, #8]
   2d9d8:	str	r6, [r0]
   2d9dc:	b	2d7c4 <main@@Base+0x17568>
   2d9e0:	mov	r1, sl
   2d9e4:	b	2d4c8 <main@@Base+0x1726c>
   2d9e8:	cmp	r0, #125	; 0x7d
   2d9ec:	bne	2da20 <main@@Base+0x177c4>
   2d9f0:	add	r1, r2, #1
   2d9f4:	sub	r0, sl, r1
   2d9f8:	cmp	r0, #2
   2d9fc:	blt	2da48 <main@@Base+0x177ec>
   2da00:	ldrb	r0, [r1]
   2da04:	cmp	r0, #32
   2da08:	bls	2da34 <main@@Base+0x177d8>
   2da0c:	mov	r6, r1
   2da10:	b	2d498 <main@@Base+0x1723c>
   2da14:	mov	r0, r9
   2da18:	mov	r1, sl
   2da1c:	b	2da28 <main@@Base+0x177cc>
   2da20:	mov	r0, r9
   2da24:	mov	r1, r2
   2da28:	mov	r2, sl
   2da2c:	mov	r3, #10
   2da30:	b	2d490 <main@@Base+0x17234>
   2da34:	bne	2da48 <main@@Base+0x177ec>
   2da38:	ldrb	r0, [r2, #2]!
   2da3c:	mov	r6, r2
   2da40:	cmp	r0, #32
   2da44:	bhi	2d498 <main@@Base+0x1723c>
   2da48:	mov	r0, r9
   2da4c:	mov	r2, sl
   2da50:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2da54:	b	2d494 <main@@Base+0x17238>
   2da58:	mov	r0, r9
   2da5c:	mov	r2, sl
   2da60:	mov	r3, #33	; 0x21
   2da64:	b	2d490 <main@@Base+0x17234>
   2da68:	andeq	r1, r3, ip, asr r9
   2da6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2da70:	add	fp, sp, #28
   2da74:	sub	sp, sp, #44	; 0x2c
   2da78:	mov	r6, r2
   2da7c:	ldr	r2, [fp, #8]
   2da80:	mov	r5, r0
   2da84:	mov	r0, #0
   2da88:	mov	r8, r3
   2da8c:	cmp	r1, r6
   2da90:	strh	r0, [r2]
   2da94:	beq	2dad8 <main@@Base+0x1787c>
   2da98:	ldrb	r0, [r1]
   2da9c:	cmp	r0, #46	; 0x2e
   2daa0:	beq	2dab8 <main@@Base+0x1785c>
   2daa4:	cmp	r0, #34	; 0x22
   2daa8:	bne	2dad0 <main@@Base+0x17874>
   2daac:	mov	r0, #0
   2dab0:	add	r1, r1, #1
   2dab4:	b	2dad4 <main@@Base+0x17878>
   2dab8:	mov	r0, r5
   2dabc:	mov	r2, r6
   2dac0:	mov	r3, #5
   2dac4:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2dac8:	mov	r1, r0
   2dacc:	b	2dad8 <main@@Base+0x1787c>
   2dad0:	mov	r0, #1
   2dad4:	str	r0, [r5, #12]
   2dad8:	ldr	r0, [r5, #12]
   2dadc:	cmp	r0, #0
   2dae0:	beq	2daf4 <main@@Base+0x17898>
   2dae4:	mov	r7, r1
   2dae8:	cmp	r7, r6
   2daec:	bne	2db38 <main@@Base+0x178dc>
   2daf0:	b	2dc48 <main@@Base+0x179ec>
   2daf4:	sub	r0, r6, r1
   2daf8:	cmp	r0, #2
   2dafc:	blt	2db20 <main@@Base+0x178c4>
   2db00:	ldrb	r0, [r1]
   2db04:	cmp	r0, #32
   2db08:	bhi	2dae4 <main@@Base+0x17888>
   2db0c:	bne	2db20 <main@@Base+0x178c4>
   2db10:	mov	r7, r1
   2db14:	ldrb	r0, [r7, #1]!
   2db18:	cmp	r0, #32
   2db1c:	bhi	2db30 <main@@Base+0x178d4>
   2db20:	mov	r0, r5
   2db24:	mov	r2, r6
   2db28:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   2db2c:	mov	r7, r0
   2db30:	cmp	r7, r6
   2db34:	beq	2dc48 <main@@Base+0x179ec>
   2db38:	add	r0, r8, #4
   2db3c:	mov	r1, #0
   2db40:	add	sl, sp, #32
   2db44:	add	r9, sp, #28
   2db48:	str	r8, [sp, #16]
   2db4c:	str	r1, [sp, #20]
   2db50:	str	r0, [sp, #12]
   2db54:	ldr	r4, [r8]
   2db58:	mov	r8, r0
   2db5c:	add	r0, sp, #24
   2db60:	mov	r1, r7
   2db64:	mov	r2, r6
   2db68:	mov	r3, r9
   2db6c:	str	sl, [sp]
   2db70:	str	r0, [sp, #4]
   2db74:	mov	r0, r5
   2db78:	blx	r4
   2db7c:	cmp	r0, r6
   2db80:	beq	2dc48 <main@@Base+0x179ec>
   2db84:	mov	r4, r0
   2db88:	cmp	r0, r7
   2db8c:	bne	2dba0 <main@@Base+0x17944>
   2db90:	ldr	r4, [r8], #4
   2db94:	cmp	r4, #0
   2db98:	bne	2db5c <main@@Base+0x17900>
   2db9c:	b	2dc50 <main@@Base+0x179f4>
   2dba0:	ldr	r0, [sp, #28]
   2dba4:	cmp	r0, #0
   2dba8:	beq	2dbd0 <main@@Base+0x17974>
   2dbac:	mov	r0, r5
   2dbb0:	mov	r1, r4
   2dbb4:	mov	r2, r6
   2dbb8:	mov	r3, #8
   2dbbc:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2dbc0:	ldr	r8, [sp, #16]
   2dbc4:	cmp	r0, r6
   2dbc8:	bne	2dc18 <main@@Base+0x179bc>
   2dbcc:	b	2dc48 <main@@Base+0x179ec>
   2dbd0:	ldr	r0, [sp, #32]
   2dbd4:	ldr	r1, [sp, #36]	; 0x24
   2dbd8:	ldr	r8, [sp, #16]
   2dbdc:	subs	r2, r0, #65536	; 0x10000
   2dbe0:	sbcs	r1, r1, #0
   2dbe4:	bcc	2dc08 <main@@Base+0x179ac>
   2dbe8:	mov	r0, r5
   2dbec:	mov	r1, r4
   2dbf0:	mov	r2, r6
   2dbf4:	mov	r3, #7
   2dbf8:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2dbfc:	cmp	r0, r6
   2dc00:	bne	2dc18 <main@@Base+0x179bc>
   2dc04:	b	2dc48 <main@@Base+0x179ec>
   2dc08:	str	r0, [sp, #20]
   2dc0c:	mov	r0, r4
   2dc10:	cmp	r0, r6
   2dc14:	beq	2dc48 <main@@Base+0x179ec>
   2dc18:	ldr	r0, [fp, #8]
   2dc1c:	ldr	r2, [sp, #20]
   2dc20:	mov	r7, r4
   2dc24:	mov	r1, r0
   2dc28:	ldrh	r0, [r0]
   2dc2c:	add	r0, r0, r2
   2dc30:	strh	r0, [r1]
   2dc34:	ldr	r0, [sp, #24]
   2dc38:	cmp	r0, #0
   2dc3c:	ldr	r0, [sp, #12]
   2dc40:	bne	2db54 <main@@Base+0x178f8>
   2dc44:	b	2dc68 <main@@Base+0x17a0c>
   2dc48:	mov	r4, r6
   2dc4c:	b	2dc68 <main@@Base+0x17a0c>
   2dc50:	mov	r0, r5
   2dc54:	mov	r1, r7
   2dc58:	mov	r2, r6
   2dc5c:	mov	r3, #23
   2dc60:	bl	35f80 <flatcc_json_parser_set_error@@Base>
   2dc64:	mov	r4, r0
   2dc68:	mov	r0, r4
   2dc6c:	sub	sp, fp, #28
   2dc70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dc74:	push	{r4, r5, r6, sl, fp, lr}
   2dc78:	add	fp, sp, #16
   2dc7c:	sub	sp, sp, #16
   2dc80:	mov	r5, r0
   2dc84:	ldr	r0, [pc, #228]	; 2dd70 <main@@Base+0x17b14>
   2dc88:	mov	r4, r1
   2dc8c:	mov	r6, #1
   2dc90:	mov	r1, #0
   2dc94:	mov	r3, #0
   2dc98:	mov	r2, r4
   2dc9c:	add	r0, pc, r0
   2dca0:	stm	sp, {r0, r6}
   2dca4:	mov	r0, r5
   2dca8:	bl	3e374 <flatcc_json_printer_float_struct_field@@Base>
   2dcac:	ldr	r0, [pc, #192]	; 2dd74 <main@@Base+0x17b18>
   2dcb0:	mov	r1, #1
   2dcb4:	mov	r2, r4
   2dcb8:	mov	r3, #4
   2dcbc:	add	r0, pc, r0
   2dcc0:	stm	sp, {r0, r6}
   2dcc4:	mov	r0, r5
   2dcc8:	bl	3e374 <flatcc_json_printer_float_struct_field@@Base>
   2dccc:	ldr	r0, [pc, #164]	; 2dd78 <main@@Base+0x17b1c>
   2dcd0:	mov	r1, #2
   2dcd4:	mov	r2, r4
   2dcd8:	mov	r3, #8
   2dcdc:	add	r0, pc, r0
   2dce0:	stm	sp, {r0, r6}
   2dce4:	mov	r0, r5
   2dce8:	bl	3e374 <flatcc_json_printer_float_struct_field@@Base>
   2dcec:	ldr	r0, [pc, #136]	; 2dd7c <main@@Base+0x17b20>
   2dcf0:	mov	r6, #5
   2dcf4:	mov	r1, #3
   2dcf8:	mov	r2, r4
   2dcfc:	mov	r3, #16
   2dd00:	add	r0, pc, r0
   2dd04:	stm	sp, {r0, r6}
   2dd08:	mov	r0, r5
   2dd0c:	bl	3e3dc <flatcc_json_printer_double_struct_field@@Base>
   2dd10:	ldr	r0, [pc, #104]	; 2dd80 <main@@Base+0x17b24>
   2dd14:	ldr	r1, [pc, #104]	; 2dd84 <main@@Base+0x17b28>
   2dd18:	mov	r2, r4
   2dd1c:	mov	r3, #24
   2dd20:	add	r1, pc, r1
   2dd24:	add	r0, pc, r0
   2dd28:	stm	sp, {r1, r6}
   2dd2c:	str	r0, [sp, #8]
   2dd30:	mov	r0, r5
   2dd34:	mov	r1, #4
   2dd38:	bl	3e6e8 <flatcc_json_printer_int8_enum_struct_field@@Base>
   2dd3c:	ldr	r0, [pc, #68]	; 2dd88 <main@@Base+0x17b2c>
   2dd40:	ldr	r1, [pc, #68]	; 2dd8c <main@@Base+0x17b30>
   2dd44:	mov	r2, r4
   2dd48:	mov	r3, #26
   2dd4c:	add	r1, pc, r1
   2dd50:	add	r0, pc, r0
   2dd54:	stm	sp, {r1, r6}
   2dd58:	str	r0, [sp, #8]
   2dd5c:	mov	r0, r5
   2dd60:	mov	r1, #5
   2dd64:	bl	45e84 <flatcc_json_printer_embedded_struct_field@@Base>
   2dd68:	sub	sp, fp, #16
   2dd6c:	pop	{r4, r5, r6, sl, fp, pc}
   2dd70:	andeq	sp, r1, r2, lsl r4
   2dd74:	andeq	pc, r1, lr, ror r9	; <UNPREDICTABLE>
   2dd78:	andeq	sp, r1, fp, lsl #11
   2dd7c:	andeq	sp, r1, r9, ror #10
   2dd80:	andeq	r0, r0, r4, rrx
   2dd84:	andeq	sp, r1, pc, asr #10
   2dd88:	ldrdeq	r0, [r0], -r4
   2dd8c:	andeq	sp, r1, r9, lsr #10
   2dd90:	push	{r4, r5, r6, r7, fp, lr}
   2dd94:	add	fp, sp, #16
   2dd98:	mov	r4, r0
   2dd9c:	mvn	r0, #0
   2dda0:	uxtb	r7, r1
   2dda4:	uxtab	r0, r0, r1
   2dda8:	ands	r5, r0, r7
   2ddac:	movwne	r5, #1
   2ddb0:	cmp	r1, #0
   2ddb4:	beq	2de10 <main@@Base+0x17bb4>
   2ddb8:	ands	r0, r1, #244	; 0xf4
   2ddbc:	bne	2de10 <main@@Base+0x17bb4>
   2ddc0:	mov	r0, r4
   2ddc4:	mov	r1, r5
   2ddc8:	bl	3c35c <flatcc_json_printer_delimit_enum_flags@@Base>
   2ddcc:	mov	r6, #0
   2ddd0:	tst	r7, #1
   2ddd4:	bne	2de1c <main@@Base+0x17bc0>
   2ddd8:	tst	r7, #2
   2dddc:	bne	2de40 <main@@Base+0x17be4>
   2dde0:	tst	r7, #8
   2dde4:	beq	2de00 <main@@Base+0x17ba4>
   2dde8:	ldr	r2, [pc, #128]	; 2de70 <main@@Base+0x17c14>
   2ddec:	mov	r0, r4
   2ddf0:	mov	r1, r6
   2ddf4:	mov	r3, #4
   2ddf8:	add	r2, pc, r2
   2ddfc:	bl	3c390 <flatcc_json_printer_enum_flag@@Base>
   2de00:	mov	r0, r4
   2de04:	mov	r1, r5
   2de08:	pop	{r4, r5, r6, r7, fp, lr}
   2de0c:	b	3c35c <flatcc_json_printer_delimit_enum_flags@@Base>
   2de10:	mov	r0, r4
   2de14:	pop	{r4, r5, r6, r7, fp, lr}
   2de18:	b	3c058 <flatcc_json_printer_int8@@Base>
   2de1c:	ldr	r2, [pc, #68]	; 2de68 <main@@Base+0x17c0c>
   2de20:	mov	r0, r4
   2de24:	mov	r1, #0
   2de28:	mov	r3, #3
   2de2c:	add	r2, pc, r2
   2de30:	bl	3c390 <flatcc_json_printer_enum_flag@@Base>
   2de34:	mov	r6, #1
   2de38:	tst	r7, #2
   2de3c:	beq	2dde0 <main@@Base+0x17b84>
   2de40:	ldr	r2, [pc, #36]	; 2de6c <main@@Base+0x17c10>
   2de44:	mov	r0, r4
   2de48:	mov	r1, r6
   2de4c:	mov	r3, #5
   2de50:	add	r2, pc, r2
   2de54:	bl	3c390 <flatcc_json_printer_enum_flag@@Base>
   2de58:	add	r6, r6, #1
   2de5c:	tst	r7, #8
   2de60:	bne	2dde8 <main@@Base+0x17b8c>
   2de64:	b	2de00 <main@@Base+0x17ba4>
   2de68:	andeq	sp, r1, pc, asr #8
   2de6c:	andeq	sp, r1, pc, lsr #8
   2de70:	andeq	sp, r1, sp, lsl #9
   2de74:	sub	r1, r1, #1
   2de78:	cmp	r1, #3
   2de7c:	bhi	2deac <main@@Base+0x17c50>
   2de80:	add	r2, pc, #4
   2de84:	ldr	r1, [r2, r1, lsl #2]
   2de88:	add	pc, r2, r1
   2de8c:	andeq	r0, r0, r0, lsl r0
   2de90:	andeq	r0, r0, r0, lsr r0
   2de94:	andeq	r0, r0, r0, asr #32
   2de98:	andeq	r0, r0, r0, asr r0
   2de9c:	ldr	r1, [pc, #72]	; 2deec <main@@Base+0x17c90>
   2dea0:	mov	r2, #7
   2dea4:	add	r1, pc, r1
   2dea8:	b	3c270 <flatcc_json_printer_enum@@Base>
   2deac:	ldr	r1, [pc, #72]	; 2defc <main@@Base+0x17ca0>
   2deb0:	mov	r2, #4
   2deb4:	add	r1, pc, r1
   2deb8:	b	3c270 <flatcc_json_printer_enum@@Base>
   2debc:	ldr	r1, [pc, #44]	; 2def0 <main@@Base+0x17c94>
   2dec0:	mov	r2, #23
   2dec4:	add	r1, pc, r1
   2dec8:	b	3c270 <flatcc_json_printer_enum@@Base>
   2decc:	ldr	r1, [pc, #32]	; 2def4 <main@@Base+0x17c98>
   2ded0:	mov	r2, #8
   2ded4:	add	r1, pc, r1
   2ded8:	b	3c270 <flatcc_json_printer_enum@@Base>
   2dedc:	ldr	r1, [pc, #20]	; 2def8 <main@@Base+0x17c9c>
   2dee0:	mov	r2, #3
   2dee4:	add	r1, pc, r1
   2dee8:	b	3c270 <flatcc_json_printer_enum@@Base>
   2deec:	andeq	sp, r1, r6, ror #7
   2def0:	andeq	sp, r1, lr, asr #7
   2def4:	ldrdeq	sp, [r1], -r6
   2def8:	andeq	sp, r1, pc, asr #7
   2defc:	ldrdeq	lr, [r1], -r7
   2df00:	ldrb	r2, [r1, #8]
   2df04:	sub	r2, r2, #1
   2df08:	uxtb	r3, r2
   2df0c:	cmp	r3, #3
   2df10:	bxhi	lr
   2df14:	ldr	r3, [pc, #12]	; 2df28 <main@@Base+0x17ccc>
   2df18:	sxtb	r2, r2
   2df1c:	add	r3, pc, r3
   2df20:	ldr	r2, [r3, r2, lsl #2]
   2df24:	b	45bd0 <flatcc_json_printer_union_table@@Base>
   2df28:	muleq	r3, ip, lr
   2df2c:	push	{r4, r5, r6, sl, fp, lr}
   2df30:	add	fp, sp, #16
   2df34:	sub	sp, sp, #8
   2df38:	mov	r5, r0
   2df3c:	ldr	r0, [pc, #72]	; 2df8c <main@@Base+0x17d30>
   2df40:	mov	r4, r1
   2df44:	mov	r6, #1
   2df48:	mov	r1, #0
   2df4c:	mov	r3, #0
   2df50:	mov	r2, r4
   2df54:	add	r0, pc, r0
   2df58:	stm	sp, {r0, r6}
   2df5c:	mov	r0, r5
   2df60:	bl	3e170 <flatcc_json_printer_int16_struct_field@@Base>
   2df64:	ldr	r0, [pc, #36]	; 2df90 <main@@Base+0x17d34>
   2df68:	mov	r1, #1
   2df6c:	mov	r2, r4
   2df70:	mov	r3, #2
   2df74:	add	r0, pc, r0
   2df78:	stm	sp, {r0, r6}
   2df7c:	mov	r0, r5
   2df80:	bl	3e044 <flatcc_json_printer_int8_struct_field@@Base>
   2df84:	sub	sp, fp, #16
   2df88:	pop	{r4, r5, r6, sl, fp, pc}
   2df8c:	andeq	sp, r1, sp, lsr r2
   2df90:			; <UNDEFINED> instruction: 0x0001d3bc
   2df94:	push	{r4, r5, r6, sl, fp, lr}
   2df98:	add	fp, sp, #16
   2df9c:	sub	sp, sp, #16
   2dfa0:	mov	r5, r0
   2dfa4:	mov	r0, #2
   2dfa8:	mov	r2, #0
   2dfac:	mov	r4, r1
   2dfb0:	mov	r6, #0
   2dfb4:	str	r0, [sp]
   2dfb8:	mov	r0, r5
   2dfbc:	ldr	r3, [pc, #84]	; 2e018 <main@@Base+0x17dbc>
   2dfc0:	add	r3, pc, r3
   2dfc4:	bl	3c45c <flatcc_json_printer_string_field@@Base>
   2dfc8:	mov	r0, #3
   2dfcc:	str	r6, [sp, #8]
   2dfd0:	str	r6, [sp, #12]
   2dfd4:	mov	r1, r4
   2dfd8:	mov	r2, #1
   2dfdc:	str	r0, [sp]
   2dfe0:	mov	r0, r5
   2dfe4:	ldr	r3, [pc, #48]	; 2e01c <main@@Base+0x17dc0>
   2dfe8:	add	r3, pc, r3
   2dfec:	bl	3d008 <flatcc_json_printer_int64_field@@Base>
   2dff0:	mov	r0, #5
   2dff4:	mov	r1, r4
   2dff8:	mov	r2, #2
   2dffc:	stm	sp, {r0, r6}
   2e000:	mov	r0, r5
   2e004:	ldr	r3, [pc, #20]	; 2e020 <main@@Base+0x17dc4>
   2e008:	add	r3, pc, r3
   2e00c:	bl	3ca44 <flatcc_json_printer_uint16_field@@Base>
   2e010:	sub	sp, fp, #16
   2e014:	pop	{r4, r5, r6, sl, fp, pc}
   2e018:	andeq	sp, r1, r7, ror #8
   2e01c:	andeq	sp, r1, r2, asr #8
   2e020:	ldrdeq	sp, [r1], -pc	; <UNPREDICTABLE>
   2e024:	push	{r4, r5, fp, lr}
   2e028:	add	fp, sp, #8
   2e02c:	sub	sp, sp, #8
   2e030:	mov	r4, r1
   2e034:	ldr	r1, [pc, #84]	; 2e090 <main@@Base+0x17e34>
   2e038:	mov	r5, r0
   2e03c:	mov	r0, #2
   2e040:	mov	r3, #0
   2e044:	str	r0, [sp, #4]
   2e048:	mov	r0, r5
   2e04c:	mov	r2, r4
   2e050:	add	r1, pc, r1
   2e054:	str	r1, [sp]
   2e058:	mov	r1, #0
   2e05c:	bl	3df84 <flatcc_json_printer_uint32_struct_field@@Base>
   2e060:	ldr	r1, [pc, #44]	; 2e094 <main@@Base+0x17e38>
   2e064:	mov	r0, #8
   2e068:	mov	r2, r4
   2e06c:	mov	r3, #4
   2e070:	str	r0, [sp, #4]
   2e074:	mov	r0, r5
   2e078:	add	r1, pc, r1
   2e07c:	str	r1, [sp]
   2e080:	mov	r1, #1
   2e084:	bl	3df84 <flatcc_json_printer_uint32_struct_field@@Base>
   2e088:	sub	sp, fp, #8
   2e08c:	pop	{r4, r5, fp, pc}
   2e090:	ldrdeq	sp, [r1], -r7
   2e094:			; <UNDEFINED> instruction: 0x0001d3b6
   2e098:	bx	lr
   2e09c:	push	{r4, r5, r6, sl, fp, lr}
   2e0a0:	add	fp, sp, #16
   2e0a4:	sub	sp, sp, #8
   2e0a8:	mov	r5, r0
   2e0ac:	mov	r0, #4
   2e0b0:	mov	r6, #0
   2e0b4:	mov	r2, #0
   2e0b8:	mov	r4, r1
   2e0bc:	stm	sp, {r0, r6}
   2e0c0:	mov	r0, r5
   2e0c4:	ldr	r3, [pc, #84]	; 2e120 <main@@Base+0x17ec4>
   2e0c8:	add	r3, pc, r3
   2e0cc:	bl	3c6e8 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2e0d0:	mov	r0, #1
   2e0d4:	mov	r1, #7
   2e0d8:	mov	r2, #1
   2e0dc:	str	r1, [sp]
   2e0e0:	str	r0, [sp, #4]
   2e0e4:	mov	r0, r5
   2e0e8:	mov	r1, r4
   2e0ec:	ldr	r3, [pc, #48]	; 2e124 <main@@Base+0x17ec8>
   2e0f0:	add	r3, pc, r3
   2e0f4:	bl	3c6e8 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2e0f8:	mov	r0, #6
   2e0fc:	mov	r1, r4
   2e100:	mov	r2, #2
   2e104:	stm	sp, {r0, r6}
   2e108:	mov	r0, r5
   2e10c:	ldr	r3, [pc, #20]	; 2e128 <main@@Base+0x17ecc>
   2e110:	add	r3, pc, r3
   2e114:	bl	3c6e8 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2e118:	sub	sp, fp, #16
   2e11c:	pop	{r4, r5, r6, sl, fp, pc}
   2e120:	andeq	sp, r1, r2, ror r3
   2e124:	andeq	sp, r1, r7, asr #6
   2e128:	andeq	sp, r1, pc, lsr #6
   2e12c:	push	{r4, r5, r6, r7, fp, lr}
   2e130:	add	fp, sp, #16
   2e134:	sub	sp, sp, #16
   2e138:	ldr	r7, [pc, #144]	; 2e1d0 <main@@Base+0x17f74>
   2e13c:	mov	r5, r0
   2e140:	mov	r0, #5
   2e144:	mov	r6, #2
   2e148:	mov	r2, #0
   2e14c:	mov	r4, r1
   2e150:	add	r7, pc, r7
   2e154:	stm	sp, {r0, r6, r7}
   2e158:	mov	r0, r5
   2e15c:	ldr	r3, [pc, #112]	; 2e1d4 <main@@Base+0x17f78>
   2e160:	add	r3, pc, r3
   2e164:	bl	3d80c <flatcc_json_printer_int8_enum_field@@Base>
   2e168:	mov	r0, #6
   2e16c:	mov	r1, r4
   2e170:	mov	r2, #1
   2e174:	stm	sp, {r0, r6, r7}
   2e178:	mov	r0, r5
   2e17c:	ldr	r3, [pc, #84]	; 2e1d8 <main@@Base+0x17f7c>
   2e180:	add	r3, pc, r3
   2e184:	bl	3d80c <flatcc_json_printer_int8_enum_field@@Base>
   2e188:	str	r6, [sp]
   2e18c:	str	r6, [sp, #4]
   2e190:	mov	r0, r5
   2e194:	mov	r1, r4
   2e198:	mov	r2, #2
   2e19c:	ldr	r3, [pc, #56]	; 2e1dc <main@@Base+0x17f80>
   2e1a0:	add	r3, pc, r3
   2e1a4:	bl	3c8dc <flatcc_json_printer_uint8_field@@Base>
   2e1a8:	mov	r0, #3
   2e1ac:	mov	r1, r4
   2e1b0:	mov	r2, #3
   2e1b4:	stm	sp, {r0, r6}
   2e1b8:	mov	r0, r5
   2e1bc:	ldr	r3, [pc, #28]	; 2e1e0 <main@@Base+0x17f84>
   2e1c0:	add	r3, pc, r3
   2e1c4:	bl	3c8dc <flatcc_json_printer_uint8_field@@Base>
   2e1c8:	sub	sp, fp, #16
   2e1cc:	pop	{r4, r5, r6, r7, fp, pc}
   2e1d0:			; <UNDEFINED> instruction: 0xfffffc38
   2e1d4:	andeq	ip, r1, pc, ror pc
   2e1d8:	andeq	sp, r1, r7, lsr r1
   2e1dc:	andeq	sp, r1, lr, lsl r1
   2e1e0:	andeq	sp, r1, r1, lsl #2
   2e1e4:	bx	lr
   2e1e8:	push	{r4, r5, fp, lr}
   2e1ec:	add	fp, sp, #8
   2e1f0:	sub	sp, sp, #16
   2e1f4:	mov	r5, r0
   2e1f8:	ldr	r0, [pc, #148]	; 2e294 <main@@Base+0x18038>
   2e1fc:	mov	r4, r1
   2e200:	mov	r1, #6
   2e204:	mov	r2, #0
   2e208:	str	r1, [sp]
   2e20c:	mov	r1, r4
   2e210:	add	r0, pc, r0
   2e214:	str	r0, [sp, #4]
   2e218:	mov	r0, r5
   2e21c:	ldr	r3, [pc, #116]	; 2e298 <main@@Base+0x1803c>
   2e220:	add	r3, pc, r3
   2e224:	bl	454dc <flatcc_json_printer_table_field@@Base>
   2e228:	ldr	r0, [pc, #108]	; 2e29c <main@@Base+0x18040>
   2e22c:	mov	r1, #5
   2e230:	mov	r2, #1
   2e234:	str	r1, [sp]
   2e238:	mov	r1, r4
   2e23c:	add	r0, pc, r0
   2e240:	str	r0, [sp, #4]
   2e244:	mov	r0, r5
   2e248:	ldr	r3, [pc, #80]	; 2e2a0 <main@@Base+0x18044>
   2e24c:	add	r3, pc, r3
   2e250:	bl	454dc <flatcc_json_printer_table_field@@Base>
   2e254:	ldr	r0, [pc, #72]	; 2e2a4 <main@@Base+0x18048>
   2e258:	ldr	r1, [pc, #72]	; 2e2a8 <main@@Base+0x1804c>
   2e25c:	mov	r2, #7
   2e260:	str	r2, [sp]
   2e264:	mov	r2, #3
   2e268:	add	r0, pc, r0
   2e26c:	add	r1, pc, r1
   2e270:	str	r1, [sp, #4]
   2e274:	str	r0, [sp, #8]
   2e278:	mov	r0, r5
   2e27c:	mov	r1, r4
   2e280:	ldr	r3, [pc, #36]	; 2e2ac <main@@Base+0x18050>
   2e284:	add	r3, pc, r3
   2e288:	bl	4510c <flatcc_json_printer_union_vector_field@@Base>
   2e28c:	sub	sp, fp, #8
   2e290:	pop	{r4, r5, fp, pc}
   2e294:	muleq	r0, r8, r0
   2e298:	andeq	sp, r1, r5, lsr #1
   2e29c:	andeq	r0, r0, r0, lsr #2
   2e2a0:	andeq	sp, r1, r0, lsl #1
   2e2a4:			; <UNDEFINED> instruction: 0xfffffc90
   2e2a8:			; <UNDEFINED> instruction: 0xfffffc00
   2e2ac:	andeq	sp, r1, lr, asr #32
   2e2b0:	push	{r4, r5, r6, sl, fp, lr}
   2e2b4:	add	fp, sp, #16
   2e2b8:	sub	sp, sp, #8
   2e2bc:	mov	r5, r0
   2e2c0:	ldr	r0, [pc, #132]	; 2e34c <main@@Base+0x180f0>
   2e2c4:	mov	r4, r1
   2e2c8:	mov	r1, #21
   2e2cc:	mov	r2, #0
   2e2d0:	str	r1, [sp]
   2e2d4:	mov	r1, r4
   2e2d8:	add	r0, pc, r0
   2e2dc:	str	r0, [sp, #4]
   2e2e0:	mov	r0, r5
   2e2e4:	ldr	r3, [pc, #100]	; 2e350 <main@@Base+0x180f4>
   2e2e8:	add	r3, pc, r3
   2e2ec:	bl	454dc <flatcc_json_printer_table_field@@Base>
   2e2f0:	ldr	r0, [pc, #92]	; 2e354 <main@@Base+0x180f8>
   2e2f4:	mov	r6, #22
   2e2f8:	mov	r1, r4
   2e2fc:	mov	r2, #1
   2e300:	str	r6, [sp]
   2e304:	add	r0, pc, r0
   2e308:	str	r0, [sp, #4]
   2e30c:	mov	r0, r5
   2e310:	ldr	r3, [pc, #64]	; 2e358 <main@@Base+0x180fc>
   2e314:	add	r3, pc, r3
   2e318:	bl	454dc <flatcc_json_printer_table_field@@Base>
   2e31c:	ldr	r0, [pc, #56]	; 2e35c <main@@Base+0x18100>
   2e320:	str	r6, [sp]
   2e324:	mov	r1, r4
   2e328:	mov	r2, #2
   2e32c:	add	r0, pc, r0
   2e330:	str	r0, [sp, #4]
   2e334:	mov	r0, r5
   2e338:	ldr	r3, [pc, #32]	; 2e360 <main@@Base+0x18104>
   2e33c:	add	r3, pc, r3
   2e340:	bl	454dc <flatcc_json_printer_table_field@@Base>
   2e344:	sub	sp, fp, #16
   2e348:	pop	{r4, r5, r6, sl, fp, pc}
   2e34c:	andeq	r0, r0, r4, lsl #3
   2e350:	strdeq	ip, [r1], -r2
   2e354:	andeq	r0, r0, r0, asr #5
   2e358:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   2e35c:	andeq	r0, r0, r4, lsl #6
   2e360:	andeq	ip, r1, fp, asr #31
   2e364:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e368:	add	fp, sp, #24
   2e36c:	sub	sp, sp, #16
   2e370:	ldr	r6, [pc, #208]	; 2e448 <main@@Base+0x181ec>
   2e374:	ldr	r7, [pc, #208]	; 2e44c <main@@Base+0x181f0>
   2e378:	mov	r5, r0
   2e37c:	mov	r0, #14
   2e380:	mov	r2, #1
   2e384:	mov	r4, r1
   2e388:	add	r6, pc, r6
   2e38c:	add	r7, pc, r7
   2e390:	stm	sp, {r0, r7}
   2e394:	mov	r0, r5
   2e398:	str	r6, [sp, #8]
   2e39c:	ldr	r3, [pc, #172]	; 2e450 <main@@Base+0x181f4>
   2e3a0:	add	r3, pc, r3
   2e3a4:	bl	456c8 <flatcc_json_printer_union_field@@Base>
   2e3a8:	mov	r8, #10
   2e3ac:	str	r7, [sp, #4]
   2e3b0:	str	r6, [sp, #8]
   2e3b4:	mov	r0, r5
   2e3b8:	mov	r1, r4
   2e3bc:	mov	r2, #3
   2e3c0:	str	r8, [sp]
   2e3c4:	ldr	r3, [pc, #136]	; 2e454 <main@@Base+0x181f8>
   2e3c8:	add	r3, pc, r3
   2e3cc:	bl	456c8 <flatcc_json_printer_union_field@@Base>
   2e3d0:	mov	r0, #9
   2e3d4:	mov	r1, r4
   2e3d8:	mov	r2, #5
   2e3dc:	mov	r9, #5
   2e3e0:	stm	sp, {r0, r7}
   2e3e4:	str	r6, [sp, #8]
   2e3e8:	mov	r0, r5
   2e3ec:	ldr	r3, [pc, #100]	; 2e458 <main@@Base+0x181fc>
   2e3f0:	add	r3, pc, r3
   2e3f4:	bl	456c8 <flatcc_json_printer_union_field@@Base>
   2e3f8:	str	r9, [sp]
   2e3fc:	str	r7, [sp, #4]
   2e400:	str	r6, [sp, #8]
   2e404:	mov	r0, r5
   2e408:	mov	r1, r4
   2e40c:	mov	r2, #7
   2e410:	ldr	r3, [pc, #68]	; 2e45c <main@@Base+0x18200>
   2e414:	add	r3, pc, r3
   2e418:	bl	456c8 <flatcc_json_printer_union_field@@Base>
   2e41c:	str	r8, [sp]
   2e420:	str	r7, [sp, #4]
   2e424:	str	r6, [sp, #8]
   2e428:	mov	r0, r5
   2e42c:	mov	r1, r4
   2e430:	mov	r2, #9
   2e434:	ldr	r3, [pc, #36]	; 2e460 <main@@Base+0x18204>
   2e438:	add	r3, pc, r3
   2e43c:	bl	4510c <flatcc_json_printer_union_vector_field@@Base>
   2e440:	sub	sp, fp, #24
   2e444:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2e448:	andeq	r0, r0, r8, ror #7
   2e44c:	andeq	r0, r0, r0, lsl r3
   2e450:	strdeq	ip, [r1], -sp
   2e454:	andeq	ip, r1, r4, ror #31
   2e458:	andeq	ip, r1, r7, asr #31
   2e45c:	andeq	ip, r1, sp, lsr #31
   2e460:	andeq	ip, r1, pc, lsl #31
   2e464:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e468:	add	fp, sp, #24
   2e46c:	sub	sp, sp, #16
   2e470:	mov	r9, #4
   2e474:	mov	r2, #0
   2e478:	mov	r4, r1
   2e47c:	mov	r5, r0
   2e480:	mov	r6, #0
   2e484:	str	r9, [sp]
   2e488:	ldr	r3, [pc, #280]	; 2e5a8 <main@@Base+0x1834c>
   2e48c:	add	r3, pc, r3
   2e490:	bl	3c45c <flatcc_json_printer_string_field@@Base>
   2e494:	mov	r8, #9
   2e498:	str	r6, [sp, #4]
   2e49c:	mov	r0, r5
   2e4a0:	mov	r1, r4
   2e4a4:	mov	r2, #1
   2e4a8:	str	r8, [sp]
   2e4ac:	ldr	r3, [pc, #248]	; 2e5ac <main@@Base+0x18350>
   2e4b0:	add	r3, pc, r3
   2e4b4:	bl	3cb08 <flatcc_json_printer_uint32_field@@Base>
   2e4b8:	str	r9, [sp]
   2e4bc:	mov	r0, r5
   2e4c0:	mov	r1, r4
   2e4c4:	mov	r2, #2
   2e4c8:	ldr	r3, [pc, #224]	; 2e5b0 <main@@Base+0x18354>
   2e4cc:	add	r3, pc, r3
   2e4d0:	bl	3c45c <flatcc_json_printer_string_field@@Base>
   2e4d4:	mov	r7, #8
   2e4d8:	str	r6, [sp, #8]
   2e4dc:	str	r6, [sp, #12]
   2e4e0:	mov	r0, r5
   2e4e4:	mov	r1, r4
   2e4e8:	mov	r2, #3
   2e4ec:	str	r7, [sp]
   2e4f0:	ldr	r3, [pc, #188]	; 2e5b4 <main@@Base+0x18358>
   2e4f4:	add	r3, pc, r3
   2e4f8:	bl	3d008 <flatcc_json_printer_int64_field@@Base>
   2e4fc:	str	r9, [sp]
   2e500:	mov	r0, r5
   2e504:	mov	r1, r4
   2e508:	mov	r2, #4
   2e50c:	ldr	r3, [pc, #164]	; 2e5b8 <main@@Base+0x1835c>
   2e510:	add	r3, pc, r3
   2e514:	bl	3c45c <flatcc_json_printer_string_field@@Base>
   2e518:	str	r6, [sp, #8]
   2e51c:	str	r6, [sp, #12]
   2e520:	str	r7, [sp]
   2e524:	mov	r0, r5
   2e528:	mov	r1, r4
   2e52c:	mov	r2, #5
   2e530:	ldr	r3, [pc, #132]	; 2e5bc <main@@Base+0x18360>
   2e534:	add	r3, pc, r3
   2e538:	bl	3d008 <flatcc_json_printer_int64_field@@Base>
   2e53c:	str	r8, [sp]
   2e540:	str	r6, [sp, #4]
   2e544:	mov	r0, r5
   2e548:	mov	r1, r4
   2e54c:	mov	r2, #6
   2e550:	ldr	r3, [pc, #104]	; 2e5c0 <main@@Base+0x18364>
   2e554:	add	r3, pc, r3
   2e558:	bl	3cb08 <flatcc_json_printer_uint32_field@@Base>
   2e55c:	str	r6, [sp, #8]
   2e560:	str	r6, [sp, #12]
   2e564:	str	r7, [sp]
   2e568:	mov	r0, r5
   2e56c:	mov	r1, r4
   2e570:	mov	r2, #7
   2e574:	ldr	r3, [pc, #72]	; 2e5c4 <main@@Base+0x18368>
   2e578:	add	r3, pc, r3
   2e57c:	bl	3d008 <flatcc_json_printer_int64_field@@Base>
   2e580:	str	r8, [sp]
   2e584:	str	r6, [sp, #4]
   2e588:	mov	r0, r5
   2e58c:	mov	r1, r4
   2e590:	mov	r2, #8
   2e594:	ldr	r3, [pc, #44]	; 2e5c8 <main@@Base+0x1836c>
   2e598:	add	r3, pc, r3
   2e59c:	bl	3cb08 <flatcc_json_printer_uint32_field@@Base>
   2e5a0:	sub	sp, fp, #24
   2e5a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2e5a8:	muleq	r1, r2, lr
   2e5ac:	andeq	ip, r1, r3, ror lr
   2e5b0:	andeq	ip, r1, r1, ror #28
   2e5b4:	andeq	ip, r1, lr, lsr lr
   2e5b8:	andeq	ip, r1, fp, lsr #28
   2e5bc:	andeq	ip, r1, ip, lsl #28
   2e5c0:	strdeq	ip, [r1], -r5
   2e5c4:	ldrdeq	ip, [r1], -fp
   2e5c8:	andeq	ip, r1, r4, asr #27
   2e5cc:	push	{r4, r5, r6, sl, fp, lr}
   2e5d0:	add	fp, sp, #16
   2e5d4:	sub	sp, sp, #16
   2e5d8:	mov	r6, #0
   2e5dc:	mov	r5, r0
   2e5e0:	mov	r0, #15
   2e5e4:	mov	r2, #0
   2e5e8:	mov	r4, r1
   2e5ec:	str	r0, [sp]
   2e5f0:	str	r6, [sp, #8]
   2e5f4:	str	r6, [sp, #12]
   2e5f8:	mov	r0, r5
   2e5fc:	ldr	r3, [pc, #44]	; 2e630 <main@@Base+0x183d4>
   2e600:	add	r3, pc, r3
   2e604:	bl	3d008 <flatcc_json_printer_int64_field@@Base>
   2e608:	mov	r0, #16
   2e60c:	mov	r1, r4
   2e610:	mov	r2, #1
   2e614:	stm	sp, {r0, r6}
   2e618:	mov	r0, r5
   2e61c:	ldr	r3, [pc, #16]	; 2e634 <main@@Base+0x183d8>
   2e620:	add	r3, pc, r3
   2e624:	bl	3cb08 <flatcc_json_printer_uint32_field@@Base>
   2e628:	sub	sp, fp, #16
   2e62c:	pop	{r4, r5, r6, sl, fp, pc}
   2e630:	andeq	ip, r1, r6, ror #26
   2e634:	andeq	ip, r1, r6, asr sp
   2e638:	push	{r4, r5, r6, sl, fp, lr}
   2e63c:	add	fp, sp, #16
   2e640:	sub	sp, sp, #16
   2e644:	mov	r6, #0
   2e648:	mov	r5, r0
   2e64c:	mov	r0, #15
   2e650:	mov	r2, #0
   2e654:	mov	r4, r1
   2e658:	str	r0, [sp]
   2e65c:	str	r6, [sp, #8]
   2e660:	str	r6, [sp, #12]
   2e664:	mov	r0, r5
   2e668:	ldr	r3, [pc, #44]	; 2e69c <main@@Base+0x18440>
   2e66c:	add	r3, pc, r3
   2e670:	bl	3d008 <flatcc_json_printer_int64_field@@Base>
   2e674:	mov	r0, #21
   2e678:	mov	r1, r4
   2e67c:	mov	r2, #1
   2e680:	stm	sp, {r0, r6}
   2e684:	mov	r0, r5
   2e688:	ldr	r3, [pc, #16]	; 2e6a0 <main@@Base+0x18444>
   2e68c:	add	r3, pc, r3
   2e690:	bl	3cb08 <flatcc_json_printer_uint32_field@@Base>
   2e694:	sub	sp, fp, #16
   2e698:	pop	{r4, r5, r6, sl, fp, pc}
   2e69c:	strdeq	ip, [r1], -sl
   2e6a0:	strdeq	ip, [r1], -fp
   2e6a4:	sub	r2, r1, #2
   2e6a8:	cmp	r2, #9
   2e6ac:	bhi	2e6f4 <main@@Base+0x18498>
   2e6b0:	add	r1, pc, #4
   2e6b4:	ldr	r2, [r1, r2, lsl #2]
   2e6b8:	add	pc, r1, r2
   2e6bc:	andeq	r0, r0, r8, lsr #32
   2e6c0:	andeq	r0, r0, r0, asr r0
   2e6c4:	andeq	r0, r0, r0, asr r0
   2e6c8:	andeq	r0, r0, r0, asr r0
   2e6cc:	andeq	r0, r0, r0, asr r0
   2e6d0:	andeq	r0, r0, r0, asr r0
   2e6d4:	andeq	r0, r0, r0, rrx
   2e6d8:	andeq	r0, r0, r0, ror r0
   2e6dc:	andeq	r0, r0, r0, lsl #1
   2e6e0:	muleq	r0, r0, r0
   2e6e4:	ldr	r1, [pc, #116]	; 2e760 <main@@Base+0x18504>
   2e6e8:	mov	r2, #5
   2e6ec:	add	r1, pc, r1
   2e6f0:	b	3c270 <flatcc_json_printer_enum@@Base>
   2e6f4:	cmp	r1, #255	; 0xff
   2e6f8:	bne	2e70c <main@@Base+0x184b0>
   2e6fc:	ldr	r1, [pc, #88]	; 2e75c <main@@Base+0x18500>
   2e700:	mov	r2, #6
   2e704:	add	r1, pc, r1
   2e708:	b	3c270 <flatcc_json_printer_enum@@Base>
   2e70c:	ldr	r1, [pc, #96]	; 2e774 <main@@Base+0x18518>
   2e710:	mov	r2, #4
   2e714:	add	r1, pc, r1
   2e718:	b	3c270 <flatcc_json_printer_enum@@Base>
   2e71c:	ldr	r1, [pc, #64]	; 2e764 <main@@Base+0x18508>
   2e720:	mov	r2, #8
   2e724:	add	r1, pc, r1
   2e728:	b	3c270 <flatcc_json_printer_enum@@Base>
   2e72c:	ldr	r1, [pc, #52]	; 2e768 <main@@Base+0x1850c>
   2e730:	mov	r2, #5
   2e734:	add	r1, pc, r1
   2e738:	b	3c270 <flatcc_json_printer_enum@@Base>
   2e73c:	ldr	r1, [pc, #40]	; 2e76c <main@@Base+0x18510>
   2e740:	mov	r2, #7
   2e744:	add	r1, pc, r1
   2e748:	b	3c270 <flatcc_json_printer_enum@@Base>
   2e74c:	ldr	r1, [pc, #28]	; 2e770 <main@@Base+0x18514>
   2e750:	mov	r2, #5
   2e754:	add	r1, pc, r1
   2e758:	b	3c270 <flatcc_json_printer_enum@@Base>
   2e75c:	strdeq	ip, [r1], -r1
   2e760:	andeq	ip, r1, r6, ror #25
   2e764:			; <UNDEFINED> instruction: 0x0001ccb4
   2e768:	andeq	ip, r1, sp, lsr #25
   2e76c:	andeq	ip, r1, r3, lsr #25
   2e770:	muleq	r1, fp, ip
   2e774:	andeq	lr, r1, r7, ror r4
   2e778:	ldrb	r3, [r1, #8]
   2e77c:	sub	r2, r3, #2
   2e780:	cmp	r2, #9
   2e784:	bhi	2e7c8 <main@@Base+0x1856c>
   2e788:	add	r3, pc, #4
   2e78c:	ldr	r2, [r3, r2, lsl #2]
   2e790:	add	pc, r3, r2
   2e794:	andeq	r0, r0, r0, asr #32
   2e798:	andeq	r0, r0, r8, asr r0
   2e79c:	andeq	r0, r0, r8, asr r0
   2e7a0:	andeq	r0, r0, r8, asr r0
   2e7a4:	andeq	r0, r0, r8, asr r0
   2e7a8:	andeq	r0, r0, r8, asr r0
   2e7ac:	andeq	r0, r0, ip, asr #32
   2e7b0:	andeq	r0, r0, r8, lsr #32
   2e7b4:	andeq	r0, r0, r8, lsr #32
   2e7b8:	andeq	r0, r0, ip, lsr r0
   2e7bc:	ldr	r2, [pc, #52]	; 2e7f8 <main@@Base+0x1859c>
   2e7c0:	add	r2, pc, r2
   2e7c4:	b	45d50 <flatcc_json_printer_union_struct@@Base>
   2e7c8:	cmp	r3, #255	; 0xff
   2e7cc:	bxne	lr
   2e7d0:	b	45e70 <flatcc_json_printer_union_string@@Base>
   2e7d4:	ldr	r2, [pc, #20]	; 2e7f0 <main@@Base+0x18594>
   2e7d8:	add	r2, pc, r2
   2e7dc:	b	45bd0 <flatcc_json_printer_union_table@@Base>
   2e7e0:	ldr	r2, [pc, #12]	; 2e7f4 <main@@Base+0x18598>
   2e7e4:	add	r2, pc, r2
   2e7e8:	b	45d50 <flatcc_json_printer_union_struct@@Base>
   2e7ec:	bx	lr
   2e7f0:	andeq	r0, r0, ip, lsl r0
   2e7f4:	andeq	r0, r0, r8, asr #32
   2e7f8:	andeq	r0, r0, r8, lsr #1
   2e7fc:	push	{fp, lr}
   2e800:	mov	fp, sp
   2e804:	sub	sp, sp, #8
   2e808:	mov	r2, #0
   2e80c:	mov	r3, #19
   2e810:	str	r2, [sp, #4]
   2e814:	str	r3, [sp]
   2e818:	mov	r2, #0
   2e81c:	ldr	r3, [pc, #12]	; 2e830 <main@@Base+0x185d4>
   2e820:	add	r3, pc, r3
   2e824:	bl	3cf2c <flatcc_json_printer_int32_field@@Base>
   2e828:	mov	sp, fp
   2e82c:	pop	{fp, pc}
   2e830:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   2e834:	push	{fp, lr}
   2e838:	mov	fp, sp
   2e83c:	sub	sp, sp, #8
   2e840:	ldr	r3, [pc, #36]	; 2e86c <main@@Base+0x18610>
   2e844:	mov	r2, r1
   2e848:	mov	r1, #11
   2e84c:	str	r1, [sp, #4]
   2e850:	mov	r1, #0
   2e854:	add	r3, pc, r3
   2e858:	str	r3, [sp]
   2e85c:	mov	r3, #0
   2e860:	bl	3df24 <flatcc_json_printer_uint16_struct_field@@Base>
   2e864:	mov	sp, fp
   2e868:	pop	{fp, pc}
   2e86c:			; <UNDEFINED> instruction: 0x0001cbbc
   2e870:	push	{fp, lr}
   2e874:	mov	fp, sp
   2e878:	sub	sp, sp, #8
   2e87c:	ldr	r3, [pc, #36]	; 2e8a8 <main@@Base+0x1864c>
   2e880:	mov	r2, r1
   2e884:	mov	r1, #10
   2e888:	str	r1, [sp, #4]
   2e88c:	mov	r1, #0
   2e890:	add	r3, pc, r3
   2e894:	str	r3, [sp]
   2e898:	mov	r3, #0
   2e89c:	bl	3e1ec <flatcc_json_printer_int32_struct_field@@Base>
   2e8a0:	mov	sp, fp
   2e8a4:	pop	{fp, pc}
   2e8a8:	andeq	ip, r1, ip, lsl #23
   2e8ac:	ldrb	r1, [r0, #12]
   2e8b0:	sub	r1, r1, #1
   2e8b4:	uxtb	r2, r1
   2e8b8:	cmp	r2, #3
   2e8bc:	movhi	r0, #0
   2e8c0:	bxhi	lr
   2e8c4:	ldr	r2, [pc, #12]	; 2e8d8 <main@@Base+0x1867c>
   2e8c8:	sxtb	r1, r1
   2e8cc:	add	r2, pc, r2
   2e8d0:	ldr	r1, [r2, r1, lsl #2]
   2e8d4:	b	34a3c <flatcc_verify_union_table@@Base>
   2e8d8:	strdeq	r0, [r3], -ip
   2e8dc:	push	{r4, sl, fp, lr}
   2e8e0:	add	fp, sp, #8
   2e8e4:	mov	r1, #0
   2e8e8:	mov	r2, #0
   2e8ec:	mov	r4, r0
   2e8f0:	bl	3429c <flatcc_verify_string_field@@Base>
   2e8f4:	cmp	r0, #0
   2e8f8:	popne	{r4, sl, fp, pc}
   2e8fc:	mov	r0, r4
   2e900:	mov	r1, #1
   2e904:	mov	r2, #8
   2e908:	mov	r3, #8
   2e90c:	bl	34218 <flatcc_verify_field@@Base>
   2e910:	cmp	r0, #0
   2e914:	beq	2e91c <main@@Base+0x186c0>
   2e918:	pop	{r4, sl, fp, pc}
   2e91c:	mov	r0, r4
   2e920:	mov	r1, #2
   2e924:	mov	r2, #2
   2e928:	mov	r3, #2
   2e92c:	pop	{r4, sl, fp, lr}
   2e930:	b	34218 <flatcc_verify_field@@Base>
   2e934:	mov	r0, #0
   2e938:	bx	lr
   2e93c:	push	{r4, r5, r6, sl, fp, lr}
   2e940:	add	fp, sp, #16
   2e944:	sub	sp, sp, #8
   2e948:	mvn	r5, #0
   2e94c:	mov	r6, #1
   2e950:	mov	r1, #0
   2e954:	mov	r2, #0
   2e958:	mov	r3, #1
   2e95c:	mov	r4, r0
   2e960:	str	r6, [sp]
   2e964:	str	r5, [sp, #4]
   2e968:	bl	3437c <flatcc_verify_vector_field@@Base>
   2e96c:	cmp	r0, #0
   2e970:	bne	2e998 <main@@Base+0x1873c>
   2e974:	mov	r0, r4
   2e978:	mov	r1, #1
   2e97c:	mov	r2, #0
   2e980:	mov	r3, #1
   2e984:	str	r6, [sp]
   2e988:	str	r5, [sp, #4]
   2e98c:	bl	3437c <flatcc_verify_vector_field@@Base>
   2e990:	cmp	r0, #0
   2e994:	beq	2e9a0 <main@@Base+0x18744>
   2e998:	sub	sp, fp, #16
   2e99c:	pop	{r4, r5, r6, sl, fp, pc}
   2e9a0:	ldr	r0, [pc, #40]	; 2e9d0 <main@@Base+0x18774>
   2e9a4:	mov	r1, #1
   2e9a8:	mov	r2, #0
   2e9ac:	mov	r3, #0
   2e9b0:	str	r1, [sp]
   2e9b4:	mov	r1, #2
   2e9b8:	add	r0, pc, r0
   2e9bc:	str	r0, [sp, #4]
   2e9c0:	mov	r0, r4
   2e9c4:	bl	3526c <flatcc_verify_table_as_nested_root@@Base>
   2e9c8:	sub	sp, fp, #16
   2e9cc:	pop	{r4, r5, r6, sl, fp, pc}
   2e9d0:			; <UNDEFINED> instruction: 0xffff30b4
   2e9d4:	push	{r4, sl, fp, lr}
   2e9d8:	add	fp, sp, #8
   2e9dc:	mov	r1, #0
   2e9e0:	mov	r2, #1
   2e9e4:	mov	r3, #1
   2e9e8:	mov	r4, r0
   2e9ec:	bl	34218 <flatcc_verify_field@@Base>
   2e9f0:	cmp	r0, #0
   2e9f4:	bne	2ea30 <main@@Base+0x187d4>
   2e9f8:	mov	r0, r4
   2e9fc:	mov	r1, #1
   2ea00:	mov	r2, #1
   2ea04:	mov	r3, #1
   2ea08:	bl	34218 <flatcc_verify_field@@Base>
   2ea0c:	cmp	r0, #0
   2ea10:	popne	{r4, sl, fp, pc}
   2ea14:	mov	r0, r4
   2ea18:	mov	r1, #2
   2ea1c:	mov	r2, #1
   2ea20:	mov	r3, #1
   2ea24:	bl	34218 <flatcc_verify_field@@Base>
   2ea28:	cmp	r0, #0
   2ea2c:	beq	2ea34 <main@@Base+0x187d8>
   2ea30:	pop	{r4, sl, fp, pc}
   2ea34:	mov	r0, r4
   2ea38:	mov	r1, #3
   2ea3c:	mov	r2, #1
   2ea40:	mov	r3, #1
   2ea44:	pop	{r4, sl, fp, lr}
   2ea48:	b	34218 <flatcc_verify_field@@Base>
   2ea4c:	mov	r0, #0
   2ea50:	bx	lr
   2ea54:	push	{r4, sl, fp, lr}
   2ea58:	add	fp, sp, #8
   2ea5c:	ldr	r3, [pc, #88]	; 2eabc <main@@Base+0x18860>
   2ea60:	mov	r1, #0
   2ea64:	mov	r2, #0
   2ea68:	mov	r4, r0
   2ea6c:	add	r3, pc, r3
   2ea70:	bl	345fc <flatcc_verify_table_field@@Base>
   2ea74:	cmp	r0, #0
   2ea78:	popne	{r4, sl, fp, pc}
   2ea7c:	ldr	r3, [pc, #60]	; 2eac0 <main@@Base+0x18864>
   2ea80:	mov	r0, r4
   2ea84:	mov	r1, #1
   2ea88:	mov	r2, #0
   2ea8c:	add	r3, pc, r3
   2ea90:	bl	345fc <flatcc_verify_table_field@@Base>
   2ea94:	cmp	r0, #0
   2ea98:	beq	2eaa0 <main@@Base+0x18844>
   2ea9c:	pop	{r4, sl, fp, pc}
   2eaa0:	ldr	r3, [pc, #28]	; 2eac4 <main@@Base+0x18868>
   2eaa4:	mov	r0, r4
   2eaa8:	mov	r1, #3
   2eaac:	mov	r2, #0
   2eab0:	add	r3, pc, r3
   2eab4:	pop	{r4, sl, fp, lr}
   2eab8:	b	356f8 <flatcc_verify_union_vector_field@@Base>
   2eabc:	andeq	r0, r0, r4, asr r0
   2eac0:	andeq	r0, r0, r8, lsr #1
   2eac4:			; <UNDEFINED> instruction: 0xfffffdf4
   2eac8:	push	{r4, sl, fp, lr}
   2eacc:	add	fp, sp, #8
   2ead0:	ldr	r3, [pc, #88]	; 2eb30 <main@@Base+0x188d4>
   2ead4:	mov	r1, #0
   2ead8:	mov	r2, #0
   2eadc:	mov	r4, r0
   2eae0:	add	r3, pc, r3
   2eae4:	bl	345fc <flatcc_verify_table_field@@Base>
   2eae8:	cmp	r0, #0
   2eaec:	popne	{r4, sl, fp, pc}
   2eaf0:	ldr	r3, [pc, #60]	; 2eb34 <main@@Base+0x188d8>
   2eaf4:	mov	r0, r4
   2eaf8:	mov	r1, #1
   2eafc:	mov	r2, #0
   2eb00:	add	r3, pc, r3
   2eb04:	bl	345fc <flatcc_verify_table_field@@Base>
   2eb08:	cmp	r0, #0
   2eb0c:	beq	2eb14 <main@@Base+0x188b8>
   2eb10:	pop	{r4, sl, fp, pc}
   2eb14:	ldr	r3, [pc, #28]	; 2eb38 <main@@Base+0x188dc>
   2eb18:	mov	r0, r4
   2eb1c:	mov	r1, #2
   2eb20:	mov	r2, #0
   2eb24:	add	r3, pc, r3
   2eb28:	pop	{r4, sl, fp, lr}
   2eb2c:	b	345fc <flatcc_verify_table_field@@Base>
   2eb30:	andeq	r0, r0, r0, lsl r1
   2eb34:	andeq	r0, r0, r8, ror #3
   2eb38:	andeq	r0, r0, r0, lsl #4
   2eb3c:	push	{r4, sl, fp, lr}
   2eb40:	add	fp, sp, #8
   2eb44:	ldr	r3, [pc, #152]	; 2ebe4 <main@@Base+0x18988>
   2eb48:	mov	r1, #1
   2eb4c:	mov	r2, #0
   2eb50:	mov	r4, r0
   2eb54:	add	r3, pc, r3
   2eb58:	bl	3558c <flatcc_verify_union_field@@Base>
   2eb5c:	cmp	r0, #0
   2eb60:	bne	2ebc4 <main@@Base+0x18968>
   2eb64:	ldr	r3, [pc, #124]	; 2ebe8 <main@@Base+0x1898c>
   2eb68:	mov	r0, r4
   2eb6c:	mov	r1, #3
   2eb70:	mov	r2, #0
   2eb74:	add	r3, pc, r3
   2eb78:	bl	3558c <flatcc_verify_union_field@@Base>
   2eb7c:	cmp	r0, #0
   2eb80:	bne	2ebc4 <main@@Base+0x18968>
   2eb84:	ldr	r3, [pc, #96]	; 2ebec <main@@Base+0x18990>
   2eb88:	mov	r0, r4
   2eb8c:	mov	r1, #5
   2eb90:	mov	r2, #0
   2eb94:	add	r3, pc, r3
   2eb98:	bl	3558c <flatcc_verify_union_field@@Base>
   2eb9c:	cmp	r0, #0
   2eba0:	popne	{r4, sl, fp, pc}
   2eba4:	ldr	r3, [pc, #68]	; 2ebf0 <main@@Base+0x18994>
   2eba8:	mov	r0, r4
   2ebac:	mov	r1, #7
   2ebb0:	mov	r2, #0
   2ebb4:	add	r3, pc, r3
   2ebb8:	bl	3558c <flatcc_verify_union_field@@Base>
   2ebbc:	cmp	r0, #0
   2ebc0:	beq	2ebc8 <main@@Base+0x1896c>
   2ebc4:	pop	{r4, sl, fp, pc}
   2ebc8:	ldr	r3, [pc, #36]	; 2ebf4 <main@@Base+0x18998>
   2ebcc:	mov	r0, r4
   2ebd0:	mov	r1, #9
   2ebd4:	mov	r2, #0
   2ebd8:	add	r3, pc, r3
   2ebdc:	pop	{r4, sl, fp, lr}
   2ebe0:	b	356f8 <flatcc_verify_union_vector_field@@Base>
   2ebe4:	andeq	r0, r0, ip, lsl #4
   2ebe8:	andeq	r0, r0, ip, ror #3
   2ebec:	andeq	r0, r0, ip, asr #3
   2ebf0:	andeq	r0, r0, ip, lsr #3
   2ebf4:	andeq	r0, r0, r8, lsl #3
   2ebf8:	push	{r4, sl, fp, lr}
   2ebfc:	add	fp, sp, #8
   2ec00:	mov	r1, #0
   2ec04:	mov	r2, #0
   2ec08:	mov	r4, r0
   2ec0c:	bl	3429c <flatcc_verify_string_field@@Base>
   2ec10:	cmp	r0, #0
   2ec14:	bne	2ecd4 <main@@Base+0x18a78>
   2ec18:	mov	r0, r4
   2ec1c:	mov	r1, #1
   2ec20:	mov	r2, #4
   2ec24:	mov	r3, #4
   2ec28:	bl	34218 <flatcc_verify_field@@Base>
   2ec2c:	cmp	r0, #0
   2ec30:	bne	2ecd4 <main@@Base+0x18a78>
   2ec34:	mov	r0, r4
   2ec38:	mov	r1, #2
   2ec3c:	mov	r2, #0
   2ec40:	bl	3429c <flatcc_verify_string_field@@Base>
   2ec44:	cmp	r0, #0
   2ec48:	bne	2ecd4 <main@@Base+0x18a78>
   2ec4c:	mov	r0, r4
   2ec50:	mov	r1, #3
   2ec54:	mov	r2, #8
   2ec58:	mov	r3, #8
   2ec5c:	bl	34218 <flatcc_verify_field@@Base>
   2ec60:	cmp	r0, #0
   2ec64:	bne	2ecd4 <main@@Base+0x18a78>
   2ec68:	mov	r0, r4
   2ec6c:	mov	r1, #4
   2ec70:	mov	r2, #0
   2ec74:	bl	3429c <flatcc_verify_string_field@@Base>
   2ec78:	cmp	r0, #0
   2ec7c:	bne	2ecd4 <main@@Base+0x18a78>
   2ec80:	mov	r0, r4
   2ec84:	mov	r1, #5
   2ec88:	mov	r2, #8
   2ec8c:	mov	r3, #8
   2ec90:	bl	34218 <flatcc_verify_field@@Base>
   2ec94:	cmp	r0, #0
   2ec98:	bne	2ecd4 <main@@Base+0x18a78>
   2ec9c:	mov	r0, r4
   2eca0:	mov	r1, #6
   2eca4:	mov	r2, #4
   2eca8:	mov	r3, #4
   2ecac:	bl	34218 <flatcc_verify_field@@Base>
   2ecb0:	cmp	r0, #0
   2ecb4:	popne	{r4, sl, fp, pc}
   2ecb8:	mov	r0, r4
   2ecbc:	mov	r1, #7
   2ecc0:	mov	r2, #8
   2ecc4:	mov	r3, #8
   2ecc8:	bl	34218 <flatcc_verify_field@@Base>
   2eccc:	cmp	r0, #0
   2ecd0:	beq	2ecd8 <main@@Base+0x18a7c>
   2ecd4:	pop	{r4, sl, fp, pc}
   2ecd8:	mov	r0, r4
   2ecdc:	mov	r1, #8
   2ece0:	mov	r2, #4
   2ece4:	mov	r3, #4
   2ece8:	pop	{r4, sl, fp, lr}
   2ecec:	b	34218 <flatcc_verify_field@@Base>
   2ecf0:	push	{r4, sl, fp, lr}
   2ecf4:	add	fp, sp, #8
   2ecf8:	mov	r1, #0
   2ecfc:	mov	r2, #8
   2ed00:	mov	r3, #8
   2ed04:	mov	r4, r0
   2ed08:	bl	34218 <flatcc_verify_field@@Base>
   2ed0c:	cmp	r0, #0
   2ed10:	popne	{r4, sl, fp, pc}
   2ed14:	mov	r0, r4
   2ed18:	mov	r1, #1
   2ed1c:	mov	r2, #4
   2ed20:	mov	r3, #4
   2ed24:	pop	{r4, sl, fp, lr}
   2ed28:	b	34218 <flatcc_verify_field@@Base>
   2ed2c:	push	{r4, sl, fp, lr}
   2ed30:	add	fp, sp, #8
   2ed34:	mov	r1, #0
   2ed38:	mov	r2, #8
   2ed3c:	mov	r3, #8
   2ed40:	mov	r4, r0
   2ed44:	bl	34218 <flatcc_verify_field@@Base>
   2ed48:	cmp	r0, #0
   2ed4c:	popne	{r4, sl, fp, pc}
   2ed50:	mov	r0, r4
   2ed54:	mov	r1, #1
   2ed58:	mov	r2, #4
   2ed5c:	mov	r3, #4
   2ed60:	pop	{r4, sl, fp, lr}
   2ed64:	b	34218 <flatcc_verify_field@@Base>
   2ed68:	ldrb	r2, [r0, #12]
   2ed6c:	sub	r1, r2, #2
   2ed70:	cmp	r1, #9
   2ed74:	bhi	2edb8 <main@@Base+0x18b5c>
   2ed78:	add	r2, pc, #4
   2ed7c:	ldr	r1, [r2, r1, lsl #2]
   2ed80:	add	pc, r2, r1
   2ed84:	andeq	r0, r0, r8, asr #32
   2ed88:	andeq	r0, r0, r0, asr #32
   2ed8c:	andeq	r0, r0, r0, asr #32
   2ed90:	andeq	r0, r0, r0, asr #32
   2ed94:	andeq	r0, r0, r0, asr #32
   2ed98:	andeq	r0, r0, r0, asr #32
   2ed9c:	andeq	r0, r0, r4, asr r0
   2eda0:	andeq	r0, r0, r8, lsr #32
   2eda4:	andeq	r0, r0, r8, lsr #32
   2eda8:	andeq	r0, r0, ip, lsr r0
   2edac:	mov	r1, #4
   2edb0:	mov	r2, #4
   2edb4:	b	34b28 <flatcc_verify_union_struct@@Base>
   2edb8:	cmp	r2, #255	; 0xff
   2edbc:	bne	2edc4 <main@@Base+0x18b68>
   2edc0:	b	34b80 <flatcc_verify_union_string@@Base>
   2edc4:	mov	r0, #0
   2edc8:	bx	lr
   2edcc:	ldr	r1, [pc, #16]	; 2ede4 <main@@Base+0x18b88>
   2edd0:	add	r1, pc, r1
   2edd4:	b	34a3c <flatcc_verify_union_table@@Base>
   2edd8:	mov	r1, #2
   2eddc:	mov	r2, #2
   2ede0:	b	34b28 <flatcc_verify_union_struct@@Base>
   2ede4:	andeq	r0, r0, r0, lsl r0
   2ede8:	mov	r1, #0
   2edec:	mov	r2, #4
   2edf0:	mov	r3, #4
   2edf4:	b	34218 <flatcc_verify_field@@Base>

0002edf8 <flatcc_builder_default_alloc@@Base>:
   2edf8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2edfc:	add	fp, sp, #24
   2ee00:	mov	r4, r1
   2ee04:	cmp	r2, #0
   2ee08:	beq	2ee54 <flatcc_builder_default_alloc@@Base+0x5c>
   2ee0c:	ldr	r0, [fp, #8]
   2ee10:	mov	r8, r3
   2ee14:	sub	r1, r0, #1
   2ee18:	cmp	r1, #6
   2ee1c:	bhi	2ee84 <flatcc_builder_default_alloc@@Base+0x8c>
   2ee20:	add	r3, pc, #8
   2ee24:	mov	r0, #256	; 0x100
   2ee28:	ldr	r1, [r3, r1, lsl #2]
   2ee2c:	add	pc, r3, r1
   2ee30:	andeq	r0, r0, r8, rrx
   2ee34:	andeq	r0, r0, r4, asr r0
   2ee38:	andeq	r0, r0, r4, asr r0
   2ee3c:	andeq	r0, r0, ip, lsl r0
   2ee40:	andeq	r0, r0, ip, asr r0
   2ee44:	andeq	r0, r0, r4, asr r0
   2ee48:	andeq	r0, r0, r4, rrx
   2ee4c:	mov	r0, #288	; 0x120
   2ee50:	b	2ee98 <flatcc_builder_default_alloc@@Base+0xa0>
   2ee54:	ldr	r0, [r4]
   2ee58:	cmp	r0, #0
   2ee5c:	beq	2ee78 <flatcc_builder_default_alloc@@Base+0x80>
   2ee60:	bl	14e48 <free@plt>
   2ee64:	mov	r6, #0
   2ee68:	mov	r0, r6
   2ee6c:	str	r6, [r4]
   2ee70:	str	r6, [r4, #4]
   2ee74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ee78:	mov	r6, #0
   2ee7c:	mov	r0, r6
   2ee80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ee84:	mov	r0, #32
   2ee88:	b	2ee98 <flatcc_builder_default_alloc@@Base+0xa0>
   2ee8c:	mov	r0, r2
   2ee90:	b	2ee98 <flatcc_builder_default_alloc@@Base+0xa0>
   2ee94:	mov	r0, #64	; 0x40
   2ee98:	mov	r7, r0
   2ee9c:	lsl	r0, r0, #1
   2eea0:	cmp	r7, r2
   2eea4:	bcc	2ee98 <flatcc_builder_default_alloc@@Base+0xa0>
   2eea8:	ldr	r0, [r4, #4]
   2eeac:	mov	r6, #0
   2eeb0:	cmp	r0, r2
   2eeb4:	lsrcs	r0, r0, #1
   2eeb8:	cmpcs	r0, r7
   2eebc:	bcs	2ef00 <flatcc_builder_default_alloc@@Base+0x108>
   2eec0:	ldr	r0, [r4]
   2eec4:	mov	r1, r7
   2eec8:	bl	14e78 <realloc@plt>
   2eecc:	cmp	r0, #0
   2eed0:	beq	2ef08 <flatcc_builder_default_alloc@@Base+0x110>
   2eed4:	mov	r5, r0
   2eed8:	cmp	r8, #0
   2eedc:	beq	2eefc <flatcc_builder_default_alloc@@Base+0x104>
   2eee0:	ldr	r1, [r4, #4]
   2eee4:	cmp	r7, r1
   2eee8:	bls	2eefc <flatcc_builder_default_alloc@@Base+0x104>
   2eeec:	add	r0, r5, r1
   2eef0:	sub	r2, r7, r1
   2eef4:	mov	r1, #0
   2eef8:	bl	14ee4 <memset@plt>
   2eefc:	stm	r4, {r5, r7}
   2ef00:	mov	r0, r6
   2ef04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ef08:	mvn	r6, #0
   2ef0c:	mov	r0, r6
   2ef10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002ef14 <flatcc_builder_flush_vtable_cache@@Base>:
   2ef14:	push	{r4, r5, fp, lr}
   2ef18:	add	fp, sp, #8
   2ef1c:	mov	r4, r0
   2ef20:	ldr	r0, [r0, #116]	; 0x74
   2ef24:	cmp	r0, #0
   2ef28:	popeq	{r4, r5, fp, pc}
   2ef2c:	ldr	r0, [r4, #92]	; 0x5c
   2ef30:	ldr	r2, [r4, #96]	; 0x60
   2ef34:	mov	r1, #0
   2ef38:	mov	r5, #0
   2ef3c:	bl	14ee4 <memset@plt>
   2ef40:	mov	r0, #16
   2ef44:	str	r5, [r4, #120]	; 0x78
   2ef48:	str	r0, [r4, #124]	; 0x7c
   2ef4c:	pop	{r4, r5, fp, pc}

0002ef50 <flatcc_builder_custom_init@@Base>:
   2ef50:	push	{r4, r5, r6, r7, fp, lr}
   2ef54:	add	fp, sp, #16
   2ef58:	mov	r6, r2
   2ef5c:	mov	r7, r1
   2ef60:	mov	r1, #0
   2ef64:	mov	r2, #232	; 0xe8
   2ef68:	mov	r5, r3
   2ef6c:	mov	r4, r0
   2ef70:	bl	14ee4 <memset@plt>
   2ef74:	ldr	r0, [fp, #8]
   2ef78:	cmp	r7, #0
   2ef7c:	bne	2ef94 <flatcc_builder_custom_init@@Base+0x44>
   2ef80:	mov	r1, #1
   2ef84:	add	r6, r4, #188	; 0xbc
   2ef88:	str	r1, [r4, #184]	; 0xb8
   2ef8c:	ldr	r7, [pc, #40]	; 2efbc <flatcc_builder_custom_init@@Base+0x6c>
   2ef90:	ldr	r7, [pc, r7]
   2ef94:	ldr	r1, [pc, #36]	; 2efc0 <flatcc_builder_custom_init@@Base+0x70>
   2ef98:	cmp	r5, #0
   2ef9c:	ldr	r1, [pc, r1]
   2efa0:	str	r6, [r4, #36]	; 0x24
   2efa4:	str	r0, [r4, #40]	; 0x28
   2efa8:	mov	r0, #0
   2efac:	movne	r1, r5
   2efb0:	str	r7, [r4, #44]	; 0x2c
   2efb4:	str	r1, [r4, #48]	; 0x30
   2efb8:	pop	{r4, r5, r6, r7, fp, pc}
   2efbc:	andeq	r0, r3, r8, ror #1
   2efc0:	ldrdeq	r0, [r3], -r4

0002efc4 <flatcc_builder_init@@Base>:
   2efc4:	push	{r4, r5, fp, lr}
   2efc8:	add	fp, sp, #8
   2efcc:	mov	r1, #0
   2efd0:	mov	r2, #232	; 0xe8
   2efd4:	mov	r4, r0
   2efd8:	mov	r5, #0
   2efdc:	bl	14ee4 <memset@plt>
   2efe0:	mov	r0, #1
   2efe4:	str	r0, [r4, #184]	; 0xb8
   2efe8:	add	r0, r4, #188	; 0xbc
   2efec:	ldr	r1, [pc, #32]	; 2f014 <flatcc_builder_init@@Base+0x50>
   2eff0:	ldr	r1, [pc, r1]
   2eff4:	ldr	r2, [pc, #28]	; 2f018 <flatcc_builder_init@@Base+0x54>
   2eff8:	ldr	r2, [pc, r2]
   2effc:	str	r0, [r4, #36]	; 0x24
   2f000:	mov	r0, #0
   2f004:	str	r5, [r4, #40]	; 0x28
   2f008:	str	r2, [r4, #44]	; 0x2c
   2f00c:	str	r1, [r4, #48]	; 0x30
   2f010:	pop	{r4, r5, fp, pc}
   2f014:	andeq	r0, r3, r0, lsl #1
   2f018:	andeq	r0, r3, r0, lsl #1

0002f01c <flatcc_builder_custom_reset@@Base>:
   2f01c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f020:	add	fp, sp, #28
   2f024:	sub	sp, sp, #4
   2f028:	mov	r9, r2
   2f02c:	mov	r8, r1
   2f030:	mov	sl, r0
   2f034:	add	r7, r0, #52	; 0x34
   2f038:	mov	r5, #0
   2f03c:	b	2f05c <flatcc_builder_custom_reset@@Base+0x40>
   2f040:	ldr	r0, [r6, #56]	; 0x38
   2f044:	cmp	r0, #0
   2f048:	bne	2f144 <flatcc_builder_custom_reset@@Base+0x128>
   2f04c:	add	r5, r5, #1
   2f050:	add	r7, r7, #8
   2f054:	cmp	r5, #8
   2f058:	beq	2f0b0 <flatcc_builder_custom_reset@@Base+0x94>
   2f05c:	add	r6, sl, r5, lsl #3
   2f060:	ldr	r0, [r6, #52]	; 0x34
   2f064:	cmp	r0, #0
   2f068:	beq	2f040 <flatcc_builder_custom_reset@@Base+0x24>
   2f06c:	cmp	r9, #0
   2f070:	cmpne	r5, #5
   2f074:	beq	2f0a0 <flatcc_builder_custom_reset@@Base+0x84>
   2f078:	ldr	r0, [sl, #40]	; 0x28
   2f07c:	ldr	r4, [sl, #48]	; 0x30
   2f080:	mov	r1, r7
   2f084:	mov	r2, #1
   2f088:	mov	r3, #1
   2f08c:	str	r5, [sp]
   2f090:	blx	r4
   2f094:	cmp	r0, #0
   2f098:	bne	2f134 <flatcc_builder_custom_reset@@Base+0x118>
   2f09c:	ldr	r0, [r6, #52]	; 0x34
   2f0a0:	ldr	r2, [r6, #56]	; 0x38
   2f0a4:	mov	r1, #0
   2f0a8:	bl	14ee4 <memset@plt>
   2f0ac:	b	2f04c <flatcc_builder_custom_reset@@Base+0x30>
   2f0b0:	mov	r0, #0
   2f0b4:	vmov.i32	q8, #0	; 0x00000000
   2f0b8:	mov	r5, #0
   2f0bc:	str	r0, [sl, #120]	; 0x78
   2f0c0:	ldr	r1, [sl, #124]	; 0x7c
   2f0c4:	cmp	r1, #0
   2f0c8:	movne	r1, #16
   2f0cc:	strne	r1, [sl, #124]	; 0x7c
   2f0d0:	add	r1, sl, #148	; 0x94
   2f0d4:	str	r0, [sl, #136]	; 0x88
   2f0d8:	str	r0, [sl, #140]	; 0x8c
   2f0dc:	strh	r0, [sl, #128]	; 0x80
   2f0e0:	str	r0, [sl, #32]
   2f0e4:	cmp	r8, #0
   2f0e8:	vst1.32	{d16-d17}, [r1]
   2f0ec:	ldr	r2, [sl, #60]	; 0x3c
   2f0f0:	ldr	r1, [sl, #52]	; 0x34
   2f0f4:	ldr	r3, [sl, #76]	; 0x4c
   2f0f8:	str	r2, [sl, #16]
   2f0fc:	str	r0, [sl, #20]
   2f100:	str	r0, [sl, #24]
   2f104:	movne	r0, #0
   2f108:	str	r3, [sl]
   2f10c:	str	r1, [sl, #4]
   2f110:	strne	r0, [sl, #172]	; 0xac
   2f114:	strne	r0, [sl, #176]	; 0xb0
   2f118:	strne	r0, [sl, #180]	; 0xb4
   2f11c:	ldr	r0, [sl, #184]	; 0xb8
   2f120:	cmp	r0, #0
   2f124:	beq	2f138 <flatcc_builder_custom_reset@@Base+0x11c>
   2f128:	add	r0, sl, #188	; 0xbc
   2f12c:	bl	33cb8 <flatcc_emitter_reset@@Base>
   2f130:	b	2f138 <flatcc_builder_custom_reset@@Base+0x11c>
   2f134:	mvn	r5, #0
   2f138:	mov	r0, r5
   2f13c:	sub	sp, fp, #28
   2f140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f144:	ldr	r0, [pc, #24]	; 2f164 <flatcc_builder_custom_reset@@Base+0x148>
   2f148:	ldr	r1, [pc, #24]	; 2f168 <flatcc_builder_custom_reset@@Base+0x14c>
   2f14c:	ldr	r3, [pc, #24]	; 2f16c <flatcc_builder_custom_reset@@Base+0x150>
   2f150:	movw	r2, #434	; 0x1b2
   2f154:	add	r0, pc, r0
   2f158:	add	r1, pc, r1
   2f15c:	add	r3, pc, r3
   2f160:	bl	14f38 <__assert_fail@plt>
   2f164:	andeq	ip, r1, r0, lsr r5
   2f168:	andeq	ip, r1, lr, lsr r5
   2f16c:	muleq	r1, r7, r5

0002f170 <flatcc_builder_reset@@Base>:
   2f170:	push	{r4, sl, fp, lr}
   2f174:	add	fp, sp, #8
   2f178:	mov	r4, r0
   2f17c:	ldr	r0, [r0, #52]	; 0x34
   2f180:	ldr	r2, [r4, #56]	; 0x38
   2f184:	cmp	r0, #0
   2f188:	beq	2f198 <flatcc_builder_reset@@Base+0x28>
   2f18c:	mov	r1, #0
   2f190:	bl	14ee4 <memset@plt>
   2f194:	b	2f1a0 <flatcc_builder_reset@@Base+0x30>
   2f198:	cmp	r2, #0
   2f19c:	bne	2f308 <flatcc_builder_reset@@Base+0x198>
   2f1a0:	ldr	r0, [r4, #60]	; 0x3c
   2f1a4:	ldr	r2, [r4, #64]	; 0x40
   2f1a8:	cmp	r0, #0
   2f1ac:	beq	2f1bc <flatcc_builder_reset@@Base+0x4c>
   2f1b0:	mov	r1, #0
   2f1b4:	bl	14ee4 <memset@plt>
   2f1b8:	b	2f1c4 <flatcc_builder_reset@@Base+0x54>
   2f1bc:	cmp	r2, #0
   2f1c0:	bne	2f308 <flatcc_builder_reset@@Base+0x198>
   2f1c4:	ldr	r0, [r4, #68]	; 0x44
   2f1c8:	ldr	r2, [r4, #72]	; 0x48
   2f1cc:	cmp	r0, #0
   2f1d0:	beq	2f1e0 <flatcc_builder_reset@@Base+0x70>
   2f1d4:	mov	r1, #0
   2f1d8:	bl	14ee4 <memset@plt>
   2f1dc:	b	2f1e8 <flatcc_builder_reset@@Base+0x78>
   2f1e0:	cmp	r2, #0
   2f1e4:	bne	2f308 <flatcc_builder_reset@@Base+0x198>
   2f1e8:	ldr	r0, [r4, #76]	; 0x4c
   2f1ec:	ldr	r2, [r4, #80]	; 0x50
   2f1f0:	cmp	r0, #0
   2f1f4:	beq	2f204 <flatcc_builder_reset@@Base+0x94>
   2f1f8:	mov	r1, #0
   2f1fc:	bl	14ee4 <memset@plt>
   2f200:	b	2f20c <flatcc_builder_reset@@Base+0x9c>
   2f204:	cmp	r2, #0
   2f208:	bne	2f308 <flatcc_builder_reset@@Base+0x198>
   2f20c:	ldr	r0, [r4, #84]	; 0x54
   2f210:	ldr	r2, [r4, #88]	; 0x58
   2f214:	cmp	r0, #0
   2f218:	beq	2f228 <flatcc_builder_reset@@Base+0xb8>
   2f21c:	mov	r1, #0
   2f220:	bl	14ee4 <memset@plt>
   2f224:	b	2f230 <flatcc_builder_reset@@Base+0xc0>
   2f228:	cmp	r2, #0
   2f22c:	bne	2f308 <flatcc_builder_reset@@Base+0x198>
   2f230:	ldr	r0, [r4, #92]	; 0x5c
   2f234:	ldr	r2, [r4, #96]	; 0x60
   2f238:	cmp	r0, #0
   2f23c:	beq	2f24c <flatcc_builder_reset@@Base+0xdc>
   2f240:	mov	r1, #0
   2f244:	bl	14ee4 <memset@plt>
   2f248:	b	2f254 <flatcc_builder_reset@@Base+0xe4>
   2f24c:	cmp	r2, #0
   2f250:	bne	2f308 <flatcc_builder_reset@@Base+0x198>
   2f254:	ldr	r0, [r4, #100]	; 0x64
   2f258:	ldr	r2, [r4, #104]	; 0x68
   2f25c:	cmp	r0, #0
   2f260:	beq	2f270 <flatcc_builder_reset@@Base+0x100>
   2f264:	mov	r1, #0
   2f268:	bl	14ee4 <memset@plt>
   2f26c:	b	2f278 <flatcc_builder_reset@@Base+0x108>
   2f270:	cmp	r2, #0
   2f274:	bne	2f308 <flatcc_builder_reset@@Base+0x198>
   2f278:	ldr	r0, [r4, #108]	; 0x6c
   2f27c:	ldr	r2, [r4, #112]	; 0x70
   2f280:	cmp	r0, #0
   2f284:	beq	2f294 <flatcc_builder_reset@@Base+0x124>
   2f288:	mov	r1, #0
   2f28c:	bl	14ee4 <memset@plt>
   2f290:	b	2f29c <flatcc_builder_reset@@Base+0x12c>
   2f294:	cmp	r2, #0
   2f298:	bne	2f308 <flatcc_builder_reset@@Base+0x198>
   2f29c:	mov	r0, #0
   2f2a0:	str	r0, [r4, #120]	; 0x78
   2f2a4:	ldr	r1, [r4, #124]	; 0x7c
   2f2a8:	cmp	r1, #0
   2f2ac:	movne	r1, #16
   2f2b0:	strne	r1, [r4, #124]	; 0x7c
   2f2b4:	vmov.i32	q8, #0	; 0x00000000
   2f2b8:	add	r1, r4, #148	; 0x94
   2f2bc:	str	r0, [r4, #136]	; 0x88
   2f2c0:	str	r0, [r4, #140]	; 0x8c
   2f2c4:	strh	r0, [r4, #128]	; 0x80
   2f2c8:	str	r0, [r4, #32]
   2f2cc:	vst1.32	{d16-d17}, [r1]
   2f2d0:	ldr	r1, [r4, #184]	; 0xb8
   2f2d4:	ldr	r2, [r4, #60]	; 0x3c
   2f2d8:	ldr	r3, [r4, #76]	; 0x4c
   2f2dc:	ldr	ip, [r4, #52]	; 0x34
   2f2e0:	cmp	r1, #0
   2f2e4:	str	r2, [r4, #16]
   2f2e8:	str	r0, [r4, #20]
   2f2ec:	str	r0, [r4, #24]
   2f2f0:	stm	r4, {r3, ip}
   2f2f4:	beq	2f300 <flatcc_builder_reset@@Base+0x190>
   2f2f8:	add	r0, r4, #188	; 0xbc
   2f2fc:	bl	33cb8 <flatcc_emitter_reset@@Base>
   2f300:	mov	r0, #0
   2f304:	pop	{r4, sl, fp, pc}
   2f308:	ldr	r0, [pc, #24]	; 2f328 <flatcc_builder_reset@@Base+0x1b8>
   2f30c:	ldr	r1, [pc, #24]	; 2f32c <flatcc_builder_reset@@Base+0x1bc>
   2f310:	ldr	r3, [pc, #24]	; 2f330 <flatcc_builder_reset@@Base+0x1c0>
   2f314:	movw	r2, #434	; 0x1b2
   2f318:	add	r0, pc, r0
   2f31c:	add	r1, pc, r1
   2f320:	add	r3, pc, r3
   2f324:	bl	14f38 <__assert_fail@plt>
   2f328:	andeq	ip, r1, ip, ror #6
   2f32c:	andeq	ip, r1, sl, ror r3
   2f330:	ldrdeq	ip, [r1], -r3

0002f334 <flatcc_builder_clear@@Base>:
   2f334:	push	{r4, sl, fp, lr}
   2f338:	add	fp, sp, #8
   2f33c:	sub	sp, sp, #8
   2f340:	mov	r4, r0
   2f344:	ldr	r0, [r0, #40]	; 0x28
   2f348:	mov	r1, #0
   2f34c:	mov	r2, #0
   2f350:	mov	r3, #0
   2f354:	ldr	ip, [r4, #48]	; 0x30
   2f358:	str	r1, [sp]
   2f35c:	add	r1, r4, #52	; 0x34
   2f360:	blx	ip
   2f364:	ldr	r0, [r4, #40]	; 0x28
   2f368:	ldr	ip, [r4, #48]	; 0x30
   2f36c:	mov	r1, #1
   2f370:	mov	r2, #0
   2f374:	mov	r3, #0
   2f378:	str	r1, [sp]
   2f37c:	add	r1, r4, #60	; 0x3c
   2f380:	blx	ip
   2f384:	ldr	r0, [r4, #40]	; 0x28
   2f388:	ldr	ip, [r4, #48]	; 0x30
   2f38c:	mov	r1, #2
   2f390:	mov	r2, #0
   2f394:	mov	r3, #0
   2f398:	str	r1, [sp]
   2f39c:	add	r1, r4, #68	; 0x44
   2f3a0:	blx	ip
   2f3a4:	ldr	r0, [r4, #40]	; 0x28
   2f3a8:	ldr	ip, [r4, #48]	; 0x30
   2f3ac:	mov	r1, #3
   2f3b0:	mov	r2, #0
   2f3b4:	mov	r3, #0
   2f3b8:	str	r1, [sp]
   2f3bc:	add	r1, r4, #76	; 0x4c
   2f3c0:	blx	ip
   2f3c4:	ldr	r0, [r4, #40]	; 0x28
   2f3c8:	ldr	ip, [r4, #48]	; 0x30
   2f3cc:	mov	r1, #4
   2f3d0:	mov	r2, #0
   2f3d4:	mov	r3, #0
   2f3d8:	str	r1, [sp]
   2f3dc:	add	r1, r4, #84	; 0x54
   2f3e0:	blx	ip
   2f3e4:	ldr	r0, [r4, #40]	; 0x28
   2f3e8:	ldr	ip, [r4, #48]	; 0x30
   2f3ec:	mov	r1, #5
   2f3f0:	mov	r2, #0
   2f3f4:	mov	r3, #0
   2f3f8:	str	r1, [sp]
   2f3fc:	add	r1, r4, #92	; 0x5c
   2f400:	blx	ip
   2f404:	ldr	r0, [r4, #40]	; 0x28
   2f408:	ldr	ip, [r4, #48]	; 0x30
   2f40c:	mov	r1, #6
   2f410:	mov	r2, #0
   2f414:	mov	r3, #0
   2f418:	str	r1, [sp]
   2f41c:	add	r1, r4, #100	; 0x64
   2f420:	blx	ip
   2f424:	ldr	r0, [r4, #40]	; 0x28
   2f428:	ldr	ip, [r4, #48]	; 0x30
   2f42c:	mov	r1, #7
   2f430:	mov	r2, #0
   2f434:	mov	r3, #0
   2f438:	str	r1, [sp]
   2f43c:	add	r1, r4, #108	; 0x6c
   2f440:	blx	ip
   2f444:	ldr	r0, [r4, #184]	; 0xb8
   2f448:	cmp	r0, #0
   2f44c:	beq	2f458 <flatcc_builder_clear@@Base+0x124>
   2f450:	add	r0, r4, #188	; 0xbc
   2f454:	bl	33d84 <flatcc_emitter_clear@@Base>
   2f458:	mov	r0, r4
   2f45c:	mov	r1, #0
   2f460:	mov	r2, #232	; 0xe8
   2f464:	sub	sp, fp, #8
   2f468:	pop	{r4, sl, fp, lr}
   2f46c:	b	14ee4 <memset@plt>

0002f470 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2f470:	push	{r4, r5, r6, r7, fp, lr}
   2f474:	add	fp, sp, #16
   2f478:	sub	sp, sp, #8
   2f47c:	mov	r4, r0
   2f480:	ldr	r0, [r0, #112]	; 0x70
   2f484:	add	r1, r1, #7
   2f488:	ldr	r7, [r4, #228]	; 0xe4
   2f48c:	bic	r5, r1, #3
   2f490:	add	r6, r4, #108	; 0x6c
   2f494:	add	r2, r7, r5
   2f498:	cmp	r2, r0
   2f49c:	bls	2f4c4 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   2f4a0:	ldr	r0, [r4, #40]	; 0x28
   2f4a4:	ldr	ip, [r4, #48]	; 0x30
   2f4a8:	mov	r1, #7
   2f4ac:	mov	r3, #0
   2f4b0:	str	r1, [sp]
   2f4b4:	mov	r1, r6
   2f4b8:	blx	ip
   2f4bc:	cmp	r0, #0
   2f4c0:	bne	2f510 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
   2f4c4:	ldr	r0, [r6]
   2f4c8:	adds	r6, r0, r7
   2f4cc:	beq	2f500 <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
   2f4d0:	mov	r0, r6
   2f4d4:	mov	r1, #0
   2f4d8:	mov	r2, r5
   2f4dc:	bl	14ee4 <memset@plt>
   2f4e0:	ldr	r0, [r4, #224]	; 0xe0
   2f4e4:	str	r0, [r6], #4
   2f4e8:	ldr	r0, [r4, #228]	; 0xe4
   2f4ec:	add	r1, r0, #4
   2f4f0:	add	r0, r0, r5
   2f4f4:	str	r1, [r4, #224]	; 0xe0
   2f4f8:	str	r0, [r4, #228]	; 0xe4
   2f4fc:	b	2f504 <flatcc_builder_enter_user_frame_ptr@@Base+0x94>
   2f500:	mov	r6, #0
   2f504:	mov	r0, r6
   2f508:	sub	sp, fp, #16
   2f50c:	pop	{r4, r5, r6, r7, fp, pc}
   2f510:	ldr	r0, [pc, #24]	; 2f530 <flatcc_builder_enter_user_frame_ptr@@Base+0xc0>
   2f514:	ldr	r1, [pc, #24]	; 2f534 <flatcc_builder_enter_user_frame_ptr@@Base+0xc4>
   2f518:	ldr	r3, [pc, #24]	; 2f538 <flatcc_builder_enter_user_frame_ptr@@Base+0xc8>
   2f51c:	mov	r2, #308	; 0x134
   2f520:	add	r0, pc, r0
   2f524:	add	r1, pc, r1
   2f528:	add	r3, pc, r3
   2f52c:	bl	14f38 <__assert_fail@plt>
   2f530:	andeq	sp, r1, r3, lsr r3
   2f534:	andeq	ip, r1, r2, ror r1
   2f538:	andeq	sp, r1, r5, ror #2

0002f53c <flatcc_builder_enter_user_frame@@Base>:
   2f53c:	push	{r4, r5, r6, r7, fp, lr}
   2f540:	add	fp, sp, #16
   2f544:	sub	sp, sp, #8
   2f548:	mov	r4, r0
   2f54c:	ldr	r0, [r0, #112]	; 0x70
   2f550:	add	r1, r1, #7
   2f554:	ldr	r7, [r4, #228]	; 0xe4
   2f558:	bic	r5, r1, #3
   2f55c:	add	r6, r4, #108	; 0x6c
   2f560:	add	r2, r7, r5
   2f564:	cmp	r2, r0
   2f568:	bls	2f590 <flatcc_builder_enter_user_frame@@Base+0x54>
   2f56c:	ldr	r0, [r4, #40]	; 0x28
   2f570:	ldr	ip, [r4, #48]	; 0x30
   2f574:	mov	r1, #7
   2f578:	mov	r3, #0
   2f57c:	str	r1, [sp]
   2f580:	mov	r1, r6
   2f584:	blx	ip
   2f588:	cmp	r0, #0
   2f58c:	bne	2f5dc <flatcc_builder_enter_user_frame@@Base+0xa0>
   2f590:	ldr	r0, [r6]
   2f594:	adds	r6, r0, r7
   2f598:	beq	2f5d0 <flatcc_builder_enter_user_frame@@Base+0x94>
   2f59c:	mov	r0, r6
   2f5a0:	mov	r1, #0
   2f5a4:	mov	r2, r5
   2f5a8:	bl	14ee4 <memset@plt>
   2f5ac:	ldr	r0, [r4, #224]	; 0xe0
   2f5b0:	str	r0, [r6]
   2f5b4:	ldr	r1, [r4, #228]	; 0xe4
   2f5b8:	add	r0, r1, #4
   2f5bc:	add	r1, r1, r5
   2f5c0:	str	r0, [r4, #224]	; 0xe0
   2f5c4:	str	r1, [r4, #228]	; 0xe4
   2f5c8:	sub	sp, fp, #16
   2f5cc:	pop	{r4, r5, r6, r7, fp, pc}
   2f5d0:	mov	r0, #0
   2f5d4:	sub	sp, fp, #16
   2f5d8:	pop	{r4, r5, r6, r7, fp, pc}
   2f5dc:	ldr	r0, [pc, #24]	; 2f5fc <flatcc_builder_enter_user_frame@@Base+0xc0>
   2f5e0:	ldr	r1, [pc, #24]	; 2f600 <flatcc_builder_enter_user_frame@@Base+0xc4>
   2f5e4:	ldr	r3, [pc, #24]	; 2f604 <flatcc_builder_enter_user_frame@@Base+0xc8>
   2f5e8:	mov	r2, #308	; 0x134
   2f5ec:	add	r0, pc, r0
   2f5f0:	add	r1, pc, r1
   2f5f4:	add	r3, pc, r3
   2f5f8:	bl	14f38 <__assert_fail@plt>
   2f5fc:	andeq	sp, r1, r7, ror #4
   2f600:	andeq	ip, r1, r6, lsr #1
   2f604:	muleq	r1, r9, r0

0002f608 <flatcc_builder_exit_user_frame@@Base>:
   2f608:	push	{fp, lr}
   2f60c:	mov	fp, sp
   2f610:	ldr	r1, [r0, #224]	; 0xe0
   2f614:	cmp	r1, #0
   2f618:	subne	r2, r1, #4
   2f61c:	strne	r2, [r0, #228]	; 0xe4
   2f620:	ldrne	r2, [r0, #108]	; 0x6c
   2f624:	addne	r1, r2, r1
   2f628:	ldrne	r1, [r1, #-4]
   2f62c:	strne	r1, [r0, #224]	; 0xe0
   2f630:	movne	r0, r1
   2f634:	popne	{fp, pc}
   2f638:	ldr	r0, [pc, #24]	; 2f658 <flatcc_builder_exit_user_frame@@Base+0x50>
   2f63c:	ldr	r1, [pc, #24]	; 2f65c <flatcc_builder_exit_user_frame@@Base+0x54>
   2f640:	ldr	r3, [pc, #24]	; 2f660 <flatcc_builder_exit_user_frame@@Base+0x58>
   2f644:	movw	r2, #542	; 0x21e
   2f648:	add	r0, pc, r0
   2f64c:	add	r1, pc, r1
   2f650:	add	r3, pc, r3
   2f654:	bl	14f38 <__assert_fail@plt>
   2f658:	andeq	ip, r1, r9, ror #1
   2f65c:	andeq	ip, r1, sl, asr #32
   2f660:	strdeq	ip, [r1], -sl

0002f664 <flatcc_builder_exit_user_frame_at@@Base>:
   2f664:	push	{fp, lr}
   2f668:	mov	fp, sp
   2f66c:	ldr	r2, [r0, #224]	; 0xe0
   2f670:	cmp	r2, r1
   2f674:	bcc	2f6c0 <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   2f678:	cmp	r1, #0
   2f67c:	str	r1, [r0, #224]	; 0xe0
   2f680:	subne	r2, r1, #4
   2f684:	strne	r2, [r0, #228]	; 0xe4
   2f688:	ldrne	r2, [r0, #108]	; 0x6c
   2f68c:	addne	r1, r2, r1
   2f690:	ldrne	r1, [r1, #-4]
   2f694:	strne	r1, [r0, #224]	; 0xe0
   2f698:	movne	r0, r1
   2f69c:	popne	{fp, pc}
   2f6a0:	ldr	r0, [pc, #68]	; 2f6ec <flatcc_builder_exit_user_frame_at@@Base+0x88>
   2f6a4:	ldr	r1, [pc, #68]	; 2f6f0 <flatcc_builder_exit_user_frame_at@@Base+0x8c>
   2f6a8:	ldr	r3, [pc, #68]	; 2f6f4 <flatcc_builder_exit_user_frame_at@@Base+0x90>
   2f6ac:	movw	r2, #542	; 0x21e
   2f6b0:	add	r0, pc, r0
   2f6b4:	add	r1, pc, r1
   2f6b8:	add	r3, pc, r3
   2f6bc:	bl	14f38 <__assert_fail@plt>
   2f6c0:	ldr	r0, [pc, #24]	; 2f6e0 <flatcc_builder_exit_user_frame_at@@Base+0x7c>
   2f6c4:	ldr	r1, [pc, #24]	; 2f6e4 <flatcc_builder_exit_user_frame_at@@Base+0x80>
   2f6c8:	ldr	r3, [pc, #24]	; 2f6e8 <flatcc_builder_exit_user_frame_at@@Base+0x84>
   2f6cc:	movw	r2, #551	; 0x227
   2f6d0:	add	r0, pc, r0
   2f6d4:	add	r1, pc, r1
   2f6d8:	add	r3, pc, r3
   2f6dc:	bl	14f38 <__assert_fail@plt>
   2f6e0:	strheq	ip, [r1], -r4
   2f6e4:	andeq	fp, r1, r2, asr #31
   2f6e8:	andeq	ip, r1, fp, asr #1
   2f6ec:	andeq	ip, r1, r1, lsl #1
   2f6f0:	andeq	fp, r1, r2, ror #31
   2f6f4:	muleq	r1, r2, r0

0002f6f8 <flatcc_builder_get_current_user_frame@@Base>:
   2f6f8:	ldr	r0, [r0, #224]	; 0xe0
   2f6fc:	bx	lr

0002f700 <flatcc_builder_get_user_frame_ptr@@Base>:
   2f700:	ldr	r0, [r0, #108]	; 0x6c
   2f704:	add	r0, r0, r1
   2f708:	bx	lr

0002f70c <flatcc_builder_embed_buffer@@Base>:
   2f70c:	push	{r4, r5, r6, r7, fp, lr}
   2f710:	add	fp, sp, #16
   2f714:	sub	sp, sp, #88	; 0x58
   2f718:	mov	r4, r0
   2f71c:	ldr	r0, [fp, #8]
   2f720:	mov	r5, r3
   2f724:	mov	r7, r2
   2f728:	mov	r2, r1
   2f72c:	sub	r1, fp, #18
   2f730:	strh	r0, [fp, #-18]	; 0xffffffee
   2f734:	mov	r0, r4
   2f738:	ldr	r3, [r4, #152]	; 0x98
   2f73c:	cmp	r3, #0
   2f740:	movwne	r3, #1
   2f744:	bl	2f898 <flatcc_builder_embed_buffer@@Base+0x18c>
   2f748:	ldr	r1, [fp, #12]
   2f74c:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2f750:	ldr	r0, [r4, #136]	; 0x88
   2f754:	mov	r2, #0
   2f758:	str	r2, [sp, #12]
   2f75c:	str	r2, [sp, #8]
   2f760:	and	r1, r1, #2
   2f764:	sub	r3, r3, #1
   2f768:	add	r1, r5, r1, lsl #1
   2f76c:	sub	r1, r0, r1
   2f770:	and	r3, r1, r3
   2f774:	add	r1, r3, r5
   2f778:	str	r1, [fp, #-24]	; 0xffffffe8
   2f77c:	ldr	r1, [r4, #152]	; 0x98
   2f780:	cmp	r1, #0
   2f784:	mov	r1, #0
   2f788:	beq	2f7a8 <flatcc_builder_embed_buffer@@Base+0x9c>
   2f78c:	mov	r1, #4
   2f790:	sub	r2, fp, #24
   2f794:	str	r1, [sp, #20]
   2f798:	str	r2, [sp, #16]
   2f79c:	mov	r2, #1
   2f7a0:	str	r1, [sp, #8]
   2f7a4:	str	r2, [sp, #12]
   2f7a8:	cmp	r5, #0
   2f7ac:	beq	2f7d0 <flatcc_builder_embed_buffer@@Base+0xc4>
   2f7b0:	add	r6, sp, #8
   2f7b4:	add	r1, r1, r5
   2f7b8:	add	r6, r6, r2, lsl #3
   2f7bc:	add	r2, r2, #1
   2f7c0:	str	r1, [sp, #8]
   2f7c4:	str	r7, [r6, #8]
   2f7c8:	str	r5, [r6, #12]
   2f7cc:	str	r2, [sp, #12]
   2f7d0:	cmp	r3, #0
   2f7d4:	beq	2f800 <flatcc_builder_embed_buffer@@Base+0xf4>
   2f7d8:	add	r1, r1, r3
   2f7dc:	add	r7, sp, #8
   2f7e0:	str	r1, [sp, #8]
   2f7e4:	add	r7, r7, r2, lsl #3
   2f7e8:	add	r2, r2, #1
   2f7ec:	ldr	r6, [pc, #136]	; 2f87c <flatcc_builder_embed_buffer@@Base+0x170>
   2f7f0:	ldr	r6, [pc, r6]
   2f7f4:	str	r6, [r7, #8]
   2f7f8:	str	r3, [r7, #12]
   2f7fc:	str	r2, [sp, #12]
   2f800:	cmp	r1, #0
   2f804:	ble	2f85c <flatcc_builder_embed_buffer@@Base+0x150>
   2f808:	sub	r5, r0, r1
   2f80c:	ldr	r0, [r4, #36]	; 0x24
   2f810:	ldr	r7, [r4, #44]	; 0x2c
   2f814:	str	r1, [sp]
   2f818:	add	r1, sp, #8
   2f81c:	add	r1, r1, #8
   2f820:	mov	r3, r5
   2f824:	blx	r7
   2f828:	cmp	r0, #0
   2f82c:	streq	r5, [r4, #136]	; 0x88
   2f830:	moveq	r0, r5
   2f834:	subeq	sp, fp, #16
   2f838:	popeq	{r4, r5, r6, r7, fp, pc}
   2f83c:	ldr	r0, [pc, #72]	; 2f88c <flatcc_builder_embed_buffer@@Base+0x180>
   2f840:	ldr	r1, [pc, #72]	; 2f890 <flatcc_builder_embed_buffer@@Base+0x184>
   2f844:	ldr	r3, [pc, #72]	; 2f894 <flatcc_builder_embed_buffer@@Base+0x188>
   2f848:	movw	r2, #651	; 0x28b
   2f84c:	add	r0, pc, r0
   2f850:	add	r1, pc, r1
   2f854:	add	r3, pc, r3
   2f858:	bl	14f38 <__assert_fail@plt>
   2f85c:	ldr	r0, [pc, #28]	; 2f880 <flatcc_builder_embed_buffer@@Base+0x174>
   2f860:	ldr	r1, [pc, #28]	; 2f884 <flatcc_builder_embed_buffer@@Base+0x178>
   2f864:	ldr	r3, [pc, #28]	; 2f888 <flatcc_builder_embed_buffer@@Base+0x17c>
   2f868:	movw	r2, #647	; 0x287
   2f86c:	add	r0, pc, r0
   2f870:	add	r1, pc, r1
   2f874:	add	r3, pc, r3
   2f878:	bl	14f38 <__assert_fail@plt>
   2f87c:	andeq	pc, r2, r4, ror r8	; <UNPREDICTABLE>
   2f880:	andeq	ip, r1, r7, ror #31
   2f884:	andeq	fp, r1, r6, lsr #28
   2f888:	muleq	r1, lr, lr
   2f88c:	andeq	sp, r1, r7
   2f890:	andeq	fp, r1, r6, asr #28
   2f894:			; <UNDEFINED> instruction: 0x0001cebe
   2f898:	push	{r4, sl, fp, lr}
   2f89c:	add	fp, sp, #8
   2f8a0:	sub	sp, sp, #80	; 0x50
   2f8a4:	cmp	r2, #0
   2f8a8:	bne	2f8b8 <flatcc_builder_embed_buffer@@Base+0x1ac>
   2f8ac:	ldrh	r2, [r0, #132]	; 0x84
   2f8b0:	cmp	r2, #0
   2f8b4:	movweq	r2, #1
   2f8b8:	ldrh	r4, [r1]
   2f8bc:	cmp	r4, #4
   2f8c0:	movwcc	r4, #4
   2f8c4:	cmpcs	r4, r2
   2f8c8:	bcs	2f8d8 <flatcc_builder_embed_buffer@@Base+0x1cc>
   2f8cc:	cmp	r4, r2
   2f8d0:	movcc	r4, r2
   2f8d4:	strh	r4, [r1]
   2f8d8:	cmp	r3, #0
   2f8dc:	bne	2f950 <flatcc_builder_embed_buffer@@Base+0x244>
   2f8e0:	ldr	r4, [r0, #140]	; 0x8c
   2f8e4:	sub	r1, r2, #1
   2f8e8:	ands	r1, r4, r1
   2f8ec:	beq	2f950 <flatcc_builder_embed_buffer@@Base+0x244>
   2f8f0:	mov	r2, #1
   2f8f4:	str	r1, [sp, #20]
   2f8f8:	str	r1, [sp, #8]
   2f8fc:	cmn	r1, #1
   2f900:	str	r2, [sp, #12]
   2f904:	ldr	r2, [pc, #172]	; 2f9b8 <flatcc_builder_embed_buffer@@Base+0x2ac>
   2f908:	ldr	r2, [pc, r2]
   2f90c:	str	r2, [sp, #16]
   2f910:	add	r2, r1, r4
   2f914:	str	r2, [r0, #140]	; 0x8c
   2f918:	ble	2f958 <flatcc_builder_embed_buffer@@Base+0x24c>
   2f91c:	ldr	r2, [r0, #36]	; 0x24
   2f920:	ldr	ip, [r0, #44]	; 0x2c
   2f924:	add	r0, sp, #8
   2f928:	str	r1, [sp]
   2f92c:	mov	r3, r4
   2f930:	add	r1, r0, #8
   2f934:	mov	r0, r2
   2f938:	mov	r2, #1
   2f93c:	blx	ip
   2f940:	cmp	r0, #0
   2f944:	bne	2f978 <flatcc_builder_embed_buffer@@Base+0x26c>
   2f948:	cmn	r4, #1
   2f94c:	beq	2f998 <flatcc_builder_embed_buffer@@Base+0x28c>
   2f950:	sub	sp, fp, #8
   2f954:	pop	{r4, sl, fp, pc}
   2f958:	ldr	r0, [pc, #92]	; 2f9bc <flatcc_builder_embed_buffer@@Base+0x2b0>
   2f95c:	ldr	r1, [pc, #92]	; 2f9c0 <flatcc_builder_embed_buffer@@Base+0x2b4>
   2f960:	ldr	r3, [pc, #92]	; 2f9c4 <flatcc_builder_embed_buffer@@Base+0x2b8>
   2f964:	movw	r2, #673	; 0x2a1
   2f968:	add	r0, pc, r0
   2f96c:	add	r1, pc, r1
   2f970:	add	r3, pc, r3
   2f974:	bl	14f38 <__assert_fail@plt>
   2f978:	ldr	r0, [pc, #72]	; 2f9c8 <flatcc_builder_embed_buffer@@Base+0x2bc>
   2f97c:	ldr	r1, [pc, #72]	; 2f9cc <flatcc_builder_embed_buffer@@Base+0x2c0>
   2f980:	ldr	r3, [pc, #72]	; 2f9d0 <flatcc_builder_embed_buffer@@Base+0x2c4>
   2f984:	movw	r2, #677	; 0x2a5
   2f988:	add	r0, pc, r0
   2f98c:	add	r1, pc, r1
   2f990:	add	r3, pc, r3
   2f994:	bl	14f38 <__assert_fail@plt>
   2f998:	ldr	r0, [pc, #52]	; 2f9d4 <flatcc_builder_embed_buffer@@Base+0x2c8>
   2f99c:	ldr	r1, [pc, #52]	; 2f9d8 <flatcc_builder_embed_buffer@@Base+0x2cc>
   2f9a0:	ldr	r3, [pc, #52]	; 2f9dc <flatcc_builder_embed_buffer@@Base+0x2d0>
   2f9a4:	movw	r2, #702	; 0x2be
   2f9a8:	add	r0, pc, r0
   2f9ac:	add	r1, pc, r1
   2f9b0:	add	r3, pc, r3
   2f9b4:	bl	14f38 <__assert_fail@plt>
   2f9b8:	andeq	pc, r2, ip, asr r7	; <UNPREDICTABLE>
   2f9bc:	andeq	ip, r1, fp, ror #29
   2f9c0:	andeq	fp, r1, sl, lsr #26
   2f9c4:	andeq	ip, r1, lr, asr lr
   2f9c8:	andeq	ip, r1, fp, asr #29
   2f9cc:	andeq	fp, r1, sl, lsl #26
   2f9d0:	andeq	ip, r1, lr, lsr lr
   2f9d4:	andeq	ip, r1, fp, lsr #29
   2f9d8:	andeq	fp, r1, sl, ror #25
   2f9dc:	andeq	ip, r1, r0, lsr #26

0002f9e0 <flatcc_builder_create_buffer@@Base>:
   2f9e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f9e4:	add	fp, sp, #28
   2f9e8:	sub	sp, sp, #100	; 0x64
   2f9ec:	ldr	sl, [fp, #12]
   2f9f0:	mov	r4, r0
   2f9f4:	ldr	r0, [fp, #8]
   2f9f8:	mov	r7, r1
   2f9fc:	mov	r5, #0
   2fa00:	mov	r6, r3
   2fa04:	sub	r1, fp, #30
   2fa08:	str	r5, [sp, #12]
   2fa0c:	and	r9, sl, #1
   2fa10:	strh	r0, [fp, #-30]	; 0xffffffe2
   2fa14:	mov	r0, r4
   2fa18:	mov	r3, r9
   2fa1c:	bl	2f898 <flatcc_builder_embed_buffer@@Base+0x18c>
   2fa20:	ldrh	r0, [r4, #128]	; 0x80
   2fa24:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2fa28:	str	r6, [sp, #8]
   2fa2c:	cmp	r0, r1
   2fa30:	strhcc	r1, [r4, #128]	; 0x80
   2fa34:	cmp	r7, #0
   2fa38:	beq	2fa54 <flatcc_builder_create_buffer@@Base+0x74>
   2fa3c:	ldr	r5, [r7]
   2fa40:	cmp	r5, #0
   2fa44:	str	r5, [sp, #12]
   2fa48:	movwne	r5, #1
   2fa4c:	lsl	r7, r5, #2
   2fa50:	b	2fa58 <flatcc_builder_create_buffer@@Base+0x78>
   2fa54:	mov	r7, #0
   2fa58:	ldr	r0, [r4, #136]	; 0x88
   2fa5c:	and	r2, sl, #2
   2fa60:	mov	r3, #0
   2fa64:	sub	r6, r1, #1
   2fa68:	ands	ip, sl, #3
   2fa6c:	mov	sl, #4
   2fa70:	mov	r1, #4
   2fa74:	str	r3, [sp, #20]
   2fa78:	str	r3, [sp, #16]
   2fa7c:	sub	r2, r0, r2, lsl #1
   2fa80:	sub	r2, r2, r7
   2fa84:	sub	r2, r2, #4
   2fa88:	beq	2faac <flatcc_builder_create_buffer@@Base+0xcc>
   2fa8c:	mov	r1, #4
   2fa90:	sub	r3, fp, #40	; 0x28
   2fa94:	str	r1, [sp, #28]
   2fa98:	str	r3, [sp, #24]
   2fa9c:	str	r1, [sp, #16]
   2faa0:	mov	r3, #1
   2faa4:	mov	r1, #8
   2faa8:	str	r3, [sp, #20]
   2faac:	add	lr, sp, #16
   2fab0:	and	r6, r2, r6
   2fab4:	sub	r8, fp, #36	; 0x24
   2fab8:	str	r1, [sp, #16]
   2fabc:	cmp	r5, #0
   2fac0:	add	r2, lr, r3, lsl #3
   2fac4:	str	r8, [r2, #8]
   2fac8:	str	sl, [r2, #12]
   2facc:	add	r2, r3, #1
   2fad0:	str	r2, [sp, #20]
   2fad4:	beq	2faf8 <flatcc_builder_create_buffer@@Base+0x118>
   2fad8:	add	r2, lr, r2, lsl #3
   2fadc:	add	r1, r1, r7
   2fae0:	add	r5, sp, #12
   2fae4:	str	r1, [sp, #16]
   2fae8:	str	r5, [r2, #8]
   2faec:	str	r7, [r2, #12]
   2faf0:	orr	r2, r3, #2
   2faf4:	str	r2, [sp, #20]
   2faf8:	cmp	r6, #0
   2fafc:	beq	2fb24 <flatcc_builder_create_buffer@@Base+0x144>
   2fb00:	add	r1, r1, r6
   2fb04:	add	r3, lr, r2, lsl #3
   2fb08:	add	r2, r2, #1
   2fb0c:	str	r1, [sp, #16]
   2fb10:	ldr	r5, [pc, #220]	; 2fbf4 <flatcc_builder_create_buffer@@Base+0x214>
   2fb14:	ldr	r5, [pc, r5]
   2fb18:	str	r5, [r3, #8]
   2fb1c:	str	r6, [r3, #12]
   2fb20:	str	r2, [sp, #20]
   2fb24:	sub	r7, r0, r1
   2fb28:	cmp	ip, #0
   2fb2c:	mov	r6, #144	; 0x90
   2fb30:	ldr	r3, [sp, #8]
   2fb34:	mov	r0, r7
   2fb38:	addne	r0, r0, #4
   2fb3c:	cmp	r9, #0
   2fb40:	movweq	r6, #140	; 0x8c
   2fb44:	cmp	r1, #0
   2fb48:	ldr	r6, [r4, r6]
   2fb4c:	sub	r3, r3, r0
   2fb50:	str	r3, [fp, #-36]	; 0xffffffdc
   2fb54:	sub	r0, r6, r0
   2fb58:	str	r0, [fp, #-40]	; 0xffffffd8
   2fb5c:	ble	2fbb4 <flatcc_builder_create_buffer@@Base+0x1d4>
   2fb60:	ldr	r0, [r4, #36]	; 0x24
   2fb64:	ldr	r6, [r4, #44]	; 0x2c
   2fb68:	str	r1, [sp]
   2fb6c:	add	r1, lr, #8
   2fb70:	mov	r3, r7
   2fb74:	blx	r6
   2fb78:	cmp	r0, #0
   2fb7c:	bne	2fbd4 <flatcc_builder_create_buffer@@Base+0x1f4>
   2fb80:	cmp	r7, #0
   2fb84:	str	r7, [r4, #136]	; 0x88
   2fb88:	movne	r0, r7
   2fb8c:	subne	sp, fp, #28
   2fb90:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fb94:	ldr	r0, [pc, #116]	; 2fc10 <flatcc_builder_create_buffer@@Base+0x230>
   2fb98:	ldr	r1, [pc, #116]	; 2fc14 <flatcc_builder_create_buffer@@Base+0x234>
   2fb9c:	ldr	r3, [pc, #116]	; 2fc18 <flatcc_builder_create_buffer@@Base+0x238>
   2fba0:	mov	r2, #772	; 0x304
   2fba4:	add	r0, pc, r0
   2fba8:	add	r1, pc, r1
   2fbac:	add	r3, pc, r3
   2fbb0:	bl	14f38 <__assert_fail@plt>
   2fbb4:	ldr	r0, [pc, #60]	; 2fbf8 <flatcc_builder_create_buffer@@Base+0x218>
   2fbb8:	ldr	r1, [pc, #60]	; 2fbfc <flatcc_builder_create_buffer@@Base+0x21c>
   2fbbc:	ldr	r3, [pc, #60]	; 2fc00 <flatcc_builder_create_buffer@@Base+0x220>
   2fbc0:	movw	r2, #647	; 0x287
   2fbc4:	add	r0, pc, r0
   2fbc8:	add	r1, pc, r1
   2fbcc:	add	r3, pc, r3
   2fbd0:	bl	14f38 <__assert_fail@plt>
   2fbd4:	ldr	r0, [pc, #40]	; 2fc04 <flatcc_builder_create_buffer@@Base+0x224>
   2fbd8:	ldr	r1, [pc, #40]	; 2fc08 <flatcc_builder_create_buffer@@Base+0x228>
   2fbdc:	ldr	r3, [pc, #40]	; 2fc0c <flatcc_builder_create_buffer@@Base+0x22c>
   2fbe0:	movw	r2, #651	; 0x28b
   2fbe4:	add	r0, pc, r0
   2fbe8:	add	r1, pc, r1
   2fbec:	add	r3, pc, r3
   2fbf0:	bl	14f38 <__assert_fail@plt>
   2fbf4:	andeq	pc, r2, r0, asr r5	; <UNPREDICTABLE>
   2fbf8:	andeq	ip, r1, pc, lsl #25
   2fbfc:	andeq	fp, r1, lr, asr #21
   2fc00:	andeq	ip, r1, r6, asr #22
   2fc04:	andeq	ip, r1, pc, ror #24
   2fc08:	andeq	fp, r1, lr, lsr #21
   2fc0c:	andeq	ip, r1, r6, lsr #22
   2fc10:	andeq	ip, r1, pc, lsr #25
   2fc14:	andeq	fp, r1, lr, ror #21
   2fc18:	andeq	fp, r1, ip, lsr ip

0002fc1c <flatcc_builder_create_struct@@Base>:
   2fc1c:	push	{r4, r5, r6, sl, fp, lr}
   2fc20:	add	fp, sp, #16
   2fc24:	sub	sp, sp, #80	; 0x50
   2fc28:	cmp	r3, #0
   2fc2c:	beq	2fd04 <flatcc_builder_create_struct@@Base+0xe8>
   2fc30:	mov	r5, r0
   2fc34:	ldrh	r0, [r0, #128]	; 0x80
   2fc38:	mov	r4, #0
   2fc3c:	cmp	r0, r3
   2fc40:	strhcc	r3, [r5, #128]	; 0x80
   2fc44:	sub	r3, r3, #1
   2fc48:	cmp	r2, #0
   2fc4c:	ldr	r0, [r5, #136]	; 0x88
   2fc50:	str	r4, [sp, #12]
   2fc54:	str	r4, [sp, #8]
   2fc58:	movne	r4, #1
   2fc5c:	strne	r2, [sp, #20]
   2fc60:	strne	r1, [sp, #16]
   2fc64:	strne	r2, [sp, #8]
   2fc68:	strne	r4, [sp, #12]
   2fc6c:	sub	r6, r0, r2
   2fc70:	and	r3, r6, r3
   2fc74:	cmp	r3, #0
   2fc78:	beq	2fca4 <flatcc_builder_create_struct@@Base+0x88>
   2fc7c:	add	r2, r3, r2
   2fc80:	add	r1, sp, #8
   2fc84:	str	r2, [sp, #8]
   2fc88:	add	r1, r1, r4, lsl #3
   2fc8c:	add	r4, r4, #1
   2fc90:	ldr	r6, [pc, #172]	; 2fd44 <flatcc_builder_create_struct@@Base+0x128>
   2fc94:	ldr	r6, [pc, r6]
   2fc98:	str	r6, [r1, #8]
   2fc9c:	str	r3, [r1, #12]
   2fca0:	str	r4, [sp, #12]
   2fca4:	cmp	r2, #0
   2fca8:	ble	2fd24 <flatcc_builder_create_struct@@Base+0x108>
   2fcac:	sub	r6, r0, r2
   2fcb0:	ldr	r0, [r5, #36]	; 0x24
   2fcb4:	ldr	ip, [r5, #44]	; 0x2c
   2fcb8:	add	r1, sp, #8
   2fcbc:	str	r2, [sp]
   2fcc0:	mov	r2, r4
   2fcc4:	add	r1, r1, #8
   2fcc8:	mov	r3, r6
   2fccc:	blx	ip
   2fcd0:	cmp	r0, #0
   2fcd4:	streq	r6, [r5, #136]	; 0x88
   2fcd8:	moveq	r0, r6
   2fcdc:	subeq	sp, fp, #16
   2fce0:	popeq	{r4, r5, r6, sl, fp, pc}
   2fce4:	ldr	r0, [pc, #116]	; 2fd60 <flatcc_builder_create_struct@@Base+0x144>
   2fce8:	ldr	r1, [pc, #116]	; 2fd64 <flatcc_builder_create_struct@@Base+0x148>
   2fcec:	ldr	r3, [pc, #116]	; 2fd68 <flatcc_builder_create_struct@@Base+0x14c>
   2fcf0:	movw	r2, #651	; 0x28b
   2fcf4:	add	r0, pc, r0
   2fcf8:	add	r1, pc, r1
   2fcfc:	add	r3, pc, r3
   2fd00:	bl	14f38 <__assert_fail@plt>
   2fd04:	ldr	r0, [pc, #60]	; 2fd48 <flatcc_builder_create_struct@@Base+0x12c>
   2fd08:	ldr	r1, [pc, #60]	; 2fd4c <flatcc_builder_create_struct@@Base+0x130>
   2fd0c:	ldr	r3, [pc, #60]	; 2fd50 <flatcc_builder_create_struct@@Base+0x134>
   2fd10:	movw	r2, #783	; 0x30f
   2fd14:	add	r0, pc, r0
   2fd18:	add	r1, pc, r1
   2fd1c:	add	r3, pc, r3
   2fd20:	bl	14f38 <__assert_fail@plt>
   2fd24:	ldr	r0, [pc, #40]	; 2fd54 <flatcc_builder_create_struct@@Base+0x138>
   2fd28:	ldr	r1, [pc, #40]	; 2fd58 <flatcc_builder_create_struct@@Base+0x13c>
   2fd2c:	ldr	r3, [pc, #40]	; 2fd5c <flatcc_builder_create_struct@@Base+0x140>
   2fd30:	movw	r2, #647	; 0x287
   2fd34:	add	r0, pc, r0
   2fd38:	add	r1, pc, r1
   2fd3c:	add	r3, pc, r3
   2fd40:	bl	14f38 <__assert_fail@plt>
   2fd44:	ldrdeq	pc, [r2], -r0
   2fd48:	andeq	fp, r1, r7, asr fp
   2fd4c:	andeq	fp, r1, lr, ror r9
   2fd50:	andeq	fp, r1, sl, asr fp
   2fd54:	andeq	ip, r1, pc, lsl fp
   2fd58:	andeq	fp, r1, lr, asr r9
   2fd5c:	ldrdeq	ip, [r1], -r6
   2fd60:	andeq	ip, r1, pc, asr fp
   2fd64:	muleq	r1, lr, r9
   2fd68:	andeq	ip, r1, r6, lsl sl

0002fd6c <flatcc_builder_start_buffer@@Base>:
   2fd6c:	push	{r4, r5, r6, r7, fp, lr}
   2fd70:	add	fp, sp, #16
   2fd74:	mov	r5, r1
   2fd78:	ldrh	r1, [r0, #128]	; 0x80
   2fd7c:	mov	r6, r3
   2fd80:	mov	r7, r2
   2fd84:	mov	r4, r0
   2fd88:	bl	2fe2c <flatcc_builder_start_buffer@@Base+0xc0>
   2fd8c:	mov	r1, r0
   2fd90:	mvn	r0, #0
   2fd94:	cmp	r1, #0
   2fd98:	popne	{r4, r5, r6, r7, fp, pc}
   2fd9c:	mov	r0, #1
   2fda0:	cmp	r5, #0
   2fda4:	strh	r0, [r4, #128]	; 0x80
   2fda8:	ldrh	r1, [r4, #132]	; 0x84
   2fdac:	ldr	r2, [r4, #32]
   2fdb0:	strh	r1, [r2, #34]	; 0x22
   2fdb4:	strh	r7, [r4, #132]	; 0x84
   2fdb8:	ldrh	r1, [r4, #164]	; 0xa4
   2fdbc:	ldr	r2, [r4, #32]
   2fdc0:	strh	r1, [r2, #32]
   2fdc4:	strh	r6, [r4, #164]	; 0xa4
   2fdc8:	ldr	r1, [r4, #32]
   2fdcc:	ldr	r2, [r4, #144]	; 0x90
   2fdd0:	str	r2, [r1, #20]
   2fdd4:	ldr	r1, [r4, #32]
   2fdd8:	ldr	r2, [r4, #152]	; 0x98
   2fddc:	str	r2, [r1, #28]
   2fde0:	ldr	r3, [r4, #148]	; 0x94
   2fde4:	ldr	r1, [r4, #32]
   2fde8:	ldr	r2, [r4, #136]	; 0x88
   2fdec:	ldr	r7, [r4, #168]	; 0xa8
   2fdf0:	add	r6, r3, #1
   2fdf4:	str	r2, [r4, #144]	; 0x90
   2fdf8:	str	r6, [r4, #148]	; 0x94
   2fdfc:	str	r3, [r4, #152]	; 0x98
   2fe00:	str	r7, [r1, #16]
   2fe04:	ldr	r1, [pc, #28]	; 2fe28 <flatcc_builder_start_buffer@@Base+0xbc>
   2fe08:	ldr	r1, [pc, r1]
   2fe0c:	movne	r1, r5
   2fe10:	ldr	r1, [r1]
   2fe14:	str	r1, [r4, #168]	; 0xa8
   2fe18:	ldr	r1, [r4, #32]
   2fe1c:	strh	r0, [r1, #14]
   2fe20:	mov	r0, #0
   2fe24:	pop	{r4, r5, r6, r7, fp, pc}
   2fe28:	andeq	pc, r2, ip, asr r2	; <UNPREDICTABLE>
   2fe2c:	push	{r4, r5, r6, r7, fp, lr}
   2fe30:	add	fp, sp, #16
   2fe34:	sub	sp, sp, #8
   2fe38:	mov	r5, r1
   2fe3c:	ldr	r1, [r0, #156]	; 0x9c
   2fe40:	ldr	r2, [r0, #160]	; 0xa0
   2fe44:	mov	r4, r0
   2fe48:	add	r0, r1, #1
   2fe4c:	cmp	r1, r2
   2fe50:	str	r0, [r4, #156]	; 0x9c
   2fe54:	bge	2fe68 <flatcc_builder_start_buffer@@Base+0xfc>
   2fe58:	ldr	r0, [r4, #32]
   2fe5c:	add	r0, r0, #36	; 0x24
   2fe60:	str	r0, [r4, #32]
   2fe64:	b	2fefc <flatcc_builder_start_buffer@@Base+0x190>
   2fe68:	ldr	r2, [r4, #176]	; 0xb0
   2fe6c:	mvn	r6, #0
   2fe70:	cmp	r2, #1
   2fe74:	cmpge	r1, r2
   2fe78:	bge	2ff34 <flatcc_builder_start_buffer@@Base+0x1c8>
   2fe7c:	add	r7, r0, r0, lsl #3
   2fe80:	ldr	r0, [r4, #88]	; 0x58
   2fe84:	lsl	r2, r7, #2
   2fe88:	cmp	r2, r0
   2fe8c:	bls	2feb4 <flatcc_builder_start_buffer@@Base+0x148>
   2fe90:	ldr	r0, [r4, #40]	; 0x28
   2fe94:	ldr	ip, [r4, #48]	; 0x30
   2fe98:	mov	r3, #4
   2fe9c:	add	r1, r4, #84	; 0x54
   2fea0:	str	r3, [sp]
   2fea4:	mov	r3, #0
   2fea8:	blx	ip
   2feac:	cmp	r0, #0
   2feb0:	bne	2ff40 <flatcc_builder_start_buffer@@Base+0x1d4>
   2feb4:	ldr	r1, [r4, #84]	; 0x54
   2feb8:	mvn	r0, #35	; 0x23
   2febc:	add	r0, r0, r7, lsl #2
   2fec0:	adds	r0, r0, r1
   2fec4:	str	r0, [r4, #32]
   2fec8:	beq	2ff34 <flatcc_builder_start_buffer@@Base+0x1c8>
   2fecc:	ldr	r1, [r4, #88]	; 0x58
   2fed0:	movw	r3, #36409	; 0x8e39
   2fed4:	ldr	r2, [r4, #176]	; 0xb0
   2fed8:	movt	r3, #14563	; 0x38e3
   2fedc:	umull	r1, r3, r1, r3
   2fee0:	cmp	r2, r3, lsr #3
   2fee4:	lsr	r1, r3, #3
   2fee8:	mov	r3, r1
   2feec:	movlt	r3, r2
   2fef0:	cmp	r2, #0
   2fef4:	movle	r3, r1
   2fef8:	str	r3, [r4, #160]	; 0xa0
   2fefc:	ldr	r1, [r4, #20]
   2ff00:	mvn	r3, #3
   2ff04:	mov	r6, #0
   2ff08:	str	r1, [r0, #8]
   2ff0c:	ldrh	r2, [r4, #130]	; 0x82
   2ff10:	strh	r2, [r0, #12]
   2ff14:	strh	r5, [r4, #130]	; 0x82
   2ff18:	ldr	r2, [r4, #28]
   2ff1c:	stm	r0, {r2, r3}
   2ff20:	add	r0, r1, r2
   2ff24:	str	r6, [r4, #20]
   2ff28:	add	r0, r0, #7
   2ff2c:	bic	r0, r0, #7
   2ff30:	str	r0, [r4, #28]
   2ff34:	mov	r0, r6
   2ff38:	sub	sp, fp, #16
   2ff3c:	pop	{r4, r5, r6, r7, fp, pc}
   2ff40:	ldr	r0, [pc, #24]	; 2ff60 <flatcc_builder_start_buffer@@Base+0x1f4>
   2ff44:	ldr	r1, [pc, #24]	; 2ff64 <flatcc_builder_start_buffer@@Base+0x1f8>
   2ff48:	ldr	r3, [pc, #24]	; 2ff68 <flatcc_builder_start_buffer@@Base+0x1fc>
   2ff4c:	mov	r2, #308	; 0x134
   2ff50:	add	r0, pc, r0
   2ff54:	add	r1, pc, r1
   2ff58:	add	r3, pc, r3
   2ff5c:	bl	14f38 <__assert_fail@plt>
   2ff60:	andeq	ip, r1, r3, lsl #18
   2ff64:	andeq	fp, r1, r2, asr #14
   2ff68:	andeq	ip, r1, r5, lsr r7

0002ff6c <flatcc_builder_end_buffer@@Base>:
   2ff6c:	push	{r4, r5, r6, sl, fp, lr}
   2ff70:	add	fp, sp, #16
   2ff74:	sub	sp, sp, #8
   2ff78:	mov	r4, r0
   2ff7c:	ldr	r0, [r0, #32]
   2ff80:	ldrh	r0, [r0, #14]
   2ff84:	cmp	r0, #1
   2ff88:	bne	3007c <flatcc_builder_end_buffer@@Base+0x110>
   2ff8c:	mov	r3, r1
   2ff90:	ldr	r1, [r4, #152]	; 0x98
   2ff94:	ldrh	r0, [r4, #164]	; 0xa4
   2ff98:	ldrh	r2, [r4, #132]	; 0x84
   2ff9c:	cmp	r1, #0
   2ffa0:	ldrh	r1, [r4, #128]	; 0x80
   2ffa4:	and	r0, r0, #2
   2ffa8:	orrne	r0, r0, #1
   2ffac:	cmp	r1, r2
   2ffb0:	movcc	r1, r2
   2ffb4:	strhcc	r2, [r4, #128]	; 0x80
   2ffb8:	str	r0, [sp, #4]
   2ffbc:	mov	r0, r4
   2ffc0:	str	r1, [sp]
   2ffc4:	add	r1, r4, #168	; 0xa8
   2ffc8:	bl	2f9e0 <flatcc_builder_create_buffer@@Base>
   2ffcc:	mov	r6, r0
   2ffd0:	cmp	r0, #0
   2ffd4:	beq	30070 <flatcc_builder_end_buffer@@Base+0x104>
   2ffd8:	ldr	r1, [r4, #32]
   2ffdc:	ldr	r0, [r4, #16]
   2ffe0:	ldr	r2, [r4, #20]
   2ffe4:	ldr	r3, [r1, #20]
   2ffe8:	str	r3, [r4, #144]	; 0x90
   2ffec:	ldr	r3, [r1, #28]
   2fff0:	str	r3, [r4, #152]	; 0x98
   2fff4:	ldr	r3, [r1, #16]
   2fff8:	str	r3, [r4, #168]	; 0xa8
   2fffc:	ldrh	r1, [r1, #32]
   30000:	strh	r1, [r4, #164]	; 0xa4
   30004:	mov	r1, #0
   30008:	bl	14ee4 <memset@plt>
   3000c:	ldr	r0, [r4, #32]
   30010:	ldr	r1, [r4, #60]	; 0x3c
   30014:	ldr	r2, [r4, #64]	; 0x40
   30018:	ldr	r3, [r0, #8]
   3001c:	str	r3, [r4, #20]
   30020:	ldr	r3, [r0]
   30024:	str	r3, [r4, #28]
   30028:	add	r1, r1, r3
   3002c:	ldr	r5, [r0, #4]
   30030:	str	r1, [r4, #16]
   30034:	sub	r1, r2, r3
   30038:	cmp	r1, r5
   3003c:	movhi	r1, r5
   30040:	str	r1, [r4, #24]
   30044:	ldrh	r1, [r4, #130]	; 0x82
   30048:	ldrh	r2, [r4, #128]	; 0x80
   3004c:	cmp	r2, r1
   30050:	strhcc	r1, [r4, #128]	; 0x80
   30054:	ldrh	r1, [r0, #12]
   30058:	sub	r0, r0, #36	; 0x24
   3005c:	str	r0, [r4, #32]
   30060:	strh	r1, [r4, #130]	; 0x82
   30064:	ldr	r0, [r4, #156]	; 0x9c
   30068:	sub	r0, r0, #1
   3006c:	str	r0, [r4, #156]	; 0x9c
   30070:	mov	r0, r6
   30074:	sub	sp, fp, #16
   30078:	pop	{r4, r5, r6, sl, fp, pc}
   3007c:	ldr	r0, [pc, #24]	; 3009c <flatcc_builder_end_buffer@@Base+0x130>
   30080:	ldr	r1, [pc, #24]	; 300a0 <flatcc_builder_end_buffer@@Base+0x134>
   30084:	ldr	r3, [pc, #24]	; 300a4 <flatcc_builder_end_buffer@@Base+0x138>
   30088:	movw	r2, #838	; 0x346
   3008c:	add	r0, pc, r0
   30090:	add	r1, pc, r1
   30094:	add	r3, pc, r3
   30098:	bl	14f38 <__assert_fail@plt>
   3009c:	andeq	fp, r1, r0, asr r8
   300a0:	andeq	fp, r1, r6, lsl #12
   300a4:	andeq	fp, r1, r4, ror r8

000300a8 <flatcc_builder_start_struct@@Base>:
   300a8:	push	{r4, r5, r6, r7, fp, lr}
   300ac:	add	fp, sp, #16
   300b0:	sub	sp, sp, #8
   300b4:	mov	r6, r1
   300b8:	mov	r1, r2
   300bc:	mov	r4, r0
   300c0:	bl	2fe2c <flatcc_builder_start_buffer@@Base+0xc0>
   300c4:	mov	r5, #0
   300c8:	cmp	r0, #0
   300cc:	bne	3017c <flatcc_builder_start_struct@@Base+0xd4>
   300d0:	ldr	r2, [r4, #32]
   300d4:	mov	r0, #2
   300d8:	mvn	r7, #3
   300dc:	strh	r0, [r2, #14]
   300e0:	ldr	r1, [r4, #28]
   300e4:	ldr	r3, [r4, #64]	; 0x40
   300e8:	ldr	r0, [r4, #60]	; 0x3c
   300ec:	sub	r3, r3, r1
   300f0:	add	r0, r0, r1
   300f4:	cmn	r3, #4
   300f8:	str	r0, [r4, #16]
   300fc:	movcs	r3, r7
   30100:	str	r3, [r4, #24]
   30104:	str	r7, [r2, #4]
   30108:	ldr	r7, [r4, #20]
   3010c:	add	r2, r7, r6
   30110:	cmp	r2, r3
   30114:	str	r2, [r4, #20]
   30118:	bcc	30178 <flatcc_builder_start_struct@@Base+0xd0>
   3011c:	ldr	r0, [r4, #40]	; 0x28
   30120:	ldr	r6, [r4, #48]	; 0x30
   30124:	add	r1, r1, r2
   30128:	mov	r3, #1
   3012c:	str	r3, [sp]
   30130:	add	r2, r1, #1
   30134:	add	r1, r4, #60	; 0x3c
   30138:	mov	r3, #1
   3013c:	blx	r6
   30140:	cmp	r0, #0
   30144:	bne	3017c <flatcc_builder_start_struct@@Base+0xd4>
   30148:	ldr	r1, [r4, #28]
   3014c:	ldr	r0, [r4, #60]	; 0x3c
   30150:	ldr	r3, [r4, #64]	; 0x40
   30154:	ldr	r2, [r4, #32]
   30158:	add	r0, r0, r1
   3015c:	sub	r1, r3, r1
   30160:	mvn	r3, #3
   30164:	cmn	r1, #4
   30168:	str	r0, [r4, #16]
   3016c:	movcs	r1, r3
   30170:	str	r1, [r4, #24]
   30174:	str	r3, [r2, #4]
   30178:	add	r5, r0, r7
   3017c:	mov	r0, r5
   30180:	sub	sp, fp, #16
   30184:	pop	{r4, r5, r6, r7, fp, pc}

00030188 <flatcc_builder_struct_edit@@Base>:
   30188:	ldr	r0, [r0, #16]
   3018c:	bx	lr

00030190 <flatcc_builder_end_struct@@Base>:
   30190:	push	{r4, r5, fp, lr}
   30194:	add	fp, sp, #8
   30198:	mov	r4, r0
   3019c:	ldr	r0, [r0, #32]
   301a0:	ldrh	r0, [r0, #14]
   301a4:	cmp	r0, #2
   301a8:	bne	30248 <flatcc_builder_end_struct@@Base+0xb8>
   301ac:	ldrh	r3, [r4, #130]	; 0x82
   301b0:	ldr	r1, [r4, #16]
   301b4:	ldr	r2, [r4, #20]
   301b8:	mov	r0, r4
   301bc:	bl	2fc1c <flatcc_builder_create_struct@@Base>
   301c0:	mov	r5, r0
   301c4:	cmp	r0, #0
   301c8:	beq	30240 <flatcc_builder_end_struct@@Base+0xb0>
   301cc:	ldr	r0, [r4, #16]
   301d0:	ldr	r2, [r4, #20]
   301d4:	mov	r1, #0
   301d8:	bl	14ee4 <memset@plt>
   301dc:	ldr	r0, [r4, #32]
   301e0:	ldr	r1, [r4, #60]	; 0x3c
   301e4:	ldr	ip, [r4, #64]	; 0x40
   301e8:	ldr	r3, [r0, #8]
   301ec:	str	r3, [r4, #20]
   301f0:	ldr	r3, [r0]
   301f4:	str	r3, [r4, #28]
   301f8:	add	r1, r1, r3
   301fc:	ldr	r2, [r0, #4]
   30200:	str	r1, [r4, #16]
   30204:	sub	r1, ip, r3
   30208:	cmp	r1, r2
   3020c:	movhi	r1, r2
   30210:	str	r1, [r4, #24]
   30214:	ldrh	r1, [r4, #130]	; 0x82
   30218:	ldrh	r2, [r4, #128]	; 0x80
   3021c:	cmp	r2, r1
   30220:	strhcc	r1, [r4, #128]	; 0x80
   30224:	ldrh	r1, [r0, #12]
   30228:	sub	r0, r0, #36	; 0x24
   3022c:	str	r0, [r4, #32]
   30230:	strh	r1, [r4, #130]	; 0x82
   30234:	ldr	r0, [r4, #156]	; 0x9c
   30238:	sub	r0, r0, #1
   3023c:	str	r0, [r4, #156]	; 0x9c
   30240:	mov	r0, r5
   30244:	pop	{r4, r5, fp, pc}
   30248:	ldr	r0, [pc, #24]	; 30268 <flatcc_builder_end_struct@@Base+0xd8>
   3024c:	ldr	r1, [pc, #24]	; 3026c <flatcc_builder_end_struct@@Base+0xdc>
   30250:	ldr	r3, [pc, #24]	; 30270 <flatcc_builder_end_struct@@Base+0xe0>
   30254:	mov	r2, #872	; 0x368
   30258:	add	r0, pc, r0
   3025c:	add	r1, pc, r1
   30260:	add	r3, pc, r3
   30264:	bl	14f38 <__assert_fail@plt>
   30268:	andeq	fp, r1, r9, lsl #14
   3026c:	andeq	fp, r1, sl, lsr r4
   30270:	andeq	fp, r1, sp, lsr #14

00030274 <flatcc_builder_extend_vector@@Base>:
   30274:	push	{r4, r5, fp, lr}
   30278:	add	fp, sp, #8
   3027c:	sub	sp, sp, #8
   30280:	mov	r4, r0
   30284:	ldr	r0, [r0, #32]
   30288:	ldr	r2, [r0, #20]
   3028c:	adds	r2, r2, r1
   30290:	bcs	30348 <flatcc_builder_extend_vector@@Base+0xd4>
   30294:	ldr	r3, [r0, #24]
   30298:	cmp	r2, r3
   3029c:	bhi	30348 <flatcc_builder_extend_vector@@Base+0xd4>
   302a0:	str	r2, [r0, #20]
   302a4:	ldr	r2, [r4, #32]
   302a8:	ldr	r5, [r4, #20]
   302ac:	ldr	r0, [r4, #24]
   302b0:	ldr	r2, [r2, #16]
   302b4:	mla	r1, r2, r1, r5
   302b8:	cmp	r1, r0
   302bc:	str	r1, [r4, #20]
   302c0:	bcs	302cc <flatcc_builder_extend_vector@@Base+0x58>
   302c4:	ldr	r0, [r4, #16]
   302c8:	b	3033c <flatcc_builder_extend_vector@@Base+0xc8>
   302cc:	ldr	r2, [r4, #28]
   302d0:	ldr	r0, [r4, #40]	; 0x28
   302d4:	ldr	ip, [r4, #48]	; 0x30
   302d8:	mov	r3, #1
   302dc:	str	r3, [sp]
   302e0:	mov	r3, #1
   302e4:	add	r1, r1, r2
   302e8:	add	r2, r1, #1
   302ec:	add	r1, r4, #60	; 0x3c
   302f0:	blx	ip
   302f4:	mov	r1, r0
   302f8:	mov	r0, #0
   302fc:	cmp	r1, #0
   30300:	beq	3030c <flatcc_builder_extend_vector@@Base+0x98>
   30304:	sub	sp, fp, #8
   30308:	pop	{r4, r5, fp, pc}
   3030c:	ldr	r1, [r4, #28]
   30310:	ldr	r0, [r4, #60]	; 0x3c
   30314:	ldr	r3, [r4, #64]	; 0x40
   30318:	ldr	r2, [r4, #32]
   3031c:	add	r0, r0, r1
   30320:	sub	r1, r3, r1
   30324:	mvn	r3, #3
   30328:	cmn	r1, #4
   3032c:	str	r0, [r4, #16]
   30330:	movcs	r1, r3
   30334:	str	r1, [r4, #24]
   30338:	str	r3, [r2, #4]
   3033c:	add	r0, r0, r5
   30340:	sub	sp, fp, #8
   30344:	pop	{r4, r5, fp, pc}
   30348:	ldr	r0, [pc, #24]	; 30368 <flatcc_builder_extend_vector@@Base+0xf4>
   3034c:	ldr	r1, [pc, #24]	; 3036c <flatcc_builder_extend_vector@@Base+0xf8>
   30350:	ldr	r3, [pc, #24]	; 30370 <flatcc_builder_extend_vector@@Base+0xfc>
   30354:	mov	r2, #892	; 0x37c
   30358:	add	r0, pc, r0
   3035c:	add	r1, pc, r1
   30360:	add	r3, pc, r3
   30364:	bl	14f38 <__assert_fail@plt>
   30368:	andeq	ip, r1, r4, lsl #8
   3036c:	andeq	fp, r1, sl, lsr r3
   30370:	andeq	ip, r1, r7, lsl r4

00030374 <flatcc_builder_vector_push@@Base>:
   30374:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30378:	add	fp, sp, #24
   3037c:	sub	sp, sp, #8
   30380:	mov	r5, r0
   30384:	ldr	r0, [r0, #32]
   30388:	mov	r8, r1
   3038c:	ldrh	r1, [r0, #14]
   30390:	cmp	r1, #4
   30394:	bne	3046c <flatcc_builder_vector_push@@Base+0xf8>
   30398:	ldr	r1, [r0, #20]
   3039c:	ldr	r2, [r0, #24]
   303a0:	cmp	r1, r2
   303a4:	bhi	3048c <flatcc_builder_vector_push@@Base+0x118>
   303a8:	add	r1, r1, #1
   303ac:	str	r1, [r0, #20]
   303b0:	ldr	r1, [r5, #32]
   303b4:	ldr	r4, [r5, #20]
   303b8:	ldr	r0, [r5, #24]
   303bc:	ldr	r6, [r1, #16]
   303c0:	add	r1, r4, r6
   303c4:	cmp	r1, r0
   303c8:	str	r1, [r5, #20]
   303cc:	bcs	303f0 <flatcc_builder_vector_push@@Base+0x7c>
   303d0:	ldr	r0, [r5, #16]
   303d4:	adds	r7, r0, r4
   303d8:	beq	3045c <flatcc_builder_vector_push@@Base+0xe8>
   303dc:	mov	r0, r7
   303e0:	mov	r1, r8
   303e4:	mov	r2, r6
   303e8:	bl	14e54 <memcpy@plt>
   303ec:	b	30460 <flatcc_builder_vector_push@@Base+0xec>
   303f0:	ldr	r2, [r5, #28]
   303f4:	ldr	r0, [r5, #40]	; 0x28
   303f8:	ldr	r7, [r5, #48]	; 0x30
   303fc:	mov	r3, #1
   30400:	str	r3, [sp]
   30404:	mov	r3, #1
   30408:	add	r1, r1, r2
   3040c:	add	r2, r1, #1
   30410:	add	r1, r5, #60	; 0x3c
   30414:	blx	r7
   30418:	mov	r7, #0
   3041c:	cmp	r0, #0
   30420:	bne	30460 <flatcc_builder_vector_push@@Base+0xec>
   30424:	ldr	r1, [r5, #28]
   30428:	ldr	r0, [r5, #60]	; 0x3c
   3042c:	ldr	r3, [r5, #64]	; 0x40
   30430:	ldr	r2, [r5, #32]
   30434:	add	r0, r0, r1
   30438:	sub	r1, r3, r1
   3043c:	mvn	r3, #3
   30440:	cmn	r1, #4
   30444:	str	r0, [r5, #16]
   30448:	movcs	r1, r3
   3044c:	str	r1, [r5, #24]
   30450:	str	r3, [r2, #4]
   30454:	adds	r7, r0, r4
   30458:	bne	303dc <flatcc_builder_vector_push@@Base+0x68>
   3045c:	mov	r7, #0
   30460:	mov	r0, r7
   30464:	sub	sp, fp, #24
   30468:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3046c:	ldr	r0, [pc, #56]	; 304ac <flatcc_builder_vector_push@@Base+0x138>
   30470:	ldr	r1, [pc, #56]	; 304b0 <flatcc_builder_vector_push@@Base+0x13c>
   30474:	ldr	r3, [pc, #56]	; 304b4 <flatcc_builder_vector_push@@Base+0x140>
   30478:	movw	r2, #907	; 0x38b
   3047c:	add	r0, pc, r0
   30480:	add	r1, pc, r1
   30484:	add	r3, pc, r3
   30488:	bl	14f38 <__assert_fail@plt>
   3048c:	ldr	r0, [pc, #36]	; 304b8 <flatcc_builder_vector_push@@Base+0x144>
   30490:	ldr	r1, [pc, #36]	; 304bc <flatcc_builder_vector_push@@Base+0x148>
   30494:	ldr	r3, [pc, #36]	; 304c0 <flatcc_builder_vector_push@@Base+0x14c>
   30498:	mov	r2, #908	; 0x38c
   3049c:	add	r0, pc, r0
   304a0:	add	r1, pc, r1
   304a4:	add	r3, pc, r3
   304a8:	bl	14f38 <__assert_fail@plt>
   304ac:	andeq	fp, r1, r4, asr r5
   304b0:	andeq	fp, r1, r6, lsl r2
   304b4:	andeq	fp, r1, r8, ror r5
   304b8:	andeq	fp, r1, r3, lsr #11
   304bc:	strdeq	fp, [r1], -r6
   304c0:	andeq	fp, r1, r8, asr r5

000304c4 <flatcc_builder_append_vector@@Base>:
   304c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   304c8:	add	fp, sp, #24
   304cc:	sub	sp, sp, #8
   304d0:	mov	r6, r0
   304d4:	ldr	r0, [r0, #32]
   304d8:	mov	r8, r1
   304dc:	ldrh	r1, [r0, #14]
   304e0:	cmp	r1, #4
   304e4:	bne	305e4 <flatcc_builder_append_vector@@Base+0x120>
   304e8:	ldr	r1, [r0, #20]
   304ec:	mov	r5, r2
   304f0:	adds	r1, r1, r2
   304f4:	bcs	305c4 <flatcc_builder_append_vector@@Base+0x100>
   304f8:	ldr	r2, [r0, #24]
   304fc:	cmp	r1, r2
   30500:	bhi	305c4 <flatcc_builder_append_vector@@Base+0x100>
   30504:	str	r1, [r0, #20]
   30508:	ldr	r1, [r6, #32]
   3050c:	ldr	r4, [r6, #20]
   30510:	ldr	r0, [r6, #24]
   30514:	ldr	r9, [r1, #16]
   30518:	mla	r1, r9, r5, r4
   3051c:	cmp	r1, r0
   30520:	str	r1, [r6, #20]
   30524:	bcs	30548 <flatcc_builder_append_vector@@Base+0x84>
   30528:	ldr	r0, [r6, #16]
   3052c:	adds	r7, r0, r4
   30530:	beq	305b4 <flatcc_builder_append_vector@@Base+0xf0>
   30534:	mul	r2, r9, r5
   30538:	mov	r0, r7
   3053c:	mov	r1, r8
   30540:	bl	14e54 <memcpy@plt>
   30544:	b	305b8 <flatcc_builder_append_vector@@Base+0xf4>
   30548:	ldr	r2, [r6, #28]
   3054c:	ldr	r0, [r6, #40]	; 0x28
   30550:	ldr	r7, [r6, #48]	; 0x30
   30554:	mov	r3, #1
   30558:	str	r3, [sp]
   3055c:	mov	r3, #1
   30560:	add	r1, r1, r2
   30564:	add	r2, r1, #1
   30568:	add	r1, r6, #60	; 0x3c
   3056c:	blx	r7
   30570:	mov	r7, #0
   30574:	cmp	r0, #0
   30578:	bne	305b8 <flatcc_builder_append_vector@@Base+0xf4>
   3057c:	ldr	r1, [r6, #28]
   30580:	ldr	r0, [r6, #60]	; 0x3c
   30584:	ldr	r3, [r6, #64]	; 0x40
   30588:	ldr	r2, [r6, #32]
   3058c:	add	r0, r0, r1
   30590:	sub	r1, r3, r1
   30594:	mvn	r3, #3
   30598:	cmn	r1, #4
   3059c:	str	r0, [r6, #16]
   305a0:	movcs	r1, r3
   305a4:	str	r1, [r6, #24]
   305a8:	str	r3, [r2, #4]
   305ac:	adds	r7, r0, r4
   305b0:	bne	30534 <flatcc_builder_append_vector@@Base+0x70>
   305b4:	mov	r7, #0
   305b8:	mov	r0, r7
   305bc:	sub	sp, fp, #24
   305c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   305c4:	ldr	r0, [pc, #68]	; 30610 <flatcc_builder_append_vector@@Base+0x14c>
   305c8:	ldr	r1, [pc, #68]	; 30614 <flatcc_builder_append_vector@@Base+0x150>
   305cc:	ldr	r3, [pc, #68]	; 30618 <flatcc_builder_append_vector@@Base+0x154>
   305d0:	mov	r2, #892	; 0x37c
   305d4:	add	r0, pc, r0
   305d8:	add	r1, pc, r1
   305dc:	add	r3, pc, r3
   305e0:	bl	14f38 <__assert_fail@plt>
   305e4:	ldr	r0, [pc, #24]	; 30604 <flatcc_builder_append_vector@@Base+0x140>
   305e8:	ldr	r1, [pc, #24]	; 30608 <flatcc_builder_append_vector@@Base+0x144>
   305ec:	ldr	r3, [pc, #24]	; 3060c <flatcc_builder_append_vector@@Base+0x148>
   305f0:	movw	r2, #915	; 0x393
   305f4:	add	r0, pc, r0
   305f8:	add	r1, pc, r1
   305fc:	add	r3, pc, r3
   30600:	bl	14f38 <__assert_fail@plt>
   30604:	ldrdeq	fp, [r1], -ip
   30608:	muleq	r1, lr, r0
   3060c:	andeq	fp, r1, r0, lsl #9
   30610:	andeq	ip, r1, r8, lsl #3
   30614:	strheq	fp, [r1], -lr
   30618:	muleq	r1, fp, r1

0003061c <flatcc_builder_extend_offset_vector@@Base>:
   3061c:	push	{r4, r5, fp, lr}
   30620:	add	fp, sp, #8
   30624:	sub	sp, sp, #8
   30628:	mov	r4, r0
   3062c:	ldr	r0, [r0, #32]
   30630:	ldr	r2, [r0, #20]
   30634:	adds	r2, r2, r1
   30638:	cmpcc	r2, #1073741824	; 0x40000000
   3063c:	bcc	30660 <flatcc_builder_extend_offset_vector@@Base+0x44>
   30640:	ldr	r0, [pc, #184]	; 30700 <flatcc_builder_extend_offset_vector@@Base+0xe4>
   30644:	ldr	r1, [pc, #184]	; 30704 <flatcc_builder_extend_offset_vector@@Base+0xe8>
   30648:	ldr	r3, [pc, #184]	; 30708 <flatcc_builder_extend_offset_vector@@Base+0xec>
   3064c:	mov	r2, #892	; 0x37c
   30650:	add	r0, pc, r0
   30654:	add	r1, pc, r1
   30658:	add	r3, pc, r3
   3065c:	bl	14f38 <__assert_fail@plt>
   30660:	str	r2, [r0, #20]
   30664:	ldr	r5, [r4, #20]
   30668:	ldr	r0, [r4, #24]
   3066c:	add	r1, r5, r1, lsl #2
   30670:	cmp	r1, r0
   30674:	str	r1, [r4, #20]
   30678:	bcs	30684 <flatcc_builder_extend_offset_vector@@Base+0x68>
   3067c:	ldr	r0, [r4, #16]
   30680:	b	306f4 <flatcc_builder_extend_offset_vector@@Base+0xd8>
   30684:	ldr	r2, [r4, #28]
   30688:	ldr	r0, [r4, #40]	; 0x28
   3068c:	ldr	ip, [r4, #48]	; 0x30
   30690:	mov	r3, #1
   30694:	str	r3, [sp]
   30698:	mov	r3, #1
   3069c:	add	r1, r1, r2
   306a0:	add	r2, r1, #1
   306a4:	add	r1, r4, #60	; 0x3c
   306a8:	blx	ip
   306ac:	mov	r1, r0
   306b0:	mov	r0, #0
   306b4:	cmp	r1, #0
   306b8:	beq	306c4 <flatcc_builder_extend_offset_vector@@Base+0xa8>
   306bc:	sub	sp, fp, #8
   306c0:	pop	{r4, r5, fp, pc}
   306c4:	ldr	r1, [r4, #28]
   306c8:	ldr	r0, [r4, #60]	; 0x3c
   306cc:	ldr	r3, [r4, #64]	; 0x40
   306d0:	ldr	r2, [r4, #32]
   306d4:	add	r0, r0, r1
   306d8:	sub	r1, r3, r1
   306dc:	mvn	r3, #3
   306e0:	cmn	r1, #4
   306e4:	str	r0, [r4, #16]
   306e8:	movcs	r1, r3
   306ec:	str	r1, [r4, #24]
   306f0:	str	r3, [r2, #4]
   306f4:	add	r0, r0, r5
   306f8:	sub	sp, fp, #8
   306fc:	pop	{r4, r5, fp, pc}
   30700:	andeq	ip, r1, ip, lsl #2
   30704:	andeq	fp, r1, r2, asr #32
   30708:	andeq	ip, r1, pc, lsl r1

0003070c <flatcc_builder_offset_vector_push@@Base>:
   3070c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30710:	add	fp, sp, #24
   30714:	sub	sp, sp, #8
   30718:	mov	r6, r0
   3071c:	ldr	r0, [r0, #32]
   30720:	mov	r8, r1
   30724:	ldrh	r1, [r0, #14]
   30728:	cmp	r1, #5
   3072c:	bne	307e0 <flatcc_builder_offset_vector_push@@Base+0xd4>
   30730:	ldr	r1, [r0, #20]
   30734:	mov	r5, #0
   30738:	cmn	r1, #-1073741823	; 0xc0000001
   3073c:	beq	307d4 <flatcc_builder_offset_vector_push@@Base+0xc8>
   30740:	add	r1, r1, #1
   30744:	str	r1, [r0, #20]
   30748:	ldr	r7, [r6, #20]
   3074c:	ldr	r0, [r6, #24]
   30750:	add	r1, r7, #4
   30754:	cmp	r1, r0
   30758:	str	r1, [r6, #20]
   3075c:	bcs	30768 <flatcc_builder_offset_vector_push@@Base+0x5c>
   30760:	ldr	r0, [r6, #16]
   30764:	b	307c8 <flatcc_builder_offset_vector_push@@Base+0xbc>
   30768:	ldr	r1, [r6, #28]
   3076c:	ldr	r0, [r6, #40]	; 0x28
   30770:	ldr	r4, [r6, #48]	; 0x30
   30774:	mov	r2, #1
   30778:	mov	r3, #1
   3077c:	str	r2, [sp]
   30780:	add	r1, r7, r1
   30784:	add	r2, r1, #5
   30788:	add	r1, r6, #60	; 0x3c
   3078c:	blx	r4
   30790:	cmp	r0, #0
   30794:	bne	307d4 <flatcc_builder_offset_vector_push@@Base+0xc8>
   30798:	ldr	r1, [r6, #28]
   3079c:	ldr	r0, [r6, #60]	; 0x3c
   307a0:	ldr	r3, [r6, #64]	; 0x40
   307a4:	ldr	r2, [r6, #32]
   307a8:	add	r0, r0, r1
   307ac:	sub	r1, r3, r1
   307b0:	mvn	r3, #3
   307b4:	cmn	r1, #4
   307b8:	str	r0, [r6, #16]
   307bc:	movcs	r1, r3
   307c0:	str	r1, [r6, #24]
   307c4:	str	r3, [r2, #4]
   307c8:	adds	r0, r0, r7
   307cc:	movne	r5, r0
   307d0:	strne	r8, [r0]
   307d4:	mov	r0, r5
   307d8:	sub	sp, fp, #24
   307dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   307e0:	ldr	r0, [pc, #24]	; 30800 <flatcc_builder_offset_vector_push@@Base+0xf4>
   307e4:	ldr	r1, [pc, #24]	; 30804 <flatcc_builder_offset_vector_push@@Base+0xf8>
   307e8:	ldr	r3, [pc, #24]	; 30808 <flatcc_builder_offset_vector_push@@Base+0xfc>
   307ec:	movw	r2, #934	; 0x3a6
   307f0:	add	r0, pc, r0
   307f4:	add	r1, pc, r1
   307f8:	add	r3, pc, r3
   307fc:	bl	14f38 <__assert_fail@plt>
   30800:	ldrdeq	fp, [r1], -r9
   30804:	andeq	sl, r1, r2, lsr #29
   30808:	andeq	fp, r1, r4, lsl #6

0003080c <flatcc_builder_append_offset_vector@@Base>:
   3080c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30810:	add	fp, sp, #24
   30814:	sub	sp, sp, #8
   30818:	mov	r6, r0
   3081c:	ldr	r0, [r0, #32]
   30820:	mov	r8, r1
   30824:	ldrh	r1, [r0, #14]
   30828:	cmp	r1, #5
   3082c:	bne	3091c <flatcc_builder_append_offset_vector@@Base+0x110>
   30830:	ldr	r1, [r0, #20]
   30834:	mov	r5, r2
   30838:	adds	r1, r1, r2
   3083c:	cmpcc	r1, #1073741824	; 0x40000000
   30840:	bcc	30864 <flatcc_builder_append_offset_vector@@Base+0x58>
   30844:	ldr	r0, [pc, #252]	; 30948 <flatcc_builder_append_offset_vector@@Base+0x13c>
   30848:	ldr	r1, [pc, #252]	; 3094c <flatcc_builder_append_offset_vector@@Base+0x140>
   3084c:	ldr	r3, [pc, #252]	; 30950 <flatcc_builder_append_offset_vector@@Base+0x144>
   30850:	mov	r2, #892	; 0x37c
   30854:	add	r0, pc, r0
   30858:	add	r1, pc, r1
   3085c:	add	r3, pc, r3
   30860:	bl	14f38 <__assert_fail@plt>
   30864:	str	r1, [r0, #20]
   30868:	ldr	r4, [r6, #20]
   3086c:	ldr	r0, [r6, #24]
   30870:	add	r1, r4, r5, lsl #2
   30874:	cmp	r1, r0
   30878:	str	r1, [r6, #20]
   3087c:	bcs	308a0 <flatcc_builder_append_offset_vector@@Base+0x94>
   30880:	ldr	r0, [r6, #16]
   30884:	adds	r7, r0, r4
   30888:	beq	3090c <flatcc_builder_append_offset_vector@@Base+0x100>
   3088c:	lsl	r2, r5, #2
   30890:	mov	r0, r7
   30894:	mov	r1, r8
   30898:	bl	14e54 <memcpy@plt>
   3089c:	b	30910 <flatcc_builder_append_offset_vector@@Base+0x104>
   308a0:	ldr	r2, [r6, #28]
   308a4:	ldr	r0, [r6, #40]	; 0x28
   308a8:	ldr	r7, [r6, #48]	; 0x30
   308ac:	mov	r3, #1
   308b0:	str	r3, [sp]
   308b4:	mov	r3, #1
   308b8:	add	r1, r1, r2
   308bc:	add	r2, r1, #1
   308c0:	add	r1, r6, #60	; 0x3c
   308c4:	blx	r7
   308c8:	mov	r7, #0
   308cc:	cmp	r0, #0
   308d0:	bne	30910 <flatcc_builder_append_offset_vector@@Base+0x104>
   308d4:	ldr	r1, [r6, #28]
   308d8:	ldr	r0, [r6, #60]	; 0x3c
   308dc:	ldr	r3, [r6, #64]	; 0x40
   308e0:	ldr	r2, [r6, #32]
   308e4:	add	r0, r0, r1
   308e8:	sub	r1, r3, r1
   308ec:	mvn	r3, #3
   308f0:	cmn	r1, #4
   308f4:	str	r0, [r6, #16]
   308f8:	movcs	r1, r3
   308fc:	str	r1, [r6, #24]
   30900:	str	r3, [r2, #4]
   30904:	adds	r7, r0, r4
   30908:	bne	3088c <flatcc_builder_append_offset_vector@@Base+0x80>
   3090c:	mov	r7, #0
   30910:	mov	r0, r7
   30914:	sub	sp, fp, #24
   30918:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3091c:	ldr	r0, [pc, #24]	; 3093c <flatcc_builder_append_offset_vector@@Base+0x130>
   30920:	ldr	r1, [pc, #24]	; 30940 <flatcc_builder_append_offset_vector@@Base+0x134>
   30924:	ldr	r3, [pc, #24]	; 30944 <flatcc_builder_append_offset_vector@@Base+0x138>
   30928:	mov	r2, #948	; 0x3b4
   3092c:	add	r0, pc, r0
   30930:	add	r1, pc, r1
   30934:	add	r3, pc, r3
   30938:	bl	14f38 <__assert_fail@plt>
   3093c:	muleq	r1, sp, r1
   30940:	andeq	sl, r1, r6, ror #26
   30944:	andeq	fp, r1, sl, lsr #4
   30948:	andeq	fp, r1, r8, lsl #30
   3094c:	andeq	sl, r1, lr, lsr lr
   30950:	andeq	fp, r1, fp, lsl pc

00030954 <flatcc_builder_extend_string@@Base>:
   30954:	push	{r4, r5, fp, lr}
   30958:	add	fp, sp, #8
   3095c:	sub	sp, sp, #8
   30960:	mov	r4, r0
   30964:	ldr	r0, [r0, #32]
   30968:	ldrh	r2, [r0, #14]
   3096c:	cmp	r2, #6
   30970:	bne	30a20 <flatcc_builder_extend_string@@Base+0xcc>
   30974:	ldr	r2, [r0, #20]
   30978:	adds	r2, r2, r1
   3097c:	bcs	30a40 <flatcc_builder_extend_string@@Base+0xec>
   30980:	str	r2, [r0, #20]
   30984:	ldr	r5, [r4, #20]
   30988:	ldr	r0, [r4, #24]
   3098c:	add	r1, r5, r1
   30990:	cmp	r1, r0
   30994:	str	r1, [r4, #20]
   30998:	bcs	309a4 <flatcc_builder_extend_string@@Base+0x50>
   3099c:	ldr	r0, [r4, #16]
   309a0:	b	30a14 <flatcc_builder_extend_string@@Base+0xc0>
   309a4:	ldr	r2, [r4, #28]
   309a8:	ldr	r0, [r4, #40]	; 0x28
   309ac:	ldr	ip, [r4, #48]	; 0x30
   309b0:	mov	r3, #1
   309b4:	str	r3, [sp]
   309b8:	mov	r3, #1
   309bc:	add	r1, r1, r2
   309c0:	add	r2, r1, #1
   309c4:	add	r1, r4, #60	; 0x3c
   309c8:	blx	ip
   309cc:	mov	r1, r0
   309d0:	mov	r0, #0
   309d4:	cmp	r1, #0
   309d8:	beq	309e4 <flatcc_builder_extend_string@@Base+0x90>
   309dc:	sub	sp, fp, #8
   309e0:	pop	{r4, r5, fp, pc}
   309e4:	ldr	r1, [r4, #28]
   309e8:	ldr	r0, [r4, #60]	; 0x3c
   309ec:	ldr	r3, [r4, #64]	; 0x40
   309f0:	ldr	r2, [r4, #32]
   309f4:	add	r0, r0, r1
   309f8:	sub	r1, r3, r1
   309fc:	mvn	r3, #3
   30a00:	cmn	r1, #4
   30a04:	str	r0, [r4, #16]
   30a08:	movcs	r1, r3
   30a0c:	str	r1, [r4, #24]
   30a10:	str	r3, [r2, #4]
   30a14:	add	r0, r0, r5
   30a18:	sub	sp, fp, #8
   30a1c:	pop	{r4, r5, fp, pc}
   30a20:	ldr	r0, [pc, #56]	; 30a60 <flatcc_builder_extend_string@@Base+0x10c>
   30a24:	ldr	r1, [pc, #56]	; 30a64 <flatcc_builder_extend_string@@Base+0x110>
   30a28:	ldr	r3, [pc, #56]	; 30a68 <flatcc_builder_extend_string@@Base+0x114>
   30a2c:	movw	r2, #957	; 0x3bd
   30a30:	add	r0, pc, r0
   30a34:	add	r1, pc, r1
   30a38:	add	r3, pc, r3
   30a3c:	bl	14f38 <__assert_fail@plt>
   30a40:	ldr	r0, [pc, #36]	; 30a6c <flatcc_builder_extend_string@@Base+0x118>
   30a44:	ldr	r1, [pc, #36]	; 30a70 <flatcc_builder_extend_string@@Base+0x11c>
   30a48:	ldr	r3, [pc, #36]	; 30a74 <flatcc_builder_extend_string@@Base+0x120>
   30a4c:	mov	r2, #892	; 0x37c
   30a50:	add	r0, pc, r0
   30a54:	add	r1, pc, r1
   30a58:	add	r3, pc, r3
   30a5c:	bl	14f38 <__assert_fail@plt>
   30a60:	andeq	fp, r1, r2, lsr #3
   30a64:	andeq	sl, r1, r2, ror #24
   30a68:	andeq	fp, r1, r6, asr #3
   30a6c:	andeq	fp, r1, ip, lsl #26
   30a70:	andeq	sl, r1, r2, asr #24
   30a74:	andeq	fp, r1, pc, lsl sp

00030a78 <flatcc_builder_append_string@@Base>:
   30a78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30a7c:	add	fp, sp, #24
   30a80:	sub	sp, sp, #8
   30a84:	mov	r6, r0
   30a88:	ldr	r0, [r0, #32]
   30a8c:	mov	r8, r1
   30a90:	ldrh	r1, [r0, #14]
   30a94:	cmp	r1, #6
   30a98:	bne	30b64 <flatcc_builder_append_string@@Base+0xec>
   30a9c:	ldr	r1, [r0, #20]
   30aa0:	mov	r4, r2
   30aa4:	adds	r1, r1, r2
   30aa8:	bcs	30b84 <flatcc_builder_append_string@@Base+0x10c>
   30aac:	str	r1, [r0, #20]
   30ab0:	ldr	r5, [r6, #20]
   30ab4:	ldr	r0, [r6, #24]
   30ab8:	add	r1, r5, r4
   30abc:	cmp	r1, r0
   30ac0:	str	r1, [r6, #20]
   30ac4:	bcs	30ae8 <flatcc_builder_append_string@@Base+0x70>
   30ac8:	ldr	r0, [r6, #16]
   30acc:	adds	r7, r0, r5
   30ad0:	beq	30b54 <flatcc_builder_append_string@@Base+0xdc>
   30ad4:	mov	r0, r7
   30ad8:	mov	r1, r8
   30adc:	mov	r2, r4
   30ae0:	bl	14e54 <memcpy@plt>
   30ae4:	b	30b58 <flatcc_builder_append_string@@Base+0xe0>
   30ae8:	ldr	r2, [r6, #28]
   30aec:	ldr	r0, [r6, #40]	; 0x28
   30af0:	ldr	r7, [r6, #48]	; 0x30
   30af4:	mov	r3, #1
   30af8:	str	r3, [sp]
   30afc:	mov	r3, #1
   30b00:	add	r1, r1, r2
   30b04:	add	r2, r1, #1
   30b08:	add	r1, r6, #60	; 0x3c
   30b0c:	blx	r7
   30b10:	mov	r7, #0
   30b14:	cmp	r0, #0
   30b18:	bne	30b58 <flatcc_builder_append_string@@Base+0xe0>
   30b1c:	ldr	r1, [r6, #28]
   30b20:	ldr	r0, [r6, #60]	; 0x3c
   30b24:	ldr	r3, [r6, #64]	; 0x40
   30b28:	ldr	r2, [r6, #32]
   30b2c:	add	r0, r0, r1
   30b30:	sub	r1, r3, r1
   30b34:	mvn	r3, #3
   30b38:	cmn	r1, #4
   30b3c:	str	r0, [r6, #16]
   30b40:	movcs	r1, r3
   30b44:	str	r1, [r6, #24]
   30b48:	str	r3, [r2, #4]
   30b4c:	adds	r7, r0, r5
   30b50:	bne	30ad4 <flatcc_builder_append_string@@Base+0x5c>
   30b54:	mov	r7, #0
   30b58:	mov	r0, r7
   30b5c:	sub	sp, fp, #24
   30b60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30b64:	ldr	r0, [pc, #56]	; 30ba4 <flatcc_builder_append_string@@Base+0x12c>
   30b68:	ldr	r1, [pc, #56]	; 30ba8 <flatcc_builder_append_string@@Base+0x130>
   30b6c:	ldr	r3, [pc, #56]	; 30bac <flatcc_builder_append_string@@Base+0x134>
   30b70:	movw	r2, #966	; 0x3c6
   30b74:	add	r0, pc, r0
   30b78:	add	r1, pc, r1
   30b7c:	add	r3, pc, r3
   30b80:	bl	14f38 <__assert_fail@plt>
   30b84:	ldr	r0, [pc, #36]	; 30bb0 <flatcc_builder_append_string@@Base+0x138>
   30b88:	ldr	r1, [pc, #36]	; 30bb4 <flatcc_builder_append_string@@Base+0x13c>
   30b8c:	ldr	r3, [pc, #36]	; 30bb8 <flatcc_builder_append_string@@Base+0x140>
   30b90:	mov	r2, #892	; 0x37c
   30b94:	add	r0, pc, r0
   30b98:	add	r1, pc, r1
   30b9c:	add	r3, pc, r3
   30ba0:	bl	14f38 <__assert_fail@plt>
   30ba4:	andeq	fp, r1, lr, asr r0
   30ba8:	andeq	sl, r1, lr, lsl fp
   30bac:	andeq	fp, r1, r1, asr #1
   30bb0:	andeq	fp, r1, r8, asr #23
   30bb4:	strdeq	sl, [r1], -lr
   30bb8:	ldrdeq	fp, [r1], -fp	; <UNPREDICTABLE>

00030bbc <flatcc_builder_append_string_str@@Base>:
   30bbc:	push	{r4, r5, fp, lr}
   30bc0:	add	fp, sp, #8
   30bc4:	mov	r5, r0
   30bc8:	mov	r0, r1
   30bcc:	mov	r4, r1
   30bd0:	bl	14ec0 <strlen@plt>
   30bd4:	mov	r2, r0
   30bd8:	mov	r0, r5
   30bdc:	mov	r1, r4
   30be0:	pop	{r4, r5, fp, lr}
   30be4:	b	30a78 <flatcc_builder_append_string@@Base>

00030be8 <flatcc_builder_append_string_strn@@Base>:
   30be8:	push	{r4, r5, r6, sl, fp, lr}
   30bec:	add	fp, sp, #16
   30bf0:	mov	r6, r0
   30bf4:	mov	r5, r1
   30bf8:	mov	r0, r1
   30bfc:	mov	r1, #0
   30c00:	mov	r4, r2
   30c04:	bl	14f08 <memchr@plt>
   30c08:	cmp	r0, #0
   30c0c:	mov	r1, r5
   30c10:	subne	r4, r0, r5
   30c14:	mov	r0, r6
   30c18:	mov	r2, r4
   30c1c:	pop	{r4, r5, r6, sl, fp, lr}
   30c20:	b	30a78 <flatcc_builder_append_string@@Base>

00030c24 <flatcc_builder_truncate_vector@@Base>:
   30c24:	push	{fp, lr}
   30c28:	mov	fp, sp
   30c2c:	ldr	r2, [r0, #32]
   30c30:	ldrh	r3, [r2, #14]
   30c34:	cmp	r3, #4
   30c38:	bne	30c80 <flatcc_builder_truncate_vector@@Base+0x5c>
   30c3c:	ldr	r3, [r2, #20]
   30c40:	cmp	r3, r1
   30c44:	bcc	30ca0 <flatcc_builder_truncate_vector@@Base+0x7c>
   30c48:	sub	r3, r3, r1
   30c4c:	str	r3, [r2, #20]
   30c50:	ldr	r2, [r0, #32]
   30c54:	ldr	r3, [r0, #20]
   30c58:	ldr	ip, [r0, #16]
   30c5c:	ldr	r2, [r2, #16]
   30c60:	mls	r3, r2, r1, r3
   30c64:	mul	r2, r2, r1
   30c68:	mov	r1, #0
   30c6c:	str	r3, [r0, #20]
   30c70:	add	r0, ip, r3
   30c74:	bl	14ee4 <memset@plt>
   30c78:	mov	r0, #0
   30c7c:	pop	{fp, pc}
   30c80:	ldr	r0, [pc, #56]	; 30cc0 <flatcc_builder_truncate_vector@@Base+0x9c>
   30c84:	ldr	r1, [pc, #56]	; 30cc4 <flatcc_builder_truncate_vector@@Base+0xa0>
   30c88:	ldr	r3, [pc, #56]	; 30cc8 <flatcc_builder_truncate_vector@@Base+0xa4>
   30c8c:	movw	r2, #985	; 0x3d9
   30c90:	add	r0, pc, r0
   30c94:	add	r1, pc, r1
   30c98:	add	r3, pc, r3
   30c9c:	bl	14f38 <__assert_fail@plt>
   30ca0:	ldr	r0, [pc, #36]	; 30ccc <flatcc_builder_truncate_vector@@Base+0xa8>
   30ca4:	ldr	r1, [pc, #36]	; 30cd0 <flatcc_builder_truncate_vector@@Base+0xac>
   30ca8:	ldr	r3, [pc, #36]	; 30cd4 <flatcc_builder_truncate_vector@@Base+0xb0>
   30cac:	movw	r2, #986	; 0x3da
   30cb0:	add	r0, pc, r0
   30cb4:	add	r1, pc, r1
   30cb8:	add	r3, pc, r3
   30cbc:	bl	14f38 <__assert_fail@plt>
   30cc0:	andeq	sl, r1, r0, asr #26
   30cc4:	andeq	sl, r1, r2, lsl #20
   30cc8:	strdeq	sl, [r1], -r2
   30ccc:	andeq	fp, r1, r9, lsl r0
   30cd0:	andeq	sl, r1, r2, ror #19
   30cd4:	ldrdeq	sl, [r1], -r2

00030cd8 <flatcc_builder_truncate_offset_vector@@Base>:
   30cd8:	push	{fp, lr}
   30cdc:	mov	fp, sp
   30ce0:	ldr	r2, [r0, #32]
   30ce4:	ldrh	r3, [r2, #14]
   30ce8:	cmp	r3, #5
   30cec:	bne	30d34 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   30cf0:	ldr	r3, [r2, #20]
   30cf4:	cmp	r3, r1
   30cf8:	bcc	30d54 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   30cfc:	sub	r3, r3, r1
   30d00:	str	r3, [r2, #20]
   30d04:	ldr	r2, [r0, #32]
   30d08:	ldr	r3, [r0, #20]
   30d0c:	ldr	ip, [r0, #16]
   30d10:	ldr	r2, [r2, #16]
   30d14:	mls	r3, r2, r1, r3
   30d18:	mul	r2, r2, r1
   30d1c:	mov	r1, #0
   30d20:	str	r3, [r0, #20]
   30d24:	add	r0, ip, r3
   30d28:	bl	14ee4 <memset@plt>
   30d2c:	mov	r0, #0
   30d30:	pop	{fp, pc}
   30d34:	ldr	r0, [pc, #56]	; 30d74 <flatcc_builder_truncate_offset_vector@@Base+0x9c>
   30d38:	ldr	r1, [pc, #56]	; 30d78 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   30d3c:	ldr	r3, [pc, #56]	; 30d7c <flatcc_builder_truncate_offset_vector@@Base+0xa4>
   30d40:	movw	r2, #994	; 0x3e2
   30d44:	add	r0, pc, r0
   30d48:	add	r1, pc, r1
   30d4c:	add	r3, pc, r3
   30d50:	bl	14f38 <__assert_fail@plt>
   30d54:	ldr	r0, [pc, #36]	; 30d80 <flatcc_builder_truncate_offset_vector@@Base+0xa8>
   30d58:	ldr	r1, [pc, #36]	; 30d84 <flatcc_builder_truncate_offset_vector@@Base+0xac>
   30d5c:	ldr	r3, [pc, #36]	; 30d88 <flatcc_builder_truncate_offset_vector@@Base+0xb0>
   30d60:	movw	r2, #995	; 0x3e3
   30d64:	add	r0, pc, r0
   30d68:	add	r1, pc, r1
   30d6c:	add	r3, pc, r3
   30d70:	bl	14f38 <__assert_fail@plt>
   30d74:	andeq	sl, r1, r5, lsl #27
   30d78:	andeq	sl, r1, lr, asr #18
   30d7c:	andeq	sl, r1, r1, lsr #31
   30d80:	andeq	sl, r1, pc, asr #31
   30d84:	andeq	sl, r1, lr, lsr #18
   30d88:	andeq	sl, r1, r1, lsl #31

00030d8c <flatcc_builder_truncate_string@@Base>:
   30d8c:	push	{fp, lr}
   30d90:	mov	fp, sp
   30d94:	mov	r2, r1
   30d98:	ldr	r1, [r0, #32]
   30d9c:	ldrh	r3, [r1, #14]
   30da0:	cmp	r3, #6
   30da4:	bne	30de0 <flatcc_builder_truncate_string@@Base+0x54>
   30da8:	ldr	r3, [r1, #20]
   30dac:	cmp	r3, r2
   30db0:	bcc	30e00 <flatcc_builder_truncate_string@@Base+0x74>
   30db4:	sub	r3, r3, r2
   30db8:	str	r3, [r1, #20]
   30dbc:	ldr	r3, [r0, #20]
   30dc0:	ldr	r1, [r0, #16]
   30dc4:	sub	r3, r3, r2
   30dc8:	str	r3, [r0, #20]
   30dcc:	add	r0, r1, r3
   30dd0:	mov	r1, #0
   30dd4:	bl	14ee4 <memset@plt>
   30dd8:	mov	r0, #0
   30ddc:	pop	{fp, pc}
   30de0:	ldr	r0, [pc, #56]	; 30e20 <flatcc_builder_truncate_string@@Base+0x94>
   30de4:	ldr	r1, [pc, #56]	; 30e24 <flatcc_builder_truncate_string@@Base+0x98>
   30de8:	ldr	r3, [pc, #56]	; 30e28 <flatcc_builder_truncate_string@@Base+0x9c>
   30dec:	movw	r2, #1003	; 0x3eb
   30df0:	add	r0, pc, r0
   30df4:	add	r1, pc, r1
   30df8:	add	r3, pc, r3
   30dfc:	bl	14f38 <__assert_fail@plt>
   30e00:	ldr	r0, [pc, #36]	; 30e2c <flatcc_builder_truncate_string@@Base+0xa0>
   30e04:	ldr	r1, [pc, #36]	; 30e30 <flatcc_builder_truncate_string@@Base+0xa4>
   30e08:	ldr	r3, [pc, #36]	; 30e34 <flatcc_builder_truncate_string@@Base+0xa8>
   30e0c:	mov	r2, #1004	; 0x3ec
   30e10:	add	r0, pc, r0
   30e14:	add	r1, pc, r1
   30e18:	add	r3, pc, r3
   30e1c:	bl	14f38 <__assert_fail@plt>
   30e20:	andeq	sl, r1, r2, ror #27
   30e24:	andeq	sl, r1, r2, lsr #17
   30e28:	andeq	sl, r1, r6, ror pc
   30e2c:	muleq	r1, sp, pc	; <UNPREDICTABLE>
   30e30:	andeq	sl, r1, r2, lsl #17
   30e34:	andeq	sl, r1, r6, asr pc

00030e38 <flatcc_builder_start_vector@@Base>:
   30e38:	push	{r4, r5, r6, r7, fp, lr}
   30e3c:	add	fp, sp, #16
   30e40:	mov	r7, #4
   30e44:	cmp	r2, #4
   30e48:	mov	r6, r1
   30e4c:	mov	r5, r3
   30e50:	mov	r4, r0
   30e54:	movls	r2, r7
   30e58:	mov	r1, r2
   30e5c:	bl	2fe2c <flatcc_builder_start_buffer@@Base+0xc0>
   30e60:	mov	r1, r0
   30e64:	mvn	r0, #0
   30e68:	cmp	r1, #0
   30e6c:	popne	{r4, r5, r6, r7, fp, pc}
   30e70:	ldr	r0, [r4, #32]
   30e74:	str	r6, [r0, #16]
   30e78:	mov	r0, #0
   30e7c:	ldr	r1, [r4, #32]
   30e80:	str	r0, [r1, #20]
   30e84:	ldr	r1, [r4, #32]
   30e88:	str	r5, [r1, #24]
   30e8c:	ldr	r1, [r4, #32]
   30e90:	strh	r7, [r1, #14]
   30e94:	ldr	r2, [r4, #28]
   30e98:	ldr	r3, [r4, #60]	; 0x3c
   30e9c:	ldr	r7, [r4, #64]	; 0x40
   30ea0:	add	r3, r3, r2
   30ea4:	sub	r2, r7, r2
   30ea8:	str	r3, [r4, #16]
   30eac:	mvn	r3, #3
   30eb0:	cmn	r2, #4
   30eb4:	movcs	r2, r3
   30eb8:	str	r2, [r4, #24]
   30ebc:	str	r3, [r1, #4]
   30ec0:	pop	{r4, r5, r6, r7, fp, pc}

00030ec4 <flatcc_builder_start_offset_vector@@Base>:
   30ec4:	push	{r4, r5, fp, lr}
   30ec8:	add	fp, sp, #8
   30ecc:	mov	r1, #4
   30ed0:	mov	r4, r0
   30ed4:	mov	r5, #4
   30ed8:	bl	2fe2c <flatcc_builder_start_buffer@@Base+0xc0>
   30edc:	mov	r1, r0
   30ee0:	mvn	r0, #0
   30ee4:	cmp	r1, #0
   30ee8:	popne	{r4, r5, fp, pc}
   30eec:	ldr	r0, [r4, #32]
   30ef0:	mov	r2, #5
   30ef4:	str	r5, [r0, #16]
   30ef8:	mov	r0, #0
   30efc:	ldr	r1, [r4, #32]
   30f00:	str	r0, [r1, #20]
   30f04:	ldr	r1, [r4, #32]
   30f08:	strh	r2, [r1, #14]
   30f0c:	ldr	r2, [r4, #28]
   30f10:	ldr	r3, [r4, #60]	; 0x3c
   30f14:	ldr	r5, [r4, #64]	; 0x40
   30f18:	add	r3, r3, r2
   30f1c:	sub	r2, r5, r2
   30f20:	str	r3, [r4, #16]
   30f24:	mvn	r3, #3
   30f28:	cmn	r2, #4
   30f2c:	movcs	r2, r3
   30f30:	str	r2, [r4, #24]
   30f34:	str	r3, [r1, #4]
   30f38:	pop	{r4, r5, fp, pc}

00030f3c <flatcc_builder_create_offset_vector@@Base>:
   30f3c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30f40:	add	fp, sp, #24
   30f44:	sub	sp, sp, #8
   30f48:	mov	r8, r1
   30f4c:	mov	r1, #4
   30f50:	mov	r6, r2
   30f54:	mov	r4, r0
   30f58:	mov	r7, #4
   30f5c:	bl	2fe2c <flatcc_builder_start_buffer@@Base+0xc0>
   30f60:	cmp	r0, #0
   30f64:	beq	30f74 <flatcc_builder_create_offset_vector@@Base+0x38>
   30f68:	mov	r0, #0
   30f6c:	sub	sp, fp, #24
   30f70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30f74:	ldr	r0, [r4, #32]
   30f78:	mov	r1, #0
   30f7c:	str	r7, [r0, #16]
   30f80:	ldr	r0, [r4, #32]
   30f84:	str	r1, [r0, #20]
   30f88:	mov	r1, #5
   30f8c:	ldr	r0, [r4, #32]
   30f90:	strh	r1, [r0, #14]
   30f94:	ldr	r1, [r4, #28]
   30f98:	ldr	r2, [r4, #60]	; 0x3c
   30f9c:	ldr	r3, [r4, #64]	; 0x40
   30fa0:	add	r2, r2, r1
   30fa4:	sub	r1, r3, r1
   30fa8:	str	r2, [r4, #16]
   30fac:	mvn	r2, #3
   30fb0:	cmn	r1, #4
   30fb4:	movcs	r1, r2
   30fb8:	str	r1, [r4, #24]
   30fbc:	str	r2, [r0, #4]
   30fc0:	ldr	r1, [r0, #20]
   30fc4:	adds	r1, r1, r6
   30fc8:	cmpcc	r1, #1073741824	; 0x40000000
   30fcc:	bcc	30ff0 <flatcc_builder_create_offset_vector@@Base+0xb4>
   30fd0:	ldr	r0, [pc, #200]	; 310a0 <flatcc_builder_create_offset_vector@@Base+0x164>
   30fd4:	ldr	r1, [pc, #200]	; 310a4 <flatcc_builder_create_offset_vector@@Base+0x168>
   30fd8:	ldr	r3, [pc, #200]	; 310a8 <flatcc_builder_create_offset_vector@@Base+0x16c>
   30fdc:	mov	r2, #892	; 0x37c
   30fe0:	add	r0, pc, r0
   30fe4:	add	r1, pc, r1
   30fe8:	add	r3, pc, r3
   30fec:	bl	14f38 <__assert_fail@plt>
   30ff0:	str	r1, [r0, #20]
   30ff4:	ldr	r7, [r4, #20]
   30ff8:	ldr	r0, [r4, #24]
   30ffc:	add	r1, r7, r6, lsl #2
   31000:	cmp	r1, r0
   31004:	str	r1, [r4, #20]
   31008:	bcs	3101c <flatcc_builder_create_offset_vector@@Base+0xe0>
   3100c:	ldr	r0, [r4, #16]
   31010:	adds	r0, r0, r7
   31014:	bne	31084 <flatcc_builder_create_offset_vector@@Base+0x148>
   31018:	b	30f68 <flatcc_builder_create_offset_vector@@Base+0x2c>
   3101c:	ldr	r2, [r4, #28]
   31020:	ldr	r0, [r4, #40]	; 0x28
   31024:	ldr	r5, [r4, #48]	; 0x30
   31028:	mov	r3, #1
   3102c:	str	r3, [sp]
   31030:	mov	r3, #1
   31034:	add	r1, r1, r2
   31038:	add	r2, r1, #1
   3103c:	add	r1, r4, #60	; 0x3c
   31040:	blx	r5
   31044:	cmp	r0, #0
   31048:	bne	30f68 <flatcc_builder_create_offset_vector@@Base+0x2c>
   3104c:	ldr	r1, [r4, #28]
   31050:	ldr	r0, [r4, #60]	; 0x3c
   31054:	ldr	r3, [r4, #64]	; 0x40
   31058:	ldr	r2, [r4, #32]
   3105c:	add	r0, r0, r1
   31060:	sub	r1, r3, r1
   31064:	mvn	r3, #3
   31068:	cmn	r1, #4
   3106c:	str	r0, [r4, #16]
   31070:	movcs	r1, r3
   31074:	str	r1, [r4, #24]
   31078:	str	r3, [r2, #4]
   3107c:	adds	r0, r0, r7
   31080:	beq	30f68 <flatcc_builder_create_offset_vector@@Base+0x2c>
   31084:	lsl	r2, r6, #2
   31088:	mov	r1, r8
   3108c:	bl	14e54 <memcpy@plt>
   31090:	mov	r0, r4
   31094:	sub	sp, fp, #24
   31098:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3109c:	b	310ac <flatcc_builder_end_offset_vector@@Base>
   310a0:	andeq	fp, r1, ip, ror r7
   310a4:			; <UNDEFINED> instruction: 0x0001a6b2
   310a8:	andeq	fp, r1, pc, lsl #15

000310ac <flatcc_builder_end_offset_vector@@Base>:
   310ac:	push	{r4, r5, fp, lr}
   310b0:	add	fp, sp, #8
   310b4:	mov	r4, r0
   310b8:	ldr	r0, [r0, #32]
   310bc:	ldrh	r1, [r0, #14]
   310c0:	cmp	r1, #5
   310c4:	bne	31164 <flatcc_builder_end_offset_vector@@Base+0xb8>
   310c8:	ldr	r2, [r0, #20]
   310cc:	ldr	r1, [r4, #16]
   310d0:	mov	r0, r4
   310d4:	mov	r3, #0
   310d8:	bl	321c8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   310dc:	mov	r5, r0
   310e0:	cmp	r0, #0
   310e4:	beq	3115c <flatcc_builder_end_offset_vector@@Base+0xb0>
   310e8:	ldr	r0, [r4, #16]
   310ec:	ldr	r2, [r4, #20]
   310f0:	mov	r1, #0
   310f4:	bl	14ee4 <memset@plt>
   310f8:	ldr	r0, [r4, #32]
   310fc:	ldr	r1, [r4, #60]	; 0x3c
   31100:	ldr	ip, [r4, #64]	; 0x40
   31104:	ldr	r3, [r0, #8]
   31108:	str	r3, [r4, #20]
   3110c:	ldr	r3, [r0]
   31110:	str	r3, [r4, #28]
   31114:	add	r1, r1, r3
   31118:	ldr	r2, [r0, #4]
   3111c:	str	r1, [r4, #16]
   31120:	sub	r1, ip, r3
   31124:	cmp	r1, r2
   31128:	movhi	r1, r2
   3112c:	str	r1, [r4, #24]
   31130:	ldrh	r1, [r4, #130]	; 0x82
   31134:	ldrh	r2, [r4, #128]	; 0x80
   31138:	cmp	r2, r1
   3113c:	strhcc	r1, [r4, #128]	; 0x80
   31140:	ldrh	r1, [r0, #12]
   31144:	sub	r0, r0, #36	; 0x24
   31148:	str	r0, [r4, #32]
   3114c:	strh	r1, [r4, #130]	; 0x82
   31150:	ldr	r0, [r4, #156]	; 0x9c
   31154:	sub	r0, r0, #1
   31158:	str	r0, [r4, #156]	; 0x9c
   3115c:	mov	r0, r5
   31160:	pop	{r4, r5, fp, pc}
   31164:	ldr	r0, [pc, #24]	; 31184 <flatcc_builder_end_offset_vector@@Base+0xd8>
   31168:	ldr	r1, [pc, #24]	; 31188 <flatcc_builder_end_offset_vector@@Base+0xdc>
   3116c:	ldr	r3, [pc, #24]	; 3118c <flatcc_builder_end_offset_vector@@Base+0xe0>
   31170:	movw	r2, #1480	; 0x5c8
   31174:	add	r0, pc, r0
   31178:	add	r1, pc, r1
   3117c:	add	r3, pc, r3
   31180:	bl	14f38 <__assert_fail@plt>
   31184:	andeq	sl, r1, r5, asr r9
   31188:	andeq	sl, r1, lr, lsl r5
   3118c:	andeq	sl, r1, ip, ror pc

00031190 <flatcc_builder_start_string@@Base>:
   31190:	push	{r4, r5, fp, lr}
   31194:	add	fp, sp, #8
   31198:	mov	r1, #1
   3119c:	mov	r4, r0
   311a0:	mov	r5, #1
   311a4:	bl	2fe2c <flatcc_builder_start_buffer@@Base+0xc0>
   311a8:	mov	r1, r0
   311ac:	mvn	r0, #0
   311b0:	cmp	r1, #0
   311b4:	popne	{r4, r5, fp, pc}
   311b8:	ldr	r0, [r4, #32]
   311bc:	mov	r2, #6
   311c0:	str	r5, [r0, #16]
   311c4:	mov	r0, #0
   311c8:	ldr	r1, [r4, #32]
   311cc:	str	r0, [r1, #20]
   311d0:	ldr	r1, [r4, #32]
   311d4:	strh	r2, [r1, #14]
   311d8:	ldr	r2, [r4, #28]
   311dc:	ldr	r3, [r4, #60]	; 0x3c
   311e0:	ldr	r5, [r4, #64]	; 0x40
   311e4:	add	r3, r3, r2
   311e8:	sub	r2, r5, r2
   311ec:	str	r3, [r4, #16]
   311f0:	mvn	r3, #3
   311f4:	cmn	r2, #4
   311f8:	movcs	r2, r3
   311fc:	str	r2, [r4, #24]
   31200:	str	r3, [r1, #4]
   31204:	pop	{r4, r5, fp, pc}

00031208 <flatcc_builder_reserve_table@@Base>:
   31208:	push	{r4, r5, r6, sl, fp, lr}
   3120c:	add	fp, sp, #16
   31210:	sub	sp, sp, #8
   31214:	cmn	r1, #1
   31218:	ble	312f0 <flatcc_builder_reserve_table@@Base+0xe8>
   3121c:	mov	r4, r0
   31220:	ldr	r0, [r0, #32]
   31224:	mov	r5, r1
   31228:	ldr	r1, [r4, #56]	; 0x38
   3122c:	ldrh	r2, [r0, #28]
   31230:	ldr	r0, [r0, #16]
   31234:	add	r6, r0, r2, lsl #1
   31238:	add	r0, r6, r5, lsl #1
   3123c:	add	r2, r0, #4
   31240:	cmp	r2, r1
   31244:	bls	3126c <flatcc_builder_reserve_table@@Base+0x64>
   31248:	ldr	r0, [r4, #40]	; 0x28
   3124c:	ldr	ip, [r4, #48]	; 0x30
   31250:	mov	r3, #0
   31254:	add	r1, r4, #52	; 0x34
   31258:	str	r3, [sp]
   3125c:	mov	r3, #1
   31260:	blx	ip
   31264:	cmp	r0, #0
   31268:	bne	31310 <flatcc_builder_reserve_table@@Base+0x108>
   3126c:	ldr	r0, [r4, #52]	; 0x34
   31270:	adds	r0, r0, r6
   31274:	str	r0, [r4, #4]
   31278:	beq	312e4 <flatcc_builder_reserve_table@@Base+0xdc>
   3127c:	add	r0, r0, #4
   31280:	lsl	r1, r5, #1
   31284:	str	r0, [r4, #4]
   31288:	ldr	r0, [r4, #32]
   3128c:	ldr	r3, [r4, #80]	; 0x50
   31290:	ldr	r5, [r0, #20]
   31294:	orr	r0, r1, #1
   31298:	add	r2, r5, r0
   3129c:	cmp	r2, r3
   312a0:	bls	312c8 <flatcc_builder_reserve_table@@Base+0xc0>
   312a4:	ldr	r0, [r4, #40]	; 0x28
   312a8:	ldr	r6, [r4, #48]	; 0x30
   312ac:	mov	r3, #3
   312b0:	add	r1, r4, #76	; 0x4c
   312b4:	str	r3, [sp]
   312b8:	mov	r3, #0
   312bc:	blx	r6
   312c0:	cmp	r0, #0
   312c4:	bne	31310 <flatcc_builder_reserve_table@@Base+0x108>
   312c8:	ldr	r0, [r4, #76]	; 0x4c
   312cc:	adds	r0, r0, r5
   312d0:	str	r0, [r4]
   312d4:	mov	r0, #0
   312d8:	mvneq	r0, #0
   312dc:	sub	sp, fp, #16
   312e0:	pop	{r4, r5, r6, sl, fp, pc}
   312e4:	mvn	r0, #0
   312e8:	sub	sp, fp, #16
   312ec:	pop	{r4, r5, r6, sl, fp, pc}
   312f0:	ldr	r0, [pc, #56]	; 31330 <flatcc_builder_reserve_table@@Base+0x128>
   312f4:	ldr	r1, [pc, #56]	; 31334 <flatcc_builder_reserve_table@@Base+0x12c>
   312f8:	ldr	r3, [pc, #56]	; 31338 <flatcc_builder_reserve_table@@Base+0x130>
   312fc:	movw	r2, #1065	; 0x429
   31300:	add	r0, pc, r0
   31304:	add	r1, pc, r1
   31308:	add	r3, pc, r3
   3130c:	bl	14f38 <__assert_fail@plt>
   31310:	ldr	r0, [pc, #36]	; 3133c <flatcc_builder_reserve_table@@Base+0x134>
   31314:	ldr	r1, [pc, #36]	; 31340 <flatcc_builder_reserve_table@@Base+0x138>
   31318:	ldr	r3, [pc, #36]	; 31344 <flatcc_builder_reserve_table@@Base+0x13c>
   3131c:	mov	r2, #308	; 0x134
   31320:	add	r0, pc, r0
   31324:	add	r1, pc, r1
   31328:	add	r3, pc, r3
   3132c:	bl	14f38 <__assert_fail@plt>
   31330:	andeq	sl, r1, r0, lsl fp
   31334:	muleq	r1, r2, r3
   31338:	andeq	sl, r1, r7, asr #21
   3133c:	andeq	fp, r1, r3, lsr r5
   31340:	andeq	sl, r1, r2, ror r3
   31344:	andeq	fp, r1, r5, ror #6

00031348 <flatcc_builder_start_table@@Base>:
   31348:	push	{r4, r5, r6, r7, fp, lr}
   3134c:	add	fp, sp, #16
   31350:	sub	sp, sp, #8
   31354:	mov	r6, r1
   31358:	mov	r1, #4
   3135c:	mov	r4, r0
   31360:	bl	2fe2c <flatcc_builder_start_buffer@@Base+0xc0>
   31364:	mvn	r5, #0
   31368:	cmp	r0, #0
   3136c:	beq	3137c <flatcc_builder_start_table@@Base+0x34>
   31370:	mov	r0, r5
   31374:	sub	sp, fp, #16
   31378:	pop	{r4, r5, r6, r7, fp, pc}
   3137c:	mov	r1, r4
   31380:	ldr	r2, [r4, #4]
   31384:	ldr	r3, [r4, #32]
   31388:	ldr	r0, [r1, #52]!	; 0x34
   3138c:	sub	r0, r2, r0
   31390:	str	r0, [r3, #16]
   31394:	ldr	r0, [r4]
   31398:	ldr	r3, [r4, #76]	; 0x4c
   3139c:	ldr	r2, [r4, #32]
   313a0:	sub	r0, r0, r3
   313a4:	mov	r3, #0
   313a8:	str	r0, [r2, #20]
   313ac:	ldr	r0, [r4, #12]
   313b0:	ldr	r2, [r4, #32]
   313b4:	str	r0, [r2, #24]
   313b8:	ldr	r0, [r4, #32]
   313bc:	ldrh	r2, [r4, #8]
   313c0:	strh	r2, [r0, #28]
   313c4:	movw	r0, #15186	; 0x3b52
   313c8:	strh	r3, [r4, #8]
   313cc:	mov	r2, #3
   313d0:	movt	r0, #12137	; 0x2f69
   313d4:	str	r0, [r4, #12]
   313d8:	ldr	r0, [r4, #32]
   313dc:	strh	r2, [r0, #14]
   313e0:	ldrh	r2, [r0, #28]
   313e4:	ldr	r0, [r0, #16]
   313e8:	add	r7, r0, r2, lsl #1
   313ec:	add	r0, r7, r6, lsl #1
   313f0:	add	r2, r0, #4
   313f4:	ldr	r0, [r4, #56]	; 0x38
   313f8:	cmp	r2, r0
   313fc:	bls	3141c <flatcc_builder_start_table@@Base+0xd4>
   31400:	ldr	r0, [r4, #40]	; 0x28
   31404:	ldr	ip, [r4, #48]	; 0x30
   31408:	str	r3, [sp]
   3140c:	mov	r3, #1
   31410:	blx	ip
   31414:	cmp	r0, #0
   31418:	bne	314c0 <flatcc_builder_start_table@@Base+0x178>
   3141c:	ldr	r0, [r4, #52]	; 0x34
   31420:	adds	r0, r0, r7
   31424:	str	r0, [r4, #4]
   31428:	beq	31370 <flatcc_builder_start_table@@Base+0x28>
   3142c:	add	r0, r0, #4
   31430:	lsl	r1, r6, #1
   31434:	str	r0, [r4, #4]
   31438:	ldr	r0, [r4, #32]
   3143c:	ldr	r3, [r4, #80]	; 0x50
   31440:	ldr	r6, [r0, #20]
   31444:	orr	r0, r1, #1
   31448:	add	r2, r6, r0
   3144c:	cmp	r2, r3
   31450:	bls	31478 <flatcc_builder_start_table@@Base+0x130>
   31454:	ldr	r0, [r4, #40]	; 0x28
   31458:	ldr	r7, [r4, #48]	; 0x30
   3145c:	mov	r3, #3
   31460:	add	r1, r4, #76	; 0x4c
   31464:	str	r3, [sp]
   31468:	mov	r3, #0
   3146c:	blx	r7
   31470:	cmp	r0, #0
   31474:	bne	314c0 <flatcc_builder_start_table@@Base+0x178>
   31478:	ldr	r0, [r4, #76]	; 0x4c
   3147c:	adds	r0, r0, r6
   31480:	str	r0, [r4]
   31484:	beq	31370 <flatcc_builder_start_table@@Base+0x28>
   31488:	ldr	r0, [r4, #28]
   3148c:	ldr	r2, [r4, #60]	; 0x3c
   31490:	ldr	r3, [r4, #64]	; 0x40
   31494:	ldr	r1, [r4, #32]
   31498:	mov	r5, #0
   3149c:	add	r2, r2, r0
   314a0:	sub	r0, r3, r0
   314a4:	str	r2, [r4, #16]
   314a8:	movw	r2, #65532	; 0xfffc
   314ac:	cmp	r0, r2
   314b0:	movcs	r0, r2
   314b4:	str	r0, [r4, #24]
   314b8:	str	r2, [r1, #4]
   314bc:	b	31370 <flatcc_builder_start_table@@Base+0x28>
   314c0:	ldr	r0, [pc, #24]	; 314e0 <flatcc_builder_start_table@@Base+0x198>
   314c4:	ldr	r1, [pc, #24]	; 314e4 <flatcc_builder_start_table@@Base+0x19c>
   314c8:	ldr	r3, [pc, #24]	; 314e8 <flatcc_builder_start_table@@Base+0x1a0>
   314cc:	mov	r2, #308	; 0x134
   314d0:	add	r0, pc, r0
   314d4:	add	r1, pc, r1
   314d8:	add	r3, pc, r3
   314dc:	bl	14f38 <__assert_fail@plt>
   314e0:	andeq	fp, r1, r3, lsl #7
   314e4:	andeq	sl, r1, r2, asr #3
   314e8:			; <UNDEFINED> instruction: 0x0001b1b5

000314ec <flatcc_builder_create_vtable@@Base>:
   314ec:	push	{r4, r5, fp, lr}
   314f0:	add	fp, sp, #8
   314f4:	sub	sp, sp, #80	; 0x50
   314f8:	mov	r3, r2
   314fc:	mov	r2, #0
   31500:	mov	r4, r0
   31504:	cmp	r3, #0
   31508:	str	r2, [sp, #12]
   3150c:	str	r2, [sp, #8]
   31510:	movne	r2, #1
   31514:	strne	r3, [sp, #20]
   31518:	strne	r1, [sp, #16]
   3151c:	strne	r3, [sp, #8]
   31520:	strne	r2, [sp, #12]
   31524:	ldr	r0, [r4, #152]	; 0x98
   31528:	cmp	r0, #0
   3152c:	bne	3153c <flatcc_builder_create_vtable@@Base+0x50>
   31530:	ldr	r0, [r4, #180]	; 0xb4
   31534:	cmp	r0, #0
   31538:	beq	31598 <flatcc_builder_create_vtable@@Base+0xac>
   3153c:	cmp	r3, #0
   31540:	beq	315dc <flatcc_builder_create_vtable@@Base+0xf0>
   31544:	ldr	r0, [r4, #136]	; 0x88
   31548:	ldr	ip, [r4, #44]	; 0x2c
   3154c:	add	r1, sp, #8
   31550:	add	r1, r1, #8
   31554:	sub	r5, r0, r3
   31558:	ldr	r0, [r4, #36]	; 0x24
   3155c:	str	r3, [sp]
   31560:	mov	r3, r5
   31564:	blx	ip
   31568:	cmp	r0, #0
   3156c:	bne	315fc <flatcc_builder_create_vtable@@Base+0x110>
   31570:	cmp	r5, #0
   31574:	str	r5, [r4, #136]	; 0x88
   31578:	beq	3158c <flatcc_builder_create_vtable@@Base+0xa0>
   3157c:	add	r1, r5, #1
   31580:	mov	r0, r1
   31584:	sub	sp, fp, #8
   31588:	pop	{r4, r5, fp, pc}
   3158c:	mov	r0, #0
   31590:	sub	sp, fp, #8
   31594:	pop	{r4, r5, fp, pc}
   31598:	ldr	r5, [r4, #140]	; 0x8c
   3159c:	ldr	r0, [r4, #36]	; 0x24
   315a0:	ldr	ip, [r4, #44]	; 0x2c
   315a4:	add	r1, r5, r3
   315a8:	str	r1, [r4, #140]	; 0x8c
   315ac:	add	r1, sp, #8
   315b0:	str	r3, [sp]
   315b4:	mov	r3, r5
   315b8:	add	r1, r1, #8
   315bc:	blx	ip
   315c0:	cmp	r0, #0
   315c4:	bne	3161c <flatcc_builder_create_vtable@@Base+0x130>
   315c8:	adds	r1, r5, #1
   315cc:	mov	r0, #0
   315d0:	movcc	r0, r1
   315d4:	sub	sp, fp, #8
   315d8:	pop	{r4, r5, fp, pc}
   315dc:	ldr	r0, [pc, #100]	; 31648 <flatcc_builder_create_vtable@@Base+0x15c>
   315e0:	ldr	r1, [pc, #100]	; 3164c <flatcc_builder_create_vtable@@Base+0x160>
   315e4:	ldr	r3, [pc, #100]	; 31650 <flatcc_builder_create_vtable@@Base+0x164>
   315e8:	movw	r2, #647	; 0x287
   315ec:	add	r0, pc, r0
   315f0:	add	r1, pc, r1
   315f4:	add	r3, pc, r3
   315f8:	bl	14f38 <__assert_fail@plt>
   315fc:	ldr	r0, [pc, #80]	; 31654 <flatcc_builder_create_vtable@@Base+0x168>
   31600:	ldr	r1, [pc, #80]	; 31658 <flatcc_builder_create_vtable@@Base+0x16c>
   31604:	ldr	r3, [pc, #80]	; 3165c <flatcc_builder_create_vtable@@Base+0x170>
   31608:	movw	r2, #651	; 0x28b
   3160c:	add	r0, pc, r0
   31610:	add	r1, pc, r1
   31614:	add	r3, pc, r3
   31618:	bl	14f38 <__assert_fail@plt>
   3161c:	ldr	r0, [pc, #24]	; 3163c <flatcc_builder_create_vtable@@Base+0x150>
   31620:	ldr	r1, [pc, #24]	; 31640 <flatcc_builder_create_vtable@@Base+0x154>
   31624:	ldr	r3, [pc, #24]	; 31644 <flatcc_builder_create_vtable@@Base+0x158>
   31628:	movw	r2, #677	; 0x2a5
   3162c:	add	r0, pc, r0
   31630:	add	r1, pc, r1
   31634:	add	r3, pc, r3
   31638:	bl	14f38 <__assert_fail@plt>
   3163c:	andeq	fp, r1, r7, lsr #4
   31640:	andeq	sl, r1, r6, rrx
   31644:	muleq	r1, sl, r1
   31648:	andeq	fp, r1, r7, ror #4
   3164c:	andeq	sl, r1, r6, lsr #1
   31650:	andeq	fp, r1, lr, lsl r1
   31654:	andeq	fp, r1, r7, asr #4
   31658:	andeq	sl, r1, r6, lsl #1
   3165c:	strdeq	fp, [r1], -lr

00031660 <flatcc_builder_create_cached_vtable@@Base>:
   31660:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31664:	add	fp, sp, #28
   31668:	sub	sp, sp, #20
   3166c:	mov	sl, r0
   31670:	ldr	r0, [r0, #116]	; 0x74
   31674:	mov	r8, r3
   31678:	mov	r5, r2
   3167c:	str	r1, [sp, #16]
   31680:	cmp	r0, #0
   31684:	beq	31728 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   31688:	ldr	r1, [sl, #92]	; 0x5c
   3168c:	rsb	r0, r0, #32
   31690:	lsr	r0, r8, r0
   31694:	add	r6, r1, r0, lsl #2
   31698:	cmp	r6, #0
   3169c:	beq	317ec <flatcc_builder_create_cached_vtable@@Base+0x18c>
   316a0:	ldr	r7, [r6]
   316a4:	str	r6, [sp, #12]
   316a8:	cmp	r7, #0
   316ac:	beq	317f4 <flatcc_builder_create_cached_vtable@@Base+0x194>
   316b0:	ldr	r4, [sl, #68]	; 0x44
   316b4:	ldr	r8, [sl, #100]	; 0x64
   316b8:	mov	r0, #0
   316bc:	str	r0, [sp, #8]
   316c0:	b	316d4 <flatcc_builder_create_cached_vtable@@Base+0x74>
   316c4:	ldr	r7, [r9, #12]!
   316c8:	mov	r6, r9
   316cc:	cmp	r7, #0
   316d0:	beq	317e4 <flatcc_builder_create_cached_vtable@@Base+0x184>
   316d4:	add	r9, r8, r7
   316d8:	mov	r1, r4
   316dc:	ldr	r0, [r9, #8]
   316e0:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   316e4:	cmp	r0, r5
   316e8:	bne	316c4 <flatcc_builder_create_cached_vtable@@Base+0x64>
   316ec:	ldr	r0, [sp, #16]
   316f0:	mov	r2, r5
   316f4:	bl	14eb4 <bcmp@plt>
   316f8:	cmp	r0, #0
   316fc:	bne	316c4 <flatcc_builder_create_cached_vtable@@Base+0x64>
   31700:	ldr	r0, [sl, #152]	; 0x98
   31704:	ldr	r1, [r9, #4]
   31708:	cmp	r1, r0
   3170c:	beq	31958 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   31710:	mov	r6, r9
   31714:	mov	r0, r9
   31718:	ldr	r7, [r6, #12]!
   3171c:	cmp	r7, #0
   31720:	bne	316bc <flatcc_builder_create_cached_vtable@@Base+0x5c>
   31724:	b	317f8 <flatcc_builder_create_cached_vtable@@Base+0x198>
   31728:	ldr	r0, [sl, #124]	; 0x7c
   3172c:	cmp	r0, #0
   31730:	bne	319a4 <flatcc_builder_create_cached_vtable@@Base+0x344>
   31734:	ldr	r0, [sl, #104]	; 0x68
   31738:	add	r7, sl, #100	; 0x64
   3173c:	cmp	r0, #15
   31740:	bhi	3176c <flatcc_builder_create_cached_vtable@@Base+0x10c>
   31744:	ldr	r0, [sl, #40]	; 0x28
   31748:	ldr	r6, [sl, #48]	; 0x30
   3174c:	mov	r1, #6
   31750:	mov	r2, #16
   31754:	mov	r3, #0
   31758:	str	r1, [sp]
   3175c:	mov	r1, r7
   31760:	blx	r6
   31764:	cmp	r0, #0
   31768:	bne	31984 <flatcc_builder_create_cached_vtable@@Base+0x324>
   3176c:	ldr	r0, [r7]
   31770:	mov	r7, #0
   31774:	cmp	r0, #0
   31778:	beq	31898 <flatcc_builder_create_cached_vtable@@Base+0x238>
   3177c:	mov	r0, #16
   31780:	mov	r2, #5
   31784:	add	r1, sl, #92	; 0x5c
   31788:	mov	r3, #1
   3178c:	mov	r4, #256	; 0x100
   31790:	str	r0, [sl, #124]	; 0x7c
   31794:	ldr	r0, [sl, #40]	; 0x28
   31798:	ldr	r6, [sl, #48]	; 0x30
   3179c:	str	r2, [sp]
   317a0:	mov	r2, #256	; 0x100
   317a4:	blx	r6
   317a8:	cmp	r0, #0
   317ac:	bne	31898 <flatcc_builder_create_cached_vtable@@Base+0x238>
   317b0:	ldr	r0, [sl, #96]	; 0x60
   317b4:	mov	r1, r4
   317b8:	lsl	r4, r4, #1
   317bc:	cmp	r0, r1, lsl #1
   317c0:	bcs	317b4 <flatcc_builder_create_cached_vtable@@Base+0x154>
   317c4:	lsr	r1, r1, #2
   317c8:	mvn	r0, #0
   317cc:	mov	r2, #1
   317d0:	add	r0, r0, #1
   317d4:	cmp	r1, r2, lsl r0
   317d8:	bhi	317d0 <flatcc_builder_create_cached_vtable@@Base+0x170>
   317dc:	str	r0, [sl, #116]	; 0x74
   317e0:	b	31688 <flatcc_builder_create_cached_vtable@@Base+0x28>
   317e4:	ldr	r9, [sp, #8]
   317e8:	b	317f8 <flatcc_builder_create_cached_vtable@@Base+0x198>
   317ec:	mov	r7, #0
   317f0:	b	31898 <flatcc_builder_create_cached_vtable@@Base+0x238>
   317f4:	mov	r9, #0
   317f8:	ldr	r4, [sl, #124]	; 0x7c
   317fc:	ldr	r0, [sl, #104]	; 0x68
   31800:	add	r7, sl, #100	; 0x64
   31804:	add	r2, r4, #16
   31808:	cmp	r2, r0
   3180c:	bls	31834 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   31810:	ldr	r0, [sl, #40]	; 0x28
   31814:	ldr	r6, [sl, #48]	; 0x30
   31818:	mov	r1, #6
   3181c:	mov	r3, #0
   31820:	str	r1, [sp]
   31824:	mov	r1, r7
   31828:	blx	r6
   3182c:	cmp	r0, #0
   31830:	bne	31984 <flatcc_builder_create_cached_vtable@@Base+0x324>
   31834:	ldr	r0, [r7]
   31838:	mov	r7, #0
   3183c:	adds	r4, r0, r4
   31840:	beq	31898 <flatcc_builder_create_cached_vtable@@Base+0x238>
   31844:	ldr	r0, [sl, #124]	; 0x7c
   31848:	ldr	r1, [sl, #152]	; 0x98
   3184c:	add	r2, r0, #16
   31850:	str	r2, [sl, #124]	; 0x7c
   31854:	ldr	r2, [sp, #12]
   31858:	str	r1, [r4, #4]
   3185c:	ldr	r1, [r2]
   31860:	str	r1, [r4, #12]
   31864:	ldr	r1, [sp, #16]
   31868:	str	r0, [r2]
   3186c:	mov	r0, sl
   31870:	mov	r2, r5
   31874:	bl	314ec <flatcc_builder_create_vtable@@Base>
   31878:	cmp	r0, #0
   3187c:	str	r0, [r4]
   31880:	beq	31898 <flatcc_builder_create_cached_vtable@@Base+0x238>
   31884:	cmp	r9, #0
   31888:	beq	318a4 <flatcc_builder_create_cached_vtable@@Base+0x244>
   3188c:	ldr	r0, [r9, #8]
   31890:	str	r0, [r4, #8]
   31894:	ldr	r7, [r4]
   31898:	mov	r0, r7
   3189c:	sub	sp, fp, #28
   318a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   318a4:	ldr	r6, [sl, #120]	; 0x78
   318a8:	ldr	r0, [sl, #172]	; 0xac
   318ac:	add	r2, r6, r5
   318b0:	cmp	r0, #0
   318b4:	beq	318f0 <flatcc_builder_create_cached_vtable@@Base+0x290>
   318b8:	cmp	r0, r2
   318bc:	bcs	318f0 <flatcc_builder_create_cached_vtable@@Base+0x290>
   318c0:	ldr	r0, [sl, #116]	; 0x74
   318c4:	cmp	r0, #0
   318c8:	beq	31894 <flatcc_builder_create_cached_vtable@@Base+0x234>
   318cc:	ldr	r0, [sl, #92]	; 0x5c
   318d0:	ldr	r2, [sl, #96]	; 0x60
   318d4:	mov	r1, #0
   318d8:	mov	r5, #0
   318dc:	bl	14ee4 <memset@plt>
   318e0:	mov	r0, #16
   318e4:	str	r5, [sl, #120]	; 0x78
   318e8:	str	r0, [sl, #124]	; 0x7c
   318ec:	b	31894 <flatcc_builder_create_cached_vtable@@Base+0x234>
   318f0:	ldr	r0, [sl, #72]	; 0x48
   318f4:	add	r7, sl, #68	; 0x44
   318f8:	cmp	r2, r0
   318fc:	bls	31924 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   31900:	ldr	r0, [sl, #40]	; 0x28
   31904:	ldr	ip, [sl, #48]	; 0x30
   31908:	mov	r1, #2
   3190c:	mov	r3, #0
   31910:	str	r1, [sp]
   31914:	mov	r1, r7
   31918:	blx	ip
   3191c:	cmp	r0, #0
   31920:	bne	31984 <flatcc_builder_create_cached_vtable@@Base+0x324>
   31924:	ldr	r0, [r7]
   31928:	adds	r0, r0, r6
   3192c:	beq	31950 <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   31930:	ldr	r1, [sl, #120]	; 0x78
   31934:	mov	r2, r5
   31938:	str	r1, [r4, #8]
   3193c:	add	r1, r1, r5
   31940:	str	r1, [sl, #120]	; 0x78
   31944:	ldr	r1, [sp, #16]
   31948:	bl	14e54 <memcpy@plt>
   3194c:	b	31894 <flatcc_builder_create_cached_vtable@@Base+0x234>
   31950:	mvn	r7, #0
   31954:	b	31898 <flatcc_builder_create_cached_vtable@@Base+0x238>
   31958:	ldr	r0, [sp, #12]
   3195c:	cmp	r6, r0
   31960:	beq	3197c <flatcc_builder_create_cached_vtable@@Base+0x31c>
   31964:	mov	r1, r0
   31968:	ldr	r0, [r9, #12]
   3196c:	str	r0, [r6]
   31970:	ldr	r0, [r1]
   31974:	str	r0, [r9, #12]
   31978:	str	r7, [r1]
   3197c:	ldr	r7, [r9]
   31980:	b	31898 <flatcc_builder_create_cached_vtable@@Base+0x238>
   31984:	ldr	r0, [pc, #68]	; 319d0 <flatcc_builder_create_cached_vtable@@Base+0x370>
   31988:	ldr	r1, [pc, #68]	; 319d4 <flatcc_builder_create_cached_vtable@@Base+0x374>
   3198c:	ldr	r3, [pc, #68]	; 319d8 <flatcc_builder_create_cached_vtable@@Base+0x378>
   31990:	mov	r2, #308	; 0x134
   31994:	add	r0, pc, r0
   31998:	add	r1, pc, r1
   3199c:	add	r3, pc, r3
   319a0:	bl	14f38 <__assert_fail@plt>
   319a4:	ldr	r0, [pc, #24]	; 319c4 <flatcc_builder_create_cached_vtable@@Base+0x364>
   319a8:	ldr	r1, [pc, #24]	; 319c8 <flatcc_builder_create_cached_vtable@@Base+0x368>
   319ac:	ldr	r3, [pc, #24]	; 319cc <flatcc_builder_create_cached_vtable@@Base+0x36c>
   319b0:	movw	r2, #342	; 0x156
   319b4:	add	r0, pc, r0
   319b8:	add	r1, pc, r1
   319bc:	add	r3, pc, r3
   319c0:	bl	14f38 <__assert_fail@plt>
   319c4:	andeq	sl, r1, r3, ror #28
   319c8:	ldrdeq	r9, [r1], -lr
   319cc:	andeq	sl, r1, sl, ror #28
   319d0:			; <UNDEFINED> instruction: 0x0001aebf
   319d4:	strdeq	r9, [r1], -lr
   319d8:	strdeq	sl, [r1], -r1

000319dc <flatcc_builder_create_table@@Base>:
   319dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   319e0:	add	fp, sp, #24
   319e4:	sub	sp, sp, #80	; 0x50
   319e8:	ldr	r5, [fp, #12]
   319ec:	cmn	r5, #1
   319f0:	ble	31b3c <flatcc_builder_create_table@@Base+0x160>
   319f4:	ldr	ip, [fp, #16]
   319f8:	tst	ip, #1
   319fc:	beq	31b5c <flatcc_builder_create_table@@Base+0x180>
   31a00:	mov	r8, r0
   31a04:	ldrh	r0, [r0, #128]	; 0x80
   31a08:	cmp	r3, #4
   31a0c:	movls	r3, #4
   31a10:	cmp	r0, r3
   31a14:	strhcc	r3, [r8, #128]	; 0x80
   31a18:	cmp	r5, #1
   31a1c:	ldr	r0, [r8, #136]	; 0x88
   31a20:	sub	r4, r0, r2
   31a24:	sub	r0, r3, #1
   31a28:	and	r0, r4, r0
   31a2c:	sub	r4, r4, #4
   31a30:	add	r3, ip, r0
   31a34:	sub	r3, r4, r3
   31a38:	add	r3, r3, #1
   31a3c:	str	r3, [fp, #-28]	; 0xffffffe4
   31a40:	blt	31a70 <flatcc_builder_create_table@@Base+0x94>
   31a44:	ldr	r3, [fp, #8]
   31a48:	sub	ip, r4, r0
   31a4c:	mvn	r4, #3
   31a50:	sub	r4, r4, ip
   31a54:	ldrh	r6, [r3], #2
   31a58:	subs	r5, r5, #1
   31a5c:	ldr	r7, [r6, r1]
   31a60:	add	r7, r4, r7
   31a64:	sub	r7, r7, r6
   31a68:	str	r7, [r6, r1]
   31a6c:	bne	31a54 <flatcc_builder_create_table@@Base+0x78>
   31a70:	mov	r4, #4
   31a74:	sub	r3, fp, #28
   31a78:	cmp	r2, #0
   31a7c:	str	r4, [sp, #16]
   31a80:	str	r3, [sp, #12]
   31a84:	mov	r3, #1
   31a88:	str	r4, [sp, #4]
   31a8c:	addne	r4, r2, #4
   31a90:	str	r3, [sp, #8]
   31a94:	movne	r3, #2
   31a98:	strne	r2, [sp, #24]
   31a9c:	strne	r1, [sp, #20]
   31aa0:	strne	r3, [sp, #8]
   31aa4:	strne	r4, [sp, #4]
   31aa8:	cmp	r0, #0
   31aac:	beq	31ad8 <flatcc_builder_create_table@@Base+0xfc>
   31ab0:	add	r4, r4, r0
   31ab4:	add	r1, sp, #4
   31ab8:	str	r4, [sp, #4]
   31abc:	add	r1, r1, r3, lsl #3
   31ac0:	add	r3, r3, #1
   31ac4:	ldr	r2, [pc, #208]	; 31b9c <flatcc_builder_create_table@@Base+0x1c0>
   31ac8:	ldr	r2, [pc, r2]
   31acc:	str	r2, [r1, #8]
   31ad0:	str	r0, [r1, #12]
   31ad4:	str	r3, [sp, #8]
   31ad8:	cmp	r4, #0
   31adc:	ble	31b7c <flatcc_builder_create_table@@Base+0x1a0>
   31ae0:	ldr	r0, [r8, #136]	; 0x88
   31ae4:	ldr	r7, [r8, #44]	; 0x2c
   31ae8:	add	r1, sp, #4
   31aec:	mov	r2, r3
   31af0:	add	r1, r1, #8
   31af4:	sub	r5, r0, r4
   31af8:	ldr	r0, [r8, #36]	; 0x24
   31afc:	str	r4, [sp]
   31b00:	mov	r3, r5
   31b04:	blx	r7
   31b08:	cmp	r0, #0
   31b0c:	streq	r5, [r8, #136]	; 0x88
   31b10:	moveq	r0, r5
   31b14:	subeq	sp, fp, #24
   31b18:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   31b1c:	ldr	r0, [pc, #160]	; 31bc4 <flatcc_builder_create_table@@Base+0x1e8>
   31b20:	ldr	r1, [pc, #160]	; 31bc8 <flatcc_builder_create_table@@Base+0x1ec>
   31b24:	ldr	r3, [pc, #160]	; 31bcc <flatcc_builder_create_table@@Base+0x1f0>
   31b28:	movw	r2, #651	; 0x28b
   31b2c:	add	r0, pc, r0
   31b30:	add	r1, pc, r1
   31b34:	add	r3, pc, r3
   31b38:	bl	14f38 <__assert_fail@plt>
   31b3c:	ldr	r0, [pc, #92]	; 31ba0 <flatcc_builder_create_table@@Base+0x1c4>
   31b40:	ldr	r1, [pc, #92]	; 31ba4 <flatcc_builder_create_table@@Base+0x1c8>
   31b44:	ldr	r3, [pc, #92]	; 31ba8 <flatcc_builder_create_table@@Base+0x1cc>
   31b48:	movw	r2, #1237	; 0x4d5
   31b4c:	add	r0, pc, r0
   31b50:	add	r1, pc, r1
   31b54:	add	r3, pc, r3
   31b58:	bl	14f38 <__assert_fail@plt>
   31b5c:	ldr	r0, [pc, #72]	; 31bac <flatcc_builder_create_table@@Base+0x1d0>
   31b60:	ldr	r1, [pc, #72]	; 31bb0 <flatcc_builder_create_table@@Base+0x1d4>
   31b64:	ldr	r3, [pc, #72]	; 31bb4 <flatcc_builder_create_table@@Base+0x1d8>
   31b68:	movw	r2, #1243	; 0x4db
   31b6c:	add	r0, pc, r0
   31b70:	add	r1, pc, r1
   31b74:	add	r3, pc, r3
   31b78:	bl	14f38 <__assert_fail@plt>
   31b7c:	ldr	r0, [pc, #52]	; 31bb8 <flatcc_builder_create_table@@Base+0x1dc>
   31b80:	ldr	r1, [pc, #52]	; 31bbc <flatcc_builder_create_table@@Base+0x1e0>
   31b84:	ldr	r3, [pc, #52]	; 31bc0 <flatcc_builder_create_table@@Base+0x1e4>
   31b88:	movw	r2, #647	; 0x287
   31b8c:	add	r0, pc, r0
   31b90:	add	r1, pc, r1
   31b94:	add	r3, pc, r3
   31b98:	bl	14f38 <__assert_fail@plt>
   31b9c:	muleq	r2, ip, r5
   31ba0:			; <UNDEFINED> instruction: 0x0001a2bd
   31ba4:	andeq	r9, r1, r6, asr #22
   31ba8:	andeq	sl, r1, r7, asr #5
   31bac:	andeq	sl, r1, fp, asr #6
   31bb0:	andeq	r9, r1, r6, lsr #22
   31bb4:	andeq	sl, r1, r7, lsr #5
   31bb8:	andeq	sl, r1, r7, asr #25
   31bbc:	andeq	r9, r1, r6, lsl #22
   31bc0:	andeq	sl, r1, lr, ror fp
   31bc4:	andeq	sl, r1, r7, lsr #26
   31bc8:	andeq	r9, r1, r6, ror #22
   31bcc:	ldrdeq	sl, [r1], -lr

00031bd0 <flatcc_builder_check_required_field@@Base>:
   31bd0:	push	{fp, lr}
   31bd4:	mov	fp, sp
   31bd8:	ldr	r2, [r0, #32]
   31bdc:	ldrh	r2, [r2, #14]
   31be0:	cmp	r2, #3
   31be4:	bne	31c14 <flatcc_builder_check_required_field@@Base+0x44>
   31be8:	ldrh	r3, [r0, #8]
   31bec:	mov	r2, #0
   31bf0:	cmp	r3, r1
   31bf4:	bls	31c0c <flatcc_builder_check_required_field@@Base+0x3c>
   31bf8:	ldr	r0, [r0, #4]
   31bfc:	add	r0, r0, r1, lsl #1
   31c00:	ldrh	r2, [r0]
   31c04:	cmp	r2, #0
   31c08:	movwne	r2, #1
   31c0c:	mov	r0, r2
   31c10:	pop	{fp, pc}
   31c14:	ldr	r0, [pc, #24]	; 31c34 <flatcc_builder_check_required_field@@Base+0x64>
   31c18:	ldr	r1, [pc, #24]	; 31c38 <flatcc_builder_check_required_field@@Base+0x68>
   31c1c:	ldr	r3, [pc, #24]	; 31c3c <flatcc_builder_check_required_field@@Base+0x6c>
   31c20:	movw	r2, #1272	; 0x4f8
   31c24:	add	r0, pc, r0
   31c28:	add	r1, pc, r1
   31c2c:	add	r3, pc, r3
   31c30:	bl	14f38 <__assert_fail@plt>
   31c34:	muleq	r1, lr, r2
   31c38:	andeq	r9, r1, lr, ror #20
   31c3c:	andeq	sl, r1, r1, asr #5

00031c40 <flatcc_builder_check_union_field@@Base>:
   31c40:	push	{fp, lr}
   31c44:	mov	fp, sp
   31c48:	mov	r2, r0
   31c4c:	ldr	r0, [r0, #32]
   31c50:	ldrh	r0, [r0, #14]
   31c54:	cmp	r0, #3
   31c58:	bne	31cb8 <flatcc_builder_check_union_field@@Base+0x78>
   31c5c:	mov	r0, #0
   31c60:	cmp	r1, #0
   31c64:	beq	31ca4 <flatcc_builder_check_union_field@@Base+0x64>
   31c68:	ldrh	r3, [r2, #8]
   31c6c:	cmp	r3, r1
   31c70:	popls	{fp, pc}
   31c74:	ldr	r0, [r2, #4]
   31c78:	add	r0, r0, r1, lsl #1
   31c7c:	ldrh	r1, [r0, #-2]
   31c80:	cmp	r1, #0
   31c84:	beq	31ca8 <flatcc_builder_check_union_field@@Base+0x68>
   31c88:	ldr	r2, [r2, #16]
   31c8c:	ldrh	r0, [r0]
   31c90:	ldrb	r1, [r2, r1]
   31c94:	cmp	r1, #0
   31c98:	beq	31cac <flatcc_builder_check_union_field@@Base+0x6c>
   31c9c:	cmp	r0, #0
   31ca0:	movwne	r0, #1
   31ca4:	pop	{fp, pc}
   31ca8:	ldrh	r0, [r0]
   31cac:	clz	r0, r0
   31cb0:	lsr	r0, r0, #5
   31cb4:	pop	{fp, pc}
   31cb8:	ldr	r0, [pc, #24]	; 31cd8 <flatcc_builder_check_union_field@@Base+0x98>
   31cbc:	ldr	r1, [pc, #24]	; 31cdc <flatcc_builder_check_union_field@@Base+0x9c>
   31cc0:	ldr	r3, [pc, #24]	; 31ce0 <flatcc_builder_check_union_field@@Base+0xa0>
   31cc4:	movw	r2, #1279	; 0x4ff
   31cc8:	add	r0, pc, r0
   31ccc:	add	r1, pc, r1
   31cd0:	add	r3, pc, r3
   31cd4:	bl	14f38 <__assert_fail@plt>
   31cd8:	strdeq	sl, [r1], -sl	; <UNPREDICTABLE>
   31cdc:	andeq	r9, r1, sl, asr #19
   31ce0:	andeq	sl, r1, r0, ror r2

00031ce4 <flatcc_builder_check_required@@Base>:
   31ce4:	push	{fp, lr}
   31ce8:	mov	fp, sp
   31cec:	mov	r3, r0
   31cf0:	ldr	r0, [r0, #32]
   31cf4:	ldrh	r0, [r0, #14]
   31cf8:	cmp	r0, #3
   31cfc:	bne	31d44 <flatcc_builder_check_required@@Base+0x60>
   31d00:	ldrh	ip, [r3, #8]
   31d04:	mov	r0, #0
   31d08:	cmp	ip, r2
   31d0c:	poplt	{fp, pc}
   31d10:	cmp	r2, #1
   31d14:	blt	31d3c <flatcc_builder_check_required@@Base+0x58>
   31d18:	ldr	ip, [r3, #4]
   31d1c:	ldrh	r3, [r1]
   31d20:	add	r3, ip, r3, lsl #1
   31d24:	ldrh	r3, [r3]
   31d28:	cmp	r3, #0
   31d2c:	beq	31d40 <flatcc_builder_check_required@@Base+0x5c>
   31d30:	add	r1, r1, #2
   31d34:	subs	r2, r2, #1
   31d38:	bne	31d1c <flatcc_builder_check_required@@Base+0x38>
   31d3c:	mov	r0, #1
   31d40:	pop	{fp, pc}
   31d44:	ldr	r0, [pc, #24]	; 31d64 <flatcc_builder_check_required@@Base+0x80>
   31d48:	ldr	r1, [pc, #24]	; 31d68 <flatcc_builder_check_required@@Base+0x84>
   31d4c:	ldr	r3, [pc, #24]	; 31d6c <flatcc_builder_check_required@@Base+0x88>
   31d50:	movw	r2, #1297	; 0x511
   31d54:	add	r0, pc, r0
   31d58:	add	r1, pc, r1
   31d5c:	add	r3, pc, r3
   31d60:	bl	14f38 <__assert_fail@plt>
   31d64:	andeq	sl, r1, lr, ror #2
   31d68:	andeq	r9, r1, lr, lsr r9
   31d6c:	andeq	sl, r1, r4, lsr r2

00031d70 <flatcc_builder_end_table@@Base>:
   31d70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31d74:	add	fp, sp, #24
   31d78:	sub	sp, sp, #16
   31d7c:	mov	r4, r0
   31d80:	ldr	r0, [r0, #32]
   31d84:	ldrh	r0, [r0, #14]
   31d88:	cmp	r0, #3
   31d8c:	bne	31f08 <flatcc_builder_end_table@@Base+0x198>
   31d90:	ldrh	r0, [r4, #8]
   31d94:	ldr	r5, [r4, #4]
   31d98:	mov	r1, #4
   31d9c:	movw	r2, #31153	; 0x79b1
   31da0:	movt	r2, #40503	; 0x9e37
   31da4:	add	r0, r1, r0, lsl #1
   31da8:	strh	r0, [r5, #-4]!
   31dac:	ldrh	r1, [r4, #20]
   31db0:	uxth	r6, r0
   31db4:	add	r1, r1, #4
   31db8:	strh	r1, [r5, #2]
   31dbc:	uxth	r1, r1
   31dc0:	ldr	r0, [r4, #12]
   31dc4:	eor	r0, r0, r6
   31dc8:	mul	r0, r0, r2
   31dcc:	eor	r0, r0, r1
   31dd0:	mov	r1, r5
   31dd4:	mul	r3, r0, r2
   31dd8:	mov	r0, r4
   31ddc:	mov	r2, r6
   31de0:	str	r3, [r4, #12]
   31de4:	bl	31660 <flatcc_builder_create_cached_vtable@@Base>
   31de8:	cmp	r0, #0
   31dec:	beq	31ef8 <flatcc_builder_end_table@@Base+0x188>
   31df0:	mov	r7, r0
   31df4:	mov	r0, r5
   31df8:	mov	r1, #0
   31dfc:	mov	r2, r6
   31e00:	mov	r8, #0
   31e04:	bl	14ee4 <memset@plt>
   31e08:	ldr	r5, [r4, #32]
   31e0c:	ldr	r0, [r4, #76]	; 0x4c
   31e10:	ldr	r6, [r4]
   31e14:	ldrh	r3, [r4, #130]	; 0x82
   31e18:	ldr	r1, [r4, #16]
   31e1c:	ldr	r2, [r4, #20]
   31e20:	ldr	r5, [r5, #20]
   31e24:	add	r0, r0, r5
   31e28:	sub	r6, r6, r0
   31e2c:	asr	r6, r6, #1
   31e30:	stm	sp, {r0, r6, r7}
   31e34:	mov	r0, r4
   31e38:	bl	319dc <flatcc_builder_create_table@@Base>
   31e3c:	cmp	r0, #0
   31e40:	beq	31efc <flatcc_builder_end_table@@Base+0x18c>
   31e44:	ldr	r1, [r4, #32]
   31e48:	mov	r5, r0
   31e4c:	ldr	r0, [r4, #16]
   31e50:	ldr	r2, [r4, #20]
   31e54:	ldr	r3, [r4, #52]	; 0x34
   31e58:	ldr	r7, [r1, #24]
   31e5c:	str	r7, [r4, #12]
   31e60:	ldrh	r7, [r1, #28]
   31e64:	strh	r7, [r4, #8]
   31e68:	ldr	r7, [r1, #16]
   31e6c:	add	r3, r3, r7
   31e70:	str	r3, [r4, #4]
   31e74:	ldr	r3, [r4, #76]	; 0x4c
   31e78:	ldr	r1, [r1, #20]
   31e7c:	add	r1, r3, r1
   31e80:	str	r1, [r4]
   31e84:	mov	r1, #0
   31e88:	bl	14ee4 <memset@plt>
   31e8c:	ldr	r0, [r4, #32]
   31e90:	ldr	r1, [r4, #60]	; 0x3c
   31e94:	ldr	r2, [r4, #64]	; 0x40
   31e98:	mov	r8, r5
   31e9c:	ldr	r3, [r0, #8]
   31ea0:	str	r3, [r4, #20]
   31ea4:	ldr	r3, [r0]
   31ea8:	str	r3, [r4, #28]
   31eac:	add	r1, r1, r3
   31eb0:	ldr	r7, [r0, #4]
   31eb4:	str	r1, [r4, #16]
   31eb8:	sub	r1, r2, r3
   31ebc:	cmp	r1, r7
   31ec0:	movhi	r1, r7
   31ec4:	str	r1, [r4, #24]
   31ec8:	ldrh	r1, [r4, #130]	; 0x82
   31ecc:	ldrh	r2, [r4, #128]	; 0x80
   31ed0:	cmp	r2, r1
   31ed4:	strhcc	r1, [r4, #128]	; 0x80
   31ed8:	ldrh	r1, [r0, #12]
   31edc:	sub	r0, r0, #36	; 0x24
   31ee0:	str	r0, [r4, #32]
   31ee4:	strh	r1, [r4, #130]	; 0x82
   31ee8:	ldr	r0, [r4, #156]	; 0x9c
   31eec:	sub	r0, r0, #1
   31ef0:	str	r0, [r4, #156]	; 0x9c
   31ef4:	b	31efc <flatcc_builder_end_table@@Base+0x18c>
   31ef8:	mov	r8, #0
   31efc:	mov	r0, r8
   31f00:	sub	sp, fp, #24
   31f04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31f08:	ldr	r0, [pc, #24]	; 31f28 <flatcc_builder_end_table@@Base+0x1b8>
   31f0c:	ldr	r1, [pc, #24]	; 31f2c <flatcc_builder_end_table@@Base+0x1bc>
   31f10:	ldr	r3, [pc, #24]	; 31f30 <flatcc_builder_end_table@@Base+0x1c0>
   31f14:	movw	r2, #1317	; 0x525
   31f18:	add	r0, pc, r0
   31f1c:	add	r1, pc, r1
   31f20:	add	r3, pc, r3
   31f24:	bl	14f38 <__assert_fail@plt>
   31f28:	andeq	r9, r1, sl, lsr #31
   31f2c:	andeq	r9, r1, sl, ror r7
   31f30:	andeq	sl, r1, sl, asr #1

00031f34 <flatcc_builder_create_vector@@Base>:
   31f34:	push	{r4, r5, r6, r7, fp, lr}
   31f38:	add	fp, sp, #16
   31f3c:	sub	sp, sp, #80	; 0x50
   31f40:	mov	r7, r0
   31f44:	ldr	r0, [fp, #12]
   31f48:	cmp	r2, r0
   31f4c:	bhi	32048 <flatcc_builder_create_vector@@Base+0x114>
   31f50:	ldr	r0, [fp, #8]
   31f54:	mov	r4, r2
   31f58:	ldrh	r2, [r7, #128]	; 0x80
   31f5c:	mov	r5, #4
   31f60:	cmp	r0, #4
   31f64:	movls	r0, r5
   31f68:	cmp	r2, r0
   31f6c:	sub	r2, fp, #20
   31f70:	strhcc	r0, [r7, #128]	; 0x80
   31f74:	str	r4, [fp, #-20]	; 0xffffffec
   31f78:	sub	r0, r0, #1
   31f7c:	ldr	ip, [r7, #136]	; 0x88
   31f80:	str	r5, [sp, #16]
   31f84:	str	r2, [sp, #12]
   31f88:	mov	r2, #1
   31f8c:	str	r5, [sp, #4]
   31f90:	str	r2, [sp, #8]
   31f94:	mls	r6, r3, r4, ip
   31f98:	mul	r3, r3, r4
   31f9c:	cmp	r3, #0
   31fa0:	and	r0, r6, r0
   31fa4:	movne	r2, #2
   31fa8:	addne	r5, r3, #4
   31fac:	strne	r3, [sp, #24]
   31fb0:	strne	r1, [sp, #20]
   31fb4:	strne	r2, [sp, #8]
   31fb8:	strne	r5, [sp, #4]
   31fbc:	cmp	r0, #0
   31fc0:	beq	31fec <flatcc_builder_create_vector@@Base+0xb8>
   31fc4:	add	r5, r5, r0
   31fc8:	add	r1, sp, #4
   31fcc:	str	r5, [sp, #4]
   31fd0:	add	r1, r1, r2, lsl #3
   31fd4:	add	r2, r2, #1
   31fd8:	ldr	r3, [pc, #168]	; 32088 <flatcc_builder_create_vector@@Base+0x154>
   31fdc:	ldr	r3, [pc, r3]
   31fe0:	str	r3, [r1, #8]
   31fe4:	str	r0, [r1, #12]
   31fe8:	str	r2, [sp, #8]
   31fec:	cmp	r5, #0
   31ff0:	ble	32068 <flatcc_builder_create_vector@@Base+0x134>
   31ff4:	ldr	r0, [r7, #36]	; 0x24
   31ff8:	ldr	r6, [r7, #44]	; 0x2c
   31ffc:	add	r1, sp, #4
   32000:	sub	r4, ip, r5
   32004:	str	r5, [sp]
   32008:	add	r1, r1, #8
   3200c:	mov	r3, r4
   32010:	blx	r6
   32014:	cmp	r0, #0
   32018:	streq	r4, [r7, #136]	; 0x88
   3201c:	moveq	r0, r4
   32020:	subeq	sp, fp, #16
   32024:	popeq	{r4, r5, r6, r7, fp, pc}
   32028:	ldr	r0, [pc, #116]	; 320a4 <flatcc_builder_create_vector@@Base+0x170>
   3202c:	ldr	r1, [pc, #116]	; 320a8 <flatcc_builder_create_vector@@Base+0x174>
   32030:	ldr	r3, [pc, #116]	; 320ac <flatcc_builder_create_vector@@Base+0x178>
   32034:	movw	r2, #651	; 0x28b
   32038:	add	r0, pc, r0
   3203c:	add	r1, pc, r1
   32040:	add	r3, pc, r3
   32044:	bl	14f38 <__assert_fail@plt>
   32048:	ldr	r0, [pc, #60]	; 3208c <flatcc_builder_create_vector@@Base+0x158>
   3204c:	ldr	r1, [pc, #60]	; 32090 <flatcc_builder_create_vector@@Base+0x15c>
   32050:	ldr	r3, [pc, #60]	; 32094 <flatcc_builder_create_vector@@Base+0x160>
   32054:	movw	r2, #1365	; 0x555
   32058:	add	r0, pc, r0
   3205c:	add	r1, pc, r1
   32060:	add	r3, pc, r3
   32064:	bl	14f38 <__assert_fail@plt>
   32068:	ldr	r0, [pc, #40]	; 32098 <flatcc_builder_create_vector@@Base+0x164>
   3206c:	ldr	r1, [pc, #40]	; 3209c <flatcc_builder_create_vector@@Base+0x168>
   32070:	ldr	r3, [pc, #40]	; 320a0 <flatcc_builder_create_vector@@Base+0x16c>
   32074:	movw	r2, #647	; 0x287
   32078:	add	r0, pc, r0
   3207c:	add	r1, pc, r1
   32080:	add	r3, pc, r3
   32084:	bl	14f38 <__assert_fail@plt>
   32088:	andeq	sp, r2, r8, lsl #1
   3208c:	ldrdeq	r9, [r1], -r4
   32090:	andeq	r9, r1, sl, lsr r6
   32094:	ldrdeq	r9, [r1], -pc	; <UNPREDICTABLE>
   32098:	ldrdeq	sl, [r1], -fp
   3209c:	andeq	r9, r1, sl, lsl r6
   320a0:	muleq	r1, r2, r6
   320a4:	andeq	sl, r1, fp, lsl r8
   320a8:	andeq	r9, r1, sl, asr r6
   320ac:	ldrdeq	sl, [r1], -r2

000320b0 <flatcc_builder_end_vector@@Base>:
   320b0:	push	{r4, r5, fp, lr}
   320b4:	add	fp, sp, #8
   320b8:	sub	sp, sp, #8
   320bc:	mov	r4, r0
   320c0:	ldr	r0, [r0, #32]
   320c4:	ldrh	r1, [r0, #14]
   320c8:	cmp	r1, #4
   320cc:	bne	32180 <flatcc_builder_end_vector@@Base+0xd0>
   320d0:	ldr	r3, [r0, #16]
   320d4:	ldr	r2, [r0, #20]
   320d8:	ldr	r0, [r0, #24]
   320dc:	ldr	r1, [r4, #16]
   320e0:	ldrh	r5, [r4, #130]	; 0x82
   320e4:	str	r0, [sp, #4]
   320e8:	mov	r0, r4
   320ec:	str	r5, [sp]
   320f0:	bl	31f34 <flatcc_builder_create_vector@@Base>
   320f4:	mov	r5, r0
   320f8:	cmp	r0, #0
   320fc:	beq	32174 <flatcc_builder_end_vector@@Base+0xc4>
   32100:	ldr	r0, [r4, #16]
   32104:	ldr	r2, [r4, #20]
   32108:	mov	r1, #0
   3210c:	bl	14ee4 <memset@plt>
   32110:	ldr	r0, [r4, #32]
   32114:	ldr	r1, [r4, #60]	; 0x3c
   32118:	ldr	ip, [r4, #64]	; 0x40
   3211c:	ldr	r3, [r0, #8]
   32120:	str	r3, [r4, #20]
   32124:	ldr	r3, [r0]
   32128:	str	r3, [r4, #28]
   3212c:	add	r1, r1, r3
   32130:	ldr	r2, [r0, #4]
   32134:	str	r1, [r4, #16]
   32138:	sub	r1, ip, r3
   3213c:	cmp	r1, r2
   32140:	movhi	r1, r2
   32144:	str	r1, [r4, #24]
   32148:	ldrh	r1, [r4, #130]	; 0x82
   3214c:	ldrh	r2, [r4, #128]	; 0x80
   32150:	cmp	r2, r1
   32154:	strhcc	r1, [r4, #128]	; 0x80
   32158:	ldrh	r1, [r0, #12]
   3215c:	sub	r0, r0, #36	; 0x24
   32160:	str	r0, [r4, #32]
   32164:	strh	r1, [r4, #130]	; 0x82
   32168:	ldr	r0, [r4, #156]	; 0x9c
   3216c:	sub	r0, r0, #1
   32170:	str	r0, [r4, #156]	; 0x9c
   32174:	mov	r0, r5
   32178:	sub	sp, fp, #8
   3217c:	pop	{r4, r5, fp, pc}
   32180:	ldr	r0, [pc, #24]	; 321a0 <flatcc_builder_end_vector@@Base+0xf0>
   32184:	ldr	r1, [pc, #24]	; 321a4 <flatcc_builder_end_vector@@Base+0xf4>
   32188:	ldr	r3, [pc, #24]	; 321a8 <flatcc_builder_end_vector@@Base+0xf8>
   3218c:	movw	r2, #1400	; 0x578
   32190:	add	r0, pc, r0
   32194:	add	r1, pc, r1
   32198:	add	r3, pc, r3
   3219c:	bl	14f38 <__assert_fail@plt>
   321a0:	andeq	r9, r1, r0, asr #16
   321a4:	andeq	r9, r1, r2, lsl #10
   321a8:	andeq	r9, r1, sp, lsl pc

000321ac <flatcc_builder_vector_count@@Base>:
   321ac:	ldr	r0, [r0, #32]
   321b0:	ldr	r0, [r0, #20]
   321b4:	bx	lr

000321b8 <flatcc_builder_vector_edit@@Base>:
   321b8:	ldr	r0, [r0, #16]
   321bc:	bx	lr

000321c0 <flatcc_builder_create_offset_vector_direct@@Base>:
   321c0:	mov	r3, #0
   321c4:	b	321c8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   321c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   321cc:	add	fp, sp, #24
   321d0:	sub	sp, sp, #80	; 0x50
   321d4:	mov	r6, #0
   321d8:	cmn	r2, #-1073741823	; 0xc0000001
   321dc:	bhi	3233c <flatcc_builder_create_offset_vector_direct@@Base+0x17c>
   321e0:	mov	r8, r0
   321e4:	ldrh	r0, [r0, #128]	; 0x80
   321e8:	mov	r5, #4
   321ec:	sub	r7, fp, #28
   321f0:	mov	r4, #1
   321f4:	cmp	r0, #3
   321f8:	movls	r0, #4
   321fc:	strhls	r0, [r8, #128]	; 0x80
   32200:	str	r2, [fp, #-28]	; 0xffffffe4
   32204:	ldr	ip, [r8, #136]	; 0x88
   32208:	str	r5, [sp, #16]
   3220c:	str	r7, [sp, #12]
   32210:	mov	r7, #0
   32214:	str	r5, [sp, #4]
   32218:	str	r4, [sp, #8]
   3221c:	cmp	r7, r2, lsl #2
   32220:	and	r6, ip, #3
   32224:	beq	32244 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   32228:	lsl	r7, r2, #2
   3222c:	mov	r4, #2
   32230:	add	r5, r7, #4
   32234:	str	r7, [sp, #24]
   32238:	str	r1, [sp, #20]
   3223c:	str	r4, [sp, #8]
   32240:	str	r5, [sp, #4]
   32244:	cmp	r6, #0
   32248:	beq	32274 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   3224c:	add	r5, r5, r6
   32250:	add	r7, sp, #4
   32254:	str	r5, [sp, #4]
   32258:	add	r7, r7, r4, lsl #3
   3225c:	add	r4, r4, #1
   32260:	ldr	r0, [pc, #352]	; 323c8 <flatcc_builder_create_offset_vector_direct@@Base+0x208>
   32264:	ldr	r0, [pc, r0]
   32268:	str	r0, [r7, #8]
   3226c:	str	r6, [r7, #12]
   32270:	str	r4, [sp, #8]
   32274:	cmp	r2, #0
   32278:	beq	32304 <flatcc_builder_create_offset_vector_direct@@Base+0x144>
   3227c:	sub	r0, r5, ip
   32280:	mov	r6, r3
   32284:	sub	r0, r0, #4
   32288:	b	322a0 <flatcc_builder_create_offset_vector_direct@@Base+0xe0>
   3228c:	sub	r0, r0, #4
   32290:	add	r1, r1, #4
   32294:	add	r6, r6, #1
   32298:	subs	r2, r2, #1
   3229c:	beq	32300 <flatcc_builder_create_offset_vector_direct@@Base+0x140>
   322a0:	ldr	r7, [r1]
   322a4:	cmp	r7, #0
   322a8:	beq	322cc <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   322ac:	add	r7, r0, r7
   322b0:	cmp	r3, #0
   322b4:	str	r7, [r1]
   322b8:	beq	3228c <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   322bc:	ldrb	r7, [r6]
   322c0:	cmp	r7, #0
   322c4:	bne	3228c <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   322c8:	b	32348 <flatcc_builder_create_offset_vector_direct@@Base+0x188>
   322cc:	cmp	r3, #0
   322d0:	beq	32368 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   322d4:	ldrb	r7, [r6]
   322d8:	cmp	r7, #0
   322dc:	beq	3228c <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   322e0:	ldr	r0, [pc, #240]	; 323d8 <flatcc_builder_create_offset_vector_direct@@Base+0x218>
   322e4:	ldr	r1, [pc, #240]	; 323dc <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
   322e8:	ldr	r3, [pc, #240]	; 323e0 <flatcc_builder_create_offset_vector_direct@@Base+0x220>
   322ec:	movw	r2, #1461	; 0x5b5
   322f0:	add	r0, pc, r0
   322f4:	add	r1, pc, r1
   322f8:	add	r3, pc, r3
   322fc:	bl	14f38 <__assert_fail@plt>
   32300:	ldr	ip, [r8, #136]	; 0x88
   32304:	cmp	r5, #0
   32308:	ble	32388 <flatcc_builder_create_offset_vector_direct@@Base+0x1c8>
   3230c:	ldr	r0, [r8, #36]	; 0x24
   32310:	ldr	r7, [r8, #44]	; 0x2c
   32314:	add	r1, sp, #4
   32318:	sub	r6, ip, r5
   3231c:	mov	r2, r4
   32320:	str	r5, [sp]
   32324:	add	r1, r1, #8
   32328:	mov	r3, r6
   3232c:	blx	r7
   32330:	cmp	r0, #0
   32334:	bne	323a8 <flatcc_builder_create_offset_vector_direct@@Base+0x1e8>
   32338:	str	r6, [r8, #136]	; 0x88
   3233c:	mov	r0, r6
   32340:	sub	sp, fp, #24
   32344:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32348:	ldr	r0, [pc, #124]	; 323cc <flatcc_builder_create_offset_vector_direct@@Base+0x20c>
   3234c:	ldr	r1, [pc, #124]	; 323d0 <flatcc_builder_create_offset_vector_direct@@Base+0x210>
   32350:	ldr	r3, [pc, #124]	; 323d4 <flatcc_builder_create_offset_vector_direct@@Base+0x214>
   32354:	movw	r2, #1457	; 0x5b1
   32358:	add	r0, pc, r0
   3235c:	add	r1, pc, r1
   32360:	add	r3, pc, r3
   32364:	bl	14f38 <__assert_fail@plt>
   32368:	ldr	r0, [pc, #116]	; 323e4 <flatcc_builder_create_offset_vector_direct@@Base+0x224>
   3236c:	ldr	r1, [pc, #116]	; 323e8 <flatcc_builder_create_offset_vector_direct@@Base+0x228>
   32370:	ldr	r3, [pc, #116]	; 323ec <flatcc_builder_create_offset_vector_direct@@Base+0x22c>
   32374:	movw	r2, #1463	; 0x5b7
   32378:	add	r0, pc, r0
   3237c:	add	r1, pc, r1
   32380:	add	r3, pc, r3
   32384:	bl	14f38 <__assert_fail@plt>
   32388:	ldr	r0, [pc, #96]	; 323f0 <flatcc_builder_create_offset_vector_direct@@Base+0x230>
   3238c:	ldr	r1, [pc, #96]	; 323f4 <flatcc_builder_create_offset_vector_direct@@Base+0x234>
   32390:	ldr	r3, [pc, #96]	; 323f8 <flatcc_builder_create_offset_vector_direct@@Base+0x238>
   32394:	movw	r2, #647	; 0x287
   32398:	add	r0, pc, r0
   3239c:	add	r1, pc, r1
   323a0:	add	r3, pc, r3
   323a4:	bl	14f38 <__assert_fail@plt>
   323a8:	ldr	r0, [pc, #76]	; 323fc <flatcc_builder_create_offset_vector_direct@@Base+0x23c>
   323ac:	ldr	r1, [pc, #76]	; 32400 <flatcc_builder_create_offset_vector_direct@@Base+0x240>
   323b0:	ldr	r3, [pc, #76]	; 32404 <flatcc_builder_create_offset_vector_direct@@Base+0x244>
   323b4:	movw	r2, #651	; 0x28b
   323b8:	add	r0, pc, r0
   323bc:	add	r1, pc, r1
   323c0:	add	r3, pc, r3
   323c4:	bl	14f38 <__assert_fail@plt>
   323c8:	andeq	ip, r2, r0, lsl #28
   323cc:	andeq	sl, r1, pc, ror #9
   323d0:	andeq	r9, r1, sl, lsr r3
   323d4:	strdeq	sl, [r1], -r5
   323d8:	andeq	sl, r1, r8, ror #11
   323dc:	andeq	r9, r1, r2, lsr #7
   323e0:	andeq	sl, r1, sp, asr r5
   323e4:	ldrdeq	sl, [r1], -fp
   323e8:	andeq	r9, r1, sl, lsl r3
   323ec:	ldrdeq	sl, [r1], -r5
   323f0:			; <UNDEFINED> instruction: 0x0001a4bb
   323f4:	strdeq	r9, [r1], -sl
   323f8:	andeq	sl, r1, r2, ror r3
   323fc:	muleq	r1, fp, r4
   32400:	ldrdeq	r9, [r1], -sl
   32404:	andeq	sl, r1, r2, asr r3

00032408 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   32408:	push	{r4, r5, fp, lr}
   3240c:	add	fp, sp, #8
   32410:	mov	r4, r0
   32414:	ldr	r0, [r0, #32]
   32418:	mov	r3, r1
   3241c:	ldrh	r1, [r0, #14]
   32420:	cmp	r1, #5
   32424:	bne	324c0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   32428:	ldr	r2, [r0, #20]
   3242c:	ldr	r1, [r4, #16]
   32430:	mov	r0, r4
   32434:	bl	321c8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   32438:	mov	r5, r0
   3243c:	cmp	r0, #0
   32440:	beq	324b8 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   32444:	ldr	r0, [r4, #16]
   32448:	ldr	r2, [r4, #20]
   3244c:	mov	r1, #0
   32450:	bl	14ee4 <memset@plt>
   32454:	ldr	r0, [r4, #32]
   32458:	ldr	r1, [r4, #60]	; 0x3c
   3245c:	ldr	ip, [r4, #64]	; 0x40
   32460:	ldr	r3, [r0, #8]
   32464:	str	r3, [r4, #20]
   32468:	ldr	r3, [r0]
   3246c:	str	r3, [r4, #28]
   32470:	add	r1, r1, r3
   32474:	ldr	r2, [r0, #4]
   32478:	str	r1, [r4, #16]
   3247c:	sub	r1, ip, r3
   32480:	cmp	r1, r2
   32484:	movhi	r1, r2
   32488:	str	r1, [r4, #24]
   3248c:	ldrh	r1, [r4, #130]	; 0x82
   32490:	ldrh	r2, [r4, #128]	; 0x80
   32494:	cmp	r2, r1
   32498:	strhcc	r1, [r4, #128]	; 0x80
   3249c:	ldrh	r1, [r0, #12]
   324a0:	sub	r0, r0, #36	; 0x24
   324a4:	str	r0, [r4, #32]
   324a8:	strh	r1, [r4, #130]	; 0x82
   324ac:	ldr	r0, [r4, #156]	; 0x9c
   324b0:	sub	r0, r0, #1
   324b4:	str	r0, [r4, #156]	; 0x9c
   324b8:	mov	r0, r5
   324bc:	pop	{r4, r5, fp, pc}
   324c0:	ldr	r0, [pc, #24]	; 324e0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd8>
   324c4:	ldr	r1, [pc, #24]	; 324e4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xdc>
   324c8:	ldr	r3, [pc, #24]	; 324e8 <flatcc_builder_end_offset_vector_for_unions@@Base+0xe0>
   324cc:	movw	r2, #1493	; 0x5d5
   324d0:	add	r0, pc, r0
   324d4:	add	r1, pc, r1
   324d8:	add	r3, pc, r3
   324dc:	bl	14f38 <__assert_fail@plt>
   324e0:	strdeq	r9, [r1], -r9	; <UNPREDICTABLE>
   324e4:	andeq	r9, r1, r2, asr #3
   324e8:	andeq	r9, r1, sl, ror #24

000324ec <flatcc_builder_offset_vector_edit@@Base>:
   324ec:	ldr	r0, [r0, #16]
   324f0:	bx	lr

000324f4 <flatcc_builder_offset_vector_count@@Base>:
   324f4:	ldr	r0, [r0, #32]
   324f8:	ldr	r0, [r0, #20]
   324fc:	bx	lr

00032500 <flatcc_builder_table_add_union@@Base>:
   32500:	push	{r4, r5, r6, r7, fp, lr}
   32504:	add	fp, sp, #16
   32508:	mov	r5, r0
   3250c:	ldr	r0, [r0, #32]
   32510:	ldrh	r0, [r0, #14]
   32514:	cmp	r0, #3
   32518:	bne	325a0 <flatcc_builder_table_add_union@@Base+0xa0>
   3251c:	mov	r7, r3
   32520:	mov	r4, r2
   32524:	mov	r6, r1
   32528:	cmp	r3, #0
   3252c:	beq	3253c <flatcc_builder_table_add_union@@Base+0x3c>
   32530:	uxtb	r0, r4
   32534:	cmp	r0, #0
   32538:	beq	325c0 <flatcc_builder_table_add_union@@Base+0xc0>
   3253c:	cmp	r7, #0
   32540:	beq	3255c <flatcc_builder_table_add_union@@Base+0x5c>
   32544:	mov	r0, r5
   32548:	mov	r1, r6
   3254c:	bl	32630 <flatcc_builder_table_add_offset@@Base>
   32550:	cmp	r0, #0
   32554:	beq	325e0 <flatcc_builder_table_add_union@@Base+0xe0>
   32558:	str	r7, [r0]
   3255c:	sub	r1, r6, #1
   32560:	mov	r0, r5
   32564:	mov	r2, #1
   32568:	mov	r3, #1
   3256c:	bl	327e4 <flatcc_builder_table_add@@Base>
   32570:	cmp	r0, #0
   32574:	strbne	r4, [r0]
   32578:	movne	r0, #0
   3257c:	popne	{r4, r5, r6, r7, fp, pc}
   32580:	ldr	r0, [pc, #156]	; 32624 <flatcc_builder_table_add_union@@Base+0x124>
   32584:	ldr	r1, [pc, #156]	; 32628 <flatcc_builder_table_add_union@@Base+0x128>
   32588:	ldr	r3, [pc, #156]	; 3262c <flatcc_builder_table_add_union@@Base+0x12c>
   3258c:	movw	r2, #1526	; 0x5f6
   32590:	add	r0, pc, r0
   32594:	add	r1, pc, r1
   32598:	add	r3, pc, r3
   3259c:	bl	14f38 <__assert_fail@plt>
   325a0:	ldr	r0, [pc, #88]	; 32600 <flatcc_builder_table_add_union@@Base+0x100>
   325a4:	ldr	r1, [pc, #88]	; 32604 <flatcc_builder_table_add_union@@Base+0x104>
   325a8:	ldr	r3, [pc, #88]	; 32608 <flatcc_builder_table_add_union@@Base+0x108>
   325ac:	movw	r2, #1518	; 0x5ee
   325b0:	add	r0, pc, r0
   325b4:	add	r1, pc, r1
   325b8:	add	r3, pc, r3
   325bc:	bl	14f38 <__assert_fail@plt>
   325c0:	ldr	r0, [pc, #68]	; 3260c <flatcc_builder_table_add_union@@Base+0x10c>
   325c4:	ldr	r1, [pc, #68]	; 32610 <flatcc_builder_table_add_union@@Base+0x110>
   325c8:	ldr	r3, [pc, #68]	; 32614 <flatcc_builder_table_add_union@@Base+0x114>
   325cc:	movw	r2, #1519	; 0x5ef
   325d0:	add	r0, pc, r0
   325d4:	add	r1, pc, r1
   325d8:	add	r3, pc, r3
   325dc:	bl	14f38 <__assert_fail@plt>
   325e0:	ldr	r0, [pc, #48]	; 32618 <flatcc_builder_table_add_union@@Base+0x118>
   325e4:	ldr	r1, [pc, #48]	; 3261c <flatcc_builder_table_add_union@@Base+0x11c>
   325e8:	ldr	r3, [pc, #48]	; 32620 <flatcc_builder_table_add_union@@Base+0x120>
   325ec:	movw	r2, #1522	; 0x5f2
   325f0:	add	r0, pc, r0
   325f4:	add	r1, pc, r1
   325f8:	add	r3, pc, r3
   325fc:	bl	14f38 <__assert_fail@plt>
   32600:	andeq	r9, r1, r2, lsl r9
   32604:	andeq	r9, r1, r2, ror #1
   32608:	strdeq	r9, [r1], -ip
   3260c:	andeq	r9, r1, ip, lsr ip
   32610:	andeq	r9, r1, r2, asr #1
   32614:	ldrdeq	r9, [r1], -ip
   32618:	andeq	r9, r1, lr, lsr ip
   3261c:	andeq	r9, r1, r2, lsr #1
   32620:			; <UNDEFINED> instruction: 0x00019bbc
   32624:	andeq	r9, r1, r8, lsr #25
   32628:	andeq	r9, r1, r2, lsl #2
   3262c:	andeq	r9, r1, ip, lsl ip

00032630 <flatcc_builder_table_add_offset@@Base>:
   32630:	push	{r4, r5, r6, r7, fp, lr}
   32634:	add	fp, sp, #16
   32638:	sub	sp, sp, #8
   3263c:	mov	r4, r0
   32640:	ldr	r0, [r0, #32]
   32644:	ldrh	r0, [r0, #14]
   32648:	cmp	r0, #3
   3264c:	bne	32760 <flatcc_builder_table_add_offset@@Base+0x130>
   32650:	movw	r0, #32765	; 0x7ffd
   32654:	mov	r5, r1
   32658:	cmp	r1, r0
   3265c:	bcs	32780 <flatcc_builder_table_add_offset@@Base+0x150>
   32660:	ldr	r0, [r4, #4]
   32664:	add	r1, r0, r5, lsl #1
   32668:	ldrh	r1, [r1]
   3266c:	cmp	r1, #0
   32670:	bne	327a0 <flatcc_builder_table_add_offset@@Base+0x170>
   32674:	ldr	r2, [r4, #20]
   32678:	ldr	r1, [r4, #12]
   3267c:	ldr	r3, [r4, #24]
   32680:	add	r2, r2, #3
   32684:	eor	r1, r1, r5
   32688:	bic	r6, r2, #3
   3268c:	movw	r2, #31153	; 0x79b1
   32690:	movt	r2, #40503	; 0x9e37
   32694:	add	r7, r6, #4
   32698:	cmp	r7, r3
   3269c:	str	r7, [r4, #20]
   326a0:	mul	r1, r1, r2
   326a4:	eor	r1, r1, #4
   326a8:	mul	r1, r1, r2
   326ac:	str	r1, [r4, #12]
   326b0:	bls	32724 <flatcc_builder_table_add_offset@@Base+0xf4>
   326b4:	ldr	r1, [r4, #28]
   326b8:	ldr	r0, [r4, #40]	; 0x28
   326bc:	ldr	ip, [r4, #48]	; 0x30
   326c0:	mov	r2, #1
   326c4:	mov	r3, #1
   326c8:	str	r2, [sp]
   326cc:	add	r2, r1, r7
   326d0:	add	r1, r4, #60	; 0x3c
   326d4:	blx	ip
   326d8:	mov	r1, r0
   326dc:	mov	r0, #0
   326e0:	cmp	r1, #0
   326e4:	beq	326f0 <flatcc_builder_table_add_offset@@Base+0xc0>
   326e8:	sub	sp, fp, #16
   326ec:	pop	{r4, r5, r6, r7, fp, pc}
   326f0:	ldr	r0, [r4, #28]
   326f4:	ldr	r2, [r4, #60]	; 0x3c
   326f8:	ldr	r3, [r4, #64]	; 0x40
   326fc:	ldr	r1, [r4, #32]
   32700:	add	r2, r2, r0
   32704:	sub	r0, r3, r0
   32708:	str	r2, [r4, #16]
   3270c:	movw	r2, #65532	; 0xfffc
   32710:	cmp	r0, r2
   32714:	movcs	r0, r2
   32718:	str	r0, [r4, #24]
   3271c:	str	r2, [r1, #4]
   32720:	ldr	r0, [r4, #4]
   32724:	uxth	r1, r5
   32728:	add	r0, r0, r1, lsl #1
   3272c:	strh	r7, [r0]
   32730:	ldrh	r0, [r4, #8]
   32734:	cmp	r0, r1
   32738:	addls	r0, r5, #1
   3273c:	strhls	r0, [r4, #8]
   32740:	ldr	r0, [r4]
   32744:	add	r1, r0, #2
   32748:	str	r1, [r4]
   3274c:	strh	r6, [r0]
   32750:	ldr	r0, [r4, #16]
   32754:	add	r0, r0, r6
   32758:	sub	sp, fp, #16
   3275c:	pop	{r4, r5, r6, r7, fp, pc}
   32760:	ldr	r0, [pc, #88]	; 327c0 <flatcc_builder_table_add_offset@@Base+0x190>
   32764:	ldr	r1, [pc, #88]	; 327c4 <flatcc_builder_table_add_offset@@Base+0x194>
   32768:	ldr	r3, [pc, #88]	; 327c8 <flatcc_builder_table_add_offset@@Base+0x198>
   3276c:	movw	r2, #1811	; 0x713
   32770:	add	r0, pc, r0
   32774:	add	r1, pc, r1
   32778:	add	r3, pc, r3
   3277c:	bl	14f38 <__assert_fail@plt>
   32780:	ldr	r0, [pc, #68]	; 327cc <flatcc_builder_table_add_offset@@Base+0x19c>
   32784:	ldr	r1, [pc, #68]	; 327d0 <flatcc_builder_table_add_offset@@Base+0x1a0>
   32788:	ldr	r3, [pc, #68]	; 327d4 <flatcc_builder_table_add_offset@@Base+0x1a4>
   3278c:	movw	r2, #1812	; 0x714
   32790:	add	r0, pc, r0
   32794:	add	r1, pc, r1
   32798:	add	r3, pc, r3
   3279c:	bl	14f38 <__assert_fail@plt>
   327a0:	ldr	r0, [pc, #48]	; 327d8 <flatcc_builder_table_add_offset@@Base+0x1a8>
   327a4:	ldr	r1, [pc, #48]	; 327dc <flatcc_builder_table_add_offset@@Base+0x1ac>
   327a8:	ldr	r3, [pc, #48]	; 327e0 <flatcc_builder_table_add_offset@@Base+0x1b0>
   327ac:	movw	r2, #1819	; 0x71b
   327b0:	add	r0, pc, r0
   327b4:	add	r1, pc, r1
   327b8:	add	r3, pc, r3
   327bc:	bl	14f38 <__assert_fail@plt>
   327c0:	andeq	r9, r1, r2, asr r7
   327c4:	andeq	r8, r1, r2, lsr #30
   327c8:	andeq	r9, r1, lr, lsr lr
   327cc:	andeq	r9, r1, r6, lsr #27
   327d0:	andeq	r8, r1, r2, lsl #30
   327d4:	andeq	r9, r1, lr, lsl lr
   327d8:	andeq	sl, r1, r3, lsr #1
   327dc:	andeq	r8, r1, r2, ror #29
   327e0:	strdeq	r9, [r1], -lr

000327e4 <flatcc_builder_table_add@@Base>:
   327e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   327e8:	add	fp, sp, #24
   327ec:	sub	sp, sp, #8
   327f0:	mov	r4, r0
   327f4:	ldr	r0, [r0, #32]
   327f8:	ldrh	r0, [r0, #14]
   327fc:	cmp	r0, #3
   32800:	bne	32920 <flatcc_builder_table_add@@Base+0x13c>
   32804:	movw	r0, #32765	; 0x7ffd
   32808:	mov	r8, r1
   3280c:	cmp	r1, r0
   32810:	bcs	32940 <flatcc_builder_table_add@@Base+0x15c>
   32814:	ldrh	r0, [r4, #130]	; 0x82
   32818:	cmp	r0, r3
   3281c:	strhcc	r3, [r4, #130]	; 0x82
   32820:	ldr	r0, [r4, #4]
   32824:	add	r1, r0, r8, lsl #1
   32828:	ldrh	r1, [r1]
   3282c:	cmp	r1, #0
   32830:	bne	32960 <flatcc_builder_table_add@@Base+0x17c>
   32834:	ldr	r1, [r4, #12]
   32838:	movw	r7, #31153	; 0x79b1
   3283c:	ldr	r6, [r4, #20]
   32840:	ldr	r5, [r4, #24]
   32844:	movt	r7, #40503	; 0x9e37
   32848:	eor	r1, r1, r8
   3284c:	mul	r1, r1, r7
   32850:	eor	r1, r1, r2
   32854:	mul	r1, r1, r7
   32858:	str	r1, [r4, #12]
   3285c:	add	r1, r3, r6
   32860:	rsb	r3, r3, #0
   32864:	sub	r1, r1, #1
   32868:	and	r6, r1, r3
   3286c:	add	r1, r6, r2
   32870:	cmp	r1, r5
   32874:	str	r1, [r4, #20]
   32878:	bcc	328f0 <flatcc_builder_table_add@@Base+0x10c>
   3287c:	ldr	r2, [r4, #28]
   32880:	ldr	r0, [r4, #40]	; 0x28
   32884:	ldr	r7, [r4, #48]	; 0x30
   32888:	mov	r3, #1
   3288c:	str	r3, [sp]
   32890:	mov	r3, #1
   32894:	add	r1, r1, r2
   32898:	add	r2, r1, #1
   3289c:	add	r1, r4, #60	; 0x3c
   328a0:	blx	r7
   328a4:	mov	r1, r0
   328a8:	mov	r0, #0
   328ac:	cmp	r1, #0
   328b0:	beq	328bc <flatcc_builder_table_add@@Base+0xd8>
   328b4:	sub	sp, fp, #24
   328b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   328bc:	ldr	r0, [r4, #28]
   328c0:	ldr	r2, [r4, #60]	; 0x3c
   328c4:	ldr	r3, [r4, #64]	; 0x40
   328c8:	ldr	r1, [r4, #32]
   328cc:	add	r2, r2, r0
   328d0:	sub	r0, r3, r0
   328d4:	str	r2, [r4, #16]
   328d8:	movw	r2, #65532	; 0xfffc
   328dc:	cmp	r0, r2
   328e0:	movcs	r0, r2
   328e4:	str	r0, [r4, #24]
   328e8:	str	r2, [r1, #4]
   328ec:	ldr	r0, [r4, #4]
   328f0:	uxth	r1, r8
   328f4:	add	r2, r6, #4
   328f8:	add	r0, r0, r1, lsl #1
   328fc:	strh	r2, [r0]
   32900:	ldrh	r0, [r4, #8]
   32904:	cmp	r0, r1
   32908:	addls	r0, r8, #1
   3290c:	strhls	r0, [r4, #8]
   32910:	ldr	r0, [r4, #16]
   32914:	add	r0, r0, r6
   32918:	sub	sp, fp, #24
   3291c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32920:	ldr	r0, [pc, #88]	; 32980 <flatcc_builder_table_add@@Base+0x19c>
   32924:	ldr	r1, [pc, #88]	; 32984 <flatcc_builder_table_add@@Base+0x1a0>
   32928:	ldr	r3, [pc, #88]	; 32988 <flatcc_builder_table_add@@Base+0x1a4>
   3292c:	movw	r2, #1773	; 0x6ed
   32930:	add	r0, pc, r0
   32934:	add	r1, pc, r1
   32938:	add	r3, pc, r3
   3293c:	bl	14f38 <__assert_fail@plt>
   32940:	ldr	r0, [pc, #68]	; 3298c <flatcc_builder_table_add@@Base+0x1a8>
   32944:	ldr	r1, [pc, #68]	; 32990 <flatcc_builder_table_add@@Base+0x1ac>
   32948:	ldr	r3, [pc, #68]	; 32994 <flatcc_builder_table_add@@Base+0x1b0>
   3294c:	movw	r2, #1774	; 0x6ee
   32950:	add	r0, pc, r0
   32954:	add	r1, pc, r1
   32958:	add	r3, pc, r3
   3295c:	bl	14f38 <__assert_fail@plt>
   32960:	ldr	r0, [pc, #48]	; 32998 <flatcc_builder_table_add@@Base+0x1b4>
   32964:	ldr	r1, [pc, #48]	; 3299c <flatcc_builder_table_add@@Base+0x1b8>
   32968:	ldr	r3, [pc, #48]	; 329a0 <flatcc_builder_table_add@@Base+0x1bc>
   3296c:	movw	r2, #1784	; 0x6f8
   32970:	add	r0, pc, r0
   32974:	add	r1, pc, r1
   32978:	add	r3, pc, r3
   3297c:	bl	14f38 <__assert_fail@plt>
   32980:	muleq	r1, r2, r5
   32984:	andeq	r8, r1, r2, ror #26
   32988:			; <UNDEFINED> instruction: 0x00019bb4
   3298c:	andeq	r9, r1, r6, ror #23
   32990:	andeq	r8, r1, r2, asr #26
   32994:	muleq	r1, r4, fp
   32998:	andeq	r9, r1, r3, ror #29
   3299c:	andeq	r8, r1, r2, lsr #26
   329a0:	andeq	r9, r1, r4, ror fp

000329a4 <flatcc_builder_table_add_union_vector@@Base>:
   329a4:	push	{r4, r5, r6, r7, fp, lr}
   329a8:	add	fp, sp, #16
   329ac:	mov	r6, r0
   329b0:	ldr	r0, [r0, #32]
   329b4:	ldrh	r0, [r0, #14]
   329b8:	cmp	r0, #3
   329bc:	bne	32a28 <flatcc_builder_table_add_union_vector@@Base+0x84>
   329c0:	mov	r5, r1
   329c4:	clz	r1, r3
   329c8:	cmp	r2, #0
   329cc:	mov	r0, r2
   329d0:	mov	r4, r3
   329d4:	mov	r7, r2
   329d8:	movwne	r0, #1
   329dc:	lsr	r1, r1, #5
   329e0:	teq	r1, r0
   329e4:	beq	32a48 <flatcc_builder_table_add_union_vector@@Base+0xa4>
   329e8:	cmp	r7, #0
   329ec:	beq	32a20 <flatcc_builder_table_add_union_vector@@Base+0x7c>
   329f0:	sub	r1, r5, #1
   329f4:	mov	r0, r6
   329f8:	bl	32630 <flatcc_builder_table_add_offset@@Base>
   329fc:	cmp	r0, #0
   32a00:	beq	32a68 <flatcc_builder_table_add_union_vector@@Base+0xc4>
   32a04:	str	r7, [r0]
   32a08:	mov	r0, r6
   32a0c:	mov	r1, r5
   32a10:	bl	32630 <flatcc_builder_table_add_offset@@Base>
   32a14:	cmp	r0, #0
   32a18:	beq	32a88 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   32a1c:	str	r4, [r0]
   32a20:	mov	r0, #0
   32a24:	pop	{r4, r5, r6, r7, fp, pc}
   32a28:	ldr	r0, [pc, #120]	; 32aa8 <flatcc_builder_table_add_union_vector@@Base+0x104>
   32a2c:	ldr	r1, [pc, #120]	; 32aac <flatcc_builder_table_add_union_vector@@Base+0x108>
   32a30:	ldr	r3, [pc, #120]	; 32ab0 <flatcc_builder_table_add_union_vector@@Base+0x10c>
   32a34:	mov	r2, #1536	; 0x600
   32a38:	add	r0, pc, r0
   32a3c:	add	r1, pc, r1
   32a40:	add	r3, pc, r3
   32a44:	bl	14f38 <__assert_fail@plt>
   32a48:	ldr	r0, [pc, #100]	; 32ab4 <flatcc_builder_table_add_union_vector@@Base+0x110>
   32a4c:	ldr	r1, [pc, #100]	; 32ab8 <flatcc_builder_table_add_union_vector@@Base+0x114>
   32a50:	ldr	r3, [pc, #100]	; 32abc <flatcc_builder_table_add_union_vector@@Base+0x118>
   32a54:	movw	r2, #1537	; 0x601
   32a58:	add	r0, pc, r0
   32a5c:	add	r1, pc, r1
   32a60:	add	r3, pc, r3
   32a64:	bl	14f38 <__assert_fail@plt>
   32a68:	ldr	r0, [pc, #80]	; 32ac0 <flatcc_builder_table_add_union_vector@@Base+0x11c>
   32a6c:	ldr	r1, [pc, #80]	; 32ac4 <flatcc_builder_table_add_union_vector@@Base+0x120>
   32a70:	ldr	r3, [pc, #80]	; 32ac8 <flatcc_builder_table_add_union_vector@@Base+0x124>
   32a74:	movw	r2, #1540	; 0x604
   32a78:	add	r0, pc, r0
   32a7c:	add	r1, pc, r1
   32a80:	add	r3, pc, r3
   32a84:	bl	14f38 <__assert_fail@plt>
   32a88:	ldr	r0, [pc, #60]	; 32acc <flatcc_builder_table_add_union_vector@@Base+0x128>
   32a8c:	ldr	r1, [pc, #60]	; 32ad0 <flatcc_builder_table_add_union_vector@@Base+0x12c>
   32a90:	ldr	r3, [pc, #60]	; 32ad4 <flatcc_builder_table_add_union_vector@@Base+0x130>
   32a94:	movw	r2, #1544	; 0x608
   32a98:	add	r0, pc, r0
   32a9c:	add	r1, pc, r1
   32aa0:	add	r3, pc, r3
   32aa4:	bl	14f38 <__assert_fail@plt>
   32aa8:	andeq	r9, r1, sl, lsl #9
   32aac:	andeq	r8, r1, sl, asr ip
   32ab0:	andeq	r9, r1, r4, lsl #16
   32ab4:	andeq	r9, r1, pc, asr #16
   32ab8:	andeq	r8, r1, sl, lsr ip
   32abc:	andeq	r9, r1, r4, ror #15
   32ac0:			; <UNDEFINED> instruction: 0x000197b6
   32ac4:	andeq	r8, r1, sl, lsl ip
   32ac8:	andeq	r9, r1, r4, asr #15
   32acc:	muleq	r1, r6, r7
   32ad0:	strdeq	r8, [r1], -sl
   32ad4:	andeq	r9, r1, r4, lsr #15

00032ad8 <flatcc_builder_create_union_vector@@Base>:
   32ad8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32adc:	add	fp, sp, #28
   32ae0:	sub	sp, sp, #12
   32ae4:	mov	r6, #0
   32ae8:	mov	r4, r1
   32aec:	mov	r8, r0
   32af0:	mov	sl, r3
   32af4:	mov	r9, r2
   32af8:	mov	r7, #4
   32afc:	str	r6, [r0]
   32b00:	str	r6, [r0, #4]
   32b04:	mov	r0, r1
   32b08:	mov	r1, #4
   32b0c:	bl	2fe2c <flatcc_builder_start_buffer@@Base+0xc0>
   32b10:	cmp	r0, #0
   32b14:	beq	32b20 <flatcc_builder_create_union_vector@@Base+0x48>
   32b18:	sub	sp, fp, #28
   32b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32b20:	ldr	r0, [r4, #32]
   32b24:	mov	r1, #5
   32b28:	str	r7, [r0, #16]
   32b2c:	ldr	r0, [r4, #32]
   32b30:	str	r6, [r0, #20]
   32b34:	ldr	r0, [r4, #32]
   32b38:	strh	r1, [r0, #14]
   32b3c:	ldr	r1, [r4, #28]
   32b40:	ldr	r2, [r4, #60]	; 0x3c
   32b44:	ldr	r3, [r4, #64]	; 0x40
   32b48:	add	r2, r2, r1
   32b4c:	sub	r1, r3, r1
   32b50:	str	r2, [r4, #16]
   32b54:	mvn	r2, #3
   32b58:	cmn	r1, #4
   32b5c:	movcs	r1, r2
   32b60:	str	r1, [r4, #24]
   32b64:	str	r2, [r0, #4]
   32b68:	ldr	r1, [r0, #20]
   32b6c:	adds	r1, r1, sl
   32b70:	cmpcc	r1, #1073741824	; 0x40000000
   32b74:	bcc	32b98 <flatcc_builder_create_union_vector@@Base+0xc0>
   32b78:	ldr	r0, [pc, #644]	; 32e04 <flatcc_builder_create_union_vector@@Base+0x32c>
   32b7c:	ldr	r1, [pc, #644]	; 32e08 <flatcc_builder_create_union_vector@@Base+0x330>
   32b80:	ldr	r3, [pc, #644]	; 32e0c <flatcc_builder_create_union_vector@@Base+0x334>
   32b84:	mov	r2, #892	; 0x37c
   32b88:	add	r0, pc, r0
   32b8c:	add	r1, pc, r1
   32b90:	add	r3, pc, r3
   32b94:	bl	14f38 <__assert_fail@plt>
   32b98:	str	r1, [r0, #20]
   32b9c:	ldr	r7, [r4, #20]
   32ba0:	ldr	r0, [r4, #24]
   32ba4:	add	r1, r7, sl, lsl #2
   32ba8:	cmp	r1, r0
   32bac:	str	r1, [r4, #20]
   32bb0:	bcs	32bc4 <flatcc_builder_create_union_vector@@Base+0xec>
   32bb4:	ldr	r1, [r4, #16]
   32bb8:	adds	r2, r1, r7
   32bbc:	bne	32c2c <flatcc_builder_create_union_vector@@Base+0x154>
   32bc0:	b	32b18 <flatcc_builder_create_union_vector@@Base+0x40>
   32bc4:	ldr	r2, [r4, #28]
   32bc8:	ldr	r0, [r4, #40]	; 0x28
   32bcc:	ldr	r6, [r4, #48]	; 0x30
   32bd0:	mov	r3, #1
   32bd4:	str	r3, [sp]
   32bd8:	mov	r3, #1
   32bdc:	add	r1, r1, r2
   32be0:	add	r2, r1, #1
   32be4:	add	r1, r4, #60	; 0x3c
   32be8:	blx	r6
   32bec:	cmp	r0, #0
   32bf0:	bne	32b18 <flatcc_builder_create_union_vector@@Base+0x40>
   32bf4:	ldr	r0, [r4, #28]
   32bf8:	ldr	r1, [r4, #60]	; 0x3c
   32bfc:	ldr	r3, [r4, #64]	; 0x40
   32c00:	ldr	r2, [r4, #32]
   32c04:	add	r1, r1, r0
   32c08:	sub	r0, r3, r0
   32c0c:	mvn	r3, #3
   32c10:	cmn	r0, #4
   32c14:	str	r1, [r4, #16]
   32c18:	movcs	r0, r3
   32c1c:	str	r0, [r4, #24]
   32c20:	str	r3, [r2, #4]
   32c24:	adds	r2, r1, r7
   32c28:	beq	32b18 <flatcc_builder_create_union_vector@@Base+0x40>
   32c2c:	ldr	r7, [r4, #20]
   32c30:	add	r2, r7, sl
   32c34:	cmp	r2, r0
   32c38:	str	r2, [r4, #20]
   32c3c:	bcc	32ca0 <flatcc_builder_create_union_vector@@Base+0x1c8>
   32c40:	ldr	r1, [r4, #28]
   32c44:	ldr	r0, [r4, #40]	; 0x28
   32c48:	ldr	r6, [r4, #48]	; 0x30
   32c4c:	mov	r3, #1
   32c50:	str	r3, [sp]
   32c54:	mov	r3, #1
   32c58:	add	r1, r2, r1
   32c5c:	add	r2, r1, #1
   32c60:	add	r1, r4, #60	; 0x3c
   32c64:	blx	r6
   32c68:	cmp	r0, #0
   32c6c:	bne	32b18 <flatcc_builder_create_union_vector@@Base+0x40>
   32c70:	ldr	r0, [r4, #28]
   32c74:	ldr	r1, [r4, #60]	; 0x3c
   32c78:	ldr	r3, [r4, #64]	; 0x40
   32c7c:	ldr	r2, [r4, #32]
   32c80:	add	r1, r1, r0
   32c84:	sub	r0, r3, r0
   32c88:	mvn	r3, #3
   32c8c:	cmn	r0, #4
   32c90:	str	r1, [r4, #16]
   32c94:	movcs	r0, r3
   32c98:	str	r0, [r4, #24]
   32c9c:	str	r3, [r2, #4]
   32ca0:	adds	r5, r1, r7
   32ca4:	beq	32b18 <flatcc_builder_create_union_vector@@Base+0x40>
   32ca8:	cmp	sl, #0
   32cac:	beq	32d34 <flatcc_builder_create_union_vector@@Base+0x25c>
   32cb0:	and	ip, sl, #1
   32cb4:	mov	r0, #0
   32cb8:	cmp	sl, #1
   32cbc:	str	r5, [sp, #8]
   32cc0:	beq	32d18 <flatcc_builder_create_union_vector@@Base+0x240>
   32cc4:	ldr	r0, [sp, #8]
   32cc8:	sub	lr, sl, ip
   32ccc:	add	r2, r1, #4
   32cd0:	add	r6, r9, #8
   32cd4:	add	r7, r0, #1
   32cd8:	mov	r0, #0
   32cdc:	ldrb	r3, [r6, #-8]
   32ce0:	add	r5, r7, r0
   32ce4:	strb	r3, [r5, #-1]
   32ce8:	add	r3, r9, r0, lsl #3
   32cec:	ldr	r5, [r3, #4]
   32cf0:	str	r5, [r2, #-4]
   32cf4:	ldrb	r5, [r6]
   32cf8:	add	r6, r6, #16
   32cfc:	strb	r5, [r7, r0]
   32d00:	add	r0, r0, #2
   32d04:	ldr	r3, [r3, #12]
   32d08:	cmp	lr, r0
   32d0c:	str	r3, [r2]
   32d10:	add	r2, r2, #8
   32d14:	bne	32cdc <flatcc_builder_create_union_vector@@Base+0x204>
   32d18:	ldr	r5, [sp, #8]
   32d1c:	cmp	ip, #0
   32d20:	beq	32d34 <flatcc_builder_create_union_vector@@Base+0x25c>
   32d24:	ldrb	r2, [r9, r0, lsl #3]!
   32d28:	strb	r2, [r5, r0]
   32d2c:	ldr	r2, [r9, #4]
   32d30:	str	r2, [r1, r0, lsl #2]
   32d34:	mov	r0, r4
   32d38:	mov	r2, sl
   32d3c:	mov	r3, r5
   32d40:	bl	321c8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   32d44:	mov	r7, r0
   32d48:	mov	r6, #0
   32d4c:	cmp	r0, #0
   32d50:	beq	32d7c <flatcc_builder_create_union_vector@@Base+0x2a4>
   32d54:	mvn	r0, #0
   32d58:	mov	r1, #1
   32d5c:	mov	r2, sl
   32d60:	mov	r3, #1
   32d64:	str	r1, [sp]
   32d68:	str	r0, [sp, #4]
   32d6c:	mov	r0, r4
   32d70:	mov	r1, r5
   32d74:	bl	31f34 <flatcc_builder_create_vector@@Base>
   32d78:	b	32d80 <flatcc_builder_create_union_vector@@Base+0x2a8>
   32d7c:	mov	r0, #0
   32d80:	orr	r1, r6, r7
   32d84:	stm	r8, {r0, r1}
   32d88:	mov	r1, #0
   32d8c:	ldr	r0, [r4, #16]
   32d90:	ldr	r2, [r4, #20]
   32d94:	bl	14ee4 <memset@plt>
   32d98:	ldr	r0, [r4, #32]
   32d9c:	ldr	r1, [r4, #60]	; 0x3c
   32da0:	ldr	r2, [r4, #64]	; 0x40
   32da4:	ldr	r3, [r0, #8]
   32da8:	str	r3, [r4, #20]
   32dac:	ldr	r3, [r0]
   32db0:	str	r3, [r4, #28]
   32db4:	add	r1, r1, r3
   32db8:	ldr	r7, [r0, #4]
   32dbc:	str	r1, [r4, #16]
   32dc0:	sub	r1, r2, r3
   32dc4:	cmp	r1, r7
   32dc8:	movhi	r1, r7
   32dcc:	str	r1, [r4, #24]
   32dd0:	ldrh	r1, [r4, #130]	; 0x82
   32dd4:	ldrh	r2, [r4, #128]	; 0x80
   32dd8:	cmp	r2, r1
   32ddc:	strhcc	r1, [r4, #128]	; 0x80
   32de0:	ldrh	r1, [r0, #12]
   32de4:	sub	r0, r0, #36	; 0x24
   32de8:	str	r0, [r4, #32]
   32dec:	strh	r1, [r4, #130]	; 0x82
   32df0:	ldr	r0, [r4, #156]	; 0x9c
   32df4:	sub	r0, r0, #1
   32df8:	str	r0, [r4, #156]	; 0x9c
   32dfc:	sub	sp, fp, #28
   32e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32e04:	ldrdeq	r9, [r1], -r4
   32e08:	andeq	r8, r1, sl, lsl #22
   32e0c:	andeq	r9, r1, r7, ror #23

00032e10 <flatcc_builder_create_union_vector_direct@@Base>:
   32e10:	push	{r4, r5, r6, r7, fp, lr}
   32e14:	add	fp, sp, #16
   32e18:	sub	sp, sp, #8
   32e1c:	ldr	r7, [fp, #8]
   32e20:	mov	r5, r2
   32e24:	mov	r4, r0
   32e28:	mov	r0, #0
   32e2c:	mov	r6, r1
   32e30:	str	r0, [r4]
   32e34:	str	r0, [r4, #4]
   32e38:	mov	r0, r1
   32e3c:	mov	r1, r3
   32e40:	mov	r3, r5
   32e44:	mov	r2, r7
   32e48:	bl	321c8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   32e4c:	cmp	r0, #0
   32e50:	str	r0, [r4, #4]
   32e54:	beq	32e80 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   32e58:	mvn	r0, #0
   32e5c:	mov	r1, #1
   32e60:	mov	r2, r7
   32e64:	mov	r3, #1
   32e68:	str	r1, [sp]
   32e6c:	str	r0, [sp, #4]
   32e70:	mov	r0, r6
   32e74:	mov	r1, r5
   32e78:	bl	31f34 <flatcc_builder_create_vector@@Base>
   32e7c:	str	r0, [r4]
   32e80:	sub	sp, fp, #16
   32e84:	pop	{r4, r5, r6, r7, fp, pc}

00032e88 <flatcc_builder_start_union_vector@@Base>:
   32e88:	push	{r4, sl, fp, lr}
   32e8c:	add	fp, sp, #8
   32e90:	mov	r1, #4
   32e94:	mov	r4, r0
   32e98:	bl	2fe2c <flatcc_builder_start_buffer@@Base+0xc0>
   32e9c:	mov	r1, r0
   32ea0:	mvn	r0, #0
   32ea4:	cmp	r1, #0
   32ea8:	popne	{r4, sl, fp, pc}
   32eac:	ldr	r0, [r4, #32]
   32eb0:	mov	r1, #8
   32eb4:	mov	r2, #7
   32eb8:	str	r1, [r0, #16]
   32ebc:	mov	r0, #0
   32ec0:	ldr	r1, [r4, #32]
   32ec4:	str	r0, [r1, #20]
   32ec8:	ldr	r1, [r4, #32]
   32ecc:	strh	r2, [r1, #14]
   32ed0:	ldr	r2, [r4, #28]
   32ed4:	ldr	r3, [r4, #60]	; 0x3c
   32ed8:	ldr	ip, [r4, #64]	; 0x40
   32edc:	add	r3, r3, r2
   32ee0:	sub	r2, ip, r2
   32ee4:	str	r3, [r4, #16]
   32ee8:	mvn	r3, #3
   32eec:	cmn	r2, #4
   32ef0:	movcs	r2, r3
   32ef4:	str	r2, [r4, #24]
   32ef8:	str	r3, [r1, #4]
   32efc:	pop	{r4, sl, fp, pc}

00032f00 <flatcc_builder_end_union_vector@@Base>:
   32f00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32f04:	add	fp, sp, #28
   32f08:	sub	sp, sp, #20
   32f0c:	mov	r4, r0
   32f10:	mov	r0, #0
   32f14:	mov	r8, r1
   32f18:	str	r0, [r4]
   32f1c:	str	r0, [r4, #4]
   32f20:	ldr	r0, [r1, #32]
   32f24:	ldrh	r1, [r0, #14]
   32f28:	cmp	r1, #7
   32f2c:	bne	33130 <flatcc_builder_end_union_vector@@Base+0x230>
   32f30:	ldr	r9, [r0, #20]
   32f34:	ldr	r5, [r8, #20]
   32f38:	ldr	r2, [r8, #24]
   32f3c:	add	r0, r9, r9, lsl #2
   32f40:	add	r1, r5, r0
   32f44:	cmp	r1, r2
   32f48:	str	r1, [r8, #20]
   32f4c:	bcs	32f60 <flatcc_builder_end_union_vector@@Base+0x60>
   32f50:	ldr	r0, [r8, #16]
   32f54:	adds	r1, r0, r5
   32f58:	bne	32fc8 <flatcc_builder_end_union_vector@@Base+0xc8>
   32f5c:	b	33128 <flatcc_builder_end_union_vector@@Base+0x228>
   32f60:	ldr	r2, [r8, #28]
   32f64:	ldr	r0, [r8, #40]	; 0x28
   32f68:	ldr	r7, [r8, #48]	; 0x30
   32f6c:	mov	r3, #1
   32f70:	str	r3, [sp]
   32f74:	mov	r3, #1
   32f78:	add	r1, r1, r2
   32f7c:	add	r2, r1, #1
   32f80:	add	r1, r8, #60	; 0x3c
   32f84:	blx	r7
   32f88:	cmp	r0, #0
   32f8c:	bne	33128 <flatcc_builder_end_union_vector@@Base+0x228>
   32f90:	ldr	r1, [r8, #28]
   32f94:	ldr	r0, [r8, #60]	; 0x3c
   32f98:	ldr	r3, [r8, #64]	; 0x40
   32f9c:	ldr	r2, [r8, #32]
   32fa0:	add	r0, r0, r1
   32fa4:	sub	r1, r3, r1
   32fa8:	mvn	r3, #3
   32fac:	cmn	r1, #4
   32fb0:	str	r0, [r8, #16]
   32fb4:	movcs	r1, r3
   32fb8:	str	r1, [r8, #24]
   32fbc:	str	r3, [r2, #4]
   32fc0:	adds	r1, r0, r5
   32fc4:	beq	33128 <flatcc_builder_end_union_vector@@Base+0x228>
   32fc8:	add	sl, r1, r9, lsl #2
   32fcc:	cmp	r9, #0
   32fd0:	beq	33060 <flatcc_builder_end_union_vector@@Base+0x160>
   32fd4:	and	r2, r9, #1
   32fd8:	cmp	r9, #1
   32fdc:	str	r4, [sp, #12]
   32fe0:	str	r2, [sp, #16]
   32fe4:	mov	r2, #0
   32fe8:	beq	33040 <flatcc_builder_end_union_vector@@Base+0x140>
   32fec:	ldr	r2, [sp, #16]
   32ff0:	add	r5, r5, #4
   32ff4:	add	r6, r0, #8
   32ff8:	sub	lr, r9, r2
   32ffc:	mov	r2, #0
   33000:	ldrb	r7, [r6, #-8]
   33004:	mov	r4, sl
   33008:	add	r3, r0, r2, lsl #3
   3300c:	strb	r7, [r4, r2]!
   33010:	add	r7, r0, r5
   33014:	add	r2, r2, #2
   33018:	ldr	ip, [r3, #4]
   3301c:	cmp	lr, r2
   33020:	str	ip, [r7, #-4]
   33024:	ldrb	r7, [r6]
   33028:	add	r6, r6, #16
   3302c:	strb	r7, [r4, #1]
   33030:	ldr	r3, [r3, #12]
   33034:	str	r3, [r0, r5]
   33038:	add	r5, r5, #8
   3303c:	bne	33000 <flatcc_builder_end_union_vector@@Base+0x100>
   33040:	ldr	r3, [sp, #16]
   33044:	ldr	r4, [sp, #12]
   33048:	cmp	r3, #0
   3304c:	beq	33060 <flatcc_builder_end_union_vector@@Base+0x160>
   33050:	ldrb	r3, [r0, r2, lsl #3]!
   33054:	strb	r3, [sl, r2]
   33058:	ldr	r0, [r0, #4]
   3305c:	str	r0, [r1, r2, lsl #2]
   33060:	mov	r0, r8
   33064:	mov	r2, r9
   33068:	mov	r3, sl
   3306c:	bl	321c8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   33070:	mov	r5, r0
   33074:	mov	r6, #0
   33078:	cmp	r0, #0
   3307c:	beq	330a8 <flatcc_builder_end_union_vector@@Base+0x1a8>
   33080:	mvn	r0, #0
   33084:	mov	r1, #1
   33088:	mov	r2, r9
   3308c:	mov	r3, #1
   33090:	str	r1, [sp]
   33094:	str	r0, [sp, #4]
   33098:	mov	r0, r8
   3309c:	mov	r1, sl
   330a0:	bl	31f34 <flatcc_builder_create_vector@@Base>
   330a4:	b	330ac <flatcc_builder_end_union_vector@@Base+0x1ac>
   330a8:	mov	r0, #0
   330ac:	orr	r1, r6, r5
   330b0:	stm	r4, {r0, r1}
   330b4:	mov	r1, #0
   330b8:	ldr	r0, [r8, #16]
   330bc:	ldr	r2, [r8, #20]
   330c0:	bl	14ee4 <memset@plt>
   330c4:	ldr	r0, [r8, #32]
   330c8:	ldr	r1, [r8, #60]	; 0x3c
   330cc:	ldr	r2, [r8, #64]	; 0x40
   330d0:	ldr	r3, [r0, #8]
   330d4:	str	r3, [r8, #20]
   330d8:	ldr	r3, [r0]
   330dc:	str	r3, [r8, #28]
   330e0:	add	r1, r1, r3
   330e4:	ldr	r7, [r0, #4]
   330e8:	str	r1, [r8, #16]
   330ec:	sub	r1, r2, r3
   330f0:	cmp	r1, r7
   330f4:	movhi	r1, r7
   330f8:	str	r1, [r8, #24]
   330fc:	ldrh	r1, [r8, #130]	; 0x82
   33100:	ldrh	r2, [r8, #128]	; 0x80
   33104:	cmp	r2, r1
   33108:	strhcc	r1, [r8, #128]	; 0x80
   3310c:	ldrh	r1, [r0, #12]
   33110:	sub	r0, r0, #36	; 0x24
   33114:	str	r0, [r8, #32]
   33118:	strh	r1, [r8, #130]	; 0x82
   3311c:	ldr	r0, [r8, #156]	; 0x9c
   33120:	sub	r0, r0, #1
   33124:	str	r0, [r8, #156]	; 0x9c
   33128:	sub	sp, fp, #28
   3312c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33130:	ldr	r0, [pc, #24]	; 33150 <flatcc_builder_end_union_vector@@Base+0x250>
   33134:	ldr	r1, [pc, #24]	; 33154 <flatcc_builder_end_union_vector@@Base+0x254>
   33138:	ldr	r3, [pc, #24]	; 33158 <flatcc_builder_end_union_vector@@Base+0x258>
   3313c:	movw	r2, #1617	; 0x651
   33140:	add	r0, pc, r0
   33144:	add	r1, pc, r1
   33148:	add	r3, pc, r3
   3314c:	bl	14f38 <__assert_fail@plt>
   33150:	andeq	r9, r1, pc, lsl #3
   33154:	andeq	r8, r1, r2, asr r5
   33158:			; <UNDEFINED> instruction: 0x000191b9

0003315c <flatcc_builder_union_vector_count@@Base>:
   3315c:	ldr	r0, [r0, #32]
   33160:	ldr	r0, [r0, #20]
   33164:	bx	lr

00033168 <flatcc_builder_union_vector_edit@@Base>:
   33168:	ldr	r0, [r0, #16]
   3316c:	bx	lr

00033170 <flatcc_builder_extend_union_vector@@Base>:
   33170:	push	{r4, r5, fp, lr}
   33174:	add	fp, sp, #8
   33178:	sub	sp, sp, #8
   3317c:	mov	r4, r0
   33180:	ldr	r0, [r0, #32]
   33184:	ldr	r2, [r0, #20]
   33188:	adds	r2, r2, r1
   3318c:	cmpcc	r2, #536870912	; 0x20000000
   33190:	bcc	331b4 <flatcc_builder_extend_union_vector@@Base+0x44>
   33194:	ldr	r0, [pc, #184]	; 33254 <flatcc_builder_extend_union_vector@@Base+0xe4>
   33198:	ldr	r1, [pc, #184]	; 33258 <flatcc_builder_extend_union_vector@@Base+0xe8>
   3319c:	ldr	r3, [pc, #184]	; 3325c <flatcc_builder_extend_union_vector@@Base+0xec>
   331a0:	mov	r2, #892	; 0x37c
   331a4:	add	r0, pc, r0
   331a8:	add	r1, pc, r1
   331ac:	add	r3, pc, r3
   331b0:	bl	14f38 <__assert_fail@plt>
   331b4:	str	r2, [r0, #20]
   331b8:	ldr	r5, [r4, #20]
   331bc:	ldr	r0, [r4, #24]
   331c0:	add	r1, r5, r1, lsl #3
   331c4:	cmp	r1, r0
   331c8:	str	r1, [r4, #20]
   331cc:	bcs	331d8 <flatcc_builder_extend_union_vector@@Base+0x68>
   331d0:	ldr	r0, [r4, #16]
   331d4:	b	33248 <flatcc_builder_extend_union_vector@@Base+0xd8>
   331d8:	ldr	r2, [r4, #28]
   331dc:	ldr	r0, [r4, #40]	; 0x28
   331e0:	ldr	ip, [r4, #48]	; 0x30
   331e4:	mov	r3, #1
   331e8:	str	r3, [sp]
   331ec:	mov	r3, #1
   331f0:	add	r1, r1, r2
   331f4:	add	r2, r1, #1
   331f8:	add	r1, r4, #60	; 0x3c
   331fc:	blx	ip
   33200:	mov	r1, r0
   33204:	mov	r0, #0
   33208:	cmp	r1, #0
   3320c:	beq	33218 <flatcc_builder_extend_union_vector@@Base+0xa8>
   33210:	sub	sp, fp, #8
   33214:	pop	{r4, r5, fp, pc}
   33218:	ldr	r1, [r4, #28]
   3321c:	ldr	r0, [r4, #60]	; 0x3c
   33220:	ldr	r3, [r4, #64]	; 0x40
   33224:	ldr	r2, [r4, #32]
   33228:	add	r0, r0, r1
   3322c:	sub	r1, r3, r1
   33230:	mvn	r3, #3
   33234:	cmn	r1, #4
   33238:	str	r0, [r4, #16]
   3323c:	movcs	r1, r3
   33240:	str	r1, [r4, #24]
   33244:	str	r3, [r2, #4]
   33248:	add	r0, r0, r5
   3324c:	sub	sp, fp, #8
   33250:	pop	{r4, r5, fp, pc}
   33254:			; <UNDEFINED> instruction: 0x000195b8
   33258:	andeq	r8, r1, lr, ror #9
   3325c:	andeq	r9, r1, fp, asr #11

00033260 <flatcc_builder_truncate_union_vector@@Base>:
   33260:	push	{fp, lr}
   33264:	mov	fp, sp
   33268:	ldr	r2, [r0, #32]
   3326c:	ldrh	r3, [r2, #14]
   33270:	cmp	r3, #7
   33274:	bne	332bc <flatcc_builder_truncate_union_vector@@Base+0x5c>
   33278:	ldr	r3, [r2, #20]
   3327c:	cmp	r3, r1
   33280:	bcc	332dc <flatcc_builder_truncate_union_vector@@Base+0x7c>
   33284:	sub	r3, r3, r1
   33288:	str	r3, [r2, #20]
   3328c:	ldr	r2, [r0, #32]
   33290:	ldr	r3, [r0, #20]
   33294:	ldr	ip, [r0, #16]
   33298:	ldr	r2, [r2, #16]
   3329c:	mls	r3, r2, r1, r3
   332a0:	mul	r2, r2, r1
   332a4:	mov	r1, #0
   332a8:	str	r3, [r0, #20]
   332ac:	add	r0, ip, r3
   332b0:	bl	14ee4 <memset@plt>
   332b4:	mov	r0, #0
   332b8:	pop	{fp, pc}
   332bc:	ldr	r0, [pc, #56]	; 332fc <flatcc_builder_truncate_union_vector@@Base+0x9c>
   332c0:	ldr	r1, [pc, #56]	; 33300 <flatcc_builder_truncate_union_vector@@Base+0xa0>
   332c4:	ldr	r3, [pc, #56]	; 33304 <flatcc_builder_truncate_union_vector@@Base+0xa4>
   332c8:	movw	r2, #1665	; 0x681
   332cc:	add	r0, pc, r0
   332d0:	add	r1, pc, r1
   332d4:	add	r3, pc, r3
   332d8:	bl	14f38 <__assert_fail@plt>
   332dc:	ldr	r0, [pc, #36]	; 33308 <flatcc_builder_truncate_union_vector@@Base+0xa8>
   332e0:	ldr	r1, [pc, #36]	; 3330c <flatcc_builder_truncate_union_vector@@Base+0xac>
   332e4:	ldr	r3, [pc, #36]	; 33310 <flatcc_builder_truncate_union_vector@@Base+0xb0>
   332e8:	movw	r2, #1666	; 0x682
   332ec:	add	r0, pc, r0
   332f0:	add	r1, pc, r1
   332f4:	add	r3, pc, r3
   332f8:	bl	14f38 <__assert_fail@plt>
   332fc:	andeq	r9, r1, r3
   33300:	andeq	r8, r1, r6, asr #7
   33304:	andeq	r9, r1, r0, lsl #1
   33308:	andeq	r8, r1, r7, asr #20
   3330c:	andeq	r8, r1, r6, lsr #7
   33310:	andeq	r9, r1, r0, rrx

00033314 <flatcc_builder_union_vector_push@@Base>:
   33314:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   33318:	add	fp, sp, #24
   3331c:	sub	sp, sp, #8
   33320:	mov	r7, r0
   33324:	ldr	r0, [r0, #32]
   33328:	mov	r9, r1
   3332c:	ldrh	r1, [r0, #14]
   33330:	cmp	r1, #7
   33334:	bne	333f0 <flatcc_builder_union_vector_push@@Base+0xdc>
   33338:	ldr	r1, [r0, #20]
   3333c:	mov	r6, #0
   33340:	cmn	r1, #-536870911	; 0xe0000001
   33344:	beq	333e4 <flatcc_builder_union_vector_push@@Base+0xd0>
   33348:	add	r1, r1, #1
   3334c:	mov	r8, r2
   33350:	str	r1, [r0, #20]
   33354:	ldr	r4, [r7, #20]
   33358:	ldr	r0, [r7, #24]
   3335c:	add	r1, r4, #8
   33360:	cmp	r1, r0
   33364:	str	r1, [r7, #20]
   33368:	bcs	33374 <flatcc_builder_union_vector_push@@Base+0x60>
   3336c:	ldr	r0, [r7, #16]
   33370:	b	333d4 <flatcc_builder_union_vector_push@@Base+0xc0>
   33374:	ldr	r1, [r7, #28]
   33378:	ldr	r0, [r7, #40]	; 0x28
   3337c:	ldr	r5, [r7, #48]	; 0x30
   33380:	mov	r2, #1
   33384:	mov	r3, #1
   33388:	str	r2, [sp]
   3338c:	add	r1, r4, r1
   33390:	add	r2, r1, #9
   33394:	add	r1, r7, #60	; 0x3c
   33398:	blx	r5
   3339c:	cmp	r0, #0
   333a0:	bne	333e4 <flatcc_builder_union_vector_push@@Base+0xd0>
   333a4:	ldr	r1, [r7, #28]
   333a8:	ldr	r0, [r7, #60]	; 0x3c
   333ac:	ldr	r3, [r7, #64]	; 0x40
   333b0:	ldr	r2, [r7, #32]
   333b4:	add	r0, r0, r1
   333b8:	sub	r1, r3, r1
   333bc:	mvn	r3, #3
   333c0:	cmn	r1, #4
   333c4:	str	r0, [r7, #16]
   333c8:	movcs	r1, r3
   333cc:	str	r1, [r7, #24]
   333d0:	str	r3, [r2, #4]
   333d4:	adds	r0, r0, r4
   333d8:	movne	r6, r0
   333dc:	strne	r9, [r0]
   333e0:	strne	r8, [r0, #4]
   333e4:	mov	r0, r6
   333e8:	sub	sp, fp, #24
   333ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   333f0:	ldr	r0, [pc, #24]	; 33410 <flatcc_builder_union_vector_push@@Base+0xfc>
   333f4:	ldr	r1, [pc, #24]	; 33414 <flatcc_builder_union_vector_push@@Base+0x100>
   333f8:	ldr	r3, [pc, #24]	; 33418 <flatcc_builder_union_vector_push@@Base+0x104>
   333fc:	movw	r2, #1677	; 0x68d
   33400:	add	r0, pc, r0
   33404:	add	r1, pc, r1
   33408:	add	r3, pc, r3
   3340c:	bl	14f38 <__assert_fail@plt>
   33410:	andeq	r8, r1, pc, asr #29
   33414:	muleq	r1, r2, r2
   33418:	muleq	r1, r1, pc	; <UNPREDICTABLE>

0003341c <flatcc_builder_append_union_vector@@Base>:
   3341c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   33420:	add	fp, sp, #24
   33424:	sub	sp, sp, #8
   33428:	mov	r6, r0
   3342c:	ldr	r0, [r0, #32]
   33430:	mov	r8, r1
   33434:	ldrh	r1, [r0, #14]
   33438:	cmp	r1, #7
   3343c:	bne	3352c <flatcc_builder_append_union_vector@@Base+0x110>
   33440:	ldr	r1, [r0, #20]
   33444:	mov	r5, r2
   33448:	adds	r1, r1, r2
   3344c:	cmpcc	r1, #536870912	; 0x20000000
   33450:	bcc	33474 <flatcc_builder_append_union_vector@@Base+0x58>
   33454:	ldr	r0, [pc, #252]	; 33558 <flatcc_builder_append_union_vector@@Base+0x13c>
   33458:	ldr	r1, [pc, #252]	; 3355c <flatcc_builder_append_union_vector@@Base+0x140>
   3345c:	ldr	r3, [pc, #252]	; 33560 <flatcc_builder_append_union_vector@@Base+0x144>
   33460:	mov	r2, #892	; 0x37c
   33464:	add	r0, pc, r0
   33468:	add	r1, pc, r1
   3346c:	add	r3, pc, r3
   33470:	bl	14f38 <__assert_fail@plt>
   33474:	str	r1, [r0, #20]
   33478:	ldr	r4, [r6, #20]
   3347c:	ldr	r0, [r6, #24]
   33480:	add	r1, r4, r5, lsl #3
   33484:	cmp	r1, r0
   33488:	str	r1, [r6, #20]
   3348c:	bcs	334b0 <flatcc_builder_append_union_vector@@Base+0x94>
   33490:	ldr	r0, [r6, #16]
   33494:	adds	r7, r0, r4
   33498:	beq	3351c <flatcc_builder_append_union_vector@@Base+0x100>
   3349c:	lsl	r2, r5, #3
   334a0:	mov	r0, r7
   334a4:	mov	r1, r8
   334a8:	bl	14e54 <memcpy@plt>
   334ac:	b	33520 <flatcc_builder_append_union_vector@@Base+0x104>
   334b0:	ldr	r2, [r6, #28]
   334b4:	ldr	r0, [r6, #40]	; 0x28
   334b8:	ldr	r7, [r6, #48]	; 0x30
   334bc:	mov	r3, #1
   334c0:	str	r3, [sp]
   334c4:	mov	r3, #1
   334c8:	add	r1, r1, r2
   334cc:	add	r2, r1, #1
   334d0:	add	r1, r6, #60	; 0x3c
   334d4:	blx	r7
   334d8:	mov	r7, #0
   334dc:	cmp	r0, #0
   334e0:	bne	33520 <flatcc_builder_append_union_vector@@Base+0x104>
   334e4:	ldr	r1, [r6, #28]
   334e8:	ldr	r0, [r6, #60]	; 0x3c
   334ec:	ldr	r3, [r6, #64]	; 0x40
   334f0:	ldr	r2, [r6, #32]
   334f4:	add	r0, r0, r1
   334f8:	sub	r1, r3, r1
   334fc:	mvn	r3, #3
   33500:	cmn	r1, #4
   33504:	str	r0, [r6, #16]
   33508:	movcs	r1, r3
   3350c:	str	r1, [r6, #24]
   33510:	str	r3, [r2, #4]
   33514:	adds	r7, r0, r4
   33518:	bne	3349c <flatcc_builder_append_union_vector@@Base+0x80>
   3351c:	mov	r7, #0
   33520:	mov	r0, r7
   33524:	sub	sp, fp, #24
   33528:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3352c:	ldr	r0, [pc, #24]	; 3354c <flatcc_builder_append_union_vector@@Base+0x130>
   33530:	ldr	r1, [pc, #24]	; 33550 <flatcc_builder_append_union_vector@@Base+0x134>
   33534:	ldr	r3, [pc, #24]	; 33554 <flatcc_builder_append_union_vector@@Base+0x138>
   33538:	movw	r2, #1692	; 0x69c
   3353c:	add	r0, pc, r0
   33540:	add	r1, pc, r1
   33544:	add	r3, pc, r3
   33548:	bl	14f38 <__assert_fail@plt>
   3354c:	muleq	r1, r3, sp
   33550:	andeq	r8, r1, r6, asr r1
   33554:	andeq	r8, r1, r2, asr #29
   33558:	strdeq	r9, [r1], -r8
   3355c:	andeq	r8, r1, lr, lsr #4
   33560:	andeq	r9, r1, fp, lsl #6

00033564 <flatcc_builder_create_string@@Base>:
   33564:	push	{r4, r5, r6, sl, fp, lr}
   33568:	add	fp, sp, #16
   3356c:	sub	sp, sp, #80	; 0x50
   33570:	str	r2, [fp, #-20]	; 0xffffffec
   33574:	mvn	r5, r2
   33578:	mov	r6, r0
   3357c:	sub	r3, fp, #20
   33580:	cmp	r2, #0
   33584:	add	lr, sp, #4
   33588:	ldr	ip, [r0, #136]	; 0x88
   3358c:	mov	r0, #4
   33590:	str	r0, [sp, #16]
   33594:	str	r3, [sp, #12]
   33598:	str	r0, [sp, #4]
   3359c:	mov	r3, #1
   335a0:	addne	r0, r2, #4
   335a4:	str	r3, [sp, #8]
   335a8:	strne	r2, [sp, #24]
   335ac:	strne	r1, [sp, #20]
   335b0:	movne	r3, #2
   335b4:	strne	r3, [sp, #8]
   335b8:	strne	r0, [sp, #4]
   335bc:	add	r5, ip, r5
   335c0:	and	r5, r5, #3
   335c4:	add	r5, r5, #1
   335c8:	add	r1, r0, r5
   335cc:	add	r0, lr, r3, lsl #3
   335d0:	str	r1, [sp, #4]
   335d4:	cmp	r1, #0
   335d8:	ldr	r2, [pc, #132]	; 33664 <flatcc_builder_create_string@@Base+0x100>
   335dc:	ldr	r2, [pc, r2]
   335e0:	str	r2, [r0, #8]
   335e4:	add	r2, r3, #1
   335e8:	str	r5, [r0, #12]
   335ec:	str	r2, [sp, #8]
   335f0:	ble	33644 <flatcc_builder_create_string@@Base+0xe0>
   335f4:	ldr	r0, [r6, #36]	; 0x24
   335f8:	ldr	r4, [r6, #44]	; 0x2c
   335fc:	sub	r5, ip, r1
   33600:	str	r1, [sp]
   33604:	add	r1, lr, #8
   33608:	mov	r3, r5
   3360c:	blx	r4
   33610:	cmp	r0, #0
   33614:	streq	r5, [r6, #136]	; 0x88
   33618:	moveq	r0, r5
   3361c:	subeq	sp, fp, #16
   33620:	popeq	{r4, r5, r6, sl, fp, pc}
   33624:	ldr	r0, [pc, #72]	; 33674 <flatcc_builder_create_string@@Base+0x110>
   33628:	ldr	r1, [pc, #72]	; 33678 <flatcc_builder_create_string@@Base+0x114>
   3362c:	ldr	r3, [pc, #72]	; 3367c <flatcc_builder_create_string@@Base+0x118>
   33630:	movw	r2, #651	; 0x28b
   33634:	add	r0, pc, r0
   33638:	add	r1, pc, r1
   3363c:	add	r3, pc, r3
   33640:	bl	14f38 <__assert_fail@plt>
   33644:	ldr	r0, [pc, #28]	; 33668 <flatcc_builder_create_string@@Base+0x104>
   33648:	ldr	r1, [pc, #28]	; 3366c <flatcc_builder_create_string@@Base+0x108>
   3364c:	ldr	r3, [pc, #28]	; 33670 <flatcc_builder_create_string@@Base+0x10c>
   33650:	movw	r2, #647	; 0x287
   33654:	add	r0, pc, r0
   33658:	add	r1, pc, r1
   3365c:	add	r3, pc, r3
   33660:	bl	14f38 <__assert_fail@plt>
   33664:	andeq	fp, r2, r8, lsl #21
   33668:	strdeq	r9, [r1], -pc	; <UNPREDICTABLE>
   3366c:	andeq	r8, r1, lr, lsr r0
   33670:	strheq	r9, [r1], -r6
   33674:	andeq	r9, r1, pc, lsl r2
   33678:	andeq	r8, r1, lr, asr r0
   3367c:	ldrdeq	r9, [r1], -r6

00033680 <flatcc_builder_create_string_str@@Base>:
   33680:	push	{r4, r5, fp, lr}
   33684:	add	fp, sp, #8
   33688:	mov	r5, r0
   3368c:	mov	r0, r1
   33690:	mov	r4, r1
   33694:	bl	14ec0 <strlen@plt>
   33698:	mov	r2, r0
   3369c:	mov	r0, r5
   336a0:	mov	r1, r4
   336a4:	pop	{r4, r5, fp, lr}
   336a8:	b	33564 <flatcc_builder_create_string@@Base>

000336ac <flatcc_builder_create_string_strn@@Base>:
   336ac:	push	{r4, r5, r6, sl, fp, lr}
   336b0:	add	fp, sp, #16
   336b4:	mov	r6, r0
   336b8:	mov	r5, r1
   336bc:	mov	r0, r1
   336c0:	mov	r1, #0
   336c4:	mov	r4, r2
   336c8:	bl	14f08 <memchr@plt>
   336cc:	cmp	r0, #0
   336d0:	mov	r1, r5
   336d4:	subne	r4, r0, r5
   336d8:	mov	r0, r6
   336dc:	mov	r2, r4
   336e0:	pop	{r4, r5, r6, sl, fp, lr}
   336e4:	b	33564 <flatcc_builder_create_string@@Base>

000336e8 <flatcc_builder_end_string@@Base>:
   336e8:	push	{r4, r5, fp, lr}
   336ec:	add	fp, sp, #8
   336f0:	mov	r4, r0
   336f4:	ldr	r0, [r0, #32]
   336f8:	ldrh	r1, [r0, #14]
   336fc:	cmp	r1, #6
   33700:	bne	337a8 <flatcc_builder_end_string@@Base+0xc0>
   33704:	ldr	r2, [r0, #20]
   33708:	ldr	r0, [r4, #20]
   3370c:	cmp	r2, r0
   33710:	bne	337c8 <flatcc_builder_end_string@@Base+0xe0>
   33714:	ldr	r1, [r4, #16]
   33718:	mov	r0, r4
   3371c:	bl	33564 <flatcc_builder_create_string@@Base>
   33720:	mov	r5, r0
   33724:	cmp	r0, #0
   33728:	beq	337a0 <flatcc_builder_end_string@@Base+0xb8>
   3372c:	ldr	r0, [r4, #16]
   33730:	ldr	r2, [r4, #20]
   33734:	mov	r1, #0
   33738:	bl	14ee4 <memset@plt>
   3373c:	ldr	r0, [r4, #32]
   33740:	ldr	r1, [r4, #60]	; 0x3c
   33744:	ldr	ip, [r4, #64]	; 0x40
   33748:	ldr	r3, [r0, #8]
   3374c:	str	r3, [r4, #20]
   33750:	ldr	r3, [r0]
   33754:	str	r3, [r4, #28]
   33758:	add	r1, r1, r3
   3375c:	ldr	r2, [r0, #4]
   33760:	str	r1, [r4, #16]
   33764:	sub	r1, ip, r3
   33768:	cmp	r1, r2
   3376c:	movhi	r1, r2
   33770:	str	r1, [r4, #24]
   33774:	ldrh	r1, [r4, #130]	; 0x82
   33778:	ldrh	r2, [r4, #128]	; 0x80
   3377c:	cmp	r2, r1
   33780:	strhcc	r1, [r4, #128]	; 0x80
   33784:	ldrh	r1, [r0, #12]
   33788:	sub	r0, r0, #36	; 0x24
   3378c:	str	r0, [r4, #32]
   33790:	strh	r1, [r4, #130]	; 0x82
   33794:	ldr	r0, [r4, #156]	; 0x9c
   33798:	sub	r0, r0, #1
   3379c:	str	r0, [r4, #156]	; 0x9c
   337a0:	mov	r0, r5
   337a4:	pop	{r4, r5, fp, pc}
   337a8:	ldr	r0, [pc, #56]	; 337e8 <flatcc_builder_end_string@@Base+0x100>
   337ac:	ldr	r1, [pc, #56]	; 337ec <flatcc_builder_end_string@@Base+0x104>
   337b0:	ldr	r3, [pc, #56]	; 337f0 <flatcc_builder_end_string@@Base+0x108>
   337b4:	movw	r2, #1732	; 0x6c4
   337b8:	add	r0, pc, r0
   337bc:	add	r1, pc, r1
   337c0:	add	r3, pc, r3
   337c4:	bl	14f38 <__assert_fail@plt>
   337c8:	ldr	r0, [pc, #36]	; 337f4 <flatcc_builder_end_string@@Base+0x10c>
   337cc:	ldr	r1, [pc, #36]	; 337f8 <flatcc_builder_end_string@@Base+0x110>
   337d0:	ldr	r3, [pc, #36]	; 337fc <flatcc_builder_end_string@@Base+0x114>
   337d4:	movw	r2, #1733	; 0x6c5
   337d8:	add	r0, pc, r0
   337dc:	add	r1, pc, r1
   337e0:	add	r3, pc, r3
   337e4:	bl	14f38 <__assert_fail@plt>
   337e8:	andeq	r8, r1, sl, lsl r4
   337ec:	ldrdeq	r7, [r1], -sl
   337f0:	andeq	r8, r1, r5, asr #25
   337f4:	strdeq	r8, [r1], -r0
   337f8:			; <UNDEFINED> instruction: 0x00017eba
   337fc:	andeq	r8, r1, r5, lsr #25

00033800 <flatcc_builder_string_edit@@Base>:
   33800:	ldr	r0, [r0, #16]
   33804:	bx	lr

00033808 <flatcc_builder_string_len@@Base>:
   33808:	ldr	r0, [r0, #32]
   3380c:	ldr	r0, [r0, #20]
   33810:	bx	lr

00033814 <flatcc_builder_table_edit@@Base>:
   33814:	push	{fp, lr}
   33818:	mov	fp, sp
   3381c:	ldr	r2, [r0, #32]
   33820:	ldrh	r2, [r2, #14]
   33824:	cmp	r2, #3
   33828:	ldreq	r2, [r0, #16]
   3382c:	ldreq	r0, [r0, #20]
   33830:	addeq	r0, r2, r0
   33834:	subeq	r0, r0, r1
   33838:	popeq	{fp, pc}
   3383c:	ldr	r0, [pc, #24]	; 3385c <flatcc_builder_table_edit@@Base+0x48>
   33840:	ldr	r1, [pc, #24]	; 33860 <flatcc_builder_table_edit@@Base+0x4c>
   33844:	ldr	r3, [pc, #24]	; 33864 <flatcc_builder_table_edit@@Base+0x50>
   33848:	movw	r2, #1794	; 0x702
   3384c:	add	r0, pc, r0
   33850:	add	r1, pc, r1
   33854:	add	r3, pc, r3
   33858:	bl	14f38 <__assert_fail@plt>
   3385c:	andeq	r8, r1, r6, ror r6
   33860:	andeq	r7, r1, r6, asr #28
   33864:	andeq	r8, r1, r6, lsr #26

00033868 <flatcc_builder_table_add_copy@@Base>:
   33868:	push	{r4, r5, r6, sl, fp, lr}
   3386c:	add	fp, sp, #16
   33870:	mov	r4, r3
   33874:	ldr	r3, [fp, #8]
   33878:	mov	r5, r2
   3387c:	mov	r2, r4
   33880:	bl	327e4 <flatcc_builder_table_add@@Base>
   33884:	mov	r6, r0
   33888:	cmp	r0, #0
   3388c:	beq	338a0 <flatcc_builder_table_add_copy@@Base+0x38>
   33890:	mov	r0, r6
   33894:	mov	r1, r5
   33898:	mov	r2, r4
   3389c:	bl	14e54 <memcpy@plt>
   338a0:	mov	r0, r6
   338a4:	pop	{r4, r5, r6, sl, fp, pc}

000338a8 <flatcc_builder_push_buffer_alignment@@Base>:
   338a8:	ldrh	r1, [r0, #128]	; 0x80
   338ac:	mov	r2, #4
   338b0:	strh	r2, [r0, #128]	; 0x80
   338b4:	mov	r0, r1
   338b8:	bx	lr

000338bc <flatcc_builder_pop_buffer_alignment@@Base>:
   338bc:	ldrh	r2, [r0, #128]	; 0x80
   338c0:	cmp	r2, r1
   338c4:	strhcc	r1, [r0, #128]	; 0x80
   338c8:	bx	lr

000338cc <flatcc_builder_get_buffer_alignment@@Base>:
   338cc:	ldrh	r0, [r0, #128]	; 0x80
   338d0:	bx	lr

000338d4 <flatcc_builder_set_vtable_clustering@@Base>:
   338d4:	clz	r1, r1
   338d8:	lsr	r1, r1, #5
   338dc:	str	r1, [r0, #180]	; 0xb4
   338e0:	bx	lr

000338e4 <flatcc_builder_set_block_align@@Base>:
   338e4:	strh	r1, [r0, #132]	; 0x84
   338e8:	bx	lr

000338ec <flatcc_builder_get_level@@Base>:
   338ec:	ldr	r0, [r0, #156]	; 0x9c
   338f0:	bx	lr

000338f4 <flatcc_builder_set_max_level@@Base>:
   338f4:	str	r1, [r0, #176]	; 0xb0
   338f8:	ldr	r2, [r0, #160]	; 0xa0
   338fc:	cmp	r2, r1
   33900:	strlt	r1, [r0, #160]	; 0xa0
   33904:	bx	lr

00033908 <flatcc_builder_get_buffer_size@@Base>:
   33908:	ldr	r1, [r0, #136]	; 0x88
   3390c:	ldr	r0, [r0, #140]	; 0x8c
   33910:	sub	r0, r0, r1
   33914:	bx	lr

00033918 <flatcc_builder_get_buffer_start@@Base>:
   33918:	ldr	r0, [r0, #136]	; 0x88
   3391c:	bx	lr

00033920 <flatcc_builder_get_buffer_end@@Base>:
   33920:	ldr	r0, [r0, #140]	; 0x8c
   33924:	bx	lr

00033928 <flatcc_builder_set_vtable_cache_limit@@Base>:
   33928:	str	r1, [r0, #172]	; 0xac
   3392c:	bx	lr

00033930 <flatcc_builder_set_identifier@@Base>:
   33930:	ldr	r2, [pc, #20]	; 3394c <flatcc_builder_set_identifier@@Base+0x1c>
   33934:	cmp	r1, #0
   33938:	ldr	r2, [pc, r2]
   3393c:	movne	r2, r1
   33940:	ldr	r1, [r2]
   33944:	str	r1, [r0, #168]	; 0xa8
   33948:	bx	lr
   3394c:	andeq	fp, r2, ip, lsr #14

00033950 <flatcc_builder_get_type@@Base>:
   33950:	ldr	r0, [r0, #32]
   33954:	cmp	r0, #0
   33958:	ldrhne	r0, [r0, #14]
   3395c:	moveq	r0, #0
   33960:	bx	lr

00033964 <flatcc_builder_get_type_at@@Base>:
   33964:	mov	r2, r0
   33968:	mov	r0, #0
   3396c:	cmp	r1, #1
   33970:	blt	33994 <flatcc_builder_get_type_at@@Base+0x30>
   33974:	ldr	r3, [r2, #156]	; 0x9c
   33978:	cmp	r3, r1
   3397c:	bxlt	lr
   33980:	sub	r0, r1, r3
   33984:	ldr	r1, [r2, #32]
   33988:	add	r0, r0, r0, lsl #3
   3398c:	add	r0, r1, r0, lsl #2
   33990:	ldrh	r0, [r0, #14]
   33994:	bx	lr

00033998 <flatcc_builder_get_direct_buffer@@Base>:
   33998:	ldr	r2, [r0, #184]	; 0xb8
   3399c:	cmp	r2, #0
   339a0:	beq	339b4 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   339a4:	ldr	r2, [r0, #188]	; 0xbc
   339a8:	ldr	r3, [r0, #192]	; 0xc0
   339ac:	cmp	r2, r3
   339b0:	beq	339cc <flatcc_builder_get_direct_buffer@@Base+0x34>
   339b4:	cmp	r1, #0
   339b8:	moveq	r0, #0
   339bc:	bxeq	lr
   339c0:	mov	r0, #0
   339c4:	str	r0, [r1]
   339c8:	bx	lr
   339cc:	cmp	r1, #0
   339d0:	ldrne	r2, [r0, #212]	; 0xd4
   339d4:	strne	r2, [r1]
   339d8:	ldr	r0, [r0, #196]	; 0xc4
   339dc:	bx	lr

000339e0 <flatcc_builder_copy_buffer@@Base>:
   339e0:	push	{fp, lr}
   339e4:	mov	fp, sp
   339e8:	ldr	r3, [r0, #184]	; 0xb8
   339ec:	cmp	r3, #0
   339f0:	beq	33a24 <flatcc_builder_copy_buffer@@Base+0x44>
   339f4:	add	r0, r0, #188	; 0xbc
   339f8:	bl	34130 <flatcc_emitter_copy_buffer@@Base>
   339fc:	cmp	r0, #0
   33a00:	popne	{fp, pc}
   33a04:	ldr	r0, [pc, #32]	; 33a2c <flatcc_builder_copy_buffer@@Base+0x4c>
   33a08:	ldr	r1, [pc, #32]	; 33a30 <flatcc_builder_copy_buffer@@Base+0x50>
   33a0c:	ldr	r3, [pc, #32]	; 33a34 <flatcc_builder_copy_buffer@@Base+0x54>
   33a10:	movw	r2, #1926	; 0x786
   33a14:	add	r0, pc, r0
   33a18:	add	r1, pc, r1
   33a1c:	add	r3, pc, r3
   33a20:	bl	14f38 <__assert_fail@plt>
   33a24:	mov	r0, #0
   33a28:	pop	{fp, pc}
   33a2c:	andeq	r3, r1, sl, ror #31
   33a30:	andeq	r7, r1, lr, ror ip
   33a34:	andeq	r8, r1, r9, ror #23

00033a38 <flatcc_builder_finalize_buffer@@Base>:
   33a38:	push	{r4, r5, r6, sl, fp, lr}
   33a3c:	add	fp, sp, #16
   33a40:	mov	r5, r0
   33a44:	ldr	r0, [r0, #136]	; 0x88
   33a48:	cmp	r1, #0
   33a4c:	ldr	r2, [r5, #140]	; 0x8c
   33a50:	sub	r4, r2, r0
   33a54:	mov	r0, r4
   33a58:	strne	r4, [r1]
   33a5c:	bl	14e90 <malloc@plt>
   33a60:	cmp	r0, #0
   33a64:	beq	33ab4 <flatcc_builder_finalize_buffer@@Base+0x7c>
   33a68:	mov	r6, r0
   33a6c:	ldr	r0, [r5, #184]	; 0xb8
   33a70:	cmp	r0, #0
   33a74:	beq	33ad4 <flatcc_builder_finalize_buffer@@Base+0x9c>
   33a78:	add	r0, r5, #188	; 0xbc
   33a7c:	mov	r1, r6
   33a80:	mov	r2, r4
   33a84:	bl	34130 <flatcc_emitter_copy_buffer@@Base>
   33a88:	cmp	r0, #0
   33a8c:	movne	r0, r6
   33a90:	popne	{r4, r5, r6, sl, fp, pc}
   33a94:	ldr	r0, [pc, #88]	; 33af4 <flatcc_builder_finalize_buffer@@Base+0xbc>
   33a98:	ldr	r1, [pc, #88]	; 33af8 <flatcc_builder_finalize_buffer@@Base+0xc0>
   33a9c:	ldr	r3, [pc, #88]	; 33afc <flatcc_builder_finalize_buffer@@Base+0xc4>
   33aa0:	movw	r2, #1926	; 0x786
   33aa4:	add	r0, pc, r0
   33aa8:	add	r1, pc, r1
   33aac:	add	r3, pc, r3
   33ab0:	bl	14f38 <__assert_fail@plt>
   33ab4:	ldr	r0, [pc, #80]	; 33b0c <flatcc_builder_finalize_buffer@@Base+0xd4>
   33ab8:	ldr	r1, [pc, #80]	; 33b10 <flatcc_builder_finalize_buffer@@Base+0xd8>
   33abc:	ldr	r3, [pc, #80]	; 33b14 <flatcc_builder_finalize_buffer@@Base+0xdc>
   33ac0:	movw	r2, #1944	; 0x798
   33ac4:	add	r0, pc, r0
   33ac8:	add	r1, pc, r1
   33acc:	add	r3, pc, r3
   33ad0:	bl	14f38 <__assert_fail@plt>
   33ad4:	ldr	r0, [pc, #36]	; 33b00 <flatcc_builder_finalize_buffer@@Base+0xc8>
   33ad8:	ldr	r1, [pc, #36]	; 33b04 <flatcc_builder_finalize_buffer@@Base+0xcc>
   33adc:	ldr	r3, [pc, #36]	; 33b08 <flatcc_builder_finalize_buffer@@Base+0xd0>
   33ae0:	movw	r2, #1948	; 0x79c
   33ae4:	add	r0, pc, r0
   33ae8:	add	r1, pc, r1
   33aec:	add	r3, pc, r3
   33af0:	bl	14f38 <__assert_fail@plt>
   33af4:	andeq	r3, r1, sl, asr pc
   33af8:	andeq	r7, r1, lr, ror #23
   33afc:	andeq	r8, r1, r9, asr fp
   33b00:	andeq	r8, r1, pc, ror #26
   33b04:	andeq	r7, r1, lr, lsr #23
   33b08:	andeq	r8, r1, lr, asr fp
   33b0c:	andeq	r8, r1, pc, lsl #27
   33b10:	andeq	r7, r1, lr, asr #23
   33b14:	andeq	r8, r1, lr, ror fp

00033b18 <flatcc_builder_finalize_aligned_buffer@@Base>:
   33b18:	push	{r4, r5, r6, r7, fp, lr}
   33b1c:	add	fp, sp, #16
   33b20:	sub	sp, sp, #8
   33b24:	mov	r5, r0
   33b28:	mov	r4, r1
   33b2c:	ldr	r0, [r0, #136]	; 0x88
   33b30:	ldr	r1, [r5, #140]	; 0x8c
   33b34:	cmp	r4, #0
   33b38:	sub	r0, r1, r0
   33b3c:	mov	r1, #0
   33b40:	strne	r0, [r4]
   33b44:	ldrh	r2, [r5, #128]	; 0x80
   33b48:	str	r1, [sp, #4]
   33b4c:	add	r0, r0, r2
   33b50:	cmp	r2, #4
   33b54:	mov	r1, r2
   33b58:	rsb	r2, r2, #0
   33b5c:	sub	r0, r0, #1
   33b60:	movls	r1, #4
   33b64:	and	r7, r0, r2
   33b68:	add	r0, sp, #4
   33b6c:	mov	r2, r7
   33b70:	bl	14ed8 <posix_memalign@plt>
   33b74:	ldr	r6, [sp, #4]
   33b78:	cmp	r0, #0
   33b7c:	cmpne	r6, #0
   33b80:	bne	33bd0 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   33b84:	cmp	r6, #0
   33b88:	beq	33bd8 <flatcc_builder_finalize_aligned_buffer@@Base+0xc0>
   33b8c:	ldr	r0, [r5, #184]	; 0xb8
   33b90:	cmp	r0, #0
   33b94:	beq	33bd0 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   33b98:	add	r0, r5, #188	; 0xbc
   33b9c:	mov	r1, r6
   33ba0:	mov	r2, r7
   33ba4:	bl	34130 <flatcc_emitter_copy_buffer@@Base>
   33ba8:	cmp	r0, #0
   33bac:	bne	33be4 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   33bb0:	ldr	r0, [pc, #56]	; 33bf0 <flatcc_builder_finalize_aligned_buffer@@Base+0xd8>
   33bb4:	ldr	r1, [pc, #56]	; 33bf4 <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
   33bb8:	ldr	r3, [pc, #56]	; 33bf8 <flatcc_builder_finalize_aligned_buffer@@Base+0xe0>
   33bbc:	movw	r2, #1926	; 0x786
   33bc0:	add	r0, pc, r0
   33bc4:	add	r1, pc, r1
   33bc8:	add	r3, pc, r3
   33bcc:	bl	14f38 <__assert_fail@plt>
   33bd0:	mov	r0, r6
   33bd4:	bl	14e48 <free@plt>
   33bd8:	mov	r6, #0
   33bdc:	cmp	r4, #0
   33be0:	strne	r6, [r4]
   33be4:	mov	r0, r6
   33be8:	sub	sp, fp, #16
   33bec:	pop	{r4, r5, r6, r7, fp, pc}
   33bf0:	andeq	r3, r1, lr, lsr lr
   33bf4:	ldrdeq	r7, [r1], -r2
   33bf8:	andeq	r8, r1, sp, lsr sl

00033bfc <flatcc_builder_aligned_alloc@@Base>:
   33bfc:	push	{fp, lr}
   33c00:	mov	fp, sp
   33c04:	sub	sp, sp, #8
   33c08:	mov	r2, r1
   33c0c:	mov	r1, r0
   33c10:	mov	r0, #0
   33c14:	cmp	r1, #4
   33c18:	str	r0, [sp, #4]
   33c1c:	add	r0, sp, #4
   33c20:	movls	r1, #4
   33c24:	bl	14ed8 <posix_memalign@plt>
   33c28:	mov	r1, r0
   33c2c:	ldr	r0, [sp, #4]
   33c30:	cmp	r1, #0
   33c34:	cmpne	r0, #0
   33c38:	bne	33c44 <flatcc_builder_aligned_alloc@@Base+0x48>
   33c3c:	mov	sp, fp
   33c40:	pop	{fp, pc}
   33c44:	bl	14e48 <free@plt>
   33c48:	mov	r0, #0
   33c4c:	str	r0, [sp, #4]
   33c50:	mov	sp, fp
   33c54:	pop	{fp, pc}

00033c58 <flatcc_builder_aligned_free@@Base>:
   33c58:	b	14e48 <free@plt>

00033c5c <flatcc_builder_get_emit_context@@Base>:
   33c5c:	ldr	r0, [r0, #36]	; 0x24
   33c60:	bx	lr

00033c64 <flatcc_emitter_recycle_page@@Base>:
   33c64:	ldr	r3, [r0]
   33c68:	mov	r2, r0
   33c6c:	mvn	r0, #0
   33c70:	cmp	r3, r1
   33c74:	beq	33cb4 <flatcc_emitter_recycle_page@@Base+0x50>
   33c78:	ldr	r2, [r2, #4]
   33c7c:	cmp	r2, r1
   33c80:	bxeq	lr
   33c84:	ldr	r0, [r1, #2944]	; 0xb80
   33c88:	ldr	r2, [r1, #2948]	; 0xb84
   33c8c:	str	r2, [r0, #2948]	; 0xb84
   33c90:	ldr	r2, [r1, #2948]	; 0xb84
   33c94:	str	r0, [r2, #2944]	; 0xb80
   33c98:	ldr	r0, [r3, #2948]	; 0xb84
   33c9c:	str	r3, [r1, #2944]	; 0xb80
   33ca0:	str	r0, [r1, #2948]	; 0xb84
   33ca4:	str	r1, [r0, #2944]	; 0xb80
   33ca8:	ldr	r0, [r1, #2944]	; 0xb80
   33cac:	str	r1, [r0, #2948]	; 0xb84
   33cb0:	mov	r0, #0
   33cb4:	bx	lr

00033cb8 <flatcc_emitter_reset@@Base>:
   33cb8:	push	{r4, sl, fp, lr}
   33cbc:	add	fp, sp, #8
   33cc0:	ldr	r1, [r0]
   33cc4:	cmp	r1, #0
   33cc8:	beq	33d80 <flatcc_emitter_reset@@Base+0xc8>
   33ccc:	mov	r4, r0
   33cd0:	add	r2, r1, #1472	; 0x5c0
   33cd4:	mov	r0, #1472	; 0x5c0
   33cd8:	mov	r3, #0
   33cdc:	stmib	r4, {r1, r2}
   33ce0:	str	r0, [r4, #12]
   33ce4:	str	r2, [r4, #16]
   33ce8:	str	r0, [r4, #20]
   33cec:	movw	r0, #64064	; 0xfa40
   33cf0:	movt	r0, #65535	; 0xffff
   33cf4:	str	r0, [r1, #2952]	; 0xb88
   33cf8:	ldr	r2, [r4, #32]
   33cfc:	ldr	r0, [r4, #24]
   33d00:	cmp	r2, #0
   33d04:	moveq	r2, r0
   33d08:	streq	r0, [r4, #32]
   33d0c:	str	r3, [r4, #24]
   33d10:	add	r2, r2, r2, lsl #1
   33d14:	lsr	r2, r2, #2
   33d18:	add	r0, r2, r0, lsr #2
   33d1c:	str	r0, [r4, #32]
   33d20:	ldr	r2, [r4, #28]
   33d24:	cmp	r2, r0, lsl #1
   33d28:	bls	33d80 <flatcc_emitter_reset@@Base+0xc8>
   33d2c:	mov	r2, r1
   33d30:	ldr	r0, [r2, #2944]!	; 0xb80
   33d34:	cmp	r0, r1
   33d38:	popeq	{r4, sl, fp, pc}
   33d3c:	ldr	r3, [r0, #2944]	; 0xb80
   33d40:	str	r3, [r2]
   33d44:	ldr	r2, [r0, #2944]	; 0xb80
   33d48:	str	r1, [r2, #2948]	; 0xb84
   33d4c:	bl	14e48 <free@plt>
   33d50:	ldr	r0, [r4, #28]
   33d54:	ldr	r1, [r4, #32]
   33d58:	sub	r0, r0, #2944	; 0xb80
   33d5c:	cmp	r0, r1, lsl #1
   33d60:	str	r0, [r4, #28]
   33d64:	bls	33d80 <flatcc_emitter_reset@@Base+0xc8>
   33d68:	ldr	r1, [r4, #4]
   33d6c:	ldr	r3, [r4]
   33d70:	mov	r2, r1
   33d74:	ldr	r0, [r2, #2944]!	; 0xb80
   33d78:	cmp	r0, r3
   33d7c:	bne	33d3c <flatcc_emitter_reset@@Base+0x84>
   33d80:	pop	{r4, sl, fp, pc}

00033d84 <flatcc_emitter_clear@@Base>:
   33d84:	push	{r4, r5, r6, sl, fp, lr}
   33d88:	add	fp, sp, #16
   33d8c:	ldr	r5, [r0]
   33d90:	cmp	r5, #0
   33d94:	beq	33de4 <flatcc_emitter_clear@@Base+0x60>
   33d98:	mov	r4, r0
   33d9c:	ldr	r0, [r5, #2948]	; 0xb84
   33da0:	mov	r6, #0
   33da4:	str	r6, [r0, #2944]	; 0xb80
   33da8:	ldr	r0, [r5, #2944]	; 0xb80
   33dac:	cmp	r0, #0
   33db0:	beq	33dc4 <flatcc_emitter_clear@@Base+0x40>
   33db4:	mov	r5, r0
   33db8:	ldr	r0, [r0, #2948]	; 0xb84
   33dbc:	bl	14e48 <free@plt>
   33dc0:	b	33da8 <flatcc_emitter_clear@@Base+0x24>
   33dc4:	mov	r0, r5
   33dc8:	bl	14e48 <free@plt>
   33dcc:	vmov.i32	q8, #0	; 0x00000000
   33dd0:	add	r0, r4, #16
   33dd4:	vst1.32	{d16-d17}, [r0]
   33dd8:	mov	r0, #32
   33ddc:	vst1.32	{d16-d17}, [r4], r0
   33de0:	str	r6, [r4]
   33de4:	pop	{r4, r5, r6, sl, fp, pc}

00033de8 <flatcc_emitter@@Base>:
   33de8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33dec:	add	fp, sp, #28
   33df0:	sub	sp, sp, #4
   33df4:	mov	r6, r0
   33df8:	mov	r7, r1
   33dfc:	ldr	r0, [r0, #24]
   33e00:	ldr	r1, [fp, #8]
   33e04:	mov	r4, r2
   33e08:	cmn	r3, #1
   33e0c:	mov	r9, r6
   33e10:	add	r0, r0, r1
   33e14:	str	r0, [r6, #24]
   33e18:	ble	33f6c <flatcc_emitter@@Base+0x184>
   33e1c:	ldr	r0, [r9, #20]!
   33e20:	cmp	r0, r1
   33e24:	bcs	340cc <flatcc_emitter@@Base+0x2e4>
   33e28:	mov	r8, #0
   33e2c:	cmp	r4, #0
   33e30:	beq	34124 <flatcc_emitter@@Base+0x33c>
   33e34:	movw	sl, #64064	; 0xfa40
   33e38:	movt	sl, #65535	; 0xffff
   33e3c:	ldr	r8, [r7, #4]
   33e40:	cmp	r8, #0
   33e44:	beq	33f58 <flatcc_emitter@@Base+0x170>
   33e48:	ldr	r9, [r7]
   33e4c:	b	33e88 <flatcc_emitter@@Base+0xa0>
   33e50:	mov	r5, r8
   33e54:	ldr	r0, [r6, #16]
   33e58:	mov	r1, r9
   33e5c:	mov	r2, r5
   33e60:	bl	14e54 <memcpy@plt>
   33e64:	ldr	r0, [r6, #16]
   33e68:	ldr	r1, [r6, #20]
   33e6c:	add	r9, r9, r5
   33e70:	subs	r8, r8, r5
   33e74:	add	r2, r0, r5
   33e78:	sub	r0, r1, r5
   33e7c:	str	r2, [r6, #16]
   33e80:	str	r0, [r6, #20]
   33e84:	beq	33f58 <flatcc_emitter@@Base+0x170>
   33e88:	cmp	r8, r0
   33e8c:	mov	r5, r8
   33e90:	bls	33e54 <flatcc_emitter@@Base+0x6c>
   33e94:	mov	r5, r0
   33e98:	cmp	r5, #0
   33e9c:	beq	33ee8 <flatcc_emitter@@Base+0x100>
   33ea0:	b	33e54 <flatcc_emitter@@Base+0x6c>
   33ea4:	ldr	r1, [r6]
   33ea8:	str	r1, [r0, #2944]	; 0xb80
   33eac:	str	r5, [r0, #2948]	; 0xb84
   33eb0:	str	r0, [r1, #2948]	; 0xb84
   33eb4:	str	r0, [r5, #2944]	; 0xb80
   33eb8:	mov	r5, #2944	; 0xb80
   33ebc:	str	r0, [r6, #4]
   33ec0:	str	r0, [r6, #16]
   33ec4:	str	r5, [r6, #20]
   33ec8:	ldr	r1, [r0, #2948]	; 0xb84
   33ecc:	ldr	r1, [r1, #2952]	; 0xb88
   33ed0:	add	r1, r1, #2944	; 0xb80
   33ed4:	str	r1, [r0, #2952]	; 0xb88
   33ed8:	cmp	r8, r5
   33edc:	bls	33e50 <flatcc_emitter@@Base+0x68>
   33ee0:	cmp	r5, #0
   33ee4:	bne	33e54 <flatcc_emitter@@Base+0x6c>
   33ee8:	ldr	r5, [r6, #4]
   33eec:	cmp	r5, #0
   33ef0:	beq	33f04 <flatcc_emitter@@Base+0x11c>
   33ef4:	ldr	r0, [r5, #2944]	; 0xb80
   33ef8:	ldr	r1, [r6]
   33efc:	cmp	r0, r1
   33f00:	bne	33eb8 <flatcc_emitter@@Base+0xd0>
   33f04:	movw	r0, #2956	; 0xb8c
   33f08:	bl	14e90 <malloc@plt>
   33f0c:	cmp	r0, #0
   33f10:	beq	340dc <flatcc_emitter@@Base+0x2f4>
   33f14:	ldr	r1, [r6, #28]
   33f18:	cmp	r5, #0
   33f1c:	add	r1, r1, #2944	; 0xb80
   33f20:	str	r1, [r6, #28]
   33f24:	bne	33ea4 <flatcc_emitter@@Base+0xbc>
   33f28:	add	r1, r0, #1472	; 0x5c0
   33f2c:	mov	r5, #1472	; 0x5c0
   33f30:	str	r0, [r6]
   33f34:	stmib	r6, {r0, r1, r5}
   33f38:	str	r1, [r6, #16]
   33f3c:	str	r5, [r6, #20]
   33f40:	str	r0, [r0, #2944]	; 0xb80
   33f44:	str	r0, [r0, #2948]	; 0xb84
   33f48:	str	sl, [r0, #2952]	; 0xb88
   33f4c:	cmp	r8, r5
   33f50:	bhi	33ee0 <flatcc_emitter@@Base+0xf8>
   33f54:	b	33e50 <flatcc_emitter@@Base+0x68>
   33f58:	subs	r4, r4, #1
   33f5c:	add	r7, r7, #8
   33f60:	bne	33e3c <flatcc_emitter@@Base+0x54>
   33f64:	mov	r8, #0
   33f68:	b	34124 <flatcc_emitter@@Base+0x33c>
   33f6c:	ldr	r0, [r9, #12]!
   33f70:	cmp	r0, r1
   33f74:	bcs	340e4 <flatcc_emitter@@Base+0x2fc>
   33f78:	mov	r8, #0
   33f7c:	cmp	r4, #0
   33f80:	beq	34124 <flatcc_emitter@@Base+0x33c>
   33f84:	add	r0, r7, r4, lsl #3
   33f88:	ldr	sl, [r0, #-4]
   33f8c:	sub	r1, r0, #8
   33f90:	str	r1, [sp]
   33f94:	cmp	sl, #0
   33f98:	beq	340bc <flatcc_emitter@@Base+0x2d4>
   33f9c:	ldr	r0, [sp]
   33fa0:	ldr	r0, [r0]
   33fa4:	add	r7, r0, sl
   33fa8:	ldr	r1, [r9]
   33fac:	cmp	sl, r1
   33fb0:	bhi	33ff0 <flatcc_emitter@@Base+0x208>
   33fb4:	b	3408c <flatcc_emitter@@Base+0x2a4>
   33fb8:	ldr	r1, [r5, #2952]	; 0xb88
   33fbc:	sub	r1, r1, #2944	; 0xb80
   33fc0:	str	r1, [r0, #2952]	; 0xb88
   33fc4:	mov	r1, #2944	; 0xb80
   33fc8:	add	r2, r0, #2944	; 0xb80
   33fcc:	str	r0, [r6]
   33fd0:	str	r2, [r6, #8]
   33fd4:	str	r1, [r6, #12]
   33fd8:	ldr	r2, [r0, #2944]	; 0xb80
   33fdc:	ldr	r2, [r2, #2952]	; 0xb88
   33fe0:	sub	r2, r2, #2944	; 0xb80
   33fe4:	str	r2, [r0, #2952]	; 0xb88
   33fe8:	cmp	sl, r1
   33fec:	bls	3408c <flatcc_emitter@@Base+0x2a4>
   33ff0:	cmp	r1, #0
   33ff4:	mov	r5, r1
   33ff8:	bne	34090 <flatcc_emitter@@Base+0x2a8>
   33ffc:	ldr	r5, [r6]
   34000:	cmp	r5, #0
   34004:	beq	34018 <flatcc_emitter@@Base+0x230>
   34008:	ldr	r0, [r5, #2948]	; 0xb84
   3400c:	ldr	r1, [r6, #4]
   34010:	cmp	r0, r1
   34014:	bne	33fb8 <flatcc_emitter@@Base+0x1d0>
   34018:	movw	r0, #2956	; 0xb8c
   3401c:	bl	14e90 <malloc@plt>
   34020:	cmp	r0, #0
   34024:	beq	340dc <flatcc_emitter@@Base+0x2f4>
   34028:	ldr	r1, [r6, #28]
   3402c:	cmp	r5, #0
   34030:	add	r1, r1, #2944	; 0xb80
   34034:	str	r1, [r6, #28]
   34038:	beq	34054 <flatcc_emitter@@Base+0x26c>
   3403c:	ldr	r1, [r6, #4]
   34040:	str	r5, [r0, #2944]	; 0xb80
   34044:	str	r1, [r0, #2948]	; 0xb84
   34048:	str	r0, [r5, #2948]	; 0xb84
   3404c:	str	r0, [r1, #2944]	; 0xb80
   34050:	b	33fc4 <flatcc_emitter@@Base+0x1dc>
   34054:	add	r2, r0, #1472	; 0x5c0
   34058:	mov	r1, #1472	; 0x5c0
   3405c:	str	r0, [r6]
   34060:	stmib	r6, {r0, r2}
   34064:	str	r1, [r6, #12]
   34068:	str	r2, [r6, #16]
   3406c:	movw	r2, #64064	; 0xfa40
   34070:	str	r1, [r6, #20]
   34074:	str	r0, [r0, #2944]	; 0xb80
   34078:	str	r0, [r0, #2948]	; 0xb84
   3407c:	movt	r2, #65535	; 0xffff
   34080:	str	r2, [r0, #2952]	; 0xb88
   34084:	cmp	sl, r1
   34088:	bhi	33ff0 <flatcc_emitter@@Base+0x208>
   3408c:	mov	r5, sl
   34090:	sub	r0, r1, r5
   34094:	sub	r7, r7, r5
   34098:	mov	r2, r5
   3409c:	str	r0, [r6, #12]
   340a0:	mov	r1, r7
   340a4:	ldr	r0, [r6, #8]
   340a8:	sub	r0, r0, r5
   340ac:	str	r0, [r6, #8]
   340b0:	bl	14e54 <memcpy@plt>
   340b4:	subs	sl, sl, r5
   340b8:	bne	33fa8 <flatcc_emitter@@Base+0x1c0>
   340bc:	ldr	r0, [sp]
   340c0:	subs	r4, r4, #1
   340c4:	bne	33f88 <flatcc_emitter@@Base+0x1a0>
   340c8:	b	34124 <flatcc_emitter@@Base+0x33c>
   340cc:	ldr	r5, [r6, #16]
   340d0:	add	r2, r5, r1
   340d4:	str	r2, [r6, #16]
   340d8:	b	340f0 <flatcc_emitter@@Base+0x308>
   340dc:	mvn	r8, #0
   340e0:	b	34124 <flatcc_emitter@@Base+0x33c>
   340e4:	ldr	r2, [r6, #8]
   340e8:	sub	r5, r2, r1
   340ec:	str	r5, [r6, #8]
   340f0:	sub	r0, r0, r1
   340f4:	mov	r8, #0
   340f8:	cmp	r4, #0
   340fc:	str	r0, [r9]
   34100:	beq	34124 <flatcc_emitter@@Base+0x33c>
   34104:	ldm	r7, {r1, r2}
   34108:	mov	r0, r5
   3410c:	bl	14e54 <memcpy@plt>
   34110:	ldr	r0, [r7, #4]
   34114:	add	r7, r7, #8
   34118:	subs	r4, r4, #1
   3411c:	add	r5, r5, r0
   34120:	bne	34104 <flatcc_emitter@@Base+0x31c>
   34124:	mov	r0, r8
   34128:	sub	sp, fp, #28
   3412c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00034130 <flatcc_emitter_copy_buffer@@Base>:
   34130:	push	{r4, r5, r6, sl, fp, lr}
   34134:	add	fp, sp, #16
   34138:	mov	r3, r2
   3413c:	ldr	r2, [r0, #24]
   34140:	mov	r5, #0
   34144:	cmp	r2, r3
   34148:	bhi	341d0 <flatcc_emitter_copy_buffer@@Base+0xa0>
   3414c:	mov	r4, r0
   34150:	ldr	r0, [r0]
   34154:	cmp	r0, #0
   34158:	beq	341d0 <flatcc_emitter_copy_buffer@@Base+0xa0>
   3415c:	mov	r6, r1
   34160:	ldr	r1, [r4, #4]
   34164:	cmp	r0, r1
   34168:	beq	341d8 <flatcc_emitter_copy_buffer@@Base+0xa8>
   3416c:	ldr	r0, [r4, #12]
   34170:	ldr	r1, [r4, #8]
   34174:	rsb	r5, r0, #2944	; 0xb80
   34178:	mov	r0, r6
   3417c:	mov	r2, r5
   34180:	bl	14e54 <memcpy@plt>
   34184:	ldm	r4, {r0, r1}
   34188:	add	r5, r6, r5
   3418c:	ldr	r6, [r0, #2944]	; 0xb80
   34190:	cmp	r6, r1
   34194:	beq	341bc <flatcc_emitter_copy_buffer@@Base+0x8c>
   34198:	mov	r0, r5
   3419c:	mov	r1, r6
   341a0:	mov	r2, #2944	; 0xb80
   341a4:	bl	14e54 <memcpy@plt>
   341a8:	ldr	r6, [r6, #2944]	; 0xb80
   341ac:	ldr	r0, [r4, #4]
   341b0:	add	r5, r5, #2944	; 0xb80
   341b4:	cmp	r6, r0
   341b8:	bne	34198 <flatcc_emitter_copy_buffer@@Base+0x68>
   341bc:	ldr	r0, [r4, #20]
   341c0:	mov	r1, r6
   341c4:	rsb	r2, r0, #2944	; 0xb80
   341c8:	mov	r0, r5
   341cc:	bl	14e54 <memcpy@plt>
   341d0:	mov	r0, r5
   341d4:	pop	{r4, r5, r6, sl, fp, pc}
   341d8:	ldr	r1, [r4, #8]
   341dc:	mov	r0, r6
   341e0:	bl	14e54 <memcpy@plt>
   341e4:	mov	r0, r6
   341e8:	pop	{r4, r5, r6, sl, fp, pc}

000341ec <flatcc_verify_error_string@@Base>:
   341ec:	cmp	r0, #36	; 0x24
   341f0:	bhi	34204 <flatcc_verify_error_string@@Base+0x18>
   341f4:	ldr	r1, [pc, #20]	; 34210 <flatcc_verify_error_string@@Base+0x24>
   341f8:	add	r1, pc, r1
   341fc:	ldr	r0, [r1, r0, lsl #2]
   34200:	bx	lr
   34204:	ldr	r0, [pc, #8]	; 34214 <flatcc_verify_error_string@@Base+0x28>
   34208:	add	r0, pc, r0
   3420c:	bx	lr
   34210:	andeq	sl, r2, r0, ror #23
   34214:	andeq	r8, r1, r9, lsl #22

00034218 <flatcc_verify_field@@Base>:
   34218:	push	{r4, sl, fp, lr}
   3421c:	add	fp, sp, #8
   34220:	mov	ip, #4
   34224:	ldrh	r4, [r0, #22]
   34228:	mov	lr, #0
   3422c:	add	r1, ip, r1, lsl #1
   34230:	uxth	ip, r1
   34234:	cmp	ip, r4
   34238:	bcs	34294 <flatcc_verify_field@@Base+0x7c>
   3423c:	ldr	r4, [r0, #12]
   34240:	uxtah	r1, r4, r1
   34244:	ldrh	ip, [r1]
   34248:	cmp	ip, #0
   3424c:	beq	34294 <flatcc_verify_field@@Base+0x7c>
   34250:	add	r1, ip, r2
   34254:	ldrh	r2, [r0, #20]
   34258:	mov	lr, #13
   3425c:	cmp	r1, r2
   34260:	bhi	34294 <flatcc_verify_field@@Base+0x7c>
   34264:	ldr	r1, [r0]
   34268:	mov	lr, #0
   3426c:	add	r2, r1, ip
   34270:	ldr	r1, [r0, #16]
   34274:	add	r4, r2, r1
   34278:	sub	r1, r3, #1
   3427c:	tst	r4, r1
   34280:	beq	34294 <flatcc_verify_field@@Base+0x7c>
   34284:	ldr	r0, [r0, #16]
   34288:	add	r0, r2, r0
   3428c:	ands	lr, r0, r1
   34290:	movwne	lr, #12
   34294:	mov	r0, lr
   34298:	pop	{r4, sl, fp, pc}

0003429c <flatcc_verify_string_field@@Base>:
   3429c:	push	{fp, lr}
   342a0:	mov	fp, sp
   342a4:	mov	lr, r0
   342a8:	mov	r0, #4
   342ac:	add	r0, r0, r1, lsl #1
   342b0:	ldrh	r3, [lr, #22]
   342b4:	uxth	r1, r0
   342b8:	cmp	r1, r3
   342bc:	bcs	34300 <flatcc_verify_string_field@@Base+0x64>
   342c0:	ldr	r1, [lr, #12]
   342c4:	uxtah	r0, r1, r0
   342c8:	ldrh	r1, [r0]
   342cc:	cmp	r1, #0
   342d0:	beq	34300 <flatcc_verify_string_field@@Base+0x64>
   342d4:	ldrh	r2, [lr, #20]
   342d8:	add	r3, r1, #4
   342dc:	mov	r0, #13
   342e0:	cmp	r3, r2
   342e4:	bhi	342fc <flatcc_verify_string_field@@Base+0x60>
   342e8:	ldr	r0, [lr, #16]
   342ec:	add	r2, r0, r1
   342f0:	mov	r0, #12
   342f4:	tst	r2, #3
   342f8:	beq	34310 <flatcc_verify_string_field@@Base+0x74>
   342fc:	pop	{fp, pc}
   34300:	cmp	r2, #0
   34304:	movwne	r2, #1
   34308:	lsl	r0, r2, #2
   3430c:	pop	{fp, pc}
   34310:	cmp	r2, #0
   34314:	beq	34374 <flatcc_verify_string_field@@Base+0xd8>
   34318:	ldr	ip, [lr]
   3431c:	ldr	r0, [ip, r2]
   34320:	add	r1, r0, r2
   34324:	mov	r0, #17
   34328:	tst	r1, #3
   3432c:	bne	342fc <flatcc_verify_string_field@@Base+0x60>
   34330:	cmp	r1, r2
   34334:	bls	342fc <flatcc_verify_string_field@@Base+0x60>
   34338:	ldr	r3, [lr, #4]
   3433c:	add	r2, r1, #4
   34340:	cmp	r3, r2
   34344:	bcc	342fc <flatcc_verify_string_field@@Base+0x60>
   34348:	ldr	r1, [ip, r1]
   3434c:	sub	lr, r3, r2
   34350:	mov	r0, #8
   34354:	add	r3, r1, #1
   34358:	cmp	lr, r3
   3435c:	popcc	{fp, pc}
   34360:	add	r0, ip, r2
   34364:	ldrb	r0, [r0, r1]
   34368:	cmp	r0, #0
   3436c:	movwne	r0, #7
   34370:	pop	{fp, pc}
   34374:	mov	r0, #0
   34378:	pop	{fp, pc}

0003437c <flatcc_verify_vector_field@@Base>:
   3437c:	push	{r4, sl, fp, lr}
   34380:	add	fp, sp, #8
   34384:	mov	ip, r0
   34388:	mov	r0, #4
   3438c:	add	r0, r0, r1, lsl #1
   34390:	ldrh	r4, [ip, #22]
   34394:	uxth	r1, r0
   34398:	cmp	r1, r4
   3439c:	bcs	343e0 <flatcc_verify_vector_field@@Base+0x64>
   343a0:	ldr	r1, [ip, #12]
   343a4:	uxtah	r0, r1, r0
   343a8:	ldrh	r1, [r0]
   343ac:	cmp	r1, #0
   343b0:	beq	343e0 <flatcc_verify_vector_field@@Base+0x64>
   343b4:	ldrh	r2, [ip, #20]
   343b8:	add	r4, r1, #4
   343bc:	mov	r0, #13
   343c0:	cmp	r4, r2
   343c4:	bhi	343dc <flatcc_verify_vector_field@@Base+0x60>
   343c8:	ldr	r0, [ip, #16]
   343cc:	add	r2, r0, r1
   343d0:	mov	r0, #12
   343d4:	tst	r2, #3
   343d8:	beq	343f0 <flatcc_verify_vector_field@@Base+0x74>
   343dc:	pop	{r4, sl, fp, pc}
   343e0:	cmp	r2, #0
   343e4:	movwne	r2, #1
   343e8:	lsl	r0, r2, #2
   343ec:	pop	{r4, sl, fp, pc}
   343f0:	cmp	r2, #0
   343f4:	beq	3446c <flatcc_verify_vector_field@@Base+0xf0>
   343f8:	ldr	lr, [ip]
   343fc:	ldr	r4, [fp, #8]
   34400:	ldr	r0, [lr, r2]
   34404:	cmp	r4, #4
   34408:	movls	r4, #4
   3440c:	add	r1, r0, r2
   34410:	mov	r0, #16
   34414:	cmp	r1, r2
   34418:	bls	343dc <flatcc_verify_vector_field@@Base+0x60>
   3441c:	ldr	ip, [ip, #4]
   34420:	add	r2, r1, #4
   34424:	cmp	r2, ip
   34428:	bhi	343dc <flatcc_verify_vector_field@@Base+0x60>
   3442c:	sub	r4, r4, #1
   34430:	orr	r4, r4, #3
   34434:	tst	r2, r4
   34438:	bne	343dc <flatcc_verify_vector_field@@Base+0x60>
   3443c:	ldr	r4, [fp, #12]
   34440:	ldr	r2, [lr, r1]
   34444:	mov	r0, #25
   34448:	cmp	r2, r4
   3444c:	pophi	{r4, sl, fp, pc}
   34450:	mul	r2, r2, r3
   34454:	sub	r0, ip, r1
   34458:	sub	r1, r0, #4
   3445c:	mov	r0, #0
   34460:	cmp	r1, r2
   34464:	movwcc	r0, #26
   34468:	pop	{r4, sl, fp, pc}
   3446c:	mov	r0, #0
   34470:	pop	{r4, sl, fp, pc}

00034474 <flatcc_verify_string_vector_field@@Base>:
   34474:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   34478:	add	fp, sp, #24
   3447c:	mov	r3, r0
   34480:	mov	r0, #4
   34484:	add	r0, r0, r1, lsl #1
   34488:	ldrh	r7, [r3, #22]
   3448c:	uxth	r1, r0
   34490:	cmp	r1, r7
   34494:	bcs	344d8 <flatcc_verify_string_vector_field@@Base+0x64>
   34498:	ldr	r1, [r3, #12]
   3449c:	uxtah	r0, r1, r0
   344a0:	ldrh	r1, [r0]
   344a4:	cmp	r1, #0
   344a8:	beq	344d8 <flatcc_verify_string_vector_field@@Base+0x64>
   344ac:	ldrh	r2, [r3, #20]
   344b0:	add	r7, r1, #4
   344b4:	mov	r0, #13
   344b8:	cmp	r7, r2
   344bc:	bhi	344d4 <flatcc_verify_string_vector_field@@Base+0x60>
   344c0:	ldr	r4, [r3, #16]
   344c4:	mov	r0, #12
   344c8:	add	r6, r4, r1
   344cc:	tst	r6, #3
   344d0:	beq	344e8 <flatcc_verify_string_vector_field@@Base+0x74>
   344d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   344d8:	cmp	r2, #0
   344dc:	movwne	r2, #1
   344e0:	lsl	r0, r2, #2
   344e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   344e8:	cmp	r6, #0
   344ec:	beq	345e4 <flatcc_verify_string_vector_field@@Base+0x170>
   344f0:	ldr	r5, [r3]
   344f4:	mov	r0, #16
   344f8:	ldr	r7, [r5, r6]
   344fc:	add	r2, r7, r6
   34500:	cmp	r2, r6
   34504:	bls	344d4 <flatcc_verify_string_vector_field@@Base+0x60>
   34508:	ldr	ip, [r3, #4]
   3450c:	add	r3, r2, #4
   34510:	cmp	r3, ip
   34514:	bhi	344d4 <flatcc_verify_string_vector_field@@Base+0x60>
   34518:	ands	r3, r3, #3
   3451c:	bne	344d4 <flatcc_verify_string_vector_field@@Base+0x60>
   34520:	ldr	lr, [r5, r2]
   34524:	mov	r0, #25
   34528:	cmn	lr, #-1073741823	; 0xc0000001
   3452c:	bhi	344d4 <flatcc_verify_string_vector_field@@Base+0x60>
   34530:	sub	r0, ip, r2
   34534:	sub	r2, r0, #4
   34538:	mov	r0, #26
   3453c:	cmp	r2, lr, lsl #2
   34540:	bcc	344d4 <flatcc_verify_string_vector_field@@Base+0x60>
   34544:	cmp	lr, #0
   34548:	beq	345e4 <flatcc_verify_string_vector_field@@Base+0x170>
   3454c:	sub	r0, ip, r7
   34550:	add	r8, r7, r4
   34554:	sub	r0, r0, r4
   34558:	add	r3, r5, r8
   3455c:	sub	r0, r0, r1
   34560:	sub	r4, r0, #8
   34564:	add	r0, r3, r1
   34568:	add	r7, r1, r8
   3456c:	ldr	r5, [r0, #4]
   34570:	mov	r0, #17
   34574:	add	r6, r7, r5
   34578:	add	r2, r6, #4
   3457c:	tst	r2, #3
   34580:	bne	344d4 <flatcc_verify_string_vector_field@@Base+0x60>
   34584:	add	r7, r7, #4
   34588:	cmp	r2, r7
   3458c:	bls	344d4 <flatcc_verify_string_vector_field@@Base+0x60>
   34590:	add	r2, r6, #8
   34594:	cmp	ip, r2
   34598:	bcc	344d4 <flatcc_verify_string_vector_field@@Base+0x60>
   3459c:	add	r0, r1, r5
   345a0:	sub	r2, r4, r5
   345a4:	add	r0, r3, r0
   345a8:	ldr	r0, [r0, #4]
   345ac:	add	r6, r0, #1
   345b0:	cmp	r2, r6
   345b4:	bcc	345ec <flatcc_verify_string_vector_field@@Base+0x178>
   345b8:	add	r0, r5, r0
   345bc:	add	r0, r1, r0
   345c0:	add	r0, r3, r0
   345c4:	ldrb	r0, [r0, #8]
   345c8:	cmp	r0, #0
   345cc:	bne	345f4 <flatcc_verify_string_vector_field@@Base+0x180>
   345d0:	subs	lr, lr, #1
   345d4:	sub	r4, r4, #4
   345d8:	add	r8, r8, #4
   345dc:	add	r3, r3, #4
   345e0:	bne	34564 <flatcc_verify_string_vector_field@@Base+0xf0>
   345e4:	mov	r0, #0
   345e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   345ec:	mov	r0, #8
   345f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   345f4:	mov	r0, #7
   345f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000345fc <flatcc_verify_table_field@@Base>:
   345fc:	push	{r4, r5, r6, sl, fp, lr}
   34600:	add	fp, sp, #16
   34604:	sub	sp, sp, #24
   34608:	mov	ip, r0
   3460c:	mov	r0, #4
   34610:	add	r0, r0, r1, lsl #1
   34614:	ldrh	r6, [ip, #22]
   34618:	uxth	r1, r0
   3461c:	cmp	r1, r6
   34620:	bcs	34668 <flatcc_verify_table_field@@Base+0x6c>
   34624:	ldr	r1, [ip, #12]
   34628:	uxtah	r0, r1, r0
   3462c:	ldrh	r1, [r0]
   34630:	cmp	r1, #0
   34634:	beq	34668 <flatcc_verify_table_field@@Base+0x6c>
   34638:	ldrh	r2, [ip, #20]
   3463c:	add	r6, r1, #4
   34640:	mov	r0, #13
   34644:	cmp	r6, r2
   34648:	bhi	34660 <flatcc_verify_table_field@@Base+0x64>
   3464c:	ldr	r0, [ip, #16]
   34650:	add	r4, r0, r1
   34654:	mov	r0, #12
   34658:	tst	r4, #3
   3465c:	beq	3467c <flatcc_verify_table_field@@Base+0x80>
   34660:	sub	sp, fp, #16
   34664:	pop	{r4, r5, r6, sl, fp, pc}
   34668:	cmp	r2, #0
   3466c:	movwne	r2, #1
   34670:	lsl	r0, r2, #2
   34674:	sub	sp, fp, #16
   34678:	pop	{r4, r5, r6, sl, fp, pc}
   3467c:	cmp	r4, #0
   34680:	beq	3474c <flatcc_verify_table_field@@Base+0x150>
   34684:	ldm	ip, {r1, lr}
   34688:	ldr	r2, [ip, #8]
   3468c:	ldr	r0, [r1, r4]
   34690:	subs	r2, r2, #1
   34694:	str	r2, [sp, #8]
   34698:	beq	34758 <flatcc_verify_table_field@@Base+0x15c>
   3469c:	add	r2, r0, r4
   346a0:	mov	r0, #15
   346a4:	tst	r2, #3
   346a8:	bne	34660 <flatcc_verify_table_field@@Base+0x64>
   346ac:	cmp	r2, r4
   346b0:	bls	34660 <flatcc_verify_table_field@@Base+0x64>
   346b4:	add	r6, r2, #4
   346b8:	cmp	r6, lr
   346bc:	bhi	34660 <flatcc_verify_table_field@@Base+0x64>
   346c0:	str	r2, [sp, #16]
   346c4:	ldr	r0, [r1, r2]
   346c8:	sub	r5, r2, r0
   346cc:	mov	r0, #29
   346d0:	tst	r5, #-2147483647	; 0x80000001
   346d4:	bne	34660 <flatcc_verify_table_field@@Base+0x64>
   346d8:	add	r4, r5, #2
   346dc:	mov	r0, #27
   346e0:	cmp	r4, lr
   346e4:	bhi	34660 <flatcc_verify_table_field@@Base+0x64>
   346e8:	mov	ip, r1
   346ec:	mov	r0, #30
   346f0:	ldrh	r6, [ip, r5]!
   346f4:	tst	r6, #1
   346f8:	strh	r6, [sp, #22]
   346fc:	bne	34660 <flatcc_verify_table_field@@Base+0x64>
   34700:	add	r5, r5, r6
   34704:	cmp	r5, lr
   34708:	bhi	34660 <flatcc_verify_table_field@@Base+0x64>
   3470c:	mov	r0, #28
   34710:	cmp	r6, #4
   34714:	bcc	34660 <flatcc_verify_table_field@@Base+0x64>
   34718:	add	r0, r1, r4
   3471c:	sub	r2, lr, r2
   34720:	ldrh	r4, [r0]
   34724:	mov	r0, #20
   34728:	cmp	r2, r4
   3472c:	strh	r4, [sp, #20]
   34730:	bcc	34660 <flatcc_verify_table_field@@Base+0x64>
   34734:	mov	r0, sp
   34738:	stm	sp, {r1, lr}
   3473c:	str	ip, [sp, #12]
   34740:	blx	r3
   34744:	sub	sp, fp, #16
   34748:	pop	{r4, r5, r6, sl, fp, pc}
   3474c:	mov	r0, #0
   34750:	sub	sp, fp, #16
   34754:	pop	{r4, r5, r6, sl, fp, pc}
   34758:	mov	r0, #3
   3475c:	sub	sp, fp, #16
   34760:	pop	{r4, r5, r6, sl, fp, pc}

00034764 <flatcc_verify_table_vector_field@@Base>:
   34764:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34768:	add	fp, sp, #28
   3476c:	sub	sp, sp, #28
   34770:	mov	r4, r3
   34774:	mov	r3, r0
   34778:	mov	r0, #4
   3477c:	add	r0, r0, r1, lsl #1
   34780:	ldrh	r7, [r3, #22]
   34784:	uxth	r1, r0
   34788:	cmp	r1, r7
   3478c:	bcs	347d4 <flatcc_verify_table_vector_field@@Base+0x70>
   34790:	ldr	r1, [r3, #12]
   34794:	uxtah	r0, r1, r0
   34798:	ldrh	r1, [r0]
   3479c:	cmp	r1, #0
   347a0:	beq	347d4 <flatcc_verify_table_vector_field@@Base+0x70>
   347a4:	ldrh	r2, [r3, #20]
   347a8:	add	r7, r1, #4
   347ac:	mov	r0, #13
   347b0:	cmp	r7, r2
   347b4:	bhi	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   347b8:	ldr	r2, [r3, #16]
   347bc:	mov	r0, #12
   347c0:	add	r6, r2, r1
   347c4:	tst	r6, #3
   347c8:	beq	347e8 <flatcc_verify_table_vector_field@@Base+0x84>
   347cc:	sub	sp, fp, #28
   347d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   347d4:	cmp	r2, #0
   347d8:	movwne	r2, #1
   347dc:	lsl	r0, r2, #2
   347e0:	sub	sp, fp, #28
   347e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   347e8:	cmp	r6, #0
   347ec:	beq	34948 <flatcc_verify_table_vector_field@@Base+0x1e4>
   347f0:	ldr	r7, [r3, #8]
   347f4:	cmp	r7, #1
   347f8:	blt	34a14 <flatcc_verify_table_vector_field@@Base+0x2b0>
   347fc:	ldr	r9, [r3]
   34800:	mov	r0, #16
   34804:	ldr	ip, [r9, r6]
   34808:	add	r5, ip, r6
   3480c:	cmp	r5, r6
   34810:	bls	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   34814:	ldr	lr, [r3, #4]
   34818:	add	r8, r5, #4
   3481c:	cmp	r8, lr
   34820:	bhi	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   34824:	ands	r3, r8, #3
   34828:	bne	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   3482c:	ldr	sl, [r9, r5]
   34830:	mov	r0, #25
   34834:	cmn	sl, #-1073741823	; 0xc0000001
   34838:	bhi	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   3483c:	sub	r0, lr, r5
   34840:	sub	r3, r0, #4
   34844:	mov	r0, #26
   34848:	cmp	r3, sl, lsl #2
   3484c:	bcc	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   34850:	cmp	sl, #0
   34854:	beq	34948 <flatcc_verify_table_vector_field@@Base+0x1e4>
   34858:	sub	r0, lr, ip
   3485c:	sub	r0, r0, r2
   34860:	sub	r0, r0, r1
   34864:	sub	r5, r0, #4
   34868:	sub	r0, r7, #2
   3486c:	str	r0, [sp]
   34870:	ldr	r1, [sp]
   34874:	ldr	r0, [r9, r8]
   34878:	cmp	r1, #0
   3487c:	str	r1, [sp, #12]
   34880:	beq	34a0c <flatcc_verify_table_vector_field@@Base+0x2a8>
   34884:	add	r1, r8, r0
   34888:	add	ip, r1, #4
   3488c:	tst	r1, #3
   34890:	bne	34954 <flatcc_verify_table_vector_field@@Base+0x1f0>
   34894:	cmp	r1, r8
   34898:	bls	34954 <flatcc_verify_table_vector_field@@Base+0x1f0>
   3489c:	cmp	ip, lr
   348a0:	bhi	34954 <flatcc_verify_table_vector_field@@Base+0x1f0>
   348a4:	str	r1, [sp, #20]
   348a8:	add	r3, r9, r0
   348ac:	ldr	r6, [r3, r8]
   348b0:	sub	r7, r0, r6
   348b4:	add	r3, r8, r7
   348b8:	tst	r3, #-2147483647	; 0x80000001
   348bc:	bne	34954 <flatcc_verify_table_vector_field@@Base+0x1f0>
   348c0:	add	r2, r3, #2
   348c4:	cmp	r2, lr
   348c8:	bhi	34954 <flatcc_verify_table_vector_field@@Base+0x1f0>
   348cc:	add	r2, r9, r7
   348d0:	add	r2, r2, r8
   348d4:	ldrh	r7, [r2]
   348d8:	cmp	r7, #4
   348dc:	strh	r7, [sp, #26]
   348e0:	bcc	34954 <flatcc_verify_table_vector_field@@Base+0x1f0>
   348e4:	ands	r2, r7, #1
   348e8:	bne	34954 <flatcc_verify_table_vector_field@@Base+0x1f0>
   348ec:	add	r2, r0, r7
   348f0:	sub	r2, r2, r6
   348f4:	add	r2, r8, r2
   348f8:	cmp	r2, lr
   348fc:	bhi	34954 <flatcc_verify_table_vector_field@@Base+0x1f0>
   34900:	add	r3, r9, r3
   34904:	sub	r0, r5, r0
   34908:	ldrh	r2, [r3, #2]
   3490c:	cmp	r0, r2
   34910:	strh	r2, [sp, #24]
   34914:	bcc	34954 <flatcc_verify_table_vector_field@@Base+0x1f0>
   34918:	add	r0, sp, #4
   3491c:	stmib	sp, {r9, lr}
   34920:	mov	r6, lr
   34924:	str	r3, [sp, #16]
   34928:	blx	r4
   3492c:	cmp	r0, #0
   34930:	bne	34a20 <flatcc_verify_table_vector_field@@Base+0x2bc>
   34934:	subs	sl, sl, #1
   34938:	sub	r5, r5, #4
   3493c:	add	r8, r8, #4
   34940:	mov	lr, r6
   34944:	bne	34870 <flatcc_verify_table_vector_field@@Base+0x10c>
   34948:	mov	r0, #0
   3494c:	sub	sp, fp, #28
   34950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34954:	ldr	r0, [sp]
   34958:	str	r0, [sp, #12]
   3495c:	mov	r0, #15
   34960:	tst	r1, #3
   34964:	bne	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   34968:	cmp	r1, r8
   3496c:	bls	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   34970:	cmp	ip, lr
   34974:	bhi	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   34978:	str	r1, [sp, #20]
   3497c:	ldr	r0, [r9, r1]
   34980:	sub	r7, r1, r0
   34984:	mov	r0, #29
   34988:	tst	r7, #-2147483647	; 0x80000001
   3498c:	bne	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   34990:	add	r3, r7, #2
   34994:	mov	r0, #27
   34998:	cmp	r3, lr
   3499c:	bhi	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   349a0:	mov	r2, r9
   349a4:	mov	r0, #30
   349a8:	ldrh	r6, [r2, r7]!
   349ac:	tst	r6, #1
   349b0:	strh	r6, [sp, #26]
   349b4:	bne	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   349b8:	add	r7, r7, r6
   349bc:	cmp	r7, lr
   349c0:	bhi	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   349c4:	mov	r0, #28
   349c8:	cmp	r6, #4
   349cc:	bcc	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   349d0:	add	r0, r9, r3
   349d4:	sub	r1, lr, r1
   349d8:	mov	r5, lr
   349dc:	ldrh	r3, [r0]
   349e0:	mov	r0, #20
   349e4:	cmp	r1, r3
   349e8:	strh	r3, [sp, #24]
   349ec:	bcc	347cc <flatcc_verify_table_vector_field@@Base+0x68>
   349f0:	add	r0, sp, #4
   349f4:	str	r5, [sp, #8]
   349f8:	str	r9, [sp, #4]
   349fc:	str	r2, [sp, #16]
   34a00:	blx	r4
   34a04:	sub	sp, fp, #28
   34a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34a0c:	mov	r0, #0
   34a10:	str	r0, [sp, #12]
   34a14:	mov	r0, #3
   34a18:	sub	sp, fp, #28
   34a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34a20:	ldr	r0, [r9, r8]
   34a24:	ldr	r1, [sp]
   34a28:	mov	lr, r6
   34a2c:	str	r1, [sp, #12]
   34a30:	add	r1, r0, r8
   34a34:	add	ip, r1, #4
   34a38:	b	3495c <flatcc_verify_table_vector_field@@Base+0x1f8>

00034a3c <flatcc_verify_union_table@@Base>:
   34a3c:	push	{r4, r5, r6, sl, fp, lr}
   34a40:	add	fp, sp, #16
   34a44:	sub	sp, sp, #24
   34a48:	ldr	r5, [r0, #16]
   34a4c:	ldr	r2, [r0, #20]
   34a50:	ldr	ip, [r0]
   34a54:	ldr	r3, [r0, #4]
   34a58:	ldr	r0, [r0, #8]
   34a5c:	subs	r0, r0, #1
   34a60:	str	r0, [sp, #8]
   34a64:	beq	34b1c <flatcc_verify_union_table@@Base+0xe0>
   34a68:	add	r2, r2, r5
   34a6c:	mov	r0, #15
   34a70:	tst	r2, #3
   34a74:	bne	34b14 <flatcc_verify_union_table@@Base+0xd8>
   34a78:	cmp	r2, r5
   34a7c:	bls	34b14 <flatcc_verify_union_table@@Base+0xd8>
   34a80:	add	r6, r2, #4
   34a84:	cmp	r6, r3
   34a88:	bhi	34b14 <flatcc_verify_union_table@@Base+0xd8>
   34a8c:	str	r2, [sp, #16]
   34a90:	ldr	r0, [ip, r2]
   34a94:	sub	r5, r2, r0
   34a98:	mov	r0, #29
   34a9c:	tst	r5, #-2147483647	; 0x80000001
   34aa0:	bne	34b14 <flatcc_verify_union_table@@Base+0xd8>
   34aa4:	add	r4, r5, #2
   34aa8:	mov	r0, #27
   34aac:	cmp	r4, r3
   34ab0:	bhi	34b14 <flatcc_verify_union_table@@Base+0xd8>
   34ab4:	mov	lr, ip
   34ab8:	mov	r0, #30
   34abc:	ldrh	r6, [lr, r5]!
   34ac0:	tst	r6, #1
   34ac4:	strh	r6, [sp, #22]
   34ac8:	bne	34b14 <flatcc_verify_union_table@@Base+0xd8>
   34acc:	add	r5, r5, r6
   34ad0:	cmp	r5, r3
   34ad4:	bhi	34b14 <flatcc_verify_union_table@@Base+0xd8>
   34ad8:	mov	r0, #28
   34adc:	cmp	r6, #4
   34ae0:	bcc	34b14 <flatcc_verify_union_table@@Base+0xd8>
   34ae4:	add	r0, ip, r4
   34ae8:	sub	r2, r3, r2
   34aec:	ldrh	r4, [r0]
   34af0:	mov	r0, #20
   34af4:	cmp	r2, r4
   34af8:	strh	r4, [sp, #20]
   34afc:	bcc	34b14 <flatcc_verify_union_table@@Base+0xd8>
   34b00:	mov	r0, sp
   34b04:	str	r3, [sp, #4]
   34b08:	str	ip, [sp]
   34b0c:	str	lr, [sp, #12]
   34b10:	blx	r1
   34b14:	sub	sp, fp, #16
   34b18:	pop	{r4, r5, r6, sl, fp, pc}
   34b1c:	mov	r0, #3
   34b20:	sub	sp, fp, #16
   34b24:	pop	{r4, r5, r6, sl, fp, pc}

00034b28 <flatcc_verify_union_struct@@Base>:
   34b28:	push	{fp, lr}
   34b2c:	mov	fp, sp
   34b30:	ldr	lr, [r0, #20]
   34b34:	mov	r3, r0
   34b38:	mov	r0, #18
   34b3c:	cmp	lr, #0
   34b40:	beq	34b7c <flatcc_verify_union_struct@@Base+0x54>
   34b44:	ldr	ip, [r3, #4]
   34b48:	ldr	r3, [r3, #16]
   34b4c:	add	r3, r3, lr
   34b50:	cmp	r3, ip
   34b54:	bhi	34b7c <flatcc_verify_union_struct@@Base+0x54>
   34b58:	adds	r1, r3, r1
   34b5c:	mov	r0, #10
   34b60:	bcs	34b7c <flatcc_verify_union_struct@@Base+0x54>
   34b64:	mov	r0, #9
   34b68:	cmp	r1, ip
   34b6c:	pophi	{fp, pc}
   34b70:	sub	r0, r2, #1
   34b74:	ands	r0, r3, r0
   34b78:	movwne	r0, #11
   34b7c:	pop	{fp, pc}

00034b80 <flatcc_verify_union_string@@Base>:
   34b80:	push	{fp, lr}
   34b84:	mov	fp, sp
   34b88:	mov	r1, r0
   34b8c:	ldr	r3, [r0, #16]
   34b90:	ldr	r0, [r0, #20]
   34b94:	add	r2, r0, r3
   34b98:	mov	r0, #17
   34b9c:	tst	r2, #3
   34ba0:	bne	34be8 <flatcc_verify_union_string@@Base+0x68>
   34ba4:	cmp	r2, r3
   34ba8:	bls	34be8 <flatcc_verify_union_string@@Base+0x68>
   34bac:	ldr	r3, [r1, #4]
   34bb0:	add	ip, r2, #4
   34bb4:	cmp	r3, ip
   34bb8:	bcc	34be8 <flatcc_verify_union_string@@Base+0x68>
   34bbc:	ldr	r1, [r1]
   34bc0:	sub	lr, r3, ip
   34bc4:	mov	r0, #8
   34bc8:	ldr	r2, [r1, r2]
   34bcc:	add	r3, r2, #1
   34bd0:	cmp	lr, r3
   34bd4:	popcc	{fp, pc}
   34bd8:	add	r0, r1, ip
   34bdc:	ldrb	r0, [r0, r2]
   34be0:	cmp	r0, #0
   34be4:	movwne	r0, #7
   34be8:	pop	{fp, pc}

00034bec <flatcc_verify_buffer_header@@Base>:
   34bec:	push	{r4, sl, fp, lr}
   34bf0:	add	fp, sp, #8
   34bf4:	sub	sp, sp, #8
   34bf8:	mov	r4, r0
   34bfc:	mov	r0, #5
   34c00:	tst	r4, #3
   34c04:	bne	34c58 <flatcc_verify_buffer_header@@Base+0x6c>
   34c08:	mov	r0, #6
   34c0c:	cmn	r1, #9
   34c10:	bhi	34c58 <flatcc_verify_buffer_header@@Base+0x6c>
   34c14:	mov	r0, #1
   34c18:	cmp	r1, #8
   34c1c:	bcc	34c58 <flatcc_verify_buffer_header@@Base+0x6c>
   34c20:	cmp	r2, #0
   34c24:	beq	34c60 <flatcc_verify_buffer_header@@Base+0x74>
   34c28:	mov	r0, #0
   34c2c:	mov	r1, r2
   34c30:	mov	r2, #4
   34c34:	str	r0, [sp, #4]
   34c38:	add	r0, sp, #4
   34c3c:	bl	14ef0 <strncpy@plt>
   34c40:	ldr	r1, [sp, #4]
   34c44:	cmp	r1, #0
   34c48:	ldrne	r2, [r4, #4]
   34c4c:	movne	r0, #2
   34c50:	cmpne	r2, r1
   34c54:	moveq	r0, #0
   34c58:	sub	sp, fp, #8
   34c5c:	pop	{r4, sl, fp, pc}
   34c60:	mov	r0, #0
   34c64:	sub	sp, fp, #8
   34c68:	pop	{r4, sl, fp, pc}

00034c6c <flatcc_verify_typed_buffer_header@@Base>:
   34c6c:	mov	r3, r0
   34c70:	mov	r0, #5
   34c74:	tst	r3, #3
   34c78:	bne	34cac <flatcc_verify_typed_buffer_header@@Base+0x40>
   34c7c:	mov	r0, #6
   34c80:	cmn	r1, #9
   34c84:	bhi	34cac <flatcc_verify_typed_buffer_header@@Base+0x40>
   34c88:	mov	r0, #1
   34c8c:	cmp	r1, #8
   34c90:	bxcc	lr
   34c94:	cmp	r2, #0
   34c98:	beq	34cb0 <flatcc_verify_typed_buffer_header@@Base+0x44>
   34c9c:	ldr	r1, [r3, #4]
   34ca0:	mov	r0, #2
   34ca4:	cmp	r1, r2
   34ca8:	moveq	r0, #0
   34cac:	bx	lr
   34cb0:	mov	r0, #0
   34cb4:	bx	lr

00034cb8 <flatcc_verify_struct_as_root@@Base>:
   34cb8:	push	{r4, r5, r6, r7, fp, lr}
   34cbc:	add	fp, sp, #16
   34cc0:	sub	sp, sp, #8
   34cc4:	mov	r5, r0
   34cc8:	mov	r0, #5
   34ccc:	tst	r5, #3
   34cd0:	bne	34d68 <flatcc_verify_struct_as_root@@Base+0xb0>
   34cd4:	mov	r4, r1
   34cd8:	mov	r0, #6
   34cdc:	cmn	r1, #9
   34ce0:	bhi	34d68 <flatcc_verify_struct_as_root@@Base+0xb0>
   34ce4:	mov	r0, #1
   34ce8:	cmp	r4, #8
   34cec:	bcc	34d68 <flatcc_verify_struct_as_root@@Base+0xb0>
   34cf0:	mov	r6, r3
   34cf4:	mov	r7, r2
   34cf8:	cmp	r2, #0
   34cfc:	beq	34d2c <flatcc_verify_struct_as_root@@Base+0x74>
   34d00:	mov	r0, #0
   34d04:	mov	r1, r7
   34d08:	mov	r2, #4
   34d0c:	str	r0, [sp]
   34d10:	mov	r0, sp
   34d14:	bl	14ef0 <strncpy@plt>
   34d18:	ldr	r0, [sp]
   34d1c:	cmp	r0, #0
   34d20:	ldrne	r1, [r5, #4]
   34d24:	cmpne	r1, r0
   34d28:	bne	34d70 <flatcc_verify_struct_as_root@@Base+0xb8>
   34d2c:	ldr	r1, [r5]
   34d30:	mov	r0, #18
   34d34:	sub	r2, r1, #1
   34d38:	cmp	r2, r4
   34d3c:	bcs	34d68 <flatcc_verify_struct_as_root@@Base+0xb0>
   34d40:	adds	r2, r1, r6
   34d44:	mov	r0, #10
   34d48:	bcs	34d68 <flatcc_verify_struct_as_root@@Base+0xb0>
   34d4c:	mov	r0, #9
   34d50:	cmp	r2, r4
   34d54:	bhi	34d68 <flatcc_verify_struct_as_root@@Base+0xb0>
   34d58:	ldr	r0, [fp, #8]
   34d5c:	sub	r0, r0, #1
   34d60:	ands	r0, r1, r0
   34d64:	movwne	r0, #11
   34d68:	sub	sp, fp, #16
   34d6c:	pop	{r4, r5, r6, r7, fp, pc}
   34d70:	mov	r0, #0
   34d74:	mov	r1, r7
   34d78:	mov	r2, #4
   34d7c:	str	r0, [sp, #4]
   34d80:	add	r0, sp, #4
   34d84:	bl	14ef0 <strncpy@plt>
   34d88:	ldr	r0, [sp, #4]
   34d8c:	ldr	r1, [r5, #4]
   34d90:	subs	r1, r1, r0
   34d94:	movwne	r1, #1
   34d98:	cmp	r0, #0
   34d9c:	lslne	r0, r1, #1
   34da0:	sub	sp, fp, #16
   34da4:	pop	{r4, r5, r6, r7, fp, pc}

00034da8 <flatcc_verify_struct_as_typed_root@@Base>:
   34da8:	push	{fp, lr}
   34dac:	mov	fp, sp
   34db0:	mov	ip, r0
   34db4:	mov	r0, #5
   34db8:	tst	ip, #3
   34dbc:	bne	34e2c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   34dc0:	mov	r0, #6
   34dc4:	cmn	r1, #9
   34dc8:	bhi	34e2c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   34dcc:	mov	r0, #1
   34dd0:	cmp	r1, #8
   34dd4:	bcc	34e2c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   34dd8:	cmp	r2, #0
   34ddc:	beq	34df0 <flatcc_verify_struct_as_typed_root@@Base+0x48>
   34de0:	ldr	lr, [ip, #4]
   34de4:	mov	r0, #2
   34de8:	cmp	lr, r2
   34dec:	bne	34e2c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   34df0:	ldr	ip, [ip]
   34df4:	mov	r0, #18
   34df8:	sub	r2, ip, #1
   34dfc:	cmp	r2, r1
   34e00:	bcs	34e2c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   34e04:	adds	r3, ip, r3
   34e08:	mov	r0, #10
   34e0c:	bcs	34e2c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   34e10:	mov	r0, #9
   34e14:	cmp	r3, r1
   34e18:	pophi	{fp, pc}
   34e1c:	ldr	r0, [fp, #8]
   34e20:	sub	r0, r0, #1
   34e24:	ands	r0, ip, r0
   34e28:	movwne	r0, #11
   34e2c:	pop	{fp, pc}

00034e30 <flatcc_verify_table_as_root@@Base>:
   34e30:	push	{r4, r5, r6, r7, fp, lr}
   34e34:	add	fp, sp, #16
   34e38:	sub	sp, sp, #24
   34e3c:	mov	r4, r0
   34e40:	mov	r0, #5
   34e44:	tst	r4, #3
   34e48:	bne	34f54 <flatcc_verify_table_as_root@@Base+0x124>
   34e4c:	mov	r6, r1
   34e50:	mov	r0, #6
   34e54:	cmn	r1, #9
   34e58:	bhi	34f54 <flatcc_verify_table_as_root@@Base+0x124>
   34e5c:	mov	r0, #1
   34e60:	cmp	r6, #8
   34e64:	bcc	34f54 <flatcc_verify_table_as_root@@Base+0x124>
   34e68:	mov	r5, r3
   34e6c:	mov	r7, r2
   34e70:	cmp	r2, #0
   34e74:	beq	34ea4 <flatcc_verify_table_as_root@@Base+0x74>
   34e78:	mov	r0, #0
   34e7c:	mov	r1, r7
   34e80:	mov	r2, #4
   34e84:	str	r0, [sp]
   34e88:	mov	r0, sp
   34e8c:	bl	14ef0 <strncpy@plt>
   34e90:	ldr	r0, [sp]
   34e94:	cmp	r0, #0
   34e98:	ldrne	r1, [r4, #4]
   34e9c:	cmpne	r1, r0
   34ea0:	bne	34f5c <flatcc_verify_table_as_root@@Base+0x12c>
   34ea4:	ldr	r1, [r4]
   34ea8:	mov	r0, #99	; 0x63
   34eac:	str	r0, [sp, #8]
   34eb0:	mov	r0, #15
   34eb4:	tst	r1, #3
   34eb8:	bne	34f54 <flatcc_verify_table_as_root@@Base+0x124>
   34ebc:	cmp	r1, #0
   34ec0:	beq	34f54 <flatcc_verify_table_as_root@@Base+0x124>
   34ec4:	add	r2, r1, #4
   34ec8:	cmp	r2, r6
   34ecc:	bhi	34f54 <flatcc_verify_table_as_root@@Base+0x124>
   34ed0:	str	r1, [sp, #16]
   34ed4:	ldr	r0, [r4, r1]
   34ed8:	sub	r7, r1, r0
   34edc:	mov	r0, #29
   34ee0:	tst	r7, #-2147483647	; 0x80000001
   34ee4:	bne	34f54 <flatcc_verify_table_as_root@@Base+0x124>
   34ee8:	add	r3, r7, #2
   34eec:	mov	r0, #27
   34ef0:	cmp	r3, r6
   34ef4:	bhi	34f54 <flatcc_verify_table_as_root@@Base+0x124>
   34ef8:	mov	ip, r4
   34efc:	mov	r0, #30
   34f00:	ldrh	r2, [ip, r7]!
   34f04:	tst	r2, #1
   34f08:	strh	r2, [sp, #22]
   34f0c:	bne	34f54 <flatcc_verify_table_as_root@@Base+0x124>
   34f10:	add	r7, r7, r2
   34f14:	cmp	r7, r6
   34f18:	bhi	34f54 <flatcc_verify_table_as_root@@Base+0x124>
   34f1c:	mov	r0, #28
   34f20:	cmp	r2, #4
   34f24:	bcc	34f54 <flatcc_verify_table_as_root@@Base+0x124>
   34f28:	add	r0, r4, r3
   34f2c:	sub	r1, r6, r1
   34f30:	ldrh	r2, [r0]
   34f34:	mov	r0, #20
   34f38:	cmp	r1, r2
   34f3c:	strh	r2, [sp, #20]
   34f40:	bcc	34f54 <flatcc_verify_table_as_root@@Base+0x124>
   34f44:	mov	r0, sp
   34f48:	stm	sp, {r4, r6}
   34f4c:	str	ip, [sp, #12]
   34f50:	blx	r5
   34f54:	sub	sp, fp, #16
   34f58:	pop	{r4, r5, r6, r7, fp, pc}
   34f5c:	mov	r0, #0
   34f60:	mov	r1, r7
   34f64:	mov	r2, #4
   34f68:	str	r0, [sp]
   34f6c:	mov	r0, sp
   34f70:	bl	14ef0 <strncpy@plt>
   34f74:	ldr	r0, [sp]
   34f78:	ldr	r1, [r4, #4]
   34f7c:	subs	r1, r1, r0
   34f80:	movwne	r1, #1
   34f84:	cmp	r0, #0
   34f88:	lslne	r0, r1, #1
   34f8c:	sub	sp, fp, #16
   34f90:	pop	{r4, r5, r6, r7, fp, pc}

00034f94 <flatcc_verify_table_as_typed_root@@Base>:
   34f94:	push	{r4, r5, r6, sl, fp, lr}
   34f98:	add	fp, sp, #16
   34f9c:	sub	sp, sp, #24
   34fa0:	mov	ip, #5
   34fa4:	tst	r0, #3
   34fa8:	bne	35090 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   34fac:	mov	ip, #6
   34fb0:	cmn	r1, #9
   34fb4:	bhi	35090 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   34fb8:	mov	ip, #1
   34fbc:	cmp	r1, #8
   34fc0:	bcc	35090 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   34fc4:	cmp	r2, #0
   34fc8:	beq	34fdc <flatcc_verify_table_as_typed_root@@Base+0x48>
   34fcc:	ldr	r6, [r0, #4]
   34fd0:	mov	ip, #2
   34fd4:	cmp	r6, r2
   34fd8:	bne	35090 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   34fdc:	ldr	r2, [r0]
   34fe0:	mov	r6, #99	; 0x63
   34fe4:	mov	ip, #15
   34fe8:	str	r6, [sp, #8]
   34fec:	tst	r2, #3
   34ff0:	bne	35090 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   34ff4:	cmp	r2, #0
   34ff8:	beq	35090 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   34ffc:	add	r6, r2, #4
   35000:	cmp	r6, r1
   35004:	bhi	35090 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35008:	str	r2, [sp, #16]
   3500c:	mov	ip, #29
   35010:	ldr	r6, [r0, r2]
   35014:	sub	r5, r2, r6
   35018:	tst	r5, #-2147483647	; 0x80000001
   3501c:	bne	35090 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35020:	add	r4, r5, #2
   35024:	mov	ip, #27
   35028:	cmp	r4, r1
   3502c:	bhi	35090 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35030:	mov	lr, r0
   35034:	mov	ip, #30
   35038:	ldrh	r6, [lr, r5]!
   3503c:	tst	r6, #1
   35040:	strh	r6, [sp, #22]
   35044:	bne	35090 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35048:	add	r5, r5, r6
   3504c:	cmp	r5, r1
   35050:	bhi	35090 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35054:	mov	ip, #28
   35058:	cmp	r6, #4
   3505c:	bcc	35090 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35060:	add	r6, r0, r4
   35064:	sub	r2, r1, r2
   35068:	mov	ip, #20
   3506c:	ldrh	r4, [r6]
   35070:	cmp	r2, r4
   35074:	strh	r4, [sp, #20]
   35078:	bcc	35090 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   3507c:	stm	sp, {r0, r1}
   35080:	mov	r0, sp
   35084:	str	lr, [sp, #12]
   35088:	blx	r3
   3508c:	mov	ip, r0
   35090:	mov	r0, ip
   35094:	sub	sp, fp, #16
   35098:	pop	{r4, r5, r6, sl, fp, pc}

0003509c <flatcc_verify_struct_as_nested_root@@Base>:
   3509c:	push	{r4, r5, r6, r7, fp, lr}
   350a0:	add	fp, sp, #16
   350a4:	sub	sp, sp, #8
   350a8:	mov	r7, #4
   350ac:	ldrh	r4, [r0, #22]
   350b0:	ldr	lr, [fp, #12]
   350b4:	add	r5, r7, r1, lsl #1
   350b8:	uxth	ip, r5
   350bc:	cmp	ip, r4
   350c0:	bcs	35148 <flatcc_verify_struct_as_nested_root@@Base+0xac>
   350c4:	ldr	r1, [r0, #12]
   350c8:	uxtah	r5, r1, r5
   350cc:	ldrh	r5, [r5]
   350d0:	cmp	r5, #0
   350d4:	beq	35148 <flatcc_verify_struct_as_nested_root@@Base+0xac>
   350d8:	ldrh	r4, [r0, #20]
   350dc:	add	r6, r5, #4
   350e0:	cmp	r6, r4
   350e4:	bhi	3515c <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   350e8:	ldr	r4, [r0, #16]
   350ec:	add	r6, r4, r5
   350f0:	tst	r6, #3
   350f4:	bne	3515c <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   350f8:	cmp	r6, #0
   350fc:	beq	3520c <flatcc_verify_struct_as_nested_root@@Base+0x170>
   35100:	ldr	r4, [r0]
   35104:	ldr	r5, [r4, r6]
   35108:	add	r5, r5, r6
   3510c:	cmp	r5, r6
   35110:	bls	3515c <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   35114:	ldr	r6, [r0, #4]
   35118:	add	r7, r5, #4
   3511c:	cmp	r7, r6
   35120:	bhi	3515c <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   35124:	ands	r7, r7, #3
   35128:	bne	3515c <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   3512c:	ldr	r4, [r4, r5]
   35130:	sub	r5, r6, r5
   35134:	sub	r5, r5, #4
   35138:	mul	r4, r4, lr
   3513c:	cmp	r5, r4
   35140:	bcc	3515c <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   35144:	b	3520c <flatcc_verify_struct_as_nested_root@@Base+0x170>
   35148:	cmp	r2, #0
   3514c:	beq	351fc <flatcc_verify_struct_as_nested_root@@Base+0x160>
   35150:	cmp	ip, r4
   35154:	bcs	351ec <flatcc_verify_struct_as_nested_root@@Base+0x150>
   35158:	ldr	r1, [r0, #12]
   3515c:	add	r1, r1, ip
   35160:	ldrh	r3, [r1]
   35164:	cmp	r3, #0
   35168:	beq	351ec <flatcc_verify_struct_as_nested_root@@Base+0x150>
   3516c:	ldrh	r2, [r0, #20]
   35170:	add	r7, r3, #4
   35174:	mov	r1, #13
   35178:	cmp	r7, r2
   3517c:	bhi	35260 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   35180:	ldr	r1, [r0, #16]
   35184:	add	r5, r1, r3
   35188:	mov	r1, #12
   3518c:	tst	r5, #3
   35190:	bne	35260 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   35194:	cmp	r5, #0
   35198:	beq	3525c <flatcc_verify_struct_as_nested_root@@Base+0x1c0>
   3519c:	ldr	r2, [r0]
   351a0:	ldr	r1, [r2, r5]
   351a4:	add	r3, r1, r5
   351a8:	mov	r1, #16
   351ac:	cmp	r3, r5
   351b0:	bls	35260 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   351b4:	ldr	r0, [r0, #4]
   351b8:	add	r7, r3, #4
   351bc:	cmp	r7, r0
   351c0:	bhi	35260 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   351c4:	ands	r7, r7, #3
   351c8:	bne	35260 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   351cc:	ldr	r1, [r2, r3]
   351d0:	sub	r0, r0, r3
   351d4:	sub	r0, r0, #4
   351d8:	mul	r2, r1, lr
   351dc:	mov	r1, #0
   351e0:	cmp	r0, r2
   351e4:	movwcc	r1, #26
   351e8:	b	35260 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   351ec:	cmp	r2, #0
   351f0:	movwne	r2, #1
   351f4:	lsl	r1, r2, #2
   351f8:	b	35260 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   351fc:	mov	r1, #0
   35200:	cmp	ip, r4
   35204:	bcs	35260 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   35208:	ldr	r1, [r0, #12]
   3520c:	add	r1, r1, ip
   35210:	ldrh	r2, [r1]
   35214:	mov	r1, #0
   35218:	cmp	r2, #0
   3521c:	beq	35260 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   35220:	ldr	r7, [r0]
   35224:	ldr	r0, [r0, #16]
   35228:	add	r0, r7, r0
   3522c:	adds	r0, r0, r2
   35230:	beq	35260 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   35234:	ldr	r2, [r0]
   35238:	ldr	ip, [fp, #8]
   3523c:	ldr	r1, [r2, r0]!
   35240:	str	lr, [sp]
   35244:	add	r0, r2, #4
   35248:	mov	r2, r3
   3524c:	mov	r3, ip
   35250:	bl	34cb8 <flatcc_verify_struct_as_root@@Base>
   35254:	sub	sp, fp, #16
   35258:	pop	{r4, r5, r6, r7, fp, pc}
   3525c:	mov	r1, #0
   35260:	mov	r0, r1
   35264:	sub	sp, fp, #16
   35268:	pop	{r4, r5, r6, r7, fp, pc}

0003526c <flatcc_verify_table_as_nested_root@@Base>:
   3526c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   35270:	add	fp, sp, #24
   35274:	sub	sp, sp, #24
   35278:	mov	r4, r0
   3527c:	mov	r0, #4
   35280:	ldr	r8, [fp, #8]
   35284:	mov	r5, r3
   35288:	add	r6, r0, r1, lsl #1
   3528c:	ldrh	r7, [r4, #22]
   35290:	uxth	r3, r6
   35294:	cmp	r3, r7
   35298:	bcs	35320 <flatcc_verify_table_as_nested_root@@Base+0xb4>
   3529c:	ldr	r0, [r4, #12]
   352a0:	uxtah	r6, r0, r6
   352a4:	ldrh	r6, [r6]
   352a8:	cmp	r6, #0
   352ac:	beq	35320 <flatcc_verify_table_as_nested_root@@Base+0xb4>
   352b0:	ldrh	r7, [r4, #20]
   352b4:	add	r1, r6, #4
   352b8:	cmp	r1, r7
   352bc:	bhi	35334 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   352c0:	ldr	r1, [r4, #16]
   352c4:	add	r7, r1, r6
   352c8:	tst	r7, #3
   352cc:	bne	35334 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   352d0:	cmp	r7, #0
   352d4:	beq	353ec <flatcc_verify_table_as_nested_root@@Base+0x180>
   352d8:	ldr	ip, [r4]
   352dc:	ldr	r1, [ip, r7]
   352e0:	add	r6, r1, r7
   352e4:	cmp	r6, r7
   352e8:	bls	35334 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   352ec:	ldr	lr, [r4, #4]
   352f0:	add	r7, r6, #4
   352f4:	cmp	r7, lr
   352f8:	bhi	35334 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   352fc:	ands	r1, r7, #3
   35300:	bne	35334 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   35304:	ldr	r1, [ip, r6]
   35308:	sub	r7, lr, r6
   3530c:	sub	r7, r7, #4
   35310:	mul	r1, r1, r8
   35314:	cmp	r7, r1
   35318:	bcc	35334 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   3531c:	b	353ec <flatcc_verify_table_as_nested_root@@Base+0x180>
   35320:	cmp	r2, #0
   35324:	beq	353dc <flatcc_verify_table_as_nested_root@@Base+0x170>
   35328:	cmp	r3, r7
   3532c:	bcs	353c8 <flatcc_verify_table_as_nested_root@@Base+0x15c>
   35330:	ldr	r0, [r4, #12]
   35334:	add	r0, r0, r3
   35338:	ldrh	r3, [r0]
   3533c:	cmp	r3, #0
   35340:	beq	353c8 <flatcc_verify_table_as_nested_root@@Base+0x15c>
   35344:	ldrh	r1, [r4, #20]
   35348:	add	r2, r3, #4
   3534c:	mov	r0, #13
   35350:	cmp	r2, r1
   35354:	bhi	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35358:	ldr	r0, [r4, #16]
   3535c:	add	r7, r0, r3
   35360:	mov	r0, #12
   35364:	tst	r7, #3
   35368:	bne	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   3536c:	cmp	r7, #0
   35370:	beq	3553c <flatcc_verify_table_as_nested_root@@Base+0x2d0>
   35374:	ldr	r2, [r4]
   35378:	ldr	r0, [r2, r7]
   3537c:	add	r3, r0, r7
   35380:	mov	r0, #16
   35384:	cmp	r3, r7
   35388:	bls	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   3538c:	ldr	r7, [r4, #4]
   35390:	add	r6, r3, #4
   35394:	cmp	r6, r7
   35398:	bhi	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   3539c:	ands	r1, r6, #3
   353a0:	bne	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   353a4:	ldr	r0, [r2, r3]
   353a8:	mul	r1, r0, r8
   353ac:	sub	r0, r7, r3
   353b0:	sub	r2, r0, #4
   353b4:	mov	r0, #0
   353b8:	cmp	r2, r1
   353bc:	movwcc	r0, #26
   353c0:	sub	sp, fp, #24
   353c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   353c8:	cmp	r2, #0
   353cc:	movwne	r2, #1
   353d0:	lsl	r0, r2, #2
   353d4:	sub	sp, fp, #24
   353d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   353dc:	mov	r0, #0
   353e0:	cmp	r3, r7
   353e4:	bcs	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   353e8:	ldr	r0, [r4, #12]
   353ec:	add	r0, r0, r3
   353f0:	ldrh	r1, [r0]
   353f4:	mov	r0, #0
   353f8:	cmp	r1, #0
   353fc:	beq	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35400:	ldr	r2, [r4]
   35404:	ldr	r3, [r4, #16]
   35408:	add	r2, r2, r3
   3540c:	adds	r1, r2, r1
   35410:	beq	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35414:	ldr	r6, [r1]
   35418:	mov	r0, #5
   3541c:	ldr	r8, [r6, r1]!
   35420:	add	r7, r6, #4
   35424:	tst	r7, #3
   35428:	bne	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   3542c:	mov	r0, #6
   35430:	cmn	r8, #9
   35434:	bhi	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35438:	mov	r0, #1
   3543c:	cmp	r8, #8
   35440:	bcc	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35444:	cmp	r5, #0
   35448:	beq	35478 <flatcc_verify_table_as_nested_root@@Base+0x20c>
   3544c:	mov	r0, #0
   35450:	mov	r1, r5
   35454:	mov	r2, #4
   35458:	str	r0, [sp]
   3545c:	mov	r0, sp
   35460:	bl	14ef0 <strncpy@plt>
   35464:	ldr	r0, [sp]
   35468:	cmp	r0, #0
   3546c:	ldrne	r1, [r6, #8]
   35470:	cmpne	r1, r0
   35474:	bne	35548 <flatcc_verify_table_as_nested_root@@Base+0x2dc>
   35478:	ldr	r0, [r4, #8]
   3547c:	ldr	r1, [r7]
   35480:	subs	r0, r0, #1
   35484:	str	r0, [sp, #8]
   35488:	beq	35580 <flatcc_verify_table_as_nested_root@@Base+0x314>
   3548c:	mov	r0, #15
   35490:	tst	r1, #3
   35494:	bne	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35498:	cmp	r1, #0
   3549c:	beq	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   354a0:	add	r2, r1, #4
   354a4:	cmp	r2, r8
   354a8:	bhi	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   354ac:	str	r1, [sp, #16]
   354b0:	ldr	r0, [r7, r1]
   354b4:	sub	r6, r1, r0
   354b8:	mov	r0, #29
   354bc:	tst	r6, #-2147483647	; 0x80000001
   354c0:	bne	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   354c4:	add	r3, r6, #2
   354c8:	mov	r0, #27
   354cc:	cmp	r3, r8
   354d0:	bhi	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   354d4:	mov	r2, r7
   354d8:	mov	r0, #30
   354dc:	ldrh	r5, [r2, r6]!
   354e0:	tst	r5, #1
   354e4:	strh	r5, [sp, #22]
   354e8:	bne	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   354ec:	add	r6, r6, r5
   354f0:	cmp	r6, r8
   354f4:	bhi	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   354f8:	mov	r0, #28
   354fc:	cmp	r5, #4
   35500:	bcc	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35504:	add	r0, r7, r3
   35508:	sub	r1, r8, r1
   3550c:	ldrh	r3, [r0]
   35510:	mov	r0, #20
   35514:	cmp	r1, r3
   35518:	strh	r3, [sp, #20]
   3551c:	bcc	35534 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35520:	ldr	r1, [fp, #12]
   35524:	mov	r0, sp
   35528:	stm	sp, {r7, r8}
   3552c:	str	r2, [sp, #12]
   35530:	blx	r1
   35534:	sub	sp, fp, #24
   35538:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3553c:	mov	r0, #0
   35540:	sub	sp, fp, #24
   35544:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   35548:	mov	r0, #0
   3554c:	mov	r1, r5
   35550:	mov	r2, #4
   35554:	str	r0, [sp]
   35558:	mov	r0, sp
   3555c:	bl	14ef0 <strncpy@plt>
   35560:	ldr	r0, [sp]
   35564:	ldr	r1, [r6, #8]
   35568:	subs	r1, r1, r0
   3556c:	movwne	r1, #1
   35570:	cmp	r0, #0
   35574:	lslne	r0, r1, #1
   35578:	sub	sp, fp, #24
   3557c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   35580:	mov	r0, #3
   35584:	sub	sp, fp, #24
   35588:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003558c <flatcc_verify_union_field@@Base>:
   3558c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35590:	add	fp, sp, #28
   35594:	sub	sp, sp, #28
   35598:	mov	r7, #2
   3559c:	ldrh	r4, [r0, #22]
   355a0:	lsl	r5, r1, #1
   355a4:	add	r7, r7, r1, lsl #1
   355a8:	uxth	r6, r7
   355ac:	cmp	r6, r4
   355b0:	bcs	356a8 <flatcc_verify_union_field@@Base+0x11c>
   355b4:	ldr	r6, [r0, #12]
   355b8:	uxtah	r1, r6, r7
   355bc:	ldrh	ip, [r1]
   355c0:	cmp	ip, #0
   355c4:	beq	356a8 <flatcc_verify_union_field@@Base+0x11c>
   355c8:	ldrh	r7, [r0, #20]
   355cc:	mov	r1, #13
   355d0:	cmp	ip, r7
   355d4:	bcs	356dc <flatcc_verify_union_field@@Base+0x150>
   355d8:	add	r7, r5, #4
   355dc:	ldr	lr, [r0]
   355e0:	mov	r1, #1
   355e4:	uxth	sl, r7
   355e8:	cmp	sl, r4
   355ec:	bcs	35600 <flatcc_verify_union_field@@Base+0x74>
   355f0:	uxtah	r1, r6, r7
   355f4:	ldrh	r1, [r1]
   355f8:	clz	r1, r1
   355fc:	lsr	r1, r1, #5
   35600:	ldr	r9, [r0, #16]
   35604:	cmp	r1, #0
   35608:	moveq	r1, #24
   3560c:	add	r8, lr, r9
   35610:	ldrb	r5, [r8, ip]
   35614:	cmpeq	r5, #0
   35618:	beq	356dc <flatcc_verify_union_field@@Base+0x150>
   3561c:	mov	r1, #0
   35620:	cmp	r5, #0
   35624:	beq	356dc <flatcc_verify_union_field@@Base+0x150>
   35628:	cmp	sl, r4
   3562c:	bcs	356e8 <flatcc_verify_union_field@@Base+0x15c>
   35630:	uxtah	r1, r6, r7
   35634:	ldrh	r4, [r1]
   35638:	cmp	r4, #0
   3563c:	beq	356e8 <flatcc_verify_union_field@@Base+0x15c>
   35640:	ldrh	r1, [r0, #20]
   35644:	add	r2, r4, #4
   35648:	cmp	r2, r1
   3564c:	mov	r1, #13
   35650:	bhi	356dc <flatcc_verify_union_field@@Base+0x150>
   35654:	add	r2, r9, r4
   35658:	mov	r1, #12
   3565c:	tst	r2, #3
   35660:	bne	356dc <flatcc_verify_union_field@@Base+0x150>
   35664:	cmp	r2, #0
   35668:	mov	r1, #0
   3566c:	beq	356dc <flatcc_verify_union_field@@Base+0x150>
   35670:	str	lr, [sp, #4]
   35674:	ldr	r1, [r0, #4]
   35678:	ldr	r0, [r0, #8]
   3567c:	str	r1, [sp, #8]
   35680:	str	r2, [sp, #20]
   35684:	str	r0, [sp, #12]
   35688:	ldr	r0, [lr, r2]
   3568c:	str	r0, [sp, #24]
   35690:	ldrb	r0, [r8, ip]
   35694:	strb	r0, [sp, #16]
   35698:	add	r0, sp, #4
   3569c:	blx	r3
   356a0:	mov	r1, r0
   356a4:	b	356dc <flatcc_verify_union_field@@Base+0x150>
   356a8:	add	r1, r5, #4
   356ac:	uxth	r3, r1
   356b0:	cmp	r3, r4
   356b4:	bcs	356d0 <flatcc_verify_union_field@@Base+0x144>
   356b8:	ldr	r0, [r0, #12]
   356bc:	uxtah	r0, r0, r1
   356c0:	mov	r1, #23
   356c4:	ldrh	r0, [r0]
   356c8:	cmp	r0, #0
   356cc:	bne	356dc <flatcc_verify_union_field@@Base+0x150>
   356d0:	cmp	r2, #0
   356d4:	movwne	r2, #21
   356d8:	mov	r1, r2
   356dc:	mov	r0, r1
   356e0:	sub	sp, fp, #28
   356e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   356e8:	cmp	r2, #0
   356ec:	movwne	r2, #1
   356f0:	lsl	r1, r2, #2
   356f4:	b	356dc <flatcc_verify_union_field@@Base+0x150>

000356f8 <flatcc_verify_union_vector_field@@Base>:
   356f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   356fc:	add	fp, sp, #28
   35700:	sub	sp, sp, #28
   35704:	mov	r9, r3
   35708:	mov	r3, #2
   3570c:	lsl	sl, r1, #1
   35710:	add	r5, r3, r1, lsl #1
   35714:	ldrh	r1, [r0, #22]
   35718:	uxth	r3, r5
   3571c:	cmp	r3, r1
   35720:	bcs	35738 <flatcc_verify_union_vector_field@@Base+0x40>
   35724:	ldr	r7, [r0, #12]
   35728:	uxtah	r5, r7, r5
   3572c:	ldrh	r5, [r5]
   35730:	cmp	r5, #0
   35734:	bne	35774 <flatcc_verify_union_vector_field@@Base+0x7c>
   35738:	add	r7, sl, #4
   3573c:	uxth	r5, r7
   35740:	cmp	r5, r1
   35744:	bcs	357f0 <flatcc_verify_union_vector_field@@Base+0xf8>
   35748:	cmp	r2, #0
   3574c:	beq	35768 <flatcc_verify_union_vector_field@@Base+0x70>
   35750:	ldr	r5, [r0, #12]
   35754:	uxtah	r7, r5, r7
   35758:	mov	r5, #22
   3575c:	ldrh	r7, [r7]
   35760:	cmp	r7, #0
   35764:	beq	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   35768:	cmp	r3, r1
   3576c:	bcs	35800 <flatcc_verify_union_vector_field@@Base+0x108>
   35770:	ldr	r7, [r0, #12]
   35774:	add	r5, r7, r3
   35778:	ldrh	r5, [r5]
   3577c:	cmp	r5, #0
   35780:	beq	35800 <flatcc_verify_union_vector_field@@Base+0x108>
   35784:	ldrh	r4, [r0, #20]
   35788:	add	r6, r5, #4
   3578c:	cmp	r6, r4
   35790:	bhi	35814 <flatcc_verify_union_vector_field@@Base+0x11c>
   35794:	ldr	r6, [r0, #16]
   35798:	add	r5, r6, r5
   3579c:	tst	r5, #3
   357a0:	bne	35814 <flatcc_verify_union_vector_field@@Base+0x11c>
   357a4:	cmp	r5, #0
   357a8:	beq	358b0 <flatcc_verify_union_vector_field@@Base+0x1b8>
   357ac:	ldr	ip, [r0]
   357b0:	ldr	r6, [ip, r5]
   357b4:	add	lr, r6, r5
   357b8:	cmp	lr, r5
   357bc:	bls	35814 <flatcc_verify_union_vector_field@@Base+0x11c>
   357c0:	ldr	r8, [r0, #4]
   357c4:	add	r5, lr, #4
   357c8:	cmp	r5, r8
   357cc:	bhi	35814 <flatcc_verify_union_vector_field@@Base+0x11c>
   357d0:	ands	r4, r5, #3
   357d4:	bne	35814 <flatcc_verify_union_vector_field@@Base+0x11c>
   357d8:	ldr	r6, [ip, lr]
   357dc:	sub	r5, r8, lr
   357e0:	sub	r5, r5, #4
   357e4:	cmp	r5, r6
   357e8:	bcc	35814 <flatcc_verify_union_vector_field@@Base+0x11c>
   357ec:	b	358b0 <flatcc_verify_union_vector_field@@Base+0x1b8>
   357f0:	mov	r5, #22
   357f4:	cmp	r2, #0
   357f8:	bne	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   357fc:	b	35768 <flatcc_verify_union_vector_field@@Base+0x70>
   35800:	cmp	r2, #0
   35804:	beq	358a0 <flatcc_verify_union_vector_field@@Base+0x1a8>
   35808:	cmp	r3, r1
   3580c:	bcs	359c0 <flatcc_verify_union_vector_field@@Base+0x2c8>
   35810:	ldr	r7, [r0, #12]
   35814:	add	r1, r7, r3
   35818:	ldrh	r1, [r1]
   3581c:	cmp	r1, #0
   35820:	beq	359c0 <flatcc_verify_union_vector_field@@Base+0x2c8>
   35824:	ldrh	r2, [r0, #20]
   35828:	add	r3, r1, #4
   3582c:	mov	r5, #13
   35830:	cmp	r3, r2
   35834:	bhi	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   35838:	ldr	r2, [r0, #16]
   3583c:	mov	r5, #12
   35840:	add	r3, r2, r1
   35844:	tst	r3, #3
   35848:	bne	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   3584c:	cmp	r3, #0
   35850:	beq	359d8 <flatcc_verify_union_vector_field@@Base+0x2e0>
   35854:	ldr	r1, [r0]
   35858:	mov	r5, #16
   3585c:	ldr	r2, [r1, r3]
   35860:	add	r2, r2, r3
   35864:	cmp	r2, r3
   35868:	bls	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   3586c:	ldr	r0, [r0, #4]
   35870:	add	r3, r2, #4
   35874:	cmp	r3, r0
   35878:	bhi	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   3587c:	ands	r3, r3, #3
   35880:	bne	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   35884:	ldr	r1, [r1, r2]
   35888:	sub	r0, r0, r2
   3588c:	mov	r5, #0
   35890:	sub	r0, r0, #4
   35894:	cmp	r0, r1
   35898:	movwcc	r5, #26
   3589c:	b	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   358a0:	mov	r5, #0
   358a4:	cmp	r3, r1
   358a8:	bcs	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   358ac:	ldr	r7, [r0, #12]
   358b0:	add	r3, r7, r3
   358b4:	mov	r5, #0
   358b8:	ldrh	r3, [r3]
   358bc:	cmp	r3, #0
   358c0:	beq	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   358c4:	ldr	r8, [r0]
   358c8:	ldr	lr, [r0, #16]
   358cc:	add	r6, r8, lr
   358d0:	adds	ip, r6, r3
   358d4:	beq	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   358d8:	add	r3, sl, #4
   358dc:	uxth	r4, r3
   358e0:	cmp	r4, r1
   358e4:	bcs	359c0 <flatcc_verify_union_vector_field@@Base+0x2c8>
   358e8:	uxtah	r1, r7, r3
   358ec:	ldrh	r1, [r1]
   358f0:	cmp	r1, #0
   358f4:	beq	359c0 <flatcc_verify_union_vector_field@@Base+0x2c8>
   358f8:	ldrh	r2, [r0, #20]
   358fc:	add	r3, r1, #4
   35900:	mov	r5, #13
   35904:	cmp	r3, r2
   35908:	bhi	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   3590c:	add	r3, lr, r1
   35910:	mov	r5, #12
   35914:	tst	r3, #3
   35918:	bne	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   3591c:	cmp	r3, #0
   35920:	mov	r5, #0
   35924:	beq	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   35928:	ldr	r1, [r0, #8]
   3592c:	cmp	r1, #1
   35930:	blt	359e0 <flatcc_verify_union_vector_field@@Base+0x2e8>
   35934:	ldr	r2, [r8, r3]
   35938:	mov	r5, #16
   3593c:	add	r2, r2, r3
   35940:	cmp	r2, r3
   35944:	bls	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   35948:	ldr	r0, [r0, #4]
   3594c:	add	r7, r2, #4
   35950:	cmp	r7, r0
   35954:	bhi	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   35958:	ands	r3, r7, #3
   3595c:	bne	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   35960:	ldr	r3, [r8, r2]
   35964:	mov	r5, #25
   35968:	cmn	r3, #-1073741823	; 0xc0000001
   3596c:	bhi	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   35970:	sub	r2, r0, r2
   35974:	mov	r5, #26
   35978:	sub	r2, r2, #4
   3597c:	cmp	r2, r3, lsl #2
   35980:	bcc	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   35984:	ldr	r2, [ip]
   35988:	mov	r5, #34	; 0x22
   3598c:	ldr	sl, [r2, ip]!
   35990:	cmp	r3, sl
   35994:	bne	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   35998:	sub	r1, r1, #1
   3599c:	mov	r5, #0
   359a0:	cmp	sl, #0
   359a4:	str	r1, [sp, #12]
   359a8:	str	r0, [sp, #8]
   359ac:	str	r8, [sp, #4]
   359b0:	beq	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   359b4:	add	r6, r2, #4
   359b8:	add	r4, sp, #4
   359bc:	b	35a00 <flatcc_verify_union_vector_field@@Base+0x308>
   359c0:	cmp	r2, #0
   359c4:	movwne	r2, #1
   359c8:	lsl	r5, r2, #2
   359cc:	mov	r0, r5
   359d0:	sub	sp, fp, #28
   359d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   359d8:	mov	r5, #0
   359dc:	b	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   359e0:	mov	r5, #3
   359e4:	b	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   359e8:	cmp	r0, #0
   359ec:	bne	35a4c <flatcc_verify_union_vector_field@@Base+0x354>
   359f0:	add	r6, r6, #1
   359f4:	subs	sl, sl, #1
   359f8:	add	r7, r7, #4
   359fc:	beq	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   35a00:	ldr	r1, [r8, r7]
   35a04:	ldrb	r0, [r6]
   35a08:	cmp	r1, #0
   35a0c:	beq	359e8 <flatcc_verify_union_vector_field@@Base+0x2f0>
   35a10:	cmp	r0, #0
   35a14:	beq	35a44 <flatcc_verify_union_vector_field@@Base+0x34c>
   35a18:	str	r1, [sp, #24]
   35a1c:	str	r7, [sp, #20]
   35a20:	strb	r0, [sp, #16]
   35a24:	mov	r0, r4
   35a28:	blx	r9
   35a2c:	cmp	r0, #0
   35a30:	beq	359f0 <flatcc_verify_union_vector_field@@Base+0x2f8>
   35a34:	add	r0, sp, #4
   35a38:	blx	r9
   35a3c:	mov	r5, r0
   35a40:	b	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   35a44:	mov	r5, #33	; 0x21
   35a48:	b	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   35a4c:	mov	r5, #32
   35a50:	b	359cc <flatcc_verify_union_vector_field@@Base+0x2d4>
   35a54:	andeq	r0, r0, r0

00035a58 <grisu3_diy_fp_encode_double@@Base>:
   35a58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35a5c:	add	fp, sp, #28
   35a60:	sub	sp, sp, #12
   35a64:	ldr	lr, [fp, #8]
   35a68:	orr	r7, r0, r1
   35a6c:	cmp	lr, #0
   35a70:	movwne	lr, #1
   35a74:	cmp	r7, #0
   35a78:	beq	35e64 <grisu3_diy_fp_encode_double@@Base+0x40c>
   35a7c:	mov	ip, #0
   35a80:	cmp	ip, r1, lsr #22
   35a84:	bne	35aa4 <grisu3_diy_fp_encode_double@@Base+0x4c>
   35a88:	mov	ip, #0
   35a8c:	lsl	r1, r1, #10
   35a90:	sub	ip, ip, #10
   35a94:	orr	r1, r1, r0, lsr #22
   35a98:	lsl	r0, r0, #10
   35a9c:	cmp	r1, #4194304	; 0x400000
   35aa0:	bcc	35a8c <grisu3_diy_fp_encode_double@@Base+0x34>
   35aa4:	sub	r5, r2, r3
   35aa8:	mvn	r2, #0
   35aac:	cmp	r1, #0
   35ab0:	bmi	35c64 <grisu3_diy_fp_encode_double@@Base+0x20c>
   35ab4:	lsl	r1, r1, #1
   35ab8:	lsl	r4, r0, #1
   35abc:	sub	ip, ip, #1
   35ac0:	orr	r1, r1, r0, lsr #31
   35ac4:	subs	r0, r2, r0, lsl #1
   35ac8:	sbcs	r0, r2, r1
   35acc:	mov	r0, r4
   35ad0:	blt	35ab4 <grisu3_diy_fp_encode_double@@Base+0x5c>
   35ad4:	cmn	r5, #348	; 0x15c
   35ad8:	blt	35c70 <grisu3_diy_fp_encode_double@@Base+0x218>
   35adc:	cmp	r5, #348	; 0x15c
   35ae0:	bge	35e84 <grisu3_diy_fp_encode_double@@Base+0x42c>
   35ae4:	add	r0, r5, #348	; 0x15c
   35ae8:	ldr	r9, [pc, #1044]	; 35f04 <grisu3_diy_fp_encode_double@@Base+0x4ac>
   35aec:	asr	r6, r0, #31
   35af0:	add	r0, r0, r6, lsr #29
   35af4:	mvn	r6, #14
   35af8:	and	r6, r6, r0, lsl #1
   35afc:	add	r9, pc, r9
   35b00:	ldr	r8, [r9, r6]!
   35b04:	ldrsh	r7, [r9, #10]
   35b08:	cmp	r5, r7
   35b0c:	blt	35ea4 <grisu3_diy_fp_encode_double@@Base+0x44c>
   35b10:	add	r6, r7, #8
   35b14:	cmp	r6, r5
   35b18:	ble	35ec4 <grisu3_diy_fp_encode_double@@Base+0x46c>
   35b1c:	lsl	r6, lr, #2
   35b20:	rsb	r0, ip, #0
   35b24:	cmp	r5, r7
   35b28:	lsl	sl, r6, r0
   35b2c:	beq	35bb4 <grisu3_diy_fp_encode_double@@Base+0x15c>
   35b30:	mvn	r0, r7
   35b34:	str	sl, [sp, #4]
   35b38:	str	r3, [sp, #8]
   35b3c:	add	r5, r5, r0
   35b40:	cmp	r5, #7
   35b44:	bcs	35ee4 <grisu3_diy_fp_encode_double@@Base+0x48c>
   35b48:	ldr	r0, [pc, #952]	; 35f08 <grisu3_diy_fp_encode_double@@Base+0x4b0>
   35b4c:	add	r0, pc, r0
   35b50:	ldr	r6, [r0, r5, lsl #4]!
   35b54:	ldr	lr, [r0, #4]
   35b58:	ldr	r0, [r0, #8]
   35b5c:	umull	sl, r7, r6, r1
   35b60:	str	r0, [sp]
   35b64:	umull	r3, r0, lr, r4
   35b68:	umaal	r7, r0, lr, r1
   35b6c:	umull	r1, r6, r6, r4
   35b70:	mov	r1, #0
   35b74:	adds	r6, sl, r6
   35b78:	ldr	sl, [sp, #4]
   35b7c:	adc	r1, r1, #0
   35b80:	adds	r3, r6, r3
   35b84:	adc	r1, r1, #0
   35b88:	adds	r3, r3, #-2147483648	; 0x80000000
   35b8c:	adcs	r4, r7, r1
   35b90:	adc	r1, r0, #0
   35b94:	ldr	r0, [sp, #8]
   35b98:	add	r0, r0, r5
   35b9c:	add	r0, r0, #1
   35ba0:	cmp	r0, #19
   35ba4:	ldr	r0, [sp]
   35ba8:	addgt	sl, sl, #4
   35bac:	add	r0, ip, r0
   35bb0:	add	ip, r0, #64	; 0x40
   35bb4:	ldr	r0, [r9, #4]
   35bb8:	umull	r3, r7, r4, r8
   35bbc:	umull	r3, r5, r1, r8
   35bc0:	mov	lr, #0
   35bc4:	umull	r4, r6, r4, r0
   35bc8:	adds	r3, r3, r7
   35bcc:	adc	r7, lr, #0
   35bd0:	umaal	r5, r6, r1, r0
   35bd4:	mov	r1, #9
   35bd8:	adds	r3, r3, r4
   35bdc:	adc	r4, r7, #0
   35be0:	adds	r0, r3, #-2147483648	; 0x80000000
   35be4:	adcs	r4, r5, r4
   35be8:	adc	r3, r6, #0
   35bec:	cmp	sl, #0
   35bf0:	orr	r0, r4, r3
   35bf4:	movweq	r1, #8
   35bf8:	cmp	r0, #0
   35bfc:	beq	35e64 <grisu3_diy_fp_encode_double@@Base+0x40c>
   35c00:	ldrsh	r0, [r9, #8]
   35c04:	cmp	lr, r3, lsr #22
   35c08:	add	r0, r0, ip
   35c0c:	add	r5, r0, #64	; 0x40
   35c10:	mov	r0, r5
   35c14:	bne	35c30 <grisu3_diy_fp_encode_double@@Base+0x1d8>
   35c18:	lsl	r3, r3, #10
   35c1c:	sub	r0, r0, #10
   35c20:	orr	r3, r3, r4, lsr #22
   35c24:	lsl	r4, r4, #10
   35c28:	cmp	r3, #4194304	; 0x400000
   35c2c:	bcc	35c18 <grisu3_diy_fp_encode_double@@Base+0x1c0>
   35c30:	add	r7, r1, sl
   35c34:	subs	r1, r2, r4
   35c38:	sbcs	r1, r2, r3
   35c3c:	bge	35c90 <grisu3_diy_fp_encode_double@@Base+0x238>
   35c40:	lsl	r1, r3, #1
   35c44:	subs	r6, r2, r4, lsl #1
   35c48:	sub	r0, r0, #1
   35c4c:	orr	r3, r1, r4, lsr #31
   35c50:	lsl	r1, r4, #1
   35c54:	mov	r4, r1
   35c58:	sbcs	r6, r2, r3
   35c5c:	blt	35c40 <grisu3_diy_fp_encode_double@@Base+0x1e8>
   35c60:	b	35c94 <grisu3_diy_fp_encode_double@@Base+0x23c>
   35c64:	mov	r4, r0
   35c68:	cmn	r5, #348	; 0x15c
   35c6c:	bge	35adc <grisu3_diy_fp_encode_double@@Base+0x84>
   35c70:	ldr	r0, [pc, #660]	; 35f0c <grisu3_diy_fp_encode_double@@Base+0x4b4>
   35c74:	ldr	r1, [pc, #660]	; 35f10 <grisu3_diy_fp_encode_double@@Base+0x4b8>
   35c78:	ldr	r3, [pc, #660]	; 35f14 <grisu3_diy_fp_encode_double@@Base+0x4bc>
   35c7c:	mov	r2, #80	; 0x50
   35c80:	add	r0, pc, r0
   35c84:	add	r1, pc, r1
   35c88:	add	r3, pc, r3
   35c8c:	bl	14f38 <__assert_fail@plt>
   35c90:	mov	r1, r4
   35c94:	movw	lr, #64462	; 0xfbce
   35c98:	sub	r2, r5, r0
   35c9c:	mov	r5, #0
   35ca0:	movt	lr, #65535	; 0xffff
   35ca4:	lsl	ip, r7, r2
   35ca8:	add	r2, r0, #64	; 0x40
   35cac:	add	r4, lr, #63	; 0x3f
   35cb0:	cmp	r2, r4
   35cb4:	bgt	35d04 <grisu3_diy_fp_encode_double@@Base+0x2ac>
   35cb8:	mvn	r4, #1072	; 0x430
   35cbc:	mov	r5, #64	; 0x40
   35cc0:	cmp	r2, r4
   35cc4:	blt	35cd4 <grisu3_diy_fp_encode_double@@Base+0x27c>
   35cc8:	sub	r5, lr, r0
   35ccc:	cmp	r5, #61	; 0x3d
   35cd0:	blt	35d04 <grisu3_diy_fp_encode_double@@Base+0x2ac>
   35cd4:	sub	r2, r5, #62	; 0x3e
   35cd8:	mov	r4, #9
   35cdc:	add	ip, r4, ip, asr r2
   35ce0:	lsr	r1, r1, r2
   35ce4:	rsb	r4, r5, #94	; 0x5e
   35ce8:	add	r0, r2, r0
   35cec:	orr	r1, r1, r3, lsl r4
   35cf0:	subs	r4, r5, #94	; 0x5e
   35cf4:	mov	r5, #62	; 0x3e
   35cf8:	lsrpl	r1, r3, r4
   35cfc:	lsr	r3, r3, r2
   35d00:	movwpl	r3, #0
   35d04:	lsr	r2, r1, r5
   35d08:	rsb	r4, r5, #32
   35d0c:	lsr	r6, r3, r5
   35d10:	add	r0, r0, r5
   35d14:	orr	r2, r2, r3, lsl r4
   35d18:	subs	r4, r5, #32
   35d1c:	lsrpl	r2, r3, r4
   35d20:	sub	r3, r5, #1
   35d24:	mov	r4, #1
   35d28:	movwpl	r6, #0
   35d2c:	lsl	r4, r4, r3
   35d30:	subs	r3, r5, #33	; 0x21
   35d34:	movwpl	r4, #0
   35d38:	add	r3, ip, r4, lsl #3
   35d3c:	cmp	r5, r3
   35d40:	blt	35d60 <grisu3_diy_fp_encode_double@@Base+0x308>
   35d44:	adds	r2, r2, #1
   35d48:	adc	r6, r6, #0
   35d4c:	tst	r6, #2097152	; 0x200000
   35d50:	beq	35d60 <grisu3_diy_fp_encode_double@@Base+0x308>
   35d54:	lsrs	r6, r6, #1
   35d58:	rrx	r2, r2
   35d5c:	add	r0, r0, #1
   35d60:	and	r1, r4, r1
   35d64:	cmp	r6, #2097152	; 0x200000
   35d68:	bcc	35d8c <grisu3_diy_fp_encode_double@@Base+0x334>
   35d6c:	mov	r5, #0
   35d70:	lsrs	r7, r6, #1
   35d74:	rrx	r2, r2
   35d78:	cmp	r5, r6, lsr #22
   35d7c:	add	r0, r0, #1
   35d80:	mov	r6, r7
   35d84:	bne	35d70 <grisu3_diy_fp_encode_double@@Base+0x318>
   35d88:	b	35d90 <grisu3_diy_fp_encode_double@@Base+0x338>
   35d8c:	mov	r7, r6
   35d90:	ldr	r8, [fp, #12]
   35d94:	vmov.i32	d16, #0	; 0x00000000
   35d98:	lsl	r9, r4, #3
   35d9c:	lsl	r1, r1, #3
   35da0:	cmp	r0, lr
   35da4:	blt	35e38 <grisu3_diy_fp_encode_double@@Base+0x3e0>
   35da8:	and	r4, r7, #1048576	; 0x100000
   35dac:	mov	r5, #1
   35db0:	cmp	r0, lr
   35db4:	eor	r5, r5, r4, lsr #20
   35db8:	beq	35dfc <grisu3_diy_fp_encode_double@@Base+0x3a4>
   35dbc:	cmp	r4, #0
   35dc0:	bne	35dfc <grisu3_diy_fp_encode_double@@Base+0x3a4>
   35dc4:	mov	r4, #1
   35dc8:	lsl	r5, r7, #1
   35dcc:	sub	r0, r0, #1
   35dd0:	orr	r6, r5, r2, lsr #31
   35dd4:	ands	r5, r7, #524288	; 0x80000
   35dd8:	lsl	r2, r2, #1
   35ddc:	eor	r5, r4, r5, lsr #19
   35de0:	bne	35df0 <grisu3_diy_fp_encode_double@@Base+0x398>
   35de4:	cmp	r0, lr
   35de8:	mov	r7, r6
   35dec:	bgt	35dc8 <grisu3_diy_fp_encode_double@@Base+0x370>
   35df0:	cmp	r0, lr
   35df4:	beq	35e08 <grisu3_diy_fp_encode_double@@Base+0x3b0>
   35df8:	b	35e18 <grisu3_diy_fp_encode_double@@Base+0x3c0>
   35dfc:	mov	r6, r7
   35e00:	cmp	r0, lr
   35e04:	bne	35e18 <grisu3_diy_fp_encode_double@@Base+0x3c0>
   35e08:	cmp	r5, #0
   35e0c:	mov	r7, #0
   35e10:	mov	r5, #0
   35e14:	bne	35e28 <grisu3_diy_fp_encode_double@@Base+0x3d0>
   35e18:	movw	r7, #1075	; 0x433
   35e1c:	add	r0, r0, r7
   35e20:	mov	r7, #0
   35e24:	lsl	r5, r0, #20
   35e28:	bfc	r6, #20, #12
   35e2c:	orr	r0, r7, r2
   35e30:	orr	r2, r5, r6
   35e34:	vmov	d16, r0, r2
   35e38:	cmp	r1, r3
   35e3c:	sub	r3, r9, ip
   35e40:	mov	r2, #0
   35e44:	mov	r0, #0
   35e48:	vstr	d16, [r8]
   35e4c:	movwge	r2, #1
   35e50:	cmp	r3, r1
   35e54:	movwge	r0, #1
   35e58:	orr	r0, r2, r0
   35e5c:	sub	sp, fp, #28
   35e60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35e64:	ldr	r0, [pc, #220]	; 35f48 <grisu3_diy_fp_encode_double@@Base+0x4f0>
   35e68:	ldr	r1, [pc, #220]	; 35f4c <grisu3_diy_fp_encode_double@@Base+0x4f4>
   35e6c:	ldr	r3, [pc, #220]	; 35f50 <grisu3_diy_fp_encode_double@@Base+0x4f8>
   35e70:	mov	r2, #260	; 0x104
   35e74:	add	r0, pc, r0
   35e78:	add	r1, pc, r1
   35e7c:	add	r3, pc, r3
   35e80:	bl	14f38 <__assert_fail@plt>
   35e84:	ldr	r0, [pc, #140]	; 35f18 <grisu3_diy_fp_encode_double@@Base+0x4c0>
   35e88:	ldr	r1, [pc, #140]	; 35f1c <grisu3_diy_fp_encode_double@@Base+0x4c4>
   35e8c:	ldr	r3, [pc, #140]	; 35f20 <grisu3_diy_fp_encode_double@@Base+0x4c8>
   35e90:	mov	r2, #81	; 0x51
   35e94:	add	r0, pc, r0
   35e98:	add	r1, pc, r1
   35e9c:	add	r3, pc, r3
   35ea0:	bl	14f38 <__assert_fail@plt>
   35ea4:	ldr	r0, [pc, #120]	; 35f24 <grisu3_diy_fp_encode_double@@Base+0x4cc>
   35ea8:	ldr	r1, [pc, #120]	; 35f28 <grisu3_diy_fp_encode_double@@Base+0x4d0>
   35eac:	ldr	r3, [pc, #120]	; 35f2c <grisu3_diy_fp_encode_double@@Base+0x4d4>
   35eb0:	mov	r2, #88	; 0x58
   35eb4:	add	r0, pc, r0
   35eb8:	add	r1, pc, r1
   35ebc:	add	r3, pc, r3
   35ec0:	bl	14f38 <__assert_fail@plt>
   35ec4:	ldr	r0, [pc, #100]	; 35f30 <grisu3_diy_fp_encode_double@@Base+0x4d8>
   35ec8:	ldr	r1, [pc, #100]	; 35f34 <grisu3_diy_fp_encode_double@@Base+0x4dc>
   35ecc:	ldr	r3, [pc, #100]	; 35f38 <grisu3_diy_fp_encode_double@@Base+0x4e0>
   35ed0:	mov	r2, #89	; 0x59
   35ed4:	add	r0, pc, r0
   35ed8:	add	r1, pc, r1
   35edc:	add	r3, pc, r3
   35ee0:	bl	14f38 <__assert_fail@plt>
   35ee4:	ldr	r0, [pc, #80]	; 35f3c <grisu3_diy_fp_encode_double@@Base+0x4e4>
   35ee8:	ldr	r1, [pc, #80]	; 35f40 <grisu3_diy_fp_encode_double@@Base+0x4e8>
   35eec:	ldr	r3, [pc, #80]	; 35f44 <grisu3_diy_fp_encode_double@@Base+0x4ec>
   35ef0:	mov	r2, #185	; 0xb9
   35ef4:	add	r0, pc, r0
   35ef8:	add	r1, pc, r1
   35efc:	add	r3, pc, r3
   35f00:	bl	14f38 <__assert_fail@plt>
   35f04:	muleq	r1, r4, r2
   35f08:	ldrdeq	r7, [r1], -r4
   35f0c:	andeq	r7, r1, r3, lsl #29
   35f10:	muleq	r1, r8, r8
   35f14:	muleq	r1, sl, lr
   35f18:	andeq	r7, r1, r7, asr #25
   35f1c:	andeq	r7, r1, r4, lsl #13
   35f20:	andeq	r7, r1, r6, lsl #25
   35f24:	ldrdeq	r7, [r1], -r2
   35f28:	andeq	r7, r1, r4, ror #12
   35f2c:	andeq	r7, r1, r6, ror #24
   35f30:	andeq	r7, r1, r1, asr #25
   35f34:	andeq	r7, r1, r4, asr #12
   35f38:	andeq	r7, r1, r6, asr #24
   35f3c:	andeq	r7, r1, ip, lsl #12
   35f40:	andeq	r7, r1, r4, lsr #12
   35f44:	andeq	r7, r1, lr, lsl #13
   35f48:	andeq	r7, r1, r0, ror #23
   35f4c:	andeq	r7, r1, r5, ror #23
   35f50:	andeq	r7, r1, lr, asr #24

00035f54 <flatcc_json_parser_error_string@@Base>:
   35f54:	cmp	r0, #34	; 0x22
   35f58:	bhi	35f6c <flatcc_json_parser_error_string@@Base+0x18>
   35f5c:	ldr	r1, [pc, #20]	; 35f78 <flatcc_json_parser_error_string@@Base+0x24>
   35f60:	add	r1, pc, r1
   35f64:	ldr	r0, [r1, r0, lsl #2]
   35f68:	bx	lr
   35f6c:	ldr	r0, [pc, #8]	; 35f7c <flatcc_json_parser_error_string@@Base+0x28>
   35f70:	add	r0, pc, r0
   35f74:	bx	lr
   35f78:	andeq	r8, r2, ip, lsl #30
   35f7c:	andeq	r6, r1, r1, lsr #27

00035f80 <flatcc_json_parser_set_error@@Base>:
   35f80:	mov	ip, r2
   35f84:	ldr	r2, [r0, #24]
   35f88:	cmp	r2, #0
   35f8c:	beq	35f98 <flatcc_json_parser_set_error@@Base+0x18>
   35f90:	mov	r0, ip
   35f94:	bx	lr
   35f98:	str	r1, [r0, #36]	; 0x24
   35f9c:	ldr	r2, [r0, #4]
   35fa0:	sub	r1, r1, r2
   35fa4:	add	r1, r1, #1
   35fa8:	str	r1, [r0, #20]
   35fac:	str	r3, [r0, #24]
   35fb0:	mov	r0, ip
   35fb4:	bx	lr

00035fb8 <flatcc_json_parser_string_part@@Base>:
   35fb8:	cmp	r1, r2
   35fbc:	beq	35fe8 <flatcc_json_parser_string_part@@Base+0x30>
   35fc0:	ldrb	r3, [r1]
   35fc4:	cmp	r3, #32
   35fc8:	bcc	3601c <flatcc_json_parser_string_part@@Base+0x64>
   35fcc:	cmp	r3, #34	; 0x22
   35fd0:	cmpne	r3, #92	; 0x5c
   35fd4:	beq	36014 <flatcc_json_parser_string_part@@Base+0x5c>
   35fd8:	add	r1, r1, #1
   35fdc:	cmp	r2, r1
   35fe0:	bne	35fc0 <flatcc_json_parser_string_part@@Base+0x8>
   35fe4:	mov	r1, r2
   35fe8:	ldr	r3, [r0, #24]
   35fec:	cmp	r3, #0
   35ff0:	bne	36010 <flatcc_json_parser_string_part@@Base+0x58>
   35ff4:	mov	ip, #20
   35ff8:	str	r1, [r0, #36]	; 0x24
   35ffc:	ldr	r3, [r0, #4]
   36000:	sub	r1, r1, r3
   36004:	add	r1, r1, #1
   36008:	str	r1, [r0, #20]
   3600c:	str	ip, [r0, #24]
   36010:	mov	r1, r2
   36014:	mov	r0, r1
   36018:	bx	lr
   3601c:	ldr	r3, [r0, #24]
   36020:	cmp	r3, #0
   36024:	bne	36010 <flatcc_json_parser_string_part@@Base+0x58>
   36028:	mov	ip, #17
   3602c:	b	35ff8 <flatcc_json_parser_string_part@@Base+0x40>

00036030 <flatcc_json_parser_space_ext@@Base>:
   36030:	mov	ip, r2
   36034:	cmp	r1, r2
   36038:	beq	36140 <flatcc_json_parser_space_ext@@Base+0x110>
   3603c:	ldrb	r3, [r1]
   36040:	cmp	r3, #32
   36044:	bne	36070 <flatcc_json_parser_space_ext@@Base+0x40>
   36048:	add	r1, r1, #1
   3604c:	cmp	r1, ip
   36050:	bne	3603c <flatcc_json_parser_space_ext@@Base+0xc>
   36054:	b	36140 <flatcc_json_parser_space_ext@@Base+0x110>
   36058:	add	r1, r1, r3
   3605c:	add	r1, r1, #1
   36060:	str	r1, [r0, #4]
   36064:	ldr	r2, [r0, #16]
   36068:	add	r2, r2, #1
   3606c:	str	r2, [r0, #16]
   36070:	cmp	r1, ip
   36074:	bne	36088 <flatcc_json_parser_space_ext@@Base+0x58>
   36078:	b	36140 <flatcc_json_parser_space_ext@@Base+0x110>
   3607c:	add	r1, r1, #1
   36080:	cmp	r1, ip
   36084:	beq	36140 <flatcc_json_parser_space_ext@@Base+0x110>
   36088:	ldrb	r3, [r1]
   3608c:	cmp	r3, #32
   36090:	movhi	r0, r1
   36094:	bxhi	lr
   36098:	sub	r3, r3, #9
   3609c:	cmp	r3, #23
   360a0:	bhi	36134 <flatcc_json_parser_space_ext@@Base+0x104>
   360a4:	add	r2, pc, #4
   360a8:	ldr	r3, [r2, r3, lsl #2]
   360ac:	add	pc, r2, r3
   360b0:			; <UNDEFINED> instruction: 0xffffffcc
   360b4:			; <UNDEFINED> instruction: 0xffffffac
   360b8:	andeq	r0, r0, r4, lsl #1
   360bc:	andeq	r0, r0, r4, lsl #1
   360c0:	andeq	r0, r0, r0, rrx
   360c4:	andeq	r0, r0, r4, lsl #1
   360c8:	andeq	r0, r0, r4, lsl #1
   360cc:	andeq	r0, r0, r4, lsl #1
   360d0:	andeq	r0, r0, r4, lsl #1
   360d4:	andeq	r0, r0, r4, lsl #1
   360d8:	andeq	r0, r0, r4, lsl #1
   360dc:	andeq	r0, r0, r4, lsl #1
   360e0:	andeq	r0, r0, r4, lsl #1
   360e4:	andeq	r0, r0, r4, lsl #1
   360e8:	andeq	r0, r0, r4, lsl #1
   360ec:	andeq	r0, r0, r4, lsl #1
   360f0:	andeq	r0, r0, r4, lsl #1
   360f4:	andeq	r0, r0, r4, lsl #1
   360f8:	andeq	r0, r0, r4, lsl #1
   360fc:	andeq	r0, r0, r4, lsl #1
   36100:	andeq	r0, r0, r4, lsl #1
   36104:	andeq	r0, r0, r4, lsl #1
   36108:	andeq	r0, r0, r4, lsl #1
   3610c:			; <UNDEFINED> instruction: 0xffffff9c
   36110:	sub	r2, ip, r1
   36114:	mov	r3, #0
   36118:	cmp	r2, #2
   3611c:	blt	36058 <flatcc_json_parser_space_ext@@Base+0x28>
   36120:	ldrb	r2, [r1, #1]
   36124:	sub	r2, r2, #10
   36128:	clz	r2, r2
   3612c:	lsr	r3, r2, #5
   36130:	b	36058 <flatcc_json_parser_space_ext@@Base+0x28>
   36134:	ldr	r2, [r0, #24]
   36138:	cmp	r2, #0
   3613c:	beq	36148 <flatcc_json_parser_space_ext@@Base+0x118>
   36140:	mov	r0, ip
   36144:	bx	lr
   36148:	str	r1, [r0, #36]	; 0x24
   3614c:	mov	r2, #5
   36150:	ldr	r3, [r0, #4]
   36154:	sub	r1, r1, r3
   36158:	add	r1, r1, #1
   3615c:	str	r1, [r0, #20]
   36160:	str	r2, [r0, #24]
   36164:	mov	r0, ip
   36168:	bx	lr

0003616c <flatcc_json_parser_string_escape@@Base>:
   3616c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   36170:	add	fp, sp, #24
   36174:	sub	r7, r2, r1
   36178:	cmp	r7, #2
   3617c:	blt	36384 <flatcc_json_parser_string_escape@@Base+0x218>
   36180:	ldrb	r6, [r1]
   36184:	cmp	r6, #92	; 0x5c
   36188:	bne	36384 <flatcc_json_parser_string_escape@@Base+0x218>
   3618c:	ldrb	r6, [r1, #1]
   36190:	sub	r6, r6, #34	; 0x22
   36194:	cmp	r6, #86	; 0x56
   36198:	bhi	36384 <flatcc_json_parser_string_escape@@Base+0x218>
   3619c:	add	r5, pc, #4
   361a0:	ldr	r6, [r5, r6, lsl #2]
   361a4:	add	pc, r5, r6
   361a8:	andeq	r0, r0, ip, asr r1
   361ac:	ldrdeq	r0, [r0], -ip
   361b0:	ldrdeq	r0, [r0], -ip
   361b4:	ldrdeq	r0, [r0], -ip
   361b8:	ldrdeq	r0, [r0], -ip
   361bc:	ldrdeq	r0, [r0], -ip
   361c0:	ldrdeq	r0, [r0], -ip
   361c4:	ldrdeq	r0, [r0], -ip
   361c8:	ldrdeq	r0, [r0], -ip
   361cc:	ldrdeq	r0, [r0], -ip
   361d0:	ldrdeq	r0, [r0], -ip
   361d4:	ldrdeq	r0, [r0], -ip
   361d8:	ldrdeq	r0, [r0], -ip
   361dc:	andeq	r0, r0, r4, ror #2
   361e0:	ldrdeq	r0, [r0], -ip
   361e4:	ldrdeq	r0, [r0], -ip
   361e8:	ldrdeq	r0, [r0], -ip
   361ec:	ldrdeq	r0, [r0], -ip
   361f0:	ldrdeq	r0, [r0], -ip
   361f4:	ldrdeq	r0, [r0], -ip
   361f8:	ldrdeq	r0, [r0], -ip
   361fc:	ldrdeq	r0, [r0], -ip
   36200:	ldrdeq	r0, [r0], -ip
   36204:	ldrdeq	r0, [r0], -ip
   36208:	ldrdeq	r0, [r0], -ip
   3620c:	ldrdeq	r0, [r0], -ip
   36210:	ldrdeq	r0, [r0], -ip
   36214:	ldrdeq	r0, [r0], -ip
   36218:	ldrdeq	r0, [r0], -ip
   3621c:	ldrdeq	r0, [r0], -ip
   36220:	ldrdeq	r0, [r0], -ip
   36224:	ldrdeq	r0, [r0], -ip
   36228:	ldrdeq	r0, [r0], -ip
   3622c:	ldrdeq	r0, [r0], -ip
   36230:	ldrdeq	r0, [r0], -ip
   36234:	ldrdeq	r0, [r0], -ip
   36238:	ldrdeq	r0, [r0], -ip
   3623c:	ldrdeq	r0, [r0], -ip
   36240:	ldrdeq	r0, [r0], -ip
   36244:	ldrdeq	r0, [r0], -ip
   36248:	ldrdeq	r0, [r0], -ip
   3624c:	ldrdeq	r0, [r0], -ip
   36250:	ldrdeq	r0, [r0], -ip
   36254:	ldrdeq	r0, [r0], -ip
   36258:	ldrdeq	r0, [r0], -ip
   3625c:	ldrdeq	r0, [r0], -ip
   36260:	ldrdeq	r0, [r0], -ip
   36264:	ldrdeq	r0, [r0], -ip
   36268:	ldrdeq	r0, [r0], -ip
   3626c:	ldrdeq	r0, [r0], -ip
   36270:	ldrdeq	r0, [r0], -ip
   36274:	ldrdeq	r0, [r0], -ip
   36278:	ldrdeq	r0, [r0], -ip
   3627c:	ldrdeq	r0, [r0], -ip
   36280:	ldrdeq	r0, [r0], -ip
   36284:	ldrdeq	r0, [r0], -ip
   36288:	ldrdeq	r0, [r0], -ip
   3628c:	ldrdeq	r0, [r0], -ip
   36290:	andeq	r0, r0, ip, ror #2
   36294:	ldrdeq	r0, [r0], -ip
   36298:	ldrdeq	r0, [r0], -ip
   3629c:	ldrdeq	r0, [r0], -ip
   362a0:	ldrdeq	r0, [r0], -ip
   362a4:	ldrdeq	r0, [r0], -ip
   362a8:	andeq	r0, r0, r4, ror r1
   362ac:	ldrdeq	r0, [r0], -ip
   362b0:	ldrdeq	r0, [r0], -ip
   362b4:	ldrdeq	r0, [r0], -ip
   362b8:	andeq	r0, r0, ip, ror r1
   362bc:	ldrdeq	r0, [r0], -ip
   362c0:	ldrdeq	r0, [r0], -ip
   362c4:	ldrdeq	r0, [r0], -ip
   362c8:	ldrdeq	r0, [r0], -ip
   362cc:	ldrdeq	r0, [r0], -ip
   362d0:	ldrdeq	r0, [r0], -ip
   362d4:	ldrdeq	r0, [r0], -ip
   362d8:	andeq	r0, r0, r4, lsl #3
   362dc:	ldrdeq	r0, [r0], -ip
   362e0:	ldrdeq	r0, [r0], -ip
   362e4:	ldrdeq	r0, [r0], -ip
   362e8:	andeq	r0, r0, ip, lsl #3
   362ec:	ldrdeq	r0, [r0], -ip
   362f0:	muleq	r0, r4, r1
   362f4:	andeq	r0, r0, r8, lsr #3
   362f8:	ldrdeq	r0, [r0], -ip
   362fc:	ldrdeq	r0, [r0], -ip
   36300:	andeq	r0, r0, ip, asr #3
   36304:	movw	r0, #8705	; 0x2201
   36308:	b	36340 <flatcc_json_parser_string_escape@@Base+0x1d4>
   3630c:	movw	r0, #12033	; 0x2f01
   36310:	b	36340 <flatcc_json_parser_string_escape@@Base+0x1d4>
   36314:	movw	r0, #23553	; 0x5c01
   36318:	b	36340 <flatcc_json_parser_string_escape@@Base+0x1d4>
   3631c:	movw	r0, #2049	; 0x801
   36320:	b	36340 <flatcc_json_parser_string_escape@@Base+0x1d4>
   36324:	movw	r0, #3073	; 0xc01
   36328:	b	36340 <flatcc_json_parser_string_escape@@Base+0x1d4>
   3632c:	movw	r0, #2561	; 0xa01
   36330:	b	36340 <flatcc_json_parser_string_escape@@Base+0x1d4>
   36334:	movw	r0, #3329	; 0xd01
   36338:	b	36340 <flatcc_json_parser_string_escape@@Base+0x1d4>
   3633c:	movw	r0, #2305	; 0x901
   36340:	add	r2, r1, #2
   36344:	strh	r0, [r3]
   36348:	mov	r0, r2
   3634c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36350:	cmp	r7, #5
   36354:	ble	36384 <flatcc_json_parser_string_escape@@Base+0x218>
   36358:	ldrb	r7, [r1, #2]
   3635c:	sub	r6, r7, #48	; 0x30
   36360:	uxtb	r6, r6
   36364:	cmp	r6, #9
   36368:	bhi	363e0 <flatcc_json_parser_string_escape@@Base+0x274>
   3636c:	lsl	ip, r7, #12
   36370:	b	36400 <flatcc_json_parser_string_escape@@Base+0x294>
   36374:	mov	r6, #1
   36378:	cmp	r7, #3
   3637c:	strb	r6, [r3]
   36380:	bgt	363c4 <flatcc_json_parser_string_escape@@Base+0x258>
   36384:	mov	r7, #0
   36388:	strb	r7, [r3]
   3638c:	ldr	r3, [r0, #24]
   36390:	cmp	r3, #0
   36394:	beq	363a0 <flatcc_json_parser_string_escape@@Base+0x234>
   36398:	mov	r0, r2
   3639c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   363a0:	str	r1, [r0, #36]	; 0x24
   363a4:	mov	r3, #18
   363a8:	ldr	r7, [r0, #4]
   363ac:	sub	r1, r1, r7
   363b0:	add	r1, r1, #1
   363b4:	str	r1, [r0, #20]
   363b8:	str	r3, [r0, #24]
   363bc:	mov	r0, r2
   363c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   363c4:	ldrb	r7, [r1, #2]
   363c8:	sub	r6, r7, #48	; 0x30
   363cc:	uxtb	r6, r6
   363d0:	cmp	r6, #9
   363d4:	bhi	3641c <flatcc_json_parser_string_escape@@Base+0x2b0>
   363d8:	lsl	r7, r7, #4
   363dc:	b	36438 <flatcc_json_parser_string_escape@@Base+0x2cc>
   363e0:	orr	r6, r7, #32
   363e4:	sub	r6, r6, #97	; 0x61
   363e8:	uxtb	r6, r6
   363ec:	cmp	r6, #5
   363f0:	bhi	36384 <flatcc_json_parser_string_escape@@Base+0x218>
   363f4:	movw	r6, #36864	; 0x9000
   363f8:	movt	r6, #65535	; 0xffff
   363fc:	add	ip, r6, r7, lsl #12
   36400:	ldrb	lr, [r1, #3]
   36404:	sub	r4, lr, #48	; 0x30
   36408:	uxtb	r4, r4
   3640c:	cmp	r4, #10
   36410:	bcs	36478 <flatcc_json_parser_string_escape@@Base+0x30c>
   36414:	mov	r8, #53248	; 0xd000
   36418:	b	36490 <flatcc_json_parser_string_escape@@Base+0x324>
   3641c:	orr	r6, r7, #32
   36420:	sub	r6, r6, #97	; 0x61
   36424:	uxtb	r6, r6
   36428:	cmp	r6, #5
   3642c:	bhi	36384 <flatcc_json_parser_string_escape@@Base+0x218>
   36430:	mvn	r6, #111	; 0x6f
   36434:	add	r7, r6, r7, lsl #4
   36438:	ldrb	r5, [r1, #3]
   3643c:	sub	r6, r5, #48	; 0x30
   36440:	uxtb	r4, r6
   36444:	cmp	r4, #10
   36448:	bcc	36464 <flatcc_json_parser_string_escape@@Base+0x2f8>
   3644c:	orr	r6, r5, #32
   36450:	sub	r5, r6, #97	; 0x61
   36454:	uxtb	r5, r5
   36458:	cmp	r5, #5
   3645c:	bhi	36384 <flatcc_json_parser_string_escape@@Base+0x218>
   36460:	sub	r6, r6, #87	; 0x57
   36464:	orr	r0, r6, r7
   36468:	add	r2, r1, #4
   3646c:	strb	r0, [r3, #1]
   36470:	mov	r0, r2
   36474:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36478:	orr	lr, lr, #32
   3647c:	mov	r8, #43264	; 0xa900
   36480:	sub	r4, lr, #97	; 0x61
   36484:	uxtb	r4, r4
   36488:	cmp	r4, #6
   3648c:	bcs	36384 <flatcc_json_parser_string_escape@@Base+0x218>
   36490:	ldrb	r5, [r1, #4]
   36494:	sub	r4, r5, #48	; 0x30
   36498:	uxtb	r4, r4
   3649c:	cmp	r4, #10
   364a0:	bcs	364ac <flatcc_json_parser_string_escape@@Base+0x340>
   364a4:	mov	r9, #64768	; 0xfd00
   364a8:	b	364c4 <flatcc_json_parser_string_escape@@Base+0x358>
   364ac:	orr	r5, r5, #32
   364b0:	movw	r9, #64144	; 0xfa90
   364b4:	sub	r4, r5, #97	; 0x61
   364b8:	uxtb	r4, r4
   364bc:	cmp	r4, #6
   364c0:	bcs	36384 <flatcc_json_parser_string_escape@@Base+0x218>
   364c4:	ldrb	r7, [r1, #5]
   364c8:	sub	r4, r7, #48	; 0x30
   364cc:	uxtb	r4, r4
   364d0:	cmp	r4, #10
   364d4:	bcs	364e4 <flatcc_json_parser_string_escape@@Base+0x378>
   364d8:	mvn	r0, #86	; 0x56
   364dc:	add	r4, r0, #39	; 0x27
   364e0:	b	364fc <flatcc_json_parser_string_escape@@Base+0x390>
   364e4:	orr	r7, r7, #32
   364e8:	movw	r4, #65449	; 0xffa9
   364ec:	sub	r6, r7, #97	; 0x61
   364f0:	uxtb	r6, r6
   364f4:	cmp	r6, #6
   364f8:	bcs	36384 <flatcc_json_parser_string_escape@@Base+0x218>
   364fc:	add	r0, r8, lr, lsl #8
   36500:	add	r2, r9, r5, lsl #4
   36504:	orr	r0, r0, ip
   36508:	orr	r0, r0, r2
   3650c:	add	r2, r4, r7
   36510:	orr	r0, r0, r2
   36514:	uxth	r7, r0
   36518:	cmp	r7, #127	; 0x7f
   3651c:	bhi	3652c <flatcc_json_parser_string_escape@@Base+0x3c0>
   36520:	mov	r2, #1
   36524:	strb	r2, [r3]
   36528:	b	3657c <flatcc_json_parser_string_escape@@Base+0x410>
   3652c:	mov	r2, #0
   36530:	cmp	r2, r7, lsr #11
   36534:	bne	36550 <flatcc_json_parser_string_escape@@Base+0x3e4>
   36538:	mov	r7, #192	; 0xc0
   3653c:	mov	r2, #2
   36540:	orr	r7, r7, r0, lsr #6
   36544:	strb	r2, [r3]
   36548:	strb	r7, [r3, #1]
   3654c:	b	36574 <flatcc_json_parser_string_escape@@Base+0x408>
   36550:	mov	r6, #224	; 0xe0
   36554:	mov	r2, #3
   36558:	orr	r6, r6, r7, lsr #12
   3655c:	strb	r2, [r3]
   36560:	lsr	r7, r7, #6
   36564:	strb	r6, [r3, #1]
   36568:	mov	r6, #2
   3656c:	bfi	r7, r6, #6, #26
   36570:	strb	r7, [r3, #2]
   36574:	mvn	r7, #-67108863	; 0xfc000001
   36578:	bfi	r0, r7, #6, #26
   3657c:	strb	r0, [r3, r2]
   36580:	add	r2, r1, #6
   36584:	mov	r0, r2
   36588:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003658c <flatcc_json_parser_skip_constant@@Base>:
   3658c:	push	{r4, r5, r6, sl, fp, lr}
   36590:	add	fp, sp, #16
   36594:	cmp	r1, r2
   36598:	beq	3664c <flatcc_json_parser_skip_constant@@Base+0xc0>
   3659c:	mov	r4, r2
   365a0:	mov	r5, r0
   365a4:	ldrsb	r0, [r1]
   365a8:	mov	r6, r1
   365ac:	cmp	r0, #0
   365b0:	bmi	365c4 <flatcc_json_parser_skip_constant@@Base+0x38>
   365b4:	uxtb	r0, r0
   365b8:	cmp	r0, #95	; 0x5f
   365bc:	cmpne	r0, #46	; 0x2e
   365c0:	bne	365d4 <flatcc_json_parser_skip_constant@@Base+0x48>
   365c4:	add	r1, r6, #1
   365c8:	cmp	r1, r4
   365cc:	bne	365a4 <flatcc_json_parser_skip_constant@@Base+0x18>
   365d0:	b	36644 <flatcc_json_parser_skip_constant@@Base+0xb8>
   365d4:	sub	r1, r0, #48	; 0x30
   365d8:	uxtb	r1, r1
   365dc:	cmp	r1, #9
   365e0:	bls	365c4 <flatcc_json_parser_skip_constant@@Base+0x38>
   365e4:	orr	r1, r0, #32
   365e8:	sub	r1, r1, #97	; 0x61
   365ec:	uxtb	r1, r1
   365f0:	cmp	r1, #25
   365f4:	bls	365c4 <flatcc_json_parser_skip_constant@@Base+0x38>
   365f8:	sub	r1, r4, r6
   365fc:	cmp	r1, #2
   36600:	blt	36620 <flatcc_json_parser_skip_constant@@Base+0x94>
   36604:	cmp	r0, #32
   36608:	bhi	3663c <flatcc_json_parser_skip_constant@@Base+0xb0>
   3660c:	bne	36620 <flatcc_json_parser_skip_constant@@Base+0x94>
   36610:	mov	r1, r6
   36614:	ldrb	r0, [r1, #1]!
   36618:	cmp	r0, #32
   3661c:	bhi	365c8 <flatcc_json_parser_skip_constant@@Base+0x3c>
   36620:	mov	r0, r5
   36624:	mov	r1, r6
   36628:	mov	r2, r4
   3662c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   36630:	mov	r1, r0
   36634:	cmp	r0, r6
   36638:	bne	365c8 <flatcc_json_parser_skip_constant@@Base+0x3c>
   3663c:	mov	r0, r6
   36640:	pop	{r4, r5, r6, sl, fp, pc}
   36644:	mov	r0, r4
   36648:	pop	{r4, r5, r6, sl, fp, pc}
   3664c:	mov	r0, r1
   36650:	pop	{r4, r5, r6, sl, fp, pc}

00036654 <flatcc_json_parser_match_constant@@Base>:
   36654:	push	{r4, r5, r6, r7, fp, lr}
   36658:	add	fp, sp, #16
   3665c:	ldr	r7, [fp, #8]
   36660:	mov	r4, r1
   36664:	sub	r1, r2, r1
   36668:	cmp	r1, r3
   3666c:	ble	3676c <flatcc_json_parser_match_constant@@Base+0x118>
   36670:	ldr	r1, [r0, #12]
   36674:	mov	r5, r2
   36678:	add	r6, r4, r3
   3667c:	cmp	r1, #0
   36680:	beq	36704 <flatcc_json_parser_match_constant@@Base+0xb0>
   36684:	sub	r1, r5, r6
   36688:	cmp	r1, #2
   3668c:	blt	366b4 <flatcc_json_parser_match_constant@@Base+0x60>
   36690:	ldrb	r1, [r6]
   36694:	mov	r2, r6
   36698:	cmp	r1, #32
   3669c:	bhi	366c4 <flatcc_json_parser_match_constant@@Base+0x70>
   366a0:	bne	366b4 <flatcc_json_parser_match_constant@@Base+0x60>
   366a4:	mov	r2, r6
   366a8:	ldrb	r1, [r2, #1]!
   366ac:	cmp	r1, #32
   366b0:	bhi	366c4 <flatcc_json_parser_match_constant@@Base+0x70>
   366b4:	mov	r1, r6
   366b8:	mov	r2, r5
   366bc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   366c0:	mov	r2, r0
   366c4:	cmp	r2, r5
   366c8:	beq	36780 <flatcc_json_parser_match_constant@@Base+0x12c>
   366cc:	cmp	r2, r6
   366d0:	beq	36790 <flatcc_json_parser_match_constant@@Base+0x13c>
   366d4:	ldrsb	r0, [r2]
   366d8:	cmp	r0, #95	; 0x5f
   366dc:	beq	366fc <flatcc_json_parser_match_constant@@Base+0xa8>
   366e0:	cmn	r0, #1
   366e4:	ble	366fc <flatcc_json_parser_match_constant@@Base+0xa8>
   366e8:	orr	r0, r0, #32
   366ec:	sub	r0, r0, #97	; 0x61
   366f0:	uxtb	r0, r0
   366f4:	cmp	r0, #25
   366f8:	bhi	36790 <flatcc_json_parser_match_constant@@Base+0x13c>
   366fc:	mov	r0, #1
   36700:	b	36814 <flatcc_json_parser_match_constant@@Base+0x1c0>
   36704:	ldrb	r1, [r6]
   36708:	cmp	r1, #92	; 0x5c
   3670c:	beq	367b8 <flatcc_json_parser_match_constant@@Base+0x164>
   36710:	cmp	r1, #34	; 0x22
   36714:	beq	36748 <flatcc_json_parser_match_constant@@Base+0xf4>
   36718:	cmp	r1, #32
   3671c:	bne	3676c <flatcc_json_parser_match_constant@@Base+0x118>
   36720:	add	r1, r4, r3
   36724:	add	r1, r1, #1
   36728:	cmp	r5, r1
   3672c:	beq	36780 <flatcc_json_parser_match_constant@@Base+0x12c>
   36730:	ldrb	r2, [r1], #1
   36734:	cmp	r2, #32
   36738:	beq	36728 <flatcc_json_parser_match_constant@@Base+0xd4>
   3673c:	cmp	r2, #34	; 0x22
   36740:	bne	36820 <flatcc_json_parser_match_constant@@Base+0x1cc>
   36744:	sub	r6, r1, #1
   36748:	mvn	r2, r6
   3674c:	add	r1, r6, #1
   36750:	cmp	r2, #2
   36754:	blt	36804 <flatcc_json_parser_match_constant@@Base+0x1b0>
   36758:	ldrb	r2, [r1]
   3675c:	cmp	r2, #32
   36760:	bls	367f0 <flatcc_json_parser_match_constant@@Base+0x19c>
   36764:	mov	r2, r1
   36768:	b	36810 <flatcc_json_parser_match_constant@@Base+0x1bc>
   3676c:	mov	r0, #0
   36770:	mov	r2, r4
   36774:	str	r0, [r7]
   36778:	mov	r0, r2
   3677c:	pop	{r4, r5, r6, r7, fp, pc}
   36780:	mov	r0, #0
   36784:	str	r0, [r7]
   36788:	mov	r0, r5
   3678c:	pop	{r4, r5, r6, r7, fp, pc}
   36790:	mov	r0, #0
   36794:	str	r0, [r7]
   36798:	ldrb	r0, [r2]
   3679c:	cmp	r0, #44	; 0x2c
   367a0:	cmpne	r0, #93	; 0x5d
   367a4:	beq	36778 <flatcc_json_parser_match_constant@@Base+0x124>
   367a8:	cmp	r0, #125	; 0x7d
   367ac:	movne	r2, r4
   367b0:	mov	r0, r2
   367b4:	pop	{r4, r5, r6, r7, fp, pc}
   367b8:	mov	r1, #0
   367bc:	str	r1, [r7]
   367c0:	ldr	r1, [r0, #24]
   367c4:	cmp	r1, #0
   367c8:	bne	36788 <flatcc_json_parser_match_constant@@Base+0x134>
   367cc:	str	r6, [r0, #36]	; 0x24
   367d0:	mov	r1, #18
   367d4:	ldr	r2, [r0, #4]
   367d8:	sub	r2, r6, r2
   367dc:	add	r2, r2, #1
   367e0:	str	r2, [r0, #20]
   367e4:	str	r1, [r0, #24]
   367e8:	mov	r0, r5
   367ec:	pop	{r4, r5, r6, r7, fp, pc}
   367f0:	bne	36804 <flatcc_json_parser_match_constant@@Base+0x1b0>
   367f4:	ldrb	r2, [r6, #2]!
   367f8:	cmp	r2, #32
   367fc:	mov	r2, r6
   36800:	bhi	36810 <flatcc_json_parser_match_constant@@Base+0x1bc>
   36804:	mov	r2, #0
   36808:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   3680c:	mov	r2, r0
   36810:	mov	r0, #0
   36814:	str	r0, [r7]
   36818:	mov	r0, r2
   3681c:	pop	{r4, r5, r6, r7, fp, pc}
   36820:	mov	r0, #1
   36824:	sub	r2, r1, #1
   36828:	b	36814 <flatcc_json_parser_match_constant@@Base+0x1c0>

0003682c <flatcc_json_parser_unmatched_symbol@@Base>:
   3682c:	push	{r4, r5, fp, lr}
   36830:	add	fp, sp, #8
   36834:	mov	r5, r0
   36838:	ldrb	r0, [r0, #8]
   3683c:	mov	r4, r2
   36840:	tst	r0, #1
   36844:	bne	36868 <flatcc_json_parser_unmatched_symbol@@Base+0x3c>
   36848:	ldr	r0, [r5, #24]
   3684c:	cmp	r0, #0
   36850:	bne	36a2c <flatcc_json_parser_unmatched_symbol@@Base+0x200>
   36854:	str	r1, [r5, #36]	; 0x24
   36858:	mov	r0, #13
   3685c:	ldr	r2, [r5, #4]
   36860:	sub	r1, r1, r2
   36864:	b	36a44 <flatcc_json_parser_unmatched_symbol@@Base+0x218>
   36868:	ldr	r0, [r5, #12]
   3686c:	cmp	r0, #0
   36870:	beq	36908 <flatcc_json_parser_unmatched_symbol@@Base+0xdc>
   36874:	cmp	r1, r4
   36878:	beq	3695c <flatcc_json_parser_unmatched_symbol@@Base+0x130>
   3687c:	ldrb	r2, [r1]
   36880:	cmp	r2, #33	; 0x21
   36884:	bcc	3695c <flatcc_json_parser_unmatched_symbol@@Base+0x130>
   36888:	add	r1, r1, #1
   3688c:	uxtb	r0, r2
   36890:	cmp	r0, #46	; 0x2e
   36894:	cmpne	r0, #95	; 0x5f
   36898:	bne	368b4 <flatcc_json_parser_unmatched_symbol@@Base+0x88>
   3689c:	cmp	r4, r1
   368a0:	beq	36950 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   368a4:	ldrb	r2, [r1], #1
   368a8:	cmp	r2, #33	; 0x21
   368ac:	bcs	3688c <flatcc_json_parser_unmatched_symbol@@Base+0x60>
   368b0:	b	368e4 <flatcc_json_parser_unmatched_symbol@@Base+0xb8>
   368b4:	sxtb	r3, r2
   368b8:	cmp	r3, #0
   368bc:	bmi	3689c <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   368c0:	sub	r3, r2, #48	; 0x30
   368c4:	uxtb	r3, r3
   368c8:	cmp	r3, #9
   368cc:	bls	3689c <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   368d0:	orr	r2, r2, #32
   368d4:	sub	r2, r2, #97	; 0x61
   368d8:	uxtb	r2, r2
   368dc:	cmp	r2, #26
   368e0:	bcc	3689c <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   368e4:	sub	r1, r1, #1
   368e8:	cmp	r0, #46	; 0x2e
   368ec:	bne	3695c <flatcc_json_parser_unmatched_symbol@@Base+0x130>
   368f0:	ldr	r0, [r5, #24]
   368f4:	mov	r2, r4
   368f8:	cmp	r0, #0
   368fc:	bne	36998 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   36900:	mov	r0, #5
   36904:	b	3697c <flatcc_json_parser_unmatched_symbol@@Base+0x150>
   36908:	cmp	r1, r4
   3690c:	bne	36928 <flatcc_json_parser_unmatched_symbol@@Base+0xfc>
   36910:	b	36968 <flatcc_json_parser_unmatched_symbol@@Base+0x13c>
   36914:	cmp	r0, #34	; 0x22
   36918:	beq	36948 <flatcc_json_parser_unmatched_symbol@@Base+0x11c>
   3691c:	add	r1, r1, #1
   36920:	cmp	r1, r4
   36924:	beq	36964 <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   36928:	ldrb	r0, [r1]
   3692c:	cmp	r0, #92	; 0x5c
   36930:	bne	36914 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   36934:	sub	r0, r4, r1
   36938:	cmp	r0, #2
   3693c:	blt	36968 <flatcc_json_parser_unmatched_symbol@@Base+0x13c>
   36940:	add	r1, r1, #1
   36944:	b	3691c <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   36948:	add	r2, r1, #1
   3694c:	b	36998 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   36950:	mov	r1, r4
   36954:	cmp	r0, #46	; 0x2e
   36958:	beq	368f0 <flatcc_json_parser_unmatched_symbol@@Base+0xc4>
   3695c:	mov	r2, r1
   36960:	b	36998 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   36964:	mov	r1, r4
   36968:	ldr	r0, [r5, #24]
   3696c:	mov	r2, r4
   36970:	cmp	r0, #0
   36974:	bne	36998 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   36978:	mov	r0, #20
   3697c:	str	r1, [r5, #36]	; 0x24
   36980:	ldr	r2, [r5, #4]
   36984:	sub	r1, r1, r2
   36988:	mov	r2, r4
   3698c:	add	r1, r1, #1
   36990:	str	r1, [r5, #20]
   36994:	str	r0, [r5, #24]
   36998:	sub	r0, r4, r2
   3699c:	cmp	r0, #2
   369a0:	blt	369d4 <flatcc_json_parser_unmatched_symbol@@Base+0x1a8>
   369a4:	ldrb	r0, [r2]
   369a8:	cmp	r0, #32
   369ac:	bls	369c0 <flatcc_json_parser_unmatched_symbol@@Base+0x194>
   369b0:	mov	r3, r2
   369b4:	cmp	r3, r4
   369b8:	bne	369f0 <flatcc_json_parser_unmatched_symbol@@Base+0x1c4>
   369bc:	b	36a20 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   369c0:	bne	369d4 <flatcc_json_parser_unmatched_symbol@@Base+0x1a8>
   369c4:	mov	r3, r2
   369c8:	ldrb	r0, [r3, #1]!
   369cc:	cmp	r0, #32
   369d0:	bhi	369e8 <flatcc_json_parser_unmatched_symbol@@Base+0x1bc>
   369d4:	mov	r1, r2
   369d8:	mov	r0, r5
   369dc:	mov	r2, r4
   369e0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   369e4:	mov	r3, r0
   369e8:	cmp	r3, r4
   369ec:	beq	36a20 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   369f0:	ldrb	r0, [r3]
   369f4:	cmp	r0, #58	; 0x3a
   369f8:	bne	36a20 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   369fc:	add	r1, r3, #1
   36a00:	sub	r0, r4, r1
   36a04:	cmp	r0, #2
   36a08:	blt	36a68 <flatcc_json_parser_unmatched_symbol@@Base+0x23c>
   36a0c:	ldrb	r0, [r1]
   36a10:	cmp	r0, #32
   36a14:	bls	36a58 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
   36a18:	mov	r3, r1
   36a1c:	b	36a78 <flatcc_json_parser_unmatched_symbol@@Base+0x24c>
   36a20:	ldr	r0, [r5, #24]
   36a24:	cmp	r0, #0
   36a28:	beq	36a34 <flatcc_json_parser_unmatched_symbol@@Base+0x208>
   36a2c:	mov	r0, r4
   36a30:	pop	{r4, r5, fp, pc}
   36a34:	str	r3, [r5, #36]	; 0x24
   36a38:	mov	r0, #4
   36a3c:	ldr	r1, [r5, #4]
   36a40:	sub	r1, r3, r1
   36a44:	add	r1, r1, #1
   36a48:	str	r1, [r5, #20]
   36a4c:	str	r0, [r5, #24]
   36a50:	mov	r0, r4
   36a54:	pop	{r4, r5, fp, pc}
   36a58:	bne	36a68 <flatcc_json_parser_unmatched_symbol@@Base+0x23c>
   36a5c:	ldrb	r0, [r3, #2]!
   36a60:	cmp	r0, #32
   36a64:	bhi	36a78 <flatcc_json_parser_unmatched_symbol@@Base+0x24c>
   36a68:	mov	r0, r5
   36a6c:	mov	r2, r4
   36a70:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   36a74:	mov	r3, r0
   36a78:	mov	r0, r5
   36a7c:	mov	r1, r3
   36a80:	mov	r2, r4
   36a84:	pop	{r4, r5, fp, lr}
   36a88:	b	36a8c <flatcc_json_parser_generic_json@@Base>

00036a8c <flatcc_json_parser_generic_json@@Base>:
   36a8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36a90:	add	fp, sp, #28
   36a94:	sub	sp, sp, #540	; 0x21c
   36a98:	mov	r7, r1
   36a9c:	cmp	r1, r2
   36aa0:	beq	376dc <flatcc_json_parser_generic_json@@Base+0xc50>
   36aa4:	mov	r5, r0
   36aa8:	add	r0, r2, #1
   36aac:	add	r1, sp, #24
   36ab0:	mov	r6, r2
   36ab4:	mov	r8, #0
   36ab8:	str	r0, [sp, #4]
   36abc:	add	r0, r5, #36	; 0x24
   36ac0:	sub	sl, r1, #1
   36ac4:	add	r9, r5, #24
   36ac8:	str	r0, [sp, #16]
   36acc:	add	r0, r5, #20
   36ad0:	str	r0, [sp, #12]
   36ad4:	add	r0, r5, #4
   36ad8:	str	r0, [sp, #8]
   36adc:	mov	r0, r1
   36ae0:	cmp	r8, #0
   36ae4:	beq	36d54 <flatcc_json_parser_generic_json@@Base+0x2c8>
   36ae8:	ldrb	r0, [r0, #-1]
   36aec:	cmp	r0, #125	; 0x7d
   36af0:	bne	36d54 <flatcc_json_parser_generic_json@@Base+0x2c8>
   36af4:	ldrb	r0, [r7]
   36af8:	cmp	r0, #46	; 0x2e
   36afc:	beq	36b58 <flatcc_json_parser_generic_json@@Base+0xcc>
   36b00:	cmp	r0, #34	; 0x22
   36b04:	bne	36ba4 <flatcc_json_parser_generic_json@@Base+0x118>
   36b08:	mov	r0, #0
   36b0c:	mov	r2, r6
   36b10:	str	r0, [r5, #12]
   36b14:	add	r0, r7, #1
   36b18:	cmp	r0, r6
   36b1c:	bne	36b38 <flatcc_json_parser_generic_json@@Base+0xac>
   36b20:	b	36c74 <flatcc_json_parser_generic_json@@Base+0x1e8>
   36b24:	cmp	r1, #34	; 0x22
   36b28:	beq	36c4c <flatcc_json_parser_generic_json@@Base+0x1c0>
   36b2c:	add	r0, r0, #1
   36b30:	cmp	r0, r6
   36b34:	beq	36c54 <flatcc_json_parser_generic_json@@Base+0x1c8>
   36b38:	ldrb	r1, [r0]
   36b3c:	cmp	r1, #92	; 0x5c
   36b40:	bne	36b24 <flatcc_json_parser_generic_json@@Base+0x98>
   36b44:	sub	r1, r6, r0
   36b48:	cmp	r1, #2
   36b4c:	blt	36c70 <flatcc_json_parser_generic_json@@Base+0x1e4>
   36b50:	add	r0, r0, #1
   36b54:	b	36b2c <flatcc_json_parser_generic_json@@Base+0xa0>
   36b58:	ldr	r0, [r9]
   36b5c:	cmp	r0, #0
   36b60:	bne	36b8c <flatcc_json_parser_generic_json@@Base+0x100>
   36b64:	mov	r0, #5
   36b68:	ldr	r1, [sp, #12]
   36b6c:	str	r0, [r9]
   36b70:	ldr	r0, [sp, #8]
   36b74:	ldr	r0, [r0]
   36b78:	sub	r0, r7, r0
   36b7c:	add	r0, r0, #1
   36b80:	str	r0, [r1]
   36b84:	ldr	r0, [sp, #16]
   36b88:	str	r7, [r0]
   36b8c:	ldr	r0, [r5, #12]
   36b90:	mov	r2, r6
   36b94:	mov	r1, r6
   36b98:	cmp	r0, #0
   36b9c:	bne	36cb0 <flatcc_json_parser_generic_json@@Base+0x224>
   36ba0:	b	36c74 <flatcc_json_parser_generic_json@@Base+0x1e8>
   36ba4:	mov	r0, #1
   36ba8:	cmp	r7, r6
   36bac:	mov	r1, r6
   36bb0:	str	r0, [r5, #12]
   36bb4:	beq	36cb0 <flatcc_json_parser_generic_json@@Base+0x224>
   36bb8:	ldrb	r2, [r7]
   36bbc:	cmp	r2, #33	; 0x21
   36bc0:	bcc	36c44 <flatcc_json_parser_generic_json@@Base+0x1b8>
   36bc4:	add	r1, r7, #1
   36bc8:	uxtb	r0, r2
   36bcc:	cmp	r0, #46	; 0x2e
   36bd0:	cmpne	r0, #95	; 0x5f
   36bd4:	bne	36bf0 <flatcc_json_parser_generic_json@@Base+0x164>
   36bd8:	cmp	r6, r1
   36bdc:	beq	36c5c <flatcc_json_parser_generic_json@@Base+0x1d0>
   36be0:	ldrb	r2, [r1], #1
   36be4:	cmp	r2, #33	; 0x21
   36be8:	bcs	36bc8 <flatcc_json_parser_generic_json@@Base+0x13c>
   36bec:	b	36c20 <flatcc_json_parser_generic_json@@Base+0x194>
   36bf0:	sxtb	r3, r2
   36bf4:	cmp	r3, #0
   36bf8:	bmi	36bd8 <flatcc_json_parser_generic_json@@Base+0x14c>
   36bfc:	sub	r3, r2, #48	; 0x30
   36c00:	uxtb	r3, r3
   36c04:	cmp	r3, #9
   36c08:	bls	36bd8 <flatcc_json_parser_generic_json@@Base+0x14c>
   36c0c:	orr	r2, r2, #32
   36c10:	sub	r2, r2, #97	; 0x61
   36c14:	uxtb	r2, r2
   36c18:	cmp	r2, #26
   36c1c:	bcc	36bd8 <flatcc_json_parser_generic_json@@Base+0x14c>
   36c20:	sub	r2, r1, #1
   36c24:	cmp	r0, #46	; 0x2e
   36c28:	bne	36c68 <flatcc_json_parser_generic_json@@Base+0x1dc>
   36c2c:	ldr	r0, [r9]
   36c30:	mov	r1, r6
   36c34:	cmp	r0, #0
   36c38:	bne	36cb0 <flatcc_json_parser_generic_json@@Base+0x224>
   36c3c:	mov	r0, #5
   36c40:	b	36c88 <flatcc_json_parser_generic_json@@Base+0x1fc>
   36c44:	mov	r1, r7
   36c48:	b	36cb0 <flatcc_json_parser_generic_json@@Base+0x224>
   36c4c:	add	r1, r0, #1
   36c50:	b	36cb0 <flatcc_json_parser_generic_json@@Base+0x224>
   36c54:	mov	r2, r6
   36c58:	b	36c74 <flatcc_json_parser_generic_json@@Base+0x1e8>
   36c5c:	mov	r2, r6
   36c60:	cmp	r0, #46	; 0x2e
   36c64:	beq	36c2c <flatcc_json_parser_generic_json@@Base+0x1a0>
   36c68:	mov	r1, r2
   36c6c:	b	36cb0 <flatcc_json_parser_generic_json@@Base+0x224>
   36c70:	mov	r2, r0
   36c74:	ldr	r0, [r9]
   36c78:	mov	r1, r6
   36c7c:	cmp	r0, #0
   36c80:	bne	36cb0 <flatcc_json_parser_generic_json@@Base+0x224>
   36c84:	mov	r0, #20
   36c88:	str	r0, [r9]
   36c8c:	ldr	r0, [sp, #8]
   36c90:	ldr	r1, [sp, #12]
   36c94:	ldr	r0, [r0]
   36c98:	sub	r0, r2, r0
   36c9c:	add	r0, r0, #1
   36ca0:	str	r0, [r1]
   36ca4:	ldr	r0, [sp, #16]
   36ca8:	mov	r1, r6
   36cac:	str	r2, [r0]
   36cb0:	sub	r0, r6, r1
   36cb4:	cmp	r0, #2
   36cb8:	blt	36cec <flatcc_json_parser_generic_json@@Base+0x260>
   36cbc:	ldrb	r0, [r1]
   36cc0:	cmp	r0, #32
   36cc4:	bls	36cd8 <flatcc_json_parser_generic_json@@Base+0x24c>
   36cc8:	mov	r7, r1
   36ccc:	cmp	r7, r6
   36cd0:	bne	36d04 <flatcc_json_parser_generic_json@@Base+0x278>
   36cd4:	b	37760 <flatcc_json_parser_generic_json@@Base+0xcd4>
   36cd8:	bne	36cec <flatcc_json_parser_generic_json@@Base+0x260>
   36cdc:	mov	r7, r1
   36ce0:	ldrb	r0, [r7, #1]!
   36ce4:	cmp	r0, #32
   36ce8:	bhi	36cfc <flatcc_json_parser_generic_json@@Base+0x270>
   36cec:	mov	r0, r5
   36cf0:	mov	r2, r6
   36cf4:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   36cf8:	mov	r7, r0
   36cfc:	cmp	r7, r6
   36d00:	beq	37760 <flatcc_json_parser_generic_json@@Base+0xcd4>
   36d04:	ldrb	r0, [r7]
   36d08:	cmp	r0, #58	; 0x3a
   36d0c:	bne	37778 <flatcc_json_parser_generic_json@@Base+0xcec>
   36d10:	add	r1, r7, #1
   36d14:	sub	r0, r6, r1
   36d18:	cmp	r0, #2
   36d1c:	blt	36d44 <flatcc_json_parser_generic_json@@Base+0x2b8>
   36d20:	ldrb	r2, [r1]
   36d24:	cmp	r2, #32
   36d28:	bls	36d34 <flatcc_json_parser_generic_json@@Base+0x2a8>
   36d2c:	mov	r7, r1
   36d30:	b	36d58 <flatcc_json_parser_generic_json@@Base+0x2cc>
   36d34:	bne	36d44 <flatcc_json_parser_generic_json@@Base+0x2b8>
   36d38:	ldrb	r2, [r7, #2]!
   36d3c:	cmp	r2, #32
   36d40:	bhi	36d58 <flatcc_json_parser_generic_json@@Base+0x2cc>
   36d44:	mov	r0, r5
   36d48:	mov	r2, r6
   36d4c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   36d50:	mov	r7, r0
   36d54:	ldrb	r2, [r7]
   36d58:	sub	r0, r2, #48	; 0x30
   36d5c:	cmp	r0, #10
   36d60:	bcs	36dfc <flatcc_json_parser_generic_json@@Base+0x370>
   36d64:	cmp	r7, r6
   36d68:	beq	372b4 <flatcc_json_parser_generic_json@@Base+0x828>
   36d6c:	cmp	r2, #45	; 0x2d
   36d70:	bne	36d84 <flatcc_json_parser_generic_json@@Base+0x2f8>
   36d74:	add	r7, r7, #1
   36d78:	cmp	r7, r6
   36d7c:	beq	37290 <flatcc_json_parser_generic_json@@Base+0x804>
   36d80:	ldrb	r2, [r7]
   36d84:	cmp	r2, #48	; 0x30
   36d88:	bne	36e18 <flatcc_json_parser_generic_json@@Base+0x38c>
   36d8c:	add	r4, r7, #1
   36d90:	cmp	r4, r6
   36d94:	mov	r1, r6
   36d98:	beq	372a8 <flatcc_json_parser_generic_json@@Base+0x81c>
   36d9c:	ldrb	r0, [r4]
   36da0:	cmp	r0, #46	; 0x2e
   36da4:	bne	3712c <flatcc_json_parser_generic_json@@Base+0x6a0>
   36da8:	mov	r0, r4
   36dac:	ldrb	r1, [r0, #1]!
   36db0:	sub	r1, r1, #48	; 0x30
   36db4:	uxtb	r1, r1
   36db8:	cmp	r1, #10
   36dbc:	bcc	370f8 <flatcc_json_parser_generic_json@@Base+0x66c>
   36dc0:	ldr	r1, [r9]
   36dc4:	cmp	r1, #0
   36dc8:	bne	372b4 <flatcc_json_parser_generic_json@@Base+0x828>
   36dcc:	mov	r1, #6
   36dd0:	ldr	r2, [sp, #12]
   36dd4:	mov	r4, r6
   36dd8:	str	r1, [r9]
   36ddc:	ldr	r1, [sp, #8]
   36de0:	ldr	r1, [r1]
   36de4:	sub	r1, r0, r1
   36de8:	add	r1, r1, #1
   36dec:	str	r1, [r2]
   36df0:	ldr	r1, [sp, #16]
   36df4:	str	r0, [r1]
   36df8:	b	372b8 <flatcc_json_parser_generic_json@@Base+0x82c>
   36dfc:	cmp	r2, #90	; 0x5a
   36e00:	bgt	36e60 <flatcc_json_parser_generic_json@@Base+0x3d4>
   36e04:	cmp	r2, #34	; 0x22
   36e08:	beq	36ed8 <flatcc_json_parser_generic_json@@Base+0x44c>
   36e0c:	cmp	r2, #45	; 0x2d
   36e10:	beq	36d64 <flatcc_json_parser_generic_json@@Base+0x2d8>
   36e14:	b	3703c <flatcc_json_parser_generic_json@@Base+0x5b0>
   36e18:	sub	r0, r2, #49	; 0x31
   36e1c:	uxtb	r0, r0
   36e20:	cmp	r0, #8
   36e24:	bls	36eb0 <flatcc_json_parser_generic_json@@Base+0x424>
   36e28:	ldr	r0, [r9]
   36e2c:	cmp	r0, #0
   36e30:	bne	372b4 <flatcc_json_parser_generic_json@@Base+0x828>
   36e34:	mov	r0, #6
   36e38:	ldr	r1, [sp, #12]
   36e3c:	str	r0, [r9]
   36e40:	ldr	r0, [sp, #8]
   36e44:	ldr	r0, [r0]
   36e48:	sub	r0, r7, r0
   36e4c:	add	r0, r0, #1
   36e50:	str	r0, [r1]
   36e54:	ldr	r0, [sp, #16]
   36e58:	str	r7, [r0]
   36e5c:	b	372b4 <flatcc_json_parser_generic_json@@Base+0x828>
   36e60:	cmp	r2, #91	; 0x5b
   36e64:	beq	36ffc <flatcc_json_parser_generic_json@@Base+0x570>
   36e68:	cmp	r2, #123	; 0x7b
   36e6c:	bne	3703c <flatcc_json_parser_generic_json@@Base+0x5b0>
   36e70:	cmp	r8, #512	; 0x200
   36e74:	beq	3778c <flatcc_json_parser_generic_json@@Base+0xd00>
   36e78:	add	r0, sp, #24
   36e7c:	mov	r1, #125	; 0x7d
   36e80:	strb	r1, [r0, r8]
   36e84:	add	r1, r7, #1
   36e88:	sub	r0, r6, r1
   36e8c:	cmp	r0, #2
   36e90:	blt	3760c <flatcc_json_parser_generic_json@@Base+0xb80>
   36e94:	ldrb	r0, [r1]
   36e98:	cmp	r0, #32
   36e9c:	bls	375fc <flatcc_json_parser_generic_json@@Base+0xb70>
   36ea0:	mov	r7, r1
   36ea4:	cmp	r7, r6
   36ea8:	bne	37624 <flatcc_json_parser_generic_json@@Base+0xb98>
   36eac:	b	37750 <flatcc_json_parser_generic_json@@Base+0xcc4>
   36eb0:	add	r0, r7, #1
   36eb4:	cmp	r6, r0
   36eb8:	beq	372a4 <flatcc_json_parser_generic_json@@Base+0x818>
   36ebc:	ldrb	r1, [r0], #1
   36ec0:	sub	r1, r1, #48	; 0x30
   36ec4:	uxtb	r1, r1
   36ec8:	cmp	r1, #10
   36ecc:	bcc	36eb4 <flatcc_json_parser_generic_json@@Base+0x428>
   36ed0:	sub	r4, r0, #1
   36ed4:	b	36d90 <flatcc_json_parser_generic_json@@Base+0x304>
   36ed8:	cmp	r7, r6
   36edc:	beq	375c0 <flatcc_json_parser_generic_json@@Base+0xb34>
   36ee0:	add	r0, r7, #1
   36ee4:	mov	r1, r6
   36ee8:	add	r4, sp, #20
   36eec:	mov	r7, #17
   36ef0:	cmp	r0, r6
   36ef4:	bne	36f24 <flatcc_json_parser_generic_json@@Base+0x498>
   36ef8:	b	376b0 <flatcc_json_parser_generic_json@@Base+0xc24>
   36efc:	ldr	r1, [r9]
   36f00:	cmp	r1, #0
   36f04:	mov	r1, r6
   36f08:	beq	36f90 <flatcc_json_parser_generic_json@@Base+0x504>
   36f0c:	mov	r0, r5
   36f10:	mov	r2, r6
   36f14:	mov	r3, r4
   36f18:	bl	3616c <flatcc_json_parser_string_escape@@Base>
   36f1c:	cmp	r0, r6
   36f20:	beq	376ac <flatcc_json_parser_generic_json@@Base+0xc20>
   36f24:	ldrb	r1, [r0]
   36f28:	cmp	r1, #34	; 0x22
   36f2c:	beq	3768c <flatcc_json_parser_generic_json@@Base+0xc00>
   36f30:	cmp	r1, #32
   36f34:	bcc	36efc <flatcc_json_parser_generic_json@@Base+0x470>
   36f38:	rsb	r0, r0, #0
   36f3c:	uxtb	r2, r1
   36f40:	cmp	r2, #34	; 0x22
   36f44:	cmpne	r2, #92	; 0x5c
   36f48:	beq	36f74 <flatcc_json_parser_generic_json@@Base+0x4e8>
   36f4c:	add	r1, r6, r0
   36f50:	cmp	r1, #1
   36f54:	beq	36fbc <flatcc_json_parser_generic_json@@Base+0x530>
   36f58:	rsb	r1, r0, #0
   36f5c:	sub	r0, r0, #1
   36f60:	ldrb	r1, [r1, #1]
   36f64:	cmp	r1, #32
   36f68:	bcs	36f3c <flatcc_json_parser_generic_json@@Base+0x4b0>
   36f6c:	rsb	r0, r0, #0
   36f70:	b	36efc <flatcc_json_parser_generic_json@@Base+0x470>
   36f74:	adds	r1, r6, r0
   36f78:	mov	r1, r6
   36f7c:	beq	36f0c <flatcc_json_parser_generic_json@@Base+0x480>
   36f80:	rsb	r1, r0, #0
   36f84:	cmp	r2, #34	; 0x22
   36f88:	bne	36f0c <flatcc_json_parser_generic_json@@Base+0x480>
   36f8c:	b	37690 <flatcc_json_parser_generic_json@@Base+0xc04>
   36f90:	ldr	r1, [sp, #8]
   36f94:	str	r7, [r9]
   36f98:	ldr	r2, [sp, #12]
   36f9c:	ldr	r1, [r1]
   36fa0:	sub	r1, r0, r1
   36fa4:	add	r1, r1, #1
   36fa8:	str	r1, [r2]
   36fac:	ldr	r1, [sp, #16]
   36fb0:	str	r0, [r1]
   36fb4:	mov	r1, r6
   36fb8:	b	36f0c <flatcc_json_parser_generic_json@@Base+0x480>
   36fbc:	ldr	r0, [r9]
   36fc0:	mov	r1, r6
   36fc4:	cmp	r0, #0
   36fc8:	bne	36f0c <flatcc_json_parser_generic_json@@Base+0x480>
   36fcc:	mov	r0, #20
   36fd0:	ldr	r1, [sp, #4]
   36fd4:	str	r0, [r9]
   36fd8:	ldr	r0, [sp, #8]
   36fdc:	ldr	r0, [r0]
   36fe0:	sub	r0, r1, r0
   36fe4:	ldr	r1, [sp, #12]
   36fe8:	str	r0, [r1]
   36fec:	ldr	r0, [sp, #16]
   36ff0:	mov	r1, r6
   36ff4:	str	r6, [r0]
   36ff8:	b	36f0c <flatcc_json_parser_generic_json@@Base+0x480>
   36ffc:	cmp	r8, #512	; 0x200
   37000:	beq	3778c <flatcc_json_parser_generic_json@@Base+0xd00>
   37004:	add	r0, sp, #24
   37008:	mov	r1, #93	; 0x5d
   3700c:	strb	r1, [r0, r8]
   37010:	add	r1, r7, #1
   37014:	sub	r0, r6, r1
   37018:	cmp	r0, #2
   3701c:	blt	3764c <flatcc_json_parser_generic_json@@Base+0xbc0>
   37020:	ldrb	r0, [r1]
   37024:	cmp	r0, #32
   37028:	bls	3763c <flatcc_json_parser_generic_json@@Base+0xbb0>
   3702c:	mov	r7, r1
   37030:	cmp	r7, r6
   37034:	bne	37664 <flatcc_json_parser_generic_json@@Base+0xbd8>
   37038:	b	37750 <flatcc_json_parser_generic_json@@Base+0xcc4>
   3703c:	cmp	r7, r6
   37040:	mov	r4, r6
   37044:	beq	370ec <flatcc_json_parser_generic_json@@Base+0x660>
   37048:	mov	r4, r7
   3704c:	sxtb	r0, r2
   37050:	cmp	r0, #0
   37054:	bmi	37068 <flatcc_json_parser_generic_json@@Base+0x5dc>
   37058:	uxtb	r0, r2
   3705c:	cmp	r0, #95	; 0x5f
   37060:	cmpne	r0, #46	; 0x2e
   37064:	bne	37080 <flatcc_json_parser_generic_json@@Base+0x5f4>
   37068:	add	r0, r4, #1
   3706c:	cmp	r0, r6
   37070:	beq	370e8 <flatcc_json_parser_generic_json@@Base+0x65c>
   37074:	ldrb	r2, [r0]
   37078:	mov	r4, r0
   3707c:	b	3704c <flatcc_json_parser_generic_json@@Base+0x5c0>
   37080:	sub	r1, r2, #48	; 0x30
   37084:	uxtb	r1, r1
   37088:	cmp	r1, #9
   3708c:	bls	37068 <flatcc_json_parser_generic_json@@Base+0x5dc>
   37090:	orr	r1, r2, #32
   37094:	sub	r1, r1, #97	; 0x61
   37098:	uxtb	r1, r1
   3709c:	cmp	r1, #25
   370a0:	bls	37068 <flatcc_json_parser_generic_json@@Base+0x5dc>
   370a4:	sub	r1, r6, r4
   370a8:	cmp	r1, #2
   370ac:	blt	370cc <flatcc_json_parser_generic_json@@Base+0x640>
   370b0:	cmp	r0, #32
   370b4:	bhi	370ec <flatcc_json_parser_generic_json@@Base+0x660>
   370b8:	bne	370cc <flatcc_json_parser_generic_json@@Base+0x640>
   370bc:	mov	r0, r4
   370c0:	ldrb	r1, [r0, #1]!
   370c4:	cmp	r1, #32
   370c8:	bhi	3706c <flatcc_json_parser_generic_json@@Base+0x5e0>
   370cc:	mov	r0, r5
   370d0:	mov	r1, r4
   370d4:	mov	r2, r6
   370d8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   370dc:	cmp	r0, r4
   370e0:	bne	3706c <flatcc_json_parser_generic_json@@Base+0x5e0>
   370e4:	b	370ec <flatcc_json_parser_generic_json@@Base+0x660>
   370e8:	mov	r4, r6
   370ec:	cmp	r7, r4
   370f0:	bne	372b8 <flatcc_json_parser_generic_json@@Base+0x82c>
   370f4:	b	377a0 <flatcc_json_parser_generic_json@@Base+0xd14>
   370f8:	add	r4, r4, #2
   370fc:	mov	r1, r6
   37100:	cmp	r4, r6
   37104:	beq	372a8 <flatcc_json_parser_generic_json@@Base+0x81c>
   37108:	ldrb	r0, [r4]
   3710c:	sub	r1, r0, #48	; 0x30
   37110:	uxtb	r1, r1
   37114:	cmp	r1, #9
   37118:	bhi	3712c <flatcc_json_parser_generic_json@@Base+0x6a0>
   3711c:	add	r4, r4, #1
   37120:	cmp	r6, r4
   37124:	bne	37108 <flatcc_json_parser_generic_json@@Base+0x67c>
   37128:	b	372a4 <flatcc_json_parser_generic_json@@Base+0x818>
   3712c:	cmp	r4, r6
   37130:	mov	r1, r6
   37134:	beq	372a8 <flatcc_json_parser_generic_json@@Base+0x81c>
   37138:	orr	r1, r0, #32
   3713c:	cmp	r1, #101	; 0x65
   37140:	bne	371a0 <flatcc_json_parser_generic_json@@Base+0x714>
   37144:	add	r0, r4, #1
   37148:	cmp	r0, r6
   3714c:	beq	37290 <flatcc_json_parser_generic_json@@Base+0x804>
   37150:	ldrb	r1, [r0]
   37154:	cmp	r1, #45	; 0x2d
   37158:	cmpne	r1, #43	; 0x2b
   3715c:	addeq	r0, r4, #2
   37160:	cmp	r0, r6
   37164:	beq	36dc0 <flatcc_json_parser_generic_json@@Base+0x334>
   37168:	ldrb	r1, [r0]
   3716c:	sub	r1, r1, #48	; 0x30
   37170:	uxtb	r1, r1
   37174:	cmp	r1, #9
   37178:	bhi	36dc0 <flatcc_json_parser_generic_json@@Base+0x334>
   3717c:	add	r1, r0, #1
   37180:	cmp	r6, r1
   37184:	beq	372a4 <flatcc_json_parser_generic_json@@Base+0x818>
   37188:	ldrb	r0, [r1], #1
   3718c:	sub	r2, r0, #48	; 0x30
   37190:	uxtb	r2, r2
   37194:	cmp	r2, #10
   37198:	bcc	37180 <flatcc_json_parser_generic_json@@Base+0x6f4>
   3719c:	sub	r4, r1, #1
   371a0:	cmp	r4, r6
   371a4:	mov	r1, r6
   371a8:	beq	372a8 <flatcc_json_parser_generic_json@@Base+0x81c>
   371ac:	sub	r1, r0, #9
   371b0:	cmp	r1, #49	; 0x31
   371b4:	bhi	376c4 <flatcc_json_parser_generic_json@@Base+0xc38>
   371b8:	add	r0, pc, #8
   371bc:	ldr	r2, [r0, r1, lsl #2]
   371c0:	mov	r1, r4
   371c4:	add	pc, r0, r2
   371c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   371cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   371d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   371d4:	andeq	r0, r0, r0, ror #1
   371d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   371dc:	andeq	r0, r0, r0, ror #1
   371e0:	andeq	r0, r0, r0, ror #1
   371e4:	andeq	r0, r0, r0, ror #1
   371e8:	andeq	r0, r0, r0, ror #1
   371ec:	andeq	r0, r0, r0, ror #1
   371f0:	andeq	r0, r0, r0, ror #1
   371f4:	andeq	r0, r0, r0, ror #1
   371f8:	andeq	r0, r0, r0, ror #1
   371fc:	andeq	r0, r0, r0, ror #1
   37200:	andeq	r0, r0, r0, ror #1
   37204:	andeq	r0, r0, r0, ror #1
   37208:	andeq	r0, r0, r0, ror #1
   3720c:	andeq	r0, r0, r0, ror #1
   37210:	andeq	r0, r0, r0, ror #1
   37214:	andeq	r0, r0, r0, ror #1
   37218:	andeq	r0, r0, r0, ror #1
   3721c:	andeq	r0, r0, r0, ror #1
   37220:	andeq	r0, r0, r0, ror #1
   37224:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   37228:	andeq	r0, r0, r0, ror #1
   3722c:	andeq	r0, r0, r0, ror #1
   37230:	andeq	r0, r0, r0, ror #1
   37234:	andeq	r0, r0, r0, ror #1
   37238:	andeq	r0, r0, r0, ror #1
   3723c:	andeq	r0, r0, r0, ror #1
   37240:	andeq	r0, r0, r0, ror #1
   37244:	andeq	r0, r0, r0, ror #1
   37248:	andeq	r0, r0, r0, ror #1
   3724c:	andeq	r0, r0, r0, ror #1
   37250:	andeq	r0, r0, r0, ror #1
   37254:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   37258:	andeq	r0, r0, r0, ror #1
   3725c:	andeq	r0, r0, r0, ror #1
   37260:	andeq	r0, r0, r0, ror #1
   37264:	andeq	r0, r0, r0, ror #1
   37268:	andeq	r0, r0, r0, ror #1
   3726c:	andeq	r0, r0, r0, ror #1
   37270:	andeq	r0, r0, r0, ror #1
   37274:	andeq	r0, r0, r0, ror #1
   37278:	andeq	r0, r0, r0, ror #1
   3727c:	andeq	r0, r0, r0, ror #1
   37280:	andeq	r0, r0, r0, ror #1
   37284:	andeq	r0, r0, r0, ror #1
   37288:	andeq	r0, r0, r0, ror #1
   3728c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   37290:	ldr	r0, [r9]
   37294:	cmp	r0, #0
   37298:	bne	372b4 <flatcc_json_parser_generic_json@@Base+0x828>
   3729c:	mov	r0, #6
   372a0:	b	375d0 <flatcc_json_parser_generic_json@@Base+0xb44>
   372a4:	mov	r1, r6
   372a8:	ldr	r0, [r9]
   372ac:	cmp	r0, #0
   372b0:	beq	37590 <flatcc_json_parser_generic_json@@Base+0xb04>
   372b4:	mov	r4, r6
   372b8:	subs	r1, r4, r6
   372bc:	mov	r2, r8
   372c0:	movwne	r1, #1
   372c4:	cmp	r8, #0
   372c8:	movwne	r2, #1
   372cc:	beq	376e4 <flatcc_json_parser_generic_json@@Base+0xc58>
   372d0:	cmp	r4, r6
   372d4:	beq	376f4 <flatcc_json_parser_generic_json@@Base+0xc68>
   372d8:	ldrb	r1, [sl, r8]
   372dc:	sub	r0, r6, r4
   372e0:	cmp	r1, #93	; 0x5d
   372e4:	bne	37304 <flatcc_json_parser_generic_json@@Base+0x878>
   372e8:	cmp	r0, #2
   372ec:	blt	37334 <flatcc_json_parser_generic_json@@Base+0x8a8>
   372f0:	ldrb	r0, [r4]
   372f4:	cmp	r0, #32
   372f8:	bls	37320 <flatcc_json_parser_generic_json@@Base+0x894>
   372fc:	mov	r7, r4
   37300:	b	37348 <flatcc_json_parser_generic_json@@Base+0x8bc>
   37304:	cmp	r0, #2
   37308:	blt	37394 <flatcc_json_parser_generic_json@@Base+0x908>
   3730c:	ldrb	r0, [r4]
   37310:	cmp	r0, #32
   37314:	bls	37380 <flatcc_json_parser_generic_json@@Base+0x8f4>
   37318:	mov	r7, r4
   3731c:	b	373a8 <flatcc_json_parser_generic_json@@Base+0x91c>
   37320:	bne	37334 <flatcc_json_parser_generic_json@@Base+0x8a8>
   37324:	mov	r7, r4
   37328:	ldrb	r0, [r7, #1]!
   3732c:	cmp	r0, #32
   37330:	bhi	37348 <flatcc_json_parser_generic_json@@Base+0x8bc>
   37334:	mov	r0, r5
   37338:	mov	r1, r4
   3733c:	mov	r2, r6
   37340:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   37344:	mov	r7, r0
   37348:	cmp	r7, r6
   3734c:	mov	r4, r6
   37350:	beq	37564 <flatcc_json_parser_generic_json@@Base+0xad8>
   37354:	ldrb	r0, [r7]
   37358:	cmp	r0, #44	; 0x2c
   3735c:	beq	37408 <flatcc_json_parser_generic_json@@Base+0x97c>
   37360:	cmp	r0, #93	; 0x5d
   37364:	beq	3751c <flatcc_json_parser_generic_json@@Base+0xa90>
   37368:	ldr	r0, [r9]
   3736c:	mov	r4, r6
   37370:	cmp	r0, #0
   37374:	bne	37564 <flatcc_json_parser_generic_json@@Base+0xad8>
   37378:	mov	r0, #9
   3737c:	b	373dc <flatcc_json_parser_generic_json@@Base+0x950>
   37380:	bne	37394 <flatcc_json_parser_generic_json@@Base+0x908>
   37384:	mov	r7, r4
   37388:	ldrb	r0, [r7, #1]!
   3738c:	cmp	r0, #32
   37390:	bhi	373a8 <flatcc_json_parser_generic_json@@Base+0x91c>
   37394:	mov	r0, r5
   37398:	mov	r1, r4
   3739c:	mov	r2, r6
   373a0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   373a4:	mov	r7, r0
   373a8:	cmp	r7, r6
   373ac:	mov	r4, r6
   373b0:	beq	37564 <flatcc_json_parser_generic_json@@Base+0xad8>
   373b4:	ldrb	r0, [r7]
   373b8:	cmp	r0, #44	; 0x2c
   373bc:	beq	37448 <flatcc_json_parser_generic_json@@Base+0x9bc>
   373c0:	cmp	r0, #125	; 0x7d
   373c4:	beq	3751c <flatcc_json_parser_generic_json@@Base+0xa90>
   373c8:	ldr	r0, [r9]
   373cc:	mov	r4, r6
   373d0:	cmp	r0, #0
   373d4:	bne	37564 <flatcc_json_parser_generic_json@@Base+0xad8>
   373d8:	mov	r0, #10
   373dc:	str	r0, [r9]
   373e0:	ldr	r0, [sp, #8]
   373e4:	ldr	r1, [sp, #12]
   373e8:	mov	r4, r6
   373ec:	ldr	r0, [r0]
   373f0:	sub	r0, r7, r0
   373f4:	add	r0, r0, #1
   373f8:	str	r0, [r1]
   373fc:	ldr	r0, [sp, #16]
   37400:	str	r7, [r0]
   37404:	b	37564 <flatcc_json_parser_generic_json@@Base+0xad8>
   37408:	add	r1, r7, #1
   3740c:	sub	r0, r6, r1
   37410:	cmp	r0, #2
   37414:	blt	374c0 <flatcc_json_parser_generic_json@@Base+0xa34>
   37418:	ldrb	r0, [r1]
   3741c:	cmp	r0, #32
   37420:	bls	374b0 <flatcc_json_parser_generic_json@@Base+0xa24>
   37424:	mov	r7, r1
   37428:	cmp	r7, r6
   3742c:	bne	374d8 <flatcc_json_parser_generic_json@@Base+0xa4c>
   37430:	ldr	r0, [r9]
   37434:	mov	r4, r6
   37438:	cmp	r0, #0
   3743c:	bne	37564 <flatcc_json_parser_generic_json@@Base+0xad8>
   37440:	mov	r0, #9
   37444:	b	37484 <flatcc_json_parser_generic_json@@Base+0x9f8>
   37448:	add	r1, r7, #1
   3744c:	sub	r0, r6, r1
   37450:	cmp	r0, #2
   37454:	blt	374f8 <flatcc_json_parser_generic_json@@Base+0xa6c>
   37458:	ldrb	r0, [r1]
   3745c:	cmp	r0, #32
   37460:	bls	374e8 <flatcc_json_parser_generic_json@@Base+0xa5c>
   37464:	mov	r7, r1
   37468:	cmp	r7, r6
   3746c:	bne	37510 <flatcc_json_parser_generic_json@@Base+0xa84>
   37470:	ldr	r0, [r9]
   37474:	mov	r4, r6
   37478:	cmp	r0, #0
   3747c:	bne	37564 <flatcc_json_parser_generic_json@@Base+0xad8>
   37480:	mov	r0, #10
   37484:	str	r0, [r9]
   37488:	ldr	r0, [sp, #8]
   3748c:	ldr	r1, [sp, #4]
   37490:	mov	r4, r6
   37494:	ldr	r0, [r0]
   37498:	sub	r0, r1, r0
   3749c:	ldr	r1, [sp, #12]
   374a0:	str	r0, [r1]
   374a4:	ldr	r0, [sp, #16]
   374a8:	str	r6, [r0]
   374ac:	b	37564 <flatcc_json_parser_generic_json@@Base+0xad8>
   374b0:	bne	374c0 <flatcc_json_parser_generic_json@@Base+0xa34>
   374b4:	ldrb	r0, [r7, #2]!
   374b8:	cmp	r0, #32
   374bc:	bhi	374d0 <flatcc_json_parser_generic_json@@Base+0xa44>
   374c0:	mov	r0, r5
   374c4:	mov	r2, r6
   374c8:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   374cc:	mov	r7, r0
   374d0:	cmp	r7, r6
   374d4:	beq	37430 <flatcc_json_parser_generic_json@@Base+0x9a4>
   374d8:	ldrb	r0, [r7]
   374dc:	cmp	r0, #93	; 0x5d
   374e0:	beq	3751c <flatcc_json_parser_generic_json@@Base+0xa90>
   374e4:	b	37678 <flatcc_json_parser_generic_json@@Base+0xbec>
   374e8:	bne	374f8 <flatcc_json_parser_generic_json@@Base+0xa6c>
   374ec:	ldrb	r0, [r7, #2]!
   374f0:	cmp	r0, #32
   374f4:	bhi	37508 <flatcc_json_parser_generic_json@@Base+0xa7c>
   374f8:	mov	r0, r5
   374fc:	mov	r2, r6
   37500:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   37504:	mov	r7, r0
   37508:	cmp	r7, r6
   3750c:	beq	37470 <flatcc_json_parser_generic_json@@Base+0x9e4>
   37510:	ldrb	r0, [r7]
   37514:	cmp	r0, #125	; 0x7d
   37518:	bne	37678 <flatcc_json_parser_generic_json@@Base+0xbec>
   3751c:	add	r1, r7, #1
   37520:	sub	r0, r6, r1
   37524:	cmp	r0, #2
   37528:	blt	37554 <flatcc_json_parser_generic_json@@Base+0xac8>
   3752c:	ldrb	r0, [r1]
   37530:	cmp	r0, #32
   37534:	bls	37540 <flatcc_json_parser_generic_json@@Base+0xab4>
   37538:	mov	r4, r1
   3753c:	b	37564 <flatcc_json_parser_generic_json@@Base+0xad8>
   37540:	bne	37554 <flatcc_json_parser_generic_json@@Base+0xac8>
   37544:	ldrb	r0, [r7, #2]!
   37548:	mov	r4, r7
   3754c:	cmp	r0, #32
   37550:	bhi	37564 <flatcc_json_parser_generic_json@@Base+0xad8>
   37554:	mov	r0, r5
   37558:	mov	r2, r6
   3755c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   37560:	mov	r4, r0
   37564:	subs	r1, r4, r6
   37568:	sub	r0, r8, #1
   3756c:	movwne	r1, #1
   37570:	subs	r2, r8, #1
   37574:	movwne	r2, #1
   37578:	cmp	r8, #1
   3757c:	beq	376f8 <flatcc_json_parser_generic_json@@Base+0xc6c>
   37580:	cmp	r4, r6
   37584:	mov	r8, r0
   37588:	bne	372d8 <flatcc_json_parser_generic_json@@Base+0x84c>
   3758c:	b	376f8 <flatcc_json_parser_generic_json@@Base+0xc6c>
   37590:	mov	r0, #6
   37594:	str	r0, [r9]
   37598:	ldr	r0, [sp, #8]
   3759c:	ldr	r2, [sp, #12]
   375a0:	mov	r4, r6
   375a4:	ldr	r0, [r0]
   375a8:	sub	r0, r1, r0
   375ac:	add	r0, r0, #1
   375b0:	str	r0, [r2]
   375b4:	ldr	r0, [sp, #16]
   375b8:	str	r1, [r0]
   375bc:	b	372b8 <flatcc_json_parser_generic_json@@Base+0x82c>
   375c0:	ldr	r0, [r9]
   375c4:	cmp	r0, #0
   375c8:	bne	372b4 <flatcc_json_parser_generic_json@@Base+0x828>
   375cc:	mov	r0, #16
   375d0:	str	r0, [r9]
   375d4:	ldr	r0, [sp, #8]
   375d8:	ldr	r1, [sp, #4]
   375dc:	mov	r4, r6
   375e0:	ldr	r0, [r0]
   375e4:	sub	r0, r1, r0
   375e8:	ldr	r1, [sp, #12]
   375ec:	str	r0, [r1]
   375f0:	ldr	r0, [sp, #16]
   375f4:	str	r6, [r0]
   375f8:	b	372b8 <flatcc_json_parser_generic_json@@Base+0x82c>
   375fc:	bne	3760c <flatcc_json_parser_generic_json@@Base+0xb80>
   37600:	ldrb	r0, [r7, #2]!
   37604:	cmp	r0, #32
   37608:	bhi	3761c <flatcc_json_parser_generic_json@@Base+0xb90>
   3760c:	mov	r0, r5
   37610:	mov	r2, r6
   37614:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   37618:	mov	r7, r0
   3761c:	cmp	r7, r6
   37620:	beq	37750 <flatcc_json_parser_generic_json@@Base+0xcc4>
   37624:	ldrb	r0, [r7]
   37628:	add	r8, r8, #1
   3762c:	cmp	r0, #125	; 0x7d
   37630:	mov	r4, r7
   37634:	bne	37678 <flatcc_json_parser_generic_json@@Base+0xbec>
   37638:	b	372b8 <flatcc_json_parser_generic_json@@Base+0x82c>
   3763c:	bne	3764c <flatcc_json_parser_generic_json@@Base+0xbc0>
   37640:	ldrb	r0, [r7, #2]!
   37644:	cmp	r0, #32
   37648:	bhi	3765c <flatcc_json_parser_generic_json@@Base+0xbd0>
   3764c:	mov	r0, r5
   37650:	mov	r2, r6
   37654:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   37658:	mov	r7, r0
   3765c:	cmp	r7, r6
   37660:	beq	37750 <flatcc_json_parser_generic_json@@Base+0xcc4>
   37664:	ldrb	r0, [r7]
   37668:	add	r8, r8, #1
   3766c:	cmp	r0, #93	; 0x5d
   37670:	mov	r4, r7
   37674:	beq	372b8 <flatcc_json_parser_generic_json@@Base+0x82c>
   37678:	add	r0, sp, #24
   3767c:	cmp	r7, r6
   37680:	add	r0, r0, r8
   37684:	bne	36ae0 <flatcc_json_parser_generic_json@@Base+0x54>
   37688:	b	37750 <flatcc_json_parser_generic_json@@Base+0xcc4>
   3768c:	mov	r1, r0
   37690:	cmp	r1, r6
   37694:	beq	376b0 <flatcc_json_parser_generic_json@@Base+0xc24>
   37698:	ldrb	r0, [r1]
   3769c:	cmp	r0, #34	; 0x22
   376a0:	bne	376b0 <flatcc_json_parser_generic_json@@Base+0xc24>
   376a4:	add	r4, r1, #1
   376a8:	b	372b8 <flatcc_json_parser_generic_json@@Base+0x82c>
   376ac:	mov	r1, r6
   376b0:	ldr	r0, [r9]
   376b4:	cmp	r0, #0
   376b8:	bne	372b4 <flatcc_json_parser_generic_json@@Base+0x828>
   376bc:	mov	r0, #20
   376c0:	b	37594 <flatcc_json_parser_generic_json@@Base+0xb08>
   376c4:	cmp	r0, #93	; 0x5d
   376c8:	beq	372b8 <flatcc_json_parser_generic_json@@Base+0x82c>
   376cc:	cmp	r0, #125	; 0x7d
   376d0:	mov	r1, r4
   376d4:	beq	372b8 <flatcc_json_parser_generic_json@@Base+0x82c>
   376d8:	b	372a8 <flatcc_json_parser_generic_json@@Base+0x81c>
   376dc:	mov	r4, r7
   376e0:	b	37754 <flatcc_json_parser_generic_json@@Base+0xcc8>
   376e4:	mov	r0, r8
   376e8:	cmp	r1, #0
   376ec:	beq	37700 <flatcc_json_parser_generic_json@@Base+0xc74>
   376f0:	b	37754 <flatcc_json_parser_generic_json@@Base+0xcc8>
   376f4:	mov	r0, r8
   376f8:	cmp	r1, #0
   376fc:	bne	37754 <flatcc_json_parser_generic_json@@Base+0xcc8>
   37700:	cmp	r2, #0
   37704:	beq	37754 <flatcc_json_parser_generic_json@@Base+0xcc8>
   37708:	ldr	r1, [r9]
   3770c:	cmp	r1, #0
   37710:	bne	37750 <flatcc_json_parser_generic_json@@Base+0xcc4>
   37714:	add	r1, sp, #24
   37718:	add	r0, r1, r0
   3771c:	mov	r1, #10
   37720:	ldrb	r0, [r0, #-1]
   37724:	cmp	r0, #93	; 0x5d
   37728:	movweq	r1, #9
   3772c:	str	r1, [r9]
   37730:	ldr	r0, [sp, #8]
   37734:	ldr	r1, [sp, #4]
   37738:	ldr	r0, [r0]
   3773c:	sub	r0, r1, r0
   37740:	ldr	r1, [sp, #12]
   37744:	str	r0, [r1]
   37748:	ldr	r0, [sp, #16]
   3774c:	str	r6, [r0]
   37750:	mov	r4, r6
   37754:	mov	r0, r4
   37758:	sub	sp, fp, #28
   3775c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37760:	ldr	r0, [r9]
   37764:	cmp	r0, #0
   37768:	bne	37750 <flatcc_json_parser_generic_json@@Base+0xcc4>
   3776c:	mov	r0, #10
   37770:	str	r0, [r9]
   37774:	b	37730 <flatcc_json_parser_generic_json@@Base+0xca4>
   37778:	ldr	r0, [r9]
   3777c:	cmp	r0, #0
   37780:	bne	37750 <flatcc_json_parser_generic_json@@Base+0xcc4>
   37784:	mov	r0, #4
   37788:	b	377b0 <flatcc_json_parser_generic_json@@Base+0xd24>
   3778c:	ldr	r0, [r9]
   37790:	cmp	r0, #0
   37794:	bne	37750 <flatcc_json_parser_generic_json@@Base+0xcc4>
   37798:	mov	r0, #2
   3779c:	b	377b0 <flatcc_json_parser_generic_json@@Base+0xd24>
   377a0:	ldr	r0, [r9]
   377a4:	cmp	r0, #0
   377a8:	bne	37750 <flatcc_json_parser_generic_json@@Base+0xcc4>
   377ac:	mov	r0, #5
   377b0:	str	r0, [r9]
   377b4:	ldr	r0, [sp, #8]
   377b8:	ldr	r1, [sp, #12]
   377bc:	ldr	r0, [r0]
   377c0:	sub	r0, r7, r0
   377c4:	add	r0, r0, #1
   377c8:	str	r0, [r1]
   377cc:	ldr	r0, [sp, #16]
   377d0:	str	r7, [r0]
   377d4:	b	37750 <flatcc_json_parser_generic_json@@Base+0xcc4>

000377d8 <flatcc_json_parser_double@@Base>:
   377d8:	push	{r4, r5, r6, r7, fp, lr}
   377dc:	add	fp, sp, #16
   377e0:	mov	r5, r0
   377e4:	mov	r0, #0
   377e8:	mov	r6, r1
   377ec:	cmp	r1, r2
   377f0:	str	r0, [r3]
   377f4:	str	r0, [r3, #4]
   377f8:	beq	3789c <flatcc_json_parser_double@@Base+0xc4>
   377fc:	mov	r0, r6
   37800:	mov	r4, r2
   37804:	mov	r7, r3
   37808:	ldrb	r1, [r0], #1
   3780c:	cmp	r1, #45	; 0x2d
   37810:	movne	r0, r6
   37814:	sub	r2, r2, r0
   37818:	cmp	r2, #2
   3781c:	blt	3785c <flatcc_json_parser_double@@Base+0x84>
   37820:	sub	r1, r1, #45	; 0x2d
   37824:	clz	r1, r1
   37828:	lsr	r1, r1, #5
   3782c:	ldrb	r1, [r6, r1]
   37830:	cmp	r1, #46	; 0x2e
   37834:	beq	3784c <flatcc_json_parser_double@@Base+0x74>
   37838:	cmp	r1, #48	; 0x30
   3783c:	bne	3785c <flatcc_json_parser_double@@Base+0x84>
   37840:	ldrb	r0, [r0, #1]
   37844:	cmp	r0, #48	; 0x30
   37848:	bne	3785c <flatcc_json_parser_double@@Base+0x84>
   3784c:	ldr	r0, [r5, #24]
   37850:	cmp	r0, #0
   37854:	bne	378c8 <flatcc_json_parser_double@@Base+0xf0>
   37858:	b	378ac <flatcc_json_parser_double@@Base+0xd4>
   3785c:	sub	r1, r4, r6
   37860:	mov	r0, r6
   37864:	mov	r2, r7
   37868:	bl	378d0 <flatcc_json_parser_double@@Base+0xf8>
   3786c:	cmp	r0, #0
   37870:	cmpne	r0, r6
   37874:	bne	378cc <flatcc_json_parser_double@@Base+0xf4>
   37878:	vldr	d0, [r7]
   3787c:	bl	14e6c <__isinf@plt>
   37880:	ldr	r1, [r5, #24]
   37884:	cmp	r0, #0
   37888:	beq	378a4 <flatcc_json_parser_double@@Base+0xcc>
   3788c:	cmp	r1, #0
   37890:	bne	378c8 <flatcc_json_parser_double@@Base+0xf0>
   37894:	mov	r0, #7
   37898:	b	378b0 <flatcc_json_parser_double@@Base+0xd8>
   3789c:	mov	r0, r6
   378a0:	pop	{r4, r5, r6, r7, fp, pc}
   378a4:	cmp	r1, #0
   378a8:	bne	378c8 <flatcc_json_parser_double@@Base+0xf0>
   378ac:	mov	r0, #6
   378b0:	str	r6, [r5, #36]	; 0x24
   378b4:	ldr	r1, [r5, #4]
   378b8:	sub	r1, r6, r1
   378bc:	add	r1, r1, #1
   378c0:	str	r1, [r5, #20]
   378c4:	str	r0, [r5, #24]
   378c8:	mov	r0, r4
   378cc:	pop	{r4, r5, r6, r7, fp, pc}
   378d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   378d4:	add	fp, sp, #28
   378d8:	sub	sp, sp, #36	; 0x24
   378dc:	cmp	r1, #1000	; 0x3e8
   378e0:	mov	r3, r1
   378e4:	mov	r5, #0
   378e8:	mov	r9, r0
   378ec:	movge	r3, #1000	; 0x3e8
   378f0:	str	r5, [r2]
   378f4:	str	r5, [r2, #4]
   378f8:	add	ip, r0, r3
   378fc:	add	lr, ip, #1
   37900:	cmp	lr, r0
   37904:	beq	37978 <flatcc_json_parser_double@@Base+0x1a0>
   37908:	ldrb	r0, [r9]
   3790c:	mov	r4, r9
   37910:	cmp	r0, #45	; 0x2d
   37914:	bne	3792c <flatcc_json_parser_double@@Base+0x154>
   37918:	cmp	r3, #0
   3791c:	beq	37cc8 <flatcc_json_parser_double@@Base+0x4f0>
   37920:	add	r4, r9, #1
   37924:	mov	r5, #1
   37928:	ldrb	r0, [r4]
   3792c:	cmp	r0, #48	; 0x30
   37930:	bne	37960 <flatcc_json_parser_double@@Base+0x188>
   37934:	add	r6, r4, #1
   37938:	cmp	r4, ip
   3793c:	beq	379cc <flatcc_json_parser_double@@Base+0x1f4>
   37940:	ldrb	r1, [r6]
   37944:	orr	r0, r1, #32
   37948:	cmp	r0, #120	; 0x78
   3794c:	bne	37998 <flatcc_json_parser_double@@Base+0x1c0>
   37950:	mov	r0, #0
   37954:	str	r0, [r2]
   37958:	str	r0, [r2, #4]
   3795c:	b	37978 <flatcc_json_parser_double@@Base+0x1a0>
   37960:	sub	r1, r0, #49	; 0x31
   37964:	uxtb	r1, r1
   37968:	cmp	r1, #9
   3796c:	bcc	37980 <flatcc_json_parser_double@@Base+0x1a8>
   37970:	cmp	r5, #0
   37974:	movne	r9, #0
   37978:	mov	r2, r9
   3797c:	b	37ccc <flatcc_json_parser_double@@Base+0x4f4>
   37980:	sub	r0, r0, #48	; 0x30
   37984:	add	r6, r4, #1
   37988:	asr	r1, r0, #31
   3798c:	cmp	r6, lr
   37990:	bne	379dc <flatcc_json_parser_double@@Base+0x204>
   37994:	b	37cc8 <flatcc_json_parser_double@@Base+0x4f0>
   37998:	cmp	r1, #48	; 0x30
   3799c:	mov	r0, #0
   379a0:	mov	r1, #0
   379a4:	bne	379d4 <flatcc_json_parser_double@@Base+0x1fc>
   379a8:	sub	r0, ip, #1
   379ac:	mov	r1, r4
   379b0:	cmp	r0, r4
   379b4:	beq	379c8 <flatcc_json_parser_double@@Base+0x1f0>
   379b8:	ldrb	r7, [r1, #2]
   379bc:	add	r4, r1, #1
   379c0:	cmp	r7, #48	; 0x30
   379c4:	beq	379ac <flatcc_json_parser_double@@Base+0x1d4>
   379c8:	add	r6, r1, #2
   379cc:	mov	r0, #0
   379d0:	mov	r1, #0
   379d4:	cmp	r6, lr
   379d8:	beq	37cc8 <flatcc_json_parser_double@@Base+0x4f0>
   379dc:	mov	sl, #10
   379e0:	mov	r7, r6
   379e4:	str	r2, [sp, #20]
   379e8:	ldrb	r8, [r7]
   379ec:	sub	r2, r8, #48	; 0x30
   379f0:	uxtb	r4, r2
   379f4:	mov	r2, #0
   379f8:	cmp	r4, #9
   379fc:	bhi	37a3c <flatcc_json_parser_double@@Base+0x264>
   37a00:	movw	r4, #39320	; 0x9998
   37a04:	movt	r4, #39321	; 0x9999
   37a08:	subs	r4, r4, r0
   37a0c:	movw	r4, #39321	; 0x9999
   37a10:	movt	r4, #6553	; 0x1999
   37a14:	sbcs	r4, r4, r1
   37a18:	bcc	37a4c <flatcc_json_parser_double@@Base+0x274>
   37a1c:	add	r1, r1, r1, lsl #2
   37a20:	add	r7, r7, #1
   37a24:	lsl	r1, r1, #1
   37a28:	umlal	r8, r1, r0, sl
   37a2c:	subs	r0, r8, #48	; 0x30
   37a30:	sbc	r1, r1, #0
   37a34:	cmp	lr, r7
   37a38:	bne	379e8 <flatcc_json_parser_double@@Base+0x210>
   37a3c:	mov	r8, r0
   37a40:	mov	sl, r1
   37a44:	mov	r0, #0
   37a48:	b	37a68 <flatcc_json_parser_double@@Base+0x290>
   37a4c:	adds	r4, r0, #1
   37a50:	adc	sl, r1, #0
   37a54:	cmp	r8, #52	; 0x34
   37a58:	mov	r8, r4
   37a5c:	movls	r8, r0
   37a60:	movls	sl, r1
   37a64:	mov	r0, #1
   37a68:	cmp	r7, lr
   37a6c:	str	r0, [sp, #24]
   37a70:	beq	37ccc <flatcc_json_parser_double@@Base+0x4f4>
   37a74:	sub	r0, r7, r6
   37a78:	mov	r6, #0
   37a7c:	str	r0, [sp, #16]
   37a80:	sub	r0, r3, r7
   37a84:	add	r0, r9, r0
   37a88:	ldrb	r1, [r7]
   37a8c:	cmp	r1, #48	; 0x30
   37a90:	bne	37ab4 <flatcc_json_parser_double@@Base+0x2dc>
   37a94:	add	r1, r7, #1
   37a98:	cmp	r7, ip
   37a9c:	sub	r0, r0, #1
   37aa0:	add	r6, r6, #1
   37aa4:	mov	r7, r1
   37aa8:	bne	37a88 <flatcc_json_parser_double@@Base+0x2b0>
   37aac:	mov	r7, r1
   37ab0:	b	37b00 <flatcc_json_parser_double@@Base+0x328>
   37ab4:	sub	r1, r1, #49	; 0x31
   37ab8:	uxtb	r1, r1
   37abc:	cmp	r1, #8
   37ac0:	bhi	37b00 <flatcc_json_parser_double@@Base+0x328>
   37ac4:	mvn	r2, #0
   37ac8:	mov	r1, r2
   37acc:	cmp	r0, #0
   37ad0:	beq	37af0 <flatcc_json_parser_double@@Base+0x318>
   37ad4:	ldrb	r2, [r7, -r1]
   37ad8:	sub	r0, r0, #1
   37adc:	sub	r2, r2, #48	; 0x30
   37ae0:	uxtb	r4, r2
   37ae4:	sub	r2, r1, #1
   37ae8:	cmp	r4, #10
   37aec:	bcc	37ac8 <flatcc_json_parser_double@@Base+0x2f0>
   37af0:	mov	r0, #1
   37af4:	sub	r6, r6, r1
   37af8:	sub	r7, r7, r1
   37afc:	str	r0, [sp, #24]
   37b00:	mov	r2, #0
   37b04:	cmp	r7, lr
   37b08:	beq	37ccc <flatcc_json_parser_double@@Base+0x4f4>
   37b0c:	ldrb	r0, [r7]
   37b10:	cmp	r0, #46	; 0x2e
   37b14:	bne	37ca0 <flatcc_json_parser_double@@Base+0x4c8>
   37b18:	mov	r4, r7
   37b1c:	ldrb	r0, [r4, #1]!
   37b20:	sub	r1, r0, #48	; 0x30
   37b24:	uxtb	r1, r1
   37b28:	cmp	r1, #9
   37b2c:	bhi	37ccc <flatcc_json_parser_double@@Base+0x4f4>
   37b30:	cmp	r7, ip
   37b34:	beq	37bdc <flatcc_json_parser_double@@Base+0x404>
   37b38:	sub	r1, r3, r7
   37b3c:	str	r4, [sp, #8]
   37b40:	add	r1, r1, r9
   37b44:	sub	r1, r1, #1
   37b48:	str	r1, [sp, #12]
   37b4c:	mov	r1, #0
   37b50:	mov	r3, r1
   37b54:	movw	r1, #39320	; 0x9998
   37b58:	movt	r1, #39321	; 0x9999
   37b5c:	subs	r1, r1, r8
   37b60:	movw	r1, #39321	; 0x9999
   37b64:	movt	r1, #6553	; 0x1999
   37b68:	sbcs	r1, r1, sl
   37b6c:	bcc	37bec <flatcc_json_parser_double@@Base+0x414>
   37b70:	add	r1, sl, sl, lsl #2
   37b74:	uxtb	r0, r0
   37b78:	mov	r4, #10
   37b7c:	lsl	r1, r1, #1
   37b80:	umlal	r0, r1, r8, r4
   37b84:	add	r4, r7, r3
   37b88:	subs	r8, r0, #48	; 0x30
   37b8c:	ldr	r0, [sp, #12]
   37b90:	sbc	sl, r1, #0
   37b94:	cmp	r0, r3
   37b98:	beq	37bcc <flatcc_json_parser_double@@Base+0x3f4>
   37b9c:	ldrb	r0, [r4, #2]
   37ba0:	str	sl, [sp, #28]
   37ba4:	mov	sl, r8
   37ba8:	mov	r8, r5
   37bac:	add	r1, r3, #1
   37bb0:	sub	r5, r0, #48	; 0x30
   37bb4:	uxtb	r5, r5
   37bb8:	cmp	r5, #10
   37bbc:	mov	r5, r8
   37bc0:	mov	r8, sl
   37bc4:	ldr	sl, [sp, #28]
   37bc8:	bcc	37b50 <flatcc_json_parser_double@@Base+0x378>
   37bcc:	mvn	r0, r3
   37bd0:	add	r7, r4, #2
   37bd4:	add	r6, r0, r6
   37bd8:	b	37c24 <flatcc_json_parser_double@@Base+0x44c>
   37bdc:	mov	r7, r4
   37be0:	cmp	r7, lr
   37be4:	bne	37c30 <flatcc_json_parser_double@@Base+0x458>
   37be8:	b	37ccc <flatcc_json_parser_double@@Base+0x4f4>
   37bec:	add	r1, r7, r3
   37bf0:	sub	r6, r6, r3
   37bf4:	add	r7, r1, #1
   37bf8:	ldr	r1, [sp, #24]
   37bfc:	cmp	r1, #0
   37c00:	bne	37c24 <flatcc_json_parser_double@@Base+0x44c>
   37c04:	uxtb	r0, r0
   37c08:	adds	r1, r8, #1
   37c0c:	adc	r3, sl, #0
   37c10:	cmp	r0, #52	; 0x34
   37c14:	mov	r0, #1
   37c18:	movhi	r8, r1
   37c1c:	movhi	sl, r3
   37c20:	str	r0, [sp, #24]
   37c24:	ldr	r4, [sp, #8]
   37c28:	cmp	r7, lr
   37c2c:	beq	37ccc <flatcc_json_parser_double@@Base+0x4f4>
   37c30:	ldr	r1, [sp, #16]
   37c34:	sub	r0, r7, r4
   37c38:	add	r1, r0, r1
   37c3c:	str	r1, [sp, #16]
   37c40:	ldrb	r0, [r7]
   37c44:	cmp	r0, #48	; 0x30
   37c48:	bne	37c60 <flatcc_json_parser_double@@Base+0x488>
   37c4c:	add	r7, r7, #1
   37c50:	add	r6, r6, #1
   37c54:	cmp	lr, r7
   37c58:	bne	37c40 <flatcc_json_parser_double@@Base+0x468>
   37c5c:	b	37ca0 <flatcc_json_parser_double@@Base+0x4c8>
   37c60:	sub	r0, r0, #49	; 0x31
   37c64:	uxtb	r0, r0
   37c68:	cmp	r0, #8
   37c6c:	bhi	37ca0 <flatcc_json_parser_double@@Base+0x4c8>
   37c70:	mov	r0, r7
   37c74:	cmp	ip, r7
   37c78:	beq	37c94 <flatcc_json_parser_double@@Base+0x4bc>
   37c7c:	ldrb	r1, [r0, #1]
   37c80:	add	r7, r0, #1
   37c84:	sub	r1, r1, #48	; 0x30
   37c88:	uxtb	r1, r1
   37c8c:	cmp	r1, #10
   37c90:	bcc	37c70 <flatcc_json_parser_double@@Base+0x498>
   37c94:	add	r7, r0, #1
   37c98:	mov	r0, #1
   37c9c:	str	r0, [sp, #24]
   37ca0:	cmp	r7, lr
   37ca4:	beq	37ccc <flatcc_json_parser_double@@Base+0x4f4>
   37ca8:	ldrb	r0, [r7]
   37cac:	mov	r4, #0
   37cb0:	orr	r0, r0, #32
   37cb4:	cmp	r0, #101	; 0x65
   37cb8:	bne	37cd8 <flatcc_json_parser_double@@Base+0x500>
   37cbc:	sub	r0, lr, r7
   37cc0:	cmp	r0, #2
   37cc4:	bge	37d44 <flatcc_json_parser_double@@Base+0x56c>
   37cc8:	mov	r2, #0
   37ccc:	mov	r0, r2
   37cd0:	sub	sp, fp, #28
   37cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37cd8:	mov	r0, #0
   37cdc:	cmp	r7, lr
   37ce0:	mov	r2, #0
   37ce4:	beq	37ccc <flatcc_json_parser_double@@Base+0x4f4>
   37ce8:	vmov.i32	d16, #0	; 0x00000000
   37cec:	cmp	r4, #0
   37cf0:	rsbne	r0, r0, #0
   37cf4:	orrs	r1, r8, sl
   37cf8:	beq	37d20 <flatcc_json_parser_double@@Base+0x548>
   37cfc:	ldr	r2, [sp, #16]
   37d00:	add	r1, r2, r6
   37d04:	add	r4, r1, r0
   37d08:	cmn	r4, #324	; 0x144
   37d0c:	blt	37d20 <flatcc_json_parser_double@@Base+0x548>
   37d10:	movw	r0, #310	; 0x136
   37d14:	cmp	r4, r0
   37d18:	ble	37d78 <flatcc_json_parser_double@@Base+0x5a0>
   37d1c:	vldr	d16, [pc, #964]	; 380e8 <flatcc_json_parser_double@@Base+0x910>
   37d20:	ldr	r4, [sp, #20]
   37d24:	vstr	d16, [r4]
   37d28:	cmp	r5, #0
   37d2c:	beq	37d3c <flatcc_json_parser_double@@Base+0x564>
   37d30:	vldr	d16, [r4]
   37d34:	vneg.f64	d16, d16
   37d38:	vstr	d16, [r4]
   37d3c:	mov	r2, r7
   37d40:	b	37ccc <flatcc_json_parser_double@@Base+0x4f4>
   37d44:	mov	r3, r7
   37d48:	ldrb	r0, [r3, #1]!
   37d4c:	cmp	r0, #45	; 0x2d
   37d50:	beq	37e78 <flatcc_json_parser_double@@Base+0x6a0>
   37d54:	mov	r4, #0
   37d58:	cmp	r0, #43	; 0x2b
   37d5c:	bne	37e88 <flatcc_json_parser_double@@Base+0x6b0>
   37d60:	add	r3, r7, #2
   37d64:	mov	r2, #0
   37d68:	cmp	r3, lr
   37d6c:	beq	37ccc <flatcc_json_parser_double@@Base+0x4f4>
   37d70:	mov	r4, #0
   37d74:	b	37e88 <flatcc_json_parser_double@@Base+0x6b0>
   37d78:	mov	r0, #0
   37d7c:	mov	r6, r2
   37d80:	cmp	r0, sl, lsr #21
   37d84:	bne	37ee0 <flatcc_json_parser_double@@Base+0x708>
   37d88:	cmp	r4, #22
   37d8c:	bhi	37ee0 <flatcc_json_parser_double@@Base+0x708>
   37d90:	mov	r0, r8
   37d94:	mov	r1, sl
   37d98:	bl	47400 <flatcc_json_printer_clear@@Base+0x4e4>
   37d9c:	vmov	d16, r0, r1
   37da0:	sub	r2, r4, r6
   37da4:	add	r0, r2, #22
   37da8:	cmp	r0, #44	; 0x2c
   37dac:	bhi	37d20 <flatcc_json_parser_double@@Base+0x548>
   37db0:	add	r1, pc, #4
   37db4:	ldr	r0, [r1, r0, lsl #2]
   37db8:	add	pc, r1, r0
   37dbc:	strheq	r0, [r0], -r4
   37dc0:	andeq	r0, r0, r4, ror r1
   37dc4:	andeq	r0, r0, ip, ror r1
   37dc8:	andeq	r0, r0, r4, lsl #3
   37dcc:	andeq	r0, r0, ip, lsl #3
   37dd0:	muleq	r0, r4, r1
   37dd4:	muleq	r0, ip, r1
   37dd8:	andeq	r0, r0, r4, lsr #3
   37ddc:	andeq	r0, r0, ip, lsr #3
   37de0:			; <UNDEFINED> instruction: 0x000001b4
   37de4:			; <UNDEFINED> instruction: 0x000001bc
   37de8:	andeq	r0, r0, r4, asr #3
   37dec:	andeq	r0, r0, ip, asr #3
   37df0:	ldrdeq	r0, [r0], -r4
   37df4:	ldrdeq	r0, [r0], -ip
   37df8:	andeq	r0, r0, r4, ror #3
   37dfc:	andeq	r0, r0, ip, ror #3
   37e00:	strdeq	r0, [r0], -r4
   37e04:	strdeq	r0, [r0], -ip
   37e08:	andeq	r0, r0, r4, lsl #4
   37e0c:	andeq	r0, r0, ip, lsl #4
   37e10:	andeq	r0, r0, r4, lsl r2
   37e14:			; <UNDEFINED> instruction: 0xffffff64
   37e18:	andeq	r0, r0, r0, lsr #4
   37e1c:	andeq	r0, r0, ip, lsr #4
   37e20:	andeq	r0, r0, r8, lsr r2
   37e24:	andeq	r0, r0, r4, asr #4
   37e28:	andeq	r0, r0, r0, asr r2
   37e2c:	andeq	r0, r0, ip, asr r2
   37e30:	andeq	r0, r0, r8, ror #4
   37e34:	andeq	r0, r0, r4, ror r2
   37e38:	andeq	r0, r0, r0, lsl #5
   37e3c:	andeq	r0, r0, ip, lsl #5
   37e40:	muleq	r0, r8, r2
   37e44:	andeq	r0, r0, r4, lsr #5
   37e48:			; <UNDEFINED> instruction: 0x000002b0
   37e4c:			; <UNDEFINED> instruction: 0x000002bc
   37e50:	andeq	r0, r0, r8, asr #5
   37e54:	ldrdeq	r0, [r0], -r4
   37e58:	andeq	r0, r0, r0, ror #5
   37e5c:	andeq	r0, r0, ip, ror #5
   37e60:	strdeq	r0, [r0], -r8
   37e64:	andeq	r0, r0, r4, lsl #6
   37e68:	andeq	r0, r0, r0, lsl r3
   37e6c:	andeq	r0, r0, ip, lsl r3
   37e70:	vldr	d17, [pc, #792]	; 38190 <flatcc_json_parser_double@@Base+0x9b8>
   37e74:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37e78:	add	r3, r7, #2
   37e7c:	mov	r4, #1
   37e80:	cmp	r3, lr
   37e84:	beq	37cc8 <flatcc_json_parser_double@@Base+0x4f0>
   37e88:	ldrb	r0, [r3]
   37e8c:	mov	r2, #0
   37e90:	sub	r0, r0, #48	; 0x30
   37e94:	uxtb	r1, r0
   37e98:	cmp	r1, #9
   37e9c:	bhi	37ccc <flatcc_json_parser_double@@Base+0x4f4>
   37ea0:	cmp	r3, ip
   37ea4:	beq	37ed8 <flatcc_json_parser_double@@Base+0x700>
   37ea8:	ldrb	r1, [r3, #1]
   37eac:	sub	r2, r1, #48	; 0x30
   37eb0:	uxtb	r2, r2
   37eb4:	cmp	r2, #9
   37eb8:	bhi	37ed8 <flatcc_json_parser_double@@Base+0x700>
   37ebc:	cmp	r0, #32768	; 0x8000
   37ec0:	add	r3, r3, #1
   37ec4:	addlt	r0, r0, r0, lsl #2
   37ec8:	addlt	r0, r1, r0, lsl #1
   37ecc:	sublt	r0, r0, #48	; 0x30
   37ed0:	cmp	ip, r3
   37ed4:	bne	37ea8 <flatcc_json_parser_double@@Base+0x6d0>
   37ed8:	add	r7, r3, #1
   37edc:	b	37cdc <flatcc_json_parser_double@@Base+0x504>
   37ee0:	ldr	r0, [sp, #24]
   37ee4:	ldr	r3, [sp, #20]
   37ee8:	mov	r2, r4
   37eec:	mov	r1, sl
   37ef0:	str	r0, [sp]
   37ef4:	str	r3, [sp, #4]
   37ef8:	mov	r4, r3
   37efc:	mov	r0, r8
   37f00:	mov	r3, r6
   37f04:	bl	35a58 <grisu3_diy_fp_encode_double@@Base>
   37f08:	cmp	r0, #0
   37f0c:	bne	37d28 <flatcc_json_parser_double@@Base+0x550>
   37f10:	add	r1, sp, #32
   37f14:	mov	r0, r9
   37f18:	bl	14efc <strtod@plt>
   37f1c:	vstr	d0, [r4]
   37f20:	ldr	r0, [sp, #32]
   37f24:	cmp	r0, r7
   37f28:	movcc	r7, r0
   37f2c:	b	37d3c <flatcc_json_parser_double@@Base+0x564>
   37f30:	vldr	d17, [pc, #440]	; 380f0 <flatcc_json_parser_double@@Base+0x918>
   37f34:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37f38:	vldr	d17, [pc, #440]	; 380f8 <flatcc_json_parser_double@@Base+0x920>
   37f3c:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37f40:	vldr	d17, [pc, #440]	; 38100 <flatcc_json_parser_double@@Base+0x928>
   37f44:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37f48:	vldr	d17, [pc, #440]	; 38108 <flatcc_json_parser_double@@Base+0x930>
   37f4c:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37f50:	vldr	d17, [pc, #440]	; 38110 <flatcc_json_parser_double@@Base+0x938>
   37f54:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37f58:	vldr	d17, [pc, #440]	; 38118 <flatcc_json_parser_double@@Base+0x940>
   37f5c:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37f60:	vldr	d17, [pc, #440]	; 38120 <flatcc_json_parser_double@@Base+0x948>
   37f64:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37f68:	vldr	d17, [pc, #440]	; 38128 <flatcc_json_parser_double@@Base+0x950>
   37f6c:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37f70:	vldr	d17, [pc, #440]	; 38130 <flatcc_json_parser_double@@Base+0x958>
   37f74:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37f78:	vldr	d17, [pc, #440]	; 38138 <flatcc_json_parser_double@@Base+0x960>
   37f7c:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37f80:	vldr	d17, [pc, #440]	; 38140 <flatcc_json_parser_double@@Base+0x968>
   37f84:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37f88:	vldr	d17, [pc, #440]	; 38148 <flatcc_json_parser_double@@Base+0x970>
   37f8c:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37f90:	vldr	d17, [pc, #440]	; 38150 <flatcc_json_parser_double@@Base+0x978>
   37f94:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37f98:	vldr	d17, [pc, #440]	; 38158 <flatcc_json_parser_double@@Base+0x980>
   37f9c:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37fa0:	vldr	d17, [pc, #440]	; 38160 <flatcc_json_parser_double@@Base+0x988>
   37fa4:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37fa8:	vldr	d17, [pc, #440]	; 38168 <flatcc_json_parser_double@@Base+0x990>
   37fac:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37fb0:	vldr	d17, [pc, #440]	; 38170 <flatcc_json_parser_double@@Base+0x998>
   37fb4:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37fb8:	vldr	d17, [pc, #440]	; 38178 <flatcc_json_parser_double@@Base+0x9a0>
   37fbc:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37fc0:	vldr	d17, [pc, #440]	; 38180 <flatcc_json_parser_double@@Base+0x9a8>
   37fc4:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37fc8:	vldr	d17, [pc, #440]	; 38188 <flatcc_json_parser_double@@Base+0x9b0>
   37fcc:	b	37fd4 <flatcc_json_parser_double@@Base+0x7fc>
   37fd0:	vmov.f64	d17, #36	; 0x41200000  10.0
   37fd4:	vdiv.f64	d16, d16, d17
   37fd8:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   37fdc:	vmov.f64	d17, #36	; 0x41200000  10.0
   37fe0:	vmul.f64	d16, d16, d17
   37fe4:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   37fe8:	vldr	d17, [pc, #408]	; 38188 <flatcc_json_parser_double@@Base+0x9b0>
   37fec:	vmul.f64	d16, d16, d17
   37ff0:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   37ff4:	vldr	d17, [pc, #388]	; 38180 <flatcc_json_parser_double@@Base+0x9a8>
   37ff8:	vmul.f64	d16, d16, d17
   37ffc:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   38000:	vldr	d17, [pc, #368]	; 38178 <flatcc_json_parser_double@@Base+0x9a0>
   38004:	vmul.f64	d16, d16, d17
   38008:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   3800c:	vldr	d17, [pc, #348]	; 38170 <flatcc_json_parser_double@@Base+0x998>
   38010:	vmul.f64	d16, d16, d17
   38014:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   38018:	vldr	d17, [pc, #328]	; 38168 <flatcc_json_parser_double@@Base+0x990>
   3801c:	vmul.f64	d16, d16, d17
   38020:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   38024:	vldr	d17, [pc, #308]	; 38160 <flatcc_json_parser_double@@Base+0x988>
   38028:	vmul.f64	d16, d16, d17
   3802c:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   38030:	vldr	d17, [pc, #288]	; 38158 <flatcc_json_parser_double@@Base+0x980>
   38034:	vmul.f64	d16, d16, d17
   38038:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   3803c:	vldr	d17, [pc, #268]	; 38150 <flatcc_json_parser_double@@Base+0x978>
   38040:	vmul.f64	d16, d16, d17
   38044:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   38048:	vldr	d17, [pc, #248]	; 38148 <flatcc_json_parser_double@@Base+0x970>
   3804c:	vmul.f64	d16, d16, d17
   38050:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   38054:	vldr	d17, [pc, #228]	; 38140 <flatcc_json_parser_double@@Base+0x968>
   38058:	vmul.f64	d16, d16, d17
   3805c:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   38060:	vldr	d17, [pc, #208]	; 38138 <flatcc_json_parser_double@@Base+0x960>
   38064:	vmul.f64	d16, d16, d17
   38068:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   3806c:	vldr	d17, [pc, #188]	; 38130 <flatcc_json_parser_double@@Base+0x958>
   38070:	vmul.f64	d16, d16, d17
   38074:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   38078:	vldr	d17, [pc, #168]	; 38128 <flatcc_json_parser_double@@Base+0x950>
   3807c:	vmul.f64	d16, d16, d17
   38080:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   38084:	vldr	d17, [pc, #148]	; 38120 <flatcc_json_parser_double@@Base+0x948>
   38088:	vmul.f64	d16, d16, d17
   3808c:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   38090:	vldr	d17, [pc, #128]	; 38118 <flatcc_json_parser_double@@Base+0x940>
   38094:	vmul.f64	d16, d16, d17
   38098:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   3809c:	vldr	d17, [pc, #108]	; 38110 <flatcc_json_parser_double@@Base+0x938>
   380a0:	vmul.f64	d16, d16, d17
   380a4:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   380a8:	vldr	d17, [pc, #88]	; 38108 <flatcc_json_parser_double@@Base+0x930>
   380ac:	vmul.f64	d16, d16, d17
   380b0:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   380b4:	vldr	d17, [pc, #68]	; 38100 <flatcc_json_parser_double@@Base+0x928>
   380b8:	vmul.f64	d16, d16, d17
   380bc:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   380c0:	vldr	d17, [pc, #48]	; 380f8 <flatcc_json_parser_double@@Base+0x920>
   380c4:	vmul.f64	d16, d16, d17
   380c8:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   380cc:	vldr	d17, [pc, #28]	; 380f0 <flatcc_json_parser_double@@Base+0x918>
   380d0:	vmul.f64	d16, d16, d17
   380d4:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   380d8:	vldr	d17, [pc, #176]	; 38190 <flatcc_json_parser_double@@Base+0x9b8>
   380dc:	vmul.f64	d16, d16, d17
   380e0:	b	37d20 <flatcc_json_parser_double@@Base+0x548>
   380e4:	nop	{0}
   380e8:	andeq	r0, r0, r0
   380ec:	svcvc	0x00f00000	; IMB
   380f0:	usatle	lr, #2, r0, asr #30
   380f4:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   380f8:	ldmvc	r5!, {r6, sl, fp, pc}
   380fc:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   38100:	addsvs	r3, r1, r0, lsl #26
   38104:	mvnmi	r5, #228, 16	; 0xe40000
   38108:	strbvs	ip, [lr, -r0, lsl #16]
   3810c:			; <UNDEFINED> instruction: 0x43abc16d
   38110:	ldrbhi	sl, [r8]
   38114:	cmnmi	r6, #1459617792	; 0x57000000
   38118:	strbcc	r8, [r0, r0]!
   3811c:	movtmi	ip, #4985	; 0x1379
   38120:	ldrtcs	r0, [r4], -r0
   38124:	movwmi	r6, #52213	; 0xcbf5
   38128:	cdpne	0, 9, cr0, cr0, cr0, {0}
   3812c:	sbcsmi	fp, r6, #196, 24	; 0xc400
   38130:	strb	r0, [r0, #-0]
   38134:	adcmi	r3, r2, #156	; 0x9c
   38138:	andge	r0, r0, #0
   3813c:	rsbmi	r1, sp, #148, 20	; 0x94000
   38140:	stmda	r0, {}	; <UNPREDICTABLE>
   38144:	eorsmi	r4, r7, #7733248	; 0x760000
   38148:	andcs	r0, r0, r0
   3814c:	andmi	sl, r2, #95	; 0x5f
   38150:	andeq	r0, r0, r0
   38154:	bicmi	ip, sp, r5, ror #26
   38158:	andeq	r0, r0, r0
   3815c:	orrsmi	sp, r7, r4, lsl #15
   38160:	andeq	r0, r0, r0
   38164:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   38168:	andeq	r0, r0, r0
   3816c:	smlawbmi	lr, r0, r4, r8
   38170:	andeq	r0, r0, r0
   38174:	rscsmi	r6, r8, r0, lsl #20
   38178:	andeq	r0, r0, r0
   3817c:	sbcmi	r8, r3, r0, lsl #16
   38180:	andeq	r0, r0, r0
   38184:	addmi	r4, pc, r0
   38188:	andeq	r0, r0, r0
   3818c:	subsmi	r0, r9, r0
   38190:			; <UNDEFINED> instruction: 0x064dd592
   38194:	strmi	pc, [r0], #207	; 0xcf

00038198 <flatcc_json_parser_float@@Base>:
   38198:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3819c:	add	fp, sp, #24
   381a0:	vpush	{d8-d9}
   381a4:	sub	sp, sp, #8
   381a8:	mov	r8, r0
   381ac:	mov	r0, #0
   381b0:	mov	r6, r1
   381b4:	cmp	r1, r2
   381b8:	str	r0, [r3]
   381bc:	beq	38294 <flatcc_json_parser_float@@Base+0xfc>
   381c0:	mov	r0, r6
   381c4:	mov	r5, r2
   381c8:	mov	r7, r3
   381cc:	ldrb	r1, [r0], #1
   381d0:	cmp	r1, #45	; 0x2d
   381d4:	movne	r0, r6
   381d8:	sub	r2, r2, r0
   381dc:	cmp	r2, #2
   381e0:	blt	38220 <flatcc_json_parser_float@@Base+0x88>
   381e4:	sub	r1, r1, #45	; 0x2d
   381e8:	clz	r1, r1
   381ec:	lsr	r1, r1, #5
   381f0:	ldrb	r1, [r6, r1]
   381f4:	cmp	r1, #46	; 0x2e
   381f8:	beq	38210 <flatcc_json_parser_float@@Base+0x78>
   381fc:	cmp	r1, #48	; 0x30
   38200:	bne	38220 <flatcc_json_parser_float@@Base+0x88>
   38204:	ldrb	r0, [r0, #1]
   38208:	cmp	r0, #48	; 0x30
   3820c:	bne	38220 <flatcc_json_parser_float@@Base+0x88>
   38210:	ldr	r0, [r8, #24]
   38214:	cmp	r0, #0
   38218:	bne	382c0 <flatcc_json_parser_float@@Base+0x128>
   3821c:	b	382a4 <flatcc_json_parser_float@@Base+0x10c>
   38220:	sub	r1, r5, r6
   38224:	mov	r2, sp
   38228:	mov	r0, r6
   3822c:	bl	378d0 <flatcc_json_parser_double@@Base+0xf8>
   38230:	vldr	d16, [sp]
   38234:	mov	r4, r0
   38238:	add	r0, pc, #148	; 0x94
   3823c:	vcmpe.f64	d16, #0.0
   38240:	vcvt.f32.f64	s16, d16
   38244:	vmrs	APSR_nzcv, fpscr
   38248:	addmi	r0, r0, #4
   3824c:	vldr	s18, [r0]
   38250:	vmov.f32	s0, s16
   38254:	bl	14e60 <__isinff@plt>
   38258:	cmp	r0, #0
   3825c:	vseleq.f32	s0, s16, s18
   38260:	movne	r4, r6
   38264:	cmp	r4, #0
   38268:	cmpne	r4, r6
   3826c:	vstr	s0, [r7]
   38270:	bne	382c4 <flatcc_json_parser_float@@Base+0x12c>
   38274:	bl	14e60 <__isinff@plt>
   38278:	ldr	r1, [r8, #24]
   3827c:	cmp	r0, #0
   38280:	beq	3829c <flatcc_json_parser_float@@Base+0x104>
   38284:	cmp	r1, #0
   38288:	bne	382c0 <flatcc_json_parser_float@@Base+0x128>
   3828c:	mov	r0, #7
   38290:	b	382a8 <flatcc_json_parser_float@@Base+0x110>
   38294:	mov	r4, r6
   38298:	b	382c4 <flatcc_json_parser_float@@Base+0x12c>
   3829c:	cmp	r1, #0
   382a0:	bne	382c0 <flatcc_json_parser_float@@Base+0x128>
   382a4:	mov	r0, #6
   382a8:	str	r6, [r8, #36]	; 0x24
   382ac:	ldr	r1, [r8, #4]
   382b0:	sub	r1, r6, r1
   382b4:	add	r1, r1, #1
   382b8:	str	r1, [r8, #20]
   382bc:	str	r0, [r8, #24]
   382c0:	mov	r4, r5
   382c4:	mov	r0, r4
   382c8:	sub	sp, fp, #40	; 0x28
   382cc:	vpop	{d8-d9}
   382d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   382d4:	svcvc	0x00800000
   382d8:			; <UNDEFINED> instruction: 0xff800000

000382dc <flatcc_json_parser_integer@@Base>:
   382dc:	push	{r4, r5, r6, r7, fp, lr}
   382e0:	add	fp, sp, #16
   382e4:	mov	ip, r1
   382e8:	cmp	r1, r2
   382ec:	beq	383d8 <flatcc_json_parser_integer@@Base+0xfc>
   382f0:	ldrb	r1, [ip]
   382f4:	mov	r4, #0
   382f8:	sub	r1, r1, #45	; 0x2d
   382fc:	clz	r1, r1
   38300:	lsr	r1, r1, #5
   38304:	str	r1, [r3]
   38308:	add	r1, ip, r1
   3830c:	cmp	r1, r2
   38310:	beq	383c4 <flatcc_json_parser_integer@@Base+0xe8>
   38314:	mov	lr, #10
   38318:	mov	r5, #0
   3831c:	ldrb	r6, [r1]
   38320:	sub	r7, r6, #48	; 0x30
   38324:	uxtb	r7, r7
   38328:	cmp	r7, #9
   3832c:	bhi	383e0 <flatcc_json_parser_integer@@Base+0x104>
   38330:	add	r7, r5, r5, lsl #2
   38334:	lsl	r7, r7, #1
   38338:	umlal	r6, r7, r4, lr
   3833c:	subs	r6, r6, #48	; 0x30
   38340:	sbc	r7, r7, #0
   38344:	subs	r4, r6, r4
   38348:	sbcs	r4, r7, r5
   3834c:	bcc	383f0 <flatcc_json_parser_integer@@Base+0x114>
   38350:	add	r1, r1, #1
   38354:	mov	r4, r6
   38358:	mov	r5, r7
   3835c:	cmp	r2, r1
   38360:	bne	3831c <flatcc_json_parser_integer@@Base+0x40>
   38364:	mov	r3, #0
   38368:	mov	r1, r2
   3836c:	mov	r4, r6
   38370:	mov	r5, r7
   38374:	cmp	r1, ip
   38378:	beq	383d8 <flatcc_json_parser_integer@@Base+0xfc>
   3837c:	cmp	r3, #0
   38380:	beq	3840c <flatcc_json_parser_integer@@Base+0x130>
   38384:	ldrb	r3, [r1]
   38388:	cmp	r3, #46	; 0x2e
   3838c:	cmpne	r3, #101	; 0x65
   38390:	bne	38404 <flatcc_json_parser_integer@@Base+0x128>
   38394:	ldr	r3, [r0, #24]
   38398:	cmp	r3, #0
   3839c:	bne	383fc <flatcc_json_parser_integer@@Base+0x120>
   383a0:	str	r1, [r0, #36]	; 0x24
   383a4:	mov	r3, #12
   383a8:	ldr	r7, [r0, #4]
   383ac:	sub	r1, r1, r7
   383b0:	add	r1, r1, #1
   383b4:	str	r1, [r0, #20]
   383b8:	str	r3, [r0, #24]
   383bc:	mov	r0, r2
   383c0:	pop	{r4, r5, r6, r7, fp, pc}
   383c4:	mov	r1, r2
   383c8:	mov	r5, #0
   383cc:	mov	r3, #0
   383d0:	cmp	r1, ip
   383d4:	bne	3837c <flatcc_json_parser_integer@@Base+0xa0>
   383d8:	mov	r0, ip
   383dc:	pop	{r4, r5, r6, r7, fp, pc}
   383e0:	mov	r3, #1
   383e4:	cmp	r1, ip
   383e8:	bne	3837c <flatcc_json_parser_integer@@Base+0xa0>
   383ec:	b	383d8 <flatcc_json_parser_integer@@Base+0xfc>
   383f0:	ldr	r7, [r0, #24]
   383f4:	cmp	r7, #0
   383f8:	beq	38420 <flatcc_json_parser_integer@@Base+0x144>
   383fc:	mov	r0, r2
   38400:	pop	{r4, r5, r6, r7, fp, pc}
   38404:	cmp	r3, #69	; 0x45
   38408:	beq	38394 <flatcc_json_parser_integer@@Base+0xb8>
   3840c:	ldr	r0, [fp, #8]
   38410:	mov	ip, r1
   38414:	strd	r4, [r0]
   38418:	mov	r0, ip
   3841c:	pop	{r4, r5, r6, r7, fp, pc}
   38420:	str	r1, [r0, #36]	; 0x24
   38424:	cmp	r3, #0
   38428:	mov	r7, #8
   3842c:	ldr	r3, [r0, #4]
   38430:	movweq	r7, #7
   38434:	sub	r1, r1, r3
   38438:	add	r1, r1, #1
   3843c:	str	r1, [r0, #20]
   38440:	str	r7, [r0, #24]
   38444:	mov	r0, r2
   38448:	pop	{r4, r5, r6, r7, fp, pc}

0003844c <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   3844c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38450:	add	fp, sp, #28
   38454:	sub	sp, sp, #28
   38458:	ldr	r9, [fp, #8]
   3845c:	mov	r6, r3
   38460:	mov	r4, r2
   38464:	mov	r5, r0
   38468:	cmp	r1, r2
   3846c:	beq	384b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   38470:	ldrb	r0, [r1]
   38474:	cmp	r0, #34	; 0x22
   38478:	bne	384b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   3847c:	add	sl, r1, #1
   38480:	cmp	sl, r4
   38484:	beq	384dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   38488:	mov	r7, sl
   3848c:	ldrb	r1, [r7]
   38490:	cmp	r1, #32
   38494:	bcc	386f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ac>
   38498:	cmp	r1, #34	; 0x22
   3849c:	cmpne	r1, #92	; 0x5c
   384a0:	beq	38550 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x104>
   384a4:	add	r7, r7, #1
   384a8:	cmp	r4, r7
   384ac:	bne	3848c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
   384b0:	b	384dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   384b4:	ldr	r0, [r5, #24]
   384b8:	cmp	r0, #0
   384bc:	bne	384dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   384c0:	str	r1, [r5, #36]	; 0x24
   384c4:	mov	r0, #16
   384c8:	ldr	r2, [r5, #4]
   384cc:	sub	r1, r1, r2
   384d0:	add	r1, r1, #1
   384d4:	str	r1, [r5, #20]
   384d8:	str	r0, [r5, #24]
   384dc:	ldr	r0, [r5, #24]
   384e0:	cmp	r0, #0
   384e4:	mov	r0, r4
   384e8:	bne	3850c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   384ec:	str	r4, [r5, #36]	; 0x24
   384f0:	mov	r0, #20
   384f4:	ldr	r1, [r5, #4]
   384f8:	sub	r1, r4, r1
   384fc:	add	r1, r1, #1
   38500:	str	r1, [r5, #20]
   38504:	str	r0, [r5, #24]
   38508:	mov	r0, r4
   3850c:	mov	r1, #0
   38510:	str	r1, [r6]
   38514:	ldr	r1, [r5, #24]
   38518:	cmp	r1, #0
   3851c:	bne	38544 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   38520:	str	r0, [r5, #36]	; 0x24
   38524:	cmp	r9, #0
   38528:	mov	r1, #31
   3852c:	ldr	r2, [r5, #4]
   38530:	movwne	r1, #32
   38534:	sub	r0, r0, r2
   38538:	add	r0, r0, #1
   3853c:	str	r0, [r5, #20]
   38540:	str	r1, [r5, #24]
   38544:	mov	r0, r4
   38548:	sub	sp, fp, #28
   3854c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38550:	cmp	r4, r7
   38554:	mov	r0, r4
   38558:	beq	3850c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   3855c:	cmp	r1, #34	; 0x22
   38560:	bne	3858c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x140>
   38564:	sub	r1, r7, sl
   38568:	and	r0, r1, #3
   3856c:	str	r1, [sp, #20]
   38570:	lsr	r1, r1, #2
   38574:	add	r8, r1, r1, lsl #1
   38578:	cmp	r0, #2
   3857c:	beq	38594 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x148>
   38580:	cmp	r0, #3
   38584:	addeq	r8, r8, #2
   38588:	b	38598 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   3858c:	mov	r0, r7
   38590:	b	3850c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   38594:	add	r8, r8, #1
   38598:	ldr	r0, [r5]
   3859c:	mov	r1, #1
   385a0:	mov	r2, #1
   385a4:	mvn	r3, #0
   385a8:	bl	30e38 <flatcc_builder_start_vector@@Base>
   385ac:	cmp	r0, #0
   385b0:	beq	385e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x19c>
   385b4:	mov	r0, #0
   385b8:	str	r0, [r6]
   385bc:	ldr	r0, [r5, #24]
   385c0:	cmp	r0, #0
   385c4:	bne	38544 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   385c8:	mov	r0, #33	; 0x21
   385cc:	str	r7, [r5, #36]	; 0x24
   385d0:	ldr	r1, [r5, #4]
   385d4:	sub	r1, r7, r1
   385d8:	add	r1, r1, #1
   385dc:	str	r1, [r5, #20]
   385e0:	str	r0, [r5, #24]
   385e4:	b	38544 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   385e8:	ldr	r0, [r5]
   385ec:	mov	r1, r8
   385f0:	bl	30274 <flatcc_builder_extend_vector@@Base>
   385f4:	cmp	r0, #0
   385f8:	beq	385b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   385fc:	ldr	r2, [pc, #636]	; 38880 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x434>
   38600:	mov	r1, r8
   38604:	ldr	r8, [pc, #632]	; 38884 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x438>
   38608:	str	r0, [sp]
   3860c:	str	r0, [sp, #12]
   38610:	ldr	r0, [sp, #20]
   38614:	cmp	r9, #0
   38618:	add	lr, sp, #24
   3861c:	mov	ip, sl
   38620:	str	r1, [sp, #4]
   38624:	add	r2, pc, r2
   38628:	add	r8, pc, r8
   3862c:	movne	r8, r2
   38630:	cmp	r1, #0
   38634:	mvneq	r1, #0
   38638:	str	r1, [sp, #16]
   3863c:	mov	r1, #0
   38640:	str	r0, [sp, #8]
   38644:	cmp	r0, r1
   38648:	bne	38664 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   3864c:	b	3871c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d0>
   38650:	add	r1, r1, #1
   38654:	cmp	r1, #4
   38658:	bcs	38690 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x244>
   3865c:	cmp	r0, r1
   38660:	beq	3871c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d0>
   38664:	ldrb	r2, [ip, r1]
   38668:	ldrb	r3, [r8, r2]
   3866c:	cmp	r3, #64	; 0x40
   38670:	strb	r3, [lr, r1]
   38674:	bcc	38650 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x204>
   38678:	cmp	r3, #65	; 0x41
   3867c:	bne	38768 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x31c>
   38680:	sub	r1, r1, #1
   38684:	sub	r0, r0, #1
   38688:	add	ip, ip, #1
   3868c:	b	38650 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x204>
   38690:	ldr	lr, [sp, #16]
   38694:	cmp	lr, #3
   38698:	bcc	387fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   3869c:	ldrb	r2, [sp, #25]
   386a0:	ldrb	r1, [sp, #24]
   386a4:	subs	lr, lr, #3
   386a8:	sub	r0, r0, #4
   386ac:	add	ip, ip, #4
   386b0:	str	lr, [sp, #16]
   386b4:	add	lr, sp, #24
   386b8:	lsr	r3, r2, #4
   386bc:	orr	r1, r3, r1, lsl #2
   386c0:	ldr	r3, [sp, #12]
   386c4:	strb	r1, [r3]
   386c8:	ldrb	r1, [sp, #26]
   386cc:	lsr	r1, r1, #2
   386d0:	orr	r1, r1, r2, lsl #4
   386d4:	strb	r1, [r3, #1]
   386d8:	ldrb	r1, [sp, #26]
   386dc:	ldrb	r2, [sp, #27]
   386e0:	orr	r1, r2, r1, lsl #6
   386e4:	strb	r1, [r3, #2]
   386e8:	add	r3, r3, #3
   386ec:	str	r3, [sp, #12]
   386f0:	bne	3863c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   386f4:	b	387e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x39c>
   386f8:	ldr	r0, [r5, #24]
   386fc:	cmp	r0, #0
   38700:	mov	r0, r4
   38704:	bne	3850c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   38708:	str	r7, [r5, #36]	; 0x24
   3870c:	mov	r0, #17
   38710:	ldr	r1, [r5, #4]
   38714:	sub	r1, r7, r1
   38718:	b	384fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0xb0>
   3871c:	mov	r1, r0
   38720:	mov	r3, r0
   38724:	ldr	r2, [sp, #16]
   38728:	sub	r0, r0, r3
   3872c:	cmp	r1, #0
   38730:	beq	387e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x39c>
   38734:	cmp	r1, #3
   38738:	beq	387a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35c>
   3873c:	cmp	r1, #2
   38740:	bne	387fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   38744:	ldrb	r1, [sp, #25]
   38748:	tst	r1, #15
   3874c:	bne	387fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   38750:	ldrb	r2, [sp, #24]
   38754:	lsl	r2, r2, #2
   38758:	orr	r1, r2, r1, lsr #4
   3875c:	ldr	r2, [sp, #12]
   38760:	strb	r1, [r2], #1
   38764:	b	387e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x398>
   38768:	cmp	r3, #66	; 0x42
   3876c:	bne	38864 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x418>
   38770:	add	r2, r1, #1
   38774:	mov	r3, r2
   38778:	cmp	r2, r0
   3877c:	bcs	38724 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   38780:	cmp	r3, #7
   38784:	bhi	38724 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   38788:	ldrb	r2, [ip, r3]
   3878c:	ldrb	r2, [r8, r2]
   38790:	sub	r2, r2, #65	; 0x41
   38794:	uxtb	lr, r2
   38798:	add	r2, r3, #1
   3879c:	cmp	lr, #2
   387a0:	bcc	38774 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x328>
   387a4:	b	38724 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   387a8:	cmp	r2, #2
   387ac:	bcc	387fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   387b0:	ldrb	r1, [sp, #26]
   387b4:	ands	r2, r1, #3
   387b8:	bne	387fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   387bc:	ldrb	r3, [sp, #25]
   387c0:	ldrb	ip, [sp, #24]
   387c4:	lsl	r2, r3, #4
   387c8:	orr	r1, r2, r1, lsr #2
   387cc:	ldr	r2, [sp, #12]
   387d0:	strb	r1, [r2, #1]
   387d4:	lsr	r1, r3, #4
   387d8:	orr	r1, r1, ip, lsl #2
   387dc:	strb	r1, [r2]
   387e0:	add	r2, r2, #2
   387e4:	str	r2, [sp, #12]
   387e8:	cmp	r0, #0
   387ec:	beq	38810 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   387f0:	mov	r1, r0
   387f4:	ldr	r0, [sp, #20]
   387f8:	b	38804 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b8>
   387fc:	ldr	r0, [sp, #20]
   38800:	ldr	r1, [sp, #8]
   38804:	sub	r0, r0, r1
   38808:	add	r0, sl, r0
   3880c:	b	3850c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   38810:	ldr	r0, [sp]
   38814:	ldr	r1, [sp, #12]
   38818:	sub	r0, r1, r0
   3881c:	ldr	r1, [sp, #4]
   38820:	cmp	r1, r0
   38824:	bls	3883c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f0>
   38828:	sub	r1, r1, r0
   3882c:	ldr	r0, [r5]
   38830:	bl	30c24 <flatcc_builder_truncate_vector@@Base>
   38834:	cmp	r0, #0
   38838:	bne	385b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   3883c:	ldr	r0, [r5]
   38840:	bl	320b0 <flatcc_builder_end_vector@@Base>
   38844:	cmp	r0, #0
   38848:	str	r0, [r6]
   3884c:	beq	385b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   38850:	ldrb	r0, [r7]
   38854:	cmp	r0, #34	; 0x22
   38858:	bne	3886c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x420>
   3885c:	add	r4, r7, #1
   38860:	b	38544 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   38864:	mov	r3, r1
   38868:	b	38724 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   3886c:	ldr	r0, [r5, #24]
   38870:	cmp	r0, #0
   38874:	bne	38544 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   38878:	mov	r0, #20
   3887c:	b	385cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x180>
   38880:	ldrdeq	r4, [r1], -ip
   38884:	ldrdeq	r4, [r1], -r8

00038888 <flatcc_json_parser_build_string@@Base>:
   38888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3888c:	add	fp, sp, #28
   38890:	sub	sp, sp, #4
   38894:	mov	sl, r3
   38898:	mov	r4, r2
   3889c:	mov	r5, r0
   388a0:	cmp	r1, r2
   388a4:	beq	388f4 <flatcc_json_parser_build_string@@Base+0x6c>
   388a8:	ldrb	r0, [r1]
   388ac:	cmp	r0, #34	; 0x22
   388b0:	bne	388f4 <flatcc_json_parser_build_string@@Base+0x6c>
   388b4:	add	r1, r1, #1
   388b8:	mov	r6, r4
   388bc:	cmp	r1, r4
   388c0:	beq	38924 <flatcc_json_parser_build_string@@Base+0x9c>
   388c4:	mov	r6, r1
   388c8:	ldrb	r0, [r6]
   388cc:	cmp	r0, #32
   388d0:	bcc	38b20 <flatcc_json_parser_build_string@@Base+0x298>
   388d4:	cmp	r0, #34	; 0x22
   388d8:	cmpne	r0, #92	; 0x5c
   388dc:	beq	38a40 <flatcc_json_parser_build_string@@Base+0x1b8>
   388e0:	add	r6, r6, #1
   388e4:	cmp	r4, r6
   388e8:	bne	388c8 <flatcc_json_parser_build_string@@Base+0x40>
   388ec:	mov	r6, r1
   388f0:	b	38924 <flatcc_json_parser_build_string@@Base+0x9c>
   388f4:	ldr	r0, [r5, #24]
   388f8:	mov	r6, r4
   388fc:	cmp	r0, #0
   38900:	bne	38924 <flatcc_json_parser_build_string@@Base+0x9c>
   38904:	str	r1, [r5, #36]	; 0x24
   38908:	mov	r0, #16
   3890c:	mov	r6, r4
   38910:	ldr	r2, [r5, #4]
   38914:	sub	r1, r1, r2
   38918:	add	r1, r1, #1
   3891c:	str	r1, [r5, #20]
   38920:	str	r0, [r5, #24]
   38924:	ldr	r0, [r5, #24]
   38928:	cmp	r0, #0
   3892c:	bne	3894c <flatcc_json_parser_build_string@@Base+0xc4>
   38930:	str	r4, [r5, #36]	; 0x24
   38934:	mov	r0, #20
   38938:	ldr	r1, [r5, #4]
   3893c:	sub	r1, r4, r1
   38940:	add	r1, r1, #1
   38944:	str	r1, [r5, #20]
   38948:	str	r0, [r5, #24]
   3894c:	mov	r7, r4
   38950:	ldr	r0, [r5]
   38954:	bl	31190 <flatcc_builder_start_string@@Base>
   38958:	cmp	r0, #0
   3895c:	beq	38978 <flatcc_json_parser_build_string@@Base+0xf0>
   38960:	mov	r4, r7
   38964:	mov	r0, #0
   38968:	str	r0, [sl]
   3896c:	mov	r0, r4
   38970:	sub	sp, fp, #28
   38974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38978:	ldr	r0, [r5]
   3897c:	sub	r2, r7, r6
   38980:	mov	r1, r6
   38984:	bl	30a78 <flatcc_builder_append_string@@Base>
   38988:	cmp	r0, #0
   3898c:	beq	38960 <flatcc_json_parser_build_string@@Base+0xd8>
   38990:	cmp	r7, r4
   38994:	mov	r6, r4
   38998:	beq	38ac4 <flatcc_json_parser_build_string@@Base+0x23c>
   3899c:	mov	r8, sp
   389a0:	add	r9, r8, #1
   389a4:	ldrb	r0, [r7]
   389a8:	cmp	r0, #34	; 0x22
   389ac:	beq	38ac0 <flatcc_json_parser_build_string@@Base+0x238>
   389b0:	mov	r0, r5
   389b4:	mov	r1, r7
   389b8:	mov	r2, r4
   389bc:	mov	r3, r8
   389c0:	bl	3616c <flatcc_json_parser_string_escape@@Base>
   389c4:	mov	r6, r0
   389c8:	ldr	r0, [r5]
   389cc:	ldrb	r2, [sp]
   389d0:	mov	r1, r9
   389d4:	bl	30a78 <flatcc_builder_append_string@@Base>
   389d8:	cmp	r0, #0
   389dc:	beq	38b18 <flatcc_json_parser_build_string@@Base+0x290>
   389e0:	cmp	r6, r4
   389e4:	beq	38a68 <flatcc_json_parser_build_string@@Base+0x1e0>
   389e8:	mov	r7, r6
   389ec:	ldrb	r0, [r7]
   389f0:	cmp	r0, #32
   389f4:	bcc	38a8c <flatcc_json_parser_build_string@@Base+0x204>
   389f8:	cmp	r0, #34	; 0x22
   389fc:	cmpne	r0, #92	; 0x5c
   38a00:	beq	38a14 <flatcc_json_parser_build_string@@Base+0x18c>
   38a04:	add	r7, r7, #1
   38a08:	cmp	r4, r7
   38a0c:	bne	389ec <flatcc_json_parser_build_string@@Base+0x164>
   38a10:	b	38a68 <flatcc_json_parser_build_string@@Base+0x1e0>
   38a14:	cmp	r4, r7
   38a18:	beq	38ab8 <flatcc_json_parser_build_string@@Base+0x230>
   38a1c:	ldr	r0, [r5]
   38a20:	sub	r2, r7, r6
   38a24:	mov	r1, r6
   38a28:	bl	30a78 <flatcc_builder_append_string@@Base>
   38a2c:	cmp	r0, #0
   38a30:	beq	38960 <flatcc_json_parser_build_string@@Base+0xd8>
   38a34:	cmp	r4, r7
   38a38:	bne	389a4 <flatcc_json_parser_build_string@@Base+0x11c>
   38a3c:	b	38ab8 <flatcc_json_parser_build_string@@Base+0x230>
   38a40:	cmp	r4, r6
   38a44:	beq	38b2c <flatcc_json_parser_build_string@@Base+0x2a4>
   38a48:	cmp	r0, #34	; 0x22
   38a4c:	bne	38a60 <flatcc_json_parser_build_string@@Base+0x1d8>
   38a50:	ldr	r0, [r5]
   38a54:	sub	r2, r6, r1
   38a58:	bl	33564 <flatcc_builder_create_string@@Base>
   38a5c:	b	38acc <flatcc_json_parser_build_string@@Base+0x244>
   38a60:	mov	r7, r6
   38a64:	b	38b30 <flatcc_json_parser_build_string@@Base+0x2a8>
   38a68:	ldr	r0, [r5, #24]
   38a6c:	mov	r6, r4
   38a70:	cmp	r0, #0
   38a74:	bne	38ac4 <flatcc_json_parser_build_string@@Base+0x23c>
   38a78:	str	r4, [r5, #36]	; 0x24
   38a7c:	mov	r0, #20
   38a80:	ldr	r1, [r5, #4]
   38a84:	sub	r1, r4, r1
   38a88:	b	38aac <flatcc_json_parser_build_string@@Base+0x224>
   38a8c:	ldr	r0, [r5, #24]
   38a90:	mov	r6, r4
   38a94:	cmp	r0, #0
   38a98:	bne	38ac4 <flatcc_json_parser_build_string@@Base+0x23c>
   38a9c:	str	r7, [r5, #36]	; 0x24
   38aa0:	mov	r0, #17
   38aa4:	ldr	r1, [r5, #4]
   38aa8:	sub	r1, r7, r1
   38aac:	add	r1, r1, #1
   38ab0:	str	r1, [r5, #20]
   38ab4:	str	r0, [r5, #24]
   38ab8:	mov	r6, r4
   38abc:	b	38ac4 <flatcc_json_parser_build_string@@Base+0x23c>
   38ac0:	mov	r6, r7
   38ac4:	ldr	r0, [r5]
   38ac8:	bl	336e8 <flatcc_builder_end_string@@Base>
   38acc:	cmp	r6, r4
   38ad0:	str	r0, [sl]
   38ad4:	beq	38aec <flatcc_json_parser_build_string@@Base+0x264>
   38ad8:	ldrb	r0, [r6]
   38adc:	cmp	r0, #34	; 0x22
   38ae0:	bne	38aec <flatcc_json_parser_build_string@@Base+0x264>
   38ae4:	add	r4, r6, #1
   38ae8:	b	3896c <flatcc_json_parser_build_string@@Base+0xe4>
   38aec:	ldr	r0, [r5, #24]
   38af0:	cmp	r0, #0
   38af4:	bne	3896c <flatcc_json_parser_build_string@@Base+0xe4>
   38af8:	str	r6, [r5, #36]	; 0x24
   38afc:	mov	r0, #20
   38b00:	ldr	r1, [r5, #4]
   38b04:	sub	r1, r6, r1
   38b08:	add	r1, r1, #1
   38b0c:	str	r1, [r5, #20]
   38b10:	str	r0, [r5, #24]
   38b14:	b	3896c <flatcc_json_parser_build_string@@Base+0xe4>
   38b18:	mov	r4, r6
   38b1c:	b	38964 <flatcc_json_parser_build_string@@Base+0xdc>
   38b20:	ldr	r0, [r5, #24]
   38b24:	cmp	r0, #0
   38b28:	beq	38b38 <flatcc_json_parser_build_string@@Base+0x2b0>
   38b2c:	mov	r7, r4
   38b30:	mov	r6, r1
   38b34:	b	38950 <flatcc_json_parser_build_string@@Base+0xc8>
   38b38:	str	r6, [r5, #36]	; 0x24
   38b3c:	mov	r0, #17
   38b40:	mov	r7, r4
   38b44:	ldr	r2, [r5, #4]
   38b48:	sub	r2, r6, r2
   38b4c:	add	r2, r2, #1
   38b50:	str	r2, [r5, #20]
   38b54:	str	r0, [r5, #24]
   38b58:	b	38b30 <flatcc_json_parser_build_string@@Base+0x2a8>

00038b5c <flatcc_json_parser_prepare_unions@@Base>:
   38b5c:	push	{r4, r5, r6, r7, fp, lr}
   38b60:	add	fp, sp, #16
   38b64:	mov	r6, r0
   38b68:	add	r0, r3, r3, lsl #1
   38b6c:	mov	r5, r1
   38b70:	mov	r1, #8
   38b74:	mov	r7, r3
   38b78:	mov	r4, r2
   38b7c:	add	r1, r1, r0, lsl #3
   38b80:	ldr	r0, [r6]
   38b84:	bl	2f53c <flatcc_builder_enter_user_frame@@Base>
   38b88:	mov	r1, r0
   38b8c:	ldr	r0, [fp, #8]
   38b90:	cmp	r1, #0
   38b94:	str	r1, [r0]
   38b98:	beq	38bb4 <flatcc_json_parser_prepare_unions@@Base+0x58>
   38b9c:	ldr	r0, [r6]
   38ba0:	bl	2f700 <flatcc_builder_get_user_frame_ptr@@Base>
   38ba4:	mov	r4, r5
   38ba8:	str	r7, [r0]
   38bac:	mov	r0, r4
   38bb0:	pop	{r4, r5, r6, r7, fp, pc}
   38bb4:	ldr	r0, [r6, #24]
   38bb8:	cmp	r0, #0
   38bbc:	beq	38bc8 <flatcc_json_parser_prepare_unions@@Base+0x6c>
   38bc0:	mov	r0, r4
   38bc4:	pop	{r4, r5, r6, r7, fp, pc}
   38bc8:	str	r5, [r6, #36]	; 0x24
   38bcc:	mov	r0, #33	; 0x21
   38bd0:	ldr	r1, [r6, #4]
   38bd4:	sub	r1, r5, r1
   38bd8:	add	r1, r1, #1
   38bdc:	str	r1, [r6, #20]
   38be0:	str	r0, [r6, #24]
   38be4:	mov	r0, r4
   38be8:	pop	{r4, r5, r6, r7, fp, pc}

00038bec <flatcc_json_parser_finalize_unions@@Base>:
   38bec:	push	{r4, r5, r6, r7, fp, lr}
   38bf0:	add	fp, sp, #16
   38bf4:	mov	r6, r0
   38bf8:	ldr	r0, [r0]
   38bfc:	mov	r7, r1
   38c00:	mov	r1, r3
   38c04:	mov	r5, r3
   38c08:	mov	r4, r2
   38c0c:	bl	2f700 <flatcc_builder_get_user_frame_ptr@@Base>
   38c10:	ldr	r0, [r0, #4]
   38c14:	cmp	r0, #0
   38c18:	beq	38c48 <flatcc_json_parser_finalize_unions@@Base+0x5c>
   38c1c:	ldr	r0, [r6, #24]
   38c20:	cmp	r0, #0
   38c24:	bne	38c4c <flatcc_json_parser_finalize_unions@@Base+0x60>
   38c28:	str	r7, [r6, #36]	; 0x24
   38c2c:	mov	r0, #27
   38c30:	ldr	r1, [r6, #4]
   38c34:	sub	r1, r7, r1
   38c38:	add	r1, r1, #1
   38c3c:	str	r1, [r6, #20]
   38c40:	str	r0, [r6, #24]
   38c44:	b	38c4c <flatcc_json_parser_finalize_unions@@Base+0x60>
   38c48:	mov	r4, r7
   38c4c:	ldr	r0, [r6]
   38c50:	mov	r1, r5
   38c54:	bl	2f664 <flatcc_builder_exit_user_frame_at@@Base>
   38c58:	mov	r0, r4
   38c5c:	pop	{r4, r5, r6, r7, fp, pc}

00038c60 <flatcc_json_parser_union@@Base>:
   38c60:	push	{r4, r5, r6, r7, fp, lr}
   38c64:	add	fp, sp, #16
   38c68:	sub	sp, sp, #16
   38c6c:	mov	r6, r1
   38c70:	mov	r5, r0
   38c74:	ldr	r0, [r0]
   38c78:	ldr	r1, [fp, #12]
   38c7c:	mov	r7, r3
   38c80:	mov	r4, r2
   38c84:	bl	2f700 <flatcc_builder_get_user_frame_ptr@@Base>
   38c88:	add	r2, r0, #8
   38c8c:	add	r3, r7, r7, lsl #1
   38c90:	mov	r1, r2
   38c94:	ldr	r7, [r1, r3, lsl #3]!
   38c98:	cmp	r7, #0
   38c9c:	beq	38ccc <flatcc_json_parser_union@@Base+0x6c>
   38ca0:	ldr	r0, [r5, #24]
   38ca4:	cmp	r0, #0
   38ca8:	bne	38d8c <flatcc_json_parser_union@@Base+0x12c>
   38cac:	mov	r0, #28
   38cb0:	str	r6, [r5, #36]	; 0x24
   38cb4:	ldr	r1, [r5, #4]
   38cb8:	sub	r1, r6, r1
   38cbc:	add	r1, r1, #1
   38cc0:	str	r1, [r5, #20]
   38cc4:	str	r0, [r5, #24]
   38cc8:	b	38d8c <flatcc_json_parser_union@@Base+0x12c>
   38ccc:	add	r2, r2, r3, lsl #3
   38cd0:	ldrb	r3, [r2, #12]
   38cd4:	cmp	r3, #0
   38cd8:	beq	38d48 <flatcc_json_parser_union@@Base+0xe8>
   38cdc:	ldrb	r3, [r2, #13]
   38ce0:	cmp	r3, #0
   38ce4:	strb	r3, [sp, #8]
   38ce8:	beq	38d80 <flatcc_json_parser_union@@Base+0x120>
   38cec:	ldr	r1, [r0, #4]
   38cf0:	ldr	r7, [fp, #16]
   38cf4:	mov	r2, r4
   38cf8:	sub	r1, r1, #1
   38cfc:	str	r1, [r0, #4]
   38d00:	add	r0, sp, #8
   38d04:	mov	r1, r6
   38d08:	add	r0, r0, #4
   38d0c:	str	r0, [sp]
   38d10:	mov	r0, r5
   38d14:	blx	r7
   38d18:	cmp	r0, r4
   38d1c:	beq	38d8c <flatcc_json_parser_union@@Base+0x12c>
   38d20:	mov	r6, r0
   38d24:	ldr	r1, [fp, #8]
   38d28:	ldr	r0, [r5]
   38d2c:	ldr	r2, [sp, #8]
   38d30:	ldr	r3, [sp, #12]
   38d34:	bl	32500 <flatcc_builder_table_add_union@@Base>
   38d38:	cmp	r0, #0
   38d3c:	bne	38ca0 <flatcc_json_parser_union@@Base+0x40>
   38d40:	mov	r4, r6
   38d44:	b	38d8c <flatcc_json_parser_union@@Base+0x12c>
   38d48:	ldr	r3, [r0, #4]
   38d4c:	add	r3, r3, #1
   38d50:	str	r3, [r0, #4]
   38d54:	ldr	r0, [r5, #16]
   38d58:	str	r0, [r2, #8]
   38d5c:	ldr	r0, [r5, #4]
   38d60:	str	r0, [r2, #4]
   38d64:	str	r6, [r1]
   38d68:	mov	r0, r5
   38d6c:	mov	r1, r6
   38d70:	mov	r2, r4
   38d74:	bl	36a8c <flatcc_json_parser_generic_json@@Base>
   38d78:	mov	r4, r0
   38d7c:	b	38d8c <flatcc_json_parser_union@@Base+0x12c>
   38d80:	ldr	r0, [r5, #24]
   38d84:	cmp	r0, #0
   38d88:	beq	38d98 <flatcc_json_parser_union@@Base+0x138>
   38d8c:	mov	r0, r4
   38d90:	sub	sp, fp, #16
   38d94:	pop	{r4, r5, r6, r7, fp, pc}
   38d98:	mov	r0, #25
   38d9c:	b	38cb0 <flatcc_json_parser_union@@Base+0x50>

00038da0 <flatcc_json_parser_union_type@@Base>:
   38da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38da4:	add	fp, sp, #28
   38da8:	sub	sp, sp, #20
   38dac:	mov	r8, r1
   38db0:	mov	r5, r0
   38db4:	ldr	r0, [r0]
   38db8:	ldr	r1, [fp, #12]
   38dbc:	mov	r6, r3
   38dc0:	mov	r4, r2
   38dc4:	bl	2f700 <flatcc_builder_get_user_frame_ptr@@Base>
   38dc8:	add	r3, r6, r6, lsl #1
   38dcc:	add	r2, r0, #8
   38dd0:	mov	r9, r0
   38dd4:	add	sl, r2, r3, lsl #3
   38dd8:	mov	r0, sl
   38ddc:	ldrb	r1, [r0, #12]!
   38de0:	cmp	r1, #0
   38de4:	beq	38e14 <flatcc_json_parser_union_type@@Base+0x74>
   38de8:	ldr	r0, [r5, #24]
   38dec:	cmp	r0, #0
   38df0:	bne	390f0 <flatcc_json_parser_union_type@@Base+0x350>
   38df4:	str	r8, [r5, #36]	; 0x24
   38df8:	mov	r0, #28
   38dfc:	ldr	r1, [r5, #4]
   38e00:	sub	r1, r8, r1
   38e04:	add	r1, r1, #1
   38e08:	str	r1, [r5, #20]
   38e0c:	str	r0, [r5, #24]
   38e10:	b	390f0 <flatcc_json_parser_union_type@@Base+0x350>
   38e14:	mov	r1, #1
   38e18:	mov	r6, #0
   38e1c:	mov	lr, sl
   38e20:	cmp	r8, r4
   38e24:	str	r3, [sp, #4]
   38e28:	str	r2, [sp, #8]
   38e2c:	strb	r1, [r0]
   38e30:	strb	r6, [lr, #13]!
   38e34:	beq	38ff4 <flatcc_json_parser_union_type@@Base+0x254>
   38e38:	mov	r2, r8
   38e3c:	ldrb	ip, [r2], #1
   38e40:	cmp	ip, #45	; 0x2d
   38e44:	movne	r2, r8
   38e48:	cmp	r2, r4
   38e4c:	beq	38efc <flatcc_json_parser_union_type@@Base+0x15c>
   38e50:	mov	r6, #0
   38e54:	mov	r0, #10
   38e58:	mov	r7, #0
   38e5c:	ldrb	r1, [r2]
   38e60:	sub	r3, r1, #48	; 0x30
   38e64:	uxtb	r3, r3
   38e68:	cmp	r3, #9
   38e6c:	bhi	38f88 <flatcc_json_parser_union_type@@Base+0x1e8>
   38e70:	add	r3, r7, r7, lsl #2
   38e74:	lsl	r3, r3, #1
   38e78:	umlal	r1, r3, r6, r0
   38e7c:	subs	r1, r1, #48	; 0x30
   38e80:	sbc	r3, r3, #0
   38e84:	subs	r6, r1, r6
   38e88:	sbcs	r7, r3, r7
   38e8c:	bcc	38f98 <flatcc_json_parser_union_type@@Base+0x1f8>
   38e90:	add	r2, r2, #1
   38e94:	mov	r6, r1
   38e98:	mov	r7, r3
   38e9c:	cmp	r4, r2
   38ea0:	bne	38e5c <flatcc_json_parser_union_type@@Base+0xbc>
   38ea4:	mov	r0, #0
   38ea8:	mov	r2, r4
   38eac:	mov	r6, r1
   38eb0:	mov	r7, r3
   38eb4:	cmp	r2, r8
   38eb8:	beq	38ff4 <flatcc_json_parser_union_type@@Base+0x254>
   38ebc:	cmp	r0, #0
   38ec0:	beq	38f14 <flatcc_json_parser_union_type@@Base+0x174>
   38ec4:	ldrb	r0, [r2]
   38ec8:	cmp	r0, #46	; 0x2e
   38ecc:	beq	38edc <flatcc_json_parser_union_type@@Base+0x13c>
   38ed0:	cmp	r0, #101	; 0x65
   38ed4:	cmpne	r0, #69	; 0x45
   38ed8:	bne	38f14 <flatcc_json_parser_union_type@@Base+0x174>
   38edc:	ldr	r0, [r5, #24]
   38ee0:	mov	r6, #0
   38ee4:	mov	r7, #0
   38ee8:	cmp	r0, #0
   38eec:	mov	r0, r4
   38ef0:	bne	38fd8 <flatcc_json_parser_union_type@@Base+0x238>
   38ef4:	mov	r0, #12
   38ef8:	b	38fb4 <flatcc_json_parser_union_type@@Base+0x214>
   38efc:	mov	r2, r4
   38f00:	mov	r7, #0
   38f04:	mov	r0, #0
   38f08:	cmp	r2, r8
   38f0c:	bne	38ebc <flatcc_json_parser_union_type@@Base+0x11c>
   38f10:	b	38ff4 <flatcc_json_parser_union_type@@Base+0x254>
   38f14:	mov	r0, r2
   38f18:	cmp	r0, r8
   38f1c:	beq	38ff4 <flatcc_json_parser_union_type@@Base+0x254>
   38f20:	cmp	ip, #45	; 0x2d
   38f24:	bne	38f40 <flatcc_json_parser_union_type@@Base+0x1a0>
   38f28:	ldr	r1, [r5, #24]
   38f2c:	mov	r2, r4
   38f30:	cmp	r1, #0
   38f34:	bne	38fec <flatcc_json_parser_union_type@@Base+0x24c>
   38f38:	mov	r1, #8
   38f3c:	b	38f60 <flatcc_json_parser_union_type@@Base+0x1c0>
   38f40:	subs	r1, r6, #256	; 0x100
   38f44:	sbcs	r1, r7, #0
   38f48:	bcc	38fe4 <flatcc_json_parser_union_type@@Base+0x244>
   38f4c:	ldr	r1, [r5, #24]
   38f50:	mov	r2, r4
   38f54:	cmp	r1, #0
   38f58:	bne	38fec <flatcc_json_parser_union_type@@Base+0x24c>
   38f5c:	mov	r1, #7
   38f60:	str	r0, [r5, #36]	; 0x24
   38f64:	ldr	r2, [r5, #4]
   38f68:	sub	r0, r0, r2
   38f6c:	mov	r2, r4
   38f70:	add	r0, r0, #1
   38f74:	str	r0, [r5, #20]
   38f78:	str	r1, [r5, #24]
   38f7c:	cmp	r2, r8
   38f80:	bne	39018 <flatcc_json_parser_union_type@@Base+0x278>
   38f84:	b	38ff4 <flatcc_json_parser_union_type@@Base+0x254>
   38f88:	mov	r0, #1
   38f8c:	cmp	r2, r8
   38f90:	bne	38ebc <flatcc_json_parser_union_type@@Base+0x11c>
   38f94:	b	38ff4 <flatcc_json_parser_union_type@@Base+0x254>
   38f98:	ldr	r0, [r5, #24]
   38f9c:	mov	r6, #0
   38fa0:	mov	r7, #0
   38fa4:	cmp	r0, #0
   38fa8:	mov	r0, r4
   38fac:	bne	38fd8 <flatcc_json_parser_union_type@@Base+0x238>
   38fb0:	mov	r0, #8
   38fb4:	str	r2, [r5, #36]	; 0x24
   38fb8:	mov	r6, #0
   38fbc:	mov	r7, #0
   38fc0:	ldr	r1, [r5, #4]
   38fc4:	sub	r1, r2, r1
   38fc8:	add	r1, r1, #1
   38fcc:	str	r1, [r5, #20]
   38fd0:	str	r0, [r5, #24]
   38fd4:	mov	r0, r4
   38fd8:	cmp	r0, r8
   38fdc:	bne	38f20 <flatcc_json_parser_union_type@@Base+0x180>
   38fe0:	b	38ff4 <flatcc_json_parser_union_type@@Base+0x254>
   38fe4:	mov	r2, r0
   38fe8:	strb	r6, [lr]
   38fec:	cmp	r2, r8
   38ff0:	bne	39018 <flatcc_json_parser_union_type@@Base+0x278>
   38ff4:	ldr	r3, [fp, #16]
   38ff8:	mov	r0, r5
   38ffc:	mov	r1, r8
   39000:	mov	r2, r4
   39004:	str	lr, [sp]
   39008:	mov	r6, lr
   3900c:	bl	39128 <flatcc_json_parser_union_type@@Base+0x388>
   39010:	mov	lr, r6
   39014:	mov	r2, r0
   39018:	ldr	r0, [sp, #8]
   3901c:	ldr	r1, [sp, #4]
   39020:	ldr	r1, [r0, r1, lsl #3]
   39024:	cmp	r1, #0
   39028:	beq	390c8 <flatcc_json_parser_union_type@@Base+0x328>
   3902c:	ldr	r0, [r9, #4]
   39030:	str	r2, [sp, #8]
   39034:	cmp	r0, #0
   39038:	beq	390fc <flatcc_json_parser_union_type@@Base+0x35c>
   3903c:	sub	r0, r0, #1
   39040:	ldr	r6, [fp, #20]
   39044:	mov	r2, r4
   39048:	str	r0, [r9, #4]
   3904c:	ldr	r0, [sl, #8]
   39050:	ldr	r8, [r5, #4]
   39054:	ldr	r7, [r5, #16]
   39058:	str	r0, [r5, #16]
   3905c:	ldr	r0, [sl, #4]
   39060:	str	r0, [r5, #4]
   39064:	add	r0, sp, #12
   39068:	ldrb	r3, [lr]
   3906c:	add	r0, r0, #4
   39070:	str	r0, [sp]
   39074:	mov	r0, r5
   39078:	strb	r3, [sp, #12]
   3907c:	blx	r6
   39080:	cmp	r0, r4
   39084:	beq	390f0 <flatcc_json_parser_union_type@@Base+0x350>
   39088:	ldr	r1, [fp, #8]
   3908c:	ldr	r0, [r5]
   39090:	ldr	r2, [sp, #12]
   39094:	ldr	r3, [sp, #16]
   39098:	bl	32500 <flatcc_builder_table_add_union@@Base>
   3909c:	cmp	r0, #0
   390a0:	beq	390e4 <flatcc_json_parser_union_type@@Base+0x344>
   390a4:	ldr	r0, [r5, #24]
   390a8:	cmp	r0, #0
   390ac:	bne	390f0 <flatcc_json_parser_union_type@@Base+0x350>
   390b0:	ldr	r2, [sp, #8]
   390b4:	mov	r0, #28
   390b8:	str	r2, [r5, #36]	; 0x24
   390bc:	ldr	r1, [r5, #4]
   390c0:	sub	r1, r2, r1
   390c4:	b	38e04 <flatcc_json_parser_union_type@@Base+0x64>
   390c8:	ldrb	r0, [lr]
   390cc:	ldr	r1, [r9, #4]
   390d0:	mov	r4, r2
   390d4:	cmp	r0, #0
   390d8:	addne	r1, r1, #1
   390dc:	str	r1, [r9, #4]
   390e0:	b	390f0 <flatcc_json_parser_union_type@@Base+0x350>
   390e4:	ldr	r4, [sp, #8]
   390e8:	str	r8, [r5, #4]
   390ec:	str	r7, [r5, #16]
   390f0:	mov	r0, r4
   390f4:	sub	sp, fp, #28
   390f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   390fc:	ldr	r0, [pc, #24]	; 3911c <flatcc_json_parser_union_type@@Base+0x37c>
   39100:	ldr	r1, [pc, #24]	; 39120 <flatcc_json_parser_union_type@@Base+0x380>
   39104:	ldr	r3, [pc, #24]	; 39124 <flatcc_json_parser_union_type@@Base+0x384>
   39108:	movw	r2, #965	; 0x3c5
   3910c:	add	r0, pc, r0
   39110:	add	r1, pc, r1
   39114:	add	r3, pc, r3
   39118:	bl	14f38 <__assert_fail@plt>
   3911c:	andeq	r4, r1, r3, lsl r7
   39120:	andeq	r4, r1, lr, lsl r7
   39124:	andeq	r4, r1, fp, ror r7
   39128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3912c:	add	fp, sp, #28
   39130:	sub	sp, sp, #36	; 0x24
   39134:	mov	r4, r2
   39138:	mov	r2, r1
   3913c:	ldr	r1, [fp, #8]
   39140:	mov	r5, r0
   39144:	mov	r0, #0
   39148:	mov	r6, r3
   3914c:	cmp	r2, r4
   39150:	strb	r0, [r1]
   39154:	beq	391b8 <flatcc_json_parser_union_type@@Base+0x418>
   39158:	ldrb	r0, [r2]
   3915c:	cmp	r0, #46	; 0x2e
   39160:	beq	3917c <flatcc_json_parser_union_type@@Base+0x3dc>
   39164:	cmp	r0, #34	; 0x22
   39168:	bne	391b0 <flatcc_json_parser_union_type@@Base+0x410>
   3916c:	mov	r0, #0
   39170:	add	r1, r2, #1
   39174:	str	r0, [r5, #12]
   39178:	b	391bc <flatcc_json_parser_union_type@@Base+0x41c>
   3917c:	ldr	r0, [r5, #24]
   39180:	mov	r1, r4
   39184:	cmp	r0, #0
   39188:	bne	391bc <flatcc_json_parser_union_type@@Base+0x41c>
   3918c:	str	r2, [r5, #36]	; 0x24
   39190:	mov	r0, #5
   39194:	ldr	r1, [r5, #4]
   39198:	sub	r1, r2, r1
   3919c:	add	r1, r1, #1
   391a0:	str	r1, [r5, #20]
   391a4:	str	r0, [r5, #24]
   391a8:	mov	r1, r4
   391ac:	b	391bc <flatcc_json_parser_union_type@@Base+0x41c>
   391b0:	mov	r0, #1
   391b4:	str	r0, [r5, #12]
   391b8:	mov	r1, r2
   391bc:	ldr	r0, [r5, #12]
   391c0:	cmp	r0, #0
   391c4:	beq	391d8 <flatcc_json_parser_union_type@@Base+0x438>
   391c8:	mov	r7, r1
   391cc:	cmp	r7, r4
   391d0:	bne	3921c <flatcc_json_parser_union_type@@Base+0x47c>
   391d4:	b	392f0 <flatcc_json_parser_union_type@@Base+0x550>
   391d8:	sub	r0, r4, r1
   391dc:	cmp	r0, #2
   391e0:	blt	39204 <flatcc_json_parser_union_type@@Base+0x464>
   391e4:	ldrb	r0, [r1]
   391e8:	cmp	r0, #32
   391ec:	bhi	391c8 <flatcc_json_parser_union_type@@Base+0x428>
   391f0:	bne	39204 <flatcc_json_parser_union_type@@Base+0x464>
   391f4:	mov	r7, r1
   391f8:	ldrb	r0, [r7, #1]!
   391fc:	cmp	r0, #32
   39200:	bhi	39214 <flatcc_json_parser_union_type@@Base+0x474>
   39204:	mov	r0, r5
   39208:	mov	r2, r4
   3920c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   39210:	mov	r7, r0
   39214:	cmp	r7, r4
   39218:	beq	392f0 <flatcc_json_parser_union_type@@Base+0x550>
   3921c:	add	sl, r6, #4
   39220:	add	r8, sp, #24
   39224:	add	r9, sp, #20
   39228:	str	r6, [sp, #12]
   3922c:	str	sl, [sp, #8]
   39230:	ldr	r6, [r6]
   39234:	add	r0, sp, #16
   39238:	mov	r1, r7
   3923c:	mov	r2, r4
   39240:	mov	r3, r9
   39244:	str	r8, [sp]
   39248:	str	r0, [sp, #4]
   3924c:	mov	r0, r5
   39250:	blx	r6
   39254:	cmp	r0, r4
   39258:	beq	392f0 <flatcc_json_parser_union_type@@Base+0x550>
   3925c:	cmp	r0, r7
   39260:	bne	39274 <flatcc_json_parser_union_type@@Base+0x4d4>
   39264:	ldr	r6, [sl], #4
   39268:	cmp	r6, #0
   3926c:	bne	39234 <flatcc_json_parser_union_type@@Base+0x494>
   39270:	b	392c8 <flatcc_json_parser_union_type@@Base+0x528>
   39274:	ldr	r1, [sp, #20]
   39278:	cmp	r1, #0
   3927c:	bne	392fc <flatcc_json_parser_union_type@@Base+0x55c>
   39280:	ldr	r1, [sp, #24]
   39284:	ldr	r2, [sp, #28]
   39288:	subs	r3, r1, #256	; 0x100
   3928c:	sbcs	r2, r2, #0
   39290:	bcs	39310 <flatcc_json_parser_union_type@@Base+0x570>
   39294:	ldr	r2, [fp, #8]
   39298:	ldr	r6, [sp, #12]
   3929c:	ldr	sl, [sp, #8]
   392a0:	mov	r7, r0
   392a4:	mov	r3, r2
   392a8:	ldrb	r2, [r2]
   392ac:	add	r1, r2, r1
   392b0:	strb	r1, [r3]
   392b4:	ldr	r1, [sp, #16]
   392b8:	cmp	r1, #0
   392bc:	bne	39230 <flatcc_json_parser_union_type@@Base+0x490>
   392c0:	sub	sp, fp, #28
   392c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   392c8:	ldr	r0, [r5, #24]
   392cc:	cmp	r0, #0
   392d0:	bne	392f0 <flatcc_json_parser_union_type@@Base+0x550>
   392d4:	str	r7, [r5, #36]	; 0x24
   392d8:	mov	r0, #23
   392dc:	ldr	r1, [r5, #4]
   392e0:	sub	r1, r7, r1
   392e4:	add	r1, r1, #1
   392e8:	str	r1, [r5, #20]
   392ec:	str	r0, [r5, #24]
   392f0:	mov	r0, r4
   392f4:	sub	sp, fp, #28
   392f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   392fc:	ldr	r1, [r5, #24]
   39300:	cmp	r1, #0
   39304:	bne	392f0 <flatcc_json_parser_union_type@@Base+0x550>
   39308:	mov	r1, #8
   3930c:	b	39320 <flatcc_json_parser_union_type@@Base+0x580>
   39310:	ldr	r1, [r5, #24]
   39314:	cmp	r1, #0
   39318:	bne	392f0 <flatcc_json_parser_union_type@@Base+0x550>
   3931c:	mov	r1, #7
   39320:	str	r0, [r5, #36]	; 0x24
   39324:	ldr	r2, [r5, #4]
   39328:	sub	r0, r0, r2
   3932c:	add	r0, r0, #1
   39330:	str	r0, [r5, #20]
   39334:	str	r1, [r5, #24]
   39338:	b	392f0 <flatcc_json_parser_union_type@@Base+0x550>

0003933c <flatcc_json_parser_union_vector@@Base>:
   3933c:	push	{r4, r5, r6, r7, fp, lr}
   39340:	add	fp, sp, #16
   39344:	sub	sp, sp, #16
   39348:	mov	r6, r1
   3934c:	mov	r5, r0
   39350:	ldr	r0, [r0]
   39354:	ldr	r1, [fp, #12]
   39358:	mov	r7, r3
   3935c:	mov	r4, r2
   39360:	bl	2f700 <flatcc_builder_get_user_frame_ptr@@Base>
   39364:	add	r2, r0, #8
   39368:	add	r3, r7, r7, lsl #1
   3936c:	mov	r1, r2
   39370:	ldr	r7, [r1, r3, lsl #3]!
   39374:	cmp	r7, #0
   39378:	beq	393b0 <flatcc_json_parser_union_vector@@Base+0x74>
   3937c:	ldr	r0, [r5, #24]
   39380:	cmp	r0, #0
   39384:	bne	393a4 <flatcc_json_parser_union_vector@@Base+0x68>
   39388:	str	r6, [r5, #36]	; 0x24
   3938c:	mov	r0, #28
   39390:	ldr	r1, [r5, #4]
   39394:	sub	r1, r6, r1
   39398:	add	r1, r1, #1
   3939c:	str	r1, [r5, #20]
   393a0:	str	r0, [r5, #24]
   393a4:	mov	r0, r4
   393a8:	sub	sp, fp, #16
   393ac:	pop	{r4, r5, r6, r7, fp, pc}
   393b0:	add	r2, r2, r3, lsl #3
   393b4:	ldr	r3, [r0, #4]
   393b8:	ldrb	r7, [r2, #12]
   393bc:	cmp	r7, #0
   393c0:	beq	393fc <flatcc_json_parser_union_vector@@Base+0xc0>
   393c4:	sub	r3, r3, #1
   393c8:	ldr	r1, [fp, #16]
   393cc:	ldr	r7, [fp, #8]
   393d0:	str	r3, [r0, #4]
   393d4:	ldr	r0, [r2, #16]
   393d8:	ldr	r3, [r2, #20]
   393dc:	mov	r2, r4
   393e0:	stm	sp, {r0, r7}
   393e4:	str	r1, [sp, #8]
   393e8:	mov	r0, r5
   393ec:	mov	r1, r6
   393f0:	bl	39430 <flatcc_json_parser_union_vector@@Base+0xf4>
   393f4:	sub	sp, fp, #16
   393f8:	pop	{r4, r5, r6, r7, fp, pc}
   393fc:	add	r3, r3, #1
   39400:	str	r3, [r0, #4]
   39404:	ldr	r0, [r5, #16]
   39408:	str	r0, [r2, #8]
   3940c:	ldr	r0, [r5, #4]
   39410:	str	r0, [r2, #4]
   39414:	str	r6, [r1]
   39418:	mov	r0, r5
   3941c:	mov	r1, r6
   39420:	mov	r2, r4
   39424:	sub	sp, fp, #16
   39428:	pop	{r4, r5, r6, r7, fp, lr}
   3942c:	b	36a8c <flatcc_json_parser_generic_json@@Base>
   39430:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39434:	add	fp, sp, #28
   39438:	sub	sp, sp, #12
   3943c:	mov	r5, r0
   39440:	mov	r0, #0
   39444:	mov	r8, r3
   39448:	mov	r6, r2
   3944c:	mov	r7, r1
   39450:	str	r0, [sp, #8]
   39454:	ldr	r0, [r5]
   39458:	bl	30ec4 <flatcc_builder_start_offset_vector@@Base>
   3945c:	cmp	r0, #0
   39460:	beq	39484 <flatcc_json_parser_union_vector@@Base+0x148>
   39464:	ldr	r0, [r5, #24]
   39468:	cmp	r0, #0
   3946c:	bne	39500 <flatcc_json_parser_union_vector@@Base+0x1c4>
   39470:	str	r7, [r5, #36]	; 0x24
   39474:	mov	r0, #33	; 0x21
   39478:	ldr	r1, [r5, #4]
   3947c:	sub	r1, r7, r1
   39480:	b	394f4 <flatcc_json_parser_union_vector@@Base+0x1b8>
   39484:	ldr	sl, [fp, #8]
   39488:	cmp	r7, r6
   3948c:	beq	394c0 <flatcc_json_parser_union_vector@@Base+0x184>
   39490:	ldrb	r0, [r7]
   39494:	cmp	r0, #91	; 0x5b
   39498:	bne	394c0 <flatcc_json_parser_union_vector@@Base+0x184>
   3949c:	add	r1, r7, #1
   394a0:	sub	r0, r6, r1
   394a4:	cmp	r0, #2
   394a8:	blt	39594 <flatcc_json_parser_union_vector@@Base+0x258>
   394ac:	ldrb	r0, [r1]
   394b0:	cmp	r0, #32
   394b4:	bls	39584 <flatcc_json_parser_union_vector@@Base+0x248>
   394b8:	mov	r7, r1
   394bc:	b	395a4 <flatcc_json_parser_union_vector@@Base+0x268>
   394c0:	ldr	r0, [r5, #24]
   394c4:	mov	r9, r6
   394c8:	cmp	r0, #0
   394cc:	beq	3950c <flatcc_json_parser_union_vector@@Base+0x1d0>
   394d0:	cmp	sl, #0
   394d4:	beq	39534 <flatcc_json_parser_union_vector@@Base+0x1f8>
   394d8:	ldr	r0, [r5, #24]
   394dc:	cmp	r0, #0
   394e0:	bne	39500 <flatcc_json_parser_union_vector@@Base+0x1c4>
   394e4:	str	r9, [r5, #36]	; 0x24
   394e8:	mov	r0, #30
   394ec:	ldr	r1, [r5, #4]
   394f0:	sub	r1, r9, r1
   394f4:	add	r1, r1, #1
   394f8:	str	r1, [r5, #20]
   394fc:	str	r0, [r5, #24]
   39500:	mov	r0, r6
   39504:	sub	sp, fp, #28
   39508:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3950c:	str	r7, [r5, #36]	; 0x24
   39510:	mov	r0, #22
   39514:	mov	r9, r6
   39518:	ldr	r1, [r5, #4]
   3951c:	sub	r1, r7, r1
   39520:	add	r1, r1, #1
   39524:	str	r1, [r5, #20]
   39528:	str	r0, [r5, #24]
   3952c:	cmp	sl, #0
   39530:	bne	394d8 <flatcc_json_parser_union_vector@@Base+0x19c>
   39534:	ldr	r0, [r5]
   39538:	mov	r1, r8
   3953c:	bl	2f700 <flatcc_builder_get_user_frame_ptr@@Base>
   39540:	mov	r1, r0
   39544:	ldr	r0, [r5]
   39548:	bl	32408 <flatcc_builder_end_offset_vector_for_unions@@Base>
   3954c:	cmp	r0, #0
   39550:	str	r0, [sp, #8]
   39554:	beq	3957c <flatcc_json_parser_union_vector@@Base+0x240>
   39558:	ldr	r1, [fp, #12]
   3955c:	ldr	r0, [r5]
   39560:	bl	32630 <flatcc_builder_table_add_offset@@Base>
   39564:	cmp	r0, #0
   39568:	beq	3957c <flatcc_json_parser_union_vector@@Base+0x240>
   3956c:	ldr	r1, [sp, #8]
   39570:	mov	r6, r9
   39574:	str	r1, [r0]
   39578:	b	39500 <flatcc_json_parser_union_vector@@Base+0x1c4>
   3957c:	mov	r7, r9
   39580:	b	39464 <flatcc_json_parser_union_vector@@Base+0x128>
   39584:	bne	39594 <flatcc_json_parser_union_vector@@Base+0x258>
   39588:	ldrb	r0, [r7, #2]!
   3958c:	cmp	r0, #32
   39590:	bhi	395a4 <flatcc_json_parser_union_vector@@Base+0x268>
   39594:	mov	r0, r5
   39598:	mov	r2, r6
   3959c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   395a0:	mov	r7, r0
   395a4:	cmp	r7, r6
   395a8:	mov	r4, r6
   395ac:	beq	395ec <flatcc_json_parser_union_vector@@Base+0x2b0>
   395b0:	ldrb	r0, [r7]
   395b4:	cmp	r0, #93	; 0x5d
   395b8:	bne	395e8 <flatcc_json_parser_union_vector@@Base+0x2ac>
   395bc:	add	r1, r7, #1
   395c0:	sub	r0, r6, r1
   395c4:	cmp	r0, #2
   395c8:	blt	3975c <flatcc_json_parser_union_vector@@Base+0x420>
   395cc:	ldrb	r0, [r1]
   395d0:	cmp	r0, #32
   395d4:	bls	39748 <flatcc_json_parser_union_vector@@Base+0x40c>
   395d8:	mov	r9, r1
   395dc:	cmp	sl, #0
   395e0:	bne	394d8 <flatcc_json_parser_union_vector@@Base+0x19c>
   395e4:	b	39534 <flatcc_json_parser_union_vector@@Base+0x1f8>
   395e8:	mov	r4, r7
   395ec:	cmp	sl, #0
   395f0:	beq	39728 <flatcc_json_parser_union_vector@@Base+0x3ec>
   395f4:	add	r0, r6, #1
   395f8:	mov	sl, #0
   395fc:	add	r9, sp, #8
   39600:	str	r0, [sp, #4]
   39604:	ldr	r0, [r5]
   39608:	mov	r1, r8
   3960c:	bl	2f700 <flatcc_builder_get_user_frame_ptr@@Base>
   39610:	ldrb	r3, [r0, -sl]
   39614:	ldr	r7, [fp, #16]
   39618:	mov	r0, r5
   3961c:	mov	r1, r4
   39620:	mov	r2, r6
   39624:	str	r9, [sp]
   39628:	blx	r7
   3962c:	cmp	r0, r6
   39630:	beq	39500 <flatcc_json_parser_union_vector@@Base+0x1c4>
   39634:	mov	r7, r0
   39638:	ldr	r0, [r5]
   3963c:	mov	r1, #1
   39640:	bl	3061c <flatcc_builder_extend_offset_vector@@Base>
   39644:	cmp	r0, #0
   39648:	beq	39464 <flatcc_json_parser_union_vector@@Base+0x128>
   3964c:	ldr	r1, [sp, #8]
   39650:	str	r1, [r0]
   39654:	sub	r0, r6, r7
   39658:	cmp	r0, #2
   3965c:	blt	39690 <flatcc_json_parser_union_vector@@Base+0x354>
   39660:	ldrb	r0, [r7]
   39664:	cmp	r0, #32
   39668:	bls	3967c <flatcc_json_parser_union_vector@@Base+0x340>
   3966c:	mov	r4, r7
   39670:	cmp	r4, r6
   39674:	bne	396ac <flatcc_json_parser_union_vector@@Base+0x370>
   39678:	b	397f8 <flatcc_json_parser_union_vector@@Base+0x4bc>
   3967c:	bne	39690 <flatcc_json_parser_union_vector@@Base+0x354>
   39680:	mov	r4, r7
   39684:	ldrb	r0, [r4, #1]!
   39688:	cmp	r0, #32
   3968c:	bhi	396a4 <flatcc_json_parser_union_vector@@Base+0x368>
   39690:	mov	r0, r5
   39694:	mov	r1, r7
   39698:	mov	r2, r6
   3969c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   396a0:	mov	r4, r0
   396a4:	cmp	r4, r6
   396a8:	beq	397f8 <flatcc_json_parser_union_vector@@Base+0x4bc>
   396ac:	ldrb	r0, [r4]
   396b0:	cmp	r0, #44	; 0x2c
   396b4:	bne	39778 <flatcc_json_parser_union_vector@@Base+0x43c>
   396b8:	add	r1, r4, #1
   396bc:	sub	r0, r6, r1
   396c0:	cmp	r0, #2
   396c4:	blt	396f4 <flatcc_json_parser_union_vector@@Base+0x3b8>
   396c8:	ldrb	r0, [r1]
   396cc:	cmp	r0, #32
   396d0:	bls	396e4 <flatcc_json_parser_union_vector@@Base+0x3a8>
   396d4:	mov	r4, r1
   396d8:	cmp	r4, r6
   396dc:	bne	3970c <flatcc_json_parser_union_vector@@Base+0x3d0>
   396e0:	b	397a4 <flatcc_json_parser_union_vector@@Base+0x468>
   396e4:	bne	396f4 <flatcc_json_parser_union_vector@@Base+0x3b8>
   396e8:	ldrb	r0, [r4, #2]!
   396ec:	cmp	r0, #32
   396f0:	bhi	39704 <flatcc_json_parser_union_vector@@Base+0x3c8>
   396f4:	mov	r0, r5
   396f8:	mov	r2, r6
   396fc:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   39700:	mov	r4, r0
   39704:	cmp	r4, r6
   39708:	beq	397a4 <flatcc_json_parser_union_vector@@Base+0x468>
   3970c:	ldrb	r0, [r4]
   39710:	cmp	r0, #93	; 0x5d
   39714:	beq	39780 <flatcc_json_parser_union_vector@@Base+0x444>
   39718:	ldr	r0, [fp, #8]
   3971c:	sub	sl, sl, #1
   39720:	adds	r0, r0, sl
   39724:	bne	39604 <flatcc_json_parser_union_vector@@Base+0x2c8>
   39728:	ldr	r0, [r5, #24]
   3972c:	cmp	r0, #0
   39730:	bne	39500 <flatcc_json_parser_union_vector@@Base+0x1c4>
   39734:	str	r4, [r5, #36]	; 0x24
   39738:	mov	r0, #30
   3973c:	ldr	r1, [r5, #4]
   39740:	sub	r1, r4, r1
   39744:	b	394f4 <flatcc_json_parser_union_vector@@Base+0x1b8>
   39748:	bne	3975c <flatcc_json_parser_union_vector@@Base+0x420>
   3974c:	ldrb	r0, [r7, #2]!
   39750:	mov	r9, r7
   39754:	cmp	r0, #32
   39758:	bhi	394d0 <flatcc_json_parser_union_vector@@Base+0x194>
   3975c:	mov	r0, r5
   39760:	mov	r2, r6
   39764:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   39768:	mov	r9, r0
   3976c:	cmp	sl, #0
   39770:	bne	394d8 <flatcc_json_parser_union_vector@@Base+0x19c>
   39774:	b	39534 <flatcc_json_parser_union_vector@@Base+0x1f8>
   39778:	cmp	r0, #93	; 0x5d
   3977c:	bne	397cc <flatcc_json_parser_union_vector@@Base+0x490>
   39780:	add	r1, r4, #1
   39784:	sub	r0, r6, r1
   39788:	cmp	r0, #2
   3978c:	blt	39814 <flatcc_json_parser_union_vector@@Base+0x4d8>
   39790:	ldrb	r0, [r1]
   39794:	cmp	r0, #32
   39798:	bls	39800 <flatcc_json_parser_union_vector@@Base+0x4c4>
   3979c:	mov	r9, r1
   397a0:	b	39824 <flatcc_json_parser_union_vector@@Base+0x4e8>
   397a4:	ldr	r0, [r5, #24]
   397a8:	mov	r9, r6
   397ac:	cmp	r0, #0
   397b0:	bne	39824 <flatcc_json_parser_union_vector@@Base+0x4e8>
   397b4:	str	r6, [r5, #36]	; 0x24
   397b8:	ldr	r2, [sp, #4]
   397bc:	mov	r0, #9
   397c0:	ldr	r1, [r5, #4]
   397c4:	sub	r1, r2, r1
   397c8:	b	397f0 <flatcc_json_parser_union_vector@@Base+0x4b4>
   397cc:	ldr	r0, [r5, #24]
   397d0:	mov	r9, r6
   397d4:	cmp	r0, #0
   397d8:	bne	39824 <flatcc_json_parser_union_vector@@Base+0x4e8>
   397dc:	str	r4, [r5, #36]	; 0x24
   397e0:	mov	r0, #9
   397e4:	ldr	r1, [r5, #4]
   397e8:	sub	r1, r4, r1
   397ec:	add	r1, r1, #1
   397f0:	str	r1, [r5, #20]
   397f4:	str	r0, [r5, #24]
   397f8:	mov	r9, r6
   397fc:	b	39824 <flatcc_json_parser_union_vector@@Base+0x4e8>
   39800:	bne	39814 <flatcc_json_parser_union_vector@@Base+0x4d8>
   39804:	ldrb	r0, [r4, #2]!
   39808:	mov	r9, r4
   3980c:	cmp	r0, #32
   39810:	bhi	39824 <flatcc_json_parser_union_vector@@Base+0x4e8>
   39814:	mov	r0, r5
   39818:	mov	r2, r6
   3981c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   39820:	mov	r9, r0
   39824:	ldr	r0, [fp, #8]
   39828:	add	r0, r0, sl
   3982c:	cmp	r0, #1
   39830:	bne	394d8 <flatcc_json_parser_union_vector@@Base+0x19c>
   39834:	b	39534 <flatcc_json_parser_union_vector@@Base+0x1f8>

00039838 <flatcc_json_parser_union_type_vector@@Base>:
   39838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3983c:	add	fp, sp, #28
   39840:	sub	sp, sp, #28
   39844:	mov	r7, r1
   39848:	mov	r5, r0
   3984c:	ldr	r0, [r0]
   39850:	ldr	r1, [fp, #12]
   39854:	mov	r4, r3
   39858:	mov	r8, r2
   3985c:	bl	2f700 <flatcc_builder_get_user_frame_ptr@@Base>
   39860:	add	r6, r4, r4, lsl #1
   39864:	add	r0, r0, #8
   39868:	add	r4, r0, r6, lsl #3
   3986c:	mov	r0, r4
   39870:	ldrb	r1, [r0, #12]!
   39874:	cmp	r1, #0
   39878:	beq	3989c <flatcc_json_parser_union_type_vector@@Base+0x64>
   3987c:	ldr	r0, [r5, #24]
   39880:	cmp	r0, #0
   39884:	bne	398ec <flatcc_json_parser_union_type_vector@@Base+0xb4>
   39888:	str	r7, [r5, #36]	; 0x24
   3988c:	mov	r0, #28
   39890:	ldr	r1, [r5, #4]
   39894:	sub	r1, r7, r1
   39898:	b	398e0 <flatcc_json_parser_union_type_vector@@Base+0xa8>
   3989c:	mov	r1, #1
   398a0:	mov	r2, #1
   398a4:	mvn	r3, #0
   398a8:	strb	r1, [r0]
   398ac:	mov	r1, #1
   398b0:	ldr	r0, [r5]
   398b4:	bl	30e38 <flatcc_builder_start_vector@@Base>
   398b8:	cmp	r0, #0
   398bc:	beq	398f8 <flatcc_json_parser_union_type_vector@@Base+0xc0>
   398c0:	mov	sl, r7
   398c4:	ldr	r0, [r5, #24]
   398c8:	cmp	r0, #0
   398cc:	bne	398ec <flatcc_json_parser_union_type_vector@@Base+0xb4>
   398d0:	str	sl, [r5, #36]	; 0x24
   398d4:	mov	r0, #33	; 0x21
   398d8:	ldr	r1, [r5, #4]
   398dc:	sub	r1, sl, r1
   398e0:	add	r1, r1, #1
   398e4:	str	r1, [r5, #20]
   398e8:	str	r0, [r5, #24]
   398ec:	mov	r0, r8
   398f0:	sub	sp, fp, #28
   398f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   398f8:	cmp	r7, r8
   398fc:	beq	39930 <flatcc_json_parser_union_type_vector@@Base+0xf8>
   39900:	ldrb	r0, [r7]
   39904:	cmp	r0, #91	; 0x5b
   39908:	bne	39930 <flatcc_json_parser_union_type_vector@@Base+0xf8>
   3990c:	add	r1, r7, #1
   39910:	sub	r0, r8, r1
   39914:	cmp	r0, #2
   39918:	blt	39974 <flatcc_json_parser_union_type_vector@@Base+0x13c>
   3991c:	ldrb	r0, [r1]
   39920:	cmp	r0, #32
   39924:	bls	39964 <flatcc_json_parser_union_type_vector@@Base+0x12c>
   39928:	mov	r7, r1
   3992c:	b	39984 <flatcc_json_parser_union_type_vector@@Base+0x14c>
   39930:	ldr	r0, [r5, #24]
   39934:	cmp	r0, #0
   39938:	mov	r0, r8
   3993c:	bne	39e18 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   39940:	str	r7, [r5, #36]	; 0x24
   39944:	mov	r0, #22
   39948:	ldr	r1, [r5, #4]
   3994c:	sub	r1, r7, r1
   39950:	add	r1, r1, #1
   39954:	str	r1, [r5, #20]
   39958:	str	r0, [r5, #24]
   3995c:	mov	r0, r8
   39960:	b	39e18 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   39964:	bne	39974 <flatcc_json_parser_union_type_vector@@Base+0x13c>
   39968:	ldrb	r0, [r7, #2]!
   3996c:	cmp	r0, #32
   39970:	bhi	39984 <flatcc_json_parser_union_type_vector@@Base+0x14c>
   39974:	mov	r0, r5
   39978:	mov	r2, r8
   3997c:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   39980:	mov	r7, r0
   39984:	cmp	r7, r8
   39988:	mov	sl, r8
   3998c:	beq	399d4 <flatcc_json_parser_union_type_vector@@Base+0x19c>
   39990:	ldrb	r0, [r7]
   39994:	cmp	r0, #93	; 0x5d
   39998:	bne	399d0 <flatcc_json_parser_union_type_vector@@Base+0x198>
   3999c:	add	r1, r7, #1
   399a0:	sub	r0, r8, r1
   399a4:	cmp	r0, #2
   399a8:	blt	39e0c <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   399ac:	ldrb	r0, [r1]
   399b0:	cmp	r0, #32
   399b4:	bhi	39d7c <flatcc_json_parser_union_type_vector@@Base+0x544>
   399b8:	bne	39e0c <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   399bc:	ldrb	r0, [r7, #2]!
   399c0:	cmp	r0, #32
   399c4:	mov	r0, r7
   399c8:	bls	39e0c <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   399cc:	b	39e18 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   399d0:	mov	sl, r7
   399d4:	ldr	r0, [r5]
   399d8:	mov	r1, #1
   399dc:	bl	30274 <flatcc_builder_extend_vector@@Base>
   399e0:	cmp	r0, #0
   399e4:	beq	398c4 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   399e8:	mov	r1, r0
   399ec:	add	r0, r8, #1
   399f0:	str	r4, [sp, #16]
   399f4:	str	r0, [sp, #12]
   399f8:	mov	r9, #0
   399fc:	cmp	sl, r8
   39a00:	mov	r4, r8
   39a04:	str	r1, [sp, #20]
   39a08:	strb	r9, [sp, #27]
   39a0c:	beq	39bfc <flatcc_json_parser_union_type_vector@@Base+0x3c4>
   39a10:	mov	r2, sl
   39a14:	mov	r9, #0
   39a18:	ldrb	ip, [r2], #1
   39a1c:	cmp	ip, #45	; 0x2d
   39a20:	movne	r2, sl
   39a24:	cmp	r2, r8
   39a28:	beq	39a94 <flatcc_json_parser_union_type_vector@@Base+0x25c>
   39a2c:	mov	r7, #0
   39a30:	mov	r0, #0
   39a34:	mov	r4, #10
   39a38:	ldrb	r1, [r2]
   39a3c:	sub	r3, r1, #48	; 0x30
   39a40:	uxtb	r3, r3
   39a44:	cmp	r3, #9
   39a48:	bhi	39aa8 <flatcc_json_parser_union_type_vector@@Base+0x270>
   39a4c:	add	r3, r0, r0, lsl #2
   39a50:	lsl	r3, r3, #1
   39a54:	umlal	r1, r3, r7, r4
   39a58:	subs	r1, r1, #48	; 0x30
   39a5c:	sbc	r3, r3, #0
   39a60:	subs	r7, r1, r7
   39a64:	sbcs	r0, r3, r0
   39a68:	bcc	39b14 <flatcc_json_parser_union_type_vector@@Base+0x2dc>
   39a6c:	add	r2, r2, #1
   39a70:	mov	r7, r1
   39a74:	mov	r0, r3
   39a78:	cmp	r8, r2
   39a7c:	bne	39a38 <flatcc_json_parser_union_type_vector@@Base+0x200>
   39a80:	mov	lr, #0
   39a84:	mov	r2, r8
   39a88:	mov	r7, r1
   39a8c:	mov	r0, r3
   39a90:	b	39aac <flatcc_json_parser_union_type_vector@@Base+0x274>
   39a94:	mov	r2, r8
   39a98:	mov	r7, #0
   39a9c:	mov	r0, #0
   39aa0:	mov	lr, #0
   39aa4:	b	39aac <flatcc_json_parser_union_type_vector@@Base+0x274>
   39aa8:	mov	lr, #1
   39aac:	cmp	r2, sl
   39ab0:	mov	r4, sl
   39ab4:	beq	39bfc <flatcc_json_parser_union_type_vector@@Base+0x3c4>
   39ab8:	cmp	lr, #0
   39abc:	beq	39b0c <flatcc_json_parser_union_type_vector@@Base+0x2d4>
   39ac0:	ldrb	r1, [r2]
   39ac4:	cmp	r1, #46	; 0x2e
   39ac8:	beq	39ad8 <flatcc_json_parser_union_type_vector@@Base+0x2a0>
   39acc:	cmp	r1, #101	; 0x65
   39ad0:	cmpne	r1, #69	; 0x45
   39ad4:	bne	39b0c <flatcc_json_parser_union_type_vector@@Base+0x2d4>
   39ad8:	ldr	r0, [r5, #24]
   39adc:	mov	r7, #0
   39ae0:	mov	r4, r8
   39ae4:	cmp	r0, #0
   39ae8:	mov	r0, #0
   39aec:	bne	39b54 <flatcc_json_parser_union_type_vector@@Base+0x31c>
   39af0:	str	r2, [r5, #36]	; 0x24
   39af4:	ldr	r0, [r5, #4]
   39af8:	sub	r0, r2, r0
   39afc:	add	r0, r0, #1
   39b00:	str	r0, [r5, #20]
   39b04:	mov	r0, #12
   39b08:	b	39b44 <flatcc_json_parser_union_type_vector@@Base+0x30c>
   39b0c:	mov	r4, r2
   39b10:	b	39b54 <flatcc_json_parser_union_type_vector@@Base+0x31c>
   39b14:	ldr	r0, [r5, #24]
   39b18:	mov	r7, #0
   39b1c:	mov	r4, r8
   39b20:	cmp	r0, #0
   39b24:	mov	r0, #0
   39b28:	bne	39b54 <flatcc_json_parser_union_type_vector@@Base+0x31c>
   39b2c:	str	r2, [r5, #36]	; 0x24
   39b30:	ldr	r0, [r5, #4]
   39b34:	sub	r0, r2, r0
   39b38:	add	r0, r0, #1
   39b3c:	str	r0, [r5, #20]
   39b40:	mov	r0, #8
   39b44:	str	r0, [r5, #24]
   39b48:	mov	r7, #0
   39b4c:	mov	r0, #0
   39b50:	mov	r4, r8
   39b54:	mov	r9, #0
   39b58:	cmp	r4, sl
   39b5c:	beq	39b90 <flatcc_json_parser_union_type_vector@@Base+0x358>
   39b60:	cmp	ip, #45	; 0x2d
   39b64:	bne	39ba0 <flatcc_json_parser_union_type_vector@@Base+0x368>
   39b68:	ldr	r0, [r5, #24]
   39b6c:	cmp	r0, #0
   39b70:	bne	39bb8 <flatcc_json_parser_union_type_vector@@Base+0x380>
   39b74:	str	r4, [r5, #36]	; 0x24
   39b78:	ldr	r0, [r5, #4]
   39b7c:	sub	r0, r4, r0
   39b80:	add	r0, r0, #1
   39b84:	str	r0, [r5, #20]
   39b88:	mov	r0, #8
   39b8c:	b	39bf4 <flatcc_json_parser_union_type_vector@@Base+0x3bc>
   39b90:	mov	r4, sl
   39b94:	cmp	sl, r4
   39b98:	bne	39c38 <flatcc_json_parser_union_type_vector@@Base+0x400>
   39b9c:	b	39c04 <flatcc_json_parser_union_type_vector@@Base+0x3cc>
   39ba0:	subs	r1, r7, #256	; 0x100
   39ba4:	sbcs	r0, r0, #0
   39ba8:	bcc	39bc8 <flatcc_json_parser_union_type_vector@@Base+0x390>
   39bac:	ldr	r0, [r5, #24]
   39bb0:	cmp	r0, #0
   39bb4:	beq	39bdc <flatcc_json_parser_union_type_vector@@Base+0x3a4>
   39bb8:	mov	r4, r8
   39bbc:	cmp	sl, r4
   39bc0:	bne	39c38 <flatcc_json_parser_union_type_vector@@Base+0x400>
   39bc4:	b	39c04 <flatcc_json_parser_union_type_vector@@Base+0x3cc>
   39bc8:	mov	r9, r7
   39bcc:	strb	r7, [sp, #27]
   39bd0:	cmp	sl, r4
   39bd4:	bne	39c38 <flatcc_json_parser_union_type_vector@@Base+0x400>
   39bd8:	b	39c04 <flatcc_json_parser_union_type_vector@@Base+0x3cc>
   39bdc:	str	r4, [r5, #36]	; 0x24
   39be0:	ldr	r0, [r5, #4]
   39be4:	sub	r0, r4, r0
   39be8:	add	r0, r0, #1
   39bec:	str	r0, [r5, #20]
   39bf0:	mov	r0, #7
   39bf4:	str	r0, [r5, #24]
   39bf8:	mov	r4, r8
   39bfc:	cmp	sl, r4
   39c00:	bne	39c38 <flatcc_json_parser_union_type_vector@@Base+0x400>
   39c04:	ldr	r3, [fp, #16]
   39c08:	add	r0, sp, #27
   39c0c:	mov	r1, sl
   39c10:	mov	r2, r8
   39c14:	str	r0, [sp]
   39c18:	mov	r0, r5
   39c1c:	bl	39128 <flatcc_json_parser_union_type@@Base+0x388>
   39c20:	mov	r4, r0
   39c24:	cmp	r0, sl
   39c28:	beq	39dd0 <flatcc_json_parser_union_type_vector@@Base+0x598>
   39c2c:	cmp	r4, r8
   39c30:	beq	39dd0 <flatcc_json_parser_union_type_vector@@Base+0x598>
   39c34:	ldrb	r9, [sp, #27]
   39c38:	ldr	r1, [fp, #24]
   39c3c:	uxtb	r0, r9
   39c40:	blx	r1
   39c44:	cmp	r0, #0
   39c48:	bne	39c60 <flatcc_json_parser_union_type_vector@@Base+0x428>
   39c4c:	ldrb	r0, [r5, #8]
   39c50:	tst	r0, #1
   39c54:	beq	39dd8 <flatcc_json_parser_union_type_vector@@Base+0x5a0>
   39c58:	mov	r9, #0
   39c5c:	strb	r9, [sp, #27]
   39c60:	ldr	r0, [sp, #20]
   39c64:	strb	r9, [r0]
   39c68:	sub	r0, r8, r4
   39c6c:	cmp	r0, #2
   39c70:	blt	39ca4 <flatcc_json_parser_union_type_vector@@Base+0x46c>
   39c74:	ldrb	r0, [r4]
   39c78:	cmp	r0, #32
   39c7c:	bls	39c90 <flatcc_json_parser_union_type_vector@@Base+0x458>
   39c80:	mov	sl, r4
   39c84:	cmp	sl, r8
   39c88:	bne	39cc0 <flatcc_json_parser_union_type_vector@@Base+0x488>
   39c8c:	b	39d4c <flatcc_json_parser_union_type_vector@@Base+0x514>
   39c90:	bne	39ca4 <flatcc_json_parser_union_type_vector@@Base+0x46c>
   39c94:	mov	sl, r4
   39c98:	ldrb	r0, [sl, #1]!
   39c9c:	cmp	r0, #32
   39ca0:	bhi	39cb8 <flatcc_json_parser_union_type_vector@@Base+0x480>
   39ca4:	mov	r0, r5
   39ca8:	mov	r1, r4
   39cac:	mov	r2, r8
   39cb0:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   39cb4:	mov	sl, r0
   39cb8:	cmp	sl, r8
   39cbc:	beq	39d4c <flatcc_json_parser_union_type_vector@@Base+0x514>
   39cc0:	ldrb	r0, [sl]
   39cc4:	ldr	r4, [sp, #16]
   39cc8:	cmp	r0, #44	; 0x2c
   39ccc:	bne	39d58 <flatcc_json_parser_union_type_vector@@Base+0x520>
   39cd0:	add	r1, sl, #1
   39cd4:	sub	r0, r8, r1
   39cd8:	cmp	r0, #2
   39cdc:	blt	39d0c <flatcc_json_parser_union_type_vector@@Base+0x4d4>
   39ce0:	ldrb	r0, [r1]
   39ce4:	cmp	r0, #32
   39ce8:	bls	39cfc <flatcc_json_parser_union_type_vector@@Base+0x4c4>
   39cec:	mov	sl, r1
   39cf0:	cmp	sl, r8
   39cf4:	bne	39d24 <flatcc_json_parser_union_type_vector@@Base+0x4ec>
   39cf8:	b	39d84 <flatcc_json_parser_union_type_vector@@Base+0x54c>
   39cfc:	bne	39d0c <flatcc_json_parser_union_type_vector@@Base+0x4d4>
   39d00:	ldrb	r0, [sl, #2]!
   39d04:	cmp	r0, #32
   39d08:	bhi	39d1c <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   39d0c:	mov	r0, r5
   39d10:	mov	r2, r8
   39d14:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   39d18:	mov	sl, r0
   39d1c:	cmp	sl, r8
   39d20:	beq	39d84 <flatcc_json_parser_union_type_vector@@Base+0x54c>
   39d24:	ldrb	r0, [sl]
   39d28:	cmp	r0, #93	; 0x5d
   39d2c:	beq	39d60 <flatcc_json_parser_union_type_vector@@Base+0x528>
   39d30:	ldr	r0, [r5]
   39d34:	mov	r1, #1
   39d38:	bl	30274 <flatcc_builder_extend_vector@@Base>
   39d3c:	mov	r1, r0
   39d40:	cmp	r0, #0
   39d44:	bne	399f8 <flatcc_json_parser_union_type_vector@@Base+0x1c0>
   39d48:	b	398c4 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   39d4c:	ldr	r4, [sp, #16]
   39d50:	mov	r0, r8
   39d54:	b	39e18 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   39d58:	cmp	r0, #93	; 0x5d
   39d5c:	bne	39dac <flatcc_json_parser_union_type_vector@@Base+0x574>
   39d60:	add	r1, sl, #1
   39d64:	sub	r0, r8, r1
   39d68:	cmp	r0, #2
   39d6c:	blt	39e0c <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   39d70:	ldrb	r0, [r1]
   39d74:	cmp	r0, #32
   39d78:	bls	39df8 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   39d7c:	mov	r0, r1
   39d80:	b	39e18 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   39d84:	ldr	r0, [r5, #24]
   39d88:	cmp	r0, #0
   39d8c:	mov	r0, r8
   39d90:	bne	39e18 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   39d94:	str	r8, [r5, #36]	; 0x24
   39d98:	ldr	r2, [sp, #12]
   39d9c:	mov	r0, #9
   39da0:	ldr	r1, [r5, #4]
   39da4:	sub	r1, r2, r1
   39da8:	b	39954 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   39dac:	ldr	r0, [r5, #24]
   39db0:	cmp	r0, #0
   39db4:	mov	r0, r8
   39db8:	bne	39e18 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   39dbc:	str	sl, [r5, #36]	; 0x24
   39dc0:	mov	r0, #9
   39dc4:	ldr	r1, [r5, #4]
   39dc8:	sub	r1, sl, r1
   39dcc:	b	39950 <flatcc_json_parser_union_type_vector@@Base+0x118>
   39dd0:	mov	sl, r4
   39dd4:	b	398c4 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   39dd8:	ldr	r0, [r5, #24]
   39ddc:	cmp	r0, #0
   39de0:	bne	398ec <flatcc_json_parser_union_type_vector@@Base+0xb4>
   39de4:	str	r4, [r5, #36]	; 0x24
   39de8:	mov	r0, #15
   39dec:	ldr	r1, [r5, #4]
   39df0:	sub	r1, r4, r1
   39df4:	b	398e0 <flatcc_json_parser_union_type_vector@@Base+0xa8>
   39df8:	bne	39e0c <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   39dfc:	ldrb	r0, [sl, #2]!
   39e00:	cmp	r0, #32
   39e04:	mov	r0, sl
   39e08:	bhi	39e18 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   39e0c:	mov	r0, r5
   39e10:	mov	r2, r8
   39e14:	bl	36030 <flatcc_json_parser_space_ext@@Base>
   39e18:	mov	sl, r0
   39e1c:	ldr	r0, [r5]
   39e20:	bl	321ac <flatcc_builder_vector_count@@Base>
   39e24:	str	r0, [r4, #16]
   39e28:	mov	r7, r0
   39e2c:	ldr	r0, [r5]
   39e30:	mov	r1, r7
   39e34:	bl	2f53c <flatcc_builder_enter_user_frame@@Base>
   39e38:	mov	r9, r0
   39e3c:	ldr	r0, [r5]
   39e40:	mov	r1, r9
   39e44:	bl	2f700 <flatcc_builder_get_user_frame_ptr@@Base>
   39e48:	mov	r4, r0
   39e4c:	ldr	r0, [r5]
   39e50:	bl	321b8 <flatcc_builder_vector_edit@@Base>
   39e54:	mov	r1, r0
   39e58:	mov	r0, r4
   39e5c:	mov	r2, r7
   39e60:	bl	14e54 <memcpy@plt>
   39e64:	ldr	r0, [r5]
   39e68:	bl	320b0 <flatcc_builder_end_vector@@Base>
   39e6c:	cmp	r0, #0
   39e70:	beq	398c4 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   39e74:	ldr	r1, [fp, #8]
   39e78:	mov	r4, r0
   39e7c:	ldr	r0, [r5]
   39e80:	sub	r1, r1, #1
   39e84:	bl	32630 <flatcc_builder_table_add_offset@@Base>
   39e88:	cmp	r0, #0
   39e8c:	beq	398c4 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   39e90:	str	r4, [r0]
   39e94:	ldr	r1, [fp, #12]
   39e98:	ldr	r0, [r5]
   39e9c:	bl	2f700 <flatcc_builder_get_user_frame_ptr@@Base>
   39ea0:	add	r2, r0, #8
   39ea4:	mov	r3, r2
   39ea8:	ldr	r1, [r3, r6, lsl #3]!
   39eac:	str	r9, [r3, #20]
   39eb0:	ldr	r3, [r0, #4]
   39eb4:	cmp	r1, #0
   39eb8:	beq	39f1c <flatcc_json_parser_union_type_vector@@Base+0x6e4>
   39ebc:	cmp	r3, #0
   39ec0:	beq	39f2c <flatcc_json_parser_union_type_vector@@Base+0x6f4>
   39ec4:	sub	r3, r3, #1
   39ec8:	ldr	ip, [fp, #20]
   39ecc:	str	r3, [r0, #4]
   39ed0:	add	r0, r2, r6, lsl #3
   39ed4:	mov	r3, r9
   39ed8:	ldr	r6, [r5, #4]
   39edc:	ldr	r4, [r5, #16]
   39ee0:	ldr	r2, [r0, #8]
   39ee4:	str	r2, [r5, #16]
   39ee8:	mov	r2, r8
   39eec:	ldr	r0, [r0, #4]
   39ef0:	str	r0, [r5, #4]
   39ef4:	ldr	r0, [fp, #8]
   39ef8:	str	r7, [sp]
   39efc:	stmib	sp, {r0, ip}
   39f00:	mov	r0, r5
   39f04:	bl	39430 <flatcc_json_parser_union_vector@@Base+0xf4>
   39f08:	cmp	r0, r8
   39f0c:	beq	398ec <flatcc_json_parser_union_type_vector@@Base+0xb4>
   39f10:	str	r6, [r5, #4]
   39f14:	str	r4, [r5, #16]
   39f18:	b	39f24 <flatcc_json_parser_union_type_vector@@Base+0x6ec>
   39f1c:	add	r1, r3, #1
   39f20:	str	r1, [r0, #4]
   39f24:	mov	r8, sl
   39f28:	b	398ec <flatcc_json_parser_union_type_vector@@Base+0xb4>
   39f2c:	ldr	r0, [pc, #24]	; 39f4c <flatcc_json_parser_union_type_vector@@Base+0x714>
   39f30:	ldr	r1, [pc, #24]	; 39f50 <flatcc_json_parser_union_type_vector@@Base+0x718>
   39f34:	ldr	r3, [pc, #24]	; 39f54 <flatcc_json_parser_union_type_vector@@Base+0x71c>
   39f38:	movw	r2, #1122	; 0x462
   39f3c:	add	r0, pc, r0
   39f40:	add	r1, pc, r1
   39f44:	add	r3, pc, r3
   39f48:	bl	14f38 <__assert_fail@plt>
   39f4c:	andeq	r3, r1, r3, ror #17
   39f50:	andeq	r3, r1, lr, ror #17
   39f54:	andeq	r3, r1, r7, lsl sl

00039f58 <flatcc_json_parser_table_as_root@@Base>:
   39f58:	push	{r4, r5, r6, r7, fp, lr}
   39f5c:	add	fp, sp, #16
   39f60:	sub	sp, sp, #48	; 0x30
   39f64:	cmp	r1, #0
   39f68:	vmov.i32	q8, #0	; 0x00000000
   39f6c:	add	r5, sp, #4
   39f70:	mov	r6, r0
   39f74:	add	r7, r2, r3
   39f78:	mov	r4, r2
   39f7c:	movne	r5, r1
   39f80:	mov	r1, #1
   39f84:	add	r0, r5, #12
   39f88:	vst1.32	{d16-d17}, [r0]
   39f8c:	add	r0, r5, #28
   39f90:	vst1.32	{d16-d17}, [r0]
   39f94:	ldr	r0, [fp, #8]
   39f98:	str	r2, [r5, #4]
   39f9c:	str	r6, [r5]
   39fa0:	str	r0, [r5, #8]
   39fa4:	str	r1, [r5, #16]
   39fa8:	mov	r1, #2
   39fac:	str	r2, [r5, #28]
   39fb0:	str	r7, [r5, #32]
   39fb4:	str	r2, [r5, #36]	; 0x24
   39fb8:	mov	r2, #0
   39fbc:	and	r3, r1, r0, lsr #1
   39fc0:	ldr	r1, [fp, #12]
   39fc4:	mov	r0, r6
   39fc8:	bl	2fd6c <flatcc_builder_start_buffer@@Base>
   39fcc:	mov	r1, r0
   39fd0:	mvn	r0, #0
   39fd4:	cmp	r1, #0
   39fd8:	bne	3a000 <flatcc_json_parser_table_as_root@@Base+0xa8>
   39fdc:	ldr	ip, [fp, #16]
   39fe0:	mov	r3, sp
   39fe4:	mov	r0, r5
   39fe8:	mov	r1, r4
   39fec:	mov	r2, r7
   39ff0:	blx	ip
   39ff4:	ldr	r0, [r5, #24]
   39ff8:	cmp	r0, #0
   39ffc:	beq	3a008 <flatcc_json_parser_table_as_root@@Base+0xb0>
   3a000:	sub	sp, fp, #16
   3a004:	pop	{r4, r5, r6, r7, fp, pc}
   3a008:	ldr	r1, [sp]
   3a00c:	mov	r0, r6
   3a010:	bl	2ff6c <flatcc_builder_end_buffer@@Base>
   3a014:	cmp	r0, #0
   3a018:	mvn	r0, #0
   3a01c:	movne	r0, #0
   3a020:	strne	r4, [r5, #40]	; 0x28
   3a024:	sub	sp, fp, #16
   3a028:	pop	{r4, r5, r6, r7, fp, pc}

0003a02c <flatcc_json_parser_struct_as_root@@Base>:
   3a02c:	push	{r4, r5, r6, r7, fp, lr}
   3a030:	add	fp, sp, #16
   3a034:	sub	sp, sp, #48	; 0x30
   3a038:	cmp	r1, #0
   3a03c:	vmov.i32	q8, #0	; 0x00000000
   3a040:	add	r5, sp, #4
   3a044:	mov	r6, r0
   3a048:	add	r7, r2, r3
   3a04c:	mov	r4, r2
   3a050:	movne	r5, r1
   3a054:	mov	r1, #1
   3a058:	add	r0, r5, #12
   3a05c:	vst1.32	{d16-d17}, [r0]
   3a060:	add	r0, r5, #28
   3a064:	vst1.32	{d16-d17}, [r0]
   3a068:	ldr	r0, [fp, #8]
   3a06c:	str	r2, [r5, #4]
   3a070:	str	r6, [r5]
   3a074:	str	r0, [r5, #8]
   3a078:	str	r1, [r5, #16]
   3a07c:	mov	r1, #2
   3a080:	str	r2, [r5, #28]
   3a084:	str	r7, [r5, #32]
   3a088:	str	r2, [r5, #36]	; 0x24
   3a08c:	mov	r2, #0
   3a090:	and	r3, r1, r0, lsr #1
   3a094:	ldr	r1, [fp, #12]
   3a098:	mov	r0, r6
   3a09c:	bl	2fd6c <flatcc_builder_start_buffer@@Base>
   3a0a0:	mov	r1, r0
   3a0a4:	mvn	r0, #0
   3a0a8:	cmp	r1, #0
   3a0ac:	bne	3a0d4 <flatcc_json_parser_struct_as_root@@Base+0xa8>
   3a0b0:	ldr	ip, [fp, #16]
   3a0b4:	mov	r3, sp
   3a0b8:	mov	r0, r5
   3a0bc:	mov	r1, r4
   3a0c0:	mov	r2, r7
   3a0c4:	blx	ip
   3a0c8:	ldr	r0, [r5, #24]
   3a0cc:	cmp	r0, #0
   3a0d0:	beq	3a0dc <flatcc_json_parser_struct_as_root@@Base+0xb0>
   3a0d4:	sub	sp, fp, #16
   3a0d8:	pop	{r4, r5, r6, r7, fp, pc}
   3a0dc:	ldr	r1, [sp]
   3a0e0:	mov	r0, r6
   3a0e4:	bl	2ff6c <flatcc_builder_end_buffer@@Base>
   3a0e8:	cmp	r0, #0
   3a0ec:	mvn	r0, #0
   3a0f0:	movne	r0, #0
   3a0f4:	strne	r4, [r5, #40]	; 0x28
   3a0f8:	sub	sp, fp, #16
   3a0fc:	pop	{r4, r5, r6, r7, fp, pc}

0003a100 <flatcc_json_printer_error_string@@Base>:
   3a100:	cmp	r0, #3
   3a104:	bhi	3a118 <flatcc_json_printer_error_string@@Base+0x18>
   3a108:	ldr	r1, [pc, #20]	; 3a124 <flatcc_json_printer_error_string@@Base+0x24>
   3a10c:	add	r1, pc, r1
   3a110:	ldr	r0, [r1, r0, lsl #2]
   3a114:	bx	lr
   3a118:	ldr	r0, [pc, #8]	; 3a128 <flatcc_json_printer_error_string@@Base+0x28>
   3a11c:	add	r0, pc, r0
   3a120:	bx	lr
   3a124:	andeq	r4, r2, ip, ror #27
   3a128:	strdeq	r2, [r1], -r5

0003a12c <flatcc_json_printer_fmt_float@@Base>:
   3a12c:	vcvt.f64.f32	d0, s0
   3a130:	b	3a138 <flatcc_json_printer_fmt_float@@Base+0xc>
   3a134:	nop	{0}
   3a138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a13c:	add	fp, sp, #28
   3a140:	sub	sp, sp, #92	; 0x5c
   3a144:	cmp	r0, #0
   3a148:	beq	3afbc <flatcc_json_printer_fmt_float@@Base+0xe90>
   3a14c:	vmov	r3, r2, d0
   3a150:	mov	ip, r0
   3a154:	mov	r0, #-2147483648	; 0x80000000
   3a158:	mov	r6, #0
   3a15c:	orr	r1, r0, #266338304	; 0xfe00000
   3a160:	orr	r1, r1, #1879048192	; 0x70000000
   3a164:	lsl	r7, r2, #1
   3a168:	subs	r6, r6, r3, lsl #1
   3a16c:	orr	r7, r7, r3, lsr #31
   3a170:	sbcs	r1, r1, r7
   3a174:	bcs	3a190 <flatcc_json_printer_fmt_float@@Base+0x64>
   3a178:	ldr	r1, [pc, #3796]	; 3b054 <flatcc_json_printer_fmt_float@@Base+0xf28>
   3a17c:	mov	r0, ip
   3a180:	add	r1, pc, r1
   3a184:	sub	sp, fp, #28
   3a188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a18c:	b	14f20 <sprintf@plt>
   3a190:	cmn	r2, #1
   3a194:	ble	3a1a0 <flatcc_json_printer_fmt_float@@Base+0x74>
   3a198:	mov	r5, ip
   3a19c:	b	3a1b4 <flatcc_json_printer_fmt_float@@Base+0x88>
   3a1a0:	vneg.f64	d0, d0
   3a1a4:	mov	r1, #45	; 0x2d
   3a1a8:	mov	r5, ip
   3a1ac:	eor	r2, r2, r0
   3a1b0:	strb	r1, [r5], #1
   3a1b4:	movw	r0, #0
   3a1b8:	movt	r0, #32752	; 0x7ff0
   3a1bc:	eor	r1, r2, r0
   3a1c0:	orrs	r1, r3, r1
   3a1c4:	beq	3a1e4 <flatcc_json_printer_fmt_float@@Base+0xb8>
   3a1c8:	orrs	r1, r3, r2
   3a1cc:	bne	3a1fc <flatcc_json_printer_fmt_float@@Base+0xd0>
   3a1d0:	mov	r0, #48	; 0x30
   3a1d4:	strh	r0, [r5], -ip
   3a1d8:	add	r0, r5, #1
   3a1dc:	sub	sp, fp, #28
   3a1e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a1e4:	movw	r0, #28265	; 0x6e69
   3a1e8:	movt	r0, #102	; 0x66
   3a1ec:	str	r0, [r5], -ip
   3a1f0:	add	r0, r5, #3
   3a1f4:	sub	sp, fp, #28
   3a1f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a1fc:	vmov	lr, r9, d0
   3a200:	str	r5, [fp, #-32]	; 0xffffffe0
   3a204:	ands	r1, r9, r0
   3a208:	bfc	r9, #20, #12
   3a20c:	str	r1, [fp, #-40]	; 0xffffffd8
   3a210:	beq	3a228 <flatcc_json_printer_fmt_float@@Base+0xfc>
   3a214:	movw	r0, #64461	; 0xfbcd
   3a218:	orr	r4, r9, #1048576	; 0x100000
   3a21c:	movt	r0, #65535	; 0xffff
   3a220:	add	r3, r0, r1, lsr #20
   3a224:	b	3a23c <flatcc_json_printer_fmt_float@@Base+0x110>
   3a228:	orrs	r0, lr, r9
   3a22c:	beq	3b01c <flatcc_json_printer_fmt_float@@Base+0xef0>
   3a230:	movw	r3, #64462	; 0xfbce
   3a234:	mov	r4, r9
   3a238:	movt	r3, #65535	; 0xffff
   3a23c:	mov	r0, lr
   3a240:	mov	r2, r4
   3a244:	mov	r7, r3
   3a248:	lsl	r1, r2, #10
   3a24c:	sub	r7, r7, #10
   3a250:	orr	r2, r1, r0, lsr #22
   3a254:	lsl	r0, r0, #10
   3a258:	cmp	r2, #4194304	; 0x400000
   3a25c:	bcc	3a248 <flatcc_json_printer_fmt_float@@Base+0x11c>
   3a260:	mvn	r5, #0
   3a264:	cmp	r2, #0
   3a268:	bmi	3a290 <flatcc_json_printer_fmt_float@@Base+0x164>
   3a26c:	lsl	r1, r2, #1
   3a270:	sub	r7, r7, #1
   3a274:	orr	r2, r1, r0, lsr #31
   3a278:	lsl	r1, r0, #1
   3a27c:	subs	r0, r5, r0, lsl #1
   3a280:	sbcs	r0, r5, r2
   3a284:	mov	r0, r1
   3a288:	blt	3a26c <flatcc_json_printer_fmt_float@@Base+0x140>
   3a28c:	b	3a294 <flatcc_json_printer_fmt_float@@Base+0x168>
   3a290:	mov	r1, r0
   3a294:	lsl	r6, r4, #1
   3a298:	mov	r0, #1
   3a29c:	sub	sl, r3, #1
   3a2a0:	str	r4, [fp, #-44]	; 0xffffffd4
   3a2a4:	str	r3, [fp, #-36]	; 0xffffffdc
   3a2a8:	orr	r8, r6, lr, lsr #31
   3a2ac:	mov	r6, #0
   3a2b0:	orr	r0, r0, lr, lsl #1
   3a2b4:	cmp	r6, r8, lsr #22
   3a2b8:	bne	3a2e0 <flatcc_json_printer_fmt_float@@Base+0x1b4>
   3a2bc:	mov	r6, r8
   3a2c0:	mov	r4, sl
   3a2c4:	lsl	r3, r6, #10
   3a2c8:	sub	r4, r4, #10
   3a2cc:	orr	r6, r3, r0, lsr #22
   3a2d0:	lsl	r0, r0, #10
   3a2d4:	cmp	r6, #4194304	; 0x400000
   3a2d8:	bcc	3a2c4 <flatcc_json_printer_fmt_float@@Base+0x198>
   3a2dc:	b	3a2e8 <flatcc_json_printer_fmt_float@@Base+0x1bc>
   3a2e0:	mov	r4, sl
   3a2e4:	mov	r6, r8
   3a2e8:	subs	r3, r5, r0
   3a2ec:	str	ip, [sp, #44]	; 0x2c
   3a2f0:	sbcs	r3, r5, r6
   3a2f4:	bge	3a31c <flatcc_json_printer_fmt_float@@Base+0x1f0>
   3a2f8:	lsl	r3, r6, #1
   3a2fc:	lsl	ip, r0, #1
   3a300:	sub	r4, r4, #1
   3a304:	orr	r6, r3, r0, lsr #31
   3a308:	subs	r0, r5, r0, lsl #1
   3a30c:	sbcs	r0, r5, r6
   3a310:	mov	r0, ip
   3a314:	blt	3a2f8 <flatcc_json_printer_fmt_float@@Base+0x1cc>
   3a318:	b	3a320 <flatcc_json_printer_fmt_float@@Base+0x1f4>
   3a31c:	mov	ip, r0
   3a320:	vcmpe.f64	d0, #0.0
   3a324:	vmrs	APSR_nzcv, fpscr
   3a328:	ble	3affc <flatcc_json_printer_fmt_float@@Base+0xed0>
   3a32c:	vldr	d16, [pc, #748]	; 3a620 <flatcc_json_printer_fmt_float@@Base+0x4f4>
   3a330:	vcmpe.f64	d0, d16
   3a334:	vmrs	APSR_nzcv, fpscr
   3a338:	bhi	3affc <flatcc_json_printer_fmt_float@@Base+0xed0>
   3a33c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   3a340:	orrs	r3, lr, r9
   3a344:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3a348:	vldr	d16, [pc, #728]	; 3a628 <flatcc_json_printer_fmt_float@@Base+0x4fc>
   3a34c:	movwne	r3, #1
   3a350:	clz	r5, r5
   3a354:	lsl	r0, r0, #2
   3a358:	lsr	r5, r5, #5
   3a35c:	orrs	r3, r3, r5
   3a360:	mvn	r5, #60	; 0x3c
   3a364:	sub	r5, r5, r7
   3a368:	orreq	r8, r0, lr, lsr #30
   3a36c:	lsl	r0, lr, #2
   3a370:	lslne	r0, lr, #1
   3a374:	vmov	s2, r5
   3a378:	subs	r5, r0, #1
   3a37c:	sbc	lr, r8, #0
   3a380:	cmp	r3, #0
   3a384:	vcvt.f64.s32	d17, s2
   3a388:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3a38c:	subeq	sl, r0, #2
   3a390:	vmul.f64	d16, d17, d16
   3a394:	sub	r3, sl, r4
   3a398:	rsb	r0, r3, #32
   3a39c:	lsl	sl, r5, r3
   3a3a0:	lsr	r0, r5, r0
   3a3a4:	orr	r0, r0, lr, lsl r3
   3a3a8:	subs	lr, r3, #32
   3a3ac:	lslpl	r0, r5, lr
   3a3b0:	movwpl	sl, #0
   3a3b4:	vcvt.s32.f64	s2, d16
   3a3b8:	vcmpe.f64	d16, #0.0
   3a3bc:	str	r0, [fp, #-36]	; 0xffffffdc
   3a3c0:	vmrs	APSR_nzcv, fpscr
   3a3c4:	vmov	r5, s2
   3a3c8:	bmi	3a3e0 <flatcc_json_printer_fmt_float@@Base+0x2b4>
   3a3cc:	vcvt.f64.s32	d17, s2
   3a3d0:	vsub.f64	d16, d16, d17
   3a3d4:	vcmp.f64	d16, #0.0
   3a3d8:	vmrs	APSR_nzcv, fpscr
   3a3dc:	addne	r5, r5, #1
   3a3e0:	movw	r0, #347	; 0x15b
   3a3e4:	bic	r1, r1, #1
   3a3e8:	add	r0, r5, r0
   3a3ec:	asr	r5, r0, #31
   3a3f0:	add	r0, r0, r5, lsr #29
   3a3f4:	mvn	r5, #14
   3a3f8:	and	r0, r5, r0, lsl #1
   3a3fc:	ldr	r5, [pc, #3128]	; 3b03c <flatcc_json_printer_fmt_float@@Base+0xf10>
   3a400:	add	r5, pc, r5
   3a404:	add	r0, r0, r5
   3a408:	ldrd	r8, [r0, #16]
   3a40c:	str	r0, [sp, #48]	; 0x30
   3a410:	umull	r0, r5, r9, ip
   3a414:	str	r0, [fp, #-40]	; 0xffffffd8
   3a418:	umull	r0, lr, r8, r6
   3a41c:	umaal	lr, r5, r9, r6
   3a420:	umull	r6, r3, r8, ip
   3a424:	ldr	r6, [fp, #-40]	; 0xffffffd8
   3a428:	adds	r0, r0, r3
   3a42c:	mov	r3, #0
   3a430:	adc	r3, r3, #0
   3a434:	adds	r0, r0, r6
   3a438:	adc	r3, r3, #0
   3a43c:	adds	r0, r0, #-2147483648	; 0x80000000
   3a440:	adcs	r0, lr, r3
   3a444:	adc	r3, r5, #0
   3a448:	adds	r0, r0, #1
   3a44c:	str	r0, [sp, #52]	; 0x34
   3a450:	adc	ip, r3, #0
   3a454:	umull	r0, r3, r9, sl
   3a458:	str	r0, [fp, #-40]	; 0xffffffd8
   3a45c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3a460:	umull	lr, r5, r8, r0
   3a464:	umaal	r5, r3, r9, r0
   3a468:	umull	r0, r6, r8, sl
   3a46c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3a470:	adds	sl, lr, r6
   3a474:	mov	r6, #0
   3a478:	mov	lr, ip
   3a47c:	adc	r6, r6, #0
   3a480:	adds	r0, sl, r0
   3a484:	adc	r6, r6, #0
   3a488:	adds	r0, r0, #-2147483648	; 0x80000000
   3a48c:	adcs	r0, r5, r6
   3a490:	umull	r6, r5, r9, r1
   3a494:	adc	r3, r3, #0
   3a498:	subs	ip, r0, #1
   3a49c:	sbc	sl, r3, #0
   3a4a0:	umull	r0, r3, r8, r2
   3a4a4:	umaal	r3, r5, r9, r2
   3a4a8:	umull	r1, r2, r8, r1
   3a4ac:	mov	r1, #0
   3a4b0:	ldr	r8, [sp, #52]	; 0x34
   3a4b4:	str	r1, [sp, #56]	; 0x38
   3a4b8:	mov	r1, #0
   3a4bc:	adds	r0, r0, r2
   3a4c0:	bic	r2, r6, #1
   3a4c4:	adc	r1, r1, #0
   3a4c8:	adds	r0, r0, r2
   3a4cc:	adc	r1, r1, #0
   3a4d0:	adds	r0, r0, #-2147483648	; 0x80000000
   3a4d4:	adcs	r0, r3, r1
   3a4d8:	str	r0, [sp, #32]
   3a4dc:	adc	r0, r5, #0
   3a4e0:	subs	r9, r8, ip
   3a4e4:	str	r0, [sp, #36]	; 0x24
   3a4e8:	sbcs	r0, lr, sl
   3a4ec:	str	r0, [fp, #-36]	; 0xffffffdc
   3a4f0:	bcc	3afdc <flatcc_json_printer_fmt_float@@Base+0xeb0>
   3a4f4:	ldr	r0, [sp, #48]	; 0x30
   3a4f8:	ldrsh	r0, [r0, #24]
   3a4fc:	add	r0, r0, #64	; 0x40
   3a500:	add	r1, r0, r4
   3a504:	add	r2, r0, r7
   3a508:	movw	r7, #1233	; 0x4d1
   3a50c:	str	r1, [sp, #28]
   3a510:	mvn	r1, #31
   3a514:	str	r2, [sp, #24]
   3a518:	rsb	ip, r2, #0
   3a51c:	add	r3, r2, #32
   3a520:	subs	r5, r1, r2
   3a524:	movw	r1, #14609	; 0x3911
   3a528:	lsr	r0, r8, ip
   3a52c:	movt	r1, #1
   3a530:	orr	r0, r0, lr, lsl r3
   3a534:	lsrpl	r0, lr, r5
   3a538:	mla	r6, r2, r7, r1
   3a53c:	mov	r1, #1
   3a540:	mov	r2, #1
   3a544:	lsr	r3, r2, r3
   3a548:	add	r4, r1, r6, asr #12
   3a54c:	ldr	r1, [pc, #2796]	; 3b040 <flatcc_json_printer_fmt_float@@Base+0xf14>
   3a550:	add	r1, pc, r1
   3a554:	ldr	r7, [r1, r4, lsl #2]
   3a558:	cmp	r7, r0
   3a55c:	lsl	r7, r2, ip
   3a560:	asrhi	r4, r6, #12
   3a564:	cmp	r5, #0
   3a568:	movwpl	r7, #0
   3a56c:	lslpl	r3, r2, r5
   3a570:	subs	r5, r7, #1
   3a574:	str	r7, [sp, #60]	; 0x3c
   3a578:	sbc	r6, r3, #0
   3a57c:	and	r8, r8, r5
   3a580:	cmp	r4, #0
   3a584:	str	r3, [sp, #20]
   3a588:	str	lr, [sp, #40]	; 0x28
   3a58c:	str	ip, [fp, #-40]	; 0xffffffd8
   3a590:	str	r5, [fp, #-44]	; 0xffffffd4
   3a594:	and	r2, lr, r6
   3a598:	str	r6, [fp, #-48]	; 0xffffffd0
   3a59c:	ble	3a618 <flatcc_json_printer_fmt_float@@Base+0x4ec>
   3a5a0:	ldr	sl, [r1, r4, lsl #2]
   3a5a4:	sub	r1, r4, #1
   3a5a8:	mov	lr, #0
   3a5ac:	str	r1, [fp, #-52]	; 0xffffffcc
   3a5b0:	udiv	r1, r0, sl
   3a5b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a5b8:	subs	r4, ip, #32
   3a5bc:	mls	r0, r1, sl, r0
   3a5c0:	add	r6, r1, #48	; 0x30
   3a5c4:	rsb	r1, ip, #32
   3a5c8:	strb	r6, [r3, lr]
   3a5cc:	lsr	r3, r0, r1
   3a5d0:	lsl	r7, r0, ip
   3a5d4:	lslpl	r3, r0, r4
   3a5d8:	movwpl	r7, #0
   3a5dc:	adds	r7, r7, r8
   3a5e0:	adc	r3, r3, r2
   3a5e4:	subs	r5, r7, r9
   3a5e8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   3a5ec:	sbcs	r5, r3, r5
   3a5f0:	bcc	3a630 <flatcc_json_printer_fmt_float@@Base+0x504>
   3a5f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3a5f8:	cmp	r1, lr
   3a5fc:	beq	3a77c <flatcc_json_printer_fmt_float@@Base+0x650>
   3a600:	movw	r1, #52429	; 0xcccd
   3a604:	add	lr, lr, #1
   3a608:	movt	r1, #52428	; 0xcccc
   3a60c:	umull	r1, r3, sl, r1
   3a610:	lsr	sl, r3, #3
   3a614:	b	3a5b0 <flatcc_json_printer_fmt_float@@Base+0x484>
   3a618:	mov	r1, r2
   3a61c:	b	3a790 <flatcc_json_printer_fmt_float@@Base+0x664>
   3a620:			; <UNDEFINED> instruction: 0xffffffff
   3a624:	svcvc	0x00efffff
   3a628:			; <UNDEFINED> instruction: 0x509f79fe
   3a62c:	svccc	0x00d34413
   3a630:	str	lr, [fp, #-44]	; 0xffffffd4
   3a634:	ldr	r8, [sp, #52]	; 0x34
   3a638:	ldr	r0, [sp, #32]
   3a63c:	subs	r2, r8, r0
   3a640:	str	r2, [sp, #60]	; 0x3c
   3a644:	ldr	lr, [sp, #40]	; 0x28
   3a648:	ldr	r5, [sp, #36]	; 0x24
   3a64c:	sbc	r2, lr, r5
   3a650:	str	r2, [sp, #56]	; 0x38
   3a654:	ldr	r2, [sp, #28]
   3a658:	ldr	ip, [sp, #24]
   3a65c:	cmp	r2, ip
   3a660:	bne	3afdc <flatcc_json_printer_fmt_float@@Base+0xeb0>
   3a664:	subs	r0, r8, r0
   3a668:	sbcs	r0, lr, r5
   3a66c:	bcc	3afdc <flatcc_json_printer_fmt_float@@Base+0xeb0>
   3a670:	ldr	r5, [fp, #-36]	; 0xffffffdc
   3a674:	lsr	lr, sl, r1
   3a678:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3a67c:	subs	r0, r9, r7
   3a680:	sbc	r2, r5, r3
   3a684:	cmp	r4, #0
   3a688:	lsl	r8, sl, r1
   3a68c:	mov	r1, #0
   3a690:	lslpl	lr, sl, r4
   3a694:	movwpl	r8, #0
   3a698:	str	r2, [fp, #-40]	; 0xffffffd8
   3a69c:	subs	r5, r0, r8
   3a6a0:	sbcs	r5, r2, lr
   3a6a4:	ldr	r5, [sp, #60]	; 0x3c
   3a6a8:	movwcc	r1, #1
   3a6ac:	adds	r2, r5, #1
   3a6b0:	str	r2, [fp, #-48]	; 0xffffffd0
   3a6b4:	ldr	r4, [sp, #56]	; 0x38
   3a6b8:	adc	r2, r4, #0
   3a6bc:	subs	sl, r5, #1
   3a6c0:	sbc	ip, r4, #0
   3a6c4:	subs	r4, r7, sl
   3a6c8:	str	r2, [fp, #-56]	; 0xffffffc8
   3a6cc:	sbcs	r4, r3, ip
   3a6d0:	bcs	3aa70 <flatcc_json_printer_fmt_float@@Base+0x944>
   3a6d4:	subs	r0, r0, r8
   3a6d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3a6dc:	sbcs	r0, r0, lr
   3a6e0:	bcc	3aa70 <flatcc_json_printer_fmt_float@@Base+0x944>
   3a6e4:	adds	r0, r7, r8
   3a6e8:	adc	r4, r3, lr
   3a6ec:	subs	r1, r0, sl
   3a6f0:	sbcs	r1, r4, ip
   3a6f4:	bcc	3a72c <flatcc_json_printer_fmt_float@@Base+0x600>
   3a6f8:	subs	r1, r0, sl
   3a6fc:	mov	r5, lr
   3a700:	mov	lr, r8
   3a704:	sbc	r2, r4, ip
   3a708:	str	r2, [fp, #-40]	; 0xffffffd8
   3a70c:	subs	r2, sl, r7
   3a710:	sbc	r8, ip, r3
   3a714:	subs	r1, r2, r1
   3a718:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3a71c:	sbcs	r1, r8, r1
   3a720:	mov	r8, lr
   3a724:	mov	lr, r5
   3a728:	bcc	3aa6c <flatcc_json_printer_fmt_float@@Base+0x940>
   3a72c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3a730:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3a734:	sub	r6, r6, #1
   3a738:	subs	r3, r9, r0
   3a73c:	strb	r6, [r2, r1]
   3a740:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3a744:	sbc	r7, r1, r4
   3a748:	subs	r1, r3, r8
   3a74c:	sbcs	r1, r7, lr
   3a750:	mov	r1, #0
   3a754:	movwcc	r1, #1
   3a758:	subs	r5, r0, sl
   3a75c:	sbcs	r5, r4, ip
   3a760:	bcs	3aa78 <flatcc_json_printer_fmt_float@@Base+0x94c>
   3a764:	subs	r3, r3, r8
   3a768:	sbcs	r3, r7, lr
   3a76c:	mov	r7, r0
   3a770:	mov	r3, r4
   3a774:	bcs	3a6e4 <flatcc_json_printer_fmt_float@@Base+0x5b8>
   3a778:	b	3aa78 <flatcc_json_printer_fmt_float@@Base+0x94c>
   3a77c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3a780:	mov	r1, r2
   3a784:	sub	r4, r0, lr
   3a788:	add	r0, lr, #1
   3a78c:	str	r0, [sp, #56]	; 0x38
   3a790:	rsb	r0, ip, #32
   3a794:	mov	r3, r1
   3a798:	mov	r5, #0
   3a79c:	mov	r1, r8
   3a7a0:	str	r0, [fp, #-52]	; 0xffffffcc
   3a7a4:	sub	r0, ip, #32
   3a7a8:	mov	ip, #1
   3a7ac:	str	r0, [fp, #-56]	; 0xffffffc8
   3a7b0:	mov	r0, r9
   3a7b4:	ldr	lr, [sp, #56]	; 0x38
   3a7b8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   3a7bc:	mov	r2, #10
   3a7c0:	mov	sl, r5
   3a7c4:	mov	r8, ip
   3a7c8:	add	r6, r6, r6, lsl #2
   3a7cc:	umull	r2, r7, r1, r2
   3a7d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3a7d4:	add	r9, sl, sl, lsl #2
   3a7d8:	lsr	r5, r2, r1
   3a7dc:	mov	r1, r4
   3a7e0:	add	r4, r3, r3, lsl #2
   3a7e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a7e8:	add	r4, r7, r4, lsl #1
   3a7ec:	orr	r7, r5, r4, lsl r3
   3a7f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a7f4:	cmp	r3, #0
   3a7f8:	lsrpl	r7, r4, r3
   3a7fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a800:	add	r7, r7, #48	; 0x30
   3a804:	strb	r7, [r3, lr]
   3a808:	mov	r3, #10
   3a80c:	add	lr, lr, #1
   3a810:	umull	ip, r5, ip, r3
   3a814:	umull	r0, r3, r0, r3
   3a818:	add	r6, r3, r6, lsl #1
   3a81c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a820:	add	r5, r5, r9, lsl #1
   3a824:	and	r3, r4, r3
   3a828:	mov	r4, r1
   3a82c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3a830:	sub	r4, r4, #1
   3a834:	and	r1, r2, r1
   3a838:	subs	r2, r1, r0
   3a83c:	sbcs	r2, r3, r6
   3a840:	bcs	3a7bc <flatcc_json_printer_fmt_float@@Base+0x690>
   3a844:	str	r1, [fp, #-52]	; 0xffffffcc
   3a848:	str	r3, [sp, #16]
   3a84c:	str	r9, [sp, #12]
   3a850:	str	r8, [fp, #-56]	; 0xffffffc8
   3a854:	stmib	sp, {r4, sl}
   3a858:	str	r0, [fp, #-40]	; 0xffffffd8
   3a85c:	str	lr, [sp, #56]	; 0x38
   3a860:	ldr	r0, [sp, #28]
   3a864:	ldr	r1, [sp, #24]
   3a868:	ldr	r2, [sp, #52]	; 0x34
   3a86c:	ldr	r3, [sp, #36]	; 0x24
   3a870:	ldr	r4, [sp, #32]
   3a874:	cmp	r0, r1
   3a878:	ldr	r0, [sp, #40]	; 0x28
   3a87c:	bne	3afdc <flatcc_json_printer_fmt_float@@Base+0xeb0>
   3a880:	subs	r1, r2, r4
   3a884:	sbcs	r1, r0, r3
   3a888:	bcc	3afdc <flatcc_json_printer_fmt_float@@Base+0xeb0>
   3a88c:	subs	r1, r2, r4
   3a890:	sbc	r2, r0, r3
   3a894:	umull	r3, r4, ip, r1
   3a898:	mla	r2, ip, r2, r4
   3a89c:	mla	r1, r5, r1, r2
   3a8a0:	adds	r8, r3, ip
   3a8a4:	adc	r0, r1, r5
   3a8a8:	subs	r4, r3, ip
   3a8ac:	mov	ip, #0
   3a8b0:	str	r0, [sp, #52]	; 0x34
   3a8b4:	sbc	r3, r1, r5
   3a8b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3a8bc:	ldr	r9, [fp, #-52]	; 0xffffffcc
   3a8c0:	ldr	sl, [sp, #16]
   3a8c4:	ldr	lr, [sp, #20]
   3a8c8:	subs	r1, r0, r9
   3a8cc:	ldr	r0, [sp, #60]	; 0x3c
   3a8d0:	str	r6, [fp, #-36]	; 0xffffffdc
   3a8d4:	str	r8, [sp, #40]	; 0x28
   3a8d8:	sbc	r2, r6, sl
   3a8dc:	subs	r1, r1, r0
   3a8e0:	sbcs	r1, r2, lr
   3a8e4:	movwcc	ip, #1
   3a8e8:	cmp	ip, #0
   3a8ec:	bne	3a9b4 <flatcc_json_printer_fmt_float@@Base+0x888>
   3a8f0:	subs	r1, r9, r4
   3a8f4:	sbcs	r1, sl, r3
   3a8f8:	bcs	3a9a4 <flatcc_json_printer_fmt_float@@Base+0x878>
   3a8fc:	str	r4, [fp, #-44]	; 0xffffffd4
   3a900:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3a904:	ldr	r2, [sp, #56]	; 0x38
   3a908:	add	r1, r1, r2
   3a90c:	str	r1, [fp, #-48]	; 0xffffffd0
   3a910:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3a914:	ldr	r8, [fp, #-44]	; 0xffffffd4
   3a918:	adds	r9, r1, r0
   3a91c:	mov	r4, r1
   3a920:	adc	r2, sl, lr
   3a924:	subs	r1, r9, r8
   3a928:	sbcs	r1, r2, r3
   3a92c:	bcc	3a950 <flatcc_json_printer_fmt_float@@Base+0x824>
   3a930:	subs	r1, r9, r8
   3a934:	sbc	ip, r2, r3
   3a938:	subs	r5, r8, r4
   3a93c:	sbc	r6, r3, sl
   3a940:	subs	r1, r5, r1
   3a944:	sbcs	r1, r6, ip
   3a948:	ldr	r6, [fp, #-36]	; 0xffffffdc
   3a94c:	bcc	3a9ac <flatcc_json_printer_fmt_float@@Base+0x880>
   3a950:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3a954:	sub	r7, r7, #1
   3a958:	mov	ip, #0
   3a95c:	strb	r7, [r0, #-1]
   3a960:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3a964:	subs	r5, r0, r9
   3a968:	ldr	r0, [sp, #60]	; 0x3c
   3a96c:	sbc	r1, r6, r2
   3a970:	subs	r6, r5, r0
   3a974:	sbcs	r6, r1, lr
   3a978:	movwcc	ip, #1
   3a97c:	subs	r4, r9, r8
   3a980:	sbcs	r4, r2, r3
   3a984:	bcs	3a9b8 <flatcc_json_printer_fmt_float@@Base+0x88c>
   3a988:	ldr	r6, [fp, #-36]	; 0xffffffdc
   3a98c:	subs	r4, r5, r0
   3a990:	mov	sl, r2
   3a994:	sbcs	r1, r1, lr
   3a998:	mov	r1, r9
   3a99c:	bcs	3a918 <flatcc_json_printer_fmt_float@@Base+0x7ec>
   3a9a0:	b	3a9b8 <flatcc_json_printer_fmt_float@@Base+0x88c>
   3a9a4:	ldr	r9, [fp, #-52]	; 0xffffffcc
   3a9a8:	b	3a9b4 <flatcc_json_printer_fmt_float@@Base+0x888>
   3a9ac:	mov	ip, #0
   3a9b0:	mov	r9, r4
   3a9b4:	mov	r2, sl
   3a9b8:	ldr	r5, [sp, #40]	; 0x28
   3a9bc:	ldr	r3, [sp, #52]	; 0x34
   3a9c0:	ldr	r4, [fp, #-56]	; 0xffffffc8
   3a9c4:	subs	r1, r9, r5
   3a9c8:	sbcs	r1, r2, r3
   3a9cc:	bcs	3aa08 <flatcc_json_printer_fmt_float@@Base+0x8dc>
   3a9d0:	cmp	ip, #0
   3a9d4:	bne	3aa08 <flatcc_json_printer_fmt_float@@Base+0x8dc>
   3a9d8:	adds	r1, r9, r0
   3a9dc:	adc	r7, r2, lr
   3a9e0:	subs	r6, r1, r5
   3a9e4:	sbcs	r6, r7, r3
   3a9e8:	bcc	3aaf8 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   3a9ec:	subs	r6, r5, r9
   3a9f0:	sbc	r0, r3, r2
   3a9f4:	subs	r1, r1, r5
   3a9f8:	sbc	r7, r7, r3
   3a9fc:	subs	r1, r1, r6
   3aa00:	sbcs	r1, r7, r0
   3aa04:	bcc	3aaf8 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   3aa08:	mov	r1, #20
   3aa0c:	ldr	r0, [sp, #12]
   3aa10:	umull	r1, r7, r4, r1
   3aa14:	add	r7, r7, r0, lsl #2
   3aa18:	subs	r1, r9, r1
   3aa1c:	sbcs	r1, r2, r7
   3aa20:	bcc	3aaf8 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   3aa24:	mvn	r5, #0
   3aa28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3aa2c:	subs	r1, r5, #39	; 0x27
   3aa30:	umull	r7, r6, r4, r1
   3aa34:	sbc	r5, r5, #0
   3aa38:	mla	r0, r4, r5, r6
   3aa3c:	ldr	r6, [sp, #8]
   3aa40:	mla	r0, r6, r1, r0
   3aa44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3aa48:	adds	r1, r7, r1
   3aa4c:	adc	r0, r0, r3
   3aa50:	subs	r1, r1, r9
   3aa54:	sbcs	r0, r0, r2
   3aa58:	bcc	3aaf8 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   3aa5c:	ldr	r4, [sp, #56]	; 0x38
   3aa60:	ldr	r5, [sp, #4]
   3aa64:	sub	r2, r4, #1
   3aa68:	b	3ab34 <flatcc_json_printer_fmt_float@@Base+0xa08>
   3aa6c:	mov	r1, #0
   3aa70:	mov	r0, r7
   3aa74:	mov	r4, r3
   3aa78:	ldr	r6, [fp, #-48]	; 0xffffffd0
   3aa7c:	ldr	r5, [fp, #-56]	; 0xffffffc8
   3aa80:	subs	r3, r0, r6
   3aa84:	sbcs	r3, r4, r5
   3aa88:	bcs	3aad4 <flatcc_json_printer_fmt_float@@Base+0x9a8>
   3aa8c:	cmp	r1, #0
   3aa90:	bne	3aad4 <flatcc_json_printer_fmt_float@@Base+0x9a8>
   3aa94:	adds	r1, r0, r8
   3aa98:	adc	r3, r4, lr
   3aa9c:	subs	r7, r1, r6
   3aaa0:	sbcs	r7, r3, r5
   3aaa4:	bcc	3aaf8 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   3aaa8:	subs	r1, r1, r6
   3aaac:	sbc	r3, r3, r5
   3aab0:	subs	r7, r6, r0
   3aab4:	sbc	r6, r5, r4
   3aab8:	subs	r5, r0, #2
   3aabc:	sbcs	r5, r4, #0
   3aac0:	bcc	3aaf8 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   3aac4:	subs	r1, r1, r7
   3aac8:	sbcs	r1, r3, r6
   3aacc:	bcs	3aae0 <flatcc_json_printer_fmt_float@@Base+0x9b4>
   3aad0:	b	3aaf8 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   3aad4:	subs	r1, r0, #2
   3aad8:	sbcs	r1, r4, #0
   3aadc:	bcc	3aaf8 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   3aae0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3aae4:	subs	r1, r9, #4
   3aae8:	sbc	r2, r2, #0
   3aaec:	subs	r0, r1, r0
   3aaf0:	sbcs	r0, r2, r4
   3aaf4:	bcs	3ab24 <flatcc_json_printer_fmt_float@@Base+0x9f8>
   3aaf8:	ldr	r1, [pc, #1348]	; 3b044 <flatcc_json_printer_fmt_float@@Base+0xf18>
   3aafc:	ldr	r4, [fp, #-32]	; 0xffffffe0
   3ab00:	vmov	r2, r3, d0
   3ab04:	add	r1, pc, r1
   3ab08:	mov	r0, r4
   3ab0c:	bl	14f20 <sprintf@plt>
   3ab10:	ldr	r1, [sp, #44]	; 0x2c
   3ab14:	sub	r1, r4, r1
   3ab18:	add	r0, r1, r0
   3ab1c:	sub	sp, fp, #28
   3ab20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ab24:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3ab28:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3ab2c:	sub	r5, r0, r2
   3ab30:	add	r4, r2, #1
   3ab34:	ldr	r0, [sp, #48]	; 0x30
   3ab38:	cmp	r4, #3
   3ab3c:	ldrsh	r9, [r0, #26]
   3ab40:	sub	r0, r4, #1
   3ab44:	movwlt	r0, #1
   3ab48:	sub	r8, r5, r9
   3ab4c:	rsb	r3, r8, #0
   3ab50:	cmp	r0, r3
   3ab54:	movge	r0, r3
   3ab58:	cmn	r8, #1
   3ab5c:	ble	3ab84 <flatcc_json_printer_fmt_float@@Base+0xa58>
   3ab60:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3ab64:	cmp	r8, #3
   3ab68:	bcc	3ac40 <flatcc_json_printer_fmt_float@@Base+0xb14>
   3ab6c:	add	lr, r4, #1
   3ab70:	mov	r0, #101	; 0x65
   3ab74:	add	r9, r1, lr
   3ab78:	strb	r0, [r1, r4]
   3ab7c:	mov	sl, r9
   3ab80:	b	3ad6c <flatcc_json_printer_fmt_float@@Base+0xc40>
   3ab84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3ab88:	cmp	r4, r3
   3ab8c:	bgt	3ac6c <flatcc_json_printer_fmt_float@@Base+0xb40>
   3ab90:	add	r6, r8, r4
   3ab94:	cmn	r6, #2
   3ab98:	blt	3ac6c <flatcc_json_printer_fmt_float@@Base+0xb40>
   3ab9c:	add	r7, r1, #2
   3aba0:	mvn	r0, r2
   3aba4:	add	r2, r7, r3
   3aba8:	add	r0, r2, r0
   3abac:	mov	r2, r4
   3abb0:	bl	14e3c <memmove@plt>
   3abb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3abb8:	movw	r0, #11824	; 0x2e30
   3abbc:	rsb	r6, r6, #2
   3abc0:	cmp	r6, #3
   3abc4:	strh	r0, [r1]
   3abc8:	mov	r0, #2
   3abcc:	blt	3ac34 <flatcc_json_printer_fmt_float@@Base+0xb08>
   3abd0:	sub	r0, r9, r5
   3abd4:	mov	r1, #48	; 0x30
   3abd8:	sub	r8, r0, r4
   3abdc:	mov	r0, r7
   3abe0:	mov	r2, r8
   3abe4:	bl	14ee4 <memset@plt>
   3abe8:	mvn	r0, r5
   3abec:	mov	r2, r4
   3abf0:	add	r0, r0, r9
   3abf4:	sub	r1, r0, r4
   3abf8:	and	r0, r8, #7
   3abfc:	cmp	r1, #7
   3ac00:	bcc	3ac18 <flatcc_json_printer_fmt_float@@Base+0xaec>
   3ac04:	add	r1, r5, r2
   3ac08:	add	r1, r1, r0
   3ac0c:	sub	r1, r1, r9
   3ac10:	adds	r1, r1, #8
   3ac14:	bne	3ac10 <flatcc_json_printer_fmt_float@@Base+0xae4>
   3ac18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3ac1c:	cmp	r0, #0
   3ac20:	beq	3ac2c <flatcc_json_printer_fmt_float@@Base+0xb00>
   3ac24:	subs	r0, r0, #1
   3ac28:	bne	3ac24 <flatcc_json_printer_fmt_float@@Base+0xaf8>
   3ac2c:	mov	r0, r6
   3ac30:	mov	r4, r2
   3ac34:	ldr	ip, [sp, #44]	; 0x2c
   3ac38:	add	r4, r0, r4
   3ac3c:	b	3aeb4 <flatcc_json_printer_fmt_float@@Base+0xd88>
   3ac40:	cmp	r8, #0
   3ac44:	beq	3ad0c <flatcc_json_printer_fmt_float@@Base+0xbe0>
   3ac48:	add	r0, r1, r4
   3ac4c:	mov	r1, #48	; 0x30
   3ac50:	mov	r2, r8
   3ac54:	bl	14ee4 <memset@plt>
   3ac58:	cmp	r8, #4
   3ac5c:	bcs	3ad14 <flatcc_json_printer_fmt_float@@Base+0xbe8>
   3ac60:	ldr	ip, [sp, #44]	; 0x2c
   3ac64:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3ac68:	b	3aea4 <flatcc_json_printer_fmt_float@@Base+0xd78>
   3ac6c:	cmp	r4, #2
   3ac70:	blt	3ad50 <flatcc_json_printer_fmt_float@@Base+0xc24>
   3ac74:	ldr	ip, [sp, #44]	; 0x2c
   3ac78:	cmp	r0, #1
   3ac7c:	blt	3acd4 <flatcc_json_printer_fmt_float@@Base+0xba8>
   3ac80:	and	r7, r0, #1
   3ac84:	mov	r2, #0
   3ac88:	beq	3acbc <flatcc_json_printer_fmt_float@@Base+0xb90>
   3ac8c:	mov	lr, r4
   3ac90:	add	r2, r1, r4
   3ac94:	sub	r6, r7, r0
   3ac98:	mov	r3, #0
   3ac9c:	add	r5, r2, r3
   3aca0:	sub	r3, r3, #2
   3aca4:	ldrh	r4, [r5, #-2]
   3aca8:	cmp	r6, r3
   3acac:	strh	r4, [r5, #-1]
   3acb0:	bne	3ac9c <flatcc_json_printer_fmt_float@@Base+0xb70>
   3acb4:	rsb	r2, r3, #0
   3acb8:	mov	r4, lr
   3acbc:	cmp	r7, #0
   3acc0:	beq	3acd4 <flatcc_json_printer_fmt_float@@Base+0xba8>
   3acc4:	sub	r3, r4, r2
   3acc8:	add	r2, r1, r3
   3accc:	ldrb	r2, [r2, #-1]
   3acd0:	strb	r2, [r1, r3]
   3acd4:	sub	r3, r4, r0
   3acd8:	mov	r2, #46	; 0x2e
   3acdc:	adds	r7, r0, r8
   3ace0:	add	r0, r4, #1
   3ace4:	strb	r2, [r1, r3]
   3ace8:	beq	3aec8 <flatcc_json_printer_fmt_float@@Base+0xd9c>
   3acec:	add	lr, r4, #2
   3acf0:	mov	r2, #101	; 0x65
   3acf4:	cmn	r7, #1
   3acf8:	add	r8, r1, lr
   3acfc:	strb	r2, [r1, r0]
   3ad00:	ble	3aed0 <flatcc_json_printer_fmt_float@@Base+0xda4>
   3ad04:	mov	r9, r8
   3ad08:	b	3aee0 <flatcc_json_printer_fmt_float@@Base+0xdb4>
   3ad0c:	ldr	ip, [sp, #44]	; 0x2c
   3ad10:	b	3aeb4 <flatcc_json_printer_fmt_float@@Base+0xd88>
   3ad14:	mov	r0, #0
   3ad18:	mov	r1, #1
   3ad1c:	vdup.32	q8, r0
   3ad20:	bic	r0, r8, #3
   3ad24:	sub	r3, r0, #4
   3ad28:	add	r2, r1, r3, lsr #2
   3ad2c:	cmp	r3, #12
   3ad30:	and	r7, r2, #3
   3ad34:	vmov.32	d16[0], r4
   3ad38:	bcs	3ae4c <flatcc_json_printer_fmt_float@@Base+0xd20>
   3ad3c:	ldr	ip, [sp, #44]	; 0x2c
   3ad40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3ad44:	cmp	r7, #0
   3ad48:	bne	3ae70 <flatcc_json_printer_fmt_float@@Base+0xd44>
   3ad4c:	b	3ae84 <flatcc_json_printer_fmt_float@@Base+0xd58>
   3ad50:	add	lr, r4, #1
   3ad54:	add	r0, r1, r4
   3ad58:	movw	r2, #11621	; 0x2d65
   3ad5c:	mov	r8, r3
   3ad60:	add	r9, r1, lr
   3ad64:	strh	r2, [r0]
   3ad68:	add	sl, r9, #1
   3ad6c:	movw	r0, #26215	; 0x6667
   3ad70:	mov	r3, sl
   3ad74:	movt	r0, #26214	; 0x6666
   3ad78:	smmul	r6, r8, r0
   3ad7c:	asr	r5, r6, #2
   3ad80:	add	r7, r5, r6, lsr #31
   3ad84:	add	r6, r7, r7, lsl #2
   3ad88:	sub	r6, r8, r6, lsl #1
   3ad8c:	add	r6, r6, #48	; 0x30
   3ad90:	strb	r6, [r3], #1
   3ad94:	add	r6, r8, #9
   3ad98:	mov	r8, r7
   3ad9c:	cmp	r6, #18
   3ada0:	bhi	3ad78 <flatcc_json_printer_fmt_float@@Base+0xc4c>
   3ada4:	mov	r5, #0
   3ada8:	mov	r8, r3
   3adac:	strb	r5, [r8], -sl
   3adb0:	cmp	r8, #2
   3adb4:	blt	3ae38 <flatcc_json_printer_fmt_float@@Base+0xd0c>
   3adb8:	add	r0, r8, r8, lsr #31
   3adbc:	bic	r4, r8, #1
   3adc0:	cmp	r4, #2
   3adc4:	asr	r0, r0, #1
   3adc8:	and	ip, r0, #1
   3adcc:	beq	3ae18 <flatcc_json_printer_fmt_float@@Base+0xcec>
   3add0:	sub	r5, ip, r0
   3add4:	sub	r4, r3, #2
   3add8:	add	r0, sl, #1
   3addc:	mov	r6, #0
   3ade0:	add	r1, r4, r6
   3ade4:	ldrb	r7, [r0, #-1]
   3ade8:	ldrb	r2, [r1, #1]
   3adec:	strb	r2, [r0, #-1]
   3adf0:	strb	r7, [r1, #1]
   3adf4:	ldrb	r1, [r4, r6]
   3adf8:	ldrb	r2, [r0]
   3adfc:	strb	r1, [r0]
   3ae00:	strb	r2, [r4, r6]
   3ae04:	sub	r6, r6, #2
   3ae08:	add	r0, r0, #2
   3ae0c:	cmp	r5, r6
   3ae10:	bne	3ade0 <flatcc_json_printer_fmt_float@@Base+0xcb4>
   3ae14:	rsb	r5, r6, #0
   3ae18:	cmp	ip, #0
   3ae1c:	beq	3ae38 <flatcc_json_printer_fmt_float@@Base+0xd0c>
   3ae20:	mvn	r1, r5
   3ae24:	ldrb	r0, [sl, r5]
   3ae28:	add	r1, r8, r1
   3ae2c:	ldrb	r2, [sl, r1]
   3ae30:	strb	r2, [sl, r5]
   3ae34:	strb	r0, [sl, r1]
   3ae38:	ldr	ip, [sp, #44]	; 0x2c
   3ae3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3ae40:	sub	r0, lr, r9
   3ae44:	add	r4, r0, r3
   3ae48:	b	3aeb4 <flatcc_json_printer_fmt_float@@Base+0xd88>
   3ae4c:	ldr	ip, [sp, #44]	; 0x2c
   3ae50:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3ae54:	vmov.i32	q9, #4	; 0x00000004
   3ae58:	sub	r2, r7, r2
   3ae5c:	vadd.i32	q8, q8, q9
   3ae60:	adds	r2, r2, #4
   3ae64:	bne	3ae5c <flatcc_json_printer_fmt_float@@Base+0xd30>
   3ae68:	cmp	r7, #0
   3ae6c:	beq	3ae84 <flatcc_json_printer_fmt_float@@Base+0xd58>
   3ae70:	vmov.i32	q9, #1	; 0x00000001
   3ae74:	rsb	r2, r7, #0
   3ae78:	vadd.i32	q8, q8, q9
   3ae7c:	adds	r2, r2, #1
   3ae80:	bcc	3ae78 <flatcc_json_printer_fmt_float@@Base+0xd4c>
   3ae84:	vext.8	q9, q8, q8, #8
   3ae88:	cmp	r8, r0
   3ae8c:	vadd.i32	q8, q8, q9
   3ae90:	vdup.32	q9, d16[1]
   3ae94:	vadd.i32	q8, q8, q9
   3ae98:	vmov.32	r4, d16[0]
   3ae9c:	beq	3aeb4 <flatcc_json_printer_fmt_float@@Base+0xd88>
   3aea0:	sub	r8, r8, r0
   3aea4:	sub	r8, r8, #1
   3aea8:	add	r4, r4, #1
   3aeac:	cmp	r8, #0
   3aeb0:	bgt	3aea4 <flatcc_json_printer_fmt_float@@Base+0xd78>
   3aeb4:	mov	r0, #0
   3aeb8:	strb	r0, [r1, r4]!
   3aebc:	sub	r0, r1, ip
   3aec0:	sub	sp, fp, #28
   3aec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3aec8:	mov	r4, r0
   3aecc:	b	3aeb4 <flatcc_json_printer_fmt_float@@Base+0xd88>
   3aed0:	mov	r0, #45	; 0x2d
   3aed4:	mov	r9, r8
   3aed8:	rsb	r7, r7, #0
   3aedc:	strb	r0, [r9], #1
   3aee0:	movw	r0, #26215	; 0x6667
   3aee4:	mov	r3, r9
   3aee8:	movt	r0, #26214	; 0x6666
   3aeec:	smmul	r6, r7, r0
   3aef0:	asr	r5, r6, #2
   3aef4:	add	r6, r5, r6, lsr #31
   3aef8:	add	r5, r6, r6, lsl #2
   3aefc:	sub	r5, r7, r5, lsl #1
   3af00:	add	r7, r7, #9
   3af04:	cmp	r7, #18
   3af08:	mov	r7, r6
   3af0c:	add	r5, r5, #48	; 0x30
   3af10:	strb	r5, [r3], #1
   3af14:	bhi	3aeec <flatcc_json_printer_fmt_float@@Base+0xdc0>
   3af18:	mov	r5, #0
   3af1c:	mov	sl, r3
   3af20:	strb	r5, [sl], -r9
   3af24:	cmp	sl, #2
   3af28:	blt	3afb0 <flatcc_json_printer_fmt_float@@Base+0xe84>
   3af2c:	add	r0, sl, sl, lsr #31
   3af30:	bic	r4, sl, #1
   3af34:	cmp	r4, #2
   3af38:	asr	r0, r0, #1
   3af3c:	and	ip, r0, #1
   3af40:	beq	3af8c <flatcc_json_printer_fmt_float@@Base+0xe60>
   3af44:	sub	r5, ip, r0
   3af48:	sub	r4, r3, #2
   3af4c:	add	r0, r9, #1
   3af50:	mov	r6, #0
   3af54:	add	r1, r4, r6
   3af58:	ldrb	r7, [r0, #-1]
   3af5c:	ldrb	r2, [r1, #1]
   3af60:	strb	r2, [r0, #-1]
   3af64:	strb	r7, [r1, #1]
   3af68:	ldrb	r1, [r4, r6]
   3af6c:	ldrb	r2, [r0]
   3af70:	strb	r1, [r0]
   3af74:	strb	r2, [r4, r6]
   3af78:	sub	r6, r6, #2
   3af7c:	add	r0, r0, #2
   3af80:	cmp	r5, r6
   3af84:	bne	3af54 <flatcc_json_printer_fmt_float@@Base+0xe28>
   3af88:	rsb	r5, r6, #0
   3af8c:	cmp	ip, #0
   3af90:	ldr	ip, [sp, #44]	; 0x2c
   3af94:	beq	3afb0 <flatcc_json_printer_fmt_float@@Base+0xe84>
   3af98:	mvn	r1, r5
   3af9c:	ldrb	r0, [r9, r5]
   3afa0:	add	r1, sl, r1
   3afa4:	ldrb	r2, [r9, r1]
   3afa8:	strb	r2, [r9, r5]
   3afac:	strb	r0, [r9, r1]
   3afb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3afb4:	sub	r0, lr, r8
   3afb8:	b	3ae44 <flatcc_json_printer_fmt_float@@Base+0xd18>
   3afbc:	ldr	r0, [pc, #132]	; 3b048 <flatcc_json_printer_fmt_float@@Base+0xf1c>
   3afc0:	ldr	r1, [pc, #132]	; 3b04c <flatcc_json_printer_fmt_float@@Base+0xf20>
   3afc4:	ldr	r3, [pc, #132]	; 3b050 <flatcc_json_printer_fmt_float@@Base+0xf24>
   3afc8:	mov	r2, #189	; 0xbd
   3afcc:	add	r0, pc, r0
   3afd0:	add	r1, pc, r1
   3afd4:	add	r3, pc, r3
   3afd8:	bl	14f38 <__assert_fail@plt>
   3afdc:	ldr	r0, [pc, #128]	; 3b064 <flatcc_json_printer_fmt_float@@Base+0xf38>
   3afe0:	ldr	r1, [pc, #128]	; 3b068 <flatcc_json_printer_fmt_float@@Base+0xf3c>
   3afe4:	ldr	r3, [pc, #128]	; 3b06c <flatcc_json_printer_fmt_float@@Base+0xf40>
   3afe8:	mov	r2, #239	; 0xef
   3afec:	add	r0, pc, r0
   3aff0:	add	r1, pc, r1
   3aff4:	add	r3, pc, r3
   3aff8:	bl	14f38 <__assert_fail@plt>
   3affc:	ldr	r0, [pc, #84]	; 3b058 <flatcc_json_printer_fmt_float@@Base+0xf2c>
   3b000:	ldr	r1, [pc, #84]	; 3b05c <flatcc_json_printer_fmt_float@@Base+0xf30>
   3b004:	ldr	r3, [pc, #84]	; 3b060 <flatcc_json_printer_fmt_float@@Base+0xf34>
   3b008:	mov	r2, #138	; 0x8a
   3b00c:	add	r0, pc, r0
   3b010:	add	r1, pc, r1
   3b014:	add	r3, pc, r3
   3b018:	bl	14f38 <__assert_fail@plt>
   3b01c:	ldr	r0, [pc, #76]	; 3b070 <flatcc_json_printer_fmt_float@@Base+0xf44>
   3b020:	ldr	r1, [pc, #76]	; 3b074 <flatcc_json_printer_fmt_float@@Base+0xf48>
   3b024:	ldr	r3, [pc, #76]	; 3b078 <flatcc_json_printer_fmt_float@@Base+0xf4c>
   3b028:	mov	r2, #260	; 0x104
   3b02c:	add	r0, pc, r0
   3b030:	add	r1, pc, r1
   3b034:	add	r3, pc, r3
   3b038:	bl	14f38 <__assert_fail@plt>
   3b03c:	andeq	r3, r1, r8, lsl sp
   3b040:	andeq	r4, r1, r8, lsr r1
   3b044:	andeq	r3, r1, r0, lsr r3
   3b048:	andeq	r2, r1, r0, asr #27
   3b04c:	andeq	r2, r1, r0, asr #27
   3b050:	andeq	r2, r1, sl, lsr #28
   3b054:	andeq	r3, r1, r6, lsr #25
   3b058:	andeq	r2, r1, lr, lsr #28
   3b05c:	andeq	r2, r1, r0, lsl #27
   3b060:	andeq	r2, r1, fp, asr #28
   3b064:	muleq	r1, ip, lr
   3b068:	andeq	r2, r1, sp, ror #20
   3b06c:	andeq	r2, r1, sp, lsr #29
   3b070:	andeq	r2, r1, r8, lsr #20
   3b074:	andeq	r2, r1, sp, lsr #20
   3b078:	muleq	r1, r6, sl

0003b07c <flatcc_json_printer_fmt_double@@Base>:
   3b07c:	b	3a138 <flatcc_json_printer_fmt_float@@Base+0xc>

0003b080 <flatcc_json_printer_fmt_bool@@Base>:
   3b080:	cmp	r1, #0
   3b084:	movwne	r1, #29300	; 0x7274
   3b088:	movtne	r1, #25973	; 0x6575
   3b08c:	strne	r1, [r0]
   3b090:	movne	r0, #4
   3b094:	bxne	lr
   3b098:	mov	r1, #101	; 0x65
   3b09c:	strb	r1, [r0, #4]
   3b0a0:	movw	r1, #24934	; 0x6166
   3b0a4:	movt	r1, #29548	; 0x736c
   3b0a8:	str	r1, [r0]
   3b0ac:	mov	r0, #5
   3b0b0:	bx	lr

0003b0b4 <flatcc_json_printer_string@@Base>:
   3b0b4:	b	3b0b8 <flatcc_json_printer_string@@Base+0x4>
   3b0b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b0bc:	add	fp, sp, #28
   3b0c0:	sub	sp, sp, #12
   3b0c4:	mov	r5, r0
   3b0c8:	mov	r4, r0
   3b0cc:	mov	r6, r1
   3b0d0:	mov	r3, r2
   3b0d4:	ldr	r0, [r5, #20]!
   3b0d8:	str	r5, [sp, #4]
   3b0dc:	add	r1, r0, #1
   3b0e0:	str	r1, [r5]
   3b0e4:	mov	r1, #34	; 0x22
   3b0e8:	strb	r1, [r0]
   3b0ec:	b	3b174 <flatcc_json_printer_string@@Base+0xc0>
   3b0f0:	ldr	r2, [r5]
   3b0f4:	mov	r7, #48	; 0x30
   3b0f8:	cmp	r1, #160	; 0xa0
   3b0fc:	add	r3, r2, #1
   3b100:	str	r3, [r5]
   3b104:	mov	r3, #117	; 0x75
   3b108:	strb	r3, [r2]
   3b10c:	ldr	r2, [r5]
   3b110:	add	r3, r2, #1
   3b114:	str	r3, [r5]
   3b118:	strb	r7, [r2]
   3b11c:	ldr	r2, [r5]
   3b120:	add	r3, r2, #1
   3b124:	str	r3, [r5]
   3b128:	strb	r7, [r2]
   3b12c:	ldr	r2, [r5]
   3b130:	add	r3, r2, #1
   3b134:	str	r3, [r5]
   3b138:	mov	r3, #87	; 0x57
   3b13c:	movwcc	r3, #48	; 0x30
   3b140:	add	r1, r3, r1, lsr #4
   3b144:	mov	r3, #87	; 0x57
   3b148:	strb	r1, [r2]
   3b14c:	ldr	r1, [r5]
   3b150:	add	r2, r1, #1
   3b154:	str	r2, [r5]
   3b158:	and	r2, sl, #15
   3b15c:	cmp	r2, #10
   3b160:	movwcc	r3, #48	; 0x30
   3b164:	add	r2, r3, r2
   3b168:	strb	r2, [r1]
   3b16c:	sub	r3, r0, #1
   3b170:	add	r6, r8, #1
   3b174:	ldrb	sl, [r6]
   3b178:	mov	r8, r6
   3b17c:	cmp	sl, #32
   3b180:	bcc	3b1a0 <flatcc_json_printer_string@@Base+0xec>
   3b184:	uxtb	r0, sl
   3b188:	cmp	r0, #34	; 0x22
   3b18c:	cmpne	r0, #92	; 0x5c
   3b190:	beq	3b1a0 <flatcc_json_printer_string@@Base+0xec>
   3b194:	ldrb	sl, [r8, #1]!
   3b198:	cmp	sl, #31
   3b19c:	bhi	3b184 <flatcc_json_printer_string@@Base+0xd0>
   3b1a0:	ldr	r0, [r4, #20]
   3b1a4:	ldr	r1, [r4, #16]
   3b1a8:	sub	r9, r8, r6
   3b1ac:	add	r2, r0, r9
   3b1b0:	cmp	r2, r1
   3b1b4:	bcs	3b1d4 <flatcc_json_printer_string@@Base+0x120>
   3b1b8:	mov	r1, r6
   3b1bc:	mov	r2, r9
   3b1c0:	mov	r6, r3
   3b1c4:	bl	14e54 <memcpy@plt>
   3b1c8:	mov	r2, r6
   3b1cc:	mov	r7, r9
   3b1d0:	b	3b260 <flatcc_json_printer_string@@Base+0x1ac>
   3b1d4:	cmp	r0, r1
   3b1d8:	str	r3, [sp, #8]
   3b1dc:	bcc	3b1f8 <flatcc_json_printer_string@@Base+0x144>
   3b1e0:	ldr	r2, [r4, #44]	; 0x2c
   3b1e4:	mov	r0, r4
   3b1e8:	mov	r1, #0
   3b1ec:	blx	r2
   3b1f0:	ldr	r1, [r4, #16]
   3b1f4:	ldr	r0, [r4, #20]
   3b1f8:	sub	r5, r1, r0
   3b1fc:	mov	r7, r9
   3b200:	cmp	r5, r9
   3b204:	bcs	3b24c <flatcc_json_printer_string@@Base+0x198>
   3b208:	mov	r1, r6
   3b20c:	mov	r2, r5
   3b210:	bl	14e54 <memcpy@plt>
   3b214:	ldr	r0, [r4, #20]
   3b218:	ldr	r2, [r4, #44]	; 0x2c
   3b21c:	mov	r1, #0
   3b220:	add	r0, r0, r5
   3b224:	str	r0, [r4, #20]
   3b228:	mov	r0, r4
   3b22c:	blx	r2
   3b230:	ldr	r1, [r4, #16]
   3b234:	ldr	r0, [r4, #20]
   3b238:	sub	r7, r7, r5
   3b23c:	add	r6, r6, r5
   3b240:	sub	r5, r1, r0
   3b244:	cmp	r7, r5
   3b248:	bhi	3b208 <flatcc_json_printer_string@@Base+0x154>
   3b24c:	ldr	r5, [sp, #4]
   3b250:	mov	r1, r6
   3b254:	mov	r2, r7
   3b258:	bl	14e54 <memcpy@plt>
   3b25c:	ldr	r2, [sp, #8]
   3b260:	ldr	r0, [r5]
   3b264:	add	r1, r0, r7
   3b268:	add	r0, r1, #1
   3b26c:	str	r0, [r5]
   3b270:	subs	r0, r2, r9
   3b274:	beq	3b3a0 <flatcc_json_printer_string@@Base+0x2ec>
   3b278:	mov	r2, #92	; 0x5c
   3b27c:	strb	r2, [r1]
   3b280:	mvn	r1, #7
   3b284:	uxtab	r2, r1, sl
   3b288:	uxtb	r1, sl
   3b28c:	cmp	r2, #26
   3b290:	bhi	3b320 <flatcc_json_printer_string@@Base+0x26c>
   3b294:	add	r3, pc, #4
   3b298:	ldr	r2, [r3, r2, lsl #2]
   3b29c:	add	pc, r3, r2
   3b2a0:	andeq	r0, r0, ip, rrx
   3b2a4:	muleq	r0, ip, r0
   3b2a8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   3b2ac:			; <UNDEFINED> instruction: 0xfffffe50
   3b2b0:	andeq	r0, r0, r4, asr #1
   3b2b4:	ldrdeq	r0, [r0], -r8
   3b2b8:			; <UNDEFINED> instruction: 0xfffffe50
   3b2bc:			; <UNDEFINED> instruction: 0xfffffe50
   3b2c0:			; <UNDEFINED> instruction: 0xfffffe50
   3b2c4:			; <UNDEFINED> instruction: 0xfffffe50
   3b2c8:			; <UNDEFINED> instruction: 0xfffffe50
   3b2cc:			; <UNDEFINED> instruction: 0xfffffe50
   3b2d0:			; <UNDEFINED> instruction: 0xfffffe50
   3b2d4:			; <UNDEFINED> instruction: 0xfffffe50
   3b2d8:			; <UNDEFINED> instruction: 0xfffffe50
   3b2dc:			; <UNDEFINED> instruction: 0xfffffe50
   3b2e0:			; <UNDEFINED> instruction: 0xfffffe50
   3b2e4:			; <UNDEFINED> instruction: 0xfffffe50
   3b2e8:			; <UNDEFINED> instruction: 0xfffffe50
   3b2ec:			; <UNDEFINED> instruction: 0xfffffe50
   3b2f0:			; <UNDEFINED> instruction: 0xfffffe50
   3b2f4:			; <UNDEFINED> instruction: 0xfffffe50
   3b2f8:			; <UNDEFINED> instruction: 0xfffffe50
   3b2fc:			; <UNDEFINED> instruction: 0xfffffe50
   3b300:			; <UNDEFINED> instruction: 0xfffffe50
   3b304:			; <UNDEFINED> instruction: 0xfffffe50
   3b308:	andeq	r0, r0, ip, ror #1
   3b30c:	ldr	r1, [r5]
   3b310:	add	r2, r1, #1
   3b314:	str	r2, [r5]
   3b318:	mov	r2, #98	; 0x62
   3b31c:	b	3b168 <flatcc_json_printer_string@@Base+0xb4>
   3b320:	cmp	r1, #92	; 0x5c
   3b324:	bne	3b0f0 <flatcc_json_printer_string@@Base+0x3c>
   3b328:	ldr	r1, [r5]
   3b32c:	add	r2, r1, #1
   3b330:	str	r2, [r5]
   3b334:	mov	r2, #92	; 0x5c
   3b338:	b	3b168 <flatcc_json_printer_string@@Base+0xb4>
   3b33c:	ldr	r1, [r5]
   3b340:	add	r2, r1, #1
   3b344:	str	r2, [r5]
   3b348:	mov	r2, #116	; 0x74
   3b34c:	b	3b168 <flatcc_json_printer_string@@Base+0xb4>
   3b350:	ldr	r1, [r5]
   3b354:	add	r2, r1, #1
   3b358:	str	r2, [r5]
   3b35c:	mov	r2, #110	; 0x6e
   3b360:	b	3b168 <flatcc_json_printer_string@@Base+0xb4>
   3b364:	ldr	r1, [r5]
   3b368:	add	r2, r1, #1
   3b36c:	str	r2, [r5]
   3b370:	mov	r2, #102	; 0x66
   3b374:	b	3b168 <flatcc_json_printer_string@@Base+0xb4>
   3b378:	ldr	r1, [r5]
   3b37c:	add	r2, r1, #1
   3b380:	str	r2, [r5]
   3b384:	mov	r2, #114	; 0x72
   3b388:	b	3b168 <flatcc_json_printer_string@@Base+0xb4>
   3b38c:	ldr	r1, [r5]
   3b390:	add	r2, r1, #1
   3b394:	str	r2, [r5]
   3b398:	mov	r2, #34	; 0x22
   3b39c:	b	3b168 <flatcc_json_printer_string@@Base+0xb4>
   3b3a0:	mov	r0, #34	; 0x22
   3b3a4:	strb	r0, [r1]
   3b3a8:	sub	sp, fp, #28
   3b3ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003b3b0 <flatcc_json_printer_write@@Base>:
   3b3b0:	push	{r4, r5, r6, r7, fp, lr}
   3b3b4:	add	fp, sp, #16
   3b3b8:	mov	r6, r1
   3b3bc:	mov	r5, r0
   3b3c0:	ldr	r1, [r0, #16]
   3b3c4:	ldr	r0, [r0, #20]
   3b3c8:	mov	r4, r2
   3b3cc:	add	r2, r0, r2
   3b3d0:	cmp	r2, r1
   3b3d4:	bcc	3b448 <flatcc_json_printer_write@@Base+0x98>
   3b3d8:	cmp	r0, r1
   3b3dc:	bcc	3b3f8 <flatcc_json_printer_write@@Base+0x48>
   3b3e0:	ldr	r2, [r5, #44]	; 0x2c
   3b3e4:	mov	r0, r5
   3b3e8:	mov	r1, #0
   3b3ec:	blx	r2
   3b3f0:	ldr	r1, [r5, #16]
   3b3f4:	ldr	r0, [r5, #20]
   3b3f8:	sub	r7, r1, r0
   3b3fc:	cmp	r7, r4
   3b400:	bcs	3b448 <flatcc_json_printer_write@@Base+0x98>
   3b404:	mov	r1, r6
   3b408:	mov	r2, r7
   3b40c:	bl	14e54 <memcpy@plt>
   3b410:	ldr	r0, [r5, #20]
   3b414:	ldr	r2, [r5, #44]	; 0x2c
   3b418:	mov	r1, #0
   3b41c:	add	r0, r0, r7
   3b420:	str	r0, [r5, #20]
   3b424:	mov	r0, r5
   3b428:	blx	r2
   3b42c:	ldr	r1, [r5, #16]
   3b430:	ldr	r0, [r5, #20]
   3b434:	sub	r4, r4, r7
   3b438:	add	r6, r6, r7
   3b43c:	sub	r7, r1, r0
   3b440:	cmp	r4, r7
   3b444:	bhi	3b404 <flatcc_json_printer_write@@Base+0x54>
   3b448:	mov	r1, r6
   3b44c:	mov	r2, r4
   3b450:	bl	14e54 <memcpy@plt>
   3b454:	ldr	r0, [r5, #20]
   3b458:	add	r0, r0, r4
   3b45c:	str	r0, [r5, #20]
   3b460:	pop	{r4, r5, r6, r7, fp, pc}

0003b464 <flatcc_json_printer_nl@@Base>:
   3b464:	ldr	r1, [r0, #20]
   3b468:	add	r2, r1, #1
   3b46c:	str	r2, [r0, #20]
   3b470:	mov	r2, #10
   3b474:	strb	r2, [r1]
   3b478:	ldr	r1, [r0, #16]
   3b47c:	ldr	r2, [r0, #20]
   3b480:	cmp	r2, r1
   3b484:	bxcc	lr
   3b488:	ldr	r2, [r0, #44]	; 0x2c
   3b48c:	mov	r1, #0
   3b490:	bx	r2

0003b494 <flatcc_json_printer_char@@Base>:
   3b494:	ldr	r2, [r0, #20]
   3b498:	add	r3, r2, #1
   3b49c:	str	r3, [r0, #20]
   3b4a0:	strb	r1, [r2]
   3b4a4:	bx	lr

0003b4a8 <flatcc_json_printer_indent@@Base>:
   3b4a8:	push	{r4, r5, r6, sl, fp, lr}
   3b4ac:	add	fp, sp, #16
   3b4b0:	mov	r4, r0
   3b4b4:	ldr	r1, [r0, #16]
   3b4b8:	ldr	r0, [r0, #20]
   3b4bc:	ldrb	r2, [r4, #25]
   3b4c0:	ldr	r3, [r4, #32]
   3b4c4:	mla	r6, r3, r2, r0
   3b4c8:	mul	r5, r3, r2
   3b4cc:	cmp	r6, r1
   3b4d0:	bls	3b540 <flatcc_json_printer_indent@@Base+0x98>
   3b4d4:	cmp	r0, r1
   3b4d8:	bcc	3b4f4 <flatcc_json_printer_indent@@Base+0x4c>
   3b4dc:	ldr	r2, [r4, #44]	; 0x2c
   3b4e0:	mov	r0, r4
   3b4e4:	mov	r1, #0
   3b4e8:	blx	r2
   3b4ec:	ldr	r1, [r4, #16]
   3b4f0:	ldr	r0, [r4, #20]
   3b4f4:	sub	r6, r1, r0
   3b4f8:	cmp	r6, r5
   3b4fc:	bcs	3b540 <flatcc_json_printer_indent@@Base+0x98>
   3b500:	mov	r1, #32
   3b504:	mov	r2, r6
   3b508:	bl	14ee4 <memset@plt>
   3b50c:	ldr	r0, [r4, #20]
   3b510:	ldr	r2, [r4, #44]	; 0x2c
   3b514:	mov	r1, #0
   3b518:	add	r0, r0, r6
   3b51c:	str	r0, [r4, #20]
   3b520:	mov	r0, r4
   3b524:	blx	r2
   3b528:	ldr	r1, [r4, #16]
   3b52c:	ldr	r0, [r4, #20]
   3b530:	sub	r5, r5, r6
   3b534:	sub	r6, r1, r0
   3b538:	cmp	r5, r6
   3b53c:	bhi	3b500 <flatcc_json_printer_indent@@Base+0x58>
   3b540:	mov	r1, #32
   3b544:	mov	r2, r5
   3b548:	bl	14ee4 <memset@plt>
   3b54c:	ldr	r0, [r4, #20]
   3b550:	add	r0, r0, r5
   3b554:	str	r0, [r4, #20]
   3b558:	pop	{r4, r5, r6, sl, fp, pc}

0003b55c <flatcc_json_printer_add_level@@Base>:
   3b55c:	ldr	r2, [r0, #32]
   3b560:	add	r1, r2, r1
   3b564:	str	r1, [r0, #32]
   3b568:	bx	lr

0003b56c <flatcc_json_printer_get_level@@Base>:
   3b56c:	ldr	r0, [r0, #32]
   3b570:	bx	lr

0003b574 <flatcc_json_printer_uint8@@Base>:
   3b574:	push	{fp, lr}
   3b578:	mov	fp, sp
   3b57c:	ldr	lr, [r0, #20]
   3b580:	cmp	r1, #100	; 0x64
   3b584:	bcc	3b5d4 <flatcc_json_printer_uint8@@Base+0x60>
   3b588:	mov	r3, #0
   3b58c:	strb	r3, [lr, #3]
   3b590:	movw	r3, #34079	; 0x851f
   3b594:	movt	r3, #20971	; 0x51eb
   3b598:	umull	r3, ip, r1, r3
   3b59c:	mov	r3, #48	; 0x30
   3b5a0:	orr	r3, r3, ip, lsr #5
   3b5a4:	lsr	ip, ip, #5
   3b5a8:	strb	r3, [lr]
   3b5ac:	mov	r3, #100	; 0x64
   3b5b0:	mls	r1, ip, r3, r1
   3b5b4:	ldr	r3, [pc, #128]	; 3b63c <flatcc_json_printer_uint8@@Base+0xc8>
   3b5b8:	uxtb	r1, r1
   3b5bc:	add	r3, pc, r3
   3b5c0:	add	r1, r3, r1, lsl #1
   3b5c4:	ldrh	r1, [r1]
   3b5c8:	strh	r1, [lr, #1]
   3b5cc:	mov	r1, #3
   3b5d0:	b	3b62c <flatcc_json_printer_uint8@@Base+0xb8>
   3b5d4:	cmp	r1, #10
   3b5d8:	bcc	3b618 <flatcc_json_printer_uint8@@Base+0xa4>
   3b5dc:	mov	r3, #0
   3b5e0:	strb	r3, [lr, #2]
   3b5e4:	movw	r3, #34079	; 0x851f
   3b5e8:	movt	r3, #20971	; 0x51eb
   3b5ec:	umull	r3, r2, r1, r3
   3b5f0:	mov	r3, #100	; 0x64
   3b5f4:	lsr	r2, r2, #5
   3b5f8:	mls	r1, r2, r3, r1
   3b5fc:	ldr	r2, [pc, #60]	; 3b640 <flatcc_json_printer_uint8@@Base+0xcc>
   3b600:	add	r2, pc, r2
   3b604:	add	r1, r2, r1, lsl #1
   3b608:	ldrh	r1, [r1]
   3b60c:	strh	r1, [lr]
   3b610:	mov	r1, #2
   3b614:	b	3b62c <flatcc_json_printer_uint8@@Base+0xb8>
   3b618:	mov	r2, #0
   3b61c:	add	r1, r1, #48	; 0x30
   3b620:	strb	r2, [lr, #1]
   3b624:	strb	r1, [lr]
   3b628:	mov	r1, #1
   3b62c:	ldr	r2, [r0, #20]
   3b630:	add	r1, r2, r1
   3b634:	str	r1, [r0, #20]
   3b638:	pop	{fp, pc}
   3b63c:	andeq	r2, r1, fp, lsr #18
   3b640:	andeq	r2, r1, r7, ror #17

0003b644 <flatcc_json_printer_uint16@@Base>:
   3b644:	push	{r4, sl, fp, lr}
   3b648:	add	fp, sp, #8
   3b64c:	mov	r2, r1
   3b650:	ldr	r1, [r0, #20]
   3b654:	mov	r4, r0
   3b658:	mov	r0, r2
   3b65c:	bl	3b670 <flatcc_json_printer_uint16@@Base+0x2c>
   3b660:	ldr	r1, [r4, #20]
   3b664:	add	r0, r1, r0
   3b668:	str	r0, [r4, #20]
   3b66c:	pop	{r4, sl, fp, pc}
   3b670:	push	{fp, lr}
   3b674:	mov	fp, sp
   3b678:	mov	lr, r0
   3b67c:	cmp	r0, #1000	; 0x3e8
   3b680:	bcc	3b698 <flatcc_json_printer_uint16@@Base+0x54>
   3b684:	movw	r3, #9999	; 0x270f
   3b688:	mov	r0, #4
   3b68c:	cmp	lr, r3
   3b690:	movwhi	r0, #5
   3b694:	b	3b6bc <flatcc_json_printer_uint16@@Base+0x78>
   3b698:	cmp	lr, #100	; 0x64
   3b69c:	bcc	3b6b0 <flatcc_json_printer_uint16@@Base+0x6c>
   3b6a0:	mov	r0, #0
   3b6a4:	strb	r0, [r1, #3]!
   3b6a8:	mov	r0, #3
   3b6ac:	b	3b760 <flatcc_json_printer_uint16@@Base+0x11c>
   3b6b0:	cmp	lr, #9
   3b6b4:	mov	r0, #1
   3b6b8:	movwhi	r0, #2
   3b6bc:	mov	r3, #0
   3b6c0:	tst	r0, #1
   3b6c4:	strb	r3, [r1, r0]!
   3b6c8:	bne	3b710 <flatcc_json_printer_uint16@@Base+0xcc>
   3b6cc:	cmp	r0, #2
   3b6d0:	beq	3b7a0 <flatcc_json_printer_uint16@@Base+0x15c>
   3b6d4:	cmp	r0, #4
   3b6d8:	popne	{fp, pc}
   3b6dc:	movw	r2, #34079	; 0x851f
   3b6e0:	movt	r2, #20971	; 0x51eb
   3b6e4:	umull	r2, r3, lr, r2
   3b6e8:	mov	r2, #100	; 0x64
   3b6ec:	lsr	r3, r3, #5
   3b6f0:	mls	r2, r3, r2, lr
   3b6f4:	uxth	ip, r2
   3b6f8:	ldr	r2, [pc, #232]	; 3b7e8 <flatcc_json_printer_uint16@@Base+0x1a4>
   3b6fc:	add	r2, pc, r2
   3b700:	add	r2, r2, ip, lsl #1
   3b704:	ldrh	r2, [r2]
   3b708:	strh	r2, [r1, #-2]!
   3b70c:	b	3b7a4 <flatcc_json_printer_uint16@@Base+0x160>
   3b710:	cmp	r0, #1
   3b714:	beq	3b7d8 <flatcc_json_printer_uint16@@Base+0x194>
   3b718:	cmp	r0, #3
   3b71c:	beq	3b760 <flatcc_json_printer_uint16@@Base+0x11c>
   3b720:	cmp	r0, #5
   3b724:	bne	3b7d4 <flatcc_json_printer_uint16@@Base+0x190>
   3b728:	movw	r0, #34079	; 0x851f
   3b72c:	ldr	r2, [pc, #172]	; 3b7e0 <flatcc_json_printer_uint16@@Base+0x19c>
   3b730:	movt	r0, #20971	; 0x51eb
   3b734:	umull	r0, r3, lr, r0
   3b738:	mov	r0, #100	; 0x64
   3b73c:	add	r2, pc, r2
   3b740:	lsr	r3, r3, #5
   3b744:	mls	r0, r3, r0, lr
   3b748:	mov	lr, r3
   3b74c:	uxth	r0, r0
   3b750:	add	r0, r2, r0, lsl #1
   3b754:	ldrh	r0, [r0]
   3b758:	strh	r0, [r1, #-2]!
   3b75c:	mov	r0, #5
   3b760:	movw	r3, #34079	; 0x851f
   3b764:	uxth	ip, lr
   3b768:	movt	r3, #20971	; 0x51eb
   3b76c:	umull	r3, r2, ip, r3
   3b770:	lsr	r3, r2, #5
   3b774:	mov	r2, #100	; 0x64
   3b778:	mls	r2, r3, r2, lr
   3b77c:	uxth	ip, r2
   3b780:	ldr	r2, [pc, #92]	; 3b7e4 <flatcc_json_printer_uint16@@Base+0x1a0>
   3b784:	add	r2, pc, r2
   3b788:	add	r2, r2, ip, lsl #1
   3b78c:	ldrh	r2, [r2]
   3b790:	strh	r2, [r1, #-2]!
   3b794:	add	r2, r3, #48	; 0x30
   3b798:	strb	r2, [r1, #-1]
   3b79c:	pop	{fp, pc}
   3b7a0:	mov	r3, lr
   3b7a4:	uxth	ip, r3
   3b7a8:	movw	r3, #34079	; 0x851f
   3b7ac:	movt	r3, #20971	; 0x51eb
   3b7b0:	umull	r3, r2, ip, r3
   3b7b4:	mov	r3, #100	; 0x64
   3b7b8:	lsr	r2, r2, #5
   3b7bc:	mls	r2, r2, r3, ip
   3b7c0:	ldr	r3, [pc, #36]	; 3b7ec <flatcc_json_printer_uint16@@Base+0x1a8>
   3b7c4:	add	r3, pc, r3
   3b7c8:	add	r2, r3, r2, lsl #1
   3b7cc:	ldrh	r2, [r2]
   3b7d0:	strh	r2, [r1, #-2]
   3b7d4:	pop	{fp, pc}
   3b7d8:	mov	r3, lr
   3b7dc:	b	3b794 <flatcc_json_printer_uint16@@Base+0x150>
   3b7e0:	andeq	r2, r1, fp, lsr #15
   3b7e4:	andeq	r2, r1, r3, ror #14
   3b7e8:	andeq	r2, r1, fp, ror #15
   3b7ec:	andeq	r2, r1, r3, lsr #14

0003b7f0 <flatcc_json_printer_uint32@@Base>:
   3b7f0:	push	{r4, sl, fp, lr}
   3b7f4:	add	fp, sp, #8
   3b7f8:	mov	r2, r1
   3b7fc:	ldr	r1, [r0, #20]
   3b800:	mov	r4, r0
   3b804:	mov	r0, r2
   3b808:	bl	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   3b80c:	ldr	r1, [r4, #20]
   3b810:	add	r0, r1, r0
   3b814:	str	r0, [r4, #20]
   3b818:	pop	{r4, sl, fp, pc}
   3b81c:	push	{fp, lr}
   3b820:	mov	fp, sp
   3b824:	mov	lr, r0
   3b828:	movw	r0, #10000	; 0x2710
   3b82c:	cmp	lr, r0
   3b830:	bcc	3b894 <flatcc_json_printer_uint32@@Base+0xa4>
   3b834:	movw	r0, #38528	; 0x9680
   3b838:	movt	r0, #152	; 0x98
   3b83c:	cmp	lr, r0
   3b840:	bcc	3b8b0 <flatcc_json_printer_uint32@@Base+0xc0>
   3b844:	movw	r0, #51712	; 0xca00
   3b848:	movt	r0, #15258	; 0x3b9a
   3b84c:	cmp	lr, r0
   3b850:	bcc	3b8e0 <flatcc_json_printer_uint32@@Base+0xf0>
   3b854:	movw	r0, #34079	; 0x851f
   3b858:	ldr	r2, [pc, #700]	; 3bb1c <flatcc_json_printer_uint32@@Base+0x32c>
   3b85c:	movt	r0, #20971	; 0x51eb
   3b860:	umull	r0, r3, lr, r0
   3b864:	mov	r0, #100	; 0x64
   3b868:	add	r2, pc, r2
   3b86c:	lsr	r3, r3, #5
   3b870:	mls	r0, r3, r0, lr
   3b874:	mov	lr, r3
   3b878:	add	r0, r2, r0, lsl #1
   3b87c:	ldrh	r0, [r0]
   3b880:	strh	r0, [r1, #8]!
   3b884:	mov	r0, #0
   3b888:	strb	r0, [r1, #2]
   3b88c:	mov	r0, #10
   3b890:	b	3b950 <flatcc_json_printer_uint32@@Base+0x160>
   3b894:	cmp	lr, #100	; 0x64
   3b898:	bcc	3b8d0 <flatcc_json_printer_uint32@@Base+0xe0>
   3b89c:	lsr	r3, lr, #3
   3b8a0:	mov	r0, #3
   3b8a4:	cmp	r3, #124	; 0x7c
   3b8a8:	movwhi	r0, #4
   3b8ac:	b	3b90c <flatcc_json_printer_uint32@@Base+0x11c>
   3b8b0:	movw	r0, #16960	; 0x4240
   3b8b4:	movt	r0, #15
   3b8b8:	cmp	lr, r0
   3b8bc:	bcc	3b8f8 <flatcc_json_printer_uint32@@Base+0x108>
   3b8c0:	mov	r0, #0
   3b8c4:	strb	r0, [r1, #7]!
   3b8c8:	mov	r0, #7
   3b8cc:	b	3ba80 <flatcc_json_printer_uint32@@Base+0x290>
   3b8d0:	cmp	lr, #9
   3b8d4:	mov	r0, #1
   3b8d8:	movwhi	r0, #2
   3b8dc:	b	3b90c <flatcc_json_printer_uint32@@Base+0x11c>
   3b8e0:	movw	r3, #57599	; 0xe0ff
   3b8e4:	mov	r0, #8
   3b8e8:	movt	r3, #1525	; 0x5f5
   3b8ec:	cmp	lr, r3
   3b8f0:	movwhi	r0, #9
   3b8f4:	b	3b90c <flatcc_json_printer_uint32@@Base+0x11c>
   3b8f8:	movw	r3, #34463	; 0x869f
   3b8fc:	mov	r0, #5
   3b900:	movt	r3, #1
   3b904:	cmp	lr, r3
   3b908:	movwhi	r0, #6
   3b90c:	mov	r3, #0
   3b910:	tst	r0, #1
   3b914:	strb	r3, [r1, r0]!
   3b918:	bne	3ba10 <flatcc_json_printer_uint32@@Base+0x220>
   3b91c:	sub	r3, r0, #2
   3b920:	cmp	r3, #6
   3b924:	bhi	3bb18 <flatcc_json_printer_uint32@@Base+0x328>
   3b928:	add	r2, pc, #4
   3b92c:	ldr	r3, [r2, r3, lsl #2]
   3b930:	add	pc, r2, r3
   3b934:	andeq	r0, r0, ip, lsr #1
   3b938:	andeq	r0, r0, r4, ror #3
   3b93c:	andeq	r0, r0, ip, ror r0
   3b940:	andeq	r0, r0, r4, ror #3
   3b944:	andeq	r0, r0, ip, asr #32
   3b948:	andeq	r0, r0, r4, ror #3
   3b94c:	andeq	r0, r0, ip, lsl r0
   3b950:	movw	r2, #34079	; 0x851f
   3b954:	movt	r2, #20971	; 0x51eb
   3b958:	umull	r2, r3, lr, r2
   3b95c:	lsr	r2, r3, #5
   3b960:	mov	r3, #100	; 0x64
   3b964:	mls	ip, r2, r3, lr
   3b968:	ldr	r3, [pc, #432]	; 3bb20 <flatcc_json_printer_uint32@@Base+0x330>
   3b96c:	mov	lr, r2
   3b970:	add	r3, pc, r3
   3b974:	add	r3, r3, ip, lsl #1
   3b978:	ldrh	r3, [r3]
   3b97c:	strh	r3, [r1, #-2]!
   3b980:	movw	r2, #34079	; 0x851f
   3b984:	movt	r2, #20971	; 0x51eb
   3b988:	umull	r2, r3, lr, r2
   3b98c:	lsr	r2, r3, #5
   3b990:	mov	r3, #100	; 0x64
   3b994:	mls	ip, r2, r3, lr
   3b998:	ldr	r3, [pc, #388]	; 3bb24 <flatcc_json_printer_uint32@@Base+0x334>
   3b99c:	mov	lr, r2
   3b9a0:	add	r3, pc, r3
   3b9a4:	add	r3, r3, ip, lsl #1
   3b9a8:	ldrh	r3, [r3]
   3b9ac:	strh	r3, [r1, #-2]!
   3b9b0:	movw	r2, #34079	; 0x851f
   3b9b4:	movt	r2, #20971	; 0x51eb
   3b9b8:	umull	r2, r3, lr, r2
   3b9bc:	lsr	r2, r3, #5
   3b9c0:	mov	r3, #100	; 0x64
   3b9c4:	mls	ip, r2, r3, lr
   3b9c8:	ldr	r3, [pc, #344]	; 3bb28 <flatcc_json_printer_uint32@@Base+0x338>
   3b9cc:	mov	lr, r2
   3b9d0:	add	r3, pc, r3
   3b9d4:	add	r3, r3, ip, lsl #1
   3b9d8:	ldrh	r3, [r3]
   3b9dc:	strh	r3, [r1, #-2]!
   3b9e0:	movw	r2, #34079	; 0x851f
   3b9e4:	movt	r2, #20971	; 0x51eb
   3b9e8:	umull	r2, r3, lr, r2
   3b9ec:	lsr	r2, r3, #5
   3b9f0:	mov	r3, #100	; 0x64
   3b9f4:	mls	r2, r2, r3, lr
   3b9f8:	ldr	r3, [pc, #300]	; 3bb2c <flatcc_json_printer_uint32@@Base+0x33c>
   3b9fc:	add	r3, pc, r3
   3ba00:	add	r2, r3, r2, lsl #1
   3ba04:	ldrh	r2, [r2]
   3ba08:	strh	r2, [r1, #-2]
   3ba0c:	pop	{fp, pc}
   3ba10:	sub	r3, r0, #1
   3ba14:	cmp	r3, #8
   3ba18:	bhi	3bb18 <flatcc_json_printer_uint32@@Base+0x328>
   3ba1c:	add	ip, pc, #4
   3ba20:	ldr	r3, [ip, r3, lsl #2]
   3ba24:	add	pc, ip, r3
   3ba28:	andeq	r0, r0, r8, ror #1
   3ba2c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   3ba30:	strheq	r0, [r0], -r8
   3ba34:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   3ba38:	andeq	r0, r0, r8, lsl #1
   3ba3c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   3ba40:	andeq	r0, r0, r8, asr r0
   3ba44:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   3ba48:	andeq	r0, r0, r4, lsr #32
   3ba4c:	movw	r0, #34079	; 0x851f
   3ba50:	ldr	r2, [pc, #216]	; 3bb30 <flatcc_json_printer_uint32@@Base+0x340>
   3ba54:	movt	r0, #20971	; 0x51eb
   3ba58:	umull	r0, r3, lr, r0
   3ba5c:	mov	r0, #100	; 0x64
   3ba60:	add	r2, pc, r2
   3ba64:	lsr	r3, r3, #5
   3ba68:	mls	r0, r3, r0, lr
   3ba6c:	mov	lr, r3
   3ba70:	add	r0, r2, r0, lsl #1
   3ba74:	ldrh	r0, [r0]
   3ba78:	strh	r0, [r1, #-2]!
   3ba7c:	mov	r0, #9
   3ba80:	movw	r3, #34079	; 0x851f
   3ba84:	movt	r3, #20971	; 0x51eb
   3ba88:	umull	r3, r2, lr, r3
   3ba8c:	mov	r3, #100	; 0x64
   3ba90:	lsr	r2, r2, #5
   3ba94:	mls	ip, r2, r3, lr
   3ba98:	ldr	r3, [pc, #148]	; 3bb34 <flatcc_json_printer_uint32@@Base+0x344>
   3ba9c:	mov	lr, r2
   3baa0:	add	r3, pc, r3
   3baa4:	add	r3, r3, ip, lsl #1
   3baa8:	ldrh	r3, [r3]
   3baac:	strh	r3, [r1, #-2]!
   3bab0:	movw	r2, #34079	; 0x851f
   3bab4:	movt	r2, #20971	; 0x51eb
   3bab8:	umull	r2, r3, lr, r2
   3babc:	lsr	r2, r3, #5
   3bac0:	mov	r3, #100	; 0x64
   3bac4:	mls	ip, r2, r3, lr
   3bac8:	ldr	r3, [pc, #104]	; 3bb38 <flatcc_json_printer_uint32@@Base+0x348>
   3bacc:	mov	lr, r2
   3bad0:	add	r3, pc, r3
   3bad4:	add	r3, r3, ip, lsl #1
   3bad8:	ldrh	r3, [r3]
   3badc:	strh	r3, [r1, #-2]!
   3bae0:	movw	r2, #34079	; 0x851f
   3bae4:	movt	r2, #20971	; 0x51eb
   3bae8:	umull	r2, r3, lr, r2
   3baec:	lsr	r2, r3, #5
   3baf0:	mov	r3, #100	; 0x64
   3baf4:	mls	ip, r2, r3, lr
   3baf8:	ldr	r3, [pc, #60]	; 3bb3c <flatcc_json_printer_uint32@@Base+0x34c>
   3bafc:	mov	lr, r2
   3bb00:	add	r3, pc, r3
   3bb04:	add	r3, r3, ip, lsl #1
   3bb08:	ldrh	r3, [r3]
   3bb0c:	strh	r3, [r1, #-2]!
   3bb10:	add	r2, lr, #48	; 0x30
   3bb14:	strb	r2, [r1, #-1]
   3bb18:	pop	{fp, pc}
   3bb1c:	andeq	r2, r1, pc, ror r6
   3bb20:	andeq	r2, r1, r7, ror r5
   3bb24:	andeq	r2, r1, r7, asr #10
   3bb28:	andeq	r2, r1, r7, lsl r5
   3bb2c:	andeq	r2, r1, fp, ror #9
   3bb30:	andeq	r2, r1, r7, lsl #9
   3bb34:	andeq	r2, r1, r7, asr #8
   3bb38:	andeq	r2, r1, r7, lsl r4
   3bb3c:	andeq	r2, r1, r7, ror #7

0003bb40 <flatcc_json_printer_uint64@@Base>:
   3bb40:	push	{r4, sl, fp, lr}
   3bb44:	add	fp, sp, #8
   3bb48:	mov	r1, r3
   3bb4c:	mov	r3, r2
   3bb50:	ldr	r2, [r0, #20]
   3bb54:	mov	r4, r0
   3bb58:	mov	r0, r3
   3bb5c:	bl	3bb70 <flatcc_json_printer_uint64@@Base+0x30>
   3bb60:	ldr	r1, [r4, #20]
   3bb64:	add	r0, r1, r0
   3bb68:	str	r0, [r4, #20]
   3bb6c:	pop	{r4, sl, fp, pc}
   3bb70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bb74:	add	fp, sp, #28
   3bb78:	sub	sp, sp, #4
   3bb7c:	mov	r7, r0
   3bb80:	movw	r0, #51711	; 0xc9ff
   3bb84:	mov	r4, r2
   3bb88:	movt	r0, #15258	; 0x3b9a
   3bb8c:	subs	r0, r0, r7
   3bb90:	rscs	r0, r1, #0
   3bb94:	bcc	3bbac <flatcc_json_printer_uint64@@Base+0x6c>
   3bb98:	mov	r0, r7
   3bb9c:	mov	r1, r4
   3bba0:	sub	sp, fp, #28
   3bba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bba8:	b	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   3bbac:	ldr	r9, [pc, #1184]	; 3c054 <flatcc_json_printer_uint64@@Base+0x514>
   3bbb0:	mov	r6, r1
   3bbb4:	movw	r1, #40960	; 0xa000
   3bbb8:	movw	r0, #2328	; 0x918
   3bbbc:	movt	r1, #20082	; 0x4e72
   3bbc0:	subs	r1, r7, r1
   3bbc4:	sbcs	r0, r6, r0
   3bbc8:	add	r9, pc, r9
   3bbcc:	bcc	3bc2c <flatcc_json_printer_uint64@@Base+0xec>
   3bbd0:	movw	r1, #0
   3bbd4:	movw	r0, #34546	; 0x86f2
   3bbd8:	movt	r1, #28609	; 0x6fc1
   3bbdc:	movt	r0, #35	; 0x23
   3bbe0:	subs	r1, r7, r1
   3bbe4:	sbcs	r0, r6, r0
   3bbe8:	bcc	3bc5c <flatcc_json_printer_uint64@@Base+0x11c>
   3bbec:	movw	r1, #0
   3bbf0:	movw	r0, #46771	; 0xb6b3
   3bbf4:	movt	r1, #42852	; 0xa764
   3bbf8:	movt	r0, #3552	; 0xde0
   3bbfc:	subs	r1, r7, r1
   3bc00:	sbcs	r0, r6, r0
   3bc04:	bcc	3bca4 <flatcc_json_printer_uint64@@Base+0x164>
   3bc08:	movw	r1, #65535	; 0xffff
   3bc0c:	movw	r0, #8964	; 0x2304
   3bc10:	mov	r8, #19
   3bc14:	movt	r1, #35303	; 0x89e7
   3bc18:	movt	r0, #35527	; 0x8ac7
   3bc1c:	subs	r1, r1, r7
   3bc20:	sbcs	r0, r0, r6
   3bc24:	movwcc	r8, #20
   3bc28:	b	3bce4 <flatcc_json_printer_uint64@@Base+0x1a4>
   3bc2c:	movw	r0, #59392	; 0xe800
   3bc30:	movt	r0, #18550	; 0x4876
   3bc34:	subs	r0, r7, r0
   3bc38:	sbcs	r0, r6, #23
   3bc3c:	bcc	3bc88 <flatcc_json_printer_uint64@@Base+0x148>
   3bc40:	movw	r0, #4095	; 0xfff
   3bc44:	mov	r8, #12
   3bc48:	movt	r0, #54437	; 0xd4a5
   3bc4c:	subs	r0, r0, r7
   3bc50:	rscs	r0, r6, #232	; 0xe8
   3bc54:	movwcc	r8, #13
   3bc58:	b	3bce4 <flatcc_json_printer_uint64@@Base+0x1a4>
   3bc5c:	movw	r1, #32768	; 0x8000
   3bc60:	movw	r0, #36222	; 0x8d7e
   3bc64:	movt	r1, #42182	; 0xa4c6
   3bc68:	movt	r0, #3
   3bc6c:	subs	r1, r7, r1
   3bc70:	sbcs	r0, r6, r0
   3bc74:	bcc	3bcc8 <flatcc_json_printer_uint64@@Base+0x188>
   3bc78:	mov	r0, #0
   3bc7c:	mov	r8, #16
   3bc80:	strb	r0, [r4, #16]!
   3bc84:	b	3bd98 <flatcc_json_printer_uint64@@Base+0x258>
   3bc88:	movw	r0, #58367	; 0xe3ff
   3bc8c:	mov	r8, #10
   3bc90:	movt	r0, #21515	; 0x540b
   3bc94:	subs	r0, r0, r7
   3bc98:	rscs	r0, r6, #2
   3bc9c:	movwcc	r8, #11
   3bca0:	b	3bce4 <flatcc_json_printer_uint64@@Base+0x1a4>
   3bca4:	movw	r1, #65535	; 0xffff
   3bca8:	movw	r0, #17784	; 0x4578
   3bcac:	mov	r8, #17
   3bcb0:	movt	r1, #23945	; 0x5d89
   3bcb4:	movt	r0, #355	; 0x163
   3bcb8:	subs	r1, r1, r7
   3bcbc:	sbcs	r0, r0, r6
   3bcc0:	movwcc	r8, #18
   3bcc4:	b	3bce4 <flatcc_json_printer_uint64@@Base+0x1a4>
   3bcc8:	movw	r1, #16383	; 0x3fff
   3bccc:	movw	r0, #23283	; 0x5af3
   3bcd0:	mov	r8, #14
   3bcd4:	movt	r1, #4218	; 0x107a
   3bcd8:	subs	r1, r1, r7
   3bcdc:	sbcs	r0, r0, r6
   3bce0:	movwcc	r8, #15
   3bce4:	mov	r0, #0
   3bce8:	tst	r8, #1
   3bcec:	strb	r0, [r4, r8]!
   3bcf0:	bne	3be5c <flatcc_json_printer_uint64@@Base+0x31c>
   3bcf4:	sub	r0, r8, #10
   3bcf8:	cmp	r0, #10
   3bcfc:	bhi	3bfac <flatcc_json_printer_uint64@@Base+0x46c>
   3bd00:	add	r1, pc, #4
   3bd04:	ldr	r0, [r1, r0, lsl #2]
   3bd08:	add	pc, r1, r0
   3bd0c:	andeq	r0, r0, ip, lsl r1
   3bd10:	andeq	r0, r0, r0, lsr #5
   3bd14:	andeq	r0, r0, ip, ror #1
   3bd18:	andeq	r0, r0, r0, lsr #5
   3bd1c:	strheq	r0, [r0], -ip
   3bd20:	andeq	r0, r0, r0, lsr #5
   3bd24:	andeq	r0, r0, ip, lsl #1
   3bd28:	andeq	r0, r0, r0, lsr #5
   3bd2c:	andeq	r0, r0, ip, asr r0
   3bd30:	andeq	r0, r0, r0, lsr #5
   3bd34:	andeq	r0, r0, ip, lsr #32
   3bd38:	mov	r0, r7
   3bd3c:	mov	r1, r6
   3bd40:	mov	r2, #100	; 0x64
   3bd44:	mov	r3, #0
   3bd48:	mov	r5, #100	; 0x64
   3bd4c:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3bd50:	mov	r6, r1
   3bd54:	mls	r1, r0, r5, r7
   3bd58:	mov	r7, r0
   3bd5c:	add	r1, r9, r1, lsl #1
   3bd60:	ldrh	r1, [r1]
   3bd64:	strh	r1, [r4, #-2]!
   3bd68:	mov	r0, r7
   3bd6c:	mov	r1, r6
   3bd70:	mov	r2, #100	; 0x64
   3bd74:	mov	r3, #0
   3bd78:	mov	r5, #100	; 0x64
   3bd7c:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3bd80:	mov	r6, r1
   3bd84:	mls	r1, r0, r5, r7
   3bd88:	mov	r7, r0
   3bd8c:	add	r1, r9, r1, lsl #1
   3bd90:	ldrh	r1, [r1]
   3bd94:	strh	r1, [r4, #-2]!
   3bd98:	mov	r0, r7
   3bd9c:	mov	r1, r6
   3bda0:	mov	r2, #100	; 0x64
   3bda4:	mov	r3, #0
   3bda8:	mov	r5, #100	; 0x64
   3bdac:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3bdb0:	mov	r6, r1
   3bdb4:	mls	r1, r0, r5, r7
   3bdb8:	mov	r7, r0
   3bdbc:	add	r1, r9, r1, lsl #1
   3bdc0:	ldrh	r1, [r1]
   3bdc4:	strh	r1, [r4, #-2]!
   3bdc8:	mov	r0, r7
   3bdcc:	mov	r1, r6
   3bdd0:	mov	r2, #100	; 0x64
   3bdd4:	mov	r3, #0
   3bdd8:	mov	r5, #100	; 0x64
   3bddc:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3bde0:	mov	r6, r1
   3bde4:	mls	r1, r0, r5, r7
   3bde8:	mov	r7, r0
   3bdec:	add	r1, r9, r1, lsl #1
   3bdf0:	ldrh	r1, [r1]
   3bdf4:	strh	r1, [r4, #-2]!
   3bdf8:	mov	r0, r7
   3bdfc:	mov	r1, r6
   3be00:	mov	r2, #100	; 0x64
   3be04:	mov	r3, #0
   3be08:	mov	r5, #100	; 0x64
   3be0c:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3be10:	mov	r6, r1
   3be14:	mls	r1, r0, r5, r7
   3be18:	mov	r7, r0
   3be1c:	add	r1, r9, r1, lsl #1
   3be20:	ldrh	r1, [r1]
   3be24:	strh	r1, [r4, #-2]!
   3be28:	mov	r0, r7
   3be2c:	mov	r1, r6
   3be30:	mov	r2, #100	; 0x64
   3be34:	mov	r3, #0
   3be38:	mov	r5, #100	; 0x64
   3be3c:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3be40:	mov	r6, r1
   3be44:	mls	r1, r0, r5, r7
   3be48:	mov	r7, r0
   3be4c:	add	r1, r9, r1, lsl #1
   3be50:	ldrh	r1, [r1]
   3be54:	strh	r1, [r4, #-2]!
   3be58:	b	3bfac <flatcc_json_printer_uint64@@Base+0x46c>
   3be5c:	sub	r0, r8, #11
   3be60:	cmp	r0, #8
   3be64:	bhi	3bfac <flatcc_json_printer_uint64@@Base+0x46c>
   3be68:	add	r1, pc, #4
   3be6c:	ldr	r0, [r1, r0, lsl #2]
   3be70:	add	pc, r1, r0
   3be74:	ldrdeq	r0, [r0], -ip
   3be78:	andeq	r0, r0, r8, lsr r1
   3be7c:	andeq	r0, r0, ip, lsr #1
   3be80:	andeq	r0, r0, r8, lsr r1
   3be84:	andeq	r0, r0, ip, ror r0
   3be88:	andeq	r0, r0, r8, lsr r1
   3be8c:	andeq	r0, r0, ip, asr #32
   3be90:	andeq	r0, r0, r8, lsr r1
   3be94:	andeq	r0, r0, r4, lsr #32
   3be98:	mov	r0, r7
   3be9c:	mov	r1, r6
   3bea0:	mov	r2, #100	; 0x64
   3bea4:	mov	r3, #0
   3bea8:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3beac:	mov	r7, r0
   3beb0:	add	r0, r9, r2, lsl #1
   3beb4:	mov	r6, r1
   3beb8:	ldrh	r0, [r0]
   3bebc:	strh	r0, [r4, #-2]!
   3bec0:	mov	r0, r7
   3bec4:	mov	r1, r6
   3bec8:	mov	r2, #100	; 0x64
   3becc:	mov	r3, #0
   3bed0:	mov	r5, #100	; 0x64
   3bed4:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3bed8:	mov	r6, r1
   3bedc:	mls	r1, r0, r5, r7
   3bee0:	mov	r7, r0
   3bee4:	add	r1, r9, r1, lsl #1
   3bee8:	ldrh	r1, [r1]
   3beec:	strh	r1, [r4, #-2]!
   3bef0:	mov	r0, r7
   3bef4:	mov	r1, r6
   3bef8:	mov	r2, #100	; 0x64
   3befc:	mov	r3, #0
   3bf00:	mov	r5, #100	; 0x64
   3bf04:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3bf08:	mov	r6, r1
   3bf0c:	mls	r1, r0, r5, r7
   3bf10:	mov	r7, r0
   3bf14:	add	r1, r9, r1, lsl #1
   3bf18:	ldrh	r1, [r1]
   3bf1c:	strh	r1, [r4, #-2]!
   3bf20:	mov	r0, r7
   3bf24:	mov	r1, r6
   3bf28:	mov	r2, #100	; 0x64
   3bf2c:	mov	r3, #0
   3bf30:	mov	r5, #100	; 0x64
   3bf34:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3bf38:	mov	r6, r1
   3bf3c:	mls	r1, r0, r5, r7
   3bf40:	mov	r7, r0
   3bf44:	add	r1, r9, r1, lsl #1
   3bf48:	ldrh	r1, [r1]
   3bf4c:	strh	r1, [r4, #-2]!
   3bf50:	mov	r0, r7
   3bf54:	mov	r1, r6
   3bf58:	mov	r2, #100	; 0x64
   3bf5c:	mov	r3, #0
   3bf60:	mov	sl, #100	; 0x64
   3bf64:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3bf68:	mov	r2, #10
   3bf6c:	mov	r3, #0
   3bf70:	mov	r5, r0
   3bf74:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3bf78:	orr	r0, r2, #48	; 0x30
   3bf7c:	mov	r1, r6
   3bf80:	mov	r2, #1000	; 0x3e8
   3bf84:	mov	r3, #0
   3bf88:	strb	r0, [r4, #-3]!
   3bf8c:	mls	r0, r5, sl, r7
   3bf90:	add	r0, r9, r0, lsl #1
   3bf94:	ldrh	r0, [r0]
   3bf98:	strh	r0, [r4, #1]
   3bf9c:	mov	r0, r7
   3bfa0:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3bfa4:	mov	r7, r0
   3bfa8:	mov	r6, r1
   3bfac:	mov	r0, r7
   3bfb0:	mov	r1, r6
   3bfb4:	mov	r2, #100	; 0x64
   3bfb8:	mov	r3, #0
   3bfbc:	mov	r5, #100	; 0x64
   3bfc0:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3bfc4:	mls	r2, r0, r5, r7
   3bfc8:	mov	r3, #0
   3bfcc:	add	r2, r9, r2, lsl #1
   3bfd0:	ldrh	r2, [r2]
   3bfd4:	strh	r2, [r4, #-2]
   3bfd8:	mov	r2, #100	; 0x64
   3bfdc:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3bfe0:	add	r0, r9, r2, lsl #1
   3bfe4:	mov	r1, r6
   3bfe8:	movw	r2, #10000	; 0x2710
   3bfec:	mov	r3, #0
   3bff0:	ldrh	r0, [r0]
   3bff4:	strh	r0, [r4, #-4]
   3bff8:	mov	r0, r7
   3bffc:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3c000:	mov	r2, #100	; 0x64
   3c004:	mov	r3, #0
   3c008:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3c00c:	add	r0, r9, r2, lsl #1
   3c010:	movw	r2, #16960	; 0x4240
   3c014:	mov	r1, r6
   3c018:	mov	r3, #0
   3c01c:	movt	r2, #15
   3c020:	ldrh	r0, [r0]
   3c024:	strh	r0, [r4, #-6]
   3c028:	mov	r0, r7
   3c02c:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3c030:	mov	r2, #100	; 0x64
   3c034:	mov	r3, #0
   3c038:	bl	476c4 <flatcc_json_printer_clear@@Base+0x7a8>
   3c03c:	add	r0, r9, r2, lsl #1
   3c040:	ldrh	r0, [r0]
   3c044:	strh	r0, [r4, #-8]
   3c048:	mov	r0, r8
   3c04c:	sub	sp, fp, #28
   3c050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c054:	andeq	r2, r1, pc, lsl r3

0003c058 <flatcc_json_printer_int8@@Base>:
   3c058:	push	{fp, lr}
   3c05c:	mov	fp, sp
   3c060:	ldr	lr, [r0, #20]
   3c064:	cmn	r1, #1
   3c068:	uxtb	ip, r1
   3c06c:	movle	r3, #45	; 0x2d
   3c070:	rsble	r1, r1, #0
   3c074:	lsr	ip, ip, #7
   3c078:	strble	r3, [lr], #1
   3c07c:	uxtb	r3, r1
   3c080:	cmp	r3, #100	; 0x64
   3c084:	bcc	3c0d4 <flatcc_json_printer_int8@@Base+0x7c>
   3c088:	mov	r1, #0
   3c08c:	strb	r1, [lr, #3]
   3c090:	movw	r1, #34079	; 0x851f
   3c094:	movt	r1, #20971	; 0x51eb
   3c098:	umull	r1, r2, r3, r1
   3c09c:	mov	r1, #48	; 0x30
   3c0a0:	orr	r1, r1, r2, lsr #5
   3c0a4:	strb	r1, [lr]
   3c0a8:	lsr	r1, r2, #5
   3c0ac:	mov	r2, #100	; 0x64
   3c0b0:	mls	r1, r1, r2, r3
   3c0b4:	ldr	r2, [pc, #132]	; 3c140 <flatcc_json_printer_int8@@Base+0xe8>
   3c0b8:	uxtb	r1, r1
   3c0bc:	add	r2, pc, r2
   3c0c0:	add	r1, r2, r1, lsl #1
   3c0c4:	ldrh	r1, [r1]
   3c0c8:	strh	r1, [lr, #1]
   3c0cc:	mov	r1, #3
   3c0d0:	b	3c12c <flatcc_json_printer_int8@@Base+0xd4>
   3c0d4:	cmp	r3, #10
   3c0d8:	bcc	3c118 <flatcc_json_printer_int8@@Base+0xc0>
   3c0dc:	mov	r1, #0
   3c0e0:	strb	r1, [lr, #2]
   3c0e4:	movw	r1, #34079	; 0x851f
   3c0e8:	movt	r1, #20971	; 0x51eb
   3c0ec:	umull	r1, r2, r3, r1
   3c0f0:	lsr	r1, r2, #5
   3c0f4:	mov	r2, #100	; 0x64
   3c0f8:	mls	r1, r1, r2, r3
   3c0fc:	ldr	r2, [pc, #64]	; 3c144 <flatcc_json_printer_int8@@Base+0xec>
   3c100:	add	r2, pc, r2
   3c104:	add	r1, r2, r1, lsl #1
   3c108:	ldrh	r1, [r1]
   3c10c:	strh	r1, [lr]
   3c110:	mov	r1, #2
   3c114:	b	3c12c <flatcc_json_printer_int8@@Base+0xd4>
   3c118:	mov	r2, #0
   3c11c:	add	r1, r1, #48	; 0x30
   3c120:	strb	r2, [lr, #1]
   3c124:	strb	r1, [lr]
   3c128:	mov	r1, #1
   3c12c:	ldr	r2, [r0, #20]
   3c130:	add	r1, r1, ip
   3c134:	add	r1, r2, r1
   3c138:	str	r1, [r0, #20]
   3c13c:	pop	{fp, pc}
   3c140:	andeq	r1, r1, fp, lsr #28
   3c144:	andeq	r1, r1, r7, ror #27

0003c148 <flatcc_json_printer_int16@@Base>:
   3c148:	push	{r4, r5, fp, lr}
   3c14c:	add	fp, sp, #8
   3c150:	mov	r2, r1
   3c154:	ldr	r1, [r0, #20]
   3c158:	mov	r4, r0
   3c15c:	uxth	r0, r2
   3c160:	cmn	r2, #1
   3c164:	rsble	r2, r2, #0
   3c168:	lsr	r5, r0, #15
   3c16c:	movle	r0, #45	; 0x2d
   3c170:	strble	r0, [r1], #1
   3c174:	uxth	r0, r2
   3c178:	bl	3b670 <flatcc_json_printer_uint16@@Base+0x2c>
   3c17c:	ldr	r1, [r4, #20]
   3c180:	add	r0, r0, r5
   3c184:	add	r0, r1, r0
   3c188:	str	r0, [r4, #20]
   3c18c:	pop	{r4, r5, fp, pc}

0003c190 <flatcc_json_printer_int32@@Base>:
   3c190:	push	{r4, r5, fp, lr}
   3c194:	add	fp, sp, #8
   3c198:	mov	r2, r1
   3c19c:	lsr	r5, r1, #31
   3c1a0:	ldr	r1, [r0, #20]
   3c1a4:	mov	r4, r0
   3c1a8:	cmn	r2, #1
   3c1ac:	movle	r0, #45	; 0x2d
   3c1b0:	rsble	r2, r2, #0
   3c1b4:	strble	r0, [r1], #1
   3c1b8:	mov	r0, r2
   3c1bc:	bl	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   3c1c0:	ldr	r1, [r4, #20]
   3c1c4:	add	r0, r0, r5
   3c1c8:	add	r0, r1, r0
   3c1cc:	str	r0, [r4, #20]
   3c1d0:	pop	{r4, r5, fp, pc}

0003c1d4 <flatcc_json_printer_int64@@Base>:
   3c1d4:	push	{r4, r5, fp, lr}
   3c1d8:	add	fp, sp, #8
   3c1dc:	mov	r1, r3
   3c1e0:	mov	r3, r2
   3c1e4:	ldr	r2, [r0, #20]
   3c1e8:	mov	r4, r0
   3c1ec:	lsr	r5, r1, #31
   3c1f0:	cmn	r1, #1
   3c1f4:	bgt	3c208 <flatcc_json_printer_int64@@Base+0x34>
   3c1f8:	mov	r0, #45	; 0x2d
   3c1fc:	rsbs	r3, r3, #0
   3c200:	strb	r0, [r2], #1
   3c204:	rsc	r1, r1, #0
   3c208:	mov	r0, r3
   3c20c:	bl	3bb70 <flatcc_json_printer_uint64@@Base+0x30>
   3c210:	ldr	r1, [r4, #20]
   3c214:	add	r0, r0, r5
   3c218:	add	r0, r1, r0
   3c21c:	str	r0, [r4, #20]
   3c220:	pop	{r4, r5, fp, pc}

0003c224 <flatcc_json_printer_float@@Base>:
   3c224:	push	{r4, sl, fp, lr}
   3c228:	add	fp, sp, #8
   3c22c:	vcvt.f64.f32	d0, s0
   3c230:	mov	r4, r0
   3c234:	ldr	r0, [r0, #20]
   3c238:	bl	3a138 <flatcc_json_printer_fmt_float@@Base+0xc>
   3c23c:	ldr	r1, [r4, #20]
   3c240:	add	r0, r1, r0
   3c244:	str	r0, [r4, #20]
   3c248:	pop	{r4, sl, fp, pc}

0003c24c <flatcc_json_printer_double@@Base>:
   3c24c:	push	{r4, sl, fp, lr}
   3c250:	add	fp, sp, #8
   3c254:	mov	r4, r0
   3c258:	ldr	r0, [r0, #20]
   3c25c:	bl	3a138 <flatcc_json_printer_fmt_float@@Base+0xc>
   3c260:	ldr	r1, [r4, #20]
   3c264:	add	r0, r1, r0
   3c268:	str	r0, [r4, #20]
   3c26c:	pop	{r4, sl, fp, pc}

0003c270 <flatcc_json_printer_enum@@Base>:
   3c270:	push	{r4, r5, r6, r7, fp, lr}
   3c274:	add	fp, sp, #16
   3c278:	mov	r4, r0
   3c27c:	ldr	r0, [r0, #20]
   3c280:	mov	r6, r1
   3c284:	mov	r1, #34	; 0x22
   3c288:	mov	r5, r2
   3c28c:	strb	r1, [r0]
   3c290:	ldrb	r2, [r4, #26]
   3c294:	ldr	r0, [r4, #20]
   3c298:	ldr	r1, [r4, #16]
   3c29c:	cmp	r2, #0
   3c2a0:	addeq	r0, r0, #1
   3c2a4:	add	r2, r0, r5
   3c2a8:	str	r0, [r4, #20]
   3c2ac:	cmp	r2, r1
   3c2b0:	bcc	3c324 <flatcc_json_printer_enum@@Base+0xb4>
   3c2b4:	cmp	r0, r1
   3c2b8:	bcc	3c2d4 <flatcc_json_printer_enum@@Base+0x64>
   3c2bc:	ldr	r2, [r4, #44]	; 0x2c
   3c2c0:	mov	r0, r4
   3c2c4:	mov	r1, #0
   3c2c8:	blx	r2
   3c2cc:	ldr	r1, [r4, #16]
   3c2d0:	ldr	r0, [r4, #20]
   3c2d4:	sub	r7, r1, r0
   3c2d8:	cmp	r7, r5
   3c2dc:	bcs	3c324 <flatcc_json_printer_enum@@Base+0xb4>
   3c2e0:	mov	r1, r6
   3c2e4:	mov	r2, r7
   3c2e8:	bl	14e54 <memcpy@plt>
   3c2ec:	ldr	r0, [r4, #20]
   3c2f0:	ldr	r2, [r4, #44]	; 0x2c
   3c2f4:	mov	r1, #0
   3c2f8:	add	r0, r0, r7
   3c2fc:	str	r0, [r4, #20]
   3c300:	mov	r0, r4
   3c304:	blx	r2
   3c308:	ldr	r1, [r4, #16]
   3c30c:	ldr	r0, [r4, #20]
   3c310:	sub	r5, r5, r7
   3c314:	add	r6, r6, r7
   3c318:	sub	r7, r1, r0
   3c31c:	cmp	r5, r7
   3c320:	bhi	3c2e0 <flatcc_json_printer_enum@@Base+0x70>
   3c324:	mov	r1, r6
   3c328:	mov	r2, r5
   3c32c:	bl	14e54 <memcpy@plt>
   3c330:	ldr	r0, [r4, #20]
   3c334:	add	r1, r0, r5
   3c338:	str	r1, [r4, #20]
   3c33c:	mov	r1, #34	; 0x22
   3c340:	strb	r1, [r0, r5]
   3c344:	ldrb	r0, [r4, #26]
   3c348:	ldr	r1, [r4, #20]
   3c34c:	cmp	r0, #0
   3c350:	addeq	r1, r1, #1
   3c354:	str	r1, [r4, #20]
   3c358:	pop	{r4, r5, r6, r7, fp, pc}

0003c35c <flatcc_json_printer_delimit_enum_flags@@Base>:
   3c35c:	ldrb	ip, [r0, #26]
   3c360:	ldr	r3, [r0, #20]
   3c364:	mov	r2, #34	; 0x22
   3c368:	cmp	r1, #0
   3c36c:	movwne	r1, #1
   3c370:	strb	r2, [r3]
   3c374:	clz	r2, ip
   3c378:	lsr	r2, r2, #5
   3c37c:	orr	r1, r1, r2
   3c380:	ldr	r2, [r0, #20]
   3c384:	add	r1, r2, r1
   3c388:	str	r1, [r0, #20]
   3c38c:	bx	lr

0003c390 <flatcc_json_printer_enum_flag@@Base>:
   3c390:	push	{r4, r5, r6, r7, fp, lr}
   3c394:	add	fp, sp, #16
   3c398:	mov	r5, r0
   3c39c:	ldr	r0, [r0, #20]
   3c3a0:	mov	r6, r2
   3c3a4:	mov	r2, #32
   3c3a8:	cmp	r1, #0
   3c3ac:	mov	r4, r3
   3c3b0:	strb	r2, [r0]
   3c3b4:	ldr	r0, [r5, #20]
   3c3b8:	ldr	r2, [r5, #16]
   3c3bc:	addgt	r0, r0, #1
   3c3c0:	add	r1, r0, r3
   3c3c4:	str	r0, [r5, #20]
   3c3c8:	cmp	r1, r2
   3c3cc:	bcc	3c440 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3c3d0:	cmp	r0, r2
   3c3d4:	bcc	3c3f0 <flatcc_json_printer_enum_flag@@Base+0x60>
   3c3d8:	ldr	r2, [r5, #44]	; 0x2c
   3c3dc:	mov	r0, r5
   3c3e0:	mov	r1, #0
   3c3e4:	blx	r2
   3c3e8:	ldr	r2, [r5, #16]
   3c3ec:	ldr	r0, [r5, #20]
   3c3f0:	sub	r7, r2, r0
   3c3f4:	cmp	r7, r4
   3c3f8:	bcs	3c440 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3c3fc:	mov	r1, r6
   3c400:	mov	r2, r7
   3c404:	bl	14e54 <memcpy@plt>
   3c408:	ldr	r0, [r5, #20]
   3c40c:	ldr	r2, [r5, #44]	; 0x2c
   3c410:	mov	r1, #0
   3c414:	add	r0, r0, r7
   3c418:	str	r0, [r5, #20]
   3c41c:	mov	r0, r5
   3c420:	blx	r2
   3c424:	ldr	r1, [r5, #16]
   3c428:	ldr	r0, [r5, #20]
   3c42c:	sub	r4, r4, r7
   3c430:	add	r6, r6, r7
   3c434:	sub	r7, r1, r0
   3c438:	cmp	r4, r7
   3c43c:	bhi	3c3fc <flatcc_json_printer_enum_flag@@Base+0x6c>
   3c440:	mov	r1, r6
   3c444:	mov	r2, r4
   3c448:	bl	14e54 <memcpy@plt>
   3c44c:	ldr	r0, [r5, #20]
   3c450:	add	r0, r0, r4
   3c454:	str	r0, [r5, #20]
   3c458:	pop	{r4, r5, r6, r7, fp, pc}

0003c45c <flatcc_json_printer_string_field@@Base>:
   3c45c:	push	{r4, r5, fp, lr}
   3c460:	add	fp, sp, #8
   3c464:	mov	r4, r0
   3c468:	mov	r0, #4
   3c46c:	add	r0, r0, r2, lsl #1
   3c470:	ldr	r2, [r1, #8]
   3c474:	cmp	r0, r2
   3c478:	popge	{r4, r5, fp, pc}
   3c47c:	ldr	r2, [r1, #4]
   3c480:	add	r0, r2, r0
   3c484:	ldrh	r0, [r0]
   3c488:	cmp	r0, #0
   3c48c:	ldrne	r2, [r1]
   3c490:	addsne	r5, r2, r0
   3c494:	bne	3c49c <flatcc_json_printer_string_field@@Base+0x40>
   3c498:	pop	{r4, r5, fp, pc}
   3c49c:	ldr	ip, [r1, #16]
   3c4a0:	ldr	r2, [fp, #8]
   3c4a4:	add	r0, ip, #1
   3c4a8:	cmp	ip, #0
   3c4ac:	str	r0, [r1, #16]
   3c4b0:	beq	3c4c8 <flatcc_json_printer_string_field@@Base+0x6c>
   3c4b4:	ldr	r0, [r4, #20]
   3c4b8:	add	r1, r0, #1
   3c4bc:	str	r1, [r4, #20]
   3c4c0:	mov	r1, #44	; 0x2c
   3c4c4:	strb	r1, [r0]
   3c4c8:	mov	r0, r4
   3c4cc:	mov	r1, r3
   3c4d0:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3c4d4:	ldr	r0, [r5]
   3c4d8:	ldr	r2, [r5, r0]!
   3c4dc:	mov	r0, r4
   3c4e0:	add	r1, r5, #4
   3c4e4:	pop	{r4, r5, fp, lr}
   3c4e8:	b	3b0b8 <flatcc_json_printer_string@@Base+0x4>
   3c4ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c4f0:	add	fp, sp, #24
   3c4f4:	mov	r4, r0
   3c4f8:	mov	r6, r1
   3c4fc:	ldr	r0, [r0, #20]
   3c500:	mov	r8, r2
   3c504:	ldrb	r1, [r4, #25]
   3c508:	cmp	r1, #0
   3c50c:	beq	3c5c8 <flatcc_json_printer_string_field@@Base+0x16c>
   3c510:	add	r1, r0, #1
   3c514:	str	r1, [r4, #20]
   3c518:	mov	r1, #10
   3c51c:	strb	r1, [r0]
   3c520:	ldr	r0, [r4, #20]
   3c524:	ldrb	r2, [r4, #25]
   3c528:	ldr	r3, [r4, #32]
   3c52c:	ldr	r1, [r4, #16]
   3c530:	mla	r5, r3, r2, r0
   3c534:	mul	r7, r3, r2
   3c538:	cmp	r5, r1
   3c53c:	bls	3c5ac <flatcc_json_printer_string_field@@Base+0x150>
   3c540:	cmp	r0, r1
   3c544:	bcc	3c560 <flatcc_json_printer_string_field@@Base+0x104>
   3c548:	ldr	r2, [r4, #44]	; 0x2c
   3c54c:	mov	r0, r4
   3c550:	mov	r1, #0
   3c554:	blx	r2
   3c558:	ldr	r1, [r4, #16]
   3c55c:	ldr	r0, [r4, #20]
   3c560:	sub	r5, r1, r0
   3c564:	cmp	r5, r7
   3c568:	bcs	3c5ac <flatcc_json_printer_string_field@@Base+0x150>
   3c56c:	mov	r1, #32
   3c570:	mov	r2, r5
   3c574:	bl	14ee4 <memset@plt>
   3c578:	ldr	r0, [r4, #20]
   3c57c:	ldr	r2, [r4, #44]	; 0x2c
   3c580:	mov	r1, #0
   3c584:	add	r0, r0, r5
   3c588:	str	r0, [r4, #20]
   3c58c:	mov	r0, r4
   3c590:	blx	r2
   3c594:	ldr	r1, [r4, #16]
   3c598:	ldr	r0, [r4, #20]
   3c59c:	sub	r7, r7, r5
   3c5a0:	sub	r5, r1, r0
   3c5a4:	cmp	r7, r5
   3c5a8:	bhi	3c56c <flatcc_json_printer_string_field@@Base+0x110>
   3c5ac:	mov	r1, #32
   3c5b0:	mov	r2, r7
   3c5b4:	bl	14ee4 <memset@plt>
   3c5b8:	ldr	r0, [r4, #20]
   3c5bc:	add	r0, r0, r7
   3c5c0:	str	r0, [r4, #20]
   3c5c4:	b	3c5e8 <flatcc_json_printer_string_field@@Base+0x18c>
   3c5c8:	ldr	r1, [r4, #16]
   3c5cc:	cmp	r0, r1
   3c5d0:	bcc	3c5e8 <flatcc_json_printer_string_field@@Base+0x18c>
   3c5d4:	ldr	r2, [r4, #44]	; 0x2c
   3c5d8:	mov	r0, r4
   3c5dc:	mov	r1, #0
   3c5e0:	blx	r2
   3c5e4:	ldr	r0, [r4, #20]
   3c5e8:	mov	r1, #34	; 0x22
   3c5ec:	strb	r1, [r0]
   3c5f0:	ldrb	r2, [r4, #26]
   3c5f4:	ldr	r0, [r4, #20]
   3c5f8:	ldr	r1, [r4, #16]
   3c5fc:	cmp	r2, #0
   3c600:	addeq	r0, r0, #1
   3c604:	add	r2, r0, r8
   3c608:	str	r0, [r4, #20]
   3c60c:	cmp	r2, r1
   3c610:	bcc	3c684 <flatcc_json_printer_string_field@@Base+0x228>
   3c614:	cmp	r0, r1
   3c618:	bcc	3c634 <flatcc_json_printer_string_field@@Base+0x1d8>
   3c61c:	ldr	r2, [r4, #44]	; 0x2c
   3c620:	mov	r0, r4
   3c624:	mov	r1, #0
   3c628:	blx	r2
   3c62c:	ldr	r1, [r4, #16]
   3c630:	ldr	r0, [r4, #20]
   3c634:	sub	r7, r1, r0
   3c638:	cmp	r7, r8
   3c63c:	bcs	3c684 <flatcc_json_printer_string_field@@Base+0x228>
   3c640:	mov	r1, r6
   3c644:	mov	r2, r7
   3c648:	bl	14e54 <memcpy@plt>
   3c64c:	ldr	r0, [r4, #20]
   3c650:	ldr	r2, [r4, #44]	; 0x2c
   3c654:	mov	r1, #0
   3c658:	add	r0, r0, r7
   3c65c:	str	r0, [r4, #20]
   3c660:	mov	r0, r4
   3c664:	blx	r2
   3c668:	ldr	r1, [r4, #16]
   3c66c:	ldr	r0, [r4, #20]
   3c670:	sub	r8, r8, r7
   3c674:	add	r6, r6, r7
   3c678:	sub	r7, r1, r0
   3c67c:	cmp	r8, r7
   3c680:	bhi	3c640 <flatcc_json_printer_string_field@@Base+0x1e4>
   3c684:	mov	r1, r6
   3c688:	mov	r2, r8
   3c68c:	bl	14e54 <memcpy@plt>
   3c690:	ldr	r0, [r4, #20]
   3c694:	add	r1, r0, r8
   3c698:	str	r1, [r4, #20]
   3c69c:	mov	r1, #34	; 0x22
   3c6a0:	strb	r1, [r0, r8]
   3c6a4:	ldrb	r0, [r4, #26]
   3c6a8:	ldr	r1, [r4, #20]
   3c6ac:	cmp	r0, #0
   3c6b0:	addeq	r1, r1, #1
   3c6b4:	add	r0, r1, #1
   3c6b8:	str	r0, [r4, #20]
   3c6bc:	mov	r0, #58	; 0x3a
   3c6c0:	strb	r0, [r1]
   3c6c4:	mov	r1, #32
   3c6c8:	ldr	r0, [r4, #20]
   3c6cc:	strb	r1, [r0]
   3c6d0:	ldrb	r0, [r4, #25]
   3c6d4:	ldr	r1, [r4, #20]
   3c6d8:	cmp	r0, #0
   3c6dc:	addne	r1, r1, #1
   3c6e0:	str	r1, [r4, #20]
   3c6e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003c6e8 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   3c6e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c6ec:	add	fp, sp, #28
   3c6f0:	sub	sp, sp, #12
   3c6f4:	mov	r4, r0
   3c6f8:	mov	r0, #4
   3c6fc:	add	r0, r0, r2, lsl #1
   3c700:	ldr	r2, [r1, #8]
   3c704:	cmp	r0, r2
   3c708:	bge	3c8a8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   3c70c:	ldr	r2, [r1, #4]
   3c710:	add	r0, r2, r0
   3c714:	ldrh	r0, [r0]
   3c718:	cmp	r0, #0
   3c71c:	beq	3c8a8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   3c720:	ldr	r5, [fp, #12]
   3c724:	ldr	r2, [r1]
   3c728:	cmp	r5, #0
   3c72c:	add	r6, r2, r0
   3c730:	movwne	r5, #1
   3c734:	cmp	r6, #0
   3c738:	beq	3c8a8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   3c73c:	ldr	r0, [r1, #16]
   3c740:	ldr	r2, [fp, #8]
   3c744:	add	r7, r0, #1
   3c748:	cmp	r0, #0
   3c74c:	str	r7, [r1, #16]
   3c750:	beq	3c768 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x80>
   3c754:	ldr	r0, [r4, #20]
   3c758:	add	r1, r0, #1
   3c75c:	str	r1, [r4, #20]
   3c760:	mov	r1, #44	; 0x2c
   3c764:	strb	r1, [r0]
   3c768:	mov	r0, r4
   3c76c:	mov	r1, r3
   3c770:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3c774:	ldr	r0, [r6]
   3c778:	ldr	r0, [r6, r0]!
   3c77c:	str	r0, [sp, #8]
   3c780:	ldr	r0, [r4, #20]
   3c784:	add	r1, r0, #1
   3c788:	str	r1, [r4, #20]
   3c78c:	mov	r1, #34	; 0x22
   3c790:	strb	r1, [r0]
   3c794:	movw	r1, #43691	; 0xaaab
   3c798:	ldr	r0, [sp, #8]
   3c79c:	movt	r1, #43690	; 0xaaaa
   3c7a0:	lsl	r0, r0, #2
   3c7a4:	umull	r0, r1, r0, r1
   3c7a8:	mov	r0, #3
   3c7ac:	add	r0, r0, r1, lsr #1
   3c7b0:	ldr	r1, [r4, #16]
   3c7b4:	bic	r7, r0, #3
   3c7b8:	ldr	r0, [r4, #20]
   3c7bc:	add	r2, r0, r7
   3c7c0:	cmp	r2, r1
   3c7c4:	bcc	3c7e0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   3c7c8:	ldr	r2, [r4, #44]	; 0x2c
   3c7cc:	mov	r0, r4
   3c7d0:	mov	r1, #0
   3c7d4:	blx	r2
   3c7d8:	ldr	r1, [r4, #16]
   3c7dc:	ldr	r0, [r4, #20]
   3c7e0:	add	r2, r0, r7
   3c7e4:	add	r6, r6, #4
   3c7e8:	cmp	r2, r1
   3c7ec:	bls	3c880 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   3c7f0:	add	r9, sp, #4
   3c7f4:	mov	sl, #3
   3c7f8:	sub	r1, r1, r0
   3c7fc:	bic	r7, r1, #3
   3c800:	add	r1, r7, r7, lsl #1
   3c804:	cmp	r1, #0
   3c808:	beq	3c8b0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c8>
   3c80c:	lsr	r8, r1, #2
   3c810:	mov	r1, r6
   3c814:	mov	r2, r9
   3c818:	mov	r3, r5
   3c81c:	str	r8, [sp, #4]
   3c820:	bl	46f60 <flatcc_json_printer_clear@@Base+0x44>
   3c824:	ldr	r0, [r4, #20]
   3c828:	mov	r1, #0
   3c82c:	add	r0, r0, r7
   3c830:	str	r0, [r4, #20]
   3c834:	ldr	r0, [sp, #8]
   3c838:	sub	r0, r0, r8
   3c83c:	str	r0, [sp, #8]
   3c840:	mov	r0, r4
   3c844:	ldr	r2, [r4, #44]	; 0x2c
   3c848:	blx	r2
   3c84c:	ldr	r0, [sp, #8]
   3c850:	movw	r1, #43691	; 0xaaab
   3c854:	add	r6, r6, r8
   3c858:	movt	r1, #43690	; 0xaaaa
   3c85c:	lsl	r0, r0, #2
   3c860:	umull	r0, r1, r0, r1
   3c864:	add	r0, sl, r1, lsr #1
   3c868:	ldr	r1, [r4, #16]
   3c86c:	bic	r7, r0, #3
   3c870:	ldr	r0, [r4, #20]
   3c874:	add	r2, r0, r7
   3c878:	cmp	r2, r1
   3c87c:	bhi	3c7f8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x110>
   3c880:	orr	r3, r5, #128	; 0x80
   3c884:	add	r2, sp, #8
   3c888:	mov	r1, r6
   3c88c:	bl	46f60 <flatcc_json_printer_clear@@Base+0x44>
   3c890:	ldr	r0, [r4, #20]
   3c894:	add	r1, r0, r7
   3c898:	add	r1, r1, #1
   3c89c:	str	r1, [r4, #20]
   3c8a0:	mov	r1, #34	; 0x22
   3c8a4:	strb	r1, [r0, r7]
   3c8a8:	sub	sp, fp, #28
   3c8ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c8b0:	ldr	r0, [pc, #24]	; 3c8d0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e8>
   3c8b4:	ldr	r1, [pc, #24]	; 3c8d4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1ec>
   3c8b8:	ldr	r3, [pc, #24]	; 3c8d8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1f0>
   3c8bc:	movw	r2, #277	; 0x115
   3c8c0:	add	r0, pc, r0
   3c8c4:	add	r1, pc, r1
   3c8c8:	add	r3, pc, r3
   3c8cc:	bl	14f38 <__assert_fail@plt>
   3c8d0:	strdeq	r1, [r1], -r0
   3c8d4:	andeq	r1, r1, r0, lsr #6
   3c8d8:	andeq	r1, r1, lr, ror #13

0003c8dc <flatcc_json_printer_uint8_field@@Base>:
   3c8dc:	push	{r4, r5, r6, sl, fp, lr}
   3c8e0:	add	fp, sp, #16
   3c8e4:	mov	r6, r0
   3c8e8:	mov	r0, #4
   3c8ec:	ldr	r5, [r1, #8]
   3c8f0:	add	r2, r0, r2, lsl #1
   3c8f4:	ldr	r0, [fp, #12]
   3c8f8:	cmp	r2, r5
   3c8fc:	bge	3c91c <flatcc_json_printer_uint8_field@@Base+0x40>
   3c900:	ldr	r5, [r1, #4]
   3c904:	add	r2, r5, r2
   3c908:	ldrh	r2, [r2]
   3c90c:	cmp	r2, #0
   3c910:	ldrne	r5, [r1]
   3c914:	addsne	r2, r5, r2
   3c918:	bne	3ca1c <flatcc_json_printer_uint8_field@@Base+0x140>
   3c91c:	ldrb	r2, [r6, #29]
   3c920:	mov	r5, r0
   3c924:	cmp	r2, #0
   3c928:	beq	3ca18 <flatcc_json_printer_uint8_field@@Base+0x13c>
   3c92c:	ldr	r0, [r1, #16]
   3c930:	ldr	r2, [fp, #8]
   3c934:	add	r4, r0, #1
   3c938:	cmp	r0, #0
   3c93c:	str	r4, [r1, #16]
   3c940:	beq	3c958 <flatcc_json_printer_uint8_field@@Base+0x7c>
   3c944:	ldr	r0, [r6, #20]
   3c948:	add	r1, r0, #1
   3c94c:	str	r1, [r6, #20]
   3c950:	mov	r1, #44	; 0x2c
   3c954:	strb	r1, [r0]
   3c958:	mov	r0, r6
   3c95c:	mov	r1, r3
   3c960:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3c964:	ldr	r0, [r6, #20]
   3c968:	mov	r1, #0
   3c96c:	cmp	r5, #100	; 0x64
   3c970:	bcc	3c9bc <flatcc_json_printer_uint8_field@@Base+0xe0>
   3c974:	strb	r1, [r0, #3]
   3c978:	movw	r1, #34079	; 0x851f
   3c97c:	movt	r1, #20971	; 0x51eb
   3c980:	umull	r1, r2, r5, r1
   3c984:	mov	r1, #48	; 0x30
   3c988:	orr	r1, r1, r2, lsr #5
   3c98c:	strb	r1, [r0]
   3c990:	lsr	r1, r2, #5
   3c994:	mov	r2, #100	; 0x64
   3c998:	mls	r1, r1, r2, r5
   3c99c:	ldr	r2, [pc, #152]	; 3ca3c <flatcc_json_printer_uint8_field@@Base+0x160>
   3c9a0:	uxtb	r1, r1
   3c9a4:	add	r2, pc, r2
   3c9a8:	add	r1, r2, r1, lsl #1
   3c9ac:	ldrh	r1, [r1]
   3c9b0:	strh	r1, [r0, #1]
   3c9b4:	mov	r0, #3
   3c9b8:	b	3ca0c <flatcc_json_printer_uint8_field@@Base+0x130>
   3c9bc:	cmp	r5, #10
   3c9c0:	bcc	3c9fc <flatcc_json_printer_uint8_field@@Base+0x120>
   3c9c4:	strb	r1, [r0, #2]
   3c9c8:	movw	r1, #34079	; 0x851f
   3c9cc:	movt	r1, #20971	; 0x51eb
   3c9d0:	umull	r1, r2, r5, r1
   3c9d4:	lsr	r1, r2, #5
   3c9d8:	mov	r2, #100	; 0x64
   3c9dc:	mls	r1, r1, r2, r5
   3c9e0:	ldr	r2, [pc, #88]	; 3ca40 <flatcc_json_printer_uint8_field@@Base+0x164>
   3c9e4:	add	r2, pc, r2
   3c9e8:	add	r1, r2, r1, lsl #1
   3c9ec:	ldrh	r1, [r1]
   3c9f0:	strh	r1, [r0]
   3c9f4:	mov	r0, #2
   3c9f8:	b	3ca0c <flatcc_json_printer_uint8_field@@Base+0x130>
   3c9fc:	strb	r1, [r0, #1]
   3ca00:	add	r1, r5, #48	; 0x30
   3ca04:	strb	r1, [r0]
   3ca08:	mov	r0, #1
   3ca0c:	ldr	r1, [r6, #20]
   3ca10:	add	r0, r1, r0
   3ca14:	str	r0, [r6, #20]
   3ca18:	pop	{r4, r5, r6, sl, fp, pc}
   3ca1c:	ldrb	r5, [r2]
   3ca20:	cmp	r5, r0
   3ca24:	bne	3c92c <flatcc_json_printer_uint8_field@@Base+0x50>
   3ca28:	ldrb	r2, [r6, #28]
   3ca2c:	mov	r5, r0
   3ca30:	cmp	r2, #0
   3ca34:	popne	{r4, r5, r6, sl, fp, pc}
   3ca38:	b	3c92c <flatcc_json_printer_uint8_field@@Base+0x50>
   3ca3c:	andeq	r1, r1, r3, asr #10
   3ca40:	andeq	r1, r1, r3, lsl #10

0003ca44 <flatcc_json_printer_uint16_field@@Base>:
   3ca44:	push	{r4, r5, r6, sl, fp, lr}
   3ca48:	add	fp, sp, #16
   3ca4c:	mov	r4, r0
   3ca50:	mov	r0, #4
   3ca54:	ldr	r5, [r1, #8]
   3ca58:	add	r2, r0, r2, lsl #1
   3ca5c:	ldr	r0, [fp, #12]
   3ca60:	cmp	r2, r5
   3ca64:	bge	3ca84 <flatcc_json_printer_uint16_field@@Base+0x40>
   3ca68:	ldr	r5, [r1, #4]
   3ca6c:	add	r2, r5, r2
   3ca70:	ldrh	r2, [r2]
   3ca74:	cmp	r2, #0
   3ca78:	ldrne	r5, [r1]
   3ca7c:	addsne	r2, r5, r2
   3ca80:	bne	3cae8 <flatcc_json_printer_uint16_field@@Base+0xa4>
   3ca84:	ldrb	r2, [r4, #29]
   3ca88:	mov	r6, r0
   3ca8c:	cmp	r2, #0
   3ca90:	beq	3cae4 <flatcc_json_printer_uint16_field@@Base+0xa0>
   3ca94:	ldr	r0, [r1, #16]
   3ca98:	ldr	r2, [fp, #8]
   3ca9c:	add	r5, r0, #1
   3caa0:	cmp	r0, #0
   3caa4:	str	r5, [r1, #16]
   3caa8:	beq	3cac0 <flatcc_json_printer_uint16_field@@Base+0x7c>
   3caac:	ldr	r0, [r4, #20]
   3cab0:	add	r1, r0, #1
   3cab4:	str	r1, [r4, #20]
   3cab8:	mov	r1, #44	; 0x2c
   3cabc:	strb	r1, [r0]
   3cac0:	mov	r0, r4
   3cac4:	mov	r1, r3
   3cac8:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3cacc:	ldr	r1, [r4, #20]
   3cad0:	mov	r0, r6
   3cad4:	bl	3b670 <flatcc_json_printer_uint16@@Base+0x2c>
   3cad8:	ldr	r1, [r4, #20]
   3cadc:	add	r0, r1, r0
   3cae0:	str	r0, [r4, #20]
   3cae4:	pop	{r4, r5, r6, sl, fp, pc}
   3cae8:	ldrh	r6, [r2]
   3caec:	cmp	r6, r0
   3caf0:	bne	3ca94 <flatcc_json_printer_uint16_field@@Base+0x50>
   3caf4:	ldrb	r2, [r4, #28]
   3caf8:	mov	r6, r0
   3cafc:	cmp	r2, #0
   3cb00:	popne	{r4, r5, r6, sl, fp, pc}
   3cb04:	b	3ca94 <flatcc_json_printer_uint16_field@@Base+0x50>

0003cb08 <flatcc_json_printer_uint32_field@@Base>:
   3cb08:	push	{r4, r5, r6, sl, fp, lr}
   3cb0c:	add	fp, sp, #16
   3cb10:	mov	r4, r0
   3cb14:	mov	r0, #4
   3cb18:	ldr	r5, [r1, #8]
   3cb1c:	add	r2, r0, r2, lsl #1
   3cb20:	ldr	r0, [fp, #12]
   3cb24:	cmp	r2, r5
   3cb28:	bge	3cb48 <flatcc_json_printer_uint32_field@@Base+0x40>
   3cb2c:	ldr	r5, [r1, #4]
   3cb30:	add	r2, r5, r2
   3cb34:	ldrh	r2, [r2]
   3cb38:	cmp	r2, #0
   3cb3c:	ldrne	r5, [r1]
   3cb40:	addsne	r2, r5, r2
   3cb44:	bne	3cbac <flatcc_json_printer_uint32_field@@Base+0xa4>
   3cb48:	ldrb	r2, [r4, #29]
   3cb4c:	mov	r6, r0
   3cb50:	cmp	r2, #0
   3cb54:	beq	3cba8 <flatcc_json_printer_uint32_field@@Base+0xa0>
   3cb58:	ldr	r0, [r1, #16]
   3cb5c:	ldr	r2, [fp, #8]
   3cb60:	add	r5, r0, #1
   3cb64:	cmp	r0, #0
   3cb68:	str	r5, [r1, #16]
   3cb6c:	beq	3cb84 <flatcc_json_printer_uint32_field@@Base+0x7c>
   3cb70:	ldr	r0, [r4, #20]
   3cb74:	add	r1, r0, #1
   3cb78:	str	r1, [r4, #20]
   3cb7c:	mov	r1, #44	; 0x2c
   3cb80:	strb	r1, [r0]
   3cb84:	mov	r0, r4
   3cb88:	mov	r1, r3
   3cb8c:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3cb90:	ldr	r1, [r4, #20]
   3cb94:	mov	r0, r6
   3cb98:	bl	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   3cb9c:	ldr	r1, [r4, #20]
   3cba0:	add	r0, r1, r0
   3cba4:	str	r0, [r4, #20]
   3cba8:	pop	{r4, r5, r6, sl, fp, pc}
   3cbac:	ldr	r6, [r2]
   3cbb0:	cmp	r6, r0
   3cbb4:	bne	3cb58 <flatcc_json_printer_uint32_field@@Base+0x50>
   3cbb8:	ldrb	r2, [r4, #28]
   3cbbc:	mov	r6, r0
   3cbc0:	cmp	r2, #0
   3cbc4:	popne	{r4, r5, r6, sl, fp, pc}
   3cbc8:	b	3cb58 <flatcc_json_printer_uint32_field@@Base+0x50>

0003cbcc <flatcc_json_printer_uint64_field@@Base>:
   3cbcc:	push	{r4, r6, r7, r8, fp, lr}
   3cbd0:	add	fp, sp, #16
   3cbd4:	mov	r4, r0
   3cbd8:	mov	r0, #4
   3cbdc:	ldr	r6, [r1, #8]
   3cbe0:	ldr	lr, [fp, #20]
   3cbe4:	add	r7, r0, r2, lsl #1
   3cbe8:	ldr	r2, [fp, #16]
   3cbec:	cmp	r7, r6
   3cbf0:	bge	3cc10 <flatcc_json_printer_uint64_field@@Base+0x44>
   3cbf4:	ldr	r6, [r1, #4]
   3cbf8:	add	r7, r6, r7
   3cbfc:	ldrh	r7, [r7]
   3cc00:	cmp	r7, #0
   3cc04:	ldrne	r6, [r1]
   3cc08:	addsne	r7, r6, r7
   3cc0c:	bne	3cc7c <flatcc_json_printer_uint64_field@@Base+0xb0>
   3cc10:	ldrb	r0, [r4, #29]
   3cc14:	mov	r8, r2
   3cc18:	mov	r7, lr
   3cc1c:	cmp	r0, #0
   3cc20:	beq	3cc78 <flatcc_json_printer_uint64_field@@Base+0xac>
   3cc24:	ldr	r0, [r1, #16]
   3cc28:	ldr	r2, [fp, #8]
   3cc2c:	add	r6, r0, #1
   3cc30:	cmp	r0, #0
   3cc34:	str	r6, [r1, #16]
   3cc38:	beq	3cc50 <flatcc_json_printer_uint64_field@@Base+0x84>
   3cc3c:	ldr	r0, [r4, #20]
   3cc40:	add	r1, r0, #1
   3cc44:	str	r1, [r4, #20]
   3cc48:	mov	r1, #44	; 0x2c
   3cc4c:	strb	r1, [r0]
   3cc50:	mov	r0, r4
   3cc54:	mov	r1, r3
   3cc58:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3cc5c:	ldr	r2, [r4, #20]
   3cc60:	mov	r0, r8
   3cc64:	mov	r1, r7
   3cc68:	bl	3bb70 <flatcc_json_printer_uint64@@Base+0x30>
   3cc6c:	ldr	r1, [r4, #20]
   3cc70:	add	r0, r1, r0
   3cc74:	str	r0, [r4, #20]
   3cc78:	pop	{r4, r6, r7, r8, fp, pc}
   3cc7c:	ldr	r8, [r7]
   3cc80:	ldr	r7, [r7, #4]
   3cc84:	eor	ip, r7, lr
   3cc88:	eor	r0, r8, r2
   3cc8c:	orrs	r0, r0, ip
   3cc90:	bne	3cc24 <flatcc_json_printer_uint64_field@@Base+0x58>
   3cc94:	ldrb	r0, [r4, #28]
   3cc98:	mov	r8, r2
   3cc9c:	mov	r7, lr
   3cca0:	cmp	r0, #0
   3cca4:	popne	{r4, r6, r7, r8, fp, pc}
   3cca8:	b	3cc24 <flatcc_json_printer_uint64_field@@Base+0x58>

0003ccac <flatcc_json_printer_int8_field@@Base>:
   3ccac:	push	{r4, r5, r6, sl, fp, lr}
   3ccb0:	add	fp, sp, #16
   3ccb4:	mov	r6, r0
   3ccb8:	mov	r0, #4
   3ccbc:	ldr	r5, [r1, #8]
   3ccc0:	add	r2, r0, r2, lsl #1
   3ccc4:	ldr	r0, [fp, #12]
   3ccc8:	cmp	r2, r5
   3cccc:	bge	3ccec <flatcc_json_printer_int8_field@@Base+0x40>
   3ccd0:	ldr	r5, [r1, #4]
   3ccd4:	add	r2, r5, r2
   3ccd8:	ldrh	r2, [r2]
   3ccdc:	cmp	r2, #0
   3cce0:	ldrne	r5, [r1]
   3cce4:	addsne	r2, r5, r2
   3cce8:	bne	3ce18 <flatcc_json_printer_int8_field@@Base+0x16c>
   3ccec:	ldrb	r2, [r6, #29]
   3ccf0:	mov	r5, r0
   3ccf4:	cmp	r2, #0
   3ccf8:	beq	3ce14 <flatcc_json_printer_int8_field@@Base+0x168>
   3ccfc:	ldr	r0, [r1, #16]
   3cd00:	ldr	r2, [fp, #8]
   3cd04:	add	r4, r0, #1
   3cd08:	cmp	r0, #0
   3cd0c:	str	r4, [r1, #16]
   3cd10:	beq	3cd28 <flatcc_json_printer_int8_field@@Base+0x7c>
   3cd14:	ldr	r0, [r6, #20]
   3cd18:	add	r1, r0, #1
   3cd1c:	str	r1, [r6, #20]
   3cd20:	mov	r1, #44	; 0x2c
   3cd24:	strb	r1, [r0]
   3cd28:	mov	r0, r6
   3cd2c:	mov	r1, r3
   3cd30:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3cd34:	sxtb	r2, r5
   3cd38:	ldr	r0, [r6, #20]
   3cd3c:	uxtb	r1, r5
   3cd40:	cmn	r2, #1
   3cd44:	lsr	r1, r1, #7
   3cd48:	movle	r2, #45	; 0x2d
   3cd4c:	rsble	r5, r5, #0
   3cd50:	strble	r2, [r0], #1
   3cd54:	uxtb	r2, r5
   3cd58:	cmp	r2, #100	; 0x64
   3cd5c:	bcc	3cdac <flatcc_json_printer_int8_field@@Base+0x100>
   3cd60:	mov	r3, #0
   3cd64:	strb	r3, [r0, #3]
   3cd68:	movw	r3, #34079	; 0x851f
   3cd6c:	movt	r3, #20971	; 0x51eb
   3cd70:	umull	r3, r5, r2, r3
   3cd74:	mov	r3, #48	; 0x30
   3cd78:	orr	r3, r3, r5, lsr #5
   3cd7c:	strb	r3, [r0]
   3cd80:	lsr	r3, r5, #5
   3cd84:	mov	r5, #100	; 0x64
   3cd88:	mls	r2, r3, r5, r2
   3cd8c:	ldr	r3, [pc, #168]	; 3ce3c <flatcc_json_printer_int8_field@@Base+0x190>
   3cd90:	uxtb	r2, r2
   3cd94:	add	r3, pc, r3
   3cd98:	add	r2, r3, r2, lsl #1
   3cd9c:	ldrh	r2, [r2]
   3cda0:	strh	r2, [r0, #1]
   3cda4:	mov	r0, #3
   3cda8:	b	3ce04 <flatcc_json_printer_int8_field@@Base+0x158>
   3cdac:	cmp	r2, #10
   3cdb0:	bcc	3cdf0 <flatcc_json_printer_int8_field@@Base+0x144>
   3cdb4:	mov	r3, #0
   3cdb8:	strb	r3, [r0, #2]
   3cdbc:	movw	r3, #34079	; 0x851f
   3cdc0:	movt	r3, #20971	; 0x51eb
   3cdc4:	umull	r3, r5, r2, r3
   3cdc8:	lsr	r3, r5, #5
   3cdcc:	mov	r5, #100	; 0x64
   3cdd0:	mls	r2, r3, r5, r2
   3cdd4:	ldr	r3, [pc, #100]	; 3ce40 <flatcc_json_printer_int8_field@@Base+0x194>
   3cdd8:	add	r3, pc, r3
   3cddc:	add	r2, r3, r2, lsl #1
   3cde0:	ldrh	r2, [r2]
   3cde4:	strh	r2, [r0]
   3cde8:	mov	r0, #2
   3cdec:	b	3ce04 <flatcc_json_printer_int8_field@@Base+0x158>
   3cdf0:	mov	r2, #0
   3cdf4:	strb	r2, [r0, #1]
   3cdf8:	add	r2, r5, #48	; 0x30
   3cdfc:	strb	r2, [r0]
   3ce00:	mov	r0, #1
   3ce04:	add	r0, r0, r1
   3ce08:	ldr	r1, [r6, #20]
   3ce0c:	add	r0, r1, r0
   3ce10:	str	r0, [r6, #20]
   3ce14:	pop	{r4, r5, r6, sl, fp, pc}
   3ce18:	ldrb	r5, [r2]
   3ce1c:	uxtb	r2, r0
   3ce20:	cmp	r5, r2
   3ce24:	bne	3ccfc <flatcc_json_printer_int8_field@@Base+0x50>
   3ce28:	ldrb	r2, [r6, #28]
   3ce2c:	mov	r5, r0
   3ce30:	cmp	r2, #0
   3ce34:	popne	{r4, r5, r6, sl, fp, pc}
   3ce38:	b	3ccfc <flatcc_json_printer_int8_field@@Base+0x50>
   3ce3c:	andeq	r1, r1, r3, asr r1
   3ce40:	andeq	r1, r1, pc, lsl #2

0003ce44 <flatcc_json_printer_int16_field@@Base>:
   3ce44:	push	{r4, r5, r6, sl, fp, lr}
   3ce48:	add	fp, sp, #16
   3ce4c:	mov	r4, r0
   3ce50:	mov	r0, #4
   3ce54:	ldr	r6, [r1, #8]
   3ce58:	add	r2, r0, r2, lsl #1
   3ce5c:	ldr	r0, [fp, #12]
   3ce60:	cmp	r2, r6
   3ce64:	bge	3ce84 <flatcc_json_printer_int16_field@@Base+0x40>
   3ce68:	ldr	r6, [r1, #4]
   3ce6c:	add	r2, r6, r2
   3ce70:	ldrh	r2, [r2]
   3ce74:	cmp	r2, #0
   3ce78:	ldrne	r6, [r1]
   3ce7c:	addsne	r2, r6, r2
   3ce80:	bne	3cf08 <flatcc_json_printer_int16_field@@Base+0xc4>
   3ce84:	ldrb	r2, [r4, #29]
   3ce88:	mov	r5, r0
   3ce8c:	cmp	r2, #0
   3ce90:	beq	3cf04 <flatcc_json_printer_int16_field@@Base+0xc0>
   3ce94:	ldr	r0, [r1, #16]
   3ce98:	ldr	r2, [fp, #8]
   3ce9c:	add	r6, r0, #1
   3cea0:	cmp	r0, #0
   3cea4:	str	r6, [r1, #16]
   3cea8:	beq	3cec0 <flatcc_json_printer_int16_field@@Base+0x7c>
   3ceac:	ldr	r0, [r4, #20]
   3ceb0:	add	r1, r0, #1
   3ceb4:	str	r1, [r4, #20]
   3ceb8:	mov	r1, #44	; 0x2c
   3cebc:	strb	r1, [r0]
   3cec0:	mov	r0, r4
   3cec4:	mov	r1, r3
   3cec8:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3cecc:	uxth	r0, r5
   3ced0:	ldr	r1, [r4, #20]
   3ced4:	lsr	r6, r0, #15
   3ced8:	sxth	r0, r5
   3cedc:	cmn	r0, #1
   3cee0:	movle	r0, #45	; 0x2d
   3cee4:	rsble	r5, r5, #0
   3cee8:	strble	r0, [r1], #1
   3ceec:	uxth	r0, r5
   3cef0:	bl	3b670 <flatcc_json_printer_uint16@@Base+0x2c>
   3cef4:	ldr	r1, [r4, #20]
   3cef8:	add	r0, r0, r6
   3cefc:	add	r0, r1, r0
   3cf00:	str	r0, [r4, #20]
   3cf04:	pop	{r4, r5, r6, sl, fp, pc}
   3cf08:	ldrh	r5, [r2]
   3cf0c:	uxth	r2, r0
   3cf10:	cmp	r5, r2
   3cf14:	bne	3ce94 <flatcc_json_printer_int16_field@@Base+0x50>
   3cf18:	ldrb	r2, [r4, #28]
   3cf1c:	mov	r5, r0
   3cf20:	cmp	r2, #0
   3cf24:	popne	{r4, r5, r6, sl, fp, pc}
   3cf28:	b	3ce94 <flatcc_json_printer_int16_field@@Base+0x50>

0003cf2c <flatcc_json_printer_int32_field@@Base>:
   3cf2c:	push	{r4, r5, r6, sl, fp, lr}
   3cf30:	add	fp, sp, #16
   3cf34:	mov	r4, r0
   3cf38:	mov	r0, #4
   3cf3c:	ldr	r6, [r1, #8]
   3cf40:	add	r2, r0, r2, lsl #1
   3cf44:	ldr	r0, [fp, #12]
   3cf48:	cmp	r2, r6
   3cf4c:	bge	3cf6c <flatcc_json_printer_int32_field@@Base+0x40>
   3cf50:	ldr	r6, [r1, #4]
   3cf54:	add	r2, r6, r2
   3cf58:	ldrh	r2, [r2]
   3cf5c:	cmp	r2, #0
   3cf60:	ldrne	r6, [r1]
   3cf64:	addsne	r2, r6, r2
   3cf68:	bne	3cfe8 <flatcc_json_printer_int32_field@@Base+0xbc>
   3cf6c:	ldrb	r2, [r4, #29]
   3cf70:	mov	r5, r0
   3cf74:	cmp	r2, #0
   3cf78:	beq	3cfe4 <flatcc_json_printer_int32_field@@Base+0xb8>
   3cf7c:	ldr	r0, [r1, #16]
   3cf80:	ldr	r2, [fp, #8]
   3cf84:	add	r6, r0, #1
   3cf88:	cmp	r0, #0
   3cf8c:	str	r6, [r1, #16]
   3cf90:	beq	3cfa8 <flatcc_json_printer_int32_field@@Base+0x7c>
   3cf94:	ldr	r0, [r4, #20]
   3cf98:	add	r1, r0, #1
   3cf9c:	str	r1, [r4, #20]
   3cfa0:	mov	r1, #44	; 0x2c
   3cfa4:	strb	r1, [r0]
   3cfa8:	mov	r0, r4
   3cfac:	mov	r1, r3
   3cfb0:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3cfb4:	ldr	r1, [r4, #20]
   3cfb8:	cmn	r5, #1
   3cfbc:	lsr	r6, r5, #31
   3cfc0:	movle	r0, #45	; 0x2d
   3cfc4:	rsble	r5, r5, #0
   3cfc8:	strble	r0, [r1], #1
   3cfcc:	mov	r0, r5
   3cfd0:	bl	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   3cfd4:	ldr	r1, [r4, #20]
   3cfd8:	add	r0, r0, r6
   3cfdc:	add	r0, r1, r0
   3cfe0:	str	r0, [r4, #20]
   3cfe4:	pop	{r4, r5, r6, sl, fp, pc}
   3cfe8:	ldr	r5, [r2]
   3cfec:	cmp	r5, r0
   3cff0:	bne	3cf7c <flatcc_json_printer_int32_field@@Base+0x50>
   3cff4:	ldrb	r2, [r4, #28]
   3cff8:	mov	r5, r0
   3cffc:	cmp	r2, #0
   3d000:	popne	{r4, r5, r6, sl, fp, pc}
   3d004:	b	3cf7c <flatcc_json_printer_int32_field@@Base+0x50>

0003d008 <flatcc_json_printer_int64_field@@Base>:
   3d008:	push	{r4, r5, r6, r7, fp, lr}
   3d00c:	add	fp, sp, #16
   3d010:	mov	r4, r0
   3d014:	mov	r0, #4
   3d018:	ldr	r6, [r1, #8]
   3d01c:	add	r7, r0, r2, lsl #1
   3d020:	ldr	r0, [fp, #20]
   3d024:	ldr	r2, [fp, #16]
   3d028:	cmp	r7, r6
   3d02c:	bge	3d04c <flatcc_json_printer_int64_field@@Base+0x44>
   3d030:	ldr	r6, [r1, #4]
   3d034:	add	r7, r6, r7
   3d038:	ldrh	r7, [r7]
   3d03c:	cmp	r7, #0
   3d040:	ldrne	r6, [r1]
   3d044:	addsne	r7, r6, r7
   3d048:	bne	3d0d8 <flatcc_json_printer_int64_field@@Base+0xd0>
   3d04c:	ldrb	r7, [r4, #29]
   3d050:	mov	r6, r2
   3d054:	cmp	r7, #0
   3d058:	mov	r7, r0
   3d05c:	beq	3d0d4 <flatcc_json_printer_int64_field@@Base+0xcc>
   3d060:	ldr	r0, [r1, #16]
   3d064:	ldr	r2, [fp, #8]
   3d068:	add	r5, r0, #1
   3d06c:	cmp	r0, #0
   3d070:	str	r5, [r1, #16]
   3d074:	beq	3d08c <flatcc_json_printer_int64_field@@Base+0x84>
   3d078:	ldr	r0, [r4, #20]
   3d07c:	add	r1, r0, #1
   3d080:	str	r1, [r4, #20]
   3d084:	mov	r1, #44	; 0x2c
   3d088:	strb	r1, [r0]
   3d08c:	mov	r0, r4
   3d090:	mov	r1, r3
   3d094:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3d098:	ldr	r2, [r4, #20]
   3d09c:	lsr	r5, r7, #31
   3d0a0:	cmn	r7, #1
   3d0a4:	bgt	3d0b8 <flatcc_json_printer_int64_field@@Base+0xb0>
   3d0a8:	mov	r0, #45	; 0x2d
   3d0ac:	rsbs	r6, r6, #0
   3d0b0:	strb	r0, [r2], #1
   3d0b4:	rsc	r7, r7, #0
   3d0b8:	mov	r0, r6
   3d0bc:	mov	r1, r7
   3d0c0:	bl	3bb70 <flatcc_json_printer_uint64@@Base+0x30>
   3d0c4:	ldr	r1, [r4, #20]
   3d0c8:	add	r0, r0, r5
   3d0cc:	add	r0, r1, r0
   3d0d0:	str	r0, [r4, #20]
   3d0d4:	pop	{r4, r5, r6, r7, fp, pc}
   3d0d8:	ldrd	r6, [r7]
   3d0dc:	eor	ip, r7, r0
   3d0e0:	eor	r5, r6, r2
   3d0e4:	orrs	r5, r5, ip
   3d0e8:	bne	3d060 <flatcc_json_printer_int64_field@@Base+0x58>
   3d0ec:	ldrb	r7, [r4, #28]
   3d0f0:	mov	r6, r2
   3d0f4:	cmp	r7, #0
   3d0f8:	mov	r7, r0
   3d0fc:	popne	{r4, r5, r6, r7, fp, pc}
   3d100:	b	3d060 <flatcc_json_printer_int64_field@@Base+0x58>

0003d104 <flatcc_json_printer_bool_field@@Base>:
   3d104:	push	{r4, r5, r6, sl, fp, lr}
   3d108:	add	fp, sp, #16
   3d10c:	mov	r4, r0
   3d110:	mov	r0, #4
   3d114:	ldr	r5, [r1, #8]
   3d118:	add	r2, r0, r2, lsl #1
   3d11c:	ldr	r0, [fp, #12]
   3d120:	cmp	r2, r5
   3d124:	bge	3d144 <flatcc_json_printer_bool_field@@Base+0x40>
   3d128:	ldr	r5, [r1, #4]
   3d12c:	add	r2, r5, r2
   3d130:	ldrh	r2, [r2]
   3d134:	cmp	r2, #0
   3d138:	ldrne	r5, [r1]
   3d13c:	addsne	r2, r5, r2
   3d140:	bne	3d1dc <flatcc_json_printer_bool_field@@Base+0xd8>
   3d144:	ldrb	r2, [r4, #29]
   3d148:	mov	r6, r0
   3d14c:	cmp	r2, #0
   3d150:	beq	3d1d8 <flatcc_json_printer_bool_field@@Base+0xd4>
   3d154:	ldr	r0, [r1, #16]
   3d158:	ldr	r2, [fp, #8]
   3d15c:	add	r5, r0, #1
   3d160:	cmp	r0, #0
   3d164:	str	r5, [r1, #16]
   3d168:	beq	3d180 <flatcc_json_printer_bool_field@@Base+0x7c>
   3d16c:	ldr	r0, [r4, #20]
   3d170:	add	r1, r0, #1
   3d174:	str	r1, [r4, #20]
   3d178:	mov	r1, #44	; 0x2c
   3d17c:	strb	r1, [r0]
   3d180:	mov	r0, r4
   3d184:	mov	r1, r3
   3d188:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3d18c:	ldr	r0, [r4, #20]
   3d190:	cmp	r6, #0
   3d194:	beq	3d1b4 <flatcc_json_printer_bool_field@@Base+0xb0>
   3d198:	mov	r1, #0
   3d19c:	strb	r1, [r0, #4]
   3d1a0:	movw	r1, #29300	; 0x7274
   3d1a4:	movt	r1, #25973	; 0x6575
   3d1a8:	str	r1, [r0]
   3d1ac:	mov	r0, #4
   3d1b0:	b	3d1cc <flatcc_json_printer_bool_field@@Base+0xc8>
   3d1b4:	mov	r1, #101	; 0x65
   3d1b8:	strh	r1, [r0, #4]
   3d1bc:	movw	r1, #24934	; 0x6166
   3d1c0:	movt	r1, #29548	; 0x736c
   3d1c4:	str	r1, [r0]
   3d1c8:	mov	r0, #5
   3d1cc:	ldr	r1, [r4, #20]
   3d1d0:	add	r0, r1, r0
   3d1d4:	str	r0, [r4, #20]
   3d1d8:	pop	{r4, r5, r6, sl, fp, pc}
   3d1dc:	ldrb	r6, [r2]
   3d1e0:	cmp	r6, r0
   3d1e4:	bne	3d154 <flatcc_json_printer_bool_field@@Base+0x50>
   3d1e8:	ldrb	r2, [r4, #28]
   3d1ec:	mov	r6, r0
   3d1f0:	cmp	r2, #0
   3d1f4:	popne	{r4, r5, r6, sl, fp, pc}
   3d1f8:	b	3d154 <flatcc_json_printer_bool_field@@Base+0x50>

0003d1fc <flatcc_json_printer_float_field@@Base>:
   3d1fc:	push	{r4, r5, fp, lr}
   3d200:	add	fp, sp, #8
   3d204:	vpush	{d8}
   3d208:	mov	r5, r0
   3d20c:	mov	r0, #4
   3d210:	vmov.f32	s16, s0
   3d214:	add	r0, r0, r2, lsl #1
   3d218:	ldr	r2, [r1, #8]
   3d21c:	cmp	r0, r2
   3d220:	bge	3d240 <flatcc_json_printer_float_field@@Base+0x44>
   3d224:	ldr	r2, [r1, #4]
   3d228:	add	r0, r2, r0
   3d22c:	ldrh	r0, [r0]
   3d230:	cmp	r0, #0
   3d234:	ldrne	r2, [r1]
   3d238:	addsne	r0, r2, r0
   3d23c:	bne	3d2a4 <flatcc_json_printer_float_field@@Base+0xa8>
   3d240:	ldrb	r0, [r5, #29]
   3d244:	cmp	r0, #0
   3d248:	beq	3d29c <flatcc_json_printer_float_field@@Base+0xa0>
   3d24c:	ldr	r0, [r1, #16]
   3d250:	ldr	r2, [fp, #8]
   3d254:	add	r4, r0, #1
   3d258:	cmp	r0, #0
   3d25c:	str	r4, [r1, #16]
   3d260:	beq	3d278 <flatcc_json_printer_float_field@@Base+0x7c>
   3d264:	ldr	r0, [r5, #20]
   3d268:	add	r1, r0, #1
   3d26c:	str	r1, [r5, #20]
   3d270:	mov	r1, #44	; 0x2c
   3d274:	strb	r1, [r0]
   3d278:	mov	r0, r5
   3d27c:	mov	r1, r3
   3d280:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3d284:	vcvt.f64.f32	d0, s16
   3d288:	ldr	r0, [r5, #20]
   3d28c:	bl	3a138 <flatcc_json_printer_fmt_float@@Base+0xc>
   3d290:	ldr	r1, [r5, #20]
   3d294:	add	r0, r1, r0
   3d298:	str	r0, [r5, #20]
   3d29c:	vpop	{d8}
   3d2a0:	pop	{r4, r5, fp, pc}
   3d2a4:	vldr	s0, [r0]
   3d2a8:	vcmp.f32	s0, s16
   3d2ac:	vmrs	APSR_nzcv, fpscr
   3d2b0:	bne	3d2c8 <flatcc_json_printer_float_field@@Base+0xcc>
   3d2b4:	ldrb	r0, [r5, #28]
   3d2b8:	vmov.f32	s16, s0
   3d2bc:	cmp	r0, #0
   3d2c0:	bne	3d29c <flatcc_json_printer_float_field@@Base+0xa0>
   3d2c4:	b	3d24c <flatcc_json_printer_float_field@@Base+0x50>
   3d2c8:	vmov.f32	s16, s0
   3d2cc:	b	3d24c <flatcc_json_printer_float_field@@Base+0x50>

0003d2d0 <flatcc_json_printer_double_field@@Base>:
   3d2d0:	push	{r4, r5, fp, lr}
   3d2d4:	add	fp, sp, #8
   3d2d8:	vpush	{d8}
   3d2dc:	mov	r5, r0
   3d2e0:	mov	r0, #4
   3d2e4:	vmov.f64	d8, d0
   3d2e8:	add	r0, r0, r2, lsl #1
   3d2ec:	ldr	r2, [r1, #8]
   3d2f0:	cmp	r0, r2
   3d2f4:	bge	3d314 <flatcc_json_printer_double_field@@Base+0x44>
   3d2f8:	ldr	r2, [r1, #4]
   3d2fc:	add	r0, r2, r0
   3d300:	ldrh	r0, [r0]
   3d304:	cmp	r0, #0
   3d308:	ldrne	r2, [r1]
   3d30c:	addsne	r0, r2, r0
   3d310:	bne	3d378 <flatcc_json_printer_double_field@@Base+0xa8>
   3d314:	ldrb	r0, [r5, #29]
   3d318:	cmp	r0, #0
   3d31c:	beq	3d370 <flatcc_json_printer_double_field@@Base+0xa0>
   3d320:	ldr	r0, [r1, #16]
   3d324:	ldr	r2, [fp, #8]
   3d328:	add	r4, r0, #1
   3d32c:	cmp	r0, #0
   3d330:	str	r4, [r1, #16]
   3d334:	beq	3d34c <flatcc_json_printer_double_field@@Base+0x7c>
   3d338:	ldr	r0, [r5, #20]
   3d33c:	add	r1, r0, #1
   3d340:	str	r1, [r5, #20]
   3d344:	mov	r1, #44	; 0x2c
   3d348:	strb	r1, [r0]
   3d34c:	mov	r0, r5
   3d350:	mov	r1, r3
   3d354:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3d358:	ldr	r0, [r5, #20]
   3d35c:	vmov.f64	d0, d8
   3d360:	bl	3a138 <flatcc_json_printer_fmt_float@@Base+0xc>
   3d364:	ldr	r1, [r5, #20]
   3d368:	add	r0, r1, r0
   3d36c:	str	r0, [r5, #20]
   3d370:	vpop	{d8}
   3d374:	pop	{r4, r5, fp, pc}
   3d378:	vldr	d16, [r0]
   3d37c:	vcmp.f64	d16, d8
   3d380:	vmrs	APSR_nzcv, fpscr
   3d384:	bne	3d39c <flatcc_json_printer_double_field@@Base+0xcc>
   3d388:	ldrb	r0, [r5, #28]
   3d38c:	vmov.f64	d8, d16
   3d390:	cmp	r0, #0
   3d394:	bne	3d370 <flatcc_json_printer_double_field@@Base+0xa0>
   3d398:	b	3d320 <flatcc_json_printer_double_field@@Base+0x50>
   3d39c:	vmov.f64	d8, d16
   3d3a0:	b	3d320 <flatcc_json_printer_double_field@@Base+0x50>

0003d3a4 <flatcc_json_printer_uint8_enum_field@@Base>:
   3d3a4:	push	{r4, r5, r6, r7, fp, lr}
   3d3a8:	add	fp, sp, #16
   3d3ac:	mov	r6, r0
   3d3b0:	mov	r0, #4
   3d3b4:	ldr	r4, [r1, #8]
   3d3b8:	ldr	ip, [fp, #16]
   3d3bc:	add	r5, r0, r2, lsl #1
   3d3c0:	ldr	r0, [fp, #12]
   3d3c4:	ldr	r2, [fp, #8]
   3d3c8:	cmp	r5, r4
   3d3cc:	bge	3d3ec <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   3d3d0:	ldr	r4, [r1, #4]
   3d3d4:	add	r5, r4, r5
   3d3d8:	ldrh	r5, [r5]
   3d3dc:	cmp	r5, #0
   3d3e0:	ldrne	r4, [r1]
   3d3e4:	addsne	r5, r4, r5
   3d3e8:	bne	3d4ec <flatcc_json_printer_uint8_enum_field@@Base+0x148>
   3d3ec:	ldrb	r5, [r6, #29]
   3d3f0:	cmp	r5, #0
   3d3f4:	mov	r5, r0
   3d3f8:	beq	3d528 <flatcc_json_printer_uint8_enum_field@@Base+0x184>
   3d3fc:	ldr	r0, [r1, #16]
   3d400:	mov	r7, ip
   3d404:	add	r4, r0, #1
   3d408:	cmp	r0, #0
   3d40c:	str	r4, [r1, #16]
   3d410:	beq	3d428 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   3d414:	ldr	r0, [r6, #20]
   3d418:	add	r1, r0, #1
   3d41c:	str	r1, [r6, #20]
   3d420:	mov	r1, #44	; 0x2c
   3d424:	strb	r1, [r0]
   3d428:	mov	r0, r6
   3d42c:	mov	r1, r3
   3d430:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3d434:	ldrb	r0, [r6, #27]
   3d438:	cmp	r0, #0
   3d43c:	beq	3d498 <flatcc_json_printer_uint8_enum_field@@Base+0xf4>
   3d440:	ldr	r0, [r6, #20]
   3d444:	mov	r1, #0
   3d448:	cmp	r5, #100	; 0x64
   3d44c:	bcc	3d4ac <flatcc_json_printer_uint8_enum_field@@Base+0x108>
   3d450:	strb	r1, [r0, #3]
   3d454:	movw	r1, #34079	; 0x851f
   3d458:	movt	r1, #20971	; 0x51eb
   3d45c:	umull	r1, r2, r5, r1
   3d460:	mov	r1, #48	; 0x30
   3d464:	orr	r1, r1, r2, lsr #5
   3d468:	strb	r1, [r0]
   3d46c:	lsr	r1, r2, #5
   3d470:	mov	r2, #100	; 0x64
   3d474:	mls	r1, r1, r2, r5
   3d478:	ldr	r2, [pc, #172]	; 3d52c <flatcc_json_printer_uint8_enum_field@@Base+0x188>
   3d47c:	uxtb	r1, r1
   3d480:	add	r2, pc, r2
   3d484:	add	r1, r2, r1, lsl #1
   3d488:	ldrh	r1, [r1]
   3d48c:	strh	r1, [r0, #1]
   3d490:	mov	r0, #3
   3d494:	b	3d51c <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   3d498:	mov	r0, r6
   3d49c:	mov	r1, r5
   3d4a0:	mov	r2, r7
   3d4a4:	pop	{r4, r5, r6, r7, fp, lr}
   3d4a8:	bx	r2
   3d4ac:	cmp	r5, #10
   3d4b0:	bcc	3d50c <flatcc_json_printer_uint8_enum_field@@Base+0x168>
   3d4b4:	strb	r1, [r0, #2]
   3d4b8:	movw	r1, #34079	; 0x851f
   3d4bc:	movt	r1, #20971	; 0x51eb
   3d4c0:	umull	r1, r2, r5, r1
   3d4c4:	lsr	r1, r2, #5
   3d4c8:	mov	r2, #100	; 0x64
   3d4cc:	mls	r1, r1, r2, r5
   3d4d0:	ldr	r2, [pc, #88]	; 3d530 <flatcc_json_printer_uint8_enum_field@@Base+0x18c>
   3d4d4:	add	r2, pc, r2
   3d4d8:	add	r1, r2, r1, lsl #1
   3d4dc:	ldrh	r1, [r1]
   3d4e0:	strh	r1, [r0]
   3d4e4:	mov	r0, #2
   3d4e8:	b	3d51c <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   3d4ec:	ldrb	r5, [r5]
   3d4f0:	cmp	r5, r0
   3d4f4:	bne	3d3fc <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   3d4f8:	ldrb	r5, [r6, #28]
   3d4fc:	cmp	r5, #0
   3d500:	mov	r5, r0
   3d504:	popne	{r4, r5, r6, r7, fp, pc}
   3d508:	b	3d3fc <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   3d50c:	strb	r1, [r0, #1]
   3d510:	add	r1, r5, #48	; 0x30
   3d514:	strb	r1, [r0]
   3d518:	mov	r0, #1
   3d51c:	ldr	r1, [r6, #20]
   3d520:	add	r0, r1, r0
   3d524:	str	r0, [r6, #20]
   3d528:	pop	{r4, r5, r6, r7, fp, pc}
   3d52c:	andeq	r0, r1, r7, ror #20
   3d530:	andeq	r0, r1, r3, lsl sl

0003d534 <flatcc_json_printer_uint16_enum_field@@Base>:
   3d534:	push	{r4, r5, r6, r7, fp, lr}
   3d538:	add	fp, sp, #16
   3d53c:	mov	r4, r0
   3d540:	mov	r0, #4
   3d544:	ldr	r7, [fp, #16]
   3d548:	ldr	ip, [fp, #12]
   3d54c:	add	r5, r0, r2, lsl #1
   3d550:	ldr	r0, [r1, #8]
   3d554:	ldr	r2, [fp, #8]
   3d558:	cmp	r5, r0
   3d55c:	bge	3d57c <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   3d560:	ldr	r0, [r1, #4]
   3d564:	add	r0, r0, r5
   3d568:	ldrh	r5, [r0]
   3d56c:	cmp	r5, #0
   3d570:	ldrne	r0, [r1]
   3d574:	addsne	r5, r0, r5
   3d578:	bne	3d5fc <flatcc_json_printer_uint16_enum_field@@Base+0xc8>
   3d57c:	ldrb	r0, [r4, #29]
   3d580:	mov	r6, ip
   3d584:	cmp	r0, #0
   3d588:	beq	3d5e4 <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   3d58c:	ldr	r0, [r1, #16]
   3d590:	add	r5, r0, #1
   3d594:	cmp	r0, #0
   3d598:	str	r5, [r1, #16]
   3d59c:	beq	3d5b4 <flatcc_json_printer_uint16_enum_field@@Base+0x80>
   3d5a0:	ldr	r0, [r4, #20]
   3d5a4:	add	r1, r0, #1
   3d5a8:	str	r1, [r4, #20]
   3d5ac:	mov	r1, #44	; 0x2c
   3d5b0:	strb	r1, [r0]
   3d5b4:	mov	r0, r4
   3d5b8:	mov	r1, r3
   3d5bc:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3d5c0:	ldrb	r0, [r4, #27]
   3d5c4:	cmp	r0, #0
   3d5c8:	beq	3d5e8 <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   3d5cc:	ldr	r1, [r4, #20]
   3d5d0:	mov	r0, r6
   3d5d4:	bl	3b670 <flatcc_json_printer_uint16@@Base+0x2c>
   3d5d8:	ldr	r1, [r4, #20]
   3d5dc:	add	r0, r1, r0
   3d5e0:	str	r0, [r4, #20]
   3d5e4:	pop	{r4, r5, r6, r7, fp, pc}
   3d5e8:	mov	r0, r4
   3d5ec:	mov	r1, r6
   3d5f0:	mov	r2, r7
   3d5f4:	pop	{r4, r5, r6, r7, fp, lr}
   3d5f8:	bx	r2
   3d5fc:	ldrh	r6, [r5]
   3d600:	cmp	r6, ip
   3d604:	bne	3d58c <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   3d608:	ldrb	r0, [r4, #28]
   3d60c:	mov	r6, ip
   3d610:	cmp	r0, #0
   3d614:	popne	{r4, r5, r6, r7, fp, pc}
   3d618:	b	3d58c <flatcc_json_printer_uint16_enum_field@@Base+0x58>

0003d61c <flatcc_json_printer_uint32_enum_field@@Base>:
   3d61c:	push	{r4, r5, r6, r7, fp, lr}
   3d620:	add	fp, sp, #16
   3d624:	mov	r4, r0
   3d628:	mov	r0, #4
   3d62c:	ldr	r7, [fp, #16]
   3d630:	ldr	ip, [fp, #12]
   3d634:	add	r5, r0, r2, lsl #1
   3d638:	ldr	r0, [r1, #8]
   3d63c:	ldr	r2, [fp, #8]
   3d640:	cmp	r5, r0
   3d644:	bge	3d664 <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   3d648:	ldr	r0, [r1, #4]
   3d64c:	add	r0, r0, r5
   3d650:	ldrh	r5, [r0]
   3d654:	cmp	r5, #0
   3d658:	ldrne	r0, [r1]
   3d65c:	addsne	r5, r0, r5
   3d660:	bne	3d6e4 <flatcc_json_printer_uint32_enum_field@@Base+0xc8>
   3d664:	ldrb	r0, [r4, #29]
   3d668:	mov	r6, ip
   3d66c:	cmp	r0, #0
   3d670:	beq	3d6cc <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   3d674:	ldr	r0, [r1, #16]
   3d678:	add	r5, r0, #1
   3d67c:	cmp	r0, #0
   3d680:	str	r5, [r1, #16]
   3d684:	beq	3d69c <flatcc_json_printer_uint32_enum_field@@Base+0x80>
   3d688:	ldr	r0, [r4, #20]
   3d68c:	add	r1, r0, #1
   3d690:	str	r1, [r4, #20]
   3d694:	mov	r1, #44	; 0x2c
   3d698:	strb	r1, [r0]
   3d69c:	mov	r0, r4
   3d6a0:	mov	r1, r3
   3d6a4:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3d6a8:	ldrb	r0, [r4, #27]
   3d6ac:	cmp	r0, #0
   3d6b0:	beq	3d6d0 <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   3d6b4:	ldr	r1, [r4, #20]
   3d6b8:	mov	r0, r6
   3d6bc:	bl	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   3d6c0:	ldr	r1, [r4, #20]
   3d6c4:	add	r0, r1, r0
   3d6c8:	str	r0, [r4, #20]
   3d6cc:	pop	{r4, r5, r6, r7, fp, pc}
   3d6d0:	mov	r0, r4
   3d6d4:	mov	r1, r6
   3d6d8:	mov	r2, r7
   3d6dc:	pop	{r4, r5, r6, r7, fp, lr}
   3d6e0:	bx	r2
   3d6e4:	ldr	r6, [r5]
   3d6e8:	cmp	r6, ip
   3d6ec:	bne	3d674 <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   3d6f0:	ldrb	r0, [r4, #28]
   3d6f4:	mov	r6, ip
   3d6f8:	cmp	r0, #0
   3d6fc:	popne	{r4, r5, r6, r7, fp, pc}
   3d700:	b	3d674 <flatcc_json_printer_uint32_enum_field@@Base+0x58>

0003d704 <flatcc_json_printer_uint64_enum_field@@Base>:
   3d704:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d708:	add	fp, sp, #24
   3d70c:	mov	r4, r0
   3d710:	mov	r0, #4
   3d714:	ldr	ip, [fp, #20]
   3d718:	ldr	r6, [fp, #16]
   3d71c:	ldr	r5, [fp, #24]
   3d720:	add	r7, r0, r2, lsl #1
   3d724:	ldr	r0, [r1, #8]
   3d728:	ldr	r2, [fp, #8]
   3d72c:	cmp	r7, r0
   3d730:	bge	3d750 <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   3d734:	ldr	r0, [r1, #4]
   3d738:	add	r0, r0, r7
   3d73c:	ldrh	r7, [r0]
   3d740:	cmp	r7, #0
   3d744:	ldrne	r0, [r1]
   3d748:	addsne	r7, r0, r7
   3d74c:	bne	3d7dc <flatcc_json_printer_uint64_enum_field@@Base+0xd8>
   3d750:	ldrb	r0, [r4, #29]
   3d754:	mov	r8, r6
   3d758:	mov	r7, ip
   3d75c:	cmp	r0, #0
   3d760:	beq	3d7c0 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   3d764:	ldr	r0, [r1, #16]
   3d768:	add	r6, r0, #1
   3d76c:	cmp	r0, #0
   3d770:	str	r6, [r1, #16]
   3d774:	beq	3d78c <flatcc_json_printer_uint64_enum_field@@Base+0x88>
   3d778:	ldr	r0, [r4, #20]
   3d77c:	add	r1, r0, #1
   3d780:	str	r1, [r4, #20]
   3d784:	mov	r1, #44	; 0x2c
   3d788:	strb	r1, [r0]
   3d78c:	mov	r0, r4
   3d790:	mov	r1, r3
   3d794:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3d798:	ldrb	r0, [r4, #27]
   3d79c:	cmp	r0, #0
   3d7a0:	beq	3d7c4 <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   3d7a4:	ldr	r2, [r4, #20]
   3d7a8:	mov	r0, r8
   3d7ac:	mov	r1, r7
   3d7b0:	bl	3bb70 <flatcc_json_printer_uint64@@Base+0x30>
   3d7b4:	ldr	r1, [r4, #20]
   3d7b8:	add	r0, r1, r0
   3d7bc:	str	r0, [r4, #20]
   3d7c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3d7c4:	mov	r0, r4
   3d7c8:	mov	r2, r8
   3d7cc:	mov	r3, r7
   3d7d0:	mov	r1, r5
   3d7d4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d7d8:	bx	r1
   3d7dc:	ldr	r8, [r7]
   3d7e0:	ldr	r7, [r7, #4]
   3d7e4:	eor	lr, r7, ip
   3d7e8:	eor	r0, r8, r6
   3d7ec:	orrs	r0, r0, lr
   3d7f0:	bne	3d764 <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   3d7f4:	ldrb	r0, [r4, #28]
   3d7f8:	mov	r8, r6
   3d7fc:	mov	r7, ip
   3d800:	cmp	r0, #0
   3d804:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   3d808:	b	3d764 <flatcc_json_printer_uint64_enum_field@@Base+0x60>

0003d80c <flatcc_json_printer_int8_enum_field@@Base>:
   3d80c:	push	{r4, r5, r6, r7, fp, lr}
   3d810:	add	fp, sp, #16
   3d814:	mov	r6, r0
   3d818:	mov	r0, #4
   3d81c:	ldr	r4, [r1, #8]
   3d820:	ldr	ip, [fp, #16]
   3d824:	add	r5, r0, r2, lsl #1
   3d828:	ldr	r0, [fp, #12]
   3d82c:	ldr	r2, [fp, #8]
   3d830:	cmp	r5, r4
   3d834:	bge	3d854 <flatcc_json_printer_int8_enum_field@@Base+0x48>
   3d838:	ldr	r4, [r1, #4]
   3d83c:	add	r5, r4, r5
   3d840:	ldrh	r5, [r5]
   3d844:	cmp	r5, #0
   3d848:	ldrne	r4, [r1]
   3d84c:	addsne	r5, r4, r5
   3d850:	bne	3d978 <flatcc_json_printer_int8_enum_field@@Base+0x16c>
   3d854:	ldrb	r5, [r6, #29]
   3d858:	cmp	r5, #0
   3d85c:	mov	r5, r0
   3d860:	beq	3d9c0 <flatcc_json_printer_int8_enum_field@@Base+0x1b4>
   3d864:	ldr	r0, [r1, #16]
   3d868:	mov	r7, ip
   3d86c:	add	r4, r0, #1
   3d870:	cmp	r0, #0
   3d874:	str	r4, [r1, #16]
   3d878:	beq	3d890 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   3d87c:	ldr	r0, [r6, #20]
   3d880:	add	r1, r0, #1
   3d884:	str	r1, [r6, #20]
   3d888:	mov	r1, #44	; 0x2c
   3d88c:	strb	r1, [r0]
   3d890:	mov	r0, r6
   3d894:	mov	r1, r3
   3d898:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3d89c:	ldrb	r0, [r6, #27]
   3d8a0:	cmp	r0, #0
   3d8a4:	beq	3d920 <flatcc_json_printer_int8_enum_field@@Base+0x114>
   3d8a8:	sxtb	r2, r5
   3d8ac:	ldr	r0, [r6, #20]
   3d8b0:	uxtb	r1, r5
   3d8b4:	cmn	r2, #1
   3d8b8:	lsr	r1, r1, #7
   3d8bc:	movle	r2, #45	; 0x2d
   3d8c0:	rsble	r5, r5, #0
   3d8c4:	strble	r2, [r0], #1
   3d8c8:	uxtb	r2, r5
   3d8cc:	cmp	r2, #100	; 0x64
   3d8d0:	bcc	3d934 <flatcc_json_printer_int8_enum_field@@Base+0x128>
   3d8d4:	mov	r3, #0
   3d8d8:	strb	r3, [r0, #3]
   3d8dc:	movw	r3, #34079	; 0x851f
   3d8e0:	movt	r3, #20971	; 0x51eb
   3d8e4:	umull	r3, r5, r2, r3
   3d8e8:	mov	r3, #48	; 0x30
   3d8ec:	orr	r3, r3, r5, lsr #5
   3d8f0:	strb	r3, [r0]
   3d8f4:	lsr	r3, r5, #5
   3d8f8:	mov	r5, #100	; 0x64
   3d8fc:	mls	r2, r3, r5, r2
   3d900:	ldr	r3, [pc, #188]	; 3d9c4 <flatcc_json_printer_int8_enum_field@@Base+0x1b8>
   3d904:	uxtb	r2, r2
   3d908:	add	r3, pc, r3
   3d90c:	add	r2, r3, r2, lsl #1
   3d910:	ldrh	r2, [r2]
   3d914:	strh	r2, [r0, #1]
   3d918:	mov	r0, #3
   3d91c:	b	3d9b0 <flatcc_json_printer_int8_enum_field@@Base+0x1a4>
   3d920:	sxtb	r1, r5
   3d924:	mov	r0, r6
   3d928:	mov	r2, r7
   3d92c:	pop	{r4, r5, r6, r7, fp, lr}
   3d930:	bx	r2
   3d934:	cmp	r2, #10
   3d938:	bcc	3d99c <flatcc_json_printer_int8_enum_field@@Base+0x190>
   3d93c:	mov	r3, #0
   3d940:	strb	r3, [r0, #2]
   3d944:	movw	r3, #34079	; 0x851f
   3d948:	movt	r3, #20971	; 0x51eb
   3d94c:	umull	r3, r5, r2, r3
   3d950:	lsr	r3, r5, #5
   3d954:	mov	r5, #100	; 0x64
   3d958:	mls	r2, r3, r5, r2
   3d95c:	ldr	r3, [pc, #100]	; 3d9c8 <flatcc_json_printer_int8_enum_field@@Base+0x1bc>
   3d960:	add	r3, pc, r3
   3d964:	add	r2, r3, r2, lsl #1
   3d968:	ldrh	r2, [r2]
   3d96c:	strh	r2, [r0]
   3d970:	mov	r0, #2
   3d974:	b	3d9b0 <flatcc_json_printer_int8_enum_field@@Base+0x1a4>
   3d978:	ldrb	r5, [r5]
   3d97c:	uxtb	r4, r0
   3d980:	cmp	r5, r4
   3d984:	bne	3d864 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   3d988:	ldrb	r5, [r6, #28]
   3d98c:	cmp	r5, #0
   3d990:	mov	r5, r0
   3d994:	popne	{r4, r5, r6, r7, fp, pc}
   3d998:	b	3d864 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   3d99c:	mov	r2, #0
   3d9a0:	strb	r2, [r0, #1]
   3d9a4:	add	r2, r5, #48	; 0x30
   3d9a8:	strb	r2, [r0]
   3d9ac:	mov	r0, #1
   3d9b0:	add	r0, r0, r1
   3d9b4:	ldr	r1, [r6, #20]
   3d9b8:	add	r0, r1, r0
   3d9bc:	str	r0, [r6, #20]
   3d9c0:	pop	{r4, r5, r6, r7, fp, pc}
   3d9c4:	ldrdeq	r0, [r1], -pc	; <UNPREDICTABLE>
   3d9c8:	andeq	r0, r1, r7, lsl #11

0003d9cc <flatcc_json_printer_int16_enum_field@@Base>:
   3d9cc:	push	{r4, r5, r6, r7, fp, lr}
   3d9d0:	add	fp, sp, #16
   3d9d4:	mov	r4, r0
   3d9d8:	mov	r0, #4
   3d9dc:	ldr	r5, [r1, #8]
   3d9e0:	ldr	ip, [fp, #16]
   3d9e4:	add	r6, r0, r2, lsl #1
   3d9e8:	ldr	r0, [fp, #12]
   3d9ec:	ldr	r2, [fp, #8]
   3d9f0:	cmp	r6, r5
   3d9f4:	bge	3da14 <flatcc_json_printer_int16_enum_field@@Base+0x48>
   3d9f8:	ldr	r5, [r1, #4]
   3d9fc:	add	r6, r5, r6
   3da00:	ldrh	r6, [r6]
   3da04:	cmp	r6, #0
   3da08:	ldrne	r5, [r1]
   3da0c:	addsne	r6, r5, r6
   3da10:	bne	3dab8 <flatcc_json_printer_int16_enum_field@@Base+0xec>
   3da14:	ldrb	r6, [r4, #29]
   3da18:	mov	r5, r0
   3da1c:	cmp	r6, #0
   3da20:	beq	3daa0 <flatcc_json_printer_int16_enum_field@@Base+0xd4>
   3da24:	ldr	r0, [r1, #16]
   3da28:	mov	r7, ip
   3da2c:	add	r6, r0, #1
   3da30:	cmp	r0, #0
   3da34:	str	r6, [r1, #16]
   3da38:	beq	3da50 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   3da3c:	ldr	r0, [r4, #20]
   3da40:	add	r1, r0, #1
   3da44:	str	r1, [r4, #20]
   3da48:	mov	r1, #44	; 0x2c
   3da4c:	strb	r1, [r0]
   3da50:	mov	r0, r4
   3da54:	mov	r1, r3
   3da58:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3da5c:	ldrb	r0, [r4, #27]
   3da60:	cmp	r0, #0
   3da64:	beq	3daa4 <flatcc_json_printer_int16_enum_field@@Base+0xd8>
   3da68:	uxth	r0, r5
   3da6c:	ldr	r1, [r4, #20]
   3da70:	lsr	r6, r0, #15
   3da74:	sxth	r0, r5
   3da78:	cmn	r0, #1
   3da7c:	movle	r0, #45	; 0x2d
   3da80:	rsble	r5, r5, #0
   3da84:	strble	r0, [r1], #1
   3da88:	uxth	r0, r5
   3da8c:	bl	3b670 <flatcc_json_printer_uint16@@Base+0x2c>
   3da90:	ldr	r1, [r4, #20]
   3da94:	add	r0, r0, r6
   3da98:	add	r0, r1, r0
   3da9c:	str	r0, [r4, #20]
   3daa0:	pop	{r4, r5, r6, r7, fp, pc}
   3daa4:	sxth	r1, r5
   3daa8:	mov	r0, r4
   3daac:	mov	r2, r7
   3dab0:	pop	{r4, r5, r6, r7, fp, lr}
   3dab4:	bx	r2
   3dab8:	ldrh	r5, [r6]
   3dabc:	uxth	r6, r0
   3dac0:	cmp	r5, r6
   3dac4:	bne	3da24 <flatcc_json_printer_int16_enum_field@@Base+0x58>
   3dac8:	ldrb	r6, [r4, #28]
   3dacc:	mov	r5, r0
   3dad0:	cmp	r6, #0
   3dad4:	popne	{r4, r5, r6, r7, fp, pc}
   3dad8:	b	3da24 <flatcc_json_printer_int16_enum_field@@Base+0x58>

0003dadc <flatcc_json_printer_int32_enum_field@@Base>:
   3dadc:	push	{r4, r5, r6, r7, fp, lr}
   3dae0:	add	fp, sp, #16
   3dae4:	mov	r4, r0
   3dae8:	mov	r0, #4
   3daec:	ldr	r5, [r1, #8]
   3daf0:	ldr	ip, [fp, #16]
   3daf4:	add	r6, r0, r2, lsl #1
   3daf8:	ldr	r0, [fp, #12]
   3dafc:	ldr	r2, [fp, #8]
   3db00:	cmp	r6, r5
   3db04:	bge	3db24 <flatcc_json_printer_int32_enum_field@@Base+0x48>
   3db08:	ldr	r5, [r1, #4]
   3db0c:	add	r6, r5, r6
   3db10:	ldrh	r6, [r6]
   3db14:	cmp	r6, #0
   3db18:	ldrne	r5, [r1]
   3db1c:	addsne	r6, r5, r6
   3db20:	bne	3dbc0 <flatcc_json_printer_int32_enum_field@@Base+0xe4>
   3db24:	ldrb	r6, [r4, #29]
   3db28:	mov	r5, r0
   3db2c:	cmp	r6, #0
   3db30:	beq	3dba8 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   3db34:	ldr	r0, [r1, #16]
   3db38:	mov	r7, ip
   3db3c:	add	r6, r0, #1
   3db40:	cmp	r0, #0
   3db44:	str	r6, [r1, #16]
   3db48:	beq	3db60 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   3db4c:	ldr	r0, [r4, #20]
   3db50:	add	r1, r0, #1
   3db54:	str	r1, [r4, #20]
   3db58:	mov	r1, #44	; 0x2c
   3db5c:	strb	r1, [r0]
   3db60:	mov	r0, r4
   3db64:	mov	r1, r3
   3db68:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3db6c:	ldrb	r0, [r4, #27]
   3db70:	cmp	r0, #0
   3db74:	beq	3dbac <flatcc_json_printer_int32_enum_field@@Base+0xd0>
   3db78:	ldr	r1, [r4, #20]
   3db7c:	cmn	r5, #1
   3db80:	lsr	r6, r5, #31
   3db84:	movle	r0, #45	; 0x2d
   3db88:	rsble	r5, r5, #0
   3db8c:	strble	r0, [r1], #1
   3db90:	mov	r0, r5
   3db94:	bl	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   3db98:	ldr	r1, [r4, #20]
   3db9c:	add	r0, r0, r6
   3dba0:	add	r0, r1, r0
   3dba4:	str	r0, [r4, #20]
   3dba8:	pop	{r4, r5, r6, r7, fp, pc}
   3dbac:	mov	r0, r4
   3dbb0:	mov	r1, r5
   3dbb4:	mov	r2, r7
   3dbb8:	pop	{r4, r5, r6, r7, fp, lr}
   3dbbc:	bx	r2
   3dbc0:	ldr	r5, [r6]
   3dbc4:	cmp	r5, r0
   3dbc8:	bne	3db34 <flatcc_json_printer_int32_enum_field@@Base+0x58>
   3dbcc:	ldrb	r6, [r4, #28]
   3dbd0:	mov	r5, r0
   3dbd4:	cmp	r6, #0
   3dbd8:	popne	{r4, r5, r6, r7, fp, pc}
   3dbdc:	b	3db34 <flatcc_json_printer_int32_enum_field@@Base+0x58>

0003dbe0 <flatcc_json_printer_int64_enum_field@@Base>:
   3dbe0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3dbe4:	add	fp, sp, #24
   3dbe8:	mov	r4, r0
   3dbec:	mov	r0, #4
   3dbf0:	ldr	r5, [r1, #8]
   3dbf4:	ldr	r6, [fp, #16]
   3dbf8:	ldr	r9, [fp, #24]
   3dbfc:	add	r7, r0, r2, lsl #1
   3dc00:	ldr	r0, [fp, #20]
   3dc04:	ldr	r2, [fp, #8]
   3dc08:	cmp	r7, r5
   3dc0c:	bge	3dc2c <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   3dc10:	ldr	r5, [r1, #4]
   3dc14:	add	r7, r5, r7
   3dc18:	ldrh	r7, [r7]
   3dc1c:	cmp	r7, #0
   3dc20:	ldrne	r5, [r1]
   3dc24:	addsne	r7, r5, r7
   3dc28:	bne	3dcd8 <flatcc_json_printer_int64_enum_field@@Base+0xf8>
   3dc2c:	ldrb	r7, [r4, #29]
   3dc30:	mov	r8, r6
   3dc34:	cmp	r7, #0
   3dc38:	mov	r7, r0
   3dc3c:	beq	3dcbc <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   3dc40:	ldr	r0, [r1, #16]
   3dc44:	add	r6, r0, #1
   3dc48:	cmp	r0, #0
   3dc4c:	str	r6, [r1, #16]
   3dc50:	beq	3dc68 <flatcc_json_printer_int64_enum_field@@Base+0x88>
   3dc54:	ldr	r0, [r4, #20]
   3dc58:	add	r1, r0, #1
   3dc5c:	str	r1, [r4, #20]
   3dc60:	mov	r1, #44	; 0x2c
   3dc64:	strb	r1, [r0]
   3dc68:	mov	r0, r4
   3dc6c:	mov	r1, r3
   3dc70:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3dc74:	ldrb	r0, [r4, #27]
   3dc78:	cmp	r0, #0
   3dc7c:	beq	3dcc0 <flatcc_json_printer_int64_enum_field@@Base+0xe0>
   3dc80:	ldr	r2, [r4, #20]
   3dc84:	lsr	r5, r7, #31
   3dc88:	cmn	r7, #1
   3dc8c:	bgt	3dca0 <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   3dc90:	mov	r0, #45	; 0x2d
   3dc94:	rsbs	r8, r8, #0
   3dc98:	strb	r0, [r2], #1
   3dc9c:	rsc	r7, r7, #0
   3dca0:	mov	r0, r8
   3dca4:	mov	r1, r7
   3dca8:	bl	3bb70 <flatcc_json_printer_uint64@@Base+0x30>
   3dcac:	ldr	r1, [r4, #20]
   3dcb0:	add	r0, r0, r5
   3dcb4:	add	r0, r1, r0
   3dcb8:	str	r0, [r4, #20]
   3dcbc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3dcc0:	mov	r0, r4
   3dcc4:	mov	r2, r8
   3dcc8:	mov	r3, r7
   3dccc:	mov	r1, r9
   3dcd0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3dcd4:	bx	r1
   3dcd8:	ldr	r8, [r7]
   3dcdc:	ldr	r7, [r7, #4]
   3dce0:	eor	ip, r7, r0
   3dce4:	eor	r5, r8, r6
   3dce8:	orrs	r5, r5, ip
   3dcec:	bne	3dc40 <flatcc_json_printer_int64_enum_field@@Base+0x60>
   3dcf0:	ldrb	r7, [r4, #28]
   3dcf4:	mov	r8, r6
   3dcf8:	cmp	r7, #0
   3dcfc:	mov	r7, r0
   3dd00:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   3dd04:	b	3dc40 <flatcc_json_printer_int64_enum_field@@Base+0x60>

0003dd08 <flatcc_json_printer_bool_enum_field@@Base>:
   3dd08:	push	{r4, r5, r6, r7, fp, lr}
   3dd0c:	add	fp, sp, #16
   3dd10:	mov	r4, r0
   3dd14:	mov	r0, #4
   3dd18:	ldr	r7, [fp, #16]
   3dd1c:	ldr	ip, [fp, #12]
   3dd20:	add	r5, r0, r2, lsl #1
   3dd24:	ldr	r0, [r1, #8]
   3dd28:	ldr	r2, [fp, #8]
   3dd2c:	cmp	r5, r0
   3dd30:	bge	3dd50 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   3dd34:	ldr	r0, [r1, #4]
   3dd38:	add	r0, r0, r5
   3dd3c:	ldrh	r5, [r0]
   3dd40:	cmp	r5, #0
   3dd44:	ldrne	r0, [r1]
   3dd48:	addsne	r5, r0, r5
   3dd4c:	bne	3de04 <flatcc_json_printer_bool_enum_field@@Base+0xfc>
   3dd50:	ldrb	r0, [r4, #29]
   3dd54:	mov	r6, ip
   3dd58:	cmp	r0, #0
   3dd5c:	beq	3de00 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   3dd60:	ldr	r0, [r1, #16]
   3dd64:	add	r5, r0, #1
   3dd68:	cmp	r0, #0
   3dd6c:	str	r5, [r1, #16]
   3dd70:	beq	3dd88 <flatcc_json_printer_bool_enum_field@@Base+0x80>
   3dd74:	ldr	r0, [r4, #20]
   3dd78:	add	r1, r0, #1
   3dd7c:	str	r1, [r4, #20]
   3dd80:	mov	r1, #44	; 0x2c
   3dd84:	strb	r1, [r0]
   3dd88:	mov	r0, r4
   3dd8c:	mov	r1, r3
   3dd90:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3dd94:	ldrb	r0, [r4, #27]
   3dd98:	cmp	r0, #0
   3dd9c:	beq	3ddc8 <flatcc_json_printer_bool_enum_field@@Base+0xc0>
   3dda0:	ldr	r0, [r4, #20]
   3dda4:	cmp	r6, #0
   3dda8:	beq	3dddc <flatcc_json_printer_bool_enum_field@@Base+0xd4>
   3ddac:	mov	r1, #0
   3ddb0:	strb	r1, [r0, #4]
   3ddb4:	movw	r1, #29300	; 0x7274
   3ddb8:	movt	r1, #25973	; 0x6575
   3ddbc:	str	r1, [r0]
   3ddc0:	mov	r0, #4
   3ddc4:	b	3ddf4 <flatcc_json_printer_bool_enum_field@@Base+0xec>
   3ddc8:	mov	r0, r4
   3ddcc:	mov	r1, r6
   3ddd0:	mov	r2, r7
   3ddd4:	pop	{r4, r5, r6, r7, fp, lr}
   3ddd8:	bx	r2
   3dddc:	mov	r1, #101	; 0x65
   3dde0:	strh	r1, [r0, #4]
   3dde4:	movw	r1, #24934	; 0x6166
   3dde8:	movt	r1, #29548	; 0x736c
   3ddec:	str	r1, [r0]
   3ddf0:	mov	r0, #5
   3ddf4:	ldr	r1, [r4, #20]
   3ddf8:	add	r0, r1, r0
   3ddfc:	str	r0, [r4, #20]
   3de00:	pop	{r4, r5, r6, r7, fp, pc}
   3de04:	ldrb	r6, [r5]
   3de08:	cmp	r6, ip
   3de0c:	bne	3dd60 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   3de10:	ldrb	r0, [r4, #28]
   3de14:	mov	r6, ip
   3de18:	cmp	r0, #0
   3de1c:	popne	{r4, r5, r6, r7, fp, pc}
   3de20:	b	3dd60 <flatcc_json_printer_bool_enum_field@@Base+0x58>

0003de24 <flatcc_json_printer_uint8_struct_field@@Base>:
   3de24:	push	{r4, r5, r6, sl, fp, lr}
   3de28:	add	fp, sp, #16
   3de2c:	mov	r4, r1
   3de30:	ldrb	r6, [r2, r3]
   3de34:	ldr	r2, [fp, #12]
   3de38:	ldr	r1, [fp, #8]
   3de3c:	mov	r5, r0
   3de40:	cmp	r4, #0
   3de44:	beq	3de5c <flatcc_json_printer_uint8_struct_field@@Base+0x38>
   3de48:	ldr	r0, [r5, #20]
   3de4c:	add	r3, r0, #1
   3de50:	str	r3, [r5, #20]
   3de54:	mov	r3, #44	; 0x2c
   3de58:	strb	r3, [r0]
   3de5c:	mov	r0, r5
   3de60:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3de64:	ldr	r0, [r5, #20]
   3de68:	mov	r1, #0
   3de6c:	cmp	r6, #100	; 0x64
   3de70:	bcc	3debc <flatcc_json_printer_uint8_struct_field@@Base+0x98>
   3de74:	strb	r1, [r0, #3]
   3de78:	movw	r1, #34079	; 0x851f
   3de7c:	movt	r1, #20971	; 0x51eb
   3de80:	umull	r1, r2, r6, r1
   3de84:	mov	r1, #48	; 0x30
   3de88:	orr	r1, r1, r2, lsr #5
   3de8c:	strb	r1, [r0]
   3de90:	lsr	r1, r2, #5
   3de94:	mov	r2, #100	; 0x64
   3de98:	mls	r1, r1, r2, r6
   3de9c:	ldr	r2, [pc, #120]	; 3df1c <flatcc_json_printer_uint8_struct_field@@Base+0xf8>
   3dea0:	uxtb	r1, r1
   3dea4:	add	r2, pc, r2
   3dea8:	add	r1, r2, r1, lsl #1
   3deac:	ldrh	r1, [r1]
   3deb0:	strh	r1, [r0, #1]
   3deb4:	mov	r0, #3
   3deb8:	b	3df0c <flatcc_json_printer_uint8_struct_field@@Base+0xe8>
   3debc:	cmp	r6, #10
   3dec0:	bcc	3defc <flatcc_json_printer_uint8_struct_field@@Base+0xd8>
   3dec4:	strb	r1, [r0, #2]
   3dec8:	movw	r1, #34079	; 0x851f
   3decc:	movt	r1, #20971	; 0x51eb
   3ded0:	umull	r1, r2, r6, r1
   3ded4:	lsr	r1, r2, #5
   3ded8:	mov	r2, #100	; 0x64
   3dedc:	mls	r1, r1, r2, r6
   3dee0:	ldr	r2, [pc, #56]	; 3df20 <flatcc_json_printer_uint8_struct_field@@Base+0xfc>
   3dee4:	add	r2, pc, r2
   3dee8:	add	r1, r2, r1, lsl #1
   3deec:	ldrh	r1, [r1]
   3def0:	strh	r1, [r0]
   3def4:	mov	r0, #2
   3def8:	b	3df0c <flatcc_json_printer_uint8_struct_field@@Base+0xe8>
   3defc:	strb	r1, [r0, #1]
   3df00:	add	r1, r6, #48	; 0x30
   3df04:	strb	r1, [r0]
   3df08:	mov	r0, #1
   3df0c:	ldr	r1, [r5, #20]
   3df10:	add	r0, r1, r0
   3df14:	str	r0, [r5, #20]
   3df18:	pop	{r4, r5, r6, sl, fp, pc}
   3df1c:	andeq	r0, r1, r3, asr #32
   3df20:	andeq	r0, r1, r3

0003df24 <flatcc_json_printer_uint16_struct_field@@Base>:
   3df24:	push	{r4, r5, r6, sl, fp, lr}
   3df28:	add	fp, sp, #16
   3df2c:	mov	r4, r0
   3df30:	add	r0, r2, r3
   3df34:	mov	r5, r1
   3df38:	ldr	r2, [fp, #12]
   3df3c:	ldr	r1, [fp, #8]
   3df40:	ldrh	r6, [r0]
   3df44:	cmp	r5, #0
   3df48:	beq	3df60 <flatcc_json_printer_uint16_struct_field@@Base+0x3c>
   3df4c:	ldr	r0, [r4, #20]
   3df50:	add	r3, r0, #1
   3df54:	str	r3, [r4, #20]
   3df58:	mov	r3, #44	; 0x2c
   3df5c:	strb	r3, [r0]
   3df60:	mov	r0, r4
   3df64:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3df68:	ldr	r1, [r4, #20]
   3df6c:	mov	r0, r6
   3df70:	bl	3b670 <flatcc_json_printer_uint16@@Base+0x2c>
   3df74:	ldr	r1, [r4, #20]
   3df78:	add	r0, r1, r0
   3df7c:	str	r0, [r4, #20]
   3df80:	pop	{r4, r5, r6, sl, fp, pc}

0003df84 <flatcc_json_printer_uint32_struct_field@@Base>:
   3df84:	push	{r4, r5, r6, sl, fp, lr}
   3df88:	add	fp, sp, #16
   3df8c:	mov	r5, r1
   3df90:	ldr	r6, [r2, r3]
   3df94:	ldr	r2, [fp, #12]
   3df98:	ldr	r1, [fp, #8]
   3df9c:	mov	r4, r0
   3dfa0:	cmp	r5, #0
   3dfa4:	beq	3dfbc <flatcc_json_printer_uint32_struct_field@@Base+0x38>
   3dfa8:	ldr	r0, [r4, #20]
   3dfac:	add	r3, r0, #1
   3dfb0:	str	r3, [r4, #20]
   3dfb4:	mov	r3, #44	; 0x2c
   3dfb8:	strb	r3, [r0]
   3dfbc:	mov	r0, r4
   3dfc0:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3dfc4:	ldr	r1, [r4, #20]
   3dfc8:	mov	r0, r6
   3dfcc:	bl	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   3dfd0:	ldr	r1, [r4, #20]
   3dfd4:	add	r0, r1, r0
   3dfd8:	str	r0, [r4, #20]
   3dfdc:	pop	{r4, r5, r6, sl, fp, pc}

0003dfe0 <flatcc_json_printer_uint64_struct_field@@Base>:
   3dfe0:	push	{r4, r5, r6, r7, fp, lr}
   3dfe4:	add	fp, sp, #16
   3dfe8:	ldr	r7, [r2, r3]!
   3dfec:	mov	r5, r1
   3dff0:	ldr	r1, [fp, #8]
   3dff4:	mov	r4, r0
   3dff8:	cmp	r5, #0
   3dffc:	ldr	r6, [r2, #4]
   3e000:	ldr	r2, [fp, #12]
   3e004:	beq	3e01c <flatcc_json_printer_uint64_struct_field@@Base+0x3c>
   3e008:	ldr	r0, [r4, #20]
   3e00c:	add	r3, r0, #1
   3e010:	str	r3, [r4, #20]
   3e014:	mov	r3, #44	; 0x2c
   3e018:	strb	r3, [r0]
   3e01c:	mov	r0, r4
   3e020:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e024:	ldr	r2, [r4, #20]
   3e028:	mov	r0, r7
   3e02c:	mov	r1, r6
   3e030:	bl	3bb70 <flatcc_json_printer_uint64@@Base+0x30>
   3e034:	ldr	r1, [r4, #20]
   3e038:	add	r0, r1, r0
   3e03c:	str	r0, [r4, #20]
   3e040:	pop	{r4, r5, r6, r7, fp, pc}

0003e044 <flatcc_json_printer_int8_struct_field@@Base>:
   3e044:	push	{r4, r5, r6, sl, fp, lr}
   3e048:	add	fp, sp, #16
   3e04c:	mov	r5, r0
   3e050:	add	r0, r2, r3
   3e054:	mov	r4, r1
   3e058:	ldr	r2, [fp, #12]
   3e05c:	ldr	r1, [fp, #8]
   3e060:	ldrsb	r6, [r0]
   3e064:	cmp	r4, #0
   3e068:	beq	3e080 <flatcc_json_printer_int8_struct_field@@Base+0x3c>
   3e06c:	ldr	r0, [r5, #20]
   3e070:	add	r3, r0, #1
   3e074:	str	r3, [r5, #20]
   3e078:	mov	r3, #44	; 0x2c
   3e07c:	strb	r3, [r0]
   3e080:	mov	r0, r5
   3e084:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e088:	ldr	r0, [r5, #20]
   3e08c:	cmn	r6, #1
   3e090:	uxtb	r1, r6
   3e094:	movle	r2, #45	; 0x2d
   3e098:	rsble	r6, r6, #0
   3e09c:	lsr	r1, r1, #7
   3e0a0:	strble	r2, [r0], #1
   3e0a4:	uxtb	r2, r6
   3e0a8:	cmp	r2, #100	; 0x64
   3e0ac:	bcc	3e0fc <flatcc_json_printer_int8_struct_field@@Base+0xb8>
   3e0b0:	mov	r3, #0
   3e0b4:	strb	r3, [r0, #3]
   3e0b8:	movw	r3, #34079	; 0x851f
   3e0bc:	movt	r3, #20971	; 0x51eb
   3e0c0:	umull	r3, r6, r2, r3
   3e0c4:	mov	r3, #48	; 0x30
   3e0c8:	orr	r3, r3, r6, lsr #5
   3e0cc:	strb	r3, [r0]
   3e0d0:	lsr	r3, r6, #5
   3e0d4:	mov	r6, #100	; 0x64
   3e0d8:	mls	r2, r3, r6, r2
   3e0dc:	ldr	r3, [pc, #132]	; 3e168 <flatcc_json_printer_int8_struct_field@@Base+0x124>
   3e0e0:	uxtb	r2, r2
   3e0e4:	add	r3, pc, r3
   3e0e8:	add	r2, r3, r2, lsl #1
   3e0ec:	ldrh	r2, [r2]
   3e0f0:	strh	r2, [r0, #1]
   3e0f4:	mov	r0, #3
   3e0f8:	b	3e154 <flatcc_json_printer_int8_struct_field@@Base+0x110>
   3e0fc:	cmp	r2, #10
   3e100:	bcc	3e140 <flatcc_json_printer_int8_struct_field@@Base+0xfc>
   3e104:	mov	r3, #0
   3e108:	strb	r3, [r0, #2]
   3e10c:	movw	r3, #34079	; 0x851f
   3e110:	movt	r3, #20971	; 0x51eb
   3e114:	umull	r3, r6, r2, r3
   3e118:	lsr	r3, r6, #5
   3e11c:	mov	r6, #100	; 0x64
   3e120:	mls	r2, r3, r6, r2
   3e124:	ldr	r3, [pc, #64]	; 3e16c <flatcc_json_printer_int8_struct_field@@Base+0x128>
   3e128:	add	r3, pc, r3
   3e12c:	add	r2, r3, r2, lsl #1
   3e130:	ldrh	r2, [r2]
   3e134:	strh	r2, [r0]
   3e138:	mov	r0, #2
   3e13c:	b	3e154 <flatcc_json_printer_int8_struct_field@@Base+0x110>
   3e140:	mov	r2, #0
   3e144:	strb	r2, [r0, #1]
   3e148:	add	r2, r6, #48	; 0x30
   3e14c:	strb	r2, [r0]
   3e150:	mov	r0, #1
   3e154:	add	r0, r0, r1
   3e158:	ldr	r1, [r5, #20]
   3e15c:	add	r0, r1, r0
   3e160:	str	r0, [r5, #20]
   3e164:	pop	{r4, r5, r6, sl, fp, pc}
   3e168:	andeq	pc, r0, r3, lsl #28
   3e16c:			; <UNDEFINED> instruction: 0x0000fdbf

0003e170 <flatcc_json_printer_int16_struct_field@@Base>:
   3e170:	push	{r4, r5, r6, sl, fp, lr}
   3e174:	add	fp, sp, #16
   3e178:	mov	r4, r0
   3e17c:	add	r0, r2, r3
   3e180:	mov	ip, r1
   3e184:	ldr	r2, [fp, #12]
   3e188:	ldr	r1, [fp, #8]
   3e18c:	ldrsh	r5, [r0]
   3e190:	cmp	ip, #0
   3e194:	beq	3e1ac <flatcc_json_printer_int16_struct_field@@Base+0x3c>
   3e198:	ldr	r0, [r4, #20]
   3e19c:	add	r3, r0, #1
   3e1a0:	str	r3, [r4, #20]
   3e1a4:	mov	r3, #44	; 0x2c
   3e1a8:	strb	r3, [r0]
   3e1ac:	mov	r0, r4
   3e1b0:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e1b4:	ldr	r1, [r4, #20]
   3e1b8:	uxth	r0, r5
   3e1bc:	cmn	r5, #1
   3e1c0:	rsble	r5, r5, #0
   3e1c4:	lsr	r6, r0, #15
   3e1c8:	movle	r0, #45	; 0x2d
   3e1cc:	strble	r0, [r1], #1
   3e1d0:	uxth	r0, r5
   3e1d4:	bl	3b670 <flatcc_json_printer_uint16@@Base+0x2c>
   3e1d8:	ldr	r1, [r4, #20]
   3e1dc:	add	r0, r0, r6
   3e1e0:	add	r0, r1, r0
   3e1e4:	str	r0, [r4, #20]
   3e1e8:	pop	{r4, r5, r6, sl, fp, pc}

0003e1ec <flatcc_json_printer_int32_struct_field@@Base>:
   3e1ec:	push	{r4, r5, r6, sl, fp, lr}
   3e1f0:	add	fp, sp, #16
   3e1f4:	mov	ip, r1
   3e1f8:	ldr	r5, [r2, r3]
   3e1fc:	ldr	r2, [fp, #12]
   3e200:	ldr	r1, [fp, #8]
   3e204:	mov	r4, r0
   3e208:	cmp	ip, #0
   3e20c:	beq	3e224 <flatcc_json_printer_int32_struct_field@@Base+0x38>
   3e210:	ldr	r0, [r4, #20]
   3e214:	add	r3, r0, #1
   3e218:	str	r3, [r4, #20]
   3e21c:	mov	r3, #44	; 0x2c
   3e220:	strb	r3, [r0]
   3e224:	mov	r0, r4
   3e228:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e22c:	ldr	r1, [r4, #20]
   3e230:	cmn	r5, #1
   3e234:	lsr	r6, r5, #31
   3e238:	movle	r0, #45	; 0x2d
   3e23c:	rsble	r5, r5, #0
   3e240:	strble	r0, [r1], #1
   3e244:	mov	r0, r5
   3e248:	bl	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   3e24c:	ldr	r1, [r4, #20]
   3e250:	add	r0, r0, r6
   3e254:	add	r0, r1, r0
   3e258:	str	r0, [r4, #20]
   3e25c:	pop	{r4, r5, r6, sl, fp, pc}

0003e260 <flatcc_json_printer_int64_struct_field@@Base>:
   3e260:	push	{r4, r5, r6, r7, fp, lr}
   3e264:	add	fp, sp, #16
   3e268:	ldr	r7, [r2, r3]!
   3e26c:	mov	r5, r1
   3e270:	ldr	r1, [fp, #8]
   3e274:	mov	r4, r0
   3e278:	cmp	r5, #0
   3e27c:	ldr	r6, [r2, #4]
   3e280:	ldr	r2, [fp, #12]
   3e284:	beq	3e29c <flatcc_json_printer_int64_struct_field@@Base+0x3c>
   3e288:	ldr	r0, [r4, #20]
   3e28c:	add	r3, r0, #1
   3e290:	str	r3, [r4, #20]
   3e294:	mov	r3, #44	; 0x2c
   3e298:	strb	r3, [r0]
   3e29c:	mov	r0, r4
   3e2a0:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e2a4:	ldr	r2, [r4, #20]
   3e2a8:	lsr	r5, r6, #31
   3e2ac:	cmn	r6, #1
   3e2b0:	bgt	3e2c4 <flatcc_json_printer_int64_struct_field@@Base+0x64>
   3e2b4:	mov	r0, #45	; 0x2d
   3e2b8:	rsbs	r7, r7, #0
   3e2bc:	strb	r0, [r2], #1
   3e2c0:	rsc	r6, r6, #0
   3e2c4:	mov	r0, r7
   3e2c8:	mov	r1, r6
   3e2cc:	bl	3bb70 <flatcc_json_printer_uint64@@Base+0x30>
   3e2d0:	ldr	r1, [r4, #20]
   3e2d4:	add	r0, r0, r5
   3e2d8:	add	r0, r1, r0
   3e2dc:	str	r0, [r4, #20]
   3e2e0:	pop	{r4, r5, r6, r7, fp, pc}

0003e2e4 <flatcc_json_printer_bool_struct_field@@Base>:
   3e2e4:	push	{r4, r5, fp, lr}
   3e2e8:	add	fp, sp, #8
   3e2ec:	mov	ip, r1
   3e2f0:	ldrb	r5, [r2, r3]
   3e2f4:	ldr	r2, [fp, #12]
   3e2f8:	ldr	r1, [fp, #8]
   3e2fc:	mov	r4, r0
   3e300:	cmp	ip, #0
   3e304:	beq	3e31c <flatcc_json_printer_bool_struct_field@@Base+0x38>
   3e308:	ldr	r0, [r4, #20]
   3e30c:	add	r3, r0, #1
   3e310:	str	r3, [r4, #20]
   3e314:	mov	r3, #44	; 0x2c
   3e318:	strb	r3, [r0]
   3e31c:	mov	r0, r4
   3e320:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e324:	ldr	r0, [r4, #20]
   3e328:	cmp	r5, #0
   3e32c:	beq	3e34c <flatcc_json_printer_bool_struct_field@@Base+0x68>
   3e330:	mov	r1, #0
   3e334:	strb	r1, [r0, #4]
   3e338:	movw	r1, #29300	; 0x7274
   3e33c:	movt	r1, #25973	; 0x6575
   3e340:	str	r1, [r0]
   3e344:	mov	r0, #4
   3e348:	b	3e364 <flatcc_json_printer_bool_struct_field@@Base+0x80>
   3e34c:	mov	r1, #101	; 0x65
   3e350:	strh	r1, [r0, #4]
   3e354:	movw	r1, #24934	; 0x6166
   3e358:	movt	r1, #29548	; 0x736c
   3e35c:	str	r1, [r0]
   3e360:	mov	r0, #5
   3e364:	ldr	r1, [r4, #20]
   3e368:	add	r0, r1, r0
   3e36c:	str	r0, [r4, #20]
   3e370:	pop	{r4, r5, fp, pc}

0003e374 <flatcc_json_printer_float_struct_field@@Base>:
   3e374:	push	{r4, sl, fp, lr}
   3e378:	add	fp, sp, #8
   3e37c:	vpush	{d8}
   3e380:	mov	r4, r0
   3e384:	add	r0, r2, r3
   3e388:	mov	ip, r1
   3e38c:	ldr	r2, [fp, #12]
   3e390:	ldr	r1, [fp, #8]
   3e394:	vldr	s16, [r0]
   3e398:	cmp	ip, #0
   3e39c:	beq	3e3b4 <flatcc_json_printer_float_struct_field@@Base+0x40>
   3e3a0:	ldr	r0, [r4, #20]
   3e3a4:	add	r3, r0, #1
   3e3a8:	str	r3, [r4, #20]
   3e3ac:	mov	r3, #44	; 0x2c
   3e3b0:	strb	r3, [r0]
   3e3b4:	mov	r0, r4
   3e3b8:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e3bc:	vcvt.f64.f32	d0, s16
   3e3c0:	ldr	r0, [r4, #20]
   3e3c4:	bl	3a138 <flatcc_json_printer_fmt_float@@Base+0xc>
   3e3c8:	ldr	r1, [r4, #20]
   3e3cc:	add	r0, r1, r0
   3e3d0:	str	r0, [r4, #20]
   3e3d4:	vpop	{d8}
   3e3d8:	pop	{r4, sl, fp, pc}

0003e3dc <flatcc_json_printer_double_struct_field@@Base>:
   3e3dc:	push	{r4, sl, fp, lr}
   3e3e0:	add	fp, sp, #8
   3e3e4:	vpush	{d8}
   3e3e8:	mov	r4, r0
   3e3ec:	add	r0, r2, r3
   3e3f0:	mov	ip, r1
   3e3f4:	ldr	r2, [fp, #12]
   3e3f8:	ldr	r1, [fp, #8]
   3e3fc:	vldr	d8, [r0]
   3e400:	cmp	ip, #0
   3e404:	beq	3e41c <flatcc_json_printer_double_struct_field@@Base+0x40>
   3e408:	ldr	r0, [r4, #20]
   3e40c:	add	r3, r0, #1
   3e410:	str	r3, [r4, #20]
   3e414:	mov	r3, #44	; 0x2c
   3e418:	strb	r3, [r0]
   3e41c:	mov	r0, r4
   3e420:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e424:	ldr	r0, [r4, #20]
   3e428:	vorr	d0, d8, d8
   3e42c:	bl	3a138 <flatcc_json_printer_fmt_float@@Base+0xc>
   3e430:	ldr	r1, [r4, #20]
   3e434:	add	r0, r1, r0
   3e438:	str	r0, [r4, #20]
   3e43c:	vpop	{d8}
   3e440:	pop	{r4, sl, fp, pc}

0003e444 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   3e444:	push	{r4, r5, r6, r7, fp, lr}
   3e448:	add	fp, sp, #16
   3e44c:	add	r7, fp, #8
   3e450:	mov	r5, r1
   3e454:	ldrb	r6, [r2, r3]
   3e458:	mov	r4, r0
   3e45c:	ldm	r7, {r1, r2, r7}
   3e460:	cmp	r5, #0
   3e464:	beq	3e47c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x38>
   3e468:	ldr	r0, [r4, #20]
   3e46c:	add	r3, r0, #1
   3e470:	str	r3, [r4, #20]
   3e474:	mov	r3, #44	; 0x2c
   3e478:	strb	r3, [r0]
   3e47c:	mov	r0, r4
   3e480:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e484:	ldrb	r0, [r4, #27]
   3e488:	cmp	r0, #0
   3e48c:	beq	3e4e8 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xa4>
   3e490:	ldr	r0, [r4, #20]
   3e494:	mov	r1, #0
   3e498:	cmp	r6, #100	; 0x64
   3e49c:	bcc	3e4fc <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb8>
   3e4a0:	strb	r1, [r0, #3]
   3e4a4:	movw	r1, #34079	; 0x851f
   3e4a8:	movt	r1, #20971	; 0x51eb
   3e4ac:	umull	r1, r2, r6, r1
   3e4b0:	mov	r1, #48	; 0x30
   3e4b4:	orr	r1, r1, r2, lsr #5
   3e4b8:	strb	r1, [r0]
   3e4bc:	lsr	r1, r2, #5
   3e4c0:	mov	r2, #100	; 0x64
   3e4c4:	mls	r1, r1, r2, r6
   3e4c8:	ldr	r2, [pc, #140]	; 3e55c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x118>
   3e4cc:	uxtb	r1, r1
   3e4d0:	add	r2, pc, r2
   3e4d4:	add	r1, r2, r1, lsl #1
   3e4d8:	ldrh	r1, [r1]
   3e4dc:	strh	r1, [r0, #1]
   3e4e0:	mov	r0, #3
   3e4e4:	b	3e54c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x108>
   3e4e8:	mov	r0, r4
   3e4ec:	mov	r1, r6
   3e4f0:	mov	r2, r7
   3e4f4:	pop	{r4, r5, r6, r7, fp, lr}
   3e4f8:	bx	r2
   3e4fc:	cmp	r6, #10
   3e500:	bcc	3e53c <flatcc_json_printer_uint8_enum_struct_field@@Base+0xf8>
   3e504:	strb	r1, [r0, #2]
   3e508:	movw	r1, #34079	; 0x851f
   3e50c:	movt	r1, #20971	; 0x51eb
   3e510:	umull	r1, r2, r6, r1
   3e514:	lsr	r1, r2, #5
   3e518:	mov	r2, #100	; 0x64
   3e51c:	mls	r1, r1, r2, r6
   3e520:	ldr	r2, [pc, #56]	; 3e560 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x11c>
   3e524:	add	r2, pc, r2
   3e528:	add	r1, r2, r1, lsl #1
   3e52c:	ldrh	r1, [r1]
   3e530:	strh	r1, [r0]
   3e534:	mov	r0, #2
   3e538:	b	3e54c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x108>
   3e53c:	strb	r1, [r0, #1]
   3e540:	add	r1, r6, #48	; 0x30
   3e544:	strb	r1, [r0]
   3e548:	mov	r0, #1
   3e54c:	ldr	r1, [r4, #20]
   3e550:	add	r0, r1, r0
   3e554:	str	r0, [r4, #20]
   3e558:	pop	{r4, r5, r6, r7, fp, pc}
   3e55c:	andeq	pc, r0, r7, lsl sl	; <UNPREDICTABLE>
   3e560:	andeq	pc, r0, r3, asr #19

0003e564 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   3e564:	push	{r4, r5, r6, r7, fp, lr}
   3e568:	add	fp, sp, #16
   3e56c:	mov	r4, r0
   3e570:	add	r0, r2, r3
   3e574:	add	r7, fp, #8
   3e578:	mov	r5, r1
   3e57c:	ldrh	r6, [r0]
   3e580:	ldm	r7, {r1, r2, r7}
   3e584:	cmp	r5, #0
   3e588:	beq	3e5a0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x3c>
   3e58c:	ldr	r0, [r4, #20]
   3e590:	add	r3, r0, #1
   3e594:	str	r3, [r4, #20]
   3e598:	mov	r3, #44	; 0x2c
   3e59c:	strb	r3, [r0]
   3e5a0:	mov	r0, r4
   3e5a4:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e5a8:	ldrb	r0, [r4, #27]
   3e5ac:	cmp	r0, #0
   3e5b0:	beq	3e5d0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x6c>
   3e5b4:	ldr	r1, [r4, #20]
   3e5b8:	mov	r0, r6
   3e5bc:	bl	3b670 <flatcc_json_printer_uint16@@Base+0x2c>
   3e5c0:	ldr	r1, [r4, #20]
   3e5c4:	add	r0, r1, r0
   3e5c8:	str	r0, [r4, #20]
   3e5cc:	pop	{r4, r5, r6, r7, fp, pc}
   3e5d0:	mov	r0, r4
   3e5d4:	mov	r1, r6
   3e5d8:	mov	r2, r7
   3e5dc:	pop	{r4, r5, r6, r7, fp, lr}
   3e5e0:	bx	r2

0003e5e4 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   3e5e4:	push	{r4, r5, r6, r7, fp, lr}
   3e5e8:	add	fp, sp, #16
   3e5ec:	add	r7, fp, #8
   3e5f0:	mov	r5, r1
   3e5f4:	ldr	r6, [r2, r3]
   3e5f8:	mov	r4, r0
   3e5fc:	ldm	r7, {r1, r2, r7}
   3e600:	cmp	r5, #0
   3e604:	beq	3e61c <flatcc_json_printer_uint32_enum_struct_field@@Base+0x38>
   3e608:	ldr	r0, [r4, #20]
   3e60c:	add	r3, r0, #1
   3e610:	str	r3, [r4, #20]
   3e614:	mov	r3, #44	; 0x2c
   3e618:	strb	r3, [r0]
   3e61c:	mov	r0, r4
   3e620:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e624:	ldrb	r0, [r4, #27]
   3e628:	cmp	r0, #0
   3e62c:	beq	3e64c <flatcc_json_printer_uint32_enum_struct_field@@Base+0x68>
   3e630:	ldr	r1, [r4, #20]
   3e634:	mov	r0, r6
   3e638:	bl	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   3e63c:	ldr	r1, [r4, #20]
   3e640:	add	r0, r1, r0
   3e644:	str	r0, [r4, #20]
   3e648:	pop	{r4, r5, r6, r7, fp, pc}
   3e64c:	mov	r0, r4
   3e650:	mov	r1, r6
   3e654:	mov	r2, r7
   3e658:	pop	{r4, r5, r6, r7, fp, lr}
   3e65c:	bx	r2

0003e660 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   3e660:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e664:	add	fp, sp, #24
   3e668:	ldr	r6, [r2, r3]!
   3e66c:	add	r8, fp, #8
   3e670:	mov	r5, r1
   3e674:	mov	r4, r0
   3e678:	cmp	r5, #0
   3e67c:	ldr	r7, [r2, #4]
   3e680:	ldm	r8, {r1, r2, r8}
   3e684:	beq	3e69c <flatcc_json_printer_uint64_enum_struct_field@@Base+0x3c>
   3e688:	ldr	r0, [r4, #20]
   3e68c:	add	r3, r0, #1
   3e690:	str	r3, [r4, #20]
   3e694:	mov	r3, #44	; 0x2c
   3e698:	strb	r3, [r0]
   3e69c:	mov	r0, r4
   3e6a0:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e6a4:	ldrb	r0, [r4, #27]
   3e6a8:	cmp	r0, #0
   3e6ac:	beq	3e6d0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   3e6b0:	ldr	r2, [r4, #20]
   3e6b4:	mov	r0, r6
   3e6b8:	mov	r1, r7
   3e6bc:	bl	3bb70 <flatcc_json_printer_uint64@@Base+0x30>
   3e6c0:	ldr	r1, [r4, #20]
   3e6c4:	add	r0, r1, r0
   3e6c8:	str	r0, [r4, #20]
   3e6cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3e6d0:	mov	r0, r4
   3e6d4:	mov	r2, r6
   3e6d8:	mov	r3, r7
   3e6dc:	mov	r1, r8
   3e6e0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e6e4:	bx	r1

0003e6e8 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   3e6e8:	push	{r4, r5, r6, r7, fp, lr}
   3e6ec:	add	fp, sp, #16
   3e6f0:	mov	r4, r0
   3e6f4:	add	r0, r2, r3
   3e6f8:	add	r7, fp, #8
   3e6fc:	mov	r5, r1
   3e700:	ldrsb	r6, [r0]
   3e704:	ldm	r7, {r1, r2, r7}
   3e708:	cmp	r5, #0
   3e70c:	beq	3e724 <flatcc_json_printer_int8_enum_struct_field@@Base+0x3c>
   3e710:	ldr	r0, [r4, #20]
   3e714:	add	r3, r0, #1
   3e718:	str	r3, [r4, #20]
   3e71c:	mov	r3, #44	; 0x2c
   3e720:	strb	r3, [r0]
   3e724:	mov	r0, r4
   3e728:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e72c:	ldrb	r0, [r4, #27]
   3e730:	cmp	r0, #0
   3e734:	beq	3e7ac <flatcc_json_printer_int8_enum_struct_field@@Base+0xc4>
   3e738:	ldr	r0, [r4, #20]
   3e73c:	cmn	r6, #1
   3e740:	uxtb	r1, r6
   3e744:	movle	r2, #45	; 0x2d
   3e748:	rsble	r6, r6, #0
   3e74c:	lsr	r1, r1, #7
   3e750:	strble	r2, [r0], #1
   3e754:	uxtb	r2, r6
   3e758:	cmp	r2, #100	; 0x64
   3e75c:	bcc	3e7c0 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd8>
   3e760:	mov	r3, #0
   3e764:	strb	r3, [r0, #3]
   3e768:	movw	r3, #34079	; 0x851f
   3e76c:	movt	r3, #20971	; 0x51eb
   3e770:	umull	r3, r6, r2, r3
   3e774:	mov	r3, #48	; 0x30
   3e778:	orr	r3, r3, r6, lsr #5
   3e77c:	strb	r3, [r0]
   3e780:	lsr	r3, r6, #5
   3e784:	mov	r6, #100	; 0x64
   3e788:	mls	r2, r3, r6, r2
   3e78c:	ldr	r3, [pc, #152]	; 3e82c <flatcc_json_printer_int8_enum_struct_field@@Base+0x144>
   3e790:	uxtb	r2, r2
   3e794:	add	r3, pc, r3
   3e798:	add	r2, r3, r2, lsl #1
   3e79c:	ldrh	r2, [r2]
   3e7a0:	strh	r2, [r0, #1]
   3e7a4:	mov	r0, #3
   3e7a8:	b	3e818 <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
   3e7ac:	mov	r0, r4
   3e7b0:	mov	r1, r6
   3e7b4:	mov	r2, r7
   3e7b8:	pop	{r4, r5, r6, r7, fp, lr}
   3e7bc:	bx	r2
   3e7c0:	cmp	r2, #10
   3e7c4:	bcc	3e804 <flatcc_json_printer_int8_enum_struct_field@@Base+0x11c>
   3e7c8:	mov	r3, #0
   3e7cc:	strb	r3, [r0, #2]
   3e7d0:	movw	r3, #34079	; 0x851f
   3e7d4:	movt	r3, #20971	; 0x51eb
   3e7d8:	umull	r3, r6, r2, r3
   3e7dc:	lsr	r3, r6, #5
   3e7e0:	mov	r6, #100	; 0x64
   3e7e4:	mls	r2, r3, r6, r2
   3e7e8:	ldr	r3, [pc, #64]	; 3e830 <flatcc_json_printer_int8_enum_struct_field@@Base+0x148>
   3e7ec:	add	r3, pc, r3
   3e7f0:	add	r2, r3, r2, lsl #1
   3e7f4:	ldrh	r2, [r2]
   3e7f8:	strh	r2, [r0]
   3e7fc:	mov	r0, #2
   3e800:	b	3e818 <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
   3e804:	mov	r2, #0
   3e808:	strb	r2, [r0, #1]
   3e80c:	add	r2, r6, #48	; 0x30
   3e810:	strb	r2, [r0]
   3e814:	mov	r0, #1
   3e818:	add	r0, r0, r1
   3e81c:	ldr	r1, [r4, #20]
   3e820:	add	r0, r1, r0
   3e824:	str	r0, [r4, #20]
   3e828:	pop	{r4, r5, r6, r7, fp, pc}
   3e82c:	andeq	pc, r0, r3, asr r7	; <UNPREDICTABLE>
   3e830:	strdeq	pc, [r0], -fp

0003e834 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   3e834:	push	{r4, r5, r6, r7, fp, lr}
   3e838:	add	fp, sp, #16
   3e83c:	mov	r4, r0
   3e840:	add	r0, r2, r3
   3e844:	add	r7, fp, #8
   3e848:	mov	r5, r1
   3e84c:	ldrsh	r6, [r0]
   3e850:	ldm	r7, {r1, r2, r7}
   3e854:	cmp	r5, #0
   3e858:	beq	3e870 <flatcc_json_printer_int16_enum_struct_field@@Base+0x3c>
   3e85c:	ldr	r0, [r4, #20]
   3e860:	add	r3, r0, #1
   3e864:	str	r3, [r4, #20]
   3e868:	mov	r3, #44	; 0x2c
   3e86c:	strb	r3, [r0]
   3e870:	mov	r0, r4
   3e874:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e878:	ldrb	r0, [r4, #27]
   3e87c:	cmp	r0, #0
   3e880:	beq	3e8bc <flatcc_json_printer_int16_enum_struct_field@@Base+0x88>
   3e884:	ldr	r1, [r4, #20]
   3e888:	uxth	r0, r6
   3e88c:	cmn	r6, #1
   3e890:	rsble	r6, r6, #0
   3e894:	lsr	r5, r0, #15
   3e898:	movle	r0, #45	; 0x2d
   3e89c:	strble	r0, [r1], #1
   3e8a0:	uxth	r0, r6
   3e8a4:	bl	3b670 <flatcc_json_printer_uint16@@Base+0x2c>
   3e8a8:	ldr	r1, [r4, #20]
   3e8ac:	add	r0, r0, r5
   3e8b0:	add	r0, r1, r0
   3e8b4:	str	r0, [r4, #20]
   3e8b8:	pop	{r4, r5, r6, r7, fp, pc}
   3e8bc:	mov	r0, r4
   3e8c0:	mov	r1, r6
   3e8c4:	mov	r2, r7
   3e8c8:	pop	{r4, r5, r6, r7, fp, lr}
   3e8cc:	bx	r2

0003e8d0 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   3e8d0:	push	{r4, r5, r6, r7, fp, lr}
   3e8d4:	add	fp, sp, #16
   3e8d8:	add	r7, fp, #8
   3e8dc:	mov	r5, r1
   3e8e0:	ldr	r6, [r2, r3]
   3e8e4:	mov	r4, r0
   3e8e8:	ldm	r7, {r1, r2, r7}
   3e8ec:	cmp	r5, #0
   3e8f0:	beq	3e908 <flatcc_json_printer_int32_enum_struct_field@@Base+0x38>
   3e8f4:	ldr	r0, [r4, #20]
   3e8f8:	add	r3, r0, #1
   3e8fc:	str	r3, [r4, #20]
   3e900:	mov	r3, #44	; 0x2c
   3e904:	strb	r3, [r0]
   3e908:	mov	r0, r4
   3e90c:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e910:	ldrb	r0, [r4, #27]
   3e914:	cmp	r0, #0
   3e918:	beq	3e950 <flatcc_json_printer_int32_enum_struct_field@@Base+0x80>
   3e91c:	ldr	r1, [r4, #20]
   3e920:	cmn	r6, #1
   3e924:	lsr	r5, r6, #31
   3e928:	movle	r0, #45	; 0x2d
   3e92c:	rsble	r6, r6, #0
   3e930:	strble	r0, [r1], #1
   3e934:	mov	r0, r6
   3e938:	bl	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   3e93c:	ldr	r1, [r4, #20]
   3e940:	add	r0, r0, r5
   3e944:	add	r0, r1, r0
   3e948:	str	r0, [r4, #20]
   3e94c:	pop	{r4, r5, r6, r7, fp, pc}
   3e950:	mov	r0, r4
   3e954:	mov	r1, r6
   3e958:	mov	r2, r7
   3e95c:	pop	{r4, r5, r6, r7, fp, lr}
   3e960:	bx	r2

0003e964 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   3e964:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e968:	add	fp, sp, #24
   3e96c:	ldr	r7, [r2, r3]!
   3e970:	add	r8, fp, #8
   3e974:	mov	r6, r1
   3e978:	mov	r4, r0
   3e97c:	cmp	r6, #0
   3e980:	ldr	r5, [r2, #4]
   3e984:	ldm	r8, {r1, r2, r8}
   3e988:	beq	3e9a0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x3c>
   3e98c:	ldr	r0, [r4, #20]
   3e990:	add	r3, r0, #1
   3e994:	str	r3, [r4, #20]
   3e998:	mov	r3, #44	; 0x2c
   3e99c:	strb	r3, [r0]
   3e9a0:	mov	r0, r4
   3e9a4:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3e9a8:	ldrb	r0, [r4, #27]
   3e9ac:	cmp	r0, #0
   3e9b0:	beq	3e9f4 <flatcc_json_printer_int64_enum_struct_field@@Base+0x90>
   3e9b4:	ldr	r2, [r4, #20]
   3e9b8:	lsr	r6, r5, #31
   3e9bc:	cmn	r5, #1
   3e9c0:	bgt	3e9d4 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   3e9c4:	mov	r0, #45	; 0x2d
   3e9c8:	rsbs	r7, r7, #0
   3e9cc:	strb	r0, [r2], #1
   3e9d0:	rsc	r5, r5, #0
   3e9d4:	mov	r0, r7
   3e9d8:	mov	r1, r5
   3e9dc:	bl	3bb70 <flatcc_json_printer_uint64@@Base+0x30>
   3e9e0:	ldr	r1, [r4, #20]
   3e9e4:	add	r0, r0, r6
   3e9e8:	add	r0, r1, r0
   3e9ec:	str	r0, [r4, #20]
   3e9f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3e9f4:	mov	r0, r4
   3e9f8:	mov	r2, r7
   3e9fc:	mov	r3, r5
   3ea00:	mov	r1, r8
   3ea04:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3ea08:	bx	r1

0003ea0c <flatcc_json_printer_bool_enum_struct_field@@Base>:
   3ea0c:	push	{r4, r5, r6, r7, fp, lr}
   3ea10:	add	fp, sp, #16
   3ea14:	add	r7, fp, #8
   3ea18:	mov	r5, r1
   3ea1c:	ldrb	r6, [r2, r3]
   3ea20:	mov	r4, r0
   3ea24:	ldm	r7, {r1, r2, r7}
   3ea28:	cmp	r5, #0
   3ea2c:	beq	3ea44 <flatcc_json_printer_bool_enum_struct_field@@Base+0x38>
   3ea30:	ldr	r0, [r4, #20]
   3ea34:	add	r3, r0, #1
   3ea38:	str	r3, [r4, #20]
   3ea3c:	mov	r3, #44	; 0x2c
   3ea40:	strb	r3, [r0]
   3ea44:	mov	r0, r4
   3ea48:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3ea4c:	ldrb	r0, [r4, #27]
   3ea50:	cmp	r0, #0
   3ea54:	beq	3ea80 <flatcc_json_printer_bool_enum_struct_field@@Base+0x74>
   3ea58:	ldr	r0, [r4, #20]
   3ea5c:	cmp	r6, #0
   3ea60:	beq	3ea94 <flatcc_json_printer_bool_enum_struct_field@@Base+0x88>
   3ea64:	mov	r1, #0
   3ea68:	strb	r1, [r0, #4]
   3ea6c:	movw	r1, #29300	; 0x7274
   3ea70:	movt	r1, #25973	; 0x6575
   3ea74:	str	r1, [r0]
   3ea78:	mov	r0, #4
   3ea7c:	b	3eaac <flatcc_json_printer_bool_enum_struct_field@@Base+0xa0>
   3ea80:	mov	r0, r4
   3ea84:	mov	r1, r6
   3ea88:	mov	r2, r7
   3ea8c:	pop	{r4, r5, r6, r7, fp, lr}
   3ea90:	bx	r2
   3ea94:	mov	r1, #101	; 0x65
   3ea98:	strh	r1, [r0, #4]
   3ea9c:	movw	r1, #24934	; 0x6166
   3eaa0:	movt	r1, #29548	; 0x736c
   3eaa4:	str	r1, [r0]
   3eaa8:	mov	r0, #5
   3eaac:	ldr	r1, [r4, #20]
   3eab0:	add	r0, r1, r0
   3eab4:	str	r0, [r4, #20]
   3eab8:	pop	{r4, r5, r6, r7, fp, pc}

0003eabc <flatcc_json_printer_utype_vector_field@@Base>:
   3eabc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3eac0:	add	fp, sp, #28
   3eac4:	sub	sp, sp, #4
   3eac8:	mov	r4, r0
   3eacc:	mov	r0, #4
   3ead0:	add	r0, r0, r2, lsl #1
   3ead4:	ldr	r2, [r1, #8]
   3ead8:	cmp	r0, r2
   3eadc:	bge	3eafc <flatcc_json_printer_utype_vector_field@@Base+0x40>
   3eae0:	ldr	r2, [r1, #4]
   3eae4:	add	r0, r2, r0
   3eae8:	ldrh	r0, [r0]
   3eaec:	cmp	r0, #0
   3eaf0:	ldrne	r2, [r1]
   3eaf4:	addsne	r9, r2, r0
   3eaf8:	bne	3eb04 <flatcc_json_printer_utype_vector_field@@Base+0x48>
   3eafc:	sub	sp, fp, #28
   3eb00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3eb04:	ldr	r0, [r1, #16]
   3eb08:	ldr	r2, [fp, #8]
   3eb0c:	add	r7, r0, #1
   3eb10:	cmp	r0, #0
   3eb14:	str	r7, [r1, #16]
   3eb18:	beq	3eb30 <flatcc_json_printer_utype_vector_field@@Base+0x74>
   3eb1c:	ldr	r0, [r4, #20]
   3eb20:	add	r1, r0, #1
   3eb24:	str	r1, [r4, #20]
   3eb28:	mov	r1, #44	; 0x2c
   3eb2c:	strb	r1, [r0]
   3eb30:	ldr	r0, [r9]
   3eb34:	mov	r1, r3
   3eb38:	ldr	r8, [r9, r0]!
   3eb3c:	mov	r0, r4
   3eb40:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3eb44:	ldr	r1, [r4, #32]
   3eb48:	ldr	r0, [r4, #20]
   3eb4c:	cmp	r8, #0
   3eb50:	add	r1, r1, #1
   3eb54:	str	r1, [r4, #32]
   3eb58:	add	r1, r0, #1
   3eb5c:	str	r1, [r4, #20]
   3eb60:	mov	r1, #91	; 0x5b
   3eb64:	strb	r1, [r0]
   3eb68:	beq	3eed8 <flatcc_json_printer_utype_vector_field@@Base+0x41c>
   3eb6c:	ldrb	r1, [r4, #25]
   3eb70:	ldr	r0, [r4, #20]
   3eb74:	cmp	r1, #0
   3eb78:	beq	3ec34 <flatcc_json_printer_utype_vector_field@@Base+0x178>
   3eb7c:	add	r1, r0, #1
   3eb80:	str	r1, [r4, #20]
   3eb84:	mov	r1, #10
   3eb88:	strb	r1, [r0]
   3eb8c:	ldr	r0, [r4, #20]
   3eb90:	ldrb	r2, [r4, #25]
   3eb94:	ldr	r3, [r4, #32]
   3eb98:	ldr	r1, [r4, #16]
   3eb9c:	mla	r7, r3, r2, r0
   3eba0:	mul	r5, r3, r2
   3eba4:	cmp	r7, r1
   3eba8:	bls	3ec18 <flatcc_json_printer_utype_vector_field@@Base+0x15c>
   3ebac:	cmp	r0, r1
   3ebb0:	bcc	3ebcc <flatcc_json_printer_utype_vector_field@@Base+0x110>
   3ebb4:	ldr	r2, [r4, #44]	; 0x2c
   3ebb8:	mov	r0, r4
   3ebbc:	mov	r1, #0
   3ebc0:	blx	r2
   3ebc4:	ldr	r1, [r4, #16]
   3ebc8:	ldr	r0, [r4, #20]
   3ebcc:	sub	r6, r1, r0
   3ebd0:	cmp	r6, r5
   3ebd4:	bcs	3ec18 <flatcc_json_printer_utype_vector_field@@Base+0x15c>
   3ebd8:	mov	r1, #32
   3ebdc:	mov	r2, r6
   3ebe0:	bl	14ee4 <memset@plt>
   3ebe4:	ldr	r0, [r4, #20]
   3ebe8:	ldr	r2, [r4, #44]	; 0x2c
   3ebec:	mov	r1, #0
   3ebf0:	add	r0, r0, r6
   3ebf4:	str	r0, [r4, #20]
   3ebf8:	mov	r0, r4
   3ebfc:	blx	r2
   3ec00:	ldr	r1, [r4, #16]
   3ec04:	ldr	r0, [r4, #20]
   3ec08:	sub	r5, r5, r6
   3ec0c:	sub	r6, r1, r0
   3ec10:	cmp	r5, r6
   3ec14:	bhi	3ebd8 <flatcc_json_printer_utype_vector_field@@Base+0x11c>
   3ec18:	mov	r1, #32
   3ec1c:	mov	r2, r5
   3ec20:	bl	14ee4 <memset@plt>
   3ec24:	ldr	r0, [r4, #20]
   3ec28:	add	r0, r0, r5
   3ec2c:	str	r0, [r4, #20]
   3ec30:	b	3ec54 <flatcc_json_printer_utype_vector_field@@Base+0x198>
   3ec34:	ldr	r1, [r4, #16]
   3ec38:	cmp	r0, r1
   3ec3c:	bcc	3ec54 <flatcc_json_printer_utype_vector_field@@Base+0x198>
   3ec40:	ldr	r2, [r4, #44]	; 0x2c
   3ec44:	mov	r0, r4
   3ec48:	mov	r1, #0
   3ec4c:	blx	r2
   3ec50:	ldr	r0, [r4, #20]
   3ec54:	ldrb	r1, [r9, #4]
   3ec58:	mov	r2, #0
   3ec5c:	cmp	r1, #100	; 0x64
   3ec60:	bcc	3ecac <flatcc_json_printer_utype_vector_field@@Base+0x1f0>
   3ec64:	strb	r2, [r0, #3]
   3ec68:	movw	r2, #34079	; 0x851f
   3ec6c:	movt	r2, #20971	; 0x51eb
   3ec70:	umull	r2, r3, r1, r2
   3ec74:	mov	r2, #48	; 0x30
   3ec78:	orr	r2, r2, r3, lsr #5
   3ec7c:	strb	r2, [r0]
   3ec80:	lsr	r2, r3, #5
   3ec84:	mov	r3, #100	; 0x64
   3ec88:	mls	r1, r2, r3, r1
   3ec8c:	ldr	r2, [pc, #808]	; 3efbc <flatcc_json_printer_utype_vector_field@@Base+0x500>
   3ec90:	uxtb	r1, r1
   3ec94:	add	r2, pc, r2
   3ec98:	add	r1, r2, r1, lsl #1
   3ec9c:	ldrh	r1, [r1]
   3eca0:	strh	r1, [r0, #1]
   3eca4:	mov	r0, #3
   3eca8:	b	3ecfc <flatcc_json_printer_utype_vector_field@@Base+0x240>
   3ecac:	cmp	r1, #10
   3ecb0:	bcc	3ecec <flatcc_json_printer_utype_vector_field@@Base+0x230>
   3ecb4:	strb	r2, [r0, #2]
   3ecb8:	movw	r2, #34079	; 0x851f
   3ecbc:	movt	r2, #20971	; 0x51eb
   3ecc0:	umull	r2, r3, r1, r2
   3ecc4:	lsr	r2, r3, #5
   3ecc8:	mov	r3, #100	; 0x64
   3eccc:	mls	r1, r2, r3, r1
   3ecd0:	ldr	r2, [pc, #744]	; 3efc0 <flatcc_json_printer_utype_vector_field@@Base+0x504>
   3ecd4:	add	r2, pc, r2
   3ecd8:	add	r1, r2, r1, lsl #1
   3ecdc:	ldrh	r1, [r1]
   3ece0:	strh	r1, [r0]
   3ece4:	mov	r0, #2
   3ece8:	b	3ecfc <flatcc_json_printer_utype_vector_field@@Base+0x240>
   3ecec:	add	r1, r1, #48	; 0x30
   3ecf0:	strb	r2, [r0, #1]
   3ecf4:	strb	r1, [r0]
   3ecf8:	mov	r0, #1
   3ecfc:	ldr	r1, [r4, #20]
   3ed00:	subs	r8, r8, #1
   3ed04:	add	r0, r1, r0
   3ed08:	str	r0, [r4, #20]
   3ed0c:	beq	3eed8 <flatcc_json_printer_utype_vector_field@@Base+0x41c>
   3ed10:	ldr	r0, [r4, #20]
   3ed14:	add	r7, r9, #5
   3ed18:	mov	r9, #44	; 0x2c
   3ed1c:	mov	sl, #0
   3ed20:	b	3ed80 <flatcc_json_printer_utype_vector_field@@Base+0x2c4>
   3ed24:	movw	r2, #34079	; 0x851f
   3ed28:	strb	sl, [r0, #3]
   3ed2c:	movt	r2, #20971	; 0x51eb
   3ed30:	umull	r2, r3, r1, r2
   3ed34:	mov	r2, #48	; 0x30
   3ed38:	orr	r2, r2, r3, lsr #5
   3ed3c:	strb	r2, [r0]
   3ed40:	lsr	r2, r3, #5
   3ed44:	mov	r3, #100	; 0x64
   3ed48:	mls	r1, r2, r3, r1
   3ed4c:	ldr	r2, [pc, #624]	; 3efc4 <flatcc_json_printer_utype_vector_field@@Base+0x508>
   3ed50:	uxtb	r1, r1
   3ed54:	add	r2, pc, r2
   3ed58:	add	r1, r2, r1, lsl #1
   3ed5c:	ldrh	r1, [r1]
   3ed60:	strh	r1, [r0, #1]
   3ed64:	mov	r0, #3
   3ed68:	ldr	r1, [r4, #20]
   3ed6c:	add	r7, r7, #1
   3ed70:	cmp	r8, #0
   3ed74:	add	r0, r1, r0
   3ed78:	str	r0, [r4, #20]
   3ed7c:	beq	3eed8 <flatcc_json_printer_utype_vector_field@@Base+0x41c>
   3ed80:	add	r1, r0, #1
   3ed84:	str	r1, [r4, #20]
   3ed88:	strb	r9, [r0]
   3ed8c:	ldrb	r1, [r4, #25]
   3ed90:	ldr	r0, [r4, #20]
   3ed94:	cmp	r1, #0
   3ed98:	beq	3ee54 <flatcc_json_printer_utype_vector_field@@Base+0x398>
   3ed9c:	add	r1, r0, #1
   3eda0:	str	r1, [r4, #20]
   3eda4:	mov	r1, #10
   3eda8:	strb	r1, [r0]
   3edac:	ldr	r0, [r4, #20]
   3edb0:	ldrb	r2, [r4, #25]
   3edb4:	ldr	r3, [r4, #32]
   3edb8:	ldr	r1, [r4, #16]
   3edbc:	mla	r6, r3, r2, r0
   3edc0:	mul	r5, r3, r2
   3edc4:	cmp	r6, r1
   3edc8:	bls	3ee38 <flatcc_json_printer_utype_vector_field@@Base+0x37c>
   3edcc:	cmp	r0, r1
   3edd0:	bcc	3edec <flatcc_json_printer_utype_vector_field@@Base+0x330>
   3edd4:	ldr	r2, [r4, #44]	; 0x2c
   3edd8:	mov	r0, r4
   3eddc:	mov	r1, #0
   3ede0:	blx	r2
   3ede4:	ldr	r1, [r4, #16]
   3ede8:	ldr	r0, [r4, #20]
   3edec:	sub	r6, r1, r0
   3edf0:	cmp	r6, r5
   3edf4:	bcs	3ee38 <flatcc_json_printer_utype_vector_field@@Base+0x37c>
   3edf8:	mov	r1, #32
   3edfc:	mov	r2, r6
   3ee00:	bl	14ee4 <memset@plt>
   3ee04:	ldr	r0, [r4, #20]
   3ee08:	ldr	r2, [r4, #44]	; 0x2c
   3ee0c:	mov	r1, #0
   3ee10:	add	r0, r0, r6
   3ee14:	str	r0, [r4, #20]
   3ee18:	mov	r0, r4
   3ee1c:	blx	r2
   3ee20:	ldr	r1, [r4, #16]
   3ee24:	ldr	r0, [r4, #20]
   3ee28:	sub	r5, r5, r6
   3ee2c:	sub	r6, r1, r0
   3ee30:	cmp	r5, r6
   3ee34:	bhi	3edf8 <flatcc_json_printer_utype_vector_field@@Base+0x33c>
   3ee38:	mov	r1, #32
   3ee3c:	mov	r2, r5
   3ee40:	bl	14ee4 <memset@plt>
   3ee44:	ldr	r0, [r4, #20]
   3ee48:	add	r0, r0, r5
   3ee4c:	str	r0, [r4, #20]
   3ee50:	b	3ee74 <flatcc_json_printer_utype_vector_field@@Base+0x3b8>
   3ee54:	ldr	r1, [r4, #16]
   3ee58:	cmp	r0, r1
   3ee5c:	bcc	3ee74 <flatcc_json_printer_utype_vector_field@@Base+0x3b8>
   3ee60:	ldr	r2, [r4, #44]	; 0x2c
   3ee64:	mov	r0, r4
   3ee68:	mov	r1, #0
   3ee6c:	blx	r2
   3ee70:	ldr	r0, [r4, #20]
   3ee74:	ldrb	r1, [r7]
   3ee78:	sub	r8, r8, #1
   3ee7c:	cmp	r1, #100	; 0x64
   3ee80:	bcs	3ed24 <flatcc_json_printer_utype_vector_field@@Base+0x268>
   3ee84:	cmp	r1, #10
   3ee88:	bcc	3eec4 <flatcc_json_printer_utype_vector_field@@Base+0x408>
   3ee8c:	movw	r2, #34079	; 0x851f
   3ee90:	strb	sl, [r0, #2]
   3ee94:	movt	r2, #20971	; 0x51eb
   3ee98:	umull	r2, r3, r1, r2
   3ee9c:	lsr	r2, r3, #5
   3eea0:	mov	r3, #100	; 0x64
   3eea4:	mls	r1, r2, r3, r1
   3eea8:	ldr	r2, [pc, #280]	; 3efc8 <flatcc_json_printer_utype_vector_field@@Base+0x50c>
   3eeac:	add	r2, pc, r2
   3eeb0:	add	r1, r2, r1, lsl #1
   3eeb4:	ldrh	r1, [r1]
   3eeb8:	strh	r1, [r0]
   3eebc:	mov	r0, #2
   3eec0:	b	3ed68 <flatcc_json_printer_utype_vector_field@@Base+0x2ac>
   3eec4:	add	r1, r1, #48	; 0x30
   3eec8:	strb	sl, [r0, #1]
   3eecc:	strb	r1, [r0]
   3eed0:	mov	r0, #1
   3eed4:	b	3ed68 <flatcc_json_printer_utype_vector_field@@Base+0x2ac>
   3eed8:	ldrb	r1, [r4, #25]
   3eedc:	ldr	r0, [r4, #20]
   3eee0:	cmp	r1, #0
   3eee4:	beq	3efa4 <flatcc_json_printer_utype_vector_field@@Base+0x4e8>
   3eee8:	add	r1, r0, #1
   3eeec:	str	r1, [r4, #20]
   3eef0:	mov	r1, #10
   3eef4:	strb	r1, [r0]
   3eef8:	ldr	r0, [r4, #32]
   3eefc:	sub	r2, r0, #1
   3ef00:	str	r2, [r4, #32]
   3ef04:	ldrb	r3, [r4, #25]
   3ef08:	ldr	r0, [r4, #20]
   3ef0c:	ldr	r1, [r4, #16]
   3ef10:	mla	r7, r2, r3, r0
   3ef14:	mul	r5, r2, r3
   3ef18:	cmp	r7, r1
   3ef1c:	bls	3ef8c <flatcc_json_printer_utype_vector_field@@Base+0x4d0>
   3ef20:	cmp	r0, r1
   3ef24:	bcc	3ef40 <flatcc_json_printer_utype_vector_field@@Base+0x484>
   3ef28:	ldr	r2, [r4, #44]	; 0x2c
   3ef2c:	mov	r0, r4
   3ef30:	mov	r1, #0
   3ef34:	blx	r2
   3ef38:	ldr	r1, [r4, #16]
   3ef3c:	ldr	r0, [r4, #20]
   3ef40:	sub	r6, r1, r0
   3ef44:	cmp	r6, r5
   3ef48:	bcs	3ef8c <flatcc_json_printer_utype_vector_field@@Base+0x4d0>
   3ef4c:	mov	r1, #32
   3ef50:	mov	r2, r6
   3ef54:	bl	14ee4 <memset@plt>
   3ef58:	ldr	r0, [r4, #20]
   3ef5c:	ldr	r2, [r4, #44]	; 0x2c
   3ef60:	mov	r1, #0
   3ef64:	add	r0, r0, r6
   3ef68:	str	r0, [r4, #20]
   3ef6c:	mov	r0, r4
   3ef70:	blx	r2
   3ef74:	ldr	r1, [r4, #16]
   3ef78:	ldr	r0, [r4, #20]
   3ef7c:	sub	r5, r5, r6
   3ef80:	sub	r6, r1, r0
   3ef84:	cmp	r5, r6
   3ef88:	bhi	3ef4c <flatcc_json_printer_utype_vector_field@@Base+0x490>
   3ef8c:	mov	r1, #32
   3ef90:	mov	r2, r5
   3ef94:	bl	14ee4 <memset@plt>
   3ef98:	ldr	r0, [r4, #20]
   3ef9c:	add	r0, r0, r5
   3efa0:	str	r0, [r4, #20]
   3efa4:	add	r1, r0, #1
   3efa8:	str	r1, [r4, #20]
   3efac:	mov	r1, #93	; 0x5d
   3efb0:	strb	r1, [r0]
   3efb4:	sub	sp, fp, #28
   3efb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3efbc:	andeq	pc, r0, r3, asr r2	; <UNPREDICTABLE>
   3efc0:	andeq	pc, r0, r3, lsl r2	; <UNPREDICTABLE>
   3efc4:	muleq	r0, r3, r1
   3efc8:	andeq	pc, r0, fp, lsr r0	; <UNPREDICTABLE>

0003efcc <flatcc_json_printer_uint8_vector_field@@Base>:
   3efcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3efd0:	add	fp, sp, #28
   3efd4:	sub	sp, sp, #4
   3efd8:	mov	r4, r0
   3efdc:	mov	r0, #4
   3efe0:	add	r0, r0, r2, lsl #1
   3efe4:	ldr	r2, [r1, #8]
   3efe8:	cmp	r0, r2
   3efec:	bge	3f00c <flatcc_json_printer_uint8_vector_field@@Base+0x40>
   3eff0:	ldr	r2, [r1, #4]
   3eff4:	add	r0, r2, r0
   3eff8:	ldrh	r0, [r0]
   3effc:	cmp	r0, #0
   3f000:	ldrne	r2, [r1]
   3f004:	addsne	r9, r2, r0
   3f008:	bne	3f014 <flatcc_json_printer_uint8_vector_field@@Base+0x48>
   3f00c:	sub	sp, fp, #28
   3f010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f014:	ldr	r0, [r1, #16]
   3f018:	ldr	r2, [fp, #8]
   3f01c:	add	r7, r0, #1
   3f020:	cmp	r0, #0
   3f024:	str	r7, [r1, #16]
   3f028:	beq	3f040 <flatcc_json_printer_uint8_vector_field@@Base+0x74>
   3f02c:	ldr	r0, [r4, #20]
   3f030:	add	r1, r0, #1
   3f034:	str	r1, [r4, #20]
   3f038:	mov	r1, #44	; 0x2c
   3f03c:	strb	r1, [r0]
   3f040:	ldr	r0, [r9]
   3f044:	mov	r1, r3
   3f048:	ldr	r8, [r9, r0]!
   3f04c:	mov	r0, r4
   3f050:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3f054:	ldr	r1, [r4, #32]
   3f058:	ldr	r0, [r4, #20]
   3f05c:	cmp	r8, #0
   3f060:	add	r1, r1, #1
   3f064:	str	r1, [r4, #32]
   3f068:	add	r1, r0, #1
   3f06c:	str	r1, [r4, #20]
   3f070:	mov	r1, #91	; 0x5b
   3f074:	strb	r1, [r0]
   3f078:	beq	3f3e8 <flatcc_json_printer_uint8_vector_field@@Base+0x41c>
   3f07c:	ldrb	r1, [r4, #25]
   3f080:	ldr	r0, [r4, #20]
   3f084:	cmp	r1, #0
   3f088:	beq	3f144 <flatcc_json_printer_uint8_vector_field@@Base+0x178>
   3f08c:	add	r1, r0, #1
   3f090:	str	r1, [r4, #20]
   3f094:	mov	r1, #10
   3f098:	strb	r1, [r0]
   3f09c:	ldr	r0, [r4, #20]
   3f0a0:	ldrb	r2, [r4, #25]
   3f0a4:	ldr	r3, [r4, #32]
   3f0a8:	ldr	r1, [r4, #16]
   3f0ac:	mla	r7, r3, r2, r0
   3f0b0:	mul	r5, r3, r2
   3f0b4:	cmp	r7, r1
   3f0b8:	bls	3f128 <flatcc_json_printer_uint8_vector_field@@Base+0x15c>
   3f0bc:	cmp	r0, r1
   3f0c0:	bcc	3f0dc <flatcc_json_printer_uint8_vector_field@@Base+0x110>
   3f0c4:	ldr	r2, [r4, #44]	; 0x2c
   3f0c8:	mov	r0, r4
   3f0cc:	mov	r1, #0
   3f0d0:	blx	r2
   3f0d4:	ldr	r1, [r4, #16]
   3f0d8:	ldr	r0, [r4, #20]
   3f0dc:	sub	r6, r1, r0
   3f0e0:	cmp	r6, r5
   3f0e4:	bcs	3f128 <flatcc_json_printer_uint8_vector_field@@Base+0x15c>
   3f0e8:	mov	r1, #32
   3f0ec:	mov	r2, r6
   3f0f0:	bl	14ee4 <memset@plt>
   3f0f4:	ldr	r0, [r4, #20]
   3f0f8:	ldr	r2, [r4, #44]	; 0x2c
   3f0fc:	mov	r1, #0
   3f100:	add	r0, r0, r6
   3f104:	str	r0, [r4, #20]
   3f108:	mov	r0, r4
   3f10c:	blx	r2
   3f110:	ldr	r1, [r4, #16]
   3f114:	ldr	r0, [r4, #20]
   3f118:	sub	r5, r5, r6
   3f11c:	sub	r6, r1, r0
   3f120:	cmp	r5, r6
   3f124:	bhi	3f0e8 <flatcc_json_printer_uint8_vector_field@@Base+0x11c>
   3f128:	mov	r1, #32
   3f12c:	mov	r2, r5
   3f130:	bl	14ee4 <memset@plt>
   3f134:	ldr	r0, [r4, #20]
   3f138:	add	r0, r0, r5
   3f13c:	str	r0, [r4, #20]
   3f140:	b	3f164 <flatcc_json_printer_uint8_vector_field@@Base+0x198>
   3f144:	ldr	r1, [r4, #16]
   3f148:	cmp	r0, r1
   3f14c:	bcc	3f164 <flatcc_json_printer_uint8_vector_field@@Base+0x198>
   3f150:	ldr	r2, [r4, #44]	; 0x2c
   3f154:	mov	r0, r4
   3f158:	mov	r1, #0
   3f15c:	blx	r2
   3f160:	ldr	r0, [r4, #20]
   3f164:	ldrb	r1, [r9, #4]
   3f168:	mov	r2, #0
   3f16c:	cmp	r1, #100	; 0x64
   3f170:	bcc	3f1bc <flatcc_json_printer_uint8_vector_field@@Base+0x1f0>
   3f174:	strb	r2, [r0, #3]
   3f178:	movw	r2, #34079	; 0x851f
   3f17c:	movt	r2, #20971	; 0x51eb
   3f180:	umull	r2, r3, r1, r2
   3f184:	mov	r2, #48	; 0x30
   3f188:	orr	r2, r2, r3, lsr #5
   3f18c:	strb	r2, [r0]
   3f190:	lsr	r2, r3, #5
   3f194:	mov	r3, #100	; 0x64
   3f198:	mls	r1, r2, r3, r1
   3f19c:	ldr	r2, [pc, #808]	; 3f4cc <flatcc_json_printer_uint8_vector_field@@Base+0x500>
   3f1a0:	uxtb	r1, r1
   3f1a4:	add	r2, pc, r2
   3f1a8:	add	r1, r2, r1, lsl #1
   3f1ac:	ldrh	r1, [r1]
   3f1b0:	strh	r1, [r0, #1]
   3f1b4:	mov	r0, #3
   3f1b8:	b	3f20c <flatcc_json_printer_uint8_vector_field@@Base+0x240>
   3f1bc:	cmp	r1, #10
   3f1c0:	bcc	3f1fc <flatcc_json_printer_uint8_vector_field@@Base+0x230>
   3f1c4:	strb	r2, [r0, #2]
   3f1c8:	movw	r2, #34079	; 0x851f
   3f1cc:	movt	r2, #20971	; 0x51eb
   3f1d0:	umull	r2, r3, r1, r2
   3f1d4:	lsr	r2, r3, #5
   3f1d8:	mov	r3, #100	; 0x64
   3f1dc:	mls	r1, r2, r3, r1
   3f1e0:	ldr	r2, [pc, #744]	; 3f4d0 <flatcc_json_printer_uint8_vector_field@@Base+0x504>
   3f1e4:	add	r2, pc, r2
   3f1e8:	add	r1, r2, r1, lsl #1
   3f1ec:	ldrh	r1, [r1]
   3f1f0:	strh	r1, [r0]
   3f1f4:	mov	r0, #2
   3f1f8:	b	3f20c <flatcc_json_printer_uint8_vector_field@@Base+0x240>
   3f1fc:	add	r1, r1, #48	; 0x30
   3f200:	strb	r2, [r0, #1]
   3f204:	strb	r1, [r0]
   3f208:	mov	r0, #1
   3f20c:	ldr	r1, [r4, #20]
   3f210:	subs	r8, r8, #1
   3f214:	add	r0, r1, r0
   3f218:	str	r0, [r4, #20]
   3f21c:	beq	3f3e8 <flatcc_json_printer_uint8_vector_field@@Base+0x41c>
   3f220:	ldr	r0, [r4, #20]
   3f224:	add	r7, r9, #5
   3f228:	mov	r9, #44	; 0x2c
   3f22c:	mov	sl, #0
   3f230:	b	3f290 <flatcc_json_printer_uint8_vector_field@@Base+0x2c4>
   3f234:	movw	r2, #34079	; 0x851f
   3f238:	strb	sl, [r0, #3]
   3f23c:	movt	r2, #20971	; 0x51eb
   3f240:	umull	r2, r3, r1, r2
   3f244:	mov	r2, #48	; 0x30
   3f248:	orr	r2, r2, r3, lsr #5
   3f24c:	strb	r2, [r0]
   3f250:	lsr	r2, r3, #5
   3f254:	mov	r3, #100	; 0x64
   3f258:	mls	r1, r2, r3, r1
   3f25c:	ldr	r2, [pc, #624]	; 3f4d4 <flatcc_json_printer_uint8_vector_field@@Base+0x508>
   3f260:	uxtb	r1, r1
   3f264:	add	r2, pc, r2
   3f268:	add	r1, r2, r1, lsl #1
   3f26c:	ldrh	r1, [r1]
   3f270:	strh	r1, [r0, #1]
   3f274:	mov	r0, #3
   3f278:	ldr	r1, [r4, #20]
   3f27c:	add	r7, r7, #1
   3f280:	cmp	r8, #0
   3f284:	add	r0, r1, r0
   3f288:	str	r0, [r4, #20]
   3f28c:	beq	3f3e8 <flatcc_json_printer_uint8_vector_field@@Base+0x41c>
   3f290:	add	r1, r0, #1
   3f294:	str	r1, [r4, #20]
   3f298:	strb	r9, [r0]
   3f29c:	ldrb	r1, [r4, #25]
   3f2a0:	ldr	r0, [r4, #20]
   3f2a4:	cmp	r1, #0
   3f2a8:	beq	3f364 <flatcc_json_printer_uint8_vector_field@@Base+0x398>
   3f2ac:	add	r1, r0, #1
   3f2b0:	str	r1, [r4, #20]
   3f2b4:	mov	r1, #10
   3f2b8:	strb	r1, [r0]
   3f2bc:	ldr	r0, [r4, #20]
   3f2c0:	ldrb	r2, [r4, #25]
   3f2c4:	ldr	r3, [r4, #32]
   3f2c8:	ldr	r1, [r4, #16]
   3f2cc:	mla	r6, r3, r2, r0
   3f2d0:	mul	r5, r3, r2
   3f2d4:	cmp	r6, r1
   3f2d8:	bls	3f348 <flatcc_json_printer_uint8_vector_field@@Base+0x37c>
   3f2dc:	cmp	r0, r1
   3f2e0:	bcc	3f2fc <flatcc_json_printer_uint8_vector_field@@Base+0x330>
   3f2e4:	ldr	r2, [r4, #44]	; 0x2c
   3f2e8:	mov	r0, r4
   3f2ec:	mov	r1, #0
   3f2f0:	blx	r2
   3f2f4:	ldr	r1, [r4, #16]
   3f2f8:	ldr	r0, [r4, #20]
   3f2fc:	sub	r6, r1, r0
   3f300:	cmp	r6, r5
   3f304:	bcs	3f348 <flatcc_json_printer_uint8_vector_field@@Base+0x37c>
   3f308:	mov	r1, #32
   3f30c:	mov	r2, r6
   3f310:	bl	14ee4 <memset@plt>
   3f314:	ldr	r0, [r4, #20]
   3f318:	ldr	r2, [r4, #44]	; 0x2c
   3f31c:	mov	r1, #0
   3f320:	add	r0, r0, r6
   3f324:	str	r0, [r4, #20]
   3f328:	mov	r0, r4
   3f32c:	blx	r2
   3f330:	ldr	r1, [r4, #16]
   3f334:	ldr	r0, [r4, #20]
   3f338:	sub	r5, r5, r6
   3f33c:	sub	r6, r1, r0
   3f340:	cmp	r5, r6
   3f344:	bhi	3f308 <flatcc_json_printer_uint8_vector_field@@Base+0x33c>
   3f348:	mov	r1, #32
   3f34c:	mov	r2, r5
   3f350:	bl	14ee4 <memset@plt>
   3f354:	ldr	r0, [r4, #20]
   3f358:	add	r0, r0, r5
   3f35c:	str	r0, [r4, #20]
   3f360:	b	3f384 <flatcc_json_printer_uint8_vector_field@@Base+0x3b8>
   3f364:	ldr	r1, [r4, #16]
   3f368:	cmp	r0, r1
   3f36c:	bcc	3f384 <flatcc_json_printer_uint8_vector_field@@Base+0x3b8>
   3f370:	ldr	r2, [r4, #44]	; 0x2c
   3f374:	mov	r0, r4
   3f378:	mov	r1, #0
   3f37c:	blx	r2
   3f380:	ldr	r0, [r4, #20]
   3f384:	ldrb	r1, [r7]
   3f388:	sub	r8, r8, #1
   3f38c:	cmp	r1, #100	; 0x64
   3f390:	bcs	3f234 <flatcc_json_printer_uint8_vector_field@@Base+0x268>
   3f394:	cmp	r1, #10
   3f398:	bcc	3f3d4 <flatcc_json_printer_uint8_vector_field@@Base+0x408>
   3f39c:	movw	r2, #34079	; 0x851f
   3f3a0:	strb	sl, [r0, #2]
   3f3a4:	movt	r2, #20971	; 0x51eb
   3f3a8:	umull	r2, r3, r1, r2
   3f3ac:	lsr	r2, r3, #5
   3f3b0:	mov	r3, #100	; 0x64
   3f3b4:	mls	r1, r2, r3, r1
   3f3b8:	ldr	r2, [pc, #280]	; 3f4d8 <flatcc_json_printer_uint8_vector_field@@Base+0x50c>
   3f3bc:	add	r2, pc, r2
   3f3c0:	add	r1, r2, r1, lsl #1
   3f3c4:	ldrh	r1, [r1]
   3f3c8:	strh	r1, [r0]
   3f3cc:	mov	r0, #2
   3f3d0:	b	3f278 <flatcc_json_printer_uint8_vector_field@@Base+0x2ac>
   3f3d4:	add	r1, r1, #48	; 0x30
   3f3d8:	strb	sl, [r0, #1]
   3f3dc:	strb	r1, [r0]
   3f3e0:	mov	r0, #1
   3f3e4:	b	3f278 <flatcc_json_printer_uint8_vector_field@@Base+0x2ac>
   3f3e8:	ldrb	r1, [r4, #25]
   3f3ec:	ldr	r0, [r4, #20]
   3f3f0:	cmp	r1, #0
   3f3f4:	beq	3f4b4 <flatcc_json_printer_uint8_vector_field@@Base+0x4e8>
   3f3f8:	add	r1, r0, #1
   3f3fc:	str	r1, [r4, #20]
   3f400:	mov	r1, #10
   3f404:	strb	r1, [r0]
   3f408:	ldr	r0, [r4, #32]
   3f40c:	sub	r2, r0, #1
   3f410:	str	r2, [r4, #32]
   3f414:	ldrb	r3, [r4, #25]
   3f418:	ldr	r0, [r4, #20]
   3f41c:	ldr	r1, [r4, #16]
   3f420:	mla	r7, r2, r3, r0
   3f424:	mul	r5, r2, r3
   3f428:	cmp	r7, r1
   3f42c:	bls	3f49c <flatcc_json_printer_uint8_vector_field@@Base+0x4d0>
   3f430:	cmp	r0, r1
   3f434:	bcc	3f450 <flatcc_json_printer_uint8_vector_field@@Base+0x484>
   3f438:	ldr	r2, [r4, #44]	; 0x2c
   3f43c:	mov	r0, r4
   3f440:	mov	r1, #0
   3f444:	blx	r2
   3f448:	ldr	r1, [r4, #16]
   3f44c:	ldr	r0, [r4, #20]
   3f450:	sub	r6, r1, r0
   3f454:	cmp	r6, r5
   3f458:	bcs	3f49c <flatcc_json_printer_uint8_vector_field@@Base+0x4d0>
   3f45c:	mov	r1, #32
   3f460:	mov	r2, r6
   3f464:	bl	14ee4 <memset@plt>
   3f468:	ldr	r0, [r4, #20]
   3f46c:	ldr	r2, [r4, #44]	; 0x2c
   3f470:	mov	r1, #0
   3f474:	add	r0, r0, r6
   3f478:	str	r0, [r4, #20]
   3f47c:	mov	r0, r4
   3f480:	blx	r2
   3f484:	ldr	r1, [r4, #16]
   3f488:	ldr	r0, [r4, #20]
   3f48c:	sub	r5, r5, r6
   3f490:	sub	r6, r1, r0
   3f494:	cmp	r5, r6
   3f498:	bhi	3f45c <flatcc_json_printer_uint8_vector_field@@Base+0x490>
   3f49c:	mov	r1, #32
   3f4a0:	mov	r2, r5
   3f4a4:	bl	14ee4 <memset@plt>
   3f4a8:	ldr	r0, [r4, #20]
   3f4ac:	add	r0, r0, r5
   3f4b0:	str	r0, [r4, #20]
   3f4b4:	add	r1, r0, #1
   3f4b8:	str	r1, [r4, #20]
   3f4bc:	mov	r1, #93	; 0x5d
   3f4c0:	strb	r1, [r0]
   3f4c4:	sub	sp, fp, #28
   3f4c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f4cc:	andeq	lr, r0, r3, asr #26
   3f4d0:	andeq	lr, r0, r3, lsl #26
   3f4d4:	andeq	lr, r0, r3, lsl #25
   3f4d8:	andeq	lr, r0, fp, lsr #22

0003f4dc <flatcc_json_printer_uint16_vector_field@@Base>:
   3f4dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f4e0:	add	fp, sp, #28
   3f4e4:	sub	sp, sp, #4
   3f4e8:	mov	r4, r0
   3f4ec:	mov	r0, #4
   3f4f0:	add	r0, r0, r2, lsl #1
   3f4f4:	ldr	r2, [r1, #8]
   3f4f8:	cmp	r0, r2
   3f4fc:	bge	3f51c <flatcc_json_printer_uint16_vector_field@@Base+0x40>
   3f500:	ldr	r2, [r1, #4]
   3f504:	add	r0, r2, r0
   3f508:	ldrh	r0, [r0]
   3f50c:	cmp	r0, #0
   3f510:	ldrne	r2, [r1]
   3f514:	addsne	r8, r2, r0
   3f518:	bne	3f524 <flatcc_json_printer_uint16_vector_field@@Base+0x48>
   3f51c:	sub	sp, fp, #28
   3f520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f524:	ldr	r0, [r1, #16]
   3f528:	ldr	r2, [fp, #8]
   3f52c:	add	r7, r0, #1
   3f530:	cmp	r0, #0
   3f534:	str	r7, [r1, #16]
   3f538:	beq	3f550 <flatcc_json_printer_uint16_vector_field@@Base+0x74>
   3f53c:	ldr	r0, [r4, #20]
   3f540:	add	r1, r0, #1
   3f544:	str	r1, [r4, #20]
   3f548:	mov	r1, #44	; 0x2c
   3f54c:	strb	r1, [r0]
   3f550:	ldr	r0, [r8]
   3f554:	mov	r1, r3
   3f558:	ldr	r7, [r8, r0]!
   3f55c:	mov	r0, r4
   3f560:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3f564:	ldr	r1, [r4, #32]
   3f568:	ldr	r0, [r4, #20]
   3f56c:	cmp	r7, #0
   3f570:	add	r1, r1, #1
   3f574:	str	r1, [r4, #32]
   3f578:	add	r1, r0, #1
   3f57c:	str	r1, [r4, #20]
   3f580:	mov	r1, #91	; 0x5b
   3f584:	strb	r1, [r0]
   3f588:	beq	3f7b8 <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   3f58c:	ldrb	r0, [r4, #25]
   3f590:	ldr	r1, [r4, #20]
   3f594:	cmp	r0, #0
   3f598:	beq	3f654 <flatcc_json_printer_uint16_vector_field@@Base+0x178>
   3f59c:	add	r0, r1, #1
   3f5a0:	str	r0, [r4, #20]
   3f5a4:	mov	r0, #10
   3f5a8:	strb	r0, [r1]
   3f5ac:	ldr	r0, [r4, #20]
   3f5b0:	ldrb	r2, [r4, #25]
   3f5b4:	ldr	r3, [r4, #32]
   3f5b8:	ldr	r1, [r4, #16]
   3f5bc:	mla	r6, r3, r2, r0
   3f5c0:	mul	r5, r3, r2
   3f5c4:	cmp	r6, r1
   3f5c8:	bls	3f638 <flatcc_json_printer_uint16_vector_field@@Base+0x15c>
   3f5cc:	cmp	r0, r1
   3f5d0:	bcc	3f5ec <flatcc_json_printer_uint16_vector_field@@Base+0x110>
   3f5d4:	ldr	r2, [r4, #44]	; 0x2c
   3f5d8:	mov	r0, r4
   3f5dc:	mov	r1, #0
   3f5e0:	blx	r2
   3f5e4:	ldr	r1, [r4, #16]
   3f5e8:	ldr	r0, [r4, #20]
   3f5ec:	sub	r6, r1, r0
   3f5f0:	cmp	r6, r5
   3f5f4:	bcs	3f638 <flatcc_json_printer_uint16_vector_field@@Base+0x15c>
   3f5f8:	mov	r1, #32
   3f5fc:	mov	r2, r6
   3f600:	bl	14ee4 <memset@plt>
   3f604:	ldr	r0, [r4, #20]
   3f608:	ldr	r2, [r4, #44]	; 0x2c
   3f60c:	mov	r1, #0
   3f610:	add	r0, r0, r6
   3f614:	str	r0, [r4, #20]
   3f618:	mov	r0, r4
   3f61c:	blx	r2
   3f620:	ldr	r1, [r4, #16]
   3f624:	ldr	r0, [r4, #20]
   3f628:	sub	r5, r5, r6
   3f62c:	sub	r6, r1, r0
   3f630:	cmp	r5, r6
   3f634:	bhi	3f5f8 <flatcc_json_printer_uint16_vector_field@@Base+0x11c>
   3f638:	mov	r1, #32
   3f63c:	mov	r2, r5
   3f640:	bl	14ee4 <memset@plt>
   3f644:	ldr	r0, [r4, #20]
   3f648:	add	r1, r0, r5
   3f64c:	str	r1, [r4, #20]
   3f650:	b	3f674 <flatcc_json_printer_uint16_vector_field@@Base+0x198>
   3f654:	ldr	r0, [r4, #16]
   3f658:	cmp	r1, r0
   3f65c:	bcc	3f674 <flatcc_json_printer_uint16_vector_field@@Base+0x198>
   3f660:	ldr	r2, [r4, #44]	; 0x2c
   3f664:	mov	r0, r4
   3f668:	mov	r1, #0
   3f66c:	blx	r2
   3f670:	ldr	r1, [r4, #20]
   3f674:	ldrh	r0, [r8, #4]
   3f678:	bl	3b670 <flatcc_json_printer_uint16@@Base+0x2c>
   3f67c:	ldr	r1, [r4, #20]
   3f680:	subs	r9, r7, #1
   3f684:	add	r0, r1, r0
   3f688:	str	r0, [r4, #20]
   3f68c:	beq	3f7b8 <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   3f690:	ldr	r0, [r4, #20]
   3f694:	add	r7, r8, #6
   3f698:	mov	r8, #44	; 0x2c
   3f69c:	mov	sl, #10
   3f6a0:	b	3f6d8 <flatcc_json_printer_uint16_vector_field@@Base+0x1fc>
   3f6a4:	mov	r1, #32
   3f6a8:	mov	r2, r5
   3f6ac:	bl	14ee4 <memset@plt>
   3f6b0:	ldr	r0, [r4, #20]
   3f6b4:	add	r1, r0, r5
   3f6b8:	str	r1, [r4, #20]
   3f6bc:	ldrh	r0, [r7], #2
   3f6c0:	bl	3b670 <flatcc_json_printer_uint16@@Base+0x2c>
   3f6c4:	ldr	r1, [r4, #20]
   3f6c8:	cmp	r9, #0
   3f6cc:	add	r0, r1, r0
   3f6d0:	str	r0, [r4, #20]
   3f6d4:	beq	3f7b8 <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   3f6d8:	add	r1, r0, #1
   3f6dc:	sub	r9, r9, #1
   3f6e0:	str	r1, [r4, #20]
   3f6e4:	strb	r8, [r0]
   3f6e8:	ldrb	r0, [r4, #25]
   3f6ec:	ldr	r1, [r4, #20]
   3f6f0:	cmp	r0, #0
   3f6f4:	beq	3f794 <flatcc_json_printer_uint16_vector_field@@Base+0x2b8>
   3f6f8:	add	r0, r1, #1
   3f6fc:	str	r0, [r4, #20]
   3f700:	strb	sl, [r1]
   3f704:	ldr	r0, [r4, #20]
   3f708:	ldrb	r2, [r4, #25]
   3f70c:	ldr	r3, [r4, #32]
   3f710:	ldr	r1, [r4, #16]
   3f714:	mla	r6, r3, r2, r0
   3f718:	mul	r5, r3, r2
   3f71c:	cmp	r6, r1
   3f720:	bls	3f6a4 <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   3f724:	cmp	r0, r1
   3f728:	bcc	3f744 <flatcc_json_printer_uint16_vector_field@@Base+0x268>
   3f72c:	ldr	r2, [r4, #44]	; 0x2c
   3f730:	mov	r0, r4
   3f734:	mov	r1, #0
   3f738:	blx	r2
   3f73c:	ldr	r1, [r4, #16]
   3f740:	ldr	r0, [r4, #20]
   3f744:	sub	r6, r1, r0
   3f748:	cmp	r6, r5
   3f74c:	bcs	3f6a4 <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   3f750:	mov	r1, #32
   3f754:	mov	r2, r6
   3f758:	bl	14ee4 <memset@plt>
   3f75c:	ldr	r0, [r4, #20]
   3f760:	ldr	r2, [r4, #44]	; 0x2c
   3f764:	mov	r1, #0
   3f768:	add	r0, r0, r6
   3f76c:	str	r0, [r4, #20]
   3f770:	mov	r0, r4
   3f774:	blx	r2
   3f778:	ldr	r1, [r4, #16]
   3f77c:	ldr	r0, [r4, #20]
   3f780:	sub	r5, r5, r6
   3f784:	sub	r6, r1, r0
   3f788:	cmp	r5, r6
   3f78c:	bhi	3f750 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   3f790:	b	3f6a4 <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   3f794:	ldr	r0, [r4, #16]
   3f798:	cmp	r1, r0
   3f79c:	bcc	3f6bc <flatcc_json_printer_uint16_vector_field@@Base+0x1e0>
   3f7a0:	ldr	r2, [r4, #44]	; 0x2c
   3f7a4:	mov	r0, r4
   3f7a8:	mov	r1, #0
   3f7ac:	blx	r2
   3f7b0:	ldr	r1, [r4, #20]
   3f7b4:	b	3f6bc <flatcc_json_printer_uint16_vector_field@@Base+0x1e0>
   3f7b8:	ldrb	r1, [r4, #25]
   3f7bc:	ldr	r0, [r4, #20]
   3f7c0:	cmp	r1, #0
   3f7c4:	beq	3f884 <flatcc_json_printer_uint16_vector_field@@Base+0x3a8>
   3f7c8:	add	r1, r0, #1
   3f7cc:	str	r1, [r4, #20]
   3f7d0:	mov	r1, #10
   3f7d4:	strb	r1, [r0]
   3f7d8:	ldr	r0, [r4, #32]
   3f7dc:	sub	r2, r0, #1
   3f7e0:	str	r2, [r4, #32]
   3f7e4:	ldrb	r3, [r4, #25]
   3f7e8:	ldr	r0, [r4, #20]
   3f7ec:	ldr	r1, [r4, #16]
   3f7f0:	mla	r7, r2, r3, r0
   3f7f4:	mul	r5, r2, r3
   3f7f8:	cmp	r7, r1
   3f7fc:	bls	3f86c <flatcc_json_printer_uint16_vector_field@@Base+0x390>
   3f800:	cmp	r0, r1
   3f804:	bcc	3f820 <flatcc_json_printer_uint16_vector_field@@Base+0x344>
   3f808:	ldr	r2, [r4, #44]	; 0x2c
   3f80c:	mov	r0, r4
   3f810:	mov	r1, #0
   3f814:	blx	r2
   3f818:	ldr	r1, [r4, #16]
   3f81c:	ldr	r0, [r4, #20]
   3f820:	sub	r6, r1, r0
   3f824:	cmp	r6, r5
   3f828:	bcs	3f86c <flatcc_json_printer_uint16_vector_field@@Base+0x390>
   3f82c:	mov	r1, #32
   3f830:	mov	r2, r6
   3f834:	bl	14ee4 <memset@plt>
   3f838:	ldr	r0, [r4, #20]
   3f83c:	ldr	r2, [r4, #44]	; 0x2c
   3f840:	mov	r1, #0
   3f844:	add	r0, r0, r6
   3f848:	str	r0, [r4, #20]
   3f84c:	mov	r0, r4
   3f850:	blx	r2
   3f854:	ldr	r1, [r4, #16]
   3f858:	ldr	r0, [r4, #20]
   3f85c:	sub	r5, r5, r6
   3f860:	sub	r6, r1, r0
   3f864:	cmp	r5, r6
   3f868:	bhi	3f82c <flatcc_json_printer_uint16_vector_field@@Base+0x350>
   3f86c:	mov	r1, #32
   3f870:	mov	r2, r5
   3f874:	bl	14ee4 <memset@plt>
   3f878:	ldr	r0, [r4, #20]
   3f87c:	add	r0, r0, r5
   3f880:	str	r0, [r4, #20]
   3f884:	add	r1, r0, #1
   3f888:	str	r1, [r4, #20]
   3f88c:	mov	r1, #93	; 0x5d
   3f890:	strb	r1, [r0]
   3f894:	sub	sp, fp, #28
   3f898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f89c <flatcc_json_printer_uint32_vector_field@@Base>:
   3f89c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f8a0:	add	fp, sp, #28
   3f8a4:	sub	sp, sp, #4
   3f8a8:	mov	r4, r0
   3f8ac:	mov	r0, #4
   3f8b0:	add	r0, r0, r2, lsl #1
   3f8b4:	ldr	r2, [r1, #8]
   3f8b8:	cmp	r0, r2
   3f8bc:	bge	3f8dc <flatcc_json_printer_uint32_vector_field@@Base+0x40>
   3f8c0:	ldr	r2, [r1, #4]
   3f8c4:	add	r0, r2, r0
   3f8c8:	ldrh	r0, [r0]
   3f8cc:	cmp	r0, #0
   3f8d0:	ldrne	r2, [r1]
   3f8d4:	addsne	r8, r2, r0
   3f8d8:	bne	3f8e4 <flatcc_json_printer_uint32_vector_field@@Base+0x48>
   3f8dc:	sub	sp, fp, #28
   3f8e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f8e4:	ldr	r0, [r1, #16]
   3f8e8:	ldr	r2, [fp, #8]
   3f8ec:	add	r7, r0, #1
   3f8f0:	cmp	r0, #0
   3f8f4:	str	r7, [r1, #16]
   3f8f8:	beq	3f910 <flatcc_json_printer_uint32_vector_field@@Base+0x74>
   3f8fc:	ldr	r0, [r4, #20]
   3f900:	add	r1, r0, #1
   3f904:	str	r1, [r4, #20]
   3f908:	mov	r1, #44	; 0x2c
   3f90c:	strb	r1, [r0]
   3f910:	ldr	r0, [r8]
   3f914:	mov	r1, r3
   3f918:	ldr	r7, [r8, r0]!
   3f91c:	mov	r0, r4
   3f920:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3f924:	ldr	r1, [r4, #32]
   3f928:	ldr	r0, [r4, #20]
   3f92c:	cmp	r7, #0
   3f930:	add	r1, r1, #1
   3f934:	str	r1, [r4, #32]
   3f938:	add	r1, r0, #1
   3f93c:	str	r1, [r4, #20]
   3f940:	mov	r1, #91	; 0x5b
   3f944:	strb	r1, [r0]
   3f948:	beq	3fb78 <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   3f94c:	ldrb	r0, [r4, #25]
   3f950:	ldr	r1, [r4, #20]
   3f954:	cmp	r0, #0
   3f958:	beq	3fa14 <flatcc_json_printer_uint32_vector_field@@Base+0x178>
   3f95c:	add	r0, r1, #1
   3f960:	str	r0, [r4, #20]
   3f964:	mov	r0, #10
   3f968:	strb	r0, [r1]
   3f96c:	ldr	r0, [r4, #20]
   3f970:	ldrb	r2, [r4, #25]
   3f974:	ldr	r3, [r4, #32]
   3f978:	ldr	r1, [r4, #16]
   3f97c:	mla	r6, r3, r2, r0
   3f980:	mul	r5, r3, r2
   3f984:	cmp	r6, r1
   3f988:	bls	3f9f8 <flatcc_json_printer_uint32_vector_field@@Base+0x15c>
   3f98c:	cmp	r0, r1
   3f990:	bcc	3f9ac <flatcc_json_printer_uint32_vector_field@@Base+0x110>
   3f994:	ldr	r2, [r4, #44]	; 0x2c
   3f998:	mov	r0, r4
   3f99c:	mov	r1, #0
   3f9a0:	blx	r2
   3f9a4:	ldr	r1, [r4, #16]
   3f9a8:	ldr	r0, [r4, #20]
   3f9ac:	sub	r6, r1, r0
   3f9b0:	cmp	r6, r5
   3f9b4:	bcs	3f9f8 <flatcc_json_printer_uint32_vector_field@@Base+0x15c>
   3f9b8:	mov	r1, #32
   3f9bc:	mov	r2, r6
   3f9c0:	bl	14ee4 <memset@plt>
   3f9c4:	ldr	r0, [r4, #20]
   3f9c8:	ldr	r2, [r4, #44]	; 0x2c
   3f9cc:	mov	r1, #0
   3f9d0:	add	r0, r0, r6
   3f9d4:	str	r0, [r4, #20]
   3f9d8:	mov	r0, r4
   3f9dc:	blx	r2
   3f9e0:	ldr	r1, [r4, #16]
   3f9e4:	ldr	r0, [r4, #20]
   3f9e8:	sub	r5, r5, r6
   3f9ec:	sub	r6, r1, r0
   3f9f0:	cmp	r5, r6
   3f9f4:	bhi	3f9b8 <flatcc_json_printer_uint32_vector_field@@Base+0x11c>
   3f9f8:	mov	r1, #32
   3f9fc:	mov	r2, r5
   3fa00:	bl	14ee4 <memset@plt>
   3fa04:	ldr	r0, [r4, #20]
   3fa08:	add	r1, r0, r5
   3fa0c:	str	r1, [r4, #20]
   3fa10:	b	3fa34 <flatcc_json_printer_uint32_vector_field@@Base+0x198>
   3fa14:	ldr	r0, [r4, #16]
   3fa18:	cmp	r1, r0
   3fa1c:	bcc	3fa34 <flatcc_json_printer_uint32_vector_field@@Base+0x198>
   3fa20:	ldr	r2, [r4, #44]	; 0x2c
   3fa24:	mov	r0, r4
   3fa28:	mov	r1, #0
   3fa2c:	blx	r2
   3fa30:	ldr	r1, [r4, #20]
   3fa34:	ldr	r0, [r8, #4]
   3fa38:	bl	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   3fa3c:	ldr	r1, [r4, #20]
   3fa40:	subs	r9, r7, #1
   3fa44:	add	r0, r1, r0
   3fa48:	str	r0, [r4, #20]
   3fa4c:	beq	3fb78 <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   3fa50:	ldr	r0, [r4, #20]
   3fa54:	add	r7, r8, #8
   3fa58:	mov	r8, #44	; 0x2c
   3fa5c:	mov	sl, #10
   3fa60:	b	3fa98 <flatcc_json_printer_uint32_vector_field@@Base+0x1fc>
   3fa64:	mov	r1, #32
   3fa68:	mov	r2, r5
   3fa6c:	bl	14ee4 <memset@plt>
   3fa70:	ldr	r0, [r4, #20]
   3fa74:	add	r1, r0, r5
   3fa78:	str	r1, [r4, #20]
   3fa7c:	ldr	r0, [r7], #4
   3fa80:	bl	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   3fa84:	ldr	r1, [r4, #20]
   3fa88:	cmp	r9, #0
   3fa8c:	add	r0, r1, r0
   3fa90:	str	r0, [r4, #20]
   3fa94:	beq	3fb78 <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   3fa98:	add	r1, r0, #1
   3fa9c:	sub	r9, r9, #1
   3faa0:	str	r1, [r4, #20]
   3faa4:	strb	r8, [r0]
   3faa8:	ldrb	r0, [r4, #25]
   3faac:	ldr	r1, [r4, #20]
   3fab0:	cmp	r0, #0
   3fab4:	beq	3fb54 <flatcc_json_printer_uint32_vector_field@@Base+0x2b8>
   3fab8:	add	r0, r1, #1
   3fabc:	str	r0, [r4, #20]
   3fac0:	strb	sl, [r1]
   3fac4:	ldr	r0, [r4, #20]
   3fac8:	ldrb	r2, [r4, #25]
   3facc:	ldr	r3, [r4, #32]
   3fad0:	ldr	r1, [r4, #16]
   3fad4:	mla	r6, r3, r2, r0
   3fad8:	mul	r5, r3, r2
   3fadc:	cmp	r6, r1
   3fae0:	bls	3fa64 <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   3fae4:	cmp	r0, r1
   3fae8:	bcc	3fb04 <flatcc_json_printer_uint32_vector_field@@Base+0x268>
   3faec:	ldr	r2, [r4, #44]	; 0x2c
   3faf0:	mov	r0, r4
   3faf4:	mov	r1, #0
   3faf8:	blx	r2
   3fafc:	ldr	r1, [r4, #16]
   3fb00:	ldr	r0, [r4, #20]
   3fb04:	sub	r6, r1, r0
   3fb08:	cmp	r6, r5
   3fb0c:	bcs	3fa64 <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   3fb10:	mov	r1, #32
   3fb14:	mov	r2, r6
   3fb18:	bl	14ee4 <memset@plt>
   3fb1c:	ldr	r0, [r4, #20]
   3fb20:	ldr	r2, [r4, #44]	; 0x2c
   3fb24:	mov	r1, #0
   3fb28:	add	r0, r0, r6
   3fb2c:	str	r0, [r4, #20]
   3fb30:	mov	r0, r4
   3fb34:	blx	r2
   3fb38:	ldr	r1, [r4, #16]
   3fb3c:	ldr	r0, [r4, #20]
   3fb40:	sub	r5, r5, r6
   3fb44:	sub	r6, r1, r0
   3fb48:	cmp	r5, r6
   3fb4c:	bhi	3fb10 <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   3fb50:	b	3fa64 <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   3fb54:	ldr	r0, [r4, #16]
   3fb58:	cmp	r1, r0
   3fb5c:	bcc	3fa7c <flatcc_json_printer_uint32_vector_field@@Base+0x1e0>
   3fb60:	ldr	r2, [r4, #44]	; 0x2c
   3fb64:	mov	r0, r4
   3fb68:	mov	r1, #0
   3fb6c:	blx	r2
   3fb70:	ldr	r1, [r4, #20]
   3fb74:	b	3fa7c <flatcc_json_printer_uint32_vector_field@@Base+0x1e0>
   3fb78:	ldrb	r1, [r4, #25]
   3fb7c:	ldr	r0, [r4, #20]
   3fb80:	cmp	r1, #0
   3fb84:	beq	3fc44 <flatcc_json_printer_uint32_vector_field@@Base+0x3a8>
   3fb88:	add	r1, r0, #1
   3fb8c:	str	r1, [r4, #20]
   3fb90:	mov	r1, #10
   3fb94:	strb	r1, [r0]
   3fb98:	ldr	r0, [r4, #32]
   3fb9c:	sub	r2, r0, #1
   3fba0:	str	r2, [r4, #32]
   3fba4:	ldrb	r3, [r4, #25]
   3fba8:	ldr	r0, [r4, #20]
   3fbac:	ldr	r1, [r4, #16]
   3fbb0:	mla	r7, r2, r3, r0
   3fbb4:	mul	r5, r2, r3
   3fbb8:	cmp	r7, r1
   3fbbc:	bls	3fc2c <flatcc_json_printer_uint32_vector_field@@Base+0x390>
   3fbc0:	cmp	r0, r1
   3fbc4:	bcc	3fbe0 <flatcc_json_printer_uint32_vector_field@@Base+0x344>
   3fbc8:	ldr	r2, [r4, #44]	; 0x2c
   3fbcc:	mov	r0, r4
   3fbd0:	mov	r1, #0
   3fbd4:	blx	r2
   3fbd8:	ldr	r1, [r4, #16]
   3fbdc:	ldr	r0, [r4, #20]
   3fbe0:	sub	r6, r1, r0
   3fbe4:	cmp	r6, r5
   3fbe8:	bcs	3fc2c <flatcc_json_printer_uint32_vector_field@@Base+0x390>
   3fbec:	mov	r1, #32
   3fbf0:	mov	r2, r6
   3fbf4:	bl	14ee4 <memset@plt>
   3fbf8:	ldr	r0, [r4, #20]
   3fbfc:	ldr	r2, [r4, #44]	; 0x2c
   3fc00:	mov	r1, #0
   3fc04:	add	r0, r0, r6
   3fc08:	str	r0, [r4, #20]
   3fc0c:	mov	r0, r4
   3fc10:	blx	r2
   3fc14:	ldr	r1, [r4, #16]
   3fc18:	ldr	r0, [r4, #20]
   3fc1c:	sub	r5, r5, r6
   3fc20:	sub	r6, r1, r0
   3fc24:	cmp	r5, r6
   3fc28:	bhi	3fbec <flatcc_json_printer_uint32_vector_field@@Base+0x350>
   3fc2c:	mov	r1, #32
   3fc30:	mov	r2, r5
   3fc34:	bl	14ee4 <memset@plt>
   3fc38:	ldr	r0, [r4, #20]
   3fc3c:	add	r0, r0, r5
   3fc40:	str	r0, [r4, #20]
   3fc44:	add	r1, r0, #1
   3fc48:	str	r1, [r4, #20]
   3fc4c:	mov	r1, #93	; 0x5d
   3fc50:	strb	r1, [r0]
   3fc54:	sub	sp, fp, #28
   3fc58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003fc5c <flatcc_json_printer_uint64_vector_field@@Base>:
   3fc5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fc60:	add	fp, sp, #28
   3fc64:	sub	sp, sp, #4
   3fc68:	mov	r4, r0
   3fc6c:	mov	r0, #4
   3fc70:	add	r0, r0, r2, lsl #1
   3fc74:	ldr	r2, [r1, #8]
   3fc78:	cmp	r0, r2
   3fc7c:	bge	3fc9c <flatcc_json_printer_uint64_vector_field@@Base+0x40>
   3fc80:	ldr	r2, [r1, #4]
   3fc84:	add	r0, r2, r0
   3fc88:	ldrh	r0, [r0]
   3fc8c:	cmp	r0, #0
   3fc90:	ldrne	r2, [r1]
   3fc94:	addsne	r8, r2, r0
   3fc98:	bne	3fca4 <flatcc_json_printer_uint64_vector_field@@Base+0x48>
   3fc9c:	sub	sp, fp, #28
   3fca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3fca4:	ldr	r0, [r1, #16]
   3fca8:	ldr	r2, [fp, #8]
   3fcac:	add	r7, r0, #1
   3fcb0:	cmp	r0, #0
   3fcb4:	str	r7, [r1, #16]
   3fcb8:	beq	3fcd0 <flatcc_json_printer_uint64_vector_field@@Base+0x74>
   3fcbc:	ldr	r0, [r4, #20]
   3fcc0:	add	r1, r0, #1
   3fcc4:	str	r1, [r4, #20]
   3fcc8:	mov	r1, #44	; 0x2c
   3fccc:	strb	r1, [r0]
   3fcd0:	ldr	r0, [r8]
   3fcd4:	mov	r1, r3
   3fcd8:	ldr	r7, [r8, r0]!
   3fcdc:	mov	r0, r4
   3fce0:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   3fce4:	ldr	r1, [r4, #32]
   3fce8:	ldr	r0, [r4, #20]
   3fcec:	cmp	r7, #0
   3fcf0:	add	r1, r1, #1
   3fcf4:	str	r1, [r4, #32]
   3fcf8:	add	r1, r0, #1
   3fcfc:	str	r1, [r4, #20]
   3fd00:	mov	r1, #91	; 0x5b
   3fd04:	strb	r1, [r0]
   3fd08:	beq	3ff3c <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   3fd0c:	ldrb	r0, [r4, #25]
   3fd10:	ldr	r2, [r4, #20]
   3fd14:	cmp	r0, #0
   3fd18:	beq	3fdd4 <flatcc_json_printer_uint64_vector_field@@Base+0x178>
   3fd1c:	add	r0, r2, #1
   3fd20:	str	r0, [r4, #20]
   3fd24:	mov	r0, #10
   3fd28:	strb	r0, [r2]
   3fd2c:	ldr	r0, [r4, #20]
   3fd30:	ldrb	r2, [r4, #25]
   3fd34:	ldr	r3, [r4, #32]
   3fd38:	ldr	r1, [r4, #16]
   3fd3c:	mla	r6, r3, r2, r0
   3fd40:	mul	r5, r3, r2
   3fd44:	cmp	r6, r1
   3fd48:	bls	3fdb8 <flatcc_json_printer_uint64_vector_field@@Base+0x15c>
   3fd4c:	cmp	r0, r1
   3fd50:	bcc	3fd6c <flatcc_json_printer_uint64_vector_field@@Base+0x110>
   3fd54:	ldr	r2, [r4, #44]	; 0x2c
   3fd58:	mov	r0, r4
   3fd5c:	mov	r1, #0
   3fd60:	blx	r2
   3fd64:	ldr	r1, [r4, #16]
   3fd68:	ldr	r0, [r4, #20]
   3fd6c:	sub	r6, r1, r0
   3fd70:	cmp	r6, r5
   3fd74:	bcs	3fdb8 <flatcc_json_printer_uint64_vector_field@@Base+0x15c>
   3fd78:	mov	r1, #32
   3fd7c:	mov	r2, r6
   3fd80:	bl	14ee4 <memset@plt>
   3fd84:	ldr	r0, [r4, #20]
   3fd88:	ldr	r2, [r4, #44]	; 0x2c
   3fd8c:	mov	r1, #0
   3fd90:	add	r0, r0, r6
   3fd94:	str	r0, [r4, #20]
   3fd98:	mov	r0, r4
   3fd9c:	blx	r2
   3fda0:	ldr	r1, [r4, #16]
   3fda4:	ldr	r0, [r4, #20]
   3fda8:	sub	r5, r5, r6
   3fdac:	sub	r6, r1, r0
   3fdb0:	cmp	r5, r6
   3fdb4:	bhi	3fd78 <flatcc_json_printer_uint64_vector_field@@Base+0x11c>
   3fdb8:	mov	r1, #32
   3fdbc:	mov	r2, r5
   3fdc0:	bl	14ee4 <memset@plt>
   3fdc4:	ldr	r0, [r4, #20]
   3fdc8:	add	r2, r0, r5
   3fdcc:	str	r2, [r4, #20]
   3fdd0:	b	3fdf4 <flatcc_json_printer_uint64_vector_field@@Base+0x198>
   3fdd4:	ldr	r0, [r4, #16]
   3fdd8:	cmp	r2, r0
   3fddc:	bcc	3fdf4 <flatcc_json_printer_uint64_vector_field@@Base+0x198>
   3fde0:	ldr	r2, [r4, #44]	; 0x2c
   3fde4:	mov	r0, r4
   3fde8:	mov	r1, #0
   3fdec:	blx	r2
   3fdf0:	ldr	r2, [r4, #20]
   3fdf4:	ldrd	r0, [r8, #4]
   3fdf8:	bl	3bb70 <flatcc_json_printer_uint64@@Base+0x30>
   3fdfc:	ldr	r1, [r4, #20]
   3fe00:	subs	r9, r7, #1
   3fe04:	add	r0, r1, r0
   3fe08:	str	r0, [r4, #20]
   3fe0c:	beq	3ff3c <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   3fe10:	ldr	r0, [r4, #20]
   3fe14:	add	r7, r8, #12
   3fe18:	mov	r8, #44	; 0x2c
   3fe1c:	mov	sl, #10
   3fe20:	b	3fe5c <flatcc_json_printer_uint64_vector_field@@Base+0x200>
   3fe24:	mov	r1, #32
   3fe28:	mov	r2, r5
   3fe2c:	bl	14ee4 <memset@plt>
   3fe30:	ldr	r0, [r4, #20]
   3fe34:	add	r2, r0, r5
   3fe38:	str	r2, [r4, #20]
   3fe3c:	ldrd	r0, [r7]
   3fe40:	bl	3bb70 <flatcc_json_printer_uint64@@Base+0x30>
   3fe44:	ldr	r1, [r4, #20]
   3fe48:	add	r7, r7, #8
   3fe4c:	cmp	r9, #0
   3fe50:	add	r0, r1, r0
   3fe54:	str	r0, [r4, #20]
   3fe58:	beq	3ff3c <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   3fe5c:	add	r1, r0, #1
   3fe60:	sub	r9, r9, #1
   3fe64:	str	r1, [r4, #20]
   3fe68:	strb	r8, [r0]
   3fe6c:	ldrb	r0, [r4, #25]
   3fe70:	ldr	r2, [r4, #20]
   3fe74:	cmp	r0, #0
   3fe78:	beq	3ff18 <flatcc_json_printer_uint64_vector_field@@Base+0x2bc>
   3fe7c:	add	r0, r2, #1
   3fe80:	str	r0, [r4, #20]
   3fe84:	strb	sl, [r2]
   3fe88:	ldr	r0, [r4, #20]
   3fe8c:	ldrb	r2, [r4, #25]
   3fe90:	ldr	r3, [r4, #32]
   3fe94:	ldr	r1, [r4, #16]
   3fe98:	mla	r6, r3, r2, r0
   3fe9c:	mul	r5, r3, r2
   3fea0:	cmp	r6, r1
   3fea4:	bls	3fe24 <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   3fea8:	cmp	r0, r1
   3feac:	bcc	3fec8 <flatcc_json_printer_uint64_vector_field@@Base+0x26c>
   3feb0:	ldr	r2, [r4, #44]	; 0x2c
   3feb4:	mov	r0, r4
   3feb8:	mov	r1, #0
   3febc:	blx	r2
   3fec0:	ldr	r1, [r4, #16]
   3fec4:	ldr	r0, [r4, #20]
   3fec8:	sub	r6, r1, r0
   3fecc:	cmp	r6, r5
   3fed0:	bcs	3fe24 <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   3fed4:	mov	r1, #32
   3fed8:	mov	r2, r6
   3fedc:	bl	14ee4 <memset@plt>
   3fee0:	ldr	r0, [r4, #20]
   3fee4:	ldr	r2, [r4, #44]	; 0x2c
   3fee8:	mov	r1, #0
   3feec:	add	r0, r0, r6
   3fef0:	str	r0, [r4, #20]
   3fef4:	mov	r0, r4
   3fef8:	blx	r2
   3fefc:	ldr	r1, [r4, #16]
   3ff00:	ldr	r0, [r4, #20]
   3ff04:	sub	r5, r5, r6
   3ff08:	sub	r6, r1, r0
   3ff0c:	cmp	r5, r6
   3ff10:	bhi	3fed4 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   3ff14:	b	3fe24 <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   3ff18:	ldr	r0, [r4, #16]
   3ff1c:	cmp	r2, r0
   3ff20:	bcc	3fe3c <flatcc_json_printer_uint64_vector_field@@Base+0x1e0>
   3ff24:	ldr	r2, [r4, #44]	; 0x2c
   3ff28:	mov	r0, r4
   3ff2c:	mov	r1, #0
   3ff30:	blx	r2
   3ff34:	ldr	r2, [r4, #20]
   3ff38:	b	3fe3c <flatcc_json_printer_uint64_vector_field@@Base+0x1e0>
   3ff3c:	ldrb	r1, [r4, #25]
   3ff40:	ldr	r0, [r4, #20]
   3ff44:	cmp	r1, #0
   3ff48:	beq	40008 <flatcc_json_printer_uint64_vector_field@@Base+0x3ac>
   3ff4c:	add	r1, r0, #1
   3ff50:	str	r1, [r4, #20]
   3ff54:	mov	r1, #10
   3ff58:	strb	r1, [r0]
   3ff5c:	ldr	r0, [r4, #32]
   3ff60:	sub	r2, r0, #1
   3ff64:	str	r2, [r4, #32]
   3ff68:	ldrb	r3, [r4, #25]
   3ff6c:	ldr	r0, [r4, #20]
   3ff70:	ldr	r1, [r4, #16]
   3ff74:	mla	r7, r2, r3, r0
   3ff78:	mul	r5, r2, r3
   3ff7c:	cmp	r7, r1
   3ff80:	bls	3fff0 <flatcc_json_printer_uint64_vector_field@@Base+0x394>
   3ff84:	cmp	r0, r1
   3ff88:	bcc	3ffa4 <flatcc_json_printer_uint64_vector_field@@Base+0x348>
   3ff8c:	ldr	r2, [r4, #44]	; 0x2c
   3ff90:	mov	r0, r4
   3ff94:	mov	r1, #0
   3ff98:	blx	r2
   3ff9c:	ldr	r1, [r4, #16]
   3ffa0:	ldr	r0, [r4, #20]
   3ffa4:	sub	r6, r1, r0
   3ffa8:	cmp	r6, r5
   3ffac:	bcs	3fff0 <flatcc_json_printer_uint64_vector_field@@Base+0x394>
   3ffb0:	mov	r1, #32
   3ffb4:	mov	r2, r6
   3ffb8:	bl	14ee4 <memset@plt>
   3ffbc:	ldr	r0, [r4, #20]
   3ffc0:	ldr	r2, [r4, #44]	; 0x2c
   3ffc4:	mov	r1, #0
   3ffc8:	add	r0, r0, r6
   3ffcc:	str	r0, [r4, #20]
   3ffd0:	mov	r0, r4
   3ffd4:	blx	r2
   3ffd8:	ldr	r1, [r4, #16]
   3ffdc:	ldr	r0, [r4, #20]
   3ffe0:	sub	r5, r5, r6
   3ffe4:	sub	r6, r1, r0
   3ffe8:	cmp	r5, r6
   3ffec:	bhi	3ffb0 <flatcc_json_printer_uint64_vector_field@@Base+0x354>
   3fff0:	mov	r1, #32
   3fff4:	mov	r2, r5
   3fff8:	bl	14ee4 <memset@plt>
   3fffc:	ldr	r0, [r4, #20]
   40000:	add	r0, r0, r5
   40004:	str	r0, [r4, #20]
   40008:	add	r1, r0, #1
   4000c:	str	r1, [r4, #20]
   40010:	mov	r1, #93	; 0x5d
   40014:	strb	r1, [r0]
   40018:	sub	sp, fp, #28
   4001c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040020 <flatcc_json_printer_int8_vector_field@@Base>:
   40020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40024:	add	fp, sp, #28
   40028:	sub	sp, sp, #4
   4002c:	mov	r4, r0
   40030:	mov	r0, #4
   40034:	add	r0, r0, r2, lsl #1
   40038:	ldr	r2, [r1, #8]
   4003c:	cmp	r0, r2
   40040:	bge	40060 <flatcc_json_printer_int8_vector_field@@Base+0x40>
   40044:	ldr	r2, [r1, #4]
   40048:	add	r0, r2, r0
   4004c:	ldrh	r0, [r0]
   40050:	cmp	r0, #0
   40054:	ldrne	r2, [r1]
   40058:	addsne	r9, r2, r0
   4005c:	bne	40068 <flatcc_json_printer_int8_vector_field@@Base+0x48>
   40060:	sub	sp, fp, #28
   40064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40068:	ldr	r0, [r1, #16]
   4006c:	ldr	r2, [fp, #8]
   40070:	add	r7, r0, #1
   40074:	cmp	r0, #0
   40078:	str	r7, [r1, #16]
   4007c:	beq	40094 <flatcc_json_printer_int8_vector_field@@Base+0x74>
   40080:	ldr	r0, [r4, #20]
   40084:	add	r1, r0, #1
   40088:	str	r1, [r4, #20]
   4008c:	mov	r1, #44	; 0x2c
   40090:	strb	r1, [r0]
   40094:	ldr	r0, [r9]
   40098:	mov	r1, r3
   4009c:	ldr	r8, [r9, r0]!
   400a0:	mov	r0, r4
   400a4:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   400a8:	ldr	r1, [r4, #32]
   400ac:	ldr	r0, [r4, #20]
   400b0:	cmp	r8, #0
   400b4:	add	r1, r1, #1
   400b8:	str	r1, [r4, #32]
   400bc:	add	r1, r0, #1
   400c0:	str	r1, [r4, #20]
   400c4:	mov	r1, #91	; 0x5b
   400c8:	strb	r1, [r0]
   400cc:	beq	40484 <flatcc_json_printer_int8_vector_field@@Base+0x464>
   400d0:	ldrb	r1, [r4, #25]
   400d4:	ldr	r0, [r4, #20]
   400d8:	cmp	r1, #0
   400dc:	beq	40198 <flatcc_json_printer_int8_vector_field@@Base+0x178>
   400e0:	add	r1, r0, #1
   400e4:	str	r1, [r4, #20]
   400e8:	mov	r1, #10
   400ec:	strb	r1, [r0]
   400f0:	ldr	r0, [r4, #20]
   400f4:	ldrb	r2, [r4, #25]
   400f8:	ldr	r3, [r4, #32]
   400fc:	ldr	r1, [r4, #16]
   40100:	mla	r7, r3, r2, r0
   40104:	mul	r5, r3, r2
   40108:	cmp	r7, r1
   4010c:	bls	4017c <flatcc_json_printer_int8_vector_field@@Base+0x15c>
   40110:	cmp	r0, r1
   40114:	bcc	40130 <flatcc_json_printer_int8_vector_field@@Base+0x110>
   40118:	ldr	r2, [r4, #44]	; 0x2c
   4011c:	mov	r0, r4
   40120:	mov	r1, #0
   40124:	blx	r2
   40128:	ldr	r1, [r4, #16]
   4012c:	ldr	r0, [r4, #20]
   40130:	sub	r6, r1, r0
   40134:	cmp	r6, r5
   40138:	bcs	4017c <flatcc_json_printer_int8_vector_field@@Base+0x15c>
   4013c:	mov	r1, #32
   40140:	mov	r2, r6
   40144:	bl	14ee4 <memset@plt>
   40148:	ldr	r0, [r4, #20]
   4014c:	ldr	r2, [r4, #44]	; 0x2c
   40150:	mov	r1, #0
   40154:	add	r0, r0, r6
   40158:	str	r0, [r4, #20]
   4015c:	mov	r0, r4
   40160:	blx	r2
   40164:	ldr	r1, [r4, #16]
   40168:	ldr	r0, [r4, #20]
   4016c:	sub	r5, r5, r6
   40170:	sub	r6, r1, r0
   40174:	cmp	r5, r6
   40178:	bhi	4013c <flatcc_json_printer_int8_vector_field@@Base+0x11c>
   4017c:	mov	r1, #32
   40180:	mov	r2, r5
   40184:	bl	14ee4 <memset@plt>
   40188:	ldr	r0, [r4, #20]
   4018c:	add	r0, r0, r5
   40190:	str	r0, [r4, #20]
   40194:	b	401b8 <flatcc_json_printer_int8_vector_field@@Base+0x198>
   40198:	ldr	r1, [r4, #16]
   4019c:	cmp	r0, r1
   401a0:	bcc	401b8 <flatcc_json_printer_int8_vector_field@@Base+0x198>
   401a4:	ldr	r2, [r4, #44]	; 0x2c
   401a8:	mov	r0, r4
   401ac:	mov	r1, #0
   401b0:	blx	r2
   401b4:	ldr	r0, [r4, #20]
   401b8:	ldrb	r1, [r9, #4]
   401bc:	sxtb	r2, r1
   401c0:	lsr	r1, r1, #7
   401c4:	cmn	r2, #1
   401c8:	movle	r3, #45	; 0x2d
   401cc:	rsble	r2, r2, #0
   401d0:	strble	r3, [r0], #1
   401d4:	uxtb	r3, r2
   401d8:	cmp	r3, #100	; 0x64
   401dc:	bcc	4022c <flatcc_json_printer_int8_vector_field@@Base+0x20c>
   401e0:	mov	r2, #0
   401e4:	strb	r2, [r0, #3]
   401e8:	movw	r2, #34079	; 0x851f
   401ec:	movt	r2, #20971	; 0x51eb
   401f0:	umull	r2, r7, r3, r2
   401f4:	mov	r2, #48	; 0x30
   401f8:	orr	r2, r2, r7, lsr #5
   401fc:	strb	r2, [r0]
   40200:	lsr	r2, r7, #5
   40204:	mov	r7, #100	; 0x64
   40208:	mls	r2, r2, r7, r3
   4020c:	ldr	r3, [pc, #852]	; 40568 <flatcc_json_printer_int8_vector_field@@Base+0x548>
   40210:	uxtb	r2, r2
   40214:	add	r3, pc, r3
   40218:	add	r2, r3, r2, lsl #1
   4021c:	ldrh	r2, [r2]
   40220:	strh	r2, [r0, #1]
   40224:	mov	r0, #3
   40228:	b	40284 <flatcc_json_printer_int8_vector_field@@Base+0x264>
   4022c:	cmp	r3, #10
   40230:	bcc	40270 <flatcc_json_printer_int8_vector_field@@Base+0x250>
   40234:	mov	r2, #0
   40238:	strb	r2, [r0, #2]
   4023c:	movw	r2, #34079	; 0x851f
   40240:	movt	r2, #20971	; 0x51eb
   40244:	umull	r2, r7, r3, r2
   40248:	lsr	r2, r7, #5
   4024c:	mov	r7, #100	; 0x64
   40250:	mls	r2, r2, r7, r3
   40254:	ldr	r3, [pc, #784]	; 4056c <flatcc_json_printer_int8_vector_field@@Base+0x54c>
   40258:	add	r3, pc, r3
   4025c:	add	r2, r3, r2, lsl #1
   40260:	ldrh	r2, [r2]
   40264:	strh	r2, [r0]
   40268:	mov	r0, #2
   4026c:	b	40284 <flatcc_json_printer_int8_vector_field@@Base+0x264>
   40270:	mov	r3, #0
   40274:	add	r2, r2, #48	; 0x30
   40278:	strb	r3, [r0, #1]
   4027c:	strb	r2, [r0]
   40280:	mov	r0, #1
   40284:	add	r0, r0, r1
   40288:	ldr	r1, [r4, #20]
   4028c:	subs	r8, r8, #1
   40290:	add	r0, r1, r0
   40294:	str	r0, [r4, #20]
   40298:	beq	40484 <flatcc_json_printer_int8_vector_field@@Base+0x464>
   4029c:	ldr	r0, [r4, #20]
   402a0:	add	r7, r9, #5
   402a4:	mov	r9, #44	; 0x2c
   402a8:	mov	sl, #0
   402ac:	b	40310 <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
   402b0:	movw	r2, #34079	; 0x851f
   402b4:	strb	sl, [r0, #3]
   402b8:	movt	r2, #20971	; 0x51eb
   402bc:	umull	r2, r6, r3, r2
   402c0:	mov	r2, #48	; 0x30
   402c4:	orr	r2, r2, r6, lsr #5
   402c8:	strb	r2, [r0]
   402cc:	lsr	r2, r6, #5
   402d0:	mov	r6, #100	; 0x64
   402d4:	mls	r2, r2, r6, r3
   402d8:	ldr	r3, [pc, #656]	; 40570 <flatcc_json_printer_int8_vector_field@@Base+0x550>
   402dc:	uxtb	r2, r2
   402e0:	add	r3, pc, r3
   402e4:	add	r2, r3, r2, lsl #1
   402e8:	ldrh	r2, [r2]
   402ec:	strh	r2, [r0, #1]
   402f0:	mov	r0, #3
   402f4:	add	r0, r0, r1
   402f8:	ldr	r1, [r4, #20]
   402fc:	add	r7, r7, #1
   40300:	cmp	r8, #0
   40304:	add	r0, r1, r0
   40308:	str	r0, [r4, #20]
   4030c:	beq	40484 <flatcc_json_printer_int8_vector_field@@Base+0x464>
   40310:	add	r1, r0, #1
   40314:	str	r1, [r4, #20]
   40318:	strb	r9, [r0]
   4031c:	ldrb	r1, [r4, #25]
   40320:	ldr	r0, [r4, #20]
   40324:	cmp	r1, #0
   40328:	beq	403e4 <flatcc_json_printer_int8_vector_field@@Base+0x3c4>
   4032c:	add	r1, r0, #1
   40330:	str	r1, [r4, #20]
   40334:	mov	r1, #10
   40338:	strb	r1, [r0]
   4033c:	ldr	r0, [r4, #20]
   40340:	ldrb	r2, [r4, #25]
   40344:	ldr	r3, [r4, #32]
   40348:	ldr	r1, [r4, #16]
   4034c:	mla	r6, r3, r2, r0
   40350:	mul	r5, r3, r2
   40354:	cmp	r6, r1
   40358:	bls	403c8 <flatcc_json_printer_int8_vector_field@@Base+0x3a8>
   4035c:	cmp	r0, r1
   40360:	bcc	4037c <flatcc_json_printer_int8_vector_field@@Base+0x35c>
   40364:	ldr	r2, [r4, #44]	; 0x2c
   40368:	mov	r0, r4
   4036c:	mov	r1, #0
   40370:	blx	r2
   40374:	ldr	r1, [r4, #16]
   40378:	ldr	r0, [r4, #20]
   4037c:	sub	r6, r1, r0
   40380:	cmp	r6, r5
   40384:	bcs	403c8 <flatcc_json_printer_int8_vector_field@@Base+0x3a8>
   40388:	mov	r1, #32
   4038c:	mov	r2, r6
   40390:	bl	14ee4 <memset@plt>
   40394:	ldr	r0, [r4, #20]
   40398:	ldr	r2, [r4, #44]	; 0x2c
   4039c:	mov	r1, #0
   403a0:	add	r0, r0, r6
   403a4:	str	r0, [r4, #20]
   403a8:	mov	r0, r4
   403ac:	blx	r2
   403b0:	ldr	r1, [r4, #16]
   403b4:	ldr	r0, [r4, #20]
   403b8:	sub	r5, r5, r6
   403bc:	sub	r6, r1, r0
   403c0:	cmp	r5, r6
   403c4:	bhi	40388 <flatcc_json_printer_int8_vector_field@@Base+0x368>
   403c8:	mov	r1, #32
   403cc:	mov	r2, r5
   403d0:	bl	14ee4 <memset@plt>
   403d4:	ldr	r0, [r4, #20]
   403d8:	add	r0, r0, r5
   403dc:	str	r0, [r4, #20]
   403e0:	b	40404 <flatcc_json_printer_int8_vector_field@@Base+0x3e4>
   403e4:	ldr	r1, [r4, #16]
   403e8:	cmp	r0, r1
   403ec:	bcc	40404 <flatcc_json_printer_int8_vector_field@@Base+0x3e4>
   403f0:	ldr	r2, [r4, #44]	; 0x2c
   403f4:	mov	r0, r4
   403f8:	mov	r1, #0
   403fc:	blx	r2
   40400:	ldr	r0, [r4, #20]
   40404:	ldrb	r1, [r7]
   40408:	sub	r8, r8, #1
   4040c:	sxtb	r2, r1
   40410:	lsr	r1, r1, #7
   40414:	cmn	r2, #1
   40418:	movle	r3, #45	; 0x2d
   4041c:	rsble	r2, r2, #0
   40420:	strble	r3, [r0], #1
   40424:	uxtb	r3, r2
   40428:	cmp	r3, #100	; 0x64
   4042c:	bcs	402b0 <flatcc_json_printer_int8_vector_field@@Base+0x290>
   40430:	cmp	r3, #10
   40434:	bcc	40470 <flatcc_json_printer_int8_vector_field@@Base+0x450>
   40438:	movw	r2, #34079	; 0x851f
   4043c:	strb	sl, [r0, #2]
   40440:	movt	r2, #20971	; 0x51eb
   40444:	umull	r2, r6, r3, r2
   40448:	lsr	r2, r6, #5
   4044c:	mov	r6, #100	; 0x64
   40450:	mls	r2, r2, r6, r3
   40454:	ldr	r3, [pc, #280]	; 40574 <flatcc_json_printer_int8_vector_field@@Base+0x554>
   40458:	add	r3, pc, r3
   4045c:	add	r2, r3, r2, lsl #1
   40460:	ldrh	r2, [r2]
   40464:	strh	r2, [r0]
   40468:	mov	r0, #2
   4046c:	b	402f4 <flatcc_json_printer_int8_vector_field@@Base+0x2d4>
   40470:	add	r2, r2, #48	; 0x30
   40474:	strb	sl, [r0, #1]
   40478:	strb	r2, [r0]
   4047c:	mov	r0, #1
   40480:	b	402f4 <flatcc_json_printer_int8_vector_field@@Base+0x2d4>
   40484:	ldrb	r1, [r4, #25]
   40488:	ldr	r0, [r4, #20]
   4048c:	cmp	r1, #0
   40490:	beq	40550 <flatcc_json_printer_int8_vector_field@@Base+0x530>
   40494:	add	r1, r0, #1
   40498:	str	r1, [r4, #20]
   4049c:	mov	r1, #10
   404a0:	strb	r1, [r0]
   404a4:	ldr	r0, [r4, #32]
   404a8:	sub	r2, r0, #1
   404ac:	str	r2, [r4, #32]
   404b0:	ldrb	r3, [r4, #25]
   404b4:	ldr	r0, [r4, #20]
   404b8:	ldr	r1, [r4, #16]
   404bc:	mla	r7, r2, r3, r0
   404c0:	mul	r5, r2, r3
   404c4:	cmp	r7, r1
   404c8:	bls	40538 <flatcc_json_printer_int8_vector_field@@Base+0x518>
   404cc:	cmp	r0, r1
   404d0:	bcc	404ec <flatcc_json_printer_int8_vector_field@@Base+0x4cc>
   404d4:	ldr	r2, [r4, #44]	; 0x2c
   404d8:	mov	r0, r4
   404dc:	mov	r1, #0
   404e0:	blx	r2
   404e4:	ldr	r1, [r4, #16]
   404e8:	ldr	r0, [r4, #20]
   404ec:	sub	r6, r1, r0
   404f0:	cmp	r6, r5
   404f4:	bcs	40538 <flatcc_json_printer_int8_vector_field@@Base+0x518>
   404f8:	mov	r1, #32
   404fc:	mov	r2, r6
   40500:	bl	14ee4 <memset@plt>
   40504:	ldr	r0, [r4, #20]
   40508:	ldr	r2, [r4, #44]	; 0x2c
   4050c:	mov	r1, #0
   40510:	add	r0, r0, r6
   40514:	str	r0, [r4, #20]
   40518:	mov	r0, r4
   4051c:	blx	r2
   40520:	ldr	r1, [r4, #16]
   40524:	ldr	r0, [r4, #20]
   40528:	sub	r5, r5, r6
   4052c:	sub	r6, r1, r0
   40530:	cmp	r5, r6
   40534:	bhi	404f8 <flatcc_json_printer_int8_vector_field@@Base+0x4d8>
   40538:	mov	r1, #32
   4053c:	mov	r2, r5
   40540:	bl	14ee4 <memset@plt>
   40544:	ldr	r0, [r4, #20]
   40548:	add	r0, r0, r5
   4054c:	str	r0, [r4, #20]
   40550:	add	r1, r0, #1
   40554:	str	r1, [r4, #20]
   40558:	mov	r1, #93	; 0x5d
   4055c:	strb	r1, [r0]
   40560:	sub	sp, fp, #28
   40564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40568:	ldrdeq	sp, [r0], -r3
   4056c:	andeq	sp, r0, pc, lsl #25
   40570:	andeq	sp, r0, r7, lsl #24
   40574:	andeq	sp, r0, pc, lsl #21

00040578 <flatcc_json_printer_int16_vector_field@@Base>:
   40578:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4057c:	add	fp, sp, #28
   40580:	sub	sp, sp, #4
   40584:	mov	r4, r0
   40588:	mov	r0, #4
   4058c:	add	r0, r0, r2, lsl #1
   40590:	ldr	r2, [r1, #8]
   40594:	cmp	r0, r2
   40598:	bge	405b8 <flatcc_json_printer_int16_vector_field@@Base+0x40>
   4059c:	ldr	r2, [r1, #4]
   405a0:	add	r0, r2, r0
   405a4:	ldrh	r0, [r0]
   405a8:	cmp	r0, #0
   405ac:	ldrne	r2, [r1]
   405b0:	addsne	r8, r2, r0
   405b4:	bne	405c0 <flatcc_json_printer_int16_vector_field@@Base+0x48>
   405b8:	sub	sp, fp, #28
   405bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   405c0:	ldr	r0, [r1, #16]
   405c4:	ldr	r2, [fp, #8]
   405c8:	add	r7, r0, #1
   405cc:	cmp	r0, #0
   405d0:	str	r7, [r1, #16]
   405d4:	beq	405ec <flatcc_json_printer_int16_vector_field@@Base+0x74>
   405d8:	ldr	r0, [r4, #20]
   405dc:	add	r1, r0, #1
   405e0:	str	r1, [r4, #20]
   405e4:	mov	r1, #44	; 0x2c
   405e8:	strb	r1, [r0]
   405ec:	ldr	r0, [r8]
   405f0:	mov	r1, r3
   405f4:	ldr	r7, [r8, r0]!
   405f8:	mov	r0, r4
   405fc:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   40600:	ldr	r1, [r4, #32]
   40604:	ldr	r0, [r4, #20]
   40608:	cmp	r7, #0
   4060c:	add	r1, r1, #1
   40610:	str	r1, [r4, #32]
   40614:	add	r1, r0, #1
   40618:	str	r1, [r4, #20]
   4061c:	mov	r1, #91	; 0x5b
   40620:	strb	r1, [r0]
   40624:	beq	40898 <flatcc_json_printer_int16_vector_field@@Base+0x320>
   40628:	ldrb	r0, [r4, #25]
   4062c:	ldr	r1, [r4, #20]
   40630:	cmp	r0, #0
   40634:	beq	406f0 <flatcc_json_printer_int16_vector_field@@Base+0x178>
   40638:	add	r0, r1, #1
   4063c:	str	r0, [r4, #20]
   40640:	mov	r0, #10
   40644:	strb	r0, [r1]
   40648:	ldr	r0, [r4, #20]
   4064c:	ldrb	r2, [r4, #25]
   40650:	ldr	r3, [r4, #32]
   40654:	ldr	r1, [r4, #16]
   40658:	mla	r6, r3, r2, r0
   4065c:	mul	r5, r3, r2
   40660:	cmp	r6, r1
   40664:	bls	406d4 <flatcc_json_printer_int16_vector_field@@Base+0x15c>
   40668:	cmp	r0, r1
   4066c:	bcc	40688 <flatcc_json_printer_int16_vector_field@@Base+0x110>
   40670:	ldr	r2, [r4, #44]	; 0x2c
   40674:	mov	r0, r4
   40678:	mov	r1, #0
   4067c:	blx	r2
   40680:	ldr	r1, [r4, #16]
   40684:	ldr	r0, [r4, #20]
   40688:	sub	r6, r1, r0
   4068c:	cmp	r6, r5
   40690:	bcs	406d4 <flatcc_json_printer_int16_vector_field@@Base+0x15c>
   40694:	mov	r1, #32
   40698:	mov	r2, r6
   4069c:	bl	14ee4 <memset@plt>
   406a0:	ldr	r0, [r4, #20]
   406a4:	ldr	r2, [r4, #44]	; 0x2c
   406a8:	mov	r1, #0
   406ac:	add	r0, r0, r6
   406b0:	str	r0, [r4, #20]
   406b4:	mov	r0, r4
   406b8:	blx	r2
   406bc:	ldr	r1, [r4, #16]
   406c0:	ldr	r0, [r4, #20]
   406c4:	sub	r5, r5, r6
   406c8:	sub	r6, r1, r0
   406cc:	cmp	r5, r6
   406d0:	bhi	40694 <flatcc_json_printer_int16_vector_field@@Base+0x11c>
   406d4:	mov	r1, #32
   406d8:	mov	r2, r5
   406dc:	bl	14ee4 <memset@plt>
   406e0:	ldr	r0, [r4, #20]
   406e4:	add	r1, r0, r5
   406e8:	str	r1, [r4, #20]
   406ec:	b	40710 <flatcc_json_printer_int16_vector_field@@Base+0x198>
   406f0:	ldr	r0, [r4, #16]
   406f4:	cmp	r1, r0
   406f8:	bcc	40710 <flatcc_json_printer_int16_vector_field@@Base+0x198>
   406fc:	ldr	r2, [r4, #44]	; 0x2c
   40700:	mov	r0, r4
   40704:	mov	r1, #0
   40708:	blx	r2
   4070c:	ldr	r1, [r4, #20]
   40710:	ldrh	r0, [r8, #4]
   40714:	lsr	r5, r0, #15
   40718:	sxth	r0, r0
   4071c:	cmn	r0, #1
   40720:	rsble	r0, r0, #0
   40724:	movle	r2, #45	; 0x2d
   40728:	uxth	r0, r0
   4072c:	strble	r2, [r1], #1
   40730:	bl	3b670 <flatcc_json_printer_uint16@@Base+0x2c>
   40734:	ldr	r1, [r4, #20]
   40738:	add	r0, r0, r5
   4073c:	subs	r9, r7, #1
   40740:	add	r0, r1, r0
   40744:	str	r0, [r4, #20]
   40748:	beq	40898 <flatcc_json_printer_int16_vector_field@@Base+0x320>
   4074c:	ldr	r0, [r4, #20]
   40750:	add	r7, r8, #6
   40754:	mov	r8, #44	; 0x2c
   40758:	mov	sl, #10
   4075c:	b	407bc <flatcc_json_printer_int16_vector_field@@Base+0x244>
   40760:	mov	r1, #32
   40764:	mov	r2, r5
   40768:	bl	14ee4 <memset@plt>
   4076c:	ldr	r0, [r4, #20]
   40770:	add	r1, r0, r5
   40774:	str	r1, [r4, #20]
   40778:	ldrh	r0, [r7]
   4077c:	sub	r9, r9, #1
   40780:	lsr	r5, r0, #15
   40784:	sxth	r0, r0
   40788:	cmn	r0, #1
   4078c:	rsble	r0, r0, #0
   40790:	movle	r2, #45	; 0x2d
   40794:	uxth	r0, r0
   40798:	strble	r2, [r1], #1
   4079c:	bl	3b670 <flatcc_json_printer_uint16@@Base+0x2c>
   407a0:	ldr	r1, [r4, #20]
   407a4:	add	r0, r0, r5
   407a8:	add	r7, r7, #2
   407ac:	cmp	r9, #0
   407b0:	add	r0, r1, r0
   407b4:	str	r0, [r4, #20]
   407b8:	beq	40898 <flatcc_json_printer_int16_vector_field@@Base+0x320>
   407bc:	add	r1, r0, #1
   407c0:	str	r1, [r4, #20]
   407c4:	strb	r8, [r0]
   407c8:	ldrb	r0, [r4, #25]
   407cc:	ldr	r1, [r4, #20]
   407d0:	cmp	r0, #0
   407d4:	beq	40874 <flatcc_json_printer_int16_vector_field@@Base+0x2fc>
   407d8:	add	r0, r1, #1
   407dc:	str	r0, [r4, #20]
   407e0:	strb	sl, [r1]
   407e4:	ldr	r0, [r4, #20]
   407e8:	ldrb	r2, [r4, #25]
   407ec:	ldr	r3, [r4, #32]
   407f0:	ldr	r1, [r4, #16]
   407f4:	mla	r6, r3, r2, r0
   407f8:	mul	r5, r3, r2
   407fc:	cmp	r6, r1
   40800:	bls	40760 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   40804:	cmp	r0, r1
   40808:	bcc	40824 <flatcc_json_printer_int16_vector_field@@Base+0x2ac>
   4080c:	ldr	r2, [r4, #44]	; 0x2c
   40810:	mov	r0, r4
   40814:	mov	r1, #0
   40818:	blx	r2
   4081c:	ldr	r1, [r4, #16]
   40820:	ldr	r0, [r4, #20]
   40824:	sub	r6, r1, r0
   40828:	cmp	r6, r5
   4082c:	bcs	40760 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   40830:	mov	r1, #32
   40834:	mov	r2, r6
   40838:	bl	14ee4 <memset@plt>
   4083c:	ldr	r0, [r4, #20]
   40840:	ldr	r2, [r4, #44]	; 0x2c
   40844:	mov	r1, #0
   40848:	add	r0, r0, r6
   4084c:	str	r0, [r4, #20]
   40850:	mov	r0, r4
   40854:	blx	r2
   40858:	ldr	r1, [r4, #16]
   4085c:	ldr	r0, [r4, #20]
   40860:	sub	r5, r5, r6
   40864:	sub	r6, r1, r0
   40868:	cmp	r5, r6
   4086c:	bhi	40830 <flatcc_json_printer_int16_vector_field@@Base+0x2b8>
   40870:	b	40760 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   40874:	ldr	r0, [r4, #16]
   40878:	cmp	r1, r0
   4087c:	bcc	40778 <flatcc_json_printer_int16_vector_field@@Base+0x200>
   40880:	ldr	r2, [r4, #44]	; 0x2c
   40884:	mov	r0, r4
   40888:	mov	r1, #0
   4088c:	blx	r2
   40890:	ldr	r1, [r4, #20]
   40894:	b	40778 <flatcc_json_printer_int16_vector_field@@Base+0x200>
   40898:	ldrb	r1, [r4, #25]
   4089c:	ldr	r0, [r4, #20]
   408a0:	cmp	r1, #0
   408a4:	beq	40964 <flatcc_json_printer_int16_vector_field@@Base+0x3ec>
   408a8:	add	r1, r0, #1
   408ac:	str	r1, [r4, #20]
   408b0:	mov	r1, #10
   408b4:	strb	r1, [r0]
   408b8:	ldr	r0, [r4, #32]
   408bc:	sub	r2, r0, #1
   408c0:	str	r2, [r4, #32]
   408c4:	ldrb	r3, [r4, #25]
   408c8:	ldr	r0, [r4, #20]
   408cc:	ldr	r1, [r4, #16]
   408d0:	mla	r7, r2, r3, r0
   408d4:	mul	r5, r2, r3
   408d8:	cmp	r7, r1
   408dc:	bls	4094c <flatcc_json_printer_int16_vector_field@@Base+0x3d4>
   408e0:	cmp	r0, r1
   408e4:	bcc	40900 <flatcc_json_printer_int16_vector_field@@Base+0x388>
   408e8:	ldr	r2, [r4, #44]	; 0x2c
   408ec:	mov	r0, r4
   408f0:	mov	r1, #0
   408f4:	blx	r2
   408f8:	ldr	r1, [r4, #16]
   408fc:	ldr	r0, [r4, #20]
   40900:	sub	r6, r1, r0
   40904:	cmp	r6, r5
   40908:	bcs	4094c <flatcc_json_printer_int16_vector_field@@Base+0x3d4>
   4090c:	mov	r1, #32
   40910:	mov	r2, r6
   40914:	bl	14ee4 <memset@plt>
   40918:	ldr	r0, [r4, #20]
   4091c:	ldr	r2, [r4, #44]	; 0x2c
   40920:	mov	r1, #0
   40924:	add	r0, r0, r6
   40928:	str	r0, [r4, #20]
   4092c:	mov	r0, r4
   40930:	blx	r2
   40934:	ldr	r1, [r4, #16]
   40938:	ldr	r0, [r4, #20]
   4093c:	sub	r5, r5, r6
   40940:	sub	r6, r1, r0
   40944:	cmp	r5, r6
   40948:	bhi	4090c <flatcc_json_printer_int16_vector_field@@Base+0x394>
   4094c:	mov	r1, #32
   40950:	mov	r2, r5
   40954:	bl	14ee4 <memset@plt>
   40958:	ldr	r0, [r4, #20]
   4095c:	add	r0, r0, r5
   40960:	str	r0, [r4, #20]
   40964:	add	r1, r0, #1
   40968:	str	r1, [r4, #20]
   4096c:	mov	r1, #93	; 0x5d
   40970:	strb	r1, [r0]
   40974:	sub	sp, fp, #28
   40978:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004097c <flatcc_json_printer_int32_vector_field@@Base>:
   4097c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40980:	add	fp, sp, #28
   40984:	sub	sp, sp, #4
   40988:	mov	r4, r0
   4098c:	mov	r0, #4
   40990:	add	r0, r0, r2, lsl #1
   40994:	ldr	r2, [r1, #8]
   40998:	cmp	r0, r2
   4099c:	bge	409bc <flatcc_json_printer_int32_vector_field@@Base+0x40>
   409a0:	ldr	r2, [r1, #4]
   409a4:	add	r0, r2, r0
   409a8:	ldrh	r0, [r0]
   409ac:	cmp	r0, #0
   409b0:	ldrne	r2, [r1]
   409b4:	addsne	r8, r2, r0
   409b8:	bne	409c4 <flatcc_json_printer_int32_vector_field@@Base+0x48>
   409bc:	sub	sp, fp, #28
   409c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   409c4:	ldr	r0, [r1, #16]
   409c8:	ldr	r2, [fp, #8]
   409cc:	add	r7, r0, #1
   409d0:	cmp	r0, #0
   409d4:	str	r7, [r1, #16]
   409d8:	beq	409f0 <flatcc_json_printer_int32_vector_field@@Base+0x74>
   409dc:	ldr	r0, [r4, #20]
   409e0:	add	r1, r0, #1
   409e4:	str	r1, [r4, #20]
   409e8:	mov	r1, #44	; 0x2c
   409ec:	strb	r1, [r0]
   409f0:	ldr	r0, [r8]
   409f4:	mov	r1, r3
   409f8:	ldr	r7, [r8, r0]!
   409fc:	mov	r0, r4
   40a00:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   40a04:	ldr	r1, [r4, #32]
   40a08:	ldr	r0, [r4, #20]
   40a0c:	cmp	r7, #0
   40a10:	add	r1, r1, #1
   40a14:	str	r1, [r4, #32]
   40a18:	add	r1, r0, #1
   40a1c:	str	r1, [r4, #20]
   40a20:	mov	r1, #91	; 0x5b
   40a24:	strb	r1, [r0]
   40a28:	beq	40c8c <flatcc_json_printer_int32_vector_field@@Base+0x310>
   40a2c:	ldrb	r0, [r4, #25]
   40a30:	ldr	r1, [r4, #20]
   40a34:	cmp	r0, #0
   40a38:	beq	40af4 <flatcc_json_printer_int32_vector_field@@Base+0x178>
   40a3c:	add	r0, r1, #1
   40a40:	str	r0, [r4, #20]
   40a44:	mov	r0, #10
   40a48:	strb	r0, [r1]
   40a4c:	ldr	r0, [r4, #20]
   40a50:	ldrb	r2, [r4, #25]
   40a54:	ldr	r3, [r4, #32]
   40a58:	ldr	r1, [r4, #16]
   40a5c:	mla	r6, r3, r2, r0
   40a60:	mul	r5, r3, r2
   40a64:	cmp	r6, r1
   40a68:	bls	40ad8 <flatcc_json_printer_int32_vector_field@@Base+0x15c>
   40a6c:	cmp	r0, r1
   40a70:	bcc	40a8c <flatcc_json_printer_int32_vector_field@@Base+0x110>
   40a74:	ldr	r2, [r4, #44]	; 0x2c
   40a78:	mov	r0, r4
   40a7c:	mov	r1, #0
   40a80:	blx	r2
   40a84:	ldr	r1, [r4, #16]
   40a88:	ldr	r0, [r4, #20]
   40a8c:	sub	r6, r1, r0
   40a90:	cmp	r6, r5
   40a94:	bcs	40ad8 <flatcc_json_printer_int32_vector_field@@Base+0x15c>
   40a98:	mov	r1, #32
   40a9c:	mov	r2, r6
   40aa0:	bl	14ee4 <memset@plt>
   40aa4:	ldr	r0, [r4, #20]
   40aa8:	ldr	r2, [r4, #44]	; 0x2c
   40aac:	mov	r1, #0
   40ab0:	add	r0, r0, r6
   40ab4:	str	r0, [r4, #20]
   40ab8:	mov	r0, r4
   40abc:	blx	r2
   40ac0:	ldr	r1, [r4, #16]
   40ac4:	ldr	r0, [r4, #20]
   40ac8:	sub	r5, r5, r6
   40acc:	sub	r6, r1, r0
   40ad0:	cmp	r5, r6
   40ad4:	bhi	40a98 <flatcc_json_printer_int32_vector_field@@Base+0x11c>
   40ad8:	mov	r1, #32
   40adc:	mov	r2, r5
   40ae0:	bl	14ee4 <memset@plt>
   40ae4:	ldr	r0, [r4, #20]
   40ae8:	add	r1, r0, r5
   40aec:	str	r1, [r4, #20]
   40af0:	b	40b14 <flatcc_json_printer_int32_vector_field@@Base+0x198>
   40af4:	ldr	r0, [r4, #16]
   40af8:	cmp	r1, r0
   40afc:	bcc	40b14 <flatcc_json_printer_int32_vector_field@@Base+0x198>
   40b00:	ldr	r2, [r4, #44]	; 0x2c
   40b04:	mov	r0, r4
   40b08:	mov	r1, #0
   40b0c:	blx	r2
   40b10:	ldr	r1, [r4, #20]
   40b14:	ldr	r0, [r8, #4]
   40b18:	cmn	r0, #1
   40b1c:	lsr	r5, r0, #31
   40b20:	movle	r2, #45	; 0x2d
   40b24:	rsble	r0, r0, #0
   40b28:	strble	r2, [r1], #1
   40b2c:	bl	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   40b30:	ldr	r1, [r4, #20]
   40b34:	add	r0, r0, r5
   40b38:	subs	r9, r7, #1
   40b3c:	add	r0, r1, r0
   40b40:	str	r0, [r4, #20]
   40b44:	beq	40c8c <flatcc_json_printer_int32_vector_field@@Base+0x310>
   40b48:	ldr	r0, [r4, #20]
   40b4c:	add	r7, r8, #8
   40b50:	mov	r8, #44	; 0x2c
   40b54:	mov	sl, #10
   40b58:	b	40bb0 <flatcc_json_printer_int32_vector_field@@Base+0x234>
   40b5c:	mov	r1, #32
   40b60:	mov	r2, r5
   40b64:	bl	14ee4 <memset@plt>
   40b68:	ldr	r0, [r4, #20]
   40b6c:	add	r1, r0, r5
   40b70:	str	r1, [r4, #20]
   40b74:	ldr	r0, [r7]
   40b78:	sub	r9, r9, #1
   40b7c:	cmn	r0, #1
   40b80:	lsr	r5, r0, #31
   40b84:	movle	r2, #45	; 0x2d
   40b88:	rsble	r0, r0, #0
   40b8c:	strble	r2, [r1], #1
   40b90:	bl	3b81c <flatcc_json_printer_uint32@@Base+0x2c>
   40b94:	ldr	r1, [r4, #20]
   40b98:	add	r0, r0, r5
   40b9c:	add	r7, r7, #4
   40ba0:	cmp	r9, #0
   40ba4:	add	r0, r1, r0
   40ba8:	str	r0, [r4, #20]
   40bac:	beq	40c8c <flatcc_json_printer_int32_vector_field@@Base+0x310>
   40bb0:	add	r1, r0, #1
   40bb4:	str	r1, [r4, #20]
   40bb8:	strb	r8, [r0]
   40bbc:	ldrb	r0, [r4, #25]
   40bc0:	ldr	r1, [r4, #20]
   40bc4:	cmp	r0, #0
   40bc8:	beq	40c68 <flatcc_json_printer_int32_vector_field@@Base+0x2ec>
   40bcc:	add	r0, r1, #1
   40bd0:	str	r0, [r4, #20]
   40bd4:	strb	sl, [r1]
   40bd8:	ldr	r0, [r4, #20]
   40bdc:	ldrb	r2, [r4, #25]
   40be0:	ldr	r3, [r4, #32]
   40be4:	ldr	r1, [r4, #16]
   40be8:	mla	r6, r3, r2, r0
   40bec:	mul	r5, r3, r2
   40bf0:	cmp	r6, r1
   40bf4:	bls	40b5c <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   40bf8:	cmp	r0, r1
   40bfc:	bcc	40c18 <flatcc_json_printer_int32_vector_field@@Base+0x29c>
   40c00:	ldr	r2, [r4, #44]	; 0x2c
   40c04:	mov	r0, r4
   40c08:	mov	r1, #0
   40c0c:	blx	r2
   40c10:	ldr	r1, [r4, #16]
   40c14:	ldr	r0, [r4, #20]
   40c18:	sub	r6, r1, r0
   40c1c:	cmp	r6, r5
   40c20:	bcs	40b5c <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   40c24:	mov	r1, #32
   40c28:	mov	r2, r6
   40c2c:	bl	14ee4 <memset@plt>
   40c30:	ldr	r0, [r4, #20]
   40c34:	ldr	r2, [r4, #44]	; 0x2c
   40c38:	mov	r1, #0
   40c3c:	add	r0, r0, r6
   40c40:	str	r0, [r4, #20]
   40c44:	mov	r0, r4
   40c48:	blx	r2
   40c4c:	ldr	r1, [r4, #16]
   40c50:	ldr	r0, [r4, #20]
   40c54:	sub	r5, r5, r6
   40c58:	sub	r6, r1, r0
   40c5c:	cmp	r5, r6
   40c60:	bhi	40c24 <flatcc_json_printer_int32_vector_field@@Base+0x2a8>
   40c64:	b	40b5c <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   40c68:	ldr	r0, [r4, #16]
   40c6c:	cmp	r1, r0
   40c70:	bcc	40b74 <flatcc_json_printer_int32_vector_field@@Base+0x1f8>
   40c74:	ldr	r2, [r4, #44]	; 0x2c
   40c78:	mov	r0, r4
   40c7c:	mov	r1, #0
   40c80:	blx	r2
   40c84:	ldr	r1, [r4, #20]
   40c88:	b	40b74 <flatcc_json_printer_int32_vector_field@@Base+0x1f8>
   40c8c:	ldrb	r1, [r4, #25]
   40c90:	ldr	r0, [r4, #20]
   40c94:	cmp	r1, #0
   40c98:	beq	40d58 <flatcc_json_printer_int32_vector_field@@Base+0x3dc>
   40c9c:	add	r1, r0, #1
   40ca0:	str	r1, [r4, #20]
   40ca4:	mov	r1, #10
   40ca8:	strb	r1, [r0]
   40cac:	ldr	r0, [r4, #32]
   40cb0:	sub	r2, r0, #1
   40cb4:	str	r2, [r4, #32]
   40cb8:	ldrb	r3, [r4, #25]
   40cbc:	ldr	r0, [r4, #20]
   40cc0:	ldr	r1, [r4, #16]
   40cc4:	mla	r7, r2, r3, r0
   40cc8:	mul	r5, r2, r3
   40ccc:	cmp	r7, r1
   40cd0:	bls	40d40 <flatcc_json_printer_int32_vector_field@@Base+0x3c4>
   40cd4:	cmp	r0, r1
   40cd8:	bcc	40cf4 <flatcc_json_printer_int32_vector_field@@Base+0x378>
   40cdc:	ldr	r2, [r4, #44]	; 0x2c
   40ce0:	mov	r0, r4
   40ce4:	mov	r1, #0
   40ce8:	blx	r2
   40cec:	ldr	r1, [r4, #16]
   40cf0:	ldr	r0, [r4, #20]
   40cf4:	sub	r6, r1, r0
   40cf8:	cmp	r6, r5
   40cfc:	bcs	40d40 <flatcc_json_printer_int32_vector_field@@Base+0x3c4>
   40d00:	mov	r1, #32
   40d04:	mov	r2, r6
   40d08:	bl	14ee4 <memset@plt>
   40d0c:	ldr	r0, [r4, #20]
   40d10:	ldr	r2, [r4, #44]	; 0x2c
   40d14:	mov	r1, #0
   40d18:	add	r0, r0, r6
   40d1c:	str	r0, [r4, #20]
   40d20:	mov	r0, r4
   40d24:	blx	r2
   40d28:	ldr	r1, [r4, #16]
   40d2c:	ldr	r0, [r4, #20]
   40d30:	sub	r5, r5, r6
   40d34:	sub	r6, r1, r0
   40d38:	cmp	r5, r6
   40d3c:	bhi	40d00 <flatcc_json_printer_int32_vector_field@@Base+0x384>
   40d40:	mov	r1, #32
   40d44:	mov	r2, r5
   40d48:	bl	14ee4 <memset@plt>
   40d4c:	ldr	r0, [r4, #20]
   40d50:	add	r0, r0, r5
   40d54:	str	r0, [r4, #20]
   40d58:	add	r1, r0, #1
   40d5c:	str	r1, [r4, #20]
   40d60:	mov	r1, #93	; 0x5d
   40d64:	strb	r1, [r0]
   40d68:	sub	sp, fp, #28
   40d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040d70 <flatcc_json_printer_int64_vector_field@@Base>:
   40d70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40d74:	add	fp, sp, #28
   40d78:	sub	sp, sp, #4
   40d7c:	mov	r4, r0
   40d80:	mov	r0, #4
   40d84:	add	r0, r0, r2, lsl #1
   40d88:	ldr	r2, [r1, #8]
   40d8c:	cmp	r0, r2
   40d90:	bge	40db0 <flatcc_json_printer_int64_vector_field@@Base+0x40>
   40d94:	ldr	r2, [r1, #4]
   40d98:	add	r0, r2, r0
   40d9c:	ldrh	r0, [r0]
   40da0:	cmp	r0, #0
   40da4:	ldrne	r2, [r1]
   40da8:	addsne	r8, r2, r0
   40dac:	bne	40db8 <flatcc_json_printer_int64_vector_field@@Base+0x48>
   40db0:	sub	sp, fp, #28
   40db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40db8:	ldr	r0, [r1, #16]
   40dbc:	ldr	r2, [fp, #8]
   40dc0:	add	r7, r0, #1
   40dc4:	cmp	r0, #0
   40dc8:	str	r7, [r1, #16]
   40dcc:	beq	40de4 <flatcc_json_printer_int64_vector_field@@Base+0x74>
   40dd0:	ldr	r0, [r4, #20]
   40dd4:	add	r1, r0, #1
   40dd8:	str	r1, [r4, #20]
   40ddc:	mov	r1, #44	; 0x2c
   40de0:	strb	r1, [r0]
   40de4:	ldr	r0, [r8]
   40de8:	mov	r1, r3
   40dec:	ldr	r7, [r8, r0]!
   40df0:	mov	r0, r4
   40df4:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   40df8:	ldr	r1, [r4, #32]
   40dfc:	ldr	r0, [r4, #20]
   40e00:	cmp	r7, #0
   40e04:	add	r1, r1, #1
   40e08:	str	r1, [r4, #32]
   40e0c:	add	r1, r0, #1
   40e10:	str	r1, [r4, #20]
   40e14:	mov	r1, #91	; 0x5b
   40e18:	strb	r1, [r0]
   40e1c:	beq	41090 <flatcc_json_printer_int64_vector_field@@Base+0x320>
   40e20:	ldrb	r0, [r4, #25]
   40e24:	ldr	r2, [r4, #20]
   40e28:	cmp	r0, #0
   40e2c:	beq	40ee8 <flatcc_json_printer_int64_vector_field@@Base+0x178>
   40e30:	add	r0, r2, #1
   40e34:	str	r0, [r4, #20]
   40e38:	mov	r0, #10
   40e3c:	strb	r0, [r2]
   40e40:	ldr	r0, [r4, #20]
   40e44:	ldrb	r2, [r4, #25]
   40e48:	ldr	r3, [r4, #32]
   40e4c:	ldr	r1, [r4, #16]
   40e50:	mla	r6, r3, r2, r0
   40e54:	mul	r5, r3, r2
   40e58:	cmp	r6, r1
   40e5c:	bls	40ecc <flatcc_json_printer_int64_vector_field@@Base+0x15c>
   40e60:	cmp	r0, r1
   40e64:	bcc	40e80 <flatcc_json_printer_int64_vector_field@@Base+0x110>
   40e68:	ldr	r2, [r4, #44]	; 0x2c
   40e6c:	mov	r0, r4
   40e70:	mov	r1, #0
   40e74:	blx	r2
   40e78:	ldr	r1, [r4, #16]
   40e7c:	ldr	r0, [r4, #20]
   40e80:	sub	r6, r1, r0
   40e84:	cmp	r6, r5
   40e88:	bcs	40ecc <flatcc_json_printer_int64_vector_field@@Base+0x15c>
   40e8c:	mov	r1, #32
   40e90:	mov	r2, r6
   40e94:	bl	14ee4 <memset@plt>
   40e98:	ldr	r0, [r4, #20]
   40e9c:	ldr	r2, [r4, #44]	; 0x2c
   40ea0:	mov	r1, #0
   40ea4:	add	r0, r0, r6
   40ea8:	str	r0, [r4, #20]
   40eac:	mov	r0, r4
   40eb0:	blx	r2
   40eb4:	ldr	r1, [r4, #16]
   40eb8:	ldr	r0, [r4, #20]
   40ebc:	sub	r5, r5, r6
   40ec0:	sub	r6, r1, r0
   40ec4:	cmp	r5, r6
   40ec8:	bhi	40e8c <flatcc_json_printer_int64_vector_field@@Base+0x11c>
   40ecc:	mov	r1, #32
   40ed0:	mov	r2, r5
   40ed4:	bl	14ee4 <memset@plt>
   40ed8:	ldr	r0, [r4, #20]
   40edc:	add	r2, r0, r5
   40ee0:	str	r2, [r4, #20]
   40ee4:	b	40f08 <flatcc_json_printer_int64_vector_field@@Base+0x198>
   40ee8:	ldr	r0, [r4, #16]
   40eec:	cmp	r2, r0
   40ef0:	bcc	40f08 <flatcc_json_printer_int64_vector_field@@Base+0x198>
   40ef4:	ldr	r2, [r4, #44]	; 0x2c
   40ef8:	mov	r0, r4
   40efc:	mov	r1, #0
   40f00:	blx	r2
   40f04:	ldr	r2, [r4, #20]
   40f08:	ldrd	r0, [r8, #4]
   40f0c:	lsr	r5, r1, #31
   40f10:	cmn	r1, #1
   40f14:	bgt	40f28 <flatcc_json_printer_int64_vector_field@@Base+0x1b8>
   40f18:	mov	r3, #45	; 0x2d
   40f1c:	rsbs	r0, r0, #0
   40f20:	strb	r3, [r2], #1
   40f24:	rsc	r1, r1, #0
   40f28:	bl	3bb70 <flatcc_json_printer_uint64@@Base+0x30>
   40f2c:	ldr	r1, [r4, #20]
   40f30:	add	r0, r0, r5
   40f34:	subs	r9, r7, #1
   40f38:	add	r0, r1, r0
   40f3c:	str	r0, [r4, #20]
   40f40:	beq	41090 <flatcc_json_printer_int64_vector_field@@Base+0x320>
   40f44:	ldr	r0, [r4, #20]
   40f48:	add	r7, r8, #12
   40f4c:	mov	r8, #44	; 0x2c
   40f50:	mov	sl, #10
   40f54:	b	40f78 <flatcc_json_printer_int64_vector_field@@Base+0x208>
   40f58:	bl	3bb70 <flatcc_json_printer_uint64@@Base+0x30>
   40f5c:	ldr	r1, [r4, #20]
   40f60:	add	r0, r0, r5
   40f64:	add	r7, r7, #8
   40f68:	cmp	r9, #0
   40f6c:	add	r0, r1, r0
   40f70:	str	r0, [r4, #20]
   40f74:	beq	41090 <flatcc_json_printer_int64_vector_field@@Base+0x320>
   40f78:	add	r1, r0, #1
   40f7c:	str	r1, [r4, #20]
   40f80:	strb	r8, [r0]
   40f84:	ldrb	r0, [r4, #25]
   40f88:	ldr	r2, [r4, #20]
   40f8c:	cmp	r0, #0
   40f90:	beq	41048 <flatcc_json_printer_int64_vector_field@@Base+0x2d8>
   40f94:	add	r0, r2, #1
   40f98:	str	r0, [r4, #20]
   40f9c:	strb	sl, [r2]
   40fa0:	ldr	r0, [r4, #20]
   40fa4:	ldrb	r2, [r4, #25]
   40fa8:	ldr	r3, [r4, #32]
   40fac:	ldr	r1, [r4, #16]
   40fb0:	mla	r6, r3, r2, r0
   40fb4:	mul	r5, r3, r2
   40fb8:	cmp	r6, r1
   40fbc:	bls	4102c <flatcc_json_printer_int64_vector_field@@Base+0x2bc>
   40fc0:	cmp	r0, r1
   40fc4:	bcc	40fe0 <flatcc_json_printer_int64_vector_field@@Base+0x270>
   40fc8:	ldr	r2, [r4, #44]	; 0x2c
   40fcc:	mov	r0, r4
   40fd0:	mov	r1, #0
   40fd4:	blx	r2
   40fd8:	ldr	r1, [r4, #16]
   40fdc:	ldr	r0, [r4, #20]
   40fe0:	sub	r6, r1, r0
   40fe4:	cmp	r6, r5
   40fe8:	bcs	4102c <flatcc_json_printer_int64_vector_field@@Base+0x2bc>
   40fec:	mov	r1, #32
   40ff0:	mov	r2, r6
   40ff4:	bl	14ee4 <memset@plt>
   40ff8:	ldr	r0, [r4, #20]
   40ffc:	ldr	r2, [r4, #44]	; 0x2c
   41000:	mov	r1, #0
   41004:	add	r0, r0, r6
   41008:	str	r0, [r4, #20]
   4100c:	mov	r0, r4
   41010:	blx	r2
   41014:	ldr	r1, [r4, #16]
   41018:	ldr	r0, [r4, #20]
   4101c:	sub	r5, r5, r6
   41020:	sub	r6, r1, r0
   41024:	cmp	r5, r6
   41028:	bhi	40fec <flatcc_json_printer_int64_vector_field@@Base+0x27c>
   4102c:	mov	r1, #32
   41030:	mov	r2, r5
   41034:	bl	14ee4 <memset@plt>
   41038:	ldr	r0, [r4, #20]
   4103c:	add	r2, r0, r5
   41040:	str	r2, [r4, #20]
   41044:	b	41068 <flatcc_json_printer_int64_vector_field@@Base+0x2f8>
   41048:	ldr	r0, [r4, #16]
   4104c:	cmp	r2, r0
   41050:	bcc	41068 <flatcc_json_printer_int64_vector_field@@Base+0x2f8>
   41054:	ldr	r2, [r4, #44]	; 0x2c
   41058:	mov	r0, r4
   4105c:	mov	r1, #0
   41060:	blx	r2
   41064:	ldr	r2, [r4, #20]
   41068:	ldrd	r0, [r7]
   4106c:	sub	r9, r9, #1
   41070:	lsr	r5, r1, #31
   41074:	cmn	r1, #1
   41078:	bgt	40f58 <flatcc_json_printer_int64_vector_field@@Base+0x1e8>
   4107c:	mov	r3, #45	; 0x2d
   41080:	rsbs	r0, r0, #0
   41084:	strb	r3, [r2], #1
   41088:	rsc	r1, r1, #0
   4108c:	b	40f58 <flatcc_json_printer_int64_vector_field@@Base+0x1e8>
   41090:	ldrb	r1, [r4, #25]
   41094:	ldr	r0, [r4, #20]
   41098:	cmp	r1, #0
   4109c:	beq	4115c <flatcc_json_printer_int64_vector_field@@Base+0x3ec>
   410a0:	add	r1, r0, #1
   410a4:	str	r1, [r4, #20]
   410a8:	mov	r1, #10
   410ac:	strb	r1, [r0]
   410b0:	ldr	r0, [r4, #32]
   410b4:	sub	r2, r0, #1
   410b8:	str	r2, [r4, #32]
   410bc:	ldrb	r3, [r4, #25]
   410c0:	ldr	r0, [r4, #20]
   410c4:	ldr	r1, [r4, #16]
   410c8:	mla	r7, r2, r3, r0
   410cc:	mul	r5, r2, r3
   410d0:	cmp	r7, r1
   410d4:	bls	41144 <flatcc_json_printer_int64_vector_field@@Base+0x3d4>
   410d8:	cmp	r0, r1
   410dc:	bcc	410f8 <flatcc_json_printer_int64_vector_field@@Base+0x388>
   410e0:	ldr	r2, [r4, #44]	; 0x2c
   410e4:	mov	r0, r4
   410e8:	mov	r1, #0
   410ec:	blx	r2
   410f0:	ldr	r1, [r4, #16]
   410f4:	ldr	r0, [r4, #20]
   410f8:	sub	r6, r1, r0
   410fc:	cmp	r6, r5
   41100:	bcs	41144 <flatcc_json_printer_int64_vector_field@@Base+0x3d4>
   41104:	mov	r1, #32
   41108:	mov	r2, r6
   4110c:	bl	14ee4 <memset@plt>
   41110:	ldr	r0, [r4, #20]
   41114:	ldr	r2, [r4, #44]	; 0x2c
   41118:	mov	r1, #0
   4111c:	add	r0, r0, r6
   41120:	str	r0, [r4, #20]
   41124:	mov	r0, r4
   41128:	blx	r2
   4112c:	ldr	r1, [r4, #16]
   41130:	ldr	r0, [r4, #20]
   41134:	sub	r5, r5, r6
   41138:	sub	r6, r1, r0
   4113c:	cmp	r5, r6
   41140:	bhi	41104 <flatcc_json_printer_int64_vector_field@@Base+0x394>
   41144:	mov	r1, #32
   41148:	mov	r2, r5
   4114c:	bl	14ee4 <memset@plt>
   41150:	ldr	r0, [r4, #20]
   41154:	add	r0, r0, r5
   41158:	str	r0, [r4, #20]
   4115c:	add	r1, r0, #1
   41160:	str	r1, [r4, #20]
   41164:	mov	r1, #93	; 0x5d
   41168:	strb	r1, [r0]
   4116c:	sub	sp, fp, #28
   41170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041174 <flatcc_json_printer_bool_vector_field@@Base>:
   41174:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41178:	add	fp, sp, #28
   4117c:	sub	sp, sp, #4
   41180:	mov	r4, r0
   41184:	mov	r0, #4
   41188:	add	r0, r0, r2, lsl #1
   4118c:	ldr	r2, [r1, #8]
   41190:	cmp	r0, r2
   41194:	bge	411b4 <flatcc_json_printer_bool_vector_field@@Base+0x40>
   41198:	ldr	r2, [r1, #4]
   4119c:	add	r0, r2, r0
   411a0:	ldrh	r0, [r0]
   411a4:	cmp	r0, #0
   411a8:	ldrne	r2, [r1]
   411ac:	addsne	sl, r2, r0
   411b0:	bne	411bc <flatcc_json_printer_bool_vector_field@@Base+0x48>
   411b4:	sub	sp, fp, #28
   411b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   411bc:	ldr	r0, [r1, #16]
   411c0:	ldr	r2, [fp, #8]
   411c4:	add	r7, r0, #1
   411c8:	cmp	r0, #0
   411cc:	str	r7, [r1, #16]
   411d0:	beq	411e8 <flatcc_json_printer_bool_vector_field@@Base+0x74>
   411d4:	ldr	r0, [r4, #20]
   411d8:	add	r1, r0, #1
   411dc:	str	r1, [r4, #20]
   411e0:	mov	r1, #44	; 0x2c
   411e4:	strb	r1, [r0]
   411e8:	ldr	r0, [sl]
   411ec:	mov	r1, r3
   411f0:	ldr	r9, [sl, r0]!
   411f4:	mov	r0, r4
   411f8:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   411fc:	ldr	r1, [r4, #32]
   41200:	ldr	r0, [r4, #20]
   41204:	cmp	r9, #0
   41208:	add	r1, r1, #1
   4120c:	str	r1, [r4, #32]
   41210:	add	r1, r0, #1
   41214:	str	r1, [r4, #20]
   41218:	mov	r1, #91	; 0x5b
   4121c:	strb	r1, [r0]
   41220:	beq	414b8 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   41224:	ldrb	r1, [r4, #25]
   41228:	ldr	r0, [r4, #20]
   4122c:	cmp	r1, #0
   41230:	beq	412ec <flatcc_json_printer_bool_vector_field@@Base+0x178>
   41234:	add	r1, r0, #1
   41238:	str	r1, [r4, #20]
   4123c:	mov	r1, #10
   41240:	strb	r1, [r0]
   41244:	ldr	r0, [r4, #20]
   41248:	ldrb	r2, [r4, #25]
   4124c:	ldr	r3, [r4, #32]
   41250:	ldr	r1, [r4, #16]
   41254:	mla	r7, r3, r2, r0
   41258:	mul	r5, r3, r2
   4125c:	cmp	r7, r1
   41260:	bls	412d0 <flatcc_json_printer_bool_vector_field@@Base+0x15c>
   41264:	cmp	r0, r1
   41268:	bcc	41284 <flatcc_json_printer_bool_vector_field@@Base+0x110>
   4126c:	ldr	r2, [r4, #44]	; 0x2c
   41270:	mov	r0, r4
   41274:	mov	r1, #0
   41278:	blx	r2
   4127c:	ldr	r1, [r4, #16]
   41280:	ldr	r0, [r4, #20]
   41284:	sub	r6, r1, r0
   41288:	cmp	r6, r5
   4128c:	bcs	412d0 <flatcc_json_printer_bool_vector_field@@Base+0x15c>
   41290:	mov	r1, #32
   41294:	mov	r2, r6
   41298:	bl	14ee4 <memset@plt>
   4129c:	ldr	r0, [r4, #20]
   412a0:	ldr	r2, [r4, #44]	; 0x2c
   412a4:	mov	r1, #0
   412a8:	add	r0, r0, r6
   412ac:	str	r0, [r4, #20]
   412b0:	mov	r0, r4
   412b4:	blx	r2
   412b8:	ldr	r1, [r4, #16]
   412bc:	ldr	r0, [r4, #20]
   412c0:	sub	r5, r5, r6
   412c4:	sub	r6, r1, r0
   412c8:	cmp	r5, r6
   412cc:	bhi	41290 <flatcc_json_printer_bool_vector_field@@Base+0x11c>
   412d0:	mov	r1, #32
   412d4:	mov	r2, r5
   412d8:	bl	14ee4 <memset@plt>
   412dc:	ldr	r0, [r4, #20]
   412e0:	add	r0, r0, r5
   412e4:	str	r0, [r4, #20]
   412e8:	b	4130c <flatcc_json_printer_bool_vector_field@@Base+0x198>
   412ec:	ldr	r1, [r4, #16]
   412f0:	cmp	r0, r1
   412f4:	bcc	4130c <flatcc_json_printer_bool_vector_field@@Base+0x198>
   412f8:	ldr	r2, [r4, #44]	; 0x2c
   412fc:	mov	r0, r4
   41300:	mov	r1, #0
   41304:	blx	r2
   41308:	ldr	r0, [r4, #20]
   4130c:	ldrb	r1, [sl, #4]
   41310:	movw	r8, #29300	; 0x7274
   41314:	movt	r8, #25973	; 0x6575
   41318:	cmp	r1, #0
   4131c:	beq	41334 <flatcc_json_printer_bool_vector_field@@Base+0x1c0>
   41320:	mov	r1, #0
   41324:	str	r8, [r0]
   41328:	strb	r1, [r0, #4]
   4132c:	mov	r0, #4
   41330:	b	4134c <flatcc_json_printer_bool_vector_field@@Base+0x1d8>
   41334:	mov	r1, #101	; 0x65
   41338:	strh	r1, [r0, #4]
   4133c:	movw	r1, #24934	; 0x6166
   41340:	movt	r1, #29548	; 0x736c
   41344:	str	r1, [r0]
   41348:	mov	r0, #5
   4134c:	ldr	r1, [r4, #20]
   41350:	subs	r9, r9, #1
   41354:	add	r0, r1, r0
   41358:	str	r0, [r4, #20]
   4135c:	beq	414b8 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   41360:	ldr	r0, [r4, #20]
   41364:	add	r7, sl, #5
   41368:	mov	sl, #44	; 0x2c
   4136c:	b	413a0 <flatcc_json_printer_bool_vector_field@@Base+0x22c>
   41370:	mov	r1, #101	; 0x65
   41374:	strh	r1, [r0, #4]
   41378:	movw	r1, #24934	; 0x6166
   4137c:	movt	r1, #29548	; 0x736c
   41380:	str	r1, [r0]
   41384:	mov	r0, #5
   41388:	ldr	r1, [r4, #20]
   4138c:	add	r7, r7, #1
   41390:	cmp	r9, #0
   41394:	add	r0, r1, r0
   41398:	str	r0, [r4, #20]
   4139c:	beq	414b8 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   413a0:	add	r1, r0, #1
   413a4:	str	r1, [r4, #20]
   413a8:	strb	sl, [r0]
   413ac:	ldrb	r1, [r4, #25]
   413b0:	ldr	r0, [r4, #20]
   413b4:	cmp	r1, #0
   413b8:	beq	41474 <flatcc_json_printer_bool_vector_field@@Base+0x300>
   413bc:	add	r1, r0, #1
   413c0:	str	r1, [r4, #20]
   413c4:	mov	r1, #10
   413c8:	strb	r1, [r0]
   413cc:	ldr	r0, [r4, #20]
   413d0:	ldrb	r2, [r4, #25]
   413d4:	ldr	r3, [r4, #32]
   413d8:	ldr	r1, [r4, #16]
   413dc:	mla	r6, r3, r2, r0
   413e0:	mul	r5, r3, r2
   413e4:	cmp	r6, r1
   413e8:	bls	41458 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   413ec:	cmp	r0, r1
   413f0:	bcc	4140c <flatcc_json_printer_bool_vector_field@@Base+0x298>
   413f4:	ldr	r2, [r4, #44]	; 0x2c
   413f8:	mov	r0, r4
   413fc:	mov	r1, #0
   41400:	blx	r2
   41404:	ldr	r1, [r4, #16]
   41408:	ldr	r0, [r4, #20]
   4140c:	sub	r6, r1, r0
   41410:	cmp	r6, r5
   41414:	bcs	41458 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   41418:	mov	r1, #32
   4141c:	mov	r2, r6
   41420:	bl	14ee4 <memset@plt>
   41424:	ldr	r0, [r4, #20]
   41428:	ldr	r2, [r4, #44]	; 0x2c
   4142c:	mov	r1, #0
   41430:	add	r0, r0, r6
   41434:	str	r0, [r4, #20]
   41438:	mov	r0, r4
   4143c:	blx	r2
   41440:	ldr	r1, [r4, #16]
   41444:	ldr	r0, [r4, #20]
   41448:	sub	r5, r5, r6
   4144c:	sub	r6, r1, r0
   41450:	cmp	r5, r6
   41454:	bhi	41418 <flatcc_json_printer_bool_vector_field@@Base+0x2a4>
   41458:	mov	r1, #32
   4145c:	mov	r2, r5
   41460:	bl	14ee4 <memset@plt>
   41464:	ldr	r0, [r4, #20]
   41468:	add	r0, r0, r5
   4146c:	str	r0, [r4, #20]
   41470:	b	41494 <flatcc_json_printer_bool_vector_field@@Base+0x320>
   41474:	ldr	r1, [r4, #16]
   41478:	cmp	r0, r1
   4147c:	bcc	41494 <flatcc_json_printer_bool_vector_field@@Base+0x320>
   41480:	ldr	r2, [r4, #44]	; 0x2c
   41484:	mov	r0, r4
   41488:	mov	r1, #0
   4148c:	blx	r2
   41490:	ldr	r0, [r4, #20]
   41494:	ldrb	r1, [r7]
   41498:	sub	r9, r9, #1
   4149c:	cmp	r1, #0
   414a0:	beq	41370 <flatcc_json_printer_bool_vector_field@@Base+0x1fc>
   414a4:	mov	r1, #0
   414a8:	str	r8, [r0]
   414ac:	strb	r1, [r0, #4]
   414b0:	mov	r0, #4
   414b4:	b	41388 <flatcc_json_printer_bool_vector_field@@Base+0x214>
   414b8:	ldrb	r1, [r4, #25]
   414bc:	ldr	r0, [r4, #20]
   414c0:	cmp	r1, #0
   414c4:	beq	41584 <flatcc_json_printer_bool_vector_field@@Base+0x410>
   414c8:	add	r1, r0, #1
   414cc:	str	r1, [r4, #20]
   414d0:	mov	r1, #10
   414d4:	strb	r1, [r0]
   414d8:	ldr	r0, [r4, #32]
   414dc:	sub	r2, r0, #1
   414e0:	str	r2, [r4, #32]
   414e4:	ldrb	r3, [r4, #25]
   414e8:	ldr	r0, [r4, #20]
   414ec:	ldr	r1, [r4, #16]
   414f0:	mla	r7, r2, r3, r0
   414f4:	mul	r5, r2, r3
   414f8:	cmp	r7, r1
   414fc:	bls	4156c <flatcc_json_printer_bool_vector_field@@Base+0x3f8>
   41500:	cmp	r0, r1
   41504:	bcc	41520 <flatcc_json_printer_bool_vector_field@@Base+0x3ac>
   41508:	ldr	r2, [r4, #44]	; 0x2c
   4150c:	mov	r0, r4
   41510:	mov	r1, #0
   41514:	blx	r2
   41518:	ldr	r1, [r4, #16]
   4151c:	ldr	r0, [r4, #20]
   41520:	sub	r6, r1, r0
   41524:	cmp	r6, r5
   41528:	bcs	4156c <flatcc_json_printer_bool_vector_field@@Base+0x3f8>
   4152c:	mov	r1, #32
   41530:	mov	r2, r6
   41534:	bl	14ee4 <memset@plt>
   41538:	ldr	r0, [r4, #20]
   4153c:	ldr	r2, [r4, #44]	; 0x2c
   41540:	mov	r1, #0
   41544:	add	r0, r0, r6
   41548:	str	r0, [r4, #20]
   4154c:	mov	r0, r4
   41550:	blx	r2
   41554:	ldr	r1, [r4, #16]
   41558:	ldr	r0, [r4, #20]
   4155c:	sub	r5, r5, r6
   41560:	sub	r6, r1, r0
   41564:	cmp	r5, r6
   41568:	bhi	4152c <flatcc_json_printer_bool_vector_field@@Base+0x3b8>
   4156c:	mov	r1, #32
   41570:	mov	r2, r5
   41574:	bl	14ee4 <memset@plt>
   41578:	ldr	r0, [r4, #20]
   4157c:	add	r0, r0, r5
   41580:	str	r0, [r4, #20]
   41584:	add	r1, r0, #1
   41588:	str	r1, [r4, #20]
   4158c:	mov	r1, #93	; 0x5d
   41590:	strb	r1, [r0]
   41594:	sub	sp, fp, #28
   41598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004159c <flatcc_json_printer_float_vector_field@@Base>:
   4159c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   415a0:	add	fp, sp, #28
   415a4:	sub	sp, sp, #4
   415a8:	mov	r4, r0
   415ac:	mov	r0, #4
   415b0:	add	r0, r0, r2, lsl #1
   415b4:	ldr	r2, [r1, #8]
   415b8:	cmp	r0, r2
   415bc:	bge	415dc <flatcc_json_printer_float_vector_field@@Base+0x40>
   415c0:	ldr	r2, [r1, #4]
   415c4:	add	r0, r2, r0
   415c8:	ldrh	r0, [r0]
   415cc:	cmp	r0, #0
   415d0:	ldrne	r2, [r1]
   415d4:	addsne	r8, r2, r0
   415d8:	bne	415e4 <flatcc_json_printer_float_vector_field@@Base+0x48>
   415dc:	sub	sp, fp, #28
   415e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   415e4:	ldr	r0, [r1, #16]
   415e8:	ldr	r2, [fp, #8]
   415ec:	add	r7, r0, #1
   415f0:	cmp	r0, #0
   415f4:	str	r7, [r1, #16]
   415f8:	beq	41610 <flatcc_json_printer_float_vector_field@@Base+0x74>
   415fc:	ldr	r0, [r4, #20]
   41600:	add	r1, r0, #1
   41604:	str	r1, [r4, #20]
   41608:	mov	r1, #44	; 0x2c
   4160c:	strb	r1, [r0]
   41610:	ldr	r0, [r8]
   41614:	mov	r1, r3
   41618:	ldr	r7, [r8, r0]!
   4161c:	mov	r0, r4
   41620:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   41624:	ldr	r1, [r4, #32]
   41628:	ldr	r0, [r4, #20]
   4162c:	cmp	r7, #0
   41630:	add	r1, r1, #1
   41634:	str	r1, [r4, #32]
   41638:	add	r1, r0, #1
   4163c:	str	r1, [r4, #20]
   41640:	mov	r1, #91	; 0x5b
   41644:	strb	r1, [r0]
   41648:	beq	41884 <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   4164c:	ldrb	r1, [r4, #25]
   41650:	ldr	r0, [r4, #20]
   41654:	cmp	r1, #0
   41658:	beq	41714 <flatcc_json_printer_float_vector_field@@Base+0x178>
   4165c:	add	r1, r0, #1
   41660:	str	r1, [r4, #20]
   41664:	mov	r1, #10
   41668:	strb	r1, [r0]
   4166c:	ldr	r0, [r4, #20]
   41670:	ldrb	r2, [r4, #25]
   41674:	ldr	r3, [r4, #32]
   41678:	ldr	r1, [r4, #16]
   4167c:	mla	r6, r3, r2, r0
   41680:	mul	r5, r3, r2
   41684:	cmp	r6, r1
   41688:	bls	416f8 <flatcc_json_printer_float_vector_field@@Base+0x15c>
   4168c:	cmp	r0, r1
   41690:	bcc	416ac <flatcc_json_printer_float_vector_field@@Base+0x110>
   41694:	ldr	r2, [r4, #44]	; 0x2c
   41698:	mov	r0, r4
   4169c:	mov	r1, #0
   416a0:	blx	r2
   416a4:	ldr	r1, [r4, #16]
   416a8:	ldr	r0, [r4, #20]
   416ac:	sub	r6, r1, r0
   416b0:	cmp	r6, r5
   416b4:	bcs	416f8 <flatcc_json_printer_float_vector_field@@Base+0x15c>
   416b8:	mov	r1, #32
   416bc:	mov	r2, r6
   416c0:	bl	14ee4 <memset@plt>
   416c4:	ldr	r0, [r4, #20]
   416c8:	ldr	r2, [r4, #44]	; 0x2c
   416cc:	mov	r1, #0
   416d0:	add	r0, r0, r6
   416d4:	str	r0, [r4, #20]
   416d8:	mov	r0, r4
   416dc:	blx	r2
   416e0:	ldr	r1, [r4, #16]
   416e4:	ldr	r0, [r4, #20]
   416e8:	sub	r5, r5, r6
   416ec:	sub	r6, r1, r0
   416f0:	cmp	r5, r6
   416f4:	bhi	416b8 <flatcc_json_printer_float_vector_field@@Base+0x11c>
   416f8:	mov	r1, #32
   416fc:	mov	r2, r5
   41700:	bl	14ee4 <memset@plt>
   41704:	ldr	r0, [r4, #20]
   41708:	add	r0, r0, r5
   4170c:	str	r0, [r4, #20]
   41710:	b	41734 <flatcc_json_printer_float_vector_field@@Base+0x198>
   41714:	ldr	r1, [r4, #16]
   41718:	cmp	r0, r1
   4171c:	bcc	41734 <flatcc_json_printer_float_vector_field@@Base+0x198>
   41720:	ldr	r2, [r4, #44]	; 0x2c
   41724:	mov	r0, r4
   41728:	mov	r1, #0
   4172c:	blx	r2
   41730:	ldr	r0, [r4, #20]
   41734:	vldr	s0, [r8, #4]
   41738:	vcvt.f64.f32	d0, s0
   4173c:	bl	3a138 <flatcc_json_printer_fmt_float@@Base+0xc>
   41740:	ldr	r1, [r4, #20]
   41744:	subs	r9, r7, #1
   41748:	add	r0, r1, r0
   4174c:	str	r0, [r4, #20]
   41750:	beq	41884 <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   41754:	ldr	r0, [r4, #20]
   41758:	add	r7, r8, #8
   4175c:	mov	r8, #44	; 0x2c
   41760:	mov	sl, #10
   41764:	b	417a4 <flatcc_json_printer_float_vector_field@@Base+0x208>
   41768:	mov	r1, #32
   4176c:	mov	r2, r5
   41770:	bl	14ee4 <memset@plt>
   41774:	ldr	r0, [r4, #20]
   41778:	add	r0, r0, r5
   4177c:	str	r0, [r4, #20]
   41780:	vldr	s0, [r7]
   41784:	vcvt.f64.f32	d0, s0
   41788:	bl	3a138 <flatcc_json_printer_fmt_float@@Base+0xc>
   4178c:	ldr	r1, [r4, #20]
   41790:	add	r7, r7, #4
   41794:	cmp	r9, #0
   41798:	add	r0, r1, r0
   4179c:	str	r0, [r4, #20]
   417a0:	beq	41884 <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   417a4:	add	r1, r0, #1
   417a8:	sub	r9, r9, #1
   417ac:	str	r1, [r4, #20]
   417b0:	strb	r8, [r0]
   417b4:	ldrb	r1, [r4, #25]
   417b8:	ldr	r0, [r4, #20]
   417bc:	cmp	r1, #0
   417c0:	beq	41860 <flatcc_json_printer_float_vector_field@@Base+0x2c4>
   417c4:	add	r1, r0, #1
   417c8:	str	r1, [r4, #20]
   417cc:	strb	sl, [r0]
   417d0:	ldr	r0, [r4, #20]
   417d4:	ldrb	r2, [r4, #25]
   417d8:	ldr	r3, [r4, #32]
   417dc:	ldr	r1, [r4, #16]
   417e0:	mla	r6, r3, r2, r0
   417e4:	mul	r5, r3, r2
   417e8:	cmp	r6, r1
   417ec:	bls	41768 <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   417f0:	cmp	r0, r1
   417f4:	bcc	41810 <flatcc_json_printer_float_vector_field@@Base+0x274>
   417f8:	ldr	r2, [r4, #44]	; 0x2c
   417fc:	mov	r0, r4
   41800:	mov	r1, #0
   41804:	blx	r2
   41808:	ldr	r1, [r4, #16]
   4180c:	ldr	r0, [r4, #20]
   41810:	sub	r6, r1, r0
   41814:	cmp	r6, r5
   41818:	bcs	41768 <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   4181c:	mov	r1, #32
   41820:	mov	r2, r6
   41824:	bl	14ee4 <memset@plt>
   41828:	ldr	r0, [r4, #20]
   4182c:	ldr	r2, [r4, #44]	; 0x2c
   41830:	mov	r1, #0
   41834:	add	r0, r0, r6
   41838:	str	r0, [r4, #20]
   4183c:	mov	r0, r4
   41840:	blx	r2
   41844:	ldr	r1, [r4, #16]
   41848:	ldr	r0, [r4, #20]
   4184c:	sub	r5, r5, r6
   41850:	sub	r6, r1, r0
   41854:	cmp	r5, r6
   41858:	bhi	4181c <flatcc_json_printer_float_vector_field@@Base+0x280>
   4185c:	b	41768 <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   41860:	ldr	r1, [r4, #16]
   41864:	cmp	r0, r1
   41868:	bcc	41780 <flatcc_json_printer_float_vector_field@@Base+0x1e4>
   4186c:	ldr	r2, [r4, #44]	; 0x2c
   41870:	mov	r0, r4
   41874:	mov	r1, #0
   41878:	blx	r2
   4187c:	ldr	r0, [r4, #20]
   41880:	b	41780 <flatcc_json_printer_float_vector_field@@Base+0x1e4>
   41884:	ldrb	r1, [r4, #25]
   41888:	ldr	r0, [r4, #20]
   4188c:	cmp	r1, #0
   41890:	beq	41950 <flatcc_json_printer_float_vector_field@@Base+0x3b4>
   41894:	add	r1, r0, #1
   41898:	str	r1, [r4, #20]
   4189c:	mov	r1, #10
   418a0:	strb	r1, [r0]
   418a4:	ldr	r0, [r4, #32]
   418a8:	sub	r2, r0, #1
   418ac:	str	r2, [r4, #32]
   418b0:	ldrb	r3, [r4, #25]
   418b4:	ldr	r0, [r4, #20]
   418b8:	ldr	r1, [r4, #16]
   418bc:	mla	r7, r2, r3, r0
   418c0:	mul	r5, r2, r3
   418c4:	cmp	r7, r1
   418c8:	bls	41938 <flatcc_json_printer_float_vector_field@@Base+0x39c>
   418cc:	cmp	r0, r1
   418d0:	bcc	418ec <flatcc_json_printer_float_vector_field@@Base+0x350>
   418d4:	ldr	r2, [r4, #44]	; 0x2c
   418d8:	mov	r0, r4
   418dc:	mov	r1, #0
   418e0:	blx	r2
   418e4:	ldr	r1, [r4, #16]
   418e8:	ldr	r0, [r4, #20]
   418ec:	sub	r6, r1, r0
   418f0:	cmp	r6, r5
   418f4:	bcs	41938 <flatcc_json_printer_float_vector_field@@Base+0x39c>
   418f8:	mov	r1, #32
   418fc:	mov	r2, r6
   41900:	bl	14ee4 <memset@plt>
   41904:	ldr	r0, [r4, #20]
   41908:	ldr	r2, [r4, #44]	; 0x2c
   4190c:	mov	r1, #0
   41910:	add	r0, r0, r6
   41914:	str	r0, [r4, #20]
   41918:	mov	r0, r4
   4191c:	blx	r2
   41920:	ldr	r1, [r4, #16]
   41924:	ldr	r0, [r4, #20]
   41928:	sub	r5, r5, r6
   4192c:	sub	r6, r1, r0
   41930:	cmp	r5, r6
   41934:	bhi	418f8 <flatcc_json_printer_float_vector_field@@Base+0x35c>
   41938:	mov	r1, #32
   4193c:	mov	r2, r5
   41940:	bl	14ee4 <memset@plt>
   41944:	ldr	r0, [r4, #20]
   41948:	add	r0, r0, r5
   4194c:	str	r0, [r4, #20]
   41950:	add	r1, r0, #1
   41954:	str	r1, [r4, #20]
   41958:	mov	r1, #93	; 0x5d
   4195c:	strb	r1, [r0]
   41960:	sub	sp, fp, #28
   41964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041968 <flatcc_json_printer_double_vector_field@@Base>:
   41968:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4196c:	add	fp, sp, #28
   41970:	sub	sp, sp, #4
   41974:	mov	r4, r0
   41978:	mov	r0, #4
   4197c:	add	r0, r0, r2, lsl #1
   41980:	ldr	r2, [r1, #8]
   41984:	cmp	r0, r2
   41988:	bge	419a8 <flatcc_json_printer_double_vector_field@@Base+0x40>
   4198c:	ldr	r2, [r1, #4]
   41990:	add	r0, r2, r0
   41994:	ldrh	r0, [r0]
   41998:	cmp	r0, #0
   4199c:	ldrne	r2, [r1]
   419a0:	addsne	r8, r2, r0
   419a4:	bne	419b0 <flatcc_json_printer_double_vector_field@@Base+0x48>
   419a8:	sub	sp, fp, #28
   419ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   419b0:	ldr	r0, [r1, #16]
   419b4:	ldr	r2, [fp, #8]
   419b8:	add	r7, r0, #1
   419bc:	cmp	r0, #0
   419c0:	str	r7, [r1, #16]
   419c4:	beq	419dc <flatcc_json_printer_double_vector_field@@Base+0x74>
   419c8:	ldr	r0, [r4, #20]
   419cc:	add	r1, r0, #1
   419d0:	str	r1, [r4, #20]
   419d4:	mov	r1, #44	; 0x2c
   419d8:	strb	r1, [r0]
   419dc:	ldr	r0, [r8]
   419e0:	mov	r1, r3
   419e4:	ldr	r7, [r8, r0]!
   419e8:	mov	r0, r4
   419ec:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   419f0:	ldr	r1, [r4, #32]
   419f4:	ldr	r0, [r4, #20]
   419f8:	cmp	r7, #0
   419fc:	add	r1, r1, #1
   41a00:	str	r1, [r4, #32]
   41a04:	add	r1, r0, #1
   41a08:	str	r1, [r4, #20]
   41a0c:	mov	r1, #91	; 0x5b
   41a10:	strb	r1, [r0]
   41a14:	beq	41c48 <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   41a18:	ldrb	r1, [r4, #25]
   41a1c:	ldr	r0, [r4, #20]
   41a20:	cmp	r1, #0
   41a24:	beq	41ae0 <flatcc_json_printer_double_vector_field@@Base+0x178>
   41a28:	add	r1, r0, #1
   41a2c:	str	r1, [r4, #20]
   41a30:	mov	r1, #10
   41a34:	strb	r1, [r0]
   41a38:	ldr	r0, [r4, #20]
   41a3c:	ldrb	r2, [r4, #25]
   41a40:	ldr	r3, [r4, #32]
   41a44:	ldr	r1, [r4, #16]
   41a48:	mla	r6, r3, r2, r0
   41a4c:	mul	r5, r3, r2
   41a50:	cmp	r6, r1
   41a54:	bls	41ac4 <flatcc_json_printer_double_vector_field@@Base+0x15c>
   41a58:	cmp	r0, r1
   41a5c:	bcc	41a78 <flatcc_json_printer_double_vector_field@@Base+0x110>
   41a60:	ldr	r2, [r4, #44]	; 0x2c
   41a64:	mov	r0, r4
   41a68:	mov	r1, #0
   41a6c:	blx	r2
   41a70:	ldr	r1, [r4, #16]
   41a74:	ldr	r0, [r4, #20]
   41a78:	sub	r6, r1, r0
   41a7c:	cmp	r6, r5
   41a80:	bcs	41ac4 <flatcc_json_printer_double_vector_field@@Base+0x15c>
   41a84:	mov	r1, #32
   41a88:	mov	r2, r6
   41a8c:	bl	14ee4 <memset@plt>
   41a90:	ldr	r0, [r4, #20]
   41a94:	ldr	r2, [r4, #44]	; 0x2c
   41a98:	mov	r1, #0
   41a9c:	add	r0, r0, r6
   41aa0:	str	r0, [r4, #20]
   41aa4:	mov	r0, r4
   41aa8:	blx	r2
   41aac:	ldr	r1, [r4, #16]
   41ab0:	ldr	r0, [r4, #20]
   41ab4:	sub	r5, r5, r6
   41ab8:	sub	r6, r1, r0
   41abc:	cmp	r5, r6
   41ac0:	bhi	41a84 <flatcc_json_printer_double_vector_field@@Base+0x11c>
   41ac4:	mov	r1, #32
   41ac8:	mov	r2, r5
   41acc:	bl	14ee4 <memset@plt>
   41ad0:	ldr	r0, [r4, #20]
   41ad4:	add	r0, r0, r5
   41ad8:	str	r0, [r4, #20]
   41adc:	b	41b00 <flatcc_json_printer_double_vector_field@@Base+0x198>
   41ae0:	ldr	r1, [r4, #16]
   41ae4:	cmp	r0, r1
   41ae8:	bcc	41b00 <flatcc_json_printer_double_vector_field@@Base+0x198>
   41aec:	ldr	r2, [r4, #44]	; 0x2c
   41af0:	mov	r0, r4
   41af4:	mov	r1, #0
   41af8:	blx	r2
   41afc:	ldr	r0, [r4, #20]
   41b00:	vldr	d0, [r8, #4]
   41b04:	bl	3a138 <flatcc_json_printer_fmt_float@@Base+0xc>
   41b08:	ldr	r1, [r4, #20]
   41b0c:	subs	r9, r7, #1
   41b10:	add	r0, r1, r0
   41b14:	str	r0, [r4, #20]
   41b18:	beq	41c48 <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   41b1c:	ldr	r0, [r4, #20]
   41b20:	add	r7, r8, #12
   41b24:	mov	r8, #44	; 0x2c
   41b28:	mov	sl, #10
   41b2c:	b	41b68 <flatcc_json_printer_double_vector_field@@Base+0x200>
   41b30:	mov	r1, #32
   41b34:	mov	r2, r5
   41b38:	bl	14ee4 <memset@plt>
   41b3c:	ldr	r0, [r4, #20]
   41b40:	add	r0, r0, r5
   41b44:	str	r0, [r4, #20]
   41b48:	vldr	d0, [r7]
   41b4c:	bl	3a138 <flatcc_json_printer_fmt_float@@Base+0xc>
   41b50:	ldr	r1, [r4, #20]
   41b54:	add	r7, r7, #8
   41b58:	cmp	r9, #0
   41b5c:	add	r0, r1, r0
   41b60:	str	r0, [r4, #20]
   41b64:	beq	41c48 <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   41b68:	add	r1, r0, #1
   41b6c:	sub	r9, r9, #1
   41b70:	str	r1, [r4, #20]
   41b74:	strb	r8, [r0]
   41b78:	ldrb	r1, [r4, #25]
   41b7c:	ldr	r0, [r4, #20]
   41b80:	cmp	r1, #0
   41b84:	beq	41c24 <flatcc_json_printer_double_vector_field@@Base+0x2bc>
   41b88:	add	r1, r0, #1
   41b8c:	str	r1, [r4, #20]
   41b90:	strb	sl, [r0]
   41b94:	ldr	r0, [r4, #20]
   41b98:	ldrb	r2, [r4, #25]
   41b9c:	ldr	r3, [r4, #32]
   41ba0:	ldr	r1, [r4, #16]
   41ba4:	mla	r6, r3, r2, r0
   41ba8:	mul	r5, r3, r2
   41bac:	cmp	r6, r1
   41bb0:	bls	41b30 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   41bb4:	cmp	r0, r1
   41bb8:	bcc	41bd4 <flatcc_json_printer_double_vector_field@@Base+0x26c>
   41bbc:	ldr	r2, [r4, #44]	; 0x2c
   41bc0:	mov	r0, r4
   41bc4:	mov	r1, #0
   41bc8:	blx	r2
   41bcc:	ldr	r1, [r4, #16]
   41bd0:	ldr	r0, [r4, #20]
   41bd4:	sub	r6, r1, r0
   41bd8:	cmp	r6, r5
   41bdc:	bcs	41b30 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   41be0:	mov	r1, #32
   41be4:	mov	r2, r6
   41be8:	bl	14ee4 <memset@plt>
   41bec:	ldr	r0, [r4, #20]
   41bf0:	ldr	r2, [r4, #44]	; 0x2c
   41bf4:	mov	r1, #0
   41bf8:	add	r0, r0, r6
   41bfc:	str	r0, [r4, #20]
   41c00:	mov	r0, r4
   41c04:	blx	r2
   41c08:	ldr	r1, [r4, #16]
   41c0c:	ldr	r0, [r4, #20]
   41c10:	sub	r5, r5, r6
   41c14:	sub	r6, r1, r0
   41c18:	cmp	r5, r6
   41c1c:	bhi	41be0 <flatcc_json_printer_double_vector_field@@Base+0x278>
   41c20:	b	41b30 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   41c24:	ldr	r1, [r4, #16]
   41c28:	cmp	r0, r1
   41c2c:	bcc	41b48 <flatcc_json_printer_double_vector_field@@Base+0x1e0>
   41c30:	ldr	r2, [r4, #44]	; 0x2c
   41c34:	mov	r0, r4
   41c38:	mov	r1, #0
   41c3c:	blx	r2
   41c40:	ldr	r0, [r4, #20]
   41c44:	b	41b48 <flatcc_json_printer_double_vector_field@@Base+0x1e0>
   41c48:	ldrb	r1, [r4, #25]
   41c4c:	ldr	r0, [r4, #20]
   41c50:	cmp	r1, #0
   41c54:	beq	41d14 <flatcc_json_printer_double_vector_field@@Base+0x3ac>
   41c58:	add	r1, r0, #1
   41c5c:	str	r1, [r4, #20]
   41c60:	mov	r1, #10
   41c64:	strb	r1, [r0]
   41c68:	ldr	r0, [r4, #32]
   41c6c:	sub	r2, r0, #1
   41c70:	str	r2, [r4, #32]
   41c74:	ldrb	r3, [r4, #25]
   41c78:	ldr	r0, [r4, #20]
   41c7c:	ldr	r1, [r4, #16]
   41c80:	mla	r7, r2, r3, r0
   41c84:	mul	r5, r2, r3
   41c88:	cmp	r7, r1
   41c8c:	bls	41cfc <flatcc_json_printer_double_vector_field@@Base+0x394>
   41c90:	cmp	r0, r1
   41c94:	bcc	41cb0 <flatcc_json_printer_double_vector_field@@Base+0x348>
   41c98:	ldr	r2, [r4, #44]	; 0x2c
   41c9c:	mov	r0, r4
   41ca0:	mov	r1, #0
   41ca4:	blx	r2
   41ca8:	ldr	r1, [r4, #16]
   41cac:	ldr	r0, [r4, #20]
   41cb0:	sub	r6, r1, r0
   41cb4:	cmp	r6, r5
   41cb8:	bcs	41cfc <flatcc_json_printer_double_vector_field@@Base+0x394>
   41cbc:	mov	r1, #32
   41cc0:	mov	r2, r6
   41cc4:	bl	14ee4 <memset@plt>
   41cc8:	ldr	r0, [r4, #20]
   41ccc:	ldr	r2, [r4, #44]	; 0x2c
   41cd0:	mov	r1, #0
   41cd4:	add	r0, r0, r6
   41cd8:	str	r0, [r4, #20]
   41cdc:	mov	r0, r4
   41ce0:	blx	r2
   41ce4:	ldr	r1, [r4, #16]
   41ce8:	ldr	r0, [r4, #20]
   41cec:	sub	r5, r5, r6
   41cf0:	sub	r6, r1, r0
   41cf4:	cmp	r5, r6
   41cf8:	bhi	41cbc <flatcc_json_printer_double_vector_field@@Base+0x354>
   41cfc:	mov	r1, #32
   41d00:	mov	r2, r5
   41d04:	bl	14ee4 <memset@plt>
   41d08:	ldr	r0, [r4, #20]
   41d0c:	add	r0, r0, r5
   41d10:	str	r0, [r4, #20]
   41d14:	add	r1, r0, #1
   41d18:	str	r1, [r4, #20]
   41d1c:	mov	r1, #93	; 0x5d
   41d20:	strb	r1, [r0]
   41d24:	sub	sp, fp, #28
   41d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041d2c <flatcc_json_printer_utype_enum_vector_field@@Base>:
   41d2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41d30:	add	fp, sp, #28
   41d34:	sub	sp, sp, #4
   41d38:	mov	r4, r0
   41d3c:	ldrb	r0, [r0, #27]
   41d40:	cmp	r0, #0
   41d44:	beq	41d58 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   41d48:	mov	r0, r4
   41d4c:	sub	sp, fp, #28
   41d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41d54:	b	3eabc <flatcc_json_printer_utype_vector_field@@Base>
   41d58:	mov	r0, #4
   41d5c:	add	r0, r0, r2, lsl #1
   41d60:	ldr	r2, [r1, #8]
   41d64:	cmp	r0, r2
   41d68:	bge	41d88 <flatcc_json_printer_utype_enum_vector_field@@Base+0x5c>
   41d6c:	ldr	r2, [r1, #4]
   41d70:	add	r0, r2, r0
   41d74:	ldrh	r0, [r0]
   41d78:	cmp	r0, #0
   41d7c:	ldrne	r2, [r1]
   41d80:	addsne	r8, r2, r0
   41d84:	bne	41d90 <flatcc_json_printer_utype_enum_vector_field@@Base+0x64>
   41d88:	sub	sp, fp, #28
   41d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41d90:	ldr	r0, [r1, #16]
   41d94:	ldr	sl, [fp, #12]
   41d98:	ldr	r2, [fp, #8]
   41d9c:	add	r7, r0, #1
   41da0:	cmp	r0, #0
   41da4:	str	r7, [r1, #16]
   41da8:	beq	41dc0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x94>
   41dac:	ldr	r0, [r4, #20]
   41db0:	add	r1, r0, #1
   41db4:	str	r1, [r4, #20]
   41db8:	mov	r1, #44	; 0x2c
   41dbc:	strb	r1, [r0]
   41dc0:	ldr	r0, [r8]
   41dc4:	mov	r1, r3
   41dc8:	ldr	r9, [r8, r0]!
   41dcc:	mov	r0, r4
   41dd0:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   41dd4:	ldr	r1, [r4, #32]
   41dd8:	ldr	r0, [r4, #20]
   41ddc:	cmp	r9, #0
   41de0:	add	r1, r1, #1
   41de4:	str	r1, [r4, #32]
   41de8:	add	r1, r0, #1
   41dec:	str	r1, [r4, #20]
   41df0:	mov	r1, #91	; 0x5b
   41df4:	strb	r1, [r0]
   41df8:	beq	42010 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   41dfc:	ldrb	r1, [r4, #25]
   41e00:	ldr	r0, [r4, #20]
   41e04:	cmp	r1, #0
   41e08:	beq	41ec4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x198>
   41e0c:	add	r1, r0, #1
   41e10:	str	r1, [r4, #20]
   41e14:	mov	r1, #10
   41e18:	strb	r1, [r0]
   41e1c:	ldr	r0, [r4, #20]
   41e20:	ldrb	r2, [r4, #25]
   41e24:	ldr	r3, [r4, #32]
   41e28:	ldr	r1, [r4, #16]
   41e2c:	mla	r7, r3, r2, r0
   41e30:	mul	r5, r3, r2
   41e34:	cmp	r7, r1
   41e38:	bls	41ea8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x17c>
   41e3c:	cmp	r0, r1
   41e40:	bcc	41e5c <flatcc_json_printer_utype_enum_vector_field@@Base+0x130>
   41e44:	ldr	r2, [r4, #44]	; 0x2c
   41e48:	mov	r0, r4
   41e4c:	mov	r1, #0
   41e50:	blx	r2
   41e54:	ldr	r1, [r4, #16]
   41e58:	ldr	r0, [r4, #20]
   41e5c:	sub	r6, r1, r0
   41e60:	cmp	r6, r5
   41e64:	bcs	41ea8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x17c>
   41e68:	mov	r1, #32
   41e6c:	mov	r2, r6
   41e70:	bl	14ee4 <memset@plt>
   41e74:	ldr	r0, [r4, #20]
   41e78:	ldr	r2, [r4, #44]	; 0x2c
   41e7c:	mov	r1, #0
   41e80:	add	r0, r0, r6
   41e84:	str	r0, [r4, #20]
   41e88:	mov	r0, r4
   41e8c:	blx	r2
   41e90:	ldr	r1, [r4, #16]
   41e94:	ldr	r0, [r4, #20]
   41e98:	sub	r5, r5, r6
   41e9c:	sub	r6, r1, r0
   41ea0:	cmp	r5, r6
   41ea4:	bhi	41e68 <flatcc_json_printer_utype_enum_vector_field@@Base+0x13c>
   41ea8:	mov	r1, #32
   41eac:	mov	r2, r5
   41eb0:	bl	14ee4 <memset@plt>
   41eb4:	ldr	r0, [r4, #20]
   41eb8:	add	r0, r0, r5
   41ebc:	str	r0, [r4, #20]
   41ec0:	b	41ee0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b4>
   41ec4:	ldr	r1, [r4, #16]
   41ec8:	cmp	r0, r1
   41ecc:	bcc	41ee0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b4>
   41ed0:	ldr	r2, [r4, #44]	; 0x2c
   41ed4:	mov	r0, r4
   41ed8:	mov	r1, #0
   41edc:	blx	r2
   41ee0:	ldrb	r1, [r8, #4]
   41ee4:	mov	r0, r4
   41ee8:	blx	sl
   41eec:	subs	r9, r9, #1
   41ef0:	beq	42010 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   41ef4:	add	r7, r8, #5
   41ef8:	mov	r8, #44	; 0x2c
   41efc:	b	41f2c <flatcc_json_printer_utype_enum_vector_field@@Base+0x200>
   41f00:	mov	r1, #32
   41f04:	mov	r2, r5
   41f08:	bl	14ee4 <memset@plt>
   41f0c:	ldr	r0, [r4, #20]
   41f10:	add	r0, r0, r5
   41f14:	str	r0, [r4, #20]
   41f18:	ldrb	r1, [r7], #1
   41f1c:	mov	r0, r4
   41f20:	blx	sl
   41f24:	cmp	r9, #0
   41f28:	beq	42010 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   41f2c:	ldr	r0, [r4, #20]
   41f30:	sub	r9, r9, #1
   41f34:	add	r1, r0, #1
   41f38:	str	r1, [r4, #20]
   41f3c:	strb	r8, [r0]
   41f40:	ldrb	r1, [r4, #25]
   41f44:	ldr	r0, [r4, #20]
   41f48:	cmp	r1, #0
   41f4c:	beq	41ff0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   41f50:	add	r1, r0, #1
   41f54:	str	r1, [r4, #20]
   41f58:	mov	r1, #10
   41f5c:	strb	r1, [r0]
   41f60:	ldr	r0, [r4, #20]
   41f64:	ldrb	r2, [r4, #25]
   41f68:	ldr	r3, [r4, #32]
   41f6c:	ldr	r1, [r4, #16]
   41f70:	mla	r6, r3, r2, r0
   41f74:	mul	r5, r3, r2
   41f78:	cmp	r6, r1
   41f7c:	bls	41f00 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   41f80:	cmp	r0, r1
   41f84:	bcc	41fa0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x274>
   41f88:	ldr	r2, [r4, #44]	; 0x2c
   41f8c:	mov	r0, r4
   41f90:	mov	r1, #0
   41f94:	blx	r2
   41f98:	ldr	r1, [r4, #16]
   41f9c:	ldr	r0, [r4, #20]
   41fa0:	sub	r6, r1, r0
   41fa4:	cmp	r6, r5
   41fa8:	bcs	41f00 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   41fac:	mov	r1, #32
   41fb0:	mov	r2, r6
   41fb4:	bl	14ee4 <memset@plt>
   41fb8:	ldr	r0, [r4, #20]
   41fbc:	ldr	r2, [r4, #44]	; 0x2c
   41fc0:	mov	r1, #0
   41fc4:	add	r0, r0, r6
   41fc8:	str	r0, [r4, #20]
   41fcc:	mov	r0, r4
   41fd0:	blx	r2
   41fd4:	ldr	r1, [r4, #16]
   41fd8:	ldr	r0, [r4, #20]
   41fdc:	sub	r5, r5, r6
   41fe0:	sub	r6, r1, r0
   41fe4:	cmp	r5, r6
   41fe8:	bhi	41fac <flatcc_json_printer_utype_enum_vector_field@@Base+0x280>
   41fec:	b	41f00 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   41ff0:	ldr	r1, [r4, #16]
   41ff4:	cmp	r0, r1
   41ff8:	bcc	41f18 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
   41ffc:	ldr	r2, [r4, #44]	; 0x2c
   42000:	mov	r0, r4
   42004:	mov	r1, #0
   42008:	blx	r2
   4200c:	b	41f18 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
   42010:	ldrb	r1, [r4, #25]
   42014:	ldr	r0, [r4, #20]
   42018:	cmp	r1, #0
   4201c:	beq	420dc <flatcc_json_printer_utype_enum_vector_field@@Base+0x3b0>
   42020:	add	r1, r0, #1
   42024:	str	r1, [r4, #20]
   42028:	mov	r1, #10
   4202c:	strb	r1, [r0]
   42030:	ldr	r0, [r4, #32]
   42034:	sub	r2, r0, #1
   42038:	str	r2, [r4, #32]
   4203c:	ldrb	r3, [r4, #25]
   42040:	ldr	r0, [r4, #20]
   42044:	ldr	r1, [r4, #16]
   42048:	mla	r7, r2, r3, r0
   4204c:	mul	r5, r2, r3
   42050:	cmp	r7, r1
   42054:	bls	420c4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x398>
   42058:	cmp	r0, r1
   4205c:	bcc	42078 <flatcc_json_printer_utype_enum_vector_field@@Base+0x34c>
   42060:	ldr	r2, [r4, #44]	; 0x2c
   42064:	mov	r0, r4
   42068:	mov	r1, #0
   4206c:	blx	r2
   42070:	ldr	r1, [r4, #16]
   42074:	ldr	r0, [r4, #20]
   42078:	sub	r6, r1, r0
   4207c:	cmp	r6, r5
   42080:	bcs	420c4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x398>
   42084:	mov	r1, #32
   42088:	mov	r2, r6
   4208c:	bl	14ee4 <memset@plt>
   42090:	ldr	r0, [r4, #20]
   42094:	ldr	r2, [r4, #44]	; 0x2c
   42098:	mov	r1, #0
   4209c:	add	r0, r0, r6
   420a0:	str	r0, [r4, #20]
   420a4:	mov	r0, r4
   420a8:	blx	r2
   420ac:	ldr	r1, [r4, #16]
   420b0:	ldr	r0, [r4, #20]
   420b4:	sub	r5, r5, r6
   420b8:	sub	r6, r1, r0
   420bc:	cmp	r5, r6
   420c0:	bhi	42084 <flatcc_json_printer_utype_enum_vector_field@@Base+0x358>
   420c4:	mov	r1, #32
   420c8:	mov	r2, r5
   420cc:	bl	14ee4 <memset@plt>
   420d0:	ldr	r0, [r4, #20]
   420d4:	add	r0, r0, r5
   420d8:	str	r0, [r4, #20]
   420dc:	add	r1, r0, #1
   420e0:	str	r1, [r4, #20]
   420e4:	mov	r1, #93	; 0x5d
   420e8:	strb	r1, [r0]
   420ec:	sub	sp, fp, #28
   420f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000420f4 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   420f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   420f8:	add	fp, sp, #28
   420fc:	sub	sp, sp, #4
   42100:	mov	r4, r0
   42104:	ldrb	r0, [r0, #27]
   42108:	cmp	r0, #0
   4210c:	beq	42120 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   42110:	mov	r0, r4
   42114:	sub	sp, fp, #28
   42118:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4211c:	b	3efcc <flatcc_json_printer_uint8_vector_field@@Base>
   42120:	mov	r0, #4
   42124:	add	r0, r0, r2, lsl #1
   42128:	ldr	r2, [r1, #8]
   4212c:	cmp	r0, r2
   42130:	bge	42150 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x5c>
   42134:	ldr	r2, [r1, #4]
   42138:	add	r0, r2, r0
   4213c:	ldrh	r0, [r0]
   42140:	cmp	r0, #0
   42144:	ldrne	r2, [r1]
   42148:	addsne	r8, r2, r0
   4214c:	bne	42158 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x64>
   42150:	sub	sp, fp, #28
   42154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42158:	ldr	r0, [r1, #16]
   4215c:	ldr	sl, [fp, #12]
   42160:	ldr	r2, [fp, #8]
   42164:	add	r7, r0, #1
   42168:	cmp	r0, #0
   4216c:	str	r7, [r1, #16]
   42170:	beq	42188 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x94>
   42174:	ldr	r0, [r4, #20]
   42178:	add	r1, r0, #1
   4217c:	str	r1, [r4, #20]
   42180:	mov	r1, #44	; 0x2c
   42184:	strb	r1, [r0]
   42188:	ldr	r0, [r8]
   4218c:	mov	r1, r3
   42190:	ldr	r9, [r8, r0]!
   42194:	mov	r0, r4
   42198:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   4219c:	ldr	r1, [r4, #32]
   421a0:	ldr	r0, [r4, #20]
   421a4:	cmp	r9, #0
   421a8:	add	r1, r1, #1
   421ac:	str	r1, [r4, #32]
   421b0:	add	r1, r0, #1
   421b4:	str	r1, [r4, #20]
   421b8:	mov	r1, #91	; 0x5b
   421bc:	strb	r1, [r0]
   421c0:	beq	423d8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   421c4:	ldrb	r1, [r4, #25]
   421c8:	ldr	r0, [r4, #20]
   421cc:	cmp	r1, #0
   421d0:	beq	4228c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x198>
   421d4:	add	r1, r0, #1
   421d8:	str	r1, [r4, #20]
   421dc:	mov	r1, #10
   421e0:	strb	r1, [r0]
   421e4:	ldr	r0, [r4, #20]
   421e8:	ldrb	r2, [r4, #25]
   421ec:	ldr	r3, [r4, #32]
   421f0:	ldr	r1, [r4, #16]
   421f4:	mla	r7, r3, r2, r0
   421f8:	mul	r5, r3, r2
   421fc:	cmp	r7, r1
   42200:	bls	42270 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x17c>
   42204:	cmp	r0, r1
   42208:	bcc	42224 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x130>
   4220c:	ldr	r2, [r4, #44]	; 0x2c
   42210:	mov	r0, r4
   42214:	mov	r1, #0
   42218:	blx	r2
   4221c:	ldr	r1, [r4, #16]
   42220:	ldr	r0, [r4, #20]
   42224:	sub	r6, r1, r0
   42228:	cmp	r6, r5
   4222c:	bcs	42270 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x17c>
   42230:	mov	r1, #32
   42234:	mov	r2, r6
   42238:	bl	14ee4 <memset@plt>
   4223c:	ldr	r0, [r4, #20]
   42240:	ldr	r2, [r4, #44]	; 0x2c
   42244:	mov	r1, #0
   42248:	add	r0, r0, r6
   4224c:	str	r0, [r4, #20]
   42250:	mov	r0, r4
   42254:	blx	r2
   42258:	ldr	r1, [r4, #16]
   4225c:	ldr	r0, [r4, #20]
   42260:	sub	r5, r5, r6
   42264:	sub	r6, r1, r0
   42268:	cmp	r5, r6
   4226c:	bhi	42230 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x13c>
   42270:	mov	r1, #32
   42274:	mov	r2, r5
   42278:	bl	14ee4 <memset@plt>
   4227c:	ldr	r0, [r4, #20]
   42280:	add	r0, r0, r5
   42284:	str	r0, [r4, #20]
   42288:	b	422a8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b4>
   4228c:	ldr	r1, [r4, #16]
   42290:	cmp	r0, r1
   42294:	bcc	422a8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b4>
   42298:	ldr	r2, [r4, #44]	; 0x2c
   4229c:	mov	r0, r4
   422a0:	mov	r1, #0
   422a4:	blx	r2
   422a8:	ldrb	r1, [r8, #4]
   422ac:	mov	r0, r4
   422b0:	blx	sl
   422b4:	subs	r9, r9, #1
   422b8:	beq	423d8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   422bc:	add	r7, r8, #5
   422c0:	mov	r8, #44	; 0x2c
   422c4:	b	422f4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x200>
   422c8:	mov	r1, #32
   422cc:	mov	r2, r5
   422d0:	bl	14ee4 <memset@plt>
   422d4:	ldr	r0, [r4, #20]
   422d8:	add	r0, r0, r5
   422dc:	str	r0, [r4, #20]
   422e0:	ldrb	r1, [r7], #1
   422e4:	mov	r0, r4
   422e8:	blx	sl
   422ec:	cmp	r9, #0
   422f0:	beq	423d8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   422f4:	ldr	r0, [r4, #20]
   422f8:	sub	r9, r9, #1
   422fc:	add	r1, r0, #1
   42300:	str	r1, [r4, #20]
   42304:	strb	r8, [r0]
   42308:	ldrb	r1, [r4, #25]
   4230c:	ldr	r0, [r4, #20]
   42310:	cmp	r1, #0
   42314:	beq	423b8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   42318:	add	r1, r0, #1
   4231c:	str	r1, [r4, #20]
   42320:	mov	r1, #10
   42324:	strb	r1, [r0]
   42328:	ldr	r0, [r4, #20]
   4232c:	ldrb	r2, [r4, #25]
   42330:	ldr	r3, [r4, #32]
   42334:	ldr	r1, [r4, #16]
   42338:	mla	r6, r3, r2, r0
   4233c:	mul	r5, r3, r2
   42340:	cmp	r6, r1
   42344:	bls	422c8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   42348:	cmp	r0, r1
   4234c:	bcc	42368 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x274>
   42350:	ldr	r2, [r4, #44]	; 0x2c
   42354:	mov	r0, r4
   42358:	mov	r1, #0
   4235c:	blx	r2
   42360:	ldr	r1, [r4, #16]
   42364:	ldr	r0, [r4, #20]
   42368:	sub	r6, r1, r0
   4236c:	cmp	r6, r5
   42370:	bcs	422c8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   42374:	mov	r1, #32
   42378:	mov	r2, r6
   4237c:	bl	14ee4 <memset@plt>
   42380:	ldr	r0, [r4, #20]
   42384:	ldr	r2, [r4, #44]	; 0x2c
   42388:	mov	r1, #0
   4238c:	add	r0, r0, r6
   42390:	str	r0, [r4, #20]
   42394:	mov	r0, r4
   42398:	blx	r2
   4239c:	ldr	r1, [r4, #16]
   423a0:	ldr	r0, [r4, #20]
   423a4:	sub	r5, r5, r6
   423a8:	sub	r6, r1, r0
   423ac:	cmp	r5, r6
   423b0:	bhi	42374 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x280>
   423b4:	b	422c8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   423b8:	ldr	r1, [r4, #16]
   423bc:	cmp	r0, r1
   423c0:	bcc	422e0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
   423c4:	ldr	r2, [r4, #44]	; 0x2c
   423c8:	mov	r0, r4
   423cc:	mov	r1, #0
   423d0:	blx	r2
   423d4:	b	422e0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
   423d8:	ldrb	r1, [r4, #25]
   423dc:	ldr	r0, [r4, #20]
   423e0:	cmp	r1, #0
   423e4:	beq	424a4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3b0>
   423e8:	add	r1, r0, #1
   423ec:	str	r1, [r4, #20]
   423f0:	mov	r1, #10
   423f4:	strb	r1, [r0]
   423f8:	ldr	r0, [r4, #32]
   423fc:	sub	r2, r0, #1
   42400:	str	r2, [r4, #32]
   42404:	ldrb	r3, [r4, #25]
   42408:	ldr	r0, [r4, #20]
   4240c:	ldr	r1, [r4, #16]
   42410:	mla	r7, r2, r3, r0
   42414:	mul	r5, r2, r3
   42418:	cmp	r7, r1
   4241c:	bls	4248c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x398>
   42420:	cmp	r0, r1
   42424:	bcc	42440 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x34c>
   42428:	ldr	r2, [r4, #44]	; 0x2c
   4242c:	mov	r0, r4
   42430:	mov	r1, #0
   42434:	blx	r2
   42438:	ldr	r1, [r4, #16]
   4243c:	ldr	r0, [r4, #20]
   42440:	sub	r6, r1, r0
   42444:	cmp	r6, r5
   42448:	bcs	4248c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x398>
   4244c:	mov	r1, #32
   42450:	mov	r2, r6
   42454:	bl	14ee4 <memset@plt>
   42458:	ldr	r0, [r4, #20]
   4245c:	ldr	r2, [r4, #44]	; 0x2c
   42460:	mov	r1, #0
   42464:	add	r0, r0, r6
   42468:	str	r0, [r4, #20]
   4246c:	mov	r0, r4
   42470:	blx	r2
   42474:	ldr	r1, [r4, #16]
   42478:	ldr	r0, [r4, #20]
   4247c:	sub	r5, r5, r6
   42480:	sub	r6, r1, r0
   42484:	cmp	r5, r6
   42488:	bhi	4244c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x358>
   4248c:	mov	r1, #32
   42490:	mov	r2, r5
   42494:	bl	14ee4 <memset@plt>
   42498:	ldr	r0, [r4, #20]
   4249c:	add	r0, r0, r5
   424a0:	str	r0, [r4, #20]
   424a4:	add	r1, r0, #1
   424a8:	str	r1, [r4, #20]
   424ac:	mov	r1, #93	; 0x5d
   424b0:	strb	r1, [r0]
   424b4:	sub	sp, fp, #28
   424b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000424bc <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   424bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   424c0:	add	fp, sp, #28
   424c4:	sub	sp, sp, #4
   424c8:	mov	r4, r0
   424cc:	ldrb	r0, [r0, #27]
   424d0:	cmp	r0, #0
   424d4:	beq	424e8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   424d8:	mov	r0, r4
   424dc:	sub	sp, fp, #28
   424e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   424e4:	b	3f4dc <flatcc_json_printer_uint16_vector_field@@Base>
   424e8:	mov	r0, #4
   424ec:	add	r0, r0, r2, lsl #1
   424f0:	ldr	r2, [r1, #8]
   424f4:	cmp	r0, r2
   424f8:	bge	42518 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x5c>
   424fc:	ldr	r2, [r1, #4]
   42500:	add	r0, r2, r0
   42504:	ldrh	r0, [r0]
   42508:	cmp	r0, #0
   4250c:	ldrne	r2, [r1]
   42510:	addsne	r8, r2, r0
   42514:	bne	42520 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x64>
   42518:	sub	sp, fp, #28
   4251c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42520:	ldr	r0, [r1, #16]
   42524:	ldr	sl, [fp, #12]
   42528:	ldr	r2, [fp, #8]
   4252c:	add	r7, r0, #1
   42530:	cmp	r0, #0
   42534:	str	r7, [r1, #16]
   42538:	beq	42550 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x94>
   4253c:	ldr	r0, [r4, #20]
   42540:	add	r1, r0, #1
   42544:	str	r1, [r4, #20]
   42548:	mov	r1, #44	; 0x2c
   4254c:	strb	r1, [r0]
   42550:	ldr	r0, [r8]
   42554:	mov	r1, r3
   42558:	ldr	r9, [r8, r0]!
   4255c:	mov	r0, r4
   42560:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   42564:	ldr	r1, [r4, #32]
   42568:	ldr	r0, [r4, #20]
   4256c:	cmp	r9, #0
   42570:	add	r1, r1, #1
   42574:	str	r1, [r4, #32]
   42578:	add	r1, r0, #1
   4257c:	str	r1, [r4, #20]
   42580:	mov	r1, #91	; 0x5b
   42584:	strb	r1, [r0]
   42588:	beq	427a0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   4258c:	ldrb	r1, [r4, #25]
   42590:	ldr	r0, [r4, #20]
   42594:	cmp	r1, #0
   42598:	beq	42654 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x198>
   4259c:	add	r1, r0, #1
   425a0:	str	r1, [r4, #20]
   425a4:	mov	r1, #10
   425a8:	strb	r1, [r0]
   425ac:	ldr	r0, [r4, #20]
   425b0:	ldrb	r2, [r4, #25]
   425b4:	ldr	r3, [r4, #32]
   425b8:	ldr	r1, [r4, #16]
   425bc:	mla	r7, r3, r2, r0
   425c0:	mul	r5, r3, r2
   425c4:	cmp	r7, r1
   425c8:	bls	42638 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x17c>
   425cc:	cmp	r0, r1
   425d0:	bcc	425ec <flatcc_json_printer_uint16_enum_vector_field@@Base+0x130>
   425d4:	ldr	r2, [r4, #44]	; 0x2c
   425d8:	mov	r0, r4
   425dc:	mov	r1, #0
   425e0:	blx	r2
   425e4:	ldr	r1, [r4, #16]
   425e8:	ldr	r0, [r4, #20]
   425ec:	sub	r6, r1, r0
   425f0:	cmp	r6, r5
   425f4:	bcs	42638 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x17c>
   425f8:	mov	r1, #32
   425fc:	mov	r2, r6
   42600:	bl	14ee4 <memset@plt>
   42604:	ldr	r0, [r4, #20]
   42608:	ldr	r2, [r4, #44]	; 0x2c
   4260c:	mov	r1, #0
   42610:	add	r0, r0, r6
   42614:	str	r0, [r4, #20]
   42618:	mov	r0, r4
   4261c:	blx	r2
   42620:	ldr	r1, [r4, #16]
   42624:	ldr	r0, [r4, #20]
   42628:	sub	r5, r5, r6
   4262c:	sub	r6, r1, r0
   42630:	cmp	r5, r6
   42634:	bhi	425f8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x13c>
   42638:	mov	r1, #32
   4263c:	mov	r2, r5
   42640:	bl	14ee4 <memset@plt>
   42644:	ldr	r0, [r4, #20]
   42648:	add	r0, r0, r5
   4264c:	str	r0, [r4, #20]
   42650:	b	42670 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   42654:	ldr	r1, [r4, #16]
   42658:	cmp	r0, r1
   4265c:	bcc	42670 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   42660:	ldr	r2, [r4, #44]	; 0x2c
   42664:	mov	r0, r4
   42668:	mov	r1, #0
   4266c:	blx	r2
   42670:	ldrh	r1, [r8, #4]
   42674:	mov	r0, r4
   42678:	blx	sl
   4267c:	subs	r9, r9, #1
   42680:	beq	427a0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   42684:	add	r7, r8, #6
   42688:	mov	r8, #44	; 0x2c
   4268c:	b	426bc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x200>
   42690:	mov	r1, #32
   42694:	mov	r2, r5
   42698:	bl	14ee4 <memset@plt>
   4269c:	ldr	r0, [r4, #20]
   426a0:	add	r0, r0, r5
   426a4:	str	r0, [r4, #20]
   426a8:	ldrh	r1, [r7], #2
   426ac:	mov	r0, r4
   426b0:	blx	sl
   426b4:	cmp	r9, #0
   426b8:	beq	427a0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   426bc:	ldr	r0, [r4, #20]
   426c0:	sub	r9, r9, #1
   426c4:	add	r1, r0, #1
   426c8:	str	r1, [r4, #20]
   426cc:	strb	r8, [r0]
   426d0:	ldrb	r1, [r4, #25]
   426d4:	ldr	r0, [r4, #20]
   426d8:	cmp	r1, #0
   426dc:	beq	42780 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   426e0:	add	r1, r0, #1
   426e4:	str	r1, [r4, #20]
   426e8:	mov	r1, #10
   426ec:	strb	r1, [r0]
   426f0:	ldr	r0, [r4, #20]
   426f4:	ldrb	r2, [r4, #25]
   426f8:	ldr	r3, [r4, #32]
   426fc:	ldr	r1, [r4, #16]
   42700:	mla	r6, r3, r2, r0
   42704:	mul	r5, r3, r2
   42708:	cmp	r6, r1
   4270c:	bls	42690 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   42710:	cmp	r0, r1
   42714:	bcc	42730 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x274>
   42718:	ldr	r2, [r4, #44]	; 0x2c
   4271c:	mov	r0, r4
   42720:	mov	r1, #0
   42724:	blx	r2
   42728:	ldr	r1, [r4, #16]
   4272c:	ldr	r0, [r4, #20]
   42730:	sub	r6, r1, r0
   42734:	cmp	r6, r5
   42738:	bcs	42690 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   4273c:	mov	r1, #32
   42740:	mov	r2, r6
   42744:	bl	14ee4 <memset@plt>
   42748:	ldr	r0, [r4, #20]
   4274c:	ldr	r2, [r4, #44]	; 0x2c
   42750:	mov	r1, #0
   42754:	add	r0, r0, r6
   42758:	str	r0, [r4, #20]
   4275c:	mov	r0, r4
   42760:	blx	r2
   42764:	ldr	r1, [r4, #16]
   42768:	ldr	r0, [r4, #20]
   4276c:	sub	r5, r5, r6
   42770:	sub	r6, r1, r0
   42774:	cmp	r5, r6
   42778:	bhi	4273c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x280>
   4277c:	b	42690 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   42780:	ldr	r1, [r4, #16]
   42784:	cmp	r0, r1
   42788:	bcc	426a8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   4278c:	ldr	r2, [r4, #44]	; 0x2c
   42790:	mov	r0, r4
   42794:	mov	r1, #0
   42798:	blx	r2
   4279c:	b	426a8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   427a0:	ldrb	r1, [r4, #25]
   427a4:	ldr	r0, [r4, #20]
   427a8:	cmp	r1, #0
   427ac:	beq	4286c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3b0>
   427b0:	add	r1, r0, #1
   427b4:	str	r1, [r4, #20]
   427b8:	mov	r1, #10
   427bc:	strb	r1, [r0]
   427c0:	ldr	r0, [r4, #32]
   427c4:	sub	r2, r0, #1
   427c8:	str	r2, [r4, #32]
   427cc:	ldrb	r3, [r4, #25]
   427d0:	ldr	r0, [r4, #20]
   427d4:	ldr	r1, [r4, #16]
   427d8:	mla	r7, r2, r3, r0
   427dc:	mul	r5, r2, r3
   427e0:	cmp	r7, r1
   427e4:	bls	42854 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x398>
   427e8:	cmp	r0, r1
   427ec:	bcc	42808 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x34c>
   427f0:	ldr	r2, [r4, #44]	; 0x2c
   427f4:	mov	r0, r4
   427f8:	mov	r1, #0
   427fc:	blx	r2
   42800:	ldr	r1, [r4, #16]
   42804:	ldr	r0, [r4, #20]
   42808:	sub	r6, r1, r0
   4280c:	cmp	r6, r5
   42810:	bcs	42854 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x398>
   42814:	mov	r1, #32
   42818:	mov	r2, r6
   4281c:	bl	14ee4 <memset@plt>
   42820:	ldr	r0, [r4, #20]
   42824:	ldr	r2, [r4, #44]	; 0x2c
   42828:	mov	r1, #0
   4282c:	add	r0, r0, r6
   42830:	str	r0, [r4, #20]
   42834:	mov	r0, r4
   42838:	blx	r2
   4283c:	ldr	r1, [r4, #16]
   42840:	ldr	r0, [r4, #20]
   42844:	sub	r5, r5, r6
   42848:	sub	r6, r1, r0
   4284c:	cmp	r5, r6
   42850:	bhi	42814 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x358>
   42854:	mov	r1, #32
   42858:	mov	r2, r5
   4285c:	bl	14ee4 <memset@plt>
   42860:	ldr	r0, [r4, #20]
   42864:	add	r0, r0, r5
   42868:	str	r0, [r4, #20]
   4286c:	add	r1, r0, #1
   42870:	str	r1, [r4, #20]
   42874:	mov	r1, #93	; 0x5d
   42878:	strb	r1, [r0]
   4287c:	sub	sp, fp, #28
   42880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042884 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   42884:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42888:	add	fp, sp, #28
   4288c:	sub	sp, sp, #4
   42890:	mov	r4, r0
   42894:	ldrb	r0, [r0, #27]
   42898:	cmp	r0, #0
   4289c:	beq	428b0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   428a0:	mov	r0, r4
   428a4:	sub	sp, fp, #28
   428a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   428ac:	b	3f89c <flatcc_json_printer_uint32_vector_field@@Base>
   428b0:	mov	r0, #4
   428b4:	add	r0, r0, r2, lsl #1
   428b8:	ldr	r2, [r1, #8]
   428bc:	cmp	r0, r2
   428c0:	bge	428e0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x5c>
   428c4:	ldr	r2, [r1, #4]
   428c8:	add	r0, r2, r0
   428cc:	ldrh	r0, [r0]
   428d0:	cmp	r0, #0
   428d4:	ldrne	r2, [r1]
   428d8:	addsne	r8, r2, r0
   428dc:	bne	428e8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x64>
   428e0:	sub	sp, fp, #28
   428e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   428e8:	ldr	r0, [r1, #16]
   428ec:	ldr	sl, [fp, #12]
   428f0:	ldr	r2, [fp, #8]
   428f4:	add	r7, r0, #1
   428f8:	cmp	r0, #0
   428fc:	str	r7, [r1, #16]
   42900:	beq	42918 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x94>
   42904:	ldr	r0, [r4, #20]
   42908:	add	r1, r0, #1
   4290c:	str	r1, [r4, #20]
   42910:	mov	r1, #44	; 0x2c
   42914:	strb	r1, [r0]
   42918:	ldr	r0, [r8]
   4291c:	mov	r1, r3
   42920:	ldr	r9, [r8, r0]!
   42924:	mov	r0, r4
   42928:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   4292c:	ldr	r1, [r4, #32]
   42930:	ldr	r0, [r4, #20]
   42934:	cmp	r9, #0
   42938:	add	r1, r1, #1
   4293c:	str	r1, [r4, #32]
   42940:	add	r1, r0, #1
   42944:	str	r1, [r4, #20]
   42948:	mov	r1, #91	; 0x5b
   4294c:	strb	r1, [r0]
   42950:	beq	42b68 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   42954:	ldrb	r1, [r4, #25]
   42958:	ldr	r0, [r4, #20]
   4295c:	cmp	r1, #0
   42960:	beq	42a1c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x198>
   42964:	add	r1, r0, #1
   42968:	str	r1, [r4, #20]
   4296c:	mov	r1, #10
   42970:	strb	r1, [r0]
   42974:	ldr	r0, [r4, #20]
   42978:	ldrb	r2, [r4, #25]
   4297c:	ldr	r3, [r4, #32]
   42980:	ldr	r1, [r4, #16]
   42984:	mla	r7, r3, r2, r0
   42988:	mul	r5, r3, r2
   4298c:	cmp	r7, r1
   42990:	bls	42a00 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x17c>
   42994:	cmp	r0, r1
   42998:	bcc	429b4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x130>
   4299c:	ldr	r2, [r4, #44]	; 0x2c
   429a0:	mov	r0, r4
   429a4:	mov	r1, #0
   429a8:	blx	r2
   429ac:	ldr	r1, [r4, #16]
   429b0:	ldr	r0, [r4, #20]
   429b4:	sub	r6, r1, r0
   429b8:	cmp	r6, r5
   429bc:	bcs	42a00 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x17c>
   429c0:	mov	r1, #32
   429c4:	mov	r2, r6
   429c8:	bl	14ee4 <memset@plt>
   429cc:	ldr	r0, [r4, #20]
   429d0:	ldr	r2, [r4, #44]	; 0x2c
   429d4:	mov	r1, #0
   429d8:	add	r0, r0, r6
   429dc:	str	r0, [r4, #20]
   429e0:	mov	r0, r4
   429e4:	blx	r2
   429e8:	ldr	r1, [r4, #16]
   429ec:	ldr	r0, [r4, #20]
   429f0:	sub	r5, r5, r6
   429f4:	sub	r6, r1, r0
   429f8:	cmp	r5, r6
   429fc:	bhi	429c0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x13c>
   42a00:	mov	r1, #32
   42a04:	mov	r2, r5
   42a08:	bl	14ee4 <memset@plt>
   42a0c:	ldr	r0, [r4, #20]
   42a10:	add	r0, r0, r5
   42a14:	str	r0, [r4, #20]
   42a18:	b	42a38 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   42a1c:	ldr	r1, [r4, #16]
   42a20:	cmp	r0, r1
   42a24:	bcc	42a38 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   42a28:	ldr	r2, [r4, #44]	; 0x2c
   42a2c:	mov	r0, r4
   42a30:	mov	r1, #0
   42a34:	blx	r2
   42a38:	ldr	r1, [r8, #4]
   42a3c:	mov	r0, r4
   42a40:	blx	sl
   42a44:	subs	r9, r9, #1
   42a48:	beq	42b68 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   42a4c:	add	r7, r8, #8
   42a50:	mov	r8, #44	; 0x2c
   42a54:	b	42a84 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x200>
   42a58:	mov	r1, #32
   42a5c:	mov	r2, r5
   42a60:	bl	14ee4 <memset@plt>
   42a64:	ldr	r0, [r4, #20]
   42a68:	add	r0, r0, r5
   42a6c:	str	r0, [r4, #20]
   42a70:	ldr	r1, [r7], #4
   42a74:	mov	r0, r4
   42a78:	blx	sl
   42a7c:	cmp	r9, #0
   42a80:	beq	42b68 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   42a84:	ldr	r0, [r4, #20]
   42a88:	sub	r9, r9, #1
   42a8c:	add	r1, r0, #1
   42a90:	str	r1, [r4, #20]
   42a94:	strb	r8, [r0]
   42a98:	ldrb	r1, [r4, #25]
   42a9c:	ldr	r0, [r4, #20]
   42aa0:	cmp	r1, #0
   42aa4:	beq	42b48 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   42aa8:	add	r1, r0, #1
   42aac:	str	r1, [r4, #20]
   42ab0:	mov	r1, #10
   42ab4:	strb	r1, [r0]
   42ab8:	ldr	r0, [r4, #20]
   42abc:	ldrb	r2, [r4, #25]
   42ac0:	ldr	r3, [r4, #32]
   42ac4:	ldr	r1, [r4, #16]
   42ac8:	mla	r6, r3, r2, r0
   42acc:	mul	r5, r3, r2
   42ad0:	cmp	r6, r1
   42ad4:	bls	42a58 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   42ad8:	cmp	r0, r1
   42adc:	bcc	42af8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x274>
   42ae0:	ldr	r2, [r4, #44]	; 0x2c
   42ae4:	mov	r0, r4
   42ae8:	mov	r1, #0
   42aec:	blx	r2
   42af0:	ldr	r1, [r4, #16]
   42af4:	ldr	r0, [r4, #20]
   42af8:	sub	r6, r1, r0
   42afc:	cmp	r6, r5
   42b00:	bcs	42a58 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   42b04:	mov	r1, #32
   42b08:	mov	r2, r6
   42b0c:	bl	14ee4 <memset@plt>
   42b10:	ldr	r0, [r4, #20]
   42b14:	ldr	r2, [r4, #44]	; 0x2c
   42b18:	mov	r1, #0
   42b1c:	add	r0, r0, r6
   42b20:	str	r0, [r4, #20]
   42b24:	mov	r0, r4
   42b28:	blx	r2
   42b2c:	ldr	r1, [r4, #16]
   42b30:	ldr	r0, [r4, #20]
   42b34:	sub	r5, r5, r6
   42b38:	sub	r6, r1, r0
   42b3c:	cmp	r5, r6
   42b40:	bhi	42b04 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x280>
   42b44:	b	42a58 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   42b48:	ldr	r1, [r4, #16]
   42b4c:	cmp	r0, r1
   42b50:	bcc	42a70 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
   42b54:	ldr	r2, [r4, #44]	; 0x2c
   42b58:	mov	r0, r4
   42b5c:	mov	r1, #0
   42b60:	blx	r2
   42b64:	b	42a70 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
   42b68:	ldrb	r1, [r4, #25]
   42b6c:	ldr	r0, [r4, #20]
   42b70:	cmp	r1, #0
   42b74:	beq	42c34 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3b0>
   42b78:	add	r1, r0, #1
   42b7c:	str	r1, [r4, #20]
   42b80:	mov	r1, #10
   42b84:	strb	r1, [r0]
   42b88:	ldr	r0, [r4, #32]
   42b8c:	sub	r2, r0, #1
   42b90:	str	r2, [r4, #32]
   42b94:	ldrb	r3, [r4, #25]
   42b98:	ldr	r0, [r4, #20]
   42b9c:	ldr	r1, [r4, #16]
   42ba0:	mla	r7, r2, r3, r0
   42ba4:	mul	r5, r2, r3
   42ba8:	cmp	r7, r1
   42bac:	bls	42c1c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x398>
   42bb0:	cmp	r0, r1
   42bb4:	bcc	42bd0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x34c>
   42bb8:	ldr	r2, [r4, #44]	; 0x2c
   42bbc:	mov	r0, r4
   42bc0:	mov	r1, #0
   42bc4:	blx	r2
   42bc8:	ldr	r1, [r4, #16]
   42bcc:	ldr	r0, [r4, #20]
   42bd0:	sub	r6, r1, r0
   42bd4:	cmp	r6, r5
   42bd8:	bcs	42c1c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x398>
   42bdc:	mov	r1, #32
   42be0:	mov	r2, r6
   42be4:	bl	14ee4 <memset@plt>
   42be8:	ldr	r0, [r4, #20]
   42bec:	ldr	r2, [r4, #44]	; 0x2c
   42bf0:	mov	r1, #0
   42bf4:	add	r0, r0, r6
   42bf8:	str	r0, [r4, #20]
   42bfc:	mov	r0, r4
   42c00:	blx	r2
   42c04:	ldr	r1, [r4, #16]
   42c08:	ldr	r0, [r4, #20]
   42c0c:	sub	r5, r5, r6
   42c10:	sub	r6, r1, r0
   42c14:	cmp	r5, r6
   42c18:	bhi	42bdc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x358>
   42c1c:	mov	r1, #32
   42c20:	mov	r2, r5
   42c24:	bl	14ee4 <memset@plt>
   42c28:	ldr	r0, [r4, #20]
   42c2c:	add	r0, r0, r5
   42c30:	str	r0, [r4, #20]
   42c34:	add	r1, r0, #1
   42c38:	str	r1, [r4, #20]
   42c3c:	mov	r1, #93	; 0x5d
   42c40:	strb	r1, [r0]
   42c44:	sub	sp, fp, #28
   42c48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042c4c <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   42c4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42c50:	add	fp, sp, #28
   42c54:	sub	sp, sp, #4
   42c58:	mov	r4, r0
   42c5c:	ldrb	r0, [r0, #27]
   42c60:	cmp	r0, #0
   42c64:	beq	42c78 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   42c68:	mov	r0, r4
   42c6c:	sub	sp, fp, #28
   42c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42c74:	b	3fc5c <flatcc_json_printer_uint64_vector_field@@Base>
   42c78:	mov	r0, #4
   42c7c:	add	r0, r0, r2, lsl #1
   42c80:	ldr	r2, [r1, #8]
   42c84:	cmp	r0, r2
   42c88:	bge	42ca8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x5c>
   42c8c:	ldr	r2, [r1, #4]
   42c90:	add	r0, r2, r0
   42c94:	ldrh	r0, [r0]
   42c98:	cmp	r0, #0
   42c9c:	ldrne	r2, [r1]
   42ca0:	addsne	r8, r2, r0
   42ca4:	bne	42cb0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x64>
   42ca8:	sub	sp, fp, #28
   42cac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42cb0:	ldr	r0, [r1, #16]
   42cb4:	ldr	sl, [fp, #12]
   42cb8:	ldr	r2, [fp, #8]
   42cbc:	add	r7, r0, #1
   42cc0:	cmp	r0, #0
   42cc4:	str	r7, [r1, #16]
   42cc8:	beq	42ce0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x94>
   42ccc:	ldr	r0, [r4, #20]
   42cd0:	add	r1, r0, #1
   42cd4:	str	r1, [r4, #20]
   42cd8:	mov	r1, #44	; 0x2c
   42cdc:	strb	r1, [r0]
   42ce0:	ldr	r0, [r8]
   42ce4:	mov	r1, r3
   42ce8:	ldr	r9, [r8, r0]!
   42cec:	mov	r0, r4
   42cf0:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   42cf4:	ldr	r1, [r4, #32]
   42cf8:	ldr	r0, [r4, #20]
   42cfc:	cmp	r9, #0
   42d00:	add	r1, r1, #1
   42d04:	str	r1, [r4, #32]
   42d08:	add	r1, r0, #1
   42d0c:	str	r1, [r4, #20]
   42d10:	mov	r1, #91	; 0x5b
   42d14:	strb	r1, [r0]
   42d18:	beq	42f34 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   42d1c:	ldrb	r1, [r4, #25]
   42d20:	ldr	r0, [r4, #20]
   42d24:	cmp	r1, #0
   42d28:	beq	42de4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x198>
   42d2c:	add	r1, r0, #1
   42d30:	str	r1, [r4, #20]
   42d34:	mov	r1, #10
   42d38:	strb	r1, [r0]
   42d3c:	ldr	r0, [r4, #20]
   42d40:	ldrb	r2, [r4, #25]
   42d44:	ldr	r3, [r4, #32]
   42d48:	ldr	r1, [r4, #16]
   42d4c:	mla	r7, r3, r2, r0
   42d50:	mul	r5, r3, r2
   42d54:	cmp	r7, r1
   42d58:	bls	42dc8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x17c>
   42d5c:	cmp	r0, r1
   42d60:	bcc	42d7c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x130>
   42d64:	ldr	r2, [r4, #44]	; 0x2c
   42d68:	mov	r0, r4
   42d6c:	mov	r1, #0
   42d70:	blx	r2
   42d74:	ldr	r1, [r4, #16]
   42d78:	ldr	r0, [r4, #20]
   42d7c:	sub	r6, r1, r0
   42d80:	cmp	r6, r5
   42d84:	bcs	42dc8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x17c>
   42d88:	mov	r1, #32
   42d8c:	mov	r2, r6
   42d90:	bl	14ee4 <memset@plt>
   42d94:	ldr	r0, [r4, #20]
   42d98:	ldr	r2, [r4, #44]	; 0x2c
   42d9c:	mov	r1, #0
   42da0:	add	r0, r0, r6
   42da4:	str	r0, [r4, #20]
   42da8:	mov	r0, r4
   42dac:	blx	r2
   42db0:	ldr	r1, [r4, #16]
   42db4:	ldr	r0, [r4, #20]
   42db8:	sub	r5, r5, r6
   42dbc:	sub	r6, r1, r0
   42dc0:	cmp	r5, r6
   42dc4:	bhi	42d88 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x13c>
   42dc8:	mov	r1, #32
   42dcc:	mov	r2, r5
   42dd0:	bl	14ee4 <memset@plt>
   42dd4:	ldr	r0, [r4, #20]
   42dd8:	add	r0, r0, r5
   42ddc:	str	r0, [r4, #20]
   42de0:	b	42e00 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   42de4:	ldr	r1, [r4, #16]
   42de8:	cmp	r0, r1
   42dec:	bcc	42e00 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   42df0:	ldr	r2, [r4, #44]	; 0x2c
   42df4:	mov	r0, r4
   42df8:	mov	r1, #0
   42dfc:	blx	r2
   42e00:	ldrd	r2, [r8, #4]
   42e04:	mov	r0, r4
   42e08:	blx	sl
   42e0c:	subs	r9, r9, #1
   42e10:	beq	42f34 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   42e14:	add	r7, r8, #12
   42e18:	mov	r8, #44	; 0x2c
   42e1c:	b	42e50 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x204>
   42e20:	mov	r1, #32
   42e24:	mov	r2, r5
   42e28:	bl	14ee4 <memset@plt>
   42e2c:	ldr	r0, [r4, #20]
   42e30:	add	r0, r0, r5
   42e34:	str	r0, [r4, #20]
   42e38:	ldrd	r2, [r7]
   42e3c:	mov	r0, r4
   42e40:	blx	sl
   42e44:	add	r7, r7, #8
   42e48:	cmp	r9, #0
   42e4c:	beq	42f34 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   42e50:	ldr	r0, [r4, #20]
   42e54:	sub	r9, r9, #1
   42e58:	add	r1, r0, #1
   42e5c:	str	r1, [r4, #20]
   42e60:	strb	r8, [r0]
   42e64:	ldrb	r1, [r4, #25]
   42e68:	ldr	r0, [r4, #20]
   42e6c:	cmp	r1, #0
   42e70:	beq	42f14 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c8>
   42e74:	add	r1, r0, #1
   42e78:	str	r1, [r4, #20]
   42e7c:	mov	r1, #10
   42e80:	strb	r1, [r0]
   42e84:	ldr	r0, [r4, #20]
   42e88:	ldrb	r2, [r4, #25]
   42e8c:	ldr	r3, [r4, #32]
   42e90:	ldr	r1, [r4, #16]
   42e94:	mla	r6, r3, r2, r0
   42e98:	mul	r5, r3, r2
   42e9c:	cmp	r6, r1
   42ea0:	bls	42e20 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   42ea4:	cmp	r0, r1
   42ea8:	bcc	42ec4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x278>
   42eac:	ldr	r2, [r4, #44]	; 0x2c
   42eb0:	mov	r0, r4
   42eb4:	mov	r1, #0
   42eb8:	blx	r2
   42ebc:	ldr	r1, [r4, #16]
   42ec0:	ldr	r0, [r4, #20]
   42ec4:	sub	r6, r1, r0
   42ec8:	cmp	r6, r5
   42ecc:	bcs	42e20 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   42ed0:	mov	r1, #32
   42ed4:	mov	r2, r6
   42ed8:	bl	14ee4 <memset@plt>
   42edc:	ldr	r0, [r4, #20]
   42ee0:	ldr	r2, [r4, #44]	; 0x2c
   42ee4:	mov	r1, #0
   42ee8:	add	r0, r0, r6
   42eec:	str	r0, [r4, #20]
   42ef0:	mov	r0, r4
   42ef4:	blx	r2
   42ef8:	ldr	r1, [r4, #16]
   42efc:	ldr	r0, [r4, #20]
   42f00:	sub	r5, r5, r6
   42f04:	sub	r6, r1, r0
   42f08:	cmp	r5, r6
   42f0c:	bhi	42ed0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x284>
   42f10:	b	42e20 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   42f14:	ldr	r1, [r4, #16]
   42f18:	cmp	r0, r1
   42f1c:	bcc	42e38 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
   42f20:	ldr	r2, [r4, #44]	; 0x2c
   42f24:	mov	r0, r4
   42f28:	mov	r1, #0
   42f2c:	blx	r2
   42f30:	b	42e38 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
   42f34:	ldrb	r1, [r4, #25]
   42f38:	ldr	r0, [r4, #20]
   42f3c:	cmp	r1, #0
   42f40:	beq	43000 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b4>
   42f44:	add	r1, r0, #1
   42f48:	str	r1, [r4, #20]
   42f4c:	mov	r1, #10
   42f50:	strb	r1, [r0]
   42f54:	ldr	r0, [r4, #32]
   42f58:	sub	r2, r0, #1
   42f5c:	str	r2, [r4, #32]
   42f60:	ldrb	r3, [r4, #25]
   42f64:	ldr	r0, [r4, #20]
   42f68:	ldr	r1, [r4, #16]
   42f6c:	mla	r7, r2, r3, r0
   42f70:	mul	r5, r2, r3
   42f74:	cmp	r7, r1
   42f78:	bls	42fe8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x39c>
   42f7c:	cmp	r0, r1
   42f80:	bcc	42f9c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x350>
   42f84:	ldr	r2, [r4, #44]	; 0x2c
   42f88:	mov	r0, r4
   42f8c:	mov	r1, #0
   42f90:	blx	r2
   42f94:	ldr	r1, [r4, #16]
   42f98:	ldr	r0, [r4, #20]
   42f9c:	sub	r6, r1, r0
   42fa0:	cmp	r6, r5
   42fa4:	bcs	42fe8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x39c>
   42fa8:	mov	r1, #32
   42fac:	mov	r2, r6
   42fb0:	bl	14ee4 <memset@plt>
   42fb4:	ldr	r0, [r4, #20]
   42fb8:	ldr	r2, [r4, #44]	; 0x2c
   42fbc:	mov	r1, #0
   42fc0:	add	r0, r0, r6
   42fc4:	str	r0, [r4, #20]
   42fc8:	mov	r0, r4
   42fcc:	blx	r2
   42fd0:	ldr	r1, [r4, #16]
   42fd4:	ldr	r0, [r4, #20]
   42fd8:	sub	r5, r5, r6
   42fdc:	sub	r6, r1, r0
   42fe0:	cmp	r5, r6
   42fe4:	bhi	42fa8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x35c>
   42fe8:	mov	r1, #32
   42fec:	mov	r2, r5
   42ff0:	bl	14ee4 <memset@plt>
   42ff4:	ldr	r0, [r4, #20]
   42ff8:	add	r0, r0, r5
   42ffc:	str	r0, [r4, #20]
   43000:	add	r1, r0, #1
   43004:	str	r1, [r4, #20]
   43008:	mov	r1, #93	; 0x5d
   4300c:	strb	r1, [r0]
   43010:	sub	sp, fp, #28
   43014:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043018 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   43018:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4301c:	add	fp, sp, #28
   43020:	sub	sp, sp, #4
   43024:	mov	r4, r0
   43028:	ldrb	r0, [r0, #27]
   4302c:	cmp	r0, #0
   43030:	beq	43044 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   43034:	mov	r0, r4
   43038:	sub	sp, fp, #28
   4303c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43040:	b	40020 <flatcc_json_printer_int8_vector_field@@Base>
   43044:	mov	r0, #4
   43048:	add	r0, r0, r2, lsl #1
   4304c:	ldr	r2, [r1, #8]
   43050:	cmp	r0, r2
   43054:	bge	43074 <flatcc_json_printer_int8_enum_vector_field@@Base+0x5c>
   43058:	ldr	r2, [r1, #4]
   4305c:	add	r0, r2, r0
   43060:	ldrh	r0, [r0]
   43064:	cmp	r0, #0
   43068:	ldrne	r2, [r1]
   4306c:	addsne	r8, r2, r0
   43070:	bne	4307c <flatcc_json_printer_int8_enum_vector_field@@Base+0x64>
   43074:	sub	sp, fp, #28
   43078:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4307c:	ldr	r0, [r1, #16]
   43080:	ldr	sl, [fp, #12]
   43084:	ldr	r2, [fp, #8]
   43088:	add	r7, r0, #1
   4308c:	cmp	r0, #0
   43090:	str	r7, [r1, #16]
   43094:	beq	430ac <flatcc_json_printer_int8_enum_vector_field@@Base+0x94>
   43098:	ldr	r0, [r4, #20]
   4309c:	add	r1, r0, #1
   430a0:	str	r1, [r4, #20]
   430a4:	mov	r1, #44	; 0x2c
   430a8:	strb	r1, [r0]
   430ac:	ldr	r0, [r8]
   430b0:	mov	r1, r3
   430b4:	ldr	r9, [r8, r0]!
   430b8:	mov	r0, r4
   430bc:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   430c0:	ldr	r1, [r4, #32]
   430c4:	ldr	r0, [r4, #20]
   430c8:	cmp	r9, #0
   430cc:	add	r1, r1, #1
   430d0:	str	r1, [r4, #32]
   430d4:	add	r1, r0, #1
   430d8:	str	r1, [r4, #20]
   430dc:	mov	r1, #91	; 0x5b
   430e0:	strb	r1, [r0]
   430e4:	beq	432fc <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   430e8:	ldrb	r1, [r4, #25]
   430ec:	ldr	r0, [r4, #20]
   430f0:	cmp	r1, #0
   430f4:	beq	431b0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x198>
   430f8:	add	r1, r0, #1
   430fc:	str	r1, [r4, #20]
   43100:	mov	r1, #10
   43104:	strb	r1, [r0]
   43108:	ldr	r0, [r4, #20]
   4310c:	ldrb	r2, [r4, #25]
   43110:	ldr	r3, [r4, #32]
   43114:	ldr	r1, [r4, #16]
   43118:	mla	r7, r3, r2, r0
   4311c:	mul	r5, r3, r2
   43120:	cmp	r7, r1
   43124:	bls	43194 <flatcc_json_printer_int8_enum_vector_field@@Base+0x17c>
   43128:	cmp	r0, r1
   4312c:	bcc	43148 <flatcc_json_printer_int8_enum_vector_field@@Base+0x130>
   43130:	ldr	r2, [r4, #44]	; 0x2c
   43134:	mov	r0, r4
   43138:	mov	r1, #0
   4313c:	blx	r2
   43140:	ldr	r1, [r4, #16]
   43144:	ldr	r0, [r4, #20]
   43148:	sub	r6, r1, r0
   4314c:	cmp	r6, r5
   43150:	bcs	43194 <flatcc_json_printer_int8_enum_vector_field@@Base+0x17c>
   43154:	mov	r1, #32
   43158:	mov	r2, r6
   4315c:	bl	14ee4 <memset@plt>
   43160:	ldr	r0, [r4, #20]
   43164:	ldr	r2, [r4, #44]	; 0x2c
   43168:	mov	r1, #0
   4316c:	add	r0, r0, r6
   43170:	str	r0, [r4, #20]
   43174:	mov	r0, r4
   43178:	blx	r2
   4317c:	ldr	r1, [r4, #16]
   43180:	ldr	r0, [r4, #20]
   43184:	sub	r5, r5, r6
   43188:	sub	r6, r1, r0
   4318c:	cmp	r5, r6
   43190:	bhi	43154 <flatcc_json_printer_int8_enum_vector_field@@Base+0x13c>
   43194:	mov	r1, #32
   43198:	mov	r2, r5
   4319c:	bl	14ee4 <memset@plt>
   431a0:	ldr	r0, [r4, #20]
   431a4:	add	r0, r0, r5
   431a8:	str	r0, [r4, #20]
   431ac:	b	431cc <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b4>
   431b0:	ldr	r1, [r4, #16]
   431b4:	cmp	r0, r1
   431b8:	bcc	431cc <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b4>
   431bc:	ldr	r2, [r4, #44]	; 0x2c
   431c0:	mov	r0, r4
   431c4:	mov	r1, #0
   431c8:	blx	r2
   431cc:	ldrsb	r1, [r8, #4]
   431d0:	mov	r0, r4
   431d4:	blx	sl
   431d8:	subs	r9, r9, #1
   431dc:	beq	432fc <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   431e0:	add	r7, r8, #5
   431e4:	mov	r8, #44	; 0x2c
   431e8:	b	43218 <flatcc_json_printer_int8_enum_vector_field@@Base+0x200>
   431ec:	mov	r1, #32
   431f0:	mov	r2, r5
   431f4:	bl	14ee4 <memset@plt>
   431f8:	ldr	r0, [r4, #20]
   431fc:	add	r0, r0, r5
   43200:	str	r0, [r4, #20]
   43204:	ldrsb	r1, [r7], #1
   43208:	mov	r0, r4
   4320c:	blx	sl
   43210:	cmp	r9, #0
   43214:	beq	432fc <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   43218:	ldr	r0, [r4, #20]
   4321c:	sub	r9, r9, #1
   43220:	add	r1, r0, #1
   43224:	str	r1, [r4, #20]
   43228:	strb	r8, [r0]
   4322c:	ldrb	r1, [r4, #25]
   43230:	ldr	r0, [r4, #20]
   43234:	cmp	r1, #0
   43238:	beq	432dc <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   4323c:	add	r1, r0, #1
   43240:	str	r1, [r4, #20]
   43244:	mov	r1, #10
   43248:	strb	r1, [r0]
   4324c:	ldr	r0, [r4, #20]
   43250:	ldrb	r2, [r4, #25]
   43254:	ldr	r3, [r4, #32]
   43258:	ldr	r1, [r4, #16]
   4325c:	mla	r6, r3, r2, r0
   43260:	mul	r5, r3, r2
   43264:	cmp	r6, r1
   43268:	bls	431ec <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   4326c:	cmp	r0, r1
   43270:	bcc	4328c <flatcc_json_printer_int8_enum_vector_field@@Base+0x274>
   43274:	ldr	r2, [r4, #44]	; 0x2c
   43278:	mov	r0, r4
   4327c:	mov	r1, #0
   43280:	blx	r2
   43284:	ldr	r1, [r4, #16]
   43288:	ldr	r0, [r4, #20]
   4328c:	sub	r6, r1, r0
   43290:	cmp	r6, r5
   43294:	bcs	431ec <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   43298:	mov	r1, #32
   4329c:	mov	r2, r6
   432a0:	bl	14ee4 <memset@plt>
   432a4:	ldr	r0, [r4, #20]
   432a8:	ldr	r2, [r4, #44]	; 0x2c
   432ac:	mov	r1, #0
   432b0:	add	r0, r0, r6
   432b4:	str	r0, [r4, #20]
   432b8:	mov	r0, r4
   432bc:	blx	r2
   432c0:	ldr	r1, [r4, #16]
   432c4:	ldr	r0, [r4, #20]
   432c8:	sub	r5, r5, r6
   432cc:	sub	r6, r1, r0
   432d0:	cmp	r5, r6
   432d4:	bhi	43298 <flatcc_json_printer_int8_enum_vector_field@@Base+0x280>
   432d8:	b	431ec <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   432dc:	ldr	r1, [r4, #16]
   432e0:	cmp	r0, r1
   432e4:	bcc	43204 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
   432e8:	ldr	r2, [r4, #44]	; 0x2c
   432ec:	mov	r0, r4
   432f0:	mov	r1, #0
   432f4:	blx	r2
   432f8:	b	43204 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
   432fc:	ldrb	r1, [r4, #25]
   43300:	ldr	r0, [r4, #20]
   43304:	cmp	r1, #0
   43308:	beq	433c8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3b0>
   4330c:	add	r1, r0, #1
   43310:	str	r1, [r4, #20]
   43314:	mov	r1, #10
   43318:	strb	r1, [r0]
   4331c:	ldr	r0, [r4, #32]
   43320:	sub	r2, r0, #1
   43324:	str	r2, [r4, #32]
   43328:	ldrb	r3, [r4, #25]
   4332c:	ldr	r0, [r4, #20]
   43330:	ldr	r1, [r4, #16]
   43334:	mla	r7, r2, r3, r0
   43338:	mul	r5, r2, r3
   4333c:	cmp	r7, r1
   43340:	bls	433b0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x398>
   43344:	cmp	r0, r1
   43348:	bcc	43364 <flatcc_json_printer_int8_enum_vector_field@@Base+0x34c>
   4334c:	ldr	r2, [r4, #44]	; 0x2c
   43350:	mov	r0, r4
   43354:	mov	r1, #0
   43358:	blx	r2
   4335c:	ldr	r1, [r4, #16]
   43360:	ldr	r0, [r4, #20]
   43364:	sub	r6, r1, r0
   43368:	cmp	r6, r5
   4336c:	bcs	433b0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x398>
   43370:	mov	r1, #32
   43374:	mov	r2, r6
   43378:	bl	14ee4 <memset@plt>
   4337c:	ldr	r0, [r4, #20]
   43380:	ldr	r2, [r4, #44]	; 0x2c
   43384:	mov	r1, #0
   43388:	add	r0, r0, r6
   4338c:	str	r0, [r4, #20]
   43390:	mov	r0, r4
   43394:	blx	r2
   43398:	ldr	r1, [r4, #16]
   4339c:	ldr	r0, [r4, #20]
   433a0:	sub	r5, r5, r6
   433a4:	sub	r6, r1, r0
   433a8:	cmp	r5, r6
   433ac:	bhi	43370 <flatcc_json_printer_int8_enum_vector_field@@Base+0x358>
   433b0:	mov	r1, #32
   433b4:	mov	r2, r5
   433b8:	bl	14ee4 <memset@plt>
   433bc:	ldr	r0, [r4, #20]
   433c0:	add	r0, r0, r5
   433c4:	str	r0, [r4, #20]
   433c8:	add	r1, r0, #1
   433cc:	str	r1, [r4, #20]
   433d0:	mov	r1, #93	; 0x5d
   433d4:	strb	r1, [r0]
   433d8:	sub	sp, fp, #28
   433dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000433e0 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   433e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   433e4:	add	fp, sp, #28
   433e8:	sub	sp, sp, #4
   433ec:	mov	r4, r0
   433f0:	ldrb	r0, [r0, #27]
   433f4:	cmp	r0, #0
   433f8:	beq	4340c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   433fc:	mov	r0, r4
   43400:	sub	sp, fp, #28
   43404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43408:	b	40578 <flatcc_json_printer_int16_vector_field@@Base>
   4340c:	mov	r0, #4
   43410:	add	r0, r0, r2, lsl #1
   43414:	ldr	r2, [r1, #8]
   43418:	cmp	r0, r2
   4341c:	bge	4343c <flatcc_json_printer_int16_enum_vector_field@@Base+0x5c>
   43420:	ldr	r2, [r1, #4]
   43424:	add	r0, r2, r0
   43428:	ldrh	r0, [r0]
   4342c:	cmp	r0, #0
   43430:	ldrne	r2, [r1]
   43434:	addsne	r8, r2, r0
   43438:	bne	43444 <flatcc_json_printer_int16_enum_vector_field@@Base+0x64>
   4343c:	sub	sp, fp, #28
   43440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43444:	ldr	r0, [r1, #16]
   43448:	ldr	sl, [fp, #12]
   4344c:	ldr	r2, [fp, #8]
   43450:	add	r7, r0, #1
   43454:	cmp	r0, #0
   43458:	str	r7, [r1, #16]
   4345c:	beq	43474 <flatcc_json_printer_int16_enum_vector_field@@Base+0x94>
   43460:	ldr	r0, [r4, #20]
   43464:	add	r1, r0, #1
   43468:	str	r1, [r4, #20]
   4346c:	mov	r1, #44	; 0x2c
   43470:	strb	r1, [r0]
   43474:	ldr	r0, [r8]
   43478:	mov	r1, r3
   4347c:	ldr	r9, [r8, r0]!
   43480:	mov	r0, r4
   43484:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   43488:	ldr	r1, [r4, #32]
   4348c:	ldr	r0, [r4, #20]
   43490:	cmp	r9, #0
   43494:	add	r1, r1, #1
   43498:	str	r1, [r4, #32]
   4349c:	add	r1, r0, #1
   434a0:	str	r1, [r4, #20]
   434a4:	mov	r1, #91	; 0x5b
   434a8:	strb	r1, [r0]
   434ac:	beq	436c4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   434b0:	ldrb	r1, [r4, #25]
   434b4:	ldr	r0, [r4, #20]
   434b8:	cmp	r1, #0
   434bc:	beq	43578 <flatcc_json_printer_int16_enum_vector_field@@Base+0x198>
   434c0:	add	r1, r0, #1
   434c4:	str	r1, [r4, #20]
   434c8:	mov	r1, #10
   434cc:	strb	r1, [r0]
   434d0:	ldr	r0, [r4, #20]
   434d4:	ldrb	r2, [r4, #25]
   434d8:	ldr	r3, [r4, #32]
   434dc:	ldr	r1, [r4, #16]
   434e0:	mla	r7, r3, r2, r0
   434e4:	mul	r5, r3, r2
   434e8:	cmp	r7, r1
   434ec:	bls	4355c <flatcc_json_printer_int16_enum_vector_field@@Base+0x17c>
   434f0:	cmp	r0, r1
   434f4:	bcc	43510 <flatcc_json_printer_int16_enum_vector_field@@Base+0x130>
   434f8:	ldr	r2, [r4, #44]	; 0x2c
   434fc:	mov	r0, r4
   43500:	mov	r1, #0
   43504:	blx	r2
   43508:	ldr	r1, [r4, #16]
   4350c:	ldr	r0, [r4, #20]
   43510:	sub	r6, r1, r0
   43514:	cmp	r6, r5
   43518:	bcs	4355c <flatcc_json_printer_int16_enum_vector_field@@Base+0x17c>
   4351c:	mov	r1, #32
   43520:	mov	r2, r6
   43524:	bl	14ee4 <memset@plt>
   43528:	ldr	r0, [r4, #20]
   4352c:	ldr	r2, [r4, #44]	; 0x2c
   43530:	mov	r1, #0
   43534:	add	r0, r0, r6
   43538:	str	r0, [r4, #20]
   4353c:	mov	r0, r4
   43540:	blx	r2
   43544:	ldr	r1, [r4, #16]
   43548:	ldr	r0, [r4, #20]
   4354c:	sub	r5, r5, r6
   43550:	sub	r6, r1, r0
   43554:	cmp	r5, r6
   43558:	bhi	4351c <flatcc_json_printer_int16_enum_vector_field@@Base+0x13c>
   4355c:	mov	r1, #32
   43560:	mov	r2, r5
   43564:	bl	14ee4 <memset@plt>
   43568:	ldr	r0, [r4, #20]
   4356c:	add	r0, r0, r5
   43570:	str	r0, [r4, #20]
   43574:	b	43594 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   43578:	ldr	r1, [r4, #16]
   4357c:	cmp	r0, r1
   43580:	bcc	43594 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   43584:	ldr	r2, [r4, #44]	; 0x2c
   43588:	mov	r0, r4
   4358c:	mov	r1, #0
   43590:	blx	r2
   43594:	ldrsh	r1, [r8, #4]
   43598:	mov	r0, r4
   4359c:	blx	sl
   435a0:	subs	r9, r9, #1
   435a4:	beq	436c4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   435a8:	add	r7, r8, #6
   435ac:	mov	r8, #44	; 0x2c
   435b0:	b	435e0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x200>
   435b4:	mov	r1, #32
   435b8:	mov	r2, r5
   435bc:	bl	14ee4 <memset@plt>
   435c0:	ldr	r0, [r4, #20]
   435c4:	add	r0, r0, r5
   435c8:	str	r0, [r4, #20]
   435cc:	ldrsh	r1, [r7], #2
   435d0:	mov	r0, r4
   435d4:	blx	sl
   435d8:	cmp	r9, #0
   435dc:	beq	436c4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   435e0:	ldr	r0, [r4, #20]
   435e4:	sub	r9, r9, #1
   435e8:	add	r1, r0, #1
   435ec:	str	r1, [r4, #20]
   435f0:	strb	r8, [r0]
   435f4:	ldrb	r1, [r4, #25]
   435f8:	ldr	r0, [r4, #20]
   435fc:	cmp	r1, #0
   43600:	beq	436a4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   43604:	add	r1, r0, #1
   43608:	str	r1, [r4, #20]
   4360c:	mov	r1, #10
   43610:	strb	r1, [r0]
   43614:	ldr	r0, [r4, #20]
   43618:	ldrb	r2, [r4, #25]
   4361c:	ldr	r3, [r4, #32]
   43620:	ldr	r1, [r4, #16]
   43624:	mla	r6, r3, r2, r0
   43628:	mul	r5, r3, r2
   4362c:	cmp	r6, r1
   43630:	bls	435b4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   43634:	cmp	r0, r1
   43638:	bcc	43654 <flatcc_json_printer_int16_enum_vector_field@@Base+0x274>
   4363c:	ldr	r2, [r4, #44]	; 0x2c
   43640:	mov	r0, r4
   43644:	mov	r1, #0
   43648:	blx	r2
   4364c:	ldr	r1, [r4, #16]
   43650:	ldr	r0, [r4, #20]
   43654:	sub	r6, r1, r0
   43658:	cmp	r6, r5
   4365c:	bcs	435b4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   43660:	mov	r1, #32
   43664:	mov	r2, r6
   43668:	bl	14ee4 <memset@plt>
   4366c:	ldr	r0, [r4, #20]
   43670:	ldr	r2, [r4, #44]	; 0x2c
   43674:	mov	r1, #0
   43678:	add	r0, r0, r6
   4367c:	str	r0, [r4, #20]
   43680:	mov	r0, r4
   43684:	blx	r2
   43688:	ldr	r1, [r4, #16]
   4368c:	ldr	r0, [r4, #20]
   43690:	sub	r5, r5, r6
   43694:	sub	r6, r1, r0
   43698:	cmp	r5, r6
   4369c:	bhi	43660 <flatcc_json_printer_int16_enum_vector_field@@Base+0x280>
   436a0:	b	435b4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   436a4:	ldr	r1, [r4, #16]
   436a8:	cmp	r0, r1
   436ac:	bcc	435cc <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   436b0:	ldr	r2, [r4, #44]	; 0x2c
   436b4:	mov	r0, r4
   436b8:	mov	r1, #0
   436bc:	blx	r2
   436c0:	b	435cc <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   436c4:	ldrb	r1, [r4, #25]
   436c8:	ldr	r0, [r4, #20]
   436cc:	cmp	r1, #0
   436d0:	beq	43790 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3b0>
   436d4:	add	r1, r0, #1
   436d8:	str	r1, [r4, #20]
   436dc:	mov	r1, #10
   436e0:	strb	r1, [r0]
   436e4:	ldr	r0, [r4, #32]
   436e8:	sub	r2, r0, #1
   436ec:	str	r2, [r4, #32]
   436f0:	ldrb	r3, [r4, #25]
   436f4:	ldr	r0, [r4, #20]
   436f8:	ldr	r1, [r4, #16]
   436fc:	mla	r7, r2, r3, r0
   43700:	mul	r5, r2, r3
   43704:	cmp	r7, r1
   43708:	bls	43778 <flatcc_json_printer_int16_enum_vector_field@@Base+0x398>
   4370c:	cmp	r0, r1
   43710:	bcc	4372c <flatcc_json_printer_int16_enum_vector_field@@Base+0x34c>
   43714:	ldr	r2, [r4, #44]	; 0x2c
   43718:	mov	r0, r4
   4371c:	mov	r1, #0
   43720:	blx	r2
   43724:	ldr	r1, [r4, #16]
   43728:	ldr	r0, [r4, #20]
   4372c:	sub	r6, r1, r0
   43730:	cmp	r6, r5
   43734:	bcs	43778 <flatcc_json_printer_int16_enum_vector_field@@Base+0x398>
   43738:	mov	r1, #32
   4373c:	mov	r2, r6
   43740:	bl	14ee4 <memset@plt>
   43744:	ldr	r0, [r4, #20]
   43748:	ldr	r2, [r4, #44]	; 0x2c
   4374c:	mov	r1, #0
   43750:	add	r0, r0, r6
   43754:	str	r0, [r4, #20]
   43758:	mov	r0, r4
   4375c:	blx	r2
   43760:	ldr	r1, [r4, #16]
   43764:	ldr	r0, [r4, #20]
   43768:	sub	r5, r5, r6
   4376c:	sub	r6, r1, r0
   43770:	cmp	r5, r6
   43774:	bhi	43738 <flatcc_json_printer_int16_enum_vector_field@@Base+0x358>
   43778:	mov	r1, #32
   4377c:	mov	r2, r5
   43780:	bl	14ee4 <memset@plt>
   43784:	ldr	r0, [r4, #20]
   43788:	add	r0, r0, r5
   4378c:	str	r0, [r4, #20]
   43790:	add	r1, r0, #1
   43794:	str	r1, [r4, #20]
   43798:	mov	r1, #93	; 0x5d
   4379c:	strb	r1, [r0]
   437a0:	sub	sp, fp, #28
   437a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000437a8 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   437a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   437ac:	add	fp, sp, #28
   437b0:	sub	sp, sp, #4
   437b4:	mov	r4, r0
   437b8:	ldrb	r0, [r0, #27]
   437bc:	cmp	r0, #0
   437c0:	beq	437d4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   437c4:	mov	r0, r4
   437c8:	sub	sp, fp, #28
   437cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   437d0:	b	4097c <flatcc_json_printer_int32_vector_field@@Base>
   437d4:	mov	r0, #4
   437d8:	add	r0, r0, r2, lsl #1
   437dc:	ldr	r2, [r1, #8]
   437e0:	cmp	r0, r2
   437e4:	bge	43804 <flatcc_json_printer_int32_enum_vector_field@@Base+0x5c>
   437e8:	ldr	r2, [r1, #4]
   437ec:	add	r0, r2, r0
   437f0:	ldrh	r0, [r0]
   437f4:	cmp	r0, #0
   437f8:	ldrne	r2, [r1]
   437fc:	addsne	r8, r2, r0
   43800:	bne	4380c <flatcc_json_printer_int32_enum_vector_field@@Base+0x64>
   43804:	sub	sp, fp, #28
   43808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4380c:	ldr	r0, [r1, #16]
   43810:	ldr	sl, [fp, #12]
   43814:	ldr	r2, [fp, #8]
   43818:	add	r7, r0, #1
   4381c:	cmp	r0, #0
   43820:	str	r7, [r1, #16]
   43824:	beq	4383c <flatcc_json_printer_int32_enum_vector_field@@Base+0x94>
   43828:	ldr	r0, [r4, #20]
   4382c:	add	r1, r0, #1
   43830:	str	r1, [r4, #20]
   43834:	mov	r1, #44	; 0x2c
   43838:	strb	r1, [r0]
   4383c:	ldr	r0, [r8]
   43840:	mov	r1, r3
   43844:	ldr	r9, [r8, r0]!
   43848:	mov	r0, r4
   4384c:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   43850:	ldr	r1, [r4, #32]
   43854:	ldr	r0, [r4, #20]
   43858:	cmp	r9, #0
   4385c:	add	r1, r1, #1
   43860:	str	r1, [r4, #32]
   43864:	add	r1, r0, #1
   43868:	str	r1, [r4, #20]
   4386c:	mov	r1, #91	; 0x5b
   43870:	strb	r1, [r0]
   43874:	beq	43a8c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   43878:	ldrb	r1, [r4, #25]
   4387c:	ldr	r0, [r4, #20]
   43880:	cmp	r1, #0
   43884:	beq	43940 <flatcc_json_printer_int32_enum_vector_field@@Base+0x198>
   43888:	add	r1, r0, #1
   4388c:	str	r1, [r4, #20]
   43890:	mov	r1, #10
   43894:	strb	r1, [r0]
   43898:	ldr	r0, [r4, #20]
   4389c:	ldrb	r2, [r4, #25]
   438a0:	ldr	r3, [r4, #32]
   438a4:	ldr	r1, [r4, #16]
   438a8:	mla	r7, r3, r2, r0
   438ac:	mul	r5, r3, r2
   438b0:	cmp	r7, r1
   438b4:	bls	43924 <flatcc_json_printer_int32_enum_vector_field@@Base+0x17c>
   438b8:	cmp	r0, r1
   438bc:	bcc	438d8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x130>
   438c0:	ldr	r2, [r4, #44]	; 0x2c
   438c4:	mov	r0, r4
   438c8:	mov	r1, #0
   438cc:	blx	r2
   438d0:	ldr	r1, [r4, #16]
   438d4:	ldr	r0, [r4, #20]
   438d8:	sub	r6, r1, r0
   438dc:	cmp	r6, r5
   438e0:	bcs	43924 <flatcc_json_printer_int32_enum_vector_field@@Base+0x17c>
   438e4:	mov	r1, #32
   438e8:	mov	r2, r6
   438ec:	bl	14ee4 <memset@plt>
   438f0:	ldr	r0, [r4, #20]
   438f4:	ldr	r2, [r4, #44]	; 0x2c
   438f8:	mov	r1, #0
   438fc:	add	r0, r0, r6
   43900:	str	r0, [r4, #20]
   43904:	mov	r0, r4
   43908:	blx	r2
   4390c:	ldr	r1, [r4, #16]
   43910:	ldr	r0, [r4, #20]
   43914:	sub	r5, r5, r6
   43918:	sub	r6, r1, r0
   4391c:	cmp	r5, r6
   43920:	bhi	438e4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x13c>
   43924:	mov	r1, #32
   43928:	mov	r2, r5
   4392c:	bl	14ee4 <memset@plt>
   43930:	ldr	r0, [r4, #20]
   43934:	add	r0, r0, r5
   43938:	str	r0, [r4, #20]
   4393c:	b	4395c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   43940:	ldr	r1, [r4, #16]
   43944:	cmp	r0, r1
   43948:	bcc	4395c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   4394c:	ldr	r2, [r4, #44]	; 0x2c
   43950:	mov	r0, r4
   43954:	mov	r1, #0
   43958:	blx	r2
   4395c:	ldr	r1, [r8, #4]
   43960:	mov	r0, r4
   43964:	blx	sl
   43968:	subs	r9, r9, #1
   4396c:	beq	43a8c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   43970:	add	r7, r8, #8
   43974:	mov	r8, #44	; 0x2c
   43978:	b	439a8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x200>
   4397c:	mov	r1, #32
   43980:	mov	r2, r5
   43984:	bl	14ee4 <memset@plt>
   43988:	ldr	r0, [r4, #20]
   4398c:	add	r0, r0, r5
   43990:	str	r0, [r4, #20]
   43994:	ldr	r1, [r7], #4
   43998:	mov	r0, r4
   4399c:	blx	sl
   439a0:	cmp	r9, #0
   439a4:	beq	43a8c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   439a8:	ldr	r0, [r4, #20]
   439ac:	sub	r9, r9, #1
   439b0:	add	r1, r0, #1
   439b4:	str	r1, [r4, #20]
   439b8:	strb	r8, [r0]
   439bc:	ldrb	r1, [r4, #25]
   439c0:	ldr	r0, [r4, #20]
   439c4:	cmp	r1, #0
   439c8:	beq	43a6c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   439cc:	add	r1, r0, #1
   439d0:	str	r1, [r4, #20]
   439d4:	mov	r1, #10
   439d8:	strb	r1, [r0]
   439dc:	ldr	r0, [r4, #20]
   439e0:	ldrb	r2, [r4, #25]
   439e4:	ldr	r3, [r4, #32]
   439e8:	ldr	r1, [r4, #16]
   439ec:	mla	r6, r3, r2, r0
   439f0:	mul	r5, r3, r2
   439f4:	cmp	r6, r1
   439f8:	bls	4397c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   439fc:	cmp	r0, r1
   43a00:	bcc	43a1c <flatcc_json_printer_int32_enum_vector_field@@Base+0x274>
   43a04:	ldr	r2, [r4, #44]	; 0x2c
   43a08:	mov	r0, r4
   43a0c:	mov	r1, #0
   43a10:	blx	r2
   43a14:	ldr	r1, [r4, #16]
   43a18:	ldr	r0, [r4, #20]
   43a1c:	sub	r6, r1, r0
   43a20:	cmp	r6, r5
   43a24:	bcs	4397c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   43a28:	mov	r1, #32
   43a2c:	mov	r2, r6
   43a30:	bl	14ee4 <memset@plt>
   43a34:	ldr	r0, [r4, #20]
   43a38:	ldr	r2, [r4, #44]	; 0x2c
   43a3c:	mov	r1, #0
   43a40:	add	r0, r0, r6
   43a44:	str	r0, [r4, #20]
   43a48:	mov	r0, r4
   43a4c:	blx	r2
   43a50:	ldr	r1, [r4, #16]
   43a54:	ldr	r0, [r4, #20]
   43a58:	sub	r5, r5, r6
   43a5c:	sub	r6, r1, r0
   43a60:	cmp	r5, r6
   43a64:	bhi	43a28 <flatcc_json_printer_int32_enum_vector_field@@Base+0x280>
   43a68:	b	4397c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   43a6c:	ldr	r1, [r4, #16]
   43a70:	cmp	r0, r1
   43a74:	bcc	43994 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
   43a78:	ldr	r2, [r4, #44]	; 0x2c
   43a7c:	mov	r0, r4
   43a80:	mov	r1, #0
   43a84:	blx	r2
   43a88:	b	43994 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
   43a8c:	ldrb	r1, [r4, #25]
   43a90:	ldr	r0, [r4, #20]
   43a94:	cmp	r1, #0
   43a98:	beq	43b58 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3b0>
   43a9c:	add	r1, r0, #1
   43aa0:	str	r1, [r4, #20]
   43aa4:	mov	r1, #10
   43aa8:	strb	r1, [r0]
   43aac:	ldr	r0, [r4, #32]
   43ab0:	sub	r2, r0, #1
   43ab4:	str	r2, [r4, #32]
   43ab8:	ldrb	r3, [r4, #25]
   43abc:	ldr	r0, [r4, #20]
   43ac0:	ldr	r1, [r4, #16]
   43ac4:	mla	r7, r2, r3, r0
   43ac8:	mul	r5, r2, r3
   43acc:	cmp	r7, r1
   43ad0:	bls	43b40 <flatcc_json_printer_int32_enum_vector_field@@Base+0x398>
   43ad4:	cmp	r0, r1
   43ad8:	bcc	43af4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x34c>
   43adc:	ldr	r2, [r4, #44]	; 0x2c
   43ae0:	mov	r0, r4
   43ae4:	mov	r1, #0
   43ae8:	blx	r2
   43aec:	ldr	r1, [r4, #16]
   43af0:	ldr	r0, [r4, #20]
   43af4:	sub	r6, r1, r0
   43af8:	cmp	r6, r5
   43afc:	bcs	43b40 <flatcc_json_printer_int32_enum_vector_field@@Base+0x398>
   43b00:	mov	r1, #32
   43b04:	mov	r2, r6
   43b08:	bl	14ee4 <memset@plt>
   43b0c:	ldr	r0, [r4, #20]
   43b10:	ldr	r2, [r4, #44]	; 0x2c
   43b14:	mov	r1, #0
   43b18:	add	r0, r0, r6
   43b1c:	str	r0, [r4, #20]
   43b20:	mov	r0, r4
   43b24:	blx	r2
   43b28:	ldr	r1, [r4, #16]
   43b2c:	ldr	r0, [r4, #20]
   43b30:	sub	r5, r5, r6
   43b34:	sub	r6, r1, r0
   43b38:	cmp	r5, r6
   43b3c:	bhi	43b00 <flatcc_json_printer_int32_enum_vector_field@@Base+0x358>
   43b40:	mov	r1, #32
   43b44:	mov	r2, r5
   43b48:	bl	14ee4 <memset@plt>
   43b4c:	ldr	r0, [r4, #20]
   43b50:	add	r0, r0, r5
   43b54:	str	r0, [r4, #20]
   43b58:	add	r1, r0, #1
   43b5c:	str	r1, [r4, #20]
   43b60:	mov	r1, #93	; 0x5d
   43b64:	strb	r1, [r0]
   43b68:	sub	sp, fp, #28
   43b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043b70 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   43b70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43b74:	add	fp, sp, #28
   43b78:	sub	sp, sp, #4
   43b7c:	mov	r4, r0
   43b80:	ldrb	r0, [r0, #27]
   43b84:	cmp	r0, #0
   43b88:	beq	43b9c <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   43b8c:	mov	r0, r4
   43b90:	sub	sp, fp, #28
   43b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43b98:	b	40d70 <flatcc_json_printer_int64_vector_field@@Base>
   43b9c:	mov	r0, #4
   43ba0:	add	r0, r0, r2, lsl #1
   43ba4:	ldr	r2, [r1, #8]
   43ba8:	cmp	r0, r2
   43bac:	bge	43bcc <flatcc_json_printer_int64_enum_vector_field@@Base+0x5c>
   43bb0:	ldr	r2, [r1, #4]
   43bb4:	add	r0, r2, r0
   43bb8:	ldrh	r0, [r0]
   43bbc:	cmp	r0, #0
   43bc0:	ldrne	r2, [r1]
   43bc4:	addsne	r8, r2, r0
   43bc8:	bne	43bd4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x64>
   43bcc:	sub	sp, fp, #28
   43bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43bd4:	ldr	r0, [r1, #16]
   43bd8:	ldr	sl, [fp, #12]
   43bdc:	ldr	r2, [fp, #8]
   43be0:	add	r7, r0, #1
   43be4:	cmp	r0, #0
   43be8:	str	r7, [r1, #16]
   43bec:	beq	43c04 <flatcc_json_printer_int64_enum_vector_field@@Base+0x94>
   43bf0:	ldr	r0, [r4, #20]
   43bf4:	add	r1, r0, #1
   43bf8:	str	r1, [r4, #20]
   43bfc:	mov	r1, #44	; 0x2c
   43c00:	strb	r1, [r0]
   43c04:	ldr	r0, [r8]
   43c08:	mov	r1, r3
   43c0c:	ldr	r9, [r8, r0]!
   43c10:	mov	r0, r4
   43c14:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   43c18:	ldr	r1, [r4, #32]
   43c1c:	ldr	r0, [r4, #20]
   43c20:	cmp	r9, #0
   43c24:	add	r1, r1, #1
   43c28:	str	r1, [r4, #32]
   43c2c:	add	r1, r0, #1
   43c30:	str	r1, [r4, #20]
   43c34:	mov	r1, #91	; 0x5b
   43c38:	strb	r1, [r0]
   43c3c:	beq	43e58 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   43c40:	ldrb	r1, [r4, #25]
   43c44:	ldr	r0, [r4, #20]
   43c48:	cmp	r1, #0
   43c4c:	beq	43d08 <flatcc_json_printer_int64_enum_vector_field@@Base+0x198>
   43c50:	add	r1, r0, #1
   43c54:	str	r1, [r4, #20]
   43c58:	mov	r1, #10
   43c5c:	strb	r1, [r0]
   43c60:	ldr	r0, [r4, #20]
   43c64:	ldrb	r2, [r4, #25]
   43c68:	ldr	r3, [r4, #32]
   43c6c:	ldr	r1, [r4, #16]
   43c70:	mla	r7, r3, r2, r0
   43c74:	mul	r5, r3, r2
   43c78:	cmp	r7, r1
   43c7c:	bls	43cec <flatcc_json_printer_int64_enum_vector_field@@Base+0x17c>
   43c80:	cmp	r0, r1
   43c84:	bcc	43ca0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x130>
   43c88:	ldr	r2, [r4, #44]	; 0x2c
   43c8c:	mov	r0, r4
   43c90:	mov	r1, #0
   43c94:	blx	r2
   43c98:	ldr	r1, [r4, #16]
   43c9c:	ldr	r0, [r4, #20]
   43ca0:	sub	r6, r1, r0
   43ca4:	cmp	r6, r5
   43ca8:	bcs	43cec <flatcc_json_printer_int64_enum_vector_field@@Base+0x17c>
   43cac:	mov	r1, #32
   43cb0:	mov	r2, r6
   43cb4:	bl	14ee4 <memset@plt>
   43cb8:	ldr	r0, [r4, #20]
   43cbc:	ldr	r2, [r4, #44]	; 0x2c
   43cc0:	mov	r1, #0
   43cc4:	add	r0, r0, r6
   43cc8:	str	r0, [r4, #20]
   43ccc:	mov	r0, r4
   43cd0:	blx	r2
   43cd4:	ldr	r1, [r4, #16]
   43cd8:	ldr	r0, [r4, #20]
   43cdc:	sub	r5, r5, r6
   43ce0:	sub	r6, r1, r0
   43ce4:	cmp	r5, r6
   43ce8:	bhi	43cac <flatcc_json_printer_int64_enum_vector_field@@Base+0x13c>
   43cec:	mov	r1, #32
   43cf0:	mov	r2, r5
   43cf4:	bl	14ee4 <memset@plt>
   43cf8:	ldr	r0, [r4, #20]
   43cfc:	add	r0, r0, r5
   43d00:	str	r0, [r4, #20]
   43d04:	b	43d24 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   43d08:	ldr	r1, [r4, #16]
   43d0c:	cmp	r0, r1
   43d10:	bcc	43d24 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   43d14:	ldr	r2, [r4, #44]	; 0x2c
   43d18:	mov	r0, r4
   43d1c:	mov	r1, #0
   43d20:	blx	r2
   43d24:	ldrd	r2, [r8, #4]
   43d28:	mov	r0, r4
   43d2c:	blx	sl
   43d30:	subs	r9, r9, #1
   43d34:	beq	43e58 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   43d38:	add	r7, r8, #12
   43d3c:	mov	r8, #44	; 0x2c
   43d40:	b	43d74 <flatcc_json_printer_int64_enum_vector_field@@Base+0x204>
   43d44:	mov	r1, #32
   43d48:	mov	r2, r5
   43d4c:	bl	14ee4 <memset@plt>
   43d50:	ldr	r0, [r4, #20]
   43d54:	add	r0, r0, r5
   43d58:	str	r0, [r4, #20]
   43d5c:	ldrd	r2, [r7]
   43d60:	mov	r0, r4
   43d64:	blx	sl
   43d68:	add	r7, r7, #8
   43d6c:	cmp	r9, #0
   43d70:	beq	43e58 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   43d74:	ldr	r0, [r4, #20]
   43d78:	sub	r9, r9, #1
   43d7c:	add	r1, r0, #1
   43d80:	str	r1, [r4, #20]
   43d84:	strb	r8, [r0]
   43d88:	ldrb	r1, [r4, #25]
   43d8c:	ldr	r0, [r4, #20]
   43d90:	cmp	r1, #0
   43d94:	beq	43e38 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c8>
   43d98:	add	r1, r0, #1
   43d9c:	str	r1, [r4, #20]
   43da0:	mov	r1, #10
   43da4:	strb	r1, [r0]
   43da8:	ldr	r0, [r4, #20]
   43dac:	ldrb	r2, [r4, #25]
   43db0:	ldr	r3, [r4, #32]
   43db4:	ldr	r1, [r4, #16]
   43db8:	mla	r6, r3, r2, r0
   43dbc:	mul	r5, r3, r2
   43dc0:	cmp	r6, r1
   43dc4:	bls	43d44 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   43dc8:	cmp	r0, r1
   43dcc:	bcc	43de8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x278>
   43dd0:	ldr	r2, [r4, #44]	; 0x2c
   43dd4:	mov	r0, r4
   43dd8:	mov	r1, #0
   43ddc:	blx	r2
   43de0:	ldr	r1, [r4, #16]
   43de4:	ldr	r0, [r4, #20]
   43de8:	sub	r6, r1, r0
   43dec:	cmp	r6, r5
   43df0:	bcs	43d44 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   43df4:	mov	r1, #32
   43df8:	mov	r2, r6
   43dfc:	bl	14ee4 <memset@plt>
   43e00:	ldr	r0, [r4, #20]
   43e04:	ldr	r2, [r4, #44]	; 0x2c
   43e08:	mov	r1, #0
   43e0c:	add	r0, r0, r6
   43e10:	str	r0, [r4, #20]
   43e14:	mov	r0, r4
   43e18:	blx	r2
   43e1c:	ldr	r1, [r4, #16]
   43e20:	ldr	r0, [r4, #20]
   43e24:	sub	r5, r5, r6
   43e28:	sub	r6, r1, r0
   43e2c:	cmp	r5, r6
   43e30:	bhi	43df4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x284>
   43e34:	b	43d44 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   43e38:	ldr	r1, [r4, #16]
   43e3c:	cmp	r0, r1
   43e40:	bcc	43d5c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
   43e44:	ldr	r2, [r4, #44]	; 0x2c
   43e48:	mov	r0, r4
   43e4c:	mov	r1, #0
   43e50:	blx	r2
   43e54:	b	43d5c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
   43e58:	ldrb	r1, [r4, #25]
   43e5c:	ldr	r0, [r4, #20]
   43e60:	cmp	r1, #0
   43e64:	beq	43f24 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b4>
   43e68:	add	r1, r0, #1
   43e6c:	str	r1, [r4, #20]
   43e70:	mov	r1, #10
   43e74:	strb	r1, [r0]
   43e78:	ldr	r0, [r4, #32]
   43e7c:	sub	r2, r0, #1
   43e80:	str	r2, [r4, #32]
   43e84:	ldrb	r3, [r4, #25]
   43e88:	ldr	r0, [r4, #20]
   43e8c:	ldr	r1, [r4, #16]
   43e90:	mla	r7, r2, r3, r0
   43e94:	mul	r5, r2, r3
   43e98:	cmp	r7, r1
   43e9c:	bls	43f0c <flatcc_json_printer_int64_enum_vector_field@@Base+0x39c>
   43ea0:	cmp	r0, r1
   43ea4:	bcc	43ec0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x350>
   43ea8:	ldr	r2, [r4, #44]	; 0x2c
   43eac:	mov	r0, r4
   43eb0:	mov	r1, #0
   43eb4:	blx	r2
   43eb8:	ldr	r1, [r4, #16]
   43ebc:	ldr	r0, [r4, #20]
   43ec0:	sub	r6, r1, r0
   43ec4:	cmp	r6, r5
   43ec8:	bcs	43f0c <flatcc_json_printer_int64_enum_vector_field@@Base+0x39c>
   43ecc:	mov	r1, #32
   43ed0:	mov	r2, r6
   43ed4:	bl	14ee4 <memset@plt>
   43ed8:	ldr	r0, [r4, #20]
   43edc:	ldr	r2, [r4, #44]	; 0x2c
   43ee0:	mov	r1, #0
   43ee4:	add	r0, r0, r6
   43ee8:	str	r0, [r4, #20]
   43eec:	mov	r0, r4
   43ef0:	blx	r2
   43ef4:	ldr	r1, [r4, #16]
   43ef8:	ldr	r0, [r4, #20]
   43efc:	sub	r5, r5, r6
   43f00:	sub	r6, r1, r0
   43f04:	cmp	r5, r6
   43f08:	bhi	43ecc <flatcc_json_printer_int64_enum_vector_field@@Base+0x35c>
   43f0c:	mov	r1, #32
   43f10:	mov	r2, r5
   43f14:	bl	14ee4 <memset@plt>
   43f18:	ldr	r0, [r4, #20]
   43f1c:	add	r0, r0, r5
   43f20:	str	r0, [r4, #20]
   43f24:	add	r1, r0, #1
   43f28:	str	r1, [r4, #20]
   43f2c:	mov	r1, #93	; 0x5d
   43f30:	strb	r1, [r0]
   43f34:	sub	sp, fp, #28
   43f38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043f3c <flatcc_json_printer_bool_enum_vector_field@@Base>:
   43f3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43f40:	add	fp, sp, #28
   43f44:	sub	sp, sp, #4
   43f48:	mov	r4, r0
   43f4c:	ldrb	r0, [r0, #27]
   43f50:	cmp	r0, #0
   43f54:	beq	43f68 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   43f58:	mov	r0, r4
   43f5c:	sub	sp, fp, #28
   43f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43f64:	b	41174 <flatcc_json_printer_bool_vector_field@@Base>
   43f68:	mov	r0, #4
   43f6c:	add	r0, r0, r2, lsl #1
   43f70:	ldr	r2, [r1, #8]
   43f74:	cmp	r0, r2
   43f78:	bge	43f98 <flatcc_json_printer_bool_enum_vector_field@@Base+0x5c>
   43f7c:	ldr	r2, [r1, #4]
   43f80:	add	r0, r2, r0
   43f84:	ldrh	r0, [r0]
   43f88:	cmp	r0, #0
   43f8c:	ldrne	r2, [r1]
   43f90:	addsne	r8, r2, r0
   43f94:	bne	43fa0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x64>
   43f98:	sub	sp, fp, #28
   43f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43fa0:	ldr	r0, [r1, #16]
   43fa4:	ldr	sl, [fp, #12]
   43fa8:	ldr	r2, [fp, #8]
   43fac:	add	r7, r0, #1
   43fb0:	cmp	r0, #0
   43fb4:	str	r7, [r1, #16]
   43fb8:	beq	43fd0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x94>
   43fbc:	ldr	r0, [r4, #20]
   43fc0:	add	r1, r0, #1
   43fc4:	str	r1, [r4, #20]
   43fc8:	mov	r1, #44	; 0x2c
   43fcc:	strb	r1, [r0]
   43fd0:	ldr	r0, [r8]
   43fd4:	mov	r1, r3
   43fd8:	ldr	r9, [r8, r0]!
   43fdc:	mov	r0, r4
   43fe0:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   43fe4:	ldr	r1, [r4, #32]
   43fe8:	ldr	r0, [r4, #20]
   43fec:	cmp	r9, #0
   43ff0:	add	r1, r1, #1
   43ff4:	str	r1, [r4, #32]
   43ff8:	add	r1, r0, #1
   43ffc:	str	r1, [r4, #20]
   44000:	mov	r1, #91	; 0x5b
   44004:	strb	r1, [r0]
   44008:	beq	44220 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   4400c:	ldrb	r1, [r4, #25]
   44010:	ldr	r0, [r4, #20]
   44014:	cmp	r1, #0
   44018:	beq	440d4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x198>
   4401c:	add	r1, r0, #1
   44020:	str	r1, [r4, #20]
   44024:	mov	r1, #10
   44028:	strb	r1, [r0]
   4402c:	ldr	r0, [r4, #20]
   44030:	ldrb	r2, [r4, #25]
   44034:	ldr	r3, [r4, #32]
   44038:	ldr	r1, [r4, #16]
   4403c:	mla	r7, r3, r2, r0
   44040:	mul	r5, r3, r2
   44044:	cmp	r7, r1
   44048:	bls	440b8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x17c>
   4404c:	cmp	r0, r1
   44050:	bcc	4406c <flatcc_json_printer_bool_enum_vector_field@@Base+0x130>
   44054:	ldr	r2, [r4, #44]	; 0x2c
   44058:	mov	r0, r4
   4405c:	mov	r1, #0
   44060:	blx	r2
   44064:	ldr	r1, [r4, #16]
   44068:	ldr	r0, [r4, #20]
   4406c:	sub	r6, r1, r0
   44070:	cmp	r6, r5
   44074:	bcs	440b8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x17c>
   44078:	mov	r1, #32
   4407c:	mov	r2, r6
   44080:	bl	14ee4 <memset@plt>
   44084:	ldr	r0, [r4, #20]
   44088:	ldr	r2, [r4, #44]	; 0x2c
   4408c:	mov	r1, #0
   44090:	add	r0, r0, r6
   44094:	str	r0, [r4, #20]
   44098:	mov	r0, r4
   4409c:	blx	r2
   440a0:	ldr	r1, [r4, #16]
   440a4:	ldr	r0, [r4, #20]
   440a8:	sub	r5, r5, r6
   440ac:	sub	r6, r1, r0
   440b0:	cmp	r5, r6
   440b4:	bhi	44078 <flatcc_json_printer_bool_enum_vector_field@@Base+0x13c>
   440b8:	mov	r1, #32
   440bc:	mov	r2, r5
   440c0:	bl	14ee4 <memset@plt>
   440c4:	ldr	r0, [r4, #20]
   440c8:	add	r0, r0, r5
   440cc:	str	r0, [r4, #20]
   440d0:	b	440f0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b4>
   440d4:	ldr	r1, [r4, #16]
   440d8:	cmp	r0, r1
   440dc:	bcc	440f0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b4>
   440e0:	ldr	r2, [r4, #44]	; 0x2c
   440e4:	mov	r0, r4
   440e8:	mov	r1, #0
   440ec:	blx	r2
   440f0:	ldrb	r1, [r8, #4]
   440f4:	mov	r0, r4
   440f8:	blx	sl
   440fc:	subs	r9, r9, #1
   44100:	beq	44220 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   44104:	add	r7, r8, #5
   44108:	mov	r8, #44	; 0x2c
   4410c:	b	4413c <flatcc_json_printer_bool_enum_vector_field@@Base+0x200>
   44110:	mov	r1, #32
   44114:	mov	r2, r5
   44118:	bl	14ee4 <memset@plt>
   4411c:	ldr	r0, [r4, #20]
   44120:	add	r0, r0, r5
   44124:	str	r0, [r4, #20]
   44128:	ldrb	r1, [r7], #1
   4412c:	mov	r0, r4
   44130:	blx	sl
   44134:	cmp	r9, #0
   44138:	beq	44220 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   4413c:	ldr	r0, [r4, #20]
   44140:	sub	r9, r9, #1
   44144:	add	r1, r0, #1
   44148:	str	r1, [r4, #20]
   4414c:	strb	r8, [r0]
   44150:	ldrb	r1, [r4, #25]
   44154:	ldr	r0, [r4, #20]
   44158:	cmp	r1, #0
   4415c:	beq	44200 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   44160:	add	r1, r0, #1
   44164:	str	r1, [r4, #20]
   44168:	mov	r1, #10
   4416c:	strb	r1, [r0]
   44170:	ldr	r0, [r4, #20]
   44174:	ldrb	r2, [r4, #25]
   44178:	ldr	r3, [r4, #32]
   4417c:	ldr	r1, [r4, #16]
   44180:	mla	r6, r3, r2, r0
   44184:	mul	r5, r3, r2
   44188:	cmp	r6, r1
   4418c:	bls	44110 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   44190:	cmp	r0, r1
   44194:	bcc	441b0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x274>
   44198:	ldr	r2, [r4, #44]	; 0x2c
   4419c:	mov	r0, r4
   441a0:	mov	r1, #0
   441a4:	blx	r2
   441a8:	ldr	r1, [r4, #16]
   441ac:	ldr	r0, [r4, #20]
   441b0:	sub	r6, r1, r0
   441b4:	cmp	r6, r5
   441b8:	bcs	44110 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   441bc:	mov	r1, #32
   441c0:	mov	r2, r6
   441c4:	bl	14ee4 <memset@plt>
   441c8:	ldr	r0, [r4, #20]
   441cc:	ldr	r2, [r4, #44]	; 0x2c
   441d0:	mov	r1, #0
   441d4:	add	r0, r0, r6
   441d8:	str	r0, [r4, #20]
   441dc:	mov	r0, r4
   441e0:	blx	r2
   441e4:	ldr	r1, [r4, #16]
   441e8:	ldr	r0, [r4, #20]
   441ec:	sub	r5, r5, r6
   441f0:	sub	r6, r1, r0
   441f4:	cmp	r5, r6
   441f8:	bhi	441bc <flatcc_json_printer_bool_enum_vector_field@@Base+0x280>
   441fc:	b	44110 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   44200:	ldr	r1, [r4, #16]
   44204:	cmp	r0, r1
   44208:	bcc	44128 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
   4420c:	ldr	r2, [r4, #44]	; 0x2c
   44210:	mov	r0, r4
   44214:	mov	r1, #0
   44218:	blx	r2
   4421c:	b	44128 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
   44220:	ldrb	r1, [r4, #25]
   44224:	ldr	r0, [r4, #20]
   44228:	cmp	r1, #0
   4422c:	beq	442ec <flatcc_json_printer_bool_enum_vector_field@@Base+0x3b0>
   44230:	add	r1, r0, #1
   44234:	str	r1, [r4, #20]
   44238:	mov	r1, #10
   4423c:	strb	r1, [r0]
   44240:	ldr	r0, [r4, #32]
   44244:	sub	r2, r0, #1
   44248:	str	r2, [r4, #32]
   4424c:	ldrb	r3, [r4, #25]
   44250:	ldr	r0, [r4, #20]
   44254:	ldr	r1, [r4, #16]
   44258:	mla	r7, r2, r3, r0
   4425c:	mul	r5, r2, r3
   44260:	cmp	r7, r1
   44264:	bls	442d4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x398>
   44268:	cmp	r0, r1
   4426c:	bcc	44288 <flatcc_json_printer_bool_enum_vector_field@@Base+0x34c>
   44270:	ldr	r2, [r4, #44]	; 0x2c
   44274:	mov	r0, r4
   44278:	mov	r1, #0
   4427c:	blx	r2
   44280:	ldr	r1, [r4, #16]
   44284:	ldr	r0, [r4, #20]
   44288:	sub	r6, r1, r0
   4428c:	cmp	r6, r5
   44290:	bcs	442d4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x398>
   44294:	mov	r1, #32
   44298:	mov	r2, r6
   4429c:	bl	14ee4 <memset@plt>
   442a0:	ldr	r0, [r4, #20]
   442a4:	ldr	r2, [r4, #44]	; 0x2c
   442a8:	mov	r1, #0
   442ac:	add	r0, r0, r6
   442b0:	str	r0, [r4, #20]
   442b4:	mov	r0, r4
   442b8:	blx	r2
   442bc:	ldr	r1, [r4, #16]
   442c0:	ldr	r0, [r4, #20]
   442c4:	sub	r5, r5, r6
   442c8:	sub	r6, r1, r0
   442cc:	cmp	r5, r6
   442d0:	bhi	44294 <flatcc_json_printer_bool_enum_vector_field@@Base+0x358>
   442d4:	mov	r1, #32
   442d8:	mov	r2, r5
   442dc:	bl	14ee4 <memset@plt>
   442e0:	ldr	r0, [r4, #20]
   442e4:	add	r0, r0, r5
   442e8:	str	r0, [r4, #20]
   442ec:	add	r1, r0, #1
   442f0:	str	r1, [r4, #20]
   442f4:	mov	r1, #93	; 0x5d
   442f8:	strb	r1, [r0]
   442fc:	sub	sp, fp, #28
   44300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00044304 <flatcc_json_printer_struct_vector_field@@Base>:
   44304:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44308:	add	fp, sp, #28
   4430c:	sub	sp, sp, #4
   44310:	mov	r4, r0
   44314:	mov	r0, #4
   44318:	add	r0, r0, r2, lsl #1
   4431c:	ldr	r2, [r1, #8]
   44320:	cmp	r0, r2
   44324:	bge	44344 <flatcc_json_printer_struct_vector_field@@Base+0x40>
   44328:	ldr	r2, [r1, #4]
   4432c:	add	r0, r2, r0
   44330:	ldrh	r0, [r0]
   44334:	cmp	r0, #0
   44338:	ldrne	r2, [r1]
   4433c:	addsne	r6, r2, r0
   44340:	bne	4434c <flatcc_json_printer_struct_vector_field@@Base+0x48>
   44344:	sub	sp, fp, #28
   44348:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4434c:	ldr	r0, [r1, #16]
   44350:	ldr	r2, [fp, #8]
   44354:	add	r7, r0, #1
   44358:	cmp	r0, #0
   4435c:	str	r7, [r1, #16]
   44360:	beq	44378 <flatcc_json_printer_struct_vector_field@@Base+0x74>
   44364:	ldr	r0, [r4, #20]
   44368:	add	r1, r0, #1
   4436c:	str	r1, [r4, #20]
   44370:	mov	r1, #44	; 0x2c
   44374:	strb	r1, [r0]
   44378:	ldr	r0, [r6]
   4437c:	mov	r1, r3
   44380:	ldr	r5, [r6, r0]!
   44384:	mov	r0, r4
   44388:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   4438c:	ldr	r1, [r4, #32]
   44390:	ldr	r0, [r4, #20]
   44394:	cmp	r5, #0
   44398:	add	r1, r1, #1
   4439c:	str	r1, [r4, #32]
   443a0:	add	r1, r0, #1
   443a4:	str	r1, [r4, #20]
   443a8:	mov	r1, #91	; 0x5b
   443ac:	strb	r1, [r0]
   443b0:	beq	447c8 <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   443b4:	ldrb	r1, [r4, #25]
   443b8:	ldr	r0, [r4, #20]
   443bc:	add	r9, r6, #4
   443c0:	cmp	r1, #0
   443c4:	beq	44480 <flatcc_json_printer_struct_vector_field@@Base+0x17c>
   443c8:	add	r1, r0, #1
   443cc:	str	r1, [r4, #20]
   443d0:	mov	r1, #10
   443d4:	strb	r1, [r0]
   443d8:	ldr	r0, [r4, #20]
   443dc:	ldrb	r2, [r4, #25]
   443e0:	ldr	r3, [r4, #32]
   443e4:	ldr	r1, [r4, #16]
   443e8:	mla	r7, r3, r2, r0
   443ec:	mul	r6, r3, r2
   443f0:	cmp	r7, r1
   443f4:	bls	44464 <flatcc_json_printer_struct_vector_field@@Base+0x160>
   443f8:	cmp	r0, r1
   443fc:	bcc	44418 <flatcc_json_printer_struct_vector_field@@Base+0x114>
   44400:	ldr	r2, [r4, #44]	; 0x2c
   44404:	mov	r0, r4
   44408:	mov	r1, #0
   4440c:	blx	r2
   44410:	ldr	r1, [r4, #16]
   44414:	ldr	r0, [r4, #20]
   44418:	sub	r7, r1, r0
   4441c:	cmp	r7, r6
   44420:	bcs	44464 <flatcc_json_printer_struct_vector_field@@Base+0x160>
   44424:	mov	r1, #32
   44428:	mov	r2, r7
   4442c:	bl	14ee4 <memset@plt>
   44430:	ldr	r0, [r4, #20]
   44434:	ldr	r2, [r4, #44]	; 0x2c
   44438:	mov	r1, #0
   4443c:	add	r0, r0, r7
   44440:	str	r0, [r4, #20]
   44444:	mov	r0, r4
   44448:	blx	r2
   4444c:	ldr	r1, [r4, #16]
   44450:	ldr	r0, [r4, #20]
   44454:	sub	r6, r6, r7
   44458:	sub	r7, r1, r0
   4445c:	cmp	r6, r7
   44460:	bhi	44424 <flatcc_json_printer_struct_vector_field@@Base+0x120>
   44464:	mov	r1, #32
   44468:	mov	r2, r6
   4446c:	bl	14ee4 <memset@plt>
   44470:	ldr	r0, [r4, #20]
   44474:	add	r0, r0, r6
   44478:	str	r0, [r4, #20]
   4447c:	b	444a0 <flatcc_json_printer_struct_vector_field@@Base+0x19c>
   44480:	ldr	r1, [r4, #16]
   44484:	cmp	r0, r1
   44488:	bcc	444a0 <flatcc_json_printer_struct_vector_field@@Base+0x19c>
   4448c:	ldr	r2, [r4, #44]	; 0x2c
   44490:	mov	r0, r4
   44494:	mov	r1, #0
   44498:	blx	r2
   4449c:	ldr	r0, [r4, #20]
   444a0:	add	r1, r0, #1
   444a4:	ldr	r2, [fp, #16]
   444a8:	str	r1, [r4, #20]
   444ac:	ldr	r1, [r4, #32]
   444b0:	add	r1, r1, #1
   444b4:	str	r1, [r4, #32]
   444b8:	mov	r1, #123	; 0x7b
   444bc:	strb	r1, [r0]
   444c0:	mov	r0, r4
   444c4:	mov	r1, r9
   444c8:	blx	r2
   444cc:	ldrb	r1, [r4, #25]
   444d0:	ldr	r0, [r4, #20]
   444d4:	cmp	r1, #0
   444d8:	beq	44598 <flatcc_json_printer_struct_vector_field@@Base+0x294>
   444dc:	add	r1, r0, #1
   444e0:	str	r1, [r4, #20]
   444e4:	mov	r1, #10
   444e8:	strb	r1, [r0]
   444ec:	ldr	r0, [r4, #32]
   444f0:	sub	r2, r0, #1
   444f4:	str	r2, [r4, #32]
   444f8:	ldrb	r3, [r4, #25]
   444fc:	ldr	r0, [r4, #20]
   44500:	ldr	r1, [r4, #16]
   44504:	mla	r7, r2, r3, r0
   44508:	mul	r6, r2, r3
   4450c:	cmp	r7, r1
   44510:	bls	44580 <flatcc_json_printer_struct_vector_field@@Base+0x27c>
   44514:	cmp	r0, r1
   44518:	bcc	44534 <flatcc_json_printer_struct_vector_field@@Base+0x230>
   4451c:	ldr	r2, [r4, #44]	; 0x2c
   44520:	mov	r0, r4
   44524:	mov	r1, #0
   44528:	blx	r2
   4452c:	ldr	r1, [r4, #16]
   44530:	ldr	r0, [r4, #20]
   44534:	sub	r7, r1, r0
   44538:	cmp	r7, r6
   4453c:	bcs	44580 <flatcc_json_printer_struct_vector_field@@Base+0x27c>
   44540:	mov	r1, #32
   44544:	mov	r2, r7
   44548:	bl	14ee4 <memset@plt>
   4454c:	ldr	r0, [r4, #20]
   44550:	ldr	r2, [r4, #44]	; 0x2c
   44554:	mov	r1, #0
   44558:	add	r0, r0, r7
   4455c:	str	r0, [r4, #20]
   44560:	mov	r0, r4
   44564:	blx	r2
   44568:	ldr	r1, [r4, #16]
   4456c:	ldr	r0, [r4, #20]
   44570:	sub	r6, r6, r7
   44574:	sub	r7, r1, r0
   44578:	cmp	r6, r7
   4457c:	bhi	44540 <flatcc_json_printer_struct_vector_field@@Base+0x23c>
   44580:	mov	r1, #32
   44584:	mov	r2, r6
   44588:	bl	14ee4 <memset@plt>
   4458c:	ldr	r0, [r4, #20]
   44590:	add	r0, r0, r6
   44594:	str	r0, [r4, #20]
   44598:	add	r1, r0, #1
   4459c:	mov	sl, #125	; 0x7d
   445a0:	subs	r5, r5, #1
   445a4:	str	r1, [r4, #20]
   445a8:	strb	sl, [r0]
   445ac:	beq	447c8 <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   445b0:	mov	r8, #10
   445b4:	b	445e4 <flatcc_json_printer_struct_vector_field@@Base+0x2e0>
   445b8:	mov	r1, #32
   445bc:	mov	r2, r6
   445c0:	bl	14ee4 <memset@plt>
   445c4:	ldr	r0, [r4, #20]
   445c8:	add	r0, r0, r6
   445cc:	str	r0, [r4, #20]
   445d0:	add	r1, r0, #1
   445d4:	cmp	r5, #0
   445d8:	str	r1, [r4, #20]
   445dc:	strb	sl, [r0]
   445e0:	beq	447c8 <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   445e4:	ldr	r0, [r4, #20]
   445e8:	add	r1, r0, #1
   445ec:	str	r1, [r4, #20]
   445f0:	mov	r1, #44	; 0x2c
   445f4:	strb	r1, [r0]
   445f8:	ldr	r0, [fp, #12]
   445fc:	ldrb	r1, [r4, #25]
   44600:	add	r9, r9, r0
   44604:	ldr	r0, [r4, #20]
   44608:	cmp	r1, #0
   4460c:	beq	446c4 <flatcc_json_printer_struct_vector_field@@Base+0x3c0>
   44610:	add	r1, r0, #1
   44614:	str	r1, [r4, #20]
   44618:	strb	r8, [r0]
   4461c:	ldr	r0, [r4, #20]
   44620:	ldrb	r2, [r4, #25]
   44624:	ldr	r3, [r4, #32]
   44628:	ldr	r1, [r4, #16]
   4462c:	mla	r7, r3, r2, r0
   44630:	mul	r6, r3, r2
   44634:	cmp	r7, r1
   44638:	bls	446a8 <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   4463c:	cmp	r0, r1
   44640:	bcc	4465c <flatcc_json_printer_struct_vector_field@@Base+0x358>
   44644:	ldr	r2, [r4, #44]	; 0x2c
   44648:	mov	r0, r4
   4464c:	mov	r1, #0
   44650:	blx	r2
   44654:	ldr	r1, [r4, #16]
   44658:	ldr	r0, [r4, #20]
   4465c:	sub	r7, r1, r0
   44660:	cmp	r7, r6
   44664:	bcs	446a8 <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   44668:	mov	r1, #32
   4466c:	mov	r2, r7
   44670:	bl	14ee4 <memset@plt>
   44674:	ldr	r0, [r4, #20]
   44678:	ldr	r2, [r4, #44]	; 0x2c
   4467c:	mov	r1, #0
   44680:	add	r0, r0, r7
   44684:	str	r0, [r4, #20]
   44688:	mov	r0, r4
   4468c:	blx	r2
   44690:	ldr	r1, [r4, #16]
   44694:	ldr	r0, [r4, #20]
   44698:	sub	r6, r6, r7
   4469c:	sub	r7, r1, r0
   446a0:	cmp	r6, r7
   446a4:	bhi	44668 <flatcc_json_printer_struct_vector_field@@Base+0x364>
   446a8:	mov	r1, #32
   446ac:	mov	r2, r6
   446b0:	bl	14ee4 <memset@plt>
   446b4:	ldr	r0, [r4, #20]
   446b8:	add	r0, r0, r6
   446bc:	str	r0, [r4, #20]
   446c0:	b	446e4 <flatcc_json_printer_struct_vector_field@@Base+0x3e0>
   446c4:	ldr	r1, [r4, #16]
   446c8:	cmp	r0, r1
   446cc:	bcc	446e4 <flatcc_json_printer_struct_vector_field@@Base+0x3e0>
   446d0:	ldr	r2, [r4, #44]	; 0x2c
   446d4:	mov	r0, r4
   446d8:	mov	r1, #0
   446dc:	blx	r2
   446e0:	ldr	r0, [r4, #20]
   446e4:	add	r1, r0, #1
   446e8:	ldr	r2, [fp, #16]
   446ec:	sub	r5, r5, #1
   446f0:	str	r1, [r4, #20]
   446f4:	ldr	r1, [r4, #32]
   446f8:	add	r1, r1, #1
   446fc:	str	r1, [r4, #32]
   44700:	mov	r1, #123	; 0x7b
   44704:	strb	r1, [r0]
   44708:	mov	r0, r4
   4470c:	mov	r1, r9
   44710:	blx	r2
   44714:	ldrb	r1, [r4, #25]
   44718:	ldr	r0, [r4, #20]
   4471c:	cmp	r1, #0
   44720:	beq	445d0 <flatcc_json_printer_struct_vector_field@@Base+0x2cc>
   44724:	add	r1, r0, #1
   44728:	str	r1, [r4, #20]
   4472c:	strb	r8, [r0]
   44730:	ldr	r0, [r4, #32]
   44734:	sub	r2, r0, #1
   44738:	str	r2, [r4, #32]
   4473c:	ldrb	r3, [r4, #25]
   44740:	ldr	r0, [r4, #20]
   44744:	ldr	r1, [r4, #16]
   44748:	mla	r7, r2, r3, r0
   4474c:	mul	r6, r2, r3
   44750:	cmp	r7, r1
   44754:	bls	445b8 <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   44758:	cmp	r0, r1
   4475c:	bcc	44778 <flatcc_json_printer_struct_vector_field@@Base+0x474>
   44760:	ldr	r2, [r4, #44]	; 0x2c
   44764:	mov	r0, r4
   44768:	mov	r1, #0
   4476c:	blx	r2
   44770:	ldr	r1, [r4, #16]
   44774:	ldr	r0, [r4, #20]
   44778:	sub	r7, r1, r0
   4477c:	cmp	r7, r6
   44780:	bcs	445b8 <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   44784:	mov	r1, #32
   44788:	mov	r2, r7
   4478c:	bl	14ee4 <memset@plt>
   44790:	ldr	r0, [r4, #20]
   44794:	ldr	r2, [r4, #44]	; 0x2c
   44798:	mov	r1, #0
   4479c:	add	r0, r0, r7
   447a0:	str	r0, [r4, #20]
   447a4:	mov	r0, r4
   447a8:	blx	r2
   447ac:	ldr	r1, [r4, #16]
   447b0:	ldr	r0, [r4, #20]
   447b4:	sub	r6, r6, r7
   447b8:	sub	r7, r1, r0
   447bc:	cmp	r6, r7
   447c0:	bhi	44784 <flatcc_json_printer_struct_vector_field@@Base+0x480>
   447c4:	b	445b8 <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   447c8:	ldrb	r1, [r4, #25]
   447cc:	ldr	r0, [r4, #20]
   447d0:	cmp	r1, #0
   447d4:	beq	44894 <flatcc_json_printer_struct_vector_field@@Base+0x590>
   447d8:	add	r1, r0, #1
   447dc:	str	r1, [r4, #20]
   447e0:	mov	r1, #10
   447e4:	strb	r1, [r0]
   447e8:	ldr	r0, [r4, #32]
   447ec:	sub	r2, r0, #1
   447f0:	str	r2, [r4, #32]
   447f4:	ldrb	r3, [r4, #25]
   447f8:	ldr	r0, [r4, #20]
   447fc:	ldr	r1, [r4, #16]
   44800:	mla	r7, r2, r3, r0
   44804:	mul	r5, r2, r3
   44808:	cmp	r7, r1
   4480c:	bls	4487c <flatcc_json_printer_struct_vector_field@@Base+0x578>
   44810:	cmp	r0, r1
   44814:	bcc	44830 <flatcc_json_printer_struct_vector_field@@Base+0x52c>
   44818:	ldr	r2, [r4, #44]	; 0x2c
   4481c:	mov	r0, r4
   44820:	mov	r1, #0
   44824:	blx	r2
   44828:	ldr	r1, [r4, #16]
   4482c:	ldr	r0, [r4, #20]
   44830:	sub	r6, r1, r0
   44834:	cmp	r6, r5
   44838:	bcs	4487c <flatcc_json_printer_struct_vector_field@@Base+0x578>
   4483c:	mov	r1, #32
   44840:	mov	r2, r6
   44844:	bl	14ee4 <memset@plt>
   44848:	ldr	r0, [r4, #20]
   4484c:	ldr	r2, [r4, #44]	; 0x2c
   44850:	mov	r1, #0
   44854:	add	r0, r0, r6
   44858:	str	r0, [r4, #20]
   4485c:	mov	r0, r4
   44860:	blx	r2
   44864:	ldr	r1, [r4, #16]
   44868:	ldr	r0, [r4, #20]
   4486c:	sub	r5, r5, r6
   44870:	sub	r6, r1, r0
   44874:	cmp	r5, r6
   44878:	bhi	4483c <flatcc_json_printer_struct_vector_field@@Base+0x538>
   4487c:	mov	r1, #32
   44880:	mov	r2, r5
   44884:	bl	14ee4 <memset@plt>
   44888:	ldr	r0, [r4, #20]
   4488c:	add	r0, r0, r5
   44890:	str	r0, [r4, #20]
   44894:	add	r1, r0, #1
   44898:	str	r1, [r4, #20]
   4489c:	mov	r1, #93	; 0x5d
   448a0:	strb	r1, [r0]
   448a4:	sub	sp, fp, #28
   448a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000448ac <flatcc_json_printer_string_vector_field@@Base>:
   448ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   448b0:	add	fp, sp, #28
   448b4:	sub	sp, sp, #4
   448b8:	mov	r4, r0
   448bc:	mov	r0, #4
   448c0:	add	r0, r0, r2, lsl #1
   448c4:	ldr	r2, [r1, #8]
   448c8:	cmp	r0, r2
   448cc:	bge	448ec <flatcc_json_printer_string_vector_field@@Base+0x40>
   448d0:	ldr	r2, [r1, #4]
   448d4:	add	r0, r2, r0
   448d8:	ldrh	r0, [r0]
   448dc:	cmp	r0, #0
   448e0:	ldrne	r2, [r1]
   448e4:	addsne	r5, r2, r0
   448e8:	bne	448f4 <flatcc_json_printer_string_vector_field@@Base+0x48>
   448ec:	sub	sp, fp, #28
   448f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   448f4:	ldr	r0, [r1, #16]
   448f8:	ldr	r2, [fp, #8]
   448fc:	add	r7, r0, #1
   44900:	cmp	r0, #0
   44904:	str	r7, [r1, #16]
   44908:	beq	44920 <flatcc_json_printer_string_vector_field@@Base+0x74>
   4490c:	ldr	r0, [r4, #20]
   44910:	add	r1, r0, #1
   44914:	str	r1, [r4, #20]
   44918:	mov	r1, #44	; 0x2c
   4491c:	strb	r1, [r0]
   44920:	ldr	r0, [r5]
   44924:	mov	r1, r3
   44928:	ldr	r8, [r5, r0]!
   4492c:	mov	r0, r4
   44930:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   44934:	ldr	r1, [r4, #32]
   44938:	ldr	r0, [r4, #20]
   4493c:	cmp	r8, #0
   44940:	add	r1, r1, #1
   44944:	str	r1, [r4, #32]
   44948:	add	r1, r0, #1
   4494c:	str	r1, [r4, #20]
   44950:	mov	r1, #91	; 0x5b
   44954:	strb	r1, [r0]
   44958:	beq	44b8c <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   4495c:	ldrb	r1, [r4, #25]
   44960:	ldr	r0, [r4, #20]
   44964:	add	r9, r5, #4
   44968:	cmp	r1, #0
   4496c:	beq	44a28 <flatcc_json_printer_string_vector_field@@Base+0x17c>
   44970:	add	r1, r0, #1
   44974:	str	r1, [r4, #20]
   44978:	mov	r1, #10
   4497c:	strb	r1, [r0]
   44980:	ldr	r0, [r4, #20]
   44984:	ldrb	r2, [r4, #25]
   44988:	ldr	r3, [r4, #32]
   4498c:	ldr	r1, [r4, #16]
   44990:	mla	r7, r3, r2, r0
   44994:	mul	r5, r3, r2
   44998:	cmp	r7, r1
   4499c:	bls	44a0c <flatcc_json_printer_string_vector_field@@Base+0x160>
   449a0:	cmp	r0, r1
   449a4:	bcc	449c0 <flatcc_json_printer_string_vector_field@@Base+0x114>
   449a8:	ldr	r2, [r4, #44]	; 0x2c
   449ac:	mov	r0, r4
   449b0:	mov	r1, #0
   449b4:	blx	r2
   449b8:	ldr	r1, [r4, #16]
   449bc:	ldr	r0, [r4, #20]
   449c0:	sub	r6, r1, r0
   449c4:	cmp	r6, r5
   449c8:	bcs	44a0c <flatcc_json_printer_string_vector_field@@Base+0x160>
   449cc:	mov	r1, #32
   449d0:	mov	r2, r6
   449d4:	bl	14ee4 <memset@plt>
   449d8:	ldr	r0, [r4, #20]
   449dc:	ldr	r2, [r4, #44]	; 0x2c
   449e0:	mov	r1, #0
   449e4:	add	r0, r0, r6
   449e8:	str	r0, [r4, #20]
   449ec:	mov	r0, r4
   449f0:	blx	r2
   449f4:	ldr	r1, [r4, #16]
   449f8:	ldr	r0, [r4, #20]
   449fc:	sub	r5, r5, r6
   44a00:	sub	r6, r1, r0
   44a04:	cmp	r5, r6
   44a08:	bhi	449cc <flatcc_json_printer_string_vector_field@@Base+0x120>
   44a0c:	mov	r1, #32
   44a10:	mov	r2, r5
   44a14:	bl	14ee4 <memset@plt>
   44a18:	ldr	r0, [r4, #20]
   44a1c:	add	r0, r0, r5
   44a20:	str	r0, [r4, #20]
   44a24:	b	44a44 <flatcc_json_printer_string_vector_field@@Base+0x198>
   44a28:	ldr	r1, [r4, #16]
   44a2c:	cmp	r0, r1
   44a30:	bcc	44a44 <flatcc_json_printer_string_vector_field@@Base+0x198>
   44a34:	ldr	r2, [r4, #44]	; 0x2c
   44a38:	mov	r0, r4
   44a3c:	mov	r1, #0
   44a40:	blx	r2
   44a44:	ldr	r0, [r9]
   44a48:	mov	r1, r9
   44a4c:	ldr	r2, [r1, r0]!
   44a50:	mov	r0, r4
   44a54:	add	r1, r1, #4
   44a58:	bl	3b0b8 <flatcc_json_printer_string@@Base+0x4>
   44a5c:	subs	r7, r8, #1
   44a60:	beq	44b8c <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   44a64:	mov	r8, #44	; 0x2c
   44a68:	mov	sl, #10
   44a6c:	b	44aa8 <flatcc_json_printer_string_vector_field@@Base+0x1fc>
   44a70:	mov	r1, #32
   44a74:	mov	r2, r5
   44a78:	bl	14ee4 <memset@plt>
   44a7c:	ldr	r0, [r4, #20]
   44a80:	add	r0, r0, r5
   44a84:	str	r0, [r4, #20]
   44a88:	ldr	r0, [r9]
   44a8c:	mov	r1, r9
   44a90:	ldr	r2, [r1, r0]!
   44a94:	mov	r0, r4
   44a98:	add	r1, r1, #4
   44a9c:	bl	3b0b8 <flatcc_json_printer_string@@Base+0x4>
   44aa0:	cmp	r7, #0
   44aa4:	beq	44b8c <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   44aa8:	ldr	r0, [r4, #20]
   44aac:	add	r9, r9, #4
   44ab0:	sub	r7, r7, #1
   44ab4:	add	r1, r0, #1
   44ab8:	str	r1, [r4, #20]
   44abc:	strb	r8, [r0]
   44ac0:	ldrb	r1, [r4, #25]
   44ac4:	ldr	r0, [r4, #20]
   44ac8:	cmp	r1, #0
   44acc:	beq	44b6c <flatcc_json_printer_string_vector_field@@Base+0x2c0>
   44ad0:	add	r1, r0, #1
   44ad4:	str	r1, [r4, #20]
   44ad8:	strb	sl, [r0]
   44adc:	ldr	r0, [r4, #20]
   44ae0:	ldrb	r2, [r4, #25]
   44ae4:	ldr	r3, [r4, #32]
   44ae8:	ldr	r1, [r4, #16]
   44aec:	mla	r6, r3, r2, r0
   44af0:	mul	r5, r3, r2
   44af4:	cmp	r6, r1
   44af8:	bls	44a70 <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   44afc:	cmp	r0, r1
   44b00:	bcc	44b1c <flatcc_json_printer_string_vector_field@@Base+0x270>
   44b04:	ldr	r2, [r4, #44]	; 0x2c
   44b08:	mov	r0, r4
   44b0c:	mov	r1, #0
   44b10:	blx	r2
   44b14:	ldr	r1, [r4, #16]
   44b18:	ldr	r0, [r4, #20]
   44b1c:	sub	r6, r1, r0
   44b20:	cmp	r6, r5
   44b24:	bcs	44a70 <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   44b28:	mov	r1, #32
   44b2c:	mov	r2, r6
   44b30:	bl	14ee4 <memset@plt>
   44b34:	ldr	r0, [r4, #20]
   44b38:	ldr	r2, [r4, #44]	; 0x2c
   44b3c:	mov	r1, #0
   44b40:	add	r0, r0, r6
   44b44:	str	r0, [r4, #20]
   44b48:	mov	r0, r4
   44b4c:	blx	r2
   44b50:	ldr	r1, [r4, #16]
   44b54:	ldr	r0, [r4, #20]
   44b58:	sub	r5, r5, r6
   44b5c:	sub	r6, r1, r0
   44b60:	cmp	r5, r6
   44b64:	bhi	44b28 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   44b68:	b	44a70 <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   44b6c:	ldr	r1, [r4, #16]
   44b70:	cmp	r0, r1
   44b74:	bcc	44a88 <flatcc_json_printer_string_vector_field@@Base+0x1dc>
   44b78:	ldr	r2, [r4, #44]	; 0x2c
   44b7c:	mov	r0, r4
   44b80:	mov	r1, #0
   44b84:	blx	r2
   44b88:	b	44a88 <flatcc_json_printer_string_vector_field@@Base+0x1dc>
   44b8c:	ldrb	r1, [r4, #25]
   44b90:	ldr	r0, [r4, #20]
   44b94:	cmp	r1, #0
   44b98:	beq	44c58 <flatcc_json_printer_string_vector_field@@Base+0x3ac>
   44b9c:	add	r1, r0, #1
   44ba0:	str	r1, [r4, #20]
   44ba4:	mov	r1, #10
   44ba8:	strb	r1, [r0]
   44bac:	ldr	r0, [r4, #32]
   44bb0:	sub	r2, r0, #1
   44bb4:	str	r2, [r4, #32]
   44bb8:	ldrb	r3, [r4, #25]
   44bbc:	ldr	r0, [r4, #20]
   44bc0:	ldr	r1, [r4, #16]
   44bc4:	mla	r7, r2, r3, r0
   44bc8:	mul	r5, r2, r3
   44bcc:	cmp	r7, r1
   44bd0:	bls	44c40 <flatcc_json_printer_string_vector_field@@Base+0x394>
   44bd4:	cmp	r0, r1
   44bd8:	bcc	44bf4 <flatcc_json_printer_string_vector_field@@Base+0x348>
   44bdc:	ldr	r2, [r4, #44]	; 0x2c
   44be0:	mov	r0, r4
   44be4:	mov	r1, #0
   44be8:	blx	r2
   44bec:	ldr	r1, [r4, #16]
   44bf0:	ldr	r0, [r4, #20]
   44bf4:	sub	r6, r1, r0
   44bf8:	cmp	r6, r5
   44bfc:	bcs	44c40 <flatcc_json_printer_string_vector_field@@Base+0x394>
   44c00:	mov	r1, #32
   44c04:	mov	r2, r6
   44c08:	bl	14ee4 <memset@plt>
   44c0c:	ldr	r0, [r4, #20]
   44c10:	ldr	r2, [r4, #44]	; 0x2c
   44c14:	mov	r1, #0
   44c18:	add	r0, r0, r6
   44c1c:	str	r0, [r4, #20]
   44c20:	mov	r0, r4
   44c24:	blx	r2
   44c28:	ldr	r1, [r4, #16]
   44c2c:	ldr	r0, [r4, #20]
   44c30:	sub	r5, r5, r6
   44c34:	sub	r6, r1, r0
   44c38:	cmp	r5, r6
   44c3c:	bhi	44c00 <flatcc_json_printer_string_vector_field@@Base+0x354>
   44c40:	mov	r1, #32
   44c44:	mov	r2, r5
   44c48:	bl	14ee4 <memset@plt>
   44c4c:	ldr	r0, [r4, #20]
   44c50:	add	r0, r0, r5
   44c54:	str	r0, [r4, #20]
   44c58:	add	r1, r0, #1
   44c5c:	str	r1, [r4, #20]
   44c60:	mov	r1, #93	; 0x5d
   44c64:	strb	r1, [r0]
   44c68:	sub	sp, fp, #28
   44c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00044c70 <flatcc_json_printer_table_vector_field@@Base>:
   44c70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44c74:	add	fp, sp, #28
   44c78:	sub	sp, sp, #20
   44c7c:	mov	sl, r1
   44c80:	ldr	r1, [r1, #8]
   44c84:	mov	r4, r0
   44c88:	mov	r0, #4
   44c8c:	add	r0, r0, r2, lsl #1
   44c90:	cmp	r0, r1
   44c94:	bge	44cb4 <flatcc_json_printer_table_vector_field@@Base+0x44>
   44c98:	ldr	r1, [sl, #4]
   44c9c:	add	r0, r1, r0
   44ca0:	ldrh	r0, [r0]
   44ca4:	cmp	r0, #0
   44ca8:	ldrne	r1, [sl]
   44cac:	addsne	r5, r1, r0
   44cb0:	bne	44cbc <flatcc_json_printer_table_vector_field@@Base+0x4c>
   44cb4:	sub	sp, fp, #28
   44cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44cbc:	ldr	r0, [sl, #16]
   44cc0:	ldr	r2, [fp, #8]
   44cc4:	add	r1, r0, #1
   44cc8:	cmp	r0, #0
   44ccc:	str	r1, [sl, #16]
   44cd0:	beq	44ce8 <flatcc_json_printer_table_vector_field@@Base+0x78>
   44cd4:	ldr	r0, [r4, #20]
   44cd8:	add	r1, r0, #1
   44cdc:	str	r1, [r4, #20]
   44ce0:	mov	r1, #44	; 0x2c
   44ce4:	strb	r1, [r0]
   44ce8:	ldr	r0, [r5]
   44cec:	mov	r1, r3
   44cf0:	ldr	r8, [r5, r0]!
   44cf4:	mov	r0, r4
   44cf8:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   44cfc:	ldr	r1, [r4, #32]
   44d00:	ldr	r0, [r4, #20]
   44d04:	cmp	r8, #0
   44d08:	add	r1, r1, #1
   44d0c:	str	r1, [r4, #32]
   44d10:	add	r1, r0, #1
   44d14:	str	r1, [r4, #20]
   44d18:	mov	r1, #91	; 0x5b
   44d1c:	strb	r1, [r0]
   44d20:	beq	45028 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   44d24:	ldr	r0, [sl, #12]
   44d28:	ldr	r6, [fp, #12]
   44d2c:	add	r5, r5, #4
   44d30:	subs	r0, r0, #1
   44d34:	beq	44e7c <flatcc_json_printer_table_vector_field@@Base+0x20c>
   44d38:	ldr	r3, [r4, #32]
   44d3c:	ldr	r2, [r4, #20]
   44d40:	ldr	r1, [r5]
   44d44:	add	r3, r3, #1
   44d48:	add	r1, r5, r1
   44d4c:	str	r3, [r4, #32]
   44d50:	add	r3, r2, #1
   44d54:	str	r3, [r4, #20]
   44d58:	mov	r3, #123	; 0x7b
   44d5c:	strb	r3, [r2]
   44d60:	str	r0, [sp, #12]
   44d64:	mov	r0, #0
   44d68:	str	r0, [sp, #16]
   44d6c:	str	r1, [sp]
   44d70:	ldr	r0, [r1]
   44d74:	sub	r2, r1, r0
   44d78:	str	r2, [sp, #4]
   44d7c:	ldrh	r0, [r1, -r0]
   44d80:	mov	r1, sp
   44d84:	str	r0, [sp, #8]
   44d88:	mov	r0, r4
   44d8c:	blx	r6
   44d90:	ldrb	r1, [r4, #25]
   44d94:	ldr	r0, [r4, #20]
   44d98:	cmp	r1, #0
   44d9c:	beq	44e60 <flatcc_json_printer_table_vector_field@@Base+0x1f0>
   44da0:	add	r1, r0, #1
   44da4:	str	r1, [r4, #20]
   44da8:	mov	r1, #10
   44dac:	strb	r1, [r0]
   44db0:	ldr	r0, [r4, #32]
   44db4:	sub	r2, r0, #1
   44db8:	str	r2, [r4, #32]
   44dbc:	ldrb	r3, [r4, #25]
   44dc0:	ldr	r0, [r4, #20]
   44dc4:	ldr	r1, [r4, #16]
   44dc8:	mla	r7, r2, r3, r0
   44dcc:	mul	r6, r2, r3
   44dd0:	cmp	r7, r1
   44dd4:	bls	44e44 <flatcc_json_printer_table_vector_field@@Base+0x1d4>
   44dd8:	cmp	r0, r1
   44ddc:	bcc	44df8 <flatcc_json_printer_table_vector_field@@Base+0x188>
   44de0:	ldr	r2, [r4, #44]	; 0x2c
   44de4:	mov	r0, r4
   44de8:	mov	r1, #0
   44dec:	blx	r2
   44df0:	ldr	r1, [r4, #16]
   44df4:	ldr	r0, [r4, #20]
   44df8:	sub	r7, r1, r0
   44dfc:	cmp	r7, r6
   44e00:	bcs	44e44 <flatcc_json_printer_table_vector_field@@Base+0x1d4>
   44e04:	mov	r1, #32
   44e08:	mov	r2, r7
   44e0c:	bl	14ee4 <memset@plt>
   44e10:	ldr	r0, [r4, #20]
   44e14:	ldr	r2, [r4, #44]	; 0x2c
   44e18:	mov	r1, #0
   44e1c:	add	r0, r0, r7
   44e20:	str	r0, [r4, #20]
   44e24:	mov	r0, r4
   44e28:	blx	r2
   44e2c:	ldr	r1, [r4, #16]
   44e30:	ldr	r0, [r4, #20]
   44e34:	sub	r6, r6, r7
   44e38:	sub	r7, r1, r0
   44e3c:	cmp	r6, r7
   44e40:	bhi	44e04 <flatcc_json_printer_table_vector_field@@Base+0x194>
   44e44:	mov	r1, #32
   44e48:	mov	r2, r6
   44e4c:	bl	14ee4 <memset@plt>
   44e50:	ldr	r0, [r4, #20]
   44e54:	add	r0, r0, r6
   44e58:	ldr	r6, [fp, #12]
   44e5c:	str	r0, [r4, #20]
   44e60:	add	r1, r0, #1
   44e64:	str	r1, [r4, #20]
   44e68:	mov	r1, #125	; 0x7d
   44e6c:	strb	r1, [r0]
   44e70:	subs	r9, r8, #1
   44e74:	bne	44e94 <flatcc_json_printer_table_vector_field@@Base+0x224>
   44e78:	b	45028 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   44e7c:	ldr	r0, [r4, #36]	; 0x24
   44e80:	cmp	r0, #0
   44e84:	moveq	r0, #2
   44e88:	streq	r0, [r4, #36]	; 0x24
   44e8c:	subs	r9, r8, #1
   44e90:	beq	45028 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   44e94:	mov	r8, #44	; 0x2c
   44e98:	b	44eb4 <flatcc_json_printer_table_vector_field@@Base+0x244>
   44e9c:	ldr	r0, [r4, #36]	; 0x24
   44ea0:	cmp	r0, #0
   44ea4:	moveq	r0, #2
   44ea8:	streq	r0, [r4, #36]	; 0x24
   44eac:	cmp	r9, #0
   44eb0:	beq	45028 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   44eb4:	ldr	r0, [r4, #20]
   44eb8:	sub	r9, r9, #1
   44ebc:	add	r1, r0, #1
   44ec0:	str	r1, [r4, #20]
   44ec4:	strb	r8, [r0]
   44ec8:	ldr	r0, [sl, #12]
   44ecc:	ldr	r1, [r5, #4]!
   44ed0:	subs	r0, r0, #1
   44ed4:	beq	44e9c <flatcc_json_printer_table_vector_field@@Base+0x22c>
   44ed8:	ldr	r3, [r4, #32]
   44edc:	ldr	r2, [r4, #20]
   44ee0:	add	r1, r5, r1
   44ee4:	add	r3, r3, #1
   44ee8:	str	r3, [r4, #32]
   44eec:	add	r3, r2, #1
   44ef0:	str	r3, [r4, #20]
   44ef4:	mov	r3, #123	; 0x7b
   44ef8:	strb	r3, [r2]
   44efc:	str	r0, [sp, #12]
   44f00:	mov	r0, #0
   44f04:	str	r0, [sp, #16]
   44f08:	str	r1, [sp]
   44f0c:	ldr	r0, [r1]
   44f10:	sub	r2, r1, r0
   44f14:	str	r2, [sp, #4]
   44f18:	ldrh	r0, [r1, -r0]
   44f1c:	mov	r1, sp
   44f20:	str	r0, [sp, #8]
   44f24:	mov	r0, r4
   44f28:	blx	r6
   44f2c:	ldrb	r1, [r4, #25]
   44f30:	ldr	r0, [r4, #20]
   44f34:	cmp	r1, #0
   44f38:	beq	45010 <flatcc_json_printer_table_vector_field@@Base+0x3a0>
   44f3c:	add	r1, r0, #1
   44f40:	str	r1, [r4, #20]
   44f44:	mov	r1, #10
   44f48:	strb	r1, [r0]
   44f4c:	ldr	r0, [r4, #32]
   44f50:	sub	r2, r0, #1
   44f54:	str	r2, [r4, #32]
   44f58:	ldrb	r3, [r4, #25]
   44f5c:	ldr	r0, [r4, #20]
   44f60:	ldr	r1, [r4, #16]
   44f64:	mla	r6, r2, r3, r0
   44f68:	mul	r7, r2, r3
   44f6c:	cmp	r6, r1
   44f70:	bls	44ff4 <flatcc_json_printer_table_vector_field@@Base+0x384>
   44f74:	cmp	r0, r1
   44f78:	bcc	44f94 <flatcc_json_printer_table_vector_field@@Base+0x324>
   44f7c:	ldr	r2, [r4, #44]	; 0x2c
   44f80:	mov	r0, r4
   44f84:	mov	r1, #0
   44f88:	blx	r2
   44f8c:	ldr	r1, [r4, #16]
   44f90:	ldr	r0, [r4, #20]
   44f94:	sub	r6, r1, r0
   44f98:	cmp	r6, r7
   44f9c:	bcs	44fe0 <flatcc_json_printer_table_vector_field@@Base+0x370>
   44fa0:	mov	r1, #32
   44fa4:	mov	r2, r6
   44fa8:	bl	14ee4 <memset@plt>
   44fac:	ldr	r0, [r4, #20]
   44fb0:	ldr	r2, [r4, #44]	; 0x2c
   44fb4:	mov	r1, #0
   44fb8:	add	r0, r0, r6
   44fbc:	str	r0, [r4, #20]
   44fc0:	mov	r0, r4
   44fc4:	blx	r2
   44fc8:	ldr	r1, [r4, #16]
   44fcc:	ldr	r0, [r4, #20]
   44fd0:	sub	r7, r7, r6
   44fd4:	sub	r6, r1, r0
   44fd8:	cmp	r7, r6
   44fdc:	bhi	44fa0 <flatcc_json_printer_table_vector_field@@Base+0x330>
   44fe0:	ldr	r6, [fp, #12]
   44fe4:	mov	r1, #32
   44fe8:	mov	r2, r7
   44fec:	bl	14ee4 <memset@plt>
   44ff0:	b	45004 <flatcc_json_printer_table_vector_field@@Base+0x394>
   44ff4:	mov	r1, #32
   44ff8:	mov	r2, r7
   44ffc:	bl	14ee4 <memset@plt>
   45000:	ldr	r6, [fp, #12]
   45004:	ldr	r0, [r4, #20]
   45008:	add	r0, r0, r7
   4500c:	str	r0, [r4, #20]
   45010:	add	r1, r0, #1
   45014:	str	r1, [r4, #20]
   45018:	mov	r1, #125	; 0x7d
   4501c:	strb	r1, [r0]
   45020:	cmp	r9, #0
   45024:	bne	44eb4 <flatcc_json_printer_table_vector_field@@Base+0x244>
   45028:	ldrb	r1, [r4, #25]
   4502c:	ldr	r0, [r4, #20]
   45030:	cmp	r1, #0
   45034:	beq	450f4 <flatcc_json_printer_table_vector_field@@Base+0x484>
   45038:	add	r1, r0, #1
   4503c:	str	r1, [r4, #20]
   45040:	mov	r1, #10
   45044:	strb	r1, [r0]
   45048:	ldr	r0, [r4, #32]
   4504c:	sub	r2, r0, #1
   45050:	str	r2, [r4, #32]
   45054:	ldrb	r3, [r4, #25]
   45058:	ldr	r0, [r4, #20]
   4505c:	ldr	r1, [r4, #16]
   45060:	mla	r7, r2, r3, r0
   45064:	mul	r5, r2, r3
   45068:	cmp	r7, r1
   4506c:	bls	450dc <flatcc_json_printer_table_vector_field@@Base+0x46c>
   45070:	cmp	r0, r1
   45074:	bcc	45090 <flatcc_json_printer_table_vector_field@@Base+0x420>
   45078:	ldr	r2, [r4, #44]	; 0x2c
   4507c:	mov	r0, r4
   45080:	mov	r1, #0
   45084:	blx	r2
   45088:	ldr	r1, [r4, #16]
   4508c:	ldr	r0, [r4, #20]
   45090:	sub	r6, r1, r0
   45094:	cmp	r6, r5
   45098:	bcs	450dc <flatcc_json_printer_table_vector_field@@Base+0x46c>
   4509c:	mov	r1, #32
   450a0:	mov	r2, r6
   450a4:	bl	14ee4 <memset@plt>
   450a8:	ldr	r0, [r4, #20]
   450ac:	ldr	r2, [r4, #44]	; 0x2c
   450b0:	mov	r1, #0
   450b4:	add	r0, r0, r6
   450b8:	str	r0, [r4, #20]
   450bc:	mov	r0, r4
   450c0:	blx	r2
   450c4:	ldr	r1, [r4, #16]
   450c8:	ldr	r0, [r4, #20]
   450cc:	sub	r5, r5, r6
   450d0:	sub	r6, r1, r0
   450d4:	cmp	r5, r6
   450d8:	bhi	4509c <flatcc_json_printer_table_vector_field@@Base+0x42c>
   450dc:	mov	r1, #32
   450e0:	mov	r2, r5
   450e4:	bl	14ee4 <memset@plt>
   450e8:	ldr	r0, [r4, #20]
   450ec:	add	r0, r0, r5
   450f0:	str	r0, [r4, #20]
   450f4:	add	r1, r0, #1
   450f8:	str	r1, [r4, #20]
   450fc:	mov	r1, #93	; 0x5d
   45100:	strb	r1, [r0]
   45104:	sub	sp, fp, #28
   45108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004510c <flatcc_json_printer_union_vector_field@@Base>:
   4510c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45110:	add	fp, sp, #28
   45114:	sub	sp, sp, #140	; 0x8c
   45118:	mov	r6, r1
   4511c:	ldr	r1, [r1, #8]
   45120:	mov	r8, r0
   45124:	sub	r9, r2, #1
   45128:	mov	r0, #4
   4512c:	mov	r4, r3
   45130:	mov	r5, #0
   45134:	mov	sl, #0
   45138:	add	r3, r0, r9, lsl #1
   4513c:	cmp	r3, r1
   45140:	bge	45160 <flatcc_json_printer_union_vector_field@@Base+0x54>
   45144:	ldr	r7, [r6, #4]
   45148:	mov	sl, #0
   4514c:	add	r3, r7, r3
   45150:	ldrh	r3, [r3]
   45154:	cmp	r3, #0
   45158:	ldrne	r7, [r6]
   4515c:	addne	sl, r7, r3
   45160:	ldr	r7, [fp, #8]
   45164:	add	r0, r0, r2, lsl #1
   45168:	cmp	r0, r1
   4516c:	bge	45188 <flatcc_json_printer_union_vector_field@@Base+0x7c>
   45170:	ldr	r1, [r6, #4]
   45174:	add	r0, r1, r0
   45178:	ldrh	r0, [r0]
   4517c:	cmp	r0, #0
   45180:	ldrne	r1, [r6]
   45184:	addne	r5, r1, r0
   45188:	ldr	r0, [r6, #12]
   4518c:	cmp	r7, #101	; 0x65
   45190:	str	r5, [sp, #16]
   45194:	str	r0, [sp, #24]
   45198:	bge	454a0 <flatcc_json_printer_union_vector_field@@Base+0x394>
   4519c:	add	r5, sp, #32
   451a0:	mov	r1, r4
   451a4:	mov	r2, r7
   451a8:	mov	r0, r5
   451ac:	bl	14e54 <memcpy@plt>
   451b0:	movw	r0, #29791	; 0x745f
   451b4:	cmp	sl, #0
   451b8:	mov	r1, #101	; 0x65
   451bc:	movt	r0, #28793	; 0x7079
   451c0:	str	r0, [r5, r7]
   451c4:	add	r0, r5, r7
   451c8:	ldr	r5, [sp, #16]
   451cc:	strb	r1, [r0, #4]
   451d0:	cmpne	r5, #0
   451d4:	bne	451e0 <flatcc_json_printer_union_vector_field@@Base+0xd4>
   451d8:	sub	sp, fp, #28
   451dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   451e0:	ldr	r0, [fp, #12]
   451e4:	add	r1, r7, #5
   451e8:	add	r3, sp, #32
   451ec:	mov	r2, r9
   451f0:	str	r1, [sp]
   451f4:	mov	r1, r6
   451f8:	str	r0, [sp, #4]
   451fc:	mov	r0, r8
   45200:	bl	41d2c <flatcc_json_printer_utype_enum_vector_field@@Base>
   45204:	ldr	r0, [r6, #16]
   45208:	add	r1, r0, #1
   4520c:	cmp	r0, #0
   45210:	str	r1, [r6, #16]
   45214:	beq	4522c <flatcc_json_printer_union_vector_field@@Base+0x120>
   45218:	ldr	r0, [r8, #20]
   4521c:	add	r1, r0, #1
   45220:	str	r1, [r8, #20]
   45224:	mov	r1, #44	; 0x2c
   45228:	strb	r1, [r0]
   4522c:	ldr	r0, [r5]
   45230:	ldr	r9, [sl]
   45234:	mov	r1, r4
   45238:	mov	r2, r7
   4523c:	ldr	r6, [r5, r0]!
   45240:	str	r0, [sp, #12]
   45244:	mov	r0, r8
   45248:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   4524c:	mov	r7, r8
   45250:	cmp	r6, #0
   45254:	ldr	r0, [r7, #20]!
   45258:	add	r1, r0, #1
   4525c:	str	r1, [r7]
   45260:	ldr	r1, [r7, #12]
   45264:	add	r1, r1, #1
   45268:	str	r1, [r7, #12]
   4526c:	mov	r1, #91	; 0x5b
   45270:	strb	r1, [r0]
   45274:	beq	453bc <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   45278:	add	r4, sl, r9
   4527c:	ldr	r2, [fp, #16]
   45280:	ldrb	r0, [r4, #4]
   45284:	cmp	r0, #0
   45288:	beq	452b4 <flatcc_json_printer_union_vector_field@@Base+0x1a8>
   4528c:	add	r1, r5, #4
   45290:	mov	r9, r2
   45294:	str	r1, [sp, #20]
   45298:	strb	r0, [sp, #28]
   4529c:	add	r1, sp, #20
   452a0:	mov	r0, r8
   452a4:	blx	r2
   452a8:	subs	r6, r6, #1
   452ac:	bne	4530c <flatcc_json_printer_union_vector_field@@Base+0x200>
   452b0:	b	453bc <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   452b4:	ldr	r0, [r7]
   452b8:	mov	r9, r2
   452bc:	add	r1, r0, #1
   452c0:	str	r1, [r7]
   452c4:	mov	r1, #110	; 0x6e
   452c8:	strb	r1, [r0]
   452cc:	ldr	r0, [r7]
   452d0:	add	r1, r0, #1
   452d4:	str	r1, [r7]
   452d8:	mov	r1, #117	; 0x75
   452dc:	strb	r1, [r0]
   452e0:	ldr	r0, [r7]
   452e4:	add	r1, r0, #1
   452e8:	str	r1, [r7]
   452ec:	mov	r1, #108	; 0x6c
   452f0:	strb	r1, [r0]
   452f4:	ldr	r0, [r7]
   452f8:	add	r2, r0, #1
   452fc:	str	r2, [r7]
   45300:	strb	r1, [r0]
   45304:	subs	r6, r6, #1
   45308:	beq	453bc <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   4530c:	ldr	r0, [sp, #16]
   45310:	ldr	r1, [sp, #12]
   45314:	add	r4, r4, #5
   45318:	mov	sl, #44	; 0x2c
   4531c:	add	r0, r1, r0
   45320:	add	r5, r0, #8
   45324:	b	45384 <flatcc_json_printer_union_vector_field@@Base+0x278>
   45328:	ldr	r0, [r7]
   4532c:	mov	r2, #108	; 0x6c
   45330:	add	r1, r0, #1
   45334:	str	r1, [r7]
   45338:	mov	r1, #110	; 0x6e
   4533c:	strb	r1, [r0]
   45340:	ldr	r0, [r7]
   45344:	add	r1, r0, #1
   45348:	str	r1, [r7]
   4534c:	mov	r1, #117	; 0x75
   45350:	strb	r1, [r0]
   45354:	ldr	r0, [r7]
   45358:	add	r1, r0, #1
   4535c:	str	r1, [r7]
   45360:	strb	r2, [r0]
   45364:	ldr	r0, [r7]
   45368:	add	r1, r0, #1
   4536c:	str	r1, [r7]
   45370:	strb	r2, [r0]
   45374:	add	r5, r5, #4
   45378:	add	r4, r4, #1
   4537c:	cmp	r6, #0
   45380:	beq	453bc <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   45384:	ldrb	r0, [r4]
   45388:	ldr	r1, [r7]
   4538c:	sub	r6, r6, #1
   45390:	add	r2, r1, #1
   45394:	cmp	r0, #0
   45398:	str	r2, [r7]
   4539c:	strb	sl, [r1]
   453a0:	beq	45328 <flatcc_json_printer_union_vector_field@@Base+0x21c>
   453a4:	str	r5, [sp, #20]
   453a8:	strb	r0, [sp, #28]
   453ac:	mov	r0, r8
   453b0:	add	r1, sp, #20
   453b4:	blx	r9
   453b8:	b	45374 <flatcc_json_printer_union_vector_field@@Base+0x268>
   453bc:	ldrb	r1, [r8, #25]
   453c0:	ldr	r0, [r8, #20]
   453c4:	cmp	r1, #0
   453c8:	beq	45488 <flatcc_json_printer_union_vector_field@@Base+0x37c>
   453cc:	add	r1, r0, #1
   453d0:	str	r1, [r8, #20]
   453d4:	mov	r1, #10
   453d8:	strb	r1, [r0]
   453dc:	ldr	r0, [r8, #32]
   453e0:	sub	r2, r0, #1
   453e4:	str	r2, [r8, #32]
   453e8:	ldrb	r3, [r8, #25]
   453ec:	ldr	r0, [r8, #20]
   453f0:	ldr	r1, [r8, #16]
   453f4:	mla	r6, r2, r3, r0
   453f8:	mul	r5, r2, r3
   453fc:	cmp	r6, r1
   45400:	bls	45470 <flatcc_json_printer_union_vector_field@@Base+0x364>
   45404:	cmp	r0, r1
   45408:	bcc	45424 <flatcc_json_printer_union_vector_field@@Base+0x318>
   4540c:	ldr	r2, [r8, #44]	; 0x2c
   45410:	mov	r0, r8
   45414:	mov	r1, #0
   45418:	blx	r2
   4541c:	ldr	r1, [r8, #16]
   45420:	ldr	r0, [r8, #20]
   45424:	sub	r6, r1, r0
   45428:	cmp	r6, r5
   4542c:	bcs	45470 <flatcc_json_printer_union_vector_field@@Base+0x364>
   45430:	mov	r1, #32
   45434:	mov	r2, r6
   45438:	bl	14ee4 <memset@plt>
   4543c:	ldr	r0, [r8, #20]
   45440:	ldr	r2, [r8, #44]	; 0x2c
   45444:	mov	r1, #0
   45448:	add	r0, r0, r6
   4544c:	str	r0, [r8, #20]
   45450:	mov	r0, r8
   45454:	blx	r2
   45458:	ldr	r1, [r8, #16]
   4545c:	ldr	r0, [r8, #20]
   45460:	sub	r5, r5, r6
   45464:	sub	r6, r1, r0
   45468:	cmp	r5, r6
   4546c:	bhi	45430 <flatcc_json_printer_union_vector_field@@Base+0x324>
   45470:	mov	r1, #32
   45474:	mov	r2, r5
   45478:	bl	14ee4 <memset@plt>
   4547c:	ldr	r0, [r7]
   45480:	add	r0, r0, r5
   45484:	str	r0, [r7]
   45488:	add	r1, r0, #1
   4548c:	str	r1, [r7]
   45490:	mov	r1, #93	; 0x5d
   45494:	strb	r1, [r0]
   45498:	sub	sp, fp, #28
   4549c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   454a0:	ldr	r0, [r8, #36]	; 0x24
   454a4:	movw	r2, #843	; 0x34b
   454a8:	cmp	r0, #0
   454ac:	moveq	r0, #1
   454b0:	streq	r0, [r8, #36]	; 0x24
   454b4:	ldr	r0, [pc, #20]	; 454d0 <flatcc_json_printer_union_vector_field@@Base+0x3c4>
   454b8:	ldr	r1, [pc, #20]	; 454d4 <flatcc_json_printer_union_vector_field@@Base+0x3c8>
   454bc:	ldr	r3, [pc, #20]	; 454d8 <flatcc_json_printer_union_vector_field@@Base+0x3cc>
   454c0:	add	r0, pc, r0
   454c4:	add	r1, pc, r1
   454c8:	add	r3, pc, r3
   454cc:	bl	14f38 <__assert_fail@plt>
   454d0:	andeq	r8, r0, r9, lsl #14
   454d4:	andeq	r8, r0, r0, lsr #14
   454d8:	andeq	r8, r0, lr, ror r7

000454dc <flatcc_json_printer_table_field@@Base>:
   454dc:	push	{r4, r5, r6, sl, fp, lr}
   454e0:	add	fp, sp, #16
   454e4:	sub	sp, sp, #24
   454e8:	mov	r5, r1
   454ec:	ldr	r1, [r1, #8]
   454f0:	mov	r4, r0
   454f4:	mov	r0, #4
   454f8:	add	r0, r0, r2, lsl #1
   454fc:	cmp	r0, r1
   45500:	bge	45520 <flatcc_json_printer_table_field@@Base+0x44>
   45504:	ldr	r1, [r5, #4]
   45508:	add	r0, r1, r0
   4550c:	ldrh	r0, [r0]
   45510:	cmp	r0, #0
   45514:	ldrne	r1, [r5]
   45518:	addsne	r6, r1, r0
   4551c:	bne	45528 <flatcc_json_printer_table_field@@Base+0x4c>
   45520:	sub	sp, fp, #16
   45524:	pop	{r4, r5, r6, sl, fp, pc}
   45528:	ldr	r0, [r5, #16]
   4552c:	ldr	r2, [fp, #8]
   45530:	add	r1, r0, #1
   45534:	cmp	r0, #0
   45538:	str	r1, [r5, #16]
   4553c:	beq	45554 <flatcc_json_printer_table_field@@Base+0x78>
   45540:	ldr	r0, [r4, #20]
   45544:	add	r1, r0, #1
   45548:	str	r1, [r4, #20]
   4554c:	mov	r1, #44	; 0x2c
   45550:	strb	r1, [r0]
   45554:	mov	r0, r4
   45558:	mov	r1, r3
   4555c:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   45560:	ldr	r0, [r5, #12]
   45564:	subs	r0, r0, #1
   45568:	beq	456ac <flatcc_json_printer_table_field@@Base+0x1d0>
   4556c:	ldr	r1, [r6]
   45570:	ldr	r3, [r4, #20]
   45574:	ldr	r2, [fp, #12]
   45578:	add	r1, r6, r1
   4557c:	ldr	r6, [r4, #32]
   45580:	add	r6, r6, #1
   45584:	str	r6, [r4, #32]
   45588:	add	r6, r3, #1
   4558c:	str	r6, [r4, #20]
   45590:	mov	r6, #123	; 0x7b
   45594:	strb	r6, [r3]
   45598:	str	r0, [sp, #16]
   4559c:	mov	r0, #0
   455a0:	str	r0, [sp, #20]
   455a4:	str	r1, [sp, #4]
   455a8:	ldr	r0, [r1]
   455ac:	sub	r3, r1, r0
   455b0:	str	r3, [sp, #8]
   455b4:	ldrh	r0, [r1, -r0]
   455b8:	add	r1, sp, #4
   455bc:	str	r0, [sp, #12]
   455c0:	mov	r0, r4
   455c4:	blx	r2
   455c8:	ldrb	r1, [r4, #25]
   455cc:	ldr	r0, [r4, #20]
   455d0:	cmp	r1, #0
   455d4:	beq	45694 <flatcc_json_printer_table_field@@Base+0x1b8>
   455d8:	add	r1, r0, #1
   455dc:	str	r1, [r4, #20]
   455e0:	mov	r1, #10
   455e4:	strb	r1, [r0]
   455e8:	ldr	r0, [r4, #32]
   455ec:	sub	r2, r0, #1
   455f0:	str	r2, [r4, #32]
   455f4:	ldrb	r3, [r4, #25]
   455f8:	ldr	r0, [r4, #20]
   455fc:	ldr	r1, [r4, #16]
   45600:	mla	r6, r2, r3, r0
   45604:	mul	r5, r2, r3
   45608:	cmp	r6, r1
   4560c:	bls	4567c <flatcc_json_printer_table_field@@Base+0x1a0>
   45610:	cmp	r0, r1
   45614:	bcc	45630 <flatcc_json_printer_table_field@@Base+0x154>
   45618:	ldr	r2, [r4, #44]	; 0x2c
   4561c:	mov	r0, r4
   45620:	mov	r1, #0
   45624:	blx	r2
   45628:	ldr	r1, [r4, #16]
   4562c:	ldr	r0, [r4, #20]
   45630:	sub	r6, r1, r0
   45634:	cmp	r6, r5
   45638:	bcs	4567c <flatcc_json_printer_table_field@@Base+0x1a0>
   4563c:	mov	r1, #32
   45640:	mov	r2, r6
   45644:	bl	14ee4 <memset@plt>
   45648:	ldr	r0, [r4, #20]
   4564c:	ldr	r2, [r4, #44]	; 0x2c
   45650:	mov	r1, #0
   45654:	add	r0, r0, r6
   45658:	str	r0, [r4, #20]
   4565c:	mov	r0, r4
   45660:	blx	r2
   45664:	ldr	r1, [r4, #16]
   45668:	ldr	r0, [r4, #20]
   4566c:	sub	r5, r5, r6
   45670:	sub	r6, r1, r0
   45674:	cmp	r5, r6
   45678:	bhi	4563c <flatcc_json_printer_table_field@@Base+0x160>
   4567c:	mov	r1, #32
   45680:	mov	r2, r5
   45684:	bl	14ee4 <memset@plt>
   45688:	ldr	r0, [r4, #20]
   4568c:	add	r0, r0, r5
   45690:	str	r0, [r4, #20]
   45694:	add	r1, r0, #1
   45698:	str	r1, [r4, #20]
   4569c:	mov	r1, #125	; 0x7d
   456a0:	strb	r1, [r0]
   456a4:	sub	sp, fp, #16
   456a8:	pop	{r4, r5, r6, sl, fp, pc}
   456ac:	ldr	r0, [r4, #36]	; 0x24
   456b0:	cmp	r0, #0
   456b4:	bne	45520 <flatcc_json_printer_table_field@@Base+0x44>
   456b8:	mov	r0, #2
   456bc:	str	r0, [r4, #36]	; 0x24
   456c0:	sub	sp, fp, #16
   456c4:	pop	{r4, r5, r6, sl, fp, pc}

000456c8 <flatcc_json_printer_union_field@@Base>:
   456c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   456cc:	add	fp, sp, #28
   456d0:	sub	sp, sp, #20
   456d4:	mov	r9, r1
   456d8:	mov	r4, r0
   456dc:	mov	r0, #2
   456e0:	mov	sl, r3
   456e4:	lsl	r1, r2, #1
   456e8:	add	r3, r0, r2, lsl #1
   456ec:	ldr	r2, [r9, #8]
   456f0:	mov	r0, #0
   456f4:	cmp	r3, r2
   456f8:	bge	45714 <flatcc_json_printer_union_field@@Base+0x4c>
   456fc:	ldr	r7, [r9, #4]
   45700:	add	r3, r7, r3
   45704:	ldrh	r3, [r3]
   45708:	cmp	r3, #0
   4570c:	ldrne	r0, [r9]
   45710:	addne	r0, r0, r3
   45714:	add	r1, r1, #4
   45718:	cmp	r1, r2
   4571c:	bge	45738 <flatcc_json_printer_union_field@@Base+0x70>
   45720:	ldr	r2, [r9, #4]
   45724:	add	r1, r2, r1
   45728:	ldrh	r1, [r1]
   4572c:	cmp	r1, #0
   45730:	cmpne	r0, #0
   45734:	bne	45740 <flatcc_json_printer_union_field@@Base+0x78>
   45738:	sub	sp, fp, #28
   4573c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45740:	ldr	r2, [r9]
   45744:	adds	r1, r2, r1
   45748:	str	r1, [sp, #4]
   4574c:	beq	45738 <flatcc_json_printer_union_field@@Base+0x70>
   45750:	ldrb	r6, [r0]
   45754:	ldr	r0, [r9, #16]
   45758:	add	r1, r0, #1
   4575c:	cmp	r0, #0
   45760:	str	r1, [r9, #16]
   45764:	beq	4577c <flatcc_json_printer_union_field@@Base+0xb4>
   45768:	ldr	r0, [r4, #20]
   4576c:	add	r1, r0, #1
   45770:	str	r1, [r4, #20]
   45774:	mov	r1, #44	; 0x2c
   45778:	strb	r1, [r0]
   4577c:	ldrb	r1, [r4, #25]
   45780:	ldr	r8, [fp, #8]
   45784:	ldr	r0, [r4, #20]
   45788:	cmp	r1, #0
   4578c:	beq	45844 <flatcc_json_printer_union_field@@Base+0x17c>
   45790:	add	r1, r0, #1
   45794:	mov	r5, r6
   45798:	str	r1, [r4, #20]
   4579c:	mov	r1, #10
   457a0:	strb	r1, [r0]
   457a4:	ldr	r0, [r4, #20]
   457a8:	ldrb	r2, [r4, #25]
   457ac:	ldr	r3, [r4, #32]
   457b0:	ldr	r1, [r4, #16]
   457b4:	mla	r6, r3, r2, r0
   457b8:	mul	r7, r3, r2
   457bc:	cmp	r6, r1
   457c0:	bls	45868 <flatcc_json_printer_union_field@@Base+0x1a0>
   457c4:	cmp	r0, r1
   457c8:	bcc	457e4 <flatcc_json_printer_union_field@@Base+0x11c>
   457cc:	ldr	r2, [r4, #44]	; 0x2c
   457d0:	mov	r0, r4
   457d4:	mov	r1, #0
   457d8:	blx	r2
   457dc:	ldr	r1, [r4, #16]
   457e0:	ldr	r0, [r4, #20]
   457e4:	mov	r6, r5
   457e8:	sub	r5, r1, r0
   457ec:	cmp	r5, r7
   457f0:	bcs	45834 <flatcc_json_printer_union_field@@Base+0x16c>
   457f4:	mov	r1, #32
   457f8:	mov	r2, r5
   457fc:	bl	14ee4 <memset@plt>
   45800:	ldr	r0, [r4, #20]
   45804:	ldr	r2, [r4, #44]	; 0x2c
   45808:	mov	r1, #0
   4580c:	add	r0, r0, r5
   45810:	str	r0, [r4, #20]
   45814:	mov	r0, r4
   45818:	blx	r2
   4581c:	ldr	r1, [r4, #16]
   45820:	ldr	r0, [r4, #20]
   45824:	sub	r7, r7, r5
   45828:	sub	r5, r1, r0
   4582c:	cmp	r7, r5
   45830:	bhi	457f4 <flatcc_json_printer_union_field@@Base+0x12c>
   45834:	mov	r1, #32
   45838:	mov	r2, r7
   4583c:	bl	14ee4 <memset@plt>
   45840:	b	45878 <flatcc_json_printer_union_field@@Base+0x1b0>
   45844:	ldr	r1, [r4, #16]
   45848:	cmp	r0, r1
   4584c:	bcc	45884 <flatcc_json_printer_union_field@@Base+0x1bc>
   45850:	ldr	r2, [r4, #44]	; 0x2c
   45854:	mov	r0, r4
   45858:	mov	r1, #0
   4585c:	blx	r2
   45860:	ldr	r0, [r4, #20]
   45864:	b	45884 <flatcc_json_printer_union_field@@Base+0x1bc>
   45868:	mov	r1, #32
   4586c:	mov	r2, r7
   45870:	bl	14ee4 <memset@plt>
   45874:	mov	r6, r5
   45878:	ldr	r0, [r4, #20]
   4587c:	add	r0, r0, r7
   45880:	str	r0, [r4, #20]
   45884:	mov	r1, #34	; 0x22
   45888:	strb	r1, [r0]
   4588c:	ldrb	r2, [r4, #26]
   45890:	ldr	r0, [r4, #20]
   45894:	ldr	r1, [r4, #16]
   45898:	cmp	r2, #0
   4589c:	addeq	r0, r0, #1
   458a0:	add	r2, r0, r8
   458a4:	str	r0, [r4, #20]
   458a8:	cmp	r2, r1
   458ac:	bcs	458c4 <flatcc_json_printer_union_field@@Base+0x1fc>
   458b0:	mov	r1, sl
   458b4:	mov	r2, r8
   458b8:	bl	14e54 <memcpy@plt>
   458bc:	mov	r7, r8
   458c0:	b	45960 <flatcc_json_printer_union_field@@Base+0x298>
   458c4:	cmp	r0, r1
   458c8:	mov	r7, r8
   458cc:	str	r6, [sp]
   458d0:	bcc	458ec <flatcc_json_printer_union_field@@Base+0x224>
   458d4:	ldr	r2, [r4, #44]	; 0x2c
   458d8:	mov	r0, r4
   458dc:	mov	r1, #0
   458e0:	blx	r2
   458e4:	ldr	r1, [r4, #16]
   458e8:	ldr	r0, [r4, #20]
   458ec:	sub	r8, r1, r0
   458f0:	mov	r6, sl
   458f4:	mov	r5, r7
   458f8:	cmp	r8, r7
   458fc:	bcs	4594c <flatcc_json_printer_union_field@@Base+0x284>
   45900:	mov	r7, r5
   45904:	mov	r6, sl
   45908:	mov	r1, r6
   4590c:	mov	r2, r8
   45910:	bl	14e54 <memcpy@plt>
   45914:	ldr	r0, [r4, #20]
   45918:	ldr	r2, [r4, #44]	; 0x2c
   4591c:	mov	r1, #0
   45920:	add	r0, r0, r8
   45924:	str	r0, [r4, #20]
   45928:	mov	r0, r4
   4592c:	blx	r2
   45930:	ldr	r1, [r4, #16]
   45934:	ldr	r0, [r4, #20]
   45938:	sub	r7, r7, r8
   4593c:	add	r6, r6, r8
   45940:	sub	r8, r1, r0
   45944:	cmp	r7, r8
   45948:	bhi	45908 <flatcc_json_printer_union_field@@Base+0x240>
   4594c:	mov	r1, r6
   45950:	mov	r2, r7
   45954:	bl	14e54 <memcpy@plt>
   45958:	ldr	r6, [sp]
   4595c:	mov	r8, r5
   45960:	ldr	r0, [r4, #20]
   45964:	ldr	r1, [r4, #16]
   45968:	add	r0, r0, r7
   4596c:	add	r2, r0, #5
   45970:	str	r0, [r4, #20]
   45974:	cmp	r2, r1
   45978:	bcs	45998 <flatcc_json_printer_union_field@@Base+0x2d0>
   4597c:	mov	r1, #101	; 0x65
   45980:	mov	r7, #5
   45984:	strb	r1, [r0, #4]
   45988:	movw	r1, #29791	; 0x745f
   4598c:	movt	r1, #28793	; 0x7079
   45990:	str	r1, [r0]
   45994:	b	45a3c <flatcc_json_printer_union_field@@Base+0x374>
   45998:	cmp	r0, r1
   4599c:	bcc	459b8 <flatcc_json_printer_union_field@@Base+0x2f0>
   459a0:	ldr	r2, [r4, #44]	; 0x2c
   459a4:	mov	r0, r4
   459a8:	mov	r1, #0
   459ac:	blx	r2
   459b0:	ldr	r1, [r4, #16]
   459b4:	ldr	r0, [r4, #20]
   459b8:	sub	r5, r1, r0
   459bc:	mov	r8, r6
   459c0:	cmp	r5, #4
   459c4:	bhi	45a1c <flatcc_json_printer_union_field@@Base+0x354>
   459c8:	ldr	r6, [pc, #500]	; 45bc4 <flatcc_json_printer_union_field@@Base+0x4fc>
   459cc:	mov	r7, #5
   459d0:	add	r6, pc, r6
   459d4:	mov	r1, r6
   459d8:	mov	r2, r5
   459dc:	bl	14e54 <memcpy@plt>
   459e0:	ldr	r0, [r4, #20]
   459e4:	ldr	r2, [r4, #44]	; 0x2c
   459e8:	mov	r1, #0
   459ec:	add	r0, r0, r5
   459f0:	str	r0, [r4, #20]
   459f4:	mov	r0, r4
   459f8:	blx	r2
   459fc:	ldr	r1, [r4, #16]
   45a00:	ldr	r0, [r4, #20]
   45a04:	sub	r7, r7, r5
   45a08:	add	r6, r6, r5
   45a0c:	sub	r5, r1, r0
   45a10:	cmp	r7, r5
   45a14:	bhi	459d4 <flatcc_json_printer_union_field@@Base+0x30c>
   45a18:	b	45a28 <flatcc_json_printer_union_field@@Base+0x360>
   45a1c:	ldr	r6, [pc, #412]	; 45bc0 <flatcc_json_printer_union_field@@Base+0x4f8>
   45a20:	mov	r7, #5
   45a24:	add	r6, pc, r6
   45a28:	mov	r1, r6
   45a2c:	mov	r2, r7
   45a30:	bl	14e54 <memcpy@plt>
   45a34:	mov	r6, r8
   45a38:	ldr	r8, [fp, #8]
   45a3c:	ldr	r0, [r4, #20]
   45a40:	add	r1, r0, r7
   45a44:	str	r1, [r4, #20]
   45a48:	mov	r1, #34	; 0x22
   45a4c:	strb	r1, [r0, r7]
   45a50:	ldrb	r0, [r4, #26]
   45a54:	ldr	r1, [r4, #20]
   45a58:	cmp	r0, #0
   45a5c:	addeq	r1, r1, #1
   45a60:	add	r0, r1, #1
   45a64:	str	r0, [r4, #20]
   45a68:	mov	r0, #58	; 0x3a
   45a6c:	strb	r0, [r1]
   45a70:	mov	r1, #32
   45a74:	ldr	r0, [r4, #20]
   45a78:	strb	r1, [r0]
   45a7c:	ldrb	r1, [r4, #25]
   45a80:	ldr	r0, [r4, #20]
   45a84:	cmp	r1, #0
   45a88:	addne	r0, r0, #1
   45a8c:	str	r0, [r4, #20]
   45a90:	ldrb	r1, [r4, #27]
   45a94:	cmp	r1, #0
   45a98:	beq	45af0 <flatcc_json_printer_union_field@@Base+0x428>
   45a9c:	mov	r1, #0
   45aa0:	cmp	r6, #100	; 0x64
   45aa4:	bcc	45b0c <flatcc_json_printer_union_field@@Base+0x444>
   45aa8:	strb	r1, [r0, #3]
   45aac:	movw	r1, #34079	; 0x851f
   45ab0:	movt	r1, #20971	; 0x51eb
   45ab4:	umull	r1, r2, r6, r1
   45ab8:	mov	r1, #48	; 0x30
   45abc:	orr	r1, r1, r2, lsr #5
   45ac0:	strb	r1, [r0]
   45ac4:	lsr	r1, r2, #5
   45ac8:	mov	r2, #100	; 0x64
   45acc:	mls	r1, r1, r2, r6
   45ad0:	ldr	r2, [pc, #240]	; 45bc8 <flatcc_json_printer_union_field@@Base+0x500>
   45ad4:	uxtb	r1, r1
   45ad8:	add	r2, pc, r2
   45adc:	add	r1, r2, r1, lsl #1
   45ae0:	ldrh	r1, [r1]
   45ae4:	strh	r1, [r0, #1]
   45ae8:	mov	r0, #3
   45aec:	b	45b5c <flatcc_json_printer_union_field@@Base+0x494>
   45af0:	ldr	r2, [fp, #12]
   45af4:	mov	r0, r4
   45af8:	mov	r1, r6
   45afc:	blx	r2
   45b00:	cmp	r6, #0
   45b04:	bne	45b70 <flatcc_json_printer_union_field@@Base+0x4a8>
   45b08:	b	45738 <flatcc_json_printer_union_field@@Base+0x70>
   45b0c:	cmp	r6, #10
   45b10:	bcc	45b4c <flatcc_json_printer_union_field@@Base+0x484>
   45b14:	strb	r1, [r0, #2]
   45b18:	movw	r1, #34079	; 0x851f
   45b1c:	movt	r1, #20971	; 0x51eb
   45b20:	umull	r1, r2, r6, r1
   45b24:	lsr	r1, r2, #5
   45b28:	mov	r2, #100	; 0x64
   45b2c:	mls	r1, r1, r2, r6
   45b30:	ldr	r2, [pc, #148]	; 45bcc <flatcc_json_printer_union_field@@Base+0x504>
   45b34:	add	r2, pc, r2
   45b38:	add	r1, r2, r1, lsl #1
   45b3c:	ldrh	r1, [r1]
   45b40:	strh	r1, [r0]
   45b44:	mov	r0, #2
   45b48:	b	45b5c <flatcc_json_printer_union_field@@Base+0x494>
   45b4c:	strb	r1, [r0, #1]
   45b50:	add	r1, r6, #48	; 0x30
   45b54:	strb	r1, [r0]
   45b58:	mov	r0, #1
   45b5c:	ldr	r1, [r4, #20]
   45b60:	add	r0, r1, r0
   45b64:	str	r0, [r4, #20]
   45b68:	cmp	r6, #0
   45b6c:	beq	45738 <flatcc_json_printer_union_field@@Base+0x70>
   45b70:	ldr	r0, [r4, #20]
   45b74:	ldr	r5, [fp, #16]
   45b78:	mov	r2, r8
   45b7c:	add	r1, r0, #1
   45b80:	str	r1, [r4, #20]
   45b84:	mov	r1, #44	; 0x2c
   45b88:	strb	r1, [r0]
   45b8c:	mov	r0, r4
   45b90:	mov	r1, sl
   45b94:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   45b98:	ldr	r0, [r9, #12]
   45b9c:	ldr	r1, [sp, #4]
   45ba0:	strb	r6, [sp, #16]
   45ba4:	str	r1, [sp, #8]
   45ba8:	str	r0, [sp, #12]
   45bac:	add	r1, sp, #8
   45bb0:	mov	r0, r4
   45bb4:	blx	r5
   45bb8:	sub	sp, fp, #28
   45bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45bc0:	andeq	r8, r0, ip, ror #5
   45bc4:	andeq	r8, r0, r0, asr #6
   45bc8:	andeq	r8, r0, pc, lsl #8
   45bcc:			; <UNDEFINED> instruction: 0x000083b3

00045bd0 <flatcc_json_printer_union_table@@Base>:
   45bd0:	push	{r4, r5, r6, sl, fp, lr}
   45bd4:	add	fp, sp, #16
   45bd8:	sub	sp, sp, #24
   45bdc:	mov	r4, r0
   45be0:	ldr	r0, [r1, #4]
   45be4:	subs	r0, r0, #1
   45be8:	beq	45d2c <flatcc_json_printer_union_table@@Base+0x15c>
   45bec:	ldr	r1, [r1]
   45bf0:	ldr	r6, [r4, #32]
   45bf4:	ldr	r3, [r1]
   45bf8:	add	r6, r6, #1
   45bfc:	add	r1, r1, r3
   45c00:	ldr	r3, [r4, #20]
   45c04:	str	r6, [r4, #32]
   45c08:	add	r6, r3, #1
   45c0c:	str	r6, [r4, #20]
   45c10:	mov	r6, #123	; 0x7b
   45c14:	strb	r6, [r3]
   45c18:	str	r0, [sp, #16]
   45c1c:	mov	r0, #0
   45c20:	str	r0, [sp, #20]
   45c24:	str	r1, [sp, #4]
   45c28:	ldr	r0, [r1]
   45c2c:	sub	r3, r1, r0
   45c30:	str	r3, [sp, #8]
   45c34:	ldrh	r0, [r1, -r0]
   45c38:	add	r1, sp, #4
   45c3c:	str	r0, [sp, #12]
   45c40:	mov	r0, r4
   45c44:	blx	r2
   45c48:	ldrb	r1, [r4, #25]
   45c4c:	ldr	r0, [r4, #20]
   45c50:	cmp	r1, #0
   45c54:	beq	45d14 <flatcc_json_printer_union_table@@Base+0x144>
   45c58:	add	r1, r0, #1
   45c5c:	str	r1, [r4, #20]
   45c60:	mov	r1, #10
   45c64:	strb	r1, [r0]
   45c68:	ldr	r0, [r4, #32]
   45c6c:	sub	r2, r0, #1
   45c70:	str	r2, [r4, #32]
   45c74:	ldrb	r3, [r4, #25]
   45c78:	ldr	r0, [r4, #20]
   45c7c:	ldr	r1, [r4, #16]
   45c80:	mla	r6, r2, r3, r0
   45c84:	mul	r5, r2, r3
   45c88:	cmp	r6, r1
   45c8c:	bls	45cfc <flatcc_json_printer_union_table@@Base+0x12c>
   45c90:	cmp	r0, r1
   45c94:	bcc	45cb0 <flatcc_json_printer_union_table@@Base+0xe0>
   45c98:	ldr	r2, [r4, #44]	; 0x2c
   45c9c:	mov	r0, r4
   45ca0:	mov	r1, #0
   45ca4:	blx	r2
   45ca8:	ldr	r1, [r4, #16]
   45cac:	ldr	r0, [r4, #20]
   45cb0:	sub	r6, r1, r0
   45cb4:	cmp	r6, r5
   45cb8:	bcs	45cfc <flatcc_json_printer_union_table@@Base+0x12c>
   45cbc:	mov	r1, #32
   45cc0:	mov	r2, r6
   45cc4:	bl	14ee4 <memset@plt>
   45cc8:	ldr	r0, [r4, #20]
   45ccc:	ldr	r2, [r4, #44]	; 0x2c
   45cd0:	mov	r1, #0
   45cd4:	add	r0, r0, r6
   45cd8:	str	r0, [r4, #20]
   45cdc:	mov	r0, r4
   45ce0:	blx	r2
   45ce4:	ldr	r1, [r4, #16]
   45ce8:	ldr	r0, [r4, #20]
   45cec:	sub	r5, r5, r6
   45cf0:	sub	r6, r1, r0
   45cf4:	cmp	r5, r6
   45cf8:	bhi	45cbc <flatcc_json_printer_union_table@@Base+0xec>
   45cfc:	mov	r1, #32
   45d00:	mov	r2, r5
   45d04:	bl	14ee4 <memset@plt>
   45d08:	ldr	r0, [r4, #20]
   45d0c:	add	r0, r0, r5
   45d10:	str	r0, [r4, #20]
   45d14:	add	r1, r0, #1
   45d18:	str	r1, [r4, #20]
   45d1c:	mov	r1, #125	; 0x7d
   45d20:	strb	r1, [r0]
   45d24:	sub	sp, fp, #16
   45d28:	pop	{r4, r5, r6, sl, fp, pc}
   45d2c:	ldr	r0, [r4, #36]	; 0x24
   45d30:	cmp	r0, #0
   45d34:	beq	45d40 <flatcc_json_printer_union_table@@Base+0x170>
   45d38:	sub	sp, fp, #16
   45d3c:	pop	{r4, r5, r6, sl, fp, pc}
   45d40:	mov	r0, #2
   45d44:	str	r0, [r4, #36]	; 0x24
   45d48:	sub	sp, fp, #16
   45d4c:	pop	{r4, r5, r6, sl, fp, pc}

00045d50 <flatcc_json_printer_union_struct@@Base>:
   45d50:	push	{r4, r5, r6, sl, fp, lr}
   45d54:	add	fp, sp, #16
   45d58:	mov	r4, r0
   45d5c:	ldr	r0, [r0, #20]
   45d60:	ldr	r3, [r4, #32]
   45d64:	add	r3, r3, #1
   45d68:	str	r3, [r4, #32]
   45d6c:	add	r3, r0, #1
   45d70:	str	r3, [r4, #20]
   45d74:	mov	r3, #123	; 0x7b
   45d78:	strb	r3, [r0]
   45d7c:	ldr	r0, [r1]
   45d80:	ldr	r1, [r0]
   45d84:	add	r1, r0, r1
   45d88:	mov	r0, r4
   45d8c:	blx	r2
   45d90:	ldrb	r1, [r4, #25]
   45d94:	ldr	r0, [r4, #20]
   45d98:	cmp	r1, #0
   45d9c:	beq	45e5c <flatcc_json_printer_union_struct@@Base+0x10c>
   45da0:	add	r1, r0, #1
   45da4:	str	r1, [r4, #20]
   45da8:	mov	r1, #10
   45dac:	strb	r1, [r0]
   45db0:	ldr	r0, [r4, #32]
   45db4:	sub	r2, r0, #1
   45db8:	str	r2, [r4, #32]
   45dbc:	ldrb	r3, [r4, #25]
   45dc0:	ldr	r0, [r4, #20]
   45dc4:	ldr	r1, [r4, #16]
   45dc8:	mla	r6, r2, r3, r0
   45dcc:	mul	r5, r2, r3
   45dd0:	cmp	r6, r1
   45dd4:	bls	45e44 <flatcc_json_printer_union_struct@@Base+0xf4>
   45dd8:	cmp	r0, r1
   45ddc:	bcc	45df8 <flatcc_json_printer_union_struct@@Base+0xa8>
   45de0:	ldr	r2, [r4, #44]	; 0x2c
   45de4:	mov	r0, r4
   45de8:	mov	r1, #0
   45dec:	blx	r2
   45df0:	ldr	r1, [r4, #16]
   45df4:	ldr	r0, [r4, #20]
   45df8:	sub	r6, r1, r0
   45dfc:	cmp	r6, r5
   45e00:	bcs	45e44 <flatcc_json_printer_union_struct@@Base+0xf4>
   45e04:	mov	r1, #32
   45e08:	mov	r2, r6
   45e0c:	bl	14ee4 <memset@plt>
   45e10:	ldr	r0, [r4, #20]
   45e14:	ldr	r2, [r4, #44]	; 0x2c
   45e18:	mov	r1, #0
   45e1c:	add	r0, r0, r6
   45e20:	str	r0, [r4, #20]
   45e24:	mov	r0, r4
   45e28:	blx	r2
   45e2c:	ldr	r1, [r4, #16]
   45e30:	ldr	r0, [r4, #20]
   45e34:	sub	r5, r5, r6
   45e38:	sub	r6, r1, r0
   45e3c:	cmp	r5, r6
   45e40:	bhi	45e04 <flatcc_json_printer_union_struct@@Base+0xb4>
   45e44:	mov	r1, #32
   45e48:	mov	r2, r5
   45e4c:	bl	14ee4 <memset@plt>
   45e50:	ldr	r0, [r4, #20]
   45e54:	add	r0, r0, r5
   45e58:	str	r0, [r4, #20]
   45e5c:	add	r1, r0, #1
   45e60:	str	r1, [r4, #20]
   45e64:	mov	r1, #125	; 0x7d
   45e68:	strb	r1, [r0]
   45e6c:	pop	{r4, r5, r6, sl, fp, pc}

00045e70 <flatcc_json_printer_union_string@@Base>:
   45e70:	ldr	r1, [r1]
   45e74:	ldr	r2, [r1]
   45e78:	ldr	r2, [r1, r2]!
   45e7c:	add	r1, r1, #4
   45e80:	b	3b0b8 <flatcc_json_printer_string@@Base+0x4>

00045e84 <flatcc_json_printer_embedded_struct_field@@Base>:
   45e84:	push	{r4, r5, r6, r7, fp, lr}
   45e88:	add	fp, sp, #16
   45e8c:	add	r7, fp, #8
   45e90:	mov	r5, r3
   45e94:	mov	r3, r1
   45e98:	mov	r6, r2
   45e9c:	mov	r4, r0
   45ea0:	ldm	r7, {r1, r2, r7}
   45ea4:	cmp	r3, #0
   45ea8:	beq	45ec0 <flatcc_json_printer_embedded_struct_field@@Base+0x3c>
   45eac:	ldr	r0, [r4, #20]
   45eb0:	add	r3, r0, #1
   45eb4:	str	r3, [r4, #20]
   45eb8:	mov	r3, #44	; 0x2c
   45ebc:	strb	r3, [r0]
   45ec0:	mov	r0, r4
   45ec4:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   45ec8:	ldr	r1, [r4, #32]
   45ecc:	ldr	r0, [r4, #20]
   45ed0:	add	r1, r1, #1
   45ed4:	str	r1, [r4, #32]
   45ed8:	add	r1, r0, #1
   45edc:	str	r1, [r4, #20]
   45ee0:	mov	r1, #123	; 0x7b
   45ee4:	strb	r1, [r0]
   45ee8:	add	r1, r6, r5
   45eec:	mov	r0, r4
   45ef0:	blx	r7
   45ef4:	ldrb	r1, [r4, #25]
   45ef8:	ldr	r0, [r4, #20]
   45efc:	cmp	r1, #0
   45f00:	beq	45fc0 <flatcc_json_printer_embedded_struct_field@@Base+0x13c>
   45f04:	add	r1, r0, #1
   45f08:	str	r1, [r4, #20]
   45f0c:	mov	r1, #10
   45f10:	strb	r1, [r0]
   45f14:	ldr	r0, [r4, #32]
   45f18:	sub	r2, r0, #1
   45f1c:	str	r2, [r4, #32]
   45f20:	ldrb	r3, [r4, #25]
   45f24:	ldr	r0, [r4, #20]
   45f28:	ldr	r1, [r4, #16]
   45f2c:	mla	r7, r2, r3, r0
   45f30:	mul	r5, r2, r3
   45f34:	cmp	r7, r1
   45f38:	bls	45fa8 <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   45f3c:	cmp	r0, r1
   45f40:	bcc	45f5c <flatcc_json_printer_embedded_struct_field@@Base+0xd8>
   45f44:	ldr	r2, [r4, #44]	; 0x2c
   45f48:	mov	r0, r4
   45f4c:	mov	r1, #0
   45f50:	blx	r2
   45f54:	ldr	r1, [r4, #16]
   45f58:	ldr	r0, [r4, #20]
   45f5c:	sub	r6, r1, r0
   45f60:	cmp	r6, r5
   45f64:	bcs	45fa8 <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   45f68:	mov	r1, #32
   45f6c:	mov	r2, r6
   45f70:	bl	14ee4 <memset@plt>
   45f74:	ldr	r0, [r4, #20]
   45f78:	ldr	r2, [r4, #44]	; 0x2c
   45f7c:	mov	r1, #0
   45f80:	add	r0, r0, r6
   45f84:	str	r0, [r4, #20]
   45f88:	mov	r0, r4
   45f8c:	blx	r2
   45f90:	ldr	r1, [r4, #16]
   45f94:	ldr	r0, [r4, #20]
   45f98:	sub	r5, r5, r6
   45f9c:	sub	r6, r1, r0
   45fa0:	cmp	r5, r6
   45fa4:	bhi	45f68 <flatcc_json_printer_embedded_struct_field@@Base+0xe4>
   45fa8:	mov	r1, #32
   45fac:	mov	r2, r5
   45fb0:	bl	14ee4 <memset@plt>
   45fb4:	ldr	r0, [r4, #20]
   45fb8:	add	r0, r0, r5
   45fbc:	str	r0, [r4, #20]
   45fc0:	add	r1, r0, #1
   45fc4:	str	r1, [r4, #20]
   45fc8:	mov	r1, #125	; 0x7d
   45fcc:	strb	r1, [r0]
   45fd0:	pop	{r4, r5, r6, r7, fp, pc}

00045fd4 <flatcc_json_printer_struct_field@@Base>:
   45fd4:	push	{r4, r5, r6, r7, fp, lr}
   45fd8:	add	fp, sp, #16
   45fdc:	mov	r4, r0
   45fe0:	mov	r0, #4
   45fe4:	add	r0, r0, r2, lsl #1
   45fe8:	ldr	r2, [r1, #8]
   45fec:	cmp	r0, r2
   45ff0:	popge	{r4, r5, r6, r7, fp, pc}
   45ff4:	ldr	r2, [r1, #4]
   45ff8:	add	r0, r2, r0
   45ffc:	ldrh	r0, [r0]
   46000:	cmp	r0, #0
   46004:	ldrne	r2, [r1]
   46008:	addsne	r5, r2, r0
   4600c:	bne	46014 <flatcc_json_printer_struct_field@@Base+0x40>
   46010:	pop	{r4, r5, r6, r7, fp, pc}
   46014:	ldr	r0, [r1, #16]
   46018:	ldr	r7, [fp, #12]
   4601c:	ldr	r2, [fp, #8]
   46020:	add	r6, r0, #1
   46024:	cmp	r0, #0
   46028:	str	r6, [r1, #16]
   4602c:	beq	46044 <flatcc_json_printer_struct_field@@Base+0x70>
   46030:	ldr	r0, [r4, #20]
   46034:	add	r1, r0, #1
   46038:	str	r1, [r4, #20]
   4603c:	mov	r1, #44	; 0x2c
   46040:	strb	r1, [r0]
   46044:	mov	r0, r4
   46048:	mov	r1, r3
   4604c:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   46050:	ldr	r1, [r4, #32]
   46054:	ldr	r0, [r4, #20]
   46058:	add	r1, r1, #1
   4605c:	str	r1, [r4, #32]
   46060:	add	r1, r0, #1
   46064:	str	r1, [r4, #20]
   46068:	mov	r1, #123	; 0x7b
   4606c:	strb	r1, [r0]
   46070:	mov	r0, r4
   46074:	mov	r1, r5
   46078:	blx	r7
   4607c:	ldrb	r1, [r4, #25]
   46080:	ldr	r0, [r4, #20]
   46084:	cmp	r1, #0
   46088:	beq	46148 <flatcc_json_printer_struct_field@@Base+0x174>
   4608c:	add	r1, r0, #1
   46090:	str	r1, [r4, #20]
   46094:	mov	r1, #10
   46098:	strb	r1, [r0]
   4609c:	ldr	r0, [r4, #32]
   460a0:	sub	r2, r0, #1
   460a4:	str	r2, [r4, #32]
   460a8:	ldrb	r3, [r4, #25]
   460ac:	ldr	r0, [r4, #20]
   460b0:	ldr	r1, [r4, #16]
   460b4:	mla	r7, r2, r3, r0
   460b8:	mul	r5, r2, r3
   460bc:	cmp	r7, r1
   460c0:	bls	46130 <flatcc_json_printer_struct_field@@Base+0x15c>
   460c4:	cmp	r0, r1
   460c8:	bcc	460e4 <flatcc_json_printer_struct_field@@Base+0x110>
   460cc:	ldr	r2, [r4, #44]	; 0x2c
   460d0:	mov	r0, r4
   460d4:	mov	r1, #0
   460d8:	blx	r2
   460dc:	ldr	r1, [r4, #16]
   460e0:	ldr	r0, [r4, #20]
   460e4:	sub	r6, r1, r0
   460e8:	cmp	r6, r5
   460ec:	bcs	46130 <flatcc_json_printer_struct_field@@Base+0x15c>
   460f0:	mov	r1, #32
   460f4:	mov	r2, r6
   460f8:	bl	14ee4 <memset@plt>
   460fc:	ldr	r0, [r4, #20]
   46100:	ldr	r2, [r4, #44]	; 0x2c
   46104:	mov	r1, #0
   46108:	add	r0, r0, r6
   4610c:	str	r0, [r4, #20]
   46110:	mov	r0, r4
   46114:	blx	r2
   46118:	ldr	r1, [r4, #16]
   4611c:	ldr	r0, [r4, #20]
   46120:	sub	r5, r5, r6
   46124:	sub	r6, r1, r0
   46128:	cmp	r5, r6
   4612c:	bhi	460f0 <flatcc_json_printer_struct_field@@Base+0x11c>
   46130:	mov	r1, #32
   46134:	mov	r2, r5
   46138:	bl	14ee4 <memset@plt>
   4613c:	ldr	r0, [r4, #20]
   46140:	add	r0, r0, r5
   46144:	str	r0, [r4, #20]
   46148:	add	r1, r0, #1
   4614c:	str	r1, [r4, #20]
   46150:	mov	r1, #125	; 0x7d
   46154:	strb	r1, [r0]
   46158:	pop	{r4, r5, r6, r7, fp, pc}

0004615c <flatcc_json_printer_struct_as_root@@Base>:
   4615c:	push	{r4, r5, r6, sl, fp, lr}
   46160:	add	fp, sp, #16
   46164:	sub	sp, sp, #8
   46168:	cmp	r1, #0
   4616c:	mov	r4, r0
   46170:	mov	r0, #0
   46174:	cmpne	r2, #7
   46178:	str	r0, [sp, #4]
   4617c:	bls	46334 <flatcc_json_printer_struct_as_root@@Base+0x1d8>
   46180:	mov	r5, r1
   46184:	cmp	r3, #0
   46188:	beq	461b4 <flatcc_json_printer_struct_as_root@@Base+0x58>
   4618c:	add	r0, sp, #4
   46190:	mov	r1, r3
   46194:	mov	r2, #4
   46198:	bl	14ef0 <strncpy@plt>
   4619c:	ldr	r0, [sp, #4]
   461a0:	cmp	r0, #0
   461a4:	beq	461b4 <flatcc_json_printer_struct_as_root@@Base+0x58>
   461a8:	ldr	r1, [r5, #4]
   461ac:	cmp	r1, r0
   461b0:	bne	46364 <flatcc_json_printer_struct_as_root@@Base+0x208>
   461b4:	ldr	r1, [r4, #32]
   461b8:	ldr	r0, [r4, #20]
   461bc:	ldr	r2, [fp, #8]
   461c0:	add	r1, r1, #1
   461c4:	str	r1, [r4, #32]
   461c8:	add	r1, r0, #1
   461cc:	str	r1, [r4, #20]
   461d0:	mov	r1, #123	; 0x7b
   461d4:	strb	r1, [r0]
   461d8:	ldr	r0, [r5]
   461dc:	add	r1, r5, r0
   461e0:	mov	r0, r4
   461e4:	blx	r2
   461e8:	ldrb	r1, [r4, #25]
   461ec:	ldr	r0, [r4, #20]
   461f0:	cmp	r1, #0
   461f4:	beq	462b4 <flatcc_json_printer_struct_as_root@@Base+0x158>
   461f8:	add	r1, r0, #1
   461fc:	str	r1, [r4, #20]
   46200:	mov	r1, #10
   46204:	strb	r1, [r0]
   46208:	ldr	r0, [r4, #32]
   4620c:	sub	r2, r0, #1
   46210:	str	r2, [r4, #32]
   46214:	ldrb	r3, [r4, #25]
   46218:	ldr	r0, [r4, #20]
   4621c:	ldr	r1, [r4, #16]
   46220:	mla	r6, r2, r3, r0
   46224:	mul	r5, r2, r3
   46228:	cmp	r6, r1
   4622c:	bls	4629c <flatcc_json_printer_struct_as_root@@Base+0x140>
   46230:	cmp	r0, r1
   46234:	bcc	46250 <flatcc_json_printer_struct_as_root@@Base+0xf4>
   46238:	ldr	r2, [r4, #44]	; 0x2c
   4623c:	mov	r0, r4
   46240:	mov	r1, #0
   46244:	blx	r2
   46248:	ldr	r1, [r4, #16]
   4624c:	ldr	r0, [r4, #20]
   46250:	sub	r6, r1, r0
   46254:	cmp	r6, r5
   46258:	bcs	4629c <flatcc_json_printer_struct_as_root@@Base+0x140>
   4625c:	mov	r1, #32
   46260:	mov	r2, r6
   46264:	bl	14ee4 <memset@plt>
   46268:	ldr	r0, [r4, #20]
   4626c:	ldr	r2, [r4, #44]	; 0x2c
   46270:	mov	r1, #0
   46274:	add	r0, r0, r6
   46278:	str	r0, [r4, #20]
   4627c:	mov	r0, r4
   46280:	blx	r2
   46284:	ldr	r1, [r4, #16]
   46288:	ldr	r0, [r4, #20]
   4628c:	sub	r5, r5, r6
   46290:	sub	r6, r1, r0
   46294:	cmp	r5, r6
   46298:	bhi	4625c <flatcc_json_printer_struct_as_root@@Base+0x100>
   4629c:	mov	r1, #32
   462a0:	mov	r2, r5
   462a4:	bl	14ee4 <memset@plt>
   462a8:	ldr	r0, [r4, #20]
   462ac:	add	r0, r0, r5
   462b0:	str	r0, [r4, #20]
   462b4:	add	r1, r0, #1
   462b8:	str	r1, [r4, #20]
   462bc:	mov	r1, #125	; 0x7d
   462c0:	strb	r1, [r0]
   462c4:	ldrb	r0, [r4, #25]
   462c8:	cmp	r0, #0
   462cc:	beq	462f0 <flatcc_json_printer_struct_as_root@@Base+0x194>
   462d0:	ldr	r0, [r4, #32]
   462d4:	cmp	r0, #0
   462d8:	bne	462f0 <flatcc_json_printer_struct_as_root@@Base+0x194>
   462dc:	ldr	r0, [r4, #20]
   462e0:	add	r1, r0, #1
   462e4:	str	r1, [r4, #20]
   462e8:	mov	r1, #10
   462ec:	strb	r1, [r0]
   462f0:	ldr	r2, [r4, #44]	; 0x2c
   462f4:	mov	r0, r4
   462f8:	mov	r1, #1
   462fc:	blx	r2
   46300:	ldr	r1, [r4, #36]	; 0x24
   46304:	mvn	r0, #0
   46308:	cmp	r1, #0
   4630c:	beq	46318 <flatcc_json_printer_struct_as_root@@Base+0x1bc>
   46310:	sub	sp, fp, #16
   46314:	pop	{r4, r5, r6, sl, fp, pc}
   46318:	ldr	r1, [r4, #12]
   4631c:	ldr	r2, [r4, #20]
   46320:	ldr	r0, [r4]
   46324:	add	r1, r2, r1
   46328:	sub	r0, r1, r0
   4632c:	sub	sp, fp, #16
   46330:	pop	{r4, r5, r6, sl, fp, pc}
   46334:	ldr	r0, [r4, #36]	; 0x24
   46338:	movw	r2, #1019	; 0x3fb
   4633c:	cmp	r0, #0
   46340:	moveq	r0, #1
   46344:	streq	r0, [r4, #36]	; 0x24
   46348:	ldr	r0, [pc, #68]	; 46394 <flatcc_json_printer_struct_as_root@@Base+0x238>
   4634c:	ldr	r1, [pc, #68]	; 46398 <flatcc_json_printer_struct_as_root@@Base+0x23c>
   46350:	ldr	r3, [pc, #68]	; 4639c <flatcc_json_printer_struct_as_root@@Base+0x240>
   46354:	add	r0, pc, r0
   46358:	add	r1, pc, r1
   4635c:	add	r3, pc, r3
   46360:	bl	14f38 <__assert_fail@plt>
   46364:	ldr	r0, [r4, #36]	; 0x24
   46368:	movw	r2, #1028	; 0x404
   4636c:	cmp	r0, #0
   46370:	moveq	r0, #1
   46374:	streq	r0, [r4, #36]	; 0x24
   46378:	ldr	r0, [pc, #32]	; 463a0 <flatcc_json_printer_struct_as_root@@Base+0x244>
   4637c:	ldr	r1, [pc, #32]	; 463a4 <flatcc_json_printer_struct_as_root@@Base+0x248>
   46380:	ldr	r3, [pc, #32]	; 463a8 <flatcc_json_printer_struct_as_root@@Base+0x24c>
   46384:	add	r0, pc, r0
   46388:	add	r1, pc, r1
   4638c:	add	r3, pc, r3
   46390:	bl	14f38 <__assert_fail@plt>
   46394:	andeq	r7, r0, r6, lsr sp
   46398:	andeq	r7, r0, ip, lsl #17
   4639c:	andeq	r7, r0, sp, asr #26
   463a0:	andeq	r7, r0, r4, ror sp
   463a4:	andeq	r7, r0, ip, asr r8
   463a8:	andeq	r7, r0, sp, lsl sp

000463ac <flatcc_json_printer_table_as_root@@Base>:
   463ac:	push	{r4, r5, r6, sl, fp, lr}
   463b0:	add	fp, sp, #16
   463b4:	sub	sp, sp, #24
   463b8:	cmp	r1, #0
   463bc:	mov	r4, r0
   463c0:	mov	r0, #0
   463c4:	cmpne	r2, #7
   463c8:	str	r0, [sp, #4]
   463cc:	bls	465b0 <flatcc_json_printer_table_as_root@@Base+0x204>
   463d0:	mov	r5, r1
   463d4:	cmp	r3, #0
   463d8:	beq	46404 <flatcc_json_printer_table_as_root@@Base+0x58>
   463dc:	add	r0, sp, #4
   463e0:	mov	r1, r3
   463e4:	mov	r2, #4
   463e8:	bl	14ef0 <strncpy@plt>
   463ec:	ldr	r0, [sp, #4]
   463f0:	cmp	r0, #0
   463f4:	beq	46404 <flatcc_json_printer_table_as_root@@Base+0x58>
   463f8:	ldr	r1, [r5, #4]
   463fc:	cmp	r1, r0
   46400:	bne	465e0 <flatcc_json_printer_table_as_root@@Base+0x234>
   46404:	ldr	r3, [r4, #32]
   46408:	ldr	r1, [r4, #20]
   4640c:	ldr	r0, [r5]
   46410:	ldr	r2, [fp, #8]
   46414:	add	r3, r3, #1
   46418:	str	r3, [r4, #32]
   4641c:	add	r3, r1, #1
   46420:	str	r3, [r4, #20]
   46424:	mov	r3, #123	; 0x7b
   46428:	strb	r3, [r1]
   4642c:	mov	r1, #99	; 0x63
   46430:	str	r1, [sp, #16]
   46434:	mov	r1, #0
   46438:	str	r1, [sp, #20]
   4643c:	add	r1, r5, r0
   46440:	str	r1, [sp, #4]
   46444:	ldr	r0, [r5, r0]
   46448:	sub	r3, r1, r0
   4644c:	str	r3, [sp, #8]
   46450:	ldrh	r0, [r1, -r0]
   46454:	add	r1, sp, #4
   46458:	str	r0, [sp, #12]
   4645c:	mov	r0, r4
   46460:	blx	r2
   46464:	ldrb	r1, [r4, #25]
   46468:	ldr	r0, [r4, #20]
   4646c:	cmp	r1, #0
   46470:	beq	46530 <flatcc_json_printer_table_as_root@@Base+0x184>
   46474:	add	r1, r0, #1
   46478:	str	r1, [r4, #20]
   4647c:	mov	r1, #10
   46480:	strb	r1, [r0]
   46484:	ldr	r0, [r4, #32]
   46488:	sub	r2, r0, #1
   4648c:	str	r2, [r4, #32]
   46490:	ldrb	r3, [r4, #25]
   46494:	ldr	r0, [r4, #20]
   46498:	ldr	r1, [r4, #16]
   4649c:	mla	r6, r2, r3, r0
   464a0:	mul	r5, r2, r3
   464a4:	cmp	r6, r1
   464a8:	bls	46518 <flatcc_json_printer_table_as_root@@Base+0x16c>
   464ac:	cmp	r0, r1
   464b0:	bcc	464cc <flatcc_json_printer_table_as_root@@Base+0x120>
   464b4:	ldr	r2, [r4, #44]	; 0x2c
   464b8:	mov	r0, r4
   464bc:	mov	r1, #0
   464c0:	blx	r2
   464c4:	ldr	r1, [r4, #16]
   464c8:	ldr	r0, [r4, #20]
   464cc:	sub	r6, r1, r0
   464d0:	cmp	r6, r5
   464d4:	bcs	46518 <flatcc_json_printer_table_as_root@@Base+0x16c>
   464d8:	mov	r1, #32
   464dc:	mov	r2, r6
   464e0:	bl	14ee4 <memset@plt>
   464e4:	ldr	r0, [r4, #20]
   464e8:	ldr	r2, [r4, #44]	; 0x2c
   464ec:	mov	r1, #0
   464f0:	add	r0, r0, r6
   464f4:	str	r0, [r4, #20]
   464f8:	mov	r0, r4
   464fc:	blx	r2
   46500:	ldr	r1, [r4, #16]
   46504:	ldr	r0, [r4, #20]
   46508:	sub	r5, r5, r6
   4650c:	sub	r6, r1, r0
   46510:	cmp	r5, r6
   46514:	bhi	464d8 <flatcc_json_printer_table_as_root@@Base+0x12c>
   46518:	mov	r1, #32
   4651c:	mov	r2, r5
   46520:	bl	14ee4 <memset@plt>
   46524:	ldr	r0, [r4, #20]
   46528:	add	r0, r0, r5
   4652c:	str	r0, [r4, #20]
   46530:	add	r1, r0, #1
   46534:	str	r1, [r4, #20]
   46538:	mov	r1, #125	; 0x7d
   4653c:	strb	r1, [r0]
   46540:	ldrb	r0, [r4, #25]
   46544:	cmp	r0, #0
   46548:	beq	4656c <flatcc_json_printer_table_as_root@@Base+0x1c0>
   4654c:	ldr	r0, [r4, #32]
   46550:	cmp	r0, #0
   46554:	bne	4656c <flatcc_json_printer_table_as_root@@Base+0x1c0>
   46558:	ldr	r0, [r4, #20]
   4655c:	add	r1, r0, #1
   46560:	str	r1, [r4, #20]
   46564:	mov	r1, #10
   46568:	strb	r1, [r0]
   4656c:	ldr	r2, [r4, #44]	; 0x2c
   46570:	mov	r0, r4
   46574:	mov	r1, #1
   46578:	blx	r2
   4657c:	ldr	r1, [r4, #36]	; 0x24
   46580:	mvn	r0, #0
   46584:	cmp	r1, #0
   46588:	beq	46594 <flatcc_json_printer_table_as_root@@Base+0x1e8>
   4658c:	sub	sp, fp, #16
   46590:	pop	{r4, r5, r6, sl, fp, pc}
   46594:	ldr	r1, [r4, #12]
   46598:	ldr	r2, [r4, #20]
   4659c:	ldr	r0, [r4]
   465a0:	add	r1, r2, r1
   465a4:	sub	r0, r1, r0
   465a8:	sub	sp, fp, #16
   465ac:	pop	{r4, r5, r6, sl, fp, pc}
   465b0:	ldr	r0, [r4, #36]	; 0x24
   465b4:	movw	r2, #1019	; 0x3fb
   465b8:	cmp	r0, #0
   465bc:	moveq	r0, #1
   465c0:	streq	r0, [r4, #36]	; 0x24
   465c4:	ldr	r0, [pc, #68]	; 46610 <flatcc_json_printer_table_as_root@@Base+0x264>
   465c8:	ldr	r1, [pc, #68]	; 46614 <flatcc_json_printer_table_as_root@@Base+0x268>
   465cc:	ldr	r3, [pc, #68]	; 46618 <flatcc_json_printer_table_as_root@@Base+0x26c>
   465d0:	add	r0, pc, r0
   465d4:	add	r1, pc, r1
   465d8:	add	r3, pc, r3
   465dc:	bl	14f38 <__assert_fail@plt>
   465e0:	ldr	r0, [r4, #36]	; 0x24
   465e4:	movw	r2, #1028	; 0x404
   465e8:	cmp	r0, #0
   465ec:	moveq	r0, #1
   465f0:	streq	r0, [r4, #36]	; 0x24
   465f4:	ldr	r0, [pc, #32]	; 4661c <flatcc_json_printer_table_as_root@@Base+0x270>
   465f8:	ldr	r1, [pc, #32]	; 46620 <flatcc_json_printer_table_as_root@@Base+0x274>
   465fc:	ldr	r3, [pc, #32]	; 46624 <flatcc_json_printer_table_as_root@@Base+0x278>
   46600:	add	r0, pc, r0
   46604:	add	r1, pc, r1
   46608:	add	r3, pc, r3
   4660c:	bl	14f38 <__assert_fail@plt>
   46610:			; <UNDEFINED> instruction: 0x00007aba
   46614:	andeq	r7, r0, r0, lsl r6
   46618:	ldrdeq	r7, [r0], -r1
   4661c:	strdeq	r7, [r0], -r8
   46620:	andeq	r7, r0, r0, ror #11
   46624:	andeq	r7, r0, r1, lsr #21

00046628 <flatcc_json_printer_struct_as_nested_root@@Base>:
   46628:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   4662c:	add	fp, sp, #24
   46630:	sub	sp, sp, #8
   46634:	mov	r6, r1
   46638:	ldr	r1, [r1, #8]
   4663c:	mov	r4, r0
   46640:	mov	r0, #4
   46644:	add	r0, r0, r2, lsl #1
   46648:	cmp	r0, r1
   4664c:	bge	4666c <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   46650:	ldr	r1, [r6, #4]
   46654:	add	r0, r1, r0
   46658:	ldrh	r0, [r0]
   4665c:	cmp	r0, #0
   46660:	ldrne	r1, [r6]
   46664:	addsne	r0, r1, r0
   46668:	bne	46674 <flatcc_json_printer_struct_as_nested_root@@Base+0x4c>
   4666c:	sub	sp, fp, #24
   46670:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   46674:	ldr	r7, [r0]
   46678:	mov	r1, #0
   4667c:	ldr	r0, [r7, r0]!
   46680:	str	r1, [sp, #4]
   46684:	cmp	r7, #0
   46688:	cmpne	r0, #7
   4668c:	bls	46814 <flatcc_json_printer_struct_as_nested_root@@Base+0x1ec>
   46690:	ldr	r1, [fp, #12]
   46694:	mov	r5, r3
   46698:	cmp	r1, #0
   4669c:	beq	466c4 <flatcc_json_printer_struct_as_nested_root@@Base+0x9c>
   466a0:	add	r0, sp, #4
   466a4:	mov	r2, #4
   466a8:	bl	14ef0 <strncpy@plt>
   466ac:	ldr	r0, [sp, #4]
   466b0:	cmp	r0, #0
   466b4:	beq	466c4 <flatcc_json_printer_struct_as_nested_root@@Base+0x9c>
   466b8:	ldr	r1, [r7, #4]
   466bc:	cmp	r1, r0
   466c0:	bne	46844 <flatcc_json_printer_struct_as_nested_root@@Base+0x21c>
   466c4:	ldr	r0, [r6, #16]
   466c8:	ldr	r8, [fp, #16]
   466cc:	ldr	r2, [fp, #8]
   466d0:	add	r1, r0, #1
   466d4:	cmp	r0, #0
   466d8:	str	r1, [r6, #16]
   466dc:	beq	466f4 <flatcc_json_printer_struct_as_nested_root@@Base+0xcc>
   466e0:	ldr	r0, [r4, #20]
   466e4:	add	r1, r0, #1
   466e8:	str	r1, [r4, #20]
   466ec:	mov	r1, #44	; 0x2c
   466f0:	strb	r1, [r0]
   466f4:	mov	r0, r4
   466f8:	mov	r1, r5
   466fc:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   46700:	ldr	r1, [r4, #32]
   46704:	ldr	r0, [r4, #20]
   46708:	add	r1, r1, #1
   4670c:	str	r1, [r4, #32]
   46710:	add	r1, r0, #1
   46714:	str	r1, [r4, #20]
   46718:	mov	r1, #123	; 0x7b
   4671c:	strb	r1, [r0]
   46720:	ldr	r0, [r7]
   46724:	add	r1, r7, r0
   46728:	mov	r0, r4
   4672c:	blx	r8
   46730:	ldrb	r1, [r4, #25]
   46734:	ldr	r0, [r4, #20]
   46738:	cmp	r1, #0
   4673c:	beq	467fc <flatcc_json_printer_struct_as_nested_root@@Base+0x1d4>
   46740:	add	r1, r0, #1
   46744:	str	r1, [r4, #20]
   46748:	mov	r1, #10
   4674c:	strb	r1, [r0]
   46750:	ldr	r0, [r4, #32]
   46754:	sub	r2, r0, #1
   46758:	str	r2, [r4, #32]
   4675c:	ldrb	r3, [r4, #25]
   46760:	ldr	r0, [r4, #20]
   46764:	ldr	r1, [r4, #16]
   46768:	mla	r7, r2, r3, r0
   4676c:	mul	r5, r2, r3
   46770:	cmp	r7, r1
   46774:	bls	467e4 <flatcc_json_printer_struct_as_nested_root@@Base+0x1bc>
   46778:	cmp	r0, r1
   4677c:	bcc	46798 <flatcc_json_printer_struct_as_nested_root@@Base+0x170>
   46780:	ldr	r2, [r4, #44]	; 0x2c
   46784:	mov	r0, r4
   46788:	mov	r1, #0
   4678c:	blx	r2
   46790:	ldr	r1, [r4, #16]
   46794:	ldr	r0, [r4, #20]
   46798:	sub	r6, r1, r0
   4679c:	cmp	r6, r5
   467a0:	bcs	467e4 <flatcc_json_printer_struct_as_nested_root@@Base+0x1bc>
   467a4:	mov	r1, #32
   467a8:	mov	r2, r6
   467ac:	bl	14ee4 <memset@plt>
   467b0:	ldr	r0, [r4, #20]
   467b4:	ldr	r2, [r4, #44]	; 0x2c
   467b8:	mov	r1, #0
   467bc:	add	r0, r0, r6
   467c0:	str	r0, [r4, #20]
   467c4:	mov	r0, r4
   467c8:	blx	r2
   467cc:	ldr	r1, [r4, #16]
   467d0:	ldr	r0, [r4, #20]
   467d4:	sub	r5, r5, r6
   467d8:	sub	r6, r1, r0
   467dc:	cmp	r5, r6
   467e0:	bhi	467a4 <flatcc_json_printer_struct_as_nested_root@@Base+0x17c>
   467e4:	mov	r1, #32
   467e8:	mov	r2, r5
   467ec:	bl	14ee4 <memset@plt>
   467f0:	ldr	r0, [r4, #20]
   467f4:	add	r0, r0, r5
   467f8:	str	r0, [r4, #20]
   467fc:	add	r1, r0, #1
   46800:	str	r1, [r4, #20]
   46804:	mov	r1, #125	; 0x7d
   46808:	strb	r1, [r0]
   4680c:	sub	sp, fp, #24
   46810:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   46814:	ldr	r0, [r4, #36]	; 0x24
   46818:	movw	r2, #1019	; 0x3fb
   4681c:	cmp	r0, #0
   46820:	moveq	r0, #1
   46824:	streq	r0, [r4, #36]	; 0x24
   46828:	ldr	r0, [pc, #68]	; 46874 <flatcc_json_printer_struct_as_nested_root@@Base+0x24c>
   4682c:	ldr	r1, [pc, #68]	; 46878 <flatcc_json_printer_struct_as_nested_root@@Base+0x250>
   46830:	ldr	r3, [pc, #68]	; 4687c <flatcc_json_printer_struct_as_nested_root@@Base+0x254>
   46834:	add	r0, pc, r0
   46838:	add	r1, pc, r1
   4683c:	add	r3, pc, r3
   46840:	bl	14f38 <__assert_fail@plt>
   46844:	ldr	r0, [r4, #36]	; 0x24
   46848:	movw	r2, #1028	; 0x404
   4684c:	cmp	r0, #0
   46850:	moveq	r0, #1
   46854:	streq	r0, [r4, #36]	; 0x24
   46858:	ldr	r0, [pc, #32]	; 46880 <flatcc_json_printer_struct_as_nested_root@@Base+0x258>
   4685c:	ldr	r1, [pc, #32]	; 46884 <flatcc_json_printer_struct_as_nested_root@@Base+0x25c>
   46860:	ldr	r3, [pc, #32]	; 46888 <flatcc_json_printer_struct_as_nested_root@@Base+0x260>
   46864:	add	r0, pc, r0
   46868:	add	r1, pc, r1
   4686c:	add	r3, pc, r3
   46870:	bl	14f38 <__assert_fail@plt>
   46874:	andeq	r7, r0, r6, asr r8
   46878:	andeq	r7, r0, ip, lsr #7
   4687c:	andeq	r7, r0, sp, ror #16
   46880:	muleq	r0, r4, r8
   46884:	andeq	r7, r0, ip, ror r3
   46888:	andeq	r7, r0, sp, lsr r8

0004688c <flatcc_json_printer_table_as_nested_root@@Base>:
   4688c:	push	{r4, r5, r6, r7, fp, lr}
   46890:	add	fp, sp, #16
   46894:	sub	sp, sp, #24
   46898:	mov	r5, r1
   4689c:	ldr	r1, [r1, #8]
   468a0:	mov	r4, r0
   468a4:	mov	r0, #4
   468a8:	add	r0, r0, r2, lsl #1
   468ac:	cmp	r0, r1
   468b0:	bge	468d0 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   468b4:	ldr	r1, [r5, #4]
   468b8:	add	r0, r1, r0
   468bc:	ldrh	r0, [r0]
   468c0:	cmp	r0, #0
   468c4:	ldrne	r1, [r5]
   468c8:	addsne	r0, r1, r0
   468cc:	bne	468d8 <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   468d0:	sub	sp, fp, #16
   468d4:	pop	{r4, r5, r6, r7, fp, pc}
   468d8:	ldr	r7, [r0]
   468dc:	mov	r1, #0
   468e0:	ldr	r0, [r7, r0]!
   468e4:	str	r1, [sp, #4]
   468e8:	cmp	r0, #7
   468ec:	bls	46ac8 <flatcc_json_printer_table_as_nested_root@@Base+0x23c>
   468f0:	ldr	r1, [fp, #12]
   468f4:	mov	r6, r3
   468f8:	cmp	r1, #0
   468fc:	beq	46924 <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   46900:	add	r0, sp, #4
   46904:	mov	r2, #4
   46908:	bl	14ef0 <strncpy@plt>
   4690c:	ldr	r0, [sp, #4]
   46910:	cmp	r0, #0
   46914:	beq	46924 <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   46918:	ldr	r1, [r7, #8]
   4691c:	cmp	r1, r0
   46920:	bne	46af8 <flatcc_json_printer_table_as_nested_root@@Base+0x26c>
   46924:	ldr	r0, [r5, #16]
   46928:	ldr	r2, [fp, #8]
   4692c:	add	r1, r0, #1
   46930:	cmp	r0, #0
   46934:	str	r1, [r5, #16]
   46938:	beq	46950 <flatcc_json_printer_table_as_nested_root@@Base+0xc4>
   4693c:	ldr	r0, [r4, #20]
   46940:	add	r1, r0, #1
   46944:	str	r1, [r4, #20]
   46948:	mov	r1, #44	; 0x2c
   4694c:	strb	r1, [r0]
   46950:	mov	r0, r4
   46954:	mov	r1, r6
   46958:	bl	3c4ec <flatcc_json_printer_string_field@@Base+0x90>
   4695c:	ldr	r0, [r5, #12]
   46960:	subs	r0, r0, #1
   46964:	beq	46aac <flatcc_json_printer_table_as_nested_root@@Base+0x220>
   46968:	add	r1, r7, #4
   4696c:	ldr	r7, [r4, #32]
   46970:	ldr	r2, [fp, #16]
   46974:	ldr	r3, [r1]
   46978:	add	r7, r7, #1
   4697c:	add	r1, r1, r3
   46980:	ldr	r3, [r4, #20]
   46984:	str	r7, [r4, #32]
   46988:	add	r7, r3, #1
   4698c:	str	r7, [r4, #20]
   46990:	mov	r7, #123	; 0x7b
   46994:	strb	r7, [r3]
   46998:	str	r0, [sp, #16]
   4699c:	mov	r0, #0
   469a0:	str	r0, [sp, #20]
   469a4:	str	r1, [sp, #4]
   469a8:	ldr	r0, [r1]
   469ac:	sub	r3, r1, r0
   469b0:	str	r3, [sp, #8]
   469b4:	ldrh	r0, [r1, -r0]
   469b8:	add	r1, sp, #4
   469bc:	str	r0, [sp, #12]
   469c0:	mov	r0, r4
   469c4:	blx	r2
   469c8:	ldrb	r1, [r4, #25]
   469cc:	ldr	r0, [r4, #20]
   469d0:	cmp	r1, #0
   469d4:	beq	46a94 <flatcc_json_printer_table_as_nested_root@@Base+0x208>
   469d8:	add	r1, r0, #1
   469dc:	str	r1, [r4, #20]
   469e0:	mov	r1, #10
   469e4:	strb	r1, [r0]
   469e8:	ldr	r0, [r4, #32]
   469ec:	sub	r2, r0, #1
   469f0:	str	r2, [r4, #32]
   469f4:	ldrb	r3, [r4, #25]
   469f8:	ldr	r0, [r4, #20]
   469fc:	ldr	r1, [r4, #16]
   46a00:	mla	r7, r2, r3, r0
   46a04:	mul	r5, r2, r3
   46a08:	cmp	r7, r1
   46a0c:	bls	46a7c <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   46a10:	cmp	r0, r1
   46a14:	bcc	46a30 <flatcc_json_printer_table_as_nested_root@@Base+0x1a4>
   46a18:	ldr	r2, [r4, #44]	; 0x2c
   46a1c:	mov	r0, r4
   46a20:	mov	r1, #0
   46a24:	blx	r2
   46a28:	ldr	r1, [r4, #16]
   46a2c:	ldr	r0, [r4, #20]
   46a30:	sub	r6, r1, r0
   46a34:	cmp	r6, r5
   46a38:	bcs	46a7c <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   46a3c:	mov	r1, #32
   46a40:	mov	r2, r6
   46a44:	bl	14ee4 <memset@plt>
   46a48:	ldr	r0, [r4, #20]
   46a4c:	ldr	r2, [r4, #44]	; 0x2c
   46a50:	mov	r1, #0
   46a54:	add	r0, r0, r6
   46a58:	str	r0, [r4, #20]
   46a5c:	mov	r0, r4
   46a60:	blx	r2
   46a64:	ldr	r1, [r4, #16]
   46a68:	ldr	r0, [r4, #20]
   46a6c:	sub	r5, r5, r6
   46a70:	sub	r6, r1, r0
   46a74:	cmp	r5, r6
   46a78:	bhi	46a3c <flatcc_json_printer_table_as_nested_root@@Base+0x1b0>
   46a7c:	mov	r1, #32
   46a80:	mov	r2, r5
   46a84:	bl	14ee4 <memset@plt>
   46a88:	ldr	r0, [r4, #20]
   46a8c:	add	r0, r0, r5
   46a90:	str	r0, [r4, #20]
   46a94:	add	r1, r0, #1
   46a98:	str	r1, [r4, #20]
   46a9c:	mov	r1, #125	; 0x7d
   46aa0:	strb	r1, [r0]
   46aa4:	sub	sp, fp, #16
   46aa8:	pop	{r4, r5, r6, r7, fp, pc}
   46aac:	ldr	r0, [r4, #36]	; 0x24
   46ab0:	cmp	r0, #0
   46ab4:	bne	468d0 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   46ab8:	mov	r0, #2
   46abc:	str	r0, [r4, #36]	; 0x24
   46ac0:	sub	sp, fp, #16
   46ac4:	pop	{r4, r5, r6, r7, fp, pc}
   46ac8:	ldr	r0, [r4, #36]	; 0x24
   46acc:	movw	r2, #1019	; 0x3fb
   46ad0:	cmp	r0, #0
   46ad4:	moveq	r0, #1
   46ad8:	streq	r0, [r4, #36]	; 0x24
   46adc:	ldr	r0, [pc, #68]	; 46b28 <flatcc_json_printer_table_as_nested_root@@Base+0x29c>
   46ae0:	ldr	r1, [pc, #68]	; 46b2c <flatcc_json_printer_table_as_nested_root@@Base+0x2a0>
   46ae4:	ldr	r3, [pc, #68]	; 46b30 <flatcc_json_printer_table_as_nested_root@@Base+0x2a4>
   46ae8:	add	r0, pc, r0
   46aec:	add	r1, pc, r1
   46af0:	add	r3, pc, r3
   46af4:	bl	14f38 <__assert_fail@plt>
   46af8:	ldr	r0, [r4, #36]	; 0x24
   46afc:	movw	r2, #1028	; 0x404
   46b00:	cmp	r0, #0
   46b04:	moveq	r0, #1
   46b08:	streq	r0, [r4, #36]	; 0x24
   46b0c:	ldr	r0, [pc, #32]	; 46b34 <flatcc_json_printer_table_as_nested_root@@Base+0x2a8>
   46b10:	ldr	r1, [pc, #32]	; 46b38 <flatcc_json_printer_table_as_nested_root@@Base+0x2ac>
   46b14:	ldr	r3, [pc, #32]	; 46b3c <flatcc_json_printer_table_as_nested_root@@Base+0x2b0>
   46b18:	add	r0, pc, r0
   46b1c:	add	r1, pc, r1
   46b20:	add	r3, pc, r3
   46b24:	bl	14f38 <__assert_fail@plt>
   46b28:	andeq	r7, r0, r2, lsr #11
   46b2c:	strdeq	r7, [r0], -r8
   46b30:			; <UNDEFINED> instruction: 0x000075b9
   46b34:	andeq	r7, r0, r0, ror #11
   46b38:	andeq	r7, r0, r8, asr #1
   46b3c:	andeq	r7, r0, r9, lsl #11

00046b40 <flatcc_json_printer_init@@Base>:
   46b40:	push	{r4, r5, r6, sl, fp, lr}
   46b44:	add	fp, sp, #16
   46b48:	vmov.i32	q8, #0	; 0x00000000
   46b4c:	mov	r5, r0
   46b50:	mov	r4, #0
   46b54:	cmp	r1, #0
   46b58:	movw	r6, #16448	; 0x4040
   46b5c:	str	r4, [r0, #32]
   46b60:	mov	r0, #36	; 0x24
   46b64:	mov	r2, r5
   46b68:	vst1.32	{d16-d17}, [r2], r0
   46b6c:	add	r0, r5, #16
   46b70:	str	r4, [r2]
   46b74:	vst1.32	{d16-d17}, [r0]
   46b78:	ldr	r0, [pc, #96]	; 46be0 <flatcc_json_printer_init@@Base+0xa0>
   46b7c:	ldr	r0, [pc, r0]
   46b80:	ldr	r0, [r0]
   46b84:	ldr	r2, [pc, #88]	; 46be4 <flatcc_json_printer_init@@Base+0xa4>
   46b88:	movne	r0, r1
   46b8c:	str	r0, [r5, #40]	; 0x28
   46b90:	movw	r0, #16448	; 0x4040
   46b94:	add	r2, pc, r2
   46b98:	str	r2, [r5, #44]	; 0x2c
   46b9c:	bl	14e90 <malloc@plt>
   46ba0:	cmp	r0, #0
   46ba4:	str	r0, [r5]
   46ba8:	beq	46bd4 <flatcc_json_printer_init@@Base+0x94>
   46bac:	mov	r1, #16384	; 0x4000
   46bb0:	str	r6, [r5, #4]
   46bb4:	str	r1, [r5, #8]
   46bb8:	mov	r1, #1
   46bbc:	strb	r1, [r5, #24]
   46bc0:	add	r1, r0, #16384	; 0x4000
   46bc4:	str	r1, [r5, #16]
   46bc8:	str	r0, [r5, #20]
   46bcc:	mov	r0, r4
   46bd0:	pop	{r4, r5, r6, sl, fp, pc}
   46bd4:	mvn	r4, #0
   46bd8:	mov	r0, r4
   46bdc:	pop	{r4, r5, r6, sl, fp, pc}
   46be0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   46be4:	andeq	r0, r0, ip, asr #32
   46be8:	push	{r4, r5, r6, sl, fp, lr}
   46bec:	add	fp, sp, #16
   46bf0:	mov	r4, r0
   46bf4:	cmp	r1, #0
   46bf8:	beq	46c04 <flatcc_json_printer_init@@Base+0xc4>
   46bfc:	ldr	r5, [r4, #20]
   46c00:	b	46c14 <flatcc_json_printer_init@@Base+0xd4>
   46c04:	ldr	r6, [r4, #16]
   46c08:	ldr	r5, [r4, #20]
   46c0c:	cmp	r5, r6
   46c10:	bcs	46c40 <flatcc_json_printer_init@@Base+0x100>
   46c14:	ldr	r0, [r4]
   46c18:	ldr	r3, [r4, #40]	; 0x28
   46c1c:	mov	r2, #1
   46c20:	sub	r5, r5, r0
   46c24:	mov	r1, r5
   46c28:	bl	14e84 <fwrite@plt>
   46c2c:	ldr	r1, [r4, #12]
   46c30:	ldr	r0, [r4]
   46c34:	str	r0, [r4, #20]
   46c38:	add	r1, r1, r5
   46c3c:	b	46c84 <flatcc_json_printer_init@@Base+0x144>
   46c40:	ldr	r0, [r4]
   46c44:	ldr	r1, [r4, #8]
   46c48:	ldr	r3, [r4, #40]	; 0x28
   46c4c:	mov	r2, #1
   46c50:	bl	14e84 <fwrite@plt>
   46c54:	ldr	r0, [r4]
   46c58:	ldr	r1, [r4, #8]
   46c5c:	sub	r5, r5, r6
   46c60:	mov	r2, r5
   46c64:	add	r1, r0, r1
   46c68:	bl	14e54 <memcpy@plt>
   46c6c:	ldr	r0, [r4]
   46c70:	ldr	r1, [r4, #8]
   46c74:	ldr	r2, [r4, #12]
   46c78:	add	r0, r0, r5
   46c7c:	add	r1, r2, r1
   46c80:	str	r0, [r4, #20]
   46c84:	str	r1, [r4, #12]
   46c88:	mov	r1, #0
   46c8c:	strb	r1, [r0]
   46c90:	pop	{r4, r5, r6, sl, fp, pc}

00046c94 <flatcc_json_printer_init_buffer@@Base>:
   46c94:	push	{fp, lr}
   46c98:	mov	fp, sp
   46c9c:	cmp	r2, #63	; 0x3f
   46ca0:	bls	46ce0 <flatcc_json_printer_init_buffer@@Base+0x4c>
   46ca4:	vmov.i32	q8, #0	; 0x00000000
   46ca8:	add	r3, r0, #12
   46cac:	vst1.32	{d16-d17}, [r3]
   46cb0:	ldr	r3, [pc, #72]	; 46d00 <flatcc_json_printer_init_buffer@@Base+0x6c>
   46cb4:	add	r3, pc, r3
   46cb8:	str	r3, [r0, #44]	; 0x2c
   46cbc:	add	r3, r0, #28
   46cc0:	vst1.32	{d16-d17}, [r3]
   46cc4:	sub	r3, r2, #64	; 0x40
   46cc8:	stm	r0, {r1, r2, r3}
   46ccc:	add	r2, r1, r3
   46cd0:	str	r2, [r0, #16]
   46cd4:	str	r1, [r0, #20]
   46cd8:	mov	r0, #0
   46cdc:	pop	{fp, pc}
   46ce0:	ldr	r0, [pc, #28]	; 46d04 <flatcc_json_printer_init_buffer@@Base+0x70>
   46ce4:	ldr	r1, [pc, #28]	; 46d08 <flatcc_json_printer_init_buffer@@Base+0x74>
   46ce8:	ldr	r3, [pc, #28]	; 46d0c <flatcc_json_printer_init_buffer@@Base+0x78>
   46cec:	movw	r2, #1165	; 0x48d
   46cf0:	add	r0, pc, r0
   46cf4:	add	r1, pc, r1
   46cf8:	add	r3, pc, r3
   46cfc:	bl	14f38 <__assert_fail@plt>
   46d00:	andeq	r0, r0, r4, asr r0
   46d04:	andeq	r7, r0, r6, lsr #32
   46d08:	strdeq	r6, [r0], -r0
   46d0c:	andeq	r7, r0, r7, asr #32
   46d10:	ldr	r2, [r0, #16]
   46d14:	ldr	r1, [r0, #20]
   46d18:	cmp	r1, r2
   46d1c:	bcs	46d28 <flatcc_json_printer_init_buffer@@Base+0x94>
   46d20:	mov	r2, r1
   46d24:	b	46d50 <flatcc_json_printer_init_buffer@@Base+0xbc>
   46d28:	ldr	r2, [r0, #36]	; 0x24
   46d2c:	cmp	r2, #0
   46d30:	moveq	r2, #3
   46d34:	streq	r2, [r0, #36]	; 0x24
   46d38:	ldr	r2, [r0]
   46d3c:	ldr	r3, [r0, #12]
   46d40:	sub	r1, r1, r2
   46d44:	str	r2, [r0, #20]
   46d48:	add	r1, r1, r3
   46d4c:	str	r1, [r0, #12]
   46d50:	mov	r0, #0
   46d54:	strb	r0, [r2]
   46d58:	bx	lr

00046d5c <flatcc_json_printer_init_dynamic_buffer@@Base>:
   46d5c:	push	{r4, r5, fp, lr}
   46d60:	add	fp, sp, #8
   46d64:	vmov.i32	q8, #0	; 0x00000000
   46d68:	cmp	r1, #0
   46d6c:	mov	r5, r1
   46d70:	mov	r4, r0
   46d74:	add	r0, r0, #28
   46d78:	movweq	r5, #4096	; 0x1000
   46d7c:	cmp	r5, #64	; 0x40
   46d80:	vst1.32	{d16-d17}, [r0]
   46d84:	add	r0, r4, #12
   46d88:	movls	r5, #64	; 0x40
   46d8c:	vst1.32	{d16-d17}, [r0]
   46d90:	mov	r0, r5
   46d94:	bl	14e90 <malloc@plt>
   46d98:	mov	r1, r0
   46d9c:	mov	r0, #1
   46da0:	strb	r0, [r4, #24]
   46da4:	sub	r0, r5, #64	; 0x40
   46da8:	stm	r4, {r1, r5}
   46dac:	cmp	r1, #0
   46db0:	str	r0, [r4, #8]
   46db4:	add	r0, r1, r0
   46db8:	ldr	r2, [pc, #32]	; 46de0 <flatcc_json_printer_init_dynamic_buffer@@Base+0x84>
   46dbc:	add	r2, pc, r2
   46dc0:	str	r2, [r4, #44]	; 0x2c
   46dc4:	str	r0, [r4, #16]
   46dc8:	mov	r0, #0
   46dcc:	moveq	r0, #3
   46dd0:	str	r1, [r4, #20]
   46dd4:	streq	r0, [r4, #36]	; 0x24
   46dd8:	mvneq	r0, #0
   46ddc:	pop	{r4, r5, fp, pc}
   46de0:	andeq	r0, r0, r0, lsr #32
   46de4:	push	{r4, r5, fp, lr}
   46de8:	add	fp, sp, #8
   46dec:	mov	r4, r0
   46df0:	ldr	r0, [r0]
   46df4:	mov	r1, #0
   46df8:	ldr	r5, [r4, #20]
   46dfc:	strb	r1, [r5], -r0
   46e00:	ldr	r0, [r4, #16]
   46e04:	ldr	r1, [r4, #20]
   46e08:	cmp	r1, r0
   46e0c:	popcc	{r4, r5, fp, pc}
   46e10:	ldm	r4, {r0, r1}
   46e14:	lsl	r1, r1, #1
   46e18:	bl	14e78 <realloc@plt>
   46e1c:	cmp	r0, #0
   46e20:	beq	46e54 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf8>
   46e24:	str	r0, [r4]
   46e28:	mvn	r3, #63	; 0x3f
   46e2c:	add	r1, r0, r5
   46e30:	ldr	r2, [r4, #4]
   46e34:	add	r3, r3, r2, lsl #1
   46e38:	lsl	r2, r2, #1
   46e3c:	add	r0, r0, r3
   46e40:	str	r3, [r4, #8]
   46e44:	str	r2, [r4, #4]
   46e48:	str	r0, [r4, #16]
   46e4c:	str	r1, [r4, #20]
   46e50:	b	46e78 <flatcc_json_printer_init_dynamic_buffer@@Base+0x11c>
   46e54:	ldr	r0, [r4, #36]	; 0x24
   46e58:	cmp	r0, #0
   46e5c:	moveq	r0, #3
   46e60:	streq	r0, [r4, #36]	; 0x24
   46e64:	ldr	r0, [r4, #12]
   46e68:	ldr	r1, [r4]
   46e6c:	add	r0, r0, r5
   46e70:	str	r1, [r4, #20]
   46e74:	str	r0, [r4, #12]
   46e78:	mov	r0, #0
   46e7c:	strb	r0, [r1]
   46e80:	pop	{r4, r5, fp, pc}

00046e84 <flatcc_json_printer_get_buffer@@Base>:
   46e84:	push	{r4, r5, fp, lr}
   46e88:	add	fp, sp, #8
   46e8c:	ldr	r2, [r0, #44]	; 0x2c
   46e90:	mov	r4, r1
   46e94:	mov	r1, #0
   46e98:	mov	r5, r0
   46e9c:	blx	r2
   46ea0:	cmp	r4, #0
   46ea4:	beq	46ebc <flatcc_json_printer_get_buffer@@Base+0x38>
   46ea8:	ldr	r0, [r5]
   46eac:	ldr	r1, [r5, #20]
   46eb0:	sub	r1, r1, r0
   46eb4:	str	r1, [r4]
   46eb8:	pop	{r4, r5, fp, pc}
   46ebc:	ldr	r0, [r5]
   46ec0:	pop	{r4, r5, fp, pc}

00046ec4 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   46ec4:	push	{r4, r5, fp, lr}
   46ec8:	add	fp, sp, #8
   46ecc:	ldr	r2, [r0, #44]	; 0x2c
   46ed0:	mov	r5, r1
   46ed4:	mov	r1, #0
   46ed8:	mov	r4, r0
   46edc:	blx	r2
   46ee0:	cmp	r5, #0
   46ee4:	beq	46efc <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x38>
   46ee8:	ldr	r0, [r4]
   46eec:	ldr	r1, [r4, #20]
   46ef0:	sub	r1, r1, r0
   46ef4:	str	r1, [r5]
   46ef8:	b	46f00 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x3c>
   46efc:	ldr	r0, [r4]
   46f00:	vmov.i32	q8, #0	; 0x00000000
   46f04:	mov	r1, #32
   46f08:	add	r2, r4, #16
   46f0c:	vst1.32	{d16-d17}, [r4], r1
   46f10:	vst1.32	{d16-d17}, [r2]
   46f14:	vst1.32	{d16-d17}, [r4]
   46f18:	pop	{r4, r5, fp, pc}

00046f1c <flatcc_json_printer_clear@@Base>:
   46f1c:	push	{r4, sl, fp, lr}
   46f20:	add	fp, sp, #8
   46f24:	mov	r4, r0
   46f28:	ldrb	r0, [r0, #24]
   46f2c:	cmp	r0, #0
   46f30:	beq	46f44 <flatcc_json_printer_clear@@Base+0x28>
   46f34:	ldr	r0, [r4]
   46f38:	cmp	r0, #0
   46f3c:	beq	46f44 <flatcc_json_printer_clear@@Base+0x28>
   46f40:	bl	14e48 <free@plt>
   46f44:	vmov.i32	q8, #0	; 0x00000000
   46f48:	mov	r0, #32
   46f4c:	add	r1, r4, #16
   46f50:	vst1.32	{d16-d17}, [r4], r0
   46f54:	vst1.32	{d16-d17}, [r1]
   46f58:	vst1.32	{d16-d17}, [r4]
   46f5c:	pop	{r4, sl, fp, pc}
   46f60:	cmp	r2, #0
   46f64:	bxeq	lr
   46f68:	push	{r4, r5, fp, lr}
   46f6c:	add	fp, sp, #8
   46f70:	ldr	lr, [r2]
   46f74:	bic	ip, r3, #224	; 0xe0
   46f78:	cmp	ip, #0
   46f7c:	beq	46f9c <flatcc_json_printer_clear@@Base+0x80>
   46f80:	cmp	ip, #1
   46f84:	bne	47064 <flatcc_json_printer_clear@@Base+0x148>
   46f88:	ldr	ip, [pc, #288]	; 470b0 <flatcc_json_printer_clear@@Base+0x194>
   46f8c:	add	ip, pc, ip
   46f90:	cmp	lr, #3
   46f94:	bcs	46fac <flatcc_json_printer_clear@@Base+0x90>
   46f98:	b	4700c <flatcc_json_printer_clear@@Base+0xf0>
   46f9c:	ldr	ip, [pc, #264]	; 470ac <flatcc_json_printer_clear@@Base+0x190>
   46fa0:	add	ip, pc, ip
   46fa4:	cmp	lr, #3
   46fa8:	bcc	4700c <flatcc_json_printer_clear@@Base+0xf0>
   46fac:	ldrb	r4, [r1]
   46fb0:	sub	lr, lr, #3
   46fb4:	cmp	lr, #2
   46fb8:	ldrb	r4, [ip, r4, lsr #2]
   46fbc:	strb	r4, [r0]
   46fc0:	ldrb	r5, [r1, #1]
   46fc4:	ldrb	r4, [r1]
   46fc8:	lsr	r5, r5, #4
   46fcc:	bfi	r5, r4, #4, #2
   46fd0:	ldrb	r4, [ip, r5]
   46fd4:	strb	r4, [r0, #1]
   46fd8:	ldrb	r5, [r1, #2]
   46fdc:	ldrb	r4, [r1, #1]
   46fe0:	lsr	r5, r5, #6
   46fe4:	bfi	r5, r4, #2, #4
   46fe8:	ldrb	r4, [ip, r5]
   46fec:	strb	r4, [r0, #2]
   46ff0:	ldrb	r4, [r1, #2]
   46ff4:	add	r1, r1, #3
   46ff8:	and	r4, r4, #63	; 0x3f
   46ffc:	ldrb	r4, [ip, r4]
   47000:	strb	r4, [r0, #3]
   47004:	add	r0, r0, #4
   47008:	bhi	46fac <flatcc_json_printer_clear@@Base+0x90>
   4700c:	and	r3, r3, #128	; 0x80
   47010:	cmp	lr, #1
   47014:	beq	4706c <flatcc_json_printer_clear@@Base+0x150>
   47018:	cmp	lr, #2
   4701c:	bne	47094 <flatcc_json_printer_clear@@Base+0x178>
   47020:	ldrb	r5, [r1]
   47024:	cmp	r3, #0
   47028:	ldrb	r5, [ip, r5, lsr #2]
   4702c:	strb	r5, [r0]
   47030:	ldrb	r4, [r1, #1]
   47034:	ldrb	r5, [r1]
   47038:	lsr	r4, r4, #4
   4703c:	bfi	r4, r5, #4, #2
   47040:	ldrb	r5, [ip, r4]
   47044:	strb	r5, [r0, #1]
   47048:	ldrb	r1, [r1, #1]
   4704c:	and	r1, r1, #15
   47050:	ldrb	r1, [ip, r1, lsl #2]
   47054:	strb	r1, [r0, #2]
   47058:	movne	r1, #61	; 0x3d
   4705c:	strbne	r1, [r0, #3]
   47060:	b	47094 <flatcc_json_printer_clear@@Base+0x178>
   47064:	mov	r0, lr
   47068:	b	4709c <flatcc_json_printer_clear@@Base+0x180>
   4706c:	ldrb	r5, [r1]
   47070:	cmp	r3, #0
   47074:	ldrb	r5, [ip, r5, lsr #2]
   47078:	strb	r5, [r0]
   4707c:	ldrb	r1, [r1]
   47080:	and	r1, r1, #3
   47084:	ldrb	r1, [ip, r1, lsl #4]
   47088:	strb	r1, [r0, #1]
   4708c:	movwne	r1, #15677	; 0x3d3d
   47090:	strhne	r1, [r0, #2]
   47094:	ldr	lr, [r2]
   47098:	mov	r0, #0
   4709c:	sub	r0, lr, r0
   470a0:	str	r0, [r2]
   470a4:	pop	{r4, r5, fp, lr}
   470a8:	bx	lr
   470ac:	andeq	r7, r0, r8, rrx
   470b0:	strheq	r7, [r0], -sp
   470b4:	eor	r1, r1, #-2147483648	; 0x80000000
   470b8:	b	470c0 <flatcc_json_printer_clear@@Base+0x1a4>
   470bc:	eor	r3, r3, #-2147483648	; 0x80000000
   470c0:	push	{r4, r5, lr}
   470c4:	lsl	r4, r1, #1
   470c8:	lsl	r5, r3, #1
   470cc:	teq	r4, r5
   470d0:	teqeq	r0, r2
   470d4:	orrsne	ip, r4, r0
   470d8:	orrsne	ip, r5, r2
   470dc:	mvnsne	ip, r4, asr #21
   470e0:	mvnsne	ip, r5, asr #21
   470e4:	beq	472d0 <flatcc_json_printer_clear@@Base+0x3b4>
   470e8:	lsr	r4, r4, #21
   470ec:	rsbs	r5, r4, r5, lsr #21
   470f0:	rsblt	r5, r5, #0
   470f4:	ble	47114 <flatcc_json_printer_clear@@Base+0x1f8>
   470f8:	add	r4, r4, r5
   470fc:	eor	r2, r0, r2
   47100:	eor	r3, r1, r3
   47104:	eor	r0, r2, r0
   47108:	eor	r1, r3, r1
   4710c:	eor	r2, r0, r2
   47110:	eor	r3, r1, r3
   47114:	cmp	r5, #54	; 0x36
   47118:	pophi	{r4, r5, pc}
   4711c:	tst	r1, #-2147483648	; 0x80000000
   47120:	lsl	r1, r1, #12
   47124:	mov	ip, #1048576	; 0x100000
   47128:	orr	r1, ip, r1, lsr #12
   4712c:	beq	47138 <flatcc_json_printer_clear@@Base+0x21c>
   47130:	rsbs	r0, r0, #0
   47134:	rsc	r1, r1, #0
   47138:	tst	r3, #-2147483648	; 0x80000000
   4713c:	lsl	r3, r3, #12
   47140:	orr	r3, ip, r3, lsr #12
   47144:	beq	47150 <flatcc_json_printer_clear@@Base+0x234>
   47148:	rsbs	r2, r2, #0
   4714c:	rsc	r3, r3, #0
   47150:	teq	r4, r5
   47154:	beq	472b8 <flatcc_json_printer_clear@@Base+0x39c>
   47158:	sub	r4, r4, #1
   4715c:	rsbs	lr, r5, #32
   47160:	blt	4717c <flatcc_json_printer_clear@@Base+0x260>
   47164:	lsl	ip, r2, lr
   47168:	adds	r0, r0, r2, lsr r5
   4716c:	adc	r1, r1, #0
   47170:	adds	r0, r0, r3, lsl lr
   47174:	adcs	r1, r1, r3, asr r5
   47178:	b	47198 <flatcc_json_printer_clear@@Base+0x27c>
   4717c:	sub	r5, r5, #32
   47180:	add	lr, lr, #32
   47184:	cmp	r2, #1
   47188:	lsl	ip, r3, lr
   4718c:	orrcs	ip, ip, #2
   47190:	adds	r0, r0, r3, asr r5
   47194:	adcs	r1, r1, r3, asr #31
   47198:	and	r5, r1, #-2147483648	; 0x80000000
   4719c:	bpl	471ac <flatcc_json_printer_clear@@Base+0x290>
   471a0:	rsbs	ip, ip, #0
   471a4:	rscs	r0, r0, #0
   471a8:	rsc	r1, r1, #0
   471ac:	cmp	r1, #1048576	; 0x100000
   471b0:	bcc	471f0 <flatcc_json_printer_clear@@Base+0x2d4>
   471b4:	cmp	r1, #2097152	; 0x200000
   471b8:	bcc	471d8 <flatcc_json_printer_clear@@Base+0x2bc>
   471bc:	lsrs	r1, r1, #1
   471c0:	rrxs	r0, r0
   471c4:	rrx	ip, ip
   471c8:	add	r4, r4, #1
   471cc:	lsl	r2, r4, #21
   471d0:	cmn	r2, #4194304	; 0x400000
   471d4:	bcs	47330 <flatcc_json_printer_clear@@Base+0x414>
   471d8:	cmp	ip, #-2147483648	; 0x80000000
   471dc:	lsrseq	ip, r0, #1
   471e0:	adcs	r0, r0, #0
   471e4:	adc	r1, r1, r4, lsl #20
   471e8:	orr	r1, r1, r5
   471ec:	pop	{r4, r5, pc}
   471f0:	lsls	ip, ip, #1
   471f4:	adcs	r0, r0, r0
   471f8:	adc	r1, r1, r1
   471fc:	tst	r1, #1048576	; 0x100000
   47200:	sub	r4, r4, #1
   47204:	bne	471d8 <flatcc_json_printer_clear@@Base+0x2bc>
   47208:	teq	r1, #0
   4720c:	moveq	r1, r0
   47210:	moveq	r0, #0
   47214:	clz	r3, r1
   47218:	addeq	r3, r3, #32
   4721c:	sub	r3, r3, #11
   47220:	subs	r2, r3, #32
   47224:	bge	47248 <flatcc_json_printer_clear@@Base+0x32c>
   47228:	adds	r2, r2, #12
   4722c:	ble	47244 <flatcc_json_printer_clear@@Base+0x328>
   47230:	add	ip, r2, #20
   47234:	rsb	r2, r2, #12
   47238:	lsl	r0, r1, ip
   4723c:	lsr	r1, r1, r2
   47240:	b	47258 <flatcc_json_printer_clear@@Base+0x33c>
   47244:	add	r2, r2, #20
   47248:	rsble	ip, r2, #32
   4724c:	lsl	r1, r1, r2
   47250:	orrle	r1, r1, r0, lsr ip
   47254:	lslle	r0, r0, r2
   47258:	subs	r4, r4, r3
   4725c:	addge	r1, r1, r4, lsl #20
   47260:	orrge	r1, r1, r5
   47264:	popge	{r4, r5, pc}
   47268:	mvn	r4, r4
   4726c:	subs	r4, r4, #31
   47270:	bge	472ac <flatcc_json_printer_clear@@Base+0x390>
   47274:	adds	r4, r4, #12
   47278:	bgt	47294 <flatcc_json_printer_clear@@Base+0x378>
   4727c:	add	r4, r4, #20
   47280:	rsb	r2, r4, #32
   47284:	lsr	r0, r0, r4
   47288:	orr	r0, r0, r1, lsl r2
   4728c:	orr	r1, r5, r1, lsr r4
   47290:	pop	{r4, r5, pc}
   47294:	rsb	r4, r4, #12
   47298:	rsb	r2, r4, #32
   4729c:	lsr	r0, r0, r2
   472a0:	orr	r0, r0, r1, lsl r4
   472a4:	mov	r1, r5
   472a8:	pop	{r4, r5, pc}
   472ac:	lsr	r0, r1, r4
   472b0:	mov	r1, r5
   472b4:	pop	{r4, r5, pc}
   472b8:	teq	r4, #0
   472bc:	eor	r3, r3, #1048576	; 0x100000
   472c0:	eoreq	r1, r1, #1048576	; 0x100000
   472c4:	addeq	r4, r4, #1
   472c8:	subne	r5, r5, #1
   472cc:	b	47158 <flatcc_json_printer_clear@@Base+0x23c>
   472d0:	mvns	ip, r4, asr #21
   472d4:	mvnsne	ip, r5, asr #21
   472d8:	beq	47340 <flatcc_json_printer_clear@@Base+0x424>
   472dc:	teq	r4, r5
   472e0:	teqeq	r0, r2
   472e4:	beq	472f8 <flatcc_json_printer_clear@@Base+0x3dc>
   472e8:	orrs	ip, r4, r0
   472ec:	moveq	r1, r3
   472f0:	moveq	r0, r2
   472f4:	pop	{r4, r5, pc}
   472f8:	teq	r1, r3
   472fc:	movne	r1, #0
   47300:	movne	r0, #0
   47304:	popne	{r4, r5, pc}
   47308:	lsrs	ip, r4, #21
   4730c:	bne	47320 <flatcc_json_printer_clear@@Base+0x404>
   47310:	lsls	r0, r0, #1
   47314:	adcs	r1, r1, r1
   47318:	orrcs	r1, r1, #-2147483648	; 0x80000000
   4731c:	pop	{r4, r5, pc}
   47320:	adds	r4, r4, #4194304	; 0x400000
   47324:	addcc	r1, r1, #1048576	; 0x100000
   47328:	popcc	{r4, r5, pc}
   4732c:	and	r5, r1, #-2147483648	; 0x80000000
   47330:	orr	r1, r5, #2130706432	; 0x7f000000
   47334:	orr	r1, r1, #15728640	; 0xf00000
   47338:	mov	r0, #0
   4733c:	pop	{r4, r5, pc}
   47340:	mvns	ip, r4, asr #21
   47344:	movne	r1, r3
   47348:	movne	r0, r2
   4734c:	mvnseq	ip, r5, asr #21
   47350:	movne	r3, r1
   47354:	movne	r2, r0
   47358:	orrs	r4, r0, r1, lsl #12
   4735c:	orrseq	r5, r2, r3, lsl #12
   47360:	teqeq	r1, r3
   47364:	orrne	r1, r1, #524288	; 0x80000
   47368:	pop	{r4, r5, pc}
   4736c:	teq	r0, #0
   47370:	moveq	r1, #0
   47374:	bxeq	lr
   47378:	push	{r4, r5, lr}
   4737c:	mov	r4, #1024	; 0x400
   47380:	add	r4, r4, #50	; 0x32
   47384:	mov	r5, #0
   47388:	mov	r1, #0
   4738c:	b	47208 <flatcc_json_printer_clear@@Base+0x2ec>
   47390:	teq	r0, #0
   47394:	moveq	r1, #0
   47398:	bxeq	lr
   4739c:	push	{r4, r5, lr}
   473a0:	mov	r4, #1024	; 0x400
   473a4:	add	r4, r4, #50	; 0x32
   473a8:	ands	r5, r0, #-2147483648	; 0x80000000
   473ac:	rsbmi	r0, r0, #0
   473b0:	mov	r1, #0
   473b4:	b	47208 <flatcc_json_printer_clear@@Base+0x2ec>
   473b8:	lsls	r2, r0, #1
   473bc:	asr	r1, r2, #3
   473c0:	rrx	r1, r1
   473c4:	lsl	r0, r2, #28
   473c8:	andsne	r3, r2, #-16777216	; 0xff000000
   473cc:	teqne	r3, #-16777216	; 0xff000000
   473d0:	eorne	r1, r1, #939524096	; 0x38000000
   473d4:	bxne	lr
   473d8:	bics	r2, r2, #-16777216	; 0xff000000
   473dc:	bxeq	lr
   473e0:	teq	r3, #-16777216	; 0xff000000
   473e4:	orreq	r1, r1, #524288	; 0x80000
   473e8:	bxeq	lr
   473ec:	push	{r4, r5, lr}
   473f0:	mov	r4, #896	; 0x380
   473f4:	and	r5, r1, #-2147483648	; 0x80000000
   473f8:	bic	r1, r1, #-2147483648	; 0x80000000
   473fc:	b	47208 <flatcc_json_printer_clear@@Base+0x2ec>
   47400:	orrs	r2, r0, r1
   47404:	bxeq	lr
   47408:	push	{r4, r5, lr}
   4740c:	mov	r5, #0
   47410:	b	47430 <flatcc_json_printer_clear@@Base+0x514>
   47414:	orrs	r2, r0, r1
   47418:	bxeq	lr
   4741c:	push	{r4, r5, lr}
   47420:	ands	r5, r1, #-2147483648	; 0x80000000
   47424:	bpl	47430 <flatcc_json_printer_clear@@Base+0x514>
   47428:	rsbs	r0, r0, #0
   4742c:	rsc	r1, r1, #0
   47430:	mov	r4, #1024	; 0x400
   47434:	add	r4, r4, #50	; 0x32
   47438:	lsrs	ip, r1, #22
   4743c:	beq	471ac <flatcc_json_printer_clear@@Base+0x290>
   47440:	mov	r2, #3
   47444:	lsrs	ip, ip, #3
   47448:	addne	r2, r2, #3
   4744c:	lsrs	ip, ip, #3
   47450:	addne	r2, r2, #3
   47454:	add	r2, r2, ip, lsr #3
   47458:	rsb	r3, r2, #32
   4745c:	lsl	ip, r0, r3
   47460:	lsr	r0, r0, r2
   47464:	orr	r0, r0, r1, lsl r3
   47468:	lsr	r1, r1, r2
   4746c:	add	r4, r4, r2
   47470:	b	471ac <flatcc_json_printer_clear@@Base+0x290>
   47474:	eor	r0, r0, #-2147483648	; 0x80000000
   47478:	b	47480 <flatcc_json_printer_clear@@Base+0x564>
   4747c:	eor	r1, r1, #-2147483648	; 0x80000000
   47480:	lsls	r2, r0, #1
   47484:	lslsne	r3, r1, #1
   47488:	teqne	r2, r3
   4748c:	mvnsne	ip, r2, asr #24
   47490:	mvnsne	ip, r3, asr #24
   47494:	beq	4758c <flatcc_json_printer_clear@@Base+0x670>
   47498:	lsr	r2, r2, #24
   4749c:	rsbs	r3, r2, r3, lsr #24
   474a0:	addgt	r2, r2, r3
   474a4:	eorgt	r1, r0, r1
   474a8:	eorgt	r0, r1, r0
   474ac:	eorgt	r1, r0, r1
   474b0:	rsblt	r3, r3, #0
   474b4:	cmp	r3, #25
   474b8:	bxhi	lr
   474bc:	tst	r0, #-2147483648	; 0x80000000
   474c0:	orr	r0, r0, #8388608	; 0x800000
   474c4:	bic	r0, r0, #-16777216	; 0xff000000
   474c8:	rsbne	r0, r0, #0
   474cc:	tst	r1, #-2147483648	; 0x80000000
   474d0:	orr	r1, r1, #8388608	; 0x800000
   474d4:	bic	r1, r1, #-16777216	; 0xff000000
   474d8:	rsbne	r1, r1, #0
   474dc:	teq	r2, r3
   474e0:	beq	47574 <flatcc_json_printer_clear@@Base+0x658>
   474e4:	sub	r2, r2, #1
   474e8:	adds	r0, r0, r1, asr r3
   474ec:	rsb	r3, r3, #32
   474f0:	lsl	r1, r1, r3
   474f4:	and	r3, r0, #-2147483648	; 0x80000000
   474f8:	bpl	47504 <flatcc_json_printer_clear@@Base+0x5e8>
   474fc:	rsbs	r1, r1, #0
   47500:	rsc	r0, r0, #0
   47504:	cmp	r0, #8388608	; 0x800000
   47508:	bcc	4753c <flatcc_json_printer_clear@@Base+0x620>
   4750c:	cmp	r0, #16777216	; 0x1000000
   47510:	bcc	47528 <flatcc_json_printer_clear@@Base+0x60c>
   47514:	lsrs	r0, r0, #1
   47518:	rrx	r1, r1
   4751c:	add	r2, r2, #1
   47520:	cmp	r2, #254	; 0xfe
   47524:	bcs	475e0 <flatcc_json_printer_clear@@Base+0x6c4>
   47528:	cmp	r1, #-2147483648	; 0x80000000
   4752c:	adc	r0, r0, r2, lsl #23
   47530:	biceq	r0, r0, #1
   47534:	orr	r0, r0, r3
   47538:	bx	lr
   4753c:	lsls	r1, r1, #1
   47540:	adc	r0, r0, r0
   47544:	tst	r0, #8388608	; 0x800000
   47548:	sub	r2, r2, #1
   4754c:	bne	47528 <flatcc_json_printer_clear@@Base+0x60c>
   47550:	clz	ip, r0
   47554:	sub	ip, ip, #8
   47558:	subs	r2, r2, ip
   4755c:	lsl	r0, r0, ip
   47560:	addge	r0, r0, r2, lsl #23
   47564:	rsblt	r2, r2, #0
   47568:	orrge	r0, r0, r3
   4756c:	orrlt	r0, r3, r0, lsr r2
   47570:	bx	lr
   47574:	teq	r2, #0
   47578:	eor	r1, r1, #8388608	; 0x800000
   4757c:	eoreq	r0, r0, #8388608	; 0x800000
   47580:	addeq	r2, r2, #1
   47584:	subne	r3, r3, #1
   47588:	b	474e4 <flatcc_json_printer_clear@@Base+0x5c8>
   4758c:	lsl	r3, r1, #1
   47590:	mvns	ip, r2, asr #24
   47594:	mvnsne	ip, r3, asr #24
   47598:	beq	475ec <flatcc_json_printer_clear@@Base+0x6d0>
   4759c:	teq	r2, r3
   475a0:	beq	475b0 <flatcc_json_printer_clear@@Base+0x694>
   475a4:	teq	r2, #0
   475a8:	moveq	r0, r1
   475ac:	bx	lr
   475b0:	teq	r0, r1
   475b4:	movne	r0, #0
   475b8:	bxne	lr
   475bc:	tst	r2, #-16777216	; 0xff000000
   475c0:	bne	475d0 <flatcc_json_printer_clear@@Base+0x6b4>
   475c4:	lsls	r0, r0, #1
   475c8:	orrcs	r0, r0, #-2147483648	; 0x80000000
   475cc:	bx	lr
   475d0:	adds	r2, r2, #33554432	; 0x2000000
   475d4:	addcc	r0, r0, #8388608	; 0x800000
   475d8:	bxcc	lr
   475dc:	and	r3, r0, #-2147483648	; 0x80000000
   475e0:	orr	r0, r3, #2130706432	; 0x7f000000
   475e4:	orr	r0, r0, #8388608	; 0x800000
   475e8:	bx	lr
   475ec:	mvns	r2, r2, asr #24
   475f0:	movne	r0, r1
   475f4:	mvnseq	r3, r3, asr #24
   475f8:	movne	r1, r0
   475fc:	lsls	r2, r0, #9
   47600:	lslseq	r3, r1, #9
   47604:	teqeq	r0, r1
   47608:	orrne	r0, r0, #4194304	; 0x400000
   4760c:	bx	lr
   47610:	mov	r3, #0
   47614:	b	47620 <flatcc_json_printer_clear@@Base+0x704>
   47618:	ands	r3, r0, #-2147483648	; 0x80000000
   4761c:	rsbmi	r0, r0, #0
   47620:	movs	ip, r0
   47624:	bxeq	lr
   47628:	orr	r3, r3, #1258291200	; 0x4b000000
   4762c:	mov	r1, r0
   47630:	mov	r0, #0
   47634:	b	47678 <flatcc_json_printer_clear@@Base+0x75c>
   47638:	orrs	r2, r0, r1
   4763c:	bxeq	lr
   47640:	mov	r3, #0
   47644:	b	47660 <flatcc_json_printer_clear@@Base+0x744>
   47648:	orrs	r2, r0, r1
   4764c:	bxeq	lr
   47650:	ands	r3, r1, #-2147483648	; 0x80000000
   47654:	bpl	47660 <flatcc_json_printer_clear@@Base+0x744>
   47658:	rsbs	r0, r0, #0
   4765c:	rsc	r1, r1, #0
   47660:	movs	ip, r1
   47664:	moveq	ip, r0
   47668:	moveq	r1, r0
   4766c:	moveq	r0, #0
   47670:	orr	r3, r3, #1526726656	; 0x5b000000
   47674:	subeq	r3, r3, #268435456	; 0x10000000
   47678:	sub	r3, r3, #8388608	; 0x800000
   4767c:	clz	r2, ip
   47680:	subs	r2, r2, #8
   47684:	sub	r3, r3, r2, lsl #23
   47688:	blt	476a8 <flatcc_json_printer_clear@@Base+0x78c>
   4768c:	add	r3, r3, r1, lsl r2
   47690:	lsl	ip, r0, r2
   47694:	rsb	r2, r2, #32
   47698:	cmp	ip, #-2147483648	; 0x80000000
   4769c:	adc	r0, r3, r0, lsr r2
   476a0:	biceq	r0, r0, #1
   476a4:	bx	lr
   476a8:	add	r2, r2, #32
   476ac:	lsl	ip, r1, r2
   476b0:	rsb	r2, r2, #32
   476b4:	orrs	r0, r0, ip, lsl #1
   476b8:	adc	r0, r3, r1, lsr r2
   476bc:	biceq	r0, r0, ip, lsr #31
   476c0:	bx	lr
   476c4:	cmp	r3, #0
   476c8:	cmpeq	r2, #0
   476cc:	bne	476e4 <flatcc_json_printer_clear@@Base+0x7c8>
   476d0:	cmp	r1, #0
   476d4:	cmpeq	r0, #0
   476d8:	mvnne	r1, #0
   476dc:	mvnne	r0, #0
   476e0:	b	47700 <flatcc_json_printer_clear@@Base+0x7e4>
   476e4:	sub	sp, sp, #8
   476e8:	push	{sp, lr}
   476ec:	bl	47710 <flatcc_json_printer_clear@@Base+0x7f4>
   476f0:	ldr	lr, [sp, #4]
   476f4:	add	sp, sp, #8
   476f8:	pop	{r2, r3}
   476fc:	bx	lr
   47700:	push	{r1, lr}
   47704:	mov	r0, #8
   47708:	bl	14e24 <raise@plt>
   4770c:	pop	{r1, pc}
   47710:	cmp	r1, r3
   47714:	cmpeq	r0, r2
   47718:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4771c:	mov	r4, r0
   47720:	movcc	r0, #0
   47724:	mov	r5, r1
   47728:	ldr	lr, [sp, #36]	; 0x24
   4772c:	movcc	r1, r0
   47730:	bcc	4782c <flatcc_json_printer_clear@@Base+0x910>
   47734:	cmp	r3, #0
   47738:	clzeq	ip, r2
   4773c:	clzne	ip, r3
   47740:	addeq	ip, ip, #32
   47744:	cmp	r5, #0
   47748:	clzeq	r1, r4
   4774c:	addeq	r1, r1, #32
   47750:	clzne	r1, r5
   47754:	sub	ip, ip, r1
   47758:	sub	sl, ip, #32
   4775c:	lsl	r9, r3, ip
   47760:	rsb	fp, ip, #32
   47764:	orr	r9, r9, r2, lsl sl
   47768:	orr	r9, r9, r2, lsr fp
   4776c:	lsl	r8, r2, ip
   47770:	cmp	r5, r9
   47774:	cmpeq	r4, r8
   47778:	movcc	r0, #0
   4777c:	movcc	r1, r0
   47780:	bcc	4779c <flatcc_json_printer_clear@@Base+0x880>
   47784:	mov	r0, #1
   47788:	subs	r4, r4, r8
   4778c:	lsl	r1, r0, sl
   47790:	orr	r1, r1, r0, lsr fp
   47794:	lsl	r0, r0, ip
   47798:	sbc	r5, r5, r9
   4779c:	cmp	ip, #0
   477a0:	beq	4782c <flatcc_json_printer_clear@@Base+0x910>
   477a4:	lsr	r6, r8, #1
   477a8:	orr	r6, r6, r9, lsl #31
   477ac:	lsr	r7, r9, #1
   477b0:	mov	r2, ip
   477b4:	b	477d8 <flatcc_json_printer_clear@@Base+0x8bc>
   477b8:	subs	r3, r4, r6
   477bc:	sbc	r8, r5, r7
   477c0:	adds	r3, r3, r3
   477c4:	adc	r8, r8, r8
   477c8:	adds	r4, r3, #1
   477cc:	adc	r5, r8, #0
   477d0:	subs	r2, r2, #1
   477d4:	beq	477f4 <flatcc_json_printer_clear@@Base+0x8d8>
   477d8:	cmp	r5, r7
   477dc:	cmpeq	r4, r6
   477e0:	bcs	477b8 <flatcc_json_printer_clear@@Base+0x89c>
   477e4:	adds	r4, r4, r4
   477e8:	adc	r5, r5, r5
   477ec:	subs	r2, r2, #1
   477f0:	bne	477d8 <flatcc_json_printer_clear@@Base+0x8bc>
   477f4:	lsr	r3, r4, ip
   477f8:	orr	r3, r3, r5, lsl fp
   477fc:	lsr	r2, r5, ip
   47800:	orr	r3, r3, r5, lsr sl
   47804:	adds	r0, r0, r4
   47808:	mov	r4, r3
   4780c:	lsl	r3, r2, ip
   47810:	orr	r3, r3, r4, lsl sl
   47814:	lsl	ip, r4, ip
   47818:	orr	r3, r3, r4, lsr fp
   4781c:	adc	r1, r1, r5
   47820:	subs	r0, r0, ip
   47824:	mov	r5, r2
   47828:	sbc	r1, r1, r3
   4782c:	cmp	lr, #0
   47830:	strdne	r4, [lr]
   47834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00047838 <__libc_csu_init@@Base>:
   47838:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4783c:	mov	r7, r0
   47840:	ldr	r6, [pc, #72]	; 47890 <__libc_csu_init@@Base+0x58>
   47844:	ldr	r5, [pc, #72]	; 47894 <__libc_csu_init@@Base+0x5c>
   47848:	add	r6, pc, r6
   4784c:	add	r5, pc, r5
   47850:	sub	r6, r6, r5
   47854:	mov	r8, r1
   47858:	mov	r9, r2
   4785c:	bl	14e04 <raise@plt-0x20>
   47860:	asrs	r6, r6, #2
   47864:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   47868:	mov	r4, #0
   4786c:	add	r4, r4, #1
   47870:	ldr	r3, [r5], #4
   47874:	mov	r2, r9
   47878:	mov	r1, r8
   4787c:	mov	r0, r7
   47880:	blx	r3
   47884:	cmp	r6, r4
   47888:	bne	4786c <__libc_csu_init@@Base+0x34>
   4788c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   47890:	andeq	r7, r1, ip, lsr r5
   47894:	andeq	r7, r1, r4, lsr r5

00047898 <__libc_csu_fini@@Base>:
   47898:	bx	lr

Disassembly of section .fini:

0004789c <.fini>:
   4789c:	push	{r3, lr}
   478a0:	pop	{r3, pc}
