
../repos/Snaipe-Mimick-1dc4659/test/mmk_test:     file format elf32-littlearm


Disassembly of section .init:

000113b4 <.init>:
   113b4:	push	{r3, lr}
   113b8:	bl	1150c <_start@@Base+0x3c>
   113bc:	pop	{r3, pc}

Disassembly of section .plt:

000113c0 <strstr@plt-0x14>:
   113c0:	push	{lr}		; (str lr, [sp, #-4]!)
   113c4:	ldr	lr, [pc, #4]	; 113d0 <strstr@plt-0x4>
   113c8:	add	lr, pc, lr
   113cc:	ldr	pc, [lr, #8]!
   113d0:	andeq	r3, r1, r0, lsr ip

000113d4 <strstr@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #77824	; 0x13000
   113dc:	ldr	pc, [ip, #3120]!	; 0xc30

000113e0 <strcmp@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #77824	; 0x13000
   113e8:	ldr	pc, [ip, #3112]!	; 0xc28

000113ec <mprotect@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #77824	; 0x13000
   113f4:	ldr	pc, [ip, #3104]!	; 0xc20

000113f8 <free@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #77824	; 0x13000
   11400:	ldr	pc, [ip, #3096]!	; 0xc18

00011404 <memcpy@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #77824	; 0x13000
   1140c:	ldr	pc, [ip, #3088]!	; 0xc10

00011410 <fn_vv@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #77824	; 0x13000
   11418:	ldr	pc, [ip, #3080]!	; 0xc08

0001141c <realloc@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #77824	; 0x13000
   11424:	ldr	pc, [ip, #3072]!	; 0xc00

00011428 <fn_ii@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #77824	; 0x13000
   11430:	ldr	pc, [ip, #3064]!	; 0xbf8

00011434 <fn_ii_va@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #77824	; 0x13000
   1143c:	ldr	pc, [ip, #3056]!	; 0xbf0

00011440 <malloc@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #77824	; 0x13000
   11448:	ldr	pc, [ip, #3048]!	; 0xbe8

0001144c <__libc_start_main@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #77824	; 0x13000
   11454:	ldr	pc, [ip, #3040]!	; 0xbe0

00011458 <__gmon_start__@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #77824	; 0x13000
   11460:	ldr	pc, [ip, #3032]!	; 0xbd8

00011464 <strlen@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #77824	; 0x13000
   1146c:	ldr	pc, [ip, #3024]!	; 0xbd0

00011470 <mmap@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #77824	; 0x13000
   11478:	ldr	pc, [ip, #3016]!	; 0xbc8

0001147c <strchr@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #77824	; 0x13000
   11484:	ldr	pc, [ip, #3008]!	; 0xbc0

00011488 <fprintf@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #77824	; 0x13000
   11490:	ldr	pc, [ip, #3000]!	; 0xbb8

00011494 <__errno_location@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #77824	; 0x13000
   1149c:	ldr	pc, [ip, #2992]!	; 0xbb0

000114a0 <snprintf@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #77824	; 0x13000
   114a8:	ldr	pc, [ip, #2984]!	; 0xba8

000114ac <munmap@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #77824	; 0x13000
   114b4:	ldr	pc, [ip, #2976]!	; 0xba0

000114b8 <strncmp@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #77824	; 0x13000
   114c0:	ldr	pc, [ip, #2968]!	; 0xb98

000114c4 <abort@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #77824	; 0x13000
   114cc:	ldr	pc, [ip, #2960]!	; 0xb90

Disassembly of section .text:

000114d0 <_start@@Base>:
   114d0:	mov	fp, #0
   114d4:	mov	lr, #0
   114d8:	pop	{r1}		; (ldr r1, [sp], #4)
   114dc:	mov	r2, sp
   114e0:	push	{r2}		; (str r2, [sp, #-4]!)
   114e4:	push	{r0}		; (str r0, [sp, #-4]!)
   114e8:	ldr	ip, [pc, #16]	; 11500 <_start@@Base+0x30>
   114ec:	push	{ip}		; (str ip, [sp, #-4]!)
   114f0:	ldr	r0, [pc, #12]	; 11504 <_start@@Base+0x34>
   114f4:	ldr	r3, [pc, #12]	; 11508 <_start@@Base+0x38>
   114f8:	bl	1144c <__libc_start_main@plt>
   114fc:	bl	114c4 <abort@plt>
   11500:	andeq	r4, r1, r8, lsr r8
   11504:	ldrdeq	r1, [r1], -r4
   11508:	ldrdeq	r4, [r1], -r8
   1150c:	ldr	r3, [pc, #20]	; 11528 <_start@@Base+0x58>
   11510:	ldr	r2, [pc, #20]	; 1152c <_start@@Base+0x5c>
   11514:	add	r3, pc, r3
   11518:	ldr	r2, [r3, r2]
   1151c:	cmp	r2, #0
   11520:	bxeq	lr
   11524:	b	11458 <__gmon_start__@plt>
   11528:	andeq	r3, r1, r4, ror #21
   1152c:	andeq	r0, r0, r0, rrx
   11530:	ldr	r0, [pc, #24]	; 11550 <_start@@Base+0x80>
   11534:	ldr	r3, [pc, #24]	; 11554 <_start@@Base+0x84>
   11538:	cmp	r3, r0
   1153c:	bxeq	lr
   11540:	ldr	r3, [pc, #16]	; 11558 <_start@@Base+0x88>
   11544:	cmp	r3, #0
   11548:	bxeq	lr
   1154c:	bx	r3
   11550:	andeq	r5, r2, r0, ror r0
   11554:	andeq	r5, r2, r0, ror r0
   11558:	andeq	r0, r0, r0
   1155c:	ldr	r0, [pc, #36]	; 11588 <_start@@Base+0xb8>
   11560:	ldr	r1, [pc, #36]	; 1158c <_start@@Base+0xbc>
   11564:	sub	r1, r1, r0
   11568:	asr	r1, r1, #2
   1156c:	add	r1, r1, r1, lsr #31
   11570:	asrs	r1, r1, #1
   11574:	bxeq	lr
   11578:	ldr	r3, [pc, #16]	; 11590 <_start@@Base+0xc0>
   1157c:	cmp	r3, #0
   11580:	bxeq	lr
   11584:	bx	r3
   11588:	andeq	r5, r2, r0, ror r0
   1158c:	andeq	r5, r2, r0, ror r0
   11590:	andeq	r0, r0, r0
   11594:	push	{r4, lr}
   11598:	ldr	r4, [pc, #24]	; 115b8 <_start@@Base+0xe8>
   1159c:	ldrb	r3, [r4]
   115a0:	cmp	r3, #0
   115a4:	popne	{r4, pc}
   115a8:	bl	11530 <_start@@Base+0x60>
   115ac:	mov	r3, #1
   115b0:	strb	r3, [r4]
   115b4:	pop	{r4, pc}
   115b8:	andeq	r5, r2, r8, lsl #1
   115bc:	b	1155c <_start@@Base+0x8c>

000115c0 <set_valid@@Base>:
   115c0:	movw	r0, #20620	; 0x508c
   115c4:	movt	r0, #2
   115c8:	movw	r1, #1
   115cc:	str	r1, [r0]
   115d0:	bx	lr

000115d4 <main@@Base>:
   115d4:	push	{r4, r5, fp, lr}
   115d8:	add	fp, sp, #8
   115dc:	sub	sp, sp, #592	; 0x250
   115e0:	movw	r0, #0
   115e4:	str	r0, [fp, #-12]
   115e8:	movw	r0, #18516	; 0x4854
   115ec:	movt	r0, #1
   115f0:	bl	120bc <main@@Base+0xae8>
   115f4:	movw	lr, #0
   115f8:	str	r0, [sp, #124]	; 0x7c
   115fc:	mov	r0, lr
   11600:	bl	13510 <mmk_matcher_init@@Base>
   11604:	sub	r0, fp, #32
   11608:	mov	lr, r0
   1160c:	vmov.i32	q8, #0	; 0x00000000
   11610:	vst1.32	{d16-d17}, [lr]!
   11614:	mov	r1, #0
   11618:	str	r1, [lr]
   1161c:	movw	r1, #5568	; 0x15c0
   11620:	movt	r1, #1
   11624:	str	r1, [fp, #-20]	; 0xffffffec
   11628:	bl	14714 <mmk_when_init@@Base>
   1162c:	bl	11410 <fn_vv@plt>
   11630:	bl	1354c <mmk_matcher_term@@Base>
   11634:	movw	r0, #1
   11638:	bl	13510 <mmk_matcher_init@@Base>
   1163c:	bl	11410 <fn_vv@plt>
   11640:	bl	1354c <mmk_matcher_term@@Base>
   11644:	movw	r0, #1
   11648:	str	r0, [fp, #-56]	; 0xffffffc8
   1164c:	str	r0, [fp, #-52]	; 0xffffffcc
   11650:	movw	r0, #0
   11654:	str	r0, [fp, #-48]	; 0xffffffd0
   11658:	str	r0, [fp, #-44]	; 0xffffffd4
   1165c:	str	r0, [fp, #-40]	; 0xffffffd8
   11660:	str	r0, [fp, #-36]	; 0xffffffdc
   11664:	sub	r0, fp, #56	; 0x38
   11668:	bl	14158 <mmk_verify_times@@Base>
   1166c:	cmp	r0, #0
   11670:	bne	116ac <main@@Base+0xd8>
   11674:	movw	r0, #20592	; 0x5070
   11678:	movt	r0, #2
   1167c:	ldr	r0, [r0]
   11680:	movw	r1, #18522	; 0x485a
   11684:	movt	r1, #1
   11688:	movw	r2, #18551	; 0x4877
   1168c:	movt	r2, #1
   11690:	movw	r3, #42	; 0x2a
   11694:	movw	ip, #18768	; 0x4950
   11698:	movt	ip, #1
   1169c:	str	ip, [sp]
   116a0:	bl	11488 <fprintf@plt>
   116a4:	str	r0, [sp, #120]	; 0x78
   116a8:	bl	114c4 <abort@plt>
   116ac:	b	116b0 <main@@Base+0xdc>
   116b0:	b	116b4 <main@@Base+0xe0>
   116b4:	movw	r0, #1
   116b8:	bl	13510 <mmk_matcher_init@@Base>
   116bc:	bl	11410 <fn_vv@plt>
   116c0:	bl	1354c <mmk_matcher_term@@Base>
   116c4:	movw	r0, #1
   116c8:	str	r0, [fp, #-80]	; 0xffffffb0
   116cc:	movw	lr, #0
   116d0:	str	lr, [fp, #-76]	; 0xffffffb4
   116d4:	str	lr, [fp, #-72]	; 0xffffffb8
   116d8:	str	r0, [fp, #-68]	; 0xffffffbc
   116dc:	str	lr, [fp, #-64]	; 0xffffffc0
   116e0:	str	lr, [fp, #-60]	; 0xffffffc4
   116e4:	sub	r0, fp, #80	; 0x50
   116e8:	bl	14158 <mmk_verify_times@@Base>
   116ec:	cmp	r0, #0
   116f0:	bne	1172c <main@@Base+0x158>
   116f4:	movw	r0, #20592	; 0x5070
   116f8:	movt	r0, #2
   116fc:	ldr	r0, [r0]
   11700:	movw	r1, #18522	; 0x485a
   11704:	movt	r1, #1
   11708:	movw	r2, #18551	; 0x4877
   1170c:	movt	r2, #1
   11710:	movw	r3, #43	; 0x2b
   11714:	movw	ip, #18608	; 0x48b0
   11718:	movt	ip, #1
   1171c:	str	ip, [sp]
   11720:	bl	11488 <fprintf@plt>
   11724:	str	r0, [sp, #116]	; 0x74
   11728:	bl	114c4 <abort@plt>
   1172c:	b	11730 <main@@Base+0x15c>
   11730:	b	11734 <main@@Base+0x160>
   11734:	movw	r0, #1
   11738:	bl	13510 <mmk_matcher_init@@Base>
   1173c:	bl	11410 <fn_vv@plt>
   11740:	bl	1354c <mmk_matcher_term@@Base>
   11744:	movw	r0, #1
   11748:	str	r0, [fp, #-104]	; 0xffffff98
   1174c:	movw	lr, #0
   11750:	str	lr, [fp, #-100]	; 0xffffff9c
   11754:	str	lr, [fp, #-96]	; 0xffffffa0
   11758:	str	lr, [fp, #-92]	; 0xffffffa4
   1175c:	str	r0, [fp, #-88]	; 0xffffffa8
   11760:	str	lr, [fp, #-84]	; 0xffffffac
   11764:	sub	r0, fp, #104	; 0x68
   11768:	bl	14158 <mmk_verify_times@@Base>
   1176c:	cmp	r0, #0
   11770:	beq	117ac <main@@Base+0x1d8>
   11774:	movw	r0, #20592	; 0x5070
   11778:	movt	r0, #2
   1177c:	ldr	r0, [r0]
   11780:	movw	r1, #18522	; 0x485a
   11784:	movt	r1, #1
   11788:	movw	r2, #18551	; 0x4877
   1178c:	movt	r2, #1
   11790:	movw	r3, #45	; 0x2d
   11794:	movw	ip, #18642	; 0x48d2
   11798:	movt	ip, #1
   1179c:	str	ip, [sp]
   117a0:	bl	11488 <fprintf@plt>
   117a4:	str	r0, [sp, #112]	; 0x70
   117a8:	bl	114c4 <abort@plt>
   117ac:	b	117b0 <main@@Base+0x1dc>
   117b0:	b	117b4 <main@@Base+0x1e0>
   117b4:	movw	r0, #1
   117b8:	bl	13510 <mmk_matcher_init@@Base>
   117bc:	bl	11410 <fn_vv@plt>
   117c0:	bl	1354c <mmk_matcher_term@@Base>
   117c4:	movw	r0, #1
   117c8:	str	r0, [fp, #-128]	; 0xffffff80
   117cc:	movw	lr, #0
   117d0:	str	lr, [fp, #-124]	; 0xffffff84
   117d4:	str	r0, [fp, #-120]	; 0xffffff88
   117d8:	str	lr, [fp, #-116]	; 0xffffff8c
   117dc:	str	lr, [fp, #-112]	; 0xffffff90
   117e0:	str	lr, [fp, #-108]	; 0xffffff94
   117e4:	sub	r0, fp, #128	; 0x80
   117e8:	bl	14158 <mmk_verify_times@@Base>
   117ec:	cmp	r0, #0
   117f0:	beq	1182c <main@@Base+0x258>
   117f4:	movw	r0, #20592	; 0x5070
   117f8:	movt	r0, #2
   117fc:	ldr	r0, [r0]
   11800:	movw	r1, #18522	; 0x485a
   11804:	movt	r1, #1
   11808:	movw	r2, #18551	; 0x4877
   1180c:	movt	r2, #1
   11810:	movw	r3, #46	; 0x2e
   11814:	movw	ip, #18675	; 0x48f3
   11818:	movt	ip, #1
   1181c:	str	ip, [sp]
   11820:	bl	11488 <fprintf@plt>
   11824:	str	r0, [sp, #108]	; 0x6c
   11828:	bl	114c4 <abort@plt>
   1182c:	b	11830 <main@@Base+0x25c>
   11830:	b	11834 <main@@Base+0x260>
   11834:	movw	r0, #1
   11838:	bl	13510 <mmk_matcher_init@@Base>
   1183c:	bl	11410 <fn_vv@plt>
   11840:	bl	1354c <mmk_matcher_term@@Base>
   11844:	movw	r0, #1
   11848:	str	r0, [fp, #-152]	; 0xffffff68
   1184c:	movw	lr, #0
   11850:	str	lr, [fp, #-148]	; 0xffffff6c
   11854:	str	r0, [fp, #-144]	; 0xffffff70
   11858:	str	r0, [fp, #-140]	; 0xffffff74
   1185c:	str	lr, [fp, #-136]	; 0xffffff78
   11860:	str	lr, [fp, #-132]	; 0xffffff7c
   11864:	sub	r0, fp, #152	; 0x98
   11868:	bl	14158 <mmk_verify_times@@Base>
   1186c:	cmp	r0, #0
   11870:	beq	118ac <main@@Base+0x2d8>
   11874:	movw	r0, #20592	; 0x5070
   11878:	movt	r0, #2
   1187c:	ldr	r0, [r0]
   11880:	movw	r1, #18522	; 0x485a
   11884:	movt	r1, #1
   11888:	movw	r2, #18551	; 0x4877
   1188c:	movt	r2, #1
   11890:	movw	r3, #47	; 0x2f
   11894:	movw	ip, #18711	; 0x4917
   11898:	movt	ip, #1
   1189c:	str	ip, [sp]
   118a0:	bl	11488 <fprintf@plt>
   118a4:	str	r0, [sp, #104]	; 0x68
   118a8:	bl	114c4 <abort@plt>
   118ac:	b	118b0 <main@@Base+0x2dc>
   118b0:	bl	11410 <fn_vv@plt>
   118b4:	movw	r0, #20620	; 0x508c
   118b8:	movt	r0, #2
   118bc:	ldr	r0, [r0]
   118c0:	cmp	r0, #0
   118c4:	bne	11900 <main@@Base+0x32c>
   118c8:	movw	r0, #20592	; 0x5070
   118cc:	movt	r0, #2
   118d0:	ldr	r0, [r0]
   118d4:	movw	r1, #18522	; 0x485a
   118d8:	movt	r1, #1
   118dc:	movw	r2, #18551	; 0x4877
   118e0:	movt	r2, #1
   118e4:	movw	r3, #50	; 0x32
   118e8:	movw	ip, #18761	; 0x4949
   118ec:	movt	ip, #1
   118f0:	str	ip, [sp]
   118f4:	bl	11488 <fprintf@plt>
   118f8:	str	r0, [sp, #100]	; 0x64
   118fc:	bl	114c4 <abort@plt>
   11900:	b	11904 <main@@Base+0x330>
   11904:	b	11908 <main@@Base+0x334>
   11908:	movw	r0, #1
   1190c:	bl	13510 <mmk_matcher_init@@Base>
   11910:	bl	11410 <fn_vv@plt>
   11914:	bl	1354c <mmk_matcher_term@@Base>
   11918:	movw	r0, #1
   1191c:	str	r0, [fp, #-176]	; 0xffffff50
   11920:	movw	lr, #0
   11924:	str	lr, [fp, #-172]	; 0xffffff54
   11928:	str	lr, [fp, #-168]	; 0xffffff58
   1192c:	str	lr, [fp, #-164]	; 0xffffff5c
   11930:	str	r0, [fp, #-160]	; 0xffffff60
   11934:	str	lr, [fp, #-156]	; 0xffffff64
   11938:	sub	r0, fp, #176	; 0xb0
   1193c:	bl	14158 <mmk_verify_times@@Base>
   11940:	cmp	r0, #0
   11944:	bne	11980 <main@@Base+0x3ac>
   11948:	movw	r0, #20592	; 0x5070
   1194c:	movt	r0, #2
   11950:	ldr	r0, [r0]
   11954:	movw	r1, #18522	; 0x485a
   11958:	movt	r1, #1
   1195c:	movw	r2, #18551	; 0x4877
   11960:	movt	r2, #1
   11964:	movw	r3, #51	; 0x33
   11968:	movw	ip, #18643	; 0x48d3
   1196c:	movt	ip, #1
   11970:	str	ip, [sp]
   11974:	bl	11488 <fprintf@plt>
   11978:	str	r0, [sp, #96]	; 0x60
   1197c:	bl	114c4 <abort@plt>
   11980:	b	11984 <main@@Base+0x3b0>
   11984:	b	11988 <main@@Base+0x3b4>
   11988:	movw	r0, #1
   1198c:	bl	13510 <mmk_matcher_init@@Base>
   11990:	bl	11410 <fn_vv@plt>
   11994:	bl	1354c <mmk_matcher_term@@Base>
   11998:	movw	r0, #1
   1199c:	str	r0, [fp, #-200]	; 0xffffff38
   119a0:	movw	lr, #0
   119a4:	str	lr, [fp, #-196]	; 0xffffff3c
   119a8:	str	r0, [fp, #-192]	; 0xffffff40
   119ac:	str	lr, [fp, #-188]	; 0xffffff44
   119b0:	str	lr, [fp, #-184]	; 0xffffff48
   119b4:	str	lr, [fp, #-180]	; 0xffffff4c
   119b8:	sub	r0, fp, #200	; 0xc8
   119bc:	bl	14158 <mmk_verify_times@@Base>
   119c0:	cmp	r0, #0
   119c4:	bne	11a00 <main@@Base+0x42c>
   119c8:	movw	r0, #20592	; 0x5070
   119cc:	movt	r0, #2
   119d0:	ldr	r0, [r0]
   119d4:	movw	r1, #18522	; 0x485a
   119d8:	movt	r1, #1
   119dc:	movw	r2, #18551	; 0x4877
   119e0:	movt	r2, #1
   119e4:	movw	r3, #52	; 0x34
   119e8:	movw	ip, #18676	; 0x48f4
   119ec:	movt	ip, #1
   119f0:	str	ip, [sp]
   119f4:	bl	11488 <fprintf@plt>
   119f8:	str	r0, [sp, #92]	; 0x5c
   119fc:	bl	114c4 <abort@plt>
   11a00:	b	11a04 <main@@Base+0x430>
   11a04:	b	11a08 <main@@Base+0x434>
   11a08:	movw	r0, #1
   11a0c:	bl	13510 <mmk_matcher_init@@Base>
   11a10:	bl	11410 <fn_vv@plt>
   11a14:	bl	1354c <mmk_matcher_term@@Base>
   11a18:	movw	r0, #1
   11a1c:	str	r0, [fp, #-224]	; 0xffffff20
   11a20:	movw	lr, #0
   11a24:	str	lr, [fp, #-220]	; 0xffffff24
   11a28:	str	lr, [fp, #-216]	; 0xffffff28
   11a2c:	str	r0, [fp, #-212]	; 0xffffff2c
   11a30:	str	lr, [fp, #-208]	; 0xffffff30
   11a34:	str	lr, [fp, #-204]	; 0xffffff34
   11a38:	sub	r0, fp, #224	; 0xe0
   11a3c:	bl	14158 <mmk_verify_times@@Base>
   11a40:	cmp	r0, #0
   11a44:	bne	11a80 <main@@Base+0x4ac>
   11a48:	movw	r0, #20592	; 0x5070
   11a4c:	movt	r0, #2
   11a50:	ldr	r0, [r0]
   11a54:	movw	r1, #18522	; 0x485a
   11a58:	movt	r1, #1
   11a5c:	movw	r2, #18551	; 0x4877
   11a60:	movt	r2, #1
   11a64:	movw	r3, #53	; 0x35
   11a68:	movw	ip, #18608	; 0x48b0
   11a6c:	movt	ip, #1
   11a70:	str	ip, [sp]
   11a74:	bl	11488 <fprintf@plt>
   11a78:	str	r0, [sp, #88]	; 0x58
   11a7c:	bl	114c4 <abort@plt>
   11a80:	b	11a84 <main@@Base+0x4b0>
   11a84:	b	11a88 <main@@Base+0x4b4>
   11a88:	movw	r0, #1
   11a8c:	bl	13510 <mmk_matcher_init@@Base>
   11a90:	bl	11410 <fn_vv@plt>
   11a94:	bl	1354c <mmk_matcher_term@@Base>
   11a98:	movw	r0, #1
   11a9c:	str	r0, [fp, #-248]	; 0xffffff08
   11aa0:	movw	lr, #0
   11aa4:	str	lr, [fp, #-244]	; 0xffffff0c
   11aa8:	str	r0, [fp, #-240]	; 0xffffff10
   11aac:	str	r0, [fp, #-236]	; 0xffffff14
   11ab0:	str	lr, [fp, #-232]	; 0xffffff18
   11ab4:	str	lr, [fp, #-228]	; 0xffffff1c
   11ab8:	sub	r0, fp, #248	; 0xf8
   11abc:	bl	14158 <mmk_verify_times@@Base>
   11ac0:	cmp	r0, #0
   11ac4:	bne	11b00 <main@@Base+0x52c>
   11ac8:	movw	r0, #20592	; 0x5070
   11acc:	movt	r0, #2
   11ad0:	ldr	r0, [r0]
   11ad4:	movw	r1, #18522	; 0x485a
   11ad8:	movt	r1, #1
   11adc:	movw	r2, #18551	; 0x4877
   11ae0:	movt	r2, #1
   11ae4:	movw	r3, #54	; 0x36
   11ae8:	movw	ip, #18712	; 0x4918
   11aec:	movt	ip, #1
   11af0:	str	ip, [sp]
   11af4:	bl	11488 <fprintf@plt>
   11af8:	str	r0, [sp, #84]	; 0x54
   11afc:	bl	114c4 <abort@plt>
   11b00:	b	11b04 <main@@Base+0x530>
   11b04:	b	11b08 <main@@Base+0x534>
   11b08:	movw	r0, #1
   11b0c:	bl	13510 <mmk_matcher_init@@Base>
   11b10:	bl	11410 <fn_vv@plt>
   11b14:	bl	1354c <mmk_matcher_term@@Base>
   11b18:	movw	r0, #1
   11b1c:	str	r0, [fp, #-272]	; 0xfffffef0
   11b20:	str	r0, [fp, #-268]	; 0xfffffef4
   11b24:	movw	r0, #0
   11b28:	str	r0, [fp, #-264]	; 0xfffffef8
   11b2c:	str	r0, [fp, #-260]	; 0xfffffefc
   11b30:	str	r0, [fp, #-256]	; 0xffffff00
   11b34:	str	r0, [fp, #-252]	; 0xffffff04
   11b38:	sub	r0, fp, #272	; 0x110
   11b3c:	bl	14158 <mmk_verify_times@@Base>
   11b40:	cmp	r0, #0
   11b44:	beq	11b80 <main@@Base+0x5ac>
   11b48:	movw	r0, #20592	; 0x5070
   11b4c:	movt	r0, #2
   11b50:	ldr	r0, [r0]
   11b54:	movw	r1, #18522	; 0x485a
   11b58:	movt	r1, #1
   11b5c:	movw	r2, #18551	; 0x4877
   11b60:	movt	r2, #1
   11b64:	movw	r3, #55	; 0x37
   11b68:	movw	ip, #18767	; 0x494f
   11b6c:	movt	ip, #1
   11b70:	str	ip, [sp]
   11b74:	bl	11488 <fprintf@plt>
   11b78:	str	r0, [sp, #80]	; 0x50
   11b7c:	bl	114c4 <abort@plt>
   11b80:	b	11b84 <main@@Base+0x5b0>
   11b84:	b	11b88 <main@@Base+0x5b4>
   11b88:	movw	r0, #1
   11b8c:	bl	13510 <mmk_matcher_init@@Base>
   11b90:	bl	11410 <fn_vv@plt>
   11b94:	bl	1354c <mmk_matcher_term@@Base>
   11b98:	movw	r0, #1
   11b9c:	str	r0, [fp, #-296]	; 0xfffffed8
   11ba0:	movw	r0, #0
   11ba4:	str	r0, [fp, #-292]	; 0xfffffedc
   11ba8:	str	r0, [fp, #-288]	; 0xfffffee0
   11bac:	str	r0, [fp, #-284]	; 0xfffffee4
   11bb0:	movw	lr, #2
   11bb4:	str	lr, [fp, #-280]	; 0xfffffee8
   11bb8:	str	r0, [fp, #-276]	; 0xfffffeec
   11bbc:	sub	r0, fp, #296	; 0x128
   11bc0:	bl	14158 <mmk_verify_times@@Base>
   11bc4:	cmp	r0, #0
   11bc8:	beq	11c04 <main@@Base+0x630>
   11bcc:	movw	r0, #20592	; 0x5070
   11bd0:	movt	r0, #2
   11bd4:	ldr	r0, [r0]
   11bd8:	movw	r1, #18522	; 0x485a
   11bdc:	movt	r1, #1
   11be0:	movw	r2, #18551	; 0x4877
   11be4:	movt	r2, #1
   11be8:	movw	r3, #56	; 0x38
   11bec:	movw	ip, #18800	; 0x4970
   11bf0:	movt	ip, #1
   11bf4:	str	ip, [sp]
   11bf8:	bl	11488 <fprintf@plt>
   11bfc:	str	r0, [sp, #76]	; 0x4c
   11c00:	bl	114c4 <abort@plt>
   11c04:	b	11c08 <main@@Base+0x634>
   11c08:	b	11c0c <main@@Base+0x638>
   11c0c:	movw	r0, #1
   11c10:	bl	13510 <mmk_matcher_init@@Base>
   11c14:	bl	11410 <fn_vv@plt>
   11c18:	bl	1354c <mmk_matcher_term@@Base>
   11c1c:	movw	r0, #1
   11c20:	str	r0, [sp, #280]	; 0x118
   11c24:	movw	r0, #0
   11c28:	str	r0, [sp, #284]	; 0x11c
   11c2c:	movw	lr, #2
   11c30:	str	lr, [sp, #288]	; 0x120
   11c34:	str	r0, [sp, #292]	; 0x124
   11c38:	str	r0, [sp, #296]	; 0x128
   11c3c:	str	r0, [sp, #300]	; 0x12c
   11c40:	add	r0, sp, #280	; 0x118
   11c44:	bl	14158 <mmk_verify_times@@Base>
   11c48:	cmp	r0, #0
   11c4c:	beq	11c88 <main@@Base+0x6b4>
   11c50:	movw	r0, #20592	; 0x5070
   11c54:	movt	r0, #2
   11c58:	ldr	r0, [r0]
   11c5c:	movw	r1, #18522	; 0x485a
   11c60:	movt	r1, #1
   11c64:	movw	r2, #18551	; 0x4877
   11c68:	movt	r2, #1
   11c6c:	movw	r3, #57	; 0x39
   11c70:	movw	ip, #18833	; 0x4991
   11c74:	movt	ip, #1
   11c78:	str	ip, [sp]
   11c7c:	bl	11488 <fprintf@plt>
   11c80:	str	r0, [sp, #72]	; 0x48
   11c84:	bl	114c4 <abort@plt>
   11c88:	b	11c8c <main@@Base+0x6b8>
   11c8c:	movw	r0, #5136	; 0x1410
   11c90:	movt	r0, #1
   11c94:	bl	134f0 <mmk_reset@@Base>
   11c98:	ldr	r0, [pc, #1048]	; 120b8 <main@@Base+0xae4>
   11c9c:	str	r0, [sp, #276]	; 0x114
   11ca0:	movw	r0, #18869	; 0x49b5
   11ca4:	movt	r0, #1
   11ca8:	bl	120e4 <main@@Base+0xb10>
   11cac:	movw	lr, #0
   11cb0:	str	r0, [sp, #68]	; 0x44
   11cb4:	mov	r0, lr
   11cb8:	bl	13510 <mmk_matcher_init@@Base>
   11cbc:	movw	r0, #0
   11cc0:	str	r0, [sp, #256]	; 0x100
   11cc4:	ldr	lr, [sp, #276]	; 0x114
   11cc8:	str	lr, [sp, #260]	; 0x104
   11ccc:	movw	lr, #1
   11cd0:	str	lr, [sp, #252]	; 0xfc
   11cd4:	add	lr, sp, #252	; 0xfc
   11cd8:	str	lr, [sp, #264]	; 0x108
   11cdc:	str	r0, [sp, #268]	; 0x10c
   11ce0:	str	r0, [sp, #272]	; 0x110
   11ce4:	add	r0, sp, #256	; 0x100
   11ce8:	bl	14714 <mmk_when_init@@Base>
   11cec:	movw	r0, #1
   11cf0:	bl	11428 <fn_ii@plt>
   11cf4:	str	r0, [sp, #64]	; 0x40
   11cf8:	bl	1354c <mmk_matcher_term@@Base>
   11cfc:	movw	r0, #1
   11d00:	bl	11428 <fn_ii@plt>
   11d04:	cmp	r0, #1
   11d08:	bne	11d20 <main@@Base+0x74c>
   11d0c:	bl	11494 <__errno_location@plt>
   11d10:	ldr	r0, [r0]
   11d14:	ldr	lr, [sp, #276]	; 0x114
   11d18:	cmp	r0, lr
   11d1c:	beq	11d58 <main@@Base+0x784>
   11d20:	movw	r0, #20592	; 0x5070
   11d24:	movt	r0, #2
   11d28:	ldr	r0, [r0]
   11d2c:	movw	r1, #18522	; 0x485a
   11d30:	movt	r1, #1
   11d34:	movw	r2, #18551	; 0x4877
   11d38:	movt	r2, #1
   11d3c:	movw	r3, #64	; 0x40
   11d40:	movw	ip, #18875	; 0x49bb
   11d44:	movt	ip, #1
   11d48:	str	ip, [sp]
   11d4c:	bl	11488 <fprintf@plt>
   11d50:	str	r0, [sp, #60]	; 0x3c
   11d54:	bl	114c4 <abort@plt>
   11d58:	b	11d5c <main@@Base+0x788>
   11d5c:	b	11d60 <main@@Base+0x78c>
   11d60:	movw	r0, #42	; 0x2a
   11d64:	bl	11428 <fn_ii@plt>
   11d68:	cmp	r0, #0
   11d6c:	beq	11da8 <main@@Base+0x7d4>
   11d70:	movw	r0, #20592	; 0x5070
   11d74:	movt	r0, #2
   11d78:	ldr	r0, [r0]
   11d7c:	movw	r1, #18522	; 0x485a
   11d80:	movt	r1, #1
   11d84:	movw	r2, #18551	; 0x4877
   11d88:	movt	r2, #1
   11d8c:	movw	r3, #65	; 0x41
   11d90:	movw	ip, #18905	; 0x49d9
   11d94:	movt	ip, #1
   11d98:	str	ip, [sp]
   11d9c:	bl	11488 <fprintf@plt>
   11da0:	str	r0, [sp, #56]	; 0x38
   11da4:	bl	114c4 <abort@plt>
   11da8:	b	11dac <main@@Base+0x7d8>
   11dac:	b	11db0 <main@@Base+0x7dc>
   11db0:	movw	r0, #1
   11db4:	bl	13510 <mmk_matcher_init@@Base>
   11db8:	movw	r0, #0
   11dbc:	str	r0, [sp, #52]	; 0x34
   11dc0:	ldr	r1, [sp, #52]	; 0x34
   11dc4:	bl	13588 <mmk_matcher_add@@Base>
   11dc8:	movw	r0, #0
   11dcc:	str	r0, [sp, #248]	; 0xf8
   11dd0:	ldr	r0, [sp, #248]	; 0xf8
   11dd4:	bl	11428 <fn_ii@plt>
   11dd8:	str	r0, [sp, #48]	; 0x30
   11ddc:	bl	1354c <mmk_matcher_term@@Base>
   11de0:	movw	r0, #1
   11de4:	str	r0, [sp, #224]	; 0xe0
   11de8:	movw	r0, #0
   11dec:	str	r0, [sp, #228]	; 0xe4
   11df0:	str	r0, [sp, #232]	; 0xe8
   11df4:	str	r0, [sp, #236]	; 0xec
   11df8:	movw	r1, #2
   11dfc:	str	r1, [sp, #240]	; 0xf0
   11e00:	str	r0, [sp, #244]	; 0xf4
   11e04:	add	r0, sp, #224	; 0xe0
   11e08:	bl	14158 <mmk_verify_times@@Base>
   11e0c:	cmp	r0, #0
   11e10:	bne	11e4c <main@@Base+0x878>
   11e14:	movw	r0, #20592	; 0x5070
   11e18:	movt	r0, #2
   11e1c:	ldr	r0, [r0]
   11e20:	movw	r1, #18522	; 0x485a
   11e24:	movt	r1, #1
   11e28:	movw	r2, #18551	; 0x4877
   11e2c:	movt	r2, #1
   11e30:	movw	r3, #67	; 0x43
   11e34:	movw	ip, #18920	; 0x49e8
   11e38:	movt	ip, #1
   11e3c:	str	ip, [sp]
   11e40:	bl	11488 <fprintf@plt>
   11e44:	str	r0, [sp, #44]	; 0x2c
   11e48:	bl	114c4 <abort@plt>
   11e4c:	b	11e50 <main@@Base+0x87c>
   11e50:	b	11e54 <main@@Base+0x880>
   11e54:	movw	r0, #1
   11e58:	bl	13510 <mmk_matcher_init@@Base>
   11e5c:	movw	r0, #1
   11e60:	bl	11428 <fn_ii@plt>
   11e64:	str	r0, [sp, #40]	; 0x28
   11e68:	bl	1354c <mmk_matcher_term@@Base>
   11e6c:	movw	r0, #1
   11e70:	str	r0, [sp, #200]	; 0xc8
   11e74:	movw	lr, #0
   11e78:	str	lr, [sp, #204]	; 0xcc
   11e7c:	str	lr, [sp, #208]	; 0xd0
   11e80:	str	lr, [sp, #212]	; 0xd4
   11e84:	str	r0, [sp, #216]	; 0xd8
   11e88:	str	lr, [sp, #220]	; 0xdc
   11e8c:	add	r0, sp, #200	; 0xc8
   11e90:	bl	14158 <mmk_verify_times@@Base>
   11e94:	cmp	r0, #0
   11e98:	bne	11ed4 <main@@Base+0x900>
   11e9c:	movw	r0, #20592	; 0x5070
   11ea0:	movt	r0, #2
   11ea4:	ldr	r0, [r0]
   11ea8:	movw	r1, #18522	; 0x485a
   11eac:	movt	r1, #1
   11eb0:	movw	r2, #18551	; 0x4877
   11eb4:	movt	r2, #1
   11eb8:	movw	r3, #68	; 0x44
   11ebc:	movw	ip, #18964	; 0x4a14
   11ec0:	movt	ip, #1
   11ec4:	str	ip, [sp]
   11ec8:	bl	11488 <fprintf@plt>
   11ecc:	str	r0, [sp, #36]	; 0x24
   11ed0:	bl	114c4 <abort@plt>
   11ed4:	b	11ed8 <main@@Base+0x904>
   11ed8:	b	11edc <main@@Base+0x908>
   11edc:	movw	r0, #1
   11ee0:	bl	13510 <mmk_matcher_init@@Base>
   11ee4:	movw	r0, #42	; 0x2a
   11ee8:	bl	11428 <fn_ii@plt>
   11eec:	str	r0, [sp, #32]
   11ef0:	bl	1354c <mmk_matcher_term@@Base>
   11ef4:	movw	r0, #1
   11ef8:	str	r0, [sp, #176]	; 0xb0
   11efc:	movw	lr, #0
   11f00:	str	lr, [sp, #180]	; 0xb4
   11f04:	str	lr, [sp, #184]	; 0xb8
   11f08:	str	lr, [sp, #188]	; 0xbc
   11f0c:	str	r0, [sp, #192]	; 0xc0
   11f10:	str	lr, [sp, #196]	; 0xc4
   11f14:	add	r0, sp, #176	; 0xb0
   11f18:	bl	14158 <mmk_verify_times@@Base>
   11f1c:	cmp	r0, #0
   11f20:	bne	11f5c <main@@Base+0x988>
   11f24:	movw	r0, #20592	; 0x5070
   11f28:	movt	r0, #2
   11f2c:	ldr	r0, [r0]
   11f30:	movw	r1, #18522	; 0x485a
   11f34:	movt	r1, #1
   11f38:	movw	r2, #18551	; 0x4877
   11f3c:	movt	r2, #1
   11f40:	movw	r3, #69	; 0x45
   11f44:	movw	ip, #18997	; 0x4a35
   11f48:	movt	ip, #1
   11f4c:	str	ip, [sp]
   11f50:	bl	11488 <fprintf@plt>
   11f54:	str	r0, [sp, #28]
   11f58:	bl	114c4 <abort@plt>
   11f5c:	b	11f60 <main@@Base+0x98c>
   11f60:	b	11f64 <main@@Base+0x990>
   11f64:	movw	r0, #1
   11f68:	bl	13510 <mmk_matcher_init@@Base>
   11f6c:	movw	r0, #12
   11f70:	bl	11428 <fn_ii@plt>
   11f74:	str	r0, [sp, #24]
   11f78:	bl	1354c <mmk_matcher_term@@Base>
   11f7c:	movw	r0, #1
   11f80:	str	r0, [sp, #152]	; 0x98
   11f84:	str	r0, [sp, #156]	; 0x9c
   11f88:	movw	r0, #0
   11f8c:	str	r0, [sp, #160]	; 0xa0
   11f90:	str	r0, [sp, #164]	; 0xa4
   11f94:	str	r0, [sp, #168]	; 0xa8
   11f98:	str	r0, [sp, #172]	; 0xac
   11f9c:	add	r0, sp, #152	; 0x98
   11fa0:	bl	14158 <mmk_verify_times@@Base>
   11fa4:	cmp	r0, #0
   11fa8:	bne	11fe4 <main@@Base+0xa10>
   11fac:	movw	r0, #20592	; 0x5070
   11fb0:	movt	r0, #2
   11fb4:	ldr	r0, [r0]
   11fb8:	movw	r1, #18522	; 0x485a
   11fbc:	movt	r1, #1
   11fc0:	movw	r2, #18551	; 0x4877
   11fc4:	movt	r2, #1
   11fc8:	movw	r3, #70	; 0x46
   11fcc:	movw	ip, #19031	; 0x4a57
   11fd0:	movt	ip, #1
   11fd4:	str	ip, [sp]
   11fd8:	bl	11488 <fprintf@plt>
   11fdc:	str	r0, [sp, #20]
   11fe0:	bl	114c4 <abort@plt>
   11fe4:	b	11fe8 <main@@Base+0xa14>
   11fe8:	movw	r0, #5160	; 0x1428
   11fec:	movt	r0, #1
   11ff0:	bl	134f0 <mmk_reset@@Base>
   11ff4:	movw	r0, #19065	; 0x4a79
   11ff8:	movt	r0, #1
   11ffc:	bl	1210c <main@@Base+0xb38>
   12000:	movw	lr, #0
   12004:	str	r0, [sp, #16]
   12008:	mov	r0, lr
   1200c:	bl	13510 <mmk_matcher_init@@Base>
   12010:	add	r0, sp, #132	; 0x84
   12014:	mov	lr, r0
   12018:	vmov.i32	q8, #0	; 0x00000000
   1201c:	vst1.32	{d16-d17}, [lr]!
   12020:	mov	r1, #0
   12024:	str	r1, [lr]
   12028:	movw	r1, #1
   1202c:	str	r1, [sp, #128]	; 0x80
   12030:	add	r1, sp, #128	; 0x80
   12034:	str	r1, [sp, #140]	; 0x8c
   12038:	bl	14714 <mmk_when_init@@Base>
   1203c:	movw	r0, #1
   12040:	movw	r1, #42	; 0x2a
   12044:	bl	11434 <fn_ii_va@plt>
   12048:	str	r0, [sp, #12]
   1204c:	bl	1354c <mmk_matcher_term@@Base>
   12050:	movw	r0, #1
   12054:	movw	r1, #42	; 0x2a
   12058:	bl	11434 <fn_ii_va@plt>
   1205c:	cmp	r0, #1
   12060:	beq	1209c <main@@Base+0xac8>
   12064:	movw	r0, #20592	; 0x5070
   12068:	movt	r0, #2
   1206c:	ldr	r0, [r0]
   12070:	movw	r1, #18522	; 0x485a
   12074:	movt	r1, #1
   12078:	movw	r2, #18551	; 0x4877
   1207c:	movt	r2, #1
   12080:	movw	r3, #77	; 0x4d
   12084:	movw	ip, #19074	; 0x4a82
   12088:	movt	ip, #1
   1208c:	str	ip, [sp]
   12090:	bl	11488 <fprintf@plt>
   12094:	str	r0, [sp, #8]
   12098:	bl	114c4 <abort@plt>
   1209c:	b	120a0 <main@@Base+0xacc>
   120a0:	movw	r0, #5172	; 0x1434
   120a4:	movt	r0, #1
   120a8:	bl	134f0 <mmk_reset@@Base>
   120ac:	movw	r0, #0
   120b0:	sub	sp, fp, #8
   120b4:	pop	{r4, r5, fp, pc}
   120b8:	mrc2	14, 7, pc, cr14, cr14, {7}
   120bc:	push	{fp, lr}
   120c0:	mov	fp, sp
   120c4:	sub	sp, sp, #8
   120c8:	str	r0, [sp, #4]
   120cc:	ldr	r0, [sp, #4]
   120d0:	movw	r1, #8500	; 0x2134
   120d4:	movt	r1, #1
   120d8:	bl	135f8 <mmk_mock_create_internal@@Base>
   120dc:	mov	sp, fp
   120e0:	pop	{fp, pc}
   120e4:	push	{fp, lr}
   120e8:	mov	fp, sp
   120ec:	sub	sp, sp, #8
   120f0:	movw	r1, #9180	; 0x23dc
   120f4:	movt	r1, #1
   120f8:	str	r0, [sp, #4]
   120fc:	ldr	r0, [sp, #4]
   12100:	bl	135f8 <mmk_mock_create_internal@@Base>
   12104:	mov	sp, fp
   12108:	pop	{fp, pc}
   1210c:	push	{fp, lr}
   12110:	mov	fp, sp
   12114:	sub	sp, sp, #8
   12118:	movw	r1, #10688	; 0x29c0
   1211c:	movt	r1, #1
   12120:	str	r0, [sp, #4]
   12124:	ldr	r0, [sp, #4]
   12128:	bl	135f8 <mmk_mock_create_internal@@Base>
   1212c:	mov	sp, fp
   12130:	pop	{fp, pc}
   12134:	push	{fp, lr}
   12138:	mov	fp, sp
   1213c:	sub	sp, sp, #72	; 0x48
   12140:	b	12144 <main@@Base+0xb70>
   12144:	b	12148 <main@@Base+0xb74>
   12148:	b	1214c <main@@Base+0xb78>
   1214c:	bl	1356c <mmk_matcher_ctx@@Base>
   12150:	str	r0, [fp, #-4]
   12154:	ldr	r0, [fp, #-4]
   12158:	movw	lr, #0
   1215c:	cmp	r0, lr
   12160:	beq	12284 <main@@Base+0xcb0>
   12164:	bl	13f34 <mmk_ctx@@Base>
   12168:	bl	13dac <mmk_stub_context@@Base>
   1216c:	str	r0, [fp, #-8]
   12170:	ldr	r0, [fp, #-4]
   12174:	ldr	r0, [r0]
   12178:	cmp	r0, #0
   1217c:	bne	121c8 <main@@Base+0xbf4>
   12180:	movw	r0, #40	; 0x28
   12184:	bl	145b4 <mmk_malloc@@Base>
   12188:	str	r0, [fp, #-12]
   1218c:	ldr	r0, [fp, #-12]
   12190:	add	r0, r0, #8
   12194:	str	r0, [sp, #8]
   12198:	bl	14734 <mmk_when_get_result@@Base>
   1219c:	ldr	lr, [sp, #8]
   121a0:	str	r0, [sp, #4]
   121a4:	mov	r0, lr
   121a8:	ldr	r1, [sp, #4]
   121ac:	movw	r2, #20
   121b0:	bl	11404 <memcpy@plt>
   121b4:	b	121b8 <main@@Base+0xbe4>
   121b8:	ldr	r0, [fp, #-8]
   121bc:	ldr	r1, [fp, #-12]
   121c0:	bl	14750 <mmk_when_impl@@Base>
   121c4:	b	12278 <main@@Base+0xca4>
   121c8:	ldr	r0, [fp, #-4]
   121cc:	ldr	r0, [r0]
   121d0:	cmp	r0, #1
   121d4:	bne	12274 <main@@Base+0xca0>
   121d8:	movw	r0, #0
   121dc:	str	r0, [fp, #-16]
   121e0:	ldr	r0, [fp, #-8]
   121e4:	bl	137d8 <mmk_mock_params_begin@@Base>
   121e8:	str	r0, [fp, #-20]	; 0xffffffec
   121ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   121f0:	movw	r1, #0
   121f4:	cmp	r0, r1
   121f8:	beq	12234 <main@@Base+0xc60>
   121fc:	ldr	r0, [fp, #-4]
   12200:	str	r0, [fp, #-24]	; 0xffffffe8
   12204:	b	12208 <main@@Base+0xc34>
   12208:	ldr	r0, [fp, #-20]	; 0xffffffec
   1220c:	ldr	r0, [r0]
   12210:	ldr	r1, [fp, #-16]
   12214:	add	r0, r1, r0
   12218:	str	r0, [fp, #-16]
   1221c:	b	12220 <main@@Base+0xc4c>
   12220:	ldr	r0, [fp, #-8]
   12224:	ldr	r1, [fp, #-20]	; 0xffffffec
   12228:	bl	137f8 <mmk_mock_params_next@@Base>
   1222c:	str	r0, [fp, #-20]	; 0xffffffec
   12230:	b	121ec <main@@Base+0xc18>
   12234:	ldr	r0, [fp, #-4]
   12238:	str	r0, [fp, #-28]	; 0xffffffe4
   1223c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12240:	movw	r1, #0
   12244:	cmp	r0, r1
   12248:	beq	1226c <main@@Base+0xc98>
   1224c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12250:	ldr	r0, [r0, #8]
   12254:	str	r0, [fp, #-32]	; 0xffffffe0
   12258:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1225c:	bl	145d4 <mmk_free@@Base>
   12260:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12264:	str	r0, [fp, #-28]	; 0xffffffe4
   12268:	b	1223c <main@@Base+0xc68>
   1226c:	ldr	r0, [fp, #-16]
   12270:	bl	14138 <mmk_verify_set_times@@Base>
   12274:	b	12278 <main@@Base+0xca4>
   12278:	b	1227c <main@@Base+0xca8>
   1227c:	b	12280 <main@@Base+0xcac>
   12280:	b	123d4 <main@@Base+0xe00>
   12284:	movw	r0, #0
   12288:	str	r0, [sp, #24]
   1228c:	str	r0, [sp, #28]
   12290:	str	r0, [sp, #32]
   12294:	add	r0, sp, #24
   12298:	str	r0, [sp, #36]	; 0x24
   1229c:	b	122a0 <main@@Base+0xccc>
   122a0:	ldr	r0, [sp, #36]	; 0x24
   122a4:	movw	r1, #12
   122a8:	bl	141f0 <mmk_verify_register_call@@Base>
   122ac:	bl	13820 <mmk_mock_get_params@@Base>
   122b0:	str	r0, [sp, #20]
   122b4:	ldr	r0, [sp, #20]
   122b8:	movw	r1, #0
   122bc:	cmp	r0, r1
   122c0:	beq	123c8 <main@@Base+0xdf4>
   122c4:	ldr	r0, [sp, #20]
   122c8:	str	r0, [sp, #16]
   122cc:	ldr	r0, [sp, #20]
   122d0:	ldr	r0, [r0]
   122d4:	str	r0, [sp, #12]
   122d8:	ldr	r0, [sp, #16]
   122dc:	ldr	r0, [r0, #12]
   122e0:	cmp	r0, #0
   122e4:	beq	12300 <main@@Base+0xd2c>
   122e8:	ldr	r0, [sp, #16]
   122ec:	ldr	r0, [r0, #12]
   122f0:	str	r0, [sp]
   122f4:	bl	11494 <__errno_location@plt>
   122f8:	ldr	lr, [sp]
   122fc:	str	lr, [r0]
   12300:	ldr	r0, [sp, #16]
   12304:	ldr	r0, [r0, #20]
   12308:	movw	r1, #0
   1230c:	cmp	r0, r1
   12310:	beq	12350 <main@@Base+0xd7c>
   12314:	ldr	r0, [sp, #16]
   12318:	ldr	r0, [r0, #16]
   1231c:	movw	r1, #0
   12320:	cmp	r0, r1
   12324:	bne	12350 <main@@Base+0xd7c>
   12328:	b	1232c <main@@Base+0xd58>
   1232c:	b	12330 <main@@Base+0xd5c>
   12330:	b	12334 <main@@Base+0xd60>
   12334:	ldr	r0, [sp, #16]
   12338:	ldr	r0, [r0, #20]
   1233c:	blx	r0
   12340:	b	12344 <main@@Base+0xd70>
   12344:	b	12348 <main@@Base+0xd74>
   12348:	b	1234c <main@@Base+0xd78>
   1234c:	b	123d4 <main@@Base+0xe00>
   12350:	ldr	r0, [sp, #16]
   12354:	ldr	r0, [r0, #20]
   12358:	movw	r1, #0
   1235c:	cmp	r0, r1
   12360:	beq	1239c <main@@Base+0xdc8>
   12364:	ldr	r0, [sp, #16]
   12368:	ldr	r0, [r0, #16]
   1236c:	movw	r1, #0
   12370:	cmp	r0, r1
   12374:	beq	1239c <main@@Base+0xdc8>
   12378:	b	1237c <main@@Base+0xda8>
   1237c:	b	12380 <main@@Base+0xdac>
   12380:	ldr	r0, [sp, #16]
   12384:	ldr	r0, [r0, #20]
   12388:	blx	r0
   1238c:	b	12390 <main@@Base+0xdbc>
   12390:	b	12394 <main@@Base+0xdc0>
   12394:	b	12398 <main@@Base+0xdc4>
   12398:	b	123d4 <main@@Base+0xe00>
   1239c:	ldr	r0, [sp, #16]
   123a0:	ldr	r0, [r0, #16]
   123a4:	movw	r1, #0
   123a8:	cmp	r0, r1
   123ac:	beq	123bc <main@@Base+0xde8>
   123b0:	b	123b4 <main@@Base+0xde0>
   123b4:	b	123b8 <main@@Base+0xde4>
   123b8:	b	123d4 <main@@Base+0xe00>
   123bc:	b	123c0 <main@@Base+0xdec>
   123c0:	b	123c4 <main@@Base+0xdf0>
   123c4:	b	123d4 <main@@Base+0xe00>
   123c8:	b	123cc <main@@Base+0xdf8>
   123cc:	b	123d0 <main@@Base+0xdfc>
   123d0:	b	123d4 <main@@Base+0xe00>
   123d4:	mov	sp, fp
   123d8:	pop	{fp, pc}
   123dc:	push	{fp, lr}
   123e0:	mov	fp, sp
   123e4:	sub	sp, sp, #128	; 0x80
   123e8:	str	r0, [fp, #-8]
   123ec:	b	123f0 <main@@Base+0xe1c>
   123f0:	bl	1356c <mmk_matcher_ctx@@Base>
   123f4:	str	r0, [fp, #-12]
   123f8:	ldr	r0, [fp, #-12]
   123fc:	movw	lr, #0
   12400:	cmp	r0, lr
   12404:	beq	12690 <main@@Base+0x10bc>
   12408:	bl	13f34 <mmk_ctx@@Base>
   1240c:	bl	13dac <mmk_stub_context@@Base>
   12410:	str	r0, [fp, #-16]
   12414:	ldr	r0, [fp, #-12]
   12418:	ldr	r0, [r0]
   1241c:	cmp	r0, #0
   12420:	bne	12478 <main@@Base+0xea4>
   12424:	movw	r0, #44	; 0x2c
   12428:	bl	145b4 <mmk_malloc@@Base>
   1242c:	str	r0, [fp, #-20]	; 0xffffffec
   12430:	ldr	r0, [fp, #-20]	; 0xffffffec
   12434:	add	r0, r0, #8
   12438:	str	r0, [sp, #32]
   1243c:	bl	14734 <mmk_when_get_result@@Base>
   12440:	ldr	lr, [sp, #32]
   12444:	str	r0, [sp, #28]
   12448:	mov	r0, lr
   1244c:	ldr	r1, [sp, #28]
   12450:	movw	r2, #20
   12454:	bl	11404 <memcpy@plt>
   12458:	ldr	r0, [fp, #-8]
   1245c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12460:	str	r0, [r1, #40]	; 0x28
   12464:	b	12468 <main@@Base+0xe94>
   12468:	ldr	r0, [fp, #-16]
   1246c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12470:	bl	14750 <mmk_when_impl@@Base>
   12474:	b	12674 <main@@Base+0x10a0>
   12478:	ldr	r0, [fp, #-12]
   1247c:	ldr	r0, [r0]
   12480:	cmp	r0, #1
   12484:	bne	12670 <main@@Base+0x109c>
   12488:	movw	r0, #0
   1248c:	str	r0, [fp, #-24]	; 0xffffffe8
   12490:	ldr	r0, [fp, #-16]
   12494:	bl	137d8 <mmk_mock_params_begin@@Base>
   12498:	str	r0, [fp, #-28]	; 0xffffffe4
   1249c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   124a0:	movw	r1, #0
   124a4:	cmp	r0, r1
   124a8:	beq	12630 <main@@Base+0x105c>
   124ac:	ldr	r0, [fp, #-12]
   124b0:	str	r0, [fp, #-32]	; 0xffffffe0
   124b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   124b8:	ldr	r0, [r0, #8]
   124bc:	movw	r1, #0
   124c0:	cmp	r0, r1
   124c4:	beq	125d8 <main@@Base+0x1004>
   124c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   124cc:	ldr	r0, [r0, #8]
   124d0:	str	r0, [fp, #-32]	; 0xffffffe0
   124d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   124d8:	ldr	r0, [r0]
   124dc:	cmp	r0, #0
   124e0:	bne	124e8 <main@@Base+0xf14>
   124e4:	b	125d4 <main@@Base+0x1000>
   124e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   124ec:	ldr	r0, [r0]
   124f0:	and	r0, r0, #-2147483648	; 0x80000000
   124f4:	cmp	r0, #0
   124f8:	beq	12584 <main@@Base+0xfb0>
   124fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12500:	add	r0, r0, #12
   12504:	sub	r1, fp, #8
   12508:	movw	r2, #4
   1250c:	bl	143e4 <mmk_memcmp@@Base>
   12510:	str	r0, [fp, #-36]	; 0xffffffdc
   12514:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12518:	cmp	r0, #0
   1251c:	bne	12538 <main@@Base+0xf64>
   12520:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12524:	ldr	r0, [r0]
   12528:	and	r0, r0, #2
   1252c:	cmp	r0, #0
   12530:	bne	12538 <main@@Base+0xf64>
   12534:	b	12618 <main@@Base+0x1044>
   12538:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1253c:	cmp	r0, #0
   12540:	bge	1255c <main@@Base+0xf88>
   12544:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12548:	ldr	r0, [r0]
   1254c:	and	r0, r0, #4
   12550:	cmp	r0, #0
   12554:	bne	1255c <main@@Base+0xf88>
   12558:	b	12618 <main@@Base+0x1044>
   1255c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12560:	cmp	r0, #0
   12564:	ble	12580 <main@@Base+0xfac>
   12568:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1256c:	ldr	r0, [r0]
   12570:	and	r0, r0, #8
   12574:	cmp	r0, #0
   12578:	bne	12580 <main@@Base+0xfac>
   1257c:	b	12618 <main@@Base+0x1044>
   12580:	b	125d0 <main@@Base+0xffc>
   12584:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12588:	ldr	r0, [r0]
   1258c:	cmp	r0, #1
   12590:	bne	125cc <main@@Base+0xff8>
   12594:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12598:	bl	135f0 <mmk_matcher_get_predicate@@Base>
   1259c:	str	r0, [fp, #-40]	; 0xffffffd8
   125a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   125a4:	ldr	lr, [fp, #-28]	; 0xffffffe4
   125a8:	ldr	lr, [lr, #12]
   125ac:	str	r0, [sp, #24]
   125b0:	mov	r0, lr
   125b4:	ldr	lr, [sp, #24]
   125b8:	blx	lr
   125bc:	cmp	r0, #0
   125c0:	bne	125c8 <main@@Base+0xff4>
   125c4:	b	12618 <main@@Base+0x1044>
   125c8:	b	125cc <main@@Base+0xff8>
   125cc:	b	125d0 <main@@Base+0xffc>
   125d0:	b	125d4 <main@@Base+0x1000>
   125d4:	b	125fc <main@@Base+0x1028>
   125d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125dc:	add	r0, r0, #12
   125e0:	sub	r1, fp, #8
   125e4:	movw	r2, #4
   125e8:	bl	143e4 <mmk_memcmp@@Base>
   125ec:	cmp	r0, #0
   125f0:	beq	125f8 <main@@Base+0x1024>
   125f4:	b	12618 <main@@Base+0x1044>
   125f8:	b	125fc <main@@Base+0x1028>
   125fc:	b	12600 <main@@Base+0x102c>
   12600:	b	12604 <main@@Base+0x1030>
   12604:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12608:	ldr	r0, [r0]
   1260c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12610:	add	r0, r1, r0
   12614:	str	r0, [fp, #-24]	; 0xffffffe8
   12618:	b	1261c <main@@Base+0x1048>
   1261c:	ldr	r0, [fp, #-16]
   12620:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12624:	bl	137f8 <mmk_mock_params_next@@Base>
   12628:	str	r0, [fp, #-28]	; 0xffffffe4
   1262c:	b	1249c <main@@Base+0xec8>
   12630:	ldr	r0, [fp, #-12]
   12634:	str	r0, [fp, #-44]	; 0xffffffd4
   12638:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1263c:	movw	r1, #0
   12640:	cmp	r0, r1
   12644:	beq	12668 <main@@Base+0x1094>
   12648:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1264c:	ldr	r0, [r0, #8]
   12650:	str	r0, [fp, #-48]	; 0xffffffd0
   12654:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12658:	bl	145d4 <mmk_free@@Base>
   1265c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12660:	str	r0, [fp, #-44]	; 0xffffffd4
   12664:	b	12638 <main@@Base+0x1064>
   12668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1266c:	bl	14138 <mmk_verify_set_times@@Base>
   12670:	b	12674 <main@@Base+0x10a0>
   12674:	b	12678 <main@@Base+0x10a4>
   12678:	b	1267c <main@@Base+0x10a8>
   1267c:	movw	r0, #20624	; 0x5090
   12680:	movt	r0, #2
   12684:	ldr	r0, [r0]
   12688:	str	r0, [fp, #-4]
   1268c:	b	129b4 <main@@Base+0x13e0>
   12690:	movw	r0, #0
   12694:	str	r0, [sp, #60]	; 0x3c
   12698:	str	r0, [sp, #64]	; 0x40
   1269c:	str	r0, [sp, #68]	; 0x44
   126a0:	ldr	r0, [fp, #-8]
   126a4:	str	r0, [sp, #72]	; 0x48
   126a8:	add	r0, sp, #60	; 0x3c
   126ac:	str	r0, [fp, #-52]	; 0xffffffcc
   126b0:	b	126b4 <main@@Base+0x10e0>
   126b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   126b8:	movw	r1, #16
   126bc:	bl	141f0 <mmk_verify_register_call@@Base>
   126c0:	bl	13820 <mmk_mock_get_params@@Base>
   126c4:	str	r0, [sp, #56]	; 0x38
   126c8:	ldr	r0, [sp, #56]	; 0x38
   126cc:	movw	r1, #0
   126d0:	cmp	r0, r1
   126d4:	beq	1299c <main@@Base+0x13c8>
   126d8:	ldr	r0, [sp, #56]	; 0x38
   126dc:	str	r0, [sp, #52]	; 0x34
   126e0:	ldr	r0, [sp, #56]	; 0x38
   126e4:	ldr	r0, [r0]
   126e8:	str	r0, [sp, #48]	; 0x30
   126ec:	ldr	r0, [sp, #48]	; 0x30
   126f0:	ldr	r0, [r0, #8]
   126f4:	movw	r1, #0
   126f8:	cmp	r0, r1
   126fc:	beq	12814 <main@@Base+0x1240>
   12700:	ldr	r0, [sp, #48]	; 0x30
   12704:	ldr	r0, [r0, #8]
   12708:	str	r0, [sp, #48]	; 0x30
   1270c:	ldr	r0, [sp, #48]	; 0x30
   12710:	ldr	r0, [r0]
   12714:	cmp	r0, #0
   12718:	bne	12720 <main@@Base+0x114c>
   1271c:	b	12810 <main@@Base+0x123c>
   12720:	ldr	r0, [sp, #48]	; 0x30
   12724:	ldr	r0, [r0]
   12728:	and	r0, r0, #-2147483648	; 0x80000000
   1272c:	cmp	r0, #0
   12730:	beq	127c4 <main@@Base+0x11f0>
   12734:	sub	r0, fp, #8
   12738:	mov	r1, r0
   1273c:	str	r0, [sp, #20]
   12740:	mov	r0, r1
   12744:	ldr	r1, [sp, #20]
   12748:	movw	r2, #4
   1274c:	bl	143e4 <mmk_memcmp@@Base>
   12750:	str	r0, [sp, #44]	; 0x2c
   12754:	ldr	r0, [sp, #44]	; 0x2c
   12758:	cmp	r0, #0
   1275c:	bne	12778 <main@@Base+0x11a4>
   12760:	ldr	r0, [sp, #48]	; 0x30
   12764:	ldr	r0, [r0]
   12768:	and	r0, r0, #2
   1276c:	cmp	r0, #0
   12770:	bne	12778 <main@@Base+0x11a4>
   12774:	b	1298c <main@@Base+0x13b8>
   12778:	ldr	r0, [sp, #44]	; 0x2c
   1277c:	cmp	r0, #0
   12780:	bge	1279c <main@@Base+0x11c8>
   12784:	ldr	r0, [sp, #48]	; 0x30
   12788:	ldr	r0, [r0]
   1278c:	and	r0, r0, #4
   12790:	cmp	r0, #0
   12794:	bne	1279c <main@@Base+0x11c8>
   12798:	b	1298c <main@@Base+0x13b8>
   1279c:	ldr	r0, [sp, #44]	; 0x2c
   127a0:	cmp	r0, #0
   127a4:	ble	127c0 <main@@Base+0x11ec>
   127a8:	ldr	r0, [sp, #48]	; 0x30
   127ac:	ldr	r0, [r0]
   127b0:	and	r0, r0, #8
   127b4:	cmp	r0, #0
   127b8:	bne	127c0 <main@@Base+0x11ec>
   127bc:	b	1298c <main@@Base+0x13b8>
   127c0:	b	1280c <main@@Base+0x1238>
   127c4:	ldr	r0, [sp, #48]	; 0x30
   127c8:	ldr	r0, [r0]
   127cc:	cmp	r0, #1
   127d0:	bne	12808 <main@@Base+0x1234>
   127d4:	ldr	r0, [sp, #48]	; 0x30
   127d8:	bl	135f0 <mmk_matcher_get_predicate@@Base>
   127dc:	str	r0, [sp, #40]	; 0x28
   127e0:	ldr	r0, [sp, #40]	; 0x28
   127e4:	ldr	lr, [fp, #-8]
   127e8:	str	r0, [sp, #16]
   127ec:	mov	r0, lr
   127f0:	ldr	lr, [sp, #16]
   127f4:	blx	lr
   127f8:	cmp	r0, #0
   127fc:	bne	12804 <main@@Base+0x1230>
   12800:	b	1298c <main@@Base+0x13b8>
   12804:	b	12808 <main@@Base+0x1234>
   12808:	b	1280c <main@@Base+0x1238>
   1280c:	b	12810 <main@@Base+0x123c>
   12810:	b	1283c <main@@Base+0x1268>
   12814:	sub	r0, fp, #8
   12818:	ldr	r1, [sp, #52]	; 0x34
   1281c:	add	r1, r1, #28
   12820:	add	r1, r1, #12
   12824:	movw	r2, #4
   12828:	bl	143e4 <mmk_memcmp@@Base>
   1282c:	cmp	r0, #0
   12830:	beq	12838 <main@@Base+0x1264>
   12834:	b	1298c <main@@Base+0x13b8>
   12838:	b	1283c <main@@Base+0x1268>
   1283c:	ldr	r0, [sp, #52]	; 0x34
   12840:	ldr	r0, [r0, #12]
   12844:	cmp	r0, #0
   12848:	beq	12864 <main@@Base+0x1290>
   1284c:	ldr	r0, [sp, #52]	; 0x34
   12850:	ldr	r0, [r0, #12]
   12854:	str	r0, [sp, #12]
   12858:	bl	11494 <__errno_location@plt>
   1285c:	ldr	lr, [sp, #12]
   12860:	str	lr, [r0]
   12864:	ldr	r0, [sp, #52]	; 0x34
   12868:	ldr	r0, [r0, #20]
   1286c:	movw	r1, #0
   12870:	cmp	r0, r1
   12874:	beq	128d0 <main@@Base+0x12fc>
   12878:	ldr	r0, [sp, #52]	; 0x34
   1287c:	ldr	r0, [r0, #16]
   12880:	movw	r1, #0
   12884:	cmp	r0, r1
   12888:	bne	128d0 <main@@Base+0x12fc>
   1288c:	b	12890 <main@@Base+0x12bc>
   12890:	b	12894 <main@@Base+0x12c0>
   12894:	b	12898 <main@@Base+0x12c4>
   12898:	ldr	r0, [sp, #52]	; 0x34
   1289c:	ldr	r0, [r0, #20]
   128a0:	ldr	r1, [fp, #-8]
   128a4:	str	r0, [sp, #8]
   128a8:	mov	r0, r1
   128ac:	ldr	r1, [sp, #8]
   128b0:	blx	r1
   128b4:	str	r0, [sp, #36]	; 0x24
   128b8:	b	128bc <main@@Base+0x12e8>
   128bc:	b	128c0 <main@@Base+0x12ec>
   128c0:	b	128c4 <main@@Base+0x12f0>
   128c4:	ldr	r0, [sp, #36]	; 0x24
   128c8:	str	r0, [fp, #-4]
   128cc:	b	129b4 <main@@Base+0x13e0>
   128d0:	ldr	r0, [sp, #52]	; 0x34
   128d4:	ldr	r0, [r0, #20]
   128d8:	movw	r1, #0
   128dc:	cmp	r0, r1
   128e0:	beq	12940 <main@@Base+0x136c>
   128e4:	ldr	r0, [sp, #52]	; 0x34
   128e8:	ldr	r0, [r0, #16]
   128ec:	movw	r1, #0
   128f0:	cmp	r0, r1
   128f4:	beq	12940 <main@@Base+0x136c>
   128f8:	b	128fc <main@@Base+0x1328>
   128fc:	b	12900 <main@@Base+0x132c>
   12900:	ldr	r0, [sp, #52]	; 0x34
   12904:	ldr	r0, [r0, #20]
   12908:	ldr	r1, [fp, #-8]
   1290c:	str	r0, [sp, #4]
   12910:	mov	r0, r1
   12914:	ldr	r1, [sp, #4]
   12918:	blx	r1
   1291c:	str	r0, [sp]
   12920:	b	12924 <main@@Base+0x1350>
   12924:	b	12928 <main@@Base+0x1354>
   12928:	b	1292c <main@@Base+0x1358>
   1292c:	ldr	r0, [sp, #52]	; 0x34
   12930:	ldr	r0, [r0, #16]
   12934:	ldr	r0, [r0]
   12938:	str	r0, [fp, #-4]
   1293c:	b	129b4 <main@@Base+0x13e0>
   12940:	ldr	r0, [sp, #52]	; 0x34
   12944:	ldr	r0, [r0, #16]
   12948:	movw	r1, #0
   1294c:	cmp	r0, r1
   12950:	beq	12970 <main@@Base+0x139c>
   12954:	b	12958 <main@@Base+0x1384>
   12958:	b	1295c <main@@Base+0x1388>
   1295c:	ldr	r0, [sp, #52]	; 0x34
   12960:	ldr	r0, [r0, #16]
   12964:	ldr	r0, [r0]
   12968:	str	r0, [fp, #-4]
   1296c:	b	129b4 <main@@Base+0x13e0>
   12970:	b	12974 <main@@Base+0x13a0>
   12974:	b	12978 <main@@Base+0x13a4>
   12978:	movw	r0, #20624	; 0x5090
   1297c:	movt	r0, #2
   12980:	ldr	r0, [r0]
   12984:	str	r0, [fp, #-4]
   12988:	b	129b4 <main@@Base+0x13e0>
   1298c:	ldr	r0, [sp, #56]	; 0x38
   12990:	ldr	r0, [r0, #4]
   12994:	str	r0, [sp, #56]	; 0x38
   12998:	b	126c8 <main@@Base+0x10f4>
   1299c:	b	129a0 <main@@Base+0x13cc>
   129a0:	b	129a4 <main@@Base+0x13d0>
   129a4:	movw	r0, #20624	; 0x5090
   129a8:	movt	r0, #2
   129ac:	ldr	r0, [r0]
   129b0:	str	r0, [fp, #-4]
   129b4:	ldr	r0, [fp, #-4]
   129b8:	mov	sp, fp
   129bc:	pop	{fp, pc}
   129c0:	sub	sp, sp, #12
   129c4:	push	{r4, r5, fp, lr}
   129c8:	add	fp, sp, #8
   129cc:	sub	sp, sp, #260	; 0x104
   129d0:	str	r3, [fp, #16]
   129d4:	str	r2, [fp, #12]
   129d8:	str	r1, [fp, #8]
   129dc:	str	r0, [fp, #-16]
   129e0:	movw	r0, #13072	; 0x3310
   129e4:	movt	r0, #1
   129e8:	str	r0, [fp, #-20]	; 0xffffffec
   129ec:	sub	r0, fp, #24
   129f0:	add	r1, fp, #8
   129f4:	str	r1, [r0]
   129f8:	bl	1356c <mmk_matcher_ctx@@Base>
   129fc:	str	r0, [fp, #-32]	; 0xffffffe0
   12a00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12a04:	movw	r1, #0
   12a08:	cmp	r0, r1
   12a0c:	beq	12f4c <main@@Base+0x1978>
   12a10:	bl	13f34 <mmk_ctx@@Base>
   12a14:	bl	13dac <mmk_stub_context@@Base>
   12a18:	str	r0, [fp, #-36]	; 0xffffffdc
   12a1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12a20:	ldr	r0, [r0]
   12a24:	cmp	r0, #0
   12a28:	bne	12af4 <main@@Base+0x1520>
   12a2c:	movw	r0, #44	; 0x2c
   12a30:	bl	145b4 <mmk_malloc@@Base>
   12a34:	str	r0, [fp, #-40]	; 0xffffffd8
   12a38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12a3c:	add	r0, r0, #8
   12a40:	str	r0, [sp, #96]	; 0x60
   12a44:	bl	14734 <mmk_when_get_result@@Base>
   12a48:	ldr	lr, [sp, #96]	; 0x60
   12a4c:	str	r0, [sp, #92]	; 0x5c
   12a50:	mov	r0, lr
   12a54:	ldr	r1, [sp, #92]	; 0x5c
   12a58:	movw	r2, #20
   12a5c:	bl	11404 <memcpy@plt>
   12a60:	ldr	r0, [fp, #-16]
   12a64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12a68:	str	r0, [r1, #40]	; 0x28
   12a6c:	mov	r0, #0
   12a70:	str	r0, [fp, #-44]	; 0xffffffd4
   12a74:	str	r0, [fp, #-48]	; 0xffffffd0
   12a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a7c:	str	r0, [fp, #-28]	; 0xffffffe4
   12a80:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a84:	ldr	r1, [fp, #-16]
   12a88:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12a8c:	sub	r3, fp, #44	; 0x2c
   12a90:	sub	ip, fp, #48	; 0x30
   12a94:	str	r0, [sp, #88]	; 0x58
   12a98:	mov	r0, r1
   12a9c:	mov	r1, r2
   12aa0:	mov	r2, r3
   12aa4:	mov	r3, ip
   12aa8:	ldr	ip, [sp, #88]	; 0x58
   12aac:	blx	ip
   12ab0:	str	r0, [fp, #-52]	; 0xffffffcc
   12ab4:	sub	r0, fp, #28
   12ab8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12abc:	cmp	r1, #0
   12ac0:	str	r0, [sp, #84]	; 0x54
   12ac4:	beq	12ae0 <main@@Base+0x150c>
   12ac8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12acc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12ad0:	str	r0, [r1, #32]
   12ad4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12ad8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12adc:	str	r0, [r1, #36]	; 0x24
   12ae0:	b	12ae4 <main@@Base+0x1510>
   12ae4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12ae8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12aec:	bl	14750 <mmk_when_impl@@Base>
   12af0:	b	12f30 <main@@Base+0x195c>
   12af4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12af8:	ldr	r0, [r0]
   12afc:	cmp	r0, #1
   12b00:	bne	12f2c <main@@Base+0x1958>
   12b04:	movw	r0, #0
   12b08:	str	r0, [fp, #-56]	; 0xffffffc8
   12b0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b10:	bl	137d8 <mmk_mock_params_begin@@Base>
   12b14:	str	r0, [fp, #-60]	; 0xffffffc4
   12b18:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12b1c:	movw	r1, #0
   12b20:	cmp	r0, r1
   12b24:	beq	12eec <main@@Base+0x1918>
   12b28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b2c:	str	r0, [fp, #-64]	; 0xffffffc0
   12b30:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12b34:	ldr	r0, [r0, #8]
   12b38:	movw	r1, #0
   12b3c:	cmp	r0, r1
   12b40:	beq	12c54 <main@@Base+0x1680>
   12b44:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12b48:	ldr	r0, [r0, #8]
   12b4c:	str	r0, [fp, #-64]	; 0xffffffc0
   12b50:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12b54:	ldr	r0, [r0]
   12b58:	cmp	r0, #0
   12b5c:	bne	12b64 <main@@Base+0x1590>
   12b60:	b	12c50 <main@@Base+0x167c>
   12b64:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12b68:	ldr	r0, [r0]
   12b6c:	and	r0, r0, #-2147483648	; 0x80000000
   12b70:	cmp	r0, #0
   12b74:	beq	12c00 <main@@Base+0x162c>
   12b78:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12b7c:	add	r0, r0, #12
   12b80:	sub	r1, fp, #16
   12b84:	movw	r2, #4
   12b88:	bl	143e4 <mmk_memcmp@@Base>
   12b8c:	str	r0, [fp, #-68]	; 0xffffffbc
   12b90:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12b94:	cmp	r0, #0
   12b98:	bne	12bb4 <main@@Base+0x15e0>
   12b9c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12ba0:	ldr	r0, [r0]
   12ba4:	and	r0, r0, #2
   12ba8:	cmp	r0, #0
   12bac:	bne	12bb4 <main@@Base+0x15e0>
   12bb0:	b	12ed4 <main@@Base+0x1900>
   12bb4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12bb8:	cmp	r0, #0
   12bbc:	bge	12bd8 <main@@Base+0x1604>
   12bc0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12bc4:	ldr	r0, [r0]
   12bc8:	and	r0, r0, #4
   12bcc:	cmp	r0, #0
   12bd0:	bne	12bd8 <main@@Base+0x1604>
   12bd4:	b	12ed4 <main@@Base+0x1900>
   12bd8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12bdc:	cmp	r0, #0
   12be0:	ble	12bfc <main@@Base+0x1628>
   12be4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12be8:	ldr	r0, [r0]
   12bec:	and	r0, r0, #8
   12bf0:	cmp	r0, #0
   12bf4:	bne	12bfc <main@@Base+0x1628>
   12bf8:	b	12ed4 <main@@Base+0x1900>
   12bfc:	b	12c4c <main@@Base+0x1678>
   12c00:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12c04:	ldr	r0, [r0]
   12c08:	cmp	r0, #1
   12c0c:	bne	12c48 <main@@Base+0x1674>
   12c10:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12c14:	bl	135f0 <mmk_matcher_get_predicate@@Base>
   12c18:	str	r0, [fp, #-72]	; 0xffffffb8
   12c1c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12c20:	ldr	lr, [fp, #-60]	; 0xffffffc4
   12c24:	ldr	lr, [lr, #12]
   12c28:	str	r0, [sp, #80]	; 0x50
   12c2c:	mov	r0, lr
   12c30:	ldr	lr, [sp, #80]	; 0x50
   12c34:	blx	lr
   12c38:	cmp	r0, #0
   12c3c:	bne	12c44 <main@@Base+0x1670>
   12c40:	b	12ed4 <main@@Base+0x1900>
   12c44:	b	12c48 <main@@Base+0x1674>
   12c48:	b	12c4c <main@@Base+0x1678>
   12c4c:	b	12c50 <main@@Base+0x167c>
   12c50:	b	12c78 <main@@Base+0x16a4>
   12c54:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12c58:	add	r0, r0, #12
   12c5c:	sub	r1, fp, #16
   12c60:	movw	r2, #4
   12c64:	bl	143e4 <mmk_memcmp@@Base>
   12c68:	cmp	r0, #0
   12c6c:	beq	12c74 <main@@Base+0x16a0>
   12c70:	b	12ed4 <main@@Base+0x1900>
   12c74:	b	12c78 <main@@Base+0x16a4>
   12c78:	b	12c7c <main@@Base+0x16a8>
   12c7c:	mov	r0, #0
   12c80:	str	r0, [fp, #-76]	; 0xffffffb4
   12c84:	str	r0, [fp, #-80]	; 0xffffffb0
   12c88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c8c:	str	r0, [fp, #-28]	; 0xffffffe4
   12c90:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c94:	ldr	r1, [fp, #-16]
   12c98:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12c9c:	sub	r3, fp, #76	; 0x4c
   12ca0:	sub	ip, fp, #80	; 0x50
   12ca4:	str	r0, [sp, #76]	; 0x4c
   12ca8:	mov	r0, r1
   12cac:	mov	r1, r2
   12cb0:	mov	r2, r3
   12cb4:	mov	r3, ip
   12cb8:	ldr	ip, [sp, #76]	; 0x4c
   12cbc:	blx	ip
   12cc0:	str	r0, [fp, #-84]	; 0xffffffac
   12cc4:	sub	r0, fp, #28
   12cc8:	ldr	r1, [fp, #-84]	; 0xffffffac
   12ccc:	cmp	r1, #0
   12cd0:	str	r0, [sp, #72]	; 0x48
   12cd4:	beq	12cec <main@@Base+0x1718>
   12cd8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12cdc:	ldr	r0, [r0, #4]
   12ce0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12ce4:	cmp	r0, r1
   12ce8:	beq	12cf0 <main@@Base+0x171c>
   12cec:	b	12ed4 <main@@Base+0x1900>
   12cf0:	movw	r0, #0
   12cf4:	str	r0, [fp, #-88]	; 0xffffffa8
   12cf8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12cfc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12d00:	cmp	r0, r1
   12d04:	bcs	12eb8 <main@@Base+0x18e4>
   12d08:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12d0c:	ldr	r0, [r0, #8]
   12d10:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12d14:	ldr	r0, [r0, r1, lsl #2]
   12d18:	str	r0, [fp, #-92]	; 0xffffffa4
   12d1c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12d20:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12d24:	add	r0, r0, r1, lsl #2
   12d28:	ldr	r0, [r0]
   12d2c:	str	r0, [fp, #-96]	; 0xffffffa0
   12d30:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12d34:	ldr	r0, [r0]
   12d38:	ldr	r1, [fp, #-96]	; 0xffffffa0
   12d3c:	ldr	r1, [r1]
   12d40:	cmp	r0, r1
   12d44:	beq	12d4c <main@@Base+0x1778>
   12d48:	b	12ed4 <main@@Base+0x1900>
   12d4c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12d50:	ldr	r0, [r0, #8]
   12d54:	movw	r1, #0
   12d58:	cmp	r0, r1
   12d5c:	beq	12e74 <main@@Base+0x18a0>
   12d60:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12d64:	ldr	r0, [r0, #8]
   12d68:	str	r0, [fp, #-64]	; 0xffffffc0
   12d6c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12d70:	ldr	r0, [r0]
   12d74:	cmp	r0, #0
   12d78:	bne	12d80 <main@@Base+0x17ac>
   12d7c:	b	12e70 <main@@Base+0x189c>
   12d80:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12d84:	ldr	r0, [r0]
   12d88:	and	r0, r0, #-2147483648	; 0x80000000
   12d8c:	cmp	r0, #0
   12d90:	beq	12e24 <main@@Base+0x1850>
   12d94:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12d98:	add	r0, r0, #4
   12d9c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   12da0:	add	r1, r1, #4
   12da4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12da8:	ldr	r2, [r2]
   12dac:	bl	143e4 <mmk_memcmp@@Base>
   12db0:	str	r0, [fp, #-100]	; 0xffffff9c
   12db4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   12db8:	cmp	r0, #0
   12dbc:	bne	12dd8 <main@@Base+0x1804>
   12dc0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12dc4:	ldr	r0, [r0]
   12dc8:	and	r0, r0, #2
   12dcc:	cmp	r0, #0
   12dd0:	bne	12dd8 <main@@Base+0x1804>
   12dd4:	b	12ed4 <main@@Base+0x1900>
   12dd8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   12ddc:	cmp	r0, #0
   12de0:	bge	12dfc <main@@Base+0x1828>
   12de4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12de8:	ldr	r0, [r0]
   12dec:	and	r0, r0, #4
   12df0:	cmp	r0, #0
   12df4:	bne	12dfc <main@@Base+0x1828>
   12df8:	b	12ed4 <main@@Base+0x1900>
   12dfc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   12e00:	cmp	r0, #0
   12e04:	ble	12e20 <main@@Base+0x184c>
   12e08:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12e0c:	ldr	r0, [r0]
   12e10:	and	r0, r0, #8
   12e14:	cmp	r0, #0
   12e18:	bne	12e20 <main@@Base+0x184c>
   12e1c:	b	12ed4 <main@@Base+0x1900>
   12e20:	b	12e6c <main@@Base+0x1898>
   12e24:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12e28:	ldr	r0, [r0]
   12e2c:	cmp	r0, #1
   12e30:	bne	12e68 <main@@Base+0x1894>
   12e34:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12e38:	bl	135f0 <mmk_matcher_get_predicate@@Base>
   12e3c:	str	r0, [fp, #-104]	; 0xffffff98
   12e40:	ldr	r0, [fp, #-104]	; 0xffffff98
   12e44:	ldr	lr, [fp, #-92]	; 0xffffffa4
   12e48:	str	r0, [sp, #68]	; 0x44
   12e4c:	mov	r0, lr
   12e50:	ldr	lr, [sp, #68]	; 0x44
   12e54:	blx	lr
   12e58:	cmp	r0, #0
   12e5c:	bne	12e64 <main@@Base+0x1890>
   12e60:	b	12ed4 <main@@Base+0x1900>
   12e64:	b	12e68 <main@@Base+0x1894>
   12e68:	b	12e6c <main@@Base+0x1898>
   12e6c:	b	12e70 <main@@Base+0x189c>
   12e70:	b	12ea0 <main@@Base+0x18cc>
   12e74:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12e78:	add	r0, r0, #4
   12e7c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   12e80:	add	r1, r1, #4
   12e84:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12e88:	ldr	r2, [r2]
   12e8c:	bl	143e4 <mmk_memcmp@@Base>
   12e90:	cmp	r0, #0
   12e94:	beq	12e9c <main@@Base+0x18c8>
   12e98:	b	12ed4 <main@@Base+0x1900>
   12e9c:	b	12ea0 <main@@Base+0x18cc>
   12ea0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12ea4:	bl	145d4 <mmk_free@@Base>
   12ea8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12eac:	add	r0, r0, #1
   12eb0:	str	r0, [fp, #-88]	; 0xffffffa8
   12eb4:	b	12cf8 <main@@Base+0x1724>
   12eb8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12ebc:	bl	145d4 <mmk_free@@Base>
   12ec0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12ec4:	ldr	r0, [r0]
   12ec8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12ecc:	add	r0, r1, r0
   12ed0:	str	r0, [fp, #-56]	; 0xffffffc8
   12ed4:	b	12ed8 <main@@Base+0x1904>
   12ed8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12edc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12ee0:	bl	137f8 <mmk_mock_params_next@@Base>
   12ee4:	str	r0, [fp, #-60]	; 0xffffffc4
   12ee8:	b	12b18 <main@@Base+0x1544>
   12eec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ef0:	str	r0, [fp, #-108]	; 0xffffff94
   12ef4:	ldr	r0, [fp, #-108]	; 0xffffff94
   12ef8:	movw	r1, #0
   12efc:	cmp	r0, r1
   12f00:	beq	12f24 <main@@Base+0x1950>
   12f04:	ldr	r0, [fp, #-108]	; 0xffffff94
   12f08:	ldr	r0, [r0, #8]
   12f0c:	str	r0, [fp, #-112]	; 0xffffff90
   12f10:	ldr	r0, [fp, #-108]	; 0xffffff94
   12f14:	bl	145d4 <mmk_free@@Base>
   12f18:	ldr	r0, [fp, #-112]	; 0xffffff90
   12f1c:	str	r0, [fp, #-108]	; 0xffffff94
   12f20:	b	12ef4 <main@@Base+0x1920>
   12f24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12f28:	bl	14138 <mmk_verify_set_times@@Base>
   12f2c:	b	12f30 <main@@Base+0x195c>
   12f30:	sub	r0, fp, #24
   12f34:	movw	r1, #20628	; 0x5094
   12f38:	movt	r1, #2
   12f3c:	ldr	r1, [r1]
   12f40:	str	r1, [fp, #-12]
   12f44:	str	r0, [sp, #64]	; 0x40
   12f48:	b	132fc <main@@Base+0x1d28>
   12f4c:	movw	r0, #0
   12f50:	str	r0, [fp, #-132]	; 0xffffff7c
   12f54:	str	r0, [fp, #-128]	; 0xffffff80
   12f58:	str	r0, [fp, #-124]	; 0xffffff84
   12f5c:	ldr	r0, [fp, #-16]
   12f60:	str	r0, [fp, #-120]	; 0xffffff88
   12f64:	sub	r0, fp, #132	; 0x84
   12f68:	str	r0, [fp, #-116]	; 0xffffff8c
   12f6c:	mov	r0, #0
   12f70:	str	r0, [sp, #132]	; 0x84
   12f74:	str	r0, [sp, #128]	; 0x80
   12f78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f7c:	str	r0, [fp, #-28]	; 0xffffffe4
   12f80:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f84:	ldr	r1, [fp, #-16]
   12f88:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12f8c:	add	r3, sp, #132	; 0x84
   12f90:	add	ip, sp, #128	; 0x80
   12f94:	str	r0, [sp, #60]	; 0x3c
   12f98:	mov	r0, r1
   12f9c:	mov	r1, r2
   12fa0:	mov	r2, r3
   12fa4:	mov	r3, ip
   12fa8:	ldr	ip, [sp, #60]	; 0x3c
   12fac:	blx	ip
   12fb0:	str	r0, [sp, #124]	; 0x7c
   12fb4:	sub	r0, fp, #28
   12fb8:	ldr	r1, [sp, #124]	; 0x7c
   12fbc:	cmp	r1, #0
   12fc0:	str	r0, [sp, #56]	; 0x38
   12fc4:	beq	12fe0 <main@@Base+0x1a0c>
   12fc8:	ldr	r0, [sp, #132]	; 0x84
   12fcc:	ldr	r1, [fp, #-116]	; 0xffffff8c
   12fd0:	str	r0, [r1, #4]
   12fd4:	ldr	r0, [sp, #128]	; 0x80
   12fd8:	ldr	r1, [fp, #-116]	; 0xffffff8c
   12fdc:	str	r0, [r1, #8]
   12fe0:	b	12fe4 <main@@Base+0x1a10>
   12fe4:	ldr	r0, [fp, #-116]	; 0xffffff8c
   12fe8:	movw	r1, #16
   12fec:	bl	141f0 <mmk_verify_register_call@@Base>
   12ff0:	bl	13820 <mmk_mock_get_params@@Base>
   12ff4:	str	r0, [sp, #120]	; 0x78
   12ff8:	ldr	r0, [sp, #120]	; 0x78
   12ffc:	movw	r1, #0
   13000:	cmp	r0, r1
   13004:	beq	132e4 <main@@Base+0x1d10>
   13008:	ldr	r0, [sp, #120]	; 0x78
   1300c:	str	r0, [sp, #116]	; 0x74
   13010:	ldr	r0, [sp, #120]	; 0x78
   13014:	ldr	r0, [r0]
   13018:	str	r0, [sp, #112]	; 0x70
   1301c:	ldr	r0, [sp, #112]	; 0x70
   13020:	ldr	r0, [r0, #8]
   13024:	movw	r1, #0
   13028:	cmp	r0, r1
   1302c:	beq	13144 <main@@Base+0x1b70>
   13030:	ldr	r0, [sp, #112]	; 0x70
   13034:	ldr	r0, [r0, #8]
   13038:	str	r0, [sp, #112]	; 0x70
   1303c:	ldr	r0, [sp, #112]	; 0x70
   13040:	ldr	r0, [r0]
   13044:	cmp	r0, #0
   13048:	bne	13050 <main@@Base+0x1a7c>
   1304c:	b	13140 <main@@Base+0x1b6c>
   13050:	ldr	r0, [sp, #112]	; 0x70
   13054:	ldr	r0, [r0]
   13058:	and	r0, r0, #-2147483648	; 0x80000000
   1305c:	cmp	r0, #0
   13060:	beq	130f4 <main@@Base+0x1b20>
   13064:	sub	r0, fp, #16
   13068:	mov	r1, r0
   1306c:	str	r0, [sp, #52]	; 0x34
   13070:	mov	r0, r1
   13074:	ldr	r1, [sp, #52]	; 0x34
   13078:	movw	r2, #4
   1307c:	bl	143e4 <mmk_memcmp@@Base>
   13080:	str	r0, [sp, #108]	; 0x6c
   13084:	ldr	r0, [sp, #108]	; 0x6c
   13088:	cmp	r0, #0
   1308c:	bne	130a8 <main@@Base+0x1ad4>
   13090:	ldr	r0, [sp, #112]	; 0x70
   13094:	ldr	r0, [r0]
   13098:	and	r0, r0, #2
   1309c:	cmp	r0, #0
   130a0:	bne	130a8 <main@@Base+0x1ad4>
   130a4:	b	132d4 <main@@Base+0x1d00>
   130a8:	ldr	r0, [sp, #108]	; 0x6c
   130ac:	cmp	r0, #0
   130b0:	bge	130cc <main@@Base+0x1af8>
   130b4:	ldr	r0, [sp, #112]	; 0x70
   130b8:	ldr	r0, [r0]
   130bc:	and	r0, r0, #4
   130c0:	cmp	r0, #0
   130c4:	bne	130cc <main@@Base+0x1af8>
   130c8:	b	132d4 <main@@Base+0x1d00>
   130cc:	ldr	r0, [sp, #108]	; 0x6c
   130d0:	cmp	r0, #0
   130d4:	ble	130f0 <main@@Base+0x1b1c>
   130d8:	ldr	r0, [sp, #112]	; 0x70
   130dc:	ldr	r0, [r0]
   130e0:	and	r0, r0, #8
   130e4:	cmp	r0, #0
   130e8:	bne	130f0 <main@@Base+0x1b1c>
   130ec:	b	132d4 <main@@Base+0x1d00>
   130f0:	b	1313c <main@@Base+0x1b68>
   130f4:	ldr	r0, [sp, #112]	; 0x70
   130f8:	ldr	r0, [r0]
   130fc:	cmp	r0, #1
   13100:	bne	13138 <main@@Base+0x1b64>
   13104:	ldr	r0, [sp, #112]	; 0x70
   13108:	bl	135f0 <mmk_matcher_get_predicate@@Base>
   1310c:	str	r0, [sp, #104]	; 0x68
   13110:	ldr	r0, [sp, #104]	; 0x68
   13114:	ldr	lr, [fp, #-16]
   13118:	str	r0, [sp, #48]	; 0x30
   1311c:	mov	r0, lr
   13120:	ldr	lr, [sp, #48]	; 0x30
   13124:	blx	lr
   13128:	cmp	r0, #0
   1312c:	bne	13134 <main@@Base+0x1b60>
   13130:	b	132d4 <main@@Base+0x1d00>
   13134:	b	13138 <main@@Base+0x1b64>
   13138:	b	1313c <main@@Base+0x1b68>
   1313c:	b	13140 <main@@Base+0x1b6c>
   13140:	b	1316c <main@@Base+0x1b98>
   13144:	sub	r0, fp, #16
   13148:	ldr	r1, [sp, #116]	; 0x74
   1314c:	add	r1, r1, #28
   13150:	add	r1, r1, #12
   13154:	movw	r2, #4
   13158:	bl	143e4 <mmk_memcmp@@Base>
   1315c:	cmp	r0, #0
   13160:	beq	13168 <main@@Base+0x1b94>
   13164:	b	132d4 <main@@Base+0x1d00>
   13168:	b	1316c <main@@Base+0x1b98>
   1316c:	ldr	r0, [sp, #116]	; 0x74
   13170:	ldr	r0, [r0, #12]
   13174:	cmp	r0, #0
   13178:	beq	13194 <main@@Base+0x1bc0>
   1317c:	ldr	r0, [sp, #116]	; 0x74
   13180:	ldr	r0, [r0, #12]
   13184:	str	r0, [sp, #44]	; 0x2c
   13188:	bl	11494 <__errno_location@plt>
   1318c:	ldr	lr, [sp, #44]	; 0x2c
   13190:	str	lr, [r0]
   13194:	ldr	r0, [sp, #116]	; 0x74
   13198:	ldr	r0, [r0, #20]
   1319c:	movw	r1, #0
   131a0:	cmp	r0, r1
   131a4:	beq	1320c <main@@Base+0x1c38>
   131a8:	ldr	r0, [sp, #116]	; 0x74
   131ac:	ldr	r0, [r0, #16]
   131b0:	movw	r1, #0
   131b4:	cmp	r0, r1
   131b8:	bne	1320c <main@@Base+0x1c38>
   131bc:	b	131c0 <main@@Base+0x1bec>
   131c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   131c4:	str	r0, [fp, #-28]	; 0xffffffe4
   131c8:	ldr	r0, [sp, #116]	; 0x74
   131cc:	ldr	r0, [r0, #20]
   131d0:	ldr	r1, [fp, #-16]
   131d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   131d8:	str	r0, [sp, #40]	; 0x28
   131dc:	mov	r0, r1
   131e0:	mov	r1, r2
   131e4:	ldr	r2, [sp, #40]	; 0x28
   131e8:	blx	r2
   131ec:	str	r0, [sp, #100]	; 0x64
   131f0:	sub	r0, fp, #28
   131f4:	sub	r1, fp, #24
   131f8:	ldr	r2, [sp, #100]	; 0x64
   131fc:	str	r2, [fp, #-12]
   13200:	str	r0, [sp, #36]	; 0x24
   13204:	str	r1, [sp, #32]
   13208:	b	132fc <main@@Base+0x1d28>
   1320c:	ldr	r0, [sp, #116]	; 0x74
   13210:	ldr	r0, [r0, #20]
   13214:	movw	r1, #0
   13218:	cmp	r0, r1
   1321c:	beq	13288 <main@@Base+0x1cb4>
   13220:	ldr	r0, [sp, #116]	; 0x74
   13224:	ldr	r0, [r0, #16]
   13228:	movw	r1, #0
   1322c:	cmp	r0, r1
   13230:	beq	13288 <main@@Base+0x1cb4>
   13234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13238:	str	r0, [fp, #-28]	; 0xffffffe4
   1323c:	ldr	r0, [sp, #116]	; 0x74
   13240:	ldr	r0, [r0, #20]
   13244:	ldr	r1, [fp, #-16]
   13248:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1324c:	str	r0, [sp, #28]
   13250:	mov	r0, r1
   13254:	mov	r1, r2
   13258:	ldr	r2, [sp, #28]
   1325c:	blx	r2
   13260:	sub	r1, fp, #28
   13264:	sub	r2, fp, #24
   13268:	ldr	lr, [sp, #116]	; 0x74
   1326c:	ldr	lr, [lr, #16]
   13270:	ldr	lr, [lr]
   13274:	str	lr, [fp, #-12]
   13278:	str	r0, [sp, #24]
   1327c:	str	r1, [sp, #20]
   13280:	str	r2, [sp, #16]
   13284:	b	132fc <main@@Base+0x1d28>
   13288:	ldr	r0, [sp, #116]	; 0x74
   1328c:	ldr	r0, [r0, #16]
   13290:	movw	r1, #0
   13294:	cmp	r0, r1
   13298:	beq	132b8 <main@@Base+0x1ce4>
   1329c:	sub	r0, fp, #24
   132a0:	ldr	r1, [sp, #116]	; 0x74
   132a4:	ldr	r1, [r1, #16]
   132a8:	ldr	r1, [r1]
   132ac:	str	r1, [fp, #-12]
   132b0:	str	r0, [sp, #12]
   132b4:	b	132fc <main@@Base+0x1d28>
   132b8:	sub	r0, fp, #24
   132bc:	movw	r1, #20628	; 0x5094
   132c0:	movt	r1, #2
   132c4:	ldr	r1, [r1]
   132c8:	str	r1, [fp, #-12]
   132cc:	str	r0, [sp, #8]
   132d0:	b	132fc <main@@Base+0x1d28>
   132d4:	ldr	r0, [sp, #120]	; 0x78
   132d8:	ldr	r0, [r0, #4]
   132dc:	str	r0, [sp, #120]	; 0x78
   132e0:	b	12ff8 <main@@Base+0x1a24>
   132e4:	sub	r0, fp, #24
   132e8:	movw	r1, #20628	; 0x5094
   132ec:	movt	r1, #2
   132f0:	ldr	r1, [r1]
   132f4:	str	r1, [fp, #-12]
   132f8:	str	r0, [sp, #4]
   132fc:	ldr	r0, [fp, #-12]
   13300:	sub	sp, fp, #8
   13304:	pop	{r4, r5, fp, lr}
   13308:	add	sp, sp, #12
   1330c:	bx	lr
   13310:	push	{fp, lr}
   13314:	mov	fp, sp
   13318:	sub	sp, sp, #40	; 0x28
   1331c:	str	r1, [fp, #-8]
   13320:	str	r0, [fp, #-12]
   13324:	str	r2, [fp, #-16]
   13328:	str	r3, [sp, #20]
   1332c:	ldr	r0, [fp, #-12]
   13330:	cmp	r0, #0
   13334:	bgt	13344 <main@@Base+0x1d70>
   13338:	movw	r0, #0
   1333c:	str	r0, [fp, #-4]
   13340:	b	13404 <main@@Base+0x1e30>
   13344:	ldr	r0, [fp, #-12]
   13348:	lsl	r0, r0, #2
   1334c:	bl	145b4 <mmk_malloc@@Base>
   13350:	str	r0, [sp, #16]
   13354:	movw	r0, #0
   13358:	str	r0, [sp, #12]
   1335c:	ldr	r0, [sp, #12]
   13360:	ldr	r1, [fp, #-12]
   13364:	cmp	r0, r1
   13368:	bge	133e4 <main@@Base+0x1e10>
   1336c:	b	13370 <main@@Base+0x1d9c>
   13370:	mov	r0, #8
   13374:	bl	145b4 <mmk_malloc@@Base>
   13378:	ldr	lr, [sp, #16]
   1337c:	ldr	r1, [sp, #12]
   13380:	str	r0, [lr, r1, lsl #2]
   13384:	ldr	r0, [sp, #16]
   13388:	ldr	r1, [sp, #12]
   1338c:	ldr	r0, [r0, r1, lsl #2]
   13390:	mov	r1, #4
   13394:	str	r1, [r0]
   13398:	ldr	r0, [fp, #-8]
   1339c:	add	r1, r0, #4
   133a0:	str	r1, [fp, #-8]
   133a4:	ldr	r0, [r0]
   133a8:	str	r0, [sp, #8]
   133ac:	ldr	r0, [sp, #16]
   133b0:	ldr	r1, [sp, #12]
   133b4:	add	r0, r0, r1, lsl #2
   133b8:	ldr	r0, [r0]
   133bc:	add	r0, r0, #4
   133c0:	add	r1, sp, #8
   133c4:	movw	r2, #4
   133c8:	bl	1442c <mmk_memcpy@@Base>
   133cc:	str	r0, [sp, #4]
   133d0:	b	133d4 <main@@Base+0x1e00>
   133d4:	ldr	r0, [sp, #12]
   133d8:	add	r0, r0, #1
   133dc:	str	r0, [sp, #12]
   133e0:	b	1335c <main@@Base+0x1d88>
   133e4:	ldr	r0, [fp, #-12]
   133e8:	ldr	r1, [fp, #-16]
   133ec:	str	r0, [r1]
   133f0:	ldr	r0, [sp, #16]
   133f4:	ldr	r1, [sp, #20]
   133f8:	str	r0, [r1]
   133fc:	movw	r0, #1
   13400:	str	r0, [fp, #-4]
   13404:	ldr	r0, [fp, #-4]
   13408:	mov	sp, fp
   1340c:	pop	{fp, pc}

00013410 <mmk_init@@Base>:
   13410:	push	{r4, sl, fp, lr}
   13414:	add	fp, sp, #8
   13418:	sub	sp, sp, #8
   1341c:	movw	r4, #20632	; 0x5098
   13420:	movt	r4, #2
   13424:	ldrb	r0, [r4]
   13428:	cmp	r0, #0
   1342c:	bne	13454 <mmk_init@@Base+0x44>
   13430:	bl	13838 <plt_init_ctx@@Base>
   13434:	movw	r1, #20636	; 0x509c
   13438:	movt	r1, #2
   1343c:	str	r0, [r1]
   13440:	cmn	r0, #1
   13444:	beq	1345c <mmk_init@@Base+0x4c>
   13448:	bl	145e4 <mmk_init_vital_functions@@Base>
   1344c:	mov	r0, #1
   13450:	strb	r0, [r4]
   13454:	sub	sp, fp, #8
   13458:	pop	{r4, sl, fp, pc}
   1345c:	movw	r0, #20592	; 0x5070
   13460:	movt	r0, #2
   13464:	ldr	r0, [r0]
   13468:	movw	r1, #19151	; 0x4acf
   1346c:	movt	r1, #1
   13470:	str	r1, [sp]
   13474:	movw	r1, #18522	; 0x485a
   13478:	movt	r1, #1
   1347c:	movw	r2, #19095	; 0x4a97
   13480:	movt	r2, #1
   13484:	mov	r3, #45	; 0x2d
   13488:	bl	11488 <fprintf@plt>
   1348c:	bl	114c4 <abort@plt>

00013490 <mmk_plt_ctx@@Base>:
   13490:	movw	r0, #20632	; 0x5098
   13494:	movt	r0, #2
   13498:	ldrb	r0, [r0]
   1349c:	cmp	r0, #0
   134a0:	movwne	r0, #20636	; 0x509c
   134a4:	movtne	r0, #2
   134a8:	ldrne	r0, [r0]
   134ac:	bxne	lr
   134b0:	push	{fp, lr}
   134b4:	mov	fp, sp
   134b8:	sub	sp, sp, #8
   134bc:	movw	r0, #20592	; 0x5070
   134c0:	movt	r0, #2
   134c4:	ldr	r0, [r0]
   134c8:	movw	r1, #19174	; 0x4ae6
   134cc:	movt	r1, #1
   134d0:	str	r1, [sp]
   134d4:	movw	r1, #18522	; 0x485a
   134d8:	movt	r1, #1
   134dc:	movw	r2, #19095	; 0x4a97
   134e0:	movt	r2, #1
   134e4:	mov	r3, #54	; 0x36
   134e8:	bl	11488 <fprintf@plt>
   134ec:	bl	114c4 <abort@plt>

000134f0 <mmk_reset@@Base>:
   134f0:	cmp	r0, #0
   134f4:	bxeq	lr
   134f8:	push	{fp, lr}
   134fc:	mov	fp, sp
   13500:	bl	14004 <mmk_ask_ctx@@Base>
   13504:	bl	13dac <mmk_stub_context@@Base>
   13508:	pop	{fp, lr}
   1350c:	b	13758 <mmk_mock_destroy_internal@@Base>

00013510 <mmk_matcher_init@@Base>:
   13510:	push	{r4, sl, fp, lr}
   13514:	add	fp, sp, #8
   13518:	mov	r4, r0
   1351c:	mov	r0, #12
   13520:	bl	145b4 <mmk_malloc@@Base>
   13524:	mov	r1, r0
   13528:	mov	r0, #0
   1352c:	str	r4, [r1]
   13530:	str	r0, [r1, #4]
   13534:	str	r0, [r1, #8]
   13538:	ldr	r2, [pc, #8]	; 13548 <mmk_matcher_init@@Base+0x38>
   1353c:	bl	14840 <__libc_csu_fini@@Base+0x8>
   13540:	str	r1, [r0, r2]
   13544:	pop	{r4, sl, fp, pc}
   13548:	andeq	r0, r0, r8

0001354c <mmk_matcher_term@@Base>:
   1354c:	push	{fp, lr}
   13550:	mov	fp, sp
   13554:	ldr	r1, [pc, #12]	; 13568 <mmk_matcher_term@@Base+0x1c>
   13558:	mov	r2, #0
   1355c:	bl	14840 <__libc_csu_fini@@Base+0x8>
   13560:	str	r2, [r0, r1]
   13564:	pop	{fp, pc}
   13568:	andeq	r0, r0, r8

0001356c <mmk_matcher_ctx@@Base>:
   1356c:	push	{fp, lr}
   13570:	mov	fp, sp
   13574:	ldr	r1, [pc, #8]	; 13584 <mmk_matcher_ctx@@Base+0x18>
   13578:	bl	14840 <__libc_csu_fini@@Base+0x8>
   1357c:	ldr	r0, [r0, r1]
   13580:	pop	{fp, pc}
   13584:	andeq	r0, r0, r8

00013588 <mmk_matcher_add@@Base>:
   13588:	push	{r4, r5, fp, lr}
   1358c:	add	fp, sp, #8
   13590:	mov	r4, r1
   13594:	mov	r5, r0
   13598:	mov	r0, #12
   1359c:	bl	145b4 <mmk_malloc@@Base>
   135a0:	mov	r1, r0
   135a4:	ldr	r2, [pc, #64]	; 135ec <mmk_matcher_add@@Base+0x64>
   135a8:	bl	14840 <__libc_csu_fini@@Base+0x8>
   135ac:	ldr	r0, [r0, r2]
   135b0:	mov	r2, #0
   135b4:	str	r5, [r1]
   135b8:	str	r4, [r1, #4]
   135bc:	str	r2, [r1, #8]
   135c0:	mov	r2, r0
   135c4:	ldr	r0, [r0, #8]
   135c8:	cmp	r0, #0
   135cc:	beq	135dc <mmk_matcher_add@@Base+0x54>
   135d0:	ldr	r3, [r0, #4]
   135d4:	cmp	r3, r4
   135d8:	bcc	135c0 <mmk_matcher_add@@Base+0x38>
   135dc:	ldr	r0, [r2, #8]
   135e0:	str	r0, [r1, #8]
   135e4:	str	r1, [r2, #8]
   135e8:	pop	{r4, r5, fp, pc}
   135ec:	andeq	r0, r0, r8

000135f0 <mmk_matcher_get_predicate@@Base>:
   135f0:	add	r0, r0, #12
   135f4:	bx	lr

000135f8 <mmk_mock_create_internal@@Base>:
   135f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   135fc:	add	fp, sp, #24
   13600:	sub	sp, sp, #8
   13604:	mov	r8, r1
   13608:	mov	r9, r0
   1360c:	bl	13410 <mmk_init@@Base>
   13610:	mov	r0, #20
   13614:	bl	145b4 <mmk_malloc@@Base>
   13618:	cmp	r0, #0
   1361c:	beq	13704 <mmk_mock_create_internal@@Base+0x10c>
   13620:	mov	r4, r0
   13624:	vmov.i32	q8, #0	; 0x00000000
   13628:	vst1.32	{d16-d17}, [r0]!
   1362c:	mov	r1, #0
   13630:	str	r1, [r0]
   13634:	mov	r0, r9
   13638:	mov	r1, #64	; 0x40
   1363c:	bl	144b0 <mmk_strchr@@Base>
   13640:	mov	r5, r0
   13644:	cmp	r0, #0
   13648:	beq	13654 <mmk_mock_create_internal@@Base+0x5c>
   1364c:	sub	r6, r5, r9
   13650:	b	13660 <mmk_mock_create_internal@@Base+0x68>
   13654:	mov	r0, r9
   13658:	bl	14548 <mmk_strlen@@Base>
   1365c:	mov	r6, r0
   13660:	add	r0, r6, #1
   13664:	bl	145b4 <mmk_malloc@@Base>
   13668:	mov	r7, r0
   1366c:	mov	r1, r9
   13670:	mov	r2, r6
   13674:	bl	1450c <mmk_strncpy@@Base>
   13678:	mov	r0, #0
   1367c:	strb	r0, [r7, r6]
   13680:	cmp	r5, #0
   13684:	beq	136ac <mmk_mock_create_internal@@Base+0xb4>
   13688:	add	r0, r5, #1
   1368c:	movw	r1, #19251	; 0x4b33
   13690:	movt	r1, #1
   13694:	mov	r2, #4
   13698:	bl	1444c <mmk_strneq@@Base>
   1369c:	mov	r5, r0
   136a0:	cmp	r0, #0
   136a4:	movwne	r5, #1
   136a8:	b	136b0 <mmk_mock_create_internal@@Base+0xb8>
   136ac:	mov	r5, #1
   136b0:	mov	r0, r9
   136b4:	mov	r1, r8
   136b8:	mov	r2, r4
   136bc:	bl	13f50 <mmk_stub_create@@Base>
   136c0:	str	r0, [r4, #4]
   136c4:	cmp	r0, #0
   136c8:	beq	13738 <mmk_mock_create_internal@@Base+0x140>
   136cc:	cmp	r5, #0
   136d0:	bne	136ec <mmk_mock_create_internal@@Base+0xf4>
   136d4:	mov	r0, r7
   136d8:	mov	r1, r8
   136dc:	mov	r2, r4
   136e0:	bl	13f50 <mmk_stub_create@@Base>
   136e4:	ldr	r1, [r4, #4]
   136e8:	str	r0, [r1, #36]	; 0x24
   136ec:	mov	r0, r7
   136f0:	bl	145d4 <mmk_free@@Base>
   136f4:	ldr	r0, [r4, #4]
   136f8:	ldr	r0, [r0, #32]
   136fc:	sub	sp, fp, #24
   13700:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13704:	movw	r0, #20592	; 0x5070
   13708:	movt	r0, #2
   1370c:	ldr	r0, [r0]
   13710:	movw	r1, #19247	; 0x4b2f
   13714:	movt	r1, #1
   13718:	str	r1, [sp]
   1371c:	movw	r1, #18522	; 0x485a
   13720:	movt	r1, #1
   13724:	movw	r2, #19191	; 0x4af7
   13728:	movt	r2, #1
   1372c:	mov	r3, #36	; 0x24
   13730:	bl	11488 <fprintf@plt>
   13734:	bl	114c4 <abort@plt>
   13738:	movw	r0, #20592	; 0x5070
   1373c:	movt	r0, #2
   13740:	ldr	r0, [r0]
   13744:	movw	r1, #19256	; 0x4b38
   13748:	movt	r1, #1
   1374c:	mov	r2, r9
   13750:	bl	11488 <fprintf@plt>
   13754:	bl	114c4 <abort@plt>

00013758 <mmk_mock_destroy_internal@@Base>:
   13758:	push	{r4, r5, r6, r7, fp, lr}
   1375c:	add	fp, sp, #16
   13760:	mov	r4, r0
   13764:	ldr	r0, [r0, #4]
   13768:	cmp	r0, #0
   1376c:	beq	13784 <mmk_mock_destroy_internal@@Base+0x2c>
   13770:	ldr	r5, [r0, #36]	; 0x24
   13774:	bl	13fe8 <mmk_stub_destroy@@Base>
   13778:	cmp	r5, #0
   1377c:	mov	r0, r5
   13780:	bne	13770 <mmk_mock_destroy_internal@@Base+0x18>
   13784:	ldr	r0, [r4, #8]
   13788:	bl	145d4 <mmk_free@@Base>
   1378c:	ldr	r5, [r4]
   13790:	cmp	r5, #0
   13794:	beq	137cc <mmk_mock_destroy_internal@@Base+0x74>
   13798:	ldm	r5, {r0, r6}
   1379c:	cmp	r0, #0
   137a0:	beq	137b8 <mmk_mock_destroy_internal@@Base+0x60>
   137a4:	ldr	r7, [r0, #8]
   137a8:	bl	145d4 <mmk_free@@Base>
   137ac:	cmp	r7, #0
   137b0:	mov	r0, r7
   137b4:	bne	137a4 <mmk_mock_destroy_internal@@Base+0x4c>
   137b8:	mov	r0, r5
   137bc:	bl	145d4 <mmk_free@@Base>
   137c0:	cmp	r6, #0
   137c4:	mov	r5, r6
   137c8:	bne	13798 <mmk_mock_destroy_internal@@Base+0x40>
   137cc:	mov	r0, r4
   137d0:	pop	{r4, r5, r6, r7, fp, lr}
   137d4:	b	145d4 <mmk_free@@Base>

000137d8 <mmk_mock_params_begin@@Base>:
   137d8:	ldr	r1, [r0, #8]
   137dc:	cmp	r1, #0
   137e0:	moveq	r0, #0
   137e4:	bxeq	lr
   137e8:	ldr	r0, [r0, #12]
   137ec:	cmp	r0, #0
   137f0:	addne	r0, r1, #4
   137f4:	bx	lr

000137f8 <mmk_mock_params_next@@Base>:
   137f8:	ldr	r2, [r1, #-4]
   137fc:	add	r1, r1, r2
   13800:	add	r1, r1, #4
   13804:	ldr	r2, [r0, #8]
   13808:	ldr	r0, [r0, #12]
   1380c:	add	r0, r2, r0
   13810:	cmp	r1, r0
   13814:	movcs	r1, #0
   13818:	mov	r0, r1
   1381c:	bx	lr

00013820 <mmk_mock_get_params@@Base>:
   13820:	push	{fp, lr}
   13824:	mov	fp, sp
   13828:	bl	13f34 <mmk_ctx@@Base>
   1382c:	bl	13dac <mmk_stub_context@@Base>
   13830:	ldr	r0, [r0]
   13834:	pop	{fp, pc}

00013838 <plt_init_ctx@@Base>:
   13838:	movw	r0, #20588	; 0x506c
   1383c:	movt	r0, #2
   13840:	ldr	r1, [r0]
   13844:	cmn	r1, #1
   13848:	movweq	r1, #20596	; 0x5074
   1384c:	movteq	r1, #2
   13850:	streq	r1, [r0]
   13854:	ldr	r0, [r0]
   13858:	bx	lr

0001385c <plt_get_lib@@Base>:
   1385c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13860:	add	fp, sp, #28
   13864:	sub	sp, sp, #20
   13868:	mov	r7, r0
   1386c:	movw	sl, #19251	; 0x4b33
   13870:	movt	sl, #1
   13874:	cmp	r1, #0
   13878:	movne	sl, r1
   1387c:	movw	r1, #19307	; 0x4b6b
   13880:	movt	r1, #1
   13884:	mov	r0, sl
   13888:	mov	r2, #4
   1388c:	bl	114b8 <strncmp@plt>
   13890:	cmp	r0, #0
   13894:	beq	138fc <plt_get_lib@@Base+0xa0>
   13898:	movw	r1, #19312	; 0x4b70
   1389c:	movt	r1, #1
   138a0:	mov	r0, sl
   138a4:	mov	r2, #5
   138a8:	bl	114b8 <strncmp@plt>
   138ac:	cmp	r0, #0
   138b0:	beq	13904 <plt_get_lib@@Base+0xa8>
   138b4:	movw	r1, #19318	; 0x4b76
   138b8:	movt	r1, #1
   138bc:	mov	r0, sl
   138c0:	mov	r2, #4
   138c4:	bl	114b8 <strncmp@plt>
   138c8:	cmp	r0, #0
   138cc:	beq	1390c <plt_get_lib@@Base+0xb0>
   138d0:	movw	r1, #19251	; 0x4b33
   138d4:	movt	r1, #1
   138d8:	mov	r0, sl
   138dc:	bl	113e0 <strcmp@plt>
   138e0:	cmp	r0, #0
   138e4:	bne	13a6c <plt_get_lib@@Base+0x210>
   138e8:	mov	r9, #0
   138ec:	movw	sl, #19391	; 0x4bbf
   138f0:	movt	sl, #1
   138f4:	mov	r8, sl
   138f8:	b	13920 <plt_get_lib@@Base+0xc4>
   138fc:	mov	r9, #1
   13900:	b	13910 <plt_get_lib@@Base+0xb4>
   13904:	mov	r9, #2
   13908:	b	13910 <plt_get_lib@@Base+0xb4>
   1390c:	mov	r9, #3
   13910:	mov	r0, sl
   13914:	mov	r1, #58	; 0x3a
   13918:	bl	1147c <strchr@plt>
   1391c:	add	r8, r0, #1
   13920:	mov	r0, r8
   13924:	bl	11464 <strlen@plt>
   13928:	mov	r4, r0
   1392c:	movw	r1, #19480	; 0x4c18
   13930:	movt	r1, #1
   13934:	mov	r0, r8
   13938:	bl	113e0 <strcmp@plt>
   1393c:	mov	r5, r0
   13940:	ldr	r7, [r7, #4]
   13944:	mov	r0, #0
   13948:	cmp	r7, #0
   1394c:	beq	13a58 <plt_get_lib@@Base+0x1fc>
   13950:	add	r0, r4, #8
   13954:	orr	r1, r9, #2
   13958:	str	r1, [fp, #-36]	; 0xffffffdc
   1395c:	str	r0, [fp, #-40]	; 0xffffffd8
   13960:	add	r0, r0, #7
   13964:	bic	r0, r0, #7
   13968:	str	r0, [fp, #-44]	; 0xffffffd4
   1396c:	cmp	r9, #1
   13970:	bne	139c0 <plt_get_lib@@Base+0x164>
   13974:	cmp	r5, #0
   13978:	beq	13a04 <plt_get_lib@@Base+0x1a8>
   1397c:	mov	r6, sp
   13980:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13984:	sub	r4, sp, r0
   13988:	mov	sp, r4
   1398c:	mov	r0, r4
   13990:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13994:	movw	r2, #19410	; 0x4bd2
   13998:	movt	r2, #1
   1399c:	mov	r3, r8
   139a0:	bl	114a0 <snprintf@plt>
   139a4:	ldr	r0, [r7, #4]
   139a8:	mov	r1, r4
   139ac:	bl	113d4 <strstr@plt>
   139b0:	mov	sp, r6
   139b4:	cmp	r0, #0
   139b8:	beq	13a48 <plt_get_lib@@Base+0x1ec>
   139bc:	b	13a60 <plt_get_lib@@Base+0x204>
   139c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   139c4:	cmp	r0, #2
   139c8:	bne	139e4 <plt_get_lib@@Base+0x188>
   139cc:	ldr	r1, [r7, #4]
   139d0:	mov	r0, sl
   139d4:	bl	113e0 <strcmp@plt>
   139d8:	cmp	r0, #0
   139dc:	bne	13a48 <plt_get_lib@@Base+0x1ec>
   139e0:	b	13a60 <plt_get_lib@@Base+0x204>
   139e4:	cmp	r9, #3
   139e8:	bne	13a48 <plt_get_lib@@Base+0x1ec>
   139ec:	mov	r0, r7
   139f0:	mov	r1, r8
   139f4:	bl	13acc <plt_get_lib@@Base+0x270>
   139f8:	cmp	r0, #0
   139fc:	beq	13a48 <plt_get_lib@@Base+0x1ec>
   13a00:	b	13a60 <plt_get_lib@@Base+0x204>
   13a04:	mov	r4, r5
   13a08:	mov	r5, sl
   13a0c:	ldr	sl, [r7, #4]
   13a10:	mov	r0, sl
   13a14:	movw	r1, #19392	; 0x4bc0
   13a18:	movt	r1, #1
   13a1c:	bl	113d4 <strstr@plt>
   13a20:	cmp	r0, #0
   13a24:	bne	13a60 <plt_get_lib@@Base+0x204>
   13a28:	mov	r0, sl
   13a2c:	movw	r1, #19401	; 0x4bc9
   13a30:	movt	r1, #1
   13a34:	bl	113d4 <strstr@plt>
   13a38:	cmp	r0, #0
   13a3c:	mov	sl, r5
   13a40:	mov	r5, r4
   13a44:	bne	13a60 <plt_get_lib@@Base+0x204>
   13a48:	ldr	r7, [r7, #12]
   13a4c:	cmp	r7, #0
   13a50:	bne	1396c <plt_get_lib@@Base+0x110>
   13a54:	mov	r0, #0
   13a58:	sub	sp, fp, #28
   13a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a60:	mov	r0, r7
   13a64:	sub	sp, fp, #28
   13a68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a6c:	mov	r4, sl
   13a70:	mov	r0, sl
   13a74:	mov	r1, #58	; 0x3a
   13a78:	bl	1147c <strchr@plt>
   13a7c:	cmp	r0, #0
   13a80:	bne	13aa4 <plt_get_lib@@Base+0x248>
   13a84:	movw	r0, #20592	; 0x5070
   13a88:	movt	r0, #2
   13a8c:	ldr	r0, [r0]
   13a90:	movw	r1, #19357	; 0x4b9d
   13a94:	movt	r1, #1
   13a98:	mov	r2, r4
   13a9c:	bl	11488 <fprintf@plt>
   13aa0:	bl	114c4 <abort@plt>
   13aa4:	rsb	r1, r4, #1
   13aa8:	add	r2, r1, r0
   13aac:	movw	r0, #20592	; 0x5070
   13ab0:	movt	r0, #2
   13ab4:	ldr	r0, [r0]
   13ab8:	movw	r1, #19323	; 0x4b7b
   13abc:	movt	r1, #1
   13ac0:	mov	r3, r4
   13ac4:	bl	11488 <fprintf@plt>
   13ac8:	bl	114c4 <abort@plt>
   13acc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ad0:	add	fp, sp, #28
   13ad4:	sub	sp, sp, #12
   13ad8:	mov	r8, r1
   13adc:	mov	r5, r0
   13ae0:	mov	r1, #6
   13ae4:	bl	13c88 <plt_get_real_fn@@Base+0x50>
   13ae8:	mov	r9, r0
   13aec:	mov	r0, r5
   13af0:	mov	r1, #5
   13af4:	bl	13c88 <plt_get_real_fn@@Base+0x50>
   13af8:	mov	sl, r0
   13afc:	mov	r0, r5
   13b00:	mov	r1, #20
   13b04:	bl	13ce4 <plt_get_real_fn@@Base+0xac>
   13b08:	mov	r7, r0
   13b0c:	mov	r0, r5
   13b10:	mov	r1, #23
   13b14:	bl	13c88 <plt_get_real_fn@@Base+0x50>
   13b18:	mov	r4, r0
   13b1c:	mov	r0, r5
   13b20:	mov	r1, #2
   13b24:	bl	13ce4 <plt_get_real_fn@@Base+0xac>
   13b28:	mov	r6, r0
   13b2c:	add	r1, r7, #2
   13b30:	mov	r0, r5
   13b34:	bl	13ce4 <plt_get_real_fn@@Base+0xac>
   13b38:	mov	r1, r0
   13b3c:	mov	r0, #0
   13b40:	cmp	r9, #0
   13b44:	cmpne	sl, #0
   13b48:	beq	13b64 <plt_get_lib@@Base+0x308>
   13b4c:	cmp	r7, #0
   13b50:	cmpne	r4, #0
   13b54:	beq	13b64 <plt_get_lib@@Base+0x308>
   13b58:	cmp	r6, #0
   13b5c:	cmpne	r1, #0
   13b60:	bne	13b6c <plt_get_lib@@Base+0x310>
   13b64:	sub	sp, fp, #28
   13b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b6c:	stm	sp, {r4, r6}
   13b70:	str	r1, [sp, #8]
   13b74:	ldr	r4, [r5]
   13b78:	mov	r0, sp
   13b7c:	mov	r1, r9
   13b80:	mov	r2, sl
   13b84:	mov	r3, r8
   13b88:	bl	13d24 <plt_get_real_fn@@Base+0xec>
   13b8c:	cmp	r0, #0
   13b90:	addne	r0, r0, r4
   13b94:	sub	sp, fp, #28
   13b98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013b9c <plt_get_offsets@@Base>:
   13b9c:	push	{r4, r5, fp, lr}
   13ba0:	add	fp, sp, #8
   13ba4:	mov	r4, r2
   13ba8:	bl	13acc <plt_get_lib@@Base+0x270>
   13bac:	cmp	r0, #0
   13bb0:	moveq	r0, #0
   13bb4:	popeq	{r4, r5, fp, pc}
   13bb8:	mov	r5, r0
   13bbc:	mov	r0, #8
   13bc0:	bl	145b4 <mmk_malloc@@Base>
   13bc4:	mov	r1, #1
   13bc8:	str	r1, [r4]
   13bcc:	mov	r1, #0
   13bd0:	str	r5, [r0]
   13bd4:	str	r1, [r0, #4]
   13bd8:	pop	{r4, r5, fp, pc}

00013bdc <plt_set_offsets@@Base>:
   13bdc:	cmp	r1, #0
   13be0:	bxeq	lr
   13be4:	add	r0, r0, #4
   13be8:	ldr	r3, [r0]
   13bec:	cmp	r3, #0
   13bf0:	ldreq	r3, [r0, #-4]
   13bf4:	ldreq	r3, [r3]
   13bf8:	streq	r3, [r0]
   13bfc:	ldr	r3, [r0, #-4]
   13c00:	str	r2, [r3]
   13c04:	subs	r1, r1, #1
   13c08:	add	r0, r0, #8
   13c0c:	bne	13be8 <plt_set_offsets@@Base+0xc>
   13c10:	bx	lr

00013c14 <plt_reset_offsets@@Base>:
   13c14:	cmp	r1, #0
   13c18:	bxeq	lr
   13c1c:	add	r0, r0, #4
   13c20:	ldmda	r0, {r2, r3}
   13c24:	str	r3, [r2]
   13c28:	add	r0, r0, #8
   13c2c:	subs	r1, r1, #1
   13c30:	bne	13c20 <plt_reset_offsets@@Base+0xc>
   13c34:	bx	lr

00013c38 <plt_get_real_fn@@Base>:
   13c38:	push	{r4, r5, r6, sl, fp, lr}
   13c3c:	add	fp, sp, #16
   13c40:	ldr	r6, [r0, #4]
   13c44:	mov	r4, #0
   13c48:	cmp	r6, #0
   13c4c:	beq	13c74 <plt_get_real_fn@@Base+0x3c>
   13c50:	mov	r5, r1
   13c54:	mov	r0, r6
   13c58:	mov	r1, r5
   13c5c:	bl	13acc <plt_get_lib@@Base+0x270>
   13c60:	cmp	r0, #0
   13c64:	bne	13c7c <plt_get_real_fn@@Base+0x44>
   13c68:	ldr	r6, [r6, #12]
   13c6c:	cmp	r6, #0
   13c70:	bne	13c54 <plt_get_real_fn@@Base+0x1c>
   13c74:	mov	r0, r4
   13c78:	pop	{r4, r5, r6, sl, fp, pc}
   13c7c:	ldr	r4, [r0]
   13c80:	mov	r0, r4
   13c84:	pop	{r4, r5, r6, sl, fp, pc}
   13c88:	push	{fp, lr}
   13c8c:	mov	fp, sp
   13c90:	mov	r2, r0
   13c94:	ldr	lr, [r0, #8]
   13c98:	ldr	r3, [lr]
   13c9c:	mov	r0, #0
   13ca0:	cmp	r3, #0
   13ca4:	popeq	{fp, pc}
   13ca8:	ldr	ip, [r2]
   13cac:	add	r2, lr, #4
   13cb0:	cmp	r3, r1
   13cb4:	beq	13cd0 <plt_get_real_fn@@Base+0x98>
   13cb8:	add	lr, r2, #8
   13cbc:	ldr	r3, [r2, #4]
   13cc0:	cmp	r3, #0
   13cc4:	mov	r2, lr
   13cc8:	bne	13cb0 <plt_get_real_fn@@Base+0x78>
   13ccc:	pop	{fp, pc}
   13cd0:	ldr	r0, [r2]
   13cd4:	cmp	r0, ip
   13cd8:	addcc	r0, ip, r0
   13cdc:	popcc	{fp, pc}
   13ce0:	pop	{fp, pc}
   13ce4:	ldr	r3, [r0, #8]
   13ce8:	ldr	r2, [r3]
   13cec:	mov	r0, #0
   13cf0:	cmp	r2, #0
   13cf4:	bxeq	lr
   13cf8:	add	r3, r3, #4
   13cfc:	cmp	r2, r1
   13d00:	beq	13d1c <plt_get_real_fn@@Base+0xe4>
   13d04:	add	ip, r3, #8
   13d08:	ldr	r2, [r3, #4]
   13d0c:	cmp	r2, #0
   13d10:	mov	r3, ip
   13d14:	bne	13cfc <plt_get_real_fn@@Base+0xc4>
   13d18:	bx	lr
   13d1c:	ldr	r0, [r3]
   13d20:	bx	lr
   13d24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d28:	add	fp, sp, #28
   13d2c:	sub	sp, sp, #4
   13d30:	mov	sl, r1
   13d34:	mov	r7, r0
   13d38:	ldmib	r0, {r1, r4}
   13d3c:	mov	r0, #0
   13d40:	cmp	r4, r1
   13d44:	bhi	13da4 <plt_get_real_fn@@Base+0x16c>
   13d48:	mov	r8, r3
   13d4c:	mov	r9, r2
   13d50:	ldr	r5, [r7]
   13d54:	mov	r6, #0
   13d58:	ldr	r0, [r5, #4]
   13d5c:	mvn	r1, #-268435441	; 0xf000000f
   13d60:	and	r0, r1, r0, lsr #4
   13d64:	ldr	r0, [sl, r0]
   13d68:	add	r0, r9, r0
   13d6c:	mov	r1, r8
   13d70:	bl	113e0 <strcmp@plt>
   13d74:	cmp	r0, #0
   13d78:	beq	13da0 <plt_get_real_fn@@Base+0x168>
   13d7c:	add	r5, r5, r4
   13d80:	add	r6, r6, #1
   13d84:	ldmib	r7, {r0, r4}
   13d88:	udiv	r0, r0, r4
   13d8c:	cmp	r6, r0
   13d90:	bcc	13d58 <plt_get_real_fn@@Base+0x120>
   13d94:	mov	r0, #0
   13d98:	sub	sp, fp, #28
   13d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13da0:	ldr	r0, [r5]
   13da4:	sub	sp, fp, #28
   13da8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013dac <mmk_stub_context@@Base>:
   13dac:	cmp	r0, #0
   13db0:	ldrne	r0, [r0, #12]
   13db4:	moveq	r0, #0
   13db8:	bx	lr

00013dbc <mmk_stub_create_static@@Base>:
   13dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dc0:	add	fp, sp, #28
   13dc4:	sub	sp, sp, #4
   13dc8:	mov	r9, r3
   13dcc:	mov	r8, r2
   13dd0:	mov	r6, r1
   13dd4:	mov	r4, r0
   13dd8:	ldr	r1, [pc, #260]	; 13ee4 <mmk_stub_create_static@@Base+0x128>
   13ddc:	mov	r7, #0
   13de0:	bl	14840 <__libc_csu_fini@@Base+0x8>
   13de4:	str	r7, [r0, r1]
   13de8:	ldr	r1, [pc, #248]	; 13ee8 <mmk_stub_create_static@@Base+0x12c>
   13dec:	strb	r7, [r0, r1]
   13df0:	mov	r0, r6
   13df4:	bl	14548 <mmk_strlen@@Base>
   13df8:	add	r0, r0, #1
   13dfc:	bl	145b4 <mmk_malloc@@Base>
   13e00:	cmp	r0, #0
   13e04:	beq	13ecc <mmk_stub_create_static@@Base+0x110>
   13e08:	mov	r5, r0
   13e0c:	mov	r1, r6
   13e10:	bl	144e0 <mmk_strcpy@@Base>
   13e14:	mov	r0, r5
   13e18:	mov	r1, #64	; 0x40
   13e1c:	bl	144b0 <mmk_strchr@@Base>
   13e20:	cmp	r0, #0
   13e24:	movne	r1, #0
   13e28:	strbne	r1, [r0], #1
   13e2c:	movne	r7, r0
   13e30:	bl	13490 <mmk_plt_ctx@@Base>
   13e34:	mov	r1, r7
   13e38:	bl	1385c <plt_get_lib@@Base>
   13e3c:	cmp	r0, #0
   13e40:	beq	13ed4 <mmk_stub_create_static@@Base+0x118>
   13e44:	mov	r1, #0
   13e48:	str	r1, [sp]
   13e4c:	mov	r2, sp
   13e50:	mov	r1, r5
   13e54:	bl	13b9c <plt_get_offsets@@Base>
   13e58:	mvn	r6, #1
   13e5c:	cmp	r0, #0
   13e60:	movne	sl, r0
   13e64:	ldrne	r0, [sp]
   13e68:	cmpne	r0, #0
   13e6c:	beq	13ed8 <mmk_stub_create_static@@Base+0x11c>
   13e70:	movw	r1, #16148	; 0x3f14
   13e74:	movt	r1, #1
   13e78:	movw	r2, #16108	; 0x3eec
   13e7c:	movt	r2, #1
   13e80:	movw	r3, #16180	; 0x3f34
   13e84:	movt	r3, #1
   13e88:	str	r2, [r4]
   13e8c:	stmib	r4, {r1, r3, r9}
   13e90:	add	r1, r4, #16
   13e94:	stm	r1, {r5, r7, sl}
   13e98:	str	r0, [r4, #28]
   13e9c:	mov	r6, #0
   13ea0:	str	r6, [r4, #32]
   13ea4:	str	r6, [r4, #36]	; 0x24
   13ea8:	mov	r0, r4
   13eac:	mov	r1, r8
   13eb0:	bl	1402c <create_trampoline@@Base>
   13eb4:	mov	r2, r0
   13eb8:	str	r0, [r4, #32]
   13ebc:	ldr	r1, [sp]
   13ec0:	mov	r0, sl
   13ec4:	bl	13bdc <plt_set_offsets@@Base>
   13ec8:	b	13ed8 <mmk_stub_create_static@@Base+0x11c>
   13ecc:	mvn	r6, #11
   13ed0:	b	13ed8 <mmk_stub_create_static@@Base+0x11c>
   13ed4:	mvn	r6, #1
   13ed8:	mov	r0, r6
   13edc:	sub	sp, fp, #28
   13ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ee4:	andeq	r0, r0, r0, lsl r0
   13ee8:	andeq	r0, r0, ip

00013eec <mmk_ctx_asked@@Base>:
   13eec:	push	{fp, lr}
   13ef0:	mov	fp, sp
   13ef4:	ldr	r2, [pc, #20]	; 13f10 <mmk_ctx_asked@@Base+0x24>
   13ef8:	bl	14840 <__libc_csu_fini@@Base+0x8>
   13efc:	ldrb	r1, [r0, r2]
   13f00:	mov	r3, #0
   13f04:	strb	r3, [r0, r2]
   13f08:	mov	r0, r1
   13f0c:	pop	{fp, pc}
   13f10:	andeq	r0, r0, ip

00013f14 <mmk_set_ctx@@Base>:
   13f14:	push	{fp, lr}
   13f18:	mov	fp, sp
   13f1c:	mov	r1, r0
   13f20:	ldr	r2, [pc, #8]	; 13f30 <mmk_set_ctx@@Base+0x1c>
   13f24:	bl	14840 <__libc_csu_fini@@Base+0x8>
   13f28:	str	r1, [r0, r2]
   13f2c:	pop	{fp, pc}
   13f30:	andeq	r0, r0, r0, lsl r0

00013f34 <mmk_ctx@@Base>:
   13f34:	push	{fp, lr}
   13f38:	mov	fp, sp
   13f3c:	ldr	r1, [pc, #8]	; 13f4c <mmk_ctx@@Base+0x18>
   13f40:	bl	14840 <__libc_csu_fini@@Base+0x8>
   13f44:	ldr	r0, [r0, r1]
   13f48:	pop	{fp, pc}
   13f4c:	andeq	r0, r0, r0, lsl r0

00013f50 <mmk_stub_create@@Base>:
   13f50:	push	{r4, r5, r6, r7, fp, lr}
   13f54:	add	fp, sp, #16
   13f58:	mov	r5, r2
   13f5c:	mov	r6, r1
   13f60:	mov	r7, r0
   13f64:	bl	13410 <mmk_init@@Base>
   13f68:	mov	r0, #40	; 0x28
   13f6c:	bl	145b4 <mmk_malloc@@Base>
   13f70:	mov	r4, r0
   13f74:	mov	r1, r7
   13f78:	mov	r2, r6
   13f7c:	mov	r3, r5
   13f80:	bl	13dbc <mmk_stub_create_static@@Base>
   13f84:	cmn	r0, #1
   13f88:	ble	13f94 <mmk_stub_create@@Base+0x44>
   13f8c:	mov	r0, r4
   13f90:	pop	{r4, r5, r6, r7, fp, pc}
   13f94:	mov	r5, r0
   13f98:	mov	r0, r4
   13f9c:	bl	145d4 <mmk_free@@Base>
   13fa0:	bl	11494 <__errno_location@plt>
   13fa4:	str	r5, [r0]
   13fa8:	mov	r4, #0
   13fac:	mov	r0, r4
   13fb0:	pop	{r4, r5, r6, r7, fp, pc}

00013fb4 <mmk_stub_destroy_static@@Base>:
   13fb4:	push	{r4, sl, fp, lr}
   13fb8:	add	fp, sp, #8
   13fbc:	mov	r4, r0
   13fc0:	ldr	r0, [r0, #24]
   13fc4:	ldr	r1, [r4, #28]
   13fc8:	bl	13c14 <plt_reset_offsets@@Base>
   13fcc:	ldr	r0, [r4, #24]
   13fd0:	bl	145d4 <mmk_free@@Base>
   13fd4:	ldr	r0, [r4, #32]
   13fd8:	bl	1412c <destroy_trampoline@@Base>
   13fdc:	ldr	r0, [r4, #16]
   13fe0:	pop	{r4, sl, fp, lr}
   13fe4:	b	145d4 <mmk_free@@Base>

00013fe8 <mmk_stub_destroy@@Base>:
   13fe8:	push	{r4, sl, fp, lr}
   13fec:	add	fp, sp, #8
   13ff0:	mov	r4, r0
   13ff4:	bl	13fb4 <mmk_stub_destroy_static@@Base>
   13ff8:	mov	r0, r4
   13ffc:	pop	{r4, sl, fp, lr}
   14000:	b	145d4 <mmk_free@@Base>

00014004 <mmk_ask_ctx@@Base>:
   14004:	push	{fp, lr}
   14008:	mov	fp, sp
   1400c:	mov	r1, r0
   14010:	ldr	r2, [pc, #16]	; 14028 <mmk_ask_ctx@@Base+0x24>
   14014:	mov	r3, #1
   14018:	bl	14840 <__libc_csu_fini@@Base+0x8>
   1401c:	strb	r3, [r0, r2]
   14020:	pop	{fp, lr}
   14024:	bx	r1
   14028:	andeq	r0, r0, ip

0001402c <create_trampoline@@Base>:
   1402c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14030:	add	fp, sp, #24
   14034:	sub	sp, sp, #8
   14038:	mov	r7, r0
   1403c:	movw	r8, #18296	; 0x4778
   14040:	movt	r8, #1
   14044:	movw	r0, #18388	; 0x47d4
   14048:	movt	r0, #1
   1404c:	sub	r5, r0, r8
   14050:	cmp	r5, #4096	; 0x1000
   14054:	bcs	140c4 <create_trampoline@@Base+0x98>
   14058:	mov	r6, r1
   1405c:	mov	r0, #0
   14060:	mvn	r1, #0
   14064:	str	r1, [sp]
   14068:	str	r0, [sp, #4]
   1406c:	mov	r0, #0
   14070:	mov	r1, #4096	; 0x1000
   14074:	mov	r2, #7
   14078:	mov	r3, #34	; 0x22
   1407c:	bl	11470 <mmap@plt>
   14080:	cmn	r0, #1
   14084:	beq	140f8 <create_trampoline@@Base+0xcc>
   14088:	mov	r4, r0
   1408c:	str	r7, [r0]
   14090:	str	r6, [r0, #4]
   14094:	add	r6, r0, #8
   14098:	mov	r0, r6
   1409c:	mov	r1, r8
   140a0:	mov	r2, r5
   140a4:	bl	11404 <memcpy@plt>
   140a8:	mov	r0, r4
   140ac:	mov	r1, #4096	; 0x1000
   140b0:	mov	r2, #5
   140b4:	bl	113ec <mprotect@plt>
   140b8:	mov	r0, r6
   140bc:	sub	sp, fp, #24
   140c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   140c4:	movw	r0, #20592	; 0x5070
   140c8:	movt	r0, #2
   140cc:	ldr	r0, [r0]
   140d0:	movw	r1, #19482	; 0x4c1a
   140d4:	movt	r1, #1
   140d8:	str	r1, [sp]
   140dc:	movw	r1, #18522	; 0x485a
   140e0:	movt	r1, #1
   140e4:	movw	r2, #19420	; 0x4bdc
   140e8:	movt	r2, #1
   140ec:	mov	r3, #45	; 0x2d
   140f0:	bl	11488 <fprintf@plt>
   140f4:	bl	114c4 <abort@plt>
   140f8:	movw	r0, #20592	; 0x5070
   140fc:	movt	r0, #2
   14100:	ldr	r0, [r0]
   14104:	movw	r1, #19508	; 0x4c34
   14108:	movt	r1, #1
   1410c:	str	r1, [sp]
   14110:	movw	r1, #18522	; 0x485a
   14114:	movt	r1, #1
   14118:	movw	r2, #19420	; 0x4bdc
   1411c:	movt	r2, #1
   14120:	mov	r3, #69	; 0x45
   14124:	bl	11488 <fprintf@plt>
   14128:	bl	114c4 <abort@plt>

0001412c <destroy_trampoline@@Base>:
   1412c:	sub	r0, r0, #8
   14130:	mov	r1, #4096	; 0x1000
   14134:	b	114ac <munmap@plt>

00014138 <mmk_verify_set_times@@Base>:
   14138:	push	{fp, lr}
   1413c:	mov	fp, sp
   14140:	mov	r1, r0
   14144:	ldr	r2, [pc, #8]	; 14154 <mmk_verify_set_times@@Base+0x1c>
   14148:	bl	14840 <__libc_csu_fini@@Base+0x8>
   1414c:	str	r1, [r0, r2]
   14150:	pop	{fp, pc}
   14154:	andeq	r0, r0, r4, lsl r0

00014158 <mmk_verify_times@@Base>:
   14158:	push	{fp, lr}
   1415c:	mov	fp, sp
   14160:	mov	r1, r0
   14164:	ldr	r2, [pc, #128]	; 141ec <mmk_verify_times@@Base+0x94>
   14168:	bl	14840 <__libc_csu_fini@@Base+0x8>
   1416c:	ldr	r0, [r0, r2]
   14170:	ldr	r2, [r1, #4]
   14174:	cmp	r2, #0
   14178:	beq	14188 <mmk_verify_times@@Base+0x30>
   1417c:	clz	r0, r0
   14180:	lsr	r0, r0, #5
   14184:	pop	{fp, pc}
   14188:	ldr	r2, [r1, #8]
   1418c:	cmp	r2, #0
   14190:	bne	141a0 <mmk_verify_times@@Base+0x48>
   14194:	ldr	r3, [r1, #12]
   14198:	cmp	r3, #0
   1419c:	beq	141cc <mmk_verify_times@@Base+0x74>
   141a0:	mov	r3, #0
   141a4:	cmp	r0, r2
   141a8:	mov	r2, #0
   141ac:	movwcs	r2, #1
   141b0:	ldr	r1, [r1, #12]
   141b4:	cmp	r1, #0
   141b8:	moveq	r1, r0
   141bc:	cmp	r0, r1
   141c0:	movwls	r3, #1
   141c4:	and	r0, r2, r3
   141c8:	pop	{fp, pc}
   141cc:	ldr	r2, [r1, #20]
   141d0:	cmp	r2, #0
   141d4:	beq	141e0 <mmk_verify_times@@Base+0x88>
   141d8:	pop	{fp, lr}
   141dc:	bx	r2
   141e0:	ldr	r1, [r1, #16]
   141e4:	sub	r0, r1, r0
   141e8:	b	1417c <mmk_verify_times@@Base+0x24>
   141ec:	andeq	r0, r0, r4, lsl r0

000141f0 <mmk_verify_register_call@@Base>:
   141f0:	push	{r4, r5, r6, sl, fp, lr}
   141f4:	add	fp, sp, #16
   141f8:	sub	sp, sp, #8
   141fc:	mov	r5, r0
   14200:	str	r1, [sp, #4]
   14204:	bl	13f34 <mmk_ctx@@Base>
   14208:	bl	13dac <mmk_stub_context@@Base>
   1420c:	mov	r4, r0
   14210:	ldr	r0, [r0, #8]
   14214:	cmp	r0, #0
   14218:	bne	14238 <mmk_verify_register_call@@Base+0x48>
   1421c:	mov	r6, #4096	; 0x1000
   14220:	mov	r0, #4096	; 0x1000
   14224:	bl	145b4 <mmk_malloc@@Base>
   14228:	str	r0, [r4, #8]
   1422c:	cmp	r0, #0
   14230:	beq	142fc <mmk_verify_register_call@@Base+0x10c>
   14234:	str	r6, [r4, #16]
   14238:	ldr	r2, [sp, #4]
   1423c:	mov	r0, r4
   14240:	mov	r1, r5
   14244:	bl	14364 <mmk_verify_register_call@@Base+0x174>
   14248:	cmp	r0, #0
   1424c:	beq	14258 <mmk_verify_register_call@@Base+0x68>
   14250:	sub	sp, fp, #16
   14254:	pop	{r4, r5, r6, sl, fp, pc}
   14258:	ldr	r0, [r4, #12]
   1425c:	ldr	r1, [r4, #16]
   14260:	ldr	r2, [sp, #4]
   14264:	add	r0, r0, r2
   14268:	add	r0, r0, #4
   1426c:	cmp	r0, r1
   14270:	bcc	142a4 <mmk_verify_register_call@@Base+0xb4>
   14274:	ldr	r1, [r4, #16]
   14278:	cmp	r0, r1
   1427c:	bcc	14290 <mmk_verify_register_call@@Base+0xa0>
   14280:	add	r1, r1, #4096	; 0x1000
   14284:	cmp	r0, r1
   14288:	bcs	14280 <mmk_verify_register_call@@Base+0x90>
   1428c:	str	r1, [r4, #16]
   14290:	ldr	r0, [r4, #8]
   14294:	bl	145c4 <mmk_realloc@@Base>
   14298:	str	r0, [r4, #8]
   1429c:	cmp	r0, #0
   142a0:	beq	14330 <mmk_verify_register_call@@Base+0x140>
   142a4:	ldr	r0, [r4, #8]
   142a8:	ldr	r1, [r4, #12]
   142ac:	add	r0, r0, r1
   142b0:	add	r1, sp, #4
   142b4:	mov	r2, #4
   142b8:	bl	1442c <mmk_memcpy@@Base>
   142bc:	ldr	r0, [r4, #8]
   142c0:	ldr	r1, [r4, #12]
   142c4:	ldr	r2, [sp, #4]
   142c8:	add	r0, r0, r1
   142cc:	add	r0, r0, #4
   142d0:	mov	r1, r5
   142d4:	bl	1442c <mmk_memcpy@@Base>
   142d8:	mov	r1, #1
   142dc:	str	r1, [r0]
   142e0:	ldr	r0, [r4, #12]
   142e4:	ldr	r1, [sp, #4]
   142e8:	add	r0, r1, r0
   142ec:	add	r0, r0, #4
   142f0:	str	r0, [r4, #12]
   142f4:	sub	sp, fp, #16
   142f8:	pop	{r4, r5, r6, sl, fp, pc}
   142fc:	movw	r0, #20592	; 0x5070
   14300:	movt	r0, #2
   14304:	ldr	r0, [r0]
   14308:	movw	r1, #19584	; 0x4c80
   1430c:	movt	r1, #1
   14310:	str	r1, [sp]
   14314:	movw	r1, #18522	; 0x485a
   14318:	movt	r1, #1
   1431c:	movw	r2, #19526	; 0x4c46
   14320:	movt	r2, #1
   14324:	mov	r3, #79	; 0x4f
   14328:	bl	11488 <fprintf@plt>
   1432c:	bl	114c4 <abort@plt>
   14330:	movw	r0, #20592	; 0x5070
   14334:	movt	r0, #2
   14338:	ldr	r0, [r0]
   1433c:	movw	r1, #19584	; 0x4c80
   14340:	movt	r1, #1
   14344:	str	r1, [sp]
   14348:	movw	r1, #18522	; 0x485a
   1434c:	movt	r1, #1
   14350:	movw	r2, #19526	; 0x4c46
   14354:	movt	r2, #1
   14358:	mov	r3, #91	; 0x5b
   1435c:	bl	11488 <fprintf@plt>
   14360:	bl	114c4 <abort@plt>
   14364:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14368:	add	fp, sp, #24
   1436c:	mov	r7, r2
   14370:	mov	r4, r1
   14374:	mov	r5, r0
   14378:	bl	137d8 <mmk_mock_params_begin@@Base>
   1437c:	mov	r8, #0
   14380:	cmp	r0, #0
   14384:	beq	143c4 <mmk_verify_register_call@@Base+0x1d4>
   14388:	mov	r6, r0
   1438c:	sub	r7, r7, #4
   14390:	add	r4, r4, #4
   14394:	add	r0, r6, #4
   14398:	mov	r1, r4
   1439c:	mov	r2, r7
   143a0:	bl	143e4 <mmk_memcmp@@Base>
   143a4:	cmp	r0, #0
   143a8:	beq	143cc <mmk_verify_register_call@@Base+0x1dc>
   143ac:	mov	r0, r5
   143b0:	mov	r1, r6
   143b4:	bl	137f8 <mmk_mock_params_next@@Base>
   143b8:	mov	r6, r0
   143bc:	cmp	r0, #0
   143c0:	bne	14394 <mmk_verify_register_call@@Base+0x1a4>
   143c4:	mov	r0, r8
   143c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   143cc:	ldr	r0, [r6]
   143d0:	add	r0, r0, #1
   143d4:	str	r0, [r6]
   143d8:	mov	r8, #1
   143dc:	mov	r0, r8
   143e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000143e4 <mmk_memcmp@@Base>:
   143e4:	push	{fp, lr}
   143e8:	mov	fp, sp
   143ec:	mov	lr, r0
   143f0:	mov	r0, #0
   143f4:	cmp	r2, #0
   143f8:	popeq	{fp, pc}
   143fc:	ldrb	ip, [r1]
   14400:	ldrb	r3, [lr]
   14404:	cmp	r3, ip
   14408:	bne	14420 <mmk_memcmp@@Base+0x3c>
   1440c:	subs	r2, r2, #1
   14410:	add	r1, r1, #1
   14414:	add	lr, lr, #1
   14418:	bne	143fc <mmk_memcmp@@Base+0x18>
   1441c:	pop	{fp, pc}
   14420:	mov	r0, #1
   14424:	mvncc	r0, #0
   14428:	pop	{fp, pc}

0001442c <mmk_memcpy@@Base>:
   1442c:	cmp	r2, #0
   14430:	bxeq	lr
   14434:	mov	ip, r0
   14438:	ldrb	r3, [r1], #1
   1443c:	strb	r3, [ip], #1
   14440:	subs	r2, r2, #1
   14444:	bne	14438 <mmk_memcpy@@Base+0xc>
   14448:	bx	lr

0001444c <mmk_strneq@@Base>:
   1444c:	push	{fp, lr}
   14450:	mov	fp, sp
   14454:	ldrb	ip, [r0]
   14458:	cmp	ip, #0
   1445c:	beq	14498 <mmk_strneq@@Base+0x4c>
   14460:	add	lr, r0, #1
   14464:	cmp	r2, #0
   14468:	ldrbne	r3, [r1]
   1446c:	cmpne	r3, #0
   14470:	beq	14498 <mmk_strneq@@Base+0x4c>
   14474:	uxtb	r0, ip
   14478:	cmp	r0, r3
   1447c:	movne	r0, #0
   14480:	popne	{fp, pc}
   14484:	sub	r2, r2, #1
   14488:	add	r1, r1, #1
   1448c:	ldrb	ip, [lr], #1
   14490:	cmp	ip, #0
   14494:	bne	14464 <mmk_strneq@@Base+0x18>
   14498:	cmp	r2, #0
   1449c:	moveq	r0, #1
   144a0:	ldrbne	r0, [r1]
   144a4:	clzne	r0, r0
   144a8:	lsrne	r0, r0, #5
   144ac:	pop	{fp, pc}

000144b0 <mmk_strchr@@Base>:
   144b0:	mov	r2, r0
   144b4:	ldrb	r3, [r0]
   144b8:	mov	r0, #0
   144bc:	b	144c4 <mmk_strchr@@Base+0x14>
   144c0:	ldrb	r3, [r2, #1]!
   144c4:	cmp	r3, #0
   144c8:	bxeq	lr
   144cc:	uxtb	r3, r3
   144d0:	cmp	r3, r1
   144d4:	bne	144c0 <mmk_strchr@@Base+0x10>
   144d8:	mov	r0, r2
   144dc:	bx	lr

000144e0 <mmk_strcpy@@Base>:
   144e0:	ldrb	r2, [r1]
   144e4:	cmp	r2, #0
   144e8:	beq	14500 <mmk_strcpy@@Base+0x20>
   144ec:	add	r1, r1, #1
   144f0:	strb	r2, [r0], #1
   144f4:	ldrb	r2, [r1], #1
   144f8:	cmp	r2, #0
   144fc:	bne	144f0 <mmk_strcpy@@Base+0x10>
   14500:	mov	r1, #0
   14504:	strb	r1, [r0]
   14508:	bx	lr

0001450c <mmk_strncpy@@Base>:
   1450c:	cmp	r2, #0
   14510:	ldrbne	r3, [r1]
   14514:	cmpne	r3, #0
   14518:	beq	1453c <mmk_strncpy@@Base+0x30>
   1451c:	add	r1, r1, #1
   14520:	rsb	r2, r2, #1
   14524:	strb	r3, [r0], #1
   14528:	cmp	r2, #0
   1452c:	addne	r2, r2, #1
   14530:	ldrbne	r3, [r1], #1
   14534:	cmpne	r3, #0
   14538:	bne	14524 <mmk_strncpy@@Base+0x18>
   1453c:	mov	r1, #0
   14540:	strb	r1, [r0]
   14544:	bx	lr

00014548 <mmk_strlen@@Base>:
   14548:	ldrb	r1, [r0]
   1454c:	cmp	r1, #0
   14550:	moveq	r0, #0
   14554:	bxeq	lr
   14558:	add	r1, r0, #1
   1455c:	mov	r0, #0
   14560:	ldrb	r2, [r1, r0]
   14564:	add	r0, r0, #1
   14568:	cmp	r2, #0
   1456c:	bne	14560 <mmk_strlen@@Base+0x18>
   14570:	bx	lr

00014574 <mmk_isspace@@Base>:
   14574:	sub	r2, r0, #9
   14578:	cmp	r2, #23
   1457c:	bhi	145a0 <mmk_isspace@@Base+0x2c>
   14580:	mov	r1, #1
   14584:	mov	ip, #1
   14588:	movw	r3, #17
   1458c:	movt	r3, #128	; 0x80
   14590:	tst	r3, ip, lsl r2
   14594:	beq	145a0 <mmk_isspace@@Base+0x2c>
   14598:	mov	r0, r1
   1459c:	bx	lr
   145a0:	sub	r0, r0, #10
   145a4:	clz	r0, r0
   145a8:	lsr	r1, r0, #5
   145ac:	mov	r0, r1
   145b0:	bx	lr

000145b4 <mmk_malloc@@Base>:
   145b4:	movw	r1, #20648	; 0x50a8
   145b8:	movt	r1, #2
   145bc:	ldr	r1, [r1]
   145c0:	bx	r1

000145c4 <mmk_realloc@@Base>:
   145c4:	movw	r2, #20640	; 0x50a0
   145c8:	movt	r2, #2
   145cc:	ldr	r2, [r2]
   145d0:	bx	r2

000145d4 <mmk_free@@Base>:
   145d4:	movw	r1, #20644	; 0x50a4
   145d8:	movt	r1, #2
   145dc:	ldr	r1, [r1]
   145e0:	bx	r1

000145e4 <mmk_init_vital_functions@@Base>:
   145e4:	push	{r4, sl, fp, lr}
   145e8:	add	fp, sp, #8
   145ec:	sub	sp, sp, #8
   145f0:	mov	r4, r0
   145f4:	mov	r0, #0
   145f8:	bl	11440 <malloc@plt>
   145fc:	mov	r1, #0
   14600:	bl	1141c <realloc@plt>
   14604:	bl	113f8 <free@plt>
   14608:	movw	r1, #19600	; 0x4c90
   1460c:	movt	r1, #1
   14610:	mov	r0, r4
   14614:	bl	13c38 <plt_get_real_fn@@Base>
   14618:	movw	r1, #20648	; 0x50a8
   1461c:	movt	r1, #2
   14620:	str	r0, [r1]
   14624:	cmp	r0, #0
   14628:	beq	146ac <mmk_init_vital_functions@@Base+0xc8>
   1462c:	movw	r1, #19719	; 0x4d07
   14630:	movt	r1, #1
   14634:	mov	r0, r4
   14638:	bl	13c38 <plt_get_real_fn@@Base>
   1463c:	movw	r1, #20640	; 0x50a0
   14640:	movt	r1, #2
   14644:	str	r0, [r1]
   14648:	cmp	r0, #0
   1464c:	beq	146e0 <mmk_init_vital_functions@@Base+0xfc>
   14650:	movw	r1, #19783	; 0x4d47
   14654:	movt	r1, #1
   14658:	mov	r0, r4
   1465c:	bl	13c38 <plt_get_real_fn@@Base>
   14660:	movw	r1, #20644	; 0x50a4
   14664:	movt	r1, #2
   14668:	str	r0, [r1]
   1466c:	cmp	r0, #0
   14670:	subne	sp, fp, #8
   14674:	popne	{r4, sl, fp, pc}
   14678:	movw	r0, #20592	; 0x5070
   1467c:	movt	r0, #2
   14680:	ldr	r0, [r0]
   14684:	movw	r1, #19788	; 0x4d4c
   14688:	movt	r1, #1
   1468c:	str	r1, [sp]
   14690:	movw	r1, #18522	; 0x485a
   14694:	movt	r1, #1
   14698:	movw	r2, #19607	; 0x4c97
   1469c:	movt	r2, #1
   146a0:	mov	r3, #90	; 0x5a
   146a4:	bl	11488 <fprintf@plt>
   146a8:	bl	114c4 <abort@plt>
   146ac:	movw	r0, #20592	; 0x5070
   146b0:	movt	r0, #2
   146b4:	ldr	r0, [r0]
   146b8:	movw	r1, #19665	; 0x4cd1
   146bc:	movt	r1, #1
   146c0:	str	r1, [sp]
   146c4:	movw	r1, #18522	; 0x485a
   146c8:	movt	r1, #1
   146cc:	movw	r2, #19607	; 0x4c97
   146d0:	movt	r2, #1
   146d4:	mov	r3, #88	; 0x58
   146d8:	bl	11488 <fprintf@plt>
   146dc:	bl	114c4 <abort@plt>
   146e0:	movw	r0, #20592	; 0x5070
   146e4:	movt	r0, #2
   146e8:	ldr	r0, [r0]
   146ec:	movw	r1, #19727	; 0x4d0f
   146f0:	movt	r1, #1
   146f4:	str	r1, [sp]
   146f8:	movw	r1, #18522	; 0x485a
   146fc:	movt	r1, #1
   14700:	movw	r2, #19607	; 0x4c97
   14704:	movt	r2, #1
   14708:	mov	r3, #89	; 0x59
   1470c:	bl	11488 <fprintf@plt>
   14710:	bl	114c4 <abort@plt>

00014714 <mmk_when_init@@Base>:
   14714:	push	{fp, lr}
   14718:	mov	fp, sp
   1471c:	mov	r1, r0
   14720:	ldr	r2, [pc, #8]	; 14730 <mmk_when_init@@Base+0x1c>
   14724:	bl	14840 <__libc_csu_fini@@Base+0x8>
   14728:	str	r1, [r0, r2]
   1472c:	pop	{fp, pc}
   14730:	andeq	r0, r0, r8, lsl r0

00014734 <mmk_when_get_result@@Base>:
   14734:	push	{fp, lr}
   14738:	mov	fp, sp
   1473c:	ldr	r1, [pc, #8]	; 1474c <mmk_when_get_result@@Base+0x18>
   14740:	bl	14840 <__libc_csu_fini@@Base+0x8>
   14744:	ldr	r0, [r0, r1]
   14748:	pop	{fp, pc}
   1474c:	andeq	r0, r0, r8, lsl r0

00014750 <mmk_when_impl@@Base>:
   14750:	push	{r4, r5, fp, lr}
   14754:	add	fp, sp, #8
   14758:	mov	r4, r1
   1475c:	mov	r5, r0
   14760:	bl	1356c <mmk_matcher_ctx@@Base>
   14764:	str	r0, [r4]
   14768:	ldr	r0, [r5]
   1476c:	str	r0, [r4, #4]
   14770:	str	r4, [r5]
   14774:	pop	{r4, r5, fp, pc}

00014778 <mmk_trampoline@@Base>:
   14778:	sub	ip, pc, #8
   1477c:	push	{r0, r1, r2, r3}
   14780:	push	{ip, lr}
   14784:	ldr	r0, [ip, #-8]
   14788:	ldr	ip, [r0, #4]
   1478c:	blx	ip
   14790:	pop	{ip, lr}
   14794:	push	{ip, lr}
   14798:	ldr	ip, [ip, #-8]
   1479c:	ldr	ip, [ip]
   147a0:	blx	ip
   147a4:	cmp	r0, #0
   147a8:	bne	147b8 <mmk_trampoline@@Base+0x40>
   147ac:	pop	{ip, lr}
   147b0:	pop	{r0, r1, r2, r3}
   147b4:	ldr	pc, [ip, #-4]
   147b8:	pop	{ip, lr}
   147bc:	pop	{r0, r1, r2, r3}
   147c0:	push	{ip, lr}
   147c4:	ldr	ip, [ip, #-8]
   147c8:	ldr	ip, [ip, #8]
   147cc:	blx	ip
   147d0:	pop	{ip, pc}

000147d4 <mmk_trampoline_end@@Base>:
   147d4:	nop	{0}

000147d8 <__libc_csu_init@@Base>:
   147d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   147dc:	mov	r7, r0
   147e0:	ldr	r6, [pc, #72]	; 14830 <__libc_csu_init@@Base+0x58>
   147e4:	ldr	r5, [pc, #72]	; 14834 <__libc_csu_init@@Base+0x5c>
   147e8:	add	r6, pc, r6
   147ec:	add	r5, pc, r5
   147f0:	sub	r6, r6, r5
   147f4:	mov	r8, r1
   147f8:	mov	r9, r2
   147fc:	bl	113b4 <strstr@plt-0x20>
   14800:	asrs	r6, r6, #2
   14804:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14808:	mov	r4, #0
   1480c:	add	r4, r4, #1
   14810:	ldr	r3, [r5], #4
   14814:	mov	r2, r9
   14818:	mov	r1, r8
   1481c:	mov	r0, r7
   14820:	blx	r3
   14824:	cmp	r6, r4
   14828:	bne	1480c <__libc_csu_init@@Base+0x34>
   1482c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14830:	andeq	r0, r1, r4, lsl #14
   14834:	strdeq	r0, [r1], -ip

00014838 <__libc_csu_fini@@Base>:
   14838:	bx	lr
   1483c:	andeq	r0, r0, r0
   14840:	mvn	r0, #61440	; 0xf000
   14844:	sub	pc, r0, #31

Disassembly of section .fini:

00014848 <.fini>:
   14848:	push	{r3, lr}
   1484c:	pop	{r3, pc}
