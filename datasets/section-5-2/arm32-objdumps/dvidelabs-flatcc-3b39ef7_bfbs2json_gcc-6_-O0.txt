
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

0001088c <.init>:
   1088c:	push	{r3, lr}
   10890:	bl	109cc <_start@@Base+0x3c>
   10894:	pop	{r3, pc}

Disassembly of section .plt:

00010898 <printf@plt-0x14>:
   10898:	push	{lr}		; (str lr, [sp, #-4]!)
   1089c:	ldr	lr, [pc, #4]	; 108a8 <printf@plt-0x4>
   108a0:	add	lr, pc, lr
   108a4:	ldr	pc, [lr, #8]!
   108a8:	andeq	r5, r1, r8, asr r7

000108ac <printf@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #86016	; 0x15000
   108b4:	ldr	pc, [ip, #1880]!	; 0x758

000108b8 <fopen@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #86016	; 0x15000
   108c0:	ldr	pc, [ip, #1872]!	; 0x750

000108c4 <free@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #86016	; 0x15000
   108cc:	ldr	pc, [ip, #1864]!	; 0x748

000108d0 <ftell@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #86016	; 0x15000
   108d8:	ldr	pc, [ip, #1856]!	; 0x740

000108dc <rewind@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #86016	; 0x15000
   108e4:	ldr	pc, [ip, #1848]!	; 0x738

000108e8 <fwrite@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #86016	; 0x15000
   108f0:	ldr	pc, [ip, #1840]!	; 0x730

000108f4 <fread@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #86016	; 0x15000
   108fc:	ldr	pc, [ip, #1832]!	; 0x728

00010900 <puts@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #86016	; 0x15000
   10908:	ldr	pc, [ip, #1824]!	; 0x720

0001090c <malloc@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #86016	; 0x15000
   10914:	ldr	pc, [ip, #1816]!	; 0x718

00010918 <__libc_start_main@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #86016	; 0x15000
   10920:	ldr	pc, [ip, #1808]!	; 0x710

00010924 <__gmon_start__@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #86016	; 0x15000
   1092c:	ldr	pc, [ip, #1800]!	; 0x708

00010930 <exit@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #86016	; 0x15000
   10938:	ldr	pc, [ip, #1792]!	; 0x700

0001093c <fprintf@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #86016	; 0x15000
   10944:	ldr	pc, [ip, #1784]!	; 0x6f8

00010948 <putchar@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #86016	; 0x15000
   10950:	ldr	pc, [ip, #1776]!	; 0x6f0

00010954 <strncpy@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #86016	; 0x15000
   1095c:	ldr	pc, [ip, #1768]!	; 0x6e8

00010960 <fclose@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #86016	; 0x15000
   10968:	ldr	pc, [ip, #1760]!	; 0x6e0

0001096c <fseek@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #86016	; 0x15000
   10974:	ldr	pc, [ip, #1752]!	; 0x6d8

00010978 <abort@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #86016	; 0x15000
   10980:	ldr	pc, [ip, #1744]!	; 0x6d0

00010984 <__assert_fail@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #86016	; 0x15000
   1098c:	ldr	pc, [ip, #1736]!	; 0x6c8

Disassembly of section .text:

00010990 <_start@@Base>:
   10990:	mov	fp, #0
   10994:	mov	lr, #0
   10998:	pop	{r1}		; (ldr r1, [sp], #4)
   1099c:	mov	r2, sp
   109a0:	push	{r2}		; (str r2, [sp, #-4]!)
   109a4:	push	{r0}		; (str r0, [sp, #-4]!)
   109a8:	ldr	ip, [pc, #16]	; 109c0 <_start@@Base+0x30>
   109ac:	push	{ip}		; (str ip, [sp, #-4]!)
   109b0:	ldr	r0, [pc, #12]	; 109c4 <_start@@Base+0x34>
   109b4:	ldr	r3, [pc, #12]	; 109c8 <_start@@Base+0x38>
   109b8:	bl	10918 <__libc_start_main@plt>
   109bc:	bl	10978 <abort@plt>
   109c0:	andeq	r4, r1, r8, asr #21
   109c4:	andeq	r4, r1, r0, lsr #19
   109c8:	andeq	r4, r1, r8, ror #20
   109cc:	ldr	r3, [pc, #20]	; 109e8 <_start@@Base+0x58>
   109d0:	ldr	r2, [pc, #20]	; 109ec <_start@@Base+0x5c>
   109d4:	add	r3, pc, r3
   109d8:	ldr	r2, [r3, r2]
   109dc:	cmp	r2, #0
   109e0:	bxeq	lr
   109e4:	b	10924 <__gmon_start__@plt>
   109e8:	andeq	r5, r1, r4, lsr #12
   109ec:	andeq	r0, r0, ip, asr r0
   109f0:	ldr	r3, [pc, #28]	; 10a14 <_start@@Base+0x84>
   109f4:	ldr	r0, [pc, #28]	; 10a18 <_start@@Base+0x88>
   109f8:	sub	r3, r3, r0
   109fc:	cmp	r3, #6
   10a00:	bxls	lr
   10a04:	ldr	r3, [pc, #16]	; 10a1c <_start@@Base+0x8c>
   10a08:	cmp	r3, #0
   10a0c:	bxeq	lr
   10a10:	bx	r3
   10a14:	andeq	r6, r2, r3, ror r0
   10a18:	andeq	r6, r2, r0, ror r0
   10a1c:	andeq	r0, r0, r0
   10a20:	ldr	r1, [pc, #36]	; 10a4c <_start@@Base+0xbc>
   10a24:	ldr	r0, [pc, #36]	; 10a50 <_start@@Base+0xc0>
   10a28:	sub	r1, r1, r0
   10a2c:	asr	r1, r1, #2
   10a30:	add	r1, r1, r1, lsr #31
   10a34:	asrs	r1, r1, #1
   10a38:	bxeq	lr
   10a3c:	ldr	r3, [pc, #16]	; 10a54 <_start@@Base+0xc4>
   10a40:	cmp	r3, #0
   10a44:	bxeq	lr
   10a48:	bx	r3
   10a4c:	andeq	r6, r2, r0, ror r0
   10a50:	andeq	r6, r2, r0, ror r0
   10a54:	andeq	r0, r0, r0
   10a58:	push	{r4, lr}
   10a5c:	ldr	r4, [pc, #24]	; 10a7c <_start@@Base+0xec>
   10a60:	ldrb	r3, [r4]
   10a64:	cmp	r3, #0
   10a68:	popne	{r4, pc}
   10a6c:	bl	109f0 <_start@@Base+0x60>
   10a70:	mov	r3, #1
   10a74:	strb	r3, [r4]
   10a78:	pop	{r4, pc}
   10a7c:	andeq	r6, r2, r0, ror r0
   10a80:	ldr	r0, [pc, #40]	; 10ab0 <_start@@Base+0x120>
   10a84:	ldr	r3, [r0]
   10a88:	cmp	r3, #0
   10a8c:	bne	10a94 <_start@@Base+0x104>
   10a90:	b	10a20 <_start@@Base+0x90>
   10a94:	ldr	r3, [pc, #24]	; 10ab4 <_start@@Base+0x124>
   10a98:	cmp	r3, #0
   10a9c:	beq	10a90 <_start@@Base+0x100>
   10aa0:	push	{r4, lr}
   10aa4:	blx	r3
   10aa8:	pop	{r4, lr}
   10aac:	b	10a20 <_start@@Base+0x90>
   10ab0:	andeq	r5, r2, r4, lsl pc
   10ab4:	andeq	r0, r0, r0
   10ab8:	push	{fp, lr}
   10abc:	add	fp, sp, #4
   10ac0:	sub	sp, sp, #40	; 0x28
   10ac4:	str	r0, [fp, #-32]	; 0xffffffe0
   10ac8:	str	r1, [fp, #-36]	; 0xffffffdc
   10acc:	str	r2, [fp, #-40]	; 0xffffffd8
   10ad0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10ad4:	cmp	r3, #0
   10ad8:	bne	10ae4 <_start@@Base+0x154>
   10adc:	sub	r3, fp, #28
   10ae0:	b	10ae8 <_start@@Base+0x158>
   10ae4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10ae8:	str	r3, [fp, #-40]	; 0xffffffd8
   10aec:	ldr	r3, [pc, #396]	; 10c80 <_start@@Base+0x2f0>
   10af0:	add	r3, pc, r3
   10af4:	mov	r1, r3
   10af8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10afc:	bl	108b8 <fopen@plt>
   10b00:	str	r0, [fp, #-20]	; 0xffffffec
   10b04:	mov	r3, #0
   10b08:	str	r3, [fp, #-8]
   10b0c:	mov	r3, #0
   10b10:	str	r3, [fp, #-16]
   10b14:	ldr	r3, [fp, #-20]	; 0xffffffec
   10b18:	cmp	r3, #0
   10b1c:	beq	10c20 <_start@@Base+0x290>
   10b20:	mov	r2, #2
   10b24:	mov	r1, #0
   10b28:	ldr	r0, [fp, #-20]	; 0xffffffec
   10b2c:	bl	1096c <fseek@plt>
   10b30:	ldr	r0, [fp, #-20]	; 0xffffffec
   10b34:	bl	108d0 <ftell@plt>
   10b38:	mov	r3, r0
   10b3c:	str	r3, [fp, #-8]
   10b40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10b44:	ldr	r2, [fp, #-8]
   10b48:	str	r2, [r3]
   10b4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10b50:	cmp	r3, #0
   10b54:	beq	10b68 <_start@@Base+0x1d8>
   10b58:	ldr	r2, [fp, #-8]
   10b5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10b60:	cmp	r2, r3
   10b64:	bhi	10c28 <_start@@Base+0x298>
   10b68:	ldr	r0, [fp, #-20]	; 0xffffffec
   10b6c:	bl	108dc <rewind@plt>
   10b70:	ldr	r3, [fp, #-8]
   10b74:	cmp	r3, #0
   10b78:	beq	10b84 <_start@@Base+0x1f4>
   10b7c:	ldr	r3, [fp, #-8]
   10b80:	b	10b88 <_start@@Base+0x1f8>
   10b84:	mov	r3, #1
   10b88:	mov	r0, r3
   10b8c:	bl	1090c <malloc@plt>
   10b90:	mov	r3, r0
   10b94:	str	r3, [fp, #-16]
   10b98:	ldr	r3, [fp, #-16]
   10b9c:	cmp	r3, #0
   10ba0:	beq	10c30 <_start@@Base+0x2a0>
   10ba4:	mov	r3, #0
   10ba8:	str	r3, [fp, #-12]
   10bac:	b	10bc0 <_start@@Base+0x230>
   10bb0:	ldr	r2, [fp, #-12]
   10bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10bb8:	add	r3, r2, r3
   10bbc:	str	r3, [fp, #-12]
   10bc0:	ldr	r2, [fp, #-16]
   10bc4:	ldr	r3, [fp, #-12]
   10bc8:	add	r0, r2, r3
   10bcc:	ldr	r2, [fp, #-8]
   10bd0:	ldr	r3, [fp, #-12]
   10bd4:	sub	r2, r2, r3
   10bd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   10bdc:	mov	r1, #1
   10be0:	bl	108f4 <fread@plt>
   10be4:	str	r0, [fp, #-24]	; 0xffffffe8
   10be8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10bec:	cmp	r3, #0
   10bf0:	bne	10bb0 <_start@@Base+0x220>
   10bf4:	ldr	r2, [fp, #-12]
   10bf8:	ldr	r3, [fp, #-8]
   10bfc:	cmp	r2, r3
   10c00:	bne	10c38 <_start@@Base+0x2a8>
   10c04:	ldr	r0, [fp, #-20]	; 0xffffffec
   10c08:	bl	10960 <fclose@plt>
   10c0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10c10:	ldr	r2, [fp, #-8]
   10c14:	str	r2, [r3]
   10c18:	ldr	r3, [fp, #-16]
   10c1c:	b	10c74 <_start@@Base+0x2e4>
   10c20:	nop			; (mov r0, r0)
   10c24:	b	10c3c <_start@@Base+0x2ac>
   10c28:	nop			; (mov r0, r0)
   10c2c:	b	10c3c <_start@@Base+0x2ac>
   10c30:	nop			; (mov r0, r0)
   10c34:	b	10c3c <_start@@Base+0x2ac>
   10c38:	nop			; (mov r0, r0)
   10c3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10c40:	cmp	r3, #0
   10c44:	beq	10c50 <_start@@Base+0x2c0>
   10c48:	ldr	r0, [fp, #-20]	; 0xffffffec
   10c4c:	bl	10960 <fclose@plt>
   10c50:	ldr	r3, [fp, #-16]
   10c54:	cmp	r3, #0
   10c58:	beq	10c64 <_start@@Base+0x2d4>
   10c5c:	ldr	r0, [fp, #-16]
   10c60:	bl	108c4 <free@plt>
   10c64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10c68:	ldr	r2, [fp, #-8]
   10c6c:	str	r2, [r3]
   10c70:	mov	r3, #0
   10c74:	mov	r0, r3
   10c78:	sub	sp, fp, #4
   10c7c:	pop	{fp, pc}
   10c80:	andeq	r3, r0, r0, ror #31
   10c84:	push	{fp}		; (str fp, [sp, #-4]!)
   10c88:	add	fp, sp, #0
   10c8c:	sub	sp, sp, #12
   10c90:	mov	r3, r0
   10c94:	strh	r3, [fp, #-6]
   10c98:	ldrh	r3, [fp, #-6]
   10c9c:	mov	r0, r3
   10ca0:	add	sp, fp, #0
   10ca4:	pop	{fp}		; (ldr fp, [sp], #4)
   10ca8:	bx	lr
   10cac:	push	{fp, lr}
   10cb0:	add	fp, sp, #4
   10cb4:	sub	sp, sp, #8
   10cb8:	str	r0, [fp, #-8]
   10cbc:	ldr	r3, [fp, #-8]
   10cc0:	ldrh	r3, [r3]
   10cc4:	mov	r0, r3
   10cc8:	bl	10c84 <_start@@Base+0x2f4>
   10ccc:	mov	r3, r0
   10cd0:	mov	r0, r3
   10cd4:	sub	sp, fp, #4
   10cd8:	pop	{fp, pc}
   10cdc:	push	{fp}		; (str fp, [sp, #-4]!)
   10ce0:	add	fp, sp, #0
   10ce4:	sub	sp, sp, #12
   10ce8:	str	r0, [fp, #-8]
   10cec:	ldr	r3, [fp, #-8]
   10cf0:	mov	r0, r3
   10cf4:	add	sp, fp, #0
   10cf8:	pop	{fp}		; (ldr fp, [sp], #4)
   10cfc:	bx	lr
   10d00:	push	{fp, lr}
   10d04:	add	fp, sp, #4
   10d08:	sub	sp, sp, #8
   10d0c:	str	r0, [fp, #-8]
   10d10:	ldr	r3, [fp, #-8]
   10d14:	ldr	r3, [r3]
   10d18:	mov	r0, r3
   10d1c:	bl	10cdc <_start@@Base+0x34c>
   10d20:	mov	r3, r0
   10d24:	mov	r0, r3
   10d28:	sub	sp, fp, #4
   10d2c:	pop	{fp, pc}
   10d30:	push	{fp}		; (str fp, [sp, #-4]!)
   10d34:	add	fp, sp, #0
   10d38:	sub	sp, sp, #12
   10d3c:	strd	r0, [fp, #-12]
   10d40:	ldrd	r2, [fp, #-12]
   10d44:	mov	r0, r2
   10d48:	mov	r1, r3
   10d4c:	add	sp, fp, #0
   10d50:	pop	{fp}		; (ldr fp, [sp], #4)
   10d54:	bx	lr
   10d58:	push	{fp, lr}
   10d5c:	add	fp, sp, #4
   10d60:	sub	sp, sp, #8
   10d64:	str	r0, [fp, #-8]
   10d68:	ldr	r3, [fp, #-8]
   10d6c:	ldrd	r2, [r3]
   10d70:	mov	r0, r2
   10d74:	mov	r1, r3
   10d78:	bl	10d30 <_start@@Base+0x3a0>
   10d7c:	mov	r2, r0
   10d80:	mov	r3, r1
   10d84:	mov	r0, r2
   10d88:	mov	r1, r3
   10d8c:	sub	sp, fp, #4
   10d90:	pop	{fp, pc}
   10d94:	push	{fp}		; (str fp, [sp, #-4]!)
   10d98:	add	fp, sp, #0
   10d9c:	sub	sp, sp, #20
   10da0:	vstr	d0, [fp, #-20]	; 0xffffffec
   10da4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10da8:	strd	r2, [fp, #-12]
   10dac:	ldrd	r2, [fp, #-12]
   10db0:	strd	r2, [fp, #-12]
   10db4:	ldrd	r2, [fp, #-12]
   10db8:	vmov	d7, r2, r3
   10dbc:	vmov.f64	d0, d7
   10dc0:	add	sp, fp, #0
   10dc4:	pop	{fp}		; (ldr fp, [sp], #4)
   10dc8:	bx	lr
   10dcc:	push	{fp, lr}
   10dd0:	add	fp, sp, #4
   10dd4:	sub	sp, sp, #8
   10dd8:	str	r0, [fp, #-8]
   10ddc:	ldr	r3, [fp, #-8]
   10de0:	vldr	d7, [r3]
   10de4:	vmov.f64	d0, d7
   10de8:	bl	10d94 <_start@@Base+0x404>
   10dec:	vmov.f64	d7, d0
   10df0:	vmov.f64	d0, d7
   10df4:	sub	sp, fp, #4
   10df8:	pop	{fp, pc}
   10dfc:	push	{fp}		; (str fp, [sp, #-4]!)
   10e00:	add	fp, sp, #0
   10e04:	sub	sp, sp, #12
   10e08:	mov	r3, r0
   10e0c:	strb	r3, [fp, #-5]
   10e10:	ldrb	r3, [fp, #-5]
   10e14:	mov	r0, r3
   10e18:	add	sp, fp, #0
   10e1c:	pop	{fp}		; (ldr fp, [sp], #4)
   10e20:	bx	lr
   10e24:	push	{fp, lr}
   10e28:	add	fp, sp, #4
   10e2c:	sub	sp, sp, #8
   10e30:	str	r0, [fp, #-8]
   10e34:	ldr	r3, [fp, #-8]
   10e38:	ldrb	r3, [r3]
   10e3c:	mov	r0, r3
   10e40:	bl	10dfc <_start@@Base+0x46c>
   10e44:	mov	r3, r0
   10e48:	mov	r0, r3
   10e4c:	sub	sp, fp, #4
   10e50:	pop	{fp, pc}
   10e54:	push	{fp}		; (str fp, [sp, #-4]!)
   10e58:	add	fp, sp, #0
   10e5c:	sub	sp, sp, #12
   10e60:	str	r0, [fp, #-8]
   10e64:	ldr	r3, [fp, #-8]
   10e68:	mov	r0, r3
   10e6c:	add	sp, fp, #0
   10e70:	pop	{fp}		; (ldr fp, [sp], #4)
   10e74:	bx	lr
   10e78:	push	{fp, lr}
   10e7c:	add	fp, sp, #4
   10e80:	sub	sp, sp, #8
   10e84:	str	r0, [fp, #-8]
   10e88:	ldr	r3, [fp, #-8]
   10e8c:	ldr	r3, [r3]
   10e90:	mov	r0, r3
   10e94:	bl	10e54 <_start@@Base+0x4c4>
   10e98:	mov	r3, r0
   10e9c:	mov	r0, r3
   10ea0:	sub	sp, fp, #4
   10ea4:	pop	{fp, pc}
   10ea8:	push	{fp}		; (str fp, [sp, #-4]!)
   10eac:	add	fp, sp, #0
   10eb0:	sub	sp, sp, #12
   10eb4:	str	r0, [fp, #-8]
   10eb8:	ldr	r3, [fp, #-8]
   10ebc:	mov	r0, r3
   10ec0:	add	sp, fp, #0
   10ec4:	pop	{fp}		; (ldr fp, [sp], #4)
   10ec8:	bx	lr
   10ecc:	push	{fp, lr}
   10ed0:	add	fp, sp, #4
   10ed4:	sub	sp, sp, #8
   10ed8:	str	r0, [fp, #-8]
   10edc:	ldr	r3, [fp, #-8]
   10ee0:	ldr	r3, [r3]
   10ee4:	mov	r0, r3
   10ee8:	bl	10ea8 <_start@@Base+0x518>
   10eec:	mov	r3, r0
   10ef0:	mov	r0, r3
   10ef4:	sub	sp, fp, #4
   10ef8:	pop	{fp, pc}
   10efc:	push	{fp}		; (str fp, [sp, #-4]!)
   10f00:	add	fp, sp, #0
   10f04:	sub	sp, sp, #12
   10f08:	mov	r3, r0
   10f0c:	strh	r3, [fp, #-6]
   10f10:	ldrh	r3, [fp, #-6]
   10f14:	mov	r0, r3
   10f18:	add	sp, fp, #0
   10f1c:	pop	{fp}		; (ldr fp, [sp], #4)
   10f20:	bx	lr
   10f24:	push	{fp, lr}
   10f28:	add	fp, sp, #4
   10f2c:	sub	sp, sp, #8
   10f30:	str	r0, [fp, #-8]
   10f34:	ldr	r3, [fp, #-8]
   10f38:	ldrh	r3, [r3]
   10f3c:	mov	r0, r3
   10f40:	bl	10efc <_start@@Base+0x56c>
   10f44:	mov	r3, r0
   10f48:	mov	r0, r3
   10f4c:	sub	sp, fp, #4
   10f50:	pop	{fp, pc}
   10f54:	push	{fp}		; (str fp, [sp, #-4]!)
   10f58:	add	fp, sp, #0
   10f5c:	sub	sp, sp, #12
   10f60:	str	r0, [fp, #-8]
   10f64:	ldr	r3, [fp, #-8]
   10f68:	mov	r0, r3
   10f6c:	add	sp, fp, #0
   10f70:	pop	{fp}		; (ldr fp, [sp], #4)
   10f74:	bx	lr
   10f78:	push	{fp}		; (str fp, [sp, #-4]!)
   10f7c:	add	fp, sp, #0
   10f80:	sub	sp, sp, #12
   10f84:	str	r0, [fp, #-8]
   10f88:	ldr	r3, [fp, #-8]
   10f8c:	mov	r0, r3
   10f90:	add	sp, fp, #0
   10f94:	pop	{fp}		; (ldr fp, [sp], #4)
   10f98:	bx	lr
   10f9c:	push	{fp, lr}
   10fa0:	add	fp, sp, #4
   10fa4:	sub	sp, sp, #8
   10fa8:	str	r0, [fp, #-8]
   10fac:	ldr	r3, [fp, #-8]
   10fb0:	ldr	r3, [r3]
   10fb4:	mov	r0, r3
   10fb8:	bl	10f54 <_start@@Base+0x5c4>
   10fbc:	mov	r3, r0
   10fc0:	mov	r0, r3
   10fc4:	sub	sp, fp, #4
   10fc8:	pop	{fp, pc}
   10fcc:	push	{fp, lr}
   10fd0:	add	fp, sp, #4
   10fd4:	sub	sp, sp, #8
   10fd8:	str	r0, [fp, #-8]
   10fdc:	ldr	r3, [fp, #-8]
   10fe0:	cmp	r3, #0
   10fe4:	beq	11000 <_start@@Base+0x670>
   10fe8:	ldr	r3, [fp, #-8]
   10fec:	sub	r3, r3, #4
   10ff0:	mov	r0, r3
   10ff4:	bl	10e78 <_start@@Base+0x4e8>
   10ff8:	mov	r3, r0
   10ffc:	b	11004 <_start@@Base+0x674>
   11000:	mov	r3, #0
   11004:	mov	r0, r3
   11008:	sub	sp, fp, #4
   1100c:	pop	{fp, pc}
   11010:	push	{fp, lr}
   11014:	add	fp, sp, #4
   11018:	sub	sp, sp, #16
   1101c:	str	r0, [fp, #-16]
   11020:	str	r1, [fp, #-20]	; 0xffffffec
   11024:	mov	r3, #0
   11028:	str	r3, [fp, #-12]
   1102c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11030:	cmp	r3, #0
   11034:	bne	11040 <_start@@Base+0x6b0>
   11038:	mov	r3, #1
   1103c:	b	110a4 <_start@@Base+0x714>
   11040:	sub	r3, fp, #12
   11044:	mov	r2, #4
   11048:	ldr	r1, [fp, #-20]	; 0xffffffec
   1104c:	mov	r0, r3
   11050:	bl	10954 <strncpy@plt>
   11054:	ldr	r3, [fp, #-12]
   11058:	mov	r0, r3
   1105c:	bl	10f78 <_start@@Base+0x5e8>
   11060:	mov	r3, r0
   11064:	str	r3, [fp, #-12]
   11068:	ldr	r3, [fp, #-16]
   1106c:	add	r3, r3, #4
   11070:	mov	r0, r3
   11074:	bl	10f9c <_start@@Base+0x60c>
   11078:	str	r0, [fp, #-8]
   1107c:	ldr	r3, [fp, #-12]
   11080:	cmp	r3, #0
   11084:	beq	11098 <_start@@Base+0x708>
   11088:	ldr	r3, [fp, #-12]
   1108c:	ldr	r2, [fp, #-8]
   11090:	cmp	r2, r3
   11094:	bne	110a0 <_start@@Base+0x710>
   11098:	mov	r3, #1
   1109c:	b	110a4 <_start@@Base+0x714>
   110a0:	mov	r3, #0
   110a4:	mov	r0, r3
   110a8:	sub	sp, fp, #4
   110ac:	pop	{fp, pc}
   110b0:	push	{fp}		; (str fp, [sp, #-4]!)
   110b4:	add	fp, sp, #0
   110b8:	sub	sp, sp, #12
   110bc:	mov	r3, r0
   110c0:	strb	r3, [fp, #-5]
   110c4:	ldrsb	r3, [fp, #-5]
   110c8:	mov	r0, r3
   110cc:	add	sp, fp, #0
   110d0:	pop	{fp}		; (ldr fp, [sp], #4)
   110d4:	bx	lr
   110d8:	push	{fp, lr}
   110dc:	add	fp, sp, #4
   110e0:	sub	sp, sp, #8
   110e4:	str	r0, [fp, #-8]
   110e8:	ldr	r3, [fp, #-8]
   110ec:	ldrsb	r3, [r3]
   110f0:	mov	r0, r3
   110f4:	bl	110b0 <_start@@Base+0x720>
   110f8:	mov	r3, r0
   110fc:	mov	r0, r3
   11100:	sub	sp, fp, #4
   11104:	pop	{fp, pc}
   11108:	push	{fp}		; (str fp, [sp, #-4]!)
   1110c:	add	fp, sp, #0
   11110:	sub	sp, sp, #12
   11114:	mov	r3, r0
   11118:	strb	r3, [fp, #-5]
   1111c:	ldrsb	r3, [fp, #-5]
   11120:	cmp	r3, #16
   11124:	addls	pc, pc, r3, lsl #2
   11128:	b	1123c <_start@@Base+0x8ac>
   1112c:	b	11170 <_start@@Base+0x7e0>
   11130:	b	1117c <_start@@Base+0x7ec>
   11134:	b	11188 <_start@@Base+0x7f8>
   11138:	b	11194 <_start@@Base+0x804>
   1113c:	b	111a0 <_start@@Base+0x810>
   11140:	b	111ac <_start@@Base+0x81c>
   11144:	b	111b8 <_start@@Base+0x828>
   11148:	b	111c4 <_start@@Base+0x834>
   1114c:	b	111d0 <_start@@Base+0x840>
   11150:	b	111dc <_start@@Base+0x84c>
   11154:	b	111e8 <_start@@Base+0x858>
   11158:	b	111f4 <_start@@Base+0x864>
   1115c:	b	11200 <_start@@Base+0x870>
   11160:	b	1120c <_start@@Base+0x87c>
   11164:	b	11218 <_start@@Base+0x888>
   11168:	b	11224 <_start@@Base+0x894>
   1116c:	b	11230 <_start@@Base+0x8a0>
   11170:	ldr	r3, [pc, #220]	; 11254 <_start@@Base+0x8c4>
   11174:	add	r3, pc, r3
   11178:	b	11244 <_start@@Base+0x8b4>
   1117c:	ldr	r3, [pc, #212]	; 11258 <_start@@Base+0x8c8>
   11180:	add	r3, pc, r3
   11184:	b	11244 <_start@@Base+0x8b4>
   11188:	ldr	r3, [pc, #204]	; 1125c <_start@@Base+0x8cc>
   1118c:	add	r3, pc, r3
   11190:	b	11244 <_start@@Base+0x8b4>
   11194:	ldr	r3, [pc, #196]	; 11260 <_start@@Base+0x8d0>
   11198:	add	r3, pc, r3
   1119c:	b	11244 <_start@@Base+0x8b4>
   111a0:	ldr	r3, [pc, #188]	; 11264 <_start@@Base+0x8d4>
   111a4:	add	r3, pc, r3
   111a8:	b	11244 <_start@@Base+0x8b4>
   111ac:	ldr	r3, [pc, #180]	; 11268 <_start@@Base+0x8d8>
   111b0:	add	r3, pc, r3
   111b4:	b	11244 <_start@@Base+0x8b4>
   111b8:	ldr	r3, [pc, #172]	; 1126c <_start@@Base+0x8dc>
   111bc:	add	r3, pc, r3
   111c0:	b	11244 <_start@@Base+0x8b4>
   111c4:	ldr	r3, [pc, #164]	; 11270 <_start@@Base+0x8e0>
   111c8:	add	r3, pc, r3
   111cc:	b	11244 <_start@@Base+0x8b4>
   111d0:	ldr	r3, [pc, #156]	; 11274 <_start@@Base+0x8e4>
   111d4:	add	r3, pc, r3
   111d8:	b	11244 <_start@@Base+0x8b4>
   111dc:	ldr	r3, [pc, #148]	; 11278 <_start@@Base+0x8e8>
   111e0:	add	r3, pc, r3
   111e4:	b	11244 <_start@@Base+0x8b4>
   111e8:	ldr	r3, [pc, #140]	; 1127c <_start@@Base+0x8ec>
   111ec:	add	r3, pc, r3
   111f0:	b	11244 <_start@@Base+0x8b4>
   111f4:	ldr	r3, [pc, #132]	; 11280 <_start@@Base+0x8f0>
   111f8:	add	r3, pc, r3
   111fc:	b	11244 <_start@@Base+0x8b4>
   11200:	ldr	r3, [pc, #124]	; 11284 <_start@@Base+0x8f4>
   11204:	add	r3, pc, r3
   11208:	b	11244 <_start@@Base+0x8b4>
   1120c:	ldr	r3, [pc, #116]	; 11288 <_start@@Base+0x8f8>
   11210:	add	r3, pc, r3
   11214:	b	11244 <_start@@Base+0x8b4>
   11218:	ldr	r3, [pc, #108]	; 1128c <_start@@Base+0x8fc>
   1121c:	add	r3, pc, r3
   11220:	b	11244 <_start@@Base+0x8b4>
   11224:	ldr	r3, [pc, #100]	; 11290 <_start@@Base+0x900>
   11228:	add	r3, pc, r3
   1122c:	b	11244 <_start@@Base+0x8b4>
   11230:	ldr	r3, [pc, #92]	; 11294 <_start@@Base+0x904>
   11234:	add	r3, pc, r3
   11238:	b	11244 <_start@@Base+0x8b4>
   1123c:	ldr	r3, [pc, #84]	; 11298 <_start@@Base+0x908>
   11240:	add	r3, pc, r3
   11244:	mov	r0, r3
   11248:	add	sp, fp, #0
   1124c:	pop	{fp}		; (ldr fp, [sp], #4)
   11250:	bx	lr
   11254:	andeq	r3, r0, r4, ror #18
   11258:	andeq	r3, r0, r0, ror #18
   1125c:	andeq	r3, r0, ip, asr r9
   11260:	andeq	r3, r0, r8, asr r9
   11264:	andeq	r3, r0, r4, asr r9
   11268:	andeq	r3, r0, r0, asr r9
   1126c:	andeq	r3, r0, ip, asr #18
   11270:	andeq	r3, r0, r8, asr #18
   11274:	andeq	r3, r0, r0, asr #18
   11278:	andeq	r3, r0, ip, lsr r9
   1127c:	andeq	r3, r0, r8, lsr r9
   11280:	andeq	r3, r0, r4, lsr r9
   11284:	andeq	r3, r0, r0, lsr r9
   11288:	andeq	r3, r0, ip, lsr #18
   1128c:	andeq	r3, r0, r8, lsr #18
   11290:	andeq	r3, r0, r4, lsr #18
   11294:	andeq	r3, r0, ip, lsl r9
   11298:	andeq	r3, r0, r8, lsl r9
   1129c:	push	{fp, lr}
   112a0:	add	fp, sp, #4
   112a4:	sub	sp, sp, #16
   112a8:	str	r0, [fp, #-16]
   112ac:	mov	r3, #0
   112b0:	strh	r3, [fp, #-6]
   112b4:	ldr	r3, [fp, #-16]
   112b8:	cmp	r3, #0
   112bc:	bne	112e0 <_start@@Base+0x950>
   112c0:	ldr	r3, [pc, #188]	; 11384 <_start@@Base+0x9f4>
   112c4:	add	r3, pc, r3
   112c8:	mov	r2, #147	; 0x93
   112cc:	ldr	r1, [pc, #180]	; 11388 <_start@@Base+0x9f8>
   112d0:	add	r1, pc, r1
   112d4:	ldr	r0, [pc, #176]	; 1138c <_start@@Base+0x9fc>
   112d8:	add	r0, pc, r0
   112dc:	bl	10984 <__assert_fail@plt>
   112e0:	mov	r3, #0
   112e4:	strh	r3, [fp, #-8]
   112e8:	ldr	r0, [fp, #-16]
   112ec:	bl	10ecc <_start@@Base+0x53c>
   112f0:	mov	r3, r0
   112f4:	rsb	r3, r3, #0
   112f8:	ldr	r2, [fp, #-16]
   112fc:	add	r3, r2, r3
   11300:	str	r3, [fp, #-12]
   11304:	ldr	r0, [fp, #-12]
   11308:	bl	10f24 <_start@@Base+0x594>
   1130c:	mov	r3, r0
   11310:	mov	r2, r3
   11314:	ldrh	r3, [fp, #-8]
   11318:	add	r3, r3, #3
   1131c:	lsl	r3, r3, #1
   11320:	cmp	r2, r3
   11324:	bcc	1134c <_start@@Base+0x9bc>
   11328:	ldrh	r3, [fp, #-8]
   1132c:	add	r3, r3, #2
   11330:	lsl	r3, r3, #1
   11334:	ldr	r2, [fp, #-12]
   11338:	add	r3, r2, r3
   1133c:	mov	r0, r3
   11340:	bl	10f24 <_start@@Base+0x594>
   11344:	mov	r3, r0
   11348:	strh	r3, [fp, #-6]
   1134c:	ldrh	r3, [fp, #-6]
   11350:	cmp	r3, #0
   11354:	beq	11374 <_start@@Base+0x9e4>
   11358:	ldrh	r3, [fp, #-6]
   1135c:	ldr	r2, [fp, #-16]
   11360:	add	r3, r2, r3
   11364:	mov	r0, r3
   11368:	bl	110d8 <_start@@Base+0x748>
   1136c:	mov	r3, r0
   11370:	b	11378 <_start@@Base+0x9e8>
   11374:	mov	r3, #0
   11378:	mov	r0, r3
   1137c:	sub	sp, fp, #4
   11380:	pop	{fp, pc}
   11384:	andeq	r3, r0, ip, lsr sp
   11388:	andeq	r3, r0, ip, lsl #17
   1138c:	strdeq	r3, [r0], -ip
   11390:	push	{fp, lr}
   11394:	add	fp, sp, #4
   11398:	sub	sp, sp, #16
   1139c:	str	r0, [fp, #-16]
   113a0:	mov	r3, #0
   113a4:	strh	r3, [fp, #-6]
   113a8:	ldr	r3, [fp, #-16]
   113ac:	cmp	r3, #0
   113b0:	bne	113d4 <_start@@Base+0xa44>
   113b4:	ldr	r3, [pc, #164]	; 11460 <_start@@Base+0xad0>
   113b8:	add	r3, pc, r3
   113bc:	mov	r2, #147	; 0x93
   113c0:	ldr	r1, [pc, #156]	; 11464 <_start@@Base+0xad4>
   113c4:	add	r1, pc, r1
   113c8:	ldr	r0, [pc, #152]	; 11468 <_start@@Base+0xad8>
   113cc:	add	r0, pc, r0
   113d0:	bl	10984 <__assert_fail@plt>
   113d4:	mov	r3, #0
   113d8:	strh	r3, [fp, #-8]
   113dc:	ldr	r0, [fp, #-16]
   113e0:	bl	10ecc <_start@@Base+0x53c>
   113e4:	mov	r3, r0
   113e8:	rsb	r3, r3, #0
   113ec:	ldr	r2, [fp, #-16]
   113f0:	add	r3, r2, r3
   113f4:	str	r3, [fp, #-12]
   113f8:	ldr	r0, [fp, #-12]
   113fc:	bl	10f24 <_start@@Base+0x594>
   11400:	mov	r3, r0
   11404:	mov	r2, r3
   11408:	ldrh	r3, [fp, #-8]
   1140c:	add	r3, r3, #3
   11410:	lsl	r3, r3, #1
   11414:	cmp	r2, r3
   11418:	bcc	11440 <_start@@Base+0xab0>
   1141c:	ldrh	r3, [fp, #-8]
   11420:	add	r3, r3, #2
   11424:	lsl	r3, r3, #1
   11428:	ldr	r2, [fp, #-12]
   1142c:	add	r3, r2, r3
   11430:	mov	r0, r3
   11434:	bl	10f24 <_start@@Base+0x594>
   11438:	mov	r3, r0
   1143c:	strh	r3, [fp, #-6]
   11440:	ldrh	r3, [fp, #-6]
   11444:	cmp	r3, #0
   11448:	movne	r3, #1
   1144c:	moveq	r3, #0
   11450:	uxtb	r3, r3
   11454:	mov	r0, r3
   11458:	sub	sp, fp, #4
   1145c:	pop	{fp, pc}
   11460:	strdeq	r3, [r0], -ip
   11464:	muleq	r0, r8, r7
   11468:	andeq	r3, r0, r8, lsl #16
   1146c:	push	{fp, lr}
   11470:	add	fp, sp, #4
   11474:	sub	sp, sp, #16
   11478:	str	r0, [fp, #-16]
   1147c:	mov	r3, #0
   11480:	strh	r3, [fp, #-6]
   11484:	ldr	r3, [fp, #-16]
   11488:	cmp	r3, #0
   1148c:	bne	114b0 <_start@@Base+0xb20>
   11490:	ldr	r3, [pc, #164]	; 1153c <_start@@Base+0xbac>
   11494:	add	r3, pc, r3
   11498:	mov	r2, #148	; 0x94
   1149c:	ldr	r1, [pc, #156]	; 11540 <_start@@Base+0xbb0>
   114a0:	add	r1, pc, r1
   114a4:	ldr	r0, [pc, #152]	; 11544 <_start@@Base+0xbb4>
   114a8:	add	r0, pc, r0
   114ac:	bl	10984 <__assert_fail@plt>
   114b0:	mov	r3, #1
   114b4:	strh	r3, [fp, #-8]
   114b8:	ldr	r0, [fp, #-16]
   114bc:	bl	10ecc <_start@@Base+0x53c>
   114c0:	mov	r3, r0
   114c4:	rsb	r3, r3, #0
   114c8:	ldr	r2, [fp, #-16]
   114cc:	add	r3, r2, r3
   114d0:	str	r3, [fp, #-12]
   114d4:	ldr	r0, [fp, #-12]
   114d8:	bl	10f24 <_start@@Base+0x594>
   114dc:	mov	r3, r0
   114e0:	mov	r2, r3
   114e4:	ldrh	r3, [fp, #-8]
   114e8:	add	r3, r3, #3
   114ec:	lsl	r3, r3, #1
   114f0:	cmp	r2, r3
   114f4:	bcc	1151c <_start@@Base+0xb8c>
   114f8:	ldrh	r3, [fp, #-8]
   114fc:	add	r3, r3, #2
   11500:	lsl	r3, r3, #1
   11504:	ldr	r2, [fp, #-12]
   11508:	add	r3, r2, r3
   1150c:	mov	r0, r3
   11510:	bl	10f24 <_start@@Base+0x594>
   11514:	mov	r3, r0
   11518:	strh	r3, [fp, #-6]
   1151c:	ldrh	r3, [fp, #-6]
   11520:	cmp	r3, #0
   11524:	movne	r3, #1
   11528:	moveq	r3, #0
   1152c:	uxtb	r3, r3
   11530:	mov	r0, r3
   11534:	sub	sp, fp, #4
   11538:	pop	{fp, pc}
   1153c:	andeq	r3, r0, r8, asr #22
   11540:			; <UNDEFINED> instruction: 0x000036bc
   11544:	andeq	r3, r0, ip, lsr #14
   11548:	push	{fp, lr}
   1154c:	add	fp, sp, #4
   11550:	sub	sp, sp, #16
   11554:	str	r0, [fp, #-16]
   11558:	mov	r3, #0
   1155c:	strh	r3, [fp, #-6]
   11560:	ldr	r3, [fp, #-16]
   11564:	cmp	r3, #0
   11568:	bne	1158c <_start@@Base+0xbfc>
   1156c:	ldr	r3, [pc, #188]	; 11630 <_start@@Base+0xca0>
   11570:	add	r3, pc, r3
   11574:	mov	r2, #149	; 0x95
   11578:	ldr	r1, [pc, #180]	; 11634 <_start@@Base+0xca4>
   1157c:	add	r1, pc, r1
   11580:	ldr	r0, [pc, #176]	; 11638 <_start@@Base+0xca8>
   11584:	add	r0, pc, r0
   11588:	bl	10984 <__assert_fail@plt>
   1158c:	mov	r3, #2
   11590:	strh	r3, [fp, #-8]
   11594:	ldr	r0, [fp, #-16]
   11598:	bl	10ecc <_start@@Base+0x53c>
   1159c:	mov	r3, r0
   115a0:	rsb	r3, r3, #0
   115a4:	ldr	r2, [fp, #-16]
   115a8:	add	r3, r2, r3
   115ac:	str	r3, [fp, #-12]
   115b0:	ldr	r0, [fp, #-12]
   115b4:	bl	10f24 <_start@@Base+0x594>
   115b8:	mov	r3, r0
   115bc:	mov	r2, r3
   115c0:	ldrh	r3, [fp, #-8]
   115c4:	add	r3, r3, #3
   115c8:	lsl	r3, r3, #1
   115cc:	cmp	r2, r3
   115d0:	bcc	115f8 <_start@@Base+0xc68>
   115d4:	ldrh	r3, [fp, #-8]
   115d8:	add	r3, r3, #2
   115dc:	lsl	r3, r3, #1
   115e0:	ldr	r2, [fp, #-12]
   115e4:	add	r3, r2, r3
   115e8:	mov	r0, r3
   115ec:	bl	10f24 <_start@@Base+0x594>
   115f0:	mov	r3, r0
   115f4:	strh	r3, [fp, #-6]
   115f8:	ldrh	r3, [fp, #-6]
   115fc:	cmp	r3, #0
   11600:	beq	11620 <_start@@Base+0xc90>
   11604:	ldrh	r3, [fp, #-6]
   11608:	ldr	r2, [fp, #-16]
   1160c:	add	r3, r2, r3
   11610:	mov	r0, r3
   11614:	bl	10d00 <_start@@Base+0x370>
   11618:	mov	r3, r0
   1161c:	b	11624 <_start@@Base+0xc94>
   11620:	mvn	r3, #0
   11624:	mov	r0, r3
   11628:	sub	sp, fp, #4
   1162c:	pop	{fp, pc}
   11630:	ldrdeq	r3, [r0], -r0
   11634:	andeq	r3, r0, r0, ror #11
   11638:	andeq	r3, r0, r0, asr r6
   1163c:	push	{fp, lr}
   11640:	add	fp, sp, #4
   11644:	sub	sp, sp, #16
   11648:	str	r0, [fp, #-16]
   1164c:	mov	r3, #0
   11650:	strh	r3, [fp, #-6]
   11654:	ldr	r3, [fp, #-16]
   11658:	cmp	r3, #0
   1165c:	bne	11680 <_start@@Base+0xcf0>
   11660:	ldr	r3, [pc, #164]	; 1170c <_start@@Base+0xd7c>
   11664:	add	r3, pc, r3
   11668:	mov	r2, #149	; 0x95
   1166c:	ldr	r1, [pc, #156]	; 11710 <_start@@Base+0xd80>
   11670:	add	r1, pc, r1
   11674:	ldr	r0, [pc, #152]	; 11714 <_start@@Base+0xd84>
   11678:	add	r0, pc, r0
   1167c:	bl	10984 <__assert_fail@plt>
   11680:	mov	r3, #2
   11684:	strh	r3, [fp, #-8]
   11688:	ldr	r0, [fp, #-16]
   1168c:	bl	10ecc <_start@@Base+0x53c>
   11690:	mov	r3, r0
   11694:	rsb	r3, r3, #0
   11698:	ldr	r2, [fp, #-16]
   1169c:	add	r3, r2, r3
   116a0:	str	r3, [fp, #-12]
   116a4:	ldr	r0, [fp, #-12]
   116a8:	bl	10f24 <_start@@Base+0x594>
   116ac:	mov	r3, r0
   116b0:	mov	r2, r3
   116b4:	ldrh	r3, [fp, #-8]
   116b8:	add	r3, r3, #3
   116bc:	lsl	r3, r3, #1
   116c0:	cmp	r2, r3
   116c4:	bcc	116ec <_start@@Base+0xd5c>
   116c8:	ldrh	r3, [fp, #-8]
   116cc:	add	r3, r3, #2
   116d0:	lsl	r3, r3, #1
   116d4:	ldr	r2, [fp, #-12]
   116d8:	add	r3, r2, r3
   116dc:	mov	r0, r3
   116e0:	bl	10f24 <_start@@Base+0x594>
   116e4:	mov	r3, r0
   116e8:	strh	r3, [fp, #-6]
   116ec:	ldrh	r3, [fp, #-6]
   116f0:	cmp	r3, #0
   116f4:	movne	r3, #1
   116f8:	moveq	r3, #0
   116fc:	uxtb	r3, r3
   11700:	mov	r0, r3
   11704:	sub	sp, fp, #4
   11708:	pop	{fp, pc}
   1170c:			; <UNDEFINED> instruction: 0x000039b8
   11710:	andeq	r3, r0, ip, ror #9
   11714:	andeq	r3, r0, ip, asr r5
   11718:	push	{fp, lr}
   1171c:	add	fp, sp, #4
   11720:	sub	sp, sp, #16
   11724:	str	r0, [fp, #-16]
   11728:	str	r1, [fp, #-20]	; 0xffffffec
   1172c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11730:	lsl	r3, r3, #2
   11734:	ldr	r2, [fp, #-16]
   11738:	add	r3, r2, r3
   1173c:	str	r3, [fp, #-8]
   11740:	ldr	r0, [fp, #-16]
   11744:	bl	10fcc <_start@@Base+0x63c>
   11748:	mov	r2, r0
   1174c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11750:	cmp	r2, r3
   11754:	bhi	11778 <_start@@Base+0xde8>
   11758:	ldr	r3, [pc, #56]	; 11798 <_start@@Base+0xe08>
   1175c:	add	r3, pc, r3
   11760:	mov	r2, #156	; 0x9c
   11764:	ldr	r1, [pc, #48]	; 1179c <_start@@Base+0xe0c>
   11768:	add	r1, pc, r1
   1176c:	ldr	r0, [pc, #44]	; 117a0 <_start@@Base+0xe10>
   11770:	add	r0, pc, r0
   11774:	bl	10984 <__assert_fail@plt>
   11778:	ldr	r0, [fp, #-8]
   1177c:	bl	10e78 <_start@@Base+0x4e8>
   11780:	mov	r2, r0
   11784:	ldr	r3, [fp, #-8]
   11788:	add	r3, r3, r2
   1178c:	mov	r0, r3
   11790:	sub	sp, fp, #4
   11794:	pop	{fp, pc}
   11798:	andeq	r3, r0, r0, asr #23
   1179c:	strdeq	r3, [r0], -r4
   117a0:	andeq	r3, r0, ip, lsl #9
   117a4:	push	{fp, lr}
   117a8:	add	fp, sp, #4
   117ac:	sub	sp, sp, #24
   117b0:	str	r0, [fp, #-24]	; 0xffffffe8
   117b4:	mov	r3, #0
   117b8:	strh	r3, [fp, #-6]
   117bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117c0:	cmp	r3, #0
   117c4:	bne	117e8 <_start@@Base+0xe58>
   117c8:	ldr	r3, [pc, #232]	; 118b8 <_start@@Base+0xf28>
   117cc:	add	r3, pc, r3
   117d0:	mov	r2, #159	; 0x9f
   117d4:	ldr	r1, [pc, #224]	; 118bc <_start@@Base+0xf2c>
   117d8:	add	r1, pc, r1
   117dc:	ldr	r0, [pc, #220]	; 118c0 <_start@@Base+0xf30>
   117e0:	add	r0, pc, r0
   117e4:	bl	10984 <__assert_fail@plt>
   117e8:	mov	r3, #0
   117ec:	strh	r3, [fp, #-8]
   117f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   117f4:	bl	10ecc <_start@@Base+0x53c>
   117f8:	mov	r3, r0
   117fc:	rsb	r3, r3, #0
   11800:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11804:	add	r3, r2, r3
   11808:	str	r3, [fp, #-12]
   1180c:	ldr	r0, [fp, #-12]
   11810:	bl	10f24 <_start@@Base+0x594>
   11814:	mov	r3, r0
   11818:	mov	r2, r3
   1181c:	ldrh	r3, [fp, #-8]
   11820:	add	r3, r3, #3
   11824:	lsl	r3, r3, #1
   11828:	cmp	r2, r3
   1182c:	bcc	11854 <_start@@Base+0xec4>
   11830:	ldrh	r3, [fp, #-8]
   11834:	add	r3, r3, #2
   11838:	lsl	r3, r3, #1
   1183c:	ldr	r2, [fp, #-12]
   11840:	add	r3, r2, r3
   11844:	mov	r0, r3
   11848:	bl	10f24 <_start@@Base+0x594>
   1184c:	mov	r3, r0
   11850:	strh	r3, [fp, #-6]
   11854:	ldrh	r3, [fp, #-6]
   11858:	cmp	r3, #0
   1185c:	beq	1188c <_start@@Base+0xefc>
   11860:	ldrh	r3, [fp, #-6]
   11864:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11868:	add	r3, r2, r3
   1186c:	str	r3, [fp, #-16]
   11870:	ldr	r0, [fp, #-16]
   11874:	bl	10e78 <_start@@Base+0x4e8>
   11878:	mov	r3, r0
   1187c:	add	r3, r3, #4
   11880:	ldr	r2, [fp, #-16]
   11884:	add	r3, r2, r3
   11888:	b	118ac <_start@@Base+0xf1c>
   1188c:	ldr	r3, [pc, #48]	; 118c4 <_start@@Base+0xf34>
   11890:	add	r3, pc, r3
   11894:	mov	r2, #159	; 0x9f
   11898:	ldr	r1, [pc, #40]	; 118c8 <_start@@Base+0xf38>
   1189c:	add	r1, pc, r1
   118a0:	ldr	r0, [pc, #36]	; 118cc <_start@@Base+0xf3c>
   118a4:	add	r0, pc, r0
   118a8:	bl	10984 <__assert_fail@plt>
   118ac:	mov	r0, r3
   118b0:	sub	sp, fp, #4
   118b4:	pop	{fp, pc}
   118b8:	andeq	r3, r0, ip, ror #22
   118bc:	andeq	r3, r0, r4, lsl #7
   118c0:	strdeq	r3, [r0], -r4
   118c4:	andeq	r3, r0, r8, lsr #21
   118c8:	andeq	r3, r0, r0, asr #5
   118cc:	muleq	r0, r0, r3
   118d0:	push	{fp, lr}
   118d4:	add	fp, sp, #4
   118d8:	sub	sp, sp, #16
   118dc:	str	r0, [fp, #-16]
   118e0:	mov	r3, #0
   118e4:	strh	r3, [fp, #-6]
   118e8:	ldr	r3, [fp, #-16]
   118ec:	cmp	r3, #0
   118f0:	bne	11914 <_start@@Base+0xf84>
   118f4:	ldr	r3, [pc, #200]	; 119c4 <_start@@Base+0x1034>
   118f8:	add	r3, pc, r3
   118fc:	mov	r2, #160	; 0xa0
   11900:	ldr	r1, [pc, #192]	; 119c8 <_start@@Base+0x1038>
   11904:	add	r1, pc, r1
   11908:	ldr	r0, [pc, #188]	; 119cc <_start@@Base+0x103c>
   1190c:	add	r0, pc, r0
   11910:	bl	10984 <__assert_fail@plt>
   11914:	mov	r3, #1
   11918:	strh	r3, [fp, #-8]
   1191c:	ldr	r0, [fp, #-16]
   11920:	bl	10ecc <_start@@Base+0x53c>
   11924:	mov	r3, r0
   11928:	rsb	r3, r3, #0
   1192c:	ldr	r2, [fp, #-16]
   11930:	add	r3, r2, r3
   11934:	str	r3, [fp, #-12]
   11938:	ldr	r0, [fp, #-12]
   1193c:	bl	10f24 <_start@@Base+0x594>
   11940:	mov	r3, r0
   11944:	mov	r2, r3
   11948:	ldrh	r3, [fp, #-8]
   1194c:	add	r3, r3, #3
   11950:	lsl	r3, r3, #1
   11954:	cmp	r2, r3
   11958:	bcc	11980 <_start@@Base+0xff0>
   1195c:	ldrh	r3, [fp, #-8]
   11960:	add	r3, r3, #2
   11964:	lsl	r3, r3, #1
   11968:	ldr	r2, [fp, #-12]
   1196c:	add	r3, r2, r3
   11970:	mov	r0, r3
   11974:	bl	10f24 <_start@@Base+0x594>
   11978:	mov	r3, r0
   1197c:	strh	r3, [fp, #-6]
   11980:	ldrh	r3, [fp, #-6]
   11984:	cmp	r3, #0
   11988:	beq	119ac <_start@@Base+0x101c>
   1198c:	ldrh	r3, [fp, #-6]
   11990:	ldr	r2, [fp, #-16]
   11994:	add	r3, r2, r3
   11998:	mov	r0, r3
   1199c:	bl	10d58 <_start@@Base+0x3c8>
   119a0:	mov	r2, r0
   119a4:	mov	r3, r1
   119a8:	b	119b4 <_start@@Base+0x1024>
   119ac:	mov	r2, #0
   119b0:	mov	r3, #0
   119b4:	mov	r0, r2
   119b8:	mov	r1, r3
   119bc:	sub	sp, fp, #4
   119c0:	pop	{fp, pc}
   119c4:	andeq	r3, r0, ip, ror sl
   119c8:	andeq	r3, r0, r8, asr r2
   119cc:	andeq	r3, r0, r8, asr #5
   119d0:	push	{fp, lr}
   119d4:	add	fp, sp, #4
   119d8:	sub	sp, sp, #16
   119dc:	str	r0, [fp, #-16]
   119e0:	mov	r3, #0
   119e4:	strh	r3, [fp, #-6]
   119e8:	ldr	r3, [fp, #-16]
   119ec:	cmp	r3, #0
   119f0:	bne	11a14 <_start@@Base+0x1084>
   119f4:	ldr	r3, [pc, #164]	; 11aa0 <_start@@Base+0x1110>
   119f8:	add	r3, pc, r3
   119fc:	mov	r2, #160	; 0xa0
   11a00:	ldr	r1, [pc, #156]	; 11aa4 <_start@@Base+0x1114>
   11a04:	add	r1, pc, r1
   11a08:	ldr	r0, [pc, #152]	; 11aa8 <_start@@Base+0x1118>
   11a0c:	add	r0, pc, r0
   11a10:	bl	10984 <__assert_fail@plt>
   11a14:	mov	r3, #1
   11a18:	strh	r3, [fp, #-8]
   11a1c:	ldr	r0, [fp, #-16]
   11a20:	bl	10ecc <_start@@Base+0x53c>
   11a24:	mov	r3, r0
   11a28:	rsb	r3, r3, #0
   11a2c:	ldr	r2, [fp, #-16]
   11a30:	add	r3, r2, r3
   11a34:	str	r3, [fp, #-12]
   11a38:	ldr	r0, [fp, #-12]
   11a3c:	bl	10f24 <_start@@Base+0x594>
   11a40:	mov	r3, r0
   11a44:	mov	r2, r3
   11a48:	ldrh	r3, [fp, #-8]
   11a4c:	add	r3, r3, #3
   11a50:	lsl	r3, r3, #1
   11a54:	cmp	r2, r3
   11a58:	bcc	11a80 <_start@@Base+0x10f0>
   11a5c:	ldrh	r3, [fp, #-8]
   11a60:	add	r3, r3, #2
   11a64:	lsl	r3, r3, #1
   11a68:	ldr	r2, [fp, #-12]
   11a6c:	add	r3, r2, r3
   11a70:	mov	r0, r3
   11a74:	bl	10f24 <_start@@Base+0x594>
   11a78:	mov	r3, r0
   11a7c:	strh	r3, [fp, #-6]
   11a80:	ldrh	r3, [fp, #-6]
   11a84:	cmp	r3, #0
   11a88:	movne	r3, #1
   11a8c:	moveq	r3, #0
   11a90:	uxtb	r3, r3
   11a94:	mov	r0, r3
   11a98:	sub	sp, fp, #4
   11a9c:	pop	{fp, pc}
   11aa0:	andeq	r3, r0, r8, asr r9
   11aa4:	andeq	r3, r0, r8, asr r1
   11aa8:	andeq	r3, r0, r8, asr #3
   11aac:	push	{fp, lr}
   11ab0:	add	fp, sp, #4
   11ab4:	sub	sp, sp, #24
   11ab8:	str	r0, [fp, #-24]	; 0xffffffe8
   11abc:	mov	r3, #0
   11ac0:	strh	r3, [fp, #-6]
   11ac4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ac8:	cmp	r3, #0
   11acc:	bne	11af0 <_start@@Base+0x1160>
   11ad0:	ldr	r3, [pc, #200]	; 11ba0 <_start@@Base+0x1210>
   11ad4:	add	r3, pc, r3
   11ad8:	mov	r2, #167	; 0xa7
   11adc:	ldr	r1, [pc, #192]	; 11ba4 <_start@@Base+0x1214>
   11ae0:	add	r1, pc, r1
   11ae4:	ldr	r0, [pc, #188]	; 11ba8 <_start@@Base+0x1218>
   11ae8:	add	r0, pc, r0
   11aec:	bl	10984 <__assert_fail@plt>
   11af0:	mov	r3, #2
   11af4:	strh	r3, [fp, #-8]
   11af8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11afc:	bl	10ecc <_start@@Base+0x53c>
   11b00:	mov	r3, r0
   11b04:	rsb	r3, r3, #0
   11b08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11b0c:	add	r3, r2, r3
   11b10:	str	r3, [fp, #-12]
   11b14:	ldr	r0, [fp, #-12]
   11b18:	bl	10f24 <_start@@Base+0x594>
   11b1c:	mov	r3, r0
   11b20:	mov	r2, r3
   11b24:	ldrh	r3, [fp, #-8]
   11b28:	add	r3, r3, #3
   11b2c:	lsl	r3, r3, #1
   11b30:	cmp	r2, r3
   11b34:	bcc	11b5c <_start@@Base+0x11cc>
   11b38:	ldrh	r3, [fp, #-8]
   11b3c:	add	r3, r3, #2
   11b40:	lsl	r3, r3, #1
   11b44:	ldr	r2, [fp, #-12]
   11b48:	add	r3, r2, r3
   11b4c:	mov	r0, r3
   11b50:	bl	10f24 <_start@@Base+0x594>
   11b54:	mov	r3, r0
   11b58:	strh	r3, [fp, #-6]
   11b5c:	ldrh	r3, [fp, #-6]
   11b60:	cmp	r3, #0
   11b64:	beq	11b90 <_start@@Base+0x1200>
   11b68:	ldrh	r3, [fp, #-6]
   11b6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11b70:	add	r3, r2, r3
   11b74:	str	r3, [fp, #-16]
   11b78:	ldr	r0, [fp, #-16]
   11b7c:	bl	10e78 <_start@@Base+0x4e8>
   11b80:	mov	r2, r0
   11b84:	ldr	r3, [fp, #-16]
   11b88:	add	r3, r3, r2
   11b8c:	b	11b94 <_start@@Base+0x1204>
   11b90:	mov	r3, #0
   11b94:	mov	r0, r3
   11b98:	sub	sp, fp, #4
   11b9c:	pop	{fp, pc}
   11ba0:	andeq	r3, r0, r4, ror #17
   11ba4:	andeq	r3, r0, ip, ror r0
   11ba8:	andeq	r3, r0, ip, ror #1
   11bac:	push	{fp, lr}
   11bb0:	add	fp, sp, #4
   11bb4:	sub	sp, sp, #16
   11bb8:	str	r0, [fp, #-16]
   11bbc:	mov	r3, #0
   11bc0:	strh	r3, [fp, #-6]
   11bc4:	ldr	r3, [fp, #-16]
   11bc8:	cmp	r3, #0
   11bcc:	bne	11bf0 <_start@@Base+0x1260>
   11bd0:	ldr	r3, [pc, #164]	; 11c7c <_start@@Base+0x12ec>
   11bd4:	add	r3, pc, r3
   11bd8:	mov	r2, #167	; 0xa7
   11bdc:	ldr	r1, [pc, #156]	; 11c80 <_start@@Base+0x12f0>
   11be0:	add	r1, pc, r1
   11be4:	ldr	r0, [pc, #152]	; 11c84 <_start@@Base+0x12f4>
   11be8:	add	r0, pc, r0
   11bec:	bl	10984 <__assert_fail@plt>
   11bf0:	mov	r3, #2
   11bf4:	strh	r3, [fp, #-8]
   11bf8:	ldr	r0, [fp, #-16]
   11bfc:	bl	10ecc <_start@@Base+0x53c>
   11c00:	mov	r3, r0
   11c04:	rsb	r3, r3, #0
   11c08:	ldr	r2, [fp, #-16]
   11c0c:	add	r3, r2, r3
   11c10:	str	r3, [fp, #-12]
   11c14:	ldr	r0, [fp, #-12]
   11c18:	bl	10f24 <_start@@Base+0x594>
   11c1c:	mov	r3, r0
   11c20:	mov	r2, r3
   11c24:	ldrh	r3, [fp, #-8]
   11c28:	add	r3, r3, #3
   11c2c:	lsl	r3, r3, #1
   11c30:	cmp	r2, r3
   11c34:	bcc	11c5c <_start@@Base+0x12cc>
   11c38:	ldrh	r3, [fp, #-8]
   11c3c:	add	r3, r3, #2
   11c40:	lsl	r3, r3, #1
   11c44:	ldr	r2, [fp, #-12]
   11c48:	add	r3, r2, r3
   11c4c:	mov	r0, r3
   11c50:	bl	10f24 <_start@@Base+0x594>
   11c54:	mov	r3, r0
   11c58:	strh	r3, [fp, #-6]
   11c5c:	ldrh	r3, [fp, #-6]
   11c60:	cmp	r3, #0
   11c64:	movne	r3, #1
   11c68:	moveq	r3, #0
   11c6c:	uxtb	r3, r3
   11c70:	mov	r0, r3
   11c74:	sub	sp, fp, #4
   11c78:	pop	{fp, pc}
   11c7c:			; <UNDEFINED> instruction: 0x000037bc
   11c80:	andeq	r2, r0, ip, ror pc
   11c84:	andeq	r2, r0, ip, ror #31
   11c88:	push	{fp, lr}
   11c8c:	add	fp, sp, #4
   11c90:	sub	sp, sp, #8
   11c94:	str	r0, [fp, #-8]
   11c98:	ldr	r3, [fp, #-8]
   11c9c:	cmp	r3, #0
   11ca0:	beq	11cbc <_start@@Base+0x132c>
   11ca4:	ldr	r3, [fp, #-8]
   11ca8:	sub	r3, r3, #4
   11cac:	mov	r0, r3
   11cb0:	bl	10e78 <_start@@Base+0x4e8>
   11cb4:	mov	r3, r0
   11cb8:	b	11cc0 <_start@@Base+0x1330>
   11cbc:	mov	r3, #0
   11cc0:	mov	r0, r3
   11cc4:	sub	sp, fp, #4
   11cc8:	pop	{fp, pc}
   11ccc:	push	{fp, lr}
   11cd0:	add	fp, sp, #4
   11cd4:	sub	sp, sp, #16
   11cd8:	str	r0, [fp, #-16]
   11cdc:	str	r1, [fp, #-20]	; 0xffffffec
   11ce0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ce4:	lsl	r3, r3, #2
   11ce8:	ldr	r2, [fp, #-16]
   11cec:	add	r3, r2, r3
   11cf0:	str	r3, [fp, #-8]
   11cf4:	ldr	r0, [fp, #-16]
   11cf8:	bl	10fcc <_start@@Base+0x63c>
   11cfc:	mov	r2, r0
   11d00:	ldr	r3, [fp, #-20]	; 0xffffffec
   11d04:	cmp	r2, r3
   11d08:	bhi	11d2c <_start@@Base+0x139c>
   11d0c:	ldr	r3, [pc, #56]	; 11d4c <_start@@Base+0x13bc>
   11d10:	add	r3, pc, r3
   11d14:	mov	r2, #174	; 0xae
   11d18:	ldr	r1, [pc, #48]	; 11d50 <_start@@Base+0x13c0>
   11d1c:	add	r1, pc, r1
   11d20:	ldr	r0, [pc, #44]	; 11d54 <_start@@Base+0x13c4>
   11d24:	add	r0, pc, r0
   11d28:	bl	10984 <__assert_fail@plt>
   11d2c:	ldr	r0, [fp, #-8]
   11d30:	bl	10e78 <_start@@Base+0x4e8>
   11d34:	mov	r2, r0
   11d38:	ldr	r3, [fp, #-8]
   11d3c:	add	r3, r3, r2
   11d40:	mov	r0, r3
   11d44:	sub	sp, fp, #4
   11d48:	pop	{fp, pc}
   11d4c:	andeq	r3, r0, r4, ror r7
   11d50:	andeq	r2, r0, r0, asr #28
   11d54:	ldrdeq	r2, [r0], -r8
   11d58:	push	{fp, lr}
   11d5c:	add	fp, sp, #4
   11d60:	sub	sp, sp, #24
   11d64:	str	r0, [fp, #-24]	; 0xffffffe8
   11d68:	mov	r3, #0
   11d6c:	strh	r3, [fp, #-6]
   11d70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d74:	cmp	r3, #0
   11d78:	bne	11d9c <_start@@Base+0x140c>
   11d7c:	ldr	r3, [pc, #232]	; 11e6c <_start@@Base+0x14dc>
   11d80:	add	r3, pc, r3
   11d84:	mov	r2, #177	; 0xb1
   11d88:	ldr	r1, [pc, #224]	; 11e70 <_start@@Base+0x14e0>
   11d8c:	add	r1, pc, r1
   11d90:	ldr	r0, [pc, #220]	; 11e74 <_start@@Base+0x14e4>
   11d94:	add	r0, pc, r0
   11d98:	bl	10984 <__assert_fail@plt>
   11d9c:	mov	r3, #0
   11da0:	strh	r3, [fp, #-8]
   11da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11da8:	bl	10ecc <_start@@Base+0x53c>
   11dac:	mov	r3, r0
   11db0:	rsb	r3, r3, #0
   11db4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11db8:	add	r3, r2, r3
   11dbc:	str	r3, [fp, #-12]
   11dc0:	ldr	r0, [fp, #-12]
   11dc4:	bl	10f24 <_start@@Base+0x594>
   11dc8:	mov	r3, r0
   11dcc:	mov	r2, r3
   11dd0:	ldrh	r3, [fp, #-8]
   11dd4:	add	r3, r3, #3
   11dd8:	lsl	r3, r3, #1
   11ddc:	cmp	r2, r3
   11de0:	bcc	11e08 <_start@@Base+0x1478>
   11de4:	ldrh	r3, [fp, #-8]
   11de8:	add	r3, r3, #2
   11dec:	lsl	r3, r3, #1
   11df0:	ldr	r2, [fp, #-12]
   11df4:	add	r3, r2, r3
   11df8:	mov	r0, r3
   11dfc:	bl	10f24 <_start@@Base+0x594>
   11e00:	mov	r3, r0
   11e04:	strh	r3, [fp, #-6]
   11e08:	ldrh	r3, [fp, #-6]
   11e0c:	cmp	r3, #0
   11e10:	beq	11e40 <_start@@Base+0x14b0>
   11e14:	ldrh	r3, [fp, #-6]
   11e18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11e1c:	add	r3, r2, r3
   11e20:	str	r3, [fp, #-16]
   11e24:	ldr	r0, [fp, #-16]
   11e28:	bl	10e78 <_start@@Base+0x4e8>
   11e2c:	mov	r3, r0
   11e30:	add	r3, r3, #4
   11e34:	ldr	r2, [fp, #-16]
   11e38:	add	r3, r2, r3
   11e3c:	b	11e60 <_start@@Base+0x14d0>
   11e40:	ldr	r3, [pc, #48]	; 11e78 <_start@@Base+0x14e8>
   11e44:	add	r3, pc, r3
   11e48:	mov	r2, #177	; 0xb1
   11e4c:	ldr	r1, [pc, #40]	; 11e7c <_start@@Base+0x14ec>
   11e50:	add	r1, pc, r1
   11e54:	ldr	r0, [pc, #36]	; 11e80 <_start@@Base+0x14f0>
   11e58:	add	r0, pc, r0
   11e5c:	bl	10984 <__assert_fail@plt>
   11e60:	mov	r0, r3
   11e64:	sub	sp, fp, #4
   11e68:	pop	{fp, pc}
   11e6c:	andeq	r3, r0, ip, ror #10
   11e70:	ldrdeq	r2, [r0], -r0
   11e74:	andeq	r2, r0, r0, asr #28
   11e78:	andeq	r3, r0, r8, lsr #9
   11e7c:	andeq	r2, r0, ip, lsl #26
   11e80:	ldrdeq	r2, [r0], -ip
   11e84:	push	{fp, lr}
   11e88:	add	fp, sp, #4
   11e8c:	sub	sp, sp, #24
   11e90:	str	r0, [fp, #-24]	; 0xffffffe8
   11e94:	mov	r3, #0
   11e98:	strh	r3, [fp, #-6]
   11e9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ea0:	cmp	r3, #0
   11ea4:	bne	11ec8 <_start@@Base+0x1538>
   11ea8:	ldr	r3, [pc, #232]	; 11f98 <_start@@Base+0x1608>
   11eac:	add	r3, pc, r3
   11eb0:	mov	r2, #183	; 0xb7
   11eb4:	ldr	r1, [pc, #224]	; 11f9c <_start@@Base+0x160c>
   11eb8:	add	r1, pc, r1
   11ebc:	ldr	r0, [pc, #220]	; 11fa0 <_start@@Base+0x1610>
   11ec0:	add	r0, pc, r0
   11ec4:	bl	10984 <__assert_fail@plt>
   11ec8:	mov	r3, #1
   11ecc:	strh	r3, [fp, #-8]
   11ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11ed4:	bl	10ecc <_start@@Base+0x53c>
   11ed8:	mov	r3, r0
   11edc:	rsb	r3, r3, #0
   11ee0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11ee4:	add	r3, r2, r3
   11ee8:	str	r3, [fp, #-12]
   11eec:	ldr	r0, [fp, #-12]
   11ef0:	bl	10f24 <_start@@Base+0x594>
   11ef4:	mov	r3, r0
   11ef8:	mov	r2, r3
   11efc:	ldrh	r3, [fp, #-8]
   11f00:	add	r3, r3, #3
   11f04:	lsl	r3, r3, #1
   11f08:	cmp	r2, r3
   11f0c:	bcc	11f34 <_start@@Base+0x15a4>
   11f10:	ldrh	r3, [fp, #-8]
   11f14:	add	r3, r3, #2
   11f18:	lsl	r3, r3, #1
   11f1c:	ldr	r2, [fp, #-12]
   11f20:	add	r3, r2, r3
   11f24:	mov	r0, r3
   11f28:	bl	10f24 <_start@@Base+0x594>
   11f2c:	mov	r3, r0
   11f30:	strh	r3, [fp, #-6]
   11f34:	ldrh	r3, [fp, #-6]
   11f38:	cmp	r3, #0
   11f3c:	beq	11f6c <_start@@Base+0x15dc>
   11f40:	ldrh	r3, [fp, #-6]
   11f44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11f48:	add	r3, r2, r3
   11f4c:	str	r3, [fp, #-16]
   11f50:	ldr	r0, [fp, #-16]
   11f54:	bl	10e78 <_start@@Base+0x4e8>
   11f58:	mov	r3, r0
   11f5c:	add	r3, r3, #4
   11f60:	ldr	r2, [fp, #-16]
   11f64:	add	r3, r2, r3
   11f68:	b	11f8c <_start@@Base+0x15fc>
   11f6c:	ldr	r3, [pc, #48]	; 11fa4 <_start@@Base+0x1614>
   11f70:	add	r3, pc, r3
   11f74:	mov	r2, #183	; 0xb7
   11f78:	ldr	r1, [pc, #40]	; 11fa8 <_start@@Base+0x1618>
   11f7c:	add	r1, pc, r1
   11f80:	ldr	r0, [pc, #36]	; 11fac <_start@@Base+0x161c>
   11f84:	add	r0, pc, r0
   11f88:	bl	10984 <__assert_fail@plt>
   11f8c:	mov	r0, r3
   11f90:	sub	sp, fp, #4
   11f94:	pop	{fp, pc}
   11f98:	andeq	r3, r0, r8, asr r4
   11f9c:	andeq	r2, r0, r4, lsr #25
   11fa0:	andeq	r2, r0, r4, lsl sp
   11fa4:	muleq	r0, r4, r3
   11fa8:	andeq	r2, r0, r0, ror #23
   11fac:			; <UNDEFINED> instruction: 0x00002cb0
   11fb0:	push	{fp, lr}
   11fb4:	add	fp, sp, #4
   11fb8:	sub	sp, sp, #16
   11fbc:	str	r0, [fp, #-16]
   11fc0:	mov	r3, #0
   11fc4:	strh	r3, [fp, #-6]
   11fc8:	ldr	r3, [fp, #-16]
   11fcc:	cmp	r3, #0
   11fd0:	bne	11ff4 <_start@@Base+0x1664>
   11fd4:	ldr	r3, [pc, #188]	; 12098 <_start@@Base+0x1708>
   11fd8:	add	r3, pc, r3
   11fdc:	mov	r2, #184	; 0xb8
   11fe0:	ldr	r1, [pc, #180]	; 1209c <_start@@Base+0x170c>
   11fe4:	add	r1, pc, r1
   11fe8:	ldr	r0, [pc, #176]	; 120a0 <_start@@Base+0x1710>
   11fec:	add	r0, pc, r0
   11ff0:	bl	10984 <__assert_fail@plt>
   11ff4:	mov	r3, #2
   11ff8:	strh	r3, [fp, #-8]
   11ffc:	ldr	r0, [fp, #-16]
   12000:	bl	10ecc <_start@@Base+0x53c>
   12004:	mov	r3, r0
   12008:	rsb	r3, r3, #0
   1200c:	ldr	r2, [fp, #-16]
   12010:	add	r3, r2, r3
   12014:	str	r3, [fp, #-12]
   12018:	ldr	r0, [fp, #-12]
   1201c:	bl	10f24 <_start@@Base+0x594>
   12020:	mov	r3, r0
   12024:	mov	r2, r3
   12028:	ldrh	r3, [fp, #-8]
   1202c:	add	r3, r3, #3
   12030:	lsl	r3, r3, #1
   12034:	cmp	r2, r3
   12038:	bcc	12060 <_start@@Base+0x16d0>
   1203c:	ldrh	r3, [fp, #-8]
   12040:	add	r3, r3, #2
   12044:	lsl	r3, r3, #1
   12048:	ldr	r2, [fp, #-12]
   1204c:	add	r3, r2, r3
   12050:	mov	r0, r3
   12054:	bl	10f24 <_start@@Base+0x594>
   12058:	mov	r3, r0
   1205c:	strh	r3, [fp, #-6]
   12060:	ldrh	r3, [fp, #-6]
   12064:	cmp	r3, #0
   12068:	beq	12088 <_start@@Base+0x16f8>
   1206c:	ldrh	r3, [fp, #-6]
   12070:	ldr	r2, [fp, #-16]
   12074:	add	r3, r2, r3
   12078:	mov	r0, r3
   1207c:	bl	10e24 <_start@@Base+0x494>
   12080:	mov	r3, r0
   12084:	b	1208c <_start@@Base+0x16fc>
   12088:	mov	r3, #0
   1208c:	mov	r0, r3
   12090:	sub	sp, fp, #4
   12094:	pop	{fp, pc}
   12098:	andeq	r3, r0, r0, lsr #8
   1209c:	andeq	r2, r0, r8, ror fp
   120a0:	andeq	r2, r0, r8, ror #23
   120a4:	push	{fp, lr}
   120a8:	add	fp, sp, #4
   120ac:	sub	sp, sp, #16
   120b0:	str	r0, [fp, #-16]
   120b4:	mov	r3, #0
   120b8:	strh	r3, [fp, #-6]
   120bc:	ldr	r3, [fp, #-16]
   120c0:	cmp	r3, #0
   120c4:	bne	120e8 <_start@@Base+0x1758>
   120c8:	ldr	r3, [pc, #164]	; 12174 <_start@@Base+0x17e4>
   120cc:	add	r3, pc, r3
   120d0:	mov	r2, #184	; 0xb8
   120d4:	ldr	r1, [pc, #156]	; 12178 <_start@@Base+0x17e8>
   120d8:	add	r1, pc, r1
   120dc:	ldr	r0, [pc, #152]	; 1217c <_start@@Base+0x17ec>
   120e0:	add	r0, pc, r0
   120e4:	bl	10984 <__assert_fail@plt>
   120e8:	mov	r3, #2
   120ec:	strh	r3, [fp, #-8]
   120f0:	ldr	r0, [fp, #-16]
   120f4:	bl	10ecc <_start@@Base+0x53c>
   120f8:	mov	r3, r0
   120fc:	rsb	r3, r3, #0
   12100:	ldr	r2, [fp, #-16]
   12104:	add	r3, r2, r3
   12108:	str	r3, [fp, #-12]
   1210c:	ldr	r0, [fp, #-12]
   12110:	bl	10f24 <_start@@Base+0x594>
   12114:	mov	r3, r0
   12118:	mov	r2, r3
   1211c:	ldrh	r3, [fp, #-8]
   12120:	add	r3, r3, #3
   12124:	lsl	r3, r3, #1
   12128:	cmp	r2, r3
   1212c:	bcc	12154 <_start@@Base+0x17c4>
   12130:	ldrh	r3, [fp, #-8]
   12134:	add	r3, r3, #2
   12138:	lsl	r3, r3, #1
   1213c:	ldr	r2, [fp, #-12]
   12140:	add	r3, r2, r3
   12144:	mov	r0, r3
   12148:	bl	10f24 <_start@@Base+0x594>
   1214c:	mov	r3, r0
   12150:	strh	r3, [fp, #-6]
   12154:	ldrh	r3, [fp, #-6]
   12158:	cmp	r3, #0
   1215c:	movne	r3, #1
   12160:	moveq	r3, #0
   12164:	uxtb	r3, r3
   12168:	mov	r0, r3
   1216c:	sub	sp, fp, #4
   12170:	pop	{fp, pc}
   12174:	andeq	r3, r0, r8, lsl #6
   12178:	andeq	r2, r0, r4, lsl #21
   1217c:	strdeq	r2, [r0], -r4
   12180:	push	{fp, lr}
   12184:	add	fp, sp, #4
   12188:	sub	sp, sp, #24
   1218c:	str	r0, [fp, #-24]	; 0xffffffe8
   12190:	mov	r3, #0
   12194:	strh	r3, [fp, #-6]
   12198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1219c:	cmp	r3, #0
   121a0:	bne	121c4 <_start@@Base+0x1834>
   121a4:	ldr	r3, [pc, #228]	; 12290 <_start@@Base+0x1900>
   121a8:	add	r3, pc, r3
   121ac:	mov	r2, #185	; 0xb9
   121b0:	ldr	r1, [pc, #220]	; 12294 <_start@@Base+0x1904>
   121b4:	add	r1, pc, r1
   121b8:	ldr	r0, [pc, #216]	; 12298 <_start@@Base+0x1908>
   121bc:	add	r0, pc, r0
   121c0:	bl	10984 <__assert_fail@plt>
   121c4:	mov	r3, #3
   121c8:	strh	r3, [fp, #-8]
   121cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121d0:	bl	10ecc <_start@@Base+0x53c>
   121d4:	mov	r3, r0
   121d8:	rsb	r3, r3, #0
   121dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   121e0:	add	r3, r2, r3
   121e4:	str	r3, [fp, #-12]
   121e8:	ldr	r0, [fp, #-12]
   121ec:	bl	10f24 <_start@@Base+0x594>
   121f0:	mov	r3, r0
   121f4:	mov	r2, r3
   121f8:	ldrh	r3, [fp, #-8]
   121fc:	add	r3, r3, #3
   12200:	lsl	r3, r3, #1
   12204:	cmp	r2, r3
   12208:	bcc	12230 <_start@@Base+0x18a0>
   1220c:	ldrh	r3, [fp, #-8]
   12210:	add	r3, r3, #2
   12214:	lsl	r3, r3, #1
   12218:	ldr	r2, [fp, #-12]
   1221c:	add	r3, r2, r3
   12220:	mov	r0, r3
   12224:	bl	10f24 <_start@@Base+0x594>
   12228:	mov	r3, r0
   1222c:	strh	r3, [fp, #-6]
   12230:	ldrh	r3, [fp, #-6]
   12234:	cmp	r3, #0
   12238:	beq	12264 <_start@@Base+0x18d4>
   1223c:	ldrh	r3, [fp, #-6]
   12240:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12244:	add	r3, r2, r3
   12248:	str	r3, [fp, #-16]
   1224c:	ldr	r0, [fp, #-16]
   12250:	bl	10e78 <_start@@Base+0x4e8>
   12254:	mov	r2, r0
   12258:	ldr	r3, [fp, #-16]
   1225c:	add	r3, r3, r2
   12260:	b	12284 <_start@@Base+0x18f4>
   12264:	ldr	r3, [pc, #48]	; 1229c <_start@@Base+0x190c>
   12268:	add	r3, pc, r3
   1226c:	mov	r2, #185	; 0xb9
   12270:	ldr	r1, [pc, #40]	; 122a0 <_start@@Base+0x1910>
   12274:	add	r1, pc, r1
   12278:	ldr	r0, [pc, #36]	; 122a4 <_start@@Base+0x1914>
   1227c:	add	r0, pc, r0
   12280:	bl	10984 <__assert_fail@plt>
   12284:	mov	r0, r3
   12288:	sub	sp, fp, #4
   1228c:	pop	{fp, pc}
   12290:	andeq	r3, r0, ip, ror #4
   12294:	andeq	r2, r0, r8, lsr #19
   12298:	andeq	r2, r0, r8, lsl sl
   1229c:	andeq	r3, r0, ip, lsr #3
   122a0:	andeq	r2, r0, r8, ror #17
   122a4:			; <UNDEFINED> instruction: 0x000029b8
   122a8:	push	{fp, lr}
   122ac:	add	fp, sp, #4
   122b0:	sub	sp, sp, #8
   122b4:	str	r0, [fp, #-8]
   122b8:	ldr	r3, [fp, #-8]
   122bc:	cmp	r3, #0
   122c0:	beq	122dc <_start@@Base+0x194c>
   122c4:	ldr	r3, [fp, #-8]
   122c8:	sub	r3, r3, #4
   122cc:	mov	r0, r3
   122d0:	bl	10e78 <_start@@Base+0x4e8>
   122d4:	mov	r3, r0
   122d8:	b	122e0 <_start@@Base+0x1950>
   122dc:	mov	r3, #0
   122e0:	mov	r0, r3
   122e4:	sub	sp, fp, #4
   122e8:	pop	{fp, pc}
   122ec:	push	{fp, lr}
   122f0:	add	fp, sp, #4
   122f4:	sub	sp, sp, #16
   122f8:	str	r0, [fp, #-16]
   122fc:	str	r1, [fp, #-20]	; 0xffffffec
   12300:	ldr	r3, [fp, #-20]	; 0xffffffec
   12304:	lsl	r3, r3, #2
   12308:	ldr	r2, [fp, #-16]
   1230c:	add	r3, r2, r3
   12310:	str	r3, [fp, #-8]
   12314:	ldr	r0, [fp, #-16]
   12318:	bl	10fcc <_start@@Base+0x63c>
   1231c:	mov	r2, r0
   12320:	ldr	r3, [fp, #-20]	; 0xffffffec
   12324:	cmp	r2, r3
   12328:	bhi	1234c <_start@@Base+0x19bc>
   1232c:	ldr	r3, [pc, #56]	; 1236c <_start@@Base+0x19dc>
   12330:	add	r3, pc, r3
   12334:	mov	r2, #192	; 0xc0
   12338:	ldr	r1, [pc, #48]	; 12370 <_start@@Base+0x19e0>
   1233c:	add	r1, pc, r1
   12340:	ldr	r0, [pc, #44]	; 12374 <_start@@Base+0x19e4>
   12344:	add	r0, pc, r0
   12348:	bl	10984 <__assert_fail@plt>
   1234c:	ldr	r0, [fp, #-8]
   12350:	bl	10e78 <_start@@Base+0x4e8>
   12354:	mov	r2, r0
   12358:	ldr	r3, [fp, #-8]
   1235c:	add	r3, r3, r2
   12360:	mov	r0, r3
   12364:	sub	sp, fp, #4
   12368:	pop	{fp, pc}
   1236c:	andeq	r2, r0, ip, asr sp
   12370:	andeq	r2, r0, r0, lsr #16
   12374:			; <UNDEFINED> instruction: 0x000028b8
   12378:	push	{fp, lr}
   1237c:	add	fp, sp, #4
   12380:	sub	sp, sp, #24
   12384:	str	r0, [fp, #-24]	; 0xffffffe8
   12388:	mov	r3, #0
   1238c:	strh	r3, [fp, #-6]
   12390:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12394:	cmp	r3, #0
   12398:	bne	123bc <_start@@Base+0x1a2c>
   1239c:	ldr	r3, [pc, #232]	; 1248c <_start@@Base+0x1afc>
   123a0:	add	r3, pc, r3
   123a4:	mov	r2, #195	; 0xc3
   123a8:	ldr	r1, [pc, #224]	; 12490 <_start@@Base+0x1b00>
   123ac:	add	r1, pc, r1
   123b0:	ldr	r0, [pc, #220]	; 12494 <_start@@Base+0x1b04>
   123b4:	add	r0, pc, r0
   123b8:	bl	10984 <__assert_fail@plt>
   123bc:	mov	r3, #0
   123c0:	strh	r3, [fp, #-8]
   123c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   123c8:	bl	10ecc <_start@@Base+0x53c>
   123cc:	mov	r3, r0
   123d0:	rsb	r3, r3, #0
   123d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   123d8:	add	r3, r2, r3
   123dc:	str	r3, [fp, #-12]
   123e0:	ldr	r0, [fp, #-12]
   123e4:	bl	10f24 <_start@@Base+0x594>
   123e8:	mov	r3, r0
   123ec:	mov	r2, r3
   123f0:	ldrh	r3, [fp, #-8]
   123f4:	add	r3, r3, #3
   123f8:	lsl	r3, r3, #1
   123fc:	cmp	r2, r3
   12400:	bcc	12428 <_start@@Base+0x1a98>
   12404:	ldrh	r3, [fp, #-8]
   12408:	add	r3, r3, #2
   1240c:	lsl	r3, r3, #1
   12410:	ldr	r2, [fp, #-12]
   12414:	add	r3, r2, r3
   12418:	mov	r0, r3
   1241c:	bl	10f24 <_start@@Base+0x594>
   12420:	mov	r3, r0
   12424:	strh	r3, [fp, #-6]
   12428:	ldrh	r3, [fp, #-6]
   1242c:	cmp	r3, #0
   12430:	beq	12460 <_start@@Base+0x1ad0>
   12434:	ldrh	r3, [fp, #-6]
   12438:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1243c:	add	r3, r2, r3
   12440:	str	r3, [fp, #-16]
   12444:	ldr	r0, [fp, #-16]
   12448:	bl	10e78 <_start@@Base+0x4e8>
   1244c:	mov	r3, r0
   12450:	add	r3, r3, #4
   12454:	ldr	r2, [fp, #-16]
   12458:	add	r3, r2, r3
   1245c:	b	12480 <_start@@Base+0x1af0>
   12460:	ldr	r3, [pc, #48]	; 12498 <_start@@Base+0x1b08>
   12464:	add	r3, pc, r3
   12468:	mov	r2, #195	; 0xc3
   1246c:	ldr	r1, [pc, #40]	; 1249c <_start@@Base+0x1b0c>
   12470:	add	r1, pc, r1
   12474:	ldr	r0, [pc, #36]	; 124a0 <_start@@Base+0x1b10>
   12478:	add	r0, pc, r0
   1247c:	bl	10984 <__assert_fail@plt>
   12480:	mov	r0, r3
   12484:	sub	sp, fp, #4
   12488:	pop	{fp, pc}
   1248c:	andeq	r2, r0, r4, lsl #26
   12490:			; <UNDEFINED> instruction: 0x000027b0
   12494:	andeq	r2, r0, r0, lsr #16
   12498:	andeq	r2, r0, r0, asr #24
   1249c:	andeq	r2, r0, ip, ror #13
   124a0:			; <UNDEFINED> instruction: 0x000027bc
   124a4:	push	{fp, lr}
   124a8:	add	fp, sp, #4
   124ac:	sub	sp, sp, #24
   124b0:	str	r0, [fp, #-24]	; 0xffffffe8
   124b4:	mov	r3, #0
   124b8:	strh	r3, [fp, #-6]
   124bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124c0:	cmp	r3, #0
   124c4:	bne	124e8 <_start@@Base+0x1b58>
   124c8:	ldr	r3, [pc, #228]	; 125b4 <_start@@Base+0x1c24>
   124cc:	add	r3, pc, r3
   124d0:	mov	r2, #201	; 0xc9
   124d4:	ldr	r1, [pc, #220]	; 125b8 <_start@@Base+0x1c28>
   124d8:	add	r1, pc, r1
   124dc:	ldr	r0, [pc, #216]	; 125bc <_start@@Base+0x1c2c>
   124e0:	add	r0, pc, r0
   124e4:	bl	10984 <__assert_fail@plt>
   124e8:	mov	r3, #1
   124ec:	strh	r3, [fp, #-8]
   124f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   124f4:	bl	10ecc <_start@@Base+0x53c>
   124f8:	mov	r3, r0
   124fc:	rsb	r3, r3, #0
   12500:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12504:	add	r3, r2, r3
   12508:	str	r3, [fp, #-12]
   1250c:	ldr	r0, [fp, #-12]
   12510:	bl	10f24 <_start@@Base+0x594>
   12514:	mov	r3, r0
   12518:	mov	r2, r3
   1251c:	ldrh	r3, [fp, #-8]
   12520:	add	r3, r3, #3
   12524:	lsl	r3, r3, #1
   12528:	cmp	r2, r3
   1252c:	bcc	12554 <_start@@Base+0x1bc4>
   12530:	ldrh	r3, [fp, #-8]
   12534:	add	r3, r3, #2
   12538:	lsl	r3, r3, #1
   1253c:	ldr	r2, [fp, #-12]
   12540:	add	r3, r2, r3
   12544:	mov	r0, r3
   12548:	bl	10f24 <_start@@Base+0x594>
   1254c:	mov	r3, r0
   12550:	strh	r3, [fp, #-6]
   12554:	ldrh	r3, [fp, #-6]
   12558:	cmp	r3, #0
   1255c:	beq	12588 <_start@@Base+0x1bf8>
   12560:	ldrh	r3, [fp, #-6]
   12564:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12568:	add	r3, r2, r3
   1256c:	str	r3, [fp, #-16]
   12570:	ldr	r0, [fp, #-16]
   12574:	bl	10e78 <_start@@Base+0x4e8>
   12578:	mov	r2, r0
   1257c:	ldr	r3, [fp, #-16]
   12580:	add	r3, r3, r2
   12584:	b	125a8 <_start@@Base+0x1c18>
   12588:	ldr	r3, [pc, #48]	; 125c0 <_start@@Base+0x1c30>
   1258c:	add	r3, pc, r3
   12590:	mov	r2, #201	; 0xc9
   12594:	ldr	r1, [pc, #40]	; 125c4 <_start@@Base+0x1c34>
   12598:	add	r1, pc, r1
   1259c:	ldr	r0, [pc, #36]	; 125c8 <_start@@Base+0x1c38>
   125a0:	add	r0, pc, r0
   125a4:	bl	10984 <__assert_fail@plt>
   125a8:	mov	r0, r3
   125ac:	sub	sp, fp, #4
   125b0:	pop	{fp, pc}
   125b4:	strdeq	r2, [r0], -r0
   125b8:	andeq	r2, r0, r4, lsl #13
   125bc:	strdeq	r2, [r0], -r4
   125c0:	andeq	r2, r0, r0, lsr fp
   125c4:	andeq	r2, r0, r4, asr #11
   125c8:	muleq	r0, r4, r6
   125cc:	push	{fp, lr}
   125d0:	add	fp, sp, #4
   125d4:	sub	sp, sp, #16
   125d8:	str	r0, [fp, #-16]
   125dc:	mov	r3, #0
   125e0:	strh	r3, [fp, #-6]
   125e4:	ldr	r3, [fp, #-16]
   125e8:	cmp	r3, #0
   125ec:	bne	12610 <_start@@Base+0x1c80>
   125f0:	ldr	r3, [pc, #188]	; 126b4 <_start@@Base+0x1d24>
   125f4:	add	r3, pc, r3
   125f8:	mov	r2, #202	; 0xca
   125fc:	ldr	r1, [pc, #180]	; 126b8 <_start@@Base+0x1d28>
   12600:	add	r1, pc, r1
   12604:	ldr	r0, [pc, #176]	; 126bc <_start@@Base+0x1d2c>
   12608:	add	r0, pc, r0
   1260c:	bl	10984 <__assert_fail@plt>
   12610:	mov	r3, #2
   12614:	strh	r3, [fp, #-8]
   12618:	ldr	r0, [fp, #-16]
   1261c:	bl	10ecc <_start@@Base+0x53c>
   12620:	mov	r3, r0
   12624:	rsb	r3, r3, #0
   12628:	ldr	r2, [fp, #-16]
   1262c:	add	r3, r2, r3
   12630:	str	r3, [fp, #-12]
   12634:	ldr	r0, [fp, #-12]
   12638:	bl	10f24 <_start@@Base+0x594>
   1263c:	mov	r3, r0
   12640:	mov	r2, r3
   12644:	ldrh	r3, [fp, #-8]
   12648:	add	r3, r3, #3
   1264c:	lsl	r3, r3, #1
   12650:	cmp	r2, r3
   12654:	bcc	1267c <_start@@Base+0x1cec>
   12658:	ldrh	r3, [fp, #-8]
   1265c:	add	r3, r3, #2
   12660:	lsl	r3, r3, #1
   12664:	ldr	r2, [fp, #-12]
   12668:	add	r3, r2, r3
   1266c:	mov	r0, r3
   12670:	bl	10f24 <_start@@Base+0x594>
   12674:	mov	r3, r0
   12678:	strh	r3, [fp, #-6]
   1267c:	ldrh	r3, [fp, #-6]
   12680:	cmp	r3, #0
   12684:	beq	126a4 <_start@@Base+0x1d14>
   12688:	ldrh	r3, [fp, #-6]
   1268c:	ldr	r2, [fp, #-16]
   12690:	add	r3, r2, r3
   12694:	mov	r0, r3
   12698:	bl	10cac <_start@@Base+0x31c>
   1269c:	mov	r3, r0
   126a0:	b	126a8 <_start@@Base+0x1d18>
   126a4:	mov	r3, #0
   126a8:	mov	r0, r3
   126ac:	sub	sp, fp, #4
   126b0:	pop	{fp, pc}
   126b4:	andeq	r2, r0, r0, lsl #22
   126b8:	andeq	r2, r0, ip, asr r5
   126bc:	andeq	r2, r0, ip, asr #11
   126c0:	push	{fp, lr}
   126c4:	add	fp, sp, #4
   126c8:	sub	sp, sp, #16
   126cc:	str	r0, [fp, #-16]
   126d0:	mov	r3, #0
   126d4:	strh	r3, [fp, #-6]
   126d8:	ldr	r3, [fp, #-16]
   126dc:	cmp	r3, #0
   126e0:	bne	12704 <_start@@Base+0x1d74>
   126e4:	ldr	r3, [pc, #164]	; 12790 <_start@@Base+0x1e00>
   126e8:	add	r3, pc, r3
   126ec:	mov	r2, #202	; 0xca
   126f0:	ldr	r1, [pc, #156]	; 12794 <_start@@Base+0x1e04>
   126f4:	add	r1, pc, r1
   126f8:	ldr	r0, [pc, #152]	; 12798 <_start@@Base+0x1e08>
   126fc:	add	r0, pc, r0
   12700:	bl	10984 <__assert_fail@plt>
   12704:	mov	r3, #2
   12708:	strh	r3, [fp, #-8]
   1270c:	ldr	r0, [fp, #-16]
   12710:	bl	10ecc <_start@@Base+0x53c>
   12714:	mov	r3, r0
   12718:	rsb	r3, r3, #0
   1271c:	ldr	r2, [fp, #-16]
   12720:	add	r3, r2, r3
   12724:	str	r3, [fp, #-12]
   12728:	ldr	r0, [fp, #-12]
   1272c:	bl	10f24 <_start@@Base+0x594>
   12730:	mov	r3, r0
   12734:	mov	r2, r3
   12738:	ldrh	r3, [fp, #-8]
   1273c:	add	r3, r3, #3
   12740:	lsl	r3, r3, #1
   12744:	cmp	r2, r3
   12748:	bcc	12770 <_start@@Base+0x1de0>
   1274c:	ldrh	r3, [fp, #-8]
   12750:	add	r3, r3, #2
   12754:	lsl	r3, r3, #1
   12758:	ldr	r2, [fp, #-12]
   1275c:	add	r3, r2, r3
   12760:	mov	r0, r3
   12764:	bl	10f24 <_start@@Base+0x594>
   12768:	mov	r3, r0
   1276c:	strh	r3, [fp, #-6]
   12770:	ldrh	r3, [fp, #-6]
   12774:	cmp	r3, #0
   12778:	movne	r3, #1
   1277c:	moveq	r3, #0
   12780:	uxtb	r3, r3
   12784:	mov	r0, r3
   12788:	sub	sp, fp, #4
   1278c:	pop	{fp, pc}
   12790:	andeq	r2, r0, ip, ror #19
   12794:	andeq	r2, r0, r8, ror #8
   12798:	ldrdeq	r2, [r0], -r8
   1279c:	push	{fp, lr}
   127a0:	add	fp, sp, #4
   127a4:	sub	sp, sp, #16
   127a8:	str	r0, [fp, #-16]
   127ac:	mov	r3, #0
   127b0:	strh	r3, [fp, #-6]
   127b4:	ldr	r3, [fp, #-16]
   127b8:	cmp	r3, #0
   127bc:	bne	127e0 <_start@@Base+0x1e50>
   127c0:	ldr	r3, [pc, #200]	; 12890 <_start@@Base+0x1f00>
   127c4:	add	r3, pc, r3
   127c8:	mov	r2, #204	; 0xcc
   127cc:	ldr	r1, [pc, #192]	; 12894 <_start@@Base+0x1f04>
   127d0:	add	r1, pc, r1
   127d4:	ldr	r0, [pc, #188]	; 12898 <_start@@Base+0x1f08>
   127d8:	add	r0, pc, r0
   127dc:	bl	10984 <__assert_fail@plt>
   127e0:	mov	r3, #4
   127e4:	strh	r3, [fp, #-8]
   127e8:	ldr	r0, [fp, #-16]
   127ec:	bl	10ecc <_start@@Base+0x53c>
   127f0:	mov	r3, r0
   127f4:	rsb	r3, r3, #0
   127f8:	ldr	r2, [fp, #-16]
   127fc:	add	r3, r2, r3
   12800:	str	r3, [fp, #-12]
   12804:	ldr	r0, [fp, #-12]
   12808:	bl	10f24 <_start@@Base+0x594>
   1280c:	mov	r3, r0
   12810:	mov	r2, r3
   12814:	ldrh	r3, [fp, #-8]
   12818:	add	r3, r3, #3
   1281c:	lsl	r3, r3, #1
   12820:	cmp	r2, r3
   12824:	bcc	1284c <_start@@Base+0x1ebc>
   12828:	ldrh	r3, [fp, #-8]
   1282c:	add	r3, r3, #2
   12830:	lsl	r3, r3, #1
   12834:	ldr	r2, [fp, #-12]
   12838:	add	r3, r2, r3
   1283c:	mov	r0, r3
   12840:	bl	10f24 <_start@@Base+0x594>
   12844:	mov	r3, r0
   12848:	strh	r3, [fp, #-6]
   1284c:	ldrh	r3, [fp, #-6]
   12850:	cmp	r3, #0
   12854:	beq	12878 <_start@@Base+0x1ee8>
   12858:	ldrh	r3, [fp, #-6]
   1285c:	ldr	r2, [fp, #-16]
   12860:	add	r3, r2, r3
   12864:	mov	r0, r3
   12868:	bl	10d58 <_start@@Base+0x3c8>
   1286c:	mov	r2, r0
   12870:	mov	r3, r1
   12874:	b	12880 <_start@@Base+0x1ef0>
   12878:	mov	r2, #0
   1287c:	mov	r3, #0
   12880:	mov	r0, r2
   12884:	mov	r1, r3
   12888:	sub	sp, fp, #4
   1288c:	pop	{fp, pc}
   12890:	andeq	r2, r0, r0, ror r9
   12894:	andeq	r2, r0, ip, lsl #7
   12898:	strdeq	r2, [r0], -ip
   1289c:	push	{fp, lr}
   128a0:	add	fp, sp, #4
   128a4:	sub	sp, sp, #16
   128a8:	str	r0, [fp, #-16]
   128ac:	mov	r3, #0
   128b0:	strh	r3, [fp, #-6]
   128b4:	ldr	r3, [fp, #-16]
   128b8:	cmp	r3, #0
   128bc:	bne	128e0 <_start@@Base+0x1f50>
   128c0:	ldr	r3, [pc, #164]	; 1296c <_start@@Base+0x1fdc>
   128c4:	add	r3, pc, r3
   128c8:	mov	r2, #204	; 0xcc
   128cc:	ldr	r1, [pc, #156]	; 12970 <_start@@Base+0x1fe0>
   128d0:	add	r1, pc, r1
   128d4:	ldr	r0, [pc, #152]	; 12974 <_start@@Base+0x1fe4>
   128d8:	add	r0, pc, r0
   128dc:	bl	10984 <__assert_fail@plt>
   128e0:	mov	r3, #4
   128e4:	strh	r3, [fp, #-8]
   128e8:	ldr	r0, [fp, #-16]
   128ec:	bl	10ecc <_start@@Base+0x53c>
   128f0:	mov	r3, r0
   128f4:	rsb	r3, r3, #0
   128f8:	ldr	r2, [fp, #-16]
   128fc:	add	r3, r2, r3
   12900:	str	r3, [fp, #-12]
   12904:	ldr	r0, [fp, #-12]
   12908:	bl	10f24 <_start@@Base+0x594>
   1290c:	mov	r3, r0
   12910:	mov	r2, r3
   12914:	ldrh	r3, [fp, #-8]
   12918:	add	r3, r3, #3
   1291c:	lsl	r3, r3, #1
   12920:	cmp	r2, r3
   12924:	bcc	1294c <_start@@Base+0x1fbc>
   12928:	ldrh	r3, [fp, #-8]
   1292c:	add	r3, r3, #2
   12930:	lsl	r3, r3, #1
   12934:	ldr	r2, [fp, #-12]
   12938:	add	r3, r2, r3
   1293c:	mov	r0, r3
   12940:	bl	10f24 <_start@@Base+0x594>
   12944:	mov	r3, r0
   12948:	strh	r3, [fp, #-6]
   1294c:	ldrh	r3, [fp, #-6]
   12950:	cmp	r3, #0
   12954:	movne	r3, #1
   12958:	moveq	r3, #0
   1295c:	uxtb	r3, r3
   12960:	mov	r0, r3
   12964:	sub	sp, fp, #4
   12968:	pop	{fp, pc}
   1296c:	andeq	r2, r0, r4, asr #16
   12970:	andeq	r2, r0, ip, lsl #5
   12974:	strdeq	r2, [r0], -ip
   12978:	push	{fp, lr}
   1297c:	add	fp, sp, #4
   12980:	sub	sp, sp, #16
   12984:	str	r0, [fp, #-16]
   12988:	mov	r3, #0
   1298c:	strh	r3, [fp, #-6]
   12990:	ldr	r3, [fp, #-16]
   12994:	cmp	r3, #0
   12998:	bne	129bc <_start@@Base+0x202c>
   1299c:	ldr	r3, [pc, #196]	; 12a68 <_start@@Base+0x20d8>
   129a0:	add	r3, pc, r3
   129a4:	mov	r2, #205	; 0xcd
   129a8:	ldr	r1, [pc, #188]	; 12a6c <_start@@Base+0x20dc>
   129ac:	add	r1, pc, r1
   129b0:	ldr	r0, [pc, #184]	; 12a70 <_start@@Base+0x20e0>
   129b4:	add	r0, pc, r0
   129b8:	bl	10984 <__assert_fail@plt>
   129bc:	mov	r3, #5
   129c0:	strh	r3, [fp, #-8]
   129c4:	ldr	r0, [fp, #-16]
   129c8:	bl	10ecc <_start@@Base+0x53c>
   129cc:	mov	r3, r0
   129d0:	rsb	r3, r3, #0
   129d4:	ldr	r2, [fp, #-16]
   129d8:	add	r3, r2, r3
   129dc:	str	r3, [fp, #-12]
   129e0:	ldr	r0, [fp, #-12]
   129e4:	bl	10f24 <_start@@Base+0x594>
   129e8:	mov	r3, r0
   129ec:	mov	r2, r3
   129f0:	ldrh	r3, [fp, #-8]
   129f4:	add	r3, r3, #3
   129f8:	lsl	r3, r3, #1
   129fc:	cmp	r2, r3
   12a00:	bcc	12a28 <_start@@Base+0x2098>
   12a04:	ldrh	r3, [fp, #-8]
   12a08:	add	r3, r3, #2
   12a0c:	lsl	r3, r3, #1
   12a10:	ldr	r2, [fp, #-12]
   12a14:	add	r3, r2, r3
   12a18:	mov	r0, r3
   12a1c:	bl	10f24 <_start@@Base+0x594>
   12a20:	mov	r3, r0
   12a24:	strh	r3, [fp, #-6]
   12a28:	ldrh	r3, [fp, #-6]
   12a2c:	cmp	r3, #0
   12a30:	beq	12a50 <_start@@Base+0x20c0>
   12a34:	ldrh	r3, [fp, #-6]
   12a38:	ldr	r2, [fp, #-16]
   12a3c:	add	r3, r2, r3
   12a40:	mov	r0, r3
   12a44:	bl	10dcc <_start@@Base+0x43c>
   12a48:	vmov.f64	d7, d0
   12a4c:	b	12a54 <_start@@Base+0x20c4>
   12a50:	vldr	d7, [pc, #8]	; 12a60 <_start@@Base+0x20d0>
   12a54:	vmov.f64	d0, d7
   12a58:	sub	sp, fp, #4
   12a5c:	pop	{fp, pc}
	...
   12a68:	andeq	r2, r0, r4, ror #15
   12a6c:			; <UNDEFINED> instruction: 0x000021b0
   12a70:	andeq	r2, r0, r0, lsr #4
   12a74:	push	{fp, lr}
   12a78:	add	fp, sp, #4
   12a7c:	sub	sp, sp, #16
   12a80:	str	r0, [fp, #-16]
   12a84:	mov	r3, #0
   12a88:	strh	r3, [fp, #-6]
   12a8c:	ldr	r3, [fp, #-16]
   12a90:	cmp	r3, #0
   12a94:	bne	12ab8 <_start@@Base+0x2128>
   12a98:	ldr	r3, [pc, #164]	; 12b44 <_start@@Base+0x21b4>
   12a9c:	add	r3, pc, r3
   12aa0:	mov	r2, #205	; 0xcd
   12aa4:	ldr	r1, [pc, #156]	; 12b48 <_start@@Base+0x21b8>
   12aa8:	add	r1, pc, r1
   12aac:	ldr	r0, [pc, #152]	; 12b4c <_start@@Base+0x21bc>
   12ab0:	add	r0, pc, r0
   12ab4:	bl	10984 <__assert_fail@plt>
   12ab8:	mov	r3, #5
   12abc:	strh	r3, [fp, #-8]
   12ac0:	ldr	r0, [fp, #-16]
   12ac4:	bl	10ecc <_start@@Base+0x53c>
   12ac8:	mov	r3, r0
   12acc:	rsb	r3, r3, #0
   12ad0:	ldr	r2, [fp, #-16]
   12ad4:	add	r3, r2, r3
   12ad8:	str	r3, [fp, #-12]
   12adc:	ldr	r0, [fp, #-12]
   12ae0:	bl	10f24 <_start@@Base+0x594>
   12ae4:	mov	r3, r0
   12ae8:	mov	r2, r3
   12aec:	ldrh	r3, [fp, #-8]
   12af0:	add	r3, r3, #3
   12af4:	lsl	r3, r3, #1
   12af8:	cmp	r2, r3
   12afc:	bcc	12b24 <_start@@Base+0x2194>
   12b00:	ldrh	r3, [fp, #-8]
   12b04:	add	r3, r3, #2
   12b08:	lsl	r3, r3, #1
   12b0c:	ldr	r2, [fp, #-12]
   12b10:	add	r3, r2, r3
   12b14:	mov	r0, r3
   12b18:	bl	10f24 <_start@@Base+0x594>
   12b1c:	mov	r3, r0
   12b20:	strh	r3, [fp, #-6]
   12b24:	ldrh	r3, [fp, #-6]
   12b28:	cmp	r3, #0
   12b2c:	movne	r3, #1
   12b30:	moveq	r3, #0
   12b34:	uxtb	r3, r3
   12b38:	mov	r0, r3
   12b3c:	sub	sp, fp, #4
   12b40:	pop	{fp, pc}
   12b44:			; <UNDEFINED> instruction: 0x000026bc
   12b48:	strheq	r2, [r0], -r4
   12b4c:	andeq	r2, r0, r4, lsr #2
   12b50:	push	{fp, lr}
   12b54:	add	fp, sp, #4
   12b58:	sub	sp, sp, #16
   12b5c:	str	r0, [fp, #-16]
   12b60:	mov	r3, #0
   12b64:	strh	r3, [fp, #-6]
   12b68:	ldr	r3, [fp, #-16]
   12b6c:	cmp	r3, #0
   12b70:	bne	12b94 <_start@@Base+0x2204>
   12b74:	ldr	r3, [pc, #188]	; 12c38 <_start@@Base+0x22a8>
   12b78:	add	r3, pc, r3
   12b7c:	mov	r2, #207	; 0xcf
   12b80:	ldr	r1, [pc, #180]	; 12c3c <_start@@Base+0x22ac>
   12b84:	add	r1, pc, r1
   12b88:	ldr	r0, [pc, #176]	; 12c40 <_start@@Base+0x22b0>
   12b8c:	add	r0, pc, r0
   12b90:	bl	10984 <__assert_fail@plt>
   12b94:	mov	r3, #7
   12b98:	strh	r3, [fp, #-8]
   12b9c:	ldr	r0, [fp, #-16]
   12ba0:	bl	10ecc <_start@@Base+0x53c>
   12ba4:	mov	r3, r0
   12ba8:	rsb	r3, r3, #0
   12bac:	ldr	r2, [fp, #-16]
   12bb0:	add	r3, r2, r3
   12bb4:	str	r3, [fp, #-12]
   12bb8:	ldr	r0, [fp, #-12]
   12bbc:	bl	10f24 <_start@@Base+0x594>
   12bc0:	mov	r3, r0
   12bc4:	mov	r2, r3
   12bc8:	ldrh	r3, [fp, #-8]
   12bcc:	add	r3, r3, #3
   12bd0:	lsl	r3, r3, #1
   12bd4:	cmp	r2, r3
   12bd8:	bcc	12c00 <_start@@Base+0x2270>
   12bdc:	ldrh	r3, [fp, #-8]
   12be0:	add	r3, r3, #2
   12be4:	lsl	r3, r3, #1
   12be8:	ldr	r2, [fp, #-12]
   12bec:	add	r3, r2, r3
   12bf0:	mov	r0, r3
   12bf4:	bl	10f24 <_start@@Base+0x594>
   12bf8:	mov	r3, r0
   12bfc:	strh	r3, [fp, #-6]
   12c00:	ldrh	r3, [fp, #-6]
   12c04:	cmp	r3, #0
   12c08:	beq	12c28 <_start@@Base+0x2298>
   12c0c:	ldrh	r3, [fp, #-6]
   12c10:	ldr	r2, [fp, #-16]
   12c14:	add	r3, r2, r3
   12c18:	mov	r0, r3
   12c1c:	bl	10e24 <_start@@Base+0x494>
   12c20:	mov	r3, r0
   12c24:	b	12c2c <_start@@Base+0x229c>
   12c28:	mov	r3, #0
   12c2c:	mov	r0, r3
   12c30:	sub	sp, fp, #4
   12c34:	pop	{fp, pc}
   12c38:	andeq	r2, r0, r4, asr r6
   12c3c:	ldrdeq	r1, [r0], -r8
   12c40:	andeq	r2, r0, r8, asr #32
   12c44:	push	{fp, lr}
   12c48:	add	fp, sp, #4
   12c4c:	sub	sp, sp, #16
   12c50:	str	r0, [fp, #-16]
   12c54:	mov	r3, #0
   12c58:	strh	r3, [fp, #-6]
   12c5c:	ldr	r3, [fp, #-16]
   12c60:	cmp	r3, #0
   12c64:	bne	12c88 <_start@@Base+0x22f8>
   12c68:	ldr	r3, [pc, #164]	; 12d14 <_start@@Base+0x2384>
   12c6c:	add	r3, pc, r3
   12c70:	mov	r2, #207	; 0xcf
   12c74:	ldr	r1, [pc, #156]	; 12d18 <_start@@Base+0x2388>
   12c78:	add	r1, pc, r1
   12c7c:	ldr	r0, [pc, #152]	; 12d1c <_start@@Base+0x238c>
   12c80:	add	r0, pc, r0
   12c84:	bl	10984 <__assert_fail@plt>
   12c88:	mov	r3, #7
   12c8c:	strh	r3, [fp, #-8]
   12c90:	ldr	r0, [fp, #-16]
   12c94:	bl	10ecc <_start@@Base+0x53c>
   12c98:	mov	r3, r0
   12c9c:	rsb	r3, r3, #0
   12ca0:	ldr	r2, [fp, #-16]
   12ca4:	add	r3, r2, r3
   12ca8:	str	r3, [fp, #-12]
   12cac:	ldr	r0, [fp, #-12]
   12cb0:	bl	10f24 <_start@@Base+0x594>
   12cb4:	mov	r3, r0
   12cb8:	mov	r2, r3
   12cbc:	ldrh	r3, [fp, #-8]
   12cc0:	add	r3, r3, #3
   12cc4:	lsl	r3, r3, #1
   12cc8:	cmp	r2, r3
   12ccc:	bcc	12cf4 <_start@@Base+0x2364>
   12cd0:	ldrh	r3, [fp, #-8]
   12cd4:	add	r3, r3, #2
   12cd8:	lsl	r3, r3, #1
   12cdc:	ldr	r2, [fp, #-12]
   12ce0:	add	r3, r2, r3
   12ce4:	mov	r0, r3
   12ce8:	bl	10f24 <_start@@Base+0x594>
   12cec:	mov	r3, r0
   12cf0:	strh	r3, [fp, #-6]
   12cf4:	ldrh	r3, [fp, #-6]
   12cf8:	cmp	r3, #0
   12cfc:	movne	r3, #1
   12d00:	moveq	r3, #0
   12d04:	uxtb	r3, r3
   12d08:	mov	r0, r3
   12d0c:	sub	sp, fp, #4
   12d10:	pop	{fp, pc}
   12d14:	andeq	r2, r0, r8, lsr r5
   12d18:	andeq	r1, r0, r4, ror #29
   12d1c:	andeq	r1, r0, r4, asr pc
   12d20:	push	{fp, lr}
   12d24:	add	fp, sp, #4
   12d28:	sub	sp, sp, #16
   12d2c:	str	r0, [fp, #-16]
   12d30:	mov	r3, #0
   12d34:	strh	r3, [fp, #-6]
   12d38:	ldr	r3, [fp, #-16]
   12d3c:	cmp	r3, #0
   12d40:	bne	12d64 <_start@@Base+0x23d4>
   12d44:	ldr	r3, [pc, #188]	; 12e08 <_start@@Base+0x2478>
   12d48:	add	r3, pc, r3
   12d4c:	mov	r2, #208	; 0xd0
   12d50:	ldr	r1, [pc, #180]	; 12e0c <_start@@Base+0x247c>
   12d54:	add	r1, pc, r1
   12d58:	ldr	r0, [pc, #176]	; 12e10 <_start@@Base+0x2480>
   12d5c:	add	r0, pc, r0
   12d60:	bl	10984 <__assert_fail@plt>
   12d64:	mov	r3, #8
   12d68:	strh	r3, [fp, #-8]
   12d6c:	ldr	r0, [fp, #-16]
   12d70:	bl	10ecc <_start@@Base+0x53c>
   12d74:	mov	r3, r0
   12d78:	rsb	r3, r3, #0
   12d7c:	ldr	r2, [fp, #-16]
   12d80:	add	r3, r2, r3
   12d84:	str	r3, [fp, #-12]
   12d88:	ldr	r0, [fp, #-12]
   12d8c:	bl	10f24 <_start@@Base+0x594>
   12d90:	mov	r3, r0
   12d94:	mov	r2, r3
   12d98:	ldrh	r3, [fp, #-8]
   12d9c:	add	r3, r3, #3
   12da0:	lsl	r3, r3, #1
   12da4:	cmp	r2, r3
   12da8:	bcc	12dd0 <_start@@Base+0x2440>
   12dac:	ldrh	r3, [fp, #-8]
   12db0:	add	r3, r3, #2
   12db4:	lsl	r3, r3, #1
   12db8:	ldr	r2, [fp, #-12]
   12dbc:	add	r3, r2, r3
   12dc0:	mov	r0, r3
   12dc4:	bl	10f24 <_start@@Base+0x594>
   12dc8:	mov	r3, r0
   12dcc:	strh	r3, [fp, #-6]
   12dd0:	ldrh	r3, [fp, #-6]
   12dd4:	cmp	r3, #0
   12dd8:	beq	12df8 <_start@@Base+0x2468>
   12ddc:	ldrh	r3, [fp, #-6]
   12de0:	ldr	r2, [fp, #-16]
   12de4:	add	r3, r2, r3
   12de8:	mov	r0, r3
   12dec:	bl	10e24 <_start@@Base+0x494>
   12df0:	mov	r3, r0
   12df4:	b	12dfc <_start@@Base+0x246c>
   12df8:	mov	r3, #0
   12dfc:	mov	r0, r3
   12e00:	sub	sp, fp, #4
   12e04:	pop	{fp, pc}
   12e08:	andeq	r2, r0, r0, asr #9
   12e0c:	andeq	r1, r0, r8, lsl #28
   12e10:	andeq	r1, r0, r8, ror lr
   12e14:	push	{fp, lr}
   12e18:	add	fp, sp, #4
   12e1c:	sub	sp, sp, #16
   12e20:	str	r0, [fp, #-16]
   12e24:	mov	r3, #0
   12e28:	strh	r3, [fp, #-6]
   12e2c:	ldr	r3, [fp, #-16]
   12e30:	cmp	r3, #0
   12e34:	bne	12e58 <_start@@Base+0x24c8>
   12e38:	ldr	r3, [pc, #164]	; 12ee4 <_start@@Base+0x2554>
   12e3c:	add	r3, pc, r3
   12e40:	mov	r2, #208	; 0xd0
   12e44:	ldr	r1, [pc, #156]	; 12ee8 <_start@@Base+0x2558>
   12e48:	add	r1, pc, r1
   12e4c:	ldr	r0, [pc, #152]	; 12eec <_start@@Base+0x255c>
   12e50:	add	r0, pc, r0
   12e54:	bl	10984 <__assert_fail@plt>
   12e58:	mov	r3, #8
   12e5c:	strh	r3, [fp, #-8]
   12e60:	ldr	r0, [fp, #-16]
   12e64:	bl	10ecc <_start@@Base+0x53c>
   12e68:	mov	r3, r0
   12e6c:	rsb	r3, r3, #0
   12e70:	ldr	r2, [fp, #-16]
   12e74:	add	r3, r2, r3
   12e78:	str	r3, [fp, #-12]
   12e7c:	ldr	r0, [fp, #-12]
   12e80:	bl	10f24 <_start@@Base+0x594>
   12e84:	mov	r3, r0
   12e88:	mov	r2, r3
   12e8c:	ldrh	r3, [fp, #-8]
   12e90:	add	r3, r3, #3
   12e94:	lsl	r3, r3, #1
   12e98:	cmp	r2, r3
   12e9c:	bcc	12ec4 <_start@@Base+0x2534>
   12ea0:	ldrh	r3, [fp, #-8]
   12ea4:	add	r3, r3, #2
   12ea8:	lsl	r3, r3, #1
   12eac:	ldr	r2, [fp, #-12]
   12eb0:	add	r3, r2, r3
   12eb4:	mov	r0, r3
   12eb8:	bl	10f24 <_start@@Base+0x594>
   12ebc:	mov	r3, r0
   12ec0:	strh	r3, [fp, #-6]
   12ec4:	ldrh	r3, [fp, #-6]
   12ec8:	cmp	r3, #0
   12ecc:	movne	r3, #1
   12ed0:	moveq	r3, #0
   12ed4:	uxtb	r3, r3
   12ed8:	mov	r0, r3
   12edc:	sub	sp, fp, #4
   12ee0:	pop	{fp, pc}
   12ee4:	andeq	r2, r0, ip, lsr #7
   12ee8:	andeq	r1, r0, r4, lsl sp
   12eec:	andeq	r1, r0, r4, lsl #27
   12ef0:	push	{fp, lr}
   12ef4:	add	fp, sp, #4
   12ef8:	sub	sp, sp, #8
   12efc:	str	r0, [fp, #-8]
   12f00:	ldr	r3, [fp, #-8]
   12f04:	cmp	r3, #0
   12f08:	beq	12f24 <_start@@Base+0x2594>
   12f0c:	ldr	r3, [fp, #-8]
   12f10:	sub	r3, r3, #4
   12f14:	mov	r0, r3
   12f18:	bl	10e78 <_start@@Base+0x4e8>
   12f1c:	mov	r3, r0
   12f20:	b	12f28 <_start@@Base+0x2598>
   12f24:	mov	r3, #0
   12f28:	mov	r0, r3
   12f2c:	sub	sp, fp, #4
   12f30:	pop	{fp, pc}
   12f34:	push	{fp, lr}
   12f38:	add	fp, sp, #4
   12f3c:	sub	sp, sp, #16
   12f40:	str	r0, [fp, #-16]
   12f44:	str	r1, [fp, #-20]	; 0xffffffec
   12f48:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f4c:	lsl	r3, r3, #2
   12f50:	ldr	r2, [fp, #-16]
   12f54:	add	r3, r2, r3
   12f58:	str	r3, [fp, #-8]
   12f5c:	ldr	r0, [fp, #-16]
   12f60:	bl	10fcc <_start@@Base+0x63c>
   12f64:	mov	r2, r0
   12f68:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f6c:	cmp	r2, r3
   12f70:	bhi	12f94 <_start@@Base+0x2604>
   12f74:	ldr	r3, [pc, #56]	; 12fb4 <_start@@Base+0x2624>
   12f78:	add	r3, pc, r3
   12f7c:	mov	r2, #215	; 0xd7
   12f80:	ldr	r1, [pc, #48]	; 12fb8 <_start@@Base+0x2628>
   12f84:	add	r1, pc, r1
   12f88:	ldr	r0, [pc, #44]	; 12fbc <_start@@Base+0x262c>
   12f8c:	add	r0, pc, r0
   12f90:	bl	10984 <__assert_fail@plt>
   12f94:	ldr	r0, [fp, #-8]
   12f98:	bl	10e78 <_start@@Base+0x4e8>
   12f9c:	mov	r2, r0
   12fa0:	ldr	r3, [fp, #-8]
   12fa4:	add	r3, r3, r2
   12fa8:	mov	r0, r3
   12fac:	sub	sp, fp, #4
   12fb0:	pop	{fp, pc}
   12fb4:	ldrdeq	r2, [r0], -r8
   12fb8:	ldrdeq	r1, [r0], -r8
   12fbc:	andeq	r1, r0, r0, ror ip
   12fc0:	push	{fp, lr}
   12fc4:	add	fp, sp, #4
   12fc8:	sub	sp, sp, #24
   12fcc:	str	r0, [fp, #-24]	; 0xffffffe8
   12fd0:	mov	r3, #0
   12fd4:	strh	r3, [fp, #-6]
   12fd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12fdc:	cmp	r3, #0
   12fe0:	bne	13004 <_start@@Base+0x2674>
   12fe4:	ldr	r3, [pc, #232]	; 130d4 <_start@@Base+0x2744>
   12fe8:	add	r3, pc, r3
   12fec:	mov	r2, #218	; 0xda
   12ff0:	ldr	r1, [pc, #224]	; 130d8 <_start@@Base+0x2748>
   12ff4:	add	r1, pc, r1
   12ff8:	ldr	r0, [pc, #220]	; 130dc <_start@@Base+0x274c>
   12ffc:	add	r0, pc, r0
   13000:	bl	10984 <__assert_fail@plt>
   13004:	mov	r3, #0
   13008:	strh	r3, [fp, #-8]
   1300c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13010:	bl	10ecc <_start@@Base+0x53c>
   13014:	mov	r3, r0
   13018:	rsb	r3, r3, #0
   1301c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13020:	add	r3, r2, r3
   13024:	str	r3, [fp, #-12]
   13028:	ldr	r0, [fp, #-12]
   1302c:	bl	10f24 <_start@@Base+0x594>
   13030:	mov	r3, r0
   13034:	mov	r2, r3
   13038:	ldrh	r3, [fp, #-8]
   1303c:	add	r3, r3, #3
   13040:	lsl	r3, r3, #1
   13044:	cmp	r2, r3
   13048:	bcc	13070 <_start@@Base+0x26e0>
   1304c:	ldrh	r3, [fp, #-8]
   13050:	add	r3, r3, #2
   13054:	lsl	r3, r3, #1
   13058:	ldr	r2, [fp, #-12]
   1305c:	add	r3, r2, r3
   13060:	mov	r0, r3
   13064:	bl	10f24 <_start@@Base+0x594>
   13068:	mov	r3, r0
   1306c:	strh	r3, [fp, #-6]
   13070:	ldrh	r3, [fp, #-6]
   13074:	cmp	r3, #0
   13078:	beq	130a8 <_start@@Base+0x2718>
   1307c:	ldrh	r3, [fp, #-6]
   13080:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13084:	add	r3, r2, r3
   13088:	str	r3, [fp, #-16]
   1308c:	ldr	r0, [fp, #-16]
   13090:	bl	10e78 <_start@@Base+0x4e8>
   13094:	mov	r3, r0
   13098:	add	r3, r3, #4
   1309c:	ldr	r2, [fp, #-16]
   130a0:	add	r3, r2, r3
   130a4:	b	130c8 <_start@@Base+0x2738>
   130a8:	ldr	r3, [pc, #48]	; 130e0 <_start@@Base+0x2750>
   130ac:	add	r3, pc, r3
   130b0:	mov	r2, #218	; 0xda
   130b4:	ldr	r1, [pc, #40]	; 130e4 <_start@@Base+0x2754>
   130b8:	add	r1, pc, r1
   130bc:	ldr	r0, [pc, #36]	; 130e8 <_start@@Base+0x2758>
   130c0:	add	r0, pc, r0
   130c4:	bl	10984 <__assert_fail@plt>
   130c8:	mov	r0, r3
   130cc:	sub	sp, fp, #4
   130d0:	pop	{fp, pc}
   130d4:	andeq	r2, r0, ip, lsl #1
   130d8:	andeq	r1, r0, r8, ror #22
   130dc:	ldrdeq	r1, [r0], -r8
   130e0:	andeq	r1, r0, r8, asr #31
   130e4:	andeq	r1, r0, r4, lsr #21
   130e8:	andeq	r1, r0, r4, ror fp
   130ec:	push	{fp, lr}
   130f0:	add	fp, sp, #4
   130f4:	sub	sp, sp, #24
   130f8:	str	r0, [fp, #-24]	; 0xffffffe8
   130fc:	mov	r3, #0
   13100:	strh	r3, [fp, #-6]
   13104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13108:	cmp	r3, #0
   1310c:	bne	13130 <_start@@Base+0x27a0>
   13110:	ldr	r3, [pc, #232]	; 13200 <_start@@Base+0x2870>
   13114:	add	r3, pc, r3
   13118:	mov	r2, #224	; 0xe0
   1311c:	ldr	r1, [pc, #224]	; 13204 <_start@@Base+0x2874>
   13120:	add	r1, pc, r1
   13124:	ldr	r0, [pc, #220]	; 13208 <_start@@Base+0x2878>
   13128:	add	r0, pc, r0
   1312c:	bl	10984 <__assert_fail@plt>
   13130:	mov	r3, #1
   13134:	strh	r3, [fp, #-8]
   13138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1313c:	bl	10ecc <_start@@Base+0x53c>
   13140:	mov	r3, r0
   13144:	rsb	r3, r3, #0
   13148:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1314c:	add	r3, r2, r3
   13150:	str	r3, [fp, #-12]
   13154:	ldr	r0, [fp, #-12]
   13158:	bl	10f24 <_start@@Base+0x594>
   1315c:	mov	r3, r0
   13160:	mov	r2, r3
   13164:	ldrh	r3, [fp, #-8]
   13168:	add	r3, r3, #3
   1316c:	lsl	r3, r3, #1
   13170:	cmp	r2, r3
   13174:	bcc	1319c <_start@@Base+0x280c>
   13178:	ldrh	r3, [fp, #-8]
   1317c:	add	r3, r3, #2
   13180:	lsl	r3, r3, #1
   13184:	ldr	r2, [fp, #-12]
   13188:	add	r3, r2, r3
   1318c:	mov	r0, r3
   13190:	bl	10f24 <_start@@Base+0x594>
   13194:	mov	r3, r0
   13198:	strh	r3, [fp, #-6]
   1319c:	ldrh	r3, [fp, #-6]
   131a0:	cmp	r3, #0
   131a4:	beq	131d4 <_start@@Base+0x2844>
   131a8:	ldrh	r3, [fp, #-6]
   131ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   131b0:	add	r3, r2, r3
   131b4:	str	r3, [fp, #-16]
   131b8:	ldr	r0, [fp, #-16]
   131bc:	bl	10e78 <_start@@Base+0x4e8>
   131c0:	mov	r3, r0
   131c4:	add	r3, r3, #4
   131c8:	ldr	r2, [fp, #-16]
   131cc:	add	r3, r2, r3
   131d0:	b	131f4 <_start@@Base+0x2864>
   131d4:	ldr	r3, [pc, #48]	; 1320c <_start@@Base+0x287c>
   131d8:	add	r3, pc, r3
   131dc:	mov	r2, #224	; 0xe0
   131e0:	ldr	r1, [pc, #40]	; 13210 <_start@@Base+0x2880>
   131e4:	add	r1, pc, r1
   131e8:	ldr	r0, [pc, #36]	; 13214 <_start@@Base+0x2884>
   131ec:	add	r0, pc, r0
   131f0:	bl	10984 <__assert_fail@plt>
   131f4:	mov	r0, r3
   131f8:	sub	sp, fp, #4
   131fc:	pop	{fp, pc}
   13200:	andeq	r1, r0, r4, asr #30
   13204:	andeq	r1, r0, ip, lsr sl
   13208:	andeq	r1, r0, ip, lsr #21
   1320c:	andeq	r1, r0, r0, lsl #29
   13210:	andeq	r1, r0, r8, ror r9
   13214:	andeq	r1, r0, r8, asr #20
   13218:	push	{fp, lr}
   1321c:	add	fp, sp, #4
   13220:	sub	sp, sp, #16
   13224:	str	r0, [fp, #-16]
   13228:	mov	r3, #0
   1322c:	strh	r3, [fp, #-6]
   13230:	ldr	r3, [fp, #-16]
   13234:	cmp	r3, #0
   13238:	bne	1325c <_start@@Base+0x28cc>
   1323c:	ldr	r3, [pc, #188]	; 13300 <_start@@Base+0x2970>
   13240:	add	r3, pc, r3
   13244:	mov	r2, #225	; 0xe1
   13248:	ldr	r1, [pc, #180]	; 13304 <_start@@Base+0x2974>
   1324c:	add	r1, pc, r1
   13250:	ldr	r0, [pc, #176]	; 13308 <_start@@Base+0x2978>
   13254:	add	r0, pc, r0
   13258:	bl	10984 <__assert_fail@plt>
   1325c:	mov	r3, #2
   13260:	strh	r3, [fp, #-8]
   13264:	ldr	r0, [fp, #-16]
   13268:	bl	10ecc <_start@@Base+0x53c>
   1326c:	mov	r3, r0
   13270:	rsb	r3, r3, #0
   13274:	ldr	r2, [fp, #-16]
   13278:	add	r3, r2, r3
   1327c:	str	r3, [fp, #-12]
   13280:	ldr	r0, [fp, #-12]
   13284:	bl	10f24 <_start@@Base+0x594>
   13288:	mov	r3, r0
   1328c:	mov	r2, r3
   13290:	ldrh	r3, [fp, #-8]
   13294:	add	r3, r3, #3
   13298:	lsl	r3, r3, #1
   1329c:	cmp	r2, r3
   132a0:	bcc	132c8 <_start@@Base+0x2938>
   132a4:	ldrh	r3, [fp, #-8]
   132a8:	add	r3, r3, #2
   132ac:	lsl	r3, r3, #1
   132b0:	ldr	r2, [fp, #-12]
   132b4:	add	r3, r2, r3
   132b8:	mov	r0, r3
   132bc:	bl	10f24 <_start@@Base+0x594>
   132c0:	mov	r3, r0
   132c4:	strh	r3, [fp, #-6]
   132c8:	ldrh	r3, [fp, #-6]
   132cc:	cmp	r3, #0
   132d0:	beq	132f0 <_start@@Base+0x2960>
   132d4:	ldrh	r3, [fp, #-6]
   132d8:	ldr	r2, [fp, #-16]
   132dc:	add	r3, r2, r3
   132e0:	mov	r0, r3
   132e4:	bl	10e24 <_start@@Base+0x494>
   132e8:	mov	r3, r0
   132ec:	b	132f4 <_start@@Base+0x2964>
   132f0:	mov	r3, #0
   132f4:	mov	r0, r3
   132f8:	sub	sp, fp, #4
   132fc:	pop	{fp, pc}
   13300:	andeq	r2, r0, r8
   13304:	andeq	r1, r0, r0, lsl r9
   13308:	andeq	r1, r0, r0, lsl #19
   1330c:	push	{fp, lr}
   13310:	add	fp, sp, #4
   13314:	sub	sp, sp, #16
   13318:	str	r0, [fp, #-16]
   1331c:	mov	r3, #0
   13320:	strh	r3, [fp, #-6]
   13324:	ldr	r3, [fp, #-16]
   13328:	cmp	r3, #0
   1332c:	bne	13350 <_start@@Base+0x29c0>
   13330:	ldr	r3, [pc, #164]	; 133dc <_start@@Base+0x2a4c>
   13334:	add	r3, pc, r3
   13338:	mov	r2, #225	; 0xe1
   1333c:	ldr	r1, [pc, #156]	; 133e0 <_start@@Base+0x2a50>
   13340:	add	r1, pc, r1
   13344:	ldr	r0, [pc, #152]	; 133e4 <_start@@Base+0x2a54>
   13348:	add	r0, pc, r0
   1334c:	bl	10984 <__assert_fail@plt>
   13350:	mov	r3, #2
   13354:	strh	r3, [fp, #-8]
   13358:	ldr	r0, [fp, #-16]
   1335c:	bl	10ecc <_start@@Base+0x53c>
   13360:	mov	r3, r0
   13364:	rsb	r3, r3, #0
   13368:	ldr	r2, [fp, #-16]
   1336c:	add	r3, r2, r3
   13370:	str	r3, [fp, #-12]
   13374:	ldr	r0, [fp, #-12]
   13378:	bl	10f24 <_start@@Base+0x594>
   1337c:	mov	r3, r0
   13380:	mov	r2, r3
   13384:	ldrh	r3, [fp, #-8]
   13388:	add	r3, r3, #3
   1338c:	lsl	r3, r3, #1
   13390:	cmp	r2, r3
   13394:	bcc	133bc <_start@@Base+0x2a2c>
   13398:	ldrh	r3, [fp, #-8]
   1339c:	add	r3, r3, #2
   133a0:	lsl	r3, r3, #1
   133a4:	ldr	r2, [fp, #-12]
   133a8:	add	r3, r2, r3
   133ac:	mov	r0, r3
   133b0:	bl	10f24 <_start@@Base+0x594>
   133b4:	mov	r3, r0
   133b8:	strh	r3, [fp, #-6]
   133bc:	ldrh	r3, [fp, #-6]
   133c0:	cmp	r3, #0
   133c4:	movne	r3, #1
   133c8:	moveq	r3, #0
   133cc:	uxtb	r3, r3
   133d0:	mov	r0, r3
   133d4:	sub	sp, fp, #4
   133d8:	pop	{fp, pc}
   133dc:	andeq	r1, r0, ip, ror #29
   133e0:	andeq	r1, r0, ip, lsl r8
   133e4:	andeq	r1, r0, ip, lsl #17
   133e8:	push	{fp, lr}
   133ec:	add	fp, sp, #4
   133f0:	sub	sp, sp, #16
   133f4:	str	r0, [fp, #-16]
   133f8:	mov	r3, #0
   133fc:	strh	r3, [fp, #-6]
   13400:	ldr	r3, [fp, #-16]
   13404:	cmp	r3, #0
   13408:	bne	1342c <_start@@Base+0x2a9c>
   1340c:	ldr	r3, [pc, #188]	; 134d0 <_start@@Base+0x2b40>
   13410:	add	r3, pc, r3
   13414:	mov	r2, #226	; 0xe2
   13418:	ldr	r1, [pc, #180]	; 134d4 <_start@@Base+0x2b44>
   1341c:	add	r1, pc, r1
   13420:	ldr	r0, [pc, #176]	; 134d8 <_start@@Base+0x2b48>
   13424:	add	r0, pc, r0
   13428:	bl	10984 <__assert_fail@plt>
   1342c:	mov	r3, #3
   13430:	strh	r3, [fp, #-8]
   13434:	ldr	r0, [fp, #-16]
   13438:	bl	10ecc <_start@@Base+0x53c>
   1343c:	mov	r3, r0
   13440:	rsb	r3, r3, #0
   13444:	ldr	r2, [fp, #-16]
   13448:	add	r3, r2, r3
   1344c:	str	r3, [fp, #-12]
   13450:	ldr	r0, [fp, #-12]
   13454:	bl	10f24 <_start@@Base+0x594>
   13458:	mov	r3, r0
   1345c:	mov	r2, r3
   13460:	ldrh	r3, [fp, #-8]
   13464:	add	r3, r3, #3
   13468:	lsl	r3, r3, #1
   1346c:	cmp	r2, r3
   13470:	bcc	13498 <_start@@Base+0x2b08>
   13474:	ldrh	r3, [fp, #-8]
   13478:	add	r3, r3, #2
   1347c:	lsl	r3, r3, #1
   13480:	ldr	r2, [fp, #-12]
   13484:	add	r3, r2, r3
   13488:	mov	r0, r3
   1348c:	bl	10f24 <_start@@Base+0x594>
   13490:	mov	r3, r0
   13494:	strh	r3, [fp, #-6]
   13498:	ldrh	r3, [fp, #-6]
   1349c:	cmp	r3, #0
   134a0:	beq	134c0 <_start@@Base+0x2b30>
   134a4:	ldrh	r3, [fp, #-6]
   134a8:	ldr	r2, [fp, #-16]
   134ac:	add	r3, r2, r3
   134b0:	mov	r0, r3
   134b4:	bl	10d00 <_start@@Base+0x370>
   134b8:	mov	r3, r0
   134bc:	b	134c4 <_start@@Base+0x2b34>
   134c0:	mov	r3, #0
   134c4:	mov	r0, r3
   134c8:	sub	sp, fp, #4
   134cc:	pop	{fp, pc}
   134d0:	andeq	r1, r0, ip, ror lr
   134d4:	andeq	r1, r0, r0, asr #14
   134d8:			; <UNDEFINED> instruction: 0x000017b0
   134dc:	push	{fp, lr}
   134e0:	add	fp, sp, #4
   134e4:	sub	sp, sp, #16
   134e8:	str	r0, [fp, #-16]
   134ec:	mov	r3, #0
   134f0:	strh	r3, [fp, #-6]
   134f4:	ldr	r3, [fp, #-16]
   134f8:	cmp	r3, #0
   134fc:	bne	13520 <_start@@Base+0x2b90>
   13500:	ldr	r3, [pc, #164]	; 135ac <_start@@Base+0x2c1c>
   13504:	add	r3, pc, r3
   13508:	mov	r2, #226	; 0xe2
   1350c:	ldr	r1, [pc, #156]	; 135b0 <_start@@Base+0x2c20>
   13510:	add	r1, pc, r1
   13514:	ldr	r0, [pc, #152]	; 135b4 <_start@@Base+0x2c24>
   13518:	add	r0, pc, r0
   1351c:	bl	10984 <__assert_fail@plt>
   13520:	mov	r3, #3
   13524:	strh	r3, [fp, #-8]
   13528:	ldr	r0, [fp, #-16]
   1352c:	bl	10ecc <_start@@Base+0x53c>
   13530:	mov	r3, r0
   13534:	rsb	r3, r3, #0
   13538:	ldr	r2, [fp, #-16]
   1353c:	add	r3, r2, r3
   13540:	str	r3, [fp, #-12]
   13544:	ldr	r0, [fp, #-12]
   13548:	bl	10f24 <_start@@Base+0x594>
   1354c:	mov	r3, r0
   13550:	mov	r2, r3
   13554:	ldrh	r3, [fp, #-8]
   13558:	add	r3, r3, #3
   1355c:	lsl	r3, r3, #1
   13560:	cmp	r2, r3
   13564:	bcc	1358c <_start@@Base+0x2bfc>
   13568:	ldrh	r3, [fp, #-8]
   1356c:	add	r3, r3, #2
   13570:	lsl	r3, r3, #1
   13574:	ldr	r2, [fp, #-12]
   13578:	add	r3, r2, r3
   1357c:	mov	r0, r3
   13580:	bl	10f24 <_start@@Base+0x594>
   13584:	mov	r3, r0
   13588:	strh	r3, [fp, #-6]
   1358c:	ldrh	r3, [fp, #-6]
   13590:	cmp	r3, #0
   13594:	movne	r3, #1
   13598:	moveq	r3, #0
   1359c:	uxtb	r3, r3
   135a0:	mov	r0, r3
   135a4:	sub	sp, fp, #4
   135a8:	pop	{fp, pc}
   135ac:	andeq	r1, r0, r0, ror #26
   135b0:	andeq	r1, r0, ip, asr #12
   135b4:			; <UNDEFINED> instruction: 0x000016bc
   135b8:	push	{fp, lr}
   135bc:	add	fp, sp, #4
   135c0:	sub	sp, sp, #16
   135c4:	str	r0, [fp, #-16]
   135c8:	mov	r3, #0
   135cc:	strh	r3, [fp, #-6]
   135d0:	ldr	r3, [fp, #-16]
   135d4:	cmp	r3, #0
   135d8:	bne	135fc <_start@@Base+0x2c6c>
   135dc:	ldr	r3, [pc, #188]	; 136a0 <_start@@Base+0x2d10>
   135e0:	add	r3, pc, r3
   135e4:	mov	r2, #227	; 0xe3
   135e8:	ldr	r1, [pc, #180]	; 136a4 <_start@@Base+0x2d14>
   135ec:	add	r1, pc, r1
   135f0:	ldr	r0, [pc, #176]	; 136a8 <_start@@Base+0x2d18>
   135f4:	add	r0, pc, r0
   135f8:	bl	10984 <__assert_fail@plt>
   135fc:	mov	r3, #4
   13600:	strh	r3, [fp, #-8]
   13604:	ldr	r0, [fp, #-16]
   13608:	bl	10ecc <_start@@Base+0x53c>
   1360c:	mov	r3, r0
   13610:	rsb	r3, r3, #0
   13614:	ldr	r2, [fp, #-16]
   13618:	add	r3, r2, r3
   1361c:	str	r3, [fp, #-12]
   13620:	ldr	r0, [fp, #-12]
   13624:	bl	10f24 <_start@@Base+0x594>
   13628:	mov	r3, r0
   1362c:	mov	r2, r3
   13630:	ldrh	r3, [fp, #-8]
   13634:	add	r3, r3, #3
   13638:	lsl	r3, r3, #1
   1363c:	cmp	r2, r3
   13640:	bcc	13668 <_start@@Base+0x2cd8>
   13644:	ldrh	r3, [fp, #-8]
   13648:	add	r3, r3, #2
   1364c:	lsl	r3, r3, #1
   13650:	ldr	r2, [fp, #-12]
   13654:	add	r3, r2, r3
   13658:	mov	r0, r3
   1365c:	bl	10f24 <_start@@Base+0x594>
   13660:	mov	r3, r0
   13664:	strh	r3, [fp, #-6]
   13668:	ldrh	r3, [fp, #-6]
   1366c:	cmp	r3, #0
   13670:	beq	13690 <_start@@Base+0x2d00>
   13674:	ldrh	r3, [fp, #-6]
   13678:	ldr	r2, [fp, #-16]
   1367c:	add	r3, r2, r3
   13680:	mov	r0, r3
   13684:	bl	10d00 <_start@@Base+0x370>
   13688:	mov	r3, r0
   1368c:	b	13694 <_start@@Base+0x2d04>
   13690:	mov	r3, #0
   13694:	mov	r0, r3
   13698:	sub	sp, fp, #4
   1369c:	pop	{fp, pc}
   136a0:	strdeq	r1, [r0], -r0
   136a4:	andeq	r1, r0, r0, ror r5
   136a8:	andeq	r1, r0, r0, ror #11
   136ac:	push	{fp, lr}
   136b0:	add	fp, sp, #4
   136b4:	sub	sp, sp, #16
   136b8:	str	r0, [fp, #-16]
   136bc:	mov	r3, #0
   136c0:	strh	r3, [fp, #-6]
   136c4:	ldr	r3, [fp, #-16]
   136c8:	cmp	r3, #0
   136cc:	bne	136f0 <_start@@Base+0x2d60>
   136d0:	ldr	r3, [pc, #164]	; 1377c <_start@@Base+0x2dec>
   136d4:	add	r3, pc, r3
   136d8:	mov	r2, #227	; 0xe3
   136dc:	ldr	r1, [pc, #156]	; 13780 <_start@@Base+0x2df0>
   136e0:	add	r1, pc, r1
   136e4:	ldr	r0, [pc, #152]	; 13784 <_start@@Base+0x2df4>
   136e8:	add	r0, pc, r0
   136ec:	bl	10984 <__assert_fail@plt>
   136f0:	mov	r3, #4
   136f4:	strh	r3, [fp, #-8]
   136f8:	ldr	r0, [fp, #-16]
   136fc:	bl	10ecc <_start@@Base+0x53c>
   13700:	mov	r3, r0
   13704:	rsb	r3, r3, #0
   13708:	ldr	r2, [fp, #-16]
   1370c:	add	r3, r2, r3
   13710:	str	r3, [fp, #-12]
   13714:	ldr	r0, [fp, #-12]
   13718:	bl	10f24 <_start@@Base+0x594>
   1371c:	mov	r3, r0
   13720:	mov	r2, r3
   13724:	ldrh	r3, [fp, #-8]
   13728:	add	r3, r3, #3
   1372c:	lsl	r3, r3, #1
   13730:	cmp	r2, r3
   13734:	bcc	1375c <_start@@Base+0x2dcc>
   13738:	ldrh	r3, [fp, #-8]
   1373c:	add	r3, r3, #2
   13740:	lsl	r3, r3, #1
   13744:	ldr	r2, [fp, #-12]
   13748:	add	r3, r2, r3
   1374c:	mov	r0, r3
   13750:	bl	10f24 <_start@@Base+0x594>
   13754:	mov	r3, r0
   13758:	strh	r3, [fp, #-6]
   1375c:	ldrh	r3, [fp, #-6]
   13760:	cmp	r3, #0
   13764:	movne	r3, #1
   13768:	moveq	r3, #0
   1376c:	uxtb	r3, r3
   13770:	mov	r0, r3
   13774:	sub	sp, fp, #4
   13778:	pop	{fp, pc}
   1377c:	ldrdeq	r1, [r0], -r4
   13780:	andeq	r1, r0, ip, ror r4
   13784:	andeq	r1, r0, ip, ror #9
   13788:	push	{fp, lr}
   1378c:	add	fp, sp, #4
   13790:	sub	sp, sp, #16
   13794:	str	r0, [fp, #-16]
   13798:	ldr	r3, [pc, #80]	; 137f0 <_start@@Base+0x2e60>
   1379c:	add	r3, pc, r3
   137a0:	str	r3, [fp, #-8]
   137a4:	ldr	r3, [fp, #-16]
   137a8:	cmp	r3, #0
   137ac:	beq	137e0 <_start@@Base+0x2e50>
   137b0:	ldr	r1, [fp, #-8]
   137b4:	ldr	r0, [fp, #-16]
   137b8:	bl	11010 <_start@@Base+0x680>
   137bc:	mov	r3, r0
   137c0:	cmp	r3, #0
   137c4:	beq	137e0 <_start@@Base+0x2e50>
   137c8:	ldr	r0, [fp, #-16]
   137cc:	bl	10e78 <_start@@Base+0x4e8>
   137d0:	mov	r2, r0
   137d4:	ldr	r3, [fp, #-16]
   137d8:	add	r3, r3, r2
   137dc:	b	137e4 <_start@@Base+0x2e54>
   137e0:	mov	r3, #0
   137e4:	mov	r0, r3
   137e8:	sub	sp, fp, #4
   137ec:	pop	{fp, pc}
   137f0:			; <UNDEFINED> instruction: 0x000014bc
   137f4:	push	{fp, lr}
   137f8:	add	fp, sp, #4
   137fc:	sub	sp, sp, #24
   13800:	str	r0, [fp, #-24]	; 0xffffffe8
   13804:	mov	r3, #0
   13808:	strh	r3, [fp, #-6]
   1380c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13810:	cmp	r3, #0
   13814:	bne	13838 <_start@@Base+0x2ea8>
   13818:	ldr	r3, [pc, #232]	; 13908 <_start@@Base+0x2f78>
   1381c:	add	r3, pc, r3
   13820:	mov	r2, #237	; 0xed
   13824:	ldr	r1, [pc, #224]	; 1390c <_start@@Base+0x2f7c>
   13828:	add	r1, pc, r1
   1382c:	ldr	r0, [pc, #220]	; 13910 <_start@@Base+0x2f80>
   13830:	add	r0, pc, r0
   13834:	bl	10984 <__assert_fail@plt>
   13838:	mov	r3, #0
   1383c:	strh	r3, [fp, #-8]
   13840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13844:	bl	10ecc <_start@@Base+0x53c>
   13848:	mov	r3, r0
   1384c:	rsb	r3, r3, #0
   13850:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13854:	add	r3, r2, r3
   13858:	str	r3, [fp, #-12]
   1385c:	ldr	r0, [fp, #-12]
   13860:	bl	10f24 <_start@@Base+0x594>
   13864:	mov	r3, r0
   13868:	mov	r2, r3
   1386c:	ldrh	r3, [fp, #-8]
   13870:	add	r3, r3, #3
   13874:	lsl	r3, r3, #1
   13878:	cmp	r2, r3
   1387c:	bcc	138a4 <_start@@Base+0x2f14>
   13880:	ldrh	r3, [fp, #-8]
   13884:	add	r3, r3, #2
   13888:	lsl	r3, r3, #1
   1388c:	ldr	r2, [fp, #-12]
   13890:	add	r3, r2, r3
   13894:	mov	r0, r3
   13898:	bl	10f24 <_start@@Base+0x594>
   1389c:	mov	r3, r0
   138a0:	strh	r3, [fp, #-6]
   138a4:	ldrh	r3, [fp, #-6]
   138a8:	cmp	r3, #0
   138ac:	beq	138dc <_start@@Base+0x2f4c>
   138b0:	ldrh	r3, [fp, #-6]
   138b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   138b8:	add	r3, r2, r3
   138bc:	str	r3, [fp, #-16]
   138c0:	ldr	r0, [fp, #-16]
   138c4:	bl	10e78 <_start@@Base+0x4e8>
   138c8:	mov	r3, r0
   138cc:	add	r3, r3, #4
   138d0:	ldr	r2, [fp, #-16]
   138d4:	add	r3, r2, r3
   138d8:	b	138fc <_start@@Base+0x2f6c>
   138dc:	ldr	r3, [pc, #48]	; 13914 <_start@@Base+0x2f84>
   138e0:	add	r3, pc, r3
   138e4:	mov	r2, #237	; 0xed
   138e8:	ldr	r1, [pc, #40]	; 13918 <_start@@Base+0x2f88>
   138ec:	add	r1, pc, r1
   138f0:	ldr	r0, [pc, #36]	; 1391c <_start@@Base+0x2f8c>
   138f4:	add	r0, pc, r0
   138f8:	bl	10984 <__assert_fail@plt>
   138fc:	mov	r0, r3
   13900:	sub	sp, fp, #4
   13904:	pop	{fp, pc}
   13908:	andeq	r1, r0, r8, lsl ip
   1390c:	andeq	r1, r0, r4, lsr r3
   13910:	andeq	r1, r0, r4, lsr #7
   13914:	andeq	r1, r0, r4, asr fp
   13918:	andeq	r1, r0, r0, ror r2
   1391c:	andeq	r1, r0, r0, asr #6
   13920:	push	{fp, lr}
   13924:	add	fp, sp, #4
   13928:	sub	sp, sp, #24
   1392c:	str	r0, [fp, #-24]	; 0xffffffe8
   13930:	mov	r3, #0
   13934:	strh	r3, [fp, #-6]
   13938:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1393c:	cmp	r3, #0
   13940:	bne	13964 <_start@@Base+0x2fd4>
   13944:	ldr	r3, [pc, #232]	; 13a34 <_start@@Base+0x30a4>
   13948:	add	r3, pc, r3
   1394c:	mov	r2, #238	; 0xee
   13950:	ldr	r1, [pc, #224]	; 13a38 <_start@@Base+0x30a8>
   13954:	add	r1, pc, r1
   13958:	ldr	r0, [pc, #220]	; 13a3c <_start@@Base+0x30ac>
   1395c:	add	r0, pc, r0
   13960:	bl	10984 <__assert_fail@plt>
   13964:	mov	r3, #1
   13968:	strh	r3, [fp, #-8]
   1396c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13970:	bl	10ecc <_start@@Base+0x53c>
   13974:	mov	r3, r0
   13978:	rsb	r3, r3, #0
   1397c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13980:	add	r3, r2, r3
   13984:	str	r3, [fp, #-12]
   13988:	ldr	r0, [fp, #-12]
   1398c:	bl	10f24 <_start@@Base+0x594>
   13990:	mov	r3, r0
   13994:	mov	r2, r3
   13998:	ldrh	r3, [fp, #-8]
   1399c:	add	r3, r3, #3
   139a0:	lsl	r3, r3, #1
   139a4:	cmp	r2, r3
   139a8:	bcc	139d0 <_start@@Base+0x3040>
   139ac:	ldrh	r3, [fp, #-8]
   139b0:	add	r3, r3, #2
   139b4:	lsl	r3, r3, #1
   139b8:	ldr	r2, [fp, #-12]
   139bc:	add	r3, r2, r3
   139c0:	mov	r0, r3
   139c4:	bl	10f24 <_start@@Base+0x594>
   139c8:	mov	r3, r0
   139cc:	strh	r3, [fp, #-6]
   139d0:	ldrh	r3, [fp, #-6]
   139d4:	cmp	r3, #0
   139d8:	beq	13a08 <_start@@Base+0x3078>
   139dc:	ldrh	r3, [fp, #-6]
   139e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   139e4:	add	r3, r2, r3
   139e8:	str	r3, [fp, #-16]
   139ec:	ldr	r0, [fp, #-16]
   139f0:	bl	10e78 <_start@@Base+0x4e8>
   139f4:	mov	r3, r0
   139f8:	add	r3, r3, #4
   139fc:	ldr	r2, [fp, #-16]
   13a00:	add	r3, r2, r3
   13a04:	b	13a28 <_start@@Base+0x3098>
   13a08:	ldr	r3, [pc, #48]	; 13a40 <_start@@Base+0x30b0>
   13a0c:	add	r3, pc, r3
   13a10:	mov	r2, #238	; 0xee
   13a14:	ldr	r1, [pc, #40]	; 13a44 <_start@@Base+0x30b4>
   13a18:	add	r1, pc, r1
   13a1c:	ldr	r0, [pc, #36]	; 13a48 <_start@@Base+0x30b8>
   13a20:	add	r0, pc, r0
   13a24:	bl	10984 <__assert_fail@plt>
   13a28:	mov	r0, r3
   13a2c:	sub	sp, fp, #4
   13a30:	pop	{fp, pc}
   13a34:	andeq	r1, r0, r4, lsr #22
   13a38:	andeq	r1, r0, r8, lsl #4
   13a3c:	andeq	r1, r0, r8, ror r2
   13a40:	andeq	r1, r0, r0, ror #20
   13a44:	andeq	r1, r0, r4, asr #2
   13a48:	andeq	r1, r0, r4, lsl r2
   13a4c:	push	{fp, lr}
   13a50:	add	fp, sp, #4
   13a54:	sub	sp, sp, #24
   13a58:	str	r0, [fp, #-24]	; 0xffffffe8
   13a5c:	mov	r3, #0
   13a60:	strh	r3, [fp, #-6]
   13a64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a68:	cmp	r3, #0
   13a6c:	bne	13a90 <_start@@Base+0x3100>
   13a70:	ldr	r3, [pc, #204]	; 13b44 <_start@@Base+0x31b4>
   13a74:	add	r3, pc, r3
   13a78:	mov	r2, #239	; 0xef
   13a7c:	ldr	r1, [pc, #196]	; 13b48 <_start@@Base+0x31b8>
   13a80:	add	r1, pc, r1
   13a84:	ldr	r0, [pc, #192]	; 13b4c <_start@@Base+0x31bc>
   13a88:	add	r0, pc, r0
   13a8c:	bl	10984 <__assert_fail@plt>
   13a90:	mov	r3, #2
   13a94:	strh	r3, [fp, #-8]
   13a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a9c:	bl	10ecc <_start@@Base+0x53c>
   13aa0:	mov	r3, r0
   13aa4:	rsb	r3, r3, #0
   13aa8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13aac:	add	r3, r2, r3
   13ab0:	str	r3, [fp, #-12]
   13ab4:	ldr	r0, [fp, #-12]
   13ab8:	bl	10f24 <_start@@Base+0x594>
   13abc:	mov	r3, r0
   13ac0:	mov	r2, r3
   13ac4:	ldrh	r3, [fp, #-8]
   13ac8:	add	r3, r3, #3
   13acc:	lsl	r3, r3, #1
   13ad0:	cmp	r2, r3
   13ad4:	bcc	13afc <_start@@Base+0x316c>
   13ad8:	ldrh	r3, [fp, #-8]
   13adc:	add	r3, r3, #2
   13ae0:	lsl	r3, r3, #1
   13ae4:	ldr	r2, [fp, #-12]
   13ae8:	add	r3, r2, r3
   13aec:	mov	r0, r3
   13af0:	bl	10f24 <_start@@Base+0x594>
   13af4:	mov	r3, r0
   13af8:	strh	r3, [fp, #-6]
   13afc:	ldrh	r3, [fp, #-6]
   13b00:	cmp	r3, #0
   13b04:	beq	13b34 <_start@@Base+0x31a4>
   13b08:	ldrh	r3, [fp, #-6]
   13b0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13b10:	add	r3, r2, r3
   13b14:	str	r3, [fp, #-16]
   13b18:	ldr	r0, [fp, #-16]
   13b1c:	bl	10e78 <_start@@Base+0x4e8>
   13b20:	mov	r3, r0
   13b24:	add	r3, r3, #4
   13b28:	ldr	r2, [fp, #-16]
   13b2c:	add	r3, r2, r3
   13b30:	b	13b38 <_start@@Base+0x31a8>
   13b34:	mov	r3, #0
   13b38:	mov	r0, r3
   13b3c:	sub	sp, fp, #4
   13b40:	pop	{fp, pc}
   13b44:	andeq	r1, r0, r0, asr sl
   13b48:	ldrdeq	r1, [r0], -ip
   13b4c:	andeq	r1, r0, ip, asr #2
   13b50:	push	{fp, lr}
   13b54:	add	fp, sp, #4
   13b58:	sub	sp, sp, #16
   13b5c:	str	r0, [fp, #-16]
   13b60:	mov	r3, #0
   13b64:	strh	r3, [fp, #-6]
   13b68:	ldr	r3, [fp, #-16]
   13b6c:	cmp	r3, #0
   13b70:	bne	13b94 <_start@@Base+0x3204>
   13b74:	ldr	r3, [pc, #164]	; 13c20 <_start@@Base+0x3290>
   13b78:	add	r3, pc, r3
   13b7c:	mov	r2, #239	; 0xef
   13b80:	ldr	r1, [pc, #156]	; 13c24 <_start@@Base+0x3294>
   13b84:	add	r1, pc, r1
   13b88:	ldr	r0, [pc, #152]	; 13c28 <_start@@Base+0x3298>
   13b8c:	add	r0, pc, r0
   13b90:	bl	10984 <__assert_fail@plt>
   13b94:	mov	r3, #2
   13b98:	strh	r3, [fp, #-8]
   13b9c:	ldr	r0, [fp, #-16]
   13ba0:	bl	10ecc <_start@@Base+0x53c>
   13ba4:	mov	r3, r0
   13ba8:	rsb	r3, r3, #0
   13bac:	ldr	r2, [fp, #-16]
   13bb0:	add	r3, r2, r3
   13bb4:	str	r3, [fp, #-12]
   13bb8:	ldr	r0, [fp, #-12]
   13bbc:	bl	10f24 <_start@@Base+0x594>
   13bc0:	mov	r3, r0
   13bc4:	mov	r2, r3
   13bc8:	ldrh	r3, [fp, #-8]
   13bcc:	add	r3, r3, #3
   13bd0:	lsl	r3, r3, #1
   13bd4:	cmp	r2, r3
   13bd8:	bcc	13c00 <_start@@Base+0x3270>
   13bdc:	ldrh	r3, [fp, #-8]
   13be0:	add	r3, r3, #2
   13be4:	lsl	r3, r3, #1
   13be8:	ldr	r2, [fp, #-12]
   13bec:	add	r3, r2, r3
   13bf0:	mov	r0, r3
   13bf4:	bl	10f24 <_start@@Base+0x594>
   13bf8:	mov	r3, r0
   13bfc:	strh	r3, [fp, #-6]
   13c00:	ldrh	r3, [fp, #-6]
   13c04:	cmp	r3, #0
   13c08:	movne	r3, #1
   13c0c:	moveq	r3, #0
   13c10:	uxtb	r3, r3
   13c14:	mov	r0, r3
   13c18:	sub	sp, fp, #4
   13c1c:	pop	{fp, pc}
   13c20:	andeq	r1, r0, r4, lsr #18
   13c24:	ldrdeq	r0, [r0], -r8
   13c28:	andeq	r1, r0, r8, asr #32
   13c2c:	push	{fp, lr}
   13c30:	add	fp, sp, #4
   13c34:	sub	sp, sp, #24
   13c38:	str	r0, [fp, #-24]	; 0xffffffe8
   13c3c:	mov	r3, #0
   13c40:	strh	r3, [fp, #-6]
   13c44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13c48:	cmp	r3, #0
   13c4c:	bne	13c70 <_start@@Base+0x32e0>
   13c50:	ldr	r3, [pc, #204]	; 13d24 <_start@@Base+0x3394>
   13c54:	add	r3, pc, r3
   13c58:	mov	r2, #240	; 0xf0
   13c5c:	ldr	r1, [pc, #196]	; 13d28 <_start@@Base+0x3398>
   13c60:	add	r1, pc, r1
   13c64:	ldr	r0, [pc, #192]	; 13d2c <_start@@Base+0x339c>
   13c68:	add	r0, pc, r0
   13c6c:	bl	10984 <__assert_fail@plt>
   13c70:	mov	r3, #3
   13c74:	strh	r3, [fp, #-8]
   13c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c7c:	bl	10ecc <_start@@Base+0x53c>
   13c80:	mov	r3, r0
   13c84:	rsb	r3, r3, #0
   13c88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c8c:	add	r3, r2, r3
   13c90:	str	r3, [fp, #-12]
   13c94:	ldr	r0, [fp, #-12]
   13c98:	bl	10f24 <_start@@Base+0x594>
   13c9c:	mov	r3, r0
   13ca0:	mov	r2, r3
   13ca4:	ldrh	r3, [fp, #-8]
   13ca8:	add	r3, r3, #3
   13cac:	lsl	r3, r3, #1
   13cb0:	cmp	r2, r3
   13cb4:	bcc	13cdc <_start@@Base+0x334c>
   13cb8:	ldrh	r3, [fp, #-8]
   13cbc:	add	r3, r3, #2
   13cc0:	lsl	r3, r3, #1
   13cc4:	ldr	r2, [fp, #-12]
   13cc8:	add	r3, r2, r3
   13ccc:	mov	r0, r3
   13cd0:	bl	10f24 <_start@@Base+0x594>
   13cd4:	mov	r3, r0
   13cd8:	strh	r3, [fp, #-6]
   13cdc:	ldrh	r3, [fp, #-6]
   13ce0:	cmp	r3, #0
   13ce4:	beq	13d14 <_start@@Base+0x3384>
   13ce8:	ldrh	r3, [fp, #-6]
   13cec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13cf0:	add	r3, r2, r3
   13cf4:	str	r3, [fp, #-16]
   13cf8:	ldr	r0, [fp, #-16]
   13cfc:	bl	10e78 <_start@@Base+0x4e8>
   13d00:	mov	r3, r0
   13d04:	add	r3, r3, #4
   13d08:	ldr	r2, [fp, #-16]
   13d0c:	add	r3, r2, r3
   13d10:	b	13d18 <_start@@Base+0x3388>
   13d14:	mov	r3, #0
   13d18:	mov	r0, r3
   13d1c:	sub	sp, fp, #4
   13d20:	pop	{fp, pc}
   13d24:			; <UNDEFINED> instruction: 0x000018b8
   13d28:	strdeq	r0, [r0], -ip
   13d2c:	andeq	r0, r0, ip, ror #30
   13d30:	push	{fp, lr}
   13d34:	add	fp, sp, #4
   13d38:	sub	sp, sp, #16
   13d3c:	str	r0, [fp, #-16]
   13d40:	mov	r3, #0
   13d44:	strh	r3, [fp, #-6]
   13d48:	ldr	r3, [fp, #-16]
   13d4c:	cmp	r3, #0
   13d50:	bne	13d74 <_start@@Base+0x33e4>
   13d54:	ldr	r3, [pc, #164]	; 13e00 <_start@@Base+0x3470>
   13d58:	add	r3, pc, r3
   13d5c:	mov	r2, #240	; 0xf0
   13d60:	ldr	r1, [pc, #156]	; 13e04 <_start@@Base+0x3474>
   13d64:	add	r1, pc, r1
   13d68:	ldr	r0, [pc, #152]	; 13e08 <_start@@Base+0x3478>
   13d6c:	add	r0, pc, r0
   13d70:	bl	10984 <__assert_fail@plt>
   13d74:	mov	r3, #3
   13d78:	strh	r3, [fp, #-8]
   13d7c:	ldr	r0, [fp, #-16]
   13d80:	bl	10ecc <_start@@Base+0x53c>
   13d84:	mov	r3, r0
   13d88:	rsb	r3, r3, #0
   13d8c:	ldr	r2, [fp, #-16]
   13d90:	add	r3, r2, r3
   13d94:	str	r3, [fp, #-12]
   13d98:	ldr	r0, [fp, #-12]
   13d9c:	bl	10f24 <_start@@Base+0x594>
   13da0:	mov	r3, r0
   13da4:	mov	r2, r3
   13da8:	ldrh	r3, [fp, #-8]
   13dac:	add	r3, r3, #3
   13db0:	lsl	r3, r3, #1
   13db4:	cmp	r2, r3
   13db8:	bcc	13de0 <_start@@Base+0x3450>
   13dbc:	ldrh	r3, [fp, #-8]
   13dc0:	add	r3, r3, #2
   13dc4:	lsl	r3, r3, #1
   13dc8:	ldr	r2, [fp, #-12]
   13dcc:	add	r3, r2, r3
   13dd0:	mov	r0, r3
   13dd4:	bl	10f24 <_start@@Base+0x594>
   13dd8:	mov	r3, r0
   13ddc:	strh	r3, [fp, #-6]
   13de0:	ldrh	r3, [fp, #-6]
   13de4:	cmp	r3, #0
   13de8:	movne	r3, #1
   13dec:	moveq	r3, #0
   13df0:	uxtb	r3, r3
   13df4:	mov	r0, r3
   13df8:	sub	sp, fp, #4
   13dfc:	pop	{fp, pc}
   13e00:	andeq	r1, r0, ip, lsl #15
   13e04:	strdeq	r0, [r0], -r8
   13e08:	andeq	r0, r0, r8, ror #28
   13e0c:	push	{fp, lr}
   13e10:	add	fp, sp, #4
   13e14:	sub	sp, sp, #24
   13e18:	str	r0, [fp, #-24]	; 0xffffffe8
   13e1c:	mov	r3, #0
   13e20:	strh	r3, [fp, #-6]
   13e24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13e28:	cmp	r3, #0
   13e2c:	bne	13e50 <_start@@Base+0x34c0>
   13e30:	ldr	r3, [pc, #200]	; 13f00 <_start@@Base+0x3570>
   13e34:	add	r3, pc, r3
   13e38:	mov	r2, #241	; 0xf1
   13e3c:	ldr	r1, [pc, #192]	; 13f04 <_start@@Base+0x3574>
   13e40:	add	r1, pc, r1
   13e44:	ldr	r0, [pc, #188]	; 13f08 <_start@@Base+0x3578>
   13e48:	add	r0, pc, r0
   13e4c:	bl	10984 <__assert_fail@plt>
   13e50:	mov	r3, #4
   13e54:	strh	r3, [fp, #-8]
   13e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e5c:	bl	10ecc <_start@@Base+0x53c>
   13e60:	mov	r3, r0
   13e64:	rsb	r3, r3, #0
   13e68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e6c:	add	r3, r2, r3
   13e70:	str	r3, [fp, #-12]
   13e74:	ldr	r0, [fp, #-12]
   13e78:	bl	10f24 <_start@@Base+0x594>
   13e7c:	mov	r3, r0
   13e80:	mov	r2, r3
   13e84:	ldrh	r3, [fp, #-8]
   13e88:	add	r3, r3, #3
   13e8c:	lsl	r3, r3, #1
   13e90:	cmp	r2, r3
   13e94:	bcc	13ebc <_start@@Base+0x352c>
   13e98:	ldrh	r3, [fp, #-8]
   13e9c:	add	r3, r3, #2
   13ea0:	lsl	r3, r3, #1
   13ea4:	ldr	r2, [fp, #-12]
   13ea8:	add	r3, r2, r3
   13eac:	mov	r0, r3
   13eb0:	bl	10f24 <_start@@Base+0x594>
   13eb4:	mov	r3, r0
   13eb8:	strh	r3, [fp, #-6]
   13ebc:	ldrh	r3, [fp, #-6]
   13ec0:	cmp	r3, #0
   13ec4:	beq	13ef0 <_start@@Base+0x3560>
   13ec8:	ldrh	r3, [fp, #-6]
   13ecc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13ed0:	add	r3, r2, r3
   13ed4:	str	r3, [fp, #-16]
   13ed8:	ldr	r0, [fp, #-16]
   13edc:	bl	10e78 <_start@@Base+0x4e8>
   13ee0:	mov	r2, r0
   13ee4:	ldr	r3, [fp, #-16]
   13ee8:	add	r3, r3, r2
   13eec:	b	13ef4 <_start@@Base+0x3564>
   13ef0:	mov	r3, #0
   13ef4:	mov	r0, r3
   13ef8:	sub	sp, fp, #4
   13efc:	pop	{fp, pc}
   13f00:	andeq	r1, r0, ip, lsl r7
   13f04:	andeq	r0, r0, ip, lsl sp
   13f08:	andeq	r0, r0, ip, lsl #27
   13f0c:	push	{fp, lr}
   13f10:	add	fp, sp, #4
   13f14:	sub	sp, sp, #16
   13f18:	str	r0, [fp, #-16]
   13f1c:	mov	r3, #0
   13f20:	strh	r3, [fp, #-6]
   13f24:	ldr	r3, [fp, #-16]
   13f28:	cmp	r3, #0
   13f2c:	bne	13f50 <_start@@Base+0x35c0>
   13f30:	ldr	r3, [pc, #164]	; 13fdc <_start@@Base+0x364c>
   13f34:	add	r3, pc, r3
   13f38:	mov	r2, #241	; 0xf1
   13f3c:	ldr	r1, [pc, #156]	; 13fe0 <_start@@Base+0x3650>
   13f40:	add	r1, pc, r1
   13f44:	ldr	r0, [pc, #152]	; 13fe4 <_start@@Base+0x3654>
   13f48:	add	r0, pc, r0
   13f4c:	bl	10984 <__assert_fail@plt>
   13f50:	mov	r3, #4
   13f54:	strh	r3, [fp, #-8]
   13f58:	ldr	r0, [fp, #-16]
   13f5c:	bl	10ecc <_start@@Base+0x53c>
   13f60:	mov	r3, r0
   13f64:	rsb	r3, r3, #0
   13f68:	ldr	r2, [fp, #-16]
   13f6c:	add	r3, r2, r3
   13f70:	str	r3, [fp, #-12]
   13f74:	ldr	r0, [fp, #-12]
   13f78:	bl	10f24 <_start@@Base+0x594>
   13f7c:	mov	r3, r0
   13f80:	mov	r2, r3
   13f84:	ldrh	r3, [fp, #-8]
   13f88:	add	r3, r3, #3
   13f8c:	lsl	r3, r3, #1
   13f90:	cmp	r2, r3
   13f94:	bcc	13fbc <_start@@Base+0x362c>
   13f98:	ldrh	r3, [fp, #-8]
   13f9c:	add	r3, r3, #2
   13fa0:	lsl	r3, r3, #1
   13fa4:	ldr	r2, [fp, #-12]
   13fa8:	add	r3, r2, r3
   13fac:	mov	r0, r3
   13fb0:	bl	10f24 <_start@@Base+0x594>
   13fb4:	mov	r3, r0
   13fb8:	strh	r3, [fp, #-6]
   13fbc:	ldrh	r3, [fp, #-6]
   13fc0:	cmp	r3, #0
   13fc4:	movne	r3, #1
   13fc8:	moveq	r3, #0
   13fcc:	uxtb	r3, r3
   13fd0:	mov	r0, r3
   13fd4:	sub	sp, fp, #4
   13fd8:	pop	{fp, pc}
   13fdc:	strdeq	r1, [r0], -r4
   13fe0:	andeq	r0, r0, ip, lsl ip
   13fe4:	andeq	r0, r0, ip, lsl #25

00013fe8 <print_type@@Base>:
   13fe8:	push	{fp, lr}
   13fec:	add	fp, sp, #4
   13ff0:	sub	sp, sp, #16
   13ff4:	str	r0, [fp, #-16]
   13ff8:	mov	r3, #1
   13ffc:	str	r3, [fp, #-8]
   14000:	mov	r0, #123	; 0x7b
   14004:	bl	10948 <putchar@plt>
   14008:	ldr	r0, [fp, #-16]
   1400c:	bl	11390 <_start@@Base+0xa00>
   14010:	mov	r3, r0
   14014:	cmp	r3, #0
   14018:	beq	14064 <print_type@@Base+0x7c>
   1401c:	ldr	r3, [fp, #-8]
   14020:	cmp	r3, #0
   14024:	bne	14030 <print_type@@Base+0x48>
   14028:	mov	r0, #44	; 0x2c
   1402c:	bl	10948 <putchar@plt>
   14030:	ldr	r0, [fp, #-16]
   14034:	bl	1129c <_start@@Base+0x90c>
   14038:	mov	r3, r0
   1403c:	mov	r0, r3
   14040:	bl	11108 <_start@@Base+0x778>
   14044:	mov	r3, r0
   14048:	mov	r1, r3
   1404c:	ldr	r3, [pc, #208]	; 14124 <print_type@@Base+0x13c>
   14050:	add	r3, pc, r3
   14054:	mov	r0, r3
   14058:	bl	108ac <printf@plt>
   1405c:	mov	r3, #0
   14060:	str	r3, [fp, #-8]
   14064:	ldr	r0, [fp, #-16]
   14068:	bl	1146c <_start@@Base+0xadc>
   1406c:	mov	r3, r0
   14070:	cmp	r3, #0
   14074:	beq	140c0 <print_type@@Base+0xd8>
   14078:	ldr	r3, [fp, #-8]
   1407c:	cmp	r3, #0
   14080:	bne	1408c <print_type@@Base+0xa4>
   14084:	mov	r0, #44	; 0x2c
   14088:	bl	10948 <putchar@plt>
   1408c:	ldr	r0, [fp, #-16]
   14090:	bl	1129c <_start@@Base+0x90c>
   14094:	mov	r3, r0
   14098:	mov	r0, r3
   1409c:	bl	11108 <_start@@Base+0x778>
   140a0:	mov	r3, r0
   140a4:	mov	r1, r3
   140a8:	ldr	r3, [pc, #120]	; 14128 <print_type@@Base+0x140>
   140ac:	add	r3, pc, r3
   140b0:	mov	r0, r3
   140b4:	bl	108ac <printf@plt>
   140b8:	mov	r3, #0
   140bc:	str	r3, [fp, #-8]
   140c0:	ldr	r0, [fp, #-16]
   140c4:	bl	1163c <_start@@Base+0xcac>
   140c8:	mov	r3, r0
   140cc:	cmp	r3, #0
   140d0:	beq	14110 <print_type@@Base+0x128>
   140d4:	ldr	r3, [fp, #-8]
   140d8:	cmp	r3, #0
   140dc:	bne	140e8 <print_type@@Base+0x100>
   140e0:	mov	r0, #44	; 0x2c
   140e4:	bl	10948 <putchar@plt>
   140e8:	ldr	r0, [fp, #-16]
   140ec:	bl	11548 <_start@@Base+0xbb8>
   140f0:	mov	r3, r0
   140f4:	mov	r1, r3
   140f8:	ldr	r3, [pc, #44]	; 1412c <print_type@@Base+0x144>
   140fc:	add	r3, pc, r3
   14100:	mov	r0, r3
   14104:	bl	108ac <printf@plt>
   14108:	mov	r3, #0
   1410c:	str	r3, [fp, #-8]
   14110:	mov	r0, #125	; 0x7d
   14114:	bl	10948 <putchar@plt>
   14118:	nop			; (mov r0, r0)
   1411c:	sub	sp, fp, #4
   14120:	pop	{fp, pc}
   14124:	andeq	r0, r0, r0, lsl ip
   14128:	andeq	r0, r0, r8, asr #23
   1412c:	andeq	r0, r0, r8, lsl #23

00014130 <print_object@@Base>:
   14130:	push	{fp, lr}
   14134:	add	fp, sp, #4
   14138:	sub	sp, sp, #24
   1413c:	str	r0, [fp, #-24]	; 0xffffffe8
   14140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14144:	bl	130ec <_start@@Base+0x275c>
   14148:	str	r0, [fp, #-12]
   1414c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14150:	bl	12fc0 <_start@@Base+0x2630>
   14154:	mov	r3, r0
   14158:	mov	r1, r3
   1415c:	ldr	r3, [pc, #692]	; 14418 <print_object@@Base+0x2e8>
   14160:	add	r3, pc, r3
   14164:	mov	r0, r3
   14168:	bl	108ac <printf@plt>
   1416c:	ldr	r3, [pc, #680]	; 1441c <print_object@@Base+0x2ec>
   14170:	add	r3, pc, r3
   14174:	mov	r0, r3
   14178:	bl	108ac <printf@plt>
   1417c:	mov	r3, #0
   14180:	str	r3, [fp, #-8]
   14184:	b	1432c <print_object@@Base+0x1fc>
   14188:	ldr	r3, [fp, #-8]
   1418c:	cmp	r3, #0
   14190:	beq	1419c <print_object@@Base+0x6c>
   14194:	mov	r0, #44	; 0x2c
   14198:	bl	10948 <putchar@plt>
   1419c:	ldr	r1, [fp, #-8]
   141a0:	ldr	r0, [fp, #-12]
   141a4:	bl	122ec <_start@@Base+0x195c>
   141a8:	str	r0, [fp, #-16]
   141ac:	ldr	r0, [fp, #-16]
   141b0:	bl	12378 <_start@@Base+0x19e8>
   141b4:	mov	r3, r0
   141b8:	mov	r1, r3
   141bc:	ldr	r3, [pc, #604]	; 14420 <print_object@@Base+0x2f0>
   141c0:	add	r3, pc, r3
   141c4:	mov	r0, r3
   141c8:	bl	108ac <printf@plt>
   141cc:	ldr	r0, [fp, #-16]
   141d0:	bl	124a4 <_start@@Base+0x1b14>
   141d4:	mov	r3, r0
   141d8:	mov	r0, r3
   141dc:	bl	13fe8 <print_type@@Base>
   141e0:	ldr	r0, [fp, #-16]
   141e4:	bl	126c0 <_start@@Base+0x1d30>
   141e8:	mov	r3, r0
   141ec:	cmp	r3, #0
   141f0:	beq	14214 <print_object@@Base+0xe4>
   141f4:	ldr	r0, [fp, #-16]
   141f8:	bl	125cc <_start@@Base+0x1c3c>
   141fc:	mov	r3, r0
   14200:	mov	r1, r3
   14204:	ldr	r3, [pc, #536]	; 14424 <print_object@@Base+0x2f4>
   14208:	add	r3, pc, r3
   1420c:	mov	r0, r3
   14210:	bl	108ac <printf@plt>
   14214:	ldr	r0, [fp, #-16]
   14218:	bl	1289c <_start@@Base+0x1f0c>
   1421c:	mov	r3, r0
   14220:	cmp	r3, #0
   14224:	beq	14248 <print_object@@Base+0x118>
   14228:	ldr	r0, [fp, #-16]
   1422c:	bl	1279c <_start@@Base+0x1e0c>
   14230:	mov	r2, r0
   14234:	mov	r3, r1
   14238:	ldr	r1, [pc, #488]	; 14428 <print_object@@Base+0x2f8>
   1423c:	add	r1, pc, r1
   14240:	mov	r0, r1
   14244:	bl	108ac <printf@plt>
   14248:	ldr	r0, [fp, #-16]
   1424c:	bl	12a74 <_start@@Base+0x20e4>
   14250:	mov	r3, r0
   14254:	cmp	r3, #0
   14258:	beq	14278 <print_object@@Base+0x148>
   1425c:	ldr	r0, [fp, #-16]
   14260:	bl	12978 <_start@@Base+0x1fe8>
   14264:	vmov	r2, r3, d0
   14268:	ldr	r1, [pc, #444]	; 1442c <print_object@@Base+0x2fc>
   1426c:	add	r1, pc, r1
   14270:	mov	r0, r1
   14274:	bl	108ac <printf@plt>
   14278:	ldr	r0, [fp, #-16]
   1427c:	bl	12c44 <_start@@Base+0x22b4>
   14280:	mov	r3, r0
   14284:	cmp	r3, #0
   14288:	beq	142c8 <print_object@@Base+0x198>
   1428c:	ldr	r0, [fp, #-16]
   14290:	bl	12b50 <_start@@Base+0x21c0>
   14294:	mov	r3, r0
   14298:	cmp	r3, #0
   1429c:	beq	142ac <print_object@@Base+0x17c>
   142a0:	ldr	r3, [pc, #392]	; 14430 <print_object@@Base+0x300>
   142a4:	add	r3, pc, r3
   142a8:	b	142b4 <print_object@@Base+0x184>
   142ac:	ldr	r3, [pc, #384]	; 14434 <print_object@@Base+0x304>
   142b0:	add	r3, pc, r3
   142b4:	mov	r1, r3
   142b8:	ldr	r3, [pc, #376]	; 14438 <print_object@@Base+0x308>
   142bc:	add	r3, pc, r3
   142c0:	mov	r0, r3
   142c4:	bl	108ac <printf@plt>
   142c8:	ldr	r0, [fp, #-16]
   142cc:	bl	12e14 <_start@@Base+0x2484>
   142d0:	mov	r3, r0
   142d4:	cmp	r3, #0
   142d8:	beq	14318 <print_object@@Base+0x1e8>
   142dc:	ldr	r0, [fp, #-16]
   142e0:	bl	12d20 <_start@@Base+0x2390>
   142e4:	mov	r3, r0
   142e8:	cmp	r3, #0
   142ec:	beq	142fc <print_object@@Base+0x1cc>
   142f0:	ldr	r3, [pc, #324]	; 1443c <print_object@@Base+0x30c>
   142f4:	add	r3, pc, r3
   142f8:	b	14304 <print_object@@Base+0x1d4>
   142fc:	ldr	r3, [pc, #316]	; 14440 <print_object@@Base+0x310>
   14300:	add	r3, pc, r3
   14304:	mov	r1, r3
   14308:	ldr	r3, [pc, #308]	; 14444 <print_object@@Base+0x314>
   1430c:	add	r3, pc, r3
   14310:	mov	r0, r3
   14314:	bl	108ac <printf@plt>
   14318:	mov	r0, #125	; 0x7d
   1431c:	bl	10948 <putchar@plt>
   14320:	ldr	r3, [fp, #-8]
   14324:	add	r3, r3, #1
   14328:	str	r3, [fp, #-8]
   1432c:	ldr	r0, [fp, #-12]
   14330:	bl	122a8 <_start@@Base+0x1918>
   14334:	mov	r2, r0
   14338:	ldr	r3, [fp, #-8]
   1433c:	cmp	r2, r3
   14340:	bhi	14188 <print_object@@Base+0x58>
   14344:	mov	r0, #93	; 0x5d
   14348:	bl	10948 <putchar@plt>
   1434c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14350:	bl	1330c <_start@@Base+0x297c>
   14354:	mov	r3, r0
   14358:	cmp	r3, #0
   1435c:	beq	1439c <print_object@@Base+0x26c>
   14360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14364:	bl	13218 <_start@@Base+0x2888>
   14368:	mov	r3, r0
   1436c:	cmp	r3, #0
   14370:	beq	14380 <print_object@@Base+0x250>
   14374:	ldr	r3, [pc, #204]	; 14448 <print_object@@Base+0x318>
   14378:	add	r3, pc, r3
   1437c:	b	14388 <print_object@@Base+0x258>
   14380:	ldr	r3, [pc, #196]	; 1444c <print_object@@Base+0x31c>
   14384:	add	r3, pc, r3
   14388:	mov	r1, r3
   1438c:	ldr	r3, [pc, #188]	; 14450 <print_object@@Base+0x320>
   14390:	add	r3, pc, r3
   14394:	mov	r0, r3
   14398:	bl	108ac <printf@plt>
   1439c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143a0:	bl	134dc <_start@@Base+0x2b4c>
   143a4:	mov	r3, r0
   143a8:	cmp	r3, #0
   143ac:	beq	143d0 <print_object@@Base+0x2a0>
   143b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143b4:	bl	133e8 <_start@@Base+0x2a58>
   143b8:	mov	r3, r0
   143bc:	mov	r1, r3
   143c0:	ldr	r3, [pc, #140]	; 14454 <print_object@@Base+0x324>
   143c4:	add	r3, pc, r3
   143c8:	mov	r0, r3
   143cc:	bl	108ac <printf@plt>
   143d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143d4:	bl	136ac <_start@@Base+0x2d1c>
   143d8:	mov	r3, r0
   143dc:	cmp	r3, #0
   143e0:	beq	14404 <print_object@@Base+0x2d4>
   143e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143e8:	bl	135b8 <_start@@Base+0x2c28>
   143ec:	mov	r3, r0
   143f0:	mov	r1, r3
   143f4:	ldr	r3, [pc, #92]	; 14458 <print_object@@Base+0x328>
   143f8:	add	r3, pc, r3
   143fc:	mov	r0, r3
   14400:	bl	108ac <printf@plt>
   14404:	mov	r0, #125	; 0x7d
   14408:	bl	10948 <putchar@plt>
   1440c:	nop			; (mov r0, r0)
   14410:	sub	sp, fp, #4
   14414:	pop	{fp, pc}
   14418:	andeq	r0, r0, r0, lsr fp
   1441c:	andeq	r0, r0, r0, lsr fp
   14420:	andeq	r0, r0, ip, ror #21
   14424:			; <UNDEFINED> instruction: 0x00000abc
   14428:	muleq	r0, r4, sl
   1442c:	andeq	r0, r0, ip, ror sl
   14430:	andeq	r0, r0, ip, asr sl
   14434:	andeq	r0, r0, r8, asr sl
   14438:	andeq	r0, r0, r4, asr sl
   1443c:	andeq	r0, r0, ip, lsl #20
   14440:	andeq	r0, r0, r8, lsl #20
   14444:	andeq	r0, r0, r4, lsl sl
   14448:	andeq	r0, r0, r8, lsl #19
   1444c:	andeq	r0, r0, r4, lsl #19
   14450:	muleq	r0, ip, r9
   14454:	andeq	r0, r0, r8, ror r9
   14458:	andeq	r0, r0, r4, asr r9

0001445c <print_enum@@Base>:
   1445c:	push	{fp, lr}
   14460:	add	fp, sp, #4
   14464:	sub	sp, sp, #24
   14468:	str	r0, [fp, #-24]	; 0xffffffe8
   1446c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14470:	bl	11d58 <_start@@Base+0x13c8>
   14474:	mov	r3, r0
   14478:	mov	r1, r3
   1447c:	ldr	r3, [pc, #412]	; 14620 <print_enum@@Base+0x1c4>
   14480:	add	r3, pc, r3
   14484:	mov	r0, r3
   14488:	bl	108ac <printf@plt>
   1448c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14490:	bl	11e84 <_start@@Base+0x14f4>
   14494:	str	r0, [fp, #-12]
   14498:	ldr	r3, [pc, #388]	; 14624 <print_enum@@Base+0x1c8>
   1449c:	add	r3, pc, r3
   144a0:	mov	r0, r3
   144a4:	bl	108ac <printf@plt>
   144a8:	mov	r3, #0
   144ac:	str	r3, [fp, #-8]
   144b0:	b	14578 <print_enum@@Base+0x11c>
   144b4:	ldr	r1, [fp, #-8]
   144b8:	ldr	r0, [fp, #-12]
   144bc:	bl	11718 <_start@@Base+0xd88>
   144c0:	str	r0, [fp, #-16]
   144c4:	ldr	r3, [fp, #-8]
   144c8:	cmp	r3, #0
   144cc:	beq	144d8 <print_enum@@Base+0x7c>
   144d0:	mov	r0, #44	; 0x2c
   144d4:	bl	10948 <putchar@plt>
   144d8:	ldr	r0, [fp, #-16]
   144dc:	bl	117a4 <_start@@Base+0xe14>
   144e0:	mov	r3, r0
   144e4:	mov	r1, r3
   144e8:	ldr	r3, [pc, #312]	; 14628 <print_enum@@Base+0x1cc>
   144ec:	add	r3, pc, r3
   144f0:	mov	r0, r3
   144f4:	bl	108ac <printf@plt>
   144f8:	ldr	r0, [fp, #-16]
   144fc:	bl	119d0 <_start@@Base+0x1040>
   14500:	mov	r3, r0
   14504:	cmp	r3, #0
   14508:	beq	1452c <print_enum@@Base+0xd0>
   1450c:	ldr	r0, [fp, #-16]
   14510:	bl	118d0 <_start@@Base+0xf40>
   14514:	mov	r2, r0
   14518:	mov	r3, r1
   1451c:	ldr	r1, [pc, #264]	; 1462c <print_enum@@Base+0x1d0>
   14520:	add	r1, pc, r1
   14524:	mov	r0, r1
   14528:	bl	108ac <printf@plt>
   1452c:	ldr	r0, [fp, #-16]
   14530:	bl	11bac <_start@@Base+0x121c>
   14534:	mov	r3, r0
   14538:	cmp	r3, #0
   1453c:	beq	14564 <print_enum@@Base+0x108>
   14540:	ldr	r3, [pc, #232]	; 14630 <print_enum@@Base+0x1d4>
   14544:	add	r3, pc, r3
   14548:	mov	r0, r3
   1454c:	bl	108ac <printf@plt>
   14550:	ldr	r0, [fp, #-16]
   14554:	bl	11aac <_start@@Base+0x111c>
   14558:	mov	r3, r0
   1455c:	mov	r0, r3
   14560:	bl	14130 <print_object@@Base>
   14564:	mov	r0, #125	; 0x7d
   14568:	bl	10948 <putchar@plt>
   1456c:	ldr	r3, [fp, #-8]
   14570:	add	r3, r3, #1
   14574:	str	r3, [fp, #-8]
   14578:	ldr	r0, [fp, #-12]
   1457c:	bl	11c88 <_start@@Base+0x12f8>
   14580:	mov	r2, r0
   14584:	ldr	r3, [fp, #-8]
   14588:	cmp	r2, r3
   1458c:	bhi	144b4 <print_enum@@Base+0x58>
   14590:	mov	r0, #93	; 0x5d
   14594:	bl	10948 <putchar@plt>
   14598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1459c:	bl	120a4 <_start@@Base+0x1714>
   145a0:	mov	r3, r0
   145a4:	cmp	r3, #0
   145a8:	beq	145e8 <print_enum@@Base+0x18c>
   145ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145b0:	bl	11fb0 <_start@@Base+0x1620>
   145b4:	mov	r3, r0
   145b8:	cmp	r3, #0
   145bc:	beq	145cc <print_enum@@Base+0x170>
   145c0:	ldr	r3, [pc, #108]	; 14634 <print_enum@@Base+0x1d8>
   145c4:	add	r3, pc, r3
   145c8:	b	145d4 <print_enum@@Base+0x178>
   145cc:	ldr	r3, [pc, #100]	; 14638 <print_enum@@Base+0x1dc>
   145d0:	add	r3, pc, r3
   145d4:	mov	r1, r3
   145d8:	ldr	r3, [pc, #92]	; 1463c <print_enum@@Base+0x1e0>
   145dc:	add	r3, pc, r3
   145e0:	mov	r0, r3
   145e4:	bl	108ac <printf@plt>
   145e8:	ldr	r3, [pc, #80]	; 14640 <print_enum@@Base+0x1e4>
   145ec:	add	r3, pc, r3
   145f0:	mov	r0, r3
   145f4:	bl	108ac <printf@plt>
   145f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145fc:	bl	12180 <_start@@Base+0x17f0>
   14600:	mov	r3, r0
   14604:	mov	r0, r3
   14608:	bl	13fe8 <print_type@@Base>
   1460c:	mov	r0, #125	; 0x7d
   14610:	bl	10948 <putchar@plt>
   14614:	nop			; (mov r0, r0)
   14618:	sub	sp, fp, #4
   1461c:	pop	{fp, pc}
   14620:	andeq	r0, r0, r0, lsl r8
   14624:	andeq	r0, r0, r0, asr #17
   14628:	andeq	r0, r0, r4, lsr #15
   1462c:	andeq	r0, r0, r8, asr #16
   14630:	andeq	r0, r0, r4, lsr r8
   14634:	andeq	r0, r0, ip, lsr r7
   14638:	andeq	r0, r0, r8, lsr r7
   1463c:	andeq	r0, r0, r8, lsr #15
   14640:	andeq	r0, r0, r8, lsr #15

00014644 <print_schema@@Base>:
   14644:	push	{fp, lr}
   14648:	add	fp, sp, #4
   1464c:	sub	sp, sp, #24
   14650:	str	r0, [fp, #-24]	; 0xffffffe8
   14654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14658:	bl	137f4 <_start@@Base+0x2e64>
   1465c:	str	r0, [fp, #-12]
   14660:	mov	r0, #123	; 0x7b
   14664:	bl	10948 <putchar@plt>
   14668:	ldr	r3, [pc, #424]	; 14818 <print_schema@@Base+0x1d4>
   1466c:	add	r3, pc, r3
   14670:	mov	r0, r3
   14674:	bl	108ac <printf@plt>
   14678:	mov	r3, #0
   1467c:	str	r3, [fp, #-8]
   14680:	b	146bc <print_schema@@Base+0x78>
   14684:	ldr	r3, [fp, #-8]
   14688:	cmp	r3, #0
   1468c:	beq	14698 <print_schema@@Base+0x54>
   14690:	mov	r0, #44	; 0x2c
   14694:	bl	10948 <putchar@plt>
   14698:	ldr	r1, [fp, #-8]
   1469c:	ldr	r0, [fp, #-12]
   146a0:	bl	12f34 <_start@@Base+0x25a4>
   146a4:	mov	r3, r0
   146a8:	mov	r0, r3
   146ac:	bl	14130 <print_object@@Base>
   146b0:	ldr	r3, [fp, #-8]
   146b4:	add	r3, r3, #1
   146b8:	str	r3, [fp, #-8]
   146bc:	ldr	r0, [fp, #-12]
   146c0:	bl	12ef0 <_start@@Base+0x2560>
   146c4:	mov	r2, r0
   146c8:	ldr	r3, [fp, #-8]
   146cc:	cmp	r2, r3
   146d0:	bhi	14684 <print_schema@@Base+0x40>
   146d4:	mov	r0, #93	; 0x5d
   146d8:	bl	10948 <putchar@plt>
   146dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146e0:	bl	13920 <_start@@Base+0x2f90>
   146e4:	str	r0, [fp, #-16]
   146e8:	ldr	r3, [pc, #300]	; 1481c <print_schema@@Base+0x1d8>
   146ec:	add	r3, pc, r3
   146f0:	mov	r0, r3
   146f4:	bl	108ac <printf@plt>
   146f8:	mov	r3, #0
   146fc:	str	r3, [fp, #-8]
   14700:	b	1473c <print_schema@@Base+0xf8>
   14704:	ldr	r3, [fp, #-8]
   14708:	cmp	r3, #0
   1470c:	beq	14718 <print_schema@@Base+0xd4>
   14710:	mov	r0, #44	; 0x2c
   14714:	bl	10948 <putchar@plt>
   14718:	ldr	r1, [fp, #-8]
   1471c:	ldr	r0, [fp, #-16]
   14720:	bl	11ccc <_start@@Base+0x133c>
   14724:	mov	r3, r0
   14728:	mov	r0, r3
   1472c:	bl	1445c <print_enum@@Base>
   14730:	ldr	r3, [fp, #-8]
   14734:	add	r3, r3, #1
   14738:	str	r3, [fp, #-8]
   1473c:	ldr	r0, [fp, #-16]
   14740:	bl	11c88 <_start@@Base+0x12f8>
   14744:	mov	r2, r0
   14748:	ldr	r3, [fp, #-8]
   1474c:	cmp	r2, r3
   14750:	bhi	14704 <print_schema@@Base+0xc0>
   14754:	mov	r0, #93	; 0x5d
   14758:	bl	10948 <putchar@plt>
   1475c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14760:	bl	13b50 <_start@@Base+0x31c0>
   14764:	mov	r3, r0
   14768:	cmp	r3, #0
   1476c:	beq	14790 <print_schema@@Base+0x14c>
   14770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14774:	bl	13a4c <_start@@Base+0x30bc>
   14778:	mov	r3, r0
   1477c:	mov	r1, r3
   14780:	ldr	r3, [pc, #152]	; 14820 <print_schema@@Base+0x1dc>
   14784:	add	r3, pc, r3
   14788:	mov	r0, r3
   1478c:	bl	108ac <printf@plt>
   14790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14794:	bl	13d30 <_start@@Base+0x33a0>
   14798:	mov	r3, r0
   1479c:	cmp	r3, #0
   147a0:	beq	147c4 <print_schema@@Base+0x180>
   147a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147a8:	bl	13c2c <_start@@Base+0x329c>
   147ac:	mov	r3, r0
   147b0:	mov	r1, r3
   147b4:	ldr	r3, [pc, #104]	; 14824 <print_schema@@Base+0x1e0>
   147b8:	add	r3, pc, r3
   147bc:	mov	r0, r3
   147c0:	bl	108ac <printf@plt>
   147c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147c8:	bl	13f0c <_start@@Base+0x357c>
   147cc:	mov	r3, r0
   147d0:	cmp	r3, #0
   147d4:	beq	147fc <print_schema@@Base+0x1b8>
   147d8:	ldr	r3, [pc, #72]	; 14828 <print_schema@@Base+0x1e4>
   147dc:	add	r3, pc, r3
   147e0:	mov	r0, r3
   147e4:	bl	108ac <printf@plt>
   147e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147ec:	bl	13e0c <_start@@Base+0x347c>
   147f0:	mov	r3, r0
   147f4:	mov	r0, r3
   147f8:	bl	14130 <print_object@@Base>
   147fc:	ldr	r3, [pc, #40]	; 1482c <print_schema@@Base+0x1e8>
   14800:	add	r3, pc, r3
   14804:	mov	r0, r3
   14808:	bl	10900 <puts@plt>
   1480c:	nop			; (mov r0, r0)
   14810:	sub	sp, fp, #4
   14814:	pop	{fp, pc}
   14818:	andeq	r0, r0, ip, lsr r7
   1481c:	andeq	r0, r0, r8, asr #13
   14820:	andeq	r0, r0, ip, lsr r6
   14824:	andeq	r0, r0, ip, lsl r6
   14828:	andeq	r0, r0, ip, lsl #12
   1482c:	strdeq	r0, [r0], -r8

00014830 <load_and_dump_schema@@Base>:
   14830:	push	{r4, fp, lr}
   14834:	add	fp, sp, #8
   14838:	sub	sp, sp, #28
   1483c:	str	r0, [fp, #-32]	; 0xffffffe0
   14840:	ldr	r4, [pc, #316]	; 14984 <load_and_dump_schema@@Base+0x154>
   14844:	add	r4, pc, r4
   14848:	mvn	r3, #0
   1484c:	str	r3, [fp, #-16]
   14850:	sub	r3, fp, #28
   14854:	mov	r2, r3
   14858:	ldr	r1, [pc, #296]	; 14988 <load_and_dump_schema@@Base+0x158>
   1485c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14860:	bl	10ab8 <_start@@Base+0x128>
   14864:	str	r0, [fp, #-24]	; 0xffffffe8
   14868:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1486c:	cmp	r3, #0
   14870:	bne	14898 <load_and_dump_schema@@Base+0x68>
   14874:	ldr	r3, [pc, #272]	; 1498c <load_and_dump_schema@@Base+0x15c>
   14878:	ldr	r3, [r4, r3]
   1487c:	ldr	r3, [r3]
   14880:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14884:	ldr	r1, [pc, #260]	; 14990 <load_and_dump_schema@@Base+0x160>
   14888:	add	r1, pc, r1
   1488c:	mov	r0, r3
   14890:	bl	1093c <fprintf@plt>
   14894:	b	14960 <load_and_dump_schema@@Base+0x130>
   14898:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1489c:	cmp	r3, #11
   148a0:	bhi	148c8 <load_and_dump_schema@@Base+0x98>
   148a4:	ldr	r3, [pc, #224]	; 1498c <load_and_dump_schema@@Base+0x15c>
   148a8:	ldr	r3, [r4, r3]
   148ac:	ldr	r3, [r3]
   148b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   148b4:	ldr	r1, [pc, #216]	; 14994 <load_and_dump_schema@@Base+0x164>
   148b8:	add	r1, pc, r1
   148bc:	mov	r0, r3
   148c0:	bl	1093c <fprintf@plt>
   148c4:	b	14960 <load_and_dump_schema@@Base+0x130>
   148c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   148cc:	bl	13788 <_start@@Base+0x2df8>
   148d0:	str	r0, [fp, #-20]	; 0xffffffec
   148d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   148d8:	cmp	r3, #0
   148dc:	bne	14920 <load_and_dump_schema@@Base+0xf0>
   148e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   148e4:	add	r3, r3, #4
   148e8:	mov	r0, r3
   148ec:	bl	13788 <_start@@Base+0x2df8>
   148f0:	str	r0, [fp, #-20]	; 0xffffffec
   148f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   148f8:	cmp	r3, #0
   148fc:	beq	14920 <load_and_dump_schema@@Base+0xf0>
   14900:	ldr	r3, [pc, #132]	; 1498c <load_and_dump_schema@@Base+0x15c>
   14904:	ldr	r3, [r4, r3]
   14908:	ldr	r3, [r3]
   1490c:	mov	r2, #40	; 0x28
   14910:	mov	r1, #1
   14914:	ldr	r0, [pc, #124]	; 14998 <load_and_dump_schema@@Base+0x168>
   14918:	add	r0, pc, r0
   1491c:	bl	108e8 <fwrite@plt>
   14920:	ldr	r3, [fp, #-20]	; 0xffffffec
   14924:	cmp	r3, #0
   14928:	bne	14950 <load_and_dump_schema@@Base+0x120>
   1492c:	ldr	r3, [pc, #88]	; 1498c <load_and_dump_schema@@Base+0x15c>
   14930:	ldr	r3, [r4, r3]
   14934:	ldr	r3, [r3]
   14938:	mov	r2, #27
   1493c:	mov	r1, #1
   14940:	ldr	r0, [pc, #84]	; 1499c <load_and_dump_schema@@Base+0x16c>
   14944:	add	r0, pc, r0
   14948:	bl	108e8 <fwrite@plt>
   1494c:	b	14960 <load_and_dump_schema@@Base+0x130>
   14950:	ldr	r0, [fp, #-20]	; 0xffffffec
   14954:	bl	14644 <print_schema@@Base>
   14958:	mov	r3, #0
   1495c:	str	r3, [fp, #-16]
   14960:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14964:	cmp	r3, #0
   14968:	beq	14974 <load_and_dump_schema@@Base+0x144>
   1496c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14970:	bl	108c4 <free@plt>
   14974:	ldr	r3, [fp, #-16]
   14978:	mov	r0, r3
   1497c:	sub	sp, fp, #8
   14980:	pop	{r4, fp, pc}
   14984:			; <UNDEFINED> instruction: 0x000117b4
   14988:	andeq	r2, r0, r0, lsl r7
   1498c:	andeq	r0, r0, r8, asr r0
   14990:	andeq	r0, r0, r4, ror r5
   14994:	andeq	r0, r0, r0, ror r5
   14998:	andeq	r0, r0, r0, lsr r5
   1499c:	andeq	r0, r0, r0, lsr r5

000149a0 <main@@Base>:
   149a0:	push	{r4, fp, lr}
   149a4:	add	fp, sp, #8
   149a8:	sub	sp, sp, #12
   149ac:	str	r0, [fp, #-16]
   149b0:	str	r1, [fp, #-20]	; 0xffffffec
   149b4:	ldr	r4, [pc, #152]	; 14a54 <main@@Base+0xb4>
   149b8:	add	r4, pc, r4
   149bc:	ldr	r3, [fp, #-16]
   149c0:	cmp	r3, #2
   149c4:	beq	14a30 <main@@Base+0x90>
   149c8:	ldr	r3, [pc, #136]	; 14a58 <main@@Base+0xb8>
   149cc:	ldr	r3, [r4, r3]
   149d0:	ldr	r3, [r3]
   149d4:	mov	r2, #28
   149d8:	mov	r1, #1
   149dc:	ldr	r0, [pc, #120]	; 14a5c <main@@Base+0xbc>
   149e0:	add	r0, pc, r0
   149e4:	bl	108e8 <fwrite@plt>
   149e8:	ldr	r3, [pc, #104]	; 14a58 <main@@Base+0xb8>
   149ec:	ldr	r3, [r4, r3]
   149f0:	ldr	r3, [r3]
   149f4:	mov	r2, #74	; 0x4a
   149f8:	mov	r1, #1
   149fc:	ldr	r0, [pc, #92]	; 14a60 <main@@Base+0xc0>
   14a00:	add	r0, pc, r0
   14a04:	bl	108e8 <fwrite@plt>
   14a08:	ldr	r3, [pc, #72]	; 14a58 <main@@Base+0xb8>
   14a0c:	ldr	r3, [r4, r3]
   14a10:	ldr	r3, [r3]
   14a14:	mov	r2, #180	; 0xb4
   14a18:	mov	r1, #1
   14a1c:	ldr	r0, [pc, #64]	; 14a64 <main@@Base+0xc4>
   14a20:	add	r0, pc, r0
   14a24:	bl	108e8 <fwrite@plt>
   14a28:	mvn	r0, #0
   14a2c:	bl	10930 <exit@plt>
   14a30:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a34:	add	r3, r3, #4
   14a38:	ldr	r3, [r3]
   14a3c:	mov	r0, r3
   14a40:	bl	14830 <load_and_dump_schema@@Base>
   14a44:	mov	r3, r0
   14a48:	mov	r0, r3
   14a4c:	sub	sp, fp, #8
   14a50:	pop	{r4, fp, pc}
   14a54:	andeq	r1, r1, r0, asr #12
   14a58:	andeq	r0, r0, r8, asr r0
   14a5c:			; <UNDEFINED> instruction: 0x000004b0
   14a60:			; <UNDEFINED> instruction: 0x000004b0
   14a64:	ldrdeq	r0, [r0], -ip

00014a68 <__libc_csu_init@@Base>:
   14a68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a6c:	mov	r7, r0
   14a70:	ldr	r6, [pc, #72]	; 14ac0 <__libc_csu_init@@Base+0x58>
   14a74:	ldr	r5, [pc, #72]	; 14ac4 <__libc_csu_init@@Base+0x5c>
   14a78:	add	r6, pc, r6
   14a7c:	add	r5, pc, r5
   14a80:	sub	r6, r6, r5
   14a84:	mov	r8, r1
   14a88:	mov	r9, r2
   14a8c:	bl	1088c <printf@plt-0x20>
   14a90:	asrs	r6, r6, #2
   14a94:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a98:	mov	r4, #0
   14a9c:	add	r4, r4, #1
   14aa0:	ldr	r3, [r5], #4
   14aa4:	mov	r2, r9
   14aa8:	mov	r1, r8
   14aac:	mov	r0, r7
   14ab0:	blx	r3
   14ab4:	cmp	r6, r4
   14ab8:	bne	14a9c <__libc_csu_init@@Base+0x34>
   14abc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ac0:	muleq	r1, r0, r4
   14ac4:	andeq	r1, r1, r8, lsl #9

00014ac8 <__libc_csu_fini@@Base>:
   14ac8:	bx	lr

Disassembly of section .fini:

00014acc <.fini>:
   14acc:	push	{r3, lr}
   14ad0:	pop	{r3, pc}
