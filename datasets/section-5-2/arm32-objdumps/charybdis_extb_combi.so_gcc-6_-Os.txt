
../repos/charybdis/extensions/.libs/extb_combi.so:     file format elf32-littlearm


Disassembly of section .init:

00000398 <_init>:
 398:	push	{r3, lr}
 39c:	bl	3dc <call_weak_fn>
 3a0:	pop	{r3, pc}

Disassembly of section .plt:

000003a4 <.plt>:
 3a4:	push	{lr}		; (str lr, [sp, #-4]!)
 3a8:	ldr	lr, [pc, #4]	; 3b4 <.plt+0x10>
 3ac:	add	lr, pc, lr
 3b0:	ldr	pc, [lr, #8]!
 3b4:	.word	0x00010c4c

000003b8 <__cxa_finalize@plt>:
 3b8:	add	ip, pc, #0, 12
 3bc:	add	ip, ip, #16, 20	; 0x10000
 3c0:	ldr	pc, [ip, #3148]!	; 0xc4c

000003c4 <__gmon_start__@plt>:
 3c4:	add	ip, pc, #0, 12
 3c8:	add	ip, ip, #16, 20	; 0x10000
 3cc:	ldr	pc, [ip, #3140]!	; 0xc44

000003d0 <strlen@plt>:
 3d0:	add	ip, pc, #0, 12
 3d4:	add	ip, ip, #16, 20	; 0x10000
 3d8:	ldr	pc, [ip, #3132]!	; 0xc3c

Disassembly of section .text:

000003dc <call_weak_fn>:
 3dc:	ldr	r3, [pc, #20]	; 3f8 <call_weak_fn+0x1c>
 3e0:	ldr	r2, [pc, #20]	; 3fc <call_weak_fn+0x20>
 3e4:	add	r3, pc, r3
 3e8:	ldr	r2, [r3, r2]
 3ec:	cmp	r2, #0
 3f0:	bxeq	lr
 3f4:	b	3c4 <__gmon_start__@plt>
 3f8:	.word	0x00010c14
 3fc:	.word	0x00000020

00000400 <deregister_tm_clones>:
 400:	ldr	r3, [pc, #52]	; 43c <deregister_tm_clones+0x3c>
 404:	ldr	r0, [pc, #52]	; 440 <deregister_tm_clones+0x40>
 408:	add	r3, pc, r3
 40c:	add	r0, pc, r0
 410:	add	r3, r3, #3
 414:	sub	r3, r3, r0
 418:	cmp	r3, #6
 41c:	ldr	r3, [pc, #32]	; 444 <deregister_tm_clones+0x44>
 420:	add	r3, pc, r3
 424:	bxls	lr
 428:	ldr	r2, [pc, #24]	; 448 <deregister_tm_clones+0x48>
 42c:	ldr	r3, [r3, r2]
 430:	cmp	r3, #0
 434:	bxeq	lr
 438:	bx	r3
 43c:	.word	0x00010c4c
 440:	.word	0x00010c48
 444:	.word	0x00010bd8
 448:	.word	0x0000001c

0000044c <register_tm_clones>:
 44c:	ldr	r1, [pc, #56]	; 48c <register_tm_clones+0x40>
 450:	ldr	r0, [pc, #56]	; 490 <register_tm_clones+0x44>
 454:	add	r1, pc, r1
 458:	add	r0, pc, r0
 45c:	sub	r1, r1, r0
 460:	ldr	r3, [pc, #44]	; 494 <register_tm_clones+0x48>
 464:	asr	r1, r1, #2
 468:	add	r3, pc, r3
 46c:	add	r1, r1, r1, lsr #31
 470:	asrs	r1, r1, #1
 474:	bxeq	lr
 478:	ldr	r2, [pc, #24]	; 498 <register_tm_clones+0x4c>
 47c:	ldr	r3, [r3, r2]
 480:	cmp	r3, #0
 484:	bxeq	lr
 488:	bx	r3
 48c:	.word	0x00010c00
 490:	.word	0x00010bfc
 494:	.word	0x00010b90
 498:	.word	0x0000002c

0000049c <__do_global_dtors_aux>:
 49c:	ldr	r3, [pc, #76]	; 4f0 <__do_global_dtors_aux+0x54>
 4a0:	ldr	r2, [pc, #76]	; 4f4 <__do_global_dtors_aux+0x58>
 4a4:	add	r3, pc, r3
 4a8:	add	r2, pc, r2
 4ac:	ldrb	r3, [r3]
 4b0:	cmp	r3, #0
 4b4:	bxne	lr
 4b8:	ldr	r3, [pc, #56]	; 4f8 <__do_global_dtors_aux+0x5c>
 4bc:	push	{r4, lr}
 4c0:	ldr	r3, [r2, r3]
 4c4:	cmp	r3, #0
 4c8:	beq	4d8 <__do_global_dtors_aux+0x3c>
 4cc:	ldr	r3, [pc, #40]	; 4fc <__do_global_dtors_aux+0x60>
 4d0:	ldr	r0, [pc, r3]
 4d4:	bl	3b8 <__cxa_finalize@plt>
 4d8:	bl	400 <deregister_tm_clones>
 4dc:	ldr	r3, [pc, #28]	; 500 <__do_global_dtors_aux+0x64>
 4e0:	mov	r2, #1
 4e4:	add	r3, pc, r3
 4e8:	strb	r2, [r3]
 4ec:	pop	{r4, pc}
 4f0:	.word	0x00010bb0
 4f4:	.word	0x00010b50
 4f8:	.word	0x00000018
 4fc:	.word	0x00010b58
 500:	.word	0x00010b70

00000504 <frame_dummy>:
 504:	ldr	r0, [pc, #56]	; 544 <frame_dummy+0x40>
 508:	ldr	r3, [pc, #56]	; 548 <frame_dummy+0x44>
 50c:	add	r0, pc, r0
 510:	ldr	r2, [r0]
 514:	add	r3, pc, r3
 518:	cmp	r2, #0
 51c:	bne	524 <frame_dummy+0x20>
 520:	b	44c <register_tm_clones>
 524:	ldr	r2, [pc, #32]	; 54c <frame_dummy+0x48>
 528:	ldr	r3, [r3, r2]
 52c:	cmp	r3, #0
 530:	beq	520 <frame_dummy+0x1c>
 534:	push	{r4, lr}
 538:	blx	r3
 53c:	pop	{r4, lr}
 540:	b	44c <register_tm_clones>
 544:	.word	0x000109e8
 548:	.word	0x00010ae4
 54c:	.word	0x00000024

00000550 <_modinit>:
 550:	ldr	r3, [pc, #40]	; 580 <_modinit+0x30>
 554:	ldr	r2, [pc, #40]	; 584 <_modinit+0x34>
 558:	add	r3, pc, r3
 55c:	mov	r0, #0
 560:	ldr	r3, [r3, r2]
 564:	ldr	r2, [pc, #28]	; 588 <_modinit+0x38>
 568:	add	r2, pc, r2
 56c:	str	r2, [r3, #152]	; 0x98
 570:	ldr	r2, [pc, #20]	; 58c <_modinit+0x3c>
 574:	add	r2, pc, r2
 578:	str	r2, [r3, #496]	; 0x1f0
 57c:	bx	lr
 580:	.word	0x00010aa0
 584:	.word	0x00000028
 588:	.word	0x00000328
 58c:	.word	0x00000304

00000590 <_moddeinit>:
 590:	ldr	r3, [pc, #24]	; 5b0 <_moddeinit+0x20>
 594:	ldr	r2, [pc, #24]	; 5b4 <_moddeinit+0x24>
 598:	add	r3, pc, r3
 59c:	ldr	r3, [r3, r2]
 5a0:	mov	r2, #0
 5a4:	str	r2, [r3, #152]	; 0x98
 5a8:	str	r2, [r3, #496]	; 0x1f0
 5ac:	bx	lr
 5b0:	.word	0x00010a60
 5b4:	.word	0x00000028

000005b8 <eb_combi>:
 5b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 5bc:	sub	sp, sp, #220	; 0xdc
 5c0:	clz	r4, r0
 5c4:	stmib	sp, {r1, r2, r3}
 5c8:	lsr	r4, r4, #5
 5cc:	ldr	r3, [pc, #644]	; 858 <eb_combi+0x2a0>
 5d0:	ldr	sl, [pc, #644]	; 85c <eb_combi+0x2a4>
 5d4:	ldrb	r9, [sp, #256]	; 0x100
 5d8:	ldr	r6, [pc, r3]
 5dc:	add	sl, pc, sl
 5e0:	cmp	r6, #4
 5e4:	orrgt	r4, r4, #1
 5e8:	cmp	r4, #0
 5ec:	bne	634 <eb_combi+0x7c>
 5f0:	ldrb	r5, [r0]
 5f4:	str	r0, [sp]
 5f8:	cmp	r5, #0
 5fc:	beq	634 <eb_combi+0x7c>
 600:	bl	3d0 <strlen@plt>
 604:	cmp	r0, #195	; 0xc3
 608:	bhi	634 <eb_combi+0x7c>
 60c:	ldr	r2, [sp]
 610:	cmp	r5, #40	; 0x28
 614:	add	r0, r2, r0
 618:	movne	r5, r0
 61c:	bne	63c <eb_combi+0x84>
 620:	ldrb	r3, [r0, #-1]
 624:	add	r2, r2, #1
 628:	sub	r5, r0, #1
 62c:	cmp	r3, #41	; 0x29
 630:	beq	63c <eb_combi+0x84>
 634:	mvn	r0, #0
 638:	b	850 <eb_combi+0x298>
 63c:	cmp	r2, r5
 640:	beq	634 <eb_combi+0x7c>
 644:	ldr	r3, [pc, #532]	; 860 <eb_combi+0x2a8>
 648:	add	r6, r6, #1
 64c:	add	r3, pc, r3
 650:	mov	r7, #11
 654:	str	r6, [r3]
 658:	add	fp, sp, #20
 65c:	mov	r3, r4
 660:	subs	r7, r7, #1
 664:	bne	67c <eb_combi+0xc4>
 668:	cmp	r2, r5
 66c:	beq	830 <eb_combi+0x278>
 670:	ldr	r2, [pc, #492]	; 864 <eb_combi+0x2ac>
 674:	add	r2, pc, r2
 678:	b	6a0 <eb_combi+0xe8>
 67c:	ldrb	r1, [r2]
 680:	cmp	r1, #126	; 0x7e
 684:	strne	r4, [sp]
 688:	bne	6b8 <eb_combi+0x100>
 68c:	add	r2, r2, #1
 690:	cmp	r5, r2
 694:	bne	6b0 <eb_combi+0xf8>
 698:	ldr	r2, [pc, #456]	; 868 <eb_combi+0x2b0>
 69c:	add	r2, pc, r2
 6a0:	ldr	r3, [r2]
 6a4:	sub	r3, r3, #1
 6a8:	str	r3, [r2]
 6ac:	b	634 <eb_combi+0x7c>
 6b0:	mov	r1, #1
 6b4:	str	r1, [sp]
 6b8:	ldr	r1, [pc, #428]	; 86c <eb_combi+0x2b4>
 6bc:	ldrb	r0, [r2]
 6c0:	add	r6, r2, #1
 6c4:	ldr	r1, [sl, r1]
 6c8:	ldr	r8, [r1, r0, lsl #2]
 6cc:	cmp	r8, #0
 6d0:	beq	698 <eb_combi+0xe0>
 6d4:	ldrb	r1, [r2, #1]
 6d8:	cmp	r1, #58	; 0x3a
 6dc:	movne	r0, #0
 6e0:	bne	7c0 <eb_combi+0x208>
 6e4:	add	r0, r2, #2
 6e8:	mov	lr, r4
 6ec:	mov	r2, fp
 6f0:	mov	ip, #0
 6f4:	cmp	r0, r5
 6f8:	mov	r6, r0
 6fc:	bne	714 <eb_combi+0x15c>
 700:	cmp	ip, #0
 704:	beq	7b4 <eb_combi+0x1fc>
 708:	ldr	r2, [pc, #352]	; 870 <eb_combi+0x2b8>
 70c:	add	r2, pc, r2
 710:	b	6a0 <eb_combi+0xe8>
 714:	cmp	lr, #0
 718:	ldrb	r1, [r0]
 71c:	beq	764 <eb_combi+0x1ac>
 720:	cmp	r1, #92	; 0x5c
 724:	cmpne	r1, #44	; 0x2c
 728:	movne	lr, #1
 72c:	moveq	lr, #0
 730:	sub	r6, r1, #40	; 0x28
 734:	cmp	r6, #1
 738:	movls	lr, #0
 73c:	andhi	lr, lr, #1
 740:	cmp	lr, #0
 744:	movne	lr, #92	; 0x5c
 748:	strbne	lr, [r2]
 74c:	addne	r2, r2, #1
 750:	add	r2, r2, #1
 754:	strb	r1, [r2, #-1]
 758:	mov	lr, r4
 75c:	add	r0, r0, #1
 760:	b	6f4 <eb_combi+0x13c>
 764:	cmp	r1, #41	; 0x29
 768:	beq	79c <eb_combi+0x1e4>
 76c:	bhi	784 <eb_combi+0x1cc>
 770:	cmp	r1, #40	; 0x28
 774:	addeq	ip, ip, #1
 778:	strb	r1, [r2]
 77c:	add	r2, r2, #1
 780:	b	75c <eb_combi+0x1a4>
 784:	cmp	r1, #44	; 0x2c
 788:	beq	7ac <eb_combi+0x1f4>
 78c:	cmp	r1, #92	; 0x5c
 790:	moveq	lr, #1
 794:	beq	75c <eb_combi+0x1a4>
 798:	b	778 <eb_combi+0x1c0>
 79c:	cmp	ip, #0
 7a0:	beq	708 <eb_combi+0x150>
 7a4:	sub	ip, ip, #1
 7a8:	b	778 <eb_combi+0x1c0>
 7ac:	cmp	ip, #0
 7b0:	bne	778 <eb_combi+0x1c0>
 7b4:	mov	r0, fp
 7b8:	mov	r1, #0
 7bc:	strb	r1, [r2]
 7c0:	cmp	r3, #0
 7c4:	bne	800 <eb_combi+0x248>
 7c8:	ldmib	sp, {r1, r2, r3}
 7cc:	blx	r8
 7d0:	cmn	r0, #1
 7d4:	ldreq	r2, [pc, #152]	; 874 <eb_combi+0x2bc>
 7d8:	addeq	r2, pc, r2
 7dc:	beq	6a0 <eb_combi+0xe8>
 7e0:	ldr	r3, [sp]
 7e4:	cmp	r3, #0
 7e8:	subeq	r3, r0, #1
 7ec:	clzne	r3, r0
 7f0:	clzeq	r3, r3
 7f4:	cmp	r9, #0
 7f8:	lsr	r3, r3, #5
 7fc:	eorne	r3, r3, #1
 800:	cmp	r6, r5
 804:	beq	830 <eb_combi+0x278>
 808:	ldrb	r1, [r6]
 80c:	add	r2, r6, #1
 810:	cmp	r1, #44	; 0x2c
 814:	beq	824 <eb_combi+0x26c>
 818:	ldr	r2, [pc, #88]	; 878 <eb_combi+0x2c0>
 81c:	add	r2, pc, r2
 820:	b	6a0 <eb_combi+0xe8>
 824:	cmp	r5, r2
 828:	bne	660 <eb_combi+0xa8>
 82c:	b	818 <eb_combi+0x260>
 830:	ldr	r1, [pc, #68]	; 87c <eb_combi+0x2c4>
 834:	cmp	r9, #0
 838:	add	r1, pc, r1
 83c:	eorne	r0, r3, #1
 840:	ldr	r2, [r1]
 844:	moveq	r0, r3
 848:	sub	r2, r2, #1
 84c:	str	r2, [r1]
 850:	add	sp, sp, #220	; 0xdc
 854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 858:	.word	0x00010a80
 85c:	.word	0x00010a1c
 860:	.word	0x00010a0c
 864:	.word	0x000109e4
 868:	.word	0x000109bc
 86c:	.word	0x00000028
 870:	.word	0x0001094c
 874:	.word	0x00010880
 878:	.word	0x0001083c
 87c:	.word	0x00010820

00000880 <eb_or>:
 880:	mov	ip, #0
 884:	push	{r0, r1, r2, lr}
 888:	str	ip, [sp]
 88c:	bl	5b8 <eb_combi>
 890:	add	sp, sp, #12
 894:	pop	{pc}		; (ldr pc, [sp], #4)

00000898 <eb_and>:
 898:	mov	ip, #1
 89c:	push	{r0, r1, r2, lr}
 8a0:	str	ip, [sp]
 8a4:	bl	5b8 <eb_combi>
 8a8:	add	sp, sp, #12
 8ac:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

000008b0 <_fini>:
 8b0:	push	{r3, lr}
 8b4:	pop	{r3, pc}
