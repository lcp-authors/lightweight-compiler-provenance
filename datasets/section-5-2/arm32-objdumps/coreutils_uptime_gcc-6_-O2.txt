
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

00010f70 <.init>:
   10f70:	push	{r3, lr}
   10f74:	bl	1144c <dcngettext@plt+0x180>
   10f78:	pop	{r3, pc}

Disassembly of section .plt:

00010f7c <calloc@plt-0x14>:
   10f7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10f80:	ldr	lr, [pc, #4]	; 10f8c <calloc@plt-0x4>
   10f84:	add	lr, pc, lr
   10f88:	ldr	pc, [lr, #8]!
   10f8c:	andeq	r8, r1, r4, ror r0

00010f90 <calloc@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #24, 20	; 0x18000
   10f98:	ldr	pc, [ip, #116]!	; 0x74

00010f9c <fputs_unlocked@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #24, 20	; 0x18000
   10fa4:	ldr	pc, [ip, #108]!	; 0x6c

00010fa8 <raise@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #24, 20	; 0x18000
   10fb0:	ldr	pc, [ip, #100]!	; 0x64

00010fb4 <gmtime_r@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #24, 20	; 0x18000
   10fbc:	ldr	pc, [ip, #92]!	; 0x5c

00010fc0 <strcmp@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #24, 20	; 0x18000
   10fc8:	ldr	pc, [ip, #84]!	; 0x54

00010fcc <mktime@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #24, 20	; 0x18000
   10fd4:	ldr	pc, [ip, #76]!	; 0x4c

00010fd8 <fflush@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #24, 20	; 0x18000
   10fe0:	ldr	pc, [ip, #68]!	; 0x44

00010fe4 <utmpxname@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #24, 20	; 0x18000
   10fec:	ldr	pc, [ip, #60]!	; 0x3c

00010ff0 <free@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #24, 20	; 0x18000
   10ff8:	ldr	pc, [ip, #52]!	; 0x34

00010ffc <_exit@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #24, 20	; 0x18000
   11004:	ldr	pc, [ip, #44]!	; 0x2c

00011008 <memcpy@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #24, 20	; 0x18000
   11010:	ldr	pc, [ip, #36]!	; 0x24

00011014 <mbsinit@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #24, 20	; 0x18000
   1101c:	ldr	pc, [ip, #28]!

00011020 <time@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #24, 20	; 0x18000
   11028:	ldr	pc, [ip, #20]!

0001102c <memcmp@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #24, 20	; 0x18000
   11034:	ldr	pc, [ip, #12]!

00011038 <fputc_unlocked@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #24, 20	; 0x18000
   11040:	ldr	pc, [ip, #4]!

00011044 <dcgettext@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #94208	; 0x17000
   1104c:	ldr	pc, [ip, #4092]!	; 0xffc

00011050 <setutxent@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #94208	; 0x17000
   11058:	ldr	pc, [ip, #4084]!	; 0xff4

0001105c <realloc@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #94208	; 0x17000
   11064:	ldr	pc, [ip, #4076]!	; 0xfec

00011068 <localtime_r@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #94208	; 0x17000
   11070:	ldr	pc, [ip, #4068]!	; 0xfe4

00011074 <textdomain@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #94208	; 0x17000
   1107c:	ldr	pc, [ip, #4060]!	; 0xfdc

00011080 <iswprint@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #94208	; 0x17000
   11088:	ldr	pc, [ip, #4052]!	; 0xfd4

0001108c <tzset@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #94208	; 0x17000
   11094:	ldr	pc, [ip, #4044]!	; 0xfcc

00011098 <fwrite@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #94208	; 0x17000
   110a0:	ldr	pc, [ip, #4036]!	; 0xfc4

000110a4 <lseek64@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #94208	; 0x17000
   110ac:	ldr	pc, [ip, #4028]!	; 0xfbc

000110b0 <__ctype_get_mb_cur_max@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #94208	; 0x17000
   110b8:	ldr	pc, [ip, #4020]!	; 0xfb4

000110bc <__fpending@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #94208	; 0x17000
   110c4:	ldr	pc, [ip, #4012]!	; 0xfac

000110c8 <mbrtowc@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #94208	; 0x17000
   110d0:	ldr	pc, [ip, #4004]!	; 0xfa4

000110d4 <error@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #94208	; 0x17000
   110dc:	ldr	pc, [ip, #3996]!	; 0xf9c

000110e0 <getenv@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #94208	; 0x17000
   110e8:	ldr	pc, [ip, #3988]!	; 0xf94

000110ec <malloc@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #94208	; 0x17000
   110f4:	ldr	pc, [ip, #3980]!	; 0xf8c

000110f8 <__libc_start_main@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #94208	; 0x17000
   11100:	ldr	pc, [ip, #3972]!	; 0xf84

00011104 <strftime@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #94208	; 0x17000
   1110c:	ldr	pc, [ip, #3964]!	; 0xf7c

00011110 <__freading@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #94208	; 0x17000
   11118:	ldr	pc, [ip, #3956]!	; 0xf74

0001111c <localtime@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #94208	; 0x17000
   11124:	ldr	pc, [ip, #3948]!	; 0xf6c

00011128 <__ctype_tolower_loc@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #94208	; 0x17000
   11130:	ldr	pc, [ip, #3940]!	; 0xf64

00011134 <__ctype_toupper_loc@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #94208	; 0x17000
   1113c:	ldr	pc, [ip, #3932]!	; 0xf5c

00011140 <__gmon_start__@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #94208	; 0x17000
   11148:	ldr	pc, [ip, #3924]!	; 0xf54

0001114c <getopt_long@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #94208	; 0x17000
   11154:	ldr	pc, [ip, #3916]!	; 0xf4c

00011158 <kill@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #94208	; 0x17000
   11160:	ldr	pc, [ip, #3908]!	; 0xf44

00011164 <__ctype_b_loc@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #94208	; 0x17000
   1116c:	ldr	pc, [ip, #3900]!	; 0xf3c

00011170 <exit@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #94208	; 0x17000
   11178:	ldr	pc, [ip, #3892]!	; 0xf34

0001117c <strlen@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #94208	; 0x17000
   11184:	ldr	pc, [ip, #3884]!	; 0xf2c

00011188 <setenv@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #94208	; 0x17000
   11190:	ldr	pc, [ip, #3876]!	; 0xf24

00011194 <__errno_location@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #94208	; 0x17000
   1119c:	ldr	pc, [ip, #3868]!	; 0xf1c

000111a0 <__cxa_atexit@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #94208	; 0x17000
   111a8:	ldr	pc, [ip, #3860]!	; 0xf14

000111ac <memset@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #94208	; 0x17000
   111b4:	ldr	pc, [ip, #3852]!	; 0xf0c

000111b8 <strncpy@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #94208	; 0x17000
   111c0:	ldr	pc, [ip, #3844]!	; 0xf04

000111c4 <__printf_chk@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #94208	; 0x17000
   111cc:	ldr	pc, [ip, #3836]!	; 0xefc

000111d0 <fileno@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #94208	; 0x17000
   111d8:	ldr	pc, [ip, #3828]!	; 0xef4

000111dc <__fprintf_chk@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #94208	; 0x17000
   111e4:	ldr	pc, [ip, #3820]!	; 0xeec

000111e8 <fclose@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #94208	; 0x17000
   111f0:	ldr	pc, [ip, #3812]!	; 0xee4

000111f4 <fseeko64@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #94208	; 0x17000
   111fc:	ldr	pc, [ip, #3804]!	; 0xedc

00011200 <getloadavg@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #94208	; 0x17000
   11208:	ldr	pc, [ip, #3796]!	; 0xed4

0001120c <strtod_l@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #94208	; 0x17000
   11214:	ldr	pc, [ip, #3788]!	; 0xecc

00011218 <endutxent@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #94208	; 0x17000
   11220:	ldr	pc, [ip, #3780]!	; 0xec4

00011224 <__overflow@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #94208	; 0x17000
   1122c:	ldr	pc, [ip, #3772]!	; 0xebc

00011230 <setlocale@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #94208	; 0x17000
   11238:	ldr	pc, [ip, #3764]!	; 0xeb4

0001123c <strrchr@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #94208	; 0x17000
   11244:	ldr	pc, [ip, #3756]!	; 0xeac

00011248 <nl_langinfo@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #94208	; 0x17000
   11250:	ldr	pc, [ip, #3748]!	; 0xea4

00011254 <fputc@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #94208	; 0x17000
   1125c:	ldr	pc, [ip, #3740]!	; 0xe9c

00011260 <newlocale@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #94208	; 0x17000
   11268:	ldr	pc, [ip, #3732]!	; 0xe94

0001126c <timegm@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #94208	; 0x17000
   11274:	ldr	pc, [ip, #3724]!	; 0xe8c

00011278 <fopen64@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #94208	; 0x17000
   11280:	ldr	pc, [ip, #3716]!	; 0xe84

00011284 <fgets_unlocked@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #94208	; 0x17000
   1128c:	ldr	pc, [ip, #3708]!	; 0xe7c

00011290 <bindtextdomain@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #94208	; 0x17000
   11298:	ldr	pc, [ip, #3700]!	; 0xe74

0001129c <unsetenv@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #94208	; 0x17000
   112a4:	ldr	pc, [ip, #3692]!	; 0xe6c

000112a8 <strncmp@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #94208	; 0x17000
   112b0:	ldr	pc, [ip, #3684]!	; 0xe64

000112b4 <abort@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #94208	; 0x17000
   112bc:	ldr	pc, [ip, #3676]!	; 0xe5c

000112c0 <getutxent@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #94208	; 0x17000
   112c8:	ldr	pc, [ip, #3668]!	; 0xe54

000112cc <dcngettext@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #94208	; 0x17000
   112d4:	ldr	pc, [ip, #3660]!	; 0xe4c

Disassembly of section .text:

000112d8 <.text>:
   112d8:	push	{r7, lr}
   112dc:	mov	r4, r0
   112e0:	sub	sp, sp, #32
   112e4:	ldr	r0, [r1]
   112e8:	mov	r5, r1
   112ec:	bl	13db4 <dcngettext@plt+0x2ae8>
   112f0:	ldr	r1, [pc, #224]	; 113d8 <dcngettext@plt+0x10c>
   112f4:	mov	r0, #6
   112f8:	bl	11230 <setlocale@plt>
   112fc:	ldr	r1, [pc, #216]	; 113dc <dcngettext@plt+0x110>
   11300:	ldr	r0, [pc, #216]	; 113e0 <dcngettext@plt+0x114>
   11304:	bl	11290 <bindtextdomain@plt>
   11308:	ldr	r0, [pc, #208]	; 113e0 <dcngettext@plt+0x114>
   1130c:	bl	11074 <textdomain@plt>
   11310:	ldr	r0, [pc, #204]	; 113e4 <dcngettext@plt+0x118>
   11314:	bl	1758c <dcngettext@plt+0x62c0>
   11318:	ldr	r3, [pc, #200]	; 113e8 <dcngettext@plt+0x11c>
   1131c:	ldr	lr, [pc, #200]	; 113ec <dcngettext@plt+0x120>
   11320:	ldr	ip, [pc, #200]	; 113f0 <dcngettext@plt+0x124>
   11324:	ldr	r1, [r3]
   11328:	ldr	r2, [pc, #196]	; 113f4 <dcngettext@plt+0x128>
   1132c:	ldr	r3, [pc, #196]	; 113f8 <dcngettext@plt+0x12c>
   11330:	ldr	r8, [pc, #196]	; 113fc <dcngettext@plt+0x130>
   11334:	mov	r6, #0
   11338:	mov	r7, #1
   1133c:	str	r1, [sp]
   11340:	mov	r0, r4
   11344:	str	r2, [sp, #12]
   11348:	str	r3, [sp, #8]
   1134c:	mov	r1, r5
   11350:	ldr	r3, [pc, #168]	; 11400 <dcngettext@plt+0x134>
   11354:	str	lr, [sp, #20]
   11358:	str	ip, [sp, #16]
   1135c:	str	r6, [sp, #24]
   11360:	str	r7, [sp, #4]
   11364:	ldr	r2, [pc, #152]	; 11404 <dcngettext@plt+0x138>
   11368:	bl	13cdc <dcngettext@plt+0x2a10>
   1136c:	ldr	r3, [r8]
   11370:	subs	r4, r4, r3
   11374:	beq	113cc <dcngettext@plt+0x100>
   11378:	cmp	r4, r7
   1137c:	bne	1138c <dcngettext@plt+0xc0>
   11380:	mov	r1, r6
   11384:	ldr	r0, [r5, r3, lsl #2]
   11388:	bl	118f4 <dcngettext@plt+0x628>
   1138c:	mov	r2, #5
   11390:	ldr	r1, [pc, #112]	; 11408 <dcngettext@plt+0x13c>
   11394:	mov	r0, r6
   11398:	bl	11044 <dcgettext@plt>
   1139c:	ldr	r3, [r8]
   113a0:	add	r3, r3, #1
   113a4:	mov	r4, r0
   113a8:	ldr	r0, [r5, r3, lsl #2]
   113ac:	bl	15c74 <dcngettext@plt+0x49a8>
   113b0:	mov	r2, r4
   113b4:	mov	r1, r6
   113b8:	mov	r3, r0
   113bc:	mov	r0, r6
   113c0:	bl	110d4 <error@plt>
   113c4:	mov	r0, r7
   113c8:	bl	11960 <dcngettext@plt+0x694>
   113cc:	mov	r1, r7
   113d0:	ldr	r0, [pc, #52]	; 1140c <dcngettext@plt+0x140>
   113d4:	bl	118f4 <dcngettext@plt+0x628>
   113d8:	andeq	r7, r1, r4, lsr #17
   113dc:	andeq	r7, r1, ip, asr #19
   113e0:	andeq	r7, r1, r4, lsr #18
   113e4:	andeq	r1, r1, ip, lsl sp
   113e8:	andeq	r9, r2, r0, lsr r1
   113ec:	andeq	r7, r1, r4, ror #19
   113f0:	strdeq	r7, [r1], -r0
   113f4:	andeq	r7, r1, r0, lsl #20
   113f8:	andeq	r1, r1, r0, ror #18
   113fc:	andeq	r9, r2, r0, lsl #3
   11400:	andeq	r7, r1, r0, lsr #18
   11404:			; <UNDEFINED> instruction: 0x000176bc
   11408:	andeq	r7, r1, r4, lsl sl
   1140c:	andeq	r7, r1, r8, ror #16
   11410:	mov	fp, #0
   11414:	mov	lr, #0
   11418:	pop	{r1}		; (ldr r1, [sp], #4)
   1141c:	mov	r2, sp
   11420:	push	{r2}		; (str r2, [sp, #-4]!)
   11424:	push	{r0}		; (str r0, [sp, #-4]!)
   11428:	ldr	ip, [pc, #16]	; 11440 <dcngettext@plt+0x174>
   1142c:	push	{ip}		; (str ip, [sp, #-4]!)
   11430:	ldr	r0, [pc, #12]	; 11444 <dcngettext@plt+0x178>
   11434:	ldr	r3, [pc, #12]	; 11448 <dcngettext@plt+0x17c>
   11438:	bl	110f8 <__libc_start_main@plt>
   1143c:	bl	112b4 <abort@plt>
   11440:	andeq	r7, r1, r8, lsl #11
   11444:	ldrdeq	r1, [r1], -r8
   11448:	andeq	r7, r1, r8, lsr #10
   1144c:	ldr	r3, [pc, #20]	; 11468 <dcngettext@plt+0x19c>
   11450:	ldr	r2, [pc, #20]	; 1146c <dcngettext@plt+0x1a0>
   11454:	add	r3, pc, r3
   11458:	ldr	r2, [r3, r2]
   1145c:	cmp	r2, #0
   11460:	bxeq	lr
   11464:	b	11140 <__gmon_start__@plt>
   11468:	andeq	r7, r1, r4, lsr #23
   1146c:	andeq	r0, r0, r4, lsr #2
   11470:	ldr	r3, [pc, #28]	; 11494 <dcngettext@plt+0x1c8>
   11474:	ldr	r0, [pc, #28]	; 11498 <dcngettext@plt+0x1cc>
   11478:	sub	r3, r3, r0
   1147c:	cmp	r3, #6
   11480:	bxls	lr
   11484:	ldr	r3, [pc, #16]	; 1149c <dcngettext@plt+0x1d0>
   11488:	cmp	r3, #0
   1148c:	bxeq	lr
   11490:	bx	r3
   11494:	andeq	r9, r2, fp, ror r1
   11498:	andeq	r9, r2, r8, ror r1
   1149c:	andeq	r0, r0, r0
   114a0:	ldr	r1, [pc, #36]	; 114cc <dcngettext@plt+0x200>
   114a4:	ldr	r0, [pc, #36]	; 114d0 <dcngettext@plt+0x204>
   114a8:	sub	r1, r1, r0
   114ac:	asr	r1, r1, #2
   114b0:	add	r1, r1, r1, lsr #31
   114b4:	asrs	r1, r1, #1
   114b8:	bxeq	lr
   114bc:	ldr	r3, [pc, #16]	; 114d4 <dcngettext@plt+0x208>
   114c0:	cmp	r3, #0
   114c4:	bxeq	lr
   114c8:	bx	r3
   114cc:	andeq	r9, r2, r8, ror r1
   114d0:	andeq	r9, r2, r8, ror r1
   114d4:	andeq	r0, r0, r0
   114d8:	push	{r4, lr}
   114dc:	ldr	r4, [pc, #24]	; 114fc <dcngettext@plt+0x230>
   114e0:	ldrb	r3, [r4]
   114e4:	cmp	r3, #0
   114e8:	popne	{r4, pc}
   114ec:	bl	11470 <dcngettext@plt+0x1a4>
   114f0:	mov	r3, #1
   114f4:	strb	r3, [r4]
   114f8:	pop	{r4, pc}
   114fc:	muleq	r2, r4, r1
   11500:	ldr	r0, [pc, #40]	; 11530 <dcngettext@plt+0x264>
   11504:	ldr	r3, [r0]
   11508:	cmp	r3, #0
   1150c:	bne	11514 <dcngettext@plt+0x248>
   11510:	b	114a0 <dcngettext@plt+0x1d4>
   11514:	ldr	r3, [pc, #24]	; 11534 <dcngettext@plt+0x268>
   11518:	cmp	r3, #0
   1151c:	beq	11510 <dcngettext@plt+0x244>
   11520:	push	{r4, lr}
   11524:	blx	r3
   11528:	pop	{r4, lr}
   1152c:	b	114a0 <dcngettext@plt+0x1d4>
   11530:	andeq	r8, r2, r4, lsl pc
   11534:	andeq	r0, r0, r0
   11538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1153c:	sub	sp, sp, #8192	; 0x2000
   11540:	sub	sp, sp, #20
   11544:	mov	r5, r0
   11548:	mov	r4, r1
   1154c:	ldr	r0, [pc, #852]	; 118a8 <dcngettext@plt+0x5dc>
   11550:	ldr	r1, [pc, #852]	; 118ac <dcngettext@plt+0x5e0>
   11554:	bl	11278 <fopen64@plt>
   11558:	subs	r8, r0, #0
   1155c:	beq	11790 <dcngettext@plt+0x4c4>
   11560:	add	r7, sp, #16
   11564:	mov	r0, r7
   11568:	mov	r2, r8
   1156c:	mov	r1, #8192	; 0x2000
   11570:	bl	11284 <fgets_unlocked@plt>
   11574:	cmp	r7, r0
   11578:	beq	1185c <dcngettext@plt+0x590>
   1157c:	mov	r6, #0
   11580:	mov	r0, r8
   11584:	bl	11e00 <dcngettext@plt+0xb34>
   11588:	cmp	r5, #0
   1158c:	sub	r3, r5, #1
   11590:	beq	11844 <dcngettext@plt+0x578>
   11594:	mov	r8, #0
   11598:	mov	r5, r8
   1159c:	ldrb	r2, [r4, #44]	; 0x2c
   115a0:	cmp	r2, #0
   115a4:	ldrsh	r2, [r4]
   115a8:	beq	115b8 <dcngettext@plt+0x2ec>
   115ac:	cmp	r2, #7
   115b0:	addeq	r5, r5, #1
   115b4:	beq	115c0 <dcngettext@plt+0x2f4>
   115b8:	cmp	r2, #2
   115bc:	ldreq	r8, [r4, #340]	; 0x154
   115c0:	sub	r3, r3, #1
   115c4:	cmn	r3, #1
   115c8:	add	r4, r4, #384	; 0x180
   115cc:	bne	1159c <dcngettext@plt+0x2d0>
   115d0:	mov	r0, #0
   115d4:	bl	11020 <time@plt>
   115d8:	cmp	r6, #0
   115dc:	str	r0, [r7, #-4]
   115e0:	bne	115f0 <dcngettext@plt+0x324>
   115e4:	cmp	r8, #0
   115e8:	subne	r6, r0, r8
   115ec:	beq	117ac <dcngettext@plt+0x4e0>
   115f0:	ldr	r1, [pc, #696]	; 118b0 <dcngettext@plt+0x5e4>
   115f4:	asr	r4, r6, #31
   115f8:	ldr	r2, [pc, #692]	; 118b4 <dcngettext@plt+0x5e8>
   115fc:	smull	r3, r1, r1, r6
   11600:	ldr	r8, [pc, #688]	; 118b8 <dcngettext@plt+0x5ec>
   11604:	add	r1, r1, r6
   11608:	ldr	r3, [pc, #684]	; 118bc <dcngettext@plt+0x5f0>
   1160c:	rsb	r4, r4, r1, asr #16
   11610:	ldr	r9, [pc, #680]	; 118c0 <dcngettext@plt+0x5f4>
   11614:	mla	r2, r2, r4, r6
   11618:	sub	r0, r7, #4
   1161c:	smull	r1, r8, r8, r2
   11620:	add	r1, r8, r2
   11624:	asr	r8, r2, #31
   11628:	rsb	r8, r8, r1, asr #11
   1162c:	mla	r3, r3, r8, r2
   11630:	smull	r2, r9, r9, r3
   11634:	add	r9, r9, r3
   11638:	asr	r3, r3, #31
   1163c:	rsb	r9, r3, r9, asr #5
   11640:	bl	1111c <localtime@plt>
   11644:	subs	fp, r0, #0
   11648:	beq	117e0 <dcngettext@plt+0x514>
   1164c:	ldr	r3, [pc, #624]	; 118c4 <dcngettext@plt+0x5f8>
   11650:	mov	r2, #5
   11654:	ldr	r1, [pc, #620]	; 118c8 <dcngettext@plt+0x5fc>
   11658:	mov	r0, #0
   1165c:	ldr	sl, [r3]
   11660:	bl	11044 <dcgettext@plt>
   11664:	mov	r3, #0
   11668:	mov	r2, fp
   1166c:	str	r3, [sp]
   11670:	mov	r1, r0
   11674:	mov	r0, sl
   11678:	bl	13b44 <dcngettext@plt+0x2878>
   1167c:	cmn	r6, #1
   11680:	beq	117fc <dcngettext@plt+0x530>
   11684:	cmp	r4, #0
   11688:	ble	1181c <dcngettext@plt+0x550>
   1168c:	mov	r3, #5
   11690:	str	r3, [sp]
   11694:	ldr	r2, [pc, #560]	; 118cc <dcngettext@plt+0x600>
   11698:	mov	r3, r4
   1169c:	ldr	r1, [pc, #556]	; 118d0 <dcngettext@plt+0x604>
   116a0:	mov	r0, #0
   116a4:	bl	112cc <dcngettext@plt>
   116a8:	str	r9, [sp]
   116ac:	mov	r3, r8
   116b0:	mov	r2, r4
   116b4:	mov	r1, r0
   116b8:	mov	r0, #1
   116bc:	bl	111c4 <__printf_chk@plt>
   116c0:	mov	r6, #5
   116c4:	mov	r3, r5
   116c8:	ldr	r2, [pc, #516]	; 118d4 <dcngettext@plt+0x608>
   116cc:	ldr	r1, [pc, #516]	; 118d8 <dcngettext@plt+0x60c>
   116d0:	str	r6, [sp]
   116d4:	mov	r0, #0
   116d8:	bl	112cc <dcngettext@plt>
   116dc:	mov	r2, r5
   116e0:	mov	r1, r0
   116e4:	mov	r0, #1
   116e8:	bl	111c4 <__printf_chk@plt>
   116ec:	mov	r1, #3
   116f0:	mov	r0, r7
   116f4:	bl	11200 <getloadavg@plt>
   116f8:	cmn	r0, #1
   116fc:	mov	r4, r0
   11700:	beq	1175c <dcngettext@plt+0x490>
   11704:	cmp	r0, #0
   11708:	ble	11784 <dcngettext@plt+0x4b8>
   1170c:	mov	r2, r6
   11710:	ldr	r1, [pc, #452]	; 118dc <dcngettext@plt+0x610>
   11714:	mov	r0, #0
   11718:	bl	11044 <dcgettext@plt>
   1171c:	ldrd	r2, [r7]
   11720:	mov	r1, r0
   11724:	mov	r0, #1
   11728:	bl	111c4 <__printf_chk@plt>
   1172c:	cmp	r4, #1
   11730:	beq	1175c <dcngettext@plt+0x490>
   11734:	ldrd	r2, [r7, #8]
   11738:	ldr	r1, [pc, #416]	; 118e0 <dcngettext@plt+0x614>
   1173c:	mov	r0, #1
   11740:	bl	111c4 <__printf_chk@plt>
   11744:	cmp	r4, #2
   11748:	beq	1175c <dcngettext@plt+0x490>
   1174c:	ldrd	r2, [r7, #16]
   11750:	ldr	r1, [pc, #392]	; 118e0 <dcngettext@plt+0x614>
   11754:	mov	r0, #1
   11758:	bl	111c4 <__printf_chk@plt>
   1175c:	ldr	r3, [pc, #352]	; 118c4 <dcngettext@plt+0x5f8>
   11760:	ldr	r0, [r3]
   11764:	ldr	r3, [r0, #20]
   11768:	ldr	r2, [r0, #24]
   1176c:	cmp	r3, r2
   11770:	addcc	r1, r3, #1
   11774:	movcc	r2, #10
   11778:	strcc	r1, [r0, #20]
   1177c:	strbcc	r2, [r3]
   11780:	bcs	117d4 <dcngettext@plt+0x508>
   11784:	add	sp, sp, #8192	; 0x2000
   11788:	add	sp, sp, #20
   1178c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11790:	cmp	r5, #0
   11794:	sub	r3, r5, #1
   11798:	movne	r6, r8
   1179c:	addne	r7, sp, #16
   117a0:	bne	11594 <dcngettext@plt+0x2c8>
   117a4:	bl	11020 <time@plt>
   117a8:	str	r0, [sp, #12]
   117ac:	bl	11194 <__errno_location@plt>
   117b0:	mov	r2, #5
   117b4:	ldr	r1, [pc, #296]	; 118e4 <dcngettext@plt+0x618>
   117b8:	ldr	r4, [r0]
   117bc:	mov	r0, #0
   117c0:	bl	11044 <dcgettext@plt>
   117c4:	mov	r1, r4
   117c8:	mov	r2, r0
   117cc:	mov	r0, #1
   117d0:	bl	110d4 <error@plt>
   117d4:	mov	r1, #10
   117d8:	bl	11224 <__overflow@plt>
   117dc:	b	11784 <dcngettext@plt+0x4b8>
   117e0:	mov	r2, #5
   117e4:	ldr	r1, [pc, #252]	; 118e8 <dcngettext@plt+0x61c>
   117e8:	bl	11044 <dcgettext@plt>
   117ec:	mov	r1, r0
   117f0:	mov	r0, #1
   117f4:	bl	111c4 <__printf_chk@plt>
   117f8:	b	1167c <dcngettext@plt+0x3b0>
   117fc:	mov	r2, #5
   11800:	ldr	r1, [pc, #228]	; 118ec <dcngettext@plt+0x620>
   11804:	mov	r0, #0
   11808:	bl	11044 <dcgettext@plt>
   1180c:	mov	r1, r0
   11810:	mov	r0, #1
   11814:	bl	111c4 <__printf_chk@plt>
   11818:	b	116c0 <dcngettext@plt+0x3f4>
   1181c:	mov	r2, #5
   11820:	ldr	r1, [pc, #200]	; 118f0 <dcngettext@plt+0x624>
   11824:	mov	r0, #0
   11828:	bl	11044 <dcgettext@plt>
   1182c:	mov	r3, r9
   11830:	mov	r2, r8
   11834:	mov	r1, r0
   11838:	mov	r0, #1
   1183c:	bl	111c4 <__printf_chk@plt>
   11840:	b	116c0 <dcngettext@plt+0x3f4>
   11844:	mov	r0, r5
   11848:	bl	11020 <time@plt>
   1184c:	cmp	r6, #0
   11850:	str	r0, [r7, #-4]
   11854:	bne	115f0 <dcngettext@plt+0x324>
   11858:	b	117ac <dcngettext@plt+0x4e0>
   1185c:	sub	r1, r7, #4
   11860:	bl	11c80 <dcngettext@plt+0x9b4>
   11864:	ldr	r3, [r7, #-4]
   11868:	cmp	r3, r7
   1186c:	beq	1157c <dcngettext@plt+0x2b0>
   11870:	vcmpe.f64	d0, #0.0
   11874:	vmrs	APSR_nzcv, fpscr
   11878:	blt	11894 <dcngettext@plt+0x5c8>
   1187c:	vldr	d7, [pc, #28]	; 118a0 <dcngettext@plt+0x5d4>
   11880:	vcmpe.f64	d0, d7
   11884:	vmrs	APSR_nzcv, fpscr
   11888:	vcvtmi.s32.f64	s15, d0
   1188c:	vmovmi	r6, s15
   11890:	bmi	11580 <dcngettext@plt+0x2b4>
   11894:	mvn	r6, #0
   11898:	b	11580 <dcngettext@plt+0x2b4>
   1189c:	nop			; (mov r0, r0)
   118a0:			; <UNDEFINED> instruction: 0xffc00000
   118a4:	ldrshmi	pc, [pc, #255]	; 119ab <dcngettext@plt+0x6df>	; <UNPREDICTABLE>
   118a8:	andeq	r7, r1, ip, ror #11
   118ac:	andeq	r7, r1, r8, ror #11
   118b0:	eorgt	r4, lr, #29360128	; 0x1c00000
   118b4:			; <UNDEFINED> instruction: 0xfffeae80
   118b8:			; <UNDEFINED> instruction: 0x91a2b3c5
   118bc:			; <UNDEFINED> instruction: 0xfffff1f0
   118c0:	stmhi	r8, {r0, r3, r7, fp, pc}
   118c4:	andeq	r9, r2, ip, lsl #3
   118c8:	andeq	r7, r1, r4, lsl r6
   118cc:	andeq	r7, r1, r4, asr #12
   118d0:	andeq	r7, r1, ip, asr r6
   118d4:	andeq	r7, r1, r4, lsl #13
   118d8:	muleq	r1, r0, r6
   118dc:	muleq	r1, ip, r6
   118e0:			; <UNDEFINED> instruction: 0x000176b4
   118e4:	strdeq	r7, [r1], -ip
   118e8:	andeq	r7, r1, r0, lsr #12
   118ec:	andeq	r7, r1, ip, lsr #12
   118f0:	andeq	r7, r1, r4, ror r6
   118f4:	push	{lr}		; (str lr, [sp, #-4]!)
   118f8:	sub	sp, sp, #12
   118fc:	add	r2, sp, #8
   11900:	mov	r4, #0
   11904:	mov	r3, r1
   11908:	str	r4, [r2, #-4]!
   1190c:	mov	r1, sp
   11910:	mov	r6, r0
   11914:	bl	15d00 <dcngettext@plt+0x4a34>
   11918:	subs	r5, r0, #0
   1191c:	beq	1194c <dcngettext@plt+0x680>
   11920:	bl	11194 <__errno_location@plt>
   11924:	mov	r2, r6
   11928:	mov	r1, #3
   1192c:	ldr	r5, [r0]
   11930:	mov	r0, r4
   11934:	bl	15af0 <dcngettext@plt+0x4824>
   11938:	mov	r1, r5
   1193c:	ldr	r2, [pc, #24]	; 1195c <dcngettext@plt+0x690>
   11940:	mov	r3, r0
   11944:	mov	r0, #1
   11948:	bl	110d4 <error@plt>
   1194c:	ldm	sp, {r0, r1}
   11950:	bl	11538 <dcngettext@plt+0x26c>
   11954:	mov	r0, r5
   11958:	bl	11170 <exit@plt>
   1195c:			; <UNDEFINED> instruction: 0x00017ab8
   11960:	subs	r6, r0, #0
   11964:	push	{r7, lr}
   11968:	sub	sp, sp, #56	; 0x38
   1196c:	beq	119a8 <dcngettext@plt+0x6dc>
   11970:	ldr	r3, [pc, #680]	; 11c20 <dcngettext@plt+0x954>
   11974:	mov	r2, #5
   11978:	ldr	r1, [pc, #676]	; 11c24 <dcngettext@plt+0x958>
   1197c:	mov	r0, #0
   11980:	ldr	r4, [r3]
   11984:	bl	11044 <dcgettext@plt>
   11988:	ldr	r3, [pc, #664]	; 11c28 <dcngettext@plt+0x95c>
   1198c:	mov	r1, #1
   11990:	ldr	r3, [r3]
   11994:	mov	r2, r0
   11998:	mov	r0, r4
   1199c:	bl	111dc <__fprintf_chk@plt>
   119a0:	mov	r0, r6
   119a4:	bl	11170 <exit@plt>
   119a8:	mov	r2, #5
   119ac:	ldr	r1, [pc, #632]	; 11c2c <dcngettext@plt+0x960>
   119b0:	bl	11044 <dcgettext@plt>
   119b4:	ldr	r3, [pc, #620]	; 11c28 <dcngettext@plt+0x95c>
   119b8:	ldr	r7, [pc, #624]	; 11c30 <dcngettext@plt+0x964>
   119bc:	ldr	r4, [pc, #624]	; 11c34 <dcngettext@plt+0x968>
   119c0:	ldr	r2, [r3]
   119c4:	mov	r1, r0
   119c8:	mov	r0, #1
   119cc:	bl	111c4 <__printf_chk@plt>
   119d0:	mov	r2, #5
   119d4:	ldr	r1, [pc, #604]	; 11c38 <dcngettext@plt+0x96c>
   119d8:	mov	r0, r6
   119dc:	bl	11044 <dcgettext@plt>
   119e0:	mov	r1, r0
   119e4:	mov	r0, #1
   119e8:	bl	111c4 <__printf_chk@plt>
   119ec:	mov	r2, #5
   119f0:	ldr	r1, [pc, #580]	; 11c3c <dcngettext@plt+0x970>
   119f4:	mov	r0, r6
   119f8:	bl	11044 <dcgettext@plt>
   119fc:	mov	r1, r0
   11a00:	mov	r0, #1
   11a04:	bl	111c4 <__printf_chk@plt>
   11a08:	mov	r2, #5
   11a0c:	ldr	r1, [pc, #556]	; 11c40 <dcngettext@plt+0x974>
   11a10:	mov	r0, r6
   11a14:	bl	11044 <dcgettext@plt>
   11a18:	ldr	r3, [pc, #548]	; 11c44 <dcngettext@plt+0x978>
   11a1c:	ldr	r2, [pc, #548]	; 11c48 <dcngettext@plt+0x97c>
   11a20:	mov	r1, r0
   11a24:	mov	r0, #1
   11a28:	bl	111c4 <__printf_chk@plt>
   11a2c:	mov	r2, #5
   11a30:	ldr	r1, [pc, #532]	; 11c4c <dcngettext@plt+0x980>
   11a34:	mov	r0, r6
   11a38:	bl	11044 <dcgettext@plt>
   11a3c:	ldr	r1, [r7]
   11a40:	bl	10f9c <fputs_unlocked@plt>
   11a44:	mov	r2, #5
   11a48:	ldr	r1, [pc, #512]	; 11c50 <dcngettext@plt+0x984>
   11a4c:	mov	r0, r6
   11a50:	bl	11044 <dcgettext@plt>
   11a54:	ldr	r1, [r7]
   11a58:	bl	10f9c <fputs_unlocked@plt>
   11a5c:	ldm	r4!, {r0, r1, r2, r3}
   11a60:	mov	lr, sp
   11a64:	stmia	lr!, {r0, r1, r2, r3}
   11a68:	ldm	r4!, {r0, r1, r2, r3}
   11a6c:	ldr	ip, [sp]
   11a70:	stmia	lr!, {r0, r1, r2, r3}
   11a74:	cmp	ip, #0
   11a78:	ldm	r4!, {r0, r1, r2, r3}
   11a7c:	stmia	lr!, {r0, r1, r2, r3}
   11a80:	ldm	r4, {r0, r1}
   11a84:	moveq	r4, sp
   11a88:	stm	lr, {r0, r1}
   11a8c:	beq	11abc <dcngettext@plt+0x7f0>
   11a90:	ldr	r5, [pc, #444]	; 11c54 <dcngettext@plt+0x988>
   11a94:	mov	r4, sp
   11a98:	b	11aa8 <dcngettext@plt+0x7dc>
   11a9c:	ldr	ip, [r4, #8]!
   11aa0:	cmp	ip, #0
   11aa4:	beq	11abc <dcngettext@plt+0x7f0>
   11aa8:	mov	r1, ip
   11aac:	mov	r0, r5
   11ab0:	bl	10fc0 <strcmp@plt>
   11ab4:	cmp	r0, #0
   11ab8:	bne	11a9c <dcngettext@plt+0x7d0>
   11abc:	ldr	r4, [r4, #4]
   11ac0:	mov	r2, #5
   11ac4:	cmp	r4, #0
   11ac8:	ldr	r1, [pc, #392]	; 11c58 <dcngettext@plt+0x98c>
   11acc:	beq	11b74 <dcngettext@plt+0x8a8>
   11ad0:	mov	r0, #0
   11ad4:	bl	11044 <dcgettext@plt>
   11ad8:	ldr	r3, [pc, #380]	; 11c5c <dcngettext@plt+0x990>
   11adc:	ldr	r2, [pc, #380]	; 11c60 <dcngettext@plt+0x994>
   11ae0:	mov	r1, r0
   11ae4:	mov	r0, #1
   11ae8:	bl	111c4 <__printf_chk@plt>
   11aec:	mov	r1, #0
   11af0:	mov	r0, #5
   11af4:	bl	11230 <setlocale@plt>
   11af8:	cmp	r0, #0
   11afc:	ldreq	r5, [pc, #336]	; 11c54 <dcngettext@plt+0x988>
   11b00:	beq	11b1c <dcngettext@plt+0x850>
   11b04:	mov	r2, #3
   11b08:	ldr	r1, [pc, #340]	; 11c64 <dcngettext@plt+0x998>
   11b0c:	bl	112a8 <strncmp@plt>
   11b10:	ldr	r5, [pc, #316]	; 11c54 <dcngettext@plt+0x988>
   11b14:	cmp	r0, #0
   11b18:	bne	11c04 <dcngettext@plt+0x938>
   11b1c:	mov	r2, #5
   11b20:	ldr	r1, [pc, #320]	; 11c68 <dcngettext@plt+0x99c>
   11b24:	mov	r0, #0
   11b28:	bl	11044 <dcgettext@plt>
   11b2c:	ldr	r3, [pc, #288]	; 11c54 <dcngettext@plt+0x988>
   11b30:	ldr	r2, [pc, #292]	; 11c5c <dcngettext@plt+0x990>
   11b34:	mov	r1, r0
   11b38:	mov	r0, #1
   11b3c:	bl	111c4 <__printf_chk@plt>
   11b40:	mov	r2, #5
   11b44:	ldr	r1, [pc, #288]	; 11c6c <dcngettext@plt+0x9a0>
   11b48:	mov	r0, #0
   11b4c:	bl	11044 <dcgettext@plt>
   11b50:	ldr	r2, [pc, #280]	; 11c70 <dcngettext@plt+0x9a4>
   11b54:	cmp	r4, r5
   11b58:	ldr	r3, [pc, #276]	; 11c74 <dcngettext@plt+0x9a8>
   11b5c:	movne	r3, r2
   11b60:	mov	r1, r0
   11b64:	mov	r2, r4
   11b68:	mov	r0, #1
   11b6c:	bl	111c4 <__printf_chk@plt>
   11b70:	b	119a0 <dcngettext@plt+0x6d4>
   11b74:	mov	r0, r4
   11b78:	bl	11044 <dcgettext@plt>
   11b7c:	ldr	r3, [pc, #216]	; 11c5c <dcngettext@plt+0x990>
   11b80:	ldr	r2, [pc, #216]	; 11c60 <dcngettext@plt+0x994>
   11b84:	mov	r1, r0
   11b88:	mov	r0, #1
   11b8c:	bl	111c4 <__printf_chk@plt>
   11b90:	mov	r1, r4
   11b94:	mov	r0, #5
   11b98:	bl	11230 <setlocale@plt>
   11b9c:	cmp	r0, #0
   11ba0:	beq	11bb8 <dcngettext@plt+0x8ec>
   11ba4:	mov	r2, #3
   11ba8:	ldr	r1, [pc, #180]	; 11c64 <dcngettext@plt+0x998>
   11bac:	bl	112a8 <strncmp@plt>
   11bb0:	cmp	r0, #0
   11bb4:	bne	11bfc <dcngettext@plt+0x930>
   11bb8:	mov	r2, #5
   11bbc:	ldr	r1, [pc, #164]	; 11c68 <dcngettext@plt+0x99c>
   11bc0:	mov	r0, #0
   11bc4:	bl	11044 <dcgettext@plt>
   11bc8:	ldr	r3, [pc, #132]	; 11c54 <dcngettext@plt+0x988>
   11bcc:	ldr	r2, [pc, #136]	; 11c5c <dcngettext@plt+0x990>
   11bd0:	mov	r4, r3
   11bd4:	mov	r1, r0
   11bd8:	mov	r0, #1
   11bdc:	bl	111c4 <__printf_chk@plt>
   11be0:	ldr	r1, [pc, #132]	; 11c6c <dcngettext@plt+0x9a0>
   11be4:	mov	r2, #5
   11be8:	mov	r0, #0
   11bec:	bl	11044 <dcgettext@plt>
   11bf0:	ldr	r3, [pc, #124]	; 11c74 <dcngettext@plt+0x9a8>
   11bf4:	mov	r1, r0
   11bf8:	b	11b64 <dcngettext@plt+0x898>
   11bfc:	ldr	r5, [pc, #80]	; 11c54 <dcngettext@plt+0x988>
   11c00:	mov	r4, r5
   11c04:	mov	r2, #5
   11c08:	ldr	r1, [pc, #104]	; 11c78 <dcngettext@plt+0x9ac>
   11c0c:	mov	r0, #0
   11c10:	bl	11044 <dcgettext@plt>
   11c14:	ldr	r1, [r7]
   11c18:	bl	10f9c <fputs_unlocked@plt>
   11c1c:	b	11b1c <dcngettext@plt+0x850>
   11c20:	andeq	r9, r2, r8, lsl #3
   11c24:	andeq	r7, r1, r4, asr #13
   11c28:	andeq	r9, r2, r4, lsr #3
   11c2c:	andeq	r7, r1, ip, ror #13
   11c30:	andeq	r9, r2, ip, lsl #3
   11c34:			; <UNDEFINED> instruction: 0x000175b0
   11c38:	andeq	r7, r1, ip, lsl #14
   11c3c:	andeq	r7, r1, r8, asr #15
   11c40:	andeq	r7, r1, ip, lsl r8
   11c44:	andeq	r7, r1, r8, asr r8
   11c48:	andeq	r7, r1, r8, ror #16
   11c4c:	andeq	r7, r1, r8, ror r8
   11c50:	andeq	r7, r1, r8, lsr #17
   11c54:			; <UNDEFINED> instruction: 0x000176bc
   11c58:	andeq	r7, r1, r0, ror #17
   11c5c:	strdeq	r7, [r1], -r8
   11c60:	andeq	r7, r1, r0, lsr #18
   11c64:	andeq	r7, r1, r0, lsr r9
   11c68:	andeq	r7, r1, ip, ror r9
   11c6c:	muleq	r1, r8, r9
   11c70:	andeq	r7, r1, r4, lsr #17
   11c74:	andeq	r7, r1, r0, lsr sl
   11c78:	andeq	r7, r1, r4, lsr r9
   11c7c:	andeq	r0, r0, r0
   11c80:	push	{r4, r5, r6, lr}
   11c84:	mov	r6, r0
   11c88:	ldr	r4, [pc, #96]	; 11cf0 <dcngettext@plt+0xa24>
   11c8c:	mov	r5, r1
   11c90:	ldr	r2, [r4]
   11c94:	cmp	r2, #0
   11c98:	beq	11ccc <dcngettext@plt+0xa00>
   11c9c:	ldr	r2, [r4]
   11ca0:	cmp	r2, #0
   11ca4:	beq	11cb8 <dcngettext@plt+0x9ec>
   11ca8:	mov	r1, r5
   11cac:	mov	r0, r6
   11cb0:	pop	{r4, r5, r6, lr}
   11cb4:	b	1120c <strtod_l@plt>
   11cb8:	cmp	r5, #0
   11cbc:	beq	11ce0 <dcngettext@plt+0xa14>
   11cc0:	str	r6, [r5]
   11cc4:	vldr	d0, [pc, #28]	; 11ce8 <dcngettext@plt+0xa1c>
   11cc8:	pop	{r4, r5, r6, pc}
   11ccc:	ldr	r1, [pc, #32]	; 11cf4 <dcngettext@plt+0xa28>
   11cd0:	ldr	r0, [pc, #32]	; 11cf8 <dcngettext@plt+0xa2c>
   11cd4:	bl	11260 <newlocale@plt>
   11cd8:	str	r0, [r4]
   11cdc:	b	11c9c <dcngettext@plt+0x9d0>
   11ce0:	vldr	d0, [pc]	; 11ce8 <dcngettext@plt+0xa1c>
   11ce4:	pop	{r4, r5, r6, pc}
	...
   11cf0:	muleq	r2, r8, r1
   11cf4:	andeq	r7, r1, r4, lsr #21
   11cf8:			; <UNDEFINED> instruction: 0x00001fbf
   11cfc:	ldr	r3, [pc, #4]	; 11d08 <dcngettext@plt+0xa3c>
   11d00:	str	r0, [r3]
   11d04:	bx	lr
   11d08:	muleq	r2, ip, r1
   11d0c:	ldr	r3, [pc, #4]	; 11d18 <dcngettext@plt+0xa4c>
   11d10:	strb	r0, [r3, #4]
   11d14:	bx	lr
   11d18:	muleq	r2, ip, r1
   11d1c:	ldr	r3, [pc, #192]	; 11de4 <dcngettext@plt+0xb18>
   11d20:	push	{r4, r5, r6, lr}
   11d24:	sub	sp, sp, #8
   11d28:	ldr	r0, [r3]
   11d2c:	bl	16e30 <dcngettext@plt+0x5b64>
   11d30:	cmp	r0, #0
   11d34:	beq	11d58 <dcngettext@plt+0xa8c>
   11d38:	ldr	r4, [pc, #168]	; 11de8 <dcngettext@plt+0xb1c>
   11d3c:	ldrb	r3, [r4, #4]
   11d40:	cmp	r3, #0
   11d44:	beq	11d74 <dcngettext@plt+0xaa8>
   11d48:	bl	11194 <__errno_location@plt>
   11d4c:	ldr	r3, [r0]
   11d50:	cmp	r3, #32
   11d54:	bne	11d74 <dcngettext@plt+0xaa8>
   11d58:	ldr	r3, [pc, #140]	; 11dec <dcngettext@plt+0xb20>
   11d5c:	ldr	r0, [r3]
   11d60:	bl	16e30 <dcngettext@plt+0x5b64>
   11d64:	cmp	r0, #0
   11d68:	bne	11dbc <dcngettext@plt+0xaf0>
   11d6c:	add	sp, sp, #8
   11d70:	pop	{r4, r5, r6, pc}
   11d74:	mov	r2, #5
   11d78:	ldr	r1, [pc, #112]	; 11df0 <dcngettext@plt+0xb24>
   11d7c:	mov	r0, #0
   11d80:	bl	11044 <dcgettext@plt>
   11d84:	ldr	r4, [r4]
   11d88:	cmp	r4, #0
   11d8c:	mov	r5, r0
   11d90:	beq	11dc8 <dcngettext@plt+0xafc>
   11d94:	bl	11194 <__errno_location@plt>
   11d98:	ldr	r6, [r0]
   11d9c:	mov	r0, r4
   11da0:	bl	15adc <dcngettext@plt+0x4810>
   11da4:	mov	r1, r6
   11da8:	str	r5, [sp]
   11dac:	ldr	r2, [pc, #64]	; 11df4 <dcngettext@plt+0xb28>
   11db0:	mov	r3, r0
   11db4:	mov	r0, #0
   11db8:	bl	110d4 <error@plt>
   11dbc:	ldr	r3, [pc, #52]	; 11df8 <dcngettext@plt+0xb2c>
   11dc0:	ldr	r0, [r3]
   11dc4:	bl	10ffc <_exit@plt>
   11dc8:	bl	11194 <__errno_location@plt>
   11dcc:	mov	r3, r5
   11dd0:	ldr	r2, [pc, #36]	; 11dfc <dcngettext@plt+0xb30>
   11dd4:	ldr	r1, [r0]
   11dd8:	mov	r0, r4
   11ddc:	bl	110d4 <error@plt>
   11de0:	b	11dbc <dcngettext@plt+0xaf0>
   11de4:	andeq	r9, r2, ip, lsl #3
   11de8:	muleq	r2, ip, r1
   11dec:	andeq	r9, r2, r8, lsl #3
   11df0:	andeq	r7, r1, r8, lsr #21
   11df4:			; <UNDEFINED> instruction: 0x00017ab4
   11df8:	andeq	r9, r2, r4, lsr r1
   11dfc:			; <UNDEFINED> instruction: 0x00017ab8
   11e00:	push	{r4, r5, lr}
   11e04:	sub	sp, sp, #12
   11e08:	mov	r4, r0
   11e0c:	bl	111d0 <fileno@plt>
   11e10:	cmp	r0, #0
   11e14:	mov	r0, r4
   11e18:	blt	11e94 <dcngettext@plt+0xbc8>
   11e1c:	bl	11110 <__freading@plt>
   11e20:	cmp	r0, #0
   11e24:	bne	11e60 <dcngettext@plt+0xb94>
   11e28:	mov	r0, r4
   11e2c:	bl	11ea0 <dcngettext@plt+0xbd4>
   11e30:	cmp	r0, #0
   11e34:	beq	11e90 <dcngettext@plt+0xbc4>
   11e38:	bl	11194 <__errno_location@plt>
   11e3c:	mov	r5, r0
   11e40:	mov	r0, r4
   11e44:	ldr	r4, [r5]
   11e48:	bl	111e8 <fclose@plt>
   11e4c:	cmp	r4, #0
   11e50:	mvnne	r0, #0
   11e54:	strne	r4, [r5]
   11e58:	add	sp, sp, #12
   11e5c:	pop	{r4, r5, pc}
   11e60:	mov	r0, r4
   11e64:	bl	111d0 <fileno@plt>
   11e68:	mov	r3, #1
   11e6c:	str	r3, [sp]
   11e70:	mov	r2, #0
   11e74:	mov	r3, #0
   11e78:	bl	110a4 <lseek64@plt>
   11e7c:	mvn	r3, #0
   11e80:	mvn	r2, #0
   11e84:	cmp	r1, r3
   11e88:	cmpeq	r0, r2
   11e8c:	bne	11e28 <dcngettext@plt+0xb5c>
   11e90:	mov	r0, r4
   11e94:	add	sp, sp, #12
   11e98:	pop	{r4, r5, lr}
   11e9c:	b	111e8 <fclose@plt>
   11ea0:	push	{r4, lr}
   11ea4:	subs	r4, r0, #0
   11ea8:	sub	sp, sp, #8
   11eac:	beq	11ec8 <dcngettext@plt+0xbfc>
   11eb0:	bl	11110 <__freading@plt>
   11eb4:	cmp	r0, #0
   11eb8:	beq	11ec8 <dcngettext@plt+0xbfc>
   11ebc:	ldr	r3, [r4]
   11ec0:	tst	r3, #256	; 0x100
   11ec4:	bne	11ed8 <dcngettext@plt+0xc0c>
   11ec8:	mov	r0, r4
   11ecc:	add	sp, sp, #8
   11ed0:	pop	{r4, lr}
   11ed4:	b	10fd8 <fflush@plt>
   11ed8:	mov	r3, #1
   11edc:	str	r3, [sp]
   11ee0:	mov	r2, #0
   11ee4:	mov	r3, #0
   11ee8:	mov	r0, r4
   11eec:	bl	13b84 <dcngettext@plt+0x28b8>
   11ef0:	mov	r0, r4
   11ef4:	add	sp, sp, #8
   11ef8:	pop	{r4, lr}
   11efc:	b	10fd8 <fflush@plt>
   11f00:	cmp	r2, #0
   11f04:	bxeq	lr
   11f08:	push	{r4, r5, r6, r7, r8, lr}
   11f0c:	mov	r6, r0
   11f10:	mov	r4, r1
   11f14:	add	r5, r1, r2
   11f18:	bl	11128 <__ctype_tolower_loc@plt>
   11f1c:	mov	r7, r0
   11f20:	ldrb	r2, [r4], #1
   11f24:	ldr	r3, [r7]
   11f28:	mov	r1, r6
   11f2c:	ldr	r0, [r3, r2, lsl #2]
   11f30:	bl	11254 <fputc@plt>
   11f34:	cmp	r4, r5
   11f38:	bne	11f20 <dcngettext@plt+0xc54>
   11f3c:	pop	{r4, r5, r6, r7, r8, pc}
   11f40:	cmp	r2, #0
   11f44:	bxeq	lr
   11f48:	push	{r4, r5, r6, r7, r8, lr}
   11f4c:	mov	r6, r0
   11f50:	mov	r4, r1
   11f54:	add	r5, r1, r2
   11f58:	bl	11134 <__ctype_toupper_loc@plt>
   11f5c:	mov	r7, r0
   11f60:	ldrb	r2, [r4], #1
   11f64:	ldr	r3, [r7]
   11f68:	mov	r1, r6
   11f6c:	ldr	r0, [r3, r2, lsl #2]
   11f70:	bl	11254 <fputc@plt>
   11f74:	cmp	r4, r5
   11f78:	bne	11f60 <dcngettext@plt+0xc94>
   11f7c:	pop	{r4, r5, r6, r7, r8, pc}
   11f80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f84:	sub	sp, sp, #1104	; 0x450
   11f88:	sub	sp, sp, #12
   11f8c:	mov	r4, r2
   11f90:	str	r2, [sp, #32]
   11f94:	mov	r9, r1
   11f98:	str	r3, [sp, #52]	; 0x34
   11f9c:	mov	sl, r0
   11fa0:	bl	11194 <__errno_location@plt>
   11fa4:	ldr	r3, [r4, #40]	; 0x28
   11fa8:	ldr	r2, [r4, #8]
   11fac:	mov	r1, r3
   11fb0:	ldr	r3, [pc, #4024]	; 12f70 <dcngettext@plt+0x1ca4>
   11fb4:	mov	ip, r2
   11fb8:	str	r2, [sp, #48]	; 0x30
   11fbc:	subs	r2, r1, #0
   11fc0:	moveq	r2, r3
   11fc4:	cmp	ip, #12
   11fc8:	str	r2, [sp, #56]	; 0x38
   11fcc:	ldr	r7, [sp, #1156]	; 0x484
   11fd0:	ldr	r3, [r0]
   11fd4:	str	r0, [sp, #44]	; 0x2c
   11fd8:	str	r3, [sp, #60]	; 0x3c
   11fdc:	ble	12454 <dcngettext@plt+0x1188>
   11fe0:	sub	r3, ip, #12
   11fe4:	str	r3, [sp, #48]	; 0x30
   11fe8:	ldrb	r3, [r9]
   11fec:	cmp	r3, #0
   11ff0:	beq	1363c <dcngettext@plt+0x2370>
   11ff4:	ldr	fp, [pc, #3960]	; 12f74 <dcngettext@plt+0x1ca8>
   11ff8:	mov	r2, #0
   11ffc:	str	r2, [sp, #28]
   12000:	cmp	r3, #37	; 0x25
   12004:	beq	120c0 <dcngettext@plt+0xdf4>
   12008:	bic	r4, r7, r7, asr #31
   1200c:	ldr	r3, [sp, #28]
   12010:	cmp	r4, #1
   12014:	movcs	r6, r4
   12018:	movcc	r6, #1
   1201c:	mvn	r3, r3
   12020:	cmp	r6, r3
   12024:	bcs	1209c <dcngettext@plt+0xdd0>
   12028:	cmp	sl, #0
   1202c:	beq	12068 <dcngettext@plt+0xd9c>
   12030:	cmp	r4, #1
   12034:	subgt	r4, r4, #1
   12038:	movgt	r7, #0
   1203c:	movgt	r5, #32
   12040:	ble	1205c <dcngettext@plt+0xd90>
   12044:	add	r7, r7, #1
   12048:	mov	r1, sl
   1204c:	mov	r0, r5
   12050:	bl	11254 <fputc@plt>
   12054:	cmp	r4, r7
   12058:	bne	12044 <dcngettext@plt+0xd78>
   1205c:	mov	r1, sl
   12060:	ldrb	r0, [r9]
   12064:	bl	11254 <fputc@plt>
   12068:	ldr	r3, [sp, #28]
   1206c:	mov	r4, r9
   12070:	add	r3, r3, r6
   12074:	str	r3, [sp, #28]
   12078:	ldrb	r3, [r4, #1]
   1207c:	add	r9, r4, #1
   12080:	mvn	r7, #0
   12084:	cmp	r3, #0
   12088:	bne	12000 <dcngettext@plt+0xd34>
   1208c:	ldr	r3, [sp, #44]	; 0x2c
   12090:	ldr	r2, [sp, #60]	; 0x3c
   12094:	str	r2, [r3]
   12098:	b	120b0 <dcngettext@plt+0xde4>
   1209c:	ldr	r2, [sp, #44]	; 0x2c
   120a0:	mov	r3, #34	; 0x22
   120a4:	str	r3, [r2]
   120a8:	mov	r3, #0
   120ac:	str	r3, [sp, #28]
   120b0:	ldr	r0, [sp, #28]
   120b4:	add	sp, sp, #1104	; 0x450
   120b8:	add	sp, sp, #12
   120bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120c0:	mov	r6, #0
   120c4:	ldr	r3, [sp, #52]	; 0x34
   120c8:	mov	r5, r6
   120cc:	mov	r4, r9
   120d0:	str	r3, [sp, #40]	; 0x28
   120d4:	ldrb	r1, [r4, #1]!
   120d8:	sub	r3, r1, #35	; 0x23
   120dc:	mov	r0, r1
   120e0:	cmp	r3, #60	; 0x3c
   120e4:	ldrls	pc, [pc, r3, lsl #2]
   120e8:	b	121fc <dcngettext@plt+0xf30>
   120ec:	strdeq	r2, [r1], -r4
   120f0:	strdeq	r2, [r1], -ip
   120f4:	strdeq	r2, [r1], -ip
   120f8:	strdeq	r2, [r1], -ip
   120fc:	strdeq	r2, [r1], -ip
   12100:	strdeq	r2, [r1], -ip
   12104:	strdeq	r2, [r1], -ip
   12108:	strdeq	r2, [r1], -ip
   1210c:	andeq	r2, r1, ip, ror #3
   12110:	strdeq	r2, [r1], -ip
   12114:	andeq	r2, r1, ip, ror #3
   12118:	strdeq	r2, [r1], -ip
   1211c:	strdeq	r2, [r1], -ip
   12120:	andeq	r2, r1, ip, ror #3
   12124:	strdeq	r2, [r1], -ip
   12128:	strdeq	r2, [r1], -ip
   1212c:	strdeq	r2, [r1], -ip
   12130:	strdeq	r2, [r1], -ip
   12134:	strdeq	r2, [r1], -ip
   12138:	strdeq	r2, [r1], -ip
   1213c:	strdeq	r2, [r1], -ip
   12140:	strdeq	r2, [r1], -ip
   12144:	strdeq	r2, [r1], -ip
   12148:	strdeq	r2, [r1], -ip
   1214c:	strdeq	r2, [r1], -ip
   12150:	strdeq	r2, [r1], -ip
   12154:	strdeq	r2, [r1], -ip
   12158:	strdeq	r2, [r1], -ip
   1215c:	strdeq	r2, [r1], -ip
   12160:	strdeq	r2, [r1], -ip
   12164:	strdeq	r2, [r1], -ip
   12168:	strdeq	r2, [r1], -ip
   1216c:	strdeq	r2, [r1], -ip
   12170:	strdeq	r2, [r1], -ip
   12174:	strdeq	r2, [r1], -ip
   12178:	strdeq	r2, [r1], -ip
   1217c:	strdeq	r2, [r1], -ip
   12180:	strdeq	r2, [r1], -ip
   12184:	strdeq	r2, [r1], -ip
   12188:	strdeq	r2, [r1], -ip
   1218c:	strdeq	r2, [r1], -ip
   12190:	strdeq	r2, [r1], -ip
   12194:	strdeq	r2, [r1], -ip
   12198:	strdeq	r2, [r1], -ip
   1219c:	strdeq	r2, [r1], -ip
   121a0:	strdeq	r2, [r1], -ip
   121a4:	strdeq	r2, [r1], -ip
   121a8:	strdeq	r2, [r1], -ip
   121ac:	strdeq	r2, [r1], -ip
   121b0:	strdeq	r2, [r1], -ip
   121b4:	strdeq	r2, [r1], -ip
   121b8:	strdeq	r2, [r1], -ip
   121bc:	strdeq	r2, [r1], -ip
   121c0:	strdeq	r2, [r1], -ip
   121c4:	strdeq	r2, [r1], -ip
   121c8:	strdeq	r2, [r1], -ip
   121cc:	strdeq	r2, [r1], -ip
   121d0:	strdeq	r2, [r1], -ip
   121d4:	strdeq	r2, [r1], -ip
   121d8:	andeq	r2, r1, r0, ror #3
   121dc:	andeq	r2, r1, ip, ror #3
   121e0:	mov	r3, #1
   121e4:	str	r3, [sp, #40]	; 0x28
   121e8:	b	120d4 <dcngettext@plt+0xe08>
   121ec:	mov	r5, r1
   121f0:	b	120d4 <dcngettext@plt+0xe08>
   121f4:	mov	r6, #1
   121f8:	b	120d4 <dcngettext@plt+0xe08>
   121fc:	sub	r3, r1, #48	; 0x30
   12200:	cmp	r3, #9
   12204:	bhi	12248 <dcngettext@plt+0xf7c>
   12208:	mov	r7, #0
   1220c:	mvn	r8, #-2147483648	; 0x80000000
   12210:	cmp	r7, #0
   12214:	blt	12544 <dcngettext@plt+0x1278>
   12218:	ldr	r3, [pc, #3416]	; 12f78 <dcngettext@plt+0x1cac>
   1221c:	cmp	r7, r3
   12220:	ble	12560 <dcngettext@plt+0x1294>
   12224:	mov	r3, r4
   12228:	ldrb	r1, [r3, #1]
   1222c:	add	r4, r3, #1
   12230:	mov	r3, r4
   12234:	sub	r2, r1, #48	; 0x30
   12238:	cmp	r2, #9
   1223c:	bls	12228 <dcngettext@plt+0xf5c>
   12240:	mov	r0, r1
   12244:	mvn	r7, #-2147483648	; 0x80000000
   12248:	cmp	r1, #69	; 0x45
   1224c:	beq	12468 <dcngettext@plt+0x119c>
   12250:	cmp	r1, #79	; 0x4f
   12254:	movne	r8, #0
   12258:	beq	12468 <dcngettext@plt+0x119c>
   1225c:	cmp	r1, #122	; 0x7a
   12260:	ldrls	pc, [pc, r1, lsl #2]
   12264:	b	12480 <dcngettext@plt+0x11b4>
   12268:	andeq	r2, r1, ip, ror r4
   1226c:	andeq	r2, r1, r0, lsl #9
   12270:	andeq	r2, r1, r0, lsl #9
   12274:	andeq	r2, r1, r0, lsl #9
   12278:	andeq	r2, r1, r0, lsl #9
   1227c:	andeq	r2, r1, r0, lsl #9
   12280:	andeq	r2, r1, r0, lsl #9
   12284:	andeq	r2, r1, r0, lsl #9
   12288:	andeq	r2, r1, r0, lsl #9
   1228c:	andeq	r2, r1, r0, lsl #9
   12290:	andeq	r2, r1, r0, lsl #9
   12294:	andeq	r2, r1, r0, lsl #9
   12298:	andeq	r2, r1, r0, lsl #9
   1229c:	andeq	r2, r1, r0, lsl #9
   122a0:	andeq	r2, r1, r0, lsl #9
   122a4:	andeq	r2, r1, r0, lsl #9
   122a8:	andeq	r2, r1, r0, lsl #9
   122ac:	andeq	r2, r1, r0, lsl #9
   122b0:	andeq	r2, r1, r0, lsl #9
   122b4:	andeq	r2, r1, r0, lsl #9
   122b8:	andeq	r2, r1, r0, lsl #9
   122bc:	andeq	r2, r1, r0, lsl #9
   122c0:	andeq	r2, r1, r0, lsl #9
   122c4:	andeq	r2, r1, r0, lsl #9
   122c8:	andeq	r2, r1, r0, lsl #9
   122cc:	andeq	r2, r1, r0, lsl #9
   122d0:	andeq	r2, r1, r0, lsl #9
   122d4:	andeq	r2, r1, r0, lsl #9
   122d8:	andeq	r2, r1, r0, lsl #9
   122dc:	andeq	r2, r1, r0, lsl #9
   122e0:	andeq	r2, r1, r0, lsl #9
   122e4:	andeq	r2, r1, r0, lsl #9
   122e8:	andeq	r2, r1, r0, lsl #9
   122ec:	andeq	r2, r1, r0, lsl #9
   122f0:	andeq	r2, r1, r0, lsl #9
   122f4:	andeq	r2, r1, r0, lsl #9
   122f8:	andeq	r2, r1, r0, lsl #9
   122fc:	andeq	r3, r1, ip, asr #4
   12300:	andeq	r2, r1, r0, lsl #9
   12304:	andeq	r2, r1, r0, lsl #9
   12308:	andeq	r2, r1, r0, lsl #9
   1230c:	andeq	r2, r1, r0, lsl #9
   12310:	andeq	r2, r1, r0, lsl #9
   12314:	andeq	r2, r1, r0, lsl #9
   12318:	andeq	r2, r1, r0, lsl #9
   1231c:	andeq	r2, r1, r0, lsl #9
   12320:	andeq	r2, r1, r0, lsl #9
   12324:	andeq	r2, r1, r0, lsl #9
   12328:	andeq	r2, r1, r0, lsl #9
   1232c:	andeq	r2, r1, r0, lsl #9
   12330:	andeq	r2, r1, r0, lsl #9
   12334:	andeq	r2, r1, r0, lsl #9
   12338:	andeq	r2, r1, r0, lsl #9
   1233c:	andeq	r2, r1, r0, lsl #9
   12340:	andeq	r2, r1, r0, lsl #9
   12344:	andeq	r2, r1, r0, lsl #9
   12348:	andeq	r2, r1, r0, lsl #9
   1234c:	andeq	r2, r1, r0, lsl #9
   12350:	andeq	r3, r1, r8, ror #6
   12354:	andeq	r2, r1, r0, lsl #9
   12358:	andeq	r2, r1, r0, lsl #9
   1235c:	andeq	r2, r1, r0, lsl #9
   12360:	andeq	r2, r1, r0, lsl #9
   12364:	andeq	r2, r1, r0, lsl #9
   12368:	andeq	r2, r1, r0, lsl #9
   1236c:	andeq	r2, r1, r0, asr #15
   12370:	andeq	r2, r1, r8, lsl #12
   12374:	andeq	r3, r1, r4, ror r4
   12378:	andeq	r2, r1, r4, ror #29
   1237c:	andeq	r2, r1, r0, lsl #9
   12380:	ldrdeq	r2, [r1], -r8
   12384:	andeq	r2, r1, r8, ror #24
   12388:	andeq	r2, r1, r0, asr ip
   1238c:	andeq	r2, r1, ip, lsr ip
   12390:	andeq	r2, r1, r0, lsl #9
   12394:	andeq	r2, r1, r0, lsl #9
   12398:	andeq	r2, r1, r0, lsl #9
   1239c:	andeq	r2, r1, r4, lsr #24
   123a0:	andeq	r2, r1, r0, lsl pc
   123a4:	andeq	r2, r1, r0, lsl #9
   123a8:	andeq	r3, r1, ip, lsl #11
   123ac:	andeq	r2, r1, r0, lsl #9
   123b0:	andeq	r3, r1, r0, ror #7
   123b4:	andeq	r3, r1, r8, asr #7
   123b8:	andeq	r3, r1, r0, lsr #6
   123bc:	andeq	r3, r1, r8, ror #5
   123c0:	andeq	r2, r1, r8, ror #24
   123c4:	andeq	r3, r1, ip, lsl #7
   123c8:	andeq	r2, r1, r8, lsl #15
   123cc:	andeq	r3, r1, r0, lsl r4
   123d0:	strdeq	r3, [r1], -ip
   123d4:	andeq	r2, r1, r0, lsl #9
   123d8:	andeq	r2, r1, r0, lsl #9
   123dc:	andeq	r2, r1, r0, lsl #9
   123e0:	andeq	r2, r1, r0, lsl #9
   123e4:	andeq	r2, r1, r0, lsl #9
   123e8:	andeq	r2, r1, r0, lsl #9
   123ec:	andeq	r2, r1, r0, asr #15
   123f0:	muleq	r1, r0, r1
   123f4:	andeq	r2, r1, r8, lsl #15
   123f8:	strheq	r3, [r1], -ip
   123fc:	muleq	r1, ip, r0
   12400:	andeq	r2, r1, r0, lsl #9
   12404:	andeq	r2, r1, r8, ror #24
   12408:	muleq	r1, r0, r1
   1240c:	andeq	r2, r1, r0, lsl #9
   12410:	andeq	r3, r1, ip, lsr #6
   12414:	strdeq	r3, [r1], -ip
   12418:	andeq	r3, r1, ip, ror #7
   1241c:	andeq	r2, r1, r8, ror #23
   12420:	andeq	r2, r1, r0, ror #19
   12424:	andeq	r2, r1, r0, lsl #9
   12428:	andeq	r3, r1, ip, lsr #4
   1242c:	strdeq	r3, [r1], -r8
   12430:	andeq	r2, r1, ip, lsl r6
   12434:	strdeq	r2, [r1], -r8
   12438:	andeq	r2, r1, ip, asr fp
   1243c:	andeq	r2, r1, r8, ror sl
   12440:	andeq	r2, r1, r0, lsl #9
   12444:	strdeq	r2, [r1], -r8
   12448:	andeq	r2, r1, r8, lsl #15
   1244c:			; <UNDEFINED> instruction: 0x000131b4
   12450:	ldrdeq	r3, [r1], -r4
   12454:	ldr	r2, [sp, #48]	; 0x30
   12458:	subs	r3, r2, #0
   1245c:	moveq	r3, #12
   12460:	str	r3, [sp, #48]	; 0x30
   12464:	b	11fe8 <dcngettext@plt+0xd1c>
   12468:	ldrb	r1, [r4, #1]
   1246c:	mov	r8, r0
   12470:	add	r4, r4, #1
   12474:	mov	r0, r1
   12478:	b	1225c <dcngettext@plt+0xf90>
   1247c:	sub	r4, r4, #1
   12480:	subs	r3, r5, #45	; 0x2d
   12484:	movne	r3, #1
   12488:	cmp	r7, #0
   1248c:	movlt	r3, #0
   12490:	cmp	r3, #0
   12494:	sub	r6, r4, r9
   12498:	add	r6, r6, #1
   1249c:	moveq	r7, #0
   124a0:	cmp	r6, r7
   124a4:	movcs	r3, r6
   124a8:	movcc	r3, r7
   124ac:	mov	r2, r3
   124b0:	str	r3, [sp, #36]	; 0x24
   124b4:	ldr	r3, [sp, #28]
   124b8:	mvn	r3, r3
   124bc:	cmp	r2, r3
   124c0:	bcs	1209c <dcngettext@plt+0xdd0>
   124c4:	cmp	sl, #0
   124c8:	beq	12530 <dcngettext@plt+0x1264>
   124cc:	cmp	r6, r7
   124d0:	bcs	12514 <dcngettext@plt+0x1248>
   124d4:	cmp	r5, #43	; 0x2b
   124d8:	cmpne	r5, #48	; 0x30
   124dc:	moveq	r5, #1
   124e0:	movne	r5, #0
   124e4:	sub	r7, r7, r6
   124e8:	beq	1275c <dcngettext@plt+0x1490>
   124ec:	cmp	r7, #0
   124f0:	movne	r8, r5
   124f4:	movne	r5, #32
   124f8:	beq	12514 <dcngettext@plt+0x1248>
   124fc:	add	r8, r8, #1
   12500:	mov	r1, sl
   12504:	mov	r0, r5
   12508:	bl	11254 <fputc@plt>
   1250c:	cmp	r7, r8
   12510:	bne	124fc <dcngettext@plt+0x1230>
   12514:	ldr	r3, [sp, #40]	; 0x28
   12518:	cmp	r3, #0
   1251c:	beq	12744 <dcngettext@plt+0x1478>
   12520:	mov	r2, r6
   12524:	mov	r1, r9
   12528:	mov	r0, sl
   1252c:	bl	11f40 <dcngettext@plt+0xc74>
   12530:	ldr	r3, [sp, #28]
   12534:	ldr	r2, [sp, #36]	; 0x24
   12538:	add	r3, r3, r2
   1253c:	str	r3, [sp, #28]
   12540:	b	12078 <dcngettext@plt+0xdac>
   12544:	cmn	r7, #1
   12548:	beq	125dc <dcngettext@plt+0x1310>
   1254c:	mov	r1, r7
   12550:	mov	r0, #-2147483648	; 0x80000000
   12554:	bl	172d8 <dcngettext@plt+0x600c>
   12558:	cmp	r0, #9
   1255c:	ble	12224 <dcngettext@plt+0xf58>
   12560:	ldrb	r0, [r4]
   12564:	add	r7, r7, r7, lsl #2
   12568:	cmp	r0, #47	; 0x2f
   1256c:	lsl	r3, r7, #1
   12570:	mov	r1, r3
   12574:	ble	125f4 <dcngettext@plt+0x1328>
   12578:	cmp	r3, #0
   1257c:	blt	125b8 <dcngettext@plt+0x12ec>
   12580:	sub	r2, r0, #48	; 0x30
   12584:	sub	r2, r8, r2
   12588:	cmp	r3, r2
   1258c:	movle	r2, #0
   12590:	movgt	r2, #1
   12594:	cmp	r2, #0
   12598:	beq	125b8 <dcngettext@plt+0x12ec>
   1259c:	ldrb	r1, [r4, #1]
   125a0:	add	r3, r4, #1
   125a4:	sub	r2, r1, #48	; 0x30
   125a8:	cmp	r2, #9
   125ac:	bls	12228 <dcngettext@plt+0xf5c>
   125b0:	mov	r4, r3
   125b4:	b	12240 <dcngettext@plt+0xf74>
   125b8:	ldrb	r1, [r4, #1]
   125bc:	add	r3, r0, r3
   125c0:	sub	r7, r3, #48	; 0x30
   125c4:	sub	r3, r1, #48	; 0x30
   125c8:	cmp	r3, #9
   125cc:	add	r4, r4, #1
   125d0:	bls	12210 <dcngettext@plt+0xf44>
   125d4:	mov	r0, r1
   125d8:	b	12248 <dcngettext@plt+0xf7c>
   125dc:	ldrb	r0, [r4]
   125e0:	cmp	r0, #47	; 0x2f
   125e4:	mvngt	r3, #9
   125e8:	bgt	125b8 <dcngettext@plt+0x12ec>
   125ec:	mvn	r1, #9
   125f0:	mov	r3, r1
   125f4:	rsb	r2, r0, #-2147483600	; 0x80000030
   125f8:	cmp	r2, r1
   125fc:	movle	r2, #0
   12600:	movgt	r2, #1
   12604:	b	12594 <dcngettext@plt+0x12c8>
   12608:	cmp	r8, #69	; 0x45
   1260c:	beq	12480 <dcngettext@plt+0x11b4>
   12610:	cmp	r6, #0
   12614:	beq	12620 <dcngettext@plt+0x1354>
   12618:	str	r6, [sp, #40]	; 0x28
   1261c:	mov	r6, #0
   12620:	cmp	r8, #0
   12624:	mov	r2, #32
   12628:	mov	r3, #37	; 0x25
   1262c:	strb	r2, [sp, #72]	; 0x48
   12630:	strb	r3, [sp, #73]	; 0x49
   12634:	addeq	r9, sp, #72	; 0x48
   12638:	addeq	ip, sp, #74	; 0x4a
   1263c:	bne	12734 <dcngettext@plt+0x1468>
   12640:	mov	r8, #0
   12644:	strb	r1, [ip]
   12648:	mov	r2, r9
   1264c:	add	r0, sp, #88	; 0x58
   12650:	ldr	r3, [sp, #32]
   12654:	mov	r1, #1024	; 0x400
   12658:	strb	r8, [ip, #1]
   1265c:	bl	11104 <strftime@plt>
   12660:	cmp	r0, #0
   12664:	beq	12078 <dcngettext@plt+0xdac>
   12668:	cmp	r7, r8
   1266c:	movlt	r3, #0
   12670:	movge	r3, #1
   12674:	cmp	r5, #45	; 0x2d
   12678:	moveq	r3, #0
   1267c:	cmp	r3, r8
   12680:	sub	r9, r0, #1
   12684:	moveq	r7, r8
   12688:	cmp	r9, r7
   1268c:	movcs	r3, r9
   12690:	movcc	r3, r7
   12694:	mov	r2, r3
   12698:	str	r3, [sp, #36]	; 0x24
   1269c:	ldr	r3, [sp, #28]
   126a0:	mvn	r3, r3
   126a4:	cmp	r2, r3
   126a8:	bcs	1209c <dcngettext@plt+0xdd0>
   126ac:	cmp	sl, #0
   126b0:	beq	12530 <dcngettext@plt+0x1264>
   126b4:	cmp	r9, r7
   126b8:	bcs	126f8 <dcngettext@plt+0x142c>
   126bc:	cmp	r5, #43	; 0x2b
   126c0:	cmpne	r5, #48	; 0x30
   126c4:	moveq	r5, #1
   126c8:	movne	r5, #0
   126cc:	sub	r7, r7, r9
   126d0:	bne	12794 <dcngettext@plt+0x14c8>
   126d4:	cmp	r7, #0
   126d8:	beq	126f8 <dcngettext@plt+0x142c>
   126dc:	mov	r5, #48	; 0x30
   126e0:	add	r8, r8, #1
   126e4:	mov	r1, sl
   126e8:	mov	r0, r5
   126ec:	bl	11254 <fputc@plt>
   126f0:	cmp	r7, r8
   126f4:	bne	126e0 <dcngettext@plt+0x1414>
   126f8:	cmp	r6, #0
   126fc:	bne	13628 <dcngettext@plt+0x235c>
   12700:	ldr	r3, [sp, #40]	; 0x28
   12704:	cmp	r3, #0
   12708:	beq	13610 <dcngettext@plt+0x2344>
   1270c:	mov	r2, r9
   12710:	add	r1, sp, #89	; 0x59
   12714:	mov	r0, sl
   12718:	bl	11f40 <dcngettext@plt+0xc74>
   1271c:	b	12530 <dcngettext@plt+0x1264>
   12720:	mov	r6, #0
   12724:	mov	r2, #32
   12728:	mov	r3, #37	; 0x25
   1272c:	strb	r2, [sp, #72]	; 0x48
   12730:	strb	r3, [sp, #73]	; 0x49
   12734:	add	r9, sp, #72	; 0x48
   12738:	strb	r8, [sp, #74]	; 0x4a
   1273c:	add	ip, r9, #3
   12740:	b	12640 <dcngettext@plt+0x1374>
   12744:	mov	r1, r6
   12748:	mov	r0, r9
   1274c:	mov	r3, sl
   12750:	mov	r2, #1
   12754:	bl	11098 <fwrite@plt>
   12758:	b	12530 <dcngettext@plt+0x1264>
   1275c:	cmp	r7, #0
   12760:	beq	12514 <dcngettext@plt+0x1248>
   12764:	mov	r8, #0
   12768:	mov	r5, #48	; 0x30
   1276c:	add	r8, r8, #1
   12770:	mov	r1, sl
   12774:	mov	r0, r5
   12778:	bl	11254 <fputc@plt>
   1277c:	cmp	r7, r8
   12780:	bne	1276c <dcngettext@plt+0x14a0>
   12784:	b	12514 <dcngettext@plt+0x1248>
   12788:	cmp	r8, #79	; 0x4f
   1278c:	bne	1261c <dcngettext@plt+0x1350>
   12790:	b	12480 <dcngettext@plt+0x11b4>
   12794:	cmp	r7, #0
   12798:	movne	r8, r5
   1279c:	movne	r5, #32
   127a0:	beq	126f8 <dcngettext@plt+0x142c>
   127a4:	add	r8, r8, #1
   127a8:	mov	r1, sl
   127ac:	mov	r0, r5
   127b0:	bl	11254 <fputc@plt>
   127b4:	cmp	r7, r8
   127b8:	bne	127a4 <dcngettext@plt+0x14d8>
   127bc:	b	126f8 <dcngettext@plt+0x142c>
   127c0:	cmp	r8, #0
   127c4:	bne	12480 <dcngettext@plt+0x11b4>
   127c8:	ldr	r3, [sp, #40]	; 0x28
   127cc:	cmp	r6, #0
   127d0:	moveq	r6, r3
   127d4:	mov	r2, #32
   127d8:	mov	r3, #37	; 0x25
   127dc:	add	r9, sp, #72	; 0x48
   127e0:	str	r6, [sp, #40]	; 0x28
   127e4:	strb	r2, [sp, #72]	; 0x48
   127e8:	strb	r3, [sp, #73]	; 0x49
   127ec:	add	ip, r9, #2
   127f0:	mov	r6, #0
   127f4:	b	12640 <dcngettext@plt+0x1374>
   127f8:	ldr	lr, [sp, #32]
   127fc:	add	ip, sp, #88	; 0x58
   12800:	mvn	r6, #0
   12804:	ldm	lr!, {r0, r1, r2, r3}
   12808:	stmia	ip!, {r0, r1, r2, r3}
   1280c:	ldm	lr!, {r0, r1, r2, r3}
   12810:	stmia	ip!, {r0, r1, r2, r3}
   12814:	ldm	lr, {r0, r1, r2}
   12818:	str	r6, [sp, #116]	; 0x74
   1281c:	stm	ip, {r0, r1, r2}
   12820:	add	r1, sp, #88	; 0x58
   12824:	ldr	r0, [sp, #1164]	; 0x48c
   12828:	bl	161d0 <dcngettext@plt+0x4f04>
   1282c:	ldr	r3, [sp, #116]	; 0x74
   12830:	cmp	r3, #0
   12834:	blt	13848 <dcngettext@plt+0x257c>
   12838:	add	r9, sp, #72	; 0x48
   1283c:	add	lr, r9, #13
   12840:	mov	r1, r0
   12844:	lsr	r3, r0, #31
   12848:	str	r3, [sp, #36]	; 0x24
   1284c:	smull	r2, r3, fp, r1
   12850:	asr	ip, r1, #31
   12854:	rsb	ip, ip, r3, asr #2
   12858:	cmp	r0, #0
   1285c:	add	r3, ip, ip, lsl #2
   12860:	mov	r6, lr
   12864:	sub	r3, r1, r3, lsl #1
   12868:	add	r2, r3, #48	; 0x30
   1286c:	rsblt	r3, r3, #48	; 0x30
   12870:	uxtb	r2, r2
   12874:	uxtblt	r2, r3
   12878:	cmp	ip, #0
   1287c:	mov	r1, ip
   12880:	strb	r2, [lr], #-1
   12884:	bne	1284c <dcngettext@plt+0x1580>
   12888:	mov	lr, #1
   1288c:	cmp	r5, #0
   12890:	moveq	r2, #1
   12894:	moveq	r5, #48	; 0x30
   12898:	beq	128a4 <dcngettext@plt+0x15d8>
   1289c:	subs	r2, r5, #45	; 0x2d
   128a0:	movne	r2, #1
   128a4:	ldr	r3, [sp, #36]	; 0x24
   128a8:	cmp	r7, #0
   128ac:	movlt	r7, lr
   128b0:	cmp	r3, #0
   128b4:	bne	13594 <dcngettext@plt+0x22c8>
   128b8:	cmp	ip, #0
   128bc:	beq	135b8 <dcngettext@plt+0x22ec>
   128c0:	mov	r3, #43	; 0x2b
   128c4:	str	r3, [sp, #36]	; 0x24
   128c8:	add	r9, r9, #14
   128cc:	sub	r3, r9, r6
   128d0:	sub	r8, r7, #1
   128d4:	sub	r8, r8, r3
   128d8:	str	r3, [sp, #64]	; 0x40
   128dc:	cmp	r8, #0
   128e0:	movle	r3, #0
   128e4:	andgt	r3, r2, #1
   128e8:	cmp	r3, #0
   128ec:	moveq	r8, #0
   128f0:	cmp	r5, #95	; 0x5f
   128f4:	beq	13644 <dcngettext@plt+0x2378>
   128f8:	ldr	r3, [sp, #28]
   128fc:	cmn	r3, #3
   12900:	bhi	1209c <dcngettext@plt+0xdd0>
   12904:	cmp	sl, #0
   12908:	beq	12920 <dcngettext@plt+0x1654>
   1290c:	ldr	r0, [sp, #36]	; 0x24
   12910:	mov	r1, sl
   12914:	str	r2, [sp, #68]	; 0x44
   12918:	bl	11254 <fputc@plt>
   1291c:	ldr	r2, [sp, #68]	; 0x44
   12920:	ldr	r3, [sp, #28]
   12924:	sub	r7, r7, #1
   12928:	cmp	r7, #0
   1292c:	movlt	r2, #0
   12930:	andge	r2, r2, #1
   12934:	add	r3, r3, #1
   12938:	cmp	r2, #0
   1293c:	str	r3, [sp, #28]
   12940:	ldr	r9, [sp, #64]	; 0x40
   12944:	bne	1294c <dcngettext@plt+0x1680>
   12948:	mov	r7, r2
   1294c:	cmp	r7, r9
   12950:	movcs	r3, r7
   12954:	movcc	r3, r9
   12958:	mov	r2, r3
   1295c:	str	r3, [sp, #36]	; 0x24
   12960:	ldr	r3, [sp, #28]
   12964:	mvn	r3, r3
   12968:	cmp	r2, r3
   1296c:	bcs	1209c <dcngettext@plt+0xdd0>
   12970:	cmp	sl, #0
   12974:	beq	12530 <dcngettext@plt+0x1264>
   12978:	cmp	r7, r9
   1297c:	bls	129c0 <dcngettext@plt+0x16f4>
   12980:	cmp	r5, #43	; 0x2b
   12984:	cmpne	r5, #48	; 0x30
   12988:	moveq	r5, #1
   1298c:	movne	r5, #0
   12990:	sub	r7, r7, r9
   12994:	beq	135e4 <dcngettext@plt+0x2318>
   12998:	cmp	r7, #0
   1299c:	movne	r8, r5
   129a0:	movne	r5, #32
   129a4:	beq	129c0 <dcngettext@plt+0x16f4>
   129a8:	add	r8, r8, #1
   129ac:	mov	r1, sl
   129b0:	mov	r0, r5
   129b4:	bl	11254 <fputc@plt>
   129b8:	cmp	r7, r8
   129bc:	bne	129a8 <dcngettext@plt+0x16dc>
   129c0:	ldr	r3, [sp, #40]	; 0x28
   129c4:	cmp	r3, #0
   129c8:	beq	135a0 <dcngettext@plt+0x22d4>
   129cc:	mov	r2, r9
   129d0:	mov	r1, r6
   129d4:	mov	r0, sl
   129d8:	bl	11f40 <dcngettext@plt+0xc74>
   129dc:	b	12530 <dcngettext@plt+0x1264>
   129e0:	mvn	r3, r7
   129e4:	cmp	r5, #45	; 0x2d
   129e8:	lsr	r3, r3, #31
   129ec:	moveq	r3, #0
   129f0:	cmp	r3, #0
   129f4:	beq	13864 <dcngettext@plt+0x2598>
   129f8:	cmp	r7, #1
   129fc:	movcs	r6, r7
   12a00:	movcc	r6, #1
   12a04:	ldr	r3, [sp, #28]
   12a08:	mvn	r3, r3
   12a0c:	cmp	r3, r6
   12a10:	bls	1209c <dcngettext@plt+0xdd0>
   12a14:	cmp	sl, #0
   12a18:	beq	12a68 <dcngettext@plt+0x179c>
   12a1c:	cmp	r7, #1
   12a20:	bls	12a5c <dcngettext@plt+0x1790>
   12a24:	cmp	r5, #43	; 0x2b
   12a28:	cmpne	r5, #48	; 0x30
   12a2c:	moveq	r5, #1
   12a30:	movne	r5, #0
   12a34:	sub	r7, r7, #1
   12a38:	bne	13774 <dcngettext@plt+0x24a8>
   12a3c:	mov	r5, #0
   12a40:	mov	r8, #48	; 0x30
   12a44:	add	r5, r5, #1
   12a48:	mov	r1, sl
   12a4c:	mov	r0, r8
   12a50:	bl	11254 <fputc@plt>
   12a54:	cmp	r7, r5
   12a58:	bne	12a44 <dcngettext@plt+0x1778>
   12a5c:	mov	r1, sl
   12a60:	mov	r0, #10
   12a64:	bl	11254 <fputc@plt>
   12a68:	ldr	r3, [sp, #28]
   12a6c:	add	r3, r3, r6
   12a70:	str	r3, [sp, #28]
   12a74:	b	12078 <dcngettext@plt+0xdac>
   12a78:	ldr	r3, [sp, #32]
   12a7c:	ldr	r2, [pc, #1312]	; 12fa4 <dcngettext@plt+0x1cd8>
   12a80:	mov	lr, #1
   12a84:	ldr	r3, [r3, #24]
   12a88:	add	r3, r3, #6
   12a8c:	smull	r0, r2, r2, r3
   12a90:	add	r0, r2, r3
   12a94:	asr	r2, r3, #31
   12a98:	rsb	r2, r2, r0, asr #2
   12a9c:	rsb	r2, r2, r2, lsl #3
   12aa0:	sub	r3, r3, r2
   12aa4:	add	r2, r3, lr
   12aa8:	mov	r3, r2
   12aac:	mov	r0, #0
   12ab0:	lsr	r2, r2, #31
   12ab4:	cmp	r3, r0
   12ab8:	str	r2, [sp, #36]	; 0x24
   12abc:	mov	ip, r0
   12ac0:	movlt	r2, #0
   12ac4:	movge	r2, #1
   12ac8:	cmp	r8, #79	; 0x4f
   12acc:	movne	r2, #0
   12ad0:	andeq	r2, r2, #1
   12ad4:	cmp	r2, #0
   12ad8:	uxtbne	r1, r1
   12adc:	bne	12720 <dcngettext@plt+0x1454>
   12ae0:	ldr	r2, [sp, #36]	; 0x24
   12ae4:	cmp	r2, #0
   12ae8:	rsbne	r3, r3, #0
   12aec:	add	r9, sp, #72	; 0x48
   12af0:	add	r6, r9, #14
   12af4:	mov	r2, r6
   12af8:	mov	r6, r3
   12afc:	mov	r3, r2
   12b00:	tst	r0, #1
   12b04:	movne	r2, #58	; 0x3a
   12b08:	mov	r8, r3
   12b0c:	strbne	r2, [r3, #-1]
   12b10:	subne	r8, r3, #1
   12b14:	ldr	r3, [pc, #1120]	; 12f7c <dcngettext@plt+0x1cb0>
   12b18:	asrs	r0, r0, #1
   12b1c:	movne	r1, #1
   12b20:	umull	r3, r2, r3, r6
   12b24:	moveq	r1, #0
   12b28:	lsr	r2, r2, #3
   12b2c:	cmp	r2, #0
   12b30:	orrne	r1, r1, #1
   12b34:	add	r3, r2, r2, lsl #2
   12b38:	cmp	r1, #0
   12b3c:	sub	r3, r6, r3, lsl #1
   12b40:	add	r3, r3, #48	; 0x30
   12b44:	strb	r3, [r8, #-1]
   12b48:	mov	r6, r2
   12b4c:	sub	r3, r8, #1
   12b50:	bne	12b00 <dcngettext@plt+0x1834>
   12b54:	mov	r6, r3
   12b58:	b	1288c <dcngettext@plt+0x15c0>
   12b5c:	subs	r3, r5, #45	; 0x2d
   12b60:	movne	r3, #1
   12b64:	cmp	r7, #0
   12b68:	movlt	r3, #0
   12b6c:	cmp	r3, #0
   12b70:	beq	13858 <dcngettext@plt+0x258c>
   12b74:	cmp	r7, #1
   12b78:	movcs	r6, r7
   12b7c:	movcc	r6, #1
   12b80:	ldr	r3, [sp, #28]
   12b84:	mvn	r3, r3
   12b88:	cmp	r3, r6
   12b8c:	bls	1209c <dcngettext@plt+0xdd0>
   12b90:	cmp	sl, #0
   12b94:	beq	12a68 <dcngettext@plt+0x179c>
   12b98:	cmp	r7, #1
   12b9c:	bls	12bd8 <dcngettext@plt+0x190c>
   12ba0:	cmp	r5, #43	; 0x2b
   12ba4:	cmpne	r5, #48	; 0x30
   12ba8:	moveq	r5, #1
   12bac:	movne	r5, #0
   12bb0:	sub	r7, r7, #1
   12bb4:	bne	136d0 <dcngettext@plt+0x2404>
   12bb8:	mov	r5, #0
   12bbc:	mov	r8, #48	; 0x30
   12bc0:	add	r5, r5, #1
   12bc4:	mov	r1, sl
   12bc8:	mov	r0, r8
   12bcc:	bl	11254 <fputc@plt>
   12bd0:	cmp	r7, r5
   12bd4:	bne	12bc0 <dcngettext@plt+0x18f4>
   12bd8:	mov	r1, sl
   12bdc:	mov	r0, #9
   12be0:	bl	11254 <fputc@plt>
   12be4:	b	12a68 <dcngettext@plt+0x179c>
   12be8:	cmp	r8, #69	; 0x45
   12bec:	beq	12480 <dcngettext@plt+0x11b4>
   12bf0:	ldr	r3, [sp, #32]
   12bf4:	mov	r0, #0
   12bf8:	mov	ip, r0
   12bfc:	ldr	r3, [r3, #16]
   12c00:	mov	lr, #2
   12c04:	cmn	r3, #1
   12c08:	movlt	r2, #1
   12c0c:	movge	r2, r0
   12c10:	str	r2, [sp, #36]	; 0x24
   12c14:	add	r3, r3, #1
   12c18:	movge	r2, #1
   12c1c:	movlt	r2, r0
   12c20:	b	12ac8 <dcngettext@plt+0x17fc>
   12c24:	cmp	r8, #69	; 0x45
   12c28:	beq	12480 <dcngettext@plt+0x11b4>
   12c2c:	ldr	r3, [sp, #32]
   12c30:	mov	lr, #2
   12c34:	ldr	r2, [r3, #4]
   12c38:	b	12aa8 <dcngettext@plt+0x17dc>
   12c3c:	cmp	r8, #69	; 0x45
   12c40:	beq	12480 <dcngettext@plt+0x11b4>
   12c44:	ldr	r2, [sp, #48]	; 0x30
   12c48:	mov	lr, #2
   12c4c:	b	12aa8 <dcngettext@plt+0x17dc>
   12c50:	cmp	r8, #69	; 0x45
   12c54:	beq	12480 <dcngettext@plt+0x11b4>
   12c58:	ldr	r3, [sp, #32]
   12c5c:	mov	lr, #2
   12c60:	ldr	r2, [r3, #8]
   12c64:	b	12aa8 <dcngettext@plt+0x17dc>
   12c68:	cmp	r8, #69	; 0x45
   12c6c:	beq	12480 <dcngettext@plt+0x11b4>
   12c70:	ldr	r3, [sp, #32]
   12c74:	ldr	r9, [r3, #28]
   12c78:	ldr	r2, [r3, #24]
   12c7c:	ldr	r6, [r3, #20]
   12c80:	str	r2, [sp, #36]	; 0x24
   12c84:	sub	r2, r9, r2
   12c88:	add	r2, r2, #380	; 0x17c
   12c8c:	ldr	r3, [pc, #784]	; 12fa4 <dcngettext@plt+0x1cd8>
   12c90:	add	r2, r2, #2
   12c94:	cmp	r6, #0
   12c98:	smull	r0, r3, r3, r2
   12c9c:	add	r3, r3, r2
   12ca0:	asr	r0, r2, #31
   12ca4:	rsb	r0, r0, r3, asr #2
   12ca8:	mvnge	r3, #99	; 0x63
   12cac:	rsb	r0, r0, r0, lsl #3
   12cb0:	sub	r2, r2, r0
   12cb4:	sub	r2, r9, r2
   12cb8:	movlt	r3, #300	; 0x12c
   12cbc:	adds	r2, r2, #3
   12cc0:	str	r2, [sp, #64]	; 0x40
   12cc4:	add	r3, r3, r6
   12cc8:	bmi	138e8 <dcngettext@plt+0x261c>
   12ccc:	tst	r3, #3
   12cd0:	ldrne	r3, [pc, #712]	; 12fa0 <dcngettext@plt+0x1cd4>
   12cd4:	bne	12d1c <dcngettext@plt+0x1a50>
   12cd8:	ldr	r2, [pc, #696]	; 12f98 <dcngettext@plt+0x1ccc>
   12cdc:	mov	r0, #100	; 0x64
   12ce0:	smull	r2, ip, r2, r3
   12ce4:	asr	r2, r3, #31
   12ce8:	rsb	lr, r2, ip, asr #5
   12cec:	mul	r0, r0, lr
   12cf0:	cmp	r3, r0
   12cf4:	ldrne	r3, [pc, #672]	; 12f9c <dcngettext@plt+0x1cd0>
   12cf8:	bne	12d1c <dcngettext@plt+0x1a50>
   12cfc:	rsb	r2, r2, ip, asr #7
   12d00:	mov	ip, #400	; 0x190
   12d04:	ldr	r0, [pc, #660]	; 12fa0 <dcngettext@plt+0x1cd4>
   12d08:	mul	r2, ip, r2
   12d0c:	sub	ip, ip, #34	; 0x22
   12d10:	cmp	r3, r2
   12d14:	movne	r3, r0
   12d18:	moveq	r3, ip
   12d1c:	ldr	r2, [sp, #36]	; 0x24
   12d20:	sub	r3, r9, r3
   12d24:	sub	r2, r3, r2
   12d28:	ldr	r0, [pc, #628]	; 12fa4 <dcngettext@plt+0x1cd8>
   12d2c:	add	r2, r2, #380	; 0x17c
   12d30:	add	r2, r2, #2
   12d34:	smull	r0, ip, r0, r2
   12d38:	add	ip, ip, r2
   12d3c:	asr	r0, r2, #31
   12d40:	rsb	r0, r0, ip, asr #2
   12d44:	rsb	r0, r0, r0, lsl #3
   12d48:	sub	r2, r2, r0
   12d4c:	sub	r3, r3, r2
   12d50:	adds	r3, r3, #3
   12d54:	movmi	lr, #0
   12d58:	ldrmi	r3, [sp, #64]	; 0x40
   12d5c:	movpl	lr, #1
   12d60:	cmp	r1, #71	; 0x47
   12d64:	beq	139e4 <dcngettext@plt+0x2718>
   12d68:	cmp	r1, #103	; 0x67
   12d6c:	bne	139c4 <dcngettext@plt+0x26f8>
   12d70:	ldr	r3, [pc, #544]	; 12f98 <dcngettext@plt+0x1ccc>
   12d74:	mov	r0, #100	; 0x64
   12d78:	smull	r2, r3, r3, r6
   12d7c:	asr	r2, r6, #31
   12d80:	rsb	r2, r2, r3, asr #5
   12d84:	ldr	r3, [pc, #524]	; 12f98 <dcngettext@plt+0x1ccc>
   12d88:	mul	r2, r0, r2
   12d8c:	sub	r2, r6, r2
   12d90:	add	r2, r2, lr
   12d94:	smull	r3, ip, r3, r2
   12d98:	asr	r3, r2, #31
   12d9c:	rsb	r3, r3, ip, asr #5
   12da0:	mul	r3, r0, r3
   12da4:	subs	r3, r2, r3
   12da8:	bmi	13984 <dcngettext@plt+0x26b8>
   12dac:	cmp	r5, #0
   12db0:	beq	136ac <dcngettext@plt+0x23e0>
   12db4:	mov	r2, #1
   12db8:	mov	r0, #0
   12dbc:	str	r0, [sp, #36]	; 0x24
   12dc0:	cmp	r5, #43	; 0x2b
   12dc4:	beq	13794 <dcngettext@plt+0x24c8>
   12dc8:	mov	ip, #0
   12dcc:	mov	lr, #2
   12dd0:	mov	r0, #0
   12dd4:	b	12ac8 <dcngettext@plt+0x17fc>
   12dd8:	cmp	r8, #0
   12ddc:	bne	12480 <dcngettext@plt+0x11b4>
   12de0:	clz	r3, r5
   12de4:	lsr	r3, r3, #5
   12de8:	ands	r3, r3, r7, lsr #31
   12dec:	bne	13a50 <dcngettext@plt+0x2784>
   12df0:	sub	r9, r7, #6
   12df4:	ldr	r8, [pc, #436]	; 12fb0 <dcngettext@plt+0x1ce4>
   12df8:	bic	r9, r9, r9, asr #31
   12dfc:	ldr	r3, [sp, #1168]	; 0x490
   12e00:	stm	sp, {r5, r9}
   12e04:	str	r3, [sp, #16]
   12e08:	ldr	r3, [sp, #1164]	; 0x48c
   12e0c:	ldr	r2, [sp, #32]
   12e10:	str	r3, [sp, #12]
   12e14:	ldr	r3, [sp, #1160]	; 0x488
   12e18:	mov	r1, r8
   12e1c:	str	r3, [sp, #8]
   12e20:	mov	r0, #0
   12e24:	ldr	r3, [sp, #40]	; 0x28
   12e28:	bl	11f80 <dcngettext@plt+0xcb4>
   12e2c:	cmp	r5, #45	; 0x2d
   12e30:	moveq	r6, #0
   12e34:	bicne	r6, r7, r7, asr #31
   12e38:	cmp	r6, r0
   12e3c:	movcs	r3, r6
   12e40:	movcc	r3, r0
   12e44:	mov	r2, r3
   12e48:	str	r3, [sp, #36]	; 0x24
   12e4c:	ldr	r3, [sp, #28]
   12e50:	mvn	r3, r3
   12e54:	cmp	r2, r3
   12e58:	bcs	1209c <dcngettext@plt+0xdd0>
   12e5c:	cmp	sl, #0
   12e60:	beq	12530 <dcngettext@plt+0x1264>
   12e64:	cmp	r6, r0
   12e68:	bls	12eb0 <dcngettext@plt+0x1be4>
   12e6c:	cmp	r5, #43	; 0x2b
   12e70:	cmpne	r5, #48	; 0x30
   12e74:	moveq	r7, #1
   12e78:	movne	r7, #0
   12e7c:	sub	r6, r6, r0
   12e80:	beq	13740 <dcngettext@plt+0x2474>
   12e84:	cmp	r6, #0
   12e88:	movne	r3, #32
   12e8c:	beq	12eb0 <dcngettext@plt+0x1be4>
   12e90:	mov	r0, r3
   12e94:	add	r7, r7, #1
   12e98:	mov	r1, sl
   12e9c:	str	r3, [sp, #64]	; 0x40
   12ea0:	bl	11254 <fputc@plt>
   12ea4:	cmp	r6, r7
   12ea8:	ldr	r3, [sp, #64]	; 0x40
   12eac:	bne	12e90 <dcngettext@plt+0x1bc4>
   12eb0:	ldr	r3, [sp, #1168]	; 0x490
   12eb4:	stm	sp, {r5, r9}
   12eb8:	str	r3, [sp, #16]
   12ebc:	ldr	r3, [sp, #1164]	; 0x48c
   12ec0:	mov	r1, r8
   12ec4:	str	r3, [sp, #12]
   12ec8:	ldr	r3, [sp, #1160]	; 0x488
   12ecc:	ldr	r2, [sp, #32]
   12ed0:	str	r3, [sp, #8]
   12ed4:	mov	r0, sl
   12ed8:	ldr	r3, [sp, #40]	; 0x28
   12edc:	bl	11f80 <dcngettext@plt+0xcb4>
   12ee0:	b	12530 <dcngettext@plt+0x1264>
   12ee4:	cmp	r8, #0
   12ee8:	bne	12480 <dcngettext@plt+0x11b4>
   12eec:	mvn	r9, #0
   12ef0:	ldr	r8, [pc, #136]	; 12f80 <dcngettext@plt+0x1cb4>
   12ef4:	b	12dfc <dcngettext@plt+0x1b30>
   12ef8:	cmp	r8, #69	; 0x45
   12efc:	beq	12480 <dcngettext@plt+0x11b4>
   12f00:	ldr	r3, [sp, #32]
   12f04:	mov	lr, #1
   12f08:	ldr	r2, [r3, #24]
   12f0c:	b	12aa8 <dcngettext@plt+0x17dc>
   12f10:	cmp	r8, #69	; 0x45
   12f14:	beq	12480 <dcngettext@plt+0x11b4>
   12f18:	cmp	r7, #0
   12f1c:	movle	r7, #9
   12f20:	ldr	r3, [sp, #1168]	; 0x490
   12f24:	mov	r6, #9
   12f28:	b	12f3c <dcngettext@plt+0x1c70>
   12f2c:	asr	r2, r3, #31
   12f30:	smull	r1, r3, fp, r3
   12f34:	sub	r6, r6, #1
   12f38:	rsb	r3, r2, r3, asr #2
   12f3c:	cmp	r6, r7
   12f40:	bgt	12f2c <dcngettext@plt+0x1c60>
   12f44:	smull	r2, r1, fp, r3
   12f48:	asr	r2, r3, #31
   12f4c:	rsb	r1, r2, r1, asr #2
   12f50:	cmp	r6, #1
   12f54:	add	r1, r1, r1, lsl #2
   12f58:	ble	13824 <dcngettext@plt+0x2558>
   12f5c:	cmp	r3, r1, lsl #1
   12f60:	beq	12f30 <dcngettext@plt+0x1c64>
   12f64:	add	r0, sp, #72	; 0x48
   12f68:	add	r1, r0, r6
   12f6c:	b	12fbc <dcngettext@plt+0x1cf0>
   12f70:	andeq	r7, r1, r4, lsr #17
   12f74:	strbtvs	r6, [r6], -r7, ror #12
   12f78:	stcleq	12, cr12, [ip], {204}	; 0xcc
   12f7c:	stclgt	12, cr12, [ip], {205}	; 0xcd
   12f80:	andeq	r7, r1, r4, asr #21
   12f84:			; <UNDEFINED> instruction: 0x91a2b3c5
   12f88:	stmhi	r8, {r0, r3, r7, fp, pc}
   12f8c:	ldrdeq	r7, [r1], -r0
   12f90:			; <UNDEFINED> instruction: 0x00017abc
   12f94:	andeq	r0, r0, fp, ror #14
   12f98:	mvnpl	r8, pc, lsl r5
   12f9c:	andeq	r0, r0, lr, ror #2
   12fa0:	andeq	r0, r0, sp, ror #2
   12fa4:	subls	r2, r9, #-1828716544	; 0x93000000
   12fa8:			; <UNDEFINED> instruction: 0xfffff894
   12fac:	andeq	r2, r0, pc, lsl #14
   12fb0:	ldrdeq	r7, [r1], -ip
   12fb4:	andeq	r2, r0, r0, lsl r7
   12fb8:	asr	r2, r2, #31
   12fbc:	smull	lr, ip, fp, r3
   12fc0:	rsb	r2, r2, ip, asr #2
   12fc4:	add	ip, r2, r2, lsl #2
   12fc8:	sub	r3, r3, ip, lsl #1
   12fcc:	add	r3, r3, #48	; 0x30
   12fd0:	strb	r3, [r1, #-1]!
   12fd4:	cmp	r0, r1
   12fd8:	mov	r3, r2
   12fdc:	bne	12fb8 <dcngettext@plt+0x1cec>
   12fe0:	cmp	r5, #0
   12fe4:	ldr	r3, [sp, #28]
   12fe8:	moveq	r5, #48	; 0x30
   12fec:	cmp	r6, #0
   12ff0:	movcs	r8, r6
   12ff4:	movcc	r8, #0
   12ff8:	mvn	r3, r3
   12ffc:	cmp	r8, r3
   13000:	bcs	1209c <dcngettext@plt+0xdd0>
   13004:	cmp	sl, #0
   13008:	beq	13028 <dcngettext@plt+0x1d5c>
   1300c:	ldr	r3, [sp, #40]	; 0x28
   13010:	cmp	r3, #0
   13014:	beq	13830 <dcngettext@plt+0x2564>
   13018:	mov	r2, r6
   1301c:	add	r1, sp, #72	; 0x48
   13020:	mov	r0, sl
   13024:	bl	11f40 <dcngettext@plt+0xc74>
   13028:	ldr	r3, [sp, #28]
   1302c:	cmp	r5, #45	; 0x2d
   13030:	add	r8, r3, r8
   13034:	beq	13a40 <dcngettext@plt+0x2774>
   13038:	subs	r6, r7, r6
   1303c:	bmi	13a40 <dcngettext@plt+0x2774>
   13040:	mvn	r3, r8
   13044:	cmp	r6, r3
   13048:	mov	r7, r6
   1304c:	bcs	1209c <dcngettext@plt+0xdd0>
   13050:	cmp	r6, #0
   13054:	cmpne	sl, #0
   13058:	beq	13090 <dcngettext@plt+0x1dc4>
   1305c:	cmp	r5, #43	; 0x2b
   13060:	cmpne	r5, #48	; 0x30
   13064:	moveq	r5, #1
   13068:	movne	r5, #0
   1306c:	bne	13a94 <dcngettext@plt+0x27c8>
   13070:	mov	r5, #0
   13074:	mov	r9, #48	; 0x30
   13078:	add	r5, r5, #1
   1307c:	mov	r1, sl
   13080:	mov	r0, r9
   13084:	bl	11254 <fputc@plt>
   13088:	cmp	r6, r5
   1308c:	bhi	13078 <dcngettext@plt+0x1dac>
   13090:	add	r3, r7, r8
   13094:	str	r3, [sp, #28]
   13098:	b	12078 <dcngettext@plt+0xdac>
   1309c:	cmp	r8, #69	; 0x45
   130a0:	beq	12480 <dcngettext@plt+0x11b4>
   130a4:	ldr	r3, [sp, #32]
   130a8:	ldr	r2, [r3, #12]
   130ac:	cmp	r5, #0
   130b0:	mov	lr, #2
   130b4:	moveq	r5, #95	; 0x5f
   130b8:	b	12aa8 <dcngettext@plt+0x17dc>
   130bc:	cmp	r8, #69	; 0x45
   130c0:	beq	12480 <dcngettext@plt+0x11b4>
   130c4:	ldr	r3, [sp, #32]
   130c8:	mov	lr, #2
   130cc:	ldr	r2, [r3, #12]
   130d0:	b	12aa8 <dcngettext@plt+0x17dc>
   130d4:	mov	lr, #0
   130d8:	ldr	r2, [sp, #32]
   130dc:	ldr	r3, [r2, #32]
   130e0:	cmp	r3, #0
   130e4:	blt	12078 <dcngettext@plt+0xdac>
   130e8:	ldr	ip, [r2, #36]	; 0x24
   130ec:	mov	r3, r2
   130f0:	cmp	ip, #0
   130f4:	blt	138b0 <dcngettext@plt+0x25e4>
   130f8:	movne	r3, #0
   130fc:	strne	r3, [sp, #36]	; 0x24
   13100:	bne	1311c <dcngettext@plt+0x1e50>
   13104:	ldr	r3, [sp, #56]	; 0x38
   13108:	ldrb	r3, [r3]
   1310c:	sub	r3, r3, #45	; 0x2d
   13110:	clz	r3, r3
   13114:	lsr	r3, r3, #5
   13118:	str	r3, [sp, #36]	; 0x24
   1311c:	ldr	r3, [pc, #-412]	; 12f88 <dcngettext@plt+0x1cbc>
   13120:	smull	r3, r2, r3, ip
   13124:	ldr	r3, [pc, #-424]	; 12f84 <dcngettext@plt+0x1cb8>
   13128:	add	r2, r2, ip
   1312c:	smull	r3, r6, r3, ip
   13130:	add	r0, r6, ip
   13134:	asr	r3, ip, #31
   13138:	str	r0, [sp, #64]	; 0x40
   1313c:	ldr	r0, [pc, #-444]	; 12f88 <dcngettext@plt+0x1cbc>
   13140:	rsb	r2, r3, r2, asr #5
   13144:	smull	r6, r0, r0, r2
   13148:	add	r0, r0, r2
   1314c:	asr	r6, r2, #31
   13150:	rsb	r0, r6, r0, asr #5
   13154:	rsb	r6, r2, r2, lsl #4
   13158:	rsb	r0, r0, r0, lsl #4
   1315c:	str	r0, [sp, #68]	; 0x44
   13160:	ldr	r0, [sp, #64]	; 0x40
   13164:	sub	ip, ip, r6, lsl #2
   13168:	rsb	r3, r3, r0, asr #11
   1316c:	ldr	r0, [sp, #68]	; 0x44
   13170:	sub	r0, r2, r0, lsl #2
   13174:	cmp	lr, #3
   13178:	ldrls	pc, [pc, lr, lsl #2]
   1317c:	b	12480 <dcngettext@plt+0x11b4>
   13180:	andeq	r3, r1, r4, lsr #22
   13184:	andeq	r3, r1, r4, lsl #22
   13188:	ldrdeq	r3, [r1], -r8
   1318c:			; <UNDEFINED> instruction: 0x00013ab4
   13190:	ldr	r3, [sp, #40]	; 0x28
   13194:	cmp	r6, #0
   13198:	movne	r3, r6
   1319c:	cmp	r8, #69	; 0x45
   131a0:	str	r3, [sp, #40]	; 0x28
   131a4:	beq	12480 <dcngettext@plt+0x11b4>
   131a8:	uxtb	r1, r1
   131ac:	mov	r6, #0
   131b0:	b	12620 <dcngettext@plt+0x1354>
   131b4:	cmp	r8, #69	; 0x45
   131b8:	beq	12720 <dcngettext@plt+0x1454>
   131bc:	ldr	r3, [sp, #32]
   131c0:	mov	r0, #100	; 0x64
   131c4:	ldr	r2, [r3, #20]
   131c8:	ldr	r3, [pc, #-568]	; 12f98 <dcngettext@plt+0x1ccc>
   131cc:	smull	r3, ip, r3, r2
   131d0:	asr	r3, r2, #31
   131d4:	rsb	r3, r3, ip, asr #5
   131d8:	mul	r3, r0, r3
   131dc:	subs	r3, r2, r3
   131e0:	bpl	12dac <dcngettext@plt+0x1ae0>
   131e4:	sub	r0, r0, #2000	; 0x7d0
   131e8:	cmp	r2, r0
   131ec:	rsblt	r3, r3, #0
   131f0:	addge	r3, r3, #100	; 0x64
   131f4:	b	12dac <dcngettext@plt+0x1ae0>
   131f8:	ldr	r3, [sp, #32]
   131fc:	cmp	r8, #79	; 0x4f
   13200:	ldr	r3, [r3, #16]
   13204:	beq	12720 <dcngettext@plt+0x1454>
   13208:	add	r2, r3, r3, lsl #2
   1320c:	mov	ip, #0
   13210:	add	r3, r3, r2, lsl #1
   13214:	str	ip, [sp, #36]	; 0x24
   13218:	asr	r3, r3, #5
   1321c:	add	r3, r3, #1
   13220:	mov	r0, ip
   13224:	mov	lr, #1
   13228:	b	12aec <dcngettext@plt+0x1820>
   1322c:	mov	r3, #0
   13230:	cmp	r6, #0
   13234:	moveq	r6, r3
   13238:	moveq	r1, #112	; 0x70
   1323c:	movne	r3, #0
   13240:	movne	r1, #112	; 0x70
   13244:	strne	r3, [sp, #40]	; 0x28
   13248:	b	12620 <dcngettext@plt+0x1354>
   1324c:	sub	r3, r4, #1
   13250:	cmp	r9, r3
   13254:	movne	r4, r3
   13258:	bne	12480 <dcngettext@plt+0x11b4>
   1325c:	mvn	r3, r7
   13260:	cmp	r5, #45	; 0x2d
   13264:	lsr	r3, r3, #31
   13268:	moveq	r3, #0
   1326c:	cmp	r3, #0
   13270:	beq	138a4 <dcngettext@plt+0x25d8>
   13274:	cmp	r7, #1
   13278:	movcs	r6, r7
   1327c:	movcc	r6, #1
   13280:	ldr	r3, [sp, #28]
   13284:	mvn	r3, r3
   13288:	cmp	r3, r6
   1328c:	bls	1209c <dcngettext@plt+0xdd0>
   13290:	cmp	sl, #0
   13294:	beq	12a68 <dcngettext@plt+0x179c>
   13298:	cmp	r7, #1
   1329c:	bls	132dc <dcngettext@plt+0x2010>
   132a0:	cmp	r5, #43	; 0x2b
   132a4:	cmpne	r5, #48	; 0x30
   132a8:	moveq	r5, #1
   132ac:	movne	r5, #0
   132b0:	sub	r7, r7, #1
   132b4:	bne	13884 <dcngettext@plt+0x25b8>
   132b8:	mov	r5, #0
   132bc:	mov	r8, #48	; 0x30
   132c0:	add	r5, r5, #1
   132c4:	mov	r1, sl
   132c8:	mov	r0, r8
   132cc:	bl	11254 <fputc@plt>
   132d0:	cmp	r7, r5
   132d4:	bne	132c0 <dcngettext@plt+0x1ff4>
   132d8:	ldrb	r0, [r4]
   132dc:	mov	r1, sl
   132e0:	bl	11254 <fputc@plt>
   132e4:	b	12a68 <dcngettext@plt+0x179c>
   132e8:	cmp	r8, #69	; 0x45
   132ec:	beq	12480 <dcngettext@plt+0x11b4>
   132f0:	ldr	r2, [sp, #32]
   132f4:	mov	lr, #2
   132f8:	ldr	r3, [r2, #28]
   132fc:	ldr	r2, [r2, #24]
   13300:	sub	r3, r3, r2
   13304:	ldr	r2, [pc, #-872]	; 12fa4 <dcngettext@plt+0x1cd8>
   13308:	add	r3, r3, #7
   1330c:	smull	r0, r2, r2, r3
   13310:	add	r2, r2, r3
   13314:	asr	r3, r3, #31
   13318:	rsb	r2, r3, r2, asr lr
   1331c:	b	12aa8 <dcngettext@plt+0x17dc>
   13320:	ldr	r8, [pc, #-924]	; 12f8c <dcngettext@plt+0x1cc0>
   13324:	mvn	r9, #0
   13328:	b	12dfc <dcngettext@plt+0x1b30>
   1332c:	cmp	r8, #69	; 0x45
   13330:	beq	12480 <dcngettext@plt+0x11b4>
   13334:	ldr	r3, [sp, #32]
   13338:	mov	r0, #0
   1333c:	mov	ip, r0
   13340:	ldr	r3, [r3, #28]
   13344:	mov	lr, #3
   13348:	cmn	r3, #1
   1334c:	movlt	r2, #1
   13350:	movge	r2, r0
   13354:	str	r2, [sp, #36]	; 0x24
   13358:	add	r3, r3, #1
   1335c:	movge	r2, #1
   13360:	movlt	r2, r0
   13364:	b	12ac8 <dcngettext@plt+0x17fc>
   13368:	ldrb	r3, [r4, #1]
   1336c:	add	r0, r4, #1
   13370:	cmp	r3, #58	; 0x3a
   13374:	movne	lr, #1
   13378:	beq	13804 <dcngettext@plt+0x2538>
   1337c:	cmp	r3, #122	; 0x7a
   13380:	moveq	r4, r0
   13384:	bne	12480 <dcngettext@plt+0x11b4>
   13388:	b	130d8 <dcngettext@plt+0x1e0c>
   1338c:	cmp	r8, #69	; 0x45
   13390:	beq	12480 <dcngettext@plt+0x11b4>
   13394:	ldr	r3, [sp, #32]
   13398:	ldr	r0, [pc, #-1020]	; 12fa4 <dcngettext@plt+0x1cd8>
   1339c:	mov	lr, #2
   133a0:	ldr	r2, [r3, #24]
   133a4:	ldr	r3, [r3, #28]
   133a8:	add	r2, r2, #6
   133ac:	smull	ip, r0, r0, r2
   133b0:	add	ip, r0, r2
   133b4:	asr	r0, r2, #31
   133b8:	rsb	r0, r0, ip, asr #2
   133bc:	rsb	r0, r0, r0, lsl #3
   133c0:	sub	r2, r2, r0
   133c4:	b	13300 <dcngettext@plt+0x2034>
   133c8:	cmp	r8, #69	; 0x45
   133cc:	beq	12480 <dcngettext@plt+0x11b4>
   133d0:	ldr	r3, [sp, #32]
   133d4:	mov	lr, #2
   133d8:	ldr	r2, [r3]
   133dc:	b	12aa8 <dcngettext@plt+0x17dc>
   133e0:	mvn	r9, #0
   133e4:	ldr	r8, [pc, #-1116]	; 12f90 <dcngettext@plt+0x1cc4>
   133e8:	b	12dfc <dcngettext@plt+0x1b30>
   133ec:	cmp	r8, #69	; 0x45
   133f0:	beq	12480 <dcngettext@plt+0x11b4>
   133f4:	ldr	r2, [sp, #48]	; 0x30
   133f8:	b	130ac <dcngettext@plt+0x1de0>
   133fc:	cmp	r8, #69	; 0x45
   13400:	beq	12480 <dcngettext@plt+0x11b4>
   13404:	ldr	r3, [sp, #32]
   13408:	ldr	r2, [r3, #8]
   1340c:	b	130ac <dcngettext@plt+0x1de0>
   13410:	cmp	r8, #69	; 0x45
   13414:	beq	12720 <dcngettext@plt+0x1454>
   13418:	cmp	r8, #79	; 0x4f
   1341c:	beq	12480 <dcngettext@plt+0x11b4>
   13420:	ldr	r3, [sp, #32]
   13424:	ldr	r0, [pc, #-1156]	; 12fa8 <dcngettext@plt+0x1cdc>
   13428:	ldr	r2, [r3, #20]
   1342c:	cmp	r2, r0
   13430:	movge	ip, #0
   13434:	movlt	ip, #1
   13438:	add	r3, r2, #1888	; 0x760
   1343c:	cmp	r5, #0
   13440:	str	ip, [sp, #36]	; 0x24
   13444:	add	r3, r3, #12
   13448:	bne	137bc <dcngettext@plt+0x24f0>
   1344c:	ldr	ip, [sp, #1152]	; 0x480
   13450:	cmp	r2, r0
   13454:	movlt	r2, #0
   13458:	movge	r2, #1
   1345c:	cmp	ip, #43	; 0x2b
   13460:	beq	13a34 <dcngettext@plt+0x2768>
   13464:	mov	r5, ip
   13468:	mov	lr, #4
   1346c:	mov	ip, #0
   13470:	b	12dd0 <dcngettext@plt+0x1b04>
   13474:	cmp	r8, #69	; 0x45
   13478:	beq	12720 <dcngettext@plt+0x1454>
   1347c:	ldr	r3, [sp, #32]
   13480:	ldr	r0, [pc, #-1268]	; 12f94 <dcngettext@plt+0x1cc8>
   13484:	mvn	ip, #98	; 0x62
   13488:	ldr	r2, [r3, #20]
   1348c:	add	r3, r2, #1888	; 0x760
   13490:	add	r3, r3, #12
   13494:	cmp	r3, r0
   13498:	ldr	r0, [pc, #-1272]	; 12fa8 <dcngettext@plt+0x1cdc>
   1349c:	movhi	r3, #0
   134a0:	movls	r3, #1
   134a4:	cmp	r2, r0
   134a8:	mla	r3, ip, r3, r2
   134ac:	movge	ip, #0
   134b0:	movlt	ip, #1
   134b4:	str	ip, [sp, #36]	; 0x24
   134b8:	ldr	ip, [pc, #-1320]	; 12f98 <dcngettext@plt+0x1ccc>
   134bc:	cmp	r5, #0
   134c0:	smull	lr, ip, ip, r3
   134c4:	asr	r3, r3, #31
   134c8:	rsb	r3, r3, ip, asr #5
   134cc:	add	r3, r3, #19
   134d0:	bne	13730 <dcngettext@plt+0x2464>
   134d4:	ldr	ip, [sp, #1152]	; 0x480
   134d8:	cmp	r2, r0
   134dc:	movlt	r2, #0
   134e0:	movge	r2, #1
   134e4:	cmp	ip, #43	; 0x2b
   134e8:	beq	13794 <dcngettext@plt+0x24c8>
   134ec:	mov	r5, ip
   134f0:	mov	lr, #2
   134f4:	mov	ip, #0
   134f8:	b	12dd0 <dcngettext@plt+0x1b04>
   134fc:	ldr	r0, [sp, #56]	; 0x38
   13500:	bl	1117c <strlen@plt>
   13504:	mvn	r3, r7
   13508:	cmp	r5, #45	; 0x2d
   1350c:	lsr	r3, r3, #31
   13510:	moveq	r3, #0
   13514:	cmp	r3, #0
   13518:	moveq	r7, #0
   1351c:	ldr	r3, [sp, #40]	; 0x28
   13520:	cmp	r6, #0
   13524:	movne	r3, #0
   13528:	str	r3, [sp, #40]	; 0x28
   1352c:	cmp	r0, r7
   13530:	movcs	r3, r0
   13534:	movcc	r3, r7
   13538:	mov	r2, r3
   1353c:	str	r3, [sp, #36]	; 0x24
   13540:	ldr	r3, [sp, #28]
   13544:	mov	r9, r0
   13548:	mvn	r3, r3
   1354c:	cmp	r2, r3
   13550:	bcs	1209c <dcngettext@plt+0xdd0>
   13554:	cmp	sl, #0
   13558:	beq	12530 <dcngettext@plt+0x1264>
   1355c:	cmp	r0, r7
   13560:	bcc	136f0 <dcngettext@plt+0x2424>
   13564:	cmp	r6, #0
   13568:	bne	138d4 <dcngettext@plt+0x2608>
   1356c:	ldr	r3, [sp, #40]	; 0x28
   13570:	cmp	r3, #0
   13574:	beq	138bc <dcngettext@plt+0x25f0>
   13578:	mov	r2, r9
   1357c:	ldr	r1, [sp, #56]	; 0x38
   13580:	mov	r0, sl
   13584:	bl	11f40 <dcngettext@plt+0xc74>
   13588:	b	12530 <dcngettext@plt+0x1264>
   1358c:	mov	r3, #1
   13590:	b	13230 <dcngettext@plt+0x1f64>
   13594:	mov	r3, #45	; 0x2d
   13598:	str	r3, [sp, #36]	; 0x24
   1359c:	b	128c8 <dcngettext@plt+0x15fc>
   135a0:	mov	r1, r9
   135a4:	mov	r0, r6
   135a8:	mov	r3, sl
   135ac:	mov	r2, #1
   135b0:	bl	11098 <fwrite@plt>
   135b4:	b	12530 <dcngettext@plt+0x1264>
   135b8:	add	r9, r9, #14
   135bc:	sub	r9, r9, r6
   135c0:	sub	r3, r7, r9
   135c4:	cmp	r3, #0
   135c8:	movle	r3, #0
   135cc:	andgt	r3, r2, #1
   135d0:	cmp	r3, #0
   135d4:	bne	1294c <dcngettext@plt+0x1680>
   135d8:	cmp	r2, #0
   135dc:	bne	1294c <dcngettext@plt+0x1680>
   135e0:	b	12948 <dcngettext@plt+0x167c>
   135e4:	cmp	r7, #0
   135e8:	beq	129c0 <dcngettext@plt+0x16f4>
   135ec:	mov	r8, #0
   135f0:	mov	r5, #48	; 0x30
   135f4:	add	r8, r8, #1
   135f8:	mov	r1, sl
   135fc:	mov	r0, r5
   13600:	bl	11254 <fputc@plt>
   13604:	cmp	r7, r8
   13608:	bne	135f4 <dcngettext@plt+0x2328>
   1360c:	b	129c0 <dcngettext@plt+0x16f4>
   13610:	mov	r1, r9
   13614:	add	r0, sp, #89	; 0x59
   13618:	mov	r3, sl
   1361c:	mov	r2, #1
   13620:	bl	11098 <fwrite@plt>
   13624:	b	12530 <dcngettext@plt+0x1264>
   13628:	mov	r2, r9
   1362c:	add	r1, sp, #89	; 0x59
   13630:	mov	r0, sl
   13634:	bl	11f00 <dcngettext@plt+0xc34>
   13638:	b	12530 <dcngettext@plt+0x1264>
   1363c:	str	r3, [sp, #28]
   13640:	b	1208c <dcngettext@plt+0xdc0>
   13644:	cmp	sl, #0
   13648:	beq	1397c <dcngettext@plt+0x26b0>
   1364c:	cmp	r8, #0
   13650:	beq	1397c <dcngettext@plt+0x26b0>
   13654:	str	r7, [sp, #1156]	; 0x484
   13658:	mov	r9, #0
   1365c:	mov	r3, #32
   13660:	mov	r7, r2
   13664:	mov	r0, r3
   13668:	add	r9, r9, #1
   1366c:	mov	r1, sl
   13670:	str	r3, [sp, #68]	; 0x44
   13674:	bl	11254 <fputc@plt>
   13678:	cmp	r9, r8
   1367c:	ldr	r3, [sp, #68]	; 0x44
   13680:	bne	13664 <dcngettext@plt+0x2398>
   13684:	mov	r2, r7
   13688:	ldr	r7, [sp, #1156]	; 0x484
   1368c:	ldr	r3, [sp, #28]
   13690:	sub	r7, r7, r8
   13694:	add	r3, r3, r9
   13698:	str	r3, [sp, #28]
   1369c:	b	128f8 <dcngettext@plt+0x162c>
   136a0:	cmp	r5, #0
   136a4:	add	r3, r3, #100	; 0x64
   136a8:	bne	12db4 <dcngettext@plt+0x1ae8>
   136ac:	ldr	r2, [sp, #1152]	; 0x480
   136b0:	cmp	r2, #43	; 0x2b
   136b4:	beq	13870 <dcngettext@plt+0x25a4>
   136b8:	mov	ip, #0
   136bc:	mov	r5, r2
   136c0:	str	ip, [sp, #36]	; 0x24
   136c4:	mov	r2, #1
   136c8:	mov	lr, #2
   136cc:	b	12dd0 <dcngettext@plt+0x1b04>
   136d0:	mov	r8, #32
   136d4:	add	r5, r5, #1
   136d8:	mov	r1, sl
   136dc:	mov	r0, r8
   136e0:	bl	11254 <fputc@plt>
   136e4:	cmp	r7, r5
   136e8:	bne	136d4 <dcngettext@plt+0x2408>
   136ec:	b	12bd8 <dcngettext@plt+0x190c>
   136f0:	cmp	r5, #43	; 0x2b
   136f4:	cmpne	r5, #48	; 0x30
   136f8:	moveq	r5, #1
   136fc:	movne	r5, #0
   13700:	sub	r7, r7, r0
   13704:	beq	137d8 <dcngettext@plt+0x250c>
   13708:	cmp	r7, #0
   1370c:	movne	r8, #32
   13710:	beq	13564 <dcngettext@plt+0x2298>
   13714:	add	r5, r5, #1
   13718:	mov	r1, sl
   1371c:	mov	r0, r8
   13720:	bl	11254 <fputc@plt>
   13724:	cmp	r7, r5
   13728:	bne	13714 <dcngettext@plt+0x2448>
   1372c:	b	13564 <dcngettext@plt+0x2298>
   13730:	cmp	r2, r0
   13734:	movlt	r2, #0
   13738:	movge	r2, #1
   1373c:	b	12dc0 <dcngettext@plt+0x1af4>
   13740:	cmp	r6, #0
   13744:	beq	12eb0 <dcngettext@plt+0x1be4>
   13748:	mov	r7, #0
   1374c:	mov	r3, #48	; 0x30
   13750:	mov	r0, r3
   13754:	add	r7, r7, #1
   13758:	mov	r1, sl
   1375c:	str	r3, [sp, #64]	; 0x40
   13760:	bl	11254 <fputc@plt>
   13764:	cmp	r6, r7
   13768:	ldr	r3, [sp, #64]	; 0x40
   1376c:	bne	13750 <dcngettext@plt+0x2484>
   13770:	b	12eb0 <dcngettext@plt+0x1be4>
   13774:	mov	r8, #32
   13778:	add	r5, r5, #1
   1377c:	mov	r1, sl
   13780:	mov	r0, r8
   13784:	bl	11254 <fputc@plt>
   13788:	cmp	r7, r5
   1378c:	bne	13778 <dcngettext@plt+0x24ac>
   13790:	b	12a5c <dcngettext@plt+0x1790>
   13794:	mov	lr, #2
   13798:	mov	r0, #99	; 0x63
   1379c:	cmp	r0, r3
   137a0:	movcs	r0, #0
   137a4:	movcc	r0, #1
   137a8:	cmp	r7, lr
   137ac:	movle	ip, r0
   137b0:	orrgt	ip, r0, #1
   137b4:	mov	r5, #43	; 0x2b
   137b8:	b	12dd0 <dcngettext@plt+0x1b04>
   137bc:	ldr	r2, [sp, #36]	; 0x24
   137c0:	cmp	r5, #43	; 0x2b
   137c4:	eor	r2, r2, #1
   137c8:	beq	13a34 <dcngettext@plt+0x2768>
   137cc:	mov	ip, #0
   137d0:	mov	lr, #4
   137d4:	b	12dd0 <dcngettext@plt+0x1b04>
   137d8:	cmp	r7, #0
   137dc:	beq	13564 <dcngettext@plt+0x2298>
   137e0:	mov	r5, #0
   137e4:	mov	r8, #48	; 0x30
   137e8:	add	r5, r5, #1
   137ec:	mov	r1, sl
   137f0:	mov	r0, r8
   137f4:	bl	11254 <fputc@plt>
   137f8:	cmp	r7, r5
   137fc:	bne	137e8 <dcngettext@plt+0x251c>
   13800:	b	13564 <dcngettext@plt+0x2298>
   13804:	add	r2, r4, #2
   13808:	mov	lr, #1
   1380c:	mov	r0, r2
   13810:	ldrb	r3, [r2], #1
   13814:	add	lr, lr, #1
   13818:	cmp	r3, #58	; 0x3a
   1381c:	bne	1337c <dcngettext@plt+0x20b0>
   13820:	b	1380c <dcngettext@plt+0x2540>
   13824:	cmp	r6, #0
   13828:	bgt	12f64 <dcngettext@plt+0x1c98>
   1382c:	b	12fe0 <dcngettext@plt+0x1d14>
   13830:	mov	r3, sl
   13834:	mov	r2, #1
   13838:	mov	r1, r6
   1383c:	add	r0, sp, #72	; 0x48
   13840:	bl	11098 <fwrite@plt>
   13844:	b	13028 <dcngettext@plt+0x1d5c>
   13848:	ldr	r2, [sp, #44]	; 0x2c
   1384c:	mov	r3, #75	; 0x4b
   13850:	str	r3, [r2]
   13854:	b	120a8 <dcngettext@plt+0xddc>
   13858:	mov	r7, r3
   1385c:	mov	r6, #1
   13860:	b	12b80 <dcngettext@plt+0x18b4>
   13864:	mov	r7, r3
   13868:	mov	r6, #1
   1386c:	b	12a04 <dcngettext@plt+0x1738>
   13870:	str	r5, [sp, #36]	; 0x24
   13874:	mov	r2, #1
   13878:	mov	lr, #2
   1387c:	mov	r0, #99	; 0x63
   13880:	b	1379c <dcngettext@plt+0x24d0>
   13884:	mov	r8, #32
   13888:	add	r5, r5, #1
   1388c:	mov	r1, sl
   13890:	mov	r0, r8
   13894:	bl	11254 <fputc@plt>
   13898:	cmp	r7, r5
   1389c:	bne	13888 <dcngettext@plt+0x25bc>
   138a0:	b	132d8 <dcngettext@plt+0x200c>
   138a4:	mov	r7, r3
   138a8:	mov	r6, #1
   138ac:	b	13280 <dcngettext@plt+0x1fb4>
   138b0:	mov	r3, #1
   138b4:	str	r3, [sp, #36]	; 0x24
   138b8:	b	1311c <dcngettext@plt+0x1e50>
   138bc:	mov	r1, r9
   138c0:	mov	r3, sl
   138c4:	mov	r2, #1
   138c8:	ldr	r0, [sp, #56]	; 0x38
   138cc:	bl	11098 <fwrite@plt>
   138d0:	b	12530 <dcngettext@plt+0x1264>
   138d4:	mov	r2, r9
   138d8:	ldr	r1, [sp, #56]	; 0x38
   138dc:	mov	r0, sl
   138e0:	bl	11f00 <dcngettext@plt+0xc34>
   138e4:	b	12530 <dcngettext@plt+0x1264>
   138e8:	sub	r3, r3, #1
   138ec:	tst	r3, #3
   138f0:	ldrne	r3, [pc, #-2392]	; 12fa0 <dcngettext@plt+0x1cd4>
   138f4:	bne	1393c <dcngettext@plt+0x2670>
   138f8:	ldr	r2, [pc, #-2408]	; 12f98 <dcngettext@plt+0x1ccc>
   138fc:	mov	r0, #100	; 0x64
   13900:	smull	r2, ip, r2, r3
   13904:	asr	r2, r3, #31
   13908:	rsb	lr, r2, ip, asr #5
   1390c:	mul	r0, r0, lr
   13910:	cmp	r3, r0
   13914:	ldrne	r3, [pc, #-2432]	; 12f9c <dcngettext@plt+0x1cd0>
   13918:	bne	1393c <dcngettext@plt+0x2670>
   1391c:	rsb	r2, r2, ip, asr #7
   13920:	mov	ip, #400	; 0x190
   13924:	ldr	r0, [pc, #-2444]	; 12fa0 <dcngettext@plt+0x1cd4>
   13928:	mul	r2, ip, r2
   1392c:	sub	ip, ip, #34	; 0x22
   13930:	cmp	r3, r2
   13934:	movne	r3, r0
   13938:	moveq	r3, ip
   1393c:	ldr	r2, [sp, #36]	; 0x24
   13940:	add	r3, r9, r3
   13944:	sub	r2, r3, r2
   13948:	ldr	r0, [pc, #-2476]	; 12fa4 <dcngettext@plt+0x1cd8>
   1394c:	add	r2, r2, #380	; 0x17c
   13950:	add	r2, r2, #2
   13954:	mvn	lr, #0
   13958:	smull	r0, ip, r0, r2
   1395c:	add	ip, ip, r2
   13960:	asr	r0, r2, #31
   13964:	rsb	r0, r0, ip, asr #2
   13968:	rsb	r0, r0, r0, lsl #3
   1396c:	sub	r2, r2, r0
   13970:	sub	r3, r3, r2
   13974:	add	r3, r3, #3
   13978:	b	12d60 <dcngettext@plt+0x1a94>
   1397c:	mov	r9, r8
   13980:	b	1368c <dcngettext@plt+0x23c0>
   13984:	ldr	r2, [pc, #-2532]	; 12fa8 <dcngettext@plt+0x1cdc>
   13988:	sub	r2, r2, lr
   1398c:	cmp	r6, r2
   13990:	bge	136a0 <dcngettext@plt+0x23d4>
   13994:	cmp	r5, #0
   13998:	rsb	r3, r3, #0
   1399c:	bne	12db4 <dcngettext@plt+0x1ae8>
   139a0:	ldr	r2, [sp, #1152]	; 0x480
   139a4:	cmp	r2, #43	; 0x2b
   139a8:	beq	13870 <dcngettext@plt+0x25a4>
   139ac:	mov	ip, #0
   139b0:	str	ip, [sp, #36]	; 0x24
   139b4:	ldr	r5, [sp, #1152]	; 0x480
   139b8:	mov	r2, #1
   139bc:	mov	lr, #2
   139c0:	b	12dd0 <dcngettext@plt+0x1b04>
   139c4:	ldr	r2, [pc, #-2600]	; 12fa4 <dcngettext@plt+0x1cd8>
   139c8:	mov	lr, #2
   139cc:	smull	r0, r2, r2, r3
   139d0:	add	r0, r2, r3
   139d4:	asr	r2, r3, #31
   139d8:	rsb	r2, r2, r0, asr #2
   139dc:	add	r2, r2, #1
   139e0:	b	12aa8 <dcngettext@plt+0x17dc>
   139e4:	ldr	r2, [pc, #-2628]	; 12fa8 <dcngettext@plt+0x1cdc>
   139e8:	add	r3, r6, #1888	; 0x760
   139ec:	sub	r2, r2, lr
   139f0:	cmp	r6, r2
   139f4:	movge	r0, #0
   139f8:	movlt	r0, #1
   139fc:	add	r3, r3, #12
   13a00:	cmp	r5, #0
   13a04:	str	r0, [sp, #36]	; 0x24
   13a08:	add	r3, r3, lr
   13a0c:	bne	137bc <dcngettext@plt+0x24f0>
   13a10:	ldr	r0, [sp, #1152]	; 0x480
   13a14:	cmp	r6, r2
   13a18:	movlt	r2, #0
   13a1c:	movge	r2, #1
   13a20:	cmp	r0, #43	; 0x2b
   13a24:	movne	r5, r0
   13a28:	movne	ip, #0
   13a2c:	movne	lr, #4
   13a30:	bne	12dd0 <dcngettext@plt+0x1b04>
   13a34:	mov	lr, #4
   13a38:	ldr	r0, [pc, #-2708]	; 12fac <dcngettext@plt+0x1ce0>
   13a3c:	b	1379c <dcngettext@plt+0x24d0>
   13a40:	cmn	r8, #1
   13a44:	beq	1209c <dcngettext@plt+0xdd0>
   13a48:	mov	r7, #0
   13a4c:	b	13090 <dcngettext@plt+0x1dc4>
   13a50:	ldr	r3, [sp, #1168]	; 0x490
   13a54:	mov	r9, #4
   13a58:	str	r3, [sp, #16]
   13a5c:	ldr	r3, [sp, #1164]	; 0x48c
   13a60:	mov	r5, #43	; 0x2b
   13a64:	str	r3, [sp, #12]
   13a68:	ldr	r3, [sp, #1160]	; 0x488
   13a6c:	mov	r0, r8
   13a70:	str	r3, [sp, #8]
   13a74:	stm	sp, {r5, r9}
   13a78:	ldr	r3, [sp, #40]	; 0x28
   13a7c:	ldr	r2, [sp, #32]
   13a80:	ldr	r1, [pc, #-2776]	; 12fb0 <dcngettext@plt+0x1ce4>
   13a84:	mov	r6, r8
   13a88:	bl	11f80 <dcngettext@plt+0xcb4>
   13a8c:	ldr	r8, [pc, #-2788]	; 12fb0 <dcngettext@plt+0x1ce4>
   13a90:	b	12e38 <dcngettext@plt+0x1b6c>
   13a94:	mov	r9, #32
   13a98:	add	r5, r5, #1
   13a9c:	mov	r1, sl
   13aa0:	mov	r0, r9
   13aa4:	bl	11254 <fputc@plt>
   13aa8:	cmp	r6, r5
   13aac:	bhi	13a98 <dcngettext@plt+0x27cc>
   13ab0:	b	13090 <dcngettext@plt+0x1dc4>
   13ab4:	cmp	ip, #0
   13ab8:	bne	13ad8 <dcngettext@plt+0x280c>
   13abc:	cmp	r0, #0
   13ac0:	bne	13b04 <dcngettext@plt+0x2838>
   13ac4:	ldr	r2, [sp, #36]	; 0x24
   13ac8:	mov	ip, #1
   13acc:	eor	r2, r2, #1
   13ad0:	mov	lr, #3
   13ad4:	b	12ac8 <dcngettext@plt+0x17fc>
   13ad8:	mov	r2, #100	; 0x64
   13adc:	ldr	lr, [pc, #-2864]	; 12fb4 <dcngettext@plt+0x1ce8>
   13ae0:	mul	r0, r2, r0
   13ae4:	ldr	r2, [sp, #36]	; 0x24
   13ae8:	mla	r3, lr, r3, r0
   13aec:	eor	r2, r2, #1
   13af0:	add	r3, r3, ip
   13af4:	mov	r0, #20
   13af8:	mov	ip, #1
   13afc:	mov	lr, #9
   13b00:	b	12ac8 <dcngettext@plt+0x17fc>
   13b04:	mov	ip, #100	; 0x64
   13b08:	ldr	r2, [sp, #36]	; 0x24
   13b0c:	mla	r3, ip, r3, r0
   13b10:	eor	r2, r2, #1
   13b14:	mov	ip, #1
   13b18:	mov	r0, #4
   13b1c:	mov	lr, #6
   13b20:	b	12ac8 <dcngettext@plt+0x17fc>
   13b24:	mov	ip, #100	; 0x64
   13b28:	ldr	r2, [sp, #36]	; 0x24
   13b2c:	mla	r3, ip, r3, r0
   13b30:	eor	r2, r2, #1
   13b34:	mov	ip, #1
   13b38:	mov	r0, #0
   13b3c:	mov	lr, #5
   13b40:	b	12ac8 <dcngettext@plt+0x17fc>
   13b44:	push	{r4, r5, lr}
   13b48:	sub	sp, sp, #36	; 0x24
   13b4c:	add	lr, sp, #32
   13b50:	ldr	r5, [sp, #48]	; 0x30
   13b54:	mov	ip, #0
   13b58:	mvn	r4, #0
   13b5c:	str	r3, [sp, #12]
   13b60:	strb	ip, [lr, #-1]!
   13b64:	mov	r3, ip
   13b68:	str	ip, [sp]
   13b6c:	str	lr, [sp, #8]
   13b70:	str	r5, [sp, #16]
   13b74:	str	r4, [sp, #4]
   13b78:	bl	11f80 <dcngettext@plt+0xcb4>
   13b7c:	add	sp, sp, #36	; 0x24
   13b80:	pop	{r4, r5, pc}
   13b84:	push	{r4, r5, r6, r7, r8, lr}
   13b88:	sub	sp, sp, #8
   13b8c:	ldmib	r0, {ip, lr}
   13b90:	mov	r4, r0
   13b94:	ldr	r5, [sp, #32]
   13b98:	cmp	lr, ip
   13b9c:	beq	13bb4 <dcngettext@plt+0x28e8>
   13ba0:	str	r5, [sp, #32]
   13ba4:	mov	r0, r4
   13ba8:	add	sp, sp, #8
   13bac:	pop	{r4, r5, r6, r7, r8, lr}
   13bb0:	b	111f4 <fseeko64@plt>
   13bb4:	ldr	lr, [r0, #20]
   13bb8:	ldr	ip, [r0, #16]
   13bbc:	cmp	lr, ip
   13bc0:	bne	13ba0 <dcngettext@plt+0x28d4>
   13bc4:	ldr	r8, [r0, #36]	; 0x24
   13bc8:	cmp	r8, #0
   13bcc:	bne	13ba0 <dcngettext@plt+0x28d4>
   13bd0:	mov	r6, r2
   13bd4:	mov	r7, r3
   13bd8:	bl	111d0 <fileno@plt>
   13bdc:	mov	r2, r6
   13be0:	mov	r3, r7
   13be4:	str	r5, [sp]
   13be8:	bl	110a4 <lseek64@plt>
   13bec:	mvn	r3, #0
   13bf0:	mvn	r2, #0
   13bf4:	cmp	r1, r3
   13bf8:	cmpeq	r0, r2
   13bfc:	beq	13c1c <dcngettext@plt+0x2950>
   13c00:	ldr	r3, [r4]
   13c04:	strd	r0, [r4, #80]	; 0x50
   13c08:	mov	r0, r8
   13c0c:	bic	r3, r3, #16
   13c10:	str	r3, [r4]
   13c14:	add	sp, sp, #8
   13c18:	pop	{r4, r5, r6, r7, r8, pc}
   13c1c:	mvn	r0, #0
   13c20:	b	13c14 <dcngettext@plt+0x2948>
   13c24:	push	{r4, r5, r6, r7, r8, lr}
   13c28:	cmp	r0, #2
   13c2c:	ldr	r4, [pc, #148]	; 13cc8 <dcngettext@plt+0x29fc>
   13c30:	mov	r5, #0
   13c34:	sub	sp, sp, #16
   13c38:	ldr	r6, [r4]
   13c3c:	str	r5, [r4]
   13c40:	beq	13c5c <dcngettext@plt+0x2990>
   13c44:	ldr	r3, [pc, #128]	; 13ccc <dcngettext@plt+0x2a00>
   13c48:	mov	r2, #0
   13c4c:	str	r6, [r4]
   13c50:	str	r2, [r3]
   13c54:	add	sp, sp, #16
   13c58:	pop	{r4, r5, r6, r7, r8, pc}
   13c5c:	mov	r8, r3
   13c60:	mov	r7, r2
   13c64:	str	r5, [sp]
   13c68:	ldr	r3, [pc, #96]	; 13cd0 <dcngettext@plt+0x2a04>
   13c6c:	ldr	r2, [pc, #96]	; 13cd4 <dcngettext@plt+0x2a08>
   13c70:	bl	1114c <getopt_long@plt>
   13c74:	cmn	r0, #1
   13c78:	beq	13c44 <dcngettext@plt+0x2978>
   13c7c:	cmp	r0, #104	; 0x68
   13c80:	beq	13cb8 <dcngettext@plt+0x29ec>
   13c84:	cmp	r0, #118	; 0x76
   13c88:	bne	13c44 <dcngettext@plt+0x2978>
   13c8c:	ldr	r3, [pc, #68]	; 13cd8 <dcngettext@plt+0x2a0c>
   13c90:	add	ip, sp, #48	; 0x30
   13c94:	mov	r2, r8
   13c98:	ldr	r0, [r3]
   13c9c:	mov	r1, r7
   13ca0:	str	ip, [sp]
   13ca4:	ldr	r3, [sp, #40]	; 0x28
   13ca8:	str	ip, [sp, #12]
   13cac:	bl	16690 <dcngettext@plt+0x53c4>
   13cb0:	mov	r0, r5
   13cb4:	bl	11170 <exit@plt>
   13cb8:	mov	r0, r5
   13cbc:	ldr	r3, [sp, #44]	; 0x2c
   13cc0:	blx	r3
   13cc4:	b	13c44 <dcngettext@plt+0x2978>
   13cc8:	muleq	r2, r0, r1
   13ccc:	andeq	r9, r2, r0, lsl #3
   13cd0:	andeq	r7, r1, r8, ror #21
   13cd4:	andeq	r7, r1, r8, lsl fp
   13cd8:	andeq	r9, r2, ip, lsl #3
   13cdc:	push	{r4, r5, r6, r7, r8, lr}
   13ce0:	sub	sp, sp, #16
   13ce4:	ldr	r5, [pc, #176]	; 13d9c <dcngettext@plt+0x2ad0>
   13ce8:	ldrb	r8, [sp, #44]	; 0x2c
   13cec:	ldr	r4, [pc, #172]	; 13da0 <dcngettext@plt+0x2ad4>
   13cf0:	ldr	lr, [pc, #172]	; 13da4 <dcngettext@plt+0x2ad8>
   13cf4:	cmp	r8, #0
   13cf8:	mov	r6, r2
   13cfc:	movne	r2, r5
   13d00:	mov	r5, #0
   13d04:	mov	ip, #1
   13d08:	moveq	r2, lr
   13d0c:	mov	r7, r3
   13d10:	str	r5, [sp]
   13d14:	ldr	r3, [pc, #140]	; 13da8 <dcngettext@plt+0x2adc>
   13d18:	ldr	r8, [r4]
   13d1c:	str	ip, [r4]
   13d20:	bl	1114c <getopt_long@plt>
   13d24:	cmn	r0, #1
   13d28:	beq	13d78 <dcngettext@plt+0x2aac>
   13d2c:	cmp	r0, #104	; 0x68
   13d30:	beq	13d84 <dcngettext@plt+0x2ab8>
   13d34:	cmp	r0, #118	; 0x76
   13d38:	bne	13d68 <dcngettext@plt+0x2a9c>
   13d3c:	ldr	r3, [pc, #104]	; 13dac <dcngettext@plt+0x2ae0>
   13d40:	add	ip, sp, #52	; 0x34
   13d44:	mov	r2, r7
   13d48:	ldr	r0, [r3]
   13d4c:	mov	r1, r6
   13d50:	str	ip, [sp]
   13d54:	ldr	r3, [sp, #40]	; 0x28
   13d58:	str	ip, [sp, #12]
   13d5c:	bl	16690 <dcngettext@plt+0x53c4>
   13d60:	mov	r0, r5
   13d64:	bl	11170 <exit@plt>
   13d68:	ldr	r3, [pc, #64]	; 13db0 <dcngettext@plt+0x2ae4>
   13d6c:	ldr	r0, [r3]
   13d70:	ldr	r3, [sp, #48]	; 0x30
   13d74:	blx	r3
   13d78:	str	r8, [r4]
   13d7c:	add	sp, sp, #16
   13d80:	pop	{r4, r5, r6, r7, r8, pc}
   13d84:	mov	r0, r5
   13d88:	ldr	r3, [sp, #48]	; 0x30
   13d8c:	blx	r3
   13d90:	str	r8, [r4]
   13d94:	add	sp, sp, #16
   13d98:	pop	{r4, r5, r6, r7, r8, pc}
   13d9c:	andeq	r7, r1, r4, lsr #17
   13da0:	muleq	r2, r0, r1
   13da4:	andeq	r7, r1, r8, lsl fp
   13da8:	andeq	r7, r1, r8, ror #21
   13dac:	andeq	r9, r2, ip, lsl #3
   13db0:	andeq	r9, r2, r4, lsr r1
   13db4:	push	{r4, r5, r6, lr}
   13db8:	subs	r4, r0, #0
   13dbc:	beq	13e30 <dcngettext@plt+0x2b64>
   13dc0:	mov	r1, #47	; 0x2f
   13dc4:	bl	1123c <strrchr@plt>
   13dc8:	subs	r5, r0, #0
   13dcc:	beq	13e1c <dcngettext@plt+0x2b50>
   13dd0:	add	r6, r5, #1
   13dd4:	sub	r3, r6, r4
   13dd8:	cmp	r3, #6
   13ddc:	ble	13e1c <dcngettext@plt+0x2b50>
   13de0:	mov	r2, #7
   13de4:	ldr	r1, [pc, #96]	; 13e4c <dcngettext@plt+0x2b80>
   13de8:	sub	r0, r5, #6
   13dec:	bl	112a8 <strncmp@plt>
   13df0:	cmp	r0, #0
   13df4:	bne	13e1c <dcngettext@plt+0x2b50>
   13df8:	mov	r2, #3
   13dfc:	ldr	r1, [pc, #76]	; 13e50 <dcngettext@plt+0x2b84>
   13e00:	mov	r0, r6
   13e04:	bl	112a8 <strncmp@plt>
   13e08:	cmp	r0, #0
   13e0c:	movne	r4, r6
   13e10:	ldreq	r3, [pc, #60]	; 13e54 <dcngettext@plt+0x2b88>
   13e14:	addeq	r4, r5, #4
   13e18:	streq	r4, [r3]
   13e1c:	ldr	r2, [pc, #52]	; 13e58 <dcngettext@plt+0x2b8c>
   13e20:	ldr	r3, [pc, #52]	; 13e5c <dcngettext@plt+0x2b90>
   13e24:	str	r4, [r2]
   13e28:	str	r4, [r3]
   13e2c:	pop	{r4, r5, r6, pc}
   13e30:	ldr	r3, [pc, #40]	; 13e60 <dcngettext@plt+0x2b94>
   13e34:	mov	r2, #55	; 0x37
   13e38:	mov	r1, #1
   13e3c:	ldr	r3, [r3]
   13e40:	ldr	r0, [pc, #28]	; 13e64 <dcngettext@plt+0x2b98>
   13e44:	bl	11098 <fwrite@plt>
   13e48:	bl	112b4 <abort@plt>
   13e4c:	andeq	r7, r1, r4, ror #22
   13e50:	andeq	r7, r1, ip, ror #22
   13e54:	andeq	r9, r2, r8, ror r1
   13e58:	andeq	r9, r2, r4, lsr #3
   13e5c:	andeq	r9, r2, ip, ror r1
   13e60:	andeq	r9, r2, r8, lsl #3
   13e64:	andeq	r7, r1, ip, lsr #22
   13e68:	push	{r4, r5, r6, lr}
   13e6c:	mov	r2, #48	; 0x30
   13e70:	mov	r4, r1
   13e74:	mov	r1, #0
   13e78:	mov	r5, r0
   13e7c:	bl	111ac <memset@plt>
   13e80:	cmp	r4, #10
   13e84:	beq	13e94 <dcngettext@plt+0x2bc8>
   13e88:	str	r4, [r5]
   13e8c:	mov	r0, r5
   13e90:	pop	{r4, r5, r6, pc}
   13e94:	bl	112b4 <abort@plt>
   13e98:	push	{r4, r5, r6, lr}
   13e9c:	mov	r4, r0
   13ea0:	mov	r5, r1
   13ea4:	bl	16f04 <dcngettext@plt+0x5c38>
   13ea8:	ldrb	r3, [r0]
   13eac:	bic	r3, r3, #32
   13eb0:	cmp	r3, #85	; 0x55
   13eb4:	bne	13f14 <dcngettext@plt+0x2c48>
   13eb8:	ldrb	r3, [r0, #1]
   13ebc:	bic	r3, r3, #32
   13ec0:	cmp	r3, #84	; 0x54
   13ec4:	bne	13f50 <dcngettext@plt+0x2c84>
   13ec8:	ldrb	r3, [r0, #2]
   13ecc:	bic	r3, r3, #32
   13ed0:	cmp	r3, #70	; 0x46
   13ed4:	bne	13f50 <dcngettext@plt+0x2c84>
   13ed8:	ldrb	r3, [r0, #3]
   13edc:	cmp	r3, #45	; 0x2d
   13ee0:	bne	13f50 <dcngettext@plt+0x2c84>
   13ee4:	ldrb	r3, [r0, #4]
   13ee8:	cmp	r3, #56	; 0x38
   13eec:	bne	13f50 <dcngettext@plt+0x2c84>
   13ef0:	ldrb	r3, [r0, #5]
   13ef4:	cmp	r3, #0
   13ef8:	bne	13f50 <dcngettext@plt+0x2c84>
   13efc:	ldrb	r2, [r4]
   13f00:	ldr	r3, [pc, #152]	; 13fa0 <dcngettext@plt+0x2cd4>
   13f04:	ldr	r0, [pc, #152]	; 13fa4 <dcngettext@plt+0x2cd8>
   13f08:	cmp	r2, #96	; 0x60
   13f0c:	movne	r0, r3
   13f10:	pop	{r4, r5, r6, pc}
   13f14:	cmp	r3, #71	; 0x47
   13f18:	bne	13f50 <dcngettext@plt+0x2c84>
   13f1c:	ldrb	r3, [r0, #1]
   13f20:	bic	r3, r3, #32
   13f24:	cmp	r3, #66	; 0x42
   13f28:	bne	13f50 <dcngettext@plt+0x2c84>
   13f2c:	ldrb	r3, [r0, #2]
   13f30:	cmp	r3, #49	; 0x31
   13f34:	bne	13f50 <dcngettext@plt+0x2c84>
   13f38:	ldrb	r3, [r0, #3]
   13f3c:	cmp	r3, #56	; 0x38
   13f40:	bne	13f50 <dcngettext@plt+0x2c84>
   13f44:	ldrb	r3, [r0, #4]
   13f48:	cmp	r3, #48	; 0x30
   13f4c:	beq	13f64 <dcngettext@plt+0x2c98>
   13f50:	ldr	r3, [pc, #80]	; 13fa8 <dcngettext@plt+0x2cdc>
   13f54:	cmp	r5, #9
   13f58:	ldr	r0, [pc, #76]	; 13fac <dcngettext@plt+0x2ce0>
   13f5c:	movne	r0, r3
   13f60:	pop	{r4, r5, r6, pc}
   13f64:	ldrb	r3, [r0, #5]
   13f68:	cmp	r3, #51	; 0x33
   13f6c:	bne	13f50 <dcngettext@plt+0x2c84>
   13f70:	ldrb	r3, [r0, #6]
   13f74:	cmp	r3, #48	; 0x30
   13f78:	bne	13f50 <dcngettext@plt+0x2c84>
   13f7c:	ldrb	r3, [r0, #7]
   13f80:	cmp	r3, #0
   13f84:	bne	13f50 <dcngettext@plt+0x2c84>
   13f88:	ldrb	r2, [r4]
   13f8c:	ldr	r3, [pc, #28]	; 13fb0 <dcngettext@plt+0x2ce4>
   13f90:	ldr	r0, [pc, #28]	; 13fb4 <dcngettext@plt+0x2ce8>
   13f94:	cmp	r2, #96	; 0x60
   13f98:	movne	r0, r3
   13f9c:	pop	{r4, r5, r6, pc}
   13fa0:	andeq	r7, r1, r8, asr #23
   13fa4:	andeq	r7, r1, r4, asr #23
   13fa8:	ldrdeq	r7, [r1], -r8
   13fac:	ldrdeq	r7, [r1], -r4
   13fb0:	ldrdeq	r7, [r1], -r0
   13fb4:	andeq	r7, r1, ip, asr #23
   13fb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fbc:	sub	sp, sp, #116	; 0x74
   13fc0:	mov	sl, r0
   13fc4:	str	r3, [sp, #24]
   13fc8:	mov	r3, #1
   13fcc:	mov	r8, r1
   13fd0:	str	r2, [sp, #56]	; 0x38
   13fd4:	str	r3, [sp, #36]	; 0x24
   13fd8:	bl	110b0 <__ctype_get_mb_cur_max@plt>
   13fdc:	ldr	r3, [sp, #156]	; 0x9c
   13fe0:	mov	fp, r8
   13fe4:	mov	r2, #0
   13fe8:	lsr	r3, r3, #1
   13fec:	and	r3, r3, #1
   13ff0:	str	r2, [sp, #68]	; 0x44
   13ff4:	str	r3, [sp, #28]
   13ff8:	str	r2, [sp, #40]	; 0x28
   13ffc:	str	r2, [sp, #44]	; 0x2c
   14000:	str	r2, [sp, #52]	; 0x34
   14004:	str	r2, [sp, #64]	; 0x40
   14008:	str	r2, [sp, #72]	; 0x48
   1400c:	str	sl, [sp, #32]
   14010:	str	r0, [sp, #76]	; 0x4c
   14014:	ldr	r3, [sp, #152]	; 0x98
   14018:	cmp	r3, #10
   1401c:	ldrls	pc, [pc, r3, lsl #2]
   14020:	b	151e0 <dcngettext@plt+0x3f14>
   14024:	andeq	r4, r1, r0, asr r0
   14028:	andeq	r4, r1, r8, lsr r3
   1402c:	andeq	r4, r1, ip, asr r3
   14030:	andeq	r4, r1, r0, lsl #7
   14034:	andeq	r4, r1, ip, lsr #9
   14038:	andeq	r4, r1, r0, lsl #9
   1403c:	andeq	r4, r1, r8, asr r4
   14040:	muleq	r1, r4, r3
   14044:	andeq	r4, r1, ip, lsr #7
   14048:	andeq	r4, r1, ip, lsr #7
   1404c:	andeq	r4, r1, ip, lsr #7
   14050:	mov	r3, #0
   14054:	mov	r7, r3
   14058:	str	r3, [sp, #28]
   1405c:	ldr	r3, [sp, #44]	; 0x2c
   14060:	mov	sl, #0
   14064:	eor	r3, r3, #1
   14068:	str	r3, [sp, #60]	; 0x3c
   1406c:	ldr	r3, [sp, #24]
   14070:	cmn	r3, #1
   14074:	beq	145d8 <dcngettext@plt+0x330c>
   14078:	ldr	r3, [sp, #24]
   1407c:	subs	r5, r3, sl
   14080:	movne	r5, #1
   14084:	cmp	r5, #0
   14088:	beq	145f0 <dcngettext@plt+0x3324>
   1408c:	ldr	r3, [sp, #152]	; 0x98
   14090:	ldr	r8, [sp, #44]	; 0x2c
   14094:	cmp	r3, #2
   14098:	moveq	r8, #0
   1409c:	andne	r8, r8, #1
   140a0:	ldr	r3, [sp, #52]	; 0x34
   140a4:	adds	r9, r3, #0
   140a8:	movne	r9, #1
   140ac:	ands	r6, r9, r8
   140b0:	beq	14a58 <dcngettext@plt+0x378c>
   140b4:	ldr	r2, [sp, #52]	; 0x34
   140b8:	ldr	r1, [sp, #24]
   140bc:	cmp	r2, #1
   140c0:	mov	r3, r2
   140c4:	movls	r3, #0
   140c8:	movhi	r3, #1
   140cc:	cmn	r1, #1
   140d0:	movne	r3, #0
   140d4:	cmp	r3, #0
   140d8:	add	r4, sl, r2
   140dc:	beq	140ec <dcngettext@plt+0x2e20>
   140e0:	ldr	r0, [sp, #56]	; 0x38
   140e4:	bl	1117c <strlen@plt>
   140e8:	str	r0, [sp, #24]
   140ec:	ldr	r3, [sp, #24]
   140f0:	cmp	r3, r4
   140f4:	ldr	r3, [sp, #56]	; 0x38
   140f8:	add	r3, r3, sl
   140fc:	str	r3, [sp, #48]	; 0x30
   14100:	bcc	14a64 <dcngettext@plt+0x3798>
   14104:	mov	r0, r3
   14108:	ldr	r2, [sp, #52]	; 0x34
   1410c:	ldr	r1, [sp, #64]	; 0x40
   14110:	bl	1102c <memcmp@plt>
   14114:	cmp	r0, #0
   14118:	bne	14a64 <dcngettext@plt+0x3798>
   1411c:	ldr	r3, [sp, #28]
   14120:	cmp	r3, #0
   14124:	bne	152e0 <dcngettext@plt+0x4014>
   14128:	ldr	r3, [sp, #48]	; 0x30
   1412c:	ldrb	r4, [r3]
   14130:	cmp	r4, #126	; 0x7e
   14134:	ldrls	pc, [pc, r4, lsl #2]
   14138:	b	149f8 <dcngettext@plt+0x372c>
   1413c:	andeq	r4, r1, ip, lsl r8
   14140:	strdeq	r4, [r1], -r8
   14144:	strdeq	r4, [r1], -r8
   14148:	strdeq	r4, [r1], -r8
   1414c:	strdeq	r4, [r1], -r8
   14150:	strdeq	r4, [r1], -r8
   14154:	strdeq	r4, [r1], -r8
   14158:	andeq	r4, r1, r0, lsl #16
   1415c:	andeq	r4, r1, r4, ror #15
   14160:	andeq	r4, r1, r0, ror #19
   14164:	andeq	r4, r1, r4, asr #14
   14168:	andeq	r4, r1, r8, lsr #14
   1416c:			; <UNDEFINED> instruction: 0x000149bc
   14170:	muleq	r1, r8, r9
   14174:	strdeq	r4, [r1], -r8
   14178:	strdeq	r4, [r1], -r8
   1417c:	strdeq	r4, [r1], -r8
   14180:	strdeq	r4, [r1], -r8
   14184:	strdeq	r4, [r1], -r8
   14188:	strdeq	r4, [r1], -r8
   1418c:	strdeq	r4, [r1], -r8
   14190:	strdeq	r4, [r1], -r8
   14194:	strdeq	r4, [r1], -r8
   14198:	strdeq	r4, [r1], -r8
   1419c:	strdeq	r4, [r1], -r8
   141a0:	strdeq	r4, [r1], -r8
   141a4:	strdeq	r4, [r1], -r8
   141a8:	strdeq	r4, [r1], -r8
   141ac:	strdeq	r4, [r1], -r8
   141b0:	strdeq	r4, [r1], -r8
   141b4:	strdeq	r4, [r1], -r8
   141b8:	strdeq	r4, [r1], -r8
   141bc:	ldrdeq	r4, [r1], -r8
   141c0:	andeq	r4, r1, ip, lsl #18
   141c4:	andeq	r4, r1, ip, lsl #18
   141c8:	andeq	r4, r1, ip, lsl r5
   141cc:	andeq	r4, r1, ip, lsl #18
   141d0:	andeq	r4, r1, r4, lsr #19
   141d4:	andeq	r4, r1, ip, lsl #18
   141d8:	andeq	r4, r1, r8, ror r9
   141dc:	andeq	r4, r1, ip, lsl #18
   141e0:	andeq	r4, r1, ip, lsl #18
   141e4:	andeq	r4, r1, ip, lsl #18
   141e8:	andeq	r4, r1, r4, lsr #19
   141ec:	andeq	r4, r1, r4, lsr #19
   141f0:	andeq	r4, r1, r4, lsr #19
   141f4:	andeq	r4, r1, r4, lsr #19
   141f8:	andeq	r4, r1, r4, lsr #19
   141fc:	andeq	r4, r1, r4, lsr #19
   14200:	andeq	r4, r1, r4, lsr #19
   14204:	andeq	r4, r1, r4, lsr #19
   14208:	andeq	r4, r1, r4, lsr #19
   1420c:	andeq	r4, r1, r4, lsr #19
   14210:	andeq	r4, r1, r4, lsr #19
   14214:	andeq	r4, r1, r4, lsr #19
   14218:	andeq	r4, r1, r4, lsr #19
   1421c:	andeq	r4, r1, r4, lsr #19
   14220:	andeq	r4, r1, r4, lsr #19
   14224:	andeq	r4, r1, r4, lsr #19
   14228:	andeq	r4, r1, ip, lsl #18
   1422c:	andeq	r4, r1, ip, lsl #18
   14230:	andeq	r4, r1, ip, lsl #18
   14234:	andeq	r4, r1, ip, lsl #18
   14238:	andeq	r4, r1, r8, asr #18
   1423c:	strdeq	r4, [r1], -r8
   14240:	andeq	r4, r1, r4, lsr #19
   14244:	andeq	r4, r1, r4, lsr #19
   14248:	andeq	r4, r1, r4, lsr #19
   1424c:	andeq	r4, r1, r4, lsr #19
   14250:	andeq	r4, r1, r4, lsr #19
   14254:	andeq	r4, r1, r4, lsr #19
   14258:	andeq	r4, r1, r4, lsr #19
   1425c:	andeq	r4, r1, r4, lsr #19
   14260:	andeq	r4, r1, r4, lsr #19
   14264:	andeq	r4, r1, r4, lsr #19
   14268:	andeq	r4, r1, r4, lsr #19
   1426c:	andeq	r4, r1, r4, lsr #19
   14270:	andeq	r4, r1, r4, lsr #19
   14274:	andeq	r4, r1, r4, lsr #19
   14278:	andeq	r4, r1, r4, lsr #19
   1427c:	andeq	r4, r1, r4, lsr #19
   14280:	andeq	r4, r1, r4, lsr #19
   14284:	andeq	r4, r1, r4, lsr #19
   14288:	andeq	r4, r1, r4, lsr #19
   1428c:	andeq	r4, r1, r4, lsr #19
   14290:	andeq	r4, r1, r4, lsr #19
   14294:	andeq	r4, r1, r4, lsr #19
   14298:	andeq	r4, r1, r4, lsr #19
   1429c:	andeq	r4, r1, r4, lsr #19
   142a0:	andeq	r4, r1, r4, lsr #19
   142a4:	andeq	r4, r1, r4, lsr #19
   142a8:	andeq	r4, r1, ip, lsl #18
   142ac:	andeq	r4, r1, r8, ror #12
   142b0:	andeq	r4, r1, r4, lsr #19
   142b4:	andeq	r4, r1, ip, lsl #18
   142b8:	andeq	r4, r1, r4, lsr #19
   142bc:	andeq	r4, r1, ip, lsl #18
   142c0:	andeq	r4, r1, r4, lsr #19
   142c4:	andeq	r4, r1, r4, lsr #19
   142c8:	andeq	r4, r1, r4, lsr #19
   142cc:	andeq	r4, r1, r4, lsr #19
   142d0:	andeq	r4, r1, r4, lsr #19
   142d4:	andeq	r4, r1, r4, lsr #19
   142d8:	andeq	r4, r1, r4, lsr #19
   142dc:	andeq	r4, r1, r4, lsr #19
   142e0:	andeq	r4, r1, r4, lsr #19
   142e4:	andeq	r4, r1, r4, lsr #19
   142e8:	andeq	r4, r1, r4, lsr #19
   142ec:	andeq	r4, r1, r4, lsr #19
   142f0:	andeq	r4, r1, r4, lsr #19
   142f4:	andeq	r4, r1, r4, lsr #19
   142f8:	andeq	r4, r1, r4, lsr #19
   142fc:	andeq	r4, r1, r4, lsr #19
   14300:	andeq	r4, r1, r4, lsr #19
   14304:	andeq	r4, r1, r4, lsr #19
   14308:	andeq	r4, r1, r4, lsr #19
   1430c:	andeq	r4, r1, r4, lsr #19
   14310:	andeq	r4, r1, r4, lsr #19
   14314:	andeq	r4, r1, r4, lsr #19
   14318:	andeq	r4, r1, r4, lsr #19
   1431c:	andeq	r4, r1, r4, lsr #19
   14320:	andeq	r4, r1, r4, lsr #19
   14324:	andeq	r4, r1, r4, lsr #19
   14328:	strdeq	r4, [r1], -ip
   1432c:	andeq	r4, r1, ip, lsl #18
   14330:	strdeq	r4, [r1], -ip
   14334:	andeq	r4, r1, ip, lsl r5
   14338:	mov	r3, #1
   1433c:	str	r3, [sp, #28]
   14340:	str	r3, [sp, #52]	; 0x34
   14344:	ldr	r3, [pc, #4000]	; 152ec <dcngettext@plt+0x4020>
   14348:	mov	r7, #0
   1434c:	str	r3, [sp, #64]	; 0x40
   14350:	mov	r3, #2
   14354:	str	r3, [sp, #152]	; 0x98
   14358:	b	1405c <dcngettext@plt+0x2d90>
   1435c:	ldr	r3, [sp, #28]
   14360:	cmp	r3, #0
   14364:	beq	144c0 <dcngettext@plt+0x31f4>
   14368:	mov	r3, #1
   1436c:	str	r3, [sp, #52]	; 0x34
   14370:	ldr	r3, [pc, #3956]	; 152ec <dcngettext@plt+0x4020>
   14374:	mov	r7, #0
   14378:	str	r3, [sp, #64]	; 0x40
   1437c:	b	1405c <dcngettext@plt+0x2d90>
   14380:	mov	r3, #1
   14384:	str	r3, [sp, #44]	; 0x2c
   14388:	str	r3, [sp, #52]	; 0x34
   1438c:	str	r3, [sp, #28]
   14390:	b	14344 <dcngettext@plt+0x3078>
   14394:	mov	r3, #0
   14398:	str	r3, [sp, #28]
   1439c:	mov	r3, #1
   143a0:	str	r3, [sp, #44]	; 0x2c
   143a4:	mov	r7, #0
   143a8:	b	1405c <dcngettext@plt+0x2d90>
   143ac:	ldr	r3, [sp, #152]	; 0x98
   143b0:	cmp	r3, #10
   143b4:	beq	143f8 <dcngettext@plt+0x312c>
   143b8:	mov	r2, #5
   143bc:	ldr	r1, [pc, #3884]	; 152f0 <dcngettext@plt+0x4024>
   143c0:	mov	r0, #0
   143c4:	bl	11044 <dcgettext@plt>
   143c8:	ldr	r2, [pc, #3872]	; 152f0 <dcngettext@plt+0x4024>
   143cc:	cmp	r0, r2
   143d0:	str	r0, [sp, #164]	; 0xa4
   143d4:	beq	153dc <dcngettext@plt+0x4110>
   143d8:	mov	r2, #5
   143dc:	ldr	r1, [pc, #3848]	; 152ec <dcngettext@plt+0x4020>
   143e0:	mov	r0, #0
   143e4:	bl	11044 <dcgettext@plt>
   143e8:	ldr	r2, [pc, #3836]	; 152ec <dcngettext@plt+0x4020>
   143ec:	cmp	r0, r2
   143f0:	str	r0, [sp, #168]	; 0xa8
   143f4:	beq	153cc <dcngettext@plt+0x4100>
   143f8:	ldr	r7, [sp, #28]
   143fc:	cmp	r7, #0
   14400:	movne	r7, #0
   14404:	bne	14438 <dcngettext@plt+0x316c>
   14408:	ldr	r3, [sp, #164]	; 0xa4
   1440c:	ldrb	r3, [r3]
   14410:	cmp	r3, #0
   14414:	beq	153ec <dcngettext@plt+0x4120>
   14418:	ldr	r2, [sp, #164]	; 0xa4
   1441c:	ldr	r1, [sp, #32]
   14420:	cmp	fp, r7
   14424:	strbhi	r3, [r1, r7]
   14428:	ldrb	r3, [r2, #1]!
   1442c:	add	r7, r7, #1
   14430:	cmp	r3, #0
   14434:	bne	14420 <dcngettext@plt+0x3154>
   14438:	ldr	r0, [sp, #168]	; 0xa8
   1443c:	bl	1117c <strlen@plt>
   14440:	ldr	r3, [sp, #168]	; 0xa8
   14444:	str	r3, [sp, #64]	; 0x40
   14448:	mov	r3, #1
   1444c:	str	r3, [sp, #44]	; 0x2c
   14450:	str	r0, [sp, #52]	; 0x34
   14454:	b	1405c <dcngettext@plt+0x2d90>
   14458:	mov	r3, #1
   1445c:	str	r3, [sp, #44]	; 0x2c
   14460:	str	r3, [sp, #52]	; 0x34
   14464:	str	r3, [sp, #28]
   14468:	ldr	r3, [pc, #3716]	; 152f4 <dcngettext@plt+0x4028>
   1446c:	mov	r7, #0
   14470:	str	r3, [sp, #64]	; 0x40
   14474:	mov	r3, #5
   14478:	str	r3, [sp, #152]	; 0x98
   1447c:	b	1405c <dcngettext@plt+0x2d90>
   14480:	ldr	r3, [sp, #28]
   14484:	cmp	r3, #0
   14488:	beq	15188 <dcngettext@plt+0x3ebc>
   1448c:	ldr	r3, [sp, #28]
   14490:	mov	r7, #0
   14494:	str	r3, [sp, #44]	; 0x2c
   14498:	mov	r3, #1
   1449c:	str	r3, [sp, #52]	; 0x34
   144a0:	ldr	r3, [pc, #3660]	; 152f4 <dcngettext@plt+0x4028>
   144a4:	str	r3, [sp, #64]	; 0x40
   144a8:	b	1405c <dcngettext@plt+0x2d90>
   144ac:	ldr	r3, [sp, #28]
   144b0:	cmp	r3, #0
   144b4:	mov	r3, #1
   144b8:	streq	r3, [sp, #44]	; 0x2c
   144bc:	bne	14340 <dcngettext@plt+0x3074>
   144c0:	cmp	fp, #0
   144c4:	beq	151b8 <dcngettext@plt+0x3eec>
   144c8:	ldr	r3, [sp, #32]
   144cc:	mov	r2, #39	; 0x27
   144d0:	mov	r7, #1
   144d4:	strb	r2, [r3]
   144d8:	mov	r3, #0
   144dc:	str	r3, [sp, #28]
   144e0:	mov	r3, #1
   144e4:	str	r3, [sp, #52]	; 0x34
   144e8:	ldr	r3, [pc, #3580]	; 152ec <dcngettext@plt+0x4020>
   144ec:	str	r3, [sp, #64]	; 0x40
   144f0:	mov	r3, #2
   144f4:	str	r3, [sp, #152]	; 0x98
   144f8:	b	1405c <dcngettext@plt+0x2d90>
   144fc:	ldr	r3, [sp, #24]
   14500:	cmn	r3, #1
   14504:	beq	1511c <dcngettext@plt+0x3e50>
   14508:	ldr	r3, [sp, #24]
   1450c:	subs	r3, r3, #1
   14510:	movne	r3, #1
   14514:	cmp	r3, #0
   14518:	bne	14524 <dcngettext@plt+0x3258>
   1451c:	cmp	sl, #0
   14520:	beq	14910 <dcngettext@plt+0x3644>
   14524:	ldr	r3, [sp, #152]	; 0x98
   14528:	mov	r5, #0
   1452c:	sub	r2, r3, #2
   14530:	mov	r8, r5
   14534:	clz	r2, r2
   14538:	lsr	r2, r2, #5
   1453c:	ldr	r3, [sp, #60]	; 0x3c
   14540:	ldr	r1, [sp, #28]
   14544:	orr	r3, r2, r3
   14548:	eor	r3, r3, #1
   1454c:	orr	r3, r1, r3
   14550:	tst	r3, #255	; 0xff
   14554:	bne	14c80 <dcngettext@plt+0x39b4>
   14558:	cmp	r6, #0
   1455c:	bne	146ac <dcngettext@plt+0x33e0>
   14560:	ldr	r3, [sp, #40]	; 0x28
   14564:	eor	r8, r8, #1
   14568:	and	r8, r8, r3
   1456c:	add	sl, sl, #1
   14570:	uxtb	r6, r8
   14574:	cmp	r6, #0
   14578:	beq	145ac <dcngettext@plt+0x32e0>
   1457c:	cmp	fp, r7
   14580:	movhi	r2, #39	; 0x27
   14584:	ldrhi	r3, [sp, #32]
   14588:	strbhi	r2, [r3, r7]
   1458c:	add	r3, r7, #1
   14590:	cmp	fp, r3
   14594:	movhi	r1, #39	; 0x27
   14598:	ldrhi	r2, [sp, #32]
   1459c:	add	r7, r7, #2
   145a0:	strbhi	r1, [r2, r3]
   145a4:	mov	r3, #0
   145a8:	str	r3, [sp, #40]	; 0x28
   145ac:	cmp	r7, fp
   145b0:	ldrcc	r3, [sp, #32]
   145b4:	strbcc	r4, [r3, r7]
   145b8:	ldr	r3, [sp, #36]	; 0x24
   145bc:	cmp	r5, #0
   145c0:	moveq	r3, #0
   145c4:	str	r3, [sp, #36]	; 0x24
   145c8:	ldr	r3, [sp, #24]
   145cc:	add	r7, r7, #1
   145d0:	cmn	r3, #1
   145d4:	bne	14078 <dcngettext@plt+0x2dac>
   145d8:	ldr	r3, [sp, #56]	; 0x38
   145dc:	ldrb	r5, [r3, sl]
   145e0:	adds	r5, r5, #0
   145e4:	movne	r5, #1
   145e8:	cmp	r5, #0
   145ec:	bne	1408c <dcngettext@plt+0x2dc0>
   145f0:	ldr	r3, [sp, #152]	; 0x98
   145f4:	ldr	r1, [sp, #28]
   145f8:	sub	r3, r3, #2
   145fc:	clz	r3, r3
   14600:	lsr	r3, r3, #5
   14604:	and	r9, r1, r3
   14608:	cmp	r7, #0
   1460c:	movne	r2, #0
   14610:	andeq	r2, r9, #1
   14614:	cmp	r2, #0
   14618:	bne	14ff4 <dcngettext@plt+0x3d28>
   1461c:	eor	r2, r1, #1
   14620:	ands	r3, r3, r2
   14624:	beq	154b0 <dcngettext@plt+0x41e4>
   14628:	ldr	r2, [sp, #68]	; 0x44
   1462c:	cmp	r2, #0
   14630:	beq	1549c <dcngettext@plt+0x41d0>
   14634:	ldr	r3, [sp, #36]	; 0x24
   14638:	cmp	r3, #0
   1463c:	bne	15454 <dcngettext@plt+0x4188>
   14640:	ldr	r2, [sp, #72]	; 0x48
   14644:	clz	r3, fp
   14648:	cmp	r2, #0
   1464c:	lsr	r3, r3, #5
   14650:	moveq	r3, #0
   14654:	cmp	r3, #0
   14658:	beq	153f4 <dcngettext@plt+0x4128>
   1465c:	str	r3, [sp, #68]	; 0x44
   14660:	ldr	fp, [sp, #72]	; 0x48
   14664:	b	14014 <dcngettext@plt+0x2d48>
   14668:	ldr	r3, [sp, #152]	; 0x98
   1466c:	cmp	r3, #2
   14670:	beq	14cc4 <dcngettext@plt+0x39f8>
   14674:	ldr	r3, [sp, #44]	; 0x2c
   14678:	ldr	r2, [sp, #28]
   1467c:	and	r2, r3, r2
   14680:	ands	r2, r9, r2
   14684:	bne	14cd0 <dcngettext@plt+0x3a04>
   14688:	mov	r4, #92	; 0x5c
   1468c:	mov	r3, r4
   14690:	ldr	r1, [sp, #44]	; 0x2c
   14694:	cmp	r1, #0
   14698:	moveq	r5, #0
   1469c:	moveq	r8, r1
   146a0:	beq	1453c <dcngettext@plt+0x3270>
   146a4:	mov	r4, r3
   146a8:	mov	r5, #0
   146ac:	ldr	r3, [sp, #28]
   146b0:	cmp	r3, #0
   146b4:	bne	14cb8 <dcngettext@plt+0x39ec>
   146b8:	ldr	r3, [sp, #40]	; 0x28
   146bc:	eor	r9, r3, #1
   146c0:	and	r9, r9, r2
   146c4:	ands	r9, r9, #255	; 0xff
   146c8:	beq	1470c <dcngettext@plt+0x3440>
   146cc:	cmp	fp, r7
   146d0:	movhi	r2, #39	; 0x27
   146d4:	ldrhi	r3, [sp, #32]
   146d8:	str	r9, [sp, #40]	; 0x28
   146dc:	strbhi	r2, [r3, r7]
   146e0:	add	r3, r7, #1
   146e4:	cmp	fp, r3
   146e8:	movhi	r1, #36	; 0x24
   146ec:	ldrhi	r2, [sp, #32]
   146f0:	strbhi	r1, [r2, r3]
   146f4:	add	r3, r7, #2
   146f8:	cmp	fp, r3
   146fc:	add	r7, r7, #3
   14700:	ldrhi	r2, [sp, #32]
   14704:	movhi	r1, #39	; 0x27
   14708:	strbhi	r1, [r2, r3]
   1470c:	cmp	fp, r7
   14710:	movhi	r2, #92	; 0x5c
   14714:	ldrhi	r3, [sp, #32]
   14718:	add	sl, sl, #1
   1471c:	strbhi	r2, [r3, r7]
   14720:	add	r7, r7, #1
   14724:	b	145ac <dcngettext@plt+0x32e0>
   14728:	ldr	r3, [sp, #152]	; 0x98
   1472c:	mov	r4, #11
   14730:	sub	r2, r3, #2
   14734:	mov	r3, #118	; 0x76
   14738:	clz	r2, r2
   1473c:	lsr	r2, r2, #5
   14740:	b	14690 <dcngettext@plt+0x33c4>
   14744:	mov	r4, #10
   14748:	mov	r3, #110	; 0x6e
   1474c:	ldr	r2, [sp, #152]	; 0x98
   14750:	ldr	r1, [sp, #28]
   14754:	sub	r2, r2, #2
   14758:	clz	r2, r2
   1475c:	lsr	r2, r2, #5
   14760:	ands	r1, r1, r2
   14764:	beq	14690 <dcngettext@plt+0x33c4>
   14768:	ldr	sl, [sp, #32]
   1476c:	mov	r8, fp
   14770:	mov	r2, r1
   14774:	mov	r3, #2
   14778:	str	r3, [sp, #152]	; 0x98
   1477c:	ldr	r9, [sp, #44]	; 0x2c
   14780:	ldr	r3, [sp, #152]	; 0x98
   14784:	and	r9, r9, r2
   14788:	tst	r9, #255	; 0xff
   1478c:	movne	r3, #4
   14790:	str	r3, [sp, #152]	; 0x98
   14794:	ldr	r3, [sp, #156]	; 0x9c
   14798:	mov	ip, #0
   1479c:	bic	r3, r3, #2
   147a0:	str	r3, [sp, #4]
   147a4:	ldr	r3, [sp, #168]	; 0xa8
   147a8:	ldr	r2, [sp, #56]	; 0x38
   147ac:	str	r3, [sp, #16]
   147b0:	ldr	r3, [sp, #164]	; 0xa4
   147b4:	mov	r1, r8
   147b8:	str	r3, [sp, #12]
   147bc:	ldr	r3, [sp, #152]	; 0x98
   147c0:	mov	r0, sl
   147c4:	str	r3, [sp]
   147c8:	str	ip, [sp, #8]
   147cc:	ldr	r3, [sp, #24]
   147d0:	bl	13fb8 <dcngettext@plt+0x2cec>
   147d4:	mov	fp, r0
   147d8:	mov	r0, fp
   147dc:	add	sp, sp, #116	; 0x74
   147e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147e4:	ldr	r3, [sp, #152]	; 0x98
   147e8:	mov	r4, #8
   147ec:	sub	r2, r3, #2
   147f0:	mov	r3, #98	; 0x62
   147f4:	clz	r2, r2
   147f8:	lsr	r2, r2, #5
   147fc:	b	14690 <dcngettext@plt+0x33c4>
   14800:	ldr	r3, [sp, #152]	; 0x98
   14804:	mov	r4, #7
   14808:	sub	r2, r3, #2
   1480c:	mov	r3, #97	; 0x61
   14810:	clz	r2, r2
   14814:	lsr	r2, r2, #5
   14818:	b	14690 <dcngettext@plt+0x33c4>
   1481c:	ldr	r3, [sp, #44]	; 0x2c
   14820:	cmp	r3, #0
   14824:	beq	15008 <dcngettext@plt+0x3d3c>
   14828:	ldr	r3, [sp, #28]
   1482c:	cmp	r3, #0
   14830:	bne	152e0 <dcngettext@plt+0x4014>
   14834:	ldr	r3, [sp, #152]	; 0x98
   14838:	sub	r2, r3, #2
   1483c:	ldr	r3, [sp, #40]	; 0x28
   14840:	clz	r2, r2
   14844:	eor	r3, r3, #1
   14848:	lsr	r2, r2, #5
   1484c:	ands	r3, r2, r3
   14850:	moveq	r1, r7
   14854:	beq	14898 <dcngettext@plt+0x35cc>
   14858:	cmp	fp, r7
   1485c:	movhi	r0, #39	; 0x27
   14860:	ldrhi	r1, [sp, #32]
   14864:	str	r3, [sp, #40]	; 0x28
   14868:	strbhi	r0, [r1, r7]
   1486c:	add	r1, r7, #1
   14870:	cmp	fp, r1
   14874:	movhi	ip, #36	; 0x24
   14878:	ldrhi	r0, [sp, #32]
   1487c:	strbhi	ip, [r0, r1]
   14880:	add	r1, r7, #2
   14884:	cmp	fp, r1
   14888:	movhi	ip, #39	; 0x27
   1488c:	ldrhi	r0, [sp, #32]
   14890:	strbhi	ip, [r0, r1]
   14894:	add	r1, r7, #3
   14898:	cmp	fp, r1
   1489c:	movhi	r0, #92	; 0x5c
   148a0:	ldrhi	r3, [sp, #32]
   148a4:	add	r7, r1, #1
   148a8:	strbhi	r0, [r3, r1]
   148ac:	cmp	r8, #0
   148b0:	beq	151f4 <dcngettext@plt+0x3f28>
   148b4:	ldr	r0, [sp, #24]
   148b8:	add	r3, sl, #1
   148bc:	cmp	r3, r0
   148c0:	bcs	15130 <dcngettext@plt+0x3e64>
   148c4:	ldr	r0, [sp, #56]	; 0x38
   148c8:	ldrb	r3, [r0, r3]
   148cc:	sub	r3, r3, #48	; 0x30
   148d0:	cmp	r3, #9
   148d4:	bhi	15130 <dcngettext@plt+0x3e64>
   148d8:	cmp	fp, r7
   148dc:	movhi	r3, #48	; 0x30
   148e0:	ldrhi	r0, [sp, #32]
   148e4:	ldr	r5, [sp, #28]
   148e8:	mov	r4, #48	; 0x30
   148ec:	strbhi	r3, [r0, r7]
   148f0:	add	r3, r1, #2
   148f4:	cmp	fp, r3
   148f8:	movhi	r0, #48	; 0x30
   148fc:	ldrhi	ip, [sp, #32]
   14900:	add	r7, r1, #3
   14904:	strbhi	r0, [ip, r3]
   14908:	b	1453c <dcngettext@plt+0x3270>
   1490c:	mov	r5, #0
   14910:	ldr	r3, [sp, #152]	; 0x98
   14914:	sub	r2, r3, #2
   14918:	ldr	r3, [sp, #28]
   1491c:	clz	r2, r2
   14920:	lsr	r2, r2, #5
   14924:	ands	r8, r3, r2
   14928:	beq	1453c <dcngettext@plt+0x3270>
   1492c:	mov	r3, r8
   14930:	mov	r2, r3
   14934:	mov	r3, #2
   14938:	ldr	sl, [sp, #32]
   1493c:	mov	r8, fp
   14940:	str	r3, [sp, #152]	; 0x98
   14944:	b	1477c <dcngettext@plt+0x34b0>
   14948:	ldr	r3, [sp, #152]	; 0x98
   1494c:	cmp	r3, #2
   14950:	beq	15074 <dcngettext@plt+0x3da8>
   14954:	cmp	r3, #5
   14958:	beq	15034 <dcngettext@plt+0x3d68>
   1495c:	mov	r5, #0
   14960:	sub	r2, r3, #2
   14964:	mov	r8, r5
   14968:	clz	r2, r2
   1496c:	mov	r4, #63	; 0x3f
   14970:	lsr	r2, r2, #5
   14974:	b	1453c <dcngettext@plt+0x3270>
   14978:	ldr	r3, [sp, #152]	; 0x98
   1497c:	cmp	r3, #2
   14980:	beq	15094 <dcngettext@plt+0x3dc8>
   14984:	mov	r2, #0
   14988:	str	r5, [sp, #68]	; 0x44
   1498c:	mov	r8, r2
   14990:	mov	r4, #39	; 0x27
   14994:	b	1453c <dcngettext@plt+0x3270>
   14998:	mov	r4, #13
   1499c:	mov	r3, #114	; 0x72
   149a0:	b	1474c <dcngettext@plt+0x3480>
   149a4:	ldr	r3, [sp, #152]	; 0x98
   149a8:	mov	r8, #0
   149ac:	sub	r2, r3, #2
   149b0:	clz	r2, r2
   149b4:	lsr	r2, r2, #5
   149b8:	b	1453c <dcngettext@plt+0x3270>
   149bc:	ldr	r3, [sp, #152]	; 0x98
   149c0:	mov	r4, #12
   149c4:	sub	r2, r3, #2
   149c8:	mov	r3, #102	; 0x66
   149cc:	clz	r2, r2
   149d0:	lsr	r2, r2, #5
   149d4:	b	14690 <dcngettext@plt+0x33c4>
   149d8:	mov	r5, r6
   149dc:	b	14910 <dcngettext@plt+0x3644>
   149e0:	ldr	r3, [sp, #152]	; 0x98
   149e4:	sub	r2, r3, #2
   149e8:	mov	r3, #116	; 0x74
   149ec:	clz	r2, r2
   149f0:	lsr	r2, r2, #5
   149f4:	b	14690 <dcngettext@plt+0x33c4>
   149f8:	ldr	r8, [sp, #76]	; 0x4c
   149fc:	cmp	r8, #1
   14a00:	bne	14eb0 <dcngettext@plt+0x3be4>
   14a04:	bl	11164 <__ctype_b_loc@plt>
   14a08:	sxth	r3, r4
   14a0c:	mov	ip, r8
   14a10:	lsl	r3, r3, #1
   14a14:	ldr	r2, [r0]
   14a18:	ldrh	r3, [r2, r3]
   14a1c:	and	r3, r3, #16384	; 0x4000
   14a20:	cmp	r3, #0
   14a24:	movne	r5, #1
   14a28:	moveq	r5, #0
   14a2c:	moveq	r3, #1
   14a30:	movne	r3, #0
   14a34:	ldr	r2, [sp, #44]	; 0x2c
   14a38:	and	r3, r3, r2
   14a3c:	ands	r8, r3, #255	; 0xff
   14a40:	bne	14d44 <dcngettext@plt+0x3a78>
   14a44:	ldr	r3, [sp, #152]	; 0x98
   14a48:	sub	r2, r3, #2
   14a4c:	clz	r2, r2
   14a50:	lsr	r2, r2, #5
   14a54:	b	1453c <dcngettext@plt+0x3270>
   14a58:	ldr	r3, [sp, #56]	; 0x38
   14a5c:	add	r3, r3, sl
   14a60:	str	r3, [sp, #48]	; 0x30
   14a64:	ldr	r3, [sp, #48]	; 0x30
   14a68:	mov	r6, #0
   14a6c:	ldrb	r4, [r3]
   14a70:	cmp	r4, #126	; 0x7e
   14a74:	ldrls	pc, [pc, r4, lsl #2]
   14a78:	b	149f8 <dcngettext@plt+0x372c>
   14a7c:	andeq	r4, r1, ip, lsl r8
   14a80:	strdeq	r4, [r1], -r8
   14a84:	strdeq	r4, [r1], -r8
   14a88:	strdeq	r4, [r1], -r8
   14a8c:	strdeq	r4, [r1], -r8
   14a90:	strdeq	r4, [r1], -r8
   14a94:	strdeq	r4, [r1], -r8
   14a98:	andeq	r4, r1, r0, lsl #16
   14a9c:	andeq	r4, r1, r4, ror #15
   14aa0:	andeq	r4, r1, r8, ror ip
   14aa4:	andeq	r4, r1, r4, asr #14
   14aa8:	andeq	r4, r1, r8, lsr #14
   14aac:			; <UNDEFINED> instruction: 0x000149bc
   14ab0:	muleq	r1, r8, r9
   14ab4:	strdeq	r4, [r1], -r8
   14ab8:	strdeq	r4, [r1], -r8
   14abc:	strdeq	r4, [r1], -r8
   14ac0:	strdeq	r4, [r1], -r8
   14ac4:	strdeq	r4, [r1], -r8
   14ac8:	strdeq	r4, [r1], -r8
   14acc:	strdeq	r4, [r1], -r8
   14ad0:	strdeq	r4, [r1], -r8
   14ad4:	strdeq	r4, [r1], -r8
   14ad8:	strdeq	r4, [r1], -r8
   14adc:	strdeq	r4, [r1], -r8
   14ae0:	strdeq	r4, [r1], -r8
   14ae4:	strdeq	r4, [r1], -r8
   14ae8:	strdeq	r4, [r1], -r8
   14aec:	strdeq	r4, [r1], -r8
   14af0:	strdeq	r4, [r1], -r8
   14af4:	strdeq	r4, [r1], -r8
   14af8:	strdeq	r4, [r1], -r8
   14afc:	andeq	r4, r1, r0, lsl r9
   14b00:	andeq	r4, r1, ip, lsl #18
   14b04:	andeq	r4, r1, ip, lsl #18
   14b08:	andeq	r4, r1, ip, lsl r5
   14b0c:	andeq	r4, r1, ip, lsl #18
   14b10:	andeq	r4, r1, r4, lsr #19
   14b14:	andeq	r4, r1, ip, lsl #18
   14b18:	andeq	r4, r1, r8, ror r9
   14b1c:	andeq	r4, r1, ip, lsl #18
   14b20:	andeq	r4, r1, ip, lsl #18
   14b24:	andeq	r4, r1, ip, lsl #18
   14b28:	andeq	r4, r1, r4, lsr #19
   14b2c:	andeq	r4, r1, r4, lsr #19
   14b30:	andeq	r4, r1, r4, lsr #19
   14b34:	andeq	r4, r1, r4, lsr #19
   14b38:	andeq	r4, r1, r4, lsr #19
   14b3c:	andeq	r4, r1, r4, lsr #19
   14b40:	andeq	r4, r1, r4, lsr #19
   14b44:	andeq	r4, r1, r4, lsr #19
   14b48:	andeq	r4, r1, r4, lsr #19
   14b4c:	andeq	r4, r1, r4, lsr #19
   14b50:	andeq	r4, r1, r4, lsr #19
   14b54:	andeq	r4, r1, r4, lsr #19
   14b58:	andeq	r4, r1, r4, lsr #19
   14b5c:	andeq	r4, r1, r4, lsr #19
   14b60:	andeq	r4, r1, r4, lsr #19
   14b64:	andeq	r4, r1, r4, lsr #19
   14b68:	andeq	r4, r1, ip, lsl #18
   14b6c:	andeq	r4, r1, ip, lsl #18
   14b70:	andeq	r4, r1, ip, lsl #18
   14b74:	andeq	r4, r1, ip, lsl #18
   14b78:	andeq	r4, r1, r8, asr #18
   14b7c:	strdeq	r4, [r1], -r8
   14b80:	andeq	r4, r1, r4, lsr #19
   14b84:	andeq	r4, r1, r4, lsr #19
   14b88:	andeq	r4, r1, r4, lsr #19
   14b8c:	andeq	r4, r1, r4, lsr #19
   14b90:	andeq	r4, r1, r4, lsr #19
   14b94:	andeq	r4, r1, r4, lsr #19
   14b98:	andeq	r4, r1, r4, lsr #19
   14b9c:	andeq	r4, r1, r4, lsr #19
   14ba0:	andeq	r4, r1, r4, lsr #19
   14ba4:	andeq	r4, r1, r4, lsr #19
   14ba8:	andeq	r4, r1, r4, lsr #19
   14bac:	andeq	r4, r1, r4, lsr #19
   14bb0:	andeq	r4, r1, r4, lsr #19
   14bb4:	andeq	r4, r1, r4, lsr #19
   14bb8:	andeq	r4, r1, r4, lsr #19
   14bbc:	andeq	r4, r1, r4, lsr #19
   14bc0:	andeq	r4, r1, r4, lsr #19
   14bc4:	andeq	r4, r1, r4, lsr #19
   14bc8:	andeq	r4, r1, r4, lsr #19
   14bcc:	andeq	r4, r1, r4, lsr #19
   14bd0:	andeq	r4, r1, r4, lsr #19
   14bd4:	andeq	r4, r1, r4, lsr #19
   14bd8:	andeq	r4, r1, r4, lsr #19
   14bdc:	andeq	r4, r1, r4, lsr #19
   14be0:	andeq	r4, r1, r4, lsr #19
   14be4:	andeq	r4, r1, r4, lsr #19
   14be8:	andeq	r4, r1, ip, lsl #18
   14bec:	andeq	r4, r1, r8, ror #12
   14bf0:	andeq	r4, r1, r4, lsr #19
   14bf4:	andeq	r4, r1, ip, lsl #18
   14bf8:	andeq	r4, r1, r4, lsr #19
   14bfc:	andeq	r4, r1, ip, lsl #18
   14c00:	andeq	r4, r1, r4, lsr #19
   14c04:	andeq	r4, r1, r4, lsr #19
   14c08:	andeq	r4, r1, r4, lsr #19
   14c0c:	andeq	r4, r1, r4, lsr #19
   14c10:	andeq	r4, r1, r4, lsr #19
   14c14:	andeq	r4, r1, r4, lsr #19
   14c18:	andeq	r4, r1, r4, lsr #19
   14c1c:	andeq	r4, r1, r4, lsr #19
   14c20:	andeq	r4, r1, r4, lsr #19
   14c24:	andeq	r4, r1, r4, lsr #19
   14c28:	andeq	r4, r1, r4, lsr #19
   14c2c:	andeq	r4, r1, r4, lsr #19
   14c30:	andeq	r4, r1, r4, lsr #19
   14c34:	andeq	r4, r1, r4, lsr #19
   14c38:	andeq	r4, r1, r4, lsr #19
   14c3c:	andeq	r4, r1, r4, lsr #19
   14c40:	andeq	r4, r1, r4, lsr #19
   14c44:	andeq	r4, r1, r4, lsr #19
   14c48:	andeq	r4, r1, r4, lsr #19
   14c4c:	andeq	r4, r1, r4, lsr #19
   14c50:	andeq	r4, r1, r4, lsr #19
   14c54:	andeq	r4, r1, r4, lsr #19
   14c58:	andeq	r4, r1, r4, lsr #19
   14c5c:	andeq	r4, r1, r4, lsr #19
   14c60:	andeq	r4, r1, r4, lsr #19
   14c64:	andeq	r4, r1, r4, lsr #19
   14c68:	strdeq	r4, [r1], -ip
   14c6c:	andeq	r4, r1, ip, lsl #18
   14c70:	strdeq	r4, [r1], -ip
   14c74:	andeq	r4, r1, ip, lsl r5
   14c78:	mov	r3, #116	; 0x74
   14c7c:	b	1474c <dcngettext@plt+0x3480>
   14c80:	ldr	r3, [sp, #160]	; 0xa0
   14c84:	cmp	r3, #0
   14c88:	beq	14558 <dcngettext@plt+0x328c>
   14c8c:	lsr	r3, r4, #5
   14c90:	ldr	r0, [sp, #160]	; 0xa0
   14c94:	uxtb	r3, r3
   14c98:	and	r1, r4, #31
   14c9c:	ldr	r0, [r0, r3, lsl #2]
   14ca0:	lsr	r3, r0, r1
   14ca4:	tst	r3, #1
   14ca8:	beq	14558 <dcngettext@plt+0x328c>
   14cac:	ldr	r3, [sp, #28]
   14cb0:	cmp	r3, #0
   14cb4:	beq	146b8 <dcngettext@plt+0x33ec>
   14cb8:	ldr	sl, [sp, #32]
   14cbc:	mov	r8, fp
   14cc0:	b	1477c <dcngettext@plt+0x34b0>
   14cc4:	ldr	r3, [sp, #28]
   14cc8:	cmp	r3, #0
   14ccc:	bne	15220 <dcngettext@plt+0x3f54>
   14cd0:	add	sl, sl, #1
   14cd4:	ldr	r6, [sp, #40]	; 0x28
   14cd8:	mov	r5, #0
   14cdc:	mov	r4, #92	; 0x5c
   14ce0:	b	14574 <dcngettext@plt+0x32a8>
   14ce4:	cmp	r9, r8
   14ce8:	bne	14f58 <dcngettext@plt+0x3c8c>
   14cec:	ldr	r0, [sp, #100]	; 0x64
   14cf0:	bl	11080 <iswprint@plt>
   14cf4:	add	r5, r5, r4
   14cf8:	cmp	r0, #0
   14cfc:	add	r0, sp, #104	; 0x68
   14d00:	moveq	r6, #0
   14d04:	bl	11014 <mbsinit@plt>
   14d08:	cmp	r0, #0
   14d0c:	beq	14eec <dcngettext@plt+0x3c20>
   14d10:	mov	r2, r6
   14d14:	mov	ip, r5
   14d18:	eor	r5, r2, #1
   14d1c:	ldr	r4, [sp, #80]	; 0x50
   14d20:	ldr	r6, [sp, #84]	; 0x54
   14d24:	ldr	r7, [sp, #88]	; 0x58
   14d28:	uxtb	r5, r5
   14d2c:	cmp	ip, #1
   14d30:	bls	15230 <dcngettext@plt+0x3f64>
   14d34:	ldr	r3, [sp, #44]	; 0x2c
   14d38:	and	r8, r3, r5
   14d3c:	mov	r5, r2
   14d40:	uxtb	r8, r8
   14d44:	add	r2, sl, ip
   14d48:	ldr	r0, [sp, #48]	; 0x30
   14d4c:	mov	r1, #0
   14d50:	str	r5, [sp, #48]	; 0x30
   14d54:	ldr	r9, [sp, #28]
   14d58:	ldr	ip, [sp, #40]	; 0x28
   14d5c:	ldr	r3, [sp, #32]
   14d60:	ldr	r5, [sp, #152]	; 0x98
   14d64:	b	14e20 <dcngettext@plt+0x3b54>
   14d68:	cmp	r9, #0
   14d6c:	bne	15144 <dcngettext@plt+0x3e78>
   14d70:	eor	r1, ip, #1
   14d74:	cmp	r5, #2
   14d78:	movne	r1, #0
   14d7c:	andeq	r1, r1, #1
   14d80:	cmp	r1, #0
   14d84:	beq	14dbc <dcngettext@plt+0x3af0>
   14d88:	cmp	fp, r7
   14d8c:	movhi	ip, #39	; 0x27
   14d90:	strbhi	ip, [r3, r7]
   14d94:	add	ip, r7, #1
   14d98:	cmp	fp, ip
   14d9c:	movhi	lr, #36	; 0x24
   14da0:	strbhi	lr, [r3, ip]
   14da4:	add	ip, r7, #2
   14da8:	cmp	fp, ip
   14dac:	movhi	lr, #39	; 0x27
   14db0:	strbhi	lr, [r3, ip]
   14db4:	add	r7, r7, #3
   14db8:	mov	ip, r1
   14dbc:	cmp	fp, r7
   14dc0:	movhi	r1, #92	; 0x5c
   14dc4:	strbhi	r1, [r3, r7]
   14dc8:	add	r1, r7, #1
   14dcc:	cmp	fp, r1
   14dd0:	lsrhi	lr, r4, #6
   14dd4:	addhi	lr, lr, #48	; 0x30
   14dd8:	strbhi	lr, [r3, r1]
   14ddc:	add	lr, r7, #2
   14de0:	cmp	fp, lr
   14de4:	lsrhi	r1, r4, #3
   14de8:	andhi	r1, r1, #7
   14dec:	addhi	r1, r1, #48	; 0x30
   14df0:	add	sl, sl, #1
   14df4:	strbhi	r1, [r3, lr]
   14df8:	and	r4, r4, #7
   14dfc:	cmp	r2, sl
   14e00:	add	r4, r4, #48	; 0x30
   14e04:	add	r7, r7, #3
   14e08:	bls	15168 <dcngettext@plt+0x3e9c>
   14e0c:	mov	r1, r8
   14e10:	cmp	fp, r7
   14e14:	strbhi	r4, [r3, r7]
   14e18:	ldrb	r4, [r0, #1]!
   14e1c:	add	r7, r7, #1
   14e20:	cmp	r8, #0
   14e24:	bne	14d68 <dcngettext@plt+0x3a9c>
   14e28:	cmp	r6, #0
   14e2c:	bne	14e7c <dcngettext@plt+0x3bb0>
   14e30:	eor	r6, r1, #1
   14e34:	and	r6, r6, ip
   14e38:	add	sl, sl, #1
   14e3c:	cmp	r2, sl
   14e40:	uxtb	r6, r6
   14e44:	bls	14ea4 <dcngettext@plt+0x3bd8>
   14e48:	cmp	r6, #0
   14e4c:	beq	14e10 <dcngettext@plt+0x3b44>
   14e50:	cmp	fp, r7
   14e54:	movhi	ip, #39	; 0x27
   14e58:	strbhi	ip, [r3, r7]
   14e5c:	add	ip, r7, #1
   14e60:	cmp	fp, ip
   14e64:	movhi	lr, #39	; 0x27
   14e68:	strbhi	lr, [r3, ip]
   14e6c:	add	r7, r7, #2
   14e70:	mov	r6, r8
   14e74:	mov	ip, r8
   14e78:	b	14e10 <dcngettext@plt+0x3b44>
   14e7c:	cmp	fp, r7
   14e80:	eor	r6, r1, #1
   14e84:	movhi	lr, #92	; 0x5c
   14e88:	and	r6, r6, ip
   14e8c:	add	sl, sl, #1
   14e90:	strbhi	lr, [r3, r7]
   14e94:	cmp	r2, sl
   14e98:	add	r7, r7, #1
   14e9c:	uxtb	r6, r6
   14ea0:	bhi	14e48 <dcngettext@plt+0x3b7c>
   14ea4:	str	ip, [sp, #40]	; 0x28
   14ea8:	ldr	r5, [sp, #48]	; 0x30
   14eac:	b	14574 <dcngettext@plt+0x32a8>
   14eb0:	ldr	r3, [sp, #24]
   14eb4:	cmn	r3, #1
   14eb8:	mov	r3, #0
   14ebc:	str	r3, [sp, #104]	; 0x68
   14ec0:	str	r3, [sp, #108]	; 0x6c
   14ec4:	beq	151e4 <dcngettext@plt+0x3f18>
   14ec8:	mov	r2, r5
   14ecc:	mov	r3, #0
   14ed0:	str	r7, [sp, #88]	; 0x58
   14ed4:	ldr	r7, [sp, #152]	; 0x98
   14ed8:	str	r5, [sp, #92]	; 0x5c
   14edc:	str	r6, [sp, #84]	; 0x54
   14ee0:	mov	r5, r3
   14ee4:	mov	r6, r2
   14ee8:	str	r4, [sp, #80]	; 0x50
   14eec:	ldr	r3, [sp, #56]	; 0x38
   14ef0:	add	r9, sl, r5
   14ef4:	add	r8, r3, r9
   14ef8:	ldr	r3, [sp, #24]
   14efc:	mov	r1, r8
   14f00:	sub	r2, r3, r9
   14f04:	add	r0, sp, #100	; 0x64
   14f08:	add	r3, sp, #104	; 0x68
   14f0c:	bl	16f38 <dcngettext@plt+0x5c6c>
   14f10:	subs	r4, r0, #0
   14f14:	beq	152bc <dcngettext@plt+0x3ff0>
   14f18:	cmn	r4, #1
   14f1c:	beq	1529c <dcngettext@plt+0x3fd0>
   14f20:	cmn	r4, #2
   14f24:	beq	1523c <dcngettext@plt+0x3f70>
   14f28:	ldr	r2, [sp, #28]
   14f2c:	cmp	r7, #2
   14f30:	movne	r2, #0
   14f34:	andeq	r2, r2, #1
   14f38:	cmp	r2, #0
   14f3c:	beq	14cec <dcngettext@plt+0x3a20>
   14f40:	cmp	r4, #1
   14f44:	beq	14cec <dcngettext@plt+0x3a20>
   14f48:	sub	r3, r4, #1
   14f4c:	add	r9, r3, r9
   14f50:	ldr	r3, [sp, #56]	; 0x38
   14f54:	add	r9, r3, r9
   14f58:	ldrb	r3, [r8, #1]!
   14f5c:	sub	r3, r3, #91	; 0x5b
   14f60:	cmp	r3, #33	; 0x21
   14f64:	ldrls	pc, [pc, r3, lsl #2]
   14f68:	b	14ce4 <dcngettext@plt+0x3a18>
   14f6c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14f70:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14f74:	andeq	r4, r1, r4, ror #25
   14f78:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14f7c:	andeq	r4, r1, r4, ror #25
   14f80:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14f84:	andeq	r4, r1, r4, ror #25
   14f88:	andeq	r4, r1, r4, ror #25
   14f8c:	andeq	r4, r1, r4, ror #25
   14f90:	andeq	r4, r1, r4, ror #25
   14f94:	andeq	r4, r1, r4, ror #25
   14f98:	andeq	r4, r1, r4, ror #25
   14f9c:	andeq	r4, r1, r4, ror #25
   14fa0:	andeq	r4, r1, r4, ror #25
   14fa4:	andeq	r4, r1, r4, ror #25
   14fa8:	andeq	r4, r1, r4, ror #25
   14fac:	andeq	r4, r1, r4, ror #25
   14fb0:	andeq	r4, r1, r4, ror #25
   14fb4:	andeq	r4, r1, r4, ror #25
   14fb8:	andeq	r4, r1, r4, ror #25
   14fbc:	andeq	r4, r1, r4, ror #25
   14fc0:	andeq	r4, r1, r4, ror #25
   14fc4:	andeq	r4, r1, r4, ror #25
   14fc8:	andeq	r4, r1, r4, ror #25
   14fcc:	andeq	r4, r1, r4, ror #25
   14fd0:	andeq	r4, r1, r4, ror #25
   14fd4:	andeq	r4, r1, r4, ror #25
   14fd8:	andeq	r4, r1, r4, ror #25
   14fdc:	andeq	r4, r1, r4, ror #25
   14fe0:	andeq	r4, r1, r4, ror #25
   14fe4:	andeq	r4, r1, r4, ror #25
   14fe8:	andeq	r4, r1, r4, ror #25
   14fec:	andeq	r4, r1, r4, ror #25
   14ff0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14ff4:	mov	r3, #2
   14ff8:	ldr	sl, [sp, #32]
   14ffc:	mov	r8, fp
   15000:	str	r3, [sp, #152]	; 0x98
   15004:	b	1477c <dcngettext@plt+0x34b0>
   15008:	ldr	r3, [sp, #156]	; 0x9c
   1500c:	tst	r3, #1
   15010:	bne	1513c <dcngettext@plt+0x3e70>
   15014:	ldr	r3, [sp, #152]	; 0x98
   15018:	ldr	r4, [sp, #44]	; 0x2c
   1501c:	sub	r2, r3, #2
   15020:	mov	r5, #0
   15024:	clz	r2, r2
   15028:	mov	r8, r4
   1502c:	lsr	r2, r2, #5
   15030:	b	1453c <dcngettext@plt+0x3270>
   15034:	ldr	r3, [sp, #156]	; 0x9c
   15038:	ands	r9, r3, #4
   1503c:	beq	15174 <dcngettext@plt+0x3ea8>
   15040:	ldr	r2, [sp, #24]
   15044:	add	r3, sl, #2
   15048:	cmp	r3, r2
   1504c:	bcs	15060 <dcngettext@plt+0x3d94>
   15050:	ldr	r2, [sp, #48]	; 0x30
   15054:	ldrb	r4, [r2, #1]
   15058:	cmp	r4, #63	; 0x3f
   1505c:	beq	152fc <dcngettext@plt+0x4030>
   15060:	mov	r2, #0
   15064:	mov	r8, r2
   15068:	mov	r5, r2
   1506c:	mov	r4, #63	; 0x3f
   15070:	b	1453c <dcngettext@plt+0x3270>
   15074:	ldr	r3, [sp, #28]
   15078:	cmp	r3, #0
   1507c:	bne	153a0 <dcngettext@plt+0x40d4>
   15080:	mov	r2, r5
   15084:	mov	r8, r3
   15088:	mov	r5, #0
   1508c:	mov	r4, #63	; 0x3f
   15090:	b	1453c <dcngettext@plt+0x3270>
   15094:	ldr	r3, [sp, #28]
   15098:	cmp	r3, #0
   1509c:	bne	153a0 <dcngettext@plt+0x40d4>
   150a0:	ldr	r2, [sp, #72]	; 0x48
   150a4:	adds	r3, fp, #0
   150a8:	movne	r3, #1
   150ac:	cmp	r2, #0
   150b0:	movne	r3, #0
   150b4:	cmp	r3, #0
   150b8:	strne	fp, [sp, #72]	; 0x48
   150bc:	movne	fp, #0
   150c0:	bne	150fc <dcngettext@plt+0x3e30>
   150c4:	cmp	fp, r7
   150c8:	movhi	r2, #39	; 0x27
   150cc:	ldrhi	r3, [sp, #32]
   150d0:	strbhi	r2, [r3, r7]
   150d4:	add	r3, r7, #1
   150d8:	cmp	fp, r3
   150dc:	movhi	r1, #92	; 0x5c
   150e0:	ldrhi	r2, [sp, #32]
   150e4:	strbhi	r1, [r2, r3]
   150e8:	add	r3, r7, #2
   150ec:	cmp	fp, r3
   150f0:	movhi	r1, #39	; 0x27
   150f4:	ldrhi	r2, [sp, #32]
   150f8:	strbhi	r1, [r2, r3]
   150fc:	ldr	r3, [sp, #28]
   15100:	add	r7, r7, #3
   15104:	mov	r2, r5
   15108:	mov	r8, r3
   1510c:	str	r5, [sp, #68]	; 0x44
   15110:	str	r3, [sp, #40]	; 0x28
   15114:	mov	r4, #39	; 0x27
   15118:	b	1453c <dcngettext@plt+0x3270>
   1511c:	ldr	r3, [sp, #56]	; 0x38
   15120:	ldrb	r3, [r3, #1]
   15124:	adds	r3, r3, #0
   15128:	movne	r3, #1
   1512c:	b	14514 <dcngettext@plt+0x3248>
   15130:	ldr	r5, [sp, #28]
   15134:	mov	r4, #48	; 0x30
   15138:	b	1453c <dcngettext@plt+0x3270>
   1513c:	add	sl, sl, #1
   15140:	b	1406c <dcngettext@plt+0x2da0>
   15144:	mov	sl, r3
   15148:	ldr	r3, [sp, #28]
   1514c:	mov	r8, fp
   15150:	str	r3, [sp, #44]	; 0x2c
   15154:	ldr	r3, [sp, #152]	; 0x98
   15158:	sub	r2, r3, #2
   1515c:	clz	r2, r2
   15160:	lsr	r2, r2, #5
   15164:	b	1477c <dcngettext@plt+0x34b0>
   15168:	str	ip, [sp, #40]	; 0x28
   1516c:	ldr	r5, [sp, #48]	; 0x30
   15170:	b	145ac <dcngettext@plt+0x32e0>
   15174:	mov	r2, r9
   15178:	mov	r8, r9
   1517c:	mov	r5, #0
   15180:	mov	r4, #63	; 0x3f
   15184:	b	1453c <dcngettext@plt+0x3270>
   15188:	cmp	fp, #0
   1518c:	beq	15204 <dcngettext@plt+0x3f38>
   15190:	ldr	r1, [sp, #32]
   15194:	mov	r3, #34	; 0x22
   15198:	mov	r2, #1
   1519c:	strb	r3, [r1]
   151a0:	ldr	r3, [pc, #332]	; 152f4 <dcngettext@plt+0x4028>
   151a4:	str	r2, [sp, #52]	; 0x34
   151a8:	mov	r7, r2
   151ac:	str	r2, [sp, #44]	; 0x2c
   151b0:	str	r3, [sp, #64]	; 0x40
   151b4:	b	1405c <dcngettext@plt+0x2d90>
   151b8:	ldr	r3, [pc, #300]	; 152ec <dcngettext@plt+0x4020>
   151bc:	str	r3, [sp, #64]	; 0x40
   151c0:	mov	r3, #0
   151c4:	str	r3, [sp, #28]
   151c8:	mov	r3, #1
   151cc:	str	r3, [sp, #52]	; 0x34
   151d0:	mov	r7, r3
   151d4:	mov	r3, #2
   151d8:	str	r3, [sp, #152]	; 0x98
   151dc:	b	1405c <dcngettext@plt+0x2d90>
   151e0:	bl	112b4 <abort@plt>
   151e4:	ldr	r0, [sp, #56]	; 0x38
   151e8:	bl	1117c <strlen@plt>
   151ec:	str	r0, [sp, #24]
   151f0:	b	14ec8 <dcngettext@plt+0x3bfc>
   151f4:	mov	r5, r8
   151f8:	mov	r4, #48	; 0x30
   151fc:	ldr	r8, [sp, #44]	; 0x2c
   15200:	b	1453c <dcngettext@plt+0x3270>
   15204:	mov	r3, #1
   15208:	str	r3, [sp, #52]	; 0x34
   1520c:	mov	r7, r3
   15210:	str	r3, [sp, #44]	; 0x2c
   15214:	ldr	r3, [pc, #216]	; 152f4 <dcngettext@plt+0x4028>
   15218:	str	r3, [sp, #64]	; 0x40
   1521c:	b	1405c <dcngettext@plt+0x2d90>
   15220:	ldr	sl, [sp, #32]
   15224:	mov	r8, fp
   15228:	mov	r2, r3
   1522c:	b	1477c <dcngettext@plt+0x34b0>
   15230:	mov	r3, r5
   15234:	mov	r5, r2
   15238:	b	14a34 <dcngettext@plt+0x3768>
   1523c:	ldr	r1, [sp, #24]
   15240:	mov	r2, r5
   15244:	cmp	r1, r9
   15248:	mov	ip, r5
   1524c:	ldr	r4, [sp, #80]	; 0x50
   15250:	ldr	r5, [sp, #92]	; 0x5c
   15254:	ldr	r6, [sp, #84]	; 0x54
   15258:	ldr	r7, [sp, #88]	; 0x58
   1525c:	bls	15290 <dcngettext@plt+0x3fc4>
   15260:	ldrb	r3, [r8]
   15264:	cmp	r3, #0
   15268:	bne	1527c <dcngettext@plt+0x3fb0>
   1526c:	b	15294 <dcngettext@plt+0x3fc8>
   15270:	ldrb	r3, [r8, #1]!
   15274:	cmp	r3, #0
   15278:	beq	15394 <dcngettext@plt+0x40c8>
   1527c:	add	r2, r2, #1
   15280:	add	r3, sl, r2
   15284:	cmp	r1, r3
   15288:	bhi	15270 <dcngettext@plt+0x3fa4>
   1528c:	mov	ip, r2
   15290:	mov	r3, #0
   15294:	mov	r2, r3
   15298:	b	14d2c <dcngettext@plt+0x3a60>
   1529c:	mov	r3, #0
   152a0:	mov	ip, r5
   152a4:	ldr	r4, [sp, #80]	; 0x50
   152a8:	ldr	r5, [sp, #92]	; 0x5c
   152ac:	ldr	r6, [sp, #84]	; 0x54
   152b0:	ldr	r7, [sp, #88]	; 0x58
   152b4:	mov	r2, r3
   152b8:	b	14d2c <dcngettext@plt+0x3a60>
   152bc:	mov	r3, r6
   152c0:	mov	ip, r5
   152c4:	eor	r5, r3, #1
   152c8:	mov	r2, r6
   152cc:	ldr	r4, [sp, #80]	; 0x50
   152d0:	ldr	r6, [sp, #84]	; 0x54
   152d4:	ldr	r7, [sp, #88]	; 0x58
   152d8:	uxtb	r5, r5
   152dc:	b	14d2c <dcngettext@plt+0x3a60>
   152e0:	ldr	sl, [sp, #32]
   152e4:	mov	r8, fp
   152e8:	b	15150 <dcngettext@plt+0x3e84>
   152ec:	ldrdeq	r7, [r1], -r8
   152f0:	ldrdeq	r7, [r1], -ip
   152f4:	ldrdeq	r7, [r1], -r4
   152f8:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   152fc:	ldr	r2, [sp, #56]	; 0x38
   15300:	ldrb	r1, [r2, r3]
   15304:	sub	r2, r1, #33	; 0x21
   15308:	uxtb	r2, r2
   1530c:	cmp	r2, #29
   15310:	bhi	153b0 <dcngettext@plt+0x40e4>
   15314:	ldr	r0, [pc, #-36]	; 152f8 <dcngettext@plt+0x402c>
   15318:	mov	ip, #1
   1531c:	ands	r2, r0, ip, lsl r2
   15320:	beq	153c0 <dcngettext@plt+0x40f4>
   15324:	ldr	r2, [sp, #28]
   15328:	cmp	r2, #0
   1532c:	bne	154c0 <dcngettext@plt+0x41f4>
   15330:	cmp	fp, r7
   15334:	ldr	r8, [sp, #28]
   15338:	ldrhi	r2, [sp, #32]
   1533c:	mov	sl, r3
   15340:	mov	r5, r8
   15344:	strbhi	r4, [r2, r7]
   15348:	add	r2, r7, #1
   1534c:	cmp	fp, r2
   15350:	movhi	r0, #34	; 0x22
   15354:	ldrhi	ip, [sp, #32]
   15358:	mov	r4, r1
   1535c:	strbhi	r0, [ip, r2]
   15360:	add	r2, r7, #2
   15364:	cmp	fp, r2
   15368:	movhi	r0, #34	; 0x22
   1536c:	ldrhi	ip, [sp, #32]
   15370:	strbhi	r0, [ip, r2]
   15374:	add	r2, r7, #3
   15378:	cmp	fp, r2
   1537c:	movhi	r0, #63	; 0x3f
   15380:	ldrhi	ip, [sp, #32]
   15384:	add	r7, r7, #4
   15388:	strbhi	r0, [ip, r2]
   1538c:	mov	r2, r8
   15390:	b	1453c <dcngettext@plt+0x3270>
   15394:	mov	ip, r2
   15398:	mov	r2, r3
   1539c:	b	14d2c <dcngettext@plt+0x3a60>
   153a0:	ldr	sl, [sp, #32]
   153a4:	mov	r8, fp
   153a8:	ldr	r2, [sp, #28]
   153ac:	b	1477c <dcngettext@plt+0x34b0>
   153b0:	mov	r2, #0
   153b4:	mov	r8, r2
   153b8:	mov	r5, r2
   153bc:	b	1453c <dcngettext@plt+0x3270>
   153c0:	mov	r8, r2
   153c4:	mov	r5, #0
   153c8:	b	1453c <dcngettext@plt+0x3270>
   153cc:	ldr	r1, [sp, #152]	; 0x98
   153d0:	bl	13e98 <dcngettext@plt+0x2bcc>
   153d4:	str	r0, [sp, #168]	; 0xa8
   153d8:	b	143f8 <dcngettext@plt+0x312c>
   153dc:	ldr	r1, [sp, #152]	; 0x98
   153e0:	bl	13e98 <dcngettext@plt+0x2bcc>
   153e4:	str	r0, [sp, #164]	; 0xa4
   153e8:	b	143d8 <dcngettext@plt+0x310c>
   153ec:	ldr	r7, [sp, #28]
   153f0:	b	14438 <dcngettext@plt+0x316c>
   153f4:	ldr	sl, [sp, #32]
   153f8:	ldr	r2, [sp, #68]	; 0x44
   153fc:	mov	r8, fp
   15400:	mov	fp, r7
   15404:	ldr	r3, [sp, #64]	; 0x40
   15408:	cmp	r3, #0
   1540c:	moveq	r2, #0
   15410:	andne	r2, r2, #1
   15414:	cmp	r2, #0
   15418:	beq	15444 <dcngettext@plt+0x4178>
   1541c:	mov	r2, r3
   15420:	ldrb	r3, [r3]
   15424:	cmp	r3, #0
   15428:	beq	15444 <dcngettext@plt+0x4178>
   1542c:	cmp	r8, fp
   15430:	strbhi	r3, [sl, fp]
   15434:	ldrb	r3, [r2, #1]!
   15438:	add	fp, fp, #1
   1543c:	cmp	r3, #0
   15440:	bne	1542c <dcngettext@plt+0x4160>
   15444:	cmp	r8, fp
   15448:	movhi	r3, #0
   1544c:	strbhi	r3, [sl, fp]
   15450:	b	147d8 <dcngettext@plt+0x350c>
   15454:	ldr	r3, [sp, #168]	; 0xa8
   15458:	ldr	sl, [sp, #32]
   1545c:	str	r3, [sp, #16]
   15460:	ldr	r3, [sp, #164]	; 0xa4
   15464:	mov	ip, #5
   15468:	str	r3, [sp, #12]
   1546c:	ldr	r3, [sp, #160]	; 0xa0
   15470:	ldr	r2, [sp, #56]	; 0x38
   15474:	str	r3, [sp, #8]
   15478:	ldr	r3, [sp, #156]	; 0x9c
   1547c:	ldr	r1, [sp, #72]	; 0x48
   15480:	str	r3, [sp, #4]
   15484:	mov	r0, sl
   15488:	ldr	r3, [sp, #24]
   1548c:	str	ip, [sp]
   15490:	bl	13fb8 <dcngettext@plt+0x2cec>
   15494:	mov	fp, r0
   15498:	b	147d8 <dcngettext@plt+0x350c>
   1549c:	mov	r8, fp
   154a0:	ldr	sl, [sp, #32]
   154a4:	mov	fp, r7
   154a8:	mov	r2, r3
   154ac:	b	15404 <dcngettext@plt+0x4138>
   154b0:	mov	r8, fp
   154b4:	ldr	sl, [sp, #32]
   154b8:	mov	fp, r7
   154bc:	b	15404 <dcngettext@plt+0x4138>
   154c0:	ldr	sl, [sp, #32]
   154c4:	mov	r8, fp
   154c8:	b	14794 <dcngettext@plt+0x34c8>
   154cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154d0:	sub	sp, sp, #52	; 0x34
   154d4:	mov	r4, r0
   154d8:	mov	r5, r3
   154dc:	mov	sl, r1
   154e0:	mov	fp, r2
   154e4:	bl	11194 <__errno_location@plt>
   154e8:	ldr	r7, [pc, #412]	; 1568c <dcngettext@plt+0x43c0>
   154ec:	cmn	r4, #-2147483647	; 0x80000001
   154f0:	ldr	r6, [r7]
   154f4:	mov	r8, r0
   154f8:	movne	r0, #0
   154fc:	moveq	r0, #1
   15500:	ldr	r3, [r8]
   15504:	orrs	r0, r0, r4, lsr #31
   15508:	str	r3, [sp, #24]
   1550c:	bne	15688 <dcngettext@plt+0x43bc>
   15510:	ldr	r2, [r7, #4]
   15514:	cmp	r4, r2
   15518:	blt	15578 <dcngettext@plt+0x42ac>
   1551c:	add	r9, r7, #8
   15520:	cmp	r6, r9
   15524:	str	r2, [sp, #44]	; 0x2c
   15528:	beq	15658 <dcngettext@plt+0x438c>
   1552c:	mov	r3, #8
   15530:	sub	r2, r4, r2
   15534:	mov	r0, r6
   15538:	str	r3, [sp]
   1553c:	add	r2, r2, #1
   15540:	mvn	r3, #-2147483648	; 0x80000000
   15544:	add	r1, sp, #44	; 0x2c
   15548:	bl	16964 <dcngettext@plt+0x5698>
   1554c:	mov	r6, r0
   15550:	str	r0, [r7]
   15554:	ldr	r0, [r7, #4]
   15558:	ldr	r2, [sp, #44]	; 0x2c
   1555c:	mov	r1, #0
   15560:	sub	r2, r2, r0
   15564:	add	r0, r6, r0, lsl #3
   15568:	lsl	r2, r2, #3
   1556c:	bl	111ac <memset@plt>
   15570:	ldr	r3, [sp, #44]	; 0x2c
   15574:	str	r3, [r7, #4]
   15578:	add	r3, r6, r4, lsl #3
   1557c:	ldr	r1, [r5, #4]
   15580:	ldr	r7, [r3, #4]
   15584:	ldr	r9, [r6, r4, lsl #3]
   15588:	ldr	r2, [r5, #40]	; 0x28
   1558c:	ldr	ip, [r5, #44]	; 0x2c
   15590:	add	r0, r5, #8
   15594:	str	r3, [sp, #28]
   15598:	ldr	r3, [r5]
   1559c:	orr	r1, r1, #1
   155a0:	mov	lr, r0
   155a4:	str	r1, [sp, #32]
   155a8:	str	r0, [sp, #36]	; 0x24
   155ac:	str	r1, [sp, #4]
   155b0:	str	r2, [sp, #12]
   155b4:	str	r3, [sp]
   155b8:	mov	r0, r7
   155bc:	mov	r1, r9
   155c0:	str	ip, [sp, #16]
   155c4:	str	lr, [sp, #8]
   155c8:	mov	r3, fp
   155cc:	mov	r2, sl
   155d0:	bl	13fb8 <dcngettext@plt+0x2cec>
   155d4:	cmp	r9, r0
   155d8:	bhi	15644 <dcngettext@plt+0x4378>
   155dc:	ldr	r3, [pc, #172]	; 15690 <dcngettext@plt+0x43c4>
   155e0:	add	r9, r0, #1
   155e4:	cmp	r7, r3
   155e8:	str	r9, [r6, r4, lsl #3]
   155ec:	beq	155f8 <dcngettext@plt+0x432c>
   155f0:	mov	r0, r7
   155f4:	bl	16eac <dcngettext@plt+0x5be0>
   155f8:	mov	r0, r9
   155fc:	bl	16800 <dcngettext@plt+0x5534>
   15600:	ldr	lr, [sp, #28]
   15604:	ldr	ip, [r5, #44]	; 0x2c
   15608:	ldr	r4, [r5, #40]	; 0x28
   1560c:	mov	r3, fp
   15610:	mov	r2, sl
   15614:	mov	r1, r9
   15618:	str	r0, [lr, #4]
   1561c:	ldr	lr, [r5]
   15620:	ldr	r5, [sp, #36]	; 0x24
   15624:	str	ip, [sp, #16]
   15628:	str	r5, [sp, #8]
   1562c:	ldr	r5, [sp, #32]
   15630:	str	r4, [sp, #12]
   15634:	str	r5, [sp, #4]
   15638:	str	lr, [sp]
   1563c:	mov	r7, r0
   15640:	bl	13fb8 <dcngettext@plt+0x2cec>
   15644:	ldr	r3, [sp, #24]
   15648:	mov	r0, r7
   1564c:	str	r3, [r8]
   15650:	add	sp, sp, #52	; 0x34
   15654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15658:	mov	r3, #8
   1565c:	sub	r2, r4, r2
   15660:	str	r3, [sp]
   15664:	add	r1, sp, #44	; 0x2c
   15668:	add	r2, r2, #1
   1566c:	mvn	r3, #-2147483648	; 0x80000000
   15670:	bl	16964 <dcngettext@plt+0x5698>
   15674:	mov	r6, r0
   15678:	ldm	r9, {r0, r1}
   1567c:	str	r6, [r7]
   15680:	stm	r6, {r0, r1}
   15684:	b	15554 <dcngettext@plt+0x4288>
   15688:	bl	112b4 <abort@plt>
   1568c:	andeq	r9, r2, r8, lsr r1
   15690:	andeq	r9, r2, r8, lsr #3
   15694:	push	{r4, r5, r6, lr}
   15698:	mov	r5, r0
   1569c:	bl	11194 <__errno_location@plt>
   156a0:	cmp	r5, #0
   156a4:	mov	r1, #48	; 0x30
   156a8:	mov	r4, r0
   156ac:	ldr	r0, [pc, #16]	; 156c4 <dcngettext@plt+0x43f8>
   156b0:	ldr	r6, [r4]
   156b4:	movne	r0, r5
   156b8:	bl	16c60 <dcngettext@plt+0x5994>
   156bc:	str	r6, [r4]
   156c0:	pop	{r4, r5, r6, pc}
   156c4:	andeq	r9, r2, r8, lsr #5
   156c8:	ldr	r3, [pc, #12]	; 156dc <dcngettext@plt+0x4410>
   156cc:	cmp	r0, #0
   156d0:	moveq	r0, r3
   156d4:	ldr	r0, [r0]
   156d8:	bx	lr
   156dc:	andeq	r9, r2, r8, lsr #5
   156e0:	ldr	r3, [pc, #12]	; 156f4 <dcngettext@plt+0x4428>
   156e4:	cmp	r0, #0
   156e8:	moveq	r0, r3
   156ec:	str	r1, [r0]
   156f0:	bx	lr
   156f4:	andeq	r9, r2, r8, lsr #5
   156f8:	ldr	r3, [pc, #52]	; 15734 <dcngettext@plt+0x4468>
   156fc:	cmp	r0, #0
   15700:	moveq	r0, r3
   15704:	add	r3, r0, #8
   15708:	push	{lr}		; (str lr, [sp, #-4]!)
   1570c:	lsr	lr, r1, #5
   15710:	and	r1, r1, #31
   15714:	ldr	ip, [r3, lr, lsl #2]
   15718:	lsr	r0, ip, r1
   1571c:	eor	r2, r2, r0
   15720:	and	r2, r2, #1
   15724:	and	r0, r0, #1
   15728:	eor	r1, ip, r2, lsl r1
   1572c:	str	r1, [r3, lr, lsl #2]
   15730:	pop	{pc}		; (ldr pc, [sp], #4)
   15734:	andeq	r9, r2, r8, lsr #5
   15738:	ldr	r3, [pc, #16]	; 15750 <dcngettext@plt+0x4484>
   1573c:	cmp	r0, #0
   15740:	movne	r3, r0
   15744:	ldr	r0, [r3, #4]
   15748:	str	r1, [r3, #4]
   1574c:	bx	lr
   15750:	andeq	r9, r2, r8, lsr #5
   15754:	ldr	r3, [pc, #44]	; 15788 <dcngettext@plt+0x44bc>
   15758:	cmp	r0, #0
   1575c:	moveq	r0, r3
   15760:	mov	ip, #10
   15764:	cmp	r2, #0
   15768:	cmpne	r1, #0
   1576c:	str	ip, [r0]
   15770:	beq	15780 <dcngettext@plt+0x44b4>
   15774:	str	r1, [r0, #40]	; 0x28
   15778:	str	r2, [r0, #44]	; 0x2c
   1577c:	bx	lr
   15780:	push	{r4, lr}
   15784:	bl	112b4 <abort@plt>
   15788:	andeq	r9, r2, r8, lsr #5
   1578c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15790:	sub	sp, sp, #24
   15794:	ldr	ip, [pc, #108]	; 15808 <dcngettext@plt+0x453c>
   15798:	ldr	r4, [sp, #56]	; 0x38
   1579c:	mov	r9, r2
   157a0:	cmp	r4, #0
   157a4:	moveq	r4, ip
   157a8:	mov	sl, r3
   157ac:	mov	r7, r0
   157b0:	mov	r8, r1
   157b4:	bl	11194 <__errno_location@plt>
   157b8:	ldr	r3, [r4, #44]	; 0x2c
   157bc:	mov	r1, r8
   157c0:	ldr	r6, [r0]
   157c4:	str	r3, [sp, #16]
   157c8:	ldr	r2, [r4, #40]	; 0x28
   157cc:	add	r3, r4, #8
   157d0:	str	r3, [sp, #8]
   157d4:	str	r2, [sp, #12]
   157d8:	ldr	r2, [r4, #4]
   157dc:	mov	r5, r0
   157e0:	str	r2, [sp, #4]
   157e4:	ldr	ip, [r4]
   157e8:	mov	r3, sl
   157ec:	mov	r2, r9
   157f0:	mov	r0, r7
   157f4:	str	ip, [sp]
   157f8:	bl	13fb8 <dcngettext@plt+0x2cec>
   157fc:	str	r6, [r5]
   15800:	add	sp, sp, #24
   15804:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15808:	andeq	r9, r2, r8, lsr #5
   1580c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15810:	cmp	r3, #0
   15814:	sub	sp, sp, #44	; 0x2c
   15818:	ldr	r4, [pc, #192]	; 158e0 <dcngettext@plt+0x4614>
   1581c:	mov	r6, r2
   15820:	movne	r4, r3
   15824:	mov	r9, r1
   15828:	mov	r8, r0
   1582c:	bl	11194 <__errno_location@plt>
   15830:	ldr	r3, [r4, #44]	; 0x2c
   15834:	ldr	r5, [r4, #4]
   15838:	add	sl, r4, #8
   1583c:	cmp	r6, #0
   15840:	orreq	r5, r5, #1
   15844:	mov	r1, #0
   15848:	ldr	r2, [r0]
   1584c:	str	r3, [sp, #16]
   15850:	ldr	r3, [r4, #40]	; 0x28
   15854:	stmib	sp, {r5, sl}
   15858:	str	r3, [sp, #12]
   1585c:	ldr	r3, [r4]
   15860:	mov	r7, r0
   15864:	str	r2, [sp, #28]
   15868:	str	r3, [sp]
   1586c:	mov	r2, r8
   15870:	mov	r3, r9
   15874:	mov	r0, r1
   15878:	bl	13fb8 <dcngettext@plt+0x2cec>
   1587c:	add	r1, r0, #1
   15880:	mov	fp, r0
   15884:	mov	r0, r1
   15888:	str	r1, [sp, #36]	; 0x24
   1588c:	bl	16800 <dcngettext@plt+0x5534>
   15890:	ldr	r3, [r4, #44]	; 0x2c
   15894:	mov	r2, r8
   15898:	str	r3, [sp, #16]
   1589c:	ldr	r3, [r4, #40]	; 0x28
   158a0:	str	r5, [sp, #4]
   158a4:	str	r3, [sp, #12]
   158a8:	str	sl, [sp, #8]
   158ac:	ldr	ip, [r4]
   158b0:	ldr	r1, [sp, #36]	; 0x24
   158b4:	mov	r3, r9
   158b8:	str	ip, [sp]
   158bc:	str	r0, [sp, #32]
   158c0:	bl	13fb8 <dcngettext@plt+0x2cec>
   158c4:	ldr	r2, [sp, #28]
   158c8:	cmp	r6, #0
   158cc:	str	r2, [r7]
   158d0:	ldr	r0, [sp, #32]
   158d4:	strne	fp, [r6]
   158d8:	add	sp, sp, #44	; 0x2c
   158dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158e0:	andeq	r9, r2, r8, lsr #5
   158e4:	mov	r3, r2
   158e8:	mov	r2, #0
   158ec:	b	1580c <dcngettext@plt+0x4540>
   158f0:	push	{r4, r5, r6, r7, r8, lr}
   158f4:	ldr	r6, [pc, #116]	; 15970 <dcngettext@plt+0x46a4>
   158f8:	ldr	r3, [r6, #4]
   158fc:	ldr	r7, [r6]
   15900:	cmp	r3, #1
   15904:	movgt	r5, r7
   15908:	movgt	r4, #1
   1590c:	ble	1592c <dcngettext@plt+0x4660>
   15910:	ldr	r0, [r5, #12]
   15914:	bl	16eac <dcngettext@plt+0x5be0>
   15918:	ldr	r3, [r6, #4]
   1591c:	add	r4, r4, #1
   15920:	cmp	r3, r4
   15924:	add	r5, r5, #8
   15928:	bgt	15910 <dcngettext@plt+0x4644>
   1592c:	ldr	r0, [r7, #4]
   15930:	ldr	r4, [pc, #60]	; 15974 <dcngettext@plt+0x46a8>
   15934:	cmp	r0, r4
   15938:	beq	1594c <dcngettext@plt+0x4680>
   1593c:	bl	16eac <dcngettext@plt+0x5be0>
   15940:	mov	r3, #256	; 0x100
   15944:	str	r4, [r6, #12]
   15948:	str	r3, [r6, #8]
   1594c:	ldr	r4, [pc, #36]	; 15978 <dcngettext@plt+0x46ac>
   15950:	cmp	r7, r4
   15954:	beq	15964 <dcngettext@plt+0x4698>
   15958:	mov	r0, r7
   1595c:	bl	16eac <dcngettext@plt+0x5be0>
   15960:	str	r4, [r6]
   15964:	mov	r3, #1
   15968:	str	r3, [r6, #4]
   1596c:	pop	{r4, r5, r6, r7, r8, pc}
   15970:	andeq	r9, r2, r8, lsr r1
   15974:	andeq	r9, r2, r8, lsr #3
   15978:	andeq	r9, r2, r0, asr #2
   1597c:	ldr	r3, [pc, #4]	; 15988 <dcngettext@plt+0x46bc>
   15980:	mvn	r2, #0
   15984:	b	154cc <dcngettext@plt+0x4200>
   15988:	andeq	r9, r2, r8, lsr #5
   1598c:	ldr	r3, [pc]	; 15994 <dcngettext@plt+0x46c8>
   15990:	b	154cc <dcngettext@plt+0x4200>
   15994:	andeq	r9, r2, r8, lsr #5
   15998:	mov	r1, r0
   1599c:	ldr	r3, [pc, #8]	; 159ac <dcngettext@plt+0x46e0>
   159a0:	mvn	r2, #0
   159a4:	mov	r0, #0
   159a8:	b	154cc <dcngettext@plt+0x4200>
   159ac:	andeq	r9, r2, r8, lsr #5
   159b0:	mov	r2, r1
   159b4:	ldr	r3, [pc, #8]	; 159c4 <dcngettext@plt+0x46f8>
   159b8:	mov	r1, r0
   159bc:	mov	r0, #0
   159c0:	b	154cc <dcngettext@plt+0x4200>
   159c4:	andeq	r9, r2, r8, lsr #5
   159c8:	push	{r4, r5, lr}
   159cc:	sub	sp, sp, #52	; 0x34
   159d0:	mov	r5, r2
   159d4:	mov	r4, r0
   159d8:	mov	r0, sp
   159dc:	bl	13e68 <dcngettext@plt+0x2b9c>
   159e0:	mov	r3, sp
   159e4:	mov	r1, r5
   159e8:	mov	r0, r4
   159ec:	mvn	r2, #0
   159f0:	bl	154cc <dcngettext@plt+0x4200>
   159f4:	add	sp, sp, #52	; 0x34
   159f8:	pop	{r4, r5, pc}
   159fc:	push	{r4, r5, r6, lr}
   15a00:	sub	sp, sp, #48	; 0x30
   15a04:	mov	r5, r2
   15a08:	mov	r6, r3
   15a0c:	mov	r4, r0
   15a10:	mov	r0, sp
   15a14:	bl	13e68 <dcngettext@plt+0x2b9c>
   15a18:	mov	r3, sp
   15a1c:	mov	r2, r6
   15a20:	mov	r1, r5
   15a24:	mov	r0, r4
   15a28:	bl	154cc <dcngettext@plt+0x4200>
   15a2c:	add	sp, sp, #48	; 0x30
   15a30:	pop	{r4, r5, r6, pc}
   15a34:	mov	r2, r1
   15a38:	mov	r1, r0
   15a3c:	mov	r0, #0
   15a40:	b	159c8 <dcngettext@plt+0x46fc>
   15a44:	mov	r3, r2
   15a48:	mov	r2, r1
   15a4c:	mov	r1, r0
   15a50:	mov	r0, #0
   15a54:	b	159fc <dcngettext@plt+0x4730>
   15a58:	push	{r4, r5, r6, r7, r8, lr}
   15a5c:	mov	r7, r0
   15a60:	ldr	lr, [pc, #100]	; 15acc <dcngettext@plt+0x4800>
   15a64:	mov	r8, r1
   15a68:	mov	r4, r2
   15a6c:	ldm	lr!, {r0, r1, r2, r3}
   15a70:	sub	sp, sp, #48	; 0x30
   15a74:	mov	ip, sp
   15a78:	lsr	r5, r4, #5
   15a7c:	stmia	ip!, {r0, r1, r2, r3}
   15a80:	add	r6, sp, #8
   15a84:	ldm	lr!, {r0, r1, r2, r3}
   15a88:	and	r4, r4, #31
   15a8c:	stmia	ip!, {r0, r1, r2, r3}
   15a90:	ldm	lr, {r0, r1, r2, r3}
   15a94:	stm	ip, {r0, r1, r2, r3}
   15a98:	mov	r2, r8
   15a9c:	ldr	lr, [r6, r5, lsl #2]
   15aa0:	mov	r1, r7
   15aa4:	mov	r3, sp
   15aa8:	lsr	ip, lr, r4
   15aac:	eor	ip, ip, #1
   15ab0:	and	ip, ip, #1
   15ab4:	mov	r0, #0
   15ab8:	eor	r4, lr, ip, lsl r4
   15abc:	str	r4, [r6, r5, lsl #2]
   15ac0:	bl	154cc <dcngettext@plt+0x4200>
   15ac4:	add	sp, sp, #48	; 0x30
   15ac8:	pop	{r4, r5, r6, r7, r8, pc}
   15acc:	andeq	r9, r2, r8, lsr #5
   15ad0:	mov	r2, r1
   15ad4:	mvn	r1, #0
   15ad8:	b	15a58 <dcngettext@plt+0x478c>
   15adc:	mov	r2, #58	; 0x3a
   15ae0:	mvn	r1, #0
   15ae4:	b	15a58 <dcngettext@plt+0x478c>
   15ae8:	mov	r2, #58	; 0x3a
   15aec:	b	15a58 <dcngettext@plt+0x478c>
   15af0:	push	{r4, r5, r6, r7, lr}
   15af4:	sub	sp, sp, #100	; 0x64
   15af8:	mov	r6, r0
   15afc:	mov	r0, sp
   15b00:	mov	r7, r2
   15b04:	bl	13e68 <dcngettext@plt+0x2b9c>
   15b08:	mov	ip, sp
   15b0c:	add	lr, sp, #48	; 0x30
   15b10:	ldm	ip!, {r0, r1, r2, r3}
   15b14:	stmia	lr!, {r0, r1, r2, r3}
   15b18:	ldm	ip!, {r0, r1, r2, r3}
   15b1c:	ldr	r5, [sp, #60]	; 0x3c
   15b20:	stmia	lr!, {r0, r1, r2, r3}
   15b24:	mvn	r4, r5
   15b28:	ldm	ip, {r0, r1, r2, r3}
   15b2c:	and	ip, r4, #67108864	; 0x4000000
   15b30:	eor	ip, ip, r5
   15b34:	str	ip, [sp, #60]	; 0x3c
   15b38:	stm	lr, {r0, r1, r2, r3}
   15b3c:	mov	r1, r7
   15b40:	mov	r0, r6
   15b44:	add	r3, sp, #48	; 0x30
   15b48:	mvn	r2, #0
   15b4c:	bl	154cc <dcngettext@plt+0x4200>
   15b50:	add	sp, sp, #100	; 0x64
   15b54:	pop	{r4, r5, r6, r7, pc}
   15b58:	push	{r4, r5, r6, r7, r8, lr}
   15b5c:	mov	r5, r1
   15b60:	ldr	lr, [pc, #100]	; 15bcc <dcngettext@plt+0x4900>
   15b64:	mov	r4, r2
   15b68:	mov	r7, r0
   15b6c:	mov	r8, r3
   15b70:	ldm	lr!, {r0, r1, r2, r3}
   15b74:	sub	sp, sp, #48	; 0x30
   15b78:	mov	ip, sp
   15b7c:	mov	r6, #10
   15b80:	stmia	ip!, {r0, r1, r2, r3}
   15b84:	cmp	r4, #0
   15b88:	cmpne	r5, #0
   15b8c:	ldm	lr!, {r0, r1, r2, r3}
   15b90:	str	r6, [sp]
   15b94:	stmia	ip!, {r0, r1, r2, r3}
   15b98:	ldm	lr, {r0, r1, r2, r3}
   15b9c:	stm	ip, {r0, r1, r2, r3}
   15ba0:	beq	15bc8 <dcngettext@plt+0x48fc>
   15ba4:	mov	r3, sp
   15ba8:	mov	r1, r8
   15bac:	mov	r0, r7
   15bb0:	ldr	r2, [sp, #72]	; 0x48
   15bb4:	str	r5, [sp, #40]	; 0x28
   15bb8:	str	r4, [sp, #44]	; 0x2c
   15bbc:	bl	154cc <dcngettext@plt+0x4200>
   15bc0:	add	sp, sp, #48	; 0x30
   15bc4:	pop	{r4, r5, r6, r7, r8, pc}
   15bc8:	bl	112b4 <abort@plt>
   15bcc:	andeq	r9, r2, r8, lsr #5
   15bd0:	push	{lr}		; (str lr, [sp, #-4]!)
   15bd4:	sub	sp, sp, #12
   15bd8:	mvn	ip, #0
   15bdc:	str	ip, [sp]
   15be0:	bl	15b58 <dcngettext@plt+0x488c>
   15be4:	add	sp, sp, #12
   15be8:	pop	{pc}		; (ldr pc, [sp], #4)
   15bec:	push	{lr}		; (str lr, [sp, #-4]!)
   15bf0:	sub	sp, sp, #12
   15bf4:	mvn	ip, #0
   15bf8:	mov	r3, r2
   15bfc:	str	ip, [sp]
   15c00:	mov	r2, r1
   15c04:	mov	r1, r0
   15c08:	mov	r0, #0
   15c0c:	bl	15b58 <dcngettext@plt+0x488c>
   15c10:	add	sp, sp, #12
   15c14:	pop	{pc}		; (ldr pc, [sp], #4)
   15c18:	push	{lr}		; (str lr, [sp, #-4]!)
   15c1c:	sub	sp, sp, #12
   15c20:	str	r3, [sp]
   15c24:	mov	r3, r2
   15c28:	mov	r2, r1
   15c2c:	mov	r1, r0
   15c30:	mov	r0, #0
   15c34:	bl	15b58 <dcngettext@plt+0x488c>
   15c38:	add	sp, sp, #12
   15c3c:	pop	{pc}		; (ldr pc, [sp], #4)
   15c40:	ldr	r3, [pc]	; 15c48 <dcngettext@plt+0x497c>
   15c44:	b	154cc <dcngettext@plt+0x4200>
   15c48:	andeq	r9, r2, r8, asr #2
   15c4c:	mov	r2, r1
   15c50:	ldr	r3, [pc, #8]	; 15c60 <dcngettext@plt+0x4994>
   15c54:	mov	r1, r0
   15c58:	mov	r0, #0
   15c5c:	b	154cc <dcngettext@plt+0x4200>
   15c60:	andeq	r9, r2, r8, asr #2
   15c64:	ldr	r3, [pc, #4]	; 15c70 <dcngettext@plt+0x49a4>
   15c68:	mvn	r2, #0
   15c6c:	b	154cc <dcngettext@plt+0x4200>
   15c70:	andeq	r9, r2, r8, asr #2
   15c74:	mov	r1, r0
   15c78:	ldr	r3, [pc, #8]	; 15c88 <dcngettext@plt+0x49bc>
   15c7c:	mvn	r2, #0
   15c80:	mov	r0, #0
   15c84:	b	154cc <dcngettext@plt+0x4200>
   15c88:	andeq	r9, r2, r8, asr #2
   15c8c:	push	{r4, r5, r6, lr}
   15c90:	mov	r5, r0
   15c94:	mov	r0, #33	; 0x21
   15c98:	bl	167d8 <dcngettext@plt+0x550c>
   15c9c:	add	r1, r5, #44	; 0x2c
   15ca0:	mov	r2, #32
   15ca4:	mov	r5, #0
   15ca8:	mov	r4, r0
   15cac:	bl	111b8 <strncpy@plt>
   15cb0:	mov	r0, r4
   15cb4:	strb	r5, [r4, #32]
   15cb8:	bl	1117c <strlen@plt>
   15cbc:	add	r0, r4, r0
   15cc0:	cmp	r4, r0
   15cc4:	bcs	15cd4 <dcngettext@plt+0x4a08>
   15cc8:	ldrb	r3, [r0, #-1]
   15ccc:	cmp	r3, #32
   15cd0:	beq	15cdc <dcngettext@plt+0x4a10>
   15cd4:	mov	r0, r4
   15cd8:	pop	{r4, r5, r6, pc}
   15cdc:	sub	r0, r0, #1
   15ce0:	cmp	r0, r4
   15ce4:	strb	r5, [r0]
   15ce8:	beq	15cd4 <dcngettext@plt+0x4a08>
   15cec:	ldrb	r3, [r0, #-1]!
   15cf0:	cmp	r3, #32
   15cf4:	beq	15ce0 <dcngettext@plt+0x4a14>
   15cf8:	mov	r0, r4
   15cfc:	pop	{r4, r5, r6, pc}
   15d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d04:	sub	sp, sp, #28
   15d08:	add	fp, sp, #24
   15d0c:	mov	ip, #0
   15d10:	mov	r8, r3
   15d14:	mov	r7, ip
   15d18:	str	r1, [sp, #8]
   15d1c:	str	r2, [sp, #12]
   15d20:	str	ip, [fp, #-4]!
   15d24:	mov	sl, ip
   15d28:	bl	10fe4 <utmpxname@plt>
   15d2c:	bl	11050 <setutxent@plt>
   15d30:	and	r6, r8, #2
   15d34:	mov	r5, r7
   15d38:	mov	r9, r7
   15d3c:	and	r8, r8, #1
   15d40:	bl	112c0 <getutxent@plt>
   15d44:	subs	r4, r0, #0
   15d48:	beq	15da8 <dcngettext@plt+0x4adc>
   15d4c:	ldrb	r2, [r4, #44]	; 0x2c
   15d50:	ldrsh	r3, [r4]
   15d54:	cmp	r2, #0
   15d58:	sub	r3, r3, #7
   15d5c:	clz	r3, r3
   15d60:	lsr	r3, r3, #5
   15d64:	moveq	r3, #0
   15d68:	cmp	r3, #0
   15d6c:	bne	15dc8 <dcngettext@plt+0x4afc>
   15d70:	cmp	r6, #0
   15d74:	bne	15d40 <dcngettext@plt+0x4a74>
   15d78:	ldr	r3, [sp, #20]
   15d7c:	cmp	r5, r3
   15d80:	beq	15e08 <dcngettext@plt+0x4b3c>
   15d84:	mov	r1, r4
   15d88:	mov	r2, #384	; 0x180
   15d8c:	add	r0, sl, r7
   15d90:	bl	11008 <memcpy@plt>
   15d94:	bl	112c0 <getutxent@plt>
   15d98:	add	r5, r5, #1
   15d9c:	add	r7, r7, #384	; 0x180
   15da0:	subs	r4, r0, #0
   15da4:	bne	15d4c <dcngettext@plt+0x4a80>
   15da8:	bl	11218 <endutxent@plt>
   15dac:	ldr	r3, [sp, #8]
   15db0:	mov	r0, r4
   15db4:	str	r5, [r3]
   15db8:	ldr	r3, [sp, #12]
   15dbc:	str	sl, [r3]
   15dc0:	add	sp, sp, #28
   15dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15dc8:	cmp	r8, #0
   15dcc:	beq	15d78 <dcngettext@plt+0x4aac>
   15dd0:	ldr	r0, [r4, #4]
   15dd4:	cmp	r0, #0
   15dd8:	ble	15d78 <dcngettext@plt+0x4aac>
   15ddc:	mov	r1, r9
   15de0:	bl	11158 <kill@plt>
   15de4:	cmp	r0, #0
   15de8:	bge	15d78 <dcngettext@plt+0x4aac>
   15dec:	bl	11194 <__errno_location@plt>
   15df0:	ldr	r3, [r0]
   15df4:	cmp	r3, #3
   15df8:	beq	15d40 <dcngettext@plt+0x4a74>
   15dfc:	ldr	r3, [sp, #20]
   15e00:	cmp	r5, r3
   15e04:	bne	15d84 <dcngettext@plt+0x4ab8>
   15e08:	mov	r3, #384	; 0x180
   15e0c:	str	r3, [sp]
   15e10:	mov	r0, sl
   15e14:	mvn	r3, #0
   15e18:	mov	r2, #1
   15e1c:	mov	r1, fp
   15e20:	bl	16964 <dcngettext@plt+0x5698>
   15e24:	mov	sl, r0
   15e28:	b	15d84 <dcngettext@plt+0x4ab8>
   15e2c:	push	{r4, lr}
   15e30:	ldrb	r3, [r0, #4]
   15e34:	cmp	r3, #0
   15e38:	bne	15e54 <dcngettext@plt+0x4b88>
   15e3c:	ldr	r0, [pc, #52]	; 15e78 <dcngettext@plt+0x4bac>
   15e40:	bl	1129c <unsetenv@plt>
   15e44:	cmp	r0, #0
   15e48:	beq	15e6c <dcngettext@plt+0x4ba0>
   15e4c:	mov	r0, #0
   15e50:	pop	{r4, pc}
   15e54:	add	r1, r0, #5
   15e58:	mov	r2, #1
   15e5c:	ldr	r0, [pc, #20]	; 15e78 <dcngettext@plt+0x4bac>
   15e60:	bl	11188 <setenv@plt>
   15e64:	cmp	r0, #0
   15e68:	bne	15e4c <dcngettext@plt+0x4b80>
   15e6c:	bl	1108c <tzset@plt>
   15e70:	mov	r0, #1
   15e74:	pop	{r4, pc}
   15e78:	andeq	r7, r1, r8, asr #24
   15e7c:	cmp	r0, #1
   15e80:	push	{r4, r5, r6, r7, r8, lr}
   15e84:	mov	r4, r0
   15e88:	moveq	r7, r0
   15e8c:	beq	15ecc <dcngettext@plt+0x4c00>
   15e90:	bl	11194 <__errno_location@plt>
   15e94:	mov	r6, r0
   15e98:	mov	r0, r4
   15e9c:	ldr	r8, [r6]
   15ea0:	bl	15e2c <dcngettext@plt+0x4b60>
   15ea4:	subs	r7, r0, #0
   15ea8:	ldreq	r8, [r6]
   15eac:	cmp	r4, #0
   15eb0:	beq	15ec8 <dcngettext@plt+0x4bfc>
   15eb4:	ldr	r5, [r4]
   15eb8:	mov	r0, r4
   15ebc:	bl	16eac <dcngettext@plt+0x5be0>
   15ec0:	subs	r4, r5, #0
   15ec4:	bne	15eb4 <dcngettext@plt+0x4be8>
   15ec8:	str	r8, [r6]
   15ecc:	mov	r0, r7
   15ed0:	pop	{r4, r5, r6, r7, r8, pc}
   15ed4:	push	{r4, r5, r6, r7, r8, lr}
   15ed8:	subs	r7, r0, #0
   15edc:	beq	15f38 <dcngettext@plt+0x4c6c>
   15ee0:	bl	1117c <strlen@plt>
   15ee4:	add	r5, r0, #1
   15ee8:	cmp	r5, #58	; 0x3a
   15eec:	addhi	r0, r0, #10
   15ef0:	bichi	r0, r0, #3
   15ef4:	movls	r0, #64	; 0x40
   15ef8:	bl	16da8 <dcngettext@plt+0x5adc>
   15efc:	subs	r4, r0, #0
   15f00:	beq	15f30 <dcngettext@plt+0x4c64>
   15f04:	mov	r3, r4
   15f08:	mov	r6, #0
   15f0c:	mov	r2, #1
   15f10:	strb	r2, [r4, #4]
   15f14:	str	r6, [r4]
   15f18:	mov	r1, r7
   15f1c:	strb	r6, [r3, #5]!
   15f20:	mov	r2, r5
   15f24:	mov	r0, r3
   15f28:	bl	11008 <memcpy@plt>
   15f2c:	strb	r6, [r0, r5]
   15f30:	mov	r0, r4
   15f34:	pop	{r4, r5, r6, r7, r8, pc}
   15f38:	mov	r0, #64	; 0x40
   15f3c:	bl	16da8 <dcngettext@plt+0x5adc>
   15f40:	subs	r4, r0, #0
   15f44:	beq	15f30 <dcngettext@plt+0x4c64>
   15f48:	str	r7, [r4]
   15f4c:	strb	r7, [r4, #4]
   15f50:	strb	r7, [r4, #5]
   15f54:	mov	r0, r4
   15f58:	pop	{r4, r5, r6, r7, r8, pc}
   15f5c:	push	{r4, r5, r6, r7, r8, lr}
   15f60:	ldr	r6, [r1, #40]	; 0x28
   15f64:	cmp	r6, #0
   15f68:	beq	16030 <dcngettext@plt+0x4d64>
   15f6c:	cmp	r1, r6
   15f70:	mov	r7, r1
   15f74:	mov	r5, r0
   15f78:	bhi	15f88 <dcngettext@plt+0x4cbc>
   15f7c:	add	r3, r1, #44	; 0x2c
   15f80:	cmp	r6, r3
   15f84:	bcc	16030 <dcngettext@plt+0x4d64>
   15f88:	ldrb	r3, [r6]
   15f8c:	cmp	r3, #0
   15f90:	addne	r4, r5, #5
   15f94:	beq	16028 <dcngettext@plt+0x4d5c>
   15f98:	mov	r1, r6
   15f9c:	mov	r0, r4
   15fa0:	bl	10fc0 <strcmp@plt>
   15fa4:	add	r2, r5, #5
   15fa8:	cmp	r0, #0
   15fac:	mov	r0, r4
   15fb0:	beq	1601c <dcngettext@plt+0x4d50>
   15fb4:	ldrb	r3, [r4]
   15fb8:	cmp	r3, #0
   15fbc:	bne	15fd4 <dcngettext@plt+0x4d08>
   15fc0:	cmp	r4, r2
   15fc4:	bne	16038 <dcngettext@plt+0x4d6c>
   15fc8:	ldrb	r3, [r5, #4]
   15fcc:	cmp	r3, #0
   15fd0:	beq	16038 <dcngettext@plt+0x4d6c>
   15fd4:	bl	1117c <strlen@plt>
   15fd8:	add	r0, r0, #1
   15fdc:	ldrb	r3, [r4, r0]!
   15fe0:	cmp	r3, #0
   15fe4:	bne	15f98 <dcngettext@plt+0x4ccc>
   15fe8:	ldr	r3, [r5]
   15fec:	cmp	r3, #0
   15ff0:	addne	r4, r3, #5
   15ff4:	movne	r5, r3
   15ff8:	b	15f98 <dcngettext@plt+0x4ccc>
   15ffc:	mov	r0, r6
   16000:	bl	15ed4 <dcngettext@plt+0x4c08>
   16004:	cmp	r0, #0
   16008:	str	r0, [r5]
   1600c:	popeq	{r4, r5, r6, r7, r8, pc}
   16010:	add	r4, r0, #5
   16014:	mov	r3, #0
   16018:	strb	r3, [r0, #4]
   1601c:	str	r4, [r7, #40]	; 0x28
   16020:	mov	r0, #1
   16024:	pop	{r4, r5, r6, r7, r8, pc}
   16028:	ldr	r4, [pc, #64]	; 16070 <dcngettext@plt+0x4da4>
   1602c:	b	1601c <dcngettext@plt+0x4d50>
   16030:	mov	r0, #1
   16034:	pop	{r4, r5, r6, r7, r8, pc}
   16038:	mov	r0, r6
   1603c:	bl	1117c <strlen@plt>
   16040:	add	r3, r5, #64	; 0x40
   16044:	sub	r3, r3, r4
   16048:	add	r8, r0, #1
   1604c:	cmp	r8, r3
   16050:	bge	15ffc <dcngettext@plt+0x4d30>
   16054:	mov	r1, r6
   16058:	mov	r2, r8
   1605c:	mov	r0, r4
   16060:	bl	11008 <memcpy@plt>
   16064:	mov	r3, #0
   16068:	strb	r3, [r4, r8]
   1606c:	b	1601c <dcngettext@plt+0x4d50>
   16070:	andeq	r7, r1, r4, lsr #17
   16074:	push	{r4, r5, r6, r7, r8, lr}
   16078:	mov	r4, r0
   1607c:	ldr	r0, [pc, #152]	; 1611c <dcngettext@plt+0x4e50>
   16080:	bl	110e0 <getenv@plt>
   16084:	ldrb	r3, [r4, #4]
   16088:	subs	r5, r0, #0
   1608c:	beq	160d4 <dcngettext@plt+0x4e08>
   16090:	cmp	r3, #0
   16094:	beq	160ac <dcngettext@plt+0x4de0>
   16098:	mov	r1, r5
   1609c:	add	r0, r4, #5
   160a0:	bl	10fc0 <strcmp@plt>
   160a4:	cmp	r0, #0
   160a8:	beq	160dc <dcngettext@plt+0x4e10>
   160ac:	mov	r0, r5
   160b0:	bl	15ed4 <dcngettext@plt+0x4c08>
   160b4:	subs	r5, r0, #0
   160b8:	beq	160cc <dcngettext@plt+0x4e00>
   160bc:	mov	r0, r4
   160c0:	bl	15e2c <dcngettext@plt+0x4b60>
   160c4:	cmp	r0, #0
   160c8:	beq	160e8 <dcngettext@plt+0x4e1c>
   160cc:	mov	r0, r5
   160d0:	pop	{r4, r5, r6, r7, r8, pc}
   160d4:	cmp	r3, #0
   160d8:	bne	160ac <dcngettext@plt+0x4de0>
   160dc:	mov	r5, #1
   160e0:	mov	r0, r5
   160e4:	pop	{r4, r5, r6, r7, r8, pc}
   160e8:	bl	11194 <__errno_location@plt>
   160ec:	cmp	r5, #1
   160f0:	mov	r6, r0
   160f4:	ldr	r7, [r0]
   160f8:	beq	16110 <dcngettext@plt+0x4e44>
   160fc:	ldr	r4, [r5]
   16100:	mov	r0, r5
   16104:	bl	16eac <dcngettext@plt+0x5be0>
   16108:	subs	r5, r4, #0
   1610c:	bne	160fc <dcngettext@plt+0x4e30>
   16110:	str	r7, [r6]
   16114:	mov	r5, #0
   16118:	b	160cc <dcngettext@plt+0x4e00>
   1611c:	andeq	r7, r1, r8, asr #24
   16120:	cmp	r0, #1
   16124:	bxeq	lr
   16128:	cmp	r0, #0
   1612c:	beq	16148 <dcngettext@plt+0x4e7c>
   16130:	push	{r4, lr}
   16134:	ldr	r4, [r0]
   16138:	bl	16eac <dcngettext@plt+0x5be0>
   1613c:	subs	r0, r4, #0
   16140:	bne	16134 <dcngettext@plt+0x4e68>
   16144:	pop	{r4, pc}
   16148:	bx	lr
   1614c:	subs	ip, r0, #0
   16150:	push	{r4, r5, r6, r7, r8, lr}
   16154:	mov	r5, r1
   16158:	beq	161c0 <dcngettext@plt+0x4ef4>
   1615c:	mov	r4, r2
   16160:	mov	r6, ip
   16164:	bl	16074 <dcngettext@plt+0x4da8>
   16168:	subs	r7, r0, #0
   1616c:	beq	161b8 <dcngettext@plt+0x4eec>
   16170:	mov	r0, r5
   16174:	mov	r1, r4
   16178:	bl	11068 <localtime_r@plt>
   1617c:	cmp	r0, #0
   16180:	beq	161b0 <dcngettext@plt+0x4ee4>
   16184:	mov	r0, r6
   16188:	mov	r1, r4
   1618c:	bl	15f5c <dcngettext@plt+0x4c90>
   16190:	cmp	r0, #0
   16194:	beq	161b0 <dcngettext@plt+0x4ee4>
   16198:	mov	r0, r7
   1619c:	bl	15e7c <dcngettext@plt+0x4bb0>
   161a0:	cmp	r0, #0
   161a4:	beq	161b8 <dcngettext@plt+0x4eec>
   161a8:	mov	r0, r4
   161ac:	pop	{r4, r5, r6, r7, r8, pc}
   161b0:	mov	r0, r7
   161b4:	bl	15e7c <dcngettext@plt+0x4bb0>
   161b8:	mov	r0, #0
   161bc:	pop	{r4, r5, r6, r7, r8, pc}
   161c0:	mov	r0, r5
   161c4:	mov	r1, r2
   161c8:	pop	{r4, r5, r6, r7, r8, lr}
   161cc:	b	10fb4 <gmtime_r@plt>
   161d0:	push	{r4, r5, r6, r7, lr}
   161d4:	subs	r7, r0, #0
   161d8:	sub	sp, sp, #52	; 0x34
   161dc:	mov	r4, r1
   161e0:	beq	162a0 <dcngettext@plt+0x4fd4>
   161e4:	bl	16074 <dcngettext@plt+0x4da8>
   161e8:	subs	r6, r0, #0
   161ec:	beq	16298 <dcngettext@plt+0x4fcc>
   161f0:	ldm	r4, {r1, r2, ip}
   161f4:	ldr	r0, [r4, #12]
   161f8:	ldr	r3, [r4, #16]
   161fc:	str	r1, [sp, #4]
   16200:	str	r2, [sp, #8]
   16204:	ldr	r1, [r4, #20]
   16208:	ldr	r2, [r4, #32]
   1620c:	str	r0, [sp, #16]
   16210:	str	r3, [sp, #20]
   16214:	add	r0, sp, #4
   16218:	mvn	r3, #0
   1621c:	str	r3, [sp, #32]
   16220:	str	ip, [sp, #12]
   16224:	str	r1, [sp, #24]
   16228:	str	r2, [sp, #36]	; 0x24
   1622c:	bl	10fcc <mktime@plt>
   16230:	ldr	r3, [sp, #32]
   16234:	cmp	r3, #0
   16238:	mov	r5, r0
   1623c:	blt	16290 <dcngettext@plt+0x4fc4>
   16240:	mov	r0, r7
   16244:	add	r1, sp, #4
   16248:	bl	15f5c <dcngettext@plt+0x4c90>
   1624c:	cmp	r0, #0
   16250:	beq	16290 <dcngettext@plt+0x4fc4>
   16254:	mov	r0, r6
   16258:	bl	15e7c <dcngettext@plt+0x4bb0>
   1625c:	cmp	r0, #0
   16260:	beq	16298 <dcngettext@plt+0x4fcc>
   16264:	add	lr, sp, #4
   16268:	mov	ip, r4
   1626c:	ldm	lr!, {r0, r1, r2, r3}
   16270:	stmia	ip!, {r0, r1, r2, r3}
   16274:	ldm	lr!, {r0, r1, r2, r3}
   16278:	stmia	ip!, {r0, r1, r2, r3}
   1627c:	ldm	lr, {r0, r1, r2}
   16280:	stm	ip, {r0, r1, r2}
   16284:	mov	r0, r5
   16288:	add	sp, sp, #52	; 0x34
   1628c:	pop	{r4, r5, r6, r7, pc}
   16290:	mov	r0, r6
   16294:	bl	15e7c <dcngettext@plt+0x4bb0>
   16298:	mvn	r5, #0
   1629c:	b	16284 <dcngettext@plt+0x4fb8>
   162a0:	mov	r0, r1
   162a4:	bl	1126c <timegm@plt>
   162a8:	mov	r5, r0
   162ac:	mov	r0, r5
   162b0:	add	sp, sp, #52	; 0x34
   162b4:	pop	{r4, r5, r6, r7, pc}
   162b8:	push	{r4, r5, r6, lr}
   162bc:	sub	sp, sp, #32
   162c0:	cmp	r1, #0
   162c4:	mov	r4, r0
   162c8:	ldr	r5, [sp, #48]	; 0x30
   162cc:	ldr	r6, [sp, #52]	; 0x34
   162d0:	beq	165e8 <dcngettext@plt+0x531c>
   162d4:	stm	sp, {r2, r3}
   162d8:	mov	r3, r1
   162dc:	ldr	r2, [pc, #808]	; 1660c <dcngettext@plt+0x5340>
   162e0:	mov	r1, #1
   162e4:	bl	111dc <__fprintf_chk@plt>
   162e8:	mov	r2, #5
   162ec:	ldr	r1, [pc, #796]	; 16610 <dcngettext@plt+0x5344>
   162f0:	mov	r0, #0
   162f4:	bl	11044 <dcgettext@plt>
   162f8:	ldr	r3, [pc, #788]	; 16614 <dcngettext@plt+0x5348>
   162fc:	ldr	r2, [pc, #788]	; 16618 <dcngettext@plt+0x534c>
   16300:	str	r3, [sp]
   16304:	mov	r1, #1
   16308:	mov	r3, r0
   1630c:	mov	r0, r4
   16310:	bl	111dc <__fprintf_chk@plt>
   16314:	mov	r1, r4
   16318:	mov	r0, #10
   1631c:	bl	11038 <fputc_unlocked@plt>
   16320:	mov	r2, #5
   16324:	ldr	r1, [pc, #752]	; 1661c <dcngettext@plt+0x5350>
   16328:	mov	r0, #0
   1632c:	bl	11044 <dcgettext@plt>
   16330:	mov	r1, #1
   16334:	ldr	r3, [pc, #740]	; 16620 <dcngettext@plt+0x5354>
   16338:	mov	r2, r0
   1633c:	mov	r0, r4
   16340:	bl	111dc <__fprintf_chk@plt>
   16344:	mov	r1, r4
   16348:	mov	r0, #10
   1634c:	bl	11038 <fputc_unlocked@plt>
   16350:	cmp	r6, #9
   16354:	ldrls	pc, [pc, r6, lsl #2]
   16358:	b	16600 <dcngettext@plt+0x5334>
   1635c:	andeq	r6, r1, r0, ror #7
   16360:	andeq	r6, r1, r8, ror #7
   16364:	andeq	r6, r1, r4, lsl r4
   16368:	andeq	r6, r1, r8, asr #8
   1636c:	andeq	r6, r1, r4, lsl #9
   16370:	andeq	r6, r1, r0, asr #9
   16374:	strdeq	r6, [r1], -ip
   16378:	andeq	r6, r1, r0, asr #10
   1637c:	muleq	r1, r0, r5
   16380:	andeq	r6, r1, r4, lsl #7
   16384:	ldr	r1, [pc, #664]	; 16624 <dcngettext@plt+0x5358>
   16388:	mov	r2, #5
   1638c:	mov	r0, #0
   16390:	bl	11044 <dcgettext@plt>
   16394:	ldr	ip, [r5, #32]
   16398:	ldr	r1, [r5, #28]
   1639c:	ldr	r2, [r5, #24]
   163a0:	ldr	r3, [r5]
   163a4:	ldr	r6, [r5, #20]
   163a8:	str	ip, [sp, #28]
   163ac:	ldr	lr, [r5, #16]
   163b0:	str	r1, [sp, #24]
   163b4:	ldr	ip, [r5, #12]
   163b8:	str	r2, [sp, #20]
   163bc:	ldr	r1, [r5, #8]
   163c0:	ldr	r2, [r5, #4]
   163c4:	str	r6, [sp, #16]
   163c8:	stmib	sp, {r1, ip, lr}
   163cc:	mov	r1, #1
   163d0:	str	r2, [sp]
   163d4:	mov	r2, r0
   163d8:	mov	r0, r4
   163dc:	bl	111dc <__fprintf_chk@plt>
   163e0:	add	sp, sp, #32
   163e4:	pop	{r4, r5, r6, pc}
   163e8:	mov	r2, #5
   163ec:	ldr	r1, [pc, #564]	; 16628 <dcngettext@plt+0x535c>
   163f0:	mov	r0, #0
   163f4:	bl	11044 <dcgettext@plt>
   163f8:	ldr	r3, [r5]
   163fc:	mov	r1, #1
   16400:	mov	r2, r0
   16404:	mov	r0, r4
   16408:	add	sp, sp, #32
   1640c:	pop	{r4, r5, r6, lr}
   16410:	b	111dc <__fprintf_chk@plt>
   16414:	mov	r2, #5
   16418:	ldr	r1, [pc, #524]	; 1662c <dcngettext@plt+0x5360>
   1641c:	mov	r0, #0
   16420:	bl	11044 <dcgettext@plt>
   16424:	ldr	r2, [r5, #4]
   16428:	ldr	r3, [r5]
   1642c:	mov	r1, #1
   16430:	str	r2, [sp, #48]	; 0x30
   16434:	mov	r2, r0
   16438:	mov	r0, r4
   1643c:	add	sp, sp, #32
   16440:	pop	{r4, r5, r6, lr}
   16444:	b	111dc <__fprintf_chk@plt>
   16448:	mov	r2, #5
   1644c:	ldr	r1, [pc, #476]	; 16630 <dcngettext@plt+0x5364>
   16450:	mov	r0, #0
   16454:	bl	11044 <dcgettext@plt>
   16458:	ldr	r1, [r5, #8]
   1645c:	ldr	r2, [r5, #4]
   16460:	ldr	r3, [r5]
   16464:	str	r1, [sp, #52]	; 0x34
   16468:	str	r2, [sp, #48]	; 0x30
   1646c:	mov	r1, #1
   16470:	mov	r2, r0
   16474:	mov	r0, r4
   16478:	add	sp, sp, #32
   1647c:	pop	{r4, r5, r6, lr}
   16480:	b	111dc <__fprintf_chk@plt>
   16484:	mov	r2, #5
   16488:	ldr	r1, [pc, #420]	; 16634 <dcngettext@plt+0x5368>
   1648c:	mov	r0, #0
   16490:	bl	11044 <dcgettext@plt>
   16494:	ldr	r1, [r5, #8]
   16498:	ldr	ip, [r5, #12]
   1649c:	ldr	r2, [r5, #4]
   164a0:	ldr	r3, [r5]
   164a4:	stmib	sp, {r1, ip}
   164a8:	str	r2, [sp]
   164ac:	mov	r1, #1
   164b0:	mov	r2, r0
   164b4:	mov	r0, r4
   164b8:	bl	111dc <__fprintf_chk@plt>
   164bc:	b	163e0 <dcngettext@plt+0x5114>
   164c0:	mov	r2, #5
   164c4:	ldr	r1, [pc, #364]	; 16638 <dcngettext@plt+0x536c>
   164c8:	mov	r0, #0
   164cc:	bl	11044 <dcgettext@plt>
   164d0:	add	r1, r5, #8
   164d4:	ldr	r2, [r5, #4]
   164d8:	ldm	r1, {r1, ip, lr}
   164dc:	ldr	r3, [r5]
   164e0:	str	r2, [sp]
   164e4:	stmib	sp, {r1, ip, lr}
   164e8:	mov	r1, #1
   164ec:	mov	r2, r0
   164f0:	mov	r0, r4
   164f4:	bl	111dc <__fprintf_chk@plt>
   164f8:	b	163e0 <dcngettext@plt+0x5114>
   164fc:	mov	r2, #5
   16500:	ldr	r1, [pc, #308]	; 1663c <dcngettext@plt+0x5370>
   16504:	mov	r0, #0
   16508:	bl	11044 <dcgettext@plt>
   1650c:	add	r1, r5, #8
   16510:	ldr	r2, [r5, #4]
   16514:	ldm	r1, {r1, ip, lr}
   16518:	ldr	r6, [r5, #20]
   1651c:	ldr	r3, [r5]
   16520:	stmib	sp, {r1, ip, lr}
   16524:	mov	r1, #1
   16528:	str	r2, [sp]
   1652c:	str	r6, [sp, #16]
   16530:	mov	r2, r0
   16534:	mov	r0, r4
   16538:	bl	111dc <__fprintf_chk@plt>
   1653c:	b	163e0 <dcngettext@plt+0x5114>
   16540:	mov	r2, #5
   16544:	ldr	r1, [pc, #244]	; 16640 <dcngettext@plt+0x5374>
   16548:	mov	r0, #0
   1654c:	bl	11044 <dcgettext@plt>
   16550:	ldr	r2, [r5, #24]
   16554:	ldr	r3, [r5]
   16558:	ldr	r6, [r5, #20]
   1655c:	ldr	lr, [r5, #16]
   16560:	ldr	ip, [r5, #12]
   16564:	str	r2, [sp, #20]
   16568:	ldr	r1, [r5, #8]
   1656c:	ldr	r2, [r5, #4]
   16570:	str	r6, [sp, #16]
   16574:	stmib	sp, {r1, ip, lr}
   16578:	mov	r1, #1
   1657c:	str	r2, [sp]
   16580:	mov	r2, r0
   16584:	mov	r0, r4
   16588:	bl	111dc <__fprintf_chk@plt>
   1658c:	b	163e0 <dcngettext@plt+0x5114>
   16590:	mov	r2, #5
   16594:	ldr	r1, [pc, #168]	; 16644 <dcngettext@plt+0x5378>
   16598:	mov	r0, #0
   1659c:	bl	11044 <dcgettext@plt>
   165a0:	ldr	r1, [r5, #28]
   165a4:	ldr	r2, [r5, #24]
   165a8:	ldr	r3, [r5]
   165ac:	ldr	r6, [r5, #20]
   165b0:	ldr	lr, [r5, #16]
   165b4:	str	r1, [sp, #24]
   165b8:	ldr	ip, [r5, #12]
   165bc:	str	r2, [sp, #20]
   165c0:	ldr	r1, [r5, #8]
   165c4:	ldr	r2, [r5, #4]
   165c8:	str	r6, [sp, #16]
   165cc:	stmib	sp, {r1, ip, lr}
   165d0:	mov	r1, #1
   165d4:	str	r2, [sp]
   165d8:	mov	r2, r0
   165dc:	mov	r0, r4
   165e0:	bl	111dc <__fprintf_chk@plt>
   165e4:	b	163e0 <dcngettext@plt+0x5114>
   165e8:	str	r3, [sp]
   165ec:	mov	r1, #1
   165f0:	mov	r3, r2
   165f4:	ldr	r2, [pc, #76]	; 16648 <dcngettext@plt+0x537c>
   165f8:	bl	111dc <__fprintf_chk@plt>
   165fc:	b	162e8 <dcngettext@plt+0x501c>
   16600:	mov	r2, #5
   16604:	ldr	r1, [pc, #64]	; 1664c <dcngettext@plt+0x5380>
   16608:	b	1638c <dcngettext@plt+0x50c0>
   1660c:	andeq	r7, r1, ip, asr #24
   16610:	andeq	r7, r1, r0, ror #24
   16614:	andeq	r0, r0, r6, ror #15
   16618:	andeq	r7, r1, r8, lsr pc
   1661c:	andeq	r7, r1, r4, ror #24
   16620:	andeq	r7, r1, r0, lsl sp
   16624:	andeq	r7, r1, r0, asr #28
   16628:	andeq	r7, r1, r4, lsr sp
   1662c:	andeq	r7, r1, r4, asr #26
   16630:	andeq	r7, r1, ip, asr sp
   16634:	andeq	r7, r1, r8, ror sp
   16638:	muleq	r1, r8, sp
   1663c:			; <UNDEFINED> instruction: 0x00017dbc
   16640:	andeq	r7, r1, r4, ror #27
   16644:	andeq	r7, r1, r0, lsl lr
   16648:	andeq	r7, r1, r8, asr ip
   1664c:	andeq	r7, r1, r4, ror lr
   16650:	push	{r4, r5, lr}
   16654:	sub	sp, sp, #12
   16658:	ldr	r5, [sp, #24]
   1665c:	ldr	ip, [r5]
   16660:	cmp	ip, #0
   16664:	beq	16680 <dcngettext@plt+0x53b4>
   16668:	mov	lr, r5
   1666c:	mov	ip, #0
   16670:	ldr	r4, [lr, #4]!
   16674:	add	ip, ip, #1
   16678:	cmp	r4, #0
   1667c:	bne	16670 <dcngettext@plt+0x53a4>
   16680:	stm	sp, {r5, ip}
   16684:	bl	162b8 <dcngettext@plt+0x4fec>
   16688:	add	sp, sp, #12
   1668c:	pop	{r4, r5, pc}
   16690:	push	{r4, r5, lr}
   16694:	sub	sp, sp, #52	; 0x34
   16698:	add	r5, sp, #4
   1669c:	ldr	r4, [sp, #64]	; 0x40
   166a0:	mov	ip, #0
   166a4:	sub	r4, r4, #4
   166a8:	ldr	lr, [r4, #4]!
   166ac:	cmp	lr, #0
   166b0:	str	lr, [r5, #4]!
   166b4:	beq	166c4 <dcngettext@plt+0x53f8>
   166b8:	add	ip, ip, #1
   166bc:	cmp	ip, #10
   166c0:	bne	166a8 <dcngettext@plt+0x53dc>
   166c4:	add	lr, sp, #8
   166c8:	str	ip, [sp, #4]
   166cc:	str	lr, [sp]
   166d0:	bl	162b8 <dcngettext@plt+0x4fec>
   166d4:	add	sp, sp, #52	; 0x34
   166d8:	pop	{r4, r5, pc}
   166dc:	push	{r3}		; (str r3, [sp, #-4]!)
   166e0:	push	{r4, lr}
   166e4:	sub	sp, sp, #60	; 0x3c
   166e8:	add	lr, sp, #56	; 0x38
   166ec:	add	r3, sp, #72	; 0x48
   166f0:	str	r3, [lr, #-44]!	; 0xffffffd4
   166f4:	add	r4, sp, #68	; 0x44
   166f8:	mov	r3, #0
   166fc:	ldr	ip, [r4, #4]!
   16700:	cmp	ip, #0
   16704:	str	ip, [lr, #4]!
   16708:	beq	16718 <dcngettext@plt+0x544c>
   1670c:	add	r3, r3, #1
   16710:	cmp	r3, #10
   16714:	bne	166fc <dcngettext@plt+0x5430>
   16718:	add	ip, sp, #16
   1671c:	str	r3, [sp, #4]
   16720:	str	ip, [sp]
   16724:	ldr	r3, [sp, #68]	; 0x44
   16728:	bl	162b8 <dcngettext@plt+0x4fec>
   1672c:	add	sp, sp, #60	; 0x3c
   16730:	pop	{r4, lr}
   16734:	add	sp, sp, #4
   16738:	bx	lr
   1673c:	ldr	r3, [pc, #116]	; 167b8 <dcngettext@plt+0x54ec>
   16740:	push	{r4, lr}
   16744:	mov	r0, #10
   16748:	ldr	r1, [r3]
   1674c:	bl	11038 <fputc_unlocked@plt>
   16750:	mov	r2, #5
   16754:	ldr	r1, [pc, #96]	; 167bc <dcngettext@plt+0x54f0>
   16758:	mov	r0, #0
   1675c:	bl	11044 <dcgettext@plt>
   16760:	ldr	r2, [pc, #88]	; 167c0 <dcngettext@plt+0x54f4>
   16764:	mov	r1, r0
   16768:	mov	r0, #1
   1676c:	bl	111c4 <__printf_chk@plt>
   16770:	mov	r2, #5
   16774:	ldr	r1, [pc, #72]	; 167c4 <dcngettext@plt+0x54f8>
   16778:	mov	r0, #0
   1677c:	bl	11044 <dcgettext@plt>
   16780:	ldr	r3, [pc, #64]	; 167c8 <dcngettext@plt+0x54fc>
   16784:	ldr	r2, [pc, #64]	; 167cc <dcngettext@plt+0x5500>
   16788:	mov	r1, r0
   1678c:	mov	r0, #1
   16790:	bl	111c4 <__printf_chk@plt>
   16794:	mov	r2, #5
   16798:	ldr	r1, [pc, #48]	; 167d0 <dcngettext@plt+0x5504>
   1679c:	mov	r0, #0
   167a0:	bl	11044 <dcgettext@plt>
   167a4:	ldr	r2, [pc, #40]	; 167d4 <dcngettext@plt+0x5508>
   167a8:	pop	{r4, lr}
   167ac:	mov	r1, r0
   167b0:	mov	r0, #1
   167b4:	b	111c4 <__printf_chk@plt>
   167b8:	andeq	r9, r2, ip, lsl #3
   167bc:			; <UNDEFINED> instruction: 0x00017eb0
   167c0:	andeq	r7, r1, r4, asr #29
   167c4:	ldrdeq	r7, [r1], -ip
   167c8:	strdeq	r7, [r1], -r8
   167cc:	andeq	r7, r1, r0, lsr #18
   167d0:	strdeq	r7, [r1], -r0
   167d4:	andeq	r7, r1, r8, lsl pc
   167d8:	push	{r4, lr}
   167dc:	bl	16da8 <dcngettext@plt+0x5adc>
   167e0:	cmp	r0, #0
   167e4:	popne	{r4, pc}
   167e8:	bl	16d20 <dcngettext@plt+0x5a54>
   167ec:	push	{r4, lr}
   167f0:	bl	16da8 <dcngettext@plt+0x5adc>
   167f4:	cmp	r0, #0
   167f8:	popne	{r4, pc}
   167fc:	bl	16d20 <dcngettext@plt+0x5a54>
   16800:	push	{r4, lr}
   16804:	bl	16da8 <dcngettext@plt+0x5adc>
   16808:	cmp	r0, #0
   1680c:	popne	{r4, pc}
   16810:	bl	16d20 <dcngettext@plt+0x5a54>
   16814:	push	{r4, r5, r6, lr}
   16818:	mov	r5, r0
   1681c:	mov	r4, r1
   16820:	bl	16dd4 <dcngettext@plt+0x5b08>
   16824:	cmp	r0, #0
   16828:	popne	{r4, r5, r6, pc}
   1682c:	adds	r4, r4, #0
   16830:	movne	r4, #1
   16834:	cmp	r5, #0
   16838:	orreq	r4, r4, #1
   1683c:	cmp	r4, #0
   16840:	popeq	{r4, r5, r6, pc}
   16844:	bl	16d20 <dcngettext@plt+0x5a54>
   16848:	push	{r4, lr}
   1684c:	cmp	r1, #0
   16850:	orreq	r1, r1, #1
   16854:	bl	16dd4 <dcngettext@plt+0x5b08>
   16858:	cmp	r0, #0
   1685c:	popne	{r4, pc}
   16860:	bl	16d20 <dcngettext@plt+0x5a54>
   16864:	push	{r4, r5, r6, lr}
   16868:	mov	r6, r0
   1686c:	mov	r5, r1
   16870:	mov	r4, r2
   16874:	bl	16f8c <dcngettext@plt+0x5cc0>
   16878:	cmp	r0, #0
   1687c:	popne	{r4, r5, r6, pc}
   16880:	cmp	r6, #0
   16884:	beq	16894 <dcngettext@plt+0x55c8>
   16888:	cmp	r5, #0
   1688c:	cmpne	r4, #0
   16890:	popeq	{r4, r5, r6, pc}
   16894:	bl	16d20 <dcngettext@plt+0x5a54>
   16898:	b	16864 <dcngettext@plt+0x5598>
   1689c:	cmp	r2, #0
   168a0:	cmpne	r1, #0
   168a4:	moveq	r2, #1
   168a8:	moveq	r1, r2
   168ac:	push	{r4, lr}
   168b0:	bl	16f8c <dcngettext@plt+0x5cc0>
   168b4:	cmp	r0, #0
   168b8:	popne	{r4, pc}
   168bc:	bl	16d20 <dcngettext@plt+0x5a54>
   168c0:	mov	r2, r1
   168c4:	mov	r1, r0
   168c8:	mov	r0, #0
   168cc:	b	16864 <dcngettext@plt+0x5598>
   168d0:	mov	r2, r1
   168d4:	mov	r1, r0
   168d8:	mov	r0, #0
   168dc:	b	1689c <dcngettext@plt+0x55d0>
   168e0:	push	{r4, r5, r6, lr}
   168e4:	subs	r6, r0, #0
   168e8:	sub	sp, sp, #8
   168ec:	mov	r5, r1
   168f0:	ldr	r4, [r1]
   168f4:	beq	16930 <dcngettext@plt+0x5664>
   168f8:	lsr	r1, r4, #1
   168fc:	add	r3, r1, #1
   16900:	mvn	r3, r3
   16904:	cmp	r4, r3
   16908:	bhi	1692c <dcngettext@plt+0x5660>
   1690c:	add	r4, r4, #1
   16910:	add	r4, r4, r1
   16914:	mov	r0, r6
   16918:	mov	r1, r4
   1691c:	bl	16864 <dcngettext@plt+0x5598>
   16920:	str	r4, [r5]
   16924:	add	sp, sp, #8
   16928:	pop	{r4, r5, r6, pc}
   1692c:	bl	16d20 <dcngettext@plt+0x5a54>
   16930:	cmp	r4, #0
   16934:	bne	16914 <dcngettext@plt+0x5648>
   16938:	mov	r1, r2
   1693c:	mov	r0, #64	; 0x40
   16940:	str	r2, [sp, #4]
   16944:	bl	170cc <dcngettext@plt+0x5e00>
   16948:	ldr	r2, [sp, #4]
   1694c:	cmp	r0, #0
   16950:	movne	r4, r0
   16954:	addeq	r4, r0, #1
   16958:	b	16914 <dcngettext@plt+0x5648>
   1695c:	mov	r2, #1
   16960:	b	168e0 <dcngettext@plt+0x5614>
   16964:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16968:	sub	sp, sp, #12
   1696c:	ldr	r6, [r1]
   16970:	mov	sl, r1
   16974:	mov	r9, r0
   16978:	asrs	r4, r6, #1
   1697c:	mov	r5, r2
   16980:	mov	fp, r3
   16984:	ldr	r7, [sp, #48]	; 0x30
   16988:	bmi	16af4 <dcngettext@plt+0x5828>
   1698c:	mvn	r3, #-2147483648	; 0x80000000
   16990:	sub	r3, r3, r4
   16994:	cmp	r6, r3
   16998:	movle	r3, #0
   1699c:	movgt	r3, #1
   169a0:	mvn	r8, fp
   169a4:	cmp	r3, #0
   169a8:	addeq	r4, r4, r6
   169ac:	mvnne	r4, #-2147483648	; 0x80000000
   169b0:	lsr	r8, r8, #31
   169b4:	cmp	fp, r4
   169b8:	movge	r3, #0
   169bc:	andlt	r3, r8, #1
   169c0:	cmp	r3, #0
   169c4:	beq	16aac <dcngettext@plt+0x57e0>
   169c8:	cmp	r7, #0
   169cc:	blt	16b7c <dcngettext@plt+0x58b0>
   169d0:	bne	16b74 <dcngettext@plt+0x58a8>
   169d4:	mov	r2, #64	; 0x40
   169d8:	mov	r1, r7
   169dc:	mov	r0, r2
   169e0:	str	r2, [sp, #4]
   169e4:	bl	172d8 <dcngettext@plt+0x600c>
   169e8:	ldr	r2, [sp, #4]
   169ec:	mov	r1, r7
   169f0:	mov	r4, r0
   169f4:	mov	r0, r2
   169f8:	bl	174f8 <dcngettext@plt+0x622c>
   169fc:	ldr	r2, [sp, #4]
   16a00:	sub	r1, r2, r1
   16a04:	cmp	r9, #0
   16a08:	sub	r3, r4, r6
   16a0c:	streq	r9, [sl]
   16a10:	cmp	r3, r5
   16a14:	bge	16a98 <dcngettext@plt+0x57cc>
   16a18:	cmp	r5, #0
   16a1c:	blt	16b08 <dcngettext@plt+0x583c>
   16a20:	cmp	r6, #0
   16a24:	blt	16a44 <dcngettext@plt+0x5778>
   16a28:	mvn	r3, #-2147483648	; 0x80000000
   16a2c:	sub	r3, r3, r5
   16a30:	cmp	r6, r3
   16a34:	movle	r3, #0
   16a38:	movgt	r3, #1
   16a3c:	cmp	r3, #0
   16a40:	bne	16c04 <dcngettext@plt+0x5938>
   16a44:	add	r5, r6, r5
   16a48:	cmp	fp, r5
   16a4c:	movge	r8, #0
   16a50:	andlt	r8, r8, #1
   16a54:	cmp	r8, #0
   16a58:	mov	r4, r5
   16a5c:	bne	16c04 <dcngettext@plt+0x5938>
   16a60:	cmp	r7, #0
   16a64:	blt	16b1c <dcngettext@plt+0x5850>
   16a68:	beq	16a94 <dcngettext@plt+0x57c8>
   16a6c:	cmp	r5, #0
   16a70:	blt	16bc4 <dcngettext@plt+0x58f8>
   16a74:	mov	r1, r7
   16a78:	mvn	r0, #-2147483648	; 0x80000000
   16a7c:	bl	172d8 <dcngettext@plt+0x600c>
   16a80:	cmp	r5, r0
   16a84:	movle	r0, #0
   16a88:	movgt	r0, #1
   16a8c:	cmp	r0, #0
   16a90:	bne	16c04 <dcngettext@plt+0x5938>
   16a94:	mul	r1, r5, r7
   16a98:	mov	r0, r9
   16a9c:	bl	16814 <dcngettext@plt+0x5548>
   16aa0:	str	r4, [sl]
   16aa4:	add	sp, sp, #12
   16aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16aac:	cmp	r7, #0
   16ab0:	blt	16b48 <dcngettext@plt+0x587c>
   16ab4:	beq	169d4 <dcngettext@plt+0x5708>
   16ab8:	cmp	r4, #0
   16abc:	blt	16b84 <dcngettext@plt+0x58b8>
   16ac0:	mov	r1, r7
   16ac4:	mvn	r0, #-2147483648	; 0x80000000
   16ac8:	bl	172d8 <dcngettext@plt+0x600c>
   16acc:	cmp	r0, r4
   16ad0:	movge	r0, #0
   16ad4:	movlt	r0, #1
   16ad8:	cmp	r0, #0
   16adc:	mvnne	r2, #-2147483648	; 0x80000000
   16ae0:	bne	169d8 <dcngettext@plt+0x570c>
   16ae4:	mul	r1, r7, r4
   16ae8:	cmp	r1, #63	; 0x3f
   16aec:	bgt	16a04 <dcngettext@plt+0x5738>
   16af0:	b	169d4 <dcngettext@plt+0x5708>
   16af4:	rsb	r3, r4, #-2147483648	; 0x80000000
   16af8:	cmp	r6, r3
   16afc:	movge	r3, #0
   16b00:	movlt	r3, #1
   16b04:	b	169a0 <dcngettext@plt+0x56d4>
   16b08:	rsb	r3, r5, #-2147483648	; 0x80000000
   16b0c:	cmp	r6, r3
   16b10:	movge	r3, #0
   16b14:	movlt	r3, #1
   16b18:	b	16a3c <dcngettext@plt+0x5770>
   16b1c:	cmp	r5, #0
   16b20:	blt	16ba8 <dcngettext@plt+0x58dc>
   16b24:	cmn	r7, #1
   16b28:	beq	16a94 <dcngettext@plt+0x57c8>
   16b2c:	mov	r1, r7
   16b30:	mov	r0, #-2147483648	; 0x80000000
   16b34:	bl	172d8 <dcngettext@plt+0x600c>
   16b38:	cmp	r5, r0
   16b3c:	movle	r0, #0
   16b40:	movgt	r0, #1
   16b44:	b	16a8c <dcngettext@plt+0x57c0>
   16b48:	cmp	r4, #0
   16b4c:	blt	16be8 <dcngettext@plt+0x591c>
   16b50:	cmn	r7, #1
   16b54:	beq	16ae4 <dcngettext@plt+0x5818>
   16b58:	mov	r1, r7
   16b5c:	mov	r0, #-2147483648	; 0x80000000
   16b60:	bl	172d8 <dcngettext@plt+0x600c>
   16b64:	cmp	r0, r4
   16b68:	movge	r0, #0
   16b6c:	movlt	r0, #1
   16b70:	b	16ad8 <dcngettext@plt+0x580c>
   16b74:	mov	r4, fp
   16b78:	b	16ac0 <dcngettext@plt+0x57f4>
   16b7c:	mov	r4, fp
   16b80:	b	16b50 <dcngettext@plt+0x5884>
   16b84:	cmn	r4, #1
   16b88:	beq	16ae4 <dcngettext@plt+0x5818>
   16b8c:	mov	r1, r4
   16b90:	mov	r0, #-2147483648	; 0x80000000
   16b94:	bl	172d8 <dcngettext@plt+0x600c>
   16b98:	cmp	r7, r0
   16b9c:	movle	r0, #0
   16ba0:	movgt	r0, #1
   16ba4:	b	16ad8 <dcngettext@plt+0x580c>
   16ba8:	mov	r1, r7
   16bac:	mvn	r0, #-2147483648	; 0x80000000
   16bb0:	bl	172d8 <dcngettext@plt+0x600c>
   16bb4:	cmp	r5, r0
   16bb8:	movge	r0, #0
   16bbc:	movlt	r0, #1
   16bc0:	b	16a8c <dcngettext@plt+0x57c0>
   16bc4:	cmn	r5, #1
   16bc8:	beq	16a94 <dcngettext@plt+0x57c8>
   16bcc:	mov	r1, r5
   16bd0:	mov	r0, #-2147483648	; 0x80000000
   16bd4:	bl	172d8 <dcngettext@plt+0x600c>
   16bd8:	cmp	r7, r0
   16bdc:	movle	r0, #0
   16be0:	movgt	r0, #1
   16be4:	b	16a8c <dcngettext@plt+0x57c0>
   16be8:	mov	r1, r7
   16bec:	mvn	r0, #-2147483648	; 0x80000000
   16bf0:	bl	172d8 <dcngettext@plt+0x600c>
   16bf4:	cmp	r0, r4
   16bf8:	movle	r0, #0
   16bfc:	movgt	r0, #1
   16c00:	b	16ad8 <dcngettext@plt+0x580c>
   16c04:	bl	16d20 <dcngettext@plt+0x5a54>
   16c08:	push	{r4, lr}
   16c0c:	mov	r1, #1
   16c10:	bl	16d60 <dcngettext@plt+0x5a94>
   16c14:	cmp	r0, #0
   16c18:	popne	{r4, pc}
   16c1c:	bl	16d20 <dcngettext@plt+0x5a54>
   16c20:	push	{r4, lr}
   16c24:	mov	r1, #1
   16c28:	bl	16d60 <dcngettext@plt+0x5a94>
   16c2c:	cmp	r0, #0
   16c30:	popne	{r4, pc}
   16c34:	bl	16d20 <dcngettext@plt+0x5a54>
   16c38:	push	{r4, lr}
   16c3c:	bl	16d60 <dcngettext@plt+0x5a94>
   16c40:	cmp	r0, #0
   16c44:	popne	{r4, pc}
   16c48:	bl	16d20 <dcngettext@plt+0x5a54>
   16c4c:	push	{r4, lr}
   16c50:	bl	16d60 <dcngettext@plt+0x5a94>
   16c54:	cmp	r0, #0
   16c58:	popne	{r4, pc}
   16c5c:	bl	16d20 <dcngettext@plt+0x5a54>
   16c60:	push	{r4, r5, r6, lr}
   16c64:	mov	r6, r0
   16c68:	mov	r0, r1
   16c6c:	mov	r4, r1
   16c70:	bl	16da8 <dcngettext@plt+0x5adc>
   16c74:	subs	r5, r0, #0
   16c78:	beq	16c90 <dcngettext@plt+0x59c4>
   16c7c:	mov	r2, r4
   16c80:	mov	r1, r6
   16c84:	bl	11008 <memcpy@plt>
   16c88:	mov	r0, r5
   16c8c:	pop	{r4, r5, r6, pc}
   16c90:	bl	16d20 <dcngettext@plt+0x5a54>
   16c94:	push	{r4, r5, r6, lr}
   16c98:	mov	r6, r0
   16c9c:	mov	r0, r1
   16ca0:	mov	r4, r1
   16ca4:	bl	16da8 <dcngettext@plt+0x5adc>
   16ca8:	subs	r5, r0, #0
   16cac:	beq	16cc4 <dcngettext@plt+0x59f8>
   16cb0:	mov	r2, r4
   16cb4:	mov	r1, r6
   16cb8:	bl	11008 <memcpy@plt>
   16cbc:	mov	r0, r5
   16cc0:	pop	{r4, r5, r6, pc}
   16cc4:	bl	16d20 <dcngettext@plt+0x5a54>
   16cc8:	push	{r4, r5, r6, lr}
   16ccc:	mov	r6, r0
   16cd0:	add	r0, r1, #1
   16cd4:	mov	r4, r1
   16cd8:	bl	16da8 <dcngettext@plt+0x5adc>
   16cdc:	subs	r5, r0, #0
   16ce0:	beq	16d00 <dcngettext@plt+0x5a34>
   16ce4:	mov	r3, #0
   16ce8:	mov	r1, r6
   16cec:	strb	r3, [r5, r4]
   16cf0:	mov	r2, r4
   16cf4:	bl	11008 <memcpy@plt>
   16cf8:	mov	r0, r5
   16cfc:	pop	{r4, r5, r6, pc}
   16d00:	bl	16d20 <dcngettext@plt+0x5a54>
   16d04:	push	{r4, lr}
   16d08:	mov	r4, r0
   16d0c:	bl	1117c <strlen@plt>
   16d10:	add	r1, r0, #1
   16d14:	mov	r0, r4
   16d18:	pop	{r4, lr}
   16d1c:	b	16c60 <dcngettext@plt+0x5994>
   16d20:	ldr	r3, [pc, #44]	; 16d54 <dcngettext@plt+0x5a88>
   16d24:	push	{r4, lr}
   16d28:	mov	r2, #5
   16d2c:	ldr	r1, [pc, #36]	; 16d58 <dcngettext@plt+0x5a8c>
   16d30:	mov	r0, #0
   16d34:	ldr	r4, [r3]
   16d38:	bl	11044 <dcgettext@plt>
   16d3c:	ldr	r2, [pc, #24]	; 16d5c <dcngettext@plt+0x5a90>
   16d40:	mov	r1, #0
   16d44:	mov	r3, r0
   16d48:	mov	r0, r4
   16d4c:	bl	110d4 <error@plt>
   16d50:	bl	112b4 <abort@plt>
   16d54:	andeq	r9, r2, r4, lsr r1
   16d58:	andeq	r7, r1, r8, ror #30
   16d5c:			; <UNDEFINED> instruction: 0x00017ab8
   16d60:	cmp	r1, #0
   16d64:	cmpne	r0, #0
   16d68:	moveq	r1, #1
   16d6c:	moveq	r0, r1
   16d70:	umull	r2, r3, r0, r1
   16d74:	adds	r3, r3, #0
   16d78:	movne	r3, #1
   16d7c:	cmp	r2, #0
   16d80:	blt	16d90 <dcngettext@plt+0x5ac4>
   16d84:	cmp	r3, #0
   16d88:	bne	16d90 <dcngettext@plt+0x5ac4>
   16d8c:	b	10f90 <calloc@plt>
   16d90:	push	{r4, lr}
   16d94:	bl	11194 <__errno_location@plt>
   16d98:	mov	r3, #12
   16d9c:	str	r3, [r0]
   16da0:	mov	r0, #0
   16da4:	pop	{r4, pc}
   16da8:	cmp	r0, #0
   16dac:	moveq	r0, #1
   16db0:	cmp	r0, #0
   16db4:	blt	16dbc <dcngettext@plt+0x5af0>
   16db8:	b	110ec <malloc@plt>
   16dbc:	push	{r4, lr}
   16dc0:	bl	11194 <__errno_location@plt>
   16dc4:	mov	r3, #12
   16dc8:	str	r3, [r0]
   16dcc:	mov	r0, #0
   16dd0:	pop	{r4, pc}
   16dd4:	cmp	r0, #0
   16dd8:	beq	16dfc <dcngettext@plt+0x5b30>
   16ddc:	cmp	r1, #0
   16de0:	push	{lr}		; (str lr, [sp, #-4]!)
   16de4:	sub	sp, sp, #12
   16de8:	beq	16e04 <dcngettext@plt+0x5b38>
   16dec:	blt	16e1c <dcngettext@plt+0x5b50>
   16df0:	add	sp, sp, #12
   16df4:	pop	{lr}		; (ldr lr, [sp], #4)
   16df8:	b	1105c <realloc@plt>
   16dfc:	mov	r0, r1
   16e00:	b	16da8 <dcngettext@plt+0x5adc>
   16e04:	str	r1, [sp, #4]
   16e08:	bl	16eac <dcngettext@plt+0x5be0>
   16e0c:	ldr	r3, [sp, #4]
   16e10:	mov	r0, r3
   16e14:	add	sp, sp, #12
   16e18:	pop	{pc}		; (ldr pc, [sp], #4)
   16e1c:	bl	11194 <__errno_location@plt>
   16e20:	mov	r2, #12
   16e24:	mov	r3, #0
   16e28:	str	r2, [r0]
   16e2c:	b	16e10 <dcngettext@plt+0x5b44>
   16e30:	push	{r4, r5, r6, lr}
   16e34:	mov	r4, r0
   16e38:	bl	110bc <__fpending@plt>
   16e3c:	ldr	r5, [r4]
   16e40:	and	r5, r5, #32
   16e44:	mov	r6, r0
   16e48:	mov	r0, r4
   16e4c:	bl	11e00 <dcngettext@plt+0xb34>
   16e50:	cmp	r5, #0
   16e54:	mov	r4, r0
   16e58:	bne	16e78 <dcngettext@plt+0x5bac>
   16e5c:	cmp	r0, #0
   16e60:	beq	16e70 <dcngettext@plt+0x5ba4>
   16e64:	cmp	r6, #0
   16e68:	beq	16e94 <dcngettext@plt+0x5bc8>
   16e6c:	mvn	r4, #0
   16e70:	mov	r0, r4
   16e74:	pop	{r4, r5, r6, pc}
   16e78:	cmp	r0, #0
   16e7c:	bne	16e6c <dcngettext@plt+0x5ba0>
   16e80:	bl	11194 <__errno_location@plt>
   16e84:	str	r4, [r0]
   16e88:	mvn	r4, #0
   16e8c:	mov	r0, r4
   16e90:	pop	{r4, r5, r6, pc}
   16e94:	bl	11194 <__errno_location@plt>
   16e98:	ldr	r4, [r0]
   16e9c:	subs	r4, r4, #9
   16ea0:	mvnne	r4, #0
   16ea4:	mov	r0, r4
   16ea8:	pop	{r4, r5, r6, pc}
   16eac:	push	{r4, r5, lr}
   16eb0:	sub	sp, sp, #12
   16eb4:	mov	r5, r0
   16eb8:	bl	11194 <__errno_location@plt>
   16ebc:	mov	r2, #0
   16ec0:	mov	r4, r0
   16ec4:	ldr	r3, [r0]
   16ec8:	str	r2, [r4]
   16ecc:	mov	r0, r5
   16ed0:	str	r3, [sp]
   16ed4:	str	r3, [sp, #4]
   16ed8:	bl	10ff0 <free@plt>
   16edc:	ldr	r3, [r4]
   16ee0:	add	r2, sp, #8
   16ee4:	cmp	r3, #0
   16ee8:	moveq	r3, #4
   16eec:	movne	r3, #0
   16ef0:	add	r3, r2, r3
   16ef4:	ldr	r3, [r3, #-8]
   16ef8:	str	r3, [r4]
   16efc:	add	sp, sp, #12
   16f00:	pop	{r4, r5, pc}
   16f04:	push	{r4, lr}
   16f08:	mov	r0, #14
   16f0c:	bl	11248 <nl_langinfo@plt>
   16f10:	cmp	r0, #0
   16f14:	beq	16f2c <dcngettext@plt+0x5c60>
   16f18:	ldrb	r2, [r0]
   16f1c:	ldr	r3, [pc, #16]	; 16f34 <dcngettext@plt+0x5c68>
   16f20:	cmp	r2, #0
   16f24:	moveq	r0, r3
   16f28:	pop	{r4, pc}
   16f2c:	ldr	r0, [pc]	; 16f34 <dcngettext@plt+0x5c68>
   16f30:	pop	{r4, pc}
   16f34:	andeq	r7, r1, ip, ror pc
   16f38:	push	{r4, r5, r6, r7, lr}
   16f3c:	subs	r6, r0, #0
   16f40:	sub	sp, sp, #12
   16f44:	addeq	r6, sp, #4
   16f48:	mov	r0, r6
   16f4c:	mov	r5, r2
   16f50:	mov	r7, r1
   16f54:	bl	110c8 <mbrtowc@plt>
   16f58:	cmp	r5, #0
   16f5c:	cmnne	r0, #3
   16f60:	mov	r4, r0
   16f64:	bls	16f80 <dcngettext@plt+0x5cb4>
   16f68:	mov	r0, #0
   16f6c:	bl	16fd8 <dcngettext@plt+0x5d0c>
   16f70:	cmp	r0, #0
   16f74:	moveq	r4, #1
   16f78:	ldrbeq	r3, [r7]
   16f7c:	streq	r3, [r6]
   16f80:	mov	r0, r4
   16f84:	add	sp, sp, #12
   16f88:	pop	{r4, r5, r6, r7, pc}
   16f8c:	push	{r4, r5, r6, lr}
   16f90:	subs	r4, r2, #0
   16f94:	mov	r6, r0
   16f98:	mov	r5, r1
   16f9c:	beq	16fc8 <dcngettext@plt+0x5cfc>
   16fa0:	mov	r1, r4
   16fa4:	mvn	r0, #0
   16fa8:	bl	170cc <dcngettext@plt+0x5e00>
   16fac:	cmp	r0, r5
   16fb0:	bcs	16fc8 <dcngettext@plt+0x5cfc>
   16fb4:	bl	11194 <__errno_location@plt>
   16fb8:	mov	r3, #12
   16fbc:	str	r3, [r0]
   16fc0:	mov	r0, #0
   16fc4:	pop	{r4, r5, r6, pc}
   16fc8:	mul	r1, r5, r4
   16fcc:	mov	r0, r6
   16fd0:	pop	{r4, r5, r6, lr}
   16fd4:	b	16dd4 <dcngettext@plt+0x5b08>
   16fd8:	push	{lr}		; (str lr, [sp, #-4]!)
   16fdc:	sub	sp, sp, #268	; 0x10c
   16fe0:	add	r1, sp, #4
   16fe4:	ldr	r2, [pc, #60]	; 17028 <dcngettext@plt+0x5d5c>
   16fe8:	bl	17034 <dcngettext@plt+0x5d68>
   16fec:	cmp	r0, #0
   16ff0:	movne	r0, #0
   16ff4:	bne	17020 <dcngettext@plt+0x5d54>
   16ff8:	ldr	r1, [pc, #44]	; 1702c <dcngettext@plt+0x5d60>
   16ffc:	add	r0, sp, #4
   17000:	bl	10fc0 <strcmp@plt>
   17004:	cmp	r0, #0
   17008:	beq	17020 <dcngettext@plt+0x5d54>
   1700c:	add	r0, sp, #4
   17010:	ldr	r1, [pc, #24]	; 17030 <dcngettext@plt+0x5d64>
   17014:	bl	10fc0 <strcmp@plt>
   17018:	adds	r0, r0, #0
   1701c:	movne	r0, #1
   17020:	add	sp, sp, #268	; 0x10c
   17024:	pop	{pc}		; (ldr pc, [sp], #4)
   17028:	andeq	r0, r0, r1, lsl #2
   1702c:	andeq	r7, r1, r4, lsr #21
   17030:	andeq	r7, r1, r4, lsl #31
   17034:	push	{r4, r5, r6, lr}
   17038:	mov	r5, r1
   1703c:	mov	r1, #0
   17040:	mov	r4, r2
   17044:	bl	11230 <setlocale@plt>
   17048:	subs	r6, r0, #0
   1704c:	beq	170a8 <dcngettext@plt+0x5ddc>
   17050:	bl	1117c <strlen@plt>
   17054:	cmp	r4, r0
   17058:	bhi	17090 <dcngettext@plt+0x5dc4>
   1705c:	cmp	r4, #0
   17060:	bne	1706c <dcngettext@plt+0x5da0>
   17064:	mov	r0, #34	; 0x22
   17068:	pop	{r4, r5, r6, pc}
   1706c:	sub	r4, r4, #1
   17070:	mov	r1, r6
   17074:	mov	r2, r4
   17078:	mov	r0, r5
   1707c:	bl	11008 <memcpy@plt>
   17080:	mov	r3, #0
   17084:	strb	r3, [r5, r4]
   17088:	mov	r0, #34	; 0x22
   1708c:	pop	{r4, r5, r6, pc}
   17090:	add	r2, r0, #1
   17094:	mov	r1, r6
   17098:	mov	r0, r5
   1709c:	bl	11008 <memcpy@plt>
   170a0:	mov	r0, #0
   170a4:	pop	{r4, r5, r6, pc}
   170a8:	cmp	r4, #0
   170ac:	beq	170bc <dcngettext@plt+0x5df0>
   170b0:	strb	r6, [r5]
   170b4:	mov	r0, #22
   170b8:	pop	{r4, r5, r6, pc}
   170bc:	mov	r0, #22
   170c0:	pop	{r4, r5, r6, pc}
   170c4:	mov	r1, #0
   170c8:	b	11230 <setlocale@plt>
   170cc:	subs	r2, r1, #1
   170d0:	bxeq	lr
   170d4:	bcc	172ac <dcngettext@plt+0x5fe0>
   170d8:	cmp	r0, r1
   170dc:	bls	17290 <dcngettext@plt+0x5fc4>
   170e0:	tst	r1, r2
   170e4:	beq	1729c <dcngettext@plt+0x5fd0>
   170e8:	clz	r3, r0
   170ec:	clz	r2, r1
   170f0:	sub	r3, r2, r3
   170f4:	rsbs	r3, r3, #31
   170f8:	addne	r3, r3, r3, lsl #1
   170fc:	mov	r2, #0
   17100:	addne	pc, pc, r3, lsl #2
   17104:	nop			; (mov r0, r0)
   17108:	cmp	r0, r1, lsl #31
   1710c:	adc	r2, r2, r2
   17110:	subcs	r0, r0, r1, lsl #31
   17114:	cmp	r0, r1, lsl #30
   17118:	adc	r2, r2, r2
   1711c:	subcs	r0, r0, r1, lsl #30
   17120:	cmp	r0, r1, lsl #29
   17124:	adc	r2, r2, r2
   17128:	subcs	r0, r0, r1, lsl #29
   1712c:	cmp	r0, r1, lsl #28
   17130:	adc	r2, r2, r2
   17134:	subcs	r0, r0, r1, lsl #28
   17138:	cmp	r0, r1, lsl #27
   1713c:	adc	r2, r2, r2
   17140:	subcs	r0, r0, r1, lsl #27
   17144:	cmp	r0, r1, lsl #26
   17148:	adc	r2, r2, r2
   1714c:	subcs	r0, r0, r1, lsl #26
   17150:	cmp	r0, r1, lsl #25
   17154:	adc	r2, r2, r2
   17158:	subcs	r0, r0, r1, lsl #25
   1715c:	cmp	r0, r1, lsl #24
   17160:	adc	r2, r2, r2
   17164:	subcs	r0, r0, r1, lsl #24
   17168:	cmp	r0, r1, lsl #23
   1716c:	adc	r2, r2, r2
   17170:	subcs	r0, r0, r1, lsl #23
   17174:	cmp	r0, r1, lsl #22
   17178:	adc	r2, r2, r2
   1717c:	subcs	r0, r0, r1, lsl #22
   17180:	cmp	r0, r1, lsl #21
   17184:	adc	r2, r2, r2
   17188:	subcs	r0, r0, r1, lsl #21
   1718c:	cmp	r0, r1, lsl #20
   17190:	adc	r2, r2, r2
   17194:	subcs	r0, r0, r1, lsl #20
   17198:	cmp	r0, r1, lsl #19
   1719c:	adc	r2, r2, r2
   171a0:	subcs	r0, r0, r1, lsl #19
   171a4:	cmp	r0, r1, lsl #18
   171a8:	adc	r2, r2, r2
   171ac:	subcs	r0, r0, r1, lsl #18
   171b0:	cmp	r0, r1, lsl #17
   171b4:	adc	r2, r2, r2
   171b8:	subcs	r0, r0, r1, lsl #17
   171bc:	cmp	r0, r1, lsl #16
   171c0:	adc	r2, r2, r2
   171c4:	subcs	r0, r0, r1, lsl #16
   171c8:	cmp	r0, r1, lsl #15
   171cc:	adc	r2, r2, r2
   171d0:	subcs	r0, r0, r1, lsl #15
   171d4:	cmp	r0, r1, lsl #14
   171d8:	adc	r2, r2, r2
   171dc:	subcs	r0, r0, r1, lsl #14
   171e0:	cmp	r0, r1, lsl #13
   171e4:	adc	r2, r2, r2
   171e8:	subcs	r0, r0, r1, lsl #13
   171ec:	cmp	r0, r1, lsl #12
   171f0:	adc	r2, r2, r2
   171f4:	subcs	r0, r0, r1, lsl #12
   171f8:	cmp	r0, r1, lsl #11
   171fc:	adc	r2, r2, r2
   17200:	subcs	r0, r0, r1, lsl #11
   17204:	cmp	r0, r1, lsl #10
   17208:	adc	r2, r2, r2
   1720c:	subcs	r0, r0, r1, lsl #10
   17210:	cmp	r0, r1, lsl #9
   17214:	adc	r2, r2, r2
   17218:	subcs	r0, r0, r1, lsl #9
   1721c:	cmp	r0, r1, lsl #8
   17220:	adc	r2, r2, r2
   17224:	subcs	r0, r0, r1, lsl #8
   17228:	cmp	r0, r1, lsl #7
   1722c:	adc	r2, r2, r2
   17230:	subcs	r0, r0, r1, lsl #7
   17234:	cmp	r0, r1, lsl #6
   17238:	adc	r2, r2, r2
   1723c:	subcs	r0, r0, r1, lsl #6
   17240:	cmp	r0, r1, lsl #5
   17244:	adc	r2, r2, r2
   17248:	subcs	r0, r0, r1, lsl #5
   1724c:	cmp	r0, r1, lsl #4
   17250:	adc	r2, r2, r2
   17254:	subcs	r0, r0, r1, lsl #4
   17258:	cmp	r0, r1, lsl #3
   1725c:	adc	r2, r2, r2
   17260:	subcs	r0, r0, r1, lsl #3
   17264:	cmp	r0, r1, lsl #2
   17268:	adc	r2, r2, r2
   1726c:	subcs	r0, r0, r1, lsl #2
   17270:	cmp	r0, r1, lsl #1
   17274:	adc	r2, r2, r2
   17278:	subcs	r0, r0, r1, lsl #1
   1727c:	cmp	r0, r1
   17280:	adc	r2, r2, r2
   17284:	subcs	r0, r0, r1
   17288:	mov	r0, r2
   1728c:	bx	lr
   17290:	moveq	r0, #1
   17294:	movne	r0, #0
   17298:	bx	lr
   1729c:	clz	r2, r1
   172a0:	rsb	r2, r2, #31
   172a4:	lsr	r0, r0, r2
   172a8:	bx	lr
   172ac:	cmp	r0, #0
   172b0:	mvnne	r0, #0
   172b4:	b	17518 <dcngettext@plt+0x624c>
   172b8:	cmp	r1, #0
   172bc:	beq	172ac <dcngettext@plt+0x5fe0>
   172c0:	push	{r0, r1, lr}
   172c4:	bl	170cc <dcngettext@plt+0x5e00>
   172c8:	pop	{r1, r2, lr}
   172cc:	mul	r3, r2, r0
   172d0:	sub	r1, r1, r3
   172d4:	bx	lr
   172d8:	cmp	r1, #0
   172dc:	beq	174e8 <dcngettext@plt+0x621c>
   172e0:	eor	ip, r0, r1
   172e4:	rsbmi	r1, r1, #0
   172e8:	subs	r2, r1, #1
   172ec:	beq	174b4 <dcngettext@plt+0x61e8>
   172f0:	movs	r3, r0
   172f4:	rsbmi	r3, r0, #0
   172f8:	cmp	r3, r1
   172fc:	bls	174c0 <dcngettext@plt+0x61f4>
   17300:	tst	r1, r2
   17304:	beq	174d0 <dcngettext@plt+0x6204>
   17308:	clz	r2, r3
   1730c:	clz	r0, r1
   17310:	sub	r2, r0, r2
   17314:	rsbs	r2, r2, #31
   17318:	addne	r2, r2, r2, lsl #1
   1731c:	mov	r0, #0
   17320:	addne	pc, pc, r2, lsl #2
   17324:	nop			; (mov r0, r0)
   17328:	cmp	r3, r1, lsl #31
   1732c:	adc	r0, r0, r0
   17330:	subcs	r3, r3, r1, lsl #31
   17334:	cmp	r3, r1, lsl #30
   17338:	adc	r0, r0, r0
   1733c:	subcs	r3, r3, r1, lsl #30
   17340:	cmp	r3, r1, lsl #29
   17344:	adc	r0, r0, r0
   17348:	subcs	r3, r3, r1, lsl #29
   1734c:	cmp	r3, r1, lsl #28
   17350:	adc	r0, r0, r0
   17354:	subcs	r3, r3, r1, lsl #28
   17358:	cmp	r3, r1, lsl #27
   1735c:	adc	r0, r0, r0
   17360:	subcs	r3, r3, r1, lsl #27
   17364:	cmp	r3, r1, lsl #26
   17368:	adc	r0, r0, r0
   1736c:	subcs	r3, r3, r1, lsl #26
   17370:	cmp	r3, r1, lsl #25
   17374:	adc	r0, r0, r0
   17378:	subcs	r3, r3, r1, lsl #25
   1737c:	cmp	r3, r1, lsl #24
   17380:	adc	r0, r0, r0
   17384:	subcs	r3, r3, r1, lsl #24
   17388:	cmp	r3, r1, lsl #23
   1738c:	adc	r0, r0, r0
   17390:	subcs	r3, r3, r1, lsl #23
   17394:	cmp	r3, r1, lsl #22
   17398:	adc	r0, r0, r0
   1739c:	subcs	r3, r3, r1, lsl #22
   173a0:	cmp	r3, r1, lsl #21
   173a4:	adc	r0, r0, r0
   173a8:	subcs	r3, r3, r1, lsl #21
   173ac:	cmp	r3, r1, lsl #20
   173b0:	adc	r0, r0, r0
   173b4:	subcs	r3, r3, r1, lsl #20
   173b8:	cmp	r3, r1, lsl #19
   173bc:	adc	r0, r0, r0
   173c0:	subcs	r3, r3, r1, lsl #19
   173c4:	cmp	r3, r1, lsl #18
   173c8:	adc	r0, r0, r0
   173cc:	subcs	r3, r3, r1, lsl #18
   173d0:	cmp	r3, r1, lsl #17
   173d4:	adc	r0, r0, r0
   173d8:	subcs	r3, r3, r1, lsl #17
   173dc:	cmp	r3, r1, lsl #16
   173e0:	adc	r0, r0, r0
   173e4:	subcs	r3, r3, r1, lsl #16
   173e8:	cmp	r3, r1, lsl #15
   173ec:	adc	r0, r0, r0
   173f0:	subcs	r3, r3, r1, lsl #15
   173f4:	cmp	r3, r1, lsl #14
   173f8:	adc	r0, r0, r0
   173fc:	subcs	r3, r3, r1, lsl #14
   17400:	cmp	r3, r1, lsl #13
   17404:	adc	r0, r0, r0
   17408:	subcs	r3, r3, r1, lsl #13
   1740c:	cmp	r3, r1, lsl #12
   17410:	adc	r0, r0, r0
   17414:	subcs	r3, r3, r1, lsl #12
   17418:	cmp	r3, r1, lsl #11
   1741c:	adc	r0, r0, r0
   17420:	subcs	r3, r3, r1, lsl #11
   17424:	cmp	r3, r1, lsl #10
   17428:	adc	r0, r0, r0
   1742c:	subcs	r3, r3, r1, lsl #10
   17430:	cmp	r3, r1, lsl #9
   17434:	adc	r0, r0, r0
   17438:	subcs	r3, r3, r1, lsl #9
   1743c:	cmp	r3, r1, lsl #8
   17440:	adc	r0, r0, r0
   17444:	subcs	r3, r3, r1, lsl #8
   17448:	cmp	r3, r1, lsl #7
   1744c:	adc	r0, r0, r0
   17450:	subcs	r3, r3, r1, lsl #7
   17454:	cmp	r3, r1, lsl #6
   17458:	adc	r0, r0, r0
   1745c:	subcs	r3, r3, r1, lsl #6
   17460:	cmp	r3, r1, lsl #5
   17464:	adc	r0, r0, r0
   17468:	subcs	r3, r3, r1, lsl #5
   1746c:	cmp	r3, r1, lsl #4
   17470:	adc	r0, r0, r0
   17474:	subcs	r3, r3, r1, lsl #4
   17478:	cmp	r3, r1, lsl #3
   1747c:	adc	r0, r0, r0
   17480:	subcs	r3, r3, r1, lsl #3
   17484:	cmp	r3, r1, lsl #2
   17488:	adc	r0, r0, r0
   1748c:	subcs	r3, r3, r1, lsl #2
   17490:	cmp	r3, r1, lsl #1
   17494:	adc	r0, r0, r0
   17498:	subcs	r3, r3, r1, lsl #1
   1749c:	cmp	r3, r1
   174a0:	adc	r0, r0, r0
   174a4:	subcs	r3, r3, r1
   174a8:	cmp	ip, #0
   174ac:	rsbmi	r0, r0, #0
   174b0:	bx	lr
   174b4:	teq	ip, r0
   174b8:	rsbmi	r0, r0, #0
   174bc:	bx	lr
   174c0:	movcc	r0, #0
   174c4:	asreq	r0, ip, #31
   174c8:	orreq	r0, r0, #1
   174cc:	bx	lr
   174d0:	clz	r2, r1
   174d4:	rsb	r2, r2, #31
   174d8:	cmp	ip, #0
   174dc:	lsr	r0, r3, r2
   174e0:	rsbmi	r0, r0, #0
   174e4:	bx	lr
   174e8:	cmp	r0, #0
   174ec:	mvngt	r0, #-2147483648	; 0x80000000
   174f0:	movlt	r0, #-2147483648	; 0x80000000
   174f4:	b	17518 <dcngettext@plt+0x624c>
   174f8:	cmp	r1, #0
   174fc:	beq	174e8 <dcngettext@plt+0x621c>
   17500:	push	{r0, r1, lr}
   17504:	bl	172e0 <dcngettext@plt+0x6014>
   17508:	pop	{r1, r2, lr}
   1750c:	mul	r3, r2, r0
   17510:	sub	r1, r1, r3
   17514:	bx	lr
   17518:	push	{r1, lr}
   1751c:	mov	r0, #8
   17520:	bl	10fa8 <raise@plt>
   17524:	pop	{r1, pc}
   17528:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1752c:	mov	r7, r0
   17530:	ldr	r6, [pc, #72]	; 17580 <dcngettext@plt+0x62b4>
   17534:	ldr	r5, [pc, #72]	; 17584 <dcngettext@plt+0x62b8>
   17538:	add	r6, pc, r6
   1753c:	add	r5, pc, r5
   17540:	sub	r6, r6, r5
   17544:	mov	r8, r1
   17548:	mov	r9, r2
   1754c:	bl	10f70 <calloc@plt-0x20>
   17550:	asrs	r6, r6, #2
   17554:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17558:	mov	r4, #0
   1755c:	add	r4, r4, #1
   17560:	ldr	r3, [r5], #4
   17564:	mov	r2, r9
   17568:	mov	r1, r8
   1756c:	mov	r0, r7
   17570:	blx	r3
   17574:	cmp	r6, r4
   17578:	bne	1755c <dcngettext@plt+0x6290>
   1757c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17580:	ldrdeq	r1, [r1], -r0
   17584:	andeq	r1, r1, r8, asr #19
   17588:	bx	lr
   1758c:	ldr	r3, [pc, #12]	; 175a0 <dcngettext@plt+0x62d4>
   17590:	mov	r1, #0
   17594:	add	r3, pc, r3
   17598:	ldr	r2, [r3]
   1759c:	b	111a0 <__cxa_atexit@plt>
   175a0:	muleq	r1, r0, fp

Disassembly of section .fini:

000175a4 <.fini>:
   175a4:	push	{r3, lr}
   175a8:	pop	{r3, pc}
