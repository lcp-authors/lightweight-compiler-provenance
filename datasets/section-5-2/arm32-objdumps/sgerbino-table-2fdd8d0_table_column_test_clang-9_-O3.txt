
../repos/sgerbino-table-2fdd8d0/bin/table_column_test:     file format elf32-littlearm


Disassembly of section .init:

00011e70 <.init>:
   11e70:	push	{r3, lr}
   11e74:	bl	11f5c <_start@@Base+0x3c>
   11e78:	pop	{r3, pc}

Disassembly of section .plt:

00011e7c <strcmp@plt-0x14>:
   11e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e80:	ldr	lr, [pc, #4]	; 11e8c <strcmp@plt-0x4>
   11e84:	add	lr, pc, lr
   11e88:	ldr	pc, [lr, #8]!
   11e8c:	andeq	r4, r1, r4, ror r1

00011e90 <strcmp@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #20, 20	; 0x14000
   11e98:	ldr	pc, [ip, #372]!	; 0x174

00011e9c <printf@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #20, 20	; 0x14000
   11ea4:	ldr	pc, [ip, #364]!	; 0x16c

00011ea8 <free@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #20, 20	; 0x14000
   11eb0:	ldr	pc, [ip, #356]!	; 0x164

00011eb4 <realloc@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #20, 20	; 0x14000
   11ebc:	ldr	pc, [ip, #348]!	; 0x15c

00011ec0 <strcpy@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #20, 20	; 0x14000
   11ec8:	ldr	pc, [ip, #340]!	; 0x154

00011ecc <malloc@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #20, 20	; 0x14000
   11ed4:	ldr	pc, [ip, #332]!	; 0x14c

00011ed8 <__libc_start_main@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #20, 20	; 0x14000
   11ee0:	ldr	pc, [ip, #324]!	; 0x144

00011ee4 <__gmon_start__@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #20, 20	; 0x14000
   11eec:	ldr	pc, [ip, #316]!	; 0x13c

00011ef0 <strlen@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #20, 20	; 0x14000
   11ef8:	ldr	pc, [ip, #308]!	; 0x134

00011efc <snprintf@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #20, 20	; 0x14000
   11f04:	ldr	pc, [ip, #300]!	; 0x12c

00011f08 <__isoc99_sscanf@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #20, 20	; 0x14000
   11f10:	ldr	pc, [ip, #292]!	; 0x124

00011f14 <abort@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #20, 20	; 0x14000
   11f1c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00011f20 <_start@@Base>:
   11f20:	mov	fp, #0
   11f24:	mov	lr, #0
   11f28:	pop	{r1}		; (ldr r1, [sp], #4)
   11f2c:	mov	r2, sp
   11f30:	push	{r2}		; (str r2, [sp, #-4]!)
   11f34:	push	{r0}		; (str r0, [sp, #-4]!)
   11f38:	ldr	ip, [pc, #16]	; 11f50 <_start@@Base+0x30>
   11f3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f40:	ldr	r0, [pc, #12]	; 11f54 <_start@@Base+0x34>
   11f44:	ldr	r3, [pc, #12]	; 11f58 <_start@@Base+0x38>
   11f48:	bl	11ed8 <__libc_start_main@plt>
   11f4c:	bl	11f14 <abort@plt>
   11f50:	andeq	r5, r1, r4, ror #12
   11f54:	andeq	r2, r1, r0, lsl r0
   11f58:	andeq	r5, r1, r4, lsl #12
   11f5c:	ldr	r3, [pc, #20]	; 11f78 <_start@@Base+0x58>
   11f60:	ldr	r2, [pc, #20]	; 11f7c <_start@@Base+0x5c>
   11f64:	add	r3, pc, r3
   11f68:	ldr	r2, [r3, r2]
   11f6c:	cmp	r2, #0
   11f70:	bxeq	lr
   11f74:	b	11ee4 <__gmon_start__@plt>
   11f78:	muleq	r1, r4, r0
   11f7c:	andeq	r0, r0, ip, lsr r0
   11f80:	ldr	r0, [pc, #24]	; 11fa0 <_start@@Base+0x80>
   11f84:	ldr	r3, [pc, #24]	; 11fa4 <_start@@Base+0x84>
   11f88:	cmp	r3, r0
   11f8c:	bxeq	lr
   11f90:	ldr	r3, [pc, #16]	; 11fa8 <_start@@Base+0x88>
   11f94:	cmp	r3, #0
   11f98:	bxeq	lr
   11f9c:	bx	r3
   11fa0:	andeq	r6, r2, r8, asr #32
   11fa4:	andeq	r6, r2, r8, asr #32
   11fa8:	andeq	r0, r0, r0
   11fac:	ldr	r0, [pc, #36]	; 11fd8 <_start@@Base+0xb8>
   11fb0:	ldr	r1, [pc, #36]	; 11fdc <_start@@Base+0xbc>
   11fb4:	sub	r1, r1, r0
   11fb8:	asr	r1, r1, #2
   11fbc:	add	r1, r1, r1, lsr #31
   11fc0:	asrs	r1, r1, #1
   11fc4:	bxeq	lr
   11fc8:	ldr	r3, [pc, #16]	; 11fe0 <_start@@Base+0xc0>
   11fcc:	cmp	r3, #0
   11fd0:	bxeq	lr
   11fd4:	bx	r3
   11fd8:	andeq	r6, r2, r8, asr #32
   11fdc:	andeq	r6, r2, r8, asr #32
   11fe0:	andeq	r0, r0, r0
   11fe4:	push	{r4, lr}
   11fe8:	ldr	r4, [pc, #24]	; 12008 <_start@@Base+0xe8>
   11fec:	ldrb	r3, [r4]
   11ff0:	cmp	r3, #0
   11ff4:	popne	{r4, pc}
   11ff8:	bl	11f80 <_start@@Base+0x60>
   11ffc:	mov	r3, #1
   12000:	strb	r3, [r4]
   12004:	pop	{r4, pc}
   12008:	andeq	r6, r2, r8, asr #32
   1200c:	b	11fac <_start@@Base+0x8c>

00012010 <main@@Base>:
   12010:	push	{r4, r5, r6, r7, fp, lr}
   12014:	add	fp, sp, #16
   12018:	sub	sp, sp, #56	; 0x38
   1201c:	mov	r7, sp
   12020:	mov	r0, r7
   12024:	bl	12140 <table_init@@Base>
   12028:	movw	r1, #22132	; 0x5674
   1202c:	mov	r0, r7
   12030:	mov	r2, #0
   12034:	mov	r4, #0
   12038:	movt	r1, #1
   1203c:	bl	12d04 <table_add_column@@Base>
   12040:	movw	r1, #22198	; 0x56b6
   12044:	mov	r6, r0
   12048:	mov	r0, r7
   1204c:	mov	r2, #21
   12050:	movt	r1, #1
   12054:	bl	12d04 <table_add_column@@Base>
   12058:	mov	r5, r0
   1205c:	mov	r0, r7
   12060:	bl	12c6c <table_get_column_length@@Base>
   12064:	cmp	r0, #2
   12068:	beq	1207c <main@@Base+0x6c>
   1206c:	movw	r0, #22135	; 0x5677
   12070:	movt	r0, #1
   12074:	bl	11e9c <printf@plt>
   12078:	mvn	r4, #0
   1207c:	mov	r0, sp
   12080:	mov	r1, r6
   12084:	bl	12ce0 <table_get_column_name@@Base>
   12088:	movw	r1, #22132	; 0x5674
   1208c:	movt	r1, #1
   12090:	bl	11e90 <strcmp@plt>
   12094:	cmp	r0, #0
   12098:	beq	120ac <main@@Base+0x9c>
   1209c:	movw	r0, #22172	; 0x569c
   120a0:	movt	r0, #1
   120a4:	bl	11e9c <printf@plt>
   120a8:	mvn	r4, #0
   120ac:	mov	r0, sp
   120b0:	mov	r1, r5
   120b4:	bl	12ce0 <table_get_column_name@@Base>
   120b8:	movw	r1, #22198	; 0x56b6
   120bc:	movt	r1, #1
   120c0:	bl	11e90 <strcmp@plt>
   120c4:	cmp	r0, #0
   120c8:	beq	120dc <main@@Base+0xcc>
   120cc:	movw	r0, #22172	; 0x569c
   120d0:	movt	r0, #1
   120d4:	bl	11e9c <printf@plt>
   120d8:	mvn	r4, #0
   120dc:	mov	r0, sp
   120e0:	bl	1219c <table_destroy@@Base>
   120e4:	mov	r0, r4
   120e8:	sub	sp, fp, #16
   120ec:	pop	{r4, r5, r6, r7, fp, pc}

000120f0 <table_new@@Base>:
   120f0:	push	{fp, lr}
   120f4:	mov	fp, sp
   120f8:	mov	r0, #56	; 0x38
   120fc:	bl	11ecc <malloc@plt>
   12100:	vmov.i32	q8, #0	; 0x00000000
   12104:	mov	r1, #0
   12108:	mov	r2, #10
   1210c:	mov	r3, #20
   12110:	str	r1, [r0]
   12114:	stmib	r0, {r1, r2}
   12118:	str	r1, [r0, #12]
   1211c:	str	r1, [r0, #16]
   12120:	str	r1, [r0, #20]
   12124:	str	r3, [r0, #24]
   12128:	str	r1, [r0, #28]
   1212c:	str	r2, [r0, #48]	; 0x30
   12130:	str	r1, [r0, #52]	; 0x34
   12134:	add	r1, r0, #32
   12138:	vst1.32	{d16-d17}, [r1]
   1213c:	pop	{fp, pc}

00012140 <table_init@@Base>:
   12140:	vmov.i32	q8, #0	; 0x00000000
   12144:	mov	r1, #0
   12148:	mov	r2, #10
   1214c:	mov	r3, #20
   12150:	str	r1, [r0]
   12154:	stmib	r0, {r1, r2}
   12158:	str	r1, [r0, #12]
   1215c:	str	r1, [r0, #16]
   12160:	str	r1, [r0, #20]
   12164:	str	r3, [r0, #24]
   12168:	str	r1, [r0, #28]
   1216c:	str	r2, [r0, #48]	; 0x30
   12170:	str	r1, [r0, #52]	; 0x34
   12174:	add	r0, r0, #32
   12178:	vst1.32	{d16-d17}, [r0]
   1217c:	bx	lr

00012180 <table_delete@@Base>:
   12180:	push	{r4, sl, fp, lr}
   12184:	add	fp, sp, #8
   12188:	mov	r4, r0
   1218c:	bl	1219c <table_destroy@@Base>
   12190:	mov	r0, r4
   12194:	pop	{r4, sl, fp, lr}
   12198:	b	11ea8 <free@plt>

0001219c <table_destroy@@Base>:
   1219c:	cmp	r0, #0
   121a0:	bxeq	lr
   121a4:	push	{r4, r5, r6, sl, fp, lr}
   121a8:	add	fp, sp, #16
   121ac:	mvn	r1, #0
   121b0:	mvn	r2, #0
   121b4:	mov	r3, #64	; 0x40
   121b8:	mov	r4, r0
   121bc:	bl	12b5c <table_notify@@Base>
   121c0:	mov	r0, r4
   121c4:	bl	13a44 <table_get_row_length@@Base>
   121c8:	cmp	r0, #1
   121cc:	blt	121f0 <table_destroy@@Base+0x54>
   121d0:	mov	r5, r0
   121d4:	mov	r6, #0
   121d8:	mov	r0, r4
   121dc:	mov	r1, r6
   121e0:	bl	139e8 <table_row_destroy@@Base>
   121e4:	add	r6, r6, #1
   121e8:	cmp	r5, r6
   121ec:	bne	121d8 <table_destroy@@Base+0x3c>
   121f0:	ldr	r0, [r4, #16]
   121f4:	cmp	r0, #0
   121f8:	beq	12200 <table_destroy@@Base+0x64>
   121fc:	bl	11ea8 <free@plt>
   12200:	mov	r0, r4
   12204:	bl	12c6c <table_get_column_length@@Base>
   12208:	cmp	r0, #1
   1220c:	blt	12230 <table_destroy@@Base+0x94>
   12210:	mov	r5, r0
   12214:	mov	r6, #0
   12218:	mov	r0, r4
   1221c:	mov	r1, r6
   12220:	bl	12c54 <table_column_destroy@@Base>
   12224:	add	r6, r6, #1
   12228:	cmp	r5, r6
   1222c:	bne	12218 <table_destroy@@Base+0x7c>
   12230:	ldr	r0, [r4]
   12234:	cmp	r0, #0
   12238:	beq	12240 <table_destroy@@Base+0xa4>
   1223c:	bl	11ea8 <free@plt>
   12240:	ldr	r0, [r4, #36]	; 0x24
   12244:	cmp	r0, #0
   12248:	beq	12250 <table_destroy@@Base+0xb4>
   1224c:	bl	11ea8 <free@plt>
   12250:	ldr	r0, [r4, #40]	; 0x28
   12254:	cmp	r0, #0
   12258:	beq	12260 <table_destroy@@Base+0xc4>
   1225c:	bl	11ea8 <free@plt>
   12260:	ldr	r0, [r4, #44]	; 0x2c
   12264:	cmp	r0, #0
   12268:	pop	{r4, r5, r6, sl, fp, lr}
   1226c:	beq	12274 <table_destroy@@Base+0xd8>
   12270:	b	11ea8 <free@plt>
   12274:	bx	lr

00012278 <table_dupe@@Base>:
   12278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1227c:	add	fp, sp, #28
   12280:	sub	sp, sp, #12
   12284:	mov	r4, r0
   12288:	bl	13a44 <table_get_row_length@@Base>
   1228c:	mov	r8, r0
   12290:	mov	r0, r4
   12294:	bl	12c6c <table_get_column_length@@Base>
   12298:	mov	r6, r0
   1229c:	mov	r0, #56	; 0x38
   122a0:	bl	11ecc <malloc@plt>
   122a4:	vmov.i32	q8, #0	; 0x00000000
   122a8:	mov	sl, r0
   122ac:	mov	r5, #0
   122b0:	mov	r0, #10
   122b4:	mov	r1, #20
   122b8:	cmp	r6, #1
   122bc:	str	r5, [sl]
   122c0:	str	r5, [sl, #4]
   122c4:	str	r0, [sl, #8]
   122c8:	str	r5, [sl, #12]
   122cc:	str	r5, [sl, #16]
   122d0:	str	r5, [sl, #20]
   122d4:	str	r1, [sl, #24]
   122d8:	str	r5, [sl, #28]
   122dc:	str	r0, [sl, #48]	; 0x30
   122e0:	add	r0, sl, #32
   122e4:	str	r5, [sl, #52]	; 0x34
   122e8:	vst1.32	{d16-d17}, [r0]
   122ec:	blt	12328 <table_dupe@@Base+0xb0>
   122f0:	mov	r0, r4
   122f4:	mov	r1, r5
   122f8:	bl	12ce0 <table_get_column_name@@Base>
   122fc:	mov	r7, r0
   12300:	mov	r0, r4
   12304:	mov	r1, r5
   12308:	bl	12cf0 <table_get_column_data_type@@Base>
   1230c:	mov	r2, r0
   12310:	mov	r0, sl
   12314:	mov	r1, r7
   12318:	bl	12d04 <table_add_column@@Base>
   1231c:	add	r5, r5, #1
   12320:	cmp	r6, r5
   12324:	bne	122f0 <table_dupe@@Base+0x78>
   12328:	cmp	r8, #1
   1232c:	blt	128bc <table_dupe@@Base+0x644>
   12330:	mov	r5, #0
   12334:	add	r9, sp, #8
   12338:	mov	r0, sl
   1233c:	bl	13a4c <table_add_row@@Base>
   12340:	cmp	r6, #1
   12344:	bge	12364 <table_dupe@@Base+0xec>
   12348:	add	r5, r5, #1
   1234c:	cmp	r5, r8
   12350:	beq	128bc <table_dupe@@Base+0x644>
   12354:	mov	r0, sl
   12358:	bl	13a4c <table_add_row@@Base>
   1235c:	cmp	r6, #1
   12360:	blt	12348 <table_dupe@@Base+0xd0>
   12364:	mov	r7, #0
   12368:	b	123a0 <table_dupe@@Base+0x128>
   1236c:	mov	r0, r4
   12370:	mov	r1, r5
   12374:	mov	r2, r7
   12378:	bl	139a4 <table_get_ptr@@Base>
   1237c:	str	r0, [sp, #8]
   12380:	mov	r0, sl
   12384:	mov	r1, r5
   12388:	mov	r2, r7
   1238c:	mov	r3, r9
   12390:	bl	14b3c <table_set_ptr@@Base>
   12394:	add	r7, r7, #1
   12398:	cmp	r6, r7
   1239c:	beq	12348 <table_dupe@@Base+0xd0>
   123a0:	mov	r0, r4
   123a4:	mov	r1, r7
   123a8:	bl	12cf0 <table_get_column_data_type@@Base>
   123ac:	cmp	r0, #23
   123b0:	bhi	12394 <table_dupe@@Base+0x11c>
   123b4:	add	r1, pc, #0
   123b8:	ldr	pc, [r1, r0, lsl #2]
   123bc:	andeq	r2, r1, ip, lsl r4
   123c0:	andeq	r2, r1, r0, asr r4
   123c4:	andeq	r2, r1, r4, lsl #9
   123c8:			; <UNDEFINED> instruction: 0x000124b8
   123cc:	andeq	r2, r1, ip, ror #9
   123d0:	andeq	r2, r1, r0, lsr #10
   123d4:	andeq	r2, r1, r4, asr r5
   123d8:	andeq	r2, r1, r8, lsl #11
   123dc:			; <UNDEFINED> instruction: 0x000125bc
   123e0:	strdeq	r2, [r1], -r0
   123e4:	andeq	r2, r1, r4, lsr #12
   123e8:	andeq	r2, r1, r8, asr r6
   123ec:	andeq	r2, r1, ip, lsl #13
   123f0:	andeq	r2, r1, r0, asr #13
   123f4:	strdeq	r2, [r1], -r4
   123f8:	andeq	r2, r1, r8, lsr #14
   123fc:	andeq	r2, r1, ip, asr r7
   12400:	andeq	r2, r1, ip, lsl #15
   12404:			; <UNDEFINED> instruction: 0x000127bc
   12408:	andeq	r2, r1, ip, ror #15
   1240c:	andeq	r2, r1, r0, lsr #16
   12410:	andeq	r2, r1, r4, asr r8
   12414:	andeq	r2, r1, r8, lsl #17
   12418:	andeq	r2, r1, ip, ror #6
   1241c:	mov	r0, r4
   12420:	mov	r1, r5
   12424:	mov	r2, r7
   12428:	bl	13798 <table_get_int@@Base>
   1242c:	mov	r3, r0
   12430:	mov	r0, sl
   12434:	mov	r1, r5
   12438:	mov	r2, r7
   1243c:	bl	13ff8 <table_set_int@@Base>
   12440:	add	r7, r7, #1
   12444:	cmp	r6, r7
   12448:	bne	123a0 <table_dupe@@Base+0x128>
   1244c:	b	12348 <table_dupe@@Base+0xd0>
   12450:	mov	r0, r4
   12454:	mov	r1, r5
   12458:	mov	r2, r7
   1245c:	bl	137b0 <table_get_uint@@Base>
   12460:	mov	r3, r0
   12464:	mov	r0, sl
   12468:	mov	r1, r5
   1246c:	mov	r2, r7
   12470:	bl	14078 <table_set_uint@@Base>
   12474:	add	r7, r7, #1
   12478:	cmp	r6, r7
   1247c:	bne	123a0 <table_dupe@@Base+0x128>
   12480:	b	12348 <table_dupe@@Base+0xd0>
   12484:	mov	r0, r4
   12488:	mov	r1, r5
   1248c:	mov	r2, r7
   12490:	bl	137c8 <table_get_int8@@Base>
   12494:	mov	r3, r0
   12498:	mov	r0, sl
   1249c:	mov	r1, r5
   124a0:	mov	r2, r7
   124a4:	bl	140f8 <table_set_int8@@Base>
   124a8:	add	r7, r7, #1
   124ac:	cmp	r6, r7
   124b0:	bne	123a0 <table_dupe@@Base+0x128>
   124b4:	b	12348 <table_dupe@@Base+0xd0>
   124b8:	mov	r0, r4
   124bc:	mov	r1, r5
   124c0:	mov	r2, r7
   124c4:	bl	137e0 <table_get_uint8@@Base>
   124c8:	mov	r3, r0
   124cc:	mov	r0, sl
   124d0:	mov	r1, r5
   124d4:	mov	r2, r7
   124d8:	bl	14178 <table_set_uint8@@Base>
   124dc:	add	r7, r7, #1
   124e0:	cmp	r6, r7
   124e4:	bne	123a0 <table_dupe@@Base+0x128>
   124e8:	b	12348 <table_dupe@@Base+0xd0>
   124ec:	mov	r0, r4
   124f0:	mov	r1, r5
   124f4:	mov	r2, r7
   124f8:	bl	137f8 <table_get_int16@@Base>
   124fc:	mov	r3, r0
   12500:	mov	r0, sl
   12504:	mov	r1, r5
   12508:	mov	r2, r7
   1250c:	bl	141f8 <table_set_int16@@Base>
   12510:	add	r7, r7, #1
   12514:	cmp	r6, r7
   12518:	bne	123a0 <table_dupe@@Base+0x128>
   1251c:	b	12348 <table_dupe@@Base+0xd0>
   12520:	mov	r0, r4
   12524:	mov	r1, r5
   12528:	mov	r2, r7
   1252c:	bl	13810 <table_get_uint16@@Base>
   12530:	mov	r3, r0
   12534:	mov	r0, sl
   12538:	mov	r1, r5
   1253c:	mov	r2, r7
   12540:	bl	14278 <table_set_uint16@@Base>
   12544:	add	r7, r7, #1
   12548:	cmp	r6, r7
   1254c:	bne	123a0 <table_dupe@@Base+0x128>
   12550:	b	12348 <table_dupe@@Base+0xd0>
   12554:	mov	r0, r4
   12558:	mov	r1, r5
   1255c:	mov	r2, r7
   12560:	bl	13828 <table_get_int32@@Base>
   12564:	mov	r3, r0
   12568:	mov	r0, sl
   1256c:	mov	r1, r5
   12570:	mov	r2, r7
   12574:	bl	142f8 <table_set_int32@@Base>
   12578:	add	r7, r7, #1
   1257c:	cmp	r6, r7
   12580:	bne	123a0 <table_dupe@@Base+0x128>
   12584:	b	12348 <table_dupe@@Base+0xd0>
   12588:	mov	r0, r4
   1258c:	mov	r1, r5
   12590:	mov	r2, r7
   12594:	bl	13840 <table_get_uint32@@Base>
   12598:	mov	r3, r0
   1259c:	mov	r0, sl
   125a0:	mov	r1, r5
   125a4:	mov	r2, r7
   125a8:	bl	14378 <table_set_uint32@@Base>
   125ac:	add	r7, r7, #1
   125b0:	cmp	r6, r7
   125b4:	bne	123a0 <table_dupe@@Base+0x128>
   125b8:	b	12348 <table_dupe@@Base+0xd0>
   125bc:	mov	r0, r4
   125c0:	mov	r1, r5
   125c4:	mov	r2, r7
   125c8:	bl	13858 <table_get_int64@@Base>
   125cc:	stm	sp, {r0, r1}
   125d0:	mov	r0, sl
   125d4:	mov	r1, r5
   125d8:	mov	r2, r7
   125dc:	bl	143f8 <table_set_int64@@Base>
   125e0:	add	r7, r7, #1
   125e4:	cmp	r6, r7
   125e8:	bne	123a0 <table_dupe@@Base+0x128>
   125ec:	b	12348 <table_dupe@@Base+0xd0>
   125f0:	mov	r0, r4
   125f4:	mov	r1, r5
   125f8:	mov	r2, r7
   125fc:	bl	13870 <table_get_uint64@@Base>
   12600:	stm	sp, {r0, r1}
   12604:	mov	r0, sl
   12608:	mov	r1, r5
   1260c:	mov	r2, r7
   12610:	bl	14480 <table_set_uint64@@Base>
   12614:	add	r7, r7, #1
   12618:	cmp	r6, r7
   1261c:	bne	123a0 <table_dupe@@Base+0x128>
   12620:	b	12348 <table_dupe@@Base+0xd0>
   12624:	mov	r0, r4
   12628:	mov	r1, r5
   1262c:	mov	r2, r7
   12630:	bl	13888 <table_get_short@@Base>
   12634:	mov	r3, r0
   12638:	mov	r0, sl
   1263c:	mov	r1, r5
   12640:	mov	r2, r7
   12644:	bl	14508 <table_set_short@@Base>
   12648:	add	r7, r7, #1
   1264c:	cmp	r6, r7
   12650:	bne	123a0 <table_dupe@@Base+0x128>
   12654:	b	12348 <table_dupe@@Base+0xd0>
   12658:	mov	r0, r4
   1265c:	mov	r1, r5
   12660:	mov	r2, r7
   12664:	bl	138a0 <table_get_ushort@@Base>
   12668:	mov	r3, r0
   1266c:	mov	r0, sl
   12670:	mov	r1, r5
   12674:	mov	r2, r7
   12678:	bl	14588 <table_set_ushort@@Base>
   1267c:	add	r7, r7, #1
   12680:	cmp	r6, r7
   12684:	bne	123a0 <table_dupe@@Base+0x128>
   12688:	b	12348 <table_dupe@@Base+0xd0>
   1268c:	mov	r0, r4
   12690:	mov	r1, r5
   12694:	mov	r2, r7
   12698:	bl	138b8 <table_get_long@@Base>
   1269c:	mov	r3, r0
   126a0:	mov	r0, sl
   126a4:	mov	r1, r5
   126a8:	mov	r2, r7
   126ac:	bl	14608 <table_set_long@@Base>
   126b0:	add	r7, r7, #1
   126b4:	cmp	r6, r7
   126b8:	bne	123a0 <table_dupe@@Base+0x128>
   126bc:	b	12348 <table_dupe@@Base+0xd0>
   126c0:	mov	r0, r4
   126c4:	mov	r1, r5
   126c8:	mov	r2, r7
   126cc:	bl	138d0 <table_get_ulong@@Base>
   126d0:	mov	r3, r0
   126d4:	mov	r0, sl
   126d8:	mov	r1, r5
   126dc:	mov	r2, r7
   126e0:	bl	14688 <table_set_ulong@@Base>
   126e4:	add	r7, r7, #1
   126e8:	cmp	r6, r7
   126ec:	bne	123a0 <table_dupe@@Base+0x128>
   126f0:	b	12348 <table_dupe@@Base+0xd0>
   126f4:	mov	r0, r4
   126f8:	mov	r1, r5
   126fc:	mov	r2, r7
   12700:	bl	138e8 <table_get_llong@@Base>
   12704:	stm	sp, {r0, r1}
   12708:	mov	r0, sl
   1270c:	mov	r1, r5
   12710:	mov	r2, r7
   12714:	bl	14708 <table_set_llong@@Base>
   12718:	add	r7, r7, #1
   1271c:	cmp	r6, r7
   12720:	bne	123a0 <table_dupe@@Base+0x128>
   12724:	b	12348 <table_dupe@@Base+0xd0>
   12728:	mov	r0, r4
   1272c:	mov	r1, r5
   12730:	mov	r2, r7
   12734:	bl	13900 <table_get_ullong@@Base>
   12738:	stm	sp, {r0, r1}
   1273c:	mov	r0, sl
   12740:	mov	r1, r5
   12744:	mov	r2, r7
   12748:	bl	14790 <table_set_ullong@@Base>
   1274c:	add	r7, r7, #1
   12750:	cmp	r6, r7
   12754:	bne	123a0 <table_dupe@@Base+0x128>
   12758:	b	12348 <table_dupe@@Base+0xd0>
   1275c:	mov	r0, r4
   12760:	mov	r1, r5
   12764:	mov	r2, r7
   12768:	bl	13918 <table_get_float@@Base>
   1276c:	mov	r0, sl
   12770:	mov	r1, r5
   12774:	mov	r2, r7
   12778:	bl	14818 <table_set_float@@Base>
   1277c:	add	r7, r7, #1
   12780:	cmp	r6, r7
   12784:	bne	123a0 <table_dupe@@Base+0x128>
   12788:	b	12348 <table_dupe@@Base+0xd0>
   1278c:	mov	r0, r4
   12790:	mov	r1, r5
   12794:	mov	r2, r7
   12798:	bl	13930 <table_get_double@@Base>
   1279c:	mov	r0, sl
   127a0:	mov	r1, r5
   127a4:	mov	r2, r7
   127a8:	bl	148a4 <table_set_double@@Base>
   127ac:	add	r7, r7, #1
   127b0:	cmp	r6, r7
   127b4:	bne	123a0 <table_dupe@@Base+0x128>
   127b8:	b	12348 <table_dupe@@Base+0xd0>
   127bc:	mov	r0, r4
   127c0:	mov	r1, r5
   127c4:	mov	r2, r7
   127c8:	bl	13948 <table_get_ldouble@@Base>
   127cc:	mov	r0, sl
   127d0:	mov	r1, r5
   127d4:	mov	r2, r7
   127d8:	bl	1492c <table_set_ldouble@@Base>
   127dc:	add	r7, r7, #1
   127e0:	cmp	r6, r7
   127e4:	bne	123a0 <table_dupe@@Base+0x128>
   127e8:	b	12348 <table_dupe@@Base+0xd0>
   127ec:	mov	r0, r4
   127f0:	mov	r1, r5
   127f4:	mov	r2, r7
   127f8:	bl	13960 <table_get_char@@Base>
   127fc:	mov	r3, r0
   12800:	mov	r0, sl
   12804:	mov	r1, r5
   12808:	mov	r2, r7
   1280c:	bl	14a3c <table_set_char@@Base>
   12810:	add	r7, r7, #1
   12814:	cmp	r6, r7
   12818:	bne	123a0 <table_dupe@@Base+0x128>
   1281c:	b	12348 <table_dupe@@Base+0xd0>
   12820:	mov	r0, r4
   12824:	mov	r1, r5
   12828:	mov	r2, r7
   1282c:	bl	13978 <table_get_uchar@@Base>
   12830:	mov	r3, r0
   12834:	mov	r0, sl
   12838:	mov	r1, r5
   1283c:	mov	r2, r7
   12840:	bl	14abc <table_set_uchar@@Base>
   12844:	add	r7, r7, #1
   12848:	cmp	r6, r7
   1284c:	bne	123a0 <table_dupe@@Base+0x128>
   12850:	b	12348 <table_dupe@@Base+0xd0>
   12854:	mov	r0, r4
   12858:	mov	r1, r5
   1285c:	mov	r2, r7
   12860:	bl	13990 <table_get_string@@Base>
   12864:	mov	r3, r0
   12868:	mov	r0, sl
   1286c:	mov	r1, r5
   12870:	mov	r2, r7
   12874:	bl	149b4 <table_set_string@@Base>
   12878:	add	r7, r7, #1
   1287c:	cmp	r6, r7
   12880:	bne	123a0 <table_dupe@@Base+0x128>
   12884:	b	12348 <table_dupe@@Base+0xd0>
   12888:	mov	r0, r4
   1288c:	mov	r1, r5
   12890:	mov	r2, r7
   12894:	bl	13780 <table_get_bool@@Base>
   12898:	mov	r3, r0
   1289c:	mov	r0, sl
   128a0:	mov	r1, r5
   128a4:	mov	r2, r7
   128a8:	bl	13f78 <table_set_bool@@Base>
   128ac:	add	r7, r7, #1
   128b0:	cmp	r6, r7
   128b4:	bne	123a0 <table_dupe@@Base+0x128>
   128b8:	b	12348 <table_dupe@@Base+0xd0>
   128bc:	mov	r0, sl
   128c0:	sub	sp, fp, #28
   128c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000128c8 <table_get_major_version@@Base>:
   128c8:	mov	r0, #0
   128cc:	bx	lr

000128d0 <table_get_minor_version@@Base>:
   128d0:	mov	r0, #0
   128d4:	bx	lr

000128d8 <table_get_patch_version@@Base>:
   128d8:	mov	r0, #0
   128dc:	bx	lr

000128e0 <table_get_version@@Base>:
   128e0:	movw	r0, #22348	; 0x574c
   128e4:	movt	r0, #1
   128e8:	bx	lr

000128ec <table_get_callback_length@@Base>:
   128ec:	ldr	r0, [r0, #32]
   128f0:	bx	lr

000128f4 <table_register_callback@@Base>:
   128f4:	push	{r4, r5, r6, r7, fp, lr}
   128f8:	add	fp, sp, #16
   128fc:	mov	r5, r0
   12900:	ldr	r0, [r0, #32]
   12904:	mov	r4, r3
   12908:	mov	r6, r2
   1290c:	mov	r7, r1
   12910:	cmp	r0, #1
   12914:	blt	12970 <table_register_callback@@Base+0x7c>
   12918:	ldr	r2, [r5, #36]	; 0x24
   1291c:	mov	r1, #0
   12920:	ldr	r3, [r2, r1, lsl #2]
   12924:	cmp	r3, r7
   12928:	beq	12944 <table_register_callback@@Base+0x50>
   1292c:	add	r1, r1, #1
   12930:	cmp	r0, r1
   12934:	beq	12970 <table_register_callback@@Base+0x7c>
   12938:	ldr	r3, [r2, r1, lsl #2]
   1293c:	cmp	r3, r7
   12940:	bne	1292c <table_register_callback@@Base+0x38>
   12944:	ldr	r3, [r5, #40]	; 0x28
   12948:	ldr	r3, [r3, r1, lsl #2]
   1294c:	cmp	r3, r6
   12950:	bne	1292c <table_register_callback@@Base+0x38>
   12954:	cmp	r1, #0
   12958:	beq	12970 <table_register_callback@@Base+0x7c>
   1295c:	ldr	r0, [r5, #44]	; 0x2c
   12960:	ldr	r2, [r0, r1, lsl #2]
   12964:	orr	r2, r2, r4
   12968:	str	r2, [r0, r1, lsl #2]
   1296c:	pop	{r4, r5, r6, r7, fp, pc}
   12970:	ldr	r1, [r5, #48]	; 0x30
   12974:	udiv	r2, r0, r1
   12978:	mls	r2, r2, r1, r0
   1297c:	cmp	r2, #0
   12980:	bne	129cc <table_register_callback@@Base+0xd8>
   12984:	ldr	r2, [r5, #52]	; 0x34
   12988:	ldr	r0, [r5, #36]	; 0x24
   1298c:	add	r1, r2, r1
   12990:	str	r1, [r5, #52]	; 0x34
   12994:	lsl	r1, r1, #2
   12998:	bl	11eb4 <realloc@plt>
   1299c:	str	r0, [r5, #36]	; 0x24
   129a0:	ldr	r1, [r5, #52]	; 0x34
   129a4:	ldr	r0, [r5, #40]	; 0x28
   129a8:	lsl	r1, r1, #2
   129ac:	bl	11eb4 <realloc@plt>
   129b0:	str	r0, [r5, #40]	; 0x28
   129b4:	ldr	r1, [r5, #52]	; 0x34
   129b8:	ldr	r0, [r5, #44]	; 0x2c
   129bc:	lsl	r1, r1, #2
   129c0:	bl	11eb4 <realloc@plt>
   129c4:	str	r0, [r5, #44]	; 0x2c
   129c8:	ldr	r0, [r5, #32]
   129cc:	ldr	r1, [r5, #36]	; 0x24
   129d0:	str	r7, [r1, r0, lsl #2]
   129d4:	ldr	r1, [r5, #40]	; 0x28
   129d8:	str	r6, [r1, r0, lsl #2]
   129dc:	ldr	r1, [r5, #44]	; 0x2c
   129e0:	str	r4, [r1, r0, lsl #2]
   129e4:	ldr	r0, [r5, #32]
   129e8:	add	r0, r0, #1
   129ec:	str	r0, [r5, #32]
   129f0:	pop	{r4, r5, r6, r7, fp, pc}

000129f4 <table_unregister_callback@@Base>:
   129f4:	push	{r4, r5, r6, sl, fp, lr}
   129f8:	add	fp, sp, #16
   129fc:	ldr	r4, [r0, #32]
   12a00:	cmp	r4, #1
   12a04:	blt	12b58 <table_unregister_callback@@Base+0x164>
   12a08:	ldr	r3, [r0, #36]	; 0x24
   12a0c:	mov	r6, r0
   12a10:	mov	r0, #0
   12a14:	ldr	r5, [r3, r0, lsl #2]
   12a18:	cmp	r5, r1
   12a1c:	beq	12a38 <table_unregister_callback@@Base+0x44>
   12a20:	add	r0, r0, #1
   12a24:	cmp	r0, r4
   12a28:	beq	12b58 <table_unregister_callback@@Base+0x164>
   12a2c:	ldr	r5, [r3, r0, lsl #2]
   12a30:	cmp	r5, r1
   12a34:	bne	12a20 <table_unregister_callback@@Base+0x2c>
   12a38:	ldr	r5, [r6, #40]	; 0x28
   12a3c:	ldr	r5, [r5, r0, lsl #2]
   12a40:	cmp	r5, r2
   12a44:	bne	12a20 <table_unregister_callback@@Base+0x2c>
   12a48:	sub	r1, r4, #1
   12a4c:	cmp	r0, r1
   12a50:	bge	12ad4 <table_unregister_callback@@Base+0xe0>
   12a54:	add	r2, r0, #1
   12a58:	ldr	r1, [r3, r2, lsl #2]
   12a5c:	str	r1, [r3, r0, lsl #2]
   12a60:	ldr	r1, [r6, #40]	; 0x28
   12a64:	ldr	r3, [r1, r2, lsl #2]
   12a68:	str	r3, [r1, r0, lsl #2]
   12a6c:	ldr	r1, [r6, #44]	; 0x2c
   12a70:	ldr	r3, [r1, r2, lsl #2]
   12a74:	str	r3, [r1, r0, lsl #2]
   12a78:	ldr	r1, [r6, #32]
   12a7c:	sub	r1, r1, #1
   12a80:	cmp	r2, r1
   12a84:	bge	12ad4 <table_unregister_callback@@Base+0xe0>
   12a88:	ldr	r1, [r6, #36]	; 0x24
   12a8c:	add	r1, r1, r0, lsl #2
   12a90:	ldr	r2, [r1, #8]
   12a94:	str	r2, [r1, #4]
   12a98:	ldr	r1, [r6, #40]	; 0x28
   12a9c:	add	r1, r1, r0, lsl #2
   12aa0:	ldr	r2, [r1, #8]
   12aa4:	str	r2, [r1, #4]
   12aa8:	ldr	r1, [r6, #44]	; 0x2c
   12aac:	add	r1, r1, r0, lsl #2
   12ab0:	ldr	r2, [r1, #8]
   12ab4:	str	r2, [r1, #4]
   12ab8:	add	r2, r0, #1
   12abc:	add	r0, r0, #2
   12ac0:	ldr	r1, [r6, #32]
   12ac4:	sub	r1, r1, #1
   12ac8:	cmp	r0, r1
   12acc:	mov	r0, r2
   12ad0:	blt	12a88 <table_unregister_callback@@Base+0x94>
   12ad4:	str	r1, [r6, #32]
   12ad8:	ldr	r2, [r6, #48]	; 0x30
   12adc:	udiv	r0, r1, r2
   12ae0:	mls	r0, r0, r2, r1
   12ae4:	cmp	r0, #0
   12ae8:	popne	{r4, r5, r6, sl, fp, pc}
   12aec:	ldr	r1, [r6, #52]	; 0x34
   12af0:	ldr	r0, [r6, #36]	; 0x24
   12af4:	subs	r1, r1, r2
   12af8:	str	r1, [r6, #52]	; 0x34
   12afc:	beq	12b34 <table_unregister_callback@@Base+0x140>
   12b00:	lsl	r1, r1, #2
   12b04:	bl	11eb4 <realloc@plt>
   12b08:	str	r0, [r6, #36]	; 0x24
   12b0c:	ldr	r1, [r6, #52]	; 0x34
   12b10:	ldr	r0, [r6, #40]	; 0x28
   12b14:	lsl	r1, r1, #2
   12b18:	bl	11eb4 <realloc@plt>
   12b1c:	str	r0, [r6, #40]	; 0x28
   12b20:	ldr	r1, [r6, #52]	; 0x34
   12b24:	ldr	r0, [r6, #44]	; 0x2c
   12b28:	lsl	r1, r1, #2
   12b2c:	bl	11eb4 <realloc@plt>
   12b30:	b	12b54 <table_unregister_callback@@Base+0x160>
   12b34:	bl	11ea8 <free@plt>
   12b38:	ldr	r0, [r6, #40]	; 0x28
   12b3c:	bl	11ea8 <free@plt>
   12b40:	ldr	r0, [r6, #44]	; 0x2c
   12b44:	bl	11ea8 <free@plt>
   12b48:	mov	r0, #0
   12b4c:	str	r0, [r6, #36]	; 0x24
   12b50:	str	r0, [r6, #40]	; 0x28
   12b54:	str	r0, [r6, #44]	; 0x2c
   12b58:	pop	{r4, r5, r6, sl, fp, pc}

00012b5c <table_notify@@Base>:
   12b5c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b60:	add	fp, sp, #24
   12b64:	sub	sp, sp, #8
   12b68:	mov	r7, r0
   12b6c:	ldr	r0, [r0, #32]
   12b70:	cmp	r0, #1
   12b74:	blt	12bec <table_notify@@Base+0x90>
   12b78:	mov	r4, r3
   12b7c:	mov	r8, r2
   12b80:	mov	r9, r1
   12b84:	mov	r5, #0
   12b88:	ldr	r1, [r7, #44]	; 0x2c
   12b8c:	ldr	r1, [r1, r5, lsl #2]
   12b90:	tst	r1, r4
   12b94:	bne	12bb4 <table_notify@@Base+0x58>
   12b98:	add	r5, r5, #1
   12b9c:	cmp	r5, r0
   12ba0:	bge	12bec <table_notify@@Base+0x90>
   12ba4:	ldr	r1, [r7, #44]	; 0x2c
   12ba8:	ldr	r1, [r1, r5, lsl #2]
   12bac:	tst	r1, r4
   12bb0:	beq	12b98 <table_notify@@Base+0x3c>
   12bb4:	ldr	r0, [r7, #36]	; 0x24
   12bb8:	ldr	r1, [r7, #40]	; 0x28
   12bbc:	mov	r2, r8
   12bc0:	mov	r3, r4
   12bc4:	ldr	r6, [r0, r5, lsl #2]
   12bc8:	ldr	r0, [r1, r5, lsl #2]
   12bcc:	mov	r1, r9
   12bd0:	str	r0, [sp]
   12bd4:	mov	r0, r7
   12bd8:	blx	r6
   12bdc:	ldr	r0, [r7, #32]
   12be0:	add	r5, r5, #1
   12be4:	cmp	r5, r0
   12be8:	blt	12ba4 <table_notify@@Base+0x48>
   12bec:	sub	sp, fp, #24
   12bf0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012bf4 <table_column_init@@Base>:
   12bf4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12bf8:	add	fp, sp, #24
   12bfc:	ldr	r7, [r0]
   12c00:	mov	r0, r2
   12c04:	mov	r4, r3
   12c08:	mov	r5, r2
   12c0c:	mov	r6, r1
   12c10:	bl	11ef0 <strlen@plt>
   12c14:	add	r0, r0, #1
   12c18:	bl	11ecc <malloc@plt>
   12c1c:	ldr	r8, [fp, #8]
   12c20:	add	r6, r6, r6, lsl #1
   12c24:	cmp	r0, #0
   12c28:	str	r0, [r7, r6, lsl #2]
   12c2c:	beq	12c38 <table_column_init@@Base+0x44>
   12c30:	mov	r1, r5
   12c34:	bl	11ec0 <strcpy@plt>
   12c38:	add	r0, r7, r6, lsl #2
   12c3c:	stmib	r0, {r4, r8}
   12c40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012c44 <table_get_col_ptr@@Base>:
   12c44:	ldr	r0, [r0]
   12c48:	add	r1, r1, r1, lsl #1
   12c4c:	add	r0, r0, r1, lsl #2
   12c50:	bx	lr

00012c54 <table_column_destroy@@Base>:
   12c54:	ldr	r0, [r0]
   12c58:	add	r1, r1, r1, lsl #1
   12c5c:	ldr	r0, [r0, r1, lsl #2]
   12c60:	cmp	r0, #0
   12c64:	bxeq	lr
   12c68:	b	11ea8 <free@plt>

00012c6c <table_get_column_length@@Base>:
   12c6c:	ldr	r0, [r0, #4]
   12c70:	bx	lr

00012c74 <table_get_column@@Base>:
   12c74:	push	{r4, r5, r6, r7, fp, lr}
   12c78:	add	fp, sp, #16
   12c7c:	ldr	r6, [r0, #4]
   12c80:	cmp	r6, #1
   12c84:	blt	12ccc <table_get_column@@Base+0x58>
   12c88:	ldr	r7, [r0]
   12c8c:	mov	r5, r1
   12c90:	mov	r4, #0
   12c94:	ldr	r0, [r7]
   12c98:	mov	r1, r5
   12c9c:	bl	11e90 <strcmp@plt>
   12ca0:	cmp	r0, #0
   12ca4:	beq	12cbc <table_get_column@@Base+0x48>
   12ca8:	add	r4, r4, #1
   12cac:	add	r7, r7, #12
   12cb0:	cmp	r6, r4
   12cb4:	bne	12c94 <table_get_column@@Base+0x20>
   12cb8:	mov	r4, r6
   12cbc:	cmp	r4, r6
   12cc0:	mvneq	r4, #0
   12cc4:	mov	r0, r4
   12cc8:	pop	{r4, r5, r6, r7, fp, pc}
   12ccc:	mov	r4, #0
   12cd0:	cmp	r4, r6
   12cd4:	mvneq	r4, #0
   12cd8:	mov	r0, r4
   12cdc:	pop	{r4, r5, r6, r7, fp, pc}

00012ce0 <table_get_column_name@@Base>:
   12ce0:	ldr	r0, [r0]
   12ce4:	add	r1, r1, r1, lsl #1
   12ce8:	ldr	r0, [r0, r1, lsl #2]
   12cec:	bx	lr

00012cf0 <table_get_column_data_type@@Base>:
   12cf0:	ldr	r0, [r0]
   12cf4:	add	r1, r1, r1, lsl #1
   12cf8:	add	r0, r0, r1, lsl #2
   12cfc:	ldr	r0, [r0, #4]
   12d00:	bx	lr

00012d04 <table_add_column@@Base>:
   12d04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d08:	add	fp, sp, #28
   12d0c:	sub	sp, sp, #4
   12d10:	mov	r4, r0
   12d14:	mov	r8, r1
   12d18:	ldr	r0, [r0, #4]
   12d1c:	mov	r9, r2
   12d20:	ldr	r1, [r4, #8]
   12d24:	udiv	r2, r0, r1
   12d28:	mls	r0, r2, r1, r0
   12d2c:	cmp	r0, #0
   12d30:	bne	12d9c <table_add_column@@Base+0x98>
   12d34:	ldr	r2, [r4, #12]
   12d38:	ldr	r0, [r4]
   12d3c:	add	r1, r2, r1
   12d40:	str	r1, [r4, #12]
   12d44:	add	r1, r1, r1, lsl #1
   12d48:	lsl	r1, r1, #2
   12d4c:	bl	11eb4 <realloc@plt>
   12d50:	str	r0, [r4]
   12d54:	mov	r0, r4
   12d58:	bl	13a44 <table_get_row_length@@Base>
   12d5c:	cmp	r0, #1
   12d60:	blt	12d9c <table_add_column@@Base+0x98>
   12d64:	mov	r6, r0
   12d68:	mov	r5, #0
   12d6c:	mov	r0, r4
   12d70:	mov	r1, r5
   12d74:	bl	139dc <table_get_row_ptr@@Base>
   12d78:	ldr	r1, [r4, #12]
   12d7c:	mov	r7, r0
   12d80:	ldr	r0, [r0]
   12d84:	lsl	r1, r1, #2
   12d88:	bl	11eb4 <realloc@plt>
   12d8c:	add	r5, r5, #1
   12d90:	str	r0, [r7]
   12d94:	cmp	r6, r5
   12d98:	bne	12d6c <table_add_column@@Base+0x68>
   12d9c:	mov	r0, r4
   12da0:	bl	13a44 <table_get_row_length@@Base>
   12da4:	ldr	r6, [r4, #4]
   12da8:	mov	r7, r0
   12dac:	mov	r0, r9
   12db0:	bl	13750 <table_get_default_compare_function_for_data_type@@Base>
   12db4:	ldr	r5, [r4]
   12db8:	mov	sl, r0
   12dbc:	mov	r0, r8
   12dc0:	bl	11ef0 <strlen@plt>
   12dc4:	add	r0, r0, #1
   12dc8:	bl	11ecc <malloc@plt>
   12dcc:	mov	r1, r8
   12dd0:	add	r8, r6, r6, lsl #1
   12dd4:	cmp	r0, #0
   12dd8:	str	r0, [r5, r8, lsl #2]
   12ddc:	beq	12de4 <table_add_column@@Base+0xe0>
   12de0:	bl	11ec0 <strcpy@plt>
   12de4:	add	r0, r5, r8, lsl #2
   12de8:	cmp	r7, #1
   12dec:	stmib	r0, {r9, sl}
   12df0:	blt	12e14 <table_add_column@@Base+0x110>
   12df4:	mov	r5, #0
   12df8:	mov	r0, r4
   12dfc:	mov	r1, r5
   12e00:	mov	r2, r6
   12e04:	bl	14b98 <table_cell_init@@Base>
   12e08:	add	r5, r5, #1
   12e0c:	cmp	r7, r5
   12e10:	bne	12df8 <table_add_column@@Base+0xf4>
   12e14:	ldr	r2, [r4, #4]
   12e18:	mov	r0, r4
   12e1c:	mvn	r1, #0
   12e20:	mov	r3, #8
   12e24:	bl	12b5c <table_notify@@Base>
   12e28:	ldr	r0, [r4, #4]
   12e2c:	add	r1, r0, #1
   12e30:	str	r1, [r4, #4]
   12e34:	sub	sp, fp, #28
   12e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012e3c <table_remove_column@@Base>:
   12e3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e40:	add	fp, sp, #28
   12e44:	sub	sp, sp, #12
   12e48:	mov	r5, r0
   12e4c:	ldr	r0, [r0]
   12e50:	add	r6, r1, r1, lsl #1
   12e54:	mov	r4, r1
   12e58:	ldr	r0, [r0, r6, lsl #2]
   12e5c:	cmp	r0, #0
   12e60:	beq	12e68 <table_remove_column@@Base+0x2c>
   12e64:	bl	11ea8 <free@plt>
   12e68:	ldr	r7, [r5, #4]
   12e6c:	sub	r0, r7, #1
   12e70:	cmp	r0, r4
   12e74:	str	r0, [sp, #8]
   12e78:	ble	12eac <table_remove_column@@Base+0x70>
   12e7c:	mvn	r0, r4
   12e80:	lsl	r1, r6, #2
   12e84:	add	r0, r0, r7
   12e88:	ldr	r2, [r5]
   12e8c:	subs	r0, r0, #1
   12e90:	add	r2, r2, r1
   12e94:	add	r1, r1, #12
   12e98:	vldr	d16, [r2, #12]
   12e9c:	ldr	r3, [r2, #20]
   12ea0:	str	r3, [r2, #8]
   12ea4:	vstr	d16, [r2]
   12ea8:	bne	12e88 <table_remove_column@@Base+0x4c>
   12eac:	mov	r0, r5
   12eb0:	bl	13a44 <table_get_row_length@@Base>
   12eb4:	cmp	r0, #1
   12eb8:	blt	12fa4 <table_remove_column@@Base+0x168>
   12ebc:	mov	sl, r0
   12ec0:	ldr	r0, [sp, #8]
   12ec4:	cmp	r0, r4
   12ec8:	ble	12f78 <table_remove_column@@Base+0x13c>
   12ecc:	mvn	r0, r4
   12ed0:	sub	r8, r7, #2
   12ed4:	add	r0, r7, r0
   12ed8:	mov	r7, #0
   12edc:	and	r9, r0, #1
   12ee0:	add	r0, r4, #1
   12ee4:	str	r0, [sp, #4]
   12ee8:	b	12ef8 <table_remove_column@@Base+0xbc>
   12eec:	add	r7, r7, #1
   12ef0:	cmp	r7, sl
   12ef4:	beq	12fa4 <table_remove_column@@Base+0x168>
   12ef8:	mov	r0, r5
   12efc:	mov	r1, r7
   12f00:	mov	r2, r4
   12f04:	bl	14bd4 <table_cell_destroy@@Base>
   12f08:	mov	r0, r5
   12f0c:	mov	r1, r7
   12f10:	bl	139dc <table_get_row_ptr@@Base>
   12f14:	cmp	r9, #0
   12f18:	mov	r2, r4
   12f1c:	beq	12f34 <table_remove_column@@Base+0xf8>
   12f20:	ldr	r1, [r0]
   12f24:	add	r2, r1, r4, lsl #2
   12f28:	ldr	r2, [r2, #4]
   12f2c:	str	r2, [r1, r4, lsl #2]
   12f30:	ldr	r2, [sp, #4]
   12f34:	cmp	r8, r4
   12f38:	beq	12eec <table_remove_column@@Base+0xb0>
   12f3c:	ldr	r1, [sp, #8]
   12f40:	sub	r1, r1, r2
   12f44:	lsl	r2, r2, #2
   12f48:	ldr	r3, [r0]
   12f4c:	subs	r1, r1, #2
   12f50:	add	r6, r3, r2
   12f54:	ldr	r6, [r6, #4]
   12f58:	str	r6, [r3, r2]
   12f5c:	ldr	r3, [r0]
   12f60:	add	r3, r3, r2
   12f64:	add	r2, r2, #8
   12f68:	ldr	r6, [r3, #8]
   12f6c:	str	r6, [r3, #4]
   12f70:	bne	12f48 <table_remove_column@@Base+0x10c>
   12f74:	b	12eec <table_remove_column@@Base+0xb0>
   12f78:	mov	r7, #0
   12f7c:	mov	r0, r5
   12f80:	mov	r1, r7
   12f84:	mov	r2, r4
   12f88:	bl	14bd4 <table_cell_destroy@@Base>
   12f8c:	mov	r0, r5
   12f90:	mov	r1, r7
   12f94:	bl	139dc <table_get_row_ptr@@Base>
   12f98:	add	r7, r7, #1
   12f9c:	cmp	sl, r7
   12fa0:	bne	12f7c <table_remove_column@@Base+0x140>
   12fa4:	ldmib	r5, {r0, r1}
   12fa8:	sub	r0, r0, #1
   12fac:	udiv	r2, r0, r1
   12fb0:	str	r0, [r5, #4]
   12fb4:	mls	r0, r2, r1, r0
   12fb8:	cmp	r0, #0
   12fbc:	bne	13028 <table_remove_column@@Base+0x1ec>
   12fc0:	ldr	r2, [r5, #12]
   12fc4:	ldr	r0, [r5]
   12fc8:	sub	r1, r2, r1
   12fcc:	str	r1, [r5, #12]
   12fd0:	add	r1, r1, r1, lsl #1
   12fd4:	lsl	r1, r1, #2
   12fd8:	bl	11eb4 <realloc@plt>
   12fdc:	str	r0, [r5]
   12fe0:	mov	r0, r5
   12fe4:	bl	13a44 <table_get_row_length@@Base>
   12fe8:	cmp	r0, #1
   12fec:	blt	13028 <table_remove_column@@Base+0x1ec>
   12ff0:	mov	r8, r0
   12ff4:	mov	r7, #0
   12ff8:	mov	r0, r5
   12ffc:	mov	r1, r7
   13000:	bl	139dc <table_get_row_ptr@@Base>
   13004:	ldr	r1, [r5, #12]
   13008:	mov	r6, r0
   1300c:	ldr	r0, [r0]
   13010:	lsl	r1, r1, #2
   13014:	bl	11eb4 <realloc@plt>
   13018:	add	r7, r7, #1
   1301c:	str	r0, [r6]
   13020:	cmp	r8, r7
   13024:	bne	12ff8 <table_remove_column@@Base+0x1bc>
   13028:	mov	r0, r5
   1302c:	mvn	r1, #0
   13030:	mov	r2, r4
   13034:	mov	r3, #16
   13038:	bl	12b5c <table_notify@@Base>
   1303c:	mov	r0, #0
   13040:	sub	sp, fp, #28
   13044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013048 <table_get_column_compare_function@@Base>:
   13048:	ldr	r0, [r0]
   1304c:	add	r1, r1, r1, lsl #1
   13050:	add	r0, r0, r1, lsl #2
   13054:	ldr	r0, [r0, #8]
   13058:	bx	lr

0001305c <table_set_column_compare_function@@Base>:
   1305c:	ldr	r0, [r0]
   13060:	add	r1, r1, r1, lsl #1
   13064:	add	r0, r0, r1, lsl #2
   13068:	str	r2, [r0, #8]
   1306c:	bx	lr

00013070 <table_compare_bool@@Base>:
   13070:	cmp	r0, #0
   13074:	beq	130a8 <table_compare_bool@@Base+0x38>
   13078:	cmp	r1, #0
   1307c:	moveq	r1, #1
   13080:	moveq	r0, r1
   13084:	bxeq	lr
   13088:	ldrb	r2, [r1]
   1308c:	ldrb	r0, [r0]
   13090:	mov	r1, #0
   13094:	cmp	r0, r2
   13098:	mvncc	r1, #0
   1309c:	movwhi	r1, #1
   130a0:	mov	r0, r1
   130a4:	bx	lr
   130a8:	cmp	r1, #0
   130ac:	mvnne	r1, #0
   130b0:	mov	r0, r1
   130b4:	bx	lr

000130b8 <table_compare_int@@Base>:
   130b8:	cmp	r0, #0
   130bc:	beq	130f0 <table_compare_int@@Base+0x38>
   130c0:	cmp	r1, #0
   130c4:	moveq	r1, #1
   130c8:	moveq	r0, r1
   130cc:	bxeq	lr
   130d0:	ldr	r2, [r1]
   130d4:	ldr	r0, [r0]
   130d8:	mov	r1, #0
   130dc:	cmp	r0, r2
   130e0:	mvnlt	r1, #0
   130e4:	movwgt	r1, #1
   130e8:	mov	r0, r1
   130ec:	bx	lr
   130f0:	cmp	r1, #0
   130f4:	mvnne	r1, #0
   130f8:	mov	r0, r1
   130fc:	bx	lr

00013100 <table_compare_uint@@Base>:
   13100:	cmp	r0, #0
   13104:	beq	13138 <table_compare_uint@@Base+0x38>
   13108:	cmp	r1, #0
   1310c:	moveq	r1, #1
   13110:	moveq	r0, r1
   13114:	bxeq	lr
   13118:	ldr	r2, [r1]
   1311c:	ldr	r0, [r0]
   13120:	mov	r1, #0
   13124:	cmp	r0, r2
   13128:	mvncc	r1, #0
   1312c:	movwhi	r1, #1
   13130:	mov	r0, r1
   13134:	bx	lr
   13138:	cmp	r1, #0
   1313c:	mvnne	r1, #0
   13140:	mov	r0, r1
   13144:	bx	lr

00013148 <table_compare_int8@@Base>:
   13148:	cmp	r0, #0
   1314c:	beq	13180 <table_compare_int8@@Base+0x38>
   13150:	cmp	r1, #0
   13154:	moveq	r1, #1
   13158:	moveq	r0, r1
   1315c:	bxeq	lr
   13160:	ldrsb	r2, [r1]
   13164:	ldrsb	r0, [r0]
   13168:	mov	r1, #0
   1316c:	cmp	r0, r2
   13170:	mvnlt	r1, #0
   13174:	movwgt	r1, #1
   13178:	mov	r0, r1
   1317c:	bx	lr
   13180:	cmp	r1, #0
   13184:	mvnne	r1, #0
   13188:	mov	r0, r1
   1318c:	bx	lr

00013190 <table_compare_uint8@@Base>:
   13190:	cmp	r0, #0
   13194:	beq	131c8 <table_compare_uint8@@Base+0x38>
   13198:	cmp	r1, #0
   1319c:	moveq	r1, #1
   131a0:	moveq	r0, r1
   131a4:	bxeq	lr
   131a8:	ldrb	r2, [r1]
   131ac:	ldrb	r0, [r0]
   131b0:	mov	r1, #0
   131b4:	cmp	r0, r2
   131b8:	mvncc	r1, #0
   131bc:	movwhi	r1, #1
   131c0:	mov	r0, r1
   131c4:	bx	lr
   131c8:	cmp	r1, #0
   131cc:	mvnne	r1, #0
   131d0:	mov	r0, r1
   131d4:	bx	lr

000131d8 <table_compare_int16@@Base>:
   131d8:	cmp	r0, #0
   131dc:	beq	13210 <table_compare_int16@@Base+0x38>
   131e0:	cmp	r1, #0
   131e4:	moveq	r1, #1
   131e8:	moveq	r0, r1
   131ec:	bxeq	lr
   131f0:	ldrsh	r2, [r1]
   131f4:	ldrsh	r0, [r0]
   131f8:	mov	r1, #0
   131fc:	cmp	r0, r2
   13200:	mvnlt	r1, #0
   13204:	movwgt	r1, #1
   13208:	mov	r0, r1
   1320c:	bx	lr
   13210:	cmp	r1, #0
   13214:	mvnne	r1, #0
   13218:	mov	r0, r1
   1321c:	bx	lr

00013220 <table_compare_uint16@@Base>:
   13220:	cmp	r0, #0
   13224:	beq	13258 <table_compare_uint16@@Base+0x38>
   13228:	cmp	r1, #0
   1322c:	moveq	r1, #1
   13230:	moveq	r0, r1
   13234:	bxeq	lr
   13238:	ldrh	r2, [r1]
   1323c:	ldrh	r0, [r0]
   13240:	mov	r1, #0
   13244:	cmp	r0, r2
   13248:	mvncc	r1, #0
   1324c:	movwhi	r1, #1
   13250:	mov	r0, r1
   13254:	bx	lr
   13258:	cmp	r1, #0
   1325c:	mvnne	r1, #0
   13260:	mov	r0, r1
   13264:	bx	lr

00013268 <table_compare_int32@@Base>:
   13268:	cmp	r0, #0
   1326c:	beq	132a0 <table_compare_int32@@Base+0x38>
   13270:	cmp	r1, #0
   13274:	moveq	r1, #1
   13278:	moveq	r0, r1
   1327c:	bxeq	lr
   13280:	ldr	r2, [r1]
   13284:	ldr	r0, [r0]
   13288:	mov	r1, #0
   1328c:	cmp	r0, r2
   13290:	mvnlt	r1, #0
   13294:	movwgt	r1, #1
   13298:	mov	r0, r1
   1329c:	bx	lr
   132a0:	cmp	r1, #0
   132a4:	mvnne	r1, #0
   132a8:	mov	r0, r1
   132ac:	bx	lr

000132b0 <table_compare_uint32@@Base>:
   132b0:	cmp	r0, #0
   132b4:	beq	132e8 <table_compare_uint32@@Base+0x38>
   132b8:	cmp	r1, #0
   132bc:	moveq	r1, #1
   132c0:	moveq	r0, r1
   132c4:	bxeq	lr
   132c8:	ldr	r2, [r1]
   132cc:	ldr	r0, [r0]
   132d0:	mov	r1, #0
   132d4:	cmp	r0, r2
   132d8:	mvncc	r1, #0
   132dc:	movwhi	r1, #1
   132e0:	mov	r0, r1
   132e4:	bx	lr
   132e8:	cmp	r1, #0
   132ec:	mvnne	r1, #0
   132f0:	mov	r0, r1
   132f4:	bx	lr

000132f8 <table_compare_int64@@Base>:
   132f8:	cmp	r0, #0
   132fc:	beq	13350 <table_compare_int64@@Base+0x58>
   13300:	cmp	r1, #0
   13304:	moveq	r1, #1
   13308:	moveq	r0, r1
   1330c:	bxeq	lr
   13310:	push	{r5, r7, fp, lr}
   13314:	add	fp, sp, #8
   13318:	ldm	r0, {r0, r5}
   1331c:	ldm	r1, {r2, r7}
   13320:	mov	r1, #0
   13324:	subs	r3, r0, r2
   13328:	sbcs	r3, r5, r7
   1332c:	movwlt	r1, #1
   13330:	cmp	r1, #0
   13334:	mvnne	r1, #0
   13338:	subs	r0, r2, r0
   1333c:	sbcs	r0, r7, r5
   13340:	movwlt	r1, #1
   13344:	pop	{r5, r7, fp, lr}
   13348:	mov	r0, r1
   1334c:	bx	lr
   13350:	cmp	r1, #0
   13354:	mvnne	r1, #0
   13358:	mov	r0, r1
   1335c:	bx	lr

00013360 <table_compare_uint64@@Base>:
   13360:	cmp	r0, #0
   13364:	beq	133b8 <table_compare_uint64@@Base+0x58>
   13368:	cmp	r1, #0
   1336c:	moveq	r1, #1
   13370:	moveq	r0, r1
   13374:	bxeq	lr
   13378:	push	{r5, r7, fp, lr}
   1337c:	add	fp, sp, #8
   13380:	ldm	r0, {r0, r5}
   13384:	ldm	r1, {r2, r7}
   13388:	mov	r1, #0
   1338c:	subs	r3, r0, r2
   13390:	sbcs	r3, r5, r7
   13394:	movwcc	r1, #1
   13398:	cmp	r1, #0
   1339c:	mvnne	r1, #0
   133a0:	subs	r0, r2, r0
   133a4:	sbcs	r0, r7, r5
   133a8:	movwcc	r1, #1
   133ac:	pop	{r5, r7, fp, lr}
   133b0:	mov	r0, r1
   133b4:	bx	lr
   133b8:	cmp	r1, #0
   133bc:	mvnne	r1, #0
   133c0:	mov	r0, r1
   133c4:	bx	lr

000133c8 <table_compare_short@@Base>:
   133c8:	cmp	r0, #0
   133cc:	beq	13400 <table_compare_short@@Base+0x38>
   133d0:	cmp	r1, #0
   133d4:	moveq	r1, #1
   133d8:	moveq	r0, r1
   133dc:	bxeq	lr
   133e0:	ldrsh	r2, [r1]
   133e4:	ldrsh	r0, [r0]
   133e8:	mov	r1, #0
   133ec:	cmp	r0, r2
   133f0:	mvnlt	r1, #0
   133f4:	movwgt	r1, #1
   133f8:	mov	r0, r1
   133fc:	bx	lr
   13400:	cmp	r1, #0
   13404:	mvnne	r1, #0
   13408:	mov	r0, r1
   1340c:	bx	lr

00013410 <table_compare_ushort@@Base>:
   13410:	cmp	r0, #0
   13414:	beq	13448 <table_compare_ushort@@Base+0x38>
   13418:	cmp	r1, #0
   1341c:	moveq	r1, #1
   13420:	moveq	r0, r1
   13424:	bxeq	lr
   13428:	ldrh	r2, [r1]
   1342c:	ldrh	r0, [r0]
   13430:	mov	r1, #0
   13434:	cmp	r0, r2
   13438:	mvncc	r1, #0
   1343c:	movwhi	r1, #1
   13440:	mov	r0, r1
   13444:	bx	lr
   13448:	cmp	r1, #0
   1344c:	mvnne	r1, #0
   13450:	mov	r0, r1
   13454:	bx	lr

00013458 <table_compare_long@@Base>:
   13458:	cmp	r0, #0
   1345c:	beq	13490 <table_compare_long@@Base+0x38>
   13460:	cmp	r1, #0
   13464:	moveq	r1, #1
   13468:	moveq	r0, r1
   1346c:	bxeq	lr
   13470:	ldr	r2, [r1]
   13474:	ldr	r0, [r0]
   13478:	mov	r1, #0
   1347c:	cmp	r0, r2
   13480:	mvnlt	r1, #0
   13484:	movwgt	r1, #1
   13488:	mov	r0, r1
   1348c:	bx	lr
   13490:	cmp	r1, #0
   13494:	mvnne	r1, #0
   13498:	mov	r0, r1
   1349c:	bx	lr

000134a0 <table_compare_ulong@@Base>:
   134a0:	cmp	r0, #0
   134a4:	beq	134d8 <table_compare_ulong@@Base+0x38>
   134a8:	cmp	r1, #0
   134ac:	moveq	r1, #1
   134b0:	moveq	r0, r1
   134b4:	bxeq	lr
   134b8:	ldr	r2, [r1]
   134bc:	ldr	r0, [r0]
   134c0:	mov	r1, #0
   134c4:	cmp	r0, r2
   134c8:	mvncc	r1, #0
   134cc:	movwhi	r1, #1
   134d0:	mov	r0, r1
   134d4:	bx	lr
   134d8:	cmp	r1, #0
   134dc:	mvnne	r1, #0
   134e0:	mov	r0, r1
   134e4:	bx	lr

000134e8 <table_compare_llong@@Base>:
   134e8:	cmp	r0, #0
   134ec:	beq	13540 <table_compare_llong@@Base+0x58>
   134f0:	cmp	r1, #0
   134f4:	moveq	r1, #1
   134f8:	moveq	r0, r1
   134fc:	bxeq	lr
   13500:	push	{r5, r7, fp, lr}
   13504:	add	fp, sp, #8
   13508:	ldm	r0, {r0, r5}
   1350c:	ldm	r1, {r2, r7}
   13510:	mov	r1, #0
   13514:	subs	r3, r0, r2
   13518:	sbcs	r3, r5, r7
   1351c:	movwlt	r1, #1
   13520:	cmp	r1, #0
   13524:	mvnne	r1, #0
   13528:	subs	r0, r2, r0
   1352c:	sbcs	r0, r7, r5
   13530:	movwlt	r1, #1
   13534:	pop	{r5, r7, fp, lr}
   13538:	mov	r0, r1
   1353c:	bx	lr
   13540:	cmp	r1, #0
   13544:	mvnne	r1, #0
   13548:	mov	r0, r1
   1354c:	bx	lr

00013550 <table_compare_ullong@@Base>:
   13550:	cmp	r0, #0
   13554:	beq	13588 <table_compare_ullong@@Base+0x38>
   13558:	cmp	r1, #0
   1355c:	moveq	r1, #1
   13560:	moveq	r0, r1
   13564:	bxeq	lr
   13568:	ldr	r2, [r1]
   1356c:	ldr	r0, [r0]
   13570:	mov	r1, #0
   13574:	cmp	r0, r2
   13578:	mvncc	r1, #0
   1357c:	movwhi	r1, #1
   13580:	mov	r0, r1
   13584:	bx	lr
   13588:	cmp	r1, #0
   1358c:	mvnne	r1, #0
   13590:	mov	r0, r1
   13594:	bx	lr

00013598 <table_compare_float@@Base>:
   13598:	cmp	r0, #0
   1359c:	beq	135d4 <table_compare_float@@Base+0x3c>
   135a0:	cmp	r1, #0
   135a4:	moveq	r1, #1
   135a8:	moveq	r0, r1
   135ac:	bxeq	lr
   135b0:	vldr	s0, [r1]
   135b4:	vldr	s2, [r0]
   135b8:	mov	r1, #0
   135bc:	vcmpe.f32	s2, s0
   135c0:	vmrs	APSR_nzcv, fpscr
   135c4:	mvnmi	r1, #0
   135c8:	movwgt	r1, #1
   135cc:	mov	r0, r1
   135d0:	bx	lr
   135d4:	cmp	r1, #0
   135d8:	mvnne	r1, #0
   135dc:	mov	r0, r1
   135e0:	bx	lr

000135e4 <table_compare_double@@Base>:
   135e4:	cmp	r0, #0
   135e8:	beq	13620 <table_compare_double@@Base+0x3c>
   135ec:	cmp	r1, #0
   135f0:	moveq	r1, #1
   135f4:	moveq	r0, r1
   135f8:	bxeq	lr
   135fc:	vldr	d16, [r1]
   13600:	vldr	d17, [r0]
   13604:	mov	r1, #0
   13608:	vcmpe.f64	d17, d16
   1360c:	vmrs	APSR_nzcv, fpscr
   13610:	mvnmi	r1, #0
   13614:	movwgt	r1, #1
   13618:	mov	r0, r1
   1361c:	bx	lr
   13620:	cmp	r1, #0
   13624:	mvnne	r1, #0
   13628:	mov	r0, r1
   1362c:	bx	lr

00013630 <table_compare_ldouble@@Base>:
   13630:	cmp	r0, #0
   13634:	beq	1366c <table_compare_ldouble@@Base+0x3c>
   13638:	cmp	r1, #0
   1363c:	moveq	r1, #1
   13640:	moveq	r0, r1
   13644:	bxeq	lr
   13648:	vldr	d16, [r1]
   1364c:	vldr	d17, [r0]
   13650:	mov	r1, #0
   13654:	vcmpe.f64	d17, d16
   13658:	vmrs	APSR_nzcv, fpscr
   1365c:	mvnmi	r1, #0
   13660:	movwgt	r1, #1
   13664:	mov	r0, r1
   13668:	bx	lr
   1366c:	cmp	r1, #0
   13670:	mvnne	r1, #0
   13674:	mov	r0, r1
   13678:	bx	lr

0001367c <table_compare_char@@Base>:
   1367c:	cmp	r0, #0
   13680:	beq	136b4 <table_compare_char@@Base+0x38>
   13684:	cmp	r1, #0
   13688:	moveq	r1, #1
   1368c:	moveq	r0, r1
   13690:	bxeq	lr
   13694:	ldrb	r2, [r1]
   13698:	ldrb	r0, [r0]
   1369c:	mov	r1, #0
   136a0:	cmp	r0, r2
   136a4:	mvncc	r1, #0
   136a8:	movwhi	r1, #1
   136ac:	mov	r0, r1
   136b0:	bx	lr
   136b4:	cmp	r1, #0
   136b8:	mvnne	r1, #0
   136bc:	mov	r0, r1
   136c0:	bx	lr

000136c4 <table_compare_uchar@@Base>:
   136c4:	cmp	r0, #0
   136c8:	beq	136fc <table_compare_uchar@@Base+0x38>
   136cc:	cmp	r1, #0
   136d0:	moveq	r1, #1
   136d4:	moveq	r0, r1
   136d8:	bxeq	lr
   136dc:	ldrb	r2, [r1]
   136e0:	ldrb	r0, [r0]
   136e4:	mov	r1, #0
   136e8:	cmp	r0, r2
   136ec:	mvncc	r1, #0
   136f0:	movwhi	r1, #1
   136f4:	mov	r0, r1
   136f8:	bx	lr
   136fc:	cmp	r1, #0
   13700:	mvnne	r1, #0
   13704:	mov	r0, r1
   13708:	bx	lr

0001370c <table_compare_string@@Base>:
   1370c:	cmp	r0, #0
   13710:	beq	13728 <table_compare_string@@Base+0x1c>
   13714:	cmp	r1, #0
   13718:	moveq	r1, #1
   1371c:	moveq	r0, r1
   13720:	bxeq	lr
   13724:	b	11e90 <strcmp@plt>
   13728:	cmp	r1, #0
   1372c:	mvnne	r1, #0
   13730:	mov	r0, r1
   13734:	bx	lr

00013738 <table_compare_ptr@@Base>:
   13738:	cmp	r0, r1
   1373c:	mov	r2, #0
   13740:	mvncc	r2, #0
   13744:	movwhi	r2, #1
   13748:	mov	r0, r2
   1374c:	bx	lr

00013750 <table_get_default_compare_function_for_data_type@@Base>:
   13750:	cmp	r0, #23
   13754:	movhi	r0, #0
   13758:	bxhi	lr
   1375c:	movw	r1, #22204	; 0x56bc
   13760:	movt	r1, #1
   13764:	ldr	r0, [r1, r0, lsl #2]
   13768:	bx	lr

0001376c <table_get@@Base>:
   1376c:	push	{fp, lr}
   13770:	mov	fp, sp
   13774:	bl	14bb8 <table_get_cell_ptr@@Base>
   13778:	ldr	r0, [r0]
   1377c:	pop	{fp, pc}

00013780 <table_get_bool@@Base>:
   13780:	push	{fp, lr}
   13784:	mov	fp, sp
   13788:	bl	14bb8 <table_get_cell_ptr@@Base>
   1378c:	ldr	r0, [r0]
   13790:	ldrb	r0, [r0]
   13794:	pop	{fp, pc}

00013798 <table_get_int@@Base>:
   13798:	push	{fp, lr}
   1379c:	mov	fp, sp
   137a0:	bl	14bb8 <table_get_cell_ptr@@Base>
   137a4:	ldr	r0, [r0]
   137a8:	ldr	r0, [r0]
   137ac:	pop	{fp, pc}

000137b0 <table_get_uint@@Base>:
   137b0:	push	{fp, lr}
   137b4:	mov	fp, sp
   137b8:	bl	14bb8 <table_get_cell_ptr@@Base>
   137bc:	ldr	r0, [r0]
   137c0:	ldr	r0, [r0]
   137c4:	pop	{fp, pc}

000137c8 <table_get_int8@@Base>:
   137c8:	push	{fp, lr}
   137cc:	mov	fp, sp
   137d0:	bl	14bb8 <table_get_cell_ptr@@Base>
   137d4:	ldr	r0, [r0]
   137d8:	ldrsb	r0, [r0]
   137dc:	pop	{fp, pc}

000137e0 <table_get_uint8@@Base>:
   137e0:	push	{fp, lr}
   137e4:	mov	fp, sp
   137e8:	bl	14bb8 <table_get_cell_ptr@@Base>
   137ec:	ldr	r0, [r0]
   137f0:	ldrb	r0, [r0]
   137f4:	pop	{fp, pc}

000137f8 <table_get_int16@@Base>:
   137f8:	push	{fp, lr}
   137fc:	mov	fp, sp
   13800:	bl	14bb8 <table_get_cell_ptr@@Base>
   13804:	ldr	r0, [r0]
   13808:	ldrsh	r0, [r0]
   1380c:	pop	{fp, pc}

00013810 <table_get_uint16@@Base>:
   13810:	push	{fp, lr}
   13814:	mov	fp, sp
   13818:	bl	14bb8 <table_get_cell_ptr@@Base>
   1381c:	ldr	r0, [r0]
   13820:	ldrh	r0, [r0]
   13824:	pop	{fp, pc}

00013828 <table_get_int32@@Base>:
   13828:	push	{fp, lr}
   1382c:	mov	fp, sp
   13830:	bl	14bb8 <table_get_cell_ptr@@Base>
   13834:	ldr	r0, [r0]
   13838:	ldr	r0, [r0]
   1383c:	pop	{fp, pc}

00013840 <table_get_uint32@@Base>:
   13840:	push	{fp, lr}
   13844:	mov	fp, sp
   13848:	bl	14bb8 <table_get_cell_ptr@@Base>
   1384c:	ldr	r0, [r0]
   13850:	ldr	r0, [r0]
   13854:	pop	{fp, pc}

00013858 <table_get_int64@@Base>:
   13858:	push	{fp, lr}
   1385c:	mov	fp, sp
   13860:	bl	14bb8 <table_get_cell_ptr@@Base>
   13864:	ldr	r0, [r0]
   13868:	ldrd	r0, [r0]
   1386c:	pop	{fp, pc}

00013870 <table_get_uint64@@Base>:
   13870:	push	{fp, lr}
   13874:	mov	fp, sp
   13878:	bl	14bb8 <table_get_cell_ptr@@Base>
   1387c:	ldr	r0, [r0]
   13880:	ldrd	r0, [r0]
   13884:	pop	{fp, pc}

00013888 <table_get_short@@Base>:
   13888:	push	{fp, lr}
   1388c:	mov	fp, sp
   13890:	bl	14bb8 <table_get_cell_ptr@@Base>
   13894:	ldr	r0, [r0]
   13898:	ldrsh	r0, [r0]
   1389c:	pop	{fp, pc}

000138a0 <table_get_ushort@@Base>:
   138a0:	push	{fp, lr}
   138a4:	mov	fp, sp
   138a8:	bl	14bb8 <table_get_cell_ptr@@Base>
   138ac:	ldr	r0, [r0]
   138b0:	ldrh	r0, [r0]
   138b4:	pop	{fp, pc}

000138b8 <table_get_long@@Base>:
   138b8:	push	{fp, lr}
   138bc:	mov	fp, sp
   138c0:	bl	14bb8 <table_get_cell_ptr@@Base>
   138c4:	ldr	r0, [r0]
   138c8:	ldr	r0, [r0]
   138cc:	pop	{fp, pc}

000138d0 <table_get_ulong@@Base>:
   138d0:	push	{fp, lr}
   138d4:	mov	fp, sp
   138d8:	bl	14bb8 <table_get_cell_ptr@@Base>
   138dc:	ldr	r0, [r0]
   138e0:	ldr	r0, [r0]
   138e4:	pop	{fp, pc}

000138e8 <table_get_llong@@Base>:
   138e8:	push	{fp, lr}
   138ec:	mov	fp, sp
   138f0:	bl	14bb8 <table_get_cell_ptr@@Base>
   138f4:	ldr	r0, [r0]
   138f8:	ldrd	r0, [r0]
   138fc:	pop	{fp, pc}

00013900 <table_get_ullong@@Base>:
   13900:	push	{fp, lr}
   13904:	mov	fp, sp
   13908:	bl	14bb8 <table_get_cell_ptr@@Base>
   1390c:	ldr	r0, [r0]
   13910:	ldrd	r0, [r0]
   13914:	pop	{fp, pc}

00013918 <table_get_float@@Base>:
   13918:	push	{fp, lr}
   1391c:	mov	fp, sp
   13920:	bl	14bb8 <table_get_cell_ptr@@Base>
   13924:	ldr	r0, [r0]
   13928:	vldr	s0, [r0]
   1392c:	pop	{fp, pc}

00013930 <table_get_double@@Base>:
   13930:	push	{fp, lr}
   13934:	mov	fp, sp
   13938:	bl	14bb8 <table_get_cell_ptr@@Base>
   1393c:	ldr	r0, [r0]
   13940:	vldr	d0, [r0]
   13944:	pop	{fp, pc}

00013948 <table_get_ldouble@@Base>:
   13948:	push	{fp, lr}
   1394c:	mov	fp, sp
   13950:	bl	14bb8 <table_get_cell_ptr@@Base>
   13954:	ldr	r0, [r0]
   13958:	vldr	d0, [r0]
   1395c:	pop	{fp, pc}

00013960 <table_get_char@@Base>:
   13960:	push	{fp, lr}
   13964:	mov	fp, sp
   13968:	bl	14bb8 <table_get_cell_ptr@@Base>
   1396c:	ldr	r0, [r0]
   13970:	ldrb	r0, [r0]
   13974:	pop	{fp, pc}

00013978 <table_get_uchar@@Base>:
   13978:	push	{fp, lr}
   1397c:	mov	fp, sp
   13980:	bl	14bb8 <table_get_cell_ptr@@Base>
   13984:	ldr	r0, [r0]
   13988:	ldrb	r0, [r0]
   1398c:	pop	{fp, pc}

00013990 <table_get_string@@Base>:
   13990:	push	{fp, lr}
   13994:	mov	fp, sp
   13998:	bl	14bb8 <table_get_cell_ptr@@Base>
   1399c:	ldr	r0, [r0]
   139a0:	pop	{fp, pc}

000139a4 <table_get_ptr@@Base>:
   139a4:	push	{fp, lr}
   139a8:	mov	fp, sp
   139ac:	bl	14bb8 <table_get_cell_ptr@@Base>
   139b0:	ldr	r0, [r0]
   139b4:	pop	{fp, pc}

000139b8 <table_row_init@@Base>:
   139b8:	push	{r4, r5, fp, lr}
   139bc:	add	fp, sp, #8
   139c0:	mov	r4, r1
   139c4:	ldr	r1, [r0, #12]
   139c8:	ldr	r5, [r0, #16]
   139cc:	lsl	r0, r1, #2
   139d0:	bl	11ecc <malloc@plt>
   139d4:	str	r0, [r5, r4, lsl #2]
   139d8:	pop	{r4, r5, fp, pc}

000139dc <table_get_row_ptr@@Base>:
   139dc:	ldr	r0, [r0, #16]
   139e0:	add	r0, r0, r1, lsl #2
   139e4:	bx	lr

000139e8 <table_row_destroy@@Base>:
   139e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   139ec:	add	fp, sp, #24
   139f0:	mov	r4, r1
   139f4:	mov	r5, r0
   139f8:	bl	12c6c <table_get_column_length@@Base>
   139fc:	ldr	r8, [r5, #16]
   13a00:	cmp	r0, #1
   13a04:	blt	13a2c <table_row_destroy@@Base+0x44>
   13a08:	mov	r6, r0
   13a0c:	mov	r7, #0
   13a10:	mov	r0, r5
   13a14:	mov	r1, r4
   13a18:	mov	r2, r7
   13a1c:	bl	14bd4 <table_cell_destroy@@Base>
   13a20:	add	r7, r7, #1
   13a24:	cmp	r6, r7
   13a28:	bne	13a10 <table_row_destroy@@Base+0x28>
   13a2c:	ldr	r0, [r8, r4, lsl #2]
   13a30:	cmp	r0, #0
   13a34:	beq	13a40 <table_row_destroy@@Base+0x58>
   13a38:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a3c:	b	11ea8 <free@plt>
   13a40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013a44 <table_get_row_length@@Base>:
   13a44:	ldr	r0, [r0, #20]
   13a48:	bx	lr

00013a4c <table_add_row@@Base>:
   13a4c:	push	{r4, r5, r6, r7, fp, lr}
   13a50:	add	fp, sp, #16
   13a54:	ldr	r5, [r0, #20]
   13a58:	ldr	r1, [r0, #24]
   13a5c:	mov	r4, r0
   13a60:	udiv	r0, r5, r1
   13a64:	mls	r0, r0, r1, r5
   13a68:	cmp	r0, #0
   13a6c:	bne	13a90 <table_add_row@@Base+0x44>
   13a70:	ldr	r2, [r4, #28]
   13a74:	ldr	r0, [r4, #16]
   13a78:	add	r1, r2, r1
   13a7c:	str	r1, [r4, #28]
   13a80:	lsl	r1, r1, #2
   13a84:	bl	11eb4 <realloc@plt>
   13a88:	str	r0, [r4, #16]
   13a8c:	ldr	r5, [r4, #20]
   13a90:	mov	r0, r4
   13a94:	bl	12c6c <table_get_column_length@@Base>
   13a98:	mov	r6, r0
   13a9c:	ldr	r0, [r4, #12]
   13aa0:	ldr	r7, [r4, #16]
   13aa4:	lsl	r0, r0, #2
   13aa8:	bl	11ecc <malloc@plt>
   13aac:	cmp	r6, #1
   13ab0:	str	r0, [r7, r5, lsl #2]
   13ab4:	blt	13ad8 <table_add_row@@Base+0x8c>
   13ab8:	mov	r7, #0
   13abc:	mov	r0, r4
   13ac0:	mov	r1, r5
   13ac4:	mov	r2, r7
   13ac8:	bl	14b98 <table_cell_init@@Base>
   13acc:	add	r7, r7, #1
   13ad0:	cmp	r6, r7
   13ad4:	bne	13abc <table_add_row@@Base+0x70>
   13ad8:	ldr	r1, [r4, #20]
   13adc:	mov	r0, r4
   13ae0:	mvn	r2, #0
   13ae4:	mov	r3, #2
   13ae8:	bl	12b5c <table_notify@@Base>
   13aec:	ldr	r0, [r4, #20]
   13af0:	add	r1, r0, #1
   13af4:	str	r1, [r4, #20]
   13af8:	pop	{r4, r5, r6, r7, fp, pc}

00013afc <table_remove_row@@Base>:
   13afc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b00:	add	fp, sp, #24
   13b04:	ldr	r8, [r0, #20]
   13b08:	mov	r4, r1
   13b0c:	mov	r5, r0
   13b10:	bl	12c6c <table_get_column_length@@Base>
   13b14:	cmp	r0, #1
   13b18:	blt	13b6c <table_remove_row@@Base+0x70>
   13b1c:	mov	r6, r0
   13b20:	mov	r7, #0
   13b24:	b	13b34 <table_remove_row@@Base+0x38>
   13b28:	add	r7, r7, #1
   13b2c:	cmp	r6, r7
   13b30:	beq	13b6c <table_remove_row@@Base+0x70>
   13b34:	mov	r0, r5
   13b38:	mov	r1, r7
   13b3c:	bl	12cf0 <table_get_column_data_type@@Base>
   13b40:	cmp	r0, #23
   13b44:	beq	13b28 <table_remove_row@@Base+0x2c>
   13b48:	mov	r0, r5
   13b4c:	mov	r1, r4
   13b50:	mov	r2, r7
   13b54:	bl	14bb8 <table_get_cell_ptr@@Base>
   13b58:	ldr	r0, [r0]
   13b5c:	cmp	r0, #0
   13b60:	beq	13b28 <table_remove_row@@Base+0x2c>
   13b64:	bl	11ea8 <free@plt>
   13b68:	b	13b28 <table_remove_row@@Base+0x2c>
   13b6c:	ldr	r0, [r5, #16]
   13b70:	ldr	r0, [r0, r4, lsl #2]
   13b74:	cmp	r0, #0
   13b78:	beq	13b80 <table_remove_row@@Base+0x84>
   13b7c:	bl	11ea8 <free@plt>
   13b80:	sub	r0, r8, #1
   13b84:	cmp	r0, r4
   13b88:	ble	13bf8 <table_remove_row@@Base+0xfc>
   13b8c:	mvn	r0, r4
   13b90:	add	r1, r8, r0
   13b94:	sub	r0, r8, #2
   13b98:	tst	r1, #1
   13b9c:	mov	r1, r4
   13ba0:	beq	13bb8 <table_remove_row@@Base+0xbc>
   13ba4:	ldr	r1, [r5, #16]
   13ba8:	add	r2, r1, r4, lsl #2
   13bac:	ldr	r2, [r2, #4]
   13bb0:	str	r2, [r1, r4, lsl #2]
   13bb4:	add	r1, r4, #1
   13bb8:	cmp	r0, r4
   13bbc:	beq	13bf8 <table_remove_row@@Base+0xfc>
   13bc0:	mvn	r0, r1
   13bc4:	lsl	r1, r1, #2
   13bc8:	add	r0, r0, r8
   13bcc:	ldr	r2, [r5, #16]
   13bd0:	subs	r0, r0, #2
   13bd4:	add	r3, r2, r1
   13bd8:	ldr	r3, [r3, #4]
   13bdc:	str	r3, [r2, r1]
   13be0:	ldr	r2, [r5, #16]
   13be4:	add	r2, r2, r1
   13be8:	add	r1, r1, #8
   13bec:	ldr	r3, [r2, #8]
   13bf0:	str	r3, [r2, #4]
   13bf4:	bne	13bcc <table_remove_row@@Base+0xd0>
   13bf8:	ldr	r0, [r5, #20]
   13bfc:	ldr	r1, [r5, #24]
   13c00:	sub	r0, r0, #1
   13c04:	udiv	r2, r0, r1
   13c08:	str	r0, [r5, #20]
   13c0c:	mls	r0, r2, r1, r0
   13c10:	cmp	r0, #0
   13c14:	bne	13c34 <table_remove_row@@Base+0x138>
   13c18:	ldr	r2, [r5, #28]
   13c1c:	ldr	r0, [r5, #16]
   13c20:	sub	r1, r2, r1
   13c24:	str	r1, [r5, #28]
   13c28:	lsl	r1, r1, #2
   13c2c:	bl	11eb4 <realloc@plt>
   13c30:	str	r0, [r5, #16]
   13c34:	mov	r0, r5
   13c38:	mov	r1, r4
   13c3c:	mvn	r2, #0
   13c40:	mov	r3, #4
   13c44:	bl	12b5c <table_notify@@Base>
   13c48:	mov	r0, #0
   13c4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013c50 <table_set_row_ptr@@Base>:
   13c50:	ldr	r2, [r2]
   13c54:	ldr	r0, [r0, #16]
   13c58:	str	r2, [r0, r1, lsl #2]
   13c5c:	bx	lr

00013c60 <table_set@@Base>:
   13c60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13c64:	add	fp, sp, #24
   13c68:	mov	r8, r3
   13c6c:	mov	r4, r2
   13c70:	mov	r9, r1
   13c74:	mov	r6, r0
   13c78:	bl	14bb8 <table_get_cell_ptr@@Base>
   13c7c:	mov	r5, r0
   13c80:	mov	r0, r6
   13c84:	mov	r1, r4
   13c88:	bl	12c44 <table_get_col_ptr@@Base>
   13c8c:	ldr	r1, [fp, #8]
   13c90:	mvn	r7, #0
   13c94:	cmp	r1, #23
   13c98:	bhi	13f5c <table_set@@Base+0x2fc>
   13c9c:	add	r2, pc, #0
   13ca0:	ldr	pc, [r2, r1, lsl #2]
   13ca4:	andeq	r3, r1, r4, lsl #26
   13ca8:	andeq	r3, r1, r4, lsl sp
   13cac:	andeq	r3, r1, r4, lsr #26
   13cb0:	andeq	r3, r1, r4, lsr sp
   13cb4:	andeq	r3, r1, r4, asr #26
   13cb8:	andeq	r3, r1, r4, asr sp
   13cbc:	andeq	r3, r1, r4, ror #26
   13cc0:	andeq	r3, r1, r4, ror sp
   13cc4:	andeq	r3, r1, r4, lsl #27
   13cc8:	muleq	r1, r4, sp
   13ccc:	andeq	r3, r1, r4, lsr #27
   13cd0:			; <UNDEFINED> instruction: 0x00013db4
   13cd4:	andeq	r3, r1, ip, ror #27
   13cd8:	strdeq	r3, [r1], -ip
   13cdc:	andeq	r3, r1, ip, lsl #28
   13ce0:	andeq	r3, r1, ip, lsl lr
   13ce4:	andeq	r3, r1, ip, lsr #28
   13ce8:	andeq	r3, r1, r4, ror #28
   13cec:	andeq	r3, r1, r4, ror lr
   13cf0:			; <UNDEFINED> instruction: 0x00013eb4
   13cf4:	andeq	r3, r1, r4, asr #29
   13cf8:	ldrdeq	r3, [r1], -r4
   13cfc:	andeq	r3, r1, r0, lsl pc
   13d00:	andeq	r3, r1, r4, ror #30
   13d04:	ldr	r0, [r0, #4]
   13d08:	cmp	r0, #0
   13d0c:	bne	13f5c <table_set@@Base+0x2fc>
   13d10:	b	13e38 <table_set@@Base+0x1d8>
   13d14:	ldr	r0, [r0, #4]
   13d18:	cmp	r0, #1
   13d1c:	beq	13e38 <table_set@@Base+0x1d8>
   13d20:	b	13f5c <table_set@@Base+0x2fc>
   13d24:	ldr	r0, [r0, #4]
   13d28:	cmp	r0, #2
   13d2c:	beq	13f1c <table_set@@Base+0x2bc>
   13d30:	b	13f5c <table_set@@Base+0x2fc>
   13d34:	ldr	r0, [r0, #4]
   13d38:	cmp	r0, #3
   13d3c:	beq	13f1c <table_set@@Base+0x2bc>
   13d40:	b	13f5c <table_set@@Base+0x2fc>
   13d44:	ldr	r0, [r0, #4]
   13d48:	cmp	r0, #4
   13d4c:	beq	13dc0 <table_set@@Base+0x160>
   13d50:	b	13f5c <table_set@@Base+0x2fc>
   13d54:	ldr	r0, [r0, #4]
   13d58:	cmp	r0, #5
   13d5c:	beq	13dc0 <table_set@@Base+0x160>
   13d60:	b	13f5c <table_set@@Base+0x2fc>
   13d64:	ldr	r0, [r0, #4]
   13d68:	cmp	r0, #6
   13d6c:	beq	13e38 <table_set@@Base+0x1d8>
   13d70:	b	13f5c <table_set@@Base+0x2fc>
   13d74:	ldr	r0, [r0, #4]
   13d78:	cmp	r0, #7
   13d7c:	beq	13e38 <table_set@@Base+0x1d8>
   13d80:	b	13f5c <table_set@@Base+0x2fc>
   13d84:	ldr	r0, [r0, #4]
   13d88:	cmp	r0, #8
   13d8c:	beq	13e80 <table_set@@Base+0x220>
   13d90:	b	13f5c <table_set@@Base+0x2fc>
   13d94:	ldr	r0, [r0, #4]
   13d98:	cmp	r0, #9
   13d9c:	beq	13e80 <table_set@@Base+0x220>
   13da0:	b	13f5c <table_set@@Base+0x2fc>
   13da4:	ldr	r0, [r0, #4]
   13da8:	cmp	r0, #10
   13dac:	beq	13dc0 <table_set@@Base+0x160>
   13db0:	b	13f5c <table_set@@Base+0x2fc>
   13db4:	ldr	r0, [r0, #4]
   13db8:	cmp	r0, #11
   13dbc:	bne	13f5c <table_set@@Base+0x2fc>
   13dc0:	ldr	r0, [r5]
   13dc4:	cmp	r0, #0
   13dc8:	bne	13de0 <table_set@@Base+0x180>
   13dcc:	mov	r0, #2
   13dd0:	bl	11ecc <malloc@plt>
   13dd4:	cmp	r0, #0
   13dd8:	str	r0, [r5]
   13ddc:	beq	13f5c <table_set@@Base+0x2fc>
   13de0:	ldrh	r1, [r8]
   13de4:	strh	r1, [r0]
   13de8:	b	13f44 <table_set@@Base+0x2e4>
   13dec:	ldr	r0, [r0, #4]
   13df0:	cmp	r0, #12
   13df4:	beq	13e38 <table_set@@Base+0x1d8>
   13df8:	b	13f5c <table_set@@Base+0x2fc>
   13dfc:	ldr	r0, [r0, #4]
   13e00:	cmp	r0, #13
   13e04:	beq	13e38 <table_set@@Base+0x1d8>
   13e08:	b	13f5c <table_set@@Base+0x2fc>
   13e0c:	ldr	r0, [r0, #4]
   13e10:	cmp	r0, #14
   13e14:	beq	13e80 <table_set@@Base+0x220>
   13e18:	b	13f5c <table_set@@Base+0x2fc>
   13e1c:	ldr	r0, [r0, #4]
   13e20:	cmp	r0, #15
   13e24:	beq	13e80 <table_set@@Base+0x220>
   13e28:	b	13f5c <table_set@@Base+0x2fc>
   13e2c:	ldr	r0, [r0, #4]
   13e30:	cmp	r0, #16
   13e34:	bne	13f5c <table_set@@Base+0x2fc>
   13e38:	ldr	r0, [r5]
   13e3c:	cmp	r0, #0
   13e40:	bne	13e58 <table_set@@Base+0x1f8>
   13e44:	mov	r0, #4
   13e48:	bl	11ecc <malloc@plt>
   13e4c:	cmp	r0, #0
   13e50:	str	r0, [r5]
   13e54:	beq	13f5c <table_set@@Base+0x2fc>
   13e58:	ldr	r1, [r8]
   13e5c:	str	r1, [r0]
   13e60:	b	13f44 <table_set@@Base+0x2e4>
   13e64:	ldr	r0, [r0, #4]
   13e68:	cmp	r0, #17
   13e6c:	beq	13e80 <table_set@@Base+0x220>
   13e70:	b	13f5c <table_set@@Base+0x2fc>
   13e74:	ldr	r0, [r0, #4]
   13e78:	cmp	r0, #18
   13e7c:	bne	13f5c <table_set@@Base+0x2fc>
   13e80:	ldr	r0, [r5]
   13e84:	cmp	r0, #0
   13e88:	bne	13ea0 <table_set@@Base+0x240>
   13e8c:	mov	r0, #8
   13e90:	bl	11ecc <malloc@plt>
   13e94:	cmp	r0, #0
   13e98:	str	r0, [r5]
   13e9c:	beq	13f5c <table_set@@Base+0x2fc>
   13ea0:	ldr	r1, [r8]
   13ea4:	ldr	r2, [r8, #4]
   13ea8:	str	r2, [r0, #4]
   13eac:	str	r1, [r0]
   13eb0:	b	13f44 <table_set@@Base+0x2e4>
   13eb4:	ldr	r0, [r0, #4]
   13eb8:	cmp	r0, #19
   13ebc:	beq	13f1c <table_set@@Base+0x2bc>
   13ec0:	b	13f5c <table_set@@Base+0x2fc>
   13ec4:	ldr	r0, [r0, #4]
   13ec8:	cmp	r0, #20
   13ecc:	beq	13f1c <table_set@@Base+0x2bc>
   13ed0:	b	13f5c <table_set@@Base+0x2fc>
   13ed4:	ldr	r0, [r0, #4]
   13ed8:	cmp	r0, #21
   13edc:	bne	13f5c <table_set@@Base+0x2fc>
   13ee0:	mov	r0, r8
   13ee4:	bl	11ef0 <strlen@plt>
   13ee8:	ldr	r2, [r5]
   13eec:	add	r1, r0, #1
   13ef0:	mov	r0, r2
   13ef4:	bl	11eb4 <realloc@plt>
   13ef8:	cmp	r0, #0
   13efc:	str	r0, [r5]
   13f00:	beq	13f5c <table_set@@Base+0x2fc>
   13f04:	mov	r1, r8
   13f08:	bl	11ec0 <strcpy@plt>
   13f0c:	b	13f44 <table_set@@Base+0x2e4>
   13f10:	ldr	r0, [r0, #4]
   13f14:	cmp	r0, #22
   13f18:	bne	13f5c <table_set@@Base+0x2fc>
   13f1c:	ldr	r0, [r5]
   13f20:	cmp	r0, #0
   13f24:	bne	13f3c <table_set@@Base+0x2dc>
   13f28:	mov	r0, #1
   13f2c:	bl	11ecc <malloc@plt>
   13f30:	cmp	r0, #0
   13f34:	str	r0, [r5]
   13f38:	beq	13f5c <table_set@@Base+0x2fc>
   13f3c:	ldrb	r1, [r8]
   13f40:	strb	r1, [r0]
   13f44:	mov	r0, r6
   13f48:	mov	r1, r9
   13f4c:	mov	r2, r4
   13f50:	mov	r3, #1
   13f54:	bl	12b5c <table_notify@@Base>
   13f58:	mov	r7, #0
   13f5c:	mov	r0, r7
   13f60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13f64:	ldr	r0, [r0, #4]
   13f68:	cmp	r0, #23
   13f6c:	bne	13f5c <table_set@@Base+0x2fc>
   13f70:	str	r8, [r5]
   13f74:	b	13f44 <table_set@@Base+0x2e4>

00013f78 <table_set_bool@@Base>:
   13f78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f7c:	add	fp, sp, #24
   13f80:	mov	r8, r3
   13f84:	mov	r4, r2
   13f88:	mov	r9, r1
   13f8c:	mov	r6, r0
   13f90:	bl	14bb8 <table_get_cell_ptr@@Base>
   13f94:	mov	r5, r0
   13f98:	mov	r0, r6
   13f9c:	mov	r1, r4
   13fa0:	bl	12c44 <table_get_col_ptr@@Base>
   13fa4:	ldr	r0, [r0, #4]
   13fa8:	mvn	r7, #0
   13fac:	cmp	r0, #22
   13fb0:	bne	13ff0 <table_set_bool@@Base+0x78>
   13fb4:	ldr	r0, [r5]
   13fb8:	cmp	r0, #0
   13fbc:	bne	13fd4 <table_set_bool@@Base+0x5c>
   13fc0:	mov	r0, #1
   13fc4:	bl	11ecc <malloc@plt>
   13fc8:	cmp	r0, #0
   13fcc:	str	r0, [r5]
   13fd0:	beq	13ff0 <table_set_bool@@Base+0x78>
   13fd4:	strb	r8, [r0]
   13fd8:	mov	r0, r6
   13fdc:	mov	r1, r9
   13fe0:	mov	r2, r4
   13fe4:	mov	r3, #1
   13fe8:	bl	12b5c <table_notify@@Base>
   13fec:	mov	r7, #0
   13ff0:	mov	r0, r7
   13ff4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ff8 <table_set_int@@Base>:
   13ff8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ffc:	add	fp, sp, #24
   14000:	mov	r8, r3
   14004:	mov	r4, r2
   14008:	mov	r5, r1
   1400c:	mov	r6, r0
   14010:	bl	14bb8 <table_get_cell_ptr@@Base>
   14014:	mov	r9, r0
   14018:	mov	r0, r6
   1401c:	mov	r1, r4
   14020:	bl	12c44 <table_get_col_ptr@@Base>
   14024:	ldr	r0, [r0, #4]
   14028:	mvn	r7, #0
   1402c:	cmp	r0, #0
   14030:	bne	14070 <table_set_int@@Base+0x78>
   14034:	ldr	r0, [r9]
   14038:	cmp	r0, #0
   1403c:	bne	14054 <table_set_int@@Base+0x5c>
   14040:	mov	r0, #4
   14044:	bl	11ecc <malloc@plt>
   14048:	cmp	r0, #0
   1404c:	str	r0, [r9]
   14050:	beq	14070 <table_set_int@@Base+0x78>
   14054:	str	r8, [r0]
   14058:	mov	r0, r6
   1405c:	mov	r1, r5
   14060:	mov	r2, r4
   14064:	mov	r3, #1
   14068:	bl	12b5c <table_notify@@Base>
   1406c:	mov	r7, #0
   14070:	mov	r0, r7
   14074:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014078 <table_set_uint@@Base>:
   14078:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1407c:	add	fp, sp, #24
   14080:	mov	r8, r3
   14084:	mov	r4, r2
   14088:	mov	r5, r1
   1408c:	mov	r6, r0
   14090:	bl	14bb8 <table_get_cell_ptr@@Base>
   14094:	mov	r9, r0
   14098:	mov	r0, r6
   1409c:	mov	r1, r4
   140a0:	bl	12c44 <table_get_col_ptr@@Base>
   140a4:	ldr	r0, [r0, #4]
   140a8:	mvn	r7, #0
   140ac:	cmp	r0, #1
   140b0:	bne	140f0 <table_set_uint@@Base+0x78>
   140b4:	ldr	r0, [r9]
   140b8:	cmp	r0, #0
   140bc:	bne	140d4 <table_set_uint@@Base+0x5c>
   140c0:	mov	r0, #4
   140c4:	bl	11ecc <malloc@plt>
   140c8:	cmp	r0, #0
   140cc:	str	r0, [r9]
   140d0:	beq	140f0 <table_set_uint@@Base+0x78>
   140d4:	str	r8, [r0]
   140d8:	mov	r0, r6
   140dc:	mov	r1, r5
   140e0:	mov	r2, r4
   140e4:	mov	r3, #1
   140e8:	bl	12b5c <table_notify@@Base>
   140ec:	mov	r7, #0
   140f0:	mov	r0, r7
   140f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140f8 <table_set_int8@@Base>:
   140f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140fc:	add	fp, sp, #24
   14100:	mov	r8, r3
   14104:	mov	r4, r2
   14108:	mov	r9, r1
   1410c:	mov	r6, r0
   14110:	bl	14bb8 <table_get_cell_ptr@@Base>
   14114:	mov	r5, r0
   14118:	mov	r0, r6
   1411c:	mov	r1, r4
   14120:	bl	12c44 <table_get_col_ptr@@Base>
   14124:	ldr	r0, [r0, #4]
   14128:	mvn	r7, #0
   1412c:	cmp	r0, #2
   14130:	bne	14170 <table_set_int8@@Base+0x78>
   14134:	ldr	r0, [r5]
   14138:	cmp	r0, #0
   1413c:	bne	14154 <table_set_int8@@Base+0x5c>
   14140:	mov	r0, #1
   14144:	bl	11ecc <malloc@plt>
   14148:	cmp	r0, #0
   1414c:	str	r0, [r5]
   14150:	beq	14170 <table_set_int8@@Base+0x78>
   14154:	strb	r8, [r0]
   14158:	mov	r0, r6
   1415c:	mov	r1, r9
   14160:	mov	r2, r4
   14164:	mov	r3, #1
   14168:	bl	12b5c <table_notify@@Base>
   1416c:	mov	r7, #0
   14170:	mov	r0, r7
   14174:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014178 <table_set_uint8@@Base>:
   14178:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1417c:	add	fp, sp, #24
   14180:	mov	r8, r3
   14184:	mov	r4, r2
   14188:	mov	r9, r1
   1418c:	mov	r6, r0
   14190:	bl	14bb8 <table_get_cell_ptr@@Base>
   14194:	mov	r5, r0
   14198:	mov	r0, r6
   1419c:	mov	r1, r4
   141a0:	bl	12c44 <table_get_col_ptr@@Base>
   141a4:	ldr	r0, [r0, #4]
   141a8:	mvn	r7, #0
   141ac:	cmp	r0, #3
   141b0:	bne	141f0 <table_set_uint8@@Base+0x78>
   141b4:	ldr	r0, [r5]
   141b8:	cmp	r0, #0
   141bc:	bne	141d4 <table_set_uint8@@Base+0x5c>
   141c0:	mov	r0, #1
   141c4:	bl	11ecc <malloc@plt>
   141c8:	cmp	r0, #0
   141cc:	str	r0, [r5]
   141d0:	beq	141f0 <table_set_uint8@@Base+0x78>
   141d4:	strb	r8, [r0]
   141d8:	mov	r0, r6
   141dc:	mov	r1, r9
   141e0:	mov	r2, r4
   141e4:	mov	r3, #1
   141e8:	bl	12b5c <table_notify@@Base>
   141ec:	mov	r7, #0
   141f0:	mov	r0, r7
   141f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141f8 <table_set_int16@@Base>:
   141f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141fc:	add	fp, sp, #24
   14200:	mov	r8, r3
   14204:	mov	r4, r2
   14208:	mov	r9, r1
   1420c:	mov	r6, r0
   14210:	bl	14bb8 <table_get_cell_ptr@@Base>
   14214:	mov	r5, r0
   14218:	mov	r0, r6
   1421c:	mov	r1, r4
   14220:	bl	12c44 <table_get_col_ptr@@Base>
   14224:	ldr	r0, [r0, #4]
   14228:	mvn	r7, #0
   1422c:	cmp	r0, #4
   14230:	bne	14270 <table_set_int16@@Base+0x78>
   14234:	ldr	r0, [r5]
   14238:	cmp	r0, #0
   1423c:	bne	14254 <table_set_int16@@Base+0x5c>
   14240:	mov	r0, #2
   14244:	bl	11ecc <malloc@plt>
   14248:	cmp	r0, #0
   1424c:	str	r0, [r5]
   14250:	beq	14270 <table_set_int16@@Base+0x78>
   14254:	strh	r8, [r0]
   14258:	mov	r0, r6
   1425c:	mov	r1, r9
   14260:	mov	r2, r4
   14264:	mov	r3, #1
   14268:	bl	12b5c <table_notify@@Base>
   1426c:	mov	r7, #0
   14270:	mov	r0, r7
   14274:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014278 <table_set_uint16@@Base>:
   14278:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1427c:	add	fp, sp, #24
   14280:	mov	r8, r3
   14284:	mov	r4, r2
   14288:	mov	r9, r1
   1428c:	mov	r6, r0
   14290:	bl	14bb8 <table_get_cell_ptr@@Base>
   14294:	mov	r5, r0
   14298:	mov	r0, r6
   1429c:	mov	r1, r4
   142a0:	bl	12c44 <table_get_col_ptr@@Base>
   142a4:	ldr	r0, [r0, #4]
   142a8:	mvn	r7, #0
   142ac:	cmp	r0, #5
   142b0:	bne	142f0 <table_set_uint16@@Base+0x78>
   142b4:	ldr	r0, [r5]
   142b8:	cmp	r0, #0
   142bc:	bne	142d4 <table_set_uint16@@Base+0x5c>
   142c0:	mov	r0, #2
   142c4:	bl	11ecc <malloc@plt>
   142c8:	cmp	r0, #0
   142cc:	str	r0, [r5]
   142d0:	beq	142f0 <table_set_uint16@@Base+0x78>
   142d4:	strh	r8, [r0]
   142d8:	mov	r0, r6
   142dc:	mov	r1, r9
   142e0:	mov	r2, r4
   142e4:	mov	r3, #1
   142e8:	bl	12b5c <table_notify@@Base>
   142ec:	mov	r7, #0
   142f0:	mov	r0, r7
   142f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000142f8 <table_set_int32@@Base>:
   142f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   142fc:	add	fp, sp, #24
   14300:	mov	r8, r3
   14304:	mov	r4, r2
   14308:	mov	r5, r1
   1430c:	mov	r6, r0
   14310:	bl	14bb8 <table_get_cell_ptr@@Base>
   14314:	mov	r9, r0
   14318:	mov	r0, r6
   1431c:	mov	r1, r4
   14320:	bl	12c44 <table_get_col_ptr@@Base>
   14324:	ldr	r0, [r0, #4]
   14328:	mvn	r7, #0
   1432c:	cmp	r0, #6
   14330:	bne	14370 <table_set_int32@@Base+0x78>
   14334:	ldr	r0, [r9]
   14338:	cmp	r0, #0
   1433c:	bne	14354 <table_set_int32@@Base+0x5c>
   14340:	mov	r0, #4
   14344:	bl	11ecc <malloc@plt>
   14348:	cmp	r0, #0
   1434c:	str	r0, [r9]
   14350:	beq	14370 <table_set_int32@@Base+0x78>
   14354:	str	r8, [r0]
   14358:	mov	r0, r6
   1435c:	mov	r1, r5
   14360:	mov	r2, r4
   14364:	mov	r3, #1
   14368:	bl	12b5c <table_notify@@Base>
   1436c:	mov	r7, #0
   14370:	mov	r0, r7
   14374:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014378 <table_set_uint32@@Base>:
   14378:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1437c:	add	fp, sp, #24
   14380:	mov	r8, r3
   14384:	mov	r4, r2
   14388:	mov	r5, r1
   1438c:	mov	r6, r0
   14390:	bl	14bb8 <table_get_cell_ptr@@Base>
   14394:	mov	r9, r0
   14398:	mov	r0, r6
   1439c:	mov	r1, r4
   143a0:	bl	12c44 <table_get_col_ptr@@Base>
   143a4:	ldr	r0, [r0, #4]
   143a8:	mvn	r7, #0
   143ac:	cmp	r0, #7
   143b0:	bne	143f0 <table_set_uint32@@Base+0x78>
   143b4:	ldr	r0, [r9]
   143b8:	cmp	r0, #0
   143bc:	bne	143d4 <table_set_uint32@@Base+0x5c>
   143c0:	mov	r0, #4
   143c4:	bl	11ecc <malloc@plt>
   143c8:	cmp	r0, #0
   143cc:	str	r0, [r9]
   143d0:	beq	143f0 <table_set_uint32@@Base+0x78>
   143d4:	str	r8, [r0]
   143d8:	mov	r0, r6
   143dc:	mov	r1, r5
   143e0:	mov	r2, r4
   143e4:	mov	r3, #1
   143e8:	bl	12b5c <table_notify@@Base>
   143ec:	mov	r7, #0
   143f0:	mov	r0, r7
   143f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000143f8 <table_set_int64@@Base>:
   143f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   143fc:	add	fp, sp, #24
   14400:	mov	r4, r2
   14404:	mov	r8, r1
   14408:	mov	r6, r0
   1440c:	bl	14bb8 <table_get_cell_ptr@@Base>
   14410:	mov	r5, r0
   14414:	mov	r0, r6
   14418:	mov	r1, r4
   1441c:	bl	12c44 <table_get_col_ptr@@Base>
   14420:	ldr	r0, [r0, #4]
   14424:	mvn	r7, #0
   14428:	cmp	r0, #8
   1442c:	bne	14478 <table_set_int64@@Base+0x80>
   14430:	ldr	r0, [r5]
   14434:	cmp	r0, #0
   14438:	bne	14450 <table_set_int64@@Base+0x58>
   1443c:	mov	r0, #8
   14440:	bl	11ecc <malloc@plt>
   14444:	cmp	r0, #0
   14448:	str	r0, [r5]
   1444c:	beq	14478 <table_set_int64@@Base+0x80>
   14450:	ldr	r1, [fp, #12]
   14454:	ldr	r2, [fp, #8]
   14458:	mov	r3, #1
   1445c:	str	r2, [r0]
   14460:	str	r1, [r0, #4]
   14464:	mov	r0, r6
   14468:	mov	r1, r8
   1446c:	mov	r2, r4
   14470:	bl	12b5c <table_notify@@Base>
   14474:	mov	r7, #0
   14478:	mov	r0, r7
   1447c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014480 <table_set_uint64@@Base>:
   14480:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14484:	add	fp, sp, #24
   14488:	mov	r4, r2
   1448c:	mov	r8, r1
   14490:	mov	r6, r0
   14494:	bl	14bb8 <table_get_cell_ptr@@Base>
   14498:	mov	r5, r0
   1449c:	mov	r0, r6
   144a0:	mov	r1, r4
   144a4:	bl	12c44 <table_get_col_ptr@@Base>
   144a8:	ldr	r0, [r0, #4]
   144ac:	mvn	r7, #0
   144b0:	cmp	r0, #9
   144b4:	bne	14500 <table_set_uint64@@Base+0x80>
   144b8:	ldr	r0, [r5]
   144bc:	cmp	r0, #0
   144c0:	bne	144d8 <table_set_uint64@@Base+0x58>
   144c4:	mov	r0, #8
   144c8:	bl	11ecc <malloc@plt>
   144cc:	cmp	r0, #0
   144d0:	str	r0, [r5]
   144d4:	beq	14500 <table_set_uint64@@Base+0x80>
   144d8:	ldr	r1, [fp, #12]
   144dc:	ldr	r2, [fp, #8]
   144e0:	mov	r3, #1
   144e4:	str	r2, [r0]
   144e8:	str	r1, [r0, #4]
   144ec:	mov	r0, r6
   144f0:	mov	r1, r8
   144f4:	mov	r2, r4
   144f8:	bl	12b5c <table_notify@@Base>
   144fc:	mov	r7, #0
   14500:	mov	r0, r7
   14504:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014508 <table_set_short@@Base>:
   14508:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1450c:	add	fp, sp, #24
   14510:	mov	r8, r3
   14514:	mov	r4, r2
   14518:	mov	r9, r1
   1451c:	mov	r6, r0
   14520:	bl	14bb8 <table_get_cell_ptr@@Base>
   14524:	mov	r5, r0
   14528:	mov	r0, r6
   1452c:	mov	r1, r4
   14530:	bl	12c44 <table_get_col_ptr@@Base>
   14534:	ldr	r0, [r0, #4]
   14538:	mvn	r7, #0
   1453c:	cmp	r0, #10
   14540:	bne	14580 <table_set_short@@Base+0x78>
   14544:	ldr	r0, [r5]
   14548:	cmp	r0, #0
   1454c:	bne	14564 <table_set_short@@Base+0x5c>
   14550:	mov	r0, #2
   14554:	bl	11ecc <malloc@plt>
   14558:	cmp	r0, #0
   1455c:	str	r0, [r5]
   14560:	beq	14580 <table_set_short@@Base+0x78>
   14564:	strh	r8, [r0]
   14568:	mov	r0, r6
   1456c:	mov	r1, r9
   14570:	mov	r2, r4
   14574:	mov	r3, #1
   14578:	bl	12b5c <table_notify@@Base>
   1457c:	mov	r7, #0
   14580:	mov	r0, r7
   14584:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014588 <table_set_ushort@@Base>:
   14588:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1458c:	add	fp, sp, #24
   14590:	mov	r8, r3
   14594:	mov	r4, r2
   14598:	mov	r9, r1
   1459c:	mov	r6, r0
   145a0:	bl	14bb8 <table_get_cell_ptr@@Base>
   145a4:	mov	r5, r0
   145a8:	mov	r0, r6
   145ac:	mov	r1, r4
   145b0:	bl	12c44 <table_get_col_ptr@@Base>
   145b4:	ldr	r0, [r0, #4]
   145b8:	mvn	r7, #0
   145bc:	cmp	r0, #11
   145c0:	bne	14600 <table_set_ushort@@Base+0x78>
   145c4:	ldr	r0, [r5]
   145c8:	cmp	r0, #0
   145cc:	bne	145e4 <table_set_ushort@@Base+0x5c>
   145d0:	mov	r0, #2
   145d4:	bl	11ecc <malloc@plt>
   145d8:	cmp	r0, #0
   145dc:	str	r0, [r5]
   145e0:	beq	14600 <table_set_ushort@@Base+0x78>
   145e4:	strh	r8, [r0]
   145e8:	mov	r0, r6
   145ec:	mov	r1, r9
   145f0:	mov	r2, r4
   145f4:	mov	r3, #1
   145f8:	bl	12b5c <table_notify@@Base>
   145fc:	mov	r7, #0
   14600:	mov	r0, r7
   14604:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014608 <table_set_long@@Base>:
   14608:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1460c:	add	fp, sp, #24
   14610:	mov	r8, r3
   14614:	mov	r4, r2
   14618:	mov	r5, r1
   1461c:	mov	r6, r0
   14620:	bl	14bb8 <table_get_cell_ptr@@Base>
   14624:	mov	r9, r0
   14628:	mov	r0, r6
   1462c:	mov	r1, r4
   14630:	bl	12c44 <table_get_col_ptr@@Base>
   14634:	ldr	r0, [r0, #4]
   14638:	mvn	r7, #0
   1463c:	cmp	r0, #12
   14640:	bne	14680 <table_set_long@@Base+0x78>
   14644:	ldr	r0, [r9]
   14648:	cmp	r0, #0
   1464c:	bne	14664 <table_set_long@@Base+0x5c>
   14650:	mov	r0, #4
   14654:	bl	11ecc <malloc@plt>
   14658:	cmp	r0, #0
   1465c:	str	r0, [r9]
   14660:	beq	14680 <table_set_long@@Base+0x78>
   14664:	str	r8, [r0]
   14668:	mov	r0, r6
   1466c:	mov	r1, r5
   14670:	mov	r2, r4
   14674:	mov	r3, #1
   14678:	bl	12b5c <table_notify@@Base>
   1467c:	mov	r7, #0
   14680:	mov	r0, r7
   14684:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014688 <table_set_ulong@@Base>:
   14688:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1468c:	add	fp, sp, #24
   14690:	mov	r8, r3
   14694:	mov	r4, r2
   14698:	mov	r5, r1
   1469c:	mov	r6, r0
   146a0:	bl	14bb8 <table_get_cell_ptr@@Base>
   146a4:	mov	r9, r0
   146a8:	mov	r0, r6
   146ac:	mov	r1, r4
   146b0:	bl	12c44 <table_get_col_ptr@@Base>
   146b4:	ldr	r0, [r0, #4]
   146b8:	mvn	r7, #0
   146bc:	cmp	r0, #13
   146c0:	bne	14700 <table_set_ulong@@Base+0x78>
   146c4:	ldr	r0, [r9]
   146c8:	cmp	r0, #0
   146cc:	bne	146e4 <table_set_ulong@@Base+0x5c>
   146d0:	mov	r0, #4
   146d4:	bl	11ecc <malloc@plt>
   146d8:	cmp	r0, #0
   146dc:	str	r0, [r9]
   146e0:	beq	14700 <table_set_ulong@@Base+0x78>
   146e4:	str	r8, [r0]
   146e8:	mov	r0, r6
   146ec:	mov	r1, r5
   146f0:	mov	r2, r4
   146f4:	mov	r3, #1
   146f8:	bl	12b5c <table_notify@@Base>
   146fc:	mov	r7, #0
   14700:	mov	r0, r7
   14704:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014708 <table_set_llong@@Base>:
   14708:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1470c:	add	fp, sp, #24
   14710:	mov	r4, r2
   14714:	mov	r8, r1
   14718:	mov	r6, r0
   1471c:	bl	14bb8 <table_get_cell_ptr@@Base>
   14720:	mov	r5, r0
   14724:	mov	r0, r6
   14728:	mov	r1, r4
   1472c:	bl	12c44 <table_get_col_ptr@@Base>
   14730:	ldr	r0, [r0, #4]
   14734:	mvn	r7, #0
   14738:	cmp	r0, #14
   1473c:	bne	14788 <table_set_llong@@Base+0x80>
   14740:	ldr	r0, [r5]
   14744:	cmp	r0, #0
   14748:	bne	14760 <table_set_llong@@Base+0x58>
   1474c:	mov	r0, #8
   14750:	bl	11ecc <malloc@plt>
   14754:	cmp	r0, #0
   14758:	str	r0, [r5]
   1475c:	beq	14788 <table_set_llong@@Base+0x80>
   14760:	ldr	r1, [fp, #12]
   14764:	ldr	r2, [fp, #8]
   14768:	mov	r3, #1
   1476c:	str	r2, [r0]
   14770:	str	r1, [r0, #4]
   14774:	mov	r0, r6
   14778:	mov	r1, r8
   1477c:	mov	r2, r4
   14780:	bl	12b5c <table_notify@@Base>
   14784:	mov	r7, #0
   14788:	mov	r0, r7
   1478c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014790 <table_set_ullong@@Base>:
   14790:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14794:	add	fp, sp, #24
   14798:	mov	r4, r2
   1479c:	mov	r8, r1
   147a0:	mov	r6, r0
   147a4:	bl	14bb8 <table_get_cell_ptr@@Base>
   147a8:	mov	r5, r0
   147ac:	mov	r0, r6
   147b0:	mov	r1, r4
   147b4:	bl	12c44 <table_get_col_ptr@@Base>
   147b8:	ldr	r0, [r0, #4]
   147bc:	mvn	r7, #0
   147c0:	cmp	r0, #15
   147c4:	bne	14810 <table_set_ullong@@Base+0x80>
   147c8:	ldr	r0, [r5]
   147cc:	cmp	r0, #0
   147d0:	bne	147e8 <table_set_ullong@@Base+0x58>
   147d4:	mov	r0, #8
   147d8:	bl	11ecc <malloc@plt>
   147dc:	cmp	r0, #0
   147e0:	str	r0, [r5]
   147e4:	beq	14810 <table_set_ullong@@Base+0x80>
   147e8:	ldr	r1, [fp, #12]
   147ec:	ldr	r2, [fp, #8]
   147f0:	mov	r3, #1
   147f4:	str	r2, [r0]
   147f8:	str	r1, [r0, #4]
   147fc:	mov	r0, r6
   14800:	mov	r1, r8
   14804:	mov	r2, r4
   14808:	bl	12b5c <table_notify@@Base>
   1480c:	mov	r7, #0
   14810:	mov	r0, r7
   14814:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014818 <table_set_float@@Base>:
   14818:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1481c:	add	fp, sp, #24
   14820:	vpush	{d8}
   14824:	vmov.f32	s16, s0
   14828:	mov	r4, r2
   1482c:	mov	r8, r1
   14830:	mov	r6, r0
   14834:	bl	14bb8 <table_get_cell_ptr@@Base>
   14838:	mov	r5, r0
   1483c:	mov	r0, r6
   14840:	mov	r1, r4
   14844:	bl	12c44 <table_get_col_ptr@@Base>
   14848:	ldr	r0, [r0, #4]
   1484c:	mvn	r7, #0
   14850:	cmp	r0, #16
   14854:	bne	14898 <table_set_float@@Base+0x80>
   14858:	ldr	r0, [r5]
   1485c:	cmp	r0, #0
   14860:	bne	14878 <table_set_float@@Base+0x60>
   14864:	mov	r0, #4
   14868:	bl	11ecc <malloc@plt>
   1486c:	cmp	r0, #0
   14870:	str	r0, [r5]
   14874:	beq	14898 <table_set_float@@Base+0x80>
   14878:	vmov	r1, s16
   1487c:	mov	r2, r4
   14880:	mov	r3, #1
   14884:	str	r1, [r0]
   14888:	mov	r0, r6
   1488c:	mov	r1, r8
   14890:	bl	12b5c <table_notify@@Base>
   14894:	mov	r7, #0
   14898:	mov	r0, r7
   1489c:	vpop	{d8}
   148a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000148a4 <table_set_double@@Base>:
   148a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148a8:	add	fp, sp, #24
   148ac:	vpush	{d8}
   148b0:	vorr	d8, d0, d0
   148b4:	mov	r4, r2
   148b8:	mov	r5, r1
   148bc:	mov	r6, r0
   148c0:	bl	14bb8 <table_get_cell_ptr@@Base>
   148c4:	mov	r8, r0
   148c8:	mov	r0, r6
   148cc:	mov	r1, r4
   148d0:	bl	12c44 <table_get_col_ptr@@Base>
   148d4:	ldr	r0, [r0, #4]
   148d8:	mvn	r7, #0
   148dc:	cmp	r0, #17
   148e0:	bne	14920 <table_set_double@@Base+0x7c>
   148e4:	ldr	r0, [r8]
   148e8:	cmp	r0, #0
   148ec:	bne	14904 <table_set_double@@Base+0x60>
   148f0:	mov	r0, #8
   148f4:	bl	11ecc <malloc@plt>
   148f8:	cmp	r0, #0
   148fc:	str	r0, [r8]
   14900:	beq	14920 <table_set_double@@Base+0x7c>
   14904:	vst1.8	{d8}, [r0]
   14908:	mov	r0, r6
   1490c:	mov	r1, r5
   14910:	mov	r2, r4
   14914:	mov	r3, #1
   14918:	bl	12b5c <table_notify@@Base>
   1491c:	mov	r7, #0
   14920:	mov	r0, r7
   14924:	vpop	{d8}
   14928:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001492c <table_set_ldouble@@Base>:
   1492c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14930:	add	fp, sp, #24
   14934:	vpush	{d8}
   14938:	vorr	d8, d0, d0
   1493c:	mov	r4, r2
   14940:	mov	r5, r1
   14944:	mov	r6, r0
   14948:	bl	14bb8 <table_get_cell_ptr@@Base>
   1494c:	mov	r8, r0
   14950:	mov	r0, r6
   14954:	mov	r1, r4
   14958:	bl	12c44 <table_get_col_ptr@@Base>
   1495c:	ldr	r0, [r0, #4]
   14960:	mvn	r7, #0
   14964:	cmp	r0, #18
   14968:	bne	149a8 <table_set_ldouble@@Base+0x7c>
   1496c:	ldr	r0, [r8]
   14970:	cmp	r0, #0
   14974:	bne	1498c <table_set_ldouble@@Base+0x60>
   14978:	mov	r0, #8
   1497c:	bl	11ecc <malloc@plt>
   14980:	cmp	r0, #0
   14984:	str	r0, [r8]
   14988:	beq	149a8 <table_set_ldouble@@Base+0x7c>
   1498c:	vst1.8	{d8}, [r0]
   14990:	mov	r0, r6
   14994:	mov	r1, r5
   14998:	mov	r2, r4
   1499c:	mov	r3, #1
   149a0:	bl	12b5c <table_notify@@Base>
   149a4:	mov	r7, #0
   149a8:	mov	r0, r7
   149ac:	vpop	{d8}
   149b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000149b4 <table_set_string@@Base>:
   149b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   149b8:	add	fp, sp, #24
   149bc:	mov	r8, r3
   149c0:	mov	r4, r2
   149c4:	mov	r9, r1
   149c8:	mov	r6, r0
   149cc:	bl	14bb8 <table_get_cell_ptr@@Base>
   149d0:	mov	r5, r0
   149d4:	mov	r0, r6
   149d8:	mov	r1, r4
   149dc:	bl	12c44 <table_get_col_ptr@@Base>
   149e0:	ldr	r0, [r0, #4]
   149e4:	mvn	r7, #0
   149e8:	cmp	r0, #21
   149ec:	bne	14a34 <table_set_string@@Base+0x80>
   149f0:	mov	r0, r8
   149f4:	bl	11ef0 <strlen@plt>
   149f8:	ldr	r2, [r5]
   149fc:	add	r1, r0, #1
   14a00:	mov	r0, r2
   14a04:	bl	11eb4 <realloc@plt>
   14a08:	cmp	r0, #0
   14a0c:	str	r0, [r5]
   14a10:	beq	14a34 <table_set_string@@Base+0x80>
   14a14:	mov	r1, r8
   14a18:	bl	11ec0 <strcpy@plt>
   14a1c:	mov	r0, r6
   14a20:	mov	r1, r9
   14a24:	mov	r2, r4
   14a28:	mov	r3, #1
   14a2c:	bl	12b5c <table_notify@@Base>
   14a30:	mov	r7, #0
   14a34:	mov	r0, r7
   14a38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014a3c <table_set_char@@Base>:
   14a3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a40:	add	fp, sp, #24
   14a44:	mov	r8, r3
   14a48:	mov	r4, r2
   14a4c:	mov	r9, r1
   14a50:	mov	r6, r0
   14a54:	bl	14bb8 <table_get_cell_ptr@@Base>
   14a58:	mov	r5, r0
   14a5c:	mov	r0, r6
   14a60:	mov	r1, r4
   14a64:	bl	12c44 <table_get_col_ptr@@Base>
   14a68:	ldr	r0, [r0, #4]
   14a6c:	mvn	r7, #0
   14a70:	cmp	r0, #19
   14a74:	bne	14ab4 <table_set_char@@Base+0x78>
   14a78:	ldr	r0, [r5]
   14a7c:	cmp	r0, #0
   14a80:	bne	14a98 <table_set_char@@Base+0x5c>
   14a84:	mov	r0, #1
   14a88:	bl	11ecc <malloc@plt>
   14a8c:	cmp	r0, #0
   14a90:	str	r0, [r5]
   14a94:	beq	14ab4 <table_set_char@@Base+0x78>
   14a98:	strb	r8, [r0]
   14a9c:	mov	r0, r6
   14aa0:	mov	r1, r9
   14aa4:	mov	r2, r4
   14aa8:	mov	r3, #1
   14aac:	bl	12b5c <table_notify@@Base>
   14ab0:	mov	r7, #0
   14ab4:	mov	r0, r7
   14ab8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014abc <table_set_uchar@@Base>:
   14abc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ac0:	add	fp, sp, #24
   14ac4:	mov	r8, r3
   14ac8:	mov	r4, r2
   14acc:	mov	r9, r1
   14ad0:	mov	r6, r0
   14ad4:	bl	14bb8 <table_get_cell_ptr@@Base>
   14ad8:	mov	r5, r0
   14adc:	mov	r0, r6
   14ae0:	mov	r1, r4
   14ae4:	bl	12c44 <table_get_col_ptr@@Base>
   14ae8:	ldr	r0, [r0, #4]
   14aec:	mvn	r7, #0
   14af0:	cmp	r0, #20
   14af4:	bne	14b34 <table_set_uchar@@Base+0x78>
   14af8:	ldr	r0, [r5]
   14afc:	cmp	r0, #0
   14b00:	bne	14b18 <table_set_uchar@@Base+0x5c>
   14b04:	mov	r0, #1
   14b08:	bl	11ecc <malloc@plt>
   14b0c:	cmp	r0, #0
   14b10:	str	r0, [r5]
   14b14:	beq	14b34 <table_set_uchar@@Base+0x78>
   14b18:	strb	r8, [r0]
   14b1c:	mov	r0, r6
   14b20:	mov	r1, r9
   14b24:	mov	r2, r4
   14b28:	mov	r3, #1
   14b2c:	bl	12b5c <table_notify@@Base>
   14b30:	mov	r7, #0
   14b34:	mov	r0, r7
   14b38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b3c <table_set_ptr@@Base>:
   14b3c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14b40:	add	fp, sp, #24
   14b44:	mov	r8, r3
   14b48:	mov	r4, r2
   14b4c:	mov	r5, r1
   14b50:	mov	r6, r0
   14b54:	bl	14bb8 <table_get_cell_ptr@@Base>
   14b58:	mov	r7, r0
   14b5c:	mov	r0, r6
   14b60:	mov	r1, r4
   14b64:	bl	12c44 <table_get_col_ptr@@Base>
   14b68:	ldr	r1, [r0, #4]
   14b6c:	mvn	r0, #0
   14b70:	cmp	r1, #23
   14b74:	bne	14b94 <table_set_ptr@@Base+0x58>
   14b78:	mov	r0, r6
   14b7c:	mov	r1, r5
   14b80:	mov	r2, r4
   14b84:	mov	r3, #1
   14b88:	str	r8, [r7]
   14b8c:	bl	12b5c <table_notify@@Base>
   14b90:	mov	r0, #0
   14b94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014b98 <table_cell_init@@Base>:
   14b98:	push	{r4, sl, fp, lr}
   14b9c:	add	fp, sp, #8
   14ba0:	mov	r4, r2
   14ba4:	bl	139dc <table_get_row_ptr@@Base>
   14ba8:	ldr	r0, [r0]
   14bac:	mov	r1, #0
   14bb0:	str	r1, [r0, r4, lsl #2]
   14bb4:	pop	{r4, sl, fp, pc}

00014bb8 <table_get_cell_ptr@@Base>:
   14bb8:	push	{r4, sl, fp, lr}
   14bbc:	add	fp, sp, #8
   14bc0:	mov	r4, r2
   14bc4:	bl	139dc <table_get_row_ptr@@Base>
   14bc8:	ldr	r0, [r0]
   14bcc:	add	r0, r0, r4, lsl #2
   14bd0:	pop	{r4, sl, fp, pc}

00014bd4 <table_cell_destroy@@Base>:
   14bd4:	push	{r4, r5, r6, sl, fp, lr}
   14bd8:	add	fp, sp, #16
   14bdc:	mov	r5, r1
   14be0:	mov	r1, r2
   14be4:	mov	r4, r2
   14be8:	mov	r6, r0
   14bec:	bl	12cf0 <table_get_column_data_type@@Base>
   14bf0:	cmp	r0, #23
   14bf4:	popeq	{r4, r5, r6, sl, fp, pc}
   14bf8:	mov	r0, r6
   14bfc:	mov	r1, r5
   14c00:	bl	139dc <table_get_row_ptr@@Base>
   14c04:	ldr	r0, [r0]
   14c08:	ldr	r0, [r0, r4, lsl #2]
   14c0c:	cmp	r0, #0
   14c10:	beq	14c1c <table_cell_destroy@@Base+0x48>
   14c14:	pop	{r4, r5, r6, sl, fp, lr}
   14c18:	b	11ea8 <free@plt>
   14c1c:	pop	{r4, r5, r6, sl, fp, pc}

00014c20 <table_cell_to_buffer@@Base>:
   14c20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14c24:	add	fp, sp, #24
   14c28:	sub	sp, sp, #8
   14c2c:	mov	r7, r1
   14c30:	mov	r1, r2
   14c34:	mov	r5, r3
   14c38:	mov	r6, r2
   14c3c:	mov	r4, r0
   14c40:	bl	12cf0 <table_get_column_data_type@@Base>
   14c44:	cmp	r0, #23
   14c48:	bhi	14eb8 <table_cell_to_buffer@@Base+0x298>
   14c4c:	ldr	r8, [fp, #8]
   14c50:	add	r1, pc, #0
   14c54:	ldr	pc, [r1, r0, lsl #2]
   14c58:			; <UNDEFINED> instruction: 0x00014cb8
   14c5c:	andeq	r4, r1, ip, asr #25
   14c60:	andeq	r4, r1, r0, ror #25
   14c64:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14c68:	andeq	r4, r1, r8, lsl #26
   14c6c:	andeq	r4, r1, ip, lsl sp
   14c70:	andeq	r4, r1, r0, lsr sp
   14c74:	andeq	r4, r1, r4, asr #26
   14c78:	andeq	r4, r1, r4, ror #26
   14c7c:	andeq	r4, r1, r8, ror sp
   14c80:	andeq	r4, r1, ip, lsl #27
   14c84:	andeq	r4, r1, ip, lsr #27
   14c88:	andeq	r4, r1, ip, asr #27
   14c8c:	andeq	r4, r1, ip, ror #27
   14c90:	andeq	r4, r1, ip, lsl #28
   14c94:	andeq	r4, r1, ip, lsr #28
   14c98:	andeq	r4, r1, ip, asr #28
   14c9c:	andeq	r4, r1, r0, ror lr
   14ca0:	muleq	r1, r0, lr
   14ca4:	andeq	r4, r1, r4, asr #29
   14ca8:	ldrdeq	r4, [r1], -r8
   14cac:	strdeq	r4, [r1], -r8
   14cb0:	andeq	r4, r1, r8, lsl pc
   14cb4:	andeq	r4, r1, ip, asr #30
   14cb8:	mov	r0, r4
   14cbc:	mov	r1, r7
   14cc0:	mov	r2, r6
   14cc4:	bl	13798 <table_get_int@@Base>
   14cc8:	b	14f28 <table_cell_to_buffer@@Base+0x308>
   14ccc:	mov	r0, r4
   14cd0:	mov	r1, r7
   14cd4:	mov	r2, r6
   14cd8:	bl	137b0 <table_get_uint@@Base>
   14cdc:	b	14d54 <table_cell_to_buffer@@Base+0x134>
   14ce0:	mov	r0, r4
   14ce4:	mov	r1, r7
   14ce8:	mov	r2, r6
   14cec:	bl	137c8 <table_get_int8@@Base>
   14cf0:	b	14f28 <table_cell_to_buffer@@Base+0x308>
   14cf4:	mov	r0, r4
   14cf8:	mov	r1, r7
   14cfc:	mov	r2, r6
   14d00:	bl	137e0 <table_get_uint8@@Base>
   14d04:	b	14d54 <table_cell_to_buffer@@Base+0x134>
   14d08:	mov	r0, r4
   14d0c:	mov	r1, r7
   14d10:	mov	r2, r6
   14d14:	bl	137f8 <table_get_int16@@Base>
   14d18:	b	14f28 <table_cell_to_buffer@@Base+0x308>
   14d1c:	mov	r0, r4
   14d20:	mov	r1, r7
   14d24:	mov	r2, r6
   14d28:	bl	13810 <table_get_uint16@@Base>
   14d2c:	b	14d54 <table_cell_to_buffer@@Base+0x134>
   14d30:	mov	r0, r4
   14d34:	mov	r1, r7
   14d38:	mov	r2, r6
   14d3c:	bl	13828 <table_get_int32@@Base>
   14d40:	b	14f28 <table_cell_to_buffer@@Base+0x308>
   14d44:	mov	r0, r4
   14d48:	mov	r1, r7
   14d4c:	mov	r2, r6
   14d50:	bl	13840 <table_get_uint32@@Base>
   14d54:	movw	r2, #22303	; 0x571f
   14d58:	mov	r3, r0
   14d5c:	movt	r2, #1
   14d60:	b	14f34 <table_cell_to_buffer@@Base+0x314>
   14d64:	mov	r0, r4
   14d68:	mov	r1, r7
   14d6c:	mov	r2, r6
   14d70:	bl	13858 <table_get_int64@@Base>
   14d74:	b	14e1c <table_cell_to_buffer@@Base+0x1fc>
   14d78:	mov	r0, r4
   14d7c:	mov	r1, r7
   14d80:	mov	r2, r6
   14d84:	bl	13870 <table_get_uint64@@Base>
   14d88:	b	14e3c <table_cell_to_buffer@@Base+0x21c>
   14d8c:	mov	r0, r4
   14d90:	mov	r1, r7
   14d94:	mov	r2, r6
   14d98:	bl	13888 <table_get_short@@Base>
   14d9c:	movw	r2, #22316	; 0x572c
   14da0:	mov	r3, r0
   14da4:	movt	r2, #1
   14da8:	b	14f34 <table_cell_to_buffer@@Base+0x314>
   14dac:	mov	r0, r4
   14db0:	mov	r1, r7
   14db4:	mov	r2, r6
   14db8:	bl	138a0 <table_get_ushort@@Base>
   14dbc:	movw	r2, #22320	; 0x5730
   14dc0:	mov	r3, r0
   14dc4:	movt	r2, #1
   14dc8:	b	14f34 <table_cell_to_buffer@@Base+0x314>
   14dcc:	mov	r0, r4
   14dd0:	mov	r1, r7
   14dd4:	mov	r2, r6
   14dd8:	bl	138b8 <table_get_long@@Base>
   14ddc:	movw	r2, #22324	; 0x5734
   14de0:	mov	r3, r0
   14de4:	movt	r2, #1
   14de8:	b	14f34 <table_cell_to_buffer@@Base+0x314>
   14dec:	mov	r0, r4
   14df0:	mov	r1, r7
   14df4:	mov	r2, r6
   14df8:	bl	138d0 <table_get_ulong@@Base>
   14dfc:	movw	r2, #22328	; 0x5738
   14e00:	mov	r3, r0
   14e04:	movt	r2, #1
   14e08:	b	14f34 <table_cell_to_buffer@@Base+0x314>
   14e0c:	mov	r0, r4
   14e10:	mov	r1, r7
   14e14:	mov	r2, r6
   14e18:	bl	138e8 <table_get_llong@@Base>
   14e1c:	movw	r2, #22306	; 0x5722
   14e20:	stm	sp, {r0, r1}
   14e24:	movt	r2, #1
   14e28:	b	14eac <table_cell_to_buffer@@Base+0x28c>
   14e2c:	mov	r0, r4
   14e30:	mov	r1, r7
   14e34:	mov	r2, r6
   14e38:	bl	13900 <table_get_ullong@@Base>
   14e3c:	movw	r2, #22311	; 0x5727
   14e40:	stm	sp, {r0, r1}
   14e44:	movt	r2, #1
   14e48:	b	14eac <table_cell_to_buffer@@Base+0x28c>
   14e4c:	mov	r0, r4
   14e50:	mov	r1, r7
   14e54:	mov	r2, r6
   14e58:	bl	13918 <table_get_float@@Base>
   14e5c:	vcvt.f64.f32	d16, s0
   14e60:	movw	r2, #22335	; 0x573f
   14e64:	movt	r2, #1
   14e68:	vstr	d16, [sp]
   14e6c:	b	14eac <table_cell_to_buffer@@Base+0x28c>
   14e70:	mov	r0, r4
   14e74:	mov	r1, r7
   14e78:	mov	r2, r6
   14e7c:	bl	13930 <table_get_double@@Base>
   14e80:	movw	r2, #22338	; 0x5742
   14e84:	vstr	d0, [sp]
   14e88:	movt	r2, #1
   14e8c:	b	14eac <table_cell_to_buffer@@Base+0x28c>
   14e90:	mov	r0, r4
   14e94:	mov	r1, r7
   14e98:	mov	r2, r6
   14e9c:	bl	13948 <table_get_ldouble@@Base>
   14ea0:	movw	r2, #22342	; 0x5746
   14ea4:	vstr	d0, [sp]
   14ea8:	movt	r2, #1
   14eac:	mov	r0, r5
   14eb0:	mov	r1, r8
   14eb4:	bl	11efc <snprintf@plt>
   14eb8:	mov	r0, #0
   14ebc:	sub	sp, fp, #24
   14ec0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ec4:	mov	r0, r4
   14ec8:	mov	r1, r7
   14ecc:	mov	r2, r6
   14ed0:	bl	13960 <table_get_char@@Base>
   14ed4:	b	14ee8 <table_cell_to_buffer@@Base+0x2c8>
   14ed8:	mov	r0, r4
   14edc:	mov	r1, r7
   14ee0:	mov	r2, r6
   14ee4:	bl	13978 <table_get_uchar@@Base>
   14ee8:	movw	r2, #22346	; 0x574a
   14eec:	mov	r3, r0
   14ef0:	movt	r2, #1
   14ef4:	b	14f34 <table_cell_to_buffer@@Base+0x314>
   14ef8:	mov	r0, r4
   14efc:	mov	r1, r7
   14f00:	mov	r2, r6
   14f04:	bl	13990 <table_get_string@@Base>
   14f08:	movw	r2, #22332	; 0x573c
   14f0c:	mov	r3, r0
   14f10:	movt	r2, #1
   14f14:	b	14f34 <table_cell_to_buffer@@Base+0x314>
   14f18:	mov	r0, r4
   14f1c:	mov	r1, r7
   14f20:	mov	r2, r6
   14f24:	bl	13780 <table_get_bool@@Base>
   14f28:	movw	r2, #22300	; 0x571c
   14f2c:	mov	r3, r0
   14f30:	movt	r2, #1
   14f34:	mov	r0, r5
   14f38:	mov	r1, r8
   14f3c:	bl	11efc <snprintf@plt>
   14f40:	mov	r0, #0
   14f44:	sub	sp, fp, #24
   14f48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14f4c:	mov	r0, r4
   14f50:	mov	r1, r7
   14f54:	mov	r2, r6
   14f58:	bl	139a4 <table_get_ptr@@Base>
   14f5c:	movw	r2, #22349	; 0x574d
   14f60:	mov	r3, r0
   14f64:	movt	r2, #1
   14f68:	b	14f34 <table_cell_to_buffer@@Base+0x314>

00014f6c <table_cell_from_buffer@@Base>:
   14f6c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14f70:	add	fp, sp, #24
   14f74:	sub	sp, sp, #264	; 0x108
   14f78:	mov	r5, r1
   14f7c:	mov	r1, r2
   14f80:	mov	r7, r3
   14f84:	mov	r4, r2
   14f88:	mov	r6, r0
   14f8c:	bl	12cf0 <table_get_column_data_type@@Base>
   14f90:	cmp	r0, #23
   14f94:	bhi	155c4 <table_cell_from_buffer@@Base+0x658>
   14f98:	add	r1, pc, #0
   14f9c:	ldr	pc, [r1, r0, lsl #2]
   14fa0:	andeq	r5, r1, r0
   14fa4:	andeq	r5, r1, ip, lsr r0
   14fa8:	andeq	r5, r1, r8, ror r0
   14fac:	strheq	r5, [r1], -r4
   14fb0:	strdeq	r5, [r1], -r0
   14fb4:	andeq	r5, r1, ip, lsr #2
   14fb8:	andeq	r5, r1, r8, ror #2
   14fbc:	andeq	r5, r1, r4, lsr #3
   14fc0:	andeq	r5, r1, r0, ror #3
   14fc4:	andeq	r5, r1, r4, lsr #4
   14fc8:	andeq	r5, r1, r8, ror #4
   14fcc:	andeq	r5, r1, r4, lsr #5
   14fd0:	andeq	r5, r1, r0, ror #5
   14fd4:	andeq	r5, r1, ip, lsl r3
   14fd8:	andeq	r5, r1, r8, asr r3
   14fdc:	muleq	r1, ip, r3
   14fe0:	andeq	r5, r1, r0, ror #7
   14fe4:	andeq	r5, r1, ip, lsl r4
   14fe8:	andeq	r5, r1, r8, asr r4
   14fec:	muleq	r1, r4, r4
   14ff0:	ldrdeq	r5, [r1], -r0
   14ff4:	andeq	r5, r1, ip, lsl #10
   14ff8:	andeq	r5, r1, r8, asr #10
   14ffc:	andeq	r5, r1, ip, lsl #11
   15000:	movw	r1, #22300	; 0x571c
   15004:	add	r2, sp, #8
   15008:	mov	r0, r7
   1500c:	movt	r1, #1
   15010:	bl	11f08 <__isoc99_sscanf@plt>
   15014:	mov	r1, r0
   15018:	mvn	r0, #0
   1501c:	cmp	r1, #1
   15020:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   15024:	ldr	r3, [sp, #8]
   15028:	mov	r0, r6
   1502c:	mov	r1, r5
   15030:	mov	r2, r4
   15034:	bl	13ff8 <table_set_int@@Base>
   15038:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   1503c:	movw	r1, #22303	; 0x571f
   15040:	add	r2, sp, #8
   15044:	mov	r0, r7
   15048:	movt	r1, #1
   1504c:	bl	11f08 <__isoc99_sscanf@plt>
   15050:	mov	r1, r0
   15054:	mvn	r0, #0
   15058:	cmp	r1, #1
   1505c:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   15060:	ldr	r3, [sp, #8]
   15064:	mov	r0, r6
   15068:	mov	r1, r5
   1506c:	mov	r2, r4
   15070:	bl	14078 <table_set_uint@@Base>
   15074:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   15078:	movw	r1, #22352	; 0x5750
   1507c:	add	r2, sp, #8
   15080:	mov	r0, r7
   15084:	movt	r1, #1
   15088:	bl	11f08 <__isoc99_sscanf@plt>
   1508c:	mov	r1, r0
   15090:	mvn	r0, #0
   15094:	cmp	r1, #1
   15098:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   1509c:	ldrsb	r3, [sp, #8]
   150a0:	mov	r0, r6
   150a4:	mov	r1, r5
   150a8:	mov	r2, r4
   150ac:	bl	140f8 <table_set_int8@@Base>
   150b0:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   150b4:	movw	r1, #22357	; 0x5755
   150b8:	add	r2, sp, #8
   150bc:	mov	r0, r7
   150c0:	movt	r1, #1
   150c4:	bl	11f08 <__isoc99_sscanf@plt>
   150c8:	mov	r1, r0
   150cc:	mvn	r0, #0
   150d0:	cmp	r1, #1
   150d4:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   150d8:	ldrb	r3, [sp, #8]
   150dc:	mov	r0, r6
   150e0:	mov	r1, r5
   150e4:	mov	r2, r4
   150e8:	bl	14178 <table_set_uint8@@Base>
   150ec:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   150f0:	movw	r1, #22316	; 0x572c
   150f4:	add	r2, sp, #8
   150f8:	mov	r0, r7
   150fc:	movt	r1, #1
   15100:	bl	11f08 <__isoc99_sscanf@plt>
   15104:	mov	r1, r0
   15108:	mvn	r0, #0
   1510c:	cmp	r1, #1
   15110:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   15114:	ldrsh	r3, [sp, #8]
   15118:	mov	r0, r6
   1511c:	mov	r1, r5
   15120:	mov	r2, r4
   15124:	bl	141f8 <table_set_int16@@Base>
   15128:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   1512c:	movw	r1, #22320	; 0x5730
   15130:	add	r2, sp, #8
   15134:	mov	r0, r7
   15138:	movt	r1, #1
   1513c:	bl	11f08 <__isoc99_sscanf@plt>
   15140:	mov	r1, r0
   15144:	mvn	r0, #0
   15148:	cmp	r1, #1
   1514c:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   15150:	ldrh	r3, [sp, #8]
   15154:	mov	r0, r6
   15158:	mov	r1, r5
   1515c:	mov	r2, r4
   15160:	bl	14278 <table_set_uint16@@Base>
   15164:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   15168:	movw	r1, #22300	; 0x571c
   1516c:	add	r2, sp, #8
   15170:	mov	r0, r7
   15174:	movt	r1, #1
   15178:	bl	11f08 <__isoc99_sscanf@plt>
   1517c:	mov	r1, r0
   15180:	mvn	r0, #0
   15184:	cmp	r1, #1
   15188:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   1518c:	ldr	r3, [sp, #8]
   15190:	mov	r0, r6
   15194:	mov	r1, r5
   15198:	mov	r2, r4
   1519c:	bl	142f8 <table_set_int32@@Base>
   151a0:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   151a4:	movw	r1, #22303	; 0x571f
   151a8:	add	r2, sp, #8
   151ac:	mov	r0, r7
   151b0:	movt	r1, #1
   151b4:	bl	11f08 <__isoc99_sscanf@plt>
   151b8:	mov	r1, r0
   151bc:	mvn	r0, #0
   151c0:	cmp	r1, #1
   151c4:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   151c8:	ldr	r3, [sp, #8]
   151cc:	mov	r0, r6
   151d0:	mov	r1, r5
   151d4:	mov	r2, r4
   151d8:	bl	14378 <table_set_uint32@@Base>
   151dc:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   151e0:	movw	r1, #22306	; 0x5722
   151e4:	add	r2, sp, #8
   151e8:	mov	r0, r7
   151ec:	movt	r1, #1
   151f0:	bl	11f08 <__isoc99_sscanf@plt>
   151f4:	mov	r1, r0
   151f8:	mvn	r0, #0
   151fc:	cmp	r1, #1
   15200:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   15204:	ldr	r0, [sp, #8]
   15208:	ldr	r1, [sp, #12]
   1520c:	mov	r2, r4
   15210:	stm	sp, {r0, r1}
   15214:	mov	r0, r6
   15218:	mov	r1, r5
   1521c:	bl	143f8 <table_set_int64@@Base>
   15220:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   15224:	movw	r1, #22311	; 0x5727
   15228:	add	r2, sp, #8
   1522c:	mov	r0, r7
   15230:	movt	r1, #1
   15234:	bl	11f08 <__isoc99_sscanf@plt>
   15238:	mov	r1, r0
   1523c:	mvn	r0, #0
   15240:	cmp	r1, #1
   15244:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   15248:	ldr	r0, [sp, #8]
   1524c:	ldr	r1, [sp, #12]
   15250:	mov	r2, r4
   15254:	stm	sp, {r0, r1}
   15258:	mov	r0, r6
   1525c:	mov	r1, r5
   15260:	bl	14480 <table_set_uint64@@Base>
   15264:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   15268:	movw	r1, #22316	; 0x572c
   1526c:	add	r2, sp, #8
   15270:	mov	r0, r7
   15274:	movt	r1, #1
   15278:	bl	11f08 <__isoc99_sscanf@plt>
   1527c:	mov	r1, r0
   15280:	mvn	r0, #0
   15284:	cmp	r1, #1
   15288:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   1528c:	ldrsh	r3, [sp, #8]
   15290:	mov	r0, r6
   15294:	mov	r1, r5
   15298:	mov	r2, r4
   1529c:	bl	14508 <table_set_short@@Base>
   152a0:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   152a4:	movw	r1, #22320	; 0x5730
   152a8:	add	r2, sp, #8
   152ac:	mov	r0, r7
   152b0:	movt	r1, #1
   152b4:	bl	11f08 <__isoc99_sscanf@plt>
   152b8:	mov	r1, r0
   152bc:	mvn	r0, #0
   152c0:	cmp	r1, #1
   152c4:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   152c8:	ldrh	r3, [sp, #8]
   152cc:	mov	r0, r6
   152d0:	mov	r1, r5
   152d4:	mov	r2, r4
   152d8:	bl	14588 <table_set_ushort@@Base>
   152dc:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   152e0:	movw	r1, #22324	; 0x5734
   152e4:	add	r2, sp, #8
   152e8:	mov	r0, r7
   152ec:	movt	r1, #1
   152f0:	bl	11f08 <__isoc99_sscanf@plt>
   152f4:	mov	r1, r0
   152f8:	mvn	r0, #0
   152fc:	cmp	r1, #1
   15300:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   15304:	ldr	r3, [sp, #8]
   15308:	mov	r0, r6
   1530c:	mov	r1, r5
   15310:	mov	r2, r4
   15314:	bl	14608 <table_set_long@@Base>
   15318:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   1531c:	movw	r1, #22328	; 0x5738
   15320:	add	r2, sp, #8
   15324:	mov	r0, r7
   15328:	movt	r1, #1
   1532c:	bl	11f08 <__isoc99_sscanf@plt>
   15330:	mov	r1, r0
   15334:	mvn	r0, #0
   15338:	cmp	r1, #1
   1533c:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   15340:	ldr	r3, [sp, #8]
   15344:	mov	r0, r6
   15348:	mov	r1, r5
   1534c:	mov	r2, r4
   15350:	bl	14688 <table_set_ulong@@Base>
   15354:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   15358:	movw	r1, #22306	; 0x5722
   1535c:	add	r2, sp, #8
   15360:	mov	r0, r7
   15364:	movt	r1, #1
   15368:	bl	11f08 <__isoc99_sscanf@plt>
   1536c:	mov	r1, r0
   15370:	mvn	r0, #0
   15374:	cmp	r1, #1
   15378:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   1537c:	ldr	r0, [sp, #8]
   15380:	ldr	r1, [sp, #12]
   15384:	mov	r2, r4
   15388:	stm	sp, {r0, r1}
   1538c:	mov	r0, r6
   15390:	mov	r1, r5
   15394:	bl	14708 <table_set_llong@@Base>
   15398:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   1539c:	movw	r1, #22311	; 0x5727
   153a0:	add	r2, sp, #8
   153a4:	mov	r0, r7
   153a8:	movt	r1, #1
   153ac:	bl	11f08 <__isoc99_sscanf@plt>
   153b0:	mov	r1, r0
   153b4:	mvn	r0, #0
   153b8:	cmp	r1, #1
   153bc:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   153c0:	ldr	r0, [sp, #8]
   153c4:	ldr	r1, [sp, #12]
   153c8:	mov	r2, r4
   153cc:	stm	sp, {r0, r1}
   153d0:	mov	r0, r6
   153d4:	mov	r1, r5
   153d8:	bl	14790 <table_set_ullong@@Base>
   153dc:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   153e0:	movw	r1, #22335	; 0x573f
   153e4:	add	r2, sp, #8
   153e8:	mov	r0, r7
   153ec:	movt	r1, #1
   153f0:	bl	11f08 <__isoc99_sscanf@plt>
   153f4:	mov	r1, r0
   153f8:	mvn	r0, #0
   153fc:	cmp	r1, #1
   15400:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   15404:	vldr	s0, [sp, #8]
   15408:	mov	r0, r6
   1540c:	mov	r1, r5
   15410:	mov	r2, r4
   15414:	bl	14818 <table_set_float@@Base>
   15418:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   1541c:	movw	r1, #22338	; 0x5742
   15420:	add	r2, sp, #8
   15424:	mov	r0, r7
   15428:	movt	r1, #1
   1542c:	bl	11f08 <__isoc99_sscanf@plt>
   15430:	mov	r1, r0
   15434:	mvn	r0, #0
   15438:	cmp	r1, #1
   1543c:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   15440:	vldr	d0, [sp, #8]
   15444:	mov	r0, r6
   15448:	mov	r1, r5
   1544c:	mov	r2, r4
   15450:	bl	148a4 <table_set_double@@Base>
   15454:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   15458:	movw	r1, #22342	; 0x5746
   1545c:	add	r2, sp, #8
   15460:	mov	r0, r7
   15464:	movt	r1, #1
   15468:	bl	11f08 <__isoc99_sscanf@plt>
   1546c:	mov	r1, r0
   15470:	mvn	r0, #0
   15474:	cmp	r1, #1
   15478:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   1547c:	vldr	d0, [sp, #8]
   15480:	mov	r0, r6
   15484:	mov	r1, r5
   15488:	mov	r2, r4
   1548c:	bl	1492c <table_set_ldouble@@Base>
   15490:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   15494:	movw	r1, #22346	; 0x574a
   15498:	add	r2, sp, #8
   1549c:	mov	r0, r7
   154a0:	movt	r1, #1
   154a4:	bl	11f08 <__isoc99_sscanf@plt>
   154a8:	mov	r1, r0
   154ac:	mvn	r0, #0
   154b0:	cmp	r1, #1
   154b4:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   154b8:	ldrb	r3, [sp, #8]
   154bc:	mov	r0, r6
   154c0:	mov	r1, r5
   154c4:	mov	r2, r4
   154c8:	bl	14a3c <table_set_char@@Base>
   154cc:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   154d0:	movw	r1, #22346	; 0x574a
   154d4:	add	r2, sp, #8
   154d8:	mov	r0, r7
   154dc:	movt	r1, #1
   154e0:	bl	11f08 <__isoc99_sscanf@plt>
   154e4:	mov	r1, r0
   154e8:	mvn	r0, #0
   154ec:	cmp	r1, #1
   154f0:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   154f4:	ldrb	r3, [sp, #8]
   154f8:	mov	r0, r6
   154fc:	mov	r1, r5
   15500:	mov	r2, r4
   15504:	bl	14abc <table_set_uchar@@Base>
   15508:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   1550c:	movw	r1, #22332	; 0x573c
   15510:	add	r2, sp, #8
   15514:	mov	r0, r7
   15518:	movt	r1, #1
   1551c:	bl	11f08 <__isoc99_sscanf@plt>
   15520:	mov	r1, r0
   15524:	mvn	r0, #0
   15528:	cmp	r1, #1
   1552c:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   15530:	add	r3, sp, #8
   15534:	mov	r0, r6
   15538:	mov	r1, r5
   1553c:	mov	r2, r4
   15540:	bl	149b4 <table_set_string@@Base>
   15544:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   15548:	movw	r1, #22300	; 0x571c
   1554c:	add	r2, sp, #8
   15550:	mov	r0, r7
   15554:	movt	r1, #1
   15558:	bl	11f08 <__isoc99_sscanf@plt>
   1555c:	mov	r1, r0
   15560:	mvn	r0, #0
   15564:	cmp	r1, #1
   15568:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   1556c:	ldr	r3, [sp, #8]
   15570:	mov	r0, r6
   15574:	mov	r1, r5
   15578:	mov	r2, r4
   1557c:	cmp	r3, #0
   15580:	movwne	r3, #1
   15584:	bl	13f78 <table_set_bool@@Base>
   15588:	b	155c4 <table_cell_from_buffer@@Base+0x658>
   1558c:	movw	r1, #22349	; 0x574d
   15590:	add	r2, sp, #8
   15594:	mov	r0, r7
   15598:	movt	r1, #1
   1559c:	bl	11f08 <__isoc99_sscanf@plt>
   155a0:	mov	r1, r0
   155a4:	mvn	r0, #0
   155a8:	cmp	r1, #1
   155ac:	bne	155c8 <table_cell_from_buffer@@Base+0x65c>
   155b0:	ldr	r3, [sp, #8]
   155b4:	mov	r0, r6
   155b8:	mov	r1, r5
   155bc:	mov	r2, r4
   155c0:	bl	14b3c <table_set_ptr@@Base>
   155c4:	mov	r0, #0
   155c8:	sub	sp, fp, #24
   155cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000155d0 <table_cell_nullify@@Base>:
   155d0:	push	{r4, r5, fp, lr}
   155d4:	add	fp, sp, #8
   155d8:	mov	r4, r2
   155dc:	bl	139dc <table_get_row_ptr@@Base>
   155e0:	ldr	r5, [r0]
   155e4:	ldr	r0, [r5, r4, lsl #2]
   155e8:	cmp	r0, #0
   155ec:	beq	155fc <table_cell_nullify@@Base+0x2c>
   155f0:	bl	11ea8 <free@plt>
   155f4:	mov	r0, #0
   155f8:	str	r0, [r5, r4, lsl #2]
   155fc:	mov	r0, #0
   15600:	pop	{r4, r5, fp, pc}

00015604 <__libc_csu_init@@Base>:
   15604:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15608:	mov	r7, r0
   1560c:	ldr	r6, [pc, #72]	; 1565c <__libc_csu_init@@Base+0x58>
   15610:	ldr	r5, [pc, #72]	; 15660 <__libc_csu_init@@Base+0x5c>
   15614:	add	r6, pc, r6
   15618:	add	r5, pc, r5
   1561c:	sub	r6, r6, r5
   15620:	mov	r8, r1
   15624:	mov	r9, r2
   15628:	bl	11e70 <strcmp@plt-0x20>
   1562c:	asrs	r6, r6, #2
   15630:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15634:	mov	r4, #0
   15638:	add	r4, r4, #1
   1563c:	ldr	r3, [r5], #4
   15640:	mov	r2, r9
   15644:	mov	r1, r8
   15648:	mov	r0, r7
   1564c:	blx	r3
   15650:	cmp	r6, r4
   15654:	bne	15638 <__libc_csu_init@@Base+0x34>
   15658:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1565c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   15660:	andeq	r0, r1, r8, ror #17

00015664 <__libc_csu_fini@@Base>:
   15664:	bx	lr

Disassembly of section .fini:

00015668 <.fini>:
   15668:	push	{r3, lr}
   1566c:	pop	{r3, pc}
