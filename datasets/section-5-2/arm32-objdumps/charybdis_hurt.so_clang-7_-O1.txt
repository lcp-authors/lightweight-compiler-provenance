
../repos/charybdis/extensions/.libs/hurt.so:     file format elf32-littlearm


Disassembly of section .init:

00000a58 <_init>:
 a58:	push	{r3, lr}
 a5c:	bl	bf8 <call_weak_fn>
 a60:	pop	{r3, pc}

Disassembly of section .plt:

00000a64 <.plt>:
 a64:	push	{lr}		; (str lr, [sp, #-4]!)
 a68:	ldr	lr, [pc, #4]	; a74 <.plt+0x10>
 a6c:	add	lr, pc, lr
 a70:	ldr	pc, [lr, #8]!
 a74:	.word	0x0001258c

00000a78 <calloc@plt>:
 a78:	add	ip, pc, #0, 12
 a7c:	add	ip, ip, #73728	; 0x12000
 a80:	ldr	pc, [ip, #1420]!	; 0x58c

00000a84 <get_client_name@plt>:
 a84:	add	ip, pc, #0, 12
 a88:	add	ip, ip, #73728	; 0x12000
 a8c:	ldr	pc, [ip, #1412]!	; 0x584

00000a90 <rb_current_time@plt>:
 a90:	add	ip, pc, #0, 12
 a94:	add	ip, ip, #73728	; 0x12000
 a98:	ldr	pc, [ip, #1404]!	; 0x57c

00000a9c <rb_event_add@plt>:
 a9c:	add	ip, pc, #0, 12
 aa0:	add	ip, ip, #73728	; 0x12000
 aa4:	ldr	pc, [ip, #1396]!	; 0x574

00000aa8 <__cxa_finalize@plt>:
 aa8:	add	ip, pc, #0, 12
 aac:	add	ip, ip, #73728	; 0x12000
 ab0:	ldr	pc, [ip, #1388]!	; 0x56c

00000ab4 <sendto_one@plt>:
 ab4:	add	ip, pc, #0, 12
 ab8:	add	ip, ip, #73728	; 0x12000
 abc:	ldr	pc, [ip, #1380]!	; 0x564

00000ac0 <rb_event_delete@plt>:
 ac0:	add	ip, pc, #0, 12
 ac4:	add	ip, ip, #73728	; 0x12000
 ac8:	ldr	pc, [ip, #1372]!	; 0x55c

00000acc <free@plt>:
 acc:	add	ip, pc, #0, 12
 ad0:	add	ip, ip, #73728	; 0x12000
 ad4:	ldr	pc, [ip, #1364]!	; 0x554

00000ad8 <rb_strcasecmp@plt>:
 ad8:	add	ip, pc, #0, 12
 adc:	add	ip, ip, #73728	; 0x12000
 ae0:	ldr	pc, [ip, #1356]!	; 0x54c

00000ae4 <rb_outofmemory@plt>:
 ae4:	add	ip, pc, #0, 12
 ae8:	add	ip, ip, #73728	; 0x12000
 aec:	ldr	pc, [ip, #1348]!	; 0x544

00000af0 <sendto_realops_snomask@plt>:
 af0:	add	ip, pc, #0, 12
 af4:	add	ip, ip, #73728	; 0x12000
 af8:	ldr	pc, [ip, #1340]!	; 0x53c

00000afc <get_oper_name@plt>:
 afc:	add	ip, pc, #0, 12
 b00:	add	ip, ip, #73728	; 0x12000
 b04:	ldr	pc, [ip, #1332]!	; 0x534

00000b08 <rb_free_rb_dlink_node@plt>:
 b08:	add	ip, pc, #0, 12
 b0c:	add	ip, ip, #73728	; 0x12000
 b10:	ldr	pc, [ip, #1324]!	; 0x52c

00000b14 <strcpy@plt>:
 b14:	add	ip, pc, #0, 12
 b18:	add	ip, ip, #73728	; 0x12000
 b1c:	ldr	pc, [ip, #1316]!	; 0x524

00000b20 <sendto_server@plt>:
 b20:	add	ip, pc, #0, 12
 b24:	add	ip, ip, #73728	; 0x12000
 b28:	ldr	pc, [ip, #1308]!	; 0x51c

00000b2c <malloc@plt>:
 b2c:	add	ip, pc, #0, 12
 b30:	add	ip, ip, #73728	; 0x12000
 b34:	ldr	pc, [ip, #1300]!	; 0x514

00000b38 <__gmon_start__@plt>:
 b38:	add	ip, pc, #0, 12
 b3c:	add	ip, ip, #73728	; 0x12000
 b40:	ldr	pc, [ip, #1292]!	; 0x50c

00000b44 <rb_make_rb_dlink_node@plt>:
 b44:	add	ip, pc, #0, 12
 b48:	add	ip, ip, #73728	; 0x12000
 b4c:	ldr	pc, [ip, #1284]!	; 0x504

00000b50 <sendto_one_numeric@plt>:
 b50:	add	ip, pc, #0, 12
 b54:	add	ip, ip, #73728	; 0x12000
 b58:	ldr	pc, [ip, #1276]!	; 0x4fc

00000b5c <strlen@plt>:
 b5c:	add	ip, pc, #0, 12
 b60:	add	ip, ip, #73728	; 0x12000
 b64:	ldr	pc, [ip, #1268]!	; 0x4f4

00000b68 <strchr@plt>:
 b68:	add	ip, pc, #0, 12
 b6c:	add	ip, ip, #73728	; 0x12000
 b70:	ldr	pc, [ip, #1260]!	; 0x4ec

00000b74 <clean_nick@plt>:
 b74:	add	ip, pc, #0, 12
 b78:	add	ip, ip, #73728	; 0x12000
 b7c:	ldr	pc, [ip, #1252]!	; 0x4e4

00000b80 <match@plt>:
 b80:	add	ip, pc, #0, 12
 b84:	add	ip, ip, #73728	; 0x12000
 b88:	ldr	pc, [ip, #1244]!	; 0x4dc

00000b8c <find_person@plt>:
 b8c:	add	ip, pc, #0, 12
 b90:	add	ip, ip, #73728	; 0x12000
 b94:	ldr	pc, [ip, #1236]!	; 0x4d4

00000b98 <valid_temp_time@plt>:
 b98:	add	ip, pc, #0, 12
 b9c:	add	ip, ip, #73728	; 0x12000
 ba0:	ldr	pc, [ip, #1228]!	; 0x4cc

00000ba4 <sendto_one_notice@plt>:
 ba4:	add	ip, pc, #0, 12
 ba8:	add	ip, ip, #73728	; 0x12000
 bac:	ldr	pc, [ip, #1220]!	; 0x4c4

00000bb0 <atoi@plt>:
 bb0:	add	ip, pc, #0, 12
 bb4:	add	ip, ip, #73728	; 0x12000
 bb8:	ldr	pc, [ip, #1212]!	; 0x4bc

00000bbc <find_named_person@plt>:
 bbc:	add	ip, pc, #0, 12
 bc0:	add	ip, ip, #73728	; 0x12000
 bc4:	ldr	pc, [ip, #1204]!	; 0x4b4

00000bc8 <exit_client@plt>:
 bc8:	add	ip, pc, #0, 12
 bcc:	add	ip, ip, #73728	; 0x12000
 bd0:	ldr	pc, [ip, #1196]!	; 0x4ac

00000bd4 <privilegeset_in_set@plt>:
 bd4:	add	ip, pc, #0, 12
 bd8:	add	ip, ip, #73728	; 0x12000
 bdc:	ldr	pc, [ip, #1188]!	; 0x4a4

00000be0 <strncmp@plt>:
 be0:	add	ip, pc, #0, 12
 be4:	add	ip, ip, #73728	; 0x12000
 be8:	ldr	pc, [ip, #1180]!	; 0x49c

00000bec <__assert_fail@plt>:
 bec:	add	ip, pc, #0, 12
 bf0:	add	ip, ip, #73728	; 0x12000
 bf4:	ldr	pc, [ip, #1172]!	; 0x494

Disassembly of section .text:

00000bf8 <call_weak_fn>:
     bf8:	ldr	r3, [pc, #20]	; c14 <call_weak_fn+0x1c>
     bfc:	ldr	r2, [pc, #20]	; c18 <call_weak_fn+0x20>
     c00:	add	r3, pc, r3
     c04:	ldr	r2, [r3, r2]
     c08:	cmp	r2, #0
     c0c:	bxeq	lr
     c10:	b	b38 <__gmon_start__@plt>
     c14:	.word	0x000123f8
     c18:	.word	0x000000a4

00000c1c <deregister_tm_clones>:
     c1c:	ldr	r0, [pc, #44]	; c50 <deregister_tm_clones+0x34>
     c20:	ldr	r3, [pc, #44]	; c54 <deregister_tm_clones+0x38>
     c24:	add	r0, pc, r0
     c28:	add	r3, pc, r3
     c2c:	cmp	r3, r0
     c30:	ldr	r3, [pc, #32]	; c58 <deregister_tm_clones+0x3c>
     c34:	add	r3, pc, r3
     c38:	bxeq	lr
     c3c:	ldr	r2, [pc, #24]	; c5c <deregister_tm_clones+0x40>
     c40:	ldr	r3, [r3, r2]
     c44:	cmp	r3, #0
     c48:	bxeq	lr
     c4c:	bx	r3
     c50:	.word	0x00012598
     c54:	.word	0x00012594
     c58:	.word	0x000123c4
     c5c:	.word	0x00000094

00000c60 <register_tm_clones>:
     c60:	ldr	r0, [pc, #56]	; ca0 <register_tm_clones+0x40>
     c64:	ldr	r3, [pc, #56]	; ca4 <register_tm_clones+0x44>
     c68:	add	r0, pc, r0
     c6c:	add	r3, pc, r3
     c70:	sub	r1, r3, r0
     c74:	ldr	r3, [pc, #44]	; ca8 <register_tm_clones+0x48>
     c78:	asr	r1, r1, #2
     c7c:	add	r3, pc, r3
     c80:	add	r1, r1, r1, lsr #31
     c84:	asrs	r1, r1, #1
     c88:	bxeq	lr
     c8c:	ldr	r2, [pc, #24]	; cac <register_tm_clones+0x4c>
     c90:	ldr	r3, [r3, r2]
     c94:	cmp	r3, #0
     c98:	bxeq	lr
     c9c:	bx	r3
     ca0:	.word	0x00012554
     ca4:	.word	0x00012550
     ca8:	.word	0x0001237c
     cac:	.word	0x000000a8

00000cb0 <__do_global_dtors_aux>:
     cb0:	ldr	r3, [pc, #76]	; d04 <__do_global_dtors_aux+0x54>
     cb4:	ldr	r2, [pc, #76]	; d08 <__do_global_dtors_aux+0x58>
     cb8:	add	r3, pc, r3
     cbc:	add	r2, pc, r2
     cc0:	ldrb	r3, [r3]
     cc4:	cmp	r3, #0
     cc8:	bxne	lr
     ccc:	ldr	r3, [pc, #56]	; d0c <__do_global_dtors_aux+0x5c>
     cd0:	push	{r4, lr}
     cd4:	ldr	r3, [r2, r3]
     cd8:	cmp	r3, #0
     cdc:	beq	cec <__do_global_dtors_aux+0x3c>
     ce0:	ldr	r3, [pc, #40]	; d10 <__do_global_dtors_aux+0x60>
     ce4:	ldr	r0, [pc, r3]
     ce8:	bl	aa8 <__cxa_finalize@plt>
     cec:	bl	c1c <deregister_tm_clones>
     cf0:	ldr	r3, [pc, #28]	; d14 <__do_global_dtors_aux+0x64>
     cf4:	mov	r2, #1
     cf8:	add	r3, pc, r3
     cfc:	strb	r2, [r3]
     d00:	pop	{r4, pc}
     d04:	.word	0x00012504
     d08:	.word	0x0001233c
     d0c:	.word	0x0000008c
     d10:	.word	0x000123c8
     d14:	.word	0x000124c4

00000d18 <frame_dummy>:
     d18:	b	c60 <register_tm_clones>

00000d1c <me_hurt>:
     d1c:	push	{r4, r5, r6, sl, fp, lr}
     d20:	add	fp, sp, #16
     d24:	sub	sp, sp, #16
     d28:	cmp	r3, #4
     d2c:	blt	d88 <me_hurt+0x6c>
     d30:	mov	r5, r2
     d34:	ldrh	r0, [r2, #80]	; 0x50
     d38:	cmp	r0, #64	; 0x40
     d3c:	bne	d88 <me_hurt+0x6c>
     d40:	ldr	r0, [r5, #24]
     d44:	cmp	r0, #0
     d48:	beq	d88 <me_hurt+0x6c>
     d4c:	ldr	r6, [fp, #8]
     d50:	ldr	r0, [r6, #4]
     d54:	bl	bb0 <atoi@plt>
     d58:	cmp	r0, #1
     d5c:	blt	d88 <me_hurt+0x6c>
     d60:	mov	r4, r0
     d64:	ldr	r0, [r6, #8]
     d68:	bl	1a44 <hurt_find>
     d6c:	cmp	r0, #0
     d70:	bne	d88 <me_hurt+0x6c>
     d74:	ldr	r0, [r6, #12]
     d78:	cmp	r0, #0
     d7c:	ldrbne	r0, [r0]
     d80:	cmpne	r0, #0
     d84:	bne	d90 <me_hurt+0x74>
     d88:	sub	sp, fp, #16
     d8c:	pop	{r4, r5, r6, sl, fp, pc}
     d90:	mov	r0, r5
     d94:	bl	afc <get_oper_name@plt>
     d98:	mov	r3, r0
     d9c:	ldr	r0, [r6, #8]
     da0:	ldr	r1, [r6, #12]
     da4:	movw	r2, #34953	; 0x8889
     da8:	movt	r2, #34952	; 0x8888
     dac:	umull	r2, r5, r4, r2
     db0:	lsr	r2, r5, #5
     db4:	stm	sp, {r0, r2}
     db8:	str	r1, [sp, #8]
     dbc:	ldr	r2, [pc, #40]	; dec <me_hurt+0xd0>
     dc0:	add	r2, pc, r2
     dc4:	mov	r0, #256	; 0x100
     dc8:	mov	r1, #0
     dcc:	bl	af0 <sendto_realops_snomask@plt>
     dd0:	ldr	r1, [r6, #8]
     dd4:	ldr	r2, [r6, #12]
     dd8:	mov	r0, r4
     ddc:	bl	1a9c <hurt_new>
     de0:	sub	sp, fp, #16
     de4:	pop	{r4, r5, r6, sl, fp, lr}
     de8:	b	1ae4 <hurt_add>
     dec:	.word	0x0000128e

00000df0 <mo_hurt>:
     df0:	push	{r4, r5, r6, r7, fp, lr}
     df4:	add	fp, sp, #16
     df8:	sub	sp, sp, #16
     dfc:	mov	r4, r2
     e00:	ldr	r0, [r2, #24]
     e04:	cmp	r0, #0
     e08:	ldrne	r0, [r0, #36]	; 0x24
     e0c:	cmpne	r0, #0
     e10:	bne	e48 <mo_hurt+0x58>
     e14:	ldr	r0, [pc, #524]	; 1028 <mo_hurt+0x238>
     e18:	add	r0, pc, r0
     e1c:	str	r0, [sp]
     e20:	add	r3, r4, #88	; 0x58
     e24:	ldr	r0, [pc, #512]	; 102c <mo_hurt+0x23c>
     e28:	ldr	r0, [pc, r0]
     e2c:	add	r2, r0, #88	; 0x58
     e30:	ldr	r1, [pc, #504]	; 1030 <mo_hurt+0x240>
     e34:	add	r1, pc, r1
     e38:	mov	r0, r4
     e3c:	bl	ab4 <sendto_one@plt>
     e40:	sub	sp, fp, #16
     e44:	pop	{r4, r5, r6, r7, fp, pc}
     e48:	mov	r5, r3
     e4c:	ldr	r6, [fp, #8]
     e50:	ldr	r1, [pc, #444]	; 1014 <mo_hurt+0x224>
     e54:	add	r1, pc, r1
     e58:	bl	bd4 <privilegeset_in_set@plt>
     e5c:	cmp	r0, #0
     e60:	beq	e14 <mo_hurt+0x24>
     e64:	cmp	r5, #3
     e68:	bne	e74 <mo_hurt+0x84>
     e6c:	ldmib	r6, {r5, r6}
     e70:	b	e9c <mo_hurt+0xac>
     e74:	ldmib	r6, {r0, r5, r6}
     e78:	cmp	r0, #0
     e7c:	beq	e9c <mo_hurt+0xac>
     e80:	bl	b98 <valid_temp_time@plt>
     e84:	mov	r7, r0
     e88:	cmp	r0, #0
     e8c:	bgt	ea0 <mo_hurt+0xb0>
     e90:	ldr	r1, [pc, #388]	; 101c <mo_hurt+0x22c>
     e94:	add	r1, pc, r1
     e98:	b	eb8 <mo_hurt+0xc8>
     e9c:	movw	r7, #10080	; 0x2760
     ea0:	cmp	r6, #0
     ea4:	ldrbne	r0, [r6]
     ea8:	cmpne	r0, #0
     eac:	bne	ec8 <mo_hurt+0xd8>
     eb0:	ldr	r1, [pc, #352]	; 1018 <mo_hurt+0x228>
     eb4:	add	r1, pc, r1
     eb8:	mov	r0, r4
     ebc:	sub	sp, fp, #16
     ec0:	pop	{r4, r5, r6, r7, fp, lr}
     ec4:	b	ba4 <sendto_one_notice@plt>
     ec8:	mov	r0, r5
     ecc:	mov	r1, #46	; 0x2e
     ed0:	bl	b68 <strchr@plt>
     ed4:	cmp	r0, #0
     ed8:	bne	ef0 <mo_hurt+0x100>
     edc:	mov	r0, r5
     ee0:	mov	r1, #58	; 0x3a
     ee4:	bl	b68 <strchr@plt>
     ee8:	cmp	r0, #0
     eec:	beq	f50 <mo_hurt+0x160>
     ef0:	ldr	r1, [pc, #296]	; 1020 <mo_hurt+0x230>
     ef4:	add	r1, pc, r1
     ef8:	mov	r0, r5
     efc:	mov	r2, #2
     f00:	bl	be0 <strncmp@plt>
     f04:	cmp	r0, #0
     f08:	addeq	r5, r5, #2
     f0c:	mov	r0, r5
     f10:	mov	r1, #33	; 0x21
     f14:	bl	b68 <strchr@plt>
     f18:	cmp	r0, #0
     f1c:	bne	f34 <mo_hurt+0x144>
     f20:	mov	r0, r5
     f24:	mov	r1, #64	; 0x40
     f28:	bl	b68 <strchr@plt>
     f2c:	cmp	r0, #0
     f30:	beq	f64 <mo_hurt+0x174>
     f34:	ldr	r1, [pc, #252]	; 1038 <mo_hurt+0x248>
     f38:	add	r1, pc, r1
     f3c:	mov	r0, r4
     f40:	mov	r2, r5
     f44:	sub	sp, fp, #16
     f48:	pop	{r4, r5, r6, r7, fp, lr}
     f4c:	b	ba4 <sendto_one_notice@plt>
     f50:	mov	r0, r5
     f54:	bl	bbc <find_named_person@plt>
     f58:	cmp	r0, #0
     f5c:	beq	ff4 <mo_hurt+0x204>
     f60:	add	r5, r0, #227	; 0xe3
     f64:	mov	r0, r5
     f68:	bl	1a44 <hurt_find>
     f6c:	cmp	r0, #0
     f70:	beq	f90 <mo_hurt+0x1a0>
     f74:	ldr	r1, [pc, #192]	; 103c <mo_hurt+0x24c>
     f78:	add	r1, pc, r1
     f7c:	mov	r0, r4
     f80:	mov	r2, r5
     f84:	sub	sp, fp, #16
     f88:	pop	{r4, r5, r6, r7, fp, lr}
     f8c:	b	ab4 <sendto_one@plt>
     f90:	mov	r0, r4
     f94:	bl	afc <get_oper_name@plt>
     f98:	mov	r3, r0
     f9c:	movw	r0, #34953	; 0x8889
     fa0:	movt	r0, #34952	; 0x8888
     fa4:	umull	r0, r1, r7, r0
     fa8:	lsr	r0, r1, #5
     fac:	str	r5, [sp]
     fb0:	stmib	sp, {r0, r6}
     fb4:	ldr	r2, [pc, #104]	; 1024 <mo_hurt+0x234>
     fb8:	add	r2, pc, r2
     fbc:	mov	r0, #256	; 0x100
     fc0:	mov	r1, #0
     fc4:	bl	af0 <sendto_realops_snomask@plt>
     fc8:	mov	r0, r7
     fcc:	mov	r1, r5
     fd0:	mov	r2, r6
     fd4:	bl	1a9c <hurt_new>
     fd8:	mov	r5, r0
     fdc:	bl	1ae4 <hurt_add>
     fe0:	mov	r0, r4
     fe4:	mov	r1, r5
     fe8:	sub	sp, fp, #16
     fec:	pop	{r4, r5, r6, r7, fp, lr}
     ff0:	b	1b10 <hurt_propagate>
     ff4:	ldr	r2, [pc, #56]	; 1034 <mo_hurt+0x244>
     ff8:	add	r2, pc, r2
     ffc:	mov	r0, r4
    1000:	movw	r1, #401	; 0x191
    1004:	mov	r3, r5
    1008:	sub	sp, fp, #16
    100c:	pop	{r4, r5, r6, r7, fp, lr}
    1010:	b	b50 <sendto_one_numeric@plt>
    1014:	.word	0x00001135
    1018:	.word	0x0000112a
    101c:	.word	0x00001127
    1020:	.word	0x0000112c
    1024:	.word	0x00001096
    1028:	.word	0x00001176
    102c:	.word	0x0001227c
    1030:	.word	0x00001160
    1034:	.word	0x0000100f
    1038:	.word	0x000010eb
    103c:	.word	0x000010c3

00001040 <me_heal>:
    1040:	push	{r4, r5, r6, sl, fp, lr}
    1044:	add	fp, sp, #16
    1048:	sub	sp, sp, #8
    104c:	cmp	r3, #2
    1050:	bge	105c <me_heal+0x1c>
    1054:	sub	sp, fp, #16
    1058:	pop	{r4, r5, r6, sl, fp, pc}
    105c:	mov	r4, r2
    1060:	ldr	r6, [fp, #8]
    1064:	ldr	r0, [r6, #4]
    1068:	mov	r1, #0
    106c:	bl	b74 <clean_nick@plt>
    1070:	ldr	r5, [r6, #4]
    1074:	cmp	r0, #0
    1078:	beq	10ac <me_heal+0x6c>
    107c:	mov	r0, r5
    1080:	bl	b8c <find_person@plt>
    1084:	cmp	r0, #0
    1088:	beq	1054 <me_heal+0x14>
    108c:	mov	r1, r0
    1090:	ldrb	r0, [r0, #65]	; 0x41
    1094:	tst	r0, #32
    1098:	beq	1054 <me_heal+0x14>
    109c:	mov	r0, r4
    10a0:	sub	sp, fp, #16
    10a4:	pop	{r4, r5, r6, sl, fp, lr}
    10a8:	b	1cc4 <heal_nick>
    10ac:	mov	r0, r5
    10b0:	mov	r1, #46	; 0x2e
    10b4:	bl	b68 <strchr@plt>
    10b8:	cmp	r0, #0
    10bc:	beq	1054 <me_heal+0x14>
    10c0:	mov	r0, r5
    10c4:	bl	1d90 <hurt_find_exact>
    10c8:	cmp	r0, #0
    10cc:	beq	1054 <me_heal+0x14>
    10d0:	ldr	r0, [r6, #4]
    10d4:	bl	1de8 <hurt_remove>
    10d8:	mov	r0, r4
    10dc:	bl	afc <get_oper_name@plt>
    10e0:	mov	r3, r0
    10e4:	ldr	r0, [r6, #4]
    10e8:	str	r0, [sp]
    10ec:	ldr	r2, [pc, #20]	; 1108 <me_heal+0xc8>
    10f0:	add	r2, pc, r2
    10f4:	mov	r0, #256	; 0x100
    10f8:	mov	r1, #0
    10fc:	bl	af0 <sendto_realops_snomask@plt>
    1100:	sub	sp, fp, #16
    1104:	pop	{r4, r5, r6, sl, fp, pc}
    1108:	.word	0x00001025

0000110c <mo_heal>:
    110c:	push	{r4, r5, r6, sl, fp, lr}
    1110:	add	fp, sp, #16
    1114:	sub	sp, sp, #16
    1118:	mov	r4, r2
    111c:	ldr	r0, [r2, #24]
    1120:	cmp	r0, #0
    1124:	ldrne	r0, [r0, #36]	; 0x24
    1128:	cmpne	r0, #0
    112c:	bne	1164 <mo_heal+0x58>
    1130:	ldr	r0, [pc, #508]	; 1334 <mo_heal+0x228>
    1134:	add	r0, pc, r0
    1138:	str	r0, [sp]
    113c:	add	r3, r4, #88	; 0x58
    1140:	ldr	r0, [pc, #496]	; 1338 <mo_heal+0x22c>
    1144:	ldr	r0, [pc, r0]
    1148:	add	r2, r0, #88	; 0x58
    114c:	ldr	r1, [pc, #488]	; 133c <mo_heal+0x230>
    1150:	add	r1, pc, r1
    1154:	mov	r0, r4
    1158:	bl	ab4 <sendto_one@plt>
    115c:	sub	sp, fp, #16
    1160:	pop	{r4, r5, r6, sl, fp, pc}
    1164:	ldr	r6, [fp, #8]
    1168:	ldr	r1, [pc, #448]	; 1330 <mo_heal+0x224>
    116c:	add	r1, pc, r1
    1170:	bl	bd4 <privilegeset_in_set@plt>
    1174:	cmp	r0, #0
    1178:	beq	1130 <mo_heal+0x24>
    117c:	ldr	r0, [r6, #4]
    1180:	mov	r1, #0
    1184:	bl	b74 <clean_nick@plt>
    1188:	ldr	r5, [r6, #4]
    118c:	cmp	r0, #0
    1190:	beq	11e0 <mo_heal+0xd4>
    1194:	mov	r0, r5
    1198:	bl	bbc <find_named_person@plt>
    119c:	cmp	r0, #0
    11a0:	beq	1270 <mo_heal+0x164>
    11a4:	mov	r2, r0
    11a8:	ldrb	r0, [r0, #65]	; 0x41
    11ac:	tst	r0, #32
    11b0:	bne	1290 <mo_heal+0x184>
    11b4:	ldr	r0, [r2, #36]	; 0x24
    11b8:	ldrh	r1, [r0, #80]	; 0x50
    11bc:	cmp	r1, #32
    11c0:	bne	12c0 <mo_heal+0x1b4>
    11c4:	ldrb	r1, [r0, #396]	; 0x18c
    11c8:	cmp	r1, #0
    11cc:	beq	12e8 <mo_heal+0x1dc>
    11d0:	ldrb	r1, [r4, #396]!	; 0x18c
    11d4:	cmp	r1, #0
    11d8:	subeq	r4, r4, #308	; 0x134
    11dc:	b	12ec <mo_heal+0x1e0>
    11e0:	mov	r0, r5
    11e4:	mov	r1, #46	; 0x2e
    11e8:	bl	b68 <strchr@plt>
    11ec:	cmp	r0, #0
    11f0:	beq	12a4 <mo_heal+0x198>
    11f4:	mov	r0, r5
    11f8:	bl	1d90 <hurt_find_exact>
    11fc:	ldr	r2, [r6, #4]
    1200:	cmp	r0, #0
    1204:	beq	12d0 <mo_heal+0x1c4>
    1208:	mov	r0, r2
    120c:	bl	1de8 <hurt_remove>
    1210:	mov	r0, r4
    1214:	bl	afc <get_oper_name@plt>
    1218:	mov	r3, r0
    121c:	ldr	r0, [r6, #4]
    1220:	str	r0, [sp]
    1224:	ldr	r2, [pc, #280]	; 1344 <mo_heal+0x238>
    1228:	add	r2, pc, r2
    122c:	mov	r0, #256	; 0x100
    1230:	mov	r1, #0
    1234:	bl	af0 <sendto_realops_snomask@plt>
    1238:	ldr	r0, [r6, #4]
    123c:	add	r1, r4, #88	; 0x58
    1240:	ldr	r2, [pc, #256]	; 1348 <mo_heal+0x23c>
    1244:	add	r2, pc, r2
    1248:	str	r2, [sp]
    124c:	str	r1, [sp, #4]
    1250:	str	r0, [sp, #8]
    1254:	mov	r0, #0
    1258:	mov	r1, #0
    125c:	mov	r2, #0
    1260:	mov	r3, #0
    1264:	bl	b20 <sendto_server@plt>
    1268:	sub	sp, fp, #16
    126c:	pop	{r4, r5, r6, sl, fp, pc}
    1270:	ldr	r3, [r6, #4]
    1274:	ldr	r2, [pc, #212]	; 1350 <mo_heal+0x244>
    1278:	add	r2, pc, r2
    127c:	mov	r0, r4
    1280:	movw	r1, #401	; 0x191
    1284:	sub	sp, fp, #16
    1288:	pop	{r4, r5, r6, sl, fp, lr}
    128c:	b	b50 <sendto_one_numeric@plt>
    1290:	mov	r0, r4
    1294:	mov	r1, r2
    1298:	sub	sp, fp, #16
    129c:	pop	{r4, r5, r6, sl, fp, lr}
    12a0:	b	1cc4 <heal_nick>
    12a4:	ldr	r1, [pc, #160]	; 134c <mo_heal+0x240>
    12a8:	add	r1, pc, r1
    12ac:	mov	r0, r4
    12b0:	mov	r2, r5
    12b4:	sub	sp, fp, #16
    12b8:	pop	{r4, r5, r6, sl, fp, lr}
    12bc:	b	ab4 <sendto_one@plt>
    12c0:	add	r4, r4, #88	; 0x58
    12c4:	ldr	r0, [r2, #32]
    12c8:	add	r3, r0, #88	; 0x58
    12cc:	b	1314 <mo_heal+0x208>
    12d0:	ldr	r1, [pc, #124]	; 1354 <mo_heal+0x248>
    12d4:	add	r1, pc, r1
    12d8:	mov	r0, r4
    12dc:	sub	sp, fp, #16
    12e0:	pop	{r4, r5, r6, sl, fp, lr}
    12e4:	b	ba4 <sendto_one_notice@plt>
    12e8:	add	r4, r4, #88	; 0x58
    12ec:	ldrb	r0, [r0, #396]	; 0x18c
    12f0:	ldr	r1, [r2, #32]
    12f4:	add	r3, r1, #88	; 0x58
    12f8:	cmp	r0, #0
    12fc:	beq	1314 <mo_heal+0x208>
    1300:	mov	r0, r2
    1304:	ldrb	r1, [r0, #396]!	; 0x18c
    1308:	cmp	r1, #0
    130c:	subeq	r0, r0, #308	; 0x134
    1310:	b	1318 <mo_heal+0x20c>
    1314:	add	r0, r2, #88	; 0x58
    1318:	str	r0, [sp]
    131c:	ldr	r1, [pc, #28]	; 1340 <mo_heal+0x234>
    1320:	add	r1, pc, r1
    1324:	mov	r0, r2
    1328:	mov	r2, r4
    132c:	b	1158 <mo_heal+0x4c>
    1330:	.word	0x00000f70
    1334:	.word	0x00000fad
    1338:	.word	0x00011f60
    133c:	.word	0x00000e44
    1340:	.word	0x00000dc9
    1344:	.word	0x00000eed
    1348:	.word	0x00000ee7
    134c:	.word	0x00000e97
    1350:	.word	0x00000d8f
    1354:	.word	0x00000e2a

00001358 <client_exit_hook>:
    1358:	ldr	r0, [r0, #4]
    135c:	ldr	r1, [pc, #8]	; 136c <client_exit_hook+0x14>
    1360:	ldr	r1, [pc, r1]
    1364:	add	r1, r1, #8
    1368:	b	1818 <rb_dlinkFindDestroy>
    136c:	.word	0x00011d34

00001370 <new_local_user_hook>:
    1370:	push	{r4, r5, fp, lr}
    1374:	add	fp, sp, #8
    1378:	mov	r4, r0
    137c:	mov	r5, r0
    1380:	ldr	r0, [r5, #64]!	; 0x40
    1384:	movw	r1, #16418	; 0x4022
    1388:	tst	r0, r1
    138c:	bne	13a4 <new_local_user_hook+0x34>
    1390:	tst	r0, #4194304	; 0x400000
    1394:	ldreq	r0, [r4, #24]
    1398:	ldrbeq	r0, [r0, #40]	; 0x28
    139c:	cmpeq	r0, #0
    13a0:	beq	13a8 <new_local_user_hook+0x38>
    13a4:	pop	{r4, r5, fp, pc}
    13a8:	movw	r0, #291	; 0x123
    13ac:	add	r0, r4, r0
    13b0:	bl	1a44 <hurt_find>
    13b4:	cmp	r0, #0
    13b8:	bne	13cc <new_local_user_hook+0x5c>
    13bc:	add	r0, r4, #227	; 0xe3
    13c0:	bl	1a44 <hurt_find>
    13c4:	cmp	r0, #0
    13c8:	popeq	{r4, r5, fp, pc}
    13cc:	bl	a90 <rb_current_time@plt>
    13d0:	ldr	r1, [r4, #432]	; 0x1b0
    13d4:	add	r0, r0, #600	; 0x258
    13d8:	str	r0, [r1, #416]	; 0x1a0
    13dc:	ldr	r0, [r5]
    13e0:	orr	r0, r0, #65536	; 0x10000
    13e4:	str	r0, [r5]
    13e8:	bl	b44 <rb_make_rb_dlink_node@plt>
    13ec:	mov	r1, r0
    13f0:	ldr	r0, [pc, #32]	; 1418 <new_local_user_hook+0xa8>
    13f4:	ldr	r0, [pc, r0]
    13f8:	add	r2, r0, #8
    13fc:	mov	r0, r4
    1400:	bl	1bd4 <rb_dlinkAdd>
    1404:	ldr	r1, [pc, #16]	; 141c <new_local_user_hook+0xac>
    1408:	add	r1, pc, r1
    140c:	mov	r0, r4
    1410:	pop	{r4, r5, fp, lr}
    1414:	b	ba4 <sendto_one_notice@plt>
    1418:	.word	0x00011ca0
    141c:	.word	0x00000dde

00001420 <doing_stats_hook>:
    1420:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1424:	add	fp, sp, #24
    1428:	sub	sp, sp, #24
    142c:	ldr	r1, [r0, #8]
    1430:	cmp	r1, #115	; 0x73
    1434:	bne	15d0 <doing_stats_hook+0x1b0>
    1438:	ldr	r8, [r0]
    143c:	ldr	r5, [pc, #404]	; 15d8 <doing_stats_hook+0x1b8>
    1440:	ldr	r5, [pc, r5]
    1444:	ldr	r0, [r5, #164]	; 0xa4
    1448:	cmp	r0, #2
    144c:	bne	14a0 <doing_stats_hook+0x80>
    1450:	ldr	r0, [r8, #24]
    1454:	cmp	r0, #0
    1458:	ldrne	r0, [r0, #36]	; 0x24
    145c:	cmpne	r0, #0
    1460:	bne	1488 <doing_stats_hook+0x68>
    1464:	ldrb	r0, [r8, #57]	; 0x39
    1468:	tst	r0, #16
    146c:	ldrne	r0, [r8, #24]
    1470:	cmpne	r0, #0
    1474:	beq	15d0 <doing_stats_hook+0x1b0>
    1478:	ldr	r0, [r0, #36]	; 0x24
    147c:	cmp	r0, #0
    1480:	bne	15d0 <doing_stats_hook+0x1b0>
    1484:	b	149c <doing_stats_hook+0x7c>
    1488:	ldr	r1, [pc, #332]	; 15dc <doing_stats_hook+0x1bc>
    148c:	add	r1, pc, r1
    1490:	bl	bd4 <privilegeset_in_set@plt>
    1494:	cmp	r0, #0
    1498:	beq	1464 <doing_stats_hook+0x44>
    149c:	ldr	r0, [r5, #164]	; 0xa4
    14a0:	cmp	r0, #1
    14a4:	bne	1564 <doing_stats_hook+0x144>
    14a8:	ldr	r0, [r8, #24]
    14ac:	cmp	r0, #0
    14b0:	ldrne	r0, [r0, #36]	; 0x24
    14b4:	cmpne	r0, #0
    14b8:	bne	1540 <doing_stats_hook+0x120>
    14bc:	ldrb	r0, [r8, #57]	; 0x39
    14c0:	tst	r0, #16
    14c4:	ldrne	r0, [r8, #24]
    14c8:	cmpne	r0, #0
    14cc:	bne	1558 <doing_stats_hook+0x138>
    14d0:	movw	r0, #291	; 0x123
    14d4:	add	r0, r8, r0
    14d8:	bl	1a44 <hurt_find>
    14dc:	cmp	r0, #0
    14e0:	bne	14f4 <doing_stats_hook+0xd4>
    14e4:	add	r0, r8, #227	; 0xe3
    14e8:	bl	1a44 <hurt_find>
    14ec:	cmp	r0, #0
    14f0:	beq	15d0 <doing_stats_hook+0x1b0>
    14f4:	ldr	r1, [r0]
    14f8:	ldr	r0, [r0, #12]
    14fc:	ldr	r2, [pc, #224]	; 15e4 <doing_stats_hook+0x1c4>
    1500:	add	r2, pc, r2
    1504:	ldr	r3, [pc, #220]	; 15e8 <doing_stats_hook+0x1c8>
    1508:	add	r3, pc, r3
    150c:	str	r3, [sp]
    1510:	str	r1, [sp, #4]
    1514:	str	r0, [sp, #8]
    1518:	str	r2, [sp, #12]
    151c:	str	r2, [sp, #16]
    1520:	ldr	r2, [pc, #196]	; 15ec <doing_stats_hook+0x1cc>
    1524:	add	r2, pc, r2
    1528:	mov	r0, r8
    152c:	mov	r1, #216	; 0xd8
    1530:	mov	r3, #115	; 0x73
    1534:	bl	b50 <sendto_one_numeric@plt>
    1538:	sub	sp, fp, #24
    153c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1540:	ldr	r1, [pc, #152]	; 15e0 <doing_stats_hook+0x1c0>
    1544:	add	r1, pc, r1
    1548:	bl	bd4 <privilegeset_in_set@plt>
    154c:	cmp	r0, #0
    1550:	bne	1564 <doing_stats_hook+0x144>
    1554:	b	14bc <doing_stats_hook+0x9c>
    1558:	ldr	r0, [r0, #36]	; 0x24
    155c:	cmp	r0, #0
    1560:	bne	14d0 <doing_stats_hook+0xb0>
    1564:	ldr	r0, [pc, #132]	; 15f0 <doing_stats_hook+0x1d0>
    1568:	ldr	r0, [pc, r0]
    156c:	ldr	r6, [r0]
    1570:	cmp	r6, #0
    1574:	beq	15d0 <doing_stats_hook+0x1b0>
    1578:	ldr	r7, [pc, #116]	; 15f4 <doing_stats_hook+0x1d4>
    157c:	add	r7, pc, r7
    1580:	ldr	r4, [pc, #112]	; 15f8 <doing_stats_hook+0x1d8>
    1584:	add	r4, pc, r4
    1588:	ldr	r5, [pc, #108]	; 15fc <doing_stats_hook+0x1dc>
    158c:	add	r5, pc, r5
    1590:	ldr	r0, [r6]
    1594:	ldr	r1, [r0]
    1598:	ldr	r0, [r0, #12]
    159c:	str	r4, [sp]
    15a0:	str	r1, [sp, #4]
    15a4:	str	r0, [sp, #8]
    15a8:	str	r7, [sp, #12]
    15ac:	str	r7, [sp, #16]
    15b0:	mov	r0, r8
    15b4:	mov	r1, #216	; 0xd8
    15b8:	mov	r2, r5
    15bc:	mov	r3, #115	; 0x73
    15c0:	bl	b50 <sendto_one_numeric@plt>
    15c4:	ldr	r6, [r6, #8]
    15c8:	cmp	r6, #0
    15cc:	bne	1590 <doing_stats_hook+0x170>
    15d0:	sub	sp, fp, #24
    15d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    15d8:	.word	0x00011c68
    15dc:	.word	0x00000db2
    15e0:	.word	0x00000cfa
    15e4:	.word	0x00000a1d
    15e8:	.word	0x00000d56
    15ec:	.word	0x00000d27
    15f0:	.word	0x00011b20
    15f4:	.word	0x000009a1
    15f8:	.word	0x00000cda
    15fc:	.word	0x00000cbf

00001600 <modinit>:
    1600:	push	{fp, lr}
    1604:	mov	fp, sp
    1608:	bl	a90 <rb_current_time@plt>
    160c:	ldr	r1, [pc, #92]	; 1670 <modinit+0x70>
    1610:	ldr	r1, [pc, r1]
    1614:	str	r0, [r1]
    1618:	ldr	r0, [pc, #84]	; 1674 <modinit+0x74>
    161c:	add	r0, pc, r0
    1620:	ldr	r1, [pc, #80]	; 1678 <modinit+0x78>
    1624:	add	r1, pc, r1
    1628:	mov	r2, #0
    162c:	mov	r3, #60	; 0x3c
    1630:	bl	a9c <rb_event_add@plt>
    1634:	ldr	r1, [pc, #64]	; 167c <modinit+0x7c>
    1638:	ldr	r1, [pc, r1]
    163c:	str	r0, [r1]
    1640:	ldr	r0, [pc, #56]	; 1680 <modinit+0x80>
    1644:	add	r0, pc, r0
    1648:	ldr	r1, [pc, #52]	; 1684 <modinit+0x84>
    164c:	add	r1, pc, r1
    1650:	mov	r2, #0
    1654:	mov	r3, #5
    1658:	bl	a9c <rb_event_add@plt>
    165c:	ldr	r1, [pc, #36]	; 1688 <modinit+0x88>
    1660:	ldr	r1, [pc, r1]
    1664:	str	r0, [r1]
    1668:	mov	r0, #0
    166c:	pop	{fp, pc}
    1670:	.word	0x00011a84
    1674:	.word	0x00000849
    1678:	.word	0x000000cc
    167c:	.word	0x00011a58
    1680:	.word	0x0000082d
    1684:	.word	0x00000108
    1688:	.word	0x00011a38

0000168c <modfini>:
    168c:	push	{r4, r5, fp, lr}
    1690:	add	fp, sp, #8
    1694:	ldr	r0, [pc, #80]	; 16ec <modfini+0x60>
    1698:	ldr	r0, [pc, r0]
    169c:	ldr	r0, [r0]
    16a0:	bl	ac0 <rb_event_delete@plt>
    16a4:	ldr	r0, [pc, #68]	; 16f0 <modfini+0x64>
    16a8:	ldr	r0, [pc, r0]
    16ac:	ldr	r0, [r0]
    16b0:	bl	ac0 <rb_event_delete@plt>
    16b4:	ldr	r0, [pc, #56]	; 16f4 <modfini+0x68>
    16b8:	ldr	r0, [pc, r0]
    16bc:	ldr	r4, [r0, #8]
    16c0:	cmp	r4, #0
    16c4:	popeq	{r4, r5, fp, pc}
    16c8:	ldr	r5, [r4, #8]
    16cc:	mov	r0, r4
    16d0:	bl	19b8 <rb_dlinkDelete>
    16d4:	mov	r0, r4
    16d8:	bl	b08 <rb_free_rb_dlink_node@plt>
    16dc:	cmp	r5, #0
    16e0:	mov	r4, r5
    16e4:	bne	16c8 <modfini+0x3c>
    16e8:	pop	{r4, r5, fp, pc}
    16ec:	.word	0x000119f8
    16f0:	.word	0x000119f0
    16f4:	.word	0x000119dc

000016f8 <hurt_expire_event>:
    16f8:	push	{r4, r5, r6, r7, fp, lr}
    16fc:	add	fp, sp, #16
    1700:	ldr	r0, [pc, #76]	; 1754 <hurt_expire_event+0x5c>
    1704:	ldr	r0, [pc, r0]
    1708:	ldr	r6, [r0]
    170c:	cmp	r6, #0
    1710:	popeq	{r4, r5, r6, r7, fp, pc}
    1714:	ldr	r4, [pc, #60]	; 1758 <hurt_expire_event+0x60>
    1718:	ldr	r4, [pc, r4]
    171c:	ldr	r5, [r6]
    1720:	ldr	r6, [r6, #8]
    1724:	ldr	r7, [r5, #16]
    1728:	bl	a90 <rb_current_time@plt>
    172c:	cmp	r7, r0
    1730:	bgt	1748 <hurt_expire_event+0x50>
    1734:	mov	r0, r5
    1738:	mov	r1, r4
    173c:	bl	1818 <rb_dlinkFindDestroy>
    1740:	mov	r0, r5
    1744:	bl	18a4 <hurt_destroy>
    1748:	cmp	r6, #0
    174c:	bne	171c <hurt_expire_event+0x24>
    1750:	pop	{r4, r5, r6, r7, fp, pc}
    1754:	.word	0x00011984
    1758:	.word	0x00011970

0000175c <hurt_check_event>:
    175c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1760:	add	fp, sp, #24
    1764:	ldr	r9, [pc, #160]	; 180c <hurt_check_event+0xb0>
    1768:	ldr	r9, [pc, r9]
    176c:	ldr	r4, [r9, #8]
    1770:	cmp	r4, #0
    1774:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
    1778:	ldr	r8, [pc, #144]	; 1810 <hurt_check_event+0xb4>
    177c:	ldr	r8, [pc, r8]
    1780:	ldr	r5, [pc, #140]	; 1814 <hurt_check_event+0xb8>
    1784:	add	r5, pc, r5
    1788:	mov	r7, r4
    178c:	ldr	r6, [r4]
    1790:	ldr	r4, [r4, #8]
    1794:	ldr	r0, [r6, #24]
    1798:	ldrb	r0, [r0, #40]	; 0x28
    179c:	cmp	r0, #0
    17a0:	beq	17d8 <hurt_check_event+0x7c>
    17a4:	mov	r0, r7
    17a8:	bl	19b8 <rb_dlinkDelete>
    17ac:	mov	r0, r7
    17b0:	bl	b08 <rb_free_rb_dlink_node@plt>
    17b4:	mov	r0, r6
    17b8:	mov	r1, r5
    17bc:	bl	ba4 <sendto_one_notice@plt>
    17c0:	bl	a90 <rb_current_time@plt>
    17c4:	ldr	r1, [r6, #432]	; 0x1b0
    17c8:	str	r0, [r1, #416]	; 0x1a0
    17cc:	cmp	r4, #0
    17d0:	bne	1788 <hurt_check_event+0x2c>
    17d4:	b	1808 <hurt_check_event+0xac>
    17d8:	ldrh	r0, [r9, #20]
    17dc:	ldr	r1, [r6, #432]	; 0x1b0
    17e0:	ldr	r1, [r1, #116]	; 0x74
    17e4:	cmp	r1, r0
    17e8:	bls	1800 <hurt_check_event+0xa4>
    17ec:	ldr	r3, [r9, #28]
    17f0:	mov	r0, #0
    17f4:	mov	r1, r6
    17f8:	mov	r2, r8
    17fc:	bl	bc8 <exit_client@plt>
    1800:	cmp	r4, #0
    1804:	bne	1788 <hurt_check_event+0x2c>
    1808:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    180c:	.word	0x0001192c
    1810:	.word	0x00011928
    1814:	.word	0x0000079a

00001818 <rb_dlinkFindDestroy>:
    1818:	push	{fp, lr}
    181c:	mov	fp, sp
    1820:	cmp	r1, #0
    1824:	beq	184c <rb_dlinkFindDestroy+0x34>
    1828:	cmp	r0, #0
    182c:	beq	186c <rb_dlinkFindDestroy+0x54>
    1830:	bl	18d4 <rb_dlinkFindDelete>
    1834:	cmp	r0, #0
    1838:	moveq	r0, #0
    183c:	popeq	{fp, pc}
    1840:	bl	b08 <rb_free_rb_dlink_node@plt>
    1844:	mov	r0, #1
    1848:	pop	{fp, pc}
    184c:	ldr	r0, [pc, #56]	; 188c <rb_dlinkFindDestroy+0x74>
    1850:	add	r0, pc, r0
    1854:	ldr	r1, [pc, #52]	; 1890 <rb_dlinkFindDestroy+0x78>
    1858:	add	r1, pc, r1
    185c:	ldr	r3, [pc, #48]	; 1894 <rb_dlinkFindDestroy+0x7c>
    1860:	add	r3, pc, r3
    1864:	movw	r2, #287	; 0x11f
    1868:	bl	bec <__assert_fail@plt>
    186c:	ldr	r0, [pc, #36]	; 1898 <rb_dlinkFindDestroy+0x80>
    1870:	add	r0, pc, r0
    1874:	ldr	r1, [pc, #32]	; 189c <rb_dlinkFindDestroy+0x84>
    1878:	add	r1, pc, r1
    187c:	ldr	r3, [pc, #28]	; 18a0 <rb_dlinkFindDestroy+0x88>
    1880:	add	r3, pc, r3
    1884:	mov	r2, #288	; 0x120
    1888:	bl	bec <__assert_fail@plt>
    188c:	.word	0x0000062c
    1890:	.word	0x00000631
    1894:	.word	0x00000645
    1898:	.word	0x00000666
    189c:	.word	0x00000611
    18a0:	.word	0x00000625

000018a4 <hurt_destroy>:
    18a4:	cmp	r0, #0
    18a8:	bxeq	lr
    18ac:	push	{r4, sl, fp, lr}
    18b0:	add	fp, sp, #8
    18b4:	mov	r4, r0
    18b8:	ldr	r0, [r0]
    18bc:	bl	19ac <rb_free>
    18c0:	ldr	r0, [r4, #12]
    18c4:	bl	19ac <rb_free>
    18c8:	mov	r0, r4
    18cc:	pop	{r4, sl, fp, lr}
    18d0:	b	19ac <rb_free>

000018d4 <rb_dlinkFindDelete>:
    18d4:	push	{fp, lr}
    18d8:	mov	fp, sp
    18dc:	cmp	r1, #0
    18e0:	beq	1954 <rb_dlinkFindDelete+0x80>
    18e4:	mov	ip, r0
    18e8:	cmp	r0, #0
    18ec:	beq	1974 <rb_dlinkFindDelete+0xa0>
    18f0:	ldr	r3, [r1]
    18f4:	mov	r0, r3
    18f8:	cmp	r3, #0
    18fc:	popeq	{fp, pc}
    1900:	ldr	r2, [r0]
    1904:	ldr	r3, [r0, #8]
    1908:	cmp	r2, ip
    190c:	bne	18f4 <rb_dlinkFindDelete+0x20>
    1910:	add	r2, r3, #4
    1914:	cmp	r3, #0
    1918:	addeq	r2, r1, #4
    191c:	ldr	r3, [r0, #4]
    1920:	str	r3, [r2]
    1924:	ldmib	r0, {r2, ip}
    1928:	cmp	r2, #0
    192c:	mov	r3, r1
    1930:	addne	r3, r2, #8
    1934:	str	ip, [r3]
    1938:	mov	r2, #0
    193c:	str	r2, [r0, #4]
    1940:	str	r2, [r0, #8]
    1944:	ldr	r2, [r1, #8]
    1948:	sub	r2, r2, #1
    194c:	str	r2, [r1, #8]
    1950:	pop	{fp, pc}
    1954:	ldr	r0, [pc, #56]	; 1994 <rb_dlinkFindDelete+0xc0>
    1958:	add	r0, pc, r0
    195c:	ldr	r1, [pc, #52]	; 1998 <rb_dlinkFindDelete+0xc4>
    1960:	add	r1, pc, r1
    1964:	ldr	r3, [pc, #48]	; 199c <rb_dlinkFindDelete+0xc8>
    1968:	add	r3, pc, r3
    196c:	movw	r2, #258	; 0x102
    1970:	bl	bec <__assert_fail@plt>
    1974:	ldr	r0, [pc, #36]	; 19a0 <rb_dlinkFindDelete+0xcc>
    1978:	add	r0, pc, r0
    197c:	ldr	r1, [pc, #32]	; 19a4 <rb_dlinkFindDelete+0xd0>
    1980:	add	r1, pc, r1
    1984:	ldr	r3, [pc, #28]	; 19a8 <rb_dlinkFindDelete+0xd4>
    1988:	add	r3, pc, r3
    198c:	movw	r2, #259	; 0x103
    1990:	bl	bec <__assert_fail@plt>
    1994:	.word	0x00000524
    1998:	.word	0x00000529
    199c:	.word	0x0000057b
    19a0:	.word	0x0000055e
    19a4:	.word	0x00000509
    19a8:	.word	0x0000055b

000019ac <rb_free>:
    19ac:	cmp	r0, #0
    19b0:	bxeq	lr
    19b4:	b	acc <free@plt>

000019b8 <rb_dlinkDelete>:
    19b8:	cmp	r0, #0
    19bc:	beq	1a0c <rb_dlinkDelete+0x54>
    19c0:	ldr	ip, [pc, #108]	; 1a34 <rb_dlinkDelete+0x7c>
    19c4:	ldr	ip, [pc, ip]
    19c8:	ldmib	r0, {r2, r3}
    19cc:	add	r1, r3, #4
    19d0:	cmp	r3, #0
    19d4:	addeq	r1, ip, #12
    19d8:	str	r2, [r1]
    19dc:	ldmib	r0, {r1, r2}
    19e0:	add	r3, r1, #8
    19e4:	cmp	r1, #0
    19e8:	addeq	r3, ip, #8
    19ec:	str	r2, [r3]
    19f0:	mov	r1, #0
    19f4:	str	r1, [r0, #4]
    19f8:	str	r1, [r0, #8]
    19fc:	ldr	r0, [ip, #16]
    1a00:	sub	r0, r0, #1
    1a04:	str	r0, [ip, #16]
    1a08:	bx	lr
    1a0c:	push	{fp, lr}
    1a10:	mov	fp, sp
    1a14:	ldr	r0, [pc, #28]	; 1a38 <rb_dlinkDelete+0x80>
    1a18:	add	r0, pc, r0
    1a1c:	ldr	r1, [pc, #24]	; 1a3c <rb_dlinkDelete+0x84>
    1a20:	add	r1, pc, r1
    1a24:	ldr	r3, [pc, #20]	; 1a40 <rb_dlinkDelete+0x88>
    1a28:	add	r3, pc, r3
    1a2c:	mov	r2, #235	; 0xeb
    1a30:	bl	bec <__assert_fail@plt>
    1a34:	.word	0x000116d0
    1a38:	.word	0x00000531
    1a3c:	.word	0x00000469
    1a40:	.word	0x0000052b

00001a44 <hurt_find>:
    1a44:	push	{r4, r5, r6, sl, fp, lr}
    1a48:	add	fp, sp, #16
    1a4c:	mov	r4, r0
    1a50:	ldr	r0, [pc, #64]	; 1a98 <hurt_find+0x54>
    1a54:	ldr	r0, [pc, r0]
    1a58:	ldr	r6, [r0]
    1a5c:	cmp	r6, #0
    1a60:	beq	1a8c <hurt_find+0x48>
    1a64:	ldr	r5, [r6]
    1a68:	ldr	r0, [r5]
    1a6c:	mov	r1, r4
    1a70:	bl	b80 <match@plt>
    1a74:	cmp	r0, #0
    1a78:	movne	r0, r5
    1a7c:	popne	{r4, r5, r6, sl, fp, pc}
    1a80:	ldr	r6, [r6, #8]
    1a84:	cmp	r6, #0
    1a88:	bne	1a64 <hurt_find+0x20>
    1a8c:	mov	r5, #0
    1a90:	mov	r0, r5
    1a94:	pop	{r4, r5, r6, sl, fp, pc}
    1a98:	.word	0x00011634

00001a9c <hurt_new>:
    1a9c:	push	{r4, r5, r6, r7, fp, lr}
    1aa0:	add	fp, sp, #16
    1aa4:	mov	r4, r2
    1aa8:	mov	r5, r1
    1aac:	mov	r6, r0
    1ab0:	bl	1b7c <rb_malloc>
    1ab4:	mov	r7, r0
    1ab8:	mov	r0, r5
    1abc:	bl	1b9c <rb_strdup>
    1ac0:	str	r0, [r7]
    1ac4:	mov	r0, r4
    1ac8:	bl	1b9c <rb_strdup>
    1acc:	str	r0, [r7, #12]
    1ad0:	bl	a90 <rb_current_time@plt>
    1ad4:	add	r0, r0, r6
    1ad8:	str	r0, [r7, #16]
    1adc:	mov	r0, r7
    1ae0:	pop	{r4, r5, r6, r7, fp, pc}

00001ae4 <hurt_add>:
    1ae4:	push	{r4, sl, fp, lr}
    1ae8:	add	fp, sp, #8
    1aec:	mov	r4, r0
    1af0:	bl	b44 <rb_make_rb_dlink_node@plt>
    1af4:	mov	r1, r0
    1af8:	ldr	r2, [pc, #12]	; 1b0c <hurt_add+0x28>
    1afc:	ldr	r2, [pc, r2]
    1b00:	mov	r0, r4
    1b04:	pop	{r4, sl, fp, lr}
    1b08:	b	1bd4 <rb_dlinkAdd>
    1b0c:	.word	0x0001158c

00001b10 <hurt_propagate>:
    1b10:	push	{r4, r5, r6, sl, fp, lr}
    1b14:	add	fp, sp, #16
    1b18:	sub	sp, sp, #24
    1b1c:	mov	r4, r1
    1b20:	mov	r5, r0
    1b24:	ldr	r6, [r1, #16]
    1b28:	bl	a90 <rb_current_time@plt>
    1b2c:	ldr	r1, [r4]
    1b30:	ldr	r2, [r4, #12]
    1b34:	sub	r0, r6, r0
    1b38:	add	r3, r5, #88	; 0x58
    1b3c:	ldr	r6, [pc, #48]	; 1b74 <hurt_propagate+0x64>
    1b40:	add	r6, pc, r6
    1b44:	str	r6, [sp]
    1b48:	str	r3, [sp, #4]
    1b4c:	add	r3, sp, #8
    1b50:	stm	r3, {r0, r1, r2}
    1b54:	ldr	r0, [pc, #28]	; 1b78 <hurt_propagate+0x68>
    1b58:	ldr	r0, [pc, r0]
    1b5c:	mov	r1, #0
    1b60:	mov	r2, #0
    1b64:	mov	r3, #0
    1b68:	bl	b20 <sendto_server@plt>
    1b6c:	sub	sp, fp, #16
    1b70:	pop	{r4, r5, r6, sl, fp, pc}
    1b74:	.word	0x00000580
    1b78:	.word	0x0001154c

00001b7c <rb_malloc>:
    1b7c:	push	{fp, lr}
    1b80:	mov	fp, sp
    1b84:	mov	r0, #1
    1b88:	mov	r1, #20
    1b8c:	bl	a78 <calloc@plt>
    1b90:	cmp	r0, #0
    1b94:	popne	{fp, pc}
    1b98:	bl	ae4 <rb_outofmemory@plt>

00001b9c <rb_strdup>:
    1b9c:	push	{r4, r5, fp, lr}
    1ba0:	add	fp, sp, #8
    1ba4:	mov	r4, r0
    1ba8:	bl	b5c <strlen@plt>
    1bac:	add	r0, r0, #1
    1bb0:	bl	b2c <malloc@plt>
    1bb4:	cmp	r0, #0
    1bb8:	beq	1bd0 <rb_strdup+0x34>
    1bbc:	mov	r5, r0
    1bc0:	mov	r1, r4
    1bc4:	bl	b14 <strcpy@plt>
    1bc8:	mov	r0, r5
    1bcc:	pop	{r4, r5, fp, pc}
    1bd0:	bl	ae4 <rb_outofmemory@plt>

00001bd4 <rb_dlinkAdd>:
    1bd4:	push	{fp, lr}
    1bd8:	mov	fp, sp
    1bdc:	cmp	r0, #0
    1be0:	beq	1c40 <rb_dlinkAdd+0x6c>
    1be4:	cmp	r1, #0
    1be8:	beq	1c60 <rb_dlinkAdd+0x8c>
    1bec:	cmp	r2, #0
    1bf0:	beq	1c80 <rb_dlinkAdd+0xac>
    1bf4:	mov	r3, #0
    1bf8:	stm	r1, {r0, r3}
    1bfc:	ldr	r0, [r2]
    1c00:	str	r0, [r1, #8]
    1c04:	ldr	r0, [r2]
    1c08:	cmp	r0, #0
    1c0c:	beq	1c1c <rb_dlinkAdd+0x48>
    1c10:	add	r0, r0, #4
    1c14:	str	r1, [r0]
    1c18:	b	1c2c <rb_dlinkAdd+0x58>
    1c1c:	mov	r0, r2
    1c20:	ldr	r3, [r0, #4]!
    1c24:	cmp	r3, #0
    1c28:	streq	r1, [r0]
    1c2c:	str	r1, [r2]
    1c30:	ldr	r0, [r2, #8]
    1c34:	add	r0, r0, #1
    1c38:	str	r0, [r2, #8]
    1c3c:	pop	{fp, pc}
    1c40:	ldr	r0, [pc, #88]	; 1ca0 <rb_dlinkAdd+0xcc>
    1c44:	add	r0, pc, r0
    1c48:	ldr	r1, [pc, #84]	; 1ca4 <rb_dlinkAdd+0xd0>
    1c4c:	add	r1, pc, r1
    1c50:	ldr	r3, [pc, #80]	; 1ca8 <rb_dlinkAdd+0xd4>
    1c54:	add	r3, pc, r3
    1c58:	mov	r2, #143	; 0x8f
    1c5c:	bl	bec <__assert_fail@plt>
    1c60:	ldr	r0, [pc, #68]	; 1cac <rb_dlinkAdd+0xd8>
    1c64:	add	r0, pc, r0
    1c68:	ldr	r1, [pc, #64]	; 1cb0 <rb_dlinkAdd+0xdc>
    1c6c:	add	r1, pc, r1
    1c70:	ldr	r3, [pc, #60]	; 1cb4 <rb_dlinkAdd+0xe0>
    1c74:	add	r3, pc, r3
    1c78:	mov	r2, #144	; 0x90
    1c7c:	bl	bec <__assert_fail@plt>
    1c80:	ldr	r0, [pc, #48]	; 1cb8 <rb_dlinkAdd+0xe4>
    1c84:	add	r0, pc, r0
    1c88:	ldr	r1, [pc, #44]	; 1cbc <rb_dlinkAdd+0xe8>
    1c8c:	add	r1, pc, r1
    1c90:	ldr	r3, [pc, #40]	; 1cc0 <rb_dlinkAdd+0xec>
    1c94:	add	r3, pc, r3
    1c98:	mov	r2, #145	; 0x91
    1c9c:	bl	bec <__assert_fail@plt>
    1ca0:	.word	0x00000292
    1ca4:	.word	0x0000023d
    1ca8:	.word	0x00000431
    1cac:	.word	0x000002e5
    1cb0:	.word	0x0000021d
    1cb4:	.word	0x00000411
    1cb8:	.word	0x000001f8
    1cbc:	.word	0x000001fd
    1cc0:	.word	0x000003f1

00001cc4 <heal_nick>:
    1cc4:	push	{r4, r5, r6, sl, fp, lr}
    1cc8:	add	fp, sp, #16
    1ccc:	sub	sp, sp, #8
    1cd0:	mov	r4, r1
    1cd4:	mov	r5, r0
    1cd8:	ldr	r0, [pc, #156]	; 1d7c <heal_nick+0xb8>
    1cdc:	ldr	r0, [pc, r0]
    1ce0:	add	r1, r0, #8
    1ce4:	mov	r0, r4
    1ce8:	bl	1818 <rb_dlinkFindDestroy>
    1cec:	cmp	r0, #0
    1cf0:	beq	1d60 <heal_nick+0x9c>
    1cf4:	mov	r0, r5
    1cf8:	bl	afc <get_oper_name@plt>
    1cfc:	mov	r6, r0
    1d00:	mov	r0, r4
    1d04:	mov	r1, #0
    1d08:	bl	a84 <get_client_name@plt>
    1d0c:	str	r0, [sp]
    1d10:	ldr	r2, [pc, #104]	; 1d80 <heal_nick+0xbc>
    1d14:	add	r2, pc, r2
    1d18:	mov	r0, #256	; 0x100
    1d1c:	mov	r1, #0
    1d20:	mov	r3, r6
    1d24:	bl	af0 <sendto_realops_snomask@plt>
    1d28:	ldr	r1, [pc, #84]	; 1d84 <heal_nick+0xc0>
    1d2c:	add	r1, pc, r1
    1d30:	mov	r0, r4
    1d34:	bl	ba4 <sendto_one_notice@plt>
    1d38:	add	r2, r4, #88	; 0x58
    1d3c:	ldr	r1, [pc, #68]	; 1d88 <heal_nick+0xc4>
    1d40:	add	r1, pc, r1
    1d44:	mov	r0, r5
    1d48:	bl	ba4 <sendto_one_notice@plt>
    1d4c:	bl	a90 <rb_current_time@plt>
    1d50:	ldr	r1, [r4, #432]	; 0x1b0
    1d54:	str	r0, [r1, #416]	; 0x1a0
    1d58:	sub	sp, fp, #16
    1d5c:	pop	{r4, r5, r6, sl, fp, pc}
    1d60:	add	r2, r4, #88	; 0x58
    1d64:	ldr	r1, [pc, #32]	; 1d8c <heal_nick+0xc8>
    1d68:	add	r1, pc, r1
    1d6c:	mov	r0, r5
    1d70:	sub	sp, fp, #16
    1d74:	pop	{r4, r5, r6, sl, fp, lr}
    1d78:	b	ba4 <sendto_one_notice@plt>
    1d7c:	.word	0x000113b8
    1d80:	.word	0x00000450
    1d84:	.word	0x0000044b
    1d88:	.word	0x00000469
    1d8c:	.word	0x0000046d

00001d90 <hurt_find_exact>:
    1d90:	push	{r4, r5, r6, sl, fp, lr}
    1d94:	add	fp, sp, #16
    1d98:	mov	r4, r0
    1d9c:	ldr	r0, [pc, #64]	; 1de4 <hurt_find_exact+0x54>
    1da0:	ldr	r0, [pc, r0]
    1da4:	ldr	r6, [r0]
    1da8:	cmp	r6, #0
    1dac:	beq	1dd8 <hurt_find_exact+0x48>
    1db0:	ldr	r5, [r6]
    1db4:	ldr	r1, [r5]
    1db8:	mov	r0, r4
    1dbc:	bl	ad8 <rb_strcasecmp@plt>
    1dc0:	cmp	r0, #0
    1dc4:	moveq	r0, r5
    1dc8:	popeq	{r4, r5, r6, sl, fp, pc}
    1dcc:	ldr	r6, [r6, #8]
    1dd0:	cmp	r6, #0
    1dd4:	bne	1db0 <hurt_find_exact+0x20>
    1dd8:	mov	r5, #0
    1ddc:	mov	r0, r5
    1de0:	pop	{r4, r5, r6, sl, fp, pc}
    1de4:	.word	0x000112e8

00001de8 <hurt_remove>:
    1de8:	push	{r4, sl, fp, lr}
    1dec:	add	fp, sp, #8
    1df0:	bl	1d90 <hurt_find_exact>
    1df4:	mov	r4, r0
    1df8:	ldr	r1, [pc, #16]	; 1e10 <hurt_remove+0x28>
    1dfc:	ldr	r1, [pc, r1]
    1e00:	bl	1818 <rb_dlinkFindDestroy>
    1e04:	mov	r0, r4
    1e08:	pop	{r4, sl, fp, lr}
    1e0c:	b	18a4 <hurt_destroy>
    1e10:	.word	0x0001128c

Disassembly of section .fini:

00001e14 <_fini>:
    1e14:	push	{r3, lr}
    1e18:	pop	{r3, pc}
