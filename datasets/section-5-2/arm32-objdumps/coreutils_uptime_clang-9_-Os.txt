
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

000111c8 <.init>:
   111c8:	push	{r3, lr}
   111cc:	bl	1156c <putchar_unlocked@plt+0x48>
   111d0:	pop	{r3, pc}

Disassembly of section .plt:

000111d4 <calloc@plt-0x14>:
   111d4:	push	{lr}		; (str lr, [sp, #-4]!)
   111d8:	ldr	lr, [pc, #4]	; 111e4 <calloc@plt-0x4>
   111dc:	add	lr, pc, lr
   111e0:	ldr	pc, [lr, #8]!
   111e4:	andeq	r6, r1, ip, lsl lr

000111e8 <calloc@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #90112	; 0x16000
   111f0:	ldr	pc, [ip, #3612]!	; 0xe1c

000111f4 <fputs_unlocked@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #90112	; 0x16000
   111fc:	ldr	pc, [ip, #3604]!	; 0xe14

00011200 <gmtime_r@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #90112	; 0x16000
   11208:	ldr	pc, [ip, #3596]!	; 0xe0c

0001120c <strcmp@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #90112	; 0x16000
   11214:	ldr	pc, [ip, #3588]!	; 0xe04

00011218 <mktime@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #90112	; 0x16000
   11220:	ldr	pc, [ip, #3580]!	; 0xdfc

00011224 <fflush@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #90112	; 0x16000
   1122c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011230 <utmpxname@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #90112	; 0x16000
   11238:	ldr	pc, [ip, #3564]!	; 0xdec

0001123c <free@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #90112	; 0x16000
   11244:	ldr	pc, [ip, #3556]!	; 0xde4

00011248 <_exit@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #90112	; 0x16000
   11250:	ldr	pc, [ip, #3548]!	; 0xddc

00011254 <memcpy@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #90112	; 0x16000
   1125c:	ldr	pc, [ip, #3540]!	; 0xdd4

00011260 <mbsinit@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #90112	; 0x16000
   11268:	ldr	pc, [ip, #3532]!	; 0xdcc

0001126c <time@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #90112	; 0x16000
   11274:	ldr	pc, [ip, #3524]!	; 0xdc4

00011278 <dcgettext@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #90112	; 0x16000
   11280:	ldr	pc, [ip, #3516]!	; 0xdbc

00011284 <setutxent@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #90112	; 0x16000
   1128c:	ldr	pc, [ip, #3508]!	; 0xdb4

00011290 <realloc@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #90112	; 0x16000
   11298:	ldr	pc, [ip, #3500]!	; 0xdac

0001129c <localtime_r@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #90112	; 0x16000
   112a4:	ldr	pc, [ip, #3492]!	; 0xda4

000112a8 <textdomain@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #90112	; 0x16000
   112b0:	ldr	pc, [ip, #3484]!	; 0xd9c

000112b4 <iswprint@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #90112	; 0x16000
   112bc:	ldr	pc, [ip, #3476]!	; 0xd94

000112c0 <tzset@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #90112	; 0x16000
   112c8:	ldr	pc, [ip, #3468]!	; 0xd8c

000112cc <fwrite@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #90112	; 0x16000
   112d4:	ldr	pc, [ip, #3460]!	; 0xd84

000112d8 <lseek64@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #90112	; 0x16000
   112e0:	ldr	pc, [ip, #3452]!	; 0xd7c

000112e4 <__ctype_get_mb_cur_max@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #90112	; 0x16000
   112ec:	ldr	pc, [ip, #3444]!	; 0xd74

000112f0 <__fpending@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #90112	; 0x16000
   112f8:	ldr	pc, [ip, #3436]!	; 0xd6c

000112fc <ferror_unlocked@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #90112	; 0x16000
   11304:	ldr	pc, [ip, #3428]!	; 0xd64

00011308 <mbrtowc@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #90112	; 0x16000
   11310:	ldr	pc, [ip, #3420]!	; 0xd5c

00011314 <error@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #90112	; 0x16000
   1131c:	ldr	pc, [ip, #3412]!	; 0xd54

00011320 <getenv@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #90112	; 0x16000
   11328:	ldr	pc, [ip, #3404]!	; 0xd4c

0001132c <malloc@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #90112	; 0x16000
   11334:	ldr	pc, [ip, #3396]!	; 0xd44

00011338 <__libc_start_main@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #90112	; 0x16000
   11340:	ldr	pc, [ip, #3388]!	; 0xd3c

00011344 <strftime@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #90112	; 0x16000
   1134c:	ldr	pc, [ip, #3380]!	; 0xd34

00011350 <__freading@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #90112	; 0x16000
   11358:	ldr	pc, [ip, #3372]!	; 0xd2c

0001135c <localtime@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #90112	; 0x16000
   11364:	ldr	pc, [ip, #3364]!	; 0xd24

00011368 <__ctype_tolower_loc@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #90112	; 0x16000
   11370:	ldr	pc, [ip, #3356]!	; 0xd1c

00011374 <__ctype_toupper_loc@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #90112	; 0x16000
   1137c:	ldr	pc, [ip, #3348]!	; 0xd14

00011380 <__gmon_start__@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #90112	; 0x16000
   11388:	ldr	pc, [ip, #3340]!	; 0xd0c

0001138c <getopt_long@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #90112	; 0x16000
   11394:	ldr	pc, [ip, #3332]!	; 0xd04

00011398 <kill@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #90112	; 0x16000
   113a0:	ldr	pc, [ip, #3324]!	; 0xcfc

000113a4 <__ctype_b_loc@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #90112	; 0x16000
   113ac:	ldr	pc, [ip, #3316]!	; 0xcf4

000113b0 <exit@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #90112	; 0x16000
   113b8:	ldr	pc, [ip, #3308]!	; 0xcec

000113bc <bcmp@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #90112	; 0x16000
   113c4:	ldr	pc, [ip, #3300]!	; 0xce4

000113c8 <strlen@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #90112	; 0x16000
   113d0:	ldr	pc, [ip, #3292]!	; 0xcdc

000113d4 <setenv@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #90112	; 0x16000
   113dc:	ldr	pc, [ip, #3284]!	; 0xcd4

000113e0 <__errno_location@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #90112	; 0x16000
   113e8:	ldr	pc, [ip, #3276]!	; 0xccc

000113ec <__cxa_atexit@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #90112	; 0x16000
   113f4:	ldr	pc, [ip, #3268]!	; 0xcc4

000113f8 <memset@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #90112	; 0x16000
   11400:	ldr	pc, [ip, #3260]!	; 0xcbc

00011404 <strncpy@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #90112	; 0x16000
   1140c:	ldr	pc, [ip, #3252]!	; 0xcb4

00011410 <__printf_chk@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #90112	; 0x16000
   11418:	ldr	pc, [ip, #3244]!	; 0xcac

0001141c <fileno@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #90112	; 0x16000
   11424:	ldr	pc, [ip, #3236]!	; 0xca4

00011428 <__fprintf_chk@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #90112	; 0x16000
   11430:	ldr	pc, [ip, #3228]!	; 0xc9c

00011434 <fclose@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #90112	; 0x16000
   1143c:	ldr	pc, [ip, #3220]!	; 0xc94

00011440 <fseeko64@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #90112	; 0x16000
   11448:	ldr	pc, [ip, #3212]!	; 0xc8c

0001144c <getloadavg@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #90112	; 0x16000
   11454:	ldr	pc, [ip, #3204]!	; 0xc84

00011458 <strtod_l@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #90112	; 0x16000
   11460:	ldr	pc, [ip, #3196]!	; 0xc7c

00011464 <endutxent@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #90112	; 0x16000
   1146c:	ldr	pc, [ip, #3188]!	; 0xc74

00011470 <setlocale@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #90112	; 0x16000
   11478:	ldr	pc, [ip, #3180]!	; 0xc6c

0001147c <strrchr@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #90112	; 0x16000
   11484:	ldr	pc, [ip, #3172]!	; 0xc64

00011488 <nl_langinfo@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #90112	; 0x16000
   11490:	ldr	pc, [ip, #3164]!	; 0xc5c

00011494 <fputc@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #90112	; 0x16000
   1149c:	ldr	pc, [ip, #3156]!	; 0xc54

000114a0 <newlocale@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #90112	; 0x16000
   114a8:	ldr	pc, [ip, #3148]!	; 0xc4c

000114ac <timegm@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #90112	; 0x16000
   114b4:	ldr	pc, [ip, #3140]!	; 0xc44

000114b8 <fopen64@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #90112	; 0x16000
   114c0:	ldr	pc, [ip, #3132]!	; 0xc3c

000114c4 <fgets_unlocked@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #90112	; 0x16000
   114cc:	ldr	pc, [ip, #3124]!	; 0xc34

000114d0 <bindtextdomain@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #90112	; 0x16000
   114d8:	ldr	pc, [ip, #3116]!	; 0xc2c

000114dc <unsetenv@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #90112	; 0x16000
   114e4:	ldr	pc, [ip, #3108]!	; 0xc24

000114e8 <fputs@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #90112	; 0x16000
   114f0:	ldr	pc, [ip, #3100]!	; 0xc1c

000114f4 <strncmp@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #90112	; 0x16000
   114fc:	ldr	pc, [ip, #3092]!	; 0xc14

00011500 <abort@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #90112	; 0x16000
   11508:	ldr	pc, [ip, #3084]!	; 0xc0c

0001150c <getutxent@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #90112	; 0x16000
   11514:	ldr	pc, [ip, #3076]!	; 0xc04

00011518 <dcngettext@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #90112	; 0x16000
   11520:	ldr	pc, [ip, #3068]!	; 0xbfc

00011524 <putchar_unlocked@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #90112	; 0x16000
   1152c:	ldr	pc, [ip, #3060]!	; 0xbf4

Disassembly of section .text:

00011530 <.text>:
   11530:	mov	fp, #0
   11534:	mov	lr, #0
   11538:	pop	{r1}		; (ldr r1, [sp], #4)
   1153c:	mov	r2, sp
   11540:	push	{r2}		; (str r2, [sp, #-4]!)
   11544:	push	{r0}		; (str r0, [sp, #-4]!)
   11548:	ldr	ip, [pc, #16]	; 11560 <putchar_unlocked@plt+0x3c>
   1154c:	push	{ip}		; (str ip, [sp, #-4]!)
   11550:	ldr	r0, [pc, #12]	; 11564 <putchar_unlocked@plt+0x40>
   11554:	ldr	r3, [pc, #12]	; 11568 <putchar_unlocked@plt+0x44>
   11558:	bl	11338 <__libc_start_main@plt>
   1155c:	bl	11500 <abort@plt>
   11560:	andeq	r6, r1, r8, asr #14
   11564:	muleq	r1, r8, r8
   11568:	andeq	r6, r1, r8, ror #13
   1156c:	ldr	r3, [pc, #20]	; 11588 <putchar_unlocked@plt+0x64>
   11570:	ldr	r2, [pc, #20]	; 1158c <putchar_unlocked@plt+0x68>
   11574:	add	r3, pc, r3
   11578:	ldr	r2, [r3, r2]
   1157c:	cmp	r2, #0
   11580:	bxeq	lr
   11584:	b	11380 <__gmon_start__@plt>
   11588:	andeq	r6, r1, r4, lsl #21
   1158c:	andeq	r0, r0, r4, lsr #2
   11590:	ldr	r0, [pc, #24]	; 115b0 <putchar_unlocked@plt+0x8c>
   11594:	ldr	r3, [pc, #24]	; 115b4 <putchar_unlocked@plt+0x90>
   11598:	cmp	r3, r0
   1159c:	bxeq	lr
   115a0:	ldr	r3, [pc, #16]	; 115b8 <putchar_unlocked@plt+0x94>
   115a4:	cmp	r3, #0
   115a8:	bxeq	lr
   115ac:	bx	r3
   115b0:	andeq	r8, r2, r8, ror r1
   115b4:	andeq	r8, r2, r8, ror r1
   115b8:	andeq	r0, r0, r0
   115bc:	ldr	r0, [pc, #36]	; 115e8 <putchar_unlocked@plt+0xc4>
   115c0:	ldr	r1, [pc, #36]	; 115ec <putchar_unlocked@plt+0xc8>
   115c4:	sub	r1, r1, r0
   115c8:	asr	r1, r1, #2
   115cc:	add	r1, r1, r1, lsr #31
   115d0:	asrs	r1, r1, #1
   115d4:	bxeq	lr
   115d8:	ldr	r3, [pc, #16]	; 115f0 <putchar_unlocked@plt+0xcc>
   115dc:	cmp	r3, #0
   115e0:	bxeq	lr
   115e4:	bx	r3
   115e8:	andeq	r8, r2, r8, ror r1
   115ec:	andeq	r8, r2, r8, ror r1
   115f0:	andeq	r0, r0, r0
   115f4:	push	{r4, lr}
   115f8:	ldr	r4, [pc, #24]	; 11618 <putchar_unlocked@plt+0xf4>
   115fc:	ldrb	r3, [r4]
   11600:	cmp	r3, #0
   11604:	popne	{r4, pc}
   11608:	bl	11590 <putchar_unlocked@plt+0x6c>
   1160c:	mov	r3, #1
   11610:	strb	r3, [r4]
   11614:	pop	{r4, pc}
   11618:	muleq	r2, r4, r1
   1161c:	b	115bc <putchar_unlocked@plt+0x98>
   11620:	push	{fp, lr}
   11624:	mov	fp, sp
   11628:	sub	sp, sp, #56	; 0x38
   1162c:	mov	r8, r0
   11630:	cmp	r0, #0
   11634:	bne	11858 <putchar_unlocked@plt+0x334>
   11638:	movw	r1, #26523	; 0x679b
   1163c:	mov	r0, #0
   11640:	mov	r2, #5
   11644:	movt	r1, #1
   11648:	bl	11278 <dcgettext@plt>
   1164c:	mov	r1, r0
   11650:	movw	r0, #33188	; 0x81a4
   11654:	movt	r0, #2
   11658:	ldr	r2, [r0]
   1165c:	mov	r0, #1
   11660:	bl	11410 <__printf_chk@plt>
   11664:	movw	r1, #26553	; 0x67b9
   11668:	mov	r0, #0
   1166c:	mov	r2, #5
   11670:	movt	r1, #1
   11674:	bl	11278 <dcgettext@plt>
   11678:	mov	r1, r0
   1167c:	mov	r0, #1
   11680:	bl	11410 <__printf_chk@plt>
   11684:	movw	r1, #26738	; 0x6872
   11688:	mov	r0, #0
   1168c:	mov	r2, #5
   11690:	movt	r1, #1
   11694:	bl	11278 <dcgettext@plt>
   11698:	mov	r1, r0
   1169c:	mov	r0, #1
   116a0:	bl	11410 <__printf_chk@plt>
   116a4:	movw	r1, #26822	; 0x68c6
   116a8:	mov	r0, #0
   116ac:	mov	r2, #5
   116b0:	movt	r1, #1
   116b4:	bl	11278 <dcgettext@plt>
   116b8:	movw	r2, #26881	; 0x6901
   116bc:	movw	r3, #26895	; 0x690f
   116c0:	mov	r1, r0
   116c4:	mov	r0, #1
   116c8:	movt	r2, #1
   116cc:	movt	r3, #1
   116d0:	bl	11410 <__printf_chk@plt>
   116d4:	movw	r1, #26909	; 0x691d
   116d8:	mov	r0, #0
   116dc:	mov	r2, #5
   116e0:	movt	r1, #1
   116e4:	bl	11278 <dcgettext@plt>
   116e8:	movw	r9, #33164	; 0x818c
   116ec:	movt	r9, #2
   116f0:	ldr	r1, [r9]
   116f4:	bl	111f4 <fputs_unlocked@plt>
   116f8:	movw	r1, #26954	; 0x694a
   116fc:	mov	r0, #0
   11700:	mov	r2, #5
   11704:	movt	r1, #1
   11708:	bl	11278 <dcgettext@plt>
   1170c:	ldr	r1, [r9]
   11710:	bl	111f4 <fputs_unlocked@plt>
   11714:	movw	r0, #27616	; 0x6be0
   11718:	mov	r6, sp
   1171c:	movt	r0, #1
   11720:	mov	r1, r6
   11724:	ldm	r0!, {r2, r3, r4, r5}
   11728:	stmia	r1!, {r2, r3, r4, r5}
   1172c:	ldm	r0!, {r2, r3, r4, r5, r7}
   11730:	stmia	r1!, {r2, r3, r4, r5, r7}
   11734:	ldm	r0, {r2, r3, r4, r5, r7}
   11738:	stm	r1, {r2, r3, r4, r5, r7}
   1173c:	movw	r1, #27108	; 0x69e4
   11740:	movw	r5, #27425	; 0x6b21
   11744:	movt	r1, #1
   11748:	movt	r5, #1
   1174c:	mov	r0, r5
   11750:	bl	1120c <strcmp@plt>
   11754:	cmp	r0, #0
   11758:	ldrne	r1, [r6, #8]!
   1175c:	cmpne	r1, #0
   11760:	bne	1174c <putchar_unlocked@plt+0x228>
   11764:	movw	r1, #27203	; 0x6a43
   11768:	ldr	r6, [r6, #4]
   1176c:	mov	r0, #0
   11770:	mov	r2, #5
   11774:	movt	r1, #1
   11778:	bl	11278 <dcgettext@plt>
   1177c:	movw	r2, #27032	; 0x6998
   11780:	movw	r3, #27226	; 0x6a5a
   11784:	mov	r1, r0
   11788:	mov	r0, #1
   1178c:	movt	r2, #1
   11790:	movt	r3, #1
   11794:	bl	11410 <__printf_chk@plt>
   11798:	cmp	r6, #0
   1179c:	mov	r0, #5
   117a0:	mov	r1, #0
   117a4:	moveq	r6, r5
   117a8:	bl	11470 <setlocale@plt>
   117ac:	cmp	r0, #0
   117b0:	beq	117e8 <putchar_unlocked@plt+0x2c4>
   117b4:	movw	r1, #27266	; 0x6a82
   117b8:	mov	r2, #3
   117bc:	movt	r1, #1
   117c0:	bl	114f4 <strncmp@plt>
   117c4:	cmp	r0, #0
   117c8:	beq	117e8 <putchar_unlocked@plt+0x2c4>
   117cc:	movw	r1, #27270	; 0x6a86
   117d0:	mov	r0, #0
   117d4:	mov	r2, #5
   117d8:	movt	r1, #1
   117dc:	bl	11278 <dcgettext@plt>
   117e0:	ldr	r1, [r9]
   117e4:	bl	111f4 <fputs_unlocked@plt>
   117e8:	movw	r1, #27341	; 0x6acd
   117ec:	mov	r0, #0
   117f0:	mov	r2, #5
   117f4:	movt	r1, #1
   117f8:	bl	11278 <dcgettext@plt>
   117fc:	movw	r2, #27226	; 0x6a5a
   11800:	mov	r1, r0
   11804:	mov	r0, #1
   11808:	mov	r3, r5
   1180c:	movt	r2, #1
   11810:	bl	11410 <__printf_chk@plt>
   11814:	movw	r1, #27368	; 0x6ae8
   11818:	mov	r0, #0
   1181c:	mov	r2, #5
   11820:	movt	r1, #1
   11824:	bl	11278 <dcgettext@plt>
   11828:	mov	r1, r0
   1182c:	movw	r0, #27136	; 0x6a00
   11830:	movw	r3, #26880	; 0x6900
   11834:	cmp	r6, r5
   11838:	mov	r2, r6
   1183c:	movt	r0, #1
   11840:	movt	r3, #1
   11844:	moveq	r3, r0
   11848:	mov	r0, #1
   1184c:	bl	11410 <__printf_chk@plt>
   11850:	mov	r0, r8
   11854:	bl	113b0 <exit@plt>
   11858:	movw	r0, #33160	; 0x8188
   1185c:	movw	r1, #26484	; 0x6774
   11860:	mov	r2, #5
   11864:	movt	r0, #2
   11868:	movt	r1, #1
   1186c:	ldr	r5, [r0]
   11870:	mov	r0, #0
   11874:	bl	11278 <dcgettext@plt>
   11878:	mov	r2, r0
   1187c:	movw	r0, #33188	; 0x81a4
   11880:	mov	r1, #1
   11884:	movt	r0, #2
   11888:	ldr	r3, [r0]
   1188c:	mov	r0, r5
   11890:	bl	11428 <__fprintf_chk@plt>
   11894:	b	11850 <putchar_unlocked@plt+0x32c>
   11898:	push	{r4, r5, r6, sl, fp, lr}
   1189c:	add	fp, sp, #16
   118a0:	sub	sp, sp, #32
   118a4:	mov	r5, r0
   118a8:	ldr	r0, [r1]
   118ac:	mov	r4, r1
   118b0:	bl	138e0 <putchar_unlocked@plt+0x23bc>
   118b4:	movw	r1, #26880	; 0x6900
   118b8:	mov	r0, #6
   118bc:	movt	r1, #1
   118c0:	bl	11470 <setlocale@plt>
   118c4:	movw	r6, #27036	; 0x699c
   118c8:	movw	r1, #27008	; 0x6980
   118cc:	movt	r6, #1
   118d0:	movt	r1, #1
   118d4:	mov	r0, r6
   118d8:	bl	114d0 <bindtextdomain@plt>
   118dc:	mov	r0, r6
   118e0:	bl	112a8 <textdomain@plt>
   118e4:	movw	r0, #7776	; 0x1e60
   118e8:	movt	r0, #1
   118ec:	bl	1674c <putchar_unlocked@plt+0x5228>
   118f0:	movw	r0, #33072	; 0x8130
   118f4:	movw	r3, #27063	; 0x69b7
   118f8:	movw	r1, #5664	; 0x1620
   118fc:	movw	lr, #27079	; 0x69c7
   11900:	movw	r6, #27046	; 0x69a6
   11904:	mov	r2, #1
   11908:	mov	ip, #0
   1190c:	movt	r0, #2
   11910:	movt	r3, #1
   11914:	movt	r1, #1
   11918:	movt	lr, #1
   1191c:	movt	r6, #1
   11920:	ldr	r0, [r0]
   11924:	stm	sp, {r0, r2}
   11928:	movw	r2, #27425	; 0x6b21
   1192c:	str	r3, [sp, #16]
   11930:	movw	r3, #27032	; 0x6998
   11934:	str	r1, [sp, #8]
   11938:	mov	r0, r5
   1193c:	mov	r1, r4
   11940:	str	r6, [sp, #12]
   11944:	str	lr, [sp, #20]
   11948:	str	ip, [sp, #24]
   1194c:	movt	r2, #1
   11950:	movt	r3, #1
   11954:	bl	1381c <putchar_unlocked@plt+0x22f8>
   11958:	movw	r6, #33152	; 0x8180
   1195c:	movt	r6, #2
   11960:	ldr	r0, [r6]
   11964:	sub	r1, r5, r0
   11968:	cmp	r1, #1
   1196c:	beq	11988 <putchar_unlocked@plt+0x464>
   11970:	cmp	r1, #0
   11974:	bne	11994 <putchar_unlocked@plt+0x470>
   11978:	movw	r0, #26881	; 0x6901
   1197c:	mov	r1, #1
   11980:	movt	r0, #1
   11984:	bl	119d8 <putchar_unlocked@plt+0x4b4>
   11988:	ldr	r0, [r4, r0, lsl #2]
   1198c:	mov	r1, #0
   11990:	bl	119d8 <putchar_unlocked@plt+0x4b4>
   11994:	movw	r1, #27091	; 0x69d3
   11998:	mov	r0, #0
   1199c:	mov	r2, #5
   119a0:	movt	r1, #1
   119a4:	bl	11278 <dcgettext@plt>
   119a8:	mov	r5, r0
   119ac:	ldr	r0, [r6]
   119b0:	add	r0, r4, r0, lsl #2
   119b4:	ldr	r0, [r0, #4]
   119b8:	bl	152cc <putchar_unlocked@plt+0x3da8>
   119bc:	mov	r3, r0
   119c0:	mov	r0, #0
   119c4:	mov	r1, #0
   119c8:	mov	r2, r5
   119cc:	bl	11314 <error@plt>
   119d0:	mov	r0, #1
   119d4:	bl	11620 <putchar_unlocked@plt+0xfc>
   119d8:	push	{fp, lr}
   119dc:	mov	fp, sp
   119e0:	sub	sp, sp, #8
   119e4:	mov	r4, r0
   119e8:	mov	r0, #0
   119ec:	mov	r3, r1
   119f0:	add	r1, sp, #4
   119f4:	mov	r2, sp
   119f8:	str	r0, [sp]
   119fc:	mov	r0, r4
   11a00:	bl	1547c <putchar_unlocked@plt+0x3f58>
   11a04:	cmp	r0, #0
   11a08:	bne	11a20 <putchar_unlocked@plt+0x4fc>
   11a0c:	ldr	r1, [sp]
   11a10:	ldr	r0, [sp, #4]
   11a14:	bl	11a50 <putchar_unlocked@plt+0x52c>
   11a18:	mov	r0, #0
   11a1c:	bl	113b0 <exit@plt>
   11a20:	bl	113e0 <__errno_location@plt>
   11a24:	ldr	r5, [r0]
   11a28:	mov	r0, #0
   11a2c:	mov	r1, #3
   11a30:	mov	r2, r4
   11a34:	bl	15138 <putchar_unlocked@plt+0x3c14>
   11a38:	movw	r2, #27705	; 0x6c39
   11a3c:	mov	r3, r0
   11a40:	mov	r0, #1
   11a44:	mov	r1, r5
   11a48:	movt	r2, #1
   11a4c:	bl	11314 <error@plt>
   11a50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11a54:	add	fp, sp, #24
   11a58:	sub	sp, sp, #16
   11a5c:	sub	sp, sp, #8192	; 0x2000
   11a60:	mov	r5, r1
   11a64:	movw	r1, #27570	; 0x6bb2
   11a68:	mov	r6, r0
   11a6c:	movw	r0, #27419	; 0x6b1b
   11a70:	movt	r0, #1
   11a74:	movt	r1, #1
   11a78:	bl	114b8 <fopen64@plt>
   11a7c:	mov	r7, #0
   11a80:	cmp	r0, #0
   11a84:	mov	r9, #0
   11a88:	beq	11b00 <putchar_unlocked@plt+0x5dc>
   11a8c:	mov	r4, r0
   11a90:	add	r8, sp, #8
   11a94:	mov	r1, #8192	; 0x2000
   11a98:	mov	r0, r8
   11a9c:	mov	r2, r4
   11aa0:	bl	114c4 <fgets_unlocked@plt>
   11aa4:	mov	r9, #0
   11aa8:	cmp	r0, r8
   11aac:	bne	11af8 <putchar_unlocked@plt+0x5d4>
   11ab0:	sub	r1, fp, #32
   11ab4:	mov	r0, r8
   11ab8:	bl	11dd8 <putchar_unlocked@plt+0x8b4>
   11abc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ac0:	cmp	r8, r0
   11ac4:	beq	11af4 <putchar_unlocked@plt+0x5d0>
   11ac8:	vldr	d16, [pc, #768]	; 11dd0 <putchar_unlocked@plt+0x8ac>
   11acc:	vcvt.s32.f64	s2, d0
   11ad0:	mvn	r0, #0
   11ad4:	vcmpe.f64	d0, d16
   11ad8:	vmov	r9, s2
   11adc:	vmrs	APSR_nzcv, fpscr
   11ae0:	vcmpe.f64	d0, #0.0
   11ae4:	movpl	r9, r0
   11ae8:	vmrs	APSR_nzcv, fpscr
   11aec:	movlt	r9, r0
   11af0:	b	11af8 <putchar_unlocked@plt+0x5d4>
   11af4:	mov	r9, #0
   11af8:	mov	r0, r4
   11afc:	bl	11f48 <putchar_unlocked@plt+0xa24>
   11b00:	cmp	r6, #0
   11b04:	mov	r4, #0
   11b08:	beq	11b50 <putchar_unlocked@plt+0x62c>
   11b0c:	mov	r4, #0
   11b10:	mov	r7, #0
   11b14:	ldrb	r0, [r5, #44]	; 0x2c
   11b18:	ldrh	r1, [r5]
   11b1c:	sub	r6, r6, #1
   11b20:	cmp	r0, #0
   11b24:	sub	r2, r1, #7
   11b28:	movwne	r0, #1
   11b2c:	cmp	r1, #2
   11b30:	clz	r2, r2
   11b34:	ldreq	r7, [r5, #340]	; 0x154
   11b38:	lsr	r2, r2, #5
   11b3c:	add	r5, r5, #384	; 0x180
   11b40:	cmp	r6, #0
   11b44:	and	r0, r2, r0
   11b48:	add	r4, r4, r0
   11b4c:	bne	11b14 <putchar_unlocked@plt+0x5f0>
   11b50:	mov	r0, #0
   11b54:	bl	1126c <time@plt>
   11b58:	cmp	r9, #0
   11b5c:	str	r0, [fp, #-32]	; 0xffffffe0
   11b60:	bne	11b70 <putchar_unlocked@plt+0x64c>
   11b64:	cmp	r7, #0
   11b68:	beq	11da4 <putchar_unlocked@plt+0x880>
   11b6c:	sub	r9, r0, r7
   11b70:	sub	r0, fp, #32
   11b74:	bl	1135c <localtime@plt>
   11b78:	cmp	r0, #0
   11b7c:	beq	11bc4 <putchar_unlocked@plt+0x6a0>
   11b80:	mov	r5, r0
   11b84:	movw	r0, #33164	; 0x818c
   11b88:	movw	r1, #27455	; 0x6b3f
   11b8c:	mov	r2, #5
   11b90:	mov	r7, #0
   11b94:	movt	r0, #2
   11b98:	movt	r1, #1
   11b9c:	ldr	r6, [r0]
   11ba0:	mov	r0, #0
   11ba4:	bl	11278 <dcgettext@plt>
   11ba8:	mov	r1, r0
   11bac:	mov	r0, r6
   11bb0:	mov	r2, r5
   11bb4:	mov	r3, #0
   11bb8:	str	r7, [sp]
   11bbc:	bl	12040 <putchar_unlocked@plt+0xb1c>
   11bc0:	b	11be4 <putchar_unlocked@plt+0x6c0>
   11bc4:	movw	r1, #27467	; 0x6b4b
   11bc8:	mov	r0, #0
   11bcc:	mov	r2, #5
   11bd0:	movt	r1, #1
   11bd4:	bl	11278 <dcgettext@plt>
   11bd8:	mov	r1, r0
   11bdc:	mov	r0, #1
   11be0:	bl	11410 <__printf_chk@plt>
   11be4:	cmn	r9, #1
   11be8:	beq	11c8c <putchar_unlocked@plt+0x768>
   11bec:	movw	r0, #17671	; 0x4507
   11bf0:	movt	r0, #49710	; 0xc22e
   11bf4:	smmla	r0, r9, r0, r9
   11bf8:	asr	r1, r0, #16
   11bfc:	add	r6, r1, r0, lsr #31
   11c00:	movw	r0, #44672	; 0xae80
   11c04:	movw	r1, #46021	; 0xb3c5
   11c08:	movt	r0, #65534	; 0xfffe
   11c0c:	movt	r1, #37282	; 0x91a2
   11c10:	mla	r0, r6, r0, r9
   11c14:	smmla	r1, r0, r1, r0
   11c18:	asr	r2, r1, #11
   11c1c:	add	r5, r2, r1, lsr #31
   11c20:	movw	r1, #61936	; 0xf1f0
   11c24:	movt	r1, #65535	; 0xffff
   11c28:	mla	r0, r5, r1, r0
   11c2c:	movw	r1, #34953	; 0x8889
   11c30:	movt	r1, #34952	; 0x8888
   11c34:	smmla	r0, r0, r1, r0
   11c38:	asr	r1, r0, #5
   11c3c:	add	r8, r1, r0, lsr #31
   11c40:	movw	r0, #20864	; 0x5180
   11c44:	movt	r0, #1
   11c48:	cmp	r9, r0
   11c4c:	blt	11cb0 <putchar_unlocked@plt+0x78c>
   11c50:	movw	r1, #27500	; 0x6b6c
   11c54:	movw	r2, #27523	; 0x6b83
   11c58:	mov	r0, #5
   11c5c:	mov	r3, r6
   11c60:	movt	r1, #1
   11c64:	movt	r2, #1
   11c68:	str	r0, [sp]
   11c6c:	mov	r0, #0
   11c70:	bl	11518 <dcngettext@plt>
   11c74:	mov	r1, r0
   11c78:	str	r8, [sp]
   11c7c:	mov	r0, #1
   11c80:	mov	r2, r6
   11c84:	mov	r3, r5
   11c88:	b	11cd4 <putchar_unlocked@plt+0x7b0>
   11c8c:	movw	r1, #27478	; 0x6b56
   11c90:	mov	r0, #0
   11c94:	mov	r2, #5
   11c98:	movt	r1, #1
   11c9c:	bl	11278 <dcgettext@plt>
   11ca0:	mov	r1, r0
   11ca4:	mov	r0, #1
   11ca8:	bl	11410 <__printf_chk@plt>
   11cac:	b	11cd8 <putchar_unlocked@plt+0x7b4>
   11cb0:	movw	r1, #27547	; 0x6b9b
   11cb4:	mov	r0, #0
   11cb8:	mov	r2, #5
   11cbc:	movt	r1, #1
   11cc0:	bl	11278 <dcgettext@plt>
   11cc4:	mov	r1, r0
   11cc8:	mov	r0, #1
   11ccc:	mov	r2, r5
   11cd0:	mov	r3, r8
   11cd4:	bl	11410 <__printf_chk@plt>
   11cd8:	movw	r1, #27563	; 0x6bab
   11cdc:	movw	r2, #27572	; 0x6bb4
   11ce0:	mov	r0, #5
   11ce4:	mov	r3, r4
   11ce8:	movt	r1, #1
   11cec:	movt	r2, #1
   11cf0:	str	r0, [sp]
   11cf4:	mov	r0, #0
   11cf8:	bl	11518 <dcngettext@plt>
   11cfc:	mov	r1, r0
   11d00:	mov	r0, #1
   11d04:	mov	r2, r4
   11d08:	bl	11410 <__printf_chk@plt>
   11d0c:	add	r0, sp, #8
   11d10:	mov	r1, #3
   11d14:	bl	1144c <getloadavg@plt>
   11d18:	cmn	r0, #1
   11d1c:	beq	11d94 <putchar_unlocked@plt+0x870>
   11d20:	mov	r4, r0
   11d24:	cmp	r0, #1
   11d28:	blt	11d9c <putchar_unlocked@plt+0x878>
   11d2c:	movw	r1, #27582	; 0x6bbe
   11d30:	mov	r0, #0
   11d34:	mov	r2, #5
   11d38:	movt	r1, #1
   11d3c:	bl	11278 <dcgettext@plt>
   11d40:	vldr	d16, [sp, #8]
   11d44:	mov	r1, r0
   11d48:	mov	r0, #1
   11d4c:	vmov	r2, r3, d16
   11d50:	bl	11410 <__printf_chk@plt>
   11d54:	cmp	r4, #1
   11d58:	beq	11d94 <putchar_unlocked@plt+0x870>
   11d5c:	vldr	d16, [sp, #16]
   11d60:	movw	r1, #27604	; 0x6bd4
   11d64:	mov	r0, #1
   11d68:	movt	r1, #1
   11d6c:	vmov	r2, r3, d16
   11d70:	bl	11410 <__printf_chk@plt>
   11d74:	cmp	r4, #3
   11d78:	blt	11d94 <putchar_unlocked@plt+0x870>
   11d7c:	vldr	d16, [sp, #24]
   11d80:	movw	r1, #27604	; 0x6bd4
   11d84:	mov	r0, #1
   11d88:	movt	r1, #1
   11d8c:	vmov	r2, r3, d16
   11d90:	bl	11410 <__printf_chk@plt>
   11d94:	mov	r0, #10
   11d98:	bl	11524 <putchar_unlocked@plt>
   11d9c:	sub	sp, fp, #24
   11da0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11da4:	bl	113e0 <__errno_location@plt>
   11da8:	movw	r1, #27432	; 0x6b28
   11dac:	ldr	r4, [r0]
   11db0:	mov	r0, #0
   11db4:	mov	r2, #5
   11db8:	movt	r1, #1
   11dbc:	bl	11278 <dcgettext@plt>
   11dc0:	mov	r2, r0
   11dc4:	mov	r0, #1
   11dc8:	mov	r1, r4
   11dcc:	bl	11314 <error@plt>
   11dd0:			; <UNDEFINED> instruction: 0xffc00000
   11dd4:	ldrshmi	pc, [pc, #255]	; 11edb <putchar_unlocked@plt+0x9b7>	; <UNPREDICTABLE>
   11dd8:	push	{r4, r5, r6, sl, fp, lr}
   11ddc:	add	fp, sp, #16
   11de0:	movw	r6, #33176	; 0x8198
   11de4:	mov	r5, r0
   11de8:	mov	r4, r1
   11dec:	movt	r6, #2
   11df0:	ldr	r0, [r6]
   11df4:	cmp	r0, #0
   11df8:	bne	11e14 <putchar_unlocked@plt+0x8f0>
   11dfc:	movw	r1, #27687	; 0x6c27
   11e00:	movw	r0, #8127	; 0x1fbf
   11e04:	mov	r2, #0
   11e08:	movt	r1, #1
   11e0c:	bl	114a0 <newlocale@plt>
   11e10:	str	r0, [r6]
   11e14:	ldr	r2, [r6]
   11e18:	cmp	r2, #0
   11e1c:	beq	11e30 <putchar_unlocked@plt+0x90c>
   11e20:	mov	r0, r5
   11e24:	mov	r1, r4
   11e28:	pop	{r4, r5, r6, sl, fp, lr}
   11e2c:	b	11458 <strtod_l@plt>
   11e30:	vmov.i32	d0, #0	; 0x00000000
   11e34:	cmp	r4, #0
   11e38:	strne	r5, [r4]
   11e3c:	pop	{r4, r5, r6, sl, fp, pc}
   11e40:	movw	r1, #33180	; 0x819c
   11e44:	movt	r1, #2
   11e48:	str	r0, [r1]
   11e4c:	bx	lr
   11e50:	movw	r1, #33184	; 0x81a0
   11e54:	movt	r1, #2
   11e58:	strb	r0, [r1]
   11e5c:	bx	lr
   11e60:	push	{r4, r5, r6, sl, fp, lr}
   11e64:	add	fp, sp, #16
   11e68:	sub	sp, sp, #8
   11e6c:	movw	r0, #33164	; 0x818c
   11e70:	movt	r0, #2
   11e74:	ldr	r0, [r0]
   11e78:	bl	16468 <putchar_unlocked@plt+0x4f44>
   11e7c:	cmp	r0, #0
   11e80:	beq	11ea8 <putchar_unlocked@plt+0x984>
   11e84:	movw	r0, #33184	; 0x81a0
   11e88:	movt	r0, #2
   11e8c:	ldrb	r0, [r0]
   11e90:	cmp	r0, #0
   11e94:	beq	11ec8 <putchar_unlocked@plt+0x9a4>
   11e98:	bl	113e0 <__errno_location@plt>
   11e9c:	ldr	r0, [r0]
   11ea0:	cmp	r0, #32
   11ea4:	bne	11ec8 <putchar_unlocked@plt+0x9a4>
   11ea8:	movw	r0, #33160	; 0x8188
   11eac:	movt	r0, #2
   11eb0:	ldr	r0, [r0]
   11eb4:	bl	16468 <putchar_unlocked@plt+0x4f44>
   11eb8:	cmp	r0, #0
   11ebc:	subeq	sp, fp, #16
   11ec0:	popeq	{r4, r5, r6, sl, fp, pc}
   11ec4:	b	11f38 <putchar_unlocked@plt+0xa14>
   11ec8:	movw	r1, #27689	; 0x6c29
   11ecc:	mov	r0, #0
   11ed0:	mov	r2, #5
   11ed4:	movt	r1, #1
   11ed8:	bl	11278 <dcgettext@plt>
   11edc:	mov	r4, r0
   11ee0:	movw	r0, #33180	; 0x819c
   11ee4:	movt	r0, #2
   11ee8:	ldr	r6, [r0]
   11eec:	bl	113e0 <__errno_location@plt>
   11ef0:	ldr	r5, [r0]
   11ef4:	cmp	r6, #0
   11ef8:	bne	11f14 <putchar_unlocked@plt+0x9f0>
   11efc:	movw	r2, #27705	; 0x6c39
   11f00:	mov	r0, #0
   11f04:	mov	r1, r5
   11f08:	mov	r3, r4
   11f0c:	movt	r2, #1
   11f10:	b	11f34 <putchar_unlocked@plt+0xa10>
   11f14:	mov	r0, r6
   11f18:	bl	1508c <putchar_unlocked@plt+0x3b68>
   11f1c:	movw	r2, #27701	; 0x6c35
   11f20:	mov	r3, r0
   11f24:	str	r4, [sp]
   11f28:	mov	r0, #0
   11f2c:	mov	r1, r5
   11f30:	movt	r2, #1
   11f34:	bl	11314 <error@plt>
   11f38:	movw	r0, #33076	; 0x8134
   11f3c:	movt	r0, #2
   11f40:	ldr	r0, [r0]
   11f44:	bl	11248 <_exit@plt>
   11f48:	push	{r4, r5, r6, sl, fp, lr}
   11f4c:	add	fp, sp, #16
   11f50:	sub	sp, sp, #8
   11f54:	mov	r4, r0
   11f58:	bl	1141c <fileno@plt>
   11f5c:	cmn	r0, #1
   11f60:	ble	11fd4 <putchar_unlocked@plt+0xab0>
   11f64:	mov	r0, r4
   11f68:	bl	11350 <__freading@plt>
   11f6c:	cmp	r0, #0
   11f70:	beq	11f9c <putchar_unlocked@plt+0xa78>
   11f74:	mov	r0, r4
   11f78:	bl	1141c <fileno@plt>
   11f7c:	mov	r1, #1
   11f80:	mov	r2, #0
   11f84:	mov	r3, #0
   11f88:	str	r1, [sp]
   11f8c:	bl	112d8 <lseek64@plt>
   11f90:	and	r0, r0, r1
   11f94:	cmn	r0, #1
   11f98:	beq	11fd4 <putchar_unlocked@plt+0xab0>
   11f9c:	mov	r0, r4
   11fa0:	bl	11fe4 <putchar_unlocked@plt+0xac0>
   11fa4:	cmp	r0, #0
   11fa8:	beq	11fd4 <putchar_unlocked@plt+0xab0>
   11fac:	bl	113e0 <__errno_location@plt>
   11fb0:	ldr	r6, [r0]
   11fb4:	mov	r5, r0
   11fb8:	mov	r0, r4
   11fbc:	bl	11434 <fclose@plt>
   11fc0:	cmp	r6, #0
   11fc4:	strne	r6, [r5]
   11fc8:	mvnne	r0, #0
   11fcc:	sub	sp, fp, #16
   11fd0:	pop	{r4, r5, r6, sl, fp, pc}
   11fd4:	mov	r0, r4
   11fd8:	sub	sp, fp, #16
   11fdc:	pop	{r4, r5, r6, sl, fp, lr}
   11fe0:	b	11434 <fclose@plt>
   11fe4:	push	{r4, sl, fp, lr}
   11fe8:	add	fp, sp, #8
   11fec:	sub	sp, sp, #8
   11ff0:	mov	r4, r0
   11ff4:	cmp	r0, #0
   11ff8:	beq	12030 <putchar_unlocked@plt+0xb0c>
   11ffc:	mov	r0, r4
   12000:	bl	11350 <__freading@plt>
   12004:	cmp	r0, #0
   12008:	beq	12030 <putchar_unlocked@plt+0xb0c>
   1200c:	ldrb	r0, [r4, #1]
   12010:	tst	r0, #1
   12014:	beq	12030 <putchar_unlocked@plt+0xb0c>
   12018:	mov	r0, #1
   1201c:	mov	r2, #0
   12020:	mov	r3, #0
   12024:	str	r0, [sp]
   12028:	mov	r0, r4
   1202c:	bl	136c8 <putchar_unlocked@plt+0x21a4>
   12030:	mov	r0, r4
   12034:	sub	sp, fp, #8
   12038:	pop	{r4, sl, fp, lr}
   1203c:	b	11224 <fflush@plt>
   12040:	push	{fp, lr}
   12044:	mov	fp, sp
   12048:	sub	sp, sp, #16
   1204c:	str	r3, [sp, #8]
   12050:	mvn	r3, #0
   12054:	str	r3, [sp, #4]
   12058:	mov	r3, #0
   1205c:	str	r3, [sp]
   12060:	ldr	r3, [fp, #8]
   12064:	str	r3, [sp, #12]
   12068:	mov	r3, #0
   1206c:	bl	12078 <putchar_unlocked@plt+0xb54>
   12070:	mov	sp, fp
   12074:	pop	{fp, pc}
   12078:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1207c:	add	fp, sp, #28
   12080:	sub	sp, sp, #116	; 0x74
   12084:	sub	sp, sp, #1024	; 0x400
   12088:	str	r3, [sp, #72]	; 0x48
   1208c:	mov	r4, r2
   12090:	mov	r9, r1
   12094:	mov	r5, r0
   12098:	bl	113e0 <__errno_location@plt>
   1209c:	mov	r2, r4
   120a0:	ldrb	r3, [r9]
   120a4:	str	r0, [sp, #52]	; 0x34
   120a8:	ldr	r0, [r0]
   120ac:	movw	r6, #26880	; 0x6900
   120b0:	ldr	r1, [r2, #8]!
   120b4:	movt	r6, #1
   120b8:	str	r0, [sp, #44]	; 0x2c
   120bc:	cmp	r1, #0
   120c0:	mov	r7, r1
   120c4:	movweq	r7, #12
   120c8:	cmp	r1, #12
   120cc:	subgt	r7, r1, #12
   120d0:	ldr	r1, [r2, #32]
   120d4:	cmp	r1, #0
   120d8:	movne	r6, r1
   120dc:	cmp	r3, #0
   120e0:	beq	13608 <putchar_unlocked@plt+0x20e4>
   120e4:	sub	r0, fp, #46	; 0x2e
   120e8:	ldr	r8, [fp, #12]
   120ec:	str	r2, [sp, #28]
   120f0:	mov	sl, #0
   120f4:	str	r5, [sp, #76]	; 0x4c
   120f8:	str	r6, [sp, #32]
   120fc:	str	r7, [sp, #24]
   12100:	str	r4, [sp, #68]	; 0x44
   12104:	add	r1, r0, #13
   12108:	add	r0, r0, #14
   1210c:	str	r1, [sp, #16]
   12110:	add	r1, sp, #88	; 0x58
   12114:	str	r0, [sp, #56]	; 0x38
   12118:	add	r1, r1, #1
   1211c:	str	r1, [sp, #36]	; 0x24
   12120:	sub	r1, fp, #51	; 0x33
   12124:	add	r2, r1, #3
   12128:	add	r1, r1, #2
   1212c:	str	r1, [sp, #60]	; 0x3c
   12130:	add	r1, r4, #12
   12134:	str	r2, [sp, #40]	; 0x28
   12138:	str	r1, [sp, #20]
   1213c:	uxtb	r1, r3
   12140:	mov	r5, r9
   12144:	cmp	r1, #37	; 0x25
   12148:	bne	121c0 <putchar_unlocked@plt+0xc9c>
   1214c:	ldr	r2, [sp, #72]	; 0x48
   12150:	str	sl, [sp, #84]	; 0x54
   12154:	mov	r4, #0
   12158:	mov	r0, #0
   1215c:	mov	r9, r5
   12160:	add	r1, r9, #2
   12164:	add	r9, r9, #1
   12168:	mov	sl, r0
   1216c:	ldrb	r0, [r9]
   12170:	cmp	r0, #47	; 0x2f
   12174:	bgt	12188 <putchar_unlocked@plt+0xc64>
   12178:	cmp	r0, #43	; 0x2b
   1217c:	cmpne	r0, #45	; 0x2d
   12180:	beq	12194 <putchar_unlocked@plt+0xc70>
   12184:	b	1219c <putchar_unlocked@plt+0xc78>
   12188:	cmp	r0, #48	; 0x30
   1218c:	cmpne	r0, #95	; 0x5f
   12190:	bne	121ac <putchar_unlocked@plt+0xc88>
   12194:	add	r1, r1, #1
   12198:	b	12164 <putchar_unlocked@plt+0xc40>
   1219c:	cmp	r0, #35	; 0x23
   121a0:	bne	12234 <putchar_unlocked@plt+0xd10>
   121a4:	mov	r4, #1
   121a8:	b	121b8 <putchar_unlocked@plt+0xc94>
   121ac:	cmp	r0, #94	; 0x5e
   121b0:	bne	12234 <putchar_unlocked@plt+0xd10>
   121b4:	mov	r2, #1
   121b8:	mov	r0, sl
   121bc:	b	12160 <putchar_unlocked@plt+0xc3c>
   121c0:	bic	r1, r8, r8, asr #31
   121c4:	mov	r4, #1
   121c8:	mvn	r2, sl
   121cc:	cmp	r1, #1
   121d0:	movhi	r4, r1
   121d4:	cmp	r4, r2
   121d8:	bcs	1361c <putchar_unlocked@plt+0x20f8>
   121dc:	ldr	r7, [sp, #76]	; 0x4c
   121e0:	cmp	r7, #0
   121e4:	beq	12228 <putchar_unlocked@plt+0xd04>
   121e8:	cmp	r1, #2
   121ec:	bcc	1221c <putchar_unlocked@plt+0xcf8>
   121f0:	mov	r8, r5
   121f4:	sub	r5, r1, #1
   121f8:	mov	r6, #0
   121fc:	mov	r0, #32
   12200:	mov	r1, r7
   12204:	bl	11494 <fputc@plt>
   12208:	add	r6, r6, #1
   1220c:	cmp	r6, r5
   12210:	bcc	121fc <putchar_unlocked@plt+0xcd8>
   12214:	ldrb	r3, [r8]
   12218:	mov	r5, r8
   1221c:	uxtb	r0, r3
   12220:	mov	r1, r7
   12224:	bl	11494 <fputc@plt>
   12228:	add	sl, r4, sl
   1222c:	mov	r9, r5
   12230:	b	13440 <putchar_unlocked@plt+0x1f1c>
   12234:	str	r2, [sp, #80]	; 0x50
   12238:	sub	r2, r0, #48	; 0x30
   1223c:	cmp	r2, #9
   12240:	bhi	122ac <putchar_unlocked@plt+0xd88>
   12244:	movw	r6, #52428	; 0xcccc
   12248:	mov	r8, #0
   1224c:	mov	r7, #-2147483648	; 0x80000000
   12250:	movt	r6, #3276	; 0xccc
   12254:	cmn	r8, #1
   12258:	ble	12268 <putchar_unlocked@plt+0xd44>
   1225c:	cmp	r8, r6
   12260:	bgt	12278 <putchar_unlocked@plt+0xd54>
   12264:	b	12280 <putchar_unlocked@plt+0xd5c>
   12268:	beq	12280 <putchar_unlocked@plt+0xd5c>
   1226c:	sdiv	r2, r7, r8
   12270:	cmp	r2, #10
   12274:	bge	12280 <putchar_unlocked@plt+0xd5c>
   12278:	mvn	r8, #-2147483648	; 0x80000000
   1227c:	b	12298 <putchar_unlocked@plt+0xd74>
   12280:	add	r2, r8, r8, lsl #2
   12284:	lsl	r3, r2, #1
   12288:	uxtab	r0, r3, r0
   1228c:	sub	r8, r0, #48	; 0x30
   12290:	cmp	r8, r2, lsl #1
   12294:	mvnvs	r8, #-2147483648	; 0x80000000
   12298:	ldrb	r0, [r1], #1
   1229c:	sub	r2, r0, #48	; 0x30
   122a0:	cmp	r2, #10
   122a4:	bcc	12254 <putchar_unlocked@plt+0xd30>
   122a8:	sub	r9, r1, #1
   122ac:	cmp	r0, #79	; 0x4f
   122b0:	cmpne	r0, #69	; 0x45
   122b4:	bne	122c0 <putchar_unlocked@plt+0xd9c>
   122b8:	ldrb	ip, [r9, #1]!
   122bc:	b	122c8 <putchar_unlocked@plt+0xda4>
   122c0:	mov	ip, r0
   122c4:	mov	r0, #0
   122c8:	sub	r1, ip, #37	; 0x25
   122cc:	cmp	r1, #85	; 0x55
   122d0:	bhi	12560 <putchar_unlocked@plt+0x103c>
   122d4:	movw	lr, #26215	; 0x6667
   122d8:	movw	r3, #27726	; 0x6c4e
   122dc:	add	r2, pc, #16
   122e0:	mov	r7, #0
   122e4:	mvn	r6, #0
   122e8:	movt	lr, #26214	; 0x6666
   122ec:	movt	r3, #1
   122f0:	ldr	pc, [r2, r1, lsl #2]
   122f4:	andeq	r2, r1, ip, ror #10
   122f8:	ldrdeq	r3, [r1], -r4
   122fc:	ldrdeq	r3, [r1], -r4
   12300:	ldrdeq	r3, [r1], -r4
   12304:	ldrdeq	r3, [r1], -r4
   12308:	ldrdeq	r3, [r1], -r4
   1230c:	ldrdeq	r3, [r1], -r4
   12310:	ldrdeq	r3, [r1], -r4
   12314:	ldrdeq	r3, [r1], -r4
   12318:	ldrdeq	r3, [r1], -r4
   1231c:	ldrdeq	r3, [r1], -r4
   12320:	ldrdeq	r3, [r1], -r4
   12324:	ldrdeq	r3, [r1], -r4
   12328:	ldrdeq	r3, [r1], -r4
   1232c:	ldrdeq	r3, [r1], -r4
   12330:	ldrdeq	r3, [r1], -r4
   12334:	ldrdeq	r3, [r1], -r4
   12338:	ldrdeq	r3, [r1], -r4
   1233c:	ldrdeq	r3, [r1], -r4
   12340:	ldrdeq	r3, [r1], -r4
   12344:	ldrdeq	r3, [r1], -r4
   12348:	andeq	r2, r1, r0, lsl #11
   1234c:	ldrdeq	r3, [r1], -r4
   12350:	ldrdeq	r3, [r1], -r4
   12354:	ldrdeq	r3, [r1], -r4
   12358:	ldrdeq	r3, [r1], -r4
   1235c:	ldrdeq	r3, [r1], -r4
   12360:	ldrdeq	r3, [r1], -r4
   12364:	muleq	r1, r8, r5
   12368:			; <UNDEFINED> instruction: 0x000125b0
   1236c:	andeq	r2, r1, r8, asr #11
   12370:	ldrdeq	r2, [r1], -ip
   12374:	ldrdeq	r3, [r1], -r4
   12378:	strdeq	r2, [r1], -r4
   1237c:	andeq	r2, r1, ip, asr #8
   12380:	andeq	r2, r1, r0, lsr #12
   12384:	andeq	r2, r1, r0, lsr r6
   12388:	ldrdeq	r3, [r1], -r4
   1238c:	ldrdeq	r3, [r1], -r4
   12390:	ldrdeq	r3, [r1], -r4
   12394:	andeq	r2, r1, r8, asr #12
   12398:	andeq	r2, r1, ip, asr r6
   1239c:	ldrdeq	r3, [r1], -r4
   123a0:	andeq	r2, r1, r0, asr #13
   123a4:	ldrdeq	r3, [r1], -r4
   123a8:	strdeq	r2, [r1], -r8
   123ac:	andeq	r2, r1, r0, ror #13
   123b0:	strdeq	r2, [r1], -r0
   123b4:	andeq	r2, r1, ip, lsr #15
   123b8:	andeq	r2, r1, ip, asr #8
   123bc:	ldrdeq	r2, [r1], -r8
   123c0:	andeq	r2, r1, r4, lsr #16
   123c4:	andeq	r2, r1, r8, lsr r8
   123c8:	andeq	r2, r1, r4, ror #16
   123cc:	ldrdeq	r3, [r1], -r4
   123d0:	ldrdeq	r3, [r1], -r4
   123d4:	ldrdeq	r3, [r1], -r4
   123d8:	ldrdeq	r3, [r1], -r4
   123dc:	ldrdeq	r3, [r1], -r4
   123e0:	ldrdeq	r3, [r1], -r4
   123e4:	ldrdeq	r2, [r1], -ip
   123e8:	andeq	r2, r1, r8, asr #10
   123ec:	strdeq	r2, [r1], -ip
   123f0:	andeq	r2, r1, r0, lsl r9
   123f4:	andeq	r2, r1, r4, lsr #18
   123f8:	ldrdeq	r3, [r1], -r4
   123fc:	andeq	r2, r1, ip, asr #8
   12400:	andeq	r2, r1, r8, asr #10
   12404:	ldrdeq	r3, [r1], -r4
   12408:	andeq	r2, r1, ip, lsr #18
   1240c:	andeq	r2, r1, r0, asr r9
   12410:	andeq	r2, r1, r4, ror #18
   12414:	andeq	r2, r1, ip, ror r9
   12418:	andeq	r2, r1, r8, lsr #19
   1241c:	ldrdeq	r3, [r1], -r4
   12420:	andeq	r2, r1, r4, asr #13
   12424:	andeq	r2, r1, r8, lsr #20
   12428:			; <UNDEFINED> instruction: 0x000132b8
   1242c:	andeq	r2, r1, r0, asr sl
   12430:	andeq	r2, r1, r8, ror #21
   12434:	andeq	r2, r1, r8, ror #22
   12438:	ldrdeq	r3, [r1], -r4
   1243c:	muleq	r1, r8, fp
   12440:			; <UNDEFINED> instruction: 0x00012bb0
   12444:	andeq	r2, r1, r4, asr #23
   12448:	andeq	r2, r1, r4, ror #23
   1244c:	cmp	r0, #69	; 0x45
   12450:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   12454:	ldr	r1, [sp, #68]	; 0x44
   12458:	movw	r6, #9363	; 0x2493
   1245c:	movw	r7, #382	; 0x17e
   12460:	movt	r6, #37449	; 0x9249
   12464:	ldr	r2, [r1, #24]
   12468:	ldr	r3, [r1, #28]
   1246c:	ldr	lr, [r1, #20]
   12470:	sub	r1, r3, r2
   12474:	cmp	lr, #0
   12478:	add	r1, r1, r7
   1247c:	smmla	r4, r1, r6, r1
   12480:	asr	r7, r4, #2
   12484:	add	r4, r7, r4, lsr #31
   12488:	rsb	r4, r4, r4, lsl #3
   1248c:	sub	r1, r4, r1
   12490:	add	r1, r3, r1
   12494:	add	r7, r1, #3
   12498:	mvn	r1, #99	; 0x63
   1249c:	movwmi	r1, #300	; 0x12c
   124a0:	add	r4, r1, lr
   124a4:	cmn	r7, #1
   124a8:	ble	12c20 <putchar_unlocked@plt+0x16fc>
   124ac:	movw	r1, #365	; 0x16d
   124b0:	tst	r4, #3
   124b4:	bne	12508 <putchar_unlocked@plt+0xfe4>
   124b8:	movw	r1, #34079	; 0x851f
   124bc:	mov	r6, lr
   124c0:	mov	lr, #100	; 0x64
   124c4:	movt	r1, #20971	; 0x51eb
   124c8:	smmul	r1, r4, r1
   124cc:	asr	r5, r1, #5
   124d0:	add	r5, r5, r1, lsr #31
   124d4:	mls	lr, r5, lr, r4
   124d8:	asr	r5, r1, #7
   124dc:	add	r1, r5, r1, lsr #31
   124e0:	mov	r5, #400	; 0x190
   124e4:	mls	r4, r1, r5, r4
   124e8:	movw	r1, #365	; 0x16d
   124ec:	cmp	r4, #0
   124f0:	movweq	r1, #366	; 0x16e
   124f4:	cmp	lr, #0
   124f8:	mov	lr, r6
   124fc:	movw	r6, #9363	; 0x2493
   12500:	movt	r6, #37449	; 0x9249
   12504:	movwne	r1, #366	; 0x16e
   12508:	add	r1, r2, r1
   1250c:	sub	r1, r3, r1
   12510:	movw	r3, #382	; 0x17e
   12514:	add	r1, r1, r3
   12518:	smmla	r1, r1, r6, r1
   1251c:	asr	r3, r1, #2
   12520:	add	r1, r3, r1, lsr #31
   12524:	rsb	r1, r1, r1, lsl #3
   12528:	add	r1, r2, r1
   1252c:	movw	r2, #379	; 0x17b
   12530:	sub	r1, r1, r2
   12534:	cmn	r1, #1
   12538:	movgt	r7, r1
   1253c:	mvn	r1, r1
   12540:	lsr	r3, r1, #31
   12544:	b	12c9c <putchar_unlocked@plt+0x1778>
   12548:	ldr	r2, [sp, #80]	; 0x50
   1254c:	mov	r7, #0
   12550:	cmp	r0, #69	; 0x45
   12554:	orr	r2, r4, r2
   12558:	beq	131d8 <putchar_unlocked@plt+0x1cb4>
   1255c:	b	126d8 <putchar_unlocked@plt+0x11b4>
   12560:	cmp	ip, #0
   12564:	subeq	r9, r9, #1
   12568:	b	131d4 <putchar_unlocked@plt+0x1cb0>
   1256c:	sub	r0, r9, #1
   12570:	cmp	r0, r5
   12574:	beq	130bc <putchar_unlocked@plt+0x1b98>
   12578:	sub	r9, r9, #1
   1257c:	b	131d4 <putchar_unlocked@plt+0x1cb0>
   12580:	mov	r7, #1
   12584:	ldrb	r1, [r9, r7]
   12588:	cmp	r1, #58	; 0x3a
   1258c:	bne	12bd8 <putchar_unlocked@plt+0x16b4>
   12590:	add	r7, r7, #1
   12594:	b	12584 <putchar_unlocked@plt+0x1060>
   12598:	cmp	r0, #0
   1259c:	bne	131d4 <putchar_unlocked@plt+0x1cb0>
   125a0:	ldr	r1, [sp, #80]	; 0x50
   125a4:	mov	r7, #0
   125a8:	mov	ip, #65	; 0x41
   125ac:	b	128f0 <putchar_unlocked@plt+0x13cc>
   125b0:	cmp	r0, #69	; 0x45
   125b4:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   125b8:	ldr	r1, [sp, #80]	; 0x50
   125bc:	mov	r7, #0
   125c0:	mov	ip, #66	; 0x42
   125c4:	b	128f0 <putchar_unlocked@plt+0x13cc>
   125c8:	cmp	r0, #69	; 0x45
   125cc:	bne	12cf8 <putchar_unlocked@plt+0x17d4>
   125d0:	mov	r7, #0
   125d4:	mov	ip, #67	; 0x43
   125d8:	b	132b8 <putchar_unlocked@plt+0x1d94>
   125dc:	cmp	r0, #0
   125e0:	bne	131d4 <putchar_unlocked@plt+0x1cb0>
   125e4:	movw	r3, #27708	; 0x6c3c
   125e8:	mvn	r6, #0
   125ec:	movt	r3, #1
   125f0:	b	126f8 <putchar_unlocked@plt+0x11d4>
   125f4:	cmp	r0, #0
   125f8:	bne	131d4 <putchar_unlocked@plt+0x1cb0>
   125fc:	movw	r3, #27717	; 0x6c45
   12600:	cmp	sl, #0
   12604:	movt	r3, #1
   12608:	bne	13454 <putchar_unlocked@plt+0x1f30>
   1260c:	cmp	r8, #0
   12610:	bpl	13454 <putchar_unlocked@plt+0x1f30>
   12614:	mov	sl, #43	; 0x2b
   12618:	mov	r6, #4
   1261c:	b	126f8 <putchar_unlocked@plt+0x11d4>
   12620:	cmp	r0, #69	; 0x45
   12624:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   12628:	ldr	r1, [sp, #28]
   1262c:	b	1291c <putchar_unlocked@plt+0x13f8>
   12630:	mov	r1, #2
   12634:	cmp	r0, #69	; 0x45
   12638:	str	r1, [sp, #64]	; 0x40
   1263c:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   12640:	ldr	r3, [sp, #24]
   12644:	b	12e98 <putchar_unlocked@plt+0x1974>
   12648:	cmp	r0, #69	; 0x45
   1264c:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   12650:	ldr	r1, [sp, #68]	; 0x44
   12654:	ldr	r3, [r1, #4]
   12658:	b	12e90 <putchar_unlocked@plt+0x196c>
   1265c:	cmp	r0, #69	; 0x45
   12660:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   12664:	ldr	r1, [fp, #20]
   12668:	cmp	r8, #1
   1266c:	mov	r4, #0
   12670:	mov	r0, #8
   12674:	movwlt	r8, #9
   12678:	add	r2, r4, #9
   1267c:	cmp	r8, r2
   12680:	blt	126a8 <putchar_unlocked@plt+0x1184>
   12684:	cmp	r2, #2
   12688:	blt	12d4c <putchar_unlocked@plt+0x1828>
   1268c:	smmul	r3, r1, lr
   12690:	asr	r5, r3, #2
   12694:	add	r3, r5, r3, lsr #31
   12698:	add	r3, r3, r3, lsl #2
   1269c:	sub	r3, r1, r3, lsl #1
   126a0:	cmp	r3, #0
   126a4:	bne	12d4c <putchar_unlocked@plt+0x1828>
   126a8:	smmul	r1, r1, lr
   126ac:	sub	r0, r0, #1
   126b0:	sub	r4, r4, #1
   126b4:	asr	r2, r1, #2
   126b8:	add	r1, r2, r1, lsr #31
   126bc:	b	12678 <putchar_unlocked@plt+0x1154>
   126c0:	mov	r7, #1
   126c4:	ldr	r2, [sp, #80]	; 0x50
   126c8:	eor	r1, r4, #1
   126cc:	orr	r7, r4, r7
   126d0:	mov	ip, #112	; 0x70
   126d4:	and	r2, r2, r1
   126d8:	str	r2, [sp, #80]	; 0x50
   126dc:	b	132b8 <putchar_unlocked@plt+0x1d94>
   126e0:	cmp	r0, #69	; 0x45
   126e4:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   126e8:	ldr	r1, [sp, #68]	; 0x44
   126ec:	b	1291c <putchar_unlocked@plt+0x13f8>
   126f0:	movw	r3, #27732	; 0x6c54
   126f4:	movt	r3, #1
   126f8:	ldr	r0, [fp, #16]
   126fc:	ldr	r2, [sp, #68]	; 0x44
   12700:	mov	r5, r3
   12704:	mov	r1, r3
   12708:	str	sl, [sp]
   1270c:	str	r6, [sp, #4]
   12710:	str	r0, [sp, #8]
   12714:	ldr	r0, [fp, #20]
   12718:	str	r0, [sp, #12]
   1271c:	ldr	r0, [sp, #80]	; 0x50
   12720:	and	r7, r0, #1
   12724:	mov	r0, #0
   12728:	mov	r3, r7
   1272c:	bl	12078 <putchar_unlocked@plt+0xb54>
   12730:	subs	r1, sl, #45	; 0x2d
   12734:	ldr	r2, [sp, #84]	; 0x54
   12738:	movne	r1, r8
   1273c:	cmp	r8, #0
   12740:	mov	r8, r0
   12744:	movwmi	r1, #0
   12748:	cmp	r1, r0
   1274c:	movhi	r8, r1
   12750:	mvn	r2, r2
   12754:	cmp	r8, r2
   12758:	bcs	1361c <putchar_unlocked@plt+0x20f8>
   1275c:	str	r7, [sp, #80]	; 0x50
   12760:	ldr	r7, [sp, #76]	; 0x4c
   12764:	cmp	r7, #0
   12768:	beq	13438 <putchar_unlocked@plt+0x1f14>
   1276c:	mov	r4, r6
   12770:	cmp	r1, r0
   12774:	str	r5, [sp, #64]	; 0x40
   12778:	bls	1340c <putchar_unlocked@plt+0x1ee8>
   1277c:	cmp	sl, #43	; 0x2b
   12780:	sub	r6, r1, r0
   12784:	cmpne	sl, #48	; 0x30
   12788:	bne	133f0 <putchar_unlocked@plt+0x1ecc>
   1278c:	cmp	r6, #0
   12790:	beq	1340c <putchar_unlocked@plt+0x1ee8>
   12794:	mov	r0, #48	; 0x30
   12798:	mov	r1, r7
   1279c:	bl	11494 <fputc@plt>
   127a0:	subs	r6, r6, #1
   127a4:	bne	12794 <putchar_unlocked@plt+0x1270>
   127a8:	b	1340c <putchar_unlocked@plt+0x1ee8>
   127ac:	cmp	r0, #69	; 0x45
   127b0:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   127b4:	ldr	r2, [sp, #68]	; 0x44
   127b8:	ldr	r1, [r2, #24]
   127bc:	ldr	r2, [r2, #28]
   127c0:	sub	r1, r2, r1
   127c4:	movw	r2, #9363	; 0x2493
   127c8:	movt	r2, #37449	; 0x9249
   127cc:	add	r1, r1, #7
   127d0:	smmla	r1, r1, r2, r1
   127d4:	b	12818 <putchar_unlocked@plt+0x12f4>
   127d8:	cmp	r0, #69	; 0x45
   127dc:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   127e0:	ldr	r2, [sp, #68]	; 0x44
   127e4:	movw	r3, #9363	; 0x2493
   127e8:	movt	r3, #37449	; 0x9249
   127ec:	ldr	r1, [r2, #24]
   127f0:	ldr	r2, [r2, #28]
   127f4:	add	r1, r1, #6
   127f8:	smmla	r7, r1, r3, r1
   127fc:	asr	r5, r7, #2
   12800:	add	r7, r5, r7, lsr #31
   12804:	rsb	r7, r7, r7, lsl #3
   12808:	sub	r1, r7, r1
   1280c:	add	r1, r2, r1
   12810:	add	r1, r1, #7
   12814:	smmla	r1, r1, r3, r1
   12818:	asr	r2, r1, #2
   1281c:	add	r3, r2, r1, lsr #31
   12820:	b	12e90 <putchar_unlocked@plt+0x196c>
   12824:	cmp	r0, #79	; 0x4f
   12828:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   1282c:	mov	r7, #0
   12830:	mov	ip, #88	; 0x58
   12834:	b	132b8 <putchar_unlocked@plt+0x1d94>
   12838:	cmp	r0, #69	; 0x45
   1283c:	beq	132b0 <putchar_unlocked@plt+0x1d8c>
   12840:	cmp	r0, #79	; 0x4f
   12844:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   12848:	ldr	r1, [sp, #68]	; 0x44
   1284c:	movw	r3, #63636	; 0xf894
   12850:	mov	r2, #0
   12854:	movt	r3, #65535	; 0xffff
   12858:	ldr	r1, [r1, #20]
   1285c:	cmp	r1, r3
   12860:	b	12e20 <putchar_unlocked@plt+0x18fc>
   12864:	ldr	r0, [sp, #32]
   12868:	subs	r7, sl, #45	; 0x2d
   1286c:	bicne	r7, r8, r8, asr #31
   12870:	bl	113c8 <strlen@plt>
   12874:	mov	r8, r0
   12878:	cmp	r7, r0
   1287c:	mov	r6, r0
   12880:	ldr	r0, [sp, #84]	; 0x54
   12884:	movhi	r6, r7
   12888:	mvn	r0, r0
   1288c:	cmp	r6, r0
   12890:	bcs	1361c <putchar_unlocked@plt+0x20f8>
   12894:	ldr	r5, [sp, #76]	; 0x4c
   12898:	cmp	r5, #0
   1289c:	beq	133e4 <putchar_unlocked@plt+0x1ec0>
   128a0:	cmp	r7, r8
   128a4:	bls	13594 <putchar_unlocked@plt+0x2070>
   128a8:	uxtb	r0, sl
   128ac:	sub	r7, r7, r8
   128b0:	cmp	r0, #43	; 0x2b
   128b4:	cmpne	r0, #48	; 0x30
   128b8:	bne	13578 <putchar_unlocked@plt+0x2054>
   128bc:	cmp	r7, #0
   128c0:	beq	13594 <putchar_unlocked@plt+0x2070>
   128c4:	mov	r0, #48	; 0x30
   128c8:	mov	r1, r5
   128cc:	bl	11494 <fputc@plt>
   128d0:	subs	r7, r7, #1
   128d4:	bne	128c4 <putchar_unlocked@plt+0x13a0>
   128d8:	b	13594 <putchar_unlocked@plt+0x2070>
   128dc:	cmp	r0, #0
   128e0:	bne	131d4 <putchar_unlocked@plt+0x1cb0>
   128e4:	ldr	r1, [sp, #80]	; 0x50
   128e8:	mov	r7, #0
   128ec:	mov	ip, #97	; 0x61
   128f0:	orr	r1, r4, r1
   128f4:	str	r1, [sp, #80]	; 0x50
   128f8:	b	132b8 <putchar_unlocked@plt+0x1d94>
   128fc:	cmp	r0, #79	; 0x4f
   12900:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   12904:	mov	r7, #0
   12908:	mov	ip, #99	; 0x63
   1290c:	b	132b8 <putchar_unlocked@plt+0x1d94>
   12910:	cmp	r0, #69	; 0x45
   12914:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   12918:	ldr	r1, [sp, #20]
   1291c:	ldr	r3, [r1]
   12920:	b	12e90 <putchar_unlocked@plt+0x196c>
   12924:	ldr	r1, [sp, #20]
   12928:	b	12954 <putchar_unlocked@plt+0x1430>
   1292c:	cmp	r0, #69	; 0x45
   12930:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   12934:	ldr	r1, [sp, #68]	; 0x44
   12938:	mov	r2, #0
   1293c:	ldr	r1, [r1, #28]
   12940:	cmn	r1, #1
   12944:	add	r3, r1, #1
   12948:	mov	r1, #3
   1294c:	b	1299c <putchar_unlocked@plt+0x1478>
   12950:	ldr	r1, [sp, #28]
   12954:	cmp	r0, #69	; 0x45
   12958:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   1295c:	ldr	r3, [r1]
   12960:	b	12970 <putchar_unlocked@plt+0x144c>
   12964:	ldr	r3, [sp, #24]
   12968:	cmp	r0, #69	; 0x45
   1296c:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   12970:	cmp	sl, #0
   12974:	movweq	sl, #95	; 0x5f
   12978:	b	12e90 <putchar_unlocked@plt+0x196c>
   1297c:	cmp	r0, #69	; 0x45
   12980:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   12984:	ldr	r1, [sp, #68]	; 0x44
   12988:	mov	r2, #0
   1298c:	ldr	r1, [r1, #16]
   12990:	cmn	r1, #1
   12994:	add	r3, r1, #1
   12998:	mov	r1, #2
   1299c:	movwlt	r2, #1
   129a0:	str	r1, [sp, #64]	; 0x40
   129a4:	b	12e9c <putchar_unlocked@plt+0x1978>
   129a8:	subs	r0, sl, #45	; 0x2d
   129ac:	ldr	r1, [sp, #84]	; 0x54
   129b0:	bicne	r0, r8, r8, asr #31
   129b4:	cmp	r0, #1
   129b8:	mov	r4, r0
   129bc:	movls	r4, #1
   129c0:	mvn	r1, r1
   129c4:	cmp	r4, r1
   129c8:	bcs	1361c <putchar_unlocked@plt+0x20f8>
   129cc:	ldr	r6, [sp, #76]	; 0x4c
   129d0:	cmp	r6, #0
   129d4:	beq	13140 <putchar_unlocked@plt+0x1c1c>
   129d8:	cmp	r0, #2
   129dc:	bcc	12a20 <putchar_unlocked@plt+0x14fc>
   129e0:	uxtb	r1, sl
   129e4:	sub	r5, r0, #1
   129e8:	cmp	r1, #43	; 0x2b
   129ec:	cmpne	r1, #48	; 0x30
   129f0:	bne	12a0c <putchar_unlocked@plt+0x14e8>
   129f4:	mov	r0, #48	; 0x30
   129f8:	mov	r1, r6
   129fc:	bl	11494 <fputc@plt>
   12a00:	subs	r5, r5, #1
   12a04:	bne	129f4 <putchar_unlocked@plt+0x14d0>
   12a08:	b	12a20 <putchar_unlocked@plt+0x14fc>
   12a0c:	mov	r0, #32
   12a10:	mov	r1, r6
   12a14:	bl	11494 <fputc@plt>
   12a18:	subs	r5, r5, #1
   12a1c:	bne	12a0c <putchar_unlocked@plt+0x14e8>
   12a20:	mov	r0, #10
   12a24:	b	13138 <putchar_unlocked@plt+0x1c14>
   12a28:	ldr	r1, [sp, #68]	; 0x44
   12a2c:	mov	r2, #11
   12a30:	mov	r3, #1
   12a34:	ldr	r1, [r1, #16]
   12a38:	mul	r1, r1, r2
   12a3c:	mov	r2, #1
   12a40:	str	r2, [sp, #64]	; 0x40
   12a44:	mov	r2, #0
   12a48:	add	r3, r3, r1, asr #5
   12a4c:	b	12e9c <putchar_unlocked@plt+0x1978>
   12a50:	ldr	ip, [sp, #68]	; 0x44
   12a54:	add	r1, sp, #88	; 0x58
   12a58:	mov	r6, r1
   12a5c:	ldm	ip!, {r0, r2, r3, r4, r5}
   12a60:	stmia	r6!, {r0, r2, r3, r4, r5}
   12a64:	ldm	ip, {r0, r2, r3, r4, r5, r7}
   12a68:	stm	r6, {r0, r2, r3, r4, r5, r7}
   12a6c:	mvn	r0, #0
   12a70:	str	r0, [sp, #116]	; 0x74
   12a74:	ldr	r0, [fp, #16]
   12a78:	bl	15934 <putchar_unlocked@plt+0x4410>
   12a7c:	ldr	r1, [sp, #116]	; 0x74
   12a80:	cmp	r1, #0
   12a84:	bmi	13638 <putchar_unlocked@plt+0x2114>
   12a88:	ldr	r1, [sp, #16]
   12a8c:	movw	r6, #26215	; 0x6667
   12a90:	lsr	r2, r0, #31
   12a94:	mov	r3, r0
   12a98:	movt	r6, #26214	; 0x6666
   12a9c:	smmul	r7, r3, r6
   12aa0:	cmp	r0, #0
   12aa4:	asr	r5, r7, #2
   12aa8:	add	r7, r5, r7, lsr #31
   12aac:	add	r5, r7, r7, lsl #2
   12ab0:	sub	r5, r3, r5, lsl #1
   12ab4:	add	r3, r3, #9
   12ab8:	rsbmi	r5, r5, #0
   12abc:	cmp	r3, #18
   12ac0:	mov	r3, r7
   12ac4:	add	r5, r5, #48	; 0x30
   12ac8:	strb	r5, [r1], #-1
   12acc:	bhi	12a9c <putchar_unlocked@plt+0x1578>
   12ad0:	cmp	r8, #0
   12ad4:	add	r5, r1, #1
   12ad8:	mov	r4, #0
   12adc:	movwmi	r8, #1
   12ae0:	cmp	sl, #0
   12ae4:	b	12f2c <putchar_unlocked@plt+0x1a08>
   12ae8:	subs	r0, sl, #45	; 0x2d
   12aec:	ldr	r1, [sp, #84]	; 0x54
   12af0:	bicne	r0, r8, r8, asr #31
   12af4:	cmp	r0, #1
   12af8:	mov	r4, r0
   12afc:	movls	r4, #1
   12b00:	mvn	r1, r1
   12b04:	cmp	r4, r1
   12b08:	bcs	1361c <putchar_unlocked@plt+0x20f8>
   12b0c:	ldr	r6, [sp, #76]	; 0x4c
   12b10:	cmp	r6, #0
   12b14:	beq	13140 <putchar_unlocked@plt+0x1c1c>
   12b18:	cmp	r0, #2
   12b1c:	bcc	12b60 <putchar_unlocked@plt+0x163c>
   12b20:	uxtb	r1, sl
   12b24:	sub	r5, r0, #1
   12b28:	cmp	r1, #43	; 0x2b
   12b2c:	cmpne	r1, #48	; 0x30
   12b30:	bne	12b4c <putchar_unlocked@plt+0x1628>
   12b34:	mov	r0, #48	; 0x30
   12b38:	mov	r1, r6
   12b3c:	bl	11494 <fputc@plt>
   12b40:	subs	r5, r5, #1
   12b44:	bne	12b34 <putchar_unlocked@plt+0x1610>
   12b48:	b	12b60 <putchar_unlocked@plt+0x163c>
   12b4c:	mov	r0, #32
   12b50:	mov	r1, r6
   12b54:	bl	11494 <fputc@plt>
   12b58:	subs	r5, r5, #1
   12b5c:	bne	12b4c <putchar_unlocked@plt+0x1628>
   12b60:	mov	r0, #9
   12b64:	b	13138 <putchar_unlocked@plt+0x1c14>
   12b68:	ldr	r1, [sp, #68]	; 0x44
   12b6c:	movw	r2, #9363	; 0x2493
   12b70:	movt	r2, #37449	; 0x9249
   12b74:	ldr	r1, [r1, #24]
   12b78:	add	r1, r1, #6
   12b7c:	smmla	r2, r1, r2, r1
   12b80:	asr	r3, r2, #2
   12b84:	add	r2, r3, r2, lsr #31
   12b88:	rsb	r2, r2, r2, lsl #3
   12b8c:	sub	r1, r1, r2
   12b90:	add	r3, r1, #1
   12b94:	b	12ba8 <putchar_unlocked@plt+0x1684>
   12b98:	cmp	r0, #69	; 0x45
   12b9c:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   12ba0:	ldr	r1, [sp, #68]	; 0x44
   12ba4:	ldr	r3, [r1, #24]
   12ba8:	mov	r1, #1
   12bac:	b	12e94 <putchar_unlocked@plt+0x1970>
   12bb0:	cmp	r0, #79	; 0x4f
   12bb4:	beq	131d4 <putchar_unlocked@plt+0x1cb0>
   12bb8:	mov	r7, #0
   12bbc:	mov	ip, #120	; 0x78
   12bc0:	b	132b8 <putchar_unlocked@plt+0x1d94>
   12bc4:	cmp	r0, #69	; 0x45
   12bc8:	bne	12dc8 <putchar_unlocked@plt+0x18a4>
   12bcc:	mov	r7, #0
   12bd0:	mov	ip, #121	; 0x79
   12bd4:	b	132b8 <putchar_unlocked@plt+0x1d94>
   12bd8:	cmp	r1, #122	; 0x7a
   12bdc:	bne	131d4 <putchar_unlocked@plt+0x1cb0>
   12be0:	add	r9, r9, r7
   12be4:	ldr	r2, [sp, #68]	; 0x44
   12be8:	ldr	r1, [r2, #32]
   12bec:	cmp	r1, #0
   12bf0:	bmi	13370 <putchar_unlocked@plt+0x1e4c>
   12bf4:	ldr	r1, [r2, #36]	; 0x24
   12bf8:	cmp	r1, #0
   12bfc:	bmi	1314c <putchar_unlocked@plt+0x1c28>
   12c00:	mov	r2, #0
   12c04:	bne	13150 <putchar_unlocked@plt+0x1c2c>
   12c08:	ldr	r2, [sp, #32]
   12c0c:	ldrb	r2, [r2]
   12c10:	sub	r2, r2, #45	; 0x2d
   12c14:	clz	r2, r2
   12c18:	lsr	r2, r2, #5
   12c1c:	b	13150 <putchar_unlocked@plt+0x1c2c>
   12c20:	sub	r7, r4, #1
   12c24:	movw	r4, #365	; 0x16d
   12c28:	tst	r7, #3
   12c2c:	bne	12c70 <putchar_unlocked@plt+0x174c>
   12c30:	movw	r1, #34079	; 0x851f
   12c34:	movt	r1, #20971	; 0x51eb
   12c38:	smmul	r1, r7, r1
   12c3c:	asr	r4, r1, #5
   12c40:	add	r5, r4, r1, lsr #31
   12c44:	mov	r4, #100	; 0x64
   12c48:	mls	r5, r5, r4, r7
   12c4c:	asr	r4, r1, #7
   12c50:	add	r1, r4, r1, lsr #31
   12c54:	mov	r4, #400	; 0x190
   12c58:	mls	r1, r1, r4, r7
   12c5c:	movw	r4, #365	; 0x16d
   12c60:	cmp	r1, #0
   12c64:	movweq	r4, #366	; 0x16e
   12c68:	cmp	r5, #0
   12c6c:	movwne	r4, #366	; 0x16e
   12c70:	add	r1, r4, r3
   12c74:	movw	r3, #382	; 0x17e
   12c78:	sub	r2, r3, r2
   12c7c:	add	r1, r2, r1
   12c80:	smmla	r1, r1, r6, r1
   12c84:	asr	r3, r1, #2
   12c88:	add	r1, r3, r1, lsr #31
   12c8c:	mvn	r3, #0
   12c90:	rsb	r1, r1, r1, lsl #3
   12c94:	sub	r1, r1, r2
   12c98:	add	r7, r1, #3
   12c9c:	cmp	ip, #71	; 0x47
   12ca0:	beq	12e08 <putchar_unlocked@plt+0x18e4>
   12ca4:	cmp	ip, #103	; 0x67
   12ca8:	bne	12e80 <putchar_unlocked@plt+0x195c>
   12cac:	movw	r1, #34079	; 0x851f
   12cb0:	movt	r1, #20971	; 0x51eb
   12cb4:	smmul	r2, lr, r1
   12cb8:	asr	r7, r2, #5
   12cbc:	add	r2, r7, r2, lsr #31
   12cc0:	mov	r7, #100	; 0x64
   12cc4:	mls	r2, r2, r7, lr
   12cc8:	add	r2, r3, r2
   12ccc:	smmul	r1, r2, r1
   12cd0:	asr	r5, r1, #5
   12cd4:	add	r1, r5, r1, lsr #31
   12cd8:	mls	r1, r1, r7, r2
   12cdc:	mov	r2, #2
   12ce0:	str	r2, [sp, #64]	; 0x40
   12ce4:	mov	r2, #0
   12ce8:	cmn	r1, #1
   12cec:	ble	13468 <putchar_unlocked@plt+0x1f44>
   12cf0:	mov	r3, r1
   12cf4:	b	12e34 <putchar_unlocked@plt+0x1910>
   12cf8:	ldr	r1, [sp, #68]	; 0x44
   12cfc:	movw	r7, #63636	; 0xf894
   12d00:	mov	r3, #0
   12d04:	mvn	r5, #98	; 0x62
   12d08:	mov	r2, #0
   12d0c:	movt	r7, #65535	; 0xffff
   12d10:	ldr	r1, [r1, #20]
   12d14:	cmp	r1, r7
   12d18:	movwge	r3, #1
   12d1c:	cmp	r1, r7
   12d20:	and	r3, r3, r1, lsr #31
   12d24:	movwlt	r2, #1
   12d28:	smlabb	r3, r3, r5, r1
   12d2c:	movw	r5, #34079	; 0x851f
   12d30:	mov	r1, #2
   12d34:	movt	r5, #20971	; 0x51eb
   12d38:	smmul	r3, r3, r5
   12d3c:	asr	r5, r3, #5
   12d40:	add	r3, r5, r3, lsr #31
   12d44:	add	r3, r3, #19
   12d48:	b	12e30 <putchar_unlocked@plt+0x190c>
   12d4c:	cmp	r2, #1
   12d50:	sub	r7, fp, #46	; 0x2e
   12d54:	blt	12d88 <putchar_unlocked@plt+0x1864>
   12d58:	smmul	r3, r1, lr
   12d5c:	cmp	r0, #0
   12d60:	asr	r5, r3, #2
   12d64:	add	r3, r5, r3, lsr #31
   12d68:	add	r5, r3, r3, lsl #2
   12d6c:	sub	r1, r1, r5, lsl #1
   12d70:	add	r1, r1, #48	; 0x30
   12d74:	strb	r1, [r7, r0]
   12d78:	sub	r1, r0, #1
   12d7c:	mov	r0, r1
   12d80:	mov	r1, r3
   12d84:	bgt	12d58 <putchar_unlocked@plt+0x1834>
   12d88:	ldr	r0, [sp, #84]	; 0x54
   12d8c:	cmp	sl, #0
   12d90:	movweq	sl, #48	; 0x30
   12d94:	mvn	r0, r0
   12d98:	cmp	r2, r0
   12d9c:	bcs	1361c <putchar_unlocked@plt+0x20f8>
   12da0:	ldr	r0, [sp, #76]	; 0x4c
   12da4:	cmp	r0, #0
   12da8:	beq	134dc <putchar_unlocked@plt+0x1fb8>
   12dac:	ldr	r0, [sp, #80]	; 0x50
   12db0:	tst	r0, #1
   12db4:	beq	134c8 <putchar_unlocked@plt+0x1fa4>
   12db8:	ldr	r0, [sp, #76]	; 0x4c
   12dbc:	sub	r1, fp, #46	; 0x2e
   12dc0:	bl	13684 <putchar_unlocked@plt+0x2160>
   12dc4:	b	134dc <putchar_unlocked@plt+0x1fb8>
   12dc8:	ldr	r1, [sp, #68]	; 0x44
   12dcc:	movw	r2, #34079	; 0x851f
   12dd0:	movt	r2, #20971	; 0x51eb
   12dd4:	ldr	r1, [r1, #20]
   12dd8:	smmul	r2, r1, r2
   12ddc:	asr	r3, r2, #5
   12de0:	add	r2, r3, r2, lsr #31
   12de4:	mov	r3, #100	; 0x64
   12de8:	mls	r7, r2, r3, r1
   12dec:	mov	r2, #2
   12df0:	str	r2, [sp, #64]	; 0x40
   12df4:	mov	r2, #0
   12df8:	cmn	r7, #1
   12dfc:	ble	13484 <putchar_unlocked@plt+0x1f60>
   12e00:	mov	r3, r7
   12e04:	b	12e34 <putchar_unlocked@plt+0x1910>
   12e08:	movw	r1, #63636	; 0xf894
   12e0c:	mov	r2, #0
   12e10:	movt	r1, #65535	; 0xffff
   12e14:	sub	r1, r1, r3
   12e18:	cmp	lr, r1
   12e1c:	add	r1, lr, r3
   12e20:	movwlt	r2, #1
   12e24:	movw	r3, #1900	; 0x76c
   12e28:	add	r3, r1, r3
   12e2c:	mov	r1, #4
   12e30:	str	r1, [sp, #64]	; 0x40
   12e34:	ldr	r1, [fp, #8]
   12e38:	cmp	sl, #0
   12e3c:	mov	r4, #0
   12e40:	moveq	sl, r1
   12e44:	mov	r1, #0
   12e48:	cmp	sl, #43	; 0x2b
   12e4c:	bne	12eac <putchar_unlocked@plt+0x1988>
   12e50:	ldr	r6, [sp, #64]	; 0x40
   12e54:	mov	r5, #0
   12e58:	movw	r4, #9999	; 0x270f
   12e5c:	mov	r7, #0
   12e60:	cmp	r6, r8
   12e64:	movwlt	r5, #1
   12e68:	cmp	r6, #2
   12e6c:	movweq	r4, #99	; 0x63
   12e70:	cmp	r4, r3
   12e74:	movwcc	r7, #1
   12e78:	orr	r4, r5, r7
   12e7c:	b	12eac <putchar_unlocked@plt+0x1988>
   12e80:	smmla	r1, r7, r6, r7
   12e84:	asr	r2, r1, #2
   12e88:	add	r1, r2, r1, lsr #31
   12e8c:	add	r3, r1, #1
   12e90:	mov	r1, #2
   12e94:	str	r1, [sp, #64]	; 0x40
   12e98:	lsr	r2, r3, #31
   12e9c:	cmp	r2, #0
   12ea0:	mov	r1, #0
   12ea4:	mov	r4, #0
   12ea8:	movwne	r2, #1
   12eac:	cmp	r0, #79	; 0x4f
   12eb0:	moveq	r7, #0
   12eb4:	cmpeq	r2, #0
   12eb8:	beq	132b8 <putchar_unlocked@plt+0x1d94>
   12ebc:	ldr	r5, [sp, #56]	; 0x38
   12ec0:	cmp	r2, #0
   12ec4:	rsbne	r3, r3, #0
   12ec8:	tst	r1, #1
   12ecc:	asr	r1, r1, #1
   12ed0:	movne	r0, #58	; 0x3a
   12ed4:	strbne	r0, [r5, #-1]!
   12ed8:	movw	r0, #52429	; 0xcccd
   12edc:	cmp	r3, #9
   12ee0:	movt	r0, #52428	; 0xcccc
   12ee4:	umull	r0, r7, r3, r0
   12ee8:	lsr	r0, r7, #3
   12eec:	add	r7, r0, r0, lsl #2
   12ef0:	sub	r7, r3, r7, lsl #1
   12ef4:	mov	r3, r0
   12ef8:	orr	r7, r7, #48	; 0x30
   12efc:	strb	r7, [r5, #-1]!
   12f00:	bhi	12ec8 <putchar_unlocked@plt+0x19a4>
   12f04:	cmp	r1, #0
   12f08:	mov	r3, r0
   12f0c:	bne	12ec8 <putchar_unlocked@plt+0x19a4>
   12f10:	cmp	r8, #0
   12f14:	ldr	r0, [sp, #64]	; 0x40
   12f18:	movpl	r0, r8
   12f1c:	cmp	r4, #0
   12f20:	movwne	r4, #43	; 0x2b
   12f24:	cmp	sl, #0
   12f28:	mov	r8, r0
   12f2c:	movweq	sl, #48	; 0x30
   12f30:	ldr	r1, [sp, #56]	; 0x38
   12f34:	cmp	r2, #0
   12f38:	mov	r0, r8
   12f3c:	movwne	r4, #45	; 0x2d
   12f40:	cmp	r4, #0
   12f44:	subne	r0, r0, #1
   12f48:	sub	r7, r1, r5
   12f4c:	sub	r0, r0, r7
   12f50:	str	r7, [sp, #48]	; 0x30
   12f54:	cmp	r0, #1
   12f58:	movwlt	r0, #0
   12f5c:	subs	r6, sl, #45	; 0x2d
   12f60:	movne	r6, r0
   12f64:	cmp	r4, #0
   12f68:	beq	12fb8 <putchar_unlocked@plt+0x1a94>
   12f6c:	cmp	sl, #95	; 0x5f
   12f70:	bne	12fc0 <putchar_unlocked@plt+0x1a9c>
   12f74:	str	r8, [sp, #64]	; 0x40
   12f78:	ldr	r8, [sp, #76]	; 0x4c
   12f7c:	cmp	r8, #0
   12f80:	cmpne	r6, #0
   12f84:	beq	12fa0 <putchar_unlocked@plt+0x1a7c>
   12f88:	mov	r7, r6
   12f8c:	mov	r0, #32
   12f90:	mov	r1, r8
   12f94:	bl	11494 <fputc@plt>
   12f98:	subs	r7, r7, #1
   12f9c:	bne	12f8c <putchar_unlocked@plt+0x1a68>
   12fa0:	ldr	r8, [sp, #64]	; 0x40
   12fa4:	ldr	r0, [sp, #84]	; 0x54
   12fa8:	ldr	r7, [sp, #48]	; 0x30
   12fac:	sub	r8, r8, r6
   12fb0:	add	r0, r6, r0
   12fb4:	b	12fc4 <putchar_unlocked@plt+0x1aa0>
   12fb8:	ldr	r6, [sp, #84]	; 0x54
   12fbc:	b	12fec <putchar_unlocked@plt+0x1ac8>
   12fc0:	ldr	r0, [sp, #84]	; 0x54
   12fc4:	cmn	r0, #3
   12fc8:	bhi	1361c <putchar_unlocked@plt+0x20f8>
   12fcc:	ldr	r1, [sp, #76]	; 0x4c
   12fd0:	mov	r6, r0
   12fd4:	cmp	r1, #0
   12fd8:	beq	12fe4 <putchar_unlocked@plt+0x1ac0>
   12fdc:	mov	r0, r4
   12fe0:	bl	11494 <fputc@plt>
   12fe4:	sub	r8, r8, #1
   12fe8:	add	r6, r6, #1
   12fec:	subs	r0, sl, #45	; 0x2d
   12ff0:	mov	r4, r7
   12ff4:	mvn	r1, r6
   12ff8:	bicne	r0, r8, r8, asr #31
   12ffc:	cmp	r0, r7
   13000:	movhi	r4, r0
   13004:	cmp	r4, r1
   13008:	bcs	1361c <putchar_unlocked@plt+0x20f8>
   1300c:	ldr	r1, [sp, #76]	; 0x4c
   13010:	mov	r8, r6
   13014:	cmp	r1, #0
   13018:	beq	130b0 <putchar_unlocked@plt+0x1b8c>
   1301c:	cmp	r0, r7
   13020:	bls	1307c <putchar_unlocked@plt+0x1b58>
   13024:	ldr	r1, [sp, #48]	; 0x30
   13028:	cmp	sl, #43	; 0x2b
   1302c:	cmpne	sl, #48	; 0x30
   13030:	sub	r7, r0, r1
   13034:	bne	1305c <putchar_unlocked@plt+0x1b38>
   13038:	ldr	r6, [sp, #76]	; 0x4c
   1303c:	cmp	r7, #0
   13040:	beq	1307c <putchar_unlocked@plt+0x1b58>
   13044:	mov	r0, #48	; 0x30
   13048:	mov	r1, r6
   1304c:	bl	11494 <fputc@plt>
   13050:	subs	r7, r7, #1
   13054:	bne	13044 <putchar_unlocked@plt+0x1b20>
   13058:	b	1307c <putchar_unlocked@plt+0x1b58>
   1305c:	ldr	r6, [sp, #76]	; 0x4c
   13060:	cmp	r7, #0
   13064:	beq	1307c <putchar_unlocked@plt+0x1b58>
   13068:	mov	r0, #32
   1306c:	mov	r1, r6
   13070:	bl	11494 <fputc@plt>
   13074:	subs	r7, r7, #1
   13078:	bne	13068 <putchar_unlocked@plt+0x1b44>
   1307c:	ldr	r0, [sp, #80]	; 0x50
   13080:	tst	r0, #1
   13084:	beq	1309c <putchar_unlocked@plt+0x1b78>
   13088:	ldr	r0, [sp, #76]	; 0x4c
   1308c:	ldr	r2, [sp, #48]	; 0x30
   13090:	mov	r1, r5
   13094:	bl	13684 <putchar_unlocked@plt+0x2160>
   13098:	b	130b0 <putchar_unlocked@plt+0x1b8c>
   1309c:	ldr	r1, [sp, #48]	; 0x30
   130a0:	ldr	r3, [sp, #76]	; 0x4c
   130a4:	mov	r0, r5
   130a8:	mov	r2, #1
   130ac:	bl	112cc <fwrite@plt>
   130b0:	mov	sl, r8
   130b4:	add	sl, r4, r8
   130b8:	b	13440 <putchar_unlocked@plt+0x1f1c>
   130bc:	subs	r0, sl, #45	; 0x2d
   130c0:	ldr	r1, [sp, #84]	; 0x54
   130c4:	bicne	r0, r8, r8, asr #31
   130c8:	cmp	r0, #1
   130cc:	mov	r4, r0
   130d0:	movls	r4, #1
   130d4:	mvn	r1, r1
   130d8:	cmp	r4, r1
   130dc:	bcs	1361c <putchar_unlocked@plt+0x20f8>
   130e0:	ldr	r6, [sp, #76]	; 0x4c
   130e4:	cmp	r6, #0
   130e8:	beq	13140 <putchar_unlocked@plt+0x1c1c>
   130ec:	cmp	r0, #2
   130f0:	bcc	13134 <putchar_unlocked@plt+0x1c10>
   130f4:	uxtb	r1, sl
   130f8:	sub	r5, r0, #1
   130fc:	cmp	r1, #43	; 0x2b
   13100:	cmpne	r1, #48	; 0x30
   13104:	bne	13120 <putchar_unlocked@plt+0x1bfc>
   13108:	mov	r0, #48	; 0x30
   1310c:	mov	r1, r6
   13110:	bl	11494 <fputc@plt>
   13114:	subs	r5, r5, #1
   13118:	bne	13108 <putchar_unlocked@plt+0x1be4>
   1311c:	b	13134 <putchar_unlocked@plt+0x1c10>
   13120:	mov	r0, #32
   13124:	mov	r1, r6
   13128:	bl	11494 <fputc@plt>
   1312c:	subs	r5, r5, #1
   13130:	bne	13120 <putchar_unlocked@plt+0x1bfc>
   13134:	ldrb	r0, [r9]
   13138:	mov	r1, r6
   1313c:	bl	11494 <fputc@plt>
   13140:	ldr	sl, [sp, #84]	; 0x54
   13144:	add	sl, r4, sl
   13148:	b	13440 <putchar_unlocked@plt+0x1f1c>
   1314c:	mov	r2, #1
   13150:	cmp	r7, #3
   13154:	bhi	131d4 <putchar_unlocked@plt+0x1cb0>
   13158:	movw	r3, #34953	; 0x8889
   1315c:	mov	r5, r7
   13160:	movt	r3, #34952	; 0x8888
   13164:	smmla	r7, r1, r3, r1
   13168:	asr	r4, r7, #5
   1316c:	add	r4, r4, r7, lsr #31
   13170:	smmla	r3, r4, r3, r4
   13174:	asr	r7, r3, #5
   13178:	add	r3, r7, r3, lsr #31
   1317c:	rsb	r3, r3, r3, lsl #4
   13180:	sub	lr, r4, r3, lsl #2
   13184:	movw	r3, #46021	; 0xb3c5
   13188:	rsb	r4, r4, r4, lsl #4
   1318c:	movt	r3, #37282	; 0x91a2
   13190:	smmla	r3, r1, r3, r1
   13194:	sub	r1, r1, r4, lsl #2
   13198:	add	r4, pc, #8
   1319c:	asr	r7, r3, #11
   131a0:	add	r3, r7, r3, lsr #31
   131a4:	ldr	pc, [r4, r5, lsl #2]
   131a8:			; <UNDEFINED> instruction: 0x000131b8
   131ac:	andeq	r3, r1, r4, ror #11
   131b0:	andeq	r3, r1, r4, lsr #9
   131b4:	muleq	r1, ip, r4
   131b8:	mov	r1, #100	; 0x64
   131bc:	mla	r3, r3, r1, lr
   131c0:	mov	r1, #5
   131c4:	str	r1, [sp, #64]	; 0x40
   131c8:	mov	r4, #1
   131cc:	mov	r1, #0
   131d0:	b	12eac <putchar_unlocked@plt+0x1988>
   131d4:	ldr	r2, [sp, #80]	; 0x50
   131d8:	sub	r1, r9, r5
   131dc:	subs	r0, sl, #45	; 0x2d
   131e0:	add	r4, r1, #1
   131e4:	ldr	r1, [sp, #84]	; 0x54
   131e8:	bicne	r0, r8, r8, asr #31
   131ec:	mov	r8, r5
   131f0:	mov	r5, r4
   131f4:	cmp	r0, r4
   131f8:	movhi	r5, r0
   131fc:	mvn	r1, r1
   13200:	cmp	r5, r1
   13204:	bcs	1361c <putchar_unlocked@plt+0x20f8>
   13208:	ldr	r7, [sp, #76]	; 0x4c
   1320c:	cmp	r7, #0
   13210:	beq	132a4 <putchar_unlocked@plt+0x1d80>
   13214:	cmp	r0, r4
   13218:	str	r2, [sp, #80]	; 0x50
   1321c:	bls	13270 <putchar_unlocked@plt+0x1d4c>
   13220:	sub	r6, r0, r4
   13224:	uxtb	r0, sl
   13228:	cmp	r0, #43	; 0x2b
   1322c:	cmpne	r0, #48	; 0x30
   13230:	bne	13254 <putchar_unlocked@plt+0x1d30>
   13234:	cmp	r6, #0
   13238:	beq	13270 <putchar_unlocked@plt+0x1d4c>
   1323c:	mov	r0, #48	; 0x30
   13240:	mov	r1, r7
   13244:	bl	11494 <fputc@plt>
   13248:	subs	r6, r6, #1
   1324c:	bne	1323c <putchar_unlocked@plt+0x1d18>
   13250:	b	13270 <putchar_unlocked@plt+0x1d4c>
   13254:	cmp	r6, #0
   13258:	beq	13270 <putchar_unlocked@plt+0x1d4c>
   1325c:	mov	r0, #32
   13260:	mov	r1, r7
   13264:	bl	11494 <fputc@plt>
   13268:	subs	r6, r6, #1
   1326c:	bne	1325c <putchar_unlocked@plt+0x1d38>
   13270:	ldr	r0, [sp, #80]	; 0x50
   13274:	tst	r0, #1
   13278:	beq	13290 <putchar_unlocked@plt+0x1d6c>
   1327c:	mov	r0, r7
   13280:	mov	r1, r8
   13284:	mov	r2, r4
   13288:	bl	13684 <putchar_unlocked@plt+0x2160>
   1328c:	b	132a4 <putchar_unlocked@plt+0x1d80>
   13290:	mov	r0, r8
   13294:	mov	r1, r4
   13298:	mov	r2, #1
   1329c:	mov	r3, r7
   132a0:	bl	112cc <fwrite@plt>
   132a4:	ldr	sl, [sp, #84]	; 0x54
   132a8:	add	sl, r5, sl
   132ac:	b	13440 <putchar_unlocked@plt+0x1f1c>
   132b0:	mov	r7, #0
   132b4:	mov	ip, #89	; 0x59
   132b8:	movw	r1, #9504	; 0x2520
   132bc:	cmp	r0, #0
   132c0:	ldr	r3, [sp, #68]	; 0x44
   132c4:	sub	r2, fp, #51	; 0x33
   132c8:	strh	r1, [fp, #-51]	; 0xffffffcd
   132cc:	ldr	r1, [sp, #60]	; 0x3c
   132d0:	ldrne	r1, [sp, #40]	; 0x28
   132d4:	strbne	r0, [fp, #-49]	; 0xffffffcf
   132d8:	mov	r0, #0
   132dc:	strb	r0, [r1, #1]
   132e0:	strb	ip, [r1]
   132e4:	add	r0, sp, #88	; 0x58
   132e8:	mov	r1, #1024	; 0x400
   132ec:	bl	11344 <strftime@plt>
   132f0:	cmp	r0, #0
   132f4:	beq	13370 <putchar_unlocked@plt+0x1e4c>
   132f8:	subs	r1, sl, #45	; 0x2d
   132fc:	sub	r4, r0, #1
   13300:	ldr	r0, [sp, #84]	; 0x54
   13304:	movne	r1, r8
   13308:	cmp	r8, #0
   1330c:	mov	r6, r4
   13310:	movwmi	r1, #0
   13314:	cmp	r1, r4
   13318:	movhi	r6, r1
   1331c:	mvn	r0, r0
   13320:	cmp	r6, r0
   13324:	bcs	1361c <putchar_unlocked@plt+0x20f8>
   13328:	ldr	r5, [sp, #76]	; 0x4c
   1332c:	cmp	r5, #0
   13330:	beq	133e4 <putchar_unlocked@plt+0x1ec0>
   13334:	mov	r8, r7
   13338:	cmp	r1, r4
   1333c:	bls	13394 <putchar_unlocked@plt+0x1e70>
   13340:	cmp	sl, #43	; 0x2b
   13344:	sub	r7, r1, r4
   13348:	cmpne	sl, #48	; 0x30
   1334c:	bne	13378 <putchar_unlocked@plt+0x1e54>
   13350:	cmp	r7, #0
   13354:	beq	13394 <putchar_unlocked@plt+0x1e70>
   13358:	mov	r0, #48	; 0x30
   1335c:	mov	r1, r5
   13360:	bl	11494 <fputc@plt>
   13364:	subs	r7, r7, #1
   13368:	bne	13358 <putchar_unlocked@plt+0x1e34>
   1336c:	b	13394 <putchar_unlocked@plt+0x1e70>
   13370:	ldr	sl, [sp, #84]	; 0x54
   13374:	b	13440 <putchar_unlocked@plt+0x1f1c>
   13378:	cmp	r7, #0
   1337c:	beq	13394 <putchar_unlocked@plt+0x1e70>
   13380:	mov	r0, #32
   13384:	mov	r1, r5
   13388:	bl	11494 <fputc@plt>
   1338c:	subs	r7, r7, #1
   13390:	bne	13380 <putchar_unlocked@plt+0x1e5c>
   13394:	tst	r8, #1
   13398:	beq	133b0 <putchar_unlocked@plt+0x1e8c>
   1339c:	ldr	r1, [sp, #36]	; 0x24
   133a0:	mov	r0, r5
   133a4:	mov	r2, r4
   133a8:	bl	13640 <putchar_unlocked@plt+0x211c>
   133ac:	b	133e4 <putchar_unlocked@plt+0x1ec0>
   133b0:	ldr	r0, [sp, #80]	; 0x50
   133b4:	tst	r0, #1
   133b8:	beq	133d0 <putchar_unlocked@plt+0x1eac>
   133bc:	ldr	r1, [sp, #36]	; 0x24
   133c0:	mov	r0, r5
   133c4:	mov	r2, r4
   133c8:	bl	13684 <putchar_unlocked@plt+0x2160>
   133cc:	b	133e4 <putchar_unlocked@plt+0x1ec0>
   133d0:	ldr	r0, [sp, #36]	; 0x24
   133d4:	mov	r1, r4
   133d8:	mov	r2, #1
   133dc:	mov	r3, r5
   133e0:	bl	112cc <fwrite@plt>
   133e4:	ldr	sl, [sp, #84]	; 0x54
   133e8:	add	sl, r6, sl
   133ec:	b	13440 <putchar_unlocked@plt+0x1f1c>
   133f0:	cmp	r6, #0
   133f4:	beq	1340c <putchar_unlocked@plt+0x1ee8>
   133f8:	mov	r0, #32
   133fc:	mov	r1, r7
   13400:	bl	11494 <fputc@plt>
   13404:	subs	r6, r6, #1
   13408:	bne	133f8 <putchar_unlocked@plt+0x1ed4>
   1340c:	ldr	r0, [fp, #16]
   13410:	ldr	r1, [sp, #64]	; 0x40
   13414:	ldr	r2, [sp, #68]	; 0x44
   13418:	ldr	r3, [sp, #80]	; 0x50
   1341c:	str	sl, [sp]
   13420:	str	r4, [sp, #4]
   13424:	str	r0, [sp, #8]
   13428:	ldr	r0, [fp, #20]
   1342c:	str	r0, [sp, #12]
   13430:	mov	r0, r7
   13434:	bl	12078 <putchar_unlocked@plt+0xb54>
   13438:	ldr	sl, [sp, #84]	; 0x54
   1343c:	add	sl, r8, sl
   13440:	ldrb	r3, [r9, #1]!
   13444:	mvn	r8, #0
   13448:	cmp	r3, #0
   1344c:	bne	1213c <putchar_unlocked@plt+0xc18>
   13450:	b	1360c <putchar_unlocked@plt+0x20e8>
   13454:	cmp	r8, #6
   13458:	mov	r0, r8
   1345c:	movle	r0, #6
   13460:	sub	r6, r0, #6
   13464:	b	126f8 <putchar_unlocked@plt+0x11d4>
   13468:	movw	r7, #63636	; 0xf894
   1346c:	movt	r7, #65535	; 0xffff
   13470:	sub	r7, r7, r3
   13474:	add	r3, r1, #100	; 0x64
   13478:	cmp	lr, r7
   1347c:	rsblt	r3, r1, #0
   13480:	b	12e34 <putchar_unlocked@plt+0x1910>
   13484:	movw	r5, #63636	; 0xf894
   13488:	add	r3, r7, #100	; 0x64
   1348c:	movt	r5, #65535	; 0xffff
   13490:	cmp	r1, r5
   13494:	rsblt	r3, r7, #0
   13498:	b	12e34 <putchar_unlocked@plt+0x1910>
   1349c:	cmp	r1, #0
   134a0:	beq	135dc <putchar_unlocked@plt+0x20b8>
   134a4:	movw	r4, #10000	; 0x2710
   134a8:	mla	r1, r3, r4, r1
   134ac:	mov	r3, #100	; 0x64
   134b0:	mov	r4, #1
   134b4:	mla	r3, lr, r3, r1
   134b8:	mov	r1, #9
   134bc:	str	r1, [sp, #64]	; 0x40
   134c0:	mov	r1, #20
   134c4:	b	12eac <putchar_unlocked@plt+0x1988>
   134c8:	ldr	r3, [sp, #76]	; 0x4c
   134cc:	mov	r1, r2
   134d0:	sub	r0, fp, #46	; 0x2e
   134d4:	mov	r2, #1
   134d8:	bl	112cc <fwrite@plt>
   134dc:	cmp	sl, #45	; 0x2d
   134e0:	mov	r5, #0
   134e4:	mvn	r1, #9
   134e8:	subne	r0, r8, r4
   134ec:	subne	r0, r0, #9
   134f0:	bicne	r5, r0, r0, asr #31
   134f4:	ldr	r0, [sp, #84]	; 0x54
   134f8:	add	r0, r0, r4
   134fc:	sub	r0, r1, r0
   13500:	cmp	r5, r0
   13504:	bcs	1361c <putchar_unlocked@plt+0x20f8>
   13508:	ldr	r7, [sp, #76]	; 0x4c
   1350c:	cmp	r7, #0
   13510:	cmpne	r5, #0
   13514:	bne	1352c <putchar_unlocked@plt+0x2008>
   13518:	ldr	r0, [sp, #84]	; 0x54
   1351c:	add	r0, r0, r5
   13520:	add	r0, r0, r4
   13524:	add	sl, r0, #9
   13528:	b	13440 <putchar_unlocked@plt+0x1f1c>
   1352c:	uxtb	r0, sl
   13530:	cmp	r0, #43	; 0x2b
   13534:	beq	13544 <putchar_unlocked@plt+0x2020>
   13538:	cmp	r0, #48	; 0x30
   1353c:	mov	r6, r5
   13540:	bne	13560 <putchar_unlocked@plt+0x203c>
   13544:	mov	r6, r5
   13548:	mov	r0, #48	; 0x30
   1354c:	mov	r1, r7
   13550:	bl	11494 <fputc@plt>
   13554:	subs	r6, r6, #1
   13558:	bne	13548 <putchar_unlocked@plt+0x2024>
   1355c:	b	13518 <putchar_unlocked@plt+0x1ff4>
   13560:	mov	r0, #32
   13564:	mov	r1, r7
   13568:	bl	11494 <fputc@plt>
   1356c:	subs	r6, r6, #1
   13570:	bne	13560 <putchar_unlocked@plt+0x203c>
   13574:	b	13518 <putchar_unlocked@plt+0x1ff4>
   13578:	cmp	r7, #0
   1357c:	beq	13594 <putchar_unlocked@plt+0x2070>
   13580:	mov	r0, #32
   13584:	mov	r1, r5
   13588:	bl	11494 <fputc@plt>
   1358c:	subs	r7, r7, #1
   13590:	bne	13580 <putchar_unlocked@plt+0x205c>
   13594:	tst	r4, #1
   13598:	beq	135ac <putchar_unlocked@plt+0x2088>
   1359c:	ldr	r1, [sp, #32]
   135a0:	mov	r0, r5
   135a4:	mov	r2, r8
   135a8:	b	133a8 <putchar_unlocked@plt+0x1e84>
   135ac:	ldr	r1, [sp, #80]	; 0x50
   135b0:	eor	r0, r4, #1
   135b4:	and	r0, r1, r0
   135b8:	tst	r0, #1
   135bc:	beq	135d0 <putchar_unlocked@plt+0x20ac>
   135c0:	ldr	r1, [sp, #32]
   135c4:	mov	r0, r5
   135c8:	mov	r2, r8
   135cc:	b	133c8 <putchar_unlocked@plt+0x1ea4>
   135d0:	ldr	r0, [sp, #32]
   135d4:	mov	r1, r8
   135d8:	b	133d8 <putchar_unlocked@plt+0x1eb4>
   135dc:	cmp	lr, #0
   135e0:	beq	13600 <putchar_unlocked@plt+0x20dc>
   135e4:	mov	r1, #100	; 0x64
   135e8:	mov	r4, #1
   135ec:	mla	r3, r3, r1, lr
   135f0:	mov	r1, #6
   135f4:	str	r1, [sp, #64]	; 0x40
   135f8:	mov	r1, #4
   135fc:	b	12eac <putchar_unlocked@plt+0x1988>
   13600:	mov	r1, #3
   13604:	b	131c4 <putchar_unlocked@plt+0x1ca0>
   13608:	mov	sl, #0
   1360c:	ldr	r0, [sp, #52]	; 0x34
   13610:	ldr	r1, [sp, #44]	; 0x2c
   13614:	str	r1, [r0]
   13618:	b	1362c <putchar_unlocked@plt+0x2108>
   1361c:	mov	r0, #34	; 0x22
   13620:	ldr	r1, [sp, #52]	; 0x34
   13624:	mov	sl, #0
   13628:	str	r0, [r1]
   1362c:	mov	r0, sl
   13630:	sub	sp, fp, #28
   13634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13638:	mov	r0, #75	; 0x4b
   1363c:	b	13620 <putchar_unlocked@plt+0x20fc>
   13640:	push	{r4, r5, r6, r7, fp, lr}
   13644:	add	fp, sp, #16
   13648:	cmp	r2, #0
   1364c:	beq	13680 <putchar_unlocked@plt+0x215c>
   13650:	mov	r4, r2
   13654:	mov	r5, r1
   13658:	mov	r6, r0
   1365c:	bl	11368 <__ctype_tolower_loc@plt>
   13660:	mov	r7, r0
   13664:	ldrb	r0, [r5], #1
   13668:	ldr	r1, [r7]
   1366c:	ldr	r0, [r1, r0, lsl #2]
   13670:	mov	r1, r6
   13674:	bl	11494 <fputc@plt>
   13678:	subs	r4, r4, #1
   1367c:	bne	13664 <putchar_unlocked@plt+0x2140>
   13680:	pop	{r4, r5, r6, r7, fp, pc}
   13684:	push	{r4, r5, r6, r7, fp, lr}
   13688:	add	fp, sp, #16
   1368c:	cmp	r2, #0
   13690:	beq	136c4 <putchar_unlocked@plt+0x21a0>
   13694:	mov	r4, r2
   13698:	mov	r5, r1
   1369c:	mov	r6, r0
   136a0:	bl	11374 <__ctype_toupper_loc@plt>
   136a4:	mov	r7, r0
   136a8:	ldrb	r0, [r5], #1
   136ac:	ldr	r1, [r7]
   136b0:	ldr	r0, [r1, r0, lsl #2]
   136b4:	mov	r1, r6
   136b8:	bl	11494 <fputc@plt>
   136bc:	subs	r4, r4, #1
   136c0:	bne	136a8 <putchar_unlocked@plt+0x2184>
   136c4:	pop	{r4, r5, r6, r7, fp, pc}
   136c8:	push	{r4, r5, r6, r7, fp, lr}
   136cc:	add	fp, sp, #16
   136d0:	sub	sp, sp, #8
   136d4:	mov	r4, r0
   136d8:	ldr	r0, [r0, #4]
   136dc:	mov	r5, r3
   136e0:	mov	r6, r2
   136e4:	ldr	r1, [r4, #8]
   136e8:	cmp	r1, r0
   136ec:	bne	13708 <putchar_unlocked@plt+0x21e4>
   136f0:	ldrd	r0, [r4, #16]
   136f4:	cmp	r1, r0
   136f8:	bne	13708 <putchar_unlocked@plt+0x21e4>
   136fc:	ldr	r0, [r4, #36]	; 0x24
   13700:	cmp	r0, #0
   13704:	beq	13720 <putchar_unlocked@plt+0x21fc>
   13708:	mov	r0, r4
   1370c:	mov	r2, r6
   13710:	mov	r3, r5
   13714:	sub	sp, fp, #16
   13718:	pop	{r4, r5, r6, r7, fp, lr}
   1371c:	b	11440 <fseeko64@plt>
   13720:	ldr	r7, [fp, #8]
   13724:	mov	r0, r4
   13728:	bl	1141c <fileno@plt>
   1372c:	mov	r2, r6
   13730:	mov	r3, r5
   13734:	str	r7, [sp]
   13738:	bl	112d8 <lseek64@plt>
   1373c:	and	r2, r0, r1
   13740:	cmn	r2, #1
   13744:	beq	13760 <putchar_unlocked@plt+0x223c>
   13748:	strd	r0, [r4, #80]	; 0x50
   1374c:	ldr	r0, [r4]
   13750:	bic	r0, r0, #16
   13754:	str	r0, [r4]
   13758:	mov	r0, #0
   1375c:	b	13764 <putchar_unlocked@plt+0x2240>
   13760:	mvn	r0, #0
   13764:	sub	sp, fp, #16
   13768:	pop	{r4, r5, r6, r7, fp, pc}
   1376c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13770:	add	fp, sp, #24
   13774:	sub	sp, sp, #8
   13778:	movw	r6, #33168	; 0x8190
   1377c:	mov	r4, #0
   13780:	cmp	r0, #2
   13784:	movt	r6, #2
   13788:	ldr	r7, [r6]
   1378c:	str	r4, [r6]
   13790:	bne	13804 <putchar_unlocked@plt+0x22e0>
   13794:	mov	r8, r3
   13798:	movw	r3, #27756	; 0x6c6c
   1379c:	mov	r5, r2
   137a0:	movw	r2, #27741	; 0x6c5d
   137a4:	mov	r0, #2
   137a8:	str	r4, [sp]
   137ac:	movt	r2, #1
   137b0:	movt	r3, #1
   137b4:	bl	1138c <getopt_long@plt>
   137b8:	cmp	r0, #104	; 0x68
   137bc:	beq	137f8 <putchar_unlocked@plt+0x22d4>
   137c0:	cmp	r0, #118	; 0x76
   137c4:	bne	13804 <putchar_unlocked@plt+0x22e0>
   137c8:	movw	r0, #33164	; 0x818c
   137cc:	ldr	r3, [fp, #8]
   137d0:	add	r1, fp, #16
   137d4:	mov	r2, r8
   137d8:	movt	r0, #2
   137dc:	str	r1, [sp, #4]
   137e0:	str	r1, [sp]
   137e4:	mov	r1, r5
   137e8:	ldr	r0, [r0]
   137ec:	bl	15dcc <putchar_unlocked@plt+0x48a8>
   137f0:	mov	r0, #0
   137f4:	bl	113b0 <exit@plt>
   137f8:	ldr	r1, [fp, #12]
   137fc:	mov	r0, #0
   13800:	blx	r1
   13804:	movw	r0, #33152	; 0x8180
   13808:	str	r7, [r6]
   1380c:	movt	r0, #2
   13810:	str	r4, [r0]
   13814:	sub	sp, fp, #24
   13818:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1381c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13820:	add	fp, sp, #24
   13824:	sub	sp, sp, #8
   13828:	mov	r8, r3
   1382c:	ldr	r3, [fp, #12]
   13830:	movw	r7, #33168	; 0x8190
   13834:	movw	r5, #26880	; 0x6900
   13838:	mov	r9, r2
   1383c:	mov	r2, #1
   13840:	mov	r6, #0
   13844:	movt	r7, #2
   13848:	movt	r5, #1
   1384c:	str	r6, [sp]
   13850:	ldr	r4, [r7]
   13854:	str	r2, [r7]
   13858:	movw	r2, #27741	; 0x6c5d
   1385c:	cmp	r3, #0
   13860:	movw	r3, #27756	; 0x6c6c
   13864:	movt	r2, #1
   13868:	movt	r3, #1
   1386c:	movne	r2, r5
   13870:	bl	1138c <getopt_long@plt>
   13874:	cmn	r0, #1
   13878:	beq	138a4 <putchar_unlocked@plt+0x2380>
   1387c:	cmp	r0, #104	; 0x68
   13880:	beq	13898 <putchar_unlocked@plt+0x2374>
   13884:	cmp	r0, #118	; 0x76
   13888:	beq	138b0 <putchar_unlocked@plt+0x238c>
   1388c:	movw	r0, #33076	; 0x8134
   13890:	movt	r0, #2
   13894:	ldr	r6, [r0]
   13898:	ldr	r1, [fp, #16]
   1389c:	mov	r0, r6
   138a0:	blx	r1
   138a4:	str	r4, [r7]
   138a8:	sub	sp, fp, #24
   138ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   138b0:	movw	r0, #33164	; 0x818c
   138b4:	ldr	r3, [fp, #8]
   138b8:	add	r1, fp, #20
   138bc:	mov	r2, r8
   138c0:	movt	r0, #2
   138c4:	str	r1, [sp, #4]
   138c8:	str	r1, [sp]
   138cc:	mov	r1, r9
   138d0:	ldr	r0, [r0]
   138d4:	bl	15dcc <putchar_unlocked@plt+0x48a8>
   138d8:	mov	r0, #0
   138dc:	bl	113b0 <exit@plt>
   138e0:	push	{r4, r5, fp, lr}
   138e4:	add	fp, sp, #8
   138e8:	cmp	r0, #0
   138ec:	beq	13980 <putchar_unlocked@plt+0x245c>
   138f0:	mov	r1, #47	; 0x2f
   138f4:	mov	r4, r0
   138f8:	bl	1147c <strrchr@plt>
   138fc:	cmp	r0, #0
   13900:	mov	r5, r4
   13904:	addne	r5, r0, #1
   13908:	sub	r0, r5, r4
   1390c:	cmp	r0, #7
   13910:	blt	13964 <putchar_unlocked@plt+0x2440>
   13914:	movw	r1, #27860	; 0x6cd4
   13918:	sub	r0, r5, #7
   1391c:	mov	r2, #7
   13920:	movt	r1, #1
   13924:	bl	114f4 <strncmp@plt>
   13928:	cmp	r0, #0
   1392c:	bne	13964 <putchar_unlocked@plt+0x2440>
   13930:	movw	r1, #27868	; 0x6cdc
   13934:	mov	r0, r5
   13938:	mov	r2, #3
   1393c:	movt	r1, #1
   13940:	bl	114f4 <strncmp@plt>
   13944:	cmp	r0, #0
   13948:	beq	13954 <putchar_unlocked@plt+0x2430>
   1394c:	mov	r4, r5
   13950:	b	13964 <putchar_unlocked@plt+0x2440>
   13954:	movw	r0, #33144	; 0x8178
   13958:	add	r4, r5, #3
   1395c:	movt	r0, #2
   13960:	str	r4, [r0]
   13964:	movw	r0, #33148	; 0x817c
   13968:	movt	r0, #2
   1396c:	str	r4, [r0]
   13970:	movw	r0, #33188	; 0x81a4
   13974:	movt	r0, #2
   13978:	str	r4, [r0]
   1397c:	pop	{r4, r5, fp, pc}
   13980:	movw	r0, #33160	; 0x8188
   13984:	movt	r0, #2
   13988:	ldr	r1, [r0]
   1398c:	movw	r0, #27804	; 0x6c9c
   13990:	movt	r0, #1
   13994:	bl	114e8 <fputs@plt>
   13998:	bl	11500 <abort@plt>
   1399c:	push	{r4, r5, r6, sl, fp, lr}
   139a0:	add	fp, sp, #16
   139a4:	mov	r4, r0
   139a8:	movw	r0, #33192	; 0x81a8
   139ac:	movt	r0, #2
   139b0:	cmp	r4, #0
   139b4:	moveq	r4, r0
   139b8:	bl	113e0 <__errno_location@plt>
   139bc:	ldr	r6, [r0]
   139c0:	mov	r5, r0
   139c4:	mov	r0, r4
   139c8:	mov	r1, #48	; 0x30
   139cc:	bl	16274 <putchar_unlocked@plt+0x4d50>
   139d0:	str	r6, [r5]
   139d4:	pop	{r4, r5, r6, sl, fp, pc}
   139d8:	movw	r1, #33192	; 0x81a8
   139dc:	cmp	r0, #0
   139e0:	movt	r1, #2
   139e4:	movne	r1, r0
   139e8:	ldr	r0, [r1]
   139ec:	bx	lr
   139f0:	movw	r2, #33192	; 0x81a8
   139f4:	cmp	r0, #0
   139f8:	movt	r2, #2
   139fc:	movne	r2, r0
   13a00:	str	r1, [r2]
   13a04:	bx	lr
   13a08:	movw	r3, #33192	; 0x81a8
   13a0c:	cmp	r0, #0
   13a10:	and	r2, r2, #1
   13a14:	movt	r3, #2
   13a18:	movne	r3, r0
   13a1c:	ubfx	r0, r1, #5, #3
   13a20:	and	r1, r1, #31
   13a24:	add	ip, r3, r0, lsl #2
   13a28:	mov	r0, #1
   13a2c:	ldr	r3, [ip, #8]
   13a30:	and	r0, r0, r3, lsr r1
   13a34:	eor	r2, r0, r2
   13a38:	eor	r1, r3, r2, lsl r1
   13a3c:	str	r1, [ip, #8]
   13a40:	bx	lr
   13a44:	movw	r2, #33192	; 0x81a8
   13a48:	cmp	r0, #0
   13a4c:	movt	r2, #2
   13a50:	movne	r2, r0
   13a54:	ldr	r0, [r2, #4]
   13a58:	str	r1, [r2, #4]
   13a5c:	bx	lr
   13a60:	push	{fp, lr}
   13a64:	mov	fp, sp
   13a68:	movw	r3, #33192	; 0x81a8
   13a6c:	cmp	r0, #0
   13a70:	movt	r3, #2
   13a74:	movne	r3, r0
   13a78:	cmp	r1, #0
   13a7c:	mov	r0, #10
   13a80:	cmpne	r2, #0
   13a84:	str	r0, [r3]
   13a88:	bne	13a90 <putchar_unlocked@plt+0x256c>
   13a8c:	bl	11500 <abort@plt>
   13a90:	str	r1, [r3, #40]	; 0x28
   13a94:	str	r2, [r3, #44]	; 0x2c
   13a98:	pop	{fp, pc}
   13a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13aa0:	add	fp, sp, #28
   13aa4:	sub	sp, sp, #20
   13aa8:	mov	r7, r0
   13aac:	ldr	r0, [fp, #8]
   13ab0:	movw	r5, #33192	; 0x81a8
   13ab4:	mov	r8, r3
   13ab8:	mov	r9, r2
   13abc:	mov	sl, r1
   13ac0:	movt	r5, #2
   13ac4:	cmp	r0, #0
   13ac8:	movne	r5, r0
   13acc:	bl	113e0 <__errno_location@plt>
   13ad0:	ldr	r2, [r5, #40]	; 0x28
   13ad4:	ldr	r3, [r5, #44]	; 0x2c
   13ad8:	mov	r4, r0
   13adc:	ldm	r5, {r0, r1}
   13ae0:	add	r5, r5, #8
   13ae4:	ldr	r6, [r4]
   13ae8:	stm	sp, {r0, r1, r5}
   13aec:	mov	r0, r7
   13af0:	mov	r1, sl
   13af4:	str	r2, [sp, #12]
   13af8:	str	r3, [sp, #16]
   13afc:	mov	r2, r9
   13b00:	mov	r3, r8
   13b04:	bl	13b14 <putchar_unlocked@plt+0x25f0>
   13b08:	str	r6, [r4]
   13b0c:	sub	sp, fp, #28
   13b10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b18:	add	fp, sp, #28
   13b1c:	sub	sp, sp, #156	; 0x9c
   13b20:	mov	r5, r0
   13b24:	add	r0, r2, #1
   13b28:	mov	r6, r1
   13b2c:	mov	sl, r3
   13b30:	str	r2, [fp, #-80]	; 0xffffffb0
   13b34:	str	r0, [sp, #72]	; 0x48
   13b38:	ldr	r0, [fp, #12]
   13b3c:	and	r1, r0, #1
   13b40:	str	r1, [sp, #32]
   13b44:	and	r1, r0, #4
   13b48:	str	r1, [sp, #28]
   13b4c:	ubfx	r9, r0, #1, #1
   13b50:	bl	112e4 <__ctype_get_mb_cur_max@plt>
   13b54:	str	r0, [sp, #40]	; 0x28
   13b58:	ldr	r0, [fp, #24]
   13b5c:	ldr	r7, [fp, #8]
   13b60:	mov	r1, #0
   13b64:	mov	lr, #0
   13b68:	str	r5, [fp, #-84]	; 0xffffffac
   13b6c:	str	r1, [sp, #60]	; 0x3c
   13b70:	mov	r1, #1
   13b74:	str	r1, [fp, #-48]	; 0xffffffd0
   13b78:	str	r0, [sp, #80]	; 0x50
   13b7c:	ldr	r0, [fp, #20]
   13b80:	str	r0, [sp, #76]	; 0x4c
   13b84:	mov	r0, #0
   13b88:	str	r0, [sp, #56]	; 0x38
   13b8c:	mov	r0, #0
   13b90:	str	r0, [fp, #-88]	; 0xffffffa8
   13b94:	mov	r0, #0
   13b98:	str	r0, [fp, #-72]	; 0xffffffb8
   13b9c:	mov	r0, #0
   13ba0:	cmp	r7, #10
   13ba4:	bhi	14b80 <putchar_unlocked@plt+0x365c>
   13ba8:	add	r1, pc, #24
   13bac:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13bb0:	mov	ip, r6
   13bb4:	mov	r8, #0
   13bb8:	mov	r2, #1
   13bbc:	mov	r6, #0
   13bc0:	mov	r3, sl
   13bc4:	ldr	pc, [r1, r7, lsl #2]
   13bc8:			; <UNDEFINED> instruction: 0x00013cb4
   13bcc:	andeq	r3, r1, r8, lsl #26
   13bd0:	andeq	r3, r1, r8, asr #25
   13bd4:	andeq	r3, r1, ip, lsr #25
   13bd8:	strdeq	r3, [r1], -ip
   13bdc:	andeq	r3, r1, r0, lsr sp
   13be0:	ldrdeq	r3, [r1], -r8
   13be4:			; <UNDEFINED> instruction: 0x00013db4
   13be8:	strdeq	r3, [r1], -r4
   13bec:	strdeq	r3, [r1], -r4
   13bf0:	andeq	r3, r1, r4, lsr ip
   13bf4:	movw	r0, #27952	; 0x6d30
   13bf8:	mov	r1, r7
   13bfc:	mov	r6, r5
   13c00:	mov	r4, ip
   13c04:	mov	r5, lr
   13c08:	movt	r0, #1
   13c0c:	bl	152e4 <putchar_unlocked@plt+0x3dc0>
   13c10:	str	r0, [sp, #76]	; 0x4c
   13c14:	movw	r0, #27954	; 0x6d32
   13c18:	mov	r1, r7
   13c1c:	movt	r0, #1
   13c20:	bl	152e4 <putchar_unlocked@plt+0x3dc0>
   13c24:	mov	lr, r5
   13c28:	mov	r5, r6
   13c2c:	mov	ip, r4
   13c30:	str	r0, [sp, #80]	; 0x50
   13c34:	mov	r8, #0
   13c38:	tst	r9, #1
   13c3c:	str	lr, [sp, #44]	; 0x2c
   13c40:	bne	13c78 <putchar_unlocked@plt+0x2754>
   13c44:	ldr	r0, [sp, #76]	; 0x4c
   13c48:	ldrb	r0, [r0]
   13c4c:	cmp	r0, #0
   13c50:	beq	13c78 <putchar_unlocked@plt+0x2754>
   13c54:	ldr	r1, [sp, #76]	; 0x4c
   13c58:	mov	r8, #0
   13c5c:	add	r1, r1, #1
   13c60:	cmp	r8, ip
   13c64:	strbcc	r0, [r5, r8]
   13c68:	ldrb	r0, [r1, r8]
   13c6c:	add	r8, r8, #1
   13c70:	cmp	r0, #0
   13c74:	bne	13c60 <putchar_unlocked@plt+0x273c>
   13c78:	ldr	r6, [sp, #80]	; 0x50
   13c7c:	mov	r4, ip
   13c80:	mov	r0, r6
   13c84:	bl	113c8 <strlen@plt>
   13c88:	mov	ip, r4
   13c8c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13c90:	ldr	lr, [sp, #44]	; 0x2c
   13c94:	str	r6, [fp, #-88]	; 0xffffffa8
   13c98:	str	r0, [fp, #-72]	; 0xffffffb8
   13c9c:	mov	r2, #1
   13ca0:	mov	r6, r9
   13ca4:	mov	r3, sl
   13ca8:	b	13db4 <putchar_unlocked@plt+0x2890>
   13cac:	mov	r0, #1
   13cb0:	b	13d08 <putchar_unlocked@plt+0x27e4>
   13cb4:	mov	r7, #0
   13cb8:	mov	r8, #0
   13cbc:	mov	r2, r0
   13cc0:	mov	r6, #0
   13cc4:	b	13db4 <putchar_unlocked@plt+0x2890>
   13cc8:	tst	r9, #1
   13ccc:	bne	13d08 <putchar_unlocked@plt+0x27e4>
   13cd0:	mov	r2, r0
   13cd4:	b	13d60 <putchar_unlocked@plt+0x283c>
   13cd8:	mov	r0, #1
   13cdc:	mov	r8, #0
   13ce0:	mov	r7, #5
   13ce4:	mov	r2, #1
   13ce8:	str	r0, [fp, #-72]	; 0xffffffb8
   13cec:	movw	r0, #27950	; 0x6d2e
   13cf0:	movt	r0, #1
   13cf4:	str	r0, [fp, #-88]	; 0xffffffa8
   13cf8:	b	13d28 <putchar_unlocked@plt+0x2804>
   13cfc:	mov	r2, #1
   13d00:	tst	r9, #1
   13d04:	beq	13d60 <putchar_unlocked@plt+0x283c>
   13d08:	mov	r1, #1
   13d0c:	mov	r8, #0
   13d10:	mov	r7, #2
   13d14:	mov	r2, r0
   13d18:	str	r1, [fp, #-72]	; 0xffffffb8
   13d1c:	movw	r1, #27954	; 0x6d32
   13d20:	movt	r1, #1
   13d24:	str	r1, [fp, #-88]	; 0xffffffa8
   13d28:	mov	r6, #1
   13d2c:	b	13db4 <putchar_unlocked@plt+0x2890>
   13d30:	tst	r9, #1
   13d34:	beq	13d84 <putchar_unlocked@plt+0x2860>
   13d38:	mov	r0, #1
   13d3c:	mov	r8, #0
   13d40:	mov	r2, #1
   13d44:	mov	r6, #1
   13d48:	mov	r7, #5
   13d4c:	str	r0, [fp, #-72]	; 0xffffffb8
   13d50:	movw	r0, #27950	; 0x6d2e
   13d54:	movt	r0, #1
   13d58:	str	r0, [fp, #-88]	; 0xffffffa8
   13d5c:	b	13db4 <putchar_unlocked@plt+0x2890>
   13d60:	cmp	ip, #0
   13d64:	mov	r8, #1
   13d68:	mov	r6, #0
   13d6c:	mov	r7, #2
   13d70:	movne	r0, #39	; 0x27
   13d74:	strbne	r0, [r5]
   13d78:	movw	r0, #27954	; 0x6d32
   13d7c:	movt	r0, #1
   13d80:	b	13da8 <putchar_unlocked@plt+0x2884>
   13d84:	cmp	ip, #0
   13d88:	mov	r8, #1
   13d8c:	mov	r2, #1
   13d90:	mov	r7, #5
   13d94:	mov	r6, #0
   13d98:	movne	r0, #34	; 0x22
   13d9c:	strbne	r0, [r5]
   13da0:	movw	r0, #27950	; 0x6d2e
   13da4:	movt	r0, #1
   13da8:	str	r0, [fp, #-88]	; 0xffffffa8
   13dac:	mov	r0, #1
   13db0:	str	r0, [fp, #-72]	; 0xffffffb8
   13db4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13db8:	str	r7, [fp, #-68]	; 0xffffffbc
   13dbc:	str	r6, [fp, #-76]	; 0xffffffb4
   13dc0:	str	r2, [sp, #84]	; 0x54
   13dc4:	cmp	r0, #0
   13dc8:	movwne	r0, #1
   13dcc:	and	r1, r0, r6
   13dd0:	and	r1, r2, r1
   13dd4:	str	r1, [sp, #48]	; 0x30
   13dd8:	sub	r1, r7, #2
   13ddc:	clz	r1, r1
   13de0:	lsr	r1, r1, #5
   13de4:	and	r1, r1, r6
   13de8:	str	r1, [sp, #64]	; 0x40
   13dec:	subs	r1, r7, #2
   13df0:	eor	r7, r6, #1
   13df4:	movwne	r1, #1
   13df8:	str	r7, [sp, #92]	; 0x5c
   13dfc:	orr	r7, r1, r7
   13e00:	and	r1, r1, r2
   13e04:	and	r0, r0, r1
   13e08:	str	r7, [sp, #68]	; 0x44
   13e0c:	mov	r7, #0
   13e10:	str	r0, [fp, #-60]	; 0xffffffc4
   13e14:	orr	r0, r1, r6
   13e18:	ldr	r1, [fp, #16]
   13e1c:	eor	r0, r0, #1
   13e20:	clz	r1, r1
   13e24:	lsr	r1, r1, #5
   13e28:	orr	r0, r1, r0
   13e2c:	str	r0, [fp, #-64]	; 0xffffffc0
   13e30:	eor	r0, r2, #1
   13e34:	str	r0, [sp, #52]	; 0x34
   13e38:	cmn	r3, #1
   13e3c:	beq	13e4c <putchar_unlocked@plt+0x2928>
   13e40:	cmp	r7, r3
   13e44:	bne	13e58 <putchar_unlocked@plt+0x2934>
   13e48:	b	149b4 <putchar_unlocked@plt+0x3490>
   13e4c:	ldrb	r0, [r4, r7]
   13e50:	cmp	r0, #0
   13e54:	beq	149bc <putchar_unlocked@plt+0x3498>
   13e58:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13e5c:	cmp	r0, #0
   13e60:	beq	13ea8 <putchar_unlocked@plt+0x2984>
   13e64:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13e68:	add	r5, r7, r0
   13e6c:	cmp	r0, #2
   13e70:	bcc	13ebc <putchar_unlocked@plt+0x2998>
   13e74:	mov	r0, #0
   13e78:	cmn	r3, #1
   13e7c:	str	r0, [fp, #-56]	; 0xffffffc8
   13e80:	bne	13ec4 <putchar_unlocked@plt+0x29a0>
   13e84:	mov	r0, r4
   13e88:	mov	r4, ip
   13e8c:	mov	r6, lr
   13e90:	bl	113c8 <strlen@plt>
   13e94:	mov	ip, r4
   13e98:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13e9c:	mov	lr, r6
   13ea0:	mov	r3, r0
   13ea4:	b	13ec4 <putchar_unlocked@plt+0x29a0>
   13ea8:	mov	r0, #0
   13eac:	mov	sl, r3
   13eb0:	str	r0, [fp, #-56]	; 0xffffffc8
   13eb4:	mov	r0, #0
   13eb8:	b	13f30 <putchar_unlocked@plt+0x2a0c>
   13ebc:	mov	r0, #0
   13ec0:	str	r0, [fp, #-56]	; 0xffffffc8
   13ec4:	cmp	r5, r3
   13ec8:	bls	13edc <putchar_unlocked@plt+0x29b8>
   13ecc:	ldr	r5, [fp, #-84]	; 0xffffffac
   13ed0:	mov	r0, #0
   13ed4:	mov	sl, r3
   13ed8:	b	13f30 <putchar_unlocked@plt+0x2a0c>
   13edc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13ee0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13ee4:	add	r0, r4, r7
   13ee8:	mov	r5, lr
   13eec:	mov	r6, ip
   13ef0:	mov	sl, r3
   13ef4:	bl	113bc <bcmp@plt>
   13ef8:	ldr	r2, [sp, #92]	; 0x5c
   13efc:	cmp	r0, #0
   13f00:	ldr	r3, [fp, #-84]	; 0xffffffac
   13f04:	mov	r1, r0
   13f08:	movwne	r1, #1
   13f0c:	orr	r1, r1, r2
   13f10:	tst	r1, #1
   13f14:	beq	14a40 <putchar_unlocked@plt+0x351c>
   13f18:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13f1c:	clz	r0, r0
   13f20:	mov	lr, r5
   13f24:	mov	ip, r6
   13f28:	mov	r5, r3
   13f2c:	lsr	r0, r0, #5
   13f30:	str	r0, [fp, #-52]	; 0xffffffcc
   13f34:	ldrb	r6, [r4, r7]
   13f38:	cmp	r6, #126	; 0x7e
   13f3c:	bhi	14464 <putchar_unlocked@plt+0x2f40>
   13f40:	add	r3, pc, #16
   13f44:	mov	r9, #1
   13f48:	mov	r2, #110	; 0x6e
   13f4c:	mov	r0, #97	; 0x61
   13f50:	mov	r1, #0
   13f54:	ldr	pc, [r3, r6, lsl #2]
   13f58:	andeq	r4, r1, r8, asr #5
   13f5c:	andeq	r4, r1, r4, ror #8
   13f60:	andeq	r4, r1, r4, ror #8
   13f64:	andeq	r4, r1, r4, ror #8
   13f68:	andeq	r4, r1, r4, ror #8
   13f6c:	andeq	r4, r1, r4, ror #8
   13f70:	andeq	r4, r1, r4, ror #8
   13f74:	andeq	r4, r1, r4, ror #9
   13f78:	andeq	r4, r1, r8, lsr #5
   13f7c:	andeq	r4, r1, r0, lsr #5
   13f80:			; <UNDEFINED> instruction: 0x000142b4
   13f84:	andeq	r4, r1, ip, asr #7
   13f88:	muleq	r1, r8, r2
   13f8c:			; <UNDEFINED> instruction: 0x000142b0
   13f90:	andeq	r4, r1, r4, ror #8
   13f94:	andeq	r4, r1, r4, ror #8
   13f98:	andeq	r4, r1, r4, ror #8
   13f9c:	andeq	r4, r1, r4, ror #8
   13fa0:	andeq	r4, r1, r4, ror #8
   13fa4:	andeq	r4, r1, r4, ror #8
   13fa8:	andeq	r4, r1, r4, ror #8
   13fac:	andeq	r4, r1, r4, ror #8
   13fb0:	andeq	r4, r1, r4, ror #8
   13fb4:	andeq	r4, r1, r4, ror #8
   13fb8:	andeq	r4, r1, r4, ror #8
   13fbc:	andeq	r4, r1, r4, ror #8
   13fc0:	andeq	r4, r1, r4, ror #8
   13fc4:	andeq	r4, r1, r4, ror #8
   13fc8:	andeq	r4, r1, r4, ror #8
   13fcc:	andeq	r4, r1, r4, ror #8
   13fd0:	andeq	r4, r1, r4, ror #8
   13fd4:	andeq	r4, r1, r4, ror #8
   13fd8:	andeq	r4, r1, r8, asr #4
   13fdc:	andeq	r4, r1, ip, asr #4
   13fe0:	andeq	r4, r1, ip, asr #4
   13fe4:	andeq	r4, r1, r0, lsr r2
   13fe8:	andeq	r4, r1, ip, asr #4
   13fec:	andeq	r4, r1, r4, asr r1
   13ff0:	andeq	r4, r1, ip, asr #4
   13ff4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13ff8:	andeq	r4, r1, ip, asr #4
   13ffc:	andeq	r4, r1, ip, asr #4
   14000:	andeq	r4, r1, ip, asr #4
   14004:	andeq	r4, r1, r4, asr r1
   14008:	andeq	r4, r1, r4, asr r1
   1400c:	andeq	r4, r1, r4, asr r1
   14010:	andeq	r4, r1, r4, asr r1
   14014:	andeq	r4, r1, r4, asr r1
   14018:	andeq	r4, r1, r4, asr r1
   1401c:	andeq	r4, r1, r4, asr r1
   14020:	andeq	r4, r1, r4, asr r1
   14024:	andeq	r4, r1, r4, asr r1
   14028:	andeq	r4, r1, r4, asr r1
   1402c:	andeq	r4, r1, r4, asr r1
   14030:	andeq	r4, r1, r4, asr r1
   14034:	andeq	r4, r1, r4, asr r1
   14038:	andeq	r4, r1, r4, asr r1
   1403c:	andeq	r4, r1, r4, asr r1
   14040:	andeq	r4, r1, r4, asr r1
   14044:	andeq	r4, r1, ip, asr #4
   14048:	andeq	r4, r1, ip, asr #4
   1404c:	andeq	r4, r1, ip, asr #4
   14050:	andeq	r4, r1, ip, asr #4
   14054:	andeq	r4, r1, r0, lsr #7
   14058:	andeq	r4, r1, r4, ror #8
   1405c:	andeq	r4, r1, r4, asr r1
   14060:	andeq	r4, r1, r4, asr r1
   14064:	andeq	r4, r1, r4, asr r1
   14068:	andeq	r4, r1, r4, asr r1
   1406c:	andeq	r4, r1, r4, asr r1
   14070:	andeq	r4, r1, r4, asr r1
   14074:	andeq	r4, r1, r4, asr r1
   14078:	andeq	r4, r1, r4, asr r1
   1407c:	andeq	r4, r1, r4, asr r1
   14080:	andeq	r4, r1, r4, asr r1
   14084:	andeq	r4, r1, r4, asr r1
   14088:	andeq	r4, r1, r4, asr r1
   1408c:	andeq	r4, r1, r4, asr r1
   14090:	andeq	r4, r1, r4, asr r1
   14094:	andeq	r4, r1, r4, asr r1
   14098:	andeq	r4, r1, r4, asr r1
   1409c:	andeq	r4, r1, r4, asr r1
   140a0:	andeq	r4, r1, r4, asr r1
   140a4:	andeq	r4, r1, r4, asr r1
   140a8:	andeq	r4, r1, r4, asr r1
   140ac:	andeq	r4, r1, r4, asr r1
   140b0:	andeq	r4, r1, r4, asr r1
   140b4:	andeq	r4, r1, r4, asr r1
   140b8:	andeq	r4, r1, r4, asr r1
   140bc:	andeq	r4, r1, r4, asr r1
   140c0:	andeq	r4, r1, r4, asr r1
   140c4:	andeq	r4, r1, ip, asr #4
   140c8:	andeq	r4, r1, r4, ror r2
   140cc:	andeq	r4, r1, r4, asr r1
   140d0:	andeq	r4, r1, ip, asr #4
   140d4:	andeq	r4, r1, r4, asr r1
   140d8:	andeq	r4, r1, ip, asr #4
   140dc:	andeq	r4, r1, r4, asr r1
   140e0:	andeq	r4, r1, r4, asr r1
   140e4:	andeq	r4, r1, r4, asr r1
   140e8:	andeq	r4, r1, r4, asr r1
   140ec:	andeq	r4, r1, r4, asr r1
   140f0:	andeq	r4, r1, r4, asr r1
   140f4:	andeq	r4, r1, r4, asr r1
   140f8:	andeq	r4, r1, r4, asr r1
   140fc:	andeq	r4, r1, r4, asr r1
   14100:	andeq	r4, r1, r4, asr r1
   14104:	andeq	r4, r1, r4, asr r1
   14108:	andeq	r4, r1, r4, asr r1
   1410c:	andeq	r4, r1, r4, asr r1
   14110:	andeq	r4, r1, r4, asr r1
   14114:	andeq	r4, r1, r4, asr r1
   14118:	andeq	r4, r1, r4, asr r1
   1411c:	andeq	r4, r1, r4, asr r1
   14120:	andeq	r4, r1, r4, asr r1
   14124:	andeq	r4, r1, r4, asr r1
   14128:	andeq	r4, r1, r4, asr r1
   1412c:	andeq	r4, r1, r4, asr r1
   14130:	andeq	r4, r1, r4, asr r1
   14134:	andeq	r4, r1, r4, asr r1
   14138:	andeq	r4, r1, r4, asr r1
   1413c:	andeq	r4, r1, r4, asr r1
   14140:	andeq	r4, r1, r4, asr r1
   14144:	andeq	r4, r1, r8, lsl #4
   14148:	andeq	r4, r1, ip, asr #4
   1414c:	andeq	r4, r1, r8, lsl #4
   14150:	andeq	r4, r1, r0, lsr r2
   14154:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14158:	tst	r0, #1
   1415c:	bne	14188 <putchar_unlocked@plt+0x2c64>
   14160:	ldr	r1, [fp, #16]
   14164:	ubfx	r0, r6, #5, #3
   14168:	mov	r2, #1
   1416c:	ldr	r0, [r1, r0, lsl #2]
   14170:	and	r1, r6, #31
   14174:	tst	r0, r2, lsl r1
   14178:	beq	14188 <putchar_unlocked@plt+0x2c64>
   1417c:	mov	r0, r6
   14180:	mov	r1, r9
   14184:	b	1419c <putchar_unlocked@plt+0x2c78>
   14188:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1418c:	mov	r1, r9
   14190:	cmp	r0, #0
   14194:	mov	r0, r6
   14198:	beq	148e8 <putchar_unlocked@plt+0x33c4>
   1419c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   141a0:	tst	r2, #1
   141a4:	bne	14a84 <putchar_unlocked@plt+0x3560>
   141a8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   141ac:	subs	r2, r2, #2
   141b0:	movwne	r2, #1
   141b4:	orr	r2, r2, lr
   141b8:	tst	r2, #1
   141bc:	bne	141f4 <putchar_unlocked@plt+0x2cd0>
   141c0:	cmp	r8, ip
   141c4:	mov	lr, #1
   141c8:	movcc	r2, #39	; 0x27
   141cc:	strbcc	r2, [r5, r8]
   141d0:	add	r2, r8, #1
   141d4:	cmp	r2, ip
   141d8:	movcc	r3, #36	; 0x24
   141dc:	strbcc	r3, [r5, r2]
   141e0:	add	r2, r8, #2
   141e4:	add	r8, r8, #3
   141e8:	cmp	r2, ip
   141ec:	movcc	r3, #39	; 0x27
   141f0:	strbcc	r3, [r5, r2]
   141f4:	cmp	r8, ip
   141f8:	movcc	r2, #92	; 0x5c
   141fc:	strbcc	r2, [r5, r8]
   14200:	add	r8, r8, #1
   14204:	b	14928 <putchar_unlocked@plt+0x3404>
   14208:	cmp	sl, #1
   1420c:	beq	14230 <putchar_unlocked@plt+0x2d0c>
   14210:	mov	r9, #0
   14214:	cmn	sl, #1
   14218:	bne	1423c <putchar_unlocked@plt+0x2d18>
   1421c:	ldrb	r0, [r4, #1]
   14220:	cmp	r0, #0
   14224:	beq	14230 <putchar_unlocked@plt+0x2d0c>
   14228:	mvn	sl, #0
   1422c:	b	1423c <putchar_unlocked@plt+0x2d18>
   14230:	mov	r9, #0
   14234:	cmp	r7, #0
   14238:	beq	14248 <putchar_unlocked@plt+0x2d24>
   1423c:	mov	r0, #0
   14240:	str	r0, [fp, #-56]	; 0xffffffc8
   14244:	b	14154 <putchar_unlocked@plt+0x2c30>
   14248:	mov	r1, #1
   1424c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14250:	cmp	r0, #2
   14254:	bne	1426c <putchar_unlocked@plt+0x2d48>
   14258:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1425c:	mov	r9, r1
   14260:	tst	r0, #1
   14264:	beq	14154 <putchar_unlocked@plt+0x2c30>
   14268:	b	14a84 <putchar_unlocked@plt+0x3560>
   1426c:	mov	r9, r1
   14270:	b	14154 <putchar_unlocked@plt+0x2c30>
   14274:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14278:	cmp	r0, #2
   1427c:	bne	144c0 <putchar_unlocked@plt+0x2f9c>
   14280:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14284:	tst	r0, #1
   14288:	bne	14a84 <putchar_unlocked@plt+0x3560>
   1428c:	mov	r0, #0
   14290:	str	r0, [fp, #-56]	; 0xffffffc8
   14294:	b	144d8 <putchar_unlocked@plt+0x2fb4>
   14298:	mov	r0, #102	; 0x66
   1429c:	b	144e4 <putchar_unlocked@plt+0x2fc0>
   142a0:	mov	r2, #116	; 0x74
   142a4:	b	142b4 <putchar_unlocked@plt+0x2d90>
   142a8:	mov	r0, #98	; 0x62
   142ac:	b	144e4 <putchar_unlocked@plt+0x2fc0>
   142b0:	mov	r2, #114	; 0x72
   142b4:	ldr	r0, [sp, #68]	; 0x44
   142b8:	tst	r0, #1
   142bc:	mov	r0, r2
   142c0:	bne	144e4 <putchar_unlocked@plt+0x2fc0>
   142c4:	b	14a84 <putchar_unlocked@plt+0x3560>
   142c8:	ldr	r0, [sp, #84]	; 0x54
   142cc:	tst	r0, #1
   142d0:	beq	14504 <putchar_unlocked@plt+0x2fe0>
   142d4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   142d8:	tst	r0, #1
   142dc:	bne	14b70 <putchar_unlocked@plt+0x364c>
   142e0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   142e4:	mov	r2, sl
   142e8:	subs	r0, r0, #2
   142ec:	movwne	r0, #1
   142f0:	orr	r0, r0, lr
   142f4:	tst	r0, #1
   142f8:	bne	14330 <putchar_unlocked@plt+0x2e0c>
   142fc:	cmp	r8, ip
   14300:	mov	lr, #1
   14304:	movcc	r0, #39	; 0x27
   14308:	strbcc	r0, [r5, r8]
   1430c:	add	r0, r8, #1
   14310:	cmp	r0, ip
   14314:	movcc	r1, #36	; 0x24
   14318:	strbcc	r1, [r5, r0]
   1431c:	add	r0, r8, #2
   14320:	add	r8, r8, #3
   14324:	cmp	r0, ip
   14328:	movcc	r1, #39	; 0x27
   1432c:	strbcc	r1, [r5, r0]
   14330:	mov	r1, #1
   14334:	cmp	r8, ip
   14338:	mov	r9, #0
   1433c:	mov	r6, #48	; 0x30
   14340:	str	r1, [fp, #-56]	; 0xffffffc8
   14344:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14348:	movcc	r0, #92	; 0x5c
   1434c:	strbcc	r0, [r5, r8]
   14350:	add	r0, r8, #1
   14354:	cmp	r1, #2
   14358:	beq	14660 <putchar_unlocked@plt+0x313c>
   1435c:	add	r1, r7, #1
   14360:	cmp	r1, r2
   14364:	bcs	14660 <putchar_unlocked@plt+0x313c>
   14368:	ldrb	r1, [r4, r1]
   1436c:	sub	r1, r1, #48	; 0x30
   14370:	uxtb	r1, r1
   14374:	cmp	r1, #9
   14378:	bhi	14660 <putchar_unlocked@plt+0x313c>
   1437c:	cmp	r0, ip
   14380:	movcc	r1, #48	; 0x30
   14384:	strbcc	r1, [r5, r0]
   14388:	add	r0, r8, #2
   1438c:	add	r8, r8, #3
   14390:	cmp	r0, ip
   14394:	movcc	r1, #48	; 0x30
   14398:	strbcc	r1, [r5, r0]
   1439c:	b	14154 <putchar_unlocked@plt+0x2c30>
   143a0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   143a4:	mov	r6, #63	; 0x3f
   143a8:	cmp	r0, #5
   143ac:	beq	14668 <putchar_unlocked@plt+0x3144>
   143b0:	mov	r1, #0
   143b4:	cmp	r0, #2
   143b8:	str	r1, [fp, #-56]	; 0xffffffc8
   143bc:	bne	1471c <putchar_unlocked@plt+0x31f8>
   143c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   143c4:	mov	r9, #0
   143c8:	b	14260 <putchar_unlocked@plt+0x2d3c>
   143cc:	mov	r0, #118	; 0x76
   143d0:	b	144e4 <putchar_unlocked@plt+0x2fc0>
   143d4:	mov	r0, #1
   143d8:	mov	r6, #39	; 0x27
   143dc:	str	r0, [sp, #60]	; 0x3c
   143e0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   143e4:	cmp	r0, #2
   143e8:	bne	1445c <putchar_unlocked@plt+0x2f38>
   143ec:	ldr	r0, [fp, #-76]	; 0xffffffb4
   143f0:	tst	r0, #1
   143f4:	bne	14a84 <putchar_unlocked@plt+0x3560>
   143f8:	ldr	r2, [sp, #56]	; 0x38
   143fc:	clz	r1, ip
   14400:	mov	lr, #0
   14404:	lsr	r1, r1, #5
   14408:	cmp	r2, #0
   1440c:	mov	r0, r2
   14410:	movwne	r0, #1
   14414:	orrs	r0, r0, r1
   14418:	moveq	r2, ip
   1441c:	moveq	ip, r0
   14420:	cmp	r8, ip
   14424:	str	r2, [sp, #56]	; 0x38
   14428:	movcc	r0, #39	; 0x27
   1442c:	strbcc	r0, [r5, r8]
   14430:	add	r0, r8, #1
   14434:	cmp	r0, ip
   14438:	movcc	r1, #92	; 0x5c
   1443c:	strbcc	r1, [r5, r0]
   14440:	add	r0, r8, #2
   14444:	add	r8, r8, #3
   14448:	cmp	r0, ip
   1444c:	movcc	r1, #39	; 0x27
   14450:	strbcc	r1, [r5, r0]
   14454:	mov	r0, #0
   14458:	str	r0, [fp, #-56]	; 0xffffffc8
   1445c:	mov	r9, #1
   14460:	b	14154 <putchar_unlocked@plt+0x2c30>
   14464:	ldr	r0, [sp, #40]	; 0x28
   14468:	str	lr, [sp, #44]	; 0x2c
   1446c:	str	ip, [sp, #88]	; 0x58
   14470:	cmp	r0, #1
   14474:	bne	14524 <putchar_unlocked@plt+0x3000>
   14478:	str	sl, [sp, #36]	; 0x24
   1447c:	bl	113a4 <__ctype_b_loc@plt>
   14480:	ldr	r0, [r0]
   14484:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14488:	mov	r1, #1
   1448c:	add	r0, r0, r6, lsl #1
   14490:	ldrb	r0, [r0, #1]
   14494:	ubfx	r9, r0, #6, #1
   14498:	ldr	r0, [sp, #52]	; 0x34
   1449c:	ldr	lr, [sp, #44]	; 0x2c
   144a0:	cmp	r1, #1
   144a4:	orr	r3, r9, r0
   144a8:	bhi	14724 <putchar_unlocked@plt+0x3200>
   144ac:	tst	r3, #1
   144b0:	beq	14724 <putchar_unlocked@plt+0x3200>
   144b4:	ldr	sl, [sp, #36]	; 0x24
   144b8:	ldr	ip, [sp, #88]	; 0x58
   144bc:	b	14154 <putchar_unlocked@plt+0x2c30>
   144c0:	ldr	r1, [sp, #48]	; 0x30
   144c4:	mov	r0, #0
   144c8:	str	r0, [fp, #-56]	; 0xffffffc8
   144cc:	mov	r0, #92	; 0x5c
   144d0:	cmp	r1, #0
   144d4:	beq	144e4 <putchar_unlocked@plt+0x2fc0>
   144d8:	mov	r6, #92	; 0x5c
   144dc:	mov	r9, #0
   144e0:	b	148e8 <putchar_unlocked@plt+0x33c4>
   144e4:	mov	r1, #0
   144e8:	mov	r9, #0
   144ec:	str	r1, [fp, #-56]	; 0xffffffc8
   144f0:	ldr	r1, [sp, #84]	; 0x54
   144f4:	tst	r1, #1
   144f8:	mov	r1, #0
   144fc:	beq	14154 <putchar_unlocked@plt+0x2c30>
   14500:	b	1419c <putchar_unlocked@plt+0x2c78>
   14504:	ldr	r0, [sp, #32]
   14508:	mov	r6, #0
   1450c:	mov	r9, #0
   14510:	cmp	r0, #0
   14514:	mov	r0, #0
   14518:	str	r0, [fp, #-56]	; 0xffffffc8
   1451c:	beq	14154 <putchar_unlocked@plt+0x2c30>
   14520:	b	14940 <putchar_unlocked@plt+0x341c>
   14524:	mov	r0, #0
   14528:	cmn	sl, #1
   1452c:	sub	r3, fp, #40	; 0x28
   14530:	str	r0, [fp, #-36]	; 0xffffffdc
   14534:	str	r0, [fp, #-40]	; 0xffffffd8
   14538:	bne	14550 <putchar_unlocked@plt+0x302c>
   1453c:	mov	r0, r4
   14540:	bl	113c8 <strlen@plt>
   14544:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14548:	sub	r3, fp, #40	; 0x28
   1454c:	mov	sl, r0
   14550:	ldr	r0, [sp, #72]	; 0x48
   14554:	mov	r9, #1
   14558:	mov	r1, #0
   1455c:	str	sl, [sp, #36]	; 0x24
   14560:	add	r0, r0, r7
   14564:	str	r0, [sp, #20]
   14568:	add	r0, r1, r7
   1456c:	str	r1, [sp, #24]
   14570:	add	r1, r4, r0
   14574:	mov	r4, r0
   14578:	sub	r2, sl, r0
   1457c:	sub	r0, fp, #44	; 0x2c
   14580:	bl	16548 <putchar_unlocked@plt+0x5024>
   14584:	cmp	r0, #0
   14588:	beq	14994 <putchar_unlocked@plt+0x3470>
   1458c:	cmn	r0, #1
   14590:	beq	1494c <putchar_unlocked@plt+0x3428>
   14594:	ldr	r2, [sp, #36]	; 0x24
   14598:	cmn	r0, #2
   1459c:	beq	14954 <putchar_unlocked@plt+0x3430>
   145a0:	ldr	r2, [sp, #64]	; 0x40
   145a4:	ldr	ip, [sp, #88]	; 0x58
   145a8:	ldr	r4, [sp, #84]	; 0x54
   145ac:	ldr	lr, [fp, #-48]	; 0xffffffd0
   145b0:	cmp	r0, #2
   145b4:	mov	r1, #0
   145b8:	movwcc	r1, #1
   145bc:	eor	r2, r2, #1
   145c0:	orrs	r1, r2, r1
   145c4:	bne	14614 <putchar_unlocked@plt+0x30f0>
   145c8:	ldr	r1, [sp, #24]
   145cc:	ldr	r2, [sp, #20]
   145d0:	add	r1, r2, r1
   145d4:	sub	r2, r0, #1
   145d8:	ldrb	r3, [r1]
   145dc:	sub	r5, r3, #94	; 0x5e
   145e0:	cmp	r5, #30
   145e4:	bhi	145fc <putchar_unlocked@plt+0x30d8>
   145e8:	mov	r4, #1
   145ec:	mov	sl, #1073741829	; 0x40000005
   145f0:	tst	sl, r4, lsl r5
   145f4:	ldr	r4, [sp, #84]	; 0x54
   145f8:	bne	14a5c <putchar_unlocked@plt+0x3538>
   145fc:	sub	r3, r3, #91	; 0x5b
   14600:	cmp	r3, #2
   14604:	bcc	14a5c <putchar_unlocked@plt+0x3538>
   14608:	add	r1, r1, #1
   1460c:	subs	r2, r2, #1
   14610:	bne	145d8 <putchar_unlocked@plt+0x30b4>
   14614:	ldr	r5, [sp, #24]
   14618:	str	lr, [fp, #-48]	; 0xffffffd0
   1461c:	add	r5, r0, r5
   14620:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14624:	bl	112b4 <iswprint@plt>
   14628:	cmp	r0, #0
   1462c:	sub	r4, fp, #40	; 0x28
   14630:	movwne	r0, #1
   14634:	and	r9, r9, r0
   14638:	mov	r0, r4
   1463c:	bl	11260 <mbsinit@plt>
   14640:	mov	r1, r5
   14644:	mov	r3, r4
   14648:	ldr	sl, [sp, #36]	; 0x24
   1464c:	ldr	r5, [fp, #-84]	; 0xffffffac
   14650:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14654:	cmp	r0, #0
   14658:	beq	14568 <putchar_unlocked@plt+0x3044>
   1465c:	b	14498 <putchar_unlocked@plt+0x2f74>
   14660:	mov	r8, r0
   14664:	b	14154 <putchar_unlocked@plt+0x2c30>
   14668:	mov	r0, #0
   1466c:	str	r0, [fp, #-56]	; 0xffffffc8
   14670:	ldr	r0, [sp, #28]
   14674:	cmp	r0, #0
   14678:	beq	1471c <putchar_unlocked@plt+0x31f8>
   1467c:	add	r0, r7, #2
   14680:	mov	r1, sl
   14684:	cmp	r0, sl
   14688:	bcs	1471c <putchar_unlocked@plt+0x31f8>
   1468c:	add	r1, r7, r4
   14690:	ldrb	r1, [r1, #1]
   14694:	cmp	r1, #63	; 0x3f
   14698:	bne	1471c <putchar_unlocked@plt+0x31f8>
   1469c:	ldrb	r9, [r4, r0]
   146a0:	sub	r2, r9, #33	; 0x21
   146a4:	cmp	r2, #29
   146a8:	bhi	1471c <putchar_unlocked@plt+0x31f8>
   146ac:	mov	r1, r4
   146b0:	movw	r4, #20929	; 0x51c1
   146b4:	mov	r3, #1
   146b8:	movt	r4, #14336	; 0x3800
   146bc:	tst	r4, r3, lsl r2
   146c0:	beq	149a8 <putchar_unlocked@plt+0x3484>
   146c4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   146c8:	tst	r2, #1
   146cc:	bne	14b78 <putchar_unlocked@plt+0x3654>
   146d0:	cmp	r8, ip
   146d4:	mov	r4, r1
   146d8:	mov	r7, r0
   146dc:	mov	r6, r9
   146e0:	movcc	r2, #63	; 0x3f
   146e4:	strbcc	r2, [r5, r8]
   146e8:	add	r2, r8, #1
   146ec:	cmp	r2, ip
   146f0:	movcc	r3, #34	; 0x22
   146f4:	strbcc	r3, [r5, r2]
   146f8:	add	r2, r8, #2
   146fc:	cmp	r2, ip
   14700:	movcc	r3, #34	; 0x22
   14704:	strbcc	r3, [r5, r2]
   14708:	add	r2, r8, #3
   1470c:	add	r8, r8, #4
   14710:	cmp	r2, ip
   14714:	movcc	r3, #63	; 0x3f
   14718:	strbcc	r3, [r5, r2]
   1471c:	mov	r9, #0
   14720:	b	14154 <putchar_unlocked@plt+0x2c30>
   14724:	ldr	sl, [sp, #36]	; 0x24
   14728:	add	r0, r1, r7
   1472c:	mov	r2, #0
   14730:	str	r3, [sp, #24]
   14734:	str	r0, [fp, #-56]	; 0xffffffc8
   14738:	tst	r3, #1
   1473c:	beq	14768 <putchar_unlocked@plt+0x3244>
   14740:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14744:	tst	r0, #1
   14748:	beq	14830 <putchar_unlocked@plt+0x330c>
   1474c:	ldr	r1, [sp, #88]	; 0x58
   14750:	mov	r0, r3
   14754:	cmp	r8, r1
   14758:	movcc	r1, #92	; 0x5c
   1475c:	strbcc	r1, [r5, r8]
   14760:	add	r8, r8, #1
   14764:	b	14834 <putchar_unlocked@plt+0x3310>
   14768:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1476c:	tst	r1, #1
   14770:	bne	14a80 <putchar_unlocked@plt+0x355c>
   14774:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14778:	subs	r2, r1, #2
   1477c:	movwne	r2, #1
   14780:	orr	r2, r2, lr
   14784:	tst	r2, #1
   14788:	bne	147cc <putchar_unlocked@plt+0x32a8>
   1478c:	ldr	r1, [sp, #88]	; 0x58
   14790:	add	r2, r8, #1
   14794:	mov	lr, #1
   14798:	cmp	r8, r1
   1479c:	movcc	r1, #39	; 0x27
   147a0:	strbcc	r1, [r5, r8]
   147a4:	ldr	r1, [sp, #88]	; 0x58
   147a8:	cmp	r2, r1
   147ac:	movcc	r1, #36	; 0x24
   147b0:	strbcc	r1, [r5, r2]
   147b4:	ldr	r1, [sp, #88]	; 0x58
   147b8:	add	r2, r8, #2
   147bc:	add	r8, r8, #3
   147c0:	cmp	r2, r1
   147c4:	movcc	r1, #39	; 0x27
   147c8:	strbcc	r1, [r5, r2]
   147cc:	ldr	r1, [sp, #88]	; 0x58
   147d0:	add	r2, r8, #1
   147d4:	mov	r0, r3
   147d8:	cmp	r8, r1
   147dc:	movcc	r1, #92	; 0x5c
   147e0:	strbcc	r1, [r5, r8]
   147e4:	ldr	r1, [sp, #88]	; 0x58
   147e8:	cmp	r2, r1
   147ec:	bcs	14800 <putchar_unlocked@plt+0x32dc>
   147f0:	uxtb	r3, r6
   147f4:	mov	r1, #48	; 0x30
   147f8:	orr	r3, r1, r3, lsr #6
   147fc:	strb	r3, [r5, r2]
   14800:	ldr	r1, [sp, #88]	; 0x58
   14804:	add	r2, r8, #2
   14808:	add	r8, r8, #3
   1480c:	cmp	r2, r1
   14810:	lsrcc	r3, r6, #3
   14814:	movcc	r1, #6
   14818:	bficc	r3, r1, #3, #29
   1481c:	mov	r1, #6
   14820:	bfi	r6, r1, #3, #29
   14824:	strbcc	r3, [r5, r2]
   14828:	mov	r2, #1
   1482c:	b	1483c <putchar_unlocked@plt+0x3318>
   14830:	mov	r0, r3
   14834:	mov	r1, #0
   14838:	str	r1, [fp, #-52]	; 0xffffffcc
   1483c:	mov	ip, r2
   14840:	and	r1, r2, #1
   14844:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14848:	add	r3, r7, #1
   1484c:	cmp	r2, r3
   14850:	bls	148d8 <putchar_unlocked@plt+0x33b4>
   14854:	cmp	r1, #0
   14858:	mvn	r5, lr
   1485c:	movwne	r1, #1
   14860:	orr	r5, r5, r1
   14864:	tst	r5, #1
   14868:	bne	148ac <putchar_unlocked@plt+0x3388>
   1486c:	ldr	r1, [sp, #88]	; 0x58
   14870:	ldr	r5, [fp, #-84]	; 0xffffffac
   14874:	mov	r2, r4
   14878:	ldr	r4, [sp, #88]	; 0x58
   1487c:	ldr	r0, [sp, #24]
   14880:	mov	lr, #0
   14884:	cmp	r8, r1
   14888:	movcc	r1, #39	; 0x27
   1488c:	strbcc	r1, [r5, r8]
   14890:	add	r1, r8, #1
   14894:	add	r8, r8, #2
   14898:	cmp	r1, r4
   1489c:	movcc	r4, #39	; 0x27
   148a0:	strbcc	r4, [r5, r1]
   148a4:	mov	r4, r2
   148a8:	b	148b0 <putchar_unlocked@plt+0x338c>
   148ac:	ldr	r5, [fp, #-84]	; 0xffffffac
   148b0:	ldr	r1, [sp, #88]	; 0x58
   148b4:	mov	r2, ip
   148b8:	cmp	r8, r1
   148bc:	ldr	r1, [sp, #72]	; 0x48
   148c0:	strbcc	r6, [r5, r8]
   148c4:	add	r8, r8, #1
   148c8:	ldrb	r6, [r1, r7]
   148cc:	mov	r7, r3
   148d0:	mov	r3, r0
   148d4:	b	14738 <putchar_unlocked@plt+0x3214>
   148d8:	ldr	ip, [sp, #88]	; 0x58
   148dc:	cmp	r1, #0
   148e0:	movwne	r1, #1
   148e4:	str	r1, [fp, #-56]	; 0xffffffc8
   148e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   148ec:	cmp	r0, #0
   148f0:	bne	14920 <putchar_unlocked@plt+0x33fc>
   148f4:	tst	lr, #1
   148f8:	beq	14920 <putchar_unlocked@plt+0x33fc>
   148fc:	cmp	r8, ip
   14900:	mov	lr, #0
   14904:	movcc	r0, #39	; 0x27
   14908:	strbcc	r0, [r5, r8]
   1490c:	add	r0, r8, #1
   14910:	add	r8, r8, #2
   14914:	cmp	r0, ip
   14918:	movcc	r1, #39	; 0x27
   1491c:	strbcc	r1, [r5, r0]
   14920:	mov	r1, r9
   14924:	mov	r0, r6
   14928:	cmp	r8, ip
   1492c:	strbcc	r0, [r5, r8]
   14930:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14934:	add	r8, r8, #1
   14938:	and	r0, r0, r1
   1493c:	str	r0, [fp, #-48]	; 0xffffffd0
   14940:	mov	r3, sl
   14944:	add	r7, r7, #1
   14948:	b	13e38 <putchar_unlocked@plt+0x2914>
   1494c:	mov	r9, #0
   14950:	b	14994 <putchar_unlocked@plt+0x3470>
   14954:	mov	r9, #0
   14958:	cmp	r2, r4
   1495c:	bls	14994 <putchar_unlocked@plt+0x3470>
   14960:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14964:	ldr	r1, [sp, #24]
   14968:	add	r0, r4, r7
   1496c:	mov	r3, r1
   14970:	ldrb	r1, [r0, r1]
   14974:	cmp	r1, #0
   14978:	beq	149a0 <putchar_unlocked@plt+0x347c>
   1497c:	add	r3, r3, #1
   14980:	add	r1, r7, r3
   14984:	cmp	r1, r2
   14988:	mov	r1, r3
   1498c:	bcc	1496c <putchar_unlocked@plt+0x3448>
   14990:	b	14498 <putchar_unlocked@plt+0x2f74>
   14994:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14998:	ldr	r1, [sp, #24]
   1499c:	b	14498 <putchar_unlocked@plt+0x2f74>
   149a0:	mov	r1, r3
   149a4:	b	14498 <putchar_unlocked@plt+0x2f74>
   149a8:	mov	r9, #0
   149ac:	mov	r4, r1
   149b0:	b	14154 <putchar_unlocked@plt+0x2c30>
   149b4:	mov	sl, r7
   149b8:	b	149c0 <putchar_unlocked@plt+0x349c>
   149bc:	mvn	sl, #0
   149c0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   149c4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   149c8:	eor	r0, r1, #2
   149cc:	orr	r0, r0, r8
   149d0:	clz	r0, r0
   149d4:	lsr	r0, r0, #5
   149d8:	tst	r2, r0
   149dc:	bne	14a84 <putchar_unlocked@plt+0x3560>
   149e0:	subs	r0, r1, #2
   149e4:	movwne	r0, #1
   149e8:	orr	r0, r2, r0
   149ec:	tst	r0, #1
   149f0:	ldreq	r0, [sp, #60]	; 0x3c
   149f4:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   149f8:	eoreq	r0, r0, #1
   149fc:	tsteq	r0, #1
   14a00:	bne	14b18 <putchar_unlocked@plt+0x35f4>
   14a04:	tst	r1, #1
   14a08:	bne	14ae4 <putchar_unlocked@plt+0x35c0>
   14a0c:	ldr	r6, [sp, #56]	; 0x38
   14a10:	mov	r9, #0
   14a14:	cmp	r6, #0
   14a18:	beq	14b10 <putchar_unlocked@plt+0x35ec>
   14a1c:	ldr	r0, [sp, #84]	; 0x54
   14a20:	mov	r1, #0
   14a24:	mov	r7, #2
   14a28:	cmp	ip, #0
   14a2c:	str	r1, [fp, #-48]	; 0xffffffd0
   14a30:	mov	r1, #0
   14a34:	str	r1, [fp, #-76]	; 0xffffffb4
   14a38:	beq	13ba0 <putchar_unlocked@plt+0x267c>
   14a3c:	b	14b18 <putchar_unlocked@plt+0x35f4>
   14a40:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14a44:	ldr	r1, [fp, #12]
   14a48:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14a4c:	mov	r5, r3
   14a50:	mov	ip, r6
   14a54:	mov	r3, sl
   14a58:	b	14aa8 <putchar_unlocked@plt+0x3584>
   14a5c:	tst	r4, #1
   14a60:	ldr	r5, [fp, #-84]	; 0xffffffac
   14a64:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14a68:	ldr	r1, [fp, #12]
   14a6c:	ldr	r3, [sp, #36]	; 0x24
   14a70:	mov	r0, #2
   14a74:	movwne	r0, #4
   14a78:	mov	r2, r0
   14a7c:	b	14aa8 <putchar_unlocked@plt+0x3584>
   14a80:	ldr	ip, [sp, #88]	; 0x58
   14a84:	ldr	r1, [sp, #84]	; 0x54
   14a88:	mov	r0, #2
   14a8c:	tst	r1, #1
   14a90:	movwne	r0, #4
   14a94:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14a98:	ldr	r1, [fp, #12]
   14a9c:	mov	r3, sl
   14aa0:	cmp	r2, #2
   14aa4:	moveq	r2, r0
   14aa8:	mov	r0, #0
   14aac:	bic	r1, r1, #2
   14ab0:	str	r2, [sp]
   14ab4:	mov	r2, r4
   14ab8:	str	r0, [sp, #8]
   14abc:	ldr	r0, [sp, #76]	; 0x4c
   14ac0:	str	r1, [sp, #4]
   14ac4:	mov	r1, ip
   14ac8:	str	r0, [sp, #12]
   14acc:	ldr	r0, [sp, #80]	; 0x50
   14ad0:	str	r0, [sp, #16]
   14ad4:	mov	r0, r5
   14ad8:	bl	13b14 <putchar_unlocked@plt+0x25f0>
   14adc:	mov	r8, r0
   14ae0:	b	14b64 <putchar_unlocked@plt+0x3640>
   14ae4:	mov	r0, #5
   14ae8:	ldr	r1, [sp, #56]	; 0x38
   14aec:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14af0:	mov	r3, sl
   14af4:	str	r0, [sp]
   14af8:	ldr	r0, [fp, #12]
   14afc:	str	r0, [sp, #4]
   14b00:	ldr	r0, [fp, #16]
   14b04:	str	r0, [sp, #8]
   14b08:	ldr	r0, [sp, #76]	; 0x4c
   14b0c:	b	14ac8 <putchar_unlocked@plt+0x35a4>
   14b10:	mov	r0, #0
   14b14:	str	r0, [fp, #-76]	; 0xffffffb4
   14b18:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14b1c:	cmp	r1, #0
   14b20:	beq	14b58 <putchar_unlocked@plt+0x3634>
   14b24:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14b28:	tst	r0, #1
   14b2c:	bne	14b58 <putchar_unlocked@plt+0x3634>
   14b30:	ldrb	r0, [r1]
   14b34:	cmp	r0, #0
   14b38:	beq	14b58 <putchar_unlocked@plt+0x3634>
   14b3c:	add	r1, r1, #1
   14b40:	cmp	r8, ip
   14b44:	strbcc	r0, [r5, r8]
   14b48:	add	r8, r8, #1
   14b4c:	ldrb	r0, [r1], #1
   14b50:	cmp	r0, #0
   14b54:	bne	14b40 <putchar_unlocked@plt+0x361c>
   14b58:	cmp	r8, ip
   14b5c:	movcc	r0, #0
   14b60:	strbcc	r0, [r5, r8]
   14b64:	mov	r0, r8
   14b68:	sub	sp, fp, #28
   14b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b70:	mov	r0, #4
   14b74:	b	14a94 <putchar_unlocked@plt+0x3570>
   14b78:	mov	r4, r1
   14b7c:	b	14a84 <putchar_unlocked@plt+0x3560>
   14b80:	bl	11500 <abort@plt>
   14b84:	mov	r3, r2
   14b88:	mov	r2, #0
   14b8c:	b	14b90 <putchar_unlocked@plt+0x366c>
   14b90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b94:	add	fp, sp, #28
   14b98:	sub	sp, sp, #36	; 0x24
   14b9c:	movw	r8, #33192	; 0x81a8
   14ba0:	cmp	r3, #0
   14ba4:	mov	r4, r2
   14ba8:	str	r2, [sp, #24]
   14bac:	mov	r5, r1
   14bb0:	mov	r6, r0
   14bb4:	str	r0, [sp, #20]
   14bb8:	movt	r8, #2
   14bbc:	movne	r8, r3
   14bc0:	bl	113e0 <__errno_location@plt>
   14bc4:	str	r0, [sp, #28]
   14bc8:	ldr	r1, [r8, #40]	; 0x28
   14bcc:	ldr	r2, [r8, #44]	; 0x2c
   14bd0:	ldr	r7, [r0]
   14bd4:	cmp	r4, #0
   14bd8:	add	sl, r8, #8
   14bdc:	mov	r0, #0
   14be0:	ldm	r8, {r3, r9}
   14be4:	orreq	r9, r9, #1
   14be8:	stm	sp, {r3, r9, sl}
   14bec:	str	r1, [sp, #12]
   14bf0:	str	r2, [sp, #16]
   14bf4:	mov	r1, #0
   14bf8:	mov	r2, r6
   14bfc:	mov	r3, r5
   14c00:	str	r7, [sp, #32]
   14c04:	mov	r7, r5
   14c08:	bl	13b14 <putchar_unlocked@plt+0x25f0>
   14c0c:	add	r4, r0, #1
   14c10:	mov	r5, r0
   14c14:	mov	r0, r4
   14c18:	bl	15f54 <putchar_unlocked@plt+0x4a30>
   14c1c:	mov	r6, r0
   14c20:	ldr	r0, [r8]
   14c24:	ldr	r2, [r8, #44]	; 0x2c
   14c28:	ldr	r1, [r8, #40]	; 0x28
   14c2c:	mov	r3, r7
   14c30:	stm	sp, {r0, r9, sl}
   14c34:	str	r2, [sp, #16]
   14c38:	ldr	r2, [sp, #20]
   14c3c:	str	r1, [sp, #12]
   14c40:	mov	r0, r6
   14c44:	mov	r1, r4
   14c48:	bl	13b14 <putchar_unlocked@plt+0x25f0>
   14c4c:	ldr	r0, [sp, #24]
   14c50:	ldr	r1, [sp, #32]
   14c54:	ldr	r2, [sp, #28]
   14c58:	cmp	r0, #0
   14c5c:	str	r1, [r2]
   14c60:	strne	r5, [r0]
   14c64:	mov	r0, r6
   14c68:	sub	sp, fp, #28
   14c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14c74:	add	fp, sp, #24
   14c78:	movw	r5, #33084	; 0x813c
   14c7c:	movw	r8, #33080	; 0x8138
   14c80:	movt	r5, #2
   14c84:	movt	r8, #2
   14c88:	ldr	r0, [r5]
   14c8c:	ldr	r4, [r8]
   14c90:	cmp	r0, #2
   14c94:	blt	14cc0 <putchar_unlocked@plt+0x379c>
   14c98:	add	r7, r4, #12
   14c9c:	mov	r6, #0
   14ca0:	ldr	r0, [r7, r6, lsl #3]
   14ca4:	bl	164e8 <putchar_unlocked@plt+0x4fc4>
   14ca8:	ldr	r1, [r5]
   14cac:	add	r2, r6, #2
   14cb0:	add	r0, r6, #1
   14cb4:	mov	r6, r0
   14cb8:	cmp	r2, r1
   14cbc:	blt	14ca0 <putchar_unlocked@plt+0x377c>
   14cc0:	ldr	r0, [r4, #4]
   14cc4:	movw	r9, #33240	; 0x81d8
   14cc8:	movw	r7, #33088	; 0x8140
   14ccc:	movt	r9, #2
   14cd0:	movt	r7, #2
   14cd4:	cmp	r0, r9
   14cd8:	beq	14ce8 <putchar_unlocked@plt+0x37c4>
   14cdc:	bl	164e8 <putchar_unlocked@plt+0x4fc4>
   14ce0:	mov	r0, #256	; 0x100
   14ce4:	stm	r7, {r0, r9}
   14ce8:	cmp	r4, r7
   14cec:	beq	14cfc <putchar_unlocked@plt+0x37d8>
   14cf0:	mov	r0, r4
   14cf4:	bl	164e8 <putchar_unlocked@plt+0x4fc4>
   14cf8:	str	r7, [r8]
   14cfc:	mov	r0, #1
   14d00:	str	r0, [r5]
   14d04:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14d08:	movw	r3, #33192	; 0x81a8
   14d0c:	mvn	r2, #0
   14d10:	movt	r3, #2
   14d14:	b	14d18 <putchar_unlocked@plt+0x37f4>
   14d18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d1c:	add	fp, sp, #28
   14d20:	sub	sp, sp, #44	; 0x2c
   14d24:	mov	r7, r3
   14d28:	str	r2, [sp, #36]	; 0x24
   14d2c:	str	r1, [sp, #32]
   14d30:	mov	r5, r0
   14d34:	bl	113e0 <__errno_location@plt>
   14d38:	cmp	r5, #0
   14d3c:	bmi	14eac <putchar_unlocked@plt+0x3988>
   14d40:	cmn	r5, #-2147483647	; 0x80000001
   14d44:	beq	14eac <putchar_unlocked@plt+0x3988>
   14d48:	movw	r8, #33084	; 0x813c
   14d4c:	movw	r4, #33080	; 0x8138
   14d50:	str	r0, [sp, #28]
   14d54:	ldr	r0, [r0]
   14d58:	movt	r8, #2
   14d5c:	movt	r4, #2
   14d60:	ldr	r1, [r8]
   14d64:	ldr	r6, [r4]
   14d68:	str	r0, [sp, #24]
   14d6c:	cmp	r1, r5
   14d70:	ble	14d7c <putchar_unlocked@plt+0x3858>
   14d74:	mov	sl, r6
   14d78:	b	14de8 <putchar_unlocked@plt+0x38c4>
   14d7c:	movw	r9, #33088	; 0x8140
   14d80:	mov	r0, #8
   14d84:	str	r1, [fp, #-32]	; 0xffffffe0
   14d88:	sub	r1, r5, r1
   14d8c:	mvn	r3, #-2147483648	; 0x80000000
   14d90:	movt	r9, #2
   14d94:	str	r0, [sp]
   14d98:	add	r2, r1, #1
   14d9c:	sub	r1, fp, #32
   14da0:	subs	r0, r6, r9
   14da4:	movne	r0, r6
   14da8:	bl	16084 <putchar_unlocked@plt+0x4b60>
   14dac:	mov	sl, r0
   14db0:	cmp	r6, r9
   14db4:	str	r0, [r4]
   14db8:	bne	14dc4 <putchar_unlocked@plt+0x38a0>
   14dbc:	ldrd	r0, [r9]
   14dc0:	stm	sl, {r0, r1}
   14dc4:	ldr	r1, [r8]
   14dc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14dcc:	add	r0, sl, r1, lsl #3
   14dd0:	sub	r1, r2, r1
   14dd4:	lsl	r2, r1, #3
   14dd8:	mov	r1, #0
   14ddc:	bl	113f8 <memset@plt>
   14de0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14de4:	str	r0, [r8]
   14de8:	mov	r9, sl
   14dec:	ldm	r7, {r0, r1}
   14df0:	orr	r8, r1, #1
   14df4:	add	r1, r7, #8
   14df8:	ldr	r2, [r7, #40]	; 0x28
   14dfc:	ldr	r3, [r7, #44]	; 0x2c
   14e00:	ldr	r6, [r9, r5, lsl #3]!
   14e04:	str	r1, [sp, #20]
   14e08:	ldr	r4, [r9, #4]!
   14e0c:	stm	sp, {r0, r8}
   14e10:	add	r0, sp, #8
   14e14:	stm	r0, {r1, r2, r3}
   14e18:	ldr	r2, [sp, #32]
   14e1c:	ldr	r3, [sp, #36]	; 0x24
   14e20:	mov	r1, r6
   14e24:	mov	r0, r4
   14e28:	bl	13b14 <putchar_unlocked@plt+0x25f0>
   14e2c:	cmp	r6, r0
   14e30:	bhi	14e94 <putchar_unlocked@plt+0x3970>
   14e34:	add	r6, r0, #1
   14e38:	movw	r0, #33240	; 0x81d8
   14e3c:	movt	r0, #2
   14e40:	str	r6, [sl, r5, lsl #3]
   14e44:	cmp	r4, r0
   14e48:	beq	14e54 <putchar_unlocked@plt+0x3930>
   14e4c:	mov	r0, r4
   14e50:	bl	164e8 <putchar_unlocked@plt+0x4fc4>
   14e54:	mov	r0, r6
   14e58:	bl	15f54 <putchar_unlocked@plt+0x4a30>
   14e5c:	str	r0, [r9]
   14e60:	mov	r4, r0
   14e64:	add	r3, sp, #8
   14e68:	ldr	r0, [r7]
   14e6c:	ldr	r1, [r7, #40]	; 0x28
   14e70:	ldr	r2, [r7, #44]	; 0x2c
   14e74:	stm	sp, {r0, r8}
   14e78:	ldr	r0, [sp, #20]
   14e7c:	stm	r3, {r0, r1, r2}
   14e80:	ldr	r2, [sp, #32]
   14e84:	ldr	r3, [sp, #36]	; 0x24
   14e88:	mov	r0, r4
   14e8c:	mov	r1, r6
   14e90:	bl	13b14 <putchar_unlocked@plt+0x25f0>
   14e94:	ldr	r0, [sp, #28]
   14e98:	ldr	r1, [sp, #24]
   14e9c:	str	r1, [r0]
   14ea0:	mov	r0, r4
   14ea4:	sub	sp, fp, #28
   14ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14eac:	bl	11500 <abort@plt>
   14eb0:	movw	r3, #33192	; 0x81a8
   14eb4:	movt	r3, #2
   14eb8:	b	14d18 <putchar_unlocked@plt+0x37f4>
   14ebc:	movw	r3, #33192	; 0x81a8
   14ec0:	mov	r1, r0
   14ec4:	mov	r0, #0
   14ec8:	mvn	r2, #0
   14ecc:	movt	r3, #2
   14ed0:	b	14d18 <putchar_unlocked@plt+0x37f4>
   14ed4:	movw	r3, #33192	; 0x81a8
   14ed8:	mov	r2, r1
   14edc:	mov	r1, r0
   14ee0:	mov	r0, #0
   14ee4:	movt	r3, #2
   14ee8:	b	14d18 <putchar_unlocked@plt+0x37f4>
   14eec:	push	{fp, lr}
   14ef0:	mov	fp, sp
   14ef4:	sub	sp, sp, #48	; 0x30
   14ef8:	vmov.i32	q8, #0	; 0x00000000
   14efc:	mov	ip, #32
   14f00:	mov	r3, sp
   14f04:	mov	lr, r2
   14f08:	cmp	r1, #10
   14f0c:	add	r2, r3, #16
   14f10:	vst1.64	{d16-d17}, [r3], ip
   14f14:	vst1.64	{d16-d17}, [r2]
   14f18:	vst1.64	{d16-d17}, [r3]
   14f1c:	beq	14f3c <putchar_unlocked@plt+0x3a18>
   14f20:	str	r1, [sp]
   14f24:	mov	r3, sp
   14f28:	mov	r1, lr
   14f2c:	mvn	r2, #0
   14f30:	bl	14d18 <putchar_unlocked@plt+0x37f4>
   14f34:	mov	sp, fp
   14f38:	pop	{fp, pc}
   14f3c:	bl	11500 <abort@plt>
   14f40:	push	{r4, sl, fp, lr}
   14f44:	add	fp, sp, #8
   14f48:	sub	sp, sp, #48	; 0x30
   14f4c:	vmov.i32	q8, #0	; 0x00000000
   14f50:	mov	ip, r3
   14f54:	mov	r3, sp
   14f58:	mov	lr, #32
   14f5c:	cmp	r1, #10
   14f60:	add	r4, r3, #16
   14f64:	vst1.64	{d16-d17}, [r3], lr
   14f68:	vst1.64	{d16-d17}, [r4]
   14f6c:	vst1.64	{d16-d17}, [r3]
   14f70:	beq	14f90 <putchar_unlocked@plt+0x3a6c>
   14f74:	str	r1, [sp]
   14f78:	mov	r1, r2
   14f7c:	mov	r3, sp
   14f80:	mov	r2, ip
   14f84:	bl	14d18 <putchar_unlocked@plt+0x37f4>
   14f88:	sub	sp, fp, #8
   14f8c:	pop	{r4, sl, fp, pc}
   14f90:	bl	11500 <abort@plt>
   14f94:	mov	r2, r1
   14f98:	mov	r1, r0
   14f9c:	mov	r0, #0
   14fa0:	b	14eec <putchar_unlocked@plt+0x39c8>
   14fa4:	mov	r3, r2
   14fa8:	mov	r2, r1
   14fac:	mov	r1, r0
   14fb0:	mov	r0, #0
   14fb4:	b	14f40 <putchar_unlocked@plt+0x3a1c>
   14fb8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14fbc:	add	fp, sp, #24
   14fc0:	sub	sp, sp, #48	; 0x30
   14fc4:	movw	r8, #33192	; 0x81a8
   14fc8:	mov	lr, r0
   14fcc:	mov	r3, sp
   14fd0:	mov	ip, r1
   14fd4:	movt	r8, #2
   14fd8:	mov	r1, r3
   14fdc:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   14fe0:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   14fe4:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   14fe8:	stm	r1, {r0, r4, r5, r6, r7, r9}
   14fec:	ubfx	r0, r2, #5, #3
   14ff0:	and	r2, r2, #31
   14ff4:	mov	r4, #1
   14ff8:	add	r0, r3, r0, lsl #2
   14ffc:	ldr	r1, [r0, #8]
   15000:	bic	r4, r4, r1, lsr r2
   15004:	eor	r1, r1, r4, lsl r2
   15008:	mov	r2, ip
   1500c:	str	r1, [r0, #8]
   15010:	mov	r0, #0
   15014:	mov	r1, lr
   15018:	bl	14d18 <putchar_unlocked@plt+0x37f4>
   1501c:	sub	sp, fp, #24
   15020:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15024:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15028:	add	fp, sp, #24
   1502c:	sub	sp, sp, #48	; 0x30
   15030:	movw	lr, #33192	; 0x81a8
   15034:	mov	ip, r0
   15038:	mov	r3, sp
   1503c:	movt	lr, #2
   15040:	mov	r2, r3
   15044:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   15048:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   1504c:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   15050:	stm	r2, {r0, r4, r5, r6, r7, r8}
   15054:	ubfx	r0, r1, #5, #3
   15058:	and	r1, r1, #31
   1505c:	mov	r7, #1
   15060:	add	r0, r3, r0, lsl #2
   15064:	ldr	r2, [r0, #8]
   15068:	bic	r7, r7, r2, lsr r1
   1506c:	eor	r1, r2, r7, lsl r1
   15070:	mvn	r2, #0
   15074:	str	r1, [r0, #8]
   15078:	mov	r0, #0
   1507c:	mov	r1, ip
   15080:	bl	14d18 <putchar_unlocked@plt+0x37f4>
   15084:	sub	sp, fp, #24
   15088:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1508c:	push	{r4, r5, r6, r7, fp, lr}
   15090:	add	fp, sp, #16
   15094:	sub	sp, sp, #48	; 0x30
   15098:	movw	lr, #33192	; 0x81a8
   1509c:	mov	ip, r0
   150a0:	mov	r3, sp
   150a4:	movt	lr, #2
   150a8:	mov	r2, r3
   150ac:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   150b0:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   150b4:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   150b8:	stm	r2, {r0, r1, r4, r5, r6, r7}
   150bc:	mov	r1, ip
   150c0:	mvn	r2, #0
   150c4:	ldr	r0, [sp, #12]
   150c8:	orr	r0, r0, #67108864	; 0x4000000
   150cc:	str	r0, [sp, #12]
   150d0:	mov	r0, #0
   150d4:	bl	14d18 <putchar_unlocked@plt+0x37f4>
   150d8:	sub	sp, fp, #16
   150dc:	pop	{r4, r5, r6, r7, fp, pc}
   150e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   150e4:	add	fp, sp, #24
   150e8:	sub	sp, sp, #48	; 0x30
   150ec:	movw	r8, #33192	; 0x81a8
   150f0:	mov	ip, r1
   150f4:	mov	lr, r0
   150f8:	mov	r3, sp
   150fc:	movt	r8, #2
   15100:	mov	r2, r3
   15104:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   15108:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   1510c:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   15110:	stm	r2, {r0, r1, r4, r5, r6, r7}
   15114:	mov	r1, lr
   15118:	mov	r2, ip
   1511c:	ldr	r0, [sp, #12]
   15120:	orr	r0, r0, #67108864	; 0x4000000
   15124:	str	r0, [sp, #12]
   15128:	mov	r0, #0
   1512c:	bl	14d18 <putchar_unlocked@plt+0x37f4>
   15130:	sub	sp, fp, #24
   15134:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15138:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1513c:	add	fp, sp, #24
   15140:	sub	sp, sp, #96	; 0x60
   15144:	vmov.i32	q8, #0	; 0x00000000
   15148:	mov	lr, sp
   1514c:	mov	ip, r2
   15150:	cmp	r1, #10
   15154:	add	r3, lr, #16
   15158:	mov	r2, lr
   1515c:	vst1.64	{d16-d17}, [r3]
   15160:	mov	r3, #28
   15164:	vst1.64	{d16-d17}, [r2], r3
   15168:	vst1.32	{d16-d17}, [r2]
   1516c:	beq	151ac <putchar_unlocked@plt+0x3c88>
   15170:	str	r1, [sp, #48]	; 0x30
   15174:	add	r3, sp, #48	; 0x30
   15178:	ldm	lr!, {r2, r4, r5, r6, r7}
   1517c:	add	r1, r3, #4
   15180:	stmia	r1!, {r2, r4, r5, r6, r7}
   15184:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   15188:	stm	r1, {r2, r4, r5, r6, r7, r8}
   1518c:	mvn	r2, #0
   15190:	ldr	r1, [sp, #60]	; 0x3c
   15194:	orr	r1, r1, #67108864	; 0x4000000
   15198:	str	r1, [sp, #60]	; 0x3c
   1519c:	mov	r1, ip
   151a0:	bl	14d18 <putchar_unlocked@plt+0x37f4>
   151a4:	sub	sp, fp, #24
   151a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   151ac:	bl	11500 <abort@plt>
   151b0:	push	{fp, lr}
   151b4:	mov	fp, sp
   151b8:	sub	sp, sp, #8
   151bc:	mvn	ip, #0
   151c0:	str	ip, [sp]
   151c4:	bl	151d0 <putchar_unlocked@plt+0x3cac>
   151c8:	mov	sp, fp
   151cc:	pop	{fp, pc}
   151d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   151d4:	add	fp, sp, #24
   151d8:	sub	sp, sp, #48	; 0x30
   151dc:	movw	ip, #33192	; 0x81a8
   151e0:	mov	lr, r3
   151e4:	mov	r3, sp
   151e8:	cmp	r1, #0
   151ec:	movt	ip, #2
   151f0:	cmpne	r2, #0
   151f4:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   151f8:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   151fc:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   15200:	stm	r3, {r4, r5, r6, r7, r8, r9}
   15204:	mov	r3, #10
   15208:	str	r3, [sp]
   1520c:	bne	15214 <putchar_unlocked@plt+0x3cf0>
   15210:	bl	11500 <abort@plt>
   15214:	ldr	ip, [fp, #8]
   15218:	str	r2, [sp, #44]	; 0x2c
   1521c:	str	r1, [sp, #40]	; 0x28
   15220:	mov	r3, sp
   15224:	mov	r1, lr
   15228:	mov	r2, ip
   1522c:	bl	14d18 <putchar_unlocked@plt+0x37f4>
   15230:	sub	sp, fp, #24
   15234:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15238:	push	{fp, lr}
   1523c:	mov	fp, sp
   15240:	sub	sp, sp, #8
   15244:	mov	r3, r2
   15248:	mov	r2, r1
   1524c:	mov	r1, r0
   15250:	mvn	r0, #0
   15254:	str	r0, [sp]
   15258:	mov	r0, #0
   1525c:	bl	151d0 <putchar_unlocked@plt+0x3cac>
   15260:	mov	sp, fp
   15264:	pop	{fp, pc}
   15268:	push	{fp, lr}
   1526c:	mov	fp, sp
   15270:	sub	sp, sp, #8
   15274:	mov	ip, r2
   15278:	mov	r2, r1
   1527c:	mov	r1, r0
   15280:	str	r3, [sp]
   15284:	mov	r0, #0
   15288:	mov	r3, ip
   1528c:	bl	151d0 <putchar_unlocked@plt+0x3cac>
   15290:	mov	sp, fp
   15294:	pop	{fp, pc}
   15298:	movw	r3, #33096	; 0x8148
   1529c:	movt	r3, #2
   152a0:	b	14d18 <putchar_unlocked@plt+0x37f4>
   152a4:	movw	r3, #33096	; 0x8148
   152a8:	mov	r2, r1
   152ac:	mov	r1, r0
   152b0:	mov	r0, #0
   152b4:	movt	r3, #2
   152b8:	b	14d18 <putchar_unlocked@plt+0x37f4>
   152bc:	movw	r3, #33096	; 0x8148
   152c0:	mvn	r2, #0
   152c4:	movt	r3, #2
   152c8:	b	14d18 <putchar_unlocked@plt+0x37f4>
   152cc:	movw	r3, #33096	; 0x8148
   152d0:	mov	r1, r0
   152d4:	mov	r0, #0
   152d8:	mvn	r2, #0
   152dc:	movt	r3, #2
   152e0:	b	14d18 <putchar_unlocked@plt+0x37f4>
   152e4:	push	{r4, r5, fp, lr}
   152e8:	add	fp, sp, #8
   152ec:	mov	r5, r0
   152f0:	mov	r4, r1
   152f4:	mov	r0, #0
   152f8:	mov	r2, #5
   152fc:	mov	r1, r5
   15300:	bl	11278 <dcgettext@plt>
   15304:	cmp	r0, r5
   15308:	popne	{r4, r5, fp, pc}
   1530c:	bl	16510 <putchar_unlocked@plt+0x4fec>
   15310:	ldrb	r1, [r0]
   15314:	and	r1, r1, #223	; 0xdf
   15318:	cmp	r1, #71	; 0x47
   1531c:	beq	15384 <putchar_unlocked@plt+0x3e60>
   15320:	cmp	r1, #85	; 0x55
   15324:	bne	153dc <putchar_unlocked@plt+0x3eb8>
   15328:	ldrb	r1, [r0, #1]
   1532c:	and	r1, r1, #223	; 0xdf
   15330:	cmp	r1, #84	; 0x54
   15334:	bne	153dc <putchar_unlocked@plt+0x3eb8>
   15338:	ldrb	r1, [r0, #2]
   1533c:	and	r1, r1, #223	; 0xdf
   15340:	cmp	r1, #70	; 0x46
   15344:	bne	153dc <putchar_unlocked@plt+0x3eb8>
   15348:	ldrb	r1, [r0, #3]
   1534c:	cmp	r1, #45	; 0x2d
   15350:	bne	153dc <putchar_unlocked@plt+0x3eb8>
   15354:	ldrb	r1, [r0, #4]
   15358:	cmp	r1, #56	; 0x38
   1535c:	bne	153dc <putchar_unlocked@plt+0x3eb8>
   15360:	ldrb	r0, [r0, #5]
   15364:	cmp	r0, #0
   15368:	bne	153dc <putchar_unlocked@plt+0x3eb8>
   1536c:	ldrb	r1, [r5]
   15370:	movw	r2, #27956	; 0x6d34
   15374:	movw	r0, #27960	; 0x6d38
   15378:	movt	r2, #1
   1537c:	movt	r0, #1
   15380:	b	1540c <putchar_unlocked@plt+0x3ee8>
   15384:	ldrb	r1, [r0, #1]
   15388:	and	r1, r1, #223	; 0xdf
   1538c:	cmp	r1, #66	; 0x42
   15390:	bne	153dc <putchar_unlocked@plt+0x3eb8>
   15394:	ldrb	r1, [r0, #2]
   15398:	cmp	r1, #49	; 0x31
   1539c:	bne	153dc <putchar_unlocked@plt+0x3eb8>
   153a0:	ldrb	r1, [r0, #3]
   153a4:	cmp	r1, #56	; 0x38
   153a8:	bne	153dc <putchar_unlocked@plt+0x3eb8>
   153ac:	ldrb	r1, [r0, #4]
   153b0:	cmp	r1, #48	; 0x30
   153b4:	bne	153dc <putchar_unlocked@plt+0x3eb8>
   153b8:	ldrb	r1, [r0, #5]
   153bc:	cmp	r1, #51	; 0x33
   153c0:	bne	153dc <putchar_unlocked@plt+0x3eb8>
   153c4:	ldrb	r1, [r0, #6]
   153c8:	cmp	r1, #48	; 0x30
   153cc:	bne	153dc <putchar_unlocked@plt+0x3eb8>
   153d0:	ldrb	r0, [r0, #7]
   153d4:	cmp	r0, #0
   153d8:	beq	153f8 <putchar_unlocked@plt+0x3ed4>
   153dc:	movw	r1, #27950	; 0x6d2e
   153e0:	movw	r0, #27954	; 0x6d32
   153e4:	cmp	r4, #9
   153e8:	movt	r1, #1
   153ec:	movt	r0, #1
   153f0:	moveq	r0, r1
   153f4:	pop	{r4, r5, fp, pc}
   153f8:	ldrb	r1, [r5]
   153fc:	movw	r2, #27964	; 0x6d3c
   15400:	movw	r0, #27968	; 0x6d40
   15404:	movt	r2, #1
   15408:	movt	r0, #1
   1540c:	cmp	r1, #96	; 0x60
   15410:	moveq	r0, r2
   15414:	pop	{r4, r5, fp, pc}
   15418:	push	{r4, r5, fp, lr}
   1541c:	add	fp, sp, #8
   15420:	mov	r5, r0
   15424:	mov	r0, #33	; 0x21
   15428:	bl	15f24 <putchar_unlocked@plt+0x4a00>
   1542c:	add	r1, r5, #44	; 0x2c
   15430:	mov	r2, #32
   15434:	mov	r4, r0
   15438:	bl	11404 <strncpy@plt>
   1543c:	mov	r5, #0
   15440:	strb	r5, [r0, #32]
   15444:	bl	113c8 <strlen@plt>
   15448:	cmp	r0, #1
   1544c:	blt	15474 <putchar_unlocked@plt+0x3f50>
   15450:	add	r1, r4, r0
   15454:	mov	r0, r1
   15458:	ldrb	r2, [r0, #-1]!
   1545c:	cmp	r2, #32
   15460:	bne	15474 <putchar_unlocked@plt+0x3f50>
   15464:	strb	r5, [r1, #-1]
   15468:	cmp	r4, r0
   1546c:	mov	r1, r0
   15470:	bcc	15458 <putchar_unlocked@plt+0x3f34>
   15474:	mov	r0, r4
   15478:	pop	{r4, r5, fp, pc}
   1547c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15480:	add	fp, sp, #28
   15484:	sub	sp, sp, #20
   15488:	mov	r6, #0
   1548c:	mov	r5, r3
   15490:	str	r2, [sp, #12]
   15494:	str	r1, [sp, #8]
   15498:	str	r6, [sp, #16]
   1549c:	bl	11230 <utmpxname@plt>
   154a0:	bl	11284 <setutxent@plt>
   154a4:	bl	1150c <getutxent@plt>
   154a8:	cmp	r0, #0
   154ac:	beq	1558c <putchar_unlocked@plt+0x4068>
   154b0:	mov	r4, r0
   154b4:	and	r7, r5, #1
   154b8:	and	r8, r5, #2
   154bc:	mov	r5, #0
   154c0:	mov	r9, #384	; 0x180
   154c4:	add	sl, sp, #16
   154c8:	mov	r6, #0
   154cc:	ldrb	r0, [r4, #44]	; 0x2c
   154d0:	cmp	r0, #0
   154d4:	mov	r0, #0
   154d8:	beq	154ec <putchar_unlocked@plt+0x3fc8>
   154dc:	ldrh	r0, [r4]
   154e0:	sub	r0, r0, #7
   154e4:	clz	r0, r0
   154e8:	lsr	r0, r0, #5
   154ec:	cmp	r8, #0
   154f0:	beq	154fc <putchar_unlocked@plt+0x3fd8>
   154f4:	cmp	r0, #0
   154f8:	beq	15578 <putchar_unlocked@plt+0x4054>
   154fc:	cmp	r7, #0
   15500:	beq	15538 <putchar_unlocked@plt+0x4014>
   15504:	eors	r0, r0, #1
   15508:	bne	15538 <putchar_unlocked@plt+0x4014>
   1550c:	ldr	r0, [r4, #4]
   15510:	cmp	r0, #1
   15514:	blt	15538 <putchar_unlocked@plt+0x4014>
   15518:	mov	r1, #0
   1551c:	bl	11398 <kill@plt>
   15520:	cmn	r0, #1
   15524:	bgt	15538 <putchar_unlocked@plt+0x4014>
   15528:	bl	113e0 <__errno_location@plt>
   1552c:	ldr	r0, [r0]
   15530:	cmp	r0, #3
   15534:	beq	15578 <putchar_unlocked@plt+0x4054>
   15538:	ldr	r0, [sp, #16]
   1553c:	cmp	r5, r0
   15540:	bne	15560 <putchar_unlocked@plt+0x403c>
   15544:	mov	r0, r6
   15548:	mov	r1, sl
   1554c:	mov	r2, #1
   15550:	mvn	r3, #0
   15554:	str	r9, [sp]
   15558:	bl	16084 <putchar_unlocked@plt+0x4b60>
   1555c:	mov	r6, r0
   15560:	add	r0, r5, r5, lsl #1
   15564:	mov	r1, r4
   15568:	mov	r2, #384	; 0x180
   1556c:	add	r0, r6, r0, lsl #7
   15570:	bl	11254 <memcpy@plt>
   15574:	add	r5, r5, #1
   15578:	bl	1150c <getutxent@plt>
   1557c:	mov	r4, r0
   15580:	cmp	r0, #0
   15584:	bne	154cc <putchar_unlocked@plt+0x3fa8>
   15588:	b	15590 <putchar_unlocked@plt+0x406c>
   1558c:	mov	r5, #0
   15590:	bl	11464 <endutxent@plt>
   15594:	ldr	r0, [sp, #8]
   15598:	str	r5, [r0]
   1559c:	ldr	r0, [sp, #12]
   155a0:	str	r6, [r0]
   155a4:	mov	r0, #0
   155a8:	sub	sp, fp, #28
   155ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   155b4:	add	fp, sp, #24
   155b8:	mov	r4, r0
   155bc:	cmp	r0, #0
   155c0:	beq	155e4 <putchar_unlocked@plt+0x40c0>
   155c4:	mov	r0, r4
   155c8:	bl	113c8 <strlen@plt>
   155cc:	add	r5, r0, #1
   155d0:	cmp	r5, #58	; 0x3a
   155d4:	bls	155e8 <putchar_unlocked@plt+0x40c4>
   155d8:	add	r0, r0, #10
   155dc:	bic	r0, r0, #3
   155e0:	b	155ec <putchar_unlocked@plt+0x40c8>
   155e4:	mov	r5, #0
   155e8:	mov	r0, #64	; 0x40
   155ec:	bl	163e8 <putchar_unlocked@plt+0x4ec4>
   155f0:	mov	r6, r0
   155f4:	cmp	r0, #0
   155f8:	beq	15634 <putchar_unlocked@plt+0x4110>
   155fc:	cmp	r4, #0
   15600:	mov	r0, r4
   15604:	mov	r8, #0
   15608:	mov	r7, r6
   1560c:	movwne	r0, #1
   15610:	str	r8, [r6]
   15614:	strb	r0, [r6, #4]
   15618:	strb	r8, [r7, #5]!
   1561c:	beq	15634 <putchar_unlocked@plt+0x4110>
   15620:	mov	r0, r7
   15624:	mov	r1, r4
   15628:	mov	r2, r5
   1562c:	bl	11254 <memcpy@plt>
   15630:	strb	r8, [r7, r5]
   15634:	mov	r0, r6
   15638:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1563c:	push	{r4, sl, fp, lr}
   15640:	add	fp, sp, #8
   15644:	cmp	r0, #2
   15648:	popcc	{r4, sl, fp, pc}
   1564c:	ldr	r4, [r0]
   15650:	bl	164e8 <putchar_unlocked@plt+0x4fc4>
   15654:	cmp	r4, #0
   15658:	mov	r0, r4
   1565c:	bne	1564c <putchar_unlocked@plt+0x4128>
   15660:	pop	{r4, sl, fp, pc}
   15664:	push	{r4, r5, r6, r7, fp, lr}
   15668:	add	fp, sp, #16
   1566c:	mov	r4, r2
   15670:	mov	r7, r1
   15674:	cmp	r0, #0
   15678:	beq	156b8 <putchar_unlocked@plt+0x4194>
   1567c:	mov	r6, r0
   15680:	bl	156f0 <putchar_unlocked@plt+0x41cc>
   15684:	cmp	r0, #0
   15688:	beq	156c8 <putchar_unlocked@plt+0x41a4>
   1568c:	mov	r5, r0
   15690:	mov	r0, r7
   15694:	mov	r1, r4
   15698:	bl	1129c <localtime_r@plt>
   1569c:	cmp	r0, #0
   156a0:	beq	156d0 <putchar_unlocked@plt+0x41ac>
   156a4:	mov	r0, r6
   156a8:	mov	r1, r4
   156ac:	bl	157a4 <putchar_unlocked@plt+0x4280>
   156b0:	eor	r6, r0, #1
   156b4:	b	156d4 <putchar_unlocked@plt+0x41b0>
   156b8:	mov	r0, r7
   156bc:	mov	r1, r4
   156c0:	pop	{r4, r5, r6, r7, fp, lr}
   156c4:	b	11200 <gmtime_r@plt>
   156c8:	mov	r0, #0
   156cc:	pop	{r4, r5, r6, r7, fp, pc}
   156d0:	mov	r6, #1
   156d4:	mov	r0, r5
   156d8:	bl	158cc <putchar_unlocked@plt+0x43a8>
   156dc:	cmp	r0, #0
   156e0:	movne	r0, r4
   156e4:	cmp	r6, #0
   156e8:	movwne	r0, #0
   156ec:	pop	{r4, r5, r6, r7, fp, pc}
   156f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   156f4:	add	fp, sp, #24
   156f8:	mov	r5, r0
   156fc:	movw	r0, #28056	; 0x6d98
   15700:	movt	r0, #1
   15704:	bl	11320 <getenv@plt>
   15708:	mov	r4, r0
   1570c:	ldrb	r0, [r5, #4]
   15710:	cmp	r4, #0
   15714:	beq	1572c <putchar_unlocked@plt+0x4208>
   15718:	cmp	r0, #0
   1571c:	beq	15734 <putchar_unlocked@plt+0x4210>
   15720:	add	r0, r5, #5
   15724:	mov	r1, r4
   15728:	bl	1120c <strcmp@plt>
   1572c:	cmp	r0, #0
   15730:	beq	15764 <putchar_unlocked@plt+0x4240>
   15734:	mov	r0, r4
   15738:	bl	155b0 <putchar_unlocked@plt+0x408c>
   1573c:	mov	r7, #0
   15740:	cmp	r0, #0
   15744:	beq	1579c <putchar_unlocked@plt+0x4278>
   15748:	mov	r4, r0
   1574c:	mov	r0, r5
   15750:	bl	15a10 <putchar_unlocked@plt+0x44ec>
   15754:	cmp	r0, #0
   15758:	beq	1576c <putchar_unlocked@plt+0x4248>
   1575c:	mov	r7, r4
   15760:	b	1579c <putchar_unlocked@plt+0x4278>
   15764:	mov	r7, #1
   15768:	b	1579c <putchar_unlocked@plt+0x4278>
   1576c:	bl	113e0 <__errno_location@plt>
   15770:	ldr	r8, [r0]
   15774:	mov	r5, r0
   15778:	cmp	r4, #2
   1577c:	bcc	15798 <putchar_unlocked@plt+0x4274>
   15780:	ldr	r6, [r4]
   15784:	mov	r0, r4
   15788:	bl	164e8 <putchar_unlocked@plt+0x4fc4>
   1578c:	cmp	r6, #0
   15790:	mov	r4, r6
   15794:	bne	15780 <putchar_unlocked@plt+0x425c>
   15798:	str	r8, [r5]
   1579c:	mov	r0, r7
   157a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   157a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157a8:	add	fp, sp, #28
   157ac:	sub	sp, sp, #4
   157b0:	ldr	r7, [r1, #40]	; 0x28
   157b4:	mov	r8, #1
   157b8:	cmp	r7, #0
   157bc:	beq	1585c <putchar_unlocked@plt+0x4338>
   157c0:	mov	r5, r1
   157c4:	mov	r6, r0
   157c8:	cmp	r7, r1
   157cc:	bcc	157dc <putchar_unlocked@plt+0x42b8>
   157d0:	add	r0, r5, #44	; 0x2c
   157d4:	cmp	r7, r0
   157d8:	bcc	1585c <putchar_unlocked@plt+0x4338>
   157dc:	ldrb	r0, [r7]
   157e0:	cmp	r0, #0
   157e4:	beq	15850 <putchar_unlocked@plt+0x432c>
   157e8:	add	r4, r6, #5
   157ec:	mov	r0, r4
   157f0:	mov	r1, r7
   157f4:	bl	1120c <strcmp@plt>
   157f8:	cmp	r0, #0
   157fc:	beq	15858 <putchar_unlocked@plt+0x4334>
   15800:	ldrb	r0, [r4]
   15804:	cmp	r0, #0
   15808:	bne	15824 <putchar_unlocked@plt+0x4300>
   1580c:	add	r0, r6, #5
   15810:	cmp	r4, r0
   15814:	bne	15868 <putchar_unlocked@plt+0x4344>
   15818:	ldrb	r0, [r6, #4]
   1581c:	cmp	r0, #0
   15820:	beq	15868 <putchar_unlocked@plt+0x4344>
   15824:	mov	r0, r4
   15828:	bl	113c8 <strlen@plt>
   1582c:	add	r4, r0, r4
   15830:	ldrb	r0, [r4, #1]!
   15834:	cmp	r0, #0
   15838:	bne	157ec <putchar_unlocked@plt+0x42c8>
   1583c:	ldr	r0, [r6]
   15840:	cmp	r0, #0
   15844:	addne	r4, r0, #5
   15848:	movne	r6, r0
   1584c:	b	157ec <putchar_unlocked@plt+0x42c8>
   15850:	movw	r4, #26880	; 0x6900
   15854:	movt	r4, #1
   15858:	str	r4, [r5, #40]	; 0x28
   1585c:	mov	r0, r8
   15860:	sub	sp, fp, #28
   15864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15868:	sub	r0, r6, r4
   1586c:	add	sl, r0, #64	; 0x40
   15870:	mov	r0, r7
   15874:	bl	113c8 <strlen@plt>
   15878:	add	r9, r0, #1
   1587c:	cmp	r9, sl
   15880:	bge	158a0 <putchar_unlocked@plt+0x437c>
   15884:	mov	r0, r4
   15888:	mov	r1, r7
   1588c:	mov	r2, r9
   15890:	bl	11254 <memcpy@plt>
   15894:	mov	r0, #0
   15898:	strb	r0, [r4, r9]
   1589c:	b	15858 <putchar_unlocked@plt+0x4334>
   158a0:	mov	r0, r7
   158a4:	bl	155b0 <putchar_unlocked@plt+0x408c>
   158a8:	cmp	r0, #0
   158ac:	str	r0, [r6]
   158b0:	beq	158c4 <putchar_unlocked@plt+0x43a0>
   158b4:	mov	r1, #0
   158b8:	add	r4, r0, #5
   158bc:	strb	r1, [r0, #4]
   158c0:	b	15858 <putchar_unlocked@plt+0x4334>
   158c4:	mov	r8, #0
   158c8:	b	1585c <putchar_unlocked@plt+0x4338>
   158cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   158d0:	add	fp, sp, #24
   158d4:	cmp	r0, #1
   158d8:	beq	15928 <putchar_unlocked@plt+0x4404>
   158dc:	mov	r7, r0
   158e0:	bl	113e0 <__errno_location@plt>
   158e4:	ldr	r8, [r0]
   158e8:	mov	r6, r0
   158ec:	mov	r0, r7
   158f0:	bl	15a10 <putchar_unlocked@plt+0x44ec>
   158f4:	cmp	r0, #0
   158f8:	mov	r5, r0
   158fc:	ldreq	r8, [r6]
   15900:	cmp	r7, #2
   15904:	bcc	15920 <putchar_unlocked@plt+0x43fc>
   15908:	ldr	r4, [r7]
   1590c:	mov	r0, r7
   15910:	bl	164e8 <putchar_unlocked@plt+0x4fc4>
   15914:	cmp	r4, #0
   15918:	mov	r7, r4
   1591c:	bne	15908 <putchar_unlocked@plt+0x43e4>
   15920:	str	r8, [r6]
   15924:	b	1592c <putchar_unlocked@plt+0x4408>
   15928:	mov	r5, #1
   1592c:	mov	r0, r5
   15930:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15934:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15938:	add	fp, sp, #24
   1593c:	sub	sp, sp, #48	; 0x30
   15940:	mov	r4, r1
   15944:	cmp	r0, #0
   15948:	beq	159e8 <putchar_unlocked@plt+0x44c4>
   1594c:	mov	r6, r0
   15950:	bl	156f0 <putchar_unlocked@plt+0x41cc>
   15954:	cmp	r0, #0
   15958:	beq	15a00 <putchar_unlocked@plt+0x44dc>
   1595c:	mov	r1, #32
   15960:	mov	r2, r4
   15964:	mov	r7, r0
   15968:	mov	r0, sp
   1596c:	vld1.32	{d16-d17}, [r2], r1
   15970:	mov	r3, r0
   15974:	vst1.32	{d16-d17}, [r3], r1
   15978:	ldr	r1, [r4, #16]
   1597c:	ldr	r5, [r4, #20]
   15980:	str	r1, [sp, #16]
   15984:	mvn	r1, #0
   15988:	str	r1, [sp, #28]
   1598c:	str	r5, [sp, #20]
   15990:	ldr	r1, [r2]
   15994:	str	r1, [r3]
   15998:	bl	11218 <mktime@plt>
   1599c:	mov	r5, r0
   159a0:	ldr	r0, [sp, #28]
   159a4:	cmn	r0, #1
   159a8:	ble	159f8 <putchar_unlocked@plt+0x44d4>
   159ac:	mov	r8, sp
   159b0:	mov	r0, r6
   159b4:	mov	r1, r8
   159b8:	bl	157a4 <putchar_unlocked@plt+0x4280>
   159bc:	mov	r6, r0
   159c0:	mov	r0, r7
   159c4:	bl	158cc <putchar_unlocked@plt+0x43a8>
   159c8:	cmp	r6, #0
   159cc:	cmpne	r0, #0
   159d0:	beq	15a00 <putchar_unlocked@plt+0x44dc>
   159d4:	ldm	r8!, {r0, r1, r2, r3, r7}
   159d8:	stmia	r4!, {r0, r1, r2, r3, r7}
   159dc:	ldm	r8, {r0, r1, r2, r3, r6, r7}
   159e0:	stm	r4, {r0, r1, r2, r3, r6, r7}
   159e4:	b	15a04 <putchar_unlocked@plt+0x44e0>
   159e8:	mov	r0, r4
   159ec:	sub	sp, fp, #24
   159f0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   159f4:	b	114ac <timegm@plt>
   159f8:	mov	r0, r7
   159fc:	bl	158cc <putchar_unlocked@plt+0x43a8>
   15a00:	mvn	r5, #0
   15a04:	mov	r0, r5
   15a08:	sub	sp, fp, #24
   15a0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15a10:	push	{fp, lr}
   15a14:	mov	fp, sp
   15a18:	ldrb	r1, [r0, #4]
   15a1c:	cmp	r1, #0
   15a20:	beq	15a3c <putchar_unlocked@plt+0x4518>
   15a24:	add	r1, r0, #5
   15a28:	movw	r0, #28056	; 0x6d98
   15a2c:	mov	r2, #1
   15a30:	movt	r0, #1
   15a34:	bl	113d4 <setenv@plt>
   15a38:	b	15a48 <putchar_unlocked@plt+0x4524>
   15a3c:	movw	r0, #28056	; 0x6d98
   15a40:	movt	r0, #1
   15a44:	bl	114dc <unsetenv@plt>
   15a48:	mov	r1, #0
   15a4c:	cmp	r0, #0
   15a50:	bne	15a5c <putchar_unlocked@plt+0x4538>
   15a54:	bl	112c0 <tzset@plt>
   15a58:	mov	r1, #1
   15a5c:	mov	r0, r1
   15a60:	pop	{fp, pc}
   15a64:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15a68:	add	fp, sp, #24
   15a6c:	sub	sp, sp, #32
   15a70:	ldr	r6, [fp, #12]
   15a74:	ldr	r7, [fp, #8]
   15a78:	mov	r4, r2
   15a7c:	mov	r8, r0
   15a80:	cmp	r1, #0
   15a84:	beq	15aac <putchar_unlocked@plt+0x4588>
   15a88:	movw	r2, #28059	; 0x6d9b
   15a8c:	mov	r5, r1
   15a90:	str	r3, [sp, #4]
   15a94:	str	r4, [sp]
   15a98:	mov	r0, r8
   15a9c:	mov	r1, #1
   15aa0:	movt	r2, #1
   15aa4:	mov	r3, r5
   15aa8:	b	15ac4 <putchar_unlocked@plt+0x45a0>
   15aac:	movw	r2, #28071	; 0x6da7
   15ab0:	str	r3, [sp]
   15ab4:	mov	r0, r8
   15ab8:	mov	r1, #1
   15abc:	mov	r3, r4
   15ac0:	movt	r2, #1
   15ac4:	bl	11428 <__fprintf_chk@plt>
   15ac8:	movw	r1, #28078	; 0x6dae
   15acc:	mov	r0, #0
   15ad0:	mov	r2, #5
   15ad4:	movt	r1, #1
   15ad8:	bl	11278 <dcgettext@plt>
   15adc:	movw	r2, #28796	; 0x707c
   15ae0:	mov	r3, r0
   15ae4:	movw	r0, #2022	; 0x7e6
   15ae8:	mov	r1, #1
   15aec:	movt	r2, #1
   15af0:	str	r0, [sp]
   15af4:	mov	r0, r8
   15af8:	bl	11428 <__fprintf_chk@plt>
   15afc:	movw	r4, #26879	; 0x68ff
   15b00:	mov	r1, r8
   15b04:	movt	r4, #1
   15b08:	mov	r0, r4
   15b0c:	bl	111f4 <fputs_unlocked@plt>
   15b10:	movw	r1, #28082	; 0x6db2
   15b14:	mov	r0, #0
   15b18:	mov	r2, #5
   15b1c:	movt	r1, #1
   15b20:	bl	11278 <dcgettext@plt>
   15b24:	movw	r3, #28253	; 0x6e5d
   15b28:	mov	r2, r0
   15b2c:	mov	r0, r8
   15b30:	mov	r1, #1
   15b34:	movt	r3, #1
   15b38:	bl	11428 <__fprintf_chk@plt>
   15b3c:	mov	r0, r4
   15b40:	mov	r1, r8
   15b44:	bl	111f4 <fputs_unlocked@plt>
   15b48:	cmp	r6, #9
   15b4c:	bhi	15bb0 <putchar_unlocked@plt+0x468c>
   15b50:	add	r0, pc, #0
   15b54:	ldr	pc, [r0, r6, lsl #2]
   15b58:	andeq	r5, r1, r8, lsl #27
   15b5c:	andeq	r5, r1, r0, lsl #23
   15b60:			; <UNDEFINED> instruction: 0x00015bbc
   15b64:	andeq	r5, r1, r4, ror #23
   15b68:	andeq	r5, r1, ip, lsl #24
   15b6c:	andeq	r5, r1, r4, lsr ip
   15b70:	andeq	r5, r1, ip, asr ip
   15b74:	muleq	r1, r4, ip
   15b78:	andeq	r5, r1, r4, lsr sp
   15b7c:	ldrdeq	r5, [r1], -ip
   15b80:	movw	r1, #28287	; 0x6e7f
   15b84:	mov	r0, #0
   15b88:	mov	r2, #5
   15b8c:	movt	r1, #1
   15b90:	bl	11278 <dcgettext@plt>
   15b94:	ldr	r3, [r7]
   15b98:	mov	r2, r0
   15b9c:	mov	r0, r8
   15ba0:	mov	r1, #1
   15ba4:	sub	sp, fp, #24
   15ba8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15bac:	b	11428 <__fprintf_chk@plt>
   15bb0:	movw	r1, #28606	; 0x6fbe
   15bb4:	movt	r1, #1
   15bb8:	b	15ce4 <putchar_unlocked@plt+0x47c0>
   15bbc:	movw	r1, #28303	; 0x6e8f
   15bc0:	mov	r0, #0
   15bc4:	mov	r2, #5
   15bc8:	movt	r1, #1
   15bcc:	bl	11278 <dcgettext@plt>
   15bd0:	mov	r2, r0
   15bd4:	ldr	r3, [r7]
   15bd8:	ldr	r0, [r7, #4]
   15bdc:	str	r0, [sp]
   15be0:	b	15cd0 <putchar_unlocked@plt+0x47ac>
   15be4:	movw	r1, #28326	; 0x6ea6
   15be8:	mov	r0, #0
   15bec:	mov	r2, #5
   15bf0:	movt	r1, #1
   15bf4:	bl	11278 <dcgettext@plt>
   15bf8:	mov	r2, r0
   15bfc:	ldr	r3, [r7]
   15c00:	ldmib	r7, {r0, r1}
   15c04:	stm	sp, {r0, r1}
   15c08:	b	15cd0 <putchar_unlocked@plt+0x47ac>
   15c0c:	movw	r1, #28354	; 0x6ec2
   15c10:	mov	r0, #0
   15c14:	mov	r2, #5
   15c18:	movt	r1, #1
   15c1c:	bl	11278 <dcgettext@plt>
   15c20:	ldr	r3, [r7]
   15c24:	mov	r2, r0
   15c28:	ldmib	r7, {r0, r1, r7}
   15c2c:	stm	sp, {r0, r1, r7}
   15c30:	b	15cd0 <putchar_unlocked@plt+0x47ac>
   15c34:	movw	r1, #28386	; 0x6ee2
   15c38:	mov	r0, #0
   15c3c:	mov	r2, #5
   15c40:	movt	r1, #1
   15c44:	bl	11278 <dcgettext@plt>
   15c48:	ldr	r3, [r7]
   15c4c:	mov	r2, r0
   15c50:	ldmib	r7, {r0, r1, r6, r7}
   15c54:	stm	sp, {r0, r1, r6, r7}
   15c58:	b	15cd0 <putchar_unlocked@plt+0x47ac>
   15c5c:	movw	r1, #28422	; 0x6f06
   15c60:	mov	r0, #0
   15c64:	mov	r2, #5
   15c68:	movt	r1, #1
   15c6c:	bl	11278 <dcgettext@plt>
   15c70:	mov	r2, r0
   15c74:	ldr	r3, [r7]
   15c78:	ldmib	r7, {r0, r1, r6}
   15c7c:	ldr	r5, [r7, #16]
   15c80:	ldr	r7, [r7, #20]
   15c84:	stm	sp, {r0, r1, r6}
   15c88:	str	r5, [sp, #12]
   15c8c:	str	r7, [sp, #16]
   15c90:	b	15cd0 <putchar_unlocked@plt+0x47ac>
   15c94:	movw	r1, #28462	; 0x6f2e
   15c98:	mov	r0, #0
   15c9c:	mov	r2, #5
   15ca0:	movt	r1, #1
   15ca4:	bl	11278 <dcgettext@plt>
   15ca8:	mov	r2, r0
   15cac:	ldr	r3, [r7]
   15cb0:	ldmib	r7, {r0, r1, r6}
   15cb4:	ldr	r5, [r7, #16]
   15cb8:	ldr	r4, [r7, #20]
   15cbc:	ldr	r7, [r7, #24]
   15cc0:	stm	sp, {r0, r1, r6}
   15cc4:	str	r5, [sp, #12]
   15cc8:	str	r4, [sp, #16]
   15ccc:	str	r7, [sp, #20]
   15cd0:	mov	r0, r8
   15cd4:	mov	r1, #1
   15cd8:	b	15d84 <putchar_unlocked@plt+0x4860>
   15cdc:	movw	r1, #28554	; 0x6f8a
   15ce0:	movt	r1, #1
   15ce4:	mov	r0, #0
   15ce8:	mov	r2, #5
   15cec:	bl	11278 <dcgettext@plt>
   15cf0:	mov	ip, r0
   15cf4:	ldr	r3, [r7]
   15cf8:	ldr	r0, [r7, #4]
   15cfc:	ldr	r1, [r7, #8]
   15d00:	ldr	r6, [r7, #12]
   15d04:	ldr	r5, [r7, #16]
   15d08:	ldr	r4, [r7, #20]
   15d0c:	ldr	r2, [r7, #24]
   15d10:	ldr	lr, [r7, #28]
   15d14:	ldr	r7, [r7, #32]
   15d18:	stm	sp, {r0, r1, r6}
   15d1c:	str	r5, [sp, #12]
   15d20:	str	r4, [sp, #16]
   15d24:	str	r2, [sp, #20]
   15d28:	str	lr, [sp, #24]
   15d2c:	str	r7, [sp, #28]
   15d30:	b	15d78 <putchar_unlocked@plt+0x4854>
   15d34:	movw	r1, #28506	; 0x6f5a
   15d38:	mov	r0, #0
   15d3c:	mov	r2, #5
   15d40:	movt	r1, #1
   15d44:	bl	11278 <dcgettext@plt>
   15d48:	mov	ip, r0
   15d4c:	ldr	r3, [r7]
   15d50:	ldmib	r7, {r0, r1, r6}
   15d54:	ldr	r5, [r7, #16]
   15d58:	ldr	r4, [r7, #20]
   15d5c:	ldr	r2, [r7, #24]
   15d60:	ldr	r7, [r7, #28]
   15d64:	stm	sp, {r0, r1, r6}
   15d68:	str	r5, [sp, #12]
   15d6c:	str	r4, [sp, #16]
   15d70:	str	r2, [sp, #20]
   15d74:	str	r7, [sp, #24]
   15d78:	mov	r0, r8
   15d7c:	mov	r1, #1
   15d80:	mov	r2, ip
   15d84:	bl	11428 <__fprintf_chk@plt>
   15d88:	sub	sp, fp, #24
   15d8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15d90:	push	{r4, sl, fp, lr}
   15d94:	add	fp, sp, #8
   15d98:	sub	sp, sp, #8
   15d9c:	ldr	ip, [fp, #8]
   15da0:	mov	lr, #0
   15da4:	ldr	r4, [ip, lr, lsl #2]
   15da8:	add	lr, lr, #1
   15dac:	cmp	r4, #0
   15db0:	bne	15da4 <putchar_unlocked@plt+0x4880>
   15db4:	sub	r4, lr, #1
   15db8:	str	ip, [sp]
   15dbc:	str	r4, [sp, #4]
   15dc0:	bl	15a64 <putchar_unlocked@plt+0x4540>
   15dc4:	sub	sp, fp, #8
   15dc8:	pop	{r4, sl, fp, pc}
   15dcc:	push	{r4, r5, fp, lr}
   15dd0:	add	fp, sp, #8
   15dd4:	sub	sp, sp, #48	; 0x30
   15dd8:	ldr	r4, [fp, #8]
   15ddc:	mov	ip, #0
   15de0:	add	lr, sp, #8
   15de4:	ldr	r5, [r4]
   15de8:	cmp	r5, #0
   15dec:	str	r5, [lr, ip, lsl #2]
   15df0:	beq	15e08 <putchar_unlocked@plt+0x48e4>
   15df4:	add	ip, ip, #1
   15df8:	add	r4, r4, #4
   15dfc:	cmp	ip, #10
   15e00:	bne	15de4 <putchar_unlocked@plt+0x48c0>
   15e04:	mov	ip, #10
   15e08:	str	lr, [sp]
   15e0c:	str	ip, [sp, #4]
   15e10:	bl	15a64 <putchar_unlocked@plt+0x4540>
   15e14:	sub	sp, fp, #8
   15e18:	pop	{r4, r5, fp, pc}
   15e1c:	push	{fp, lr}
   15e20:	mov	fp, sp
   15e24:	sub	sp, sp, #8
   15e28:	add	ip, fp, #8
   15e2c:	str	ip, [sp, #4]
   15e30:	str	ip, [sp]
   15e34:	bl	15dcc <putchar_unlocked@plt+0x48a8>
   15e38:	mov	sp, fp
   15e3c:	pop	{fp, pc}
   15e40:	push	{fp, lr}
   15e44:	mov	fp, sp
   15e48:	movw	r0, #33164	; 0x818c
   15e4c:	movt	r0, #2
   15e50:	ldr	r1, [r0]
   15e54:	movw	r0, #26879	; 0x68ff
   15e58:	movt	r0, #1
   15e5c:	bl	111f4 <fputs_unlocked@plt>
   15e60:	movw	r1, #28666	; 0x6ffa
   15e64:	mov	r0, #0
   15e68:	mov	r2, #5
   15e6c:	movt	r1, #1
   15e70:	bl	11278 <dcgettext@plt>
   15e74:	movw	r2, #28686	; 0x700e
   15e78:	mov	r1, r0
   15e7c:	mov	r0, #1
   15e80:	movt	r2, #1
   15e84:	bl	11410 <__printf_chk@plt>
   15e88:	movw	r1, #28708	; 0x7024
   15e8c:	mov	r0, #0
   15e90:	mov	r2, #5
   15e94:	movt	r1, #1
   15e98:	bl	11278 <dcgettext@plt>
   15e9c:	movw	r2, #27032	; 0x6998
   15ea0:	movw	r3, #27226	; 0x6a5a
   15ea4:	mov	r1, r0
   15ea8:	mov	r0, #1
   15eac:	movt	r2, #1
   15eb0:	movt	r3, #1
   15eb4:	bl	11410 <__printf_chk@plt>
   15eb8:	movw	r1, #28728	; 0x7038
   15ebc:	mov	r0, #0
   15ec0:	mov	r2, #5
   15ec4:	movt	r1, #1
   15ec8:	bl	11278 <dcgettext@plt>
   15ecc:	movw	r2, #28767	; 0x705f
   15ed0:	mov	r1, r0
   15ed4:	mov	r0, #1
   15ed8:	movt	r2, #1
   15edc:	pop	{fp, lr}
   15ee0:	b	11410 <__printf_chk@plt>
   15ee4:	b	15ee8 <putchar_unlocked@plt+0x49c4>
   15ee8:	push	{r4, r5, r6, sl, fp, lr}
   15eec:	add	fp, sp, #16
   15ef0:	mov	r4, r2
   15ef4:	mov	r5, r1
   15ef8:	mov	r6, r0
   15efc:	bl	165ac <putchar_unlocked@plt+0x5088>
   15f00:	cmp	r0, #0
   15f04:	popne	{r4, r5, r6, sl, fp, pc}
   15f08:	cmp	r6, #0
   15f0c:	beq	15f20 <putchar_unlocked@plt+0x49fc>
   15f10:	cmp	r5, #0
   15f14:	cmpne	r4, #0
   15f18:	bne	15f20 <putchar_unlocked@plt+0x49fc>
   15f1c:	pop	{r4, r5, r6, sl, fp, pc}
   15f20:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   15f24:	push	{fp, lr}
   15f28:	mov	fp, sp
   15f2c:	bl	163e8 <putchar_unlocked@plt+0x4ec4>
   15f30:	cmp	r0, #0
   15f34:	popne	{fp, pc}
   15f38:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   15f3c:	push	{fp, lr}
   15f40:	mov	fp, sp
   15f44:	bl	163e8 <putchar_unlocked@plt+0x4ec4>
   15f48:	cmp	r0, #0
   15f4c:	popne	{fp, pc}
   15f50:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   15f54:	push	{fp, lr}
   15f58:	mov	fp, sp
   15f5c:	bl	163e8 <putchar_unlocked@plt+0x4ec4>
   15f60:	cmp	r0, #0
   15f64:	popne	{fp, pc}
   15f68:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   15f6c:	push	{r4, r5, fp, lr}
   15f70:	add	fp, sp, #8
   15f74:	mov	r4, r1
   15f78:	mov	r5, r0
   15f7c:	bl	16418 <putchar_unlocked@plt+0x4ef4>
   15f80:	cmp	r0, #0
   15f84:	popne	{r4, r5, fp, pc}
   15f88:	cmp	r5, #0
   15f8c:	beq	15f9c <putchar_unlocked@plt+0x4a78>
   15f90:	cmp	r4, #0
   15f94:	bne	15f9c <putchar_unlocked@plt+0x4a78>
   15f98:	pop	{r4, r5, fp, pc}
   15f9c:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   15fa0:	push	{fp, lr}
   15fa4:	mov	fp, sp
   15fa8:	cmp	r1, #0
   15fac:	orreq	r1, r1, #1
   15fb0:	bl	16418 <putchar_unlocked@plt+0x4ef4>
   15fb4:	cmp	r0, #0
   15fb8:	popne	{fp, pc}
   15fbc:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   15fc0:	push	{fp, lr}
   15fc4:	mov	fp, sp
   15fc8:	clz	r3, r2
   15fcc:	lsr	ip, r3, #5
   15fd0:	clz	r3, r1
   15fd4:	lsr	r3, r3, #5
   15fd8:	orrs	r3, r3, ip
   15fdc:	movwne	r1, #1
   15fe0:	movwne	r2, #1
   15fe4:	bl	165ac <putchar_unlocked@plt+0x5088>
   15fe8:	cmp	r0, #0
   15fec:	popne	{fp, pc}
   15ff0:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   15ff4:	push	{fp, lr}
   15ff8:	mov	fp, sp
   15ffc:	mov	r2, r1
   16000:	mov	r1, r0
   16004:	mov	r0, #0
   16008:	bl	165ac <putchar_unlocked@plt+0x5088>
   1600c:	cmp	r0, #0
   16010:	popne	{fp, pc}
   16014:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   16018:	mov	r2, r1
   1601c:	mov	r1, r0
   16020:	mov	r0, #0
   16024:	b	15fc0 <putchar_unlocked@plt+0x4a9c>
   16028:	mov	r2, #1
   1602c:	b	16030 <putchar_unlocked@plt+0x4b0c>
   16030:	push	{r4, r5, fp, lr}
   16034:	add	fp, sp, #8
   16038:	ldr	r5, [r1]
   1603c:	mov	r4, r1
   16040:	cmp	r0, #0
   16044:	beq	1605c <putchar_unlocked@plt+0x4b38>
   16048:	mov	r1, #1
   1604c:	add	r1, r1, r5, lsr #1
   16050:	adds	r5, r5, r1
   16054:	bcc	16074 <putchar_unlocked@plt+0x4b50>
   16058:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   1605c:	cmp	r5, #0
   16060:	bne	16074 <putchar_unlocked@plt+0x4b50>
   16064:	mov	r1, #64	; 0x40
   16068:	cmp	r2, #64	; 0x40
   1606c:	udiv	r5, r1, r2
   16070:	addhi	r5, r5, #1
   16074:	mov	r1, r5
   16078:	bl	15ee8 <putchar_unlocked@plt+0x49c4>
   1607c:	str	r5, [r4]
   16080:	pop	{r4, r5, fp, pc}
   16084:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16088:	add	fp, sp, #24
   1608c:	ldr	r6, [r1]
   16090:	mov	r8, r1
   16094:	ldr	r4, [fp, #8]
   16098:	add	r1, r6, r6, asr #1
   1609c:	cmp	r1, r6
   160a0:	mvnvs	r1, #-2147483648	; 0x80000000
   160a4:	cmp	r1, r3
   160a8:	mov	r5, r1
   160ac:	movgt	r5, r3
   160b0:	cmn	r3, #1
   160b4:	movle	r5, r1
   160b8:	cmn	r4, #1
   160bc:	ble	160dc <putchar_unlocked@plt+0x4bb8>
   160c0:	cmp	r4, #0
   160c4:	beq	16130 <putchar_unlocked@plt+0x4c0c>
   160c8:	cmn	r5, #1
   160cc:	ble	16104 <putchar_unlocked@plt+0x4be0>
   160d0:	mvn	r7, #-2147483648	; 0x80000000
   160d4:	udiv	r1, r7, r4
   160d8:	b	160f8 <putchar_unlocked@plt+0x4bd4>
   160dc:	cmn	r5, #1
   160e0:	ble	16120 <putchar_unlocked@plt+0x4bfc>
   160e4:	cmn	r4, #1
   160e8:	beq	16130 <putchar_unlocked@plt+0x4c0c>
   160ec:	mov	r1, #-2147483648	; 0x80000000
   160f0:	mvn	r7, #-2147483648	; 0x80000000
   160f4:	sdiv	r1, r1, r4
   160f8:	cmp	r1, r5
   160fc:	bge	16130 <putchar_unlocked@plt+0x4c0c>
   16100:	b	16140 <putchar_unlocked@plt+0x4c1c>
   16104:	beq	16130 <putchar_unlocked@plt+0x4c0c>
   16108:	mov	r1, #-2147483648	; 0x80000000
   1610c:	mvn	r7, #-2147483648	; 0x80000000
   16110:	sdiv	r1, r1, r5
   16114:	cmp	r1, r4
   16118:	bge	16130 <putchar_unlocked@plt+0x4c0c>
   1611c:	b	16140 <putchar_unlocked@plt+0x4c1c>
   16120:	mvn	r7, #-2147483648	; 0x80000000
   16124:	sdiv	r1, r7, r4
   16128:	cmp	r5, r1
   1612c:	blt	16140 <putchar_unlocked@plt+0x4c1c>
   16130:	mul	r1, r5, r4
   16134:	mov	r7, #64	; 0x40
   16138:	cmp	r1, #63	; 0x3f
   1613c:	bgt	16148 <putchar_unlocked@plt+0x4c24>
   16140:	sdiv	r5, r7, r4
   16144:	mul	r1, r5, r4
   16148:	cmp	r0, #0
   1614c:	moveq	r7, #0
   16150:	streq	r7, [r8]
   16154:	sub	r7, r5, r6
   16158:	cmp	r7, r2
   1615c:	bge	16200 <putchar_unlocked@plt+0x4cdc>
   16160:	add	r5, r6, r2
   16164:	mov	r2, #0
   16168:	mov	r1, #0
   1616c:	cmp	r5, r3
   16170:	movwgt	r2, #1
   16174:	cmn	r3, #1
   16178:	movwgt	r1, #1
   1617c:	cmp	r5, r6
   16180:	bvs	161e8 <putchar_unlocked@plt+0x4cc4>
   16184:	ands	r1, r1, r2
   16188:	bne	161e8 <putchar_unlocked@plt+0x4cc4>
   1618c:	cmn	r4, #1
   16190:	ble	161b0 <putchar_unlocked@plt+0x4c8c>
   16194:	cmp	r4, #0
   16198:	beq	161fc <putchar_unlocked@plt+0x4cd8>
   1619c:	cmn	r5, #1
   161a0:	ble	161d4 <putchar_unlocked@plt+0x4cb0>
   161a4:	mvn	r1, #-2147483648	; 0x80000000
   161a8:	udiv	r1, r1, r4
   161ac:	b	161c8 <putchar_unlocked@plt+0x4ca4>
   161b0:	cmn	r5, #1
   161b4:	ble	161ec <putchar_unlocked@plt+0x4cc8>
   161b8:	cmn	r4, #1
   161bc:	beq	161fc <putchar_unlocked@plt+0x4cd8>
   161c0:	mov	r1, #-2147483648	; 0x80000000
   161c4:	sdiv	r1, r1, r4
   161c8:	cmp	r1, r5
   161cc:	bge	161fc <putchar_unlocked@plt+0x4cd8>
   161d0:	b	161e8 <putchar_unlocked@plt+0x4cc4>
   161d4:	beq	161fc <putchar_unlocked@plt+0x4cd8>
   161d8:	mov	r1, #-2147483648	; 0x80000000
   161dc:	sdiv	r1, r1, r5
   161e0:	cmp	r1, r4
   161e4:	bge	161fc <putchar_unlocked@plt+0x4cd8>
   161e8:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   161ec:	mvn	r1, #-2147483648	; 0x80000000
   161f0:	sdiv	r1, r1, r4
   161f4:	cmp	r5, r1
   161f8:	blt	161e8 <putchar_unlocked@plt+0x4cc4>
   161fc:	mul	r1, r5, r4
   16200:	bl	15f6c <putchar_unlocked@plt+0x4a48>
   16204:	str	r5, [r8]
   16208:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1620c:	push	{fp, lr}
   16210:	mov	fp, sp
   16214:	mov	r1, #1
   16218:	bl	16394 <putchar_unlocked@plt+0x4e70>
   1621c:	cmp	r0, #0
   16220:	popne	{fp, pc}
   16224:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   16228:	push	{fp, lr}
   1622c:	mov	fp, sp
   16230:	bl	16394 <putchar_unlocked@plt+0x4e70>
   16234:	cmp	r0, #0
   16238:	popne	{fp, pc}
   1623c:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   16240:	push	{fp, lr}
   16244:	mov	fp, sp
   16248:	mov	r1, #1
   1624c:	bl	16394 <putchar_unlocked@plt+0x4e70>
   16250:	cmp	r0, #0
   16254:	popne	{fp, pc}
   16258:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   1625c:	push	{fp, lr}
   16260:	mov	fp, sp
   16264:	bl	16394 <putchar_unlocked@plt+0x4e70>
   16268:	cmp	r0, #0
   1626c:	popne	{fp, pc}
   16270:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   16274:	push	{r4, r5, fp, lr}
   16278:	add	fp, sp, #8
   1627c:	mov	r5, r0
   16280:	mov	r0, r1
   16284:	mov	r4, r1
   16288:	bl	163e8 <putchar_unlocked@plt+0x4ec4>
   1628c:	cmp	r0, #0
   16290:	beq	162a4 <putchar_unlocked@plt+0x4d80>
   16294:	mov	r1, r5
   16298:	mov	r2, r4
   1629c:	pop	{r4, r5, fp, lr}
   162a0:	b	11254 <memcpy@plt>
   162a4:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   162a8:	push	{r4, r5, fp, lr}
   162ac:	add	fp, sp, #8
   162b0:	mov	r5, r0
   162b4:	mov	r0, r1
   162b8:	mov	r4, r1
   162bc:	bl	163e8 <putchar_unlocked@plt+0x4ec4>
   162c0:	cmp	r0, #0
   162c4:	beq	162d8 <putchar_unlocked@plt+0x4db4>
   162c8:	mov	r1, r5
   162cc:	mov	r2, r4
   162d0:	pop	{r4, r5, fp, lr}
   162d4:	b	11254 <memcpy@plt>
   162d8:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   162dc:	push	{r4, r5, fp, lr}
   162e0:	add	fp, sp, #8
   162e4:	mov	r5, r0
   162e8:	add	r0, r1, #1
   162ec:	mov	r4, r1
   162f0:	bl	163e8 <putchar_unlocked@plt+0x4ec4>
   162f4:	cmp	r0, #0
   162f8:	beq	16314 <putchar_unlocked@plt+0x4df0>
   162fc:	mov	r1, #0
   16300:	mov	r2, r4
   16304:	strb	r1, [r0, r4]
   16308:	mov	r1, r5
   1630c:	pop	{r4, r5, fp, lr}
   16310:	b	11254 <memcpy@plt>
   16314:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   16318:	push	{r4, r5, fp, lr}
   1631c:	add	fp, sp, #8
   16320:	mov	r4, r0
   16324:	bl	113c8 <strlen@plt>
   16328:	add	r5, r0, #1
   1632c:	mov	r0, r5
   16330:	bl	163e8 <putchar_unlocked@plt+0x4ec4>
   16334:	cmp	r0, #0
   16338:	beq	1634c <putchar_unlocked@plt+0x4e28>
   1633c:	mov	r1, r4
   16340:	mov	r2, r5
   16344:	pop	{r4, r5, fp, lr}
   16348:	b	11254 <memcpy@plt>
   1634c:	bl	16350 <putchar_unlocked@plt+0x4e2c>
   16350:	push	{fp, lr}
   16354:	mov	fp, sp
   16358:	movw	r0, #33076	; 0x8134
   1635c:	movw	r1, #28843	; 0x70ab
   16360:	mov	r2, #5
   16364:	movt	r0, #2
   16368:	movt	r1, #1
   1636c:	ldr	r4, [r0]
   16370:	mov	r0, #0
   16374:	bl	11278 <dcgettext@plt>
   16378:	movw	r2, #27705	; 0x6c39
   1637c:	mov	r3, r0
   16380:	mov	r0, r4
   16384:	mov	r1, #0
   16388:	movt	r2, #1
   1638c:	bl	11314 <error@plt>
   16390:	bl	11500 <abort@plt>
   16394:	clz	r2, r1
   16398:	clz	r3, r0
   1639c:	lsr	r2, r2, #5
   163a0:	lsr	r3, r3, #5
   163a4:	orrs	r2, r3, r2
   163a8:	movwne	r1, #1
   163ac:	movwne	r0, #1
   163b0:	cmp	r1, #0
   163b4:	beq	163e4 <putchar_unlocked@plt+0x4ec0>
   163b8:	mvn	r2, #-2147483648	; 0x80000000
   163bc:	udiv	r2, r2, r1
   163c0:	cmp	r2, r0
   163c4:	bcs	163e4 <putchar_unlocked@plt+0x4ec0>
   163c8:	push	{fp, lr}
   163cc:	mov	fp, sp
   163d0:	bl	113e0 <__errno_location@plt>
   163d4:	mov	r1, #12
   163d8:	str	r1, [r0]
   163dc:	mov	r0, #0
   163e0:	pop	{fp, pc}
   163e4:	b	111e8 <calloc@plt>
   163e8:	cmp	r0, #0
   163ec:	movweq	r0, #1
   163f0:	cmn	r0, #1
   163f4:	ble	163fc <putchar_unlocked@plt+0x4ed8>
   163f8:	b	1132c <malloc@plt>
   163fc:	push	{fp, lr}
   16400:	mov	fp, sp
   16404:	bl	113e0 <__errno_location@plt>
   16408:	mov	r1, #12
   1640c:	str	r1, [r0]
   16410:	mov	r0, #0
   16414:	pop	{fp, pc}
   16418:	push	{fp, lr}
   1641c:	mov	fp, sp
   16420:	cmp	r0, #0
   16424:	beq	16440 <putchar_unlocked@plt+0x4f1c>
   16428:	cmp	r1, #0
   1642c:	beq	1644c <putchar_unlocked@plt+0x4f28>
   16430:	cmn	r1, #1
   16434:	ble	16454 <putchar_unlocked@plt+0x4f30>
   16438:	pop	{fp, lr}
   1643c:	b	11290 <realloc@plt>
   16440:	mov	r0, r1
   16444:	pop	{fp, lr}
   16448:	b	163e8 <putchar_unlocked@plt+0x4ec4>
   1644c:	bl	164e8 <putchar_unlocked@plt+0x4fc4>
   16450:	b	16460 <putchar_unlocked@plt+0x4f3c>
   16454:	bl	113e0 <__errno_location@plt>
   16458:	mov	r1, #12
   1645c:	str	r1, [r0]
   16460:	mov	r0, #0
   16464:	pop	{fp, pc}
   16468:	push	{r4, r5, r6, sl, fp, lr}
   1646c:	add	fp, sp, #16
   16470:	mov	r4, r0
   16474:	bl	112f0 <__fpending@plt>
   16478:	mov	r5, r0
   1647c:	mov	r0, r4
   16480:	bl	112fc <ferror_unlocked@plt>
   16484:	mov	r6, r0
   16488:	mov	r0, r4
   1648c:	bl	11f48 <putchar_unlocked@plt+0xa24>
   16490:	cmp	r6, #0
   16494:	beq	164b4 <putchar_unlocked@plt+0x4f90>
   16498:	mvn	r4, #0
   1649c:	cmp	r0, #0
   164a0:	bne	164e0 <putchar_unlocked@plt+0x4fbc>
   164a4:	bl	113e0 <__errno_location@plt>
   164a8:	mov	r1, #0
   164ac:	str	r1, [r0]
   164b0:	b	164e0 <putchar_unlocked@plt+0x4fbc>
   164b4:	cmp	r0, #0
   164b8:	mov	r4, r0
   164bc:	mvnne	r4, #0
   164c0:	cmp	r5, #0
   164c4:	bne	164e0 <putchar_unlocked@plt+0x4fbc>
   164c8:	cmp	r0, #0
   164cc:	beq	164e0 <putchar_unlocked@plt+0x4fbc>
   164d0:	bl	113e0 <__errno_location@plt>
   164d4:	ldr	r0, [r0]
   164d8:	subs	r4, r0, #9
   164dc:	mvnne	r4, #0
   164e0:	mov	r0, r4
   164e4:	pop	{r4, r5, r6, sl, fp, pc}
   164e8:	push	{r4, r5, r6, sl, fp, lr}
   164ec:	add	fp, sp, #16
   164f0:	mov	r4, r0
   164f4:	bl	113e0 <__errno_location@plt>
   164f8:	ldr	r6, [r0]
   164fc:	mov	r5, r0
   16500:	mov	r0, r4
   16504:	bl	1123c <free@plt>
   16508:	str	r6, [r5]
   1650c:	pop	{r4, r5, r6, sl, fp, pc}
   16510:	push	{fp, lr}
   16514:	mov	fp, sp
   16518:	mov	r0, #14
   1651c:	bl	11488 <nl_langinfo@plt>
   16520:	movw	r1, #26880	; 0x6900
   16524:	cmp	r0, #0
   16528:	movt	r1, #1
   1652c:	movne	r1, r0
   16530:	movw	r0, #28860	; 0x70bc
   16534:	ldrb	r2, [r1]
   16538:	movt	r0, #1
   1653c:	cmp	r2, #0
   16540:	movne	r0, r1
   16544:	pop	{fp, pc}
   16548:	push	{r4, r5, r6, r7, fp, lr}
   1654c:	add	fp, sp, #16
   16550:	sub	sp, sp, #8
   16554:	cmp	r0, #0
   16558:	add	r5, sp, #4
   1655c:	mov	r7, r2
   16560:	mov	r4, r1
   16564:	movne	r5, r0
   16568:	mov	r0, r5
   1656c:	bl	11308 <mbrtowc@plt>
   16570:	mov	r6, r0
   16574:	cmp	r7, #0
   16578:	beq	165a0 <putchar_unlocked@plt+0x507c>
   1657c:	cmn	r6, #2
   16580:	bcc	165a0 <putchar_unlocked@plt+0x507c>
   16584:	mov	r0, #0
   16588:	bl	165e8 <putchar_unlocked@plt+0x50c4>
   1658c:	cmp	r0, #0
   16590:	bne	165a0 <putchar_unlocked@plt+0x507c>
   16594:	ldrb	r0, [r4]
   16598:	mov	r6, #1
   1659c:	str	r0, [r5]
   165a0:	mov	r0, r6
   165a4:	sub	sp, fp, #16
   165a8:	pop	{r4, r5, r6, r7, fp, pc}
   165ac:	cmp	r2, #0
   165b0:	beq	165e0 <putchar_unlocked@plt+0x50bc>
   165b4:	mvn	r3, #0
   165b8:	udiv	r3, r3, r2
   165bc:	cmp	r3, r1
   165c0:	bcs	165e0 <putchar_unlocked@plt+0x50bc>
   165c4:	push	{fp, lr}
   165c8:	mov	fp, sp
   165cc:	bl	113e0 <__errno_location@plt>
   165d0:	mov	r1, #12
   165d4:	str	r1, [r0]
   165d8:	mov	r0, #0
   165dc:	pop	{fp, pc}
   165e0:	mul	r1, r2, r1
   165e4:	b	16418 <putchar_unlocked@plt+0x4ef4>
   165e8:	push	{r4, sl, fp, lr}
   165ec:	add	fp, sp, #8
   165f0:	sub	sp, sp, #264	; 0x108
   165f4:	add	r1, sp, #7
   165f8:	movw	r2, #257	; 0x101
   165fc:	bl	16654 <putchar_unlocked@plt+0x5130>
   16600:	mov	r4, #0
   16604:	cmp	r0, #0
   16608:	bne	16648 <putchar_unlocked@plt+0x5124>
   1660c:	movw	r1, #27687	; 0x6c27
   16610:	add	r0, sp, #7
   16614:	mov	r2, #2
   16618:	movt	r1, #1
   1661c:	bl	113bc <bcmp@plt>
   16620:	cmp	r0, #0
   16624:	beq	16648 <putchar_unlocked@plt+0x5124>
   16628:	movw	r1, #28866	; 0x70c2
   1662c:	add	r0, sp, #7
   16630:	mov	r2, #6
   16634:	movt	r1, #1
   16638:	bl	113bc <bcmp@plt>
   1663c:	cmp	r0, #0
   16640:	mov	r4, r0
   16644:	movwne	r4, #1
   16648:	mov	r0, r4
   1664c:	sub	sp, fp, #8
   16650:	pop	{r4, sl, fp, pc}
   16654:	push	{r4, r5, r6, r7, fp, lr}
   16658:	add	fp, sp, #16
   1665c:	mov	r4, r1
   16660:	mov	r1, #0
   16664:	mov	r6, r2
   16668:	bl	11470 <setlocale@plt>
   1666c:	cmp	r0, #0
   16670:	beq	1669c <putchar_unlocked@plt+0x5178>
   16674:	mov	r7, r0
   16678:	bl	113c8 <strlen@plt>
   1667c:	cmp	r0, r6
   16680:	bcs	166b0 <putchar_unlocked@plt+0x518c>
   16684:	add	r2, r0, #1
   16688:	mov	r0, r4
   1668c:	mov	r1, r7
   16690:	bl	11254 <memcpy@plt>
   16694:	mov	r5, #0
   16698:	b	166d8 <putchar_unlocked@plt+0x51b4>
   1669c:	cmp	r6, #0
   166a0:	mov	r5, #22
   166a4:	movne	r0, #0
   166a8:	strbne	r0, [r4]
   166ac:	b	166d8 <putchar_unlocked@plt+0x51b4>
   166b0:	mov	r5, #34	; 0x22
   166b4:	cmp	r6, #0
   166b8:	beq	166d8 <putchar_unlocked@plt+0x51b4>
   166bc:	sub	r6, r6, #1
   166c0:	mov	r0, r4
   166c4:	mov	r1, r7
   166c8:	mov	r2, r6
   166cc:	bl	11254 <memcpy@plt>
   166d0:	mov	r0, #0
   166d4:	strb	r0, [r4, r6]
   166d8:	mov	r0, r5
   166dc:	pop	{r4, r5, r6, r7, fp, pc}
   166e0:	mov	r1, #0
   166e4:	b	11470 <setlocale@plt>
   166e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   166ec:	mov	r7, r0
   166f0:	ldr	r6, [pc, #72]	; 16740 <putchar_unlocked@plt+0x521c>
   166f4:	ldr	r5, [pc, #72]	; 16744 <putchar_unlocked@plt+0x5220>
   166f8:	add	r6, pc, r6
   166fc:	add	r5, pc, r5
   16700:	sub	r6, r6, r5
   16704:	mov	r8, r1
   16708:	mov	r9, r2
   1670c:	bl	111c8 <calloc@plt-0x20>
   16710:	asrs	r6, r6, #2
   16714:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16718:	mov	r4, #0
   1671c:	add	r4, r4, #1
   16720:	ldr	r3, [r5], #4
   16724:	mov	r2, r9
   16728:	mov	r1, r8
   1672c:	mov	r0, r7
   16730:	blx	r3
   16734:	cmp	r6, r4
   16738:	bne	1671c <putchar_unlocked@plt+0x51f8>
   1673c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16740:	andeq	r1, r1, ip, lsl #16
   16744:	andeq	r1, r1, r4, lsl #16
   16748:	bx	lr
   1674c:	ldr	r3, [pc, #12]	; 16760 <putchar_unlocked@plt+0x523c>
   16750:	mov	r1, #0
   16754:	add	r3, pc, r3
   16758:	ldr	r2, [r3]
   1675c:	b	113ec <__cxa_atexit@plt>
   16760:	ldrdeq	r1, [r1], -r0

Disassembly of section .fini:

00016764 <.fini>:
   16764:	push	{r3, lr}
   16768:	pop	{r3, pc}
