
../repos/charybdis/tools/.libs/charybdis-mkpasswd:     file format elf32-littlearm


Disassembly of section .init:

00010710 <.init>:
   10710:	push	{r3, lr}
   10714:	bl	10874 <sprintf@plt+0x48>
   10718:	pop	{r3, pc}

Disassembly of section .plt:

0001071c <open@plt-0x14>:
   1071c:	push	{lr}		; (str lr, [sp, #-4]!)
   10720:	ldr	lr, [pc, #4]	; 1072c <open@plt-0x4>
   10724:	add	lr, pc, lr
   10728:	ldr	pc, [lr, #8]!
   1072c:	ldrdeq	r1, [r1], -r4

00010730 <open@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2260]!	; 0x8d4

0001073c <abort@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2252]!	; 0x8cc

00010748 <srand@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2244]!	; 0x8c4

00010754 <__libc_start_main@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #69632	; 0x11000
   1075c:	ldr	pc, [ip, #2236]!	; 0x8bc

00010760 <__gmon_start__@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #69632	; 0x11000
   10768:	ldr	pc, [ip, #2228]!	; 0x8b4

0001076c <getpass@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2220]!	; 0x8ac

00010778 <calloc@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #69632	; 0x11000
   10780:	ldr	pc, [ip, #2212]!	; 0x8a4

00010784 <free@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2204]!	; 0x89c

00010790 <read@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2196]!	; 0x894

0001079c <strlen@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2188]!	; 0x88c

000107a8 <getopt@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2180]!	; 0x884

000107b4 <printf@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2172]!	; 0x87c

000107c0 <atoi@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2164]!	; 0x874

000107cc <fwrite@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2156]!	; 0x86c

000107d8 <time@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2148]!	; 0x864

000107e4 <strdup@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #2140]!	; 0x85c

000107f0 <rb_crypt@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2132]!	; 0x854

000107fc <puts@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #69632	; 0x11000
   10804:	ldr	pc, [ip, #2124]!	; 0x84c

00010808 <rand@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #69632	; 0x11000
   10810:	ldr	pc, [ip, #2116]!	; 0x844

00010814 <strcmp@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #69632	; 0x11000
   1081c:	ldr	pc, [ip, #2108]!	; 0x83c

00010820 <exit@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #69632	; 0x11000
   10828:	ldr	pc, [ip, #2100]!	; 0x834

0001082c <sprintf@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2092]!	; 0x82c

Disassembly of section .text:

00010838 <.text>:
   10838:	mov	fp, #0
   1083c:	mov	lr, #0
   10840:	pop	{r1}		; (ldr r1, [sp], #4)
   10844:	mov	r2, sp
   10848:	push	{r2}		; (str r2, [sp, #-4]!)
   1084c:	push	{r0}		; (str r0, [sp, #-4]!)
   10850:	ldr	ip, [pc, #16]	; 10868 <sprintf@plt+0x3c>
   10854:	push	{ip}		; (str ip, [sp, #-4]!)
   10858:	ldr	r0, [pc, #12]	; 1086c <sprintf@plt+0x40>
   1085c:	ldr	r3, [pc, #12]	; 10870 <sprintf@plt+0x44>
   10860:	bl	10754 <__libc_start_main@plt>
   10864:	bl	1073c <abort@plt>
   10868:	andeq	r1, r1, r8, lsl #5
   1086c:	andeq	r0, r1, r8, lsr #18
   10870:	andeq	r1, r1, r8, lsr #4
   10874:	ldr	r3, [pc, #20]	; 10890 <sprintf@plt+0x64>
   10878:	ldr	r2, [pc, #20]	; 10894 <sprintf@plt+0x68>
   1087c:	add	r3, pc, r3
   10880:	ldr	r2, [r3, r2]
   10884:	cmp	r2, #0
   10888:	bxeq	lr
   1088c:	b	10760 <__gmon_start__@plt>
   10890:	andeq	r1, r1, ip, ror r7
   10894:	andeq	r0, r0, r4, rrx
   10898:	ldr	r0, [pc, #24]	; 108b8 <sprintf@plt+0x8c>
   1089c:	ldr	r3, [pc, #24]	; 108bc <sprintf@plt+0x90>
   108a0:	cmp	r3, r0
   108a4:	bxeq	lr
   108a8:	ldr	r3, [pc, #16]	; 108c0 <sprintf@plt+0x94>
   108ac:	cmp	r3, #0
   108b0:	bxeq	lr
   108b4:	bx	r3
   108b8:	andeq	r2, r2, r0, ror r0
   108bc:	andeq	r2, r2, r0, ror r0
   108c0:	andeq	r0, r0, r0
   108c4:	ldr	r0, [pc, #36]	; 108f0 <sprintf@plt+0xc4>
   108c8:	ldr	r1, [pc, #36]	; 108f4 <sprintf@plt+0xc8>
   108cc:	sub	r1, r1, r0
   108d0:	asr	r1, r1, #2
   108d4:	add	r1, r1, r1, lsr #31
   108d8:	asrs	r1, r1, #1
   108dc:	bxeq	lr
   108e0:	ldr	r3, [pc, #16]	; 108f8 <sprintf@plt+0xcc>
   108e4:	cmp	r3, #0
   108e8:	bxeq	lr
   108ec:	bx	r3
   108f0:	andeq	r2, r2, r0, ror r0
   108f4:	andeq	r2, r2, r0, ror r0
   108f8:	andeq	r0, r0, r0
   108fc:	push	{r4, lr}
   10900:	ldr	r4, [pc, #24]	; 10920 <sprintf@plt+0xf4>
   10904:	ldrb	r3, [r4]
   10908:	cmp	r3, #0
   1090c:	popne	{r4, pc}
   10910:	bl	10898 <sprintf@plt+0x6c>
   10914:	mov	r3, #1
   10918:	strb	r3, [r4]
   1091c:	pop	{r4, pc}
   10920:	andeq	r2, r2, ip, ror r0
   10924:	b	108c4 <sprintf@plt+0x98>
   10928:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1092c:	add	fp, sp, #28
   10930:	sub	sp, sp, #12
   10934:	mov	r7, r1
   10938:	mov	r4, r0
   1093c:	mov	r0, #0
   10940:	str	r0, [sp, #8]
   10944:	movw	r6, #4772	; 0x12a4
   10948:	movt	r6, #1
   1094c:	movw	r9, #8312	; 0x2078
   10950:	movt	r9, #2
   10954:	mov	r0, #0
   10958:	str	r0, [sp, #4]
   1095c:	mov	r8, #0
   10960:	mov	sl, #0
   10964:	mov	r5, #0
   10968:	b	10978 <sprintf@plt+0x14c>
   1096c:	movw	r0, #4787	; 0x12b3
   10970:	movt	r0, #1
   10974:	bl	107b4 <printf@plt>
   10978:	mov	r0, r4
   1097c:	mov	r1, r7
   10980:	mov	r2, r6
   10984:	bl	107a8 <getopt@plt>
   10988:	mov	r1, r0
   1098c:	sub	r0, r0, #63	; 0x3f
   10990:	cmp	r0, #58	; 0x3a
   10994:	bhi	10a98 <sprintf@plt+0x26c>
   10998:	add	r2, pc, #0
   1099c:	ldr	pc, [r2, r0, lsl #2]
   109a0:	andeq	r0, r1, r8, lsr #26
   109a4:	andeq	r0, r1, ip, ror #18
   109a8:	andeq	r0, r1, ip, ror #18
   109ac:	andeq	r0, r1, ip, ror #18
   109b0:	andeq	r0, r1, ip, ror #18
   109b4:	andeq	r0, r1, ip, ror #18
   109b8:	andeq	r0, r1, ip, ror #18
   109bc:	andeq	r0, r1, ip, ror #18
   109c0:	andeq	r0, r1, ip, ror #18
   109c4:	andeq	r0, r1, ip, ror #18
   109c8:	andeq	r0, r1, ip, ror #18
   109cc:	andeq	r0, r1, ip, ror #18
   109d0:	andeq	r0, r1, ip, ror #18
   109d4:	andeq	r0, r1, ip, ror #18
   109d8:	andeq	r0, r1, ip, ror #18
   109dc:	andeq	r0, r1, ip, ror #18
   109e0:	andeq	r0, r1, ip, ror #18
   109e4:	andeq	r0, r1, ip, ror #18
   109e8:	andeq	r0, r1, ip, ror #18
   109ec:	andeq	r0, r1, ip, ror #18
   109f0:	andeq	r0, r1, ip, ror #18
   109f4:	andeq	r0, r1, ip, ror #18
   109f8:	andeq	r0, r1, ip, ror #18
   109fc:	andeq	r0, r1, ip, ror #18
   10a00:	andeq	r0, r1, ip, ror #18
   10a04:	andeq	r0, r1, ip, ror #18
   10a08:	andeq	r0, r1, ip, ror #18
   10a0c:	andeq	r0, r1, ip, ror #18
   10a10:	andeq	r0, r1, ip, ror #18
   10a14:	andeq	r0, r1, ip, ror #18
   10a18:	andeq	r0, r1, ip, ror #18
   10a1c:	andeq	r0, r1, ip, ror #18
   10a20:	andeq	r0, r1, ip, ror #18
   10a24:	andeq	r0, r1, ip, ror #18
   10a28:	andeq	r0, r1, ip, ror #18
   10a2c:	andeq	r0, r1, ip, lsl #21
   10a30:	andeq	r0, r1, ip, ror #18
   10a34:	andeq	r0, r1, ip, ror #18
   10a38:	andeq	r0, r1, ip, ror #18
   10a3c:	andeq	r0, r1, ip, ror #18
   10a40:	andeq	r0, r1, ip, ror #18
   10a44:	andeq	r0, r1, ip, lsr #26
   10a48:	andeq	r0, r1, ip, ror #18
   10a4c:	andeq	r0, r1, ip, ror #18
   10a50:	andeq	r0, r1, ip, ror #18
   10a54:			; <UNDEFINED> instruction: 0x00010abc
   10a58:	andeq	r0, r1, r4, lsr #21
   10a5c:	andeq	r0, r1, ip, ror #18
   10a60:	andeq	r0, r1, ip, ror #18
   10a64:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10a68:	andeq	r0, r1, ip, ror #18
   10a6c:	andeq	r0, r1, r0, ror #21
   10a70:	andeq	r0, r1, ip, lsr #21
   10a74:	andeq	r0, r1, ip, ror #18
   10a78:	andeq	r0, r1, ip, ror #18
   10a7c:	andeq	r0, r1, ip, ror #18
   10a80:	andeq	r0, r1, ip, ror #18
   10a84:	strdeq	r0, [r1], -r4
   10a88:	strdeq	r0, [r1], -ip
   10a8c:	orr	r8, r8, #16
   10a90:	mov	r5, #4
   10a94:	b	10978 <sprintf@plt+0x14c>
   10a98:	cmn	r1, #1
   10a9c:	beq	10b04 <sprintf@plt+0x2d8>
   10aa0:	b	1096c <sprintf@plt+0x140>
   10aa4:	orr	r8, r8, #1
   10aa8:	b	10978 <sprintf@plt+0x14c>
   10aac:	orr	r8, r8, #2
   10ab0:	ldr	r0, [r9]
   10ab4:	str	r0, [sp, #4]
   10ab8:	b	10978 <sprintf@plt+0x14c>
   10abc:	ldr	r0, [r9]
   10ac0:	orr	r8, r8, #8
   10ac4:	bl	107c0 <atoi@plt>
   10ac8:	mov	sl, r0
   10acc:	b	10978 <sprintf@plt+0x14c>
   10ad0:	orr	r8, r8, #4
   10ad4:	ldr	r0, [r9]
   10ad8:	str	r0, [sp, #8]
   10adc:	b	10978 <sprintf@plt+0x14c>
   10ae0:	ldr	r0, [r9]
   10ae4:	orr	r8, r8, #32
   10ae8:	bl	107c0 <atoi@plt>
   10aec:	mov	r5, r0
   10af0:	b	10978 <sprintf@plt+0x14c>
   10af4:	orr	r8, r8, #64	; 0x40
   10af8:	b	10978 <sprintf@plt+0x14c>
   10afc:	orr	r8, r8, #128	; 0x80
   10b00:	b	10978 <sprintf@plt+0x14c>
   10b04:	tst	r8, #1
   10b08:	bne	10b4c <sprintf@plt+0x320>
   10b0c:	tst	r8, #16
   10b10:	bne	10b90 <sprintf@plt+0x364>
   10b14:	and	r0, r8, #2
   10b18:	cmp	sl, #0
   10b1c:	movweq	sl, #16
   10b20:	tst	r8, #64	; 0x40
   10b24:	bne	10c44 <sprintf@plt+0x418>
   10b28:	cmp	r0, #0
   10b2c:	bne	10c88 <sprintf@plt+0x45c>
   10b30:	mov	r0, sl
   10b34:	bl	110d0 <sprintf@plt+0x8a4>
   10b38:	movw	r4, #8422	; 0x20e6
   10b3c:	movt	r4, #2
   10b40:	tst	r8, #4
   10b44:	bne	10b74 <sprintf@plt+0x348>
   10b48:	b	10bd8 <sprintf@plt+0x3ac>
   10b4c:	tst	r8, #2
   10b50:	bne	10bc0 <sprintf@plt+0x394>
   10b54:	cmp	sl, #0
   10b58:	movweq	sl, #8
   10b5c:	mov	r0, sl
   10b60:	bl	10e84 <sprintf@plt+0x658>
   10b64:	movw	r4, #8338	; 0x2092
   10b68:	movt	r4, #2
   10b6c:	tst	r8, #4
   10b70:	beq	10bd8 <sprintf@plt+0x3ac>
   10b74:	ldr	r0, [sp, #8]
   10b78:	cmp	r0, #0
   10b7c:	beq	10ce0 <sprintf@plt+0x4b4>
   10b80:	mov	r1, r4
   10b84:	bl	107f0 <rb_crypt@plt>
   10b88:	mov	r5, r0
   10b8c:	b	10c2c <sprintf@plt+0x400>
   10b90:	tst	r8, #2
   10b94:	bne	10c68 <sprintf@plt+0x43c>
   10b98:	cmp	sl, #0
   10b9c:	movweq	sl, #22
   10ba0:	mov	r0, r5
   10ba4:	mov	r1, sl
   10ba8:	bl	10f58 <sprintf@plt+0x72c>
   10bac:	movw	r4, #8474	; 0x211a
   10bb0:	movt	r4, #2
   10bb4:	tst	r8, #4
   10bb8:	bne	10b74 <sprintf@plt+0x348>
   10bbc:	b	10bd8 <sprintf@plt+0x3ac>
   10bc0:	ldr	r0, [sp, #4]
   10bc4:	bl	10e34 <sprintf@plt+0x608>
   10bc8:	movw	r4, #8317	; 0x207d
   10bcc:	movt	r4, #2
   10bd0:	tst	r8, #4
   10bd4:	bne	10b74 <sprintf@plt+0x348>
   10bd8:	movw	r0, #4839	; 0x12e7
   10bdc:	movt	r0, #1
   10be0:	bl	1076c <getpass@plt>
   10be4:	mov	r1, r4
   10be8:	bl	107f0 <rb_crypt@plt>
   10bec:	cmp	r0, #0
   10bf0:	beq	10cc0 <sprintf@plt+0x494>
   10bf4:	bl	107e4 <strdup@plt>
   10bf8:	mov	r5, r0
   10bfc:	movw	r0, #4870	; 0x1306
   10c00:	movt	r0, #1
   10c04:	bl	1076c <getpass@plt>
   10c08:	mov	r1, r4
   10c0c:	bl	107f0 <rb_crypt@plt>
   10c10:	cmp	r0, #0
   10c14:	beq	10cc0 <sprintf@plt+0x494>
   10c18:	mov	r1, r0
   10c1c:	mov	r0, r5
   10c20:	bl	10814 <strcmp@plt>
   10c24:	cmp	r0, #0
   10c28:	bne	10d00 <sprintf@plt+0x4d4>
   10c2c:	mov	r0, r5
   10c30:	bl	107fc <puts@plt>
   10c34:	mov	r4, #0
   10c38:	mov	r0, r4
   10c3c:	sub	sp, fp, #28
   10c40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c44:	cmp	r0, #0
   10c48:	bne	10ca4 <sprintf@plt+0x478>
   10c4c:	mov	r0, sl
   10c50:	bl	11028 <sprintf@plt+0x7fc>
   10c54:	movw	r4, #8401	; 0x20d1
   10c58:	movt	r4, #2
   10c5c:	tst	r8, #4
   10c60:	bne	10b74 <sprintf@plt+0x348>
   10c64:	b	10bd8 <sprintf@plt+0x3ac>
   10c68:	mov	r0, r5
   10c6c:	ldr	r1, [sp, #4]
   10c70:	bl	10edc <sprintf@plt+0x6b0>
   10c74:	movw	r4, #8443	; 0x20fb
   10c78:	movt	r4, #2
   10c7c:	tst	r8, #4
   10c80:	bne	10b74 <sprintf@plt+0x348>
   10c84:	b	10bd8 <sprintf@plt+0x3ac>
   10c88:	ldr	r0, [sp, #4]
   10c8c:	bl	11080 <sprintf@plt+0x854>
   10c90:	movw	r4, #8380	; 0x20bc
   10c94:	movt	r4, #2
   10c98:	tst	r8, #4
   10c9c:	bne	10b74 <sprintf@plt+0x348>
   10ca0:	b	10bd8 <sprintf@plt+0x3ac>
   10ca4:	ldr	r0, [sp, #4]
   10ca8:	bl	10fd8 <sprintf@plt+0x7ac>
   10cac:	movw	r4, #8359	; 0x20a7
   10cb0:	movt	r4, #2
   10cb4:	tst	r8, #4
   10cb8:	bne	10b74 <sprintf@plt+0x348>
   10cbc:	b	10bd8 <sprintf@plt+0x3ac>
   10cc0:	movw	r0, #8304	; 0x2070
   10cc4:	movt	r0, #2
   10cc8:	ldr	r3, [r0]
   10ccc:	movw	r0, #4851	; 0x12f3
   10cd0:	movt	r0, #1
   10cd4:	mov	r4, #1
   10cd8:	mov	r1, #18
   10cdc:	b	10d1c <sprintf@plt+0x4f0>
   10ce0:	movw	r0, #8304	; 0x2070
   10ce4:	movt	r0, #2
   10ce8:	ldr	r3, [r0]
   10cec:	movw	r0, #4808	; 0x12c8
   10cf0:	movt	r0, #1
   10cf4:	mov	r4, #1
   10cf8:	mov	r1, #30
   10cfc:	b	10d1c <sprintf@plt+0x4f0>
   10d00:	movw	r0, #8304	; 0x2070
   10d04:	movt	r0, #2
   10d08:	ldr	r3, [r0]
   10d0c:	movw	r0, #4878	; 0x130e
   10d10:	movt	r0, #1
   10d14:	mov	r4, #1
   10d18:	mov	r1, #23
   10d1c:	mov	r2, #1
   10d20:	bl	107cc <fwrite@plt>
   10d24:	b	10c38 <sprintf@plt+0x40c>
   10d28:	bl	10dd0 <sprintf@plt+0x5a4>
   10d2c:	bl	10d30 <sprintf@plt+0x504>
   10d30:	push	{fp, lr}
   10d34:	mov	fp, sp
   10d38:	movw	r0, #5024	; 0x13a0
   10d3c:	movt	r0, #1
   10d40:	bl	107fc <puts@plt>
   10d44:	movw	r0, #5104	; 0x13f0
   10d48:	movt	r0, #1
   10d4c:	bl	107fc <puts@plt>
   10d50:	movw	r0, #5136	; 0x1410
   10d54:	movt	r0, #1
   10d58:	bl	107fc <puts@plt>
   10d5c:	movw	r0, #5168	; 0x1430
   10d60:	movt	r0, #1
   10d64:	bl	107fc <puts@plt>
   10d68:	movw	r0, #5200	; 0x1450
   10d6c:	movt	r0, #1
   10d70:	bl	107fc <puts@plt>
   10d74:	movw	r0, #5232	; 0x1470
   10d78:	movt	r0, #1
   10d7c:	bl	107fc <puts@plt>
   10d80:	movw	r0, #5296	; 0x14b0
   10d84:	movt	r0, #1
   10d88:	bl	107fc <puts@plt>
   10d8c:	movw	r0, #5360	; 0x14f0
   10d90:	movt	r0, #1
   10d94:	bl	107fc <puts@plt>
   10d98:	movw	r0, #5408	; 0x1520
   10d9c:	movt	r0, #1
   10da0:	bl	107fc <puts@plt>
   10da4:	movw	r0, #5472	; 0x1560
   10da8:	movt	r0, #1
   10dac:	bl	107fc <puts@plt>
   10db0:	movw	r0, #5504	; 0x1580
   10db4:	movt	r0, #1
   10db8:	bl	107fc <puts@plt>
   10dbc:	movw	r0, #5552	; 0x15b0
   10dc0:	movt	r0, #1
   10dc4:	bl	107fc <puts@plt>
   10dc8:	mov	r0, #0
   10dcc:	bl	10820 <exit@plt>
   10dd0:	push	{fp, lr}
   10dd4:	mov	fp, sp
   10dd8:	movw	r0, #5600	; 0x15e0
   10ddc:	movt	r0, #1
   10de0:	bl	107fc <puts@plt>
   10de4:	movw	r0, #5648	; 0x1610
   10de8:	movt	r0, #1
   10dec:	bl	107fc <puts@plt>
   10df0:	movw	r0, #5728	; 0x1660
   10df4:	movt	r0, #1
   10df8:	bl	107fc <puts@plt>
   10dfc:	movw	r0, #5792	; 0x16a0
   10e00:	movt	r0, #1
   10e04:	bl	107fc <puts@plt>
   10e08:	movw	r0, #5856	; 0x16e0
   10e0c:	movt	r0, #1
   10e10:	bl	107fc <puts@plt>
   10e14:	movw	r0, #5920	; 0x1720
   10e18:	movt	r0, #1
   10e1c:	bl	107fc <puts@plt>
   10e20:	movw	r0, #5968	; 0x1750
   10e24:	movt	r0, #1
   10e28:	bl	107fc <puts@plt>
   10e2c:	mov	r0, #0
   10e30:	bl	10820 <exit@plt>
   10e34:	push	{r4, sl, fp, lr}
   10e38:	add	fp, sp, #8
   10e3c:	cmp	r0, #0
   10e40:	beq	10e70 <sprintf@plt+0x644>
   10e44:	mov	r4, r0
   10e48:	bl	1079c <strlen@plt>
   10e4c:	cmp	r0, #16
   10e50:	bhi	10e70 <sprintf@plt+0x644>
   10e54:	movw	r0, #8317	; 0x207d
   10e58:	movt	r0, #2
   10e5c:	movw	r1, #4902	; 0x1326
   10e60:	movt	r1, #1
   10e64:	mov	r2, r4
   10e68:	pop	{r4, sl, fp, lr}
   10e6c:	b	1082c <sprintf@plt>
   10e70:	movw	r0, #6000	; 0x1770
   10e74:	movt	r0, #1
   10e78:	bl	107fc <puts@plt>
   10e7c:	mov	r0, #1
   10e80:	bl	10820 <exit@plt>
   10e84:	push	{r4, r5, r6, sl, fp, lr}
   10e88:	add	fp, sp, #16
   10e8c:	cmp	r0, #17
   10e90:	bge	10ec8 <sprintf@plt+0x69c>
   10e94:	mov	r4, r0
   10e98:	movw	r5, #8338	; 0x2092
   10e9c:	movt	r5, #2
   10ea0:	mov	r6, #36	; 0x24
   10ea4:	strb	r6, [r5, #2]
   10ea8:	movw	r0, #12580	; 0x3124
   10eac:	strh	r0, [r5]
   10eb0:	add	r0, r5, #3
   10eb4:	mov	r1, r4
   10eb8:	bl	11128 <sprintf@plt+0x8fc>
   10ebc:	add	r0, r5, r4
   10ec0:	strh	r6, [r0, #3]
   10ec4:	pop	{r4, r5, r6, sl, fp, pc}
   10ec8:	movw	r0, #6080	; 0x17c0
   10ecc:	movt	r0, #1
   10ed0:	bl	107fc <puts@plt>
   10ed4:	mov	r0, #0
   10ed8:	bl	10820 <exit@plt>
   10edc:	push	{r4, r5, r6, sl, fp, lr}
   10ee0:	add	fp, sp, #16
   10ee4:	sub	sp, sp, #8
   10ee8:	cmp	r1, #0
   10eec:	beq	10f44 <sprintf@plt+0x718>
   10ef0:	mov	r4, r1
   10ef4:	mov	r5, r0
   10ef8:	mov	r0, r1
   10efc:	bl	1079c <strlen@plt>
   10f00:	cmp	r0, #22
   10f04:	bhi	10f44 <sprintf@plt+0x718>
   10f08:	add	r6, sp, #5
   10f0c:	movw	r1, #5000	; 0x1388
   10f10:	movt	r1, #1
   10f14:	mov	r0, r6
   10f18:	mov	r2, r5
   10f1c:	bl	1082c <sprintf@plt>
   10f20:	movw	r0, #8443	; 0x20fb
   10f24:	movt	r0, #2
   10f28:	movw	r1, #5005	; 0x138d
   10f2c:	movt	r1, #1
   10f30:	mov	r2, r6
   10f34:	mov	r3, r4
   10f38:	bl	1082c <sprintf@plt>
   10f3c:	sub	sp, fp, #16
   10f40:	pop	{r4, r5, r6, sl, fp, pc}
   10f44:	movw	r0, #6112	; 0x17e0
   10f48:	movt	r0, #1
   10f4c:	bl	107fc <puts@plt>
   10f50:	mov	r0, #1
   10f54:	bl	10820 <exit@plt>
   10f58:	push	{r4, r5, r6, sl, fp, lr}
   10f5c:	add	fp, sp, #16
   10f60:	sub	sp, sp, #8
   10f64:	cmp	r1, #23
   10f68:	bge	10fc4 <sprintf@plt+0x798>
   10f6c:	mov	r4, r1
   10f70:	mov	r2, r0
   10f74:	add	r5, sp, #5
   10f78:	movw	r1, #5000	; 0x1388
   10f7c:	movt	r1, #1
   10f80:	mov	r0, r5
   10f84:	bl	1082c <sprintf@plt>
   10f88:	movw	r6, #8474	; 0x211a
   10f8c:	movt	r6, #2
   10f90:	movw	r1, #5016	; 0x1398
   10f94:	movt	r1, #1
   10f98:	mov	r0, r6
   10f9c:	mov	r2, r5
   10fa0:	bl	1082c <sprintf@plt>
   10fa4:	add	r0, r6, #7
   10fa8:	mov	r1, r4
   10fac:	bl	11128 <sprintf@plt+0x8fc>
   10fb0:	add	r0, r6, r4
   10fb4:	mov	r1, #36	; 0x24
   10fb8:	strh	r1, [r0, #7]
   10fbc:	sub	sp, fp, #16
   10fc0:	pop	{r4, r5, r6, sl, fp, pc}
   10fc4:	movw	r0, #6192	; 0x1830
   10fc8:	movt	r0, #1
   10fcc:	bl	107fc <puts@plt>
   10fd0:	mov	r0, #0
   10fd4:	bl	10820 <exit@plt>
   10fd8:	push	{r4, sl, fp, lr}
   10fdc:	add	fp, sp, #8
   10fe0:	cmp	r0, #0
   10fe4:	beq	11014 <sprintf@plt+0x7e8>
   10fe8:	mov	r4, r0
   10fec:	bl	1079c <strlen@plt>
   10ff0:	cmp	r0, #16
   10ff4:	bhi	11014 <sprintf@plt+0x7e8>
   10ff8:	movw	r0, #8359	; 0x20a7
   10ffc:	movt	r0, #2
   11000:	movw	r1, #4986	; 0x137a
   11004:	movt	r1, #1
   11008:	mov	r2, r4
   1100c:	pop	{r4, sl, fp, lr}
   11010:	b	1082c <sprintf@plt>
   11014:	movw	r0, #6000	; 0x1770
   11018:	movt	r0, #1
   1101c:	bl	107fc <puts@plt>
   11020:	mov	r0, #1
   11024:	bl	10820 <exit@plt>
   11028:	push	{r4, r5, r6, sl, fp, lr}
   1102c:	add	fp, sp, #16
   11030:	cmp	r0, #17
   11034:	bge	1106c <sprintf@plt+0x840>
   11038:	mov	r4, r0
   1103c:	movw	r5, #8401	; 0x20d1
   11040:	movt	r5, #2
   11044:	mov	r6, #36	; 0x24
   11048:	strb	r6, [r5, #2]
   1104c:	movw	r0, #13604	; 0x3524
   11050:	strh	r0, [r5]
   11054:	add	r0, r5, #3
   11058:	mov	r1, r4
   1105c:	bl	11128 <sprintf@plt+0x8fc>
   11060:	add	r0, r5, r4
   11064:	strh	r6, [r0, #3]
   11068:	pop	{r4, r5, r6, sl, fp, pc}
   1106c:	movw	r0, #6224	; 0x1850
   11070:	movt	r0, #1
   11074:	bl	107fc <puts@plt>
   11078:	mov	r0, #0
   1107c:	bl	10820 <exit@plt>
   11080:	push	{r4, sl, fp, lr}
   11084:	add	fp, sp, #8
   11088:	cmp	r0, #0
   1108c:	beq	110bc <sprintf@plt+0x890>
   11090:	mov	r4, r0
   11094:	bl	1079c <strlen@plt>
   11098:	cmp	r0, #16
   1109c:	bhi	110bc <sprintf@plt+0x890>
   110a0:	movw	r0, #8380	; 0x20bc
   110a4:	movt	r0, #2
   110a8:	movw	r1, #4993	; 0x1381
   110ac:	movt	r1, #1
   110b0:	mov	r2, r4
   110b4:	pop	{r4, sl, fp, lr}
   110b8:	b	1082c <sprintf@plt>
   110bc:	movw	r0, #6000	; 0x1770
   110c0:	movt	r0, #1
   110c4:	bl	107fc <puts@plt>
   110c8:	mov	r0, #1
   110cc:	bl	10820 <exit@plt>
   110d0:	push	{r4, r5, r6, sl, fp, lr}
   110d4:	add	fp, sp, #16
   110d8:	cmp	r0, #17
   110dc:	bge	11114 <sprintf@plt+0x8e8>
   110e0:	mov	r4, r0
   110e4:	movw	r5, #8422	; 0x20e6
   110e8:	movt	r5, #2
   110ec:	mov	r6, #36	; 0x24
   110f0:	strb	r6, [r5, #2]
   110f4:	movw	r0, #13860	; 0x3624
   110f8:	strh	r0, [r5]
   110fc:	add	r0, r5, #3
   11100:	mov	r1, r4
   11104:	bl	11128 <sprintf@plt+0x8fc>
   11108:	add	r0, r5, r4
   1110c:	strh	r6, [r0, #3]
   11110:	pop	{r4, r5, r6, sl, fp, pc}
   11114:	movw	r0, #6256	; 0x1870
   11118:	movt	r0, #1
   1111c:	bl	107fc <puts@plt>
   11120:	mov	r0, #0
   11124:	bl	10820 <exit@plt>
   11128:	push	{r4, r5, r6, r7, fp, lr}
   1112c:	add	fp, sp, #16
   11130:	mov	r4, r1
   11134:	mov	r5, r0
   11138:	movw	r0, #4909	; 0x132d
   1113c:	movt	r0, #1
   11140:	mov	r1, #0
   11144:	bl	10730 <open@plt>
   11148:	cmn	r0, #1
   1114c:	ble	111bc <sprintf@plt+0x990>
   11150:	mov	r7, r0
   11154:	mov	r0, #1
   11158:	mov	r1, r4
   1115c:	bl	10778 <calloc@plt>
   11160:	mov	r6, r0
   11164:	mov	r0, r7
   11168:	mov	r1, r6
   1116c:	mov	r2, r4
   11170:	bl	10790 <read@plt>
   11174:	cmp	r0, r4
   11178:	bne	111b4 <sprintf@plt+0x988>
   1117c:	cmp	r4, #1
   11180:	blt	111a8 <sprintf@plt+0x97c>
   11184:	movw	r0, #4921	; 0x1339
   11188:	movt	r0, #1
   1118c:	mov	r1, r6
   11190:	ldrb	r2, [r1], #1
   11194:	and	r2, r2, #63	; 0x3f
   11198:	ldrb	r2, [r0, r2]
   1119c:	strb	r2, [r5], #1
   111a0:	subs	r4, r4, #1
   111a4:	bne	11190 <sprintf@plt+0x964>
   111a8:	mov	r0, r6
   111ac:	pop	{r4, r5, r6, r7, fp, lr}
   111b0:	b	10784 <free@plt>
   111b4:	mov	r0, r6
   111b8:	bl	10784 <free@plt>
   111bc:	mov	r0, r5
   111c0:	mov	r1, r4
   111c4:	pop	{r4, r5, r6, r7, fp, lr}
   111c8:	b	111cc <sprintf@plt+0x9a0>
   111cc:	push	{r4, r5, r6, r7, fp, lr}
   111d0:	add	fp, sp, #16
   111d4:	mov	r5, r1
   111d8:	mov	r4, r0
   111dc:	mov	r0, #0
   111e0:	bl	107d8 <time@plt>
   111e4:	bl	10748 <srand@plt>
   111e8:	cmp	r5, #1
   111ec:	blt	11220 <sprintf@plt+0x9f4>
   111f0:	movw	r6, #4921	; 0x1339
   111f4:	movt	r6, #1
   111f8:	mov	r7, r4
   111fc:	bl	10808 <rand@plt>
   11200:	asr	r1, r0, #31
   11204:	add	r1, r0, r1, lsr #26
   11208:	bic	r1, r1, #63	; 0x3f
   1120c:	sub	r0, r0, r1
   11210:	ldrb	r0, [r6, r0]
   11214:	strb	r0, [r7], #1
   11218:	subs	r5, r5, #1
   1121c:	bne	111fc <sprintf@plt+0x9d0>
   11220:	mov	r0, r4
   11224:	pop	{r4, r5, r6, r7, fp, pc}
   11228:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1122c:	mov	r7, r0
   11230:	ldr	r6, [pc, #72]	; 11280 <sprintf@plt+0xa54>
   11234:	ldr	r5, [pc, #72]	; 11284 <sprintf@plt+0xa58>
   11238:	add	r6, pc, r6
   1123c:	add	r5, pc, r5
   11240:	sub	r6, r6, r5
   11244:	mov	r8, r1
   11248:	mov	r9, r2
   1124c:	bl	10710 <open@plt-0x20>
   11250:	asrs	r6, r6, #2
   11254:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11258:	mov	r4, #0
   1125c:	add	r4, r4, #1
   11260:	ldr	r3, [r5], #4
   11264:	mov	r2, r9
   11268:	mov	r1, r8
   1126c:	mov	r0, r7
   11270:	blx	r3
   11274:	cmp	r6, r4
   11278:	bne	1125c <sprintf@plt+0xa30>
   1127c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11280:			; <UNDEFINED> instruction: 0x00010cb4
   11284:	andeq	r0, r1, ip, lsr #25
   11288:	bx	lr

Disassembly of section .fini:

0001128c <.fini>:
   1128c:	push	{r3, lr}
   11290:	pop	{r3, pc}
