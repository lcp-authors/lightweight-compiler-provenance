
../repos/eddieantonio-ocreval-3ab279a/wordaccdist/wordaccdist:     file format elf32-littlearm


Disassembly of section .init:

00010700 <.init>:
   10700:	push	{r3, lr}
   10704:	bl	10908 <abort@plt+0xe0>
   10708:	pop	{r3, pc}

Disassembly of section .plt:

0001070c <calloc@plt-0x14>:
   1070c:	push	{lr}		; (str lr, [sp, #-4]!)
   10710:	ldr	lr, [pc, #4]	; 1071c <calloc@plt-0x4>
   10714:	add	lr, pc, lr
   10718:	ldr	pc, [lr, #8]!
   1071c:	andeq	r2, r1, r4, ror #17

00010720 <calloc@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #73728	; 0x12000
   10728:	ldr	pc, [ip, #2276]!	; 0x8e4

0001072c <strcmp@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #73728	; 0x12000
   10734:	ldr	pc, [ip, #2268]!	; 0x8dc

00010738 <strtol@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #73728	; 0x12000
   10740:	ldr	pc, [ip, #2260]!	; 0x8d4

00010744 <fopen@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #73728	; 0x12000
   1074c:	ldr	pc, [ip, #2252]!	; 0x8cc

00010750 <free@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #73728	; 0x12000
   10758:	ldr	pc, [ip, #2244]!	; 0x8c4

0001075c <fgets@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #73728	; 0x12000
   10764:	ldr	pc, [ip, #2236]!	; 0x8bc

00010768 <strdup@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #73728	; 0x12000
   10770:	ldr	pc, [ip, #2228]!	; 0x8b4

00010774 <unlink@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #73728	; 0x12000
   1077c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010780 <__xstat@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #73728	; 0x12000
   10788:	ldr	pc, [ip, #2212]!	; 0x8a4

0001078c <fwrite@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #73728	; 0x12000
   10794:	ldr	pc, [ip, #2204]!	; 0x89c

00010798 <__libc_start_main@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #73728	; 0x12000
   107a0:	ldr	pc, [ip, #2196]!	; 0x894

000107a4 <__sysv_signal@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #73728	; 0x12000
   107ac:	ldr	pc, [ip, #2188]!	; 0x88c

000107b0 <__gmon_start__@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #73728	; 0x12000
   107b8:	ldr	pc, [ip, #2180]!	; 0x884

000107bc <getpid@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #73728	; 0x12000
   107c4:	ldr	pc, [ip, #2172]!	; 0x87c

000107c8 <exit@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2164]!	; 0x874

000107d4 <strlen@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2156]!	; 0x86c

000107e0 <fprintf@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2148]!	; 0x864

000107ec <__isoc99_sscanf@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2140]!	; 0x85c

000107f8 <fclose@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2132]!	; 0x854

00010804 <fputc@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2124]!	; 0x84c

00010810 <sprintf@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2116]!	; 0x844

0001081c <strncmp@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2108]!	; 0x83c

00010828 <abort@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2100]!	; 0x834

Disassembly of section .text:

00010838 <error@@Base-0x134c>:
   10838:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1083c:	sub	sp, sp, #8
   10840:	add	ip, sp, #8
   10844:	mov	r3, #0
   10848:	str	r0, [ip, #-4]!
   1084c:	ldr	r2, [pc, #108]	; 108c0 <abort@plt+0x98>
   10850:	mov	r0, ip
   10854:	mov	r6, r1
   10858:	bl	11cbc <error@@Base+0x138>
   1085c:	ldr	r3, [sp, #4]
   10860:	cmp	r3, #0
   10864:	ble	108b0 <abort@plt+0x88>
   10868:	ldr	r4, [pc, #84]	; 108c4 <abort@plt+0x9c>
   1086c:	ldr	r9, [pc, #84]	; 108c8 <abort@plt+0xa0>
   10870:	sub	r6, r6, #4
   10874:	mov	r8, r4
   10878:	mov	r5, #0
   1087c:	ldr	r1, [r6, #4]!
   10880:	mov	r0, r8
   10884:	ldm	r4, {r7, sl}
   10888:	bl	112b8 <abort@plt+0xa90>
   1088c:	ldm	r4, {r1, r2}
   10890:	mov	r0, r9
   10894:	add	r5, r5, #1
   10898:	sub	r2, r2, sl
   1089c:	sub	r1, r1, r7
   108a0:	bl	10a30 <abort@plt+0x208>
   108a4:	ldr	r3, [sp, #4]
   108a8:	cmp	r3, r5
   108ac:	bgt	1087c <abort@plt+0x54>
   108b0:	mov	r1, #0
   108b4:	ldr	r0, [pc, #12]	; 108c8 <abort@plt+0xa0>
   108b8:	bl	10aa8 <abort@plt+0x280>
   108bc:	bl	11b2c <abort@plt+0x1304>
   108c0:	andeq	r2, r1, r4, asr #7
   108c4:	andeq	r3, r2, r4, lsl #2
   108c8:	ldrdeq	r7, [r2], -r4
   108cc:	mov	fp, #0
   108d0:	mov	lr, #0
   108d4:	pop	{r1}		; (ldr r1, [sp], #4)
   108d8:	mov	r2, sp
   108dc:	push	{r2}		; (str r2, [sp, #-4]!)
   108e0:	push	{r0}		; (str r0, [sp, #-4]!)
   108e4:	ldr	ip, [pc, #16]	; 108fc <abort@plt+0xd4>
   108e8:	push	{ip}		; (str ip, [sp, #-4]!)
   108ec:	ldr	r0, [pc, #12]	; 10900 <abort@plt+0xd8>
   108f0:	ldr	r3, [pc, #12]	; 10904 <abort@plt+0xdc>
   108f4:	bl	10798 <__libc_start_main@plt>
   108f8:	bl	10828 <abort@plt>
   108fc:			; <UNDEFINED> instruction: 0x000123b4
   10900:	andeq	r0, r1, r8, lsr r8
   10904:	andeq	r2, r1, r4, asr r3
   10908:	ldr	r3, [pc, #20]	; 10924 <abort@plt+0xfc>
   1090c:	ldr	r2, [pc, #20]	; 10928 <abort@plt+0x100>
   10910:	add	r3, pc, r3
   10914:	ldr	r2, [r3, r2]
   10918:	cmp	r2, #0
   1091c:	bxeq	lr
   10920:	b	107b0 <__gmon_start__@plt>
   10924:	andeq	r2, r1, r8, ror #13
   10928:	andeq	r0, r0, r8, rrx
   1092c:	ldr	r3, [pc, #28]	; 10950 <abort@plt+0x128>
   10930:	ldr	r0, [pc, #28]	; 10954 <abort@plt+0x12c>
   10934:	sub	r3, r3, r0
   10938:	cmp	r3, #6
   1093c:	bxls	lr
   10940:	ldr	r3, [pc, #16]	; 10958 <abort@plt+0x130>
   10944:	cmp	r3, #0
   10948:	bxeq	lr
   1094c:	bx	r3
   10950:	andeq	r3, r2, pc, ror r0
   10954:	andeq	r3, r2, ip, ror r0
   10958:	andeq	r0, r0, r0
   1095c:	ldr	r1, [pc, #36]	; 10988 <abort@plt+0x160>
   10960:	ldr	r0, [pc, #36]	; 1098c <abort@plt+0x164>
   10964:	sub	r1, r1, r0
   10968:	asr	r1, r1, #2
   1096c:	add	r1, r1, r1, lsr #31
   10970:	asrs	r1, r1, #1
   10974:	bxeq	lr
   10978:	ldr	r3, [pc, #16]	; 10990 <abort@plt+0x168>
   1097c:	cmp	r3, #0
   10980:	bxeq	lr
   10984:	bx	r3
   10988:	andeq	r3, r2, ip, ror r0
   1098c:	andeq	r3, r2, ip, ror r0
   10990:	andeq	r0, r0, r0
   10994:	push	{r4, lr}
   10998:	ldr	r4, [pc, #24]	; 109b8 <abort@plt+0x190>
   1099c:	ldrb	r3, [r4]
   109a0:	cmp	r3, #0
   109a4:	popne	{r4, pc}
   109a8:	bl	1092c <abort@plt+0x104>
   109ac:	mov	r3, #1
   109b0:	strb	r3, [r4]
   109b4:	pop	{r4, pc}
   109b8:	muleq	r2, r0, r0
   109bc:	ldr	r0, [pc, #40]	; 109ec <abort@plt+0x1c4>
   109c0:	ldr	r3, [r0]
   109c4:	cmp	r3, #0
   109c8:	bne	109d0 <abort@plt+0x1a8>
   109cc:	b	1095c <abort@plt+0x134>
   109d0:	ldr	r3, [pc, #24]	; 109f0 <abort@plt+0x1c8>
   109d4:	cmp	r3, #0
   109d8:	beq	109cc <abort@plt+0x1a4>
   109dc:	push	{r4, lr}
   109e0:	blx	r3
   109e4:	pop	{r4, lr}
   109e8:	b	1095c <abort@plt+0x134>
   109ec:	andeq	r2, r2, r4, lsl #30
   109f0:	andeq	r0, r0, r0
   109f4:	push	{r4, r5, r6, lr}
   109f8:	mov	r1, r0
   109fc:	ldr	r4, [pc, #32]	; 10a24 <abort@plt+0x1fc>
   10a00:	mov	r0, r4
   10a04:	ldm	r4, {r5, r6}
   10a08:	bl	112b8 <abort@plt+0xa90>
   10a0c:	ldm	r4, {r1, r2}
   10a10:	ldr	r0, [pc, #16]	; 10a28 <abort@plt+0x200>
   10a14:	sub	r2, r2, r6
   10a18:	sub	r1, r1, r5
   10a1c:	pop	{r4, r5, r6, lr}
   10a20:	b	10a30 <abort@plt+0x208>
   10a24:	andeq	r3, r2, r4, lsl #2
   10a28:	ldrdeq	r7, [r2], -r4
   10a2c:	andeq	r0, r0, r0
   10a30:	cmp	r1, #0
   10a34:	bxeq	lr
   10a38:	sub	r3, r1, r2
   10a3c:	vldr	d6, [pc, #92]	; 10aa0 <abort@plt+0x278>
   10a40:	vmov	s14, r3
   10a44:	vcvt.f64.s32	d7, s14
   10a48:	vmul.f64	d7, d7, d6
   10a4c:	vmov	s13, r1
   10a50:	vcvt.f64.s32	d5, s13
   10a54:	vdiv.f64	d6, d7, d5
   10a58:	vcmpe.f64	d6, #0.0
   10a5c:	vmrs	APSR_nzcv, fpscr
   10a60:	movge	r3, #0
   10a64:	blt	10a90 <abort@plt+0x268>
   10a68:	ldr	r2, [r0, r3, lsl #2]
   10a6c:	add	ip, r3, #1
   10a70:	add	r2, r2, r1
   10a74:	str	r2, [r0, r3, lsl #2]
   10a78:	sxth	r3, ip
   10a7c:	vmov	s15, r3
   10a80:	vcvt.f64.s32	d7, s15
   10a84:	vcmpe.f64	d6, d7
   10a88:	vmrs	APSR_nzcv, fpscr
   10a8c:	bge	10a68 <abort@plt+0x240>
   10a90:	ldr	r3, [r0, #404]	; 0x194
   10a94:	add	r1, r3, r1
   10a98:	str	r1, [r0, #404]	; 0x194
   10a9c:	bx	lr
   10aa0:	andeq	r0, r0, r0
   10aa4:	subsmi	r0, r9, r0
   10aa8:	ldr	r3, [r0, #404]	; 0x194
   10aac:	cmp	r3, #0
   10ab0:	bxeq	lr
   10ab4:	push	{r4, r5, r6, r7, r8, lr}
   10ab8:	vpush	{d8}
   10abc:	mov	r6, r0
   10ac0:	mov	r0, r1
   10ac4:	ldr	r1, [pc, #116]	; 10b40 <abort@plt+0x318>
   10ac8:	sub	sp, sp, #8
   10acc:	bl	11c54 <error@@Base+0xd0>
   10ad0:	vldr	d8, [pc, #96]	; 10b38 <abort@plt+0x310>
   10ad4:	ldr	r8, [pc, #104]	; 10b44 <abort@plt+0x31c>
   10ad8:	sub	r5, r6, #4
   10adc:	mov	r4, #0
   10ae0:	mov	r7, r0
   10ae4:	ldr	r3, [r5, #4]!
   10ae8:	vldr	s13, [r6, #404]	; 0x194
   10aec:	mov	r2, r4
   10af0:	vmov	s14, r3
   10af4:	add	r4, r4, #1
   10af8:	vcvt.f64.s32	d6, s13
   10afc:	mov	r1, r8
   10b00:	vcvt.f64.s32	d7, s14
   10b04:	mov	r0, r7
   10b08:	vmul.f64	d7, d7, d8
   10b0c:	vdiv.f64	d5, d7, d6
   10b10:	vstr	d5, [sp]
   10b14:	bl	107e0 <fprintf@plt>
   10b18:	cmp	r4, #101	; 0x65
   10b1c:	bne	10ae4 <abort@plt+0x2bc>
   10b20:	mov	r0, r7
   10b24:	add	sp, sp, #8
   10b28:	vpop	{d8}
   10b2c:	pop	{r4, r5, r6, r7, r8, lr}
   10b30:	b	11a28 <abort@plt+0x1200>
   10b34:	nop			; (mov r0, r0)
   10b38:	andeq	r0, r0, r0
   10b3c:	subsmi	r0, r9, r0
   10b40:	strdeq	r2, [r1], -r0
   10b44:	strdeq	r2, [r1], -r4
   10b48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b4c:	mov	r2, r0
   10b50:	sub	sp, sp, #12
   10b54:	mov	r7, r0
   10b58:	mov	r4, r1
   10b5c:	ldr	r0, [pc, #248]	; 10c5c <abort@plt+0x434>
   10b60:	mov	r1, #99	; 0x63
   10b64:	bl	1075c <fgets@plt>
   10b68:	cmp	r0, #0
   10b6c:	beq	10c4c <abort@plt+0x424>
   10b70:	mov	r2, r7
   10b74:	mov	r1, #99	; 0x63
   10b78:	ldr	r0, [pc, #220]	; 10c5c <abort@plt+0x434>
   10b7c:	bl	1075c <fgets@plt>
   10b80:	cmp	r0, #0
   10b84:	beq	10c4c <abort@plt+0x424>
   10b88:	ldr	r5, [pc, #204]	; 10c5c <abort@plt+0x434>
   10b8c:	ldr	r8, [pc, #204]	; 10c60 <abort@plt+0x438>
   10b90:	ldr	sl, [pc, #204]	; 10c64 <abort@plt+0x43c>
   10b94:	mov	fp, #0
   10b98:	add	r6, r5, #29
   10b9c:	mov	r9, #99	; 0x63
   10ba0:	mov	r2, r7
   10ba4:	mov	r1, r9
   10ba8:	mov	r0, r5
   10bac:	bl	1075c <fgets@plt>
   10bb0:	add	r3, sp, #4
   10bb4:	mov	r2, sp
   10bb8:	mov	r1, r8
   10bbc:	cmp	r0, #0
   10bc0:	mov	r0, r5
   10bc4:	beq	10bd4 <abort@plt+0x3ac>
   10bc8:	bl	107ec <__isoc99_sscanf@plt>
   10bcc:	cmp	r0, #2
   10bd0:	beq	10be0 <abort@plt+0x3b8>
   10bd4:	mov	r0, fp
   10bd8:	add	sp, sp, #12
   10bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10be0:	mov	r1, #0
   10be4:	mov	r2, #10
   10be8:	mov	r0, r6
   10bec:	bl	10738 <strtol@plt>
   10bf0:	mov	r1, sl
   10bf4:	subs	r3, r0, #0
   10bf8:	mov	r0, r6
   10bfc:	beq	10c2c <abort@plt+0x404>
   10c00:	lsl	r3, r3, #3
   10c04:	ldr	ip, [sp]
   10c08:	add	r0, r4, r3
   10c0c:	ldr	r1, [r4, r3]
   10c10:	ldr	r2, [r0, #4]
   10c14:	ldr	lr, [sp, #4]
   10c18:	add	r1, r1, ip
   10c1c:	add	r2, r2, lr
   10c20:	str	r1, [r4, r3]
   10c24:	str	r2, [r0, #4]
   10c28:	b	10ba0 <abort@plt+0x378>
   10c2c:	bl	1072c <strcmp@plt>
   10c30:	mov	r3, #88	; 0x58
   10c34:	cmp	r0, #0
   10c38:	bne	10c04 <abort@plt+0x3dc>
   10c3c:	ldr	fp, [sp]
   10c40:	mov	r3, r0
   10c44:	mov	ip, fp
   10c48:	b	10c08 <abort@plt+0x3e0>
   10c4c:	mov	fp, #0
   10c50:	mov	r0, fp
   10c54:	add	sp, sp, #12
   10c58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c5c:	muleq	r2, r4, r0
   10c60:	andeq	r2, r1, r8, lsl #8
   10c64:	andeq	r2, r1, r0, lsl #8
   10c68:	ldr	r1, [r1, #8]
   10c6c:	ldr	r0, [r0, #8]
   10c70:	b	11994 <abort@plt+0x116c>
   10c74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c78:	mov	r2, r0
   10c7c:	ldr	r7, [pc, #252]	; 10d80 <abort@plt+0x558>
   10c80:	sub	sp, sp, #20
   10c84:	mov	r8, r0
   10c88:	mov	r9, r1
   10c8c:	mov	r0, r7
   10c90:	mov	r1, #99	; 0x63
   10c94:	bl	1075c <fgets@plt>
   10c98:	cmp	r0, #0
   10c9c:	beq	10cf8 <abort@plt+0x4d0>
   10ca0:	mov	r2, r8
   10ca4:	mov	r1, #99	; 0x63
   10ca8:	mov	r0, r7
   10cac:	bl	1075c <fgets@plt>
   10cb0:	cmp	r0, #0
   10cb4:	beq	10cf8 <abort@plt+0x4d0>
   10cb8:	ldr	fp, [pc, #196]	; 10d84 <abort@plt+0x55c>
   10cbc:	mov	r4, r7
   10cc0:	add	sl, r7, #29
   10cc4:	mov	r2, r8
   10cc8:	mov	r1, #99	; 0x63
   10ccc:	mov	r0, r4
   10cd0:	bl	1075c <fgets@plt>
   10cd4:	add	r3, sp, #12
   10cd8:	add	r2, sp, #8
   10cdc:	mov	r1, fp
   10ce0:	cmp	r0, #0
   10ce4:	mov	r0, r4
   10ce8:	beq	10cf8 <abort@plt+0x4d0>
   10cec:	bl	107ec <__isoc99_sscanf@plt>
   10cf0:	cmp	r0, #2
   10cf4:	beq	10d00 <abort@plt+0x4d8>
   10cf8:	add	sp, sp, #20
   10cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d00:	mov	r0, r4
   10d04:	bl	107d4 <strlen@plt>
   10d08:	mov	r2, #0
   10d0c:	mov	r1, sl
   10d10:	ldr	r5, [sp, #8]
   10d14:	ldr	r6, [sp, #12]
   10d18:	add	r3, r7, r0
   10d1c:	mov	r0, r9
   10d20:	strb	r2, [r3, #-1]
   10d24:	bl	11698 <abort@plt+0xe70>
   10d28:	subs	r3, r0, #0
   10d2c:	beq	10d4c <abort@plt+0x524>
   10d30:	ldr	r1, [r3, #12]
   10d34:	ldr	r2, [r3, #16]
   10d38:	add	r5, r1, r5
   10d3c:	add	r6, r2, r6
   10d40:	str	r5, [r3, #12]
   10d44:	str	r6, [r3, #16]
   10d48:	b	10cc4 <abort@plt+0x49c>
   10d4c:	mov	r1, #20
   10d50:	mov	r0, #1
   10d54:	bl	11bc0 <error@@Base+0x3c>
   10d58:	str	r0, [sp, #4]
   10d5c:	mov	r0, sl
   10d60:	bl	10768 <strdup@plt>
   10d64:	ldr	r3, [sp, #4]
   10d68:	mov	r1, r3
   10d6c:	str	r0, [r3, #8]
   10d70:	mov	r0, r9
   10d74:	bl	1171c <abort@plt+0xef4>
   10d78:	ldr	r3, [sp, #4]
   10d7c:	b	10d30 <abort@plt+0x508>
   10d80:	muleq	r2, r4, r0
   10d84:	andeq	r2, r1, r8, lsl #8
   10d88:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d8c:	add	r7, r1, #4096	; 0x1000
   10d90:	vpush	{d8}
   10d94:	mov	r6, r0
   10d98:	mov	r0, r1
   10d9c:	mov	r4, r2
   10da0:	bl	11824 <abort@plt+0xffc>
   10da4:	ldr	r1, [r7, #3952]	; 0xf70
   10da8:	ldr	r0, [r7, #3956]	; 0xf74
   10dac:	ldr	r2, [pc, #332]	; 10f00 <abort@plt+0x6d8>
   10db0:	bl	1232c <error@@Base+0x7a8>
   10db4:	mov	r2, r4
   10db8:	ldr	r1, [pc, #324]	; 10f04 <abort@plt+0x6dc>
   10dbc:	mov	r0, r6
   10dc0:	bl	107e0 <fprintf@plt>
   10dc4:	mov	r3, r6
   10dc8:	mov	r2, #26
   10dcc:	mov	r1, #1
   10dd0:	ldr	r0, [pc, #304]	; 10f08 <abort@plt+0x6e0>
   10dd4:	bl	1078c <fwrite@plt>
   10dd8:	mov	r3, r6
   10ddc:	mov	r2, #3
   10de0:	mov	r1, #1
   10de4:	ldr	r0, [pc, #288]	; 10f0c <abort@plt+0x6e4>
   10de8:	bl	1078c <fwrite@plt>
   10dec:	mov	r1, r6
   10df0:	mov	r0, #10
   10df4:	bl	10804 <fputc@plt>
   10df8:	ldr	r3, [r7, #3956]	; 0xf74
   10dfc:	cmp	r3, #0
   10e00:	ble	10eec <abort@plt+0x6c4>
   10e04:	vldr	d8, [pc, #236]	; 10ef8 <abort@plt+0x6d0>
   10e08:	ldr	sl, [pc, #256]	; 10f10 <abort@plt+0x6e8>
   10e0c:	ldr	fp, [pc, #256]	; 10f14 <abort@plt+0x6ec>
   10e10:	ldr	r9, [pc, #244]	; 10f0c <abort@plt+0x6e4>
   10e14:	mov	r4, #0
   10e18:	b	10e80 <abort@plt+0x658>
   10e1c:	ldr	r2, [r5, #16]
   10e20:	vmov	s15, r3
   10e24:	sub	r3, r3, r2
   10e28:	vmov	s14, r3
   10e2c:	vcvt.f64.s32	d6, s15
   10e30:	vcvt.f64.s32	d7, s14
   10e34:	vmul.f64	d7, d7, d8
   10e38:	vdiv.f64	d5, d7, d6
   10e3c:	vmov	r2, r3, d5
   10e40:	bl	107e0 <fprintf@plt>
   10e44:	mov	r3, r6
   10e48:	mov	r2, #3
   10e4c:	mov	r1, #1
   10e50:	mov	r0, r9
   10e54:	bl	1078c <fwrite@plt>
   10e58:	ldr	r3, [r7, #3952]	; 0xf70
   10e5c:	ldr	r1, [pc, #180]	; 10f18 <abort@plt+0x6f0>
   10e60:	mov	r0, r6
   10e64:	ldr	r3, [r3, r8]
   10e68:	add	r4, r4, #1
   10e6c:	ldr	r2, [r3, #8]
   10e70:	bl	107e0 <fprintf@plt>
   10e74:	ldr	r3, [r7, #3956]	; 0xf74
   10e78:	cmp	r3, r4
   10e7c:	ble	10eec <abort@plt+0x6c4>
   10e80:	ldr	r3, [r7, #3952]	; 0xf70
   10e84:	mov	r1, sl
   10e88:	mov	r0, r6
   10e8c:	ldr	r5, [r3, r4, lsl #2]
   10e90:	lsl	r8, r4, #2
   10e94:	cmn	r5, #12
   10e98:	beq	10ed4 <abort@plt+0x6ac>
   10e9c:	ldr	r3, [r5, #16]
   10ea0:	ldr	r2, [r5, #12]
   10ea4:	bl	107e0 <fprintf@plt>
   10ea8:	ldr	r3, [r5, #12]
   10eac:	mov	r1, fp
   10eb0:	cmp	r3, #0
   10eb4:	mov	r0, r6
   10eb8:	bne	10e1c <abort@plt+0x5f4>
   10ebc:	mov	r3, r6
   10ec0:	mov	r2, #8
   10ec4:	mov	r1, #1
   10ec8:	ldr	r0, [pc, #76]	; 10f1c <abort@plt+0x6f4>
   10ecc:	bl	1078c <fwrite@plt>
   10ed0:	b	10e44 <abort@plt+0x61c>
   10ed4:	mov	r3, r6
   10ed8:	mov	r2, #26
   10edc:	mov	r1, #1
   10ee0:	ldr	r0, [pc, #32]	; 10f08 <abort@plt+0x6e0>
   10ee4:	bl	1078c <fwrite@plt>
   10ee8:	b	10e44 <abort@plt+0x61c>
   10eec:	vpop	{d8}
   10ef0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ef4:	nop			; (mov r0, r0)
   10ef8:	andeq	r0, r0, r0
   10efc:	subsmi	r0, r9, r0
   10f00:	andeq	r0, r1, r8, ror #24
   10f04:	andeq	r2, r1, r0, lsl r4
   10f08:	andeq	r2, r1, r8, lsl r4
   10f0c:	andeq	r2, r1, r4, lsr r4
   10f10:	andeq	r2, r1, r8, lsr r4
   10f14:	andeq	r2, r1, r0, asr r4
   10f18:	andeq	r2, r1, r0, lsr #11
   10f1c:	andeq	r2, r1, r4, asr #8
   10f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f24:	vpush	{d8}
   10f28:	mov	r8, r2
   10f2c:	mov	r2, r3
   10f30:	mov	r5, r0
   10f34:	sub	sp, sp, #12
   10f38:	mov	r6, r1
   10f3c:	ldrb	r3, [sp, #56]	; 0x38
   10f40:	ldr	r1, [pc, #704]	; 11208 <abort@plt+0x9e0>
   10f44:	mov	r4, r3
   10f48:	str	r3, [sp, #4]
   10f4c:	ldrb	r3, [sp, #60]	; 0x3c
   10f50:	str	r3, [sp]
   10f54:	bl	107e0 <fprintf@plt>
   10f58:	mov	r3, r5
   10f5c:	mov	r2, #26
   10f60:	mov	r1, #1
   10f64:	ldr	r0, [pc, #672]	; 1120c <abort@plt+0x9e4>
   10f68:	bl	1078c <fwrite@plt>
   10f6c:	mov	r3, r5
   10f70:	mov	r2, #3
   10f74:	mov	r1, #1
   10f78:	ldr	r0, [pc, #656]	; 11210 <abort@plt+0x9e8>
   10f7c:	bl	1078c <fwrite@plt>
   10f80:	cmp	r4, #0
   10f84:	beq	1110c <abort@plt+0x8e4>
   10f88:	ldr	r2, [pc, #644]	; 11214 <abort@plt+0x9ec>
   10f8c:	ldr	r1, [pc, #644]	; 11218 <abort@plt+0x9f0>
   10f90:	mov	r0, r5
   10f94:	bl	107e0 <fprintf@plt>
   10f98:	cmp	r8, #0
   10f9c:	ble	1106c <abort@plt+0x844>
   10fa0:	vldr	d8, [pc, #600]	; 11200 <abort@plt+0x9d8>
   10fa4:	ldr	r9, [pc, #624]	; 1121c <abort@plt+0x9f4>
   10fa8:	ldr	fp, [pc, #608]	; 11210 <abort@plt+0x9e8>
   10fac:	ldr	sl, [pc, #620]	; 11220 <abort@plt+0x9f8>
   10fb0:	mov	r4, #1
   10fb4:	b	11014 <abort@plt+0x7ec>
   10fb8:	ldr	r2, [r7, #4]
   10fbc:	vmov	s15, r3
   10fc0:	sub	r3, r3, r2
   10fc4:	vmov	s14, r3
   10fc8:	vcvt.f64.s32	d6, s15
   10fcc:	vcvt.f64.s32	d7, s14
   10fd0:	vmul.f64	d7, d7, d8
   10fd4:	vdiv.f64	d5, d7, d6
   10fd8:	vmov	r2, r3, d5
   10fdc:	bl	107e0 <fprintf@plt>
   10fe0:	mov	r2, #3
   10fe4:	mov	r1, #1
   10fe8:	mov	r3, r5
   10fec:	mov	r0, fp
   10ff0:	bl	1078c <fwrite@plt>
   10ff4:	mov	r2, r4
   10ff8:	mov	r1, sl
   10ffc:	mov	r0, r5
   11000:	bl	107e0 <fprintf@plt>
   11004:	add	r4, r4, #1
   11008:	sxth	r4, r4
   1100c:	cmp	r8, r4
   11010:	blt	11060 <abort@plt+0x838>
   11014:	ldr	r3, [r6, r4, lsl #3]
   11018:	mov	r1, r9
   1101c:	subs	r2, r3, #0
   11020:	mov	r0, r5
   11024:	add	r7, r6, r4, lsl #3
   11028:	ble	11004 <abort@plt+0x7dc>
   1102c:	ldr	r3, [r7, #4]
   11030:	bl	107e0 <fprintf@plt>
   11034:	ldr	r3, [r6, r4, lsl #3]
   11038:	ldr	r1, [pc, #484]	; 11224 <abort@plt+0x9fc>
   1103c:	cmp	r3, #0
   11040:	mov	r0, r5
   11044:	bne	10fb8 <abort@plt+0x790>
   11048:	mov	r3, r5
   1104c:	mov	r2, #8
   11050:	mov	r1, #1
   11054:	ldr	r0, [pc, #460]	; 11228 <abort@plt+0xa00>
   11058:	bl	1078c <fwrite@plt>
   1105c:	b	10fe0 <abort@plt+0x7b8>
   11060:	ldr	r3, [sp, #4]
   11064:	cmp	r3, #0
   11068:	beq	110f4 <abort@plt+0x8cc>
   1106c:	add	r4, r8, #1
   11070:	ldr	r2, [r6, r4, lsl #3]
   11074:	add	r7, r6, r4, lsl #3
   11078:	cmp	r2, #0
   1107c:	ble	110f4 <abort@plt+0x8cc>
   11080:	ldr	r3, [r7, #4]
   11084:	ldr	r1, [pc, #400]	; 1121c <abort@plt+0x9f4>
   11088:	mov	r0, r5
   1108c:	bl	107e0 <fprintf@plt>
   11090:	ldr	r2, [r6, r4, lsl #3]
   11094:	cmp	r2, #0
   11098:	beq	111cc <abort@plt+0x9a4>
   1109c:	ldr	r3, [r7, #4]
   110a0:	vmov	s15, r2
   110a4:	sub	r3, r2, r3
   110a8:	vldr	d5, [pc, #336]	; 11200 <abort@plt+0x9d8>
   110ac:	vmov	s14, r3
   110b0:	vcvt.f64.s32	d6, s15
   110b4:	ldr	r1, [pc, #360]	; 11224 <abort@plt+0x9fc>
   110b8:	mov	r0, r5
   110bc:	vcvt.f64.s32	d7, s14
   110c0:	vmul.f64	d7, d7, d5
   110c4:	vdiv.f64	d5, d7, d6
   110c8:	vmov	r2, r3, d5
   110cc:	bl	107e0 <fprintf@plt>
   110d0:	mov	r2, #3
   110d4:	mov	r1, #1
   110d8:	mov	r3, r5
   110dc:	ldr	r0, [pc, #300]	; 11210 <abort@plt+0x9e8>
   110e0:	bl	1078c <fwrite@plt>
   110e4:	mov	r2, r8
   110e8:	ldr	r1, [pc, #316]	; 1122c <abort@plt+0xa04>
   110ec:	mov	r0, r5
   110f0:	bl	107e0 <fprintf@plt>
   110f4:	ldr	r3, [sp]
   110f8:	cmp	r3, #0
   110fc:	bne	11128 <abort@plt+0x900>
   11100:	add	sp, sp, #12
   11104:	vpop	{d8}
   11108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1110c:	ldr	r2, [pc, #284]	; 11230 <abort@plt+0xa08>
   11110:	ldr	r1, [pc, #256]	; 11218 <abort@plt+0x9f0>
   11114:	mov	r0, r5
   11118:	bl	107e0 <fprintf@plt>
   1111c:	cmp	r8, #0
   11120:	bgt	10fa0 <abort@plt+0x778>
   11124:	b	110f4 <abort@plt+0x8cc>
   11128:	cmp	r6, #0
   1112c:	beq	111e4 <abort@plt+0x9bc>
   11130:	ldm	r6, {r2, r3}
   11134:	ldr	r1, [pc, #224]	; 1121c <abort@plt+0x9f4>
   11138:	mov	r0, r5
   1113c:	bl	107e0 <fprintf@plt>
   11140:	ldr	r2, [r6]
   11144:	cmp	r2, #0
   11148:	beq	111b4 <abort@plt+0x98c>
   1114c:	ldr	r3, [r6, #4]
   11150:	vmov	s15, r2
   11154:	sub	r3, r2, r3
   11158:	vldr	d5, [pc, #160]	; 11200 <abort@plt+0x9d8>
   1115c:	vmov	s14, r3
   11160:	vcvt.f64.s32	d6, s15
   11164:	ldr	r1, [pc, #184]	; 11224 <abort@plt+0x9fc>
   11168:	mov	r0, r5
   1116c:	vcvt.f64.s32	d7, s14
   11170:	vmul.f64	d7, d7, d5
   11174:	vdiv.f64	d5, d7, d6
   11178:	vmov	r2, r3, d5
   1117c:	bl	107e0 <fprintf@plt>
   11180:	mov	r3, r5
   11184:	mov	r2, #3
   11188:	mov	r1, #1
   1118c:	ldr	r0, [pc, #124]	; 11210 <abort@plt+0x9e8>
   11190:	bl	1078c <fwrite@plt>
   11194:	mov	r3, r5
   11198:	mov	r2, #7
   1119c:	mov	r1, #1
   111a0:	ldr	r0, [pc, #140]	; 11234 <abort@plt+0xa0c>
   111a4:	add	sp, sp, #12
   111a8:	vpop	{d8}
   111ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111b0:	b	1078c <fwrite@plt>
   111b4:	mov	r3, r5
   111b8:	mov	r2, #8
   111bc:	mov	r1, #1
   111c0:	ldr	r0, [pc, #96]	; 11228 <abort@plt+0xa00>
   111c4:	bl	1078c <fwrite@plt>
   111c8:	b	11180 <abort@plt+0x958>
   111cc:	mov	r3, r5
   111d0:	mov	r2, #8
   111d4:	mov	r1, #1
   111d8:	ldr	r0, [pc, #72]	; 11228 <abort@plt+0xa00>
   111dc:	bl	1078c <fwrite@plt>
   111e0:	b	110d0 <abort@plt+0x8a8>
   111e4:	mov	r3, r5
   111e8:	mov	r2, #26
   111ec:	mov	r1, #1
   111f0:	ldr	r0, [pc, #20]	; 1120c <abort@plt+0x9e4>
   111f4:	bl	1078c <fwrite@plt>
   111f8:	b	11180 <abort@plt+0x958>
   111fc:	nop			; (mov r0, r0)
   11200:	andeq	r0, r0, r0
   11204:	subsmi	r0, r9, r0
   11208:	andeq	r2, r1, r0, lsl r4
   1120c:	andeq	r2, r1, r8, lsl r4
   11210:	andeq	r2, r1, r4, lsr r4
   11214:	andeq	r2, r1, r8, ror r4
   11218:	andeq	r2, r1, r0, lsr #11
   1121c:	andeq	r2, r1, r8, lsr r4
   11220:	andeq	r2, r1, r8, asr r4
   11224:	andeq	r2, r1, r0, asr r4
   11228:	andeq	r2, r1, r4, asr #8
   1122c:	andeq	r2, r1, r4, ror #8
   11230:	andeq	r2, r1, r0, ror r4
   11234:	andeq	r2, r1, r0, lsl #8
   11238:	ldr	ip, [r0]
   1123c:	ldr	r3, [r0, #4]
   11240:	add	r1, ip, r1
   11244:	add	r2, r3, r2
   11248:	stm	r0, {r1, r2}
   1124c:	bx	lr
   11250:	push	{r4, r5, r6, r7, r8, lr}
   11254:	mov	r6, r2
   11258:	mov	r5, r3
   1125c:	mov	r7, r0
   11260:	mov	r8, r1
   11264:	bl	11698 <abort@plt+0xe70>
   11268:	subs	r4, r0, #0
   1126c:	beq	1128c <abort@plt+0xa64>
   11270:	ldr	r0, [r4, #12]
   11274:	ldr	r1, [r4, #16]
   11278:	add	r2, r0, r6
   1127c:	add	r3, r1, r5
   11280:	str	r2, [r4, #12]
   11284:	str	r3, [r4, #16]
   11288:	pop	{r4, r5, r6, r7, r8, pc}
   1128c:	mov	r1, #20
   11290:	mov	r0, #1
   11294:	bl	11bc0 <error@@Base+0x3c>
   11298:	mov	r4, r0
   1129c:	mov	r0, r8
   112a0:	bl	10768 <strdup@plt>
   112a4:	mov	r1, r4
   112a8:	str	r0, [r4, #8]
   112ac:	mov	r0, r7
   112b0:	bl	1171c <abort@plt+0xef4>
   112b4:	b	11270 <abort@plt+0xa48>
   112b8:	push	{r4, r5, r6, r7, lr}
   112bc:	mov	r6, r1
   112c0:	sub	sp, sp, #12
   112c4:	ldr	r1, [pc, #428]	; 11478 <abort@plt+0xc50>
   112c8:	mov	r5, r0
   112cc:	mov	r0, r6
   112d0:	bl	11c54 <error@@Base+0xd0>
   112d4:	mov	r1, #99	; 0x63
   112d8:	mov	r2, r0
   112dc:	mov	r4, r0
   112e0:	ldr	r0, [pc, #404]	; 1147c <abort@plt+0xc54>
   112e4:	bl	1075c <fgets@plt>
   112e8:	cmp	r0, #0
   112ec:	beq	11364 <abort@plt+0xb3c>
   112f0:	mov	r2, #45	; 0x2d
   112f4:	ldr	r1, [pc, #388]	; 11480 <abort@plt+0xc58>
   112f8:	ldr	r0, [pc, #380]	; 1147c <abort@plt+0xc54>
   112fc:	bl	1081c <strncmp@plt>
   11300:	cmp	r0, #0
   11304:	bne	11364 <abort@plt+0xb3c>
   11308:	mov	r2, r4
   1130c:	mov	r1, #99	; 0x63
   11310:	ldr	r0, [pc, #356]	; 1147c <abort@plt+0xc54>
   11314:	bl	1075c <fgets@plt>
   11318:	cmp	r0, #0
   1131c:	beq	11364 <abort@plt+0xb3c>
   11320:	ldr	r1, [pc, #348]	; 11484 <abort@plt+0xc5c>
   11324:	ldr	r0, [pc, #336]	; 1147c <abort@plt+0xc54>
   11328:	bl	1072c <strcmp@plt>
   1132c:	cmp	r0, #0
   11330:	bne	11364 <abort@plt+0xb3c>
   11334:	mov	r2, r4
   11338:	mov	r1, #99	; 0x63
   1133c:	ldr	r0, [pc, #312]	; 1147c <abort@plt+0xc54>
   11340:	bl	1075c <fgets@plt>
   11344:	cmp	r0, #0
   11348:	beq	11364 <abort@plt+0xb3c>
   1134c:	mov	r2, sp
   11350:	ldr	r1, [pc, #304]	; 11488 <abort@plt+0xc60>
   11354:	ldr	r0, [pc, #288]	; 1147c <abort@plt+0xc54>
   11358:	bl	107ec <__isoc99_sscanf@plt>
   1135c:	cmp	r0, #1
   11360:	beq	11378 <abort@plt+0xb50>
   11364:	cmp	r6, #0
   11368:	ldr	r1, [pc, #284]	; 1148c <abort@plt+0xc64>
   1136c:	ldr	r0, [pc, #284]	; 11490 <abort@plt+0xc68>
   11370:	movne	r1, r6
   11374:	bl	11c0c <error@@Base+0x88>
   11378:	mov	r2, r4
   1137c:	mov	r1, #99	; 0x63
   11380:	ldr	r0, [pc, #244]	; 1147c <abort@plt+0xc54>
   11384:	bl	1075c <fgets@plt>
   11388:	cmp	r0, #0
   1138c:	beq	11364 <abort@plt+0xb3c>
   11390:	add	r2, sp, #4
   11394:	ldr	r1, [pc, #236]	; 11488 <abort@plt+0xc60>
   11398:	ldr	r0, [pc, #220]	; 1147c <abort@plt+0xc54>
   1139c:	bl	107ec <__isoc99_sscanf@plt>
   113a0:	cmp	r0, #1
   113a4:	bne	11364 <abort@plt+0xb3c>
   113a8:	mov	r2, r4
   113ac:	mov	r1, #99	; 0x63
   113b0:	ldr	r0, [pc, #196]	; 1147c <abort@plt+0xc54>
   113b4:	bl	1075c <fgets@plt>
   113b8:	cmp	r0, #0
   113bc:	beq	11364 <abort@plt+0xb3c>
   113c0:	mov	r2, r4
   113c4:	mov	r1, #99	; 0x63
   113c8:	ldr	r0, [pc, #172]	; 1147c <abort@plt+0xc54>
   113cc:	bl	1075c <fgets@plt>
   113d0:	cmp	r0, #0
   113d4:	beq	11364 <abort@plt+0xb3c>
   113d8:	ldr	r0, [sp, #4]
   113dc:	ldr	r2, [r5, #4]
   113e0:	ldr	r3, [r5]
   113e4:	ldr	r1, [sp]
   113e8:	add	r2, r2, r0
   113ec:	add	r3, r3, r1
   113f0:	str	r3, [r5]
   113f4:	str	r2, [r5, #4]
   113f8:	add	r1, r5, #8
   113fc:	mov	r0, r4
   11400:	bl	10b48 <abort@plt+0x320>
   11404:	add	r1, r5, #416	; 0x1a0
   11408:	mov	r7, r0
   1140c:	mov	r0, r4
   11410:	bl	10b48 <abort@plt+0x320>
   11414:	add	r1, r5, #824	; 0x338
   11418:	mov	r6, r0
   1141c:	mov	r0, r4
   11420:	bl	10b48 <abort@plt+0x320>
   11424:	ldr	r3, [sp]
   11428:	cmp	r3, #0
   1142c:	ble	11468 <abort@plt+0xc40>
   11430:	add	r1, r5, #920	; 0x398
   11434:	mov	r0, r4
   11438:	bl	10b48 <abort@plt+0x320>
   1143c:	cmp	r7, #0
   11440:	ble	11450 <abort@plt+0xc28>
   11444:	add	r1, r5, #992	; 0x3e0
   11448:	mov	r0, r4
   1144c:	bl	10c74 <abort@plt+0x44c>
   11450:	cmp	r6, #0
   11454:	ble	11468 <abort@plt+0xc40>
   11458:	add	r1, r5, #9024	; 0x2340
   1145c:	add	r1, r1, #24
   11460:	mov	r0, r4
   11464:	bl	10c74 <abort@plt+0x44c>
   11468:	mov	r0, r4
   1146c:	bl	11a28 <abort@plt+0x1200>
   11470:	add	sp, sp, #12
   11474:	pop	{r4, r5, r6, r7, pc}
   11478:	andeq	r2, r1, r8, lsl #9
   1147c:	muleq	r2, r4, r0
   11480:	andeq	r2, r1, ip, lsl #9
   11484:			; <UNDEFINED> instruction: 0x000124bc
   11488:	andeq	r2, r1, ip, lsl #8
   1148c:	andeq	r2, r1, r0, lsl #9
   11490:	andeq	r2, r1, ip, ror #9
   11494:	mov	r3, r1
   11498:	push	{r4, r5, r6, r7, lr}
   1149c:	mov	r4, r0
   114a0:	sub	sp, sp, #12
   114a4:	ldr	r1, [pc, #380]	; 11628 <abort@plt+0xe00>
   114a8:	mov	r0, r3
   114ac:	bl	11c54 <error@@Base+0xd0>
   114b0:	ldr	r3, [pc, #372]	; 1162c <abort@plt+0xe04>
   114b4:	ldr	r2, [pc, #372]	; 11630 <abort@plt+0xe08>
   114b8:	ldr	r1, [pc, #372]	; 11634 <abort@plt+0xe0c>
   114bc:	mov	r5, r0
   114c0:	bl	107e0 <fprintf@plt>
   114c4:	ldr	r2, [r4]
   114c8:	ldr	r1, [pc, #360]	; 11638 <abort@plt+0xe10>
   114cc:	mov	r0, r5
   114d0:	bl	107e0 <fprintf@plt>
   114d4:	ldr	r2, [r4, #4]
   114d8:	mov	r0, r5
   114dc:	ldr	r1, [pc, #344]	; 1163c <abort@plt+0xe14>
   114e0:	bl	107e0 <fprintf@plt>
   114e4:	ldr	r2, [r4]
   114e8:	cmp	r2, #0
   114ec:	beq	11608 <abort@plt+0xde0>
   114f0:	ldr	r3, [r4, #4]
   114f4:	vmov	s15, r2
   114f8:	sub	r3, r2, r3
   114fc:	vldr	d5, [pc, #284]	; 11620 <abort@plt+0xdf8>
   11500:	vmov	s14, r3
   11504:	vcvt.f64.s32	d6, s15
   11508:	ldr	r1, [pc, #304]	; 11640 <abort@plt+0xe18>
   1150c:	mov	r0, r5
   11510:	vcvt.f64.s32	d7, s14
   11514:	vmul.f64	d7, d7, d5
   11518:	vdiv.f64	d5, d7, d6
   1151c:	vmov	r2, r3, d5
   11520:	bl	107e0 <fprintf@plt>
   11524:	mov	r1, #1
   11528:	mov	r6, r1
   1152c:	mov	r7, #0
   11530:	mov	r3, r5
   11534:	mov	r2, #12
   11538:	ldr	r0, [pc, #260]	; 11644 <abort@plt+0xe1c>
   1153c:	bl	1078c <fwrite@plt>
   11540:	ldr	r3, [pc, #256]	; 11648 <abort@plt+0xe20>
   11544:	mov	r2, #50	; 0x32
   11548:	add	r1, r4, #8
   1154c:	mov	r0, r5
   11550:	str	r6, [sp, #4]
   11554:	str	r7, [sp]
   11558:	bl	10f20 <abort@plt+0x6f8>
   1155c:	ldr	r3, [pc, #232]	; 1164c <abort@plt+0xe24>
   11560:	mov	r2, #50	; 0x32
   11564:	add	r1, r4, #416	; 0x1a0
   11568:	mov	r0, r5
   1156c:	str	r6, [sp, #4]
   11570:	str	r7, [sp]
   11574:	bl	10f20 <abort@plt+0x6f8>
   11578:	ldr	r3, [pc, #208]	; 11650 <abort@plt+0xe28>
   1157c:	str	r6, [sp, #4]
   11580:	str	r6, [sp]
   11584:	mov	r2, #10
   11588:	add	r1, r4, #824	; 0x338
   1158c:	mov	r0, r5
   11590:	bl	10f20 <abort@plt+0x6f8>
   11594:	ldr	r3, [r4]
   11598:	cmp	r3, r7
   1159c:	ble	115f8 <abort@plt+0xdd0>
   115a0:	ldr	r3, [pc, #172]	; 11654 <abort@plt+0xe2c>
   115a4:	str	r7, [sp, #4]
   115a8:	str	r7, [sp]
   115ac:	mov	r2, #8
   115b0:	add	r1, r4, #920	; 0x398
   115b4:	mov	r0, r5
   115b8:	bl	10f20 <abort@plt+0x6f8>
   115bc:	ldr	r3, [r4, #8]
   115c0:	cmp	r3, r7
   115c4:	ble	115d8 <abort@plt+0xdb0>
   115c8:	ldr	r2, [pc, #120]	; 11648 <abort@plt+0xe20>
   115cc:	add	r1, r4, #992	; 0x3e0
   115d0:	mov	r0, r5
   115d4:	bl	10d88 <abort@plt+0x560>
   115d8:	ldr	r3, [r4, #416]	; 0x1a0
   115dc:	cmp	r3, #0
   115e0:	ble	115f8 <abort@plt+0xdd0>
   115e4:	add	r1, r4, #9024	; 0x2340
   115e8:	add	r1, r1, #24
   115ec:	ldr	r2, [pc, #88]	; 1164c <abort@plt+0xe24>
   115f0:	mov	r0, r5
   115f4:	bl	10d88 <abort@plt+0x560>
   115f8:	mov	r0, r5
   115fc:	add	sp, sp, #12
   11600:	pop	{r4, r5, r6, r7, lr}
   11604:	b	11a28 <abort@plt+0x1200>
   11608:	mov	r3, r5
   1160c:	mov	r2, #8
   11610:	mov	r1, #1
   11614:	ldr	r0, [pc, #60]	; 11658 <abort@plt+0xe30>
   11618:	bl	1078c <fwrite@plt>
   1161c:	b	11524 <abort@plt+0xcfc>
   11620:	andeq	r0, r0, r0
   11624:	subsmi	r0, r9, r0
   11628:	strdeq	r2, [r1], -r0
   1162c:			; <UNDEFINED> instruction: 0x000124bc
   11630:	andeq	r2, r1, ip, lsl #9
   11634:	andeq	r2, r1, r0, lsl #10
   11638:	andeq	r2, r1, r8, lsl #10
   1163c:	andeq	r2, r1, r8, lsl r5
   11640:	andeq	r2, r1, r0, asr r4
   11644:	andeq	r2, r1, r0, lsr r5
   11648:	andeq	r2, r1, r0, asr #10
   1164c:	andeq	r2, r1, ip, asr #10
   11650:	andeq	r2, r1, ip, asr r5
   11654:	andeq	r2, r1, r4, ror r5
   11658:	andeq	r2, r1, r4, asr #8
   1165c:	push	{r4, r5, r6, lr}
   11660:	add	r5, r0, #8000	; 0x1f40
   11664:	mov	r6, r0
   11668:	add	r5, r5, #48	; 0x30
   1166c:	mov	r4, r0
   11670:	mov	r0, r4
   11674:	add	r4, r4, #16
   11678:	bl	11f3c <error@@Base+0x3b8>
   1167c:	cmp	r5, r4
   11680:	bne	11670 <abort@plt+0xe48>
   11684:	add	r6, r6, #4096	; 0x1000
   11688:	mov	r3, #0
   1168c:	str	r3, [r6, #3952]	; 0xf70
   11690:	str	r3, [r6, #3956]	; 0xf74
   11694:	pop	{r4, r5, r6, pc}
   11698:	push	{r4, r5, r6, lr}
   1169c:	mov	r5, r1
   116a0:	ldrb	r3, [r1]
   116a4:	cmp	r3, #0
   116a8:	beq	116e0 <abort@plt+0xeb8>
   116ac:	mov	r2, #0
   116b0:	add	r2, r2, r3
   116b4:	ldrb	r3, [r1, #1]!
   116b8:	cmp	r3, #0
   116bc:	bne	116b0 <abort@plt+0xe88>
   116c0:	ldr	r1, [pc, #80]	; 11718 <abort@plt+0xef0>
   116c4:	asr	r3, r2, #31
   116c8:	smull	ip, r1, r1, r2
   116cc:	add	r1, r1, r2
   116d0:	rsb	r3, r3, r1, asr #8
   116d4:	rsb	r1, r3, r3, lsl #6
   116d8:	rsb	r3, r3, r1, lsl #3
   116dc:	sub	r3, r2, r3
   116e0:	ldr	r4, [r0, r3, lsl #4]
   116e4:	cmp	r4, #0
   116e8:	bne	116fc <abort@plt+0xed4>
   116ec:	b	11710 <abort@plt+0xee8>
   116f0:	ldr	r4, [r4, #4]
   116f4:	cmp	r4, #0
   116f8:	beq	11710 <abort@plt+0xee8>
   116fc:	ldr	r1, [r4, #8]
   11700:	mov	r0, r5
   11704:	bl	1072c <strcmp@plt>
   11708:	cmp	r0, #0
   1170c:	bne	116f0 <abort@plt+0xec8>
   11710:	mov	r0, r4
   11714:	pop	{r4, r5, r6, pc}
   11718:	subhi	r4, sl, #1552	; 0x610
   1171c:	ldr	ip, [r1, #8]
   11720:	push	{r4, lr}
   11724:	ldrb	r3, [ip]
   11728:	cmp	r3, #0
   1172c:	beq	11768 <abort@plt+0xf40>
   11730:	mov	r2, #0
   11734:	add	r2, r2, r3
   11738:	ldrb	r3, [ip, #1]!
   1173c:	cmp	r3, #0
   11740:	bne	11734 <abort@plt+0xf0c>
   11744:	ldr	ip, [pc, #80]	; 1179c <abort@plt+0xf74>
   11748:	asr	r3, r2, #31
   1174c:	smull	lr, ip, ip, r2
   11750:	add	ip, ip, r2
   11754:	rsb	r3, r3, ip, asr #8
   11758:	rsb	ip, r3, r3, lsl #6
   1175c:	rsb	r3, r3, ip, lsl #3
   11760:	sub	r3, r2, r3
   11764:	lsl	r3, r3, #4
   11768:	add	r4, r0, #4096	; 0x1000
   1176c:	add	r0, r0, r3
   11770:	bl	11f54 <error@@Base+0x3d0>
   11774:	ldr	r0, [r4, #3952]	; 0xf70
   11778:	cmp	r0, #0
   1177c:	beq	1178c <abort@plt+0xf64>
   11780:	bl	10750 <free@plt>
   11784:	mov	r3, #0
   11788:	str	r3, [r4, #3952]	; 0xf70
   1178c:	ldr	r3, [r4, #3956]	; 0xf74
   11790:	add	r3, r3, #1
   11794:	str	r3, [r4, #3956]	; 0xf74
   11798:	pop	{r4, pc}
   1179c:	subhi	r4, sl, #1552	; 0x610
   117a0:	ldr	ip, [r1, #8]
   117a4:	push	{r4, lr}
   117a8:	ldrb	r3, [ip]
   117ac:	cmp	r3, #0
   117b0:	beq	117ec <abort@plt+0xfc4>
   117b4:	mov	r2, #0
   117b8:	add	r2, r2, r3
   117bc:	ldrb	r3, [ip, #1]!
   117c0:	cmp	r3, #0
   117c4:	bne	117b8 <abort@plt+0xf90>
   117c8:	ldr	ip, [pc, #80]	; 11820 <abort@plt+0xff8>
   117cc:	asr	r3, r2, #31
   117d0:	smull	lr, ip, ip, r2
   117d4:	add	ip, ip, r2
   117d8:	rsb	r3, r3, ip, asr #8
   117dc:	rsb	ip, r3, r3, lsl #6
   117e0:	rsb	r3, r3, ip, lsl #3
   117e4:	sub	r3, r2, r3
   117e8:	lsl	r3, r3, #4
   117ec:	add	r4, r0, #4096	; 0x1000
   117f0:	add	r0, r0, r3
   117f4:	bl	12084 <error@@Base+0x500>
   117f8:	ldr	r0, [r4, #3952]	; 0xf70
   117fc:	cmp	r0, #0
   11800:	beq	11810 <abort@plt+0xfe8>
   11804:	bl	10750 <free@plt>
   11808:	mov	r3, #0
   1180c:	str	r3, [r4, #3952]	; 0xf70
   11810:	ldr	r3, [r4, #3956]	; 0xf74
   11814:	sub	r3, r3, #1
   11818:	str	r3, [r4, #3956]	; 0xf74
   1181c:	pop	{r4, pc}
   11820:	subhi	r4, sl, #1552	; 0x610
   11824:	push	{r4, r5, r6, lr}
   11828:	add	r6, r0, #4096	; 0x1000
   1182c:	ldr	r4, [r6, #3952]	; 0xf70
   11830:	cmp	r4, #0
   11834:	popne	{r4, r5, r6, pc}
   11838:	ldr	r3, [r6, #3956]	; 0xf74
   1183c:	cmp	r3, #0
   11840:	popeq	{r4, r5, r6, pc}
   11844:	mov	r5, r0
   11848:	mov	r1, #4
   1184c:	mov	r0, r3
   11850:	bl	11bc0 <error@@Base+0x3c>
   11854:	ldr	lr, [pc, #60]	; 11898 <abort@plt+0x1070>
   11858:	mov	r2, r4
   1185c:	mov	ip, r4
   11860:	str	r0, [r6, #3952]	; 0xf70
   11864:	ldr	r3, [r5, ip, lsl #4]
   11868:	cmp	r3, #0
   1186c:	beq	11888 <abort@plt+0x1060>
   11870:	add	r1, r0, r2, lsl #2
   11874:	str	r3, [r1], #4
   11878:	ldr	r3, [r3, #4]
   1187c:	add	r2, r2, #1
   11880:	cmp	r3, #0
   11884:	bne	11874 <abort@plt+0x104c>
   11888:	add	ip, ip, #1
   1188c:	cmp	ip, lr
   11890:	bne	11864 <abort@plt+0x103c>
   11894:	pop	{r4, r5, r6, pc}
   11898:	strdeq	r0, [r0], -r7
   1189c:	push	{r4, r5, r6, r7, r8, lr}
   118a0:	add	r5, r0, #8000	; 0x1f40
   118a4:	mov	r7, r0
   118a8:	mov	r6, r1
   118ac:	add	r5, r5, #48	; 0x30
   118b0:	mov	r4, r0
   118b4:	mov	r0, r4
   118b8:	mov	r1, r6
   118bc:	add	r4, r4, #16
   118c0:	bl	12134 <error@@Base+0x5b0>
   118c4:	cmp	r5, r4
   118c8:	bne	118b4 <abort@plt+0x108c>
   118cc:	add	r7, r7, #4096	; 0x1000
   118d0:	ldr	r0, [r7, #3952]	; 0xf70
   118d4:	cmp	r0, #0
   118d8:	beq	118e8 <abort@plt+0x10c0>
   118dc:	bl	10750 <free@plt>
   118e0:	mov	r3, #0
   118e4:	str	r3, [r7, #3952]	; 0xf70
   118e8:	mov	r3, #0
   118ec:	str	r3, [r7, #3956]	; 0xf74
   118f0:	pop	{r4, r5, r6, r7, r8, pc}
   118f4:	ldr	r3, [pc, #136]	; 11984 <abort@plt+0x115c>
   118f8:	push	{r7, lr}
   118fc:	mov	r9, r0
   11900:	ldr	r3, [r3]
   11904:	sub	sp, sp, #112	; 0x70
   11908:	cmp	r3, #0
   1190c:	beq	11914 <abort@plt+0x10ec>
   11910:	blx	r3
   11914:	ldr	r6, [pc, #108]	; 11988 <abort@plt+0x1160>
   11918:	ldrsh	r3, [r6]
   1191c:	cmp	r3, #0
   11920:	ble	1197c <abort@plt+0x1154>
   11924:	ldr	r8, [pc, #96]	; 1198c <abort@plt+0x1164>
   11928:	ldr	r7, [pc, #96]	; 11990 <abort@plt+0x1168>
   1192c:	mov	r4, #1
   11930:	ldr	r5, [r8]
   11934:	bl	107bc <getpid@plt>
   11938:	mov	r2, r5
   1193c:	mov	r1, r7
   11940:	str	r4, [sp]
   11944:	add	r4, r4, #1
   11948:	sxth	r4, r4
   1194c:	mov	r3, r0
   11950:	add	r0, sp, #12
   11954:	bl	10810 <sprintf@plt>
   11958:	add	r0, sp, #12
   1195c:	bl	10768 <strdup@plt>
   11960:	mov	r5, r0
   11964:	bl	10774 <unlink@plt>
   11968:	mov	r0, r5
   1196c:	bl	10750 <free@plt>
   11970:	ldrsh	r3, [r6]
   11974:	cmp	r3, r4
   11978:	bge	11930 <abort@plt+0x1108>
   1197c:	mov	r0, r9
   11980:	bl	107c8 <exit@plt>
   11984:	andeq	r7, r2, r4, ror r5
   11988:	strdeq	r3, [r2], -r8
   1198c:	andeq	r7, r2, r0, ror r5
   11990:	andeq	r2, r1, ip, ror r5
   11994:	ldrb	r3, [r0]
   11998:	cmp	r3, #0
   1199c:	beq	11a00 <abort@plt+0x11d8>
   119a0:	ldrb	ip, [r1]
   119a4:	cmp	ip, r3
   119a8:	bne	11a10 <abort@plt+0x11e8>
   119ac:	push	{lr}		; (str lr, [sp, #-4]!)
   119b0:	mov	r2, #0
   119b4:	mov	lr, r1
   119b8:	b	119c8 <abort@plt+0x11a0>
   119bc:	ldrb	ip, [lr, #1]!
   119c0:	cmp	r3, ip
   119c4:	bne	119e8 <abort@plt+0x11c0>
   119c8:	ldrb	r3, [r0, #1]!
   119cc:	add	r2, r2, #1
   119d0:	cmp	r3, #0
   119d4:	bne	119bc <abort@plt+0x1194>
   119d8:	ldrb	ip, [r1, r2]
   119dc:	cmp	ip, #0
   119e0:	movne	r3, #0
   119e4:	beq	119f8 <abort@plt+0x11d0>
   119e8:	cmp	r3, ip
   119ec:	movcs	r0, #1
   119f0:	mvncc	r0, #0
   119f4:	pop	{pc}		; (ldr pc, [sp], #4)
   119f8:	mov	r0, ip
   119fc:	pop	{pc}		; (ldr pc, [sp], #4)
   11a00:	ldrb	ip, [r1, r3]
   11a04:	cmp	ip, #0
   11a08:	movne	r3, #0
   11a0c:	beq	11a20 <abort@plt+0x11f8>
   11a10:	cmp	r3, ip
   11a14:	movcs	r0, #1
   11a18:	mvncc	r0, #0
   11a1c:	bx	lr
   11a20:	mov	r0, ip
   11a24:	bx	lr
   11a28:	ldr	r2, [pc, #28]	; 11a4c <abort@plt+0x1224>
   11a2c:	ldr	r2, [r2]
   11a30:	cmp	r2, r0
   11a34:	bxeq	lr
   11a38:	ldr	r2, [pc, #16]	; 11a50 <abort@plt+0x1228>
   11a3c:	ldr	r2, [r2]
   11a40:	cmp	r0, r2
   11a44:	bxeq	lr
   11a48:	b	107f8 <fclose@plt>
   11a4c:	andeq	r3, r2, r8, lsl #1
   11a50:	andeq	r3, r2, ip, lsl #1
   11a54:	push	{lr}		; (str lr, [sp, #-4]!)
   11a58:	sub	sp, sp, #92	; 0x5c
   11a5c:	mov	r1, r0
   11a60:	mov	r2, sp
   11a64:	mov	r0, #3
   11a68:	bl	10780 <__xstat@plt>
   11a6c:	clz	r0, r0
   11a70:	lsr	r0, r0, #5
   11a74:	add	sp, sp, #92	; 0x5c
   11a78:	pop	{pc}		; (ldr pc, [sp], #4)
   11a7c:	ldr	r3, [pc, #84]	; 11ad8 <abort@plt+0x12b0>
   11a80:	push	{r4, r5, lr}
   11a84:	sub	sp, sp, #116	; 0x74
   11a88:	ldrh	r4, [r3]
   11a8c:	ldr	r2, [pc, #72]	; 11adc <abort@plt+0x12b4>
   11a90:	add	r4, r4, #1
   11a94:	ldr	r5, [r2]
   11a98:	sxth	r4, r4
   11a9c:	strh	r4, [r3]
   11aa0:	bl	107bc <getpid@plt>
   11aa4:	mov	r2, r5
   11aa8:	ldr	r1, [pc, #48]	; 11ae0 <abort@plt+0x12b8>
   11aac:	str	r4, [sp]
   11ab0:	mov	r3, r0
   11ab4:	add	r0, sp, #12
   11ab8:	bl	10810 <sprintf@plt>
   11abc:	add	r0, sp, #12
   11ac0:	bl	10768 <strdup@plt>
   11ac4:	mov	r4, r0
   11ac8:	bl	10774 <unlink@plt>
   11acc:	mov	r0, r4
   11ad0:	add	sp, sp, #116	; 0x74
   11ad4:	pop	{r4, r5, pc}
   11ad8:	strdeq	r3, [r2], -r8
   11adc:	andeq	r7, r2, r0, ror r5
   11ae0:	andeq	r2, r1, ip, ror r5
   11ae4:	push	{r4, lr}
   11ae8:	mov	r4, r0
   11aec:	bl	107d4 <strlen@plt>
   11af0:	sub	r0, r0, #1
   11af4:	sxth	r0, r0
   11af8:	cmp	r0, #0
   11afc:	bge	11b14 <abort@plt+0x12ec>
   11b00:	b	11b20 <abort@plt+0x12f8>
   11b04:	sub	r0, r0, #1
   11b08:	sxth	r0, r0
   11b0c:	cmn	r0, #1
   11b10:	beq	11b20 <abort@plt+0x12f8>
   11b14:	ldrb	r3, [r4, r0]
   11b18:	cmp	r3, #47	; 0x2f
   11b1c:	bne	11b04 <abort@plt+0x12dc>
   11b20:	add	r0, r0, #1
   11b24:	add	r0, r4, r0
   11b28:	pop	{r4, pc}
   11b2c:	push	{r4, lr}
   11b30:	mov	r0, #0
   11b34:	bl	118f4 <abort@plt+0x10cc>
   11b38:	ldr	r2, [pc, #52]	; 11b74 <abort@plt+0x134c>
   11b3c:	push	{r4, lr}
   11b40:	ldr	r2, [r2]
   11b44:	cmp	r2, #0
   11b48:	beq	11b54 <abort@plt+0x132c>
   11b4c:	blx	r2
   11b50:	bl	11b2c <abort@plt+0x1304>
   11b54:	ldr	r1, [pc, #28]	; 11b78 <abort@plt+0x1350>
   11b58:	ldr	r2, [pc, #28]	; 11b7c <abort@plt+0x1354>
   11b5c:	mov	r3, r0
   11b60:	ldr	r0, [r1]
   11b64:	ldr	r2, [r2]
   11b68:	ldr	r1, [pc, #16]	; 11b80 <abort@plt+0x1358>
   11b6c:	bl	107e0 <fprintf@plt>
   11b70:	b	11b50 <abort@plt+0x1328>
   11b74:	andeq	r7, r2, ip, ror #10
   11b78:	andeq	r3, r2, r0, lsl #1
   11b7c:	andeq	r7, r2, r0, ror r5
   11b80:	andeq	r2, r1, ip, lsl #11

00011b84 <error@@Base>:
   11b84:	ldr	r1, [pc, #36]	; 11bb0 <error@@Base+0x2c>
   11b88:	ldr	r2, [pc, #36]	; 11bb4 <error@@Base+0x30>
   11b8c:	mov	r3, r0
   11b90:	push	{r4, lr}
   11b94:	ldr	r0, [r1]
   11b98:	ldr	r2, [r2]
   11b9c:	ldr	r1, [pc, #20]	; 11bb8 <error@@Base+0x34>
   11ba0:	bl	107e0 <fprintf@plt>
   11ba4:	ldr	r3, [pc, #16]	; 11bbc <error@@Base+0x38>
   11ba8:	ldr	r0, [r3]
   11bac:	bl	118f4 <abort@plt+0x10cc>
   11bb0:	andeq	r3, r2, r0, lsl #1
   11bb4:	andeq	r7, r2, r0, ror r5
   11bb8:	muleq	r1, ip, r5
   11bbc:	andeq	r3, r2, r4, ror r0
   11bc0:	push	{r4, lr}
   11bc4:	bl	10720 <calloc@plt>
   11bc8:	cmp	r0, #0
   11bcc:	popne	{r4, pc}
   11bd0:	ldr	r0, [pc]	; 11bd8 <error@@Base+0x54>
   11bd4:	bl	11b84 <error@@Base>
   11bd8:	andeq	r2, r1, r4, lsr #11
   11bdc:	ldr	r3, [pc, #32]	; 11c04 <error@@Base+0x80>
   11be0:	ldrb	r2, [r3, #2]
   11be4:	cmp	r2, #0
   11be8:	beq	11bf0 <error@@Base+0x6c>
   11bec:	bx	lr
   11bf0:	push	{r4, lr}
   11bf4:	mov	r2, #1
   11bf8:	ldr	r0, [pc, #8]	; 11c08 <error@@Base+0x84>
   11bfc:	strb	r2, [r3, #2]
   11c00:	bl	11b84 <error@@Base>
   11c04:	strdeq	r3, [r2], -r8
   11c08:	andeq	r2, r1, r0, asr #11
   11c0c:	ldr	r3, [pc, #48]	; 11c44 <error@@Base+0xc0>
   11c10:	push	{lr}		; (str lr, [sp, #-4]!)
   11c14:	sub	sp, sp, #12
   11c18:	ldr	r2, [pc, #40]	; 11c48 <error@@Base+0xc4>
   11c1c:	str	r1, [sp]
   11c20:	ldr	r1, [r3]
   11c24:	ldr	r2, [r2]
   11c28:	mov	r3, r0
   11c2c:	mov	r0, r1
   11c30:	ldr	r1, [pc, #20]	; 11c4c <error@@Base+0xc8>
   11c34:	bl	107e0 <fprintf@plt>
   11c38:	ldr	r3, [pc, #16]	; 11c50 <error@@Base+0xcc>
   11c3c:	ldr	r0, [r3]
   11c40:	bl	118f4 <abort@plt+0x10cc>
   11c44:	andeq	r3, r2, r0, lsl #1
   11c48:	andeq	r7, r2, r0, ror r5
   11c4c:	ldrdeq	r2, [r1], -r0
   11c50:	andeq	r3, r2, r4, ror r0
   11c54:	subs	r2, r0, #0
   11c58:	push	{r4, r5, r6, lr}
   11c5c:	mov	r4, r1
   11c60:	beq	11c8c <error@@Base+0x108>
   11c64:	mov	r5, r2
   11c68:	bl	10744 <fopen@plt>
   11c6c:	cmp	r0, #0
   11c70:	popne	{r4, r5, r6, pc}
   11c74:	ldrb	r3, [r4]
   11c78:	mov	r1, r5
   11c7c:	cmp	r3, #119	; 0x77
   11c80:	beq	11ca4 <error@@Base+0x120>
   11c84:	ldr	r0, [pc, #32]	; 11cac <error@@Base+0x128>
   11c88:	bl	11c0c <error@@Base+0x88>
   11c8c:	ldrb	r3, [r1]
   11c90:	cmp	r3, #114	; 0x72
   11c94:	ldreq	r3, [pc, #20]	; 11cb0 <error@@Base+0x12c>
   11c98:	ldrne	r3, [pc, #20]	; 11cb4 <error@@Base+0x130>
   11c9c:	ldr	r0, [r3]
   11ca0:	pop	{r4, r5, r6, pc}
   11ca4:	ldr	r0, [pc, #12]	; 11cb8 <error@@Base+0x134>
   11ca8:	bl	11c0c <error@@Base+0x88>
   11cac:	strdeq	r2, [r1], -r8
   11cb0:	andeq	r3, r2, r8, lsl #1
   11cb4:	andeq	r3, r2, ip, lsl #1
   11cb8:	andeq	r2, r1, r0, ror #11
   11cbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cc0:	sub	sp, sp, #20
   11cc4:	ldr	r4, [r1]
   11cc8:	str	r0, [sp, #8]
   11ccc:	mov	r0, r4
   11cd0:	mov	r9, r1
   11cd4:	str	r2, [sp, #12]
   11cd8:	mov	r6, r3
   11cdc:	bl	107d4 <strlen@plt>
   11ce0:	sub	r0, r0, #1
   11ce4:	sxth	r0, r0
   11ce8:	cmp	r0, #0
   11cec:	bge	11d04 <error@@Base+0x180>
   11cf0:	b	11d10 <error@@Base+0x18c>
   11cf4:	sub	r0, r0, #1
   11cf8:	sxth	r0, r0
   11cfc:	cmn	r0, #1
   11d00:	beq	11d10 <error@@Base+0x18c>
   11d04:	ldrb	r3, [r4, r0]
   11d08:	cmp	r3, #47	; 0x2f
   11d0c:	bne	11cf4 <error@@Base+0x170>
   11d10:	ldr	r3, [pc, #460]	; 11ee4 <error@@Base+0x360>
   11d14:	add	r0, r0, #1
   11d18:	add	r4, r4, r0
   11d1c:	ldr	r1, [pc, #452]	; 11ee8 <error@@Base+0x364>
   11d20:	mov	r0, #2
   11d24:	str	r4, [r3]
   11d28:	bl	107a4 <__sysv_signal@plt>
   11d2c:	ldr	r1, [pc, #436]	; 11ee8 <error@@Base+0x364>
   11d30:	mov	r0, #15
   11d34:	bl	107a4 <__sysv_signal@plt>
   11d38:	ldr	r3, [sp, #8]
   11d3c:	ldr	fp, [r3]
   11d40:	cmp	fp, #1
   11d44:	beq	11e78 <error@@Base+0x2f4>
   11d48:	movgt	sl, #1
   11d4c:	mov	r7, #0
   11d50:	movgt	r4, sl
   11d54:	bgt	11d7c <error@@Base+0x1f8>
   11d58:	b	11e88 <error@@Base+0x304>
   11d5c:	add	r3, r7, #1
   11d60:	str	r5, [r9, r7, lsl #2]
   11d64:	sxth	r7, r3
   11d68:	add	r4, r4, #1
   11d6c:	sxth	r4, r4
   11d70:	cmp	r4, fp
   11d74:	mov	sl, r4
   11d78:	bge	11e88 <error@@Base+0x304>
   11d7c:	ldr	r5, [r9, r4, lsl #2]
   11d80:	lsl	r3, r4, #2
   11d84:	ldrb	r2, [r5]
   11d88:	cmp	r2, #45	; 0x2d
   11d8c:	bne	11d5c <error@@Base+0x1d8>
   11d90:	ldrb	r8, [r5, #1]
   11d94:	str	r3, [sp, #4]
   11d98:	cmp	r8, #0
   11d9c:	beq	11d5c <error@@Base+0x1d8>
   11da0:	mov	r0, r5
   11da4:	bl	107d4 <strlen@plt>
   11da8:	mov	r1, r5
   11dac:	mov	r2, r0
   11db0:	ldr	r0, [pc, #308]	; 11eec <error@@Base+0x368>
   11db4:	bl	1081c <strncmp@plt>
   11db8:	cmp	r0, #0
   11dbc:	beq	11ed0 <error@@Base+0x34c>
   11dc0:	add	sl, sl, #1
   11dc4:	cmp	sl, fp
   11dc8:	movge	r0, #0
   11dcc:	ldrlt	r3, [sp, #4]
   11dd0:	addlt	r3, r9, r3
   11dd4:	ldrlt	r0, [r3, #4]
   11dd8:	cmp	r6, #0
   11ddc:	beq	11e20 <error@@Base+0x29c>
   11de0:	ldrb	r3, [r6]
   11de4:	cmp	r3, #0
   11de8:	beq	11e20 <error@@Base+0x29c>
   11dec:	cmp	r3, r8
   11df0:	beq	11e2c <error@@Base+0x2a8>
   11df4:	mov	r3, #0
   11df8:	b	11e04 <error@@Base+0x280>
   11dfc:	cmp	r8, r1
   11e00:	beq	11e30 <error@@Base+0x2ac>
   11e04:	add	r3, r3, #1
   11e08:	sxth	r3, r3
   11e0c:	add	r2, r3, r3, lsl #1
   11e10:	ldrb	r1, [r6, r2, lsl #2]
   11e14:	add	r2, r6, r2, lsl #2
   11e18:	cmp	r1, #0
   11e1c:	bne	11dfc <error@@Base+0x278>
   11e20:	mov	r1, r5
   11e24:	ldr	r0, [pc, #196]	; 11ef0 <error@@Base+0x36c>
   11e28:	bl	11c0c <error@@Base+0x88>
   11e2c:	mov	r2, r6
   11e30:	ldr	r3, [r2, #4]
   11e34:	cmp	r3, #0
   11e38:	beq	11e98 <error@@Base+0x314>
   11e3c:	ldrb	r1, [r5, #2]
   11e40:	cmp	r0, #0
   11e44:	cmpeq	r1, #0
   11e48:	beq	11e98 <error@@Base+0x314>
   11e4c:	ldr	r2, [r3]
   11e50:	cmp	r2, #0
   11e54:	bne	11ed8 <error@@Base+0x354>
   11e58:	cmp	r1, #0
   11e5c:	addne	r0, r5, #2
   11e60:	str	r0, [r3]
   11e64:	ldrb	r3, [r5, #2]
   11e68:	cmp	r3, #0
   11e6c:	addeq	r4, r4, #1
   11e70:	sxtheq	r4, r4
   11e74:	b	11d68 <error@@Base+0x1e4>
   11e78:	ldr	r3, [pc, #116]	; 11ef4 <error@@Base+0x370>
   11e7c:	ldrb	r7, [r3, #4]
   11e80:	cmp	r7, #0
   11e84:	bne	11ed0 <error@@Base+0x34c>
   11e88:	ldr	r3, [sp, #8]
   11e8c:	str	r7, [r3]
   11e90:	add	sp, sp, #20
   11e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e98:	ldr	r3, [r2, #8]
   11e9c:	cmp	r3, #0
   11ea0:	beq	11e20 <error@@Base+0x29c>
   11ea4:	ldrb	r2, [r5, #2]
   11ea8:	cmp	r2, #0
   11eac:	bne	11e20 <error@@Base+0x29c>
   11eb0:	ldrb	r2, [r3]
   11eb4:	cmp	r2, #0
   11eb8:	bne	11ed8 <error@@Base+0x354>
   11ebc:	mov	r2, #1
   11ec0:	strb	r2, [r3]
   11ec4:	ldr	r3, [sp, #8]
   11ec8:	ldr	fp, [r3]
   11ecc:	b	11d68 <error@@Base+0x1e4>
   11ed0:	ldr	r0, [sp, #12]
   11ed4:	bl	11b38 <abort@plt+0x1310>
   11ed8:	mov	r1, r5
   11edc:	ldr	r0, [pc, #20]	; 11ef8 <error@@Base+0x374>
   11ee0:	bl	11c0c <error@@Base+0x88>
   11ee4:	andeq	r7, r2, r0, ror r5
   11ee8:	ldrdeq	r1, [r1], -ip
   11eec:	andeq	r2, r1, ip, lsl #12
   11ef0:	andeq	r2, r1, r4, lsl r6
   11ef4:	andeq	r3, r2, r4, ror r0
   11ef8:	andeq	r2, r1, r4, lsr #12
   11efc:	ldr	r3, [pc, #44]	; 11f30 <error@@Base+0x3ac>
   11f00:	push	{lr}		; (str lr, [sp, #-4]!)
   11f04:	sub	sp, sp, #12
   11f08:	ldr	r2, [pc, #36]	; 11f34 <error@@Base+0x3b0>
   11f0c:	str	r1, [sp]
   11f10:	ldr	r1, [r3]
   11f14:	ldr	r2, [r2]
   11f18:	mov	r3, r0
   11f1c:	mov	r0, r1
   11f20:	ldr	r1, [pc, #16]	; 11f38 <error@@Base+0x3b4>
   11f24:	bl	107e0 <fprintf@plt>
   11f28:	add	sp, sp, #12
   11f2c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f30:	andeq	r3, r2, r0, lsl #1
   11f34:	andeq	r7, r2, r0, ror r5
   11f38:	ldrdeq	r2, [r1], -r0
   11f3c:	mov	r3, #0
   11f40:	str	r3, [r0, #4]
   11f44:	str	r3, [r0]
   11f48:	str	r3, [r0, #8]
   11f4c:	str	r3, [r0, #12]
   11f50:	bx	lr
   11f54:	ldr	r3, [r0]
   11f58:	mov	r2, #0
   11f5c:	cmp	r3, r2
   11f60:	push	{r4, lr}
   11f64:	mov	r4, r0
   11f68:	stm	r1, {r2, r3}
   11f6c:	str	r1, [r0]
   11f70:	streq	r1, [r0, #4]
   11f74:	ldr	r0, [r0, #8]
   11f78:	strne	r1, [r3]
   11f7c:	cmp	r0, #0
   11f80:	beq	11f90 <error@@Base+0x40c>
   11f84:	bl	10750 <free@plt>
   11f88:	mov	r3, #0
   11f8c:	str	r3, [r4, #8]
   11f90:	ldr	r3, [r4, #12]
   11f94:	add	r3, r3, #1
   11f98:	str	r3, [r4, #12]
   11f9c:	pop	{r4, pc}
   11fa0:	ldr	r3, [r0, #4]
   11fa4:	mov	r2, #0
   11fa8:	cmp	r3, r2
   11fac:	push	{r4, lr}
   11fb0:	mov	r4, r0
   11fb4:	str	r3, [r1]
   11fb8:	str	r2, [r1, #4]
   11fbc:	streq	r1, [r0]
   11fc0:	ldr	r0, [r0, #8]
   11fc4:	strne	r1, [r3, #4]
   11fc8:	cmp	r0, #0
   11fcc:	str	r1, [r4, #4]
   11fd0:	beq	11fe0 <error@@Base+0x45c>
   11fd4:	bl	10750 <free@plt>
   11fd8:	mov	r3, #0
   11fdc:	str	r3, [r4, #8]
   11fe0:	ldr	r3, [r4, #12]
   11fe4:	add	r3, r3, #1
   11fe8:	str	r3, [r4, #12]
   11fec:	pop	{r4, pc}
   11ff0:	ldr	r3, [r2]
   11ff4:	push	{r4, lr}
   11ff8:	cmp	r3, #0
   11ffc:	str	r3, [r1]
   12000:	str	r2, [r1, #4]
   12004:	mov	r4, r0
   12008:	streq	r1, [r0]
   1200c:	ldr	r0, [r0, #8]
   12010:	strne	r1, [r3, #4]
   12014:	cmp	r0, #0
   12018:	str	r1, [r2]
   1201c:	beq	1202c <error@@Base+0x4a8>
   12020:	bl	10750 <free@plt>
   12024:	mov	r3, #0
   12028:	str	r3, [r4, #8]
   1202c:	ldr	r3, [r4, #12]
   12030:	add	r3, r3, #1
   12034:	str	r3, [r4, #12]
   12038:	pop	{r4, pc}
   1203c:	ldr	r3, [r1, #4]
   12040:	push	{r4, lr}
   12044:	cmp	r3, #0
   12048:	stm	r2, {r1, r3}
   1204c:	mov	r4, r0
   12050:	str	r2, [r1, #4]
   12054:	streq	r2, [r0, #4]
   12058:	ldr	r0, [r0, #8]
   1205c:	strne	r2, [r3]
   12060:	cmp	r0, #0
   12064:	beq	12074 <error@@Base+0x4f0>
   12068:	bl	10750 <free@plt>
   1206c:	mov	r3, #0
   12070:	str	r3, [r4, #8]
   12074:	ldr	r3, [r4, #12]
   12078:	add	r3, r3, #1
   1207c:	str	r3, [r4, #12]
   12080:	pop	{r4, pc}
   12084:	ldr	r3, [r1]
   12088:	ldr	r2, [r1, #4]
   1208c:	cmp	r3, #0
   12090:	push	{r4, r5, r6, lr}
   12094:	mov	r4, r0
   12098:	strne	r2, [r3, #4]
   1209c:	ldrne	r2, [r1, #4]
   120a0:	streq	r2, [r0]
   120a4:	cmp	r2, #0
   120a8:	streq	r3, [r0, #4]
   120ac:	ldr	r0, [r0, #8]
   120b0:	mov	r5, #0
   120b4:	strne	r3, [r2]
   120b8:	cmp	r0, r5
   120bc:	str	r5, [r1, #4]
   120c0:	str	r5, [r1]
   120c4:	beq	120d0 <error@@Base+0x54c>
   120c8:	bl	10750 <free@plt>
   120cc:	str	r5, [r4, #8]
   120d0:	ldr	r3, [r4, #12]
   120d4:	sub	r3, r3, #1
   120d8:	str	r3, [r4, #12]
   120dc:	pop	{r4, r5, r6, pc}
   120e0:	ldr	r3, [r0, #8]
   120e4:	cmp	r3, #0
   120e8:	bxne	lr
   120ec:	ldr	r3, [r0, #12]
   120f0:	cmp	r3, #0
   120f4:	bxeq	lr
   120f8:	push	{r4, lr}
   120fc:	mov	r1, #4
   12100:	mov	r4, r0
   12104:	mov	r0, r3
   12108:	bl	11bc0 <error@@Base+0x3c>
   1210c:	ldr	r3, [r4]
   12110:	cmp	r3, #0
   12114:	str	r0, [r4, #8]
   12118:	popeq	{r4, pc}
   1211c:	sub	r0, r0, #4
   12120:	str	r3, [r0, #4]!
   12124:	ldr	r3, [r3, #4]
   12128:	cmp	r3, #0
   1212c:	bne	12120 <error@@Base+0x59c>
   12130:	pop	{r4, pc}
   12134:	push	{r4, r5, r6, r7, r8, lr}
   12138:	ldr	r4, [r0]
   1213c:	cmp	r4, #0
   12140:	popeq	{r4, r5, r6, r7, r8, pc}
   12144:	mov	r6, r1
   12148:	mov	r5, r0
   1214c:	mov	r7, #0
   12150:	ldr	r3, [r4]
   12154:	ldr	r2, [r4, #4]
   12158:	cmp	r3, #0
   1215c:	strne	r2, [r3, #4]
   12160:	ldrne	r2, [r4, #4]
   12164:	ldr	r0, [r5, #8]
   12168:	streq	r2, [r5]
   1216c:	cmp	r2, #0
   12170:	strne	r3, [r2]
   12174:	streq	r3, [r5, #4]
   12178:	cmp	r0, #0
   1217c:	str	r7, [r4, #4]
   12180:	str	r7, [r4]
   12184:	beq	12190 <error@@Base+0x60c>
   12188:	bl	10750 <free@plt>
   1218c:	str	r7, [r5, #8]
   12190:	ldr	r3, [r5, #12]
   12194:	mov	r0, r4
   12198:	sub	r3, r3, #1
   1219c:	str	r3, [r5, #12]
   121a0:	blx	r6
   121a4:	ldr	r4, [r5]
   121a8:	cmp	r4, #0
   121ac:	bne	12150 <error@@Base+0x5cc>
   121b0:	pop	{r4, r5, r6, r7, r8, pc}
   121b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121b8:	sub	sp, sp, #12
   121bc:	lsl	r3, r1, #2
   121c0:	str	r1, [sp]
   121c4:	str	r3, [sp, #4]
   121c8:	ldr	r5, [pc, #344]	; 12328 <error@@Base+0x7a4>
   121cc:	ldr	r3, [sp]
   121d0:	mov	r9, r0
   121d4:	ldr	r1, [r5]
   121d8:	cmp	r9, r3
   121dc:	movlt	r4, r3
   121e0:	ldr	r7, [r1, r9, lsl #2]
   121e4:	movlt	r8, r9
   121e8:	bge	12314 <error@@Base+0x790>
   121ec:	lsl	r6, r4, #2
   121f0:	b	121f8 <error@@Base+0x674>
   121f4:	ldr	r1, [r5]
   121f8:	ldr	r1, [r1, r6]
   121fc:	ldr	r3, [r5, #4]
   12200:	mov	r0, r7
   12204:	blx	r3
   12208:	cmp	r0, #0
   1220c:	bge	1225c <error@@Base+0x6d8>
   12210:	sub	r4, r4, #1
   12214:	cmp	r4, r8
   12218:	sub	r6, r6, #4
   1221c:	bgt	121f4 <error@@Base+0x670>
   12220:	bne	12258 <error@@Base+0x6d4>
   12224:	ldr	r1, [r5]
   12228:	mov	fp, r4
   1222c:	add	r0, r1, fp, lsl #2
   12230:	sub	r1, fp, #1
   12234:	cmp	r9, r1
   12238:	str	r7, [r0]
   1223c:	blt	122f8 <error@@Base+0x774>
   12240:	ldr	r3, [sp]
   12244:	add	r9, r4, #1
   12248:	cmp	r9, r3
   1224c:	blt	121d4 <error@@Base+0x650>
   12250:	add	sp, sp, #12
   12254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12258:	lsl	r6, r4, #2
   1225c:	ldr	r1, [r5]
   12260:	add	fp, r8, #1
   12264:	cmp	fp, r4
   12268:	ldr	r2, [r1, r6]
   1226c:	add	r0, r1, r6
   12270:	str	r2, [r1, r8, lsl #2]
   12274:	lsl	r8, r8, #2
   12278:	bge	12304 <error@@Base+0x780>
   1227c:	add	sl, r8, #4
   12280:	b	12298 <error@@Base+0x714>
   12284:	add	fp, fp, #1
   12288:	cmp	fp, r4
   1228c:	add	sl, sl, #4
   12290:	beq	122dc <error@@Base+0x758>
   12294:	ldr	r1, [r5]
   12298:	ldr	r1, [r1, sl]
   1229c:	ldr	r8, [r5, #4]
   122a0:	mov	r0, r7
   122a4:	blx	r8
   122a8:	cmp	r0, #0
   122ac:	bgt	12284 <error@@Base+0x700>
   122b0:	ldr	r1, [r5]
   122b4:	mov	r8, fp
   122b8:	add	r0, r1, r6
   122bc:	sub	r4, r4, #1
   122c0:	ldr	r2, [r1, sl]
   122c4:	cmp	r4, fp
   122c8:	str	r2, [r0]
   122cc:	bgt	121ec <error@@Base+0x668>
   122d0:	mov	fp, r4
   122d4:	mov	r4, r8
   122d8:	b	1222c <error@@Base+0x6a8>
   122dc:	ldr	r0, [r5]
   122e0:	add	r0, r0, r6
   122e4:	sub	r1, fp, #1
   122e8:	cmp	r9, r1
   122ec:	mov	r4, fp
   122f0:	str	r7, [r0]
   122f4:	bge	12240 <error@@Base+0x6bc>
   122f8:	mov	r0, r9
   122fc:	bl	121b4 <error@@Base+0x630>
   12300:	b	12240 <error@@Base+0x6bc>
   12304:	beq	122e4 <error@@Base+0x760>
   12308:	lsl	sl, fp, #2
   1230c:	mov	r8, fp
   12310:	b	122bc <error@@Base+0x738>
   12314:	mov	fp, r3
   12318:	ldr	r3, [sp, #4]
   1231c:	mov	r4, r9
   12320:	add	r0, r1, r3
   12324:	b	12230 <error@@Base+0x6ac>
   12328:	strdeq	r3, [r2], -ip
   1232c:	cmp	r0, #1
   12330:	mov	ip, r1
   12334:	bxle	lr
   12338:	ldr	r3, [pc, #16]	; 12350 <error@@Base+0x7cc>
   1233c:	sub	r1, r0, #1
   12340:	mov	r0, #0
   12344:	str	ip, [r3]
   12348:	str	r2, [r3, #4]
   1234c:	b	121b4 <error@@Base+0x630>
   12350:	strdeq	r3, [r2], -ip
   12354:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12358:	mov	r7, r0
   1235c:	ldr	r6, [pc, #72]	; 123ac <error@@Base+0x828>
   12360:	ldr	r5, [pc, #72]	; 123b0 <error@@Base+0x82c>
   12364:	add	r6, pc, r6
   12368:	add	r5, pc, r5
   1236c:	sub	r6, r6, r5
   12370:	mov	r8, r1
   12374:	mov	r9, r2
   12378:	bl	10700 <calloc@plt-0x20>
   1237c:	asrs	r6, r6, #2
   12380:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12384:	mov	r4, #0
   12388:	add	r4, r4, #1
   1238c:	ldr	r3, [r5], #4
   12390:	mov	r2, r9
   12394:	mov	r1, r8
   12398:	mov	r0, r7
   1239c:	blx	r3
   123a0:	cmp	r6, r4
   123a4:	bne	12388 <error@@Base+0x804>
   123a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   123ac:	muleq	r1, r4, fp
   123b0:	andeq	r0, r1, ip, lsl #23
   123b4:	bx	lr

Disassembly of section .fini:

000123b8 <.fini>:
   123b8:	push	{r3, lr}
   123bc:	pop	{r3, pc}
