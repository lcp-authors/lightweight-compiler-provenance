
../repos/takev-yyast-2f13a16/yyast/yadump:     file format elf32-littlearm


Disassembly of section .init:

000104ac <.init>:
   104ac:	push	{r3, lr}
   104b0:	bl	105bc <close@plt+0x48>
   104b4:	pop	{r3, pc}

Disassembly of section .plt:

000104b8 <free@plt-0x14>:
   104b8:	push	{lr}		; (str lr, [sp, #-4]!)
   104bc:	ldr	lr, [pc, #4]	; 104c8 <free@plt-0x4>
   104c0:	add	lr, pc, lr
   104c4:	ldr	pc, [lr, #8]!
   104c8:	andeq	r0, r1, r8, lsr fp

000104cc <free@plt>:
   104cc:	add	ip, pc, #0, 12
   104d0:	add	ip, ip, #16, 20	; 0x10000
   104d4:	ldr	pc, [ip, #2872]!	; 0xb38

000104d8 <strndup@plt>:
   104d8:	add	ip, pc, #0, 12
   104dc:	add	ip, ip, #16, 20	; 0x10000
   104e0:	ldr	pc, [ip, #2864]!	; 0xb30

000104e4 <perror@plt>:
   104e4:	add	ip, pc, #0, 12
   104e8:	add	ip, ip, #16, 20	; 0x10000
   104ec:	ldr	pc, [ip, #2856]!	; 0xb28

000104f0 <fwrite@plt>:
   104f0:	add	ip, pc, #0, 12
   104f4:	add	ip, ip, #16, 20	; 0x10000
   104f8:	ldr	pc, [ip, #2848]!	; 0xb20

000104fc <__libc_start_main@plt>:
   104fc:	add	ip, pc, #0, 12
   10500:	add	ip, ip, #16, 20	; 0x10000
   10504:	ldr	pc, [ip, #2840]!	; 0xb18

00010508 <__fxstat@plt>:
   10508:	add	ip, pc, #0, 12
   1050c:	add	ip, ip, #16, 20	; 0x10000
   10510:	ldr	pc, [ip, #2832]!	; 0xb10

00010514 <__gmon_start__@plt>:
   10514:	add	ip, pc, #0, 12
   10518:	add	ip, ip, #16, 20	; 0x10000
   1051c:	ldr	pc, [ip, #2824]!	; 0xb08

00010520 <open@plt>:
   10520:	add	ip, pc, #0, 12
   10524:	add	ip, ip, #16, 20	; 0x10000
   10528:	ldr	pc, [ip, #2816]!	; 0xb00

0001052c <exit@plt>:
   1052c:	add	ip, pc, #0, 12
   10530:	add	ip, ip, #16, 20	; 0x10000
   10534:	ldr	pc, [ip, #2808]!	; 0xaf8

00010538 <mmap@plt>:
   10538:	add	ip, pc, #0, 12
   1053c:	add	ip, ip, #16, 20	; 0x10000
   10540:	ldr	pc, [ip, #2800]!	; 0xaf0

00010544 <fprintf@plt>:
   10544:	add	ip, pc, #0, 12
   10548:	add	ip, ip, #16, 20	; 0x10000
   1054c:	ldr	pc, [ip, #2792]!	; 0xae8

00010550 <munmap@plt>:
   10550:	add	ip, pc, #0, 12
   10554:	add	ip, ip, #16, 20	; 0x10000
   10558:	ldr	pc, [ip, #2784]!	; 0xae0

0001055c <fputc@plt>:
   1055c:	add	ip, pc, #0, 12
   10560:	add	ip, ip, #16, 20	; 0x10000
   10564:	ldr	pc, [ip, #2776]!	; 0xad8

00010568 <abort@plt>:
   10568:	add	ip, pc, #0, 12
   1056c:	add	ip, ip, #16, 20	; 0x10000
   10570:	ldr	pc, [ip, #2768]!	; 0xad0

00010574 <close@plt>:
   10574:	add	ip, pc, #0, 12
   10578:	add	ip, ip, #16, 20	; 0x10000
   1057c:	ldr	pc, [ip, #2760]!	; 0xac8

Disassembly of section .text:

00010580 <.text>:
   10580:	mov	fp, #0
   10584:	mov	lr, #0
   10588:	pop	{r1}		; (ldr r1, [sp], #4)
   1058c:	mov	r2, sp
   10590:	push	{r2}		; (str r2, [sp, #-4]!)
   10594:	push	{r0}		; (str r0, [sp, #-4]!)
   10598:	ldr	ip, [pc, #16]	; 105b0 <close@plt+0x3c>
   1059c:	push	{ip}		; (str ip, [sp, #-4]!)
   105a0:	ldr	r0, [pc, #12]	; 105b4 <close@plt+0x40>
   105a4:	ldr	r3, [pc, #12]	; 105b8 <close@plt+0x44>
   105a8:	bl	104fc <__libc_start_main@plt>
   105ac:	bl	10568 <abort@plt>
   105b0:	andeq	r0, r1, r4, lsr #25
   105b4:	andeq	r0, r1, ip, lsl #22
   105b8:	andeq	r0, r1, r4, asr #24
   105bc:	ldr	r3, [pc, #20]	; 105d8 <close@plt+0x64>
   105c0:	ldr	r2, [pc, #20]	; 105dc <close@plt+0x68>
   105c4:	add	r3, pc, r3
   105c8:	ldr	r2, [r3, r2]
   105cc:	cmp	r2, #0
   105d0:	bxeq	lr
   105d4:	b	10514 <__gmon_start__@plt>
   105d8:	andeq	r0, r1, r4, lsr sl
   105dc:	andeq	r0, r0, r8, asr #32
   105e0:	ldr	r3, [pc, #28]	; 10604 <close@plt+0x90>
   105e4:	ldr	r0, [pc, #28]	; 10608 <close@plt+0x94>
   105e8:	sub	r3, r3, r0
   105ec:	cmp	r3, #6
   105f0:	bxls	lr
   105f4:	ldr	r3, [pc, #16]	; 1060c <close@plt+0x98>
   105f8:	cmp	r3, #0
   105fc:	bxeq	lr
   10600:	bx	r3
   10604:	andeq	r1, r2, r7, asr r0
   10608:	andeq	r1, r2, r4, asr r0
   1060c:	andeq	r0, r0, r0
   10610:	ldr	r1, [pc, #36]	; 1063c <close@plt+0xc8>
   10614:	ldr	r0, [pc, #36]	; 10640 <close@plt+0xcc>
   10618:	sub	r1, r1, r0
   1061c:	asr	r1, r1, #2
   10620:	add	r1, r1, r1, lsr #31
   10624:	asrs	r1, r1, #1
   10628:	bxeq	lr
   1062c:	ldr	r3, [pc, #16]	; 10644 <close@plt+0xd0>
   10630:	cmp	r3, #0
   10634:	bxeq	lr
   10638:	bx	r3
   1063c:	andeq	r1, r2, r4, asr r0
   10640:	andeq	r1, r2, r4, asr r0
   10644:	andeq	r0, r0, r0
   10648:	push	{r4, lr}
   1064c:	ldr	r4, [pc, #24]	; 1066c <close@plt+0xf8>
   10650:	ldrb	r3, [r4]
   10654:	cmp	r3, #0
   10658:	popne	{r4, pc}
   1065c:	bl	105e0 <close@plt+0x6c>
   10660:	mov	r3, #1
   10664:	strb	r3, [r4]
   10668:	pop	{r4, pc}
   1066c:	andeq	r1, r2, r0, rrx
   10670:	ldr	r0, [pc, #40]	; 106a0 <close@plt+0x12c>
   10674:	ldr	r3, [r0]
   10678:	cmp	r3, #0
   1067c:	bne	10684 <close@plt+0x110>
   10680:	b	10610 <close@plt+0x9c>
   10684:	ldr	r3, [pc, #24]	; 106a4 <close@plt+0x130>
   10688:	cmp	r3, #0
   1068c:	beq	10680 <close@plt+0x10c>
   10690:	push	{r4, lr}
   10694:	blx	r3
   10698:	pop	{r4, lr}
   1069c:	b	10610 <close@plt+0x9c>
   106a0:	andeq	r0, r2, r4, lsl pc
   106a4:	andeq	r0, r0, r0
   106a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   106ac:	subs	r5, r0, #0
   106b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   106b4:	mov	r4, #0
   106b8:	ldr	r9, [pc, #44]	; 106ec <close@plt+0x178>
   106bc:	ldr	r8, [pc, #44]	; 106f0 <close@plt+0x17c>
   106c0:	mov	r7, #2
   106c4:	mov	r6, #1
   106c8:	ldr	r3, [r9]
   106cc:	mov	r2, r7
   106d0:	mov	r1, r6
   106d4:	mov	r0, r8
   106d8:	bl	104f0 <fwrite@plt>
   106dc:	add	r4, r4, #1
   106e0:	cmp	r5, r4
   106e4:	bne	106c8 <close@plt+0x154>
   106e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   106ec:	andeq	r1, r2, ip, asr r0
   106f0:			; <UNDEFINED> instruction: 0x00010cb4
   106f4:	push	{lr}		; (str lr, [sp, #-4]!)
   106f8:	sub	sp, sp, #28
   106fc:	lsr	r3, r1, #16
   10700:	ldr	r2, [pc, #88]	; 10760 <close@plt+0x1ec>
   10704:	ldr	lr, [r2]
   10708:	uxtb	r2, r0
   1070c:	str	r2, [sp, #20]
   10710:	lsr	r2, r0, #8
   10714:	uxtb	r2, r2
   10718:	str	r2, [sp, #16]
   1071c:	lsr	r2, r0, #16
   10720:	uxtb	r2, r2
   10724:	str	r2, [sp, #12]
   10728:	lsr	ip, r0, #24
   1072c:	str	ip, [sp, #8]
   10730:	uxtb	r2, r1
   10734:	str	r2, [sp, #4]
   10738:	lsr	r2, r1, #8
   1073c:	uxtb	r2, r2
   10740:	str	r2, [sp]
   10744:	uxtb	r3, r3
   10748:	lsr	r2, r1, #24
   1074c:	ldr	r1, [pc, #16]	; 10764 <close@plt+0x1f0>
   10750:	mov	r0, lr
   10754:	bl	10544 <fprintf@plt>
   10758:	add	sp, sp, #28
   1075c:	pop	{pc}		; (ldr pc, [sp], #4)
   10760:	andeq	r1, r2, ip, asr r0
   10764:			; <UNDEFINED> instruction: 0x00010cb8
   10768:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1076c:	sub	sp, sp, #8
   10770:	cmp	r1, #31
   10774:	bls	1083c <close@plt+0x2c8>
   10778:	mov	r4, r0
   1077c:	mov	r8, r2
   10780:	ldr	r6, [r0]
   10784:	rev	r6, r6
   10788:	ldr	r7, [r0, #4]
   1078c:	rev	r7, r7
   10790:	ldrb	r9, [r0, #31]
   10794:	ldr	r3, [r0, #16]
   10798:	rev	r3, r3
   1079c:	ldr	r2, [r0, #20]
   107a0:	rev	ip, r2
   107a4:	ldr	r2, [r0, #24]
   107a8:	rev	r2, r2
   107ac:	ldr	r5, [r0, #12]
   107b0:	rev	r5, r5
   107b4:	sub	r5, r5, #32
   107b8:	cmp	r1, r5
   107bc:	bcc	1085c <close@plt+0x2e8>
   107c0:	cmn	r2, #1
   107c4:	beq	10884 <close@plt+0x310>
   107c8:	ldr	r1, [pc, #764]	; 10acc <close@plt+0x558>
   107cc:	ldr	r0, [r1]
   107d0:	str	ip, [sp]
   107d4:	ldr	r1, [pc, #756]	; 10ad0 <close@plt+0x55c>
   107d8:	bl	10544 <fprintf@plt>
   107dc:	ldr	sl, [pc, #744]	; 10acc <close@plt+0x558>
   107e0:	mov	r2, r5
   107e4:	mov	r3, #0
   107e8:	ldr	r1, [pc, #740]	; 10ad4 <close@plt+0x560>
   107ec:	ldr	r0, [sl]
   107f0:	bl	10544 <fprintf@plt>
   107f4:	mov	r0, r8
   107f8:	bl	106a8 <close@plt+0x134>
   107fc:	ldr	r1, [sl]
   10800:	mov	r0, #32
   10804:	bl	1055c <fputc@plt>
   10808:	mov	r0, r7
   1080c:	mov	r1, r6
   10810:	bl	106f4 <close@plt+0x180>
   10814:	cmp	r9, #6
   10818:	ldrls	pc, [pc, r9, lsl #2]
   1081c:	b	10ab0 <close@plt+0x53c>
   10820:	andeq	r0, r1, r8, asr #20
   10824:			; <UNDEFINED> instruction: 0x00010ab0
   10828:	andeq	r0, r1, r4, ror #20
   1082c:	andeq	r0, r1, r4, lsl #20
   10830:	andeq	r0, r1, r0, lsr #17
   10834:	andeq	r0, r1, r4, lsl r9
   10838:	andeq	r0, r1, r8, lsl #19
   1083c:	ldr	r3, [pc, #648]	; 10acc <close@plt+0x558>
   10840:	ldr	r3, [r3]
   10844:	mov	r2, #39	; 0x27
   10848:	mov	r1, #1
   1084c:	ldr	r0, [pc, #644]	; 10ad8 <close@plt+0x564>
   10850:	bl	104f0 <fwrite@plt>
   10854:	mov	r0, #1
   10858:	bl	1052c <exit@plt>
   1085c:	mov	r3, #0
   10860:	str	r1, [sp]
   10864:	str	r3, [sp, #4]
   10868:	mov	r2, r5
   1086c:	ldr	r1, [pc, #616]	; 10adc <close@plt+0x568>
   10870:	ldr	r0, [pc, #596]	; 10acc <close@plt+0x558>
   10874:	ldr	r0, [r0]
   10878:	bl	10544 <fprintf@plt>
   1087c:	mov	r0, #1
   10880:	bl	1052c <exit@plt>
   10884:	ldr	r3, [pc, #576]	; 10acc <close@plt+0x558>
   10888:	ldr	r3, [r3]
   1088c:	mov	r2, #11
   10890:	mov	r1, #1
   10894:	ldr	r0, [pc, #580]	; 10ae0 <close@plt+0x56c>
   10898:	bl	104f0 <fwrite@plt>
   1089c:	b	107dc <close@plt+0x268>
   108a0:	cmp	r5, #8
   108a4:	beq	108c0 <close@plt+0x34c>
   108a8:	mov	r2, r5
   108ac:	ldr	r1, [pc, #560]	; 10ae4 <close@plt+0x570>
   108b0:	ldr	r3, [pc, #532]	; 10acc <close@plt+0x558>
   108b4:	ldr	r0, [r3]
   108b8:	bl	10544 <fprintf@plt>
   108bc:	b	10a30 <close@plt+0x4bc>
   108c0:	ldrb	r3, [r4, #32]
   108c4:	ldrb	r2, [r4, #33]	; 0x21
   108c8:	orr	r3, r3, r2, lsl #8
   108cc:	ldrb	r2, [r4, #34]	; 0x22
   108d0:	orr	r3, r3, r2, lsl #16
   108d4:	ldrb	r2, [r4, #35]	; 0x23
   108d8:	orr	r3, r3, r2, lsl #24
   108dc:	ldrb	r2, [r4, #36]	; 0x24
   108e0:	ldrb	r1, [r4, #37]	; 0x25
   108e4:	orr	r2, r2, r1, lsl #8
   108e8:	ldrb	r1, [r4, #38]	; 0x26
   108ec:	orr	r2, r2, r1, lsl #16
   108f0:	ldrb	r1, [r4, #39]	; 0x27
   108f4:	orr	r2, r2, r1, lsl #24
   108f8:	rev	r2, r2
   108fc:	rev	r3, r3
   10900:	ldr	r1, [pc, #480]	; 10ae8 <close@plt+0x574>
   10904:	ldr	r0, [pc, #448]	; 10acc <close@plt+0x558>
   10908:	ldr	r0, [r0]
   1090c:	bl	10544 <fprintf@plt>
   10910:	b	10a30 <close@plt+0x4bc>
   10914:	cmp	r5, #8
   10918:	beq	10934 <close@plt+0x3c0>
   1091c:	mov	r2, r5
   10920:	ldr	r1, [pc, #452]	; 10aec <close@plt+0x578>
   10924:	ldr	r3, [pc, #416]	; 10acc <close@plt+0x558>
   10928:	ldr	r0, [r3]
   1092c:	bl	10544 <fprintf@plt>
   10930:	b	10a30 <close@plt+0x4bc>
   10934:	ldrb	r3, [r4, #32]
   10938:	ldrb	r2, [r4, #33]	; 0x21
   1093c:	orr	r3, r3, r2, lsl #8
   10940:	ldrb	r2, [r4, #34]	; 0x22
   10944:	orr	r3, r3, r2, lsl #16
   10948:	ldrb	r2, [r4, #35]	; 0x23
   1094c:	orr	r3, r3, r2, lsl #24
   10950:	ldrb	r2, [r4, #36]	; 0x24
   10954:	ldrb	r1, [r4, #37]	; 0x25
   10958:	orr	r2, r2, r1, lsl #8
   1095c:	ldrb	r1, [r4, #38]	; 0x26
   10960:	orr	r2, r2, r1, lsl #16
   10964:	ldrb	r1, [r4, #39]	; 0x27
   10968:	orr	r2, r2, r1, lsl #24
   1096c:	rev	r2, r2
   10970:	rev	r3, r3
   10974:	ldr	r1, [pc, #372]	; 10af0 <close@plt+0x57c>
   10978:	ldr	r0, [pc, #332]	; 10acc <close@plt+0x558>
   1097c:	ldr	r0, [r0]
   10980:	bl	10544 <fprintf@plt>
   10984:	b	10a30 <close@plt+0x4bc>
   10988:	cmp	r5, #8
   1098c:	beq	109a8 <close@plt+0x434>
   10990:	mov	r2, r5
   10994:	ldr	r1, [pc, #344]	; 10af4 <close@plt+0x580>
   10998:	ldr	r3, [pc, #300]	; 10acc <close@plt+0x558>
   1099c:	ldr	r0, [r3]
   109a0:	bl	10544 <fprintf@plt>
   109a4:	b	10a30 <close@plt+0x4bc>
   109a8:	ldrb	r3, [r4, #32]
   109ac:	ldrb	r2, [r4, #33]	; 0x21
   109b0:	orr	r3, r3, r2, lsl #8
   109b4:	ldrb	r2, [r4, #34]	; 0x22
   109b8:	orr	r3, r3, r2, lsl #16
   109bc:	ldrb	r2, [r4, #35]	; 0x23
   109c0:	orr	r3, r3, r2, lsl #24
   109c4:	ldrb	r1, [r4, #36]	; 0x24
   109c8:	ldrb	r2, [r4, #37]	; 0x25
   109cc:	orr	r1, r1, r2, lsl #8
   109d0:	ldrb	r2, [r4, #38]	; 0x26
   109d4:	orr	r1, r1, r2, lsl #16
   109d8:	ldrb	r2, [r4, #39]	; 0x27
   109dc:	orr	r1, r1, r2, lsl #24
   109e0:	rev	r6, r1
   109e4:	rev	r7, r3
   109e8:	mov	r2, r6
   109ec:	mov	r3, r7
   109f0:	ldr	r1, [pc, #256]	; 10af8 <close@plt+0x584>
   109f4:	ldr	r0, [pc, #208]	; 10acc <close@plt+0x558>
   109f8:	ldr	r0, [r0]
   109fc:	bl	10544 <fprintf@plt>
   10a00:	b	10a30 <close@plt+0x4bc>
   10a04:	mov	r1, r5
   10a08:	add	r0, r4, #32
   10a0c:	bl	104d8 <strndup@plt>
   10a10:	mov	r5, r0
   10a14:	mov	r2, r0
   10a18:	ldr	r1, [pc, #220]	; 10afc <close@plt+0x588>
   10a1c:	ldr	r3, [pc, #168]	; 10acc <close@plt+0x558>
   10a20:	ldr	r0, [r3]
   10a24:	bl	10544 <fprintf@plt>
   10a28:	mov	r0, r5
   10a2c:	bl	104cc <free@plt>
   10a30:	ldr	r0, [r4, #12]
   10a34:	rev	r0, r0
   10a38:	add	r0, r0, #7
   10a3c:	bic	r0, r0, #7
   10a40:	add	sp, sp, #8
   10a44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a48:	ldr	r3, [pc, #124]	; 10acc <close@plt+0x558>
   10a4c:	ldr	r3, [r3]
   10a50:	mov	r2, #6
   10a54:	mov	r1, #1
   10a58:	ldr	r0, [pc, #160]	; 10b00 <close@plt+0x58c>
   10a5c:	bl	104f0 <fwrite@plt>
   10a60:	b	10a30 <close@plt+0x4bc>
   10a64:	ldr	r3, [pc, #96]	; 10acc <close@plt+0x558>
   10a68:	ldr	r1, [r3]
   10a6c:	mov	r0, #10
   10a70:	bl	1055c <fputc@plt>
   10a74:	cmp	r5, #0
   10a78:	beq	10a30 <close@plt+0x4bc>
   10a7c:	mov	r1, #0
   10a80:	mov	r6, r1
   10a84:	add	r8, r8, #1
   10a88:	add	r0, r6, #32
   10a8c:	mov	r2, r8
   10a90:	sub	r1, r5, r1
   10a94:	add	r0, r4, r0
   10a98:	bl	10768 <close@plt+0x1f4>
   10a9c:	add	r6, r6, r0
   10aa0:	mov	r1, r6
   10aa4:	cmp	r5, r6
   10aa8:	bhi	10a88 <close@plt+0x514>
   10aac:	b	10a30 <close@plt+0x4bc>
   10ab0:	ldr	r3, [pc, #76]	; 10b04 <close@plt+0x590>
   10ab4:	ldr	r3, [r3]
   10ab8:	mov	r2, #11
   10abc:	mov	r1, #1
   10ac0:	ldr	r0, [pc, #64]	; 10b08 <close@plt+0x594>
   10ac4:	bl	104f0 <fwrite@plt>
   10ac8:	b	10a30 <close@plt+0x4bc>
   10acc:	andeq	r1, r2, ip, asr r0
   10ad0:	andeq	r0, r1, r0, lsr sp
   10ad4:	andeq	r0, r1, ip, asr #26
   10ad8:	andeq	r0, r1, ip, asr #25
   10adc:	strdeq	r0, [r1], -r4
   10ae0:	andeq	r0, r1, r0, asr #26
   10ae4:	andeq	r0, r1, r0, ror #26
   10ae8:	andeq	r0, r1, r8, asr sp
   10aec:	andeq	r0, r1, r0, ror sp
   10af0:	andeq	r0, r1, r8, ror #26
   10af4:	andeq	r0, r1, r0, lsl #27
   10af8:	andeq	r0, r1, r8, ror sp
   10afc:	andeq	r0, r1, r8, lsl #27
   10b00:	muleq	r1, r0, sp
   10b04:	andeq	r1, r2, r8, asr r0
   10b08:	muleq	r1, r8, sp
   10b0c:	push	{r4, r5, r6, lr}
   10b10:	sub	sp, sp, #96	; 0x60
   10b14:	cmp	r0, #2
   10b18:	bne	10bb8 <close@plt+0x644>
   10b1c:	mov	r3, r1
   10b20:	mov	r1, #0
   10b24:	ldr	r0, [r3, #4]
   10b28:	bl	10520 <open@plt>
   10b2c:	mov	r4, r0
   10b30:	cmn	r0, #1
   10b34:	beq	10bd8 <close@plt+0x664>
   10b38:	add	r2, sp, #8
   10b3c:	mov	r1, r0
   10b40:	mov	r0, #3
   10b44:	bl	10508 <__fxstat@plt>
   10b48:	cmn	r0, #1
   10b4c:	beq	10be8 <close@plt+0x674>
   10b50:	ldr	r6, [sp, #52]	; 0x34
   10b54:	mov	r0, #0
   10b58:	str	r0, [sp, #4]
   10b5c:	str	r4, [sp]
   10b60:	mov	r3, #1
   10b64:	mov	r2, r3
   10b68:	mov	r1, r6
   10b6c:	bl	10538 <mmap@plt>
   10b70:	mov	r5, r0
   10b74:	cmn	r0, #1
   10b78:	beq	10bf8 <close@plt+0x684>
   10b7c:	mov	r2, #0
   10b80:	mov	r1, r6
   10b84:	bl	10768 <close@plt+0x1f4>
   10b88:	mov	r1, r6
   10b8c:	mov	r0, r5
   10b90:	bl	10550 <munmap@plt>
   10b94:	cmn	r0, #1
   10b98:	beq	10c08 <close@plt+0x694>
   10b9c:	mov	r0, r4
   10ba0:	bl	10574 <close@plt>
   10ba4:	cmn	r0, #1
   10ba8:	beq	10c18 <close@plt+0x6a4>
   10bac:	mov	r0, #0
   10bb0:	add	sp, sp, #96	; 0x60
   10bb4:	pop	{r4, r5, r6, pc}
   10bb8:	ldr	r3, [pc, #104]	; 10c28 <close@plt+0x6b4>
   10bbc:	ldr	r3, [r3]
   10bc0:	mov	r2, #31
   10bc4:	mov	r1, #1
   10bc8:	ldr	r0, [pc, #92]	; 10c2c <close@plt+0x6b8>
   10bcc:	bl	104f0 <fwrite@plt>
   10bd0:	mov	r0, #1
   10bd4:	bl	1052c <exit@plt>
   10bd8:	ldr	r0, [pc, #80]	; 10c30 <close@plt+0x6bc>
   10bdc:	bl	104e4 <perror@plt>
   10be0:	mov	r0, #1
   10be4:	bl	1052c <exit@plt>
   10be8:	ldr	r0, [pc, #68]	; 10c34 <close@plt+0x6c0>
   10bec:	bl	104e4 <perror@plt>
   10bf0:	mov	r0, #1
   10bf4:	bl	1052c <exit@plt>
   10bf8:	ldr	r0, [pc, #56]	; 10c38 <close@plt+0x6c4>
   10bfc:	bl	104e4 <perror@plt>
   10c00:	mov	r0, #1
   10c04:	bl	1052c <exit@plt>
   10c08:	ldr	r0, [pc, #44]	; 10c3c <close@plt+0x6c8>
   10c0c:	bl	104e4 <perror@plt>
   10c10:	mov	r0, #1
   10c14:	bl	1052c <exit@plt>
   10c18:	ldr	r0, [pc, #32]	; 10c40 <close@plt+0x6cc>
   10c1c:	bl	104e4 <perror@plt>
   10c20:	mov	r0, #1
   10c24:	bl	1052c <exit@plt>
   10c28:	andeq	r1, r2, r8, asr r0
   10c2c:	andeq	r0, r1, r4, lsr #27
   10c30:	andeq	r0, r1, r4, asr #27
   10c34:	ldrdeq	r0, [r1], -ip
   10c38:	strdeq	r0, [r1], -r8
   10c3c:	andeq	r0, r1, ip, lsl lr
   10c40:	andeq	r0, r1, r4, asr #28
   10c44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c48:	mov	r7, r0
   10c4c:	ldr	r6, [pc, #72]	; 10c9c <close@plt+0x728>
   10c50:	ldr	r5, [pc, #72]	; 10ca0 <close@plt+0x72c>
   10c54:	add	r6, pc, r6
   10c58:	add	r5, pc, r5
   10c5c:	sub	r6, r6, r5
   10c60:	mov	r8, r1
   10c64:	mov	r9, r2
   10c68:	bl	104ac <free@plt-0x20>
   10c6c:	asrs	r6, r6, #2
   10c70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c74:	mov	r4, #0
   10c78:	add	r4, r4, #1
   10c7c:	ldr	r3, [r5], #4
   10c80:	mov	r2, r9
   10c84:	mov	r1, r8
   10c88:	mov	r0, r7
   10c8c:	blx	r3
   10c90:	cmp	r6, r4
   10c94:	bne	10c78 <close@plt+0x704>
   10c98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c9c:			; <UNDEFINED> instruction: 0x000102b4
   10ca0:	andeq	r0, r1, ip, lsr #5
   10ca4:	bx	lr

Disassembly of section .fini:

00010ca8 <.fini>:
   10ca8:	push	{r3, lr}
   10cac:	pop	{r3, pc}
