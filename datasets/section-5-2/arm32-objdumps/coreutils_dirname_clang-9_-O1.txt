
../repos/coreutils/src/dirname:     file format elf32-littlearm


Disassembly of section .init:

00010c54 <.init>:
   10c54:	push	{r3, lr}
   10c58:	bl	10ec0 <putchar_unlocked@plt+0x48>
   10c5c:	pop	{r3, pc}

Disassembly of section .plt:

00010c60 <calloc@plt-0x14>:
   10c60:	push	{lr}		; (str lr, [sp, #-4]!)
   10c64:	ldr	lr, [pc, #4]	; 10c70 <calloc@plt-0x4>
   10c68:	add	lr, pc, lr
   10c6c:	ldr	pc, [lr, #8]!
   10c70:	muleq	r1, r0, r3

00010c74 <calloc@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #20, 20	; 0x14000
   10c7c:	ldr	pc, [ip, #912]!	; 0x390

00010c80 <fputs_unlocked@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #20, 20	; 0x14000
   10c88:	ldr	pc, [ip, #904]!	; 0x388

00010c8c <strcmp@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #20, 20	; 0x14000
   10c94:	ldr	pc, [ip, #896]!	; 0x380

00010c98 <fflush@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #20, 20	; 0x14000
   10ca0:	ldr	pc, [ip, #888]!	; 0x378

00010ca4 <free@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #20, 20	; 0x14000
   10cac:	ldr	pc, [ip, #880]!	; 0x370

00010cb0 <_exit@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #20, 20	; 0x14000
   10cb8:	ldr	pc, [ip, #872]!	; 0x368

00010cbc <memcpy@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #20, 20	; 0x14000
   10cc4:	ldr	pc, [ip, #864]!	; 0x360

00010cc8 <mbsinit@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #20, 20	; 0x14000
   10cd0:	ldr	pc, [ip, #856]!	; 0x358

00010cd4 <fwrite_unlocked@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #20, 20	; 0x14000
   10cdc:	ldr	pc, [ip, #848]!	; 0x350

00010ce0 <dcgettext@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #20, 20	; 0x14000
   10ce8:	ldr	pc, [ip, #840]!	; 0x348

00010cec <realloc@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #20, 20	; 0x14000
   10cf4:	ldr	pc, [ip, #832]!	; 0x340

00010cf8 <textdomain@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #20, 20	; 0x14000
   10d00:	ldr	pc, [ip, #824]!	; 0x338

00010d04 <iswprint@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #20, 20	; 0x14000
   10d0c:	ldr	pc, [ip, #816]!	; 0x330

00010d10 <fwrite@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #20, 20	; 0x14000
   10d18:	ldr	pc, [ip, #808]!	; 0x328

00010d1c <lseek64@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #20, 20	; 0x14000
   10d24:	ldr	pc, [ip, #800]!	; 0x320

00010d28 <__ctype_get_mb_cur_max@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #20, 20	; 0x14000
   10d30:	ldr	pc, [ip, #792]!	; 0x318

00010d34 <__fpending@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #20, 20	; 0x14000
   10d3c:	ldr	pc, [ip, #784]!	; 0x310

00010d40 <ferror_unlocked@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #20, 20	; 0x14000
   10d48:	ldr	pc, [ip, #776]!	; 0x308

00010d4c <mbrtowc@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #20, 20	; 0x14000
   10d54:	ldr	pc, [ip, #768]!	; 0x300

00010d58 <error@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #20, 20	; 0x14000
   10d60:	ldr	pc, [ip, #760]!	; 0x2f8

00010d64 <malloc@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #20, 20	; 0x14000
   10d6c:	ldr	pc, [ip, #752]!	; 0x2f0

00010d70 <__libc_start_main@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #20, 20	; 0x14000
   10d78:	ldr	pc, [ip, #744]!	; 0x2e8

00010d7c <__freading@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #20, 20	; 0x14000
   10d84:	ldr	pc, [ip, #736]!	; 0x2e0

00010d88 <__gmon_start__@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #20, 20	; 0x14000
   10d90:	ldr	pc, [ip, #728]!	; 0x2d8

00010d94 <getopt_long@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #20, 20	; 0x14000
   10d9c:	ldr	pc, [ip, #720]!	; 0x2d0

00010da0 <__ctype_b_loc@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #20, 20	; 0x14000
   10da8:	ldr	pc, [ip, #712]!	; 0x2c8

00010dac <exit@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #20, 20	; 0x14000
   10db4:	ldr	pc, [ip, #704]!	; 0x2c0

00010db8 <bcmp@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #20, 20	; 0x14000
   10dc0:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc4 <strlen@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #20, 20	; 0x14000
   10dcc:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd0 <__errno_location@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #20, 20	; 0x14000
   10dd8:	ldr	pc, [ip, #680]!	; 0x2a8

00010ddc <__cxa_atexit@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #20, 20	; 0x14000
   10de4:	ldr	pc, [ip, #672]!	; 0x2a0

00010de8 <memset@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #20, 20	; 0x14000
   10df0:	ldr	pc, [ip, #664]!	; 0x298

00010df4 <__printf_chk@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #20, 20	; 0x14000
   10dfc:	ldr	pc, [ip, #656]!	; 0x290

00010e00 <fileno@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #20, 20	; 0x14000
   10e08:	ldr	pc, [ip, #648]!	; 0x288

00010e0c <__fprintf_chk@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #20, 20	; 0x14000
   10e14:	ldr	pc, [ip, #640]!	; 0x280

00010e18 <fclose@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #20, 20	; 0x14000
   10e20:	ldr	pc, [ip, #632]!	; 0x278

00010e24 <fseeko64@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #20, 20	; 0x14000
   10e2c:	ldr	pc, [ip, #624]!	; 0x270

00010e30 <setlocale@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #20, 20	; 0x14000
   10e38:	ldr	pc, [ip, #616]!	; 0x268

00010e3c <strrchr@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #20, 20	; 0x14000
   10e44:	ldr	pc, [ip, #608]!	; 0x260

00010e48 <nl_langinfo@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #20, 20	; 0x14000
   10e50:	ldr	pc, [ip, #600]!	; 0x258

00010e54 <bindtextdomain@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #20, 20	; 0x14000
   10e5c:	ldr	pc, [ip, #592]!	; 0x250

00010e60 <strncmp@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #20, 20	; 0x14000
   10e68:	ldr	pc, [ip, #584]!	; 0x248

00010e6c <abort@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #20, 20	; 0x14000
   10e74:	ldr	pc, [ip, #576]!	; 0x240

00010e78 <putchar_unlocked@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #20, 20	; 0x14000
   10e80:	ldr	pc, [ip, #568]!	; 0x238

Disassembly of section .text:

00010e84 <.text>:
   10e84:	mov	fp, #0
   10e88:	mov	lr, #0
   10e8c:	pop	{r1}		; (ldr r1, [sp], #4)
   10e90:	mov	r2, sp
   10e94:	push	{r2}		; (str r2, [sp, #-4]!)
   10e98:	push	{r0}		; (str r0, [sp, #-4]!)
   10e9c:	ldr	ip, [pc, #16]	; 10eb4 <putchar_unlocked@plt+0x3c>
   10ea0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ea4:	ldr	r0, [pc, #12]	; 10eb8 <putchar_unlocked@plt+0x40>
   10ea8:	ldr	r3, [pc, #12]	; 10ebc <putchar_unlocked@plt+0x44>
   10eac:	bl	10d70 <__libc_start_main@plt>
   10eb0:	bl	10e6c <abort@plt>
   10eb4:	andeq	r4, r1, r4, asr #7
   10eb8:	andeq	r1, r1, r4, lsr r2
   10ebc:	andeq	r4, r1, r4, ror #6
   10ec0:	ldr	r3, [pc, #20]	; 10edc <putchar_unlocked@plt+0x64>
   10ec4:	ldr	r2, [pc, #20]	; 10ee0 <putchar_unlocked@plt+0x68>
   10ec8:	add	r3, pc, r3
   10ecc:	ldr	r2, [r3, r2]
   10ed0:	cmp	r2, #0
   10ed4:	bxeq	lr
   10ed8:	b	10d88 <__gmon_start__@plt>
   10edc:	andeq	r4, r1, r0, lsr r1
   10ee0:	strheq	r0, [r0], -ip
   10ee4:	ldr	r0, [pc, #24]	; 10f04 <putchar_unlocked@plt+0x8c>
   10ee8:	ldr	r3, [pc, #24]	; 10f08 <putchar_unlocked@plt+0x90>
   10eec:	cmp	r3, r0
   10ef0:	bxeq	lr
   10ef4:	ldr	r3, [pc, #16]	; 10f0c <putchar_unlocked@plt+0x94>
   10ef8:	cmp	r3, #0
   10efc:	bxeq	lr
   10f00:	bx	r3
   10f04:	andeq	r5, r2, r0, lsl r1
   10f08:	andeq	r5, r2, r0, lsl r1
   10f0c:	andeq	r0, r0, r0
   10f10:	ldr	r0, [pc, #36]	; 10f3c <putchar_unlocked@plt+0xc4>
   10f14:	ldr	r1, [pc, #36]	; 10f40 <putchar_unlocked@plt+0xc8>
   10f18:	sub	r1, r1, r0
   10f1c:	asr	r1, r1, #2
   10f20:	add	r1, r1, r1, lsr #31
   10f24:	asrs	r1, r1, #1
   10f28:	bxeq	lr
   10f2c:	ldr	r3, [pc, #16]	; 10f44 <putchar_unlocked@plt+0xcc>
   10f30:	cmp	r3, #0
   10f34:	bxeq	lr
   10f38:	bx	r3
   10f3c:	andeq	r5, r2, r0, lsl r1
   10f40:	andeq	r5, r2, r0, lsl r1
   10f44:	andeq	r0, r0, r0
   10f48:	push	{r4, lr}
   10f4c:	ldr	r4, [pc, #24]	; 10f6c <putchar_unlocked@plt+0xf4>
   10f50:	ldrb	r3, [r4]
   10f54:	cmp	r3, #0
   10f58:	popne	{r4, pc}
   10f5c:	bl	10ee4 <putchar_unlocked@plt+0x6c>
   10f60:	mov	r3, #1
   10f64:	strb	r3, [r4]
   10f68:	pop	{r4, pc}
   10f6c:	andeq	r5, r2, r8, lsr #2
   10f70:	b	10f10 <putchar_unlocked@plt+0x98>
   10f74:	push	{fp, lr}
   10f78:	mov	fp, sp
   10f7c:	sub	sp, sp, #8
   10f80:	mov	r4, r0
   10f84:	cmp	r0, #0
   10f88:	bne	11068 <putchar_unlocked@plt+0x1f0>
   10f8c:	movw	r1, #17427	; 0x4413
   10f90:	movt	r1, #1
   10f94:	mov	r0, #0
   10f98:	mov	r2, #5
   10f9c:	bl	10ce0 <dcgettext@plt>
   10fa0:	mov	r1, r0
   10fa4:	movw	r5, #20788	; 0x5134
   10fa8:	movt	r5, #2
   10fac:	ldr	r2, [r5]
   10fb0:	mov	r0, #1
   10fb4:	bl	10df4 <__printf_chk@plt>
   10fb8:	movw	r1, #17455	; 0x442f
   10fbc:	movt	r1, #1
   10fc0:	mov	r0, #0
   10fc4:	mov	r2, #5
   10fc8:	bl	10ce0 <dcgettext@plt>
   10fcc:	movw	r6, #20772	; 0x5124
   10fd0:	movt	r6, #2
   10fd4:	ldr	r1, [r6]
   10fd8:	bl	10c80 <fputs_unlocked@plt>
   10fdc:	movw	r1, #17607	; 0x44c7
   10fe0:	movt	r1, #1
   10fe4:	mov	r0, #0
   10fe8:	mov	r2, #5
   10fec:	bl	10ce0 <dcgettext@plt>
   10ff0:	ldr	r1, [r6]
   10ff4:	bl	10c80 <fputs_unlocked@plt>
   10ff8:	movw	r1, #17668	; 0x4504
   10ffc:	movt	r1, #1
   11000:	mov	r0, #0
   11004:	mov	r2, #5
   11008:	bl	10ce0 <dcgettext@plt>
   1100c:	ldr	r1, [r6]
   11010:	bl	10c80 <fputs_unlocked@plt>
   11014:	movw	r1, #17713	; 0x4531
   11018:	movt	r1, #1
   1101c:	mov	r0, #0
   11020:	mov	r2, #5
   11024:	bl	10ce0 <dcgettext@plt>
   11028:	ldr	r1, [r6]
   1102c:	bl	10c80 <fputs_unlocked@plt>
   11030:	movw	r1, #17767	; 0x4567
   11034:	movt	r1, #1
   11038:	mov	r0, #0
   1103c:	mov	r2, #5
   11040:	bl	10ce0 <dcgettext@plt>
   11044:	mov	r1, r0
   11048:	ldr	r2, [r5]
   1104c:	str	r2, [sp]
   11050:	mov	r0, #1
   11054:	mov	r3, r2
   11058:	bl	10df4 <__printf_chk@plt>
   1105c:	bl	110ac <putchar_unlocked@plt+0x234>
   11060:	mov	r0, r4
   11064:	bl	10dac <exit@plt>
   11068:	movw	r0, #20768	; 0x5120
   1106c:	movt	r0, #2
   11070:	ldr	r5, [r0]
   11074:	movw	r1, #17388	; 0x43ec
   11078:	movt	r1, #1
   1107c:	mov	r0, #0
   11080:	mov	r2, #5
   11084:	bl	10ce0 <dcgettext@plt>
   11088:	mov	r2, r0
   1108c:	movw	r0, #20788	; 0x5134
   11090:	movt	r0, #2
   11094:	ldr	r3, [r0]
   11098:	mov	r0, r5
   1109c:	mov	r1, #1
   110a0:	bl	10e0c <__fprintf_chk@plt>
   110a4:	mov	r0, r4
   110a8:	bl	10dac <exit@plt>
   110ac:	push	{r4, r5, r6, sl, fp, lr}
   110b0:	add	fp, sp, #16
   110b4:	sub	sp, sp, #56	; 0x38
   110b8:	movw	r0, #18392	; 0x47d8
   110bc:	movt	r0, #1
   110c0:	add	r1, r0, #32
   110c4:	mov	r2, #48	; 0x30
   110c8:	vld1.64	{d16-d17}, [r1]
   110cc:	mov	r6, sp
   110d0:	add	r1, r6, #32
   110d4:	add	r3, r0, #16
   110d8:	vld1.64	{d18-d19}, [r0], r2
   110dc:	vld1.64	{d20-d21}, [r3]
   110e0:	vldr	d22, [r0]
   110e4:	vst1.64	{d16-d17}, [r1]
   110e8:	add	r0, r6, #16
   110ec:	vst1.64	{d20-d21}, [r0]
   110f0:	mov	r0, r6
   110f4:	vst1.64	{d18-d19}, [r0], r2
   110f8:	vstr	d22, [r0]
   110fc:	ldr	r1, [sp]
   11100:	cmp	r1, #0
   11104:	movw	r4, #17897	; 0x45e9
   11108:	movt	r4, #1
   1110c:	beq	11134 <putchar_unlocked@plt+0x2bc>
   11110:	mov	r6, sp
   11114:	movw	r5, #17897	; 0x45e9
   11118:	movt	r5, #1
   1111c:	mov	r0, r5
   11120:	bl	10c8c <strcmp@plt>
   11124:	cmp	r0, #0
   11128:	ldrne	r1, [r6, #8]!
   1112c:	cmpne	r1, #0
   11130:	bne	1111c <putchar_unlocked@plt+0x2a4>
   11134:	ldr	r5, [r6, #4]
   11138:	movw	r1, #18085	; 0x46a5
   1113c:	movt	r1, #1
   11140:	mov	r0, #0
   11144:	mov	r2, #5
   11148:	bl	10ce0 <dcgettext@plt>
   1114c:	mov	r1, r0
   11150:	movw	r2, #17931	; 0x460b
   11154:	movt	r2, #1
   11158:	movw	r3, #18108	; 0x46bc
   1115c:	movt	r3, #1
   11160:	mov	r0, #1
   11164:	bl	10df4 <__printf_chk@plt>
   11168:	cmp	r5, #0
   1116c:	moveq	r5, r4
   11170:	mov	r0, #5
   11174:	mov	r1, #0
   11178:	bl	10e30 <setlocale@plt>
   1117c:	cmp	r0, #0
   11180:	beq	111c0 <putchar_unlocked@plt+0x348>
   11184:	movw	r1, #18148	; 0x46e4
   11188:	movt	r1, #1
   1118c:	mov	r2, #3
   11190:	bl	10e60 <strncmp@plt>
   11194:	cmp	r0, #0
   11198:	beq	111c0 <putchar_unlocked@plt+0x348>
   1119c:	movw	r1, #18152	; 0x46e8
   111a0:	movt	r1, #1
   111a4:	mov	r0, #0
   111a8:	mov	r2, #5
   111ac:	bl	10ce0 <dcgettext@plt>
   111b0:	movw	r1, #20772	; 0x5124
   111b4:	movt	r1, #2
   111b8:	ldr	r1, [r1]
   111bc:	bl	10c80 <fputs_unlocked@plt>
   111c0:	movw	r1, #18223	; 0x472f
   111c4:	movt	r1, #1
   111c8:	mov	r0, #0
   111cc:	mov	r2, #5
   111d0:	bl	10ce0 <dcgettext@plt>
   111d4:	mov	r1, r0
   111d8:	movw	r2, #18108	; 0x46bc
   111dc:	movt	r2, #1
   111e0:	mov	r0, #1
   111e4:	mov	r3, r4
   111e8:	bl	10df4 <__printf_chk@plt>
   111ec:	movw	r0, #18018	; 0x4662
   111f0:	movt	r0, #1
   111f4:	movw	r6, #17606	; 0x44c6
   111f8:	movt	r6, #1
   111fc:	cmp	r5, r4
   11200:	moveq	r6, r0
   11204:	movw	r1, #18250	; 0x474a
   11208:	movt	r1, #1
   1120c:	mov	r0, #0
   11210:	mov	r2, #5
   11214:	bl	10ce0 <dcgettext@plt>
   11218:	mov	r1, r0
   1121c:	mov	r0, #1
   11220:	mov	r2, r5
   11224:	mov	r3, r6
   11228:	sub	sp, fp, #16
   1122c:	pop	{r4, r5, r6, sl, fp, lr}
   11230:	b	10df4 <__printf_chk@plt>
   11234:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11238:	add	fp, sp, #28
   1123c:	sub	sp, sp, #12
   11240:	mov	r9, r1
   11244:	mov	r5, r0
   11248:	ldr	r0, [r1]
   1124c:	bl	115b0 <putchar_unlocked@plt+0x738>
   11250:	movw	r1, #17606	; 0x44c6
   11254:	movt	r1, #1
   11258:	mov	r0, #6
   1125c:	bl	10e30 <setlocale@plt>
   11260:	movw	r6, #17935	; 0x460f
   11264:	movt	r6, #1
   11268:	movw	r1, #17905	; 0x45f1
   1126c:	movt	r1, #1
   11270:	mov	r0, r6
   11274:	bl	10e54 <bindtextdomain@plt>
   11278:	mov	r0, r6
   1127c:	bl	10cf8 <textdomain@plt>
   11280:	movw	r0, #5152	; 0x1420
   11284:	movt	r0, #1
   11288:	bl	143c8 <putchar_unlocked@plt+0x3550>
   1128c:	mov	r6, #10
   11290:	movw	r8, #17929	; 0x4609
   11294:	movt	r8, #1
   11298:	movw	r7, #18324	; 0x4794
   1129c:	movt	r7, #1
   112a0:	mov	r0, #0
   112a4:	str	r0, [sp]
   112a8:	mov	r0, r5
   112ac:	mov	r1, r9
   112b0:	mov	r2, r8
   112b4:	mov	r3, r7
   112b8:	bl	10d94 <getopt_long@plt>
   112bc:	cmp	r0, #121	; 0x79
   112c0:	ble	112d4 <putchar_unlocked@plt+0x45c>
   112c4:	cmp	r0, #122	; 0x7a
   112c8:	mov	r6, #0
   112cc:	beq	112a0 <putchar_unlocked@plt+0x428>
   112d0:	b	113cc <putchar_unlocked@plt+0x554>
   112d4:	cmn	r0, #1
   112d8:	bne	11360 <putchar_unlocked@plt+0x4e8>
   112dc:	movw	r4, #20760	; 0x5118
   112e0:	movt	r4, #2
   112e4:	ldr	r0, [r4]
   112e8:	cmp	r0, r5
   112ec:	bge	113d4 <putchar_unlocked@plt+0x55c>
   112f0:	ldr	r0, [r4]
   112f4:	cmp	r0, r5
   112f8:	bge	11354 <putchar_unlocked@plt+0x4dc>
   112fc:	movw	r8, #18320	; 0x4790
   11300:	movt	r8, #1
   11304:	movw	sl, #20772	; 0x5124
   11308:	movt	sl, #2
   1130c:	ldr	r7, [r9, r0, lsl #2]
   11310:	mov	r0, r7
   11314:	bl	11508 <putchar_unlocked@plt+0x690>
   11318:	mov	r2, r0
   1131c:	cmp	r0, #0
   11320:	moveq	r7, r8
   11324:	movweq	r2, #1
   11328:	ldr	r3, [sl]
   1132c:	mov	r0, r7
   11330:	mov	r1, #1
   11334:	bl	10cd4 <fwrite_unlocked@plt>
   11338:	mov	r0, r6
   1133c:	bl	10e78 <putchar_unlocked@plt>
   11340:	ldr	r0, [r4]
   11344:	add	r0, r0, #1
   11348:	str	r0, [r4]
   1134c:	cmp	r0, r5
   11350:	blt	1130c <putchar_unlocked@plt+0x494>
   11354:	mov	r0, #0
   11358:	sub	sp, fp, #28
   1135c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11360:	cmn	r0, #3
   11364:	bne	113bc <putchar_unlocked@plt+0x544>
   11368:	movw	r0, #20680	; 0x50c8
   1136c:	movt	r0, #2
   11370:	ldr	r3, [r0]
   11374:	movw	r0, #20772	; 0x5124
   11378:	movt	r0, #2
   1137c:	ldr	r0, [r0]
   11380:	mov	r1, #0
   11384:	movw	r2, #17961	; 0x4629
   11388:	movt	r2, #1
   1138c:	movw	r7, #17945	; 0x4619
   11390:	movt	r7, #1
   11394:	str	r7, [sp]
   11398:	str	r2, [sp, #4]
   1139c:	str	r1, [sp, #8]
   113a0:	movw	r1, #17897	; 0x45e9
   113a4:	movt	r1, #1
   113a8:	movw	r2, #17931	; 0x460b
   113ac:	movt	r2, #1
   113b0:	bl	1357c <putchar_unlocked@plt+0x2704>
   113b4:	mov	r0, #0
   113b8:	bl	10dac <exit@plt>
   113bc:	cmn	r0, #2
   113c0:	bne	113cc <putchar_unlocked@plt+0x554>
   113c4:	mov	r0, #0
   113c8:	bl	10f74 <putchar_unlocked@plt+0xfc>
   113cc:	mov	r0, #1
   113d0:	bl	10f74 <putchar_unlocked@plt+0xfc>
   113d4:	movw	r1, #17974	; 0x4636
   113d8:	movt	r1, #1
   113dc:	mov	r0, #0
   113e0:	mov	r2, #5
   113e4:	bl	10ce0 <dcgettext@plt>
   113e8:	mov	r2, r0
   113ec:	mov	r0, #0
   113f0:	mov	r1, #0
   113f4:	bl	10d58 <error@plt>
   113f8:	mov	r0, #1
   113fc:	bl	10f74 <putchar_unlocked@plt+0xfc>
   11400:	movw	r1, #20780	; 0x512c
   11404:	movt	r1, #2
   11408:	str	r0, [r1]
   1140c:	bx	lr
   11410:	movw	r1, #20784	; 0x5130
   11414:	movt	r1, #2
   11418:	strb	r0, [r1]
   1141c:	bx	lr
   11420:	push	{r4, r5, r6, sl, fp, lr}
   11424:	add	fp, sp, #16
   11428:	sub	sp, sp, #8
   1142c:	movw	r0, #20772	; 0x5124
   11430:	movt	r0, #2
   11434:	ldr	r0, [r0]
   11438:	bl	13ed0 <putchar_unlocked@plt+0x3058>
   1143c:	cmp	r0, #0
   11440:	beq	11468 <putchar_unlocked@plt+0x5f0>
   11444:	movw	r0, #20784	; 0x5130
   11448:	movt	r0, #2
   1144c:	ldrb	r0, [r0]
   11450:	cmp	r0, #0
   11454:	beq	11488 <putchar_unlocked@plt+0x610>
   11458:	bl	10dd0 <__errno_location@plt>
   1145c:	ldr	r0, [r0]
   11460:	cmp	r0, #32
   11464:	bne	11488 <putchar_unlocked@plt+0x610>
   11468:	movw	r0, #20768	; 0x5120
   1146c:	movt	r0, #2
   11470:	ldr	r0, [r0]
   11474:	bl	13ed0 <putchar_unlocked@plt+0x3058>
   11478:	cmp	r0, #0
   1147c:	subeq	sp, fp, #16
   11480:	popeq	{r4, r5, r6, sl, fp, pc}
   11484:	b	114f8 <putchar_unlocked@plt+0x680>
   11488:	movw	r1, #18463	; 0x481f
   1148c:	movt	r1, #1
   11490:	mov	r0, #0
   11494:	mov	r2, #5
   11498:	bl	10ce0 <dcgettext@plt>
   1149c:	mov	r4, r0
   114a0:	movw	r0, #20780	; 0x512c
   114a4:	movt	r0, #2
   114a8:	ldr	r6, [r0]
   114ac:	bl	10dd0 <__errno_location@plt>
   114b0:	ldr	r5, [r0]
   114b4:	cmp	r6, #0
   114b8:	bne	114d4 <putchar_unlocked@plt+0x65c>
   114bc:	movw	r2, #18479	; 0x482f
   114c0:	movt	r2, #1
   114c4:	mov	r0, #0
   114c8:	mov	r1, r5
   114cc:	mov	r3, r4
   114d0:	b	114f4 <putchar_unlocked@plt+0x67c>
   114d4:	mov	r0, r6
   114d8:	bl	12c54 <putchar_unlocked@plt+0x1ddc>
   114dc:	mov	r3, r0
   114e0:	str	r4, [sp]
   114e4:	movw	r2, #18475	; 0x482b
   114e8:	movt	r2, #1
   114ec:	mov	r0, #0
   114f0:	mov	r1, r5
   114f4:	bl	10d58 <error@plt>
   114f8:	movw	r0, #20684	; 0x50cc
   114fc:	movt	r0, #2
   11500:	ldr	r0, [r0]
   11504:	bl	10cb0 <_exit@plt>
   11508:	push	{r4, r5, r6, sl, fp, lr}
   1150c:	add	fp, sp, #16
   11510:	mov	r4, r0
   11514:	mov	r5, r0
   11518:	ldrb	r6, [r5], #-1
   1151c:	bl	13b28 <putchar_unlocked@plt+0x2cb0>
   11520:	sub	r2, r0, r4
   11524:	sub	r0, r6, #47	; 0x2f
   11528:	clz	r0, r0
   1152c:	lsr	r1, r0, #5
   11530:	mov	r0, r2
   11534:	cmp	r2, r1
   11538:	bls	1154c <putchar_unlocked@plt+0x6d4>
   1153c:	ldrb	r3, [r5, r0]
   11540:	sub	r2, r0, #1
   11544:	cmp	r3, #47	; 0x2f
   11548:	beq	11530 <putchar_unlocked@plt+0x6b8>
   1154c:	pop	{r4, r5, r6, sl, fp, pc}
   11550:	push	{r4, r5, r6, sl, fp, lr}
   11554:	add	fp, sp, #16
   11558:	mov	r6, r0
   1155c:	bl	11508 <putchar_unlocked@plt+0x690>
   11560:	mov	r4, r0
   11564:	cmp	r0, #0
   11568:	addeq	r0, r0, #1
   1156c:	add	r0, r0, #1
   11570:	bl	13aa4 <putchar_unlocked@plt+0x2c2c>
   11574:	mov	r5, r0
   11578:	cmp	r0, #0
   1157c:	beq	115a8 <putchar_unlocked@plt+0x730>
   11580:	mov	r0, r5
   11584:	mov	r1, r6
   11588:	mov	r2, r4
   1158c:	bl	10cbc <memcpy@plt>
   11590:	cmp	r4, #0
   11594:	moveq	r0, #46	; 0x2e
   11598:	strbeq	r0, [r5, r4]
   1159c:	moveq	r4, #1
   115a0:	mov	r0, #0
   115a4:	strb	r0, [r5, r4]
   115a8:	mov	r0, r5
   115ac:	pop	{r4, r5, r6, sl, fp, pc}
   115b0:	push	{r4, r5, fp, lr}
   115b4:	add	fp, sp, #8
   115b8:	cmp	r0, #0
   115bc:	beq	11650 <putchar_unlocked@plt+0x7d8>
   115c0:	mov	r4, r0
   115c4:	mov	r1, #47	; 0x2f
   115c8:	bl	10e3c <strrchr@plt>
   115cc:	cmp	r0, #0
   115d0:	mov	r5, r4
   115d4:	addne	r5, r0, #1
   115d8:	sub	r0, r5, r4
   115dc:	cmp	r0, #7
   115e0:	blt	11634 <putchar_unlocked@plt+0x7bc>
   115e4:	sub	r0, r5, #7
   115e8:	movw	r1, #18538	; 0x486a
   115ec:	movt	r1, #1
   115f0:	mov	r2, #7
   115f4:	bl	10e60 <strncmp@plt>
   115f8:	cmp	r0, #0
   115fc:	bne	11634 <putchar_unlocked@plt+0x7bc>
   11600:	movw	r1, #18546	; 0x4872
   11604:	movt	r1, #1
   11608:	mov	r0, r5
   1160c:	mov	r2, #3
   11610:	bl	10e60 <strncmp@plt>
   11614:	cmp	r0, #0
   11618:	beq	11624 <putchar_unlocked@plt+0x7ac>
   1161c:	mov	r4, r5
   11620:	b	11634 <putchar_unlocked@plt+0x7bc>
   11624:	add	r4, r5, #3
   11628:	movw	r0, #20752	; 0x5110
   1162c:	movt	r0, #2
   11630:	str	r4, [r0]
   11634:	movw	r0, #20756	; 0x5114
   11638:	movt	r0, #2
   1163c:	str	r4, [r0]
   11640:	movw	r0, #20788	; 0x5134
   11644:	movt	r0, #2
   11648:	str	r4, [r0]
   1164c:	pop	{r4, r5, fp, pc}
   11650:	movw	r0, #20768	; 0x5120
   11654:	movt	r0, #2
   11658:	ldr	r3, [r0]
   1165c:	movw	r0, #18482	; 0x4832
   11660:	movt	r0, #1
   11664:	mov	r1, #55	; 0x37
   11668:	mov	r2, #1
   1166c:	bl	10d10 <fwrite@plt>
   11670:	bl	10e6c <abort@plt>
   11674:	push	{r4, r5, r6, sl, fp, lr}
   11678:	add	fp, sp, #16
   1167c:	mov	r4, r0
   11680:	movw	r0, #20792	; 0x5138
   11684:	movt	r0, #2
   11688:	cmp	r4, #0
   1168c:	moveq	r4, r0
   11690:	bl	10dd0 <__errno_location@plt>
   11694:	mov	r5, r0
   11698:	ldr	r6, [r0]
   1169c:	mov	r0, r4
   116a0:	mov	r1, #48	; 0x30
   116a4:	bl	1396c <putchar_unlocked@plt+0x2af4>
   116a8:	str	r6, [r5]
   116ac:	pop	{r4, r5, r6, sl, fp, pc}
   116b0:	movw	r1, #20792	; 0x5138
   116b4:	movt	r1, #2
   116b8:	cmp	r0, #0
   116bc:	movne	r1, r0
   116c0:	ldr	r0, [r1]
   116c4:	bx	lr
   116c8:	movw	r2, #20792	; 0x5138
   116cc:	movt	r2, #2
   116d0:	cmp	r0, #0
   116d4:	movne	r2, r0
   116d8:	str	r1, [r2]
   116dc:	bx	lr
   116e0:	movw	r3, #20792	; 0x5138
   116e4:	movt	r3, #2
   116e8:	cmp	r0, #0
   116ec:	movne	r3, r0
   116f0:	ubfx	r0, r1, #5, #3
   116f4:	add	ip, r3, r0, lsl #2
   116f8:	ldr	r3, [ip, #8]
   116fc:	and	r1, r1, #31
   11700:	mov	r0, #1
   11704:	and	r0, r0, r3, lsr r1
   11708:	and	r2, r2, #1
   1170c:	eor	r2, r0, r2
   11710:	eor	r1, r3, r2, lsl r1
   11714:	str	r1, [ip, #8]
   11718:	bx	lr
   1171c:	movw	r2, #20792	; 0x5138
   11720:	movt	r2, #2
   11724:	cmp	r0, #0
   11728:	movne	r2, r0
   1172c:	ldr	r0, [r2, #4]
   11730:	str	r1, [r2, #4]
   11734:	bx	lr
   11738:	push	{fp, lr}
   1173c:	mov	fp, sp
   11740:	movw	r3, #20792	; 0x5138
   11744:	movt	r3, #2
   11748:	cmp	r0, #0
   1174c:	movne	r3, r0
   11750:	mov	r0, #10
   11754:	str	r0, [r3]
   11758:	cmp	r1, #0
   1175c:	cmpne	r2, #0
   11760:	bne	11768 <putchar_unlocked@plt+0x8f0>
   11764:	bl	10e6c <abort@plt>
   11768:	str	r1, [r3, #40]	; 0x28
   1176c:	str	r2, [r3, #44]	; 0x2c
   11770:	pop	{fp, pc}
   11774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11778:	add	fp, sp, #28
   1177c:	sub	sp, sp, #20
   11780:	mov	r8, r3
   11784:	mov	r9, r2
   11788:	mov	sl, r1
   1178c:	mov	r7, r0
   11790:	ldr	r0, [fp, #8]
   11794:	movw	r5, #20792	; 0x5138
   11798:	movt	r5, #2
   1179c:	cmp	r0, #0
   117a0:	movne	r5, r0
   117a4:	bl	10dd0 <__errno_location@plt>
   117a8:	mov	r4, r0
   117ac:	ldm	r5, {r0, r1}
   117b0:	ldr	r2, [r5, #40]	; 0x28
   117b4:	ldr	r3, [r5, #44]	; 0x2c
   117b8:	ldr	r6, [r4]
   117bc:	add	r5, r5, #8
   117c0:	stm	sp, {r0, r1, r5}
   117c4:	str	r2, [sp, #12]
   117c8:	str	r3, [sp, #16]
   117cc:	mov	r0, r7
   117d0:	mov	r1, sl
   117d4:	mov	r2, r9
   117d8:	mov	r3, r8
   117dc:	bl	117ec <putchar_unlocked@plt+0x974>
   117e0:	str	r6, [r4]
   117e4:	sub	sp, fp, #28
   117e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117f0:	add	fp, sp, #28
   117f4:	sub	sp, sp, #156	; 0x9c
   117f8:	mov	r9, r3
   117fc:	mov	r7, r1
   11800:	mov	r6, r0
   11804:	str	r2, [fp, #-80]	; 0xffffffb0
   11808:	add	r0, r2, #1
   1180c:	str	r0, [sp, #76]	; 0x4c
   11810:	ldr	r0, [fp, #12]
   11814:	and	r1, r0, #1
   11818:	str	r1, [sp, #40]	; 0x28
   1181c:	and	r1, r0, #4
   11820:	str	r1, [sp, #36]	; 0x24
   11824:	ubfx	r4, r0, #1, #1
   11828:	bl	10d28 <__ctype_get_mb_cur_max@plt>
   1182c:	str	r0, [sp, #44]	; 0x2c
   11830:	ldr	r0, [fp, #24]
   11834:	str	r0, [sp, #88]	; 0x58
   11838:	ldr	r0, [fp, #20]
   1183c:	str	r0, [sp, #80]	; 0x50
   11840:	ldr	r1, [fp, #8]
   11844:	mov	r0, #0
   11848:	str	r0, [sp, #84]	; 0x54
   1184c:	mov	r0, #0
   11850:	str	r0, [fp, #-84]	; 0xffffffac
   11854:	mov	r0, #0
   11858:	str	r0, [fp, #-72]	; 0xffffffb8
   1185c:	mov	r0, #0
   11860:	mov	r2, #0
   11864:	str	r2, [fp, #-56]	; 0xffffffc8
   11868:	mov	r2, #0
   1186c:	str	r2, [sp, #64]	; 0x40
   11870:	mov	r2, #1
   11874:	str	r2, [fp, #-48]	; 0xffffffd0
   11878:	cmp	r1, #10
   1187c:	bhi	127a8 <putchar_unlocked@plt+0x1930>
   11880:	mov	sl, r7
   11884:	mov	r7, r1
   11888:	add	r1, pc, #24
   1188c:	mov	r8, #0
   11890:	mov	r2, #1
   11894:	mov	r3, #0
   11898:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1189c:	mov	lr, r9
   118a0:	mov	r5, r6
   118a4:	ldr	pc, [r1, r7, lsl #2]
   118a8:	andeq	r1, r1, ip, ror r9
   118ac:			; <UNDEFINED> instruction: 0x000119bc
   118b0:	andeq	r1, r1, ip, lsl #19
   118b4:	andeq	r1, r1, r4, ror r9
   118b8:			; <UNDEFINED> instruction: 0x000119b0
   118bc:	andeq	r1, r1, r0, lsl sl
   118c0:	muleq	r1, ip, r9
   118c4:	andeq	r1, r1, ip, ror #20
   118c8:	ldrdeq	r1, [r1], -r4
   118cc:	ldrdeq	r1, [r1], -r4
   118d0:	andeq	r1, r1, r0, lsl #18
   118d4:	movw	r0, #18630	; 0x48c6
   118d8:	movt	r0, #1
   118dc:	mov	r1, r7
   118e0:	bl	12db0 <putchar_unlocked@plt+0x1f38>
   118e4:	str	r0, [sp, #80]	; 0x50
   118e8:	movw	r0, #18632	; 0x48c8
   118ec:	movt	r0, #1
   118f0:	mov	r1, r7
   118f4:	bl	12db0 <putchar_unlocked@plt+0x1f38>
   118f8:	mov	r5, r6
   118fc:	str	r0, [sp, #88]	; 0x58
   11900:	mov	r8, #0
   11904:	tst	r4, #1
   11908:	str	r7, [fp, #-64]	; 0xffffffc0
   1190c:	bne	11944 <putchar_unlocked@plt+0xacc>
   11910:	ldr	r0, [sp, #80]	; 0x50
   11914:	ldrb	r0, [r0]
   11918:	cmp	r0, #0
   1191c:	beq	11944 <putchar_unlocked@plt+0xacc>
   11920:	ldr	r1, [sp, #80]	; 0x50
   11924:	add	r1, r1, #1
   11928:	mov	r8, #0
   1192c:	cmp	r8, sl
   11930:	strbcc	r0, [r5, r8]
   11934:	ldrb	r0, [r1, r8]
   11938:	add	r8, r8, #1
   1193c:	cmp	r0, #0
   11940:	bne	1192c <putchar_unlocked@plt+0xab4>
   11944:	ldr	r7, [sp, #88]	; 0x58
   11948:	mov	r0, r7
   1194c:	bl	10dc4 <strlen@plt>
   11950:	mov	r5, r6
   11954:	str	r0, [fp, #-72]	; 0xffffffb8
   11958:	str	r7, [fp, #-84]	; 0xffffffac
   1195c:	mov	r2, #1
   11960:	mov	r3, r4
   11964:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11968:	mov	lr, r9
   1196c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   11970:	b	11a6c <putchar_unlocked@plt+0xbf4>
   11974:	mov	r0, #1
   11978:	b	119bc <putchar_unlocked@plt+0xb44>
   1197c:	mov	r7, #0
   11980:	mov	r8, #0
   11984:	mov	r2, r0
   11988:	b	11a68 <putchar_unlocked@plt+0xbf0>
   1198c:	tst	r4, #1
   11990:	bne	119bc <putchar_unlocked@plt+0xb44>
   11994:	mov	r2, r0
   11998:	b	119e4 <putchar_unlocked@plt+0xb6c>
   1199c:	mov	r0, #1
   119a0:	str	r0, [fp, #-72]	; 0xffffffb8
   119a4:	mov	r8, #0
   119a8:	mov	r7, #5
   119ac:	b	11a28 <putchar_unlocked@plt+0xbb0>
   119b0:	mov	r2, #1
   119b4:	tst	r4, #1
   119b8:	beq	119e4 <putchar_unlocked@plt+0xb6c>
   119bc:	mov	r1, #1
   119c0:	str	r1, [fp, #-72]	; 0xffffffb8
   119c4:	mov	r8, #0
   119c8:	mov	r7, #2
   119cc:	movw	r1, #18632	; 0x48c8
   119d0:	movt	r1, #1
   119d4:	str	r1, [fp, #-84]	; 0xffffffac
   119d8:	mov	r2, r0
   119dc:	mov	r3, #1
   119e0:	b	11a6c <putchar_unlocked@plt+0xbf4>
   119e4:	mov	r8, #1
   119e8:	mov	r7, #2
   119ec:	cmp	sl, #0
   119f0:	movne	r0, #39	; 0x27
   119f4:	strbne	r0, [r5]
   119f8:	movw	r0, #18632	; 0x48c8
   119fc:	movt	r0, #1
   11a00:	str	r0, [fp, #-84]	; 0xffffffac
   11a04:	mov	r0, #1
   11a08:	str	r0, [fp, #-72]	; 0xffffffb8
   11a0c:	b	11a68 <putchar_unlocked@plt+0xbf0>
   11a10:	mov	r7, #5
   11a14:	tst	r4, #1
   11a18:	beq	11a40 <putchar_unlocked@plt+0xbc8>
   11a1c:	mov	r0, #1
   11a20:	str	r0, [fp, #-72]	; 0xffffffb8
   11a24:	mov	r8, #0
   11a28:	movw	r0, #18628	; 0x48c4
   11a2c:	movt	r0, #1
   11a30:	str	r0, [fp, #-84]	; 0xffffffac
   11a34:	mov	r2, #1
   11a38:	mov	r3, #1
   11a3c:	b	11a6c <putchar_unlocked@plt+0xbf4>
   11a40:	cmp	sl, #0
   11a44:	movne	r0, #34	; 0x22
   11a48:	strbne	r0, [r5]
   11a4c:	mov	r8, #1
   11a50:	movw	r0, #18628	; 0x48c4
   11a54:	movt	r0, #1
   11a58:	str	r0, [fp, #-84]	; 0xffffffac
   11a5c:	mov	r0, #1
   11a60:	str	r0, [fp, #-72]	; 0xffffffb8
   11a64:	mov	r2, #1
   11a68:	mov	r3, #0
   11a6c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11a70:	cmp	r0, #0
   11a74:	movwne	r0, #1
   11a78:	and	r1, r0, r3
   11a7c:	and	r1, r2, r1
   11a80:	str	r1, [sp, #56]	; 0x38
   11a84:	sub	r1, r7, #2
   11a88:	clz	r1, r1
   11a8c:	lsr	r1, r1, #5
   11a90:	and	r1, r1, r3
   11a94:	str	r1, [sp, #68]	; 0x44
   11a98:	str	r7, [fp, #-64]	; 0xffffffc0
   11a9c:	subs	r1, r7, #2
   11aa0:	movwne	r1, #1
   11aa4:	eor	r4, r3, #1
   11aa8:	str	r4, [fp, #-88]	; 0xffffffa8
   11aac:	orr	r4, r1, r4
   11ab0:	str	r4, [sp, #72]	; 0x48
   11ab4:	and	r1, r1, r2
   11ab8:	and	r0, r0, r1
   11abc:	str	r0, [fp, #-60]	; 0xffffffc4
   11ac0:	str	r3, [fp, #-76]	; 0xffffffb4
   11ac4:	orr	r0, r1, r3
   11ac8:	eor	r0, r0, #1
   11acc:	ldr	r1, [fp, #16]
   11ad0:	clz	r1, r1
   11ad4:	lsr	r1, r1, #5
   11ad8:	orr	r0, r1, r0
   11adc:	str	r0, [fp, #-68]	; 0xffffffbc
   11ae0:	str	r2, [sp, #92]	; 0x5c
   11ae4:	eor	r0, r2, #1
   11ae8:	str	r0, [sp, #60]	; 0x3c
   11aec:	mov	r7, #0
   11af0:	cmn	lr, #1
   11af4:	beq	11b04 <putchar_unlocked@plt+0xc8c>
   11af8:	cmp	r7, lr
   11afc:	bne	11b10 <putchar_unlocked@plt+0xc98>
   11b00:	b	1261c <putchar_unlocked@plt+0x17a4>
   11b04:	ldrb	r0, [ip, r7]
   11b08:	cmp	r0, #0
   11b0c:	beq	1261c <putchar_unlocked@plt+0x17a4>
   11b10:	mov	r9, #0
   11b14:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11b18:	cmp	r0, #0
   11b1c:	beq	11b50 <putchar_unlocked@plt+0xcd8>
   11b20:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11b24:	add	r4, r7, r0
   11b28:	cmp	r0, #2
   11b2c:	bcc	11b48 <putchar_unlocked@plt+0xcd0>
   11b30:	cmn	lr, #1
   11b34:	bne	11b48 <putchar_unlocked@plt+0xcd0>
   11b38:	mov	r0, ip
   11b3c:	bl	10dc4 <strlen@plt>
   11b40:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11b44:	mov	lr, r0
   11b48:	cmp	r4, lr
   11b4c:	bls	11b5c <putchar_unlocked@plt+0xce4>
   11b50:	mov	r0, #0
   11b54:	str	r0, [fp, #-52]	; 0xffffffcc
   11b58:	b	11ba0 <putchar_unlocked@plt+0xd28>
   11b5c:	mov	r4, lr
   11b60:	add	r0, ip, r7
   11b64:	ldr	r1, [fp, #-84]	; 0xffffffac
   11b68:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11b6c:	bl	10db8 <bcmp@plt>
   11b70:	cmp	r0, #0
   11b74:	mov	r1, r0
   11b78:	movwne	r1, #1
   11b7c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11b80:	orr	r1, r1, r2
   11b84:	tst	r1, #1
   11b88:	beq	126f0 <putchar_unlocked@plt+0x1878>
   11b8c:	clz	r0, r0
   11b90:	lsr	r0, r0, #5
   11b94:	str	r0, [fp, #-52]	; 0xffffffcc
   11b98:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11b9c:	mov	lr, r4
   11ba0:	ldrb	r4, [ip, r7]
   11ba4:	cmp	r4, #126	; 0x7e
   11ba8:	bhi	120d8 <putchar_unlocked@plt+0x1260>
   11bac:	mov	r6, #1
   11bb0:	mov	r2, #110	; 0x6e
   11bb4:	mov	r0, #97	; 0x61
   11bb8:	add	r3, pc, #4
   11bbc:	mov	r1, #0
   11bc0:	ldr	pc, [r3, r4, lsl #2]
   11bc4:	andeq	r1, r1, r8, lsr pc
   11bc8:	ldrdeq	r2, [r1], -r8
   11bcc:	ldrdeq	r2, [r1], -r8
   11bd0:	ldrdeq	r2, [r1], -r8
   11bd4:	ldrdeq	r2, [r1], -r8
   11bd8:	ldrdeq	r2, [r1], -r8
   11bdc:	ldrdeq	r2, [r1], -r8
   11be0:	andeq	r2, r1, ip, lsr #3
   11be4:	andeq	r1, r1, r8, lsl pc
   11be8:	andeq	r1, r1, r0, lsl pc
   11bec:	andeq	r1, r1, r4, lsr #30
   11bf0:	andeq	r2, r1, r0, asr #32
   11bf4:	andeq	r1, r1, r8, lsl #30
   11bf8:	andeq	r1, r1, r0, lsr #30
   11bfc:	ldrdeq	r2, [r1], -r8
   11c00:	ldrdeq	r2, [r1], -r8
   11c04:	ldrdeq	r2, [r1], -r8
   11c08:	ldrdeq	r2, [r1], -r8
   11c0c:	ldrdeq	r2, [r1], -r8
   11c10:	ldrdeq	r2, [r1], -r8
   11c14:	ldrdeq	r2, [r1], -r8
   11c18:	ldrdeq	r2, [r1], -r8
   11c1c:	ldrdeq	r2, [r1], -r8
   11c20:	ldrdeq	r2, [r1], -r8
   11c24:	ldrdeq	r2, [r1], -r8
   11c28:	ldrdeq	r2, [r1], -r8
   11c2c:	ldrdeq	r2, [r1], -r8
   11c30:	ldrdeq	r2, [r1], -r8
   11c34:	ldrdeq	r2, [r1], -r8
   11c38:	ldrdeq	r2, [r1], -r8
   11c3c:	ldrdeq	r2, [r1], -r8
   11c40:	ldrdeq	r2, [r1], -r8
   11c44:			; <UNDEFINED> instruction: 0x00011ebc
   11c48:	andeq	r1, r1, r0, asr #29
   11c4c:	andeq	r1, r1, r0, asr #29
   11c50:	andeq	r1, r1, r8, lsr #29
   11c54:	andeq	r1, r1, r0, asr #29
   11c58:	andeq	r1, r1, r0, asr #27
   11c5c:	andeq	r1, r1, r0, asr #29
   11c60:	andeq	r2, r1, r8, asr #32
   11c64:	andeq	r1, r1, r0, asr #29
   11c68:	andeq	r1, r1, r0, asr #29
   11c6c:	andeq	r1, r1, r0, asr #29
   11c70:	andeq	r1, r1, r0, asr #27
   11c74:	andeq	r1, r1, r0, asr #27
   11c78:	andeq	r1, r1, r0, asr #27
   11c7c:	andeq	r1, r1, r0, asr #27
   11c80:	andeq	r1, r1, r0, asr #27
   11c84:	andeq	r1, r1, r0, asr #27
   11c88:	andeq	r1, r1, r0, asr #27
   11c8c:	andeq	r1, r1, r0, asr #27
   11c90:	andeq	r1, r1, r0, asr #27
   11c94:	andeq	r1, r1, r0, asr #27
   11c98:	andeq	r1, r1, r0, asr #27
   11c9c:	andeq	r1, r1, r0, asr #27
   11ca0:	andeq	r1, r1, r0, asr #27
   11ca4:	andeq	r1, r1, r0, asr #27
   11ca8:	andeq	r1, r1, r0, asr #27
   11cac:	andeq	r1, r1, r0, asr #27
   11cb0:	andeq	r1, r1, r0, asr #29
   11cb4:	andeq	r1, r1, r0, asr #29
   11cb8:	andeq	r1, r1, r0, asr #29
   11cbc:	andeq	r1, r1, r0, asr #29
   11cc0:	andeq	r2, r1, r0, lsl r0
   11cc4:	ldrdeq	r2, [r1], -r8
   11cc8:	andeq	r1, r1, r0, asr #27
   11ccc:	andeq	r1, r1, r0, asr #27
   11cd0:	andeq	r1, r1, r0, asr #27
   11cd4:	andeq	r1, r1, r0, asr #27
   11cd8:	andeq	r1, r1, r0, asr #27
   11cdc:	andeq	r1, r1, r0, asr #27
   11ce0:	andeq	r1, r1, r0, asr #27
   11ce4:	andeq	r1, r1, r0, asr #27
   11ce8:	andeq	r1, r1, r0, asr #27
   11cec:	andeq	r1, r1, r0, asr #27
   11cf0:	andeq	r1, r1, r0, asr #27
   11cf4:	andeq	r1, r1, r0, asr #27
   11cf8:	andeq	r1, r1, r0, asr #27
   11cfc:	andeq	r1, r1, r0, asr #27
   11d00:	andeq	r1, r1, r0, asr #27
   11d04:	andeq	r1, r1, r0, asr #27
   11d08:	andeq	r1, r1, r0, asr #27
   11d0c:	andeq	r1, r1, r0, asr #27
   11d10:	andeq	r1, r1, r0, asr #27
   11d14:	andeq	r1, r1, r0, asr #27
   11d18:	andeq	r1, r1, r0, asr #27
   11d1c:	andeq	r1, r1, r0, asr #27
   11d20:	andeq	r1, r1, r0, asr #27
   11d24:	andeq	r1, r1, r0, asr #27
   11d28:	andeq	r1, r1, r0, asr #27
   11d2c:	andeq	r1, r1, r0, asr #27
   11d30:	andeq	r1, r1, r0, asr #29
   11d34:	andeq	r1, r1, r8, ror #29
   11d38:	andeq	r1, r1, r0, asr #27
   11d3c:	andeq	r1, r1, r0, asr #29
   11d40:	andeq	r1, r1, r0, asr #27
   11d44:	andeq	r1, r1, r0, asr #29
   11d48:	andeq	r1, r1, r0, asr #27
   11d4c:	andeq	r1, r1, r0, asr #27
   11d50:	andeq	r1, r1, r0, asr #27
   11d54:	andeq	r1, r1, r0, asr #27
   11d58:	andeq	r1, r1, r0, asr #27
   11d5c:	andeq	r1, r1, r0, asr #27
   11d60:	andeq	r1, r1, r0, asr #27
   11d64:	andeq	r1, r1, r0, asr #27
   11d68:	andeq	r1, r1, r0, asr #27
   11d6c:	andeq	r1, r1, r0, asr #27
   11d70:	andeq	r1, r1, r0, asr #27
   11d74:	andeq	r1, r1, r0, asr #27
   11d78:	andeq	r1, r1, r0, asr #27
   11d7c:	andeq	r1, r1, r0, asr #27
   11d80:	andeq	r1, r1, r0, asr #27
   11d84:	andeq	r1, r1, r0, asr #27
   11d88:	andeq	r1, r1, r0, asr #27
   11d8c:	andeq	r1, r1, r0, asr #27
   11d90:	andeq	r1, r1, r0, asr #27
   11d94:	andeq	r1, r1, r0, asr #27
   11d98:	andeq	r1, r1, r0, asr #27
   11d9c:	andeq	r1, r1, r0, asr #27
   11da0:	andeq	r1, r1, r0, asr #27
   11da4:	andeq	r1, r1, r0, asr #27
   11da8:	andeq	r1, r1, r0, asr #27
   11dac:	andeq	r1, r1, r0, asr #27
   11db0:	andeq	r1, r1, ip, ror lr
   11db4:	andeq	r1, r1, r0, asr #29
   11db8:	andeq	r1, r1, ip, ror lr
   11dbc:	andeq	r1, r1, r8, lsr #29
   11dc0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11dc4:	tst	r0, #1
   11dc8:	bne	11df4 <putchar_unlocked@plt+0xf7c>
   11dcc:	ubfx	r0, r4, #5, #3
   11dd0:	ldr	r1, [fp, #16]
   11dd4:	ldr	r0, [r1, r0, lsl #2]
   11dd8:	and	r1, r4, #31
   11ddc:	mov	r2, #1
   11de0:	tst	r0, r2, lsl r1
   11de4:	beq	11df4 <putchar_unlocked@plt+0xf7c>
   11de8:	mov	r0, r4
   11dec:	mov	r1, r6
   11df0:	b	11e08 <putchar_unlocked@plt+0xf90>
   11df4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11df8:	cmp	r0, #0
   11dfc:	mov	r0, r4
   11e00:	mov	r1, r6
   11e04:	beq	12140 <putchar_unlocked@plt+0x12c8>
   11e08:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11e0c:	tst	r2, #1
   11e10:	bne	12704 <putchar_unlocked@plt+0x188c>
   11e14:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11e18:	subs	r2, r2, #2
   11e1c:	movwne	r2, #1
   11e20:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11e24:	orr	r2, r2, r3
   11e28:	tst	r2, #1
   11e2c:	bne	11e68 <putchar_unlocked@plt+0xff0>
   11e30:	cmp	r8, sl
   11e34:	movcc	r2, #39	; 0x27
   11e38:	strbcc	r2, [r5, r8]
   11e3c:	add	r2, r8, #1
   11e40:	cmp	r2, sl
   11e44:	movcc	r3, #36	; 0x24
   11e48:	strbcc	r3, [r5, r2]
   11e4c:	add	r2, r8, #2
   11e50:	cmp	r2, sl
   11e54:	movcc	r3, #39	; 0x27
   11e58:	strbcc	r3, [r5, r2]
   11e5c:	add	r8, r8, #3
   11e60:	mov	r2, #1
   11e64:	str	r2, [fp, #-56]	; 0xffffffc8
   11e68:	cmp	r8, sl
   11e6c:	movcc	r2, #92	; 0x5c
   11e70:	strbcc	r2, [r5, r8]
   11e74:	add	r8, r8, #1
   11e78:	b	12184 <putchar_unlocked@plt+0x130c>
   11e7c:	cmp	lr, #1
   11e80:	beq	11ea8 <putchar_unlocked@plt+0x1030>
   11e84:	mov	r6, #0
   11e88:	cmn	lr, #1
   11e8c:	bne	11eb4 <putchar_unlocked@plt+0x103c>
   11e90:	ldrb	r0, [ip, #1]
   11e94:	cmp	r0, #0
   11e98:	beq	11ea8 <putchar_unlocked@plt+0x1030>
   11e9c:	mvn	lr, #0
   11ea0:	mov	r9, #0
   11ea4:	b	11dc0 <putchar_unlocked@plt+0xf48>
   11ea8:	mov	r6, #0
   11eac:	cmp	r7, #0
   11eb0:	beq	11ebc <putchar_unlocked@plt+0x1044>
   11eb4:	mov	r9, #0
   11eb8:	b	11dc0 <putchar_unlocked@plt+0xf48>
   11ebc:	mov	r1, #1
   11ec0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11ec4:	cmp	r0, #2
   11ec8:	bne	11ee0 <putchar_unlocked@plt+0x1068>
   11ecc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11ed0:	tst	r0, #1
   11ed4:	mov	r6, r1
   11ed8:	beq	11dc0 <putchar_unlocked@plt+0xf48>
   11edc:	b	12704 <putchar_unlocked@plt+0x188c>
   11ee0:	mov	r6, r1
   11ee4:	b	11dc0 <putchar_unlocked@plt+0xf48>
   11ee8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11eec:	cmp	r0, #2
   11ef0:	bne	12124 <putchar_unlocked@plt+0x12ac>
   11ef4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11ef8:	tst	r0, #1
   11efc:	bne	12704 <putchar_unlocked@plt+0x188c>
   11f00:	mov	r9, #0
   11f04:	b	12138 <putchar_unlocked@plt+0x12c0>
   11f08:	mov	r0, #102	; 0x66
   11f0c:	b	121ac <putchar_unlocked@plt+0x1334>
   11f10:	mov	r2, #116	; 0x74
   11f14:	b	11f24 <putchar_unlocked@plt+0x10ac>
   11f18:	mov	r0, #98	; 0x62
   11f1c:	b	121ac <putchar_unlocked@plt+0x1334>
   11f20:	mov	r2, #114	; 0x72
   11f24:	ldr	r0, [sp, #72]	; 0x48
   11f28:	tst	r0, #1
   11f2c:	mov	r0, r2
   11f30:	bne	121ac <putchar_unlocked@plt+0x1334>
   11f34:	b	12704 <putchar_unlocked@plt+0x188c>
   11f38:	ldr	r0, [sp, #92]	; 0x5c
   11f3c:	tst	r0, #1
   11f40:	beq	121c8 <putchar_unlocked@plt+0x1350>
   11f44:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11f48:	tst	r0, #1
   11f4c:	bne	12704 <putchar_unlocked@plt+0x188c>
   11f50:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11f54:	subs	r0, r0, #2
   11f58:	movwne	r0, #1
   11f5c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11f60:	orr	r0, r0, r1
   11f64:	tst	r0, #1
   11f68:	bne	11fa4 <putchar_unlocked@plt+0x112c>
   11f6c:	cmp	r8, sl
   11f70:	movcc	r0, #39	; 0x27
   11f74:	strbcc	r0, [r5, r8]
   11f78:	add	r0, r8, #1
   11f7c:	cmp	r0, sl
   11f80:	movcc	r1, #36	; 0x24
   11f84:	strbcc	r1, [r5, r0]
   11f88:	add	r0, r8, #2
   11f8c:	cmp	r0, sl
   11f90:	movcc	r1, #39	; 0x27
   11f94:	strbcc	r1, [r5, r0]
   11f98:	add	r8, r8, #3
   11f9c:	mov	r0, #1
   11fa0:	str	r0, [fp, #-56]	; 0xffffffc8
   11fa4:	cmp	r8, sl
   11fa8:	movcc	r0, #92	; 0x5c
   11fac:	strbcc	r0, [r5, r8]
   11fb0:	add	r0, r8, #1
   11fb4:	mov	r6, #0
   11fb8:	mov	r9, #1
   11fbc:	mov	r4, #48	; 0x30
   11fc0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11fc4:	cmp	r1, #2
   11fc8:	beq	1238c <putchar_unlocked@plt+0x1514>
   11fcc:	add	r1, r7, #1
   11fd0:	cmp	r1, lr
   11fd4:	bcs	1238c <putchar_unlocked@plt+0x1514>
   11fd8:	ldrb	r1, [ip, r1]
   11fdc:	sub	r1, r1, #48	; 0x30
   11fe0:	uxtb	r1, r1
   11fe4:	cmp	r1, #9
   11fe8:	bhi	1238c <putchar_unlocked@plt+0x1514>
   11fec:	cmp	r0, sl
   11ff0:	movcc	r1, #48	; 0x30
   11ff4:	strbcc	r1, [r5, r0]
   11ff8:	add	r0, r8, #2
   11ffc:	cmp	r0, sl
   12000:	movcc	r1, #48	; 0x30
   12004:	strbcc	r1, [r5, r0]
   12008:	add	r8, r8, #3
   1200c:	b	11dc0 <putchar_unlocked@plt+0xf48>
   12010:	mov	r9, #0
   12014:	mov	r4, #63	; 0x3f
   12018:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1201c:	cmp	r0, #5
   12020:	beq	12394 <putchar_unlocked@plt+0x151c>
   12024:	cmp	r0, #2
   12028:	bne	1243c <putchar_unlocked@plt+0x15c4>
   1202c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12030:	tst	r0, #1
   12034:	mov	r6, #0
   12038:	beq	11dc0 <putchar_unlocked@plt+0xf48>
   1203c:	b	12704 <putchar_unlocked@plt+0x188c>
   12040:	mov	r0, #118	; 0x76
   12044:	b	121ac <putchar_unlocked@plt+0x1334>
   12048:	mov	r4, #39	; 0x27
   1204c:	mov	r0, #1
   12050:	str	r0, [sp, #64]	; 0x40
   12054:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12058:	cmp	r0, #2
   1205c:	bne	121e4 <putchar_unlocked@plt+0x136c>
   12060:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12064:	tst	r0, #1
   12068:	bne	12704 <putchar_unlocked@plt+0x188c>
   1206c:	ldr	r2, [sp, #84]	; 0x54
   12070:	cmp	r2, #0
   12074:	mov	r0, r2
   12078:	movwne	r0, #1
   1207c:	clz	r1, sl
   12080:	lsr	r1, r1, #5
   12084:	orrs	r0, r0, r1
   12088:	moveq	r2, sl
   1208c:	str	r2, [sp, #84]	; 0x54
   12090:	moveq	sl, r0
   12094:	cmp	r8, sl
   12098:	movcc	r0, #39	; 0x27
   1209c:	strbcc	r0, [r5, r8]
   120a0:	add	r0, r8, #1
   120a4:	cmp	r0, sl
   120a8:	movcc	r1, #92	; 0x5c
   120ac:	strbcc	r1, [r5, r0]
   120b0:	add	r0, r8, #2
   120b4:	cmp	r0, sl
   120b8:	movcc	r1, #39	; 0x27
   120bc:	strbcc	r1, [r5, r0]
   120c0:	add	r8, r8, #3
   120c4:	mov	r0, #0
   120c8:	str	r0, [fp, #-56]	; 0xffffffc8
   120cc:	mov	r9, #0
   120d0:	mov	r6, #1
   120d4:	b	11dc0 <putchar_unlocked@plt+0xf48>
   120d8:	ldr	r0, [sp, #44]	; 0x2c
   120dc:	cmp	r0, #1
   120e0:	bne	121ec <putchar_unlocked@plt+0x1374>
   120e4:	str	lr, [sp, #32]
   120e8:	bl	10da0 <__ctype_b_loc@plt>
   120ec:	ldr	ip, [fp, #-80]	; 0xffffffb0
   120f0:	ldr	r0, [r0]
   120f4:	add	r0, r0, r4, lsl #1
   120f8:	ldrb	r0, [r0, #1]
   120fc:	ubfx	r6, r0, #6, #1
   12100:	mov	r2, #1
   12104:	ldr	r0, [sp, #60]	; 0x3c
   12108:	orr	r1, r6, r0
   1210c:	cmp	r2, #1
   12110:	bhi	12444 <putchar_unlocked@plt+0x15cc>
   12114:	tst	r1, #1
   12118:	beq	12444 <putchar_unlocked@plt+0x15cc>
   1211c:	ldr	lr, [sp, #32]
   12120:	b	11dc0 <putchar_unlocked@plt+0xf48>
   12124:	mov	r9, #0
   12128:	mov	r0, #92	; 0x5c
   1212c:	ldr	r1, [sp, #56]	; 0x38
   12130:	cmp	r1, #0
   12134:	beq	121ac <putchar_unlocked@plt+0x1334>
   12138:	mov	r4, #92	; 0x5c
   1213c:	mov	r6, #0
   12140:	cmp	r9, #0
   12144:	bne	1217c <putchar_unlocked@plt+0x1304>
   12148:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1214c:	tst	r0, #1
   12150:	beq	1217c <putchar_unlocked@plt+0x1304>
   12154:	cmp	r8, sl
   12158:	movcc	r0, #39	; 0x27
   1215c:	strbcc	r0, [r5, r8]
   12160:	add	r0, r8, #1
   12164:	cmp	r0, sl
   12168:	movcc	r1, #39	; 0x27
   1216c:	strbcc	r1, [r5, r0]
   12170:	add	r8, r8, #2
   12174:	mov	r0, #0
   12178:	str	r0, [fp, #-56]	; 0xffffffc8
   1217c:	mov	r1, r6
   12180:	mov	r0, r4
   12184:	cmp	r8, sl
   12188:	strbcc	r0, [r5, r8]
   1218c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12190:	and	r0, r0, r1
   12194:	str	r0, [fp, #-48]	; 0xffffffd0
   12198:	add	r8, r8, #1
   1219c:	add	r7, r7, #1
   121a0:	cmn	lr, #1
   121a4:	bne	11af8 <putchar_unlocked@plt+0xc80>
   121a8:	b	11b04 <putchar_unlocked@plt+0xc8c>
   121ac:	mov	r9, #0
   121b0:	ldr	r1, [sp, #92]	; 0x5c
   121b4:	tst	r1, #1
   121b8:	mov	r6, #0
   121bc:	mov	r1, #0
   121c0:	beq	11dc0 <putchar_unlocked@plt+0xf48>
   121c4:	b	11e08 <putchar_unlocked@plt+0xf90>
   121c8:	mov	r4, #0
   121cc:	ldr	r0, [sp, #40]	; 0x28
   121d0:	cmp	r0, #0
   121d4:	mov	r9, #0
   121d8:	mov	r6, #0
   121dc:	beq	11dc0 <putchar_unlocked@plt+0xf48>
   121e0:	b	1219c <putchar_unlocked@plt+0x1324>
   121e4:	mov	r6, #1
   121e8:	b	11dc0 <putchar_unlocked@plt+0xf48>
   121ec:	mov	r0, #0
   121f0:	str	r0, [fp, #-36]	; 0xffffffdc
   121f4:	str	r0, [fp, #-40]	; 0xffffffd8
   121f8:	cmn	lr, #1
   121fc:	bne	12210 <putchar_unlocked@plt+0x1398>
   12200:	mov	r0, ip
   12204:	bl	10dc4 <strlen@plt>
   12208:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1220c:	mov	lr, r0
   12210:	ldr	r0, [sp, #76]	; 0x4c
   12214:	add	r0, r0, r7
   12218:	str	r0, [sp, #24]
   1221c:	mov	r6, #1
   12220:	mov	r2, #0
   12224:	sub	r0, fp, #40	; 0x28
   12228:	mov	r3, r0
   1222c:	str	r5, [sp, #28]
   12230:	str	lr, [sp, #32]
   12234:	b	12278 <putchar_unlocked@plt+0x1400>
   12238:	ldr	r5, [sp, #52]	; 0x34
   1223c:	add	r5, r0, r5
   12240:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12244:	bl	10d04 <iswprint@plt>
   12248:	cmp	r0, #0
   1224c:	movwne	r0, #1
   12250:	and	r6, r6, r0
   12254:	sub	r0, fp, #40	; 0x28
   12258:	bl	10cc8 <mbsinit@plt>
   1225c:	sub	r3, fp, #40	; 0x28
   12260:	mov	r2, r5
   12264:	ldr	lr, [sp, #32]
   12268:	cmp	r0, #0
   1226c:	ldr	r5, [sp, #28]
   12270:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12274:	bne	12104 <putchar_unlocked@plt+0x128c>
   12278:	str	r2, [sp, #52]	; 0x34
   1227c:	add	r0, r2, r7
   12280:	add	r1, ip, r0
   12284:	str	r0, [sp, #48]	; 0x30
   12288:	sub	r2, lr, r0
   1228c:	sub	r0, fp, #44	; 0x2c
   12290:	bl	141b4 <putchar_unlocked@plt+0x333c>
   12294:	cmp	r0, #0
   12298:	beq	12610 <putchar_unlocked@plt+0x1798>
   1229c:	cmn	r0, #1
   122a0:	beq	125cc <putchar_unlocked@plt+0x1754>
   122a4:	cmn	r0, #2
   122a8:	ldr	lr, [sp, #32]
   122ac:	beq	125d4 <putchar_unlocked@plt+0x175c>
   122b0:	cmp	r0, #2
   122b4:	mov	r1, #0
   122b8:	movwcc	r1, #1
   122bc:	ldr	r2, [sp, #68]	; 0x44
   122c0:	eor	r2, r2, #1
   122c4:	orrs	r1, r2, r1
   122c8:	bne	12238 <putchar_unlocked@plt+0x13c0>
   122cc:	ldr	r1, [sp, #52]	; 0x34
   122d0:	ldr	r2, [sp, #24]
   122d4:	add	r1, r2, r1
   122d8:	sub	r2, r0, #1
   122dc:	b	122ec <putchar_unlocked@plt+0x1474>
   122e0:	add	r1, r1, #1
   122e4:	subs	r2, r2, #1
   122e8:	beq	12238 <putchar_unlocked@plt+0x13c0>
   122ec:	ldrb	r3, [r1]
   122f0:	sub	r3, r3, #91	; 0x5b
   122f4:	cmp	r3, #33	; 0x21
   122f8:	bhi	122e0 <putchar_unlocked@plt+0x1468>
   122fc:	add	r5, pc, #0
   12300:	ldr	pc, [r5, r3, lsl #2]
   12304:	strdeq	r2, [r1], -ip
   12308:	strdeq	r2, [r1], -ip
   1230c:	andeq	r2, r1, r0, ror #5
   12310:	strdeq	r2, [r1], -ip
   12314:	andeq	r2, r1, r0, ror #5
   12318:	strdeq	r2, [r1], -ip
   1231c:	andeq	r2, r1, r0, ror #5
   12320:	andeq	r2, r1, r0, ror #5
   12324:	andeq	r2, r1, r0, ror #5
   12328:	andeq	r2, r1, r0, ror #5
   1232c:	andeq	r2, r1, r0, ror #5
   12330:	andeq	r2, r1, r0, ror #5
   12334:	andeq	r2, r1, r0, ror #5
   12338:	andeq	r2, r1, r0, ror #5
   1233c:	andeq	r2, r1, r0, ror #5
   12340:	andeq	r2, r1, r0, ror #5
   12344:	andeq	r2, r1, r0, ror #5
   12348:	andeq	r2, r1, r0, ror #5
   1234c:	andeq	r2, r1, r0, ror #5
   12350:	andeq	r2, r1, r0, ror #5
   12354:	andeq	r2, r1, r0, ror #5
   12358:	andeq	r2, r1, r0, ror #5
   1235c:	andeq	r2, r1, r0, ror #5
   12360:	andeq	r2, r1, r0, ror #5
   12364:	andeq	r2, r1, r0, ror #5
   12368:	andeq	r2, r1, r0, ror #5
   1236c:	andeq	r2, r1, r0, ror #5
   12370:	andeq	r2, r1, r0, ror #5
   12374:	andeq	r2, r1, r0, ror #5
   12378:	andeq	r2, r1, r0, ror #5
   1237c:	andeq	r2, r1, r0, ror #5
   12380:	andeq	r2, r1, r0, ror #5
   12384:	andeq	r2, r1, r0, ror #5
   12388:	strdeq	r2, [r1], -ip
   1238c:	mov	r8, r0
   12390:	b	11dc0 <putchar_unlocked@plt+0xf48>
   12394:	ldr	r0, [sp, #36]	; 0x24
   12398:	cmp	r0, #0
   1239c:	beq	1243c <putchar_unlocked@plt+0x15c4>
   123a0:	add	r0, r7, #2
   123a4:	cmp	r0, lr
   123a8:	bcs	1243c <putchar_unlocked@plt+0x15c4>
   123ac:	add	r1, r7, ip
   123b0:	ldrb	r1, [r1, #1]
   123b4:	cmp	r1, #63	; 0x3f
   123b8:	bne	1243c <putchar_unlocked@plt+0x15c4>
   123bc:	ldrb	r1, [ip, r0]
   123c0:	sub	r2, r1, #33	; 0x21
   123c4:	cmp	r2, #29
   123c8:	bhi	1243c <putchar_unlocked@plt+0x15c4>
   123cc:	mov	r3, #1
   123d0:	movw	r6, #20929	; 0x51c1
   123d4:	movt	r6, #14336	; 0x3800
   123d8:	tst	r6, r3, lsl r2
   123dc:	beq	1243c <putchar_unlocked@plt+0x15c4>
   123e0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   123e4:	tst	r2, #1
   123e8:	bne	12704 <putchar_unlocked@plt+0x188c>
   123ec:	cmp	r8, sl
   123f0:	movcc	r2, #63	; 0x3f
   123f4:	strbcc	r2, [r5, r8]
   123f8:	add	r2, r8, #1
   123fc:	cmp	r2, sl
   12400:	movcc	r3, #34	; 0x22
   12404:	strbcc	r3, [r5, r2]
   12408:	add	r2, r8, #2
   1240c:	cmp	r2, sl
   12410:	movcc	r3, #34	; 0x22
   12414:	strbcc	r3, [r5, r2]
   12418:	add	r2, r8, #3
   1241c:	cmp	r2, sl
   12420:	movcc	r3, #63	; 0x3f
   12424:	strbcc	r3, [r5, r2]
   12428:	add	r8, r8, #4
   1242c:	mov	r7, r0
   12430:	mov	r4, r1
   12434:	mov	r6, #0
   12438:	b	11dc0 <putchar_unlocked@plt+0xf48>
   1243c:	mov	r6, #0
   12440:	b	11dc0 <putchar_unlocked@plt+0xf48>
   12444:	add	r0, r2, r7
   12448:	str	r0, [sp, #52]	; 0x34
   1244c:	mov	r2, #0
   12450:	ldr	lr, [sp, #32]
   12454:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12458:	str	r1, [sp, #48]	; 0x30
   1245c:	tst	r1, #1
   12460:	bne	1253c <putchar_unlocked@plt+0x16c4>
   12464:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12468:	tst	r1, #1
   1246c:	bne	12704 <putchar_unlocked@plt+0x188c>
   12470:	mov	r3, r0
   12474:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12478:	subs	r1, r0, #2
   1247c:	movwne	r1, #1
   12480:	orr	r1, r1, r3
   12484:	tst	r1, #1
   12488:	bne	124c0 <putchar_unlocked@plt+0x1648>
   1248c:	cmp	r8, sl
   12490:	movcc	r0, #39	; 0x27
   12494:	strbcc	r0, [r5, r8]
   12498:	add	r2, r8, #1
   1249c:	cmp	r2, sl
   124a0:	movcc	r0, #36	; 0x24
   124a4:	strbcc	r0, [r5, r2]
   124a8:	add	r2, r8, #2
   124ac:	cmp	r2, sl
   124b0:	movcc	r0, #39	; 0x27
   124b4:	strbcc	r0, [r5, r2]
   124b8:	add	r8, r8, #3
   124bc:	mov	r3, #1
   124c0:	cmp	r8, sl
   124c4:	movcc	r1, #92	; 0x5c
   124c8:	strbcc	r1, [r5, r8]
   124cc:	add	r2, r8, #1
   124d0:	cmp	r2, sl
   124d4:	bcs	124e8 <putchar_unlocked@plt+0x1670>
   124d8:	uxtb	r1, r4
   124dc:	mov	r0, #48	; 0x30
   124e0:	orr	r1, r0, r1, lsr #6
   124e4:	strb	r1, [r5, r2]
   124e8:	add	r2, r8, #2
   124ec:	cmp	r2, sl
   124f0:	lsrcc	r1, r4, #3
   124f4:	movcc	r0, #6
   124f8:	bficc	r1, r0, #3, #29
   124fc:	strbcc	r1, [r5, r2]
   12500:	mov	r0, #6
   12504:	bfi	r4, r0, #3, #29
   12508:	add	r8, r8, #3
   1250c:	mov	r2, #1
   12510:	mov	r0, r3
   12514:	b	12560 <putchar_unlocked@plt+0x16e8>
   12518:	cmp	r8, sl
   1251c:	strbcc	r4, [r5, r8]
   12520:	ldr	r1, [sp, #76]	; 0x4c
   12524:	ldrb	r4, [r1, r7]
   12528:	add	r8, r8, #1
   1252c:	mov	r7, r3
   12530:	ldr	r1, [sp, #48]	; 0x30
   12534:	tst	r1, #1
   12538:	beq	12464 <putchar_unlocked@plt+0x15ec>
   1253c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12540:	tst	r1, #1
   12544:	beq	12558 <putchar_unlocked@plt+0x16e0>
   12548:	cmp	r8, sl
   1254c:	movcc	r1, #92	; 0x5c
   12550:	strbcc	r1, [r5, r8]
   12554:	add	r8, r8, #1
   12558:	mov	r1, #0
   1255c:	str	r1, [fp, #-52]	; 0xffffffcc
   12560:	and	r9, r2, #1
   12564:	add	r3, r7, #1
   12568:	ldr	r1, [sp, #52]	; 0x34
   1256c:	cmp	r1, r3
   12570:	bls	125b4 <putchar_unlocked@plt+0x173c>
   12574:	cmp	r9, #0
   12578:	movwne	r9, #1
   1257c:	mvn	r1, r0
   12580:	orr	r1, r1, r9
   12584:	tst	r1, #1
   12588:	bne	12518 <putchar_unlocked@plt+0x16a0>
   1258c:	cmp	r8, sl
   12590:	movcc	r1, #39	; 0x27
   12594:	strbcc	r1, [r5, r8]
   12598:	add	r1, r8, #1
   1259c:	cmp	r1, sl
   125a0:	movcc	r0, #39	; 0x27
   125a4:	strbcc	r0, [r5, r1]
   125a8:	add	r8, r8, #2
   125ac:	mov	r0, #0
   125b0:	b	12518 <putchar_unlocked@plt+0x16a0>
   125b4:	str	r0, [fp, #-56]	; 0xffffffc8
   125b8:	cmp	r9, #0
   125bc:	movwne	r9, #1
   125c0:	cmp	r9, #0
   125c4:	beq	12148 <putchar_unlocked@plt+0x12d0>
   125c8:	b	1217c <putchar_unlocked@plt+0x1304>
   125cc:	mov	r6, #0
   125d0:	b	12610 <putchar_unlocked@plt+0x1798>
   125d4:	mov	r6, #0
   125d8:	ldr	r0, [sp, #48]	; 0x30
   125dc:	cmp	r0, lr
   125e0:	bcs	12610 <putchar_unlocked@plt+0x1798>
   125e4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   125e8:	add	r0, ip, r7
   125ec:	ldr	r2, [sp, #52]	; 0x34
   125f0:	ldrb	r1, [r0, r2]
   125f4:	cmp	r1, #0
   125f8:	beq	12104 <putchar_unlocked@plt+0x128c>
   125fc:	add	r2, r2, #1
   12600:	add	r1, r7, r2
   12604:	cmp	r1, lr
   12608:	bcc	125f0 <putchar_unlocked@plt+0x1778>
   1260c:	b	12104 <putchar_unlocked@plt+0x128c>
   12610:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12614:	ldr	r2, [sp, #52]	; 0x34
   12618:	b	12104 <putchar_unlocked@plt+0x128c>
   1261c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12620:	eor	r0, r1, #2
   12624:	orr	r0, r0, r8
   12628:	clz	r0, r0
   1262c:	lsr	r0, r0, #5
   12630:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12634:	tst	r3, r0
   12638:	bne	12704 <putchar_unlocked@plt+0x188c>
   1263c:	mov	r6, r5
   12640:	subs	r0, r1, #2
   12644:	movwne	r0, #1
   12648:	orr	r0, r3, r0
   1264c:	tst	r0, #1
   12650:	ldr	r2, [sp, #92]	; 0x5c
   12654:	ldreq	r0, [sp, #64]	; 0x40
   12658:	eoreq	r0, r0, #1
   1265c:	tsteq	r0, #1
   12660:	bne	126a0 <putchar_unlocked@plt+0x1828>
   12664:	mov	r9, lr
   12668:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1266c:	tst	r0, #1
   12670:	bne	1276c <putchar_unlocked@plt+0x18f4>
   12674:	ldr	r0, [sp, #84]	; 0x54
   12678:	cmp	r0, #0
   1267c:	beq	126a0 <putchar_unlocked@plt+0x1828>
   12680:	mov	r0, #0
   12684:	str	r0, [fp, #-48]	; 0xffffffd0
   12688:	mov	r1, #2
   1268c:	cmp	sl, #0
   12690:	mov	r0, r2
   12694:	mov	r4, r3
   12698:	ldr	r7, [sp, #84]	; 0x54
   1269c:	beq	11878 <putchar_unlocked@plt+0xa00>
   126a0:	ldr	r1, [fp, #-84]	; 0xffffffac
   126a4:	clz	r0, r1
   126a8:	lsr	r0, r0, #5
   126ac:	orr	r0, r0, r3
   126b0:	tst	r0, #1
   126b4:	bne	126e0 <putchar_unlocked@plt+0x1868>
   126b8:	ldrb	r0, [r1]
   126bc:	cmp	r0, #0
   126c0:	beq	126e0 <putchar_unlocked@plt+0x1868>
   126c4:	add	r1, r1, #1
   126c8:	cmp	r8, sl
   126cc:	strbcc	r0, [r6, r8]
   126d0:	add	r8, r8, #1
   126d4:	ldrb	r0, [r1], #1
   126d8:	cmp	r0, #0
   126dc:	bne	126c8 <putchar_unlocked@plt+0x1850>
   126e0:	cmp	r8, sl
   126e4:	movcc	r0, #0
   126e8:	strbcc	r0, [r6, r8]
   126ec:	b	12760 <putchar_unlocked@plt+0x18e8>
   126f0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   126f4:	mov	lr, r4
   126f8:	b	12704 <putchar_unlocked@plt+0x188c>
   126fc:	ldr	r5, [sp, #28]
   12700:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12704:	mov	r0, #0
   12708:	ldr	r1, [fp, #12]
   1270c:	bic	r1, r1, #2
   12710:	mov	r2, #2
   12714:	ldr	r3, [sp, #92]	; 0x5c
   12718:	tst	r3, #1
   1271c:	movwne	r2, #4
   12720:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12724:	cmp	r3, #2
   12728:	movne	r2, r3
   1272c:	str	r2, [sp]
   12730:	str	r1, [sp, #4]
   12734:	str	r0, [sp, #8]
   12738:	ldr	r0, [sp, #80]	; 0x50
   1273c:	str	r0, [sp, #12]
   12740:	ldr	r0, [sp, #88]	; 0x58
   12744:	str	r0, [sp, #16]
   12748:	mov	r0, r5
   1274c:	mov	r1, sl
   12750:	mov	r2, ip
   12754:	mov	r3, lr
   12758:	bl	117ec <putchar_unlocked@plt+0x974>
   1275c:	mov	r8, r0
   12760:	mov	r0, r8
   12764:	sub	sp, fp, #28
   12768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1276c:	mov	r0, #5
   12770:	str	r0, [sp]
   12774:	ldr	r0, [fp, #12]
   12778:	str	r0, [sp, #4]
   1277c:	ldr	r0, [fp, #16]
   12780:	str	r0, [sp, #8]
   12784:	ldr	r0, [sp, #80]	; 0x50
   12788:	str	r0, [sp, #12]
   1278c:	ldr	r0, [sp, #88]	; 0x58
   12790:	str	r0, [sp, #16]
   12794:	mov	r0, r6
   12798:	ldr	r1, [sp, #84]	; 0x54
   1279c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   127a0:	mov	r3, r9
   127a4:	b	12758 <putchar_unlocked@plt+0x18e0>
   127a8:	bl	10e6c <abort@plt>
   127ac:	mov	r3, r2
   127b0:	mov	r2, #0
   127b4:	b	127b8 <putchar_unlocked@plt+0x1940>
   127b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127bc:	add	fp, sp, #28
   127c0:	sub	sp, sp, #36	; 0x24
   127c4:	mov	r4, r2
   127c8:	str	r2, [sp, #24]
   127cc:	mov	r5, r1
   127d0:	mov	r6, r0
   127d4:	str	r0, [sp, #20]
   127d8:	movw	r8, #20792	; 0x5138
   127dc:	movt	r8, #2
   127e0:	cmp	r3, #0
   127e4:	movne	r8, r3
   127e8:	bl	10dd0 <__errno_location@plt>
   127ec:	str	r0, [sp, #28]
   127f0:	ldm	r8, {r3, r9}
   127f4:	ldr	r1, [r8, #40]	; 0x28
   127f8:	ldr	r2, [r8, #44]	; 0x2c
   127fc:	ldr	r7, [r0]
   12800:	str	r7, [sp, #32]
   12804:	add	sl, r8, #8
   12808:	cmp	r4, #0
   1280c:	orreq	r9, r9, #1
   12810:	stm	sp, {r3, r9, sl}
   12814:	str	r1, [sp, #12]
   12818:	str	r2, [sp, #16]
   1281c:	mov	r0, #0
   12820:	mov	r1, #0
   12824:	mov	r2, r6
   12828:	mov	r3, r5
   1282c:	mov	r7, r5
   12830:	bl	117ec <putchar_unlocked@plt+0x974>
   12834:	mov	r5, r0
   12838:	add	r4, r0, #1
   1283c:	mov	r0, r4
   12840:	bl	136c0 <putchar_unlocked@plt+0x2848>
   12844:	mov	r6, r0
   12848:	ldr	r0, [r8]
   1284c:	ldr	r1, [r8, #40]	; 0x28
   12850:	ldr	r2, [r8, #44]	; 0x2c
   12854:	stm	sp, {r0, r9, sl}
   12858:	str	r1, [sp, #12]
   1285c:	str	r2, [sp, #16]
   12860:	mov	r0, r6
   12864:	mov	r1, r4
   12868:	ldr	r2, [sp, #20]
   1286c:	mov	r3, r7
   12870:	bl	117ec <putchar_unlocked@plt+0x974>
   12874:	ldr	r0, [sp, #24]
   12878:	ldr	r1, [sp, #32]
   1287c:	ldr	r2, [sp, #28]
   12880:	str	r1, [r2]
   12884:	cmp	r0, #0
   12888:	strne	r5, [r0]
   1288c:	mov	r0, r6
   12890:	sub	sp, fp, #28
   12894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12898:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1289c:	add	fp, sp, #24
   128a0:	movw	r8, #20688	; 0x50d0
   128a4:	movt	r8, #2
   128a8:	ldr	r4, [r8]
   128ac:	movw	r5, #20692	; 0x50d4
   128b0:	movt	r5, #2
   128b4:	ldr	r0, [r5]
   128b8:	cmp	r0, #2
   128bc:	blt	128e8 <putchar_unlocked@plt+0x1a70>
   128c0:	add	r7, r4, #12
   128c4:	mov	r6, #0
   128c8:	ldr	r0, [r7, r6, lsl #3]
   128cc:	bl	1405c <putchar_unlocked@plt+0x31e4>
   128d0:	add	r0, r6, #1
   128d4:	ldr	r1, [r5]
   128d8:	add	r2, r6, #2
   128dc:	cmp	r2, r1
   128e0:	mov	r6, r0
   128e4:	blt	128c8 <putchar_unlocked@plt+0x1a50>
   128e8:	ldr	r0, [r4, #4]
   128ec:	movw	r9, #20840	; 0x5168
   128f0:	movt	r9, #2
   128f4:	cmp	r0, r9
   128f8:	movw	r7, #20696	; 0x50d8
   128fc:	movt	r7, #2
   12900:	beq	12910 <putchar_unlocked@plt+0x1a98>
   12904:	bl	1405c <putchar_unlocked@plt+0x31e4>
   12908:	mov	r0, #256	; 0x100
   1290c:	stm	r7, {r0, r9}
   12910:	cmp	r4, r7
   12914:	beq	12924 <putchar_unlocked@plt+0x1aac>
   12918:	mov	r0, r4
   1291c:	bl	1405c <putchar_unlocked@plt+0x31e4>
   12920:	str	r7, [r8]
   12924:	mov	r0, #1
   12928:	str	r0, [r5]
   1292c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12930:	movw	r3, #20792	; 0x5138
   12934:	movt	r3, #2
   12938:	mvn	r2, #0
   1293c:	b	12940 <putchar_unlocked@plt+0x1ac8>
   12940:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12944:	add	fp, sp, #28
   12948:	sub	sp, sp, #44	; 0x2c
   1294c:	mov	r7, r3
   12950:	str	r2, [sp, #36]	; 0x24
   12954:	str	r1, [sp, #32]
   12958:	mov	r5, r0
   1295c:	bl	10dd0 <__errno_location@plt>
   12960:	cmp	r5, #0
   12964:	bmi	12ad4 <putchar_unlocked@plt+0x1c5c>
   12968:	cmn	r5, #-2147483647	; 0x80000001
   1296c:	beq	12ad4 <putchar_unlocked@plt+0x1c5c>
   12970:	movw	r4, #20688	; 0x50d0
   12974:	movt	r4, #2
   12978:	ldr	r6, [r4]
   1297c:	str	r0, [sp, #28]
   12980:	ldr	r0, [r0]
   12984:	str	r0, [sp, #24]
   12988:	movw	r8, #20692	; 0x50d4
   1298c:	movt	r8, #2
   12990:	ldr	r1, [r8]
   12994:	cmp	r1, r5
   12998:	ble	129a4 <putchar_unlocked@plt+0x1b2c>
   1299c:	mov	sl, r6
   129a0:	b	12a10 <putchar_unlocked@plt+0x1b98>
   129a4:	str	r1, [fp, #-32]	; 0xffffffe0
   129a8:	mov	r0, #8
   129ac:	str	r0, [sp]
   129b0:	movw	r9, #20696	; 0x50d8
   129b4:	movt	r9, #2
   129b8:	subs	r0, r6, r9
   129bc:	movne	r0, r6
   129c0:	sub	r1, r5, r1
   129c4:	add	r2, r1, #1
   129c8:	sub	r1, fp, #32
   129cc:	mvn	r3, #-2147483648	; 0x80000000
   129d0:	bl	1379c <putchar_unlocked@plt+0x2924>
   129d4:	mov	sl, r0
   129d8:	str	r0, [r4]
   129dc:	cmp	r6, r9
   129e0:	bne	129ec <putchar_unlocked@plt+0x1b74>
   129e4:	ldrd	r0, [r9]
   129e8:	stm	sl, {r0, r1}
   129ec:	ldr	r1, [r8]
   129f0:	add	r0, sl, r1, lsl #3
   129f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   129f8:	sub	r1, r2, r1
   129fc:	lsl	r2, r1, #3
   12a00:	mov	r1, #0
   12a04:	bl	10de8 <memset@plt>
   12a08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12a0c:	str	r0, [r8]
   12a10:	mov	r9, sl
   12a14:	ldr	r6, [r9, r5, lsl #3]!
   12a18:	ldr	r4, [r9, #4]!
   12a1c:	ldm	r7, {r0, r1}
   12a20:	ldr	r2, [r7, #40]	; 0x28
   12a24:	ldr	r3, [r7, #44]	; 0x2c
   12a28:	orr	r8, r1, #1
   12a2c:	add	r1, r7, #8
   12a30:	stm	sp, {r0, r8}
   12a34:	str	r1, [sp, #20]
   12a38:	add	r0, sp, #8
   12a3c:	stm	r0, {r1, r2, r3}
   12a40:	mov	r0, r4
   12a44:	mov	r1, r6
   12a48:	ldr	r2, [sp, #32]
   12a4c:	ldr	r3, [sp, #36]	; 0x24
   12a50:	bl	117ec <putchar_unlocked@plt+0x974>
   12a54:	cmp	r6, r0
   12a58:	bhi	12abc <putchar_unlocked@plt+0x1c44>
   12a5c:	add	r6, r0, #1
   12a60:	str	r6, [sl, r5, lsl #3]
   12a64:	movw	r0, #20840	; 0x5168
   12a68:	movt	r0, #2
   12a6c:	cmp	r4, r0
   12a70:	beq	12a7c <putchar_unlocked@plt+0x1c04>
   12a74:	mov	r0, r4
   12a78:	bl	1405c <putchar_unlocked@plt+0x31e4>
   12a7c:	mov	r0, r6
   12a80:	bl	136c0 <putchar_unlocked@plt+0x2848>
   12a84:	mov	r4, r0
   12a88:	str	r0, [r9]
   12a8c:	ldr	r0, [r7]
   12a90:	ldr	r1, [r7, #40]	; 0x28
   12a94:	ldr	r2, [r7, #44]	; 0x2c
   12a98:	stm	sp, {r0, r8}
   12a9c:	ldr	r0, [sp, #20]
   12aa0:	add	r3, sp, #8
   12aa4:	stm	r3, {r0, r1, r2}
   12aa8:	mov	r0, r4
   12aac:	mov	r1, r6
   12ab0:	ldr	r2, [sp, #32]
   12ab4:	ldr	r3, [sp, #36]	; 0x24
   12ab8:	bl	117ec <putchar_unlocked@plt+0x974>
   12abc:	ldr	r0, [sp, #28]
   12ac0:	ldr	r1, [sp, #24]
   12ac4:	str	r1, [r0]
   12ac8:	mov	r0, r4
   12acc:	sub	sp, fp, #28
   12ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ad4:	bl	10e6c <abort@plt>
   12ad8:	movw	r3, #20792	; 0x5138
   12adc:	movt	r3, #2
   12ae0:	b	12940 <putchar_unlocked@plt+0x1ac8>
   12ae4:	mov	r1, r0
   12ae8:	mov	r0, #0
   12aec:	b	12930 <putchar_unlocked@plt+0x1ab8>
   12af0:	mov	r2, r1
   12af4:	mov	r1, r0
   12af8:	mov	r0, #0
   12afc:	b	12ad8 <putchar_unlocked@plt+0x1c60>
   12b00:	push	{r4, r5, r6, sl, fp, lr}
   12b04:	add	fp, sp, #16
   12b08:	sub	sp, sp, #48	; 0x30
   12b0c:	mov	r4, r2
   12b10:	mov	r5, r0
   12b14:	mov	r6, sp
   12b18:	mov	r0, r6
   12b1c:	bl	12b3c <putchar_unlocked@plt+0x1cc4>
   12b20:	mov	r0, r5
   12b24:	mov	r1, r4
   12b28:	mvn	r2, #0
   12b2c:	mov	r3, r6
   12b30:	bl	12940 <putchar_unlocked@plt+0x1ac8>
   12b34:	sub	sp, fp, #16
   12b38:	pop	{r4, r5, r6, sl, fp, pc}
   12b3c:	push	{fp, lr}
   12b40:	mov	fp, sp
   12b44:	vmov.i32	q8, #0	; 0x00000000
   12b48:	mov	r2, #32
   12b4c:	mov	r3, r0
   12b50:	vst1.32	{d16-d17}, [r3], r2
   12b54:	vst1.32	{d16-d17}, [r3]
   12b58:	add	r2, r0, #16
   12b5c:	vst1.32	{d16-d17}, [r2]
   12b60:	cmp	r1, #10
   12b64:	strne	r1, [r0]
   12b68:	popne	{fp, pc}
   12b6c:	bl	10e6c <abort@plt>
   12b70:	push	{r4, r5, r6, r7, fp, lr}
   12b74:	add	fp, sp, #16
   12b78:	sub	sp, sp, #48	; 0x30
   12b7c:	mov	r4, r3
   12b80:	mov	r5, r2
   12b84:	mov	r6, r0
   12b88:	mov	r7, sp
   12b8c:	mov	r0, r7
   12b90:	bl	12b3c <putchar_unlocked@plt+0x1cc4>
   12b94:	mov	r0, r6
   12b98:	mov	r1, r5
   12b9c:	mov	r2, r4
   12ba0:	mov	r3, r7
   12ba4:	bl	12940 <putchar_unlocked@plt+0x1ac8>
   12ba8:	sub	sp, fp, #16
   12bac:	pop	{r4, r5, r6, r7, fp, pc}
   12bb0:	mov	r2, r1
   12bb4:	mov	r1, r0
   12bb8:	mov	r0, #0
   12bbc:	b	12b00 <putchar_unlocked@plt+0x1c88>
   12bc0:	mov	r3, r2
   12bc4:	mov	r2, r1
   12bc8:	mov	r1, r0
   12bcc:	mov	r0, #0
   12bd0:	b	12b70 <putchar_unlocked@plt+0x1cf8>
   12bd4:	push	{r4, r5, r6, sl, fp, lr}
   12bd8:	add	fp, sp, #16
   12bdc:	sub	sp, sp, #48	; 0x30
   12be0:	mov	r4, r1
   12be4:	mov	r5, r0
   12be8:	movw	r0, #20792	; 0x5138
   12bec:	movt	r0, #2
   12bf0:	add	r1, r0, #16
   12bf4:	mov	r3, #32
   12bf8:	vld1.64	{d16-d17}, [r0], r3
   12bfc:	vld1.64	{d18-d19}, [r1]
   12c00:	mov	r6, sp
   12c04:	add	r1, r6, #16
   12c08:	vld1.64	{d20-d21}, [r0]
   12c0c:	vst1.64	{d18-d19}, [r1]
   12c10:	mov	r0, r6
   12c14:	vst1.64	{d16-d17}, [r0], r3
   12c18:	vst1.64	{d20-d21}, [r0]
   12c1c:	mov	r0, r6
   12c20:	mov	r1, r2
   12c24:	mov	r2, #1
   12c28:	bl	116e0 <putchar_unlocked@plt+0x868>
   12c2c:	mov	r0, #0
   12c30:	mov	r1, r5
   12c34:	mov	r2, r4
   12c38:	mov	r3, r6
   12c3c:	bl	12940 <putchar_unlocked@plt+0x1ac8>
   12c40:	sub	sp, fp, #16
   12c44:	pop	{r4, r5, r6, sl, fp, pc}
   12c48:	mov	r2, r1
   12c4c:	mvn	r1, #0
   12c50:	b	12bd4 <putchar_unlocked@plt+0x1d5c>
   12c54:	mov	r1, #58	; 0x3a
   12c58:	b	12c48 <putchar_unlocked@plt+0x1dd0>
   12c5c:	mov	r2, #58	; 0x3a
   12c60:	b	12bd4 <putchar_unlocked@plt+0x1d5c>
   12c64:	push	{r4, r5, r6, sl, fp, lr}
   12c68:	add	fp, sp, #16
   12c6c:	sub	sp, sp, #48	; 0x30
   12c70:	mov	r4, r2
   12c74:	mov	r5, r0
   12c78:	mov	r6, sp
   12c7c:	mov	r0, r6
   12c80:	bl	12b3c <putchar_unlocked@plt+0x1cc4>
   12c84:	mov	r0, r6
   12c88:	mov	r1, #58	; 0x3a
   12c8c:	mov	r2, #1
   12c90:	bl	116e0 <putchar_unlocked@plt+0x868>
   12c94:	mov	r0, r5
   12c98:	mov	r1, r4
   12c9c:	mvn	r2, #0
   12ca0:	mov	r3, r6
   12ca4:	bl	12940 <putchar_unlocked@plt+0x1ac8>
   12ca8:	sub	sp, fp, #16
   12cac:	pop	{r4, r5, r6, sl, fp, pc}
   12cb0:	push	{fp, lr}
   12cb4:	mov	fp, sp
   12cb8:	sub	sp, sp, #8
   12cbc:	mvn	ip, #0
   12cc0:	str	ip, [sp]
   12cc4:	bl	12cd0 <putchar_unlocked@plt+0x1e58>
   12cc8:	mov	sp, fp
   12ccc:	pop	{fp, pc}
   12cd0:	push	{r4, r5, r6, r7, fp, lr}
   12cd4:	add	fp, sp, #16
   12cd8:	sub	sp, sp, #48	; 0x30
   12cdc:	mov	r7, r3
   12ce0:	mov	r5, r0
   12ce4:	movw	r0, #20792	; 0x5138
   12ce8:	movt	r0, #2
   12cec:	add	r3, r0, #16
   12cf0:	mov	r4, #32
   12cf4:	vld1.64	{d16-d17}, [r0], r4
   12cf8:	vld1.64	{d18-d19}, [r3]
   12cfc:	mov	r6, sp
   12d00:	add	r3, r6, #16
   12d04:	vld1.64	{d20-d21}, [r0]
   12d08:	vst1.64	{d18-d19}, [r3]
   12d0c:	mov	r0, r6
   12d10:	vst1.64	{d16-d17}, [r0], r4
   12d14:	vst1.64	{d20-d21}, [r0]
   12d18:	mov	r0, r6
   12d1c:	bl	11738 <putchar_unlocked@plt+0x8c0>
   12d20:	ldr	r2, [fp, #8]
   12d24:	mov	r0, r5
   12d28:	mov	r1, r7
   12d2c:	mov	r3, r6
   12d30:	bl	12940 <putchar_unlocked@plt+0x1ac8>
   12d34:	sub	sp, fp, #16
   12d38:	pop	{r4, r5, r6, r7, fp, pc}
   12d3c:	mov	r3, r2
   12d40:	mov	r2, r1
   12d44:	mov	r1, r0
   12d48:	mov	r0, #0
   12d4c:	b	12cb0 <putchar_unlocked@plt+0x1e38>
   12d50:	push	{fp, lr}
   12d54:	mov	fp, sp
   12d58:	sub	sp, sp, #8
   12d5c:	mov	ip, r2
   12d60:	mov	r2, r1
   12d64:	mov	r1, r0
   12d68:	str	r3, [sp]
   12d6c:	mov	r0, #0
   12d70:	mov	r3, ip
   12d74:	bl	12cd0 <putchar_unlocked@plt+0x1e58>
   12d78:	mov	sp, fp
   12d7c:	pop	{fp, pc}
   12d80:	movw	r3, #20704	; 0x50e0
   12d84:	movt	r3, #2
   12d88:	b	12940 <putchar_unlocked@plt+0x1ac8>
   12d8c:	mov	r2, r1
   12d90:	mov	r1, r0
   12d94:	mov	r0, #0
   12d98:	b	12d80 <putchar_unlocked@plt+0x1f08>
   12d9c:	mvn	r2, #0
   12da0:	b	12d80 <putchar_unlocked@plt+0x1f08>
   12da4:	mov	r1, r0
   12da8:	mov	r0, #0
   12dac:	b	12d9c <putchar_unlocked@plt+0x1f24>
   12db0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12db4:	add	fp, sp, #24
   12db8:	sub	sp, sp, #16
   12dbc:	mov	r4, r1
   12dc0:	mov	r5, r0
   12dc4:	mov	r7, #0
   12dc8:	mov	r0, #0
   12dcc:	mov	r1, r5
   12dd0:	mov	r2, #5
   12dd4:	bl	10ce0 <dcgettext@plt>
   12dd8:	cmp	r0, r5
   12ddc:	beq	12de8 <putchar_unlocked@plt+0x1f70>
   12de0:	sub	sp, fp, #24
   12de4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12de8:	bl	1417c <putchar_unlocked@plt+0x3304>
   12dec:	mov	r6, r0
   12df0:	mov	r8, #56	; 0x38
   12df4:	mov	r0, #45	; 0x2d
   12df8:	stm	sp, {r0, r8}
   12dfc:	str	r7, [sp, #8]
   12e00:	str	r7, [sp, #12]
   12e04:	mov	r0, r6
   12e08:	mov	r1, #85	; 0x55
   12e0c:	mov	r2, #84	; 0x54
   12e10:	mov	r3, #70	; 0x46
   12e14:	bl	12eac <putchar_unlocked@plt+0x2034>
   12e18:	cmp	r0, #0
   12e1c:	beq	12e38 <putchar_unlocked@plt+0x1fc0>
   12e20:	ldrb	r1, [r5]
   12e24:	movw	r2, #18634	; 0x48ca
   12e28:	movt	r2, #1
   12e2c:	movw	r0, #18638	; 0x48ce
   12e30:	movt	r0, #1
   12e34:	b	12e7c <putchar_unlocked@plt+0x2004>
   12e38:	mov	r0, #48	; 0x30
   12e3c:	mov	r1, #51	; 0x33
   12e40:	str	r8, [sp]
   12e44:	stmib	sp, {r0, r1}
   12e48:	str	r0, [sp, #12]
   12e4c:	mov	r0, r6
   12e50:	mov	r1, #71	; 0x47
   12e54:	mov	r2, #66	; 0x42
   12e58:	mov	r3, #49	; 0x31
   12e5c:	bl	12eac <putchar_unlocked@plt+0x2034>
   12e60:	cmp	r0, #0
   12e64:	beq	12e8c <putchar_unlocked@plt+0x2014>
   12e68:	ldrb	r1, [r5]
   12e6c:	movw	r2, #18642	; 0x48d2
   12e70:	movt	r2, #1
   12e74:	movw	r0, #18646	; 0x48d6
   12e78:	movt	r0, #1
   12e7c:	cmp	r1, #96	; 0x60
   12e80:	moveq	r0, r2
   12e84:	sub	sp, fp, #24
   12e88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12e8c:	movw	r1, #18628	; 0x48c4
   12e90:	movt	r1, #1
   12e94:	movw	r0, #18632	; 0x48c8
   12e98:	movt	r0, #1
   12e9c:	cmp	r4, #9
   12ea0:	moveq	r0, r1
   12ea4:	sub	sp, fp, #24
   12ea8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12eac:	push	{r4, r5, r6, r7, fp, lr}
   12eb0:	add	fp, sp, #16
   12eb4:	sub	sp, sp, #16
   12eb8:	mov	r4, r3
   12ebc:	mov	r5, r2
   12ec0:	mov	r7, r1
   12ec4:	mov	r6, r0
   12ec8:	mov	r0, r1
   12ecc:	bl	13e60 <putchar_unlocked@plt+0x2fe8>
   12ed0:	ldrb	r1, [r6]
   12ed4:	cmp	r0, #0
   12ed8:	andne	r1, r1, #223	; 0xdf
   12edc:	mov	r0, #0
   12ee0:	cmp	r1, r7
   12ee4:	bne	12f1c <putchar_unlocked@plt+0x20a4>
   12ee8:	cmp	r7, #0
   12eec:	beq	12f24 <putchar_unlocked@plt+0x20ac>
   12ef0:	ldr	r0, [fp, #20]
   12ef4:	ldr	r1, [fp, #16]
   12ef8:	ldr	r2, [fp, #12]
   12efc:	ldr	r3, [fp, #8]
   12f00:	str	r2, [sp]
   12f04:	str	r1, [sp, #4]
   12f08:	str	r0, [sp, #8]
   12f0c:	mov	r0, r6
   12f10:	mov	r1, r5
   12f14:	mov	r2, r4
   12f18:	bl	12f30 <putchar_unlocked@plt+0x20b8>
   12f1c:	sub	sp, fp, #16
   12f20:	pop	{r4, r5, r6, r7, fp, pc}
   12f24:	mov	r0, #1
   12f28:	sub	sp, fp, #16
   12f2c:	pop	{r4, r5, r6, r7, fp, pc}
   12f30:	push	{r4, r5, r6, r7, fp, lr}
   12f34:	add	fp, sp, #16
   12f38:	sub	sp, sp, #8
   12f3c:	mov	r4, r3
   12f40:	mov	r5, r2
   12f44:	mov	r7, r1
   12f48:	mov	r6, r0
   12f4c:	mov	r0, r1
   12f50:	bl	13e60 <putchar_unlocked@plt+0x2fe8>
   12f54:	ldrb	r1, [r6, #1]
   12f58:	cmp	r0, #0
   12f5c:	andne	r1, r1, #223	; 0xdf
   12f60:	mov	r0, #0
   12f64:	cmp	r1, r7
   12f68:	bne	12f98 <putchar_unlocked@plt+0x2120>
   12f6c:	cmp	r7, #0
   12f70:	beq	12fa0 <putchar_unlocked@plt+0x2128>
   12f74:	ldr	r0, [fp, #16]
   12f78:	ldr	r1, [fp, #12]
   12f7c:	ldr	r3, [fp, #8]
   12f80:	str	r1, [sp]
   12f84:	str	r0, [sp, #4]
   12f88:	mov	r0, r6
   12f8c:	mov	r1, r5
   12f90:	mov	r2, r4
   12f94:	bl	12fac <putchar_unlocked@plt+0x2134>
   12f98:	sub	sp, fp, #16
   12f9c:	pop	{r4, r5, r6, r7, fp, pc}
   12fa0:	mov	r0, #1
   12fa4:	sub	sp, fp, #16
   12fa8:	pop	{r4, r5, r6, r7, fp, pc}
   12fac:	push	{r4, r5, r6, r7, fp, lr}
   12fb0:	add	fp, sp, #16
   12fb4:	sub	sp, sp, #8
   12fb8:	mov	r4, r3
   12fbc:	mov	r5, r2
   12fc0:	mov	r7, r1
   12fc4:	mov	r6, r0
   12fc8:	mov	r0, r1
   12fcc:	bl	13e60 <putchar_unlocked@plt+0x2fe8>
   12fd0:	ldrb	r1, [r6, #2]
   12fd4:	cmp	r0, #0
   12fd8:	andne	r1, r1, #223	; 0xdf
   12fdc:	mov	r0, #0
   12fe0:	cmp	r1, r7
   12fe4:	bne	1300c <putchar_unlocked@plt+0x2194>
   12fe8:	cmp	r7, #0
   12fec:	beq	13014 <putchar_unlocked@plt+0x219c>
   12ff0:	ldr	r0, [fp, #12]
   12ff4:	ldr	r3, [fp, #8]
   12ff8:	str	r0, [sp]
   12ffc:	mov	r0, r6
   13000:	mov	r1, r5
   13004:	mov	r2, r4
   13008:	bl	13020 <putchar_unlocked@plt+0x21a8>
   1300c:	sub	sp, fp, #16
   13010:	pop	{r4, r5, r6, r7, fp, pc}
   13014:	mov	r0, #1
   13018:	sub	sp, fp, #16
   1301c:	pop	{r4, r5, r6, r7, fp, pc}
   13020:	push	{r4, r5, r6, r7, fp, lr}
   13024:	add	fp, sp, #16
   13028:	mov	r4, r3
   1302c:	mov	r5, r2
   13030:	mov	r7, r1
   13034:	mov	r6, r0
   13038:	mov	r0, r1
   1303c:	bl	13e60 <putchar_unlocked@plt+0x2fe8>
   13040:	ldrb	r1, [r6, #3]
   13044:	ldr	r3, [fp, #8]
   13048:	cmp	r0, #0
   1304c:	andne	r1, r1, #223	; 0xdf
   13050:	mov	r0, #0
   13054:	cmp	r1, r7
   13058:	bne	1307c <putchar_unlocked@plt+0x2204>
   1305c:	cmp	r7, #0
   13060:	beq	13078 <putchar_unlocked@plt+0x2200>
   13064:	mov	r0, r6
   13068:	mov	r1, r5
   1306c:	mov	r2, r4
   13070:	pop	{r4, r5, r6, r7, fp, lr}
   13074:	b	13080 <putchar_unlocked@plt+0x2208>
   13078:	mov	r0, #1
   1307c:	pop	{r4, r5, r6, r7, fp, pc}
   13080:	push	{r4, r5, r6, r7, fp, lr}
   13084:	add	fp, sp, #16
   13088:	mov	r4, r3
   1308c:	mov	r5, r2
   13090:	mov	r7, r1
   13094:	mov	r6, r0
   13098:	mov	r0, r1
   1309c:	bl	13e60 <putchar_unlocked@plt+0x2fe8>
   130a0:	ldrb	r1, [r6, #4]
   130a4:	cmp	r0, #0
   130a8:	andne	r1, r1, #223	; 0xdf
   130ac:	mov	r0, #0
   130b0:	cmp	r1, r7
   130b4:	bne	130d8 <putchar_unlocked@plt+0x2260>
   130b8:	cmp	r7, #0
   130bc:	beq	130d4 <putchar_unlocked@plt+0x225c>
   130c0:	mov	r0, r6
   130c4:	mov	r1, r5
   130c8:	mov	r2, r4
   130cc:	pop	{r4, r5, r6, r7, fp, lr}
   130d0:	b	130dc <putchar_unlocked@plt+0x2264>
   130d4:	mov	r0, #1
   130d8:	pop	{r4, r5, r6, r7, fp, pc}
   130dc:	push	{r4, r5, r6, sl, fp, lr}
   130e0:	add	fp, sp, #16
   130e4:	mov	r4, r2
   130e8:	mov	r6, r1
   130ec:	mov	r5, r0
   130f0:	mov	r0, r1
   130f4:	bl	13e60 <putchar_unlocked@plt+0x2fe8>
   130f8:	ldrb	r1, [r5, #5]
   130fc:	cmp	r0, #0
   13100:	andne	r1, r1, #223	; 0xdf
   13104:	mov	r0, #0
   13108:	cmp	r1, r6
   1310c:	bne	1312c <putchar_unlocked@plt+0x22b4>
   13110:	cmp	r6, #0
   13114:	beq	13128 <putchar_unlocked@plt+0x22b0>
   13118:	mov	r0, r5
   1311c:	mov	r1, r4
   13120:	pop	{r4, r5, r6, sl, fp, lr}
   13124:	b	13130 <putchar_unlocked@plt+0x22b8>
   13128:	mov	r0, #1
   1312c:	pop	{r4, r5, r6, sl, fp, pc}
   13130:	push	{r4, r5, fp, lr}
   13134:	add	fp, sp, #8
   13138:	mov	r5, r1
   1313c:	mov	r4, r0
   13140:	mov	r0, r1
   13144:	bl	13e60 <putchar_unlocked@plt+0x2fe8>
   13148:	ldrb	r1, [r4, #6]
   1314c:	cmp	r0, #0
   13150:	andne	r1, r1, #223	; 0xdf
   13154:	mov	r0, #0
   13158:	cmp	r1, r5
   1315c:	popne	{r4, r5, fp, pc}
   13160:	cmp	r5, #0
   13164:	beq	13174 <putchar_unlocked@plt+0x22fc>
   13168:	mov	r0, r4
   1316c:	pop	{r4, r5, fp, lr}
   13170:	b	1317c <putchar_unlocked@plt+0x2304>
   13174:	mov	r0, #1
   13178:	pop	{r4, r5, fp, pc}
   1317c:	push	{r4, sl, fp, lr}
   13180:	add	fp, sp, #8
   13184:	mov	r4, r0
   13188:	mov	r0, #0
   1318c:	bl	13e60 <putchar_unlocked@plt+0x2fe8>
   13190:	ldrb	r1, [r4, #7]
   13194:	cmp	r0, #0
   13198:	beq	131ac <putchar_unlocked@plt+0x2334>
   1319c:	tst	r1, #223	; 0xdf
   131a0:	bne	131b4 <putchar_unlocked@plt+0x233c>
   131a4:	mov	r0, #1
   131a8:	pop	{r4, sl, fp, pc}
   131ac:	cmp	r1, #0
   131b0:	beq	131a4 <putchar_unlocked@plt+0x232c>
   131b4:	mov	r0, #0
   131b8:	pop	{r4, sl, fp, pc}
   131bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   131c0:	add	fp, sp, #24
   131c4:	sub	sp, sp, #32
   131c8:	mov	r4, r2
   131cc:	mov	r8, r0
   131d0:	ldr	r6, [fp, #12]
   131d4:	ldr	r7, [fp, #8]
   131d8:	cmp	r1, #0
   131dc:	beq	13204 <putchar_unlocked@plt+0x238c>
   131e0:	mov	r5, r1
   131e4:	str	r4, [sp]
   131e8:	str	r3, [sp, #4]
   131ec:	movw	r2, #18736	; 0x4930
   131f0:	movt	r2, #1
   131f4:	mov	r0, r8
   131f8:	mov	r1, #1
   131fc:	mov	r3, r5
   13200:	b	1321c <putchar_unlocked@plt+0x23a4>
   13204:	str	r3, [sp]
   13208:	movw	r2, #18748	; 0x493c
   1320c:	movt	r2, #1
   13210:	mov	r0, r8
   13214:	mov	r1, #1
   13218:	mov	r3, r4
   1321c:	bl	10e0c <__fprintf_chk@plt>
   13220:	movw	r1, #18755	; 0x4943
   13224:	movt	r1, #1
   13228:	mov	r0, #0
   1322c:	mov	r2, #5
   13230:	bl	10ce0 <dcgettext@plt>
   13234:	mov	r3, r0
   13238:	movw	r0, #2022	; 0x7e6
   1323c:	str	r0, [sp]
   13240:	movw	r2, #19473	; 0x4c11
   13244:	movt	r2, #1
   13248:	mov	r0, r8
   1324c:	mov	r1, #1
   13250:	bl	10e0c <__fprintf_chk@plt>
   13254:	movw	r4, #17605	; 0x44c5
   13258:	movt	r4, #1
   1325c:	mov	r0, r4
   13260:	mov	r1, r8
   13264:	bl	10c80 <fputs_unlocked@plt>
   13268:	movw	r1, #18759	; 0x4947
   1326c:	movt	r1, #1
   13270:	mov	r0, #0
   13274:	mov	r2, #5
   13278:	bl	10ce0 <dcgettext@plt>
   1327c:	mov	r2, r0
   13280:	movw	r3, #18930	; 0x49f2
   13284:	movt	r3, #1
   13288:	mov	r0, r8
   1328c:	mov	r1, #1
   13290:	bl	10e0c <__fprintf_chk@plt>
   13294:	mov	r0, r4
   13298:	mov	r1, r8
   1329c:	bl	10c80 <fputs_unlocked@plt>
   132a0:	cmp	r6, #9
   132a4:	bhi	132e0 <putchar_unlocked@plt+0x2468>
   132a8:	add	r0, pc, #0
   132ac:	ldr	pc, [r0, r6, lsl #2]
   132b0:	ldrdeq	r3, [r1], -r8
   132b4:	andeq	r3, r1, ip, ror #5
   132b8:	andeq	r3, r1, ip, lsl r3
   132bc:	andeq	r3, r1, r4, asr #6
   132c0:	andeq	r3, r1, ip, ror #6
   132c4:	muleq	r1, r4, r3
   132c8:			; <UNDEFINED> instruction: 0x000133bc
   132cc:	strdeq	r3, [r1], -r4
   132d0:	muleq	r1, r4, r4
   132d4:	andeq	r3, r1, ip, lsr r4
   132d8:	sub	sp, fp, #24
   132dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   132e0:	movw	r1, #19283	; 0x4b53
   132e4:	movt	r1, #1
   132e8:	b	13444 <putchar_unlocked@plt+0x25cc>
   132ec:	movw	r1, #18964	; 0x4a14
   132f0:	movt	r1, #1
   132f4:	mov	r0, #0
   132f8:	mov	r2, #5
   132fc:	bl	10ce0 <dcgettext@plt>
   13300:	mov	r2, r0
   13304:	ldr	r3, [r7]
   13308:	mov	r0, r8
   1330c:	mov	r1, #1
   13310:	sub	sp, fp, #24
   13314:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13318:	b	10e0c <__fprintf_chk@plt>
   1331c:	movw	r1, #18980	; 0x4a24
   13320:	movt	r1, #1
   13324:	mov	r0, #0
   13328:	mov	r2, #5
   1332c:	bl	10ce0 <dcgettext@plt>
   13330:	mov	r2, r0
   13334:	ldr	r3, [r7]
   13338:	ldr	r0, [r7, #4]
   1333c:	str	r0, [sp]
   13340:	b	13430 <putchar_unlocked@plt+0x25b8>
   13344:	movw	r1, #19003	; 0x4a3b
   13348:	movt	r1, #1
   1334c:	mov	r0, #0
   13350:	mov	r2, #5
   13354:	bl	10ce0 <dcgettext@plt>
   13358:	mov	r2, r0
   1335c:	ldr	r3, [r7]
   13360:	ldmib	r7, {r0, r1}
   13364:	stm	sp, {r0, r1}
   13368:	b	13430 <putchar_unlocked@plt+0x25b8>
   1336c:	movw	r1, #19031	; 0x4a57
   13370:	movt	r1, #1
   13374:	mov	r0, #0
   13378:	mov	r2, #5
   1337c:	bl	10ce0 <dcgettext@plt>
   13380:	mov	r2, r0
   13384:	ldr	r3, [r7]
   13388:	ldmib	r7, {r0, r1, r7}
   1338c:	stm	sp, {r0, r1, r7}
   13390:	b	13430 <putchar_unlocked@plt+0x25b8>
   13394:	movw	r1, #19063	; 0x4a77
   13398:	movt	r1, #1
   1339c:	mov	r0, #0
   133a0:	mov	r2, #5
   133a4:	bl	10ce0 <dcgettext@plt>
   133a8:	mov	r2, r0
   133ac:	ldr	r3, [r7]
   133b0:	ldmib	r7, {r0, r1, r6, r7}
   133b4:	stm	sp, {r0, r1, r6, r7}
   133b8:	b	13430 <putchar_unlocked@plt+0x25b8>
   133bc:	movw	r1, #19099	; 0x4a9b
   133c0:	movt	r1, #1
   133c4:	mov	r0, #0
   133c8:	mov	r2, #5
   133cc:	bl	10ce0 <dcgettext@plt>
   133d0:	mov	r2, r0
   133d4:	ldr	r3, [r7]
   133d8:	ldmib	r7, {r0, r1, r6}
   133dc:	ldr	r5, [r7, #16]
   133e0:	ldr	r7, [r7, #20]
   133e4:	stm	sp, {r0, r1, r6}
   133e8:	str	r5, [sp, #12]
   133ec:	str	r7, [sp, #16]
   133f0:	b	13430 <putchar_unlocked@plt+0x25b8>
   133f4:	movw	r1, #19139	; 0x4ac3
   133f8:	movt	r1, #1
   133fc:	mov	r0, #0
   13400:	mov	r2, #5
   13404:	bl	10ce0 <dcgettext@plt>
   13408:	mov	r2, r0
   1340c:	ldr	r3, [r7]
   13410:	ldmib	r7, {r0, r1, r6}
   13414:	ldr	r5, [r7, #16]
   13418:	ldr	r4, [r7, #20]
   1341c:	ldr	r7, [r7, #24]
   13420:	stm	sp, {r0, r1, r6}
   13424:	str	r5, [sp, #12]
   13428:	str	r4, [sp, #16]
   1342c:	str	r7, [sp, #20]
   13430:	mov	r0, r8
   13434:	mov	r1, #1
   13438:	b	134e4 <putchar_unlocked@plt+0x266c>
   1343c:	movw	r1, #19231	; 0x4b1f
   13440:	movt	r1, #1
   13444:	mov	r0, #0
   13448:	mov	r2, #5
   1344c:	bl	10ce0 <dcgettext@plt>
   13450:	mov	ip, r0
   13454:	ldr	r3, [r7]
   13458:	ldr	r0, [r7, #4]
   1345c:	ldr	r1, [r7, #8]
   13460:	ldr	r6, [r7, #12]
   13464:	ldr	r5, [r7, #16]
   13468:	ldr	r4, [r7, #20]
   1346c:	ldr	r2, [r7, #24]
   13470:	ldr	lr, [r7, #28]
   13474:	ldr	r7, [r7, #32]
   13478:	stm	sp, {r0, r1, r6}
   1347c:	str	r5, [sp, #12]
   13480:	str	r4, [sp, #16]
   13484:	str	r2, [sp, #20]
   13488:	str	lr, [sp, #24]
   1348c:	str	r7, [sp, #28]
   13490:	b	134d8 <putchar_unlocked@plt+0x2660>
   13494:	movw	r1, #19183	; 0x4aef
   13498:	movt	r1, #1
   1349c:	mov	r0, #0
   134a0:	mov	r2, #5
   134a4:	bl	10ce0 <dcgettext@plt>
   134a8:	mov	ip, r0
   134ac:	ldr	r3, [r7]
   134b0:	ldmib	r7, {r0, r1, r6}
   134b4:	ldr	r5, [r7, #16]
   134b8:	ldr	r4, [r7, #20]
   134bc:	ldr	r2, [r7, #24]
   134c0:	ldr	r7, [r7, #28]
   134c4:	stm	sp, {r0, r1, r6}
   134c8:	str	r5, [sp, #12]
   134cc:	str	r4, [sp, #16]
   134d0:	str	r2, [sp, #20]
   134d4:	str	r7, [sp, #24]
   134d8:	mov	r0, r8
   134dc:	mov	r1, #1
   134e0:	mov	r2, ip
   134e4:	bl	10e0c <__fprintf_chk@plt>
   134e8:	sub	sp, fp, #24
   134ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   134f0:	push	{r4, sl, fp, lr}
   134f4:	add	fp, sp, #8
   134f8:	sub	sp, sp, #8
   134fc:	mov	lr, #0
   13500:	ldr	ip, [fp, #8]
   13504:	ldr	r4, [ip, lr, lsl #2]
   13508:	add	lr, lr, #1
   1350c:	cmp	r4, #0
   13510:	bne	13504 <putchar_unlocked@plt+0x268c>
   13514:	sub	r4, lr, #1
   13518:	str	ip, [sp]
   1351c:	str	r4, [sp, #4]
   13520:	bl	131bc <putchar_unlocked@plt+0x2344>
   13524:	sub	sp, fp, #8
   13528:	pop	{r4, sl, fp, pc}
   1352c:	push	{r4, r5, fp, lr}
   13530:	add	fp, sp, #8
   13534:	sub	sp, sp, #48	; 0x30
   13538:	mov	ip, #0
   1353c:	ldr	r4, [fp, #8]
   13540:	add	lr, sp, #8
   13544:	ldr	r5, [r4]
   13548:	str	r5, [lr, ip, lsl #2]
   1354c:	cmp	r5, #0
   13550:	beq	13568 <putchar_unlocked@plt+0x26f0>
   13554:	add	ip, ip, #1
   13558:	add	r4, r4, #4
   1355c:	cmp	ip, #10
   13560:	bne	13544 <putchar_unlocked@plt+0x26cc>
   13564:	mov	ip, #10
   13568:	str	lr, [sp]
   1356c:	str	ip, [sp, #4]
   13570:	bl	131bc <putchar_unlocked@plt+0x2344>
   13574:	sub	sp, fp, #8
   13578:	pop	{r4, r5, fp, pc}
   1357c:	push	{fp, lr}
   13580:	mov	fp, sp
   13584:	sub	sp, sp, #8
   13588:	add	ip, fp, #8
   1358c:	str	ip, [sp, #4]
   13590:	str	ip, [sp]
   13594:	bl	1352c <putchar_unlocked@plt+0x26b4>
   13598:	mov	sp, fp
   1359c:	pop	{fp, pc}
   135a0:	push	{fp, lr}
   135a4:	mov	fp, sp
   135a8:	movw	r0, #20772	; 0x5124
   135ac:	movt	r0, #2
   135b0:	ldr	r1, [r0]
   135b4:	movw	r0, #17605	; 0x44c5
   135b8:	movt	r0, #1
   135bc:	bl	10c80 <fputs_unlocked@plt>
   135c0:	movw	r1, #19343	; 0x4b8f
   135c4:	movt	r1, #1
   135c8:	mov	r0, #0
   135cc:	mov	r2, #5
   135d0:	bl	10ce0 <dcgettext@plt>
   135d4:	mov	r1, r0
   135d8:	movw	r2, #19363	; 0x4ba3
   135dc:	movt	r2, #1
   135e0:	mov	r0, #1
   135e4:	bl	10df4 <__printf_chk@plt>
   135e8:	movw	r1, #19385	; 0x4bb9
   135ec:	movt	r1, #1
   135f0:	mov	r0, #0
   135f4:	mov	r2, #5
   135f8:	bl	10ce0 <dcgettext@plt>
   135fc:	mov	r1, r0
   13600:	movw	r2, #17931	; 0x460b
   13604:	movt	r2, #1
   13608:	movw	r3, #18108	; 0x46bc
   1360c:	movt	r3, #1
   13610:	mov	r0, #1
   13614:	bl	10df4 <__printf_chk@plt>
   13618:	movw	r1, #19405	; 0x4bcd
   1361c:	movt	r1, #1
   13620:	mov	r0, #0
   13624:	mov	r2, #5
   13628:	bl	10ce0 <dcgettext@plt>
   1362c:	mov	r1, r0
   13630:	movw	r2, #19444	; 0x4bf4
   13634:	movt	r2, #1
   13638:	mov	r0, #1
   1363c:	pop	{fp, lr}
   13640:	b	10df4 <__printf_chk@plt>
   13644:	b	13648 <putchar_unlocked@plt+0x27d0>
   13648:	push	{r4, r5, r6, sl, fp, lr}
   1364c:	add	fp, sp, #16
   13650:	mov	r4, r2
   13654:	mov	r5, r1
   13658:	mov	r6, r0
   1365c:	bl	14218 <putchar_unlocked@plt+0x33a0>
   13660:	cmp	r0, #0
   13664:	popne	{r4, r5, r6, sl, fp, pc}
   13668:	cmp	r6, #0
   1366c:	beq	13680 <putchar_unlocked@plt+0x2808>
   13670:	cmp	r5, #0
   13674:	cmpne	r4, #0
   13678:	bne	13680 <putchar_unlocked@plt+0x2808>
   1367c:	pop	{r4, r5, r6, sl, fp, pc}
   13680:	bl	13a0c <putchar_unlocked@plt+0x2b94>
   13684:	push	{fp, lr}
   13688:	mov	fp, sp
   1368c:	bl	13aa4 <putchar_unlocked@plt+0x2c2c>
   13690:	pop	{fp, lr}
   13694:	b	13698 <putchar_unlocked@plt+0x2820>
   13698:	cmp	r0, #0
   1369c:	bxne	lr
   136a0:	push	{fp, lr}
   136a4:	mov	fp, sp
   136a8:	bl	13a0c <putchar_unlocked@plt+0x2b94>
   136ac:	push	{fp, lr}
   136b0:	mov	fp, sp
   136b4:	bl	14148 <putchar_unlocked@plt+0x32d0>
   136b8:	pop	{fp, lr}
   136bc:	b	13698 <putchar_unlocked@plt+0x2820>
   136c0:	b	13684 <putchar_unlocked@plt+0x280c>
   136c4:	push	{r4, r5, fp, lr}
   136c8:	add	fp, sp, #8
   136cc:	mov	r4, r1
   136d0:	mov	r5, r0
   136d4:	bl	13ad4 <putchar_unlocked@plt+0x2c5c>
   136d8:	cmp	r0, #0
   136dc:	popne	{r4, r5, fp, pc}
   136e0:	cmp	r5, #0
   136e4:	beq	136f4 <putchar_unlocked@plt+0x287c>
   136e8:	cmp	r4, #0
   136ec:	bne	136f4 <putchar_unlocked@plt+0x287c>
   136f0:	pop	{r4, r5, fp, pc}
   136f4:	bl	13a0c <putchar_unlocked@plt+0x2b94>
   136f8:	push	{fp, lr}
   136fc:	mov	fp, sp
   13700:	bl	1414c <putchar_unlocked@plt+0x32d4>
   13704:	pop	{fp, lr}
   13708:	b	13698 <putchar_unlocked@plt+0x2820>
   1370c:	push	{fp, lr}
   13710:	mov	fp, sp
   13714:	bl	1415c <putchar_unlocked@plt+0x32e4>
   13718:	pop	{fp, lr}
   1371c:	b	13698 <putchar_unlocked@plt+0x2820>
   13720:	mov	r2, r1
   13724:	mov	r1, r0
   13728:	mov	r0, #0
   1372c:	b	13648 <putchar_unlocked@plt+0x27d0>
   13730:	mov	r2, r1
   13734:	mov	r1, r0
   13738:	mov	r0, #0
   1373c:	b	1370c <putchar_unlocked@plt+0x2894>
   13740:	mov	r2, #1
   13744:	b	13748 <putchar_unlocked@plt+0x28d0>
   13748:	push	{r4, r5, fp, lr}
   1374c:	add	fp, sp, #8
   13750:	mov	r4, r1
   13754:	ldr	r5, [r1]
   13758:	cmp	r0, #0
   1375c:	beq	13774 <putchar_unlocked@plt+0x28fc>
   13760:	mov	r1, #1
   13764:	add	r1, r1, r5, lsr #1
   13768:	adds	r5, r5, r1
   1376c:	bcc	1378c <putchar_unlocked@plt+0x2914>
   13770:	bl	13a0c <putchar_unlocked@plt+0x2b94>
   13774:	cmp	r5, #0
   13778:	bne	1378c <putchar_unlocked@plt+0x2914>
   1377c:	mov	r1, #64	; 0x40
   13780:	udiv	r5, r1, r2
   13784:	cmp	r2, #64	; 0x40
   13788:	addhi	r5, r5, #1
   1378c:	mov	r1, r5
   13790:	bl	13648 <putchar_unlocked@plt+0x27d0>
   13794:	str	r5, [r4]
   13798:	pop	{r4, r5, fp, pc}
   1379c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   137a0:	add	fp, sp, #24
   137a4:	mov	r8, r1
   137a8:	ldr	r6, [r1]
   137ac:	add	r1, r6, r6, asr #1
   137b0:	cmp	r1, r6
   137b4:	mvnvs	r1, #-2147483648	; 0x80000000
   137b8:	cmp	r1, r3
   137bc:	mov	r5, r1
   137c0:	movgt	r5, r3
   137c4:	cmn	r3, #1
   137c8:	movle	r5, r1
   137cc:	ldr	r4, [fp, #8]
   137d0:	cmn	r4, #1
   137d4:	ble	137fc <putchar_unlocked@plt+0x2984>
   137d8:	cmp	r4, #0
   137dc:	beq	13850 <putchar_unlocked@plt+0x29d8>
   137e0:	cmn	r5, #1
   137e4:	ble	13824 <putchar_unlocked@plt+0x29ac>
   137e8:	mvn	r7, #-2147483648	; 0x80000000
   137ec:	udiv	r1, r7, r4
   137f0:	cmp	r1, r5
   137f4:	bge	13850 <putchar_unlocked@plt+0x29d8>
   137f8:	b	13860 <putchar_unlocked@plt+0x29e8>
   137fc:	cmn	r5, #1
   13800:	ble	13840 <putchar_unlocked@plt+0x29c8>
   13804:	cmn	r4, #1
   13808:	beq	13850 <putchar_unlocked@plt+0x29d8>
   1380c:	mov	r1, #-2147483648	; 0x80000000
   13810:	sdiv	r1, r1, r4
   13814:	mvn	r7, #-2147483648	; 0x80000000
   13818:	cmp	r1, r5
   1381c:	bge	13850 <putchar_unlocked@plt+0x29d8>
   13820:	b	13860 <putchar_unlocked@plt+0x29e8>
   13824:	beq	13850 <putchar_unlocked@plt+0x29d8>
   13828:	mov	r1, #-2147483648	; 0x80000000
   1382c:	sdiv	r1, r1, r5
   13830:	mvn	r7, #-2147483648	; 0x80000000
   13834:	cmp	r1, r4
   13838:	bge	13850 <putchar_unlocked@plt+0x29d8>
   1383c:	b	13860 <putchar_unlocked@plt+0x29e8>
   13840:	mvn	r7, #-2147483648	; 0x80000000
   13844:	sdiv	r1, r7, r4
   13848:	cmp	r5, r1
   1384c:	blt	13860 <putchar_unlocked@plt+0x29e8>
   13850:	mul	r1, r5, r4
   13854:	mov	r7, #64	; 0x40
   13858:	cmp	r1, #63	; 0x3f
   1385c:	bgt	13868 <putchar_unlocked@plt+0x29f0>
   13860:	sdiv	r5, r7, r4
   13864:	mul	r1, r5, r4
   13868:	cmp	r0, #0
   1386c:	moveq	r7, #0
   13870:	streq	r7, [r8]
   13874:	sub	r7, r5, r6
   13878:	cmp	r7, r2
   1387c:	bge	13928 <putchar_unlocked@plt+0x2ab0>
   13880:	add	r5, r6, r2
   13884:	mov	r1, #0
   13888:	cmp	r5, r3
   1388c:	mov	r2, #0
   13890:	movwgt	r2, #1
   13894:	cmn	r3, #1
   13898:	movwgt	r1, #1
   1389c:	cmp	r5, r6
   138a0:	bvs	13910 <putchar_unlocked@plt+0x2a98>
   138a4:	ands	r1, r1, r2
   138a8:	bne	13910 <putchar_unlocked@plt+0x2a98>
   138ac:	cmn	r4, #1
   138b0:	ble	138d8 <putchar_unlocked@plt+0x2a60>
   138b4:	cmp	r4, #0
   138b8:	beq	13924 <putchar_unlocked@plt+0x2aac>
   138bc:	cmn	r5, #1
   138c0:	ble	138fc <putchar_unlocked@plt+0x2a84>
   138c4:	mvn	r1, #-2147483648	; 0x80000000
   138c8:	udiv	r1, r1, r4
   138cc:	cmp	r1, r5
   138d0:	bge	13924 <putchar_unlocked@plt+0x2aac>
   138d4:	b	13910 <putchar_unlocked@plt+0x2a98>
   138d8:	cmn	r5, #1
   138dc:	ble	13914 <putchar_unlocked@plt+0x2a9c>
   138e0:	cmn	r4, #1
   138e4:	beq	13924 <putchar_unlocked@plt+0x2aac>
   138e8:	mov	r1, #-2147483648	; 0x80000000
   138ec:	sdiv	r1, r1, r4
   138f0:	cmp	r1, r5
   138f4:	bge	13924 <putchar_unlocked@plt+0x2aac>
   138f8:	b	13910 <putchar_unlocked@plt+0x2a98>
   138fc:	beq	13924 <putchar_unlocked@plt+0x2aac>
   13900:	mov	r1, #-2147483648	; 0x80000000
   13904:	sdiv	r1, r1, r5
   13908:	cmp	r1, r4
   1390c:	bge	13924 <putchar_unlocked@plt+0x2aac>
   13910:	bl	13a0c <putchar_unlocked@plt+0x2b94>
   13914:	mvn	r1, #-2147483648	; 0x80000000
   13918:	sdiv	r1, r1, r4
   1391c:	cmp	r5, r1
   13920:	blt	13910 <putchar_unlocked@plt+0x2a98>
   13924:	mul	r1, r5, r4
   13928:	bl	136c4 <putchar_unlocked@plt+0x284c>
   1392c:	str	r5, [r8]
   13930:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13934:	mov	r1, #1
   13938:	b	1393c <putchar_unlocked@plt+0x2ac4>
   1393c:	push	{fp, lr}
   13940:	mov	fp, sp
   13944:	bl	13a50 <putchar_unlocked@plt+0x2bd8>
   13948:	pop	{fp, lr}
   1394c:	b	13698 <putchar_unlocked@plt+0x2820>
   13950:	mov	r1, #1
   13954:	b	13958 <putchar_unlocked@plt+0x2ae0>
   13958:	push	{fp, lr}
   1395c:	mov	fp, sp
   13960:	bl	14158 <putchar_unlocked@plt+0x32e0>
   13964:	pop	{fp, lr}
   13968:	b	13698 <putchar_unlocked@plt+0x2820>
   1396c:	push	{r4, r5, fp, lr}
   13970:	add	fp, sp, #8
   13974:	mov	r4, r1
   13978:	mov	r5, r0
   1397c:	mov	r0, r1
   13980:	bl	13684 <putchar_unlocked@plt+0x280c>
   13984:	mov	r1, r5
   13988:	mov	r2, r4
   1398c:	pop	{r4, r5, fp, lr}
   13990:	b	10cbc <memcpy@plt>
   13994:	push	{r4, r5, fp, lr}
   13998:	add	fp, sp, #8
   1399c:	mov	r4, r1
   139a0:	mov	r5, r0
   139a4:	mov	r0, r1
   139a8:	bl	136ac <putchar_unlocked@plt+0x2834>
   139ac:	mov	r1, r5
   139b0:	mov	r2, r4
   139b4:	pop	{r4, r5, fp, lr}
   139b8:	b	10cbc <memcpy@plt>
   139bc:	push	{r4, r5, fp, lr}
   139c0:	add	fp, sp, #8
   139c4:	mov	r4, r1
   139c8:	mov	r5, r0
   139cc:	add	r0, r1, #1
   139d0:	bl	136ac <putchar_unlocked@plt+0x2834>
   139d4:	mov	r1, #0
   139d8:	strb	r1, [r0, r4]
   139dc:	mov	r1, r5
   139e0:	mov	r2, r4
   139e4:	pop	{r4, r5, fp, lr}
   139e8:	b	10cbc <memcpy@plt>
   139ec:	push	{r4, sl, fp, lr}
   139f0:	add	fp, sp, #8
   139f4:	mov	r4, r0
   139f8:	bl	10dc4 <strlen@plt>
   139fc:	add	r1, r0, #1
   13a00:	mov	r0, r4
   13a04:	pop	{r4, sl, fp, lr}
   13a08:	b	1396c <putchar_unlocked@plt+0x2af4>
   13a0c:	push	{fp, lr}
   13a10:	mov	fp, sp
   13a14:	movw	r0, #20684	; 0x50cc
   13a18:	movt	r0, #2
   13a1c:	ldr	r4, [r0]
   13a20:	movw	r1, #19520	; 0x4c40
   13a24:	movt	r1, #1
   13a28:	mov	r0, #0
   13a2c:	mov	r2, #5
   13a30:	bl	10ce0 <dcgettext@plt>
   13a34:	mov	r3, r0
   13a38:	movw	r2, #18479	; 0x482f
   13a3c:	movt	r2, #1
   13a40:	mov	r0, r4
   13a44:	mov	r1, #0
   13a48:	bl	10d58 <error@plt>
   13a4c:	bl	10e6c <abort@plt>
   13a50:	clz	r2, r1
   13a54:	lsr	r2, r2, #5
   13a58:	clz	r3, r0
   13a5c:	lsr	r3, r3, #5
   13a60:	orrs	r2, r3, r2
   13a64:	movwne	r1, #1
   13a68:	movwne	r0, #1
   13a6c:	cmp	r1, #0
   13a70:	beq	13aa0 <putchar_unlocked@plt+0x2c28>
   13a74:	mvn	r2, #-2147483648	; 0x80000000
   13a78:	udiv	r2, r2, r1
   13a7c:	cmp	r2, r0
   13a80:	bcs	13aa0 <putchar_unlocked@plt+0x2c28>
   13a84:	push	{fp, lr}
   13a88:	mov	fp, sp
   13a8c:	bl	10dd0 <__errno_location@plt>
   13a90:	mov	r1, #12
   13a94:	str	r1, [r0]
   13a98:	mov	r0, #0
   13a9c:	pop	{fp, pc}
   13aa0:	b	10c74 <calloc@plt>
   13aa4:	cmp	r0, #0
   13aa8:	movweq	r0, #1
   13aac:	cmn	r0, #1
   13ab0:	ble	13ab8 <putchar_unlocked@plt+0x2c40>
   13ab4:	b	10d64 <malloc@plt>
   13ab8:	push	{fp, lr}
   13abc:	mov	fp, sp
   13ac0:	bl	10dd0 <__errno_location@plt>
   13ac4:	mov	r1, #12
   13ac8:	str	r1, [r0]
   13acc:	mov	r0, #0
   13ad0:	pop	{fp, pc}
   13ad4:	push	{fp, lr}
   13ad8:	mov	fp, sp
   13adc:	cmp	r0, #0
   13ae0:	beq	13afc <putchar_unlocked@plt+0x2c84>
   13ae4:	cmp	r1, #0
   13ae8:	beq	13b08 <putchar_unlocked@plt+0x2c90>
   13aec:	cmn	r1, #1
   13af0:	ble	13b14 <putchar_unlocked@plt+0x2c9c>
   13af4:	pop	{fp, lr}
   13af8:	b	10cec <realloc@plt>
   13afc:	mov	r0, r1
   13b00:	pop	{fp, lr}
   13b04:	b	13aa4 <putchar_unlocked@plt+0x2c2c>
   13b08:	bl	1405c <putchar_unlocked@plt+0x31e4>
   13b0c:	mov	r0, #0
   13b10:	pop	{fp, pc}
   13b14:	bl	10dd0 <__errno_location@plt>
   13b18:	mov	r1, #12
   13b1c:	str	r1, [r0]
   13b20:	mov	r0, #0
   13b24:	pop	{fp, pc}
   13b28:	sub	r0, r0, #1
   13b2c:	ldrb	r3, [r0, #1]!
   13b30:	cmp	r3, #47	; 0x2f
   13b34:	beq	13b2c <putchar_unlocked@plt+0x2cb4>
   13b38:	mov	r2, #0
   13b3c:	mov	r1, r0
   13b40:	b	13b4c <putchar_unlocked@plt+0x2cd4>
   13b44:	mov	r2, #1
   13b48:	ldrb	r3, [r1, #1]!
   13b4c:	uxtb	r3, r3
   13b50:	cmp	r3, #47	; 0x2f
   13b54:	beq	13b44 <putchar_unlocked@plt+0x2ccc>
   13b58:	cmp	r3, #0
   13b5c:	bxeq	lr
   13b60:	tst	r2, #1
   13b64:	movne	r0, r1
   13b68:	mov	r2, #0
   13b6c:	ldrb	r3, [r1, #1]!
   13b70:	b	13b4c <putchar_unlocked@plt+0x2cd4>
   13b74:	push	{r4, sl, fp, lr}
   13b78:	add	fp, sp, #8
   13b7c:	mov	r4, r0
   13b80:	bl	10dc4 <strlen@plt>
   13b84:	mov	r1, r0
   13b88:	sub	r2, r4, #1
   13b8c:	mov	r0, r1
   13b90:	cmp	r1, #2
   13b94:	bcc	13ba8 <putchar_unlocked@plt+0x2d30>
   13b98:	ldrb	r3, [r2, r0]
   13b9c:	sub	r1, r0, #1
   13ba0:	cmp	r3, #47	; 0x2f
   13ba4:	beq	13b8c <putchar_unlocked@plt+0x2d14>
   13ba8:	pop	{r4, sl, fp, pc}
   13bac:	mov	r1, r0
   13bb0:	sub	r2, r0, #65	; 0x41
   13bb4:	mov	r0, #1
   13bb8:	cmp	r2, #26
   13bbc:	subcs	r2, r1, #97	; 0x61
   13bc0:	cmpcs	r2, #26
   13bc4:	bcs	13bcc <putchar_unlocked@plt+0x2d54>
   13bc8:	bx	lr
   13bcc:	sub	r1, r1, #48	; 0x30
   13bd0:	cmp	r1, #10
   13bd4:	movcs	r0, #0
   13bd8:	bx	lr
   13bdc:	mov	r1, r0
   13be0:	sub	r2, r0, #65	; 0x41
   13be4:	mov	r0, #1
   13be8:	cmp	r2, #26
   13bec:	subcs	r1, r1, #97	; 0x61
   13bf0:	cmpcs	r1, #26
   13bf4:	movcs	r0, #0
   13bf8:	bx	lr
   13bfc:	mov	r1, #0
   13c00:	cmp	r0, #128	; 0x80
   13c04:	movwcc	r1, #1
   13c08:	mov	r0, r1
   13c0c:	bx	lr
   13c10:	sub	r1, r0, #9
   13c14:	clz	r1, r1
   13c18:	lsr	r1, r1, #5
   13c1c:	sub	r0, r0, #32
   13c20:	clz	r0, r0
   13c24:	lsr	r0, r0, #5
   13c28:	orr	r0, r0, r1
   13c2c:	bx	lr
   13c30:	mov	r1, r0
   13c34:	mov	r0, #1
   13c38:	cmp	r1, #32
   13c3c:	bxcc	lr
   13c40:	cmp	r1, #127	; 0x7f
   13c44:	movne	r0, #0
   13c48:	bx	lr
   13c4c:	sub	r1, r0, #48	; 0x30
   13c50:	mov	r0, #0
   13c54:	cmp	r1, #10
   13c58:	movwcc	r0, #1
   13c5c:	bx	lr
   13c60:	sub	r1, r0, #33	; 0x21
   13c64:	mov	r0, #0
   13c68:	cmp	r1, #94	; 0x5e
   13c6c:	movwcc	r0, #1
   13c70:	bx	lr
   13c74:	sub	r1, r0, #97	; 0x61
   13c78:	mov	r0, #0
   13c7c:	cmp	r1, #26
   13c80:	movwcc	r0, #1
   13c84:	bx	lr
   13c88:	sub	r1, r0, #32
   13c8c:	mov	r0, #0
   13c90:	cmp	r1, #95	; 0x5f
   13c94:	movwcc	r0, #1
   13c98:	bx	lr
   13c9c:	sub	r1, r0, #33	; 0x21
   13ca0:	cmp	r1, #93	; 0x5d
   13ca4:	bhi	13e30 <putchar_unlocked@plt+0x2fb8>
   13ca8:	mov	r0, #1
   13cac:	add	r2, pc, #0
   13cb0:	ldr	pc, [r2, r1, lsl #2]
   13cb4:	andeq	r3, r1, ip, lsr #28
   13cb8:	andeq	r3, r1, ip, lsr #28
   13cbc:	andeq	r3, r1, ip, lsr #28
   13cc0:	andeq	r3, r1, ip, lsr #28
   13cc4:	andeq	r3, r1, ip, lsr #28
   13cc8:	andeq	r3, r1, ip, lsr #28
   13ccc:	andeq	r3, r1, ip, lsr #28
   13cd0:	andeq	r3, r1, ip, lsr #28
   13cd4:	andeq	r3, r1, ip, lsr #28
   13cd8:	andeq	r3, r1, ip, lsr #28
   13cdc:	andeq	r3, r1, ip, lsr #28
   13ce0:	andeq	r3, r1, ip, lsr #28
   13ce4:	andeq	r3, r1, ip, lsr #28
   13ce8:	andeq	r3, r1, ip, lsr #28
   13cec:	andeq	r3, r1, ip, lsr #28
   13cf0:	andeq	r3, r1, r0, lsr lr
   13cf4:	andeq	r3, r1, r0, lsr lr
   13cf8:	andeq	r3, r1, r0, lsr lr
   13cfc:	andeq	r3, r1, r0, lsr lr
   13d00:	andeq	r3, r1, r0, lsr lr
   13d04:	andeq	r3, r1, r0, lsr lr
   13d08:	andeq	r3, r1, r0, lsr lr
   13d0c:	andeq	r3, r1, r0, lsr lr
   13d10:	andeq	r3, r1, r0, lsr lr
   13d14:	andeq	r3, r1, r0, lsr lr
   13d18:	andeq	r3, r1, ip, lsr #28
   13d1c:	andeq	r3, r1, ip, lsr #28
   13d20:	andeq	r3, r1, ip, lsr #28
   13d24:	andeq	r3, r1, ip, lsr #28
   13d28:	andeq	r3, r1, ip, lsr #28
   13d2c:	andeq	r3, r1, ip, lsr #28
   13d30:	andeq	r3, r1, ip, lsr #28
   13d34:	andeq	r3, r1, r0, lsr lr
   13d38:	andeq	r3, r1, r0, lsr lr
   13d3c:	andeq	r3, r1, r0, lsr lr
   13d40:	andeq	r3, r1, r0, lsr lr
   13d44:	andeq	r3, r1, r0, lsr lr
   13d48:	andeq	r3, r1, r0, lsr lr
   13d4c:	andeq	r3, r1, r0, lsr lr
   13d50:	andeq	r3, r1, r0, lsr lr
   13d54:	andeq	r3, r1, r0, lsr lr
   13d58:	andeq	r3, r1, r0, lsr lr
   13d5c:	andeq	r3, r1, r0, lsr lr
   13d60:	andeq	r3, r1, r0, lsr lr
   13d64:	andeq	r3, r1, r0, lsr lr
   13d68:	andeq	r3, r1, r0, lsr lr
   13d6c:	andeq	r3, r1, r0, lsr lr
   13d70:	andeq	r3, r1, r0, lsr lr
   13d74:	andeq	r3, r1, r0, lsr lr
   13d78:	andeq	r3, r1, r0, lsr lr
   13d7c:	andeq	r3, r1, r0, lsr lr
   13d80:	andeq	r3, r1, r0, lsr lr
   13d84:	andeq	r3, r1, r0, lsr lr
   13d88:	andeq	r3, r1, r0, lsr lr
   13d8c:	andeq	r3, r1, r0, lsr lr
   13d90:	andeq	r3, r1, r0, lsr lr
   13d94:	andeq	r3, r1, r0, lsr lr
   13d98:	andeq	r3, r1, r0, lsr lr
   13d9c:	andeq	r3, r1, ip, lsr #28
   13da0:	andeq	r3, r1, ip, lsr #28
   13da4:	andeq	r3, r1, ip, lsr #28
   13da8:	andeq	r3, r1, ip, lsr #28
   13dac:	andeq	r3, r1, ip, lsr #28
   13db0:	andeq	r3, r1, ip, lsr #28
   13db4:	andeq	r3, r1, r0, lsr lr
   13db8:	andeq	r3, r1, r0, lsr lr
   13dbc:	andeq	r3, r1, r0, lsr lr
   13dc0:	andeq	r3, r1, r0, lsr lr
   13dc4:	andeq	r3, r1, r0, lsr lr
   13dc8:	andeq	r3, r1, r0, lsr lr
   13dcc:	andeq	r3, r1, r0, lsr lr
   13dd0:	andeq	r3, r1, r0, lsr lr
   13dd4:	andeq	r3, r1, r0, lsr lr
   13dd8:	andeq	r3, r1, r0, lsr lr
   13ddc:	andeq	r3, r1, r0, lsr lr
   13de0:	andeq	r3, r1, r0, lsr lr
   13de4:	andeq	r3, r1, r0, lsr lr
   13de8:	andeq	r3, r1, r0, lsr lr
   13dec:	andeq	r3, r1, r0, lsr lr
   13df0:	andeq	r3, r1, r0, lsr lr
   13df4:	andeq	r3, r1, r0, lsr lr
   13df8:	andeq	r3, r1, r0, lsr lr
   13dfc:	andeq	r3, r1, r0, lsr lr
   13e00:	andeq	r3, r1, r0, lsr lr
   13e04:	andeq	r3, r1, r0, lsr lr
   13e08:	andeq	r3, r1, r0, lsr lr
   13e0c:	andeq	r3, r1, r0, lsr lr
   13e10:	andeq	r3, r1, r0, lsr lr
   13e14:	andeq	r3, r1, r0, lsr lr
   13e18:	andeq	r3, r1, r0, lsr lr
   13e1c:	andeq	r3, r1, ip, lsr #28
   13e20:	andeq	r3, r1, ip, lsr #28
   13e24:	andeq	r3, r1, ip, lsr #28
   13e28:	andeq	r3, r1, ip, lsr #28
   13e2c:	bx	lr
   13e30:	mov	r0, #0
   13e34:	bx	lr
   13e38:	sub	r0, r0, #9
   13e3c:	cmp	r0, #23
   13e40:	movhi	r0, #0
   13e44:	bxhi	lr
   13e48:	bic	r0, r0, #-16777216	; 0xff000000
   13e4c:	movw	r1, #31
   13e50:	movt	r1, #128	; 0x80
   13e54:	mov	r2, #1
   13e58:	and	r0, r2, r1, lsr r0
   13e5c:	bx	lr
   13e60:	sub	r1, r0, #65	; 0x41
   13e64:	mov	r0, #0
   13e68:	cmp	r1, #26
   13e6c:	movwcc	r0, #1
   13e70:	bx	lr
   13e74:	mov	r1, r0
   13e78:	sub	r2, r0, #48	; 0x30
   13e7c:	mov	r0, #1
   13e80:	cmp	r2, #22
   13e84:	bhi	13e9c <putchar_unlocked@plt+0x3024>
   13e88:	mov	ip, #1
   13e8c:	movw	r3, #1023	; 0x3ff
   13e90:	movt	r3, #126	; 0x7e
   13e94:	tst	r3, ip, lsl r2
   13e98:	bxne	lr
   13e9c:	sub	r1, r1, #97	; 0x61
   13ea0:	cmp	r1, #6
   13ea4:	movcs	r0, #0
   13ea8:	bxcs	lr
   13eac:	bx	lr
   13eb0:	sub	r1, r0, #65	; 0x41
   13eb4:	cmp	r1, #26
   13eb8:	addcc	r0, r0, #32
   13ebc:	bx	lr
   13ec0:	sub	r1, r0, #97	; 0x61
   13ec4:	cmp	r1, #26
   13ec8:	subcc	r0, r0, #32
   13ecc:	bx	lr
   13ed0:	push	{r4, r5, r6, sl, fp, lr}
   13ed4:	add	fp, sp, #16
   13ed8:	mov	r4, r0
   13edc:	bl	10d34 <__fpending@plt>
   13ee0:	mov	r5, r0
   13ee4:	mov	r0, r4
   13ee8:	bl	10d40 <ferror_unlocked@plt>
   13eec:	mov	r6, r0
   13ef0:	mov	r0, r4
   13ef4:	bl	13f54 <putchar_unlocked@plt+0x30dc>
   13ef8:	cmp	r6, #0
   13efc:	beq	13f20 <putchar_unlocked@plt+0x30a8>
   13f00:	mvn	r4, #0
   13f04:	cmp	r0, #0
   13f08:	bne	13f4c <putchar_unlocked@plt+0x30d4>
   13f0c:	bl	10dd0 <__errno_location@plt>
   13f10:	mov	r1, #0
   13f14:	str	r1, [r0]
   13f18:	mov	r0, r4
   13f1c:	pop	{r4, r5, r6, sl, fp, pc}
   13f20:	cmp	r0, #0
   13f24:	mov	r4, r0
   13f28:	mvnne	r4, #0
   13f2c:	cmp	r5, #0
   13f30:	bne	13f4c <putchar_unlocked@plt+0x30d4>
   13f34:	cmp	r0, #0
   13f38:	beq	13f4c <putchar_unlocked@plt+0x30d4>
   13f3c:	bl	10dd0 <__errno_location@plt>
   13f40:	ldr	r0, [r0]
   13f44:	subs	r4, r0, #9
   13f48:	mvnne	r4, #0
   13f4c:	mov	r0, r4
   13f50:	pop	{r4, r5, r6, sl, fp, pc}
   13f54:	push	{r4, r5, fp, lr}
   13f58:	add	fp, sp, #8
   13f5c:	sub	sp, sp, #8
   13f60:	mov	r4, r0
   13f64:	bl	10e00 <fileno@plt>
   13f68:	cmn	r0, #1
   13f6c:	ble	13fe4 <putchar_unlocked@plt+0x316c>
   13f70:	mov	r0, r4
   13f74:	bl	10d7c <__freading@plt>
   13f78:	cmp	r0, #0
   13f7c:	beq	13fa8 <putchar_unlocked@plt+0x3130>
   13f80:	mov	r0, r4
   13f84:	bl	10e00 <fileno@plt>
   13f88:	mov	r1, #1
   13f8c:	str	r1, [sp]
   13f90:	mov	r2, #0
   13f94:	mov	r3, #0
   13f98:	bl	10d1c <lseek64@plt>
   13f9c:	and	r0, r0, r1
   13fa0:	cmn	r0, #1
   13fa4:	beq	13fe4 <putchar_unlocked@plt+0x316c>
   13fa8:	mov	r0, r4
   13fac:	bl	13ff4 <putchar_unlocked@plt+0x317c>
   13fb0:	cmp	r0, #0
   13fb4:	beq	13fe4 <putchar_unlocked@plt+0x316c>
   13fb8:	bl	10dd0 <__errno_location@plt>
   13fbc:	ldr	r5, [r0]
   13fc0:	mov	r0, r4
   13fc4:	bl	10e18 <fclose@plt>
   13fc8:	cmp	r5, #0
   13fcc:	beq	13fdc <putchar_unlocked@plt+0x3164>
   13fd0:	bl	10dd0 <__errno_location@plt>
   13fd4:	str	r5, [r0]
   13fd8:	mvn	r0, #0
   13fdc:	sub	sp, fp, #8
   13fe0:	pop	{r4, r5, fp, pc}
   13fe4:	mov	r0, r4
   13fe8:	sub	sp, fp, #8
   13fec:	pop	{r4, r5, fp, lr}
   13ff0:	b	10e18 <fclose@plt>
   13ff4:	push	{r4, sl, fp, lr}
   13ff8:	add	fp, sp, #8
   13ffc:	mov	r4, r0
   14000:	cmp	r0, #0
   14004:	beq	1401c <putchar_unlocked@plt+0x31a4>
   14008:	mov	r0, r4
   1400c:	bl	10d7c <__freading@plt>
   14010:	cmp	r0, #0
   14014:	movne	r0, r4
   14018:	blne	14028 <putchar_unlocked@plt+0x31b0>
   1401c:	mov	r0, r4
   14020:	pop	{r4, sl, fp, lr}
   14024:	b	10c98 <fflush@plt>
   14028:	push	{fp, lr}
   1402c:	mov	fp, sp
   14030:	sub	sp, sp, #8
   14034:	ldrb	r1, [r0, #1]
   14038:	tst	r1, #1
   1403c:	beq	14054 <putchar_unlocked@plt+0x31dc>
   14040:	mov	r1, #1
   14044:	str	r1, [sp]
   14048:	mov	r2, #0
   1404c:	mov	r3, #0
   14050:	bl	14084 <putchar_unlocked@plt+0x320c>
   14054:	mov	sp, fp
   14058:	pop	{fp, pc}
   1405c:	push	{r4, r5, r6, sl, fp, lr}
   14060:	add	fp, sp, #16
   14064:	mov	r4, r0
   14068:	bl	10dd0 <__errno_location@plt>
   1406c:	mov	r5, r0
   14070:	ldr	r6, [r0]
   14074:	mov	r0, r4
   14078:	bl	10ca4 <free@plt>
   1407c:	str	r6, [r5]
   14080:	pop	{r4, r5, r6, sl, fp, pc}
   14084:	push	{r4, r5, r6, r7, fp, lr}
   14088:	add	fp, sp, #16
   1408c:	sub	sp, sp, #8
   14090:	mov	r5, r3
   14094:	mov	r6, r2
   14098:	mov	r4, r0
   1409c:	ldr	r0, [r0, #4]
   140a0:	ldr	r1, [r4, #8]
   140a4:	cmp	r1, r0
   140a8:	bne	140c4 <putchar_unlocked@plt+0x324c>
   140ac:	ldrd	r0, [r4, #16]
   140b0:	cmp	r1, r0
   140b4:	bne	140c4 <putchar_unlocked@plt+0x324c>
   140b8:	ldr	r0, [r4, #36]	; 0x24
   140bc:	cmp	r0, #0
   140c0:	beq	140dc <putchar_unlocked@plt+0x3264>
   140c4:	mov	r0, r4
   140c8:	mov	r2, r6
   140cc:	mov	r3, r5
   140d0:	sub	sp, fp, #16
   140d4:	pop	{r4, r5, r6, r7, fp, lr}
   140d8:	b	10e24 <fseeko64@plt>
   140dc:	ldr	r7, [fp, #8]
   140e0:	mov	r0, r4
   140e4:	bl	10e00 <fileno@plt>
   140e8:	str	r7, [sp]
   140ec:	mov	r2, r6
   140f0:	mov	r3, r5
   140f4:	bl	10d1c <lseek64@plt>
   140f8:	and	r2, r0, r1
   140fc:	cmn	r2, #1
   14100:	beq	14120 <putchar_unlocked@plt+0x32a8>
   14104:	strd	r0, [r4, #80]	; 0x50
   14108:	ldr	r0, [r4]
   1410c:	bic	r0, r0, #16
   14110:	str	r0, [r4]
   14114:	mov	r0, #0
   14118:	sub	sp, fp, #16
   1411c:	pop	{r4, r5, r6, r7, fp, pc}
   14120:	mvn	r0, #0
   14124:	sub	sp, fp, #16
   14128:	pop	{r4, r5, r6, r7, fp, pc}
   1412c:	push	{fp, lr}
   14130:	mov	fp, sp
   14134:	bl	10dd0 <__errno_location@plt>
   14138:	mov	r1, #12
   1413c:	str	r1, [r0]
   14140:	mov	r0, #0
   14144:	pop	{fp, pc}
   14148:	b	13aa4 <putchar_unlocked@plt+0x2c2c>
   1414c:	cmp	r1, #0
   14150:	orreq	r1, r1, #1
   14154:	b	13ad4 <putchar_unlocked@plt+0x2c5c>
   14158:	b	13a50 <putchar_unlocked@plt+0x2bd8>
   1415c:	clz	r3, r2
   14160:	lsr	ip, r3, #5
   14164:	clz	r3, r1
   14168:	lsr	r3, r3, #5
   1416c:	orrs	r3, r3, ip
   14170:	movwne	r1, #1
   14174:	movwne	r2, #1
   14178:	b	14218 <putchar_unlocked@plt+0x33a0>
   1417c:	push	{fp, lr}
   14180:	mov	fp, sp
   14184:	mov	r0, #14
   14188:	bl	10e48 <nl_langinfo@plt>
   1418c:	movw	r1, #17606	; 0x44c6
   14190:	movt	r1, #1
   14194:	cmp	r0, #0
   14198:	movne	r1, r0
   1419c:	ldrb	r2, [r1]
   141a0:	movw	r0, #19537	; 0x4c51
   141a4:	movt	r0, #1
   141a8:	cmp	r2, #0
   141ac:	movne	r0, r1
   141b0:	pop	{fp, pc}
   141b4:	push	{r4, r5, r6, r7, fp, lr}
   141b8:	add	fp, sp, #16
   141bc:	sub	sp, sp, #8
   141c0:	mov	r7, r2
   141c4:	mov	r4, r1
   141c8:	add	r5, sp, #4
   141cc:	cmp	r0, #0
   141d0:	movne	r5, r0
   141d4:	mov	r0, r5
   141d8:	bl	10d4c <mbrtowc@plt>
   141dc:	mov	r6, r0
   141e0:	cmp	r7, #0
   141e4:	beq	1420c <putchar_unlocked@plt+0x3394>
   141e8:	cmn	r6, #2
   141ec:	bcc	1420c <putchar_unlocked@plt+0x3394>
   141f0:	mov	r0, #0
   141f4:	bl	14254 <putchar_unlocked@plt+0x33dc>
   141f8:	cmp	r0, #0
   141fc:	bne	1420c <putchar_unlocked@plt+0x3394>
   14200:	ldrb	r0, [r4]
   14204:	str	r0, [r5]
   14208:	mov	r6, #1
   1420c:	mov	r0, r6
   14210:	sub	sp, fp, #16
   14214:	pop	{r4, r5, r6, r7, fp, pc}
   14218:	cmp	r2, #0
   1421c:	beq	1424c <putchar_unlocked@plt+0x33d4>
   14220:	mvn	r3, #0
   14224:	udiv	r3, r3, r2
   14228:	cmp	r3, r1
   1422c:	bcs	1424c <putchar_unlocked@plt+0x33d4>
   14230:	push	{fp, lr}
   14234:	mov	fp, sp
   14238:	bl	10dd0 <__errno_location@plt>
   1423c:	mov	r1, #12
   14240:	str	r1, [r0]
   14244:	mov	r0, #0
   14248:	pop	{fp, pc}
   1424c:	mul	r1, r2, r1
   14250:	b	13ad4 <putchar_unlocked@plt+0x2c5c>
   14254:	push	{r4, sl, fp, lr}
   14258:	add	fp, sp, #8
   1425c:	sub	sp, sp, #264	; 0x108
   14260:	add	r1, sp, #7
   14264:	movw	r2, #257	; 0x101
   14268:	bl	142c0 <putchar_unlocked@plt+0x3448>
   1426c:	mov	r4, #0
   14270:	cmp	r0, #0
   14274:	bne	142b4 <putchar_unlocked@plt+0x343c>
   14278:	add	r0, sp, #7
   1427c:	movw	r1, #19543	; 0x4c57
   14280:	movt	r1, #1
   14284:	mov	r2, #2
   14288:	bl	10db8 <bcmp@plt>
   1428c:	cmp	r0, #0
   14290:	beq	142b4 <putchar_unlocked@plt+0x343c>
   14294:	add	r0, sp, #7
   14298:	movw	r1, #19545	; 0x4c59
   1429c:	movt	r1, #1
   142a0:	mov	r2, #6
   142a4:	bl	10db8 <bcmp@plt>
   142a8:	mov	r4, r0
   142ac:	cmp	r0, #0
   142b0:	movwne	r4, #1
   142b4:	mov	r0, r4
   142b8:	sub	sp, fp, #8
   142bc:	pop	{r4, sl, fp, pc}
   142c0:	b	142c4 <putchar_unlocked@plt+0x344c>
   142c4:	push	{r4, r5, r6, r7, fp, lr}
   142c8:	add	fp, sp, #16
   142cc:	mov	r6, r2
   142d0:	mov	r4, r1
   142d4:	bl	1435c <putchar_unlocked@plt+0x34e4>
   142d8:	cmp	r0, #0
   142dc:	beq	1430c <putchar_unlocked@plt+0x3494>
   142e0:	mov	r7, r0
   142e4:	bl	10dc4 <strlen@plt>
   142e8:	cmp	r0, r6
   142ec:	bcs	14328 <putchar_unlocked@plt+0x34b0>
   142f0:	add	r2, r0, #1
   142f4:	mov	r0, r4
   142f8:	mov	r1, r7
   142fc:	bl	10cbc <memcpy@plt>
   14300:	mov	r5, #0
   14304:	mov	r0, r5
   14308:	pop	{r4, r5, r6, r7, fp, pc}
   1430c:	mov	r5, #22
   14310:	cmp	r6, #0
   14314:	beq	14350 <putchar_unlocked@plt+0x34d8>
   14318:	mov	r0, #0
   1431c:	strb	r0, [r4]
   14320:	mov	r0, r5
   14324:	pop	{r4, r5, r6, r7, fp, pc}
   14328:	mov	r5, #34	; 0x22
   1432c:	cmp	r6, #0
   14330:	beq	14350 <putchar_unlocked@plt+0x34d8>
   14334:	sub	r6, r6, #1
   14338:	mov	r0, r4
   1433c:	mov	r1, r7
   14340:	mov	r2, r6
   14344:	bl	10cbc <memcpy@plt>
   14348:	mov	r0, #0
   1434c:	strb	r0, [r4, r6]
   14350:	mov	r0, r5
   14354:	pop	{r4, r5, r6, r7, fp, pc}
   14358:	b	1435c <putchar_unlocked@plt+0x34e4>
   1435c:	mov	r1, #0
   14360:	b	10e30 <setlocale@plt>
   14364:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14368:	mov	r7, r0
   1436c:	ldr	r6, [pc, #72]	; 143bc <putchar_unlocked@plt+0x3544>
   14370:	ldr	r5, [pc, #72]	; 143c0 <putchar_unlocked@plt+0x3548>
   14374:	add	r6, pc, r6
   14378:	add	r5, pc, r5
   1437c:	sub	r6, r6, r5
   14380:	mov	r8, r1
   14384:	mov	r9, r2
   14388:	bl	10c54 <calloc@plt-0x20>
   1438c:	asrs	r6, r6, #2
   14390:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14394:	mov	r4, #0
   14398:	add	r4, r4, #1
   1439c:	ldr	r3, [r5], #4
   143a0:	mov	r2, r9
   143a4:	mov	r1, r8
   143a8:	mov	r0, r7
   143ac:	blx	r3
   143b0:	cmp	r6, r4
   143b4:	bne	14398 <putchar_unlocked@plt+0x3520>
   143b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   143bc:	muleq	r1, r0, fp
   143c0:	andeq	r0, r1, r8, lsl #23
   143c4:	bx	lr
   143c8:	ldr	r3, [pc, #12]	; 143dc <putchar_unlocked@plt+0x3564>
   143cc:	mov	r1, #0
   143d0:	add	r3, pc, r3
   143d4:	ldr	r2, [r3]
   143d8:	b	10ddc <__cxa_atexit@plt>
   143dc:	andeq	r0, r1, ip, ror #25

Disassembly of section .fini:

000143e0 <.fini>:
   143e0:	push	{r3, lr}
   143e4:	pop	{r3, pc}
