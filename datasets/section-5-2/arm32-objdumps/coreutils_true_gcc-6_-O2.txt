
../repos/coreutils/src/true:     file format elf32-littlearm


Disassembly of section .init:

00010a40 <.init>:
   10a40:	push	{r3, lr}
   10a44:	bl	10d70 <abort@plt+0x124>
   10a48:	pop	{r3, pc}

Disassembly of section .plt:

00010a4c <calloc@plt-0x14>:
   10a4c:	push	{lr}		; (str lr, [sp, #-4]!)
   10a50:	ldr	lr, [pc, #4]	; 10a5c <calloc@plt-0x4>
   10a54:	add	lr, pc, lr
   10a58:	ldr	pc, [lr, #8]!
   10a5c:	andeq	r4, r1, r4, lsr #11

00010a60 <calloc@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #20, 20	; 0x14000
   10a68:	ldr	pc, [ip, #1444]!	; 0x5a4

00010a6c <fputs_unlocked@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #20, 20	; 0x14000
   10a74:	ldr	pc, [ip, #1436]!	; 0x59c

00010a78 <raise@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #20, 20	; 0x14000
   10a80:	ldr	pc, [ip, #1428]!	; 0x594

00010a84 <strcmp@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #20, 20	; 0x14000
   10a8c:	ldr	pc, [ip, #1420]!	; 0x58c

00010a90 <fflush@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #20, 20	; 0x14000
   10a98:	ldr	pc, [ip, #1412]!	; 0x584

00010a9c <free@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #20, 20	; 0x14000
   10aa4:	ldr	pc, [ip, #1404]!	; 0x57c

00010aa8 <_exit@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #20, 20	; 0x14000
   10ab0:	ldr	pc, [ip, #1396]!	; 0x574

00010ab4 <memcpy@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #20, 20	; 0x14000
   10abc:	ldr	pc, [ip, #1388]!	; 0x56c

00010ac0 <mbsinit@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #20, 20	; 0x14000
   10ac8:	ldr	pc, [ip, #1380]!	; 0x564

00010acc <memcmp@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #20, 20	; 0x14000
   10ad4:	ldr	pc, [ip, #1372]!	; 0x55c

00010ad8 <fputc_unlocked@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #20, 20	; 0x14000
   10ae0:	ldr	pc, [ip, #1364]!	; 0x554

00010ae4 <dcgettext@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #20, 20	; 0x14000
   10aec:	ldr	pc, [ip, #1356]!	; 0x54c

00010af0 <realloc@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #20, 20	; 0x14000
   10af8:	ldr	pc, [ip, #1348]!	; 0x544

00010afc <textdomain@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #20, 20	; 0x14000
   10b04:	ldr	pc, [ip, #1340]!	; 0x53c

00010b08 <iswprint@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #20, 20	; 0x14000
   10b10:	ldr	pc, [ip, #1332]!	; 0x534

00010b14 <fwrite@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #20, 20	; 0x14000
   10b1c:	ldr	pc, [ip, #1324]!	; 0x52c

00010b20 <lseek64@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #20, 20	; 0x14000
   10b28:	ldr	pc, [ip, #1316]!	; 0x524

00010b2c <__ctype_get_mb_cur_max@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #20, 20	; 0x14000
   10b34:	ldr	pc, [ip, #1308]!	; 0x51c

00010b38 <__fpending@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #20, 20	; 0x14000
   10b40:	ldr	pc, [ip, #1300]!	; 0x514

00010b44 <mbrtowc@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #20, 20	; 0x14000
   10b4c:	ldr	pc, [ip, #1292]!	; 0x50c

00010b50 <error@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #20, 20	; 0x14000
   10b58:	ldr	pc, [ip, #1284]!	; 0x504

00010b5c <malloc@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #20, 20	; 0x14000
   10b64:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b68 <__libc_start_main@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #20, 20	; 0x14000
   10b70:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b74 <__freading@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #20, 20	; 0x14000
   10b7c:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b80 <__gmon_start__@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #20, 20	; 0x14000
   10b88:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b8c <__ctype_b_loc@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #20, 20	; 0x14000
   10b94:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b98 <exit@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #20, 20	; 0x14000
   10ba0:	ldr	pc, [ip, #1236]!	; 0x4d4

00010ba4 <strlen@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #20, 20	; 0x14000
   10bac:	ldr	pc, [ip, #1228]!	; 0x4cc

00010bb0 <__errno_location@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #20, 20	; 0x14000
   10bb8:	ldr	pc, [ip, #1220]!	; 0x4c4

00010bbc <__cxa_atexit@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #20, 20	; 0x14000
   10bc4:	ldr	pc, [ip, #1212]!	; 0x4bc

00010bc8 <memset@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #20, 20	; 0x14000
   10bd0:	ldr	pc, [ip, #1204]!	; 0x4b4

00010bd4 <__printf_chk@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #20, 20	; 0x14000
   10bdc:	ldr	pc, [ip, #1196]!	; 0x4ac

00010be0 <fileno@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #20, 20	; 0x14000
   10be8:	ldr	pc, [ip, #1188]!	; 0x4a4

00010bec <__fprintf_chk@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #20, 20	; 0x14000
   10bf4:	ldr	pc, [ip, #1180]!	; 0x49c

00010bf8 <fclose@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #20, 20	; 0x14000
   10c00:	ldr	pc, [ip, #1172]!	; 0x494

00010c04 <fseeko64@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #20, 20	; 0x14000
   10c0c:	ldr	pc, [ip, #1164]!	; 0x48c

00010c10 <setlocale@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #1156]!	; 0x484

00010c1c <strrchr@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #1148]!	; 0x47c

00010c28 <nl_langinfo@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #1140]!	; 0x474

00010c34 <bindtextdomain@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #1132]!	; 0x46c

00010c40 <strncmp@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #1124]!	; 0x464

00010c4c <abort@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #1116]!	; 0x45c

Disassembly of section .text:

00010c58 <.text>:
   10c58:	cmp	r0, #2
   10c5c:	beq	10c68 <abort@plt+0x1c>
   10c60:	mov	r0, #0
   10c64:	bx	lr
   10c68:	push	{r4, lr}
   10c6c:	sub	sp, sp, #8
   10c70:	ldr	r0, [r1]
   10c74:	mov	r4, r1
   10c78:	bl	11220 <abort@plt+0x5d4>
   10c7c:	ldr	r1, [pc, #132]	; 10d08 <abort@plt+0xbc>
   10c80:	mov	r0, #6
   10c84:	bl	10c10 <setlocale@plt>
   10c88:	ldr	r1, [pc, #124]	; 10d0c <abort@plt+0xc0>
   10c8c:	ldr	r0, [pc, #124]	; 10d10 <abort@plt+0xc4>
   10c90:	bl	10c34 <bindtextdomain@plt>
   10c94:	ldr	r0, [pc, #116]	; 10d10 <abort@plt+0xc4>
   10c98:	bl	10afc <textdomain@plt>
   10c9c:	ldr	r0, [pc, #112]	; 10d14 <abort@plt+0xc8>
   10ca0:	bl	1456c <abort@plt+0x3920>
   10ca4:	ldr	r4, [r4, #4]
   10ca8:	ldr	r1, [pc, #104]	; 10d18 <abort@plt+0xcc>
   10cac:	mov	r0, r4
   10cb0:	bl	10a84 <strcmp@plt>
   10cb4:	cmp	r0, #0
   10cb8:	beq	10d04 <abort@plt+0xb8>
   10cbc:	mov	r0, r4
   10cc0:	ldr	r1, [pc, #84]	; 10d1c <abort@plt+0xd0>
   10cc4:	bl	10a84 <strcmp@plt>
   10cc8:	cmp	r0, #0
   10ccc:	bne	10cf8 <abort@plt+0xac>
   10cd0:	ldr	r1, [pc, #72]	; 10d20 <abort@plt+0xd4>
   10cd4:	ldr	r3, [pc, #72]	; 10d24 <abort@plt+0xd8>
   10cd8:	ldr	r2, [pc, #72]	; 10d28 <abort@plt+0xdc>
   10cdc:	str	r0, [sp, #4]
   10ce0:	ldr	r0, [r1]
   10ce4:	ldr	r3, [r3]
   10ce8:	ldr	r1, [pc, #60]	; 10d2c <abort@plt+0xe0>
   10cec:	str	r2, [sp]
   10cf0:	ldr	r2, [pc, #56]	; 10d30 <abort@plt+0xe4>
   10cf4:	bl	1351c <abort@plt+0x28d0>
   10cf8:	mov	r0, #0
   10cfc:	add	sp, sp, #8
   10d00:	pop	{r4, pc}
   10d04:	bl	10e5c <abort@plt+0x210>
   10d08:	andeq	r4, r1, r0, asr #12
   10d0c:	andeq	r4, r1, r8, asr r8
   10d10:			; <UNDEFINED> instruction: 0x000147b0
   10d14:	andeq	r1, r1, ip, lsr r1
   10d18:	andeq	r4, r1, r0, ror r8
   10d1c:	andeq	r4, r1, r8, ror r8
   10d20:	andeq	r5, r2, r4, lsl r1
   10d24:	andeq	r5, r2, r0, asr #1
   10d28:	andeq	r4, r1, r4, lsl #17
   10d2c:	andeq	r4, r1, r8, asr #11
   10d30:	andeq	r4, r1, ip, lsr #15
   10d34:	mov	fp, #0
   10d38:	mov	lr, #0
   10d3c:	pop	{r1}		; (ldr r1, [sp], #4)
   10d40:	mov	r2, sp
   10d44:	push	{r2}		; (str r2, [sp, #-4]!)
   10d48:	push	{r0}		; (str r0, [sp, #-4]!)
   10d4c:	ldr	ip, [pc, #16]	; 10d64 <abort@plt+0x118>
   10d50:	push	{ip}		; (str ip, [sp, #-4]!)
   10d54:	ldr	r0, [pc, #12]	; 10d68 <abort@plt+0x11c>
   10d58:	ldr	r3, [pc, #12]	; 10d6c <abort@plt+0x120>
   10d5c:	bl	10b68 <__libc_start_main@plt>
   10d60:	bl	10c4c <abort@plt>
   10d64:	andeq	r4, r1, r8, ror #10
   10d68:	andeq	r0, r1, r8, asr ip
   10d6c:	andeq	r4, r1, r8, lsl #10
   10d70:	ldr	r3, [pc, #20]	; 10d8c <abort@plt+0x140>
   10d74:	ldr	r2, [pc, #20]	; 10d90 <abort@plt+0x144>
   10d78:	add	r3, pc, r3
   10d7c:	ldr	r2, [r3, r2]
   10d80:	cmp	r2, #0
   10d84:	bxeq	lr
   10d88:	b	10b80 <__gmon_start__@plt>
   10d8c:	andeq	r4, r1, r0, lsl #5
   10d90:	strheq	r0, [r0], -r4
   10d94:	ldr	r3, [pc, #28]	; 10db8 <abort@plt+0x16c>
   10d98:	ldr	r0, [pc, #28]	; 10dbc <abort@plt+0x170>
   10d9c:	sub	r3, r3, r0
   10da0:	cmp	r3, #6
   10da4:	bxls	lr
   10da8:	ldr	r3, [pc, #16]	; 10dc0 <abort@plt+0x174>
   10dac:	cmp	r3, #0
   10db0:	bxeq	lr
   10db4:	bx	r3
   10db8:	andeq	r5, r2, fp, lsl #2
   10dbc:	andeq	r5, r2, r8, lsl #2
   10dc0:	andeq	r0, r0, r0
   10dc4:	ldr	r1, [pc, #36]	; 10df0 <abort@plt+0x1a4>
   10dc8:	ldr	r0, [pc, #36]	; 10df4 <abort@plt+0x1a8>
   10dcc:	sub	r1, r1, r0
   10dd0:	asr	r1, r1, #2
   10dd4:	add	r1, r1, r1, lsr #31
   10dd8:	asrs	r1, r1, #1
   10ddc:	bxeq	lr
   10de0:	ldr	r3, [pc, #16]	; 10df8 <abort@plt+0x1ac>
   10de4:	cmp	r3, #0
   10de8:	bxeq	lr
   10dec:	bx	r3
   10df0:	andeq	r5, r2, r8, lsl #2
   10df4:	andeq	r5, r2, r8, lsl #2
   10df8:	andeq	r0, r0, r0
   10dfc:	push	{r4, lr}
   10e00:	ldr	r4, [pc, #24]	; 10e20 <abort@plt+0x1d4>
   10e04:	ldrb	r3, [r4]
   10e08:	cmp	r3, #0
   10e0c:	popne	{r4, pc}
   10e10:	bl	10d94 <abort@plt+0x148>
   10e14:	mov	r3, #1
   10e18:	strb	r3, [r4]
   10e1c:	pop	{r4, pc}
   10e20:	andeq	r5, r2, r8, lsl r1
   10e24:	ldr	r0, [pc, #40]	; 10e54 <abort@plt+0x208>
   10e28:	ldr	r3, [r0]
   10e2c:	cmp	r3, #0
   10e30:	bne	10e38 <abort@plt+0x1ec>
   10e34:	b	10dc4 <abort@plt+0x178>
   10e38:	ldr	r3, [pc, #24]	; 10e58 <abort@plt+0x20c>
   10e3c:	cmp	r3, #0
   10e40:	beq	10e34 <abort@plt+0x1e8>
   10e44:	push	{r4, lr}
   10e48:	blx	r3
   10e4c:	pop	{r4, lr}
   10e50:	b	10dc4 <abort@plt+0x178>
   10e54:	andeq	r4, r2, r4, lsl pc
   10e58:	andeq	r0, r0, r0
   10e5c:	push	{r7, lr}
   10e60:	mov	r2, #5
   10e64:	sub	sp, sp, #56	; 0x38
   10e68:	ldr	r1, [pc, #608]	; 110d0 <abort@plt+0x484>
   10e6c:	mov	r6, r0
   10e70:	mov	r0, #0
   10e74:	bl	10ae4 <dcgettext@plt>
   10e78:	ldr	r3, [pc, #596]	; 110d4 <abort@plt+0x488>
   10e7c:	ldr	r7, [pc, #596]	; 110d8 <abort@plt+0x48c>
   10e80:	ldr	r4, [pc, #596]	; 110dc <abort@plt+0x490>
   10e84:	ldr	r3, [r3]
   10e88:	mov	r2, r3
   10e8c:	mov	r1, r0
   10e90:	mov	r0, #1
   10e94:	bl	10bd4 <__printf_chk@plt>
   10e98:	mov	r2, #5
   10e9c:	ldr	r1, [pc, #572]	; 110e0 <abort@plt+0x494>
   10ea0:	mov	r0, #0
   10ea4:	bl	10ae4 <dcgettext@plt>
   10ea8:	ldr	r1, [pc, #564]	; 110e4 <abort@plt+0x498>
   10eac:	mov	r2, r0
   10eb0:	mov	r0, #1
   10eb4:	bl	10bd4 <__printf_chk@plt>
   10eb8:	mov	r2, #5
   10ebc:	ldr	r1, [pc, #548]	; 110e8 <abort@plt+0x49c>
   10ec0:	mov	r0, #0
   10ec4:	bl	10ae4 <dcgettext@plt>
   10ec8:	ldr	r1, [r7]
   10ecc:	bl	10a6c <fputs_unlocked@plt>
   10ed0:	mov	r2, #5
   10ed4:	ldr	r1, [pc, #528]	; 110ec <abort@plt+0x4a0>
   10ed8:	mov	r0, #0
   10edc:	bl	10ae4 <dcgettext@plt>
   10ee0:	ldr	r1, [r7]
   10ee4:	bl	10a6c <fputs_unlocked@plt>
   10ee8:	mov	r2, #5
   10eec:	ldr	r1, [pc, #508]	; 110f0 <abort@plt+0x4a4>
   10ef0:	mov	r0, #0
   10ef4:	bl	10ae4 <dcgettext@plt>
   10ef8:	ldr	r2, [pc, #500]	; 110f4 <abort@plt+0x4a8>
   10efc:	mov	r1, r0
   10f00:	mov	r0, #1
   10f04:	bl	10bd4 <__printf_chk@plt>
   10f08:	ldm	r4!, {r0, r1, r2, r3}
   10f0c:	mov	lr, sp
   10f10:	stmia	lr!, {r0, r1, r2, r3}
   10f14:	ldm	r4!, {r0, r1, r2, r3}
   10f18:	ldr	ip, [sp]
   10f1c:	stmia	lr!, {r0, r1, r2, r3}
   10f20:	cmp	ip, #0
   10f24:	ldm	r4!, {r0, r1, r2, r3}
   10f28:	stmia	lr!, {r0, r1, r2, r3}
   10f2c:	ldm	r4, {r0, r1}
   10f30:	moveq	r4, sp
   10f34:	stm	lr, {r0, r1}
   10f38:	beq	10f68 <abort@plt+0x31c>
   10f3c:	ldr	r5, [pc, #432]	; 110f4 <abort@plt+0x4a8>
   10f40:	mov	r4, sp
   10f44:	b	10f54 <abort@plt+0x308>
   10f48:	ldr	ip, [r4, #8]!
   10f4c:	cmp	ip, #0
   10f50:	beq	10f68 <abort@plt+0x31c>
   10f54:	mov	r1, ip
   10f58:	mov	r0, r5
   10f5c:	bl	10a84 <strcmp@plt>
   10f60:	cmp	r0, #0
   10f64:	bne	10f48 <abort@plt+0x2fc>
   10f68:	ldr	r4, [r4, #4]
   10f6c:	mov	r2, #5
   10f70:	cmp	r4, #0
   10f74:	ldr	r1, [pc, #380]	; 110f8 <abort@plt+0x4ac>
   10f78:	beq	11048 <abort@plt+0x3fc>
   10f7c:	mov	r0, #0
   10f80:	bl	10ae4 <dcgettext@plt>
   10f84:	ldr	r3, [pc, #368]	; 110fc <abort@plt+0x4b0>
   10f88:	ldr	r2, [pc, #368]	; 11100 <abort@plt+0x4b4>
   10f8c:	mov	r1, r0
   10f90:	mov	r0, #1
   10f94:	bl	10bd4 <__printf_chk@plt>
   10f98:	mov	r1, #0
   10f9c:	mov	r0, #5
   10fa0:	bl	10c10 <setlocale@plt>
   10fa4:	cmp	r0, #0
   10fa8:	ldreq	r5, [pc, #324]	; 110f4 <abort@plt+0x4a8>
   10fac:	beq	10fc8 <abort@plt+0x37c>
   10fb0:	mov	r2, #3
   10fb4:	ldr	r1, [pc, #328]	; 11104 <abort@plt+0x4b8>
   10fb8:	bl	10c40 <strncmp@plt>
   10fbc:	ldr	r5, [pc, #304]	; 110f4 <abort@plt+0x4a8>
   10fc0:	cmp	r0, #0
   10fc4:	bne	1102c <abort@plt+0x3e0>
   10fc8:	mov	r2, #5
   10fcc:	ldr	r1, [pc, #308]	; 11108 <abort@plt+0x4bc>
   10fd0:	mov	r0, #0
   10fd4:	bl	10ae4 <dcgettext@plt>
   10fd8:	ldr	r3, [pc, #276]	; 110f4 <abort@plt+0x4a8>
   10fdc:	ldr	r2, [pc, #280]	; 110fc <abort@plt+0x4b0>
   10fe0:	mov	r1, r0
   10fe4:	mov	r0, #1
   10fe8:	bl	10bd4 <__printf_chk@plt>
   10fec:	mov	r2, #5
   10ff0:	ldr	r1, [pc, #276]	; 1110c <abort@plt+0x4c0>
   10ff4:	mov	r0, #0
   10ff8:	bl	10ae4 <dcgettext@plt>
   10ffc:	ldr	r2, [pc, #268]	; 11110 <abort@plt+0x4c4>
   11000:	cmp	r4, r5
   11004:	ldr	r3, [pc, #264]	; 11114 <abort@plt+0x4c8>
   11008:	movne	r3, r2
   1100c:	mov	r1, r0
   11010:	mov	r2, r4
   11014:	mov	r0, #1
   11018:	bl	10bd4 <__printf_chk@plt>
   1101c:	mov	r0, r6
   11020:	bl	10b98 <exit@plt>
   11024:	ldr	r5, [pc, #200]	; 110f4 <abort@plt+0x4a8>
   11028:	mov	r4, r5
   1102c:	mov	r2, #5
   11030:	ldr	r1, [pc, #224]	; 11118 <abort@plt+0x4cc>
   11034:	mov	r0, #0
   11038:	bl	10ae4 <dcgettext@plt>
   1103c:	ldr	r1, [r7]
   11040:	bl	10a6c <fputs_unlocked@plt>
   11044:	b	10fc8 <abort@plt+0x37c>
   11048:	mov	r0, r4
   1104c:	bl	10ae4 <dcgettext@plt>
   11050:	ldr	r3, [pc, #164]	; 110fc <abort@plt+0x4b0>
   11054:	ldr	r2, [pc, #164]	; 11100 <abort@plt+0x4b4>
   11058:	mov	r1, r0
   1105c:	mov	r0, #1
   11060:	bl	10bd4 <__printf_chk@plt>
   11064:	mov	r1, r4
   11068:	mov	r0, #5
   1106c:	bl	10c10 <setlocale@plt>
   11070:	cmp	r0, #0
   11074:	beq	1108c <abort@plt+0x440>
   11078:	mov	r2, #3
   1107c:	ldr	r1, [pc, #128]	; 11104 <abort@plt+0x4b8>
   11080:	bl	10c40 <strncmp@plt>
   11084:	cmp	r0, #0
   11088:	bne	11024 <abort@plt+0x3d8>
   1108c:	mov	r2, #5
   11090:	ldr	r1, [pc, #112]	; 11108 <abort@plt+0x4bc>
   11094:	mov	r0, #0
   11098:	bl	10ae4 <dcgettext@plt>
   1109c:	ldr	r3, [pc, #80]	; 110f4 <abort@plt+0x4a8>
   110a0:	ldr	r2, [pc, #84]	; 110fc <abort@plt+0x4b0>
   110a4:	mov	r4, r3
   110a8:	mov	r1, r0
   110ac:	mov	r0, #1
   110b0:	bl	10bd4 <__printf_chk@plt>
   110b4:	ldr	r1, [pc, #80]	; 1110c <abort@plt+0x4c0>
   110b8:	mov	r2, #5
   110bc:	mov	r0, #0
   110c0:	bl	10ae4 <dcgettext@plt>
   110c4:	ldr	r3, [pc, #72]	; 11114 <abort@plt+0x4c8>
   110c8:	mov	r1, r0
   110cc:	b	11010 <abort@plt+0x3c4>
   110d0:	ldrdeq	r4, [r1], -r0
   110d4:	andeq	r5, r2, r4, lsr #2
   110d8:	andeq	r5, r2, r4, lsl r1
   110dc:	muleq	r1, r0, r5
   110e0:	andeq	r4, r1, r0, lsl r6
   110e4:	andeq	r4, r1, ip, lsr r6
   110e8:	andeq	r4, r1, r4, asr #12
   110ec:	andeq	r4, r1, r4, ror r6
   110f0:	andeq	r4, r1, ip, lsr #13
   110f4:	andeq	r4, r1, r8, asr #11
   110f8:	andeq	r4, r1, ip, ror #14
   110fc:	andeq	r4, r1, r4, lsl #15
   11100:	andeq	r4, r1, ip, lsr #15
   11104:			; <UNDEFINED> instruction: 0x000147bc
   11108:	andeq	r4, r1, r8, lsl #16
   1110c:	andeq	r4, r1, r4, lsr #16
   11110:	andeq	r4, r1, r0, asr #12
   11114:	muleq	r1, ip, r8
   11118:	andeq	r4, r1, r0, asr #15
   1111c:	ldr	r3, [pc, #4]	; 11128 <abort@plt+0x4dc>
   11120:	str	r0, [r3]
   11124:	bx	lr
   11128:	andeq	r5, r2, ip, lsl r1
   1112c:	ldr	r3, [pc, #4]	; 11138 <abort@plt+0x4ec>
   11130:	strb	r0, [r3, #4]
   11134:	bx	lr
   11138:	andeq	r5, r2, ip, lsl r1
   1113c:	ldr	r3, [pc, #192]	; 11204 <abort@plt+0x5b8>
   11140:	push	{r4, r5, r6, lr}
   11144:	sub	sp, sp, #8
   11148:	ldr	r0, [r3]
   1114c:	bl	13c70 <abort@plt+0x3024>
   11150:	cmp	r0, #0
   11154:	beq	11178 <abort@plt+0x52c>
   11158:	ldr	r4, [pc, #168]	; 11208 <abort@plt+0x5bc>
   1115c:	ldrb	r3, [r4, #4]
   11160:	cmp	r3, #0
   11164:	beq	11194 <abort@plt+0x548>
   11168:	bl	10bb0 <__errno_location@plt>
   1116c:	ldr	r3, [r0]
   11170:	cmp	r3, #32
   11174:	bne	11194 <abort@plt+0x548>
   11178:	ldr	r3, [pc, #140]	; 1120c <abort@plt+0x5c0>
   1117c:	ldr	r0, [r3]
   11180:	bl	13c70 <abort@plt+0x3024>
   11184:	cmp	r0, #0
   11188:	bne	111dc <abort@plt+0x590>
   1118c:	add	sp, sp, #8
   11190:	pop	{r4, r5, r6, pc}
   11194:	mov	r2, #5
   11198:	ldr	r1, [pc, #112]	; 11210 <abort@plt+0x5c4>
   1119c:	mov	r0, #0
   111a0:	bl	10ae4 <dcgettext@plt>
   111a4:	ldr	r4, [r4]
   111a8:	cmp	r4, #0
   111ac:	mov	r5, r0
   111b0:	beq	111e8 <abort@plt+0x59c>
   111b4:	bl	10bb0 <__errno_location@plt>
   111b8:	ldr	r6, [r0]
   111bc:	mov	r0, r4
   111c0:	bl	12f48 <abort@plt+0x22fc>
   111c4:	mov	r1, r6
   111c8:	str	r5, [sp]
   111cc:	ldr	r2, [pc, #64]	; 11214 <abort@plt+0x5c8>
   111d0:	mov	r3, r0
   111d4:	mov	r0, #0
   111d8:	bl	10b50 <error@plt>
   111dc:	ldr	r3, [pc, #52]	; 11218 <abort@plt+0x5cc>
   111e0:	ldr	r0, [r3]
   111e4:	bl	10aa8 <_exit@plt>
   111e8:	bl	10bb0 <__errno_location@plt>
   111ec:	mov	r3, r5
   111f0:	ldr	r2, [pc, #36]	; 1121c <abort@plt+0x5d0>
   111f4:	ldr	r1, [r0]
   111f8:	mov	r0, r4
   111fc:	bl	10b50 <error@plt>
   11200:	b	111dc <abort@plt+0x590>
   11204:	andeq	r5, r2, r4, lsl r1
   11208:	andeq	r5, r2, ip, lsl r1
   1120c:	andeq	r5, r2, r0, lsl r1
   11210:	andeq	r4, r1, r0, lsl r9
   11214:	andeq	r4, r1, ip, lsl r9
   11218:	andeq	r5, r2, r4, asr #1
   1121c:	andeq	r4, r1, r0, lsr #18
   11220:	push	{r4, r5, r6, lr}
   11224:	subs	r4, r0, #0
   11228:	beq	1129c <abort@plt+0x650>
   1122c:	mov	r1, #47	; 0x2f
   11230:	bl	10c1c <strrchr@plt>
   11234:	subs	r5, r0, #0
   11238:	beq	11288 <abort@plt+0x63c>
   1123c:	add	r6, r5, #1
   11240:	sub	r3, r6, r4
   11244:	cmp	r3, #6
   11248:	ble	11288 <abort@plt+0x63c>
   1124c:	mov	r2, #7
   11250:	ldr	r1, [pc, #96]	; 112b8 <abort@plt+0x66c>
   11254:	sub	r0, r5, #6
   11258:	bl	10c40 <strncmp@plt>
   1125c:	cmp	r0, #0
   11260:	bne	11288 <abort@plt+0x63c>
   11264:	mov	r2, #3
   11268:	ldr	r1, [pc, #76]	; 112bc <abort@plt+0x670>
   1126c:	mov	r0, r6
   11270:	bl	10c40 <strncmp@plt>
   11274:	cmp	r0, #0
   11278:	movne	r4, r6
   1127c:	ldreq	r3, [pc, #60]	; 112c0 <abort@plt+0x674>
   11280:	addeq	r4, r5, #4
   11284:	streq	r4, [r3]
   11288:	ldr	r2, [pc, #52]	; 112c4 <abort@plt+0x678>
   1128c:	ldr	r3, [pc, #52]	; 112c8 <abort@plt+0x67c>
   11290:	str	r4, [r2]
   11294:	str	r4, [r3]
   11298:	pop	{r4, r5, r6, pc}
   1129c:	ldr	r3, [pc, #40]	; 112cc <abort@plt+0x680>
   112a0:	mov	r2, #55	; 0x37
   112a4:	mov	r1, #1
   112a8:	ldr	r3, [r3]
   112ac:	ldr	r0, [pc, #28]	; 112d0 <abort@plt+0x684>
   112b0:	bl	10b14 <fwrite@plt>
   112b4:	bl	10c4c <abort@plt>
   112b8:	andeq	r4, r1, ip, asr r9
   112bc:	andeq	r4, r1, r4, ror #18
   112c0:	andeq	r5, r2, r8, lsl #2
   112c4:	andeq	r5, r2, r4, lsr #2
   112c8:	andeq	r5, r2, ip, lsl #2
   112cc:	andeq	r5, r2, r0, lsl r1
   112d0:	andeq	r4, r1, r4, lsr #18
   112d4:	push	{r4, r5, r6, lr}
   112d8:	mov	r2, #48	; 0x30
   112dc:	mov	r4, r1
   112e0:	mov	r1, #0
   112e4:	mov	r5, r0
   112e8:	bl	10bc8 <memset@plt>
   112ec:	cmp	r4, #10
   112f0:	beq	11300 <abort@plt+0x6b4>
   112f4:	str	r4, [r5]
   112f8:	mov	r0, r5
   112fc:	pop	{r4, r5, r6, pc}
   11300:	bl	10c4c <abort@plt>
   11304:	push	{r4, r5, r6, lr}
   11308:	mov	r4, r0
   1130c:	mov	r5, r1
   11310:	bl	13ee4 <abort@plt+0x3298>
   11314:	ldrb	r3, [r0]
   11318:	bic	r3, r3, #32
   1131c:	cmp	r3, #85	; 0x55
   11320:	bne	11380 <abort@plt+0x734>
   11324:	ldrb	r3, [r0, #1]
   11328:	bic	r3, r3, #32
   1132c:	cmp	r3, #84	; 0x54
   11330:	bne	113bc <abort@plt+0x770>
   11334:	ldrb	r3, [r0, #2]
   11338:	bic	r3, r3, #32
   1133c:	cmp	r3, #70	; 0x46
   11340:	bne	113bc <abort@plt+0x770>
   11344:	ldrb	r3, [r0, #3]
   11348:	cmp	r3, #45	; 0x2d
   1134c:	bne	113bc <abort@plt+0x770>
   11350:	ldrb	r3, [r0, #4]
   11354:	cmp	r3, #56	; 0x38
   11358:	bne	113bc <abort@plt+0x770>
   1135c:	ldrb	r3, [r0, #5]
   11360:	cmp	r3, #0
   11364:	bne	113bc <abort@plt+0x770>
   11368:	ldrb	r2, [r4]
   1136c:	ldr	r3, [pc, #152]	; 1140c <abort@plt+0x7c0>
   11370:	ldr	r0, [pc, #152]	; 11410 <abort@plt+0x7c4>
   11374:	cmp	r2, #96	; 0x60
   11378:	movne	r0, r3
   1137c:	pop	{r4, r5, r6, pc}
   11380:	cmp	r3, #71	; 0x47
   11384:	bne	113bc <abort@plt+0x770>
   11388:	ldrb	r3, [r0, #1]
   1138c:	bic	r3, r3, #32
   11390:	cmp	r3, #66	; 0x42
   11394:	bne	113bc <abort@plt+0x770>
   11398:	ldrb	r3, [r0, #2]
   1139c:	cmp	r3, #49	; 0x31
   113a0:	bne	113bc <abort@plt+0x770>
   113a4:	ldrb	r3, [r0, #3]
   113a8:	cmp	r3, #56	; 0x38
   113ac:	bne	113bc <abort@plt+0x770>
   113b0:	ldrb	r3, [r0, #4]
   113b4:	cmp	r3, #48	; 0x30
   113b8:	beq	113d0 <abort@plt+0x784>
   113bc:	ldr	r3, [pc, #80]	; 11414 <abort@plt+0x7c8>
   113c0:	cmp	r5, #9
   113c4:	ldr	r0, [pc, #76]	; 11418 <abort@plt+0x7cc>
   113c8:	movne	r0, r3
   113cc:	pop	{r4, r5, r6, pc}
   113d0:	ldrb	r3, [r0, #5]
   113d4:	cmp	r3, #51	; 0x33
   113d8:	bne	113bc <abort@plt+0x770>
   113dc:	ldrb	r3, [r0, #6]
   113e0:	cmp	r3, #48	; 0x30
   113e4:	bne	113bc <abort@plt+0x770>
   113e8:	ldrb	r3, [r0, #7]
   113ec:	cmp	r3, #0
   113f0:	bne	113bc <abort@plt+0x770>
   113f4:	ldrb	r2, [r4]
   113f8:	ldr	r3, [pc, #28]	; 1141c <abort@plt+0x7d0>
   113fc:	ldr	r0, [pc, #28]	; 11420 <abort@plt+0x7d4>
   11400:	cmp	r2, #96	; 0x60
   11404:	movne	r0, r3
   11408:	pop	{r4, r5, r6, pc}
   1140c:	andeq	r4, r1, r0, asr #19
   11410:			; <UNDEFINED> instruction: 0x000149bc
   11414:	ldrdeq	r4, [r1], -r0
   11418:	andeq	r4, r1, ip, asr #19
   1141c:	andeq	r4, r1, r8, asr #19
   11420:	andeq	r4, r1, r4, asr #19
   11424:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11428:	sub	sp, sp, #116	; 0x74
   1142c:	mov	sl, r0
   11430:	str	r3, [sp, #24]
   11434:	mov	r3, #1
   11438:	mov	r8, r1
   1143c:	str	r2, [sp, #56]	; 0x38
   11440:	str	r3, [sp, #36]	; 0x24
   11444:	bl	10b2c <__ctype_get_mb_cur_max@plt>
   11448:	ldr	r3, [sp, #156]	; 0x9c
   1144c:	mov	fp, r8
   11450:	mov	r2, #0
   11454:	lsr	r3, r3, #1
   11458:	and	r3, r3, #1
   1145c:	str	r2, [sp, #68]	; 0x44
   11460:	str	r3, [sp, #28]
   11464:	str	r2, [sp, #40]	; 0x28
   11468:	str	r2, [sp, #44]	; 0x2c
   1146c:	str	r2, [sp, #52]	; 0x34
   11470:	str	r2, [sp, #64]	; 0x40
   11474:	str	r2, [sp, #72]	; 0x48
   11478:	str	sl, [sp, #32]
   1147c:	str	r0, [sp, #76]	; 0x4c
   11480:	ldr	r3, [sp, #152]	; 0x98
   11484:	cmp	r3, #10
   11488:	ldrls	pc, [pc, r3, lsl #2]
   1148c:	b	1264c <abort@plt+0x1a00>
   11490:			; <UNDEFINED> instruction: 0x000114bc
   11494:	andeq	r1, r1, r4, lsr #15
   11498:	andeq	r1, r1, r8, asr #15
   1149c:	andeq	r1, r1, ip, ror #15
   114a0:	andeq	r1, r1, r8, lsl r9
   114a4:	andeq	r1, r1, ip, ror #17
   114a8:	andeq	r1, r1, r4, asr #17
   114ac:	andeq	r1, r1, r0, lsl #16
   114b0:	andeq	r1, r1, r8, lsl r8
   114b4:	andeq	r1, r1, r8, lsl r8
   114b8:	andeq	r1, r1, r8, lsl r8
   114bc:	mov	r3, #0
   114c0:	mov	r7, r3
   114c4:	str	r3, [sp, #28]
   114c8:	ldr	r3, [sp, #44]	; 0x2c
   114cc:	mov	sl, #0
   114d0:	eor	r3, r3, #1
   114d4:	str	r3, [sp, #60]	; 0x3c
   114d8:	ldr	r3, [sp, #24]
   114dc:	cmn	r3, #1
   114e0:	beq	11a44 <abort@plt+0xdf8>
   114e4:	ldr	r3, [sp, #24]
   114e8:	subs	r5, r3, sl
   114ec:	movne	r5, #1
   114f0:	cmp	r5, #0
   114f4:	beq	11a5c <abort@plt+0xe10>
   114f8:	ldr	r3, [sp, #152]	; 0x98
   114fc:	ldr	r8, [sp, #44]	; 0x2c
   11500:	cmp	r3, #2
   11504:	moveq	r8, #0
   11508:	andne	r8, r8, #1
   1150c:	ldr	r3, [sp, #52]	; 0x34
   11510:	adds	r9, r3, #0
   11514:	movne	r9, #1
   11518:	ands	r6, r9, r8
   1151c:	beq	11ec4 <abort@plt+0x1278>
   11520:	ldr	r2, [sp, #52]	; 0x34
   11524:	ldr	r1, [sp, #24]
   11528:	cmp	r2, #1
   1152c:	mov	r3, r2
   11530:	movls	r3, #0
   11534:	movhi	r3, #1
   11538:	cmn	r1, #1
   1153c:	movne	r3, #0
   11540:	cmp	r3, #0
   11544:	add	r4, sl, r2
   11548:	beq	11558 <abort@plt+0x90c>
   1154c:	ldr	r0, [sp, #56]	; 0x38
   11550:	bl	10ba4 <strlen@plt>
   11554:	str	r0, [sp, #24]
   11558:	ldr	r3, [sp, #24]
   1155c:	cmp	r3, r4
   11560:	ldr	r3, [sp, #56]	; 0x38
   11564:	add	r3, r3, sl
   11568:	str	r3, [sp, #48]	; 0x30
   1156c:	bcc	11ed0 <abort@plt+0x1284>
   11570:	mov	r0, r3
   11574:	ldr	r2, [sp, #52]	; 0x34
   11578:	ldr	r1, [sp, #64]	; 0x40
   1157c:	bl	10acc <memcmp@plt>
   11580:	cmp	r0, #0
   11584:	bne	11ed0 <abort@plt+0x1284>
   11588:	ldr	r3, [sp, #28]
   1158c:	cmp	r3, #0
   11590:	bne	1274c <abort@plt+0x1b00>
   11594:	ldr	r3, [sp, #48]	; 0x30
   11598:	ldrb	r4, [r3]
   1159c:	cmp	r4, #126	; 0x7e
   115a0:	ldrls	pc, [pc, r4, lsl #2]
   115a4:	b	11e64 <abort@plt+0x1218>
   115a8:	andeq	r1, r1, r8, lsl #25
   115ac:	andeq	r1, r1, r4, ror #28
   115b0:	andeq	r1, r1, r4, ror #28
   115b4:	andeq	r1, r1, r4, ror #28
   115b8:	andeq	r1, r1, r4, ror #28
   115bc:	andeq	r1, r1, r4, ror #28
   115c0:	andeq	r1, r1, r4, ror #28
   115c4:	andeq	r1, r1, ip, ror #24
   115c8:	andeq	r1, r1, r0, asr ip
   115cc:	andeq	r1, r1, ip, asr #28
   115d0:			; <UNDEFINED> instruction: 0x00011bb0
   115d4:	muleq	r1, r4, fp
   115d8:	andeq	r1, r1, r8, lsr #28
   115dc:	andeq	r1, r1, r4, lsl #28
   115e0:	andeq	r1, r1, r4, ror #28
   115e4:	andeq	r1, r1, r4, ror #28
   115e8:	andeq	r1, r1, r4, ror #28
   115ec:	andeq	r1, r1, r4, ror #28
   115f0:	andeq	r1, r1, r4, ror #28
   115f4:	andeq	r1, r1, r4, ror #28
   115f8:	andeq	r1, r1, r4, ror #28
   115fc:	andeq	r1, r1, r4, ror #28
   11600:	andeq	r1, r1, r4, ror #28
   11604:	andeq	r1, r1, r4, ror #28
   11608:	andeq	r1, r1, r4, ror #28
   1160c:	andeq	r1, r1, r4, ror #28
   11610:	andeq	r1, r1, r4, ror #28
   11614:	andeq	r1, r1, r4, ror #28
   11618:	andeq	r1, r1, r4, ror #28
   1161c:	andeq	r1, r1, r4, ror #28
   11620:	andeq	r1, r1, r4, ror #28
   11624:	andeq	r1, r1, r4, ror #28
   11628:	andeq	r1, r1, r4, asr #28
   1162c:	andeq	r1, r1, r8, ror sp
   11630:	andeq	r1, r1, r8, ror sp
   11634:	andeq	r1, r1, r8, lsl #19
   11638:	andeq	r1, r1, r8, ror sp
   1163c:	andeq	r1, r1, r0, lsl lr
   11640:	andeq	r1, r1, r8, ror sp
   11644:	andeq	r1, r1, r4, ror #27
   11648:	andeq	r1, r1, r8, ror sp
   1164c:	andeq	r1, r1, r8, ror sp
   11650:	andeq	r1, r1, r8, ror sp
   11654:	andeq	r1, r1, r0, lsl lr
   11658:	andeq	r1, r1, r0, lsl lr
   1165c:	andeq	r1, r1, r0, lsl lr
   11660:	andeq	r1, r1, r0, lsl lr
   11664:	andeq	r1, r1, r0, lsl lr
   11668:	andeq	r1, r1, r0, lsl lr
   1166c:	andeq	r1, r1, r0, lsl lr
   11670:	andeq	r1, r1, r0, lsl lr
   11674:	andeq	r1, r1, r0, lsl lr
   11678:	andeq	r1, r1, r0, lsl lr
   1167c:	andeq	r1, r1, r0, lsl lr
   11680:	andeq	r1, r1, r0, lsl lr
   11684:	andeq	r1, r1, r0, lsl lr
   11688:	andeq	r1, r1, r0, lsl lr
   1168c:	andeq	r1, r1, r0, lsl lr
   11690:	andeq	r1, r1, r0, lsl lr
   11694:	andeq	r1, r1, r8, ror sp
   11698:	andeq	r1, r1, r8, ror sp
   1169c:	andeq	r1, r1, r8, ror sp
   116a0:	andeq	r1, r1, r8, ror sp
   116a4:			; <UNDEFINED> instruction: 0x00011db4
   116a8:	andeq	r1, r1, r4, ror #28
   116ac:	andeq	r1, r1, r0, lsl lr
   116b0:	andeq	r1, r1, r0, lsl lr
   116b4:	andeq	r1, r1, r0, lsl lr
   116b8:	andeq	r1, r1, r0, lsl lr
   116bc:	andeq	r1, r1, r0, lsl lr
   116c0:	andeq	r1, r1, r0, lsl lr
   116c4:	andeq	r1, r1, r0, lsl lr
   116c8:	andeq	r1, r1, r0, lsl lr
   116cc:	andeq	r1, r1, r0, lsl lr
   116d0:	andeq	r1, r1, r0, lsl lr
   116d4:	andeq	r1, r1, r0, lsl lr
   116d8:	andeq	r1, r1, r0, lsl lr
   116dc:	andeq	r1, r1, r0, lsl lr
   116e0:	andeq	r1, r1, r0, lsl lr
   116e4:	andeq	r1, r1, r0, lsl lr
   116e8:	andeq	r1, r1, r0, lsl lr
   116ec:	andeq	r1, r1, r0, lsl lr
   116f0:	andeq	r1, r1, r0, lsl lr
   116f4:	andeq	r1, r1, r0, lsl lr
   116f8:	andeq	r1, r1, r0, lsl lr
   116fc:	andeq	r1, r1, r0, lsl lr
   11700:	andeq	r1, r1, r0, lsl lr
   11704:	andeq	r1, r1, r0, lsl lr
   11708:	andeq	r1, r1, r0, lsl lr
   1170c:	andeq	r1, r1, r0, lsl lr
   11710:	andeq	r1, r1, r0, lsl lr
   11714:	andeq	r1, r1, r8, ror sp
   11718:	ldrdeq	r1, [r1], -r4
   1171c:	andeq	r1, r1, r0, lsl lr
   11720:	andeq	r1, r1, r8, ror sp
   11724:	andeq	r1, r1, r0, lsl lr
   11728:	andeq	r1, r1, r8, ror sp
   1172c:	andeq	r1, r1, r0, lsl lr
   11730:	andeq	r1, r1, r0, lsl lr
   11734:	andeq	r1, r1, r0, lsl lr
   11738:	andeq	r1, r1, r0, lsl lr
   1173c:	andeq	r1, r1, r0, lsl lr
   11740:	andeq	r1, r1, r0, lsl lr
   11744:	andeq	r1, r1, r0, lsl lr
   11748:	andeq	r1, r1, r0, lsl lr
   1174c:	andeq	r1, r1, r0, lsl lr
   11750:	andeq	r1, r1, r0, lsl lr
   11754:	andeq	r1, r1, r0, lsl lr
   11758:	andeq	r1, r1, r0, lsl lr
   1175c:	andeq	r1, r1, r0, lsl lr
   11760:	andeq	r1, r1, r0, lsl lr
   11764:	andeq	r1, r1, r0, lsl lr
   11768:	andeq	r1, r1, r0, lsl lr
   1176c:	andeq	r1, r1, r0, lsl lr
   11770:	andeq	r1, r1, r0, lsl lr
   11774:	andeq	r1, r1, r0, lsl lr
   11778:	andeq	r1, r1, r0, lsl lr
   1177c:	andeq	r1, r1, r0, lsl lr
   11780:	andeq	r1, r1, r0, lsl lr
   11784:	andeq	r1, r1, r0, lsl lr
   11788:	andeq	r1, r1, r0, lsl lr
   1178c:	andeq	r1, r1, r0, lsl lr
   11790:	andeq	r1, r1, r0, lsl lr
   11794:	andeq	r1, r1, r8, ror #18
   11798:	andeq	r1, r1, r8, ror sp
   1179c:	andeq	r1, r1, r8, ror #18
   117a0:	andeq	r1, r1, r8, lsl #19
   117a4:	mov	r3, #1
   117a8:	str	r3, [sp, #28]
   117ac:	str	r3, [sp, #52]	; 0x34
   117b0:	ldr	r3, [pc, #4000]	; 12758 <abort@plt+0x1b0c>
   117b4:	mov	r7, #0
   117b8:	str	r3, [sp, #64]	; 0x40
   117bc:	mov	r3, #2
   117c0:	str	r3, [sp, #152]	; 0x98
   117c4:	b	114c8 <abort@plt+0x87c>
   117c8:	ldr	r3, [sp, #28]
   117cc:	cmp	r3, #0
   117d0:	beq	1192c <abort@plt+0xce0>
   117d4:	mov	r3, #1
   117d8:	str	r3, [sp, #52]	; 0x34
   117dc:	ldr	r3, [pc, #3956]	; 12758 <abort@plt+0x1b0c>
   117e0:	mov	r7, #0
   117e4:	str	r3, [sp, #64]	; 0x40
   117e8:	b	114c8 <abort@plt+0x87c>
   117ec:	mov	r3, #1
   117f0:	str	r3, [sp, #44]	; 0x2c
   117f4:	str	r3, [sp, #52]	; 0x34
   117f8:	str	r3, [sp, #28]
   117fc:	b	117b0 <abort@plt+0xb64>
   11800:	mov	r3, #0
   11804:	str	r3, [sp, #28]
   11808:	mov	r3, #1
   1180c:	str	r3, [sp, #44]	; 0x2c
   11810:	mov	r7, #0
   11814:	b	114c8 <abort@plt+0x87c>
   11818:	ldr	r3, [sp, #152]	; 0x98
   1181c:	cmp	r3, #10
   11820:	beq	11864 <abort@plt+0xc18>
   11824:	mov	r2, #5
   11828:	ldr	r1, [pc, #3884]	; 1275c <abort@plt+0x1b10>
   1182c:	mov	r0, #0
   11830:	bl	10ae4 <dcgettext@plt>
   11834:	ldr	r2, [pc, #3872]	; 1275c <abort@plt+0x1b10>
   11838:	cmp	r0, r2
   1183c:	str	r0, [sp, #164]	; 0xa4
   11840:	beq	12848 <abort@plt+0x1bfc>
   11844:	mov	r2, #5
   11848:	ldr	r1, [pc, #3848]	; 12758 <abort@plt+0x1b0c>
   1184c:	mov	r0, #0
   11850:	bl	10ae4 <dcgettext@plt>
   11854:	ldr	r2, [pc, #3836]	; 12758 <abort@plt+0x1b0c>
   11858:	cmp	r0, r2
   1185c:	str	r0, [sp, #168]	; 0xa8
   11860:	beq	12838 <abort@plt+0x1bec>
   11864:	ldr	r7, [sp, #28]
   11868:	cmp	r7, #0
   1186c:	movne	r7, #0
   11870:	bne	118a4 <abort@plt+0xc58>
   11874:	ldr	r3, [sp, #164]	; 0xa4
   11878:	ldrb	r3, [r3]
   1187c:	cmp	r3, #0
   11880:	beq	12858 <abort@plt+0x1c0c>
   11884:	ldr	r2, [sp, #164]	; 0xa4
   11888:	ldr	r1, [sp, #32]
   1188c:	cmp	fp, r7
   11890:	strbhi	r3, [r1, r7]
   11894:	ldrb	r3, [r2, #1]!
   11898:	add	r7, r7, #1
   1189c:	cmp	r3, #0
   118a0:	bne	1188c <abort@plt+0xc40>
   118a4:	ldr	r0, [sp, #168]	; 0xa8
   118a8:	bl	10ba4 <strlen@plt>
   118ac:	ldr	r3, [sp, #168]	; 0xa8
   118b0:	str	r3, [sp, #64]	; 0x40
   118b4:	mov	r3, #1
   118b8:	str	r3, [sp, #44]	; 0x2c
   118bc:	str	r0, [sp, #52]	; 0x34
   118c0:	b	114c8 <abort@plt+0x87c>
   118c4:	mov	r3, #1
   118c8:	str	r3, [sp, #44]	; 0x2c
   118cc:	str	r3, [sp, #52]	; 0x34
   118d0:	str	r3, [sp, #28]
   118d4:	ldr	r3, [pc, #3716]	; 12760 <abort@plt+0x1b14>
   118d8:	mov	r7, #0
   118dc:	str	r3, [sp, #64]	; 0x40
   118e0:	mov	r3, #5
   118e4:	str	r3, [sp, #152]	; 0x98
   118e8:	b	114c8 <abort@plt+0x87c>
   118ec:	ldr	r3, [sp, #28]
   118f0:	cmp	r3, #0
   118f4:	beq	125f4 <abort@plt+0x19a8>
   118f8:	ldr	r3, [sp, #28]
   118fc:	mov	r7, #0
   11900:	str	r3, [sp, #44]	; 0x2c
   11904:	mov	r3, #1
   11908:	str	r3, [sp, #52]	; 0x34
   1190c:	ldr	r3, [pc, #3660]	; 12760 <abort@plt+0x1b14>
   11910:	str	r3, [sp, #64]	; 0x40
   11914:	b	114c8 <abort@plt+0x87c>
   11918:	ldr	r3, [sp, #28]
   1191c:	cmp	r3, #0
   11920:	mov	r3, #1
   11924:	streq	r3, [sp, #44]	; 0x2c
   11928:	bne	117ac <abort@plt+0xb60>
   1192c:	cmp	fp, #0
   11930:	beq	12624 <abort@plt+0x19d8>
   11934:	ldr	r3, [sp, #32]
   11938:	mov	r2, #39	; 0x27
   1193c:	mov	r7, #1
   11940:	strb	r2, [r3]
   11944:	mov	r3, #0
   11948:	str	r3, [sp, #28]
   1194c:	mov	r3, #1
   11950:	str	r3, [sp, #52]	; 0x34
   11954:	ldr	r3, [pc, #3580]	; 12758 <abort@plt+0x1b0c>
   11958:	str	r3, [sp, #64]	; 0x40
   1195c:	mov	r3, #2
   11960:	str	r3, [sp, #152]	; 0x98
   11964:	b	114c8 <abort@plt+0x87c>
   11968:	ldr	r3, [sp, #24]
   1196c:	cmn	r3, #1
   11970:	beq	12588 <abort@plt+0x193c>
   11974:	ldr	r3, [sp, #24]
   11978:	subs	r3, r3, #1
   1197c:	movne	r3, #1
   11980:	cmp	r3, #0
   11984:	bne	11990 <abort@plt+0xd44>
   11988:	cmp	sl, #0
   1198c:	beq	11d7c <abort@plt+0x1130>
   11990:	ldr	r3, [sp, #152]	; 0x98
   11994:	mov	r5, #0
   11998:	sub	r2, r3, #2
   1199c:	mov	r8, r5
   119a0:	clz	r2, r2
   119a4:	lsr	r2, r2, #5
   119a8:	ldr	r3, [sp, #60]	; 0x3c
   119ac:	ldr	r1, [sp, #28]
   119b0:	orr	r3, r2, r3
   119b4:	eor	r3, r3, #1
   119b8:	orr	r3, r1, r3
   119bc:	tst	r3, #255	; 0xff
   119c0:	bne	120ec <abort@plt+0x14a0>
   119c4:	cmp	r6, #0
   119c8:	bne	11b18 <abort@plt+0xecc>
   119cc:	ldr	r3, [sp, #40]	; 0x28
   119d0:	eor	r8, r8, #1
   119d4:	and	r8, r8, r3
   119d8:	add	sl, sl, #1
   119dc:	uxtb	r6, r8
   119e0:	cmp	r6, #0
   119e4:	beq	11a18 <abort@plt+0xdcc>
   119e8:	cmp	fp, r7
   119ec:	movhi	r2, #39	; 0x27
   119f0:	ldrhi	r3, [sp, #32]
   119f4:	strbhi	r2, [r3, r7]
   119f8:	add	r3, r7, #1
   119fc:	cmp	fp, r3
   11a00:	movhi	r1, #39	; 0x27
   11a04:	ldrhi	r2, [sp, #32]
   11a08:	add	r7, r7, #2
   11a0c:	strbhi	r1, [r2, r3]
   11a10:	mov	r3, #0
   11a14:	str	r3, [sp, #40]	; 0x28
   11a18:	cmp	r7, fp
   11a1c:	ldrcc	r3, [sp, #32]
   11a20:	strbcc	r4, [r3, r7]
   11a24:	ldr	r3, [sp, #36]	; 0x24
   11a28:	cmp	r5, #0
   11a2c:	moveq	r3, #0
   11a30:	str	r3, [sp, #36]	; 0x24
   11a34:	ldr	r3, [sp, #24]
   11a38:	add	r7, r7, #1
   11a3c:	cmn	r3, #1
   11a40:	bne	114e4 <abort@plt+0x898>
   11a44:	ldr	r3, [sp, #56]	; 0x38
   11a48:	ldrb	r5, [r3, sl]
   11a4c:	adds	r5, r5, #0
   11a50:	movne	r5, #1
   11a54:	cmp	r5, #0
   11a58:	bne	114f8 <abort@plt+0x8ac>
   11a5c:	ldr	r3, [sp, #152]	; 0x98
   11a60:	ldr	r1, [sp, #28]
   11a64:	sub	r3, r3, #2
   11a68:	clz	r3, r3
   11a6c:	lsr	r3, r3, #5
   11a70:	and	r9, r1, r3
   11a74:	cmp	r7, #0
   11a78:	movne	r2, #0
   11a7c:	andeq	r2, r9, #1
   11a80:	cmp	r2, #0
   11a84:	bne	12460 <abort@plt+0x1814>
   11a88:	eor	r2, r1, #1
   11a8c:	ands	r3, r3, r2
   11a90:	beq	1291c <abort@plt+0x1cd0>
   11a94:	ldr	r2, [sp, #68]	; 0x44
   11a98:	cmp	r2, #0
   11a9c:	beq	12908 <abort@plt+0x1cbc>
   11aa0:	ldr	r3, [sp, #36]	; 0x24
   11aa4:	cmp	r3, #0
   11aa8:	bne	128c0 <abort@plt+0x1c74>
   11aac:	ldr	r2, [sp, #72]	; 0x48
   11ab0:	clz	r3, fp
   11ab4:	cmp	r2, #0
   11ab8:	lsr	r3, r3, #5
   11abc:	moveq	r3, #0
   11ac0:	cmp	r3, #0
   11ac4:	beq	12860 <abort@plt+0x1c14>
   11ac8:	str	r3, [sp, #68]	; 0x44
   11acc:	ldr	fp, [sp, #72]	; 0x48
   11ad0:	b	11480 <abort@plt+0x834>
   11ad4:	ldr	r3, [sp, #152]	; 0x98
   11ad8:	cmp	r3, #2
   11adc:	beq	12130 <abort@plt+0x14e4>
   11ae0:	ldr	r3, [sp, #44]	; 0x2c
   11ae4:	ldr	r2, [sp, #28]
   11ae8:	and	r2, r3, r2
   11aec:	ands	r2, r9, r2
   11af0:	bne	1213c <abort@plt+0x14f0>
   11af4:	mov	r4, #92	; 0x5c
   11af8:	mov	r3, r4
   11afc:	ldr	r1, [sp, #44]	; 0x2c
   11b00:	cmp	r1, #0
   11b04:	moveq	r5, #0
   11b08:	moveq	r8, r1
   11b0c:	beq	119a8 <abort@plt+0xd5c>
   11b10:	mov	r4, r3
   11b14:	mov	r5, #0
   11b18:	ldr	r3, [sp, #28]
   11b1c:	cmp	r3, #0
   11b20:	bne	12124 <abort@plt+0x14d8>
   11b24:	ldr	r3, [sp, #40]	; 0x28
   11b28:	eor	r9, r3, #1
   11b2c:	and	r9, r9, r2
   11b30:	ands	r9, r9, #255	; 0xff
   11b34:	beq	11b78 <abort@plt+0xf2c>
   11b38:	cmp	fp, r7
   11b3c:	movhi	r2, #39	; 0x27
   11b40:	ldrhi	r3, [sp, #32]
   11b44:	str	r9, [sp, #40]	; 0x28
   11b48:	strbhi	r2, [r3, r7]
   11b4c:	add	r3, r7, #1
   11b50:	cmp	fp, r3
   11b54:	movhi	r1, #36	; 0x24
   11b58:	ldrhi	r2, [sp, #32]
   11b5c:	strbhi	r1, [r2, r3]
   11b60:	add	r3, r7, #2
   11b64:	cmp	fp, r3
   11b68:	add	r7, r7, #3
   11b6c:	ldrhi	r2, [sp, #32]
   11b70:	movhi	r1, #39	; 0x27
   11b74:	strbhi	r1, [r2, r3]
   11b78:	cmp	fp, r7
   11b7c:	movhi	r2, #92	; 0x5c
   11b80:	ldrhi	r3, [sp, #32]
   11b84:	add	sl, sl, #1
   11b88:	strbhi	r2, [r3, r7]
   11b8c:	add	r7, r7, #1
   11b90:	b	11a18 <abort@plt+0xdcc>
   11b94:	ldr	r3, [sp, #152]	; 0x98
   11b98:	mov	r4, #11
   11b9c:	sub	r2, r3, #2
   11ba0:	mov	r3, #118	; 0x76
   11ba4:	clz	r2, r2
   11ba8:	lsr	r2, r2, #5
   11bac:	b	11afc <abort@plt+0xeb0>
   11bb0:	mov	r4, #10
   11bb4:	mov	r3, #110	; 0x6e
   11bb8:	ldr	r2, [sp, #152]	; 0x98
   11bbc:	ldr	r1, [sp, #28]
   11bc0:	sub	r2, r2, #2
   11bc4:	clz	r2, r2
   11bc8:	lsr	r2, r2, #5
   11bcc:	ands	r1, r1, r2
   11bd0:	beq	11afc <abort@plt+0xeb0>
   11bd4:	ldr	sl, [sp, #32]
   11bd8:	mov	r8, fp
   11bdc:	mov	r2, r1
   11be0:	mov	r3, #2
   11be4:	str	r3, [sp, #152]	; 0x98
   11be8:	ldr	r9, [sp, #44]	; 0x2c
   11bec:	ldr	r3, [sp, #152]	; 0x98
   11bf0:	and	r9, r9, r2
   11bf4:	tst	r9, #255	; 0xff
   11bf8:	movne	r3, #4
   11bfc:	str	r3, [sp, #152]	; 0x98
   11c00:	ldr	r3, [sp, #156]	; 0x9c
   11c04:	mov	ip, #0
   11c08:	bic	r3, r3, #2
   11c0c:	str	r3, [sp, #4]
   11c10:	ldr	r3, [sp, #168]	; 0xa8
   11c14:	ldr	r2, [sp, #56]	; 0x38
   11c18:	str	r3, [sp, #16]
   11c1c:	ldr	r3, [sp, #164]	; 0xa4
   11c20:	mov	r1, r8
   11c24:	str	r3, [sp, #12]
   11c28:	ldr	r3, [sp, #152]	; 0x98
   11c2c:	mov	r0, sl
   11c30:	str	r3, [sp]
   11c34:	str	ip, [sp, #8]
   11c38:	ldr	r3, [sp, #24]
   11c3c:	bl	11424 <abort@plt+0x7d8>
   11c40:	mov	fp, r0
   11c44:	mov	r0, fp
   11c48:	add	sp, sp, #116	; 0x74
   11c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c50:	ldr	r3, [sp, #152]	; 0x98
   11c54:	mov	r4, #8
   11c58:	sub	r2, r3, #2
   11c5c:	mov	r3, #98	; 0x62
   11c60:	clz	r2, r2
   11c64:	lsr	r2, r2, #5
   11c68:	b	11afc <abort@plt+0xeb0>
   11c6c:	ldr	r3, [sp, #152]	; 0x98
   11c70:	mov	r4, #7
   11c74:	sub	r2, r3, #2
   11c78:	mov	r3, #97	; 0x61
   11c7c:	clz	r2, r2
   11c80:	lsr	r2, r2, #5
   11c84:	b	11afc <abort@plt+0xeb0>
   11c88:	ldr	r3, [sp, #44]	; 0x2c
   11c8c:	cmp	r3, #0
   11c90:	beq	12474 <abort@plt+0x1828>
   11c94:	ldr	r3, [sp, #28]
   11c98:	cmp	r3, #0
   11c9c:	bne	1274c <abort@plt+0x1b00>
   11ca0:	ldr	r3, [sp, #152]	; 0x98
   11ca4:	sub	r2, r3, #2
   11ca8:	ldr	r3, [sp, #40]	; 0x28
   11cac:	clz	r2, r2
   11cb0:	eor	r3, r3, #1
   11cb4:	lsr	r2, r2, #5
   11cb8:	ands	r3, r2, r3
   11cbc:	moveq	r1, r7
   11cc0:	beq	11d04 <abort@plt+0x10b8>
   11cc4:	cmp	fp, r7
   11cc8:	movhi	r0, #39	; 0x27
   11ccc:	ldrhi	r1, [sp, #32]
   11cd0:	str	r3, [sp, #40]	; 0x28
   11cd4:	strbhi	r0, [r1, r7]
   11cd8:	add	r1, r7, #1
   11cdc:	cmp	fp, r1
   11ce0:	movhi	ip, #36	; 0x24
   11ce4:	ldrhi	r0, [sp, #32]
   11ce8:	strbhi	ip, [r0, r1]
   11cec:	add	r1, r7, #2
   11cf0:	cmp	fp, r1
   11cf4:	movhi	ip, #39	; 0x27
   11cf8:	ldrhi	r0, [sp, #32]
   11cfc:	strbhi	ip, [r0, r1]
   11d00:	add	r1, r7, #3
   11d04:	cmp	fp, r1
   11d08:	movhi	r0, #92	; 0x5c
   11d0c:	ldrhi	r3, [sp, #32]
   11d10:	add	r7, r1, #1
   11d14:	strbhi	r0, [r3, r1]
   11d18:	cmp	r8, #0
   11d1c:	beq	12660 <abort@plt+0x1a14>
   11d20:	ldr	r0, [sp, #24]
   11d24:	add	r3, sl, #1
   11d28:	cmp	r3, r0
   11d2c:	bcs	1259c <abort@plt+0x1950>
   11d30:	ldr	r0, [sp, #56]	; 0x38
   11d34:	ldrb	r3, [r0, r3]
   11d38:	sub	r3, r3, #48	; 0x30
   11d3c:	cmp	r3, #9
   11d40:	bhi	1259c <abort@plt+0x1950>
   11d44:	cmp	fp, r7
   11d48:	movhi	r3, #48	; 0x30
   11d4c:	ldrhi	r0, [sp, #32]
   11d50:	ldr	r5, [sp, #28]
   11d54:	mov	r4, #48	; 0x30
   11d58:	strbhi	r3, [r0, r7]
   11d5c:	add	r3, r1, #2
   11d60:	cmp	fp, r3
   11d64:	movhi	r0, #48	; 0x30
   11d68:	ldrhi	ip, [sp, #32]
   11d6c:	add	r7, r1, #3
   11d70:	strbhi	r0, [ip, r3]
   11d74:	b	119a8 <abort@plt+0xd5c>
   11d78:	mov	r5, #0
   11d7c:	ldr	r3, [sp, #152]	; 0x98
   11d80:	sub	r2, r3, #2
   11d84:	ldr	r3, [sp, #28]
   11d88:	clz	r2, r2
   11d8c:	lsr	r2, r2, #5
   11d90:	ands	r8, r3, r2
   11d94:	beq	119a8 <abort@plt+0xd5c>
   11d98:	mov	r3, r8
   11d9c:	mov	r2, r3
   11da0:	mov	r3, #2
   11da4:	ldr	sl, [sp, #32]
   11da8:	mov	r8, fp
   11dac:	str	r3, [sp, #152]	; 0x98
   11db0:	b	11be8 <abort@plt+0xf9c>
   11db4:	ldr	r3, [sp, #152]	; 0x98
   11db8:	cmp	r3, #2
   11dbc:	beq	124e0 <abort@plt+0x1894>
   11dc0:	cmp	r3, #5
   11dc4:	beq	124a0 <abort@plt+0x1854>
   11dc8:	mov	r5, #0
   11dcc:	sub	r2, r3, #2
   11dd0:	mov	r8, r5
   11dd4:	clz	r2, r2
   11dd8:	mov	r4, #63	; 0x3f
   11ddc:	lsr	r2, r2, #5
   11de0:	b	119a8 <abort@plt+0xd5c>
   11de4:	ldr	r3, [sp, #152]	; 0x98
   11de8:	cmp	r3, #2
   11dec:	beq	12500 <abort@plt+0x18b4>
   11df0:	mov	r2, #0
   11df4:	str	r5, [sp, #68]	; 0x44
   11df8:	mov	r8, r2
   11dfc:	mov	r4, #39	; 0x27
   11e00:	b	119a8 <abort@plt+0xd5c>
   11e04:	mov	r4, #13
   11e08:	mov	r3, #114	; 0x72
   11e0c:	b	11bb8 <abort@plt+0xf6c>
   11e10:	ldr	r3, [sp, #152]	; 0x98
   11e14:	mov	r8, #0
   11e18:	sub	r2, r3, #2
   11e1c:	clz	r2, r2
   11e20:	lsr	r2, r2, #5
   11e24:	b	119a8 <abort@plt+0xd5c>
   11e28:	ldr	r3, [sp, #152]	; 0x98
   11e2c:	mov	r4, #12
   11e30:	sub	r2, r3, #2
   11e34:	mov	r3, #102	; 0x66
   11e38:	clz	r2, r2
   11e3c:	lsr	r2, r2, #5
   11e40:	b	11afc <abort@plt+0xeb0>
   11e44:	mov	r5, r6
   11e48:	b	11d7c <abort@plt+0x1130>
   11e4c:	ldr	r3, [sp, #152]	; 0x98
   11e50:	sub	r2, r3, #2
   11e54:	mov	r3, #116	; 0x74
   11e58:	clz	r2, r2
   11e5c:	lsr	r2, r2, #5
   11e60:	b	11afc <abort@plt+0xeb0>
   11e64:	ldr	r8, [sp, #76]	; 0x4c
   11e68:	cmp	r8, #1
   11e6c:	bne	1231c <abort@plt+0x16d0>
   11e70:	bl	10b8c <__ctype_b_loc@plt>
   11e74:	sxth	r3, r4
   11e78:	mov	ip, r8
   11e7c:	lsl	r3, r3, #1
   11e80:	ldr	r2, [r0]
   11e84:	ldrh	r3, [r2, r3]
   11e88:	and	r3, r3, #16384	; 0x4000
   11e8c:	cmp	r3, #0
   11e90:	movne	r5, #1
   11e94:	moveq	r5, #0
   11e98:	moveq	r3, #1
   11e9c:	movne	r3, #0
   11ea0:	ldr	r2, [sp, #44]	; 0x2c
   11ea4:	and	r3, r3, r2
   11ea8:	ands	r8, r3, #255	; 0xff
   11eac:	bne	121b0 <abort@plt+0x1564>
   11eb0:	ldr	r3, [sp, #152]	; 0x98
   11eb4:	sub	r2, r3, #2
   11eb8:	clz	r2, r2
   11ebc:	lsr	r2, r2, #5
   11ec0:	b	119a8 <abort@plt+0xd5c>
   11ec4:	ldr	r3, [sp, #56]	; 0x38
   11ec8:	add	r3, r3, sl
   11ecc:	str	r3, [sp, #48]	; 0x30
   11ed0:	ldr	r3, [sp, #48]	; 0x30
   11ed4:	mov	r6, #0
   11ed8:	ldrb	r4, [r3]
   11edc:	cmp	r4, #126	; 0x7e
   11ee0:	ldrls	pc, [pc, r4, lsl #2]
   11ee4:	b	11e64 <abort@plt+0x1218>
   11ee8:	andeq	r1, r1, r8, lsl #25
   11eec:	andeq	r1, r1, r4, ror #28
   11ef0:	andeq	r1, r1, r4, ror #28
   11ef4:	andeq	r1, r1, r4, ror #28
   11ef8:	andeq	r1, r1, r4, ror #28
   11efc:	andeq	r1, r1, r4, ror #28
   11f00:	andeq	r1, r1, r4, ror #28
   11f04:	andeq	r1, r1, ip, ror #24
   11f08:	andeq	r1, r1, r0, asr ip
   11f0c:	andeq	r2, r1, r4, ror #1
   11f10:			; <UNDEFINED> instruction: 0x00011bb0
   11f14:	muleq	r1, r4, fp
   11f18:	andeq	r1, r1, r8, lsr #28
   11f1c:	andeq	r1, r1, r4, lsl #28
   11f20:	andeq	r1, r1, r4, ror #28
   11f24:	andeq	r1, r1, r4, ror #28
   11f28:	andeq	r1, r1, r4, ror #28
   11f2c:	andeq	r1, r1, r4, ror #28
   11f30:	andeq	r1, r1, r4, ror #28
   11f34:	andeq	r1, r1, r4, ror #28
   11f38:	andeq	r1, r1, r4, ror #28
   11f3c:	andeq	r1, r1, r4, ror #28
   11f40:	andeq	r1, r1, r4, ror #28
   11f44:	andeq	r1, r1, r4, ror #28
   11f48:	andeq	r1, r1, r4, ror #28
   11f4c:	andeq	r1, r1, r4, ror #28
   11f50:	andeq	r1, r1, r4, ror #28
   11f54:	andeq	r1, r1, r4, ror #28
   11f58:	andeq	r1, r1, r4, ror #28
   11f5c:	andeq	r1, r1, r4, ror #28
   11f60:	andeq	r1, r1, r4, ror #28
   11f64:	andeq	r1, r1, r4, ror #28
   11f68:	andeq	r1, r1, ip, ror sp
   11f6c:	andeq	r1, r1, r8, ror sp
   11f70:	andeq	r1, r1, r8, ror sp
   11f74:	andeq	r1, r1, r8, lsl #19
   11f78:	andeq	r1, r1, r8, ror sp
   11f7c:	andeq	r1, r1, r0, lsl lr
   11f80:	andeq	r1, r1, r8, ror sp
   11f84:	andeq	r1, r1, r4, ror #27
   11f88:	andeq	r1, r1, r8, ror sp
   11f8c:	andeq	r1, r1, r8, ror sp
   11f90:	andeq	r1, r1, r8, ror sp
   11f94:	andeq	r1, r1, r0, lsl lr
   11f98:	andeq	r1, r1, r0, lsl lr
   11f9c:	andeq	r1, r1, r0, lsl lr
   11fa0:	andeq	r1, r1, r0, lsl lr
   11fa4:	andeq	r1, r1, r0, lsl lr
   11fa8:	andeq	r1, r1, r0, lsl lr
   11fac:	andeq	r1, r1, r0, lsl lr
   11fb0:	andeq	r1, r1, r0, lsl lr
   11fb4:	andeq	r1, r1, r0, lsl lr
   11fb8:	andeq	r1, r1, r0, lsl lr
   11fbc:	andeq	r1, r1, r0, lsl lr
   11fc0:	andeq	r1, r1, r0, lsl lr
   11fc4:	andeq	r1, r1, r0, lsl lr
   11fc8:	andeq	r1, r1, r0, lsl lr
   11fcc:	andeq	r1, r1, r0, lsl lr
   11fd0:	andeq	r1, r1, r0, lsl lr
   11fd4:	andeq	r1, r1, r8, ror sp
   11fd8:	andeq	r1, r1, r8, ror sp
   11fdc:	andeq	r1, r1, r8, ror sp
   11fe0:	andeq	r1, r1, r8, ror sp
   11fe4:			; <UNDEFINED> instruction: 0x00011db4
   11fe8:	andeq	r1, r1, r4, ror #28
   11fec:	andeq	r1, r1, r0, lsl lr
   11ff0:	andeq	r1, r1, r0, lsl lr
   11ff4:	andeq	r1, r1, r0, lsl lr
   11ff8:	andeq	r1, r1, r0, lsl lr
   11ffc:	andeq	r1, r1, r0, lsl lr
   12000:	andeq	r1, r1, r0, lsl lr
   12004:	andeq	r1, r1, r0, lsl lr
   12008:	andeq	r1, r1, r0, lsl lr
   1200c:	andeq	r1, r1, r0, lsl lr
   12010:	andeq	r1, r1, r0, lsl lr
   12014:	andeq	r1, r1, r0, lsl lr
   12018:	andeq	r1, r1, r0, lsl lr
   1201c:	andeq	r1, r1, r0, lsl lr
   12020:	andeq	r1, r1, r0, lsl lr
   12024:	andeq	r1, r1, r0, lsl lr
   12028:	andeq	r1, r1, r0, lsl lr
   1202c:	andeq	r1, r1, r0, lsl lr
   12030:	andeq	r1, r1, r0, lsl lr
   12034:	andeq	r1, r1, r0, lsl lr
   12038:	andeq	r1, r1, r0, lsl lr
   1203c:	andeq	r1, r1, r0, lsl lr
   12040:	andeq	r1, r1, r0, lsl lr
   12044:	andeq	r1, r1, r0, lsl lr
   12048:	andeq	r1, r1, r0, lsl lr
   1204c:	andeq	r1, r1, r0, lsl lr
   12050:	andeq	r1, r1, r0, lsl lr
   12054:	andeq	r1, r1, r8, ror sp
   12058:	ldrdeq	r1, [r1], -r4
   1205c:	andeq	r1, r1, r0, lsl lr
   12060:	andeq	r1, r1, r8, ror sp
   12064:	andeq	r1, r1, r0, lsl lr
   12068:	andeq	r1, r1, r8, ror sp
   1206c:	andeq	r1, r1, r0, lsl lr
   12070:	andeq	r1, r1, r0, lsl lr
   12074:	andeq	r1, r1, r0, lsl lr
   12078:	andeq	r1, r1, r0, lsl lr
   1207c:	andeq	r1, r1, r0, lsl lr
   12080:	andeq	r1, r1, r0, lsl lr
   12084:	andeq	r1, r1, r0, lsl lr
   12088:	andeq	r1, r1, r0, lsl lr
   1208c:	andeq	r1, r1, r0, lsl lr
   12090:	andeq	r1, r1, r0, lsl lr
   12094:	andeq	r1, r1, r0, lsl lr
   12098:	andeq	r1, r1, r0, lsl lr
   1209c:	andeq	r1, r1, r0, lsl lr
   120a0:	andeq	r1, r1, r0, lsl lr
   120a4:	andeq	r1, r1, r0, lsl lr
   120a8:	andeq	r1, r1, r0, lsl lr
   120ac:	andeq	r1, r1, r0, lsl lr
   120b0:	andeq	r1, r1, r0, lsl lr
   120b4:	andeq	r1, r1, r0, lsl lr
   120b8:	andeq	r1, r1, r0, lsl lr
   120bc:	andeq	r1, r1, r0, lsl lr
   120c0:	andeq	r1, r1, r0, lsl lr
   120c4:	andeq	r1, r1, r0, lsl lr
   120c8:	andeq	r1, r1, r0, lsl lr
   120cc:	andeq	r1, r1, r0, lsl lr
   120d0:	andeq	r1, r1, r0, lsl lr
   120d4:	andeq	r1, r1, r8, ror #18
   120d8:	andeq	r1, r1, r8, ror sp
   120dc:	andeq	r1, r1, r8, ror #18
   120e0:	andeq	r1, r1, r8, lsl #19
   120e4:	mov	r3, #116	; 0x74
   120e8:	b	11bb8 <abort@plt+0xf6c>
   120ec:	ldr	r3, [sp, #160]	; 0xa0
   120f0:	cmp	r3, #0
   120f4:	beq	119c4 <abort@plt+0xd78>
   120f8:	lsr	r3, r4, #5
   120fc:	ldr	r0, [sp, #160]	; 0xa0
   12100:	uxtb	r3, r3
   12104:	and	r1, r4, #31
   12108:	ldr	r0, [r0, r3, lsl #2]
   1210c:	lsr	r3, r0, r1
   12110:	tst	r3, #1
   12114:	beq	119c4 <abort@plt+0xd78>
   12118:	ldr	r3, [sp, #28]
   1211c:	cmp	r3, #0
   12120:	beq	11b24 <abort@plt+0xed8>
   12124:	ldr	sl, [sp, #32]
   12128:	mov	r8, fp
   1212c:	b	11be8 <abort@plt+0xf9c>
   12130:	ldr	r3, [sp, #28]
   12134:	cmp	r3, #0
   12138:	bne	1268c <abort@plt+0x1a40>
   1213c:	add	sl, sl, #1
   12140:	ldr	r6, [sp, #40]	; 0x28
   12144:	mov	r5, #0
   12148:	mov	r4, #92	; 0x5c
   1214c:	b	119e0 <abort@plt+0xd94>
   12150:	cmp	r9, r8
   12154:	bne	123c4 <abort@plt+0x1778>
   12158:	ldr	r0, [sp, #100]	; 0x64
   1215c:	bl	10b08 <iswprint@plt>
   12160:	add	r5, r5, r4
   12164:	cmp	r0, #0
   12168:	add	r0, sp, #104	; 0x68
   1216c:	moveq	r6, #0
   12170:	bl	10ac0 <mbsinit@plt>
   12174:	cmp	r0, #0
   12178:	beq	12358 <abort@plt+0x170c>
   1217c:	mov	r2, r6
   12180:	mov	ip, r5
   12184:	eor	r5, r2, #1
   12188:	ldr	r4, [sp, #80]	; 0x50
   1218c:	ldr	r6, [sp, #84]	; 0x54
   12190:	ldr	r7, [sp, #88]	; 0x58
   12194:	uxtb	r5, r5
   12198:	cmp	ip, #1
   1219c:	bls	1269c <abort@plt+0x1a50>
   121a0:	ldr	r3, [sp, #44]	; 0x2c
   121a4:	and	r8, r3, r5
   121a8:	mov	r5, r2
   121ac:	uxtb	r8, r8
   121b0:	add	r2, sl, ip
   121b4:	ldr	r0, [sp, #48]	; 0x30
   121b8:	mov	r1, #0
   121bc:	str	r5, [sp, #48]	; 0x30
   121c0:	ldr	r9, [sp, #28]
   121c4:	ldr	ip, [sp, #40]	; 0x28
   121c8:	ldr	r3, [sp, #32]
   121cc:	ldr	r5, [sp, #152]	; 0x98
   121d0:	b	1228c <abort@plt+0x1640>
   121d4:	cmp	r9, #0
   121d8:	bne	125b0 <abort@plt+0x1964>
   121dc:	eor	r1, ip, #1
   121e0:	cmp	r5, #2
   121e4:	movne	r1, #0
   121e8:	andeq	r1, r1, #1
   121ec:	cmp	r1, #0
   121f0:	beq	12228 <abort@plt+0x15dc>
   121f4:	cmp	fp, r7
   121f8:	movhi	ip, #39	; 0x27
   121fc:	strbhi	ip, [r3, r7]
   12200:	add	ip, r7, #1
   12204:	cmp	fp, ip
   12208:	movhi	lr, #36	; 0x24
   1220c:	strbhi	lr, [r3, ip]
   12210:	add	ip, r7, #2
   12214:	cmp	fp, ip
   12218:	movhi	lr, #39	; 0x27
   1221c:	strbhi	lr, [r3, ip]
   12220:	add	r7, r7, #3
   12224:	mov	ip, r1
   12228:	cmp	fp, r7
   1222c:	movhi	r1, #92	; 0x5c
   12230:	strbhi	r1, [r3, r7]
   12234:	add	r1, r7, #1
   12238:	cmp	fp, r1
   1223c:	lsrhi	lr, r4, #6
   12240:	addhi	lr, lr, #48	; 0x30
   12244:	strbhi	lr, [r3, r1]
   12248:	add	lr, r7, #2
   1224c:	cmp	fp, lr
   12250:	lsrhi	r1, r4, #3
   12254:	andhi	r1, r1, #7
   12258:	addhi	r1, r1, #48	; 0x30
   1225c:	add	sl, sl, #1
   12260:	strbhi	r1, [r3, lr]
   12264:	and	r4, r4, #7
   12268:	cmp	r2, sl
   1226c:	add	r4, r4, #48	; 0x30
   12270:	add	r7, r7, #3
   12274:	bls	125d4 <abort@plt+0x1988>
   12278:	mov	r1, r8
   1227c:	cmp	fp, r7
   12280:	strbhi	r4, [r3, r7]
   12284:	ldrb	r4, [r0, #1]!
   12288:	add	r7, r7, #1
   1228c:	cmp	r8, #0
   12290:	bne	121d4 <abort@plt+0x1588>
   12294:	cmp	r6, #0
   12298:	bne	122e8 <abort@plt+0x169c>
   1229c:	eor	r6, r1, #1
   122a0:	and	r6, r6, ip
   122a4:	add	sl, sl, #1
   122a8:	cmp	r2, sl
   122ac:	uxtb	r6, r6
   122b0:	bls	12310 <abort@plt+0x16c4>
   122b4:	cmp	r6, #0
   122b8:	beq	1227c <abort@plt+0x1630>
   122bc:	cmp	fp, r7
   122c0:	movhi	ip, #39	; 0x27
   122c4:	strbhi	ip, [r3, r7]
   122c8:	add	ip, r7, #1
   122cc:	cmp	fp, ip
   122d0:	movhi	lr, #39	; 0x27
   122d4:	strbhi	lr, [r3, ip]
   122d8:	add	r7, r7, #2
   122dc:	mov	r6, r8
   122e0:	mov	ip, r8
   122e4:	b	1227c <abort@plt+0x1630>
   122e8:	cmp	fp, r7
   122ec:	eor	r6, r1, #1
   122f0:	movhi	lr, #92	; 0x5c
   122f4:	and	r6, r6, ip
   122f8:	add	sl, sl, #1
   122fc:	strbhi	lr, [r3, r7]
   12300:	cmp	r2, sl
   12304:	add	r7, r7, #1
   12308:	uxtb	r6, r6
   1230c:	bhi	122b4 <abort@plt+0x1668>
   12310:	str	ip, [sp, #40]	; 0x28
   12314:	ldr	r5, [sp, #48]	; 0x30
   12318:	b	119e0 <abort@plt+0xd94>
   1231c:	ldr	r3, [sp, #24]
   12320:	cmn	r3, #1
   12324:	mov	r3, #0
   12328:	str	r3, [sp, #104]	; 0x68
   1232c:	str	r3, [sp, #108]	; 0x6c
   12330:	beq	12650 <abort@plt+0x1a04>
   12334:	mov	r2, r5
   12338:	mov	r3, #0
   1233c:	str	r7, [sp, #88]	; 0x58
   12340:	ldr	r7, [sp, #152]	; 0x98
   12344:	str	r5, [sp, #92]	; 0x5c
   12348:	str	r6, [sp, #84]	; 0x54
   1234c:	mov	r5, r3
   12350:	mov	r6, r2
   12354:	str	r4, [sp, #80]	; 0x50
   12358:	ldr	r3, [sp, #56]	; 0x38
   1235c:	add	r9, sl, r5
   12360:	add	r8, r3, r9
   12364:	ldr	r3, [sp, #24]
   12368:	mov	r1, r8
   1236c:	sub	r2, r3, r9
   12370:	add	r0, sp, #100	; 0x64
   12374:	add	r3, sp, #104	; 0x68
   12378:	bl	13f18 <abort@plt+0x32cc>
   1237c:	subs	r4, r0, #0
   12380:	beq	12728 <abort@plt+0x1adc>
   12384:	cmn	r4, #1
   12388:	beq	12708 <abort@plt+0x1abc>
   1238c:	cmn	r4, #2
   12390:	beq	126a8 <abort@plt+0x1a5c>
   12394:	ldr	r2, [sp, #28]
   12398:	cmp	r7, #2
   1239c:	movne	r2, #0
   123a0:	andeq	r2, r2, #1
   123a4:	cmp	r2, #0
   123a8:	beq	12158 <abort@plt+0x150c>
   123ac:	cmp	r4, #1
   123b0:	beq	12158 <abort@plt+0x150c>
   123b4:	sub	r3, r4, #1
   123b8:	add	r9, r3, r9
   123bc:	ldr	r3, [sp, #56]	; 0x38
   123c0:	add	r9, r3, r9
   123c4:	ldrb	r3, [r8, #1]!
   123c8:	sub	r3, r3, #91	; 0x5b
   123cc:	cmp	r3, #33	; 0x21
   123d0:	ldrls	pc, [pc, r3, lsl #2]
   123d4:	b	12150 <abort@plt+0x1504>
   123d8:	andeq	r2, r1, r0, ror #8
   123dc:	andeq	r2, r1, r0, ror #8
   123e0:	andeq	r2, r1, r0, asr r1
   123e4:	andeq	r2, r1, r0, ror #8
   123e8:	andeq	r2, r1, r0, asr r1
   123ec:	andeq	r2, r1, r0, ror #8
   123f0:	andeq	r2, r1, r0, asr r1
   123f4:	andeq	r2, r1, r0, asr r1
   123f8:	andeq	r2, r1, r0, asr r1
   123fc:	andeq	r2, r1, r0, asr r1
   12400:	andeq	r2, r1, r0, asr r1
   12404:	andeq	r2, r1, r0, asr r1
   12408:	andeq	r2, r1, r0, asr r1
   1240c:	andeq	r2, r1, r0, asr r1
   12410:	andeq	r2, r1, r0, asr r1
   12414:	andeq	r2, r1, r0, asr r1
   12418:	andeq	r2, r1, r0, asr r1
   1241c:	andeq	r2, r1, r0, asr r1
   12420:	andeq	r2, r1, r0, asr r1
   12424:	andeq	r2, r1, r0, asr r1
   12428:	andeq	r2, r1, r0, asr r1
   1242c:	andeq	r2, r1, r0, asr r1
   12430:	andeq	r2, r1, r0, asr r1
   12434:	andeq	r2, r1, r0, asr r1
   12438:	andeq	r2, r1, r0, asr r1
   1243c:	andeq	r2, r1, r0, asr r1
   12440:	andeq	r2, r1, r0, asr r1
   12444:	andeq	r2, r1, r0, asr r1
   12448:	andeq	r2, r1, r0, asr r1
   1244c:	andeq	r2, r1, r0, asr r1
   12450:	andeq	r2, r1, r0, asr r1
   12454:	andeq	r2, r1, r0, asr r1
   12458:	andeq	r2, r1, r0, asr r1
   1245c:	andeq	r2, r1, r0, ror #8
   12460:	mov	r3, #2
   12464:	ldr	sl, [sp, #32]
   12468:	mov	r8, fp
   1246c:	str	r3, [sp, #152]	; 0x98
   12470:	b	11be8 <abort@plt+0xf9c>
   12474:	ldr	r3, [sp, #156]	; 0x9c
   12478:	tst	r3, #1
   1247c:	bne	125a8 <abort@plt+0x195c>
   12480:	ldr	r3, [sp, #152]	; 0x98
   12484:	ldr	r4, [sp, #44]	; 0x2c
   12488:	sub	r2, r3, #2
   1248c:	mov	r5, #0
   12490:	clz	r2, r2
   12494:	mov	r8, r4
   12498:	lsr	r2, r2, #5
   1249c:	b	119a8 <abort@plt+0xd5c>
   124a0:	ldr	r3, [sp, #156]	; 0x9c
   124a4:	ands	r9, r3, #4
   124a8:	beq	125e0 <abort@plt+0x1994>
   124ac:	ldr	r2, [sp, #24]
   124b0:	add	r3, sl, #2
   124b4:	cmp	r3, r2
   124b8:	bcs	124cc <abort@plt+0x1880>
   124bc:	ldr	r2, [sp, #48]	; 0x30
   124c0:	ldrb	r4, [r2, #1]
   124c4:	cmp	r4, #63	; 0x3f
   124c8:	beq	12768 <abort@plt+0x1b1c>
   124cc:	mov	r2, #0
   124d0:	mov	r8, r2
   124d4:	mov	r5, r2
   124d8:	mov	r4, #63	; 0x3f
   124dc:	b	119a8 <abort@plt+0xd5c>
   124e0:	ldr	r3, [sp, #28]
   124e4:	cmp	r3, #0
   124e8:	bne	1280c <abort@plt+0x1bc0>
   124ec:	mov	r2, r5
   124f0:	mov	r8, r3
   124f4:	mov	r5, #0
   124f8:	mov	r4, #63	; 0x3f
   124fc:	b	119a8 <abort@plt+0xd5c>
   12500:	ldr	r3, [sp, #28]
   12504:	cmp	r3, #0
   12508:	bne	1280c <abort@plt+0x1bc0>
   1250c:	ldr	r2, [sp, #72]	; 0x48
   12510:	adds	r3, fp, #0
   12514:	movne	r3, #1
   12518:	cmp	r2, #0
   1251c:	movne	r3, #0
   12520:	cmp	r3, #0
   12524:	strne	fp, [sp, #72]	; 0x48
   12528:	movne	fp, #0
   1252c:	bne	12568 <abort@plt+0x191c>
   12530:	cmp	fp, r7
   12534:	movhi	r2, #39	; 0x27
   12538:	ldrhi	r3, [sp, #32]
   1253c:	strbhi	r2, [r3, r7]
   12540:	add	r3, r7, #1
   12544:	cmp	fp, r3
   12548:	movhi	r1, #92	; 0x5c
   1254c:	ldrhi	r2, [sp, #32]
   12550:	strbhi	r1, [r2, r3]
   12554:	add	r3, r7, #2
   12558:	cmp	fp, r3
   1255c:	movhi	r1, #39	; 0x27
   12560:	ldrhi	r2, [sp, #32]
   12564:	strbhi	r1, [r2, r3]
   12568:	ldr	r3, [sp, #28]
   1256c:	add	r7, r7, #3
   12570:	mov	r2, r5
   12574:	mov	r8, r3
   12578:	str	r5, [sp, #68]	; 0x44
   1257c:	str	r3, [sp, #40]	; 0x28
   12580:	mov	r4, #39	; 0x27
   12584:	b	119a8 <abort@plt+0xd5c>
   12588:	ldr	r3, [sp, #56]	; 0x38
   1258c:	ldrb	r3, [r3, #1]
   12590:	adds	r3, r3, #0
   12594:	movne	r3, #1
   12598:	b	11980 <abort@plt+0xd34>
   1259c:	ldr	r5, [sp, #28]
   125a0:	mov	r4, #48	; 0x30
   125a4:	b	119a8 <abort@plt+0xd5c>
   125a8:	add	sl, sl, #1
   125ac:	b	114d8 <abort@plt+0x88c>
   125b0:	mov	sl, r3
   125b4:	ldr	r3, [sp, #28]
   125b8:	mov	r8, fp
   125bc:	str	r3, [sp, #44]	; 0x2c
   125c0:	ldr	r3, [sp, #152]	; 0x98
   125c4:	sub	r2, r3, #2
   125c8:	clz	r2, r2
   125cc:	lsr	r2, r2, #5
   125d0:	b	11be8 <abort@plt+0xf9c>
   125d4:	str	ip, [sp, #40]	; 0x28
   125d8:	ldr	r5, [sp, #48]	; 0x30
   125dc:	b	11a18 <abort@plt+0xdcc>
   125e0:	mov	r2, r9
   125e4:	mov	r8, r9
   125e8:	mov	r5, #0
   125ec:	mov	r4, #63	; 0x3f
   125f0:	b	119a8 <abort@plt+0xd5c>
   125f4:	cmp	fp, #0
   125f8:	beq	12670 <abort@plt+0x1a24>
   125fc:	ldr	r1, [sp, #32]
   12600:	mov	r3, #34	; 0x22
   12604:	mov	r2, #1
   12608:	strb	r3, [r1]
   1260c:	ldr	r3, [pc, #332]	; 12760 <abort@plt+0x1b14>
   12610:	str	r2, [sp, #52]	; 0x34
   12614:	mov	r7, r2
   12618:	str	r2, [sp, #44]	; 0x2c
   1261c:	str	r3, [sp, #64]	; 0x40
   12620:	b	114c8 <abort@plt+0x87c>
   12624:	ldr	r3, [pc, #300]	; 12758 <abort@plt+0x1b0c>
   12628:	str	r3, [sp, #64]	; 0x40
   1262c:	mov	r3, #0
   12630:	str	r3, [sp, #28]
   12634:	mov	r3, #1
   12638:	str	r3, [sp, #52]	; 0x34
   1263c:	mov	r7, r3
   12640:	mov	r3, #2
   12644:	str	r3, [sp, #152]	; 0x98
   12648:	b	114c8 <abort@plt+0x87c>
   1264c:	bl	10c4c <abort@plt>
   12650:	ldr	r0, [sp, #56]	; 0x38
   12654:	bl	10ba4 <strlen@plt>
   12658:	str	r0, [sp, #24]
   1265c:	b	12334 <abort@plt+0x16e8>
   12660:	mov	r5, r8
   12664:	mov	r4, #48	; 0x30
   12668:	ldr	r8, [sp, #44]	; 0x2c
   1266c:	b	119a8 <abort@plt+0xd5c>
   12670:	mov	r3, #1
   12674:	str	r3, [sp, #52]	; 0x34
   12678:	mov	r7, r3
   1267c:	str	r3, [sp, #44]	; 0x2c
   12680:	ldr	r3, [pc, #216]	; 12760 <abort@plt+0x1b14>
   12684:	str	r3, [sp, #64]	; 0x40
   12688:	b	114c8 <abort@plt+0x87c>
   1268c:	ldr	sl, [sp, #32]
   12690:	mov	r8, fp
   12694:	mov	r2, r3
   12698:	b	11be8 <abort@plt+0xf9c>
   1269c:	mov	r3, r5
   126a0:	mov	r5, r2
   126a4:	b	11ea0 <abort@plt+0x1254>
   126a8:	ldr	r1, [sp, #24]
   126ac:	mov	r2, r5
   126b0:	cmp	r1, r9
   126b4:	mov	ip, r5
   126b8:	ldr	r4, [sp, #80]	; 0x50
   126bc:	ldr	r5, [sp, #92]	; 0x5c
   126c0:	ldr	r6, [sp, #84]	; 0x54
   126c4:	ldr	r7, [sp, #88]	; 0x58
   126c8:	bls	126fc <abort@plt+0x1ab0>
   126cc:	ldrb	r3, [r8]
   126d0:	cmp	r3, #0
   126d4:	bne	126e8 <abort@plt+0x1a9c>
   126d8:	b	12700 <abort@plt+0x1ab4>
   126dc:	ldrb	r3, [r8, #1]!
   126e0:	cmp	r3, #0
   126e4:	beq	12800 <abort@plt+0x1bb4>
   126e8:	add	r2, r2, #1
   126ec:	add	r3, sl, r2
   126f0:	cmp	r1, r3
   126f4:	bhi	126dc <abort@plt+0x1a90>
   126f8:	mov	ip, r2
   126fc:	mov	r3, #0
   12700:	mov	r2, r3
   12704:	b	12198 <abort@plt+0x154c>
   12708:	mov	r3, #0
   1270c:	mov	ip, r5
   12710:	ldr	r4, [sp, #80]	; 0x50
   12714:	ldr	r5, [sp, #92]	; 0x5c
   12718:	ldr	r6, [sp, #84]	; 0x54
   1271c:	ldr	r7, [sp, #88]	; 0x58
   12720:	mov	r2, r3
   12724:	b	12198 <abort@plt+0x154c>
   12728:	mov	r3, r6
   1272c:	mov	ip, r5
   12730:	eor	r5, r3, #1
   12734:	mov	r2, r6
   12738:	ldr	r4, [sp, #80]	; 0x50
   1273c:	ldr	r6, [sp, #84]	; 0x54
   12740:	ldr	r7, [sp, #88]	; 0x58
   12744:	uxtb	r5, r5
   12748:	b	12198 <abort@plt+0x154c>
   1274c:	ldr	sl, [sp, #32]
   12750:	mov	r8, fp
   12754:	b	125bc <abort@plt+0x1970>
   12758:	ldrdeq	r4, [r1], -r0
   1275c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12760:	andeq	r4, r1, ip, asr #19
   12764:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12768:	ldr	r2, [sp, #56]	; 0x38
   1276c:	ldrb	r1, [r2, r3]
   12770:	sub	r2, r1, #33	; 0x21
   12774:	uxtb	r2, r2
   12778:	cmp	r2, #29
   1277c:	bhi	1281c <abort@plt+0x1bd0>
   12780:	ldr	r0, [pc, #-36]	; 12764 <abort@plt+0x1b18>
   12784:	mov	ip, #1
   12788:	ands	r2, r0, ip, lsl r2
   1278c:	beq	1282c <abort@plt+0x1be0>
   12790:	ldr	r2, [sp, #28]
   12794:	cmp	r2, #0
   12798:	bne	1292c <abort@plt+0x1ce0>
   1279c:	cmp	fp, r7
   127a0:	ldr	r8, [sp, #28]
   127a4:	ldrhi	r2, [sp, #32]
   127a8:	mov	sl, r3
   127ac:	mov	r5, r8
   127b0:	strbhi	r4, [r2, r7]
   127b4:	add	r2, r7, #1
   127b8:	cmp	fp, r2
   127bc:	movhi	r0, #34	; 0x22
   127c0:	ldrhi	ip, [sp, #32]
   127c4:	mov	r4, r1
   127c8:	strbhi	r0, [ip, r2]
   127cc:	add	r2, r7, #2
   127d0:	cmp	fp, r2
   127d4:	movhi	r0, #34	; 0x22
   127d8:	ldrhi	ip, [sp, #32]
   127dc:	strbhi	r0, [ip, r2]
   127e0:	add	r2, r7, #3
   127e4:	cmp	fp, r2
   127e8:	movhi	r0, #63	; 0x3f
   127ec:	ldrhi	ip, [sp, #32]
   127f0:	add	r7, r7, #4
   127f4:	strbhi	r0, [ip, r2]
   127f8:	mov	r2, r8
   127fc:	b	119a8 <abort@plt+0xd5c>
   12800:	mov	ip, r2
   12804:	mov	r2, r3
   12808:	b	12198 <abort@plt+0x154c>
   1280c:	ldr	sl, [sp, #32]
   12810:	mov	r8, fp
   12814:	ldr	r2, [sp, #28]
   12818:	b	11be8 <abort@plt+0xf9c>
   1281c:	mov	r2, #0
   12820:	mov	r8, r2
   12824:	mov	r5, r2
   12828:	b	119a8 <abort@plt+0xd5c>
   1282c:	mov	r8, r2
   12830:	mov	r5, #0
   12834:	b	119a8 <abort@plt+0xd5c>
   12838:	ldr	r1, [sp, #152]	; 0x98
   1283c:	bl	11304 <abort@plt+0x6b8>
   12840:	str	r0, [sp, #168]	; 0xa8
   12844:	b	11864 <abort@plt+0xc18>
   12848:	ldr	r1, [sp, #152]	; 0x98
   1284c:	bl	11304 <abort@plt+0x6b8>
   12850:	str	r0, [sp, #164]	; 0xa4
   12854:	b	11844 <abort@plt+0xbf8>
   12858:	ldr	r7, [sp, #28]
   1285c:	b	118a4 <abort@plt+0xc58>
   12860:	ldr	sl, [sp, #32]
   12864:	ldr	r2, [sp, #68]	; 0x44
   12868:	mov	r8, fp
   1286c:	mov	fp, r7
   12870:	ldr	r3, [sp, #64]	; 0x40
   12874:	cmp	r3, #0
   12878:	moveq	r2, #0
   1287c:	andne	r2, r2, #1
   12880:	cmp	r2, #0
   12884:	beq	128b0 <abort@plt+0x1c64>
   12888:	mov	r2, r3
   1288c:	ldrb	r3, [r3]
   12890:	cmp	r3, #0
   12894:	beq	128b0 <abort@plt+0x1c64>
   12898:	cmp	r8, fp
   1289c:	strbhi	r3, [sl, fp]
   128a0:	ldrb	r3, [r2, #1]!
   128a4:	add	fp, fp, #1
   128a8:	cmp	r3, #0
   128ac:	bne	12898 <abort@plt+0x1c4c>
   128b0:	cmp	r8, fp
   128b4:	movhi	r3, #0
   128b8:	strbhi	r3, [sl, fp]
   128bc:	b	11c44 <abort@plt+0xff8>
   128c0:	ldr	r3, [sp, #168]	; 0xa8
   128c4:	ldr	sl, [sp, #32]
   128c8:	str	r3, [sp, #16]
   128cc:	ldr	r3, [sp, #164]	; 0xa4
   128d0:	mov	ip, #5
   128d4:	str	r3, [sp, #12]
   128d8:	ldr	r3, [sp, #160]	; 0xa0
   128dc:	ldr	r2, [sp, #56]	; 0x38
   128e0:	str	r3, [sp, #8]
   128e4:	ldr	r3, [sp, #156]	; 0x9c
   128e8:	ldr	r1, [sp, #72]	; 0x48
   128ec:	str	r3, [sp, #4]
   128f0:	mov	r0, sl
   128f4:	ldr	r3, [sp, #24]
   128f8:	str	ip, [sp]
   128fc:	bl	11424 <abort@plt+0x7d8>
   12900:	mov	fp, r0
   12904:	b	11c44 <abort@plt+0xff8>
   12908:	mov	r8, fp
   1290c:	ldr	sl, [sp, #32]
   12910:	mov	fp, r7
   12914:	mov	r2, r3
   12918:	b	12870 <abort@plt+0x1c24>
   1291c:	mov	r8, fp
   12920:	ldr	sl, [sp, #32]
   12924:	mov	fp, r7
   12928:	b	12870 <abort@plt+0x1c24>
   1292c:	ldr	sl, [sp, #32]
   12930:	mov	r8, fp
   12934:	b	11c00 <abort@plt+0xfb4>
   12938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1293c:	sub	sp, sp, #52	; 0x34
   12940:	mov	r4, r0
   12944:	mov	r5, r3
   12948:	mov	sl, r1
   1294c:	mov	fp, r2
   12950:	bl	10bb0 <__errno_location@plt>
   12954:	ldr	r7, [pc, #412]	; 12af8 <abort@plt+0x1eac>
   12958:	cmn	r4, #-2147483647	; 0x80000001
   1295c:	ldr	r6, [r7]
   12960:	mov	r8, r0
   12964:	movne	r0, #0
   12968:	moveq	r0, #1
   1296c:	ldr	r3, [r8]
   12970:	orrs	r0, r0, r4, lsr #31
   12974:	str	r3, [sp, #24]
   12978:	bne	12af4 <abort@plt+0x1ea8>
   1297c:	ldr	r2, [r7, #4]
   12980:	cmp	r4, r2
   12984:	blt	129e4 <abort@plt+0x1d98>
   12988:	add	r9, r7, #8
   1298c:	cmp	r6, r9
   12990:	str	r2, [sp, #44]	; 0x2c
   12994:	beq	12ac4 <abort@plt+0x1e78>
   12998:	mov	r3, #8
   1299c:	sub	r2, r4, r2
   129a0:	mov	r0, r6
   129a4:	str	r3, [sp]
   129a8:	add	r2, r2, #1
   129ac:	mvn	r3, #-2147483648	; 0x80000000
   129b0:	add	r1, sp, #44	; 0x2c
   129b4:	bl	137a4 <abort@plt+0x2b58>
   129b8:	mov	r6, r0
   129bc:	str	r0, [r7]
   129c0:	ldr	r0, [r7, #4]
   129c4:	ldr	r2, [sp, #44]	; 0x2c
   129c8:	mov	r1, #0
   129cc:	sub	r2, r2, r0
   129d0:	add	r0, r6, r0, lsl #3
   129d4:	lsl	r2, r2, #3
   129d8:	bl	10bc8 <memset@plt>
   129dc:	ldr	r3, [sp, #44]	; 0x2c
   129e0:	str	r3, [r7, #4]
   129e4:	add	r3, r6, r4, lsl #3
   129e8:	ldr	r1, [r5, #4]
   129ec:	ldr	r7, [r3, #4]
   129f0:	ldr	r9, [r6, r4, lsl #3]
   129f4:	ldr	r2, [r5, #40]	; 0x28
   129f8:	ldr	ip, [r5, #44]	; 0x2c
   129fc:	add	r0, r5, #8
   12a00:	str	r3, [sp, #28]
   12a04:	ldr	r3, [r5]
   12a08:	orr	r1, r1, #1
   12a0c:	mov	lr, r0
   12a10:	str	r1, [sp, #32]
   12a14:	str	r0, [sp, #36]	; 0x24
   12a18:	str	r1, [sp, #4]
   12a1c:	str	r2, [sp, #12]
   12a20:	str	r3, [sp]
   12a24:	mov	r0, r7
   12a28:	mov	r1, r9
   12a2c:	str	ip, [sp, #16]
   12a30:	str	lr, [sp, #8]
   12a34:	mov	r3, fp
   12a38:	mov	r2, sl
   12a3c:	bl	11424 <abort@plt+0x7d8>
   12a40:	cmp	r9, r0
   12a44:	bhi	12ab0 <abort@plt+0x1e64>
   12a48:	ldr	r3, [pc, #172]	; 12afc <abort@plt+0x1eb0>
   12a4c:	add	r9, r0, #1
   12a50:	cmp	r7, r3
   12a54:	str	r9, [r6, r4, lsl #3]
   12a58:	beq	12a64 <abort@plt+0x1e18>
   12a5c:	mov	r0, r7
   12a60:	bl	13dec <abort@plt+0x31a0>
   12a64:	mov	r0, r9
   12a68:	bl	13640 <abort@plt+0x29f4>
   12a6c:	ldr	lr, [sp, #28]
   12a70:	ldr	ip, [r5, #44]	; 0x2c
   12a74:	ldr	r4, [r5, #40]	; 0x28
   12a78:	mov	r3, fp
   12a7c:	mov	r2, sl
   12a80:	mov	r1, r9
   12a84:	str	r0, [lr, #4]
   12a88:	ldr	lr, [r5]
   12a8c:	ldr	r5, [sp, #36]	; 0x24
   12a90:	str	ip, [sp, #16]
   12a94:	str	r5, [sp, #8]
   12a98:	ldr	r5, [sp, #32]
   12a9c:	str	r4, [sp, #12]
   12aa0:	str	r5, [sp, #4]
   12aa4:	str	lr, [sp]
   12aa8:	mov	r7, r0
   12aac:	bl	11424 <abort@plt+0x7d8>
   12ab0:	ldr	r3, [sp, #24]
   12ab4:	mov	r0, r7
   12ab8:	str	r3, [r8]
   12abc:	add	sp, sp, #52	; 0x34
   12ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ac4:	mov	r3, #8
   12ac8:	sub	r2, r4, r2
   12acc:	str	r3, [sp]
   12ad0:	add	r1, sp, #44	; 0x2c
   12ad4:	add	r2, r2, #1
   12ad8:	mvn	r3, #-2147483648	; 0x80000000
   12adc:	bl	137a4 <abort@plt+0x2b58>
   12ae0:	mov	r6, r0
   12ae4:	ldm	r9, {r0, r1}
   12ae8:	str	r6, [r7]
   12aec:	stm	r6, {r0, r1}
   12af0:	b	129c0 <abort@plt+0x1d74>
   12af4:	bl	10c4c <abort@plt>
   12af8:	andeq	r5, r2, r8, asr #1
   12afc:	andeq	r5, r2, r8, lsr #2
   12b00:	push	{r4, r5, r6, lr}
   12b04:	mov	r5, r0
   12b08:	bl	10bb0 <__errno_location@plt>
   12b0c:	cmp	r5, #0
   12b10:	mov	r1, #48	; 0x30
   12b14:	mov	r4, r0
   12b18:	ldr	r0, [pc, #16]	; 12b30 <abort@plt+0x1ee4>
   12b1c:	ldr	r6, [r4]
   12b20:	movne	r0, r5
   12b24:	bl	13aa0 <abort@plt+0x2e54>
   12b28:	str	r6, [r4]
   12b2c:	pop	{r4, r5, r6, pc}
   12b30:	andeq	r5, r2, r8, lsr #4
   12b34:	ldr	r3, [pc, #12]	; 12b48 <abort@plt+0x1efc>
   12b38:	cmp	r0, #0
   12b3c:	moveq	r0, r3
   12b40:	ldr	r0, [r0]
   12b44:	bx	lr
   12b48:	andeq	r5, r2, r8, lsr #4
   12b4c:	ldr	r3, [pc, #12]	; 12b60 <abort@plt+0x1f14>
   12b50:	cmp	r0, #0
   12b54:	moveq	r0, r3
   12b58:	str	r1, [r0]
   12b5c:	bx	lr
   12b60:	andeq	r5, r2, r8, lsr #4
   12b64:	ldr	r3, [pc, #52]	; 12ba0 <abort@plt+0x1f54>
   12b68:	cmp	r0, #0
   12b6c:	moveq	r0, r3
   12b70:	add	r3, r0, #8
   12b74:	push	{lr}		; (str lr, [sp, #-4]!)
   12b78:	lsr	lr, r1, #5
   12b7c:	and	r1, r1, #31
   12b80:	ldr	ip, [r3, lr, lsl #2]
   12b84:	lsr	r0, ip, r1
   12b88:	eor	r2, r2, r0
   12b8c:	and	r2, r2, #1
   12b90:	and	r0, r0, #1
   12b94:	eor	r1, ip, r2, lsl r1
   12b98:	str	r1, [r3, lr, lsl #2]
   12b9c:	pop	{pc}		; (ldr pc, [sp], #4)
   12ba0:	andeq	r5, r2, r8, lsr #4
   12ba4:	ldr	r3, [pc, #16]	; 12bbc <abort@plt+0x1f70>
   12ba8:	cmp	r0, #0
   12bac:	movne	r3, r0
   12bb0:	ldr	r0, [r3, #4]
   12bb4:	str	r1, [r3, #4]
   12bb8:	bx	lr
   12bbc:	andeq	r5, r2, r8, lsr #4
   12bc0:	ldr	r3, [pc, #44]	; 12bf4 <abort@plt+0x1fa8>
   12bc4:	cmp	r0, #0
   12bc8:	moveq	r0, r3
   12bcc:	mov	ip, #10
   12bd0:	cmp	r2, #0
   12bd4:	cmpne	r1, #0
   12bd8:	str	ip, [r0]
   12bdc:	beq	12bec <abort@plt+0x1fa0>
   12be0:	str	r1, [r0, #40]	; 0x28
   12be4:	str	r2, [r0, #44]	; 0x2c
   12be8:	bx	lr
   12bec:	push	{r4, lr}
   12bf0:	bl	10c4c <abort@plt>
   12bf4:	andeq	r5, r2, r8, lsr #4
   12bf8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12bfc:	sub	sp, sp, #24
   12c00:	ldr	ip, [pc, #108]	; 12c74 <abort@plt+0x2028>
   12c04:	ldr	r4, [sp, #56]	; 0x38
   12c08:	mov	r9, r2
   12c0c:	cmp	r4, #0
   12c10:	moveq	r4, ip
   12c14:	mov	sl, r3
   12c18:	mov	r7, r0
   12c1c:	mov	r8, r1
   12c20:	bl	10bb0 <__errno_location@plt>
   12c24:	ldr	r3, [r4, #44]	; 0x2c
   12c28:	mov	r1, r8
   12c2c:	ldr	r6, [r0]
   12c30:	str	r3, [sp, #16]
   12c34:	ldr	r2, [r4, #40]	; 0x28
   12c38:	add	r3, r4, #8
   12c3c:	str	r3, [sp, #8]
   12c40:	str	r2, [sp, #12]
   12c44:	ldr	r2, [r4, #4]
   12c48:	mov	r5, r0
   12c4c:	str	r2, [sp, #4]
   12c50:	ldr	ip, [r4]
   12c54:	mov	r3, sl
   12c58:	mov	r2, r9
   12c5c:	mov	r0, r7
   12c60:	str	ip, [sp]
   12c64:	bl	11424 <abort@plt+0x7d8>
   12c68:	str	r6, [r5]
   12c6c:	add	sp, sp, #24
   12c70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c74:	andeq	r5, r2, r8, lsr #4
   12c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c7c:	cmp	r3, #0
   12c80:	sub	sp, sp, #44	; 0x2c
   12c84:	ldr	r4, [pc, #192]	; 12d4c <abort@plt+0x2100>
   12c88:	mov	r6, r2
   12c8c:	movne	r4, r3
   12c90:	mov	r9, r1
   12c94:	mov	r8, r0
   12c98:	bl	10bb0 <__errno_location@plt>
   12c9c:	ldr	r3, [r4, #44]	; 0x2c
   12ca0:	ldr	r5, [r4, #4]
   12ca4:	add	sl, r4, #8
   12ca8:	cmp	r6, #0
   12cac:	orreq	r5, r5, #1
   12cb0:	mov	r1, #0
   12cb4:	ldr	r2, [r0]
   12cb8:	str	r3, [sp, #16]
   12cbc:	ldr	r3, [r4, #40]	; 0x28
   12cc0:	stmib	sp, {r5, sl}
   12cc4:	str	r3, [sp, #12]
   12cc8:	ldr	r3, [r4]
   12ccc:	mov	r7, r0
   12cd0:	str	r2, [sp, #28]
   12cd4:	str	r3, [sp]
   12cd8:	mov	r2, r8
   12cdc:	mov	r3, r9
   12ce0:	mov	r0, r1
   12ce4:	bl	11424 <abort@plt+0x7d8>
   12ce8:	add	r1, r0, #1
   12cec:	mov	fp, r0
   12cf0:	mov	r0, r1
   12cf4:	str	r1, [sp, #36]	; 0x24
   12cf8:	bl	13640 <abort@plt+0x29f4>
   12cfc:	ldr	r3, [r4, #44]	; 0x2c
   12d00:	mov	r2, r8
   12d04:	str	r3, [sp, #16]
   12d08:	ldr	r3, [r4, #40]	; 0x28
   12d0c:	str	r5, [sp, #4]
   12d10:	str	r3, [sp, #12]
   12d14:	str	sl, [sp, #8]
   12d18:	ldr	ip, [r4]
   12d1c:	ldr	r1, [sp, #36]	; 0x24
   12d20:	mov	r3, r9
   12d24:	str	ip, [sp]
   12d28:	str	r0, [sp, #32]
   12d2c:	bl	11424 <abort@plt+0x7d8>
   12d30:	ldr	r2, [sp, #28]
   12d34:	cmp	r6, #0
   12d38:	str	r2, [r7]
   12d3c:	ldr	r0, [sp, #32]
   12d40:	strne	fp, [r6]
   12d44:	add	sp, sp, #44	; 0x2c
   12d48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d4c:	andeq	r5, r2, r8, lsr #4
   12d50:	mov	r3, r2
   12d54:	mov	r2, #0
   12d58:	b	12c78 <abort@plt+0x202c>
   12d5c:	push	{r4, r5, r6, r7, r8, lr}
   12d60:	ldr	r6, [pc, #116]	; 12ddc <abort@plt+0x2190>
   12d64:	ldr	r3, [r6, #4]
   12d68:	ldr	r7, [r6]
   12d6c:	cmp	r3, #1
   12d70:	movgt	r5, r7
   12d74:	movgt	r4, #1
   12d78:	ble	12d98 <abort@plt+0x214c>
   12d7c:	ldr	r0, [r5, #12]
   12d80:	bl	13dec <abort@plt+0x31a0>
   12d84:	ldr	r3, [r6, #4]
   12d88:	add	r4, r4, #1
   12d8c:	cmp	r3, r4
   12d90:	add	r5, r5, #8
   12d94:	bgt	12d7c <abort@plt+0x2130>
   12d98:	ldr	r0, [r7, #4]
   12d9c:	ldr	r4, [pc, #60]	; 12de0 <abort@plt+0x2194>
   12da0:	cmp	r0, r4
   12da4:	beq	12db8 <abort@plt+0x216c>
   12da8:	bl	13dec <abort@plt+0x31a0>
   12dac:	mov	r3, #256	; 0x100
   12db0:	str	r4, [r6, #12]
   12db4:	str	r3, [r6, #8]
   12db8:	ldr	r4, [pc, #36]	; 12de4 <abort@plt+0x2198>
   12dbc:	cmp	r7, r4
   12dc0:	beq	12dd0 <abort@plt+0x2184>
   12dc4:	mov	r0, r7
   12dc8:	bl	13dec <abort@plt+0x31a0>
   12dcc:	str	r4, [r6]
   12dd0:	mov	r3, #1
   12dd4:	str	r3, [r6, #4]
   12dd8:	pop	{r4, r5, r6, r7, r8, pc}
   12ddc:	andeq	r5, r2, r8, asr #1
   12de0:	andeq	r5, r2, r8, lsr #2
   12de4:	ldrdeq	r5, [r2], -r0
   12de8:	ldr	r3, [pc, #4]	; 12df4 <abort@plt+0x21a8>
   12dec:	mvn	r2, #0
   12df0:	b	12938 <abort@plt+0x1cec>
   12df4:	andeq	r5, r2, r8, lsr #4
   12df8:	ldr	r3, [pc]	; 12e00 <abort@plt+0x21b4>
   12dfc:	b	12938 <abort@plt+0x1cec>
   12e00:	andeq	r5, r2, r8, lsr #4
   12e04:	mov	r1, r0
   12e08:	ldr	r3, [pc, #8]	; 12e18 <abort@plt+0x21cc>
   12e0c:	mvn	r2, #0
   12e10:	mov	r0, #0
   12e14:	b	12938 <abort@plt+0x1cec>
   12e18:	andeq	r5, r2, r8, lsr #4
   12e1c:	mov	r2, r1
   12e20:	ldr	r3, [pc, #8]	; 12e30 <abort@plt+0x21e4>
   12e24:	mov	r1, r0
   12e28:	mov	r0, #0
   12e2c:	b	12938 <abort@plt+0x1cec>
   12e30:	andeq	r5, r2, r8, lsr #4
   12e34:	push	{r4, r5, lr}
   12e38:	sub	sp, sp, #52	; 0x34
   12e3c:	mov	r5, r2
   12e40:	mov	r4, r0
   12e44:	mov	r0, sp
   12e48:	bl	112d4 <abort@plt+0x688>
   12e4c:	mov	r3, sp
   12e50:	mov	r1, r5
   12e54:	mov	r0, r4
   12e58:	mvn	r2, #0
   12e5c:	bl	12938 <abort@plt+0x1cec>
   12e60:	add	sp, sp, #52	; 0x34
   12e64:	pop	{r4, r5, pc}
   12e68:	push	{r4, r5, r6, lr}
   12e6c:	sub	sp, sp, #48	; 0x30
   12e70:	mov	r5, r2
   12e74:	mov	r6, r3
   12e78:	mov	r4, r0
   12e7c:	mov	r0, sp
   12e80:	bl	112d4 <abort@plt+0x688>
   12e84:	mov	r3, sp
   12e88:	mov	r2, r6
   12e8c:	mov	r1, r5
   12e90:	mov	r0, r4
   12e94:	bl	12938 <abort@plt+0x1cec>
   12e98:	add	sp, sp, #48	; 0x30
   12e9c:	pop	{r4, r5, r6, pc}
   12ea0:	mov	r2, r1
   12ea4:	mov	r1, r0
   12ea8:	mov	r0, #0
   12eac:	b	12e34 <abort@plt+0x21e8>
   12eb0:	mov	r3, r2
   12eb4:	mov	r2, r1
   12eb8:	mov	r1, r0
   12ebc:	mov	r0, #0
   12ec0:	b	12e68 <abort@plt+0x221c>
   12ec4:	push	{r4, r5, r6, r7, r8, lr}
   12ec8:	mov	r7, r0
   12ecc:	ldr	lr, [pc, #100]	; 12f38 <abort@plt+0x22ec>
   12ed0:	mov	r8, r1
   12ed4:	mov	r4, r2
   12ed8:	ldm	lr!, {r0, r1, r2, r3}
   12edc:	sub	sp, sp, #48	; 0x30
   12ee0:	mov	ip, sp
   12ee4:	lsr	r5, r4, #5
   12ee8:	stmia	ip!, {r0, r1, r2, r3}
   12eec:	add	r6, sp, #8
   12ef0:	ldm	lr!, {r0, r1, r2, r3}
   12ef4:	and	r4, r4, #31
   12ef8:	stmia	ip!, {r0, r1, r2, r3}
   12efc:	ldm	lr, {r0, r1, r2, r3}
   12f00:	stm	ip, {r0, r1, r2, r3}
   12f04:	mov	r2, r8
   12f08:	ldr	lr, [r6, r5, lsl #2]
   12f0c:	mov	r1, r7
   12f10:	mov	r3, sp
   12f14:	lsr	ip, lr, r4
   12f18:	eor	ip, ip, #1
   12f1c:	and	ip, ip, #1
   12f20:	mov	r0, #0
   12f24:	eor	r4, lr, ip, lsl r4
   12f28:	str	r4, [r6, r5, lsl #2]
   12f2c:	bl	12938 <abort@plt+0x1cec>
   12f30:	add	sp, sp, #48	; 0x30
   12f34:	pop	{r4, r5, r6, r7, r8, pc}
   12f38:	andeq	r5, r2, r8, lsr #4
   12f3c:	mov	r2, r1
   12f40:	mvn	r1, #0
   12f44:	b	12ec4 <abort@plt+0x2278>
   12f48:	mov	r2, #58	; 0x3a
   12f4c:	mvn	r1, #0
   12f50:	b	12ec4 <abort@plt+0x2278>
   12f54:	mov	r2, #58	; 0x3a
   12f58:	b	12ec4 <abort@plt+0x2278>
   12f5c:	push	{r4, r5, r6, r7, lr}
   12f60:	sub	sp, sp, #100	; 0x64
   12f64:	mov	r6, r0
   12f68:	mov	r0, sp
   12f6c:	mov	r7, r2
   12f70:	bl	112d4 <abort@plt+0x688>
   12f74:	mov	ip, sp
   12f78:	add	lr, sp, #48	; 0x30
   12f7c:	ldm	ip!, {r0, r1, r2, r3}
   12f80:	stmia	lr!, {r0, r1, r2, r3}
   12f84:	ldm	ip!, {r0, r1, r2, r3}
   12f88:	ldr	r5, [sp, #60]	; 0x3c
   12f8c:	stmia	lr!, {r0, r1, r2, r3}
   12f90:	mvn	r4, r5
   12f94:	ldm	ip, {r0, r1, r2, r3}
   12f98:	and	ip, r4, #67108864	; 0x4000000
   12f9c:	eor	ip, ip, r5
   12fa0:	str	ip, [sp, #60]	; 0x3c
   12fa4:	stm	lr, {r0, r1, r2, r3}
   12fa8:	mov	r1, r7
   12fac:	mov	r0, r6
   12fb0:	add	r3, sp, #48	; 0x30
   12fb4:	mvn	r2, #0
   12fb8:	bl	12938 <abort@plt+0x1cec>
   12fbc:	add	sp, sp, #100	; 0x64
   12fc0:	pop	{r4, r5, r6, r7, pc}
   12fc4:	push	{r4, r5, r6, r7, r8, lr}
   12fc8:	mov	r5, r1
   12fcc:	ldr	lr, [pc, #100]	; 13038 <abort@plt+0x23ec>
   12fd0:	mov	r4, r2
   12fd4:	mov	r7, r0
   12fd8:	mov	r8, r3
   12fdc:	ldm	lr!, {r0, r1, r2, r3}
   12fe0:	sub	sp, sp, #48	; 0x30
   12fe4:	mov	ip, sp
   12fe8:	mov	r6, #10
   12fec:	stmia	ip!, {r0, r1, r2, r3}
   12ff0:	cmp	r4, #0
   12ff4:	cmpne	r5, #0
   12ff8:	ldm	lr!, {r0, r1, r2, r3}
   12ffc:	str	r6, [sp]
   13000:	stmia	ip!, {r0, r1, r2, r3}
   13004:	ldm	lr, {r0, r1, r2, r3}
   13008:	stm	ip, {r0, r1, r2, r3}
   1300c:	beq	13034 <abort@plt+0x23e8>
   13010:	mov	r3, sp
   13014:	mov	r1, r8
   13018:	mov	r0, r7
   1301c:	ldr	r2, [sp, #72]	; 0x48
   13020:	str	r5, [sp, #40]	; 0x28
   13024:	str	r4, [sp, #44]	; 0x2c
   13028:	bl	12938 <abort@plt+0x1cec>
   1302c:	add	sp, sp, #48	; 0x30
   13030:	pop	{r4, r5, r6, r7, r8, pc}
   13034:	bl	10c4c <abort@plt>
   13038:	andeq	r5, r2, r8, lsr #4
   1303c:	push	{lr}		; (str lr, [sp, #-4]!)
   13040:	sub	sp, sp, #12
   13044:	mvn	ip, #0
   13048:	str	ip, [sp]
   1304c:	bl	12fc4 <abort@plt+0x2378>
   13050:	add	sp, sp, #12
   13054:	pop	{pc}		; (ldr pc, [sp], #4)
   13058:	push	{lr}		; (str lr, [sp, #-4]!)
   1305c:	sub	sp, sp, #12
   13060:	mvn	ip, #0
   13064:	mov	r3, r2
   13068:	str	ip, [sp]
   1306c:	mov	r2, r1
   13070:	mov	r1, r0
   13074:	mov	r0, #0
   13078:	bl	12fc4 <abort@plt+0x2378>
   1307c:	add	sp, sp, #12
   13080:	pop	{pc}		; (ldr pc, [sp], #4)
   13084:	push	{lr}		; (str lr, [sp, #-4]!)
   13088:	sub	sp, sp, #12
   1308c:	str	r3, [sp]
   13090:	mov	r3, r2
   13094:	mov	r2, r1
   13098:	mov	r1, r0
   1309c:	mov	r0, #0
   130a0:	bl	12fc4 <abort@plt+0x2378>
   130a4:	add	sp, sp, #12
   130a8:	pop	{pc}		; (ldr pc, [sp], #4)
   130ac:	ldr	r3, [pc]	; 130b4 <abort@plt+0x2468>
   130b0:	b	12938 <abort@plt+0x1cec>
   130b4:	ldrdeq	r5, [r2], -r8
   130b8:	mov	r2, r1
   130bc:	ldr	r3, [pc, #8]	; 130cc <abort@plt+0x2480>
   130c0:	mov	r1, r0
   130c4:	mov	r0, #0
   130c8:	b	12938 <abort@plt+0x1cec>
   130cc:	ldrdeq	r5, [r2], -r8
   130d0:	ldr	r3, [pc, #4]	; 130dc <abort@plt+0x2490>
   130d4:	mvn	r2, #0
   130d8:	b	12938 <abort@plt+0x1cec>
   130dc:	ldrdeq	r5, [r2], -r8
   130e0:	mov	r1, r0
   130e4:	ldr	r3, [pc, #8]	; 130f4 <abort@plt+0x24a8>
   130e8:	mvn	r2, #0
   130ec:	mov	r0, #0
   130f0:	b	12938 <abort@plt+0x1cec>
   130f4:	ldrdeq	r5, [r2], -r8
   130f8:	push	{r4, r5, r6, lr}
   130fc:	sub	sp, sp, #32
   13100:	cmp	r1, #0
   13104:	mov	r4, r0
   13108:	ldr	r5, [sp, #48]	; 0x30
   1310c:	ldr	r6, [sp, #52]	; 0x34
   13110:	beq	13428 <abort@plt+0x27dc>
   13114:	stm	sp, {r2, r3}
   13118:	mov	r3, r1
   1311c:	ldr	r2, [pc, #808]	; 1344c <abort@plt+0x2800>
   13120:	mov	r1, #1
   13124:	bl	10bec <__fprintf_chk@plt>
   13128:	mov	r2, #5
   1312c:	ldr	r1, [pc, #796]	; 13450 <abort@plt+0x2804>
   13130:	mov	r0, #0
   13134:	bl	10ae4 <dcgettext@plt>
   13138:	ldr	r3, [pc, #788]	; 13454 <abort@plt+0x2808>
   1313c:	ldr	r2, [pc, #788]	; 13458 <abort@plt+0x280c>
   13140:	str	r3, [sp]
   13144:	mov	r1, #1
   13148:	mov	r3, r0
   1314c:	mov	r0, r4
   13150:	bl	10bec <__fprintf_chk@plt>
   13154:	mov	r1, r4
   13158:	mov	r0, #10
   1315c:	bl	10ad8 <fputc_unlocked@plt>
   13160:	mov	r2, #5
   13164:	ldr	r1, [pc, #752]	; 1345c <abort@plt+0x2810>
   13168:	mov	r0, #0
   1316c:	bl	10ae4 <dcgettext@plt>
   13170:	mov	r1, #1
   13174:	ldr	r3, [pc, #740]	; 13460 <abort@plt+0x2814>
   13178:	mov	r2, r0
   1317c:	mov	r0, r4
   13180:	bl	10bec <__fprintf_chk@plt>
   13184:	mov	r1, r4
   13188:	mov	r0, #10
   1318c:	bl	10ad8 <fputc_unlocked@plt>
   13190:	cmp	r6, #9
   13194:	ldrls	pc, [pc, r6, lsl #2]
   13198:	b	13440 <abort@plt+0x27f4>
   1319c:	andeq	r3, r1, r0, lsr #4
   131a0:	andeq	r3, r1, r8, lsr #4
   131a4:	andeq	r3, r1, r4, asr r2
   131a8:	andeq	r3, r1, r8, lsl #5
   131ac:	andeq	r3, r1, r4, asr #5
   131b0:	andeq	r3, r1, r0, lsl #6
   131b4:	andeq	r3, r1, ip, lsr r3
   131b8:	andeq	r3, r1, r0, lsl #7
   131bc:	ldrdeq	r3, [r1], -r0
   131c0:	andeq	r3, r1, r4, asr #3
   131c4:	ldr	r1, [pc, #664]	; 13464 <abort@plt+0x2818>
   131c8:	mov	r2, #5
   131cc:	mov	r0, #0
   131d0:	bl	10ae4 <dcgettext@plt>
   131d4:	ldr	ip, [r5, #32]
   131d8:	ldr	r1, [r5, #28]
   131dc:	ldr	r2, [r5, #24]
   131e0:	ldr	r3, [r5]
   131e4:	ldr	r6, [r5, #20]
   131e8:	str	ip, [sp, #28]
   131ec:	ldr	lr, [r5, #16]
   131f0:	str	r1, [sp, #24]
   131f4:	ldr	ip, [r5, #12]
   131f8:	str	r2, [sp, #20]
   131fc:	ldr	r1, [r5, #8]
   13200:	ldr	r2, [r5, #4]
   13204:	str	r6, [sp, #16]
   13208:	stmib	sp, {r1, ip, lr}
   1320c:	mov	r1, #1
   13210:	str	r2, [sp]
   13214:	mov	r2, r0
   13218:	mov	r0, r4
   1321c:	bl	10bec <__fprintf_chk@plt>
   13220:	add	sp, sp, #32
   13224:	pop	{r4, r5, r6, pc}
   13228:	mov	r2, #5
   1322c:	ldr	r1, [pc, #564]	; 13468 <abort@plt+0x281c>
   13230:	mov	r0, #0
   13234:	bl	10ae4 <dcgettext@plt>
   13238:	ldr	r3, [r5]
   1323c:	mov	r1, #1
   13240:	mov	r2, r0
   13244:	mov	r0, r4
   13248:	add	sp, sp, #32
   1324c:	pop	{r4, r5, r6, lr}
   13250:	b	10bec <__fprintf_chk@plt>
   13254:	mov	r2, #5
   13258:	ldr	r1, [pc, #524]	; 1346c <abort@plt+0x2820>
   1325c:	mov	r0, #0
   13260:	bl	10ae4 <dcgettext@plt>
   13264:	ldr	r2, [r5, #4]
   13268:	ldr	r3, [r5]
   1326c:	mov	r1, #1
   13270:	str	r2, [sp, #48]	; 0x30
   13274:	mov	r2, r0
   13278:	mov	r0, r4
   1327c:	add	sp, sp, #32
   13280:	pop	{r4, r5, r6, lr}
   13284:	b	10bec <__fprintf_chk@plt>
   13288:	mov	r2, #5
   1328c:	ldr	r1, [pc, #476]	; 13470 <abort@plt+0x2824>
   13290:	mov	r0, #0
   13294:	bl	10ae4 <dcgettext@plt>
   13298:	ldr	r1, [r5, #8]
   1329c:	ldr	r2, [r5, #4]
   132a0:	ldr	r3, [r5]
   132a4:	str	r1, [sp, #52]	; 0x34
   132a8:	str	r2, [sp, #48]	; 0x30
   132ac:	mov	r1, #1
   132b0:	mov	r2, r0
   132b4:	mov	r0, r4
   132b8:	add	sp, sp, #32
   132bc:	pop	{r4, r5, r6, lr}
   132c0:	b	10bec <__fprintf_chk@plt>
   132c4:	mov	r2, #5
   132c8:	ldr	r1, [pc, #420]	; 13474 <abort@plt+0x2828>
   132cc:	mov	r0, #0
   132d0:	bl	10ae4 <dcgettext@plt>
   132d4:	ldr	r1, [r5, #8]
   132d8:	ldr	ip, [r5, #12]
   132dc:	ldr	r2, [r5, #4]
   132e0:	ldr	r3, [r5]
   132e4:	stmib	sp, {r1, ip}
   132e8:	str	r2, [sp]
   132ec:	mov	r1, #1
   132f0:	mov	r2, r0
   132f4:	mov	r0, r4
   132f8:	bl	10bec <__fprintf_chk@plt>
   132fc:	b	13220 <abort@plt+0x25d4>
   13300:	mov	r2, #5
   13304:	ldr	r1, [pc, #364]	; 13478 <abort@plt+0x282c>
   13308:	mov	r0, #0
   1330c:	bl	10ae4 <dcgettext@plt>
   13310:	add	r1, r5, #8
   13314:	ldr	r2, [r5, #4]
   13318:	ldm	r1, {r1, ip, lr}
   1331c:	ldr	r3, [r5]
   13320:	str	r2, [sp]
   13324:	stmib	sp, {r1, ip, lr}
   13328:	mov	r1, #1
   1332c:	mov	r2, r0
   13330:	mov	r0, r4
   13334:	bl	10bec <__fprintf_chk@plt>
   13338:	b	13220 <abort@plt+0x25d4>
   1333c:	mov	r2, #5
   13340:	ldr	r1, [pc, #308]	; 1347c <abort@plt+0x2830>
   13344:	mov	r0, #0
   13348:	bl	10ae4 <dcgettext@plt>
   1334c:	add	r1, r5, #8
   13350:	ldr	r2, [r5, #4]
   13354:	ldm	r1, {r1, ip, lr}
   13358:	ldr	r6, [r5, #20]
   1335c:	ldr	r3, [r5]
   13360:	stmib	sp, {r1, ip, lr}
   13364:	mov	r1, #1
   13368:	str	r2, [sp]
   1336c:	str	r6, [sp, #16]
   13370:	mov	r2, r0
   13374:	mov	r0, r4
   13378:	bl	10bec <__fprintf_chk@plt>
   1337c:	b	13220 <abort@plt+0x25d4>
   13380:	mov	r2, #5
   13384:	ldr	r1, [pc, #244]	; 13480 <abort@plt+0x2834>
   13388:	mov	r0, #0
   1338c:	bl	10ae4 <dcgettext@plt>
   13390:	ldr	r2, [r5, #24]
   13394:	ldr	r3, [r5]
   13398:	ldr	r6, [r5, #20]
   1339c:	ldr	lr, [r5, #16]
   133a0:	ldr	ip, [r5, #12]
   133a4:	str	r2, [sp, #20]
   133a8:	ldr	r1, [r5, #8]
   133ac:	ldr	r2, [r5, #4]
   133b0:	str	r6, [sp, #16]
   133b4:	stmib	sp, {r1, ip, lr}
   133b8:	mov	r1, #1
   133bc:	str	r2, [sp]
   133c0:	mov	r2, r0
   133c4:	mov	r0, r4
   133c8:	bl	10bec <__fprintf_chk@plt>
   133cc:	b	13220 <abort@plt+0x25d4>
   133d0:	mov	r2, #5
   133d4:	ldr	r1, [pc, #168]	; 13484 <abort@plt+0x2838>
   133d8:	mov	r0, #0
   133dc:	bl	10ae4 <dcgettext@plt>
   133e0:	ldr	r1, [r5, #28]
   133e4:	ldr	r2, [r5, #24]
   133e8:	ldr	r3, [r5]
   133ec:	ldr	r6, [r5, #20]
   133f0:	ldr	lr, [r5, #16]
   133f4:	str	r1, [sp, #24]
   133f8:	ldr	ip, [r5, #12]
   133fc:	str	r2, [sp, #20]
   13400:	ldr	r1, [r5, #8]
   13404:	ldr	r2, [r5, #4]
   13408:	str	r6, [sp, #16]
   1340c:	stmib	sp, {r1, ip, lr}
   13410:	mov	r1, #1
   13414:	str	r2, [sp]
   13418:	mov	r2, r0
   1341c:	mov	r0, r4
   13420:	bl	10bec <__fprintf_chk@plt>
   13424:	b	13220 <abort@plt+0x25d4>
   13428:	str	r3, [sp]
   1342c:	mov	r1, #1
   13430:	mov	r3, r2
   13434:	ldr	r2, [pc, #76]	; 13488 <abort@plt+0x283c>
   13438:	bl	10bec <__fprintf_chk@plt>
   1343c:	b	13128 <abort@plt+0x24dc>
   13440:	mov	r2, #5
   13444:	ldr	r1, [pc, #64]	; 1348c <abort@plt+0x2840>
   13448:	b	131cc <abort@plt+0x2580>
   1344c:	andeq	r4, r1, r0, asr #20
   13450:	andeq	r4, r1, r4, asr sl
   13454:	andeq	r0, r0, r6, ror #15
   13458:	andeq	r4, r1, ip, lsr #26
   1345c:	andeq	r4, r1, r8, asr sl
   13460:	andeq	r4, r1, r4, lsl #22
   13464:	andeq	r4, r1, r4, lsr ip
   13468:	andeq	r4, r1, r8, lsr #22
   1346c:	andeq	r4, r1, r8, lsr fp
   13470:	andeq	r4, r1, r0, asr fp
   13474:	andeq	r4, r1, ip, ror #22
   13478:	andeq	r4, r1, ip, lsl #23
   1347c:			; <UNDEFINED> instruction: 0x00014bb0
   13480:	ldrdeq	r4, [r1], -r8
   13484:	andeq	r4, r1, r4, lsl #24
   13488:	andeq	r4, r1, ip, asr #20
   1348c:	andeq	r4, r1, r8, ror #24
   13490:	push	{r4, r5, lr}
   13494:	sub	sp, sp, #12
   13498:	ldr	r5, [sp, #24]
   1349c:	ldr	ip, [r5]
   134a0:	cmp	ip, #0
   134a4:	beq	134c0 <abort@plt+0x2874>
   134a8:	mov	lr, r5
   134ac:	mov	ip, #0
   134b0:	ldr	r4, [lr, #4]!
   134b4:	add	ip, ip, #1
   134b8:	cmp	r4, #0
   134bc:	bne	134b0 <abort@plt+0x2864>
   134c0:	stm	sp, {r5, ip}
   134c4:	bl	130f8 <abort@plt+0x24ac>
   134c8:	add	sp, sp, #12
   134cc:	pop	{r4, r5, pc}
   134d0:	push	{r4, r5, lr}
   134d4:	sub	sp, sp, #52	; 0x34
   134d8:	add	r5, sp, #4
   134dc:	ldr	r4, [sp, #64]	; 0x40
   134e0:	mov	ip, #0
   134e4:	sub	r4, r4, #4
   134e8:	ldr	lr, [r4, #4]!
   134ec:	cmp	lr, #0
   134f0:	str	lr, [r5, #4]!
   134f4:	beq	13504 <abort@plt+0x28b8>
   134f8:	add	ip, ip, #1
   134fc:	cmp	ip, #10
   13500:	bne	134e8 <abort@plt+0x289c>
   13504:	add	lr, sp, #8
   13508:	str	ip, [sp, #4]
   1350c:	str	lr, [sp]
   13510:	bl	130f8 <abort@plt+0x24ac>
   13514:	add	sp, sp, #52	; 0x34
   13518:	pop	{r4, r5, pc}
   1351c:	push	{r3}		; (str r3, [sp, #-4]!)
   13520:	push	{r4, lr}
   13524:	sub	sp, sp, #60	; 0x3c
   13528:	add	lr, sp, #56	; 0x38
   1352c:	add	r3, sp, #72	; 0x48
   13530:	str	r3, [lr, #-44]!	; 0xffffffd4
   13534:	add	r4, sp, #68	; 0x44
   13538:	mov	r3, #0
   1353c:	ldr	ip, [r4, #4]!
   13540:	cmp	ip, #0
   13544:	str	ip, [lr, #4]!
   13548:	beq	13558 <abort@plt+0x290c>
   1354c:	add	r3, r3, #1
   13550:	cmp	r3, #10
   13554:	bne	1353c <abort@plt+0x28f0>
   13558:	add	ip, sp, #16
   1355c:	str	r3, [sp, #4]
   13560:	str	ip, [sp]
   13564:	ldr	r3, [sp, #68]	; 0x44
   13568:	bl	130f8 <abort@plt+0x24ac>
   1356c:	add	sp, sp, #60	; 0x3c
   13570:	pop	{r4, lr}
   13574:	add	sp, sp, #4
   13578:	bx	lr
   1357c:	ldr	r3, [pc, #116]	; 135f8 <abort@plt+0x29ac>
   13580:	push	{r4, lr}
   13584:	mov	r0, #10
   13588:	ldr	r1, [r3]
   1358c:	bl	10ad8 <fputc_unlocked@plt>
   13590:	mov	r2, #5
   13594:	ldr	r1, [pc, #96]	; 135fc <abort@plt+0x29b0>
   13598:	mov	r0, #0
   1359c:	bl	10ae4 <dcgettext@plt>
   135a0:	ldr	r2, [pc, #88]	; 13600 <abort@plt+0x29b4>
   135a4:	mov	r1, r0
   135a8:	mov	r0, #1
   135ac:	bl	10bd4 <__printf_chk@plt>
   135b0:	mov	r2, #5
   135b4:	ldr	r1, [pc, #72]	; 13604 <abort@plt+0x29b8>
   135b8:	mov	r0, #0
   135bc:	bl	10ae4 <dcgettext@plt>
   135c0:	ldr	r3, [pc, #64]	; 13608 <abort@plt+0x29bc>
   135c4:	ldr	r2, [pc, #64]	; 1360c <abort@plt+0x29c0>
   135c8:	mov	r1, r0
   135cc:	mov	r0, #1
   135d0:	bl	10bd4 <__printf_chk@plt>
   135d4:	mov	r2, #5
   135d8:	ldr	r1, [pc, #48]	; 13610 <abort@plt+0x29c4>
   135dc:	mov	r0, #0
   135e0:	bl	10ae4 <dcgettext@plt>
   135e4:	ldr	r2, [pc, #40]	; 13614 <abort@plt+0x29c8>
   135e8:	pop	{r4, lr}
   135ec:	mov	r1, r0
   135f0:	mov	r0, #1
   135f4:	b	10bd4 <__printf_chk@plt>
   135f8:	andeq	r5, r2, r4, lsl r1
   135fc:	andeq	r4, r1, r4, lsr #25
   13600:			; <UNDEFINED> instruction: 0x00014cb8
   13604:	ldrdeq	r4, [r1], -r0
   13608:	andeq	r4, r1, r4, lsl #15
   1360c:	andeq	r4, r1, ip, lsr #15
   13610:	andeq	r4, r1, r4, ror #25
   13614:	andeq	r4, r1, ip, lsl #26
   13618:	push	{r4, lr}
   1361c:	bl	13be8 <abort@plt+0x2f9c>
   13620:	cmp	r0, #0
   13624:	popne	{r4, pc}
   13628:	bl	13b60 <abort@plt+0x2f14>
   1362c:	push	{r4, lr}
   13630:	bl	13be8 <abort@plt+0x2f9c>
   13634:	cmp	r0, #0
   13638:	popne	{r4, pc}
   1363c:	bl	13b60 <abort@plt+0x2f14>
   13640:	push	{r4, lr}
   13644:	bl	13be8 <abort@plt+0x2f9c>
   13648:	cmp	r0, #0
   1364c:	popne	{r4, pc}
   13650:	bl	13b60 <abort@plt+0x2f14>
   13654:	push	{r4, r5, r6, lr}
   13658:	mov	r5, r0
   1365c:	mov	r4, r1
   13660:	bl	13c14 <abort@plt+0x2fc8>
   13664:	cmp	r0, #0
   13668:	popne	{r4, r5, r6, pc}
   1366c:	adds	r4, r4, #0
   13670:	movne	r4, #1
   13674:	cmp	r5, #0
   13678:	orreq	r4, r4, #1
   1367c:	cmp	r4, #0
   13680:	popeq	{r4, r5, r6, pc}
   13684:	bl	13b60 <abort@plt+0x2f14>
   13688:	push	{r4, lr}
   1368c:	cmp	r1, #0
   13690:	orreq	r1, r1, #1
   13694:	bl	13c14 <abort@plt+0x2fc8>
   13698:	cmp	r0, #0
   1369c:	popne	{r4, pc}
   136a0:	bl	13b60 <abort@plt+0x2f14>
   136a4:	push	{r4, r5, r6, lr}
   136a8:	mov	r6, r0
   136ac:	mov	r5, r1
   136b0:	mov	r4, r2
   136b4:	bl	13f6c <abort@plt+0x3320>
   136b8:	cmp	r0, #0
   136bc:	popne	{r4, r5, r6, pc}
   136c0:	cmp	r6, #0
   136c4:	beq	136d4 <abort@plt+0x2a88>
   136c8:	cmp	r5, #0
   136cc:	cmpne	r4, #0
   136d0:	popeq	{r4, r5, r6, pc}
   136d4:	bl	13b60 <abort@plt+0x2f14>
   136d8:	b	136a4 <abort@plt+0x2a58>
   136dc:	cmp	r2, #0
   136e0:	cmpne	r1, #0
   136e4:	moveq	r2, #1
   136e8:	moveq	r1, r2
   136ec:	push	{r4, lr}
   136f0:	bl	13f6c <abort@plt+0x3320>
   136f4:	cmp	r0, #0
   136f8:	popne	{r4, pc}
   136fc:	bl	13b60 <abort@plt+0x2f14>
   13700:	mov	r2, r1
   13704:	mov	r1, r0
   13708:	mov	r0, #0
   1370c:	b	136a4 <abort@plt+0x2a58>
   13710:	mov	r2, r1
   13714:	mov	r1, r0
   13718:	mov	r0, #0
   1371c:	b	136dc <abort@plt+0x2a90>
   13720:	push	{r4, r5, r6, lr}
   13724:	subs	r6, r0, #0
   13728:	sub	sp, sp, #8
   1372c:	mov	r5, r1
   13730:	ldr	r4, [r1]
   13734:	beq	13770 <abort@plt+0x2b24>
   13738:	lsr	r1, r4, #1
   1373c:	add	r3, r1, #1
   13740:	mvn	r3, r3
   13744:	cmp	r4, r3
   13748:	bhi	1376c <abort@plt+0x2b20>
   1374c:	add	r4, r4, #1
   13750:	add	r4, r4, r1
   13754:	mov	r0, r6
   13758:	mov	r1, r4
   1375c:	bl	136a4 <abort@plt+0x2a58>
   13760:	str	r4, [r5]
   13764:	add	sp, sp, #8
   13768:	pop	{r4, r5, r6, pc}
   1376c:	bl	13b60 <abort@plt+0x2f14>
   13770:	cmp	r4, #0
   13774:	bne	13754 <abort@plt+0x2b08>
   13778:	mov	r1, r2
   1377c:	mov	r0, #64	; 0x40
   13780:	str	r2, [sp, #4]
   13784:	bl	140ac <abort@plt+0x3460>
   13788:	ldr	r2, [sp, #4]
   1378c:	cmp	r0, #0
   13790:	movne	r4, r0
   13794:	addeq	r4, r0, #1
   13798:	b	13754 <abort@plt+0x2b08>
   1379c:	mov	r2, #1
   137a0:	b	13720 <abort@plt+0x2ad4>
   137a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137a8:	sub	sp, sp, #12
   137ac:	ldr	r6, [r1]
   137b0:	mov	sl, r1
   137b4:	mov	r9, r0
   137b8:	asrs	r4, r6, #1
   137bc:	mov	r5, r2
   137c0:	mov	fp, r3
   137c4:	ldr	r7, [sp, #48]	; 0x30
   137c8:	bmi	13934 <abort@plt+0x2ce8>
   137cc:	mvn	r3, #-2147483648	; 0x80000000
   137d0:	sub	r3, r3, r4
   137d4:	cmp	r6, r3
   137d8:	movle	r3, #0
   137dc:	movgt	r3, #1
   137e0:	mvn	r8, fp
   137e4:	cmp	r3, #0
   137e8:	addeq	r4, r4, r6
   137ec:	mvnne	r4, #-2147483648	; 0x80000000
   137f0:	lsr	r8, r8, #31
   137f4:	cmp	fp, r4
   137f8:	movge	r3, #0
   137fc:	andlt	r3, r8, #1
   13800:	cmp	r3, #0
   13804:	beq	138ec <abort@plt+0x2ca0>
   13808:	cmp	r7, #0
   1380c:	blt	139bc <abort@plt+0x2d70>
   13810:	bne	139b4 <abort@plt+0x2d68>
   13814:	mov	r2, #64	; 0x40
   13818:	mov	r1, r7
   1381c:	mov	r0, r2
   13820:	str	r2, [sp, #4]
   13824:	bl	142b8 <abort@plt+0x366c>
   13828:	ldr	r2, [sp, #4]
   1382c:	mov	r1, r7
   13830:	mov	r4, r0
   13834:	mov	r0, r2
   13838:	bl	144d8 <abort@plt+0x388c>
   1383c:	ldr	r2, [sp, #4]
   13840:	sub	r1, r2, r1
   13844:	cmp	r9, #0
   13848:	sub	r3, r4, r6
   1384c:	streq	r9, [sl]
   13850:	cmp	r3, r5
   13854:	bge	138d8 <abort@plt+0x2c8c>
   13858:	cmp	r5, #0
   1385c:	blt	13948 <abort@plt+0x2cfc>
   13860:	cmp	r6, #0
   13864:	blt	13884 <abort@plt+0x2c38>
   13868:	mvn	r3, #-2147483648	; 0x80000000
   1386c:	sub	r3, r3, r5
   13870:	cmp	r6, r3
   13874:	movle	r3, #0
   13878:	movgt	r3, #1
   1387c:	cmp	r3, #0
   13880:	bne	13a44 <abort@plt+0x2df8>
   13884:	add	r5, r6, r5
   13888:	cmp	fp, r5
   1388c:	movge	r8, #0
   13890:	andlt	r8, r8, #1
   13894:	cmp	r8, #0
   13898:	mov	r4, r5
   1389c:	bne	13a44 <abort@plt+0x2df8>
   138a0:	cmp	r7, #0
   138a4:	blt	1395c <abort@plt+0x2d10>
   138a8:	beq	138d4 <abort@plt+0x2c88>
   138ac:	cmp	r5, #0
   138b0:	blt	13a04 <abort@plt+0x2db8>
   138b4:	mov	r1, r7
   138b8:	mvn	r0, #-2147483648	; 0x80000000
   138bc:	bl	142b8 <abort@plt+0x366c>
   138c0:	cmp	r5, r0
   138c4:	movle	r0, #0
   138c8:	movgt	r0, #1
   138cc:	cmp	r0, #0
   138d0:	bne	13a44 <abort@plt+0x2df8>
   138d4:	mul	r1, r5, r7
   138d8:	mov	r0, r9
   138dc:	bl	13654 <abort@plt+0x2a08>
   138e0:	str	r4, [sl]
   138e4:	add	sp, sp, #12
   138e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138ec:	cmp	r7, #0
   138f0:	blt	13988 <abort@plt+0x2d3c>
   138f4:	beq	13814 <abort@plt+0x2bc8>
   138f8:	cmp	r4, #0
   138fc:	blt	139c4 <abort@plt+0x2d78>
   13900:	mov	r1, r7
   13904:	mvn	r0, #-2147483648	; 0x80000000
   13908:	bl	142b8 <abort@plt+0x366c>
   1390c:	cmp	r0, r4
   13910:	movge	r0, #0
   13914:	movlt	r0, #1
   13918:	cmp	r0, #0
   1391c:	mvnne	r2, #-2147483648	; 0x80000000
   13920:	bne	13818 <abort@plt+0x2bcc>
   13924:	mul	r1, r7, r4
   13928:	cmp	r1, #63	; 0x3f
   1392c:	bgt	13844 <abort@plt+0x2bf8>
   13930:	b	13814 <abort@plt+0x2bc8>
   13934:	rsb	r3, r4, #-2147483648	; 0x80000000
   13938:	cmp	r6, r3
   1393c:	movge	r3, #0
   13940:	movlt	r3, #1
   13944:	b	137e0 <abort@plt+0x2b94>
   13948:	rsb	r3, r5, #-2147483648	; 0x80000000
   1394c:	cmp	r6, r3
   13950:	movge	r3, #0
   13954:	movlt	r3, #1
   13958:	b	1387c <abort@plt+0x2c30>
   1395c:	cmp	r5, #0
   13960:	blt	139e8 <abort@plt+0x2d9c>
   13964:	cmn	r7, #1
   13968:	beq	138d4 <abort@plt+0x2c88>
   1396c:	mov	r1, r7
   13970:	mov	r0, #-2147483648	; 0x80000000
   13974:	bl	142b8 <abort@plt+0x366c>
   13978:	cmp	r5, r0
   1397c:	movle	r0, #0
   13980:	movgt	r0, #1
   13984:	b	138cc <abort@plt+0x2c80>
   13988:	cmp	r4, #0
   1398c:	blt	13a28 <abort@plt+0x2ddc>
   13990:	cmn	r7, #1
   13994:	beq	13924 <abort@plt+0x2cd8>
   13998:	mov	r1, r7
   1399c:	mov	r0, #-2147483648	; 0x80000000
   139a0:	bl	142b8 <abort@plt+0x366c>
   139a4:	cmp	r0, r4
   139a8:	movge	r0, #0
   139ac:	movlt	r0, #1
   139b0:	b	13918 <abort@plt+0x2ccc>
   139b4:	mov	r4, fp
   139b8:	b	13900 <abort@plt+0x2cb4>
   139bc:	mov	r4, fp
   139c0:	b	13990 <abort@plt+0x2d44>
   139c4:	cmn	r4, #1
   139c8:	beq	13924 <abort@plt+0x2cd8>
   139cc:	mov	r1, r4
   139d0:	mov	r0, #-2147483648	; 0x80000000
   139d4:	bl	142b8 <abort@plt+0x366c>
   139d8:	cmp	r7, r0
   139dc:	movle	r0, #0
   139e0:	movgt	r0, #1
   139e4:	b	13918 <abort@plt+0x2ccc>
   139e8:	mov	r1, r7
   139ec:	mvn	r0, #-2147483648	; 0x80000000
   139f0:	bl	142b8 <abort@plt+0x366c>
   139f4:	cmp	r5, r0
   139f8:	movge	r0, #0
   139fc:	movlt	r0, #1
   13a00:	b	138cc <abort@plt+0x2c80>
   13a04:	cmn	r5, #1
   13a08:	beq	138d4 <abort@plt+0x2c88>
   13a0c:	mov	r1, r5
   13a10:	mov	r0, #-2147483648	; 0x80000000
   13a14:	bl	142b8 <abort@plt+0x366c>
   13a18:	cmp	r7, r0
   13a1c:	movle	r0, #0
   13a20:	movgt	r0, #1
   13a24:	b	138cc <abort@plt+0x2c80>
   13a28:	mov	r1, r7
   13a2c:	mvn	r0, #-2147483648	; 0x80000000
   13a30:	bl	142b8 <abort@plt+0x366c>
   13a34:	cmp	r0, r4
   13a38:	movle	r0, #0
   13a3c:	movgt	r0, #1
   13a40:	b	13918 <abort@plt+0x2ccc>
   13a44:	bl	13b60 <abort@plt+0x2f14>
   13a48:	push	{r4, lr}
   13a4c:	mov	r1, #1
   13a50:	bl	13ba0 <abort@plt+0x2f54>
   13a54:	cmp	r0, #0
   13a58:	popne	{r4, pc}
   13a5c:	bl	13b60 <abort@plt+0x2f14>
   13a60:	push	{r4, lr}
   13a64:	mov	r1, #1
   13a68:	bl	13ba0 <abort@plt+0x2f54>
   13a6c:	cmp	r0, #0
   13a70:	popne	{r4, pc}
   13a74:	bl	13b60 <abort@plt+0x2f14>
   13a78:	push	{r4, lr}
   13a7c:	bl	13ba0 <abort@plt+0x2f54>
   13a80:	cmp	r0, #0
   13a84:	popne	{r4, pc}
   13a88:	bl	13b60 <abort@plt+0x2f14>
   13a8c:	push	{r4, lr}
   13a90:	bl	13ba0 <abort@plt+0x2f54>
   13a94:	cmp	r0, #0
   13a98:	popne	{r4, pc}
   13a9c:	bl	13b60 <abort@plt+0x2f14>
   13aa0:	push	{r4, r5, r6, lr}
   13aa4:	mov	r6, r0
   13aa8:	mov	r0, r1
   13aac:	mov	r4, r1
   13ab0:	bl	13be8 <abort@plt+0x2f9c>
   13ab4:	subs	r5, r0, #0
   13ab8:	beq	13ad0 <abort@plt+0x2e84>
   13abc:	mov	r2, r4
   13ac0:	mov	r1, r6
   13ac4:	bl	10ab4 <memcpy@plt>
   13ac8:	mov	r0, r5
   13acc:	pop	{r4, r5, r6, pc}
   13ad0:	bl	13b60 <abort@plt+0x2f14>
   13ad4:	push	{r4, r5, r6, lr}
   13ad8:	mov	r6, r0
   13adc:	mov	r0, r1
   13ae0:	mov	r4, r1
   13ae4:	bl	13be8 <abort@plt+0x2f9c>
   13ae8:	subs	r5, r0, #0
   13aec:	beq	13b04 <abort@plt+0x2eb8>
   13af0:	mov	r2, r4
   13af4:	mov	r1, r6
   13af8:	bl	10ab4 <memcpy@plt>
   13afc:	mov	r0, r5
   13b00:	pop	{r4, r5, r6, pc}
   13b04:	bl	13b60 <abort@plt+0x2f14>
   13b08:	push	{r4, r5, r6, lr}
   13b0c:	mov	r6, r0
   13b10:	add	r0, r1, #1
   13b14:	mov	r4, r1
   13b18:	bl	13be8 <abort@plt+0x2f9c>
   13b1c:	subs	r5, r0, #0
   13b20:	beq	13b40 <abort@plt+0x2ef4>
   13b24:	mov	r3, #0
   13b28:	mov	r1, r6
   13b2c:	strb	r3, [r5, r4]
   13b30:	mov	r2, r4
   13b34:	bl	10ab4 <memcpy@plt>
   13b38:	mov	r0, r5
   13b3c:	pop	{r4, r5, r6, pc}
   13b40:	bl	13b60 <abort@plt+0x2f14>
   13b44:	push	{r4, lr}
   13b48:	mov	r4, r0
   13b4c:	bl	10ba4 <strlen@plt>
   13b50:	add	r1, r0, #1
   13b54:	mov	r0, r4
   13b58:	pop	{r4, lr}
   13b5c:	b	13aa0 <abort@plt+0x2e54>
   13b60:	ldr	r3, [pc, #44]	; 13b94 <abort@plt+0x2f48>
   13b64:	push	{r4, lr}
   13b68:	mov	r2, #5
   13b6c:	ldr	r1, [pc, #36]	; 13b98 <abort@plt+0x2f4c>
   13b70:	mov	r0, #0
   13b74:	ldr	r4, [r3]
   13b78:	bl	10ae4 <dcgettext@plt>
   13b7c:	ldr	r2, [pc, #24]	; 13b9c <abort@plt+0x2f50>
   13b80:	mov	r1, #0
   13b84:	mov	r3, r0
   13b88:	mov	r0, r4
   13b8c:	bl	10b50 <error@plt>
   13b90:	bl	10c4c <abort@plt>
   13b94:	andeq	r5, r2, r4, asr #1
   13b98:	andeq	r4, r1, ip, asr sp
   13b9c:	andeq	r4, r1, r0, lsr #18
   13ba0:	cmp	r1, #0
   13ba4:	cmpne	r0, #0
   13ba8:	moveq	r1, #1
   13bac:	moveq	r0, r1
   13bb0:	umull	r2, r3, r0, r1
   13bb4:	adds	r3, r3, #0
   13bb8:	movne	r3, #1
   13bbc:	cmp	r2, #0
   13bc0:	blt	13bd0 <abort@plt+0x2f84>
   13bc4:	cmp	r3, #0
   13bc8:	bne	13bd0 <abort@plt+0x2f84>
   13bcc:	b	10a60 <calloc@plt>
   13bd0:	push	{r4, lr}
   13bd4:	bl	10bb0 <__errno_location@plt>
   13bd8:	mov	r3, #12
   13bdc:	str	r3, [r0]
   13be0:	mov	r0, #0
   13be4:	pop	{r4, pc}
   13be8:	cmp	r0, #0
   13bec:	moveq	r0, #1
   13bf0:	cmp	r0, #0
   13bf4:	blt	13bfc <abort@plt+0x2fb0>
   13bf8:	b	10b5c <malloc@plt>
   13bfc:	push	{r4, lr}
   13c00:	bl	10bb0 <__errno_location@plt>
   13c04:	mov	r3, #12
   13c08:	str	r3, [r0]
   13c0c:	mov	r0, #0
   13c10:	pop	{r4, pc}
   13c14:	cmp	r0, #0
   13c18:	beq	13c3c <abort@plt+0x2ff0>
   13c1c:	cmp	r1, #0
   13c20:	push	{lr}		; (str lr, [sp, #-4]!)
   13c24:	sub	sp, sp, #12
   13c28:	beq	13c44 <abort@plt+0x2ff8>
   13c2c:	blt	13c5c <abort@plt+0x3010>
   13c30:	add	sp, sp, #12
   13c34:	pop	{lr}		; (ldr lr, [sp], #4)
   13c38:	b	10af0 <realloc@plt>
   13c3c:	mov	r0, r1
   13c40:	b	13be8 <abort@plt+0x2f9c>
   13c44:	str	r1, [sp, #4]
   13c48:	bl	13dec <abort@plt+0x31a0>
   13c4c:	ldr	r3, [sp, #4]
   13c50:	mov	r0, r3
   13c54:	add	sp, sp, #12
   13c58:	pop	{pc}		; (ldr pc, [sp], #4)
   13c5c:	bl	10bb0 <__errno_location@plt>
   13c60:	mov	r2, #12
   13c64:	mov	r3, #0
   13c68:	str	r2, [r0]
   13c6c:	b	13c50 <abort@plt+0x3004>
   13c70:	push	{r4, r5, r6, lr}
   13c74:	mov	r4, r0
   13c78:	bl	10b38 <__fpending@plt>
   13c7c:	ldr	r5, [r4]
   13c80:	and	r5, r5, #32
   13c84:	mov	r6, r0
   13c88:	mov	r0, r4
   13c8c:	bl	13cec <abort@plt+0x30a0>
   13c90:	cmp	r5, #0
   13c94:	mov	r4, r0
   13c98:	bne	13cb8 <abort@plt+0x306c>
   13c9c:	cmp	r0, #0
   13ca0:	beq	13cb0 <abort@plt+0x3064>
   13ca4:	cmp	r6, #0
   13ca8:	beq	13cd4 <abort@plt+0x3088>
   13cac:	mvn	r4, #0
   13cb0:	mov	r0, r4
   13cb4:	pop	{r4, r5, r6, pc}
   13cb8:	cmp	r0, #0
   13cbc:	bne	13cac <abort@plt+0x3060>
   13cc0:	bl	10bb0 <__errno_location@plt>
   13cc4:	str	r4, [r0]
   13cc8:	mvn	r4, #0
   13ccc:	mov	r0, r4
   13cd0:	pop	{r4, r5, r6, pc}
   13cd4:	bl	10bb0 <__errno_location@plt>
   13cd8:	ldr	r4, [r0]
   13cdc:	subs	r4, r4, #9
   13ce0:	mvnne	r4, #0
   13ce4:	mov	r0, r4
   13ce8:	pop	{r4, r5, r6, pc}
   13cec:	push	{r4, r5, lr}
   13cf0:	sub	sp, sp, #12
   13cf4:	mov	r4, r0
   13cf8:	bl	10be0 <fileno@plt>
   13cfc:	cmp	r0, #0
   13d00:	mov	r0, r4
   13d04:	blt	13d80 <abort@plt+0x3134>
   13d08:	bl	10b74 <__freading@plt>
   13d0c:	cmp	r0, #0
   13d10:	bne	13d4c <abort@plt+0x3100>
   13d14:	mov	r0, r4
   13d18:	bl	13d8c <abort@plt+0x3140>
   13d1c:	cmp	r0, #0
   13d20:	beq	13d7c <abort@plt+0x3130>
   13d24:	bl	10bb0 <__errno_location@plt>
   13d28:	mov	r5, r0
   13d2c:	mov	r0, r4
   13d30:	ldr	r4, [r5]
   13d34:	bl	10bf8 <fclose@plt>
   13d38:	cmp	r4, #0
   13d3c:	mvnne	r0, #0
   13d40:	strne	r4, [r5]
   13d44:	add	sp, sp, #12
   13d48:	pop	{r4, r5, pc}
   13d4c:	mov	r0, r4
   13d50:	bl	10be0 <fileno@plt>
   13d54:	mov	r3, #1
   13d58:	str	r3, [sp]
   13d5c:	mov	r2, #0
   13d60:	mov	r3, #0
   13d64:	bl	10b20 <lseek64@plt>
   13d68:	mvn	r3, #0
   13d6c:	mvn	r2, #0
   13d70:	cmp	r1, r3
   13d74:	cmpeq	r0, r2
   13d78:	bne	13d14 <abort@plt+0x30c8>
   13d7c:	mov	r0, r4
   13d80:	add	sp, sp, #12
   13d84:	pop	{r4, r5, lr}
   13d88:	b	10bf8 <fclose@plt>
   13d8c:	push	{r4, lr}
   13d90:	subs	r4, r0, #0
   13d94:	sub	sp, sp, #8
   13d98:	beq	13db4 <abort@plt+0x3168>
   13d9c:	bl	10b74 <__freading@plt>
   13da0:	cmp	r0, #0
   13da4:	beq	13db4 <abort@plt+0x3168>
   13da8:	ldr	r3, [r4]
   13dac:	tst	r3, #256	; 0x100
   13db0:	bne	13dc4 <abort@plt+0x3178>
   13db4:	mov	r0, r4
   13db8:	add	sp, sp, #8
   13dbc:	pop	{r4, lr}
   13dc0:	b	10a90 <fflush@plt>
   13dc4:	mov	r3, #1
   13dc8:	str	r3, [sp]
   13dcc:	mov	r2, #0
   13dd0:	mov	r3, #0
   13dd4:	mov	r0, r4
   13dd8:	bl	13e44 <abort@plt+0x31f8>
   13ddc:	mov	r0, r4
   13de0:	add	sp, sp, #8
   13de4:	pop	{r4, lr}
   13de8:	b	10a90 <fflush@plt>
   13dec:	push	{r4, r5, lr}
   13df0:	sub	sp, sp, #12
   13df4:	mov	r5, r0
   13df8:	bl	10bb0 <__errno_location@plt>
   13dfc:	mov	r2, #0
   13e00:	mov	r4, r0
   13e04:	ldr	r3, [r0]
   13e08:	str	r2, [r4]
   13e0c:	mov	r0, r5
   13e10:	str	r3, [sp]
   13e14:	str	r3, [sp, #4]
   13e18:	bl	10a9c <free@plt>
   13e1c:	ldr	r3, [r4]
   13e20:	add	r2, sp, #8
   13e24:	cmp	r3, #0
   13e28:	moveq	r3, #4
   13e2c:	movne	r3, #0
   13e30:	add	r3, r2, r3
   13e34:	ldr	r3, [r3, #-8]
   13e38:	str	r3, [r4]
   13e3c:	add	sp, sp, #12
   13e40:	pop	{r4, r5, pc}
   13e44:	push	{r4, r5, r6, r7, r8, lr}
   13e48:	sub	sp, sp, #8
   13e4c:	ldmib	r0, {ip, lr}
   13e50:	mov	r4, r0
   13e54:	ldr	r5, [sp, #32]
   13e58:	cmp	lr, ip
   13e5c:	beq	13e74 <abort@plt+0x3228>
   13e60:	str	r5, [sp, #32]
   13e64:	mov	r0, r4
   13e68:	add	sp, sp, #8
   13e6c:	pop	{r4, r5, r6, r7, r8, lr}
   13e70:	b	10c04 <fseeko64@plt>
   13e74:	ldr	lr, [r0, #20]
   13e78:	ldr	ip, [r0, #16]
   13e7c:	cmp	lr, ip
   13e80:	bne	13e60 <abort@plt+0x3214>
   13e84:	ldr	r8, [r0, #36]	; 0x24
   13e88:	cmp	r8, #0
   13e8c:	bne	13e60 <abort@plt+0x3214>
   13e90:	mov	r6, r2
   13e94:	mov	r7, r3
   13e98:	bl	10be0 <fileno@plt>
   13e9c:	mov	r2, r6
   13ea0:	mov	r3, r7
   13ea4:	str	r5, [sp]
   13ea8:	bl	10b20 <lseek64@plt>
   13eac:	mvn	r3, #0
   13eb0:	mvn	r2, #0
   13eb4:	cmp	r1, r3
   13eb8:	cmpeq	r0, r2
   13ebc:	beq	13edc <abort@plt+0x3290>
   13ec0:	ldr	r3, [r4]
   13ec4:	strd	r0, [r4, #80]	; 0x50
   13ec8:	mov	r0, r8
   13ecc:	bic	r3, r3, #16
   13ed0:	str	r3, [r4]
   13ed4:	add	sp, sp, #8
   13ed8:	pop	{r4, r5, r6, r7, r8, pc}
   13edc:	mvn	r0, #0
   13ee0:	b	13ed4 <abort@plt+0x3288>
   13ee4:	push	{r4, lr}
   13ee8:	mov	r0, #14
   13eec:	bl	10c28 <nl_langinfo@plt>
   13ef0:	cmp	r0, #0
   13ef4:	beq	13f0c <abort@plt+0x32c0>
   13ef8:	ldrb	r2, [r0]
   13efc:	ldr	r3, [pc, #16]	; 13f14 <abort@plt+0x32c8>
   13f00:	cmp	r2, #0
   13f04:	moveq	r0, r3
   13f08:	pop	{r4, pc}
   13f0c:	ldr	r0, [pc]	; 13f14 <abort@plt+0x32c8>
   13f10:	pop	{r4, pc}
   13f14:	andeq	r4, r1, r0, ror sp
   13f18:	push	{r4, r5, r6, r7, lr}
   13f1c:	subs	r6, r0, #0
   13f20:	sub	sp, sp, #12
   13f24:	addeq	r6, sp, #4
   13f28:	mov	r0, r6
   13f2c:	mov	r5, r2
   13f30:	mov	r7, r1
   13f34:	bl	10b44 <mbrtowc@plt>
   13f38:	cmp	r5, #0
   13f3c:	cmnne	r0, #3
   13f40:	mov	r4, r0
   13f44:	bls	13f60 <abort@plt+0x3314>
   13f48:	mov	r0, #0
   13f4c:	bl	13fb8 <abort@plt+0x336c>
   13f50:	cmp	r0, #0
   13f54:	moveq	r4, #1
   13f58:	ldrbeq	r3, [r7]
   13f5c:	streq	r3, [r6]
   13f60:	mov	r0, r4
   13f64:	add	sp, sp, #12
   13f68:	pop	{r4, r5, r6, r7, pc}
   13f6c:	push	{r4, r5, r6, lr}
   13f70:	subs	r4, r2, #0
   13f74:	mov	r6, r0
   13f78:	mov	r5, r1
   13f7c:	beq	13fa8 <abort@plt+0x335c>
   13f80:	mov	r1, r4
   13f84:	mvn	r0, #0
   13f88:	bl	140ac <abort@plt+0x3460>
   13f8c:	cmp	r0, r5
   13f90:	bcs	13fa8 <abort@plt+0x335c>
   13f94:	bl	10bb0 <__errno_location@plt>
   13f98:	mov	r3, #12
   13f9c:	str	r3, [r0]
   13fa0:	mov	r0, #0
   13fa4:	pop	{r4, r5, r6, pc}
   13fa8:	mul	r1, r5, r4
   13fac:	mov	r0, r6
   13fb0:	pop	{r4, r5, r6, lr}
   13fb4:	b	13c14 <abort@plt+0x2fc8>
   13fb8:	push	{lr}		; (str lr, [sp, #-4]!)
   13fbc:	sub	sp, sp, #268	; 0x10c
   13fc0:	add	r1, sp, #4
   13fc4:	ldr	r2, [pc, #60]	; 14008 <abort@plt+0x33bc>
   13fc8:	bl	14014 <abort@plt+0x33c8>
   13fcc:	cmp	r0, #0
   13fd0:	movne	r0, #0
   13fd4:	bne	14000 <abort@plt+0x33b4>
   13fd8:	ldr	r1, [pc, #44]	; 1400c <abort@plt+0x33c0>
   13fdc:	add	r0, sp, #4
   13fe0:	bl	10a84 <strcmp@plt>
   13fe4:	cmp	r0, #0
   13fe8:	beq	14000 <abort@plt+0x33b4>
   13fec:	add	r0, sp, #4
   13ff0:	ldr	r1, [pc, #24]	; 14010 <abort@plt+0x33c4>
   13ff4:	bl	10a84 <strcmp@plt>
   13ff8:	adds	r0, r0, #0
   13ffc:	movne	r0, #1
   14000:	add	sp, sp, #268	; 0x10c
   14004:	pop	{pc}		; (ldr pc, [sp], #4)
   14008:	andeq	r0, r0, r1, lsl #2
   1400c:	andeq	r4, r1, r8, ror sp
   14010:	andeq	r4, r1, ip, ror sp
   14014:	push	{r4, r5, r6, lr}
   14018:	mov	r5, r1
   1401c:	mov	r1, #0
   14020:	mov	r4, r2
   14024:	bl	10c10 <setlocale@plt>
   14028:	subs	r6, r0, #0
   1402c:	beq	14088 <abort@plt+0x343c>
   14030:	bl	10ba4 <strlen@plt>
   14034:	cmp	r4, r0
   14038:	bhi	14070 <abort@plt+0x3424>
   1403c:	cmp	r4, #0
   14040:	bne	1404c <abort@plt+0x3400>
   14044:	mov	r0, #34	; 0x22
   14048:	pop	{r4, r5, r6, pc}
   1404c:	sub	r4, r4, #1
   14050:	mov	r1, r6
   14054:	mov	r2, r4
   14058:	mov	r0, r5
   1405c:	bl	10ab4 <memcpy@plt>
   14060:	mov	r3, #0
   14064:	strb	r3, [r5, r4]
   14068:	mov	r0, #34	; 0x22
   1406c:	pop	{r4, r5, r6, pc}
   14070:	add	r2, r0, #1
   14074:	mov	r1, r6
   14078:	mov	r0, r5
   1407c:	bl	10ab4 <memcpy@plt>
   14080:	mov	r0, #0
   14084:	pop	{r4, r5, r6, pc}
   14088:	cmp	r4, #0
   1408c:	beq	1409c <abort@plt+0x3450>
   14090:	strb	r6, [r5]
   14094:	mov	r0, #22
   14098:	pop	{r4, r5, r6, pc}
   1409c:	mov	r0, #22
   140a0:	pop	{r4, r5, r6, pc}
   140a4:	mov	r1, #0
   140a8:	b	10c10 <setlocale@plt>
   140ac:	subs	r2, r1, #1
   140b0:	bxeq	lr
   140b4:	bcc	1428c <abort@plt+0x3640>
   140b8:	cmp	r0, r1
   140bc:	bls	14270 <abort@plt+0x3624>
   140c0:	tst	r1, r2
   140c4:	beq	1427c <abort@plt+0x3630>
   140c8:	clz	r3, r0
   140cc:	clz	r2, r1
   140d0:	sub	r3, r2, r3
   140d4:	rsbs	r3, r3, #31
   140d8:	addne	r3, r3, r3, lsl #1
   140dc:	mov	r2, #0
   140e0:	addne	pc, pc, r3, lsl #2
   140e4:	nop			; (mov r0, r0)
   140e8:	cmp	r0, r1, lsl #31
   140ec:	adc	r2, r2, r2
   140f0:	subcs	r0, r0, r1, lsl #31
   140f4:	cmp	r0, r1, lsl #30
   140f8:	adc	r2, r2, r2
   140fc:	subcs	r0, r0, r1, lsl #30
   14100:	cmp	r0, r1, lsl #29
   14104:	adc	r2, r2, r2
   14108:	subcs	r0, r0, r1, lsl #29
   1410c:	cmp	r0, r1, lsl #28
   14110:	adc	r2, r2, r2
   14114:	subcs	r0, r0, r1, lsl #28
   14118:	cmp	r0, r1, lsl #27
   1411c:	adc	r2, r2, r2
   14120:	subcs	r0, r0, r1, lsl #27
   14124:	cmp	r0, r1, lsl #26
   14128:	adc	r2, r2, r2
   1412c:	subcs	r0, r0, r1, lsl #26
   14130:	cmp	r0, r1, lsl #25
   14134:	adc	r2, r2, r2
   14138:	subcs	r0, r0, r1, lsl #25
   1413c:	cmp	r0, r1, lsl #24
   14140:	adc	r2, r2, r2
   14144:	subcs	r0, r0, r1, lsl #24
   14148:	cmp	r0, r1, lsl #23
   1414c:	adc	r2, r2, r2
   14150:	subcs	r0, r0, r1, lsl #23
   14154:	cmp	r0, r1, lsl #22
   14158:	adc	r2, r2, r2
   1415c:	subcs	r0, r0, r1, lsl #22
   14160:	cmp	r0, r1, lsl #21
   14164:	adc	r2, r2, r2
   14168:	subcs	r0, r0, r1, lsl #21
   1416c:	cmp	r0, r1, lsl #20
   14170:	adc	r2, r2, r2
   14174:	subcs	r0, r0, r1, lsl #20
   14178:	cmp	r0, r1, lsl #19
   1417c:	adc	r2, r2, r2
   14180:	subcs	r0, r0, r1, lsl #19
   14184:	cmp	r0, r1, lsl #18
   14188:	adc	r2, r2, r2
   1418c:	subcs	r0, r0, r1, lsl #18
   14190:	cmp	r0, r1, lsl #17
   14194:	adc	r2, r2, r2
   14198:	subcs	r0, r0, r1, lsl #17
   1419c:	cmp	r0, r1, lsl #16
   141a0:	adc	r2, r2, r2
   141a4:	subcs	r0, r0, r1, lsl #16
   141a8:	cmp	r0, r1, lsl #15
   141ac:	adc	r2, r2, r2
   141b0:	subcs	r0, r0, r1, lsl #15
   141b4:	cmp	r0, r1, lsl #14
   141b8:	adc	r2, r2, r2
   141bc:	subcs	r0, r0, r1, lsl #14
   141c0:	cmp	r0, r1, lsl #13
   141c4:	adc	r2, r2, r2
   141c8:	subcs	r0, r0, r1, lsl #13
   141cc:	cmp	r0, r1, lsl #12
   141d0:	adc	r2, r2, r2
   141d4:	subcs	r0, r0, r1, lsl #12
   141d8:	cmp	r0, r1, lsl #11
   141dc:	adc	r2, r2, r2
   141e0:	subcs	r0, r0, r1, lsl #11
   141e4:	cmp	r0, r1, lsl #10
   141e8:	adc	r2, r2, r2
   141ec:	subcs	r0, r0, r1, lsl #10
   141f0:	cmp	r0, r1, lsl #9
   141f4:	adc	r2, r2, r2
   141f8:	subcs	r0, r0, r1, lsl #9
   141fc:	cmp	r0, r1, lsl #8
   14200:	adc	r2, r2, r2
   14204:	subcs	r0, r0, r1, lsl #8
   14208:	cmp	r0, r1, lsl #7
   1420c:	adc	r2, r2, r2
   14210:	subcs	r0, r0, r1, lsl #7
   14214:	cmp	r0, r1, lsl #6
   14218:	adc	r2, r2, r2
   1421c:	subcs	r0, r0, r1, lsl #6
   14220:	cmp	r0, r1, lsl #5
   14224:	adc	r2, r2, r2
   14228:	subcs	r0, r0, r1, lsl #5
   1422c:	cmp	r0, r1, lsl #4
   14230:	adc	r2, r2, r2
   14234:	subcs	r0, r0, r1, lsl #4
   14238:	cmp	r0, r1, lsl #3
   1423c:	adc	r2, r2, r2
   14240:	subcs	r0, r0, r1, lsl #3
   14244:	cmp	r0, r1, lsl #2
   14248:	adc	r2, r2, r2
   1424c:	subcs	r0, r0, r1, lsl #2
   14250:	cmp	r0, r1, lsl #1
   14254:	adc	r2, r2, r2
   14258:	subcs	r0, r0, r1, lsl #1
   1425c:	cmp	r0, r1
   14260:	adc	r2, r2, r2
   14264:	subcs	r0, r0, r1
   14268:	mov	r0, r2
   1426c:	bx	lr
   14270:	moveq	r0, #1
   14274:	movne	r0, #0
   14278:	bx	lr
   1427c:	clz	r2, r1
   14280:	rsb	r2, r2, #31
   14284:	lsr	r0, r0, r2
   14288:	bx	lr
   1428c:	cmp	r0, #0
   14290:	mvnne	r0, #0
   14294:	b	144f8 <abort@plt+0x38ac>
   14298:	cmp	r1, #0
   1429c:	beq	1428c <abort@plt+0x3640>
   142a0:	push	{r0, r1, lr}
   142a4:	bl	140ac <abort@plt+0x3460>
   142a8:	pop	{r1, r2, lr}
   142ac:	mul	r3, r2, r0
   142b0:	sub	r1, r1, r3
   142b4:	bx	lr
   142b8:	cmp	r1, #0
   142bc:	beq	144c8 <abort@plt+0x387c>
   142c0:	eor	ip, r0, r1
   142c4:	rsbmi	r1, r1, #0
   142c8:	subs	r2, r1, #1
   142cc:	beq	14494 <abort@plt+0x3848>
   142d0:	movs	r3, r0
   142d4:	rsbmi	r3, r0, #0
   142d8:	cmp	r3, r1
   142dc:	bls	144a0 <abort@plt+0x3854>
   142e0:	tst	r1, r2
   142e4:	beq	144b0 <abort@plt+0x3864>
   142e8:	clz	r2, r3
   142ec:	clz	r0, r1
   142f0:	sub	r2, r0, r2
   142f4:	rsbs	r2, r2, #31
   142f8:	addne	r2, r2, r2, lsl #1
   142fc:	mov	r0, #0
   14300:	addne	pc, pc, r2, lsl #2
   14304:	nop			; (mov r0, r0)
   14308:	cmp	r3, r1, lsl #31
   1430c:	adc	r0, r0, r0
   14310:	subcs	r3, r3, r1, lsl #31
   14314:	cmp	r3, r1, lsl #30
   14318:	adc	r0, r0, r0
   1431c:	subcs	r3, r3, r1, lsl #30
   14320:	cmp	r3, r1, lsl #29
   14324:	adc	r0, r0, r0
   14328:	subcs	r3, r3, r1, lsl #29
   1432c:	cmp	r3, r1, lsl #28
   14330:	adc	r0, r0, r0
   14334:	subcs	r3, r3, r1, lsl #28
   14338:	cmp	r3, r1, lsl #27
   1433c:	adc	r0, r0, r0
   14340:	subcs	r3, r3, r1, lsl #27
   14344:	cmp	r3, r1, lsl #26
   14348:	adc	r0, r0, r0
   1434c:	subcs	r3, r3, r1, lsl #26
   14350:	cmp	r3, r1, lsl #25
   14354:	adc	r0, r0, r0
   14358:	subcs	r3, r3, r1, lsl #25
   1435c:	cmp	r3, r1, lsl #24
   14360:	adc	r0, r0, r0
   14364:	subcs	r3, r3, r1, lsl #24
   14368:	cmp	r3, r1, lsl #23
   1436c:	adc	r0, r0, r0
   14370:	subcs	r3, r3, r1, lsl #23
   14374:	cmp	r3, r1, lsl #22
   14378:	adc	r0, r0, r0
   1437c:	subcs	r3, r3, r1, lsl #22
   14380:	cmp	r3, r1, lsl #21
   14384:	adc	r0, r0, r0
   14388:	subcs	r3, r3, r1, lsl #21
   1438c:	cmp	r3, r1, lsl #20
   14390:	adc	r0, r0, r0
   14394:	subcs	r3, r3, r1, lsl #20
   14398:	cmp	r3, r1, lsl #19
   1439c:	adc	r0, r0, r0
   143a0:	subcs	r3, r3, r1, lsl #19
   143a4:	cmp	r3, r1, lsl #18
   143a8:	adc	r0, r0, r0
   143ac:	subcs	r3, r3, r1, lsl #18
   143b0:	cmp	r3, r1, lsl #17
   143b4:	adc	r0, r0, r0
   143b8:	subcs	r3, r3, r1, lsl #17
   143bc:	cmp	r3, r1, lsl #16
   143c0:	adc	r0, r0, r0
   143c4:	subcs	r3, r3, r1, lsl #16
   143c8:	cmp	r3, r1, lsl #15
   143cc:	adc	r0, r0, r0
   143d0:	subcs	r3, r3, r1, lsl #15
   143d4:	cmp	r3, r1, lsl #14
   143d8:	adc	r0, r0, r0
   143dc:	subcs	r3, r3, r1, lsl #14
   143e0:	cmp	r3, r1, lsl #13
   143e4:	adc	r0, r0, r0
   143e8:	subcs	r3, r3, r1, lsl #13
   143ec:	cmp	r3, r1, lsl #12
   143f0:	adc	r0, r0, r0
   143f4:	subcs	r3, r3, r1, lsl #12
   143f8:	cmp	r3, r1, lsl #11
   143fc:	adc	r0, r0, r0
   14400:	subcs	r3, r3, r1, lsl #11
   14404:	cmp	r3, r1, lsl #10
   14408:	adc	r0, r0, r0
   1440c:	subcs	r3, r3, r1, lsl #10
   14410:	cmp	r3, r1, lsl #9
   14414:	adc	r0, r0, r0
   14418:	subcs	r3, r3, r1, lsl #9
   1441c:	cmp	r3, r1, lsl #8
   14420:	adc	r0, r0, r0
   14424:	subcs	r3, r3, r1, lsl #8
   14428:	cmp	r3, r1, lsl #7
   1442c:	adc	r0, r0, r0
   14430:	subcs	r3, r3, r1, lsl #7
   14434:	cmp	r3, r1, lsl #6
   14438:	adc	r0, r0, r0
   1443c:	subcs	r3, r3, r1, lsl #6
   14440:	cmp	r3, r1, lsl #5
   14444:	adc	r0, r0, r0
   14448:	subcs	r3, r3, r1, lsl #5
   1444c:	cmp	r3, r1, lsl #4
   14450:	adc	r0, r0, r0
   14454:	subcs	r3, r3, r1, lsl #4
   14458:	cmp	r3, r1, lsl #3
   1445c:	adc	r0, r0, r0
   14460:	subcs	r3, r3, r1, lsl #3
   14464:	cmp	r3, r1, lsl #2
   14468:	adc	r0, r0, r0
   1446c:	subcs	r3, r3, r1, lsl #2
   14470:	cmp	r3, r1, lsl #1
   14474:	adc	r0, r0, r0
   14478:	subcs	r3, r3, r1, lsl #1
   1447c:	cmp	r3, r1
   14480:	adc	r0, r0, r0
   14484:	subcs	r3, r3, r1
   14488:	cmp	ip, #0
   1448c:	rsbmi	r0, r0, #0
   14490:	bx	lr
   14494:	teq	ip, r0
   14498:	rsbmi	r0, r0, #0
   1449c:	bx	lr
   144a0:	movcc	r0, #0
   144a4:	asreq	r0, ip, #31
   144a8:	orreq	r0, r0, #1
   144ac:	bx	lr
   144b0:	clz	r2, r1
   144b4:	rsb	r2, r2, #31
   144b8:	cmp	ip, #0
   144bc:	lsr	r0, r3, r2
   144c0:	rsbmi	r0, r0, #0
   144c4:	bx	lr
   144c8:	cmp	r0, #0
   144cc:	mvngt	r0, #-2147483648	; 0x80000000
   144d0:	movlt	r0, #-2147483648	; 0x80000000
   144d4:	b	144f8 <abort@plt+0x38ac>
   144d8:	cmp	r1, #0
   144dc:	beq	144c8 <abort@plt+0x387c>
   144e0:	push	{r0, r1, lr}
   144e4:	bl	142c0 <abort@plt+0x3674>
   144e8:	pop	{r1, r2, lr}
   144ec:	mul	r3, r2, r0
   144f0:	sub	r1, r1, r3
   144f4:	bx	lr
   144f8:	push	{r1, lr}
   144fc:	mov	r0, #8
   14500:	bl	10a78 <raise@plt>
   14504:	pop	{r1, pc}
   14508:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1450c:	mov	r7, r0
   14510:	ldr	r6, [pc, #72]	; 14560 <abort@plt+0x3914>
   14514:	ldr	r5, [pc, #72]	; 14564 <abort@plt+0x3918>
   14518:	add	r6, pc, r6
   1451c:	add	r5, pc, r5
   14520:	sub	r6, r6, r5
   14524:	mov	r8, r1
   14528:	mov	r9, r2
   1452c:	bl	10a40 <calloc@plt-0x20>
   14530:	asrs	r6, r6, #2
   14534:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14538:	mov	r4, #0
   1453c:	add	r4, r4, #1
   14540:	ldr	r3, [r5], #4
   14544:	mov	r2, r9
   14548:	mov	r1, r8
   1454c:	mov	r0, r7
   14550:	blx	r3
   14554:	cmp	r6, r4
   14558:	bne	1453c <abort@plt+0x38f0>
   1455c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14560:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   14564:	andeq	r0, r1, r8, ror #19
   14568:	bx	lr
   1456c:	ldr	r3, [pc, #12]	; 14580 <abort@plt+0x3934>
   14570:	mov	r1, #0
   14574:	add	r3, pc, r3
   14578:	ldr	r2, [r3]
   1457c:	b	10bbc <__cxa_atexit@plt>
   14580:	andeq	r0, r1, r0, asr #22

Disassembly of section .fini:

00014584 <.fini>:
   14584:	push	{r3, lr}
   14588:	pop	{r3, pc}
