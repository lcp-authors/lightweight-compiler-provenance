
../repos/charybdis/ircd/.libs/charybdis:     file format elf32-littlearm


Disassembly of section .init:

000105a8 <.init>:
   105a8:	push	{r3, lr}
   105ac:	bl	10634 <_start@@Base+0x3c>
   105b0:	pop	{r3, pc}

Disassembly of section .plt:

000105b4 <abort@plt-0x14>:
   105b4:	push	{lr}		; (str lr, [sp, #-4]!)
   105b8:	ldr	lr, [pc, #4]	; 105c4 <abort@plt-0x4>
   105bc:	add	lr, pc, lr
   105c0:	ldr	pc, [lr, #8]!
   105c4:	andeq	r0, r1, ip, lsr sl

000105c8 <abort@plt>:
   105c8:	add	ip, pc, #0, 12
   105cc:	add	ip, ip, #16, 20	; 0x10000
   105d0:	ldr	pc, [ip, #2620]!	; 0xa3c

000105d4 <__libc_start_main@plt>:
   105d4:	add	ip, pc, #0, 12
   105d8:	add	ip, ip, #16, 20	; 0x10000
   105dc:	ldr	pc, [ip, #2612]!	; 0xa34

000105e0 <__gmon_start__@plt>:
   105e0:	add	ip, pc, #0, 12
   105e4:	add	ip, ip, #16, 20	; 0x10000
   105e8:	ldr	pc, [ip, #2604]!	; 0xa2c

000105ec <charybdis_main@plt>:
   105ec:	add	ip, pc, #0, 12
   105f0:	add	ip, ip, #16, 20	; 0x10000
   105f4:	ldr	pc, [ip, #2596]!	; 0xa24

Disassembly of section .text:

000105f8 <_start@@Base>:
   105f8:	mov	fp, #0
   105fc:	mov	lr, #0
   10600:	pop	{r1}		; (ldr r1, [sp], #4)
   10604:	mov	r2, sp
   10608:	push	{r2}		; (str r2, [sp, #-4]!)
   1060c:	push	{r0}		; (str r0, [sp, #-4]!)
   10610:	ldr	ip, [pc, #16]	; 10628 <_start@@Base+0x30>
   10614:	push	{ip}		; (str ip, [sp, #-4]!)
   10618:	ldr	r0, [pc, #12]	; 1062c <_start@@Base+0x34>
   1061c:	ldr	r3, [pc, #12]	; 10630 <_start@@Base+0x38>
   10620:	bl	105d4 <__libc_start_main@plt>
   10624:	bl	105c8 <abort@plt>
   10628:			; <UNDEFINED> instruction: 0x000107b0
   1062c:	andeq	r0, r1, r0, lsr #14
   10630:	andeq	r0, r1, r0, asr r7
   10634:	ldr	r3, [pc, #20]	; 10650 <_start@@Base+0x58>
   10638:	ldr	r2, [pc, #20]	; 10654 <_start@@Base+0x5c>
   1063c:	add	r3, pc, r3
   10640:	ldr	r2, [r3, r2]
   10644:	cmp	r2, #0
   10648:	bxeq	lr
   1064c:	b	105e0 <__gmon_start__@plt>
   10650:			; <UNDEFINED> instruction: 0x000109bc
   10654:	andeq	r0, r0, ip, lsl r0
   10658:	ldr	r3, [pc, #28]	; 1067c <_start@@Base+0x84>
   1065c:	ldr	r0, [pc, #28]	; 10680 <_start@@Base+0x88>
   10660:	sub	r3, r3, r0
   10664:	cmp	r3, #6
   10668:	bxls	lr
   1066c:	ldr	r3, [pc, #16]	; 10684 <_start@@Base+0x8c>
   10670:	cmp	r3, #0
   10674:	bxeq	lr
   10678:	bx	r3
   1067c:	andeq	r1, r2, fp, lsr #32
   10680:	andeq	r1, r2, r8, lsr #32
   10684:	andeq	r0, r0, r0
   10688:	ldr	r1, [pc, #36]	; 106b4 <_start@@Base+0xbc>
   1068c:	ldr	r0, [pc, #36]	; 106b8 <_start@@Base+0xc0>
   10690:	sub	r1, r1, r0
   10694:	asr	r1, r1, #2
   10698:	add	r1, r1, r1, lsr #31
   1069c:	asrs	r1, r1, #1
   106a0:	bxeq	lr
   106a4:	ldr	r3, [pc, #16]	; 106bc <_start@@Base+0xc4>
   106a8:	cmp	r3, #0
   106ac:	bxeq	lr
   106b0:	bx	r3
   106b4:	andeq	r1, r2, r8, lsr #32
   106b8:	andeq	r1, r2, r8, lsr #32
   106bc:	andeq	r0, r0, r0
   106c0:	push	{r4, lr}
   106c4:	ldr	r4, [pc, #24]	; 106e4 <_start@@Base+0xec>
   106c8:	ldrb	r3, [r4]
   106cc:	cmp	r3, #0
   106d0:	popne	{r4, pc}
   106d4:	bl	10658 <_start@@Base+0x60>
   106d8:	mov	r3, #1
   106dc:	strb	r3, [r4]
   106e0:	pop	{r4, pc}
   106e4:	andeq	r1, r2, r8, lsr #32
   106e8:	ldr	r0, [pc, #40]	; 10718 <_start@@Base+0x120>
   106ec:	ldr	r3, [r0]
   106f0:	cmp	r3, #0
   106f4:	bne	106fc <_start@@Base+0x104>
   106f8:	b	10688 <_start@@Base+0x90>
   106fc:	ldr	r3, [pc, #24]	; 1071c <_start@@Base+0x124>
   10700:	cmp	r3, #0
   10704:	beq	106f8 <_start@@Base+0x100>
   10708:	push	{r4, lr}
   1070c:	blx	r3
   10710:	pop	{r4, lr}
   10714:	b	10688 <_start@@Base+0x90>
   10718:	andeq	r0, r2, r4, ror #29
   1071c:	andeq	r0, r0, r0

00010720 <main@@Base>:
   10720:	push	{fp, lr}
   10724:	add	fp, sp, #4
   10728:	sub	sp, sp, #8
   1072c:	str	r0, [fp, #-8]
   10730:	str	r1, [fp, #-12]
   10734:	ldr	r1, [fp, #-12]
   10738:	ldr	r0, [fp, #-8]
   1073c:	bl	105ec <charybdis_main@plt>
   10740:	mov	r3, r0
   10744:	mov	r0, r3
   10748:	sub	sp, fp, #4
   1074c:	pop	{fp, pc}

00010750 <__libc_csu_init@@Base>:
   10750:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10754:	mov	r7, r0
   10758:	ldr	r6, [pc, #72]	; 107a8 <__libc_csu_init@@Base+0x58>
   1075c:	ldr	r5, [pc, #72]	; 107ac <__libc_csu_init@@Base+0x5c>
   10760:	add	r6, pc, r6
   10764:	add	r5, pc, r5
   10768:	sub	r6, r6, r5
   1076c:	mov	r8, r1
   10770:	mov	r9, r2
   10774:	bl	105a8 <abort@plt-0x20>
   10778:	asrs	r6, r6, #2
   1077c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10780:	mov	r4, #0
   10784:	add	r4, r4, #1
   10788:	ldr	r3, [r5], #4
   1078c:	mov	r2, r9
   10790:	mov	r1, r8
   10794:	mov	r0, r7
   10798:	blx	r3
   1079c:	cmp	r6, r4
   107a0:	bne	10784 <__libc_csu_init@@Base+0x34>
   107a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   107a8:	andeq	r0, r1, r8, ror r7
   107ac:	andeq	r0, r1, r0, ror r7

000107b0 <__libc_csu_fini@@Base>:
   107b0:	bx	lr

Disassembly of section .fini:

000107b4 <.fini>:
   107b4:	push	{r3, lr}
   107b8:	pop	{r3, pc}
