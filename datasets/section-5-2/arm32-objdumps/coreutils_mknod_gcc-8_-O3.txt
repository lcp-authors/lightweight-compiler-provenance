
../repos/coreutils/src/mknod:     file format elf32-littlearm


Disassembly of section .init:

00011468 <.init>:
   11468:	push	{r3, lr}
   1146c:	bl	120e8 <__assert_fail@plt+0x81c>
   11470:	pop	{r3, pc}

Disassembly of section .plt:

00011474 <fstatfs64@plt-0x14>:
   11474:	push	{lr}		; (str lr, [sp, #-4]!)
   11478:	ldr	lr, [pc, #4]	; 11484 <fstatfs64@plt-0x4>
   1147c:	add	lr, pc, lr
   11480:	ldr	pc, [lr, #8]!
   11484:	andeq	lr, r1, ip, ror fp

00011488 <fstatfs64@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #122880	; 0x1e000
   11490:	ldr	pc, [ip, #2940]!	; 0xb7c

00011494 <selabel_lookup@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #122880	; 0x1e000
   1149c:	ldr	pc, [ip, #2932]!	; 0xb74

000114a0 <calloc@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #122880	; 0x1e000
   114a8:	ldr	pc, [ip, #2924]!	; 0xb6c

000114ac <fputs_unlocked@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #122880	; 0x1e000
   114b4:	ldr	pc, [ip, #2916]!	; 0xb64

000114b8 <raise@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #122880	; 0x1e000
   114c0:	ldr	pc, [ip, #2908]!	; 0xb5c

000114c4 <is_selinux_enabled@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #122880	; 0x1e000
   114cc:	ldr	pc, [ip, #2900]!	; 0xb54

000114d0 <strcmp@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #122880	; 0x1e000
   114d8:	ldr	pc, [ip, #2892]!	; 0xb4c

000114dc <context_type_get@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #122880	; 0x1e000
   114e4:	ldr	pc, [ip, #2884]!	; 0xb44

000114e8 <fflush@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #122880	; 0x1e000
   114f0:	ldr	pc, [ip, #2876]!	; 0xb3c

000114f4 <lsetfilecon@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #122880	; 0x1e000
   114fc:	ldr	pc, [ip, #2868]!	; 0xb34

00011500 <memmove@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #122880	; 0x1e000
   11508:	ldr	pc, [ip, #2860]!	; 0xb2c

0001150c <free@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #122880	; 0x1e000
   11514:	ldr	pc, [ip, #2852]!	; 0xb24

00011518 <faccessat@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #122880	; 0x1e000
   11520:	ldr	pc, [ip, #2844]!	; 0xb1c

00011524 <_exit@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #122880	; 0x1e000
   1152c:	ldr	pc, [ip, #2836]!	; 0xb14

00011530 <memcpy@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #122880	; 0x1e000
   11538:	ldr	pc, [ip, #2828]!	; 0xb0c

0001153c <__strtoull_internal@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #122880	; 0x1e000
   11544:	ldr	pc, [ip, #2820]!	; 0xb04

00011548 <mbsinit@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #122880	; 0x1e000
   11550:	ldr	pc, [ip, #2812]!	; 0xafc

00011554 <context_new@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #122880	; 0x1e000
   1155c:	ldr	pc, [ip, #2804]!	; 0xaf4

00011560 <memcmp@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #122880	; 0x1e000
   11568:	ldr	pc, [ip, #2796]!	; 0xaec

0001156c <fputc_unlocked@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #122880	; 0x1e000
   11574:	ldr	pc, [ip, #2788]!	; 0xae4

00011578 <dcgettext@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #122880	; 0x1e000
   11580:	ldr	pc, [ip, #2780]!	; 0xadc

00011584 <context_type_set@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #122880	; 0x1e000
   1158c:	ldr	pc, [ip, #2772]!	; 0xad4

00011590 <realloc@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #122880	; 0x1e000
   11598:	ldr	pc, [ip, #2764]!	; 0xacc

0001159c <fgetfilecon@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #122880	; 0x1e000
   115a4:	ldr	pc, [ip, #2756]!	; 0xac4

000115a8 <textdomain@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #122880	; 0x1e000
   115b0:	ldr	pc, [ip, #2748]!	; 0xabc

000115b4 <rawmemchr@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #122880	; 0x1e000
   115bc:	ldr	pc, [ip, #2740]!	; 0xab4

000115c0 <__fxstatat64@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #122880	; 0x1e000
   115c8:	ldr	pc, [ip, #2732]!	; 0xaac

000115cc <iswprint@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #122880	; 0x1e000
   115d4:	ldr	pc, [ip, #2724]!	; 0xaa4

000115d8 <__fxstat64@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #122880	; 0x1e000
   115e0:	ldr	pc, [ip, #2716]!	; 0xa9c

000115e4 <readlink@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #122880	; 0x1e000
   115ec:	ldr	pc, [ip, #2708]!	; 0xa94

000115f0 <fwrite@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #122880	; 0x1e000
   115f8:	ldr	pc, [ip, #2700]!	; 0xa8c

000115fc <lseek64@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #122880	; 0x1e000
   11604:	ldr	pc, [ip, #2692]!	; 0xa84

00011608 <__ctype_get_mb_cur_max@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #122880	; 0x1e000
   11610:	ldr	pc, [ip, #2684]!	; 0xa7c

00011614 <getcon@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #122880	; 0x1e000
   1161c:	ldr	pc, [ip, #2676]!	; 0xa74

00011620 <__fpending@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #122880	; 0x1e000
   11628:	ldr	pc, [ip, #2668]!	; 0xa6c

0001162c <mbrtowc@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #122880	; 0x1e000
   11634:	ldr	pc, [ip, #2660]!	; 0xa64

00011638 <error@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #122880	; 0x1e000
   11640:	ldr	pc, [ip, #2652]!	; 0xa5c

00011644 <open64@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #122880	; 0x1e000
   1164c:	ldr	pc, [ip, #2644]!	; 0xa54

00011650 <lgetfilecon@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #122880	; 0x1e000
   11658:	ldr	pc, [ip, #2636]!	; 0xa4c

0001165c <malloc@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #122880	; 0x1e000
   11664:	ldr	pc, [ip, #2628]!	; 0xa44

00011668 <__libc_start_main@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #122880	; 0x1e000
   11670:	ldr	pc, [ip, #2620]!	; 0xa3c

00011674 <__freading@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #122880	; 0x1e000
   1167c:	ldr	pc, [ip, #2612]!	; 0xa34

00011680 <__gmon_start__@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #122880	; 0x1e000
   11688:	ldr	pc, [ip, #2604]!	; 0xa2c

0001168c <context_free@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #122880	; 0x1e000
   11694:	ldr	pc, [ip, #2596]!	; 0xa24

00011698 <mempcpy@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #122880	; 0x1e000
   116a0:	ldr	pc, [ip, #2588]!	; 0xa1c

000116a4 <getopt_long@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #122880	; 0x1e000
   116ac:	ldr	pc, [ip, #2580]!	; 0xa14

000116b0 <__ctype_b_loc@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #122880	; 0x1e000
   116b8:	ldr	pc, [ip, #2572]!	; 0xa0c

000116bc <getcwd@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #122880	; 0x1e000
   116c4:	ldr	pc, [ip, #2564]!	; 0xa04

000116c8 <exit@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #122880	; 0x1e000
   116d0:	ldr	pc, [ip, #2556]!	; 0x9fc

000116d4 <getfilecon@plt>:
   116d4:	add	ip, pc, #0, 12
   116d8:	add	ip, ip, #122880	; 0x1e000
   116dc:	ldr	pc, [ip, #2548]!	; 0x9f4

000116e0 <strlen@plt>:
   116e0:	add	ip, pc, #0, 12
   116e4:	add	ip, ip, #122880	; 0x1e000
   116e8:	ldr	pc, [ip, #2540]!	; 0x9ec

000116ec <selabel_open@plt>:
   116ec:	add	ip, pc, #0, 12
   116f0:	add	ip, ip, #122880	; 0x1e000
   116f4:	ldr	pc, [ip, #2532]!	; 0x9e4

000116f8 <strchr@plt>:
   116f8:	add	ip, pc, #0, 12
   116fc:	add	ip, ip, #122880	; 0x1e000
   11700:	ldr	pc, [ip, #2524]!	; 0x9dc

00011704 <openat64@plt>:
   11704:	add	ip, pc, #0, 12
   11708:	add	ip, ip, #122880	; 0x1e000
   1170c:	ldr	pc, [ip, #2516]!	; 0x9d4

00011710 <setfscreatecon@plt>:
   11710:	add	ip, pc, #0, 12
   11714:	add	ip, ip, #122880	; 0x1e000
   11718:	ldr	pc, [ip, #2508]!	; 0x9cc

0001171c <__errno_location@plt>:
   1171c:	add	ip, pc, #0, 12
   11720:	add	ip, ip, #122880	; 0x1e000
   11724:	ldr	pc, [ip, #2500]!	; 0x9c4

00011728 <__sprintf_chk@plt>:
   11728:	add	ip, pc, #0, 12
   1172c:	add	ip, ip, #122880	; 0x1e000
   11730:	ldr	pc, [ip, #2492]!	; 0x9bc

00011734 <__cxa_atexit@plt>:
   11734:	add	ip, pc, #0, 12
   11738:	add	ip, ip, #122880	; 0x1e000
   1173c:	ldr	pc, [ip, #2484]!	; 0x9b4

00011740 <memset@plt>:
   11740:	add	ip, pc, #0, 12
   11744:	add	ip, ip, #122880	; 0x1e000
   11748:	ldr	pc, [ip, #2476]!	; 0x9ac

0001174c <__printf_chk@plt>:
   1174c:	add	ip, pc, #0, 12
   11750:	add	ip, ip, #122880	; 0x1e000
   11754:	ldr	pc, [ip, #2468]!	; 0x9a4

00011758 <fileno@plt>:
   11758:	add	ip, pc, #0, 12
   1175c:	add	ip, ip, #122880	; 0x1e000
   11760:	ldr	pc, [ip, #2460]!	; 0x99c

00011764 <__fprintf_chk@plt>:
   11764:	add	ip, pc, #0, 12
   11768:	add	ip, ip, #122880	; 0x1e000
   1176c:	ldr	pc, [ip, #2452]!	; 0x994

00011770 <fclose@plt>:
   11770:	add	ip, pc, #0, 12
   11774:	add	ip, ip, #122880	; 0x1e000
   11778:	ldr	pc, [ip, #2444]!	; 0x98c

0001177c <fseeko64@plt>:
   1177c:	add	ip, pc, #0, 12
   11780:	add	ip, ip, #122880	; 0x1e000
   11784:	ldr	pc, [ip, #2436]!	; 0x984

00011788 <fcntl64@plt>:
   11788:	add	ip, pc, #0, 12
   1178c:	add	ip, ip, #122880	; 0x1e000
   11790:	ldr	pc, [ip, #2428]!	; 0x97c

00011794 <setlocale@plt>:
   11794:	add	ip, pc, #0, 12
   11798:	add	ip, ip, #122880	; 0x1e000
   1179c:	ldr	pc, [ip, #2420]!	; 0x974

000117a0 <fsetfilecon@plt>:
   117a0:	add	ip, pc, #0, 12
   117a4:	add	ip, ip, #122880	; 0x1e000
   117a8:	ldr	pc, [ip, #2412]!	; 0x96c

000117ac <strrchr@plt>:
   117ac:	add	ip, pc, #0, 12
   117b0:	add	ip, ip, #122880	; 0x1e000
   117b4:	ldr	pc, [ip, #2404]!	; 0x964

000117b8 <nl_langinfo@plt>:
   117b8:	add	ip, pc, #0, 12
   117bc:	add	ip, ip, #122880	; 0x1e000
   117c0:	ldr	pc, [ip, #2396]!	; 0x95c

000117c4 <readdir64@plt>:
   117c4:	add	ip, pc, #0, 12
   117c8:	add	ip, ip, #122880	; 0x1e000
   117cc:	ldr	pc, [ip, #2388]!	; 0x954

000117d0 <fdopendir@plt>:
   117d0:	add	ip, pc, #0, 12
   117d4:	add	ip, ip, #122880	; 0x1e000
   117d8:	ldr	pc, [ip, #2380]!	; 0x94c

000117dc <security_compute_create@plt>:
   117dc:	add	ip, pc, #0, 12
   117e0:	add	ip, ip, #122880	; 0x1e000
   117e4:	ldr	pc, [ip, #2372]!	; 0x944

000117e8 <dirfd@plt>:
   117e8:	add	ip, pc, #0, 12
   117ec:	add	ip, ip, #122880	; 0x1e000
   117f0:	ldr	pc, [ip, #2364]!	; 0x93c

000117f4 <fchdir@plt>:
   117f4:	add	ip, pc, #0, 12
   117f8:	add	ip, ip, #122880	; 0x1e000
   117fc:	ldr	pc, [ip, #2356]!	; 0x934

00011800 <qsort@plt>:
   11800:	add	ip, pc, #0, 12
   11804:	add	ip, ip, #122880	; 0x1e000
   11808:	ldr	pc, [ip, #2348]!	; 0x92c

0001180c <freecon@plt>:
   1180c:	add	ip, pc, #0, 12
   11810:	add	ip, ip, #122880	; 0x1e000
   11814:	ldr	pc, [ip, #2340]!	; 0x924

00011818 <bindtextdomain@plt>:
   11818:	add	ip, pc, #0, 12
   1181c:	add	ip, ip, #122880	; 0x1e000
   11820:	ldr	pc, [ip, #2332]!	; 0x91c

00011824 <getfscreatecon@plt>:
   11824:	add	ip, pc, #0, 12
   11828:	add	ip, ip, #122880	; 0x1e000
   1182c:	ldr	pc, [ip, #2324]!	; 0x914

00011830 <umask@plt>:
   11830:	add	ip, pc, #0, 12
   11834:	add	ip, ip, #122880	; 0x1e000
   11838:	ldr	pc, [ip, #2316]!	; 0x90c

0001183c <context_str@plt>:
   1183c:	add	ip, pc, #0, 12
   11840:	add	ip, ip, #122880	; 0x1e000
   11844:	ldr	pc, [ip, #2308]!	; 0x904

00011848 <chmod@plt>:
   11848:	add	ip, pc, #0, 12
   1184c:	add	ip, ip, #122880	; 0x1e000
   11850:	ldr	pc, [ip, #2300]!	; 0x8fc

00011854 <__xstat64@plt>:
   11854:	add	ip, pc, #0, 12
   11858:	add	ip, ip, #122880	; 0x1e000
   1185c:	ldr	pc, [ip, #2292]!	; 0x8f4

00011860 <__xmknod@plt>:
   11860:	add	ip, pc, #0, 12
   11864:	add	ip, ip, #122880	; 0x1e000
   11868:	ldr	pc, [ip, #2284]!	; 0x8ec

0001186c <strncmp@plt>:
   1186c:	add	ip, pc, #0, 12
   11870:	add	ip, ip, #122880	; 0x1e000
   11874:	ldr	pc, [ip, #2276]!	; 0x8e4

00011878 <abort@plt>:
   11878:	add	ip, pc, #0, 12
   1187c:	add	ip, ip, #122880	; 0x1e000
   11880:	ldr	pc, [ip, #2268]!	; 0x8dc

00011884 <close@plt>:
   11884:	add	ip, pc, #0, 12
   11888:	add	ip, ip, #122880	; 0x1e000
   1188c:	ldr	pc, [ip, #2260]!	; 0x8d4

00011890 <__lxstat64@plt>:
   11890:	add	ip, pc, #0, 12
   11894:	add	ip, ip, #122880	; 0x1e000
   11898:	ldr	pc, [ip, #2252]!	; 0x8cc

0001189c <mkfifo@plt>:
   1189c:	add	ip, pc, #0, 12
   118a0:	add	ip, ip, #122880	; 0x1e000
   118a4:	ldr	pc, [ip, #2244]!	; 0x8c4

000118a8 <mode_to_security_class@plt>:
   118a8:	add	ip, pc, #0, 12
   118ac:	add	ip, ip, #122880	; 0x1e000
   118b0:	ldr	pc, [ip, #2236]!	; 0x8bc

000118b4 <closedir@plt>:
   118b4:	add	ip, pc, #0, 12
   118b8:	add	ip, ip, #122880	; 0x1e000
   118bc:	ldr	pc, [ip, #2228]!	; 0x8b4

000118c0 <strspn@plt>:
   118c0:	add	ip, pc, #0, 12
   118c4:	add	ip, ip, #122880	; 0x1e000
   118c8:	ldr	pc, [ip, #2220]!	; 0x8ac

000118cc <__assert_fail@plt>:
   118cc:	add	ip, pc, #0, 12
   118d0:	add	ip, ip, #122880	; 0x1e000
   118d4:	ldr	pc, [ip, #2212]!	; 0x8a4

Disassembly of section .text:

000118d8 <lchmod@@Base-0x5d70>:
   118d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   118dc:	movw	r5, #59932	; 0xea1c
   118e0:	movt	r5, #1
   118e4:	strd	r6, [sp, #8]
   118e8:	mov	r6, r1
   118ec:	movw	r7, #488	; 0x1e8
   118f0:	movt	r7, #3
   118f4:	strd	r8, [sp, #16]
   118f8:	mov	r8, r0
   118fc:	strd	sl, [sp, #24]
   11900:	mov	sl, #0
   11904:	str	lr, [sp, #32]
   11908:	sub	sp, sp, #60	; 0x3c
   1190c:	mov	fp, sl
   11910:	ldr	r0, [r1]
   11914:	str	sl, [sp, #8]
   11918:	bl	17d9c <lchmod@@Base+0x754>
   1191c:	movw	r1, #60680	; 0xed08
   11920:	movt	r1, #1
   11924:	ldr	r9, [pc, #1916]	; 120a8 <__assert_fail@plt+0x7dc>
   11928:	mov	r0, #6
   1192c:	bl	11794 <setlocale@plt>
   11930:	movw	r1, #59788	; 0xe98c
   11934:	movt	r1, #1
   11938:	movw	r0, #59620	; 0xe8e4
   1193c:	movt	r0, #1
   11940:	bl	11818 <bindtextdomain@plt>
   11944:	movw	r0, #59620	; 0xe8e4
   11948:	movt	r0, #1
   1194c:	bl	115a8 <textdomain@plt>
   11950:	movw	r0, #13012	; 0x32d4
   11954:	movt	r0, #1
   11958:	bl	1e348 <lchmod@@Base+0x6d00>
   1195c:	mov	r4, #0
   11960:	mov	r3, r9
   11964:	mov	r2, r5
   11968:	mov	r1, r6
   1196c:	mov	r0, r8
   11970:	str	r4, [sp]
   11974:	bl	116a4 <getopt_long@plt>
   11978:	cmn	r0, #1
   1197c:	beq	11a80 <__assert_fail@plt+0x1b4>
   11980:	cmn	r0, #2
   11984:	beq	11e34 <__assert_fail@plt+0x568>
   11988:	ble	119f4 <__assert_fail@plt+0x128>
   1198c:	cmp	r0, #90	; 0x5a
   11990:	bne	11a3c <__assert_fail@plt+0x170>
   11994:	bl	114c4 <is_selinux_enabled@plt>
   11998:	cmp	r0, #0
   1199c:	ble	11a4c <__assert_fail@plt+0x180>
   119a0:	ldr	r2, [r7]
   119a4:	cmp	r2, #0
   119a8:	strne	r2, [sp, #8]
   119ac:	bne	1195c <__assert_fail@plt+0x90>
   119b0:	mov	r1, r2
   119b4:	mov	r0, r2
   119b8:	bl	116ec <selabel_open@plt>
   119bc:	subs	sl, r0, #0
   119c0:	bne	1195c <__assert_fail@plt+0x90>
   119c4:	bl	1171c <__errno_location@plt>
   119c8:	ldr	r4, [r0]
   119cc:	mov	r2, #5
   119d0:	mov	r0, sl
   119d4:	movw	r1, #59812	; 0xe9a4
   119d8:	movt	r1, #1
   119dc:	bl	11578 <dcgettext@plt>
   119e0:	mov	r2, r0
   119e4:	mov	r0, sl
   119e8:	mov	r1, r4
   119ec:	bl	11638 <error@plt>
   119f0:	b	1195c <__assert_fail@plt+0x90>
   119f4:	cmn	r0, #3
   119f8:	bne	11de8 <__assert_fail@plt+0x51c>
   119fc:	movw	r2, #59916	; 0xea0c
   11a00:	movt	r2, #1
   11a04:	movw	r3, #392	; 0x188
   11a08:	movt	r3, #3
   11a0c:	movw	r0, #484	; 0x1e4
   11a10:	movt	r0, #3
   11a14:	stm	sp, {r2, r4}
   11a18:	movw	r1, #58356	; 0xe3f4
   11a1c:	movt	r1, #1
   11a20:	ldr	r0, [r0]
   11a24:	movw	r2, #59616	; 0xe8e0
   11a28:	movt	r2, #1
   11a2c:	ldr	r3, [r3]
   11a30:	bl	1c198 <lchmod@@Base+0x4b50>
   11a34:	mov	r0, r4
   11a38:	bl	116c8 <exit@plt>
   11a3c:	cmp	r0, #109	; 0x6d
   11a40:	bne	11de8 <__assert_fail@plt+0x51c>
   11a44:	ldr	fp, [r7]
   11a48:	b	1195c <__assert_fail@plt+0x90>
   11a4c:	ldr	r3, [r7]
   11a50:	cmp	r3, #0
   11a54:	beq	1195c <__assert_fail@plt+0x90>
   11a58:	mov	r2, #5
   11a5c:	mov	r0, r4
   11a60:	movw	r1, #59840	; 0xe9c0
   11a64:	movt	r1, #1
   11a68:	bl	11578 <dcgettext@plt>
   11a6c:	mov	r2, r0
   11a70:	mov	r1, r4
   11a74:	mov	r0, r4
   11a78:	bl	11638 <error@plt>
   11a7c:	b	1195c <__assert_fail@plt+0x90>
   11a80:	cmp	fp, r4
   11a84:	beq	11bb0 <__assert_fail@plt+0x2e4>
   11a88:	mov	r0, fp
   11a8c:	bl	1776c <lchmod@@Base+0x124>
   11a90:	subs	r7, r0, #0
   11a94:	beq	11e3c <__assert_fail@plt+0x570>
   11a98:	mov	r0, r4
   11a9c:	bl	11830 <umask@plt>
   11aa0:	mov	r5, r0
   11aa4:	bl	11830 <umask@plt>
   11aa8:	mov	r2, r5
   11aac:	mov	r3, r7
   11ab0:	str	r4, [sp]
   11ab4:	mov	r1, r4
   11ab8:	movw	r0, #438	; 0x1b6
   11abc:	bl	17b68 <lchmod@@Base+0x520>
   11ac0:	mov	r5, r0
   11ac4:	mov	r0, r7
   11ac8:	bl	13688 <__assert_fail@plt+0x1dbc>
   11acc:	bic	r3, r5, #508	; 0x1fc
   11ad0:	bic	r3, r3, #3
   11ad4:	cmp	r3, #0
   11ad8:	bne	11ea0 <__assert_fail@plt+0x5d4>
   11adc:	movw	r4, #472	; 0x1d8
   11ae0:	movt	r4, #3
   11ae4:	ldr	r3, [r4]
   11ae8:	cmp	r3, r8
   11aec:	sub	r2, r8, r3
   11af0:	bge	11d8c <__assert_fail@plt+0x4c0>
   11af4:	add	r3, r3, #1
   11af8:	cmp	r3, r8
   11afc:	bge	11b10 <__assert_fail@plt+0x244>
   11b00:	ldr	r3, [r6, r3, lsl #2]
   11b04:	ldrb	r3, [r3]
   11b08:	cmp	r3, #112	; 0x70
   11b0c:	beq	11df0 <__assert_fail@plt+0x524>
   11b10:	cmp	r2, #3
   11b14:	bls	11f68 <__assert_fail@plt+0x69c>
   11b18:	cmp	r2, #4
   11b1c:	bne	11ec4 <__assert_fail@plt+0x5f8>
   11b20:	ldr	r3, [sp, #8]
   11b24:	cmp	r3, #0
   11b28:	beq	11b3c <__assert_fail@plt+0x270>
   11b2c:	mov	r0, r3
   11b30:	bl	11710 <setfscreatecon@plt>
   11b34:	cmp	r0, #0
   11b38:	blt	11fc8 <__assert_fail@plt+0x6fc>
   11b3c:	ldr	r3, [r4]
   11b40:	add	r3, r3, #1
   11b44:	ldr	r2, [r6, r3, lsl #2]
   11b48:	lsl	r3, r3, #2
   11b4c:	ldrb	r2, [r2]
   11b50:	sub	r2, r2, #98	; 0x62
   11b54:	cmp	r2, #19
   11b58:	ldrls	pc, [pc, r2, lsl #2]
   11b5c:	b	12084 <__assert_fail@plt+0x7b8>
   11b60:			; <UNDEFINED> instruction: 0x00011bb8
   11b64:	andeq	r1, r1, r4, lsl #27
   11b68:	andeq	r2, r1, r4, lsl #1
   11b6c:	andeq	r2, r1, r4, lsl #1
   11b70:	andeq	r2, r1, r4, lsl #1
   11b74:	andeq	r2, r1, r4, lsl #1
   11b78:	andeq	r2, r1, r4, lsl #1
   11b7c:	andeq	r2, r1, r4, lsl #1
   11b80:	andeq	r2, r1, r4, lsl #1
   11b84:	andeq	r2, r1, r4, lsl #1
   11b88:	andeq	r2, r1, r4, lsl #1
   11b8c:	andeq	r2, r1, r4, lsl #1
   11b90:	andeq	r2, r1, r4, lsl #1
   11b94:	andeq	r2, r1, r4, lsl #1
   11b98:	andeq	r1, r1, ip, lsl sp
   11b9c:	andeq	r2, r1, r4, lsl #1
   11ba0:	andeq	r2, r1, r4, lsl #1
   11ba4:	andeq	r2, r1, r4, lsl #1
   11ba8:	andeq	r2, r1, r4, lsl #1
   11bac:	andeq	r1, r1, r4, lsl #27
   11bb0:	movw	r5, #438	; 0x1b6
   11bb4:	b	11adc <__assert_fail@plt+0x210>
   11bb8:	mov	r7, #24576	; 0x6000
   11bbc:	movw	r8, #60680	; 0xed08
   11bc0:	movt	r8, #1
   11bc4:	add	r0, r6, r3
   11bc8:	mov	r2, #0
   11bcc:	ldr	ip, [r0, #4]
   11bd0:	mov	r1, r2
   11bd4:	add	r3, sp, #32
   11bd8:	str	r8, [sp]
   11bdc:	ldr	r0, [r0, #8]
   11be0:	str	r0, [sp, #16]
   11be4:	mov	r0, ip
   11be8:	str	ip, [sp, #24]
   11bec:	bl	1ca34 <lchmod@@Base+0x53ec>
   11bf0:	subs	ip, r0, #0
   11bf4:	bne	12064 <__assert_fail@plt+0x798>
   11bf8:	ldrd	r2, [sp, #32]
   11bfc:	mov	r1, ip
   11c00:	cmp	r3, ip
   11c04:	cmpeq	r2, r2
   11c08:	bne	12064 <__assert_fail@plt+0x798>
   11c0c:	add	r3, sp, #40	; 0x28
   11c10:	mov	r2, ip
   11c14:	str	r8, [sp]
   11c18:	ldr	r0, [sp, #16]
   11c1c:	bl	1ca34 <lchmod@@Base+0x53ec>
   11c20:	subs	r3, r0, #0
   11c24:	str	r3, [sp, #28]
   11c28:	bne	12030 <__assert_fail@plt+0x764>
   11c2c:	ldrd	r8, [sp, #40]	; 0x28
   11c30:	cmp	r9, r3
   11c34:	cmpeq	r8, r8
   11c38:	bne	12030 <__assert_fail@plt+0x764>
   11c3c:	uxtb	r2, r8
   11c40:	ldr	r1, [sp, #32]
   11c44:	mov	lr, #65280	; 0xff00
   11c48:	movt	lr, #15
   11c4c:	mov	ip, #0
   11c50:	movt	ip, #65520	; 0xfff0
   11c54:	str	r2, [sp, #20]
   11c58:	ldr	r2, [sp, #20]
   11c5c:	and	ip, ip, r8, lsl #12
   11c60:	and	r3, lr, r1, lsl #8
   11c64:	bic	r1, r1, #4080	; 0xff0
   11c68:	bic	r1, r1, #15
   11c6c:	orr	r1, r1, r8, lsr #20
   11c70:	orr	r3, r3, ip
   11c74:	orr	r3, r2, r3
   11c78:	mvn	r2, #0
   11c7c:	str	r3, [sp, #8]
   11c80:	mvn	r3, #0
   11c84:	str	r1, [sp, #12]
   11c88:	ldrd	r8, [sp, #8]
   11c8c:	cmp	r9, r3
   11c90:	cmpeq	r8, r2
   11c94:	beq	12004 <__assert_fail@plt+0x738>
   11c98:	cmp	sl, #0
   11c9c:	beq	11cb4 <__assert_fail@plt+0x3e8>
   11ca0:	ldr	r3, [r4]
   11ca4:	mov	r0, sl
   11ca8:	mov	r2, r7
   11cac:	ldr	r1, [r6, r3, lsl #2]
   11cb0:	bl	127fc <__assert_fail@plt+0xf30>
   11cb4:	ldr	r1, [r4]
   11cb8:	orr	r2, r5, r7
   11cbc:	add	r3, sp, #48	; 0x30
   11cc0:	mov	r0, #1
   11cc4:	ldrd	r8, [sp, #8]
   11cc8:	ldr	r1, [r6, r1, lsl #2]
   11ccc:	strd	r8, [sp, #48]	; 0x30
   11cd0:	bl	11860 <__xmknod@plt>
   11cd4:	cmp	r0, #0
   11cd8:	bne	11d50 <__assert_fail@plt+0x484>
   11cdc:	cmp	fp, #0
   11ce0:	beq	11cfc <__assert_fail@plt+0x430>
   11ce4:	ldr	r3, [r4]
   11ce8:	mov	r1, r5
   11cec:	ldr	r0, [r6, r3, lsl #2]
   11cf0:	bl	17648 <lchmod@@Base>
   11cf4:	cmp	r0, #0
   11cf8:	bne	11e5c <__assert_fail@plt+0x590>
   11cfc:	mov	r0, #0
   11d00:	add	sp, sp, #60	; 0x3c
   11d04:	ldrd	r4, [sp]
   11d08:	ldrd	r6, [sp, #8]
   11d0c:	ldrd	r8, [sp, #16]
   11d10:	ldrd	sl, [sp, #24]
   11d14:	add	sp, sp, #32
   11d18:	pop	{pc}		; (ldr pc, [sp], #4)
   11d1c:	cmp	sl, #0
   11d20:	beq	11d38 <__assert_fail@plt+0x46c>
   11d24:	add	r3, r6, r3
   11d28:	mov	r0, sl
   11d2c:	mov	r2, #4096	; 0x1000
   11d30:	ldr	r1, [r3, #-4]
   11d34:	bl	127fc <__assert_fail@plt+0xf30>
   11d38:	ldr	r3, [r4]
   11d3c:	mov	r1, r5
   11d40:	ldr	r0, [r6, r3, lsl #2]
   11d44:	bl	1189c <mkfifo@plt>
   11d48:	cmp	r0, #0
   11d4c:	beq	11cdc <__assert_fail@plt+0x410>
   11d50:	bl	1171c <__errno_location@plt>
   11d54:	ldr	r3, [r4]
   11d58:	mov	r1, #3
   11d5c:	ldr	r4, [r0]
   11d60:	mov	r0, #0
   11d64:	ldr	r2, [r6, r3, lsl #2]
   11d68:	bl	1af60 <lchmod@@Base+0x3918>
   11d6c:	mov	r3, r0
   11d70:	movw	r2, #60524	; 0xec6c
   11d74:	movt	r2, #1
   11d78:	mov	r1, r4
   11d7c:	mov	r0, #1
   11d80:	bl	11638 <error@plt>
   11d84:	mov	r7, #8192	; 0x2000
   11d88:	b	11bbc <__assert_fail@plt+0x2f0>
   11d8c:	cmp	r2, #1
   11d90:	bls	11f40 <__assert_fail@plt+0x674>
   11d94:	cmp	r2, #2
   11d98:	beq	11b20 <__assert_fail@plt+0x254>
   11d9c:	mov	r2, #5
   11da0:	movw	r1, #60316	; 0xeb9c
   11da4:	movt	r1, #1
   11da8:	mov	r0, #0
   11dac:	bl	11578 <dcgettext@plt>
   11db0:	ldr	r3, [r4]
   11db4:	mov	r5, r0
   11db8:	add	r3, r3, #2
   11dbc:	ldr	r0, [r6, r3, lsl #2]
   11dc0:	bl	1b70c <lchmod@@Base+0x40c4>
   11dc4:	mov	r1, #0
   11dc8:	mov	r3, r0
   11dcc:	mov	r2, r5
   11dd0:	mov	r0, r1
   11dd4:	bl	11638 <error@plt>
   11dd8:	ldr	r3, [r4]
   11ddc:	sub	r8, r8, r3
   11de0:	cmp	r8, #4
   11de4:	beq	11f04 <__assert_fail@plt+0x638>
   11de8:	mov	r0, #1
   11dec:	bl	1219c <__assert_fail@plt+0x8d0>
   11df0:	cmp	r2, #1
   11df4:	bhi	11d94 <__assert_fail@plt+0x4c8>
   11df8:	mov	r2, #5
   11dfc:	movw	r1, #60336	; 0xebb0
   11e00:	movt	r1, #1
   11e04:	mov	r0, #0
   11e08:	bl	11578 <dcgettext@plt>
   11e0c:	sub	r8, r8, #-1073741823	; 0xc0000001
   11e10:	mov	r4, r0
   11e14:	ldr	r0, [r6, r8, lsl #2]
   11e18:	bl	1b70c <lchmod@@Base+0x40c4>
   11e1c:	mov	r1, #0
   11e20:	mov	r3, r0
   11e24:	mov	r2, r4
   11e28:	mov	r0, r1
   11e2c:	bl	11638 <error@plt>
   11e30:	b	11de8 <__assert_fail@plt+0x51c>
   11e34:	mov	r0, r4
   11e38:	bl	1219c <__assert_fail@plt+0x8d0>
   11e3c:	mov	r2, #5
   11e40:	movw	r1, #59936	; 0xea20
   11e44:	movt	r1, #1
   11e48:	bl	11578 <dcgettext@plt>
   11e4c:	mov	r2, r0
   11e50:	mov	r1, r7
   11e54:	mov	r0, #1
   11e58:	bl	11638 <error@plt>
   11e5c:	bl	1171c <__errno_location@plt>
   11e60:	mov	r2, #5
   11e64:	movw	r1, #60284	; 0xeb7c
   11e68:	movt	r1, #1
   11e6c:	ldr	r5, [r0]
   11e70:	mov	r0, #0
   11e74:	bl	11578 <dcgettext@plt>
   11e78:	ldr	r3, [r4]
   11e7c:	mov	r7, r0
   11e80:	mov	r0, #4
   11e84:	ldr	r1, [r6, r3, lsl #2]
   11e88:	bl	1a3e0 <lchmod@@Base+0x2d98>
   11e8c:	mov	r3, r0
   11e90:	mov	r2, r7
   11e94:	mov	r1, r5
   11e98:	mov	r0, #1
   11e9c:	bl	11638 <error@plt>
   11ea0:	mov	r2, #5
   11ea4:	movw	r1, #59952	; 0xea30
   11ea8:	movt	r1, #1
   11eac:	mov	r0, r4
   11eb0:	bl	11578 <dcgettext@plt>
   11eb4:	mov	r2, r0
   11eb8:	mov	r1, r4
   11ebc:	mov	r0, #1
   11ec0:	bl	11638 <error@plt>
   11ec4:	movw	r1, #60316	; 0xeb9c
   11ec8:	movt	r1, #1
   11ecc:	mov	r2, #5
   11ed0:	mov	r0, #0
   11ed4:	bl	11578 <dcgettext@plt>
   11ed8:	ldr	r3, [r4]
   11edc:	mov	r5, r0
   11ee0:	add	r3, r3, #4
   11ee4:	ldr	r0, [r6, r3, lsl #2]
   11ee8:	bl	1b70c <lchmod@@Base+0x40c4>
   11eec:	mov	r1, #0
   11ef0:	mov	r3, r0
   11ef4:	mov	r2, r5
   11ef8:	mov	r0, r1
   11efc:	bl	11638 <error@plt>
   11f00:	b	11de8 <__assert_fail@plt+0x51c>
   11f04:	movw	r3, #480	; 0x1e0
   11f08:	movt	r3, #3
   11f0c:	ldr	r4, [r3]
   11f10:	movw	r1, #60068	; 0xeaa4
   11f14:	movt	r1, #1
   11f18:	mov	r2, #5
   11f1c:	mov	r0, #0
   11f20:	bl	11578 <dcgettext@plt>
   11f24:	mov	r3, r0
   11f28:	movw	r2, #61028	; 0xee64
   11f2c:	movt	r2, #1
   11f30:	mov	r1, #1
   11f34:	mov	r0, r4
   11f38:	bl	11764 <__fprintf_chk@plt>
   11f3c:	b	11de8 <__assert_fail@plt+0x51c>
   11f40:	mov	r2, #5
   11f44:	movw	r1, #59996	; 0xea5c
   11f48:	movt	r1, #1
   11f4c:	mov	r0, #0
   11f50:	bl	11578 <dcgettext@plt>
   11f54:	mov	r1, #0
   11f58:	mov	r2, r0
   11f5c:	mov	r0, r1
   11f60:	bl	11638 <error@plt>
   11f64:	b	11de8 <__assert_fail@plt+0x51c>
   11f68:	mov	r2, #5
   11f6c:	movw	r1, #60336	; 0xebb0
   11f70:	movt	r1, #1
   11f74:	mov	r0, #0
   11f78:	bl	11578 <dcgettext@plt>
   11f7c:	sub	r3, r8, #-1073741823	; 0xc0000001
   11f80:	mov	r5, r0
   11f84:	ldr	r0, [r6, r3, lsl #2]
   11f88:	bl	1b70c <lchmod@@Base+0x40c4>
   11f8c:	mov	r1, #0
   11f90:	mov	r3, r0
   11f94:	mov	r2, r5
   11f98:	mov	r0, r1
   11f9c:	bl	11638 <error@plt>
   11fa0:	ldr	r3, [r4]
   11fa4:	sub	r8, r8, r3
   11fa8:	cmp	r8, #2
   11fac:	bne	11de8 <__assert_fail@plt+0x51c>
   11fb0:	movw	r3, #480	; 0x1e0
   11fb4:	movt	r3, #3
   11fb8:	movw	r1, #60012	; 0xea6c
   11fbc:	movt	r1, #1
   11fc0:	ldr	r4, [r3]
   11fc4:	b	11f18 <__assert_fail@plt+0x64c>
   11fc8:	bl	1171c <__errno_location@plt>
   11fcc:	ldr	r4, [r0]
   11fd0:	mov	r2, #5
   11fd4:	movw	r1, #60120	; 0xead8
   11fd8:	movt	r1, #1
   11fdc:	mov	r0, #0
   11fe0:	bl	11578 <dcgettext@plt>
   11fe4:	mov	r5, r0
   11fe8:	ldr	r0, [sp, #8]
   11fec:	bl	1b70c <lchmod@@Base+0x40c4>
   11ff0:	mov	r3, r0
   11ff4:	mov	r2, r5
   11ff8:	mov	r1, r4
   11ffc:	mov	r0, #1
   12000:	bl	11638 <error@plt>
   12004:	mov	r2, #5
   12008:	movw	r1, #60236	; 0xeb4c
   1200c:	movt	r1, #1
   12010:	bl	11578 <dcgettext@plt>
   12014:	ldr	r1, [sp, #16]
   12018:	mov	r2, r0
   1201c:	mov	r0, #1
   12020:	ldr	r3, [sp, #24]
   12024:	str	r1, [sp]
   12028:	ldr	r1, [sp, #28]
   1202c:	bl	11638 <error@plt>
   12030:	movw	r1, #60204	; 0xeb2c
   12034:	movt	r1, #1
   12038:	mov	r2, #5
   1203c:	mov	r0, #0
   12040:	bl	11578 <dcgettext@plt>
   12044:	mov	r4, r0
   12048:	ldr	r0, [sp, #16]
   1204c:	bl	1b70c <lchmod@@Base+0x40c4>
   12050:	mov	r3, r0
   12054:	mov	r2, r4
   12058:	mov	r1, #0
   1205c:	mov	r0, #1
   12060:	bl	11638 <error@plt>
   12064:	movw	r1, #60172	; 0xeb0c
   12068:	movt	r1, #1
   1206c:	mov	r2, #5
   12070:	mov	r0, #0
   12074:	bl	11578 <dcgettext@plt>
   12078:	mov	r4, r0
   1207c:	ldr	r0, [sp, #24]
   12080:	b	1204c <__assert_fail@plt+0x780>
   12084:	movw	r1, #60260	; 0xeb64
   12088:	movt	r1, #1
   1208c:	mov	r2, #5
   12090:	mov	r0, #0
   12094:	bl	11578 <dcgettext@plt>
   12098:	ldr	r3, [r4]
   1209c:	mov	r5, r0
   120a0:	add	r3, r3, #1
   120a4:	b	11ee4 <__assert_fail@plt+0x618>
   120a8:	andeq	lr, r1, r4, lsr #7
   120ac:	mov	fp, #0
   120b0:	mov	lr, #0
   120b4:	pop	{r1}		; (ldr r1, [sp], #4)
   120b8:	mov	r2, sp
   120bc:	push	{r2}		; (str r2, [sp, #-4]!)
   120c0:	push	{r0}		; (str r0, [sp, #-4]!)
   120c4:	ldr	ip, [pc, #16]	; 120dc <__assert_fail@plt+0x810>
   120c8:	push	{ip}		; (str ip, [sp, #-4]!)
   120cc:	ldr	r0, [pc, #12]	; 120e0 <__assert_fail@plt+0x814>
   120d0:	ldr	r3, [pc, #12]	; 120e4 <__assert_fail@plt+0x818>
   120d4:	bl	11668 <__libc_start_main@plt>
   120d8:	bl	11878 <abort@plt>
   120dc:	andeq	lr, r1, r4, asr #6
   120e0:	ldrdeq	r1, [r1], -r8
   120e4:	andeq	lr, r1, r4, ror #5
   120e8:	ldr	r3, [pc, #20]	; 12104 <__assert_fail@plt+0x838>
   120ec:	ldr	r2, [pc, #20]	; 12108 <__assert_fail@plt+0x83c>
   120f0:	add	r3, pc, r3
   120f4:	ldr	r2, [r3, r2]
   120f8:	cmp	r2, #0
   120fc:	bxeq	lr
   12100:	b	11680 <__gmon_start__@plt>
   12104:	andeq	sp, r1, r8, lsl #30
   12108:	andeq	r0, r0, ip, ror r1
   1210c:	ldr	r0, [pc, #24]	; 1212c <__assert_fail@plt+0x860>
   12110:	ldr	r3, [pc, #24]	; 12130 <__assert_fail@plt+0x864>
   12114:	cmp	r3, r0
   12118:	bxeq	lr
   1211c:	ldr	r3, [pc, #16]	; 12134 <__assert_fail@plt+0x868>
   12120:	cmp	r3, #0
   12124:	bxeq	lr
   12128:	bx	r3
   1212c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   12130:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   12134:	andeq	r0, r0, r0
   12138:	ldr	r0, [pc, #36]	; 12164 <__assert_fail@plt+0x898>
   1213c:	ldr	r1, [pc, #36]	; 12168 <__assert_fail@plt+0x89c>
   12140:	sub	r1, r1, r0
   12144:	asr	r1, r1, #2
   12148:	add	r1, r1, r1, lsr #31
   1214c:	asrs	r1, r1, #1
   12150:	bxeq	lr
   12154:	ldr	r3, [pc, #16]	; 1216c <__assert_fail@plt+0x8a0>
   12158:	cmp	r3, #0
   1215c:	bxeq	lr
   12160:	bx	r3
   12164:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   12168:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   1216c:	andeq	r0, r0, r0
   12170:	push	{r4, lr}
   12174:	ldr	r4, [pc, #24]	; 12194 <__assert_fail@plt+0x8c8>
   12178:	ldrb	r3, [r4]
   1217c:	cmp	r3, #0
   12180:	popne	{r4, pc}
   12184:	bl	1210c <__assert_fail@plt+0x840>
   12188:	mov	r3, #1
   1218c:	strb	r3, [r4]
   12190:	pop	{r4, pc}
   12194:	andeq	r0, r3, ip, ror #3
   12198:	b	12138 <__assert_fail@plt+0x86c>
   1219c:	subs	r6, r0, #0
   121a0:	str	r7, [sp, #-8]!
   121a4:	str	lr, [sp, #4]
   121a8:	sub	sp, sp, #56	; 0x38
   121ac:	beq	121f4 <__assert_fail@plt+0x928>
   121b0:	movw	r3, #480	; 0x1e0
   121b4:	movt	r3, #3
   121b8:	ldr	r4, [r3]
   121bc:	mov	r2, #5
   121c0:	movw	r1, #58364	; 0xe3fc
   121c4:	movt	r1, #1
   121c8:	mov	r0, #0
   121cc:	bl	11578 <dcgettext@plt>
   121d0:	movw	r3, #504	; 0x1f8
   121d4:	movt	r3, #3
   121d8:	mov	r2, r0
   121dc:	mov	r1, #1
   121e0:	ldr	r3, [r3]
   121e4:	mov	r0, r4
   121e8:	bl	11764 <__fprintf_chk@plt>
   121ec:	mov	r0, r6
   121f0:	bl	116c8 <exit@plt>
   121f4:	mov	r2, #5
   121f8:	movw	r1, #58404	; 0xe424
   121fc:	movt	r1, #1
   12200:	movw	r7, #484	; 0x1e4
   12204:	movt	r7, #3
   12208:	bl	11578 <dcgettext@plt>
   1220c:	movw	r3, #504	; 0x1f8
   12210:	movt	r3, #3
   12214:	mov	r1, r0
   12218:	mov	r0, #1
   1221c:	ldr	r2, [r3]
   12220:	bl	1174c <__printf_chk@plt>
   12224:	mov	r2, #5
   12228:	movw	r1, #58452	; 0xe454
   1222c:	movt	r1, #1
   12230:	mov	r0, r6
   12234:	bl	11578 <dcgettext@plt>
   12238:	ldr	r1, [r7]
   1223c:	bl	114ac <fputs_unlocked@plt>
   12240:	mov	r2, #5
   12244:	movw	r1, #58504	; 0xe488
   12248:	movt	r1, #1
   1224c:	mov	r0, r6
   12250:	bl	11578 <dcgettext@plt>
   12254:	ldr	r1, [r7]
   12258:	bl	114ac <fputs_unlocked@plt>
   1225c:	mov	r2, #5
   12260:	movw	r1, #58580	; 0xe4d4
   12264:	movt	r1, #1
   12268:	mov	r0, r6
   1226c:	bl	11578 <dcgettext@plt>
   12270:	ldr	r1, [r7]
   12274:	bl	114ac <fputs_unlocked@plt>
   12278:	mov	r2, #5
   1227c:	movw	r1, #58656	; 0xe520
   12280:	movt	r1, #1
   12284:	mov	r0, r6
   12288:	bl	11578 <dcgettext@plt>
   1228c:	ldr	r1, [r7]
   12290:	bl	114ac <fputs_unlocked@plt>
   12294:	mov	r2, #5
   12298:	movw	r1, #58864	; 0xe5f0
   1229c:	movt	r1, #1
   122a0:	mov	r0, r6
   122a4:	bl	11578 <dcgettext@plt>
   122a8:	ldr	r1, [r7]
   122ac:	bl	114ac <fputs_unlocked@plt>
   122b0:	mov	r2, #5
   122b4:	movw	r1, #58912	; 0xe620
   122b8:	movt	r1, #1
   122bc:	mov	r0, r6
   122c0:	bl	11578 <dcgettext@plt>
   122c4:	ldr	r1, [r7]
   122c8:	bl	114ac <fputs_unlocked@plt>
   122cc:	mov	r2, #5
   122d0:	movw	r1, #58968	; 0xe658
   122d4:	movt	r1, #1
   122d8:	mov	r0, r6
   122dc:	bl	11578 <dcgettext@plt>
   122e0:	ldr	r1, [r7]
   122e4:	bl	114ac <fputs_unlocked@plt>
   122e8:	mov	r2, #5
   122ec:	movw	r1, #59232	; 0xe760
   122f0:	movt	r1, #1
   122f4:	mov	r0, r6
   122f8:	bl	11578 <dcgettext@plt>
   122fc:	ldr	r1, [r7]
   12300:	bl	114ac <fputs_unlocked@plt>
   12304:	mov	r2, #5
   12308:	movw	r1, #59360	; 0xe7e0
   1230c:	movt	r1, #1
   12310:	mov	r0, r6
   12314:	bl	11578 <dcgettext@plt>
   12318:	mov	r1, r0
   1231c:	movw	r2, #58356	; 0xe3f4
   12320:	movt	r2, #1
   12324:	mov	r0, #1
   12328:	bl	1174c <__printf_chk@plt>
   1232c:	movw	lr, #58220	; 0xe36c
   12330:	movt	lr, #1
   12334:	ldr	ip, [lr]
   12338:	ldr	r4, [lr, #4]
   1233c:	ldrd	r8, [lr, #8]
   12340:	subs	r1, ip, #0
   12344:	str	ip, [sp]
   12348:	ldrd	r2, [lr, #16]
   1234c:	str	r4, [sp, #4]
   12350:	ldrd	r4, [lr, #24]
   12354:	strd	r8, [sp, #8]
   12358:	ldrd	r8, [lr, #32]
   1235c:	strd	r2, [sp, #16]
   12360:	ldrd	r2, [lr, #40]	; 0x28
   12364:	strd	r4, [sp, #24]
   12368:	ldrd	r4, [lr, #48]	; 0x30
   1236c:	strd	r8, [sp, #32]
   12370:	strd	r2, [sp, #40]	; 0x28
   12374:	strd	r4, [sp, #48]	; 0x30
   12378:	movwne	r5, #58356	; 0xe3f4
   1237c:	mov	r4, sp
   12380:	movtne	r5, #1
   12384:	bne	1247c <__assert_fail@plt+0xbb0>
   12388:	ldr	r4, [r4, #4]
   1238c:	movw	r1, #59552	; 0xe8a0
   12390:	movt	r1, #1
   12394:	mov	r2, #5
   12398:	cmp	r4, #0
   1239c:	beq	12490 <__assert_fail@plt+0xbc4>
   123a0:	mov	r0, #0
   123a4:	bl	11578 <dcgettext@plt>
   123a8:	mov	r1, r0
   123ac:	movw	r3, #59576	; 0xe8b8
   123b0:	movt	r3, #1
   123b4:	movw	r2, #59616	; 0xe8e0
   123b8:	movt	r2, #1
   123bc:	mov	r0, #1
   123c0:	bl	1174c <__printf_chk@plt>
   123c4:	mov	r1, #0
   123c8:	mov	r0, #5
   123cc:	bl	11794 <setlocale@plt>
   123d0:	cmp	r0, #0
   123d4:	movweq	r5, #58356	; 0xe3f4
   123d8:	movteq	r5, #1
   123dc:	beq	12400 <__assert_fail@plt+0xb34>
   123e0:	movw	r1, #59632	; 0xe8f0
   123e4:	movt	r1, #1
   123e8:	mov	r2, #3
   123ec:	movw	r5, #58356	; 0xe3f4
   123f0:	movt	r5, #1
   123f4:	bl	1186c <strncmp@plt>
   123f8:	cmp	r0, #0
   123fc:	bne	12548 <__assert_fail@plt+0xc7c>
   12400:	mov	r2, #5
   12404:	movw	r1, #59708	; 0xe93c
   12408:	movt	r1, #1
   1240c:	mov	r0, #0
   12410:	bl	11578 <dcgettext@plt>
   12414:	mov	r1, r0
   12418:	movw	r3, #58356	; 0xe3f4
   1241c:	movt	r3, #1
   12420:	movw	r2, #59576	; 0xe8b8
   12424:	movt	r2, #1
   12428:	mov	r0, #1
   1242c:	bl	1174c <__printf_chk@plt>
   12430:	mov	r2, #5
   12434:	movw	r1, #59736	; 0xe958
   12438:	movt	r1, #1
   1243c:	mov	r0, #0
   12440:	bl	11578 <dcgettext@plt>
   12444:	movw	r2, #60372	; 0xebd4
   12448:	movt	r2, #1
   1244c:	cmp	r4, r5
   12450:	movw	r3, #60680	; 0xed08
   12454:	movt	r3, #1
   12458:	mov	r1, r0
   1245c:	moveq	r3, r2
   12460:	mov	r2, r4
   12464:	mov	r0, #1
   12468:	bl	1174c <__printf_chk@plt>
   1246c:	b	121ec <__assert_fail@plt+0x920>
   12470:	ldr	r1, [r4, #8]!
   12474:	cmp	r1, #0
   12478:	beq	12388 <__assert_fail@plt+0xabc>
   1247c:	mov	r0, r5
   12480:	bl	114d0 <strcmp@plt>
   12484:	cmp	r0, #0
   12488:	bne	12470 <__assert_fail@plt+0xba4>
   1248c:	b	12388 <__assert_fail@plt+0xabc>
   12490:	mov	r0, r4
   12494:	bl	11578 <dcgettext@plt>
   12498:	mov	r1, r0
   1249c:	movw	r3, #59576	; 0xe8b8
   124a0:	movt	r3, #1
   124a4:	movw	r2, #59616	; 0xe8e0
   124a8:	movt	r2, #1
   124ac:	mov	r0, #1
   124b0:	bl	1174c <__printf_chk@plt>
   124b4:	mov	r1, r4
   124b8:	mov	r0, #5
   124bc:	bl	11794 <setlocale@plt>
   124c0:	cmp	r0, #0
   124c4:	beq	124e0 <__assert_fail@plt+0xc14>
   124c8:	movw	r1, #59632	; 0xe8f0
   124cc:	movt	r1, #1
   124d0:	mov	r2, #3
   124d4:	bl	1186c <strncmp@plt>
   124d8:	cmp	r0, #0
   124dc:	bne	1253c <__assert_fail@plt+0xc70>
   124e0:	mov	r2, #5
   124e4:	movw	r1, #59708	; 0xe93c
   124e8:	movt	r1, #1
   124ec:	mov	r0, #0
   124f0:	bl	11578 <dcgettext@plt>
   124f4:	mov	r1, r0
   124f8:	movw	r3, #58356	; 0xe3f4
   124fc:	movt	r3, #1
   12500:	movw	r2, #59576	; 0xe8b8
   12504:	movt	r2, #1
   12508:	mov	r0, #1
   1250c:	bl	1174c <__printf_chk@plt>
   12510:	movw	r1, #59736	; 0xe958
   12514:	movt	r1, #1
   12518:	mov	r2, #5
   1251c:	mov	r0, #0
   12520:	bl	11578 <dcgettext@plt>
   12524:	movw	r4, #58356	; 0xe3f4
   12528:	movt	r4, #1
   1252c:	movw	r3, #60372	; 0xebd4
   12530:	movt	r3, #1
   12534:	mov	r1, r0
   12538:	b	12460 <__assert_fail@plt+0xb94>
   1253c:	movw	r5, #58356	; 0xe3f4
   12540:	movt	r5, #1
   12544:	mov	r4, r5
   12548:	mov	r2, #5
   1254c:	movw	r1, #59636	; 0xe8f4
   12550:	movt	r1, #1
   12554:	mov	r0, #0
   12558:	bl	11578 <dcgettext@plt>
   1255c:	ldr	r1, [r7]
   12560:	bl	114ac <fputs_unlocked@plt>
   12564:	b	12400 <__assert_fail@plt+0xb34>
   12568:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1256c:	mov	r4, #0
   12570:	strd	r6, [sp, #8]
   12574:	mov	r6, r1
   12578:	strd	r8, [sp, #16]
   1257c:	subs	r9, r0, #0
   12580:	str	lr, [sp, #24]
   12584:	sub	sp, sp, #116	; 0x74
   12588:	str	r4, [sp]
   1258c:	str	r4, [sp, #4]
   12590:	beq	126b8 <__assert_fail@plt+0xdec>
   12594:	mov	r1, #32768	; 0x8000
   12598:	mov	r0, r6
   1259c:	bl	11644 <open64@plt>
   125a0:	mov	r5, r0
   125a4:	bl	1171c <__errno_location@plt>
   125a8:	cmn	r5, #1
   125ac:	mov	r7, r0
   125b0:	beq	12660 <__assert_fail@plt+0xd94>
   125b4:	add	r2, sp, #8
   125b8:	mov	r1, r5
   125bc:	mov	r0, #3
   125c0:	bl	115d8 <__fxstat64@plt>
   125c4:	cmp	r0, #0
   125c8:	blt	12784 <__assert_fail@plt+0xeb8>
   125cc:	mov	r0, r9
   125d0:	mov	r2, r6
   125d4:	ldr	r3, [sp, #24]
   125d8:	mov	r1, sp
   125dc:	bl	11494 <selabel_lookup@plt>
   125e0:	cmp	r0, #0
   125e4:	blt	12758 <__assert_fail@plt+0xe8c>
   125e8:	ldr	r0, [sp]
   125ec:	bl	11554 <context_new@plt>
   125f0:	subs	r9, r0, #0
   125f4:	beq	127c8 <__assert_fail@plt+0xefc>
   125f8:	cmn	r5, #1
   125fc:	add	r1, sp, #4
   12600:	beq	1272c <__assert_fail@plt+0xe60>
   12604:	mov	r0, r5
   12608:	bl	1bb7c <lchmod@@Base+0x4534>
   1260c:	cmp	r0, #0
   12610:	blt	12794 <__assert_fail@plt+0xec8>
   12614:	ldr	r0, [sp, #4]
   12618:	bl	11554 <context_new@plt>
   1261c:	subs	r4, r0, #0
   12620:	beq	12798 <__assert_fail@plt+0xecc>
   12624:	mov	r0, r9
   12628:	bl	114dc <context_type_get@plt>
   1262c:	subs	r1, r0, #0
   12630:	beq	12644 <__assert_fail@plt+0xd78>
   12634:	mov	r0, r4
   12638:	bl	11584 <context_type_set@plt>
   1263c:	cmp	r0, #0
   12640:	beq	127a0 <__assert_fail@plt+0xed4>
   12644:	ldr	r8, [r7]
   12648:	cmn	r5, #1
   1264c:	beq	1268c <__assert_fail@plt+0xdc0>
   12650:	mvn	r6, #0
   12654:	mov	r0, r5
   12658:	bl	11884 <close@plt>
   1265c:	b	12690 <__assert_fail@plt+0xdc4>
   12660:	ldr	r8, [r0]
   12664:	cmp	r8, #40	; 0x28
   12668:	bne	12724 <__assert_fail@plt+0xe58>
   1266c:	add	r2, sp, #8
   12670:	mov	r1, r6
   12674:	mov	r0, #3
   12678:	bl	11890 <__lxstat64@plt>
   1267c:	cmp	r0, #0
   12680:	bge	125cc <__assert_fail@plt+0xd00>
   12684:	ldr	r8, [r7]
   12688:	mov	r9, r4
   1268c:	mov	r6, r5
   12690:	mov	r0, r9
   12694:	bl	1168c <context_free@plt>
   12698:	mov	r0, r4
   1269c:	bl	1168c <context_free@plt>
   126a0:	ldr	r0, [sp]
   126a4:	bl	1180c <freecon@plt>
   126a8:	ldr	r0, [sp, #4]
   126ac:	bl	1180c <freecon@plt>
   126b0:	str	r8, [r7]
   126b4:	b	12708 <__assert_fail@plt+0xe3c>
   126b8:	add	r0, sp, #4
   126bc:	bl	11824 <getfscreatecon@plt>
   126c0:	cmp	r0, r4
   126c4:	blt	127f4 <__assert_fail@plt+0xf28>
   126c8:	bl	1171c <__errno_location@plt>
   126cc:	ldr	r5, [sp, #4]
   126d0:	mov	r4, r0
   126d4:	cmp	r5, #0
   126d8:	moveq	r3, #61	; 0x3d
   126dc:	mvneq	r6, #0
   126e0:	streq	r3, [r0]
   126e4:	beq	12708 <__assert_fail@plt+0xe3c>
   126e8:	mov	r1, r5
   126ec:	mov	r0, r6
   126f0:	bl	114f4 <lsetfilecon@plt>
   126f4:	ldr	r5, [r4]
   126f8:	mov	r6, r0
   126fc:	ldr	r0, [sp, #4]
   12700:	bl	1180c <freecon@plt>
   12704:	str	r5, [r4]
   12708:	mov	r0, r6
   1270c:	add	sp, sp, #116	; 0x74
   12710:	ldrd	r4, [sp]
   12714:	ldrd	r6, [sp, #8]
   12718:	ldrd	r8, [sp, #16]
   1271c:	add	sp, sp, #24
   12720:	pop	{pc}		; (ldr pc, [sp], #4)
   12724:	mov	r9, r4
   12728:	b	1268c <__assert_fail@plt+0xdc0>
   1272c:	mov	r0, r6
   12730:	bl	1baec <lchmod@@Base+0x44a4>
   12734:	cmp	r0, #0
   12738:	blt	127d4 <__assert_fail@plt+0xf08>
   1273c:	ldr	r0, [sp, #4]
   12740:	bl	11554 <context_new@plt>
   12744:	subs	r4, r0, #0
   12748:	bne	12624 <__assert_fail@plt+0xd58>
   1274c:	mov	r6, r5
   12750:	ldr	r8, [r7]
   12754:	b	12690 <__assert_fail@plt+0xdc4>
   12758:	ldr	r8, [r7]
   1275c:	cmp	r8, #2
   12760:	movne	r4, #0
   12764:	movne	r9, r4
   12768:	bne	12648 <__assert_fail@plt+0xd7c>
   1276c:	mov	r3, #61	; 0x3d
   12770:	mov	r4, #0
   12774:	mov	r8, r3
   12778:	mov	r9, r4
   1277c:	str	r3, [r7]
   12780:	b	12648 <__assert_fail@plt+0xd7c>
   12784:	mvn	r6, #0
   12788:	mov	r9, r4
   1278c:	ldr	r8, [r7]
   12790:	b	12654 <__assert_fail@plt+0xd88>
   12794:	mov	r4, #0
   12798:	mvn	r6, #0
   1279c:	b	1278c <__assert_fail@plt+0xec0>
   127a0:	mov	r0, r4
   127a4:	bl	1183c <context_str@plt>
   127a8:	subs	r1, r0, #0
   127ac:	beq	12644 <__assert_fail@plt+0xd78>
   127b0:	cmn	r5, #1
   127b4:	beq	127e0 <__assert_fail@plt+0xf14>
   127b8:	mov	r0, r5
   127bc:	bl	117a0 <fsetfilecon@plt>
   127c0:	mov	r6, r0
   127c4:	b	1278c <__assert_fail@plt+0xec0>
   127c8:	mov	r4, r9
   127cc:	ldr	r8, [r7]
   127d0:	b	12648 <__assert_fail@plt+0xd7c>
   127d4:	mov	r4, #0
   127d8:	ldr	r8, [r7]
   127dc:	b	1268c <__assert_fail@plt+0xdc0>
   127e0:	mov	r0, r6
   127e4:	bl	114f4 <lsetfilecon@plt>
   127e8:	mov	r5, r0
   127ec:	ldr	r8, [r7]
   127f0:	b	1268c <__assert_fail@plt+0xdc0>
   127f4:	mvn	r6, #0
   127f8:	b	12708 <__assert_fail@plt+0xe3c>
   127fc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12800:	mov	r4, r1
   12804:	strd	r6, [sp, #8]
   12808:	mov	r7, #0
   1280c:	mov	r6, r2
   12810:	strd	r8, [sp, #16]
   12814:	mov	r9, r0
   12818:	str	lr, [sp, #24]
   1281c:	sub	sp, sp, #20
   12820:	str	r7, [sp]
   12824:	str	r7, [sp, #4]
   12828:	bl	1171c <__errno_location@plt>
   1282c:	ldrb	r3, [r4]
   12830:	mov	r8, r0
   12834:	cmp	r3, #47	; 0x2f
   12838:	beq	12854 <__assert_fail@plt+0xf88>
   1283c:	mov	r0, r4
   12840:	mov	r1, #2
   12844:	bl	12b4c <__assert_fail@plt+0x1280>
   12848:	subs	r4, r0, #0
   1284c:	mov	r7, r4
   12850:	beq	12a1c <__assert_fail@plt+0x1150>
   12854:	mov	r0, r9
   12858:	mov	r3, r6
   1285c:	mov	r2, r4
   12860:	mov	r1, sp
   12864:	bl	11494 <selabel_lookup@plt>
   12868:	cmp	r0, #0
   1286c:	blt	129d4 <__assert_fail@plt+0x1108>
   12870:	mov	r9, #0
   12874:	mov	r0, r4
   12878:	str	r9, [sp, #8]
   1287c:	str	r9, [sp, #12]
   12880:	bl	133c0 <__assert_fail@plt+0x1af4>
   12884:	mov	r4, r0
   12888:	add	r0, sp, #8
   1288c:	bl	11614 <getcon@plt>
   12890:	cmp	r0, r9
   12894:	blt	12998 <__assert_fail@plt+0x10cc>
   12898:	add	r1, sp, #12
   1289c:	mov	r0, r4
   128a0:	bl	1ba5c <lchmod@@Base+0x4414>
   128a4:	cmp	r0, r9
   128a8:	blt	12998 <__assert_fail@plt+0x10cc>
   128ac:	mov	r0, r6
   128b0:	bl	118a8 <mode_to_security_class@plt>
   128b4:	subs	r2, r0, #0
   128b8:	beq	12998 <__assert_fail@plt+0x10cc>
   128bc:	add	r3, sp, #4
   128c0:	ldrd	r0, [sp, #8]
   128c4:	bl	117dc <security_compute_create@plt>
   128c8:	ldr	r5, [r8]
   128cc:	mov	r6, r0
   128d0:	mov	r0, r4
   128d4:	bl	13688 <__assert_fail@plt+0x1dbc>
   128d8:	ldr	r0, [sp, #8]
   128dc:	bl	1180c <freecon@plt>
   128e0:	ldr	r0, [sp, #12]
   128e4:	bl	1180c <freecon@plt>
   128e8:	cmp	r6, r9
   128ec:	str	r5, [r8]
   128f0:	blt	129e0 <__assert_fail@plt+0x1114>
   128f4:	ldr	r0, [sp]
   128f8:	bl	11554 <context_new@plt>
   128fc:	subs	r4, r0, #0
   12900:	beq	129f0 <__assert_fail@plt+0x1124>
   12904:	ldr	r0, [sp, #4]
   12908:	bl	11554 <context_new@plt>
   1290c:	subs	r6, r0, #0
   12910:	beq	129c8 <__assert_fail@plt+0x10fc>
   12914:	mov	r0, r4
   12918:	bl	114dc <context_type_get@plt>
   1291c:	subs	r1, r0, #0
   12920:	beq	129c8 <__assert_fail@plt+0x10fc>
   12924:	mov	r0, r6
   12928:	bl	11584 <context_type_set@plt>
   1292c:	cmp	r0, #0
   12930:	bne	129c8 <__assert_fail@plt+0x10fc>
   12934:	mov	r0, r6
   12938:	bl	1183c <context_str@plt>
   1293c:	cmp	r0, #0
   12940:	beq	129c8 <__assert_fail@plt+0x10fc>
   12944:	bl	11710 <setfscreatecon@plt>
   12948:	ldr	r5, [r8]
   1294c:	mov	r9, r0
   12950:	mov	r0, r4
   12954:	bl	1168c <context_free@plt>
   12958:	mov	r0, r6
   1295c:	bl	1168c <context_free@plt>
   12960:	ldr	r0, [sp]
   12964:	bl	1180c <freecon@plt>
   12968:	ldr	r0, [sp, #4]
   1296c:	bl	1180c <freecon@plt>
   12970:	mov	r0, r7
   12974:	bl	13688 <__assert_fail@plt+0x1dbc>
   12978:	mov	r0, r9
   1297c:	str	r5, [r8]
   12980:	add	sp, sp, #20
   12984:	ldrd	r4, [sp]
   12988:	ldrd	r6, [sp, #8]
   1298c:	ldrd	r8, [sp, #16]
   12990:	add	sp, sp, #24
   12994:	pop	{pc}		; (ldr pc, [sp], #4)
   12998:	ldr	r5, [r8]
   1299c:	mov	r0, r4
   129a0:	mov	r6, #0
   129a4:	bl	13688 <__assert_fail@plt+0x1dbc>
   129a8:	ldr	r0, [sp, #8]
   129ac:	mov	r4, r6
   129b0:	mvn	r9, #0
   129b4:	bl	1180c <freecon@plt>
   129b8:	ldr	r0, [sp, #12]
   129bc:	bl	1180c <freecon@plt>
   129c0:	str	r5, [r8]
   129c4:	b	12950 <__assert_fail@plt+0x1084>
   129c8:	mvn	r9, #0
   129cc:	ldr	r5, [r8]
   129d0:	b	12950 <__assert_fail@plt+0x1084>
   129d4:	ldr	r5, [r8]
   129d8:	cmp	r5, #2
   129dc:	beq	12a00 <__assert_fail@plt+0x1134>
   129e0:	mov	r4, #0
   129e4:	mvn	r9, #0
   129e8:	mov	r6, r4
   129ec:	b	12950 <__assert_fail@plt+0x1084>
   129f0:	mov	r6, r4
   129f4:	mvn	r9, #0
   129f8:	ldr	r5, [r8]
   129fc:	b	12950 <__assert_fail@plt+0x1084>
   12a00:	mov	r3, #61	; 0x3d
   12a04:	mov	r4, #0
   12a08:	mov	r5, r3
   12a0c:	mov	r6, r4
   12a10:	mvn	r9, #0
   12a14:	str	r3, [r8]
   12a18:	b	12950 <__assert_fail@plt+0x1084>
   12a1c:	mov	r6, r4
   12a20:	mvn	r9, #0
   12a24:	ldr	r5, [r8]
   12a28:	b	12950 <__assert_fail@plt+0x1084>
   12a2c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12a30:	mov	r4, r1
   12a34:	mov	r5, r2
   12a38:	strd	r6, [sp, #8]
   12a3c:	mov	r6, r0
   12a40:	str	r8, [sp, #16]
   12a44:	str	lr, [sp, #20]
   12a48:	sub	sp, sp, #8
   12a4c:	ldrb	r3, [r1]
   12a50:	cmp	r3, #47	; 0x2f
   12a54:	moveq	r8, #0
   12a58:	bne	12afc <__assert_fail@plt+0x1230>
   12a5c:	bl	1171c <__errno_location@plt>
   12a60:	cmp	r5, #0
   12a64:	mov	r7, r0
   12a68:	beq	12b24 <__assert_fail@plt+0x1258>
   12a6c:	mov	r2, #0
   12a70:	mov	r1, #16
   12a74:	str	r4, [sp]
   12a78:	mov	r0, sp
   12a7c:	mov	r4, r2
   12a80:	str	r2, [sp, #4]
   12a84:	bl	1c9a4 <lchmod@@Base+0x535c>
   12a88:	mov	r5, r0
   12a8c:	b	12aa0 <__assert_fail@plt+0x11d4>
   12a90:	ldr	r1, [r5, #24]
   12a94:	bl	12568 <__assert_fail@plt+0xc9c>
   12a98:	cmp	r0, #0
   12a9c:	ldrlt	r4, [r7]
   12aa0:	mov	r0, r5
   12aa4:	bl	15330 <__assert_fail@plt+0x3a64>
   12aa8:	cmp	r0, #0
   12aac:	mov	r0, r6
   12ab0:	bne	12a90 <__assert_fail@plt+0x11c4>
   12ab4:	ldr	r3, [r7]
   12ab8:	mov	r0, r5
   12abc:	cmp	r3, #0
   12ac0:	movne	r4, r3
   12ac4:	bl	15128 <__assert_fail@plt+0x385c>
   12ac8:	cmp	r0, #0
   12acc:	mov	r0, r8
   12ad0:	ldrne	r4, [r7]
   12ad4:	bl	13688 <__assert_fail@plt+0x1dbc>
   12ad8:	clz	r4, r4
   12adc:	lsr	r4, r4, #5
   12ae0:	mov	r0, r4
   12ae4:	add	sp, sp, #8
   12ae8:	ldrd	r4, [sp]
   12aec:	ldrd	r6, [sp, #8]
   12af0:	ldr	r8, [sp, #16]
   12af4:	add	sp, sp, #20
   12af8:	pop	{pc}		; (ldr pc, [sp], #4)
   12afc:	mov	r0, r1
   12b00:	mov	r1, #2
   12b04:	bl	12b4c <__assert_fail@plt+0x1280>
   12b08:	subs	r4, r0, #0
   12b0c:	movne	r8, r4
   12b10:	beq	12ae0 <__assert_fail@plt+0x1214>
   12b14:	bl	1171c <__errno_location@plt>
   12b18:	cmp	r5, #0
   12b1c:	mov	r7, r0
   12b20:	bne	12a6c <__assert_fail@plt+0x11a0>
   12b24:	mov	r1, r4
   12b28:	mov	r0, r6
   12b2c:	bl	12568 <__assert_fail@plt+0xc9c>
   12b30:	ldr	r5, [r7]
   12b34:	adds	r4, r0, #1
   12b38:	mov	r0, r8
   12b3c:	movne	r4, #1
   12b40:	bl	13688 <__assert_fail@plt+0x1dbc>
   12b44:	str	r5, [r7]
   12b48:	b	12ae0 <__assert_fail@plt+0x1214>
   12b4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12b50:	strd	r6, [sp, #8]
   12b54:	strd	sl, [sp, #24]
   12b58:	and	fp, r1, #3
   12b5c:	sub	r3, fp, #1
   12b60:	strd	r8, [sp, #16]
   12b64:	tst	r3, fp
   12b68:	str	lr, [sp, #32]
   12b6c:	sub	sp, sp, #3248	; 0xcb0
   12b70:	sub	sp, sp, #4
   12b74:	bne	12c90 <__assert_fail@plt+0x13c4>
   12b78:	cmp	r0, #0
   12b7c:	mov	r5, r0
   12b80:	beq	12c90 <__assert_fail@plt+0x13c4>
   12b84:	ldrb	r9, [r0]
   12b88:	cmp	r9, #0
   12b8c:	beq	13064 <__assert_fail@plt+0x1798>
   12b90:	add	r3, sp, #1184	; 0x4a0
   12b94:	cmp	r9, #47	; 0x2f
   12b98:	add	r3, r3, #8
   12b9c:	mov	r6, r1
   12ba0:	addne	r4, sp, #160	; 0xa0
   12ba4:	mov	r1, #1024	; 0x400
   12ba8:	str	r3, [sp, #1184]	; 0x4a0
   12bac:	add	r3, sp, #160	; 0xa0
   12bb0:	str	r3, [sp, #152]	; 0x98
   12bb4:	add	r3, sp, #2224	; 0x8b0
   12bb8:	str	r1, [sp, #156]	; 0x9c
   12bbc:	str	r1, [sp, #1188]	; 0x4a4
   12bc0:	str	r3, [sp, #2216]	; 0x8a8
   12bc4:	movne	r3, r4
   12bc8:	subne	r7, r3, #8
   12bcc:	str	r1, [sp, #2220]	; 0x8ac
   12bd0:	beq	12ca4 <__assert_fail@plt+0x13d8>
   12bd4:	mov	r0, r4
   12bd8:	bl	116bc <getcwd@plt>
   12bdc:	cmp	r0, #0
   12be0:	bne	131f0 <__assert_fail@plt+0x1924>
   12be4:	bl	1171c <__errno_location@plt>
   12be8:	ldr	r3, [r0]
   12bec:	cmp	r3, #12
   12bf0:	beq	131b4 <__assert_fail@plt+0x18e8>
   12bf4:	cmp	r3, #34	; 0x22
   12bf8:	beq	12c74 <__assert_fail@plt+0x13a8>
   12bfc:	mov	r6, r4
   12c00:	mov	r7, #1
   12c04:	ldr	r0, [sp, #1184]	; 0x4a0
   12c08:	add	r3, sp, #1184	; 0x4a0
   12c0c:	add	r3, r3, #8
   12c10:	cmp	r0, r3
   12c14:	beq	12c1c <__assert_fail@plt+0x1350>
   12c18:	bl	13688 <__assert_fail@plt+0x1dbc>
   12c1c:	ldr	r0, [sp, #2216]	; 0x8a8
   12c20:	add	r3, sp, #2224	; 0x8b0
   12c24:	cmp	r0, r3
   12c28:	beq	12c30 <__assert_fail@plt+0x1364>
   12c2c:	bl	13688 <__assert_fail@plt+0x1dbc>
   12c30:	cmp	r7, #0
   12c34:	bne	13044 <__assert_fail@plt+0x1778>
   12c38:	add	r0, sp, #152	; 0x98
   12c3c:	strb	r7, [r4], #1
   12c40:	sub	r1, r4, r6
   12c44:	bl	1b8a0 <lchmod@@Base+0x4258>
   12c48:	subs	r9, r0, #0
   12c4c:	beq	131b4 <__assert_fail@plt+0x18e8>
   12c50:	mov	r0, r9
   12c54:	add	sp, sp, #3248	; 0xcb0
   12c58:	add	sp, sp, #4
   12c5c:	ldrd	r4, [sp]
   12c60:	ldrd	r6, [sp, #8]
   12c64:	ldrd	r8, [sp, #16]
   12c68:	ldrd	sl, [sp, #24]
   12c6c:	add	sp, sp, #32
   12c70:	pop	{pc}		; (ldr pc, [sp], #4)
   12c74:	mov	r0, r7
   12c78:	bl	1b910 <lchmod@@Base+0x42c8>
   12c7c:	cmp	r0, #0
   12c80:	beq	131b4 <__assert_fail@plt+0x18e8>
   12c84:	ldr	r4, [sp, #152]	; 0x98
   12c88:	ldr	r1, [sp, #156]	; 0x9c
   12c8c:	b	12bd4 <__assert_fail@plt+0x1308>
   12c90:	bl	1171c <__errno_location@plt>
   12c94:	mov	r3, #22
   12c98:	mov	r9, #0
   12c9c:	str	r3, [r0]
   12ca0:	b	12c50 <__assert_fail@plt+0x1384>
   12ca4:	and	r3, r6, #4
   12ca8:	add	r4, sp, #161	; 0xa1
   12cac:	str	r3, [sp, #12]
   12cb0:	add	r3, sp, #160	; 0xa0
   12cb4:	mov	r6, r3
   12cb8:	strb	r9, [sp, #160]	; 0xa0
   12cbc:	mov	r3, #0
   12cc0:	movw	r2, #60504	; 0xec58
   12cc4:	movt	r2, #1
   12cc8:	str	fp, [sp, #16]
   12ccc:	str	r3, [sp, #20]
   12cd0:	strd	r2, [sp, #24]
   12cd4:	str	r3, [sp, #32]
   12cd8:	movw	r3, #60064	; 0xeaa0
   12cdc:	movt	r3, #1
   12ce0:	str	r3, [sp, #36]	; 0x24
   12ce4:	movw	r3, #30036	; 0x7554
   12ce8:	movt	r3, #1
   12cec:	str	r3, [sp, #40]	; 0x28
   12cf0:	cmp	r9, #47	; 0x2f
   12cf4:	movne	r3, r9
   12cf8:	movne	r7, r5
   12cfc:	bne	12d18 <__assert_fail@plt+0x144c>
   12d00:	ldrb	r3, [r5, #1]!
   12d04:	cmp	r3, #47	; 0x2f
   12d08:	beq	12d00 <__assert_fail@plt+0x1434>
   12d0c:	cmp	r3, #0
   12d10:	beq	12e90 <__assert_fail@plt+0x15c4>
   12d14:	mov	r7, r5
   12d18:	mov	r8, r5
   12d1c:	ldrb	r9, [r5, #1]!
   12d20:	cmp	r9, #0
   12d24:	cmpne	r9, #47	; 0x2f
   12d28:	bne	12d18 <__assert_fail@plt+0x144c>
   12d2c:	subs	sl, r5, r7
   12d30:	beq	12e90 <__assert_fail@plt+0x15c4>
   12d34:	cmp	sl, #1
   12d38:	beq	12eb8 <__assert_fail@plt+0x15ec>
   12d3c:	cmp	r3, #46	; 0x2e
   12d40:	cmpeq	sl, #2
   12d44:	beq	12ecc <__assert_fail@plt+0x1600>
   12d48:	ldrb	r3, [r4, #-1]
   12d4c:	cmp	r3, #47	; 0x2f
   12d50:	beq	12d5c <__assert_fail@plt+0x1490>
   12d54:	mov	r3, #47	; 0x2f
   12d58:	strb	r3, [r4], #1
   12d5c:	ldr	r3, [sp, #156]	; 0x9c
   12d60:	add	r9, sl, #2
   12d64:	add	r3, r6, r3
   12d68:	sub	r3, r3, r4
   12d6c:	cmp	r3, r9
   12d70:	bcs	12da0 <__assert_fail@plt+0x14d4>
   12d74:	add	r0, sp, #152	; 0x98
   12d78:	sub	r4, r4, r6
   12d7c:	bl	1b9a4 <lchmod@@Base+0x435c>
   12d80:	cmp	r0, #0
   12d84:	beq	131b4 <__assert_fail@plt+0x18e8>
   12d88:	ldr	r6, [sp, #152]	; 0x98
   12d8c:	ldr	r3, [sp, #156]	; 0x9c
   12d90:	sub	r3, r3, r4
   12d94:	add	r4, r6, r4
   12d98:	cmp	r3, r9
   12d9c:	bcc	12d74 <__assert_fail@plt+0x14a8>
   12da0:	mov	r2, sl
   12da4:	mov	r0, r4
   12da8:	mov	r1, r7
   12dac:	bl	11698 <mempcpy@plt>
   12db0:	ldr	r2, [sp, #12]
   12db4:	mov	r3, #0
   12db8:	mov	r4, r0
   12dbc:	strb	r3, [r0]
   12dc0:	cmp	r2, r3
   12dc4:	beq	12f04 <__assert_fail@plt+0x1638>
   12dc8:	ldr	r3, [sp, #16]
   12dcc:	ldrb	r9, [r8, #1]
   12dd0:	cmp	r3, #2
   12dd4:	beq	12e88 <__assert_fail@plt+0x15bc>
   12dd8:	cmp	r9, #47	; 0x2f
   12ddc:	bne	12e2c <__assert_fail@plt+0x1560>
   12de0:	mov	r3, r5
   12de4:	ldrb	r2, [r3, #1]
   12de8:	add	r0, r3, #1
   12dec:	cmp	r2, #47	; 0x2f
   12df0:	moveq	r3, r0
   12df4:	beq	12de4 <__assert_fail@plt+0x1518>
   12df8:	cmp	r2, #0
   12dfc:	add	r3, r3, #2
   12e00:	beq	12ff0 <__assert_fail@plt+0x1724>
   12e04:	cmp	r2, #46	; 0x2e
   12e08:	bne	12e2c <__assert_fail@plt+0x1560>
   12e0c:	ldrb	r2, [r0, #1]
   12e10:	cmp	r2, #0
   12e14:	beq	12ff0 <__assert_fail@plt+0x1724>
   12e18:	cmp	r2, #46	; 0x2e
   12e1c:	beq	13140 <__assert_fail@plt+0x1874>
   12e20:	cmp	r2, #47	; 0x2f
   12e24:	beq	12de4 <__assert_fail@plt+0x1518>
   12e28:	b	13150 <__assert_fail@plt+0x1884>
   12e2c:	ldr	r3, [sp, #12]
   12e30:	cmp	r3, #0
   12e34:	bne	1301c <__assert_fail@plt+0x1750>
   12e38:	bl	1171c <__errno_location@plt>
   12e3c:	ldr	r7, [r0]
   12e40:	subs	r7, r7, #22
   12e44:	movne	r7, #1
   12e48:	cmp	r7, #0
   12e4c:	beq	12e84 <__assert_fail@plt+0x15b8>
   12e50:	ldr	r3, [sp, #16]
   12e54:	cmp	r3, #1
   12e58:	bne	12ea0 <__assert_fail@plt+0x15d4>
   12e5c:	bl	1171c <__errno_location@plt>
   12e60:	ldr	r3, [r0]
   12e64:	cmp	r3, #2
   12e68:	bne	12ea0 <__assert_fail@plt+0x15d4>
   12e6c:	mov	r0, r5
   12e70:	ldr	r1, [sp, #24]
   12e74:	bl	118c0 <strspn@plt>
   12e78:	ldrb	r3, [r5, r0]
   12e7c:	cmp	r3, #0
   12e80:	bne	12ea0 <__assert_fail@plt+0x15d4>
   12e84:	ldrb	r9, [r8, #1]
   12e88:	cmp	r9, #0
   12e8c:	bne	12cf0 <__assert_fail@plt+0x1424>
   12e90:	add	r3, r6, #1
   12e94:	cmp	r4, r3
   12e98:	bhi	131d8 <__assert_fail@plt+0x190c>
   12e9c:	mov	r7, #0
   12ea0:	ldr	r3, [sp, #20]
   12ea4:	cmp	r3, #0
   12ea8:	beq	12c04 <__assert_fail@plt+0x1338>
   12eac:	mov	r0, r3
   12eb0:	bl	16a14 <__assert_fail@plt+0x5148>
   12eb4:	b	12c04 <__assert_fail@plt+0x1338>
   12eb8:	cmp	r3, #46	; 0x2e
   12ebc:	bne	12d48 <__assert_fail@plt+0x147c>
   12ec0:	cmp	r9, #0
   12ec4:	bne	12cf0 <__assert_fail@plt+0x1424>
   12ec8:	b	12e90 <__assert_fail@plt+0x15c4>
   12ecc:	ldrb	r3, [r7, #1]
   12ed0:	cmp	r3, #46	; 0x2e
   12ed4:	bne	12d48 <__assert_fail@plt+0x147c>
   12ed8:	add	r3, r6, #1
   12edc:	cmp	r4, r3
   12ee0:	bls	12e88 <__assert_fail@plt+0x15bc>
   12ee4:	sub	r3, r4, #1
   12ee8:	cmp	r3, r6
   12eec:	bls	12efc <__assert_fail@plt+0x1630>
   12ef0:	ldrb	r2, [r4, #-2]
   12ef4:	cmp	r2, #47	; 0x2f
   12ef8:	bne	131b8 <__assert_fail@plt+0x18ec>
   12efc:	mov	r4, r3
   12f00:	b	12e88 <__assert_fail@plt+0x15bc>
   12f04:	add	r3, sp, #2224	; 0x8b0
   12f08:	sub	r9, r3, #8
   12f0c:	b	12f20 <__assert_fail@plt+0x1654>
   12f10:	mov	r0, r9
   12f14:	bl	1b910 <lchmod@@Base+0x42c8>
   12f18:	cmp	r0, #0
   12f1c:	beq	131b4 <__assert_fail@plt+0x18e8>
   12f20:	ldr	sl, [sp, #2216]	; 0x8a8
   12f24:	mov	r0, r6
   12f28:	ldr	fp, [sp, #2220]	; 0x8ac
   12f2c:	mov	r1, sl
   12f30:	sub	fp, fp, #1
   12f34:	mov	r2, fp
   12f38:	bl	115e4 <readlink@plt>
   12f3c:	cmp	fp, r0
   12f40:	ble	12f10 <__assert_fail@plt+0x1644>
   12f44:	cmp	r0, #0
   12f48:	mov	r9, r0
   12f4c:	blt	12dc8 <__assert_fail@plt+0x14fc>
   12f50:	ldr	r3, [sp, #32]
   12f54:	cmp	r3, #19
   12f58:	addle	r3, r3, #1
   12f5c:	strle	r3, [sp, #32]
   12f60:	ble	13084 <__assert_fail@plt+0x17b8>
   12f64:	ldrb	r3, [r7]
   12f68:	cmp	r3, #0
   12f6c:	beq	13084 <__assert_fail@plt+0x17b8>
   12f70:	mov	r3, #0
   12f74:	sub	fp, r7, r5
   12f78:	mov	r0, #3
   12f7c:	add	r2, sp, #48	; 0x30
   12f80:	strb	r3, [r4, fp]
   12f84:	ldrb	r1, [r6]
   12f88:	ldr	r3, [sp, #36]	; 0x24
   12f8c:	cmp	r1, #0
   12f90:	movne	r3, r6
   12f94:	mov	r1, r3
   12f98:	bl	11854 <__xstat64@plt>
   12f9c:	cmp	r0, #0
   12fa0:	bne	12fe8 <__assert_fail@plt+0x171c>
   12fa4:	ldr	r2, [sp, #20]
   12fa8:	ldrb	r3, [r7]
   12fac:	cmp	r2, #0
   12fb0:	strb	r3, [r4, fp]
   12fb4:	beq	13184 <__assert_fail@plt+0x18b8>
   12fb8:	add	r2, sp, #48	; 0x30
   12fbc:	mov	r1, r7
   12fc0:	ldr	r0, [sp, #20]
   12fc4:	bl	13634 <__assert_fail@plt+0x1d68>
   12fc8:	cmp	r0, #0
   12fcc:	beq	13074 <__assert_fail@plt+0x17a8>
   12fd0:	ldr	r3, [sp, #16]
   12fd4:	cmp	r3, #2
   12fd8:	beq	12e84 <__assert_fail@plt+0x15b8>
   12fdc:	bl	1171c <__errno_location@plt>
   12fe0:	mov	r3, #40	; 0x28
   12fe4:	str	r3, [r0]
   12fe8:	mov	r7, #1
   12fec:	b	12ea0 <__assert_fail@plt+0x15d4>
   12ff0:	ldr	r3, [sp, #24]
   12ff4:	mov	r2, #0
   12ff8:	mov	r1, r6
   12ffc:	mvn	r0, #99	; 0x63
   13000:	ldrh	ip, [r3]
   13004:	mov	r3, #512	; 0x200
   13008:	strh	ip, [r4]
   1300c:	bl	11518 <faccessat@plt>
   13010:	adds	r7, r0, #0
   13014:	movne	r7, #1
   13018:	b	12e48 <__assert_fail@plt+0x157c>
   1301c:	cmp	r9, #0
   13020:	bne	12e88 <__assert_fail@plt+0x15bc>
   13024:	mov	r2, r9
   13028:	mov	r3, #512	; 0x200
   1302c:	mov	r1, r6
   13030:	mvn	r0, #99	; 0x63
   13034:	bl	11518 <faccessat@plt>
   13038:	adds	r7, r0, #0
   1303c:	movne	r7, #1
   13040:	b	12e48 <__assert_fail@plt+0x157c>
   13044:	ldr	r0, [sp, #152]	; 0x98
   13048:	add	r3, sp, #160	; 0xa0
   1304c:	cmp	r0, r3
   13050:	moveq	r9, #0
   13054:	beq	12c50 <__assert_fail@plt+0x1384>
   13058:	bl	13688 <__assert_fail@plt+0x1dbc>
   1305c:	mov	r9, #0
   13060:	b	12c50 <__assert_fail@plt+0x1384>
   13064:	bl	1171c <__errno_location@plt>
   13068:	mov	r3, #2
   1306c:	str	r3, [r0]
   13070:	b	12c50 <__assert_fail@plt+0x1384>
   13074:	add	r2, sp, #48	; 0x30
   13078:	mov	r1, r7
   1307c:	ldr	r0, [sp, #20]
   13080:	bl	1359c <__assert_fail@plt+0x1cd0>
   13084:	ldr	r2, [sp, #28]
   13088:	mov	r3, #0
   1308c:	mov	r0, r5
   13090:	strb	r3, [sl, r9]
   13094:	ldr	fp, [sp, #1184]	; 0x4a0
   13098:	cmp	r2, r3
   1309c:	beq	13160 <__assert_fail@plt+0x1894>
   130a0:	sub	r3, r5, fp
   130a4:	str	r3, [sp, #44]	; 0x2c
   130a8:	bl	116e0 <strlen@plt>
   130ac:	ldr	r2, [sp, #1188]	; 0x4a4
   130b0:	add	r7, r0, r9
   130b4:	mov	r8, r0
   130b8:	cmp	r7, r2
   130bc:	bcc	130ec <__assert_fail@plt+0x1820>
   130c0:	add	r0, sp, #1184	; 0x4a0
   130c4:	bl	1b9a4 <lchmod@@Base+0x435c>
   130c8:	cmp	r0, #0
   130cc:	beq	131b4 <__assert_fail@plt+0x18e8>
   130d0:	ldr	r3, [sp, #1188]	; 0x4a4
   130d4:	cmp	r3, r7
   130d8:	bls	130c0 <__assert_fail@plt+0x17f4>
   130dc:	ldr	r3, [sp, #28]
   130e0:	ldr	fp, [sp, #1184]	; 0x4a0
   130e4:	cmp	r3, #0
   130e8:	beq	130f4 <__assert_fail@plt+0x1828>
   130ec:	ldr	r3, [sp, #44]	; 0x2c
   130f0:	add	r5, fp, r3
   130f4:	mov	r1, r5
   130f8:	add	r2, r8, #1
   130fc:	add	r0, fp, r9
   13100:	bl	11500 <memmove@plt>
   13104:	mov	r2, r9
   13108:	mov	r1, sl
   1310c:	mov	r0, fp
   13110:	bl	11530 <memcpy@plt>
   13114:	ldrb	r3, [sl]
   13118:	mov	r5, r0
   1311c:	add	r2, r6, #1
   13120:	cmp	r3, #47	; 0x2f
   13124:	beq	1327c <__assert_fail@plt+0x19b0>
   13128:	cmp	r4, r2
   1312c:	ldrb	r9, [r0]
   13130:	bhi	13240 <__assert_fail@plt+0x1974>
   13134:	mov	r3, #1
   13138:	str	r3, [sp, #28]
   1313c:	b	12e88 <__assert_fail@plt+0x15bc>
   13140:	ldrb	r3, [r0, #2]
   13144:	cmp	r3, #47	; 0x2f
   13148:	cmpne	r3, #0
   1314c:	beq	12ff0 <__assert_fail@plt+0x1724>
   13150:	ldr	r3, [sp, #12]
   13154:	cmp	r3, #0
   13158:	beq	12e38 <__assert_fail@plt+0x156c>
   1315c:	b	12e88 <__assert_fail@plt+0x15bc>
   13160:	bl	116e0 <strlen@plt>
   13164:	ldr	r2, [sp, #1188]	; 0x4a4
   13168:	add	r7, r9, r0
   1316c:	mov	r8, r0
   13170:	cmp	r7, r2
   13174:	bcc	130f4 <__assert_fail@plt+0x1828>
   13178:	ldr	r3, [sp, #28]
   1317c:	str	r3, [sp, #44]	; 0x2c
   13180:	b	130c0 <__assert_fail@plt+0x17f4>
   13184:	ldr	ip, [sp, #40]	; 0x28
   13188:	mov	r1, r2
   1318c:	movw	r3, #29928	; 0x74e8
   13190:	movt	r3, #1
   13194:	movw	r2, #29856	; 0x74a0
   13198:	movt	r2, #1
   1319c:	mov	r0, #7
   131a0:	str	ip, [sp]
   131a4:	bl	166d4 <__assert_fail@plt+0x4e08>
   131a8:	subs	r3, r0, #0
   131ac:	str	r3, [sp, #20]
   131b0:	bne	12fb8 <__assert_fail@plt+0x16ec>
   131b4:	bl	1c960 <lchmod@@Base+0x5318>
   131b8:	sub	r3, r4, #2
   131bc:	cmp	r3, r6
   131c0:	mov	r4, r3
   131c4:	beq	12e88 <__assert_fail@plt+0x15bc>
   131c8:	ldrb	r2, [r3, #-1]!
   131cc:	cmp	r2, #47	; 0x2f
   131d0:	beq	12e88 <__assert_fail@plt+0x15bc>
   131d4:	b	131bc <__assert_fail@plt+0x18f0>
   131d8:	ldrb	r3, [r4, #-1]
   131dc:	cmp	r3, #47	; 0x2f
   131e0:	bne	12e9c <__assert_fail@plt+0x15d0>
   131e4:	sub	r4, r4, #1
   131e8:	mov	r7, #0
   131ec:	b	12ea0 <__assert_fail@plt+0x15d4>
   131f0:	mov	r0, r4
   131f4:	mov	r1, #0
   131f8:	bl	115b4 <rawmemchr@plt>
   131fc:	ldrb	r9, [r5]
   13200:	and	r3, r6, #4
   13204:	str	r3, [sp, #12]
   13208:	cmp	r9, #0
   1320c:	movne	r6, r4
   13210:	movne	r4, r0
   13214:	bne	12cbc <__assert_fail@plt+0x13f0>
   13218:	add	r3, r4, #1
   1321c:	cmp	r0, r3
   13220:	bls	13230 <__assert_fail@plt+0x1964>
   13224:	ldrb	r3, [r0, #-1]
   13228:	cmp	r3, #47	; 0x2f
   1322c:	beq	132a4 <__assert_fail@plt+0x19d8>
   13230:	mov	r6, r4
   13234:	mov	r7, r9
   13238:	mov	r4, r0
   1323c:	b	12c04 <__assert_fail@plt+0x1338>
   13240:	sub	r3, r4, #1
   13244:	cmp	r3, r6
   13248:	bls	13294 <__assert_fail@plt+0x19c8>
   1324c:	ldrb	r2, [r4, #-2]
   13250:	cmp	r2, #47	; 0x2f
   13254:	beq	13294 <__assert_fail@plt+0x19c8>
   13258:	sub	r3, r4, #2
   1325c:	cmp	r6, r3
   13260:	mov	r4, r3
   13264:	beq	13134 <__assert_fail@plt+0x1868>
   13268:	ldrb	r2, [r3, #-1]
   1326c:	sub	r3, r3, #1
   13270:	cmp	r2, #47	; 0x2f
   13274:	beq	13134 <__assert_fail@plt+0x1868>
   13278:	b	1325c <__assert_fail@plt+0x1990>
   1327c:	mov	r4, r2
   13280:	mov	r2, #1
   13284:	strb	r3, [r6]
   13288:	ldrb	r9, [r0]
   1328c:	str	r2, [sp, #28]
   13290:	b	12e88 <__assert_fail@plt+0x15bc>
   13294:	mov	r4, r3
   13298:	mov	r3, #1
   1329c:	str	r3, [sp, #28]
   132a0:	b	12e88 <__assert_fail@plt+0x15bc>
   132a4:	mov	r6, r4
   132a8:	mov	r4, r0
   132ac:	str	r9, [sp, #20]
   132b0:	b	131e4 <__assert_fail@plt+0x1918>
   132b4:	movw	r3, #496	; 0x1f0
   132b8:	movt	r3, #3
   132bc:	str	r0, [r3]
   132c0:	bx	lr
   132c4:	movw	r3, #496	; 0x1f0
   132c8:	movt	r3, #3
   132cc:	strb	r0, [r3, #4]
   132d0:	bx	lr
   132d4:	movw	r3, #484	; 0x1e4
   132d8:	movt	r3, #3
   132dc:	strd	r4, [sp, #-16]!
   132e0:	ldr	r0, [r3]
   132e4:	str	r6, [sp, #8]
   132e8:	str	lr, [sp, #12]
   132ec:	sub	sp, sp, #8
   132f0:	bl	1d96c <lchmod@@Base+0x6324>
   132f4:	cmp	r0, #0
   132f8:	beq	13324 <__assert_fail@plt+0x1a58>
   132fc:	movw	r4, #496	; 0x1f0
   13300:	movt	r4, #3
   13304:	ldrb	r6, [r4, #4]
   13308:	bl	1171c <__errno_location@plt>
   1330c:	mov	r5, r0
   13310:	cmp	r6, #0
   13314:	beq	13350 <__assert_fail@plt+0x1a84>
   13318:	ldr	r3, [r0]
   1331c:	cmp	r3, #32
   13320:	bne	13350 <__assert_fail@plt+0x1a84>
   13324:	movw	r3, #480	; 0x1e0
   13328:	movt	r3, #3
   1332c:	ldr	r0, [r3]
   13330:	bl	1d96c <lchmod@@Base+0x6324>
   13334:	cmp	r0, #0
   13338:	bne	13398 <__assert_fail@plt+0x1acc>
   1333c:	add	sp, sp, #8
   13340:	ldrd	r4, [sp]
   13344:	ldr	r6, [sp, #8]
   13348:	add	sp, sp, #12
   1334c:	pop	{pc}		; (ldr pc, [sp], #4)
   13350:	movw	r1, #60508	; 0xec5c
   13354:	movt	r1, #1
   13358:	mov	r2, #5
   1335c:	mov	r0, #0
   13360:	bl	11578 <dcgettext@plt>
   13364:	mov	r6, r0
   13368:	ldr	r0, [r4]
   1336c:	cmp	r0, #0
   13370:	beq	133a8 <__assert_fail@plt+0x1adc>
   13374:	ldr	r4, [r5]
   13378:	bl	1ab90 <lchmod@@Base+0x3548>
   1337c:	mov	r3, r0
   13380:	movw	r2, #60520	; 0xec68
   13384:	movt	r2, #1
   13388:	mov	r0, #0
   1338c:	str	r6, [sp]
   13390:	mov	r1, r4
   13394:	bl	11638 <error@plt>
   13398:	movw	r3, #396	; 0x18c
   1339c:	movt	r3, #3
   133a0:	ldr	r0, [r3]
   133a4:	bl	11524 <_exit@plt>
   133a8:	mov	r3, r6
   133ac:	movw	r2, #60524	; 0xec6c
   133b0:	movt	r2, #1
   133b4:	ldr	r1, [r5]
   133b8:	bl	11638 <error@plt>
   133bc:	b	13398 <__assert_fail@plt+0x1acc>
   133c0:	str	r4, [sp, #-8]!
   133c4:	str	lr, [sp, #4]
   133c8:	bl	13484 <__assert_fail@plt+0x1bb8>
   133cc:	cmp	r0, #0
   133d0:	beq	133e0 <__assert_fail@plt+0x1b14>
   133d4:	ldr	r4, [sp]
   133d8:	add	sp, sp, #4
   133dc:	pop	{pc}		; (ldr pc, [sp], #4)
   133e0:	bl	1c960 <lchmod@@Base+0x5318>
   133e4:	strd	r4, [sp, #-16]!
   133e8:	mov	r4, r0
   133ec:	str	r6, [sp, #8]
   133f0:	str	lr, [sp, #12]
   133f4:	ldrb	ip, [r0]
   133f8:	sub	r5, ip, #47	; 0x2f
   133fc:	clz	r5, r5
   13400:	bl	1d898 <lchmod@@Base+0x6250>
   13404:	lsr	r5, r5, #5
   13408:	sub	r0, r0, r4
   1340c:	cmp	r0, r5
   13410:	bls	1346c <__assert_fail@plt+0x1ba0>
   13414:	sub	r3, r0, #1
   13418:	ldrb	r2, [r4, r3]
   1341c:	cmp	r2, #47	; 0x2f
   13420:	bne	1346c <__assert_fail@plt+0x1ba0>
   13424:	cmp	r3, r5
   13428:	bls	1347c <__assert_fail@plt+0x1bb0>
   1342c:	add	r2, r4, r0
   13430:	ldrb	r2, [r2, #-2]
   13434:	cmp	r2, #47	; 0x2f
   13438:	bne	1347c <__assert_fail@plt+0x1bb0>
   1343c:	sub	r0, r0, #3
   13440:	sub	ip, r4, #1
   13444:	add	r3, r4, r0
   13448:	add	ip, ip, r5
   1344c:	rsb	r2, r4, #1
   13450:	b	13460 <__assert_fail@plt+0x1b94>
   13454:	ldrb	r1, [r3], #-1
   13458:	cmp	r1, #47	; 0x2f
   1345c:	bne	1346c <__assert_fail@plt+0x1ba0>
   13460:	cmp	r3, ip
   13464:	add	r0, r2, r3
   13468:	bne	13454 <__assert_fail@plt+0x1b88>
   1346c:	ldrd	r4, [sp]
   13470:	ldr	r6, [sp, #8]
   13474:	add	sp, sp, #12
   13478:	pop	{pc}		; (ldr pc, [sp], #4)
   1347c:	mov	r0, r3
   13480:	b	1346c <__assert_fail@plt+0x1ba0>
   13484:	strd	r4, [sp, #-16]!
   13488:	mov	r5, r0
   1348c:	str	r6, [sp, #8]
   13490:	str	lr, [sp, #12]
   13494:	ldrb	r6, [r0]
   13498:	bl	1d898 <lchmod@@Base+0x6250>
   1349c:	sub	r4, r0, r5
   134a0:	sub	r6, r6, #47	; 0x2f
   134a4:	clz	r6, r6
   134a8:	lsr	r6, r6, #5
   134ac:	cmp	r6, r4
   134b0:	bcs	1350c <__assert_fail@plt+0x1c40>
   134b4:	sub	r3, r4, #1
   134b8:	ldrb	r2, [r5, r3]
   134bc:	cmp	r2, #47	; 0x2f
   134c0:	bne	13564 <__assert_fail@plt+0x1c98>
   134c4:	cmp	r6, r3
   134c8:	bcs	13594 <__assert_fail@plt+0x1cc8>
   134cc:	add	r2, r5, r4
   134d0:	ldrb	r2, [r2, #-2]
   134d4:	cmp	r2, #47	; 0x2f
   134d8:	bne	13560 <__assert_fail@plt+0x1c94>
   134dc:	sub	r4, r4, #3
   134e0:	sub	r2, r5, #1
   134e4:	add	r3, r5, r4
   134e8:	add	r6, r2, r6
   134ec:	rsb	r1, r5, #1
   134f0:	b	13500 <__assert_fail@plt+0x1c34>
   134f4:	ldrb	r2, [r3], #-1
   134f8:	cmp	r2, #47	; 0x2f
   134fc:	bne	13564 <__assert_fail@plt+0x1c98>
   13500:	cmp	r3, r6
   13504:	add	r4, r1, r3
   13508:	bne	134f4 <__assert_fail@plt+0x1c28>
   1350c:	add	r0, r4, #1
   13510:	cmp	r4, #0
   13514:	addeq	r0, r0, #1
   13518:	bl	1d804 <lchmod@@Base+0x61bc>
   1351c:	subs	r6, r0, #0
   13520:	beq	1358c <__assert_fail@plt+0x1cc0>
   13524:	mov	r1, r5
   13528:	mov	r2, r4
   1352c:	bl	11530 <memcpy@plt>
   13530:	cmp	r4, #0
   13534:	bne	13544 <__assert_fail@plt+0x1c78>
   13538:	mov	r3, #46	; 0x2e
   1353c:	mov	r4, #1
   13540:	strb	r3, [r6]
   13544:	mov	r3, #0
   13548:	strb	r3, [r6, r4]
   1354c:	mov	r0, r6
   13550:	ldrd	r4, [sp]
   13554:	ldr	r6, [sp, #8]
   13558:	add	sp, sp, #12
   1355c:	pop	{pc}		; (ldr pc, [sp], #4)
   13560:	mov	r4, r3
   13564:	add	r0, r4, #1
   13568:	cmp	r4, #0
   1356c:	addeq	r0, r0, #1
   13570:	bl	1d804 <lchmod@@Base+0x61bc>
   13574:	subs	r6, r0, #0
   13578:	beq	1358c <__assert_fail@plt+0x1cc0>
   1357c:	mov	r1, r5
   13580:	mov	r2, r4
   13584:	bl	11530 <memcpy@plt>
   13588:	b	13544 <__assert_fail@plt+0x1c78>
   1358c:	mov	r6, #0
   13590:	b	1354c <__assert_fail@plt+0x1c80>
   13594:	mov	r4, r3
   13598:	b	1350c <__assert_fail@plt+0x1c40>
   1359c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   135a0:	strd	r6, [sp, #8]
   135a4:	str	r8, [sp, #16]
   135a8:	subs	r8, r0, #0
   135ac:	str	lr, [sp, #20]
   135b0:	beq	1361c <__assert_fail@plt+0x1d50>
   135b4:	mov	r0, #24
   135b8:	mov	r4, r1
   135bc:	mov	r7, r2
   135c0:	bl	1c3a8 <lchmod@@Base+0x4d60>
   135c4:	mov	r6, r0
   135c8:	mov	r0, r4
   135cc:	bl	1c914 <lchmod@@Base+0x52cc>
   135d0:	ldrd	r4, [r7]
   135d4:	mov	r1, r6
   135d8:	str	r0, [r6]
   135dc:	mov	r0, r8
   135e0:	ldrd	r2, [r7, #96]	; 0x60
   135e4:	strd	r2, [r6, #8]
   135e8:	strd	r4, [r6, #16]
   135ec:	bl	16f3c <__assert_fail@plt+0x5670>
   135f0:	cmp	r0, #0
   135f4:	beq	13630 <__assert_fail@plt+0x1d64>
   135f8:	cmp	r6, r0
   135fc:	beq	1361c <__assert_fail@plt+0x1d50>
   13600:	mov	r0, r6
   13604:	ldrd	r4, [sp]
   13608:	ldrd	r6, [sp, #8]
   1360c:	ldr	r8, [sp, #16]
   13610:	ldr	lr, [sp, #20]
   13614:	add	sp, sp, #24
   13618:	b	17554 <__assert_fail@plt+0x5c88>
   1361c:	ldrd	r4, [sp]
   13620:	ldrd	r6, [sp, #8]
   13624:	ldr	r8, [sp, #16]
   13628:	add	sp, sp, #20
   1362c:	pop	{pc}		; (ldr pc, [sp], #4)
   13630:	bl	1c960 <lchmod@@Base+0x5318>
   13634:	subs	r3, r0, #0
   13638:	beq	13680 <__assert_fail@plt+0x1db4>
   1363c:	mov	r3, r1
   13640:	strd	r4, [sp, #-12]!
   13644:	ldrd	r4, [r2, #96]	; 0x60
   13648:	str	lr, [sp, #8]
   1364c:	sub	sp, sp, #28
   13650:	mov	r1, sp
   13654:	str	r3, [sp]
   13658:	ldrd	r2, [r2]
   1365c:	strd	r4, [sp, #8]
   13660:	strd	r2, [sp, #16]
   13664:	bl	16350 <__assert_fail@plt+0x4a84>
   13668:	adds	r0, r0, #0
   1366c:	movne	r0, #1
   13670:	add	sp, sp, #28
   13674:	ldrd	r4, [sp]
   13678:	add	sp, sp, #8
   1367c:	pop	{pc}		; (ldr pc, [sp], #4)
   13680:	mov	r0, r3
   13684:	bx	lr
   13688:	strd	r4, [sp, #-12]!
   1368c:	mov	r5, r0
   13690:	str	lr, [sp, #8]
   13694:	sub	sp, sp, #12
   13698:	bl	1171c <__errno_location@plt>
   1369c:	mov	r4, r0
   136a0:	mov	r2, #0
   136a4:	ldr	r3, [r4]
   136a8:	mov	r0, r5
   136ac:	str	r2, [r4]
   136b0:	str	r3, [sp]
   136b4:	str	r3, [sp, #4]
   136b8:	bl	1150c <free@plt>
   136bc:	ldr	r3, [r4]
   136c0:	add	r2, sp, #8
   136c4:	clz	r3, r3
   136c8:	lsr	r3, r3, #5
   136cc:	add	r3, r2, r3, lsl #2
   136d0:	ldr	r3, [r3, #-8]
   136d4:	str	r3, [r4]
   136d8:	add	sp, sp, #12
   136dc:	ldrd	r4, [sp]
   136e0:	add	sp, sp, #8
   136e4:	pop	{pc}		; (ldr pc, [sp], #4)
   136e8:	strd	r4, [sp, #-8]!
   136ec:	ldrd	r2, [r1, #8]
   136f0:	ldrd	r4, [r0, #8]
   136f4:	cmp	r5, r3
   136f8:	cmpeq	r4, r2
   136fc:	movne	r0, #0
   13700:	bne	1371c <__assert_fail@plt+0x1e50>
   13704:	ldrd	r4, [r0]
   13708:	ldrd	r2, [r1]
   1370c:	cmp	r5, r3
   13710:	cmpeq	r4, r2
   13714:	moveq	r0, #1
   13718:	movne	r0, #0
   1371c:	ldrd	r4, [sp]
   13720:	add	sp, sp, #8
   13724:	bx	lr
   13728:	mov	r2, r1
   1372c:	mov	r3, #0
   13730:	str	r4, [sp, #-8]!
   13734:	ldrd	r0, [r0, #8]
   13738:	str	lr, [sp, #4]
   1373c:	bl	1e170 <lchmod@@Base+0x6b28>
   13740:	ldr	r4, [sp]
   13744:	add	sp, sp, #4
   13748:	mov	r0, r2
   1374c:	pop	{pc}		; (ldr pc, [sp], #4)
   13750:	mov	r2, r1
   13754:	mov	r3, #0
   13758:	str	r4, [sp, #-8]!
   1375c:	ldrd	r0, [r0]
   13760:	str	lr, [sp, #4]
   13764:	bl	1e170 <lchmod@@Base+0x6b28>
   13768:	ldr	r4, [sp]
   1376c:	add	sp, sp, #4
   13770:	mov	r0, r2
   13774:	pop	{pc}		; (ldr pc, [sp], #4)
   13778:	strd	r4, [sp, #-8]!
   1377c:	ldrd	r2, [r1]
   13780:	ldrd	r4, [r0]
   13784:	cmp	r5, r3
   13788:	cmpeq	r4, r2
   1378c:	ldrd	r4, [sp]
   13790:	add	sp, sp, #8
   13794:	moveq	r0, #1
   13798:	movne	r0, #0
   1379c:	bx	lr
   137a0:	ldr	r2, [r0]
   137a4:	ldr	r3, [r1]
   137a8:	ldrd	r0, [r2, #160]	; 0xa0
   137ac:	ldrd	r2, [r3, #160]	; 0xa0
   137b0:	cmp	r1, r3
   137b4:	cmpeq	r0, r2
   137b8:	movhi	r0, #1
   137bc:	movls	r0, #0
   137c0:	movcc	r3, #1
   137c4:	movcs	r3, #0
   137c8:	sub	r0, r0, r3
   137cc:	bx	lr
   137d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   137d4:	mov	r5, r2
   137d8:	mov	r4, r1
   137dc:	ldr	r2, [r0, #40]	; 0x28
   137e0:	strd	r6, [sp, #8]
   137e4:	mov	r6, r0
   137e8:	str	r8, [sp, #16]
   137ec:	str	lr, [sp, #20]
   137f0:	ldr	r0, [r0, #8]
   137f4:	cmp	r2, r5
   137f8:	ldr	r7, [r6, #44]	; 0x2c
   137fc:	bcs	13824 <__assert_fail@plt+0x1f58>
   13800:	add	r1, r5, #40	; 0x28
   13804:	cmn	r1, #-1073741823	; 0xc0000001
   13808:	str	r1, [r6, #40]	; 0x28
   1380c:	bhi	138a4 <__assert_fail@plt+0x1fd8>
   13810:	lsl	r1, r1, #2
   13814:	bl	1d840 <lchmod@@Base+0x61f8>
   13818:	cmp	r0, #0
   1381c:	strne	r0, [r6, #8]
   13820:	beq	138a0 <__assert_fail@plt+0x1fd4>
   13824:	cmp	r4, #0
   13828:	movne	r2, r0
   1382c:	beq	13840 <__assert_fail@plt+0x1f74>
   13830:	str	r4, [r2], #4
   13834:	ldr	r4, [r4, #8]
   13838:	cmp	r4, #0
   1383c:	bne	13830 <__assert_fail@plt+0x1f64>
   13840:	mov	r3, r7
   13844:	mov	r2, #4
   13848:	mov	r1, r5
   1384c:	bl	11800 <qsort@plt>
   13850:	ldr	lr, [r6, #8]
   13854:	subs	r3, r5, #1
   13858:	ldr	r0, [lr]
   1385c:	moveq	r2, r0
   13860:	beq	13884 <__assert_fail@plt+0x1fb8>
   13864:	mov	r2, lr
   13868:	ldr	r1, [r2]
   1386c:	subs	r3, r3, #1
   13870:	ldr	ip, [r2, #4]!
   13874:	str	ip, [r1, #8]
   13878:	bne	13868 <__assert_fail@plt+0x1f9c>
   1387c:	add	r5, lr, r5, lsl #2
   13880:	ldr	r2, [r5, #-4]
   13884:	mov	r3, #0
   13888:	str	r3, [r2, #8]
   1388c:	ldrd	r4, [sp]
   13890:	ldrd	r6, [sp, #8]
   13894:	ldr	r8, [sp, #16]
   13898:	add	sp, sp, #20
   1389c:	pop	{pc}		; (ldr pc, [sp], #4)
   138a0:	ldr	r0, [r6, #8]
   138a4:	bl	13688 <__assert_fail@plt+0x1dbc>
   138a8:	mov	r3, #0
   138ac:	mov	r0, r4
   138b0:	str	r3, [r6, #8]
   138b4:	str	r3, [r6, #40]	; 0x28
   138b8:	b	1388c <__assert_fail@plt+0x1fc0>
   138bc:	strd	r4, [sp, #-20]!	; 0xffffffec
   138c0:	ldr	r5, [r0, #44]	; 0x2c
   138c4:	ldr	r3, [r5, #48]	; 0x30
   138c8:	strd	r6, [sp, #8]
   138cc:	str	lr, [sp, #16]
   138d0:	sub	sp, sp, #100	; 0x64
   138d4:	tst	r3, #512	; 0x200
   138d8:	beq	13968 <__assert_fail@plt+0x209c>
   138dc:	ldr	r4, [r5, #52]	; 0x34
   138e0:	mov	r7, r1
   138e4:	mov	r6, r0
   138e8:	cmp	r4, #0
   138ec:	beq	13914 <__assert_fail@plt+0x2048>
   138f0:	ldrd	r2, [r6, #64]	; 0x40
   138f4:	add	r1, sp, #8
   138f8:	mov	r0, r4
   138fc:	strd	r2, [sp, #8]
   13900:	bl	16350 <__assert_fail@plt+0x4a84>
   13904:	cmp	r0, #0
   13908:	beq	1394c <__assert_fail@plt+0x2080>
   1390c:	ldr	r0, [r0, #8]
   13910:	b	1396c <__assert_fail@plt+0x20a0>
   13914:	movw	r0, #13960	; 0x3688
   13918:	movt	r0, #1
   1391c:	mov	r1, r4
   13920:	movw	r3, #14200	; 0x3778
   13924:	movt	r3, #1
   13928:	movw	r2, #14160	; 0x3750
   1392c:	movt	r2, #1
   13930:	str	r0, [sp]
   13934:	mov	r0, #13
   13938:	bl	166d4 <__assert_fail@plt+0x4e08>
   1393c:	cmp	r0, #0
   13940:	mov	r4, r0
   13944:	str	r0, [r5, #52]	; 0x34
   13948:	bne	138f0 <__assert_fail@plt+0x2024>
   1394c:	cmp	r7, #0
   13950:	blt	13968 <__assert_fail@plt+0x209c>
   13954:	mov	r0, r7
   13958:	add	r1, sp, #8
   1395c:	bl	11488 <fstatfs64@plt>
   13960:	cmp	r0, #0
   13964:	beq	13980 <__assert_fail@plt+0x20b4>
   13968:	mov	r0, #0
   1396c:	add	sp, sp, #100	; 0x64
   13970:	ldrd	r4, [sp]
   13974:	ldrd	r6, [sp, #8]
   13978:	add	sp, sp, #16
   1397c:	pop	{pc}		; (ldr pc, [sp], #4)
   13980:	cmp	r4, #0
   13984:	beq	139c4 <__assert_fail@plt+0x20f8>
   13988:	mov	r0, #16
   1398c:	bl	1d804 <lchmod@@Base+0x61bc>
   13990:	subs	r5, r0, #0
   13994:	beq	139c4 <__assert_fail@plt+0x20f8>
   13998:	ldr	ip, [sp, #8]
   1399c:	mov	r0, r4
   139a0:	mov	r1, r5
   139a4:	ldrd	r2, [r6, #64]	; 0x40
   139a8:	strd	r2, [r5]
   139ac:	str	ip, [r5, #8]
   139b0:	bl	16f3c <__assert_fail@plt+0x5670>
   139b4:	cmp	r0, #0
   139b8:	beq	139cc <__assert_fail@plt+0x2100>
   139bc:	cmp	r5, r0
   139c0:	bne	139d8 <__assert_fail@plt+0x210c>
   139c4:	ldr	r0, [sp, #8]
   139c8:	b	1396c <__assert_fail@plt+0x20a0>
   139cc:	mov	r0, r5
   139d0:	bl	13688 <__assert_fail@plt+0x1dbc>
   139d4:	b	139c4 <__assert_fail@plt+0x20f8>
   139d8:	bl	11878 <abort@plt>
   139dc:	ldr	ip, [r2, #48]	; 0x30
   139e0:	strd	r4, [sp, #-16]!
   139e4:	mov	r4, r2
   139e8:	add	r5, r2, #64	; 0x40
   139ec:	ldr	r2, [r2, #24]
   139f0:	str	r6, [sp, #8]
   139f4:	str	lr, [sp, #12]
   139f8:	sub	sp, sp, #8
   139fc:	cmp	ip, #0
   13a00:	bne	13a78 <__assert_fail@plt+0x21ac>
   13a04:	tst	r1, #1
   13a08:	beq	13a78 <__assert_fail@plt+0x21ac>
   13a0c:	mov	r1, r2
   13a10:	mov	r0, #3
   13a14:	mov	r2, r5
   13a18:	bl	11854 <__xstat64@plt>
   13a1c:	cmp	r0, #0
   13a20:	beq	13aa4 <__assert_fail@plt+0x21d8>
   13a24:	bl	1171c <__errno_location@plt>
   13a28:	ldr	r3, [r0]
   13a2c:	mov	r6, r0
   13a30:	cmp	r3, #2
   13a34:	bne	13a5c <__assert_fail@plt+0x2190>
   13a38:	mov	r2, r5
   13a3c:	mov	r0, #3
   13a40:	ldr	r1, [r4, #24]
   13a44:	bl	11890 <__lxstat64@plt>
   13a48:	subs	r3, r0, #0
   13a4c:	moveq	r0, #13
   13a50:	streq	r3, [r6]
   13a54:	beq	13ac8 <__assert_fail@plt+0x21fc>
   13a58:	ldr	r3, [r6]
   13a5c:	mov	r0, r5
   13a60:	mov	r2, #104	; 0x68
   13a64:	str	r3, [r4, #32]
   13a68:	mov	r1, #0
   13a6c:	bl	11740 <memset@plt>
   13a70:	mov	r0, #10
   13a74:	b	13ac8 <__assert_fail@plt+0x21fc>
   13a78:	ubfx	ip, r1, #1, #1
   13a7c:	orrs	r3, r3, ip
   13a80:	bne	13a0c <__assert_fail@plt+0x2140>
   13a84:	mov	ip, #256	; 0x100
   13a88:	mov	r1, r0
   13a8c:	mov	r3, r5
   13a90:	mov	r0, #3
   13a94:	str	ip, [sp]
   13a98:	bl	115c0 <__fxstatat64@plt>
   13a9c:	cmp	r0, #0
   13aa0:	bne	13b24 <__assert_fail@plt+0x2258>
   13aa4:	ldr	r3, [r4, #80]	; 0x50
   13aa8:	and	r3, r3, #61440	; 0xf000
   13aac:	cmp	r3, #16384	; 0x4000
   13ab0:	beq	13adc <__assert_fail@plt+0x2210>
   13ab4:	cmp	r3, #40960	; 0xa000
   13ab8:	beq	13b30 <__assert_fail@plt+0x2264>
   13abc:	cmp	r3, #32768	; 0x8000
   13ac0:	movne	r0, #3
   13ac4:	moveq	r0, #8
   13ac8:	add	sp, sp, #8
   13acc:	ldrd	r4, [sp]
   13ad0:	ldr	r6, [sp, #8]
   13ad4:	add	sp, sp, #12
   13ad8:	pop	{pc}		; (ldr pc, [sp], #4)
   13adc:	ldrb	r3, [r4, #168]	; 0xa8
   13ae0:	cmp	r3, #46	; 0x2e
   13ae4:	bne	13b08 <__assert_fail@plt+0x223c>
   13ae8:	ldrb	r3, [r4, #169]	; 0xa9
   13aec:	cmp	r3, #0
   13af0:	beq	13b10 <__assert_fail@plt+0x2244>
   13af4:	ldr	r3, [r4, #168]	; 0xa8
   13af8:	bic	r3, r3, #-16777216	; 0xff000000
   13afc:	bic	r3, r3, #255	; 0xff
   13b00:	cmp	r3, #11776	; 0x2e00
   13b04:	beq	13b10 <__assert_fail@plt+0x2244>
   13b08:	mov	r0, #1
   13b0c:	b	13ac8 <__assert_fail@plt+0x21fc>
   13b10:	ldr	r3, [r4, #48]	; 0x30
   13b14:	cmp	r3, #0
   13b18:	moveq	r0, #1
   13b1c:	movne	r0, #5
   13b20:	b	13ac8 <__assert_fail@plt+0x21fc>
   13b24:	bl	1171c <__errno_location@plt>
   13b28:	ldr	r3, [r0]
   13b2c:	b	13a5c <__assert_fail@plt+0x2190>
   13b30:	mov	r0, #12
   13b34:	b	13ac8 <__assert_fail@plt+0x21fc>
   13b38:	movw	r3, #258	; 0x102
   13b3c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13b40:	tst	r0, r3
   13b44:	strd	r6, [sp, #8]
   13b48:	strd	r8, [sp, #16]
   13b4c:	mov	r8, r2
   13b50:	str	sl, [sp, #24]
   13b54:	mov	sl, r1
   13b58:	str	lr, [sp, #28]
   13b5c:	beq	13be0 <__assert_fail@plt+0x2314>
   13b60:	mov	r0, #24
   13b64:	bl	1d804 <lchmod@@Base+0x61bc>
   13b68:	subs	r9, r0, #0
   13b6c:	beq	13c04 <__assert_fail@plt+0x2338>
   13b70:	ldrd	r6, [r8, #64]	; 0x40
   13b74:	mov	r1, r9
   13b78:	ldrd	r4, [r8, #160]	; 0xa0
   13b7c:	ldr	r0, [sl]
   13b80:	strd	r6, [r9]
   13b84:	str	r8, [r9, #16]
   13b88:	strd	r4, [r9, #8]
   13b8c:	bl	16f3c <__assert_fail@plt+0x5670>
   13b90:	cmp	r9, r0
   13b94:	mov	r4, r0
   13b98:	beq	13bc4 <__assert_fail@plt+0x22f8>
   13b9c:	mov	r0, r9
   13ba0:	bl	13688 <__assert_fail@plt+0x1dbc>
   13ba4:	cmp	r4, #0
   13ba8:	beq	13c04 <__assert_fail@plt+0x2338>
   13bac:	ldr	r3, [r4, #16]
   13bb0:	mov	r2, #2
   13bb4:	mov	r0, #1
   13bb8:	str	r3, [r8]
   13bbc:	strh	r2, [r8, #56]	; 0x38
   13bc0:	b	13bc8 <__assert_fail@plt+0x22fc>
   13bc4:	mov	r0, #1
   13bc8:	ldrd	r4, [sp]
   13bcc:	ldrd	r6, [sp, #8]
   13bd0:	ldrd	r8, [sp, #16]
   13bd4:	ldr	sl, [sp, #24]
   13bd8:	add	sp, sp, #28
   13bdc:	pop	{pc}		; (ldr pc, [sp], #4)
   13be0:	add	r1, r2, #64	; 0x40
   13be4:	ldr	r0, [sl]
   13be8:	bl	1da1c <lchmod@@Base+0x63d4>
   13bec:	cmp	r0, #0
   13bf0:	beq	13bc4 <__assert_fail@plt+0x22f8>
   13bf4:	mov	r3, #2
   13bf8:	str	r8, [r8]
   13bfc:	strh	r3, [r8, #56]	; 0x38
   13c00:	b	13bc8 <__assert_fail@plt+0x22fc>
   13c04:	mov	r0, #0
   13c08:	b	13bc8 <__assert_fail@plt+0x22fc>
   13c0c:	movw	r3, #258	; 0x102
   13c10:	mov	ip, r1
   13c14:	strd	r4, [sp, #-12]!
   13c18:	tst	r0, r3
   13c1c:	str	lr, [sp, #8]
   13c20:	sub	sp, sp, #28
   13c24:	bne	13c74 <__assert_fail@plt+0x23a8>
   13c28:	ldr	r3, [r2, #4]
   13c2c:	cmp	r3, #0
   13c30:	beq	13c64 <__assert_fail@plt+0x2398>
   13c34:	ldr	r1, [r3, #48]	; 0x30
   13c38:	cmp	r1, #0
   13c3c:	blt	13c64 <__assert_fail@plt+0x2398>
   13c40:	ldr	ip, [ip]
   13c44:	ldrd	r0, [ip, #16]
   13c48:	orrs	r1, r0, r1
   13c4c:	beq	13cd4 <__assert_fail@plt+0x2408>
   13c50:	ldrd	r4, [ip]
   13c54:	ldrd	r0, [r2, #160]	; 0xa0
   13c58:	cmp	r5, r1
   13c5c:	cmpeq	r4, r0
   13c60:	beq	13cac <__assert_fail@plt+0x23e0>
   13c64:	add	sp, sp, #28
   13c68:	ldrd	r4, [sp]
   13c6c:	add	sp, sp, #8
   13c70:	pop	{pc}		; (ldr pc, [sp], #4)
   13c74:	ldrd	r4, [r2, #64]	; 0x40
   13c78:	mov	r1, sp
   13c7c:	ldrd	r2, [r2, #160]	; 0xa0
   13c80:	ldr	r0, [ip]
   13c84:	strd	r4, [sp]
   13c88:	strd	r2, [sp, #8]
   13c8c:	bl	17160 <__assert_fail@plt+0x5894>
   13c90:	cmp	r0, #0
   13c94:	beq	13cd4 <__assert_fail@plt+0x2408>
   13c98:	bl	13688 <__assert_fail@plt+0x1dbc>
   13c9c:	add	sp, sp, #28
   13ca0:	ldrd	r4, [sp]
   13ca4:	add	sp, sp, #8
   13ca8:	pop	{pc}		; (ldr pc, [sp], #4)
   13cac:	ldrd	r0, [ip, #8]
   13cb0:	ldrd	r4, [r2, #64]	; 0x40
   13cb4:	cmp	r1, r5
   13cb8:	cmpeq	r0, r4
   13cbc:	bne	13c64 <__assert_fail@plt+0x2398>
   13cc0:	ldrd	r0, [r3, #64]	; 0x40
   13cc4:	ldrd	r2, [r3, #160]	; 0xa0
   13cc8:	strd	r2, [ip]
   13ccc:	strd	r0, [ip, #8]
   13cd0:	b	13c64 <__assert_fail@plt+0x2398>
   13cd4:	bl	11878 <abort@plt>
   13cd8:	ldr	r3, [r0, #48]	; 0x30
   13cdc:	strd	r4, [sp, #-16]!
   13ce0:	add	r5, r0, #60	; 0x3c
   13ce4:	str	r6, [sp, #8]
   13ce8:	str	lr, [sp, #12]
   13cec:	ands	r6, r3, #4
   13cf0:	movne	r6, #0
   13cf4:	bne	13d30 <__assert_fail@plt+0x2464>
   13cf8:	tst	r3, #512	; 0x200
   13cfc:	mov	r4, r0
   13d00:	beq	13d60 <__assert_fail@plt+0x2494>
   13d04:	mov	r0, r5
   13d08:	ldr	r1, [r4, #32]
   13d0c:	bl	175b0 <__assert_fail@plt+0x5ce4>
   13d10:	cmp	r0, #0
   13d14:	bge	13d74 <__assert_fail@plt+0x24a8>
   13d18:	mvn	r3, #99	; 0x63
   13d1c:	str	r3, [r4, #32]
   13d20:	b	13d30 <__assert_fail@plt+0x2464>
   13d24:	bl	175f8 <__assert_fail@plt+0x5d2c>
   13d28:	cmp	r0, #0
   13d2c:	bge	13d58 <__assert_fail@plt+0x248c>
   13d30:	mov	r0, r5
   13d34:	bl	175a8 <__assert_fail@plt+0x5cdc>
   13d38:	cmp	r0, #0
   13d3c:	mov	r0, r5
   13d40:	beq	13d24 <__assert_fail@plt+0x2458>
   13d44:	mov	r0, r6
   13d48:	ldrd	r4, [sp]
   13d4c:	ldr	r6, [sp, #8]
   13d50:	add	sp, sp, #12
   13d54:	pop	{pc}		; (ldr pc, [sp], #4)
   13d58:	bl	11884 <close@plt>
   13d5c:	b	13d30 <__assert_fail@plt+0x2464>
   13d60:	ldr	r0, [r0, #28]
   13d64:	bl	117f4 <fchdir@plt>
   13d68:	adds	r6, r0, #0
   13d6c:	movne	r6, #1
   13d70:	b	13d30 <__assert_fail@plt+0x2464>
   13d74:	bl	11884 <close@plt>
   13d78:	mvn	r3, #99	; 0x63
   13d7c:	str	r3, [r4, #32]
   13d80:	b	13d30 <__assert_fail@plt+0x2464>
   13d84:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13d88:	mov	r5, r0
   13d8c:	mov	r4, r2
   13d90:	strd	r6, [sp, #8]
   13d94:	strd	r8, [sp, #16]
   13d98:	mov	r8, r1
   13d9c:	ldr	r9, [r0, #48]	; 0x30
   13da0:	str	sl, [sp, #24]
   13da4:	subs	sl, r3, #0
   13da8:	str	lr, [sp, #28]
   13dac:	sub	sp, sp, #104	; 0x68
   13db0:	and	r6, r9, #4
   13db4:	beq	13eb0 <__assert_fail@plt+0x25e4>
   13db8:	movw	r1, #60576	; 0xeca0
   13dbc:	movt	r1, #1
   13dc0:	mov	r0, sl
   13dc4:	bl	114d0 <strcmp@plt>
   13dc8:	cmp	r0, #0
   13dcc:	bne	13eb0 <__assert_fail@plt+0x25e4>
   13dd0:	cmp	r6, #0
   13dd4:	bne	13ef0 <__assert_fail@plt+0x2624>
   13dd8:	cmp	r4, #0
   13ddc:	bge	1402c <__assert_fail@plt+0x2760>
   13de0:	tst	r9, #512	; 0x200
   13de4:	beq	13f34 <__assert_fail@plt+0x2668>
   13de8:	add	r6, r5, #60	; 0x3c
   13dec:	mov	r0, r6
   13df0:	bl	175a8 <__assert_fail@plt+0x5cdc>
   13df4:	cmp	r0, #0
   13df8:	beq	13fb4 <__assert_fail@plt+0x26e8>
   13dfc:	lsl	r2, r9, #11
   13e00:	mov	r6, #1
   13e04:	and	r2, r2, #32768	; 0x8000
   13e08:	orr	r2, r2, #540672	; 0x84000
   13e0c:	orr	r2, r2, #2304	; 0x900
   13e10:	mov	r1, sl
   13e14:	ldr	r0, [r5, #32]
   13e18:	bl	17cf8 <lchmod@@Base+0x6b0>
   13e1c:	mov	r7, r0
   13e20:	cmp	r7, #0
   13e24:	blt	14024 <__assert_fail@plt+0x2758>
   13e28:	ldr	r9, [r5, #48]	; 0x30
   13e2c:	tst	r9, #2
   13e30:	beq	13ecc <__assert_fail@plt+0x2600>
   13e34:	mov	r2, sp
   13e38:	mov	r1, r7
   13e3c:	mov	r0, #3
   13e40:	bl	115d8 <__fxstat64@plt>
   13e44:	cmp	r0, #0
   13e48:	bne	13f2c <__assert_fail@plt+0x2660>
   13e4c:	ldrd	r2, [sp]
   13e50:	ldrd	r0, [r8, #64]	; 0x40
   13e54:	cmp	r1, r3
   13e58:	cmpeq	r0, r2
   13e5c:	bne	13f20 <__assert_fail@plt+0x2654>
   13e60:	ldrd	r2, [sp, #96]	; 0x60
   13e64:	ldrd	r0, [r8, #160]	; 0xa0
   13e68:	cmp	r1, r3
   13e6c:	cmpeq	r0, r2
   13e70:	bne	13f20 <__assert_fail@plt+0x2654>
   13e74:	ldr	r9, [r5, #48]	; 0x30
   13e78:	tst	r9, #512	; 0x200
   13e7c:	bne	13f5c <__assert_fail@plt+0x2690>
   13e80:	mov	r0, r7
   13e84:	bl	117f4 <fchdir@plt>
   13e88:	mov	r9, r0
   13e8c:	cmp	r4, #0
   13e90:	bge	13f00 <__assert_fail@plt+0x2634>
   13e94:	bl	1171c <__errno_location@plt>
   13e98:	mov	r4, r0
   13e9c:	mov	r0, r7
   13ea0:	ldr	r5, [r4]
   13ea4:	bl	11884 <close@plt>
   13ea8:	str	r5, [r4]
   13eac:	b	13f00 <__assert_fail@plt+0x2634>
   13eb0:	cmp	r6, #0
   13eb4:	bne	13ef0 <__assert_fail@plt+0x2624>
   13eb8:	cmp	r4, #0
   13ebc:	movge	r7, r4
   13ec0:	blt	13fe4 <__assert_fail@plt+0x2718>
   13ec4:	tst	r9, #2
   13ec8:	bne	13e34 <__assert_fail@plt+0x2568>
   13ecc:	cmp	sl, #0
   13ed0:	beq	13e78 <__assert_fail@plt+0x25ac>
   13ed4:	mov	r0, sl
   13ed8:	movw	r1, #60576	; 0xeca0
   13edc:	movt	r1, #1
   13ee0:	bl	114d0 <strcmp@plt>
   13ee4:	cmp	r0, #0
   13ee8:	bne	13e78 <__assert_fail@plt+0x25ac>
   13eec:	b	13e34 <__assert_fail@plt+0x2568>
   13ef0:	mvn	r3, r4
   13ef4:	lsr	r3, r3, #31
   13ef8:	ands	r9, r3, r9, lsr #9
   13efc:	bne	13fa4 <__assert_fail@plt+0x26d8>
   13f00:	mov	r0, r9
   13f04:	add	sp, sp, #104	; 0x68
   13f08:	ldrd	r4, [sp]
   13f0c:	ldrd	r6, [sp, #8]
   13f10:	ldrd	r8, [sp, #16]
   13f14:	ldr	sl, [sp, #24]
   13f18:	add	sp, sp, #28
   13f1c:	pop	{pc}		; (ldr pc, [sp], #4)
   13f20:	bl	1171c <__errno_location@plt>
   13f24:	mov	r3, #2
   13f28:	str	r3, [r0]
   13f2c:	mvn	r9, #0
   13f30:	b	13e8c <__assert_fail@plt+0x25c0>
   13f34:	lsl	r2, r9, #11
   13f38:	mov	r6, #1
   13f3c:	and	r2, r2, #32768	; 0x8000
   13f40:	orr	r2, r2, #540672	; 0x84000
   13f44:	orr	r2, r2, #2304	; 0x900
   13f48:	mov	r1, r2
   13f4c:	mov	r0, sl
   13f50:	bl	1ddb0 <lchmod@@Base+0x6768>
   13f54:	mov	r7, r0
   13f58:	b	13e20 <__assert_fail@plt+0x2554>
   13f5c:	ldr	r1, [r5, #32]
   13f60:	sub	r3, r1, r7
   13f64:	cmn	r1, #100	; 0x64
   13f68:	clz	r3, r3
   13f6c:	lsr	r3, r3, #5
   13f70:	moveq	r3, #0
   13f74:	cmp	r3, #0
   13f78:	bne	14040 <__assert_fail@plt+0x2774>
   13f7c:	cmp	r6, #0
   13f80:	beq	14004 <__assert_fail@plt+0x2738>
   13f84:	mvn	r3, r1
   13f88:	eor	r9, r9, #4
   13f8c:	lsr	r3, r3, #31
   13f90:	ands	r3, r3, r9, lsr #2
   13f94:	bne	1401c <__assert_fail@plt+0x2750>
   13f98:	mov	r9, #0
   13f9c:	str	r7, [r5, #32]
   13fa0:	b	13f00 <__assert_fail@plt+0x2634>
   13fa4:	mov	r0, r4
   13fa8:	mov	r9, #0
   13fac:	bl	11884 <close@plt>
   13fb0:	b	13f00 <__assert_fail@plt+0x2634>
   13fb4:	mov	r0, r6
   13fb8:	bl	175f8 <__assert_fail@plt+0x5d2c>
   13fbc:	ldr	r9, [r5, #48]	; 0x30
   13fc0:	subs	r7, r0, #0
   13fc4:	movlt	r6, #1
   13fc8:	andlt	r3, r9, #512	; 0x200
   13fcc:	blt	13fe8 <__assert_fail@plt+0x271c>
   13fd0:	tst	r9, #2
   13fd4:	mov	r4, r7
   13fd8:	mov	r6, #1
   13fdc:	beq	13e78 <__assert_fail@plt+0x25ac>
   13fe0:	b	13e34 <__assert_fail@plt+0x2568>
   13fe4:	and	r3, r9, #512	; 0x200
   13fe8:	lsl	r2, r9, #11
   13fec:	cmp	r3, #0
   13ff0:	and	r2, r2, #32768	; 0x8000
   13ff4:	orr	r2, r2, #540672	; 0x84000
   13ff8:	orr	r2, r2, #2304	; 0x900
   13ffc:	bne	13e10 <__assert_fail@plt+0x2544>
   14000:	b	13f48 <__assert_fail@plt+0x267c>
   14004:	add	r0, r5, #60	; 0x3c
   14008:	bl	175b0 <__assert_fail@plt+0x5ce4>
   1400c:	cmp	r0, #0
   14010:	blt	13f98 <__assert_fail@plt+0x26cc>
   14014:	bl	11884 <close@plt>
   14018:	b	13f98 <__assert_fail@plt+0x26cc>
   1401c:	mov	r0, r1
   14020:	b	14014 <__assert_fail@plt+0x2748>
   14024:	mvn	r9, #0
   14028:	b	13f00 <__assert_fail@plt+0x2634>
   1402c:	tst	r9, #2
   14030:	mov	r7, r4
   14034:	mov	r6, #1
   14038:	beq	13ed4 <__assert_fail@plt+0x2608>
   1403c:	b	13e34 <__assert_fail@plt+0x2568>
   14040:	bl	11878 <abort@plt>
   14044:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14048:	strd	r6, [sp, #8]
   1404c:	mov	r6, r0
   14050:	strd	sl, [sp, #24]
   14054:	ldr	fp, [r0]
   14058:	strd	r8, [sp, #16]
   1405c:	str	lr, [sp, #32]
   14060:	sub	sp, sp, #76	; 0x4c
   14064:	str	r1, [sp, #40]	; 0x28
   14068:	ldr	r0, [fp, #12]
   1406c:	cmp	r0, #0
   14070:	str	r0, [sp, #48]	; 0x30
   14074:	beq	144e4 <__assert_fail@plt+0x2c18>
   14078:	bl	117e8 <dirfd@plt>
   1407c:	cmp	r0, #0
   14080:	str	r0, [sp, #68]	; 0x44
   14084:	blt	14a58 <__assert_fail@plt+0x318c>
   14088:	ldr	r3, [r6, #44]	; 0x2c
   1408c:	cmp	r3, #0
   14090:	beq	14904 <__assert_fail@plt+0x3038>
   14094:	ldr	r3, [r6, #48]	; 0x30
   14098:	mvn	r2, #0
   1409c:	str	r2, [sp, #28]
   140a0:	mov	r2, #1
   140a4:	str	r2, [sp, #60]	; 0x3c
   140a8:	ldr	r1, [fp, #28]
   140ac:	ldr	r0, [fp, #40]	; 0x28
   140b0:	sub	r2, r0, #1
   140b4:	str	r0, [sp, #4]
   140b8:	ldrb	r1, [r1, r2]
   140bc:	cmp	r1, #47	; 0x2f
   140c0:	beq	140d0 <__assert_fail@plt+0x2804>
   140c4:	add	r1, r0, #1
   140c8:	mov	r2, r0
   140cc:	str	r1, [sp, #4]
   140d0:	ands	r3, r3, #4
   140d4:	streq	r3, [sp, #32]
   140d8:	beq	140f4 <__assert_fail@plt+0x2828>
   140dc:	ldr	r3, [r6, #24]
   140e0:	mov	r0, #47	; 0x2f
   140e4:	add	r1, r3, r2
   140e8:	strb	r0, [r3, r2]
   140ec:	add	r3, r1, #1
   140f0:	str	r3, [sp, #32]
   140f4:	movw	r3, #6548	; 0x1994
   140f8:	movt	r3, #258	; 0x102
   140fc:	ldr	r2, [r6, #36]	; 0x24
   14100:	movw	r0, #19778	; 0x4d42
   14104:	movt	r0, #65363	; 0xff53
   14108:	str	fp, [sp, #16]
   1410c:	str	r3, [sp, #52]	; 0x34
   14110:	mov	r1, #0
   14114:	ldr	r3, [fp, #48]	; 0x30
   14118:	mov	r9, r1
   1411c:	mov	fp, r1
   14120:	str	r0, [sp, #56]	; 0x38
   14124:	ldr	r0, [sp, #4]
   14128:	str	r1, [sp, #12]
   1412c:	str	r1, [sp, #36]	; 0x24
   14130:	add	r3, r3, #1
   14134:	sub	r2, r2, r0
   14138:	str	r1, [sp, #44]	; 0x2c
   1413c:	str	r2, [sp, #20]
   14140:	str	r3, [sp, #24]
   14144:	b	1415c <__assert_fail@plt+0x2890>
   14148:	ldr	r3, [sp, #28]
   1414c:	add	r9, r9, #1
   14150:	cmp	r9, r3
   14154:	bcs	14640 <__assert_fail@plt+0x2d74>
   14158:	mov	fp, r4
   1415c:	ldr	r3, [sp, #16]
   14160:	ldr	r4, [r3, #12]
   14164:	cmp	r4, #0
   14168:	beq	14780 <__assert_fail@plt+0x2eb4>
   1416c:	bl	1171c <__errno_location@plt>
   14170:	mov	sl, r0
   14174:	mov	r3, #0
   14178:	mov	r0, r4
   1417c:	str	r3, [sl]
   14180:	bl	117c4 <readdir64@plt>
   14184:	subs	r7, r0, #0
   14188:	beq	14854 <__assert_fail@plt+0x2f88>
   1418c:	ldr	r3, [r6, #48]	; 0x30
   14190:	tst	r3, #32
   14194:	bne	141a4 <__assert_fail@plt+0x28d8>
   14198:	ldrb	r3, [r7, #19]
   1419c:	cmp	r3, #46	; 0x2e
   141a0:	beq	143a4 <__assert_fail@plt+0x2ad8>
   141a4:	add	r1, r7, #19
   141a8:	mov	r0, r1
   141ac:	str	r1, [sp, #8]
   141b0:	bl	116e0 <strlen@plt>
   141b4:	mov	r5, r0
   141b8:	add	r0, r0, #176	; 0xb0
   141bc:	bic	r0, r0, #7
   141c0:	bl	1d804 <lchmod@@Base+0x61bc>
   141c4:	subs	r4, r0, #0
   141c8:	beq	143d8 <__assert_fail@plt+0x2b0c>
   141cc:	add	r8, r4, #168	; 0xa8
   141d0:	mov	r2, r5
   141d4:	ldr	r1, [sp, #8]
   141d8:	mov	r0, r8
   141dc:	bl	11530 <memcpy@plt>
   141e0:	ldr	r3, [sp, #20]
   141e4:	mov	r1, #0
   141e8:	add	r0, r4, r5
   141ec:	mov	ip, #196608	; 0x30000
   141f0:	ldr	r2, [r6, #24]
   141f4:	strb	r1, [r0, #168]	; 0xa8
   141f8:	str	r1, [r4, #12]
   141fc:	cmp	r3, r5
   14200:	str	r1, [r4, #16]
   14204:	str	r1, [r4, #20]
   14208:	str	r2, [r4, #28]
   1420c:	str	r1, [r4, #32]
   14210:	str	r6, [r4, #44]	; 0x2c
   14214:	str	r5, [r4, #52]	; 0x34
   14218:	str	ip, [r4, #58]	; 0x3a
   1421c:	bls	142e0 <__assert_fail@plt+0x2a14>
   14220:	ldr	r3, [sp, #4]
   14224:	adds	r5, r5, r3
   14228:	bcs	14b40 <__assert_fail@plt+0x3274>
   1422c:	ldr	r3, [sp, #24]
   14230:	str	r5, [r4, #40]	; 0x28
   14234:	ldr	ip, [r6]
   14238:	ldr	r1, [r6, #48]	; 0x30
   1423c:	str	r3, [r4, #48]	; 0x30
   14240:	ldrd	r2, [r7]
   14244:	str	ip, [r4, #4]
   14248:	tst	r1, #4
   1424c:	streq	r8, [r4, #24]
   14250:	strd	r2, [r4, #160]	; 0xa0
   14254:	bne	14380 <__assert_fail@plt+0x2ab4>
   14258:	ldr	r3, [r6, #44]	; 0x2c
   1425c:	cmp	r3, #0
   14260:	beq	1426c <__assert_fail@plt+0x29a0>
   14264:	ands	r3, r1, #1024	; 0x400
   14268:	beq	143c4 <__assert_fail@plt+0x2af8>
   1426c:	ldrb	r3, [r7, #18]
   14270:	tst	r1, #8
   14274:	sub	r0, r3, #1
   14278:	beq	14284 <__assert_fail@plt+0x29b8>
   1427c:	tst	r3, #251	; 0xfb
   14280:	bne	14480 <__assert_fail@plt+0x2bb4>
   14284:	mov	r3, #11
   14288:	cmp	r0, r3
   1428c:	strh	r3, [r4, #56]	; 0x38
   14290:	bls	14364 <__assert_fail@plt+0x2a98>
   14294:	mov	r1, #0
   14298:	mov	r2, #2
   1429c:	mov	r3, #0
   142a0:	str	r1, [r4, #80]	; 0x50
   142a4:	strd	r2, [r4, #112]	; 0x70
   142a8:	ldr	r2, [sp, #12]
   142ac:	mov	r3, #0
   142b0:	str	r3, [r4, #8]
   142b4:	cmp	r2, r3
   142b8:	movw	r3, #10000	; 0x2710
   142bc:	strne	r4, [fp, #8]
   142c0:	streq	r4, [sp, #12]
   142c4:	cmp	r9, r3
   142c8:	bne	14148 <__assert_fail@plt+0x287c>
   142cc:	ldr	r5, [r6, #44]	; 0x2c
   142d0:	cmp	r5, #0
   142d4:	beq	145f4 <__assert_fail@plt+0x2d28>
   142d8:	movw	r9, #10001	; 0x2711
   142dc:	b	14158 <__assert_fail@plt+0x288c>
   142e0:	ldr	ip, [r6, #36]	; 0x24
   142e4:	ldr	r3, [sp, #4]
   142e8:	add	r0, ip, #256	; 0x100
   142ec:	add	r0, r0, #1
   142f0:	add	r0, r0, r3
   142f4:	add	r0, r0, r5
   142f8:	cmp	ip, r0
   142fc:	bhi	144bc <__assert_fail@plt+0x2bf0>
   14300:	mov	r1, r0
   14304:	str	r0, [r6, #36]	; 0x24
   14308:	mov	r0, r2
   1430c:	str	r2, [sp, #8]
   14310:	bl	1d840 <lchmod@@Base+0x61f8>
   14314:	cmp	r0, #0
   14318:	ldr	r2, [sp, #8]
   1431c:	beq	148b0 <__assert_fail@plt+0x2fe4>
   14320:	cmp	r2, r0
   14324:	str	r0, [r6, #24]
   14328:	beq	14348 <__assert_fail@plt+0x2a7c>
   1432c:	ldr	r2, [r6, #48]	; 0x30
   14330:	tst	r2, #4
   14334:	ldrne	r3, [sp, #4]
   14338:	addne	r3, r0, r3
   1433c:	strne	r3, [sp, #32]
   14340:	mov	r3, #1
   14344:	str	r3, [sp, #36]	; 0x24
   14348:	ldr	r3, [sp, #4]
   1434c:	ldr	r2, [r6, #36]	; 0x24
   14350:	sub	r3, r2, r3
   14354:	str	r3, [sp, #20]
   14358:	b	14220 <__assert_fail@plt+0x2954>
   1435c:	mov	r3, #11
   14360:	strh	r3, [r4, #56]	; 0x38
   14364:	movw	r3, #60528	; 0xec70
   14368:	movt	r3, #1
   1436c:	ldr	r1, [r3, r0, lsl #2]
   14370:	mov	r2, #2
   14374:	mov	r3, #0
   14378:	str	r1, [r4, #80]	; 0x50
   1437c:	b	142a4 <__assert_fail@plt+0x29d8>
   14380:	ldr	ip, [r4, #28]
   14384:	mov	r1, r8
   14388:	ldr	r2, [r4, #52]	; 0x34
   1438c:	ldr	r0, [sp, #32]
   14390:	str	ip, [r4, #24]
   14394:	add	r2, r2, #1
   14398:	bl	11500 <memmove@plt>
   1439c:	ldr	r1, [r6, #48]	; 0x30
   143a0:	b	14258 <__assert_fail@plt+0x298c>
   143a4:	ldrb	r3, [r7, #20]
   143a8:	cmp	r3, #0
   143ac:	beq	143bc <__assert_fail@plt+0x2af0>
   143b0:	ldrh	r3, [r7, #20]
   143b4:	cmp	r3, #46	; 0x2e
   143b8:	bne	141a4 <__assert_fail@plt+0x28d8>
   143bc:	mov	r4, fp
   143c0:	b	14158 <__assert_fail@plt+0x288c>
   143c4:	mov	r2, r4
   143c8:	ldr	r0, [r6, #32]
   143cc:	bl	139dc <__assert_fail@plt+0x2110>
   143d0:	strh	r0, [r4, #56]	; 0x38
   143d4:	b	142a8 <__assert_fail@plt+0x29dc>
   143d8:	ldr	r5, [sl]
   143dc:	ldr	r8, [sp, #12]
   143e0:	ldr	fp, [sp, #16]
   143e4:	mov	r0, r4
   143e8:	bl	13688 <__assert_fail@plt+0x1dbc>
   143ec:	cmp	r8, #0
   143f0:	bne	1445c <__assert_fail@plt+0x2b90>
   143f4:	ldr	r0, [fp, #12]
   143f8:	bl	118b4 <closedir@plt>
   143fc:	ldr	r3, [r6, #48]	; 0x30
   14400:	mov	r2, #0
   14404:	mov	r1, #7
   14408:	mov	r8, r2
   1440c:	str	r2, [fp, #12]
   14410:	strh	r1, [fp, #56]	; 0x38
   14414:	orr	r3, r3, #8192	; 0x2000
   14418:	str	r3, [r6, #48]	; 0x30
   1441c:	str	r5, [sl]
   14420:	mov	r0, r8
   14424:	add	sp, sp, #76	; 0x4c
   14428:	ldrd	r4, [sp]
   1442c:	ldrd	r6, [sp, #8]
   14430:	ldrd	r8, [sp, #16]
   14434:	ldrd	sl, [sp, #24]
   14438:	add	sp, sp, #32
   1443c:	pop	{pc}		; (ldr pc, [sp], #4)
   14440:	mov	r0, r3
   14444:	bl	118b4 <closedir@plt>
   14448:	mov	r0, r8
   1444c:	bl	13688 <__assert_fail@plt+0x1dbc>
   14450:	cmp	r4, #0
   14454:	beq	143f4 <__assert_fail@plt+0x2b28>
   14458:	mov	r8, r4
   1445c:	mov	r0, r8
   14460:	ldr	r4, [r8, #8]
   14464:	ldr	r3, [r8, #12]
   14468:	cmp	r3, #0
   1446c:	bne	14440 <__assert_fail@plt+0x2b74>
   14470:	bl	13688 <__assert_fail@plt+0x1dbc>
   14474:	cmp	r4, #0
   14478:	bne	14458 <__assert_fail@plt+0x2b8c>
   1447c:	b	143f4 <__assert_fail@plt+0x2b28>
   14480:	ubfx	r2, r1, #4, #1
   14484:	cmp	r3, #10
   14488:	moveq	r3, r2
   1448c:	orrne	r3, r2, #1
   14490:	cmp	r3, #0
   14494:	beq	1435c <__assert_fail@plt+0x2a90>
   14498:	mov	r3, #11
   1449c:	cmp	r0, r3
   144a0:	strh	r3, [r4, #56]	; 0x38
   144a4:	bls	146fc <__assert_fail@plt+0x2e30>
   144a8:	mov	r1, #0
   144ac:	mov	r2, #1
   144b0:	mov	r3, #0
   144b4:	str	r1, [r4, #80]	; 0x50
   144b8:	b	142a4 <__assert_fail@plt+0x29d8>
   144bc:	mov	r0, r2
   144c0:	ldr	r8, [sp, #12]
   144c4:	ldr	fp, [sp, #16]
   144c8:	bl	13688 <__assert_fail@plt+0x1dbc>
   144cc:	mov	r3, #36	; 0x24
   144d0:	mov	r1, #0
   144d4:	mov	r5, r3
   144d8:	str	r1, [r6, #24]
   144dc:	str	r3, [sl]
   144e0:	b	143e4 <__assert_fail@plt+0x2b18>
   144e4:	ldr	r3, [r6, #48]	; 0x30
   144e8:	ldr	r1, [fp, #24]
   144ec:	and	r2, r3, #516	; 0x204
   144f0:	cmp	r2, #512	; 0x200
   144f4:	ldreq	r0, [r6, #32]
   144f8:	mvnne	r0, #99	; 0x63
   144fc:	ands	r2, r3, #16
   14500:	beq	14510 <__assert_fail@plt+0x2c44>
   14504:	tst	r3, #1
   14508:	moveq	r2, #32768	; 0x8000
   1450c:	bne	14718 <__assert_fail@plt+0x2e4c>
   14510:	add	r3, sp, #68	; 0x44
   14514:	bl	17d38 <lchmod@@Base+0x6f0>
   14518:	cmp	r0, #0
   1451c:	mov	r8, r0
   14520:	str	r0, [fp, #12]
   14524:	beq	14aac <__assert_fail@plt+0x31e0>
   14528:	ldrh	r3, [fp, #56]	; 0x38
   1452c:	ldr	r0, [r6, #48]	; 0x30
   14530:	cmp	r3, #11
   14534:	beq	149ec <__assert_fail@plt+0x3120>
   14538:	tst	r0, #256	; 0x100
   1453c:	bne	14930 <__assert_fail@plt+0x3064>
   14540:	ldr	r2, [r6, #44]	; 0x2c
   14544:	movw	r3, #34464	; 0x86a0
   14548:	movt	r3, #1
   1454c:	cmp	r2, #0
   14550:	mvnne	r3, #0
   14554:	str	r3, [sp, #28]
   14558:	ldr	r3, [sp, #40]	; 0x28
   1455c:	cmp	r3, #2
   14560:	beq	14920 <__assert_fail@plt+0x3054>
   14564:	ldr	r3, [r6, #48]	; 0x30
   14568:	ldr	r0, [sp, #68]	; 0x44
   1456c:	and	r3, r3, #56	; 0x38
   14570:	cmp	r3, #24
   14574:	beq	14728 <__assert_fail@plt+0x2e5c>
   14578:	ldr	r3, [sp, #40]	; 0x28
   1457c:	sub	r4, r3, #3
   14580:	clz	r4, r4
   14584:	lsr	r4, r4, #5
   14588:	ldr	r3, [r6, #48]	; 0x30
   1458c:	tst	r3, #512	; 0x200
   14590:	bne	14a98 <__assert_fail@plt+0x31cc>
   14594:	cmp	r0, #0
   14598:	bge	14a2c <__assert_fail@plt+0x3160>
   1459c:	cmp	r4, #0
   145a0:	beq	145b0 <__assert_fail@plt+0x2ce4>
   145a4:	bl	1171c <__errno_location@plt>
   145a8:	ldr	r3, [r0]
   145ac:	str	r3, [fp, #32]
   145b0:	ldrh	r3, [fp, #58]	; 0x3a
   145b4:	ldr	r0, [fp, #12]
   145b8:	orr	r3, r3, #1
   145bc:	strh	r3, [fp, #58]	; 0x3a
   145c0:	bl	118b4 <closedir@plt>
   145c4:	ldr	r3, [r6, #48]	; 0x30
   145c8:	mov	r2, #0
   145cc:	str	r2, [fp, #12]
   145d0:	tst	r3, #512	; 0x200
   145d4:	beq	145e4 <__assert_fail@plt+0x2d18>
   145d8:	ldr	r0, [sp, #68]	; 0x44
   145dc:	cmp	r0, r2
   145e0:	bge	14a8c <__assert_fail@plt+0x31c0>
   145e4:	mov	r2, #0
   145e8:	str	r2, [fp, #12]
   145ec:	str	r2, [sp, #60]	; 0x3c
   145f0:	b	140a8 <__assert_fail@plt+0x27dc>
   145f4:	ldr	r0, [sp, #16]
   145f8:	ldr	r1, [sp, #68]	; 0x44
   145fc:	bl	138bc <__assert_fail@plt+0x1ff0>
   14600:	movw	r3, #26985	; 0x6969
   14604:	cmp	r0, r3
   14608:	beq	1462c <__assert_fail@plt+0x2d60>
   1460c:	ldr	r3, [sp, #52]	; 0x34
   14610:	cmp	r0, r3
   14614:	beq	1462c <__assert_fail@plt+0x2d60>
   14618:	ldr	r3, [sp, #56]	; 0x38
   1461c:	cmp	r0, r3
   14620:	movne	r3, #1
   14624:	strne	r3, [sp, #44]	; 0x2c
   14628:	bne	142d8 <__assert_fail@plt+0x2a0c>
   1462c:	ldr	r3, [sp, #28]
   14630:	add	r9, r9, #1
   14634:	str	r5, [sp, #44]	; 0x2c
   14638:	cmp	r9, r3
   1463c:	bcc	14158 <__assert_fail@plt+0x288c>
   14640:	ldr	r8, [sp, #12]
   14644:	ldr	r3, [sp, #36]	; 0x24
   14648:	ldr	fp, [sp, #16]
   1464c:	cmp	r3, #0
   14650:	beq	14794 <__assert_fail@plt+0x2ec8>
   14654:	ldr	r3, [r6, #4]
   14658:	ldr	r1, [r6, #24]
   1465c:	cmp	r3, #0
   14660:	beq	14694 <__assert_fail@plt+0x2dc8>
   14664:	ldr	r2, [r3, #24]
   14668:	add	r0, r3, #168	; 0xa8
   1466c:	cmp	r2, r0
   14670:	beq	1489c <__assert_fail@plt+0x2fd0>
   14674:	ldr	r0, [r3, #28]
   14678:	str	r1, [r3, #28]
   1467c:	sub	r2, r2, r0
   14680:	add	r2, r1, r2
   14684:	str	r2, [r3, #24]
   14688:	ldr	r3, [r3, #8]
   1468c:	cmp	r3, #0
   14690:	bne	14664 <__assert_fail@plt+0x2d98>
   14694:	ldr	r3, [r8, #48]	; 0x30
   14698:	cmp	r3, #0
   1469c:	movge	r3, r8
   146a0:	bge	146b8 <__assert_fail@plt+0x2dec>
   146a4:	b	14794 <__assert_fail@plt+0x2ec8>
   146a8:	ldr	r3, [r2, #48]	; 0x30
   146ac:	cmp	r3, #0
   146b0:	blt	14794 <__assert_fail@plt+0x2ec8>
   146b4:	mov	r3, r2
   146b8:	ldr	r2, [r3, #24]
   146bc:	add	r0, r3, #168	; 0xa8
   146c0:	cmp	r2, r0
   146c4:	beq	146d8 <__assert_fail@plt+0x2e0c>
   146c8:	ldr	r0, [r3, #28]
   146cc:	sub	r2, r2, r0
   146d0:	add	r2, r1, r2
   146d4:	str	r2, [r3, #24]
   146d8:	ldr	r2, [r3, #8]
   146dc:	str	r1, [r3, #28]
   146e0:	cmp	r2, #0
   146e4:	bne	146a8 <__assert_fail@plt+0x2ddc>
   146e8:	ldr	r2, [r3, #4]
   146ec:	ldr	r3, [r2, #48]	; 0x30
   146f0:	cmp	r3, #0
   146f4:	bge	146b4 <__assert_fail@plt+0x2de8>
   146f8:	b	14794 <__assert_fail@plt+0x2ec8>
   146fc:	movw	r3, #60528	; 0xec70
   14700:	movt	r3, #1
   14704:	ldr	r1, [r3, r0, lsl #2]
   14708:	mov	r2, #1
   1470c:	mov	r3, #0
   14710:	str	r1, [r4, #80]	; 0x50
   14714:	b	142a4 <__assert_fail@plt+0x29d8>
   14718:	ldr	r2, [fp, #48]	; 0x30
   1471c:	cmp	r2, #0
   14720:	movne	r2, #32768	; 0x8000
   14724:	b	14510 <__assert_fail@plt+0x2c44>
   14728:	ldr	r3, [fp, #84]	; 0x54
   1472c:	cmp	r3, #2
   14730:	bne	14578 <__assert_fail@plt+0x2cac>
   14734:	mov	r1, r0
   14738:	mov	r0, fp
   1473c:	bl	138bc <__assert_fail@plt+0x1ff0>
   14740:	movw	r3, #26985	; 0x6969
   14744:	cmp	r0, r3
   14748:	beq	14b38 <__assert_fail@plt+0x326c>
   1474c:	bgt	14b1c <__assert_fail@plt+0x3250>
   14750:	movw	r3, #19778	; 0x4d42
   14754:	movt	r3, #65363	; 0xff53
   14758:	cmp	r0, r3
   1475c:	beq	14b38 <__assert_fail@plt+0x326c>
   14760:	cmp	r0, #0
   14764:	beq	14b38 <__assert_fail@plt+0x326c>
   14768:	ldr	r3, [sp, #40]	; 0x28
   1476c:	cmp	r3, #3
   14770:	bne	14920 <__assert_fail@plt+0x3054>
   14774:	mov	r4, #0
   14778:	ldr	r0, [sp, #68]	; 0x44
   1477c:	b	14588 <__assert_fail@plt+0x2cbc>
   14780:	ldr	r8, [sp, #12]
   14784:	mov	fp, r3
   14788:	ldr	r3, [sp, #36]	; 0x24
   1478c:	cmp	r3, #0
   14790:	bne	14654 <__assert_fail@plt+0x2d88>
   14794:	ldr	r3, [r6, #48]	; 0x30
   14798:	tst	r3, #4
   1479c:	beq	147cc <__assert_fail@plt+0x2f00>
   147a0:	ldr	r2, [sp, #4]
   147a4:	ldr	r3, [r6, #36]	; 0x24
   147a8:	cmp	r9, #0
   147ac:	cmpne	r3, r2
   147b0:	bne	147c0 <__assert_fail@plt+0x2ef4>
   147b4:	ldr	r3, [sp, #32]
   147b8:	sub	r3, r3, #1
   147bc:	str	r3, [sp, #32]
   147c0:	ldr	r2, [sp, #32]
   147c4:	mov	r3, #0
   147c8:	strb	r3, [r2]
   147cc:	ldr	r2, [sp, #48]	; 0x30
   147d0:	ldr	r3, [sp, #60]	; 0x3c
   147d4:	cmp	r2, #0
   147d8:	movne	r3, #0
   147dc:	cmp	r3, #0
   147e0:	beq	14818 <__assert_fail@plt+0x2f4c>
   147e4:	ldr	r3, [sp, #40]	; 0x28
   147e8:	cmp	r9, #0
   147ec:	cmpne	r3, #1
   147f0:	bne	14820 <__assert_fail@plt+0x2f54>
   147f4:	ldr	r3, [fp, #48]	; 0x30
   147f8:	cmp	r3, #0
   147fc:	bne	14a08 <__assert_fail@plt+0x313c>
   14800:	mov	r0, r6
   14804:	bl	13cd8 <__assert_fail@plt+0x240c>
   14808:	adds	r0, r0, #0
   1480c:	movne	r0, #1
   14810:	cmp	r0, #0
   14814:	bne	14abc <__assert_fail@plt+0x31f0>
   14818:	cmp	r9, #0
   1481c:	beq	1497c <__assert_fail@plt+0x30b0>
   14820:	ldr	r3, [sp, #44]	; 0x2c
   14824:	cmp	r3, #0
   14828:	bne	148d8 <__assert_fail@plt+0x300c>
   1482c:	ldr	r3, [r6, #44]	; 0x2c
   14830:	cmp	r3, #0
   14834:	cmpne	r9, #1
   14838:	beq	14420 <__assert_fail@plt+0x2b54>
   1483c:	mov	r1, r8
   14840:	mov	r2, r9
   14844:	mov	r0, r6
   14848:	bl	137d0 <__assert_fail@plt+0x1f04>
   1484c:	mov	r8, r0
   14850:	b	14420 <__assert_fail@plt+0x2b54>
   14854:	ldr	r3, [sl]
   14858:	ldr	r8, [sp, #12]
   1485c:	ldr	fp, [sp, #16]
   14860:	cmp	r3, #0
   14864:	beq	14880 <__assert_fail@plt+0x2fb4>
   14868:	ldr	r2, [sp, #48]	; 0x30
   1486c:	str	r3, [fp, #32]
   14870:	orrs	r2, r2, r9
   14874:	moveq	r3, #4
   14878:	movne	r3, #7
   1487c:	strh	r3, [fp, #56]	; 0x38
   14880:	ldr	r0, [fp, #12]
   14884:	cmp	r0, #0
   14888:	beq	14788 <__assert_fail@plt+0x2ebc>
   1488c:	bl	118b4 <closedir@plt>
   14890:	mov	r3, #0
   14894:	str	r3, [fp, #12]
   14898:	b	14788 <__assert_fail@plt+0x2ebc>
   1489c:	str	r1, [r3, #28]
   148a0:	ldr	r3, [r3, #8]
   148a4:	cmp	r3, #0
   148a8:	bne	14664 <__assert_fail@plt+0x2d98>
   148ac:	b	14694 <__assert_fail@plt+0x2dc8>
   148b0:	mov	r1, r0
   148b4:	ldr	r0, [r6, #24]
   148b8:	str	r1, [sp, #4]
   148bc:	ldr	r8, [sp, #12]
   148c0:	ldr	fp, [sp, #16]
   148c4:	bl	13688 <__assert_fail@plt+0x1dbc>
   148c8:	ldr	r1, [sp, #4]
   148cc:	ldr	r5, [sl]
   148d0:	str	r1, [r6, #24]
   148d4:	b	143e4 <__assert_fail@plt+0x2b18>
   148d8:	movw	r3, #14240	; 0x37a0
   148dc:	movt	r3, #1
   148e0:	mov	r1, r8
   148e4:	mov	r2, r9
   148e8:	mov	r0, r6
   148ec:	str	r3, [r6, #44]	; 0x2c
   148f0:	bl	137d0 <__assert_fail@plt+0x1f04>
   148f4:	mov	r3, #0
   148f8:	mov	r8, r0
   148fc:	str	r3, [r6, #44]	; 0x2c
   14900:	b	14420 <__assert_fail@plt+0x2b54>
   14904:	movw	r3, #34464	; 0x86a0
   14908:	movt	r3, #1
   1490c:	mov	r2, #1
   14910:	str	r3, [sp, #28]
   14914:	str	r2, [sp, #60]	; 0x3c
   14918:	ldr	r3, [r6, #48]	; 0x30
   1491c:	b	140a8 <__assert_fail@plt+0x27dc>
   14920:	mov	r3, #0
   14924:	str	r3, [sp, #60]	; 0x3c
   14928:	ldr	r3, [r6, #48]	; 0x30
   1492c:	b	140a8 <__assert_fail@plt+0x27dc>
   14930:	add	r4, r6, #56	; 0x38
   14934:	mov	r2, fp
   14938:	mov	r1, r4
   1493c:	bl	13c0c <__assert_fail@plt+0x2340>
   14940:	mov	r3, #0
   14944:	mov	r2, fp
   14948:	ldr	r0, [r6, #32]
   1494c:	ldr	r1, [r6, #48]	; 0x30
   14950:	bl	139dc <__assert_fail@plt+0x2110>
   14954:	mov	r2, fp
   14958:	mov	r1, r4
   1495c:	ldr	r0, [r6, #48]	; 0x30
   14960:	bl	13b38 <__assert_fail@plt+0x226c>
   14964:	subs	r8, r0, #0
   14968:	bne	14540 <__assert_fail@plt+0x2c74>
   1496c:	bl	1171c <__errno_location@plt>
   14970:	mov	r3, #12
   14974:	str	r3, [r0]
   14978:	b	14420 <__assert_fail@plt+0x2b54>
   1497c:	ldr	r3, [sp, #40]	; 0x28
   14980:	cmp	r3, #3
   14984:	bne	1499c <__assert_fail@plt+0x30d0>
   14988:	ldrh	r3, [fp, #56]	; 0x38
   1498c:	cmp	r3, #4
   14990:	cmpne	r3, #7
   14994:	movne	r3, #6
   14998:	strhne	r3, [fp, #56]	; 0x38
   1499c:	cmp	r8, #0
   149a0:	bne	149c4 <__assert_fail@plt+0x30f8>
   149a4:	b	149e4 <__assert_fail@plt+0x3118>
   149a8:	mov	r0, r3
   149ac:	bl	118b4 <closedir@plt>
   149b0:	mov	r0, r8
   149b4:	bl	13688 <__assert_fail@plt+0x1dbc>
   149b8:	cmp	r4, #0
   149bc:	beq	149e4 <__assert_fail@plt+0x3118>
   149c0:	mov	r8, r4
   149c4:	mov	r0, r8
   149c8:	ldr	r4, [r8, #8]
   149cc:	ldr	r3, [r8, #12]
   149d0:	cmp	r3, #0
   149d4:	bne	149a8 <__assert_fail@plt+0x30dc>
   149d8:	bl	13688 <__assert_fail@plt+0x1dbc>
   149dc:	cmp	r4, #0
   149e0:	bne	149c0 <__assert_fail@plt+0x30f4>
   149e4:	mov	r8, #0
   149e8:	b	14420 <__assert_fail@plt+0x2b54>
   149ec:	mov	r1, r0
   149f0:	mov	r3, #0
   149f4:	ldr	r0, [r6, #32]
   149f8:	mov	r2, fp
   149fc:	bl	139dc <__assert_fail@plt+0x2110>
   14a00:	strh	r0, [fp, #56]	; 0x38
   14a04:	b	14540 <__assert_fail@plt+0x2c74>
   14a08:	movw	r3, #60576	; 0xeca0
   14a0c:	movt	r3, #1
   14a10:	ldr	r1, [fp, #4]
   14a14:	mvn	r2, #0
   14a18:	mov	r0, r6
   14a1c:	bl	13d84 <__assert_fail@plt+0x24b8>
   14a20:	adds	r0, r0, #0
   14a24:	movne	r0, #1
   14a28:	b	14810 <__assert_fail@plt+0x2f44>
   14a2c:	mov	r2, r0
   14a30:	mov	r3, #0
   14a34:	mov	r1, fp
   14a38:	mov	r0, r6
   14a3c:	bl	13d84 <__assert_fail@plt+0x24b8>
   14a40:	cmp	r0, #0
   14a44:	bne	1459c <__assert_fail@plt+0x2cd0>
   14a48:	mov	r3, #1
   14a4c:	str	r3, [sp, #60]	; 0x3c
   14a50:	ldr	r3, [r6, #48]	; 0x30
   14a54:	b	140a8 <__assert_fail@plt+0x27dc>
   14a58:	ldr	r0, [fp, #12]
   14a5c:	mov	r8, #0
   14a60:	bl	118b4 <closedir@plt>
   14a64:	ldr	r3, [sp, #40]	; 0x28
   14a68:	str	r8, [fp, #12]
   14a6c:	cmp	r3, #3
   14a70:	bne	149e4 <__assert_fail@plt+0x3118>
   14a74:	mov	r3, #4
   14a78:	strh	r3, [fp, #56]	; 0x38
   14a7c:	bl	1171c <__errno_location@plt>
   14a80:	ldr	r3, [r0]
   14a84:	str	r3, [fp, #32]
   14a88:	b	14420 <__assert_fail@plt+0x2b54>
   14a8c:	bl	11884 <close@plt>
   14a90:	ldr	r3, [r6, #48]	; 0x30
   14a94:	b	145e4 <__assert_fail@plt+0x2d18>
   14a98:	mov	r2, #3
   14a9c:	movw	r1, #1030	; 0x406
   14aa0:	bl	1dbc8 <lchmod@@Base+0x6580>
   14aa4:	str	r0, [sp, #68]	; 0x44
   14aa8:	b	14594 <__assert_fail@plt+0x2cc8>
   14aac:	ldr	r3, [sp, #40]	; 0x28
   14ab0:	cmp	r3, #3
   14ab4:	bne	149e4 <__assert_fail@plt+0x3118>
   14ab8:	b	14a74 <__assert_fail@plt+0x31a8>
   14abc:	ldr	r3, [r6, #48]	; 0x30
   14ac0:	mov	r2, #7
   14ac4:	cmp	r8, #0
   14ac8:	strh	r2, [fp, #56]	; 0x38
   14acc:	orr	r3, r3, #8192	; 0x2000
   14ad0:	str	r3, [r6, #48]	; 0x30
   14ad4:	bne	14af8 <__assert_fail@plt+0x322c>
   14ad8:	b	149e4 <__assert_fail@plt+0x3118>
   14adc:	mov	r0, r3
   14ae0:	bl	118b4 <closedir@plt>
   14ae4:	mov	r0, r8
   14ae8:	bl	13688 <__assert_fail@plt+0x1dbc>
   14aec:	cmp	r4, #0
   14af0:	beq	149e4 <__assert_fail@plt+0x3118>
   14af4:	mov	r8, r4
   14af8:	mov	r0, r8
   14afc:	ldr	r4, [r8, #8]
   14b00:	ldr	r3, [r8, #12]
   14b04:	cmp	r3, #0
   14b08:	bne	14adc <__assert_fail@plt+0x3210>
   14b0c:	bl	13688 <__assert_fail@plt+0x1dbc>
   14b10:	cmp	r4, #0
   14b14:	bne	14af4 <__assert_fail@plt+0x3228>
   14b18:	b	149e4 <__assert_fail@plt+0x3118>
   14b1c:	movw	r3, #40864	; 0x9fa0
   14b20:	cmp	r0, r3
   14b24:	beq	14b38 <__assert_fail@plt+0x326c>
   14b28:	movw	r3, #16719	; 0x414f
   14b2c:	movt	r3, #21318	; 0x5346
   14b30:	cmp	r0, r3
   14b34:	bne	14768 <__assert_fail@plt+0x2e9c>
   14b38:	ldr	r0, [sp, #68]	; 0x44
   14b3c:	b	14578 <__assert_fail@plt+0x2cac>
   14b40:	ldr	r8, [sp, #12]
   14b44:	mov	r0, r4
   14b48:	ldr	fp, [sp, #16]
   14b4c:	bl	13688 <__assert_fail@plt+0x1dbc>
   14b50:	cmp	r8, #0
   14b54:	bne	14b78 <__assert_fail@plt+0x32ac>
   14b58:	b	14b98 <__assert_fail@plt+0x32cc>
   14b5c:	mov	r0, r3
   14b60:	bl	118b4 <closedir@plt>
   14b64:	mov	r0, r8
   14b68:	bl	13688 <__assert_fail@plt+0x1dbc>
   14b6c:	cmp	r4, #0
   14b70:	beq	14b98 <__assert_fail@plt+0x32cc>
   14b74:	mov	r8, r4
   14b78:	mov	r0, r8
   14b7c:	ldr	r4, [r8, #8]
   14b80:	ldr	r3, [r8, #12]
   14b84:	cmp	r3, #0
   14b88:	bne	14b5c <__assert_fail@plt+0x3290>
   14b8c:	bl	13688 <__assert_fail@plt+0x1dbc>
   14b90:	cmp	r4, #0
   14b94:	bne	14b74 <__assert_fail@plt+0x32a8>
   14b98:	ldr	r0, [fp, #12]
   14b9c:	mov	r8, #0
   14ba0:	bl	118b4 <closedir@plt>
   14ba4:	ldr	r3, [r6, #48]	; 0x30
   14ba8:	mov	r1, #7
   14bac:	mov	r2, #36	; 0x24
   14bb0:	str	r8, [fp, #12]
   14bb4:	strh	r1, [fp, #56]	; 0x38
   14bb8:	orr	r3, r3, #8192	; 0x2000
   14bbc:	str	r3, [r6, #48]	; 0x30
   14bc0:	str	r2, [sl]
   14bc4:	b	14420 <__assert_fail@plt+0x2b54>
   14bc8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14bcc:	strd	r6, [sp, #8]
   14bd0:	bic	r7, r1, #4080	; 0xff0
   14bd4:	bic	r7, r7, #15
   14bd8:	strd	r8, [sp, #16]
   14bdc:	strd	sl, [sp, #24]
   14be0:	cmp	r7, #0
   14be4:	str	lr, [sp, #32]
   14be8:	sub	sp, sp, #36	; 0x24
   14bec:	str	r2, [sp, #12]
   14bf0:	bne	1505c <__assert_fail@plt+0x3790>
   14bf4:	and	r3, r1, #516	; 0x204
   14bf8:	mov	r5, r1
   14bfc:	cmp	r3, #516	; 0x204
   14c00:	beq	14ff0 <__assert_fail@plt+0x3724>
   14c04:	ands	r7, r1, #18
   14c08:	beq	14ff0 <__assert_fail@plt+0x3724>
   14c0c:	mov	r9, r0
   14c10:	mov	r1, #96	; 0x60
   14c14:	mov	r0, #1
   14c18:	bl	1d790 <lchmod@@Base+0x6148>
   14c1c:	subs	r7, r0, #0
   14c20:	beq	14f68 <__assert_fail@plt+0x369c>
   14c24:	ldr	r3, [sp, #12]
   14c28:	tst	r5, #2
   14c2c:	mvn	r2, #99	; 0x63
   14c30:	streq	r5, [r7, #48]	; 0x30
   14c34:	str	r2, [r7, #32]
   14c38:	str	r3, [r7, #44]	; 0x2c
   14c3c:	bicne	r3, r5, #512	; 0x200
   14c40:	orrne	r3, r3, #4
   14c44:	strne	r3, [r7, #48]	; 0x30
   14c48:	ldr	r3, [r9]
   14c4c:	cmp	r3, #0
   14c50:	beq	150a8 <__assert_fail@plt+0x37dc>
   14c54:	mov	r6, r9
   14c58:	mov	r4, #0
   14c5c:	mov	r0, r3
   14c60:	bl	116e0 <strlen@plt>
   14c64:	ldr	r3, [r6, #4]!
   14c68:	cmp	r4, r0
   14c6c:	movcc	r4, r0
   14c70:	cmp	r3, #0
   14c74:	bne	14c5c <__assert_fail@plt+0x3390>
   14c78:	add	r4, r4, #1
   14c7c:	cmp	r4, #4096	; 0x1000
   14c80:	movcc	r4, #4096	; 0x1000
   14c84:	ldr	r0, [r7, #24]
   14c88:	ldr	r3, [r7, #36]	; 0x24
   14c8c:	add	r1, r3, #256	; 0x100
   14c90:	add	r1, r1, r4
   14c94:	cmp	r3, r1
   14c98:	bhi	15070 <__assert_fail@plt+0x37a4>
   14c9c:	str	r1, [r7, #36]	; 0x24
   14ca0:	bl	1d840 <lchmod@@Base+0x61f8>
   14ca4:	subs	r4, r0, #0
   14ca8:	beq	150f4 <__assert_fail@plt+0x3828>
   14cac:	ldr	r3, [r9]
   14cb0:	str	r4, [r7, #24]
   14cb4:	cmp	r3, #0
   14cb8:	str	r3, [sp, #16]
   14cbc:	beq	15048 <__assert_fail@plt+0x377c>
   14cc0:	mov	r0, #176	; 0xb0
   14cc4:	bl	1d804 <lchmod@@Base+0x61bc>
   14cc8:	subs	ip, r0, #0
   14ccc:	str	ip, [sp, #16]
   14cd0:	beq	14fd8 <__assert_fail@plt+0x370c>
   14cd4:	ldr	r2, [sp, #12]
   14cd8:	mov	r3, #0
   14cdc:	mvn	r1, #0
   14ce0:	ldr	r0, [r7, #24]
   14ce4:	str	r3, [ip, #12]
   14ce8:	str	r3, [ip, #16]
   14cec:	cmp	r2, r3
   14cf0:	mov	r2, #196608	; 0x30000
   14cf4:	str	r3, [ip, #20]
   14cf8:	str	r7, [ip, #44]	; 0x2c
   14cfc:	str	r3, [ip, #32]
   14d00:	str	r3, [ip, #52]	; 0x34
   14d04:	strb	r3, [ip, #168]	; 0xa8
   14d08:	moveq	r3, #1
   14d0c:	str	r0, [ip, #28]
   14d10:	streq	r3, [sp, #24]
   14d14:	str	r1, [ip, #48]	; 0x30
   14d18:	str	r2, [ip, #58]	; 0x3a
   14d1c:	ldr	fp, [r9]
   14d20:	beq	14d30 <__assert_fail@plt+0x3464>
   14d24:	ldr	r3, [r7, #48]	; 0x30
   14d28:	ubfx	r3, r3, #10, #1
   14d2c:	str	r3, [sp, #24]
   14d30:	cmp	fp, #0
   14d34:	beq	15120 <__assert_fail@plt+0x3854>
   14d38:	eor	r5, r5, #2048	; 0x800
   14d3c:	mov	r3, #0
   14d40:	ubfx	r2, r5, #11, #1
   14d44:	mov	r6, r3
   14d48:	mov	sl, r3
   14d4c:	mov	r8, r3
   14d50:	str	r2, [sp, #20]
   14d54:	str	r3, [sp, #28]
   14d58:	b	14d94 <__assert_fail@plt+0x34c8>
   14d5c:	ldr	r2, [sp, #12]
   14d60:	mov	r3, #11
   14d64:	mov	r0, #2
   14d68:	mov	r1, #0
   14d6c:	strh	r3, [r4, #56]	; 0x38
   14d70:	strd	r0, [r4, #112]	; 0x70
   14d74:	cmp	r2, #0
   14d78:	beq	15034 <__assert_fail@plt+0x3768>
   14d7c:	str	r8, [r4, #8]
   14d80:	mov	r8, r4
   14d84:	ldr	fp, [r9, #4]!
   14d88:	add	sl, sl, #1
   14d8c:	cmp	fp, #0
   14d90:	beq	14e90 <__assert_fail@plt+0x35c4>
   14d94:	mov	r0, fp
   14d98:	bl	116e0 <strlen@plt>
   14d9c:	ldr	r3, [sp, #20]
   14da0:	mov	r5, r0
   14da4:	cmp	r0, #2
   14da8:	movls	r3, #0
   14dac:	andhi	r3, r3, #1
   14db0:	cmp	r3, #0
   14db4:	bne	15000 <__assert_fail@plt+0x3734>
   14db8:	add	r0, r5, #176	; 0xb0
   14dbc:	bic	r0, r0, #7
   14dc0:	bl	1d804 <lchmod@@Base+0x61bc>
   14dc4:	subs	r4, r0, #0
   14dc8:	beq	14f88 <__assert_fail@plt+0x36bc>
   14dcc:	add	r3, r4, #168	; 0xa8
   14dd0:	mov	r1, fp
   14dd4:	mov	r0, r3
   14dd8:	mov	r2, r5
   14ddc:	bl	11530 <memcpy@plt>
   14de0:	add	ip, r4, r5
   14de4:	ldr	r2, [sp, #24]
   14de8:	mov	r3, r0
   14dec:	cmp	r8, #0
   14df0:	mov	r1, #3
   14df4:	strb	r6, [ip, #168]	; 0xa8
   14df8:	moveq	r2, #0
   14dfc:	ldr	ip, [sp, #16]
   14e00:	ldr	r0, [r7, #24]
   14e04:	cmp	r2, #0
   14e08:	str	ip, [r4, #4]
   14e0c:	str	r6, [r4, #12]
   14e10:	str	r6, [r4, #16]
   14e14:	str	r6, [r4, #20]
   14e18:	str	r3, [r4, #24]
   14e1c:	str	r0, [r4, #28]
   14e20:	str	r6, [r4, #32]
   14e24:	str	r7, [r4, #44]	; 0x2c
   14e28:	str	r6, [r4, #48]	; 0x30
   14e2c:	str	r5, [r4, #52]	; 0x34
   14e30:	strh	r6, [r4, #58]	; 0x3a
   14e34:	strh	r1, [r4, #60]	; 0x3c
   14e38:	bne	14d5c <__assert_fail@plt+0x3490>
   14e3c:	mov	r3, r2
   14e40:	mov	r2, r4
   14e44:	ldr	r0, [r7, #32]
   14e48:	ldr	r1, [r7, #48]	; 0x30
   14e4c:	bl	139dc <__assert_fail@plt+0x2110>
   14e50:	ldr	r3, [sp, #12]
   14e54:	strh	r0, [r4, #56]	; 0x38
   14e58:	cmp	r3, #0
   14e5c:	bne	14d7c <__assert_fail@plt+0x34b0>
   14e60:	cmp	r8, #0
   14e64:	str	r3, [r4, #8]
   14e68:	moveq	r8, r4
   14e6c:	streq	r4, [sp, #28]
   14e70:	beq	14d84 <__assert_fail@plt+0x34b8>
   14e74:	ldr	r3, [sp, #28]
   14e78:	str	r4, [sp, #28]
   14e7c:	str	r4, [r3, #8]
   14e80:	ldr	fp, [r9, #4]!
   14e84:	add	sl, sl, #1
   14e88:	cmp	fp, #0
   14e8c:	bne	14d94 <__assert_fail@plt+0x34c8>
   14e90:	ldr	r3, [sp, #12]
   14e94:	cmp	r3, #0
   14e98:	cmpne	sl, #1
   14e9c:	bls	14eb4 <__assert_fail@plt+0x35e8>
   14ea0:	mov	r1, r8
   14ea4:	mov	r2, sl
   14ea8:	mov	r0, r7
   14eac:	bl	137d0 <__assert_fail@plt+0x1f04>
   14eb0:	mov	r8, r0
   14eb4:	mov	r0, #176	; 0xb0
   14eb8:	bl	1d804 <lchmod@@Base+0x61bc>
   14ebc:	cmp	r0, #0
   14ec0:	streq	r0, [r7]
   14ec4:	beq	14f88 <__assert_fail@plt+0x36bc>
   14ec8:	ldr	lr, [r7, #24]
   14ecc:	movw	r4, #258	; 0x102
   14ed0:	mov	r1, #0
   14ed4:	mov	ip, #1
   14ed8:	mov	r2, #9
   14edc:	str	r0, [r7]
   14ee0:	ldr	r3, [r7, #48]	; 0x30
   14ee4:	str	r8, [r0, #8]
   14ee8:	str	r1, [r0, #12]
   14eec:	str	r1, [r0, #16]
   14ef0:	str	r1, [r0, #20]
   14ef4:	tst	r4, r3
   14ef8:	mov	r3, #3
   14efc:	str	lr, [r0, #28]
   14f00:	str	r1, [r0, #32]
   14f04:	str	r7, [r0, #44]	; 0x2c
   14f08:	str	ip, [r0, #48]	; 0x30
   14f0c:	str	r1, [r0, #52]	; 0x34
   14f10:	str	r2, [r0, #56]	; 0x38
   14f14:	strh	r3, [r0, #60]	; 0x3c
   14f18:	strb	r1, [r0, #168]	; 0xa8
   14f1c:	beq	1508c <__assert_fail@plt+0x37c0>
   14f20:	movw	r0, #13960	; 0x3688
   14f24:	movt	r0, #1
   14f28:	movw	r3, #14056	; 0x36e8
   14f2c:	movt	r3, #1
   14f30:	movw	r2, #14120	; 0x3728
   14f34:	movt	r2, #1
   14f38:	str	r0, [sp]
   14f3c:	mov	r0, #31
   14f40:	bl	166d4 <__assert_fail@plt+0x4e08>
   14f44:	cmp	r0, #0
   14f48:	str	r0, [r7, #56]	; 0x38
   14f4c:	beq	14f88 <__assert_fail@plt+0x36bc>
   14f50:	ldr	r3, [r7, #48]	; 0x30
   14f54:	tst	r3, #516	; 0x204
   14f58:	beq	150b0 <__assert_fail@plt+0x37e4>
   14f5c:	mvn	r1, #0
   14f60:	add	r0, r7, #60	; 0x3c
   14f64:	bl	1757c <__assert_fail@plt+0x5cb0>
   14f68:	mov	r0, r7
   14f6c:	add	sp, sp, #36	; 0x24
   14f70:	ldrd	r4, [sp]
   14f74:	ldrd	r6, [sp, #8]
   14f78:	ldrd	r8, [sp, #16]
   14f7c:	ldrd	sl, [sp, #24]
   14f80:	add	sp, sp, #32
   14f84:	pop	{pc}		; (ldr pc, [sp], #4)
   14f88:	cmp	r8, #0
   14f8c:	bne	14fb0 <__assert_fail@plt+0x36e4>
   14f90:	b	14fd0 <__assert_fail@plt+0x3704>
   14f94:	mov	r0, r3
   14f98:	bl	118b4 <closedir@plt>
   14f9c:	mov	r0, r8
   14fa0:	bl	13688 <__assert_fail@plt+0x1dbc>
   14fa4:	cmp	r4, #0
   14fa8:	beq	14fd0 <__assert_fail@plt+0x3704>
   14fac:	mov	r8, r4
   14fb0:	mov	r0, r8
   14fb4:	ldr	r4, [r8, #8]
   14fb8:	ldr	r3, [r8, #12]
   14fbc:	cmp	r3, #0
   14fc0:	bne	14f94 <__assert_fail@plt+0x36c8>
   14fc4:	bl	13688 <__assert_fail@plt+0x1dbc>
   14fc8:	cmp	r4, #0
   14fcc:	bne	14fac <__assert_fail@plt+0x36e0>
   14fd0:	ldr	r0, [sp, #16]
   14fd4:	bl	13688 <__assert_fail@plt+0x1dbc>
   14fd8:	ldr	r0, [r7, #24]
   14fdc:	bl	13688 <__assert_fail@plt+0x1dbc>
   14fe0:	mov	r0, r7
   14fe4:	mov	r7, #0
   14fe8:	bl	13688 <__assert_fail@plt+0x1dbc>
   14fec:	b	14f68 <__assert_fail@plt+0x369c>
   14ff0:	bl	1171c <__errno_location@plt>
   14ff4:	mov	r3, #22
   14ff8:	str	r3, [r0]
   14ffc:	b	14f68 <__assert_fail@plt+0x369c>
   15000:	sub	r3, r0, #1
   15004:	ldrb	r2, [fp, r3]
   15008:	add	r3, fp, r3
   1500c:	cmp	r2, #47	; 0x2f
   15010:	bne	14db8 <__assert_fail@plt+0x34ec>
   15014:	ldrb	r2, [r3, #-1]!
   15018:	cmp	r2, #47	; 0x2f
   1501c:	bne	14db8 <__assert_fail@plt+0x34ec>
   15020:	sub	r5, r5, #1
   15024:	cmp	r5, #1
   15028:	bne	15014 <__assert_fail@plt+0x3748>
   1502c:	mov	r0, #176	; 0xb0
   15030:	b	14dc0 <__assert_fail@plt+0x34f4>
   15034:	ldr	r3, [sp, #28]
   15038:	str	r2, [r4, #8]
   1503c:	str	r4, [sp, #28]
   15040:	str	r4, [r3, #8]
   15044:	b	14e80 <__assert_fail@plt+0x35b4>
   15048:	ldr	r3, [sp, #12]
   1504c:	cmp	r3, #0
   15050:	beq	15118 <__assert_fail@plt+0x384c>
   15054:	ldr	fp, [sp, #16]
   15058:	b	14d24 <__assert_fail@plt+0x3458>
   1505c:	bl	1171c <__errno_location@plt>
   15060:	mov	r3, #22
   15064:	mov	r7, #0
   15068:	str	r3, [r0]
   1506c:	b	14f68 <__assert_fail@plt+0x369c>
   15070:	bl	13688 <__assert_fail@plt+0x1dbc>
   15074:	mov	r3, #0
   15078:	str	r3, [r7, #24]
   1507c:	bl	1171c <__errno_location@plt>
   15080:	mov	r3, #36	; 0x24
   15084:	str	r3, [r0]
   15088:	b	14fe0 <__assert_fail@plt+0x3714>
   1508c:	mov	r0, #32
   15090:	bl	1d804 <lchmod@@Base+0x61bc>
   15094:	cmp	r0, #0
   15098:	str	r0, [r7, #56]	; 0x38
   1509c:	beq	14f88 <__assert_fail@plt+0x36bc>
   150a0:	bl	1d9f4 <lchmod@@Base+0x63ac>
   150a4:	b	14f50 <__assert_fail@plt+0x3684>
   150a8:	mov	r4, #4096	; 0x1000
   150ac:	b	14c84 <__assert_fail@plt+0x33b8>
   150b0:	lsl	r2, r3, #11
   150b4:	tst	r3, #512	; 0x200
   150b8:	and	r2, r2, #32768	; 0x8000
   150bc:	orr	r2, r2, #540672	; 0x84000
   150c0:	orr	r2, r2, #2304	; 0x900
   150c4:	beq	15104 <__assert_fail@plt+0x3838>
   150c8:	movw	r1, #60064	; 0xeaa0
   150cc:	movt	r1, #1
   150d0:	ldr	r0, [r7, #32]
   150d4:	bl	17cf8 <lchmod@@Base+0x6b0>
   150d8:	cmp	r0, #0
   150dc:	str	r0, [r7, #28]
   150e0:	bge	14f5c <__assert_fail@plt+0x3690>
   150e4:	ldr	r3, [r7, #48]	; 0x30
   150e8:	orr	r3, r3, #4
   150ec:	str	r3, [r7, #48]	; 0x30
   150f0:	b	14f5c <__assert_fail@plt+0x3690>
   150f4:	ldr	r0, [r7, #24]
   150f8:	bl	13688 <__assert_fail@plt+0x1dbc>
   150fc:	str	r4, [r7, #24]
   15100:	b	14fe0 <__assert_fail@plt+0x3714>
   15104:	mov	r1, r2
   15108:	movw	r0, #60064	; 0xeaa0
   1510c:	movt	r0, #1
   15110:	bl	1ddb0 <lchmod@@Base+0x6768>
   15114:	b	150d8 <__assert_fail@plt+0x380c>
   15118:	ldr	r8, [sp, #16]
   1511c:	b	14eb4 <__assert_fail@plt+0x35e8>
   15120:	mov	r8, fp
   15124:	b	14eb4 <__assert_fail@plt+0x35e8>
   15128:	ldr	r3, [r0]
   1512c:	strd	r4, [sp, #-16]!
   15130:	str	r6, [sp, #8]
   15134:	mov	r6, r0
   15138:	str	lr, [sp, #12]
   1513c:	cmp	r3, #0
   15140:	beq	15194 <__assert_fail@plt+0x38c8>
   15144:	ldr	r2, [r3, #48]	; 0x30
   15148:	cmp	r2, #0
   1514c:	bge	15168 <__assert_fail@plt+0x389c>
   15150:	b	15318 <__assert_fail@plt+0x3a4c>
   15154:	bl	13688 <__assert_fail@plt+0x1dbc>
   15158:	ldr	r3, [r4, #48]	; 0x30
   1515c:	cmp	r3, #0
   15160:	blt	1518c <__assert_fail@plt+0x38c0>
   15164:	mov	r3, r4
   15168:	ldr	r4, [r3, #8]
   1516c:	mov	r0, r3
   15170:	cmp	r4, #0
   15174:	bne	15154 <__assert_fail@plt+0x3888>
   15178:	ldr	r4, [r3, #4]
   1517c:	bl	13688 <__assert_fail@plt+0x1dbc>
   15180:	ldr	r3, [r4, #48]	; 0x30
   15184:	cmp	r3, #0
   15188:	bge	15164 <__assert_fail@plt+0x3898>
   1518c:	mov	r0, r4
   15190:	bl	13688 <__assert_fail@plt+0x1dbc>
   15194:	ldr	r4, [r6, #4]
   15198:	cmp	r4, #0
   1519c:	bne	151c0 <__assert_fail@plt+0x38f4>
   151a0:	b	151e0 <__assert_fail@plt+0x3914>
   151a4:	mov	r0, r3
   151a8:	bl	118b4 <closedir@plt>
   151ac:	mov	r0, r4
   151b0:	bl	13688 <__assert_fail@plt+0x1dbc>
   151b4:	cmp	r5, #0
   151b8:	beq	151e0 <__assert_fail@plt+0x3914>
   151bc:	mov	r4, r5
   151c0:	mov	r0, r4
   151c4:	ldr	r5, [r4, #8]
   151c8:	ldr	r3, [r4, #12]
   151cc:	cmp	r3, #0
   151d0:	bne	151a4 <__assert_fail@plt+0x38d8>
   151d4:	bl	13688 <__assert_fail@plt+0x1dbc>
   151d8:	cmp	r5, #0
   151dc:	bne	151bc <__assert_fail@plt+0x38f0>
   151e0:	ldr	r0, [r6, #8]
   151e4:	bl	13688 <__assert_fail@plt+0x1dbc>
   151e8:	ldr	r0, [r6, #24]
   151ec:	bl	13688 <__assert_fail@plt+0x1dbc>
   151f0:	ldr	r3, [r6, #48]	; 0x30
   151f4:	tst	r3, #512	; 0x200
   151f8:	beq	152a8 <__assert_fail@plt+0x39dc>
   151fc:	ldr	r0, [r6, #32]
   15200:	cmp	r0, #0
   15204:	bge	15290 <__assert_fail@plt+0x39c4>
   15208:	mov	r5, #0
   1520c:	add	r4, r6, #60	; 0x3c
   15210:	b	15220 <__assert_fail@plt+0x3954>
   15214:	bl	175f8 <__assert_fail@plt+0x5d2c>
   15218:	cmp	r0, #0
   1521c:	bge	15288 <__assert_fail@plt+0x39bc>
   15220:	mov	r0, r4
   15224:	bl	175a8 <__assert_fail@plt+0x5cdc>
   15228:	cmp	r0, #0
   1522c:	mov	r0, r4
   15230:	beq	15214 <__assert_fail@plt+0x3948>
   15234:	ldr	r0, [r6, #52]	; 0x34
   15238:	cmp	r0, #0
   1523c:	beq	15244 <__assert_fail@plt+0x3978>
   15240:	bl	16a14 <__assert_fail@plt+0x5148>
   15244:	ldr	r3, [r6, #48]	; 0x30
   15248:	movw	r2, #258	; 0x102
   1524c:	ldr	r0, [r6, #56]	; 0x38
   15250:	tst	r2, r3
   15254:	beq	152e0 <__assert_fail@plt+0x3a14>
   15258:	cmp	r0, #0
   1525c:	beq	15264 <__assert_fail@plt+0x3998>
   15260:	bl	16a14 <__assert_fail@plt+0x5148>
   15264:	mov	r0, r6
   15268:	bl	13688 <__assert_fail@plt+0x1dbc>
   1526c:	cmp	r5, #0
   15270:	bne	15320 <__assert_fail@plt+0x3a54>
   15274:	mov	r0, r5
   15278:	ldrd	r4, [sp]
   1527c:	ldr	r6, [sp, #8]
   15280:	add	sp, sp, #12
   15284:	pop	{pc}		; (ldr pc, [sp], #4)
   15288:	bl	11884 <close@plt>
   1528c:	b	15220 <__assert_fail@plt+0x3954>
   15290:	bl	11884 <close@plt>
   15294:	cmp	r0, #0
   15298:	beq	15208 <__assert_fail@plt+0x393c>
   1529c:	bl	1171c <__errno_location@plt>
   152a0:	ldr	r5, [r0]
   152a4:	b	1520c <__assert_fail@plt+0x3940>
   152a8:	tst	r3, #4
   152ac:	bne	15208 <__assert_fail@plt+0x393c>
   152b0:	ldr	r0, [r6, #28]
   152b4:	bl	117f4 <fchdir@plt>
   152b8:	cmp	r0, #0
   152bc:	bne	152e8 <__assert_fail@plt+0x3a1c>
   152c0:	ldr	r0, [r6, #28]
   152c4:	bl	11884 <close@plt>
   152c8:	cmp	r0, #0
   152cc:	beq	15208 <__assert_fail@plt+0x393c>
   152d0:	bl	1171c <__errno_location@plt>
   152d4:	mov	r4, r0
   152d8:	ldr	r5, [r4]
   152dc:	b	1520c <__assert_fail@plt+0x3940>
   152e0:	bl	13688 <__assert_fail@plt+0x1dbc>
   152e4:	b	15264 <__assert_fail@plt+0x3998>
   152e8:	bl	1171c <__errno_location@plt>
   152ec:	ldr	r5, [r0]
   152f0:	mov	r4, r0
   152f4:	ldr	r0, [r6, #28]
   152f8:	bl	11884 <close@plt>
   152fc:	adds	r3, r0, #0
   15300:	movne	r3, #1
   15304:	cmp	r5, #0
   15308:	movne	r3, #0
   1530c:	cmp	r3, #0
   15310:	beq	1520c <__assert_fail@plt+0x3940>
   15314:	b	152d8 <__assert_fail@plt+0x3a0c>
   15318:	mov	r4, r3
   1531c:	b	1518c <__assert_fail@plt+0x38c0>
   15320:	bl	1171c <__errno_location@plt>
   15324:	str	r5, [r0]
   15328:	mvn	r5, #0
   1532c:	b	15274 <__assert_fail@plt+0x39a8>
   15330:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15334:	ldr	r4, [r0]
   15338:	strd	r6, [sp, #8]
   1533c:	str	r8, [sp, #16]
   15340:	str	lr, [sp, #20]
   15344:	sub	sp, sp, #8
   15348:	cmp	r4, #0
   1534c:	beq	1555c <__assert_fail@plt+0x3c90>
   15350:	ldr	r1, [r0, #48]	; 0x30
   15354:	ands	r3, r1, #8192	; 0x2000
   15358:	bne	1555c <__assert_fail@plt+0x3c90>
   1535c:	ldrh	r2, [r4, #60]	; 0x3c
   15360:	mov	r8, r0
   15364:	mov	r0, #3
   15368:	strh	r0, [r4, #60]	; 0x3c
   1536c:	cmp	r2, #1
   15370:	beq	157b4 <__assert_fail@plt+0x3ee8>
   15374:	cmp	r2, #2
   15378:	ldrh	r3, [r4, #56]	; 0x38
   1537c:	beq	1547c <__assert_fail@plt+0x3bb0>
   15380:	cmp	r3, #1
   15384:	bne	153b4 <__assert_fail@plt+0x3ae8>
   15388:	b	1557c <__assert_fail@plt+0x3cb0>
   1538c:	mov	r0, r4
   15390:	str	r5, [r8]
   15394:	bl	13688 <__assert_fail@plt+0x1dbc>
   15398:	ldr	r4, [r5, #48]	; 0x30
   1539c:	cmp	r4, #0
   153a0:	beq	155fc <__assert_fail@plt+0x3d30>
   153a4:	ldrh	r3, [r5, #60]	; 0x3c
   153a8:	mov	r4, r5
   153ac:	cmp	r3, #4
   153b0:	bne	156d0 <__assert_fail@plt+0x3e04>
   153b4:	ldr	r5, [r4, #8]
   153b8:	cmp	r5, #0
   153bc:	bne	1538c <__assert_fail@plt+0x3ac0>
   153c0:	ldr	r6, [r4, #4]
   153c4:	ldr	r3, [r6, #12]
   153c8:	cmp	r3, #0
   153cc:	bne	1592c <__assert_fail@plt+0x4060>
   153d0:	mov	r0, r4
   153d4:	str	r6, [r8]
   153d8:	bl	13688 <__assert_fail@plt+0x1dbc>
   153dc:	ldr	r3, [r6, #48]	; 0x30
   153e0:	cmn	r3, #1
   153e4:	beq	1590c <__assert_fail@plt+0x4040>
   153e8:	ldrh	r3, [r6, #56]	; 0x38
   153ec:	cmp	r3, #11
   153f0:	beq	157b0 <__assert_fail@plt+0x3ee4>
   153f4:	ldr	r2, [r8, #24]
   153f8:	mov	r1, #0
   153fc:	ldr	r3, [r6, #40]	; 0x28
   15400:	strb	r1, [r2, r3]
   15404:	ldr	r3, [r6, #48]	; 0x30
   15408:	cmp	r3, r1
   1540c:	beq	15528 <__assert_fail@plt+0x3c5c>
   15410:	ldrh	r3, [r6, #58]	; 0x3a
   15414:	tst	r3, #2
   15418:	beq	15868 <__assert_fail@plt+0x3f9c>
   1541c:	ldr	r3, [r8, #48]	; 0x30
   15420:	ldr	r4, [r6, #36]	; 0x24
   15424:	tst	r3, #4
   15428:	bne	15470 <__assert_fail@plt+0x3ba4>
   1542c:	tst	r3, #512	; 0x200
   15430:	beq	15a08 <__assert_fail@plt+0x413c>
   15434:	ldr	r1, [r8, #32]
   15438:	sub	r3, r4, r1
   1543c:	cmn	r1, #100	; 0x64
   15440:	clz	r3, r3
   15444:	lsr	r3, r3, #5
   15448:	moveq	r3, #0
   1544c:	cmp	r3, #0
   15450:	bne	157b0 <__assert_fail@plt+0x3ee4>
   15454:	add	r0, r8, #60	; 0x3c
   15458:	bl	175b0 <__assert_fail@plt+0x5ce4>
   1545c:	cmp	r0, #0
   15460:	blt	15468 <__assert_fail@plt+0x3b9c>
   15464:	bl	11884 <close@plt>
   15468:	str	r4, [r8, #32]
   1546c:	ldr	r4, [r6, #36]	; 0x24
   15470:	mov	r0, r4
   15474:	bl	11884 <close@plt>
   15478:	b	15870 <__assert_fail@plt+0x3fa4>
   1547c:	sub	r2, r3, #12
   15480:	cmp	r2, #1
   15484:	bls	1576c <__assert_fail@plt+0x3ea0>
   15488:	cmp	r3, #1
   1548c:	bne	153b4 <__assert_fail@plt+0x3ae8>
   15490:	tst	r1, #64	; 0x40
   15494:	beq	154ac <__assert_fail@plt+0x3be0>
   15498:	ldrd	r2, [r8, #16]
   1549c:	ldrd	r6, [r4, #64]	; 0x40
   154a0:	cmp	r7, r3
   154a4:	cmpeq	r6, r2
   154a8:	bne	15584 <__assert_fail@plt+0x3cb8>
   154ac:	ldr	r5, [r8, #4]
   154b0:	cmp	r5, #0
   154b4:	beq	15814 <__assert_fail@plt+0x3f48>
   154b8:	tst	r1, #4096	; 0x1000
   154bc:	bne	157c8 <__assert_fail@plt+0x3efc>
   154c0:	mvn	r2, #0
   154c4:	mov	r1, r4
   154c8:	ldr	r3, [r4, #24]
   154cc:	mov	r0, r8
   154d0:	bl	13d84 <__assert_fail@plt+0x24b8>
   154d4:	cmp	r0, #0
   154d8:	beq	158f4 <__assert_fail@plt+0x4028>
   154dc:	bl	1171c <__errno_location@plt>
   154e0:	ldrh	r3, [r4, #58]	; 0x3a
   154e4:	ldr	r2, [r0]
   154e8:	orr	r3, r3, #1
   154ec:	str	r2, [r4, #32]
   154f0:	strh	r3, [r4, #58]	; 0x3a
   154f4:	ldr	r4, [r8, #4]
   154f8:	cmp	r4, #0
   154fc:	beq	1551c <__assert_fail@plt+0x3c50>
   15500:	mov	r3, r4
   15504:	ldr	r2, [r3, #4]
   15508:	ldr	r2, [r2, #24]
   1550c:	str	r2, [r3, #24]
   15510:	ldr	r3, [r3, #8]
   15514:	cmp	r3, #0
   15518:	bne	15504 <__assert_fail@plt+0x3c38>
   1551c:	mov	r3, #0
   15520:	str	r3, [r8, #4]
   15524:	b	156d8 <__assert_fail@plt+0x3e0c>
   15528:	mov	r0, r8
   1552c:	bl	13cd8 <__assert_fail@plt+0x240c>
   15530:	cmp	r0, #0
   15534:	beq	15870 <__assert_fail@plt+0x3fa4>
   15538:	bl	1171c <__errno_location@plt>
   1553c:	ldr	r3, [r8, #48]	; 0x30
   15540:	ldr	r2, [r0]
   15544:	orr	r0, r3, #8192	; 0x2000
   15548:	ldrh	r3, [r6, #56]	; 0x38
   1554c:	str	r2, [r6, #32]
   15550:	str	r0, [r8, #48]	; 0x30
   15554:	cmp	r3, #2
   15558:	bne	15884 <__assert_fail@plt+0x3fb8>
   1555c:	mov	r4, #0
   15560:	mov	r0, r4
   15564:	add	sp, sp, #8
   15568:	ldrd	r4, [sp]
   1556c:	ldrd	r6, [sp, #8]
   15570:	ldr	r8, [sp, #16]
   15574:	add	sp, sp, #20
   15578:	pop	{pc}		; (ldr pc, [sp], #4)
   1557c:	cmp	r2, #4
   15580:	bne	15490 <__assert_fail@plt+0x3bc4>
   15584:	ldrh	r3, [r4, #58]	; 0x3a
   15588:	tst	r3, #2
   1558c:	bne	1596c <__assert_fail@plt+0x40a0>
   15590:	ldr	r5, [r8, #4]
   15594:	cmp	r5, #0
   15598:	bne	155d0 <__assert_fail@plt+0x3d04>
   1559c:	mov	r3, #6
   155a0:	mov	r2, r4
   155a4:	ldr	r0, [r8, #48]	; 0x30
   155a8:	add	r1, r8, #56	; 0x38
   155ac:	strh	r3, [r4, #56]	; 0x38
   155b0:	bl	13c0c <__assert_fail@plt+0x2340>
   155b4:	b	15560 <__assert_fail@plt+0x3c94>
   155b8:	bl	118b4 <closedir@plt>
   155bc:	mov	r0, r5
   155c0:	bl	13688 <__assert_fail@plt+0x1dbc>
   155c4:	cmp	r6, #0
   155c8:	beq	155f0 <__assert_fail@plt+0x3d24>
   155cc:	mov	r5, r6
   155d0:	ldr	r6, [r5, #8]
   155d4:	ldr	r0, [r5, #12]
   155d8:	cmp	r0, #0
   155dc:	bne	155b8 <__assert_fail@plt+0x3cec>
   155e0:	mov	r0, r5
   155e4:	bl	13688 <__assert_fail@plt+0x1dbc>
   155e8:	cmp	r6, #0
   155ec:	bne	155cc <__assert_fail@plt+0x3d00>
   155f0:	mov	r3, #0
   155f4:	str	r3, [r8, #4]
   155f8:	b	1559c <__assert_fail@plt+0x3cd0>
   155fc:	mov	r0, r8
   15600:	bl	13cd8 <__assert_fail@plt+0x240c>
   15604:	ldr	r3, [r8, #48]	; 0x30
   15608:	cmp	r0, #0
   1560c:	orrne	r3, r3, #8192	; 0x2000
   15610:	strne	r3, [r8, #48]	; 0x30
   15614:	bne	15560 <__assert_fail@plt+0x3c94>
   15618:	movw	r2, #258	; 0x102
   1561c:	ldr	r0, [r8, #56]	; 0x38
   15620:	tst	r2, r3
   15624:	beq	15964 <__assert_fail@plt+0x4098>
   15628:	cmp	r0, #0
   1562c:	beq	15634 <__assert_fail@plt+0x3d68>
   15630:	bl	16a14 <__assert_fail@plt+0x5148>
   15634:	ldr	r2, [r5, #52]	; 0x34
   15638:	add	r4, r5, #168	; 0xa8
   1563c:	mov	r1, r4
   15640:	ldr	r0, [r8, #24]
   15644:	str	r2, [r5, #40]	; 0x28
   15648:	add	r2, r2, #1
   1564c:	bl	11500 <memmove@plt>
   15650:	mov	r0, r4
   15654:	mov	r1, #47	; 0x2f
   15658:	bl	117ac <strrchr@plt>
   1565c:	cmp	r0, #0
   15660:	beq	15690 <__assert_fail@plt+0x3dc4>
   15664:	cmp	r4, r0
   15668:	beq	158fc <__assert_fail@plt+0x4030>
   1566c:	add	r6, r0, #1
   15670:	mov	r0, r6
   15674:	bl	116e0 <strlen@plt>
   15678:	mov	r7, r0
   1567c:	mov	r1, r6
   15680:	mov	r0, r4
   15684:	add	r2, r7, #1
   15688:	bl	11500 <memmove@plt>
   1568c:	str	r7, [r5, #52]	; 0x34
   15690:	ldr	r3, [r8, #24]
   15694:	movw	r1, #258	; 0x102
   15698:	ldr	r2, [r8, #48]	; 0x30
   1569c:	str	r3, [r5, #24]
   156a0:	str	r3, [r5, #28]
   156a4:	tst	r1, r2
   156a8:	bne	158bc <__assert_fail@plt+0x3ff0>
   156ac:	mov	r0, #32
   156b0:	bl	1d804 <lchmod@@Base+0x61bc>
   156b4:	cmp	r0, #0
   156b8:	str	r0, [r8, #56]	; 0x38
   156bc:	beq	159fc <__assert_fail@plt+0x4130>
   156c0:	bl	1d9f4 <lchmod@@Base+0x63ac>
   156c4:	mov	r4, r5
   156c8:	ldrh	r3, [r5, #56]	; 0x38
   156cc:	b	1571c <__assert_fail@plt+0x3e50>
   156d0:	cmp	r3, #2
   156d4:	beq	15978 <__assert_fail@plt+0x40ac>
   156d8:	ldr	r0, [r4, #4]
   156dc:	mov	ip, #47	; 0x2f
   156e0:	add	r1, r4, #168	; 0xa8
   156e4:	ldr	r3, [r8, #24]
   156e8:	ldr	lr, [r0, #28]
   156ec:	ldr	r2, [r0, #40]	; 0x28
   156f0:	sub	r0, r2, #1
   156f4:	ldrb	lr, [lr, r0]
   156f8:	cmp	lr, ip
   156fc:	movne	r0, r2
   15700:	strb	ip, [r3, r0]
   15704:	add	r0, r3, r0
   15708:	ldr	r2, [r4, #52]	; 0x34
   1570c:	add	r0, r0, #1
   15710:	add	r2, r2, #1
   15714:	bl	11500 <memmove@plt>
   15718:	ldrh	r3, [r4, #56]	; 0x38
   1571c:	cmp	r3, #11
   15720:	str	r4, [r8]
   15724:	beq	15794 <__assert_fail@plt+0x3ec8>
   15728:	cmp	r3, #1
   1572c:	bne	15560 <__assert_fail@plt+0x3c94>
   15730:	ldr	r3, [r4, #48]	; 0x30
   15734:	add	r1, r8, #56	; 0x38
   15738:	ldr	r0, [r8, #48]	; 0x30
   1573c:	cmp	r3, #0
   15740:	ldrdeq	r2, [r4, #64]	; 0x40
   15744:	strdeq	r2, [r8, #16]
   15748:	mov	r2, r4
   1574c:	bl	13b38 <__assert_fail@plt+0x226c>
   15750:	subs	r5, r0, #0
   15754:	bne	15560 <__assert_fail@plt+0x3c94>
   15758:	bl	1171c <__errno_location@plt>
   1575c:	mov	r3, #12
   15760:	mov	r4, r5
   15764:	str	r3, [r0]
   15768:	b	15560 <__assert_fail@plt+0x3c94>
   1576c:	mov	r3, #1
   15770:	mov	r2, r4
   15774:	ldr	r0, [r8, #32]
   15778:	bl	139dc <__assert_fail@plt+0x2110>
   1577c:	cmp	r0, #1
   15780:	strh	r0, [r4, #56]	; 0x38
   15784:	beq	15a20 <__assert_fail@plt+0x4154>
   15788:	cmp	r0, #11
   1578c:	str	r4, [r8]
   15790:	bne	15560 <__assert_fail@plt+0x3c94>
   15794:	ldrd	r2, [r4, #112]	; 0x70
   15798:	cmp	r3, #0
   1579c:	cmpeq	r2, #2
   157a0:	beq	159a8 <__assert_fail@plt+0x40dc>
   157a4:	cmp	r3, #0
   157a8:	cmpeq	r2, #1
   157ac:	beq	15560 <__assert_fail@plt+0x3c94>
   157b0:	bl	11878 <abort@plt>
   157b4:	mov	r2, r4
   157b8:	ldr	r0, [r8, #32]
   157bc:	bl	139dc <__assert_fail@plt+0x2110>
   157c0:	strh	r0, [r4, #56]	; 0x38
   157c4:	b	15560 <__assert_fail@plt+0x3c94>
   157c8:	bic	r1, r1, #4096	; 0x1000
   157cc:	str	r1, [r8, #48]	; 0x30
   157d0:	b	157ec <__assert_fail@plt+0x3f20>
   157d4:	bl	118b4 <closedir@plt>
   157d8:	mov	r0, r5
   157dc:	bl	13688 <__assert_fail@plt+0x1dbc>
   157e0:	cmp	r6, #0
   157e4:	beq	1580c <__assert_fail@plt+0x3f40>
   157e8:	mov	r5, r6
   157ec:	ldr	r6, [r5, #8]
   157f0:	ldr	r0, [r5, #12]
   157f4:	cmp	r0, #0
   157f8:	bne	157d4 <__assert_fail@plt+0x3f08>
   157fc:	mov	r0, r5
   15800:	bl	13688 <__assert_fail@plt+0x1dbc>
   15804:	cmp	r6, #0
   15808:	bne	157e8 <__assert_fail@plt+0x3f1c>
   1580c:	mov	r3, #0
   15810:	str	r3, [r8, #4]
   15814:	mov	r1, #3
   15818:	mov	r0, r8
   1581c:	bl	14044 <__assert_fail@plt+0x2778>
   15820:	cmp	r0, #0
   15824:	str	r0, [r8, #4]
   15828:	movne	r4, r0
   1582c:	bne	1551c <__assert_fail@plt+0x3c50>
   15830:	ldr	r0, [r8, #48]	; 0x30
   15834:	tst	r0, #8192	; 0x2000
   15838:	bne	1555c <__assert_fail@plt+0x3c90>
   1583c:	ldr	r3, [r4, #32]
   15840:	cmp	r3, #0
   15844:	beq	15858 <__assert_fail@plt+0x3f8c>
   15848:	ldrh	r3, [r4, #56]	; 0x38
   1584c:	cmp	r3, #4
   15850:	movne	r3, #7
   15854:	strhne	r3, [r4, #56]	; 0x38
   15858:	add	r1, r8, #56	; 0x38
   1585c:	mov	r2, r4
   15860:	bl	13c0c <__assert_fail@plt+0x2340>
   15864:	b	15560 <__assert_fail@plt+0x3c94>
   15868:	tst	r3, #1
   1586c:	beq	159c8 <__assert_fail@plt+0x40fc>
   15870:	ldrh	r3, [r6, #56]	; 0x38
   15874:	ldr	r0, [r8, #48]	; 0x30
   15878:	cmp	r3, #2
   1587c:	beq	158ac <__assert_fail@plt+0x3fe0>
   15880:	ldr	r2, [r6, #32]
   15884:	cmp	r2, #0
   15888:	movne	r3, #7
   1588c:	strhne	r3, [r6, #56]	; 0x38
   15890:	bne	158ac <__assert_fail@plt+0x3fe0>
   15894:	mov	r3, #6
   15898:	mov	r2, r6
   1589c:	add	r1, r8, #56	; 0x38
   158a0:	strh	r3, [r6, #56]	; 0x38
   158a4:	bl	13c0c <__assert_fail@plt+0x2340>
   158a8:	ldr	r0, [r8, #48]	; 0x30
   158ac:	tst	r0, #8192	; 0x2000
   158b0:	moveq	r4, r6
   158b4:	beq	15560 <__assert_fail@plt+0x3c94>
   158b8:	b	1555c <__assert_fail@plt+0x3c90>
   158bc:	movw	r1, #13960	; 0x3688
   158c0:	movt	r1, #1
   158c4:	movw	r3, #14056	; 0x36e8
   158c8:	movt	r3, #1
   158cc:	movw	r2, #14120	; 0x3728
   158d0:	movt	r2, #1
   158d4:	str	r1, [sp]
   158d8:	mov	r0, #31
   158dc:	mov	r1, #0
   158e0:	bl	166d4 <__assert_fail@plt+0x4e08>
   158e4:	mov	r4, r5
   158e8:	ldrh	r3, [r5, #56]	; 0x38
   158ec:	str	r0, [r8, #56]	; 0x38
   158f0:	b	1571c <__assert_fail@plt+0x3e50>
   158f4:	ldr	r4, [r8, #4]
   158f8:	b	1551c <__assert_fail@plt+0x3c50>
   158fc:	ldrb	r3, [r4, #1]
   15900:	cmp	r3, #0
   15904:	beq	15690 <__assert_fail@plt+0x3dc4>
   15908:	b	1566c <__assert_fail@plt+0x3da0>
   1590c:	mov	r0, r6
   15910:	bl	13688 <__assert_fail@plt+0x1dbc>
   15914:	bl	1171c <__errno_location@plt>
   15918:	mov	r3, #0
   1591c:	mov	r4, r3
   15920:	str	r3, [r0]
   15924:	str	r3, [r8]
   15928:	b	15560 <__assert_fail@plt+0x3c94>
   1592c:	ldr	r2, [r8, #24]
   15930:	mov	r1, #3
   15934:	mov	r0, r8
   15938:	ldr	r3, [r6, #40]	; 0x28
   1593c:	str	r6, [r8]
   15940:	strb	r5, [r2, r3]
   15944:	bl	14044 <__assert_fail@plt+0x2778>
   15948:	subs	r3, r0, #0
   1594c:	bne	159ec <__assert_fail@plt+0x4120>
   15950:	ldr	r3, [r8, #48]	; 0x30
   15954:	tst	r3, #8192	; 0x2000
   15958:	bne	1555c <__assert_fail@plt+0x3c90>
   1595c:	ldr	r6, [r4, #4]
   15960:	b	153d0 <__assert_fail@plt+0x3b04>
   15964:	bl	13688 <__assert_fail@plt+0x1dbc>
   15968:	b	15634 <__assert_fail@plt+0x3d68>
   1596c:	ldr	r0, [r4, #36]	; 0x24
   15970:	bl	11884 <close@plt>
   15974:	b	15590 <__assert_fail@plt+0x3cc4>
   15978:	mov	r3, #1
   1597c:	mov	r2, r5
   15980:	ldr	r0, [r8, #32]
   15984:	ldr	r1, [r8, #48]	; 0x30
   15988:	bl	139dc <__assert_fail@plt+0x2110>
   1598c:	cmp	r0, #1
   15990:	strh	r0, [r5, #56]	; 0x38
   15994:	beq	15a78 <__assert_fail@plt+0x41ac>
   15998:	mov	r3, #3
   1599c:	mov	r4, r5
   159a0:	strh	r3, [r5, #60]	; 0x3c
   159a4:	b	156d8 <__assert_fail@plt+0x3e0c>
   159a8:	mov	r3, #0
   159ac:	mov	r2, r4
   159b0:	ldr	r0, [r8, #32]
   159b4:	ldr	r1, [r8, #48]	; 0x30
   159b8:	bl	139dc <__assert_fail@plt+0x2110>
   159bc:	mov	r3, r0
   159c0:	strh	r0, [r4, #56]	; 0x38
   159c4:	b	15728 <__assert_fail@plt+0x3e5c>
   159c8:	movw	r3, #60576	; 0xeca0
   159cc:	movt	r3, #1
   159d0:	ldr	r1, [r6, #4]
   159d4:	mvn	r2, #0
   159d8:	mov	r0, r8
   159dc:	bl	13d84 <__assert_fail@plt+0x24b8>
   159e0:	cmp	r0, #0
   159e4:	beq	15870 <__assert_fail@plt+0x3fa4>
   159e8:	b	15538 <__assert_fail@plt+0x3c6c>
   159ec:	mov	r0, r4
   159f0:	mov	r4, r3
   159f4:	bl	13688 <__assert_fail@plt+0x1dbc>
   159f8:	b	156d8 <__assert_fail@plt+0x3e0c>
   159fc:	ldrh	r3, [r5, #56]	; 0x38
   15a00:	mov	r4, r5
   15a04:	b	1571c <__assert_fail@plt+0x3e50>
   15a08:	mov	r0, r4
   15a0c:	bl	117f4 <fchdir@plt>
   15a10:	cmp	r0, #0
   15a14:	bne	15ac8 <__assert_fail@plt+0x41fc>
   15a18:	ldr	r4, [r6, #36]	; 0x24
   15a1c:	b	15470 <__assert_fail@plt+0x3ba4>
   15a20:	ldr	r3, [r8, #48]	; 0x30
   15a24:	tst	r3, #4
   15a28:	strne	r4, [r8]
   15a2c:	bne	15730 <__assert_fail@plt+0x3e64>
   15a30:	lsl	r2, r3, #11
   15a34:	tst	r3, #512	; 0x200
   15a38:	and	r2, r2, #32768	; 0x8000
   15a3c:	orr	r2, r2, #540672	; 0x84000
   15a40:	orr	r2, r2, #2304	; 0x900
   15a44:	beq	15ae8 <__assert_fail@plt+0x421c>
   15a48:	movw	r1, #60064	; 0xeaa0
   15a4c:	movt	r1, #1
   15a50:	ldr	r0, [r8, #32]
   15a54:	bl	17cf8 <lchmod@@Base+0x6b0>
   15a58:	cmp	r0, #0
   15a5c:	str	r0, [r4, #36]	; 0x24
   15a60:	blt	15afc <__assert_fail@plt+0x4230>
   15a64:	ldrh	r2, [r4, #58]	; 0x3a
   15a68:	ldrh	r3, [r4, #56]	; 0x38
   15a6c:	orr	r2, r2, #2
   15a70:	strh	r2, [r4, #58]	; 0x3a
   15a74:	b	1571c <__assert_fail@plt+0x3e50>
   15a78:	ldr	r3, [r8, #48]	; 0x30
   15a7c:	tst	r3, #4
   15a80:	bne	15998 <__assert_fail@plt+0x40cc>
   15a84:	lsl	r2, r3, #11
   15a88:	tst	r3, #512	; 0x200
   15a8c:	and	r2, r2, #32768	; 0x8000
   15a90:	orr	r2, r2, #540672	; 0x84000
   15a94:	orr	r2, r2, #2304	; 0x900
   15a98:	beq	15b18 <__assert_fail@plt+0x424c>
   15a9c:	movw	r1, #60064	; 0xeaa0
   15aa0:	movt	r1, #1
   15aa4:	ldr	r0, [r8, #32]
   15aa8:	bl	17cf8 <lchmod@@Base+0x6b0>
   15aac:	cmp	r0, #0
   15ab0:	str	r0, [r5, #36]	; 0x24
   15ab4:	blt	15b2c <__assert_fail@plt+0x4260>
   15ab8:	ldrh	r3, [r5, #58]	; 0x3a
   15abc:	orr	r3, r3, #2
   15ac0:	strh	r3, [r5, #58]	; 0x3a
   15ac4:	b	15998 <__assert_fail@plt+0x40cc>
   15ac8:	bl	1171c <__errno_location@plt>
   15acc:	ldr	r3, [r8, #48]	; 0x30
   15ad0:	ldr	r2, [r0]
   15ad4:	ldr	r4, [r6, #36]	; 0x24
   15ad8:	orr	r3, r3, #8192	; 0x2000
   15adc:	str	r2, [r6, #32]
   15ae0:	str	r3, [r8, #48]	; 0x30
   15ae4:	b	15470 <__assert_fail@plt+0x3ba4>
   15ae8:	mov	r1, r2
   15aec:	movw	r0, #60064	; 0xeaa0
   15af0:	movt	r0, #1
   15af4:	bl	1ddb0 <lchmod@@Base+0x6768>
   15af8:	b	15a58 <__assert_fail@plt+0x418c>
   15afc:	bl	1171c <__errno_location@plt>
   15b00:	ldr	r3, [r0]
   15b04:	mov	r2, #7
   15b08:	str	r3, [r4, #32]
   15b0c:	strh	r2, [r4, #56]	; 0x38
   15b10:	str	r4, [r8]
   15b14:	b	15560 <__assert_fail@plt+0x3c94>
   15b18:	mov	r1, r2
   15b1c:	movw	r0, #60064	; 0xeaa0
   15b20:	movt	r0, #1
   15b24:	bl	1ddb0 <lchmod@@Base+0x6768>
   15b28:	b	15aac <__assert_fail@plt+0x41e0>
   15b2c:	bl	1171c <__errno_location@plt>
   15b30:	ldr	r3, [r0]
   15b34:	mov	r2, #7
   15b38:	str	r3, [r5, #32]
   15b3c:	strh	r2, [r5, #56]	; 0x38
   15b40:	b	15998 <__assert_fail@plt+0x40cc>
   15b44:	cmp	r2, #4
   15b48:	bhi	15b5c <__assert_fail@plt+0x4290>
   15b4c:	mov	r3, #0
   15b50:	strh	r2, [r1, #60]	; 0x3c
   15b54:	mov	r0, r3
   15b58:	bx	lr
   15b5c:	str	r4, [sp, #-8]!
   15b60:	str	lr, [sp, #4]
   15b64:	bl	1171c <__errno_location@plt>
   15b68:	mov	r2, #22
   15b6c:	mov	r3, #1
   15b70:	ldr	r4, [sp]
   15b74:	add	sp, sp, #4
   15b78:	str	r2, [r0]
   15b7c:	mov	r0, r3
   15b80:	pop	{pc}		; (ldr pc, [sp], #4)
   15b84:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15b88:	mov	r5, r0
   15b8c:	strd	r6, [sp, #8]
   15b90:	strd	r8, [sp, #16]
   15b94:	mov	r8, r1
   15b98:	str	sl, [sp, #24]
   15b9c:	str	lr, [sp, #28]
   15ba0:	bl	1171c <__errno_location@plt>
   15ba4:	bics	r2, r8, #4096	; 0x1000
   15ba8:	mov	r6, r0
   15bac:	movne	r3, #22
   15bb0:	movne	r0, #0
   15bb4:	strne	r3, [r6]
   15bb8:	bne	15c80 <__assert_fail@plt+0x43b4>
   15bbc:	ldr	r9, [r5]
   15bc0:	str	r2, [r6]
   15bc4:	ldr	r3, [r5, #48]	; 0x30
   15bc8:	ands	r0, r3, #8192	; 0x2000
   15bcc:	bne	15d30 <__assert_fail@plt+0x4464>
   15bd0:	ldrh	r3, [r9, #56]	; 0x38
   15bd4:	cmp	r3, #9
   15bd8:	beq	15d38 <__assert_fail@plt+0x446c>
   15bdc:	cmp	r3, #1
   15be0:	bne	15c80 <__assert_fail@plt+0x43b4>
   15be4:	ldr	r4, [r5, #4]
   15be8:	cmp	r4, #0
   15bec:	bne	15c0c <__assert_fail@plt+0x4340>
   15bf0:	b	15c2c <__assert_fail@plt+0x4360>
   15bf4:	bl	118b4 <closedir@plt>
   15bf8:	mov	r0, r4
   15bfc:	bl	13688 <__assert_fail@plt+0x1dbc>
   15c00:	cmp	r7, #0
   15c04:	beq	15c2c <__assert_fail@plt+0x4360>
   15c08:	mov	r4, r7
   15c0c:	ldr	r7, [r4, #8]
   15c10:	ldr	r0, [r4, #12]
   15c14:	cmp	r0, #0
   15c18:	bne	15bf4 <__assert_fail@plt+0x4328>
   15c1c:	mov	r0, r4
   15c20:	bl	13688 <__assert_fail@plt+0x1dbc>
   15c24:	cmp	r7, #0
   15c28:	bne	15c08 <__assert_fail@plt+0x433c>
   15c2c:	cmp	r8, #4096	; 0x1000
   15c30:	movne	r4, #1
   15c34:	bne	15c48 <__assert_fail@plt+0x437c>
   15c38:	ldr	r3, [r5, #48]	; 0x30
   15c3c:	mov	r4, #2
   15c40:	orr	r3, r3, #4096	; 0x1000
   15c44:	str	r3, [r5, #48]	; 0x30
   15c48:	ldr	r3, [r9, #48]	; 0x30
   15c4c:	cmp	r3, #0
   15c50:	bne	15c70 <__assert_fail@plt+0x43a4>
   15c54:	ldr	r3, [r9, #24]
   15c58:	ldrb	r3, [r3]
   15c5c:	cmp	r3, #47	; 0x2f
   15c60:	beq	15c70 <__assert_fail@plt+0x43a4>
   15c64:	ldr	r3, [r5, #48]	; 0x30
   15c68:	tst	r3, #4
   15c6c:	beq	15c98 <__assert_fail@plt+0x43cc>
   15c70:	mov	r1, r4
   15c74:	mov	r0, r5
   15c78:	bl	14044 <__assert_fail@plt+0x2778>
   15c7c:	str	r0, [r5, #4]
   15c80:	ldrd	r4, [sp]
   15c84:	ldrd	r6, [sp, #8]
   15c88:	ldrd	r8, [sp, #16]
   15c8c:	ldr	sl, [sp, #24]
   15c90:	add	sp, sp, #28
   15c94:	pop	{pc}		; (ldr pc, [sp], #4)
   15c98:	lsl	r2, r3, #11
   15c9c:	tst	r3, #512	; 0x200
   15ca0:	and	r2, r2, #32768	; 0x8000
   15ca4:	orr	r2, r2, #540672	; 0x84000
   15ca8:	orr	r2, r2, #2304	; 0x900
   15cac:	beq	15d40 <__assert_fail@plt+0x4474>
   15cb0:	movw	r1, #60064	; 0xeaa0
   15cb4:	movt	r1, #1
   15cb8:	ldr	r0, [r5, #32]
   15cbc:	bl	17cf8 <lchmod@@Base+0x6b0>
   15cc0:	mov	r7, r0
   15cc4:	cmp	r7, #0
   15cc8:	movlt	r3, #0
   15ccc:	movlt	r0, r3
   15cd0:	strlt	r3, [r5, #4]
   15cd4:	blt	15c80 <__assert_fail@plt+0x43b4>
   15cd8:	mov	r1, r4
   15cdc:	mov	r0, r5
   15ce0:	bl	14044 <__assert_fail@plt+0x2778>
   15ce4:	ldr	r3, [r5, #48]	; 0x30
   15ce8:	str	r0, [r5, #4]
   15cec:	ands	r4, r3, #512	; 0x200
   15cf0:	beq	15d58 <__assert_fail@plt+0x448c>
   15cf4:	ldr	r1, [r5, #32]
   15cf8:	sub	r3, r7, r1
   15cfc:	cmn	r1, #100	; 0x64
   15d00:	clz	r3, r3
   15d04:	lsr	r3, r3, #5
   15d08:	moveq	r3, #0
   15d0c:	cmp	r3, #0
   15d10:	bne	15d90 <__assert_fail@plt+0x44c4>
   15d14:	add	r0, r5, #60	; 0x3c
   15d18:	bl	175b0 <__assert_fail@plt+0x5ce4>
   15d1c:	cmp	r0, #0
   15d20:	blt	15d28 <__assert_fail@plt+0x445c>
   15d24:	bl	11884 <close@plt>
   15d28:	str	r7, [r5, #32]
   15d2c:	b	15d70 <__assert_fail@plt+0x44a4>
   15d30:	mov	r0, r2
   15d34:	b	15c80 <__assert_fail@plt+0x43b4>
   15d38:	ldr	r0, [r9, #8]
   15d3c:	b	15c80 <__assert_fail@plt+0x43b4>
   15d40:	mov	r1, r2
   15d44:	movw	r0, #60064	; 0xeaa0
   15d48:	movt	r0, #1
   15d4c:	bl	1ddb0 <lchmod@@Base+0x6768>
   15d50:	mov	r7, r0
   15d54:	b	15cc4 <__assert_fail@plt+0x43f8>
   15d58:	mov	r0, r7
   15d5c:	bl	117f4 <fchdir@plt>
   15d60:	cmp	r0, #0
   15d64:	bne	15d78 <__assert_fail@plt+0x44ac>
   15d68:	mov	r0, r7
   15d6c:	bl	11884 <close@plt>
   15d70:	ldr	r0, [r5, #4]
   15d74:	b	15c80 <__assert_fail@plt+0x43b4>
   15d78:	ldr	r5, [r6]
   15d7c:	mov	r0, r7
   15d80:	bl	11884 <close@plt>
   15d84:	mov	r0, r4
   15d88:	str	r5, [r6]
   15d8c:	b	15c80 <__assert_fail@plt+0x43b4>
   15d90:	bl	11878 <abort@plt>
   15d94:	andeq	r0, r0, r0
   15d98:	ror	r0, r0, #3
   15d9c:	udiv	r3, r0, r1
   15da0:	mls	r0, r3, r1, r0
   15da4:	bx	lr
   15da8:	sub	r0, r1, r0
   15dac:	clz	r0, r0
   15db0:	lsr	r0, r0, #5
   15db4:	bx	lr
   15db8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15dbc:	mov	r5, r1
   15dc0:	strd	r6, [sp, #8]
   15dc4:	mov	r6, r0
   15dc8:	mov	r7, r3
   15dcc:	mov	r0, r1
   15dd0:	strd	r8, [sp, #16]
   15dd4:	strd	sl, [sp, #24]
   15dd8:	mov	fp, r2
   15ddc:	str	lr, [sp, #32]
   15de0:	sub	sp, sp, #4
   15de4:	ldr	r1, [r6, #8]
   15de8:	ldr	r3, [r6, #24]
   15dec:	blx	r3
   15df0:	ldr	r3, [r6, #8]
   15df4:	cmp	r0, r3
   15df8:	bcs	15f14 <__assert_fail@plt+0x4648>
   15dfc:	ldr	r8, [r6]
   15e00:	lsl	r9, r0, #3
   15e04:	mov	sl, r0
   15e08:	add	r4, r8, r9
   15e0c:	str	r4, [fp]
   15e10:	ldr	r1, [r8, r0, lsl #3]
   15e14:	cmp	r1, #0
   15e18:	beq	15f0c <__assert_fail@plt+0x4640>
   15e1c:	cmp	r1, r5
   15e20:	beq	15ed4 <__assert_fail@plt+0x4608>
   15e24:	mov	r0, r5
   15e28:	ldr	r3, [r6, #28]
   15e2c:	blx	r3
   15e30:	cmp	r0, #0
   15e34:	bne	15ed0 <__assert_fail@plt+0x4604>
   15e38:	ldr	r3, [r4, #4]
   15e3c:	cmp	r3, #0
   15e40:	beq	15f0c <__assert_fail@plt+0x4640>
   15e44:	ldr	r1, [r3]
   15e48:	cmp	r5, r1
   15e4c:	bne	15e70 <__assert_fail@plt+0x45a4>
   15e50:	b	15e8c <__assert_fail@plt+0x45c0>
   15e54:	ldr	r4, [r4, #4]
   15e58:	ldr	r3, [r4, #4]
   15e5c:	cmp	r3, #0
   15e60:	beq	15f0c <__assert_fail@plt+0x4640>
   15e64:	ldr	r1, [r3]
   15e68:	cmp	r1, r5
   15e6c:	beq	15e8c <__assert_fail@plt+0x45c0>
   15e70:	mov	r0, r5
   15e74:	ldr	r3, [r6, #28]
   15e78:	blx	r3
   15e7c:	cmp	r0, #0
   15e80:	beq	15e54 <__assert_fail@plt+0x4588>
   15e84:	ldr	r3, [r4, #4]
   15e88:	ldr	r1, [r3]
   15e8c:	cmp	r7, #0
   15e90:	beq	15eb0 <__assert_fail@plt+0x45e4>
   15e94:	ldr	r0, [r3, #4]
   15e98:	mov	r2, #0
   15e9c:	str	r0, [r4, #4]
   15ea0:	str	r2, [r3]
   15ea4:	ldr	r2, [r6, #36]	; 0x24
   15ea8:	str	r2, [r3, #4]
   15eac:	str	r3, [r6, #36]	; 0x24
   15eb0:	mov	r0, r1
   15eb4:	add	sp, sp, #4
   15eb8:	ldrd	r4, [sp]
   15ebc:	ldrd	r6, [sp, #8]
   15ec0:	ldrd	r8, [sp, #16]
   15ec4:	ldrd	sl, [sp, #24]
   15ec8:	add	sp, sp, #32
   15ecc:	pop	{pc}		; (ldr pc, [sp], #4)
   15ed0:	ldr	r1, [r8, sl, lsl #3]
   15ed4:	cmp	r7, #0
   15ed8:	beq	15eb0 <__assert_fail@plt+0x45e4>
   15edc:	ldr	r0, [r4, #4]
   15ee0:	cmp	r0, #0
   15ee4:	streq	r0, [r8, sl, lsl #3]
   15ee8:	beq	15eb0 <__assert_fail@plt+0x45e4>
   15eec:	ldrd	r2, [r0]
   15ef0:	mov	ip, #0
   15ef4:	strd	r2, [r8, r9]
   15ef8:	str	ip, [r0]
   15efc:	ldr	r3, [r6, #36]	; 0x24
   15f00:	str	r3, [r0, #4]
   15f04:	str	r0, [r6, #36]	; 0x24
   15f08:	b	15eb0 <__assert_fail@plt+0x45e4>
   15f0c:	mov	r1, #0
   15f10:	b	15eb0 <__assert_fail@plt+0x45e4>
   15f14:	bl	11878 <abort@plt>
   15f18:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15f1c:	ldr	r3, [r1, #4]
   15f20:	strd	r6, [sp, #8]
   15f24:	ldr	r6, [r1]
   15f28:	strd	r8, [sp, #16]
   15f2c:	str	sl, [sp, #24]
   15f30:	str	lr, [sp, #28]
   15f34:	cmp	r6, r3
   15f38:	bcs	16018 <__assert_fail@plt+0x474c>
   15f3c:	mov	r8, r2
   15f40:	mov	r5, r0
   15f44:	mov	r7, r1
   15f48:	add	r6, r6, #8
   15f4c:	mov	r9, #0
   15f50:	b	15f60 <__assert_fail@plt+0x4694>
   15f54:	cmp	r3, r6
   15f58:	add	r6, r6, #8
   15f5c:	bls	16018 <__assert_fail@plt+0x474c>
   15f60:	ldr	sl, [r6, #-8]
   15f64:	cmp	sl, #0
   15f68:	beq	15f54 <__assert_fail@plt+0x4688>
   15f6c:	ldr	r4, [r6, #-4]
   15f70:	cmp	r4, #0
   15f74:	beq	15ffc <__assert_fail@plt+0x4730>
   15f78:	ldr	r1, [r5, #8]
   15f7c:	b	15f98 <__assert_fail@plt+0x46cc>
   15f80:	ldr	r3, [ip, #4]
   15f84:	cmp	r2, #0
   15f88:	str	r3, [r4, #4]
   15f8c:	str	r4, [ip, #4]
   15f90:	mov	r4, r2
   15f94:	beq	15ff8 <__assert_fail@plt+0x472c>
   15f98:	ldr	sl, [r4]
   15f9c:	ldr	r3, [r5, #24]
   15fa0:	mov	r0, sl
   15fa4:	blx	r3
   15fa8:	ldr	r1, [r5, #8]
   15fac:	cmp	r0, r1
   15fb0:	bcs	160cc <__assert_fail@plt+0x4800>
   15fb4:	ldr	r3, [r5]
   15fb8:	ldr	r2, [r4, #4]
   15fbc:	ldr	lr, [r3, r0, lsl #3]
   15fc0:	add	ip, r3, r0, lsl #3
   15fc4:	cmp	lr, #0
   15fc8:	bne	15f80 <__assert_fail@plt+0x46b4>
   15fcc:	ldr	ip, [r5, #12]
   15fd0:	cmp	r2, #0
   15fd4:	str	sl, [r3, r0, lsl #3]
   15fd8:	add	ip, ip, #1
   15fdc:	str	ip, [r5, #12]
   15fe0:	str	lr, [r4]
   15fe4:	ldr	r3, [r5, #36]	; 0x24
   15fe8:	str	r3, [r4, #4]
   15fec:	str	r4, [r5, #36]	; 0x24
   15ff0:	mov	r4, r2
   15ff4:	bne	15f98 <__assert_fail@plt+0x46cc>
   15ff8:	ldr	sl, [r6, #-8]
   15ffc:	cmp	r8, #0
   16000:	str	r9, [r6, #-4]
   16004:	beq	16034 <__assert_fail@plt+0x4768>
   16008:	ldr	r3, [r7, #4]
   1600c:	cmp	r3, r6
   16010:	add	r6, r6, #8
   16014:	bhi	15f60 <__assert_fail@plt+0x4694>
   16018:	mov	r0, #1
   1601c:	ldrd	r4, [sp]
   16020:	ldrd	r6, [sp, #8]
   16024:	ldrd	r8, [sp, #16]
   16028:	ldr	sl, [sp, #24]
   1602c:	add	sp, sp, #28
   16030:	pop	{pc}		; (ldr pc, [sp], #4)
   16034:	mov	r0, sl
   16038:	ldr	r1, [r5, #8]
   1603c:	ldr	r3, [r5, #24]
   16040:	blx	r3
   16044:	ldr	r3, [r5, #8]
   16048:	cmp	r0, r3
   1604c:	bcs	160cc <__assert_fail@plt+0x4800>
   16050:	ldr	r3, [r5]
   16054:	ldr	r2, [r3, r0, lsl #3]
   16058:	add	r4, r3, r0, lsl #3
   1605c:	cmp	r2, #0
   16060:	beq	160a0 <__assert_fail@plt+0x47d4>
   16064:	ldr	r0, [r5, #36]	; 0x24
   16068:	cmp	r0, #0
   1606c:	beq	160b4 <__assert_fail@plt+0x47e8>
   16070:	ldr	r3, [r0, #4]
   16074:	str	r3, [r5, #36]	; 0x24
   16078:	ldr	r3, [r4, #4]
   1607c:	str	sl, [r0]
   16080:	str	r3, [r0, #4]
   16084:	str	r0, [r4, #4]
   16088:	ldr	r2, [r7, #12]
   1608c:	str	r9, [r6, #-8]
   16090:	ldr	r3, [r7, #4]
   16094:	sub	r2, r2, #1
   16098:	str	r2, [r7, #12]
   1609c:	b	15f54 <__assert_fail@plt+0x4688>
   160a0:	ldr	r2, [r5, #12]
   160a4:	str	sl, [r3, r0, lsl #3]
   160a8:	add	r2, r2, #1
   160ac:	str	r2, [r5, #12]
   160b0:	b	16088 <__assert_fail@plt+0x47bc>
   160b4:	mov	r0, #8
   160b8:	bl	1d804 <lchmod@@Base+0x61bc>
   160bc:	cmp	r0, #0
   160c0:	bne	16078 <__assert_fail@plt+0x47ac>
   160c4:	mov	r0, r8
   160c8:	b	1601c <__assert_fail@plt+0x4750>
   160cc:	bl	11878 <abort@plt>
   160d0:	ldr	r0, [r0, #8]
   160d4:	bx	lr
   160d8:	ldr	r0, [r0, #12]
   160dc:	bx	lr
   160e0:	ldr	r0, [r0, #16]
   160e4:	bx	lr
   160e8:	ldm	r0, {r1, r3}
   160ec:	cmp	r1, r3
   160f0:	bcs	16164 <__assert_fail@plt+0x4898>
   160f4:	sub	ip, r3, #1
   160f8:	add	r3, r1, #16
   160fc:	sub	ip, ip, r1
   16100:	mov	r0, #0
   16104:	bic	ip, ip, #7
   16108:	add	r1, r1, #8
   1610c:	add	ip, ip, r3
   16110:	b	16120 <__assert_fail@plt+0x4854>
   16114:	add	r1, r1, #8
   16118:	cmp	r1, ip
   1611c:	beq	16160 <__assert_fail@plt+0x4894>
   16120:	ldr	r3, [r1, #-8]
   16124:	cmp	r3, #0
   16128:	beq	16114 <__assert_fail@plt+0x4848>
   1612c:	ldr	r3, [r1, #-4]
   16130:	mov	r2, #1
   16134:	cmp	r3, #0
   16138:	beq	1614c <__assert_fail@plt+0x4880>
   1613c:	ldr	r3, [r3, #4]
   16140:	add	r2, r2, #1
   16144:	cmp	r3, #0
   16148:	bne	1613c <__assert_fail@plt+0x4870>
   1614c:	cmp	r0, r2
   16150:	add	r1, r1, #8
   16154:	movcc	r0, r2
   16158:	cmp	r1, ip
   1615c:	bne	16120 <__assert_fail@plt+0x4854>
   16160:	bx	lr
   16164:	mov	r0, #0
   16168:	bx	lr
   1616c:	ldm	r0, {r1, r3}
   16170:	push	{lr}		; (str lr, [sp, #-4]!)
   16174:	cmp	r1, r3
   16178:	bcs	1620c <__assert_fail@plt+0x4940>
   1617c:	sub	ip, r3, #1
   16180:	mov	r2, #0
   16184:	sub	ip, ip, r1
   16188:	add	r3, r1, #16
   1618c:	bic	ip, ip, #7
   16190:	add	r1, r1, #8
   16194:	add	ip, ip, r3
   16198:	mov	lr, r2
   1619c:	b	161ac <__assert_fail@plt+0x48e0>
   161a0:	add	r1, r1, #8
   161a4:	cmp	r1, ip
   161a8:	beq	161e8 <__assert_fail@plt+0x491c>
   161ac:	ldr	r3, [r1, #-8]
   161b0:	cmp	r3, #0
   161b4:	beq	161a0 <__assert_fail@plt+0x48d4>
   161b8:	ldr	r3, [r1, #-4]
   161bc:	add	lr, lr, #1
   161c0:	add	r2, r2, #1
   161c4:	cmp	r3, #0
   161c8:	beq	161a0 <__assert_fail@plt+0x48d4>
   161cc:	ldr	r3, [r3, #4]
   161d0:	add	r2, r2, #1
   161d4:	cmp	r3, #0
   161d8:	bne	161cc <__assert_fail@plt+0x4900>
   161dc:	add	r1, r1, #8
   161e0:	cmp	r1, ip
   161e4:	bne	161ac <__assert_fail@plt+0x48e0>
   161e8:	ldr	r3, [r0, #12]
   161ec:	cmp	r3, lr
   161f0:	movne	r0, #0
   161f4:	bne	16208 <__assert_fail@plt+0x493c>
   161f8:	ldr	r0, [r0, #16]
   161fc:	sub	r0, r0, r2
   16200:	clz	r0, r0
   16204:	lsr	r0, r0, #5
   16208:	pop	{pc}		; (ldr pc, [sp], #4)
   1620c:	mov	r2, #0
   16210:	mov	lr, r2
   16214:	b	161e8 <__assert_fail@plt+0x491c>
   16218:	strd	r4, [sp, #-20]!	; 0xffffffec
   1621c:	mov	r4, r1
   16220:	ldr	r2, [r0]
   16224:	ldr	r1, [r0, #4]
   16228:	ldr	r3, [r0, #16]
   1622c:	strd	r6, [sp, #8]
   16230:	str	lr, [sp, #16]
   16234:	sub	sp, sp, #12
   16238:	cmp	r2, r1
   1623c:	ldrd	r6, [r0, #8]
   16240:	bcs	16340 <__assert_fail@plt+0x4a74>
   16244:	sub	ip, r1, #1
   16248:	add	r1, r2, #16
   1624c:	sub	ip, ip, r2
   16250:	add	r0, r2, #8
   16254:	bic	ip, ip, #7
   16258:	mov	r5, #0
   1625c:	add	ip, ip, r1
   16260:	b	16270 <__assert_fail@plt+0x49a4>
   16264:	add	r0, r0, #8
   16268:	cmp	r0, ip
   1626c:	beq	162b0 <__assert_fail@plt+0x49e4>
   16270:	ldr	r2, [r0, #-8]
   16274:	cmp	r2, #0
   16278:	beq	16264 <__assert_fail@plt+0x4998>
   1627c:	ldr	r2, [r0, #-4]
   16280:	mov	r1, #1
   16284:	cmp	r2, #0
   16288:	beq	1629c <__assert_fail@plt+0x49d0>
   1628c:	ldr	r2, [r2, #4]
   16290:	add	r1, r1, #1
   16294:	cmp	r2, #0
   16298:	bne	1628c <__assert_fail@plt+0x49c0>
   1629c:	cmp	r5, r1
   162a0:	add	r0, r0, #8
   162a4:	movcc	r5, r1
   162a8:	cmp	r0, ip
   162ac:	bne	16270 <__assert_fail@plt+0x49a4>
   162b0:	mov	r1, #1
   162b4:	mov	r0, r4
   162b8:	movw	r2, #60600	; 0xecb8
   162bc:	movt	r2, #1
   162c0:	bl	11764 <__fprintf_chk@plt>
   162c4:	mov	r3, r6
   162c8:	mov	r1, #1
   162cc:	mov	r0, r4
   162d0:	movw	r2, #60624	; 0xecd0
   162d4:	movt	r2, #1
   162d8:	bl	11764 <__fprintf_chk@plt>
   162dc:	vmov	s15, r7
   162e0:	mov	r3, r7
   162e4:	mov	r1, #1
   162e8:	vldr	d5, [pc, #88]	; 16348 <__assert_fail@plt+0x4a7c>
   162ec:	mov	r0, r4
   162f0:	movw	r2, #60648	; 0xece8
   162f4:	movt	r2, #1
   162f8:	vcvt.f64.u32	d6, s15
   162fc:	vmov	s15, r6
   16300:	vmul.f64	d6, d6, d5
   16304:	vcvt.f64.u32	d7, s15
   16308:	vdiv.f64	d5, d6, d7
   1630c:	vstr	d5, [sp]
   16310:	bl	11764 <__fprintf_chk@plt>
   16314:	mov	r3, r5
   16318:	mov	r0, r4
   1631c:	movw	r2, #60684	; 0xed0c
   16320:	movt	r2, #1
   16324:	mov	r1, #1
   16328:	add	sp, sp, #12
   1632c:	ldrd	r4, [sp]
   16330:	ldrd	r6, [sp, #8]
   16334:	ldr	lr, [sp, #16]
   16338:	add	sp, sp, #20
   1633c:	b	11764 <__fprintf_chk@plt>
   16340:	mov	r5, #0
   16344:	b	162b0 <__assert_fail@plt+0x49e4>
   16348:	andeq	r0, r0, r0
   1634c:	subsmi	r0, r9, r0
   16350:	strd	r4, [sp, #-16]!
   16354:	mov	r5, r1
   16358:	str	r6, [sp, #8]
   1635c:	mov	r6, r0
   16360:	mov	r0, r1
   16364:	str	lr, [sp, #12]
   16368:	ldr	r1, [r6, #8]
   1636c:	ldr	r3, [r6, #24]
   16370:	blx	r3
   16374:	ldr	r3, [r6, #8]
   16378:	cmp	r0, r3
   1637c:	bcs	163ec <__assert_fail@plt+0x4b20>
   16380:	ldr	r4, [r6]
   16384:	ldr	r1, [r4, r0, lsl #3]
   16388:	add	r4, r4, r0, lsl #3
   1638c:	cmp	r1, #0
   16390:	beq	163cc <__assert_fail@plt+0x4b00>
   16394:	cmp	r1, r5
   16398:	bne	163ac <__assert_fail@plt+0x4ae0>
   1639c:	b	163d0 <__assert_fail@plt+0x4b04>
   163a0:	ldr	r1, [r4]
   163a4:	cmp	r5, r1
   163a8:	beq	163d0 <__assert_fail@plt+0x4b04>
   163ac:	mov	r0, r5
   163b0:	ldr	r3, [r6, #28]
   163b4:	blx	r3
   163b8:	cmp	r0, #0
   163bc:	bne	163e4 <__assert_fail@plt+0x4b18>
   163c0:	ldr	r4, [r4, #4]
   163c4:	cmp	r4, #0
   163c8:	bne	163a0 <__assert_fail@plt+0x4ad4>
   163cc:	mov	r1, #0
   163d0:	ldrd	r4, [sp]
   163d4:	mov	r0, r1
   163d8:	ldr	r6, [sp, #8]
   163dc:	add	sp, sp, #12
   163e0:	pop	{pc}		; (ldr pc, [sp], #4)
   163e4:	ldr	r1, [r4]
   163e8:	b	163d0 <__assert_fail@plt+0x4b04>
   163ec:	bl	11878 <abort@plt>
   163f0:	ldr	r3, [r0, #16]
   163f4:	cmp	r3, #0
   163f8:	beq	1644c <__assert_fail@plt+0x4b80>
   163fc:	ldr	r3, [r0]
   16400:	ldr	r2, [r0, #4]
   16404:	cmp	r3, r2
   16408:	bcs	16440 <__assert_fail@plt+0x4b74>
   1640c:	ldr	r0, [r3]
   16410:	cmp	r0, #0
   16414:	bxne	lr
   16418:	sub	r2, r2, #1
   1641c:	sub	r2, r2, r3
   16420:	bic	r2, r2, #7
   16424:	add	r2, r3, r2
   16428:	b	16438 <__assert_fail@plt+0x4b6c>
   1642c:	ldr	r0, [r3, #8]!
   16430:	cmp	r0, #0
   16434:	bxne	lr
   16438:	cmp	r3, r2
   1643c:	bne	1642c <__assert_fail@plt+0x4b60>
   16440:	str	r4, [sp, #-8]!
   16444:	str	lr, [sp, #4]
   16448:	bl	11878 <abort@plt>
   1644c:	mov	r0, r3
   16450:	bx	lr
   16454:	strd	r4, [sp, #-16]!
   16458:	mov	r5, r0
   1645c:	mov	r4, r1
   16460:	mov	r0, r1
   16464:	ldr	r1, [r5, #8]
   16468:	ldr	r3, [r5, #24]
   1646c:	str	r6, [sp, #8]
   16470:	str	lr, [sp, #12]
   16474:	blx	r3
   16478:	ldr	r3, [r5, #8]
   1647c:	cmp	r0, r3
   16480:	bcs	164e8 <__assert_fail@plt+0x4c1c>
   16484:	ldr	r2, [r5]
   16488:	add	r2, r2, r0, lsl #3
   1648c:	mov	r3, r2
   16490:	b	1649c <__assert_fail@plt+0x4bd0>
   16494:	cmp	r3, #0
   16498:	beq	164b4 <__assert_fail@plt+0x4be8>
   1649c:	ldm	r3, {r1, r3}
   164a0:	cmp	r1, r4
   164a4:	bne	16494 <__assert_fail@plt+0x4bc8>
   164a8:	cmp	r3, #0
   164ac:	ldrne	r0, [r3]
   164b0:	bne	164d8 <__assert_fail@plt+0x4c0c>
   164b4:	ldr	r3, [r5, #4]
   164b8:	b	164c8 <__assert_fail@plt+0x4bfc>
   164bc:	ldr	r0, [r2]
   164c0:	cmp	r0, #0
   164c4:	bne	164d8 <__assert_fail@plt+0x4c0c>
   164c8:	add	r2, r2, #8
   164cc:	cmp	r3, r2
   164d0:	bhi	164bc <__assert_fail@plt+0x4bf0>
   164d4:	mov	r0, #0
   164d8:	ldrd	r4, [sp]
   164dc:	ldr	r6, [sp, #8]
   164e0:	add	sp, sp, #12
   164e4:	pop	{pc}		; (ldr pc, [sp], #4)
   164e8:	bl	11878 <abort@plt>
   164ec:	strd	r4, [sp, #-16]!
   164f0:	mov	r3, #0
   164f4:	ldr	r5, [r0]
   164f8:	str	r6, [sp, #8]
   164fc:	str	lr, [sp, #12]
   16500:	ldr	lr, [r0, #4]
   16504:	cmp	lr, r5
   16508:	bls	16524 <__assert_fail@plt+0x4c58>
   1650c:	ldr	ip, [r5]
   16510:	cmp	ip, #0
   16514:	bne	16538 <__assert_fail@plt+0x4c6c>
   16518:	add	r5, r5, #8
   1651c:	cmp	r5, lr
   16520:	bcc	1650c <__assert_fail@plt+0x4c40>
   16524:	ldrd	r4, [sp]
   16528:	mov	r0, r3
   1652c:	ldr	r6, [sp, #8]
   16530:	add	sp, sp, #12
   16534:	pop	{pc}		; (ldr pc, [sp], #4)
   16538:	cmp	r2, r3
   1653c:	bls	16524 <__assert_fail@plt+0x4c58>
   16540:	str	ip, [r1, r3, lsl #2]
   16544:	add	r4, r3, #1
   16548:	lsl	lr, r3, #2
   1654c:	ldr	ip, [r5, #4]
   16550:	cmp	ip, #0
   16554:	beq	165b4 <__assert_fail@plt+0x4ce8>
   16558:	cmp	r2, r4
   1655c:	bls	165a8 <__assert_fail@plt+0x4cdc>
   16560:	ldr	r6, [ip]
   16564:	add	r3, r3, #2
   16568:	str	r6, [r1, r4, lsl #2]
   1656c:	ldr	ip, [ip, #4]
   16570:	cmp	ip, #0
   16574:	beq	165a0 <__assert_fail@plt+0x4cd4>
   16578:	add	lr, lr, #4
   1657c:	add	lr, r1, lr
   16580:	cmp	r2, r3
   16584:	add	r3, r3, #1
   16588:	beq	165ac <__assert_fail@plt+0x4ce0>
   1658c:	ldr	r4, [ip]
   16590:	str	r4, [lr, #4]!
   16594:	ldr	ip, [ip, #4]
   16598:	cmp	ip, #0
   1659c:	bne	16580 <__assert_fail@plt+0x4cb4>
   165a0:	ldr	lr, [r0, #4]
   165a4:	b	16518 <__assert_fail@plt+0x4c4c>
   165a8:	mov	r2, r4
   165ac:	mov	r3, r2
   165b0:	b	16524 <__assert_fail@plt+0x4c58>
   165b4:	mov	r3, r4
   165b8:	ldr	lr, [r0, #4]
   165bc:	b	16518 <__assert_fail@plt+0x4c4c>
   165c0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   165c4:	ldr	r3, [r0, #4]
   165c8:	strd	r6, [sp, #8]
   165cc:	strd	r8, [sp, #16]
   165d0:	ldr	r8, [r0]
   165d4:	str	sl, [sp, #24]
   165d8:	str	lr, [sp, #28]
   165dc:	cmp	r3, r8
   165e0:	bls	1665c <__assert_fail@plt+0x4d90>
   165e4:	mov	r7, r2
   165e8:	mov	r6, r1
   165ec:	mov	r9, r0
   165f0:	mov	r5, #0
   165f4:	ldr	r0, [r8]
   165f8:	cmp	r0, #0
   165fc:	bne	16628 <__assert_fail@plt+0x4d5c>
   16600:	add	r8, r8, #8
   16604:	cmp	r8, r3
   16608:	bcc	165f4 <__assert_fail@plt+0x4d28>
   1660c:	mov	r0, r5
   16610:	ldrd	r4, [sp]
   16614:	ldrd	r6, [sp, #8]
   16618:	ldrd	r8, [sp, #16]
   1661c:	ldr	sl, [sp, #24]
   16620:	add	sp, sp, #28
   16624:	pop	{pc}		; (ldr pc, [sp], #4)
   16628:	mov	r4, r8
   1662c:	b	16634 <__assert_fail@plt+0x4d68>
   16630:	ldr	r0, [r4]
   16634:	mov	r1, r7
   16638:	blx	r6
   1663c:	cmp	r0, #0
   16640:	beq	1660c <__assert_fail@plt+0x4d40>
   16644:	ldr	r4, [r4, #4]
   16648:	add	r5, r5, #1
   1664c:	cmp	r4, #0
   16650:	bne	16630 <__assert_fail@plt+0x4d64>
   16654:	ldr	r3, [r9, #4]
   16658:	b	16600 <__assert_fail@plt+0x4d34>
   1665c:	mov	r5, #0
   16660:	b	1660c <__assert_fail@plt+0x4d40>
   16664:	ldrb	r2, [r0]
   16668:	cmp	r2, #0
   1666c:	beq	16698 <__assert_fail@plt+0x4dcc>
   16670:	mov	r3, #0
   16674:	rsb	r3, r3, r3, lsl #5
   16678:	add	r3, r3, r2
   1667c:	ldrb	r2, [r0, #1]!
   16680:	udiv	ip, r3, r1
   16684:	cmp	r2, #0
   16688:	mls	r3, r1, ip, r3
   1668c:	bne	16674 <__assert_fail@plt+0x4da8>
   16690:	mov	r0, r3
   16694:	bx	lr
   16698:	mov	r3, r2
   1669c:	mov	r0, r3
   166a0:	bx	lr
   166a4:	movw	r3, #60580	; 0xeca4
   166a8:	movt	r3, #1
   166ac:	strd	r4, [sp, #-8]!
   166b0:	ldrd	r4, [r3]
   166b4:	ldr	r1, [r3, #16]
   166b8:	ldrd	r2, [r3, #8]
   166bc:	strd	r4, [r0]
   166c0:	ldrd	r4, [sp]
   166c4:	add	sp, sp, #8
   166c8:	strd	r2, [r0, #8]
   166cc:	str	r1, [r0, #16]
   166d0:	bx	lr
   166d4:	cmp	r2, #0
   166d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   166dc:	movw	r4, #23960	; 0x5d98
   166e0:	movt	r4, #1
   166e4:	movne	r4, r2
   166e8:	strd	r6, [sp, #8]
   166ec:	cmp	r3, #0
   166f0:	str	r8, [sp, #16]
   166f4:	mov	r8, r0
   166f8:	mov	r0, #40	; 0x28
   166fc:	movw	r5, #23976	; 0x5da8
   16700:	movt	r5, #1
   16704:	mov	r7, r1
   16708:	str	lr, [sp, #20]
   1670c:	movne	r5, r3
   16710:	bl	1d804 <lchmod@@Base+0x61bc>
   16714:	subs	r6, r0, #0
   16718:	beq	1675c <__assert_fail@plt+0x4e90>
   1671c:	cmp	r7, #0
   16720:	movw	r3, #60580	; 0xeca4
   16724:	movt	r3, #1
   16728:	beq	167e8 <__assert_fail@plt+0x4f1c>
   1672c:	cmp	r7, r3
   16730:	str	r7, [r6, #20]
   16734:	beq	167ec <__assert_fail@plt+0x4f20>
   16738:	vldr	s14, [pc, #456]	; 16908 <__assert_fail@plt+0x503c>
   1673c:	vldr	s15, [r7, #8]
   16740:	vcmpe.f32	s15, s14
   16744:	vmrs	APSR_nzcv, fpscr
   16748:	bgt	16774 <__assert_fail@plt+0x4ea8>
   1674c:	str	r3, [r6, #20]
   16750:	mov	r0, r6
   16754:	mov	r6, #0
   16758:	bl	13688 <__assert_fail@plt+0x1dbc>
   1675c:	mov	r0, r6
   16760:	ldrd	r4, [sp]
   16764:	ldrd	r6, [sp, #8]
   16768:	ldr	r8, [sp, #16]
   1676c:	add	sp, sp, #20
   16770:	pop	{pc}		; (ldr pc, [sp], #4)
   16774:	vldr	s13, [pc, #400]	; 1690c <__assert_fail@plt+0x5040>
   16778:	vcmpe.f32	s15, s13
   1677c:	vmrs	APSR_nzcv, fpscr
   16780:	bpl	1674c <__assert_fail@plt+0x4e80>
   16784:	vldr	s13, [pc, #388]	; 16910 <__assert_fail@plt+0x5044>
   16788:	vldr	s12, [r7, #12]
   1678c:	vcmpe.f32	s12, s13
   16790:	vmrs	APSR_nzcv, fpscr
   16794:	ble	1674c <__assert_fail@plt+0x4e80>
   16798:	vldr	s13, [r7]
   1679c:	vcmpe.f32	s13, #0.0
   167a0:	vmrs	APSR_nzcv, fpscr
   167a4:	blt	1674c <__assert_fail@plt+0x4e80>
   167a8:	vadd.f32	s14, s13, s14
   167ac:	vldr	s13, [r7, #4]
   167b0:	vcmpe.f32	s14, s13
   167b4:	vmrs	APSR_nzcv, fpscr
   167b8:	bpl	1674c <__assert_fail@plt+0x4e80>
   167bc:	vldr	s12, [pc, #336]	; 16914 <__assert_fail@plt+0x5048>
   167c0:	vcmpe.f32	s13, s12
   167c4:	vmrs	APSR_nzcv, fpscr
   167c8:	bhi	1674c <__assert_fail@plt+0x4e80>
   167cc:	vcmpe.f32	s15, s14
   167d0:	vmrs	APSR_nzcv, fpscr
   167d4:	ble	1674c <__assert_fail@plt+0x4e80>
   167d8:	ldrb	r3, [r7, #16]
   167dc:	cmp	r3, #0
   167e0:	bne	16814 <__assert_fail@plt+0x4f48>
   167e4:	b	167f0 <__assert_fail@plt+0x4f24>
   167e8:	str	r3, [r6, #20]
   167ec:	vldr	s15, [pc, #292]	; 16918 <__assert_fail@plt+0x504c>
   167f0:	vmov	s14, r8
   167f4:	vldr	s13, [pc, #288]	; 1691c <__assert_fail@plt+0x5050>
   167f8:	vcvt.f32.u32	s12, s14
   167fc:	vdiv.f32	s14, s12, s15
   16800:	vcmpe.f32	s14, s13
   16804:	vmrs	APSR_nzcv, fpscr
   16808:	bge	1689c <__assert_fail@plt+0x4fd0>
   1680c:	vcvt.u32.f32	s15, s14
   16810:	vmov	r8, s15
   16814:	cmp	r8, #10
   16818:	movcs	r3, r8
   1681c:	movcc	r3, #10
   16820:	orr	r3, r3, #1
   16824:	cmn	r3, #1
   16828:	beq	1689c <__assert_fail@plt+0x4fd0>
   1682c:	movw	lr, #43691	; 0xaaab
   16830:	movt	lr, #43690	; 0xaaaa
   16834:	umull	r1, r2, lr, r3
   16838:	cmp	r3, #9
   1683c:	lsr	r2, r2, #1
   16840:	add	r2, r2, r2, lsl #1
   16844:	sub	r2, r3, r2
   16848:	bls	16888 <__assert_fail@plt+0x4fbc>
   1684c:	cmp	r2, #0
   16850:	beq	16890 <__assert_fail@plt+0x4fc4>
   16854:	mov	ip, #16
   16858:	mov	r0, #9
   1685c:	mov	r1, #3
   16860:	b	1686c <__assert_fail@plt+0x4fa0>
   16864:	cmp	r2, #0
   16868:	beq	16890 <__assert_fail@plt+0x4fc4>
   1686c:	add	r1, r1, #2
   16870:	add	r0, r0, ip
   16874:	cmp	r0, r3
   16878:	add	ip, ip, #8
   1687c:	udiv	r2, r3, r1
   16880:	mls	r2, r1, r2, r3
   16884:	bcc	16864 <__assert_fail@plt+0x4f98>
   16888:	cmp	r2, #0
   1688c:	bne	168a8 <__assert_fail@plt+0x4fdc>
   16890:	add	r3, r3, #2
   16894:	cmn	r3, #1
   16898:	bne	16834 <__assert_fail@plt+0x4f68>
   1689c:	mov	r3, #0
   168a0:	str	r3, [r6, #8]
   168a4:	b	16750 <__assert_fail@plt+0x4e84>
   168a8:	lsrs	r2, r3, #30
   168ac:	movne	r7, #1
   168b0:	moveq	r7, #0
   168b4:	tst	r3, #536870912	; 0x20000000
   168b8:	bne	1689c <__assert_fail@plt+0x4fd0>
   168bc:	cmp	r7, #0
   168c0:	bne	1689c <__assert_fail@plt+0x4fd0>
   168c4:	mov	r0, r3
   168c8:	mov	r1, #8
   168cc:	str	r3, [r6, #8]
   168d0:	bl	1d790 <lchmod@@Base+0x6148>
   168d4:	cmp	r0, #0
   168d8:	str	r0, [r6]
   168dc:	beq	16750 <__assert_fail@plt+0x4e84>
   168e0:	ldr	r3, [r6, #8]
   168e4:	str	r7, [r6, #12]
   168e8:	str	r7, [r6, #16]
   168ec:	strd	r4, [r6, #24]
   168f0:	str	r7, [r6, #36]	; 0x24
   168f4:	add	r0, r0, r3, lsl #3
   168f8:	ldr	r3, [sp, #24]
   168fc:	str	r0, [r6, #4]
   16900:	str	r3, [r6, #32]
   16904:	b	1675c <__assert_fail@plt+0x4e90>
   16908:	stclcc	12, cr12, [ip, #820]	; 0x334
   1690c:	svccc	0x00666666
   16910:	svccc	0x008ccccd
   16914:	svccc	0x00800000
   16918:	svccc	0x004ccccd
   1691c:	svcmi	0x00800000
   16920:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16924:	mov	r5, r0
   16928:	ldr	r2, [r0, #4]
   1692c:	strd	r6, [sp, #8]
   16930:	ldr	r6, [r0]
   16934:	str	r8, [sp, #16]
   16938:	str	lr, [sp, #20]
   1693c:	cmp	r6, r2
   16940:	addcc	r6, r6, #8
   16944:	movcc	r7, #0
   16948:	bcc	1695c <__assert_fail@plt+0x5090>
   1694c:	b	169d0 <__assert_fail@plt+0x5104>
   16950:	cmp	r2, r6
   16954:	add	r6, r6, #8
   16958:	bls	169d0 <__assert_fail@plt+0x5104>
   1695c:	ldr	r3, [r6, #-8]
   16960:	cmp	r3, #0
   16964:	beq	16950 <__assert_fail@plt+0x5084>
   16968:	ldr	r4, [r6, #-4]
   1696c:	ldr	r3, [r5, #32]
   16970:	cmp	r4, #0
   16974:	beq	169a8 <__assert_fail@plt+0x50dc>
   16978:	cmp	r3, #0
   1697c:	beq	169f0 <__assert_fail@plt+0x5124>
   16980:	ldr	r0, [r4]
   16984:	blx	r3
   16988:	ldr	r1, [r4, #4]
   1698c:	ldr	r3, [r5, #32]
   16990:	ldr	r2, [r5, #36]	; 0x24
   16994:	str	r7, [r4]
   16998:	str	r2, [r4, #4]
   1699c:	str	r4, [r5, #36]	; 0x24
   169a0:	subs	r4, r1, #0
   169a4:	bne	16978 <__assert_fail@plt+0x50ac>
   169a8:	cmp	r3, #0
   169ac:	beq	169b8 <__assert_fail@plt+0x50ec>
   169b0:	ldr	r0, [r6, #-8]
   169b4:	blx	r3
   169b8:	str	r7, [r6, #-8]
   169bc:	str	r7, [r6, #-4]
   169c0:	ldr	r2, [r5, #4]
   169c4:	cmp	r2, r6
   169c8:	add	r6, r6, #8
   169cc:	bhi	1695c <__assert_fail@plt+0x5090>
   169d0:	mov	r3, #0
   169d4:	ldrd	r6, [sp, #8]
   169d8:	ldr	r8, [sp, #16]
   169dc:	str	r3, [r5, #12]
   169e0:	str	r3, [r5, #16]
   169e4:	ldrd	r4, [sp]
   169e8:	add	sp, sp, #20
   169ec:	pop	{pc}		; (ldr pc, [sp], #4)
   169f0:	ldr	r2, [r5, #36]	; 0x24
   169f4:	str	r7, [r4]
   169f8:	ldr	r3, [r4, #4]
   169fc:	str	r2, [r4, #4]
   16a00:	mov	r2, r4
   16a04:	str	r2, [r5, #36]	; 0x24
   16a08:	subs	r4, r3, #0
   16a0c:	bne	169f4 <__assert_fail@plt+0x5128>
   16a10:	b	169b8 <__assert_fail@plt+0x50ec>
   16a14:	strd	r4, [sp, #-16]!
   16a18:	ldr	r2, [r0, #32]
   16a1c:	ldr	r5, [r0]
   16a20:	ldr	r3, [r0, #4]
   16a24:	cmp	r2, #0
   16a28:	str	r6, [sp, #8]
   16a2c:	mov	r6, r0
   16a30:	str	lr, [sp, #12]
   16a34:	beq	16a9c <__assert_fail@plt+0x51d0>
   16a38:	ldr	r2, [r0, #16]
   16a3c:	cmp	r2, #0
   16a40:	beq	16a9c <__assert_fail@plt+0x51d0>
   16a44:	cmp	r5, r3
   16a48:	bcc	16a5c <__assert_fail@plt+0x5190>
   16a4c:	b	16ad0 <__assert_fail@plt+0x5204>
   16a50:	add	r5, r5, #8
   16a54:	cmp	r5, r3
   16a58:	bcs	16a98 <__assert_fail@plt+0x51cc>
   16a5c:	ldr	r0, [r5]
   16a60:	cmp	r0, #0
   16a64:	beq	16a50 <__assert_fail@plt+0x5184>
   16a68:	mov	r4, r5
   16a6c:	b	16a74 <__assert_fail@plt+0x51a8>
   16a70:	ldr	r0, [r4]
   16a74:	ldr	r3, [r6, #32]
   16a78:	blx	r3
   16a7c:	ldr	r4, [r4, #4]
   16a80:	cmp	r4, #0
   16a84:	bne	16a70 <__assert_fail@plt+0x51a4>
   16a88:	ldr	r3, [r6, #4]
   16a8c:	add	r5, r5, #8
   16a90:	cmp	r5, r3
   16a94:	bcc	16a5c <__assert_fail@plt+0x5190>
   16a98:	ldr	r5, [r6]
   16a9c:	cmp	r3, r5
   16aa0:	bls	16ad0 <__assert_fail@plt+0x5204>
   16aa4:	ldr	r0, [r5, #4]
   16aa8:	cmp	r0, #0
   16aac:	beq	16ac4 <__assert_fail@plt+0x51f8>
   16ab0:	ldr	r4, [r0, #4]
   16ab4:	bl	13688 <__assert_fail@plt+0x1dbc>
   16ab8:	subs	r0, r4, #0
   16abc:	bne	16ab0 <__assert_fail@plt+0x51e4>
   16ac0:	ldr	r3, [r6, #4]
   16ac4:	add	r5, r5, #8
   16ac8:	cmp	r5, r3
   16acc:	bcc	16aa4 <__assert_fail@plt+0x51d8>
   16ad0:	ldr	r0, [r6, #36]	; 0x24
   16ad4:	cmp	r0, #0
   16ad8:	beq	16aec <__assert_fail@plt+0x5220>
   16adc:	ldr	r4, [r0, #4]
   16ae0:	bl	13688 <__assert_fail@plt+0x1dbc>
   16ae4:	subs	r0, r4, #0
   16ae8:	bne	16adc <__assert_fail@plt+0x5210>
   16aec:	ldr	r0, [r6]
   16af0:	bl	13688 <__assert_fail@plt+0x1dbc>
   16af4:	mov	r0, r6
   16af8:	ldrd	r4, [sp]
   16afc:	ldr	r6, [sp, #8]
   16b00:	ldr	lr, [sp, #12]
   16b04:	add	sp, sp, #16
   16b08:	b	13688 <__assert_fail@plt+0x1dbc>
   16b0c:	ldr	r3, [r0, #20]
   16b10:	strd	r4, [sp, #-20]!	; 0xffffffec
   16b14:	mov	r5, r0
   16b18:	ldrb	r2, [r3, #16]
   16b1c:	strd	r6, [sp, #8]
   16b20:	str	lr, [sp, #16]
   16b24:	sub	sp, sp, #44	; 0x2c
   16b28:	cmp	r2, #0
   16b2c:	bne	16b58 <__assert_fail@plt+0x528c>
   16b30:	vmov	s15, r1
   16b34:	vldr	s12, [r3, #8]
   16b38:	vldr	s13, [pc, #444]	; 16cfc <__assert_fail@plt+0x5430>
   16b3c:	vcvt.f32.u32	s15, s15
   16b40:	vdiv.f32	s14, s15, s12
   16b44:	vcmpe.f32	s14, s13
   16b48:	vmrs	APSR_nzcv, fpscr
   16b4c:	vcvtlt.u32.f32	s15, s14
   16b50:	vmovlt	r1, s15
   16b54:	bge	16bdc <__assert_fail@plt+0x5310>
   16b58:	cmp	r1, #10
   16b5c:	movcc	r1, #10
   16b60:	orr	r4, r1, #1
   16b64:	cmn	r4, #1
   16b68:	beq	16bdc <__assert_fail@plt+0x5310>
   16b6c:	movw	ip, #43691	; 0xaaab
   16b70:	movt	ip, #43690	; 0xaaaa
   16b74:	umull	r2, r3, ip, r4
   16b78:	cmp	r4, #9
   16b7c:	lsr	r3, r3, #1
   16b80:	add	r3, r3, r3, lsl #1
   16b84:	sub	r3, r4, r3
   16b88:	bls	16bc8 <__assert_fail@plt+0x52fc>
   16b8c:	cmp	r3, #0
   16b90:	beq	16bd0 <__assert_fail@plt+0x5304>
   16b94:	mov	r0, #16
   16b98:	mov	r1, #9
   16b9c:	mov	r2, #3
   16ba0:	b	16bb0 <__assert_fail@plt+0x52e4>
   16ba4:	cmp	r3, #0
   16ba8:	add	r0, r0, #8
   16bac:	beq	16bd0 <__assert_fail@plt+0x5304>
   16bb0:	add	r2, r2, #2
   16bb4:	add	r1, r1, r0
   16bb8:	cmp	r1, r4
   16bbc:	udiv	r3, r4, r2
   16bc0:	mls	r3, r2, r3, r4
   16bc4:	bcc	16ba4 <__assert_fail@plt+0x52d8>
   16bc8:	cmp	r3, #0
   16bcc:	bne	16bf8 <__assert_fail@plt+0x532c>
   16bd0:	add	r4, r4, #2
   16bd4:	cmn	r4, #1
   16bd8:	bne	16b74 <__assert_fail@plt+0x52a8>
   16bdc:	mov	r4, #0
   16be0:	mov	r0, r4
   16be4:	add	sp, sp, #44	; 0x2c
   16be8:	ldrd	r4, [sp]
   16bec:	ldrd	r6, [sp, #8]
   16bf0:	add	sp, sp, #16
   16bf4:	pop	{pc}		; (ldr pc, [sp], #4)
   16bf8:	lsrs	r3, r4, #30
   16bfc:	movne	r6, #1
   16c00:	moveq	r6, #0
   16c04:	tst	r4, #536870912	; 0x20000000
   16c08:	bne	16bdc <__assert_fail@plt+0x5310>
   16c0c:	cmp	r6, #0
   16c10:	bne	16bdc <__assert_fail@plt+0x5310>
   16c14:	ldr	r3, [r5, #8]
   16c18:	cmp	r3, r4
   16c1c:	beq	16cc4 <__assert_fail@plt+0x53f8>
   16c20:	mov	r1, #8
   16c24:	mov	r0, r4
   16c28:	bl	1d790 <lchmod@@Base+0x6148>
   16c2c:	cmp	r0, #0
   16c30:	str	r0, [sp]
   16c34:	beq	16bdc <__assert_fail@plt+0x5310>
   16c38:	add	r3, r0, r4, lsl #3
   16c3c:	ldr	r7, [r5, #20]
   16c40:	mov	r2, r6
   16c44:	mov	r0, sp
   16c48:	mov	r1, r5
   16c4c:	ldr	lr, [r5, #28]
   16c50:	stmib	sp, {r3, r4, r6}
   16c54:	ldr	r4, [r5, #24]
   16c58:	strd	r6, [sp, #16]
   16c5c:	ldr	ip, [r5, #32]
   16c60:	ldr	r3, [r5, #36]	; 0x24
   16c64:	str	r4, [sp, #24]
   16c68:	str	lr, [sp, #28]
   16c6c:	str	ip, [sp, #32]
   16c70:	str	r3, [sp, #36]	; 0x24
   16c74:	bl	15f18 <__assert_fail@plt+0x464c>
   16c78:	subs	r4, r0, #0
   16c7c:	bne	16ccc <__assert_fail@plt+0x5400>
   16c80:	ldr	r3, [sp, #36]	; 0x24
   16c84:	mov	r2, #1
   16c88:	mov	r1, sp
   16c8c:	mov	r0, r5
   16c90:	str	r3, [r5, #36]	; 0x24
   16c94:	bl	15f18 <__assert_fail@plt+0x464c>
   16c98:	cmp	r0, #0
   16c9c:	beq	16cf8 <__assert_fail@plt+0x542c>
   16ca0:	mov	r1, sp
   16ca4:	mov	r0, r5
   16ca8:	mov	r2, r4
   16cac:	bl	15f18 <__assert_fail@plt+0x464c>
   16cb0:	cmp	r0, #0
   16cb4:	beq	16cf8 <__assert_fail@plt+0x542c>
   16cb8:	ldr	r0, [sp]
   16cbc:	bl	13688 <__assert_fail@plt+0x1dbc>
   16cc0:	b	16be0 <__assert_fail@plt+0x5314>
   16cc4:	mov	r4, #1
   16cc8:	b	16be0 <__assert_fail@plt+0x5314>
   16ccc:	ldr	r0, [r5]
   16cd0:	bl	13688 <__assert_fail@plt+0x1dbc>
   16cd4:	ldrd	r2, [sp]
   16cd8:	ldr	r1, [sp, #8]
   16cdc:	strd	r2, [r5]
   16ce0:	ldr	r2, [sp, #12]
   16ce4:	str	r1, [r5, #8]
   16ce8:	ldr	r3, [sp, #36]	; 0x24
   16cec:	str	r2, [r5, #12]
   16cf0:	str	r3, [r5, #36]	; 0x24
   16cf4:	b	16be0 <__assert_fail@plt+0x5314>
   16cf8:	bl	11878 <abort@plt>
   16cfc:	svcmi	0x00800000
   16d00:	strd	r4, [sp, #-16]!
   16d04:	str	r6, [sp, #8]
   16d08:	subs	r6, r1, #0
   16d0c:	str	lr, [sp, #12]
   16d10:	sub	sp, sp, #8
   16d14:	beq	16ea0 <__assert_fail@plt+0x55d4>
   16d18:	mov	r3, #0
   16d1c:	mov	r5, r2
   16d20:	add	r2, sp, #4
   16d24:	mov	r4, r0
   16d28:	bl	15db8 <__assert_fail@plt+0x44ec>
   16d2c:	subs	r3, r0, #0
   16d30:	beq	16d5c <__assert_fail@plt+0x5490>
   16d34:	cmp	r5, #0
   16d38:	moveq	r0, r5
   16d3c:	beq	16d48 <__assert_fail@plt+0x547c>
   16d40:	mov	r0, #0
   16d44:	str	r3, [r5]
   16d48:	add	sp, sp, #8
   16d4c:	ldrd	r4, [sp]
   16d50:	ldr	r6, [sp, #8]
   16d54:	add	sp, sp, #12
   16d58:	pop	{pc}		; (ldr pc, [sp], #4)
   16d5c:	vldr	s15, [r4, #8]
   16d60:	vldr	s14, [r4, #12]
   16d64:	ldr	r3, [r4, #20]
   16d68:	vcvt.f32.u32	s15, s15
   16d6c:	vcvt.f32.u32	s14, s14
   16d70:	vldr	s13, [r3, #8]
   16d74:	vmul.f32	s12, s13, s15
   16d78:	vcmpe.f32	s14, s12
   16d7c:	vmrs	APSR_nzcv, fpscr
   16d80:	bgt	16dc8 <__assert_fail@plt+0x54fc>
   16d84:	ldr	r2, [sp, #4]
   16d88:	ldr	r3, [r2]
   16d8c:	cmp	r3, #0
   16d90:	beq	16ecc <__assert_fail@plt+0x5600>
   16d94:	ldr	r3, [r4, #36]	; 0x24
   16d98:	cmp	r3, #0
   16d9c:	beq	16ef0 <__assert_fail@plt+0x5624>
   16da0:	ldr	r1, [r3, #4]
   16da4:	str	r1, [r4, #36]	; 0x24
   16da8:	ldr	r1, [r4, #16]
   16dac:	mov	r0, #1
   16db0:	ldr	ip, [r2, #4]
   16db4:	add	r1, r1, r0
   16db8:	stm	r3, {r6, ip}
   16dbc:	str	r3, [r2, #4]
   16dc0:	str	r1, [r4, #16]
   16dc4:	b	16d48 <__assert_fail@plt+0x547c>
   16dc8:	movw	r2, #60580	; 0xeca4
   16dcc:	movt	r2, #1
   16dd0:	cmp	r3, r2
   16dd4:	beq	16f08 <__assert_fail@plt+0x563c>
   16dd8:	vldr	s12, [pc, #320]	; 16f20 <__assert_fail@plt+0x5654>
   16ddc:	vcmpe.f32	s13, s12
   16de0:	vmrs	APSR_nzcv, fpscr
   16de4:	ble	16ea4 <__assert_fail@plt+0x55d8>
   16de8:	vldr	s11, [pc, #308]	; 16f24 <__assert_fail@plt+0x5658>
   16dec:	vcmpe.f32	s13, s11
   16df0:	vmrs	APSR_nzcv, fpscr
   16df4:	bpl	16ea4 <__assert_fail@plt+0x55d8>
   16df8:	vldr	s10, [pc, #296]	; 16f28 <__assert_fail@plt+0x565c>
   16dfc:	vldr	s11, [r3, #12]
   16e00:	vcmpe.f32	s11, s10
   16e04:	vmrs	APSR_nzcv, fpscr
   16e08:	ble	16ea4 <__assert_fail@plt+0x55d8>
   16e0c:	vldr	s10, [r3]
   16e10:	vcmpe.f32	s10, #0.0
   16e14:	vmrs	APSR_nzcv, fpscr
   16e18:	blt	16ea4 <__assert_fail@plt+0x55d8>
   16e1c:	vadd.f32	s12, s10, s12
   16e20:	vldr	s10, [r3, #4]
   16e24:	vcmpe.f32	s12, s10
   16e28:	vmrs	APSR_nzcv, fpscr
   16e2c:	bpl	16ea4 <__assert_fail@plt+0x55d8>
   16e30:	vldr	s9, [pc, #244]	; 16f2c <__assert_fail@plt+0x5660>
   16e34:	vcmpe.f32	s10, s9
   16e38:	vmrs	APSR_nzcv, fpscr
   16e3c:	bhi	16ea4 <__assert_fail@plt+0x55d8>
   16e40:	vcmpe.f32	s13, s12
   16e44:	vmrs	APSR_nzcv, fpscr
   16e48:	ble	16ea4 <__assert_fail@plt+0x55d8>
   16e4c:	ldrb	r3, [r3, #16]
   16e50:	vmul.f32	s15, s15, s11
   16e54:	cmp	r3, #0
   16e58:	beq	16ec4 <__assert_fail@plt+0x55f8>
   16e5c:	vldr	s14, [pc, #204]	; 16f30 <__assert_fail@plt+0x5664>
   16e60:	vcmpe.f32	s15, s14
   16e64:	vmrs	APSR_nzcv, fpscr
   16e68:	bge	16f00 <__assert_fail@plt+0x5634>
   16e6c:	vcvt.u32.f32	s15, s15
   16e70:	mov	r0, r4
   16e74:	vmov	r1, s15
   16e78:	bl	16b0c <__assert_fail@plt+0x5240>
   16e7c:	cmp	r0, #0
   16e80:	beq	16f00 <__assert_fail@plt+0x5634>
   16e84:	add	r2, sp, #4
   16e88:	mov	r3, #0
   16e8c:	mov	r1, r6
   16e90:	mov	r0, r4
   16e94:	bl	15db8 <__assert_fail@plt+0x44ec>
   16e98:	cmp	r0, #0
   16e9c:	beq	16d84 <__assert_fail@plt+0x54b8>
   16ea0:	bl	11878 <abort@plt>
   16ea4:	vldr	s13, [pc, #136]	; 16f34 <__assert_fail@plt+0x5668>
   16ea8:	str	r2, [r4, #20]
   16eac:	vmul.f32	s12, s15, s13
   16eb0:	vcmpe.f32	s14, s12
   16eb4:	vmrs	APSR_nzcv, fpscr
   16eb8:	ble	16d84 <__assert_fail@plt+0x54b8>
   16ebc:	vldr	s14, [pc, #116]	; 16f38 <__assert_fail@plt+0x566c>
   16ec0:	vmul.f32	s15, s15, s14
   16ec4:	vmul.f32	s15, s15, s13
   16ec8:	b	16e5c <__assert_fail@plt+0x5590>
   16ecc:	ldr	r1, [r4, #12]
   16ed0:	mov	r0, #1
   16ed4:	ldr	r3, [r4, #16]
   16ed8:	str	r6, [r2]
   16edc:	add	r2, r1, r0
   16ee0:	add	r3, r3, r0
   16ee4:	str	r2, [r4, #12]
   16ee8:	str	r3, [r4, #16]
   16eec:	b	16d48 <__assert_fail@plt+0x547c>
   16ef0:	mov	r0, #8
   16ef4:	bl	1d804 <lchmod@@Base+0x61bc>
   16ef8:	subs	r3, r0, #0
   16efc:	bne	16f18 <__assert_fail@plt+0x564c>
   16f00:	mvn	r0, #0
   16f04:	b	16d48 <__assert_fail@plt+0x547c>
   16f08:	vldr	s14, [pc, #40]	; 16f38 <__assert_fail@plt+0x566c>
   16f0c:	vldr	s13, [pc, #32]	; 16f34 <__assert_fail@plt+0x5668>
   16f10:	vmul.f32	s15, s15, s14
   16f14:	b	16ec4 <__assert_fail@plt+0x55f8>
   16f18:	ldr	r2, [sp, #4]
   16f1c:	b	16da8 <__assert_fail@plt+0x54dc>
   16f20:	stclcc	12, cr12, [ip, #820]	; 0x334
   16f24:	svccc	0x00666666
   16f28:	svccc	0x008ccccd
   16f2c:	svccc	0x00800000
   16f30:	svcmi	0x00800000
   16f34:	svccc	0x004ccccd
   16f38:	svccc	0x00b4fdf4
   16f3c:	strd	r4, [sp, #-16]!
   16f40:	str	r6, [sp, #8]
   16f44:	subs	r6, r1, #0
   16f48:	str	lr, [sp, #12]
   16f4c:	sub	sp, sp, #8
   16f50:	beq	170cc <__assert_fail@plt+0x5800>
   16f54:	mov	r3, #0
   16f58:	add	r2, sp, #4
   16f5c:	mov	r4, r0
   16f60:	bl	15db8 <__assert_fail@plt+0x44ec>
   16f64:	subs	r5, r0, #0
   16f68:	beq	16f84 <__assert_fail@plt+0x56b8>
   16f6c:	mov	r0, r5
   16f70:	add	sp, sp, #8
   16f74:	ldrd	r4, [sp]
   16f78:	ldr	r6, [sp, #8]
   16f7c:	add	sp, sp, #12
   16f80:	pop	{pc}		; (ldr pc, [sp], #4)
   16f84:	vldr	s15, [r4, #8]
   16f88:	vldr	s14, [r4, #12]
   16f8c:	ldr	r3, [r4, #20]
   16f90:	vcvt.f32.u32	s15, s15
   16f94:	vcvt.f32.u32	s14, s14
   16f98:	vldr	s13, [r3, #8]
   16f9c:	vmul.f32	s12, s13, s15
   16fa0:	vcmpe.f32	s14, s12
   16fa4:	vmrs	APSR_nzcv, fpscr
   16fa8:	bgt	16ff4 <__assert_fail@plt+0x5728>
   16fac:	ldr	r3, [sp, #4]
   16fb0:	ldr	r2, [r3]
   16fb4:	cmp	r2, #0
   16fb8:	beq	170f8 <__assert_fail@plt+0x582c>
   16fbc:	ldr	r0, [r4, #36]	; 0x24
   16fc0:	cmp	r0, #0
   16fc4:	beq	1711c <__assert_fail@plt+0x5850>
   16fc8:	ldr	r2, [r0, #4]
   16fcc:	str	r2, [r4, #36]	; 0x24
   16fd0:	ldr	r2, [r4, #16]
   16fd4:	mov	r5, r6
   16fd8:	ldr	r1, [r3, #4]
   16fdc:	str	r6, [r0]
   16fe0:	add	r2, r2, #1
   16fe4:	str	r1, [r0, #4]
   16fe8:	str	r0, [r3, #4]
   16fec:	str	r2, [r4, #16]
   16ff0:	b	16f6c <__assert_fail@plt+0x56a0>
   16ff4:	movw	r2, #60580	; 0xeca4
   16ff8:	movt	r2, #1
   16ffc:	cmp	r3, r2
   17000:	beq	17134 <__assert_fail@plt+0x5868>
   17004:	vldr	s12, [pc, #312]	; 17144 <__assert_fail@plt+0x5878>
   17008:	vcmpe.f32	s13, s12
   1700c:	vmrs	APSR_nzcv, fpscr
   17010:	ble	170d0 <__assert_fail@plt+0x5804>
   17014:	vldr	s11, [pc, #300]	; 17148 <__assert_fail@plt+0x587c>
   17018:	vcmpe.f32	s13, s11
   1701c:	vmrs	APSR_nzcv, fpscr
   17020:	bpl	170d0 <__assert_fail@plt+0x5804>
   17024:	vldr	s10, [pc, #288]	; 1714c <__assert_fail@plt+0x5880>
   17028:	vldr	s11, [r3, #12]
   1702c:	vcmpe.f32	s11, s10
   17030:	vmrs	APSR_nzcv, fpscr
   17034:	ble	170d0 <__assert_fail@plt+0x5804>
   17038:	vldr	s10, [r3]
   1703c:	vcmpe.f32	s10, #0.0
   17040:	vmrs	APSR_nzcv, fpscr
   17044:	blt	170d0 <__assert_fail@plt+0x5804>
   17048:	vadd.f32	s12, s10, s12
   1704c:	vldr	s10, [r3, #4]
   17050:	vcmpe.f32	s12, s10
   17054:	vmrs	APSR_nzcv, fpscr
   17058:	bpl	170d0 <__assert_fail@plt+0x5804>
   1705c:	vldr	s9, [pc, #236]	; 17150 <__assert_fail@plt+0x5884>
   17060:	vcmpe.f32	s10, s9
   17064:	vmrs	APSR_nzcv, fpscr
   17068:	bhi	170d0 <__assert_fail@plt+0x5804>
   1706c:	vcmpe.f32	s13, s12
   17070:	vmrs	APSR_nzcv, fpscr
   17074:	ble	170d0 <__assert_fail@plt+0x5804>
   17078:	ldrb	r3, [r3, #16]
   1707c:	vmul.f32	s15, s15, s11
   17080:	cmp	r3, #0
   17084:	beq	170f0 <__assert_fail@plt+0x5824>
   17088:	vldr	s14, [pc, #196]	; 17154 <__assert_fail@plt+0x5888>
   1708c:	vcmpe.f32	s15, s14
   17090:	vmrs	APSR_nzcv, fpscr
   17094:	bge	16f6c <__assert_fail@plt+0x56a0>
   17098:	vcvt.u32.f32	s15, s15
   1709c:	mov	r0, r4
   170a0:	vmov	r1, s15
   170a4:	bl	16b0c <__assert_fail@plt+0x5240>
   170a8:	cmp	r0, #0
   170ac:	beq	16f6c <__assert_fail@plt+0x56a0>
   170b0:	add	r2, sp, #4
   170b4:	mov	r3, #0
   170b8:	mov	r1, r6
   170bc:	mov	r0, r4
   170c0:	bl	15db8 <__assert_fail@plt+0x44ec>
   170c4:	cmp	r0, #0
   170c8:	beq	16fac <__assert_fail@plt+0x56e0>
   170cc:	bl	11878 <abort@plt>
   170d0:	vldr	s13, [pc, #128]	; 17158 <__assert_fail@plt+0x588c>
   170d4:	str	r2, [r4, #20]
   170d8:	vmul.f32	s12, s15, s13
   170dc:	vcmpe.f32	s14, s12
   170e0:	vmrs	APSR_nzcv, fpscr
   170e4:	ble	16fac <__assert_fail@plt+0x56e0>
   170e8:	vldr	s14, [pc, #108]	; 1715c <__assert_fail@plt+0x5890>
   170ec:	vmul.f32	s15, s15, s14
   170f0:	vmul.f32	s15, s15, s13
   170f4:	b	17088 <__assert_fail@plt+0x57bc>
   170f8:	ldr	r2, [r4, #12]
   170fc:	mov	r5, r6
   17100:	str	r6, [r3]
   17104:	ldr	r3, [r4, #16]
   17108:	add	r2, r2, #1
   1710c:	add	r3, r3, #1
   17110:	str	r2, [r4, #12]
   17114:	str	r3, [r4, #16]
   17118:	b	16f6c <__assert_fail@plt+0x56a0>
   1711c:	mov	r0, #8
   17120:	bl	1d804 <lchmod@@Base+0x61bc>
   17124:	cmp	r0, #0
   17128:	beq	16f6c <__assert_fail@plt+0x56a0>
   1712c:	ldr	r3, [sp, #4]
   17130:	b	16fd0 <__assert_fail@plt+0x5704>
   17134:	vldr	s14, [pc, #32]	; 1715c <__assert_fail@plt+0x5890>
   17138:	vldr	s13, [pc, #24]	; 17158 <__assert_fail@plt+0x588c>
   1713c:	vmul.f32	s15, s15, s14
   17140:	b	170f0 <__assert_fail@plt+0x5824>
   17144:	stclcc	12, cr12, [ip, #820]	; 0x334
   17148:	svccc	0x00666666
   1714c:	svccc	0x008ccccd
   17150:	svccc	0x00800000
   17154:	svcmi	0x00800000
   17158:	svccc	0x004ccccd
   1715c:	svccc	0x00b4fdf4
   17160:	strd	r4, [sp, #-16]!
   17164:	mov	r3, #1
   17168:	mov	r4, r0
   1716c:	str	r6, [sp, #8]
   17170:	str	lr, [sp, #12]
   17174:	sub	sp, sp, #8
   17178:	add	r2, sp, #4
   1717c:	bl	15db8 <__assert_fail@plt+0x44ec>
   17180:	subs	r5, r0, #0
   17184:	beq	171a4 <__assert_fail@plt+0x58d8>
   17188:	ldr	r2, [sp, #4]
   1718c:	ldr	r3, [r4, #16]
   17190:	ldr	r2, [r2]
   17194:	sub	r3, r3, #1
   17198:	str	r3, [r4, #16]
   1719c:	cmp	r2, #0
   171a0:	beq	171bc <__assert_fail@plt+0x58f0>
   171a4:	mov	r0, r5
   171a8:	add	sp, sp, #8
   171ac:	ldrd	r4, [sp]
   171b0:	ldr	r6, [sp, #8]
   171b4:	add	sp, sp, #12
   171b8:	pop	{pc}		; (ldr pc, [sp], #4)
   171bc:	vldr	s15, [r4, #8]
   171c0:	ldr	r3, [r4, #12]
   171c4:	ldr	r2, [r4, #20]
   171c8:	vcvt.f32.u32	s15, s15
   171cc:	sub	r3, r3, #1
   171d0:	vmov	s14, r3
   171d4:	vldr	s13, [r2]
   171d8:	str	r3, [r4, #12]
   171dc:	vmul.f32	s12, s13, s15
   171e0:	vcvt.f32.u32	s14, s14
   171e4:	vcmpe.f32	s14, s12
   171e8:	vmrs	APSR_nzcv, fpscr
   171ec:	bpl	171a4 <__assert_fail@plt+0x58d8>
   171f0:	movw	r3, #60580	; 0xeca4
   171f4:	movt	r3, #1
   171f8:	cmp	r2, r3
   171fc:	beq	172dc <__assert_fail@plt+0x5a10>
   17200:	vldr	s11, [pc, #224]	; 172e8 <__assert_fail@plt+0x5a1c>
   17204:	vldr	s12, [r2, #8]
   17208:	vcmpe.f32	s12, s11
   1720c:	vmrs	APSR_nzcv, fpscr
   17210:	ble	172c4 <__assert_fail@plt+0x59f8>
   17214:	vldr	s10, [pc, #208]	; 172ec <__assert_fail@plt+0x5a20>
   17218:	vcmpe.f32	s12, s10
   1721c:	vmrs	APSR_nzcv, fpscr
   17220:	bpl	172c4 <__assert_fail@plt+0x59f8>
   17224:	vldr	s10, [pc, #196]	; 172f0 <__assert_fail@plt+0x5a24>
   17228:	vldr	s9, [r2, #12]
   1722c:	vcmpe.f32	s9, s10
   17230:	vmrs	APSR_nzcv, fpscr
   17234:	ble	172c4 <__assert_fail@plt+0x59f8>
   17238:	vcmpe.f32	s13, #0.0
   1723c:	vmrs	APSR_nzcv, fpscr
   17240:	blt	172c4 <__assert_fail@plt+0x59f8>
   17244:	vadd.f32	s13, s13, s11
   17248:	vldr	s11, [r2, #4]
   1724c:	vcmpe.f32	s13, s11
   17250:	vmrs	APSR_nzcv, fpscr
   17254:	bpl	172c4 <__assert_fail@plt+0x59f8>
   17258:	vldr	s10, [pc, #148]	; 172f4 <__assert_fail@plt+0x5a28>
   1725c:	vcmpe.f32	s11, s10
   17260:	vmrs	APSR_nzcv, fpscr
   17264:	bhi	172c4 <__assert_fail@plt+0x59f8>
   17268:	vcmpe.f32	s12, s13
   1726c:	vmrs	APSR_nzcv, fpscr
   17270:	ble	172c4 <__assert_fail@plt+0x59f8>
   17274:	ldrb	r3, [r2, #16]
   17278:	vmul.f32	s15, s15, s11
   1727c:	cmp	r3, #0
   17280:	beq	172e0 <__assert_fail@plt+0x5a14>
   17284:	vcvt.u32.f32	s15, s15
   17288:	mov	r0, r4
   1728c:	vmov	r1, s15
   17290:	bl	16b0c <__assert_fail@plt+0x5240>
   17294:	cmp	r0, #0
   17298:	bne	171a4 <__assert_fail@plt+0x58d8>
   1729c:	ldr	r0, [r4, #36]	; 0x24
   172a0:	cmp	r0, #0
   172a4:	beq	172b8 <__assert_fail@plt+0x59ec>
   172a8:	ldr	r6, [r0, #4]
   172ac:	bl	13688 <__assert_fail@plt+0x1dbc>
   172b0:	subs	r0, r6, #0
   172b4:	bne	172a8 <__assert_fail@plt+0x59dc>
   172b8:	mov	r3, #0
   172bc:	str	r3, [r4, #36]	; 0x24
   172c0:	b	171a4 <__assert_fail@plt+0x58d8>
   172c4:	vldr	s13, [pc, #44]	; 172f8 <__assert_fail@plt+0x5a2c>
   172c8:	str	r3, [r4, #20]
   172cc:	vmul.f32	s13, s15, s13
   172d0:	vcmpe.f32	s14, s13
   172d4:	vmrs	APSR_nzcv, fpscr
   172d8:	bpl	171a4 <__assert_fail@plt+0x58d8>
   172dc:	vldr	s12, [pc, #24]	; 172fc <__assert_fail@plt+0x5a30>
   172e0:	vmul.f32	s15, s15, s12
   172e4:	b	17284 <__assert_fail@plt+0x59b8>
   172e8:	stclcc	12, cr12, [ip, #820]	; 0x334
   172ec:	svccc	0x00666666
   172f0:	svccc	0x008ccccd
   172f4:	svccc	0x00800000
   172f8:	andeq	r0, r0, r0
   172fc:	svccc	0x004ccccd
   17300:	strd	r4, [sp, #-16]!
   17304:	mov	r3, #1
   17308:	mov	r4, r0
   1730c:	str	r6, [sp, #8]
   17310:	str	lr, [sp, #12]
   17314:	sub	sp, sp, #8
   17318:	add	r2, sp, #4
   1731c:	bl	15db8 <__assert_fail@plt+0x44ec>
   17320:	subs	r5, r0, #0
   17324:	beq	17344 <__assert_fail@plt+0x5a78>
   17328:	ldr	r2, [sp, #4]
   1732c:	ldr	r3, [r4, #16]
   17330:	ldr	r2, [r2]
   17334:	sub	r3, r3, #1
   17338:	str	r3, [r4, #16]
   1733c:	cmp	r2, #0
   17340:	beq	1735c <__assert_fail@plt+0x5a90>
   17344:	mov	r0, r5
   17348:	add	sp, sp, #8
   1734c:	ldrd	r4, [sp]
   17350:	ldr	r6, [sp, #8]
   17354:	add	sp, sp, #12
   17358:	pop	{pc}		; (ldr pc, [sp], #4)
   1735c:	vldr	s15, [r4, #8]
   17360:	ldr	r3, [r4, #12]
   17364:	ldr	r2, [r4, #20]
   17368:	vcvt.f32.u32	s15, s15
   1736c:	sub	r3, r3, #1
   17370:	vmov	s14, r3
   17374:	vldr	s13, [r2]
   17378:	str	r3, [r4, #12]
   1737c:	vmul.f32	s12, s13, s15
   17380:	vcvt.f32.u32	s14, s14
   17384:	vcmpe.f32	s14, s12
   17388:	vmrs	APSR_nzcv, fpscr
   1738c:	bpl	17344 <__assert_fail@plt+0x5a78>
   17390:	movw	r3, #60580	; 0xeca4
   17394:	movt	r3, #1
   17398:	cmp	r2, r3
   1739c:	beq	1747c <__assert_fail@plt+0x5bb0>
   173a0:	vldr	s11, [pc, #224]	; 17488 <__assert_fail@plt+0x5bbc>
   173a4:	vldr	s12, [r2, #8]
   173a8:	vcmpe.f32	s12, s11
   173ac:	vmrs	APSR_nzcv, fpscr
   173b0:	ble	17464 <__assert_fail@plt+0x5b98>
   173b4:	vldr	s10, [pc, #208]	; 1748c <__assert_fail@plt+0x5bc0>
   173b8:	vcmpe.f32	s12, s10
   173bc:	vmrs	APSR_nzcv, fpscr
   173c0:	bpl	17464 <__assert_fail@plt+0x5b98>
   173c4:	vldr	s10, [pc, #196]	; 17490 <__assert_fail@plt+0x5bc4>
   173c8:	vldr	s9, [r2, #12]
   173cc:	vcmpe.f32	s9, s10
   173d0:	vmrs	APSR_nzcv, fpscr
   173d4:	ble	17464 <__assert_fail@plt+0x5b98>
   173d8:	vcmpe.f32	s13, #0.0
   173dc:	vmrs	APSR_nzcv, fpscr
   173e0:	blt	17464 <__assert_fail@plt+0x5b98>
   173e4:	vadd.f32	s13, s13, s11
   173e8:	vldr	s11, [r2, #4]
   173ec:	vcmpe.f32	s13, s11
   173f0:	vmrs	APSR_nzcv, fpscr
   173f4:	bpl	17464 <__assert_fail@plt+0x5b98>
   173f8:	vldr	s10, [pc, #148]	; 17494 <__assert_fail@plt+0x5bc8>
   173fc:	vcmpe.f32	s11, s10
   17400:	vmrs	APSR_nzcv, fpscr
   17404:	bhi	17464 <__assert_fail@plt+0x5b98>
   17408:	vcmpe.f32	s12, s13
   1740c:	vmrs	APSR_nzcv, fpscr
   17410:	ble	17464 <__assert_fail@plt+0x5b98>
   17414:	ldrb	r3, [r2, #16]
   17418:	vmul.f32	s15, s15, s11
   1741c:	cmp	r3, #0
   17420:	beq	17480 <__assert_fail@plt+0x5bb4>
   17424:	vcvt.u32.f32	s15, s15
   17428:	mov	r0, r4
   1742c:	vmov	r1, s15
   17430:	bl	16b0c <__assert_fail@plt+0x5240>
   17434:	cmp	r0, #0
   17438:	bne	17344 <__assert_fail@plt+0x5a78>
   1743c:	ldr	r0, [r4, #36]	; 0x24
   17440:	cmp	r0, #0
   17444:	beq	17458 <__assert_fail@plt+0x5b8c>
   17448:	ldr	r6, [r0, #4]
   1744c:	bl	13688 <__assert_fail@plt+0x1dbc>
   17450:	subs	r0, r6, #0
   17454:	bne	17448 <__assert_fail@plt+0x5b7c>
   17458:	mov	r3, #0
   1745c:	str	r3, [r4, #36]	; 0x24
   17460:	b	17344 <__assert_fail@plt+0x5a78>
   17464:	vldr	s13, [pc, #44]	; 17498 <__assert_fail@plt+0x5bcc>
   17468:	str	r3, [r4, #20]
   1746c:	vmul.f32	s13, s15, s13
   17470:	vcmpe.f32	s14, s13
   17474:	vmrs	APSR_nzcv, fpscr
   17478:	bpl	17344 <__assert_fail@plt+0x5a78>
   1747c:	vldr	s12, [pc, #24]	; 1749c <__assert_fail@plt+0x5bd0>
   17480:	vmul.f32	s15, s15, s12
   17484:	b	17424 <__assert_fail@plt+0x5b58>
   17488:	stclcc	12, cr12, [ip, #820]	; 0x334
   1748c:	svccc	0x00666666
   17490:	svccc	0x008ccccd
   17494:	svccc	0x00800000
   17498:	andeq	r0, r0, r0
   1749c:	svccc	0x004ccccd
   174a0:	strd	r4, [sp, #-16]!
   174a4:	mov	r4, r0
   174a8:	mov	r5, r1
   174ac:	ldr	r0, [r0]
   174b0:	str	r6, [sp, #8]
   174b4:	str	lr, [sp, #12]
   174b8:	bl	1df20 <lchmod@@Base+0x68d8>
   174bc:	ldr	ip, [r4, #8]
   174c0:	mov	r2, r5
   174c4:	mov	r3, #0
   174c8:	ldr	r1, [r4, #12]
   174cc:	eor	r0, r0, ip
   174d0:	bl	1e170 <lchmod@@Base+0x6b28>
   174d4:	ldrd	r4, [sp]
   174d8:	mov	r0, r2
   174dc:	ldr	r6, [sp, #8]
   174e0:	add	sp, sp, #12
   174e4:	pop	{pc}		; (ldr pc, [sp], #4)
   174e8:	strd	r4, [sp, #-16]!
   174ec:	ldrd	r2, [r1, #8]
   174f0:	ldrd	r4, [r0, #8]
   174f4:	str	r6, [sp, #8]
   174f8:	str	lr, [sp, #12]
   174fc:	cmp	r5, r3
   17500:	cmpeq	r4, r2
   17504:	beq	1751c <__assert_fail@plt+0x5c50>
   17508:	ldrd	r4, [sp]
   1750c:	mov	r0, #0
   17510:	ldr	r6, [sp, #8]
   17514:	add	sp, sp, #12
   17518:	pop	{pc}		; (ldr pc, [sp], #4)
   1751c:	ldrd	r4, [r0, #16]
   17520:	ldrd	r2, [r1, #16]
   17524:	cmp	r5, r3
   17528:	cmpeq	r4, r2
   1752c:	bne	17508 <__assert_fail@plt+0x5c3c>
   17530:	ldr	r0, [r0]
   17534:	ldr	r1, [r1]
   17538:	bl	114d0 <strcmp@plt>
   1753c:	clz	r0, r0
   17540:	ldrd	r4, [sp]
   17544:	lsr	r0, r0, #5
   17548:	ldr	r6, [sp, #8]
   1754c:	add	sp, sp, #12
   17550:	pop	{pc}		; (ldr pc, [sp], #4)
   17554:	str	r4, [sp, #-8]!
   17558:	mov	r4, r0
   1755c:	ldr	r0, [r0]
   17560:	str	lr, [sp, #4]
   17564:	bl	13688 <__assert_fail@plt+0x1dbc>
   17568:	mov	r0, r4
   1756c:	ldr	r4, [sp]
   17570:	ldr	lr, [sp, #4]
   17574:	add	sp, sp, #8
   17578:	b	13688 <__assert_fail@plt+0x1dbc>
   1757c:	mov	r3, #0
   17580:	mov	r2, #1
   17584:	str	r1, [r0]
   17588:	str	r1, [r0, #4]
   1758c:	str	r1, [r0, #8]
   17590:	str	r1, [r0, #12]
   17594:	str	r1, [r0, #16]
   17598:	str	r3, [r0, #20]
   1759c:	str	r3, [r0, #24]
   175a0:	strb	r2, [r0, #28]
   175a4:	bx	lr
   175a8:	ldrb	r0, [r0, #28]
   175ac:	bx	lr
   175b0:	ldrb	ip, [r0, #28]
   175b4:	mov	r2, r0
   175b8:	ldr	r3, [r0, #20]
   175bc:	eor	ip, ip, #1
   175c0:	add	r3, ip, r3
   175c4:	and	r3, r3, #3
   175c8:	ldr	r0, [r0, r3, lsl #2]
   175cc:	str	r1, [r2, r3, lsl #2]
   175d0:	ldr	r1, [r2, #24]
   175d4:	str	r3, [r2, #20]
   175d8:	cmp	r1, r3
   175dc:	bne	175ec <__assert_fail@plt+0x5d20>
   175e0:	add	ip, ip, r1
   175e4:	and	ip, ip, #3
   175e8:	str	ip, [r2, #24]
   175ec:	mov	r3, #0
   175f0:	strb	r3, [r2, #28]
   175f4:	bx	lr
   175f8:	ldrb	r3, [r0, #28]
   175fc:	cmp	r3, #0
   17600:	bne	1763c <__assert_fail@plt+0x5d70>
   17604:	ldr	r1, [r0, #16]
   17608:	ldr	r3, [r0, #20]
   1760c:	ldr	r2, [r0, r3, lsl #2]
   17610:	str	r1, [r0, r3, lsl #2]
   17614:	ldr	r1, [r0, #24]
   17618:	cmp	r3, r1
   1761c:	moveq	r3, #1
   17620:	strbeq	r3, [r0, #28]
   17624:	beq	17634 <__assert_fail@plt+0x5d68>
   17628:	add	r3, r3, #3
   1762c:	and	r3, r3, #3
   17630:	str	r3, [r0, #20]
   17634:	mov	r0, r2
   17638:	bx	lr
   1763c:	str	r4, [sp, #-8]!
   17640:	str	lr, [sp, #4]
   17644:	bl	11878 <abort@plt>

00017648 <lchmod@@Base>:
   17648:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1764c:	mov	r5, r1
   17650:	mov	r1, #2654208	; 0x288000
   17654:	strd	r6, [sp, #8]
   17658:	strd	r8, [sp, #16]
   1765c:	mov	r9, r0
   17660:	str	lr, [sp, #24]
   17664:	sub	sp, sp, #148	; 0x94
   17668:	bl	11644 <open64@plt>
   1766c:	subs	r4, r0, #0
   17670:	blt	1770c <lchmod@@Base+0xc4>
   17674:	mov	r0, #4096	; 0x1000
   17678:	add	r3, sp, #40	; 0x28
   1767c:	mov	r1, r4
   17680:	movw	r2, #60680	; 0xed08
   17684:	movt	r2, #1
   17688:	str	r0, [sp]
   1768c:	mov	r0, #3
   17690:	bl	115c0 <__fxstatat64@plt>
   17694:	mov	r6, r0
   17698:	bl	1171c <__errno_location@plt>
   1769c:	cmp	r6, #0
   176a0:	mov	r7, r0
   176a4:	bne	17754 <lchmod@@Base+0x10c>
   176a8:	ldr	r3, [sp, #56]	; 0x38
   176ac:	and	r3, r3, #61440	; 0xf000
   176b0:	cmp	r3, #40960	; 0xa000
   176b4:	beq	1773c <lchmod@@Base+0xf4>
   176b8:	mov	r2, #26
   176bc:	mov	r1, #1
   176c0:	str	r4, [sp]
   176c4:	movw	r3, #60708	; 0xed24
   176c8:	movt	r3, #1
   176cc:	add	r0, sp, #12
   176d0:	bl	11728 <__sprintf_chk@plt>
   176d4:	mov	r1, r5
   176d8:	add	r0, sp, #12
   176dc:	bl	11848 <chmod@plt>
   176e0:	mov	r6, r0
   176e4:	mov	r0, r4
   176e8:	ldr	r8, [r7]
   176ec:	bl	11884 <close@plt>
   176f0:	cmp	r6, #0
   176f4:	moveq	r4, r6
   176f8:	beq	1770c <lchmod@@Base+0xc4>
   176fc:	cmp	r8, #2
   17700:	beq	17728 <lchmod@@Base+0xe0>
   17704:	mov	r4, r6
   17708:	str	r8, [r7]
   1770c:	mov	r0, r4
   17710:	add	sp, sp, #148	; 0x94
   17714:	ldrd	r4, [sp]
   17718:	ldrd	r6, [sp, #8]
   1771c:	ldrd	r8, [sp, #16]
   17720:	add	sp, sp, #24
   17724:	pop	{pc}		; (ldr pc, [sp], #4)
   17728:	mov	r1, r5
   1772c:	mov	r0, r9
   17730:	bl	11848 <chmod@plt>
   17734:	mov	r4, r0
   17738:	b	1770c <lchmod@@Base+0xc4>
   1773c:	mov	r0, r4
   17740:	mvn	r4, #0
   17744:	bl	11884 <close@plt>
   17748:	mov	r3, #95	; 0x5f
   1774c:	str	r3, [r7]
   17750:	b	1770c <lchmod@@Base+0xc4>
   17754:	ldr	r5, [r7]
   17758:	mov	r0, r4
   1775c:	mvn	r4, #0
   17760:	bl	11884 <close@plt>
   17764:	str	r5, [r7]
   17768:	b	1770c <lchmod@@Base+0xc4>
   1776c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17770:	mov	r5, r0
   17774:	strd	r6, [sp, #8]
   17778:	strd	r8, [sp, #16]
   1777c:	strd	sl, [sp, #24]
   17780:	str	lr, [sp, #32]
   17784:	sub	sp, sp, #4
   17788:	ldrb	r3, [r0]
   1778c:	sub	r2, r3, #48	; 0x30
   17790:	cmp	r2, #7
   17794:	bls	178dc <lchmod@@Base+0x294>
   17798:	cmp	r3, #0
   1779c:	moveq	r0, #1
   177a0:	beq	177d0 <lchmod@@Base+0x188>
   177a4:	mov	r1, r5
   177a8:	mov	r0, #1
   177ac:	and	r2, r3, #239	; 0xef
   177b0:	cmp	r3, #43	; 0x2b
   177b4:	cmpne	r2, #45	; 0x2d
   177b8:	ldrb	r3, [r1, #1]!
   177bc:	moveq	r2, #1
   177c0:	movne	r2, #0
   177c4:	add	r0, r0, r2
   177c8:	cmp	r3, #0
   177cc:	bne	177ac <lchmod@@Base+0x164>
   177d0:	mov	r1, #16
   177d4:	movw	fp, #519	; 0x207
   177d8:	bl	1c50c <lchmod@@Base+0x4ec4>
   177dc:	mov	r8, #3
   177e0:	mov	ip, #0
   177e4:	mov	r4, #0
   177e8:	ldrb	r3, [r5]
   177ec:	mov	lr, r5
   177f0:	add	r5, r5, #1
   177f4:	cmp	r3, #97	; 0x61
   177f8:	beq	17a84 <lchmod@@Base+0x43c>
   177fc:	bls	1783c <lchmod@@Base+0x1f4>
   17800:	cmp	r3, #111	; 0x6f
   17804:	beq	17a7c <lchmod@@Base+0x434>
   17808:	cmp	r3, #117	; 0x75
   1780c:	beq	17a8c <lchmod@@Base+0x444>
   17810:	cmp	r3, #103	; 0x67
   17814:	beq	17a94 <lchmod@@Base+0x44c>
   17818:	bl	13688 <__assert_fail@plt+0x1dbc>
   1781c:	mov	r0, #0
   17820:	add	sp, sp, #4
   17824:	ldrd	r4, [sp]
   17828:	ldrd	r6, [sp, #8]
   1782c:	ldrd	r8, [sp, #16]
   17830:	ldrd	sl, [sp, #24]
   17834:	add	sp, sp, #32
   17838:	pop	{pc}		; (ldr pc, [sp], #4)
   1783c:	cmp	r3, #45	; 0x2d
   17840:	beq	17854 <lchmod@@Base+0x20c>
   17844:	cmp	r3, #61	; 0x3d
   17848:	beq	17854 <lchmod@@Base+0x20c>
   1784c:	cmp	r3, #43	; 0x2b
   17850:	bne	17818 <lchmod@@Base+0x1d0>
   17854:	add	r6, ip, #1
   17858:	mov	r7, #1
   1785c:	add	ip, r0, ip, lsl #4
   17860:	movw	r5, #4095	; 0xfff
   17864:	b	178b4 <lchmod@@Base+0x26c>
   17868:	cmp	r2, #117	; 0x75
   1786c:	addeq	r2, lr, #2
   17870:	moveq	r9, #448	; 0x1c0
   17874:	bne	17988 <lchmod@@Base+0x340>
   17878:	strb	r3, [ip]
   1787c:	ldrb	r3, [lr, #2]
   17880:	mov	lr, r2
   17884:	strb	r8, [ip, #1]
   17888:	stmib	ip, {r4, r9}
   1788c:	cmp	r4, #0
   17890:	andne	r9, r9, r4
   17894:	and	r2, r3, #239	; 0xef
   17898:	add	ip, ip, #16
   1789c:	str	r9, [ip, #-4]
   178a0:	cmp	r3, #43	; 0x2b
   178a4:	cmpne	r2, #45	; 0x2d
   178a8:	add	r2, r6, #1
   178ac:	bne	17ae4 <lchmod@@Base+0x49c>
   178b0:	mov	r6, r2
   178b4:	ldrb	r2, [lr, #1]
   178b8:	add	r1, lr, #1
   178bc:	cmp	r2, #103	; 0x67
   178c0:	beq	17a70 <lchmod@@Base+0x428>
   178c4:	bls	17918 <lchmod@@Base+0x2d0>
   178c8:	cmp	r2, #111	; 0x6f
   178cc:	bne	17868 <lchmod@@Base+0x220>
   178d0:	add	r2, lr, #2
   178d4:	mov	r9, #7
   178d8:	b	17878 <lchmod@@Base+0x230>
   178dc:	mov	r2, r0
   178e0:	mov	r4, #0
   178e4:	b	178f8 <lchmod@@Base+0x2b0>
   178e8:	ldrb	r3, [r2]
   178ec:	sub	r1, r3, #48	; 0x30
   178f0:	cmp	r1, #7
   178f4:	bhi	17aa0 <lchmod@@Base+0x458>
   178f8:	ldrb	r3, [r2], #1
   178fc:	lsl	r4, r4, #3
   17900:	sub	r4, r4, #48	; 0x30
   17904:	add	r4, r3, r4
   17908:	cmp	r4, #4096	; 0x1000
   1790c:	bcc	178e8 <lchmod@@Base+0x2a0>
   17910:	mov	r0, #0
   17914:	b	17820 <lchmod@@Base+0x1d8>
   17918:	sub	lr, r2, #48	; 0x30
   1791c:	cmp	lr, #7
   17920:	movls	r2, #0
   17924:	bhi	17988 <lchmod@@Base+0x340>
   17928:	ldrb	lr, [r1], #1
   1792c:	lsl	r2, r2, #3
   17930:	sub	r2, r2, #48	; 0x30
   17934:	add	r2, lr, r2
   17938:	cmp	r2, #4096	; 0x1000
   1793c:	bcs	17818 <lchmod@@Base+0x1d0>
   17940:	ldrb	r9, [r1]
   17944:	sub	lr, r9, #48	; 0x30
   17948:	cmp	lr, #7
   1794c:	bls	17928 <lchmod@@Base+0x2e0>
   17950:	cmp	r4, #0
   17954:	bne	17818 <lchmod@@Base+0x1d0>
   17958:	cmp	r9, #0
   1795c:	cmpne	r9, #44	; 0x2c
   17960:	bne	17818 <lchmod@@Base+0x1d0>
   17964:	movw	r4, #4095	; 0xfff
   17968:	mov	lr, r1
   1796c:	strb	r3, [ip]
   17970:	mov	r3, r9
   17974:	mov	r9, r4
   17978:	strb	r7, [ip, #1]
   1797c:	str	r5, [ip, #4]
   17980:	str	r2, [ip, #8]
   17984:	b	17894 <lchmod@@Base+0x24c>
   17988:	mov	sl, #1
   1798c:	mov	r9, #0
   17990:	sub	lr, r2, #88	; 0x58
   17994:	cmp	lr, #32
   17998:	ldrls	pc, [pc, lr, lsl #2]
   1799c:	b	17a58 <lchmod@@Base+0x410>
   179a0:	andeq	r7, r1, r4, lsr #20
   179a4:	andeq	r7, r1, r8, asr sl
   179a8:	andeq	r7, r1, r8, asr sl
   179ac:	andeq	r7, r1, r8, asr sl
   179b0:	andeq	r7, r1, r8, asr sl
   179b4:	andeq	r7, r1, r8, asr sl
   179b8:	andeq	r7, r1, r8, asr sl
   179bc:	andeq	r7, r1, r8, asr sl
   179c0:	andeq	r7, r1, r8, asr sl
   179c4:	andeq	r7, r1, r8, asr sl
   179c8:	andeq	r7, r1, r8, asr sl
   179cc:	andeq	r7, r1, r8, asr sl
   179d0:	andeq	r7, r1, r8, asr sl
   179d4:	andeq	r7, r1, r8, asr sl
   179d8:	andeq	r7, r1, r8, asr sl
   179dc:	andeq	r7, r1, r8, asr sl
   179e0:	andeq	r7, r1, r8, asr sl
   179e4:	andeq	r7, r1, r8, asr sl
   179e8:	andeq	r7, r1, r8, asr sl
   179ec:	andeq	r7, r1, r8, asr sl
   179f0:	andeq	r7, r1, r8, asr sl
   179f4:	andeq	r7, r1, r8, asr sl
   179f8:	andeq	r7, r1, r8, asr sl
   179fc:	andeq	r7, r1, r8, asr sl
   17a00:	andeq	r7, r1, r8, asr sl
   17a04:	andeq	r7, r1, r8, asr sl
   17a08:	andeq	r7, r1, r0, asr sl
   17a0c:	andeq	r7, r1, r8, asr #20
   17a10:	andeq	r7, r1, r0, asr #20
   17a14:	andeq	r7, r1, r8, asr sl
   17a18:	andeq	r7, r1, r8, asr sl
   17a1c:	andeq	r7, r1, r8, lsr sl
   17a20:	andeq	r7, r1, r0, lsr sl
   17a24:	mov	sl, #2
   17a28:	ldrb	r2, [r1, #1]!
   17a2c:	b	17990 <lchmod@@Base+0x348>
   17a30:	orr	r9, r9, #73	; 0x49
   17a34:	b	17a28 <lchmod@@Base+0x3e0>
   17a38:	orr	r9, r9, #146	; 0x92
   17a3c:	b	17a28 <lchmod@@Base+0x3e0>
   17a40:	orr	r9, r9, #512	; 0x200
   17a44:	b	17a28 <lchmod@@Base+0x3e0>
   17a48:	orr	r9, r9, #3072	; 0xc00
   17a4c:	b	17a28 <lchmod@@Base+0x3e0>
   17a50:	orr	r9, r9, #292	; 0x124
   17a54:	b	17a28 <lchmod@@Base+0x3e0>
   17a58:	mov	lr, r1
   17a5c:	strb	r3, [ip]
   17a60:	mov	r3, r2
   17a64:	strb	sl, [ip, #1]
   17a68:	stmib	ip, {r4, r9}
   17a6c:	b	1788c <lchmod@@Base+0x244>
   17a70:	add	r2, lr, #2
   17a74:	mov	r9, #56	; 0x38
   17a78:	b	17878 <lchmod@@Base+0x230>
   17a7c:	orr	r4, r4, fp
   17a80:	b	177e8 <lchmod@@Base+0x1a0>
   17a84:	movw	r4, #4095	; 0xfff
   17a88:	b	177e8 <lchmod@@Base+0x1a0>
   17a8c:	orr	r4, r4, #2496	; 0x9c0
   17a90:	b	177e8 <lchmod@@Base+0x1a0>
   17a94:	orr	r4, r4, #1072	; 0x430
   17a98:	orr	r4, r4, #8
   17a9c:	b	177e8 <lchmod@@Base+0x1a0>
   17aa0:	cmp	r3, #0
   17aa4:	bne	17910 <lchmod@@Base+0x2c8>
   17aa8:	sub	r2, r2, r5
   17aac:	mov	r0, #32
   17ab0:	cmp	r2, #4
   17ab4:	andle	r5, r4, #3072	; 0xc00
   17ab8:	movwgt	r5, #4095	; 0xfff
   17abc:	mvnle	r5, r5, lsr #10
   17ac0:	mvnle	r5, r5, lsl #10
   17ac4:	bl	1c3a8 <lchmod@@Base+0x4d60>
   17ac8:	movw	r1, #317	; 0x13d
   17acc:	movw	r2, #4095	; 0xfff
   17ad0:	mov	r3, #0
   17ad4:	strh	r1, [r0]
   17ad8:	stmib	r0, {r2, r4, r5}
   17adc:	strb	r3, [r0, #17]
   17ae0:	b	17820 <lchmod@@Base+0x1d8>
   17ae4:	cmp	r3, #44	; 0x2c
   17ae8:	bne	17af8 <lchmod@@Base+0x4b0>
   17aec:	add	r5, lr, #1
   17af0:	mov	ip, r6
   17af4:	b	177e4 <lchmod@@Base+0x19c>
   17af8:	cmp	r3, #0
   17afc:	addeq	r6, r0, r6, lsl #4
   17b00:	strbeq	r3, [r6, #1]
   17b04:	beq	17820 <lchmod@@Base+0x1d8>
   17b08:	b	17818 <lchmod@@Base+0x1d0>
   17b0c:	strd	r4, [sp, #-12]!
   17b10:	mov	r1, r0
   17b14:	mov	r0, #3
   17b18:	str	lr, [sp, #8]
   17b1c:	sub	sp, sp, #108	; 0x6c
   17b20:	mov	r2, sp
   17b24:	bl	11854 <__xstat64@plt>
   17b28:	subs	r4, r0, #0
   17b2c:	movne	r0, #0
   17b30:	bne	17b58 <lchmod@@Base+0x510>
   17b34:	ldr	r5, [sp, #16]
   17b38:	mov	r0, #32
   17b3c:	bl	1c3a8 <lchmod@@Base+0x4d60>
   17b40:	movw	r3, #4095	; 0xfff
   17b44:	movw	r2, #317	; 0x13d
   17b48:	strh	r2, [r0]
   17b4c:	stmib	r0, {r3, r5}
   17b50:	str	r3, [r0, #12]
   17b54:	strb	r4, [r0, #17]
   17b58:	add	sp, sp, #108	; 0x6c
   17b5c:	ldrd	r4, [sp]
   17b60:	add	sp, sp, #8
   17b64:	pop	{pc}		; (ldr pc, [sp], #4)
   17b68:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17b6c:	ubfx	r0, r0, #0, #12
   17b70:	strd	r6, [sp, #8]
   17b74:	strd	r8, [sp, #16]
   17b78:	strd	sl, [sp, #24]
   17b7c:	str	lr, [sp, #32]
   17b80:	ldrb	lr, [r3, #1]
   17b84:	ldr	sl, [sp, #36]	; 0x24
   17b88:	cmp	lr, #0
   17b8c:	beq	17cf0 <lchmod@@Base+0x6a8>
   17b90:	add	r3, r3, #16
   17b94:	mvn	r2, r2
   17b98:	mov	r7, #0
   17b9c:	mvn	r8, #3072	; 0xc00
   17ba0:	movw	r9, #438	; 0x1b6
   17ba4:	b	17c2c <lchmod@@Base+0x5e4>
   17ba8:	cmp	lr, #2
   17bac:	mvn	r4, #0
   17bb0:	beq	17ce0 <lchmod@@Base+0x698>
   17bb4:	mov	r5, r1
   17bb8:	cmp	lr, #3
   17bbc:	bne	17bf0 <lchmod@@Base+0x5a8>
   17bc0:	and	ip, ip, r0
   17bc4:	and	lr, ip, #292	; 0x124
   17bc8:	cmp	lr, #0
   17bcc:	movne	lr, r9
   17bd0:	moveq	lr, #146	; 0x92
   17bd4:	movne	fp, #292	; 0x124
   17bd8:	moveq	fp, #0
   17bdc:	tst	ip, #146	; 0x92
   17be0:	moveq	lr, fp
   17be4:	tst	ip, #73	; 0x49
   17be8:	orrne	lr, lr, #73	; 0x49
   17bec:	orr	ip, lr, ip
   17bf0:	cmp	r6, #0
   17bf4:	and	ip, ip, r4
   17bf8:	ldrb	lr, [r3, #-16]
   17bfc:	bne	17c68 <lchmod@@Base+0x620>
   17c00:	cmp	lr, #45	; 0x2d
   17c04:	and	ip, ip, r2
   17c08:	beq	17cc8 <lchmod@@Base+0x680>
   17c0c:	cmp	lr, #61	; 0x3d
   17c10:	beq	17c88 <lchmod@@Base+0x640>
   17c14:	cmp	lr, #43	; 0x2b
   17c18:	beq	17cd4 <lchmod@@Base+0x68c>
   17c1c:	add	r3, r3, #16
   17c20:	ldrb	lr, [r3, #-15]
   17c24:	cmp	lr, #0
   17c28:	beq	17ca8 <lchmod@@Base+0x660>
   17c2c:	cmp	r1, #0
   17c30:	ldr	r6, [r3, #-12]
   17c34:	ldr	ip, [r3, #-8]
   17c38:	beq	17ba8 <lchmod@@Base+0x560>
   17c3c:	cmp	lr, #2
   17c40:	ldr	r4, [r3, #-4]
   17c44:	mvn	r5, r4
   17c48:	orr	r4, r4, r8
   17c4c:	and	r5, r5, #3072	; 0xc00
   17c50:	bne	17bb8 <lchmod@@Base+0x570>
   17c54:	orr	ip, ip, #73	; 0x49
   17c58:	cmp	r6, #0
   17c5c:	ldrb	lr, [r3, #-16]
   17c60:	and	ip, ip, r4
   17c64:	beq	17c00 <lchmod@@Base+0x5b8>
   17c68:	cmp	lr, #45	; 0x2d
   17c6c:	and	ip, ip, r6
   17c70:	beq	17cc8 <lchmod@@Base+0x680>
   17c74:	cmp	lr, #61	; 0x3d
   17c78:	bne	17c14 <lchmod@@Base+0x5cc>
   17c7c:	mvn	r6, r6
   17c80:	orr	r5, r5, r6
   17c84:	mvn	r4, r5
   17c88:	add	r3, r3, #16
   17c8c:	ldrb	lr, [r3, #-15]
   17c90:	ubfx	r4, r4, #0, #12
   17c94:	and	r0, r0, r5
   17c98:	orr	r0, r0, ip
   17c9c:	orr	r7, r7, r4
   17ca0:	cmp	lr, #0
   17ca4:	bne	17c2c <lchmod@@Base+0x5e4>
   17ca8:	cmp	sl, #0
   17cac:	ldrd	r4, [sp]
   17cb0:	strne	r7, [sl]
   17cb4:	ldrd	r6, [sp, #8]
   17cb8:	ldrd	r8, [sp, #16]
   17cbc:	ldrd	sl, [sp, #24]
   17cc0:	add	sp, sp, #32
   17cc4:	pop	{pc}		; (ldr pc, [sp], #4)
   17cc8:	orr	r7, r7, ip
   17ccc:	bic	r0, r0, ip
   17cd0:	b	17c1c <lchmod@@Base+0x5d4>
   17cd4:	orr	r7, r7, ip
   17cd8:	orr	r0, r0, ip
   17cdc:	b	17c1c <lchmod@@Base+0x5d4>
   17ce0:	ands	r5, r0, #73	; 0x49
   17ce4:	beq	17bf0 <lchmod@@Base+0x5a8>
   17ce8:	mov	r5, r1
   17cec:	b	17c54 <lchmod@@Base+0x60c>
   17cf0:	mov	r7, lr
   17cf4:	b	17ca8 <lchmod@@Base+0x660>
   17cf8:	push	{r2, r3}
   17cfc:	push	{lr}		; (str lr, [sp, #-4]!)
   17d00:	sub	sp, sp, #12
   17d04:	ldr	r2, [sp, #16]
   17d08:	ands	r3, r2, #64	; 0x40
   17d0c:	bne	17d28 <lchmod@@Base+0x6e0>
   17d10:	bl	11704 <openat64@plt>
   17d14:	bl	1bc0c <lchmod@@Base+0x45c4>
   17d18:	add	sp, sp, #12
   17d1c:	pop	{lr}		; (ldr lr, [sp], #4)
   17d20:	add	sp, sp, #8
   17d24:	bx	lr
   17d28:	add	ip, sp, #20
   17d2c:	ldr	r3, [sp, #20]
   17d30:	str	ip, [sp, #4]
   17d34:	b	17d10 <lchmod@@Base+0x6c8>
   17d38:	orr	r2, r2, #540672	; 0x84000
   17d3c:	strd	r4, [sp, #-16]!
   17d40:	orr	r2, r2, #2304	; 0x900
   17d44:	str	r6, [sp, #8]
   17d48:	mov	r6, r3
   17d4c:	str	lr, [sp, #12]
   17d50:	bl	17cf8 <lchmod@@Base+0x6b0>
   17d54:	subs	r5, r0, #0
   17d58:	movlt	r4, #0
   17d5c:	blt	17d70 <lchmod@@Base+0x728>
   17d60:	bl	117d0 <fdopendir@plt>
   17d64:	subs	r4, r0, #0
   17d68:	beq	17d84 <lchmod@@Base+0x73c>
   17d6c:	str	r5, [r6]
   17d70:	mov	r0, r4
   17d74:	ldrd	r4, [sp]
   17d78:	ldr	r6, [sp, #8]
   17d7c:	add	sp, sp, #12
   17d80:	pop	{pc}		; (ldr pc, [sp], #4)
   17d84:	bl	1171c <__errno_location@plt>
   17d88:	mov	r6, r0
   17d8c:	mov	r0, r5
   17d90:	ldr	r5, [r6]
   17d94:	bl	11884 <close@plt>
   17d98:	b	17d6c <lchmod@@Base+0x724>
   17d9c:	strd	r4, [sp, #-16]!
   17da0:	subs	r4, r0, #0
   17da4:	str	r6, [sp, #8]
   17da8:	str	lr, [sp, #12]
   17dac:	beq	17e44 <lchmod@@Base+0x7fc>
   17db0:	mov	r1, #47	; 0x2f
   17db4:	bl	117ac <strrchr@plt>
   17db8:	subs	r5, r0, #0
   17dbc:	beq	17e1c <lchmod@@Base+0x7d4>
   17dc0:	add	r6, r5, #1
   17dc4:	sub	r3, r6, r4
   17dc8:	cmp	r3, #6
   17dcc:	ble	17e1c <lchmod@@Base+0x7d4>
   17dd0:	movw	r1, #60784	; 0xed70
   17dd4:	movt	r1, #1
   17dd8:	mov	r2, #7
   17ddc:	sub	r0, r5, #6
   17de0:	bl	1186c <strncmp@plt>
   17de4:	cmp	r0, #0
   17de8:	bne	17e1c <lchmod@@Base+0x7d4>
   17dec:	movw	r1, #60792	; 0xed78
   17df0:	movt	r1, #1
   17df4:	mov	r2, #3
   17df8:	mov	r0, r6
   17dfc:	bl	1186c <strncmp@plt>
   17e00:	cmp	r0, #0
   17e04:	movne	r4, r6
   17e08:	bne	17e1c <lchmod@@Base+0x7d4>
   17e0c:	add	r4, r5, #4
   17e10:	movw	r3, #464	; 0x1d0
   17e14:	movt	r3, #3
   17e18:	str	r4, [r3]
   17e1c:	movw	r2, #504	; 0x1f8
   17e20:	movt	r2, #3
   17e24:	ldr	r6, [sp, #8]
   17e28:	movw	r3, #468	; 0x1d4
   17e2c:	movt	r3, #3
   17e30:	str	r4, [r2]
   17e34:	str	r4, [r3]
   17e38:	ldrd	r4, [sp]
   17e3c:	add	sp, sp, #12
   17e40:	pop	{pc}		; (ldr pc, [sp], #4)
   17e44:	movw	r3, #480	; 0x1e0
   17e48:	movt	r3, #3
   17e4c:	movw	r0, #60728	; 0xed38
   17e50:	movt	r0, #1
   17e54:	ldr	r3, [r3]
   17e58:	mov	r2, #55	; 0x37
   17e5c:	mov	r1, #1
   17e60:	bl	115f0 <fwrite@plt>
   17e64:	bl	11878 <abort@plt>
   17e68:	mov	r2, #5
   17e6c:	strd	r4, [sp, #-16]!
   17e70:	mov	r5, r0
   17e74:	str	r6, [sp, #8]
   17e78:	mov	r6, r1
   17e7c:	mov	r1, r0
   17e80:	mov	r0, #0
   17e84:	str	lr, [sp, #12]
   17e88:	bl	11578 <dcgettext@plt>
   17e8c:	cmp	r5, r0
   17e90:	mov	r4, r0
   17e94:	beq	17eac <lchmod@@Base+0x864>
   17e98:	mov	r0, r4
   17e9c:	ldrd	r4, [sp]
   17ea0:	ldr	r6, [sp, #8]
   17ea4:	add	sp, sp, #12
   17ea8:	pop	{pc}		; (ldr pc, [sp], #4)
   17eac:	bl	1df54 <lchmod@@Base+0x690c>
   17eb0:	ldrb	r3, [r0]
   17eb4:	bic	r3, r3, #32
   17eb8:	cmp	r3, #85	; 0x55
   17ebc:	bne	17f24 <lchmod@@Base+0x8dc>
   17ec0:	ldrb	r3, [r0, #1]
   17ec4:	bic	r3, r3, #32
   17ec8:	cmp	r3, #84	; 0x54
   17ecc:	bne	17fa4 <lchmod@@Base+0x95c>
   17ed0:	ldrb	r3, [r0, #2]
   17ed4:	bic	r3, r3, #32
   17ed8:	cmp	r3, #70	; 0x46
   17edc:	bne	17fa4 <lchmod@@Base+0x95c>
   17ee0:	ldrb	r3, [r0, #3]
   17ee4:	cmp	r3, #45	; 0x2d
   17ee8:	bne	17fa4 <lchmod@@Base+0x95c>
   17eec:	ldrb	r3, [r0, #4]
   17ef0:	cmp	r3, #56	; 0x38
   17ef4:	bne	17fa4 <lchmod@@Base+0x95c>
   17ef8:	ldrb	r3, [r0, #5]
   17efc:	cmp	r3, #0
   17f00:	bne	17fa4 <lchmod@@Base+0x95c>
   17f04:	ldrb	r2, [r4]
   17f08:	movw	r3, #60884	; 0xedd4
   17f0c:	movt	r3, #1
   17f10:	movw	r4, #60896	; 0xede0
   17f14:	movt	r4, #1
   17f18:	cmp	r2, #96	; 0x60
   17f1c:	movne	r4, r3
   17f20:	b	17e98 <lchmod@@Base+0x850>
   17f24:	cmp	r3, #71	; 0x47
   17f28:	bne	17fa4 <lchmod@@Base+0x95c>
   17f2c:	ldrb	r3, [r0, #1]
   17f30:	bic	r3, r3, #32
   17f34:	cmp	r3, #66	; 0x42
   17f38:	bne	17fa4 <lchmod@@Base+0x95c>
   17f3c:	ldrb	r3, [r0, #2]
   17f40:	cmp	r3, #49	; 0x31
   17f44:	bne	17fa4 <lchmod@@Base+0x95c>
   17f48:	ldrb	r3, [r0, #3]
   17f4c:	cmp	r3, #56	; 0x38
   17f50:	bne	17fa4 <lchmod@@Base+0x95c>
   17f54:	ldrb	r3, [r0, #4]
   17f58:	cmp	r3, #48	; 0x30
   17f5c:	bne	17fa4 <lchmod@@Base+0x95c>
   17f60:	ldrb	r3, [r0, #5]
   17f64:	cmp	r3, #51	; 0x33
   17f68:	bne	17fa4 <lchmod@@Base+0x95c>
   17f6c:	ldrb	r3, [r0, #6]
   17f70:	cmp	r3, #48	; 0x30
   17f74:	bne	17fa4 <lchmod@@Base+0x95c>
   17f78:	ldrb	r3, [r0, #7]
   17f7c:	cmp	r3, #0
   17f80:	bne	17fa4 <lchmod@@Base+0x95c>
   17f84:	ldrb	r2, [r4]
   17f88:	movw	r3, #60888	; 0xedd8
   17f8c:	movt	r3, #1
   17f90:	movw	r4, #60892	; 0xeddc
   17f94:	movt	r4, #1
   17f98:	cmp	r2, #96	; 0x60
   17f9c:	movne	r4, r3
   17fa0:	b	17e98 <lchmod@@Base+0x850>
   17fa4:	movw	r3, #60900	; 0xede4
   17fa8:	movt	r3, #1
   17fac:	cmp	r6, #9
   17fb0:	movw	r4, #60880	; 0xedd0
   17fb4:	movt	r4, #1
   17fb8:	movne	r4, r3
   17fbc:	b	17e98 <lchmod@@Base+0x850>
   17fc0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17fc4:	strd	r6, [sp, #8]
   17fc8:	strd	r8, [sp, #16]
   17fcc:	mov	r8, r3
   17fd0:	strd	sl, [sp, #24]
   17fd4:	mov	fp, r0
   17fd8:	mov	sl, r1
   17fdc:	str	lr, [sp, #32]
   17fe0:	sub	sp, sp, #140	; 0x8c
   17fe4:	ldr	r3, [sp, #180]	; 0xb4
   17fe8:	str	r2, [sp, #28]
   17fec:	and	r4, r3, #2
   17ff0:	ubfx	r3, r3, #1, #1
   17ff4:	str	r3, [sp, #44]	; 0x2c
   17ff8:	bl	11608 <__ctype_get_mb_cur_max@plt>
   17ffc:	ldr	r3, [sp, #176]	; 0xb0
   18000:	str	r0, [sp, #76]	; 0x4c
   18004:	cmp	r3, #10
   18008:	ldrls	pc, [pc, r3, lsl #2]
   1800c:	b	199a8 <lchmod@@Base+0x2360>
   18010:	muleq	r1, r0, r4
   18014:	andeq	r8, r1, ip, lsr #11
   18018:	andeq	r8, r1, r8, lsr #22
   1801c:	andeq	r8, r1, r8, lsl r6
   18020:	muleq	r1, r8, r3
   18024:	andeq	r8, r1, r4, lsl r4
   18028:	andeq	r8, r1, ip, ror #9
   1802c:	andeq	r8, r1, r4, asr r5
   18030:	andeq	r8, r1, ip, lsr r0
   18034:	andeq	r8, r1, ip, lsr r0
   18038:	andeq	r8, r1, ip, lsr r0
   1803c:	ldr	r3, [sp, #176]	; 0xb0
   18040:	cmp	r3, #10
   18044:	beq	18070 <lchmod@@Base+0xa28>
   18048:	mov	r1, r3
   1804c:	movw	r0, #60904	; 0xede8
   18050:	movt	r0, #1
   18054:	bl	17e68 <lchmod@@Base+0x820>
   18058:	str	r0, [sp, #188]	; 0xbc
   1805c:	movw	r0, #60900	; 0xede4
   18060:	movt	r0, #1
   18064:	ldr	r1, [sp, #176]	; 0xb0
   18068:	bl	17e68 <lchmod@@Base+0x820>
   1806c:	str	r0, [sp, #192]	; 0xc0
   18070:	cmp	r4, #0
   18074:	movne	r4, #0
   18078:	beq	19734 <lchmod@@Base+0x20ec>
   1807c:	mov	r5, #0
   18080:	ldr	r0, [sp, #192]	; 0xc0
   18084:	mov	r9, r5
   18088:	str	r5, [sp, #64]	; 0x40
   1808c:	bl	116e0 <strlen@plt>
   18090:	mov	r3, #1
   18094:	ldr	r2, [sp, #44]	; 0x2c
   18098:	cmp	r0, r5
   1809c:	moveq	r2, r5
   180a0:	str	r3, [sp, #32]
   180a4:	str	r3, [sp, #48]	; 0x30
   180a8:	str	r5, [sp, #52]	; 0x34
   180ac:	str	r3, [sp, #60]	; 0x3c
   180b0:	ldr	r3, [sp, #180]	; 0xb4
   180b4:	str	r0, [sp, #56]	; 0x38
   180b8:	str	r5, [sp, #68]	; 0x44
   180bc:	str	r5, [sp, #80]	; 0x50
   180c0:	str	r5, [sp, #84]	; 0x54
   180c4:	and	r3, r3, #1
   180c8:	str	r2, [sp, #88]	; 0x58
   180cc:	str	r3, [sp, #92]	; 0x5c
   180d0:	ldr	r3, [sp, #180]	; 0xb4
   180d4:	and	r3, r3, #4
   180d8:	str	r3, [sp, #96]	; 0x60
   180dc:	ldr	r3, [sp, #192]	; 0xc0
   180e0:	str	r3, [sp, #72]	; 0x48
   180e4:	mov	r3, fp
   180e8:	mov	r7, #0
   180ec:	mov	fp, r9
   180f0:	mov	r9, r3
   180f4:	cmn	r8, #1
   180f8:	beq	186fc <lchmod@@Base+0x10b4>
   180fc:	subs	r6, r8, r7
   18100:	movne	r6, #1
   18104:	cmp	r6, #0
   18108:	beq	18714 <lchmod@@Base+0x10cc>
   1810c:	ldr	r0, [sp, #28]
   18110:	ldr	r3, [sp, #48]	; 0x30
   18114:	cmp	r3, #0
   18118:	add	r3, r0, r7
   1811c:	str	r3, [sp, #36]	; 0x24
   18120:	beq	18ba0 <lchmod@@Base+0x1558>
   18124:	ldr	r2, [sp, #56]	; 0x38
   18128:	cmp	r2, #0
   1812c:	beq	190a0 <lchmod@@Base+0x1a58>
   18130:	cmp	r2, #1
   18134:	mov	r3, r2
   18138:	movls	r3, #0
   1813c:	movhi	r3, #1
   18140:	cmn	r8, #1
   18144:	add	r5, r7, r2
   18148:	movne	r3, #0
   1814c:	cmp	r3, #0
   18150:	beq	1815c <lchmod@@Base+0xb14>
   18154:	bl	116e0 <strlen@plt>
   18158:	mov	r8, r0
   1815c:	cmp	r5, r8
   18160:	bhi	190a0 <lchmod@@Base+0x1a58>
   18164:	ldr	r0, [sp, #36]	; 0x24
   18168:	ldr	r2, [sp, #56]	; 0x38
   1816c:	ldr	r1, [sp, #72]	; 0x48
   18170:	bl	11560 <memcmp@plt>
   18174:	cmp	r0, #0
   18178:	bne	190a0 <lchmod@@Base+0x1a58>
   1817c:	ldr	r3, [sp, #44]	; 0x2c
   18180:	cmp	r3, #0
   18184:	bne	1984c <lchmod@@Base+0x2204>
   18188:	ldr	r3, [sp, #36]	; 0x24
   1818c:	ldrb	r5, [r3]
   18190:	cmp	r5, #126	; 0x7e
   18194:	ldrls	pc, [pc, r5, lsl #2]
   18198:	b	19634 <lchmod@@Base+0x1fec>
   1819c:	andeq	r8, r1, r0, ror r8
   181a0:	andeq	r9, r1, r4, lsr r6
   181a4:	andeq	r9, r1, r4, lsr r6
   181a8:	andeq	r9, r1, r4, lsr r6
   181ac:	andeq	r9, r1, r4, lsr r6
   181b0:	andeq	r9, r1, r4, lsr r6
   181b4:	andeq	r9, r1, r4, lsr r6
   181b8:	andeq	r8, r1, r8, asr #15
   181bc:	andeq	r8, r1, r0, asr #15
   181c0:	ldrdeq	r8, [r1], -r0
   181c4:	andeq	r8, r1, r4, asr r9
   181c8:	andeq	r8, r1, r4, asr #18
   181cc:	andeq	r8, r1, ip, ror #12
   181d0:	andeq	r8, r1, r0, lsr #18
   181d4:	andeq	r9, r1, r4, lsr r6
   181d8:	andeq	r9, r1, r4, lsr r6
   181dc:	andeq	r9, r1, r4, lsr r6
   181e0:	andeq	r9, r1, r4, lsr r6
   181e4:	andeq	r9, r1, r4, lsr r6
   181e8:	andeq	r9, r1, r4, lsr r6
   181ec:	andeq	r9, r1, r4, lsr r6
   181f0:	andeq	r9, r1, r4, lsr r6
   181f4:	andeq	r9, r1, r4, lsr r6
   181f8:	andeq	r9, r1, r4, lsr r6
   181fc:	andeq	r9, r1, r4, lsr r6
   18200:	andeq	r9, r1, r4, lsr r6
   18204:	andeq	r9, r1, r4, lsr r6
   18208:	andeq	r9, r1, r4, lsr r6
   1820c:	andeq	r9, r1, r4, lsr r6
   18210:	andeq	r9, r1, r4, lsr r6
   18214:	andeq	r9, r1, r4, lsr r6
   18218:	andeq	r9, r1, r4, lsr r6
   1821c:	andeq	r8, r1, ip, asr #19
   18220:	andeq	r8, r1, r0, asr #19
   18224:	andeq	r8, r1, r0, asr #19
   18228:			; <UNDEFINED> instruction: 0x000189b4
   1822c:	andeq	r8, r1, r0, asr #19
   18230:	muleq	r1, r8, sl
   18234:	andeq	r8, r1, r0, asr #19
   18238:	andeq	r8, r1, r8, lsl #22
   1823c:	andeq	r8, r1, r0, asr #19
   18240:	andeq	r8, r1, r0, asr #19
   18244:	andeq	r8, r1, r0, asr #19
   18248:	muleq	r1, r8, sl
   1824c:	muleq	r1, r8, sl
   18250:	muleq	r1, r8, sl
   18254:	muleq	r1, r8, sl
   18258:	muleq	r1, r8, sl
   1825c:	muleq	r1, r8, sl
   18260:	muleq	r1, r8, sl
   18264:	muleq	r1, r8, sl
   18268:	muleq	r1, r8, sl
   1826c:	muleq	r1, r8, sl
   18270:	muleq	r1, r8, sl
   18274:	muleq	r1, r8, sl
   18278:	muleq	r1, r8, sl
   1827c:	muleq	r1, r8, sl
   18280:	muleq	r1, r8, sl
   18284:	muleq	r1, r8, sl
   18288:	andeq	r8, r1, r0, asr #19
   1828c:	andeq	r8, r1, r0, asr #19
   18290:	andeq	r8, r1, r0, asr #19
   18294:	andeq	r8, r1, r0, asr #19
   18298:			; <UNDEFINED> instruction: 0x00018ab8
   1829c:	andeq	r9, r1, r4, lsr r6
   182a0:	muleq	r1, r8, sl
   182a4:	muleq	r1, r8, sl
   182a8:	muleq	r1, r8, sl
   182ac:	muleq	r1, r8, sl
   182b0:	muleq	r1, r8, sl
   182b4:	muleq	r1, r8, sl
   182b8:	muleq	r1, r8, sl
   182bc:	muleq	r1, r8, sl
   182c0:	muleq	r1, r8, sl
   182c4:	muleq	r1, r8, sl
   182c8:	muleq	r1, r8, sl
   182cc:	muleq	r1, r8, sl
   182d0:	muleq	r1, r8, sl
   182d4:	muleq	r1, r8, sl
   182d8:	muleq	r1, r8, sl
   182dc:	muleq	r1, r8, sl
   182e0:	muleq	r1, r8, sl
   182e4:	muleq	r1, r8, sl
   182e8:	muleq	r1, r8, sl
   182ec:	muleq	r1, r8, sl
   182f0:	muleq	r1, r8, sl
   182f4:	muleq	r1, r8, sl
   182f8:	muleq	r1, r8, sl
   182fc:	muleq	r1, r8, sl
   18300:	muleq	r1, r8, sl
   18304:	muleq	r1, r8, sl
   18308:	andeq	r8, r1, r0, asr #19
   1830c:	andeq	r8, r1, ip, asr sl
   18310:	muleq	r1, r8, sl
   18314:	andeq	r8, r1, r0, asr #19
   18318:	muleq	r1, r8, sl
   1831c:	andeq	r8, r1, r0, asr #19
   18320:	muleq	r1, r8, sl
   18324:	muleq	r1, r8, sl
   18328:	muleq	r1, r8, sl
   1832c:	muleq	r1, r8, sl
   18330:	muleq	r1, r8, sl
   18334:	muleq	r1, r8, sl
   18338:	muleq	r1, r8, sl
   1833c:	muleq	r1, r8, sl
   18340:	muleq	r1, r8, sl
   18344:	muleq	r1, r8, sl
   18348:	muleq	r1, r8, sl
   1834c:	muleq	r1, r8, sl
   18350:	muleq	r1, r8, sl
   18354:	muleq	r1, r8, sl
   18358:	muleq	r1, r8, sl
   1835c:	muleq	r1, r8, sl
   18360:	muleq	r1, r8, sl
   18364:	muleq	r1, r8, sl
   18368:	muleq	r1, r8, sl
   1836c:	muleq	r1, r8, sl
   18370:	muleq	r1, r8, sl
   18374:	muleq	r1, r8, sl
   18378:	muleq	r1, r8, sl
   1837c:	muleq	r1, r8, sl
   18380:	muleq	r1, r8, sl
   18384:	muleq	r1, r8, sl
   18388:	andeq	r8, r1, r8, ror #18
   1838c:	andeq	r8, r1, r0, asr #19
   18390:	andeq	r8, r1, r8, ror #18
   18394:			; <UNDEFINED> instruction: 0x000189b4
   18398:	ldr	r3, [sp, #180]	; 0xb4
   1839c:	cmp	r4, #0
   183a0:	and	r3, r3, #1
   183a4:	str	r3, [sp, #92]	; 0x5c
   183a8:	ldr	r3, [sp, #180]	; 0xb4
   183ac:	and	r3, r3, #4
   183b0:	str	r3, [sp, #96]	; 0x60
   183b4:	moveq	r3, #1
   183b8:	streq	r3, [sp, #60]	; 0x3c
   183bc:	beq	18b4c <lchmod@@Base+0x1504>
   183c0:	mov	r3, #0
   183c4:	mov	r2, #1
   183c8:	mov	r4, r3
   183cc:	mov	r9, r3
   183d0:	str	r2, [sp, #32]
   183d4:	str	r2, [sp, #44]	; 0x2c
   183d8:	str	r3, [sp, #48]	; 0x30
   183dc:	str	r2, [sp, #52]	; 0x34
   183e0:	str	r2, [sp, #56]	; 0x38
   183e4:	str	r3, [sp, #60]	; 0x3c
   183e8:	str	r2, [sp, #64]	; 0x40
   183ec:	str	r2, [sp, #68]	; 0x44
   183f0:	str	r3, [sp, #80]	; 0x50
   183f4:	str	r3, [sp, #84]	; 0x54
   183f8:	str	r3, [sp, #88]	; 0x58
   183fc:	movw	r3, #60900	; 0xede4
   18400:	movt	r3, #1
   18404:	str	r3, [sp, #72]	; 0x48
   18408:	mov	r3, #2
   1840c:	str	r3, [sp, #176]	; 0xb0
   18410:	b	180e4 <lchmod@@Base+0xa9c>
   18414:	ldr	r3, [sp, #180]	; 0xb4
   18418:	cmp	r4, #0
   1841c:	and	r3, r3, #1
   18420:	str	r3, [sp, #92]	; 0x5c
   18424:	ldr	r3, [sp, #180]	; 0xb4
   18428:	and	r3, r3, #4
   1842c:	str	r3, [sp, #96]	; 0x60
   18430:	bne	19804 <lchmod@@Base+0x21bc>
   18434:	cmp	sl, #0
   18438:	beq	195b0 <lchmod@@Base+0x1f68>
   1843c:	mov	r3, #34	; 0x22
   18440:	mov	r2, r4
   18444:	mov	r1, #1
   18448:	mov	r9, r2
   1844c:	strb	r3, [fp]
   18450:	movw	r3, #60880	; 0xedd0
   18454:	movt	r3, #1
   18458:	mov	r4, r1
   1845c:	str	r1, [sp, #32]
   18460:	str	r2, [sp, #44]	; 0x2c
   18464:	str	r1, [sp, #48]	; 0x30
   18468:	str	r2, [sp, #52]	; 0x34
   1846c:	str	r1, [sp, #56]	; 0x38
   18470:	str	r1, [sp, #60]	; 0x3c
   18474:	str	r2, [sp, #64]	; 0x40
   18478:	str	r2, [sp, #68]	; 0x44
   1847c:	str	r3, [sp, #72]	; 0x48
   18480:	str	r2, [sp, #80]	; 0x50
   18484:	str	r2, [sp, #84]	; 0x54
   18488:	str	r2, [sp, #88]	; 0x58
   1848c:	b	180e4 <lchmod@@Base+0xa9c>
   18490:	mov	r3, #0
   18494:	mov	r2, #1
   18498:	mov	r9, r3
   1849c:	str	r2, [sp, #32]
   184a0:	str	r3, [sp, #44]	; 0x2c
   184a4:	str	r3, [sp, #48]	; 0x30
   184a8:	str	r3, [sp, #52]	; 0x34
   184ac:	str	r3, [sp, #60]	; 0x3c
   184b0:	strd	r2, [sp, #64]	; 0x40
   184b4:	str	r3, [sp, #72]	; 0x48
   184b8:	str	r3, [sp, #80]	; 0x50
   184bc:	str	r3, [sp, #88]	; 0x58
   184c0:	ldr	r3, [sp, #180]	; 0xb4
   184c4:	and	r3, r3, r2
   184c8:	str	r3, [sp, #92]	; 0x5c
   184cc:	ldr	r3, [sp, #180]	; 0xb4
   184d0:	and	r3, r3, #4
   184d4:	str	r3, [sp, #96]	; 0x60
   184d8:	ldr	r3, [sp, #176]	; 0xb0
   184dc:	mov	r4, r3
   184e0:	str	r3, [sp, #56]	; 0x38
   184e4:	str	r3, [sp, #84]	; 0x54
   184e8:	b	180e4 <lchmod@@Base+0xa9c>
   184ec:	mov	r3, #1
   184f0:	mov	r4, #0
   184f4:	mov	r9, r4
   184f8:	str	r3, [sp, #32]
   184fc:	str	r3, [sp, #44]	; 0x2c
   18500:	str	r3, [sp, #48]	; 0x30
   18504:	str	r4, [sp, #52]	; 0x34
   18508:	str	r3, [sp, #56]	; 0x38
   1850c:	str	r3, [sp, #60]	; 0x3c
   18510:	str	r3, [sp, #88]	; 0x58
   18514:	movw	r3, #60880	; 0xedd0
   18518:	movt	r3, #1
   1851c:	str	r4, [sp, #64]	; 0x40
   18520:	str	r4, [sp, #68]	; 0x44
   18524:	str	r3, [sp, #72]	; 0x48
   18528:	ldr	r3, [sp, #180]	; 0xb4
   1852c:	str	r4, [sp, #80]	; 0x50
   18530:	str	r4, [sp, #84]	; 0x54
   18534:	and	r3, r3, #1
   18538:	str	r3, [sp, #92]	; 0x5c
   1853c:	ldr	r3, [sp, #180]	; 0xb4
   18540:	and	r3, r3, #4
   18544:	str	r3, [sp, #96]	; 0x60
   18548:	mov	r3, #5
   1854c:	str	r3, [sp, #176]	; 0xb0
   18550:	b	180e4 <lchmod@@Base+0xa9c>
   18554:	mov	r3, #1
   18558:	mov	r4, #0
   1855c:	mov	r9, r4
   18560:	str	r3, [sp, #32]
   18564:	str	r4, [sp, #44]	; 0x2c
   18568:	str	r3, [sp, #48]	; 0x30
   1856c:	str	r3, [sp, #60]	; 0x3c
   18570:	ldr	r3, [sp, #180]	; 0xb4
   18574:	str	r4, [sp, #52]	; 0x34
   18578:	str	r4, [sp, #56]	; 0x38
   1857c:	str	r4, [sp, #64]	; 0x40
   18580:	str	r4, [sp, #68]	; 0x44
   18584:	and	r3, r3, #1
   18588:	str	r4, [sp, #72]	; 0x48
   1858c:	str	r4, [sp, #80]	; 0x50
   18590:	str	r4, [sp, #84]	; 0x54
   18594:	str	r3, [sp, #92]	; 0x5c
   18598:	ldr	r3, [sp, #180]	; 0xb4
   1859c:	str	r4, [sp, #88]	; 0x58
   185a0:	and	r3, r3, #4
   185a4:	str	r3, [sp, #96]	; 0x60
   185a8:	b	180e4 <lchmod@@Base+0xa9c>
   185ac:	mov	r3, #0
   185b0:	mov	r2, #1
   185b4:	ldr	r1, [sp, #176]	; 0xb0
   185b8:	mov	r4, r3
   185bc:	mov	r9, r3
   185c0:	movw	r3, #60900	; 0xede4
   185c4:	movt	r3, #1
   185c8:	str	r2, [sp, #32]
   185cc:	str	r2, [sp, #44]	; 0x2c
   185d0:	str	r4, [sp, #48]	; 0x30
   185d4:	strd	r2, [sp, #68]	; 0x44
   185d8:	ldr	r3, [sp, #180]	; 0xb4
   185dc:	str	r2, [sp, #52]	; 0x34
   185e0:	str	r1, [sp, #56]	; 0x38
   185e4:	str	r4, [sp, #60]	; 0x3c
   185e8:	str	r2, [sp, #64]	; 0x40
   185ec:	and	r3, r3, r2
   185f0:	str	r4, [sp, #80]	; 0x50
   185f4:	str	r4, [sp, #84]	; 0x54
   185f8:	str	r4, [sp, #88]	; 0x58
   185fc:	str	r3, [sp, #92]	; 0x5c
   18600:	ldr	r3, [sp, #180]	; 0xb4
   18604:	and	r3, r3, #4
   18608:	str	r3, [sp, #96]	; 0x60
   1860c:	mov	r3, #2
   18610:	str	r3, [sp, #176]	; 0xb0
   18614:	b	180e4 <lchmod@@Base+0xa9c>
   18618:	mov	r3, #1
   1861c:	mov	r2, #0
   18620:	mov	r4, r2
   18624:	mov	r9, r2
   18628:	str	r3, [sp, #32]
   1862c:	str	r3, [sp, #44]	; 0x2c
   18630:	str	r2, [sp, #48]	; 0x30
   18634:	str	r3, [sp, #52]	; 0x34
   18638:	str	r3, [sp, #56]	; 0x38
   1863c:	str	r3, [sp, #60]	; 0x3c
   18640:	str	r3, [sp, #64]	; 0x40
   18644:	str	r3, [sp, #68]	; 0x44
   18648:	str	r3, [sp, #88]	; 0x58
   1864c:	movw	r3, #60900	; 0xede4
   18650:	movt	r3, #1
   18654:	str	r3, [sp, #72]	; 0x48
   18658:	ldr	r3, [sp, #180]	; 0xb4
   1865c:	str	r2, [sp, #80]	; 0x50
   18660:	str	r2, [sp, #84]	; 0x54
   18664:	and	r3, r3, #1
   18668:	b	185fc <lchmod@@Base+0xfb4>
   1866c:	mov	r5, #102	; 0x66
   18670:	mov	r6, #0
   18674:	ldr	r3, [sp, #44]	; 0x2c
   18678:	cmp	r3, #0
   1867c:	bne	1952c <lchmod@@Base+0x1ee4>
   18680:	ldr	r2, [sp, #52]	; 0x34
   18684:	eor	r3, fp, #1
   18688:	ands	r3, r2, r3
   1868c:	beq	186c4 <lchmod@@Base+0x107c>
   18690:	cmp	sl, r4
   18694:	mov	fp, r3
   18698:	movhi	r2, #39	; 0x27
   1869c:	strbhi	r2, [r9, r4]
   186a0:	add	r2, r4, #1
   186a4:	cmp	sl, r2
   186a8:	movhi	r1, #36	; 0x24
   186ac:	strbhi	r1, [r9, r2]
   186b0:	add	r2, r4, #2
   186b4:	add	r4, r4, #3
   186b8:	cmp	sl, r2
   186bc:	movhi	r1, #39	; 0x27
   186c0:	strbhi	r1, [r9, r2]
   186c4:	cmp	sl, r4
   186c8:	add	r7, r7, #1
   186cc:	movhi	r3, #92	; 0x5c
   186d0:	strbhi	r3, [r9, r4]
   186d4:	add	r4, r4, #1
   186d8:	cmp	r4, sl
   186dc:	ldr	r3, [sp, #32]
   186e0:	strbcc	r5, [r9, r4]
   186e4:	cmp	r6, #0
   186e8:	add	r4, r4, #1
   186ec:	moveq	r3, #0
   186f0:	cmn	r8, #1
   186f4:	str	r3, [sp, #32]
   186f8:	bne	180fc <lchmod@@Base+0xab4>
   186fc:	ldr	r3, [sp, #28]
   18700:	ldrb	r6, [r3, r7]
   18704:	adds	r6, r6, #0
   18708:	movne	r6, #1
   1870c:	cmp	r6, #0
   18710:	bne	1810c <lchmod@@Base+0xac4>
   18714:	mov	r3, r9
   18718:	mov	r9, fp
   1871c:	mov	fp, r3
   18720:	ldr	r3, [sp, #68]	; 0x44
   18724:	cmp	r4, #0
   18728:	movne	r3, #0
   1872c:	cmp	r3, #0
   18730:	bne	19924 <lchmod@@Base+0x22dc>
   18734:	ldr	r3, [sp, #44]	; 0x2c
   18738:	ldr	r2, [sp, #52]	; 0x34
   1873c:	eor	r3, r3, #1
   18740:	ands	r2, r3, r2
   18744:	beq	1985c <lchmod@@Base+0x2214>
   18748:	ldr	r3, [sp, #80]	; 0x50
   1874c:	cmp	r3, #0
   18750:	beq	19860 <lchmod@@Base+0x2218>
   18754:	ldr	r3, [sp, #32]
   18758:	cmp	r3, #0
   1875c:	bne	198d4 <lchmod@@Base+0x228c>
   18760:	ldr	r3, [sp, #84]	; 0x54
   18764:	adds	r3, r3, #0
   18768:	movne	r3, #1
   1876c:	cmp	sl, #0
   18770:	movne	r3, #0
   18774:	cmp	r3, #0
   18778:	ldreq	r2, [sp, #80]	; 0x50
   1877c:	beq	19860 <lchmod@@Base+0x2218>
   18780:	ldr	r2, [sp, #84]	; 0x54
   18784:	mov	sl, r2
   18788:	mov	r0, #0
   1878c:	mov	r4, #1
   18790:	mov	r1, #39	; 0x27
   18794:	str	r0, [sp, #44]	; 0x2c
   18798:	strb	r1, [fp]
   1879c:	str	r0, [sp, #48]	; 0x30
   187a0:	str	r4, [sp, #52]	; 0x34
   187a4:	str	r4, [sp, #56]	; 0x38
   187a8:	str	r4, [sp, #64]	; 0x40
   187ac:	str	r0, [sp, #68]	; 0x44
   187b0:	str	r3, [sp, #80]	; 0x50
   187b4:	str	r2, [sp, #84]	; 0x54
   187b8:	str	r0, [sp, #88]	; 0x58
   187bc:	b	183fc <lchmod@@Base+0xdb4>
   187c0:	mov	r5, #98	; 0x62
   187c4:	b	18670 <lchmod@@Base+0x1028>
   187c8:	mov	r5, #97	; 0x61
   187cc:	b	18670 <lchmod@@Base+0x1028>
   187d0:	ldr	r3, [sp, #48]	; 0x30
   187d4:	str	r3, [sp, #40]	; 0x28
   187d8:	mov	r3, #116	; 0x74
   187dc:	ldr	r2, [sp, #68]	; 0x44
   187e0:	cmp	r2, #0
   187e4:	bne	189e0 <lchmod@@Base+0x1398>
   187e8:	ldr	r2, [sp, #60]	; 0x3c
   187ec:	cmp	r2, #0
   187f0:	bne	1893c <lchmod@@Base+0x12f4>
   187f4:	ldr	r3, [sp, #44]	; 0x2c
   187f8:	mov	r6, #0
   187fc:	cmp	r3, #0
   18800:	beq	189ac <lchmod@@Base+0x1364>
   18804:	mov	r3, fp
   18808:	ldr	r2, [sp, #184]	; 0xb8
   1880c:	cmp	r2, #0
   18810:	beq	18830 <lchmod@@Base+0x11e8>
   18814:	ubfx	r1, r5, #5, #8
   18818:	mov	r0, r2
   1881c:	and	r2, r5, #31
   18820:	ldr	r1, [r0, r1, lsl #2]
   18824:	lsr	r2, r1, r2
   18828:	tst	r2, #1
   1882c:	bne	18674 <lchmod@@Base+0x102c>
   18830:	ldr	r2, [sp, #40]	; 0x28
   18834:	cmp	r2, #0
   18838:	addeq	r7, r7, #1
   1883c:	bne	18674 <lchmod@@Base+0x102c>
   18840:	cmp	r3, #0
   18844:	beq	186d8 <lchmod@@Base+0x1090>
   18848:	cmp	sl, r4
   1884c:	mov	fp, #0
   18850:	movhi	r3, #39	; 0x27
   18854:	strbhi	r3, [r9, r4]
   18858:	add	r3, r4, #1
   1885c:	add	r4, r4, #2
   18860:	cmp	sl, r3
   18864:	movhi	r2, #39	; 0x27
   18868:	strbhi	r2, [r9, r3]
   1886c:	b	186d8 <lchmod@@Base+0x1090>
   18870:	ldr	r3, [sp, #48]	; 0x30
   18874:	str	r3, [sp, #40]	; 0x28
   18878:	eor	r3, fp, #1
   1887c:	ldr	r2, [sp, #52]	; 0x34
   18880:	ands	r2, r2, r3
   18884:	beq	19544 <lchmod@@Base+0x1efc>
   18888:	cmp	sl, r4
   1888c:	movhi	r3, #39	; 0x27
   18890:	strbhi	r3, [r9, r4]
   18894:	add	r3, r4, #1
   18898:	cmp	sl, r3
   1889c:	movhi	r1, #36	; 0x24
   188a0:	strbhi	r1, [r9, r3]
   188a4:	add	r3, r4, #2
   188a8:	cmp	sl, r3
   188ac:	movhi	r1, #39	; 0x27
   188b0:	strbhi	r1, [r9, r3]
   188b4:	add	r3, r4, #3
   188b8:	cmp	sl, r3
   188bc:	bls	19590 <lchmod@@Base+0x1f48>
   188c0:	mov	r4, r3
   188c4:	mov	r3, #92	; 0x5c
   188c8:	mov	fp, r2
   188cc:	mov	r2, r4
   188d0:	strb	r3, [r9, r4]
   188d4:	ldr	r3, [sp, #176]	; 0xb0
   188d8:	add	r4, r4, #1
   188dc:	cmp	r3, #2
   188e0:	beq	195f8 <lchmod@@Base+0x1fb0>
   188e4:	add	r3, r7, #1
   188e8:	cmp	r3, r8
   188ec:	bcs	18904 <lchmod@@Base+0x12bc>
   188f0:	ldr	r1, [sp, #28]
   188f4:	ldrb	r3, [r1, r3]
   188f8:	sub	r3, r3, #48	; 0x30
   188fc:	cmp	r3, #9
   18900:	bls	19608 <lchmod@@Base+0x1fc0>
   18904:	mov	r3, #0
   18908:	mov	r5, #48	; 0x30
   1890c:	ldr	r6, [sp, #64]	; 0x40
   18910:	cmp	r6, #0
   18914:	beq	18808 <lchmod@@Base+0x11c0>
   18918:	mov	r6, #0
   1891c:	b	18830 <lchmod@@Base+0x11e8>
   18920:	ldr	r3, [sp, #48]	; 0x30
   18924:	str	r3, [sp, #40]	; 0x28
   18928:	ldr	r2, [sp, #60]	; 0x3c
   1892c:	mov	r5, #13
   18930:	mov	r3, #114	; 0x72
   18934:	cmp	r2, #0
   18938:	beq	187f4 <lchmod@@Base+0x11ac>
   1893c:	mov	r5, r3
   18940:	b	18670 <lchmod@@Base+0x1028>
   18944:	ldr	r3, [sp, #48]	; 0x30
   18948:	str	r3, [sp, #40]	; 0x28
   1894c:	mov	r3, #118	; 0x76
   18950:	b	187e8 <lchmod@@Base+0x11a0>
   18954:	ldr	r3, [sp, #48]	; 0x30
   18958:	str	r3, [sp, #40]	; 0x28
   1895c:	mov	r5, #10
   18960:	mov	r3, #110	; 0x6e
   18964:	b	187e8 <lchmod@@Base+0x11a0>
   18968:	ldr	r3, [sp, #48]	; 0x30
   1896c:	cmn	r8, #1
   18970:	str	r3, [sp, #40]	; 0x28
   18974:	beq	18dbc <lchmod@@Base+0x1774>
   18978:	subs	r3, r8, #1
   1897c:	movne	r3, #1
   18980:	cmp	r3, #0
   18984:	bne	18990 <lchmod@@Base+0x1348>
   18988:	cmp	r7, #0
   1898c:	beq	189d4 <lchmod@@Base+0x138c>
   18990:	mov	r6, #0
   18994:	ldr	r3, [sp, #64]	; 0x40
   18998:	cmp	r3, #0
   1899c:	beq	18804 <lchmod@@Base+0x11bc>
   189a0:	ldr	r3, [sp, #44]	; 0x2c
   189a4:	cmp	r3, #0
   189a8:	bne	18804 <lchmod@@Base+0x11bc>
   189ac:	mov	r3, fp
   189b0:	b	18830 <lchmod@@Base+0x11e8>
   189b4:	ldr	r3, [sp, #48]	; 0x30
   189b8:	str	r3, [sp, #40]	; 0x28
   189bc:	b	18988 <lchmod@@Base+0x1340>
   189c0:	ldr	r3, [sp, #48]	; 0x30
   189c4:	str	r3, [sp, #40]	; 0x28
   189c8:	b	18990 <lchmod@@Base+0x1348>
   189cc:	ldr	r6, [sp, #48]	; 0x30
   189d0:	str	r6, [sp, #40]	; 0x28
   189d4:	ldr	r3, [sp, #68]	; 0x44
   189d8:	cmp	r3, #0
   189dc:	beq	18994 <lchmod@@Base+0x134c>
   189e0:	mov	r3, #2
   189e4:	mov	fp, r9
   189e8:	str	r3, [sp, #176]	; 0xb0
   189ec:	ldr	r3, [sp, #60]	; 0x3c
   189f0:	cmp	r3, #0
   189f4:	ldr	r3, [sp, #176]	; 0xb0
   189f8:	movne	r3, #4
   189fc:	str	r3, [sp, #176]	; 0xb0
   18a00:	mov	lr, #0
   18a04:	mov	r0, fp
   18a08:	ldr	r2, [sp, #28]
   18a0c:	ldr	r3, [sp, #180]	; 0xb4
   18a10:	ldr	r1, [sp, #188]	; 0xbc
   18a14:	bic	ip, r3, #2
   18a18:	ldr	r3, [sp, #176]	; 0xb0
   18a1c:	stm	sp, {r3, ip, lr}
   18a20:	mov	r3, r8
   18a24:	ldr	ip, [sp, #192]	; 0xc0
   18a28:	str	r1, [sp, #12]
   18a2c:	mov	r1, sl
   18a30:	str	ip, [sp, #16]
   18a34:	bl	17fc0 <lchmod@@Base+0x978>
   18a38:	mov	r4, r0
   18a3c:	mov	r0, r4
   18a40:	add	sp, sp, #140	; 0x8c
   18a44:	ldrd	r4, [sp]
   18a48:	ldrd	r6, [sp, #8]
   18a4c:	ldrd	r8, [sp, #16]
   18a50:	ldrd	sl, [sp, #24]
   18a54:	add	sp, sp, #32
   18a58:	pop	{pc}		; (ldr pc, [sp], #4)
   18a5c:	ldr	r3, [sp, #48]	; 0x30
   18a60:	str	r3, [sp, #40]	; 0x28
   18a64:	ldr	r3, [sp, #176]	; 0xb0
   18a68:	cmp	r3, #2
   18a6c:	beq	18de4 <lchmod@@Base+0x179c>
   18a70:	ldr	r3, [sp, #88]	; 0x58
   18a74:	cmp	r3, #0
   18a78:	moveq	r5, #92	; 0x5c
   18a7c:	moveq	r3, r5
   18a80:	beq	187e8 <lchmod@@Base+0x11a0>
   18a84:	add	r7, r7, #1
   18a88:	mov	r3, fp
   18a8c:	mov	r6, #0
   18a90:	mov	r5, #92	; 0x5c
   18a94:	b	18840 <lchmod@@Base+0x11f8>
   18a98:	ldr	r3, [sp, #64]	; 0x40
   18a9c:	cmp	r3, #0
   18aa0:	bne	19918 <lchmod@@Base+0x22d0>
   18aa4:	ldr	r2, [sp, #48]	; 0x30
   18aa8:	mov	r3, fp
   18aac:	mov	r6, r2
   18ab0:	str	r2, [sp, #40]	; 0x28
   18ab4:	b	18808 <lchmod@@Base+0x11c0>
   18ab8:	ldr	r3, [sp, #176]	; 0xb0
   18abc:	cmp	r3, #2
   18ac0:	beq	19854 <lchmod@@Base+0x220c>
   18ac4:	cmp	r3, #5
   18ac8:	ldr	r3, [sp, #48]	; 0x30
   18acc:	str	r3, [sp, #40]	; 0x28
   18ad0:	bne	18afc <lchmod@@Base+0x14b4>
   18ad4:	ldr	r3, [sp, #96]	; 0x60
   18ad8:	cmp	r3, #0
   18adc:	beq	19558 <lchmod@@Base+0x1f10>
   18ae0:	add	r3, r7, #2
   18ae4:	cmp	r3, r8
   18ae8:	bcs	18afc <lchmod@@Base+0x14b4>
   18aec:	ldr	r2, [sp, #36]	; 0x24
   18af0:	ldrb	r5, [r2, #1]
   18af4:	cmp	r5, #63	; 0x3f
   18af8:	beq	19640 <lchmod@@Base+0x1ff8>
   18afc:	mov	r6, #0
   18b00:	mov	r5, #63	; 0x3f
   18b04:	b	18994 <lchmod@@Base+0x134c>
   18b08:	ldr	r3, [sp, #176]	; 0xb0
   18b0c:	cmp	r3, #2
   18b10:	ldr	r3, [sp, #48]	; 0x30
   18b14:	beq	192fc <lchmod@@Base+0x1cb4>
   18b18:	mov	r5, #39	; 0x27
   18b1c:	str	r3, [sp, #40]	; 0x28
   18b20:	str	r6, [sp, #80]	; 0x50
   18b24:	b	18994 <lchmod@@Base+0x134c>
   18b28:	ldr	r3, [sp, #180]	; 0xb4
   18b2c:	cmp	r4, #0
   18b30:	and	r3, r3, #1
   18b34:	str	r3, [sp, #92]	; 0x5c
   18b38:	ldr	r3, [sp, #180]	; 0xb4
   18b3c:	and	r3, r3, #4
   18b40:	str	r3, [sp, #96]	; 0x60
   18b44:	bne	19964 <lchmod@@Base+0x231c>
   18b48:	str	r4, [sp, #60]	; 0x3c
   18b4c:	cmp	sl, #0
   18b50:	bne	19948 <lchmod@@Base+0x2300>
   18b54:	mov	r3, #1
   18b58:	movw	r2, #60900	; 0xede4
   18b5c:	movt	r2, #1
   18b60:	mov	r4, r3
   18b64:	mov	r3, #2
   18b68:	mov	r9, sl
   18b6c:	str	r4, [sp, #32]
   18b70:	str	sl, [sp, #44]	; 0x2c
   18b74:	str	sl, [sp, #48]	; 0x30
   18b78:	str	r4, [sp, #52]	; 0x34
   18b7c:	str	r4, [sp, #56]	; 0x38
   18b80:	str	r4, [sp, #64]	; 0x40
   18b84:	str	sl, [sp, #68]	; 0x44
   18b88:	str	r2, [sp, #72]	; 0x48
   18b8c:	str	sl, [sp, #80]	; 0x50
   18b90:	str	sl, [sp, #84]	; 0x54
   18b94:	str	sl, [sp, #88]	; 0x58
   18b98:	str	r3, [sp, #176]	; 0xb0
   18b9c:	b	180e4 <lchmod@@Base+0xa9c>
   18ba0:	ldrb	r5, [r0, r7]
   18ba4:	cmp	r5, #126	; 0x7e
   18ba8:	ldrls	pc, [pc, r5, lsl #2]
   18bac:	b	18f10 <lchmod@@Base+0x18c8>
   18bb0:	ldrdeq	r8, [r1], -ip
   18bb4:	andeq	r8, r1, r0, lsl pc
   18bb8:	andeq	r8, r1, r0, lsl pc
   18bbc:	andeq	r8, r1, r0, lsl pc
   18bc0:	andeq	r8, r1, r0, lsl pc
   18bc4:	andeq	r8, r1, r0, lsl pc
   18bc8:	andeq	r8, r1, r0, lsl pc
   18bcc:	andeq	r8, r1, ip, asr #29
   18bd0:			; <UNDEFINED> instruction: 0x00018ebc
   18bd4:	andeq	r8, r1, r0, asr #28
   18bd8:	andeq	r8, r1, ip, lsr #29
   18bdc:	andeq	r8, r1, r0, lsr #28
   18be0:	andeq	r8, r1, r0, lsl #30
   18be4:	andeq	r8, r1, ip, lsl #29
   18be8:	andeq	r8, r1, r0, lsl pc
   18bec:	andeq	r8, r1, r0, lsl pc
   18bf0:	andeq	r8, r1, r0, lsl pc
   18bf4:	andeq	r8, r1, r0, lsl pc
   18bf8:	andeq	r8, r1, r0, lsl pc
   18bfc:	andeq	r8, r1, r0, lsl pc
   18c00:	andeq	r8, r1, r0, lsl pc
   18c04:	andeq	r8, r1, r0, lsl pc
   18c08:	andeq	r8, r1, r0, lsl pc
   18c0c:	andeq	r8, r1, r0, lsl pc
   18c10:	andeq	r8, r1, r0, lsl pc
   18c14:	andeq	r8, r1, r0, lsl pc
   18c18:	andeq	r8, r1, r0, lsl pc
   18c1c:	andeq	r8, r1, r0, lsl pc
   18c20:	andeq	r8, r1, r0, lsl pc
   18c24:	andeq	r8, r1, r0, lsl pc
   18c28:	andeq	r8, r1, r0, lsl pc
   18c2c:	andeq	r8, r1, r0, lsl pc
   18c30:	andeq	r8, r1, r4, lsr lr
   18c34:	muleq	r1, ip, lr
   18c38:	muleq	r1, ip, lr
   18c3c:	andeq	r8, r1, r4, lsl lr
   18c40:	muleq	r1, ip, lr
   18c44:	andeq	r8, r1, r8, lsl #28
   18c48:	muleq	r1, ip, lr
   18c4c:	andeq	r8, r1, r8, ror lr
   18c50:	muleq	r1, ip, lr
   18c54:	muleq	r1, ip, lr
   18c58:	muleq	r1, ip, lr
   18c5c:	andeq	r8, r1, r8, lsl #28
   18c60:	andeq	r8, r1, r8, lsl #28
   18c64:	andeq	r8, r1, r8, lsl #28
   18c68:	andeq	r8, r1, r8, lsl #28
   18c6c:	andeq	r8, r1, r8, lsl #28
   18c70:	andeq	r8, r1, r8, lsl #28
   18c74:	andeq	r8, r1, r8, lsl #28
   18c78:	andeq	r8, r1, r8, lsl #28
   18c7c:	andeq	r8, r1, r8, lsl #28
   18c80:	andeq	r8, r1, r8, lsl #28
   18c84:	andeq	r8, r1, r8, lsl #28
   18c88:	andeq	r8, r1, r8, lsl #28
   18c8c:	andeq	r8, r1, r8, lsl #28
   18c90:	andeq	r8, r1, r8, lsl #28
   18c94:	andeq	r8, r1, r8, lsl #28
   18c98:	andeq	r8, r1, r8, lsl #28
   18c9c:	muleq	r1, ip, lr
   18ca0:	muleq	r1, ip, lr
   18ca4:	muleq	r1, ip, lr
   18ca8:	muleq	r1, ip, lr
   18cac:	andeq	r8, r1, r0, asr lr
   18cb0:	andeq	r8, r1, r0, lsl pc
   18cb4:	andeq	r8, r1, r8, lsl #28
   18cb8:	andeq	r8, r1, r8, lsl #28
   18cbc:	andeq	r8, r1, r8, lsl #28
   18cc0:	andeq	r8, r1, r8, lsl #28
   18cc4:	andeq	r8, r1, r8, lsl #28
   18cc8:	andeq	r8, r1, r8, lsl #28
   18ccc:	andeq	r8, r1, r8, lsl #28
   18cd0:	andeq	r8, r1, r8, lsl #28
   18cd4:	andeq	r8, r1, r8, lsl #28
   18cd8:	andeq	r8, r1, r8, lsl #28
   18cdc:	andeq	r8, r1, r8, lsl #28
   18ce0:	andeq	r8, r1, r8, lsl #28
   18ce4:	andeq	r8, r1, r8, lsl #28
   18ce8:	andeq	r8, r1, r8, lsl #28
   18cec:	andeq	r8, r1, r8, lsl #28
   18cf0:	andeq	r8, r1, r8, lsl #28
   18cf4:	andeq	r8, r1, r8, lsl #28
   18cf8:	andeq	r8, r1, r8, lsl #28
   18cfc:	andeq	r8, r1, r8, lsl #28
   18d00:	andeq	r8, r1, r8, lsl #28
   18d04:	andeq	r8, r1, r8, lsl #28
   18d08:	andeq	r8, r1, r8, lsl #28
   18d0c:	andeq	r8, r1, r8, lsl #28
   18d10:	andeq	r8, r1, r8, lsl #28
   18d14:	andeq	r8, r1, r8, lsl #28
   18d18:	andeq	r8, r1, r8, lsl #28
   18d1c:	muleq	r1, ip, lr
   18d20:	ldrdeq	r8, [r1], -r0
   18d24:	andeq	r8, r1, r8, lsl #28
   18d28:	muleq	r1, ip, lr
   18d2c:	andeq	r8, r1, r8, lsl #28
   18d30:	muleq	r1, ip, lr
   18d34:	andeq	r8, r1, r8, lsl #28
   18d38:	andeq	r8, r1, r8, lsl #28
   18d3c:	andeq	r8, r1, r8, lsl #28
   18d40:	andeq	r8, r1, r8, lsl #28
   18d44:	andeq	r8, r1, r8, lsl #28
   18d48:	andeq	r8, r1, r8, lsl #28
   18d4c:	andeq	r8, r1, r8, lsl #28
   18d50:	andeq	r8, r1, r8, lsl #28
   18d54:	andeq	r8, r1, r8, lsl #28
   18d58:	andeq	r8, r1, r8, lsl #28
   18d5c:	andeq	r8, r1, r8, lsl #28
   18d60:	andeq	r8, r1, r8, lsl #28
   18d64:	andeq	r8, r1, r8, lsl #28
   18d68:	andeq	r8, r1, r8, lsl #28
   18d6c:	andeq	r8, r1, r8, lsl #28
   18d70:	andeq	r8, r1, r8, lsl #28
   18d74:	andeq	r8, r1, r8, lsl #28
   18d78:	andeq	r8, r1, r8, lsl #28
   18d7c:	andeq	r8, r1, r8, lsl #28
   18d80:	andeq	r8, r1, r8, lsl #28
   18d84:	andeq	r8, r1, r8, lsl #28
   18d88:	andeq	r8, r1, r8, lsl #28
   18d8c:	andeq	r8, r1, r8, lsl #28
   18d90:	andeq	r8, r1, r8, lsl #28
   18d94:	andeq	r8, r1, r8, lsl #28
   18d98:	andeq	r8, r1, r8, lsl #28
   18d9c:	andeq	r8, r1, ip, lsr #27
   18da0:	muleq	r1, ip, lr
   18da4:	andeq	r8, r1, ip, lsr #27
   18da8:	andeq	r8, r1, r4, lsl lr
   18dac:	mov	r3, #0
   18db0:	cmn	r8, #1
   18db4:	str	r3, [sp, #40]	; 0x28
   18db8:	bne	18978 <lchmod@@Base+0x1330>
   18dbc:	ldr	r3, [sp, #28]
   18dc0:	ldrb	r3, [r3, #1]
   18dc4:	adds	r3, r3, #0
   18dc8:	movne	r3, #1
   18dcc:	b	18980 <lchmod@@Base+0x1338>
   18dd0:	mov	r3, #0
   18dd4:	str	r3, [sp, #40]	; 0x28
   18dd8:	ldr	r3, [sp, #176]	; 0xb0
   18ddc:	cmp	r3, #2
   18de0:	bne	18a70 <lchmod@@Base+0x1428>
   18de4:	ldr	r3, [sp, #44]	; 0x2c
   18de8:	cmp	r3, #0
   18dec:	bne	1972c <lchmod@@Base+0x20e4>
   18df0:	mov	r6, r3
   18df4:	add	r7, r7, #1
   18df8:	mov	r3, fp
   18dfc:	mov	r5, #92	; 0x5c
   18e00:	b	18840 <lchmod@@Base+0x11f8>
   18e04:	ldr	r6, [sp, #48]	; 0x30
   18e08:	mov	r3, #0
   18e0c:	str	r3, [sp, #40]	; 0x28
   18e10:	b	18994 <lchmod@@Base+0x134c>
   18e14:	mov	r3, #0
   18e18:	str	r3, [sp, #40]	; 0x28
   18e1c:	b	18988 <lchmod@@Base+0x1340>
   18e20:	mov	r3, #0
   18e24:	str	r3, [sp, #40]	; 0x28
   18e28:	mov	r3, #118	; 0x76
   18e2c:	b	187e8 <lchmod@@Base+0x11a0>
   18e30:	ldr	r6, [sp, #48]	; 0x30
   18e34:	mov	r3, #0
   18e38:	str	r3, [sp, #40]	; 0x28
   18e3c:	b	189d4 <lchmod@@Base+0x138c>
   18e40:	mov	r3, #0
   18e44:	str	r3, [sp, #40]	; 0x28
   18e48:	mov	r3, #116	; 0x74
   18e4c:	b	187dc <lchmod@@Base+0x1194>
   18e50:	ldr	r3, [sp, #176]	; 0xb0
   18e54:	cmp	r3, #2
   18e58:	beq	19368 <lchmod@@Base+0x1d20>
   18e5c:	cmp	r3, #5
   18e60:	mov	r3, #0
   18e64:	str	r3, [sp, #40]	; 0x28
   18e68:	beq	18ad4 <lchmod@@Base+0x148c>
   18e6c:	mov	r6, #0
   18e70:	mov	r5, #63	; 0x3f
   18e74:	b	18994 <lchmod@@Base+0x134c>
   18e78:	ldr	r3, [sp, #176]	; 0xb0
   18e7c:	cmp	r3, #2
   18e80:	beq	192f0 <lchmod@@Base+0x1ca8>
   18e84:	mov	r3, #0
   18e88:	b	18b18 <lchmod@@Base+0x14d0>
   18e8c:	mov	r3, #0
   18e90:	str	r3, [sp, #40]	; 0x28
   18e94:	mov	r3, #114	; 0x72
   18e98:	b	187dc <lchmod@@Base+0x1194>
   18e9c:	mov	r3, #0
   18ea0:	mov	r6, r3
   18ea4:	str	r3, [sp, #40]	; 0x28
   18ea8:	b	189d4 <lchmod@@Base+0x138c>
   18eac:	mov	r3, #0
   18eb0:	str	r3, [sp, #40]	; 0x28
   18eb4:	mov	r3, #110	; 0x6e
   18eb8:	b	187dc <lchmod@@Base+0x1194>
   18ebc:	mov	r3, #0
   18ec0:	str	r3, [sp, #40]	; 0x28
   18ec4:	mov	r3, #98	; 0x62
   18ec8:	b	187e8 <lchmod@@Base+0x11a0>
   18ecc:	mov	r3, #0
   18ed0:	str	r3, [sp, #40]	; 0x28
   18ed4:	mov	r3, #97	; 0x61
   18ed8:	b	187e8 <lchmod@@Base+0x11a0>
   18edc:	ldr	r3, [sp, #60]	; 0x3c
   18ee0:	cmp	r3, #0
   18ee4:	bne	192d4 <lchmod@@Base+0x1c8c>
   18ee8:	ldr	r3, [sp, #92]	; 0x5c
   18eec:	cmp	r3, #0
   18ef0:	addne	r7, r7, #1
   18ef4:	bne	180f4 <lchmod@@Base+0xaac>
   18ef8:	str	r3, [sp, #40]	; 0x28
   18efc:	b	187f4 <lchmod@@Base+0x11ac>
   18f00:	mov	r3, #0
   18f04:	str	r3, [sp, #40]	; 0x28
   18f08:	mov	r3, #102	; 0x66
   18f0c:	b	187e8 <lchmod@@Base+0x11a0>
   18f10:	mov	r3, #0
   18f14:	str	r3, [sp, #40]	; 0x28
   18f18:	ldr	r3, [sp, #76]	; 0x4c
   18f1c:	cmp	r3, #1
   18f20:	bne	19388 <lchmod@@Base+0x1d40>
   18f24:	bl	116b0 <__ctype_b_loc@plt>
   18f28:	ldr	r2, [r0]
   18f2c:	sxth	r3, r5
   18f30:	lsl	r3, r3, #1
   18f34:	ldr	r1, [sp, #76]	; 0x4c
   18f38:	ldrh	r3, [r2, r3]
   18f3c:	mov	r0, r1
   18f40:	and	r3, r3, #16384	; 0x4000
   18f44:	cmp	r3, #0
   18f48:	ldr	r3, [sp, #60]	; 0x3c
   18f4c:	movne	r6, #1
   18f50:	moveq	r6, #0
   18f54:	movne	r2, #0
   18f58:	andeq	r2, r3, #1
   18f5c:	cmp	r2, #0
   18f60:	beq	18994 <lchmod@@Base+0x134c>
   18f64:	ldr	r2, [sp, #60]	; 0x3c
   18f68:	mov	r6, #0
   18f6c:	add	r1, r0, r7
   18f70:	mov	ip, #39	; 0x27
   18f74:	str	r6, [sp, #100]	; 0x64
   18f78:	mov	r0, #0
   18f7c:	ldr	lr, [sp, #36]	; 0x24
   18f80:	str	r8, [sp, #36]	; 0x24
   18f84:	ldr	r6, [sp, #40]	; 0x28
   18f88:	ldr	r8, [sp, #44]	; 0x2c
   18f8c:	b	1903c <lchmod@@Base+0x19f4>
   18f90:	cmp	r8, #0
   18f94:	bne	19570 <lchmod@@Base+0x1f28>
   18f98:	ldr	r0, [sp, #52]	; 0x34
   18f9c:	eor	r3, fp, #1
   18fa0:	ands	r3, r0, r3
   18fa4:	beq	18fd4 <lchmod@@Base+0x198c>
   18fa8:	cmp	sl, r4
   18fac:	add	r0, r4, #1
   18fb0:	strbhi	ip, [r9, r4]
   18fb4:	cmp	sl, r0
   18fb8:	movhi	fp, #36	; 0x24
   18fbc:	strbhi	fp, [r9, r0]
   18fc0:	add	r0, r4, #2
   18fc4:	mov	fp, r3
   18fc8:	cmp	sl, r0
   18fcc:	add	r4, r4, #3
   18fd0:	strbhi	ip, [r9, r0]
   18fd4:	cmp	sl, r4
   18fd8:	movhi	r3, #92	; 0x5c
   18fdc:	strbhi	r3, [r9, r4]
   18fe0:	add	r3, r4, #1
   18fe4:	cmp	sl, r3
   18fe8:	bls	18ff8 <lchmod@@Base+0x19b0>
   18fec:	lsr	r0, r5, #6
   18ff0:	add	r0, r0, #48	; 0x30
   18ff4:	strb	r0, [r9, r3]
   18ff8:	add	r3, r4, #2
   18ffc:	cmp	sl, r3
   19000:	bls	19010 <lchmod@@Base+0x19c8>
   19004:	ubfx	r0, r5, #3, #3
   19008:	add	r0, r0, #48	; 0x30
   1900c:	strb	r0, [r9, r3]
   19010:	add	r7, r7, #1
   19014:	and	r5, r5, #7
   19018:	cmp	r1, r7
   1901c:	add	r5, r5, #48	; 0x30
   19020:	add	r4, r4, #3
   19024:	bls	19584 <lchmod@@Base+0x1f3c>
   19028:	mov	r0, r2
   1902c:	cmp	sl, r4
   19030:	strbhi	r5, [r9, r4]
   19034:	add	r4, r4, #1
   19038:	ldrb	r5, [lr, #1]!
   1903c:	cmp	r2, #0
   19040:	bne	18f90 <lchmod@@Base+0x1948>
   19044:	eor	r3, r0, #1
   19048:	cmp	r6, #0
   1904c:	and	r3, r3, fp
   19050:	uxtb	r3, r3
   19054:	beq	19068 <lchmod@@Base+0x1a20>
   19058:	cmp	sl, r4
   1905c:	movhi	r6, #92	; 0x5c
   19060:	strbhi	r6, [r9, r4]
   19064:	add	r4, r4, #1
   19068:	add	r7, r7, #1
   1906c:	cmp	r7, r1
   19070:	bcs	19564 <lchmod@@Base+0x1f1c>
   19074:	cmp	r3, #0
   19078:	beq	195a8 <lchmod@@Base+0x1f60>
   1907c:	cmp	sl, r4
   19080:	add	r3, r4, #1
   19084:	mov	r6, #0
   19088:	strbhi	ip, [r9, r4]
   1908c:	cmp	sl, r3
   19090:	add	r4, r4, #2
   19094:	mov	fp, r6
   19098:	strbhi	ip, [r9, r3]
   1909c:	b	1902c <lchmod@@Base+0x19e4>
   190a0:	ldr	r3, [sp, #36]	; 0x24
   190a4:	ldrb	r5, [r3]
   190a8:	cmp	r5, #126	; 0x7e
   190ac:	ldrls	pc, [pc, r5, lsl #2]
   190b0:	b	18f10 <lchmod@@Base+0x18c8>
   190b4:	ldrdeq	r9, [r1], -r4
   190b8:	andeq	r8, r1, r0, lsl pc
   190bc:	andeq	r8, r1, r0, lsl pc
   190c0:	andeq	r8, r1, r0, lsl pc
   190c4:	andeq	r8, r1, r0, lsl pc
   190c8:	andeq	r8, r1, r0, lsl pc
   190cc:	andeq	r8, r1, r0, lsl pc
   190d0:	andeq	r8, r1, r8, asr #15
   190d4:	andeq	r8, r1, r0, asr #15
   190d8:	andeq	r8, r1, r0, asr #28
   190dc:	andeq	r9, r1, r8, asr #5
   190e0:	andeq	r8, r1, r0, lsr #28
   190e4:	andeq	r8, r1, ip, ror #12
   190e8:			; <UNDEFINED> instruction: 0x000192bc
   190ec:	andeq	r8, r1, r0, lsl pc
   190f0:	andeq	r8, r1, r0, lsl pc
   190f4:	andeq	r8, r1, r0, lsl pc
   190f8:	andeq	r8, r1, r0, lsl pc
   190fc:	andeq	r8, r1, r0, lsl pc
   19100:	andeq	r8, r1, r0, lsl pc
   19104:	andeq	r8, r1, r0, lsl pc
   19108:	andeq	r8, r1, r0, lsl pc
   1910c:	andeq	r8, r1, r0, lsl pc
   19110:	andeq	r8, r1, r0, lsl pc
   19114:	andeq	r8, r1, r0, lsl pc
   19118:	andeq	r8, r1, r0, lsl pc
   1911c:	andeq	r8, r1, r0, lsl pc
   19120:	andeq	r8, r1, r0, lsl pc
   19124:	andeq	r8, r1, r0, lsl pc
   19128:	andeq	r8, r1, r0, lsl pc
   1912c:	andeq	r8, r1, r0, lsl pc
   19130:	andeq	r8, r1, r0, lsl pc
   19134:	andeq	r8, r1, r0, lsr lr
   19138:			; <UNDEFINED> instruction: 0x000192b0
   1913c:			; <UNDEFINED> instruction: 0x000192b0
   19140:	andeq	r8, r1, r4, lsl lr
   19144:			; <UNDEFINED> instruction: 0x000192b0
   19148:	andeq	r8, r1, r4, lsl #28
   1914c:			; <UNDEFINED> instruction: 0x000192b0
   19150:	andeq	r8, r1, r8, ror lr
   19154:			; <UNDEFINED> instruction: 0x000192b0
   19158:			; <UNDEFINED> instruction: 0x000192b0
   1915c:			; <UNDEFINED> instruction: 0x000192b0
   19160:	andeq	r8, r1, r4, lsl #28
   19164:	andeq	r8, r1, r4, lsl #28
   19168:	andeq	r8, r1, r4, lsl #28
   1916c:	andeq	r8, r1, r4, lsl #28
   19170:	andeq	r8, r1, r4, lsl #28
   19174:	andeq	r8, r1, r4, lsl #28
   19178:	andeq	r8, r1, r4, lsl #28
   1917c:	andeq	r8, r1, r4, lsl #28
   19180:	andeq	r8, r1, r4, lsl #28
   19184:	andeq	r8, r1, r4, lsl #28
   19188:	andeq	r8, r1, r4, lsl #28
   1918c:	andeq	r8, r1, r4, lsl #28
   19190:	andeq	r8, r1, r4, lsl #28
   19194:	andeq	r8, r1, r4, lsl #28
   19198:	andeq	r8, r1, r4, lsl #28
   1919c:	andeq	r8, r1, r4, lsl #28
   191a0:			; <UNDEFINED> instruction: 0x000192b0
   191a4:			; <UNDEFINED> instruction: 0x000192b0
   191a8:			; <UNDEFINED> instruction: 0x000192b0
   191ac:			; <UNDEFINED> instruction: 0x000192b0
   191b0:	andeq	r8, r1, r0, asr lr
   191b4:	andeq	r8, r1, r0, lsl pc
   191b8:	andeq	r8, r1, r4, lsl #28
   191bc:	andeq	r8, r1, r4, lsl #28
   191c0:	andeq	r8, r1, r4, lsl #28
   191c4:	andeq	r8, r1, r4, lsl #28
   191c8:	andeq	r8, r1, r4, lsl #28
   191cc:	andeq	r8, r1, r4, lsl #28
   191d0:	andeq	r8, r1, r4, lsl #28
   191d4:	andeq	r8, r1, r4, lsl #28
   191d8:	andeq	r8, r1, r4, lsl #28
   191dc:	andeq	r8, r1, r4, lsl #28
   191e0:	andeq	r8, r1, r4, lsl #28
   191e4:	andeq	r8, r1, r4, lsl #28
   191e8:	andeq	r8, r1, r4, lsl #28
   191ec:	andeq	r8, r1, r4, lsl #28
   191f0:	andeq	r8, r1, r4, lsl #28
   191f4:	andeq	r8, r1, r4, lsl #28
   191f8:	andeq	r8, r1, r4, lsl #28
   191fc:	andeq	r8, r1, r4, lsl #28
   19200:	andeq	r8, r1, r4, lsl #28
   19204:	andeq	r8, r1, r4, lsl #28
   19208:	andeq	r8, r1, r4, lsl #28
   1920c:	andeq	r8, r1, r4, lsl #28
   19210:	andeq	r8, r1, r4, lsl #28
   19214:	andeq	r8, r1, r4, lsl #28
   19218:	andeq	r8, r1, r4, lsl #28
   1921c:	andeq	r8, r1, r4, lsl #28
   19220:			; <UNDEFINED> instruction: 0x000192b0
   19224:	ldrdeq	r8, [r1], -r0
   19228:	andeq	r8, r1, r4, lsl #28
   1922c:			; <UNDEFINED> instruction: 0x000192b0
   19230:	andeq	r8, r1, r4, lsl #28
   19234:			; <UNDEFINED> instruction: 0x000192b0
   19238:	andeq	r8, r1, r4, lsl #28
   1923c:	andeq	r8, r1, r4, lsl #28
   19240:	andeq	r8, r1, r4, lsl #28
   19244:	andeq	r8, r1, r4, lsl #28
   19248:	andeq	r8, r1, r4, lsl #28
   1924c:	andeq	r8, r1, r4, lsl #28
   19250:	andeq	r8, r1, r4, lsl #28
   19254:	andeq	r8, r1, r4, lsl #28
   19258:	andeq	r8, r1, r4, lsl #28
   1925c:	andeq	r8, r1, r4, lsl #28
   19260:	andeq	r8, r1, r4, lsl #28
   19264:	andeq	r8, r1, r4, lsl #28
   19268:	andeq	r8, r1, r4, lsl #28
   1926c:	andeq	r8, r1, r4, lsl #28
   19270:	andeq	r8, r1, r4, lsl #28
   19274:	andeq	r8, r1, r4, lsl #28
   19278:	andeq	r8, r1, r4, lsl #28
   1927c:	andeq	r8, r1, r4, lsl #28
   19280:	andeq	r8, r1, r4, lsl #28
   19284:	andeq	r8, r1, r4, lsl #28
   19288:	andeq	r8, r1, r4, lsl #28
   1928c:	andeq	r8, r1, r4, lsl #28
   19290:	andeq	r8, r1, r4, lsl #28
   19294:	andeq	r8, r1, r4, lsl #28
   19298:	andeq	r8, r1, r4, lsl #28
   1929c:	andeq	r8, r1, r4, lsl #28
   192a0:	andeq	r8, r1, ip, lsr #27
   192a4:			; <UNDEFINED> instruction: 0x000192b0
   192a8:	andeq	r8, r1, ip, lsr #27
   192ac:	andeq	r8, r1, r4, lsl lr
   192b0:	mov	r3, #0
   192b4:	str	r3, [sp, #40]	; 0x28
   192b8:	b	18990 <lchmod@@Base+0x1348>
   192bc:	mov	r3, #0
   192c0:	str	r3, [sp, #40]	; 0x28
   192c4:	b	18928 <lchmod@@Base+0x12e0>
   192c8:	mov	r3, #0
   192cc:	str	r3, [sp, #40]	; 0x28
   192d0:	b	1895c <lchmod@@Base+0x1314>
   192d4:	ldr	r3, [sp, #44]	; 0x2c
   192d8:	cmp	r3, #0
   192dc:	beq	18874 <lchmod@@Base+0x122c>
   192e0:	ldr	r3, [sp, #52]	; 0x34
   192e4:	mov	fp, r9
   192e8:	str	r3, [sp, #60]	; 0x3c
   192ec:	b	189ec <lchmod@@Base+0x13a4>
   192f0:	ldr	r3, [sp, #44]	; 0x2c
   192f4:	cmp	r3, #0
   192f8:	bne	1972c <lchmod@@Base+0x20e4>
   192fc:	str	r3, [sp, #40]	; 0x28
   19300:	cmp	sl, #0
   19304:	ldr	r3, [sp, #84]	; 0x54
   19308:	clz	r3, r3
   1930c:	lsr	r3, r3, #5
   19310:	moveq	r3, #0
   19314:	cmp	r3, #0
   19318:	strne	sl, [sp, #84]	; 0x54
   1931c:	movne	sl, #0
   19320:	bne	19350 <lchmod@@Base+0x1d08>
   19324:	cmp	sl, r4
   19328:	movhi	r3, #39	; 0x27
   1932c:	strbhi	r3, [r9, r4]
   19330:	add	r3, r4, #1
   19334:	cmp	sl, r3
   19338:	movhi	r2, #92	; 0x5c
   1933c:	strbhi	r2, [r9, r3]
   19340:	add	r3, r4, #2
   19344:	cmp	sl, r3
   19348:	movhi	r2, #39	; 0x27
   1934c:	strbhi	r2, [r9, r3]
   19350:	mov	r3, #0
   19354:	add	r4, r4, #3
   19358:	str	r6, [sp, #80]	; 0x50
   1935c:	mov	fp, r3
   19360:	mov	r5, #39	; 0x27
   19364:	b	18830 <lchmod@@Base+0x11e8>
   19368:	ldr	r3, [sp, #44]	; 0x2c
   1936c:	cmp	r3, #0
   19370:	bne	1972c <lchmod@@Base+0x20e4>
   19374:	mov	r6, #0
   19378:	mov	r5, #63	; 0x3f
   1937c:	str	r3, [sp, #40]	; 0x28
   19380:	mov	r3, fp
   19384:	b	18830 <lchmod@@Base+0x11e8>
   19388:	mov	r2, #0
   1938c:	mov	r3, #0
   19390:	cmn	r8, #1
   19394:	strd	r2, [sp, #128]	; 0x80
   19398:	bne	193a8 <lchmod@@Base+0x1d60>
   1939c:	ldr	r0, [sp, #28]
   193a0:	bl	116e0 <strlen@plt>
   193a4:	mov	r8, r0
   193a8:	str	r9, [sp, #100]	; 0x64
   193ac:	mov	r3, #0
   193b0:	strd	sl, [sp, #104]	; 0x68
   193b4:	ldr	sl, [sp, #28]
   193b8:	str	r5, [sp, #112]	; 0x70
   193bc:	mov	r5, r3
   193c0:	ldr	r9, [sp, #68]	; 0x44
   193c4:	str	r4, [sp, #116]	; 0x74
   193c8:	add	r4, r7, r5
   193cc:	add	r3, sp, #128	; 0x80
   193d0:	add	fp, sl, r4
   193d4:	sub	r2, r8, r4
   193d8:	mov	r1, fp
   193dc:	add	r0, sp, #124	; 0x7c
   193e0:	bl	1dfa0 <lchmod@@Base+0x6958>
   193e4:	subs	r1, r0, #0
   193e8:	beq	19428 <lchmod@@Base+0x1de0>
   193ec:	cmn	r1, #1
   193f0:	beq	19780 <lchmod@@Base+0x2138>
   193f4:	cmn	r1, #2
   193f8:	beq	197a0 <lchmod@@Base+0x2158>
   193fc:	cmp	r9, #0
   19400:	bne	19458 <lchmod@@Base+0x1e10>
   19404:	ldr	r0, [sp, #124]	; 0x7c
   19408:	add	r5, r5, r1
   1940c:	bl	115cc <iswprint@plt>
   19410:	cmp	r0, #0
   19414:	add	r0, sp, #128	; 0x80
   19418:	moveq	r6, #0
   1941c:	bl	11548 <mbsinit@plt>
   19420:	cmp	r0, #0
   19424:	beq	193c8 <lchmod@@Base+0x1d80>
   19428:	ldr	r3, [sp, #60]	; 0x3c
   1942c:	add	r9, sp, #100	; 0x64
   19430:	mov	r0, r5
   19434:	ldm	r9, {r9, sl, fp}
   19438:	eor	r2, r6, #1
   1943c:	ldr	r5, [sp, #112]	; 0x70
   19440:	and	r2, r2, r3
   19444:	uxtb	r2, r2
   19448:	ldr	r4, [sp, #116]	; 0x74
   1944c:	cmp	r0, #1
   19450:	bhi	18f6c <lchmod@@Base+0x1924>
   19454:	b	18f5c <lchmod@@Base+0x1914>
   19458:	cmp	r1, #1
   1945c:	beq	19404 <lchmod@@Base+0x1dbc>
   19460:	add	r2, r4, #1
   19464:	add	r3, sl, r1
   19468:	add	r2, sl, r2
   1946c:	add	r4, r3, r4
   19470:	ldrb	r3, [r2], #1
   19474:	sub	r3, r3, #91	; 0x5b
   19478:	cmp	r3, #33	; 0x21
   1947c:	ldrls	pc, [pc, r3, lsl #2]
   19480:	b	1950c <lchmod@@Base+0x1ec4>
   19484:	andeq	r9, r1, r8, lsl r5
   19488:	andeq	r9, r1, r8, lsl r5
   1948c:	andeq	r9, r1, ip, lsl #10
   19490:	andeq	r9, r1, r8, lsl r5
   19494:	andeq	r9, r1, ip, lsl #10
   19498:	andeq	r9, r1, r8, lsl r5
   1949c:	andeq	r9, r1, ip, lsl #10
   194a0:	andeq	r9, r1, ip, lsl #10
   194a4:	andeq	r9, r1, ip, lsl #10
   194a8:	andeq	r9, r1, ip, lsl #10
   194ac:	andeq	r9, r1, ip, lsl #10
   194b0:	andeq	r9, r1, ip, lsl #10
   194b4:	andeq	r9, r1, ip, lsl #10
   194b8:	andeq	r9, r1, ip, lsl #10
   194bc:	andeq	r9, r1, ip, lsl #10
   194c0:	andeq	r9, r1, ip, lsl #10
   194c4:	andeq	r9, r1, ip, lsl #10
   194c8:	andeq	r9, r1, ip, lsl #10
   194cc:	andeq	r9, r1, ip, lsl #10
   194d0:	andeq	r9, r1, ip, lsl #10
   194d4:	andeq	r9, r1, ip, lsl #10
   194d8:	andeq	r9, r1, ip, lsl #10
   194dc:	andeq	r9, r1, ip, lsl #10
   194e0:	andeq	r9, r1, ip, lsl #10
   194e4:	andeq	r9, r1, ip, lsl #10
   194e8:	andeq	r9, r1, ip, lsl #10
   194ec:	andeq	r9, r1, ip, lsl #10
   194f0:	andeq	r9, r1, ip, lsl #10
   194f4:	andeq	r9, r1, ip, lsl #10
   194f8:	andeq	r9, r1, ip, lsl #10
   194fc:	andeq	r9, r1, ip, lsl #10
   19500:	andeq	r9, r1, ip, lsl #10
   19504:	andeq	r9, r1, ip, lsl #10
   19508:	andeq	r9, r1, r8, lsl r5
   1950c:	cmp	r4, r2
   19510:	bne	19470 <lchmod@@Base+0x1e28>
   19514:	b	19404 <lchmod@@Base+0x1dbc>
   19518:	mov	r3, #2
   1951c:	ldr	fp, [sp, #100]	; 0x64
   19520:	str	r3, [sp, #176]	; 0xb0
   19524:	ldr	sl, [sp, #104]	; 0x68
   19528:	b	189ec <lchmod@@Base+0x13a4>
   1952c:	ldr	r2, [sp, #52]	; 0x34
   19530:	mov	fp, r9
   19534:	ldr	r3, [sp, #60]	; 0x3c
   19538:	and	r3, r3, r2
   1953c:	str	r3, [sp, #60]	; 0x3c
   19540:	b	189ec <lchmod@@Base+0x13a4>
   19544:	cmp	sl, r4
   19548:	movhi	r2, fp
   1954c:	bhi	188c4 <lchmod@@Base+0x127c>
   19550:	mov	r2, r4
   19554:	b	188d4 <lchmod@@Base+0x128c>
   19558:	mov	r6, r3
   1955c:	mov	r5, #63	; 0x3f
   19560:	b	18994 <lchmod@@Base+0x134c>
   19564:	ldr	r8, [sp, #36]	; 0x24
   19568:	ldr	r6, [sp, #100]	; 0x64
   1956c:	b	18840 <lchmod@@Base+0x11f8>
   19570:	mov	fp, r9
   19574:	ldr	r8, [sp, #36]	; 0x24
   19578:	ldr	r3, [sp, #52]	; 0x34
   1957c:	str	r3, [sp, #60]	; 0x3c
   19580:	b	189ec <lchmod@@Base+0x13a4>
   19584:	ldr	r8, [sp, #36]	; 0x24
   19588:	ldr	r6, [sp, #100]	; 0x64
   1958c:	b	186d8 <lchmod@@Base+0x1090>
   19590:	mov	r3, #0
   19594:	add	r4, r4, #4
   19598:	mov	fp, r2
   1959c:	mov	r6, r3
   195a0:	mov	r5, #48	; 0x30
   195a4:	b	18830 <lchmod@@Base+0x11e8>
   195a8:	mov	r6, r3
   195ac:	b	1902c <lchmod@@Base+0x19e4>
   195b0:	mov	r3, #1
   195b4:	movw	r2, #60880	; 0xedd0
   195b8:	movt	r2, #1
   195bc:	mov	r4, r3
   195c0:	mov	r9, sl
   195c4:	str	r3, [sp, #32]
   195c8:	str	sl, [sp, #44]	; 0x2c
   195cc:	str	r3, [sp, #48]	; 0x30
   195d0:	str	sl, [sp, #52]	; 0x34
   195d4:	str	r3, [sp, #56]	; 0x38
   195d8:	str	r3, [sp, #60]	; 0x3c
   195dc:	str	sl, [sp, #64]	; 0x40
   195e0:	str	sl, [sp, #68]	; 0x44
   195e4:	str	r2, [sp, #72]	; 0x48
   195e8:	str	sl, [sp, #80]	; 0x50
   195ec:	str	sl, [sp, #84]	; 0x54
   195f0:	str	sl, [sp, #88]	; 0x58
   195f4:	b	180e4 <lchmod@@Base+0xa9c>
   195f8:	mov	r3, #0
   195fc:	mov	r5, #48	; 0x30
   19600:	mov	r6, r3
   19604:	b	18830 <lchmod@@Base+0x11e8>
   19608:	cmp	sl, r4
   1960c:	mov	r5, #48	; 0x30
   19610:	movhi	r3, #48	; 0x30
   19614:	strbhi	r3, [r9, r4]
   19618:	add	r3, r2, #2
   1961c:	add	r4, r2, #3
   19620:	cmp	sl, r3
   19624:	movhi	r1, #48	; 0x30
   19628:	strbhi	r1, [r9, r3]
   1962c:	mov	r3, #0
   19630:	b	1890c <lchmod@@Base+0x12c4>
   19634:	ldr	r3, [sp, #48]	; 0x30
   19638:	str	r3, [sp, #40]	; 0x28
   1963c:	b	18f18 <lchmod@@Base+0x18d0>
   19640:	ldr	r2, [sp, #28]
   19644:	ldrb	r2, [r2, r3]
   19648:	sub	r1, r2, #33	; 0x21
   1964c:	cmp	r1, #29
   19650:	ldrls	pc, [pc, r1, lsl #2]
   19654:	b	18990 <lchmod@@Base+0x1348>
   19658:	ldrdeq	r9, [r1], -r0
   1965c:	muleq	r1, r0, r9
   19660:	muleq	r1, r0, r9
   19664:	muleq	r1, r0, r9
   19668:	muleq	r1, r0, r9
   1966c:	muleq	r1, r0, r9
   19670:	ldrdeq	r9, [r1], -r0
   19674:	ldrdeq	r9, [r1], -r0
   19678:	ldrdeq	r9, [r1], -r0
   1967c:	muleq	r1, r0, r9
   19680:	muleq	r1, r0, r9
   19684:	muleq	r1, r0, r9
   19688:	ldrdeq	r9, [r1], -r0
   1968c:	muleq	r1, r0, r9
   19690:	ldrdeq	r9, [r1], -r0
   19694:	muleq	r1, r0, r9
   19698:	muleq	r1, r0, r9
   1969c:	muleq	r1, r0, r9
   196a0:	muleq	r1, r0, r9
   196a4:	muleq	r1, r0, r9
   196a8:	muleq	r1, r0, r9
   196ac:	muleq	r1, r0, r9
   196b0:	muleq	r1, r0, r9
   196b4:	muleq	r1, r0, r9
   196b8:	muleq	r1, r0, r9
   196bc:	muleq	r1, r0, r9
   196c0:	muleq	r1, r0, r9
   196c4:	ldrdeq	r9, [r1], -r0
   196c8:	ldrdeq	r9, [r1], -r0
   196cc:	ldrdeq	r9, [r1], -r0
   196d0:	ldr	r1, [sp, #44]	; 0x2c
   196d4:	cmp	r1, #0
   196d8:	bne	19938 <lchmod@@Base+0x22f0>
   196dc:	cmp	sl, r4
   196e0:	mov	r7, r3
   196e4:	movhi	r1, #63	; 0x3f
   196e8:	mov	r5, r2
   196ec:	mov	r3, fp
   196f0:	strbhi	r1, [r9, r4]
   196f4:	add	r1, r4, #1
   196f8:	cmp	sl, r1
   196fc:	movhi	r0, #34	; 0x22
   19700:	strbhi	r0, [r9, r1]
   19704:	add	r1, r4, #2
   19708:	cmp	sl, r1
   1970c:	movhi	r0, #34	; 0x22
   19710:	strbhi	r0, [r9, r1]
   19714:	add	r1, r4, #3
   19718:	add	r4, r4, #4
   1971c:	cmp	sl, r1
   19720:	movhi	r0, #63	; 0x3f
   19724:	strbhi	r0, [r9, r1]
   19728:	b	1890c <lchmod@@Base+0x12c4>
   1972c:	mov	fp, r9
   19730:	b	189ec <lchmod@@Base+0x13a4>
   19734:	ldr	r3, [sp, #188]	; 0xbc
   19738:	ldrb	r3, [r3]
   1973c:	cmp	r3, #0
   19740:	beq	1807c <lchmod@@Base+0xa34>
   19744:	ldr	r2, [sp, #188]	; 0xbc
   19748:	cmp	sl, r4
   1974c:	bls	1976c <lchmod@@Base+0x2124>
   19750:	strb	r3, [fp, r4]
   19754:	add	r4, r4, #1
   19758:	ldrb	r3, [r2, #1]!
   1975c:	cmp	r3, #0
   19760:	beq	1807c <lchmod@@Base+0xa34>
   19764:	cmp	sl, r4
   19768:	bhi	19750 <lchmod@@Base+0x2108>
   1976c:	ldrb	r3, [r2, #1]!
   19770:	add	r4, r4, #1
   19774:	cmp	r3, #0
   19778:	bne	19748 <lchmod@@Base+0x2100>
   1977c:	b	1807c <lchmod@@Base+0xa34>
   19780:	add	r9, sp, #100	; 0x64
   19784:	mov	r0, r5
   19788:	ldr	r2, [sp, #60]	; 0x3c
   1978c:	mov	r6, #0
   19790:	ldm	r9, {r9, sl, fp}
   19794:	ldr	r5, [sp, #112]	; 0x70
   19798:	ldr	r4, [sp, #116]	; 0x74
   1979c:	b	1944c <lchmod@@Base+0x1e04>
   197a0:	cmp	r4, r8
   197a4:	add	r9, sp, #100	; 0x64
   197a8:	mov	r1, r4
   197ac:	mov	r2, fp
   197b0:	ldm	r9, {r9, sl, fp}
   197b4:	mov	r3, r5
   197b8:	mov	r0, r5
   197bc:	ldr	r5, [sp, #112]	; 0x70
   197c0:	ldr	r4, [sp, #116]	; 0x74
   197c4:	bcs	197f8 <lchmod@@Base+0x21b0>
   197c8:	ldrb	r6, [r2]
   197cc:	cmp	r6, #0
   197d0:	bne	197e4 <lchmod@@Base+0x219c>
   197d4:	b	19930 <lchmod@@Base+0x22e8>
   197d8:	ldrb	r6, [r2, #1]!
   197dc:	cmp	r6, #0
   197e0:	beq	198c8 <lchmod@@Base+0x2280>
   197e4:	add	r3, r3, #1
   197e8:	add	r1, r7, r3
   197ec:	cmp	r8, r1
   197f0:	bhi	197d8 <lchmod@@Base+0x2190>
   197f4:	mov	r0, r3
   197f8:	mov	r6, #0
   197fc:	ldr	r2, [sp, #60]	; 0x3c
   19800:	b	1944c <lchmod@@Base+0x1e04>
   19804:	mov	r3, #1
   19808:	mov	r4, #0
   1980c:	mov	r9, r4
   19810:	str	r3, [sp, #32]
   19814:	str	r3, [sp, #44]	; 0x2c
   19818:	str	r3, [sp, #48]	; 0x30
   1981c:	str	r4, [sp, #52]	; 0x34
   19820:	str	r3, [sp, #56]	; 0x38
   19824:	str	r3, [sp, #60]	; 0x3c
   19828:	str	r3, [sp, #88]	; 0x58
   1982c:	movw	r3, #60880	; 0xedd0
   19830:	movt	r3, #1
   19834:	str	r4, [sp, #64]	; 0x40
   19838:	str	r4, [sp, #68]	; 0x44
   1983c:	str	r3, [sp, #72]	; 0x48
   19840:	str	r4, [sp, #80]	; 0x50
   19844:	str	r4, [sp, #84]	; 0x54
   19848:	b	180e4 <lchmod@@Base+0xa9c>
   1984c:	mov	fp, r9
   19850:	b	18a00 <lchmod@@Base+0x13b8>
   19854:	ldr	r3, [sp, #48]	; 0x30
   19858:	b	19374 <lchmod@@Base+0x1d2c>
   1985c:	mov	r2, r3
   19860:	ldr	r3, [sp, #72]	; 0x48
   19864:	cmp	r3, #0
   19868:	moveq	r2, #0
   1986c:	andne	r2, r2, #1
   19870:	cmp	r2, #0
   19874:	beq	198a4 <lchmod@@Base+0x225c>
   19878:	mov	r2, r3
   1987c:	ldrb	r3, [r3]
   19880:	cmp	r3, #0
   19884:	beq	198a4 <lchmod@@Base+0x225c>
   19888:	cmp	sl, r4
   1988c:	bls	198b4 <lchmod@@Base+0x226c>
   19890:	strb	r3, [fp, r4]
   19894:	add	r4, r4, #1
   19898:	ldrb	r3, [r2, #1]!
   1989c:	cmp	r3, #0
   198a0:	bne	19888 <lchmod@@Base+0x2240>
   198a4:	cmp	sl, r4
   198a8:	movhi	r3, #0
   198ac:	strbhi	r3, [fp, r4]
   198b0:	b	18a3c <lchmod@@Base+0x13f4>
   198b4:	ldrb	r3, [r2, #1]!
   198b8:	add	r4, r4, #1
   198bc:	cmp	r3, #0
   198c0:	bne	19888 <lchmod@@Base+0x2240>
   198c4:	b	198a4 <lchmod@@Base+0x225c>
   198c8:	mov	r0, r3
   198cc:	ldr	r2, [sp, #60]	; 0x3c
   198d0:	b	1944c <lchmod@@Base+0x1e04>
   198d4:	mov	ip, #5
   198d8:	mov	r3, r8
   198dc:	ldr	r1, [sp, #84]	; 0x54
   198e0:	str	ip, [sp]
   198e4:	ldr	r2, [sp, #180]	; 0xb4
   198e8:	ldr	ip, [sp, #188]	; 0xbc
   198ec:	ldr	r0, [sp, #184]	; 0xb8
   198f0:	str	r2, [sp, #4]
   198f4:	ldr	r2, [sp, #28]
   198f8:	str	ip, [sp, #12]
   198fc:	ldr	ip, [sp, #192]	; 0xc0
   19900:	str	r0, [sp, #8]
   19904:	mov	r0, fp
   19908:	str	ip, [sp, #16]
   1990c:	bl	17fc0 <lchmod@@Base+0x978>
   19910:	mov	r4, r0
   19914:	b	18a3c <lchmod@@Base+0x13f4>
   19918:	mov	r6, r3
   1991c:	str	r3, [sp, #40]	; 0x28
   19920:	b	189ac <lchmod@@Base+0x1364>
   19924:	mov	r3, #2
   19928:	str	r3, [sp, #176]	; 0xb0
   1992c:	b	189ec <lchmod@@Base+0x13a4>
   19930:	ldr	r2, [sp, #60]	; 0x3c
   19934:	b	1944c <lchmod@@Base+0x1e04>
   19938:	mov	r3, #5
   1993c:	mov	fp, r9
   19940:	str	r3, [sp, #176]	; 0xb0
   19944:	b	18a00 <lchmod@@Base+0x13b8>
   19948:	mov	r1, #1
   1994c:	mov	r9, #0
   19950:	mov	r3, r9
   19954:	mov	r2, r9
   19958:	str	r1, [sp, #32]
   1995c:	str	sl, [sp, #84]	; 0x54
   19960:	b	18788 <lchmod@@Base+0x1140>
   19964:	mov	r3, #0
   19968:	mov	r2, #1
   1996c:	mov	r9, r3
   19970:	mov	r4, r3
   19974:	str	r2, [sp, #32]
   19978:	strd	r2, [sp, #44]	; 0x2c
   1997c:	strd	r2, [sp, #56]	; 0x38
   19980:	str	r3, [sp, #80]	; 0x50
   19984:	str	r3, [sp, #84]	; 0x54
   19988:	str	r3, [sp, #88]	; 0x58
   1998c:	movw	r3, #60900	; 0xede4
   19990:	movt	r3, #1
   19994:	str	r2, [sp, #52]	; 0x34
   19998:	str	r2, [sp, #64]	; 0x40
   1999c:	str	r2, [sp, #68]	; 0x44
   199a0:	str	r3, [sp, #72]	; 0x48
   199a4:	b	180e4 <lchmod@@Base+0xa9c>
   199a8:	bl	11878 <abort@plt>
   199ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   199b0:	mov	r4, r0
   199b4:	mov	r5, r3
   199b8:	strd	r6, [sp, #8]
   199bc:	movw	r7, #400	; 0x190
   199c0:	movt	r7, #3
   199c4:	strd	r8, [sp, #16]
   199c8:	strd	sl, [sp, #24]
   199cc:	mov	sl, r1
   199d0:	mov	fp, r2
   199d4:	str	lr, [sp, #32]
   199d8:	sub	sp, sp, #60	; 0x3c
   199dc:	bl	1171c <__errno_location@plt>
   199e0:	mov	r8, r0
   199e4:	cmn	r4, #-2147483647	; 0x80000001
   199e8:	ldr	r6, [r7]
   199ec:	movne	r0, #0
   199f0:	moveq	r0, #1
   199f4:	ldr	r3, [r8]
   199f8:	orrs	r0, r0, r4, lsr #31
   199fc:	str	r3, [sp, #28]
   19a00:	bne	19b90 <lchmod@@Base+0x2548>
   19a04:	ldr	r3, [r7, #4]
   19a08:	cmp	r3, r4
   19a0c:	bgt	19a6c <lchmod@@Base+0x2424>
   19a10:	add	r1, r7, #8
   19a14:	sub	r2, r4, r3
   19a18:	str	r3, [sp, #52]	; 0x34
   19a1c:	cmp	r6, r1
   19a20:	add	r2, r2, #1
   19a24:	beq	19b68 <lchmod@@Base+0x2520>
   19a28:	mov	r1, #8
   19a2c:	mov	r0, r6
   19a30:	mvn	r3, #-2147483648	; 0x80000000
   19a34:	str	r1, [sp]
   19a38:	add	r1, sp, #52	; 0x34
   19a3c:	bl	1c694 <lchmod@@Base+0x504c>
   19a40:	mov	r6, r0
   19a44:	str	r0, [r7]
   19a48:	ldr	r0, [r7, #4]
   19a4c:	mov	r1, #0
   19a50:	ldr	r2, [sp, #52]	; 0x34
   19a54:	sub	r2, r2, r0
   19a58:	add	r0, r6, r0, lsl #3
   19a5c:	lsl	r2, r2, #3
   19a60:	bl	11740 <memset@plt>
   19a64:	ldr	r3, [sp, #52]	; 0x34
   19a68:	str	r3, [r7, #4]
   19a6c:	ldr	r1, [r5, #4]
   19a70:	add	r0, r6, r4, lsl #3
   19a74:	add	ip, r5, #8
   19a78:	mov	r3, fp
   19a7c:	mov	r2, sl
   19a80:	ldr	r7, [r0, #4]
   19a84:	str	r0, [sp, #36]	; 0x24
   19a88:	str	ip, [sp, #40]	; 0x28
   19a8c:	orr	r0, r1, #1
   19a90:	ldr	r9, [r6, r4, lsl #3]
   19a94:	str	ip, [sp, #8]
   19a98:	ldr	lr, [r5, #44]	; 0x2c
   19a9c:	str	r0, [sp, #4]
   19aa0:	ldr	ip, [r5]
   19aa4:	mov	r1, r9
   19aa8:	str	ip, [sp, #32]
   19aac:	ldr	ip, [r5, #40]	; 0x28
   19ab0:	str	ip, [sp, #12]
   19ab4:	ldr	ip, [sp, #32]
   19ab8:	str	lr, [sp, #16]
   19abc:	str	r0, [sp, #44]	; 0x2c
   19ac0:	mov	r0, r7
   19ac4:	str	ip, [sp]
   19ac8:	bl	17fc0 <lchmod@@Base+0x978>
   19acc:	cmp	r9, r0
   19ad0:	bhi	19b40 <lchmod@@Base+0x24f8>
   19ad4:	add	r9, r0, #1
   19ad8:	movw	r3, #508	; 0x1fc
   19adc:	movt	r3, #3
   19ae0:	cmp	r7, r3
   19ae4:	str	r9, [r6, r4, lsl #3]
   19ae8:	beq	19af4 <lchmod@@Base+0x24ac>
   19aec:	mov	r0, r7
   19af0:	bl	13688 <__assert_fail@plt+0x1dbc>
   19af4:	mov	r0, r9
   19af8:	bl	1c3f0 <lchmod@@Base+0x4da8>
   19afc:	ldr	ip, [r5]
   19b00:	mov	r3, fp
   19b04:	mov	r2, sl
   19b08:	mov	r1, r9
   19b0c:	mov	r7, r0
   19b10:	ldr	lr, [sp, #36]	; 0x24
   19b14:	ldr	r4, [r5, #40]	; 0x28
   19b18:	str	r0, [lr, #4]
   19b1c:	ldr	lr, [r5, #44]	; 0x2c
   19b20:	str	ip, [sp]
   19b24:	ldr	ip, [sp, #44]	; 0x2c
   19b28:	str	ip, [sp, #4]
   19b2c:	ldr	ip, [sp, #40]	; 0x28
   19b30:	str	r4, [sp, #12]
   19b34:	str	lr, [sp, #16]
   19b38:	str	ip, [sp, #8]
   19b3c:	bl	17fc0 <lchmod@@Base+0x978>
   19b40:	ldr	r3, [sp, #28]
   19b44:	mov	r0, r7
   19b48:	str	r3, [r8]
   19b4c:	add	sp, sp, #60	; 0x3c
   19b50:	ldrd	r4, [sp]
   19b54:	ldrd	r6, [sp, #8]
   19b58:	ldrd	r8, [sp, #16]
   19b5c:	ldrd	sl, [sp, #24]
   19b60:	add	sp, sp, #32
   19b64:	pop	{pc}		; (ldr pc, [sp], #4)
   19b68:	mov	r1, #8
   19b6c:	mvn	r3, #-2147483648	; 0x80000000
   19b70:	str	r1, [sp]
   19b74:	add	r1, sp, #52	; 0x34
   19b78:	bl	1c694 <lchmod@@Base+0x504c>
   19b7c:	ldrd	r2, [r7, #8]
   19b80:	mov	r6, r0
   19b84:	str	r0, [r7]
   19b88:	strd	r2, [r0]
   19b8c:	b	19a48 <lchmod@@Base+0x2400>
   19b90:	bl	11878 <abort@plt>
   19b94:	strd	r4, [sp, #-16]!
   19b98:	mov	r5, r0
   19b9c:	str	r6, [sp, #8]
   19ba0:	str	lr, [sp, #12]
   19ba4:	bl	1171c <__errno_location@plt>
   19ba8:	mov	r4, r0
   19bac:	cmp	r5, #0
   19bb0:	ldr	r0, [pc, #32]	; 19bd8 <lchmod@@Base+0x2590>
   19bb4:	mov	r1, #48	; 0x30
   19bb8:	movne	r0, r5
   19bbc:	ldr	r6, [r4]
   19bc0:	bl	1c834 <lchmod@@Base+0x51ec>
   19bc4:	str	r6, [r4]
   19bc8:	ldrd	r4, [sp]
   19bcc:	ldr	r6, [sp, #8]
   19bd0:	add	sp, sp, #12
   19bd4:	pop	{pc}		; (ldr pc, [sp], #4)
   19bd8:	strdeq	r0, [r3], -ip
   19bdc:	ldr	r3, [pc, #12]	; 19bf0 <lchmod@@Base+0x25a8>
   19be0:	cmp	r0, #0
   19be4:	moveq	r0, r3
   19be8:	ldr	r0, [r0]
   19bec:	bx	lr
   19bf0:	strdeq	r0, [r3], -ip
   19bf4:	ldr	r3, [pc, #12]	; 19c08 <lchmod@@Base+0x25c0>
   19bf8:	cmp	r0, #0
   19bfc:	moveq	r0, r3
   19c00:	str	r1, [r0]
   19c04:	bx	lr
   19c08:	strdeq	r0, [r3], -ip
   19c0c:	ldr	r3, [pc, #52]	; 19c48 <lchmod@@Base+0x2600>
   19c10:	cmp	r0, #0
   19c14:	push	{lr}		; (str lr, [sp, #-4]!)
   19c18:	lsr	lr, r1, #5
   19c1c:	and	r1, r1, #31
   19c20:	moveq	r0, r3
   19c24:	add	r3, r0, #8
   19c28:	ldr	ip, [r3, lr, lsl #2]
   19c2c:	lsr	r0, ip, r1
   19c30:	eor	r2, r2, r0
   19c34:	and	r0, r0, #1
   19c38:	and	r2, r2, #1
   19c3c:	eor	r1, ip, r2, lsl r1
   19c40:	str	r1, [r3, lr, lsl #2]
   19c44:	pop	{pc}		; (ldr pc, [sp], #4)
   19c48:	strdeq	r0, [r3], -ip
   19c4c:	ldr	r3, [pc, #16]	; 19c64 <lchmod@@Base+0x261c>
   19c50:	cmp	r0, #0
   19c54:	movne	r3, r0
   19c58:	ldr	r0, [r3, #4]
   19c5c:	str	r1, [r3, #4]
   19c60:	bx	lr
   19c64:	strdeq	r0, [r3], -ip
   19c68:	ldr	r3, [pc, #48]	; 19ca0 <lchmod@@Base+0x2658>
   19c6c:	cmp	r0, #0
   19c70:	mov	ip, #10
   19c74:	moveq	r0, r3
   19c78:	cmp	r2, #0
   19c7c:	cmpne	r1, #0
   19c80:	str	ip, [r0]
   19c84:	beq	19c94 <lchmod@@Base+0x264c>
   19c88:	str	r1, [r0, #40]	; 0x28
   19c8c:	str	r2, [r0, #44]	; 0x2c
   19c90:	bx	lr
   19c94:	str	r4, [sp, #-8]!
   19c98:	str	lr, [sp, #4]
   19c9c:	bl	11878 <abort@plt>
   19ca0:	strdeq	r0, [r3], -ip
   19ca4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   19ca8:	strd	r6, [sp, #8]
   19cac:	mov	r7, r0
   19cb0:	mov	r6, r1
   19cb4:	strd	r8, [sp, #16]
   19cb8:	mov	r8, r2
   19cbc:	mov	r9, r3
   19cc0:	str	lr, [sp, #24]
   19cc4:	sub	sp, sp, #28
   19cc8:	ldr	r4, [sp, #56]	; 0x38
   19ccc:	ldr	ip, [pc, #104]	; 19d3c <lchmod@@Base+0x26f4>
   19cd0:	cmp	r4, #0
   19cd4:	moveq	r4, ip
   19cd8:	bl	1171c <__errno_location@plt>
   19cdc:	ldr	ip, [r4, #44]	; 0x2c
   19ce0:	mov	r5, r0
   19ce4:	mov	r1, r6
   19ce8:	add	lr, r4, #8
   19cec:	mov	r3, r9
   19cf0:	ldr	r6, [r5]
   19cf4:	mov	r2, r8
   19cf8:	mov	r0, r7
   19cfc:	str	ip, [sp, #16]
   19d00:	ldr	ip, [r4, #40]	; 0x28
   19d04:	str	lr, [sp, #8]
   19d08:	str	ip, [sp, #12]
   19d0c:	ldr	ip, [r4, #4]
   19d10:	str	ip, [sp, #4]
   19d14:	ldr	ip, [r4]
   19d18:	str	ip, [sp]
   19d1c:	bl	17fc0 <lchmod@@Base+0x978>
   19d20:	str	r6, [r5]
   19d24:	add	sp, sp, #28
   19d28:	ldrd	r4, [sp]
   19d2c:	ldrd	r6, [sp, #8]
   19d30:	ldrd	r8, [sp, #16]
   19d34:	add	sp, sp, #24
   19d38:	pop	{pc}		; (ldr pc, [sp], #4)
   19d3c:	strdeq	r0, [r3], -ip
   19d40:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19d44:	cmp	r2, #0
   19d48:	ldr	r4, [pc, #192]	; 19e10 <lchmod@@Base+0x27c8>
   19d4c:	movne	r4, r2
   19d50:	strd	r6, [sp, #8]
   19d54:	strd	r8, [sp, #16]
   19d58:	mov	r9, r1
   19d5c:	mov	r8, r0
   19d60:	strd	sl, [sp, #24]
   19d64:	str	lr, [sp, #32]
   19d68:	sub	sp, sp, #36	; 0x24
   19d6c:	bl	1171c <__errno_location@plt>
   19d70:	ldr	r5, [r4, #4]
   19d74:	mov	r6, r0
   19d78:	add	r7, r4, #8
   19d7c:	mov	r1, #0
   19d80:	mov	r3, r9
   19d84:	ldr	ip, [r4, #44]	; 0x2c
   19d88:	mov	r2, r8
   19d8c:	mov	r0, r1
   19d90:	ldr	sl, [r6]
   19d94:	orr	r5, r5, #1
   19d98:	str	ip, [sp, #16]
   19d9c:	ldr	ip, [r4, #40]	; 0x28
   19da0:	stmib	sp, {r5, r7, ip}
   19da4:	ldr	ip, [r4]
   19da8:	str	ip, [sp]
   19dac:	bl	17fc0 <lchmod@@Base+0x978>
   19db0:	add	r1, r0, #1
   19db4:	mov	r0, r1
   19db8:	str	r1, [sp, #28]
   19dbc:	bl	1c3f0 <lchmod@@Base+0x4da8>
   19dc0:	ldr	ip, [r4, #44]	; 0x2c
   19dc4:	mov	fp, r0
   19dc8:	mov	r3, r9
   19dcc:	mov	r2, r8
   19dd0:	ldr	r1, [sp, #28]
   19dd4:	str	ip, [sp, #16]
   19dd8:	ldr	ip, [r4, #40]	; 0x28
   19ddc:	stmib	sp, {r5, r7, ip}
   19de0:	ldr	ip, [r4]
   19de4:	str	ip, [sp]
   19de8:	bl	17fc0 <lchmod@@Base+0x978>
   19dec:	mov	r0, fp
   19df0:	str	sl, [r6]
   19df4:	add	sp, sp, #36	; 0x24
   19df8:	ldrd	r4, [sp]
   19dfc:	ldrd	r6, [sp, #8]
   19e00:	ldrd	r8, [sp, #16]
   19e04:	ldrd	sl, [sp, #24]
   19e08:	add	sp, sp, #32
   19e0c:	pop	{pc}		; (ldr pc, [sp], #4)
   19e10:	strdeq	r0, [r3], -ip
   19e14:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19e18:	cmp	r3, #0
   19e1c:	ldr	r4, [pc, #220]	; 19f00 <lchmod@@Base+0x28b8>
   19e20:	movne	r4, r3
   19e24:	strd	r6, [sp, #8]
   19e28:	mov	r6, r2
   19e2c:	strd	r8, [sp, #16]
   19e30:	mov	r9, r0
   19e34:	strd	sl, [sp, #24]
   19e38:	mov	sl, r1
   19e3c:	str	lr, [sp, #32]
   19e40:	sub	sp, sp, #44	; 0x2c
   19e44:	bl	1171c <__errno_location@plt>
   19e48:	ldr	r5, [r4, #4]
   19e4c:	mov	r7, r0
   19e50:	mov	r1, #0
   19e54:	add	r8, r4, #8
   19e58:	mov	r3, sl
   19e5c:	ldr	ip, [r4, #44]	; 0x2c
   19e60:	mov	r2, r9
   19e64:	mov	r0, r1
   19e68:	ldr	lr, [r7]
   19e6c:	cmp	r6, r1
   19e70:	orreq	r5, r5, #1
   19e74:	str	ip, [sp, #16]
   19e78:	ldr	ip, [r4, #40]	; 0x28
   19e7c:	stmib	sp, {r5, r8, ip}
   19e80:	ldr	ip, [r4]
   19e84:	str	lr, [sp, #28]
   19e88:	str	ip, [sp]
   19e8c:	bl	17fc0 <lchmod@@Base+0x978>
   19e90:	add	r1, r0, #1
   19e94:	mov	fp, r0
   19e98:	mov	r0, r1
   19e9c:	str	r1, [sp, #36]	; 0x24
   19ea0:	bl	1c3f0 <lchmod@@Base+0x4da8>
   19ea4:	ldr	ip, [r4, #44]	; 0x2c
   19ea8:	mov	r3, sl
   19eac:	mov	r2, r9
   19eb0:	ldr	r1, [sp, #36]	; 0x24
   19eb4:	str	ip, [sp, #16]
   19eb8:	ldr	ip, [r4, #40]	; 0x28
   19ebc:	str	r0, [sp, #32]
   19ec0:	stmib	sp, {r5, r8, ip}
   19ec4:	ldr	ip, [r4]
   19ec8:	str	ip, [sp]
   19ecc:	bl	17fc0 <lchmod@@Base+0x978>
   19ed0:	ldr	lr, [sp, #28]
   19ed4:	cmp	r6, #0
   19ed8:	ldr	r0, [sp, #32]
   19edc:	str	lr, [r7]
   19ee0:	strne	fp, [r6]
   19ee4:	add	sp, sp, #44	; 0x2c
   19ee8:	ldrd	r4, [sp]
   19eec:	ldrd	r6, [sp, #8]
   19ef0:	ldrd	r8, [sp, #16]
   19ef4:	ldrd	sl, [sp, #24]
   19ef8:	add	sp, sp, #32
   19efc:	pop	{pc}		; (ldr pc, [sp], #4)
   19f00:	strdeq	r0, [r3], -ip
   19f04:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19f08:	movw	r5, #400	; 0x190
   19f0c:	movt	r5, #3
   19f10:	ldr	r3, [r5, #4]
   19f14:	strd	r6, [sp, #8]
   19f18:	str	r8, [sp, #16]
   19f1c:	str	lr, [sp, #20]
   19f20:	ldr	r7, [r5]
   19f24:	cmp	r3, #1
   19f28:	ble	19f4c <lchmod@@Base+0x2904>
   19f2c:	mov	r4, #1
   19f30:	add	r6, r7, #4
   19f34:	ldr	r0, [r6, r4, lsl #3]
   19f38:	add	r4, r4, #1
   19f3c:	bl	13688 <__assert_fail@plt+0x1dbc>
   19f40:	ldr	r3, [r5, #4]
   19f44:	cmp	r3, r4
   19f48:	bgt	19f34 <lchmod@@Base+0x28ec>
   19f4c:	ldr	r0, [r7, #4]
   19f50:	movw	r4, #508	; 0x1fc
   19f54:	movt	r4, #3
   19f58:	cmp	r0, r4
   19f5c:	beq	19f70 <lchmod@@Base+0x2928>
   19f60:	bl	13688 <__assert_fail@plt+0x1dbc>
   19f64:	mov	r3, #256	; 0x100
   19f68:	str	r3, [r5, #8]
   19f6c:	str	r4, [r5, #12]
   19f70:	ldr	r4, [pc, #44]	; 19fa4 <lchmod@@Base+0x295c>
   19f74:	cmp	r7, r4
   19f78:	beq	19f88 <lchmod@@Base+0x2940>
   19f7c:	mov	r0, r7
   19f80:	bl	13688 <__assert_fail@plt+0x1dbc>
   19f84:	str	r4, [r5]
   19f88:	mov	r3, #1
   19f8c:	ldrd	r6, [sp, #8]
   19f90:	str	r3, [r5, #4]
   19f94:	ldrd	r4, [sp]
   19f98:	ldr	r8, [sp, #16]
   19f9c:	add	sp, sp, #20
   19fa0:	pop	{pc}		; (ldr pc, [sp], #4)
   19fa4:	muleq	r3, r8, r1
   19fa8:	ldr	r3, [pc, #4]	; 19fb4 <lchmod@@Base+0x296c>
   19fac:	mvn	r2, #0
   19fb0:	b	199ac <lchmod@@Base+0x2364>
   19fb4:	strdeq	r0, [r3], -ip
   19fb8:	ldr	r3, [pc]	; 19fc0 <lchmod@@Base+0x2978>
   19fbc:	b	199ac <lchmod@@Base+0x2364>
   19fc0:	strdeq	r0, [r3], -ip
   19fc4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19fc8:	movw	r4, #400	; 0x190
   19fcc:	movt	r4, #3
   19fd0:	strd	r6, [sp, #8]
   19fd4:	strd	r8, [sp, #16]
   19fd8:	strd	sl, [sp, #24]
   19fdc:	mov	sl, r0
   19fe0:	str	lr, [sp, #32]
   19fe4:	sub	sp, sp, #44	; 0x2c
   19fe8:	bl	1171c <__errno_location@plt>
   19fec:	ldr	r3, [r0]
   19ff0:	mov	r8, r0
   19ff4:	ldr	r2, [r4, #4]
   19ff8:	ldr	r5, [r4]
   19ffc:	str	r3, [sp, #28]
   1a000:	cmp	r2, #0
   1a004:	bgt	1a060 <lchmod@@Base+0x2a18>
   1a008:	add	r3, r4, #8
   1a00c:	str	r2, [sp, #36]	; 0x24
   1a010:	rsb	r2, r2, #1
   1a014:	cmp	r5, r3
   1a018:	beq	1a12c <lchmod@@Base+0x2ae4>
   1a01c:	mov	r1, #8
   1a020:	mov	r0, r5
   1a024:	mvn	r3, #-2147483648	; 0x80000000
   1a028:	str	r1, [sp]
   1a02c:	add	r1, sp, #36	; 0x24
   1a030:	bl	1c694 <lchmod@@Base+0x504c>
   1a034:	mov	r5, r0
   1a038:	str	r0, [r4]
   1a03c:	ldr	r0, [r4, #4]
   1a040:	mov	r1, #0
   1a044:	ldr	r2, [sp, #36]	; 0x24
   1a048:	sub	r2, r2, r0
   1a04c:	add	r0, r5, r0, lsl #3
   1a050:	lsl	r2, r2, #3
   1a054:	bl	11740 <memset@plt>
   1a058:	ldr	r3, [sp, #36]	; 0x24
   1a05c:	str	r3, [r4, #4]
   1a060:	movw	r4, #508	; 0x1fc
   1a064:	movt	r4, #3
   1a068:	ldr	r9, [r5]
   1a06c:	add	fp, r4, #264	; 0x108
   1a070:	mvn	r3, #0
   1a074:	ldr	r7, [r4, #260]	; 0x104
   1a078:	mov	r2, sl
   1a07c:	ldr	r6, [r5, #4]
   1a080:	str	fp, [sp, #8]
   1a084:	mov	r1, r9
   1a088:	ldr	ip, [r4, #256]	; 0x100
   1a08c:	orr	r7, r7, #1
   1a090:	ldr	lr, [r4, #300]	; 0x12c
   1a094:	mov	r0, r6
   1a098:	str	ip, [sp]
   1a09c:	str	r7, [sp, #4]
   1a0a0:	str	lr, [sp, #16]
   1a0a4:	ldr	ip, [r4, #296]	; 0x128
   1a0a8:	str	ip, [sp, #12]
   1a0ac:	bl	17fc0 <lchmod@@Base+0x978>
   1a0b0:	cmp	r9, r0
   1a0b4:	bhi	1a104 <lchmod@@Base+0x2abc>
   1a0b8:	add	r9, r0, #1
   1a0bc:	cmp	r6, r4
   1a0c0:	str	r9, [r5]
   1a0c4:	beq	1a0d0 <lchmod@@Base+0x2a88>
   1a0c8:	mov	r0, r6
   1a0cc:	bl	13688 <__assert_fail@plt+0x1dbc>
   1a0d0:	mov	r0, r9
   1a0d4:	bl	1c3f0 <lchmod@@Base+0x4da8>
   1a0d8:	ldr	r3, [r4, #256]	; 0x100
   1a0dc:	mov	r2, sl
   1a0e0:	mov	r1, r9
   1a0e4:	mov	r6, r0
   1a0e8:	ldr	lr, [r4, #296]	; 0x128
   1a0ec:	ldr	ip, [r4, #300]	; 0x12c
   1a0f0:	str	r0, [r5, #4]
   1a0f4:	stm	sp, {r3, r7, fp, lr}
   1a0f8:	mvn	r3, #0
   1a0fc:	str	ip, [sp, #16]
   1a100:	bl	17fc0 <lchmod@@Base+0x978>
   1a104:	ldr	r3, [sp, #28]
   1a108:	mov	r0, r6
   1a10c:	str	r3, [r8]
   1a110:	add	sp, sp, #44	; 0x2c
   1a114:	ldrd	r4, [sp]
   1a118:	ldrd	r6, [sp, #8]
   1a11c:	ldrd	r8, [sp, #16]
   1a120:	ldrd	sl, [sp, #24]
   1a124:	add	sp, sp, #32
   1a128:	pop	{pc}		; (ldr pc, [sp], #4)
   1a12c:	mov	r0, #8
   1a130:	mvn	r3, #-2147483648	; 0x80000000
   1a134:	add	r1, sp, #36	; 0x24
   1a138:	str	r0, [sp]
   1a13c:	mov	r0, #0
   1a140:	bl	1c694 <lchmod@@Base+0x504c>
   1a144:	ldrd	r2, [r4, #8]
   1a148:	mov	r5, r0
   1a14c:	str	r0, [r4]
   1a150:	strd	r2, [r0]
   1a154:	b	1a03c <lchmod@@Base+0x29f4>
   1a158:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a15c:	movw	r4, #400	; 0x190
   1a160:	movt	r4, #3
   1a164:	strd	r6, [sp, #8]
   1a168:	strd	r8, [sp, #16]
   1a16c:	strd	sl, [sp, #24]
   1a170:	mov	sl, r0
   1a174:	mov	fp, r1
   1a178:	str	lr, [sp, #32]
   1a17c:	sub	sp, sp, #44	; 0x2c
   1a180:	bl	1171c <__errno_location@plt>
   1a184:	ldr	r3, [r0]
   1a188:	mov	r8, r0
   1a18c:	ldr	r2, [r4, #4]
   1a190:	ldr	r5, [r4]
   1a194:	str	r3, [sp, #28]
   1a198:	cmp	r2, #0
   1a19c:	bgt	1a1f8 <lchmod@@Base+0x2bb0>
   1a1a0:	add	r3, r4, #8
   1a1a4:	str	r2, [sp, #36]	; 0x24
   1a1a8:	rsb	r2, r2, #1
   1a1ac:	cmp	r5, r3
   1a1b0:	beq	1a2d4 <lchmod@@Base+0x2c8c>
   1a1b4:	mov	r1, #8
   1a1b8:	mov	r0, r5
   1a1bc:	mvn	r3, #-2147483648	; 0x80000000
   1a1c0:	str	r1, [sp]
   1a1c4:	add	r1, sp, #36	; 0x24
   1a1c8:	bl	1c694 <lchmod@@Base+0x504c>
   1a1cc:	mov	r5, r0
   1a1d0:	str	r0, [r4]
   1a1d4:	ldr	r0, [r4, #4]
   1a1d8:	mov	r1, #0
   1a1dc:	ldr	r2, [sp, #36]	; 0x24
   1a1e0:	sub	r2, r2, r0
   1a1e4:	add	r0, r5, r0, lsl #3
   1a1e8:	lsl	r2, r2, #3
   1a1ec:	bl	11740 <memset@plt>
   1a1f0:	ldr	r3, [sp, #36]	; 0x24
   1a1f4:	str	r3, [r4, #4]
   1a1f8:	movw	r4, #508	; 0x1fc
   1a1fc:	movt	r4, #3
   1a200:	ldr	r9, [r5]
   1a204:	add	r0, r4, #264	; 0x108
   1a208:	mov	r3, fp
   1a20c:	ldr	r7, [r4, #260]	; 0x104
   1a210:	mov	r2, sl
   1a214:	ldr	r6, [r5, #4]
   1a218:	str	r0, [sp, #8]
   1a21c:	mov	r1, r9
   1a220:	ldr	ip, [r4, #256]	; 0x100
   1a224:	orr	r7, r7, #1
   1a228:	ldr	lr, [r4, #300]	; 0x12c
   1a22c:	mov	r0, r6
   1a230:	str	ip, [sp]
   1a234:	str	r7, [sp, #4]
   1a238:	str	lr, [sp, #16]
   1a23c:	ldr	ip, [r4, #296]	; 0x128
   1a240:	str	ip, [sp, #12]
   1a244:	bl	17fc0 <lchmod@@Base+0x978>
   1a248:	cmp	r9, r0
   1a24c:	bhi	1a2ac <lchmod@@Base+0x2c64>
   1a250:	add	r9, r0, #1
   1a254:	cmp	r6, r4
   1a258:	str	r9, [r5]
   1a25c:	beq	1a268 <lchmod@@Base+0x2c20>
   1a260:	mov	r0, r6
   1a264:	bl	13688 <__assert_fail@plt+0x1dbc>
   1a268:	mov	r0, r9
   1a26c:	bl	1c3f0 <lchmod@@Base+0x4da8>
   1a270:	ldr	ip, [r4, #256]	; 0x100
   1a274:	mov	r1, r9
   1a278:	mov	r3, fp
   1a27c:	mov	r2, sl
   1a280:	mov	r6, r0
   1a284:	ldr	r9, [r4, #296]	; 0x128
   1a288:	ldr	lr, [r4, #300]	; 0x12c
   1a28c:	str	r0, [r5, #4]
   1a290:	str	ip, [sp]
   1a294:	ldr	ip, [pc, #100]	; 1a300 <lchmod@@Base+0x2cb8>
   1a298:	str	r7, [sp, #4]
   1a29c:	str	ip, [sp, #8]
   1a2a0:	str	r9, [sp, #12]
   1a2a4:	str	lr, [sp, #16]
   1a2a8:	bl	17fc0 <lchmod@@Base+0x978>
   1a2ac:	ldr	r3, [sp, #28]
   1a2b0:	mov	r0, r6
   1a2b4:	str	r3, [r8]
   1a2b8:	add	sp, sp, #44	; 0x2c
   1a2bc:	ldrd	r4, [sp]
   1a2c0:	ldrd	r6, [sp, #8]
   1a2c4:	ldrd	r8, [sp, #16]
   1a2c8:	ldrd	sl, [sp, #24]
   1a2cc:	add	sp, sp, #32
   1a2d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a2d4:	mov	r0, #8
   1a2d8:	mvn	r3, #-2147483648	; 0x80000000
   1a2dc:	add	r1, sp, #36	; 0x24
   1a2e0:	str	r0, [sp]
   1a2e4:	mov	r0, #0
   1a2e8:	bl	1c694 <lchmod@@Base+0x504c>
   1a2ec:	ldrd	r2, [r4, #8]
   1a2f0:	mov	r5, r0
   1a2f4:	str	r0, [r4]
   1a2f8:	strd	r2, [r0]
   1a2fc:	b	1a1d4 <lchmod@@Base+0x2b8c>
   1a300:	andeq	r0, r3, r4, lsl #6
   1a304:	strd	r4, [sp, #-20]!	; 0xffffffec
   1a308:	mov	r4, #0
   1a30c:	mov	r5, #0
   1a310:	strd	r6, [sp, #8]
   1a314:	cmp	r1, #10
   1a318:	str	lr, [sp, #16]
   1a31c:	sub	sp, sp, #100	; 0x64
   1a320:	strd	r4, [sp, #48]	; 0x30
   1a324:	beq	1a36c <lchmod@@Base+0x2d24>
   1a328:	mov	r3, sp
   1a32c:	strd	r4, [sp, #8]
   1a330:	str	r1, [sp, #48]	; 0x30
   1a334:	mov	r1, r2
   1a338:	mvn	r2, #0
   1a33c:	ldrd	r6, [sp, #48]	; 0x30
   1a340:	strd	r6, [sp]
   1a344:	strd	r4, [sp, #16]
   1a348:	strd	r4, [sp, #24]
   1a34c:	strd	r4, [sp, #32]
   1a350:	strd	r4, [sp, #40]	; 0x28
   1a354:	bl	199ac <lchmod@@Base+0x2364>
   1a358:	add	sp, sp, #100	; 0x64
   1a35c:	ldrd	r4, [sp]
   1a360:	ldrd	r6, [sp, #8]
   1a364:	add	sp, sp, #16
   1a368:	pop	{pc}		; (ldr pc, [sp], #4)
   1a36c:	bl	11878 <abort@plt>
   1a370:	strd	r4, [sp, #-20]!	; 0xffffffec
   1a374:	mov	r4, #0
   1a378:	mov	r5, #0
   1a37c:	strd	r6, [sp, #8]
   1a380:	cmp	r1, #10
   1a384:	str	lr, [sp, #16]
   1a388:	sub	sp, sp, #100	; 0x64
   1a38c:	strd	r4, [sp, #48]	; 0x30
   1a390:	beq	1a3dc <lchmod@@Base+0x2d94>
   1a394:	mov	ip, r2
   1a398:	mov	r2, r3
   1a39c:	strd	r4, [sp, #8]
   1a3a0:	str	r1, [sp, #48]	; 0x30
   1a3a4:	mov	r3, sp
   1a3a8:	mov	r1, ip
   1a3ac:	ldrd	r6, [sp, #48]	; 0x30
   1a3b0:	strd	r6, [sp]
   1a3b4:	strd	r4, [sp, #16]
   1a3b8:	strd	r4, [sp, #24]
   1a3bc:	strd	r4, [sp, #32]
   1a3c0:	strd	r4, [sp, #40]	; 0x28
   1a3c4:	bl	199ac <lchmod@@Base+0x2364>
   1a3c8:	add	sp, sp, #100	; 0x64
   1a3cc:	ldrd	r4, [sp]
   1a3d0:	ldrd	r6, [sp, #8]
   1a3d4:	add	sp, sp, #16
   1a3d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a3dc:	bl	11878 <abort@plt>
   1a3e0:	mov	r2, #0
   1a3e4:	mov	r3, #0
   1a3e8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a3ec:	strd	r6, [sp, #8]
   1a3f0:	cmp	r0, #10
   1a3f4:	strd	r8, [sp, #16]
   1a3f8:	strd	sl, [sp, #24]
   1a3fc:	str	lr, [sp, #32]
   1a400:	sub	sp, sp, #124	; 0x7c
   1a404:	strd	r2, [sp, #72]	; 0x48
   1a408:	strd	r2, [sp, #80]	; 0x50
   1a40c:	strd	r2, [sp, #88]	; 0x58
   1a410:	strd	r2, [sp, #96]	; 0x60
   1a414:	strd	r2, [sp, #104]	; 0x68
   1a418:	strd	r2, [sp, #112]	; 0x70
   1a41c:	beq	1a5c0 <lchmod@@Base+0x2f78>
   1a420:	mov	r6, r1
   1a424:	movw	r4, #400	; 0x190
   1a428:	movt	r4, #3
   1a42c:	str	r0, [sp, #72]	; 0x48
   1a430:	ldrd	r0, [sp, #72]	; 0x48
   1a434:	strd	r0, [sp, #24]
   1a438:	strd	r2, [sp, #32]
   1a43c:	strd	r2, [sp, #40]	; 0x28
   1a440:	strd	r2, [sp, #48]	; 0x30
   1a444:	strd	r2, [sp, #56]	; 0x38
   1a448:	strd	r2, [sp, #64]	; 0x40
   1a44c:	bl	1171c <__errno_location@plt>
   1a450:	mov	r8, r0
   1a454:	ldr	r5, [r4]
   1a458:	ldr	r2, [r4, #4]
   1a45c:	ldr	r9, [r0]
   1a460:	cmp	r2, #0
   1a464:	bgt	1a4c0 <lchmod@@Base+0x2e78>
   1a468:	add	r3, r4, #8
   1a46c:	str	r2, [sp, #72]	; 0x48
   1a470:	rsb	r2, r2, #1
   1a474:	cmp	r5, r3
   1a478:	beq	1a594 <lchmod@@Base+0x2f4c>
   1a47c:	mov	r3, #8
   1a480:	mov	r0, r5
   1a484:	add	r1, sp, #72	; 0x48
   1a488:	str	r3, [sp]
   1a48c:	mvn	r3, #-2147483648	; 0x80000000
   1a490:	bl	1c694 <lchmod@@Base+0x504c>
   1a494:	mov	r5, r0
   1a498:	str	r0, [r4]
   1a49c:	ldr	r0, [r4, #4]
   1a4a0:	mov	r1, #0
   1a4a4:	ldr	r2, [sp, #72]	; 0x48
   1a4a8:	sub	r2, r2, r0
   1a4ac:	add	r0, r5, r0, lsl #3
   1a4b0:	lsl	r2, r2, #3
   1a4b4:	bl	11740 <memset@plt>
   1a4b8:	ldr	r3, [sp, #72]	; 0x48
   1a4bc:	str	r3, [r4, #4]
   1a4c0:	ldr	sl, [r5]
   1a4c4:	add	r0, sp, #32
   1a4c8:	mvn	r3, #0
   1a4cc:	mov	r2, r6
   1a4d0:	ldr	r7, [sp, #28]
   1a4d4:	ldr	r4, [r5, #4]
   1a4d8:	mov	r1, sl
   1a4dc:	str	r0, [sp, #8]
   1a4e0:	ldr	lr, [sp, #24]
   1a4e4:	orr	r7, r7, #1
   1a4e8:	ldr	ip, [sp, #64]	; 0x40
   1a4ec:	mov	r0, r4
   1a4f0:	ldr	fp, [sp, #68]	; 0x44
   1a4f4:	str	lr, [sp]
   1a4f8:	str	r7, [sp, #4]
   1a4fc:	str	ip, [sp, #12]
   1a500:	str	fp, [sp, #16]
   1a504:	bl	17fc0 <lchmod@@Base+0x978>
   1a508:	cmp	sl, r0
   1a50c:	bhi	1a570 <lchmod@@Base+0x2f28>
   1a510:	add	sl, r0, #1
   1a514:	movw	r3, #508	; 0x1fc
   1a518:	movt	r3, #3
   1a51c:	cmp	r4, r3
   1a520:	str	sl, [r5]
   1a524:	beq	1a530 <lchmod@@Base+0x2ee8>
   1a528:	mov	r0, r4
   1a52c:	bl	13688 <__assert_fail@plt+0x1dbc>
   1a530:	mov	r0, sl
   1a534:	bl	1c3f0 <lchmod@@Base+0x4da8>
   1a538:	ldr	r3, [sp, #24]
   1a53c:	mov	r2, r6
   1a540:	mov	r1, sl
   1a544:	mov	r4, r0
   1a548:	ldr	lr, [sp, #64]	; 0x40
   1a54c:	ldr	ip, [sp, #68]	; 0x44
   1a550:	str	r0, [r5, #4]
   1a554:	add	r5, sp, #32
   1a558:	stm	sp, {r3, r7}
   1a55c:	mvn	r3, #0
   1a560:	str	r5, [sp, #8]
   1a564:	str	lr, [sp, #12]
   1a568:	str	ip, [sp, #16]
   1a56c:	bl	17fc0 <lchmod@@Base+0x978>
   1a570:	mov	r0, r4
   1a574:	str	r9, [r8]
   1a578:	add	sp, sp, #124	; 0x7c
   1a57c:	ldrd	r4, [sp]
   1a580:	ldrd	r6, [sp, #8]
   1a584:	ldrd	r8, [sp, #16]
   1a588:	ldrd	sl, [sp, #24]
   1a58c:	add	sp, sp, #32
   1a590:	pop	{pc}		; (ldr pc, [sp], #4)
   1a594:	mov	r0, #8
   1a598:	mvn	r3, #-2147483648	; 0x80000000
   1a59c:	add	r1, sp, #72	; 0x48
   1a5a0:	str	r0, [sp]
   1a5a4:	mov	r0, #0
   1a5a8:	bl	1c694 <lchmod@@Base+0x504c>
   1a5ac:	ldrd	r2, [r4, #8]
   1a5b0:	mov	r5, r0
   1a5b4:	str	r0, [r4]
   1a5b8:	strd	r2, [r0]
   1a5bc:	b	1a49c <lchmod@@Base+0x2e54>
   1a5c0:	bl	11878 <abort@plt>
   1a5c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a5c8:	cmp	r0, #10
   1a5cc:	strd	r6, [sp, #8]
   1a5d0:	mov	r6, #0
   1a5d4:	mov	r7, #0
   1a5d8:	strd	r8, [sp, #16]
   1a5dc:	strd	sl, [sp, #24]
   1a5e0:	str	lr, [sp, #32]
   1a5e4:	sub	sp, sp, #124	; 0x7c
   1a5e8:	strd	r6, [sp, #72]	; 0x48
   1a5ec:	strd	r6, [sp, #80]	; 0x50
   1a5f0:	strd	r6, [sp, #88]	; 0x58
   1a5f4:	strd	r6, [sp, #96]	; 0x60
   1a5f8:	strd	r6, [sp, #104]	; 0x68
   1a5fc:	strd	r6, [sp, #112]	; 0x70
   1a600:	beq	1a7ac <lchmod@@Base+0x3164>
   1a604:	mov	sl, r2
   1a608:	movw	r5, #400	; 0x190
   1a60c:	movt	r5, #3
   1a610:	str	r0, [sp, #72]	; 0x48
   1a614:	mov	r9, r1
   1a618:	ldrd	r2, [sp, #72]	; 0x48
   1a61c:	strd	r2, [sp, #24]
   1a620:	strd	r6, [sp, #32]
   1a624:	strd	r6, [sp, #40]	; 0x28
   1a628:	strd	r6, [sp, #48]	; 0x30
   1a62c:	strd	r6, [sp, #56]	; 0x38
   1a630:	strd	r6, [sp, #64]	; 0x40
   1a634:	bl	1171c <__errno_location@plt>
   1a638:	mov	r7, r0
   1a63c:	ldr	r4, [r5]
   1a640:	ldr	r2, [r5, #4]
   1a644:	ldr	fp, [r0]
   1a648:	cmp	r2, #0
   1a64c:	bgt	1a6a8 <lchmod@@Base+0x3060>
   1a650:	add	r3, r5, #8
   1a654:	str	r2, [sp, #72]	; 0x48
   1a658:	rsb	r2, r2, #1
   1a65c:	cmp	r4, r3
   1a660:	beq	1a780 <lchmod@@Base+0x3138>
   1a664:	mov	r3, #8
   1a668:	mov	r0, r4
   1a66c:	add	r1, sp, #72	; 0x48
   1a670:	str	r3, [sp]
   1a674:	mvn	r3, #-2147483648	; 0x80000000
   1a678:	bl	1c694 <lchmod@@Base+0x504c>
   1a67c:	mov	r4, r0
   1a680:	str	r0, [r5]
   1a684:	ldr	r0, [r5, #4]
   1a688:	mov	r1, #0
   1a68c:	ldr	r2, [sp, #72]	; 0x48
   1a690:	sub	r2, r2, r0
   1a694:	add	r0, r4, r0, lsl #3
   1a698:	lsl	r2, r2, #3
   1a69c:	bl	11740 <memset@plt>
   1a6a0:	ldr	r3, [sp, #72]	; 0x48
   1a6a4:	str	r3, [r5, #4]
   1a6a8:	ldr	ip, [sp, #24]
   1a6ac:	add	r0, sp, #32
   1a6b0:	mov	r3, sl
   1a6b4:	mov	r2, r9
   1a6b8:	ldr	r6, [sp, #28]
   1a6bc:	ldr	r8, [r4]
   1a6c0:	ldr	r5, [r4, #4]
   1a6c4:	str	ip, [sp]
   1a6c8:	orr	r6, r6, #1
   1a6cc:	ldr	ip, [sp, #64]	; 0x40
   1a6d0:	mov	r1, r8
   1a6d4:	str	r6, [sp, #4]
   1a6d8:	ldr	lr, [sp, #68]	; 0x44
   1a6dc:	str	r0, [sp, #8]
   1a6e0:	mov	r0, r5
   1a6e4:	str	ip, [sp, #12]
   1a6e8:	str	lr, [sp, #16]
   1a6ec:	bl	17fc0 <lchmod@@Base+0x978>
   1a6f0:	cmp	r8, r0
   1a6f4:	bhi	1a75c <lchmod@@Base+0x3114>
   1a6f8:	add	r8, r0, #1
   1a6fc:	movw	r3, #508	; 0x1fc
   1a700:	movt	r3, #3
   1a704:	cmp	r5, r3
   1a708:	str	r8, [r4]
   1a70c:	beq	1a718 <lchmod@@Base+0x30d0>
   1a710:	mov	r0, r5
   1a714:	bl	13688 <__assert_fail@plt+0x1dbc>
   1a718:	mov	r0, r8
   1a71c:	bl	1c3f0 <lchmod@@Base+0x4da8>
   1a720:	ldr	lr, [sp, #24]
   1a724:	mov	r1, r8
   1a728:	mov	r3, sl
   1a72c:	mov	r2, r9
   1a730:	mov	r5, r0
   1a734:	ldr	r8, [sp, #64]	; 0x40
   1a738:	ldr	ip, [sp, #68]	; 0x44
   1a73c:	str	r0, [r4, #4]
   1a740:	str	lr, [sp]
   1a744:	add	lr, sp, #32
   1a748:	str	r6, [sp, #4]
   1a74c:	str	lr, [sp, #8]
   1a750:	str	r8, [sp, #12]
   1a754:	str	ip, [sp, #16]
   1a758:	bl	17fc0 <lchmod@@Base+0x978>
   1a75c:	mov	r0, r5
   1a760:	str	fp, [r7]
   1a764:	add	sp, sp, #124	; 0x7c
   1a768:	ldrd	r4, [sp]
   1a76c:	ldrd	r6, [sp, #8]
   1a770:	ldrd	r8, [sp, #16]
   1a774:	ldrd	sl, [sp, #24]
   1a778:	add	sp, sp, #32
   1a77c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a780:	mov	r0, #8
   1a784:	mvn	r3, #-2147483648	; 0x80000000
   1a788:	add	r1, sp, #72	; 0x48
   1a78c:	str	r0, [sp]
   1a790:	mov	r0, #0
   1a794:	bl	1c694 <lchmod@@Base+0x504c>
   1a798:	ldrd	r2, [r5, #8]
   1a79c:	mov	r4, r0
   1a7a0:	str	r0, [r5]
   1a7a4:	strd	r2, [r0]
   1a7a8:	b	1a684 <lchmod@@Base+0x303c>
   1a7ac:	bl	11878 <abort@plt>
   1a7b0:	ldr	r3, [pc, #492]	; 1a9a4 <lchmod@@Base+0x335c>
   1a7b4:	lsr	ip, r2, #5
   1a7b8:	and	r2, r2, #31
   1a7bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a7c0:	movw	r5, #400	; 0x190
   1a7c4:	movt	r5, #3
   1a7c8:	strd	r6, [sp, #8]
   1a7cc:	strd	r8, [sp, #16]
   1a7d0:	strd	sl, [sp, #24]
   1a7d4:	mov	sl, r0
   1a7d8:	mov	fp, r1
   1a7dc:	ldrd	r0, [r3]
   1a7e0:	str	lr, [sp, #32]
   1a7e4:	sub	sp, sp, #92	; 0x5c
   1a7e8:	ldrd	r8, [r3, #8]
   1a7ec:	add	r6, sp, #48	; 0x30
   1a7f0:	strd	r0, [sp, #40]	; 0x28
   1a7f4:	ldrd	r0, [r3, #16]
   1a7f8:	strd	r8, [sp, #48]	; 0x30
   1a7fc:	ldrd	r8, [r3, #24]
   1a800:	strd	r0, [sp, #56]	; 0x38
   1a804:	ldrd	r0, [r3, #32]
   1a808:	strd	r8, [sp, #64]	; 0x40
   1a80c:	ldrd	r8, [r3, #40]	; 0x28
   1a810:	strd	r0, [sp, #72]	; 0x48
   1a814:	strd	r8, [sp, #80]	; 0x50
   1a818:	ldr	r3, [r6, ip, lsl #2]
   1a81c:	mvn	r1, r3, lsr r2
   1a820:	and	r1, r1, #1
   1a824:	eor	r2, r3, r1, lsl r2
   1a828:	str	r2, [r6, ip, lsl #2]
   1a82c:	bl	1171c <__errno_location@plt>
   1a830:	ldr	r3, [r0]
   1a834:	mov	r8, r0
   1a838:	ldr	r2, [r5, #4]
   1a83c:	ldr	r4, [r5]
   1a840:	str	r3, [sp, #28]
   1a844:	cmp	r2, #0
   1a848:	bgt	1a8a4 <lchmod@@Base+0x325c>
   1a84c:	add	r3, r5, #8
   1a850:	str	r2, [sp, #36]	; 0x24
   1a854:	rsb	r2, r2, #1
   1a858:	cmp	r4, r3
   1a85c:	beq	1a978 <lchmod@@Base+0x3330>
   1a860:	mov	r1, #8
   1a864:	mov	r0, r4
   1a868:	mvn	r3, #-2147483648	; 0x80000000
   1a86c:	str	r1, [sp]
   1a870:	add	r1, sp, #36	; 0x24
   1a874:	bl	1c694 <lchmod@@Base+0x504c>
   1a878:	mov	r4, r0
   1a87c:	str	r0, [r5]
   1a880:	ldr	r0, [r5, #4]
   1a884:	mov	r1, #0
   1a888:	ldr	r2, [sp, #36]	; 0x24
   1a88c:	sub	r2, r2, r0
   1a890:	add	r0, r4, r0, lsl #3
   1a894:	lsl	r2, r2, #3
   1a898:	bl	11740 <memset@plt>
   1a89c:	ldr	r3, [sp, #36]	; 0x24
   1a8a0:	str	r3, [r5, #4]
   1a8a4:	ldr	ip, [sp, #40]	; 0x28
   1a8a8:	mov	r3, fp
   1a8ac:	mov	r2, sl
   1a8b0:	ldr	r7, [sp, #44]	; 0x2c
   1a8b4:	ldr	r9, [r4]
   1a8b8:	ldr	r5, [r4, #4]
   1a8bc:	str	ip, [sp]
   1a8c0:	orr	r7, r7, #1
   1a8c4:	ldr	ip, [sp, #80]	; 0x50
   1a8c8:	mov	r1, r9
   1a8cc:	str	r7, [sp, #4]
   1a8d0:	ldr	lr, [sp, #84]	; 0x54
   1a8d4:	mov	r0, r5
   1a8d8:	str	r6, [sp, #8]
   1a8dc:	str	ip, [sp, #12]
   1a8e0:	str	lr, [sp, #16]
   1a8e4:	bl	17fc0 <lchmod@@Base+0x978>
   1a8e8:	cmp	r9, r0
   1a8ec:	bhi	1a950 <lchmod@@Base+0x3308>
   1a8f0:	add	r9, r0, #1
   1a8f4:	movw	r3, #508	; 0x1fc
   1a8f8:	movt	r3, #3
   1a8fc:	cmp	r5, r3
   1a900:	str	r9, [r4]
   1a904:	beq	1a910 <lchmod@@Base+0x32c8>
   1a908:	mov	r0, r5
   1a90c:	bl	13688 <__assert_fail@plt+0x1dbc>
   1a910:	mov	r0, r9
   1a914:	bl	1c3f0 <lchmod@@Base+0x4da8>
   1a918:	mov	r1, r9
   1a91c:	ldr	ip, [sp, #40]	; 0x28
   1a920:	mov	r3, fp
   1a924:	mov	r2, sl
   1a928:	mov	r5, r0
   1a92c:	ldr	r9, [sp, #80]	; 0x50
   1a930:	ldr	lr, [sp, #84]	; 0x54
   1a934:	str	r0, [r4, #4]
   1a938:	str	ip, [sp]
   1a93c:	str	r7, [sp, #4]
   1a940:	str	r6, [sp, #8]
   1a944:	str	r9, [sp, #12]
   1a948:	str	lr, [sp, #16]
   1a94c:	bl	17fc0 <lchmod@@Base+0x978>
   1a950:	ldr	r3, [sp, #28]
   1a954:	mov	r0, r5
   1a958:	str	r3, [r8]
   1a95c:	add	sp, sp, #92	; 0x5c
   1a960:	ldrd	r4, [sp]
   1a964:	ldrd	r6, [sp, #8]
   1a968:	ldrd	r8, [sp, #16]
   1a96c:	ldrd	sl, [sp, #24]
   1a970:	add	sp, sp, #32
   1a974:	pop	{pc}		; (ldr pc, [sp], #4)
   1a978:	mov	r0, #8
   1a97c:	mvn	r3, #-2147483648	; 0x80000000
   1a980:	add	r1, sp, #36	; 0x24
   1a984:	str	r0, [sp]
   1a988:	mov	r0, #0
   1a98c:	bl	1c694 <lchmod@@Base+0x504c>
   1a990:	ldrd	r2, [r5, #8]
   1a994:	mov	r4, r0
   1a998:	str	r0, [r5]
   1a99c:	strd	r2, [r0]
   1a9a0:	b	1a880 <lchmod@@Base+0x3238>
   1a9a4:	strdeq	r0, [r3], -ip
   1a9a8:	ldr	ip, [pc, #476]	; 1ab8c <lchmod@@Base+0x3544>
   1a9ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a9b0:	movw	r4, #400	; 0x190
   1a9b4:	movt	r4, #3
   1a9b8:	ldrd	r2, [ip, #8]
   1a9bc:	strd	r6, [sp, #8]
   1a9c0:	lsr	r7, r1, #5
   1a9c4:	mov	r6, r0
   1a9c8:	strd	r8, [sp, #16]
   1a9cc:	str	lr, [sp, #32]
   1a9d0:	and	lr, r1, #31
   1a9d4:	ldrd	r0, [ip]
   1a9d8:	strd	sl, [sp, #24]
   1a9dc:	sub	sp, sp, #84	; 0x54
   1a9e0:	add	r5, sp, #40	; 0x28
   1a9e4:	strd	r0, [sp, #32]
   1a9e8:	strd	r2, [sp, #40]	; 0x28
   1a9ec:	ldrd	r0, [ip, #16]
   1a9f0:	ldrd	r2, [ip, #24]
   1a9f4:	strd	r0, [sp, #48]	; 0x30
   1a9f8:	ldrd	r0, [ip, #32]
   1a9fc:	strd	r2, [sp, #56]	; 0x38
   1aa00:	ldrd	r2, [ip, #40]	; 0x28
   1aa04:	strd	r0, [sp, #64]	; 0x40
   1aa08:	strd	r2, [sp, #72]	; 0x48
   1aa0c:	ldr	r1, [r5, r7, lsl #2]
   1aa10:	mvn	r3, r1, lsr lr
   1aa14:	and	r3, r3, #1
   1aa18:	eor	r1, r1, r3, lsl lr
   1aa1c:	str	r1, [r5, r7, lsl #2]
   1aa20:	bl	1171c <__errno_location@plt>
   1aa24:	mov	r9, r0
   1aa28:	ldr	sl, [r0]
   1aa2c:	ldr	r2, [r4, #4]
   1aa30:	ldr	r7, [r4]
   1aa34:	cmp	r2, #0
   1aa38:	bgt	1aa94 <lchmod@@Base+0x344c>
   1aa3c:	add	r3, r4, #8
   1aa40:	str	r2, [sp, #28]
   1aa44:	rsb	r2, r2, #1
   1aa48:	cmp	r7, r3
   1aa4c:	beq	1ab60 <lchmod@@Base+0x3518>
   1aa50:	mov	r1, #8
   1aa54:	mov	r0, r7
   1aa58:	mvn	r3, #-2147483648	; 0x80000000
   1aa5c:	str	r1, [sp]
   1aa60:	add	r1, sp, #28
   1aa64:	bl	1c694 <lchmod@@Base+0x504c>
   1aa68:	mov	r7, r0
   1aa6c:	str	r0, [r4]
   1aa70:	ldr	r0, [r4, #4]
   1aa74:	mov	r1, #0
   1aa78:	ldr	r2, [sp, #28]
   1aa7c:	sub	r2, r2, r0
   1aa80:	add	r0, r7, r0, lsl #3
   1aa84:	lsl	r2, r2, #3
   1aa88:	bl	11740 <memset@plt>
   1aa8c:	ldr	r3, [sp, #28]
   1aa90:	str	r3, [r4, #4]
   1aa94:	ldr	ip, [sp, #32]
   1aa98:	mvn	r3, #0
   1aa9c:	mov	r2, r6
   1aaa0:	ldr	r8, [sp, #36]	; 0x24
   1aaa4:	ldr	fp, [r7]
   1aaa8:	ldr	r4, [r7, #4]
   1aaac:	str	ip, [sp]
   1aab0:	orr	r8, r8, #1
   1aab4:	ldr	ip, [sp, #72]	; 0x48
   1aab8:	mov	r1, fp
   1aabc:	str	r8, [sp, #4]
   1aac0:	ldr	lr, [sp, #76]	; 0x4c
   1aac4:	mov	r0, r4
   1aac8:	str	r5, [sp, #8]
   1aacc:	str	ip, [sp, #12]
   1aad0:	str	lr, [sp, #16]
   1aad4:	bl	17fc0 <lchmod@@Base+0x978>
   1aad8:	cmp	fp, r0
   1aadc:	bhi	1ab3c <lchmod@@Base+0x34f4>
   1aae0:	add	fp, r0, #1
   1aae4:	movw	r3, #508	; 0x1fc
   1aae8:	movt	r3, #3
   1aaec:	cmp	r4, r3
   1aaf0:	str	fp, [r7]
   1aaf4:	beq	1ab00 <lchmod@@Base+0x34b8>
   1aaf8:	mov	r0, r4
   1aafc:	bl	13688 <__assert_fail@plt+0x1dbc>
   1ab00:	mov	r0, fp
   1ab04:	bl	1c3f0 <lchmod@@Base+0x4da8>
   1ab08:	ldr	r3, [sp, #32]
   1ab0c:	mov	r2, r6
   1ab10:	mov	r1, fp
   1ab14:	mov	r4, r0
   1ab18:	ldr	lr, [sp, #72]	; 0x48
   1ab1c:	ldr	ip, [sp, #76]	; 0x4c
   1ab20:	str	r0, [r7, #4]
   1ab24:	stm	sp, {r3, r8}
   1ab28:	mvn	r3, #0
   1ab2c:	str	r5, [sp, #8]
   1ab30:	str	lr, [sp, #12]
   1ab34:	str	ip, [sp, #16]
   1ab38:	bl	17fc0 <lchmod@@Base+0x978>
   1ab3c:	mov	r0, r4
   1ab40:	str	sl, [r9]
   1ab44:	add	sp, sp, #84	; 0x54
   1ab48:	ldrd	r4, [sp]
   1ab4c:	ldrd	r6, [sp, #8]
   1ab50:	ldrd	r8, [sp, #16]
   1ab54:	ldrd	sl, [sp, #24]
   1ab58:	add	sp, sp, #32
   1ab5c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab60:	mov	r0, #8
   1ab64:	mvn	r3, #-2147483648	; 0x80000000
   1ab68:	add	r1, sp, #28
   1ab6c:	str	r0, [sp]
   1ab70:	mov	r0, #0
   1ab74:	bl	1c694 <lchmod@@Base+0x504c>
   1ab78:	ldrd	r2, [r4, #8]
   1ab7c:	mov	r7, r0
   1ab80:	str	r0, [r4]
   1ab84:	strd	r2, [r0]
   1ab88:	b	1aa70 <lchmod@@Base+0x3428>
   1ab8c:	strdeq	r0, [r3], -ip
   1ab90:	ldr	ip, [pc, #472]	; 1ad70 <lchmod@@Base+0x3728>
   1ab94:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ab98:	mov	r5, r0
   1ab9c:	movw	r4, #400	; 0x190
   1aba0:	movt	r4, #3
   1aba4:	ldrd	r2, [ip]
   1aba8:	ldrd	r0, [ip, #8]
   1abac:	strd	r6, [sp, #8]
   1abb0:	strd	r8, [sp, #16]
   1abb4:	strd	sl, [sp, #24]
   1abb8:	str	lr, [sp, #32]
   1abbc:	sub	sp, sp, #84	; 0x54
   1abc0:	strd	r2, [sp, #32]
   1abc4:	strd	r0, [sp, #40]	; 0x28
   1abc8:	ldr	r6, [sp, #44]	; 0x2c
   1abcc:	ldrd	r2, [ip, #16]
   1abd0:	ldrd	r0, [ip, #24]
   1abd4:	mvn	lr, r6
   1abd8:	and	lr, lr, #67108864	; 0x4000000
   1abdc:	eor	lr, lr, r6
   1abe0:	ldrd	r6, [ip, #40]	; 0x28
   1abe4:	strd	r2, [sp, #48]	; 0x30
   1abe8:	ldrd	r2, [ip, #32]
   1abec:	str	lr, [sp, #44]	; 0x2c
   1abf0:	strd	r0, [sp, #56]	; 0x38
   1abf4:	strd	r2, [sp, #64]	; 0x40
   1abf8:	strd	r6, [sp, #72]	; 0x48
   1abfc:	bl	1171c <__errno_location@plt>
   1ac00:	mov	r8, r0
   1ac04:	ldr	r9, [r0]
   1ac08:	ldr	r2, [r4, #4]
   1ac0c:	ldr	r6, [r4]
   1ac10:	cmp	r2, #0
   1ac14:	bgt	1ac70 <lchmod@@Base+0x3628>
   1ac18:	add	r3, r4, #8
   1ac1c:	str	r2, [sp, #28]
   1ac20:	rsb	r2, r2, #1
   1ac24:	cmp	r6, r3
   1ac28:	beq	1ad44 <lchmod@@Base+0x36fc>
   1ac2c:	mov	r1, #8
   1ac30:	mov	r0, r6
   1ac34:	mvn	r3, #-2147483648	; 0x80000000
   1ac38:	str	r1, [sp]
   1ac3c:	add	r1, sp, #28
   1ac40:	bl	1c694 <lchmod@@Base+0x504c>
   1ac44:	mov	r6, r0
   1ac48:	str	r0, [r4]
   1ac4c:	ldr	r0, [r4, #4]
   1ac50:	mov	r1, #0
   1ac54:	ldr	r2, [sp, #28]
   1ac58:	sub	r2, r2, r0
   1ac5c:	add	r0, r6, r0, lsl #3
   1ac60:	lsl	r2, r2, #3
   1ac64:	bl	11740 <memset@plt>
   1ac68:	ldr	r3, [sp, #28]
   1ac6c:	str	r3, [r4, #4]
   1ac70:	ldr	sl, [r6]
   1ac74:	add	r0, sp, #40	; 0x28
   1ac78:	mvn	r3, #0
   1ac7c:	mov	r2, r5
   1ac80:	ldr	r7, [sp, #36]	; 0x24
   1ac84:	ldr	r4, [r6, #4]
   1ac88:	mov	r1, sl
   1ac8c:	str	r0, [sp, #8]
   1ac90:	ldr	lr, [sp, #32]
   1ac94:	orr	r7, r7, #1
   1ac98:	ldr	ip, [sp, #72]	; 0x48
   1ac9c:	mov	r0, r4
   1aca0:	ldr	fp, [sp, #76]	; 0x4c
   1aca4:	str	lr, [sp]
   1aca8:	str	r7, [sp, #4]
   1acac:	str	ip, [sp, #12]
   1acb0:	str	fp, [sp, #16]
   1acb4:	bl	17fc0 <lchmod@@Base+0x978>
   1acb8:	cmp	sl, r0
   1acbc:	bhi	1ad20 <lchmod@@Base+0x36d8>
   1acc0:	add	sl, r0, #1
   1acc4:	movw	r3, #508	; 0x1fc
   1acc8:	movt	r3, #3
   1accc:	cmp	r4, r3
   1acd0:	str	sl, [r6]
   1acd4:	beq	1ace0 <lchmod@@Base+0x3698>
   1acd8:	mov	r0, r4
   1acdc:	bl	13688 <__assert_fail@plt+0x1dbc>
   1ace0:	mov	r0, sl
   1ace4:	bl	1c3f0 <lchmod@@Base+0x4da8>
   1ace8:	ldr	r3, [sp, #32]
   1acec:	mov	r2, r5
   1acf0:	add	r5, sp, #40	; 0x28
   1acf4:	mov	r1, sl
   1acf8:	mov	r4, r0
   1acfc:	ldr	lr, [sp, #72]	; 0x48
   1ad00:	ldr	ip, [sp, #76]	; 0x4c
   1ad04:	str	r0, [r6, #4]
   1ad08:	stm	sp, {r3, r7}
   1ad0c:	mvn	r3, #0
   1ad10:	str	r5, [sp, #8]
   1ad14:	str	lr, [sp, #12]
   1ad18:	str	ip, [sp, #16]
   1ad1c:	bl	17fc0 <lchmod@@Base+0x978>
   1ad20:	mov	r0, r4
   1ad24:	str	r9, [r8]
   1ad28:	add	sp, sp, #84	; 0x54
   1ad2c:	ldrd	r4, [sp]
   1ad30:	ldrd	r6, [sp, #8]
   1ad34:	ldrd	r8, [sp, #16]
   1ad38:	ldrd	sl, [sp, #24]
   1ad3c:	add	sp, sp, #32
   1ad40:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad44:	mov	r0, #8
   1ad48:	mvn	r3, #-2147483648	; 0x80000000
   1ad4c:	add	r1, sp, #28
   1ad50:	str	r0, [sp]
   1ad54:	mov	r0, #0
   1ad58:	bl	1c694 <lchmod@@Base+0x504c>
   1ad5c:	ldrd	r2, [r4, #8]
   1ad60:	mov	r6, r0
   1ad64:	str	r0, [r4]
   1ad68:	strd	r2, [r0]
   1ad6c:	b	1ac4c <lchmod@@Base+0x3604>
   1ad70:	strdeq	r0, [r3], -ip
   1ad74:	ldr	ip, [pc, #480]	; 1af5c <lchmod@@Base+0x3914>
   1ad78:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ad7c:	mov	r5, r0
   1ad80:	movw	r4, #400	; 0x190
   1ad84:	movt	r4, #3
   1ad88:	ldrd	r2, [ip]
   1ad8c:	strd	r6, [sp, #8]
   1ad90:	mov	r6, r1
   1ad94:	ldrd	r0, [ip, #8]
   1ad98:	strd	r8, [sp, #16]
   1ad9c:	strd	sl, [sp, #24]
   1ada0:	str	lr, [sp, #32]
   1ada4:	sub	sp, sp, #84	; 0x54
   1ada8:	ldrd	r8, [ip, #40]	; 0x28
   1adac:	strd	r2, [sp, #32]
   1adb0:	strd	r0, [sp, #40]	; 0x28
   1adb4:	ldrd	r2, [ip, #16]
   1adb8:	ldr	r7, [sp, #44]	; 0x2c
   1adbc:	ldrd	r0, [ip, #24]
   1adc0:	strd	r2, [sp, #48]	; 0x30
   1adc4:	ldrd	r2, [ip, #32]
   1adc8:	mvn	lr, r7
   1adcc:	and	lr, lr, #67108864	; 0x4000000
   1add0:	eor	lr, lr, r7
   1add4:	str	lr, [sp, #44]	; 0x2c
   1add8:	strd	r0, [sp, #56]	; 0x38
   1addc:	strd	r2, [sp, #64]	; 0x40
   1ade0:	strd	r8, [sp, #72]	; 0x48
   1ade4:	bl	1171c <__errno_location@plt>
   1ade8:	mov	r9, r0
   1adec:	ldr	sl, [r0]
   1adf0:	ldr	r2, [r4, #4]
   1adf4:	ldr	r7, [r4]
   1adf8:	cmp	r2, #0
   1adfc:	bgt	1ae58 <lchmod@@Base+0x3810>
   1ae00:	add	r3, r4, #8
   1ae04:	str	r2, [sp, #28]
   1ae08:	rsb	r2, r2, #1
   1ae0c:	cmp	r7, r3
   1ae10:	beq	1af30 <lchmod@@Base+0x38e8>
   1ae14:	mov	r1, #8
   1ae18:	mov	r0, r7
   1ae1c:	mvn	r3, #-2147483648	; 0x80000000
   1ae20:	str	r1, [sp]
   1ae24:	add	r1, sp, #28
   1ae28:	bl	1c694 <lchmod@@Base+0x504c>
   1ae2c:	mov	r7, r0
   1ae30:	str	r0, [r4]
   1ae34:	ldr	r0, [r4, #4]
   1ae38:	mov	r1, #0
   1ae3c:	ldr	r2, [sp, #28]
   1ae40:	sub	r2, r2, r0
   1ae44:	add	r0, r7, r0, lsl #3
   1ae48:	lsl	r2, r2, #3
   1ae4c:	bl	11740 <memset@plt>
   1ae50:	ldr	r3, [sp, #28]
   1ae54:	str	r3, [r4, #4]
   1ae58:	ldr	ip, [sp, #32]
   1ae5c:	add	r0, sp, #40	; 0x28
   1ae60:	mov	r3, r6
   1ae64:	mov	r2, r5
   1ae68:	ldr	r8, [sp, #36]	; 0x24
   1ae6c:	ldr	fp, [r7]
   1ae70:	ldr	r4, [r7, #4]
   1ae74:	str	ip, [sp]
   1ae78:	orr	r8, r8, #1
   1ae7c:	ldr	ip, [sp, #72]	; 0x48
   1ae80:	mov	r1, fp
   1ae84:	str	r8, [sp, #4]
   1ae88:	ldr	lr, [sp, #76]	; 0x4c
   1ae8c:	str	r0, [sp, #8]
   1ae90:	mov	r0, r4
   1ae94:	str	ip, [sp, #12]
   1ae98:	str	lr, [sp, #16]
   1ae9c:	bl	17fc0 <lchmod@@Base+0x978>
   1aea0:	cmp	fp, r0
   1aea4:	bhi	1af0c <lchmod@@Base+0x38c4>
   1aea8:	add	fp, r0, #1
   1aeac:	movw	r3, #508	; 0x1fc
   1aeb0:	movt	r3, #3
   1aeb4:	cmp	r4, r3
   1aeb8:	str	fp, [r7]
   1aebc:	beq	1aec8 <lchmod@@Base+0x3880>
   1aec0:	mov	r0, r4
   1aec4:	bl	13688 <__assert_fail@plt+0x1dbc>
   1aec8:	mov	r0, fp
   1aecc:	bl	1c3f0 <lchmod@@Base+0x4da8>
   1aed0:	ldr	lr, [sp, #32]
   1aed4:	mov	r2, r5
   1aed8:	mov	r3, r6
   1aedc:	mov	r1, fp
   1aee0:	mov	r4, r0
   1aee4:	ldr	r5, [sp, #72]	; 0x48
   1aee8:	ldr	ip, [sp, #76]	; 0x4c
   1aeec:	str	r0, [r7, #4]
   1aef0:	str	lr, [sp]
   1aef4:	add	lr, sp, #40	; 0x28
   1aef8:	str	r8, [sp, #4]
   1aefc:	str	lr, [sp, #8]
   1af00:	str	r5, [sp, #12]
   1af04:	str	ip, [sp, #16]
   1af08:	bl	17fc0 <lchmod@@Base+0x978>
   1af0c:	mov	r0, r4
   1af10:	str	sl, [r9]
   1af14:	add	sp, sp, #84	; 0x54
   1af18:	ldrd	r4, [sp]
   1af1c:	ldrd	r6, [sp, #8]
   1af20:	ldrd	r8, [sp, #16]
   1af24:	ldrd	sl, [sp, #24]
   1af28:	add	sp, sp, #32
   1af2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1af30:	mov	r0, #8
   1af34:	mvn	r3, #-2147483648	; 0x80000000
   1af38:	add	r1, sp, #28
   1af3c:	str	r0, [sp]
   1af40:	mov	r0, #0
   1af44:	bl	1c694 <lchmod@@Base+0x504c>
   1af48:	ldrd	r2, [r4, #8]
   1af4c:	mov	r7, r0
   1af50:	str	r0, [r4]
   1af54:	strd	r2, [r0]
   1af58:	b	1ae34 <lchmod@@Base+0x37ec>
   1af5c:	strdeq	r0, [r3], -ip
   1af60:	strd	r4, [sp, #-12]!
   1af64:	mov	r4, #0
   1af68:	mov	r5, #0
   1af6c:	str	lr, [sp, #8]
   1af70:	sub	sp, sp, #100	; 0x64
   1af74:	cmp	r1, #10
   1af78:	strd	r4, [sp]
   1af7c:	strd	r4, [sp, #8]
   1af80:	strd	r4, [sp, #16]
   1af84:	strd	r4, [sp, #24]
   1af88:	strd	r4, [sp, #32]
   1af8c:	strd	r4, [sp, #40]	; 0x28
   1af90:	beq	1afc0 <lchmod@@Base+0x3978>
   1af94:	mov	ip, #67108864	; 0x4000000
   1af98:	mov	r3, sp
   1af9c:	str	r1, [sp]
   1afa0:	mov	r1, r2
   1afa4:	mvn	r2, #0
   1afa8:	str	ip, [sp, #12]
   1afac:	bl	199ac <lchmod@@Base+0x2364>
   1afb0:	add	sp, sp, #100	; 0x64
   1afb4:	ldrd	r4, [sp]
   1afb8:	add	sp, sp, #8
   1afbc:	pop	{pc}		; (ldr pc, [sp], #4)
   1afc0:	bl	11878 <abort@plt>
   1afc4:	ldr	ip, [pc, #156]	; 1b068 <lchmod@@Base+0x3a20>
   1afc8:	cmp	r2, #0
   1afcc:	cmpne	r1, #0
   1afd0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1afd4:	strd	r6, [sp, #8]
   1afd8:	mov	r6, r2
   1afdc:	str	r8, [sp, #16]
   1afe0:	mov	r8, r3
   1afe4:	strd	sl, [sp, #20]
   1afe8:	ldrd	r4, [ip]
   1afec:	str	lr, [sp, #28]
   1aff0:	sub	sp, sp, #48	; 0x30
   1aff4:	mov	lr, #10
   1aff8:	ldrd	r2, [ip, #8]
   1affc:	ldrd	sl, [ip, #16]
   1b000:	strd	r4, [sp]
   1b004:	ldrd	r4, [ip, #32]
   1b008:	str	lr, [sp]
   1b00c:	strd	r2, [sp, #8]
   1b010:	strd	sl, [sp, #16]
   1b014:	ldrd	r2, [ip, #24]
   1b018:	ldrd	sl, [ip, #40]	; 0x28
   1b01c:	strd	r2, [sp, #24]
   1b020:	strd	r4, [sp, #32]
   1b024:	strd	sl, [sp, #40]	; 0x28
   1b028:	beq	1b064 <lchmod@@Base+0x3a1c>
   1b02c:	mov	r7, r1
   1b030:	mov	r3, sp
   1b034:	mov	r1, r8
   1b038:	mvn	r2, #0
   1b03c:	str	r7, [sp, #40]	; 0x28
   1b040:	str	r6, [sp, #44]	; 0x2c
   1b044:	bl	199ac <lchmod@@Base+0x2364>
   1b048:	add	sp, sp, #48	; 0x30
   1b04c:	ldrd	r4, [sp]
   1b050:	ldrd	r6, [sp, #8]
   1b054:	ldr	r8, [sp, #16]
   1b058:	ldrd	sl, [sp, #20]
   1b05c:	add	sp, sp, #28
   1b060:	pop	{pc}		; (ldr pc, [sp], #4)
   1b064:	bl	11878 <abort@plt>
   1b068:	strdeq	r0, [r3], -ip
   1b06c:	ldr	ip, [pc, #156]	; 1b110 <lchmod@@Base+0x3ac8>
   1b070:	cmp	r2, #0
   1b074:	cmpne	r1, #0
   1b078:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b07c:	strd	r6, [sp, #8]
   1b080:	mov	r6, r2
   1b084:	str	r8, [sp, #16]
   1b088:	mov	r8, r3
   1b08c:	strd	sl, [sp, #20]
   1b090:	ldrd	r4, [ip]
   1b094:	str	lr, [sp, #28]
   1b098:	sub	sp, sp, #48	; 0x30
   1b09c:	mov	lr, #10
   1b0a0:	ldrd	r2, [ip, #8]
   1b0a4:	ldrd	sl, [ip, #16]
   1b0a8:	strd	r4, [sp]
   1b0ac:	ldrd	r4, [ip, #32]
   1b0b0:	str	lr, [sp]
   1b0b4:	strd	r2, [sp, #8]
   1b0b8:	strd	sl, [sp, #16]
   1b0bc:	ldrd	r2, [ip, #24]
   1b0c0:	ldrd	sl, [ip, #40]	; 0x28
   1b0c4:	strd	r2, [sp, #24]
   1b0c8:	strd	r4, [sp, #32]
   1b0cc:	strd	sl, [sp, #40]	; 0x28
   1b0d0:	beq	1b10c <lchmod@@Base+0x3ac4>
   1b0d4:	ldr	r2, [sp, #80]	; 0x50
   1b0d8:	mov	r7, r1
   1b0dc:	mov	r3, sp
   1b0e0:	mov	r1, r8
   1b0e4:	str	r7, [sp, #40]	; 0x28
   1b0e8:	str	r6, [sp, #44]	; 0x2c
   1b0ec:	bl	199ac <lchmod@@Base+0x2364>
   1b0f0:	add	sp, sp, #48	; 0x30
   1b0f4:	ldrd	r4, [sp]
   1b0f8:	ldrd	r6, [sp, #8]
   1b0fc:	ldr	r8, [sp, #16]
   1b100:	ldrd	sl, [sp, #20]
   1b104:	add	sp, sp, #28
   1b108:	pop	{pc}		; (ldr pc, [sp], #4)
   1b10c:	bl	11878 <abort@plt>
   1b110:	strdeq	r0, [r3], -ip
   1b114:	ldr	ip, [pc, #512]	; 1b31c <lchmod@@Base+0x3cd4>
   1b118:	cmp	r0, #0
   1b11c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b120:	ldrd	r4, [ip, #16]
   1b124:	strd	r6, [sp, #8]
   1b128:	clz	r6, r1
   1b12c:	mov	r7, r1
   1b130:	strd	r8, [sp, #16]
   1b134:	mov	r8, r0
   1b138:	lsr	r6, r6, #5
   1b13c:	strd	sl, [sp, #24]
   1b140:	mov	fp, r2
   1b144:	mov	sl, #10
   1b148:	ldrd	r2, [ip]
   1b14c:	moveq	r6, #1
   1b150:	str	lr, [sp, #32]
   1b154:	sub	sp, sp, #92	; 0x5c
   1b158:	cmp	r6, #0
   1b15c:	ldrd	r0, [ip, #8]
   1b160:	strd	r2, [sp, #40]	; 0x28
   1b164:	strd	r4, [sp, #56]	; 0x38
   1b168:	ldrd	r2, [ip, #24]
   1b16c:	strd	r0, [sp, #48]	; 0x30
   1b170:	ldrd	r0, [ip, #32]
   1b174:	str	sl, [sp, #40]	; 0x28
   1b178:	ldrd	r4, [ip, #40]	; 0x28
   1b17c:	strd	r2, [sp, #64]	; 0x40
   1b180:	strd	r0, [sp, #72]	; 0x48
   1b184:	strd	r4, [sp, #80]	; 0x50
   1b188:	bne	1b318 <lchmod@@Base+0x3cd0>
   1b18c:	movw	r5, #400	; 0x190
   1b190:	movt	r5, #3
   1b194:	str	r8, [sp, #80]	; 0x50
   1b198:	str	r7, [sp, #84]	; 0x54
   1b19c:	bl	1171c <__errno_location@plt>
   1b1a0:	ldr	r3, [r0]
   1b1a4:	mov	r9, r0
   1b1a8:	ldr	r2, [r5, #4]
   1b1ac:	ldr	r4, [r5]
   1b1b0:	str	r3, [sp, #28]
   1b1b4:	cmp	r2, #0
   1b1b8:	movgt	r1, sl
   1b1bc:	bgt	1b224 <lchmod@@Base+0x3bdc>
   1b1c0:	add	r3, r5, #8
   1b1c4:	str	r2, [sp, #36]	; 0x24
   1b1c8:	rsb	r2, r2, #1
   1b1cc:	cmp	r4, r3
   1b1d0:	beq	1b2ec <lchmod@@Base+0x3ca4>
   1b1d4:	mov	r1, #8
   1b1d8:	mov	r0, r4
   1b1dc:	mvn	r3, #-2147483648	; 0x80000000
   1b1e0:	str	r1, [sp]
   1b1e4:	add	r1, sp, #36	; 0x24
   1b1e8:	bl	1c694 <lchmod@@Base+0x504c>
   1b1ec:	mov	r4, r0
   1b1f0:	str	r0, [r5]
   1b1f4:	ldr	r0, [r5, #4]
   1b1f8:	mov	r1, #0
   1b1fc:	ldr	r2, [sp, #36]	; 0x24
   1b200:	sub	r2, r2, r0
   1b204:	add	r0, r4, r0, lsl #3
   1b208:	lsl	r2, r2, #3
   1b20c:	bl	11740 <memset@plt>
   1b210:	ldr	r3, [sp, #36]	; 0x24
   1b214:	ldr	r1, [sp, #40]	; 0x28
   1b218:	ldr	r8, [sp, #80]	; 0x50
   1b21c:	str	r3, [r5, #4]
   1b220:	ldr	r7, [sp, #84]	; 0x54
   1b224:	mvn	r3, #0
   1b228:	mov	r2, fp
   1b22c:	ldr	r6, [sp, #44]	; 0x2c
   1b230:	ldr	sl, [r4]
   1b234:	ldr	r5, [r4, #4]
   1b238:	orr	r6, r6, #1
   1b23c:	stm	sp, {r1, r6}
   1b240:	add	r1, sp, #48	; 0x30
   1b244:	str	r8, [sp, #12]
   1b248:	mov	r0, r5
   1b24c:	str	r1, [sp, #8]
   1b250:	mov	r1, sl
   1b254:	str	r7, [sp, #16]
   1b258:	bl	17fc0 <lchmod@@Base+0x978>
   1b25c:	cmp	sl, r0
   1b260:	bhi	1b2c4 <lchmod@@Base+0x3c7c>
   1b264:	add	r7, r0, #1
   1b268:	movw	r3, #508	; 0x1fc
   1b26c:	movt	r3, #3
   1b270:	cmp	r5, r3
   1b274:	str	r7, [r4]
   1b278:	beq	1b284 <lchmod@@Base+0x3c3c>
   1b27c:	mov	r0, r5
   1b280:	bl	13688 <__assert_fail@plt+0x1dbc>
   1b284:	mov	r0, r7
   1b288:	bl	1c3f0 <lchmod@@Base+0x4da8>
   1b28c:	ldr	r3, [sp, #40]	; 0x28
   1b290:	mov	r2, fp
   1b294:	mov	r1, r7
   1b298:	mov	r5, r0
   1b29c:	ldr	lr, [sp, #80]	; 0x50
   1b2a0:	ldr	ip, [sp, #84]	; 0x54
   1b2a4:	str	r0, [r4, #4]
   1b2a8:	add	r4, sp, #48	; 0x30
   1b2ac:	stm	sp, {r3, r6}
   1b2b0:	mvn	r3, #0
   1b2b4:	str	r4, [sp, #8]
   1b2b8:	str	lr, [sp, #12]
   1b2bc:	str	ip, [sp, #16]
   1b2c0:	bl	17fc0 <lchmod@@Base+0x978>
   1b2c4:	ldr	r3, [sp, #28]
   1b2c8:	mov	r0, r5
   1b2cc:	str	r3, [r9]
   1b2d0:	add	sp, sp, #92	; 0x5c
   1b2d4:	ldrd	r4, [sp]
   1b2d8:	ldrd	r6, [sp, #8]
   1b2dc:	ldrd	r8, [sp, #16]
   1b2e0:	ldrd	sl, [sp, #24]
   1b2e4:	add	sp, sp, #32
   1b2e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b2ec:	mov	r1, #8
   1b2f0:	mvn	r3, #-2147483648	; 0x80000000
   1b2f4:	mov	r0, r6
   1b2f8:	str	r1, [sp]
   1b2fc:	add	r1, sp, #36	; 0x24
   1b300:	bl	1c694 <lchmod@@Base+0x504c>
   1b304:	ldrd	r2, [r5, #8]
   1b308:	mov	r4, r0
   1b30c:	str	r0, [r5]
   1b310:	strd	r2, [r0]
   1b314:	b	1b1f4 <lchmod@@Base+0x3bac>
   1b318:	bl	11878 <abort@plt>
   1b31c:	strdeq	r0, [r3], -ip
   1b320:	ldr	ip, [pc, #536]	; 1b540 <lchmod@@Base+0x3ef8>
   1b324:	cmp	r0, #0
   1b328:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b32c:	ldrd	r4, [ip, #16]
   1b330:	strd	r6, [sp, #8]
   1b334:	mov	r6, r1
   1b338:	mov	r7, r0
   1b33c:	strd	r8, [sp, #16]
   1b340:	mov	r9, #10
   1b344:	strd	sl, [sp, #24]
   1b348:	mov	sl, r2
   1b34c:	mov	fp, r3
   1b350:	str	lr, [sp, #32]
   1b354:	clz	lr, r1
   1b358:	sub	sp, sp, #92	; 0x5c
   1b35c:	ldrd	r2, [ip]
   1b360:	lsr	lr, lr, #5
   1b364:	moveq	lr, #1
   1b368:	ldrd	r0, [ip, #8]
   1b36c:	cmp	lr, #0
   1b370:	strd	r4, [sp, #56]	; 0x38
   1b374:	ldrd	r4, [ip, #40]	; 0x28
   1b378:	str	lr, [sp, #28]
   1b37c:	strd	r2, [sp, #40]	; 0x28
   1b380:	ldrd	r2, [ip, #24]
   1b384:	strd	r0, [sp, #48]	; 0x30
   1b388:	ldrd	r0, [ip, #32]
   1b38c:	str	r9, [sp, #40]	; 0x28
   1b390:	strd	r2, [sp, #64]	; 0x40
   1b394:	strd	r4, [sp, #80]	; 0x50
   1b398:	strd	r0, [sp, #72]	; 0x48
   1b39c:	bne	1b53c <lchmod@@Base+0x3ef4>
   1b3a0:	movw	r5, #400	; 0x190
   1b3a4:	movt	r5, #3
   1b3a8:	str	r7, [sp, #80]	; 0x50
   1b3ac:	str	r6, [sp, #84]	; 0x54
   1b3b0:	bl	1171c <__errno_location@plt>
   1b3b4:	ldr	r3, [r0]
   1b3b8:	mov	r8, r0
   1b3bc:	ldr	r2, [r5, #4]
   1b3c0:	ldr	r4, [r5]
   1b3c4:	str	r3, [sp, #24]
   1b3c8:	cmp	r2, #0
   1b3cc:	movgt	r1, r9
   1b3d0:	bgt	1b438 <lchmod@@Base+0x3df0>
   1b3d4:	add	r3, r5, #8
   1b3d8:	str	r2, [sp, #36]	; 0x24
   1b3dc:	rsb	r2, r2, #1
   1b3e0:	cmp	r4, r3
   1b3e4:	beq	1b510 <lchmod@@Base+0x3ec8>
   1b3e8:	mov	r1, #8
   1b3ec:	mov	r0, r4
   1b3f0:	mvn	r3, #-2147483648	; 0x80000000
   1b3f4:	str	r1, [sp]
   1b3f8:	add	r1, sp, #36	; 0x24
   1b3fc:	bl	1c694 <lchmod@@Base+0x504c>
   1b400:	mov	r4, r0
   1b404:	str	r0, [r5]
   1b408:	ldr	r0, [r5, #4]
   1b40c:	mov	r1, #0
   1b410:	ldr	r2, [sp, #36]	; 0x24
   1b414:	sub	r2, r2, r0
   1b418:	add	r0, r4, r0, lsl #3
   1b41c:	lsl	r2, r2, #3
   1b420:	bl	11740 <memset@plt>
   1b424:	ldr	r3, [sp, #36]	; 0x24
   1b428:	ldr	r1, [sp, #40]	; 0x28
   1b42c:	ldr	r7, [sp, #80]	; 0x50
   1b430:	str	r3, [r5, #4]
   1b434:	ldr	r6, [sp, #84]	; 0x54
   1b438:	mov	r3, fp
   1b43c:	mov	r2, sl
   1b440:	ldr	r0, [sp, #44]	; 0x2c
   1b444:	ldr	r9, [r4]
   1b448:	ldr	r5, [r4, #4]
   1b44c:	orr	r0, r0, #1
   1b450:	str	r1, [sp]
   1b454:	add	r1, sp, #48	; 0x30
   1b458:	str	r0, [sp, #4]
   1b45c:	str	r1, [sp, #8]
   1b460:	mov	r1, r9
   1b464:	str	r7, [sp, #12]
   1b468:	str	r6, [sp, #16]
   1b46c:	str	r0, [sp, #28]
   1b470:	mov	r0, r5
   1b474:	bl	17fc0 <lchmod@@Base+0x978>
   1b478:	cmp	r9, r0
   1b47c:	bhi	1b4e8 <lchmod@@Base+0x3ea0>
   1b480:	add	r6, r0, #1
   1b484:	movw	r3, #508	; 0x1fc
   1b488:	movt	r3, #3
   1b48c:	cmp	r5, r3
   1b490:	str	r6, [r4]
   1b494:	beq	1b4a0 <lchmod@@Base+0x3e58>
   1b498:	mov	r0, r5
   1b49c:	bl	13688 <__assert_fail@plt+0x1dbc>
   1b4a0:	mov	r0, r6
   1b4a4:	bl	1c3f0 <lchmod@@Base+0x4da8>
   1b4a8:	ldr	lr, [sp, #40]	; 0x28
   1b4ac:	mov	r1, r6
   1b4b0:	mov	r3, fp
   1b4b4:	mov	r2, sl
   1b4b8:	mov	r5, r0
   1b4bc:	ldr	r6, [sp, #80]	; 0x50
   1b4c0:	ldr	ip, [sp, #84]	; 0x54
   1b4c4:	str	r0, [r4, #4]
   1b4c8:	str	lr, [sp]
   1b4cc:	ldr	lr, [sp, #28]
   1b4d0:	str	lr, [sp, #4]
   1b4d4:	add	lr, sp, #48	; 0x30
   1b4d8:	str	r6, [sp, #12]
   1b4dc:	str	lr, [sp, #8]
   1b4e0:	str	ip, [sp, #16]
   1b4e4:	bl	17fc0 <lchmod@@Base+0x978>
   1b4e8:	ldr	r3, [sp, #24]
   1b4ec:	mov	r0, r5
   1b4f0:	str	r3, [r8]
   1b4f4:	add	sp, sp, #92	; 0x5c
   1b4f8:	ldrd	r4, [sp]
   1b4fc:	ldrd	r6, [sp, #8]
   1b500:	ldrd	r8, [sp, #16]
   1b504:	ldrd	sl, [sp, #24]
   1b508:	add	sp, sp, #32
   1b50c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b510:	mov	r1, #8
   1b514:	mvn	r3, #-2147483648	; 0x80000000
   1b518:	ldr	r0, [sp, #28]
   1b51c:	str	r1, [sp]
   1b520:	add	r1, sp, #36	; 0x24
   1b524:	bl	1c694 <lchmod@@Base+0x504c>
   1b528:	ldrd	r2, [r5, #8]
   1b52c:	mov	r4, r0
   1b530:	str	r0, [r5]
   1b534:	strd	r2, [r0]
   1b538:	b	1b408 <lchmod@@Base+0x3dc0>
   1b53c:	bl	11878 <abort@plt>
   1b540:	strdeq	r0, [r3], -ip
   1b544:	ldr	r3, [pc]	; 1b54c <lchmod@@Base+0x3f04>
   1b548:	b	199ac <lchmod@@Base+0x2364>
   1b54c:	andeq	r0, r3, r0, lsr #3
   1b550:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b554:	movw	r4, #400	; 0x190
   1b558:	movt	r4, #3
   1b55c:	strd	r6, [sp, #8]
   1b560:	strd	r8, [sp, #16]
   1b564:	strd	sl, [sp, #24]
   1b568:	mov	sl, r0
   1b56c:	mov	fp, r1
   1b570:	str	lr, [sp, #32]
   1b574:	sub	sp, sp, #44	; 0x2c
   1b578:	bl	1171c <__errno_location@plt>
   1b57c:	ldr	r3, [r0]
   1b580:	mov	r8, r0
   1b584:	ldr	r2, [r4, #4]
   1b588:	ldr	r5, [r4]
   1b58c:	str	r3, [sp, #28]
   1b590:	cmp	r2, #0
   1b594:	bgt	1b5f0 <lchmod@@Base+0x3fa8>
   1b598:	add	r3, r4, #8
   1b59c:	str	r2, [sp, #36]	; 0x24
   1b5a0:	rsb	r2, r2, #1
   1b5a4:	cmp	r5, r3
   1b5a8:	beq	1b6cc <lchmod@@Base+0x4084>
   1b5ac:	mov	r1, #8
   1b5b0:	mov	r0, r5
   1b5b4:	mvn	r3, #-2147483648	; 0x80000000
   1b5b8:	str	r1, [sp]
   1b5bc:	add	r1, sp, #36	; 0x24
   1b5c0:	bl	1c694 <lchmod@@Base+0x504c>
   1b5c4:	mov	r5, r0
   1b5c8:	str	r0, [r4]
   1b5cc:	ldr	r0, [r4, #4]
   1b5d0:	mov	r1, #0
   1b5d4:	ldr	r2, [sp, #36]	; 0x24
   1b5d8:	sub	r2, r2, r0
   1b5dc:	add	r0, r5, r0, lsl #3
   1b5e0:	lsl	r2, r2, #3
   1b5e4:	bl	11740 <memset@plt>
   1b5e8:	ldr	r3, [sp, #36]	; 0x24
   1b5ec:	str	r3, [r4, #4]
   1b5f0:	ldr	ip, [r4, #16]
   1b5f4:	mov	r3, fp
   1b5f8:	mov	r2, sl
   1b5fc:	ldr	r7, [r4, #20]
   1b600:	ldr	r0, [pc, #240]	; 1b6f8 <lchmod@@Base+0x40b0>
   1b604:	ldr	r9, [r5]
   1b608:	orr	r7, r7, #1
   1b60c:	ldr	r6, [r5, #4]
   1b610:	str	ip, [sp]
   1b614:	ldr	ip, [r4, #56]	; 0x38
   1b618:	mov	r1, r9
   1b61c:	str	r7, [sp, #4]
   1b620:	ldr	lr, [r4, #60]	; 0x3c
   1b624:	str	r0, [sp, #8]
   1b628:	mov	r0, r6
   1b62c:	str	ip, [sp, #12]
   1b630:	str	lr, [sp, #16]
   1b634:	bl	17fc0 <lchmod@@Base+0x978>
   1b638:	cmp	r9, r0
   1b63c:	bhi	1b6a4 <lchmod@@Base+0x405c>
   1b640:	add	r9, r0, #1
   1b644:	movw	r3, #508	; 0x1fc
   1b648:	movt	r3, #3
   1b64c:	cmp	r6, r3
   1b650:	str	r9, [r5]
   1b654:	beq	1b660 <lchmod@@Base+0x4018>
   1b658:	mov	r0, r6
   1b65c:	bl	13688 <__assert_fail@plt+0x1dbc>
   1b660:	mov	r0, r9
   1b664:	bl	1c3f0 <lchmod@@Base+0x4da8>
   1b668:	ldr	ip, [r4, #16]
   1b66c:	mov	r1, r9
   1b670:	mov	r3, fp
   1b674:	mov	r2, sl
   1b678:	mov	r6, r0
   1b67c:	ldr	r9, [r4, #56]	; 0x38
   1b680:	ldr	lr, [r4, #60]	; 0x3c
   1b684:	str	r0, [r5, #4]
   1b688:	str	ip, [sp]
   1b68c:	ldr	ip, [pc, #100]	; 1b6f8 <lchmod@@Base+0x40b0>
   1b690:	str	r7, [sp, #4]
   1b694:	str	ip, [sp, #8]
   1b698:	str	r9, [sp, #12]
   1b69c:	str	lr, [sp, #16]
   1b6a0:	bl	17fc0 <lchmod@@Base+0x978>
   1b6a4:	ldr	r3, [sp, #28]
   1b6a8:	mov	r0, r6
   1b6ac:	str	r3, [r8]
   1b6b0:	add	sp, sp, #44	; 0x2c
   1b6b4:	ldrd	r4, [sp]
   1b6b8:	ldrd	r6, [sp, #8]
   1b6bc:	ldrd	r8, [sp, #16]
   1b6c0:	ldrd	sl, [sp, #24]
   1b6c4:	add	sp, sp, #32
   1b6c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6cc:	mov	r0, #8
   1b6d0:	mvn	r3, #-2147483648	; 0x80000000
   1b6d4:	add	r1, sp, #36	; 0x24
   1b6d8:	str	r0, [sp]
   1b6dc:	mov	r0, #0
   1b6e0:	bl	1c694 <lchmod@@Base+0x504c>
   1b6e4:	ldrd	r2, [r4, #8]
   1b6e8:	mov	r5, r0
   1b6ec:	str	r0, [r4]
   1b6f0:	strd	r2, [r0]
   1b6f4:	b	1b5cc <lchmod@@Base+0x3f84>
   1b6f8:	andeq	r0, r3, r8, lsr #3
   1b6fc:	ldr	r3, [pc, #4]	; 1b708 <lchmod@@Base+0x40c0>
   1b700:	mvn	r2, #0
   1b704:	b	199ac <lchmod@@Base+0x2364>
   1b708:	andeq	r0, r3, r0, lsr #3
   1b70c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b710:	movw	r4, #400	; 0x190
   1b714:	movt	r4, #3
   1b718:	strd	r6, [sp, #8]
   1b71c:	strd	r8, [sp, #16]
   1b720:	strd	sl, [sp, #24]
   1b724:	mov	sl, r0
   1b728:	str	lr, [sp, #32]
   1b72c:	sub	sp, sp, #44	; 0x2c
   1b730:	bl	1171c <__errno_location@plt>
   1b734:	ldr	r3, [r0]
   1b738:	mov	r8, r0
   1b73c:	ldr	r2, [r4, #4]
   1b740:	ldr	r5, [r4]
   1b744:	str	r3, [sp, #28]
   1b748:	cmp	r2, #0
   1b74c:	bgt	1b7a8 <lchmod@@Base+0x4160>
   1b750:	add	r3, r4, #8
   1b754:	str	r2, [sp, #36]	; 0x24
   1b758:	rsb	r2, r2, #1
   1b75c:	cmp	r5, r3
   1b760:	beq	1b870 <lchmod@@Base+0x4228>
   1b764:	mov	r1, #8
   1b768:	mov	r0, r5
   1b76c:	mvn	r3, #-2147483648	; 0x80000000
   1b770:	str	r1, [sp]
   1b774:	add	r1, sp, #36	; 0x24
   1b778:	bl	1c694 <lchmod@@Base+0x504c>
   1b77c:	mov	r5, r0
   1b780:	str	r0, [r4]
   1b784:	ldr	r0, [r4, #4]
   1b788:	mov	r1, #0
   1b78c:	ldr	r2, [sp, #36]	; 0x24
   1b790:	sub	r2, r2, r0
   1b794:	add	r0, r5, r0, lsl #3
   1b798:	lsl	r2, r2, #3
   1b79c:	bl	11740 <memset@plt>
   1b7a0:	ldr	r3, [sp, #36]	; 0x24
   1b7a4:	str	r3, [r4, #4]
   1b7a8:	ldr	ip, [r4, #16]
   1b7ac:	mvn	r3, #0
   1b7b0:	mov	r2, sl
   1b7b4:	ldr	r7, [r4, #20]
   1b7b8:	ldr	fp, [pc, #220]	; 1b89c <lchmod@@Base+0x4254>
   1b7bc:	ldr	r9, [r5]
   1b7c0:	orr	r7, r7, #1
   1b7c4:	ldr	r6, [r5, #4]
   1b7c8:	str	ip, [sp]
   1b7cc:	ldr	ip, [r4, #56]	; 0x38
   1b7d0:	mov	r1, r9
   1b7d4:	stmib	sp, {r7, fp}
   1b7d8:	ldr	lr, [r4, #60]	; 0x3c
   1b7dc:	mov	r0, r6
   1b7e0:	str	ip, [sp, #12]
   1b7e4:	str	lr, [sp, #16]
   1b7e8:	bl	17fc0 <lchmod@@Base+0x978>
   1b7ec:	cmp	r9, r0
   1b7f0:	bhi	1b848 <lchmod@@Base+0x4200>
   1b7f4:	add	r9, r0, #1
   1b7f8:	movw	r3, #508	; 0x1fc
   1b7fc:	movt	r3, #3
   1b800:	cmp	r6, r3
   1b804:	str	r9, [r5]
   1b808:	beq	1b814 <lchmod@@Base+0x41cc>
   1b80c:	mov	r0, r6
   1b810:	bl	13688 <__assert_fail@plt+0x1dbc>
   1b814:	mov	r0, r9
   1b818:	bl	1c3f0 <lchmod@@Base+0x4da8>
   1b81c:	ldr	r3, [r4, #16]
   1b820:	mov	r2, sl
   1b824:	mov	r1, r9
   1b828:	mov	r6, r0
   1b82c:	ldr	lr, [r4, #56]	; 0x38
   1b830:	ldr	ip, [r4, #60]	; 0x3c
   1b834:	str	r0, [r5, #4]
   1b838:	stm	sp, {r3, r7, fp, lr}
   1b83c:	mvn	r3, #0
   1b840:	str	ip, [sp, #16]
   1b844:	bl	17fc0 <lchmod@@Base+0x978>
   1b848:	ldr	r3, [sp, #28]
   1b84c:	mov	r0, r6
   1b850:	str	r3, [r8]
   1b854:	add	sp, sp, #44	; 0x2c
   1b858:	ldrd	r4, [sp]
   1b85c:	ldrd	r6, [sp, #8]
   1b860:	ldrd	r8, [sp, #16]
   1b864:	ldrd	sl, [sp, #24]
   1b868:	add	sp, sp, #32
   1b86c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b870:	mov	r0, #8
   1b874:	mvn	r3, #-2147483648	; 0x80000000
   1b878:	add	r1, sp, #36	; 0x24
   1b87c:	str	r0, [sp]
   1b880:	mov	r0, #0
   1b884:	bl	1c694 <lchmod@@Base+0x504c>
   1b888:	ldrd	r2, [r4, #8]
   1b88c:	mov	r5, r0
   1b890:	str	r0, [r4]
   1b894:	strd	r2, [r0]
   1b898:	b	1b784 <lchmod@@Base+0x413c>
   1b89c:	andeq	r0, r3, r8, lsr #3
   1b8a0:	strd	r4, [sp, #-16]!
   1b8a4:	ldr	r4, [r0], #8
   1b8a8:	str	r6, [sp, #8]
   1b8ac:	str	lr, [sp, #12]
   1b8b0:	cmp	r4, r0
   1b8b4:	beq	1b8e0 <lchmod@@Base+0x4298>
   1b8b8:	mov	r0, r4
   1b8bc:	bl	1d840 <lchmod@@Base+0x61f8>
   1b8c0:	cmp	r0, #0
   1b8c4:	movne	r3, r0
   1b8c8:	moveq	r3, r4
   1b8cc:	ldrd	r4, [sp]
   1b8d0:	mov	r0, r3
   1b8d4:	ldr	r6, [sp, #8]
   1b8d8:	add	sp, sp, #12
   1b8dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8e0:	mov	r0, r1
   1b8e4:	mov	r5, r1
   1b8e8:	bl	1d804 <lchmod@@Base+0x61bc>
   1b8ec:	subs	r3, r0, #0
   1b8f0:	beq	1b8cc <lchmod@@Base+0x4284>
   1b8f4:	mov	r2, r5
   1b8f8:	mov	r1, r4
   1b8fc:	ldrd	r4, [sp]
   1b900:	ldr	r6, [sp, #8]
   1b904:	ldr	lr, [sp, #12]
   1b908:	add	sp, sp, #16
   1b90c:	b	11530 <memcpy@plt>
   1b910:	strd	r4, [sp, #-16]!
   1b914:	mov	r5, r0
   1b918:	mov	r4, r0
   1b91c:	ldr	r3, [r0, #4]
   1b920:	ldr	r0, [r5], #8
   1b924:	str	r6, [sp, #8]
   1b928:	str	lr, [sp, #12]
   1b92c:	lsl	r6, r3, #1
   1b930:	cmp	r0, r5
   1b934:	beq	1b940 <lchmod@@Base+0x42f8>
   1b938:	bl	13688 <__assert_fail@plt+0x1dbc>
   1b93c:	ldr	r3, [r4, #4]
   1b940:	cmp	r6, r3
   1b944:	bcc	1b97c <lchmod@@Base+0x4334>
   1b948:	mov	r0, r6
   1b94c:	bl	1d804 <lchmod@@Base+0x61bc>
   1b950:	cmp	r0, #0
   1b954:	mov	r3, r0
   1b958:	mov	r2, r0
   1b95c:	beq	1b998 <lchmod@@Base+0x4350>
   1b960:	mov	r2, #1
   1b964:	stm	r4, {r3, r6}
   1b968:	mov	r0, r2
   1b96c:	ldrd	r4, [sp]
   1b970:	ldr	r6, [sp, #8]
   1b974:	add	sp, sp, #12
   1b978:	pop	{pc}		; (ldr pc, [sp], #4)
   1b97c:	bl	1171c <__errno_location@plt>
   1b980:	mov	r1, #12
   1b984:	mov	r3, r5
   1b988:	mov	r6, #1024	; 0x400
   1b98c:	mov	r2, #0
   1b990:	str	r1, [r0]
   1b994:	b	1b964 <lchmod@@Base+0x431c>
   1b998:	mov	r3, r5
   1b99c:	mov	r6, #1024	; 0x400
   1b9a0:	b	1b964 <lchmod@@Base+0x431c>
   1b9a4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b9a8:	mov	r5, r0
   1b9ac:	mov	r4, r0
   1b9b0:	ldr	r3, [r0, #4]
   1b9b4:	strd	r6, [sp, #8]
   1b9b8:	ldr	r7, [r5], #8
   1b9bc:	str	r8, [sp, #16]
   1b9c0:	str	lr, [sp, #20]
   1b9c4:	lsl	r6, r3, #1
   1b9c8:	cmp	r7, r5
   1b9cc:	beq	1ba10 <lchmod@@Base+0x43c8>
   1b9d0:	cmp	r3, r6
   1b9d4:	bhi	1ba34 <lchmod@@Base+0x43ec>
   1b9d8:	mov	r0, r7
   1b9dc:	mov	r1, r6
   1b9e0:	bl	1d840 <lchmod@@Base+0x61f8>
   1b9e4:	subs	r8, r0, #0
   1b9e8:	ldreq	r7, [r4]
   1b9ec:	beq	1ba40 <lchmod@@Base+0x43f8>
   1b9f0:	mov	r0, #1
   1b9f4:	str	r8, [r4]
   1b9f8:	str	r6, [r4, #4]
   1b9fc:	ldrd	r4, [sp]
   1ba00:	ldrd	r6, [sp, #8]
   1ba04:	ldr	r8, [sp, #16]
   1ba08:	add	sp, sp, #20
   1ba0c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba10:	mov	r0, r6
   1ba14:	bl	1d804 <lchmod@@Base+0x61bc>
   1ba18:	subs	r8, r0, #0
   1ba1c:	moveq	r0, r8
   1ba20:	beq	1b9fc <lchmod@@Base+0x43b4>
   1ba24:	mov	r1, r7
   1ba28:	ldr	r2, [r4, #4]
   1ba2c:	bl	11530 <memcpy@plt>
   1ba30:	b	1b9f0 <lchmod@@Base+0x43a8>
   1ba34:	bl	1171c <__errno_location@plt>
   1ba38:	mov	r3, #12
   1ba3c:	str	r3, [r0]
   1ba40:	mov	r0, r7
   1ba44:	bl	13688 <__assert_fail@plt+0x1dbc>
   1ba48:	mov	r3, #1024	; 0x400
   1ba4c:	mov	r0, #0
   1ba50:	str	r5, [r4]
   1ba54:	str	r3, [r4, #4]
   1ba58:	b	1b9fc <lchmod@@Base+0x43b4>
   1ba5c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1ba60:	mov	r5, r1
   1ba64:	strd	r6, [sp, #8]
   1ba68:	str	r8, [sp, #16]
   1ba6c:	str	lr, [sp, #20]
   1ba70:	bl	116d4 <getfilecon@plt>
   1ba74:	subs	r4, r0, #0
   1ba78:	beq	1bad8 <lchmod@@Base+0x4490>
   1ba7c:	cmp	r4, #10
   1ba80:	beq	1ba9c <lchmod@@Base+0x4454>
   1ba84:	mov	r0, r4
   1ba88:	ldrd	r4, [sp]
   1ba8c:	ldrd	r6, [sp, #8]
   1ba90:	ldr	r8, [sp, #16]
   1ba94:	add	sp, sp, #20
   1ba98:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba9c:	ldr	r6, [r5]
   1baa0:	movw	r1, #61008	; 0xee50
   1baa4:	movt	r1, #1
   1baa8:	mov	r0, r6
   1baac:	bl	114d0 <strcmp@plt>
   1bab0:	subs	r7, r0, #0
   1bab4:	bne	1ba84 <lchmod@@Base+0x443c>
   1bab8:	mov	r0, r6
   1babc:	mvn	r4, #0
   1bac0:	bl	1180c <freecon@plt>
   1bac4:	str	r7, [r5]
   1bac8:	bl	1171c <__errno_location@plt>
   1bacc:	mov	r3, #61	; 0x3d
   1bad0:	str	r3, [r0]
   1bad4:	b	1ba84 <lchmod@@Base+0x443c>
   1bad8:	bl	1171c <__errno_location@plt>
   1badc:	mov	r3, #95	; 0x5f
   1bae0:	mvn	r4, #0
   1bae4:	str	r3, [r0]
   1bae8:	b	1ba84 <lchmod@@Base+0x443c>
   1baec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1baf0:	mov	r5, r1
   1baf4:	strd	r6, [sp, #8]
   1baf8:	str	r8, [sp, #16]
   1bafc:	str	lr, [sp, #20]
   1bb00:	bl	11650 <lgetfilecon@plt>
   1bb04:	subs	r4, r0, #0
   1bb08:	beq	1bb68 <lchmod@@Base+0x4520>
   1bb0c:	cmp	r4, #10
   1bb10:	beq	1bb2c <lchmod@@Base+0x44e4>
   1bb14:	mov	r0, r4
   1bb18:	ldrd	r4, [sp]
   1bb1c:	ldrd	r6, [sp, #8]
   1bb20:	ldr	r8, [sp, #16]
   1bb24:	add	sp, sp, #20
   1bb28:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb2c:	ldr	r6, [r5]
   1bb30:	movw	r1, #61008	; 0xee50
   1bb34:	movt	r1, #1
   1bb38:	mov	r0, r6
   1bb3c:	bl	114d0 <strcmp@plt>
   1bb40:	subs	r7, r0, #0
   1bb44:	bne	1bb14 <lchmod@@Base+0x44cc>
   1bb48:	mov	r0, r6
   1bb4c:	mvn	r4, #0
   1bb50:	bl	1180c <freecon@plt>
   1bb54:	str	r7, [r5]
   1bb58:	bl	1171c <__errno_location@plt>
   1bb5c:	mov	r3, #61	; 0x3d
   1bb60:	str	r3, [r0]
   1bb64:	b	1bb14 <lchmod@@Base+0x44cc>
   1bb68:	bl	1171c <__errno_location@plt>
   1bb6c:	mov	r3, #95	; 0x5f
   1bb70:	mvn	r4, #0
   1bb74:	str	r3, [r0]
   1bb78:	b	1bb14 <lchmod@@Base+0x44cc>
   1bb7c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1bb80:	mov	r5, r1
   1bb84:	strd	r6, [sp, #8]
   1bb88:	str	r8, [sp, #16]
   1bb8c:	str	lr, [sp, #20]
   1bb90:	bl	1159c <fgetfilecon@plt>
   1bb94:	subs	r4, r0, #0
   1bb98:	beq	1bbf8 <lchmod@@Base+0x45b0>
   1bb9c:	cmp	r4, #10
   1bba0:	beq	1bbbc <lchmod@@Base+0x4574>
   1bba4:	mov	r0, r4
   1bba8:	ldrd	r4, [sp]
   1bbac:	ldrd	r6, [sp, #8]
   1bbb0:	ldr	r8, [sp, #16]
   1bbb4:	add	sp, sp, #20
   1bbb8:	pop	{pc}		; (ldr pc, [sp], #4)
   1bbbc:	ldr	r6, [r5]
   1bbc0:	movw	r1, #61008	; 0xee50
   1bbc4:	movt	r1, #1
   1bbc8:	mov	r0, r6
   1bbcc:	bl	114d0 <strcmp@plt>
   1bbd0:	subs	r7, r0, #0
   1bbd4:	bne	1bba4 <lchmod@@Base+0x455c>
   1bbd8:	mov	r0, r6
   1bbdc:	mvn	r4, #0
   1bbe0:	bl	1180c <freecon@plt>
   1bbe4:	str	r7, [r5]
   1bbe8:	bl	1171c <__errno_location@plt>
   1bbec:	mov	r3, #61	; 0x3d
   1bbf0:	str	r3, [r0]
   1bbf4:	b	1bba4 <lchmod@@Base+0x455c>
   1bbf8:	bl	1171c <__errno_location@plt>
   1bbfc:	mov	r3, #95	; 0x5f
   1bc00:	mvn	r4, #0
   1bc04:	str	r3, [r0]
   1bc08:	b	1bba4 <lchmod@@Base+0x455c>
   1bc0c:	cmp	r0, #2
   1bc10:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1bc14:	mov	r4, r0
   1bc18:	strd	r6, [sp, #8]
   1bc1c:	str	r8, [sp, #16]
   1bc20:	str	lr, [sp, #20]
   1bc24:	bls	1bc40 <lchmod@@Base+0x45f8>
   1bc28:	mov	r0, r4
   1bc2c:	ldrd	r4, [sp]
   1bc30:	ldrd	r6, [sp, #8]
   1bc34:	ldr	r8, [sp, #16]
   1bc38:	add	sp, sp, #20
   1bc3c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bc40:	bl	1e048 <lchmod@@Base+0x6a00>
   1bc44:	mov	r7, r0
   1bc48:	bl	1171c <__errno_location@plt>
   1bc4c:	mov	r5, r0
   1bc50:	mov	r0, r4
   1bc54:	ldr	r6, [r5]
   1bc58:	mov	r4, r7
   1bc5c:	bl	11884 <close@plt>
   1bc60:	str	r6, [r5]
   1bc64:	b	1bc28 <lchmod@@Base+0x45e0>
   1bc68:	cmp	r1, #0
   1bc6c:	strd	r4, [sp, #-16]!
   1bc70:	mov	ip, r3
   1bc74:	str	r6, [sp, #8]
   1bc78:	mov	r4, r0
   1bc7c:	str	lr, [sp, #12]
   1bc80:	sub	sp, sp, #32
   1bc84:	ldr	r5, [sp, #48]	; 0x30
   1bc88:	ldr	r6, [sp, #52]	; 0x34
   1bc8c:	beq	1bdd0 <lchmod@@Base+0x4788>
   1bc90:	mov	r3, r1
   1bc94:	mov	r1, #1
   1bc98:	stm	sp, {r2, ip}
   1bc9c:	movw	r2, #61020	; 0xee5c
   1bca0:	movt	r2, #1
   1bca4:	bl	11764 <__fprintf_chk@plt>
   1bca8:	mov	r2, #5
   1bcac:	movw	r1, #61040	; 0xee70
   1bcb0:	movt	r1, #1
   1bcb4:	mov	r0, #0
   1bcb8:	bl	11578 <dcgettext@plt>
   1bcbc:	movw	ip, #2022	; 0x7e6
   1bcc0:	mov	r3, r0
   1bcc4:	mov	r1, #1
   1bcc8:	movw	r2, #61768	; 0xf148
   1bccc:	movt	r2, #1
   1bcd0:	mov	r0, r4
   1bcd4:	str	ip, [sp]
   1bcd8:	bl	11764 <__fprintf_chk@plt>
   1bcdc:	mov	r1, r4
   1bce0:	mov	r0, #10
   1bce4:	bl	1156c <fputc_unlocked@plt>
   1bce8:	mov	r2, #5
   1bcec:	movw	r1, #61044	; 0xee74
   1bcf0:	movt	r1, #1
   1bcf4:	mov	r0, #0
   1bcf8:	bl	11578 <dcgettext@plt>
   1bcfc:	mov	r2, r0
   1bd00:	mov	r1, #1
   1bd04:	movw	r3, #61216	; 0xef20
   1bd08:	movt	r3, #1
   1bd0c:	mov	r0, r4
   1bd10:	bl	11764 <__fprintf_chk@plt>
   1bd14:	mov	r1, r4
   1bd18:	mov	r0, #10
   1bd1c:	bl	1156c <fputc_unlocked@plt>
   1bd20:	cmp	r6, #9
   1bd24:	ldrls	pc, [pc, r6, lsl #2]
   1bd28:	b	1c03c <lchmod@@Base+0x49f4>
   1bd2c:			; <UNDEFINED> instruction: 0x0001bdbc
   1bd30:	andeq	fp, r1, ip, ror #27
   1bd34:	andeq	fp, r1, r8, lsr #28
   1bd38:	andeq	fp, r1, r8, ror #28
   1bd3c:			; <UNDEFINED> instruction: 0x0001beb0
   1bd40:	andeq	fp, r1, r8, ror #29
   1bd44:	andeq	fp, r1, r0, lsr pc
   1bd48:	andeq	fp, r1, r4, lsl #31
   1bd4c:	ldrdeq	fp, [r1], -ip
   1bd50:	andeq	fp, r1, r4, asr sp
   1bd54:	movw	r1, #61520	; 0xf050
   1bd58:	movt	r1, #1
   1bd5c:	mov	r2, #5
   1bd60:	mov	r0, #0
   1bd64:	bl	11578 <dcgettext@plt>
   1bd68:	ldr	lr, [r5, #4]
   1bd6c:	mov	r2, r0
   1bd70:	mov	r1, #1
   1bd74:	mov	r0, r4
   1bd78:	ldr	r3, [r5, #8]
   1bd7c:	ldr	ip, [r5, #32]
   1bd80:	str	lr, [sp]
   1bd84:	ldr	lr, [r5, #12]
   1bd88:	str	ip, [sp, #28]
   1bd8c:	ldr	ip, [r5, #28]
   1bd90:	str	r3, [sp, #4]
   1bd94:	ldr	r3, [r5, #16]
   1bd98:	str	lr, [sp, #8]
   1bd9c:	ldr	lr, [r5, #20]
   1bda0:	str	ip, [sp, #24]
   1bda4:	ldr	ip, [r5, #24]
   1bda8:	str	r3, [sp, #12]
   1bdac:	ldr	r3, [r5]
   1bdb0:	str	lr, [sp, #16]
   1bdb4:	str	ip, [sp, #20]
   1bdb8:	bl	11764 <__fprintf_chk@plt>
   1bdbc:	add	sp, sp, #32
   1bdc0:	ldrd	r4, [sp]
   1bdc4:	ldr	r6, [sp, #8]
   1bdc8:	add	sp, sp, #12
   1bdcc:	pop	{pc}		; (ldr pc, [sp], #4)
   1bdd0:	mov	r3, r2
   1bdd4:	mov	r1, #1
   1bdd8:	str	ip, [sp]
   1bddc:	movw	r2, #61032	; 0xee68
   1bde0:	movt	r2, #1
   1bde4:	bl	11764 <__fprintf_chk@plt>
   1bde8:	b	1bca8 <lchmod@@Base+0x4660>
   1bdec:	mov	r2, #5
   1bdf0:	movw	r1, #61252	; 0xef44
   1bdf4:	movt	r1, #1
   1bdf8:	mov	r0, #0
   1bdfc:	bl	11578 <dcgettext@plt>
   1be00:	ldr	r3, [r5]
   1be04:	mov	r2, r0
   1be08:	mov	r1, #1
   1be0c:	mov	r0, r4
   1be10:	add	sp, sp, #32
   1be14:	ldrd	r4, [sp]
   1be18:	ldr	r6, [sp, #8]
   1be1c:	ldr	lr, [sp, #12]
   1be20:	add	sp, sp, #16
   1be24:	b	11764 <__fprintf_chk@plt>
   1be28:	mov	r2, #5
   1be2c:	movw	r1, #61268	; 0xef54
   1be30:	movt	r1, #1
   1be34:	mov	r0, #0
   1be38:	bl	11578 <dcgettext@plt>
   1be3c:	ldm	r5, {r3, ip}
   1be40:	mov	r2, r0
   1be44:	mov	r1, #1
   1be48:	mov	r0, r4
   1be4c:	str	ip, [sp, #48]	; 0x30
   1be50:	add	sp, sp, #32
   1be54:	ldrd	r4, [sp]
   1be58:	ldr	r6, [sp, #8]
   1be5c:	ldr	lr, [sp, #12]
   1be60:	add	sp, sp, #16
   1be64:	b	11764 <__fprintf_chk@plt>
   1be68:	mov	r2, #5
   1be6c:	movw	r1, #61292	; 0xef6c
   1be70:	movt	r1, #1
   1be74:	mov	r0, #0
   1be78:	bl	11578 <dcgettext@plt>
   1be7c:	ldm	r5, {r3, lr}
   1be80:	mov	r2, r0
   1be84:	mov	r1, #1
   1be88:	mov	r0, r4
   1be8c:	ldr	ip, [r5, #8]
   1be90:	str	lr, [sp, #48]	; 0x30
   1be94:	str	ip, [sp, #52]	; 0x34
   1be98:	add	sp, sp, #32
   1be9c:	ldrd	r4, [sp]
   1bea0:	ldr	r6, [sp, #8]
   1bea4:	ldr	lr, [sp, #12]
   1bea8:	add	sp, sp, #16
   1beac:	b	11764 <__fprintf_chk@plt>
   1beb0:	mov	r2, #5
   1beb4:	movw	r1, #61320	; 0xef88
   1beb8:	movt	r1, #1
   1bebc:	mov	r0, #0
   1bec0:	bl	11578 <dcgettext@plt>
   1bec4:	ldmib	r5, {r3, ip, lr}
   1bec8:	mov	r2, r0
   1becc:	mov	r1, #1
   1bed0:	mov	r0, r4
   1bed4:	str	r3, [sp]
   1bed8:	ldr	r3, [r5]
   1bedc:	stmib	sp, {ip, lr}
   1bee0:	bl	11764 <__fprintf_chk@plt>
   1bee4:	b	1bdbc <lchmod@@Base+0x4774>
   1bee8:	mov	r2, #5
   1beec:	movw	r1, #61352	; 0xefa8
   1bef0:	movt	r1, #1
   1bef4:	mov	r0, #0
   1bef8:	bl	11578 <dcgettext@plt>
   1befc:	ldmib	r5, {ip, lr}
   1bf00:	mov	r2, r0
   1bf04:	mov	r1, #1
   1bf08:	mov	r0, r4
   1bf0c:	ldr	r3, [r5, #16]
   1bf10:	str	ip, [sp]
   1bf14:	ldr	ip, [r5, #12]
   1bf18:	str	r3, [sp, #12]
   1bf1c:	ldr	r3, [r5]
   1bf20:	str	lr, [sp, #4]
   1bf24:	str	ip, [sp, #8]
   1bf28:	bl	11764 <__fprintf_chk@plt>
   1bf2c:	b	1bdbc <lchmod@@Base+0x4774>
   1bf30:	mov	r2, #5
   1bf34:	movw	r1, #61388	; 0xefcc
   1bf38:	movt	r1, #1
   1bf3c:	mov	r0, #0
   1bf40:	bl	11578 <dcgettext@plt>
   1bf44:	ldr	lr, [r5, #4]
   1bf48:	mov	r2, r0
   1bf4c:	mov	r1, #1
   1bf50:	mov	r0, r4
   1bf54:	ldr	r3, [r5, #8]
   1bf58:	ldr	ip, [r5, #20]
   1bf5c:	str	lr, [sp]
   1bf60:	ldr	lr, [r5, #12]
   1bf64:	str	ip, [sp, #16]
   1bf68:	ldr	ip, [r5, #16]
   1bf6c:	str	r3, [sp, #4]
   1bf70:	ldr	r3, [r5]
   1bf74:	str	lr, [sp, #8]
   1bf78:	str	ip, [sp, #12]
   1bf7c:	bl	11764 <__fprintf_chk@plt>
   1bf80:	b	1bdbc <lchmod@@Base+0x4774>
   1bf84:	mov	r2, #5
   1bf88:	movw	r1, #61428	; 0xeff4
   1bf8c:	movt	r1, #1
   1bf90:	mov	r0, #0
   1bf94:	bl	11578 <dcgettext@plt>
   1bf98:	ldmib	r5, {r3, ip}
   1bf9c:	mov	r2, r0
   1bfa0:	mov	r1, #1
   1bfa4:	mov	r0, r4
   1bfa8:	ldr	lr, [r5, #24]
   1bfac:	str	r3, [sp]
   1bfb0:	ldr	r3, [r5, #12]
   1bfb4:	str	lr, [sp, #20]
   1bfb8:	ldr	lr, [r5, #20]
   1bfbc:	str	ip, [sp, #4]
   1bfc0:	ldr	ip, [r5, #16]
   1bfc4:	str	r3, [sp, #8]
   1bfc8:	ldr	r3, [r5]
   1bfcc:	str	ip, [sp, #12]
   1bfd0:	str	lr, [sp, #16]
   1bfd4:	bl	11764 <__fprintf_chk@plt>
   1bfd8:	b	1bdbc <lchmod@@Base+0x4774>
   1bfdc:	mov	r2, #5
   1bfe0:	movw	r1, #61472	; 0xf020
   1bfe4:	movt	r1, #1
   1bfe8:	mov	r0, #0
   1bfec:	bl	11578 <dcgettext@plt>
   1bff0:	ldmib	r5, {ip, lr}
   1bff4:	mov	r2, r0
   1bff8:	mov	r1, #1
   1bffc:	mov	r0, r4
   1c000:	ldr	r3, [r5, #28]
   1c004:	str	ip, [sp]
   1c008:	ldr	ip, [r5, #12]
   1c00c:	str	r3, [sp, #24]
   1c010:	ldr	r3, [r5, #24]
   1c014:	str	lr, [sp, #4]
   1c018:	ldr	lr, [r5, #16]
   1c01c:	str	ip, [sp, #8]
   1c020:	ldr	ip, [r5, #20]
   1c024:	str	r3, [sp, #20]
   1c028:	ldr	r3, [r5]
   1c02c:	str	lr, [sp, #12]
   1c030:	str	ip, [sp, #16]
   1c034:	bl	11764 <__fprintf_chk@plt>
   1c038:	b	1bdbc <lchmod@@Base+0x4774>
   1c03c:	movw	r1, #61572	; 0xf084
   1c040:	movt	r1, #1
   1c044:	b	1bd5c <lchmod@@Base+0x4714>
   1c048:	strd	r4, [sp, #-12]!
   1c04c:	str	lr, [sp, #8]
   1c050:	sub	sp, sp, #12
   1c054:	ldr	r5, [sp, #24]
   1c058:	ldr	ip, [r5]
   1c05c:	cmp	ip, #0
   1c060:	beq	1c07c <lchmod@@Base+0x4a34>
   1c064:	mov	lr, r5
   1c068:	mov	ip, #0
   1c06c:	ldr	r4, [lr, #4]!
   1c070:	add	ip, ip, #1
   1c074:	cmp	r4, #0
   1c078:	bne	1c06c <lchmod@@Base+0x4a24>
   1c07c:	stm	sp, {r5, ip}
   1c080:	bl	1bc68 <lchmod@@Base+0x4620>
   1c084:	add	sp, sp, #12
   1c088:	ldrd	r4, [sp]
   1c08c:	add	sp, sp, #8
   1c090:	pop	{pc}		; (ldr pc, [sp], #4)
   1c094:	push	{lr}		; (str lr, [sp, #-4]!)
   1c098:	sub	sp, sp, #52	; 0x34
   1c09c:	ldr	ip, [sp, #56]	; 0x38
   1c0a0:	ldr	lr, [ip]
   1c0a4:	cmp	lr, #0
   1c0a8:	str	lr, [sp, #8]
   1c0ac:	beq	1c144 <lchmod@@Base+0x4afc>
   1c0b0:	ldr	lr, [ip, #4]
   1c0b4:	cmp	lr, #0
   1c0b8:	str	lr, [sp, #12]
   1c0bc:	beq	1c158 <lchmod@@Base+0x4b10>
   1c0c0:	ldr	lr, [ip, #8]
   1c0c4:	cmp	lr, #0
   1c0c8:	str	lr, [sp, #16]
   1c0cc:	beq	1c160 <lchmod@@Base+0x4b18>
   1c0d0:	ldr	lr, [ip, #12]
   1c0d4:	cmp	lr, #0
   1c0d8:	str	lr, [sp, #20]
   1c0dc:	beq	1c168 <lchmod@@Base+0x4b20>
   1c0e0:	ldr	lr, [ip, #16]
   1c0e4:	cmp	lr, #0
   1c0e8:	str	lr, [sp, #24]
   1c0ec:	beq	1c170 <lchmod@@Base+0x4b28>
   1c0f0:	ldr	lr, [ip, #20]
   1c0f4:	cmp	lr, #0
   1c0f8:	str	lr, [sp, #28]
   1c0fc:	beq	1c178 <lchmod@@Base+0x4b30>
   1c100:	ldr	lr, [ip, #24]
   1c104:	cmp	lr, #0
   1c108:	str	lr, [sp, #32]
   1c10c:	beq	1c180 <lchmod@@Base+0x4b38>
   1c110:	ldr	lr, [ip, #28]
   1c114:	cmp	lr, #0
   1c118:	str	lr, [sp, #36]	; 0x24
   1c11c:	beq	1c188 <lchmod@@Base+0x4b40>
   1c120:	ldr	lr, [ip, #32]
   1c124:	cmp	lr, #0
   1c128:	str	lr, [sp, #40]	; 0x28
   1c12c:	beq	1c190 <lchmod@@Base+0x4b48>
   1c130:	ldr	ip, [ip, #36]	; 0x24
   1c134:	cmp	ip, #0
   1c138:	str	ip, [sp, #44]	; 0x2c
   1c13c:	movne	lr, #10
   1c140:	moveq	lr, #9
   1c144:	add	ip, sp, #8
   1c148:	stm	sp, {ip, lr}
   1c14c:	bl	1bc68 <lchmod@@Base+0x4620>
   1c150:	add	sp, sp, #52	; 0x34
   1c154:	pop	{pc}		; (ldr pc, [sp], #4)
   1c158:	mov	lr, #1
   1c15c:	b	1c144 <lchmod@@Base+0x4afc>
   1c160:	mov	lr, #2
   1c164:	b	1c144 <lchmod@@Base+0x4afc>
   1c168:	mov	lr, #3
   1c16c:	b	1c144 <lchmod@@Base+0x4afc>
   1c170:	mov	lr, #4
   1c174:	b	1c144 <lchmod@@Base+0x4afc>
   1c178:	mov	lr, #5
   1c17c:	b	1c144 <lchmod@@Base+0x4afc>
   1c180:	mov	lr, #6
   1c184:	b	1c144 <lchmod@@Base+0x4afc>
   1c188:	mov	lr, #7
   1c18c:	b	1c144 <lchmod@@Base+0x4afc>
   1c190:	mov	lr, #8
   1c194:	b	1c144 <lchmod@@Base+0x4afc>
   1c198:	push	{r3}		; (str r3, [sp, #-4]!)
   1c19c:	push	{lr}		; (str lr, [sp, #-4]!)
   1c1a0:	sub	sp, sp, #56	; 0x38
   1c1a4:	ldr	ip, [sp, #64]	; 0x40
   1c1a8:	add	r3, sp, #64	; 0x40
   1c1ac:	str	r3, [sp, #12]
   1c1b0:	cmp	ip, #0
   1c1b4:	str	ip, [sp, #16]
   1c1b8:	beq	1c250 <lchmod@@Base+0x4c08>
   1c1bc:	ldr	ip, [sp, #68]	; 0x44
   1c1c0:	cmp	ip, #0
   1c1c4:	str	ip, [sp, #20]
   1c1c8:	beq	1c274 <lchmod@@Base+0x4c2c>
   1c1cc:	ldr	ip, [sp, #72]	; 0x48
   1c1d0:	cmp	ip, #0
   1c1d4:	str	ip, [sp, #24]
   1c1d8:	beq	1c27c <lchmod@@Base+0x4c34>
   1c1dc:	ldr	ip, [sp, #76]	; 0x4c
   1c1e0:	cmp	ip, #0
   1c1e4:	str	ip, [sp, #28]
   1c1e8:	beq	1c284 <lchmod@@Base+0x4c3c>
   1c1ec:	ldr	ip, [sp, #80]	; 0x50
   1c1f0:	cmp	ip, #0
   1c1f4:	str	ip, [sp, #32]
   1c1f8:	beq	1c28c <lchmod@@Base+0x4c44>
   1c1fc:	ldr	ip, [sp, #84]	; 0x54
   1c200:	cmp	ip, #0
   1c204:	str	ip, [sp, #36]	; 0x24
   1c208:	beq	1c294 <lchmod@@Base+0x4c4c>
   1c20c:	ldr	ip, [sp, #88]	; 0x58
   1c210:	cmp	ip, #0
   1c214:	str	ip, [sp, #40]	; 0x28
   1c218:	beq	1c29c <lchmod@@Base+0x4c54>
   1c21c:	ldr	ip, [sp, #92]	; 0x5c
   1c220:	cmp	ip, #0
   1c224:	str	ip, [sp, #44]	; 0x2c
   1c228:	beq	1c2a4 <lchmod@@Base+0x4c5c>
   1c22c:	ldr	ip, [sp, #96]	; 0x60
   1c230:	cmp	ip, #0
   1c234:	str	ip, [sp, #48]	; 0x30
   1c238:	beq	1c2ac <lchmod@@Base+0x4c64>
   1c23c:	ldr	r3, [sp, #100]	; 0x64
   1c240:	cmp	r3, #0
   1c244:	str	r3, [sp, #52]	; 0x34
   1c248:	movne	ip, #10
   1c24c:	moveq	ip, #9
   1c250:	ldr	r3, [sp, #60]	; 0x3c
   1c254:	add	lr, sp, #16
   1c258:	str	lr, [sp]
   1c25c:	str	ip, [sp, #4]
   1c260:	bl	1bc68 <lchmod@@Base+0x4620>
   1c264:	add	sp, sp, #56	; 0x38
   1c268:	pop	{lr}		; (ldr lr, [sp], #4)
   1c26c:	add	sp, sp, #4
   1c270:	bx	lr
   1c274:	mov	ip, #1
   1c278:	b	1c250 <lchmod@@Base+0x4c08>
   1c27c:	mov	ip, #2
   1c280:	b	1c250 <lchmod@@Base+0x4c08>
   1c284:	mov	ip, #3
   1c288:	b	1c250 <lchmod@@Base+0x4c08>
   1c28c:	mov	ip, #4
   1c290:	b	1c250 <lchmod@@Base+0x4c08>
   1c294:	mov	ip, #5
   1c298:	b	1c250 <lchmod@@Base+0x4c08>
   1c29c:	mov	ip, #6
   1c2a0:	b	1c250 <lchmod@@Base+0x4c08>
   1c2a4:	mov	ip, #7
   1c2a8:	b	1c250 <lchmod@@Base+0x4c08>
   1c2ac:	mov	ip, #8
   1c2b0:	b	1c250 <lchmod@@Base+0x4c08>
   1c2b4:	movw	r3, #484	; 0x1e4
   1c2b8:	movt	r3, #3
   1c2bc:	str	r4, [sp, #-8]!
   1c2c0:	mov	r0, #10
   1c2c4:	ldr	r1, [r3]
   1c2c8:	str	lr, [sp, #4]
   1c2cc:	bl	1156c <fputc_unlocked@plt>
   1c2d0:	mov	r2, #5
   1c2d4:	movw	r1, #61632	; 0xf0c0
   1c2d8:	movt	r1, #1
   1c2dc:	mov	r0, #0
   1c2e0:	bl	11578 <dcgettext@plt>
   1c2e4:	mov	r1, r0
   1c2e8:	movw	r2, #61652	; 0xf0d4
   1c2ec:	movt	r2, #1
   1c2f0:	mov	r0, #1
   1c2f4:	bl	1174c <__printf_chk@plt>
   1c2f8:	mov	r2, #5
   1c2fc:	movw	r1, #61676	; 0xf0ec
   1c300:	movt	r1, #1
   1c304:	mov	r0, #0
   1c308:	bl	11578 <dcgettext@plt>
   1c30c:	mov	r1, r0
   1c310:	movw	r3, #59576	; 0xe8b8
   1c314:	movt	r3, #1
   1c318:	movw	r2, #59616	; 0xe8e0
   1c31c:	movt	r2, #1
   1c320:	mov	r0, #1
   1c324:	bl	1174c <__printf_chk@plt>
   1c328:	mov	r2, #5
   1c32c:	movw	r1, #61696	; 0xf100
   1c330:	movt	r1, #1
   1c334:	mov	r0, #0
   1c338:	bl	11578 <dcgettext@plt>
   1c33c:	mov	r1, r0
   1c340:	movw	r2, #61736	; 0xf128
   1c344:	movt	r2, #1
   1c348:	mov	r0, #1
   1c34c:	ldr	r4, [sp]
   1c350:	ldr	lr, [sp, #4]
   1c354:	add	sp, sp, #8
   1c358:	b	1174c <__printf_chk@plt>
   1c35c:	strd	r4, [sp, #-16]!
   1c360:	mov	r4, r0
   1c364:	mov	r5, r2
   1c368:	str	r6, [sp, #8]
   1c36c:	mov	r6, r1
   1c370:	str	lr, [sp, #12]
   1c374:	bl	1e010 <lchmod@@Base+0x69c8>
   1c378:	cmp	r0, #0
   1c37c:	beq	1c390 <lchmod@@Base+0x4d48>
   1c380:	ldrd	r4, [sp]
   1c384:	ldr	r6, [sp, #8]
   1c388:	add	sp, sp, #12
   1c38c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c390:	cmp	r4, #0
   1c394:	beq	1c3a4 <lchmod@@Base+0x4d5c>
   1c398:	cmp	r6, #0
   1c39c:	cmpne	r5, #0
   1c3a0:	beq	1c380 <lchmod@@Base+0x4d38>
   1c3a4:	bl	1c960 <lchmod@@Base+0x5318>
   1c3a8:	str	r4, [sp, #-8]!
   1c3ac:	str	lr, [sp, #4]
   1c3b0:	bl	1d804 <lchmod@@Base+0x61bc>
   1c3b4:	cmp	r0, #0
   1c3b8:	beq	1c3c8 <lchmod@@Base+0x4d80>
   1c3bc:	ldr	r4, [sp]
   1c3c0:	add	sp, sp, #4
   1c3c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c3c8:	bl	1c960 <lchmod@@Base+0x5318>
   1c3cc:	str	r4, [sp, #-8]!
   1c3d0:	str	lr, [sp, #4]
   1c3d4:	bl	1d804 <lchmod@@Base+0x61bc>
   1c3d8:	cmp	r0, #0
   1c3dc:	beq	1c3ec <lchmod@@Base+0x4da4>
   1c3e0:	ldr	r4, [sp]
   1c3e4:	add	sp, sp, #4
   1c3e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c3ec:	bl	1c960 <lchmod@@Base+0x5318>
   1c3f0:	str	r4, [sp, #-8]!
   1c3f4:	str	lr, [sp, #4]
   1c3f8:	bl	1d804 <lchmod@@Base+0x61bc>
   1c3fc:	cmp	r0, #0
   1c400:	beq	1c410 <lchmod@@Base+0x4dc8>
   1c404:	ldr	r4, [sp]
   1c408:	add	sp, sp, #4
   1c40c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c410:	bl	1c960 <lchmod@@Base+0x5318>
   1c414:	strd	r4, [sp, #-16]!
   1c418:	mov	r5, r0
   1c41c:	mov	r4, r1
   1c420:	str	r6, [sp, #8]
   1c424:	str	lr, [sp, #12]
   1c428:	bl	1d840 <lchmod@@Base+0x61f8>
   1c42c:	cmp	r0, #0
   1c430:	beq	1c444 <lchmod@@Base+0x4dfc>
   1c434:	ldrd	r4, [sp]
   1c438:	ldr	r6, [sp, #8]
   1c43c:	add	sp, sp, #12
   1c440:	pop	{pc}		; (ldr pc, [sp], #4)
   1c444:	adds	r4, r4, #0
   1c448:	movne	r4, #1
   1c44c:	cmp	r5, #0
   1c450:	moveq	r4, #1
   1c454:	cmp	r4, #0
   1c458:	beq	1c434 <lchmod@@Base+0x4dec>
   1c45c:	bl	1c960 <lchmod@@Base+0x5318>
   1c460:	cmp	r1, #0
   1c464:	orreq	r1, r1, #1
   1c468:	str	r4, [sp, #-8]!
   1c46c:	str	lr, [sp, #4]
   1c470:	bl	1d840 <lchmod@@Base+0x61f8>
   1c474:	cmp	r0, #0
   1c478:	beq	1c488 <lchmod@@Base+0x4e40>
   1c47c:	ldr	r4, [sp]
   1c480:	add	sp, sp, #4
   1c484:	pop	{pc}		; (ldr pc, [sp], #4)
   1c488:	bl	1c960 <lchmod@@Base+0x5318>
   1c48c:	strd	r4, [sp, #-16]!
   1c490:	mov	r4, r0
   1c494:	mov	r5, r2
   1c498:	str	r6, [sp, #8]
   1c49c:	mov	r6, r1
   1c4a0:	str	lr, [sp, #12]
   1c4a4:	bl	1e010 <lchmod@@Base+0x69c8>
   1c4a8:	cmp	r0, #0
   1c4ac:	beq	1c4c0 <lchmod@@Base+0x4e78>
   1c4b0:	ldrd	r4, [sp]
   1c4b4:	ldr	r6, [sp, #8]
   1c4b8:	add	sp, sp, #12
   1c4bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c4c0:	cmp	r4, #0
   1c4c4:	beq	1c4d4 <lchmod@@Base+0x4e8c>
   1c4c8:	cmp	r6, #0
   1c4cc:	cmpne	r5, #0
   1c4d0:	beq	1c4b0 <lchmod@@Base+0x4e68>
   1c4d4:	bl	1c960 <lchmod@@Base+0x5318>
   1c4d8:	cmp	r2, #0
   1c4dc:	cmpne	r1, #0
   1c4e0:	str	r4, [sp, #-8]!
   1c4e4:	moveq	r2, #1
   1c4e8:	str	lr, [sp, #4]
   1c4ec:	moveq	r1, r2
   1c4f0:	bl	1e010 <lchmod@@Base+0x69c8>
   1c4f4:	cmp	r0, #0
   1c4f8:	beq	1c508 <lchmod@@Base+0x4ec0>
   1c4fc:	ldr	r4, [sp]
   1c500:	add	sp, sp, #4
   1c504:	pop	{pc}		; (ldr pc, [sp], #4)
   1c508:	bl	1c960 <lchmod@@Base+0x5318>
   1c50c:	mov	r2, r1
   1c510:	mov	r1, r0
   1c514:	str	r4, [sp, #-8]!
   1c518:	mov	r0, #0
   1c51c:	str	lr, [sp, #4]
   1c520:	bl	1e010 <lchmod@@Base+0x69c8>
   1c524:	cmp	r0, #0
   1c528:	beq	1c538 <lchmod@@Base+0x4ef0>
   1c52c:	ldr	r4, [sp]
   1c530:	add	sp, sp, #4
   1c534:	pop	{pc}		; (ldr pc, [sp], #4)
   1c538:	bl	1c960 <lchmod@@Base+0x5318>
   1c53c:	cmp	r1, #0
   1c540:	cmpne	r0, #0
   1c544:	str	r4, [sp, #-8]!
   1c548:	moveq	r2, #1
   1c54c:	movne	r2, r1
   1c550:	str	lr, [sp, #4]
   1c554:	movne	r1, r0
   1c558:	moveq	r1, r2
   1c55c:	mov	r0, #0
   1c560:	bl	1e010 <lchmod@@Base+0x69c8>
   1c564:	cmp	r0, #0
   1c568:	beq	1c578 <lchmod@@Base+0x4f30>
   1c56c:	ldr	r4, [sp]
   1c570:	add	sp, sp, #4
   1c574:	pop	{pc}		; (ldr pc, [sp], #4)
   1c578:	bl	1c960 <lchmod@@Base+0x5318>
   1c57c:	cmp	r0, #0
   1c580:	strd	r4, [sp, #-16]!
   1c584:	mov	r5, r1
   1c588:	ldr	r4, [r1]
   1c58c:	str	r6, [sp, #8]
   1c590:	str	lr, [sp, #12]
   1c594:	beq	1c5dc <lchmod@@Base+0x4f94>
   1c598:	lsr	r3, r4, #1
   1c59c:	add	r3, r3, #1
   1c5a0:	adds	r4, r4, r3
   1c5a4:	bcs	1c5d8 <lchmod@@Base+0x4f90>
   1c5a8:	mov	r2, #1
   1c5ac:	mov	r1, r4
   1c5b0:	bl	1e010 <lchmod@@Base+0x69c8>
   1c5b4:	cmp	r0, #0
   1c5b8:	beq	1c5d0 <lchmod@@Base+0x4f88>
   1c5bc:	ldr	r6, [sp, #8]
   1c5c0:	str	r4, [r5]
   1c5c4:	ldrd	r4, [sp]
   1c5c8:	add	sp, sp, #12
   1c5cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c5d0:	cmp	r4, #0
   1c5d4:	beq	1c5bc <lchmod@@Base+0x4f74>
   1c5d8:	bl	1c960 <lchmod@@Base+0x5318>
   1c5dc:	cmp	r4, #0
   1c5e0:	mov	r2, #1
   1c5e4:	moveq	r4, #64	; 0x40
   1c5e8:	mov	r1, r4
   1c5ec:	bl	1e010 <lchmod@@Base+0x69c8>
   1c5f0:	cmp	r0, #0
   1c5f4:	bne	1c5bc <lchmod@@Base+0x4f74>
   1c5f8:	b	1c5d8 <lchmod@@Base+0x4f90>
   1c5fc:	cmp	r0, #0
   1c600:	strd	r4, [sp, #-16]!
   1c604:	mov	r5, r1
   1c608:	ldr	r4, [r1]
   1c60c:	str	r6, [sp, #8]
   1c610:	mov	r6, r2
   1c614:	str	lr, [sp, #12]
   1c618:	beq	1c660 <lchmod@@Base+0x5018>
   1c61c:	lsr	r3, r4, #1
   1c620:	add	r3, r3, #1
   1c624:	adds	r4, r4, r3
   1c628:	bcs	1c65c <lchmod@@Base+0x5014>
   1c62c:	mov	r1, r4
   1c630:	bl	1e010 <lchmod@@Base+0x69c8>
   1c634:	cmp	r0, #0
   1c638:	beq	1c650 <lchmod@@Base+0x5008>
   1c63c:	ldr	r6, [sp, #8]
   1c640:	str	r4, [r5]
   1c644:	ldrd	r4, [sp]
   1c648:	add	sp, sp, #12
   1c64c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c650:	cmp	r4, #0
   1c654:	cmpne	r6, #0
   1c658:	beq	1c63c <lchmod@@Base+0x4ff4>
   1c65c:	bl	1c960 <lchmod@@Base+0x5318>
   1c660:	cmp	r4, #0
   1c664:	bne	1c678 <lchmod@@Base+0x5030>
   1c668:	mov	r4, #64	; 0x40
   1c66c:	udiv	r4, r4, r2
   1c670:	cmp	r2, #64	; 0x40
   1c674:	addhi	r4, r4, #1
   1c678:	mov	r2, r6
   1c67c:	mov	r1, r4
   1c680:	mov	r0, #0
   1c684:	bl	1e010 <lchmod@@Base+0x69c8>
   1c688:	cmp	r0, #0
   1c68c:	bne	1c63c <lchmod@@Base+0x4ff4>
   1c690:	b	1c65c <lchmod@@Base+0x5014>
   1c694:	ldr	ip, [r1]
   1c698:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1c69c:	strd	r6, [sp, #8]
   1c6a0:	mov	r7, r1
   1c6a4:	mov	r6, r0
   1c6a8:	str	r8, [sp, #16]
   1c6ac:	mvn	r8, r3
   1c6b0:	lsr	r8, r8, #31
   1c6b4:	str	lr, [sp, #20]
   1c6b8:	asr	r1, ip, #1
   1c6bc:	ldr	lr, [sp, #24]
   1c6c0:	adds	r4, ip, r1
   1c6c4:	mvnvs	r4, #-2147483648	; 0x80000000
   1c6c8:	cmp	r3, r4
   1c6cc:	movge	r1, #0
   1c6d0:	andlt	r1, r8, #1
   1c6d4:	cmp	r1, #0
   1c6d8:	movne	r4, r3
   1c6dc:	smull	r0, r1, r4, lr
   1c6e0:	cmp	r1, r0, asr #31
   1c6e4:	bne	1c794 <lchmod@@Base+0x514c>
   1c6e8:	cmp	r0, #63	; 0x3f
   1c6ec:	mov	r5, r0
   1c6f0:	ble	1c760 <lchmod@@Base+0x5118>
   1c6f4:	cmp	r6, #0
   1c6f8:	sub	r1, r4, ip
   1c6fc:	streq	r6, [r7]
   1c700:	cmp	r1, r2
   1c704:	bge	1c734 <lchmod@@Base+0x50ec>
   1c708:	adds	r4, ip, r2
   1c70c:	bvs	1c790 <lchmod@@Base+0x5148>
   1c710:	cmp	r4, r3
   1c714:	movle	r3, #0
   1c718:	andgt	r3, r8, #1
   1c71c:	cmp	r3, #0
   1c720:	bne	1c790 <lchmod@@Base+0x5148>
   1c724:	smull	r0, r1, r4, lr
   1c728:	cmp	r1, r0, asr #31
   1c72c:	mov	r5, r0
   1c730:	bne	1c790 <lchmod@@Base+0x5148>
   1c734:	mov	r1, r5
   1c738:	mov	r0, r6
   1c73c:	bl	1d840 <lchmod@@Base+0x61f8>
   1c740:	cmp	r0, #0
   1c744:	beq	1c774 <lchmod@@Base+0x512c>
   1c748:	ldr	r8, [sp, #16]
   1c74c:	str	r4, [r7]
   1c750:	ldrd	r4, [sp]
   1c754:	ldrd	r6, [sp, #8]
   1c758:	add	sp, sp, #20
   1c75c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c760:	mov	r0, #64	; 0x40
   1c764:	sdiv	r4, r0, lr
   1c768:	mls	r5, lr, r4, r0
   1c76c:	sub	r5, r0, r5
   1c770:	b	1c6f4 <lchmod@@Base+0x50ac>
   1c774:	adds	r5, r5, #0
   1c778:	movne	r5, #1
   1c77c:	cmp	r6, #0
   1c780:	movne	r6, r5
   1c784:	moveq	r6, #1
   1c788:	cmp	r6, #0
   1c78c:	beq	1c748 <lchmod@@Base+0x5100>
   1c790:	bl	1c960 <lchmod@@Base+0x5318>
   1c794:	mvn	r0, #-2147483648	; 0x80000000
   1c798:	b	1c764 <lchmod@@Base+0x511c>
   1c79c:	mov	r1, #1
   1c7a0:	str	r4, [sp, #-8]!
   1c7a4:	str	lr, [sp, #4]
   1c7a8:	bl	1d790 <lchmod@@Base+0x6148>
   1c7ac:	cmp	r0, #0
   1c7b0:	beq	1c7c0 <lchmod@@Base+0x5178>
   1c7b4:	ldr	r4, [sp]
   1c7b8:	add	sp, sp, #4
   1c7bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c7c0:	bl	1c960 <lchmod@@Base+0x5318>
   1c7c4:	mov	r1, #1
   1c7c8:	str	r4, [sp, #-8]!
   1c7cc:	str	lr, [sp, #4]
   1c7d0:	bl	1d790 <lchmod@@Base+0x6148>
   1c7d4:	cmp	r0, #0
   1c7d8:	beq	1c7e8 <lchmod@@Base+0x51a0>
   1c7dc:	ldr	r4, [sp]
   1c7e0:	add	sp, sp, #4
   1c7e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c7e8:	bl	1c960 <lchmod@@Base+0x5318>
   1c7ec:	str	r4, [sp, #-8]!
   1c7f0:	str	lr, [sp, #4]
   1c7f4:	bl	1d790 <lchmod@@Base+0x6148>
   1c7f8:	cmp	r0, #0
   1c7fc:	beq	1c80c <lchmod@@Base+0x51c4>
   1c800:	ldr	r4, [sp]
   1c804:	add	sp, sp, #4
   1c808:	pop	{pc}		; (ldr pc, [sp], #4)
   1c80c:	bl	1c960 <lchmod@@Base+0x5318>
   1c810:	str	r4, [sp, #-8]!
   1c814:	str	lr, [sp, #4]
   1c818:	bl	1d790 <lchmod@@Base+0x6148>
   1c81c:	cmp	r0, #0
   1c820:	beq	1c830 <lchmod@@Base+0x51e8>
   1c824:	ldr	r4, [sp]
   1c828:	add	sp, sp, #4
   1c82c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c830:	bl	1c960 <lchmod@@Base+0x5318>
   1c834:	strd	r4, [sp, #-16]!
   1c838:	mov	r4, r1
   1c83c:	str	r6, [sp, #8]
   1c840:	mov	r6, r0
   1c844:	mov	r0, r1
   1c848:	str	lr, [sp, #12]
   1c84c:	bl	1d804 <lchmod@@Base+0x61bc>
   1c850:	subs	r5, r0, #0
   1c854:	beq	1c878 <lchmod@@Base+0x5230>
   1c858:	mov	r2, r4
   1c85c:	mov	r1, r6
   1c860:	bl	11530 <memcpy@plt>
   1c864:	mov	r0, r5
   1c868:	ldrd	r4, [sp]
   1c86c:	ldr	r6, [sp, #8]
   1c870:	add	sp, sp, #12
   1c874:	pop	{pc}		; (ldr pc, [sp], #4)
   1c878:	bl	1c960 <lchmod@@Base+0x5318>
   1c87c:	strd	r4, [sp, #-16]!
   1c880:	mov	r4, r1
   1c884:	str	r6, [sp, #8]
   1c888:	mov	r6, r0
   1c88c:	mov	r0, r1
   1c890:	str	lr, [sp, #12]
   1c894:	bl	1d804 <lchmod@@Base+0x61bc>
   1c898:	subs	r5, r0, #0
   1c89c:	beq	1c8c0 <lchmod@@Base+0x5278>
   1c8a0:	mov	r2, r4
   1c8a4:	mov	r1, r6
   1c8a8:	bl	11530 <memcpy@plt>
   1c8ac:	mov	r0, r5
   1c8b0:	ldrd	r4, [sp]
   1c8b4:	ldr	r6, [sp, #8]
   1c8b8:	add	sp, sp, #12
   1c8bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c8c0:	bl	1c960 <lchmod@@Base+0x5318>
   1c8c4:	strd	r4, [sp, #-16]!
   1c8c8:	mov	r4, r1
   1c8cc:	str	r6, [sp, #8]
   1c8d0:	mov	r6, r0
   1c8d4:	add	r0, r1, #1
   1c8d8:	str	lr, [sp, #12]
   1c8dc:	bl	1d804 <lchmod@@Base+0x61bc>
   1c8e0:	subs	r5, r0, #0
   1c8e4:	beq	1c910 <lchmod@@Base+0x52c8>
   1c8e8:	mov	r3, #0
   1c8ec:	mov	r1, r6
   1c8f0:	mov	r2, r4
   1c8f4:	strb	r3, [r5, r4]
   1c8f8:	bl	11530 <memcpy@plt>
   1c8fc:	mov	r0, r5
   1c900:	ldrd	r4, [sp]
   1c904:	ldr	r6, [sp, #8]
   1c908:	add	sp, sp, #12
   1c90c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c910:	bl	1c960 <lchmod@@Base+0x5318>
   1c914:	strd	r4, [sp, #-16]!
   1c918:	str	r6, [sp, #8]
   1c91c:	mov	r6, r0
   1c920:	str	lr, [sp, #12]
   1c924:	bl	116e0 <strlen@plt>
   1c928:	add	r4, r0, #1
   1c92c:	mov	r0, r4
   1c930:	bl	1d804 <lchmod@@Base+0x61bc>
   1c934:	subs	r5, r0, #0
   1c938:	beq	1c95c <lchmod@@Base+0x5314>
   1c93c:	mov	r2, r4
   1c940:	mov	r1, r6
   1c944:	bl	11530 <memcpy@plt>
   1c948:	mov	r0, r5
   1c94c:	ldrd	r4, [sp]
   1c950:	ldr	r6, [sp, #8]
   1c954:	add	sp, sp, #12
   1c958:	pop	{pc}		; (ldr pc, [sp], #4)
   1c95c:	bl	1c960 <lchmod@@Base+0x5318>
   1c960:	movw	r3, #396	; 0x18c
   1c964:	movt	r3, #3
   1c968:	str	r4, [sp, #-8]!
   1c96c:	ldr	r4, [r3]
   1c970:	mov	r2, #5
   1c974:	movw	r1, #61816	; 0xf178
   1c978:	movt	r1, #1
   1c97c:	mov	r0, #0
   1c980:	str	lr, [sp, #4]
   1c984:	bl	11578 <dcgettext@plt>
   1c988:	mov	r3, r0
   1c98c:	movw	r2, #60524	; 0xec6c
   1c990:	movt	r2, #1
   1c994:	mov	r1, #0
   1c998:	mov	r0, r4
   1c99c:	bl	11638 <error@plt>
   1c9a0:	bl	11878 <abort@plt>
   1c9a4:	orr	r1, r1, #512	; 0x200
   1c9a8:	str	r4, [sp, #-8]!
   1c9ac:	str	lr, [sp, #4]
   1c9b0:	bl	14bc8 <__assert_fail@plt+0x32fc>
   1c9b4:	cmp	r0, #0
   1c9b8:	beq	1c9c8 <lchmod@@Base+0x5380>
   1c9bc:	ldr	r4, [sp]
   1c9c0:	add	sp, sp, #4
   1c9c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c9c8:	bl	1171c <__errno_location@plt>
   1c9cc:	ldr	r3, [r0]
   1c9d0:	cmp	r3, #22
   1c9d4:	beq	1c9dc <lchmod@@Base+0x5394>
   1c9d8:	bl	1c960 <lchmod@@Base+0x5318>
   1c9dc:	movw	r3, #61836	; 0xf18c
   1c9e0:	movt	r3, #1
   1c9e4:	movw	r1, #61848	; 0xf198
   1c9e8:	movt	r1, #1
   1c9ec:	movw	r0, #61860	; 0xf1a4
   1c9f0:	movt	r0, #1
   1c9f4:	mov	r2, #41	; 0x29
   1c9f8:	bl	118cc <__assert_fail@plt>
   1c9fc:	ldr	r3, [r0, #48]	; 0x30
   1ca00:	and	r3, r3, #17
   1ca04:	cmp	r3, #16
   1ca08:	beq	1ca2c <lchmod@@Base+0x53e4>
   1ca0c:	cmp	r3, #17
   1ca10:	beq	1ca1c <lchmod@@Base+0x53d4>
   1ca14:	mov	r0, #0
   1ca18:	bx	lr
   1ca1c:	ldr	r0, [r1, #48]	; 0x30
   1ca20:	adds	r0, r0, #0
   1ca24:	movne	r0, #1
   1ca28:	bx	lr
   1ca2c:	mov	r0, #1
   1ca30:	bx	lr
   1ca34:	cmp	r2, #36	; 0x24
   1ca38:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ca3c:	strd	r6, [sp, #8]
   1ca40:	strd	r8, [sp, #16]
   1ca44:	strd	sl, [sp, #24]
   1ca48:	str	lr, [sp, #32]
   1ca4c:	sub	sp, sp, #36	; 0x24
   1ca50:	bhi	1d6c8 <lchmod@@Base+0x6080>
   1ca54:	cmp	r1, #0
   1ca58:	mov	r6, r2
   1ca5c:	mov	r5, r1
   1ca60:	mov	sl, r0
   1ca64:	addeq	r5, sp, #28
   1ca68:	mov	r9, r3
   1ca6c:	bl	1171c <__errno_location@plt>
   1ca70:	mov	r3, #0
   1ca74:	mov	fp, r0
   1ca78:	str	r3, [r0]
   1ca7c:	ldrb	r4, [sl]
   1ca80:	bl	116b0 <__ctype_b_loc@plt>
   1ca84:	ldr	r2, [r0]
   1ca88:	lsl	r3, r4, #1
   1ca8c:	ldrh	r3, [r2, r3]
   1ca90:	tst	r3, #8192	; 0x2000
   1ca94:	beq	1cab0 <lchmod@@Base+0x5468>
   1ca98:	mov	r3, sl
   1ca9c:	ldrb	r4, [r3, #1]!
   1caa0:	lsl	r1, r4, #1
   1caa4:	ldrh	r1, [r2, r1]
   1caa8:	tst	r1, #8192	; 0x2000
   1caac:	bne	1ca9c <lchmod@@Base+0x5454>
   1cab0:	cmp	r4, #45	; 0x2d
   1cab4:	beq	1cb50 <lchmod@@Base+0x5508>
   1cab8:	mov	r2, r6
   1cabc:	mov	r3, #0
   1cac0:	mov	r1, r5
   1cac4:	mov	r0, sl
   1cac8:	bl	1153c <__strtoull_internal@plt>
   1cacc:	ldr	r8, [r5]
   1cad0:	mov	r6, r0
   1cad4:	mov	r7, r1
   1cad8:	cmp	r8, sl
   1cadc:	beq	1cb38 <lchmod@@Base+0x54f0>
   1cae0:	ldr	r4, [fp]
   1cae4:	cmp	r4, #0
   1cae8:	bne	1cb28 <lchmod@@Base+0x54e0>
   1caec:	ldr	r3, [sp, #72]	; 0x48
   1caf0:	cmp	r3, #0
   1caf4:	beq	1cb04 <lchmod@@Base+0x54bc>
   1caf8:	ldrb	sl, [r8]
   1cafc:	cmp	sl, #0
   1cb00:	bne	1cebc <lchmod@@Base+0x5874>
   1cb04:	strd	r6, [r9]
   1cb08:	mov	r0, r4
   1cb0c:	add	sp, sp, #36	; 0x24
   1cb10:	ldrd	r4, [sp]
   1cb14:	ldrd	r6, [sp, #8]
   1cb18:	ldrd	r8, [sp, #16]
   1cb1c:	ldrd	sl, [sp, #24]
   1cb20:	add	sp, sp, #32
   1cb24:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb28:	cmp	r4, #34	; 0x22
   1cb2c:	bne	1cb50 <lchmod@@Base+0x5508>
   1cb30:	mov	r4, #1
   1cb34:	b	1caec <lchmod@@Base+0x54a4>
   1cb38:	ldr	r3, [sp, #72]	; 0x48
   1cb3c:	cmp	r3, #0
   1cb40:	beq	1cb50 <lchmod@@Base+0x5508>
   1cb44:	ldrb	sl, [sl]
   1cb48:	cmp	sl, #0
   1cb4c:	bne	1cb58 <lchmod@@Base+0x5510>
   1cb50:	mov	r4, #4
   1cb54:	b	1cb08 <lchmod@@Base+0x54c0>
   1cb58:	mov	r1, sl
   1cb5c:	mov	r0, r3
   1cb60:	bl	116f8 <strchr@plt>
   1cb64:	cmp	r0, #0
   1cb68:	movne	r4, #0
   1cb6c:	movne	r6, #1
   1cb70:	movne	r7, r4
   1cb74:	beq	1cb50 <lchmod@@Base+0x5508>
   1cb78:	sub	r3, sl, #69	; 0x45
   1cb7c:	cmp	r3, #47	; 0x2f
   1cb80:	ldrls	pc, [pc, r3, lsl #2]
   1cb84:	b	1cc8c <lchmod@@Base+0x5644>
   1cb88:	andeq	ip, r1, r8, asr #24
   1cb8c:	andeq	ip, r1, ip, lsl #25
   1cb90:	andeq	ip, r1, r8, asr #24
   1cb94:	andeq	ip, r1, ip, lsl #25
   1cb98:	andeq	ip, r1, ip, lsl #25
   1cb9c:	andeq	ip, r1, ip, lsl #25
   1cba0:	andeq	ip, r1, r8, asr #24
   1cba4:	andeq	ip, r1, ip, lsl #25
   1cba8:	andeq	ip, r1, r8, asr #24
   1cbac:	andeq	ip, r1, ip, lsl #25
   1cbb0:	andeq	ip, r1, ip, lsl #25
   1cbb4:	andeq	ip, r1, r8, asr #24
   1cbb8:	andeq	ip, r1, ip, lsl #25
   1cbbc:	andeq	ip, r1, ip, lsl #25
   1cbc0:	andeq	ip, r1, ip, lsl #25
   1cbc4:	andeq	ip, r1, r8, asr #24
   1cbc8:	andeq	ip, r1, ip, lsl #25
   1cbcc:	andeq	ip, r1, ip, lsl #25
   1cbd0:	andeq	ip, r1, ip, lsl #25
   1cbd4:	andeq	ip, r1, ip, lsl #25
   1cbd8:	andeq	ip, r1, r8, asr #24
   1cbdc:	andeq	ip, r1, r8, asr #24
   1cbe0:	andeq	ip, r1, ip, lsl #25
   1cbe4:	andeq	ip, r1, ip, lsl #25
   1cbe8:	andeq	ip, r1, ip, lsl #25
   1cbec:	andeq	ip, r1, ip, lsl #25
   1cbf0:	andeq	ip, r1, ip, lsl #25
   1cbf4:	andeq	ip, r1, ip, lsl #25
   1cbf8:	andeq	ip, r1, ip, lsl #25
   1cbfc:	andeq	ip, r1, ip, lsl #25
   1cc00:	andeq	ip, r1, ip, lsl #25
   1cc04:	andeq	ip, r1, ip, lsl #25
   1cc08:	andeq	ip, r1, ip, lsl #25
   1cc0c:	andeq	ip, r1, ip, lsl #25
   1cc10:	andeq	ip, r1, r8, asr #24
   1cc14:	andeq	ip, r1, ip, lsl #25
   1cc18:	andeq	ip, r1, ip, lsl #25
   1cc1c:	andeq	ip, r1, ip, lsl #25
   1cc20:	andeq	ip, r1, r8, asr #24
   1cc24:	andeq	ip, r1, ip, lsl #25
   1cc28:	andeq	ip, r1, r8, asr #24
   1cc2c:	andeq	ip, r1, ip, lsl #25
   1cc30:	andeq	ip, r1, ip, lsl #25
   1cc34:	andeq	ip, r1, ip, lsl #25
   1cc38:	andeq	ip, r1, ip, lsl #25
   1cc3c:	andeq	ip, r1, ip, lsl #25
   1cc40:	andeq	ip, r1, ip, lsl #25
   1cc44:	andeq	ip, r1, r8, asr #24
   1cc48:	mov	r1, #48	; 0x30
   1cc4c:	ldr	r0, [sp, #72]	; 0x48
   1cc50:	bl	116f8 <strchr@plt>
   1cc54:	cmp	r0, #0
   1cc58:	beq	1cc8c <lchmod@@Base+0x5644>
   1cc5c:	ldrb	r3, [r8, #1]
   1cc60:	cmp	r3, #68	; 0x44
   1cc64:	beq	1d21c <lchmod@@Base+0x5bd4>
   1cc68:	cmp	r3, #105	; 0x69
   1cc6c:	beq	1ced4 <lchmod@@Base+0x588c>
   1cc70:	cmp	r3, #66	; 0x42
   1cc74:	moveq	r3, #2
   1cc78:	movne	r3, #1
   1cc7c:	moveq	ip, #1000	; 0x3e8
   1cc80:	movne	ip, #1024	; 0x400
   1cc84:	str	r3, [sp, #12]
   1cc88:	b	1cc98 <lchmod@@Base+0x5650>
   1cc8c:	mov	r3, #1
   1cc90:	mov	ip, #1024	; 0x400
   1cc94:	str	r3, [sp, #12]
   1cc98:	sub	sl, sl, #66	; 0x42
   1cc9c:	cmp	sl, #53	; 0x35
   1cca0:	ldrls	pc, [pc, sl, lsl #2]
   1cca4:	b	1ce80 <lchmod@@Base+0x5838>
   1cca8:	andeq	sp, r1, r8, ror #2
   1ccac:	andeq	ip, r1, r0, lsl #29
   1ccb0:	andeq	ip, r1, r0, lsl #29
   1ccb4:	andeq	sp, r1, r8, lsl #2
   1ccb8:	andeq	ip, r1, r0, lsl #29
   1ccbc:	andeq	sp, r1, r4, lsl #3
   1ccc0:	andeq	ip, r1, r0, lsl #29
   1ccc4:	andeq	ip, r1, r0, lsl #29
   1ccc8:	andeq	ip, r1, r0, lsl #29
   1cccc:	andeq	ip, r1, r8, lsl #29
   1ccd0:	andeq	ip, r1, r0, lsl #29
   1ccd4:	strheq	sp, [r1], -r0
   1ccd8:	andeq	ip, r1, r0, lsl #29
   1ccdc:	andeq	ip, r1, r0, lsl #29
   1cce0:	andeq	sp, r1, r4, asr r0
   1cce4:	andeq	ip, r1, r0, lsl #29
   1cce8:	andeq	ip, r1, r0, lsl #29
   1ccec:	andeq	ip, r1, r0, lsl #29
   1ccf0:	strdeq	ip, [r1], -r4
   1ccf4:	andeq	ip, r1, r0, lsl #29
   1ccf8:	andeq	ip, r1, r0, lsl #29
   1ccfc:	andeq	ip, r1, r0, lsl #29
   1cd00:	andeq	ip, r1, r0, lsl #29
   1cd04:	andeq	ip, r1, r8, lsr #30
   1cd08:	andeq	ip, r1, r0, lsl #27
   1cd0c:	andeq	ip, r1, r0, lsl #29
   1cd10:	andeq	ip, r1, r0, lsl #29
   1cd14:	andeq	ip, r1, r0, lsl #29
   1cd18:	andeq	ip, r1, r0, lsl #29
   1cd1c:	andeq	ip, r1, r0, lsl #29
   1cd20:	andeq	ip, r1, r0, lsl #29
   1cd24:	andeq	ip, r1, r0, lsl #29
   1cd28:	andeq	ip, r1, r8, lsl #30
   1cd2c:	andeq	ip, r1, r8, ror #28
   1cd30:	andeq	ip, r1, r0, lsl #29
   1cd34:	andeq	ip, r1, r0, lsl #29
   1cd38:	andeq	ip, r1, r0, lsl #29
   1cd3c:	andeq	sp, r1, r4, lsl #3
   1cd40:	andeq	ip, r1, r0, lsl #29
   1cd44:	andeq	ip, r1, r0, lsl #29
   1cd48:	andeq	ip, r1, r0, lsl #29
   1cd4c:	andeq	ip, r1, r8, lsl #29
   1cd50:	andeq	ip, r1, r0, lsl #29
   1cd54:	strheq	sp, [r1], -r0
   1cd58:	andeq	ip, r1, r0, lsl #29
   1cd5c:	andeq	ip, r1, r0, lsl #29
   1cd60:	andeq	ip, r1, r0, lsl #29
   1cd64:	andeq	ip, r1, r0, lsl #29
   1cd68:	andeq	ip, r1, r0, lsl #29
   1cd6c:	andeq	ip, r1, r0, lsl #29
   1cd70:	strdeq	ip, [r1], -r4
   1cd74:	andeq	ip, r1, r0, lsl #29
   1cd78:	andeq	ip, r1, r0, lsl #29
   1cd7c:	strdeq	ip, [r1], -r0
   1cd80:	asr	r3, ip, #31
   1cd84:	mov	r2, ip
   1cd88:	cmp	r7, #0
   1cd8c:	mov	r1, #0
   1cd90:	strd	r2, [sp]
   1cd94:	bne	1d2d4 <lchmod@@Base+0x5c8c>
   1cd98:	umull	r6, r7, r6, ip
   1cd9c:	mov	r2, r6
   1cda0:	mov	r3, r7
   1cda4:	cmp	r1, #0
   1cda8:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1cdac:	cmp	r3, #0
   1cdb0:	mov	lr, r1
   1cdb4:	bne	1d400 <lchmod@@Base+0x5db8>
   1cdb8:	umull	r2, r3, r2, ip
   1cdbc:	mov	r0, r2
   1cdc0:	mov	r1, r3
   1cdc4:	cmp	lr, #0
   1cdc8:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1cdcc:	cmp	r1, #0
   1cdd0:	bne	1d3dc <lchmod@@Base+0x5d94>
   1cdd4:	umull	r0, r1, r0, ip
   1cdd8:	mov	r2, r0
   1cddc:	mov	r3, r1
   1cde0:	cmp	lr, #0
   1cde4:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1cde8:	cmp	r3, #0
   1cdec:	bne	1d08c <lchmod@@Base+0x5a44>
   1cdf0:	umull	r2, r3, r2, ip
   1cdf4:	mov	r0, r2
   1cdf8:	mov	r1, r3
   1cdfc:	cmp	lr, #0
   1ce00:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1ce04:	cmp	r1, #0
   1ce08:	bne	1d28c <lchmod@@Base+0x5c44>
   1ce0c:	umull	r0, r1, r0, ip
   1ce10:	mov	r2, r0
   1ce14:	mov	r3, r1
   1ce18:	cmp	lr, #0
   1ce1c:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1ce20:	cmp	r3, #0
   1ce24:	mov	r7, lr
   1ce28:	bne	1d268 <lchmod@@Base+0x5c20>
   1ce2c:	umull	r2, r3, r2, ip
   1ce30:	mov	r6, r2
   1ce34:	mov	lr, r3
   1ce38:	cmp	r7, #0
   1ce3c:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1ce40:	cmp	lr, #0
   1ce44:	bne	1d22c <lchmod@@Base+0x5be4>
   1ce48:	umull	r2, r3, r6, ip
   1ce4c:	mov	r0, r2
   1ce50:	mov	r2, r3
   1ce54:	subs	r3, r7, #0
   1ce58:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1ce5c:	mov	r6, r0
   1ce60:	mov	r7, r2
   1ce64:	orr	r4, r4, r3
   1ce68:	ldr	r2, [sp, #12]
   1ce6c:	add	r3, r8, r2
   1ce70:	str	r3, [r5]
   1ce74:	ldrb	r3, [r8, r2]
   1ce78:	cmp	r3, #0
   1ce7c:	beq	1cb04 <lchmod@@Base+0x54bc>
   1ce80:	orr	r4, r4, #2
   1ce84:	b	1cb04 <lchmod@@Base+0x54bc>
   1ce88:	cmp	r7, #0
   1ce8c:	asr	r1, ip, #31
   1ce90:	mov	lr, #0
   1ce94:	bne	1d1f8 <lchmod@@Base+0x5bb0>
   1ce98:	umull	r2, r3, r6, ip
   1ce9c:	mov	r6, r2
   1cea0:	mov	r7, r3
   1cea4:	cmp	lr, #0
   1cea8:	beq	1ce68 <lchmod@@Base+0x5820>
   1ceac:	mvn	r6, #0
   1ceb0:	mov	r4, #1
   1ceb4:	mov	r7, r6
   1ceb8:	b	1ce68 <lchmod@@Base+0x5820>
   1cebc:	mov	r0, r3
   1cec0:	mov	r1, sl
   1cec4:	bl	116f8 <strchr@plt>
   1cec8:	cmp	r0, #0
   1cecc:	bne	1cb78 <lchmod@@Base+0x5530>
   1ced0:	b	1ce80 <lchmod@@Base+0x5838>
   1ced4:	ldrb	r3, [r8, #2]
   1ced8:	mov	ip, #1024	; 0x400
   1cedc:	cmp	r3, #66	; 0x42
   1cee0:	movne	r3, #1
   1cee4:	moveq	r3, #3
   1cee8:	str	r3, [sp, #12]
   1ceec:	b	1cc98 <lchmod@@Base+0x5650>
   1cef0:	lsr	r3, r7, #31
   1cef4:	adds	r6, r6, r6
   1cef8:	adc	r7, r7, r7
   1cefc:	cmp	r3, #0
   1cf00:	beq	1ce68 <lchmod@@Base+0x5820>
   1cf04:	b	1ceac <lchmod@@Base+0x5864>
   1cf08:	lsr	r3, r7, #23
   1cf0c:	lsl	r7, r7, #9
   1cf10:	cmp	r3, #0
   1cf14:	lsl	r3, r6, #9
   1cf18:	orr	r7, r7, r6, lsr #23
   1cf1c:	bne	1ceac <lchmod@@Base+0x5864>
   1cf20:	mov	r6, r3
   1cf24:	b	1ce68 <lchmod@@Base+0x5820>
   1cf28:	asr	r3, ip, #31
   1cf2c:	mov	r2, ip
   1cf30:	cmp	r7, #0
   1cf34:	mov	r1, #0
   1cf38:	strd	r2, [sp]
   1cf3c:	bne	1d348 <lchmod@@Base+0x5d00>
   1cf40:	umull	r6, r7, r6, ip
   1cf44:	mov	r0, r6
   1cf48:	mov	fp, r7
   1cf4c:	cmp	r1, #0
   1cf50:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1cf54:	cmp	fp, #0
   1cf58:	mov	lr, r1
   1cf5c:	bne	1d4d8 <lchmod@@Base+0x5e90>
   1cf60:	umull	r0, r1, r0, ip
   1cf64:	mov	r2, r0
   1cf68:	mov	r3, r1
   1cf6c:	cmp	lr, #0
   1cf70:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1cf74:	cmp	r3, #0
   1cf78:	bne	1d500 <lchmod@@Base+0x5eb8>
   1cf7c:	umull	r2, r3, r2, ip
   1cf80:	mov	r0, r2
   1cf84:	mov	r1, r3
   1cf88:	cmp	lr, #0
   1cf8c:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1cf90:	cmp	r1, #0
   1cf94:	bne	1d480 <lchmod@@Base+0x5e38>
   1cf98:	umull	r0, r1, r0, ip
   1cf9c:	mov	r2, r0
   1cfa0:	mov	r3, r1
   1cfa4:	cmp	lr, #0
   1cfa8:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1cfac:	cmp	r3, #0
   1cfb0:	bne	1d2b0 <lchmod@@Base+0x5c68>
   1cfb4:	umull	r2, r3, r2, ip
   1cfb8:	mov	r0, r2
   1cfbc:	mov	r1, r3
   1cfc0:	cmp	lr, #0
   1cfc4:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1cfc8:	cmp	r1, #0
   1cfcc:	beq	1ce0c <lchmod@@Base+0x57c4>
   1cfd0:	umull	r6, r7, r0, ip
   1cfd4:	mov	fp, lr
   1cfd8:	mov	sl, r7
   1cfdc:	umlal	sl, fp, r1, ip
   1cfe0:	cmp	fp, #0
   1cfe4:	bne	1d6e8 <lchmod@@Base+0x60a0>
   1cfe8:	mov	r2, r6
   1cfec:	mov	r3, sl
   1cff0:	b	1ce18 <lchmod@@Base+0x57d0>
   1cff4:	asr	r3, ip, #31
   1cff8:	mov	r2, ip
   1cffc:	cmp	r7, #0
   1d000:	mov	r1, #0
   1d004:	strd	r2, [sp]
   1d008:	bne	1d36c <lchmod@@Base+0x5d24>
   1d00c:	umull	r6, r7, r6, ip
   1d010:	mov	r0, r6
   1d014:	mov	fp, r7
   1d018:	cmp	r1, #0
   1d01c:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1d020:	cmp	fp, #0
   1d024:	mov	lr, r1
   1d028:	beq	1ce0c <lchmod@@Base+0x57c4>
   1d02c:	umull	r6, r7, r0, ip
   1d030:	mov	r3, r1
   1d034:	mov	r2, r7
   1d038:	umlal	r2, r3, fp, ip
   1d03c:	cmp	r3, #0
   1d040:	strd	r2, [sp, #16]
   1d044:	bne	1d5cc <lchmod@@Base+0x5f84>
   1d048:	mov	r2, r6
   1d04c:	ldr	r3, [sp, #16]
   1d050:	b	1ce18 <lchmod@@Base+0x57d0>
   1d054:	asr	r3, ip, #31
   1d058:	mov	r2, ip
   1d05c:	cmp	r7, #0
   1d060:	mov	r1, #0
   1d064:	strd	r2, [sp]
   1d068:	bne	1d3b4 <lchmod@@Base+0x5d6c>
   1d06c:	umull	r6, r7, r6, ip
   1d070:	mov	r2, r6
   1d074:	mov	r3, r7
   1d078:	cmp	r1, #0
   1d07c:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1d080:	cmp	r3, #0
   1d084:	mov	lr, r1
   1d088:	beq	1cdf0 <lchmod@@Base+0x57a8>
   1d08c:	umull	r6, r7, r2, ip
   1d090:	mov	fp, lr
   1d094:	mov	sl, r7
   1d098:	umlal	sl, fp, r3, ip
   1d09c:	cmp	fp, #0
   1d0a0:	bne	1d6ac <lchmod@@Base+0x6064>
   1d0a4:	mov	r0, r6
   1d0a8:	mov	r1, sl
   1d0ac:	b	1cdfc <lchmod@@Base+0x57b4>
   1d0b0:	asr	r3, ip, #31
   1d0b4:	mov	r2, ip
   1d0b8:	cmp	r7, #0
   1d0bc:	mov	r1, #0
   1d0c0:	strd	r2, [sp]
   1d0c4:	bne	1d390 <lchmod@@Base+0x5d48>
   1d0c8:	umull	r6, r7, r6, ip
   1d0cc:	mov	sl, r6
   1d0d0:	mov	lr, r7
   1d0d4:	cmp	r1, #0
   1d0d8:	bne	1ceac <lchmod@@Base+0x5864>
   1d0dc:	cmp	lr, #0
   1d0e0:	mov	r7, r1
   1d0e4:	bne	1d4a4 <lchmod@@Base+0x5e5c>
   1d0e8:	umull	sl, fp, sl, ip
   1d0ec:	mov	r0, sl
   1d0f0:	mov	r2, fp
   1d0f4:	cmp	r7, #0
   1d0f8:	mov	r6, r0
   1d0fc:	mov	r7, r2
   1d100:	beq	1ce68 <lchmod@@Base+0x5820>
   1d104:	b	1ceac <lchmod@@Base+0x5864>
   1d108:	asr	r3, ip, #31
   1d10c:	mov	r2, ip
   1d110:	cmp	r7, #0
   1d114:	mov	r1, #0
   1d118:	strd	r2, [sp]
   1d11c:	bne	1d324 <lchmod@@Base+0x5cdc>
   1d120:	umull	r6, r7, r6, ip
   1d124:	mov	r0, r6
   1d128:	mov	fp, r7
   1d12c:	cmp	r1, #0
   1d130:	bne	1d1e8 <lchmod@@Base+0x5ba0>
   1d134:	cmp	fp, #0
   1d138:	mov	lr, r1
   1d13c:	beq	1cf98 <lchmod@@Base+0x5950>
   1d140:	umull	r6, r7, r0, ip
   1d144:	mov	r3, r1
   1d148:	mov	r2, r7
   1d14c:	umlal	r2, r3, fp, ip
   1d150:	cmp	r3, #0
   1d154:	strd	r2, [sp, #16]
   1d158:	bne	1d63c <lchmod@@Base+0x5ff4>
   1d15c:	mov	r2, r6
   1d160:	ldr	r3, [sp, #16]
   1d164:	b	1cfa4 <lchmod@@Base+0x595c>
   1d168:	lsr	r3, r7, #22
   1d16c:	lsl	r7, r7, #10
   1d170:	cmp	r3, #0
   1d174:	lsl	r3, r6, #10
   1d178:	orr	r7, r7, r6, lsr #22
   1d17c:	beq	1cf20 <lchmod@@Base+0x58d8>
   1d180:	b	1ceac <lchmod@@Base+0x5864>
   1d184:	asr	r3, ip, #31
   1d188:	mov	r2, ip
   1d18c:	cmp	r7, #0
   1d190:	mov	r1, #0
   1d194:	strd	r2, [sp]
   1d198:	bne	1d2fc <lchmod@@Base+0x5cb4>
   1d19c:	umull	r6, r7, r6, ip
   1d1a0:	mov	r2, r6
   1d1a4:	mov	r3, r7
   1d1a8:	cmp	r1, #0
   1d1ac:	bne	1ceac <lchmod@@Base+0x5864>
   1d1b0:	cmp	r3, #0
   1d1b4:	mov	r7, r1
   1d1b8:	bne	1d460 <lchmod@@Base+0x5e18>
   1d1bc:	umull	r2, r3, r2, ip
   1d1c0:	mov	r6, r2
   1d1c4:	mov	lr, r3
   1d1c8:	cmp	r7, #0
   1d1cc:	bne	1ceac <lchmod@@Base+0x5864>
   1d1d0:	cmp	lr, #0
   1d1d4:	bne	1d424 <lchmod@@Base+0x5ddc>
   1d1d8:	umull	r2, r3, r6, ip
   1d1dc:	mov	r0, r2
   1d1e0:	mov	r2, r3
   1d1e4:	b	1d0f4 <lchmod@@Base+0x5aac>
   1d1e8:	mvn	r6, #0
   1d1ec:	mov	r3, #1
   1d1f0:	mov	r7, r6
   1d1f4:	b	1ce64 <lchmod@@Base+0x581c>
   1d1f8:	umull	sl, fp, r6, ip
   1d1fc:	mov	r3, lr
   1d200:	mov	r2, fp
   1d204:	umlal	r2, r3, r7, ip
   1d208:	cmp	r3, #0
   1d20c:	bne	1d604 <lchmod@@Base+0x5fbc>
   1d210:	mov	r6, sl
   1d214:	mov	r7, r2
   1d218:	b	1cea4 <lchmod@@Base+0x585c>
   1d21c:	mov	r3, #2
   1d220:	mov	ip, #1000	; 0x3e8
   1d224:	str	r3, [sp, #12]
   1d228:	b	1cc98 <lchmod@@Base+0x5650>
   1d22c:	umull	r0, r1, r6, ip
   1d230:	mov	r3, r7
   1d234:	mov	r2, r1
   1d238:	strd	r0, [sp, #16]
   1d23c:	umlal	r2, r3, lr, ip
   1d240:	cmp	r3, #0
   1d244:	beq	1ce54 <lchmod@@Base+0x580c>
   1d248:	ldrd	sl, [sp]
   1d24c:	mov	r7, #1
   1d250:	ldr	r0, [sp, #16]
   1d254:	ldr	r3, [sp, #20]
   1d258:	mul	r2, r6, fp
   1d25c:	mla	r2, lr, sl, r2
   1d260:	add	r2, r2, r3
   1d264:	b	1ce54 <lchmod@@Base+0x580c>
   1d268:	umull	sl, fp, r2, ip
   1d26c:	mov	r1, lr
   1d270:	mov	r0, fp
   1d274:	umlal	r0, r1, r3, ip
   1d278:	cmp	r1, #0
   1d27c:	bne	1d55c <lchmod@@Base+0x5f14>
   1d280:	mov	r6, sl
   1d284:	mov	lr, r0
   1d288:	b	1ce38 <lchmod@@Base+0x57f0>
   1d28c:	umull	sl, fp, r0, ip
   1d290:	mov	r7, lr
   1d294:	mov	r6, fp
   1d298:	umlal	r6, r7, r1, ip
   1d29c:	cmp	r7, #0
   1d2a0:	bne	1d704 <lchmod@@Base+0x60bc>
   1d2a4:	mov	r2, sl
   1d2a8:	mov	r3, r6
   1d2ac:	b	1ce18 <lchmod@@Base+0x57d0>
   1d2b0:	umull	sl, fp, r2, ip
   1d2b4:	mov	r7, lr
   1d2b8:	mov	r6, fp
   1d2bc:	umlal	r6, r7, r3, ip
   1d2c0:	cmp	r7, #0
   1d2c4:	bne	1d594 <lchmod@@Base+0x5f4c>
   1d2c8:	mov	r0, sl
   1d2cc:	mov	r1, r6
   1d2d0:	b	1cfc0 <lchmod@@Base+0x5978>
   1d2d4:	umull	sl, fp, r6, ip
   1d2d8:	mov	r3, r1
   1d2dc:	mov	r2, fp
   1d2e0:	umlal	r2, r3, r7, ip
   1d2e4:	cmp	r3, #0
   1d2e8:	strd	r2, [sp, #16]
   1d2ec:	bne	1d578 <lchmod@@Base+0x5f30>
   1d2f0:	mov	r2, sl
   1d2f4:	ldr	r3, [sp, #16]
   1d2f8:	b	1cda4 <lchmod@@Base+0x575c>
   1d2fc:	umull	sl, fp, r6, ip
   1d300:	mov	r3, r1
   1d304:	mov	r2, fp
   1d308:	umlal	r2, r3, r7, ip
   1d30c:	cmp	r3, #0
   1d310:	strd	r2, [sp, #16]
   1d314:	bne	1d658 <lchmod@@Base+0x6010>
   1d318:	mov	r2, sl
   1d31c:	ldr	r3, [sp, #16]
   1d320:	b	1d1a8 <lchmod@@Base+0x5b60>
   1d324:	umull	sl, fp, r6, ip
   1d328:	mov	r3, r1
   1d32c:	mov	r2, fp
   1d330:	umlal	r2, r3, r7, ip
   1d334:	cmp	r3, #0
   1d338:	bne	1d524 <lchmod@@Base+0x5edc>
   1d33c:	mov	r0, sl
   1d340:	mov	fp, r2
   1d344:	b	1d12c <lchmod@@Base+0x5ae4>
   1d348:	umull	sl, fp, r6, ip
   1d34c:	mov	r3, r1
   1d350:	mov	r2, fp
   1d354:	umlal	r2, r3, r7, ip
   1d358:	cmp	r3, #0
   1d35c:	bne	1d5e8 <lchmod@@Base+0x5fa0>
   1d360:	mov	r0, sl
   1d364:	mov	fp, r2
   1d368:	b	1cf4c <lchmod@@Base+0x5904>
   1d36c:	umull	sl, fp, r6, ip
   1d370:	mov	r3, r1
   1d374:	mov	r2, fp
   1d378:	umlal	r2, r3, r7, ip
   1d37c:	cmp	r3, #0
   1d380:	bne	1d674 <lchmod@@Base+0x602c>
   1d384:	mov	r0, sl
   1d388:	mov	fp, r2
   1d38c:	b	1d018 <lchmod@@Base+0x59d0>
   1d390:	umull	sl, fp, r6, ip
   1d394:	mov	r3, r1
   1d398:	mov	r2, fp
   1d39c:	strd	sl, [sp, #16]
   1d3a0:	umlal	r2, r3, r7, ip
   1d3a4:	cmp	r3, #0
   1d3a8:	bne	1d61c <lchmod@@Base+0x5fd4>
   1d3ac:	mov	lr, r2
   1d3b0:	b	1d0d4 <lchmod@@Base+0x5a8c>
   1d3b4:	umull	sl, fp, r6, ip
   1d3b8:	mov	r3, r1
   1d3bc:	mov	r2, fp
   1d3c0:	umlal	r2, r3, r7, ip
   1d3c4:	cmp	r3, #0
   1d3c8:	strd	r2, [sp, #16]
   1d3cc:	bne	1d720 <lchmod@@Base+0x60d8>
   1d3d0:	mov	r2, sl
   1d3d4:	ldr	r3, [sp, #16]
   1d3d8:	b	1d078 <lchmod@@Base+0x5a30>
   1d3dc:	umull	sl, fp, r0, ip
   1d3e0:	mov	r7, lr
   1d3e4:	mov	r6, fp
   1d3e8:	umlal	r6, r7, r1, ip
   1d3ec:	cmp	r7, #0
   1d3f0:	bne	1d73c <lchmod@@Base+0x60f4>
   1d3f4:	mov	r2, sl
   1d3f8:	mov	r3, r6
   1d3fc:	b	1cde0 <lchmod@@Base+0x5798>
   1d400:	umull	r6, r7, r2, ip
   1d404:	mov	fp, r1
   1d408:	mov	sl, r7
   1d40c:	umlal	sl, fp, r3, ip
   1d410:	cmp	fp, #0
   1d414:	bne	1d5b0 <lchmod@@Base+0x5f68>
   1d418:	mov	r0, r6
   1d41c:	mov	r1, sl
   1d420:	b	1cdc4 <lchmod@@Base+0x577c>
   1d424:	umull	r0, r1, r6, ip
   1d428:	mov	r3, r7
   1d42c:	mov	r2, r1
   1d430:	strd	r0, [sp, #16]
   1d434:	umlal	r2, r3, lr, ip
   1d438:	cmp	r3, #0
   1d43c:	beq	1d0f4 <lchmod@@Base+0x5aac>
   1d440:	ldrd	sl, [sp]
   1d444:	mov	r7, #1
   1d448:	ldr	r0, [sp, #16]
   1d44c:	ldr	r3, [sp, #20]
   1d450:	mul	r2, r6, fp
   1d454:	mla	r2, lr, sl, r2
   1d458:	add	r2, r2, r3
   1d45c:	b	1d0f4 <lchmod@@Base+0x5aac>
   1d460:	umull	sl, fp, r2, ip
   1d464:	mov	r0, fp
   1d468:	umlal	r0, r1, r3, ip
   1d46c:	cmp	r1, #0
   1d470:	bne	1d758 <lchmod@@Base+0x6110>
   1d474:	mov	r6, sl
   1d478:	mov	lr, r0
   1d47c:	b	1d1c8 <lchmod@@Base+0x5b80>
   1d480:	umull	r6, r7, r0, ip
   1d484:	mov	fp, lr
   1d488:	mov	sl, r7
   1d48c:	umlal	sl, fp, r1, ip
   1d490:	cmp	fp, #0
   1d494:	bne	1d690 <lchmod@@Base+0x6048>
   1d498:	mov	r2, r6
   1d49c:	mov	r3, sl
   1d4a0:	b	1cfa4 <lchmod@@Base+0x595c>
   1d4a4:	umull	r0, r1, sl, ip
   1d4a8:	mov	r3, r7
   1d4ac:	mov	r2, r1
   1d4b0:	umlal	r2, r3, lr, ip
   1d4b4:	cmp	r3, #0
   1d4b8:	beq	1d0f4 <lchmod@@Base+0x5aac>
   1d4bc:	ldr	r3, [sp, #4]
   1d4c0:	mov	r7, #1
   1d4c4:	mul	r2, sl, r3
   1d4c8:	ldr	r3, [sp]
   1d4cc:	mla	r2, lr, r3, r2
   1d4d0:	add	r2, r2, r1
   1d4d4:	b	1d0f4 <lchmod@@Base+0x5aac>
   1d4d8:	umull	r6, r7, r0, ip
   1d4dc:	mov	r3, r1
   1d4e0:	mov	r2, r7
   1d4e4:	umlal	r2, r3, fp, ip
   1d4e8:	cmp	r3, #0
   1d4ec:	strd	r2, [sp, #16]
   1d4f0:	bne	1d774 <lchmod@@Base+0x612c>
   1d4f4:	mov	r2, r6
   1d4f8:	ldr	r3, [sp, #16]
   1d4fc:	b	1cf6c <lchmod@@Base+0x5924>
   1d500:	umull	sl, fp, r2, ip
   1d504:	mov	r7, lr
   1d508:	mov	r6, fp
   1d50c:	umlal	r6, r7, r3, ip
   1d510:	cmp	r7, #0
   1d514:	bne	1d540 <lchmod@@Base+0x5ef8>
   1d518:	mov	r0, sl
   1d51c:	mov	r1, r6
   1d520:	b	1cf88 <lchmod@@Base+0x5940>
   1d524:	ldrd	r2, [sp]
   1d528:	mov	r0, sl
   1d52c:	mov	r1, #1
   1d530:	mul	r6, r6, r3
   1d534:	mla	r7, r2, r7, r6
   1d538:	add	fp, r7, fp
   1d53c:	b	1d12c <lchmod@@Base+0x5ae4>
   1d540:	ldrd	r6, [sp]
   1d544:	mov	r0, sl
   1d548:	mov	lr, #1
   1d54c:	mul	r2, r2, r7
   1d550:	mla	r1, r3, r6, r2
   1d554:	add	r1, r1, fp
   1d558:	b	1cf88 <lchmod@@Base+0x5940>
   1d55c:	ldrd	r0, [sp]
   1d560:	mov	r6, sl
   1d564:	mov	r7, #1
   1d568:	mul	r2, r2, r1
   1d56c:	mla	lr, r3, r0, r2
   1d570:	add	lr, lr, fp
   1d574:	b	1ce38 <lchmod@@Base+0x57f0>
   1d578:	ldm	sp, {r0, r3}
   1d57c:	mov	r2, sl
   1d580:	mov	r1, #1
   1d584:	mul	r3, r6, r3
   1d588:	mla	r3, r0, r7, r3
   1d58c:	add	r3, r3, fp
   1d590:	b	1cda4 <lchmod@@Base+0x575c>
   1d594:	ldrd	r6, [sp]
   1d598:	mov	r0, sl
   1d59c:	mov	lr, #1
   1d5a0:	mul	r2, r2, r7
   1d5a4:	mla	r1, r3, r6, r2
   1d5a8:	add	r1, r1, fp
   1d5ac:	b	1cfc0 <lchmod@@Base+0x5978>
   1d5b0:	ldrd	sl, [sp]
   1d5b4:	mov	r0, r6
   1d5b8:	mov	lr, #1
   1d5bc:	mul	r2, r2, fp
   1d5c0:	mla	r1, r3, sl, r2
   1d5c4:	add	r1, r1, r7
   1d5c8:	b	1cdc4 <lchmod@@Base+0x577c>
   1d5cc:	ldm	sp, {r1, r3}
   1d5d0:	mov	r2, r6
   1d5d4:	mov	lr, #1
   1d5d8:	mul	r3, r0, r3
   1d5dc:	mla	r3, fp, r1, r3
   1d5e0:	add	r3, r3, r7
   1d5e4:	b	1ce18 <lchmod@@Base+0x57d0>
   1d5e8:	ldrd	r2, [sp]
   1d5ec:	mov	r0, sl
   1d5f0:	mov	r1, #1
   1d5f4:	mul	r6, r6, r3
   1d5f8:	mla	r7, r2, r7, r6
   1d5fc:	add	fp, r7, fp
   1d600:	b	1cf4c <lchmod@@Base+0x5904>
   1d604:	mul	r3, r6, r1
   1d608:	mov	lr, #1
   1d60c:	mov	r6, sl
   1d610:	mla	r7, ip, r7, r3
   1d614:	add	r7, r7, fp
   1d618:	b	1cea4 <lchmod@@Base+0x585c>
   1d61c:	ldrd	r2, [sp]
   1d620:	mov	r1, #1
   1d624:	ldr	sl, [sp, #16]
   1d628:	mul	lr, r6, r3
   1d62c:	ldr	r3, [sp, #20]
   1d630:	mla	lr, r2, r7, lr
   1d634:	add	lr, lr, r3
   1d638:	b	1d0d4 <lchmod@@Base+0x5a8c>
   1d63c:	ldm	sp, {r1, r3}
   1d640:	mov	r2, r6
   1d644:	mov	lr, #1
   1d648:	mul	r3, r0, r3
   1d64c:	mla	r3, fp, r1, r3
   1d650:	add	r3, r3, r7
   1d654:	b	1cfa4 <lchmod@@Base+0x595c>
   1d658:	ldm	sp, {r0, r3}
   1d65c:	mov	r2, sl
   1d660:	mov	r1, #1
   1d664:	mul	r3, r6, r3
   1d668:	mla	r3, r0, r7, r3
   1d66c:	add	r3, r3, fp
   1d670:	b	1d1a8 <lchmod@@Base+0x5b60>
   1d674:	ldrd	r2, [sp]
   1d678:	mov	r0, sl
   1d67c:	mov	r1, #1
   1d680:	mul	r6, r6, r3
   1d684:	mla	r7, r2, r7, r6
   1d688:	add	fp, r7, fp
   1d68c:	b	1d018 <lchmod@@Base+0x59d0>
   1d690:	ldrd	sl, [sp]
   1d694:	mov	r2, r6
   1d698:	mov	lr, #1
   1d69c:	mul	r3, r0, fp
   1d6a0:	mla	r3, r1, sl, r3
   1d6a4:	add	r3, r3, r7
   1d6a8:	b	1cfa4 <lchmod@@Base+0x595c>
   1d6ac:	ldrd	sl, [sp]
   1d6b0:	mov	r0, r6
   1d6b4:	mov	lr, #1
   1d6b8:	mul	r2, r2, fp
   1d6bc:	mla	r1, r3, sl, r2
   1d6c0:	add	r1, r1, r7
   1d6c4:	b	1cdfc <lchmod@@Base+0x57b4>
   1d6c8:	movw	r3, #61876	; 0xf1b4
   1d6cc:	movt	r3, #1
   1d6d0:	movw	r1, #61888	; 0xf1c0
   1d6d4:	movt	r1, #1
   1d6d8:	movw	r0, #61904	; 0xf1d0
   1d6dc:	movt	r0, #1
   1d6e0:	mov	r2, #85	; 0x55
   1d6e4:	bl	118cc <__assert_fail@plt>
   1d6e8:	ldrd	sl, [sp]
   1d6ec:	mov	r2, r6
   1d6f0:	mov	lr, #1
   1d6f4:	mul	r3, r0, fp
   1d6f8:	mla	r3, r1, sl, r3
   1d6fc:	add	r3, r3, r7
   1d700:	b	1ce18 <lchmod@@Base+0x57d0>
   1d704:	ldrd	r6, [sp]
   1d708:	mov	r2, sl
   1d70c:	mov	lr, #1
   1d710:	mul	r3, r0, r7
   1d714:	mla	r3, r1, r6, r3
   1d718:	add	r3, r3, fp
   1d71c:	b	1ce18 <lchmod@@Base+0x57d0>
   1d720:	ldm	sp, {r0, r3}
   1d724:	mov	r2, sl
   1d728:	mov	r1, #1
   1d72c:	mul	r3, r6, r3
   1d730:	mla	r3, r0, r7, r3
   1d734:	add	r3, r3, fp
   1d738:	b	1d078 <lchmod@@Base+0x5a30>
   1d73c:	ldrd	r6, [sp]
   1d740:	mov	r2, sl
   1d744:	mov	lr, #1
   1d748:	mul	r3, r0, r7
   1d74c:	mla	r3, r1, r6, r3
   1d750:	add	r3, r3, fp
   1d754:	b	1cde0 <lchmod@@Base+0x5798>
   1d758:	ldrd	r0, [sp]
   1d75c:	mov	r6, sl
   1d760:	mov	r7, #1
   1d764:	mul	r2, r2, r1
   1d768:	mla	lr, r3, r0, r2
   1d76c:	add	lr, lr, fp
   1d770:	b	1d1c8 <lchmod@@Base+0x5b80>
   1d774:	ldm	sp, {r1, r3}
   1d778:	mov	r2, r6
   1d77c:	mov	lr, #1
   1d780:	mul	r3, r0, r3
   1d784:	mla	r3, fp, r1, r3
   1d788:	add	r3, r3, r7
   1d78c:	b	1cf6c <lchmod@@Base+0x5924>
   1d790:	cmp	r1, #0
   1d794:	cmpne	r0, #0
   1d798:	beq	1d7e4 <lchmod@@Base+0x619c>
   1d79c:	strd	r4, [sp, #-16]!
   1d7a0:	umull	r4, r5, r0, r1
   1d7a4:	str	r6, [sp, #8]
   1d7a8:	str	lr, [sp, #12]
   1d7ac:	adds	r3, r5, #0
   1d7b0:	movne	r3, #1
   1d7b4:	cmp	r4, #0
   1d7b8:	blt	1d7c4 <lchmod@@Base+0x617c>
   1d7bc:	cmp	r3, #0
   1d7c0:	beq	1d7f0 <lchmod@@Base+0x61a8>
   1d7c4:	bl	1171c <__errno_location@plt>
   1d7c8:	mov	r3, #12
   1d7cc:	ldrd	r4, [sp]
   1d7d0:	ldr	r6, [sp, #8]
   1d7d4:	add	sp, sp, #12
   1d7d8:	str	r3, [r0]
   1d7dc:	mov	r0, #0
   1d7e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d7e4:	mov	r1, #1
   1d7e8:	mov	r0, r1
   1d7ec:	b	114a0 <calloc@plt>
   1d7f0:	ldrd	r4, [sp]
   1d7f4:	ldr	r6, [sp, #8]
   1d7f8:	ldr	lr, [sp, #12]
   1d7fc:	add	sp, sp, #16
   1d800:	b	114a0 <calloc@plt>
   1d804:	cmp	r0, #0
   1d808:	beq	1d814 <lchmod@@Base+0x61cc>
   1d80c:	blt	1d81c <lchmod@@Base+0x61d4>
   1d810:	b	1165c <malloc@plt>
   1d814:	mov	r0, #1
   1d818:	b	1165c <malloc@plt>
   1d81c:	str	r4, [sp, #-8]!
   1d820:	str	lr, [sp, #4]
   1d824:	bl	1171c <__errno_location@plt>
   1d828:	mov	r3, #12
   1d82c:	ldr	r4, [sp]
   1d830:	add	sp, sp, #4
   1d834:	str	r3, [r0]
   1d838:	mov	r0, #0
   1d83c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d840:	cmp	r0, #0
   1d844:	beq	1d86c <lchmod@@Base+0x6224>
   1d848:	cmp	r1, #0
   1d84c:	str	r4, [sp, #-8]!
   1d850:	str	lr, [sp, #4]
   1d854:	beq	1d874 <lchmod@@Base+0x622c>
   1d858:	blt	1d888 <lchmod@@Base+0x6240>
   1d85c:	ldr	r4, [sp]
   1d860:	ldr	lr, [sp, #4]
   1d864:	add	sp, sp, #8
   1d868:	b	11590 <realloc@plt>
   1d86c:	mov	r0, r1
   1d870:	b	1d804 <lchmod@@Base+0x61bc>
   1d874:	bl	13688 <__assert_fail@plt+0x1dbc>
   1d878:	ldr	r4, [sp]
   1d87c:	add	sp, sp, #4
   1d880:	mov	r0, #0
   1d884:	pop	{pc}		; (ldr pc, [sp], #4)
   1d888:	bl	1171c <__errno_location@plt>
   1d88c:	mov	r3, #12
   1d890:	str	r3, [r0]
   1d894:	b	1d878 <lchmod@@Base+0x6230>
   1d898:	ldrb	r3, [r0]
   1d89c:	cmp	r3, #47	; 0x2f
   1d8a0:	bne	1d8b0 <lchmod@@Base+0x6268>
   1d8a4:	ldrb	r3, [r0, #1]!
   1d8a8:	cmp	r3, #47	; 0x2f
   1d8ac:	beq	1d8a4 <lchmod@@Base+0x625c>
   1d8b0:	cmp	r3, #0
   1d8b4:	beq	1d8e4 <lchmod@@Base+0x629c>
   1d8b8:	mov	r2, r0
   1d8bc:	mov	r1, #0
   1d8c0:	cmp	r3, #47	; 0x2f
   1d8c4:	moveq	r1, #1
   1d8c8:	beq	1d8d8 <lchmod@@Base+0x6290>
   1d8cc:	cmp	r1, #0
   1d8d0:	movne	r0, r2
   1d8d4:	movne	r1, #0
   1d8d8:	ldrb	r3, [r2, #1]!
   1d8dc:	cmp	r3, #0
   1d8e0:	bne	1d8c0 <lchmod@@Base+0x6278>
   1d8e4:	bx	lr
   1d8e8:	str	r4, [sp, #-8]!
   1d8ec:	mov	r4, r0
   1d8f0:	str	lr, [sp, #4]
   1d8f4:	bl	116e0 <strlen@plt>
   1d8f8:	cmp	r0, #1
   1d8fc:	bls	1d910 <lchmod@@Base+0x62c8>
   1d900:	sub	r2, r0, #1
   1d904:	ldrb	r1, [r4, r2]
   1d908:	cmp	r1, #47	; 0x2f
   1d90c:	beq	1d91c <lchmod@@Base+0x62d4>
   1d910:	ldr	r4, [sp]
   1d914:	add	sp, sp, #4
   1d918:	pop	{pc}		; (ldr pc, [sp], #4)
   1d91c:	cmp	r2, #1
   1d920:	beq	1d934 <lchmod@@Base+0x62ec>
   1d924:	add	r1, r4, r0
   1d928:	ldrb	r1, [r1, #-2]
   1d92c:	cmp	r1, #47	; 0x2f
   1d930:	beq	1d944 <lchmod@@Base+0x62fc>
   1d934:	ldr	r4, [sp]
   1d938:	add	sp, sp, #4
   1d93c:	mov	r0, r2
   1d940:	pop	{pc}		; (ldr pc, [sp], #4)
   1d944:	sub	r3, r0, #3
   1d948:	rsb	r0, r4, #1
   1d94c:	add	r3, r4, r3
   1d950:	cmp	r3, r4
   1d954:	add	r2, r0, r3
   1d958:	beq	1d934 <lchmod@@Base+0x62ec>
   1d95c:	ldrb	r1, [r3], #-1
   1d960:	cmp	r1, #47	; 0x2f
   1d964:	bne	1d934 <lchmod@@Base+0x62ec>
   1d968:	b	1d950 <lchmod@@Base+0x6308>
   1d96c:	strd	r4, [sp, #-16]!
   1d970:	mov	r4, r0
   1d974:	str	r6, [sp, #8]
   1d978:	str	lr, [sp, #12]
   1d97c:	bl	11620 <__fpending@plt>
   1d980:	ldr	r5, [r4]
   1d984:	mov	r6, r0
   1d988:	mov	r0, r4
   1d98c:	bl	1db14 <lchmod@@Base+0x64cc>
   1d990:	mov	r4, r0
   1d994:	and	r5, r5, #32
   1d998:	cmp	r5, #0
   1d99c:	bne	1d9d4 <lchmod@@Base+0x638c>
   1d9a0:	cmp	r0, #0
   1d9a4:	beq	1d9c0 <lchmod@@Base+0x6378>
   1d9a8:	cmp	r6, #0
   1d9ac:	bne	1d9ec <lchmod@@Base+0x63a4>
   1d9b0:	bl	1171c <__errno_location@plt>
   1d9b4:	ldr	r4, [r0]
   1d9b8:	subs	r4, r4, #9
   1d9bc:	mvnne	r4, #0
   1d9c0:	mov	r0, r4
   1d9c4:	ldrd	r4, [sp]
   1d9c8:	ldr	r6, [sp, #8]
   1d9cc:	add	sp, sp, #12
   1d9d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d9d4:	cmp	r0, #0
   1d9d8:	bne	1d9ec <lchmod@@Base+0x63a4>
   1d9dc:	bl	1171c <__errno_location@plt>
   1d9e0:	str	r4, [r0]
   1d9e4:	mvn	r4, #0
   1d9e8:	b	1d9c0 <lchmod@@Base+0x6378>
   1d9ec:	mvn	r4, #0
   1d9f0:	b	1d9c0 <lchmod@@Base+0x6378>
   1d9f4:	movw	r3, #62998	; 0xf616
   1d9f8:	movt	r3, #149	; 0x95
   1d9fc:	strd	r4, [sp, #-8]!
   1da00:	mov	r4, #0
   1da04:	mov	r5, #0
   1da08:	strd	r4, [r0, #16]
   1da0c:	str	r3, [r0, #24]
   1da10:	ldrd	r4, [sp]
   1da14:	add	sp, sp, #8
   1da18:	bx	lr
   1da1c:	ldr	r2, [r0, #24]
   1da20:	movw	r3, #62998	; 0xf616
   1da24:	movt	r3, #149	; 0x95
   1da28:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1da2c:	strd	r6, [sp, #8]
   1da30:	strd	r8, [sp, #16]
   1da34:	strd	sl, [sp, #24]
   1da38:	cmp	r2, r3
   1da3c:	str	lr, [sp, #32]
   1da40:	sub	sp, sp, #4
   1da44:	bne	1daf4 <lchmod@@Base+0x64ac>
   1da48:	ldrd	r6, [r0, #16]
   1da4c:	ldrd	sl, [r1, #96]	; 0x60
   1da50:	orrs	r3, r6, r7
   1da54:	beq	1daa8 <lchmod@@Base+0x6460>
   1da58:	ldrd	r2, [r0]
   1da5c:	cmp	r3, fp
   1da60:	cmpeq	r2, sl
   1da64:	beq	1dac8 <lchmod@@Base+0x6480>
   1da68:	adds	r8, r6, #1
   1da6c:	adc	r9, r7, #0
   1da70:	and	r2, r6, r8
   1da74:	and	r3, r7, r9
   1da78:	orrs	r3, r2, r3
   1da7c:	strd	r8, [r0, #16]
   1da80:	movne	r1, #0
   1da84:	beq	1dae4 <lchmod@@Base+0x649c>
   1da88:	mov	r0, r1
   1da8c:	add	sp, sp, #4
   1da90:	ldrd	r4, [sp]
   1da94:	ldrd	r6, [sp, #8]
   1da98:	ldrd	r8, [sp, #16]
   1da9c:	ldrd	sl, [sp, #24]
   1daa0:	add	sp, sp, #32
   1daa4:	pop	{pc}		; (ldr pc, [sp], #4)
   1daa8:	mov	r2, #1
   1daac:	mov	r3, #0
   1dab0:	strd	r2, [r0, #16]
   1dab4:	ldrd	r2, [r1]
   1dab8:	mov	r1, #0
   1dabc:	strd	sl, [r0]
   1dac0:	strd	r2, [r0, #8]
   1dac4:	b	1da88 <lchmod@@Base+0x6440>
   1dac8:	ldrd	r4, [r1]
   1dacc:	ldrd	r2, [r0, #8]
   1dad0:	cmp	r5, r3
   1dad4:	cmpeq	r4, r2
   1dad8:	bne	1da68 <lchmod@@Base+0x6420>
   1dadc:	mov	r1, #1
   1dae0:	b	1da88 <lchmod@@Base+0x6440>
   1dae4:	orrs	r3, r8, r9
   1dae8:	bne	1dab4 <lchmod@@Base+0x646c>
   1daec:	mov	r1, #1
   1daf0:	b	1da88 <lchmod@@Base+0x6440>
   1daf4:	movw	r3, #61944	; 0xf1f8
   1daf8:	movt	r3, #1
   1dafc:	movw	r1, #61956	; 0xf204
   1db00:	movt	r1, #1
   1db04:	movw	r0, #61976	; 0xf218
   1db08:	movt	r0, #1
   1db0c:	mov	r2, #60	; 0x3c
   1db10:	bl	118cc <__assert_fail@plt>
   1db14:	strd	r4, [sp, #-12]!
   1db18:	mov	r4, r0
   1db1c:	str	lr, [sp, #8]
   1db20:	sub	sp, sp, #12
   1db24:	bl	11758 <fileno@plt>
   1db28:	cmp	r0, #0
   1db2c:	mov	r0, r4
   1db30:	blt	1dbb4 <lchmod@@Base+0x656c>
   1db34:	bl	11674 <__freading@plt>
   1db38:	cmp	r0, #0
   1db3c:	bne	1db80 <lchmod@@Base+0x6538>
   1db40:	mov	r0, r4
   1db44:	bl	1ddf0 <lchmod@@Base+0x67a8>
   1db48:	cmp	r0, #0
   1db4c:	beq	1dbb0 <lchmod@@Base+0x6568>
   1db50:	bl	1171c <__errno_location@plt>
   1db54:	mov	r5, r0
   1db58:	mov	r0, r4
   1db5c:	ldr	r4, [r5]
   1db60:	bl	11770 <fclose@plt>
   1db64:	cmp	r4, #0
   1db68:	mvnne	r0, #0
   1db6c:	strne	r4, [r5]
   1db70:	add	sp, sp, #12
   1db74:	ldrd	r4, [sp]
   1db78:	add	sp, sp, #8
   1db7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1db80:	mov	r0, r4
   1db84:	bl	11758 <fileno@plt>
   1db88:	mov	r1, #1
   1db8c:	mov	r2, #0
   1db90:	mov	r3, #0
   1db94:	str	r1, [sp]
   1db98:	bl	115fc <lseek64@plt>
   1db9c:	mvn	r3, #0
   1dba0:	mvn	r2, #0
   1dba4:	cmp	r1, r3
   1dba8:	cmpeq	r0, r2
   1dbac:	bne	1db40 <lchmod@@Base+0x64f8>
   1dbb0:	mov	r0, r4
   1dbb4:	add	sp, sp, #12
   1dbb8:	ldrd	r4, [sp]
   1dbbc:	ldr	lr, [sp, #8]
   1dbc0:	add	sp, sp, #12
   1dbc4:	b	11770 <fclose@plt>
   1dbc8:	push	{r1, r2, r3}
   1dbcc:	strd	r4, [sp, #-20]!	; 0xffffffec
   1dbd0:	strd	r6, [sp, #8]
   1dbd4:	str	lr, [sp, #16]
   1dbd8:	sub	sp, sp, #8
   1dbdc:	ldr	r1, [sp, #28]
   1dbe0:	add	r2, sp, #32
   1dbe4:	str	r2, [sp, #4]
   1dbe8:	cmp	r1, #0
   1dbec:	beq	1dcc8 <lchmod@@Base+0x6680>
   1dbf0:	movw	r3, #1030	; 0x406
   1dbf4:	mov	r6, r0
   1dbf8:	cmp	r1, r3
   1dbfc:	beq	1dcd8 <lchmod@@Base+0x6690>
   1dc00:	cmp	r1, #11
   1dc04:	beq	1dc80 <lchmod@@Base+0x6638>
   1dc08:	ble	1dc60 <lchmod@@Base+0x6618>
   1dc0c:	movw	r2, #1031	; 0x407
   1dc10:	cmp	r1, r2
   1dc14:	bgt	1dc9c <lchmod@@Base+0x6654>
   1dc18:	cmp	r1, r3
   1dc1c:	bge	1dc2c <lchmod@@Base+0x65e4>
   1dc20:	movw	r3, #1025	; 0x401
   1dc24:	cmp	r1, r3
   1dc28:	beq	1dc80 <lchmod@@Base+0x6638>
   1dc2c:	ldr	r3, [sp, #4]
   1dc30:	mov	r0, r6
   1dc34:	ldr	r2, [r3]
   1dc38:	bl	11788 <fcntl64@plt>
   1dc3c:	mov	r4, r0
   1dc40:	mov	r0, r4
   1dc44:	add	sp, sp, #8
   1dc48:	ldrd	r4, [sp]
   1dc4c:	ldrd	r6, [sp, #8]
   1dc50:	ldr	lr, [sp, #16]
   1dc54:	add	sp, sp, #20
   1dc58:	add	sp, sp, #12
   1dc5c:	bx	lr
   1dc60:	cmp	r1, #4
   1dc64:	beq	1dc2c <lchmod@@Base+0x65e4>
   1dc68:	bgt	1dc90 <lchmod@@Base+0x6648>
   1dc6c:	cmp	r1, #2
   1dc70:	beq	1dc2c <lchmod@@Base+0x65e4>
   1dc74:	bgt	1dc80 <lchmod@@Base+0x6638>
   1dc78:	cmp	r1, #1
   1dc7c:	bne	1dc2c <lchmod@@Base+0x65e4>
   1dc80:	mov	r0, r6
   1dc84:	bl	11788 <fcntl64@plt>
   1dc88:	mov	r4, r0
   1dc8c:	b	1dc40 <lchmod@@Base+0x65f8>
   1dc90:	cmp	r1, #9
   1dc94:	bne	1dc2c <lchmod@@Base+0x65e4>
   1dc98:	b	1dc80 <lchmod@@Base+0x6638>
   1dc9c:	movw	r3, #1033	; 0x409
   1dca0:	cmp	r1, r3
   1dca4:	beq	1dc2c <lchmod@@Base+0x65e4>
   1dca8:	blt	1dc80 <lchmod@@Base+0x6638>
   1dcac:	movw	r3, #1034	; 0x40a
   1dcb0:	cmp	r1, r3
   1dcb4:	bne	1dc2c <lchmod@@Base+0x65e4>
   1dcb8:	mov	r0, r6
   1dcbc:	bl	11788 <fcntl64@plt>
   1dcc0:	mov	r4, r0
   1dcc4:	b	1dc40 <lchmod@@Base+0x65f8>
   1dcc8:	ldr	r2, [sp, #32]
   1dccc:	bl	11788 <fcntl64@plt>
   1dcd0:	mov	r4, r0
   1dcd4:	b	1dc40 <lchmod@@Base+0x65f8>
   1dcd8:	movw	r5, #812	; 0x32c
   1dcdc:	movt	r5, #3
   1dce0:	ldr	r7, [r2]
   1dce4:	add	r2, sp, #36	; 0x24
   1dce8:	ldr	r3, [r5]
   1dcec:	str	r2, [sp, #4]
   1dcf0:	mov	r2, r7
   1dcf4:	cmp	r3, #0
   1dcf8:	blt	1dd14 <lchmod@@Base+0x66cc>
   1dcfc:	bl	11788 <fcntl64@plt>
   1dd00:	subs	r4, r0, #0
   1dd04:	blt	1dd7c <lchmod@@Base+0x6734>
   1dd08:	mov	r3, #1
   1dd0c:	str	r3, [r5]
   1dd10:	b	1dc40 <lchmod@@Base+0x65f8>
   1dd14:	mov	r1, #0
   1dd18:	bl	11788 <fcntl64@plt>
   1dd1c:	subs	r4, r0, #0
   1dd20:	blt	1dc40 <lchmod@@Base+0x65f8>
   1dd24:	ldr	r3, [r5]
   1dd28:	cmn	r3, #1
   1dd2c:	bne	1dc40 <lchmod@@Base+0x65f8>
   1dd30:	mov	r1, #1
   1dd34:	mov	r0, r4
   1dd38:	bl	11788 <fcntl64@plt>
   1dd3c:	subs	r2, r0, #0
   1dd40:	blt	1dd5c <lchmod@@Base+0x6714>
   1dd44:	orr	r2, r2, #1
   1dd48:	mov	r1, #2
   1dd4c:	mov	r0, r4
   1dd50:	bl	11788 <fcntl64@plt>
   1dd54:	cmn	r0, #1
   1dd58:	bne	1dc40 <lchmod@@Base+0x65f8>
   1dd5c:	bl	1171c <__errno_location@plt>
   1dd60:	mov	r5, r0
   1dd64:	mov	r0, r4
   1dd68:	ldr	r6, [r5]
   1dd6c:	mvn	r4, #0
   1dd70:	bl	11884 <close@plt>
   1dd74:	str	r6, [r5]
   1dd78:	b	1dc40 <lchmod@@Base+0x65f8>
   1dd7c:	bl	1171c <__errno_location@plt>
   1dd80:	ldr	r3, [r0]
   1dd84:	cmp	r3, #22
   1dd88:	bne	1dd08 <lchmod@@Base+0x66c0>
   1dd8c:	mov	r2, r7
   1dd90:	mov	r0, r6
   1dd94:	mov	r1, #0
   1dd98:	bl	11788 <fcntl64@plt>
   1dd9c:	subs	r4, r0, #0
   1dda0:	mvnge	r3, #0
   1dda4:	strge	r3, [r5]
   1dda8:	bge	1dd30 <lchmod@@Base+0x66e8>
   1ddac:	b	1dc40 <lchmod@@Base+0x65f8>
   1ddb0:	push	{r1, r2, r3}
   1ddb4:	push	{lr}		; (str lr, [sp, #-4]!)
   1ddb8:	sub	sp, sp, #8
   1ddbc:	ldr	r1, [sp, #12]
   1ddc0:	ands	r2, r1, #64	; 0x40
   1ddc4:	bne	1dde0 <lchmod@@Base+0x6798>
   1ddc8:	bl	11644 <open64@plt>
   1ddcc:	bl	1bc0c <lchmod@@Base+0x45c4>
   1ddd0:	add	sp, sp, #8
   1ddd4:	pop	{lr}		; (ldr lr, [sp], #4)
   1ddd8:	add	sp, sp, #12
   1dddc:	bx	lr
   1dde0:	add	r3, sp, #16
   1dde4:	ldr	r2, [sp, #16]
   1dde8:	str	r3, [sp, #4]
   1ddec:	b	1ddc8 <lchmod@@Base+0x6780>
   1ddf0:	str	r4, [sp, #-8]!
   1ddf4:	subs	r4, r0, #0
   1ddf8:	str	lr, [sp, #4]
   1ddfc:	sub	sp, sp, #8
   1de00:	beq	1de1c <lchmod@@Base+0x67d4>
   1de04:	bl	11674 <__freading@plt>
   1de08:	cmp	r0, #0
   1de0c:	beq	1de1c <lchmod@@Base+0x67d4>
   1de10:	ldr	r3, [r4]
   1de14:	tst	r3, #256	; 0x100
   1de18:	bne	1de34 <lchmod@@Base+0x67ec>
   1de1c:	mov	r0, r4
   1de20:	add	sp, sp, #8
   1de24:	ldr	r4, [sp]
   1de28:	ldr	lr, [sp, #4]
   1de2c:	add	sp, sp, #8
   1de30:	b	114e8 <fflush@plt>
   1de34:	mov	r1, #1
   1de38:	mov	r2, #0
   1de3c:	mov	r3, #0
   1de40:	mov	r0, r4
   1de44:	str	r1, [sp]
   1de48:	bl	1de50 <lchmod@@Base+0x6808>
   1de4c:	b	1de1c <lchmod@@Base+0x67d4>
   1de50:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1de54:	mov	r4, r0
   1de58:	ldr	ip, [r0, #4]
   1de5c:	strd	r6, [sp, #8]
   1de60:	str	lr, [sp, #20]
   1de64:	ldr	lr, [r0, #8]
   1de68:	str	r8, [sp, #16]
   1de6c:	sub	sp, sp, #8
   1de70:	ldr	r5, [sp, #32]
   1de74:	cmp	lr, ip
   1de78:	beq	1dea0 <lchmod@@Base+0x6858>
   1de7c:	mov	r0, r4
   1de80:	str	r5, [sp, #32]
   1de84:	add	sp, sp, #8
   1de88:	ldrd	r4, [sp]
   1de8c:	ldrd	r6, [sp, #8]
   1de90:	ldr	r8, [sp, #16]
   1de94:	ldr	lr, [sp, #20]
   1de98:	add	sp, sp, #24
   1de9c:	b	1177c <fseeko64@plt>
   1dea0:	ldr	ip, [r0, #16]
   1dea4:	ldr	lr, [r0, #20]
   1dea8:	cmp	lr, ip
   1deac:	bne	1de7c <lchmod@@Base+0x6834>
   1deb0:	ldr	r8, [r0, #36]	; 0x24
   1deb4:	cmp	r8, #0
   1deb8:	bne	1de7c <lchmod@@Base+0x6834>
   1debc:	mov	r6, r2
   1dec0:	mov	r7, r3
   1dec4:	bl	11758 <fileno@plt>
   1dec8:	mov	r2, r6
   1decc:	mov	r3, r7
   1ded0:	str	r5, [sp]
   1ded4:	bl	115fc <lseek64@plt>
   1ded8:	mvn	r3, #0
   1dedc:	mvn	r2, #0
   1dee0:	cmp	r1, r3
   1dee4:	cmpeq	r0, r2
   1dee8:	beq	1df18 <lchmod@@Base+0x68d0>
   1deec:	ldr	r3, [r4]
   1def0:	strd	r0, [r4, #80]	; 0x50
   1def4:	bic	r3, r3, #16
   1def8:	str	r3, [r4]
   1defc:	mov	r0, r8
   1df00:	add	sp, sp, #8
   1df04:	ldrd	r4, [sp]
   1df08:	ldrd	r6, [sp, #8]
   1df0c:	ldr	r8, [sp, #16]
   1df10:	add	sp, sp, #20
   1df14:	pop	{pc}		; (ldr pc, [sp], #4)
   1df18:	mvn	r8, #0
   1df1c:	b	1defc <lchmod@@Base+0x68b4>
   1df20:	ldrb	r3, [r0]
   1df24:	cmp	r3, #0
   1df28:	beq	1df4c <lchmod@@Base+0x6904>
   1df2c:	mov	r2, #0
   1df30:	add	r2, r3, r2, ror #23
   1df34:	ldrb	r3, [r0, #1]!
   1df38:	cmp	r3, #0
   1df3c:	bne	1df30 <lchmod@@Base+0x68e8>
   1df40:	udiv	r3, r2, r1
   1df44:	mls	r0, r1, r3, r2
   1df48:	bx	lr
   1df4c:	mov	r0, r3
   1df50:	bx	lr
   1df54:	mov	r0, #14
   1df58:	str	r4, [sp, #-8]!
   1df5c:	str	lr, [sp, #4]
   1df60:	bl	117b8 <nl_langinfo@plt>
   1df64:	cmp	r0, #0
   1df68:	beq	1df8c <lchmod@@Base+0x6944>
   1df6c:	ldrb	r2, [r0]
   1df70:	movw	r3, #62000	; 0xf230
   1df74:	movt	r3, #1
   1df78:	ldr	r4, [sp]
   1df7c:	add	sp, sp, #4
   1df80:	cmp	r2, #0
   1df84:	moveq	r0, r3
   1df88:	pop	{pc}		; (ldr pc, [sp], #4)
   1df8c:	ldr	r4, [sp]
   1df90:	add	sp, sp, #4
   1df94:	movw	r0, #62000	; 0xf230
   1df98:	movt	r0, #1
   1df9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1dfa0:	strd	r4, [sp, #-20]!	; 0xffffffec
   1dfa4:	mov	r5, r2
   1dfa8:	strd	r6, [sp, #8]
   1dfac:	subs	r6, r0, #0
   1dfb0:	mov	r7, r1
   1dfb4:	str	lr, [sp, #16]
   1dfb8:	sub	sp, sp, #12
   1dfbc:	addeq	r6, sp, #4
   1dfc0:	mov	r0, r6
   1dfc4:	bl	1162c <mbrtowc@plt>
   1dfc8:	cmp	r5, #0
   1dfcc:	cmnne	r0, #3
   1dfd0:	mov	r4, r0
   1dfd4:	bhi	1dff0 <lchmod@@Base+0x69a8>
   1dfd8:	mov	r0, r4
   1dfdc:	add	sp, sp, #12
   1dfe0:	ldrd	r4, [sp]
   1dfe4:	ldrd	r6, [sp, #8]
   1dfe8:	add	sp, sp, #16
   1dfec:	pop	{pc}		; (ldr pc, [sp], #4)
   1dff0:	mov	r0, #0
   1dff4:	bl	1e054 <lchmod@@Base+0x6a0c>
   1dff8:	cmp	r0, #0
   1dffc:	bne	1dfd8 <lchmod@@Base+0x6990>
   1e000:	ldrb	r3, [r7]
   1e004:	mov	r4, #1
   1e008:	str	r3, [r6]
   1e00c:	b	1dfd8 <lchmod@@Base+0x6990>
   1e010:	umull	r2, r3, r1, r2
   1e014:	cmp	r3, #0
   1e018:	bne	1e024 <lchmod@@Base+0x69dc>
   1e01c:	mov	r1, r2
   1e020:	b	1d840 <lchmod@@Base+0x61f8>
   1e024:	str	r4, [sp, #-8]!
   1e028:	str	lr, [sp, #4]
   1e02c:	bl	1171c <__errno_location@plt>
   1e030:	mov	r3, #12
   1e034:	ldr	r4, [sp]
   1e038:	add	sp, sp, #4
   1e03c:	str	r3, [r0]
   1e040:	mov	r0, #0
   1e044:	pop	{pc}		; (ldr pc, [sp], #4)
   1e048:	mov	r2, #3
   1e04c:	mov	r1, #0
   1e050:	b	1dbc8 <lchmod@@Base+0x6580>
   1e054:	push	{lr}		; (str lr, [sp, #-4]!)
   1e058:	sub	sp, sp, #268	; 0x10c
   1e05c:	movw	r2, #257	; 0x101
   1e060:	add	r1, sp, #4
   1e064:	bl	1e0ac <lchmod@@Base+0x6a64>
   1e068:	cmp	r0, #0
   1e06c:	movne	r0, #0
   1e070:	bne	1e0a4 <lchmod@@Base+0x6a5c>
   1e074:	movw	r1, #62008	; 0xf238
   1e078:	movt	r1, #1
   1e07c:	add	r0, sp, #4
   1e080:	bl	114d0 <strcmp@plt>
   1e084:	cmp	r0, #0
   1e088:	beq	1e0a4 <lchmod@@Base+0x6a5c>
   1e08c:	add	r0, sp, #4
   1e090:	movw	r1, #62012	; 0xf23c
   1e094:	movt	r1, #1
   1e098:	bl	114d0 <strcmp@plt>
   1e09c:	adds	r0, r0, #0
   1e0a0:	movne	r0, #1
   1e0a4:	add	sp, sp, #268	; 0x10c
   1e0a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e0ac:	strd	r4, [sp, #-16]!
   1e0b0:	mov	r5, r1
   1e0b4:	mov	r1, #0
   1e0b8:	mov	r4, r2
   1e0bc:	str	r6, [sp, #8]
   1e0c0:	str	lr, [sp, #12]
   1e0c4:	bl	11794 <setlocale@plt>
   1e0c8:	subs	r6, r0, #0
   1e0cc:	beq	1e14c <lchmod@@Base+0x6b04>
   1e0d0:	bl	116e0 <strlen@plt>
   1e0d4:	cmp	r4, r0
   1e0d8:	bhi	1e0f8 <lchmod@@Base+0x6ab0>
   1e0dc:	cmp	r4, #0
   1e0e0:	moveq	r0, #34	; 0x22
   1e0e4:	bne	1e11c <lchmod@@Base+0x6ad4>
   1e0e8:	ldrd	r4, [sp]
   1e0ec:	ldr	r6, [sp, #8]
   1e0f0:	add	sp, sp, #12
   1e0f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e0f8:	add	r2, r0, #1
   1e0fc:	mov	r1, r6
   1e100:	mov	r0, r5
   1e104:	bl	11530 <memcpy@plt>
   1e108:	ldrd	r4, [sp]
   1e10c:	mov	r0, #0
   1e110:	ldr	r6, [sp, #8]
   1e114:	add	sp, sp, #12
   1e118:	pop	{pc}		; (ldr pc, [sp], #4)
   1e11c:	sub	r4, r4, #1
   1e120:	mov	r1, r6
   1e124:	mov	r2, r4
   1e128:	mov	r0, r5
   1e12c:	bl	11530 <memcpy@plt>
   1e130:	mov	r3, #0
   1e134:	mov	r0, #34	; 0x22
   1e138:	strb	r3, [r5, r4]
   1e13c:	ldrd	r4, [sp]
   1e140:	ldr	r6, [sp, #8]
   1e144:	add	sp, sp, #12
   1e148:	pop	{pc}		; (ldr pc, [sp], #4)
   1e14c:	cmp	r4, #0
   1e150:	mov	r0, #22
   1e154:	strbne	r6, [r5]
   1e158:	ldrd	r4, [sp]
   1e15c:	ldr	r6, [sp, #8]
   1e160:	add	sp, sp, #12
   1e164:	pop	{pc}		; (ldr pc, [sp], #4)
   1e168:	mov	r1, #0
   1e16c:	b	11794 <setlocale@plt>
   1e170:	cmp	r3, #0
   1e174:	cmpeq	r2, #0
   1e178:	bne	1e190 <lchmod@@Base+0x6b48>
   1e17c:	cmp	r1, #0
   1e180:	cmpeq	r0, #0
   1e184:	mvnne	r1, #0
   1e188:	mvnne	r0, #0
   1e18c:	b	1e1ac <lchmod@@Base+0x6b64>
   1e190:	sub	sp, sp, #8
   1e194:	push	{sp, lr}
   1e198:	bl	1e1bc <lchmod@@Base+0x6b74>
   1e19c:	ldr	lr, [sp, #4]
   1e1a0:	add	sp, sp, #8
   1e1a4:	pop	{r2, r3}
   1e1a8:	bx	lr
   1e1ac:	push	{r1, lr}
   1e1b0:	mov	r0, #8
   1e1b4:	bl	114b8 <raise@plt>
   1e1b8:	pop	{r1, pc}
   1e1bc:	cmp	r1, r3
   1e1c0:	cmpeq	r0, r2
   1e1c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e1c8:	mov	r4, r0
   1e1cc:	movcc	r0, #0
   1e1d0:	mov	r5, r1
   1e1d4:	ldr	lr, [sp, #36]	; 0x24
   1e1d8:	movcc	r1, r0
   1e1dc:	bcc	1e2d8 <lchmod@@Base+0x6c90>
   1e1e0:	cmp	r3, #0
   1e1e4:	clzeq	ip, r2
   1e1e8:	clzne	ip, r3
   1e1ec:	addeq	ip, ip, #32
   1e1f0:	cmp	r5, #0
   1e1f4:	clzeq	r1, r4
   1e1f8:	addeq	r1, r1, #32
   1e1fc:	clzne	r1, r5
   1e200:	sub	ip, ip, r1
   1e204:	sub	sl, ip, #32
   1e208:	lsl	r9, r3, ip
   1e20c:	rsb	fp, ip, #32
   1e210:	orr	r9, r9, r2, lsl sl
   1e214:	orr	r9, r9, r2, lsr fp
   1e218:	lsl	r8, r2, ip
   1e21c:	cmp	r5, r9
   1e220:	cmpeq	r4, r8
   1e224:	movcc	r0, #0
   1e228:	movcc	r1, r0
   1e22c:	bcc	1e248 <lchmod@@Base+0x6c00>
   1e230:	mov	r0, #1
   1e234:	subs	r4, r4, r8
   1e238:	lsl	r1, r0, sl
   1e23c:	orr	r1, r1, r0, lsr fp
   1e240:	lsl	r0, r0, ip
   1e244:	sbc	r5, r5, r9
   1e248:	cmp	ip, #0
   1e24c:	beq	1e2d8 <lchmod@@Base+0x6c90>
   1e250:	lsr	r6, r8, #1
   1e254:	orr	r6, r6, r9, lsl #31
   1e258:	lsr	r7, r9, #1
   1e25c:	mov	r2, ip
   1e260:	b	1e284 <lchmod@@Base+0x6c3c>
   1e264:	subs	r3, r4, r6
   1e268:	sbc	r8, r5, r7
   1e26c:	adds	r3, r3, r3
   1e270:	adc	r8, r8, r8
   1e274:	adds	r4, r3, #1
   1e278:	adc	r5, r8, #0
   1e27c:	subs	r2, r2, #1
   1e280:	beq	1e2a0 <lchmod@@Base+0x6c58>
   1e284:	cmp	r5, r7
   1e288:	cmpeq	r4, r6
   1e28c:	bcs	1e264 <lchmod@@Base+0x6c1c>
   1e290:	adds	r4, r4, r4
   1e294:	adc	r5, r5, r5
   1e298:	subs	r2, r2, #1
   1e29c:	bne	1e284 <lchmod@@Base+0x6c3c>
   1e2a0:	lsr	r3, r4, ip
   1e2a4:	orr	r3, r3, r5, lsl fp
   1e2a8:	lsr	r2, r5, ip
   1e2ac:	orr	r3, r3, r5, lsr sl
   1e2b0:	adds	r0, r0, r4
   1e2b4:	mov	r4, r3
   1e2b8:	lsl	r3, r2, ip
   1e2bc:	orr	r3, r3, r4, lsl sl
   1e2c0:	lsl	ip, r4, ip
   1e2c4:	orr	r3, r3, r4, lsr fp
   1e2c8:	adc	r1, r1, r5
   1e2cc:	subs	r0, r0, ip
   1e2d0:	mov	r5, r2
   1e2d4:	sbc	r1, r1, r3
   1e2d8:	cmp	lr, #0
   1e2dc:	strdne	r4, [lr]
   1e2e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e2e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e2e8:	mov	r7, r0
   1e2ec:	ldr	r6, [pc, #72]	; 1e33c <lchmod@@Base+0x6cf4>
   1e2f0:	ldr	r5, [pc, #72]	; 1e340 <lchmod@@Base+0x6cf8>
   1e2f4:	add	r6, pc, r6
   1e2f8:	add	r5, pc, r5
   1e2fc:	sub	r6, r6, r5
   1e300:	mov	r8, r1
   1e304:	mov	r9, r2
   1e308:	bl	11468 <fstatfs64@plt-0x20>
   1e30c:	asrs	r6, r6, #2
   1e310:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e314:	mov	r4, #0
   1e318:	add	r4, r4, #1
   1e31c:	ldr	r3, [r5], #4
   1e320:	mov	r2, r9
   1e324:	mov	r1, r8
   1e328:	mov	r0, r7
   1e32c:	blx	r3
   1e330:	cmp	r6, r4
   1e334:	bne	1e318 <lchmod@@Base+0x6cd0>
   1e338:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e33c:	andeq	r1, r1, r0, lsl ip
   1e340:	andeq	r1, r1, r8, lsl #24
   1e344:	bx	lr
   1e348:	ldr	r3, [pc, #12]	; 1e35c <lchmod@@Base+0x6d14>
   1e34c:	mov	r1, #0
   1e350:	add	r3, pc, r3
   1e354:	ldr	r2, [r3]
   1e358:	b	11734 <__cxa_atexit@plt>
   1e35c:	andeq	r1, r1, ip, lsr #28

Disassembly of section .fini:

0001e360 <.fini>:
   1e360:	push	{r3, lr}
   1e364:	pop	{r3, pc}
