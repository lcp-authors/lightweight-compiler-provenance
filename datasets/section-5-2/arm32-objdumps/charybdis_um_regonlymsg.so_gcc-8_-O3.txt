
../repos/charybdis/modules/.libs/um_regonlymsg.so:     file format elf32-littlearm


Disassembly of section .init:

00000460 <_init>:
 460:	push	{r3, lr}
 464:	bl	4e0 <call_weak_fn>
 468:	pop	{r3, pc}

Disassembly of section .plt:

0000046c <.plt>:
 46c:	push	{lr}		; (str lr, [sp, #-4]!)
 470:	ldr	lr, [pc, #4]	; 47c <.plt+0x10>
 474:	add	lr, pc, lr
 478:	ldr	pc, [lr, #8]!
 47c:	.word	0x00010b84

00000480 <__cxa_finalize@plt>:
 480:	add	ip, pc, #0, 12
 484:	add	ip, ip, #16, 20	; 0x10000
 488:	ldr	pc, [ip, #2948]!	; 0xb84

0000048c <ierror@plt>:
 48c:	add	ip, pc, #0, 12
 490:	add	ip, ip, #16, 20	; 0x10000
 494:	ldr	pc, [ip, #2940]!	; 0xb7c

00000498 <find_umode_slot@plt>:
 498:	add	ip, pc, #0, 12
 49c:	add	ip, ip, #16, 20	; 0x10000
 4a0:	ldr	pc, [ip, #2932]!	; 0xb74

000004a4 <__gmon_start__@plt>:
 4a4:	add	ip, pc, #0, 12
 4a8:	add	ip, ip, #16, 20	; 0x10000
 4ac:	ldr	pc, [ip, #2924]!	; 0xb6c

000004b0 <sendto_one_numeric@plt>:
 4b0:	add	ip, pc, #0, 12
 4b4:	add	ip, ip, #16, 20	; 0x10000
 4b8:	ldr	pc, [ip, #2916]!	; 0xb64

000004bc <snprintf@plt>:
 4bc:	add	ip, pc, #0, 12
 4c0:	add	ip, ip, #16, 20	; 0x10000
 4c4:	ldr	pc, [ip, #2908]!	; 0xb5c

000004c8 <__assert_fail@plt>:
 4c8:	add	ip, pc, #0, 12
 4cc:	add	ip, ip, #16, 20	; 0x10000
 4d0:	ldr	pc, [ip, #2900]!	; 0xb54

000004d4 <construct_umodebuf@plt>:
 4d4:	add	ip, pc, #0, 12
 4d8:	add	ip, ip, #16, 20	; 0x10000
 4dc:	ldr	pc, [ip, #2892]!	; 0xb4c

Disassembly of section .text:

000004e0 <call_weak_fn>:
 4e0:	ldr	r3, [pc, #20]	; 4fc <call_weak_fn+0x1c>
 4e4:	ldr	r2, [pc, #20]	; 500 <call_weak_fn+0x20>
 4e8:	add	r3, pc, r3
 4ec:	ldr	r2, [r3, r2]
 4f0:	cmp	r2, #0
 4f4:	bxeq	lr
 4f8:	b	4a4 <__gmon_start__@plt>
 4fc:	.word	0x00010b10
 500:	.word	0x00000038

00000504 <deregister_tm_clones>:
 504:	ldr	r0, [pc, #44]	; 538 <deregister_tm_clones+0x34>
 508:	ldr	r3, [pc, #44]	; 53c <deregister_tm_clones+0x38>
 50c:	add	r0, pc, r0
 510:	add	r3, pc, r3
 514:	cmp	r3, r0
 518:	ldr	r3, [pc, #32]	; 540 <deregister_tm_clones+0x3c>
 51c:	add	r3, pc, r3
 520:	bxeq	lr
 524:	ldr	r2, [pc, #24]	; 544 <deregister_tm_clones+0x40>
 528:	ldr	r3, [r3, r2]
 52c:	cmp	r3, #0
 530:	bxeq	lr
 534:	bx	r3
 538:	.word	0x00010b7c
 53c:	.word	0x00010b78
 540:	.word	0x00010adc
 544:	.word	0x00000030

00000548 <register_tm_clones>:
 548:	ldr	r0, [pc, #56]	; 588 <register_tm_clones+0x40>
 54c:	ldr	r3, [pc, #56]	; 58c <register_tm_clones+0x44>
 550:	add	r0, pc, r0
 554:	add	r3, pc, r3
 558:	sub	r1, r3, r0
 55c:	ldr	r3, [pc, #44]	; 590 <register_tm_clones+0x48>
 560:	asr	r1, r1, #2
 564:	add	r3, pc, r3
 568:	add	r1, r1, r1, lsr #31
 56c:	asrs	r1, r1, #1
 570:	bxeq	lr
 574:	ldr	r2, [pc, #24]	; 594 <register_tm_clones+0x4c>
 578:	ldr	r3, [r3, r2]
 57c:	cmp	r3, #0
 580:	bxeq	lr
 584:	bx	r3
 588:	.word	0x00010b38
 58c:	.word	0x00010b34
 590:	.word	0x00010a94
 594:	.word	0x0000003c

00000598 <__do_global_dtors_aux>:
 598:	ldr	r3, [pc, #76]	; 5ec <__do_global_dtors_aux+0x54>
 59c:	ldr	r2, [pc, #76]	; 5f0 <__do_global_dtors_aux+0x58>
 5a0:	add	r3, pc, r3
 5a4:	add	r2, pc, r2
 5a8:	ldrb	r3, [r3]
 5ac:	cmp	r3, #0
 5b0:	bxne	lr
 5b4:	ldr	r3, [pc, #56]	; 5f4 <__do_global_dtors_aux+0x5c>
 5b8:	push	{r4, lr}
 5bc:	ldr	r3, [r2, r3]
 5c0:	cmp	r3, #0
 5c4:	beq	5d4 <__do_global_dtors_aux+0x3c>
 5c8:	ldr	r3, [pc, #40]	; 5f8 <__do_global_dtors_aux+0x60>
 5cc:	ldr	r0, [pc, r3]
 5d0:	bl	480 <__cxa_finalize@plt>
 5d4:	bl	504 <deregister_tm_clones>
 5d8:	ldr	r3, [pc, #28]	; 5fc <__do_global_dtors_aux+0x64>
 5dc:	mov	r2, #1
 5e0:	add	r3, pc, r3
 5e4:	strb	r2, [r3]
 5e8:	pop	{r4, pc}
 5ec:	.word	0x00010ae8
 5f0:	.word	0x00010a54
 5f4:	.word	0x0000002c
 5f8:	.word	0x00010a6c
 5fc:	.word	0x00010aa8

00000600 <frame_dummy>:
 600:	b	548 <register_tm_clones>

00000604 <um_regonlymsg_moddeinit>:
 604:	ldr	r3, [pc, #20]	; 620 <um_regonlymsg_moddeinit+0x1c>
 608:	mov	r2, #0
 60c:	ldr	r1, [pc, #16]	; 624 <um_regonlymsg_moddeinit+0x20>
 610:	add	r3, pc, r3
 614:	ldr	r3, [r3, r1]
 618:	str	r2, [r3, #328]	; 0x148
 61c:	b	4d4 <construct_umodebuf@plt>
 620:	.word	0x000109e8
 624:	.word	0x00000034

00000628 <um_regonlymsg_modinit>:
 628:	str	r4, [sp, #-8]!
 62c:	str	lr, [sp, #4]
 630:	bl	498 <find_umode_slot@plt>
 634:	ldr	r3, [pc, #64]	; 67c <um_regonlymsg_modinit+0x54>
 638:	ldr	r2, [pc, #64]	; 680 <um_regonlymsg_modinit+0x58>
 63c:	add	r3, pc, r3
 640:	ldr	r4, [r3, r2]
 644:	str	r0, [r4, #328]	; 0x148
 648:	bl	4d4 <construct_umodebuf@plt>
 64c:	ldr	r3, [r4, #328]	; 0x148
 650:	cmp	r3, #0
 654:	movne	r0, #0
 658:	beq	668 <um_regonlymsg_modinit+0x40>
 65c:	ldr	r4, [sp]
 660:	add	sp, sp, #4
 664:	pop	{pc}		; (ldr pc, [sp], #4)
 668:	ldr	r0, [pc, #20]	; 684 <um_regonlymsg_modinit+0x5c>
 66c:	add	r0, pc, r0
 670:	bl	48c <ierror@plt>
 674:	mvn	r0, #0
 678:	b	65c <um_regonlymsg_modinit+0x34>
 67c:	.word	0x000109bc
 680:	.word	0x00000034
 684:	.word	0x00000320

00000688 <h_hdl_privmsg_user>:
 688:	ldr	r2, [r0, #16]
 68c:	ldr	r1, [pc, #304]	; 7c4 <h_hdl_privmsg_user+0x13c>
 690:	cmp	r2, #0
 694:	add	r1, pc, r1
 698:	bxne	lr
 69c:	strd	r4, [sp, #-16]!
 6a0:	mov	r5, r2
 6a4:	ldr	r3, [r0, #8]
 6a8:	ldr	ip, [r3, #64]	; 0x40
 6ac:	str	r6, [sp, #8]
 6b0:	str	lr, [sp, #12]
 6b4:	and	r4, ip, #8192	; 0x2000
 6b8:	orrs	r2, r4, r5
 6bc:	beq	70c <h_hdl_privmsg_user+0x84>
 6c0:	ldrh	r2, [r3, #80]	; 0x50
 6c4:	cmp	r2, #64	; 0x40
 6c8:	bne	70c <h_hdl_privmsg_user+0x84>
 6cc:	ldr	r2, [pc, #244]	; 7c8 <h_hdl_privmsg_user+0x140>
 6d0:	ldr	ip, [r3, #56]	; 0x38
 6d4:	ldr	r2, [r1, r2]
 6d8:	ldr	r2, [r2, #328]	; 0x148
 6dc:	bics	r2, r2, ip
 6e0:	bne	70c <h_hdl_privmsg_user+0x84>
 6e4:	ldr	r1, [r0, #4]
 6e8:	ldrh	r2, [r1, #80]	; 0x50
 6ec:	cmp	r2, #32
 6f0:	beq	70c <h_hdl_privmsg_user+0x84>
 6f4:	ldr	r2, [r1, #56]	; 0x38
 6f8:	ubfx	r2, r2, #12, #1
 6fc:	cmp	r1, r3
 700:	orreq	r2, r2, #1
 704:	cmp	r2, #0
 708:	beq	71c <h_hdl_privmsg_user+0x94>
 70c:	ldrd	r4, [sp]
 710:	ldr	r6, [sp, #8]
 714:	add	sp, sp, #12
 718:	pop	{pc}		; (ldr pc, [sp], #4)
 71c:	ldr	r2, [r3, #432]	; 0x1b0
 720:	mov	r4, r0
 724:	cmn	r2, #316	; 0x13c
 728:	beq	7a4 <h_hdl_privmsg_user+0x11c>
 72c:	ldr	r2, [r2, #316]	; 0x13c
 730:	cmp	r2, #0
 734:	bne	748 <h_hdl_privmsg_user+0xc0>
 738:	b	758 <h_hdl_privmsg_user+0xd0>
 73c:	ldr	r2, [r2, #8]
 740:	cmp	r2, #0
 744:	beq	758 <h_hdl_privmsg_user+0xd0>
 748:	ldr	r0, [r2]
 74c:	cmp	r1, r0
 750:	bne	73c <h_hdl_privmsg_user+0xb4>
 754:	b	70c <h_hdl_privmsg_user+0x84>
 758:	ldr	r2, [r1, #24]
 75c:	ldrb	r2, [r2, #40]	; 0x28
 760:	cmp	r2, #0
 764:	bne	70c <h_hdl_privmsg_user+0x84>
 768:	ldr	r2, [r4]
 76c:	cmp	r2, #0
 770:	beq	70c <h_hdl_privmsg_user+0x84>
 774:	ldr	r2, [pc, #80]	; 7cc <h_hdl_privmsg_user+0x144>
 778:	add	r3, r3, #88	; 0x58
 77c:	mov	r0, r1
 780:	movw	r1, #486	; 0x1e6
 784:	add	r2, pc, r2
 788:	bl	4b0 <sendto_one_numeric@plt>
 78c:	movw	r3, #486	; 0x1e6
 790:	ldr	r6, [sp, #8]
 794:	str	r3, [r4, #16]
 798:	ldrd	r4, [sp]
 79c:	add	sp, sp, #12
 7a0:	pop	{pc}		; (ldr pc, [sp], #4)
 7a4:	ldr	r3, [pc, #36]	; 7d0 <h_hdl_privmsg_user+0x148>
 7a8:	movw	r2, #310	; 0x136
 7ac:	ldr	r1, [pc, #32]	; 7d4 <h_hdl_privmsg_user+0x14c>
 7b0:	ldr	r0, [pc, #32]	; 7d8 <h_hdl_privmsg_user+0x150>
 7b4:	add	r3, pc, r3
 7b8:	add	r1, pc, r1
 7bc:	add	r0, pc, r0
 7c0:	bl	4c8 <__assert_fail@plt>
 7c4:	.word	0x00010964
 7c8:	.word	0x00000034
 7cc:	.word	0x00000280
 7d0:	.word	0x00000180
 7d4:	.word	0x00000220
 7d8:	.word	0x00000238

000007dc <h_hdl_invite>:
 7dc:	ldr	r2, [r0, #16]
 7e0:	ldr	r1, [pc, #304]	; 918 <h_hdl_invite+0x13c>
 7e4:	cmp	r2, #0
 7e8:	add	r1, pc, r1
 7ec:	bxne	lr
 7f0:	strd	r4, [sp, #-16]!
 7f4:	mov	r5, r2
 7f8:	ldr	r3, [r0, #12]
 7fc:	ldr	ip, [r3, #64]	; 0x40
 800:	str	r6, [sp, #8]
 804:	str	lr, [sp, #12]
 808:	and	r4, ip, #8192	; 0x2000
 80c:	orrs	r2, r4, r5
 810:	beq	860 <h_hdl_invite+0x84>
 814:	ldrh	r2, [r3, #80]	; 0x50
 818:	cmp	r2, #64	; 0x40
 81c:	bne	860 <h_hdl_invite+0x84>
 820:	ldr	r2, [pc, #244]	; 91c <h_hdl_invite+0x140>
 824:	ldr	ip, [r3, #56]	; 0x38
 828:	ldr	r2, [r1, r2]
 82c:	ldr	r2, [r2, #328]	; 0x148
 830:	bics	r2, r2, ip
 834:	bne	860 <h_hdl_invite+0x84>
 838:	ldr	r1, [r0]
 83c:	ldrh	r2, [r1, #80]	; 0x50
 840:	cmp	r2, #32
 844:	beq	860 <h_hdl_invite+0x84>
 848:	ldr	r2, [r1, #56]	; 0x38
 84c:	ubfx	r2, r2, #12, #1
 850:	cmp	r1, r3
 854:	orreq	r2, r2, #1
 858:	cmp	r2, #0
 85c:	beq	870 <h_hdl_invite+0x94>
 860:	ldrd	r4, [sp]
 864:	ldr	r6, [sp, #8]
 868:	add	sp, sp, #12
 86c:	pop	{pc}		; (ldr pc, [sp], #4)
 870:	ldr	r2, [r3, #432]	; 0x1b0
 874:	mov	r5, r0
 878:	cmn	r2, #316	; 0x13c
 87c:	beq	8f8 <h_hdl_invite+0x11c>
 880:	ldr	r2, [r2, #316]	; 0x13c
 884:	cmp	r2, #0
 888:	bne	89c <h_hdl_invite+0xc0>
 88c:	b	8ac <h_hdl_invite+0xd0>
 890:	ldr	r2, [r2, #8]
 894:	cmp	r2, #0
 898:	beq	8ac <h_hdl_invite+0xd0>
 89c:	ldr	r0, [r2]
 8a0:	cmp	r1, r0
 8a4:	bne	890 <h_hdl_invite+0xb4>
 8a8:	b	860 <h_hdl_invite+0x84>
 8ac:	ldr	r2, [r1, #24]
 8b0:	ldrb	r2, [r2, #40]	; 0x28
 8b4:	cmp	r2, #0
 8b8:	bne	860 <h_hdl_invite+0x84>
 8bc:	ldr	r4, [pc, #92]	; 920 <h_hdl_invite+0x144>
 8c0:	add	r3, r3, #88	; 0x58
 8c4:	mov	r1, #512	; 0x200
 8c8:	ldr	r2, [pc, #84]	; 924 <h_hdl_invite+0x148>
 8cc:	add	r4, pc, r4
 8d0:	mov	r0, r4
 8d4:	add	r2, pc, r2
 8d8:	bl	4bc <snprintf@plt>
 8dc:	movw	r3, #486	; 0x1e6
 8e0:	ldr	r6, [sp, #8]
 8e4:	str	r3, [r5, #16]
 8e8:	str	r4, [r5, #28]
 8ec:	ldrd	r4, [sp]
 8f0:	add	sp, sp, #12
 8f4:	pop	{pc}		; (ldr pc, [sp], #4)
 8f8:	ldr	r3, [pc, #40]	; 928 <h_hdl_invite+0x14c>
 8fc:	movw	r2, #310	; 0x136
 900:	ldr	r1, [pc, #36]	; 92c <h_hdl_invite+0x150>
 904:	ldr	r0, [pc, #36]	; 930 <h_hdl_invite+0x154>
 908:	add	r3, pc, r3
 90c:	add	r1, pc, r1
 910:	add	r0, pc, r0
 914:	bl	4c8 <__assert_fail@plt>
 918:	.word	0x00010810
 91c:	.word	0x00000034
 920:	.word	0x000107c0
 924:	.word	0x00000130
 928:	.word	0x0000002c
 92c:	.word	0x000000cc
 930:	.word	0x000000e4

Disassembly of section .fini:

00000934 <_fini>:
 934:	push	{r3, lr}
 938:	pop	{r3, pc}
