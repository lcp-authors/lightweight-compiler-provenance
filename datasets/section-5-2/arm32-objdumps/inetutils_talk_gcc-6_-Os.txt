
../repos/inetutils/talk/talk:     file format elf32-littlearm


Disassembly of section .init:

00011670 <.init>:
   11670:	push	{r3, lr}
   11674:	bl	11c60 <putc_unlocked@plt+0x15c>
   11678:	pop	{r3, pc}

Disassembly of section .plt:

0001167c <fputs_unlocked@plt-0x14>:
   1167c:	push	{lr}		; (str lr, [sp, #-4]!)
   11680:	ldr	lr, [pc, #4]	; 1168c <fputs_unlocked@plt-0x4>
   11684:	add	lr, pc, lr
   11688:	ldr	pc, [lr, #8]!
   1168c:	andeq	r8, r1, r4, ror r9

00011690 <fputs_unlocked@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #24, 20	; 0x18000
   11698:	ldr	pc, [ip, #2420]!	; 0x974

0001169c <raise@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #24, 20	; 0x18000
   116a4:	ldr	pc, [ip, #2412]!	; 0x96c

000116a8 <setitimer@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #24, 20	; 0x18000
   116b0:	ldr	pc, [ip, #2404]!	; 0x964

000116b4 <strcmp@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #24, 20	; 0x18000
   116bc:	ldr	pc, [ip, #2396]!	; 0x95c

000116c0 <getlogin@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #24, 20	; 0x18000
   116c8:	ldr	pc, [ip, #2388]!	; 0x954

000116cc <scrollok@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #24, 20	; 0x18000
   116d4:	ldr	pc, [ip, #2380]!	; 0x94c

000116d8 <newwin@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #24, 20	; 0x18000
   116e0:	ldr	pc, [ip, #2372]!	; 0x944

000116e4 <getpwuid@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #24, 20	; 0x18000
   116ec:	ldr	pc, [ip, #2364]!	; 0x93c

000116f0 <printf@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #24, 20	; 0x18000
   116f8:	ldr	pc, [ip, #2356]!	; 0x934

000116fc <read@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #24, 20	; 0x18000
   11704:	ldr	pc, [ip, #2348]!	; 0x92c

00011708 <longjmp@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #24, 20	; 0x18000
   11710:	ldr	pc, [ip, #2340]!	; 0x924

00011714 <getuid@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #24, 20	; 0x18000
   1171c:	ldr	pc, [ip, #2332]!	; 0x91c

00011720 <_setjmp@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #24, 20	; 0x18000
   11728:	ldr	pc, [ip, #2324]!	; 0x914

0001172c <memmove@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #24, 20	; 0x18000
   11734:	ldr	pc, [ip, #2316]!	; 0x90c

00011738 <wborder@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #24, 20	; 0x18000
   11740:	ldr	pc, [ip, #2308]!	; 0x904

00011744 <strchrnul@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #24, 20	; 0x18000
   1174c:	ldr	pc, [ip, #2300]!	; 0x8fc

00011750 <free@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #24, 20	; 0x18000
   11758:	ldr	pc, [ip, #2292]!	; 0x8f4

0001175c <gai_strerror@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #24, 20	; 0x18000
   11764:	ldr	pc, [ip, #2284]!	; 0x8ec

00011768 <strndup@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #24, 20	; 0x18000
   11770:	ldr	pc, [ip, #2276]!	; 0x8e4

00011774 <wgetch@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #24, 20	; 0x18000
   1177c:	ldr	pc, [ip, #2268]!	; 0x8dc

00011780 <wclear@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #24, 20	; 0x18000
   11788:	ldr	pc, [ip, #2260]!	; 0x8d4

0001178c <memcpy@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #24, 20	; 0x18000
   11794:	ldr	pc, [ip, #2252]!	; 0x8cc

00011798 <beep@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #24, 20	; 0x18000
   117a0:	ldr	pc, [ip, #2244]!	; 0x8c4

000117a4 <signal@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #24, 20	; 0x18000
   117ac:	ldr	pc, [ip, #2236]!	; 0x8bc

000117b0 <fwrite_unlocked@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #24, 20	; 0x18000
   117b8:	ldr	pc, [ip, #2228]!	; 0x8b4

000117bc <select@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #24, 20	; 0x18000
   117c4:	ldr	pc, [ip, #2220]!	; 0x8ac

000117c8 <sleep@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #24, 20	; 0x18000
   117d0:	ldr	pc, [ip, #2212]!	; 0x8a4

000117d4 <noecho@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #24, 20	; 0x18000
   117dc:	ldr	pc, [ip, #2204]!	; 0x89c

000117e0 <strdup@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #24, 20	; 0x18000
   117e8:	ldr	pc, [ip, #2196]!	; 0x894

000117ec <realloc@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #24, 20	; 0x18000
   117f4:	ldr	pc, [ip, #2188]!	; 0x88c

000117f8 <strcasecmp@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #24, 20	; 0x18000
   11800:	ldr	pc, [ip, #2180]!	; 0x884

00011804 <funlockfile@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #24, 20	; 0x18000
   1180c:	ldr	pc, [ip, #2172]!	; 0x87c

00011810 <initscr@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #24, 20	; 0x18000
   11818:	ldr	pc, [ip, #2164]!	; 0x874

0001181c <wrefresh@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #24, 20	; 0x18000
   11824:	ldr	pc, [ip, #2156]!	; 0x86c

00011828 <perror@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #24, 20	; 0x18000
   11830:	ldr	pc, [ip, #2148]!	; 0x864

00011834 <accept@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #24, 20	; 0x18000
   1183c:	ldr	pc, [ip, #2140]!	; 0x85c

00011840 <sigaction@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #24, 20	; 0x18000
   11848:	ldr	pc, [ip, #2132]!	; 0x854

0001184c <ioctl@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #24, 20	; 0x18000
   11854:	ldr	pc, [ip, #2124]!	; 0x84c

00011858 <error@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #24, 20	; 0x18000
   11860:	ldr	pc, [ip, #2116]!	; 0x844

00011864 <gethostname@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #24, 20	; 0x18000
   1186c:	ldr	pc, [ip, #2108]!	; 0x83c

00011870 <getenv@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #24, 20	; 0x18000
   11878:	ldr	pc, [ip, #2100]!	; 0x834

0001187c <puts@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #24, 20	; 0x18000
   11884:	ldr	pc, [ip, #2092]!	; 0x82c

00011888 <malloc@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #24, 20	; 0x18000
   11890:	ldr	pc, [ip, #2084]!	; 0x824

00011894 <sigaddset@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #24, 20	; 0x18000
   1189c:	ldr	pc, [ip, #2076]!	; 0x81c

000118a0 <__libc_start_main@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #24, 20	; 0x18000
   118a8:	ldr	pc, [ip, #2068]!	; 0x814

000118ac <strerror@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #24, 20	; 0x18000
   118b4:	ldr	pc, [ip, #2060]!	; 0x80c

000118b8 <__ctype_tolower_loc@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #24, 20	; 0x18000
   118c0:	ldr	pc, [ip, #2052]!	; 0x804

000118c4 <__gmon_start__@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #24, 20	; 0x18000
   118cc:	ldr	pc, [ip, #2044]!	; 0x7fc

000118d0 <mempcpy@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #24, 20	; 0x18000
   118d8:	ldr	pc, [ip, #2036]!	; 0x7f4

000118dc <__ctype_b_loc@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #24, 20	; 0x18000
   118e4:	ldr	pc, [ip, #2028]!	; 0x7ec

000118e8 <getpid@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #24, 20	; 0x18000
   118f0:	ldr	pc, [ip, #2020]!	; 0x7e4

000118f4 <exit@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #24, 20	; 0x18000
   118fc:	ldr	pc, [ip, #2012]!	; 0x7dc

00011900 <strlen@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #24, 20	; 0x18000
   11908:	ldr	pc, [ip, #2004]!	; 0x7d4

0001190c <strchr@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #24, 20	; 0x18000
   11914:	ldr	pc, [ip, #1996]!	; 0x7cc

00011918 <fprintf@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #24, 20	; 0x18000
   11920:	ldr	pc, [ip, #1988]!	; 0x7c4

00011924 <cbreak@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #24, 20	; 0x18000
   1192c:	ldr	pc, [ip, #1980]!	; 0x7bc

00011930 <winch@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #24, 20	; 0x18000
   11938:	ldr	pc, [ip, #1972]!	; 0x7b4

0001193c <__errno_location@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #24, 20	; 0x18000
   11944:	ldr	pc, [ip, #1964]!	; 0x7ac

00011948 <getservbyname@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #24, 20	; 0x18000
   11950:	ldr	pc, [ip, #1956]!	; 0x7a4

00011954 <strerror_r@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #24, 20	; 0x18000
   1195c:	ldr	pc, [ip, #1948]!	; 0x79c

00011960 <bind@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #24, 20	; 0x18000
   11968:	ldr	pc, [ip, #1940]!	; 0x794

0001196c <memset@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #24, 20	; 0x18000
   11974:	ldr	pc, [ip, #1932]!	; 0x78c

00011978 <strncpy@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #24, 20	; 0x18000
   11980:	ldr	pc, [ip, #1924]!	; 0x784

00011984 <write@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #24, 20	; 0x18000
   1198c:	ldr	pc, [ip, #1916]!	; 0x77c

00011990 <fileno@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #24, 20	; 0x18000
   11998:	ldr	pc, [ip, #1908]!	; 0x774

0001199c <memchr@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #24, 20	; 0x18000
   119a4:	ldr	pc, [ip, #1900]!	; 0x76c

000119a8 <sendto@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #24, 20	; 0x18000
   119b0:	ldr	pc, [ip, #1892]!	; 0x764

000119b4 <setlocale@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #24, 20	; 0x18000
   119bc:	ldr	pc, [ip, #1884]!	; 0x75c

000119c0 <getnameinfo@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #24, 20	; 0x18000
   119c8:	ldr	pc, [ip, #1876]!	; 0x754

000119cc <strrchr@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #24, 20	; 0x18000
   119d4:	ldr	pc, [ip, #1868]!	; 0x74c

000119d8 <listen@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #24, 20	; 0x18000
   119e0:	ldr	pc, [ip, #1860]!	; 0x744

000119e4 <vfprintf@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #24, 20	; 0x18000
   119ec:	ldr	pc, [ip, #1852]!	; 0x73c

000119f0 <fputc@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #24, 20	; 0x18000
   119f8:	ldr	pc, [ip, #1844]!	; 0x734

000119fc <getsockname@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #24, 20	; 0x18000
   11a04:	ldr	pc, [ip, #1836]!	; 0x72c

00011a08 <wmove@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #24, 20	; 0x18000
   11a10:	ldr	pc, [ip, #1828]!	; 0x724

00011a14 <wclrtoeol@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #24, 20	; 0x18000
   11a1c:	ldr	pc, [ip, #1820]!	; 0x71c

00011a20 <flockfile@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #24, 20	; 0x18000
   11a28:	ldr	pc, [ip, #1812]!	; 0x714

00011a2c <vsnprintf@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #24, 20	; 0x18000
   11a34:	ldr	pc, [ip, #1804]!	; 0x70c

00011a38 <atoi@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #24, 20	; 0x18000
   11a40:	ldr	pc, [ip, #1796]!	; 0x704

00011a44 <waddch@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #24, 20	; 0x18000
   11a4c:	ldr	pc, [ip, #1788]!	; 0x6fc

00011a50 <qsort@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #24, 20	; 0x18000
   11a58:	ldr	pc, [ip, #1780]!	; 0x6f4

00011a5c <freeaddrinfo@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #24, 20	; 0x18000
   11a64:	ldr	pc, [ip, #1772]!	; 0x6ec

00011a68 <getaddrinfo@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #24, 20	; 0x18000
   11a70:	ldr	pc, [ip, #1764]!	; 0x6e4

00011a74 <socket@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #24, 20	; 0x18000
   11a7c:	ldr	pc, [ip, #1756]!	; 0x6dc

00011a80 <wprintw@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #24, 20	; 0x18000
   11a88:	ldr	pc, [ip, #1748]!	; 0x6d4

00011a8c <endwin@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #24, 20	; 0x18000
   11a94:	ldr	pc, [ip, #1740]!	; 0x6cc

00011a98 <isatty@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #24, 20	; 0x18000
   11aa0:	ldr	pc, [ip, #1732]!	; 0x6c4

00011aa4 <fputs@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #24, 20	; 0x18000
   11aac:	ldr	pc, [ip, #1724]!	; 0x6bc

00011ab0 <strncmp@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #24, 20	; 0x18000
   11ab8:	ldr	pc, [ip, #1716]!	; 0x6b4

00011abc <abort@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #24, 20	; 0x18000
   11ac4:	ldr	pc, [ip, #1708]!	; 0x6ac

00011ac8 <recv@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #24, 20	; 0x18000
   11ad0:	ldr	pc, [ip, #1700]!	; 0x6a4

00011ad4 <close@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #24, 20	; 0x18000
   11adc:	ldr	pc, [ip, #1692]!	; 0x69c

00011ae0 <connect@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #24, 20	; 0x18000
   11ae8:	ldr	pc, [ip, #1684]!	; 0x694

00011aec <__assert_fail@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #24, 20	; 0x18000
   11af4:	ldr	pc, [ip, #1676]!	; 0x68c

00011af8 <tcgetattr@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #24, 20	; 0x18000
   11b00:	ldr	pc, [ip, #1668]!	; 0x684

00011b04 <putc_unlocked@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #24, 20	; 0x18000
   11b0c:	ldr	pc, [ip, #1660]!	; 0x67c

Disassembly of section .text:

00011b10 <argp_parse@@Base-0x20a8>:
   11b10:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   11b14:	mov	r4, r0
   11b18:	ldr	r0, [r1]
   11b1c:	mov	r5, r1
   11b20:	bl	14774 <argp_parse@@Base+0xbbc>
   11b24:	ldr	r1, [pc, #204]	; 11bf8 <putc_unlocked@plt+0xf4>
   11b28:	mov	r0, #6
   11b2c:	bl	119b4 <setlocale@plt>
   11b30:	ldr	r3, [pc, #196]	; 11bfc <putc_unlocked@plt+0xf8>
   11b34:	ldr	r2, [pc, #196]	; 11c00 <putc_unlocked@plt+0xfc>
   11b38:	ldr	r1, [pc, #196]	; 11c04 <putc_unlocked@plt+0x100>
   11b3c:	ldr	r0, [pc, #196]	; 11c08 <putc_unlocked@plt+0x104>
   11b40:	str	r2, [r3]
   11b44:	mov	r6, #0
   11b48:	bl	145a0 <argp_parse@@Base+0x9e8>
   11b4c:	add	r3, sp, #12
   11b50:	str	r3, [sp]
   11b54:	mov	r2, r5
   11b58:	mov	r3, r6
   11b5c:	mov	r1, r4
   11b60:	str	r6, [sp, #4]
   11b64:	ldr	r0, [pc, #160]	; 11c0c <putc_unlocked@plt+0x108>
   11b68:	bl	13bb8 <argp_parse@@Base>
   11b6c:	ldr	r3, [sp, #12]
   11b70:	subs	r4, r4, r3
   11b74:	add	r5, r5, r3, lsl #2
   11b78:	ldreq	r0, [pc, #144]	; 11c10 <putc_unlocked@plt+0x10c>
   11b7c:	beq	11b94 <putc_unlocked@plt+0x90>
   11b80:	mov	r0, r6
   11b84:	bl	11a98 <isatty@plt>
   11b88:	cmp	r0, #0
   11b8c:	bne	11ba0 <putc_unlocked@plt+0x9c>
   11b90:	ldr	r0, [pc, #124]	; 11c14 <putc_unlocked@plt+0x110>
   11b94:	bl	1187c <puts@plt>
   11b98:	mvn	r0, #0
   11b9c:	bl	118f4 <exit@plt>
   11ba0:	mov	r1, r5
   11ba4:	mov	r0, r4
   11ba8:	ldr	r4, [pc, #104]	; 11c18 <putc_unlocked@plt+0x114>
   11bac:	bl	126b8 <putc_unlocked@plt+0xbb4>
   11bb0:	ldr	r3, [pc, #100]	; 11c1c <putc_unlocked@plt+0x118>
   11bb4:	str	r3, [r4]
   11bb8:	bl	11dfc <putc_unlocked@plt+0x2f8>
   11bbc:	bl	11d4c <putc_unlocked@plt+0x248>
   11bc0:	ldr	r3, [pc, #88]	; 11c20 <putc_unlocked@plt+0x11c>
   11bc4:	str	r3, [r4]
   11bc8:	bl	1348c <putc_unlocked@plt+0x1988>
   11bcc:	bl	132d8 <putc_unlocked@plt+0x17d4>
   11bd0:	cmp	r0, #0
   11bd4:	bne	11bdc <putc_unlocked@plt+0xd8>
   11bd8:	bl	12c30 <putc_unlocked@plt+0x112c>
   11bdc:	bl	134e4 <putc_unlocked@plt+0x19e0>
   11be0:	bl	127fc <putc_unlocked@plt+0xcf8>
   11be4:	bl	12998 <putc_unlocked@plt+0xe94>
   11be8:	bl	1308c <putc_unlocked@plt+0x1588>
   11bec:	mov	r0, #0
   11bf0:	add	sp, sp, #16
   11bf4:	pop	{r4, r5, r6, pc}
   11bf8:	andeq	r9, r1, r9, lsr sp
   11bfc:	ldrdeq	sl, [r2], -r8
   11c00:	andeq	r9, r1, r9, ror r2
   11c04:	muleq	r2, r8, r1
   11c08:	andeq	r9, r1, lr, lsr #32
   11c0c:	andeq	sl, r2, r8, lsr #3
   11c10:	muleq	r1, r1, r2
   11c14:	andeq	r9, r1, ip, lsr #5
   11c18:	ldrdeq	sl, [r2], -r4
   11c1c:	andeq	r9, r1, r2, ror #5
   11c20:	strdeq	r9, [r1], -r5
   11c24:	mov	fp, #0
   11c28:	mov	lr, #0
   11c2c:	pop	{r1}		; (ldr r1, [sp], #4)
   11c30:	mov	r2, sp
   11c34:	push	{r2}		; (str r2, [sp, #-4]!)
   11c38:	push	{r0}		; (str r0, [sp, #-4]!)
   11c3c:	ldr	ip, [pc, #16]	; 11c54 <putc_unlocked@plt+0x150>
   11c40:	push	{ip}		; (str ip, [sp, #-4]!)
   11c44:	ldr	r0, [pc, #12]	; 11c58 <putc_unlocked@plt+0x154>
   11c48:	ldr	r3, [pc, #12]	; 11c5c <putc_unlocked@plt+0x158>
   11c4c:	bl	118a0 <__libc_start_main@plt>
   11c50:	bl	11abc <abort@plt>
   11c54:	andeq	r8, r1, r4, lsr #25
   11c58:	andeq	r1, r1, r0, lsl fp
   11c5c:	andeq	r8, r1, r4, asr #24
   11c60:	ldr	r3, [pc, #20]	; 11c7c <putc_unlocked@plt+0x178>
   11c64:	ldr	r2, [pc, #20]	; 11c80 <putc_unlocked@plt+0x17c>
   11c68:	add	r3, pc, r3
   11c6c:	ldr	r2, [r3, r2]
   11c70:	cmp	r2, #0
   11c74:	bxeq	lr
   11c78:	b	118c4 <__gmon_start__@plt>
   11c7c:	muleq	r1, r0, r3
   11c80:	andeq	r0, r0, ip, lsl #3
   11c84:	ldr	r3, [pc, #28]	; 11ca8 <putc_unlocked@plt+0x1a4>
   11c88:	ldr	r0, [pc, #28]	; 11cac <putc_unlocked@plt+0x1a8>
   11c8c:	sub	r3, r3, r0
   11c90:	cmp	r3, #6
   11c94:	bxls	lr
   11c98:	ldr	r3, [pc, #16]	; 11cb0 <putc_unlocked@plt+0x1ac>
   11c9c:	cmp	r3, #0
   11ca0:	bxeq	lr
   11ca4:	bx	r3
   11ca8:	strdeq	sl, [r2], -pc	; <UNPREDICTABLE>
   11cac:	strdeq	sl, [r2], -ip
   11cb0:	andeq	r0, r0, r0
   11cb4:	ldr	r1, [pc, #36]	; 11ce0 <putc_unlocked@plt+0x1dc>
   11cb8:	ldr	r0, [pc, #36]	; 11ce4 <putc_unlocked@plt+0x1e0>
   11cbc:	sub	r1, r1, r0
   11cc0:	asr	r1, r1, #2
   11cc4:	add	r1, r1, r1, lsr #31
   11cc8:	asrs	r1, r1, #1
   11ccc:	bxeq	lr
   11cd0:	ldr	r3, [pc, #16]	; 11ce8 <putc_unlocked@plt+0x1e4>
   11cd4:	cmp	r3, #0
   11cd8:	bxeq	lr
   11cdc:	bx	r3
   11ce0:	strdeq	sl, [r2], -ip
   11ce4:	strdeq	sl, [r2], -ip
   11ce8:	andeq	r0, r0, r0
   11cec:	push	{r4, lr}
   11cf0:	ldr	r4, [pc, #24]	; 11d10 <putc_unlocked@plt+0x20c>
   11cf4:	ldrb	r3, [r4]
   11cf8:	cmp	r3, #0
   11cfc:	popne	{r4, pc}
   11d00:	bl	11c84 <putc_unlocked@plt+0x180>
   11d04:	mov	r3, #1
   11d08:	strb	r3, [r4]
   11d0c:	pop	{r4, pc}
   11d10:	andeq	sl, r2, r8, lsr #4
   11d14:	ldr	r0, [pc, #40]	; 11d44 <putc_unlocked@plt+0x240>
   11d18:	ldr	r3, [r0]
   11d1c:	cmp	r3, #0
   11d20:	bne	11d28 <putc_unlocked@plt+0x224>
   11d24:	b	11cb4 <putc_unlocked@plt+0x1b0>
   11d28:	ldr	r3, [pc, #24]	; 11d48 <putc_unlocked@plt+0x244>
   11d2c:	cmp	r3, #0
   11d30:	beq	11d24 <putc_unlocked@plt+0x220>
   11d34:	push	{r4, lr}
   11d38:	blx	r3
   11d3c:	pop	{r4, lr}
   11d40:	b	11cb4 <putc_unlocked@plt+0x1b0>
   11d44:	andeq	r9, r2, r4, lsl #30
   11d48:	andeq	r0, r0, r0
   11d4c:	ldr	r2, [pc, #144]	; 11de4 <putc_unlocked@plt+0x2e0>
   11d50:	ldr	r3, [pc, #144]	; 11de8 <putc_unlocked@plt+0x2e4>
   11d54:	push	{r0, r1, r4, lr}
   11d58:	mov	r0, #2
   11d5c:	ldr	r2, [r2]
   11d60:	mov	r1, #1
   11d64:	str	r2, [r3, #4]
   11d68:	mov	r2, #0
   11d6c:	strh	r0, [r3]
   11d70:	strh	r2, [r3, #2]
   11d74:	bl	11a74 <socket@plt>
   11d78:	ldr	r4, [pc, #108]	; 11dec <putc_unlocked@plt+0x2e8>
   11d7c:	cmp	r0, #0
   11d80:	str	r0, [r4]
   11d84:	bgt	11d90 <putc_unlocked@plt+0x28c>
   11d88:	ldr	r0, [pc, #96]	; 11df0 <putc_unlocked@plt+0x2ec>
   11d8c:	bl	12f10 <putc_unlocked@plt+0x140c>
   11d90:	mov	r2, #16
   11d94:	ldr	r1, [pc, #76]	; 11de8 <putc_unlocked@plt+0x2e4>
   11d98:	ldr	r0, [r4]
   11d9c:	bl	11960 <bind@plt>
   11da0:	cmp	r0, #0
   11da4:	beq	11db0 <putc_unlocked@plt+0x2ac>
   11da8:	ldr	r0, [pc, #68]	; 11df4 <putc_unlocked@plt+0x2f0>
   11dac:	bl	12f10 <putc_unlocked@plt+0x140c>
   11db0:	add	r2, sp, #8
   11db4:	mov	r3, #16
   11db8:	str	r3, [r2, #-4]!
   11dbc:	ldr	r1, [pc, #36]	; 11de8 <putc_unlocked@plt+0x2e4>
   11dc0:	ldr	r0, [r4]
   11dc4:	bl	119fc <getsockname@plt>
   11dc8:	cmn	r0, #1
   11dcc:	bne	11dd8 <putc_unlocked@plt+0x2d4>
   11dd0:	ldr	r0, [pc, #32]	; 11df8 <putc_unlocked@plt+0x2f4>
   11dd4:	bl	12f10 <putc_unlocked@plt+0x140c>
   11dd8:	mov	r0, #0
   11ddc:	add	sp, sp, #8
   11de0:	pop	{r4, pc}
   11de4:	muleq	r2, r0, r2
   11de8:	andeq	sl, r2, r0, ror r2
   11dec:	muleq	r2, r8, r2
   11df0:			; <UNDEFINED> instruction: 0x00018cb4
   11df4:			; <UNDEFINED> instruction: 0x00018cbf
   11df8:	ldrdeq	r8, [r1], -r4
   11dfc:	push	{r0, r1, r4, lr}
   11e00:	mov	r1, #2
   11e04:	ldr	r0, [pc, #136]	; 11e94 <putc_unlocked@plt+0x390>
   11e08:	ldr	r3, [pc, #136]	; 11e98 <putc_unlocked@plt+0x394>
   11e0c:	mov	r2, #0
   11e10:	ldr	r0, [r0]
   11e14:	strh	r1, [r3]
   11e18:	str	r0, [r3, #4]
   11e1c:	mov	r0, r1
   11e20:	strh	r2, [r3, #2]
   11e24:	bl	11a74 <socket@plt>
   11e28:	ldr	r4, [pc, #108]	; 11e9c <putc_unlocked@plt+0x398>
   11e2c:	cmp	r0, #0
   11e30:	str	r0, [r4]
   11e34:	bgt	11e40 <putc_unlocked@plt+0x33c>
   11e38:	ldr	r0, [pc, #96]	; 11ea0 <putc_unlocked@plt+0x39c>
   11e3c:	bl	12f10 <putc_unlocked@plt+0x140c>
   11e40:	mov	r2, #16
   11e44:	ldr	r1, [pc, #76]	; 11e98 <putc_unlocked@plt+0x394>
   11e48:	ldr	r0, [r4]
   11e4c:	bl	11960 <bind@plt>
   11e50:	cmp	r0, #0
   11e54:	beq	11e60 <putc_unlocked@plt+0x35c>
   11e58:	ldr	r0, [pc, #68]	; 11ea4 <putc_unlocked@plt+0x3a0>
   11e5c:	bl	12f10 <putc_unlocked@plt+0x140c>
   11e60:	add	r2, sp, #8
   11e64:	mov	r3, #16
   11e68:	str	r3, [r2, #-4]!
   11e6c:	ldr	r1, [pc, #36]	; 11e98 <putc_unlocked@plt+0x394>
   11e70:	ldr	r0, [r4]
   11e74:	bl	119fc <getsockname@plt>
   11e78:	cmn	r0, #1
   11e7c:	bne	11e88 <putc_unlocked@plt+0x384>
   11e80:	ldr	r0, [pc, #32]	; 11ea8 <putc_unlocked@plt+0x3a4>
   11e84:	bl	12f10 <putc_unlocked@plt+0x140c>
   11e88:	mov	r0, #0
   11e8c:	add	sp, sp, #8
   11e90:	pop	{r4, pc}
   11e94:	muleq	r2, r0, r2
   11e98:	muleq	r2, ip, r2
   11e9c:	muleq	r2, r4, r2
   11ea0:			; <UNDEFINED> instruction: 0x00018cb4
   11ea4:	andeq	r8, r1, fp, ror #25
   11ea8:	andeq	r8, r1, fp, lsl #26
   11eac:	sub	sp, sp, #16
   11eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11eb4:	sub	sp, sp, #284	; 0x11c
   11eb8:	add	r8, sp, #324	; 0x144
   11ebc:	ldr	r4, [sp, #412]	; 0x19c
   11ec0:	stm	r8, {r1, r2, r3}
   11ec4:	add	r9, sp, #152	; 0x98
   11ec8:	ldrb	r3, [sp, #408]	; 0x198
   11ecc:	ldr	r2, [pc, #516]	; 120d8 <putc_unlocked@plt+0x5d4>
   11ed0:	strb	r3, [sp, #325]	; 0x145
   11ed4:	mov	r3, #2
   11ed8:	strh	r3, [r2]
   11edc:	ldr	r3, [pc, #504]	; 120dc <putc_unlocked@plt+0x5d8>
   11ee0:	str	r0, [r2, #4]
   11ee4:	str	r2, [sp, #12]
   11ee8:	ldrh	r3, [r3]
   11eec:	rev16	r3, r3
   11ef0:	strh	r3, [r2, #2]
   11ef4:	mov	r3, #0
   11ef8:	mov	r2, r3
   11efc:	str	r2, [r9, r3, lsl #2]
   11f00:	add	r3, r3, #1
   11f04:	cmp	r3, #32
   11f08:	bne	11efc <putc_unlocked@plt+0x3f8>
   11f0c:	ldr	r7, [pc, #460]	; 120e0 <putc_unlocked@plt+0x5dc>
   11f10:	add	r1, sp, #280	; 0x118
   11f14:	mov	r0, #1
   11f18:	ldr	r3, [r7]
   11f1c:	mov	r6, #0
   11f20:	cmp	r3, #0
   11f24:	add	r2, r3, #31
   11f28:	movge	r2, r3
   11f2c:	mov	r5, r6
   11f30:	asr	r2, r2, #5
   11f34:	add	r2, r1, r2, lsl #2
   11f38:	rsbs	r1, r3, #0
   11f3c:	and	r1, r1, #31
   11f40:	and	r3, r3, #31
   11f44:	rsbpl	r3, r1, #0
   11f48:	ldr	r1, [r2, #-128]	; 0xffffff80
   11f4c:	orr	r3, r1, r0, lsl r3
   11f50:	str	r3, [r2, #-128]	; 0xffffff80
   11f54:	mov	sl, #16
   11f58:	add	fp, sp, sl
   11f5c:	mov	r3, #2
   11f60:	str	r3, [sp, #16]
   11f64:	str	r5, [sp, #20]
   11f68:	ldr	r3, [sp, #12]
   11f6c:	str	sl, [sp, #4]
   11f70:	str	r3, [sp]
   11f74:	mov	r2, #84	; 0x54
   11f78:	mov	r3, r5
   11f7c:	mov	r1, r8
   11f80:	ldr	r0, [r7]
   11f84:	bl	119a8 <sendto@plt>
   11f88:	cmp	r0, #84	; 0x54
   11f8c:	beq	11fa8 <putc_unlocked@plt+0x4a4>
   11f90:	bl	1193c <__errno_location@plt>
   11f94:	ldr	r3, [r0]
   11f98:	cmp	r3, #4
   11f9c:	beq	120c0 <putc_unlocked@plt+0x5bc>
   11fa0:	ldr	r0, [pc, #316]	; 120e4 <putc_unlocked@plt+0x5e0>
   11fa4:	bl	12f10 <putc_unlocked@plt+0x140c>
   11fa8:	mov	r2, #128	; 0x80
   11fac:	mov	r1, r9
   11fb0:	add	r0, sp, #24
   11fb4:	bl	1178c <memcpy@plt>
   11fb8:	str	fp, [sp]
   11fbc:	mov	r3, r5
   11fc0:	mov	r2, #0
   11fc4:	add	r1, sp, #24
   11fc8:	mov	r0, #32
   11fcc:	bl	117bc <select@plt>
   11fd0:	subs	r6, r0, #0
   11fd4:	bge	120c0 <putc_unlocked@plt+0x5bc>
   11fd8:	bl	1193c <__errno_location@plt>
   11fdc:	ldr	r3, [r0]
   11fe0:	cmp	r3, #4
   11fe4:	beq	11ff0 <putc_unlocked@plt+0x4ec>
   11fe8:	ldr	r0, [pc, #248]	; 120e8 <putc_unlocked@plt+0x5e4>
   11fec:	bl	12f10 <putc_unlocked@plt+0x140c>
   11ff0:	ldr	fp, [pc, #244]	; 120ec <putc_unlocked@plt+0x5e8>
   11ff4:	add	sl, sp, #16
   11ff8:	mov	r3, r5
   11ffc:	mov	r2, #24
   12000:	mov	r1, r4
   12004:	ldr	r0, [r7]
   12008:	bl	11ac8 <recv@plt>
   1200c:	cmp	r0, #0
   12010:	bge	1202c <putc_unlocked@plt+0x528>
   12014:	bl	1193c <__errno_location@plt>
   12018:	ldr	r3, [r0]
   1201c:	cmp	r3, #4
   12020:	beq	12060 <putc_unlocked@plt+0x55c>
   12024:	mov	r0, fp
   12028:	bl	12f10 <putc_unlocked@plt+0x140c>
   1202c:	mov	r2, #128	; 0x80
   12030:	mov	r1, r9
   12034:	add	r0, sp, #24
   12038:	bl	1178c <memcpy@plt>
   1203c:	mov	r3, #0
   12040:	str	sl, [sp]
   12044:	mov	r2, r3
   12048:	add	r1, sp, #24
   1204c:	mov	r0, #32
   12050:	str	r5, [sp, #20]
   12054:	str	r5, [sp, #16]
   12058:	bl	117bc <select@plt>
   1205c:	mov	r6, r0
   12060:	cmp	r6, #0
   12064:	ldrb	r3, [r4]
   12068:	ble	120cc <putc_unlocked@plt+0x5c8>
   1206c:	cmp	r3, #1
   12070:	bne	11ff8 <putc_unlocked@plt+0x4f4>
   12074:	ldrb	r3, [r4, #1]
   12078:	ldr	r2, [sp, #408]	; 0x198
   1207c:	cmp	r2, r3
   12080:	bne	11ff8 <putc_unlocked@plt+0x4f4>
   12084:	ldrb	r3, [r4, #1]
   12088:	ldr	r2, [sp, #408]	; 0x198
   1208c:	cmp	r2, r3
   12090:	bne	11f54 <putc_unlocked@plt+0x450>
   12094:	ldr	r3, [r4, #4]
   12098:	mov	r0, #0
   1209c:	rev	r3, r3
   120a0:	str	r3, [r4, #4]
   120a4:	ldrh	r3, [r4, #8]
   120a8:	rev16	r3, r3
   120ac:	strh	r3, [r4, #8]
   120b0:	add	sp, sp, #284	; 0x11c
   120b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120b8:	add	sp, sp, #16
   120bc:	bx	lr
   120c0:	cmp	r6, #0
   120c4:	beq	11f68 <putc_unlocked@plt+0x464>
   120c8:	b	11ff0 <putc_unlocked@plt+0x4ec>
   120cc:	cmp	r3, #1
   120d0:	bne	11f54 <putc_unlocked@plt+0x450>
   120d4:	b	12084 <putc_unlocked@plt+0x580>
   120d8:	andeq	sl, r2, r0, lsl #5
   120dc:	andeq	sl, r2, ip, lsr #5
   120e0:	muleq	r2, r4, r2
   120e4:	andeq	r8, r1, r6, lsr #26
   120e8:	andeq	r8, r1, r4, asr #26
   120ec:	andeq	r8, r1, r6, ror #26
   120f0:	push	{r4, r5, r6, r7, r8, lr}
   120f4:	subs	r4, r0, #0
   120f8:	mvneq	r5, #0
   120fc:	mov	r0, r4
   12100:	ldrshne	r5, [r4]
   12104:	ldrshne	r6, [r4, #2]
   12108:	moveq	r6, r5
   1210c:	bl	11a08 <wmove@plt>
   12110:	mov	r0, r4
   12114:	bl	11930 <winch@plt>
   12118:	mov	r2, r6
   1211c:	mov	r1, r5
   12120:	mov	r7, r0
   12124:	mov	r0, r4
   12128:	bl	11a08 <wmove@plt>
   1212c:	mov	r0, r7
   12130:	pop	{r4, r5, r6, r7, r8, pc}
   12134:	push	{r4, lr}
   12138:	mov	r4, r0
   1213c:	ldr	r0, [r0, #12]
   12140:	ldr	r1, [r4, #4]
   12144:	add	r0, r0, #1
   12148:	bl	18c14 <argp_error@@Base+0x13b8>
   1214c:	mov	r2, #0
   12150:	str	r2, [r4, #16]
   12154:	ldr	r0, [r4]
   12158:	str	r1, [r4, #12]
   1215c:	bl	11a08 <wmove@plt>
   12160:	ldr	r0, [r4]
   12164:	bl	11a14 <wclrtoeol@plt>
   12168:	ldr	r0, [r4, #12]
   1216c:	ldr	r1, [r4, #4]
   12170:	add	r0, r0, #1
   12174:	bl	18c14 <argp_error@@Base+0x13b8>
   12178:	ldr	r2, [r4, #16]
   1217c:	ldr	r0, [r4]
   12180:	bl	11a08 <wmove@plt>
   12184:	ldr	r0, [r4]
   12188:	bl	11a14 <wclrtoeol@plt>
   1218c:	ldr	r2, [r4, #16]
   12190:	ldr	r1, [r4, #12]
   12194:	ldr	r0, [r4]
   12198:	pop	{r4, lr}
   1219c:	b	11a08 <wmove@plt>
   121a0:	cmp	r1, r0
   121a4:	movge	r0, r1
   121a8:	bx	lr
   121ac:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121b0:	mov	r4, r0
   121b4:	ldr	r7, [pc, #684]	; 12468 <putc_unlocked@plt+0x964>
   121b8:	ldr	r9, [pc, #684]	; 1246c <putc_unlocked@plt+0x968>
   121bc:	mov	r8, r1
   121c0:	mov	fp, r2
   121c4:	mov	r6, r1
   121c8:	sub	r3, r6, r8
   121cc:	cmp	fp, r3
   121d0:	bgt	121e8 <putc_unlocked@plt+0x6e4>
   121d4:	ldr	r0, [r4]
   121d8:	bl	1181c <wrefresh@plt>
   121dc:	mov	r0, #0
   121e0:	add	sp, sp, #12
   121e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121e8:	ldrb	r3, [r6], #1
   121ec:	cmp	r3, #10
   121f0:	bne	12200 <putc_unlocked@plt+0x6fc>
   121f4:	mov	r0, r4
   121f8:	bl	12134 <putc_unlocked@plt+0x630>
   121fc:	b	121c8 <putc_unlocked@plt+0x6c4>
   12200:	cmp	r3, #7
   12204:	bne	1221c <putc_unlocked@plt+0x718>
   12208:	bl	11798 <beep@plt>
   1220c:	ldr	r3, [pc, #604]	; 12470 <putc_unlocked@plt+0x96c>
   12210:	ldr	r0, [r3]
   12214:	bl	1181c <wrefresh@plt>
   12218:	b	121c8 <putc_unlocked@plt+0x6c4>
   1221c:	ldrb	r2, [r4, #21]
   12220:	cmp	r2, r3
   12224:	bne	122a8 <putc_unlocked@plt+0x7a4>
   12228:	ldr	r2, [r4, #16]
   1222c:	ldr	r1, [r4, #12]
   12230:	sub	r2, r2, #1
   12234:	str	r2, [r4, #16]
   12238:	ldr	r0, [r4]
   1223c:	bic	r2, r2, r2, asr #31
   12240:	bl	11a08 <wmove@plt>
   12244:	ldr	r0, [r4]
   12248:	mov	r1, #32
   1224c:	cmp	r0, #0
   12250:	mvneq	r3, #0
   12254:	ldrshne	r3, [r0]
   12258:	cmp	r0, #0
   1225c:	str	r3, [r4, #12]
   12260:	ldrshne	r3, [r0, #2]
   12264:	mvneq	r3, #0
   12268:	str	r3, [r4, #16]
   1226c:	bl	11a44 <waddch@plt>
   12270:	ldr	r2, [r4, #16]
   12274:	ldr	r1, [r4, #12]
   12278:	ldr	r0, [r4]
   1227c:	bl	11a08 <wmove@plt>
   12280:	ldr	r3, [r4]
   12284:	cmp	r3, #0
   12288:	mvneq	r2, #0
   1228c:	ldrshne	r2, [r3]
   12290:	cmp	r3, #0
   12294:	mvneq	r3, #0
   12298:	ldrshne	r3, [r3, #2]
   1229c:	str	r2, [r4, #12]
   122a0:	str	r3, [r4, #16]
   122a4:	b	121c8 <putc_unlocked@plt+0x6c4>
   122a8:	ldrb	r2, [r4, #22]
   122ac:	cmp	r2, r3
   122b0:	ldreq	sl, [r4, #16]
   122b4:	subeq	r5, sl, #1
   122b8:	beq	12300 <putc_unlocked@plt+0x7fc>
   122bc:	ldrb	r2, [r4, #20]
   122c0:	cmp	r2, r3
   122c4:	bne	1237c <putc_unlocked@plt+0x878>
   122c8:	mov	r2, #0
   122cc:	ldr	r1, [r4, #12]
   122d0:	ldr	r0, [r4]
   122d4:	bl	11a08 <wmove@plt>
   122d8:	ldr	r0, [r4]
   122dc:	bl	11a14 <wclrtoeol@plt>
   122e0:	b	12280 <putc_unlocked@plt+0x77c>
   122e4:	mov	r2, r5
   122e8:	ldr	r1, [r4, #12]
   122ec:	ldr	r0, [r4]
   122f0:	bl	120f0 <putc_unlocked@plt+0x5ec>
   122f4:	cmp	r0, #32
   122f8:	bne	12334 <putc_unlocked@plt+0x830>
   122fc:	sub	r5, r5, #1
   12300:	cmp	r5, #0
   12304:	bge	122e4 <putc_unlocked@plt+0x7e0>
   12308:	add	r5, r5, #1
   1230c:	mov	r2, r5
   12310:	ldr	r1, [r4, #12]
   12314:	ldr	r0, [r4]
   12318:	bl	11a08 <wmove@plt>
   1231c:	mov	r3, r5
   12320:	mov	r2, #32
   12324:	cmp	r3, sl
   12328:	blt	12358 <putc_unlocked@plt+0x854>
   1232c:	mov	r2, r5
   12330:	b	12274 <putc_unlocked@plt+0x770>
   12334:	mov	r2, r5
   12338:	ldr	r1, [r4, #12]
   1233c:	ldr	r0, [r4]
   12340:	bl	120f0 <putc_unlocked@plt+0x5ec>
   12344:	cmp	r0, #32
   12348:	beq	12308 <putc_unlocked@plt+0x804>
   1234c:	subs	r5, r5, #1
   12350:	bcs	12334 <putc_unlocked@plt+0x830>
   12354:	b	12308 <putc_unlocked@plt+0x804>
   12358:	mov	r1, r2
   1235c:	ldr	r0, [r4]
   12360:	str	r3, [sp, #4]
   12364:	str	r2, [sp]
   12368:	bl	11a44 <waddch@plt>
   1236c:	ldr	r3, [sp, #4]
   12370:	ldr	r2, [sp]
   12374:	add	r3, r3, #1
   12378:	b	12324 <putc_unlocked@plt+0x820>
   1237c:	cmp	r3, #12
   12380:	bne	12390 <putc_unlocked@plt+0x88c>
   12384:	cmp	r4, r7
   12388:	bne	121c8 <putc_unlocked@plt+0x6c4>
   1238c:	b	1220c <putc_unlocked@plt+0x708>
   12390:	cmp	r4, r7
   12394:	cmpeq	r3, #4
   12398:	bne	123c0 <putc_unlocked@plt+0x8bc>
   1239c:	ldr	r5, [pc, #208]	; 12474 <putc_unlocked@plt+0x970>
   123a0:	ldr	r0, [r7]
   123a4:	bl	11780 <wclear@plt>
   123a8:	ldr	r0, [r5]
   123ac:	bl	11780 <wclear@plt>
   123b0:	ldr	r0, [r7]
   123b4:	bl	1181c <wrefresh@plt>
   123b8:	ldr	r0, [r5]
   123bc:	b	12214 <putc_unlocked@plt+0x710>
   123c0:	ldr	r3, [r9]
   123c4:	ldr	r2, [r4, #16]
   123c8:	sub	r3, r3, #1
   123cc:	cmp	r2, r3
   123d0:	bne	123dc <putc_unlocked@plt+0x8d8>
   123d4:	mov	r0, r4
   123d8:	bl	12134 <putc_unlocked@plt+0x630>
   123dc:	bl	118dc <__ctype_b_loc@plt>
   123e0:	ldrb	r1, [r6, #-1]
   123e4:	lsl	r3, r1, #1
   123e8:	ldr	r2, [r0]
   123ec:	ldrh	r3, [r2, r3]
   123f0:	lsr	r3, r3, #14
   123f4:	cmp	r1, #9
   123f8:	orreq	r3, r3, #1
   123fc:	tst	r3, #1
   12400:	beq	12410 <putc_unlocked@plt+0x90c>
   12404:	ldr	r0, [r4]
   12408:	bl	11a44 <waddch@plt>
   1240c:	b	12280 <putc_unlocked@plt+0x77c>
   12410:	mov	r1, #94	; 0x5e
   12414:	ldr	r0, [r4]
   12418:	bl	11a44 <waddch@plt>
   1241c:	ldr	r3, [r4]
   12420:	cmp	r3, #0
   12424:	mvneq	r2, #0
   12428:	ldrshne	r2, [r3]
   1242c:	cmp	r3, #0
   12430:	str	r2, [r4, #12]
   12434:	ldrshne	r2, [r3, #2]
   12438:	ldr	r3, [r9]
   1243c:	mvneq	r2, #0
   12440:	sub	r3, r3, #1
   12444:	cmp	r2, r3
   12448:	str	r2, [r4, #16]
   1244c:	bne	12458 <putc_unlocked@plt+0x954>
   12450:	mov	r0, r4
   12454:	bl	12134 <putc_unlocked@plt+0x630>
   12458:	ldrb	r1, [r6, #-1]
   1245c:	and	r1, r1, #63	; 0x3f
   12460:	add	r1, r1, #64	; 0x40
   12464:	b	12404 <putc_unlocked@plt+0x900>
   12468:	andeq	sl, r2, r8, lsl #6
   1246c:	andeq	sl, r2, ip, lsl r2
   12470:	andeq	sl, r2, r0, lsl r2
   12474:	andeq	sl, r2, r0, lsr #6
   12478:	push	{r4, r5, r6, r7, r8, lr}
   1247c:	sub	sp, sp, #40	; 0x28
   12480:	mov	r7, r0
   12484:	mov	r6, r1
   12488:	bl	118e8 <getpid@plt>
   1248c:	ldr	r3, [pc, #508]	; 12690 <putc_unlocked@plt+0xb8c>
   12490:	mov	r2, #32
   12494:	mov	r1, #0
   12498:	mov	r5, #2
   1249c:	rev	r0, r0
   124a0:	str	r0, [r3, #40]	; 0x28
   124a4:	add	r0, sp, #8
   124a8:	bl	1196c <memset@plt>
   124ac:	mov	r3, #64	; 0x40
   124b0:	str	r3, [sp, #8]
   124b4:	add	r2, sp, #8
   124b8:	add	r3, sp, #4
   124bc:	mov	r1, #0
   124c0:	mov	r0, r7
   124c4:	str	r5, [sp, #12]
   124c8:	str	r5, [sp, #16]
   124cc:	bl	11a68 <getaddrinfo@plt>
   124d0:	cmp	r0, #0
   124d4:	ldreq	r4, [sp, #4]
   124d8:	beq	12540 <putc_unlocked@plt+0xa3c>
   124dc:	ldr	r3, [pc, #432]	; 12694 <putc_unlocked@plt+0xb90>
   124e0:	ldr	r4, [r3]
   124e4:	bl	1175c <gai_strerror@plt>
   124e8:	mov	r2, r7
   124ec:	mov	r3, r0
   124f0:	ldr	r1, [pc, #416]	; 12698 <putc_unlocked@plt+0xb94>
   124f4:	mov	r0, r4
   124f8:	b	12584 <putc_unlocked@plt+0xa80>
   124fc:	ldr	r3, [r4, #4]
   12500:	cmp	r3, #2
   12504:	bne	1253c <putc_unlocked@plt+0xa38>
   12508:	ldr	r2, [r4, #12]
   1250c:	ldr	r1, [r4, #8]
   12510:	mov	r0, r5
   12514:	bl	11a74 <socket@plt>
   12518:	subs	r8, r0, #0
   1251c:	blt	1253c <putc_unlocked@plt+0xa38>
   12520:	ldr	r2, [r4, #16]
   12524:	ldr	r1, [r4, #20]
   12528:	bl	11960 <bind@plt>
   1252c:	cmp	r0, #0
   12530:	mov	r0, r8
   12534:	beq	1254c <putc_unlocked@plt+0xa48>
   12538:	bl	11ad4 <close@plt>
   1253c:	ldr	r4, [r4, #28]
   12540:	cmp	r4, #0
   12544:	bne	124fc <putc_unlocked@plt+0x9f8>
   12548:	b	12560 <putc_unlocked@plt+0xa5c>
   1254c:	bl	11ad4 <close@plt>
   12550:	ldr	r3, [r4, #20]
   12554:	ldr	r2, [r3, #4]
   12558:	ldr	r3, [pc, #316]	; 1269c <putc_unlocked@plt+0xb98>
   1255c:	str	r2, [r3]
   12560:	ldr	r0, [sp, #4]
   12564:	bl	11a5c <freeaddrinfo@plt>
   12568:	cmp	r4, #0
   1256c:	bne	12590 <putc_unlocked@plt+0xa8c>
   12570:	ldr	r3, [pc, #296]	; 126a0 <putc_unlocked@plt+0xb9c>
   12574:	mov	r2, r7
   12578:	ldr	r1, [pc, #280]	; 12698 <putc_unlocked@plt+0xb94>
   1257c:	ldr	r0, [pc, #272]	; 12694 <putc_unlocked@plt+0xb90>
   12580:	ldr	r0, [r0]
   12584:	bl	11918 <fprintf@plt>
   12588:	mvn	r0, #0
   1258c:	bl	118f4 <exit@plt>
   12590:	mov	r1, r7
   12594:	mov	r0, r6
   12598:	bl	116b4 <strcmp@plt>
   1259c:	cmp	r0, #0
   125a0:	beq	12660 <putc_unlocked@plt+0xb5c>
   125a4:	add	r3, sp, #4
   125a8:	add	r2, sp, #8
   125ac:	mov	r1, #0
   125b0:	mov	r0, r6
   125b4:	bl	11a68 <getaddrinfo@plt>
   125b8:	cmp	r0, #0
   125bc:	moveq	r5, #2
   125c0:	ldreq	r4, [sp, #4]
   125c4:	beq	125e4 <putc_unlocked@plt+0xae0>
   125c8:	ldr	r3, [pc, #196]	; 12694 <putc_unlocked@plt+0xb90>
   125cc:	ldr	r4, [r3]
   125d0:	bl	1175c <gai_strerror@plt>
   125d4:	mov	r2, r6
   125d8:	mov	r3, r0
   125dc:	b	124f0 <putc_unlocked@plt+0x9ec>
   125e0:	ldr	r4, [r4, #28]
   125e4:	cmp	r4, #0
   125e8:	beq	12624 <putc_unlocked@plt+0xb20>
   125ec:	ldr	r3, [r4, #4]
   125f0:	cmp	r3, #2
   125f4:	bne	125e0 <putc_unlocked@plt+0xadc>
   125f8:	ldr	r2, [r4, #12]
   125fc:	ldr	r1, [r4, #8]
   12600:	mov	r0, r5
   12604:	bl	11a74 <socket@plt>
   12608:	cmp	r0, #0
   1260c:	blt	125e0 <putc_unlocked@plt+0xadc>
   12610:	bl	11ad4 <close@plt>
   12614:	ldr	r3, [r4, #20]
   12618:	ldr	r2, [r3, #4]
   1261c:	ldr	r3, [pc, #128]	; 126a4 <putc_unlocked@plt+0xba0>
   12620:	str	r2, [r3]
   12624:	ldr	r0, [sp, #4]
   12628:	bl	11a5c <freeaddrinfo@plt>
   1262c:	cmp	r4, #0
   12630:	moveq	r2, r6
   12634:	ldreq	r3, [pc, #100]	; 126a0 <putc_unlocked@plt+0xb9c>
   12638:	beq	12578 <putc_unlocked@plt+0xa74>
   1263c:	ldr	r1, [pc, #100]	; 126a8 <putc_unlocked@plt+0xba4>
   12640:	ldr	r0, [pc, #100]	; 126ac <putc_unlocked@plt+0xba8>
   12644:	bl	11948 <getservbyname@plt>
   12648:	cmp	r0, #0
   1264c:	bne	12674 <putc_unlocked@plt+0xb70>
   12650:	ldr	r3, [pc, #80]	; 126a8 <putc_unlocked@plt+0xba4>
   12654:	ldr	r2, [pc, #80]	; 126ac <putc_unlocked@plt+0xba8>
   12658:	ldr	r1, [pc, #80]	; 126b0 <putc_unlocked@plt+0xbac>
   1265c:	b	1257c <putc_unlocked@plt+0xa78>
   12660:	ldr	r3, [pc, #52]	; 1269c <putc_unlocked@plt+0xb98>
   12664:	ldr	r2, [r3]
   12668:	ldr	r3, [pc, #52]	; 126a4 <putc_unlocked@plt+0xba0>
   1266c:	str	r2, [r3]
   12670:	b	1263c <putc_unlocked@plt+0xb38>
   12674:	ldr	r3, [r0, #8]
   12678:	ldr	r2, [pc, #52]	; 126b4 <putc_unlocked@plt+0xbb0>
   1267c:	rev16	r3, r3
   12680:	mov	r0, #0
   12684:	strh	r3, [r2]
   12688:	add	sp, sp, #40	; 0x28
   1268c:	pop	{r4, r5, r6, r7, r8, pc}
   12690:			; <UNDEFINED> instruction: 0x0002a2b4
   12694:	andeq	sl, r2, r8, lsl #4
   12698:	andeq	r8, r1, r5, lsl #27
   1269c:	muleq	r2, r0, r2
   126a0:	muleq	r1, r3, sp
   126a4:			; <UNDEFINED> instruction: 0x0002a2b0
   126a8:	andeq	r8, r1, r5, lsr #27
   126ac:	andeq	r8, r1, r9, lsr #27
   126b0:	andeq	r8, r1, pc, lsr #27
   126b4:	andeq	sl, r2, ip, lsr #5
   126b8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126bc:	mov	r9, r0
   126c0:	mov	r5, r1
   126c4:	bl	116c0 <getlogin@plt>
   126c8:	subs	r8, r0, #0
   126cc:	bne	126f4 <putc_unlocked@plt+0xbf0>
   126d0:	bl	11714 <getuid@plt>
   126d4:	bl	116e4 <getpwuid@plt>
   126d8:	cmp	r0, #0
   126dc:	ldrne	r8, [r0]
   126e0:	bne	126f4 <putc_unlocked@plt+0xbf0>
   126e4:	ldr	r0, [pc, #252]	; 127e8 <putc_unlocked@plt+0xce4>
   126e8:	bl	1187c <puts@plt>
   126ec:	mvn	r0, #0
   126f0:	bl	118f4 <exit@plt>
   126f4:	bl	13540 <putc_unlocked@plt+0x1a3c>
   126f8:	subs	r7, r0, #0
   126fc:	bne	1270c <putc_unlocked@plt+0xc08>
   12700:	ldr	r0, [pc, #228]	; 127ec <putc_unlocked@plt+0xce8>
   12704:	bl	11828 <perror@plt>
   12708:	b	126ec <putc_unlocked@plt+0xbe8>
   1270c:	ldr	r6, [r5]
   12710:	ldr	r3, [pc, #216]	; 127f0 <putc_unlocked@plt+0xcec>
   12714:	mov	r4, r6
   12718:	mov	fp, r4
   1271c:	ldrb	sl, [r4], #1
   12720:	cmp	sl, #0
   12724:	beq	12760 <putc_unlocked@plt+0xc5c>
   12728:	mov	r0, r3
   1272c:	mov	r1, sl
   12730:	str	r3, [sp, #4]
   12734:	bl	1190c <strchr@plt>
   12738:	ldr	r3, [sp, #4]
   1273c:	cmp	r0, #0
   12740:	beq	12718 <putc_unlocked@plt+0xc14>
   12744:	cmp	sl, #64	; 0x40
   12748:	mov	r3, #0
   1274c:	movne	r1, r6
   12750:	moveq	r1, r4
   12754:	movne	r6, r4
   12758:	strb	r3, [fp]
   1275c:	b	12764 <putc_unlocked@plt+0xc60>
   12760:	mov	r1, r7
   12764:	ldr	r4, [pc, #136]	; 127f4 <putc_unlocked@plt+0xcf0>
   12768:	cmp	r9, #1
   1276c:	mov	r0, r7
   12770:	ldrgt	r9, [r5, #4]
   12774:	ldrle	r9, [pc, #124]	; 127f8 <putc_unlocked@plt+0xcf4>
   12778:	bl	12478 <putc_unlocked@plt+0x974>
   1277c:	mov	r3, #1
   12780:	mov	r5, #0
   12784:	strb	r3, [r4]
   12788:	mov	r1, r8
   1278c:	mov	r3, #512	; 0x200
   12790:	mov	r2, #12
   12794:	add	r0, r4, #44	; 0x2c
   12798:	strh	r3, [r4, #8]
   1279c:	strh	r3, [r4, #24]
   127a0:	str	r5, [r4, #4]
   127a4:	bl	11978 <strncpy@plt>
   127a8:	mov	r1, r6
   127ac:	mov	r2, #12
   127b0:	add	r0, r4, #56	; 0x38
   127b4:	strb	r5, [r4, #55]	; 0x37
   127b8:	bl	11978 <strncpy@plt>
   127bc:	mov	r2, #16
   127c0:	mov	r1, r9
   127c4:	add	r0, r4, #68	; 0x44
   127c8:	strb	r5, [r4, #67]	; 0x43
   127cc:	bl	11978 <strncpy@plt>
   127d0:	mov	r0, r7
   127d4:	strb	r5, [r4, #83]	; 0x53
   127d8:	bl	14654 <argp_parse@@Base+0xa9c>
   127dc:	mov	r0, r5
   127e0:	add	sp, sp, #12
   127e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127e8:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   127ec:	strdeq	r8, [r1], -r2
   127f0:	andeq	r8, r1, ip, lsl #28
   127f4:			; <UNDEFINED> instruction: 0x0002a2b4
   127f8:	andeq	r9, r1, r9, lsr sp
   127fc:	push	{r4, r5, r6, r7, lr}
   12800:	sub	sp, sp, #172	; 0xac
   12804:	bl	11810 <initscr@plt>
   12808:	subs	r1, r0, #0
   1280c:	bne	1281c <putc_unlocked@plt+0xd18>
   12810:	ldr	r2, [pc, #348]	; 12974 <putc_unlocked@plt+0xe70>
   12814:	mov	r0, #1
   12818:	bl	11858 <error@plt>
   1281c:	add	r2, sp, #28
   12820:	mov	r1, #0
   12824:	mov	r0, #20
   12828:	bl	11840 <sigaction@plt>
   1282c:	mov	r1, #14
   12830:	add	r0, sp, #32
   12834:	bl	11894 <sigaddset@plt>
   12838:	ldr	r5, [pc, #312]	; 12978 <putc_unlocked@plt+0xe74>
   1283c:	mov	r2, #0
   12840:	add	r1, sp, #28
   12844:	mov	r0, #20
   12848:	bl	11840 <sigaction@plt>
   1284c:	ldr	r3, [pc, #296]	; 1297c <putc_unlocked@plt+0xe78>
   12850:	mov	r4, #1
   12854:	ldr	r0, [r5]
   12858:	str	r4, [r3]
   1285c:	bl	11780 <wclear@plt>
   12860:	ldr	r0, [r5]
   12864:	bl	1181c <wrefresh@plt>
   12868:	ldr	r7, [pc, #272]	; 12980 <putc_unlocked@plt+0xe7c>
   1286c:	bl	117d4 <noecho@plt>
   12870:	bl	11924 <cbreak@plt>
   12874:	ldr	r1, [pc, #264]	; 12984 <putc_unlocked@plt+0xe80>
   12878:	mov	r0, #3
   1287c:	bl	117a4 <signal@plt>
   12880:	ldr	r1, [pc, #252]	; 12984 <putc_unlocked@plt+0xe80>
   12884:	mov	r0, #2
   12888:	bl	117a4 <signal@plt>
   1288c:	ldr	r1, [pc, #240]	; 12984 <putc_unlocked@plt+0xe80>
   12890:	mov	r0, #13
   12894:	bl	117a4 <signal@plt>
   12898:	ldr	r0, [r7]
   1289c:	ldr	r6, [pc, #228]	; 12988 <putc_unlocked@plt+0xe84>
   128a0:	ldr	r5, [pc, #228]	; 1298c <putc_unlocked@plt+0xe88>
   128a4:	add	r0, r0, r0, lsr #31
   128a8:	mov	r3, #0
   128ac:	ldr	r1, [r6]
   128b0:	asr	r0, r0, r4
   128b4:	mov	r2, r3
   128b8:	str	r1, [r5, #8]
   128bc:	str	r0, [r5, #4]
   128c0:	bl	116d8 <newwin@plt>
   128c4:	mov	r1, #0
   128c8:	str	r0, [r5]
   128cc:	bl	116cc <scrollok@plt>
   128d0:	ldr	r0, [r5]
   128d4:	bl	11780 <wclear@plt>
   128d8:	ldr	r0, [r7]
   128dc:	ldr	r2, [r5, #4]
   128e0:	ldr	r7, [pc, #168]	; 12990 <putc_unlocked@plt+0xe8c>
   128e4:	add	r0, r0, r0, lsr #31
   128e8:	ldr	r1, [r6]
   128ec:	asr	r0, r0, r4
   128f0:	add	r2, r2, r4
   128f4:	mov	r3, #0
   128f8:	sub	r0, r0, #1
   128fc:	str	r1, [r7, #8]
   12900:	str	r0, [r7, #4]
   12904:	bl	116d8 <newwin@plt>
   12908:	mov	r1, #0
   1290c:	str	r0, [r7]
   12910:	bl	116cc <scrollok@plt>
   12914:	ldr	r0, [r7]
   12918:	bl	11780 <wclear@plt>
   1291c:	ldr	r2, [r5, #4]
   12920:	ldr	r1, [r6]
   12924:	mov	r3, #0
   12928:	mov	r0, r4
   1292c:	bl	116d8 <newwin@plt>
   12930:	ldr	r5, [pc, #92]	; 12994 <putc_unlocked@plt+0xe90>
   12934:	mov	r4, #0
   12938:	mov	r3, #45	; 0x2d
   1293c:	mov	r2, r3
   12940:	mov	r1, r3
   12944:	str	r0, [r5]
   12948:	str	r3, [sp]
   1294c:	str	r4, [sp, #16]
   12950:	str	r4, [sp, #12]
   12954:	str	r4, [sp, #8]
   12958:	str	r4, [sp, #4]
   1295c:	bl	11738 <wborder@plt>
   12960:	ldr	r0, [r5]
   12964:	bl	1181c <wrefresh@plt>
   12968:	mov	r0, r4
   1296c:	add	sp, sp, #172	; 0xac
   12970:	pop	{r4, r5, r6, r7, pc}
   12974:	andeq	r8, r1, r1, lsl lr
   12978:	andeq	sl, r2, ip, lsl #4
   1297c:	andeq	sl, r2, r0, lsr r2
   12980:	andeq	sl, r2, r4, lsr #4
   12984:	andeq	r2, r1, r4, ror #21
   12988:	andeq	sl, r2, ip, lsl r2
   1298c:	andeq	sl, r2, r8, lsl #6
   12990:	andeq	sl, r2, r0, lsr #6
   12994:	andeq	sl, r2, r8, lsr r3
   12998:	push	{r4, lr}
   1299c:	sub	sp, sp, #64	; 0x40
   129a0:	add	r1, sp, #4
   129a4:	mov	r0, #0
   129a8:	bl	11af8 <tcgetattr@plt>
   129ac:	cmp	r0, #0
   129b0:	movlt	r3, #23
   129b4:	movlt	r1, #127	; 0x7f
   129b8:	movlt	r2, #21
   129bc:	blt	129e4 <putc_unlocked@plt+0xee0>
   129c0:	ldrb	r1, [sp, #23]
   129c4:	ldrb	r3, [sp, #35]	; 0x23
   129c8:	ldrb	r2, [sp, #24]
   129cc:	cmp	r1, #255	; 0xff
   129d0:	moveq	r1, #127	; 0x7f
   129d4:	cmp	r3, #255	; 0xff
   129d8:	moveq	r3, #23
   129dc:	cmp	r2, #255	; 0xff
   129e0:	moveq	r2, #21
   129e4:	ldr	r0, [pc, #128]	; 12a6c <putc_unlocked@plt+0xf68>
   129e8:	ldr	r4, [pc, #128]	; 12a70 <putc_unlocked@plt+0xf6c>
   129ec:	strb	r1, [sp]
   129f0:	strb	r1, [r0, #21]
   129f4:	strb	r2, [r0, #20]
   129f8:	strb	r3, [r0, #22]
   129fc:	strb	r2, [sp, #1]
   12a00:	mov	r1, sp
   12a04:	mov	r2, #3
   12a08:	ldr	r0, [r4]
   12a0c:	strb	r3, [sp, #2]
   12a10:	bl	11984 <write@plt>
   12a14:	cmp	r0, #3
   12a18:	beq	12a24 <putc_unlocked@plt+0xf20>
   12a1c:	ldr	r0, [pc, #80]	; 12a74 <putc_unlocked@plt+0xf70>
   12a20:	bl	12f10 <putc_unlocked@plt+0x140c>
   12a24:	mov	r2, #3
   12a28:	mov	r1, sp
   12a2c:	ldr	r0, [r4]
   12a30:	bl	116fc <read@plt>
   12a34:	cmp	r0, #3
   12a38:	beq	12a44 <putc_unlocked@plt+0xf40>
   12a3c:	ldr	r0, [pc, #48]	; 12a74 <putc_unlocked@plt+0xf70>
   12a40:	bl	12f10 <putc_unlocked@plt+0x140c>
   12a44:	ldr	r3, [pc, #44]	; 12a78 <putc_unlocked@plt+0xf74>
   12a48:	ldrb	r2, [sp]
   12a4c:	mov	r0, #0
   12a50:	strb	r2, [r3, #21]
   12a54:	ldrb	r2, [sp, #1]
   12a58:	strb	r2, [r3, #20]
   12a5c:	ldrb	r2, [sp, #2]
   12a60:	strb	r2, [r3, #22]
   12a64:	add	sp, sp, #64	; 0x40
   12a68:	pop	{r4, pc}
   12a6c:	andeq	sl, r2, r8, lsl #6
   12a70:	muleq	r2, r8, r2
   12a74:	andeq	r8, r1, r4, asr #28
   12a78:	andeq	sl, r2, r0, lsr #6
   12a7c:	ldr	r3, [pc, #84]	; 12ad8 <putc_unlocked@plt+0xfd4>
   12a80:	push	{r4, lr}
   12a84:	ldr	r3, [r3]
   12a88:	cmp	r3, #0
   12a8c:	beq	12abc <putc_unlocked@plt+0xfb8>
   12a90:	ldr	r4, [pc, #68]	; 12adc <putc_unlocked@plt+0xfd8>
   12a94:	mov	r2, #0
   12a98:	ldr	r1, [r4, #4]
   12a9c:	ldr	r0, [r4]
   12aa0:	sub	r1, r1, #1
   12aa4:	bl	11a08 <wmove@plt>
   12aa8:	ldr	r0, [r4]
   12aac:	bl	11a14 <wclrtoeol@plt>
   12ab0:	ldr	r0, [r4]
   12ab4:	bl	1181c <wrefresh@plt>
   12ab8:	bl	11a8c <endwin@plt>
   12abc:	ldr	r3, [pc, #28]	; 12ae0 <putc_unlocked@plt+0xfdc>
   12ac0:	ldr	r3, [r3]
   12ac4:	cmp	r3, #0
   12ac8:	beq	12ad0 <putc_unlocked@plt+0xfcc>
   12acc:	bl	12e2c <putc_unlocked@plt+0x1328>
   12ad0:	mov	r0, #0
   12ad4:	bl	118f4 <exit@plt>
   12ad8:	andeq	sl, r2, r0, lsr r2
   12adc:	andeq	sl, r2, r0, lsr #6
   12ae0:	andeq	sl, r2, ip, lsr #4
   12ae4:	push	{r4, lr}
   12ae8:	ldr	r0, [pc, #4]	; 12af4 <putc_unlocked@plt+0xff0>
   12aec:	bl	12fd4 <putc_unlocked@plt+0x14d0>
   12af0:	bl	12a7c <putc_unlocked@plt+0xf78>
   12af4:	andeq	r8, r1, r8, asr lr
   12af8:	ldr	r3, [pc, #180]	; 12bb4 <putc_unlocked@plt+0x10b0>
   12afc:	push	{r4, r5, lr}
   12b00:	sub	sp, sp, #108	; 0x6c
   12b04:	ldr	r2, [pc, #172]	; 12bb8 <putc_unlocked@plt+0x10b4>
   12b08:	ldr	r4, [pc, #172]	; 12bbc <putc_unlocked@plt+0x10b8>
   12b0c:	str	r2, [r3]
   12b10:	add	r1, r4, #12
   12b14:	mov	r3, #3
   12b18:	mov	r2, #72	; 0x48
   12b1c:	add	r5, sp, #80	; 0x50
   12b20:	mov	r0, sp
   12b24:	str	r3, [sp, #72]	; 0x48
   12b28:	str	r5, [sp, #76]	; 0x4c
   12b2c:	bl	1178c <memcpy@plt>
   12b30:	ldr	r0, [pc, #136]	; 12bc0 <putc_unlocked@plt+0x10bc>
   12b34:	ldm	r4, {r1, r2, r3}
   12b38:	ldr	r0, [r0]
   12b3c:	bl	11eac <putc_unlocked@plt+0x3a8>
   12b40:	ldr	r3, [pc, #124]	; 12bc4 <putc_unlocked@plt+0x10c0>
   12b44:	ldr	r2, [sp, #84]	; 0x54
   12b48:	str	r2, [r3]
   12b4c:	ldrb	r3, [sp, #82]	; 0x52
   12b50:	cmp	r3, #0
   12b54:	beq	12b70 <putc_unlocked@plt+0x106c>
   12b58:	cmp	r3, #8
   12b5c:	bhi	12b6c <putc_unlocked@plt+0x1068>
   12b60:	ldr	r2, [pc, #96]	; 12bc8 <putc_unlocked@plt+0x10c4>
   12b64:	ldr	r0, [r2, r3, lsl #2]
   12b68:	bl	12fd4 <putc_unlocked@plt+0x14d0>
   12b6c:	bl	12a7c <putc_unlocked@plt+0xf78>
   12b70:	str	r5, [sp, #76]	; 0x4c
   12b74:	mov	r2, #72	; 0x48
   12b78:	mov	r5, #0
   12b7c:	ldr	r1, [pc, #72]	; 12bcc <putc_unlocked@plt+0x10c8>
   12b80:	mov	r0, sp
   12b84:	str	r5, [sp, #72]	; 0x48
   12b88:	bl	1178c <memcpy@plt>
   12b8c:	ldr	r0, [pc, #60]	; 12bd0 <putc_unlocked@plt+0x10cc>
   12b90:	ldm	r4, {r1, r2, r3}
   12b94:	ldr	r0, [r0]
   12b98:	bl	11eac <putc_unlocked@plt+0x3a8>
   12b9c:	ldr	r3, [pc, #48]	; 12bd4 <putc_unlocked@plt+0x10d0>
   12ba0:	ldr	r2, [sp, #84]	; 0x54
   12ba4:	mov	r0, r5
   12ba8:	str	r2, [r3]
   12bac:	add	sp, sp, #108	; 0x6c
   12bb0:	pop	{r4, r5, pc}
   12bb4:	ldrdeq	sl, [r2], -r4
   12bb8:	muleq	r1, r8, lr
   12bbc:			; <UNDEFINED> instruction: 0x0002a2b4
   12bc0:			; <UNDEFINED> instruction: 0x0002a2b0
   12bc4:	andeq	sl, r2, r0, asr #6
   12bc8:	andeq	r8, r1, r4, ror lr
   12bcc:	andeq	sl, r2, r0, asr #5
   12bd0:	muleq	r2, r0, r2
   12bd4:	ldrdeq	sl, [r2], -r0
   12bd8:	push	{r4, lr}
   12bdc:	ldr	r0, [pc, #56]	; 12c1c <putc_unlocked@plt+0x1118>
   12be0:	bl	12fd4 <putc_unlocked@plt+0x14d0>
   12be4:	ldr	r2, [pc, #52]	; 12c20 <putc_unlocked@plt+0x111c>
   12be8:	ldr	r3, [r2]
   12bec:	add	r3, r3, #1
   12bf0:	str	r3, [r2]
   12bf4:	ldr	r3, [pc, #40]	; 12c24 <putc_unlocked@plt+0x1120>
   12bf8:	ldr	r2, [pc, #40]	; 12c28 <putc_unlocked@plt+0x1124>
   12bfc:	ldr	r3, [r3]
   12c00:	add	r3, r3, #1
   12c04:	rev	r3, r3
   12c08:	str	r3, [r2, #4]
   12c0c:	bl	12af8 <putc_unlocked@plt+0xff4>
   12c10:	mov	r1, #1
   12c14:	ldr	r0, [pc, #16]	; 12c2c <putc_unlocked@plt+0x1128>
   12c18:	bl	11708 <longjmp@plt>
   12c1c:	andeq	r8, r1, r6, asr #29
   12c20:	andeq	sl, r2, r4, lsr r2
   12c24:	andeq	sl, r2, r0, asr #6
   12c28:			; <UNDEFINED> instruction: 0x0002a2b4
   12c2c:	andeq	sl, r2, r8, asr #6
   12c30:	push	{r4, r5, r6, r7, r8, r9, lr}
   12c34:	sub	sp, sp, #124	; 0x7c
   12c38:	mov	r3, #30
   12c3c:	add	r2, sp, #88	; 0x58
   12c40:	str	r3, [sp, #88]	; 0x58
   12c44:	mov	r3, #0
   12c48:	str	r3, [sp, #92]	; 0x5c
   12c4c:	ldm	r2, {r0, r1}
   12c50:	add	r3, sp, #80	; 0x50
   12c54:	stm	r3, {r0, r1}
   12c58:	ldr	r3, [pc, #404]	; 12df4 <putc_unlocked@plt+0x12f0>
   12c5c:	mov	r1, #5
   12c60:	ldr	r0, [r3]
   12c64:	bl	119d8 <listen@plt>
   12c68:	cmp	r0, #0
   12c6c:	bne	12dcc <putc_unlocked@plt+0x12c8>
   12c70:	ldr	r1, [pc, #384]	; 12df8 <putc_unlocked@plt+0x12f4>
   12c74:	ldr	r3, [pc, #384]	; 12dfc <putc_unlocked@plt+0x12f8>
   12c78:	mov	r2, r1
   12c7c:	add	r3, r3, #10
   12c80:	ldrh	r0, [r2], #2
   12c84:	add	r1, r1, #14
   12c88:	rev16	r0, r0
   12c8c:	strh	r0, [r3, #-2]
   12c90:	ldr	r0, [r2], #4
   12c94:	cmp	r2, r1
   12c98:	str	r0, [r3], #4
   12c9c:	bne	12c90 <putc_unlocked@plt+0x118c>
   12ca0:	ldrh	r2, [r2]
   12ca4:	strh	r2, [r3]
   12ca8:	ldr	r3, [pc, #332]	; 12dfc <putc_unlocked@plt+0x12f8>
   12cac:	mvn	r2, #0
   12cb0:	str	r2, [r3, #4]
   12cb4:	ldr	r3, [pc, #324]	; 12e00 <putc_unlocked@plt+0x12fc>
   12cb8:	mov	r2, #1
   12cbc:	str	r2, [r3]
   12cc0:	bl	12af8 <putc_unlocked@plt+0xff4>
   12cc4:	bl	134e4 <putc_unlocked@plt+0x19e0>
   12cc8:	mov	r2, #0
   12ccc:	add	r1, sp, #80	; 0x50
   12cd0:	mov	r0, r2
   12cd4:	bl	116a8 <setitimer@plt>
   12cd8:	ldr	r0, [pc, #292]	; 12e04 <putc_unlocked@plt+0x1300>
   12cdc:	bl	12fd4 <putc_unlocked@plt+0x14d0>
   12ce0:	ldr	r1, [pc, #288]	; 12e08 <putc_unlocked@plt+0x1304>
   12ce4:	mov	r0, #14
   12ce8:	bl	117a4 <signal@plt>
   12cec:	ldr	r0, [pc, #280]	; 12e0c <putc_unlocked@plt+0x1308>
   12cf0:	bl	11720 <_setjmp@plt>
   12cf4:	ldr	r4, [pc, #248]	; 12df4 <putc_unlocked@plt+0x12f0>
   12cf8:	ldr	r7, [pc, #272]	; 12e10 <putc_unlocked@plt+0x130c>
   12cfc:	mov	r5, #0
   12d00:	mov	r2, r5
   12d04:	mov	r1, r5
   12d08:	ldr	r0, [r4]
   12d0c:	bl	11834 <accept@plt>
   12d10:	subs	r6, r0, #0
   12d14:	blt	12dd8 <putc_unlocked@plt+0x12d4>
   12d18:	ldr	r0, [r4]
   12d1c:	bl	11ad4 <close@plt>
   12d20:	ldr	r3, [pc, #236]	; 12e14 <putc_unlocked@plt+0x1310>
   12d24:	ldr	r2, [pc, #216]	; 12e04 <putc_unlocked@plt+0x1300>
   12d28:	str	r6, [r4]
   12d2c:	str	r2, [r3]
   12d30:	bl	1348c <putc_unlocked@plt+0x1988>
   12d34:	ldr	r3, [pc, #220]	; 12e18 <putc_unlocked@plt+0x1314>
   12d38:	ldr	r4, [pc, #188]	; 12dfc <putc_unlocked@plt+0x12f8>
   12d3c:	mov	r7, #72	; 0x48
   12d40:	ldr	r3, [r3]
   12d44:	add	r6, r4, #12
   12d48:	rev	r3, r3
   12d4c:	add	r9, sp, #96	; 0x60
   12d50:	mov	r8, #2
   12d54:	mov	r2, r7
   12d58:	mov	r1, r6
   12d5c:	mov	r0, sp
   12d60:	str	r3, [r4, #4]
   12d64:	str	r9, [sp, #76]	; 0x4c
   12d68:	str	r8, [sp, #72]	; 0x48
   12d6c:	bl	1178c <memcpy@plt>
   12d70:	ldr	r0, [pc, #164]	; 12e1c <putc_unlocked@plt+0x1318>
   12d74:	ldm	r4, {r1, r2, r3}
   12d78:	ldr	r0, [r0]
   12d7c:	bl	11eac <putc_unlocked@plt+0x3a8>
   12d80:	ldr	r3, [pc, #152]	; 12e20 <putc_unlocked@plt+0x131c>
   12d84:	mov	r2, r7
   12d88:	mov	r1, r6
   12d8c:	ldr	r3, [r3]
   12d90:	mov	r0, sp
   12d94:	rev	r3, r3
   12d98:	str	r3, [r4, #4]
   12d9c:	str	r9, [sp, #76]	; 0x4c
   12da0:	str	r8, [sp, #72]	; 0x48
   12da4:	bl	1178c <memcpy@plt>
   12da8:	ldr	r0, [pc, #116]	; 12e24 <putc_unlocked@plt+0x1320>
   12dac:	ldm	r4, {r1, r2, r3}
   12db0:	ldr	r0, [r0]
   12db4:	bl	11eac <putc_unlocked@plt+0x3a8>
   12db8:	ldr	r3, [pc, #64]	; 12e00 <putc_unlocked@plt+0x12fc>
   12dbc:	mov	r0, r5
   12dc0:	str	r5, [r3]
   12dc4:	add	sp, sp, #124	; 0x7c
   12dc8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12dcc:	ldr	r0, [pc, #84]	; 12e28 <putc_unlocked@plt+0x1324>
   12dd0:	bl	12f10 <putc_unlocked@plt+0x140c>
   12dd4:	b	12c70 <putc_unlocked@plt+0x116c>
   12dd8:	bl	1193c <__errno_location@plt>
   12ddc:	ldr	r3, [r0]
   12de0:	cmp	r3, #4
   12de4:	beq	12d00 <putc_unlocked@plt+0x11fc>
   12de8:	mov	r0, r7
   12dec:	bl	12f10 <putc_unlocked@plt+0x140c>
   12df0:	b	12d00 <putc_unlocked@plt+0x11fc>
   12df4:	muleq	r2, r8, r2
   12df8:	andeq	sl, r2, r0, ror r2
   12dfc:			; <UNDEFINED> instruction: 0x0002a2b4
   12e00:	andeq	sl, r2, ip, lsr #4
   12e04:	andeq	r8, r1, r5, lsl #30
   12e08:	ldrdeq	r2, [r1], -r8
   12e0c:	andeq	sl, r2, r8, asr #6
   12e10:	andeq	r8, r1, r7, lsr #30
   12e14:	ldrdeq	sl, [r2], -r4
   12e18:	ldrdeq	sl, [r2], -r0
   12e1c:	muleq	r2, r0, r2
   12e20:	andeq	sl, r2, r0, asr #6
   12e24:			; <UNDEFINED> instruction: 0x0002a2b0
   12e28:	ldrdeq	r8, [r1], -pc	; <UNPREDICTABLE>
   12e2c:	ldr	r3, [pc, #184]	; 12eec <putc_unlocked@plt+0x13e8>
   12e30:	push	{r0, r1, r4, r5, r6, lr}
   12e34:	mov	r2, #2
   12e38:	ldr	r3, [r3]
   12e3c:	ldr	r5, [pc, #172]	; 12ef0 <putc_unlocked@plt+0x13ec>
   12e40:	rev	r3, r3
   12e44:	ldr	r4, [pc, #168]	; 12ef4 <putc_unlocked@plt+0x13f0>
   12e48:	str	r3, [r5, #4]
   12e4c:	ldr	r3, [pc, #164]	; 12ef8 <putc_unlocked@plt+0x13f4>
   12e50:	ldr	r6, [pc, #164]	; 12efc <putc_unlocked@plt+0x13f8>
   12e54:	strb	r2, [r5, #1]
   12e58:	ldr	r3, [r3]
   12e5c:	strh	r2, [r4]
   12e60:	str	r3, [r4, #4]
   12e64:	mov	r3, #16
   12e68:	str	r3, [sp, #4]
   12e6c:	str	r4, [sp]
   12e70:	mov	r3, #0
   12e74:	mov	r2, #84	; 0x54
   12e78:	mov	r1, r5
   12e7c:	ldr	r0, [r6]
   12e80:	bl	119a8 <sendto@plt>
   12e84:	cmp	r0, #84	; 0x54
   12e88:	beq	12e94 <putc_unlocked@plt+0x1390>
   12e8c:	ldr	r0, [pc, #108]	; 12f00 <putc_unlocked@plt+0x13fc>
   12e90:	bl	11828 <perror@plt>
   12e94:	ldr	r3, [pc, #104]	; 12f04 <putc_unlocked@plt+0x1400>
   12e98:	ldr	r0, [r6]
   12e9c:	mov	r2, #84	; 0x54
   12ea0:	ldr	r3, [r3]
   12ea4:	ldr	r1, [pc, #68]	; 12ef0 <putc_unlocked@plt+0x13ec>
   12ea8:	rev	r3, r3
   12eac:	str	r3, [r5, #4]
   12eb0:	ldr	r3, [pc, #80]	; 12f08 <putc_unlocked@plt+0x1404>
   12eb4:	ldr	r3, [r3]
   12eb8:	str	r4, [sp]
   12ebc:	str	r3, [r4, #4]
   12ec0:	mov	r3, #16
   12ec4:	str	r3, [sp, #4]
   12ec8:	mov	r3, #0
   12ecc:	bl	119a8 <sendto@plt>
   12ed0:	cmp	r0, #84	; 0x54
   12ed4:	beq	12ee0 <putc_unlocked@plt+0x13dc>
   12ed8:	ldr	r0, [pc, #44]	; 12f0c <putc_unlocked@plt+0x1408>
   12edc:	bl	11828 <perror@plt>
   12ee0:	mov	r0, #0
   12ee4:	add	sp, sp, #8
   12ee8:	pop	{r4, r5, r6, pc}
   12eec:	andeq	sl, r2, r0, asr #6
   12ef0:			; <UNDEFINED> instruction: 0x0002a2b4
   12ef4:	andeq	sl, r2, r0, lsl #5
   12ef8:			; <UNDEFINED> instruction: 0x0002a2b0
   12efc:	muleq	r2, r4, r2
   12f00:	andeq	r8, r1, r9, asr #30
   12f04:	ldrdeq	sl, [r2], -r0
   12f08:	muleq	r2, r0, r2
   12f0c:	andeq	r8, r1, lr, asr pc
   12f10:	ldr	r3, [pc, #164]	; 12fbc <putc_unlocked@plt+0x14b8>
   12f14:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   12f18:	ldr	r3, [r3]
   12f1c:	cmp	r3, #0
   12f20:	beq	12fb4 <putc_unlocked@plt+0x14b0>
   12f24:	ldr	r3, [pc, #148]	; 12fc0 <putc_unlocked@plt+0x14bc>
   12f28:	ldr	r4, [pc, #148]	; 12fc4 <putc_unlocked@plt+0x14c0>
   12f2c:	mov	r7, r0
   12f30:	ldr	r0, [r3]
   12f34:	ldr	r1, [r4, #4]
   12f38:	bl	18c14 <argp_error@@Base+0x13b8>
   12f3c:	mov	r2, #0
   12f40:	ldr	r0, [r4]
   12f44:	bl	11a08 <wmove@plt>
   12f48:	bl	1193c <__errno_location@plt>
   12f4c:	ldr	r6, [r4]
   12f50:	mov	r5, r0
   12f54:	ldr	r0, [r0]
   12f58:	bl	118ac <strerror@plt>
   12f5c:	ldr	r3, [r5]
   12f60:	mov	r2, r7
   12f64:	ldr	r1, [pc, #92]	; 12fc8 <putc_unlocked@plt+0x14c4>
   12f68:	str	r3, [sp]
   12f6c:	mov	r3, r0
   12f70:	mov	r0, r6
   12f74:	bl	11a80 <wprintw@plt>
   12f78:	ldr	r0, [r4]
   12f7c:	bl	1181c <wrefresh@plt>
   12f80:	ldr	r3, [pc, #68]	; 12fcc <putc_unlocked@plt+0x14c8>
   12f84:	ldr	r4, [pc, #68]	; 12fd0 <putc_unlocked@plt+0x14cc>
   12f88:	mov	r2, #0
   12f8c:	ldr	r1, [r3]
   12f90:	ldr	r0, [r4]
   12f94:	sub	r1, r1, #1
   12f98:	bl	11a08 <wmove@plt>
   12f9c:	ldr	r0, [r4]
   12fa0:	bl	1181c <wrefresh@plt>
   12fa4:	bl	12a7c <putc_unlocked@plt+0xf78>
   12fa8:	mov	r0, #0
   12fac:	add	sp, sp, #12
   12fb0:	pop	{r4, r5, r6, r7, pc}
   12fb4:	bl	11828 <perror@plt>
   12fb8:	b	12fa4 <putc_unlocked@plt+0x14a0>
   12fbc:	andeq	sl, r2, r0, lsr r2
   12fc0:	andeq	sl, r2, r4, lsr r2
   12fc4:	andeq	sl, r2, r8, lsl #6
   12fc8:	andeq	r9, r1, r0, asr #1
   12fcc:	andeq	sl, r2, r4, lsr #4
   12fd0:	andeq	sl, r2, ip, lsl #4
   12fd4:	ldr	r3, [pc, #156]	; 13078 <putc_unlocked@plt+0x1574>
   12fd8:	push	{r4, r5, r6, lr}
   12fdc:	mov	r5, r0
   12fe0:	ldr	r3, [r3]
   12fe4:	cmp	r3, #0
   12fe8:	beq	13054 <putc_unlocked@plt+0x1550>
   12fec:	ldr	r4, [pc, #136]	; 1307c <putc_unlocked@plt+0x1578>
   12ff0:	ldr	r6, [pc, #136]	; 13080 <putc_unlocked@plt+0x157c>
   12ff4:	ldr	r1, [r4, #4]
   12ff8:	ldr	r0, [r6]
   12ffc:	bl	18c14 <argp_error@@Base+0x13b8>
   13000:	mov	r2, #0
   13004:	ldr	r0, [r4]
   13008:	bl	11a08 <wmove@plt>
   1300c:	mov	r2, r5
   13010:	ldr	r1, [pc, #108]	; 13084 <putc_unlocked@plt+0x1580>
   13014:	ldr	r0, [r4]
   13018:	bl	11a80 <wprintw@plt>
   1301c:	ldr	r0, [r4]
   13020:	bl	11a14 <wclrtoeol@plt>
   13024:	ldr	r0, [r6]
   13028:	ldr	r1, [r4, #4]
   1302c:	add	r0, r0, #1
   13030:	str	r0, [r6]
   13034:	bl	18c14 <argp_error@@Base+0x13b8>
   13038:	mov	r2, #0
   1303c:	ldr	r0, [r4]
   13040:	bl	11a08 <wmove@plt>
   13044:	ldr	r0, [r4]
   13048:	bl	1181c <wrefresh@plt>
   1304c:	mov	r0, #0
   13050:	pop	{r4, r5, r6, pc}
   13054:	cmp	r0, #0
   13058:	beq	1304c <putc_unlocked@plt+0x1548>
   1305c:	ldrb	r3, [r0]
   13060:	cmp	r3, #0
   13064:	beq	1304c <putc_unlocked@plt+0x1548>
   13068:	mov	r1, r0
   1306c:	ldr	r0, [pc, #20]	; 13088 <putc_unlocked@plt+0x1584>
   13070:	bl	116f0 <printf@plt>
   13074:	b	1304c <putc_unlocked@plt+0x1548>
   13078:	andeq	sl, r2, r0, lsr r2
   1307c:	andeq	sl, r2, r8, lsl #6
   13080:	andeq	sl, r2, r4, lsr r2
   13084:	ldrdeq	r9, [r1], -r0
   13088:	ldrdeq	r9, [r1], -r5
   1308c:	ldr	r3, [pc, #536]	; 132ac <putc_unlocked@plt+0x17a8>
   13090:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13094:	sub	sp, sp, #8448	; 0x2100
   13098:	sub	sp, sp, #36	; 0x24
   1309c:	ldr	r0, [r3]
   130a0:	bl	11990 <fileno@plt>
   130a4:	add	r7, sp, #32
   130a8:	mov	r5, r0
   130ac:	ldr	r0, [pc, #508]	; 132b0 <putc_unlocked@plt+0x17ac>
   130b0:	bl	12fd4 <putc_unlocked@plt+0x14d0>
   130b4:	bl	11798 <beep@plt>
   130b8:	ldr	r2, [pc, #500]	; 132b4 <putc_unlocked@plt+0x17b0>
   130bc:	mov	r3, #0
   130c0:	str	r3, [r2]
   130c4:	mov	r2, r3
   130c8:	str	r2, [r7, r3, lsl #2]
   130cc:	add	r3, r3, #1
   130d0:	cmp	r3, #32
   130d4:	bne	130c8 <putc_unlocked@plt+0x15c4>
   130d8:	ldr	r9, [pc, #472]	; 132b8 <putc_unlocked@plt+0x17b4>
   130dc:	add	r4, sp, #288	; 0x120
   130e0:	mov	r8, #1
   130e4:	ldr	r3, [r9]
   130e8:	add	r6, r5, #31
   130ec:	cmp	r3, #0
   130f0:	add	r2, r3, #31
   130f4:	movge	r2, r3
   130f8:	rsbs	r1, r3, #0
   130fc:	asr	r2, r2, #5
   13100:	and	r1, r1, #31
   13104:	add	r2, r4, r2, lsl #2
   13108:	and	r0, r3, #31
   1310c:	rsbpl	r0, r1, #0
   13110:	ldr	r1, [r2, #-256]	; 0xffffff00
   13114:	cmp	r5, #0
   13118:	movge	r6, r5
   1311c:	orr	r1, r1, r8, lsl r0
   13120:	asr	r6, r6, #5
   13124:	str	r1, [r2, #-256]	; 0xffffff00
   13128:	rsbs	r1, r5, #0
   1312c:	and	r1, r1, #31
   13130:	lsl	r6, r6, #2
   13134:	and	r2, r5, #31
   13138:	rsbpl	r2, r1, #0
   1313c:	add	r1, r4, r6
   13140:	cmp	r5, r3
   13144:	lsl	r8, r8, r2
   13148:	movlt	r5, r3
   1314c:	ldr	r2, [r1, #-256]	; 0xffffff00
   13150:	ldr	sl, [pc, #356]	; 132bc <putc_unlocked@plt+0x17b8>
   13154:	ldr	fp, [pc, #356]	; 132c0 <putc_unlocked@plt+0x17bc>
   13158:	add	r5, r5, #1
   1315c:	orr	r2, r2, r8
   13160:	str	r2, [r1, #-256]	; 0xffffff00
   13164:	mov	r2, #128	; 0x80
   13168:	mov	r1, r7
   1316c:	add	r0, sp, #160	; 0xa0
   13170:	bl	1178c <memcpy@plt>
   13174:	mov	r3, #0
   13178:	sub	r2, r7, #8
   1317c:	str	sl, [r4, #-264]	; 0xfffffef8
   13180:	str	r3, [r4, #-260]	; 0xfffffefc
   13184:	add	r1, sp, #160	; 0xa0
   13188:	str	r2, [sp]
   1318c:	mov	r0, r5
   13190:	mov	r2, r3
   13194:	bl	117bc <select@plt>
   13198:	cmp	r0, #0
   1319c:	str	r0, [r4, #-268]	; 0xfffffef4
   131a0:	bgt	131d4 <putc_unlocked@plt+0x16d0>
   131a4:	bl	1193c <__errno_location@plt>
   131a8:	ldr	r3, [r0]
   131ac:	cmp	r3, #4
   131b0:	bne	131c8 <putc_unlocked@plt+0x16c4>
   131b4:	mov	r2, #128	; 0x80
   131b8:	mov	r1, r7
   131bc:	add	r0, sp, #160	; 0xa0
   131c0:	bl	1178c <memcpy@plt>
   131c4:	b	13164 <putc_unlocked@plt+0x1660>
   131c8:	ldr	r0, [pc, #244]	; 132c4 <putc_unlocked@plt+0x17c0>
   131cc:	bl	12f10 <putc_unlocked@plt+0x140c>
   131d0:	bl	12a7c <putc_unlocked@plt+0xf78>
   131d4:	ldr	r0, [r9]
   131d8:	cmp	r0, #0
   131dc:	add	r3, r0, #31
   131e0:	movge	r3, r0
   131e4:	rsbs	r1, r0, #0
   131e8:	asr	r3, r3, #5
   131ec:	and	r1, r1, #31
   131f0:	add	r3, r4, r3, lsl #2
   131f4:	and	r2, r0, #31
   131f8:	ldr	r3, [r3, #-128]	; 0xffffff80
   131fc:	rsbpl	r2, r1, #0
   13200:	mov	r1, #1
   13204:	ands	r3, r3, r1, lsl r2
   13208:	beq	13240 <putc_unlocked@plt+0x173c>
   1320c:	mov	r2, #8192	; 0x2000
   13210:	mov	r1, r4
   13214:	bl	116fc <read@plt>
   13218:	cmp	r0, #0
   1321c:	str	r0, [r4, #-268]	; 0xfffffef4
   13220:	bgt	13230 <putc_unlocked@plt+0x172c>
   13224:	ldr	r0, [pc, #156]	; 132c8 <putc_unlocked@plt+0x17c4>
   13228:	bl	12fd4 <putc_unlocked@plt+0x14d0>
   1322c:	bl	12a7c <putc_unlocked@plt+0xf78>
   13230:	ldr	r2, [r4, #-268]	; 0xfffffef4
   13234:	mov	r1, r4
   13238:	ldr	r0, [pc, #140]	; 132cc <putc_unlocked@plt+0x17c8>
   1323c:	bl	121ac <putc_unlocked@plt+0x6a8>
   13240:	add	r3, r4, r6
   13244:	ldr	r3, [r3, #-128]	; 0xffffff80
   13248:	tst	r8, r3
   1324c:	beq	13164 <putc_unlocked@plt+0x1660>
   13250:	sub	r2, r7, #12
   13254:	ldr	r1, [pc, #116]	; 132d0 <putc_unlocked@plt+0x17cc>
   13258:	mov	r0, #0
   1325c:	bl	14748 <argp_parse@@Base+0xb90>
   13260:	mov	r3, #0
   13264:	ldr	r2, [r4, #-268]	; 0xfffffef4
   13268:	cmp	r3, r2
   1326c:	blt	13290 <putc_unlocked@plt+0x178c>
   13270:	mov	r1, r4
   13274:	ldr	r0, [pc, #88]	; 132d4 <putc_unlocked@plt+0x17d0>
   13278:	bl	121ac <putc_unlocked@plt+0x6a8>
   1327c:	ldr	r2, [r4, #-268]	; 0xfffffef4
   13280:	mov	r1, r4
   13284:	ldr	r0, [r9]
   13288:	bl	11984 <write@plt>
   1328c:	b	13164 <putc_unlocked@plt+0x1660>
   13290:	ldr	r0, [fp]
   13294:	str	r3, [sp, #12]
   13298:	bl	11774 <wgetch@plt>
   1329c:	ldr	r3, [sp, #12]
   132a0:	strb	r0, [r4, r3]
   132a4:	add	r3, r3, #1
   132a8:	b	13264 <putc_unlocked@plt+0x1760>
   132ac:	andeq	sl, r2, r8, lsl r2
   132b0:	ldrdeq	r9, [r1], -fp
   132b4:	andeq	sl, r2, r4, lsr r2
   132b8:	muleq	r2, r8, r2
   132bc:	addseq	r9, r8, r0, lsl #13
   132c0:	andeq	sl, r2, ip, lsl #4
   132c4:	strdeq	r9, [r1], -r2
   132c8:	andeq	r9, r1, pc, lsl #2
   132cc:	andeq	sl, r2, r0, lsr #6
   132d0:	andeq	r5, r0, fp, lsl r4
   132d4:	andeq	sl, r2, r8, lsl #6
   132d8:	ldr	r2, [pc, #372]	; 13454 <putc_unlocked@plt+0x1950>
   132dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   132e0:	mov	r3, r2
   132e4:	ldr	r4, [pc, #364]	; 13458 <putc_unlocked@plt+0x1954>
   132e8:	ldrh	r1, [r3], #2
   132ec:	sub	sp, sp, #120	; 0x78
   132f0:	add	r2, r2, #14
   132f4:	rev16	r1, r1
   132f8:	strh	r1, [r4, #24]
   132fc:	add	r1, r4, #26
   13300:	ldr	r0, [r3], #4
   13304:	cmp	r3, r2
   13308:	str	r0, [r1], #4
   1330c:	bne	13300 <putc_unlocked@plt+0x17fc>
   13310:	ldrh	r3, [r3]
   13314:	ldr	r5, [pc, #320]	; 1345c <putc_unlocked@plt+0x1958>
   13318:	ldr	r6, [pc, #320]	; 13460 <putc_unlocked@plt+0x195c>
   1331c:	strh	r3, [r1]
   13320:	ldr	r3, [pc, #316]	; 13464 <putc_unlocked@plt+0x1960>
   13324:	mov	r2, #72	; 0x48
   13328:	str	r3, [r5]
   1332c:	ldr	r1, [pc, #308]	; 13468 <putc_unlocked@plt+0x1964>
   13330:	mov	r3, #1
   13334:	add	r7, sp, #96	; 0x60
   13338:	mov	r0, sp
   1333c:	str	r3, [sp, #72]	; 0x48
   13340:	str	r7, [sp, #76]	; 0x4c
   13344:	bl	1178c <memcpy@plt>
   13348:	ldm	r4, {r1, r2, r3}
   1334c:	ldr	r0, [r6]
   13350:	bl	11eac <putc_unlocked@plt+0x3a8>
   13354:	ldrb	r3, [sp, #98]	; 0x62
   13358:	cmp	r3, #0
   1335c:	bne	13440 <putc_unlocked@plt+0x193c>
   13360:	ldr	r3, [sp, #100]	; 0x64
   13364:	ldr	r9, [pc, #256]	; 1346c <putc_unlocked@plt+0x1968>
   13368:	rev	r3, r3
   1336c:	ldr	r8, [pc, #252]	; 13470 <putc_unlocked@plt+0x196c>
   13370:	str	r3, [r4, #4]
   13374:	ldr	r3, [pc, #248]	; 13474 <putc_unlocked@plt+0x1970>
   13378:	str	r3, [r5]
   1337c:	ldrh	r3, [sp, #104]	; 0x68
   13380:	cmp	r3, #2
   13384:	beq	13390 <putc_unlocked@plt+0x188c>
   13388:	mov	r0, r9
   1338c:	bl	12f10 <putc_unlocked@plt+0x140c>
   13390:	bl	1193c <__errno_location@plt>
   13394:	mov	r3, #0
   13398:	add	r2, sp, #82	; 0x52
   1339c:	str	r3, [r0]
   133a0:	ldrh	r3, [sp, #104]	; 0x68
   133a4:	mov	sl, r0
   133a8:	strh	r3, [sp, #80]	; 0x50
   133ac:	add	r3, sp, #106	; 0x6a
   133b0:	add	r1, r3, #12
   133b4:	ldr	r0, [r3], #4
   133b8:	cmp	r3, r1
   133bc:	str	r0, [r2], #4
   133c0:	bne	133b4 <putc_unlocked@plt+0x18b0>
   133c4:	ldrh	r3, [r3]
   133c8:	add	r1, sp, #80	; 0x50
   133cc:	strh	r3, [r2]
   133d0:	mov	r2, #16
   133d4:	ldr	r0, [r8]
   133d8:	bl	11ae0 <connect@plt>
   133dc:	cmn	r0, #1
   133e0:	mov	r5, r0
   133e4:	beq	133f8 <putc_unlocked@plt+0x18f4>
   133e8:	mov	r5, #1
   133ec:	mov	r0, r5
   133f0:	add	sp, sp, #120	; 0x78
   133f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   133f8:	ldr	r3, [sl]
   133fc:	cmp	r3, #4
   13400:	beq	1337c <putc_unlocked@plt+0x1878>
   13404:	cmp	r3, #111	; 0x6f
   13408:	bne	13448 <putc_unlocked@plt+0x1944>
   1340c:	mov	r3, #2
   13410:	mov	r2, #72	; 0x48
   13414:	ldr	r1, [pc, #76]	; 13468 <putc_unlocked@plt+0x1964>
   13418:	mov	r0, sp
   1341c:	str	r3, [sp, #72]	; 0x48
   13420:	str	r7, [sp, #76]	; 0x4c
   13424:	bl	1178c <memcpy@plt>
   13428:	ldm	r4, {r1, r2, r3}
   1342c:	ldr	r0, [r6]
   13430:	bl	11eac <putc_unlocked@plt+0x3a8>
   13434:	ldr	r0, [r8]
   13438:	bl	11ad4 <close@plt>
   1343c:	bl	11d4c <putc_unlocked@plt+0x248>
   13440:	mov	r5, #0
   13444:	b	133ec <putc_unlocked@plt+0x18e8>
   13448:	ldr	r0, [pc, #40]	; 13478 <putc_unlocked@plt+0x1974>
   1344c:	bl	12f10 <putc_unlocked@plt+0x140c>
   13450:	b	133ec <putc_unlocked@plt+0x18e8>
   13454:	muleq	r2, ip, r2
   13458:			; <UNDEFINED> instruction: 0x0002a2b4
   1345c:	ldrdeq	sl, [r2], -r4
   13460:			; <UNDEFINED> instruction: 0x0002a2b0
   13464:	andeq	r9, r1, sl, lsr #2
   13468:	andeq	sl, r2, r0, asr #5
   1346c:	andeq	r9, r1, r5, ror r1
   13470:	muleq	r2, r8, r2
   13474:	andeq	r9, r1, r6, asr r1
   13478:	muleq	r1, fp, r1
   1347c:	ldr	r3, [pc, #4]	; 13488 <putc_unlocked@plt+0x1984>
   13480:	ldr	r0, [r3]
   13484:	b	12fd4 <putc_unlocked@plt+0x14d0>
   13488:	ldrdeq	sl, [r2], -r4
   1348c:	push	{r0, r1, r2, r3, r4, lr}
   13490:	mov	r4, #0
   13494:	ldr	r3, [pc, #64]	; 134dc <putc_unlocked@plt+0x19d8>
   13498:	ldr	r0, [r3]
   1349c:	bl	12fd4 <putc_unlocked@plt+0x14d0>
   134a0:	ldr	r1, [pc, #56]	; 134e0 <putc_unlocked@plt+0x19dc>
   134a4:	mov	r0, #14
   134a8:	bl	117a4 <signal@plt>
   134ac:	mov	r3, #4
   134b0:	mov	r2, r4
   134b4:	mov	r1, sp
   134b8:	mov	r0, r4
   134bc:	str	r3, [sp]
   134c0:	str	r3, [sp, #8]
   134c4:	str	r4, [sp, #4]
   134c8:	str	r4, [sp, #12]
   134cc:	bl	116a8 <setitimer@plt>
   134d0:	mov	r0, r4
   134d4:	add	sp, sp, #16
   134d8:	pop	{r4, pc}
   134dc:	ldrdeq	sl, [r2], -r4
   134e0:	andeq	r3, r1, ip, ror r4
   134e4:	push	{r0, r1, r2, r3, r4, lr}
   134e8:	add	r1, sp, #16
   134ec:	mov	r4, #0
   134f0:	str	r4, [r1, #-16]!
   134f4:	mov	r2, r4
   134f8:	mov	r0, r4
   134fc:	str	r4, [sp, #12]
   13500:	str	r4, [sp, #8]
   13504:	str	r4, [sp, #4]
   13508:	bl	116a8 <setitimer@plt>
   1350c:	mov	r1, r4
   13510:	mov	r0, #14
   13514:	bl	117a4 <signal@plt>
   13518:	mov	r0, r4
   1351c:	add	sp, sp, #16
   13520:	pop	{r4, pc}
   13524:	ldr	r2, [pc, #8]	; 13534 <putc_unlocked@plt+0x1a30>
   13528:	ldr	r1, [pc, #8]	; 13538 <putc_unlocked@plt+0x1a34>
   1352c:	ldr	r0, [pc, #8]	; 1353c <putc_unlocked@plt+0x1a38>
   13530:	b	116f0 <printf@plt>
   13534:	andeq	r9, r1, r5, lsl r3
   13538:			; <UNDEFINED> instruction: 0x000191bc
   1353c:	andeq	r9, r1, fp, lsr #6
   13540:	push	{r4, r5, r6, r7, r8, lr}
   13544:	sub	sp, sp, #1072	; 0x430
   13548:	sub	sp, sp, #8
   1354c:	bl	1193c <__errno_location@plt>
   13550:	mov	r5, #0
   13554:	mov	r7, r5
   13558:	mov	r8, r5
   1355c:	mov	r6, r0
   13560:	add	r5, r5, #256	; 0x100
   13564:	str	r8, [r6]
   13568:	mov	r1, r5
   1356c:	mov	r0, r7
   13570:	bl	14c40 <argp_parse@@Base+0x1088>
   13574:	subs	r4, r0, #0
   13578:	bne	135a4 <putc_unlocked@plt+0x1aa0>
   1357c:	mov	r3, #12
   13580:	str	r3, [r6]
   13584:	mov	r0, r7
   13588:	bl	14654 <argp_parse@@Base+0xa9c>
   1358c:	mov	r0, r4
   13590:	add	sp, sp, #1072	; 0x430
   13594:	add	sp, sp, #8
   13598:	pop	{r4, r5, r6, r7, r8, pc}
   1359c:	mov	r7, r4
   135a0:	b	13560 <putc_unlocked@plt+0x1a5c>
   135a4:	mov	r1, r5
   135a8:	bl	11864 <gethostname@plt>
   135ac:	subs	r7, r0, #0
   135b0:	bne	135cc <putc_unlocked@plt+0x1ac8>
   135b4:	mov	r2, r5
   135b8:	mov	r1, r8
   135bc:	mov	r0, r4
   135c0:	bl	1199c <memchr@plt>
   135c4:	cmp	r0, #0
   135c8:	beq	1359c <putc_unlocked@plt+0x1a98>
   135cc:	ldr	r3, [r6]
   135d0:	cmp	r3, #36	; 0x24
   135d4:	beq	1359c <putc_unlocked@plt+0x1a98>
   135d8:	cmp	r3, #0
   135dc:	cmpne	r7, #0
   135e0:	movne	r7, #1
   135e4:	moveq	r7, #0
   135e8:	beq	135fc <putc_unlocked@plt+0x1af8>
   135ec:	mov	r0, r4
   135f0:	bl	14654 <argp_parse@@Base+0xa9c>
   135f4:	mov	r4, #0
   135f8:	b	1358c <putc_unlocked@plt+0x1a88>
   135fc:	mov	r2, #32
   13600:	mov	r1, r7
   13604:	add	r0, sp, #20
   13608:	bl	1196c <memset@plt>
   1360c:	mov	r3, #2
   13610:	str	r3, [sp, #24]
   13614:	add	r2, sp, #20
   13618:	add	r3, sp, #16
   1361c:	mov	r1, r7
   13620:	mov	r0, r4
   13624:	bl	11a68 <getaddrinfo@plt>
   13628:	cmp	r0, #0
   1362c:	bne	1358c <putc_unlocked@plt+0x1a88>
   13630:	ldr	ip, [sp, #16]
   13634:	mov	r3, #8
   13638:	str	r0, [sp]
   1363c:	stmib	sp, {r0, r3}
   13640:	add	r2, sp, #52	; 0x34
   13644:	ldr	r3, [pc, #48]	; 1367c <putc_unlocked@plt+0x1b78>
   13648:	ldr	r1, [ip, #16]
   1364c:	ldr	r0, [ip, #20]
   13650:	bl	119c0 <getnameinfo@plt>
   13654:	cmp	r0, #0
   13658:	bne	13670 <putc_unlocked@plt+0x1b6c>
   1365c:	mov	r0, r4
   13660:	bl	14654 <argp_parse@@Base+0xa9c>
   13664:	add	r0, sp, #52	; 0x34
   13668:	bl	117e0 <strdup@plt>
   1366c:	mov	r4, r0
   13670:	ldr	r0, [sp, #16]
   13674:	bl	11a5c <freeaddrinfo@plt>
   13678:	b	1358c <putc_unlocked@plt+0x1a88>
   1367c:	andeq	r0, r0, r1, lsl #8
   13680:	push	{r4, r5, r6, lr}
   13684:	ldr	r6, [r0]
   13688:	cmp	r6, #0
   1368c:	beq	136d8 <putc_unlocked@plt+0x1bd4>
   13690:	mov	ip, r2
   13694:	ldr	r2, [r0, #32]
   13698:	mov	r5, r1
   1369c:	str	r2, [r1, #36]	; 0x24
   136a0:	ldr	r2, [r0, #24]
   136a4:	mov	r4, r0
   136a8:	str	r2, [r1, #28]
   136ac:	ldr	r2, [r0, #28]
   136b0:	str	r2, [r1, #32]
   136b4:	ldr	r2, [r0, #12]
   136b8:	mov	r0, ip
   136bc:	str	r2, [r1, #20]
   136c0:	mov	r2, r1
   136c4:	mov	r1, r3
   136c8:	blx	r6
   136cc:	ldr	r3, [r5, #36]	; 0x24
   136d0:	str	r3, [r4, #32]
   136d4:	pop	{r4, r5, r6, pc}
   136d8:	mov	r0, #7
   136dc:	pop	{r4, r5, r6, pc}
   136e0:	ldr	r3, [r0]
   136e4:	push	{r4, r5, r6, lr}
   136e8:	cmp	r3, #0
   136ec:	ldr	r4, [r0, #16]
   136f0:	bne	13700 <putc_unlocked@plt+0x1bfc>
   136f4:	ldr	r2, [r0, #4]
   136f8:	cmp	r2, #0
   136fc:	beq	13768 <putc_unlocked@plt+0x1c64>
   13700:	ldr	r2, [r1, #8]
   13704:	cmp	r3, #0
   13708:	add	r2, r2, #1
   1370c:	str	r2, [r1, #8]
   13710:	beq	13768 <putc_unlocked@plt+0x1c64>
   13714:	mov	r2, #0
   13718:	add	r3, r3, #24
   1371c:	ldr	r0, [r3, #-20]	; 0xffffffec
   13720:	cmp	r0, #0
   13724:	bne	137a4 <putc_unlocked@plt+0x1ca0>
   13728:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1372c:	cmp	r0, #0
   13730:	bne	137a4 <putc_unlocked@plt+0x1ca0>
   13734:	ldr	r0, [r3, #-8]
   13738:	cmp	r0, #0
   1373c:	bne	137a4 <putc_unlocked@plt+0x1ca0>
   13740:	ldr	r0, [r3, #-4]
   13744:	cmp	r0, #0
   13748:	bne	137a4 <putc_unlocked@plt+0x1ca0>
   1374c:	ldr	r3, [r1]
   13750:	add	r0, r2, r2, lsl #1
   13754:	add	r3, r3, r0
   13758:	str	r3, [r1]
   1375c:	ldr	r3, [r1, #4]
   13760:	add	r2, r3, r2
   13764:	str	r2, [r1, #4]
   13768:	cmp	r4, #0
   1376c:	movne	r5, r1
   13770:	addne	r4, r4, #16
   13774:	bne	13790 <putc_unlocked@plt+0x1c8c>
   13778:	pop	{r4, r5, r6, pc}
   1377c:	mov	r1, r5
   13780:	bl	136e0 <putc_unlocked@plt+0x1bdc>
   13784:	ldr	r3, [r5, #12]
   13788:	add	r3, r3, #1
   1378c:	str	r3, [r5, #12]
   13790:	add	r4, r4, #16
   13794:	ldr	r0, [r4, #-32]	; 0xffffffe0
   13798:	cmp	r0, #0
   1379c:	bne	1377c <putc_unlocked@plt+0x1c78>
   137a0:	pop	{r4, r5, r6, pc}
   137a4:	add	r2, r2, #1
   137a8:	b	13718 <putc_unlocked@plt+0x1c14>
   137ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137b0:	sub	sp, sp, #36	; 0x24
   137b4:	ldr	r6, [r0]
   137b8:	mov	r9, r0
   137bc:	cmp	r6, #0
   137c0:	str	r1, [sp, #16]
   137c4:	str	r2, [sp, #20]
   137c8:	mov	r4, r3
   137cc:	ldr	r5, [sp, #72]	; 0x48
   137d0:	ldr	sl, [r0, #16]
   137d4:	addne	r7, r6, #24
   137d8:	movne	fp, #0
   137dc:	bne	13958 <putc_unlocked@plt+0x1e54>
   137e0:	ldr	r6, [r0, #4]
   137e4:	cmp	r6, #0
   137e8:	beq	1384c <putc_unlocked@plt+0x1d48>
   137ec:	ldr	r3, [r9, #4]
   137f0:	ldr	r2, [sp, #16]
   137f4:	stm	r4, {r3, r9}
   137f8:	ldr	r3, [r5, #4]
   137fc:	str	r2, [r4, #16]
   13800:	str	r3, [r4, #8]
   13804:	ldr	r2, [sp, #20]
   13808:	mov	r3, #0
   1380c:	cmp	sl, r3
   13810:	str	r3, [r4, #12]
   13814:	str	r2, [r4, #20]
   13818:	str	r3, [r4, #24]
   1381c:	str	r3, [r4, #32]
   13820:	str	r3, [r4, #28]
   13824:	beq	13844 <putc_unlocked@plt+0x1d40>
   13828:	ldr	r2, [sl, r3, lsl #4]
   1382c:	cmp	r2, #0
   13830:	bne	139b4 <putc_unlocked@plt+0x1eb0>
   13834:	ldr	r2, [r5, #12]
   13838:	add	r3, r2, r3, lsl #2
   1383c:	str	r2, [r4, #28]
   13840:	str	r3, [r5, #12]
   13844:	mov	r6, r4
   13848:	add	r4, r4, #36	; 0x24
   1384c:	cmp	sl, #0
   13850:	movne	r2, #0
   13854:	bne	139d8 <putc_unlocked@plt+0x1ed4>
   13858:	mov	r0, r4
   1385c:	add	sp, sp, #36	; 0x24
   13860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13864:	tst	r2, #8
   13868:	bne	13890 <putc_unlocked@plt+0x1d8c>
   1386c:	sub	r3, r8, #1
   13870:	cmp	r3, #254	; 0xfe
   13874:	bhi	13890 <putc_unlocked@plt+0x1d8c>
   13878:	bl	118dc <__ctype_b_loc@plt>
   1387c:	lsl	r3, r8, #1
   13880:	ldr	r2, [r0]
   13884:	ldrh	r3, [r2, r3]
   13888:	tst	r3, #16384	; 0x4000
   1388c:	bne	139e8 <putc_unlocked@plt+0x1ee4>
   13890:	ldr	r3, [r7, #-24]	; 0xffffffe8
   13894:	cmp	r3, #0
   13898:	beq	13954 <putc_unlocked@plt+0x1e50>
   1389c:	ldr	r2, [r5]
   138a0:	str	r2, [sp, #12]
   138a4:	ldr	r2, [r2, #8]
   138a8:	mov	r8, r2
   138ac:	ldr	r0, [r8]
   138b0:	cmp	r0, #0
   138b4:	beq	138e4 <putc_unlocked@plt+0x1de0>
   138b8:	mov	r1, r3
   138bc:	str	r2, [sp, #28]
   138c0:	str	r3, [sp, #24]
   138c4:	bl	116b4 <strcmp@plt>
   138c8:	ldr	r3, [sp, #24]
   138cc:	ldr	r2, [sp, #28]
   138d0:	cmp	r0, #0
   138d4:	bne	139ac <putc_unlocked@plt+0x1ea8>
   138d8:	sub	r8, r8, r2
   138dc:	cmn	r8, #15
   138e0:	bge	13954 <putc_unlocked@plt+0x1e50>
   138e4:	ldr	r1, [r5, #8]
   138e8:	str	r3, [r1]
   138ec:	ldr	r3, [r6, #8]
   138f0:	cmp	r3, #0
   138f4:	beq	1390c <putc_unlocked@plt+0x1e08>
   138f8:	ldr	r3, [r6, #12]
   138fc:	tst	r3, #1
   13900:	movne	r3, #2
   13904:	moveq	r3, #1
   13908:	str	r3, [sp, #8]
   1390c:	ldr	r2, [sp, #12]
   13910:	ldr	r3, [sp, #8]
   13914:	ldr	r0, [pc, #292]	; 13a40 <putc_unlocked@plt+0x1f3c>
   13918:	ldr	r2, [r2, #48]	; 0x30
   1391c:	stmib	r1, {r3, fp}
   13920:	sub	r2, r4, r2
   13924:	ldr	r3, [r7, #-20]	; 0xffffffec
   13928:	asr	r2, r2, #2
   1392c:	cmp	r3, #0
   13930:	mul	r2, r0, r2
   13934:	ldreq	r3, [r6, #4]
   13938:	add	r2, r2, #1
   1393c:	bic	r3, r3, #-16777216	; 0xff000000
   13940:	add	r3, r3, r2, lsl #24
   13944:	str	r3, [r1, #12]
   13948:	add	r3, r1, #16
   1394c:	str	r3, [r5, #8]
   13950:	str	fp, [r1, #16]
   13954:	add	r7, r7, #24
   13958:	ldr	r8, [r7, #-20]	; 0xffffffec
   1395c:	sub	r3, r7, #24
   13960:	cmp	r8, #0
   13964:	bne	1398c <putc_unlocked@plt+0x1e88>
   13968:	ldr	r2, [r7, #-24]	; 0xffffffe8
   1396c:	cmp	r2, #0
   13970:	bne	1398c <putc_unlocked@plt+0x1e88>
   13974:	ldr	r2, [r7, #-8]
   13978:	cmp	r2, #0
   1397c:	bne	1398c <putc_unlocked@plt+0x1e88>
   13980:	ldr	r2, [r7, #-4]
   13984:	cmp	r2, #0
   13988:	beq	137ec <putc_unlocked@plt+0x1ce8>
   1398c:	ldr	r2, [r7, #-12]
   13990:	tst	r2, #4
   13994:	moveq	r6, r3
   13998:	ldr	r3, [r6, #12]
   1399c:	ands	r3, r3, #8
   139a0:	str	r3, [sp, #8]
   139a4:	beq	13864 <putc_unlocked@plt+0x1d60>
   139a8:	b	13954 <putc_unlocked@plt+0x1e50>
   139ac:	add	r8, r8, #16
   139b0:	b	138ac <putc_unlocked@plt+0x1da8>
   139b4:	add	r3, r3, #1
   139b8:	b	13828 <putc_unlocked@plt+0x1d24>
   139bc:	mov	r3, r4
   139c0:	str	r5, [sp]
   139c4:	mov	r1, r6
   139c8:	add	r7, r2, #1
   139cc:	bl	137ac <putc_unlocked@plt+0x1ca8>
   139d0:	mov	r2, r7
   139d4:	mov	r4, r0
   139d8:	ldr	r0, [sl, r2, lsl #4]
   139dc:	cmp	r0, #0
   139e0:	bne	139bc <putc_unlocked@plt+0x1eb8>
   139e4:	b	13858 <putc_unlocked@plt+0x1d54>
   139e8:	ldr	r3, [r5, #4]
   139ec:	add	r2, r3, #1
   139f0:	str	r2, [r5, #4]
   139f4:	strb	r8, [r3]
   139f8:	ldr	r3, [r6, #8]
   139fc:	cmp	r3, #0
   13a00:	beq	13a34 <putc_unlocked@plt+0x1f30>
   13a04:	ldr	r3, [r5, #4]
   13a08:	add	r2, r3, #1
   13a0c:	str	r2, [r5, #4]
   13a10:	mov	r2, #58	; 0x3a
   13a14:	strb	r2, [r3]
   13a18:	ldr	r3, [r6, #12]
   13a1c:	tst	r3, #1
   13a20:	ldrne	r3, [r5, #4]
   13a24:	addne	r2, r3, #1
   13a28:	strne	r2, [r5, #4]
   13a2c:	movne	r2, #58	; 0x3a
   13a30:	strbne	r2, [r3]
   13a34:	ldr	r3, [r5, #4]
   13a38:	strb	fp, [r3]
   13a3c:	b	13890 <putc_unlocked@plt+0x1d8c>
   13a40:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   13a44:	cmp	r0, #86	; 0x56
   13a48:	bne	13ab4 <putc_unlocked@plt+0x1fb0>
   13a4c:	ldr	r3, [pc, #112]	; 13ac4 <putc_unlocked@plt+0x1fc0>
   13a50:	push	{r4, lr}
   13a54:	mov	r4, r2
   13a58:	ldr	r3, [r3]
   13a5c:	cmp	r3, #0
   13a60:	beq	13a80 <putc_unlocked@plt+0x1f7c>
   13a64:	mov	r1, r2
   13a68:	ldr	r0, [r2, #48]	; 0x30
   13a6c:	blx	r3
   13a70:	ldr	r0, [r4, #16]
   13a74:	ands	r0, r0, #32
   13a78:	bne	13abc <putc_unlocked@plt+0x1fb8>
   13a7c:	bl	118f4 <exit@plt>
   13a80:	ldr	r3, [pc, #64]	; 13ac8 <putc_unlocked@plt+0x1fc4>
   13a84:	ldr	r2, [r3]
   13a88:	cmp	r2, #0
   13a8c:	beq	13aa0 <putc_unlocked@plt+0x1f9c>
   13a90:	ldr	r1, [pc, #52]	; 13acc <putc_unlocked@plt+0x1fc8>
   13a94:	ldr	r0, [r4, #48]	; 0x30
   13a98:	bl	11918 <fprintf@plt>
   13a9c:	b	13a70 <putc_unlocked@plt+0x1f6c>
   13aa0:	ldr	r2, [pc, #40]	; 13ad0 <putc_unlocked@plt+0x1fcc>
   13aa4:	ldr	r1, [pc, #40]	; 13ad4 <putc_unlocked@plt+0x1fd0>
   13aa8:	mov	r0, r4
   13aac:	bl	1785c <argp_error@@Base>
   13ab0:	b	13a70 <putc_unlocked@plt+0x1f6c>
   13ab4:	mov	r0, #7
   13ab8:	bx	lr
   13abc:	mov	r0, #0
   13ac0:	pop	{r4, pc}
   13ac4:	andeq	sl, r2, ip, lsr r2
   13ac8:	ldrdeq	sl, [r2], -ip
   13acc:	andeq	r9, r1, lr, ror #11
   13ad0:	andeq	r9, r1, r4, lsl #9
   13ad4:	andeq	r9, r1, r0, lsl fp
   13ad8:	cmn	r0, #3
   13adc:	push	{r4, r5, r6, lr}
   13ae0:	mov	r4, r2
   13ae4:	beq	13b28 <putc_unlocked@plt+0x2024>
   13ae8:	mov	r5, r1
   13aec:	bgt	13b00 <putc_unlocked@plt+0x1ffc>
   13af0:	cmn	r0, #4
   13af4:	beq	13b64 <putc_unlocked@plt+0x2060>
   13af8:	mov	r0, #7
   13afc:	pop	{r4, r5, r6, pc}
   13b00:	cmn	r0, #2
   13b04:	beq	13b30 <putc_unlocked@plt+0x202c>
   13b08:	cmp	r0, #63	; 0x3f
   13b0c:	ldreq	r2, [pc, #140]	; 13ba0 <putc_unlocked@plt+0x209c>
   13b10:	bne	13af8 <putc_unlocked@plt+0x1ff4>
   13b14:	ldr	r1, [r4, #48]	; 0x30
   13b18:	mov	r0, r4
   13b1c:	bl	177bc <argp_state_help@@Base>
   13b20:	mov	r0, #0
   13b24:	pop	{r4, r5, r6, pc}
   13b28:	ldr	r2, [pc, #116]	; 13ba4 <putc_unlocked@plt+0x20a0>
   13b2c:	b	13b14 <putc_unlocked@plt+0x2010>
   13b30:	ldr	r3, [pc, #112]	; 13ba8 <putc_unlocked@plt+0x20a4>
   13b34:	mov	r0, r1
   13b38:	str	r1, [r3]
   13b3c:	bl	145c4 <argp_parse@@Base+0xa0c>
   13b40:	ldr	r3, [pc, #100]	; 13bac <putc_unlocked@plt+0x20a8>
   13b44:	str	r0, [r3]
   13b48:	ldr	r3, [r4, #16]
   13b4c:	str	r0, [r4, #40]	; 0x28
   13b50:	and	r3, r3, #3
   13b54:	cmp	r3, #1
   13b58:	ldreq	r3, [r4, #8]
   13b5c:	streq	r5, [r3]
   13b60:	b	13b20 <putc_unlocked@plt+0x201c>
   13b64:	cmp	r1, #0
   13b68:	ldr	r0, [pc, #64]	; 13bb0 <putc_unlocked@plt+0x20ac>
   13b6c:	movne	r0, r1
   13b70:	bl	11a38 <atoi@plt>
   13b74:	ldr	r4, [pc, #56]	; 13bb4 <putc_unlocked@plt+0x20b0>
   13b78:	mov	r5, #1
   13b7c:	str	r0, [r4]
   13b80:	ldr	r3, [r4]
   13b84:	sub	r2, r3, #1
   13b88:	cmp	r3, #0
   13b8c:	str	r2, [r4]
   13b90:	ble	13b20 <putc_unlocked@plt+0x201c>
   13b94:	mov	r0, r5
   13b98:	bl	117c8 <sleep@plt>
   13b9c:	b	13b80 <putc_unlocked@plt+0x207c>
   13ba0:	andeq	r0, r0, sl, ror r2
   13ba4:	andeq	r0, r0, r1, lsl #4
   13ba8:	andeq	sl, r2, r4, lsl #4
   13bac:	andeq	sl, r2, r0, lsl #4
   13bb0:	andeq	r9, r1, r7, lsr #9
   13bb4:	andeq	sl, r2, r8, lsr r2

00013bb8 <argp_parse@@Base>:
   13bb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bbc:	add	fp, sp, #32
   13bc0:	tst	r3, #1
   13bc4:	sub	sp, sp, #220	; 0xdc
   13bc8:	mov	r4, r0
   13bcc:	mov	r8, r2
   13bd0:	str	r1, [fp, #-240]	; 0xffffff10
   13bd4:	mov	sl, r3
   13bd8:	bne	13c0c <argp_parse@@Base+0x54>
   13bdc:	ldr	r3, [pc, #2296]	; 144dc <argp_parse@@Base+0x924>
   13be0:	ldr	r5, [pc, #2296]	; 144e0 <argp_parse@@Base+0x928>
   13be4:	ldr	r2, [r3]
   13be8:	cmp	r2, #0
   13bec:	ldreq	r2, [r8]
   13bf0:	streq	r2, [r3]
   13bf4:	ldr	r3, [r5]
   13bf8:	cmp	r3, #0
   13bfc:	bne	13c0c <argp_parse@@Base+0x54>
   13c00:	ldr	r0, [r8]
   13c04:	bl	145c4 <argp_parse@@Base+0xa0c>
   13c08:	str	r0, [r5]
   13c0c:	ands	r7, sl, #16
   13c10:	bne	13c98 <argp_parse@@Base+0xe0>
   13c14:	sub	sp, sp, #72	; 0x48
   13c18:	add	r5, sp, #8
   13c1c:	sub	sp, sp, #40	; 0x28
   13c20:	add	r6, sp, #8
   13c24:	mov	r2, #28
   13c28:	mov	r1, r7
   13c2c:	mov	r0, r6
   13c30:	bl	1196c <memset@plt>
   13c34:	str	r5, [r6, #16]
   13c38:	mov	r0, r5
   13c3c:	mov	r2, #64	; 0x40
   13c40:	mov	r1, r7
   13c44:	bl	1196c <memset@plt>
   13c48:	cmp	r4, #0
   13c4c:	strne	r4, [r5]
   13c50:	ldr	r3, [pc, #2188]	; 144e4 <argp_parse@@Base+0x92c>
   13c54:	addne	r5, r5, #16
   13c58:	str	r3, [r5]
   13c5c:	ldr	r3, [pc, #2180]	; 144e8 <argp_parse@@Base+0x930>
   13c60:	ldr	r3, [r3]
   13c64:	cmp	r3, #0
   13c68:	bne	13c80 <argp_parse@@Base+0xc8>
   13c6c:	ldr	r3, [pc, #2168]	; 144ec <argp_parse@@Base+0x934>
   13c70:	ldr	r3, [r3]
   13c74:	cmp	r3, #0
   13c78:	addeq	r3, r5, #16
   13c7c:	beq	13c8c <argp_parse@@Base+0xd4>
   13c80:	ldr	r2, [pc, #2152]	; 144f0 <argp_parse@@Base+0x938>
   13c84:	add	r3, r5, #32
   13c88:	str	r2, [r5, #16]
   13c8c:	mov	r4, r6
   13c90:	mov	r2, #0
   13c94:	str	r2, [r3]
   13c98:	mov	r2, #36	; 0x24
   13c9c:	mov	r1, #0
   13ca0:	sub	r0, fp, #196	; 0xc4
   13ca4:	bl	1196c <memset@plt>
   13ca8:	ands	r3, sl, #4
   13cac:	moveq	r3, #1
   13cb0:	movne	r3, #0
   13cb4:	str	r3, [fp, #-228]	; 0xffffff1c
   13cb8:	mov	r3, #0
   13cbc:	cmp	r4, r3
   13cc0:	str	r3, [fp, #-224]	; 0xffffff20
   13cc4:	str	r3, [fp, #-220]	; 0xffffff24
   13cc8:	str	r3, [fp, #-216]	; 0xffffff28
   13ccc:	beq	13cdc <argp_parse@@Base+0x124>
   13cd0:	sub	r1, fp, #228	; 0xe4
   13cd4:	mov	r0, r4
   13cd8:	bl	136e0 <putc_unlocked@plt+0x1bdc>
   13cdc:	ldr	r9, [fp, #-220]	; 0xffffff24
   13ce0:	ldr	r5, [fp, #-216]	; 0xffffff28
   13ce4:	add	r3, r9, #1
   13ce8:	mov	r9, #36	; 0x24
   13cec:	ldr	r6, [fp, #-224]	; 0xffffff20
   13cf0:	mul	r9, r9, r3
   13cf4:	ldr	r0, [fp, #-228]	; 0xffffff1c
   13cf8:	lsl	r5, r5, #2
   13cfc:	add	r6, r6, #1
   13d00:	add	r3, r9, r5
   13d04:	add	r6, r3, r6, lsl #4
   13d08:	add	r0, r0, #1
   13d0c:	add	r0, r0, r6
   13d10:	str	r3, [fp, #-236]	; 0xffffff14
   13d14:	bl	14c00 <argp_parse@@Base+0x1048>
   13d18:	cmp	r0, #0
   13d1c:	mov	r7, r0
   13d20:	str	r0, [fp, #-40]	; 0xffffffd8
   13d24:	moveq	r4, #12
   13d28:	beq	13ea8 <argp_parse@@Base+0x2f0>
   13d2c:	add	r3, r0, r9
   13d30:	str	r3, [fp, #-232]	; 0xffffff18
   13d34:	str	r3, [fp, #-104]	; 0xffffff98
   13d38:	ldr	r3, [fp, #-236]	; 0xffffff14
   13d3c:	sub	lr, fp, #196	; 0xc4
   13d40:	add	r3, r0, r3
   13d44:	str	r3, [fp, #-236]	; 0xffffff14
   13d48:	str	r3, [fp, #-152]	; 0xffffff68
   13d4c:	mov	r3, #1
   13d50:	add	r9, r0, r6
   13d54:	str	r0, [fp, #-112]	; 0xffffff90
   13d58:	str	r3, [fp, #-196]	; 0xffffff3c
   13d5c:	str	r3, [fp, #-192]	; 0xffffff40
   13d60:	ldm	lr!, {r0, r1, r2, r3}
   13d64:	sub	ip, fp, #148	; 0x94
   13d68:	str	r9, [fp, #-156]	; 0xffffff64
   13d6c:	stmia	ip!, {r0, r1, r2, r3}
   13d70:	ldm	lr!, {r0, r1, r2, r3}
   13d74:	stmia	ip!, {r0, r1, r2, r3}
   13d78:	mov	r2, r5
   13d7c:	ldr	r3, [lr]
   13d80:	mov	r1, #0
   13d84:	ldr	r0, [fp, #-232]	; 0xffffff18
   13d88:	str	r3, [ip]
   13d8c:	bl	1196c <memset@plt>
   13d90:	ldr	r3, [fp, #-236]	; 0xffffff14
   13d94:	tst	sl, #8
   13d98:	str	r3, [fp, #-204]	; 0xffffff34
   13d9c:	ldr	r3, [fp, #-232]	; 0xffffff18
   13da0:	str	r9, [fp, #-208]	; 0xffffff30
   13da4:	sub	r5, fp, #160	; 0xa0
   13da8:	addne	r9, r9, #1
   13dac:	str	r3, [fp, #-200]	; 0xffffff38
   13db0:	str	r5, [fp, #-212]	; 0xffffff2c
   13db4:	strne	r9, [fp, #-208]	; 0xffffff30
   13db8:	movne	r3, #45	; 0x2d
   13dbc:	bne	13dd8 <argp_parse@@Base+0x220>
   13dc0:	ands	r3, sl, #4
   13dc4:	cmp	r3, #0
   13dc8:	beq	13ddc <argp_parse@@Base+0x224>
   13dcc:	mov	r3, #43	; 0x2b
   13dd0:	add	r9, r9, #1
   13dd4:	str	r9, [fp, #-208]	; 0xffffff30
   13dd8:	strb	r3, [r7, r6]
   13ddc:	ldr	r3, [fp, #-208]	; 0xffffff30
   13de0:	mov	r2, #0
   13de4:	cmp	r4, r2
   13de8:	strb	r2, [r3]
   13dec:	ldr	r3, [fp, #-204]	; 0xffffff34
   13df0:	str	r2, [r3]
   13df4:	ldreq	r3, [fp, #-112]	; 0xffffff90
   13df8:	str	r4, [fp, #-160]	; 0xffffff60
   13dfc:	streq	r3, [fp, #-108]	; 0xffffff94
   13e00:	beq	13e20 <argp_parse@@Base+0x268>
   13e04:	sub	r3, fp, #212	; 0xd4
   13e08:	str	r3, [sp]
   13e0c:	mov	r1, r2
   13e10:	ldr	r3, [fp, #-112]	; 0xffffff90
   13e14:	mov	r0, r4
   13e18:	bl	137ac <putc_unlocked@plt+0x1ca8>
   13e1c:	str	r0, [fp, #-108]	; 0xffffff94
   13e20:	mov	r2, #56	; 0x38
   13e24:	mov	r1, #0
   13e28:	add	r0, r5, #64	; 0x40
   13e2c:	bl	1196c <memset@plt>
   13e30:	ldr	r3, [fp, #-160]	; 0xffffff60
   13e34:	ldr	r6, [fp, #-112]	; 0xffffff90
   13e38:	str	r3, [fp, #-96]	; 0xffffffa0
   13e3c:	ldr	r3, [fp, #-240]	; 0xffffff10
   13e40:	str	sl, [fp, #-80]	; 0xffffffb0
   13e44:	str	r3, [fp, #-92]	; 0xffffffa4
   13e48:	ldr	r3, [pc, #1700]	; 144f4 <argp_parse@@Base+0x93c>
   13e4c:	mov	r4, #0
   13e50:	ldr	sl, [pc, #1696]	; 144f8 <argp_parse@@Base+0x940>
   13e54:	ldr	r3, [r3]
   13e58:	add	r7, r5, #64	; 0x40
   13e5c:	str	r3, [fp, #-52]	; 0xffffffcc
   13e60:	ldr	r3, [pc, #1684]	; 144fc <argp_parse@@Base+0x944>
   13e64:	mov	r9, r4
   13e68:	str	r8, [fp, #-88]	; 0xffffffa8
   13e6c:	ldr	r3, [r3]
   13e70:	str	r5, [fp, #-44]	; 0xffffffd4
   13e74:	str	r3, [fp, #-48]	; 0xffffffd0
   13e78:	mov	r3, #1
   13e7c:	str	r3, [fp, #-100]	; 0xffffff9c
   13e80:	ldr	r3, [fp, #-108]	; 0xffffff94
   13e84:	cmp	r6, r3
   13e88:	ldrcc	r3, [fp, #8]
   13e8c:	strcc	r3, [r6, #24]
   13e90:	ldr	r3, [fp, #-108]	; 0xffffff94
   13e94:	cmp	r6, r3
   13e98:	bcs	13f1c <argp_parse@@Base+0x364>
   13e9c:	cmp	r4, #7
   13ea0:	cmpne	r4, #0
   13ea4:	beq	13eb4 <argp_parse@@Base+0x2fc>
   13ea8:	mov	r0, r4
   13eac:	sub	sp, fp, #32
   13eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13eb4:	ldr	r3, [r6, #16]
   13eb8:	cmp	r3, #0
   13ebc:	ldrne	r3, [r3, #28]
   13ec0:	ldrne	r2, [r6, #20]
   13ec4:	ldrne	r3, [r3, r2, lsl #2]
   13ec8:	strne	r3, [r6, #24]
   13ecc:	ldr	r3, [r6]
   13ed0:	cmp	r3, #0
   13ed4:	bne	13efc <argp_parse@@Base+0x344>
   13ed8:	ldr	r3, [r6, #4]
   13edc:	ldr	r3, [r3, #16]
   13ee0:	cmp	r3, #0
   13ee4:	beq	13efc <argp_parse@@Base+0x344>
   13ee8:	ldr	r3, [r3]
   13eec:	cmp	r3, #0
   13ef0:	ldrne	r3, [r6, #28]
   13ef4:	ldrne	r2, [r6, #24]
   13ef8:	strne	r2, [r3]
   13efc:	mov	r0, r6
   13f00:	mov	r3, r9
   13f04:	mov	r2, sl
   13f08:	mov	r1, r7
   13f0c:	bl	13680 <putc_unlocked@plt+0x1b7c>
   13f10:	add	r6, r6, #36	; 0x24
   13f14:	mov	r4, r0
   13f18:	b	13e90 <argp_parse@@Base+0x2d8>
   13f1c:	cmp	r4, #7
   13f20:	beq	13f2c <argp_parse@@Base+0x374>
   13f24:	cmp	r4, #0
   13f28:	bne	13ea8 <argp_parse@@Base+0x2f0>
   13f2c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13f30:	tst	r3, #2
   13f34:	moveq	r3, #1
   13f38:	streq	r3, [fp, #-144]	; 0xffffff70
   13f3c:	beq	13f64 <argp_parse@@Base+0x3ac>
   13f40:	tst	r3, #1
   13f44:	mov	r2, #0
   13f48:	ldrne	r3, [fp, #-88]	; 0xffffffa8
   13f4c:	str	r2, [fp, #-144]	; 0xffffff70
   13f50:	subne	r3, r3, #4
   13f54:	strne	r3, [fp, #-88]	; 0xffffffa8
   13f58:	ldrne	r3, [fp, #-92]	; 0xffffffa4
   13f5c:	addne	r3, r3, #1
   13f60:	strne	r3, [fp, #-92]	; 0xffffffa4
   13f64:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13f68:	cmp	r8, r3
   13f6c:	bne	13f90 <argp_parse@@Base+0x3d8>
   13f70:	ldr	r0, [r8]
   13f74:	cmp	r0, #0
   13f78:	beq	13f90 <argp_parse@@Base+0x3d8>
   13f7c:	bl	145c4 <argp_parse@@Base+0xa0c>
   13f80:	str	r0, [fp, #-56]	; 0xffffffc8
   13f84:	add	r8, r5, #64	; 0x40
   13f88:	ldr	r9, [pc, #1392]	; 14500 <argp_parse@@Base+0x948>
   13f8c:	b	14154 <argp_parse@@Base+0x59c>
   13f90:	ldr	r3, [pc, #1352]	; 144e0 <argp_parse@@Base+0x928>
   13f94:	ldr	r3, [r3]
   13f98:	str	r3, [fp, #-56]	; 0xffffffc8
   13f9c:	b	13f84 <argp_parse@@Base+0x3cc>
   13fa0:	bl	146cc <argp_parse@@Base+0xb14>
   13fa4:	b	141c0 <argp_parse@@Base+0x608>
   13fa8:	cmp	r0, #63	; 0x3f
   13fac:	bne	14470 <argp_parse@@Base+0x8b8>
   13fb0:	ldr	r3, [fp, #-140]	; 0xffffff74
   13fb4:	cmn	r3, #1
   13fb8:	bne	14414 <argp_parse@@Base+0x85c>
   13fbc:	asrs	r3, r6, #24
   13fc0:	bne	1427c <argp_parse@@Base+0x6c4>
   13fc4:	mov	r1, r6
   13fc8:	ldr	r0, [fp, #-156]	; 0xffffff64
   13fcc:	bl	1190c <strchr@plt>
   13fd0:	subs	r2, r0, #0
   13fd4:	beq	14010 <argp_parse@@Base+0x458>
   13fd8:	ldr	r0, [fp, #-112]	; 0xffffff90
   13fdc:	ldr	r3, [fp, #-108]	; 0xffffff94
   13fe0:	cmp	r0, r3
   13fe4:	bcs	14010 <argp_parse@@Base+0x458>
   13fe8:	ldr	r1, [r0, #8]
   13fec:	cmp	r2, r1
   13ff0:	bcs	14274 <argp_parse@@Base+0x6bc>
   13ff4:	ldr	r3, [fp, #-136]	; 0xffffff78
   13ff8:	mov	r2, r6
   13ffc:	mov	r1, r8
   14000:	bl	13680 <putc_unlocked@plt+0x1b7c>
   14004:	cmp	r0, #7
   14008:	mov	r4, r0
   1400c:	bne	14308 <argp_parse@@Base+0x750>
   14010:	ldr	r3, [pc, #1260]	; 14504 <argp_parse@@Base+0x94c>
   14014:	ldr	r1, [pc, #1260]	; 14508 <argp_parse@@Base+0x950>
   14018:	mov	r2, r6
   1401c:	add	r0, r5, #64	; 0x40
   14020:	bl	1785c <argp_error@@Base>
   14024:	sub	r7, r6, #1
   14028:	mov	r4, #7
   1402c:	clz	r7, r7
   14030:	lsr	r7, r7, #5
   14034:	cmp	r4, #7
   14038:	movne	r7, #0
   1403c:	andeq	r7, r7, #1
   14040:	cmp	r7, #0
   14044:	beq	14388 <argp_parse@@Base+0x7d0>
   14048:	ldr	r3, [fp, #-84]	; 0xffffffac
   1404c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   14050:	cmp	r3, r2
   14054:	bne	143e0 <argp_parse@@Base+0x828>
   14058:	mov	r4, #0
   1405c:	ldr	r7, [fp, #-112]	; 0xffffff90
   14060:	ldr	sl, [pc, #1188]	; 1450c <argp_parse@@Base+0x954>
   14064:	add	r8, r5, #64	; 0x40
   14068:	mov	r9, r4
   1406c:	ldr	r6, [fp, #-108]	; 0xffffff94
   14070:	cmp	r7, r6
   14074:	bcc	14314 <argp_parse@@Base+0x75c>
   14078:	ldr	r9, [pc, #1168]	; 14510 <argp_parse@@Base+0x958>
   1407c:	sub	r6, r6, #36	; 0x24
   14080:	add	r7, r5, #64	; 0x40
   14084:	mov	r8, #0
   14088:	ldr	r3, [fp, #-112]	; 0xffffff90
   1408c:	cmp	r6, r3
   14090:	bcc	1436c <argp_parse@@Base+0x7b4>
   14094:	cmp	r4, #7
   14098:	cmpne	r4, #0
   1409c:	beq	1434c <argp_parse@@Base+0x794>
   140a0:	ldr	r3, [fp, #4]
   140a4:	cmp	r3, #0
   140a8:	beq	14388 <argp_parse@@Base+0x7d0>
   140ac:	ldr	r2, [fp, #4]
   140b0:	ldr	r3, [fp, #-84]	; 0xffffffac
   140b4:	str	r3, [r2]
   140b8:	b	14380 <argp_parse@@Base+0x7c8>
   140bc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   140c0:	tst	r2, #4
   140c4:	bne	14048 <argp_parse@@Base+0x490>
   140c8:	add	r2, r3, #1
   140cc:	str	r2, [fp, #-84]	; 0xffffffac
   140d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   140d4:	ldr	r3, [r2, r3, lsl #2]
   140d8:	str	r3, [fp, #-136]	; 0xffffff78
   140dc:	ldr	r3, [fp, #-136]	; 0xffffff78
   140e0:	ldr	r7, [fp, #-84]	; 0xffffffac
   140e4:	str	r3, [fp, #-232]	; 0xffffff18
   140e8:	ldr	r6, [fp, #-112]	; 0xffffff90
   140ec:	mov	r3, #0
   140f0:	mov	r4, #7
   140f4:	mov	sl, r3
   140f8:	sub	r7, r7, #1
   140fc:	str	r7, [fp, #-84]	; 0xffffffac
   14100:	ldr	r2, [fp, #-108]	; 0xffffff94
   14104:	cmp	r6, r2
   14108:	movcs	r2, #0
   1410c:	movcc	r2, #1
   14110:	cmp	r4, #7
   14114:	movne	r2, #0
   14118:	cmp	r2, #0
   1411c:	bne	14214 <argp_parse@@Base+0x65c>
   14120:	cmp	r4, #0
   14124:	bne	142f8 <argp_parse@@Base+0x740>
   14128:	cmp	r3, r9
   1412c:	ldreq	r3, [fp, #-92]	; 0xffffffa4
   14130:	streq	r3, [fp, #-84]	; 0xffffffac
   14134:	ldr	r3, [fp, #-84]	; 0xffffffac
   14138:	cmp	r7, r3
   1413c:	sublt	r7, r3, r7
   14140:	ldrlt	r3, [r6, #-24]	; 0xffffffe8
   14144:	movge	r3, #1
   14148:	addlt	r7, r3, r7
   1414c:	strlt	r7, [r6, #-24]	; 0xffffffe8
   14150:	strge	r3, [fp, #-100]	; 0xffffff9c
   14154:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14158:	ldr	r3, [fp, #-84]	; 0xffffffac
   1415c:	cmp	r2, #0
   14160:	beq	14170 <argp_parse@@Base+0x5b8>
   14164:	cmp	r2, r3
   14168:	movgt	r2, #0
   1416c:	strgt	r2, [fp, #-72]	; 0xffffffb8
   14170:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14174:	cmp	r2, #0
   14178:	beq	14200 <argp_parse@@Base+0x648>
   1417c:	ldr	r7, [fp, #-72]	; 0xffffffb8
   14180:	cmp	r7, #0
   14184:	bne	14200 <argp_parse@@Base+0x648>
   14188:	str	r3, [fp, #-148]	; 0xffffff6c
   1418c:	mvn	r3, #0
   14190:	str	r3, [fp, #-140]	; 0xffffff74
   14194:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14198:	str	r7, [sp]
   1419c:	tst	r3, #64	; 0x40
   141a0:	add	r3, r5, #12
   141a4:	str	r3, [sp, #4]
   141a8:	ldr	r2, [fp, #-156]	; 0xffffff64
   141ac:	ldr	r3, [fp, #-152]	; 0xffffff68
   141b0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   141b4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   141b8:	beq	13fa0 <argp_parse@@Base+0x3e8>
   141bc:	bl	14718 <argp_parse@@Base+0xb60>
   141c0:	ldr	r4, [fp, #-148]	; 0xffffff6c
   141c4:	cmn	r0, #1
   141c8:	mov	r6, r0
   141cc:	str	r4, [fp, #-84]	; 0xffffffac
   141d0:	bne	13fa8 <argp_parse@@Base+0x3f0>
   141d4:	mov	r3, #0
   141d8:	cmp	r4, #1
   141dc:	str	r3, [fp, #-100]	; 0xffffff9c
   141e0:	ble	14200 <argp_parse@@Base+0x648>
   141e4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   141e8:	sub	r3, r4, #-1073741823	; 0xc0000001
   141ec:	ldr	r1, [pc, #800]	; 14514 <argp_parse@@Base+0x95c>
   141f0:	ldr	r0, [r2, r3, lsl #2]
   141f4:	bl	116b4 <strcmp@plt>
   141f8:	cmp	r0, #0
   141fc:	streq	r4, [fp, #-72]	; 0xffffffb8
   14200:	ldr	r3, [fp, #-84]	; 0xffffffac
   14204:	ldr	r2, [fp, #-92]	; 0xffffffa4
   14208:	cmp	r3, r2
   1420c:	bge	14048 <argp_parse@@Base+0x490>
   14210:	b	140bc <argp_parse@@Base+0x504>
   14214:	ldr	r3, [fp, #-84]	; 0xffffffac
   14218:	mov	r2, sl
   1421c:	add	r3, r3, #1
   14220:	str	r3, [fp, #-84]	; 0xffffffac
   14224:	mov	r1, r8
   14228:	ldr	r3, [fp, #-232]	; 0xffffff18
   1422c:	mov	r0, r6
   14230:	bl	13680 <putc_unlocked@plt+0x1b7c>
   14234:	cmp	r0, #7
   14238:	mov	r4, r0
   1423c:	movne	r3, sl
   14240:	bne	1426c <argp_parse@@Base+0x6b4>
   14244:	ldr	r3, [fp, #-84]	; 0xffffffac
   14248:	mov	r2, r9
   1424c:	sub	r3, r3, #1
   14250:	str	r3, [fp, #-84]	; 0xffffffac
   14254:	mov	r1, r8
   14258:	mov	r3, sl
   1425c:	mov	r0, r6
   14260:	bl	13680 <putc_unlocked@plt+0x1b7c>
   14264:	mov	r3, r9
   14268:	mov	r4, r0
   1426c:	add	r6, r6, #36	; 0x24
   14270:	b	14100 <argp_parse@@Base+0x548>
   14274:	add	r0, r0, #36	; 0x24
   14278:	b	13fe0 <argp_parse@@Base+0x428>
   1427c:	mov	r0, #36	; 0x24
   14280:	ands	r1, r6, #8388608	; 0x800000
   14284:	mul	r0, r0, r3
   14288:	ldr	ip, [fp, #-112]	; 0xffffff90
   1428c:	movne	r1, #-16777216	; 0xff000000
   14290:	bic	r2, r6, #-16777216	; 0xff000000
   14294:	sub	r0, r0, #36	; 0x24
   14298:	orr	r2, r2, r1
   1429c:	ldr	r3, [fp, #-136]	; 0xffffff78
   142a0:	mov	r1, r8
   142a4:	add	r0, ip, r0
   142a8:	bl	13680 <putc_unlocked@plt+0x1b7c>
   142ac:	cmp	r0, #7
   142b0:	mov	r4, r0
   142b4:	bne	14308 <argp_parse@@Base+0x750>
   142b8:	ldr	r3, [fp, #-152]	; 0xffffff68
   142bc:	b	142d0 <argp_parse@@Base+0x718>
   142c0:	ldr	r2, [r3]
   142c4:	cmp	r2, #0
   142c8:	beq	142dc <argp_parse@@Base+0x724>
   142cc:	add	r3, r3, #16
   142d0:	ldr	r2, [r3, #12]
   142d4:	cmp	r2, r6
   142d8:	bne	142c0 <argp_parse@@Base+0x708>
   142dc:	ldr	r2, [r3]
   142e0:	ldr	r1, [pc, #560]	; 14518 <argp_parse@@Base+0x960>
   142e4:	cmp	r2, #0
   142e8:	moveq	r2, r1
   142ec:	ldr	r3, [pc, #528]	; 14504 <argp_parse@@Base+0x94c>
   142f0:	ldr	r1, [pc, #548]	; 1451c <argp_parse@@Base+0x964>
   142f4:	b	1401c <argp_parse@@Base+0x464>
   142f8:	cmp	r4, #7
   142fc:	bne	14390 <argp_parse@@Base+0x7d8>
   14300:	mov	r6, #1
   14304:	b	14024 <argp_parse@@Base+0x46c>
   14308:	cmp	r4, #0
   1430c:	beq	14154 <argp_parse@@Base+0x59c>
   14310:	b	14034 <argp_parse@@Base+0x47c>
   14314:	cmp	r4, #7
   14318:	cmpne	r4, #0
   1431c:	bne	14078 <argp_parse@@Base+0x4c0>
   14320:	ldr	r3, [r7, #12]
   14324:	cmp	r3, #0
   14328:	bne	14344 <argp_parse@@Base+0x78c>
   1432c:	mov	r3, r9
   14330:	mov	r2, sl
   14334:	mov	r1, r8
   14338:	mov	r0, r7
   1433c:	bl	13680 <putc_unlocked@plt+0x1b7c>
   14340:	mov	r4, r0
   14344:	add	r7, r7, #36	; 0x24
   14348:	b	1406c <argp_parse@@Base+0x4b4>
   1434c:	mov	r0, r6
   14350:	mov	r3, r8
   14354:	mov	r2, r9
   14358:	mov	r1, r7
   1435c:	bl	13680 <putc_unlocked@plt+0x1b7c>
   14360:	sub	r6, r6, #36	; 0x24
   14364:	mov	r4, r0
   14368:	b	14088 <argp_parse@@Base+0x4d0>
   1436c:	cmp	r4, #7
   14370:	beq	1447c <argp_parse@@Base+0x8c4>
   14374:	ldr	r3, [fp, #4]
   14378:	cmp	r3, #0
   1437c:	bne	140ac <argp_parse@@Base+0x4f4>
   14380:	cmp	r4, #0
   14384:	beq	1448c <argp_parse@@Base+0x8d4>
   14388:	cmp	r4, #7
   1438c:	beq	14414 <argp_parse@@Base+0x85c>
   14390:	ldr	r6, [fp, #-112]	; 0xffffff90
   14394:	ldr	r9, [pc, #388]	; 14520 <argp_parse@@Base+0x968>
   14398:	add	r7, r5, #64	; 0x40
   1439c:	mov	r8, #0
   143a0:	ldr	r3, [fp, #-108]	; 0xffffff94
   143a4:	cmp	r6, r3
   143a8:	bcc	1442c <argp_parse@@Base+0x874>
   143ac:	ldr	r6, [fp, #-108]	; 0xffffff94
   143b0:	ldr	r8, [pc, #364]	; 14524 <argp_parse@@Base+0x96c>
   143b4:	sub	r6, r6, #36	; 0x24
   143b8:	add	r5, r5, #64	; 0x40
   143bc:	mov	r7, #0
   143c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   143c4:	cmp	r6, r3
   143c8:	bcs	14454 <argp_parse@@Base+0x89c>
   143cc:	cmp	r4, #7
   143d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   143d4:	moveq	r4, #22
   143d8:	bl	14654 <argp_parse@@Base+0xa9c>
   143dc:	b	13ea8 <argp_parse@@Base+0x2f0>
   143e0:	ldr	r2, [fp, #4]
   143e4:	cmp	r2, #0
   143e8:	strne	r3, [r2]
   143ec:	bne	1448c <argp_parse@@Base+0x8d4>
   143f0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   143f4:	tst	r3, #2
   143f8:	bne	14414 <argp_parse@@Base+0x85c>
   143fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14400:	cmp	r0, #0
   14404:	beq	14414 <argp_parse@@Base+0x85c>
   14408:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1440c:	ldr	r1, [pc, #276]	; 14528 <argp_parse@@Base+0x970>
   14410:	bl	11918 <fprintf@plt>
   14414:	mov	r2, #260	; 0x104
   14418:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1441c:	add	r0, r5, #64	; 0x40
   14420:	bl	177bc <argp_state_help@@Base>
   14424:	mov	r4, #7
   14428:	b	14390 <argp_parse@@Base+0x7d8>
   1442c:	mov	r0, r6
   14430:	mov	r3, r8
   14434:	mov	r2, r9
   14438:	mov	r1, r7
   1443c:	bl	13680 <putc_unlocked@plt+0x1b7c>
   14440:	add	r6, r6, #36	; 0x24
   14444:	b	143a0 <argp_parse@@Base+0x7e8>
   14448:	cmp	r4, #7
   1444c:	moveq	r4, #0
   14450:	b	143ac <argp_parse@@Base+0x7f4>
   14454:	mov	r0, r6
   14458:	mov	r3, r7
   1445c:	mov	r2, r8
   14460:	mov	r1, r5
   14464:	bl	13680 <putc_unlocked@plt+0x1b7c>
   14468:	sub	r6, r6, #36	; 0x24
   1446c:	b	143c0 <argp_parse@@Base+0x808>
   14470:	cmp	r0, #1
   14474:	bne	13fbc <argp_parse@@Base+0x404>
   14478:	b	140dc <argp_parse@@Base+0x524>
   1447c:	ldr	r3, [fp, #4]
   14480:	cmp	r3, #0
   14484:	movne	r4, #0
   14488:	bne	140ac <argp_parse@@Base+0x4f4>
   1448c:	ldr	r6, [fp, #-108]	; 0xffffff94
   14490:	mov	r4, #0
   14494:	ldr	r9, [pc, #144]	; 1452c <argp_parse@@Base+0x974>
   14498:	sub	r6, r6, #36	; 0x24
   1449c:	add	r7, r5, #64	; 0x40
   144a0:	mov	r8, r4
   144a4:	ldr	r3, [fp, #-112]	; 0xffffff90
   144a8:	cmp	r6, r3
   144ac:	bcc	14448 <argp_parse@@Base+0x890>
   144b0:	cmp	r4, #7
   144b4:	cmpne	r4, #0
   144b8:	bne	143ac <argp_parse@@Base+0x7f4>
   144bc:	mov	r0, r6
   144c0:	mov	r3, r8
   144c4:	mov	r2, r9
   144c8:	mov	r1, r7
   144cc:	bl	13680 <putc_unlocked@plt+0x1b7c>
   144d0:	sub	r6, r6, #36	; 0x24
   144d4:	mov	r4, r0
   144d8:	b	144a4 <argp_parse@@Base+0x8ec>
   144dc:	andeq	sl, r2, r4, lsl #4
   144e0:	andeq	sl, r2, r0, lsl #4
   144e4:	andeq	r9, r1, ip, ror #6
   144e8:	ldrdeq	sl, [r2], -ip
   144ec:	andeq	sl, r2, ip, lsr r2
   144f0:	andeq	r9, r1, r8, lsl #7
   144f4:	andeq	sl, r2, r8, lsl #4
   144f8:	tsteq	r0, r3
   144fc:	andeq	sl, r2, r0, lsr #4
   14500:	tsteq	r0, r6
   14504:	andeq	r9, r1, r4, lsr #7
   14508:			; <UNDEFINED> instruction: 0x000194b3
   1450c:	tsteq	r0, r2
   14510:	tsteq	r0, r1
   14514:			; <UNDEFINED> instruction: 0x000194b0
   14518:	andeq	r9, r1, ip, lsr #9
   1451c:			; <UNDEFINED> instruction: 0x000194bb
   14520:	tsteq	r0, r5
   14524:	tsteq	r0, r7
   14528:	andeq	r9, r1, r4, asr #9
   1452c:	tsteq	r0, r4
   14530:	cmp	r1, #0
   14534:	ldrne	r2, [r1, #52]	; 0x34
   14538:	ldrne	r3, [r2, #48]	; 0x30
   1453c:	ldrne	r2, [r2, #52]	; 0x34
   14540:	bne	14550 <argp_parse@@Base+0x998>
   14544:	mov	r0, #0
   14548:	bx	lr
   1454c:	add	r3, r3, #36	; 0x24
   14550:	cmp	r3, r2
   14554:	bcs	14544 <argp_parse@@Base+0x98c>
   14558:	ldr	r1, [r3, #4]
   1455c:	cmp	r1, r0
   14560:	bne	1454c <argp_parse@@Base+0x994>
   14564:	ldr	r0, [r3, #24]
   14568:	bx	lr
   1456c:	push	{r0, r1, r2, lr}
   14570:	ldr	r1, [pc, #28]	; 14594 <argp_parse@@Base+0x9dc>
   14574:	ldr	r2, [pc, #28]	; 14598 <argp_parse@@Base+0x9e0>
   14578:	ldr	r3, [r1, #4]
   1457c:	str	r3, [sp]
   14580:	ldr	r3, [pc, #20]	; 1459c <argp_parse@@Base+0x9e4>
   14584:	ldr	r1, [r1]
   14588:	bl	14afc <argp_parse@@Base+0xf44>
   1458c:	add	sp, sp, #12
   14590:	pop	{pc}		; (ldr pc, [sp], #4)
   14594:	andeq	sl, r2, r0, asr #4
   14598:	muleq	r1, r4, r5
   1459c:	andeq	r9, r1, r7, lsl #11
   145a0:	ldr	r3, [pc, #16]	; 145b8 <argp_parse@@Base+0xa00>
   145a4:	ldr	r2, [pc, #16]	; 145bc <argp_parse@@Base+0xa04>
   145a8:	str	r2, [r3]
   145ac:	ldr	r3, [pc, #12]	; 145c0 <argp_parse@@Base+0xa08>
   145b0:	stm	r3, {r0, r1}
   145b4:	bx	lr
   145b8:	andeq	sl, r2, ip, lsr r2
   145bc:	andeq	r4, r1, ip, ror #10
   145c0:	andeq	sl, r2, r0, asr #4
   145c4:	mov	r2, r0
   145c8:	push	{r4, lr}
   145cc:	mov	r0, r2
   145d0:	ldrb	r3, [r2]
   145d4:	add	r1, r2, #1
   145d8:	cmp	r3, #47	; 0x2f
   145dc:	beq	14600 <argp_parse@@Base+0xa48>
   145e0:	mov	r3, #0
   145e4:	mov	lr, #1
   145e8:	mov	r4, r3
   145ec:	mov	ip, r2
   145f0:	ldrb	r1, [r2], #1
   145f4:	cmp	r1, #0
   145f8:	bne	14608 <argp_parse@@Base+0xa50>
   145fc:	pop	{r4, pc}
   14600:	mov	r2, r1
   14604:	b	145cc <argp_parse@@Base+0xa14>
   14608:	cmp	r1, #47	; 0x2f
   1460c:	moveq	r3, lr
   14610:	beq	145ec <argp_parse@@Base+0xa34>
   14614:	cmp	r3, #0
   14618:	movne	r0, ip
   1461c:	movne	r3, r4
   14620:	b	145ec <argp_parse@@Base+0xa34>
   14624:	push	{r4, lr}
   14628:	mov	r4, r0
   1462c:	bl	11900 <strlen@plt>
   14630:	cmp	r0, #1
   14634:	popls	{r4, pc}
   14638:	sub	r3, r0, #1
   1463c:	ldrb	r2, [r4, r3]
   14640:	cmp	r2, #47	; 0x2f
   14644:	beq	1464c <argp_parse@@Base+0xa94>
   14648:	pop	{r4, pc}
   1464c:	mov	r0, r3
   14650:	b	14630 <argp_parse@@Base+0xa78>
   14654:	push	{r0, r1, r2, r4, r5, lr}
   14658:	mov	r5, r0
   1465c:	bl	1193c <__errno_location@plt>
   14660:	ldr	r3, [r0]
   14664:	mov	r4, r0
   14668:	str	r3, [sp]
   1466c:	str	r3, [sp, #4]
   14670:	mov	r3, #0
   14674:	str	r3, [r0]
   14678:	mov	r0, r5
   1467c:	bl	11750 <free@plt>
   14680:	ldr	r3, [r4]
   14684:	add	r2, sp, #8
   14688:	cmp	r3, #0
   1468c:	moveq	r3, #4
   14690:	movne	r3, #0
   14694:	add	r3, r2, r3
   14698:	ldr	r3, [r3, #-8]
   1469c:	str	r3, [r4]
   146a0:	add	sp, sp, #12
   146a4:	pop	{r4, r5, pc}
   146a8:	push	{r0, r1, r2, r3, r4, lr}
   146ac:	mov	ip, #0
   146b0:	str	ip, [sp, #8]
   146b4:	str	ip, [sp, #4]
   146b8:	ldr	ip, [sp, #24]
   146bc:	str	ip, [sp]
   146c0:	bl	18340 <argp_error@@Base+0xae4>
   146c4:	add	sp, sp, #20
   146c8:	pop	{pc}		; (ldr pc, [sp], #4)
   146cc:	push	{r0, r1, r2, r3, r4, lr}
   146d0:	mov	ip, #0
   146d4:	ldr	lr, [sp, #28]
   146d8:	str	ip, [sp, #12]
   146dc:	stmib	sp, {ip, lr}
   146e0:	ldr	ip, [sp, #24]
   146e4:	str	ip, [sp]
   146e8:	bl	17e48 <argp_error@@Base+0x5ec>
   146ec:	add	sp, sp, #20
   146f0:	pop	{pc}		; (ldr pc, [sp], #4)
   146f4:	push	{r0, r1, r2, r3, r4, lr}
   146f8:	mov	ip, #1
   146fc:	mov	lr, #0
   14700:	stmib	sp, {ip, lr}
   14704:	ldr	ip, [sp, #24]
   14708:	str	ip, [sp]
   1470c:	bl	18340 <argp_error@@Base+0xae4>
   14710:	add	sp, sp, #20
   14714:	pop	{pc}		; (ldr pc, [sp], #4)
   14718:	push	{r0, r1, r2, r3, r4, lr}
   1471c:	mov	ip, #0
   14720:	str	ip, [sp, #12]
   14724:	ldr	ip, [sp, #28]
   14728:	str	ip, [sp, #8]
   1472c:	mov	ip, #1
   14730:	str	ip, [sp, #4]
   14734:	ldr	ip, [sp, #24]
   14738:	str	ip, [sp]
   1473c:	bl	17e48 <argp_error@@Base+0x5ec>
   14740:	add	sp, sp, #20
   14744:	pop	{pc}		; (ldr pc, [sp], #4)
   14748:	push	{r1, r2, r3}
   1474c:	push	{r0, r1, lr}
   14750:	add	r3, sp, #16
   14754:	ldr	r2, [sp, #16]
   14758:	ldr	r1, [sp, #12]
   1475c:	str	r3, [sp, #4]
   14760:	bl	1184c <ioctl@plt>
   14764:	add	sp, sp, #8
   14768:	pop	{lr}		; (ldr lr, [sp], #4)
   1476c:	add	sp, sp, #12
   14770:	bx	lr
   14774:	push	{r4, r5, r6, lr}
   14778:	subs	r5, r0, #0
   1477c:	bne	14794 <argp_parse@@Base+0xbdc>
   14780:	ldr	r3, [pc, #124]	; 14804 <argp_parse@@Base+0xc4c>
   14784:	ldr	r0, [pc, #124]	; 14808 <argp_parse@@Base+0xc50>
   14788:	ldr	r1, [r3]
   1478c:	bl	11aa4 <fputs@plt>
   14790:	bl	11abc <abort@plt>
   14794:	mov	r1, #47	; 0x2f
   14798:	bl	119cc <strrchr@plt>
   1479c:	cmp	r0, #0
   147a0:	addne	r4, r0, #1
   147a4:	moveq	r4, r5
   147a8:	sub	r3, r4, r5
   147ac:	cmp	r3, #6
   147b0:	ble	147f0 <argp_parse@@Base+0xc38>
   147b4:	mov	r2, #7
   147b8:	ldr	r1, [pc, #76]	; 1480c <argp_parse@@Base+0xc54>
   147bc:	sub	r0, r4, #7
   147c0:	bl	11ab0 <strncmp@plt>
   147c4:	cmp	r0, #0
   147c8:	bne	147f0 <argp_parse@@Base+0xc38>
   147cc:	mov	r2, #3
   147d0:	ldr	r1, [pc, #56]	; 14810 <argp_parse@@Base+0xc58>
   147d4:	mov	r0, r4
   147d8:	bl	11ab0 <strncmp@plt>
   147dc:	cmp	r0, #0
   147e0:	movne	r5, r4
   147e4:	ldreq	r3, [pc, #40]	; 14814 <argp_parse@@Base+0xc5c>
   147e8:	addeq	r5, r4, #3
   147ec:	streq	r5, [r3]
   147f0:	ldr	r3, [pc, #32]	; 14818 <argp_parse@@Base+0xc60>
   147f4:	str	r5, [r3]
   147f8:	ldr	r3, [pc, #28]	; 1481c <argp_parse@@Base+0xc64>
   147fc:	str	r5, [r3]
   14800:	pop	{r4, r5, r6, pc}
   14804:	andeq	sl, r2, r8, lsl #4
   14808:	andeq	r9, r1, r2, lsr #11
   1480c:	ldrdeq	r9, [r1], -sl
   14810:	andeq	r9, r1, r2, ror #11
   14814:	andeq	sl, r2, r0, lsl #4
   14818:	andeq	sl, r2, r8, asr #4
   1481c:	andeq	sl, r2, r4, lsl #4
   14820:	push	{r4, r5, r6, lr}
   14824:	sub	sp, sp, #32
   14828:	cmp	r1, #0
   1482c:	mov	r5, r0
   14830:	ldr	r4, [sp, #48]	; 0x30
   14834:	ldr	r6, [sp, #52]	; 0x34
   14838:	beq	148c0 <argp_parse@@Base+0xd08>
   1483c:	str	r3, [sp]
   14840:	mov	r3, r2
   14844:	mov	r2, r1
   14848:	ldr	r1, [pc, #616]	; 14ab8 <argp_parse@@Base+0xf00>
   1484c:	bl	11918 <fprintf@plt>
   14850:	ldr	r3, [pc, #612]	; 14abc <argp_parse@@Base+0xf04>
   14854:	ldr	r2, [pc, #612]	; 14ac0 <argp_parse@@Base+0xf08>
   14858:	ldr	r1, [pc, #612]	; 14ac4 <argp_parse@@Base+0xf0c>
   1485c:	mov	r0, r5
   14860:	bl	11918 <fprintf@plt>
   14864:	mov	r1, r5
   14868:	mov	r0, #10
   1486c:	bl	119f0 <fputc@plt>
   14870:	ldr	r1, [pc, #592]	; 14ac8 <argp_parse@@Base+0xf10>
   14874:	ldr	r2, [pc, #592]	; 14acc <argp_parse@@Base+0xf14>
   14878:	mov	r0, r5
   1487c:	bl	11918 <fprintf@plt>
   14880:	mov	r1, r5
   14884:	mov	r0, #10
   14888:	bl	119f0 <fputc@plt>
   1488c:	cmp	r6, #9
   14890:	ldrls	pc, [pc, r6, lsl #2]
   14894:	b	14a74 <argp_parse@@Base+0xebc>
   14898:	andeq	r4, r1, ip, ror #18
   1489c:	andeq	r4, r1, ip, asr #17
   148a0:	andeq	r4, r1, r4, ror #17
   148a4:	strdeq	r4, [r1], -ip
   148a8:	andeq	r4, r1, ip, lsl r9
   148ac:	andeq	r4, r1, r4, asr #18
   148b0:	andeq	r4, r1, r4, ror r9
   148b4:	andeq	r4, r1, r8, lsr #19
   148b8:	andeq	r4, r1, r4, ror #19
   148bc:	andeq	r4, r1, r8, lsr #20
   148c0:	ldr	r1, [pc, #520]	; 14ad0 <argp_parse@@Base+0xf18>
   148c4:	bl	11918 <fprintf@plt>
   148c8:	b	14850 <argp_parse@@Base+0xc98>
   148cc:	ldr	r2, [r4]
   148d0:	ldr	r1, [pc, #508]	; 14ad4 <argp_parse@@Base+0xf1c>
   148d4:	mov	r0, r5
   148d8:	add	sp, sp, #32
   148dc:	pop	{r4, r5, r6, lr}
   148e0:	b	11918 <fprintf@plt>
   148e4:	ldm	r4, {r2, r3}
   148e8:	ldr	r1, [pc, #488]	; 14ad8 <argp_parse@@Base+0xf20>
   148ec:	mov	r0, r5
   148f0:	add	sp, sp, #32
   148f4:	pop	{r4, r5, r6, lr}
   148f8:	b	11918 <fprintf@plt>
   148fc:	ldr	r3, [r4, #8]
   14900:	ldr	r1, [pc, #468]	; 14adc <argp_parse@@Base+0xf24>
   14904:	str	r3, [sp, #48]	; 0x30
   14908:	mov	r0, r5
   1490c:	ldm	r4, {r2, r3}
   14910:	add	sp, sp, #32
   14914:	pop	{r4, r5, r6, lr}
   14918:	b	11918 <fprintf@plt>
   1491c:	ldr	r3, [r4, #12]
   14920:	ldr	r1, [pc, #440]	; 14ae0 <argp_parse@@Base+0xf28>
   14924:	str	r3, [sp, #52]	; 0x34
   14928:	ldr	r3, [r4, #8]
   1492c:	mov	r0, r5
   14930:	str	r3, [sp, #48]	; 0x30
   14934:	ldm	r4, {r2, r3}
   14938:	add	sp, sp, #32
   1493c:	pop	{r4, r5, r6, lr}
   14940:	b	11918 <fprintf@plt>
   14944:	ldr	r3, [r4, #16]
   14948:	ldr	r1, [pc, #404]	; 14ae4 <argp_parse@@Base+0xf2c>
   1494c:	str	r3, [sp, #8]
   14950:	ldr	r3, [r4, #12]
   14954:	mov	r0, r5
   14958:	str	r3, [sp, #4]
   1495c:	ldr	r3, [r4, #8]
   14960:	str	r3, [sp]
   14964:	ldm	r4, {r2, r3}
   14968:	bl	11918 <fprintf@plt>
   1496c:	add	sp, sp, #32
   14970:	pop	{r4, r5, r6, pc}
   14974:	ldr	r3, [r4, #20]
   14978:	ldr	r1, [pc, #360]	; 14ae8 <argp_parse@@Base+0xf30>
   1497c:	str	r3, [sp, #12]
   14980:	ldr	r3, [r4, #16]
   14984:	mov	r0, r5
   14988:	str	r3, [sp, #8]
   1498c:	ldr	r3, [r4, #12]
   14990:	str	r3, [sp, #4]
   14994:	ldr	r3, [r4, #8]
   14998:	str	r3, [sp]
   1499c:	ldm	r4, {r2, r3}
   149a0:	bl	11918 <fprintf@plt>
   149a4:	b	1496c <argp_parse@@Base+0xdb4>
   149a8:	ldr	r3, [r4, #24]
   149ac:	ldr	r1, [pc, #312]	; 14aec <argp_parse@@Base+0xf34>
   149b0:	str	r3, [sp, #16]
   149b4:	ldr	r3, [r4, #20]
   149b8:	mov	r0, r5
   149bc:	str	r3, [sp, #12]
   149c0:	ldr	r3, [r4, #16]
   149c4:	str	r3, [sp, #8]
   149c8:	ldr	r3, [r4, #12]
   149cc:	str	r3, [sp, #4]
   149d0:	ldr	r3, [r4, #8]
   149d4:	str	r3, [sp]
   149d8:	ldm	r4, {r2, r3}
   149dc:	bl	11918 <fprintf@plt>
   149e0:	b	1496c <argp_parse@@Base+0xdb4>
   149e4:	ldr	r3, [r4, #28]
   149e8:	ldr	r1, [pc, #256]	; 14af0 <argp_parse@@Base+0xf38>
   149ec:	str	r3, [sp, #20]
   149f0:	ldr	r3, [r4, #24]
   149f4:	mov	r0, r5
   149f8:	str	r3, [sp, #16]
   149fc:	ldr	r3, [r4, #20]
   14a00:	str	r3, [sp, #12]
   14a04:	ldr	r3, [r4, #16]
   14a08:	str	r3, [sp, #8]
   14a0c:	ldr	r3, [r4, #12]
   14a10:	str	r3, [sp, #4]
   14a14:	ldr	r3, [r4, #8]
   14a18:	str	r3, [sp]
   14a1c:	ldm	r4, {r2, r3}
   14a20:	bl	11918 <fprintf@plt>
   14a24:	b	1496c <argp_parse@@Base+0xdb4>
   14a28:	ldr	r3, [r4, #32]
   14a2c:	ldr	r1, [pc, #192]	; 14af4 <argp_parse@@Base+0xf3c>
   14a30:	str	r3, [sp, #24]
   14a34:	ldr	r3, [r4, #28]
   14a38:	str	r3, [sp, #20]
   14a3c:	ldr	r3, [r4, #24]
   14a40:	str	r3, [sp, #16]
   14a44:	ldr	r3, [r4, #20]
   14a48:	str	r3, [sp, #12]
   14a4c:	ldr	r3, [r4, #16]
   14a50:	str	r3, [sp, #8]
   14a54:	ldr	r3, [r4, #12]
   14a58:	str	r3, [sp, #4]
   14a5c:	ldr	r3, [r4, #8]
   14a60:	str	r3, [sp]
   14a64:	ldm	r4, {r2, r3}
   14a68:	mov	r0, r5
   14a6c:	bl	11918 <fprintf@plt>
   14a70:	b	1496c <argp_parse@@Base+0xdb4>
   14a74:	ldr	r3, [r4, #32]
   14a78:	ldr	r1, [pc, #120]	; 14af8 <argp_parse@@Base+0xf40>
   14a7c:	str	r3, [sp, #24]
   14a80:	ldr	r3, [r4, #28]
   14a84:	str	r3, [sp, #20]
   14a88:	ldr	r3, [r4, #24]
   14a8c:	str	r3, [sp, #16]
   14a90:	ldr	r3, [r4, #20]
   14a94:	str	r3, [sp, #12]
   14a98:	ldr	r3, [r4, #16]
   14a9c:	str	r3, [sp, #8]
   14aa0:	ldr	r3, [r4, #12]
   14aa4:	str	r3, [sp, #4]
   14aa8:	ldr	r3, [r4, #8]
   14aac:	str	r3, [sp]
   14ab0:	ldm	r4, {r2, r3}
   14ab4:	b	14a68 <argp_parse@@Base+0xeb0>
   14ab8:	andeq	r9, r1, r6, ror #11
   14abc:	andeq	r0, r0, r6, ror #15
   14ac0:	strdeq	r9, [r1], -r9	; <UNPREDICTABLE>
   14ac4:	ldrdeq	r9, [r1], -r8
   14ac8:	andeq	r9, r1, pc, lsl r6
   14acc:	strdeq	r9, [r1], -sp
   14ad0:	strdeq	r9, [r1], -r2
   14ad4:	andeq	r9, r1, sl, asr #13
   14ad8:	ldrdeq	r9, [r1], -sl
   14adc:	strdeq	r9, [r1], -r1
   14ae0:	andeq	r9, r1, sp, lsl #14
   14ae4:	andeq	r9, r1, sp, lsr #14
   14ae8:	andeq	r9, r1, r1, asr r7
   14aec:	andeq	r9, r1, r9, ror r7
   14af0:	andeq	r9, r1, r5, lsr #15
   14af4:	ldrdeq	r9, [r1], -r5
   14af8:	andeq	r9, r1, r9, lsl #16
   14afc:	push	{r0, r1, r4, lr}
   14b00:	mov	ip, #0
   14b04:	ldr	lr, [sp, #16]
   14b08:	ldr	r4, [lr, ip, lsl #2]
   14b0c:	cmp	r4, #0
   14b10:	bne	14b28 <argp_parse@@Base+0xf70>
   14b14:	str	ip, [sp, #4]
   14b18:	str	lr, [sp]
   14b1c:	bl	14820 <argp_parse@@Base+0xc68>
   14b20:	add	sp, sp, #8
   14b24:	pop	{r4, pc}
   14b28:	add	ip, ip, #1
   14b2c:	b	14b08 <argp_parse@@Base+0xf50>
   14b30:	push	{r4, r5, lr}
   14b34:	sub	sp, sp, #52	; 0x34
   14b38:	mov	ip, #0
   14b3c:	ldr	r5, [sp, #64]	; 0x40
   14b40:	add	lr, sp, #8
   14b44:	ldr	r4, [r5, ip, lsl #2]
   14b48:	cmp	r4, #0
   14b4c:	str	r4, [lr, ip, lsl #2]
   14b50:	beq	14b60 <argp_parse@@Base+0xfa8>
   14b54:	add	ip, ip, #1
   14b58:	cmp	ip, #10
   14b5c:	bne	14b44 <argp_parse@@Base+0xf8c>
   14b60:	str	ip, [sp, #4]
   14b64:	str	lr, [sp]
   14b68:	bl	14820 <argp_parse@@Base+0xc68>
   14b6c:	add	sp, sp, #52	; 0x34
   14b70:	pop	{r4, r5, pc}
   14b74:	push	{r3}		; (str r3, [sp, #-4]!)
   14b78:	push	{r0, r1, r2, r3, lr}
   14b7c:	add	r3, sp, #24
   14b80:	str	r3, [sp, #12]
   14b84:	str	r3, [sp]
   14b88:	ldr	r3, [sp, #20]
   14b8c:	bl	14b30 <argp_parse@@Base+0xf78>
   14b90:	add	sp, sp, #16
   14b94:	pop	{lr}		; (ldr lr, [sp], #4)
   14b98:	add	sp, sp, #4
   14b9c:	bx	lr
   14ba0:	ldr	r3, [pc, #56]	; 14be0 <argp_parse@@Base+0x1028>
   14ba4:	push	{r4, lr}
   14ba8:	mov	r0, #10
   14bac:	ldr	r1, [r3]
   14bb0:	bl	119f0 <fputc@plt>
   14bb4:	ldr	r1, [pc, #40]	; 14be4 <argp_parse@@Base+0x102c>
   14bb8:	ldr	r0, [pc, #40]	; 14be8 <argp_parse@@Base+0x1030>
   14bbc:	bl	116f0 <printf@plt>
   14bc0:	ldr	r1, [pc, #36]	; 14bec <argp_parse@@Base+0x1034>
   14bc4:	ldr	r2, [pc, #36]	; 14bf0 <argp_parse@@Base+0x1038>
   14bc8:	ldr	r0, [pc, #36]	; 14bf4 <argp_parse@@Base+0x103c>
   14bcc:	bl	116f0 <printf@plt>
   14bd0:	ldr	r1, [pc, #32]	; 14bf8 <argp_parse@@Base+0x1040>
   14bd4:	ldr	r0, [pc, #32]	; 14bfc <argp_parse@@Base+0x1044>
   14bd8:	pop	{r4, lr}
   14bdc:	b	116f0 <printf@plt>
   14be0:	andeq	sl, r2, r0, lsr #4
   14be4:	andeq	r9, r1, r5, lsl r3
   14be8:	andeq	r9, r1, r5, asr #16
   14bec:	muleq	r1, r4, r5
   14bf0:	andeq	r9, r1, r9, asr r8
   14bf4:	andeq	r9, r1, r0, lsl #17
   14bf8:	muleq	r1, r4, r8
   14bfc:			; <UNDEFINED> instruction: 0x000198b1
   14c00:	cmp	r0, #0
   14c04:	mov	r3, #0
   14c08:	moveq	r0, #1
   14c0c:	adds	r3, r3, #0
   14c10:	movne	r3, #1
   14c14:	cmp	r0, #0
   14c18:	blt	14c28 <argp_parse@@Base+0x1070>
   14c1c:	cmp	r3, #0
   14c20:	bne	14c28 <argp_parse@@Base+0x1070>
   14c24:	b	11888 <malloc@plt>
   14c28:	push	{r4, lr}
   14c2c:	bl	1193c <__errno_location@plt>
   14c30:	mov	r3, #12
   14c34:	str	r3, [r0]
   14c38:	mov	r0, #0
   14c3c:	pop	{r4, pc}
   14c40:	cmp	r0, #0
   14c44:	push	{r4, lr}
   14c48:	mov	r4, r1
   14c4c:	bne	14c5c <argp_parse@@Base+0x10a4>
   14c50:	mov	r0, r1
   14c54:	pop	{r4, lr}
   14c58:	b	14c00 <argp_parse@@Base+0x1048>
   14c5c:	cmp	r1, #0
   14c60:	bne	14c70 <argp_parse@@Base+0x10b8>
   14c64:	bl	14654 <argp_parse@@Base+0xa9c>
   14c68:	mov	r0, #0
   14c6c:	pop	{r4, pc}
   14c70:	cmp	r1, #0
   14c74:	blt	14c84 <argp_parse@@Base+0x10cc>
   14c78:	mov	r3, #0
   14c7c:	cmp	r3, r3
   14c80:	beq	14c94 <argp_parse@@Base+0x10dc>
   14c84:	bl	1193c <__errno_location@plt>
   14c88:	mov	r3, #12
   14c8c:	str	r3, [r0]
   14c90:	b	14c68 <argp_parse@@Base+0x10b0>
   14c94:	pop	{r4, lr}
   14c98:	b	117ec <realloc@plt>
   14c9c:	ldr	r2, [r0, #4]
   14ca0:	ldr	r3, [r0]
   14ca4:	cmp	r2, #0
   14ca8:	add	r3, r3, #24
   14cac:	bne	14cb8 <argp_parse@@Base+0x1100>
   14cb0:	mov	r0, r2
   14cb4:	bx	lr
   14cb8:	ldr	r0, [r3, #-24]	; 0xffffffe8
   14cbc:	cmp	r0, #0
   14cc0:	beq	14cd0 <argp_parse@@Base+0x1118>
   14cc4:	ldr	r1, [r3, #-12]
   14cc8:	tst	r1, #2
   14ccc:	bxeq	lr
   14cd0:	sub	r2, r2, #1
   14cd4:	b	14ca4 <argp_parse@@Base+0x10ec>
   14cd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14cdc:	mov	sl, r3
   14ce0:	ldm	r0, {r5, r6, r7}
   14ce4:	mov	r3, #0
   14ce8:	sub	sp, sp, #20
   14cec:	mov	r8, r1
   14cf0:	mov	r9, r2
   14cf4:	mov	r4, r5
   14cf8:	mov	fp, r3
   14cfc:	adds	r2, r6, #0
   14d00:	movne	r2, #1
   14d04:	cmp	r3, #0
   14d08:	movne	r2, #0
   14d0c:	cmp	r2, #0
   14d10:	bne	14d20 <argp_parse@@Base+0x1168>
   14d14:	mov	r0, r3
   14d18:	add	sp, sp, #20
   14d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d20:	ldr	r2, [r4, #12]
   14d24:	ands	r3, r2, #8
   14d28:	str	r2, [sp, #12]
   14d2c:	movne	r3, fp
   14d30:	bne	14d70 <argp_parse@@Base+0x11b8>
   14d34:	ldr	r1, [r4, #4]
   14d38:	sub	r0, r1, #1
   14d3c:	cmp	r0, #254	; 0xfe
   14d40:	str	r1, [sp, #8]
   14d44:	bhi	14d70 <argp_parse@@Base+0x11b8>
   14d48:	str	r3, [sp, #4]
   14d4c:	bl	118dc <__ctype_b_loc@plt>
   14d50:	ldr	r1, [sp, #8]
   14d54:	ldr	r3, [sp, #4]
   14d58:	ldr	r2, [sp, #12]
   14d5c:	ldr	ip, [r0]
   14d60:	lsl	r0, r1, #1
   14d64:	ldrh	r0, [ip, r0]
   14d68:	tst	r0, #16384	; 0x4000
   14d6c:	bne	14d7c <argp_parse@@Base+0x11c4>
   14d70:	add	r4, r4, #24
   14d74:	sub	r6, r6, #1
   14d78:	b	14cfc <argp_parse@@Base+0x1144>
   14d7c:	ldrb	r0, [r7]
   14d80:	cmp	r0, r1
   14d84:	bne	14d70 <argp_parse@@Base+0x11b8>
   14d88:	tst	r2, #4
   14d8c:	moveq	r5, r4
   14d90:	tst	r2, #2
   14d94:	bne	14db0 <argp_parse@@Base+0x11f8>
   14d98:	mov	r3, sl
   14d9c:	mov	r2, r9
   14da0:	mov	r1, r5
   14da4:	mov	r0, r4
   14da8:	blx	r8
   14dac:	mov	r3, r0
   14db0:	add	r7, r7, #1
   14db4:	b	14d70 <argp_parse@@Base+0x11b8>
   14db8:	ldr	r3, [r0, #12]
   14dbc:	ands	r3, r3, #8
   14dc0:	bne	14df8 <argp_parse@@Base+0x1240>
   14dc4:	push	{r4, lr}
   14dc8:	ldr	r4, [r0, #4]
   14dcc:	sub	r2, r4, #1
   14dd0:	cmp	r2, #254	; 0xfe
   14dd4:	bhi	14df0 <argp_parse@@Base+0x1238>
   14dd8:	bl	118dc <__ctype_b_loc@plt>
   14ddc:	lsl	r3, r4, #1
   14de0:	ldr	r2, [r0]
   14de4:	ldrh	r3, [r2, r3]
   14de8:	ands	r3, r3, #16384	; 0x4000
   14dec:	movne	r3, r4
   14df0:	mov	r0, r3
   14df4:	pop	{r4, pc}
   14df8:	mov	r3, #0
   14dfc:	mov	r0, r3
   14e00:	bx	lr
   14e04:	push	{r4, lr}
   14e08:	mov	r4, r0
   14e0c:	bl	118dc <__ctype_b_loc@plt>
   14e10:	ldr	r1, [r0]
   14e14:	ldr	r3, [r4]
   14e18:	ldrb	r0, [r3]
   14e1c:	lsl	r2, r0, #1
   14e20:	ldrh	r2, [r1, r2]
   14e24:	tst	r2, #8192	; 0x2000
   14e28:	bne	14e58 <argp_parse@@Base+0x12a0>
   14e2c:	subs	r0, r0, #45	; 0x2d
   14e30:	movne	r0, #1
   14e34:	ldr	r2, [r4]
   14e38:	ldrb	r3, [r2]
   14e3c:	cmp	r3, #0
   14e40:	popeq	{r4, pc}
   14e44:	lsl	r3, r3, #1
   14e48:	ldrh	r3, [r1, r3]
   14e4c:	tst	r3, #8
   14e50:	beq	14e64 <argp_parse@@Base+0x12ac>
   14e54:	pop	{r4, pc}
   14e58:	add	r3, r3, #1
   14e5c:	str	r3, [r4]
   14e60:	b	14e14 <argp_parse@@Base+0x125c>
   14e64:	add	r2, r2, #1
   14e68:	str	r2, [r4]
   14e6c:	b	14e34 <argp_parse@@Base+0x127c>
   14e70:	push	{r4, r5, r6, lr}
   14e74:	mov	r4, r0
   14e78:	ldr	r0, [r0, #12]
   14e7c:	cmp	r0, #0
   14e80:	bne	14eac <argp_parse@@Base+0x12f4>
   14e84:	ldr	r3, [r4, #4]
   14e88:	cmp	r3, #0
   14e8c:	beq	14ea0 <argp_parse@@Base+0x12e8>
   14e90:	ldr	r0, [r4]
   14e94:	bl	14654 <argp_parse@@Base+0xa9c>
   14e98:	ldr	r0, [r4, #8]
   14e9c:	bl	14654 <argp_parse@@Base+0xa9c>
   14ea0:	mov	r0, r4
   14ea4:	pop	{r4, r5, r6, lr}
   14ea8:	b	14654 <argp_parse@@Base+0xa9c>
   14eac:	ldr	r5, [r0, #24]
   14eb0:	bl	14654 <argp_parse@@Base+0xa9c>
   14eb4:	mov	r0, r5
   14eb8:	b	14e7c <argp_parse@@Base+0x12c4>
   14ebc:	push	{r4, r5, r6, lr}
   14ec0:	ldr	r5, [r0, #16]
   14ec4:	ldr	r0, [r0, #8]
   14ec8:	cmp	r0, #0
   14ecc:	beq	14ee0 <argp_parse@@Base+0x1328>
   14ed0:	mov	r1, #10
   14ed4:	bl	1190c <strchr@plt>
   14ed8:	adds	r0, r0, #0
   14edc:	movne	r0, #1
   14ee0:	cmp	r5, #0
   14ee4:	mov	r4, r0
   14ee8:	addne	r5, r5, #16
   14eec:	bne	14f00 <argp_parse@@Base+0x1348>
   14ef0:	mov	r0, r4
   14ef4:	pop	{r4, r5, r6, pc}
   14ef8:	bl	14ebc <argp_parse@@Base+0x1304>
   14efc:	add	r4, r4, r0
   14f00:	add	r5, r5, #16
   14f04:	ldr	r0, [r5, #-32]	; 0xffffffe0
   14f08:	cmp	r0, #0
   14f0c:	bne	14ef8 <argp_parse@@Base+0x1340>
   14f10:	b	14ef0 <argp_parse@@Base+0x1338>
   14f14:	ldr	r2, [r0, #24]
   14f18:	ldr	r3, [r0, #28]
   14f1c:	push	{r4, r5, r6, r7, r8, lr}
   14f20:	sub	r3, r3, r2
   14f24:	ldr	r2, [r0, #16]
   14f28:	mov	r4, r0
   14f2c:	cmp	r3, r2
   14f30:	mov	r5, r1
   14f34:	bls	14f3c <argp_parse@@Base+0x1384>
   14f38:	bl	1844c <argp_error@@Base+0xbf0>
   14f3c:	ldr	r1, [r4, #20]
   14f40:	mov	r6, #1
   14f44:	cmp	r1, #0
   14f48:	subge	r5, r5, r1
   14f4c:	mov	r7, #32
   14f50:	cmp	r5, #0
   14f54:	bgt	14f5c <argp_parse@@Base+0x13a4>
   14f58:	pop	{r4, r5, r6, r7, r8, pc}
   14f5c:	ldr	r2, [r4, #28]
   14f60:	ldr	r3, [r4, #32]
   14f64:	cmp	r2, r3
   14f68:	bcs	14f84 <argp_parse@@Base+0x13cc>
   14f6c:	ldr	r3, [r4, #28]
   14f70:	add	r2, r3, #1
   14f74:	str	r2, [r4, #28]
   14f78:	strb	r7, [r3]
   14f7c:	sub	r5, r5, #1
   14f80:	b	14f50 <argp_parse@@Base+0x1398>
   14f84:	mov	r1, r6
   14f88:	mov	r0, r4
   14f8c:	bl	1889c <argp_error@@Base+0x1040>
   14f90:	cmp	r0, #0
   14f94:	bne	14f6c <argp_parse@@Base+0x13b4>
   14f98:	b	14f7c <argp_parse@@Base+0x13c4>
   14f9c:	push	{r4, r5, r6, lr}
   14fa0:	subs	r4, r2, #0
   14fa4:	popeq	{r4, r5, r6, pc}
   14fa8:	ldr	r2, [r4, #20]
   14fac:	cmp	r2, #0
   14fb0:	popeq	{r4, r5, r6, pc}
   14fb4:	mov	r6, r1
   14fb8:	mov	r5, r0
   14fbc:	mov	r1, r3
   14fc0:	mov	r0, r4
   14fc4:	bl	14530 <argp_parse@@Base+0x978>
   14fc8:	ldr	r3, [r4, #20]
   14fcc:	mov	r1, r5
   14fd0:	mov	r2, r0
   14fd4:	mov	r0, r6
   14fd8:	pop	{r4, r5, r6, lr}
   14fdc:	bx	r3
   14fe0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14fe4:	mov	r4, r2
   14fe8:	ldr	r3, [r2, #16]
   14fec:	mov	r2, r1
   14ff0:	ldr	r1, [pc, #440]	; 151b0 <argp_parse@@Base+0x15f8>
   14ff4:	mov	r7, r0
   14ff8:	bl	14f9c <argp_parse@@Base+0x13e4>
   14ffc:	subs	r6, r0, #0
   15000:	beq	15154 <argp_parse@@Base+0x159c>
   15004:	ldrb	r3, [r6]
   15008:	cmp	r3, #0
   1500c:	beq	15148 <argp_parse@@Base+0x1590>
   15010:	ldr	r3, [r4, #8]
   15014:	ldr	r3, [r3]
   15018:	cmp	r3, #0
   1501c:	beq	15048 <argp_parse@@Base+0x1490>
   15020:	ldr	r5, [r4, #4]
   15024:	ldr	r2, [r5, #28]
   15028:	ldr	r3, [r5, #32]
   1502c:	cmp	r2, r3
   15030:	bcs	15168 <argp_parse@@Base+0x15b0>
   15034:	ldr	r3, [r5, #28]
   15038:	add	r2, r3, #1
   1503c:	str	r2, [r5, #28]
   15040:	mov	r2, #10
   15044:	strb	r2, [r3]
   15048:	ldr	r8, [pc, #356]	; 151b4 <argp_parse@@Base+0x15fc>
   1504c:	ldr	r0, [r4, #4]
   15050:	ldr	r1, [r8, #24]
   15054:	bl	14f14 <argp_parse@@Base+0x135c>
   15058:	ldr	r9, [r4, #4]
   1505c:	ldr	sl, [r8, #24]
   15060:	ldr	r2, [r9, #24]
   15064:	ldr	r3, [r9, #28]
   15068:	sub	r3, r3, r2
   1506c:	ldr	r2, [r9, #16]
   15070:	cmp	r3, r2
   15074:	bls	15080 <argp_parse@@Base+0x14c8>
   15078:	mov	r0, r9
   1507c:	bl	1844c <argp_error@@Base+0xbf0>
   15080:	ldr	r5, [r4, #4]
   15084:	str	sl, [r9, #4]
   15088:	ldr	r8, [r8, #24]
   1508c:	ldr	r2, [r5, #24]
   15090:	ldr	r3, [r5, #28]
   15094:	sub	r3, r3, r2
   15098:	ldr	r2, [r5, #16]
   1509c:	cmp	r3, r2
   150a0:	bls	150ac <argp_parse@@Base+0x14f4>
   150a4:	mov	r0, r5
   150a8:	bl	1844c <argp_error@@Base+0xbf0>
   150ac:	str	r8, [r5, #12]
   150b0:	mov	r0, r6
   150b4:	bl	11900 <strlen@plt>
   150b8:	subs	r8, r0, #0
   150bc:	beq	150f4 <argp_parse@@Base+0x153c>
   150c0:	ldr	r5, [r4, #4]
   150c4:	ldr	r3, [r5, #28]
   150c8:	ldr	r2, [r5, #32]
   150cc:	add	r3, r3, r8
   150d0:	cmp	r2, r3
   150d4:	bcc	15180 <argp_parse@@Base+0x15c8>
   150d8:	mov	r2, r8
   150dc:	mov	r1, r6
   150e0:	ldr	r0, [r5, #28]
   150e4:	bl	1178c <memcpy@plt>
   150e8:	ldr	r3, [r5, #28]
   150ec:	add	r8, r3, r8
   150f0:	str	r8, [r5, #28]
   150f4:	ldr	r5, [r4, #4]
   150f8:	ldr	r2, [r5, #24]
   150fc:	ldr	r3, [r5, #28]
   15100:	sub	r3, r3, r2
   15104:	ldr	r2, [r5, #16]
   15108:	cmp	r3, r2
   1510c:	bls	15118 <argp_parse@@Base+0x1560>
   15110:	mov	r0, r5
   15114:	bl	1844c <argp_error@@Base+0xbf0>
   15118:	mov	r3, #0
   1511c:	str	r3, [r5, #4]
   15120:	ldr	r5, [r4, #4]
   15124:	ldr	r2, [r5, #28]
   15128:	ldr	r3, [r5, #32]
   1512c:	cmp	r2, r3
   15130:	bcs	15198 <argp_parse@@Base+0x15e0>
   15134:	ldr	r3, [r5, #28]
   15138:	add	r2, r3, #1
   1513c:	str	r2, [r5, #28]
   15140:	mov	r2, #10
   15144:	strb	r2, [r3]
   15148:	ldr	r3, [r4, #8]
   1514c:	mov	r2, #1
   15150:	str	r2, [r3, #4]
   15154:	cmp	r7, r6
   15158:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1515c:	mov	r0, r6
   15160:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   15164:	b	14654 <argp_parse@@Base+0xa9c>
   15168:	mov	r1, #1
   1516c:	mov	r0, r5
   15170:	bl	1889c <argp_error@@Base+0x1040>
   15174:	cmp	r0, #0
   15178:	bne	15034 <argp_parse@@Base+0x147c>
   1517c:	b	15048 <argp_parse@@Base+0x1490>
   15180:	mov	r1, r8
   15184:	mov	r0, r5
   15188:	bl	1889c <argp_error@@Base+0x1040>
   1518c:	cmp	r0, #0
   15190:	bne	150d8 <argp_parse@@Base+0x1520>
   15194:	b	150f4 <argp_parse@@Base+0x153c>
   15198:	mov	r1, #1
   1519c:	mov	r0, r5
   151a0:	bl	1889c <argp_error@@Base+0x1040>
   151a4:	cmp	r0, #0
   151a8:	bne	15134 <argp_parse@@Base+0x157c>
   151ac:	b	15148 <argp_parse@@Base+0x1590>
   151b0:	andeq	r0, r0, #3
   151b4:	andeq	sl, r2, r4, asr #3
   151b8:	ldr	r3, [r1, #12]
   151bc:	push	{r4, r5, r6, r7, r8, lr}
   151c0:	cmp	r3, #0
   151c4:	mov	r7, r0
   151c8:	mov	r4, r1
   151cc:	beq	152e4 <argp_parse@@Base+0x172c>
   151d0:	ldr	r2, [r1, #8]
   151d4:	ldr	r3, [r1]
   151d8:	ldr	r8, [r2]
   151dc:	ldr	r2, [r2, #4]
   151e0:	ldr	r5, [r3, #16]
   151e4:	cmp	r2, #0
   151e8:	cmpne	r8, #0
   151ec:	beq	15228 <argp_parse@@Base+0x1670>
   151f0:	ldr	r2, [r3, #12]
   151f4:	ldr	r3, [r8, #12]
   151f8:	cmp	r2, r3
   151fc:	beq	15228 <argp_parse@@Base+0x1670>
   15200:	ldr	r6, [r1, #4]
   15204:	ldr	r2, [r6, #28]
   15208:	ldr	r3, [r6, #32]
   1520c:	cmp	r2, r3
   15210:	bcs	152c4 <argp_parse@@Base+0x170c>
   15214:	ldr	r3, [r6, #28]
   15218:	add	r2, r3, #1
   1521c:	str	r2, [r6, #28]
   15220:	mov	r2, #10
   15224:	strb	r2, [r3]
   15228:	cmp	r5, #0
   1522c:	beq	152ac <argp_parse@@Base+0x16f4>
   15230:	ldr	r0, [r5]
   15234:	cmp	r0, #0
   15238:	beq	152ac <argp_parse@@Base+0x16f4>
   1523c:	ldrb	r3, [r0]
   15240:	cmp	r3, #0
   15244:	beq	152ac <argp_parse@@Base+0x16f4>
   15248:	cmp	r8, #0
   1524c:	beq	15270 <argp_parse@@Base+0x16b8>
   15250:	ldr	r3, [r8, #16]
   15254:	cmp	r5, r3
   15258:	beq	152ac <argp_parse@@Base+0x16f4>
   1525c:	cmp	r3, #0
   15260:	cmpne	r5, r3
   15264:	bne	152dc <argp_parse@@Base+0x1724>
   15268:	cmp	r5, r3
   1526c:	beq	152ac <argp_parse@@Base+0x16f4>
   15270:	ldr	r3, [r4, #4]
   15274:	mov	r2, r4
   15278:	ldr	r1, [r5, #16]
   1527c:	ldr	r6, [r3, #12]
   15280:	bl	14fe0 <argp_parse@@Base+0x1428>
   15284:	ldr	r5, [r4, #4]
   15288:	ldr	r2, [r5, #24]
   1528c:	ldr	r3, [r5, #28]
   15290:	sub	r3, r3, r2
   15294:	ldr	r2, [r5, #16]
   15298:	cmp	r3, r2
   1529c:	bls	152a8 <argp_parse@@Base+0x16f0>
   152a0:	mov	r0, r5
   152a4:	bl	1844c <argp_error@@Base+0xbf0>
   152a8:	str	r6, [r5, #12]
   152ac:	mov	r3, #0
   152b0:	str	r3, [r4, #12]
   152b4:	mov	r1, r7
   152b8:	ldr	r0, [r4, #4]
   152bc:	pop	{r4, r5, r6, r7, r8, lr}
   152c0:	b	14f14 <argp_parse@@Base+0x135c>
   152c4:	mov	r1, #1
   152c8:	mov	r0, r6
   152cc:	bl	1889c <argp_error@@Base+0x1040>
   152d0:	cmp	r0, #0
   152d4:	bne	15214 <argp_parse@@Base+0x165c>
   152d8:	b	15228 <argp_parse@@Base+0x1670>
   152dc:	ldr	r3, [r3, #12]
   152e0:	b	1525c <argp_parse@@Base+0x16a4>
   152e4:	ldr	r5, [r1, #4]
   152e8:	ldr	r3, [r5, #28]
   152ec:	ldr	r2, [r5, #32]
   152f0:	add	r3, r3, #2
   152f4:	cmp	r2, r3
   152f8:	bcc	1531c <argp_parse@@Base+0x1764>
   152fc:	ldr	r2, [pc, #48]	; 15334 <argp_parse@@Base+0x177c>
   15300:	ldr	r3, [r5, #28]
   15304:	ldrh	r2, [r2]
   15308:	strh	r2, [r3]
   1530c:	ldr	r3, [r5, #28]
   15310:	add	r3, r3, #2
   15314:	str	r3, [r5, #28]
   15318:	b	152b4 <argp_parse@@Base+0x16fc>
   1531c:	mov	r1, #2
   15320:	mov	r0, r5
   15324:	bl	1889c <argp_error@@Base+0x1040>
   15328:	cmp	r0, #0
   1532c:	bne	152fc <argp_parse@@Base+0x1744>
   15330:	b	152b4 <argp_parse@@Base+0x16fc>
   15334:	andeq	r9, r1, fp, lsr #19
   15338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1533c:	sub	sp, sp, #28
   15340:	ldr	r7, [r0, #12]
   15344:	str	r3, [sp, #8]
   15348:	cmp	r7, #0
   1534c:	ldr	r3, [r0, #16]
   15350:	moveq	r5, r7
   15354:	mov	r8, r0
   15358:	str	r1, [sp, #16]
   1535c:	mov	fp, r2
   15360:	ldr	r4, [sp, #68]	; 0x44
   15364:	str	r3, [sp, #12]
   15368:	moveq	r6, r5
   1536c:	beq	153ac <argp_parse@@Base+0x17f4>
   15370:	mov	r1, #11
   15374:	mov	r0, r7
   15378:	bl	1190c <strchr@plt>
   1537c:	cmp	fp, #0
   15380:	moveq	r5, r7
   15384:	beq	15394 <argp_parse@@Base+0x17dc>
   15388:	cmp	r0, #0
   1538c:	addne	r5, r0, #1
   15390:	moveq	r5, r0
   15394:	cmp	r0, #0
   15398:	clz	r6, fp
   1539c:	lsr	r6, r6, #5
   153a0:	moveq	r6, #0
   153a4:	cmp	r6, #0
   153a8:	subne	r6, r0, r7
   153ac:	ldr	r9, [r8, #20]
   153b0:	cmp	r9, #0
   153b4:	moveq	sl, r5
   153b8:	beq	1540c <argp_parse@@Base+0x1854>
   153bc:	cmp	r6, #0
   153c0:	beq	153d4 <argp_parse@@Base+0x181c>
   153c4:	mov	r0, r5
   153c8:	mov	r1, r6
   153cc:	bl	11768 <strndup@plt>
   153d0:	mov	r5, r0
   153d4:	ldr	r1, [sp, #16]
   153d8:	mov	r0, r8
   153dc:	bl	14530 <argp_parse@@Base+0x978>
   153e0:	ldr	ip, [pc, #928]	; 15788 <argp_parse@@Base+0x1bd0>
   153e4:	cmp	fp, #0
   153e8:	mov	r1, r5
   153ec:	ldr	r3, [r8, #20]
   153f0:	mov	sl, r5
   153f4:	mov	r2, r0
   153f8:	mov	r9, r0
   153fc:	ldr	r0, [pc, #904]	; 1578c <argp_parse@@Base+0x1bd4>
   15400:	movne	r0, ip
   15404:	blx	r3
   15408:	mov	r5, r0
   1540c:	cmp	r5, #0
   15410:	moveq	r7, r5
   15414:	beq	154cc <argp_parse@@Base+0x1914>
   15418:	ldr	r3, [sp, #8]
   1541c:	cmp	r3, #0
   15420:	beq	15448 <argp_parse@@Base+0x1890>
   15424:	ldr	r2, [r4, #28]
   15428:	ldr	r3, [r4, #32]
   1542c:	cmp	r2, r3
   15430:	bcs	155f8 <argp_parse@@Base+0x1a40>
   15434:	ldr	r3, [r4, #28]
   15438:	add	r2, r3, #1
   1543c:	str	r2, [r4, #28]
   15440:	mov	r2, #10
   15444:	strb	r2, [r3]
   15448:	cmp	r6, #0
   1544c:	sub	r3, r5, sl
   15450:	clz	r3, r3
   15454:	lsr	r3, r3, #5
   15458:	moveq	r3, #0
   1545c:	cmp	r3, #0
   15460:	ldr	r3, [r4, #28]
   15464:	beq	15628 <argp_parse@@Base+0x1a70>
   15468:	ldr	r2, [r4, #32]
   1546c:	add	r3, r3, r6
   15470:	cmp	r2, r3
   15474:	bcc	15610 <argp_parse@@Base+0x1a58>
   15478:	mov	r2, r6
   1547c:	mov	r1, sl
   15480:	ldr	r0, [r4, #28]
   15484:	bl	1178c <memcpy@plt>
   15488:	ldr	r3, [r4, #28]
   1548c:	add	r3, r3, r6
   15490:	str	r3, [r4, #28]
   15494:	ldr	r2, [r4, #24]
   15498:	ldr	r3, [r4, #28]
   1549c:	sub	r3, r3, r2
   154a0:	ldr	r2, [r4, #16]
   154a4:	cmp	r3, r2
   154a8:	bls	154b4 <argp_parse@@Base+0x18fc>
   154ac:	mov	r0, r4
   154b0:	bl	1844c <argp_error@@Base+0xbf0>
   154b4:	ldr	r3, [r4, #20]
   154b8:	ldr	r2, [r4, #4]
   154bc:	bic	r3, r3, r3, asr #31
   154c0:	cmp	r2, r3
   154c4:	bcc	15688 <argp_parse@@Base+0x1ad0>
   154c8:	mov	r7, #1
   154cc:	cmp	r5, #0
   154d0:	cmpne	r5, sl
   154d4:	beq	154e0 <argp_parse@@Base+0x1928>
   154d8:	mov	r0, r5
   154dc:	bl	14654 <argp_parse@@Base+0xa9c>
   154e0:	cmp	sl, #0
   154e4:	cmpne	r6, #0
   154e8:	beq	15500 <argp_parse@@Base+0x1948>
   154ec:	ldr	r3, [r8, #20]
   154f0:	cmp	r3, #0
   154f4:	beq	155dc <argp_parse@@Base+0x1a24>
   154f8:	mov	r0, sl
   154fc:	bl	14654 <argp_parse@@Base+0xa9c>
   15500:	cmp	fp, #0
   15504:	beq	155dc <argp_parse@@Base+0x1a24>
   15508:	ldr	r3, [r8, #20]
   1550c:	cmp	r3, #0
   15510:	beq	155dc <argp_parse@@Base+0x1a24>
   15514:	mov	r2, r9
   15518:	mov	r1, #0
   1551c:	ldr	r0, [pc, #620]	; 15790 <argp_parse@@Base+0x1bd8>
   15520:	blx	r3
   15524:	subs	r5, r0, #0
   15528:	beq	155dc <argp_parse@@Base+0x1a24>
   1552c:	ldr	r3, [sp, #8]
   15530:	orrs	r3, r7, r3
   15534:	beq	1555c <argp_parse@@Base+0x19a4>
   15538:	ldr	r2, [r4, #28]
   1553c:	ldr	r3, [r4, #32]
   15540:	cmp	r2, r3
   15544:	bcs	156c8 <argp_parse@@Base+0x1b10>
   15548:	ldr	r3, [r4, #28]
   1554c:	add	r2, r3, #1
   15550:	str	r2, [r4, #28]
   15554:	mov	r2, #10
   15558:	strb	r2, [r3]
   1555c:	mov	r0, r5
   15560:	bl	11900 <strlen@plt>
   15564:	subs	r6, r0, #0
   15568:	beq	1559c <argp_parse@@Base+0x19e4>
   1556c:	ldr	r3, [r4, #28]
   15570:	ldr	r2, [r4, #32]
   15574:	add	r3, r3, r6
   15578:	cmp	r2, r3
   1557c:	bcc	156e0 <argp_parse@@Base+0x1b28>
   15580:	mov	r2, r6
   15584:	mov	r1, r5
   15588:	ldr	r0, [r4, #28]
   1558c:	bl	1178c <memcpy@plt>
   15590:	ldr	r3, [r4, #28]
   15594:	add	r6, r3, r6
   15598:	str	r6, [r4, #28]
   1559c:	mov	r0, r5
   155a0:	bl	14654 <argp_parse@@Base+0xa9c>
   155a4:	ldr	r2, [r4, #24]
   155a8:	ldr	r3, [r4, #28]
   155ac:	sub	r3, r3, r2
   155b0:	ldr	r2, [r4, #16]
   155b4:	cmp	r3, r2
   155b8:	bls	155c4 <argp_parse@@Base+0x1a0c>
   155bc:	mov	r0, r4
   155c0:	bl	1844c <argp_error@@Base+0xbf0>
   155c4:	ldr	r3, [r4, #20]
   155c8:	ldr	r2, [r4, #4]
   155cc:	bic	r3, r3, r3, asr #31
   155d0:	cmp	r2, r3
   155d4:	bcc	156f8 <argp_parse@@Base+0x1b40>
   155d8:	mov	r7, #1
   155dc:	ldr	r3, [sp, #12]
   155e0:	cmp	r3, #0
   155e4:	addne	r5, r3, #16
   155e8:	bne	15764 <argp_parse@@Base+0x1bac>
   155ec:	mov	r0, r7
   155f0:	add	sp, sp, #28
   155f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155f8:	mov	r1, #1
   155fc:	mov	r0, r4
   15600:	bl	1889c <argp_error@@Base+0x1040>
   15604:	cmp	r0, #0
   15608:	bne	15434 <argp_parse@@Base+0x187c>
   1560c:	b	15448 <argp_parse@@Base+0x1890>
   15610:	mov	r1, r6
   15614:	mov	r0, r4
   15618:	bl	1889c <argp_error@@Base+0x1040>
   1561c:	cmp	r0, #0
   15620:	bne	15478 <argp_parse@@Base+0x18c0>
   15624:	b	15494 <argp_parse@@Base+0x18dc>
   15628:	mov	r0, r5
   1562c:	str	r3, [sp, #20]
   15630:	bl	11900 <strlen@plt>
   15634:	subs	r7, r0, #0
   15638:	beq	15494 <argp_parse@@Base+0x18dc>
   1563c:	ldr	r3, [sp, #20]
   15640:	ldr	r2, [r4, #32]
   15644:	add	r3, r3, r7
   15648:	cmp	r2, r3
   1564c:	bcc	15670 <argp_parse@@Base+0x1ab8>
   15650:	mov	r2, r7
   15654:	mov	r1, r5
   15658:	ldr	r0, [r4, #28]
   1565c:	bl	1178c <memcpy@plt>
   15660:	ldr	r3, [r4, #28]
   15664:	add	r7, r3, r7
   15668:	str	r7, [r4, #28]
   1566c:	b	15494 <argp_parse@@Base+0x18dc>
   15670:	mov	r1, r7
   15674:	mov	r0, r4
   15678:	bl	1889c <argp_error@@Base+0x1040>
   1567c:	cmp	r0, #0
   15680:	bne	15650 <argp_parse@@Base+0x1a98>
   15684:	b	15494 <argp_parse@@Base+0x18dc>
   15688:	ldr	r2, [r4, #28]
   1568c:	ldr	r3, [r4, #32]
   15690:	cmp	r2, r3
   15694:	bcs	156b0 <argp_parse@@Base+0x1af8>
   15698:	ldr	r3, [r4, #28]
   1569c:	add	r2, r3, #1
   156a0:	str	r2, [r4, #28]
   156a4:	mov	r2, #10
   156a8:	strb	r2, [r3]
   156ac:	b	154c8 <argp_parse@@Base+0x1910>
   156b0:	mov	r1, #1
   156b4:	mov	r0, r4
   156b8:	bl	1889c <argp_error@@Base+0x1040>
   156bc:	cmp	r0, #0
   156c0:	bne	15698 <argp_parse@@Base+0x1ae0>
   156c4:	b	154c8 <argp_parse@@Base+0x1910>
   156c8:	mov	r1, #1
   156cc:	mov	r0, r4
   156d0:	bl	1889c <argp_error@@Base+0x1040>
   156d4:	cmp	r0, #0
   156d8:	bne	15548 <argp_parse@@Base+0x1990>
   156dc:	b	1555c <argp_parse@@Base+0x19a4>
   156e0:	mov	r1, r6
   156e4:	mov	r0, r4
   156e8:	bl	1889c <argp_error@@Base+0x1040>
   156ec:	cmp	r0, #0
   156f0:	bne	15580 <argp_parse@@Base+0x19c8>
   156f4:	b	1559c <argp_parse@@Base+0x19e4>
   156f8:	ldr	r2, [r4, #28]
   156fc:	ldr	r3, [r4, #32]
   15700:	cmp	r2, r3
   15704:	bcs	15720 <argp_parse@@Base+0x1b68>
   15708:	ldr	r3, [r4, #28]
   1570c:	add	r2, r3, #1
   15710:	str	r2, [r4, #28]
   15714:	mov	r2, #10
   15718:	strb	r2, [r3]
   1571c:	b	155d8 <argp_parse@@Base+0x1a20>
   15720:	mov	r1, #1
   15724:	mov	r0, r4
   15728:	bl	1889c <argp_error@@Base+0x1040>
   1572c:	cmp	r0, #0
   15730:	bne	15708 <argp_parse@@Base+0x1b50>
   15734:	b	155d8 <argp_parse@@Base+0x1a20>
   15738:	ldr	r3, [sp, #8]
   1573c:	str	r4, [sp, #4]
   15740:	orrs	r3, r7, r3
   15744:	ldr	r3, [sp, #64]	; 0x40
   15748:	mov	r2, fp
   1574c:	str	r3, [sp]
   15750:	ldr	r1, [sp, #16]
   15754:	movne	r3, #1
   15758:	moveq	r3, #0
   1575c:	bl	15338 <argp_parse@@Base+0x1780>
   15760:	orr	r7, r7, r0
   15764:	ldr	r0, [r5, #-16]
   15768:	cmp	r0, #0
   1576c:	beq	155ec <argp_parse@@Base+0x1a34>
   15770:	ldr	r3, [sp, #64]	; 0x40
   15774:	add	r5, r5, #16
   15778:	cmp	r7, #0
   1577c:	cmpne	r3, #0
   15780:	beq	15738 <argp_parse@@Base+0x1b80>
   15784:	b	155ec <argp_parse@@Base+0x1a34>
   15788:	andeq	r0, r0, #2
   1578c:	andeq	r0, r0, #1
   15790:	andeq	r0, r0, #4
   15794:	ldr	r2, [r0, #24]
   15798:	ldr	r3, [r0, #28]
   1579c:	push	{r4, r5, r6, lr}
   157a0:	sub	r3, r3, r2
   157a4:	ldr	r2, [r0, #16]
   157a8:	mov	r4, r0
   157ac:	cmp	r3, r2
   157b0:	mov	r5, r1
   157b4:	bls	157bc <argp_parse@@Base+0x1c04>
   157b8:	bl	1844c <argp_error@@Base+0xbf0>
   157bc:	ldr	r1, [r4, #20]
   157c0:	ldr	r3, [r4, #8]
   157c4:	cmp	r1, #0
   157c8:	addge	r5, r5, r1
   157cc:	cmp	r5, r3
   157d0:	ldr	r2, [r4, #28]
   157d4:	ldr	r3, [r4, #32]
   157d8:	bcc	15814 <argp_parse@@Base+0x1c5c>
   157dc:	cmp	r2, r3
   157e0:	bcs	157fc <argp_parse@@Base+0x1c44>
   157e4:	ldr	r3, [r4, #28]
   157e8:	add	r2, r3, #1
   157ec:	str	r2, [r4, #28]
   157f0:	mov	r2, #10
   157f4:	strb	r2, [r3]
   157f8:	pop	{r4, r5, r6, pc}
   157fc:	mov	r1, #1
   15800:	mov	r0, r4
   15804:	bl	1889c <argp_error@@Base+0x1040>
   15808:	cmp	r0, #0
   1580c:	bne	157e4 <argp_parse@@Base+0x1c2c>
   15810:	pop	{r4, r5, r6, pc}
   15814:	cmp	r2, r3
   15818:	bcs	15830 <argp_parse@@Base+0x1c78>
   1581c:	ldr	r3, [r4, #28]
   15820:	add	r2, r3, #1
   15824:	str	r2, [r4, #28]
   15828:	mov	r2, #32
   1582c:	b	157f4 <argp_parse@@Base+0x1c3c>
   15830:	mov	r1, #1
   15834:	mov	r0, r4
   15838:	bl	1889c <argp_error@@Base+0x1040>
   1583c:	cmp	r0, #0
   15840:	bne	1581c <argp_parse@@Base+0x1c64>
   15844:	pop	{r4, r5, r6, pc}
   15848:	push	{r4, r5, r6, lr}
   1584c:	ldr	r5, [r0, #8]
   15850:	ldr	r2, [r0, #12]
   15854:	ldr	ip, [r1, #12]
   15858:	cmp	r5, #0
   1585c:	orr	r2, r2, ip
   15860:	bne	15870 <argp_parse@@Base+0x1cb8>
   15864:	ldr	r5, [r1, #8]
   15868:	cmp	r5, #0
   1586c:	beq	1589c <argp_parse@@Base+0x1ce4>
   15870:	tst	r2, #16
   15874:	bne	1589c <argp_parse@@Base+0x1ce4>
   15878:	tst	r2, #1
   1587c:	mov	r6, r3
   15880:	mov	r4, r0
   15884:	beq	158a4 <argp_parse@@Base+0x1cec>
   15888:	ldr	r2, [r0, #4]
   1588c:	ldr	r1, [pc, #52]	; 158c8 <argp_parse@@Base+0x1d10>
   15890:	mov	r3, r5
   15894:	mov	r0, r6
   15898:	bl	18980 <argp_error@@Base+0x1124>
   1589c:	mov	r0, #0
   158a0:	pop	{r4, r5, r6, pc}
   158a4:	mov	r0, r5
   158a8:	bl	11900 <strlen@plt>
   158ac:	add	r1, r0, #6
   158b0:	mov	r0, r6
   158b4:	bl	15794 <argp_parse@@Base+0x1bdc>
   158b8:	mov	r3, r5
   158bc:	ldr	r2, [r4, #4]
   158c0:	ldr	r1, [pc, #4]	; 158cc <argp_parse@@Base+0x1d14>
   158c4:	b	15894 <argp_parse@@Base+0x1cdc>
   158c8:	andeq	r9, r1, lr, lsr #19
   158cc:			; <UNDEFINED> instruction: 0x000199b9
   158d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158d4:	mov	r6, r3
   158d8:	sub	sp, sp, #36	; 0x24
   158dc:	ldr	r3, [r0, #16]
   158e0:	str	r1, [sp, #20]
   158e4:	str	r3, [sp, #12]
   158e8:	ldr	r3, [r0, #8]
   158ec:	ldr	sl, [r2]
   158f0:	str	r3, [sp, #16]
   158f4:	mov	fp, r2
   158f8:	mov	r3, r1
   158fc:	mov	r2, r0
   15900:	ldr	r1, [pc, #404]	; 15a9c <argp_parse@@Base+0x1ee4>
   15904:	ldr	r0, [sp, #16]
   15908:	ldr	r5, [sp, #72]	; 0x48
   1590c:	bl	14f9c <argp_parse@@Base+0x13e4>
   15910:	subs	r8, r0, #0
   15914:	moveq	r7, r8
   15918:	moveq	r4, r8
   1591c:	beq	159b0 <argp_parse@@Base+0x1df8>
   15920:	mov	r1, #10
   15924:	bl	11744 <strchrnul@plt>
   15928:	ldrb	r4, [r0]
   1592c:	mov	r7, r0
   15930:	cmp	r4, #0
   15934:	moveq	r9, r8
   15938:	beq	15964 <argp_parse@@Base+0x1dac>
   1593c:	ldrb	r3, [sl]
   15940:	mov	r9, r8
   15944:	mov	r4, #0
   15948:	mov	r2, #10
   1594c:	cmp	r4, r3
   15950:	blt	15a20 <argp_parse@@Base+0x1e68>
   15954:	ldr	r3, [fp]
   15958:	mov	r4, #1
   1595c:	add	r3, r3, #1
   15960:	str	r3, [fp]
   15964:	add	r1, r7, #1
   15968:	sub	r1, r1, r9
   1596c:	mov	r0, r5
   15970:	bl	15794 <argp_parse@@Base+0x1bdc>
   15974:	ldr	r2, [r5, #28]
   15978:	sub	r3, r7, r9
   1597c:	ldr	r1, [r5, #32]
   15980:	add	r2, r2, r3
   15984:	cmp	r1, r2
   15988:	bcc	15a4c <argp_parse@@Base+0x1e94>
   1598c:	mov	r2, r3
   15990:	mov	r1, r9
   15994:	ldr	r0, [r5, #28]
   15998:	str	r3, [sp, #24]
   1599c:	bl	1178c <memcpy@plt>
   159a0:	ldr	r2, [r5, #28]
   159a4:	ldr	r3, [sp, #24]
   159a8:	add	r3, r2, r3
   159ac:	str	r3, [r5, #28]
   159b0:	ldr	r3, [sp, #16]
   159b4:	cmp	r8, #0
   159b8:	cmpne	r3, r8
   159bc:	beq	159c8 <argp_parse@@Base+0x1e10>
   159c0:	mov	r0, r8
   159c4:	bl	14654 <argp_parse@@Base+0xa9c>
   159c8:	ldr	r3, [sp, #12]
   159cc:	cmp	r3, #0
   159d0:	addne	r8, r3, #16
   159d4:	bne	15a88 <argp_parse@@Base+0x1ed0>
   159d8:	cmp	r6, #0
   159dc:	moveq	r4, #0
   159e0:	andne	r4, r4, #1
   159e4:	cmp	r4, #0
   159e8:	beq	15a10 <argp_parse@@Base+0x1e58>
   159ec:	ldrb	r2, [r7]
   159f0:	ldrb	r3, [sl]
   159f4:	cmp	r2, #0
   159f8:	addne	r3, r3, #1
   159fc:	strbne	r3, [sl]
   15a00:	movne	r6, #0
   15a04:	bne	15a10 <argp_parse@@Base+0x1e58>
   15a08:	cmp	r3, #0
   15a0c:	strbne	r2, [sl]
   15a10:	clz	r0, r6
   15a14:	lsr	r0, r0, #5
   15a18:	add	sp, sp, #36	; 0x24
   15a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a20:	add	r9, r7, #1
   15a24:	mov	r1, r2
   15a28:	mov	r0, r9
   15a2c:	str	r3, [sp, #28]
   15a30:	str	r2, [sp, #24]
   15a34:	bl	11744 <strchrnul@plt>
   15a38:	add	r4, r4, #1
   15a3c:	ldr	r3, [sp, #28]
   15a40:	ldr	r2, [sp, #24]
   15a44:	mov	r7, r0
   15a48:	b	1594c <argp_parse@@Base+0x1d94>
   15a4c:	mov	r1, r3
   15a50:	mov	r0, r5
   15a54:	str	r3, [sp, #24]
   15a58:	bl	1889c <argp_error@@Base+0x1040>
   15a5c:	ldr	r3, [sp, #24]
   15a60:	cmp	r0, #0
   15a64:	bne	1598c <argp_parse@@Base+0x1dd4>
   15a68:	b	159b0 <argp_parse@@Base+0x1df8>
   15a6c:	mov	r3, r6
   15a70:	str	r5, [sp]
   15a74:	mov	r2, fp
   15a78:	ldr	r1, [sp, #20]
   15a7c:	bl	158d0 <argp_parse@@Base+0x1d18>
   15a80:	clz	r6, r0
   15a84:	lsr	r6, r6, #5
   15a88:	add	r8, r8, #16
   15a8c:	ldr	r0, [r8, #-32]	; 0xffffffe0
   15a90:	cmp	r0, #0
   15a94:	bne	15a6c <argp_parse@@Base+0x1eb4>
   15a98:	b	159d8 <argp_parse@@Base+0x1e20>
   15a9c:	andeq	r0, r0, #6
   15aa0:	ldr	r2, [r0, #8]
   15aa4:	cmp	r2, #0
   15aa8:	bne	15adc <argp_parse@@Base+0x1f24>
   15aac:	ldr	r2, [r1, #8]
   15ab0:	cmp	r2, #0
   15ab4:	bne	15adc <argp_parse@@Base+0x1f24>
   15ab8:	ldr	r1, [r1, #12]
   15abc:	ldr	r2, [r0, #12]
   15ac0:	orr	r2, r2, r1
   15ac4:	tst	r2, #16
   15ac8:	ldreq	r2, [r3]
   15acc:	addeq	r1, r2, #1
   15ad0:	streq	r1, [r3]
   15ad4:	ldreq	r3, [r0, #4]
   15ad8:	strbeq	r3, [r2]
   15adc:	mov	r0, #0
   15ae0:	bx	lr
   15ae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ae8:	add	fp, sp, #32
   15aec:	sub	sp, sp, #12
   15af0:	ldr	r6, [r0, #4]
   15af4:	cmp	r6, #0
   15af8:	beq	15b9c <argp_parse@@Base+0x1fe4>
   15afc:	mov	r5, r0
   15b00:	ldr	r0, [r0, #8]
   15b04:	mov	r4, r1
   15b08:	bl	11900 <strlen@plt>
   15b0c:	ldr	sl, [pc, #324]	; 15c58 <argp_parse@@Base+0x20a0>
   15b10:	ldr	r7, [r5]
   15b14:	sub	r9, fp, #36	; 0x24
   15b18:	add	r0, r0, #15
   15b1c:	bic	r0, r0, #7
   15b20:	sub	sp, sp, r0
   15b24:	mov	r8, sp
   15b28:	str	sp, [r9, #-4]!
   15b2c:	ldr	r2, [r7, #20]
   15b30:	mov	r0, r7
   15b34:	mov	r3, r9
   15b38:	ldr	r2, [r2, #24]
   15b3c:	mov	r1, sl
   15b40:	bl	14cd8 <argp_parse@@Base+0x1120>
   15b44:	subs	r6, r6, #1
   15b48:	add	r7, r7, #28
   15b4c:	bne	15b2c <argp_parse@@Base+0x1f74>
   15b50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15b54:	cmp	r8, r3
   15b58:	bcs	15b78 <argp_parse@@Base+0x1fc0>
   15b5c:	add	r2, r3, #1
   15b60:	str	r2, [fp, #-40]	; 0xffffffd8
   15b64:	ldr	r1, [pc, #240]	; 15c5c <argp_parse@@Base+0x20a4>
   15b68:	strb	r6, [r3]
   15b6c:	mov	r2, r8
   15b70:	mov	r0, r4
   15b74:	bl	18980 <argp_error@@Base+0x1124>
   15b78:	ldm	r5, {r6, r7}
   15b7c:	ldr	r8, [pc, #220]	; 15c60 <argp_parse@@Base+0x20a8>
   15b80:	cmp	r7, #0
   15b84:	bne	15ba4 <argp_parse@@Base+0x1fec>
   15b88:	ldm	r5, {r5, r8}
   15b8c:	ldr	sl, [pc, #208]	; 15c64 <argp_parse@@Base+0x20ac>
   15b90:	add	r5, r5, #28
   15b94:	cmp	r8, #0
   15b98:	bne	15bc8 <argp_parse@@Base+0x2010>
   15b9c:	sub	sp, fp, #32
   15ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ba4:	ldr	r2, [r6, #20]
   15ba8:	mov	r0, r6
   15bac:	mov	r3, r4
   15bb0:	ldr	r2, [r2, #24]
   15bb4:	mov	r1, r8
   15bb8:	bl	14cd8 <argp_parse@@Base+0x1120>
   15bbc:	add	r6, r6, #28
   15bc0:	sub	r7, r7, #1
   15bc4:	b	15b80 <argp_parse@@Base+0x1fc8>
   15bc8:	ldr	r7, [r5, #-28]	; 0xffffffe4
   15bcc:	ldr	r9, [r5, #-24]	; 0xffffffe8
   15bd0:	mov	r6, r7
   15bd4:	cmp	r9, #0
   15bd8:	subeq	r8, r8, #1
   15bdc:	addeq	r5, r5, #28
   15be0:	beq	15b94 <argp_parse@@Base+0x1fdc>
   15be4:	ldr	r2, [r6]
   15be8:	cmp	r2, #0
   15bec:	beq	15c3c <argp_parse@@Base+0x2084>
   15bf0:	ldr	r1, [r6, #12]
   15bf4:	tst	r1, #4
   15bf8:	moveq	r7, r6
   15bfc:	tst	r1, #2
   15c00:	bne	15c3c <argp_parse@@Base+0x2084>
   15c04:	ldr	r3, [r6, #8]
   15c08:	ldr	r0, [r7, #12]
   15c0c:	cmp	r3, #0
   15c10:	orr	r1, r1, r0
   15c14:	ldreq	r3, [r7, #8]
   15c18:	tst	r1, #16
   15c1c:	bne	15c3c <argp_parse@@Base+0x2084>
   15c20:	cmp	r3, #0
   15c24:	beq	15c48 <argp_parse@@Base+0x2090>
   15c28:	tst	r1, #1
   15c2c:	movne	r1, sl
   15c30:	ldreq	r1, [pc, #48]	; 15c68 <argp_parse@@Base+0x20b0>
   15c34:	mov	r0, r4
   15c38:	bl	18980 <argp_error@@Base+0x1124>
   15c3c:	add	r6, r6, #24
   15c40:	sub	r9, r9, #1
   15c44:	b	15bd4 <argp_parse@@Base+0x201c>
   15c48:	ldr	r1, [pc, #28]	; 15c6c <argp_parse@@Base+0x20b4>
   15c4c:	mov	r0, r4
   15c50:	bl	18980 <argp_error@@Base+0x1124>
   15c54:	b	15c3c <argp_parse@@Base+0x2084>
   15c58:	andeq	r5, r1, r0, lsr #21
   15c5c:	andeq	r9, r1, r2, asr #19
   15c60:	andeq	r5, r1, r8, asr #16
   15c64:	andeq	r9, r1, r9, asr #19
   15c68:	ldrdeq	r9, [r1], -r6
   15c6c:	andeq	r9, r1, r1, ror #19
   15c70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15c74:	mov	r8, r1
   15c78:	ldm	r0, {r5, r6}
   15c7c:	cmp	r6, #0
   15c80:	bne	15c88 <argp_parse@@Base+0x20d0>
   15c84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15c88:	ldm	r5, {r4, r9}
   15c8c:	mov	r7, #0
   15c90:	add	r4, r4, #24
   15c94:	cmp	r9, r7
   15c98:	subeq	r6, r6, #1
   15c9c:	addeq	r5, r5, #28
   15ca0:	beq	15c7c <argp_parse@@Base+0x20c4>
   15ca4:	ldr	r0, [r4, #-24]	; 0xffffffe8
   15ca8:	cmp	r0, #0
   15cac:	beq	15ccc <argp_parse@@Base+0x2114>
   15cb0:	ldr	r3, [r4, #-12]
   15cb4:	tst	r3, #2
   15cb8:	bne	15ccc <argp_parse@@Base+0x2114>
   15cbc:	mov	r1, r8
   15cc0:	bl	116b4 <strcmp@plt>
   15cc4:	cmp	r0, #0
   15cc8:	beq	15cd8 <argp_parse@@Base+0x2120>
   15ccc:	add	r7, r7, #1
   15cd0:	add	r4, r4, #24
   15cd4:	b	15c94 <argp_parse@@Base+0x20dc>
   15cd8:	mvn	r3, #0
   15cdc:	str	r3, [r5, #12]
   15ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ce8:	sub	sp, sp, #44	; 0x2c
   15cec:	ldr	r6, [r0, #16]
   15cf0:	str	r0, [sp, #8]
   15cf4:	ldr	r5, [r0]
   15cf8:	mov	r0, #16
   15cfc:	mov	r9, r1
   15d00:	bl	14c00 <argp_parse@@Base+0x1048>
   15d04:	subs	r4, r0, #0
   15d08:	bne	15d20 <argp_parse@@Base+0x2168>
   15d0c:	ldr	r3, [pc, #1444]	; 162b8 <argp_parse@@Base+0x2700>
   15d10:	ldr	r2, [pc, #1444]	; 162bc <argp_parse@@Base+0x2704>
   15d14:	ldr	r1, [pc, #1444]	; 162c0 <argp_parse@@Base+0x2708>
   15d18:	ldr	r0, [pc, #1444]	; 162c4 <argp_parse@@Base+0x270c>
   15d1c:	bl	11aec <__assert_fail@plt>
   15d20:	mov	r3, #0
   15d24:	cmp	r5, r3
   15d28:	str	r3, [r4, #4]
   15d2c:	str	r3, [r4, #12]
   15d30:	beq	16284 <argp_parse@@Base+0x26cc>
   15d34:	ldr	r8, [r5, #12]
   15d38:	ands	r8, r8, #4
   15d3c:	addeq	r7, r5, #24
   15d40:	moveq	fp, r8
   15d44:	beq	160ec <argp_parse@@Base+0x2534>
   15d48:	ldr	r3, [pc, #1384]	; 162b8 <argp_parse@@Base+0x2700>
   15d4c:	mov	r2, #460	; 0x1cc
   15d50:	ldr	r1, [pc, #1384]	; 162c0 <argp_parse@@Base+0x2708>
   15d54:	ldr	r0, [pc, #1388]	; 162c8 <argp_parse@@Base+0x2710>
   15d58:	b	15d1c <argp_parse@@Base+0x2164>
   15d5c:	ldr	r2, [pc, #1384]	; 162cc <argp_parse@@Base+0x2714>
   15d60:	ldr	r0, [r4, #4]
   15d64:	cmp	r0, r2
   15d68:	addls	r7, r7, #28
   15d6c:	movls	sl, r3
   15d70:	movls	r2, r1
   15d74:	bls	16250 <argp_parse@@Base+0x2698>
   15d78:	ldr	r3, [pc, #1336]	; 162b8 <argp_parse@@Base+0x2700>
   15d7c:	mov	r2, #476	; 0x1dc
   15d80:	ldr	r1, [pc, #1336]	; 162c0 <argp_parse@@Base+0x2708>
   15d84:	ldr	r0, [pc, #1348]	; 162d0 <argp_parse@@Base+0x2718>
   15d88:	b	15d1c <argp_parse@@Base+0x2164>
   15d8c:	ldrb	r0, [r0]
   15d90:	add	r1, r1, #1
   15d94:	cmp	r0, r8
   15d98:	beq	16214 <argp_parse@@Base+0x265c>
   15d9c:	cmp	sl, r1
   15da0:	mov	r0, r1
   15da4:	bhi	15d8c <argp_parse@@Base+0x21d4>
   15da8:	strb	r8, [sl]
   15dac:	add	sl, sl, #1
   15db0:	b	16214 <argp_parse@@Base+0x265c>
   15db4:	ldr	r8, [r6, #-4]
   15db8:	ldr	r7, [r6, #-8]
   15dbc:	cmp	r8, #0
   15dc0:	bne	15dd0 <argp_parse@@Base+0x2218>
   15dc4:	cmp	r7, #0
   15dc8:	moveq	r1, r9
   15dcc:	beq	15e2c <argp_parse@@Base+0x2274>
   15dd0:	ldr	r3, [sp, #8]
   15dd4:	sub	r5, r6, #16
   15dd8:	mov	r0, #28
   15ddc:	ldr	r3, [r3, #16]
   15de0:	sub	r5, r5, r3
   15de4:	bl	14c00 <argp_parse@@Base+0x1048>
   15de8:	asr	r5, r5, #4
   15dec:	subs	r1, r0, #0
   15df0:	beq	15e2c <argp_parse@@Base+0x2274>
   15df4:	ldr	r3, [sp, #8]
   15df8:	cmp	r9, #0
   15dfc:	str	r3, [r1, #16]
   15e00:	ldrne	r3, [r9, #20]
   15e04:	moveq	r3, #0
   15e08:	addne	r3, r3, #1
   15e0c:	str	r3, [r1, #20]
   15e10:	ldr	r3, [r4, #12]
   15e14:	str	r8, [r1, #8]
   15e18:	str	r7, [r1]
   15e1c:	str	r5, [r1, #4]
   15e20:	str	r9, [r1, #12]
   15e24:	str	r3, [r1, #24]
   15e28:	str	r1, [r4, #12]
   15e2c:	ldr	r0, [r6, #-16]
   15e30:	bl	15ce4 <argp_parse@@Base+0x212c>
   15e34:	ldr	r2, [sp, #28]
   15e38:	ldr	r3, [r4, #12]
   15e3c:	mov	r5, r0
   15e40:	cmp	r3, #0
   15e44:	bne	15ea0 <argp_parse@@Base+0x22e8>
   15e48:	ldr	r1, [r5, #12]
   15e4c:	str	r1, [r2]
   15e50:	ldr	r2, [r5, #4]
   15e54:	str	r3, [r5, #12]
   15e58:	cmp	r2, #0
   15e5c:	beq	15e84 <argp_parse@@Base+0x22cc>
   15e60:	ldr	r1, [r4, #4]
   15e64:	cmp	r1, #0
   15e68:	bne	15eac <argp_parse@@Base+0x22f4>
   15e6c:	str	r2, [r4, #4]
   15e70:	ldr	r2, [r5]
   15e74:	str	r2, [r4]
   15e78:	ldr	r2, [r5, #8]
   15e7c:	str	r2, [r4, #8]
   15e80:	str	r3, [r5, #4]
   15e84:	mov	r0, r5
   15e88:	bl	14e70 <argp_parse@@Base+0x12b8>
   15e8c:	add	r6, r6, #16
   15e90:	ldr	r3, [r6, #-16]
   15e94:	cmp	r3, #0
   15e98:	bne	15db4 <argp_parse@@Base+0x21fc>
   15e9c:	b	16298 <argp_parse@@Base+0x26e0>
   15ea0:	add	r2, r3, #24
   15ea4:	ldr	r3, [r3, #24]
   15ea8:	b	15e40 <argp_parse@@Base+0x2288>
   15eac:	add	r3, r2, r1
   15eb0:	mov	r7, #28
   15eb4:	str	r3, [sp, #12]
   15eb8:	mul	r0, r7, r3
   15ebc:	bl	14c00 <argp_parse@@Base+0x1048>
   15ec0:	str	r0, [sp]
   15ec4:	ldr	r0, [r4, #8]
   15ec8:	bl	11900 <strlen@plt>
   15ecc:	mov	fp, r0
   15ed0:	ldr	r0, [r5, #8]
   15ed4:	bl	11900 <strlen@plt>
   15ed8:	add	r0, fp, r0
   15edc:	add	r0, r0, #1
   15ee0:	bl	14c00 <argp_parse@@Base+0x1048>
   15ee4:	ldr	r3, [sp]
   15ee8:	cmp	r3, #0
   15eec:	cmpne	r0, #0
   15ef0:	mov	r8, r0
   15ef4:	ldreq	r3, [pc, #984]	; 162d4 <argp_parse@@Base+0x271c>
   15ef8:	ldreq	r2, [pc, #984]	; 162d8 <argp_parse@@Base+0x2720>
   15efc:	ldreq	r1, [pc, #956]	; 162c0 <argp_parse@@Base+0x2708>
   15f00:	ldreq	r0, [pc, #980]	; 162dc <argp_parse@@Base+0x2724>
   15f04:	beq	15d1c <argp_parse@@Base+0x2164>
   15f08:	ldr	r3, [sp, #12]
   15f0c:	ldr	r2, [pc, #952]	; 162cc <argp_parse@@Base+0x2714>
   15f10:	cmp	r3, r2
   15f14:	ldrhi	r3, [pc, #952]	; 162d4 <argp_parse@@Base+0x271c>
   15f18:	movhi	r2, #972	; 0x3cc
   15f1c:	ldrhi	r1, [pc, #924]	; 162c0 <argp_parse@@Base+0x2708>
   15f20:	ldrhi	r0, [pc, #952]	; 162e0 <argp_parse@@Base+0x2728>
   15f24:	bhi	15d1c <argp_parse@@Base+0x2164>
   15f28:	ldr	sl, [r4, #4]
   15f2c:	ldr	r3, [r4]
   15f30:	ldr	r0, [sp]
   15f34:	str	r3, [sp, #16]
   15f38:	mul	r3, r7, sl
   15f3c:	ldr	r1, [sp, #16]
   15f40:	mov	r2, r3
   15f44:	str	r3, [sp, #24]
   15f48:	bl	118d0 <mempcpy@plt>
   15f4c:	ldr	r3, [r5, #4]
   15f50:	ldr	r1, [r5]
   15f54:	str	r3, [sp, #4]
   15f58:	mul	r2, r7, r3
   15f5c:	bl	1178c <memcpy@plt>
   15f60:	ldr	r3, [r4, #8]
   15f64:	mov	r2, fp
   15f68:	mov	r1, r3
   15f6c:	mov	r0, r8
   15f70:	str	r3, [sp, #20]
   15f74:	bl	1178c <memcpy@plt>
   15f78:	ldr	r1, [sp]
   15f7c:	ldr	r3, [sp, #20]
   15f80:	cmp	sl, #0
   15f84:	bne	15fe0 <argp_parse@@Base+0x2428>
   15f88:	add	r3, r8, fp
   15f8c:	str	r3, [sp, #20]
   15f90:	ldr	r3, [sp, #24]
   15f94:	ldr	r1, [r5, #8]
   15f98:	add	r7, r3, #28
   15f9c:	ldr	r3, [sp]
   15fa0:	ldr	sl, [sp, #20]
   15fa4:	add	r7, r3, r7
   15fa8:	ldr	r3, [sp, #4]
   15fac:	cmp	r3, #0
   15fb0:	bne	15ffc <argp_parse@@Base+0x2444>
   15fb4:	ldrb	r3, [sp, #4]
   15fb8:	ldr	r0, [sp, #16]
   15fbc:	strb	r3, [sl]
   15fc0:	bl	14654 <argp_parse@@Base+0xa9c>
   15fc4:	ldr	r0, [r4, #8]
   15fc8:	bl	14654 <argp_parse@@Base+0xa9c>
   15fcc:	ldr	r3, [sp]
   15fd0:	str	r3, [r4]
   15fd4:	ldr	r3, [sp, #12]
   15fd8:	stmib	r4, {r3, r8}
   15fdc:	b	15e84 <argp_parse@@Base+0x22cc>
   15fe0:	ldr	r2, [r1, #8]
   15fe4:	sub	sl, sl, #1
   15fe8:	sub	r2, r2, r3
   15fec:	add	r2, r8, r2
   15ff0:	str	r2, [r1, #8]
   15ff4:	add	r1, r1, #28
   15ff8:	b	15f80 <argp_parse@@Base+0x23c8>
   15ffc:	ldr	r3, [r7, #-24]	; 0xffffffe8
   16000:	ldr	fp, [r7, #-28]	; 0xffffffe4
   16004:	str	sl, [r7, #-20]	; 0xffffffec
   16008:	cmp	r3, #0
   1600c:	ldreq	r3, [sp, #4]
   16010:	addeq	r7, r7, #28
   16014:	subeq	r3, r3, #1
   16018:	streq	r3, [sp, #4]
   1601c:	beq	15fa8 <argp_parse@@Base+0x23f0>
   16020:	ldr	r2, [fp, #12]
   16024:	tst	r2, #8
   16028:	bne	1606c <argp_parse@@Base+0x24b4>
   1602c:	ldr	r2, [fp, #4]
   16030:	sub	r0, r2, #1
   16034:	cmp	r0, #254	; 0xfe
   16038:	str	r2, [sp, #36]	; 0x24
   1603c:	bhi	1606c <argp_parse@@Base+0x24b4>
   16040:	str	r3, [sp, #32]
   16044:	str	r1, [sp, #24]
   16048:	bl	118dc <__ctype_b_loc@plt>
   1604c:	ldr	r2, [sp, #36]	; 0x24
   16050:	ldr	r1, [sp, #24]
   16054:	ldr	r3, [sp, #32]
   16058:	ldr	ip, [r0]
   1605c:	lsl	r0, r2, #1
   16060:	ldrh	r0, [ip, r0]
   16064:	tst	r0, #16384	; 0x4000
   16068:	bne	162a4 <argp_parse@@Base+0x26ec>
   1606c:	add	fp, fp, #24
   16070:	sub	r3, r3, #1
   16074:	b	16008 <argp_parse@@Base+0x2450>
   16078:	ldrb	ip, [ip]
   1607c:	add	r2, r2, #1
   16080:	cmp	ip, r0
   16084:	beq	160a0 <argp_parse@@Base+0x24e8>
   16088:	ldr	lr, [sp, #20]
   1608c:	mov	ip, r2
   16090:	cmp	lr, r2
   16094:	bhi	16078 <argp_parse@@Base+0x24c0>
   16098:	strb	r0, [sl]
   1609c:	add	sl, sl, #1
   160a0:	add	r1, r1, #1
   160a4:	b	1606c <argp_parse@@Base+0x24b4>
   160a8:	ldr	r1, [r7, #-12]
   160ac:	tst	r1, #4
   160b0:	ldreq	r2, [r4, #4]
   160b4:	addeq	r2, r2, #1
   160b8:	streq	r2, [r4, #4]
   160bc:	tst	r1, #8
   160c0:	bne	160e8 <argp_parse@@Base+0x2530>
   160c4:	sub	r2, sl, #1
   160c8:	cmp	r2, #254	; 0xfe
   160cc:	bhi	160e8 <argp_parse@@Base+0x2530>
   160d0:	bl	118dc <__ctype_b_loc@plt>
   160d4:	lsl	sl, sl, #1
   160d8:	ldr	r2, [r0]
   160dc:	ldrh	r2, [r2, sl]
   160e0:	tst	r2, #16384	; 0x4000
   160e4:	addne	fp, fp, #1
   160e8:	add	r7, r7, #24
   160ec:	ldr	sl, [r7, #-20]	; 0xffffffec
   160f0:	cmp	sl, #0
   160f4:	bne	160a8 <argp_parse@@Base+0x24f0>
   160f8:	ldr	r2, [r7, #-24]	; 0xffffffe8
   160fc:	cmp	r2, #0
   16100:	bne	160a8 <argp_parse@@Base+0x24f0>
   16104:	ldr	r2, [r7, #-8]
   16108:	cmp	r2, #0
   1610c:	bne	160a8 <argp_parse@@Base+0x24f0>
   16110:	ldr	r1, [r7, #-4]
   16114:	cmp	r1, #0
   16118:	bne	160a8 <argp_parse@@Base+0x24f0>
   1611c:	ldr	r2, [r4, #4]
   16120:	mov	r0, #28
   16124:	str	r1, [sp]
   16128:	mul	r0, r0, r2
   1612c:	bl	14c00 <argp_parse@@Base+0x1048>
   16130:	str	r0, [r4]
   16134:	add	r0, fp, #1
   16138:	bl	14c00 <argp_parse@@Base+0x1048>
   1613c:	ldr	r7, [r4]
   16140:	ldr	r1, [sp]
   16144:	cmp	r0, #0
   16148:	cmpne	r7, #0
   1614c:	mov	r3, r0
   16150:	str	r0, [r4, #8]
   16154:	bne	15d5c <argp_parse@@Base+0x21a4>
   16158:	ldr	r3, [pc, #344]	; 162b8 <argp_parse@@Base+0x2700>
   1615c:	ldr	r2, [pc, #384]	; 162e4 <argp_parse@@Base+0x272c>
   16160:	ldr	r1, [pc, #344]	; 162c0 <argp_parse@@Base+0x2708>
   16164:	ldr	r0, [pc, #380]	; 162e8 <argp_parse@@Base+0x2730>
   16168:	b	15d1c <argp_parse@@Base+0x2164>
   1616c:	uxtb	r8, r8
   16170:	mov	r1, r3
   16174:	b	15d9c <argp_parse@@Base+0x21e4>
   16178:	ldr	r1, [r5, #12]
   1617c:	tst	r1, #4
   16180:	bne	161c4 <argp_parse@@Base+0x260c>
   16184:	b	16248 <argp_parse@@Base+0x2690>
   16188:	str	r2, [r7, #-24]	; 0xffffffe8
   1618c:	ldr	fp, [r5, #20]
   16190:	str	r5, [r7, #-28]	; 0xffffffe4
   16194:	cmp	fp, #0
   16198:	str	sl, [r7, #-20]	; 0xffffffec
   1619c:	bne	161b4 <argp_parse@@Base+0x25fc>
   161a0:	ldr	r1, [r5]
   161a4:	cmp	r1, #0
   161a8:	cmpeq	r0, #0
   161ac:	addeq	fp, r8, #1
   161b0:	movne	fp, r8
   161b4:	ldr	r1, [sp, #8]
   161b8:	str	fp, [r7, #-16]
   161bc:	str	r9, [r7, #-12]
   161c0:	str	r1, [r7, #-8]
   161c4:	ldr	r1, [r7, #-24]	; 0xffffffe8
   161c8:	add	r1, r1, #1
   161cc:	str	r1, [r7, #-24]	; 0xffffffe8
   161d0:	ldr	r1, [r5, #12]
   161d4:	tst	r1, #8
   161d8:	bne	16214 <argp_parse@@Base+0x265c>
   161dc:	ldr	r8, [r5, #4]
   161e0:	sub	r1, r8, #1
   161e4:	cmp	r1, #254	; 0xfe
   161e8:	bhi	16214 <argp_parse@@Base+0x265c>
   161ec:	str	r2, [sp, #4]
   161f0:	str	r3, [sp]
   161f4:	bl	118dc <__ctype_b_loc@plt>
   161f8:	lsl	r1, r8, #1
   161fc:	ldr	r3, [sp]
   16200:	ldr	r2, [sp, #4]
   16204:	ldr	r0, [r0]
   16208:	ldrh	r1, [r0, r1]
   1620c:	tst	r1, #16384	; 0x4000
   16210:	bne	1616c <argp_parse@@Base+0x25b4>
   16214:	add	r5, r5, #24
   16218:	ldr	r1, [r5, #4]
   1621c:	cmp	r1, #0
   16220:	bne	16178 <argp_parse@@Base+0x25c0>
   16224:	ldr	r1, [r5]
   16228:	cmp	r1, #0
   1622c:	bne	16178 <argp_parse@@Base+0x25c0>
   16230:	ldr	r1, [r5, #16]
   16234:	cmp	r1, #0
   16238:	bne	16178 <argp_parse@@Base+0x25c0>
   1623c:	ldr	r1, [r5, #20]
   16240:	cmp	r1, #0
   16244:	bne	16178 <argp_parse@@Base+0x25c0>
   16248:	add	r7, r7, #28
   1624c:	mov	r8, fp
   16250:	ldr	r0, [r5, #4]
   16254:	cmp	r0, #0
   16258:	bne	16188 <argp_parse@@Base+0x25d0>
   1625c:	ldr	r1, [r5]
   16260:	cmp	r1, #0
   16264:	bne	16188 <argp_parse@@Base+0x25d0>
   16268:	ldr	r1, [r5, #16]
   1626c:	cmp	r1, #0
   16270:	bne	16188 <argp_parse@@Base+0x25d0>
   16274:	ldr	r1, [r5, #20]
   16278:	cmp	r1, #0
   1627c:	bne	16188 <argp_parse@@Base+0x25d0>
   16280:	strb	r1, [sl]
   16284:	cmp	r6, #0
   16288:	addne	r3, r4, #12
   1628c:	addne	r6, r6, #16
   16290:	strne	r3, [sp, #28]
   16294:	bne	15e90 <argp_parse@@Base+0x22d8>
   16298:	mov	r0, r4
   1629c:	add	sp, sp, #44	; 0x2c
   162a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162a4:	ldrb	r0, [r1]
   162a8:	cmp	r0, r2
   162ac:	moveq	r2, r8
   162b0:	bne	1606c <argp_parse@@Base+0x24b4>
   162b4:	b	16088 <argp_parse@@Base+0x24d0>
   162b8:	andeq	r9, r1, r7, lsl #18
   162bc:	andeq	r0, r0, r2, asr #3
   162c0:	andeq	r9, r1, r9, ror #19
   162c4:	strdeq	r9, [r1], -r5
   162c8:	strdeq	r9, [r1], -r9	; <UNPREDICTABLE>
   162cc:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   162d0:	andeq	r9, r1, ip, lsr #20
   162d4:	andeq	r9, r1, r0, lsl r9
   162d8:	andeq	r0, r0, sl, asr #7
   162dc:	andeq	r9, r1, r5, ror #20
   162e0:	andeq	r9, r1, r1, lsr sl
   162e4:	ldrdeq	r0, [r0], -sl
   162e8:	andeq	r9, r1, r9, lsl #20
   162ec:	push	{r4, r5, r6, lr}
   162f0:	mov	r4, r0
   162f4:	mov	r5, r1
   162f8:	ldr	r0, [r0, #12]
   162fc:	ldr	r1, [r1, #12]
   16300:	cmp	r0, r1
   16304:	bne	1633c <argp_parse@@Base+0x2784>
   16308:	ldr	r0, [r5, #8]
   1630c:	ldr	r3, [r4, #8]
   16310:	mvn	r2, r0
   16314:	lsr	r2, r2, #31
   16318:	cmp	r2, r3, lsr #31
   1631c:	subne	r0, r3, r0
   16320:	subeq	r0, r0, r3
   16324:	cmp	r0, #0
   16328:	popne	{r4, r5, r6, pc}
   1632c:	ldr	r0, [r5, #4]
   16330:	ldr	r3, [r4, #4]
   16334:	sub	r0, r0, r3
   16338:	pop	{r4, r5, r6, pc}
   1633c:	bl	162ec <argp_parse@@Base+0x2734>
   16340:	cmp	r0, #0
   16344:	popne	{r4, r5, r6, pc}
   16348:	ldr	r0, [r5, #8]
   1634c:	ldr	r3, [r4, #8]
   16350:	mvn	r2, r0
   16354:	lsr	r2, r2, #31
   16358:	cmp	r2, r3, lsr #31
   1635c:	subne	r0, r3, r0
   16360:	subeq	r0, r0, r3
   16364:	cmp	r0, #0
   16368:	beq	1632c <argp_parse@@Base+0x2774>
   1636c:	pop	{r4, r5, r6, pc}
   16370:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   16374:	mov	r6, r0
   16378:	ldr	r0, [r0, #16]
   1637c:	mov	r5, r1
   16380:	cmp	r0, #0
   16384:	movne	r3, r0
   16388:	bne	16398 <argp_parse@@Base+0x27e0>
   1638c:	ldr	r3, [r6, #12]
   16390:	b	163a8 <argp_parse@@Base+0x27f0>
   16394:	mov	r3, r2
   16398:	ldr	r2, [r3, #12]
   1639c:	cmp	r2, #0
   163a0:	bne	16394 <argp_parse@@Base+0x27dc>
   163a4:	ldr	r3, [r3, #8]
   163a8:	ldr	r1, [r5, #16]
   163ac:	cmp	r1, #0
   163b0:	movne	r2, r1
   163b4:	bne	163c4 <argp_parse@@Base+0x280c>
   163b8:	ldr	r4, [r5, #12]
   163bc:	b	163d4 <argp_parse@@Base+0x281c>
   163c0:	mov	r2, ip
   163c4:	ldr	ip, [r2, #12]
   163c8:	cmp	ip, #0
   163cc:	bne	163c0 <argp_parse@@Base+0x2808>
   163d0:	ldr	r4, [r2, #8]
   163d4:	mvn	r2, r4
   163d8:	lsr	r2, r2, #31
   163dc:	cmp	r2, r3, lsr #31
   163e0:	subne	r4, r3, r4
   163e4:	subeq	r4, r4, r3
   163e8:	cmp	r4, #0
   163ec:	bne	16444 <argp_parse@@Base+0x288c>
   163f0:	adds	r4, r1, #0
   163f4:	movne	r4, #1
   163f8:	cmp	r0, #0
   163fc:	rsbeq	r4, r4, #0
   16400:	rsbne	r4, r4, #1
   16404:	cmp	r4, #0
   16408:	bne	16444 <argp_parse@@Base+0x288c>
   1640c:	cmp	r0, #0
   16410:	beq	16480 <argp_parse@@Base+0x28c8>
   16414:	ldr	r3, [r0, #20]
   16418:	ldr	r2, [r1, #20]
   1641c:	cmp	r3, r2
   16420:	ble	16450 <argp_parse@@Base+0x2898>
   16424:	ldr	r0, [r0, #12]
   16428:	ldr	r3, [r0, #20]
   1642c:	cmp	r2, r3
   16430:	blt	16424 <argp_parse@@Base+0x286c>
   16434:	bl	162ec <argp_parse@@Base+0x2734>
   16438:	cmp	r0, #0
   1643c:	movne	r4, r0
   16440:	moveq	r4, #1
   16444:	mov	r0, r4
   16448:	add	sp, sp, #8
   1644c:	pop	{r4, r5, r6, r7, r8, pc}
   16450:	bge	16474 <argp_parse@@Base+0x28bc>
   16454:	ldr	r1, [r1, #12]
   16458:	ldr	r2, [r1, #20]
   1645c:	cmp	r3, r2
   16460:	blt	16454 <argp_parse@@Base+0x289c>
   16464:	bl	162ec <argp_parse@@Base+0x2734>
   16468:	subs	r4, r0, #0
   1646c:	mvneq	r4, #0
   16470:	b	16444 <argp_parse@@Base+0x288c>
   16474:	bl	162ec <argp_parse@@Base+0x2734>
   16478:	subs	r4, r0, #0
   1647c:	bne	16444 <argp_parse@@Base+0x288c>
   16480:	ldr	r4, [r5, #12]
   16484:	ldr	r3, [r6, #12]
   16488:	mvn	r2, r4
   1648c:	lsr	r2, r2, #31
   16490:	cmp	r2, r3, lsr #31
   16494:	subne	r4, r3, r4
   16498:	subeq	r4, r4, r3
   1649c:	cmp	r4, #0
   164a0:	bne	16444 <argp_parse@@Base+0x288c>
   164a4:	mov	r0, r6
   164a8:	bl	14c9c <argp_parse@@Base+0x10e4>
   164ac:	mov	r7, r0
   164b0:	str	r0, [sp]
   164b4:	mov	r0, r5
   164b8:	bl	14c9c <argp_parse@@Base+0x10e4>
   164bc:	ldr	r3, [r6]
   164c0:	adds	r7, r7, #0
   164c4:	movne	r7, #1
   164c8:	ldr	r3, [r3, #12]
   164cc:	ands	r3, r7, r3, lsr #3
   164d0:	moveq	r7, r4
   164d4:	str	r0, [sp, #4]
   164d8:	beq	164ec <argp_parse@@Base+0x2934>
   164dc:	mov	r0, sp
   164e0:	bl	14e04 <argp_parse@@Base+0x124c>
   164e4:	adds	r7, r0, #0
   164e8:	movne	r7, #1
   164ec:	ldr	r3, [r5]
   164f0:	ldr	r0, [r3, #12]
   164f4:	ands	r0, r0, #8
   164f8:	beq	1651c <argp_parse@@Base+0x2964>
   164fc:	ldr	r3, [sp, #4]
   16500:	cmp	r3, #0
   16504:	moveq	r0, r4
   16508:	beq	1651c <argp_parse@@Base+0x2964>
   1650c:	add	r0, sp, #4
   16510:	bl	14e04 <argp_parse@@Base+0x124c>
   16514:	adds	r0, r0, #0
   16518:	movne	r0, #1
   1651c:	subs	r4, r7, r0
   16520:	bne	16444 <argp_parse@@Base+0x288c>
   16524:	ldr	r2, [r6, #20]
   16528:	mov	r3, r4
   1652c:	ldr	r1, [pc, #224]	; 16614 <argp_parse@@Base+0x2a5c>
   16530:	ldr	r2, [r2, #24]
   16534:	mov	r0, r6
   16538:	bl	14cd8 <argp_parse@@Base+0x1120>
   1653c:	ldr	r2, [r5, #20]
   16540:	mov	r3, r4
   16544:	ldr	r1, [pc, #200]	; 16614 <argp_parse@@Base+0x2a5c>
   16548:	ldr	r2, [r2, #24]
   1654c:	uxtb	r8, r0
   16550:	mov	r0, r5
   16554:	bl	14cd8 <argp_parse@@Base+0x1120>
   16558:	cmp	r8, #0
   1655c:	uxtb	r5, r0
   16560:	beq	1656c <argp_parse@@Base+0x29b4>
   16564:	mov	r6, r8
   16568:	b	1657c <argp_parse@@Base+0x29c4>
   1656c:	ldr	r3, [sp]
   16570:	cmp	r3, #0
   16574:	ldrbne	r6, [r3]
   16578:	beq	16564 <argp_parse@@Base+0x29ac>
   1657c:	cmp	r5, #0
   16580:	beq	1658c <argp_parse@@Base+0x29d4>
   16584:	mov	r7, r5
   16588:	b	1659c <argp_parse@@Base+0x29e4>
   1658c:	ldr	r3, [sp, #4]
   16590:	cmp	r3, #0
   16594:	ldrbne	r7, [r3]
   16598:	beq	16584 <argp_parse@@Base+0x29cc>
   1659c:	bl	118b8 <__ctype_tolower_loc@plt>
   165a0:	ldr	r3, [r0]
   165a4:	ldr	r4, [r3, r6, lsl #2]
   165a8:	ldr	r3, [r3, r7, lsl #2]
   165ac:	subs	r4, r4, r3
   165b0:	bne	16444 <argp_parse@@Base+0x288c>
   165b4:	subs	r4, r7, r6
   165b8:	bne	16444 <argp_parse@@Base+0x288c>
   165bc:	adds	r4, r5, #0
   165c0:	movne	r4, #1
   165c4:	cmp	r8, #0
   165c8:	rsbeq	r4, r4, #0
   165cc:	rsbne	r4, r4, #1
   165d0:	cmp	r4, #0
   165d4:	bne	16444 <argp_parse@@Base+0x288c>
   165d8:	cmp	r8, #0
   165dc:	bne	16444 <argp_parse@@Base+0x288c>
   165e0:	ldm	sp, {r0, r1}
   165e4:	adds	r4, r1, #0
   165e8:	movne	r4, #1
   165ec:	cmp	r0, #0
   165f0:	rsbeq	r4, r4, #0
   165f4:	rsbne	r4, r4, #1
   165f8:	cmp	r4, #0
   165fc:	bne	16444 <argp_parse@@Base+0x288c>
   16600:	cmp	r0, #0
   16604:	beq	16444 <argp_parse@@Base+0x288c>
   16608:	bl	117f8 <strcasecmp@plt>
   1660c:	mov	r4, r0
   16610:	b	16444 <argp_parse@@Base+0x288c>
   16614:			; <UNDEFINED> instruction: 0x00014db8

00016618 <argp_failure@@Base>:
   16618:	push	{r3}		; (str r3, [sp, #-4]!)
   1661c:	push	{r4, r5, r6, r7, r8, lr}
   16620:	sub	sp, sp, #204	; 0xcc
   16624:	subs	r5, r0, #0
   16628:	mov	r7, r1
   1662c:	mov	r6, r2
   16630:	ldr	r8, [sp, #228]	; 0xe4
   16634:	beq	16660 <argp_failure@@Base+0x48>
   16638:	ldr	r3, [r5, #16]
   1663c:	tst	r3, #2
   16640:	bne	16650 <argp_failure@@Base+0x38>
   16644:	ldr	r4, [r5, #44]	; 0x2c
   16648:	cmp	r4, #0
   1664c:	bne	16684 <argp_failure@@Base+0x6c>
   16650:	add	sp, sp, #204	; 0xcc
   16654:	pop	{r4, r5, r6, r7, r8, lr}
   16658:	add	sp, sp, #4
   1665c:	bx	lr
   16660:	ldr	r3, [pc, #244]	; 1675c <argp_failure@@Base+0x144>
   16664:	ldr	r4, [r3]
   16668:	cmp	r4, #0
   1666c:	beq	16650 <argp_failure@@Base+0x38>
   16670:	mov	r0, r4
   16674:	bl	11a20 <flockfile@plt>
   16678:	ldr	r3, [pc, #224]	; 16760 <argp_failure@@Base+0x148>
   1667c:	ldr	r0, [r3]
   16680:	b	16690 <argp_failure@@Base+0x78>
   16684:	mov	r0, r4
   16688:	bl	11a20 <flockfile@plt>
   1668c:	ldr	r0, [r5, #40]	; 0x28
   16690:	mov	r1, r4
   16694:	bl	11690 <fputs_unlocked@plt>
   16698:	cmp	r8, #0
   1669c:	beq	166d0 <argp_failure@@Base+0xb8>
   166a0:	add	r3, sp, #232	; 0xe8
   166a4:	mov	r1, r4
   166a8:	mov	r0, #58	; 0x3a
   166ac:	str	r3, [sp]
   166b0:	bl	11b04 <putc_unlocked@plt>
   166b4:	mov	r1, r4
   166b8:	mov	r0, #32
   166bc:	bl	11b04 <putc_unlocked@plt>
   166c0:	ldr	r2, [sp]
   166c4:	mov	r1, r8
   166c8:	mov	r0, r4
   166cc:	bl	119e4 <vfprintf@plt>
   166d0:	cmp	r6, #0
   166d4:	beq	16724 <argp_failure@@Base+0x10c>
   166d8:	mov	r1, r4
   166dc:	mov	r0, #58	; 0x3a
   166e0:	bl	11b04 <putc_unlocked@plt>
   166e4:	mov	r1, r4
   166e8:	mov	r0, #32
   166ec:	bl	11b04 <putc_unlocked@plt>
   166f0:	mov	r2, #200	; 0xc8
   166f4:	mov	r1, sp
   166f8:	mov	r0, r6
   166fc:	bl	11954 <strerror_r@plt>
   16700:	cmp	r0, #0
   16704:	bne	1671c <argp_failure@@Base+0x104>
   16708:	mov	r0, r6
   1670c:	bl	118ac <strerror@plt>
   16710:	ldr	r3, [pc, #76]	; 16764 <argp_failure@@Base+0x14c>
   16714:	cmp	r0, #0
   16718:	moveq	r0, r3
   1671c:	mov	r1, r4
   16720:	bl	11690 <fputs_unlocked@plt>
   16724:	mov	r1, r4
   16728:	mov	r0, #10
   1672c:	bl	11b04 <putc_unlocked@plt>
   16730:	mov	r0, r4
   16734:	bl	11804 <funlockfile@plt>
   16738:	cmp	r7, #0
   1673c:	beq	16650 <argp_failure@@Base+0x38>
   16740:	cmp	r5, #0
   16744:	beq	16754 <argp_failure@@Base+0x13c>
   16748:	ldr	r3, [r5, #16]
   1674c:	tst	r3, #32
   16750:	bne	16650 <argp_failure@@Base+0x38>
   16754:	mov	r0, r7
   16758:	bl	118f4 <exit@plt>
   1675c:	andeq	sl, r2, r8, lsl #4
   16760:	andeq	sl, r2, r0, lsl #4
   16764:	andeq	r9, r1, lr, ror sl
   16768:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1676c:	add	fp, sp, #32
   16770:	sub	sp, sp, #116	; 0x74
   16774:	str	r3, [fp, #-104]	; 0xffffff98
   16778:	subs	r3, r2, #0
   1677c:	str	r0, [fp, #-108]	; 0xffffff94
   16780:	str	r1, [fp, #-96]	; 0xffffffa0
   16784:	str	r3, [fp, #-112]	; 0xffffff90
   16788:	beq	16804 <argp_failure@@Base+0x1ec>
   1678c:	ldr	r5, [pc, #3996]	; 17730 <argp_failure@@Base+0x1118>
   16790:	mov	r0, r3
   16794:	bl	11a20 <flockfile@plt>
   16798:	ldr	r9, [r5, #36]	; 0x24
   1679c:	cmp	r9, #0
   167a0:	bne	167dc <argp_failure@@Base+0x1c4>
   167a4:	ldr	r0, [pc, #3976]	; 17734 <argp_failure@@Base+0x111c>
   167a8:	bl	11870 <getenv@plt>
   167ac:	mov	ip, r5
   167b0:	sub	lr, fp, #76	; 0x4c
   167b4:	mov	r4, r0
   167b8:	ldm	ip!, {r0, r1, r2, r3}
   167bc:	cmp	r4, #0
   167c0:	movne	r5, #1
   167c4:	stmia	lr!, {r0, r1, r2, r3}
   167c8:	ldm	ip!, {r0, r1, r2, r3}
   167cc:	stmia	lr!, {r0, r1, r2, r3}
   167d0:	ldm	ip, {r0, r1}
   167d4:	stm	lr, {r0, r1}
   167d8:	bne	16a58 <argp_failure@@Base+0x440>
   167dc:	ldr	r5, [pc, #3916]	; 17730 <argp_failure@@Base+0x1118>
   167e0:	mov	r3, #0
   167e4:	mov	r1, r3
   167e8:	ldr	r2, [r5, #32]
   167ec:	ldr	r0, [fp, #-112]	; 0xffffff90
   167f0:	bl	183d4 <argp_error@@Base+0xb78>
   167f4:	subs	r4, r0, #0
   167f8:	bne	16aec <argp_failure@@Base+0x4d4>
   167fc:	ldr	r0, [fp, #-112]	; 0xffffff90
   16800:	bl	11804 <funlockfile@plt>
   16804:	sub	sp, fp, #32
   16808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1680c:	mov	r3, r1
   16810:	mov	r1, r3
   16814:	str	r3, [fp, #-100]	; 0xffffff9c
   16818:	ldrb	r0, [r1], #1
   1681c:	lsl	r2, r0, #1
   16820:	ldrh	r2, [r6, r2]
   16824:	tst	r2, #8192	; 0x2000
   16828:	bne	1680c <argp_failure@@Base+0x1f4>
   1682c:	ands	r2, r2, #1024	; 0x400
   16830:	movne	r2, r3
   16834:	bne	168b0 <argp_failure@@Base+0x298>
   16838:	cmp	r0, #0
   1683c:	beq	16aa8 <argp_failure@@Base+0x490>
   16840:	str	r3, [sp]
   16844:	mov	r1, r2
   16848:	ldr	r3, [pc, #3816]	; 17738 <argp_failure@@Base+0x1120>
   1684c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16850:	bl	16618 <argp_failure@@Base>
   16854:	ldr	ip, [fp, #-44]	; 0xffffffd4
   16858:	ldr	r3, [pc, #3804]	; 1773c <argp_failure@@Base+0x1124>
   1685c:	mov	r0, #9
   16860:	ldrb	r2, [r3, #14]
   16864:	cmp	r2, #0
   16868:	bne	16ab0 <argp_failure@@Base+0x498>
   1686c:	ldrb	r1, [r3, #15]
   16870:	cmp	r1, #32
   16874:	beq	16ab0 <argp_failure@@Base+0x498>
   16878:	sub	lr, fp, #36	; 0x24
   1687c:	add	r1, lr, r1
   16880:	ldr	r1, [r1, #-40]	; 0xffffffd8
   16884:	cmp	r1, ip
   16888:	blt	16ab0 <argp_failure@@Base+0x498>
   1688c:	str	r3, [sp, #4]
   16890:	ldr	r3, [pc, #3752]	; 17740 <argp_failure@@Base+0x1128>
   16894:	mov	r1, r2
   16898:	str	r3, [sp]
   1689c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   168a0:	ldr	r3, [pc, #3740]	; 17744 <argp_failure@@Base+0x112c>
   168a4:	bl	16618 <argp_failure@@Base>
   168a8:	b	167dc <argp_failure@@Base+0x1c4>
   168ac:	mov	r2, lr
   168b0:	mov	lr, r2
   168b4:	ldrb	r1, [lr], #1
   168b8:	cmp	r1, #95	; 0x5f
   168bc:	cmpne	r1, #45	; 0x2d
   168c0:	lsl	ip, r1, #1
   168c4:	moveq	r1, #1
   168c8:	ldrh	ip, [r6, ip]
   168cc:	movne	r1, #0
   168d0:	lsl	ip, ip, #28
   168d4:	orrs	r1, r1, ip, lsr #31
   168d8:	bne	168ac <argp_failure@@Base+0x294>
   168dc:	sub	r8, r2, r3
   168e0:	mov	r4, r2
   168e4:	ldrb	r1, [r2], #1
   168e8:	lsl	ip, r1, #1
   168ec:	ldrh	ip, [r6, ip]
   168f0:	tst	ip, #8192	; 0x2000
   168f4:	bne	168e0 <argp_failure@@Base+0x2c8>
   168f8:	cmp	r1, #44	; 0x2c
   168fc:	cmpne	r1, #0
   16900:	beq	17670 <argp_failure@@Base+0x1058>
   16904:	cmp	r1, #61	; 0x3d
   16908:	bne	16928 <argp_failure@@Base+0x310>
   1690c:	mov	r4, r2
   16910:	add	r2, r2, #1
   16914:	ldrb	r3, [r4]
   16918:	lsl	r3, r3, #1
   1691c:	ldrh	r3, [r6, r3]
   16920:	tst	r3, #8192	; 0x2000
   16924:	bne	1690c <argp_failure@@Base+0x2f4>
   16928:	ldrb	r3, [r4]
   1692c:	lsl	r3, r3, #1
   16930:	ldrh	r3, [r6, r3]
   16934:	tst	r3, #2048	; 0x800
   16938:	moveq	sl, r9
   1693c:	moveq	r7, r9
   16940:	beq	169bc <argp_failure@@Base+0x3a4>
   16944:	mov	r0, r4
   16948:	bl	11a38 <atoi@plt>
   1694c:	mov	r3, r4
   16950:	mov	r7, r0
   16954:	ldrb	r2, [r3]
   16958:	add	r1, r3, #1
   1695c:	lsl	r2, r2, #1
   16960:	ldrh	r2, [r6, r2]
   16964:	tst	r2, #2048	; 0x800
   16968:	bne	16a74 <argp_failure@@Base+0x45c>
   1696c:	mov	r4, r3
   16970:	add	r3, r3, #1
   16974:	ldrb	r2, [r4]
   16978:	lsl	r2, r2, #1
   1697c:	ldrh	r2, [r6, r2]
   16980:	tst	r2, #8192	; 0x2000
   16984:	bne	1696c <argp_failure@@Base+0x354>
   16988:	mov	sl, r9
   1698c:	b	169bc <argp_failure@@Base+0x3a4>
   16990:	ldrb	r2, [r3, #1]
   16994:	cmp	r2, #111	; 0x6f
   16998:	bne	17678 <argp_failure@@Base+0x1060>
   1699c:	ldrb	r2, [r3, #2]
   169a0:	cmp	r2, #45	; 0x2d
   169a4:	bne	17678 <argp_failure@@Base+0x1060>
   169a8:	sub	r8, r8, #3
   169ac:	mov	r7, r9
   169b0:	mov	sl, r5
   169b4:	add	r3, r3, #3
   169b8:	str	r3, [fp, #-100]	; 0xffffff9c
   169bc:	ldr	r6, [pc, #3448]	; 1773c <argp_failure@@Base+0x1124>
   169c0:	mov	r3, #9
   169c4:	str	r3, [fp, #-116]	; 0xffffff8c
   169c8:	mov	r0, r6
   169cc:	bl	11900 <strlen@plt>
   169d0:	cmp	r0, r8
   169d4:	bne	16a90 <argp_failure@@Base+0x478>
   169d8:	mov	r2, r8
   169dc:	mov	r1, r6
   169e0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   169e4:	bl	11ab0 <strncmp@plt>
   169e8:	cmp	r0, #0
   169ec:	bne	16a90 <argp_failure@@Base+0x478>
   169f0:	cmp	sl, #0
   169f4:	beq	16a7c <argp_failure@@Base+0x464>
   169f8:	ldrb	r2, [r6, #14]
   169fc:	cmp	r2, #0
   16a00:	bne	16a7c <argp_failure@@Base+0x464>
   16a04:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16a08:	str	r8, [sp]
   16a0c:	str	r3, [sp, #4]
   16a10:	mov	r1, r2
   16a14:	ldr	r3, [pc, #3372]	; 17748 <argp_failure@@Base+0x1130>
   16a18:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16a1c:	bl	16618 <argp_failure@@Base>
   16a20:	ldr	r3, [pc, #3364]	; 1774c <argp_failure@@Base+0x1134>
   16a24:	cmp	r6, r3
   16a28:	bne	16a4c <argp_failure@@Base+0x434>
   16a2c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16a30:	mov	r2, #0
   16a34:	str	r3, [sp, #4]
   16a38:	str	r8, [sp]
   16a3c:	ldr	r3, [pc, #3340]	; 17750 <argp_failure@@Base+0x1138>
   16a40:	mov	r1, r2
   16a44:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16a48:	bl	16618 <argp_failure@@Base>
   16a4c:	ldrb	r3, [r4]
   16a50:	cmp	r3, #44	; 0x2c
   16a54:	addeq	r4, r4, #1
   16a58:	ldrb	r3, [r4]
   16a5c:	cmp	r3, #0
   16a60:	beq	16854 <argp_failure@@Base+0x23c>
   16a64:	bl	118dc <__ctype_b_loc@plt>
   16a68:	mov	r3, r4
   16a6c:	ldr	r6, [r0]
   16a70:	b	16810 <argp_failure@@Base+0x1f8>
   16a74:	mov	r3, r1
   16a78:	b	16954 <argp_failure@@Base+0x33c>
   16a7c:	ldrb	r3, [r6, #15]
   16a80:	sub	r2, fp, #36	; 0x24
   16a84:	add	r3, r2, r3
   16a88:	str	r7, [r3, #-40]	; 0xffffffd8
   16a8c:	b	16a20 <argp_failure@@Base+0x408>
   16a90:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16a94:	add	r6, r6, #16
   16a98:	subs	r3, r3, #1
   16a9c:	str	r3, [fp, #-116]	; 0xffffff8c
   16aa0:	bne	169c8 <argp_failure@@Base+0x3b0>
   16aa4:	b	16a20 <argp_failure@@Base+0x408>
   16aa8:	mov	r4, r3
   16aac:	b	16a58 <argp_failure@@Base+0x440>
   16ab0:	subs	r0, r0, #1
   16ab4:	add	r3, r3, #16
   16ab8:	bne	16860 <argp_failure@@Base+0x248>
   16abc:	sub	lr, fp, #76	; 0x4c
   16ac0:	ldr	r4, [pc, #3176]	; 17730 <argp_failure@@Base+0x1118>
   16ac4:	ldm	lr!, {r0, r1, r2, r3}
   16ac8:	mov	ip, r4
   16acc:	stmia	ip!, {r0, r1, r2, r3}
   16ad0:	ldm	lr!, {r0, r1, r2, r3}
   16ad4:	stmia	ip!, {r0, r1, r2, r3}
   16ad8:	mov	r3, #1
   16adc:	ldm	lr, {r0, r1}
   16ae0:	stm	ip, {r0, r1}
   16ae4:	str	r3, [r4, #36]	; 0x24
   16ae8:	b	167dc <argp_failure@@Base+0x1c4>
   16aec:	ldr	r3, [fp, #-104]	; 0xffffff98
   16af0:	ands	r3, r3, #11
   16af4:	moveq	sl, r3
   16af8:	beq	16b58 <argp_failure@@Base+0x540>
   16afc:	mov	r1, #0
   16b00:	ldr	r0, [fp, #-108]	; 0xffffff94
   16b04:	bl	15ce4 <argp_parse@@Base+0x212c>
   16b08:	ldr	r1, [pc, #3140]	; 17754 <argp_failure@@Base+0x113c>
   16b0c:	mov	sl, r0
   16b10:	bl	15c70 <argp_parse@@Base+0x20b8>
   16b14:	ldr	r1, [pc, #3132]	; 17758 <argp_failure@@Base+0x1140>
   16b18:	mov	r0, sl
   16b1c:	bl	15c70 <argp_parse@@Base+0x20b8>
   16b20:	ldr	r1, [sl, #4]
   16b24:	cmp	r1, #0
   16b28:	beq	16b58 <argp_failure@@Base+0x540>
   16b2c:	ldr	r0, [sl]
   16b30:	mov	r3, #0
   16b34:	mov	r2, r0
   16b38:	str	r3, [r2, #24]
   16b3c:	add	r3, r3, #1
   16b40:	cmp	r1, r3
   16b44:	add	r2, r2, #28
   16b48:	bne	16b38 <argp_failure@@Base+0x520>
   16b4c:	ldr	r3, [pc, #3080]	; 1775c <argp_failure@@Base+0x1144>
   16b50:	mov	r2, #28
   16b54:	bl	11a50 <qsort@plt>
   16b58:	ldr	r3, [fp, #-104]	; 0xffffff98
   16b5c:	ands	r3, r3, #3
   16b60:	moveq	r5, r3
   16b64:	beq	16d04 <argp_failure@@Base+0x6ec>
   16b68:	ldr	r0, [fp, #-108]	; 0xffffff94
   16b6c:	bl	14ebc <argp_parse@@Base+0x1304>
   16b70:	mov	r1, #0
   16b74:	ldr	r6, [pc, #3044]	; 17760 <argp_failure@@Base+0x1148>
   16b78:	mov	r9, #1
   16b7c:	add	r3, r0, #14
   16b80:	bic	r3, r3, #7
   16b84:	sub	sp, sp, r3
   16b88:	add	r7, sp, #8
   16b8c:	mov	r2, r0
   16b90:	mov	r0, r7
   16b94:	bl	1196c <memset@plt>
   16b98:	ldr	r2, [r4, #24]
   16b9c:	ldr	r3, [r4, #28]
   16ba0:	ldr	r8, [r5, #28]
   16ba4:	sub	r3, r3, r2
   16ba8:	ldr	r2, [r4, #16]
   16bac:	cmp	r3, r2
   16bb0:	bls	16bbc <argp_failure@@Base+0x5a4>
   16bb4:	mov	r0, r4
   16bb8:	bl	1844c <argp_error@@Base+0xbf0>
   16bbc:	ldr	r3, [r4, #12]
   16bc0:	cmp	r9, #0
   16bc4:	str	r8, [r4, #12]
   16bc8:	ldrne	r2, [pc, #2964]	; 17764 <argp_failure@@Base+0x114c>
   16bcc:	ldreq	r2, [pc, #2964]	; 17768 <argp_failure@@Base+0x1150>
   16bd0:	str	r3, [fp, #-100]	; 0xffffff9c
   16bd4:	ldr	r1, [pc, #2960]	; 1776c <argp_failure@@Base+0x1154>
   16bd8:	ldr	r3, [fp, #4]
   16bdc:	mov	r0, r4
   16be0:	str	r7, [fp, #-76]	; 0xffffffb4
   16be4:	bl	18980 <argp_error@@Base+0x1124>
   16be8:	ldr	r2, [r4, #24]
   16bec:	ldr	r3, [r4, #28]
   16bf0:	ldr	r8, [r5, #28]
   16bf4:	sub	r3, r3, r2
   16bf8:	ldr	r2, [r4, #16]
   16bfc:	cmp	r3, r2
   16c00:	bls	16c0c <argp_failure@@Base+0x5f4>
   16c04:	mov	r0, r4
   16c08:	bl	1844c <argp_error@@Base+0xbf0>
   16c0c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16c10:	ldr	r9, [r4, #4]
   16c14:	tst	r3, #2
   16c18:	str	r8, [r4, #4]
   16c1c:	beq	16f80 <argp_failure@@Base+0x968>
   16c20:	ldr	r3, [sl, #4]
   16c24:	cmp	r3, #0
   16c28:	beq	16c68 <argp_failure@@Base+0x650>
   16c2c:	ldr	r3, [r4, #28]
   16c30:	ldr	r2, [r4, #32]
   16c34:	add	r3, r3, #12
   16c38:	cmp	r2, r3
   16c3c:	bcc	16f68 <argp_failure@@Base+0x950>
   16c40:	ldr	r2, [r4, #28]
   16c44:	ldr	r3, [r6]
   16c48:	str	r3, [r2]
   16c4c:	ldr	r3, [r6, #4]
   16c50:	str	r3, [r2, #4]
   16c54:	ldr	r3, [r6, #8]
   16c58:	str	r3, [r2, #8]
   16c5c:	ldr	r3, [r4, #28]
   16c60:	add	r3, r3, #12
   16c64:	str	r3, [r4, #28]
   16c68:	mov	r3, #1
   16c6c:	sub	r2, fp, #76	; 0x4c
   16c70:	str	r4, [sp]
   16c74:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16c78:	ldr	r0, [fp, #-108]	; 0xffffff94
   16c7c:	bl	158d0 <argp_parse@@Base+0x1d18>
   16c80:	ldr	r2, [r4, #24]
   16c84:	ldr	r3, [r4, #28]
   16c88:	sub	r3, r3, r2
   16c8c:	ldr	r2, [r4, #16]
   16c90:	cmp	r3, r2
   16c94:	mov	r8, r0
   16c98:	bls	16ca4 <argp_failure@@Base+0x68c>
   16c9c:	mov	r0, r4
   16ca0:	bl	1844c <argp_error@@Base+0xbf0>
   16ca4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16ca8:	ldr	r2, [r4, #24]
   16cac:	str	r3, [r4, #12]
   16cb0:	ldr	r3, [r4, #28]
   16cb4:	sub	r3, r3, r2
   16cb8:	ldr	r2, [r4, #16]
   16cbc:	cmp	r3, r2
   16cc0:	bls	16ccc <argp_failure@@Base+0x6b4>
   16cc4:	mov	r0, r4
   16cc8:	bl	1844c <argp_error@@Base+0xbf0>
   16ccc:	ldr	r2, [r4, #28]
   16cd0:	ldr	r3, [r4, #32]
   16cd4:	str	r9, [r4, #4]
   16cd8:	cmp	r2, r3
   16cdc:	bcs	16f9c <argp_failure@@Base+0x984>
   16ce0:	ldr	r3, [r4, #28]
   16ce4:	add	r2, r3, #1
   16ce8:	str	r2, [r4, #28]
   16cec:	mov	r2, #10
   16cf0:	strb	r2, [r3]
   16cf4:	mov	r9, #0
   16cf8:	cmp	r8, r9
   16cfc:	bne	16b98 <argp_failure@@Base+0x580>
   16d00:	mov	r5, #1
   16d04:	ldr	r3, [fp, #-104]	; 0xffffff98
   16d08:	tst	r3, #16
   16d0c:	beq	16d34 <argp_failure@@Base+0x71c>
   16d10:	mov	r3, #1
   16d14:	str	r3, [sp]
   16d18:	mov	r3, #0
   16d1c:	str	r4, [sp, #4]
   16d20:	mov	r2, r3
   16d24:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16d28:	ldr	r0, [fp, #-108]	; 0xffffff94
   16d2c:	bl	15338 <argp_parse@@Base+0x1780>
   16d30:	orr	r5, r5, r0
   16d34:	ldr	r3, [fp, #-104]	; 0xffffff98
   16d38:	tst	r3, #4
   16d3c:	beq	16d58 <argp_failure@@Base+0x740>
   16d40:	ldr	r3, [fp, #4]
   16d44:	ldr	r1, [pc, #2596]	; 17770 <argp_failure@@Base+0x1158>
   16d48:	mov	r2, r3
   16d4c:	mov	r0, r4
   16d50:	bl	18980 <argp_error@@Base+0x1124>
   16d54:	mov	r5, #1
   16d58:	ldr	r3, [fp, #-104]	; 0xffffff98
   16d5c:	tst	r3, #8
   16d60:	beq	16eb8 <argp_failure@@Base+0x8a0>
   16d64:	ldr	r3, [sl, #4]
   16d68:	cmp	r3, #0
   16d6c:	beq	16eb8 <argp_failure@@Base+0x8a0>
   16d70:	cmp	r5, #0
   16d74:	beq	16d9c <argp_failure@@Base+0x784>
   16d78:	ldr	r2, [r4, #28]
   16d7c:	ldr	r3, [r4, #32]
   16d80:	cmp	r2, r3
   16d84:	bcs	16fb4 <argp_failure@@Base+0x99c>
   16d88:	ldr	r3, [r4, #28]
   16d8c:	add	r2, r3, #1
   16d90:	str	r2, [r4, #28]
   16d94:	mov	r2, #10
   16d98:	strb	r2, [r3]
   16d9c:	mov	r3, #0
   16da0:	str	r3, [fp, #-88]	; 0xffffffa8
   16da4:	str	r3, [fp, #-84]	; 0xffffffac
   16da8:	str	r3, [fp, #-80]	; 0xffffffb0
   16dac:	ldr	r3, [sl]
   16db0:	str	r3, [fp, #-100]	; 0xffffff9c
   16db4:	ldr	r3, [sl, #4]
   16db8:	str	r3, [fp, #-116]	; 0xffffff8c
   16dbc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16dc0:	cmp	r3, #0
   16dc4:	bne	16fcc <argp_failure@@Base+0x9b4>
   16dc8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16dcc:	cmp	r3, #0
   16dd0:	beq	16eb4 <argp_failure@@Base+0x89c>
   16dd4:	ldr	r3, [pc, #2388]	; 17730 <argp_failure@@Base+0x1118>
   16dd8:	ldr	r3, [r3, #4]
   16ddc:	cmp	r3, #0
   16de0:	beq	16eb4 <argp_failure@@Base+0x89c>
   16de4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16de8:	ldr	r1, [pc, #2436]	; 17774 <argp_failure@@Base+0x115c>
   16dec:	cmp	r3, #0
   16df0:	ldr	r0, [pc, #2432]	; 17778 <argp_failure@@Base+0x1160>
   16df4:	ldrne	r2, [r3]
   16df8:	ldreq	r2, [fp, #-96]	; 0xffffffa0
   16dfc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16e00:	bl	14f9c <argp_parse@@Base+0x13e4>
   16e04:	subs	r5, r0, #0
   16e08:	beq	16eb4 <argp_failure@@Base+0x89c>
   16e0c:	ldrb	r3, [r5]
   16e10:	cmp	r3, #0
   16e14:	beq	16ea0 <argp_failure@@Base+0x888>
   16e18:	ldr	r2, [r4, #28]
   16e1c:	ldr	r3, [r4, #32]
   16e20:	cmp	r2, r3
   16e24:	bcs	17610 <argp_failure@@Base+0xff8>
   16e28:	ldr	r3, [r4, #28]
   16e2c:	add	r2, r3, #1
   16e30:	str	r2, [r4, #28]
   16e34:	mov	r2, #10
   16e38:	strb	r2, [r3]
   16e3c:	mov	r0, r5
   16e40:	bl	11900 <strlen@plt>
   16e44:	subs	r6, r0, #0
   16e48:	beq	16e7c <argp_failure@@Base+0x864>
   16e4c:	ldr	r3, [r4, #28]
   16e50:	ldr	r2, [r4, #32]
   16e54:	add	r3, r3, r6
   16e58:	cmp	r2, r3
   16e5c:	bcc	17628 <argp_failure@@Base+0x1010>
   16e60:	mov	r2, r6
   16e64:	mov	r1, r5
   16e68:	ldr	r0, [r4, #28]
   16e6c:	bl	1178c <memcpy@plt>
   16e70:	ldr	r3, [r4, #28]
   16e74:	add	r6, r3, r6
   16e78:	str	r6, [r4, #28]
   16e7c:	ldr	r2, [r4, #28]
   16e80:	ldr	r3, [r4, #32]
   16e84:	cmp	r2, r3
   16e88:	bcs	17640 <argp_failure@@Base+0x1028>
   16e8c:	ldr	r3, [r4, #28]
   16e90:	add	r2, r3, #1
   16e94:	str	r2, [r4, #28]
   16e98:	mov	r2, #10
   16e9c:	strb	r2, [r3]
   16ea0:	ldr	r3, [pc, #2256]	; 17778 <argp_failure@@Base+0x1160>
   16ea4:	cmp	r5, r3
   16ea8:	beq	16eb4 <argp_failure@@Base+0x89c>
   16eac:	mov	r0, r5
   16eb0:	bl	14654 <argp_parse@@Base+0xa9c>
   16eb4:	mov	r5, #1
   16eb8:	ldr	r3, [fp, #-104]	; 0xffffff98
   16ebc:	tst	r3, #32
   16ec0:	beq	16ee8 <argp_failure@@Base+0x8d0>
   16ec4:	mov	r3, #0
   16ec8:	str	r3, [sp]
   16ecc:	str	r4, [sp, #4]
   16ed0:	mov	r3, r5
   16ed4:	mov	r2, #1
   16ed8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16edc:	ldr	r0, [fp, #-108]	; 0xffffff94
   16ee0:	bl	15338 <argp_parse@@Base+0x1780>
   16ee4:	orr	r5, r5, r0
   16ee8:	ldr	r3, [fp, #-104]	; 0xffffff98
   16eec:	tst	r3, #64	; 0x40
   16ef0:	beq	16f44 <argp_failure@@Base+0x92c>
   16ef4:	ldr	r3, [pc, #2176]	; 1777c <argp_failure@@Base+0x1164>
   16ef8:	mov	r6, r3
   16efc:	ldr	r2, [r3]
   16f00:	cmp	r2, #0
   16f04:	beq	16f44 <argp_failure@@Base+0x92c>
   16f08:	cmp	r5, #0
   16f0c:	beq	16f34 <argp_failure@@Base+0x91c>
   16f10:	ldr	r2, [r4, #28]
   16f14:	ldr	r3, [r4, #32]
   16f18:	cmp	r2, r3
   16f1c:	bcs	17658 <argp_failure@@Base+0x1040>
   16f20:	ldr	r3, [r4, #28]
   16f24:	add	r2, r3, #1
   16f28:	str	r2, [r4, #28]
   16f2c:	mov	r2, #10
   16f30:	strb	r2, [r3]
   16f34:	ldr	r2, [r6]
   16f38:	ldr	r1, [pc, #2112]	; 17780 <argp_failure@@Base+0x1168>
   16f3c:	mov	r0, r4
   16f40:	bl	18980 <argp_error@@Base+0x1124>
   16f44:	ldr	r0, [fp, #-112]	; 0xffffff90
   16f48:	bl	11804 <funlockfile@plt>
   16f4c:	cmp	sl, #0
   16f50:	beq	16f5c <argp_failure@@Base+0x944>
   16f54:	mov	r0, sl
   16f58:	bl	14e70 <argp_parse@@Base+0x12b8>
   16f5c:	mov	r0, r4
   16f60:	bl	1885c <argp_error@@Base+0x1000>
   16f64:	b	16804 <argp_failure@@Base+0x1ec>
   16f68:	mov	r1, #12
   16f6c:	mov	r0, r4
   16f70:	bl	1889c <argp_error@@Base+0x1040>
   16f74:	cmp	r0, #0
   16f78:	bne	16c40 <argp_failure@@Base+0x628>
   16f7c:	b	16c68 <argp_failure@@Base+0x650>
   16f80:	mov	r1, r4
   16f84:	mov	r0, sl
   16f88:	bl	15ae4 <argp_parse@@Base+0x1f2c>
   16f8c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16f90:	orr	r3, r3, #2
   16f94:	str	r3, [fp, #-104]	; 0xffffff98
   16f98:	b	16c68 <argp_failure@@Base+0x650>
   16f9c:	mov	r1, #1
   16fa0:	mov	r0, r4
   16fa4:	bl	1889c <argp_error@@Base+0x1040>
   16fa8:	cmp	r0, #0
   16fac:	bne	16ce0 <argp_failure@@Base+0x6c8>
   16fb0:	b	16cf4 <argp_failure@@Base+0x6dc>
   16fb4:	mov	r1, #1
   16fb8:	mov	r0, r4
   16fbc:	bl	1889c <argp_error@@Base+0x1040>
   16fc0:	cmp	r0, #0
   16fc4:	bne	16d88 <argp_failure@@Base+0x770>
   16fc8:	b	16d9c <argp_failure@@Base+0x784>
   16fcc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16fd0:	ldr	r2, [r4, #24]
   16fd4:	ldr	r5, [r3]
   16fd8:	ldr	r9, [r3, #8]
   16fdc:	ldr	r3, [r4, #28]
   16fe0:	sub	r3, r3, r2
   16fe4:	ldr	r2, [r4, #16]
   16fe8:	cmp	r3, r2
   16fec:	bls	16ff8 <argp_failure@@Base+0x9e0>
   16ff0:	mov	r0, r4
   16ff4:	bl	1844c <argp_error@@Base+0xbf0>
   16ff8:	ldr	r2, [r4, #12]
   16ffc:	ldr	r3, [r4, #4]
   17000:	str	r2, [fp, #-128]	; 0xffffff80
   17004:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17008:	str	r3, [fp, #-124]	; 0xffffff84
   1700c:	mov	r3, #0
   17010:	str	r3, [r4, #4]
   17014:	str	r2, [fp, #-76]	; 0xffffffb4
   17018:	sub	r2, fp, #88	; 0x58
   1701c:	str	r2, [fp, #-68]	; 0xffffffbc
   17020:	mov	r2, #1
   17024:	str	r2, [fp, #-64]	; 0xffffffc0
   17028:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1702c:	str	r4, [fp, #-72]	; 0xffffffb8
   17030:	str	r2, [fp, #-60]	; 0xffffffc4
   17034:	ldr	r2, [r5, #12]
   17038:	ands	r2, r2, #8
   1703c:	str	r2, [fp, #-120]	; 0xffffff88
   17040:	ldreq	r3, [fp, #-100]	; 0xffffff9c
   17044:	ldreq	r2, [r3, #4]
   17048:	addeq	r3, r5, #24
   1704c:	beq	17078 <argp_failure@@Base+0xa60>
   17050:	str	r3, [fp, #-120]	; 0xffffff88
   17054:	b	17080 <argp_failure@@Base+0xa68>
   17058:	ldr	r1, [r3, #-24]	; 0xffffffe8
   1705c:	cmp	r1, #0
   17060:	beq	17070 <argp_failure@@Base+0xa58>
   17064:	ldr	r1, [r3, #-12]
   17068:	tst	r1, #2
   1706c:	beq	17208 <argp_failure@@Base+0xbf0>
   17070:	sub	r2, r2, #1
   17074:	add	r3, r3, #24
   17078:	cmp	r2, #0
   1707c:	bne	17058 <argp_failure@@Base+0xa40>
   17080:	ldr	r3, [pc, #1704]	; 17730 <argp_failure@@Base+0x1118>
   17084:	ldr	r2, [r4, #24]
   17088:	ldr	r6, [r3, #8]
   1708c:	ldr	r3, [r4, #28]
   17090:	sub	r3, r3, r2
   17094:	ldr	r2, [r4, #16]
   17098:	cmp	r3, r2
   1709c:	bls	170a8 <argp_failure@@Base+0xa90>
   170a0:	mov	r0, r4
   170a4:	bl	1844c <argp_error@@Base+0xbf0>
   170a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   170ac:	str	r6, [r4, #12]
   170b0:	ldr	r7, [pc, #1656]	; 17730 <argp_failure@@Base+0x1118>
   170b4:	ldr	r8, [r3, #4]
   170b8:	mov	r6, r5
   170bc:	cmp	r8, #0
   170c0:	bne	17210 <argp_failure@@Base+0xbf8>
   170c4:	ldr	r3, [r5, #12]
   170c8:	ldr	r1, [pc, #1632]	; 17730 <argp_failure@@Base+0x1118>
   170cc:	tst	r3, #8
   170d0:	ldr	r2, [r4, #24]
   170d4:	ldr	r3, [r4, #28]
   170d8:	beq	1733c <argp_failure@@Base+0xd24>
   170dc:	sub	r3, r3, r2
   170e0:	ldr	r2, [r4, #16]
   170e4:	ldr	r6, [r1, #16]
   170e8:	cmp	r3, r2
   170ec:	bls	170f8 <argp_failure@@Base+0xae0>
   170f0:	mov	r0, r4
   170f4:	bl	1844c <argp_error@@Base+0xbf0>
   170f8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   170fc:	str	r6, [r4, #12]
   17100:	add	r6, r5, #24
   17104:	ldr	r7, [r3, #4]
   17108:	cmp	r7, #0
   1710c:	bne	172ac <argp_failure@@Base+0xc94>
   17110:	ldr	r2, [r4, #24]
   17114:	ldr	r3, [r4, #28]
   17118:	sub	r3, r3, r2
   1711c:	ldr	r2, [r4, #16]
   17120:	cmp	r3, r2
   17124:	bls	17130 <argp_failure@@Base+0xb18>
   17128:	mov	r0, r4
   1712c:	bl	1844c <argp_error@@Base+0xbf0>
   17130:	mov	r3, #0
   17134:	str	r3, [r4, #4]
   17138:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1713c:	cmp	r3, #0
   17140:	beq	173dc <argp_failure@@Base+0xdc4>
   17144:	ldr	r3, [r5, #12]
   17148:	tst	r3, #8
   1714c:	bne	17178 <argp_failure@@Base+0xb60>
   17150:	ldr	r6, [r5, #4]
   17154:	sub	r3, r6, #1
   17158:	cmp	r3, #254	; 0xfe
   1715c:	bhi	17178 <argp_failure@@Base+0xb60>
   17160:	bl	118dc <__ctype_b_loc@plt>
   17164:	lsl	r6, r6, #1
   17168:	ldr	r3, [r0]
   1716c:	ldrh	r3, [r3, r6]
   17170:	tst	r3, #16384	; 0x4000
   17174:	bne	171a0 <argp_failure@@Base+0xb88>
   17178:	ldr	r3, [r5]
   1717c:	cmp	r3, #0
   17180:	bne	171a0 <argp_failure@@Base+0xb88>
   17184:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17188:	sub	r2, fp, #76	; 0x4c
   1718c:	ldr	r0, [r5, #16]
   17190:	ldr	r1, [r3, #20]
   17194:	bl	14fe0 <argp_parse@@Base+0x1428>
   17198:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1719c:	str	r3, [fp, #-88]	; 0xffffffa8
   171a0:	ldr	r2, [r4, #24]
   171a4:	ldr	r3, [r4, #28]
   171a8:	sub	r3, r3, r2
   171ac:	ldr	r2, [r4, #16]
   171b0:	cmp	r3, r2
   171b4:	bls	171c0 <argp_failure@@Base+0xba8>
   171b8:	mov	r0, r4
   171bc:	bl	1844c <argp_error@@Base+0xbf0>
   171c0:	ldr	r3, [fp, #-124]	; 0xffffff84
   171c4:	ldr	r2, [r4, #24]
   171c8:	str	r3, [r4, #4]
   171cc:	ldr	r3, [r4, #28]
   171d0:	sub	r3, r3, r2
   171d4:	ldr	r2, [r4, #16]
   171d8:	cmp	r3, r2
   171dc:	bls	171e8 <argp_failure@@Base+0xbd0>
   171e0:	mov	r0, r4
   171e4:	bl	1844c <argp_error@@Base+0xbf0>
   171e8:	ldr	r3, [fp, #-128]	; 0xffffff80
   171ec:	str	r3, [r4, #12]
   171f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   171f4:	add	r3, r3, #28
   171f8:	str	r3, [fp, #-100]	; 0xffffff9c
   171fc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   17200:	sub	r3, r3, #1
   17204:	b	16db8 <argp_failure@@Base+0x7a0>
   17208:	mov	r3, #1
   1720c:	b	17050 <argp_failure@@Base+0xa38>
   17210:	ldr	r2, [r6, #12]
   17214:	tst	r2, #8
   17218:	str	r2, [fp, #-136]	; 0xffffff78
   1721c:	bne	17254 <argp_failure@@Base+0xc3c>
   17220:	ldr	r3, [r6, #4]
   17224:	sub	r1, r3, #1
   17228:	cmp	r1, #254	; 0xfe
   1722c:	str	r3, [fp, #-132]	; 0xffffff7c
   17230:	bhi	17254 <argp_failure@@Base+0xc3c>
   17234:	bl	118dc <__ctype_b_loc@plt>
   17238:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1723c:	ldr	r2, [fp, #-136]	; 0xffffff78
   17240:	lsl	r1, r3, #1
   17244:	ldr	r0, [r0]
   17248:	ldrh	r1, [r0, r1]
   1724c:	tst	r1, #16384	; 0x4000
   17250:	bne	17684 <argp_failure@@Base+0x106c>
   17254:	add	r6, r6, #24
   17258:	sub	r8, r8, #1
   1725c:	b	170bc <argp_failure@@Base+0xaa4>
   17260:	mov	r1, #1
   17264:	mov	r0, r4
   17268:	bl	1889c <argp_error@@Base+0x1040>
   1726c:	cmp	r0, #0
   17270:	bne	176b4 <argp_failure@@Base+0x109c>
   17274:	b	176c8 <argp_failure@@Base+0x10b0>
   17278:	mov	r1, #1
   1727c:	mov	r0, r4
   17280:	str	r2, [fp, #-132]	; 0xffffff7c
   17284:	bl	1889c <argp_error@@Base+0x1040>
   17288:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1728c:	cmp	r0, #0
   17290:	bne	176dc <argp_failure@@Base+0x10c4>
   17294:	b	176ec <argp_failure@@Base+0x10d4>
   17298:	ldr	r3, [r5, #8]
   1729c:	cmp	r3, #0
   172a0:	movne	r3, #1
   172a4:	strne	r3, [fp, #-80]	; 0xffffffb0
   172a8:	b	17728 <argp_failure@@Base+0x1110>
   172ac:	ldr	r3, [r6, #-24]	; 0xffffffe8
   172b0:	cmp	r3, #0
   172b4:	beq	17318 <argp_failure@@Base+0xd00>
   172b8:	ldr	r3, [r6, #-12]
   172bc:	tst	r3, #2
   172c0:	bne	17318 <argp_failure@@Base+0xd00>
   172c4:	ldr	r3, [pc, #1124]	; 17730 <argp_failure@@Base+0x1118>
   172c8:	sub	r1, fp, #76	; 0x4c
   172cc:	ldr	r0, [r3, #16]
   172d0:	bl	151b8 <argp_parse@@Base+0x1600>
   172d4:	ldr	r8, [r6, #-24]	; 0xffffffe8
   172d8:	mov	r0, r8
   172dc:	bl	11900 <strlen@plt>
   172e0:	subs	r9, r0, #0
   172e4:	beq	17318 <argp_failure@@Base+0xd00>
   172e8:	ldr	r3, [r4, #28]
   172ec:	ldr	r2, [r4, #32]
   172f0:	add	r3, r3, r9
   172f4:	cmp	r2, r3
   172f8:	bcc	17324 <argp_failure@@Base+0xd0c>
   172fc:	mov	r2, r9
   17300:	mov	r1, r8
   17304:	ldr	r0, [r4, #28]
   17308:	bl	1178c <memcpy@plt>
   1730c:	ldr	r3, [r4, #28]
   17310:	add	r9, r3, r9
   17314:	str	r9, [r4, #28]
   17318:	sub	r7, r7, #1
   1731c:	add	r6, r6, #24
   17320:	b	17108 <argp_failure@@Base+0xaf0>
   17324:	mov	r1, r9
   17328:	mov	r0, r4
   1732c:	bl	1889c <argp_error@@Base+0x1040>
   17330:	cmp	r0, #0
   17334:	bne	172fc <argp_failure@@Base+0xce4>
   17338:	b	17318 <argp_failure@@Base+0xd00>
   1733c:	sub	r3, r3, r2
   17340:	ldr	r2, [r4, #16]
   17344:	ldr	r6, [r1, #12]
   17348:	cmp	r3, r2
   1734c:	bls	17358 <argp_failure@@Base+0xd40>
   17350:	mov	r0, r4
   17354:	bl	1844c <argp_error@@Base+0xbf0>
   17358:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1735c:	str	r6, [r4, #12]
   17360:	ldr	r7, [pc, #968]	; 17730 <argp_failure@@Base+0x1118>
   17364:	ldr	r6, [r3, #4]
   17368:	ldr	r8, [pc, #1044]	; 17784 <argp_failure@@Base+0x116c>
   1736c:	add	r9, r5, #24
   17370:	cmp	r6, #0
   17374:	beq	17110 <argp_failure@@Base+0xaf8>
   17378:	ldr	r3, [r9, #-24]	; 0xffffffe8
   1737c:	cmp	r3, #0
   17380:	beq	173d0 <argp_failure@@Base+0xdb8>
   17384:	ldr	r3, [r9, #-12]
   17388:	tst	r3, #2
   1738c:	bne	173d0 <argp_failure@@Base+0xdb8>
   17390:	sub	r1, fp, #76	; 0x4c
   17394:	ldr	r0, [r7, #12]
   17398:	bl	151b8 <argp_parse@@Base+0x1600>
   1739c:	ldr	r2, [r9, #-24]	; 0xffffffe8
   173a0:	mov	r1, r8
   173a4:	mov	r0, r4
   173a8:	bl	18980 <argp_error@@Base+0x1124>
   173ac:	ldr	r2, [r5, #8]
   173b0:	cmp	r2, #0
   173b4:	beq	173d0 <argp_failure@@Base+0xdb8>
   173b8:	ldr	r3, [r5, #12]
   173bc:	mov	r0, r4
   173c0:	tst	r3, #1
   173c4:	ldrne	r1, [pc, #956]	; 17788 <argp_failure@@Base+0x1170>
   173c8:	ldreq	r1, [pc, #956]	; 1778c <argp_failure@@Base+0x1174>
   173cc:	bl	18980 <argp_error@@Base+0x1124>
   173d0:	sub	r6, r6, #1
   173d4:	add	r9, r9, #24
   173d8:	b	17370 <argp_failure@@Base+0xd58>
   173dc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   173e0:	ldr	r6, [r5, #16]
   173e4:	ldr	r1, [r5, #4]
   173e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   173ec:	ldr	r2, [r2, #20]
   173f0:	mov	r0, r6
   173f4:	bl	14f9c <argp_parse@@Base+0x13e4>
   173f8:	subs	r5, r0, #0
   173fc:	beq	17510 <argp_failure@@Base+0xef8>
   17400:	ldrb	r3, [r5]
   17404:	cmp	r3, #0
   17408:	beq	17500 <argp_failure@@Base+0xee8>
   1740c:	ldr	r2, [r4, #24]
   17410:	ldr	r3, [r4, #28]
   17414:	sub	r3, r3, r2
   17418:	ldr	r2, [r4, #16]
   1741c:	cmp	r3, r2
   17420:	bls	1742c <argp_failure@@Base+0xe14>
   17424:	mov	r0, r4
   17428:	bl	1844c <argp_error@@Base+0xbf0>
   1742c:	ldr	r2, [r4, #24]
   17430:	ldr	r3, [r4, #28]
   17434:	ldr	r7, [r4, #20]
   17438:	sub	r3, r3, r2
   1743c:	ldr	r8, [pc, #748]	; 17730 <argp_failure@@Base+0x1118>
   17440:	ldr	r2, [r4, #16]
   17444:	bic	r7, r7, r7, asr #31
   17448:	cmp	r3, r2
   1744c:	ldr	r9, [r8, #20]
   17450:	bls	1745c <argp_failure@@Base+0xe44>
   17454:	mov	r0, r4
   17458:	bl	1844c <argp_error@@Base+0xbf0>
   1745c:	ldr	r2, [r4, #24]
   17460:	ldr	r3, [r4, #28]
   17464:	str	r9, [r4, #4]
   17468:	sub	r3, r3, r2
   1746c:	ldr	r2, [r4, #16]
   17470:	ldr	r8, [r8, #20]
   17474:	cmp	r3, r2
   17478:	bls	17484 <argp_failure@@Base+0xe6c>
   1747c:	mov	r0, r4
   17480:	bl	1844c <argp_error@@Base+0xbf0>
   17484:	ldr	r3, [pc, #676]	; 17730 <argp_failure@@Base+0x1118>
   17488:	str	r8, [r4, #12]
   1748c:	ldr	r1, [r3, #20]
   17490:	add	r3, r1, #3
   17494:	cmp	r7, r3
   17498:	bls	17578 <argp_failure@@Base+0xf60>
   1749c:	ldr	r2, [r4, #28]
   174a0:	ldr	r3, [r4, #32]
   174a4:	cmp	r2, r3
   174a8:	bcs	17560 <argp_failure@@Base+0xf48>
   174ac:	ldr	r3, [r4, #28]
   174b0:	add	r2, r3, #1
   174b4:	str	r2, [r4, #28]
   174b8:	mov	r2, #10
   174bc:	strb	r2, [r3]
   174c0:	mov	r0, r5
   174c4:	bl	11900 <strlen@plt>
   174c8:	subs	r7, r0, #0
   174cc:	beq	17500 <argp_failure@@Base+0xee8>
   174d0:	ldr	r3, [r4, #28]
   174d4:	ldr	r2, [r4, #32]
   174d8:	add	r3, r3, r7
   174dc:	cmp	r2, r3
   174e0:	bcc	175e0 <argp_failure@@Base+0xfc8>
   174e4:	mov	r2, r7
   174e8:	mov	r1, r5
   174ec:	ldr	r0, [r4, #28]
   174f0:	bl	1178c <memcpy@plt>
   174f4:	ldr	r3, [r4, #28]
   174f8:	add	r7, r3, r7
   174fc:	str	r7, [r4, #28]
   17500:	cmp	r6, r5
   17504:	beq	17510 <argp_failure@@Base+0xef8>
   17508:	mov	r0, r5
   1750c:	bl	14654 <argp_parse@@Base+0xa9c>
   17510:	ldr	r2, [r4, #24]
   17514:	ldr	r3, [r4, #28]
   17518:	sub	r3, r3, r2
   1751c:	ldr	r2, [r4, #16]
   17520:	cmp	r3, r2
   17524:	bls	17530 <argp_failure@@Base+0xf18>
   17528:	mov	r0, r4
   1752c:	bl	1844c <argp_error@@Base+0xbf0>
   17530:	mov	r3, #0
   17534:	str	r3, [r4, #4]
   17538:	ldr	r2, [r4, #28]
   1753c:	ldr	r3, [r4, #32]
   17540:	cmp	r2, r3
   17544:	bcs	175f8 <argp_failure@@Base+0xfe0>
   17548:	ldr	r3, [r4, #28]
   1754c:	add	r2, r3, #1
   17550:	str	r2, [r4, #28]
   17554:	mov	r2, #10
   17558:	strb	r2, [r3]
   1755c:	b	17198 <argp_failure@@Base+0xb80>
   17560:	mov	r1, #1
   17564:	mov	r0, r4
   17568:	bl	1889c <argp_error@@Base+0x1040>
   1756c:	cmp	r0, #0
   17570:	bne	174ac <argp_failure@@Base+0xe94>
   17574:	b	174c0 <argp_failure@@Base+0xea8>
   17578:	cmp	r7, r1
   1757c:	bcc	175d4 <argp_failure@@Base+0xfbc>
   17580:	ldr	r3, [r4, #28]
   17584:	ldr	r2, [r4, #32]
   17588:	add	r3, r3, #3
   1758c:	cmp	r2, r3
   17590:	bcc	175bc <argp_failure@@Base+0xfa4>
   17594:	ldr	r2, [pc, #500]	; 17790 <argp_failure@@Base+0x1178>
   17598:	ldr	r3, [r4, #28]
   1759c:	ldrh	r1, [r2]
   175a0:	ldrb	r2, [r2, #2]
   175a4:	strh	r1, [r3]
   175a8:	strb	r2, [r3, #2]
   175ac:	ldr	r3, [r4, #28]
   175b0:	add	r3, r3, #3
   175b4:	str	r3, [r4, #28]
   175b8:	b	174c0 <argp_failure@@Base+0xea8>
   175bc:	mov	r1, #3
   175c0:	mov	r0, r4
   175c4:	bl	1889c <argp_error@@Base+0x1040>
   175c8:	cmp	r0, #0
   175cc:	bne	17594 <argp_failure@@Base+0xf7c>
   175d0:	b	174c0 <argp_failure@@Base+0xea8>
   175d4:	mov	r0, r4
   175d8:	bl	14f14 <argp_parse@@Base+0x135c>
   175dc:	b	174c0 <argp_failure@@Base+0xea8>
   175e0:	mov	r1, r7
   175e4:	mov	r0, r4
   175e8:	bl	1889c <argp_error@@Base+0x1040>
   175ec:	cmp	r0, #0
   175f0:	bne	174e4 <argp_failure@@Base+0xecc>
   175f4:	b	17500 <argp_failure@@Base+0xee8>
   175f8:	mov	r1, #1
   175fc:	mov	r0, r4
   17600:	bl	1889c <argp_error@@Base+0x1040>
   17604:	cmp	r0, #0
   17608:	bne	17548 <argp_failure@@Base+0xf30>
   1760c:	b	17198 <argp_failure@@Base+0xb80>
   17610:	mov	r1, #1
   17614:	mov	r0, r4
   17618:	bl	1889c <argp_error@@Base+0x1040>
   1761c:	cmp	r0, #0
   17620:	bne	16e28 <argp_failure@@Base+0x810>
   17624:	b	16e3c <argp_failure@@Base+0x824>
   17628:	mov	r1, r6
   1762c:	mov	r0, r4
   17630:	bl	1889c <argp_error@@Base+0x1040>
   17634:	cmp	r0, #0
   17638:	bne	16e60 <argp_failure@@Base+0x848>
   1763c:	b	16e7c <argp_failure@@Base+0x864>
   17640:	mov	r1, #1
   17644:	mov	r0, r4
   17648:	bl	1889c <argp_error@@Base+0x1040>
   1764c:	cmp	r0, #0
   17650:	bne	16e8c <argp_failure@@Base+0x874>
   17654:	b	16ea0 <argp_failure@@Base+0x888>
   17658:	mov	r1, #1
   1765c:	mov	r0, r4
   17660:	bl	1889c <argp_error@@Base+0x1040>
   17664:	cmp	r0, #0
   17668:	bne	16f20 <argp_failure@@Base+0x908>
   1766c:	b	16f34 <argp_failure@@Base+0x91c>
   17670:	cmp	r0, #110	; 0x6e
   17674:	beq	16990 <argp_failure@@Base+0x378>
   17678:	mov	sl, r5
   1767c:	mov	r7, r5
   17680:	b	169bc <argp_failure@@Base+0x3a4>
   17684:	ldrb	r1, [r9]
   17688:	cmp	r3, r1
   1768c:	bne	17254 <argp_failure@@Base+0xc3c>
   17690:	tst	r2, #2
   17694:	bne	17728 <argp_failure@@Base+0x1110>
   17698:	sub	r1, fp, #76	; 0x4c
   1769c:	ldr	r0, [r7, #8]
   176a0:	bl	151b8 <argp_parse@@Base+0x1600>
   176a4:	ldr	r2, [r4, #28]
   176a8:	ldr	r3, [r4, #32]
   176ac:	cmp	r2, r3
   176b0:	bcs	17260 <argp_failure@@Base+0xc48>
   176b4:	ldr	r3, [r4, #28]
   176b8:	add	r2, r3, #1
   176bc:	str	r2, [r4, #28]
   176c0:	mov	r2, #45	; 0x2d
   176c4:	strb	r2, [r3]
   176c8:	ldr	r1, [r4, #28]
   176cc:	ldr	r3, [r4, #32]
   176d0:	ldrb	r2, [r9]
   176d4:	cmp	r1, r3
   176d8:	bcs	17278 <argp_failure@@Base+0xc60>
   176dc:	ldr	r3, [r4, #28]
   176e0:	add	r1, r3, #1
   176e4:	str	r1, [r4, #28]
   176e8:	strb	r2, [r3]
   176ec:	ldr	r3, [fp, #-120]	; 0xffffff88
   176f0:	cmp	r3, #0
   176f4:	beq	17704 <argp_failure@@Base+0x10ec>
   176f8:	ldr	r3, [r7]
   176fc:	cmp	r3, #0
   17700:	beq	17298 <argp_failure@@Base+0xc80>
   17704:	ldr	r2, [r5, #8]
   17708:	cmp	r2, #0
   1770c:	beq	17728 <argp_failure@@Base+0x1110>
   17710:	ldr	r3, [r5, #12]
   17714:	mov	r0, r4
   17718:	tst	r3, #1
   1771c:	ldrne	r1, [pc, #112]	; 17794 <argp_failure@@Base+0x117c>
   17720:	ldreq	r1, [pc, #112]	; 17798 <argp_failure@@Base+0x1180>
   17724:	bl	18980 <argp_error@@Base+0x1124>
   17728:	add	r9, r9, #1
   1772c:	b	17254 <argp_failure@@Base+0xc3c>
   17730:	andeq	sl, r2, r4, asr #3
   17734:	muleq	r1, r3, sl
   17738:	strdeq	r9, [r1], -r6
   1773c:	andeq	r9, r1, fp, lsl r9
   17740:	andeq	r9, r1, r7, asr #22
   17744:	andeq	r9, r1, r3, lsl fp
   17748:	andeq	r9, r1, r1, lsr #21
   1774c:	andeq	r9, r1, fp, lsr #19
   17750:	ldrdeq	r9, [r1], -r0
   17754:	strdeq	r9, [r1], -r7
   17758:	andeq	r9, r1, pc, ror #9
   1775c:	andeq	r6, r1, r0, ror r3
   17760:	andeq	r9, r1, r3, ror #22
   17764:	andeq	r9, r1, pc, asr #22
   17768:	andeq	r9, r1, ip, asr fp
   1776c:	andeq	r9, r1, r6, asr fp
   17770:	andeq	r9, r1, r0, ror fp
   17774:	andeq	r0, r0, #5
   17778:			; <UNDEFINED> instruction: 0x00019bba
   1777c:	ldrdeq	sl, [r2], -r8
   17780:	andeq	r9, r1, lr, lsr #24
   17784:	andeq	r9, r1, r7, lsr #23
   17788:	andeq	r9, r1, ip, lsr #23
   1778c:			; <UNDEFINED> instruction: 0x00019bb2
   17790:			; <UNDEFINED> instruction: 0x00019bb6
   17794:	ldrdeq	r9, [r1], -r0
   17798:	andeq	r9, r1, pc, lsl #22

0001779c <argp_help@@Base>:
   1779c:	push	{r0, r1, r2, lr}
   177a0:	str	r3, [sp]
   177a4:	mov	r3, r2
   177a8:	mov	r2, r1
   177ac:	mov	r1, #0
   177b0:	bl	16768 <argp_failure@@Base+0x150>
   177b4:	add	sp, sp, #12
   177b8:	pop	{pc}		; (ldr pc, [sp], #4)

000177bc <argp_state_help@@Base>:
   177bc:	push	{r0, r1, r2, r4, r5, lr}
   177c0:	subs	r4, r0, #0
   177c4:	mov	r5, r2
   177c8:	beq	177e0 <argp_state_help@@Base+0x24>
   177cc:	ldr	r3, [r4, #16]
   177d0:	tst	r3, #2
   177d4:	beq	177f8 <argp_state_help@@Base+0x3c>
   177d8:	add	sp, sp, #12
   177dc:	pop	{r4, r5, pc}
   177e0:	cmp	r1, #0
   177e4:	beq	177d8 <argp_state_help@@Base+0x1c>
   177e8:	ldr	r3, [pc, #100]	; 17854 <argp_state_help@@Base+0x98>
   177ec:	mov	r0, r4
   177f0:	ldr	r3, [r3]
   177f4:	b	17810 <argp_state_help@@Base+0x54>
   177f8:	cmp	r1, #0
   177fc:	beq	177d8 <argp_state_help@@Base+0x1c>
   17800:	tst	r3, #64	; 0x40
   17804:	ldr	r0, [r4]
   17808:	ldr	r3, [r4, #40]	; 0x28
   1780c:	orrne	r5, r5, #128	; 0x80
   17810:	str	r3, [sp]
   17814:	mov	r2, r1
   17818:	mov	r3, r5
   1781c:	mov	r1, r4
   17820:	bl	16768 <argp_failure@@Base+0x150>
   17824:	cmp	r4, #0
   17828:	beq	17838 <argp_state_help@@Base+0x7c>
   1782c:	ldr	r3, [r4, #16]
   17830:	tst	r3, #32
   17834:	bne	177d8 <argp_state_help@@Base+0x1c>
   17838:	ands	r0, r5, #256	; 0x100
   1783c:	ldrne	r3, [pc, #20]	; 17858 <argp_state_help@@Base+0x9c>
   17840:	ldrne	r0, [r3]
   17844:	bne	17850 <argp_state_help@@Base+0x94>
   17848:	tst	r5, #512	; 0x200
   1784c:	beq	177d8 <argp_state_help@@Base+0x1c>
   17850:	bl	118f4 <exit@plt>
   17854:	andeq	sl, r2, r0, lsl #4
   17858:	strdeq	sl, [r2], -r8

0001785c <argp_error@@Base>:
   1785c:	push	{r1, r2, r3}
   17860:	push	{r0, r1, r4, r5, lr}
   17864:	subs	r5, r0, #0
   17868:	beq	17894 <argp_error@@Base+0x38>
   1786c:	ldr	r3, [r5, #16]
   17870:	tst	r3, #2
   17874:	bne	17884 <argp_error@@Base+0x28>
   17878:	ldr	r4, [r5, #44]	; 0x2c
   1787c:	cmp	r4, #0
   17880:	bne	178c0 <argp_error@@Base+0x64>
   17884:	add	sp, sp, #8
   17888:	pop	{r4, r5, lr}
   1788c:	add	sp, sp, #12
   17890:	bx	lr
   17894:	ldr	r3, [pc, #144]	; 1792c <argp_error@@Base+0xd0>
   17898:	ldr	r4, [r3]
   1789c:	cmp	r4, #0
   178a0:	beq	17884 <argp_error@@Base+0x28>
   178a4:	mov	r0, r4
   178a8:	bl	11a20 <flockfile@plt>
   178ac:	add	r3, sp, #24
   178b0:	str	r3, [sp, #4]
   178b4:	ldr	r3, [pc, #116]	; 17930 <argp_error@@Base+0xd4>
   178b8:	ldr	r0, [r3]
   178bc:	b	178d4 <argp_error@@Base+0x78>
   178c0:	mov	r0, r4
   178c4:	bl	11a20 <flockfile@plt>
   178c8:	ldr	r0, [r5, #40]	; 0x28
   178cc:	add	r3, sp, #24
   178d0:	str	r3, [sp, #4]
   178d4:	mov	r1, r4
   178d8:	bl	11690 <fputs_unlocked@plt>
   178dc:	mov	r1, r4
   178e0:	mov	r0, #58	; 0x3a
   178e4:	bl	11b04 <putc_unlocked@plt>
   178e8:	mov	r1, r4
   178ec:	mov	r0, #32
   178f0:	bl	11b04 <putc_unlocked@plt>
   178f4:	ldr	r2, [sp, #4]
   178f8:	ldr	r1, [sp, #20]
   178fc:	mov	r0, r4
   17900:	bl	119e4 <vfprintf@plt>
   17904:	mov	r1, r4
   17908:	mov	r0, #10
   1790c:	bl	11b04 <putc_unlocked@plt>
   17910:	mov	r0, r5
   17914:	mov	r2, #260	; 0x104
   17918:	mov	r1, r4
   1791c:	bl	177bc <argp_state_help@@Base>
   17920:	mov	r0, r4
   17924:	bl	11804 <funlockfile@plt>
   17928:	b	17884 <argp_error@@Base+0x28>
   1792c:	andeq	sl, r2, r8, lsl #4
   17930:	andeq	sl, r2, r0, lsl #4
   17934:	ldr	r3, [r1, #32]
   17938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1793c:	ldr	r7, [r1, #28]
   17940:	ldr	r6, [r1]
   17944:	add	r8, r0, r3, lsl #2
   17948:	mov	lr, r6
   1794c:	mov	r4, r7
   17950:	cmp	lr, r3
   17954:	movle	r2, #0
   17958:	movgt	r2, #1
   1795c:	cmp	r4, r3
   17960:	movge	r2, #0
   17964:	cmp	r2, #0
   17968:	bne	17980 <argp_error@@Base+0x124>
   1796c:	sub	r3, r6, r3
   17970:	add	r3, r3, r7
   17974:	str	r3, [r1, #28]
   17978:	str	r6, [r1, #32]
   1797c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17980:	sub	r2, r3, r4
   17984:	sub	r5, lr, r3
   17988:	cmp	r5, r2
   1798c:	lsl	ip, r4, #2
   17990:	addle	r2, r0, ip
   17994:	movle	r9, r8
   17998:	movle	ip, #0
   1799c:	ble	179d0 <argp_error@@Base+0x174>
   179a0:	sub	r2, lr, r2
   179a4:	add	ip, r0, ip
   179a8:	add	r5, r0, r2, lsl #2
   179ac:	add	lr, r0, lr, lsl #2
   179b0:	ldr	r9, [ip]
   179b4:	ldr	sl, [r5]
   179b8:	str	sl, [ip], #4
   179bc:	str	r9, [r5], #4
   179c0:	cmp	lr, r5
   179c4:	bne	179b0 <argp_error@@Base+0x154>
   179c8:	mov	lr, r2
   179cc:	b	17950 <argp_error@@Base+0xf4>
   179d0:	ldr	sl, [r2]
   179d4:	ldr	fp, [r9]
   179d8:	add	ip, ip, #1
   179dc:	cmp	r5, ip
   179e0:	str	fp, [r2], #4
   179e4:	str	sl, [r9], #4
   179e8:	bgt	179d0 <argp_error@@Base+0x174>
   179ec:	add	r4, r4, r5
   179f0:	mov	r2, lr
   179f4:	b	179c8 <argp_error@@Base+0x16c>
   179f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   179fc:	sub	sp, sp, #44	; 0x2c
   17a00:	mov	sl, r1
   17a04:	ldr	r4, [sp, #88]	; 0x58
   17a08:	str	r0, [sp, #36]	; 0x24
   17a0c:	str	r2, [sp, #32]
   17a10:	ldr	r8, [r4, #20]
   17a14:	str	r3, [sp, #20]
   17a18:	mov	r9, r8
   17a1c:	mov	r3, r9
   17a20:	ldrb	r6, [r3], #1
   17a24:	cmp	r6, #0
   17a28:	cmpne	r6, #61	; 0x3d
   17a2c:	movne	r6, #1
   17a30:	moveq	r6, #0
   17a34:	bne	17afc <argp_error@@Base+0x2a0>
   17a38:	sub	r3, r9, r8
   17a3c:	str	r3, [sp, #24]
   17a40:	ldr	r3, [sp, #20]
   17a44:	add	r7, r3, r6, lsl #4
   17a48:	ldr	r5, [r3, r6, lsl #4]
   17a4c:	cmp	r5, #0
   17a50:	bne	17b04 <argp_error@@Base+0x2a8>
   17a54:	mov	r8, r5
   17a58:	mov	r7, r5
   17a5c:	mov	fp, r3
   17a60:	mvn	r3, #0
   17a64:	str	r3, [sp, #16]
   17a68:	str	r5, [sp, #28]
   17a6c:	str	r5, [sp, #12]
   17a70:	ldr	r0, [fp]
   17a74:	cmp	r0, #0
   17a78:	bne	17b38 <argp_error@@Base+0x2dc>
   17a7c:	cmp	r5, #0
   17a80:	cmpeq	r8, #0
   17a84:	beq	17c70 <argp_error@@Base+0x414>
   17a88:	ldr	r3, [sp, #92]	; 0x5c
   17a8c:	cmp	r3, #0
   17a90:	beq	17abc <argp_error@@Base+0x260>
   17a94:	cmp	r5, #0
   17a98:	ldr	r7, [pc, #908]	; 17e2c <argp_error@@Base+0x5d0>
   17a9c:	beq	17bfc <argp_error@@Base+0x3a0>
   17aa0:	ldr	r3, [r4, #20]
   17aa4:	ldr	r2, [sl]
   17aa8:	str	r3, [sp]
   17aac:	ldr	r1, [pc, #892]	; 17e30 <argp_error@@Base+0x5d4>
   17ab0:	ldr	r3, [sp, #96]	; 0x60
   17ab4:	ldr	r0, [r7]
   17ab8:	bl	11918 <fprintf@plt>
   17abc:	ldr	r3, [sp, #28]
   17ac0:	cmp	r3, #0
   17ac4:	beq	17ad0 <argp_error@@Base+0x274>
   17ac8:	mov	r0, r8
   17acc:	bl	14654 <argp_parse@@Base+0xa9c>
   17ad0:	ldr	r5, [r4, #20]
   17ad4:	mov	r0, r5
   17ad8:	bl	11900 <strlen@plt>
   17adc:	ldr	r3, [r4]
   17ae0:	add	r3, r3, #1
   17ae4:	str	r3, [r4]
   17ae8:	mov	r3, #0
   17aec:	add	r0, r5, r0
   17af0:	str	r0, [r4, #20]
   17af4:	str	r3, [r4, #8]
   17af8:	b	17cf8 <argp_error@@Base+0x49c>
   17afc:	mov	r9, r3
   17b00:	b	17a1c <argp_error@@Base+0x1c0>
   17b04:	ldr	r2, [sp, #24]
   17b08:	mov	r1, r8
   17b0c:	mov	r0, r5
   17b10:	bl	11ab0 <strncmp@plt>
   17b14:	cmp	r0, #0
   17b18:	bne	17b30 <argp_error@@Base+0x2d4>
   17b1c:	mov	r0, r5
   17b20:	bl	11900 <strlen@plt>
   17b24:	ldr	r3, [sp, #24]
   17b28:	cmp	r3, r0
   17b2c:	beq	17d04 <argp_error@@Base+0x4a8>
   17b30:	add	r6, r6, #1
   17b34:	b	17a40 <argp_error@@Base+0x1e4>
   17b38:	ldr	r2, [sp, #24]
   17b3c:	ldr	r1, [r4, #20]
   17b40:	bl	11ab0 <strncmp@plt>
   17b44:	cmp	r0, #0
   17b48:	bne	17be8 <argp_error@@Base+0x38c>
   17b4c:	cmp	r7, #0
   17b50:	moveq	r7, fp
   17b54:	ldreq	r3, [sp, #12]
   17b58:	streq	r3, [sp, #16]
   17b5c:	beq	17be8 <argp_error@@Base+0x38c>
   17b60:	ldr	r3, [sp, #84]	; 0x54
   17b64:	cmp	r3, #0
   17b68:	bne	17b9c <argp_error@@Base+0x340>
   17b6c:	ldr	r1, [r7, #4]
   17b70:	ldr	r2, [fp, #4]
   17b74:	cmp	r1, r2
   17b78:	bne	17b9c <argp_error@@Base+0x340>
   17b7c:	ldr	r1, [r7, #8]
   17b80:	ldr	r2, [fp, #8]
   17b84:	cmp	r1, r2
   17b88:	bne	17b9c <argp_error@@Base+0x340>
   17b8c:	ldr	r1, [r7, #12]
   17b90:	ldr	r2, [fp, #12]
   17b94:	cmp	r1, r2
   17b98:	beq	17be8 <argp_error@@Base+0x38c>
   17b9c:	cmp	r5, #0
   17ba0:	bne	17be8 <argp_error@@Base+0x38c>
   17ba4:	ldr	r3, [sp, #92]	; 0x5c
   17ba8:	cmp	r3, #0
   17bac:	beq	17bd0 <argp_error@@Base+0x374>
   17bb0:	cmp	r8, #0
   17bb4:	bne	17bdc <argp_error@@Base+0x380>
   17bb8:	mov	r0, r6
   17bbc:	bl	14c00 <argp_parse@@Base+0x1048>
   17bc0:	subs	r8, r0, #0
   17bc4:	bne	17e08 <argp_error@@Base+0x5ac>
   17bc8:	mov	r5, #1
   17bcc:	b	17be8 <argp_error@@Base+0x38c>
   17bd0:	cmp	r8, #0
   17bd4:	mov	r5, #1
   17bd8:	beq	17be8 <argp_error@@Base+0x38c>
   17bdc:	ldr	r3, [sp, #12]
   17be0:	mov	r2, #1
   17be4:	strb	r2, [r8, r3]
   17be8:	ldr	r3, [sp, #12]
   17bec:	add	fp, fp, #16
   17bf0:	add	r3, r3, #1
   17bf4:	str	r3, [sp, #12]
   17bf8:	b	17a70 <argp_error@@Base+0x214>
   17bfc:	ldr	r0, [r7]
   17c00:	bl	11a20 <flockfile@plt>
   17c04:	ldr	r3, [r4, #20]
   17c08:	ldr	r2, [sl]
   17c0c:	str	r3, [sp]
   17c10:	ldr	r1, [pc, #540]	; 17e34 <argp_error@@Base+0x5d8>
   17c14:	ldr	r3, [sp, #96]	; 0x60
   17c18:	ldr	r0, [r7]
   17c1c:	bl	11918 <fprintf@plt>
   17c20:	ldr	r9, [pc, #528]	; 17e38 <argp_error@@Base+0x5dc>
   17c24:	cmp	r6, r5
   17c28:	bne	17c44 <argp_error@@Base+0x3e8>
   17c2c:	ldr	r1, [r7]
   17c30:	mov	r0, #10
   17c34:	bl	119f0 <fputc@plt>
   17c38:	ldr	r0, [r7]
   17c3c:	bl	11804 <funlockfile@plt>
   17c40:	b	17abc <argp_error@@Base+0x260>
   17c44:	ldrb	r3, [r8, r5]
   17c48:	cmp	r3, #0
   17c4c:	beq	17c68 <argp_error@@Base+0x40c>
   17c50:	ldr	r3, [sp, #20]
   17c54:	ldr	r2, [sp, #96]	; 0x60
   17c58:	mov	r1, r9
   17c5c:	ldr	r3, [r3, r5, lsl #4]
   17c60:	ldr	r0, [r7]
   17c64:	bl	11918 <fprintf@plt>
   17c68:	add	r5, r5, #1
   17c6c:	b	17c24 <argp_error@@Base+0x3c8>
   17c70:	cmp	r7, #0
   17c74:	bne	17d08 <argp_error@@Base+0x4ac>
   17c78:	ldr	r3, [sp, #84]	; 0x54
   17c7c:	cmp	r3, #0
   17c80:	beq	17cb4 <argp_error@@Base+0x458>
   17c84:	ldr	r3, [r4]
   17c88:	ldr	r3, [sl, r3, lsl #2]
   17c8c:	ldrb	r3, [r3, #1]
   17c90:	cmp	r3, #45	; 0x2d
   17c94:	beq	17cb4 <argp_error@@Base+0x458>
   17c98:	ldr	r3, [r4, #20]
   17c9c:	ldr	r0, [sp, #32]
   17ca0:	ldrb	r1, [r3]
   17ca4:	bl	1190c <strchr@plt>
   17ca8:	cmp	r0, #0
   17cac:	mvnne	r0, #0
   17cb0:	bne	17cfc <argp_error@@Base+0x4a0>
   17cb4:	ldr	r3, [sp, #92]	; 0x5c
   17cb8:	cmp	r3, #0
   17cbc:	beq	17ce0 <argp_error@@Base+0x484>
   17cc0:	ldr	r0, [pc, #356]	; 17e2c <argp_error@@Base+0x5d0>
   17cc4:	ldr	r3, [r4, #20]
   17cc8:	ldr	r2, [sl]
   17ccc:	str	r3, [sp]
   17cd0:	ldr	r1, [pc, #356]	; 17e3c <argp_error@@Base+0x5e0>
   17cd4:	ldr	r3, [sp, #96]	; 0x60
   17cd8:	ldr	r0, [r0]
   17cdc:	bl	11918 <fprintf@plt>
   17ce0:	ldr	r3, [r4]
   17ce4:	mov	r2, #0
   17ce8:	add	r3, r3, #1
   17cec:	str	r2, [r4, #20]
   17cf0:	str	r3, [r4]
   17cf4:	str	r2, [r4, #8]
   17cf8:	mov	r0, #63	; 0x3f
   17cfc:	add	sp, sp, #44	; 0x2c
   17d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d04:	str	r6, [sp, #16]
   17d08:	ldr	r3, [r4]
   17d0c:	mov	r1, #0
   17d10:	add	r2, r3, #1
   17d14:	str	r2, [r4]
   17d18:	str	r1, [r4, #20]
   17d1c:	ldrb	r1, [r9]
   17d20:	cmp	r1, #0
   17d24:	ldr	r1, [r7, #4]
   17d28:	beq	17d70 <argp_error@@Base+0x514>
   17d2c:	cmp	r1, #0
   17d30:	addne	r9, r9, #1
   17d34:	strne	r9, [r4, #12]
   17d38:	bne	17d94 <argp_error@@Base+0x538>
   17d3c:	ldr	r3, [sp, #92]	; 0x5c
   17d40:	cmp	r3, #0
   17d44:	beq	17d68 <argp_error@@Base+0x50c>
   17d48:	ldr	r0, [pc, #220]	; 17e2c <argp_error@@Base+0x5d0>
   17d4c:	ldr	r3, [r7]
   17d50:	ldr	r2, [sl]
   17d54:	str	r3, [sp]
   17d58:	ldr	r1, [pc, #224]	; 17e40 <argp_error@@Base+0x5e4>
   17d5c:	ldr	r3, [sp, #96]	; 0x60
   17d60:	ldr	r0, [r0]
   17d64:	bl	11918 <fprintf@plt>
   17d68:	ldr	r3, [r7, #12]
   17d6c:	b	17af4 <argp_error@@Base+0x298>
   17d70:	cmp	r1, #1
   17d74:	bne	17d94 <argp_error@@Base+0x538>
   17d78:	ldr	r1, [sp, #36]	; 0x24
   17d7c:	cmp	r2, r1
   17d80:	bge	17dbc <argp_error@@Base+0x560>
   17d84:	add	r3, r3, #2
   17d88:	str	r3, [r4]
   17d8c:	ldr	r3, [sl, r2, lsl #2]
   17d90:	str	r3, [r4, #12]
   17d94:	ldr	r3, [sp, #80]	; 0x50
   17d98:	cmp	r3, #0
   17d9c:	ldrne	r2, [sp, #16]
   17da0:	strne	r2, [r3]
   17da4:	ldr	r3, [r7, #8]
   17da8:	ldr	r0, [r7, #12]
   17dac:	cmp	r3, #0
   17db0:	strne	r0, [r3]
   17db4:	movne	r0, #0
   17db8:	b	17cfc <argp_error@@Base+0x4a0>
   17dbc:	ldr	r3, [sp, #92]	; 0x5c
   17dc0:	cmp	r3, #0
   17dc4:	beq	17de8 <argp_error@@Base+0x58c>
   17dc8:	ldr	r0, [pc, #92]	; 17e2c <argp_error@@Base+0x5d0>
   17dcc:	ldr	r3, [r7]
   17dd0:	ldr	r2, [sl]
   17dd4:	str	r3, [sp]
   17dd8:	ldr	r1, [pc, #100]	; 17e44 <argp_error@@Base+0x5e8>
   17ddc:	ldr	r3, [sp, #96]	; 0x60
   17de0:	ldr	r0, [r0]
   17de4:	bl	11918 <fprintf@plt>
   17de8:	ldr	r3, [r7, #12]
   17dec:	str	r3, [r4, #8]
   17df0:	ldr	r3, [sp, #32]
   17df4:	ldrb	r0, [r3]
   17df8:	cmp	r0, #58	; 0x3a
   17dfc:	moveq	r0, #58	; 0x3a
   17e00:	movne	r0, #63	; 0x3f
   17e04:	b	17cfc <argp_error@@Base+0x4a0>
   17e08:	mov	r2, r6
   17e0c:	mov	r1, #0
   17e10:	bl	1196c <memset@plt>
   17e14:	ldr	r3, [sp, #16]
   17e18:	mov	r2, #1
   17e1c:	strb	r2, [r8, r3]
   17e20:	mov	r3, #1
   17e24:	str	r3, [sp, #28]
   17e28:	b	17bdc <argp_error@@Base+0x380>
   17e2c:	andeq	sl, r2, r8, lsl #4
   17e30:	andeq	r9, r1, r2, asr #24
   17e34:	andeq	r9, r1, r2, ror #24
   17e38:	muleq	r1, r1, ip
   17e3c:	muleq	r1, r9, ip
   17e40:			; <UNDEFINED> instruction: 0x00019cb9
   17e44:	andeq	r9, r1, r6, ror #25
   17e48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e4c:	sub	sp, sp, #36	; 0x24
   17e50:	subs	r8, r0, #0
   17e54:	ldr	r4, [sp, #80]	; 0x50
   17e58:	ldr	fp, [sp, #72]	; 0x48
   17e5c:	ldr	r5, [sp, #76]	; 0x4c
   17e60:	ldr	r9, [r4, #4]
   17e64:	bgt	17e74 <argp_error@@Base+0x618>
   17e68:	mvn	r0, #0
   17e6c:	add	sp, sp, #36	; 0x24
   17e70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e74:	mov	sl, r3
   17e78:	mov	r3, #0
   17e7c:	str	r3, [r4, #12]
   17e80:	ldr	r3, [r4]
   17e84:	mov	r7, r1
   17e88:	cmp	r3, #0
   17e8c:	mov	r6, r2
   17e90:	beq	17eb4 <argp_error@@Base+0x658>
   17e94:	ldr	r3, [r4, #16]
   17e98:	cmp	r3, #0
   17e9c:	beq	17ebc <argp_error@@Base+0x660>
   17ea0:	ldrb	r3, [r2]
   17ea4:	sub	r3, r3, #43	; 0x2b
   17ea8:	tst	r3, #253	; 0xfd
   17eac:	addeq	r6, r2, #1
   17eb0:	b	17ef8 <argp_error@@Base+0x69c>
   17eb4:	mov	r3, #1
   17eb8:	str	r3, [r4]
   17ebc:	ldr	r3, [r4]
   17ec0:	str	r3, [r4, #32]
   17ec4:	str	r3, [r4, #28]
   17ec8:	mov	r3, #0
   17ecc:	str	r3, [r4, #20]
   17ed0:	ldrb	r2, [r6]
   17ed4:	cmp	r2, #45	; 0x2d
   17ed8:	moveq	r3, #2
   17edc:	beq	17ee8 <argp_error@@Base+0x68c>
   17ee0:	cmp	r2, #43	; 0x2b
   17ee4:	bne	17ff8 <argp_error@@Base+0x79c>
   17ee8:	add	r6, r6, #1
   17eec:	str	r3, [r4, #24]
   17ef0:	mov	r3, #1
   17ef4:	str	r3, [r4, #16]
   17ef8:	ldrb	r3, [r6]
   17efc:	cmp	r3, #58	; 0x3a
   17f00:	ldr	r3, [r4, #20]
   17f04:	moveq	r9, #0
   17f08:	cmp	r3, #0
   17f0c:	beq	17f1c <argp_error@@Base+0x6c0>
   17f10:	ldrb	r3, [r3]
   17f14:	cmp	r3, #0
   17f18:	bne	180b0 <argp_error@@Base+0x854>
   17f1c:	ldr	r3, [r4]
   17f20:	ldr	r2, [r4, #32]
   17f24:	cmp	r2, r3
   17f28:	ldr	r2, [r4, #28]
   17f2c:	strgt	r3, [r4, #32]
   17f30:	cmp	r3, r2
   17f34:	ldr	r2, [r4, #24]
   17f38:	strlt	r3, [r4, #28]
   17f3c:	cmp	r2, #1
   17f40:	bne	17f78 <argp_error@@Base+0x71c>
   17f44:	ldr	r1, [r4, #32]
   17f48:	ldr	r2, [r4, #28]
   17f4c:	cmp	r2, r1
   17f50:	beq	18028 <argp_error@@Base+0x7cc>
   17f54:	cmp	r3, r1
   17f58:	beq	17f68 <argp_error@@Base+0x70c>
   17f5c:	mov	r1, r4
   17f60:	mov	r0, r7
   17f64:	bl	17934 <argp_error@@Base+0xd8>
   17f68:	ldr	r3, [r4]
   17f6c:	cmp	r8, r3
   17f70:	bgt	18034 <argp_error@@Base+0x7d8>
   17f74:	str	r3, [r4, #32]
   17f78:	ldr	r3, [r4]
   17f7c:	cmp	r8, r3
   17f80:	beq	17fd8 <argp_error@@Base+0x77c>
   17f84:	ldr	r1, [pc, #920]	; 18324 <argp_error@@Base+0xac8>
   17f88:	ldr	r0, [r7, r3, lsl #2]
   17f8c:	str	r3, [sp, #24]
   17f90:	bl	116b4 <strcmp@plt>
   17f94:	cmp	r0, #0
   17f98:	bne	17fd8 <argp_error@@Base+0x77c>
   17f9c:	ldr	r1, [r4, #28]
   17fa0:	ldr	r3, [sp, #24]
   17fa4:	ldr	r2, [r4, #32]
   17fa8:	add	r3, r3, #1
   17fac:	cmp	r1, r2
   17fb0:	str	r3, [r4]
   17fb4:	streq	r3, [r4, #28]
   17fb8:	beq	17fd0 <argp_error@@Base+0x774>
   17fbc:	cmp	r3, r2
   17fc0:	beq	17fd0 <argp_error@@Base+0x774>
   17fc4:	mov	r1, r4
   17fc8:	mov	r0, r7
   17fcc:	bl	17934 <argp_error@@Base+0xd8>
   17fd0:	str	r8, [r4, #32]
   17fd4:	str	r8, [r4]
   17fd8:	ldr	r2, [r4]
   17fdc:	cmp	r8, r2
   17fe0:	bne	1805c <argp_error@@Base+0x800>
   17fe4:	ldr	r3, [r4, #28]
   17fe8:	ldr	r2, [r4, #32]
   17fec:	cmp	r3, r2
   17ff0:	strne	r3, [r4]
   17ff4:	b	17e68 <argp_error@@Base+0x60c>
   17ff8:	ldr	r3, [sp, #84]	; 0x54
   17ffc:	cmp	r3, #0
   18000:	beq	18010 <argp_error@@Base+0x7b4>
   18004:	mov	r3, #0
   18008:	str	r3, [r4, #24]
   1800c:	b	17ef0 <argp_error@@Base+0x694>
   18010:	ldr	r0, [pc, #784]	; 18328 <argp_error@@Base+0xacc>
   18014:	bl	11870 <getenv@plt>
   18018:	cmp	r0, #0
   1801c:	bne	18004 <argp_error@@Base+0x7a8>
   18020:	mov	r3, #1
   18024:	b	18008 <argp_error@@Base+0x7ac>
   18028:	cmp	r3, r2
   1802c:	strne	r3, [r4, #28]
   18030:	b	17f68 <argp_error@@Base+0x70c>
   18034:	ldr	r2, [r7, r3, lsl #2]
   18038:	ldrb	r1, [r2]
   1803c:	cmp	r1, #45	; 0x2d
   18040:	bne	18050 <argp_error@@Base+0x7f4>
   18044:	ldrb	r2, [r2, #1]
   18048:	cmp	r2, #0
   1804c:	bne	17f74 <argp_error@@Base+0x718>
   18050:	add	r3, r3, #1
   18054:	str	r3, [r4]
   18058:	b	17f68 <argp_error@@Base+0x70c>
   1805c:	ldr	r3, [r7, r2, lsl #2]
   18060:	ldrb	r1, [r3]
   18064:	cmp	r1, #45	; 0x2d
   18068:	bne	18078 <argp_error@@Base+0x81c>
   1806c:	ldrb	r1, [r3, #1]
   18070:	cmp	r1, #0
   18074:	bne	18098 <argp_error@@Base+0x83c>
   18078:	ldr	r1, [r4, #24]
   1807c:	cmp	r1, #0
   18080:	beq	17e68 <argp_error@@Base+0x60c>
   18084:	add	r2, r2, #1
   18088:	str	r2, [r4]
   1808c:	str	r3, [r4, #12]
   18090:	mov	r0, #1
   18094:	b	17e6c <argp_error@@Base+0x610>
   18098:	cmp	sl, #0
   1809c:	bne	1812c <argp_error@@Base+0x8d0>
   180a0:	ldr	r3, [r4]
   180a4:	ldr	r3, [r7, r3, lsl #2]
   180a8:	add	r3, r3, #1
   180ac:	str	r3, [r4, #20]
   180b0:	ldr	r3, [r4, #20]
   180b4:	mov	r0, r6
   180b8:	add	r2, r3, #1
   180bc:	str	r2, [r4, #20]
   180c0:	ldrb	r5, [r3]
   180c4:	str	r2, [sp, #28]
   180c8:	str	r3, [sp, #24]
   180cc:	mov	r1, r5
   180d0:	bl	1190c <strchr@plt>
   180d4:	ldr	r3, [sp, #24]
   180d8:	ldr	r2, [sp, #28]
   180dc:	ldrb	r1, [r3, #1]
   180e0:	cmp	r1, #0
   180e4:	ldreq	r1, [r4]
   180e8:	addeq	r1, r1, #1
   180ec:	streq	r1, [r4]
   180f0:	sub	r1, r5, #58	; 0x3a
   180f4:	cmp	r0, #0
   180f8:	cmpne	r1, #1
   180fc:	bhi	181d8 <argp_error@@Base+0x97c>
   18100:	cmp	r9, #0
   18104:	beq	18120 <argp_error@@Base+0x8c4>
   18108:	ldr	r0, [pc, #540]	; 1832c <argp_error@@Base+0xad0>
   1810c:	mov	r3, r5
   18110:	ldr	r2, [r7]
   18114:	ldr	r1, [pc, #532]	; 18330 <argp_error@@Base+0xad4>
   18118:	ldr	r0, [r0]
   1811c:	bl	11918 <fprintf@plt>
   18120:	str	r5, [r4, #8]
   18124:	mov	r0, #63	; 0x3f
   18128:	b	17e6c <argp_error@@Base+0x610>
   1812c:	cmp	r1, #45	; 0x2d
   18130:	bne	1816c <argp_error@@Base+0x910>
   18134:	add	r3, r3, #2
   18138:	str	r3, [r4, #20]
   1813c:	ldr	r3, [pc, #480]	; 18324 <argp_error@@Base+0xac8>
   18140:	str	r9, [sp, #12]
   18144:	str	r3, [sp, #16]
   18148:	str	r4, [sp, #8]
   1814c:	str	r5, [sp, #4]
   18150:	str	fp, [sp]
   18154:	mov	r3, sl
   18158:	mov	r2, r6
   1815c:	mov	r1, r7
   18160:	mov	r0, r8
   18164:	bl	179f8 <argp_error@@Base+0x19c>
   18168:	b	17e6c <argp_error@@Base+0x610>
   1816c:	cmp	r5, #0
   18170:	beq	180a0 <argp_error@@Base+0x844>
   18174:	ldrb	r2, [r3, #2]
   18178:	cmp	r2, #0
   1817c:	bne	18198 <argp_error@@Base+0x93c>
   18180:	mov	r0, r6
   18184:	str	r3, [sp, #24]
   18188:	bl	1190c <strchr@plt>
   1818c:	ldr	r3, [sp, #24]
   18190:	cmp	r0, #0
   18194:	bne	180a0 <argp_error@@Base+0x844>
   18198:	add	r3, r3, #1
   1819c:	str	r3, [r4, #20]
   181a0:	ldr	r3, [pc, #396]	; 18334 <argp_error@@Base+0xad8>
   181a4:	str	r9, [sp, #12]
   181a8:	str	r3, [sp, #16]
   181ac:	str	r4, [sp, #8]
   181b0:	str	r5, [sp, #4]
   181b4:	str	fp, [sp]
   181b8:	mov	r3, sl
   181bc:	mov	r2, r6
   181c0:	mov	r1, r7
   181c4:	mov	r0, r8
   181c8:	bl	179f8 <argp_error@@Base+0x19c>
   181cc:	cmn	r0, #1
   181d0:	bne	17e6c <argp_error@@Base+0x610>
   181d4:	b	180a0 <argp_error@@Base+0x844>
   181d8:	ldrb	r1, [r0]
   181dc:	cmp	r1, #87	; 0x57
   181e0:	ldrb	r1, [r0, #1]
   181e4:	bne	18280 <argp_error@@Base+0xa24>
   181e8:	cmp	sl, #0
   181ec:	sub	ip, r1, #59	; 0x3b
   181f0:	clz	ip, ip
   181f4:	lsr	ip, ip, #5
   181f8:	moveq	ip, #0
   181fc:	cmp	ip, #0
   18200:	beq	18280 <argp_error@@Base+0xa24>
   18204:	ldrb	r3, [r3, #1]
   18208:	cmp	r3, #0
   1820c:	strne	r2, [r4, #12]
   18210:	bne	18260 <argp_error@@Base+0xa04>
   18214:	ldr	r3, [r4]
   18218:	cmp	r8, r3
   1821c:	ldrne	r3, [r7, r3, lsl #2]
   18220:	strne	r3, [r4, #12]
   18224:	bne	18260 <argp_error@@Base+0xa04>
   18228:	cmp	r9, #0
   1822c:	beq	18248 <argp_error@@Base+0x9ec>
   18230:	ldr	r0, [pc, #244]	; 1832c <argp_error@@Base+0xad0>
   18234:	mov	r3, r5
   18238:	ldr	r2, [r7]
   1823c:	ldr	r1, [pc, #244]	; 18338 <argp_error@@Base+0xadc>
   18240:	ldr	r0, [r0]
   18244:	bl	11918 <fprintf@plt>
   18248:	str	r5, [r4, #8]
   1824c:	ldrb	r0, [r6]
   18250:	cmp	r0, #58	; 0x3a
   18254:	moveq	r0, #58	; 0x3a
   18258:	movne	r0, #63	; 0x3f
   1825c:	b	17e6c <argp_error@@Base+0x610>
   18260:	ldr	r3, [r4, #12]
   18264:	ldr	r2, [pc, #208]	; 1833c <argp_error@@Base+0xae0>
   18268:	str	r3, [r4, #20]
   1826c:	mov	r3, #0
   18270:	str	r3, [r4, #12]
   18274:	str	r2, [sp, #16]
   18278:	stmib	sp, {r3, r4, r9}
   1827c:	b	18150 <argp_error@@Base+0x8f4>
   18280:	cmp	r1, #58	; 0x3a
   18284:	bne	182d0 <argp_error@@Base+0xa74>
   18288:	ldrb	r1, [r0, #2]
   1828c:	ldrb	r3, [r3, #1]
   18290:	cmp	r1, #58	; 0x3a
   18294:	bne	182b0 <argp_error@@Base+0xa54>
   18298:	cmp	r3, #0
   1829c:	strne	r2, [r4, #12]
   182a0:	ldrne	r3, [r4]
   182a4:	bne	182c0 <argp_error@@Base+0xa64>
   182a8:	str	r3, [r4, #12]
   182ac:	b	182c8 <argp_error@@Base+0xa6c>
   182b0:	cmp	r3, #0
   182b4:	ldr	r3, [r4]
   182b8:	beq	182d8 <argp_error@@Base+0xa7c>
   182bc:	str	r2, [r4, #12]
   182c0:	add	r3, r3, #1
   182c4:	str	r3, [r4]
   182c8:	mov	r3, #0
   182cc:	str	r3, [r4, #20]
   182d0:	mov	r0, r5
   182d4:	b	17e6c <argp_error@@Base+0x610>
   182d8:	cmp	r8, r3
   182dc:	addne	r2, r3, #1
   182e0:	strne	r2, [r4]
   182e4:	ldrne	r3, [r7, r3, lsl #2]
   182e8:	bne	182a8 <argp_error@@Base+0xa4c>
   182ec:	cmp	r9, #0
   182f0:	beq	1830c <argp_error@@Base+0xab0>
   182f4:	ldr	r0, [pc, #48]	; 1832c <argp_error@@Base+0xad0>
   182f8:	mov	r3, r5
   182fc:	ldr	r2, [r7]
   18300:	ldr	r1, [pc, #48]	; 18338 <argp_error@@Base+0xadc>
   18304:	ldr	r0, [r0]
   18308:	bl	11918 <fprintf@plt>
   1830c:	str	r5, [r4, #8]
   18310:	ldrb	r5, [r6]
   18314:	cmp	r5, #58	; 0x3a
   18318:	moveq	r5, #58	; 0x3a
   1831c:	movne	r5, #63	; 0x3f
   18320:	b	182c8 <argp_error@@Base+0xa6c>
   18324:			; <UNDEFINED> instruction: 0x000194b0
   18328:	andeq	r9, r1, lr, lsl #26
   1832c:	andeq	sl, r2, r8, lsl #4
   18330:	andeq	r9, r1, lr, lsl sp
   18334:			; <UNDEFINED> instruction: 0x000194b1
   18338:	andeq	r9, r1, sl, lsr sp
   1833c:	andeq	r9, r1, r3, ror #26
   18340:	push	{r4, r5, lr}
   18344:	sub	sp, sp, #20
   18348:	ldr	r5, [pc, #84]	; 183a4 <argp_error@@Base+0xb48>
   1834c:	ldr	r4, [pc, #84]	; 183a8 <argp_error@@Base+0xb4c>
   18350:	ldr	ip, [r5]
   18354:	str	r4, [sp, #8]
   18358:	str	ip, [r4]
   1835c:	ldr	ip, [r5, #4]
   18360:	str	ip, [r4, #4]
   18364:	ldr	ip, [sp, #40]	; 0x28
   18368:	str	ip, [sp, #12]
   1836c:	ldr	ip, [sp, #36]	; 0x24
   18370:	str	ip, [sp, #4]
   18374:	ldr	ip, [sp, #32]
   18378:	str	ip, [sp]
   1837c:	bl	17e48 <argp_error@@Base+0x5ec>
   18380:	ldr	r3, [r4]
   18384:	ldr	r2, [r4, #12]
   18388:	str	r3, [r5]
   1838c:	ldr	r3, [pc, #24]	; 183ac <argp_error@@Base+0xb50>
   18390:	str	r2, [r3]
   18394:	ldr	r3, [r4, #8]
   18398:	str	r3, [r5, #8]
   1839c:	add	sp, sp, #20
   183a0:	pop	{r4, r5, pc}
   183a4:	andeq	sl, r2, ip, ror #3
   183a8:	andeq	sl, r2, ip, asr #4
   183ac:	andeq	sl, r2, r0, ror #9
   183b0:	push	{r0, r1, r2, r3, r4, lr}
   183b4:	mov	r3, #1
   183b8:	str	r3, [sp, #8]
   183bc:	mov	r3, #0
   183c0:	str	r3, [sp, #4]
   183c4:	str	r3, [sp]
   183c8:	bl	18340 <argp_error@@Base+0xae4>
   183cc:	add	sp, sp, #20
   183d0:	pop	{pc}		; (ldr pc, [sp], #4)
   183d4:	push	{r4, r5, r6, r7, r8, lr}
   183d8:	mov	r8, r0
   183dc:	mov	r0, #36	; 0x24
   183e0:	mov	r7, r1
   183e4:	mov	r6, r2
   183e8:	mov	r5, r3
   183ec:	bl	14c00 <argp_parse@@Base+0x1048>
   183f0:	subs	r4, r0, #0
   183f4:	beq	18444 <argp_error@@Base+0xbe8>
   183f8:	mov	r3, #0
   183fc:	str	r5, [r4, #12]
   18400:	str	r8, [r4]
   18404:	str	r7, [r4, #4]
   18408:	str	r6, [r4, #8]
   1840c:	str	r3, [r4, #20]
   18410:	str	r3, [r4, #16]
   18414:	mov	r0, #200	; 0xc8
   18418:	bl	14c00 <argp_parse@@Base+0x1048>
   1841c:	cmp	r0, #0
   18420:	mov	r5, r0
   18424:	addne	r5, r0, #200	; 0xc8
   18428:	str	r0, [r4, #24]
   1842c:	strne	r0, [r4, #28]
   18430:	strne	r5, [r4, #32]
   18434:	bne	18444 <argp_error@@Base+0xbe8>
   18438:	mov	r0, r4
   1843c:	bl	14654 <argp_parse@@Base+0xa9c>
   18440:	mov	r4, r5
   18444:	mov	r0, r4
   18448:	pop	{r4, r5, r6, r7, r8, pc}
   1844c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18450:	mov	r4, r0
   18454:	ldr	r6, [r0, #24]
   18458:	ldr	r3, [r0, #16]
   1845c:	add	r6, r6, r3
   18460:	ldr	r2, [r4, #28]
   18464:	cmp	r6, r2
   18468:	bcs	18518 <argp_error@@Base+0xcbc>
   1846c:	ldr	r7, [r4, #20]
   18470:	cmp	r7, #0
   18474:	bne	184cc <argp_error@@Base+0xc70>
   18478:	ldr	r5, [r4, #4]
   1847c:	cmp	r5, #0
   18480:	beq	184cc <argp_error@@Base+0xc70>
   18484:	ldr	r1, [r4, #32]
   18488:	add	r3, r2, r5
   1848c:	cmp	r1, r3
   18490:	bls	18530 <argp_error@@Base+0xcd4>
   18494:	add	r7, r6, r5
   18498:	sub	r2, r2, r6
   1849c:	mov	r1, r6
   184a0:	mov	r0, r7
   184a4:	bl	1172c <memmove@plt>
   184a8:	ldr	r3, [r4, #28]
   184ac:	mov	r0, r6
   184b0:	add	r3, r3, r5
   184b4:	str	r3, [r4, #28]
   184b8:	mov	r2, r5
   184bc:	mov	r1, #32
   184c0:	bl	1196c <memset@plt>
   184c4:	mov	r6, r7
   184c8:	str	r5, [r4, #20]
   184cc:	ldr	r9, [r4, #28]
   184d0:	mov	r1, #10
   184d4:	sub	r8, r9, r6
   184d8:	mov	r2, r8
   184dc:	mov	r0, r6
   184e0:	bl	1199c <memchr@plt>
   184e4:	ldr	r2, [r4, #20]
   184e8:	ldr	r5, [r4, #8]
   184ec:	cmp	r2, #0
   184f0:	movlt	r3, #0
   184f4:	strlt	r3, [r4, #20]
   184f8:	cmp	r0, #0
   184fc:	mov	fp, r0
   18500:	ldr	r0, [r4, #20]
   18504:	bne	1854c <argp_error@@Base+0xcf0>
   18508:	add	r3, r8, r0
   1850c:	cmp	r3, r5
   18510:	bcs	1856c <argp_error@@Base+0xd10>
   18514:	str	r3, [r4, #20]
   18518:	ldr	r3, [r4, #28]
   1851c:	ldr	r2, [r4, #24]
   18520:	sub	r3, r3, r2
   18524:	str	r3, [r4, #16]
   18528:	add	sp, sp, #12
   1852c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18530:	ldr	r1, [r4]
   18534:	mov	r0, #32
   18538:	add	r7, r7, #1
   1853c:	bl	11b04 <putc_unlocked@plt>
   18540:	cmp	r5, r7
   18544:	bne	18530 <argp_error@@Base+0xcd4>
   18548:	b	184c8 <argp_error@@Base+0xc6c>
   1854c:	sub	r2, fp, r6
   18550:	add	r2, r2, r0
   18554:	cmp	r2, r5
   18558:	bge	18570 <argp_error@@Base+0xd14>
   1855c:	mov	r3, #0
   18560:	str	r3, [r4, #20]
   18564:	add	r3, fp, #1
   18568:	b	185d0 <argp_error@@Base+0xd74>
   1856c:	mov	fp, r9
   18570:	ldr	sl, [r4, #12]
   18574:	cmp	sl, #0
   18578:	subge	r5, r5, r0
   1857c:	addge	r5, r6, r5
   18580:	movge	r7, r5
   18584:	bge	185f0 <argp_error@@Base+0xd94>
   18588:	cmp	fp, r9
   1858c:	sub	sl, r5, #1
   18590:	bcs	185d8 <argp_error@@Base+0xd7c>
   18594:	sub	r0, sl, r0
   18598:	sub	r2, r9, fp
   1859c:	mov	r1, fp
   185a0:	add	r0, r6, r0
   185a4:	bl	1172c <memmove@plt>
   185a8:	ldr	r8, [r4, #20]
   185ac:	sub	sl, sl, r8
   185b0:	add	sl, r6, sl
   185b4:	sub	r3, sl, fp
   185b8:	ldr	sl, [r4, #28]
   185bc:	sub	r3, sl, r3
   185c0:	str	r3, [r4, #28]
   185c4:	mov	r3, #0
   185c8:	str	r3, [r4, #20]
   185cc:	add	r3, r6, r5
   185d0:	mov	r6, r3
   185d4:	b	18460 <argp_error@@Base+0xc04>
   185d8:	add	r0, r8, r0
   185dc:	str	r0, [r4, #20]
   185e0:	sub	r0, sl, r0
   185e4:	add	r9, r9, r0
   185e8:	str	r9, [r4, #28]
   185ec:	b	18518 <argp_error@@Base+0xcbc>
   185f0:	cmp	r6, r7
   185f4:	mov	r2, r7
   185f8:	bhi	18624 <argp_error@@Base+0xdc8>
   185fc:	str	r7, [sp, #4]
   18600:	bl	118dc <__ctype_b_loc@plt>
   18604:	ldr	r2, [sp, #4]
   18608:	sub	r7, r7, #1
   1860c:	ldrb	r1, [r2]
   18610:	lsl	r1, r1, #1
   18614:	ldr	r0, [r0]
   18618:	ldrh	r1, [r0, r1]
   1861c:	tst	r1, #1
   18620:	beq	185f0 <argp_error@@Base+0xd94>
   18624:	add	r7, r2, #1
   18628:	cmp	r6, r7
   1862c:	bcs	186a4 <argp_error@@Base+0xe48>
   18630:	cmp	r6, r2
   18634:	bhi	18670 <argp_error@@Base+0xe14>
   18638:	sub	r5, r2, #1
   1863c:	cmp	r6, r5
   18640:	mov	r2, r5
   18644:	bhi	18670 <argp_error@@Base+0xe14>
   18648:	str	r5, [sp, #4]
   1864c:	bl	118dc <__ctype_b_loc@plt>
   18650:	ldr	r2, [sp, #4]
   18654:	sub	r5, r5, #1
   18658:	ldrb	r3, [r2]
   1865c:	lsl	r3, r3, #1
   18660:	ldr	r1, [r0]
   18664:	ldrh	r3, [r1, r3]
   18668:	tst	r3, #1
   1866c:	bne	1863c <argp_error@@Base+0xde0>
   18670:	add	r5, r2, #1
   18674:	add	r3, r8, #1
   18678:	add	r3, r6, r3
   1867c:	cmp	r7, r3
   18680:	bne	1870c <argp_error@@Base+0xeb0>
   18684:	ldr	r3, [r4, #32]
   18688:	sub	r3, r3, r5
   1868c:	cmp	sl, r3
   18690:	bge	1871c <argp_error@@Base+0xec0>
   18694:	mov	r3, #10
   18698:	add	r9, r5, #1
   1869c:	strb	r3, [r5]
   186a0:	b	1879c <argp_error@@Base+0xf40>
   186a4:	cmp	fp, r5
   186a8:	bls	18700 <argp_error@@Base+0xea4>
   186ac:	add	r7, r5, #1
   186b0:	cmp	fp, r7
   186b4:	mov	r5, r7
   186b8:	beq	18700 <argp_error@@Base+0xea4>
   186bc:	bl	118dc <__ctype_b_loc@plt>
   186c0:	ldrb	r2, [r5]
   186c4:	add	r7, r7, #1
   186c8:	lsl	r2, r2, #1
   186cc:	ldr	r1, [r0]
   186d0:	ldrh	r2, [r1, r2]
   186d4:	tst	r2, #1
   186d8:	beq	186b0 <argp_error@@Base+0xe54>
   186dc:	bl	118dc <__ctype_b_loc@plt>
   186e0:	mov	r7, r5
   186e4:	ldr	r2, [r0]
   186e8:	ldrb	r3, [r7, #1]!
   186ec:	lsl	r3, r3, #1
   186f0:	ldrh	r3, [r2, r3]
   186f4:	tst	r3, #1
   186f8:	bne	186e8 <argp_error@@Base+0xe8c>
   186fc:	b	18674 <argp_error@@Base+0xe18>
   18700:	cmp	fp, r5
   18704:	bne	186dc <argp_error@@Base+0xe80>
   18708:	b	1855c <argp_error@@Base+0xd00>
   1870c:	add	r3, r5, #1
   18710:	sub	r3, r7, r3
   18714:	cmp	sl, r3
   18718:	ble	18694 <argp_error@@Base+0xe38>
   1871c:	cmp	r7, r9
   18720:	bcs	18694 <argp_error@@Base+0xe38>
   18724:	ldr	r3, [r4, #32]
   18728:	add	r0, sl, #1
   1872c:	sub	r3, r3, r9
   18730:	cmp	r3, r0
   18734:	ble	18764 <argp_error@@Base+0xf08>
   18738:	sub	r9, r9, r7
   1873c:	mov	r2, r9
   18740:	mov	r1, r7
   18744:	add	r0, r5, r0
   18748:	bl	1172c <memmove@plt>
   1874c:	ldr	r7, [r4, #12]
   18750:	add	r7, r7, #1
   18754:	add	r7, r5, r7
   18758:	add	r9, r7, r9
   1875c:	sub	r8, r9, r6
   18760:	b	18694 <argp_error@@Base+0xe38>
   18764:	ldr	r0, [r4, #24]
   18768:	cmp	r5, r0
   1876c:	bls	18780 <argp_error@@Base+0xf24>
   18770:	ldr	r3, [r4]
   18774:	sub	r2, r5, r0
   18778:	mov	r1, #1
   1877c:	bl	117b0 <fwrite_unlocked@plt>
   18780:	ldr	r1, [r4]
   18784:	mov	r0, #10
   18788:	bl	11b04 <putc_unlocked@plt>
   1878c:	ldr	r9, [r4, #24]
   18790:	sub	r6, r6, r9
   18794:	add	r8, r8, r6
   18798:	mov	r6, r9
   1879c:	ldr	r2, [r4, #12]
   187a0:	sub	r3, r7, r9
   187a4:	cmp	r3, r2
   187a8:	bge	187e4 <argp_error@@Base+0xf88>
   187ac:	add	r3, r8, #1
   187b0:	add	r3, r6, r3
   187b4:	cmp	r7, r3
   187b8:	bne	187cc <argp_error@@Base+0xf70>
   187bc:	ldr	r3, [r4, #32]
   187c0:	sub	r3, r3, r7
   187c4:	cmp	r2, r3
   187c8:	ble	187e4 <argp_error@@Base+0xf88>
   187cc:	mov	r5, #0
   187d0:	ldr	r3, [r4, #12]
   187d4:	cmp	r5, r3
   187d8:	blt	18848 <argp_error@@Base+0xfec>
   187dc:	mov	r3, r9
   187e0:	b	187f8 <argp_error@@Base+0xf9c>
   187e4:	mov	r3, r9
   187e8:	ldr	r1, [r4, #12]
   187ec:	sub	r2, r3, r9
   187f0:	cmp	r1, r2
   187f4:	bgt	1883c <argp_error@@Base+0xfe0>
   187f8:	cmp	r3, r7
   187fc:	bcs	18818 <argp_error@@Base+0xfbc>
   18800:	add	r2, r6, r8
   18804:	mov	r0, r3
   18808:	sub	r2, r2, r7
   1880c:	mov	r1, r7
   18810:	bl	1172c <memmove@plt>
   18814:	mov	r3, r0
   18818:	ldr	r2, [r4, #12]
   1881c:	sub	r6, r7, r6
   18820:	sub	r6, r8, r6
   18824:	cmp	r2, #0
   18828:	add	r6, r3, r6
   1882c:	mvneq	r2, #0
   18830:	str	r6, [r4, #28]
   18834:	str	r2, [r4, #20]
   18838:	b	185d0 <argp_error@@Base+0xd74>
   1883c:	mov	r2, #32
   18840:	strb	r2, [r3], #1
   18844:	b	187e8 <argp_error@@Base+0xf8c>
   18848:	ldr	r1, [r4]
   1884c:	mov	r0, #32
   18850:	bl	11b04 <putc_unlocked@plt>
   18854:	add	r5, r5, #1
   18858:	b	187d0 <argp_error@@Base+0xf74>
   1885c:	push	{r4, lr}
   18860:	mov	r4, r0
   18864:	bl	1844c <argp_error@@Base+0xbf0>
   18868:	ldr	r2, [r4, #28]
   1886c:	ldr	r0, [r4, #24]
   18870:	cmp	r2, r0
   18874:	bls	18888 <argp_error@@Base+0x102c>
   18878:	ldr	r3, [r4]
   1887c:	sub	r2, r2, r0
   18880:	mov	r1, #1
   18884:	bl	117b0 <fwrite_unlocked@plt>
   18888:	ldr	r0, [r4, #24]
   1888c:	bl	14654 <argp_parse@@Base+0xa9c>
   18890:	mov	r0, r4
   18894:	pop	{r4, lr}
   18898:	b	14654 <argp_parse@@Base+0xa9c>
   1889c:	ldr	r3, [r0, #32]
   188a0:	ldr	r2, [r0, #28]
   188a4:	sub	r3, r3, r2
   188a8:	cmp	r3, r1
   188ac:	bcc	188b8 <argp_error@@Base+0x105c>
   188b0:	mov	r0, #1
   188b4:	bx	lr
   188b8:	push	{r4, r5, r6, lr}
   188bc:	mov	r4, r0
   188c0:	mov	r5, r1
   188c4:	bl	1844c <argp_error@@Base+0xbf0>
   188c8:	ldr	r0, [r4, #24]
   188cc:	ldr	r2, [r4, #28]
   188d0:	ldr	r3, [r4]
   188d4:	sub	r2, r2, r0
   188d8:	mov	r1, #1
   188dc:	bl	117b0 <fwrite_unlocked@plt>
   188e0:	ldr	r2, [r4, #28]
   188e4:	mov	r1, r0
   188e8:	ldr	r0, [r4, #24]
   188ec:	sub	r3, r2, r0
   188f0:	cmp	r1, r3
   188f4:	bne	1891c <argp_error@@Base+0x10c0>
   188f8:	ldr	r1, [r4, #32]
   188fc:	mov	r3, #0
   18900:	sub	r1, r1, r0
   18904:	cmp	r5, r1
   18908:	str	r0, [r4, #28]
   1890c:	str	r3, [r4, #16]
   18910:	bhi	18944 <argp_error@@Base+0x10e8>
   18914:	mov	r0, #1
   18918:	pop	{r4, r5, r6, pc}
   1891c:	ldr	r3, [r4, #16]
   18920:	sub	r2, r2, r1
   18924:	sub	r3, r3, r1
   18928:	str	r2, [r4, #28]
   1892c:	str	r3, [r4, #16]
   18930:	sub	r2, r2, r0
   18934:	add	r1, r0, r1
   18938:	bl	1172c <memmove@plt>
   1893c:	mov	r0, #0
   18940:	pop	{r4, r5, r6, pc}
   18944:	adds	r5, r5, r1
   18948:	bcc	1895c <argp_error@@Base+0x1100>
   1894c:	bl	1193c <__errno_location@plt>
   18950:	mov	r3, #12
   18954:	str	r3, [r0]
   18958:	b	1893c <argp_error@@Base+0x10e0>
   1895c:	mov	r1, r5
   18960:	bl	14c40 <argp_parse@@Base+0x1088>
   18964:	cmp	r0, #0
   18968:	beq	1894c <argp_error@@Base+0x10f0>
   1896c:	add	r5, r0, r5
   18970:	str	r0, [r4, #24]
   18974:	str	r5, [r4, #32]
   18978:	str	r0, [r4, #28]
   1897c:	b	18914 <argp_error@@Base+0x10b8>
   18980:	push	{r1, r2, r3}
   18984:	push	{r0, r1, r2, r4, r5, r6, lr}
   18988:	mov	r4, r0
   1898c:	mov	r1, #150	; 0x96
   18990:	add	r6, sp, #32
   18994:	mov	r0, r4
   18998:	bl	1889c <argp_error@@Base+0x1040>
   1899c:	cmp	r0, #0
   189a0:	bne	189b8 <argp_error@@Base+0x115c>
   189a4:	mvn	r0, #0
   189a8:	add	sp, sp, #12
   189ac:	pop	{r4, r5, r6, lr}
   189b0:	add	sp, sp, #12
   189b4:	bx	lr
   189b8:	ldr	r0, [r4, #28]
   189bc:	ldr	r5, [r4, #32]
   189c0:	mov	r3, r6
   189c4:	sub	r5, r5, r0
   189c8:	ldr	r2, [sp, #28]
   189cc:	mov	r1, r5
   189d0:	str	r6, [sp, #4]
   189d4:	bl	11a2c <vsnprintf@plt>
   189d8:	cmp	r5, r0
   189dc:	addls	r1, r0, #1
   189e0:	bls	18994 <argp_error@@Base+0x1138>
   189e4:	ldr	r3, [r4, #28]
   189e8:	add	r3, r3, r0
   189ec:	str	r3, [r4, #28]
   189f0:	b	189a8 <argp_error@@Base+0x114c>
   189f4:	cmp	r1, #0
   189f8:	beq	18c04 <argp_error@@Base+0x13a8>
   189fc:	eor	ip, r0, r1
   18a00:	rsbmi	r1, r1, #0
   18a04:	subs	r2, r1, #1
   18a08:	beq	18bd0 <argp_error@@Base+0x1374>
   18a0c:	movs	r3, r0
   18a10:	rsbmi	r3, r0, #0
   18a14:	cmp	r3, r1
   18a18:	bls	18bdc <argp_error@@Base+0x1380>
   18a1c:	tst	r1, r2
   18a20:	beq	18bec <argp_error@@Base+0x1390>
   18a24:	clz	r2, r3
   18a28:	clz	r0, r1
   18a2c:	sub	r2, r0, r2
   18a30:	rsbs	r2, r2, #31
   18a34:	addne	r2, r2, r2, lsl #1
   18a38:	mov	r0, #0
   18a3c:	addne	pc, pc, r2, lsl #2
   18a40:	nop			; (mov r0, r0)
   18a44:	cmp	r3, r1, lsl #31
   18a48:	adc	r0, r0, r0
   18a4c:	subcs	r3, r3, r1, lsl #31
   18a50:	cmp	r3, r1, lsl #30
   18a54:	adc	r0, r0, r0
   18a58:	subcs	r3, r3, r1, lsl #30
   18a5c:	cmp	r3, r1, lsl #29
   18a60:	adc	r0, r0, r0
   18a64:	subcs	r3, r3, r1, lsl #29
   18a68:	cmp	r3, r1, lsl #28
   18a6c:	adc	r0, r0, r0
   18a70:	subcs	r3, r3, r1, lsl #28
   18a74:	cmp	r3, r1, lsl #27
   18a78:	adc	r0, r0, r0
   18a7c:	subcs	r3, r3, r1, lsl #27
   18a80:	cmp	r3, r1, lsl #26
   18a84:	adc	r0, r0, r0
   18a88:	subcs	r3, r3, r1, lsl #26
   18a8c:	cmp	r3, r1, lsl #25
   18a90:	adc	r0, r0, r0
   18a94:	subcs	r3, r3, r1, lsl #25
   18a98:	cmp	r3, r1, lsl #24
   18a9c:	adc	r0, r0, r0
   18aa0:	subcs	r3, r3, r1, lsl #24
   18aa4:	cmp	r3, r1, lsl #23
   18aa8:	adc	r0, r0, r0
   18aac:	subcs	r3, r3, r1, lsl #23
   18ab0:	cmp	r3, r1, lsl #22
   18ab4:	adc	r0, r0, r0
   18ab8:	subcs	r3, r3, r1, lsl #22
   18abc:	cmp	r3, r1, lsl #21
   18ac0:	adc	r0, r0, r0
   18ac4:	subcs	r3, r3, r1, lsl #21
   18ac8:	cmp	r3, r1, lsl #20
   18acc:	adc	r0, r0, r0
   18ad0:	subcs	r3, r3, r1, lsl #20
   18ad4:	cmp	r3, r1, lsl #19
   18ad8:	adc	r0, r0, r0
   18adc:	subcs	r3, r3, r1, lsl #19
   18ae0:	cmp	r3, r1, lsl #18
   18ae4:	adc	r0, r0, r0
   18ae8:	subcs	r3, r3, r1, lsl #18
   18aec:	cmp	r3, r1, lsl #17
   18af0:	adc	r0, r0, r0
   18af4:	subcs	r3, r3, r1, lsl #17
   18af8:	cmp	r3, r1, lsl #16
   18afc:	adc	r0, r0, r0
   18b00:	subcs	r3, r3, r1, lsl #16
   18b04:	cmp	r3, r1, lsl #15
   18b08:	adc	r0, r0, r0
   18b0c:	subcs	r3, r3, r1, lsl #15
   18b10:	cmp	r3, r1, lsl #14
   18b14:	adc	r0, r0, r0
   18b18:	subcs	r3, r3, r1, lsl #14
   18b1c:	cmp	r3, r1, lsl #13
   18b20:	adc	r0, r0, r0
   18b24:	subcs	r3, r3, r1, lsl #13
   18b28:	cmp	r3, r1, lsl #12
   18b2c:	adc	r0, r0, r0
   18b30:	subcs	r3, r3, r1, lsl #12
   18b34:	cmp	r3, r1, lsl #11
   18b38:	adc	r0, r0, r0
   18b3c:	subcs	r3, r3, r1, lsl #11
   18b40:	cmp	r3, r1, lsl #10
   18b44:	adc	r0, r0, r0
   18b48:	subcs	r3, r3, r1, lsl #10
   18b4c:	cmp	r3, r1, lsl #9
   18b50:	adc	r0, r0, r0
   18b54:	subcs	r3, r3, r1, lsl #9
   18b58:	cmp	r3, r1, lsl #8
   18b5c:	adc	r0, r0, r0
   18b60:	subcs	r3, r3, r1, lsl #8
   18b64:	cmp	r3, r1, lsl #7
   18b68:	adc	r0, r0, r0
   18b6c:	subcs	r3, r3, r1, lsl #7
   18b70:	cmp	r3, r1, lsl #6
   18b74:	adc	r0, r0, r0
   18b78:	subcs	r3, r3, r1, lsl #6
   18b7c:	cmp	r3, r1, lsl #5
   18b80:	adc	r0, r0, r0
   18b84:	subcs	r3, r3, r1, lsl #5
   18b88:	cmp	r3, r1, lsl #4
   18b8c:	adc	r0, r0, r0
   18b90:	subcs	r3, r3, r1, lsl #4
   18b94:	cmp	r3, r1, lsl #3
   18b98:	adc	r0, r0, r0
   18b9c:	subcs	r3, r3, r1, lsl #3
   18ba0:	cmp	r3, r1, lsl #2
   18ba4:	adc	r0, r0, r0
   18ba8:	subcs	r3, r3, r1, lsl #2
   18bac:	cmp	r3, r1, lsl #1
   18bb0:	adc	r0, r0, r0
   18bb4:	subcs	r3, r3, r1, lsl #1
   18bb8:	cmp	r3, r1
   18bbc:	adc	r0, r0, r0
   18bc0:	subcs	r3, r3, r1
   18bc4:	cmp	ip, #0
   18bc8:	rsbmi	r0, r0, #0
   18bcc:	bx	lr
   18bd0:	teq	ip, r0
   18bd4:	rsbmi	r0, r0, #0
   18bd8:	bx	lr
   18bdc:	movcc	r0, #0
   18be0:	asreq	r0, ip, #31
   18be4:	orreq	r0, r0, #1
   18be8:	bx	lr
   18bec:	clz	r2, r1
   18bf0:	rsb	r2, r2, #31
   18bf4:	cmp	ip, #0
   18bf8:	lsr	r0, r3, r2
   18bfc:	rsbmi	r0, r0, #0
   18c00:	bx	lr
   18c04:	cmp	r0, #0
   18c08:	mvngt	r0, #-2147483648	; 0x80000000
   18c0c:	movlt	r0, #-2147483648	; 0x80000000
   18c10:	b	18c34 <argp_error@@Base+0x13d8>
   18c14:	cmp	r1, #0
   18c18:	beq	18c04 <argp_error@@Base+0x13a8>
   18c1c:	push	{r0, r1, lr}
   18c20:	bl	189fc <argp_error@@Base+0x11a0>
   18c24:	pop	{r1, r2, lr}
   18c28:	mul	r3, r2, r0
   18c2c:	sub	r1, r1, r3
   18c30:	bx	lr
   18c34:	push	{r1, lr}
   18c38:	mov	r0, #8
   18c3c:	bl	1169c <raise@plt>
   18c40:	pop	{r1, pc}
   18c44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18c48:	mov	r7, r0
   18c4c:	ldr	r6, [pc, #72]	; 18c9c <argp_error@@Base+0x1440>
   18c50:	ldr	r5, [pc, #72]	; 18ca0 <argp_error@@Base+0x1444>
   18c54:	add	r6, pc, r6
   18c58:	add	r5, pc, r5
   18c5c:	sub	r6, r6, r5
   18c60:	mov	r8, r1
   18c64:	mov	r9, r2
   18c68:	bl	11670 <fputs_unlocked@plt-0x20>
   18c6c:	asrs	r6, r6, #2
   18c70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18c74:	mov	r4, #0
   18c78:	add	r4, r4, #1
   18c7c:	ldr	r3, [r5], #4
   18c80:	mov	r2, r9
   18c84:	mov	r1, r8
   18c88:	mov	r0, r7
   18c8c:	blx	r3
   18c90:	cmp	r6, r4
   18c94:	bne	18c78 <argp_error@@Base+0x141c>
   18c98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18c9c:	andeq	r1, r1, r4, lsr #5
   18ca0:	muleq	r1, ip, r2
   18ca4:	bx	lr

Disassembly of section .fini:

00018ca8 <.fini>:
   18ca8:	push	{r3, lr}
   18cac:	pop	{r3, pc}
