
../repos/prog2/MT2E2-2:     file format elf32-littlearm


Disassembly of section .init:

00010be0 <.init>:
   10be0:	push	{r3, lr}
   10be4:	bl	10d14 <_start@@Base+0x3c>
   10be8:	pop	{r3, pc}

Disassembly of section .plt:

00010bec <calloc@plt-0x14>:
   10bec:	push	{lr}		; (str lr, [sp, #-4]!)
   10bf0:	ldr	lr, [pc, #4]	; 10bfc <calloc@plt-0x4>
   10bf4:	add	lr, pc, lr
   10bf8:	ldr	pc, [lr, #8]!
   10bfc:	andeq	r2, r1, r4, lsl #8

00010c00 <calloc@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #73728	; 0x12000
   10c08:	ldr	pc, [ip, #1028]!	; 0x404

00010c0c <strcmp@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #73728	; 0x12000
   10c14:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c18 <strtol@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #73728	; 0x12000
   10c20:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c24 <printf@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #73728	; 0x12000
   10c2c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c30 <__isoc99_fscanf@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #73728	; 0x12000
   10c38:	ldr	pc, [ip, #996]!	; 0x3e4

00010c3c <fopen@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #73728	; 0x12000
   10c44:	ldr	pc, [ip, #988]!	; 0x3dc

00010c48 <free@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #73728	; 0x12000
   10c50:	ldr	pc, [ip, #980]!	; 0x3d4

00010c54 <realloc@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #73728	; 0x12000
   10c5c:	ldr	pc, [ip, #972]!	; 0x3cc

00010c60 <strcpy@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #73728	; 0x12000
   10c68:	ldr	pc, [ip, #964]!	; 0x3c4

00010c6c <puts@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #73728	; 0x12000
   10c74:	ldr	pc, [ip, #956]!	; 0x3bc

00010c78 <malloc@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #73728	; 0x12000
   10c80:	ldr	pc, [ip, #948]!	; 0x3b4

00010c84 <__libc_start_main@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #73728	; 0x12000
   10c8c:	ldr	pc, [ip, #940]!	; 0x3ac

00010c90 <__gmon_start__@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #932]!	; 0x3a4

00010c9c <strlen@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #924]!	; 0x39c

00010ca8 <putchar@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #916]!	; 0x394

00010cb4 <fclose@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #908]!	; 0x38c

00010cc0 <sprintf@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #900]!	; 0x384

00010ccc <abort@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #892]!	; 0x37c

Disassembly of section .text:

00010cd8 <_start@@Base>:
   10cd8:	mov	fp, #0
   10cdc:	mov	lr, #0
   10ce0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ce4:	mov	r2, sp
   10ce8:	push	{r2}		; (str r2, [sp, #-4]!)
   10cec:	push	{r0}		; (str r0, [sp, #-4]!)
   10cf0:	ldr	ip, [pc, #16]	; 10d08 <_start@@Base+0x30>
   10cf4:	push	{ip}		; (str ip, [sp, #-4]!)
   10cf8:	ldr	r0, [pc, #12]	; 10d0c <_start@@Base+0x34>
   10cfc:	ldr	r3, [pc, #12]	; 10d10 <_start@@Base+0x38>
   10d00:	bl	10c84 <__libc_start_main@plt>
   10d04:	bl	10ccc <abort@plt>
   10d08:	ldrdeq	r2, [r1], -ip
   10d0c:	andeq	r1, r1, r8
   10d10:	andeq	r2, r1, ip, ror r5
   10d14:	ldr	r3, [pc, #20]	; 10d30 <_start@@Base+0x58>
   10d18:	ldr	r2, [pc, #20]	; 10d34 <_start@@Base+0x5c>
   10d1c:	add	r3, pc, r3
   10d20:	ldr	r2, [r3, r2]
   10d24:	cmp	r2, #0
   10d28:	bxeq	lr
   10d2c:	b	10c90 <__gmon_start__@plt>
   10d30:	ldrdeq	r2, [r1], -ip
   10d34:	andeq	r0, r0, r4, asr r0
   10d38:	ldr	r0, [pc, #24]	; 10d58 <_start@@Base+0x80>
   10d3c:	ldr	r3, [pc, #24]	; 10d5c <_start@@Base+0x84>
   10d40:	cmp	r3, r0
   10d44:	bxeq	lr
   10d48:	ldr	r3, [pc, #16]	; 10d60 <_start@@Base+0x88>
   10d4c:	cmp	r3, #0
   10d50:	bxeq	lr
   10d54:	bx	r3
   10d58:	andeq	r3, r2, r0, rrx
   10d5c:	andeq	r3, r2, r0, rrx
   10d60:	andeq	r0, r0, r0
   10d64:	ldr	r0, [pc, #36]	; 10d90 <_start@@Base+0xb8>
   10d68:	ldr	r1, [pc, #36]	; 10d94 <_start@@Base+0xbc>
   10d6c:	sub	r1, r1, r0
   10d70:	asr	r1, r1, #2
   10d74:	add	r1, r1, r1, lsr #31
   10d78:	asrs	r1, r1, #1
   10d7c:	bxeq	lr
   10d80:	ldr	r3, [pc, #16]	; 10d98 <_start@@Base+0xc0>
   10d84:	cmp	r3, #0
   10d88:	bxeq	lr
   10d8c:	bx	r3
   10d90:	andeq	r3, r2, r0, rrx
   10d94:	andeq	r3, r2, r0, rrx
   10d98:	andeq	r0, r0, r0
   10d9c:	push	{r4, lr}
   10da0:	ldr	r4, [pc, #24]	; 10dc0 <_start@@Base+0xe8>
   10da4:	ldrb	r3, [r4]
   10da8:	cmp	r3, #0
   10dac:	popne	{r4, pc}
   10db0:	bl	10d38 <_start@@Base+0x60>
   10db4:	mov	r3, #1
   10db8:	strb	r3, [r4]
   10dbc:	pop	{r4, pc}
   10dc0:	andeq	r3, r2, r0, rrx
   10dc4:	b	10d64 <_start@@Base+0x8c>

00010dc8 <descobre_caminho@@Base>:
   10dc8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10dcc:	strd	r6, [sp, #8]
   10dd0:	strd	r8, [sp, #16]
   10dd4:	strd	sl, [sp, #24]
   10dd8:	str	lr, [sp, #32]
   10ddc:	sub	sp, sp, #20
   10de0:	mov	r9, r0
   10de4:	mov	r4, r1
   10de8:	str	r2, [sp, #4]
   10dec:	mov	fp, r3
   10df0:	bl	11f5c <lista_nova@@Base>
   10df4:	mov	r5, r0
   10df8:	add	r3, sp, #12
   10dfc:	mov	r2, fp
   10e00:	mov	r1, r4
   10e04:	mov	r0, r9
   10e08:	bl	11888 <grafo_bfs@@Base>
   10e0c:	mov	sl, r0
   10e10:	ldr	r3, [sp, #12]
   10e14:	cmp	r3, #0
   10e18:	ble	10e60 <descobre_caminho@@Base+0x98>
   10e1c:	sub	r6, r0, #4
   10e20:	mov	r4, #0
   10e24:	movw	r7, #9708	; 0x25ec
   10e28:	movt	r7, #1
   10e2c:	mvn	r8, #0
   10e30:	ldr	r2, [r6, #4]!
   10e34:	mov	r1, r7
   10e38:	add	r0, sp, #8
   10e3c:	bl	10cc0 <sprintf@plt>
   10e40:	mov	r2, r8
   10e44:	add	r1, sp, #8
   10e48:	mov	r0, r5
   10e4c:	bl	120f0 <lista_insere@@Base>
   10e50:	add	r4, r4, #1
   10e54:	ldr	r3, [sp, #12]
   10e58:	cmp	r3, r4
   10e5c:	bgt	10e30 <descobre_caminho@@Base+0x68>
   10e60:	add	r3, sp, #12
   10e64:	ldr	r2, [sp, #4]
   10e68:	mov	r1, fp
   10e6c:	mov	r0, r9
   10e70:	bl	11888 <grafo_bfs@@Base>
   10e74:	mov	r9, r0
   10e78:	ldr	r3, [sp, #12]
   10e7c:	cmp	r3, #1
   10e80:	ble	10ec8 <descobre_caminho@@Base+0x100>
   10e84:	mov	r6, r0
   10e88:	mov	r4, #1
   10e8c:	movw	r7, #9708	; 0x25ec
   10e90:	movt	r7, #1
   10e94:	mvn	r8, #0
   10e98:	ldr	r2, [r6, #4]!
   10e9c:	mov	r1, r7
   10ea0:	add	r0, sp, #8
   10ea4:	bl	10cc0 <sprintf@plt>
   10ea8:	mov	r2, r8
   10eac:	add	r1, sp, #8
   10eb0:	mov	r0, r5
   10eb4:	bl	120f0 <lista_insere@@Base>
   10eb8:	add	r4, r4, #1
   10ebc:	ldr	r3, [sp, #12]
   10ec0:	cmp	r3, r4
   10ec4:	bgt	10e98 <descobre_caminho@@Base+0xd0>
   10ec8:	mov	r0, r9
   10ecc:	bl	10c48 <free@plt>
   10ed0:	mov	r0, sl
   10ed4:	bl	10c48 <free@plt>
   10ed8:	mov	r0, r5
   10edc:	add	sp, sp, #20
   10ee0:	ldrd	r4, [sp]
   10ee4:	ldrd	r6, [sp, #8]
   10ee8:	ldrd	r8, [sp, #16]
   10eec:	ldrd	sl, [sp, #24]
   10ef0:	add	sp, sp, #32
   10ef4:	pop	{pc}		; (ldr pc, [sp], #4)

00010ef8 <simula_acontecimentos@@Base>:
   10ef8:	cmp	r2, #20
   10efc:	ble	10f08 <simula_acontecimentos@@Base+0x10>
   10f00:	mov	r0, #0
   10f04:	bx	lr
   10f08:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10f0c:	strd	r6, [sp, #8]
   10f10:	strd	r8, [sp, #16]
   10f14:	str	sl, [sp, #24]
   10f18:	str	lr, [sp, #28]
   10f1c:	sub	sp, sp, #24
   10f20:	mov	r5, r2
   10f24:	mov	r7, r1
   10f28:	mov	r6, r0
   10f2c:	mov	r0, r2
   10f30:	bl	11a48 <heap_nova@@Base>
   10f34:	mov	r8, r0
   10f38:	cmp	r5, #0
   10f3c:	ble	10fe0 <simula_acontecimentos@@Base+0xe8>
   10f40:	mov	r4, #0
   10f44:	mov	sl, #10
   10f48:	mov	r9, r4
   10f4c:	b	10f54 <simula_acontecimentos@@Base+0x5c>
   10f50:	mov	r4, r3
   10f54:	mov	r1, r4
   10f58:	mov	r0, r6
   10f5c:	bl	11ff8 <lista_elemento@@Base>
   10f60:	mov	r1, r0
   10f64:	add	r0, sp, #4
   10f68:	bl	10c60 <strcpy@plt>
   10f6c:	mov	r1, r4
   10f70:	mov	r0, r7
   10f74:	bl	11ff8 <lista_elemento@@Base>
   10f78:	mov	r2, sl
   10f7c:	mov	r1, r9
   10f80:	bl	10c18 <strtol@plt>
   10f84:	mov	r2, r0
   10f88:	add	r1, sp, #4
   10f8c:	mov	r0, r8
   10f90:	bl	11d00 <heap_insere@@Base>
   10f94:	add	r3, r4, #1
   10f98:	cmp	r5, r3
   10f9c:	bne	10f50 <simula_acontecimentos@@Base+0x58>
   10fa0:	mov	r5, #0
   10fa4:	mov	r6, r5
   10fa8:	movw	r9, #9712	; 0x25f0
   10fac:	movt	r9, #1
   10fb0:	b	10fb8 <simula_acontecimentos@@Base+0xc0>
   10fb4:	mov	r6, r7
   10fb8:	add	r7, r6, #1
   10fbc:	ldr	r3, [r8, #8]
   10fc0:	ldr	r3, [r3, r5]
   10fc4:	ldr	r2, [r3, #4]
   10fc8:	mov	r1, r7
   10fcc:	mov	r0, r9
   10fd0:	bl	10c24 <printf@plt>
   10fd4:	add	r5, r5, #4
   10fd8:	cmp	r4, r6
   10fdc:	bne	10fb4 <simula_acontecimentos@@Base+0xbc>
   10fe0:	mov	r0, r8
   10fe4:	bl	11ab4 <heap_apaga@@Base>
   10fe8:	mov	r0, #1
   10fec:	add	sp, sp, #24
   10ff0:	ldrd	r4, [sp]
   10ff4:	ldrd	r6, [sp, #8]
   10ff8:	ldrd	r8, [sp, #16]
   10ffc:	ldr	sl, [sp, #24]
   11000:	add	sp, sp, #28
   11004:	pop	{pc}		; (ldr pc, [sp], #4)

00011008 <main@@Base>:
   11008:	strd	r4, [sp, #-20]!	; 0xffffffec
   1100c:	strd	r6, [sp, #8]
   11010:	str	lr, [sp, #16]
   11014:	sub	sp, sp, #36	; 0x24
   11018:	movw	r0, #9720	; 0x25f8
   1101c:	movt	r0, #1
   11020:	bl	10c6c <puts@plt>
   11024:	mov	r1, #1
   11028:	mov	r0, #8
   1102c:	bl	11274 <grafo_novo@@Base>
   11030:	mov	r6, r0
   11034:	mov	r2, #3
   11038:	mov	r1, #1
   1103c:	bl	11514 <grafo_adiciona@@Base>
   11040:	mov	r2, #3
   11044:	mov	r1, #2
   11048:	mov	r0, r6
   1104c:	bl	11514 <grafo_adiciona@@Base>
   11050:	mov	r2, #4
   11054:	mov	r1, #2
   11058:	mov	r0, r6
   1105c:	bl	11514 <grafo_adiciona@@Base>
   11060:	mov	r2, #5
   11064:	mov	r1, #2
   11068:	mov	r0, r6
   1106c:	bl	11514 <grafo_adiciona@@Base>
   11070:	mov	r2, #2
   11074:	mov	r1, #3
   11078:	mov	r0, r6
   1107c:	bl	11514 <grafo_adiciona@@Base>
   11080:	mov	r2, #4
   11084:	mov	r1, #3
   11088:	mov	r0, r6
   1108c:	bl	11514 <grafo_adiciona@@Base>
   11090:	mov	r2, #6
   11094:	mov	r1, #4
   11098:	mov	r0, r6
   1109c:	bl	11514 <grafo_adiciona@@Base>
   110a0:	mov	r2, #7
   110a4:	mov	r1, #4
   110a8:	mov	r0, r6
   110ac:	bl	11514 <grafo_adiciona@@Base>
   110b0:	mov	r2, #4
   110b4:	mov	r1, #5
   110b8:	mov	r0, r6
   110bc:	bl	11514 <grafo_adiciona@@Base>
   110c0:	mov	r2, #6
   110c4:	mov	r1, #5
   110c8:	mov	r0, r6
   110cc:	bl	11514 <grafo_adiciona@@Base>
   110d0:	mov	r2, #7
   110d4:	mov	r1, #5
   110d8:	mov	r0, r6
   110dc:	bl	11514 <grafo_adiciona@@Base>
   110e0:	mov	r2, #7
   110e4:	mov	r1, #6
   110e8:	mov	r0, r6
   110ec:	bl	11514 <grafo_adiciona@@Base>
   110f0:	mov	r3, #5
   110f4:	mov	r2, #7
   110f8:	mov	r1, #1
   110fc:	mov	r0, r6
   11100:	bl	10dc8 <descobre_caminho@@Base>
   11104:	mov	r5, r0
   11108:	movw	r0, #9740	; 0x260c
   1110c:	movt	r0, #1
   11110:	bl	10c24 <printf@plt>
   11114:	mov	r4, #0
   11118:	movw	r7, #9804	; 0x264c
   1111c:	movt	r7, #1
   11120:	mov	r0, r5
   11124:	bl	11fe8 <lista_tamanho@@Base>
   11128:	cmp	r0, r4
   1112c:	ble	11150 <main@@Base+0x148>
   11130:	mov	r1, r4
   11134:	mov	r0, r5
   11138:	bl	11ff8 <lista_elemento@@Base>
   1113c:	mov	r1, r0
   11140:	mov	r0, r7
   11144:	bl	10c24 <printf@plt>
   11148:	add	r4, r4, #1
   1114c:	b	11120 <main@@Base+0x118>
   11150:	movw	r0, #9808	; 0x2650
   11154:	movt	r0, #1
   11158:	bl	10c6c <puts@plt>
   1115c:	mov	r0, r6
   11160:	bl	112e0 <grafo_apaga@@Base>
   11164:	mov	r0, r5
   11168:	bl	11f8c <lista_apaga@@Base>
   1116c:	movw	r0, #9812	; 0x2654
   11170:	movt	r0, #1
   11174:	bl	10c6c <puts@plt>
   11178:	movw	r1, #9832	; 0x2668
   1117c:	movt	r1, #1
   11180:	movw	r0, #9836	; 0x266c
   11184:	movt	r0, #1
   11188:	bl	10c3c <fopen@plt>
   1118c:	mov	r5, r0
   11190:	bl	11f5c <lista_nova@@Base>
   11194:	mov	r7, r0
   11198:	bl	11f5c <lista_nova@@Base>
   1119c:	mov	r6, r0
   111a0:	movw	r4, #9848	; 0x2678
   111a4:	movt	r4, #1
   111a8:	b	111cc <main@@Base+0x1c4>
   111ac:	mvn	r2, #0
   111b0:	add	r1, sp, #8
   111b4:	mov	r0, r7
   111b8:	bl	120f0 <lista_insere@@Base>
   111bc:	mvn	r2, #0
   111c0:	mov	r1, sp
   111c4:	mov	r0, r6
   111c8:	bl	120f0 <lista_insere@@Base>
   111cc:	mov	r3, sp
   111d0:	add	r2, sp, #8
   111d4:	mov	r1, r4
   111d8:	mov	r0, r5
   111dc:	bl	10c30 <__isoc99_fscanf@plt>
   111e0:	cmp	r0, #2
   111e4:	beq	111ac <main@@Base+0x1a4>
   111e8:	mov	r2, #4
   111ec:	mov	r1, r6
   111f0:	mov	r0, r7
   111f4:	bl	10ef8 <simula_acontecimentos@@Base>
   111f8:	cmp	r0, #0
   111fc:	beq	11230 <main@@Base+0x228>
   11200:	mov	r0, r7
   11204:	bl	11f8c <lista_apaga@@Base>
   11208:	mov	r0, r6
   1120c:	bl	11f8c <lista_apaga@@Base>
   11210:	mov	r0, r5
   11214:	bl	10cb4 <fclose@plt>
   11218:	mov	r0, #0
   1121c:	add	sp, sp, #36	; 0x24
   11220:	ldrd	r4, [sp]
   11224:	ldrd	r6, [sp, #8]
   11228:	add	sp, sp, #16
   1122c:	pop	{pc}		; (ldr pc, [sp], #4)
   11230:	movw	r0, #9856	; 0x2680
   11234:	movt	r0, #1
   11238:	bl	10c6c <puts@plt>
   1123c:	b	11200 <main@@Base+0x1f8>

00011240 <cria_no@@Base>:
   11240:	str	r4, [sp, #-8]!
   11244:	str	lr, [sp, #4]
   11248:	mov	r4, r0
   1124c:	mov	r0, #8
   11250:	bl	10c78 <malloc@plt>
   11254:	cmp	r0, #0
   11258:	beq	11268 <cria_no@@Base+0x28>
   1125c:	str	r4, [r0]
   11260:	mov	r3, #0
   11264:	str	r3, [r0, #4]
   11268:	ldr	r4, [sp]
   1126c:	add	sp, sp, #4
   11270:	pop	{pc}		; (ldr pc, [sp], #4)

00011274 <grafo_novo@@Base>:
   11274:	strd	r4, [sp, #-16]!
   11278:	str	r6, [sp, #8]
   1127c:	str	lr, [sp, #12]
   11280:	mov	r5, r0
   11284:	mov	r6, r1
   11288:	mov	r0, #12
   1128c:	bl	10c78 <malloc@plt>
   11290:	subs	r4, r0, #0
   11294:	beq	112bc <grafo_novo@@Base+0x48>
   11298:	str	r5, [r4, #4]
   1129c:	str	r6, [r4]
   112a0:	mov	r1, #8
   112a4:	mov	r0, r5
   112a8:	bl	10c00 <calloc@plt>
   112ac:	mov	r5, r0
   112b0:	str	r0, [r4, #8]
   112b4:	cmp	r0, #0
   112b8:	beq	112d0 <grafo_novo@@Base+0x5c>
   112bc:	mov	r0, r4
   112c0:	ldrd	r4, [sp]
   112c4:	ldr	r6, [sp, #8]
   112c8:	add	sp, sp, #12
   112cc:	pop	{pc}		; (ldr pc, [sp], #4)
   112d0:	mov	r0, r4
   112d4:	bl	10c48 <free@plt>
   112d8:	mov	r4, r5
   112dc:	b	112bc <grafo_novo@@Base+0x48>

000112e0 <grafo_apaga@@Base>:
   112e0:	strd	r4, [sp, #-16]!
   112e4:	str	r6, [sp, #8]
   112e8:	str	lr, [sp, #12]
   112ec:	subs	r4, r0, #0
   112f0:	beq	11320 <grafo_apaga@@Base+0x40>
   112f4:	ldr	r3, [r4, #8]
   112f8:	cmp	r3, #0
   112fc:	beq	11318 <grafo_apaga@@Base+0x38>
   11300:	ldr	r3, [r4, #4]
   11304:	cmp	r3, #0
   11308:	movgt	r6, #0
   1130c:	bgt	11340 <grafo_apaga@@Base+0x60>
   11310:	ldr	r0, [r4, #8]
   11314:	bl	10c48 <free@plt>
   11318:	mov	r0, r4
   1131c:	bl	10c48 <free@plt>
   11320:	ldrd	r4, [sp]
   11324:	ldr	r6, [sp, #8]
   11328:	add	sp, sp, #12
   1132c:	pop	{pc}		; (ldr pc, [sp], #4)
   11330:	add	r6, r6, #1
   11334:	ldr	r3, [r4, #4]
   11338:	cmp	r3, r6
   1133c:	ble	11310 <grafo_apaga@@Base+0x30>
   11340:	lsl	r5, r6, #3
   11344:	ldr	r3, [r4, #8]
   11348:	add	r3, r3, r5
   1134c:	ldr	r0, [r3, #4]
   11350:	cmp	r0, #0
   11354:	beq	11330 <grafo_apaga@@Base+0x50>
   11358:	ldr	r2, [r0, #4]
   1135c:	str	r2, [r3, #4]
   11360:	bl	10c48 <free@plt>
   11364:	ldr	r3, [r4, #8]
   11368:	add	r3, r3, r5
   1136c:	ldr	r0, [r3, #4]
   11370:	cmp	r0, #0
   11374:	bne	11358 <grafo_apaga@@Base+0x78>
   11378:	b	11330 <grafo_apaga@@Base+0x50>

0001137c <grafo_remove@@Base>:
   1137c:	strd	r4, [sp, #-16]!
   11380:	str	r6, [sp, #8]
   11384:	str	lr, [sp, #12]
   11388:	subs	r6, r0, #0
   1138c:	beq	1149c <grafo_remove@@Base+0x120>
   11390:	ldr	r3, [r6, #8]
   11394:	add	r3, r3, r1, lsl #3
   11398:	ldr	ip, [r3, #4]
   1139c:	cmp	ip, #0
   113a0:	beq	1149c <grafo_remove@@Base+0x120>
   113a4:	mov	r4, r2
   113a8:	mov	r5, r1
   113ac:	ldr	r2, [ip]
   113b0:	cmp	r2, r4
   113b4:	beq	113f0 <grafo_remove@@Base+0x74>
   113b8:	ldr	r3, [ip, #4]
   113bc:	cmp	r3, #0
   113c0:	beq	11418 <grafo_remove@@Base+0x9c>
   113c4:	ldr	r2, [r3]
   113c8:	cmp	r4, r2
   113cc:	beq	11404 <grafo_remove@@Base+0x88>
   113d0:	ldr	r0, [r3, #4]
   113d4:	cmp	r0, #0
   113d8:	beq	11418 <grafo_remove@@Base+0x9c>
   113dc:	ldr	ip, [r0]
   113e0:	cmp	ip, r4
   113e4:	beq	1140c <grafo_remove@@Base+0x90>
   113e8:	mov	r3, r0
   113ec:	b	113d0 <grafo_remove@@Base+0x54>
   113f0:	ldr	r2, [ip, #4]
   113f4:	str	r2, [r3, #4]
   113f8:	mov	r0, ip
   113fc:	bl	10c48 <free@plt>
   11400:	b	11418 <grafo_remove@@Base+0x9c>
   11404:	mov	r0, r3
   11408:	mov	r3, ip
   1140c:	ldr	r2, [r0, #4]
   11410:	str	r2, [r3, #4]
   11414:	bl	10c48 <free@plt>
   11418:	ldr	r3, [r6]
   1141c:	cmp	r3, #0
   11420:	bne	1149c <grafo_remove@@Base+0x120>
   11424:	ldr	r2, [r6, #8]
   11428:	add	r4, r2, r4, lsl #3
   1142c:	ldr	r2, [r4, #4]
   11430:	ldr	r3, [r2]
   11434:	cmp	r3, r5
   11438:	beq	11474 <grafo_remove@@Base+0xf8>
   1143c:	ldr	r3, [r2, #4]
   11440:	cmp	r3, #0
   11444:	beq	1149c <grafo_remove@@Base+0x120>
   11448:	ldr	r1, [r3]
   1144c:	cmp	r5, r1
   11450:	beq	11488 <grafo_remove@@Base+0x10c>
   11454:	ldr	r0, [r3, #4]
   11458:	cmp	r0, #0
   1145c:	beq	1149c <grafo_remove@@Base+0x120>
   11460:	ldr	r2, [r0]
   11464:	cmp	r2, r5
   11468:	beq	11490 <grafo_remove@@Base+0x114>
   1146c:	mov	r3, r0
   11470:	b	11454 <grafo_remove@@Base+0xd8>
   11474:	ldr	r3, [r2, #4]
   11478:	str	r3, [r4, #4]
   1147c:	mov	r0, r2
   11480:	bl	10c48 <free@plt>
   11484:	b	1149c <grafo_remove@@Base+0x120>
   11488:	mov	r0, r3
   1148c:	mov	r3, r2
   11490:	ldr	r2, [r0, #4]
   11494:	str	r2, [r3, #4]
   11498:	bl	10c48 <free@plt>
   1149c:	ldrd	r4, [sp]
   114a0:	ldr	r6, [sp, #8]
   114a4:	add	sp, sp, #12
   114a8:	pop	{pc}		; (ldr pc, [sp], #4)

000114ac <grafo_existe@@Base>:
   114ac:	cmp	r0, #0
   114b0:	beq	114fc <grafo_existe@@Base+0x50>
   114b4:	ldr	r3, [r0, #8]
   114b8:	add	r3, r3, r1, lsl #3
   114bc:	ldr	r3, [r3, #4]
   114c0:	cmp	r3, #0
   114c4:	beq	11504 <grafo_existe@@Base+0x58>
   114c8:	ldr	r1, [r3]
   114cc:	cmp	r2, r1
   114d0:	beq	1150c <grafo_existe@@Base+0x60>
   114d4:	ldr	r3, [r3, #4]
   114d8:	cmp	r3, #0
   114dc:	beq	114f4 <grafo_existe@@Base+0x48>
   114e0:	ldr	r1, [r3]
   114e4:	cmp	r1, r2
   114e8:	bne	114d4 <grafo_existe@@Base+0x28>
   114ec:	mov	r0, #1
   114f0:	bx	lr
   114f4:	mov	r0, #0
   114f8:	bx	lr
   114fc:	mov	r0, #0
   11500:	bx	lr
   11504:	mov	r0, #0
   11508:	bx	lr
   1150c:	mov	r0, #1
   11510:	bx	lr

00011514 <grafo_adiciona@@Base>:
   11514:	strd	r4, [sp, #-16]!
   11518:	str	r6, [sp, #8]
   1151c:	str	lr, [sp, #12]
   11520:	subs	r4, r0, #0
   11524:	beq	11540 <grafo_adiciona@@Base+0x2c>
   11528:	mov	r6, r2
   1152c:	mov	r5, r1
   11530:	mov	r0, r4
   11534:	bl	114ac <grafo_existe@@Base>
   11538:	cmp	r0, #0
   1153c:	beq	11550 <grafo_adiciona@@Base+0x3c>
   11540:	ldrd	r4, [sp]
   11544:	ldr	r6, [sp, #8]
   11548:	add	sp, sp, #12
   1154c:	pop	{pc}		; (ldr pc, [sp], #4)
   11550:	mov	r0, r6
   11554:	bl	11240 <cria_no@@Base>
   11558:	lsl	r3, r5, #3
   1155c:	ldr	r2, [r4, #8]
   11560:	add	r2, r2, r3
   11564:	ldr	r2, [r2, #4]
   11568:	str	r2, [r0, #4]
   1156c:	ldr	r2, [r4, #8]
   11570:	add	r3, r2, r3
   11574:	str	r0, [r3, #4]
   11578:	ldr	r2, [r4, #8]
   1157c:	ldr	r3, [r2, r5, lsl #3]
   11580:	add	r3, r3, #1
   11584:	str	r3, [r2, r5, lsl #3]
   11588:	ldr	r3, [r4]
   1158c:	cmp	r3, #0
   11590:	bne	11540 <grafo_adiciona@@Base+0x2c>
   11594:	mov	r0, r5
   11598:	bl	11240 <cria_no@@Base>
   1159c:	lsl	r1, r6, #3
   115a0:	ldr	r2, [r4, #8]
   115a4:	add	r2, r2, r1
   115a8:	ldr	r3, [r2, #4]
   115ac:	str	r3, [r0, #4]
   115b0:	ldr	r3, [r4, #8]
   115b4:	add	r3, r3, r1
   115b8:	str	r0, [r3, #4]
   115bc:	ldr	r2, [r4, #8]
   115c0:	ldr	r3, [r2, r6, lsl #3]
   115c4:	add	r3, r3, #1
   115c8:	str	r3, [r2, r6, lsl #3]
   115cc:	b	11540 <grafo_adiciona@@Base+0x2c>

000115d0 <grafo_imprime@@Base>:
   115d0:	ldr	r3, [r0, #4]
   115d4:	cmp	r3, #0
   115d8:	bxle	lr
   115dc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   115e0:	strd	r6, [sp, #8]
   115e4:	strd	r8, [sp, #16]
   115e8:	str	sl, [sp, #24]
   115ec:	str	lr, [sp, #28]
   115f0:	mov	r7, r0
   115f4:	mov	r5, #0
   115f8:	movw	r8, #9884	; 0x269c
   115fc:	movt	r8, #1
   11600:	movw	r9, #9708	; 0x25ec
   11604:	movt	r9, #1
   11608:	movw	r6, #9892	; 0x26a4
   1160c:	movt	r6, #1
   11610:	b	1162c <grafo_imprime@@Base+0x5c>
   11614:	mov	r0, #10
   11618:	bl	10ca8 <putchar@plt>
   1161c:	add	r5, r5, #1
   11620:	ldr	r3, [r7, #4]
   11624:	cmp	r3, r5
   11628:	ble	11680 <grafo_imprime@@Base+0xb0>
   1162c:	ldr	r3, [r7, #8]
   11630:	add	r3, r3, r5, lsl #3
   11634:	ldr	r4, [r3, #4]
   11638:	mov	r1, r5
   1163c:	mov	r0, r8
   11640:	bl	10c24 <printf@plt>
   11644:	cmp	r4, #0
   11648:	beq	11614 <grafo_imprime@@Base+0x44>
   1164c:	ldr	r1, [r4]
   11650:	mov	r0, r9
   11654:	bl	10c24 <printf@plt>
   11658:	ldr	r4, [r4, #4]
   1165c:	cmp	r4, #0
   11660:	beq	11614 <grafo_imprime@@Base+0x44>
   11664:	ldr	r1, [r4]
   11668:	mov	r0, r6
   1166c:	bl	10c24 <printf@plt>
   11670:	ldr	r4, [r4, #4]
   11674:	cmp	r4, #0
   11678:	bne	11664 <grafo_imprime@@Base+0x94>
   1167c:	b	11614 <grafo_imprime@@Base+0x44>
   11680:	ldrd	r4, [sp]
   11684:	ldrd	r6, [sp, #8]
   11688:	ldrd	r8, [sp, #16]
   1168c:	ldr	sl, [sp, #24]
   11690:	add	sp, sp, #28
   11694:	pop	{pc}		; (ldr pc, [sp], #4)

00011698 <dfs_helper@@Base>:
   11698:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1169c:	strd	r6, [sp, #8]
   116a0:	strd	r8, [sp, #16]
   116a4:	str	sl, [sp, #24]
   116a8:	str	lr, [sp, #28]
   116ac:	sub	sp, sp, #8
   116b0:	ldr	r7, [sp, #40]	; 0x28
   116b4:	ldr	r8, [r7, r1, lsl #2]
   116b8:	cmp	r8, #0
   116bc:	movne	r8, #0
   116c0:	bne	11750 <dfs_helper@@Base+0xb8>
   116c4:	str	r3, [r7, r1, lsl #2]
   116c8:	cmp	r1, r2
   116cc:	moveq	r8, r3
   116d0:	beq	11750 <dfs_helper@@Base+0xb8>
   116d4:	mov	r9, r2
   116d8:	mov	r6, r1
   116dc:	mov	r5, r0
   116e0:	ldr	r2, [r0, #4]
   116e4:	cmp	r2, #0
   116e8:	ble	11748 <dfs_helper@@Base+0xb0>
   116ec:	mov	r4, r8
   116f0:	add	sl, r3, #1
   116f4:	b	11708 <dfs_helper@@Base+0x70>
   116f8:	add	r4, r4, #1
   116fc:	ldr	r3, [r5, #4]
   11700:	cmp	r3, r4
   11704:	ble	11748 <dfs_helper@@Base+0xb0>
   11708:	mov	r2, r4
   1170c:	mov	r1, r6
   11710:	mov	r0, r5
   11714:	bl	114ac <grafo_existe@@Base>
   11718:	cmp	r0, #0
   1171c:	beq	116f8 <dfs_helper@@Base+0x60>
   11720:	str	r7, [sp]
   11724:	mov	r3, sl
   11728:	mov	r2, r9
   1172c:	mov	r1, r4
   11730:	mov	r0, r5
   11734:	bl	11698 <dfs_helper@@Base>
   11738:	cmp	r0, #0
   1173c:	beq	116f8 <dfs_helper@@Base+0x60>
   11740:	mov	r8, r0
   11744:	b	11750 <dfs_helper@@Base+0xb8>
   11748:	mov	r3, #0
   1174c:	str	r3, [r7, r6, lsl #2]
   11750:	mov	r0, r8
   11754:	add	sp, sp, #8
   11758:	ldrd	r4, [sp]
   1175c:	ldrd	r6, [sp, #8]
   11760:	ldrd	r8, [sp, #16]
   11764:	ldr	sl, [sp, #24]
   11768:	add	sp, sp, #28
   1176c:	pop	{pc}		; (ldr pc, [sp], #4)

00011770 <grafo_dfs@@Base>:
   11770:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11774:	strd	r6, [sp, #8]
   11778:	strd	r8, [sp, #16]
   1177c:	str	lr, [sp, #24]
   11780:	sub	sp, sp, #12
   11784:	subs	r9, r0, #0
   11788:	moveq	r8, r9
   1178c:	beq	1186c <grafo_dfs@@Base+0xfc>
   11790:	mov	r7, r3
   11794:	mov	r6, r2
   11798:	mov	r5, r1
   1179c:	mov	r1, #4
   117a0:	ldr	r0, [r9, #4]
   117a4:	bl	10c00 <calloc@plt>
   117a8:	mov	r4, r0
   117ac:	str	r0, [sp]
   117b0:	mov	r3, #1
   117b4:	mov	r2, r6
   117b8:	mov	r1, r5
   117bc:	mov	r0, r9
   117c0:	bl	11698 <dfs_helper@@Base>
   117c4:	subs	r6, r0, #0
   117c8:	beq	117f8 <grafo_dfs@@Base+0x88>
   117cc:	mov	r5, r6
   117d0:	mov	r1, #4
   117d4:	mov	r0, r6
   117d8:	bl	10c00 <calloc@plt>
   117dc:	mov	r8, r0
   117e0:	cmp	r6, #0
   117e4:	ble	11860 <grafo_dfs@@Base+0xf0>
   117e8:	ldr	r3, [r9, #4]
   117ec:	mov	lr, #1
   117f0:	sub	r9, r0, #4
   117f4:	b	11824 <grafo_dfs@@Base+0xb4>
   117f8:	mov	r0, r4
   117fc:	bl	10c48 <free@plt>
   11800:	mov	r8, #0
   11804:	str	r8, [r7]
   11808:	b	1186c <grafo_dfs@@Base+0xfc>
   1180c:	mov	r2, #0
   11810:	str	r2, [r9, lr, lsl #2]
   11814:	add	r2, lr, #1
   11818:	cmp	r5, lr
   1181c:	beq	11860 <grafo_dfs@@Base+0xf0>
   11820:	mov	lr, r2
   11824:	cmp	r3, #0
   11828:	ble	11814 <grafo_dfs@@Base+0xa4>
   1182c:	mov	ip, lr
   11830:	ldr	r2, [r4]
   11834:	cmp	r2, lr
   11838:	movne	r1, r4
   1183c:	movne	r2, #0
   11840:	beq	1180c <grafo_dfs@@Base+0x9c>
   11844:	add	r2, r2, #1
   11848:	cmp	r2, r3
   1184c:	beq	11814 <grafo_dfs@@Base+0xa4>
   11850:	ldr	r0, [r1, #4]!
   11854:	cmp	r0, ip
   11858:	bne	11844 <grafo_dfs@@Base+0xd4>
   1185c:	b	11810 <grafo_dfs@@Base+0xa0>
   11860:	str	r6, [r7]
   11864:	mov	r0, r4
   11868:	bl	10c48 <free@plt>
   1186c:	mov	r0, r8
   11870:	add	sp, sp, #12
   11874:	ldrd	r4, [sp]
   11878:	ldrd	r6, [sp, #8]
   1187c:	ldrd	r8, [sp, #16]
   11880:	add	sp, sp, #24
   11884:	pop	{pc}		; (ldr pc, [sp], #4)

00011888 <grafo_bfs@@Base>:
   11888:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1188c:	strd	r6, [sp, #8]
   11890:	strd	r8, [sp, #16]
   11894:	strd	sl, [sp, #24]
   11898:	str	lr, [sp, #32]
   1189c:	sub	sp, sp, #20
   118a0:	str	r3, [sp, #8]
   118a4:	subs	r3, r0, #0
   118a8:	mov	r6, r3
   118ac:	beq	11a2c <grafo_bfs@@Base+0x1a4>
   118b0:	mov	r4, r1
   118b4:	mov	r8, r2
   118b8:	ldr	r5, [r3, #4]
   118bc:	mov	r1, #4
   118c0:	mov	r0, r5
   118c4:	bl	10c00 <calloc@plt>
   118c8:	mov	r9, r0
   118cc:	mov	r1, #4
   118d0:	mov	r0, r5
   118d4:	bl	10c00 <calloc@plt>
   118d8:	mov	fp, r0
   118dc:	cmp	r5, #0
   118e0:	ble	118fc <grafo_bfs@@Base+0x74>
   118e4:	mov	r3, r9
   118e8:	add	r1, r9, r5, lsl #2
   118ec:	mvn	r2, #0
   118f0:	str	r2, [r3], #4
   118f4:	cmp	r3, r1
   118f8:	bne	118f0 <grafo_bfs@@Base+0x68>
   118fc:	str	r4, [r9, r4, lsl #2]
   11900:	str	r4, [fp]
   11904:	mov	r7, #1
   11908:	mov	sl, #0
   1190c:	str	r8, [sp, #12]
   11910:	mov	r8, r6
   11914:	b	11968 <grafo_bfs@@Base+0xe0>
   11918:	add	r4, r4, #1
   1191c:	cmp	r5, r4
   11920:	beq	11960 <grafo_bfs@@Base+0xd8>
   11924:	mov	r2, r4
   11928:	mov	r1, r6
   1192c:	mov	r0, r8
   11930:	bl	114ac <grafo_existe@@Base>
   11934:	cmp	r0, #0
   11938:	beq	11918 <grafo_bfs@@Base+0x90>
   1193c:	ldr	r3, [r9, r4, lsl #2]
   11940:	cmn	r3, #1
   11944:	bne	11918 <grafo_bfs@@Base+0x90>
   11948:	str	r6, [r9, r4, lsl #2]
   1194c:	str	r4, [fp, r7, lsl #2]
   11950:	add	r7, r7, #1
   11954:	sdiv	r3, r7, r5
   11958:	mls	r7, r5, r3, r7
   1195c:	b	11918 <grafo_bfs@@Base+0x90>
   11960:	cmp	sl, r7
   11964:	beq	11988 <grafo_bfs@@Base+0x100>
   11968:	ldr	r6, [fp, sl, lsl #2]
   1196c:	add	sl, sl, #1
   11970:	sdiv	r3, sl, r5
   11974:	mls	sl, r5, r3, sl
   11978:	cmp	r5, #0
   1197c:	ble	11960 <grafo_bfs@@Base+0xd8>
   11980:	mov	r4, #0
   11984:	b	11924 <grafo_bfs@@Base+0x9c>
   11988:	ldr	r8, [sp, #12]
   1198c:	ldr	r3, [r9, r8, lsl #2]
   11990:	cmp	r3, #0
   11994:	movlt	r4, #0
   11998:	blt	119f4 <grafo_bfs@@Base+0x16c>
   1199c:	cmp	r3, r8
   119a0:	beq	11a34 <grafo_bfs@@Base+0x1ac>
   119a4:	mov	r4, #1
   119a8:	b	119b0 <grafo_bfs@@Base+0x128>
   119ac:	mov	r3, r2
   119b0:	add	r4, r4, #1
   119b4:	ldr	r2, [r9, r3, lsl #2]
   119b8:	cmp	r2, r3
   119bc:	bne	119ac <grafo_bfs@@Base+0x124>
   119c0:	lsl	r0, r4, #2
   119c4:	bl	10c78 <malloc@plt>
   119c8:	str	r0, [sp, #4]
   119cc:	cmp	r4, #0
   119d0:	ble	119f4 <grafo_bfs@@Base+0x16c>
   119d4:	ldr	r3, [sp, #4]
   119d8:	add	r2, r3, r4, lsl #2
   119dc:	mov	r3, #0
   119e0:	str	r8, [r2, #-4]!
   119e4:	ldr	r8, [r9, r8, lsl #2]
   119e8:	add	r3, r3, #1
   119ec:	cmp	r4, r3
   119f0:	bgt	119e0 <grafo_bfs@@Base+0x158>
   119f4:	mov	r0, fp
   119f8:	bl	10c48 <free@plt>
   119fc:	mov	r0, r9
   11a00:	bl	10c48 <free@plt>
   11a04:	ldr	r3, [sp, #8]
   11a08:	str	r4, [r3]
   11a0c:	ldr	r0, [sp, #4]
   11a10:	add	sp, sp, #20
   11a14:	ldrd	r4, [sp]
   11a18:	ldrd	r6, [sp, #8]
   11a1c:	ldrd	r8, [sp, #16]
   11a20:	ldrd	sl, [sp, #24]
   11a24:	add	sp, sp, #32
   11a28:	pop	{pc}		; (ldr pc, [sp], #4)
   11a2c:	str	r3, [sp, #4]
   11a30:	b	11a0c <grafo_bfs@@Base+0x184>
   11a34:	mov	r0, #4
   11a38:	bl	10c78 <malloc@plt>
   11a3c:	str	r0, [sp, #4]
   11a40:	mov	r4, #1
   11a44:	b	119d4 <grafo_bfs@@Base+0x14c>

00011a48 <heap_nova@@Base>:
   11a48:	strd	r4, [sp, #-16]!
   11a4c:	str	r6, [sp, #8]
   11a50:	str	lr, [sp, #12]
   11a54:	mov	r5, r0
   11a58:	mov	r0, #12
   11a5c:	bl	10c78 <malloc@plt>
   11a60:	subs	r4, r0, #0
   11a64:	beq	11a90 <heap_nova@@Base+0x48>
   11a68:	mov	r3, #0
   11a6c:	str	r3, [r4]
   11a70:	str	r5, [r4, #4]
   11a74:	mov	r1, #4
   11a78:	mov	r0, r5
   11a7c:	bl	10c00 <calloc@plt>
   11a80:	mov	r5, r0
   11a84:	str	r0, [r4, #8]
   11a88:	cmp	r0, #0
   11a8c:	beq	11aa4 <heap_nova@@Base+0x5c>
   11a90:	mov	r0, r4
   11a94:	ldrd	r4, [sp]
   11a98:	ldr	r6, [sp, #8]
   11a9c:	add	sp, sp, #12
   11aa0:	pop	{pc}		; (ldr pc, [sp], #4)
   11aa4:	mov	r0, r4
   11aa8:	bl	10c48 <free@plt>
   11aac:	mov	r4, r5
   11ab0:	b	11a90 <heap_nova@@Base+0x48>

00011ab4 <heap_apaga@@Base>:
   11ab4:	strd	r4, [sp, #-16]!
   11ab8:	str	r6, [sp, #8]
   11abc:	str	lr, [sp, #12]
   11ac0:	subs	r5, r0, #0
   11ac4:	beq	11b20 <heap_apaga@@Base+0x6c>
   11ac8:	ldr	r3, [r5]
   11acc:	cmp	r3, #0
   11ad0:	ble	11b10 <heap_apaga@@Base+0x5c>
   11ad4:	mov	r4, #0
   11ad8:	mov	r6, r4
   11adc:	ldr	r3, [r5, #8]
   11ae0:	ldr	r3, [r3, r4, lsl #2]
   11ae4:	ldr	r0, [r3, #4]
   11ae8:	bl	10c48 <free@plt>
   11aec:	ldr	r3, [r5, #8]
   11af0:	ldr	r0, [r3, r4, lsl #2]
   11af4:	bl	10c48 <free@plt>
   11af8:	ldr	r3, [r5, #8]
   11afc:	str	r6, [r3, r4, lsl #2]
   11b00:	add	r4, r4, #1
   11b04:	ldr	r3, [r5]
   11b08:	cmp	r3, r4
   11b0c:	bgt	11adc <heap_apaga@@Base+0x28>
   11b10:	ldr	r0, [r5, #8]
   11b14:	bl	10c48 <free@plt>
   11b18:	mov	r0, r5
   11b1c:	bl	10c48 <free@plt>
   11b20:	ldrd	r4, [sp]
   11b24:	ldr	r6, [sp, #8]
   11b28:	add	sp, sp, #12
   11b2c:	pop	{pc}		; (ldr pc, [sp], #4)

00011b30 <elemento_cria@@Base>:
   11b30:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11b34:	strd	r6, [sp, #8]
   11b38:	str	r8, [sp, #16]
   11b3c:	str	lr, [sp, #20]
   11b40:	mov	r7, r0
   11b44:	mov	r6, r1
   11b48:	mov	r0, #8
   11b4c:	bl	10c78 <malloc@plt>
   11b50:	subs	r4, r0, #0
   11b54:	beq	11b88 <elemento_cria@@Base+0x58>
   11b58:	mov	r0, r6
   11b5c:	bl	10c9c <strlen@plt>
   11b60:	mov	r1, #1
   11b64:	add	r0, r0, r1
   11b68:	bl	10c00 <calloc@plt>
   11b6c:	mov	r5, r0
   11b70:	str	r0, [r4, #4]
   11b74:	cmp	r0, #0
   11b78:	beq	11ba0 <elemento_cria@@Base+0x70>
   11b7c:	mov	r1, r6
   11b80:	bl	10c60 <strcpy@plt>
   11b84:	str	r7, [r4]
   11b88:	mov	r0, r4
   11b8c:	ldrd	r4, [sp]
   11b90:	ldrd	r6, [sp, #8]
   11b94:	ldr	r8, [sp, #16]
   11b98:	add	sp, sp, #20
   11b9c:	pop	{pc}		; (ldr pc, [sp], #4)
   11ba0:	mov	r0, r4
   11ba4:	bl	10c48 <free@plt>
   11ba8:	mov	r4, r5
   11bac:	b	11b88 <elemento_cria@@Base+0x58>

00011bb0 <mostraHeap@@Base>:
   11bb0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11bb4:	strd	r6, [sp, #8]
   11bb8:	strd	r8, [sp, #16]
   11bbc:	str	sl, [sp, #24]
   11bc0:	str	lr, [sp, #28]
   11bc4:	ldr	r3, [r0]
   11bc8:	cmp	r3, r1
   11bcc:	ble	11c78 <mostraHeap@@Base+0xc8>
   11bd0:	mov	r7, r0
   11bd4:	mov	r6, r1
   11bd8:	cmp	r1, #0
   11bdc:	ble	11c98 <mostraHeap@@Base+0xe8>
   11be0:	mov	r2, r1
   11be4:	mov	r5, #0
   11be8:	b	11bf0 <mostraHeap@@Base+0x40>
   11bec:	mov	r2, r3
   11bf0:	sub	r3, r2, #1
   11bf4:	add	r3, r3, r3, lsr #31
   11bf8:	asr	r3, r3, #1
   11bfc:	add	r5, r5, #1
   11c00:	cmp	r2, #2
   11c04:	bgt	11bec <mostraHeap@@Base+0x3c>
   11c08:	lsl	r1, r6, #1
   11c0c:	add	r1, r1, #1
   11c10:	mov	r0, r7
   11c14:	bl	11bb0 <mostraHeap@@Base>
   11c18:	add	r9, r5, r5, lsl #1
   11c1c:	cmp	r9, #0
   11c20:	ble	11c44 <mostraHeap@@Base+0x94>
   11c24:	mov	r4, #0
   11c28:	movw	r8, #9900	; 0x26ac
   11c2c:	movt	r8, #1
   11c30:	mov	r0, r8
   11c34:	bl	10c24 <printf@plt>
   11c38:	add	r4, r4, #1
   11c3c:	cmp	r4, r9
   11c40:	bne	11c30 <mostraHeap@@Base+0x80>
   11c44:	ldr	r3, [r7, #8]
   11c48:	ldr	r3, [r3, r6, lsl #2]
   11c4c:	ldr	r2, [r3]
   11c50:	ldr	r1, [r3, #4]
   11c54:	movw	r0, #9908	; 0x26b4
   11c58:	movt	r0, #1
   11c5c:	bl	10c24 <printf@plt>
   11c60:	add	r1, r6, #1
   11c64:	lsl	r1, r1, #1
   11c68:	mov	r0, r7
   11c6c:	bl	11bb0 <mostraHeap@@Base>
   11c70:	cmp	r5, #0
   11c74:	bne	11c80 <mostraHeap@@Base+0xd0>
   11c78:	mov	r0, #10
   11c7c:	bl	10ca8 <putchar@plt>
   11c80:	ldrd	r4, [sp]
   11c84:	ldrd	r6, [sp, #8]
   11c88:	ldrd	r8, [sp, #16]
   11c8c:	ldr	sl, [sp, #24]
   11c90:	add	sp, sp, #28
   11c94:	pop	{pc}		; (ldr pc, [sp], #4)
   11c98:	lsl	r1, r1, #1
   11c9c:	add	r1, r1, #1
   11ca0:	bl	11bb0 <mostraHeap@@Base>
   11ca4:	ldr	r3, [r7, #8]
   11ca8:	ldr	r3, [r3, r6, lsl #2]
   11cac:	ldr	r2, [r3]
   11cb0:	ldr	r1, [r3, #4]
   11cb4:	movw	r0, #9908	; 0x26b4
   11cb8:	movt	r0, #1
   11cbc:	bl	10c24 <printf@plt>
   11cc0:	add	r1, r6, #1
   11cc4:	lsl	r1, r1, #1
   11cc8:	mov	r0, r7
   11ccc:	bl	11bb0 <mostraHeap@@Base>
   11cd0:	b	11c78 <mostraHeap@@Base+0xc8>

00011cd4 <menor_que@@Base>:
   11cd4:	cmp	r1, #0
   11cd8:	cmpne	r0, #0
   11cdc:	beq	11cf8 <menor_que@@Base+0x24>
   11ce0:	ldr	r0, [r0]
   11ce4:	ldr	r3, [r1]
   11ce8:	cmp	r0, r3
   11cec:	movge	r0, #0
   11cf0:	movlt	r0, #1
   11cf4:	bx	lr
   11cf8:	mov	r0, #0
   11cfc:	bx	lr

00011d00 <heap_insere@@Base>:
   11d00:	ldr	ip, [r0]
   11d04:	ldr	r3, [r0, #4]
   11d08:	cmp	ip, r3
   11d0c:	blt	11d18 <heap_insere@@Base+0x18>
   11d10:	mov	r0, #0
   11d14:	bx	lr
   11d18:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11d1c:	strd	r6, [sp, #8]
   11d20:	strd	r8, [sp, #16]
   11d24:	str	sl, [sp, #24]
   11d28:	str	lr, [sp, #28]
   11d2c:	mov	r6, r0
   11d30:	mov	r0, r2
   11d34:	bl	11b30 <elemento_cria@@Base>
   11d38:	cmp	r0, #0
   11d3c:	moveq	r0, #0
   11d40:	beq	11db8 <heap_insere@@Base+0xb8>
   11d44:	ldr	r4, [r6]
   11d48:	ldr	r3, [r6, #8]
   11d4c:	str	r0, [r3, r4, lsl #2]
   11d50:	ldr	r3, [r6]
   11d54:	add	r3, r3, #1
   11d58:	str	r3, [r6]
   11d5c:	cmp	r4, #0
   11d60:	moveq	r0, #1
   11d64:	beq	11db8 <heap_insere@@Base+0xb8>
   11d68:	ldr	r5, [r6, #8]
   11d6c:	lsl	r9, r4, #2
   11d70:	ldr	r7, [r5, r4, lsl #2]
   11d74:	sub	r4, r4, #1
   11d78:	add	r4, r4, r4, lsr #31
   11d7c:	asr	r4, r4, #1
   11d80:	ldr	r8, [r5, r4, lsl #2]
   11d84:	mov	r1, r8
   11d88:	mov	r0, r7
   11d8c:	bl	11cd4 <menor_que@@Base>
   11d90:	cmp	r0, #0
   11d94:	beq	11db4 <heap_insere@@Base+0xb4>
   11d98:	str	r7, [r5, r4, lsl #2]
   11d9c:	ldr	r3, [r6, #8]
   11da0:	str	r8, [r3, r9]
   11da4:	cmp	r4, #0
   11da8:	bne	11d68 <heap_insere@@Base+0x68>
   11dac:	mov	r0, #1
   11db0:	b	11db8 <heap_insere@@Base+0xb8>
   11db4:	mov	r0, #1
   11db8:	ldrd	r4, [sp]
   11dbc:	ldrd	r6, [sp, #8]
   11dc0:	ldrd	r8, [sp, #16]
   11dc4:	ldr	sl, [sp, #24]
   11dc8:	add	sp, sp, #28
   11dcc:	pop	{pc}		; (ldr pc, [sp], #4)

00011dd0 <heap_remove@@Base>:
   11dd0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11dd4:	strd	r6, [sp, #8]
   11dd8:	strd	r8, [sp, #16]
   11ddc:	str	sl, [sp, #24]
   11de0:	str	lr, [sp, #28]
   11de4:	subs	r6, r0, #0
   11de8:	beq	11ec8 <heap_remove@@Base+0xf8>
   11dec:	ldr	r3, [r6]
   11df0:	cmp	r3, #0
   11df4:	movle	r9, #0
   11df8:	ble	11ecc <heap_remove@@Base+0xfc>
   11dfc:	ldr	r3, [r6, #8]
   11e00:	ldr	r0, [r3]
   11e04:	ldr	r9, [r0, #4]
   11e08:	bl	10c48 <free@plt>
   11e0c:	ldr	r3, [r6]
   11e10:	sub	r3, r3, #1
   11e14:	str	r3, [r6]
   11e18:	ldr	r2, [r6, #8]
   11e1c:	ldr	r3, [r2, r3, lsl #2]
   11e20:	str	r3, [r2]
   11e24:	ldr	r2, [r6]
   11e28:	ldr	r3, [r6, #8]
   11e2c:	mov	r1, #0
   11e30:	str	r1, [r3, r2, lsl #2]
   11e34:	ldr	r3, [r6]
   11e38:	cmp	r3, #1
   11e3c:	ble	11ecc <heap_remove@@Base+0xfc>
   11e40:	mov	r7, r1
   11e44:	mov	r5, #1
   11e48:	b	11e90 <heap_remove@@Base+0xc0>
   11e4c:	ldr	r5, [r6, #8]
   11e50:	ldr	r8, [r5, r4, lsl #2]
   11e54:	ldr	sl, [r5, r7, lsl #2]
   11e58:	mov	r1, sl
   11e5c:	mov	r0, r8
   11e60:	bl	11cd4 <menor_que@@Base>
   11e64:	cmp	r0, #0
   11e68:	beq	11ecc <heap_remove@@Base+0xfc>
   11e6c:	str	sl, [r5, r4, lsl #2]
   11e70:	ldr	r3, [r6, #8]
   11e74:	str	r8, [r3, r7, lsl #2]
   11e78:	lsl	r5, r4, #1
   11e7c:	add	r5, r5, #1
   11e80:	ldr	r3, [r6]
   11e84:	mov	r7, r4
   11e88:	cmp	r5, r3
   11e8c:	bge	11ecc <heap_remove@@Base+0xfc>
   11e90:	add	r4, r7, #1
   11e94:	lsl	r4, r4, #1
   11e98:	cmp	r4, r3
   11e9c:	movge	r4, r5
   11ea0:	bge	11e4c <heap_remove@@Base+0x7c>
   11ea4:	ldr	r3, [r6, #8]
   11ea8:	add	r2, r7, #1
   11eac:	add	r1, r3, r2, lsl #3
   11eb0:	ldr	r1, [r1, #-4]
   11eb4:	ldr	r0, [r3, r2, lsl #3]
   11eb8:	bl	11cd4 <menor_que@@Base>
   11ebc:	cmp	r0, #0
   11ec0:	moveq	r4, r5
   11ec4:	b	11e4c <heap_remove@@Base+0x7c>
   11ec8:	mov	r9, r6
   11ecc:	mov	r0, r9
   11ed0:	ldrd	r4, [sp]
   11ed4:	ldrd	r6, [sp, #8]
   11ed8:	ldrd	r8, [sp, #16]
   11edc:	ldr	sl, [sp, #24]
   11ee0:	add	sp, sp, #28
   11ee4:	pop	{pc}		; (ldr pc, [sp], #4)

00011ee8 <novo_str@@Base>:
   11ee8:	strd	r4, [sp, #-16]!
   11eec:	str	r6, [sp, #8]
   11ef0:	str	lr, [sp, #12]
   11ef4:	mov	r6, r0
   11ef8:	mov	r0, #8
   11efc:	bl	10c78 <malloc@plt>
   11f00:	subs	r4, r0, #0
   11f04:	beq	11f38 <novo_str@@Base+0x50>
   11f08:	mov	r0, r6
   11f0c:	bl	10c9c <strlen@plt>
   11f10:	add	r0, r0, #1
   11f14:	bl	10c78 <malloc@plt>
   11f18:	mov	r5, r0
   11f1c:	str	r0, [r4]
   11f20:	cmp	r0, #0
   11f24:	beq	11f4c <novo_str@@Base+0x64>
   11f28:	mov	r1, r6
   11f2c:	bl	10c60 <strcpy@plt>
   11f30:	mov	r3, #0
   11f34:	str	r3, [r4, #4]
   11f38:	mov	r0, r4
   11f3c:	ldrd	r4, [sp]
   11f40:	ldr	r6, [sp, #8]
   11f44:	add	sp, sp, #12
   11f48:	pop	{pc}		; (ldr pc, [sp], #4)
   11f4c:	mov	r0, r4
   11f50:	bl	10c48 <free@plt>
   11f54:	mov	r4, r5
   11f58:	b	11f38 <novo_str@@Base+0x50>

00011f5c <lista_nova@@Base>:
   11f5c:	str	r4, [sp, #-8]!
   11f60:	str	lr, [sp, #4]
   11f64:	mov	r0, #8
   11f68:	bl	10c78 <malloc@plt>
   11f6c:	cmp	r0, #0
   11f70:	beq	11f80 <lista_nova@@Base+0x24>
   11f74:	mov	r3, #0
   11f78:	str	r3, [r0]
   11f7c:	str	r3, [r0, #4]
   11f80:	ldr	r4, [sp]
   11f84:	add	sp, sp, #4
   11f88:	pop	{pc}		; (ldr pc, [sp], #4)

00011f8c <lista_apaga@@Base>:
   11f8c:	strd	r4, [sp, #-16]!
   11f90:	str	r6, [sp, #8]
   11f94:	str	lr, [sp, #12]
   11f98:	subs	r5, r0, #0
   11f9c:	beq	11fd8 <lista_apaga@@Base+0x4c>
   11fa0:	ldr	r4, [r5]
   11fa4:	cmp	r4, #0
   11fa8:	beq	11fd0 <lista_apaga@@Base+0x44>
   11fac:	ldr	r3, [r4, #4]
   11fb0:	str	r3, [r5]
   11fb4:	ldr	r0, [r4]
   11fb8:	bl	10c48 <free@plt>
   11fbc:	mov	r0, r4
   11fc0:	bl	10c48 <free@plt>
   11fc4:	ldr	r4, [r5]
   11fc8:	cmp	r4, #0
   11fcc:	bne	11fac <lista_apaga@@Base+0x20>
   11fd0:	mov	r0, r5
   11fd4:	bl	10c48 <free@plt>
   11fd8:	ldrd	r4, [sp]
   11fdc:	ldr	r6, [sp, #8]
   11fe0:	add	sp, sp, #12
   11fe4:	pop	{pc}		; (ldr pc, [sp], #4)

00011fe8 <lista_tamanho@@Base>:
   11fe8:	cmp	r0, #0
   11fec:	ldrne	r0, [r0, #4]
   11ff0:	mvneq	r0, #0
   11ff4:	bx	lr

00011ff8 <lista_elemento@@Base>:
   11ff8:	mov	r3, r0
   11ffc:	cmp	r0, #0
   12000:	lsrne	r0, r1, #31
   12004:	moveq	r0, #1
   12008:	cmp	r0, #0
   1200c:	bne	12048 <lista_elemento@@Base+0x50>
   12010:	ldr	r0, [r3]
   12014:	cmp	r0, #0
   12018:	cmpne	r1, #0
   1201c:	ble	12038 <lista_elemento@@Base+0x40>
   12020:	mov	r3, #0
   12024:	ldr	r0, [r0, #4]
   12028:	add	r3, r3, #1
   1202c:	cmp	r0, #0
   12030:	cmpne	r1, r3
   12034:	bgt	12024 <lista_elemento@@Base+0x2c>
   12038:	cmp	r0, #0
   1203c:	beq	1204c <lista_elemento@@Base+0x54>
   12040:	ldr	r0, [r0]
   12044:	bx	lr
   12048:	mov	r0, #0
   1204c:	bx	lr

00012050 <lista_atribui@@Base>:
   12050:	mov	r3, r0
   12054:	cmp	r0, #0
   12058:	lsrne	r0, r1, #31
   1205c:	moveq	r0, #1
   12060:	cmp	r0, #0
   12064:	bne	120e0 <lista_atribui@@Base+0x90>
   12068:	strd	r4, [sp, #-16]!
   1206c:	str	r6, [sp, #8]
   12070:	str	lr, [sp, #12]
   12074:	ldr	r4, [r3]
   12078:	cmp	r4, #0
   1207c:	cmpne	r1, #0
   12080:	ble	1209c <lista_atribui@@Base+0x4c>
   12084:	mov	r3, #0
   12088:	ldr	r4, [r4, #4]
   1208c:	add	r3, r3, #1
   12090:	cmp	r4, #0
   12094:	cmpne	r1, r3
   12098:	bgt	12088 <lista_atribui@@Base+0x38>
   1209c:	cmp	r4, #0
   120a0:	beq	120e8 <lista_atribui@@Base+0x98>
   120a4:	mov	r6, r2
   120a8:	mov	r5, r1
   120ac:	mov	r0, r2
   120b0:	bl	10c9c <strlen@plt>
   120b4:	add	r1, r0, #1
   120b8:	ldr	r0, [r4]
   120bc:	bl	10c54 <realloc@plt>
   120c0:	str	r0, [r4]
   120c4:	mov	r1, r6
   120c8:	bl	10c60 <strcpy@plt>
   120cc:	mov	r0, r5
   120d0:	ldrd	r4, [sp]
   120d4:	ldr	r6, [sp, #8]
   120d8:	add	sp, sp, #12
   120dc:	pop	{pc}		; (ldr pc, [sp], #4)
   120e0:	mvn	r0, #0
   120e4:	bx	lr
   120e8:	mvn	r0, #0
   120ec:	b	120d0 <lista_atribui@@Base+0x80>

000120f0 <lista_insere@@Base>:
   120f0:	cmn	r2, #1
   120f4:	movge	r3, #0
   120f8:	movlt	r3, #1
   120fc:	cmp	r0, #0
   12100:	moveq	r3, #1
   12104:	cmp	r3, #0
   12108:	bne	121d4 <lista_insere@@Base+0xe4>
   1210c:	strd	r4, [sp, #-16]!
   12110:	str	r6, [sp, #8]
   12114:	str	lr, [sp, #12]
   12118:	mov	r6, r0
   1211c:	mov	r5, r2
   12120:	mov	r0, r1
   12124:	cmp	r2, #0
   12128:	beq	121f4 <lista_insere@@Base+0x104>
   1212c:	ldr	r3, [r6, #4]
   12130:	cmp	r3, r2
   12134:	ble	121dc <lista_insere@@Base+0xec>
   12138:	ldr	r4, [r6]
   1213c:	bl	11ee8 <novo_str@@Base>
   12140:	cmp	r0, #0
   12144:	beq	121e4 <lista_insere@@Base+0xf4>
   12148:	ldr	r3, [r6, #4]
   1214c:	add	r3, r3, #1
   12150:	str	r3, [r6, #4]
   12154:	cmn	r5, #1
   12158:	beq	121a4 <lista_insere@@Base+0xb4>
   1215c:	sub	r2, r5, #1
   12160:	cmp	r4, #0
   12164:	cmpne	r2, #0
   12168:	ble	12184 <lista_insere@@Base+0x94>
   1216c:	mov	r3, #0
   12170:	ldr	r4, [r4, #4]
   12174:	add	r3, r3, #1
   12178:	cmp	r4, #0
   1217c:	cmpne	r3, r2
   12180:	blt	12170 <lista_insere@@Base+0x80>
   12184:	ldr	r3, [r4, #4]
   12188:	str	r3, [r0, #4]
   1218c:	str	r0, [r4, #4]
   12190:	mov	r0, r5
   12194:	ldrd	r4, [sp]
   12198:	ldr	r6, [sp, #8]
   1219c:	add	sp, sp, #12
   121a0:	pop	{pc}		; (ldr pc, [sp], #4)
   121a4:	cmp	r4, #0
   121a8:	streq	r0, [r6]
   121ac:	bne	121b8 <lista_insere@@Base+0xc8>
   121b0:	b	121c8 <lista_insere@@Base+0xd8>
   121b4:	mov	r4, r3
   121b8:	ldr	r3, [r4, #4]
   121bc:	cmp	r3, #0
   121c0:	bne	121b4 <lista_insere@@Base+0xc4>
   121c4:	str	r0, [r4, #4]
   121c8:	ldr	r5, [r6, #4]
   121cc:	sub	r0, r5, #1
   121d0:	b	12194 <lista_insere@@Base+0xa4>
   121d4:	mvn	r0, #0
   121d8:	bx	lr
   121dc:	mvn	r0, #0
   121e0:	b	12194 <lista_insere@@Base+0xa4>
   121e4:	mvn	r0, #0
   121e8:	b	12194 <lista_insere@@Base+0xa4>
   121ec:	mvn	r0, #0
   121f0:	b	12194 <lista_insere@@Base+0xa4>
   121f4:	ldr	r4, [r6]
   121f8:	bl	11ee8 <novo_str@@Base>
   121fc:	cmp	r0, #0
   12200:	beq	121ec <lista_insere@@Base+0xfc>
   12204:	ldr	r3, [r6, #4]
   12208:	add	r3, r3, #1
   1220c:	str	r3, [r6, #4]
   12210:	str	r4, [r0, #4]
   12214:	str	r0, [r6]
   12218:	mov	r0, r5
   1221c:	b	12194 <lista_insere@@Base+0xa4>

00012220 <lista_remove@@Base>:
   12220:	mov	r3, r0
   12224:	cmp	r0, #0
   12228:	lsrne	r0, r1, #31
   1222c:	moveq	r0, #1
   12230:	cmp	r0, #0
   12234:	bne	122fc <lista_remove@@Base+0xdc>
   12238:	ldr	r2, [r3, #4]
   1223c:	cmp	r2, r1
   12240:	ble	12304 <lista_remove@@Base+0xe4>
   12244:	strd	r4, [sp, #-16]!
   12248:	str	r6, [sp, #8]
   1224c:	str	lr, [sp, #12]
   12250:	mov	r0, r3
   12254:	mov	r5, r1
   12258:	ldr	r6, [r3]
   1225c:	sub	r2, r2, #1
   12260:	str	r2, [r3, #4]
   12264:	cmp	r1, #0
   12268:	beq	12288 <lista_remove@@Base+0x68>
   1226c:	ble	122f4 <lista_remove@@Base+0xd4>
   12270:	ldr	r4, [r6, #4]
   12274:	cmp	r4, #0
   12278:	moveq	r4, r6
   1227c:	beq	122c8 <lista_remove@@Base+0xa8>
   12280:	mov	r3, #0
   12284:	b	122b0 <lista_remove@@Base+0x90>
   12288:	ldr	r3, [r6, #4]
   1228c:	str	r3, [r0]
   12290:	ldr	r0, [r6]
   12294:	bl	10c48 <free@plt>
   12298:	mov	r0, r6
   1229c:	bl	10c48 <free@plt>
   122a0:	mov	r0, r5
   122a4:	b	122e4 <lista_remove@@Base+0xc4>
   122a8:	mov	r6, r4
   122ac:	mov	r4, r2
   122b0:	add	r3, r3, #1
   122b4:	cmp	r5, r3
   122b8:	beq	122c8 <lista_remove@@Base+0xa8>
   122bc:	ldr	r2, [r4, #4]
   122c0:	cmp	r2, #0
   122c4:	bne	122a8 <lista_remove@@Base+0x88>
   122c8:	ldr	r3, [r4, #4]
   122cc:	str	r3, [r6, #4]
   122d0:	ldr	r0, [r4]
   122d4:	bl	10c48 <free@plt>
   122d8:	mov	r0, r4
   122dc:	bl	10c48 <free@plt>
   122e0:	mov	r0, #0
   122e4:	ldrd	r4, [sp]
   122e8:	ldr	r6, [sp, #8]
   122ec:	add	sp, sp, #12
   122f0:	pop	{pc}		; (ldr pc, [sp], #4)
   122f4:	mov	r4, r6
   122f8:	b	122c8 <lista_remove@@Base+0xa8>
   122fc:	mvn	r0, #0
   12300:	bx	lr
   12304:	mvn	r0, #0
   12308:	bx	lr

0001230c <lista_pesquisa@@Base>:
   1230c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12310:	strd	r6, [sp, #8]
   12314:	str	r8, [sp, #16]
   12318:	str	lr, [sp, #20]
   1231c:	cmp	r0, #0
   12320:	beq	1237c <lista_pesquisa@@Base+0x70>
   12324:	ldr	r4, [r0]
   12328:	cmp	r4, #0
   1232c:	beq	12384 <lista_pesquisa@@Base+0x78>
   12330:	mov	r7, r2
   12334:	mov	r6, r1
   12338:	mvn	r8, #0
   1233c:	mov	r5, #0
   12340:	b	12354 <lista_pesquisa@@Base+0x48>
   12344:	ldr	r4, [r4, #4]
   12348:	add	r5, r5, #1
   1234c:	cmp	r4, #0
   12350:	beq	12390 <lista_pesquisa@@Base+0x84>
   12354:	mov	r1, r6
   12358:	ldr	r0, [r4]
   1235c:	bl	10c0c <strcmp@plt>
   12360:	cmp	r0, #0
   12364:	bne	12344 <lista_pesquisa@@Base+0x38>
   12368:	cmp	r7, #0
   1236c:	beq	1238c <lista_pesquisa@@Base+0x80>
   12370:	cmn	r7, #1
   12374:	moveq	r8, r5
   12378:	b	12344 <lista_pesquisa@@Base+0x38>
   1237c:	mvn	r8, #0
   12380:	b	12390 <lista_pesquisa@@Base+0x84>
   12384:	mvn	r8, #0
   12388:	b	12390 <lista_pesquisa@@Base+0x84>
   1238c:	mov	r8, r5
   12390:	mov	r0, r8
   12394:	ldrd	r4, [sp]
   12398:	ldrd	r6, [sp, #8]
   1239c:	ldr	r8, [sp, #16]
   123a0:	add	sp, sp, #20
   123a4:	pop	{pc}		; (ldr pc, [sp], #4)

000123a8 <lista_ordena@@Base>:
   123a8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   123ac:	strd	r6, [sp, #8]
   123b0:	strd	r8, [sp, #16]
   123b4:	str	sl, [sp, #24]
   123b8:	str	lr, [sp, #28]
   123bc:	subs	r9, r0, #0
   123c0:	beq	1245c <lista_ordena@@Base+0xb4>
   123c4:	ldr	r5, [r9]
   123c8:	ldr	r6, [r5, #4]
   123cc:	cmp	r6, #0
   123d0:	bne	12404 <lista_ordena@@Base+0x5c>
   123d4:	mov	r0, #0
   123d8:	b	12468 <lista_ordena@@Base+0xc0>
   123dc:	str	r4, [r6, #4]
   123e0:	ldr	r3, [r9]
   123e4:	cmp	r3, r4
   123e8:	streq	r6, [r9]
   123ec:	strne	r6, [r8, #4]
   123f0:	b	123f8 <lista_ordena@@Base+0x50>
   123f4:	ldr	r5, [r5, #4]
   123f8:	ldr	r6, [r5, #4]
   123fc:	cmp	r6, #0
   12400:	beq	12464 <lista_ordena@@Base+0xbc>
   12404:	ldr	r1, [r6]
   12408:	ldr	r0, [r5]
   1240c:	bl	10c0c <strcmp@plt>
   12410:	cmp	r0, #0
   12414:	ble	123f4 <lista_ordena@@Base+0x4c>
   12418:	ldr	r3, [r6, #4]
   1241c:	str	r3, [r5, #4]
   12420:	ldr	r4, [r9]
   12424:	cmp	r3, r5
   12428:	beq	12454 <lista_ordena@@Base+0xac>
   1242c:	ldr	r7, [r6]
   12430:	mov	r8, r4
   12434:	mov	r1, r7
   12438:	ldr	r0, [r4]
   1243c:	bl	10c0c <strcmp@plt>
   12440:	cmp	r0, #0
   12444:	bgt	123dc <lista_ordena@@Base+0x34>
   12448:	mov	r8, r4
   1244c:	ldr	r4, [r4, #4]
   12450:	b	12434 <lista_ordena@@Base+0x8c>
   12454:	mov	r6, r5
   12458:	b	12404 <lista_ordena@@Base+0x5c>
   1245c:	mvn	r0, #0
   12460:	b	12468 <lista_ordena@@Base+0xc0>
   12464:	mov	r0, #0
   12468:	ldrd	r4, [sp]
   1246c:	ldrd	r6, [sp, #8]
   12470:	ldrd	r8, [sp, #16]
   12474:	ldr	sl, [sp, #24]
   12478:	add	sp, sp, #28
   1247c:	pop	{pc}		; (ldr pc, [sp], #4)

00012480 <lista_compara@@Base>:
   12480:	cmp	r1, #0
   12484:	cmpne	r0, #0
   12488:	beq	12500 <lista_compara@@Base+0x80>
   1248c:	mov	r2, r0
   12490:	mov	r3, r1
   12494:	ldr	r0, [r0, #4]
   12498:	ldr	r1, [r1, #4]
   1249c:	cmp	r0, r1
   124a0:	bne	12508 <lista_compara@@Base+0x88>
   124a4:	strd	r4, [sp, #-16]!
   124a8:	str	r6, [sp, #8]
   124ac:	str	lr, [sp, #12]
   124b0:	ldr	r4, [r2]
   124b4:	ldr	r5, [r3]
   124b8:	cmp	r4, #0
   124bc:	beq	124e4 <lista_compara@@Base+0x64>
   124c0:	ldr	r1, [r5]
   124c4:	ldr	r0, [r4]
   124c8:	bl	10c0c <strcmp@plt>
   124cc:	cmp	r0, #0
   124d0:	bne	12510 <lista_compara@@Base+0x90>
   124d4:	ldr	r4, [r4, #4]
   124d8:	ldr	r5, [r5, #4]
   124dc:	cmp	r4, #0
   124e0:	bne	124c0 <lista_compara@@Base+0x40>
   124e4:	cmp	r5, #0
   124e8:	moveq	r0, #1
   124ec:	mvnne	r0, #0
   124f0:	ldrd	r4, [sp]
   124f4:	ldr	r6, [sp, #8]
   124f8:	add	sp, sp, #12
   124fc:	pop	{pc}		; (ldr pc, [sp], #4)
   12500:	mvn	r0, #0
   12504:	bx	lr
   12508:	mov	r0, #0
   1250c:	bx	lr
   12510:	mov	r0, #0
   12514:	b	124f0 <lista_compara@@Base+0x70>

00012518 <lista_inverte@@Base>:
   12518:	strd	r4, [sp, #-16]!
   1251c:	str	r6, [sp, #8]
   12520:	str	lr, [sp, #12]
   12524:	subs	r4, r0, #0
   12528:	moveq	r5, r4
   1252c:	beq	12568 <lista_inverte@@Base+0x50>
   12530:	bl	11f5c <lista_nova@@Base>
   12534:	subs	r5, r0, #0
   12538:	beq	12568 <lista_inverte@@Base+0x50>
   1253c:	ldr	r4, [r4]
   12540:	cmp	r4, #0
   12544:	beq	12568 <lista_inverte@@Base+0x50>
   12548:	mov	r6, #0
   1254c:	mov	r2, r6
   12550:	ldr	r1, [r4]
   12554:	mov	r0, r5
   12558:	bl	120f0 <lista_insere@@Base>
   1255c:	ldr	r4, [r4, #4]
   12560:	cmp	r4, #0
   12564:	bne	1254c <lista_inverte@@Base+0x34>
   12568:	mov	r0, r5
   1256c:	ldrd	r4, [sp]
   12570:	ldr	r6, [sp, #8]
   12574:	add	sp, sp, #12
   12578:	pop	{pc}		; (ldr pc, [sp], #4)

0001257c <__libc_csu_init@@Base>:
   1257c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12580:	mov	r7, r0
   12584:	ldr	r6, [pc, #72]	; 125d4 <__libc_csu_init@@Base+0x58>
   12588:	ldr	r5, [pc, #72]	; 125d8 <__libc_csu_init@@Base+0x5c>
   1258c:	add	r6, pc, r6
   12590:	add	r5, pc, r5
   12594:	sub	r6, r6, r5
   12598:	mov	r8, r1
   1259c:	mov	r9, r2
   125a0:	bl	10be0 <calloc@plt-0x20>
   125a4:	asrs	r6, r6, #2
   125a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   125ac:	mov	r4, #0
   125b0:	add	r4, r4, #1
   125b4:	ldr	r3, [r5], #4
   125b8:	mov	r2, r9
   125bc:	mov	r1, r8
   125c0:	mov	r0, r7
   125c4:	blx	r3
   125c8:	cmp	r6, r4
   125cc:	bne	125b0 <__libc_csu_init@@Base+0x34>
   125d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   125d4:	andeq	r0, r1, r0, lsl #19
   125d8:	andeq	r0, r1, r8, ror r9

000125dc <__libc_csu_fini@@Base>:
   125dc:	bx	lr

Disassembly of section .fini:

000125e0 <.fini>:
   125e0:	push	{r3, lr}
   125e4:	pop	{r3, pc}
