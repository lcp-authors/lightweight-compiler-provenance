
../repos/maitesin-acc-4891b9a/bin/lexer_tests:     file format elf32-littlearm


Disassembly of section .init:

00011f7c <.init>:
   11f7c:	push	{r3, lr}
   11f80:	bl	127f0 <_start@@Base+0x3c>
   11f84:	pop	{r3, pc}

Disassembly of section .plt:

00011f88 <fdopen@plt-0x14>:
   11f88:	push	{lr}		; (str lr, [sp, #-4]!)
   11f8c:	ldr	lr, [pc, #4]	; 11f98 <fdopen@plt-0x4>
   11f90:	add	lr, pc, lr
   11f94:	ldr	pc, [lr, #8]!
   11f98:	andeq	sl, r1, r8, rrx

00011f9c <fdopen@plt>:
   11f9c:	add	ip, pc, #0, 12
   11fa0:	add	ip, ip, #106496	; 0x1a000
   11fa4:	ldr	pc, [ip, #104]!	; 0x68

00011fa8 <raise@plt>:
   11fa8:	add	ip, pc, #0, 12
   11fac:	add	ip, ip, #106496	; 0x1a000
   11fb0:	ldr	pc, [ip, #96]!	; 0x60

00011fb4 <setbuf@plt>:
   11fb4:	add	ip, pc, #0, 12
   11fb8:	add	ip, ip, #106496	; 0x1a000
   11fbc:	ldr	pc, [ip, #88]!	; 0x58

00011fc0 <longjmp@plt>:
   11fc0:	add	ip, pc, #0, 12
   11fc4:	add	ip, ip, #106496	; 0x1a000
   11fc8:	ldr	pc, [ip, #80]!	; 0x50

00011fcc <_setjmp@plt>:
   11fcc:	add	ip, pc, #0, 12
   11fd0:	add	ip, ip, #106496	; 0x1a000
   11fd4:	ldr	pc, [ip, #72]!	; 0x48

00011fd8 <free@plt>:
   11fd8:	add	ip, pc, #0, 12
   11fdc:	add	ip, ip, #106496	; 0x1a000
   11fe0:	ldr	pc, [ip, #64]!	; 0x40

00011fe4 <memcpy@plt>:
   11fe4:	add	ip, pc, #0, 12
   11fe8:	add	ip, ip, #106496	; 0x1a000
   11fec:	ldr	pc, [ip, #56]!	; 0x38

00011ff0 <ftell@plt>:
   11ff0:	add	ip, pc, #0, 12
   11ff4:	add	ip, ip, #106496	; 0x1a000
   11ff8:	ldr	pc, [ip, #48]!	; 0x30

00011ffc <fwrite@plt>:
   11ffc:	add	ip, pc, #0, 12
   12000:	add	ip, ip, #106496	; 0x1a000
   12004:	ldr	pc, [ip, #40]!	; 0x28

00012008 <strcpy@plt>:
   12008:	add	ip, pc, #0, 12
   1200c:	add	ip, ip, #106496	; 0x1a000
   12010:	ldr	pc, [ip, #32]!

00012014 <fread@plt>:
   12014:	add	ip, pc, #0, 12
   12018:	add	ip, ip, #106496	; 0x1a000
   1201c:	ldr	pc, [ip, #24]!

00012020 <getenv@plt>:
   12020:	add	ip, pc, #0, 12
   12024:	add	ip, ip, #106496	; 0x1a000
   12028:	ldr	pc, [ip, #16]!

0001202c <malloc@plt>:
   1202c:	add	ip, pc, #0, 12
   12030:	add	ip, ip, #106496	; 0x1a000
   12034:	ldr	pc, [ip, #8]!

00012038 <__libc_start_main@plt>:
   12038:	add	ip, pc, #0, 12
   1203c:	add	ip, ip, #106496	; 0x1a000
   12040:	ldr	pc, [ip, #0]!

00012044 <__fxstat@plt>:
   12044:	add	ip, pc, #0, 12
   12048:	add	ip, ip, #102400	; 0x19000
   1204c:	ldr	pc, [ip, #4088]!	; 0xff8

00012050 <__gmon_start__@plt>:
   12050:	add	ip, pc, #0, 12
   12054:	add	ip, ip, #102400	; 0x19000
   12058:	ldr	pc, [ip, #4080]!	; 0xff0

0001205c <open@plt>:
   1205c:	add	ip, pc, #0, 12
   12060:	add	ip, ip, #102400	; 0x19000
   12064:	ldr	pc, [ip, #4072]!	; 0xfe8

00012068 <getpid@plt>:
   12068:	add	ip, pc, #0, 12
   1206c:	add	ip, ip, #102400	; 0x19000
   12070:	ldr	pc, [ip, #4064]!	; 0xfe0

00012074 <exit@plt>:
   12074:	add	ip, pc, #0, 12
   12078:	add	ip, ip, #102400	; 0x19000
   1207c:	ldr	pc, [ip, #4056]!	; 0xfd8

00012080 <strlen@plt>:
   12080:	add	ip, pc, #0, 12
   12084:	add	ip, ip, #102400	; 0x19000
   12088:	ldr	pc, [ip, #4048]!	; 0xfd0

0001208c <fprintf@plt>:
   1208c:	add	ip, pc, #0, 12
   12090:	add	ip, ip, #102400	; 0x19000
   12094:	ldr	pc, [ip, #4040]!	; 0xfc8

00012098 <__errno_location@plt>:
   12098:	add	ip, pc, #0, 12
   1209c:	add	ip, ip, #102400	; 0x19000
   120a0:	ldr	pc, [ip, #4032]!	; 0xfc0

000120a4 <__cxa_atexit@plt>:
   120a4:	add	ip, pc, #0, 12
   120a8:	add	ip, ip, #102400	; 0x19000
   120ac:	ldr	pc, [ip, #4024]!	; 0xfb8

000120b0 <mkdir@plt>:
   120b0:	add	ip, pc, #0, 12
   120b4:	add	ip, ip, #102400	; 0x19000
   120b8:	ldr	pc, [ip, #4016]!	; 0xfb0

000120bc <fcntl@plt>:
   120bc:	add	ip, pc, #0, 12
   120c0:	add	ip, ip, #102400	; 0x19000
   120c4:	ldr	pc, [ip, #4008]!	; 0xfa8

000120c8 <memset@plt>:
   120c8:	add	ip, pc, #0, 12
   120cc:	add	ip, ip, #102400	; 0x19000
   120d0:	ldr	pc, [ip, #4000]!	; 0xfa0

000120d4 <putchar@plt>:
   120d4:	add	ip, pc, #0, 12
   120d8:	add	ip, ip, #102400	; 0x19000
   120dc:	ldr	pc, [ip, #3992]!	; 0xf98

000120e0 <strncpy@plt>:
   120e0:	add	ip, pc, #0, 12
   120e4:	add	ip, ip, #102400	; 0x19000
   120e8:	ldr	pc, [ip, #3984]!	; 0xf90

000120ec <access@plt>:
   120ec:	add	ip, pc, #0, 12
   120f0:	add	ip, ip, #102400	; 0x19000
   120f4:	ldr	pc, [ip, #3976]!	; 0xf88

000120f8 <fclose@plt>:
   120f8:	add	ip, pc, #0, 12
   120fc:	add	ip, ip, #102400	; 0x19000
   12100:	ldr	pc, [ip, #3968]!	; 0xf80

00012104 <vfprintf@plt>:
   12104:	add	ip, pc, #0, 12
   12108:	add	ip, ip, #102400	; 0x19000
   1210c:	ldr	pc, [ip, #3960]!	; 0xf78

00012110 <atoi@plt>:
   12110:	add	ip, pc, #0, 12
   12114:	add	ip, ip, #102400	; 0x19000
   12118:	ldr	pc, [ip, #3952]!	; 0xf70

0001211c <fseek@plt>:
   1211c:	add	ip, pc, #0, 12
   12120:	add	ip, ip, #102400	; 0x19000
   12124:	ldr	pc, [ip, #3944]!	; 0xf68

00012128 <fputs@plt>:
   12128:	add	ip, pc, #0, 12
   1212c:	add	ip, ip, #102400	; 0x19000
   12130:	ldr	pc, [ip, #3936]!	; 0xf60

00012134 <abort@plt>:
   12134:	add	ip, pc, #0, 12
   12138:	add	ip, ip, #102400	; 0x19000
   1213c:	ldr	pc, [ip, #3928]!	; 0xf58

00012140 <close@plt>:
   12140:	add	ip, pc, #0, 12
   12144:	add	ip, ip, #102400	; 0x19000
   12148:	ldr	pc, [ip, #3920]!	; 0xf50

Disassembly of section .text:

0001214c <main@@Base-0x15c>:
   1214c:	push	{r4, r5, r6, lr}
   12150:	mov	r6, r0
   12154:	ldr	r4, [pc, #316]	; 12298 <close@plt+0x158>
   12158:	ldr	r0, [pc, #316]	; 1229c <close@plt+0x15c>
   1215c:	mov	r5, r1
   12160:	ldrd	r2, [r4]
   12164:	adds	r2, r2, #1
   12168:	adc	r3, r3, #0
   1216c:	strd	r2, [r4]
   12170:	bl	14ef4 <UnityPrint@@Base>
   12174:	cmp	r6, #0
   12178:	beq	12240 <close@plt+0x100>
   1217c:	ldrd	r2, [r4, #8]
   12180:	mov	r0, #39	; 0x27
   12184:	adds	r2, r2, #1
   12188:	adc	r3, r3, #0
   1218c:	strd	r2, [r4, #8]
   12190:	bl	120d4 <putchar@plt>
   12194:	ldrd	r2, [r4, #24]
   12198:	mov	r0, r6
   1219c:	adds	r2, r2, #1
   121a0:	adc	r3, r3, #0
   121a4:	strd	r2, [r4, #24]
   121a8:	bl	14ef4 <UnityPrint@@Base>
   121ac:	ldrd	r2, [r4, #32]
   121b0:	mov	r0, #39	; 0x27
   121b4:	adds	r2, r2, #1
   121b8:	adc	r3, r3, #0
   121bc:	strd	r2, [r4, #32]
   121c0:	bl	120d4 <putchar@plt>
   121c4:	ldrd	r2, [r4, #40]	; 0x28
   121c8:	adds	r2, r2, #1
   121cc:	adc	r3, r3, #0
   121d0:	strd	r2, [r4, #40]	; 0x28
   121d4:	ldr	r0, [pc, #196]	; 122a0 <close@plt+0x160>
   121d8:	bl	14ef4 <UnityPrint@@Base>
   121dc:	cmp	r5, #0
   121e0:	beq	1226c <close@plt+0x12c>
   121e4:	ldrd	r2, [r4, #56]	; 0x38
   121e8:	mov	r0, #39	; 0x27
   121ec:	adds	r2, r2, #1
   121f0:	adc	r3, r3, #0
   121f4:	strd	r2, [r4, #56]	; 0x38
   121f8:	bl	120d4 <putchar@plt>
   121fc:	ldrd	r2, [r4, #72]	; 0x48
   12200:	mov	r0, r5
   12204:	adds	r2, r2, #1
   12208:	adc	r3, r3, #0
   1220c:	strd	r2, [r4, #72]	; 0x48
   12210:	bl	14ef4 <UnityPrint@@Base>
   12214:	ldrd	r2, [r4, #80]	; 0x50
   12218:	mov	r0, #39	; 0x27
   1221c:	adds	r2, r2, #1
   12220:	adc	r3, r3, #0
   12224:	strd	r2, [r4, #80]	; 0x50
   12228:	bl	120d4 <putchar@plt>
   1222c:	ldrd	r2, [r4, #88]	; 0x58
   12230:	adds	r2, r2, #1
   12234:	adc	r3, r3, #0
   12238:	strd	r2, [r4, #88]	; 0x58
   1223c:	pop	{r4, r5, r6, pc}
   12240:	ldrd	r2, [r4, #16]
   12244:	ldr	r0, [pc, #88]	; 122a4 <close@plt+0x164>
   12248:	adds	r2, r2, #1
   1224c:	adc	r3, r3, #0
   12250:	strd	r2, [r4, #16]
   12254:	bl	14ef4 <UnityPrint@@Base>
   12258:	ldrd	r2, [r4, #48]	; 0x30
   1225c:	adds	r2, r2, #1
   12260:	adc	r3, r3, #0
   12264:	strd	r2, [r4, #48]	; 0x30
   12268:	b	121d4 <close@plt+0x94>
   1226c:	ldrd	r2, [r4, #64]	; 0x40
   12270:	ldr	r0, [pc, #44]	; 122a4 <close@plt+0x164>
   12274:	adds	r2, r2, #1
   12278:	adc	r3, r3, #0
   1227c:	strd	r2, [r4, #64]	; 0x40
   12280:	bl	14ef4 <UnityPrint@@Base>
   12284:	ldrd	r2, [r4, #96]	; 0x60
   12288:	adds	r2, r2, #1
   1228c:	adc	r3, r3, #0
   12290:	strd	r2, [r4, #96]	; 0x60
   12294:	pop	{r4, r5, r6, pc}
   12298:	muleq	r2, r8, r6
   1229c:	andeq	fp, r1, r8, lsr #14
   122a0:	andeq	fp, r1, r8, lsr r7
   122a4:	andeq	fp, r1, r3, lsr r7

000122a8 <main@@Base>:
   122a8:	push	{r4, lr}
   122ac:	ldr	r4, [pc, #924]	; 12650 <main@@Base+0x3a8>
   122b0:	ldr	r0, [pc, #924]	; 12654 <main@@Base+0x3ac>
   122b4:	ldrd	r2, [r4]
   122b8:	adds	r2, r2, #1
   122bc:	adc	r3, r3, #0
   122c0:	strd	r2, [r4]
   122c4:	bl	17b2c <UnityBegin@@Base>
   122c8:	ldrd	r2, [r4, #8]
   122cc:	ldr	r1, [pc, #900]	; 12658 <main@@Base+0x3b0>
   122d0:	ldr	r0, [pc, #900]	; 1265c <main@@Base+0x3b4>
   122d4:	adds	r2, r2, #1
   122d8:	adc	r3, r3, #0
   122dc:	strd	r2, [r4, #8]
   122e0:	ldr	r2, [pc, #888]	; 12660 <main@@Base+0x3b8>
   122e4:	bl	179f8 <UnityDefaultTestRun@@Base>
   122e8:	ldrd	r2, [r4, #16]
   122ec:	ldr	r1, [pc, #880]	; 12664 <main@@Base+0x3bc>
   122f0:	ldr	r0, [pc, #880]	; 12668 <main@@Base+0x3c0>
   122f4:	adds	r2, r2, #1
   122f8:	adc	r3, r3, #0
   122fc:	strd	r2, [r4, #16]
   12300:	ldr	r2, [pc, #868]	; 1266c <main@@Base+0x3c4>
   12304:	bl	179f8 <UnityDefaultTestRun@@Base>
   12308:	ldrd	r2, [r4, #24]
   1230c:	ldr	r1, [pc, #860]	; 12670 <main@@Base+0x3c8>
   12310:	ldr	r0, [pc, #860]	; 12674 <main@@Base+0x3cc>
   12314:	adds	r2, r2, #1
   12318:	adc	r3, r3, #0
   1231c:	strd	r2, [r4, #24]
   12320:	ldr	r2, [pc, #848]	; 12678 <main@@Base+0x3d0>
   12324:	bl	179f8 <UnityDefaultTestRun@@Base>
   12328:	ldrd	r2, [r4, #32]
   1232c:	ldr	r1, [pc, #840]	; 1267c <main@@Base+0x3d4>
   12330:	ldr	r0, [pc, #840]	; 12680 <main@@Base+0x3d8>
   12334:	adds	r2, r2, #1
   12338:	adc	r3, r3, #0
   1233c:	strd	r2, [r4, #32]
   12340:	mov	r2, #632	; 0x278
   12344:	bl	179f8 <UnityDefaultTestRun@@Base>
   12348:	ldrd	r2, [r4, #40]	; 0x28
   1234c:	ldr	r1, [pc, #816]	; 12684 <main@@Base+0x3dc>
   12350:	ldr	r0, [pc, #816]	; 12688 <main@@Base+0x3e0>
   12354:	adds	r2, r2, #1
   12358:	adc	r3, r3, #0
   1235c:	strd	r2, [r4, #40]	; 0x28
   12360:	ldr	r2, [pc, #804]	; 1268c <main@@Base+0x3e4>
   12364:	bl	179f8 <UnityDefaultTestRun@@Base>
   12368:	ldrd	r2, [r4, #48]	; 0x30
   1236c:	ldr	r1, [pc, #796]	; 12690 <main@@Base+0x3e8>
   12370:	ldr	r0, [pc, #796]	; 12694 <main@@Base+0x3ec>
   12374:	adds	r2, r2, #1
   12378:	adc	r3, r3, #0
   1237c:	strd	r2, [r4, #48]	; 0x30
   12380:	ldr	r2, [pc, #784]	; 12698 <main@@Base+0x3f0>
   12384:	bl	179f8 <UnityDefaultTestRun@@Base>
   12388:	ldrd	r2, [r4, #56]	; 0x38
   1238c:	ldr	r1, [pc, #776]	; 1269c <main@@Base+0x3f4>
   12390:	ldr	r0, [pc, #776]	; 126a0 <main@@Base+0x3f8>
   12394:	adds	r2, r2, #1
   12398:	adc	r3, r3, #0
   1239c:	strd	r2, [r4, #56]	; 0x38
   123a0:	ldr	r2, [pc, #764]	; 126a4 <main@@Base+0x3fc>
   123a4:	bl	179f8 <UnityDefaultTestRun@@Base>
   123a8:	ldrd	r2, [r4, #64]	; 0x40
   123ac:	ldr	r1, [pc, #756]	; 126a8 <main@@Base+0x400>
   123b0:	ldr	r0, [pc, #756]	; 126ac <main@@Base+0x404>
   123b4:	adds	r2, r2, #1
   123b8:	adc	r3, r3, #0
   123bc:	strd	r2, [r4, #64]	; 0x40
   123c0:	mov	r2, #636	; 0x27c
   123c4:	bl	179f8 <UnityDefaultTestRun@@Base>
   123c8:	ldrd	r2, [r4, #72]	; 0x48
   123cc:	ldr	r1, [pc, #732]	; 126b0 <main@@Base+0x408>
   123d0:	ldr	r0, [pc, #732]	; 126b4 <main@@Base+0x40c>
   123d4:	adds	r2, r2, #1
   123d8:	adc	r3, r3, #0
   123dc:	strd	r2, [r4, #72]	; 0x48
   123e0:	ldr	r2, [pc, #720]	; 126b8 <main@@Base+0x410>
   123e4:	bl	179f8 <UnityDefaultTestRun@@Base>
   123e8:	ldrd	r2, [r4, #80]	; 0x50
   123ec:	ldr	r1, [pc, #712]	; 126bc <main@@Base+0x414>
   123f0:	ldr	r0, [pc, #712]	; 126c0 <main@@Base+0x418>
   123f4:	adds	r2, r2, #1
   123f8:	adc	r3, r3, #0
   123fc:	strd	r2, [r4, #80]	; 0x50
   12400:	ldr	r2, [pc, #700]	; 126c4 <main@@Base+0x41c>
   12404:	bl	179f8 <UnityDefaultTestRun@@Base>
   12408:	ldrd	r2, [r4, #88]	; 0x58
   1240c:	ldr	r1, [pc, #692]	; 126c8 <main@@Base+0x420>
   12410:	ldr	r0, [pc, #692]	; 126cc <main@@Base+0x424>
   12414:	adds	r2, r2, #1
   12418:	adc	r3, r3, #0
   1241c:	strd	r2, [r4, #88]	; 0x58
   12420:	ldr	r2, [pc, #680]	; 126d0 <main@@Base+0x428>
   12424:	bl	179f8 <UnityDefaultTestRun@@Base>
   12428:	ldrd	r2, [r4, #96]	; 0x60
   1242c:	ldr	r1, [pc, #672]	; 126d4 <main@@Base+0x42c>
   12430:	ldr	r0, [pc, #672]	; 126d8 <main@@Base+0x430>
   12434:	adds	r2, r2, #1
   12438:	adc	r3, r3, #0
   1243c:	strd	r2, [r4, #96]	; 0x60
   12440:	mov	r2, #640	; 0x280
   12444:	bl	179f8 <UnityDefaultTestRun@@Base>
   12448:	ldrd	r2, [r4, #104]	; 0x68
   1244c:	ldr	r1, [pc, #648]	; 126dc <main@@Base+0x434>
   12450:	ldr	r0, [pc, #648]	; 126e0 <main@@Base+0x438>
   12454:	adds	r2, r2, #1
   12458:	adc	r3, r3, #0
   1245c:	strd	r2, [r4, #104]	; 0x68
   12460:	ldr	r2, [pc, #636]	; 126e4 <main@@Base+0x43c>
   12464:	bl	179f8 <UnityDefaultTestRun@@Base>
   12468:	ldrd	r2, [r4, #112]	; 0x70
   1246c:	ldr	r1, [pc, #628]	; 126e8 <main@@Base+0x440>
   12470:	ldr	r0, [pc, #628]	; 126ec <main@@Base+0x444>
   12474:	adds	r2, r2, #1
   12478:	adc	r3, r3, #0
   1247c:	strd	r2, [r4, #112]	; 0x70
   12480:	ldr	r2, [pc, #616]	; 126f0 <main@@Base+0x448>
   12484:	bl	179f8 <UnityDefaultTestRun@@Base>
   12488:	ldrd	r2, [r4, #120]	; 0x78
   1248c:	ldr	r1, [pc, #608]	; 126f4 <main@@Base+0x44c>
   12490:	ldr	r0, [pc, #608]	; 126f8 <main@@Base+0x450>
   12494:	adds	r2, r2, #1
   12498:	adc	r3, r3, #0
   1249c:	strd	r2, [r4, #120]	; 0x78
   124a0:	ldr	r2, [pc, #596]	; 126fc <main@@Base+0x454>
   124a4:	bl	179f8 <UnityDefaultTestRun@@Base>
   124a8:	ldrd	r2, [r4, #128]	; 0x80
   124ac:	ldr	r1, [pc, #588]	; 12700 <main@@Base+0x458>
   124b0:	ldr	r0, [pc, #588]	; 12704 <main@@Base+0x45c>
   124b4:	adds	r2, r2, #1
   124b8:	adc	r3, r3, #0
   124bc:	strd	r2, [r4, #128]	; 0x80
   124c0:	mov	r2, #644	; 0x284
   124c4:	bl	179f8 <UnityDefaultTestRun@@Base>
   124c8:	ldrd	r2, [r4, #136]	; 0x88
   124cc:	ldr	r1, [pc, #564]	; 12708 <main@@Base+0x460>
   124d0:	ldr	r0, [pc, #564]	; 1270c <main@@Base+0x464>
   124d4:	adds	r2, r2, #1
   124d8:	adc	r3, r3, #0
   124dc:	strd	r2, [r4, #136]	; 0x88
   124e0:	ldr	r2, [pc, #552]	; 12710 <main@@Base+0x468>
   124e4:	bl	179f8 <UnityDefaultTestRun@@Base>
   124e8:	ldrd	r2, [r4, #144]	; 0x90
   124ec:	ldr	r1, [pc, #544]	; 12714 <main@@Base+0x46c>
   124f0:	ldr	r0, [pc, #544]	; 12718 <main@@Base+0x470>
   124f4:	adds	r2, r2, #1
   124f8:	adc	r3, r3, #0
   124fc:	strd	r2, [r4, #144]	; 0x90
   12500:	ldr	r2, [pc, #532]	; 1271c <main@@Base+0x474>
   12504:	bl	179f8 <UnityDefaultTestRun@@Base>
   12508:	ldrd	r2, [r4, #152]	; 0x98
   1250c:	ldr	r1, [pc, #524]	; 12720 <main@@Base+0x478>
   12510:	ldr	r0, [pc, #524]	; 12724 <main@@Base+0x47c>
   12514:	adds	r2, r2, #1
   12518:	adc	r3, r3, #0
   1251c:	strd	r2, [r4, #152]	; 0x98
   12520:	ldr	r2, [pc, #512]	; 12728 <main@@Base+0x480>
   12524:	bl	179f8 <UnityDefaultTestRun@@Base>
   12528:	ldrd	r2, [r4, #160]	; 0xa0
   1252c:	ldr	r1, [pc, #504]	; 1272c <main@@Base+0x484>
   12530:	ldr	r0, [pc, #504]	; 12730 <main@@Base+0x488>
   12534:	adds	r2, r2, #1
   12538:	adc	r3, r3, #0
   1253c:	strd	r2, [r4, #160]	; 0xa0
   12540:	mov	r2, #648	; 0x288
   12544:	bl	179f8 <UnityDefaultTestRun@@Base>
   12548:	ldrd	r2, [r4, #168]	; 0xa8
   1254c:	ldr	r1, [pc, #480]	; 12734 <main@@Base+0x48c>
   12550:	ldr	r0, [pc, #480]	; 12738 <main@@Base+0x490>
   12554:	adds	r2, r2, #1
   12558:	adc	r3, r3, #0
   1255c:	strd	r2, [r4, #168]	; 0xa8
   12560:	ldr	r2, [pc, #468]	; 1273c <main@@Base+0x494>
   12564:	bl	179f8 <UnityDefaultTestRun@@Base>
   12568:	ldrd	r2, [r4, #176]	; 0xb0
   1256c:	ldr	r1, [pc, #460]	; 12740 <main@@Base+0x498>
   12570:	ldr	r0, [pc, #460]	; 12744 <main@@Base+0x49c>
   12574:	adds	r2, r2, #1
   12578:	adc	r3, r3, #0
   1257c:	strd	r2, [r4, #176]	; 0xb0
   12580:	ldr	r2, [pc, #448]	; 12748 <main@@Base+0x4a0>
   12584:	bl	179f8 <UnityDefaultTestRun@@Base>
   12588:	ldrd	r2, [r4, #184]	; 0xb8
   1258c:	ldr	r1, [pc, #440]	; 1274c <main@@Base+0x4a4>
   12590:	ldr	r0, [pc, #440]	; 12750 <main@@Base+0x4a8>
   12594:	adds	r2, r2, #1
   12598:	adc	r3, r3, #0
   1259c:	strd	r2, [r4, #184]	; 0xb8
   125a0:	ldr	r2, [pc, #428]	; 12754 <main@@Base+0x4ac>
   125a4:	bl	179f8 <UnityDefaultTestRun@@Base>
   125a8:	ldrd	r2, [r4, #192]	; 0xc0
   125ac:	ldr	r1, [pc, #420]	; 12758 <main@@Base+0x4b0>
   125b0:	ldr	r0, [pc, #420]	; 1275c <main@@Base+0x4b4>
   125b4:	adds	r2, r2, #1
   125b8:	adc	r3, r3, #0
   125bc:	strd	r2, [r4, #192]	; 0xc0
   125c0:	mov	r2, #652	; 0x28c
   125c4:	bl	179f8 <UnityDefaultTestRun@@Base>
   125c8:	ldrd	r2, [r4, #200]	; 0xc8
   125cc:	ldr	r1, [pc, #396]	; 12760 <main@@Base+0x4b8>
   125d0:	ldr	r0, [pc, #396]	; 12764 <main@@Base+0x4bc>
   125d4:	adds	r2, r2, #1
   125d8:	adc	r3, r3, #0
   125dc:	strd	r2, [r4, #200]	; 0xc8
   125e0:	ldr	r2, [pc, #384]	; 12768 <main@@Base+0x4c0>
   125e4:	bl	179f8 <UnityDefaultTestRun@@Base>
   125e8:	ldrd	r2, [r4, #208]	; 0xd0
   125ec:	ldr	r1, [pc, #376]	; 1276c <main@@Base+0x4c4>
   125f0:	ldr	r0, [pc, #376]	; 12770 <main@@Base+0x4c8>
   125f4:	adds	r2, r2, #1
   125f8:	adc	r3, r3, #0
   125fc:	strd	r2, [r4, #208]	; 0xd0
   12600:	ldr	r2, [pc, #364]	; 12774 <main@@Base+0x4cc>
   12604:	bl	179f8 <UnityDefaultTestRun@@Base>
   12608:	ldrd	r2, [r4, #216]	; 0xd8
   1260c:	ldr	r1, [pc, #356]	; 12778 <main@@Base+0x4d0>
   12610:	ldr	r0, [pc, #356]	; 1277c <main@@Base+0x4d4>
   12614:	adds	r2, r2, #1
   12618:	adc	r3, r3, #0
   1261c:	strd	r2, [r4, #216]	; 0xd8
   12620:	ldr	r2, [pc, #344]	; 12780 <main@@Base+0x4d8>
   12624:	bl	179f8 <UnityDefaultTestRun@@Base>
   12628:	ldrd	r2, [r4, #224]	; 0xe0
   1262c:	adds	r2, r2, #1
   12630:	adc	r3, r3, #0
   12634:	strd	r2, [r4, #224]	; 0xe0
   12638:	bl	17b7c <UnityEnd@@Base>
   1263c:	ldrd	r2, [r4, #232]	; 0xe8
   12640:	adds	r2, r2, #1
   12644:	adc	r3, r3, #0
   12648:	strd	r2, [r4, #232]	; 0xe8
   1264c:	pop	{r4, pc}
   12650:	andeq	sp, r2, r8, lsl #8
   12654:	andeq	fp, r1, r1, ror #8
   12658:	andeq	fp, r1, r3, lsr #9
   1265c:	andeq	r4, r1, r4, lsr #7
   12660:	andeq	r0, r0, r5, ror r2
   12664:			; <UNDEFINED> instruction: 0x0001b4b9
   12668:	andeq	r4, r1, r8, ror r8
   1266c:	andeq	r0, r0, r6, ror r2
   12670:	andeq	fp, r1, sp, asr #9
   12674:	andeq	r4, r1, ip, asr r7
   12678:	andeq	r0, r0, r7, ror r2
   1267c:	andeq	fp, r1, r6, ror #9
   12680:	andeq	r4, r1, r8, lsl #13
   12684:	strdeq	fp, [r1], -pc	; <UNPREDICTABLE>
   12688:	andeq	r3, r1, r0, ror #27
   1268c:	andeq	r0, r0, r9, ror r2
   12690:	andeq	fp, r1, pc, lsl #10
   12694:	andeq	r3, r1, ip, ror r6
   12698:	andeq	r0, r0, sl, ror r2
   1269c:	andeq	fp, r1, ip, lsl r5
   126a0:	ldrdeq	r3, [r1], -r8
   126a4:	andeq	r0, r0, fp, ror r2
   126a8:	andeq	fp, r1, r0, lsr r5
   126ac:	andeq	r3, r1, r4, lsr r5
   126b0:	andeq	fp, r1, r5, asr #10
   126b4:	muleq	r1, r0, r4
   126b8:	andeq	r0, r0, sp, ror r2
   126bc:	andeq	fp, r1, r9, asr r5
   126c0:	andeq	r3, r1, ip, ror #7
   126c4:	andeq	r0, r0, lr, ror r2
   126c8:	andeq	fp, r1, r9, ror #10
   126cc:	andeq	r3, r1, r8, asr #6
   126d0:	andeq	r0, r0, pc, ror r2
   126d4:	andeq	fp, r1, r9, ror r5
   126d8:	andeq	r3, r1, r4, lsr #5
   126dc:	andeq	fp, r1, r9, lsl #11
   126e0:	andeq	r3, r1, r0, lsl #4
   126e4:	andeq	r0, r0, r1, lsl #5
   126e8:	muleq	r1, r9, r5
   126ec:	andeq	r3, r1, ip, asr r1
   126f0:	andeq	r0, r0, r2, lsl #5
   126f4:	andeq	fp, r1, fp, lsr #11
   126f8:	strheq	r3, [r1], -r8
   126fc:	andeq	r0, r0, r3, lsl #5
   12700:	andeq	fp, r1, r0, asr #11
   12704:	andeq	r3, r1, r0, lsl r0
   12708:	andeq	fp, r1, pc, asr #11
   1270c:	andeq	r2, r1, r8, ror #30
   12710:	andeq	r0, r0, r5, lsl #5
   12714:	ldrdeq	fp, [r1], -sp
   12718:	andeq	r2, r1, r0, asr #29
   1271c:	andeq	r0, r0, r6, lsl #5
   12720:	andeq	fp, r1, sp, ror #11
   12724:	andeq	r2, r1, ip, lsl lr
   12728:	andeq	r0, r0, r7, lsl #5
   1272c:	andeq	fp, r1, r3, lsl #12
   12730:	andeq	r2, r1, r4, ror sp
   12734:	andeq	fp, r1, r7, lsl r6
   12738:	andeq	r2, r1, r4, asr #25
   1273c:	andeq	r0, r0, r9, lsl #5
   12740:	andeq	fp, r1, r0, lsr r6
   12744:	ldrdeq	r2, [r1], -r0
   12748:	andeq	r0, r0, sl, lsl #5
   1274c:	andeq	fp, r1, ip, asr #12
   12750:	andeq	r2, r1, ip, lsl ip
   12754:	andeq	r0, r0, fp, lsl #5
   12758:	andeq	fp, r1, ip, asr r6
   1275c:	andeq	r2, r1, r8, ror fp
   12760:	andeq	fp, r1, lr, ror #12
   12764:	andeq	r2, r1, r8, lsr #20
   12768:	andeq	r0, r0, sp, lsl #5
   1276c:	andeq	fp, r1, r2, lsl #13
   12770:	andeq	r2, r1, r0, lsl #19
   12774:	andeq	r0, r0, lr, lsl #5
   12778:	muleq	r1, r9, r6
   1277c:	ldrdeq	r2, [r1], -ip
   12780:	andeq	r0, r0, pc, lsl #5
   12784:	ldr	r0, [pc]	; 1278c <main@@Base+0x4e4>
   12788:	b	1adc4 <__gcov_sort_n_vals@@Base+0x458>
   1278c:	strheq	ip, [r2], -r4
   12790:	ldr	r0, [pc]	; 12798 <main@@Base+0x4f0>
   12794:	b	1adc4 <__gcov_sort_n_vals@@Base+0x458>
   12798:	andeq	ip, r2, r4, lsl #8
   1279c:	ldr	r0, [pc]	; 127a4 <main@@Base+0x4fc>
   127a0:	b	1adc4 <__gcov_sort_n_vals@@Base+0x458>
   127a4:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   127a8:	ldr	r0, [pc]	; 127b0 <main@@Base+0x508>
   127ac:	b	1adc4 <__gcov_sort_n_vals@@Base+0x458>
   127b0:	andeq	ip, r2, r4, lsl fp

000127b4 <_start@@Base>:
   127b4:	mov	fp, #0
   127b8:	mov	lr, #0
   127bc:	pop	{r1}		; (ldr r1, [sp], #4)
   127c0:	mov	r2, sp
   127c4:	push	{r2}		; (str r2, [sp, #-4]!)
   127c8:	push	{r0}		; (str r0, [sp, #-4]!)
   127cc:	ldr	ip, [pc, #16]	; 127e4 <_start@@Base+0x30>
   127d0:	push	{ip}		; (str ip, [sp, #-4]!)
   127d4:	ldr	r0, [pc, #12]	; 127e8 <_start@@Base+0x34>
   127d8:	ldr	r3, [pc, #12]	; 127ec <_start@@Base+0x38>
   127dc:	bl	12038 <__libc_start_main@plt>
   127e0:	bl	12134 <abort@plt>
   127e4:	andeq	fp, r1, ip, asr r3
   127e8:	andeq	r2, r1, r8, lsr #5
   127ec:	strdeq	fp, [r1], -ip
   127f0:	ldr	r3, [pc, #20]	; 1280c <_start@@Base+0x58>
   127f4:	ldr	r2, [pc, #20]	; 12810 <_start@@Base+0x5c>
   127f8:	add	r3, pc, r3
   127fc:	ldr	r2, [r3, r2]
   12800:	cmp	r2, #0
   12804:	bxeq	lr
   12808:	b	12050 <__gmon_start__@plt>
   1280c:	andeq	r9, r1, r0, lsl #16
   12810:	andeq	r0, r0, r0, lsr #1
   12814:	ldr	r3, [pc, #28]	; 12838 <_start@@Base+0x84>
   12818:	ldr	r0, [pc, #28]	; 1283c <_start@@Base+0x88>
   1281c:	sub	r3, r3, r0
   12820:	cmp	r3, #6
   12824:	bxls	lr
   12828:	ldr	r3, [pc, #16]	; 12840 <_start@@Base+0x8c>
   1282c:	cmp	r3, #0
   12830:	bxeq	lr
   12834:	bx	r3
   12838:	andeq	ip, r2, pc, lsr ip
   1283c:	andeq	ip, r2, ip, lsr ip
   12840:	andeq	r0, r0, r0
   12844:	ldr	r1, [pc, #36]	; 12870 <_start@@Base+0xbc>
   12848:	ldr	r0, [pc, #36]	; 12874 <_start@@Base+0xc0>
   1284c:	sub	r1, r1, r0
   12850:	asr	r1, r1, #2
   12854:	add	r1, r1, r1, lsr #31
   12858:	asrs	r1, r1, #1
   1285c:	bxeq	lr
   12860:	ldr	r3, [pc, #16]	; 12878 <_start@@Base+0xc4>
   12864:	cmp	r3, #0
   12868:	bxeq	lr
   1286c:	bx	r3
   12870:	andeq	ip, r2, ip, lsr ip
   12874:	andeq	ip, r2, ip, lsr ip
   12878:	andeq	r0, r0, r0
   1287c:	push	{r4, lr}
   12880:	ldr	r4, [pc, #24]	; 128a0 <_start@@Base+0xec>
   12884:	ldrb	r3, [r4]
   12888:	cmp	r3, #0
   1288c:	popne	{r4, pc}
   12890:	bl	12814 <_start@@Base+0x60>
   12894:	mov	r3, #1
   12898:	strb	r3, [r4]
   1289c:	pop	{r4, pc}
   128a0:	andeq	ip, r2, r4, asr #24
   128a4:	ldr	r0, [pc, #40]	; 128d4 <_start@@Base+0x120>
   128a8:	ldr	r3, [r0]
   128ac:	cmp	r3, #0
   128b0:	bne	128b8 <_start@@Base+0x104>
   128b4:	b	12844 <_start@@Base+0x90>
   128b8:	ldr	r3, [pc, #24]	; 128d8 <_start@@Base+0x124>
   128bc:	cmp	r3, #0
   128c0:	beq	128b4 <_start@@Base+0x100>
   128c4:	push	{r4, lr}
   128c8:	blx	r3
   128cc:	pop	{r4, lr}
   128d0:	b	12844 <_start@@Base+0x90>
   128d4:	andeq	fp, r2, r4, lsl pc
   128d8:	andeq	r0, r0, r0

000128dc <read_token_not@@Base>:
   128dc:	push	{r4, lr}
   128e0:	sub	sp, sp, #24
   128e4:	ldr	r4, [pc, #140]	; 12978 <read_token_not@@Base+0x9c>
   128e8:	ldr	r1, [pc, #140]	; 1297c <read_token_not@@Base+0xa0>
   128ec:	add	r0, sp, #12
   128f0:	ldrd	r2, [r4]
   128f4:	adds	r2, r2, #1
   128f8:	adc	r3, r3, #0
   128fc:	strd	r2, [r4]
   12900:	bl	1807c <init_lexer@@Base>
   12904:	ldrd	r2, [r4, #8]
   12908:	add	r0, sp, #12
   1290c:	adds	r2, r2, #1
   12910:	adc	r3, r3, #0
   12914:	strd	r2, [r4, #8]
   12918:	bl	18220 <next@@Base>
   1291c:	ldrd	r2, [r4, #16]
   12920:	adds	r2, r2, #1
   12924:	adc	r3, r3, #0
   12928:	strd	r2, [r4, #16]
   1292c:	mov	r3, #148	; 0x94
   12930:	str	r3, [sp]
   12934:	mov	r2, #0
   12938:	mov	r3, #620	; 0x26c
   1293c:	ldr	r1, [r0]
   12940:	mov	r0, #12
   12944:	bl	15750 <UnityAssertEqualNumber@@Base>
   12948:	ldrd	r2, [r4, #24]
   1294c:	add	r0, sp, #12
   12950:	adds	r2, r2, #1
   12954:	adc	r3, r3, #0
   12958:	strd	r2, [r4, #24]
   1295c:	bl	180a8 <destroy_lexer@@Base>
   12960:	ldrd	r2, [r4, #32]
   12964:	adds	r2, r2, #1
   12968:	adc	r3, r3, #0
   1296c:	strd	r2, [r4, #32]
   12970:	add	sp, sp, #24
   12974:	pop	{r4, pc}
   12978:	andeq	ip, r2, r8, asr #24
   1297c:	muleq	r1, r4, r3

00012980 <read_token_greaterthan@@Base>:
   12980:	push	{r4, lr}
   12984:	sub	sp, sp, #24
   12988:	ldr	r4, [pc, #140]	; 12a1c <read_token_greaterthan@@Base+0x9c>
   1298c:	ldr	r1, [pc, #140]	; 12a20 <read_token_greaterthan@@Base+0xa0>
   12990:	add	r0, sp, #12
   12994:	ldrd	r2, [r4, #40]	; 0x28
   12998:	adds	r2, r2, #1
   1299c:	adc	r3, r3, #0
   129a0:	strd	r2, [r4, #40]	; 0x28
   129a4:	bl	1807c <init_lexer@@Base>
   129a8:	ldrd	r2, [r4, #48]	; 0x30
   129ac:	add	r0, sp, #12
   129b0:	adds	r2, r2, #1
   129b4:	adc	r3, r3, #0
   129b8:	strd	r2, [r4, #48]	; 0x30
   129bc:	bl	18220 <next@@Base>
   129c0:	ldrd	r2, [r4, #56]	; 0x38
   129c4:	adds	r2, r2, #1
   129c8:	adc	r3, r3, #0
   129cc:	strd	r2, [r4, #56]	; 0x38
   129d0:	mov	r3, #148	; 0x94
   129d4:	str	r3, [sp]
   129d8:	mov	r2, #0
   129dc:	ldr	r3, [pc, #64]	; 12a24 <read_token_greaterthan@@Base+0xa4>
   129e0:	ldr	r1, [r0]
   129e4:	mov	r0, #12
   129e8:	bl	15750 <UnityAssertEqualNumber@@Base>
   129ec:	ldrd	r2, [r4, #64]	; 0x40
   129f0:	add	r0, sp, #12
   129f4:	adds	r2, r2, #1
   129f8:	adc	r3, r3, #0
   129fc:	strd	r2, [r4, #64]	; 0x40
   12a00:	bl	180a8 <destroy_lexer@@Base>
   12a04:	ldrd	r2, [r4, #72]	; 0x48
   12a08:	adds	r2, r2, #1
   12a0c:	adc	r3, r3, #0
   12a10:	strd	r2, [r4, #72]	; 0x48
   12a14:	add	sp, sp, #24
   12a18:	pop	{r4, pc}
   12a1c:	andeq	ip, r2, r8, asr #24
   12a20:	muleq	r1, r6, r3
   12a24:	andeq	r0, r0, fp, asr r2

00012a28 <read_token_lessthan@@Base>:
   12a28:	push	{r4, lr}
   12a2c:	sub	sp, sp, #24
   12a30:	ldr	r4, [pc, #140]	; 12ac4 <read_token_lessthan@@Base+0x9c>
   12a34:	ldr	r1, [pc, #140]	; 12ac8 <read_token_lessthan@@Base+0xa0>
   12a38:	add	r0, sp, #12
   12a3c:	ldrd	r2, [r4, #80]	; 0x50
   12a40:	adds	r2, r2, #1
   12a44:	adc	r3, r3, #0
   12a48:	strd	r2, [r4, #80]	; 0x50
   12a4c:	bl	1807c <init_lexer@@Base>
   12a50:	ldrd	r2, [r4, #88]	; 0x58
   12a54:	add	r0, sp, #12
   12a58:	adds	r2, r2, #1
   12a5c:	adc	r3, r3, #0
   12a60:	strd	r2, [r4, #88]	; 0x58
   12a64:	bl	18220 <next@@Base>
   12a68:	ldrd	r2, [r4, #96]	; 0x60
   12a6c:	adds	r2, r2, #1
   12a70:	adc	r3, r3, #0
   12a74:	strd	r2, [r4, #96]	; 0x60
   12a78:	mov	r3, #148	; 0x94
   12a7c:	str	r3, [sp]
   12a80:	mov	r2, #0
   12a84:	ldr	r3, [pc, #64]	; 12acc <read_token_lessthan@@Base+0xa4>
   12a88:	ldr	r1, [r0]
   12a8c:	mov	r0, #12
   12a90:	bl	15750 <UnityAssertEqualNumber@@Base>
   12a94:	ldrd	r2, [r4, #104]	; 0x68
   12a98:	add	r0, sp, #12
   12a9c:	adds	r2, r2, #1
   12aa0:	adc	r3, r3, #0
   12aa4:	strd	r2, [r4, #104]	; 0x68
   12aa8:	bl	180a8 <destroy_lexer@@Base>
   12aac:	ldrd	r2, [r4, #112]	; 0x70
   12ab0:	adds	r2, r2, #1
   12ab4:	adc	r3, r3, #0
   12ab8:	strd	r2, [r4, #112]	; 0x70
   12abc:	add	sp, sp, #24
   12ac0:	pop	{r4, pc}
   12ac4:	andeq	ip, r2, r8, asr #24
   12ac8:	muleq	r1, r8, r3
   12acc:	andeq	r0, r0, sl, asr #4

00012ad0 <read_token_greaterequalthan@@Base>:
   12ad0:	push	{r4, lr}
   12ad4:	sub	sp, sp, #24
   12ad8:	ldr	r4, [pc, #140]	; 12b6c <read_token_greaterequalthan@@Base+0x9c>
   12adc:	ldr	r1, [pc, #140]	; 12b70 <read_token_greaterequalthan@@Base+0xa0>
   12ae0:	add	r0, sp, #12
   12ae4:	ldrd	r2, [r4, #120]	; 0x78
   12ae8:	adds	r2, r2, #1
   12aec:	adc	r3, r3, #0
   12af0:	strd	r2, [r4, #120]	; 0x78
   12af4:	bl	1807c <init_lexer@@Base>
   12af8:	ldrd	r2, [r4, #128]	; 0x80
   12afc:	add	r0, sp, #12
   12b00:	adds	r2, r2, #1
   12b04:	adc	r3, r3, #0
   12b08:	strd	r2, [r4, #128]	; 0x80
   12b0c:	bl	18220 <next@@Base>
   12b10:	ldrd	r2, [r4, #136]	; 0x88
   12b14:	adds	r2, r2, #1
   12b18:	adc	r3, r3, #0
   12b1c:	strd	r2, [r4, #136]	; 0x88
   12b20:	mov	r3, #148	; 0x94
   12b24:	str	r3, [sp]
   12b28:	mov	r2, #0
   12b2c:	ldr	r3, [pc, #64]	; 12b74 <read_token_greaterequalthan@@Base+0xa4>
   12b30:	ldr	r1, [r0]
   12b34:	mov	r0, #12
   12b38:	bl	15750 <UnityAssertEqualNumber@@Base>
   12b3c:	ldrd	r2, [r4, #144]	; 0x90
   12b40:	add	r0, sp, #12
   12b44:	adds	r2, r2, #1
   12b48:	adc	r3, r3, #0
   12b4c:	strd	r2, [r4, #144]	; 0x90
   12b50:	bl	180a8 <destroy_lexer@@Base>
   12b54:	ldrd	r2, [r4, #152]	; 0x98
   12b58:	adds	r2, r2, #1
   12b5c:	adc	r3, r3, #0
   12b60:	strd	r2, [r4, #152]	; 0x98
   12b64:	add	sp, sp, #24
   12b68:	pop	{r4, pc}
   12b6c:	andeq	ip, r2, r8, asr #24
   12b70:	muleq	r1, sl, r3
   12b74:	andeq	r0, r0, r9, lsr r2

00012b78 <read_token_andand@@Base>:
   12b78:	push	{r4, lr}
   12b7c:	sub	sp, sp, #24
   12b80:	ldr	r4, [pc, #140]	; 12c14 <read_token_andand@@Base+0x9c>
   12b84:	ldr	r1, [pc, #140]	; 12c18 <read_token_andand@@Base+0xa0>
   12b88:	add	r0, sp, #12
   12b8c:	ldrd	r2, [r4, #160]	; 0xa0
   12b90:	adds	r2, r2, #1
   12b94:	adc	r3, r3, #0
   12b98:	strd	r2, [r4, #160]	; 0xa0
   12b9c:	bl	1807c <init_lexer@@Base>
   12ba0:	ldrd	r2, [r4, #168]	; 0xa8
   12ba4:	add	r0, sp, #12
   12ba8:	adds	r2, r2, #1
   12bac:	adc	r3, r3, #0
   12bb0:	strd	r2, [r4, #168]	; 0xa8
   12bb4:	bl	18220 <next@@Base>
   12bb8:	ldrd	r2, [r4, #176]	; 0xb0
   12bbc:	adds	r2, r2, #1
   12bc0:	adc	r3, r3, #0
   12bc4:	strd	r2, [r4, #176]	; 0xb0
   12bc8:	mov	r3, #148	; 0x94
   12bcc:	str	r3, [sp]
   12bd0:	mov	r2, #0
   12bd4:	mov	r3, #552	; 0x228
   12bd8:	ldr	r1, [r0]
   12bdc:	mov	r0, #12
   12be0:	bl	15750 <UnityAssertEqualNumber@@Base>
   12be4:	ldrd	r2, [r4, #184]	; 0xb8
   12be8:	add	r0, sp, #12
   12bec:	adds	r2, r2, #1
   12bf0:	adc	r3, r3, #0
   12bf4:	strd	r2, [r4, #184]	; 0xb8
   12bf8:	bl	180a8 <destroy_lexer@@Base>
   12bfc:	ldrd	r2, [r4, #192]	; 0xc0
   12c00:	adds	r2, r2, #1
   12c04:	adc	r3, r3, #0
   12c08:	strd	r2, [r4, #192]	; 0xc0
   12c0c:	add	sp, sp, #24
   12c10:	pop	{r4, pc}
   12c14:	andeq	ip, r2, r8, asr #24
   12c18:	muleq	r1, sp, r3

00012c1c <read_token_oror@@Base>:
   12c1c:	push	{r4, lr}
   12c20:	sub	sp, sp, #24
   12c24:	ldr	r4, [pc, #140]	; 12cb8 <read_token_oror@@Base+0x9c>
   12c28:	ldr	r1, [pc, #140]	; 12cbc <read_token_oror@@Base+0xa0>
   12c2c:	add	r0, sp, #12
   12c30:	ldrd	r2, [r4, #200]	; 0xc8
   12c34:	adds	r2, r2, #1
   12c38:	adc	r3, r3, #0
   12c3c:	strd	r2, [r4, #200]	; 0xc8
   12c40:	bl	1807c <init_lexer@@Base>
   12c44:	ldrd	r2, [r4, #208]	; 0xd0
   12c48:	add	r0, sp, #12
   12c4c:	adds	r2, r2, #1
   12c50:	adc	r3, r3, #0
   12c54:	strd	r2, [r4, #208]	; 0xd0
   12c58:	bl	18220 <next@@Base>
   12c5c:	ldrd	r2, [r4, #216]	; 0xd8
   12c60:	adds	r2, r2, #1
   12c64:	adc	r3, r3, #0
   12c68:	strd	r2, [r4, #216]	; 0xd8
   12c6c:	mov	r3, #148	; 0x94
   12c70:	str	r3, [sp]
   12c74:	mov	r2, #0
   12c78:	ldr	r3, [pc, #64]	; 12cc0 <read_token_oror@@Base+0xa4>
   12c7c:	ldr	r1, [r0]
   12c80:	mov	r0, #12
   12c84:	bl	15750 <UnityAssertEqualNumber@@Base>
   12c88:	ldrd	r2, [r4, #224]	; 0xe0
   12c8c:	add	r0, sp, #12
   12c90:	adds	r2, r2, #1
   12c94:	adc	r3, r3, #0
   12c98:	strd	r2, [r4, #224]	; 0xe0
   12c9c:	bl	180a8 <destroy_lexer@@Base>
   12ca0:	ldrd	r2, [r4, #232]	; 0xe8
   12ca4:	adds	r2, r2, #1
   12ca8:	adc	r3, r3, #0
   12cac:	strd	r2, [r4, #232]	; 0xe8
   12cb0:	add	sp, sp, #24
   12cb4:	pop	{r4, pc}
   12cb8:	andeq	ip, r2, r8, asr #24
   12cbc:	andeq	fp, r1, r0, lsr #7
   12cc0:	andeq	r0, r0, r7, lsl r2

00012cc4 <read_token_lessequalthan@@Base>:
   12cc4:	push	{r4, lr}
   12cc8:	sub	sp, sp, #24
   12ccc:	ldr	r4, [pc, #148]	; 12d68 <read_token_lessequalthan@@Base+0xa4>
   12cd0:	ldr	r1, [pc, #148]	; 12d6c <read_token_lessequalthan@@Base+0xa8>
   12cd4:	add	r0, sp, #12
   12cd8:	ldrd	r2, [r4, #240]	; 0xf0
   12cdc:	adds	r2, r2, #1
   12ce0:	adc	r3, r3, #0
   12ce4:	strd	r2, [r4, #240]	; 0xf0
   12ce8:	bl	1807c <init_lexer@@Base>
   12cec:	ldrd	r2, [r4, #248]	; 0xf8
   12cf0:	add	r0, sp, #12
   12cf4:	adds	r2, r2, #1
   12cf8:	adc	r3, r3, #0
   12cfc:	strd	r2, [r4, #248]	; 0xf8
   12d00:	bl	18220 <next@@Base>
   12d04:	add	r1, r4, #256	; 0x100
   12d08:	add	r4, r4, #272	; 0x110
   12d0c:	ldrd	r2, [r1]
   12d10:	adds	r2, r2, #1
   12d14:	adc	r3, r3, #0
   12d18:	strd	r2, [r1]
   12d1c:	mov	r3, #148	; 0x94
   12d20:	str	r3, [sp]
   12d24:	mov	r2, #0
   12d28:	ldr	r3, [pc, #64]	; 12d70 <read_token_lessequalthan@@Base+0xac>
   12d2c:	ldr	r1, [r0]
   12d30:	mov	r0, #12
   12d34:	bl	15750 <UnityAssertEqualNumber@@Base>
   12d38:	ldrd	r2, [r4, #-8]
   12d3c:	add	r0, sp, #12
   12d40:	adds	r2, r2, #1
   12d44:	adc	r3, r3, #0
   12d48:	strd	r2, [r4, #-8]
   12d4c:	bl	180a8 <destroy_lexer@@Base>
   12d50:	ldrd	r2, [r4]
   12d54:	adds	r2, r2, #1
   12d58:	adc	r3, r3, #0
   12d5c:	strd	r2, [r4]
   12d60:	add	sp, sp, #24
   12d64:	pop	{r4, pc}
   12d68:	andeq	ip, r2, r8, asr #24
   12d6c:	andeq	fp, r1, r3, lsr #7
   12d70:	andeq	r0, r0, r6, lsl #4

00012d74 <read_token_notequal@@Base>:
   12d74:	push	{r4, lr}
   12d78:	sub	sp, sp, #24
   12d7c:	ldr	r4, [pc, #140]	; 12e10 <read_token_notequal@@Base+0x9c>
   12d80:	ldr	r1, [pc, #140]	; 12e14 <read_token_notequal@@Base+0xa0>
   12d84:	add	r0, sp, #12
   12d88:	ldrd	r2, [r4, #-8]
   12d8c:	adds	r2, r2, #1
   12d90:	adc	r3, r3, #0
   12d94:	strd	r2, [r4, #-8]
   12d98:	bl	1807c <init_lexer@@Base>
   12d9c:	ldrd	r2, [r4]
   12da0:	add	r0, sp, #12
   12da4:	adds	r2, r2, #1
   12da8:	adc	r3, r3, #0
   12dac:	strd	r2, [r4]
   12db0:	bl	18220 <next@@Base>
   12db4:	ldrd	r2, [r4, #8]
   12db8:	adds	r2, r2, #1
   12dbc:	adc	r3, r3, #0
   12dc0:	strd	r2, [r4, #8]
   12dc4:	mov	r3, #148	; 0x94
   12dc8:	str	r3, [sp]
   12dcc:	mov	r2, #0
   12dd0:	ldr	r3, [pc, #64]	; 12e18 <read_token_notequal@@Base+0xa4>
   12dd4:	ldr	r1, [r0]
   12dd8:	mov	r0, #12
   12ddc:	bl	15750 <UnityAssertEqualNumber@@Base>
   12de0:	ldrd	r2, [r4, #16]
   12de4:	add	r0, sp, #12
   12de8:	adds	r2, r2, #1
   12dec:	adc	r3, r3, #0
   12df0:	strd	r2, [r4, #16]
   12df4:	bl	180a8 <destroy_lexer@@Base>
   12df8:	ldrd	r2, [r4, #24]
   12dfc:	adds	r2, r2, #1
   12e00:	adc	r3, r3, #0
   12e04:	strd	r2, [r4, #24]
   12e08:	add	sp, sp, #24
   12e0c:	pop	{r4, pc}
   12e10:	andeq	ip, r2, r8, ror #26
   12e14:	andeq	fp, r1, r6, lsr #7
   12e18:	strdeq	r0, [r0], -r5

00012e1c <read_token_equalequal@@Base>:
   12e1c:	push	{r4, lr}
   12e20:	sub	sp, sp, #24
   12e24:	ldr	r4, [pc, #140]	; 12eb8 <read_token_equalequal@@Base+0x9c>
   12e28:	ldr	r1, [pc, #140]	; 12ebc <read_token_equalequal@@Base+0xa0>
   12e2c:	add	r0, sp, #12
   12e30:	ldrd	r2, [r4]
   12e34:	adds	r2, r2, #1
   12e38:	adc	r3, r3, #0
   12e3c:	strd	r2, [r4]
   12e40:	bl	1807c <init_lexer@@Base>
   12e44:	ldrd	r2, [r4, #8]
   12e48:	add	r0, sp, #12
   12e4c:	adds	r2, r2, #1
   12e50:	adc	r3, r3, #0
   12e54:	strd	r2, [r4, #8]
   12e58:	bl	18220 <next@@Base>
   12e5c:	ldrd	r2, [r4, #16]
   12e60:	adds	r2, r2, #1
   12e64:	adc	r3, r3, #0
   12e68:	strd	r2, [r4, #16]
   12e6c:	mov	r3, #148	; 0x94
   12e70:	str	r3, [sp]
   12e74:	mov	r2, #0
   12e78:	mov	r3, #484	; 0x1e4
   12e7c:	ldr	r1, [r0]
   12e80:	mov	r0, #12
   12e84:	bl	15750 <UnityAssertEqualNumber@@Base>
   12e88:	ldrd	r2, [r4, #24]
   12e8c:	add	r0, sp, #12
   12e90:	adds	r2, r2, #1
   12e94:	adc	r3, r3, #0
   12e98:	strd	r2, [r4, #24]
   12e9c:	bl	180a8 <destroy_lexer@@Base>
   12ea0:	ldrd	r2, [r4, #32]
   12ea4:	adds	r2, r2, #1
   12ea8:	adc	r3, r3, #0
   12eac:	strd	r2, [r4, #32]
   12eb0:	add	sp, sp, #24
   12eb4:	pop	{r4, pc}
   12eb8:	andeq	ip, r2, r8, lsl #27
   12ebc:	andeq	fp, r1, r9, lsr #7

00012ec0 <read_token_else@@Base>:
   12ec0:	push	{r4, lr}
   12ec4:	sub	sp, sp, #24
   12ec8:	ldr	r4, [pc, #140]	; 12f5c <read_token_else@@Base+0x9c>
   12ecc:	ldr	r1, [pc, #140]	; 12f60 <read_token_else@@Base+0xa0>
   12ed0:	add	r0, sp, #12
   12ed4:	ldrd	r2, [r4, #-8]
   12ed8:	adds	r2, r2, #1
   12edc:	adc	r3, r3, #0
   12ee0:	strd	r2, [r4, #-8]
   12ee4:	bl	1807c <init_lexer@@Base>
   12ee8:	ldrd	r2, [r4]
   12eec:	add	r0, sp, #12
   12ef0:	adds	r2, r2, #1
   12ef4:	adc	r3, r3, #0
   12ef8:	strd	r2, [r4]
   12efc:	bl	18220 <next@@Base>
   12f00:	ldrd	r2, [r4, #8]
   12f04:	adds	r2, r2, #1
   12f08:	adc	r3, r3, #0
   12f0c:	strd	r2, [r4, #8]
   12f10:	mov	r3, #148	; 0x94
   12f14:	str	r3, [sp]
   12f18:	mov	r2, #0
   12f1c:	ldr	r3, [pc, #64]	; 12f64 <read_token_else@@Base+0xa4>
   12f20:	ldr	r1, [r0]
   12f24:	mov	r0, #11
   12f28:	bl	15750 <UnityAssertEqualNumber@@Base>
   12f2c:	ldrd	r2, [r4, #16]
   12f30:	add	r0, sp, #12
   12f34:	adds	r2, r2, #1
   12f38:	adc	r3, r3, #0
   12f3c:	strd	r2, [r4, #16]
   12f40:	bl	180a8 <destroy_lexer@@Base>
   12f44:	ldrd	r2, [r4, #24]
   12f48:	adds	r2, r2, #1
   12f4c:	adc	r3, r3, #0
   12f50:	strd	r2, [r4, #24]
   12f54:	add	sp, sp, #24
   12f58:	pop	{r4, pc}
   12f5c:			; <UNDEFINED> instruction: 0x0002cdb8
   12f60:	andeq	fp, r1, r7, lsl r5
   12f64:	ldrdeq	r0, [r0], -r3

00012f68 <read_token_if@@Base>:
   12f68:	push	{r4, lr}
   12f6c:	sub	sp, sp, #24
   12f70:	ldr	r4, [pc, #140]	; 13004 <read_token_if@@Base+0x9c>
   12f74:	ldr	r1, [pc, #140]	; 13008 <read_token_if@@Base+0xa0>
   12f78:	add	r0, sp, #12
   12f7c:	ldrd	r2, [r4]
   12f80:	adds	r2, r2, #1
   12f84:	adc	r3, r3, #0
   12f88:	strd	r2, [r4]
   12f8c:	bl	1807c <init_lexer@@Base>
   12f90:	ldrd	r2, [r4, #8]
   12f94:	add	r0, sp, #12
   12f98:	adds	r2, r2, #1
   12f9c:	adc	r3, r3, #0
   12fa0:	strd	r2, [r4, #8]
   12fa4:	bl	18220 <next@@Base>
   12fa8:	ldrd	r2, [r4, #16]
   12fac:	adds	r2, r2, #1
   12fb0:	adc	r3, r3, #0
   12fb4:	strd	r2, [r4, #16]
   12fb8:	mov	r3, #148	; 0x94
   12fbc:	str	r3, [sp]
   12fc0:	mov	r2, #0
   12fc4:	ldr	r3, [pc, #64]	; 1300c <read_token_if@@Base+0xa4>
   12fc8:	ldr	r1, [r0]
   12fcc:	mov	r0, #10
   12fd0:	bl	15750 <UnityAssertEqualNumber@@Base>
   12fd4:	ldrd	r2, [r4, #24]
   12fd8:	add	r0, sp, #12
   12fdc:	adds	r2, r2, #1
   12fe0:	adc	r3, r3, #0
   12fe4:	strd	r2, [r4, #24]
   12fe8:	bl	180a8 <destroy_lexer@@Base>
   12fec:	ldrd	r2, [r4, #32]
   12ff0:	adds	r2, r2, #1
   12ff4:	adc	r3, r3, #0
   12ff8:	strd	r2, [r4, #32]
   12ffc:	add	sp, sp, #24
   13000:	pop	{r4, pc}
   13004:	ldrdeq	ip, [r2], -r8
   13008:	ldrdeq	fp, [r1], -sl
   1300c:	andeq	r0, r0, r2, asr #3

00013010 <read_token_eof@@Base>:
   13010:	push	{r4, lr}
   13014:	sub	sp, sp, #24
   13018:	ldr	r4, [pc, #140]	; 130ac <read_token_eof@@Base+0x9c>
   1301c:	ldr	r1, [pc, #140]	; 130b0 <read_token_eof@@Base+0xa0>
   13020:	add	r0, sp, #12
   13024:	ldrd	r2, [r4, #-8]
   13028:	adds	r2, r2, #1
   1302c:	adc	r3, r3, #0
   13030:	strd	r2, [r4, #-8]
   13034:	bl	1807c <init_lexer@@Base>
   13038:	ldrd	r2, [r4]
   1303c:	add	r0, sp, #12
   13040:	adds	r2, r2, #1
   13044:	adc	r3, r3, #0
   13048:	strd	r2, [r4]
   1304c:	bl	18220 <next@@Base>
   13050:	ldrd	r2, [r4, #8]
   13054:	adds	r2, r2, #1
   13058:	adc	r3, r3, #0
   1305c:	strd	r2, [r4, #8]
   13060:	mov	r3, #148	; 0x94
   13064:	str	r3, [sp]
   13068:	mov	r2, #0
   1306c:	ldr	r3, [pc, #64]	; 130b4 <read_token_eof@@Base+0xa4>
   13070:	ldr	r1, [r0]
   13074:	mov	r0, #9
   13078:	bl	15750 <UnityAssertEqualNumber@@Base>
   1307c:	ldrd	r2, [r4, #16]
   13080:	add	r0, sp, #12
   13084:	adds	r2, r2, #1
   13088:	adc	r3, r3, #0
   1308c:	strd	r2, [r4, #16]
   13090:	bl	180a8 <destroy_lexer@@Base>
   13094:	ldrd	r2, [r4, #24]
   13098:	adds	r2, r2, #1
   1309c:	adc	r3, r3, #0
   130a0:	strd	r2, [r4, #24]
   130a4:	add	sp, sp, #24
   130a8:	pop	{r4, pc}
   130ac:	andeq	ip, r2, r8, lsl #28
   130b0:	strdeq	fp, [r1], -ip
   130b4:			; <UNDEFINED> instruction: 0x000001b1

000130b8 <read_token_semicolon@@Base>:
   130b8:	push	{r4, lr}
   130bc:	sub	sp, sp, #24
   130c0:	ldr	r4, [pc, #140]	; 13154 <read_token_semicolon@@Base+0x9c>
   130c4:	ldr	r1, [pc, #140]	; 13158 <read_token_semicolon@@Base+0xa0>
   130c8:	add	r0, sp, #12
   130cc:	ldrd	r2, [r4]
   130d0:	adds	r2, r2, #1
   130d4:	adc	r3, r3, #0
   130d8:	strd	r2, [r4]
   130dc:	bl	1807c <init_lexer@@Base>
   130e0:	ldrd	r2, [r4, #8]
   130e4:	add	r0, sp, #12
   130e8:	adds	r2, r2, #1
   130ec:	adc	r3, r3, #0
   130f0:	strd	r2, [r4, #8]
   130f4:	bl	18220 <next@@Base>
   130f8:	ldrd	r2, [r4, #16]
   130fc:	adds	r2, r2, #1
   13100:	adc	r3, r3, #0
   13104:	strd	r2, [r4, #16]
   13108:	mov	r3, #148	; 0x94
   1310c:	str	r3, [sp]
   13110:	mov	r2, #0
   13114:	mov	r3, #416	; 0x1a0
   13118:	ldr	r1, [r0]
   1311c:	mov	r0, #8
   13120:	bl	15750 <UnityAssertEqualNumber@@Base>
   13124:	ldrd	r2, [r4, #24]
   13128:	add	r0, sp, #12
   1312c:	adds	r2, r2, #1
   13130:	adc	r3, r3, #0
   13134:	strd	r2, [r4, #24]
   13138:	bl	180a8 <destroy_lexer@@Base>
   1313c:	ldrd	r2, [r4, #32]
   13140:	adds	r2, r2, #1
   13144:	adc	r3, r3, #0
   13148:	strd	r2, [r4, #32]
   1314c:	add	sp, sp, #24
   13150:	pop	{r4, pc}
   13154:	andeq	ip, r2, r8, lsr #28
   13158:	andeq	fp, r1, ip, lsr #7

0001315c <read_token_return@@Base>:
   1315c:	push	{r4, lr}
   13160:	sub	sp, sp, #24
   13164:	ldr	r4, [pc, #140]	; 131f8 <read_token_return@@Base+0x9c>
   13168:	ldr	r1, [pc, #140]	; 131fc <read_token_return@@Base+0xa0>
   1316c:	add	r0, sp, #12
   13170:	ldrd	r2, [r4, #-8]
   13174:	adds	r2, r2, #1
   13178:	adc	r3, r3, #0
   1317c:	strd	r2, [r4, #-8]
   13180:	bl	1807c <init_lexer@@Base>
   13184:	ldrd	r2, [r4]
   13188:	add	r0, sp, #12
   1318c:	adds	r2, r2, #1
   13190:	adc	r3, r3, #0
   13194:	strd	r2, [r4]
   13198:	bl	18220 <next@@Base>
   1319c:	ldrd	r2, [r4, #8]
   131a0:	adds	r2, r2, #1
   131a4:	adc	r3, r3, #0
   131a8:	strd	r2, [r4, #8]
   131ac:	mov	r3, #148	; 0x94
   131b0:	str	r3, [sp]
   131b4:	mov	r2, #0
   131b8:	add	r3, r3, #251	; 0xfb
   131bc:	ldr	r1, [r0]
   131c0:	mov	r0, #7
   131c4:	bl	15750 <UnityAssertEqualNumber@@Base>
   131c8:	ldrd	r2, [r4, #16]
   131cc:	add	r0, sp, #12
   131d0:	adds	r2, r2, #1
   131d4:	adc	r3, r3, #0
   131d8:	strd	r2, [r4, #16]
   131dc:	bl	180a8 <destroy_lexer@@Base>
   131e0:	ldrd	r2, [r4, #24]
   131e4:	adds	r2, r2, #1
   131e8:	adc	r3, r3, #0
   131ec:	strd	r2, [r4, #24]
   131f0:	add	sp, sp, #24
   131f4:	pop	{r4, pc}
   131f8:	andeq	ip, r2, r8, asr lr
   131fc:	andeq	fp, r1, r4, lsr #11

00013200 <read_token_cbra@@Base>:
   13200:	push	{r4, lr}
   13204:	sub	sp, sp, #24
   13208:	ldr	r4, [pc, #140]	; 1329c <read_token_cbra@@Base+0x9c>
   1320c:	ldr	r1, [pc, #140]	; 132a0 <read_token_cbra@@Base+0xa0>
   13210:	add	r0, sp, #12
   13214:	ldrd	r2, [r4]
   13218:	adds	r2, r2, #1
   1321c:	adc	r3, r3, #0
   13220:	strd	r2, [r4]
   13224:	bl	1807c <init_lexer@@Base>
   13228:	ldrd	r2, [r4, #8]
   1322c:	add	r0, sp, #12
   13230:	adds	r2, r2, #1
   13234:	adc	r3, r3, #0
   13238:	strd	r2, [r4, #8]
   1323c:	bl	18220 <next@@Base>
   13240:	ldrd	r2, [r4, #16]
   13244:	adds	r2, r2, #1
   13248:	adc	r3, r3, #0
   1324c:	strd	r2, [r4, #16]
   13250:	mov	r3, #148	; 0x94
   13254:	str	r3, [sp]
   13258:	mov	r2, #0
   1325c:	add	r3, r3, #234	; 0xea
   13260:	ldr	r1, [r0]
   13264:	mov	r0, #6
   13268:	bl	15750 <UnityAssertEqualNumber@@Base>
   1326c:	ldrd	r2, [r4, #24]
   13270:	add	r0, sp, #12
   13274:	adds	r2, r2, #1
   13278:	adc	r3, r3, #0
   1327c:	strd	r2, [r4, #24]
   13280:	bl	180a8 <destroy_lexer@@Base>
   13284:	ldrd	r2, [r4, #32]
   13288:	adds	r2, r2, #1
   1328c:	adc	r3, r3, #0
   13290:	strd	r2, [r4, #32]
   13294:	add	sp, sp, #24
   13298:	pop	{r4, pc}
   1329c:	andeq	ip, r2, r8, ror lr
   132a0:	andeq	fp, r1, pc, asr r4

000132a4 <read_token_obra@@Base>:
   132a4:	push	{r4, lr}
   132a8:	sub	sp, sp, #24
   132ac:	ldr	r4, [pc, #140]	; 13340 <read_token_obra@@Base+0x9c>
   132b0:	ldr	r1, [pc, #140]	; 13344 <read_token_obra@@Base+0xa0>
   132b4:	add	r0, sp, #12
   132b8:	ldrd	r2, [r4, #-8]
   132bc:	adds	r2, r2, #1
   132c0:	adc	r3, r3, #0
   132c4:	strd	r2, [r4, #-8]
   132c8:	bl	1807c <init_lexer@@Base>
   132cc:	ldrd	r2, [r4]
   132d0:	add	r0, sp, #12
   132d4:	adds	r2, r2, #1
   132d8:	adc	r3, r3, #0
   132dc:	strd	r2, [r4]
   132e0:	bl	18220 <next@@Base>
   132e4:	ldrd	r2, [r4, #8]
   132e8:	adds	r2, r2, #1
   132ec:	adc	r3, r3, #0
   132f0:	strd	r2, [r4, #8]
   132f4:	mov	r3, #148	; 0x94
   132f8:	str	r3, [sp]
   132fc:	mov	r2, #0
   13300:	mov	r3, #364	; 0x16c
   13304:	ldr	r1, [r0]
   13308:	mov	r0, #5
   1330c:	bl	15750 <UnityAssertEqualNumber@@Base>
   13310:	ldrd	r2, [r4, #16]
   13314:	add	r0, sp, #12
   13318:	adds	r2, r2, #1
   1331c:	adc	r3, r3, #0
   13320:	strd	r2, [r4, #16]
   13324:	bl	180a8 <destroy_lexer@@Base>
   13328:	ldrd	r2, [r4, #24]
   1332c:	adds	r2, r2, #1
   13330:	adc	r3, r3, #0
   13334:	strd	r2, [r4, #24]
   13338:	add	sp, sp, #24
   1333c:	pop	{r4, pc}
   13340:	andeq	ip, r2, r8, lsr #29
   13344:	andeq	fp, r1, lr, lsr #7

00013348 <read_token_cpar@@Base>:
   13348:	push	{r4, lr}
   1334c:	sub	sp, sp, #24
   13350:	ldr	r4, [pc, #140]	; 133e4 <read_token_cpar@@Base+0x9c>
   13354:	ldr	r1, [pc, #140]	; 133e8 <read_token_cpar@@Base+0xa0>
   13358:	add	r0, sp, #12
   1335c:	ldrd	r2, [r4]
   13360:	adds	r2, r2, #1
   13364:	adc	r3, r3, #0
   13368:	strd	r2, [r4]
   1336c:	bl	1807c <init_lexer@@Base>
   13370:	ldrd	r2, [r4, #8]
   13374:	add	r0, sp, #12
   13378:	adds	r2, r2, #1
   1337c:	adc	r3, r3, #0
   13380:	strd	r2, [r4, #8]
   13384:	bl	18220 <next@@Base>
   13388:	ldrd	r2, [r4, #16]
   1338c:	adds	r2, r2, #1
   13390:	adc	r3, r3, #0
   13394:	strd	r2, [r4, #16]
   13398:	mov	r3, #148	; 0x94
   1339c:	str	r3, [sp]
   133a0:	mov	r2, #0
   133a4:	add	r3, r3, #199	; 0xc7
   133a8:	ldr	r1, [r0]
   133ac:	mov	r0, #4
   133b0:	bl	15750 <UnityAssertEqualNumber@@Base>
   133b4:	ldrd	r2, [r4, #24]
   133b8:	add	r0, sp, #12
   133bc:	adds	r2, r2, #1
   133c0:	adc	r3, r3, #0
   133c4:	strd	r2, [r4, #24]
   133c8:	bl	180a8 <destroy_lexer@@Base>
   133cc:	ldrd	r2, [r4, #32]
   133d0:	adds	r2, r2, #1
   133d4:	adc	r3, r3, #0
   133d8:	strd	r2, [r4, #32]
   133dc:	add	sp, sp, #24
   133e0:	pop	{r4, pc}
   133e4:	andeq	ip, r2, r8, asr #29
   133e8:			; <UNDEFINED> instruction: 0x0001b3b0

000133ec <read_token_opar@@Base>:
   133ec:	push	{r4, lr}
   133f0:	sub	sp, sp, #24
   133f4:	ldr	r4, [pc, #140]	; 13488 <read_token_opar@@Base+0x9c>
   133f8:	ldr	r1, [pc, #140]	; 1348c <read_token_opar@@Base+0xa0>
   133fc:	add	r0, sp, #12
   13400:	ldrd	r2, [r4, #-8]
   13404:	adds	r2, r2, #1
   13408:	adc	r3, r3, #0
   1340c:	strd	r2, [r4, #-8]
   13410:	bl	1807c <init_lexer@@Base>
   13414:	ldrd	r2, [r4]
   13418:	add	r0, sp, #12
   1341c:	adds	r2, r2, #1
   13420:	adc	r3, r3, #0
   13424:	strd	r2, [r4]
   13428:	bl	18220 <next@@Base>
   1342c:	ldrd	r2, [r4, #8]
   13430:	adds	r2, r2, #1
   13434:	adc	r3, r3, #0
   13438:	strd	r2, [r4, #8]
   1343c:	mov	r3, #148	; 0x94
   13440:	str	r3, [sp]
   13444:	mov	r2, #0
   13448:	add	r3, r3, #182	; 0xb6
   1344c:	ldr	r1, [r0]
   13450:	mov	r0, #3
   13454:	bl	15750 <UnityAssertEqualNumber@@Base>
   13458:	ldrd	r2, [r4, #16]
   1345c:	add	r0, sp, #12
   13460:	adds	r2, r2, #1
   13464:	adc	r3, r3, #0
   13468:	strd	r2, [r4, #16]
   1346c:	bl	180a8 <destroy_lexer@@Base>
   13470:	ldrd	r2, [r4, #24]
   13474:	adds	r2, r2, #1
   13478:	adc	r3, r3, #0
   1347c:	strd	r2, [r4, #24]
   13480:	add	sp, sp, #24
   13484:	pop	{r4, pc}
   13488:	strdeq	ip, [r2], -r8
   1348c:			; <UNDEFINED> instruction: 0x0001b3b2

00013490 <read_token_function@@Base>:
   13490:	push	{r4, lr}
   13494:	sub	sp, sp, #24
   13498:	ldr	r4, [pc, #140]	; 1352c <read_token_function@@Base+0x9c>
   1349c:	ldr	r1, [pc, #140]	; 13530 <read_token_function@@Base+0xa0>
   134a0:	add	r0, sp, #12
   134a4:	ldrd	r2, [r4]
   134a8:	adds	r2, r2, #1
   134ac:	adc	r3, r3, #0
   134b0:	strd	r2, [r4]
   134b4:	bl	1807c <init_lexer@@Base>
   134b8:	ldrd	r2, [r4, #8]
   134bc:	add	r0, sp, #12
   134c0:	adds	r2, r2, #1
   134c4:	adc	r3, r3, #0
   134c8:	strd	r2, [r4, #8]
   134cc:	bl	18220 <next@@Base>
   134d0:	ldrd	r2, [r4, #16]
   134d4:	adds	r2, r2, #1
   134d8:	adc	r3, r3, #0
   134dc:	strd	r2, [r4, #16]
   134e0:	mov	r3, #148	; 0x94
   134e4:	str	r3, [sp]
   134e8:	mov	r2, #0
   134ec:	add	r3, r3, #165	; 0xa5
   134f0:	ldr	r1, [r0]
   134f4:	mov	r0, #2
   134f8:	bl	15750 <UnityAssertEqualNumber@@Base>
   134fc:	ldrd	r2, [r4, #24]
   13500:	add	r0, sp, #12
   13504:	adds	r2, r2, #1
   13508:	adc	r3, r3, #0
   1350c:	strd	r2, [r4, #24]
   13510:	bl	180a8 <destroy_lexer@@Base>
   13514:	ldrd	r2, [r4, #32]
   13518:	adds	r2, r2, #1
   1351c:	adc	r3, r3, #0
   13520:	strd	r2, [r4, #32]
   13524:	add	sp, sp, #24
   13528:	pop	{r4, pc}
   1352c:	andeq	ip, r2, r8, lsl pc
   13530:			; <UNDEFINED> instruction: 0x0001b4b4

00013534 <read_token_int_value@@Base>:
   13534:	push	{r4, lr}
   13538:	sub	sp, sp, #24
   1353c:	ldr	r4, [pc, #140]	; 135d0 <read_token_int_value@@Base+0x9c>
   13540:	ldr	r1, [pc, #140]	; 135d4 <read_token_int_value@@Base+0xa0>
   13544:	add	r0, sp, #12
   13548:	ldrd	r2, [r4, #-8]
   1354c:	adds	r2, r2, #1
   13550:	adc	r3, r3, #0
   13554:	strd	r2, [r4, #-8]
   13558:	bl	1807c <init_lexer@@Base>
   1355c:	ldrd	r2, [r4]
   13560:	add	r0, sp, #12
   13564:	adds	r2, r2, #1
   13568:	adc	r3, r3, #0
   1356c:	strd	r2, [r4]
   13570:	bl	18220 <next@@Base>
   13574:	ldrd	r2, [r4, #8]
   13578:	adds	r2, r2, #1
   1357c:	adc	r3, r3, #0
   13580:	strd	r2, [r4, #8]
   13584:	mov	r3, #148	; 0x94
   13588:	str	r3, [sp]
   1358c:	mov	r2, #0
   13590:	mov	r3, #296	; 0x128
   13594:	ldr	r1, [r0]
   13598:	mov	r0, #1
   1359c:	bl	15750 <UnityAssertEqualNumber@@Base>
   135a0:	ldrd	r2, [r4, #16]
   135a4:	add	r0, sp, #12
   135a8:	adds	r2, r2, #1
   135ac:	adc	r3, r3, #0
   135b0:	strd	r2, [r4, #16]
   135b4:	bl	180a8 <destroy_lexer@@Base>
   135b8:	ldrd	r2, [r4, #24]
   135bc:	adds	r2, r2, #1
   135c0:	adc	r3, r3, #0
   135c4:	strd	r2, [r4, #24]
   135c8:	add	sp, sp, #24
   135cc:	pop	{r4, pc}
   135d0:	andeq	ip, r2, r8, asr #30
   135d4:			; <UNDEFINED> instruction: 0x0001b3b4

000135d8 <read_token_int_type@@Base>:
   135d8:	push	{r4, lr}
   135dc:	sub	sp, sp, #24
   135e0:	ldr	r4, [pc, #140]	; 13674 <read_token_int_type@@Base+0x9c>
   135e4:	ldr	r1, [pc, #140]	; 13678 <read_token_int_type@@Base+0xa0>
   135e8:	add	r0, sp, #12
   135ec:	ldrd	r2, [r4]
   135f0:	adds	r2, r2, #1
   135f4:	adc	r3, r3, #0
   135f8:	strd	r2, [r4]
   135fc:	bl	1807c <init_lexer@@Base>
   13600:	ldrd	r2, [r4, #8]
   13604:	add	r0, sp, #12
   13608:	adds	r2, r2, #1
   1360c:	adc	r3, r3, #0
   13610:	strd	r2, [r4, #8]
   13614:	bl	18220 <next@@Base>
   13618:	ldrd	r2, [r4, #16]
   1361c:	adds	r2, r2, #1
   13620:	adc	r3, r3, #0
   13624:	strd	r2, [r4, #16]
   13628:	mov	r2, #0
   1362c:	mov	r3, #148	; 0x94
   13630:	str	r3, [sp]
   13634:	add	r3, r3, #131	; 0x83
   13638:	ldr	r1, [r0]
   1363c:	mov	r0, r2
   13640:	bl	15750 <UnityAssertEqualNumber@@Base>
   13644:	ldrd	r2, [r4, #24]
   13648:	add	r0, sp, #12
   1364c:	adds	r2, r2, #1
   13650:	adc	r3, r3, #0
   13654:	strd	r2, [r4, #24]
   13658:	bl	180a8 <destroy_lexer@@Base>
   1365c:	ldrd	r2, [r4, #32]
   13660:	adds	r2, r2, #1
   13664:	adc	r3, r3, #0
   13668:	strd	r2, [r4, #32]
   1366c:	add	sp, sp, #24
   13670:	pop	{r4, pc}
   13674:	andeq	ip, r2, r8, ror #30
   13678:			; <UNDEFINED> instruction: 0x0001b3b9

0001367c <if_with_else@@Base>:
   1367c:	push	{r4, r5, r6, lr}
   13680:	sub	sp, sp, #24
   13684:	ldr	r6, [pc, #1860]	; 13dd0 <if_with_else@@Base+0x754>
   13688:	ldr	r1, [pc, #1860]	; 13dd4 <if_with_else@@Base+0x758>
   1368c:	add	r4, r6, #848	; 0x350
   13690:	add	r0, sp, #12
   13694:	ldrd	r2, [r4, #-8]
   13698:	mov	r5, #148	; 0x94
   1369c:	adds	r2, r2, #1
   136a0:	adc	r3, r3, #0
   136a4:	strd	r2, [r4, #-8]
   136a8:	bl	1807c <init_lexer@@Base>
   136ac:	ldrd	r2, [r4]
   136b0:	add	r0, sp, #12
   136b4:	adds	r2, r2, #1
   136b8:	adc	r3, r3, #0
   136bc:	strd	r2, [r4]
   136c0:	bl	18220 <next@@Base>
   136c4:	ldrd	r2, [r4, #8]
   136c8:	adds	r2, r2, #1
   136cc:	adc	r3, r3, #0
   136d0:	strd	r2, [r4, #8]
   136d4:	mov	r2, #0
   136d8:	str	r5, [sp]
   136dc:	mov	r3, #210	; 0xd2
   136e0:	ldr	r1, [r0]
   136e4:	mov	r0, r2
   136e8:	bl	15750 <UnityAssertEqualNumber@@Base>
   136ec:	ldrd	r2, [r4, #16]
   136f0:	add	r0, sp, #12
   136f4:	adds	r2, r2, #1
   136f8:	adc	r3, r3, #0
   136fc:	strd	r2, [r4, #16]
   13700:	bl	18220 <next@@Base>
   13704:	ldrd	r2, [r4, #24]
   13708:	adds	r2, r2, #1
   1370c:	adc	r3, r3, #0
   13710:	strd	r2, [r4, #24]
   13714:	str	r5, [sp]
   13718:	mov	r3, #212	; 0xd4
   1371c:	mov	r2, #0
   13720:	ldr	r1, [r0]
   13724:	mov	r0, #2
   13728:	bl	15750 <UnityAssertEqualNumber@@Base>
   1372c:	ldrd	r2, [r4, #32]
   13730:	add	r0, sp, #12
   13734:	adds	r2, r2, #1
   13738:	adc	r3, r3, #0
   1373c:	strd	r2, [r4, #32]
   13740:	bl	18220 <next@@Base>
   13744:	ldrd	r2, [r4, #40]	; 0x28
   13748:	adds	r2, r2, #1
   1374c:	adc	r3, r3, #0
   13750:	strd	r2, [r4, #40]	; 0x28
   13754:	str	r5, [sp]
   13758:	mov	r3, #214	; 0xd6
   1375c:	mov	r2, #0
   13760:	ldr	r1, [r0]
   13764:	mov	r0, #3
   13768:	bl	15750 <UnityAssertEqualNumber@@Base>
   1376c:	ldrd	r2, [r4, #48]	; 0x30
   13770:	add	r0, sp, #12
   13774:	adds	r2, r2, #1
   13778:	adc	r3, r3, #0
   1377c:	strd	r2, [r4, #48]	; 0x30
   13780:	bl	18220 <next@@Base>
   13784:	ldrd	r2, [r4, #56]	; 0x38
   13788:	adds	r2, r2, #1
   1378c:	adc	r3, r3, #0
   13790:	strd	r2, [r4, #56]	; 0x38
   13794:	str	r5, [sp]
   13798:	mov	r3, #216	; 0xd8
   1379c:	mov	r2, #0
   137a0:	ldr	r1, [r0]
   137a4:	mov	r0, #4
   137a8:	bl	15750 <UnityAssertEqualNumber@@Base>
   137ac:	ldrd	r2, [r4, #64]	; 0x40
   137b0:	add	r0, sp, #12
   137b4:	adds	r2, r2, #1
   137b8:	adc	r3, r3, #0
   137bc:	strd	r2, [r4, #64]	; 0x40
   137c0:	bl	18220 <next@@Base>
   137c4:	ldrd	r2, [r4, #72]	; 0x48
   137c8:	adds	r2, r2, #1
   137cc:	adc	r3, r3, #0
   137d0:	strd	r2, [r4, #72]	; 0x48
   137d4:	str	r5, [sp]
   137d8:	mov	r3, #218	; 0xda
   137dc:	mov	r2, #0
   137e0:	ldr	r1, [r0]
   137e4:	mov	r0, #5
   137e8:	bl	15750 <UnityAssertEqualNumber@@Base>
   137ec:	ldrd	r2, [r4, #80]	; 0x50
   137f0:	add	r0, sp, #12
   137f4:	adds	r2, r2, #1
   137f8:	adc	r3, r3, #0
   137fc:	strd	r2, [r4, #80]	; 0x50
   13800:	bl	18220 <next@@Base>
   13804:	ldrd	r2, [r4, #88]	; 0x58
   13808:	adds	r2, r2, #1
   1380c:	adc	r3, r3, #0
   13810:	strd	r2, [r4, #88]	; 0x58
   13814:	str	r5, [sp]
   13818:	mov	r3, #220	; 0xdc
   1381c:	mov	r2, #0
   13820:	ldr	r1, [r0]
   13824:	mov	r0, #10
   13828:	bl	15750 <UnityAssertEqualNumber@@Base>
   1382c:	ldrd	r2, [r4, #96]	; 0x60
   13830:	add	r0, sp, #12
   13834:	adds	r2, r2, #1
   13838:	adc	r3, r3, #0
   1383c:	strd	r2, [r4, #96]	; 0x60
   13840:	bl	18220 <next@@Base>
   13844:	ldrd	r2, [r4, #104]	; 0x68
   13848:	adds	r2, r2, #1
   1384c:	adc	r3, r3, #0
   13850:	strd	r2, [r4, #104]	; 0x68
   13854:	str	r5, [sp]
   13858:	mov	r3, #222	; 0xde
   1385c:	mov	r2, #0
   13860:	ldr	r1, [r0]
   13864:	mov	r0, #3
   13868:	bl	15750 <UnityAssertEqualNumber@@Base>
   1386c:	ldrd	r2, [r4, #112]	; 0x70
   13870:	add	r0, sp, #12
   13874:	adds	r2, r2, #1
   13878:	adc	r3, r3, #0
   1387c:	strd	r2, [r4, #112]	; 0x70
   13880:	bl	18220 <next@@Base>
   13884:	ldrd	r2, [r4, #120]	; 0x78
   13888:	adds	r2, r2, #1
   1388c:	adc	r3, r3, #0
   13890:	strd	r2, [r4, #120]	; 0x78
   13894:	str	r5, [sp]
   13898:	mov	r3, #224	; 0xe0
   1389c:	mov	r2, #0
   138a0:	ldr	r1, [r0]
   138a4:	mov	r0, #1
   138a8:	bl	15750 <UnityAssertEqualNumber@@Base>
   138ac:	ldrd	r2, [r4, #128]	; 0x80
   138b0:	add	r0, sp, #12
   138b4:	adds	r2, r2, #1
   138b8:	adc	r3, r3, #0
   138bc:	strd	r2, [r4, #128]	; 0x80
   138c0:	bl	18220 <next@@Base>
   138c4:	ldrd	r2, [r4, #136]	; 0x88
   138c8:	adds	r2, r2, #1
   138cc:	adc	r3, r3, #0
   138d0:	strd	r2, [r4, #136]	; 0x88
   138d4:	str	r5, [sp]
   138d8:	mov	r3, #226	; 0xe2
   138dc:	mov	r2, #0
   138e0:	ldr	r1, [r0]
   138e4:	mov	r0, #12
   138e8:	bl	15750 <UnityAssertEqualNumber@@Base>
   138ec:	ldrd	r2, [r4, #144]	; 0x90
   138f0:	add	r0, sp, #12
   138f4:	adds	r2, r2, #1
   138f8:	adc	r3, r3, #0
   138fc:	strd	r2, [r4, #144]	; 0x90
   13900:	bl	18220 <next@@Base>
   13904:	ldrd	r2, [r4, #152]	; 0x98
   13908:	adds	r2, r2, #1
   1390c:	adc	r3, r3, #0
   13910:	strd	r2, [r4, #152]	; 0x98
   13914:	str	r5, [sp]
   13918:	mov	r3, #228	; 0xe4
   1391c:	mov	r2, #0
   13920:	ldr	r1, [r0]
   13924:	mov	r0, #1
   13928:	bl	15750 <UnityAssertEqualNumber@@Base>
   1392c:	ldrd	r2, [r4, #160]	; 0xa0
   13930:	add	r0, sp, #12
   13934:	adds	r2, r2, #1
   13938:	adc	r3, r3, #0
   1393c:	strd	r2, [r4, #160]	; 0xa0
   13940:	bl	18220 <next@@Base>
   13944:	ldrd	r2, [r4, #168]	; 0xa8
   13948:	adds	r2, r2, #1
   1394c:	adc	r3, r3, #0
   13950:	strd	r2, [r4, #168]	; 0xa8
   13954:	str	r5, [sp]
   13958:	mov	r3, #230	; 0xe6
   1395c:	mov	r2, #0
   13960:	ldr	r1, [r0]
   13964:	mov	r0, #4
   13968:	bl	15750 <UnityAssertEqualNumber@@Base>
   1396c:	ldrd	r2, [r4, #176]	; 0xb0
   13970:	add	r0, sp, #12
   13974:	adds	r2, r2, #1
   13978:	adc	r3, r3, #0
   1397c:	strd	r2, [r4, #176]	; 0xb0
   13980:	bl	18220 <next@@Base>
   13984:	ldrd	r2, [r4, #184]	; 0xb8
   13988:	adds	r2, r2, #1
   1398c:	adc	r3, r3, #0
   13990:	strd	r2, [r4, #184]	; 0xb8
   13994:	str	r5, [sp]
   13998:	mov	r3, #232	; 0xe8
   1399c:	mov	r2, #0
   139a0:	ldr	r1, [r0]
   139a4:	mov	r0, #5
   139a8:	bl	15750 <UnityAssertEqualNumber@@Base>
   139ac:	ldrd	r2, [r4, #192]	; 0xc0
   139b0:	add	r0, sp, #12
   139b4:	adds	r2, r2, #1
   139b8:	adc	r3, r3, #0
   139bc:	strd	r2, [r4, #192]	; 0xc0
   139c0:	bl	18220 <next@@Base>
   139c4:	ldrd	r2, [r4, #200]	; 0xc8
   139c8:	adds	r2, r2, #1
   139cc:	adc	r3, r3, #0
   139d0:	strd	r2, [r4, #200]	; 0xc8
   139d4:	str	r5, [sp]
   139d8:	mov	r3, #234	; 0xea
   139dc:	mov	r2, #0
   139e0:	ldr	r1, [r0]
   139e4:	mov	r0, #7
   139e8:	bl	15750 <UnityAssertEqualNumber@@Base>
   139ec:	ldrd	r2, [r4, #208]	; 0xd0
   139f0:	add	r0, sp, #12
   139f4:	adds	r2, r2, #1
   139f8:	adc	r3, r3, #0
   139fc:	strd	r2, [r4, #208]	; 0xd0
   13a00:	bl	18220 <next@@Base>
   13a04:	ldrd	r2, [r4, #216]	; 0xd8
   13a08:	adds	r2, r2, #1
   13a0c:	adc	r3, r3, #0
   13a10:	strd	r2, [r4, #216]	; 0xd8
   13a14:	str	r5, [sp]
   13a18:	mov	r3, #236	; 0xec
   13a1c:	mov	r2, #0
   13a20:	ldr	r1, [r0]
   13a24:	mov	r0, #1
   13a28:	bl	15750 <UnityAssertEqualNumber@@Base>
   13a2c:	ldrd	r2, [r4, #224]	; 0xe0
   13a30:	add	r0, sp, #12
   13a34:	adds	r2, r2, #1
   13a38:	adc	r3, r3, #0
   13a3c:	strd	r2, [r4, #224]	; 0xe0
   13a40:	bl	18220 <next@@Base>
   13a44:	ldrd	r2, [r4, #232]	; 0xe8
   13a48:	adds	r2, r2, #1
   13a4c:	adc	r3, r3, #0
   13a50:	strd	r2, [r4, #232]	; 0xe8
   13a54:	str	r5, [sp]
   13a58:	mov	r3, #238	; 0xee
   13a5c:	mov	r2, #0
   13a60:	ldr	r1, [r0]
   13a64:	mov	r0, #8
   13a68:	bl	15750 <UnityAssertEqualNumber@@Base>
   13a6c:	ldrd	r2, [r4, #240]	; 0xf0
   13a70:	add	r0, sp, #12
   13a74:	adds	r2, r2, #1
   13a78:	adc	r3, r3, #0
   13a7c:	strd	r2, [r4, #240]	; 0xf0
   13a80:	bl	18220 <next@@Base>
   13a84:	ldrd	r2, [r4, #248]	; 0xf8
   13a88:	adds	r2, r2, #1
   13a8c:	adc	r3, r3, #0
   13a90:	strd	r2, [r4, #248]	; 0xf8
   13a94:	str	r5, [sp]
   13a98:	mov	r3, #240	; 0xf0
   13a9c:	mov	r2, #0
   13aa0:	add	r4, r6, #1120	; 0x460
   13aa4:	ldr	r1, [r0]
   13aa8:	mov	r0, #6
   13aac:	bl	15750 <UnityAssertEqualNumber@@Base>
   13ab0:	add	r1, r6, #1104	; 0x450
   13ab4:	add	r0, sp, #12
   13ab8:	ldrd	r2, [r1]
   13abc:	adds	r2, r2, #1
   13ac0:	adc	r3, r3, #0
   13ac4:	strd	r2, [r1]
   13ac8:	bl	18220 <next@@Base>
   13acc:	ldrd	r2, [r4, #-8]
   13ad0:	adds	r2, r2, #1
   13ad4:	adc	r3, r3, #0
   13ad8:	strd	r2, [r4, #-8]
   13adc:	str	r5, [sp]
   13ae0:	mov	r3, #242	; 0xf2
   13ae4:	mov	r2, #0
   13ae8:	ldr	r1, [r0]
   13aec:	mov	r0, #11
   13af0:	bl	15750 <UnityAssertEqualNumber@@Base>
   13af4:	ldrd	r2, [r4]
   13af8:	add	r0, sp, #12
   13afc:	adds	r2, r2, #1
   13b00:	adc	r3, r3, #0
   13b04:	strd	r2, [r4]
   13b08:	bl	18220 <next@@Base>
   13b0c:	add	r4, r6, #1136	; 0x470
   13b10:	ldrd	r2, [r4, #-8]
   13b14:	adds	r2, r2, #1
   13b18:	adc	r3, r3, #0
   13b1c:	strd	r2, [r4, #-8]
   13b20:	str	r5, [sp]
   13b24:	mov	r3, #244	; 0xf4
   13b28:	mov	r2, #0
   13b2c:	ldr	r1, [r0]
   13b30:	mov	r0, #5
   13b34:	bl	15750 <UnityAssertEqualNumber@@Base>
   13b38:	ldrd	r2, [r4]
   13b3c:	add	r0, sp, #12
   13b40:	adds	r2, r2, #1
   13b44:	adc	r3, r3, #0
   13b48:	strd	r2, [r4]
   13b4c:	bl	18220 <next@@Base>
   13b50:	add	r4, r6, #1152	; 0x480
   13b54:	ldrd	r2, [r4, #-8]
   13b58:	adds	r2, r2, #1
   13b5c:	adc	r3, r3, #0
   13b60:	strd	r2, [r4, #-8]
   13b64:	str	r5, [sp]
   13b68:	mov	r3, #246	; 0xf6
   13b6c:	mov	r2, #0
   13b70:	ldr	r1, [r0]
   13b74:	mov	r0, #7
   13b78:	bl	15750 <UnityAssertEqualNumber@@Base>
   13b7c:	ldrd	r2, [r4]
   13b80:	add	r0, sp, #12
   13b84:	adds	r2, r2, #1
   13b88:	adc	r3, r3, #0
   13b8c:	strd	r2, [r4]
   13b90:	bl	18220 <next@@Base>
   13b94:	add	r4, r6, #1168	; 0x490
   13b98:	ldrd	r2, [r4, #-8]
   13b9c:	adds	r2, r2, #1
   13ba0:	adc	r3, r3, #0
   13ba4:	strd	r2, [r4, #-8]
   13ba8:	str	r5, [sp]
   13bac:	mov	r3, #248	; 0xf8
   13bb0:	mov	r2, #0
   13bb4:	ldr	r1, [r0]
   13bb8:	mov	r0, #1
   13bbc:	bl	15750 <UnityAssertEqualNumber@@Base>
   13bc0:	ldrd	r2, [r4]
   13bc4:	add	r0, sp, #12
   13bc8:	adds	r2, r2, #1
   13bcc:	adc	r3, r3, #0
   13bd0:	strd	r2, [r4]
   13bd4:	bl	18220 <next@@Base>
   13bd8:	add	r4, r6, #1184	; 0x4a0
   13bdc:	ldrd	r2, [r4, #-8]
   13be0:	adds	r2, r2, #1
   13be4:	adc	r3, r3, #0
   13be8:	strd	r2, [r4, #-8]
   13bec:	str	r5, [sp]
   13bf0:	mov	r3, #250	; 0xfa
   13bf4:	mov	r2, #0
   13bf8:	ldr	r1, [r0]
   13bfc:	mov	r0, #8
   13c00:	bl	15750 <UnityAssertEqualNumber@@Base>
   13c04:	ldrd	r2, [r4]
   13c08:	add	r0, sp, #12
   13c0c:	adds	r2, r2, #1
   13c10:	adc	r3, r3, #0
   13c14:	strd	r2, [r4]
   13c18:	bl	18220 <next@@Base>
   13c1c:	add	r4, r6, #1200	; 0x4b0
   13c20:	ldrd	r2, [r4, #-8]
   13c24:	adds	r2, r2, #1
   13c28:	adc	r3, r3, #0
   13c2c:	strd	r2, [r4, #-8]
   13c30:	str	r5, [sp]
   13c34:	mov	r3, #252	; 0xfc
   13c38:	mov	r2, #0
   13c3c:	ldr	r1, [r0]
   13c40:	mov	r0, #6
   13c44:	bl	15750 <UnityAssertEqualNumber@@Base>
   13c48:	ldrd	r2, [r4]
   13c4c:	add	r0, sp, #12
   13c50:	adds	r2, r2, #1
   13c54:	adc	r3, r3, #0
   13c58:	strd	r2, [r4]
   13c5c:	bl	18220 <next@@Base>
   13c60:	add	r4, r6, #1216	; 0x4c0
   13c64:	ldrd	r2, [r4, #-8]
   13c68:	adds	r2, r2, #1
   13c6c:	adc	r3, r3, #0
   13c70:	strd	r2, [r4, #-8]
   13c74:	str	r5, [sp]
   13c78:	mov	r3, #254	; 0xfe
   13c7c:	mov	r2, #0
   13c80:	ldr	r1, [r0]
   13c84:	mov	r0, #7
   13c88:	bl	15750 <UnityAssertEqualNumber@@Base>
   13c8c:	ldrd	r2, [r4]
   13c90:	add	r0, sp, #12
   13c94:	adds	r2, r2, #1
   13c98:	adc	r3, r3, #0
   13c9c:	strd	r2, [r4]
   13ca0:	bl	18220 <next@@Base>
   13ca4:	add	r4, r6, #1232	; 0x4d0
   13ca8:	ldrd	r2, [r4, #-8]
   13cac:	adds	r2, r2, #1
   13cb0:	adc	r3, r3, #0
   13cb4:	strd	r2, [r4, #-8]
   13cb8:	str	r5, [sp]
   13cbc:	mov	r3, #256	; 0x100
   13cc0:	mov	r2, #0
   13cc4:	ldr	r1, [r0]
   13cc8:	mov	r0, #1
   13ccc:	bl	15750 <UnityAssertEqualNumber@@Base>
   13cd0:	ldrd	r2, [r4]
   13cd4:	add	r0, sp, #12
   13cd8:	adds	r2, r2, #1
   13cdc:	adc	r3, r3, #0
   13ce0:	strd	r2, [r4]
   13ce4:	bl	18220 <next@@Base>
   13ce8:	add	r4, r6, #1248	; 0x4e0
   13cec:	ldrd	r2, [r4, #-8]
   13cf0:	adds	r2, r2, #1
   13cf4:	adc	r3, r3, #0
   13cf8:	strd	r2, [r4, #-8]
   13cfc:	str	r5, [sp]
   13d00:	ldr	r3, [pc, #208]	; 13dd8 <if_with_else@@Base+0x75c>
   13d04:	mov	r2, #0
   13d08:	ldr	r1, [r0]
   13d0c:	mov	r0, #8
   13d10:	bl	15750 <UnityAssertEqualNumber@@Base>
   13d14:	ldrd	r2, [r4]
   13d18:	add	r0, sp, #12
   13d1c:	adds	r2, r2, #1
   13d20:	adc	r3, r3, #0
   13d24:	strd	r2, [r4]
   13d28:	bl	18220 <next@@Base>
   13d2c:	add	r4, r6, #1264	; 0x4f0
   13d30:	ldrd	r2, [r4, #-8]
   13d34:	adds	r2, r2, #1
   13d38:	adc	r3, r3, #0
   13d3c:	strd	r2, [r4, #-8]
   13d40:	str	r5, [sp]
   13d44:	mov	r3, #260	; 0x104
   13d48:	mov	r2, #0
   13d4c:	ldr	r1, [r0]
   13d50:	mov	r0, #6
   13d54:	bl	15750 <UnityAssertEqualNumber@@Base>
   13d58:	ldrd	r2, [r4]
   13d5c:	add	r0, sp, #12
   13d60:	adds	r2, r2, #1
   13d64:	adc	r3, r3, #0
   13d68:	strd	r2, [r4]
   13d6c:	bl	18220 <next@@Base>
   13d70:	add	r4, r6, #1280	; 0x500
   13d74:	add	r6, r6, #1296	; 0x510
   13d78:	ldrd	r2, [r4, #-8]
   13d7c:	adds	r2, r2, #1
   13d80:	adc	r3, r3, #0
   13d84:	strd	r2, [r4, #-8]
   13d88:	str	r5, [sp]
   13d8c:	ldr	r3, [pc, #72]	; 13ddc <if_with_else@@Base+0x760>
   13d90:	mov	r2, #0
   13d94:	ldr	r1, [r0]
   13d98:	mov	r0, #9
   13d9c:	bl	15750 <UnityAssertEqualNumber@@Base>
   13da0:	ldrd	r2, [r4]
   13da4:	add	r0, sp, #12
   13da8:	adds	r2, r2, #1
   13dac:	adc	r3, r3, #0
   13db0:	strd	r2, [r4]
   13db4:	bl	180a8 <destroy_lexer@@Base>
   13db8:	ldrd	r2, [r6, #-8]
   13dbc:	adds	r2, r2, #1
   13dc0:	adc	r3, r3, #0
   13dc4:	strd	r2, [r6, #-8]
   13dc8:	add	sp, sp, #24
   13dcc:	pop	{r4, r5, r6, pc}
   13dd0:	andeq	ip, r2, r8, asr #24
   13dd4:			; <UNDEFINED> instruction: 0x0001b3bd
   13dd8:	andeq	r0, r0, r2, lsl #2
   13ddc:	andeq	r0, r0, r6, lsl #2

00013de0 <if_without_else@@Base>:
   13de0:	push	{r4, r5, r6, lr}
   13de4:	sub	sp, sp, #24
   13de8:	ldr	r6, [pc, #1452]	; 1439c <if_without_else@@Base+0x5bc>
   13dec:	ldr	r1, [pc, #1452]	; 143a0 <if_without_else@@Base+0x5c0>
   13df0:	add	r4, r6, #1296	; 0x510
   13df4:	add	r0, sp, #12
   13df8:	ldrd	r2, [r4]
   13dfc:	mov	r5, #148	; 0x94
   13e00:	adds	r2, r2, #1
   13e04:	adc	r3, r3, #0
   13e08:	strd	r2, [r4]
   13e0c:	bl	1807c <init_lexer@@Base>
   13e10:	ldrd	r2, [r4, #8]
   13e14:	add	r0, sp, #12
   13e18:	adds	r2, r2, #1
   13e1c:	adc	r3, r3, #0
   13e20:	strd	r2, [r4, #8]
   13e24:	bl	18220 <next@@Base>
   13e28:	ldrd	r2, [r4, #16]
   13e2c:	adds	r2, r2, #1
   13e30:	adc	r3, r3, #0
   13e34:	strd	r2, [r4, #16]
   13e38:	mov	r2, #0
   13e3c:	str	r5, [sp]
   13e40:	mov	r3, #140	; 0x8c
   13e44:	ldr	r1, [r0]
   13e48:	mov	r0, r2
   13e4c:	bl	15750 <UnityAssertEqualNumber@@Base>
   13e50:	ldrd	r2, [r4, #24]
   13e54:	add	r0, sp, #12
   13e58:	adds	r2, r2, #1
   13e5c:	adc	r3, r3, #0
   13e60:	strd	r2, [r4, #24]
   13e64:	bl	18220 <next@@Base>
   13e68:	ldrd	r2, [r4, #32]
   13e6c:	adds	r2, r2, #1
   13e70:	adc	r3, r3, #0
   13e74:	strd	r2, [r4, #32]
   13e78:	str	r5, [sp]
   13e7c:	mov	r3, #142	; 0x8e
   13e80:	mov	r2, #0
   13e84:	ldr	r1, [r0]
   13e88:	mov	r0, #2
   13e8c:	bl	15750 <UnityAssertEqualNumber@@Base>
   13e90:	ldrd	r2, [r4, #40]	; 0x28
   13e94:	add	r0, sp, #12
   13e98:	adds	r2, r2, #1
   13e9c:	adc	r3, r3, #0
   13ea0:	strd	r2, [r4, #40]	; 0x28
   13ea4:	bl	18220 <next@@Base>
   13ea8:	ldrd	r2, [r4, #48]	; 0x30
   13eac:	adds	r2, r2, #1
   13eb0:	adc	r3, r3, #0
   13eb4:	strd	r2, [r4, #48]	; 0x30
   13eb8:	str	r5, [sp]
   13ebc:	mov	r3, #144	; 0x90
   13ec0:	mov	r2, #0
   13ec4:	ldr	r1, [r0]
   13ec8:	mov	r0, #3
   13ecc:	bl	15750 <UnityAssertEqualNumber@@Base>
   13ed0:	ldrd	r2, [r4, #56]	; 0x38
   13ed4:	add	r0, sp, #12
   13ed8:	adds	r2, r2, #1
   13edc:	adc	r3, r3, #0
   13ee0:	strd	r2, [r4, #56]	; 0x38
   13ee4:	bl	18220 <next@@Base>
   13ee8:	ldrd	r2, [r4, #64]	; 0x40
   13eec:	adds	r2, r2, #1
   13ef0:	adc	r3, r3, #0
   13ef4:	strd	r2, [r4, #64]	; 0x40
   13ef8:	str	r5, [sp]
   13efc:	mov	r3, #146	; 0x92
   13f00:	mov	r2, #0
   13f04:	ldr	r1, [r0]
   13f08:	mov	r0, #4
   13f0c:	bl	15750 <UnityAssertEqualNumber@@Base>
   13f10:	ldrd	r2, [r4, #72]	; 0x48
   13f14:	add	r0, sp, #12
   13f18:	adds	r2, r2, #1
   13f1c:	adc	r3, r3, #0
   13f20:	strd	r2, [r4, #72]	; 0x48
   13f24:	bl	18220 <next@@Base>
   13f28:	ldrd	r2, [r4, #80]	; 0x50
   13f2c:	adds	r2, r2, #1
   13f30:	adc	r3, r3, #0
   13f34:	strd	r2, [r4, #80]	; 0x50
   13f38:	str	r5, [sp]
   13f3c:	mov	r3, r5
   13f40:	mov	r2, #0
   13f44:	ldr	r1, [r0]
   13f48:	mov	r0, #5
   13f4c:	bl	15750 <UnityAssertEqualNumber@@Base>
   13f50:	ldrd	r2, [r4, #88]	; 0x58
   13f54:	add	r0, sp, #12
   13f58:	adds	r2, r2, #1
   13f5c:	adc	r3, r3, #0
   13f60:	strd	r2, [r4, #88]	; 0x58
   13f64:	bl	18220 <next@@Base>
   13f68:	ldrd	r2, [r4, #96]	; 0x60
   13f6c:	adds	r2, r2, #1
   13f70:	adc	r3, r3, #0
   13f74:	strd	r2, [r4, #96]	; 0x60
   13f78:	str	r5, [sp]
   13f7c:	mov	r3, #150	; 0x96
   13f80:	mov	r2, #0
   13f84:	ldr	r1, [r0]
   13f88:	mov	r0, #10
   13f8c:	bl	15750 <UnityAssertEqualNumber@@Base>
   13f90:	ldrd	r2, [r4, #104]	; 0x68
   13f94:	add	r0, sp, #12
   13f98:	adds	r2, r2, #1
   13f9c:	adc	r3, r3, #0
   13fa0:	strd	r2, [r4, #104]	; 0x68
   13fa4:	bl	18220 <next@@Base>
   13fa8:	ldrd	r2, [r4, #112]	; 0x70
   13fac:	adds	r2, r2, #1
   13fb0:	adc	r3, r3, #0
   13fb4:	strd	r2, [r4, #112]	; 0x70
   13fb8:	str	r5, [sp]
   13fbc:	mov	r3, #152	; 0x98
   13fc0:	mov	r2, #0
   13fc4:	ldr	r1, [r0]
   13fc8:	mov	r0, #3
   13fcc:	bl	15750 <UnityAssertEqualNumber@@Base>
   13fd0:	ldrd	r2, [r4, #120]	; 0x78
   13fd4:	add	r0, sp, #12
   13fd8:	adds	r2, r2, #1
   13fdc:	adc	r3, r3, #0
   13fe0:	strd	r2, [r4, #120]	; 0x78
   13fe4:	bl	18220 <next@@Base>
   13fe8:	ldrd	r2, [r4, #128]	; 0x80
   13fec:	adds	r2, r2, #1
   13ff0:	adc	r3, r3, #0
   13ff4:	strd	r2, [r4, #128]	; 0x80
   13ff8:	str	r5, [sp]
   13ffc:	mov	r3, #154	; 0x9a
   14000:	mov	r2, #0
   14004:	ldr	r1, [r0]
   14008:	mov	r0, #1
   1400c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14010:	ldrd	r2, [r4, #136]	; 0x88
   14014:	add	r0, sp, #12
   14018:	adds	r2, r2, #1
   1401c:	adc	r3, r3, #0
   14020:	strd	r2, [r4, #136]	; 0x88
   14024:	bl	18220 <next@@Base>
   14028:	ldrd	r2, [r4, #144]	; 0x90
   1402c:	adds	r2, r2, #1
   14030:	adc	r3, r3, #0
   14034:	strd	r2, [r4, #144]	; 0x90
   14038:	str	r5, [sp]
   1403c:	mov	r3, #156	; 0x9c
   14040:	mov	r2, #0
   14044:	ldr	r1, [r0]
   14048:	mov	r0, #12
   1404c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14050:	ldrd	r2, [r4, #152]	; 0x98
   14054:	add	r0, sp, #12
   14058:	adds	r2, r2, #1
   1405c:	adc	r3, r3, #0
   14060:	strd	r2, [r4, #152]	; 0x98
   14064:	bl	18220 <next@@Base>
   14068:	ldrd	r2, [r4, #160]	; 0xa0
   1406c:	adds	r2, r2, #1
   14070:	adc	r3, r3, #0
   14074:	strd	r2, [r4, #160]	; 0xa0
   14078:	str	r5, [sp]
   1407c:	mov	r3, #158	; 0x9e
   14080:	mov	r2, #0
   14084:	ldr	r1, [r0]
   14088:	mov	r0, #1
   1408c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14090:	ldrd	r2, [r4, #168]	; 0xa8
   14094:	add	r0, sp, #12
   14098:	adds	r2, r2, #1
   1409c:	adc	r3, r3, #0
   140a0:	strd	r2, [r4, #168]	; 0xa8
   140a4:	bl	18220 <next@@Base>
   140a8:	ldrd	r2, [r4, #176]	; 0xb0
   140ac:	adds	r2, r2, #1
   140b0:	adc	r3, r3, #0
   140b4:	strd	r2, [r4, #176]	; 0xb0
   140b8:	str	r5, [sp]
   140bc:	mov	r3, #160	; 0xa0
   140c0:	mov	r2, #0
   140c4:	ldr	r1, [r0]
   140c8:	mov	r0, #4
   140cc:	bl	15750 <UnityAssertEqualNumber@@Base>
   140d0:	ldrd	r2, [r4, #184]	; 0xb8
   140d4:	add	r0, sp, #12
   140d8:	adds	r2, r2, #1
   140dc:	adc	r3, r3, #0
   140e0:	strd	r2, [r4, #184]	; 0xb8
   140e4:	bl	18220 <next@@Base>
   140e8:	ldrd	r2, [r4, #192]	; 0xc0
   140ec:	adds	r2, r2, #1
   140f0:	adc	r3, r3, #0
   140f4:	strd	r2, [r4, #192]	; 0xc0
   140f8:	str	r5, [sp]
   140fc:	mov	r3, #162	; 0xa2
   14100:	mov	r2, #0
   14104:	ldr	r1, [r0]
   14108:	mov	r0, #5
   1410c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14110:	ldrd	r2, [r4, #200]	; 0xc8
   14114:	add	r0, sp, #12
   14118:	adds	r2, r2, #1
   1411c:	adc	r3, r3, #0
   14120:	strd	r2, [r4, #200]	; 0xc8
   14124:	bl	18220 <next@@Base>
   14128:	ldrd	r2, [r4, #208]	; 0xd0
   1412c:	adds	r2, r2, #1
   14130:	adc	r3, r3, #0
   14134:	strd	r2, [r4, #208]	; 0xd0
   14138:	str	r5, [sp]
   1413c:	mov	r3, #164	; 0xa4
   14140:	mov	r2, #0
   14144:	ldr	r1, [r0]
   14148:	mov	r0, #7
   1414c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14150:	ldrd	r2, [r4, #216]	; 0xd8
   14154:	add	r0, sp, #12
   14158:	adds	r2, r2, #1
   1415c:	adc	r3, r3, #0
   14160:	strd	r2, [r4, #216]	; 0xd8
   14164:	bl	18220 <next@@Base>
   14168:	ldrd	r2, [r4, #224]	; 0xe0
   1416c:	adds	r2, r2, #1
   14170:	adc	r3, r3, #0
   14174:	strd	r2, [r4, #224]	; 0xe0
   14178:	str	r5, [sp]
   1417c:	mov	r3, #166	; 0xa6
   14180:	mov	r2, #0
   14184:	ldr	r1, [r0]
   14188:	mov	r0, #1
   1418c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14190:	ldrd	r2, [r4, #232]	; 0xe8
   14194:	add	r0, sp, #12
   14198:	adds	r2, r2, #1
   1419c:	adc	r3, r3, #0
   141a0:	strd	r2, [r4, #232]	; 0xe8
   141a4:	bl	18220 <next@@Base>
   141a8:	ldrd	r2, [r4, #240]	; 0xf0
   141ac:	adds	r2, r2, #1
   141b0:	adc	r3, r3, #0
   141b4:	strd	r2, [r4, #240]	; 0xf0
   141b8:	str	r5, [sp]
   141bc:	mov	r3, #168	; 0xa8
   141c0:	mov	r2, #0
   141c4:	ldr	r1, [r0]
   141c8:	mov	r0, #8
   141cc:	bl	15750 <UnityAssertEqualNumber@@Base>
   141d0:	ldrd	r2, [r4, #248]	; 0xf8
   141d4:	add	r0, sp, #12
   141d8:	adds	r2, r2, #1
   141dc:	adc	r3, r3, #0
   141e0:	strd	r2, [r4, #248]	; 0xf8
   141e4:	bl	18220 <next@@Base>
   141e8:	add	r1, r6, #1552	; 0x610
   141ec:	add	r4, r6, #1568	; 0x620
   141f0:	ldrd	r2, [r1]
   141f4:	adds	r2, r2, #1
   141f8:	adc	r3, r3, #0
   141fc:	strd	r2, [r1]
   14200:	str	r5, [sp]
   14204:	mov	r3, #170	; 0xaa
   14208:	mov	r2, #0
   1420c:	ldr	r1, [r0]
   14210:	mov	r0, #6
   14214:	bl	15750 <UnityAssertEqualNumber@@Base>
   14218:	ldrd	r2, [r4, #-8]
   1421c:	add	r0, sp, #12
   14220:	adds	r2, r2, #1
   14224:	adc	r3, r3, #0
   14228:	strd	r2, [r4, #-8]
   1422c:	bl	18220 <next@@Base>
   14230:	ldrd	r2, [r4]
   14234:	adds	r2, r2, #1
   14238:	adc	r3, r3, #0
   1423c:	strd	r2, [r4]
   14240:	add	r4, r6, #1584	; 0x630
   14244:	str	r5, [sp]
   14248:	mov	r3, #172	; 0xac
   1424c:	mov	r2, #0
   14250:	ldr	r1, [r0]
   14254:	mov	r0, #7
   14258:	bl	15750 <UnityAssertEqualNumber@@Base>
   1425c:	ldrd	r2, [r4, #-8]
   14260:	add	r0, sp, #12
   14264:	adds	r2, r2, #1
   14268:	adc	r3, r3, #0
   1426c:	strd	r2, [r4, #-8]
   14270:	bl	18220 <next@@Base>
   14274:	ldrd	r2, [r4]
   14278:	adds	r2, r2, #1
   1427c:	adc	r3, r3, #0
   14280:	strd	r2, [r4]
   14284:	add	r4, r6, #1600	; 0x640
   14288:	str	r5, [sp]
   1428c:	mov	r3, #174	; 0xae
   14290:	mov	r2, #0
   14294:	ldr	r1, [r0]
   14298:	mov	r0, #1
   1429c:	bl	15750 <UnityAssertEqualNumber@@Base>
   142a0:	ldrd	r2, [r4, #-8]
   142a4:	add	r0, sp, #12
   142a8:	adds	r2, r2, #1
   142ac:	adc	r3, r3, #0
   142b0:	strd	r2, [r4, #-8]
   142b4:	bl	18220 <next@@Base>
   142b8:	ldrd	r2, [r4]
   142bc:	adds	r2, r2, #1
   142c0:	adc	r3, r3, #0
   142c4:	strd	r2, [r4]
   142c8:	add	r4, r6, #1616	; 0x650
   142cc:	str	r5, [sp]
   142d0:	mov	r3, #176	; 0xb0
   142d4:	mov	r2, #0
   142d8:	ldr	r1, [r0]
   142dc:	mov	r0, #8
   142e0:	bl	15750 <UnityAssertEqualNumber@@Base>
   142e4:	ldrd	r2, [r4, #-8]
   142e8:	add	r0, sp, #12
   142ec:	adds	r2, r2, #1
   142f0:	adc	r3, r3, #0
   142f4:	strd	r2, [r4, #-8]
   142f8:	bl	18220 <next@@Base>
   142fc:	ldrd	r2, [r4]
   14300:	adds	r2, r2, #1
   14304:	adc	r3, r3, #0
   14308:	strd	r2, [r4]
   1430c:	add	r4, r6, #1632	; 0x660
   14310:	str	r5, [sp]
   14314:	mov	r3, #178	; 0xb2
   14318:	mov	r2, #0
   1431c:	add	r6, r6, #1648	; 0x670
   14320:	ldr	r1, [r0]
   14324:	mov	r0, #6
   14328:	bl	15750 <UnityAssertEqualNumber@@Base>
   1432c:	ldrd	r2, [r4, #-8]
   14330:	add	r0, sp, #12
   14334:	adds	r2, r2, #1
   14338:	adc	r3, r3, #0
   1433c:	strd	r2, [r4, #-8]
   14340:	bl	18220 <next@@Base>
   14344:	ldrd	r2, [r4]
   14348:	adds	r2, r2, #1
   1434c:	adc	r3, r3, #0
   14350:	strd	r2, [r4]
   14354:	str	r5, [sp]
   14358:	mov	r3, #180	; 0xb4
   1435c:	mov	r2, #0
   14360:	ldr	r1, [r0]
   14364:	mov	r0, #9
   14368:	bl	15750 <UnityAssertEqualNumber@@Base>
   1436c:	ldrd	r2, [r6, #-8]
   14370:	add	r0, sp, #12
   14374:	adds	r2, r2, #1
   14378:	adc	r3, r3, #0
   1437c:	strd	r2, [r6, #-8]
   14380:	bl	180a8 <destroy_lexer@@Base>
   14384:	ldrd	r2, [r6]
   14388:	adds	r2, r2, #1
   1438c:	adc	r3, r3, #0
   14390:	strd	r2, [r6]
   14394:	add	sp, sp, #24
   14398:	pop	{r4, r5, r6, pc}
   1439c:	andeq	ip, r2, r8, asr #24
   143a0:	andeq	fp, r1, lr, lsl #8

000143a4 <simple_file_only_main@@Base>:
   143a4:	push	{r4, r5, lr}
   143a8:	sub	sp, sp, #28
   143ac:	ldr	r4, [pc, #716]	; 14680 <simple_file_only_main@@Base+0x2dc>
   143b0:	ldr	r1, [pc, #716]	; 14684 <simple_file_only_main@@Base+0x2e0>
   143b4:	add	r0, sp, #12
   143b8:	ldrd	r2, [r4, #-8]
   143bc:	mov	r5, #148	; 0x94
   143c0:	adds	r2, r2, #1
   143c4:	adc	r3, r3, #0
   143c8:	strd	r2, [r4, #-8]
   143cc:	bl	1807c <init_lexer@@Base>
   143d0:	ldrd	r2, [r4]
   143d4:	add	r0, sp, #12
   143d8:	adds	r2, r2, #1
   143dc:	adc	r3, r3, #0
   143e0:	strd	r2, [r4]
   143e4:	bl	18220 <next@@Base>
   143e8:	ldrd	r2, [r4, #8]
   143ec:	str	r5, [sp]
   143f0:	adds	r2, r2, #1
   143f4:	adc	r3, r3, #0
   143f8:	strd	r2, [r4, #8]
   143fc:	mov	r2, #0
   14400:	mov	r3, #23
   14404:	ldr	r1, [r0]
   14408:	mov	r0, r2
   1440c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14410:	ldrd	r2, [r4, #16]
   14414:	add	r0, sp, #12
   14418:	adds	r2, r2, #1
   1441c:	adc	r3, r3, #0
   14420:	strd	r2, [r4, #16]
   14424:	bl	18220 <next@@Base>
   14428:	ldrd	r2, [r4, #24]
   1442c:	str	r5, [sp]
   14430:	adds	r2, r2, #1
   14434:	adc	r3, r3, #0
   14438:	strd	r2, [r4, #24]
   1443c:	mov	r3, #25
   14440:	mov	r2, #0
   14444:	ldr	r1, [r0]
   14448:	mov	r0, #2
   1444c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14450:	ldrd	r2, [r4, #32]
   14454:	add	r0, sp, #12
   14458:	adds	r2, r2, #1
   1445c:	adc	r3, r3, #0
   14460:	strd	r2, [r4, #32]
   14464:	bl	18220 <next@@Base>
   14468:	ldrd	r2, [r4, #40]	; 0x28
   1446c:	str	r5, [sp]
   14470:	adds	r2, r2, #1
   14474:	adc	r3, r3, #0
   14478:	strd	r2, [r4, #40]	; 0x28
   1447c:	mov	r3, #27
   14480:	mov	r2, #0
   14484:	ldr	r1, [r0]
   14488:	mov	r0, #3
   1448c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14490:	ldrd	r2, [r4, #48]	; 0x30
   14494:	add	r0, sp, #12
   14498:	adds	r2, r2, #1
   1449c:	adc	r3, r3, #0
   144a0:	strd	r2, [r4, #48]	; 0x30
   144a4:	bl	18220 <next@@Base>
   144a8:	ldrd	r2, [r4, #56]	; 0x38
   144ac:	str	r5, [sp]
   144b0:	adds	r2, r2, #1
   144b4:	adc	r3, r3, #0
   144b8:	strd	r2, [r4, #56]	; 0x38
   144bc:	mov	r3, #29
   144c0:	mov	r2, #0
   144c4:	ldr	r1, [r0]
   144c8:	mov	r0, #4
   144cc:	bl	15750 <UnityAssertEqualNumber@@Base>
   144d0:	ldrd	r2, [r4, #64]	; 0x40
   144d4:	add	r0, sp, #12
   144d8:	adds	r2, r2, #1
   144dc:	adc	r3, r3, #0
   144e0:	strd	r2, [r4, #64]	; 0x40
   144e4:	bl	18220 <next@@Base>
   144e8:	ldrd	r2, [r4, #72]	; 0x48
   144ec:	str	r5, [sp]
   144f0:	adds	r2, r2, #1
   144f4:	adc	r3, r3, #0
   144f8:	strd	r2, [r4, #72]	; 0x48
   144fc:	mov	r3, #31
   14500:	mov	r2, #0
   14504:	ldr	r1, [r0]
   14508:	mov	r0, #5
   1450c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14510:	ldrd	r2, [r4, #80]	; 0x50
   14514:	add	r0, sp, #12
   14518:	adds	r2, r2, #1
   1451c:	adc	r3, r3, #0
   14520:	strd	r2, [r4, #80]	; 0x50
   14524:	bl	18220 <next@@Base>
   14528:	ldrd	r2, [r4, #88]	; 0x58
   1452c:	str	r5, [sp]
   14530:	adds	r2, r2, #1
   14534:	adc	r3, r3, #0
   14538:	strd	r2, [r4, #88]	; 0x58
   1453c:	mov	r3, #33	; 0x21
   14540:	mov	r2, #0
   14544:	ldr	r1, [r0]
   14548:	mov	r0, #7
   1454c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14550:	ldrd	r2, [r4, #96]	; 0x60
   14554:	add	r0, sp, #12
   14558:	adds	r2, r2, #1
   1455c:	adc	r3, r3, #0
   14560:	strd	r2, [r4, #96]	; 0x60
   14564:	bl	18220 <next@@Base>
   14568:	ldrd	r2, [r4, #104]	; 0x68
   1456c:	str	r5, [sp]
   14570:	adds	r2, r2, #1
   14574:	adc	r3, r3, #0
   14578:	strd	r2, [r4, #104]	; 0x68
   1457c:	mov	r3, #35	; 0x23
   14580:	mov	r2, #0
   14584:	ldr	r1, [r0]
   14588:	mov	r0, #1
   1458c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14590:	ldrd	r2, [r4, #112]	; 0x70
   14594:	add	r0, sp, #12
   14598:	adds	r2, r2, #1
   1459c:	adc	r3, r3, #0
   145a0:	strd	r2, [r4, #112]	; 0x70
   145a4:	bl	18220 <next@@Base>
   145a8:	ldrd	r2, [r4, #120]	; 0x78
   145ac:	str	r5, [sp]
   145b0:	adds	r2, r2, #1
   145b4:	adc	r3, r3, #0
   145b8:	strd	r2, [r4, #120]	; 0x78
   145bc:	mov	r3, #37	; 0x25
   145c0:	mov	r2, #0
   145c4:	ldr	r1, [r0]
   145c8:	mov	r0, #8
   145cc:	bl	15750 <UnityAssertEqualNumber@@Base>
   145d0:	ldrd	r2, [r4, #128]	; 0x80
   145d4:	add	r0, sp, #12
   145d8:	adds	r2, r2, #1
   145dc:	adc	r3, r3, #0
   145e0:	strd	r2, [r4, #128]	; 0x80
   145e4:	bl	18220 <next@@Base>
   145e8:	ldrd	r2, [r4, #136]	; 0x88
   145ec:	str	r5, [sp]
   145f0:	adds	r2, r2, #1
   145f4:	adc	r3, r3, #0
   145f8:	strd	r2, [r4, #136]	; 0x88
   145fc:	mov	r3, #39	; 0x27
   14600:	mov	r2, #0
   14604:	ldr	r1, [r0]
   14608:	mov	r0, #6
   1460c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14610:	ldrd	r2, [r4, #144]	; 0x90
   14614:	add	r0, sp, #12
   14618:	adds	r2, r2, #1
   1461c:	adc	r3, r3, #0
   14620:	strd	r2, [r4, #144]	; 0x90
   14624:	bl	18220 <next@@Base>
   14628:	ldrd	r2, [r4, #152]	; 0x98
   1462c:	str	r5, [sp]
   14630:	adds	r2, r2, #1
   14634:	adc	r3, r3, #0
   14638:	strd	r2, [r4, #152]	; 0x98
   1463c:	mov	r3, #41	; 0x29
   14640:	mov	r2, #0
   14644:	ldr	r1, [r0]
   14648:	mov	r0, #9
   1464c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14650:	ldrd	r2, [r4, #160]	; 0xa0
   14654:	add	r0, sp, #12
   14658:	adds	r2, r2, #1
   1465c:	adc	r3, r3, #0
   14660:	strd	r2, [r4, #160]	; 0xa0
   14664:	bl	180a8 <destroy_lexer@@Base>
   14668:	ldrd	r2, [r4, #168]	; 0xa8
   1466c:	adds	r2, r2, #1
   14670:	adc	r3, r3, #0
   14674:	strd	r2, [r4, #168]	; 0xa8
   14678:	add	sp, sp, #28
   1467c:	pop	{r4, r5, pc}
   14680:	andeq	sp, r2, r8, asr #5
   14684:	andeq	fp, r1, r7, asr #8

00014688 <push_token_and_call_next@@Base>:
   14688:	push	{r4, r5, lr}
   1468c:	sub	sp, sp, #28
   14690:	ldr	r4, [pc, #188]	; 14754 <push_token_and_call_next@@Base+0xcc>
   14694:	ldr	r1, [pc, #188]	; 14758 <push_token_and_call_next@@Base+0xd0>
   14698:	add	r0, sp, #12
   1469c:	ldrd	r2, [r4]
   146a0:	adds	r2, r2, #1
   146a4:	adc	r3, r3, #0
   146a8:	strd	r2, [r4]
   146ac:	bl	1807c <init_lexer@@Base>
   146b0:	ldrd	r2, [r4, #8]
   146b4:	mov	r0, #8
   146b8:	adds	r2, r2, #1
   146bc:	adc	r3, r3, #0
   146c0:	strd	r2, [r4, #8]
   146c4:	bl	1202c <malloc@plt>
   146c8:	mov	r5, r0
   146cc:	mov	r1, r0
   146d0:	add	r0, sp, #12
   146d4:	bl	18104 <push_back@@Base>
   146d8:	ldrd	r2, [r4, #16]
   146dc:	add	r0, sp, #12
   146e0:	adds	r2, r2, #1
   146e4:	adc	r3, r3, #0
   146e8:	strd	r2, [r4, #16]
   146ec:	bl	18220 <next@@Base>
   146f0:	ldrd	r2, [r4, #24]
   146f4:	adds	r2, r2, #1
   146f8:	adc	r3, r3, #0
   146fc:	strd	r2, [r4, #24]
   14700:	mov	r3, #148	; 0x94
   14704:	str	r3, [sp]
   14708:	mov	r2, #0
   1470c:	mov	r3, #113	; 0x71
   14710:	mov	r1, r0
   14714:	mov	r0, r5
   14718:	bl	15750 <UnityAssertEqualNumber@@Base>
   1471c:	ldrd	r2, [r4, #32]
   14720:	add	r0, sp, #12
   14724:	adds	r2, r2, #1
   14728:	adc	r3, r3, #0
   1472c:	strd	r2, [r4, #32]
   14730:	bl	180a8 <destroy_lexer@@Base>
   14734:	ldrd	r2, [r4, #40]	; 0x28
   14738:	mov	r0, r5
   1473c:	adds	r2, r2, #1
   14740:	adc	r3, r3, #0
   14744:	strd	r2, [r4, #40]	; 0x28
   14748:	add	sp, sp, #28
   1474c:	pop	{r4, r5, lr}
   14750:	b	11fd8 <free@plt>
   14754:	andeq	sp, r2, r8, ror r3
   14758:	andeq	fp, r1, r7, asr #8

0001475c <push_two_tokens_to_stack@@Base>:
   1475c:	push	{r4, r5, r6, r7, lr}
   14760:	sub	sp, sp, #28
   14764:	ldr	r4, [pc, #260]	; 14870 <push_two_tokens_to_stack@@Base+0x114>
   14768:	ldr	r1, [pc, #260]	; 14874 <push_two_tokens_to_stack@@Base+0x118>
   1476c:	add	r0, sp, #12
   14770:	ldrd	r2, [r4]
   14774:	mov	r7, #148	; 0x94
   14778:	adds	r2, r2, #1
   1477c:	adc	r3, r3, #0
   14780:	strd	r2, [r4]
   14784:	bl	1807c <init_lexer@@Base>
   14788:	ldrd	r2, [r4, #8]
   1478c:	mov	r0, #8
   14790:	adds	r2, r2, #1
   14794:	adc	r3, r3, #0
   14798:	strd	r2, [r4, #8]
   1479c:	bl	1202c <malloc@plt>
   147a0:	mov	r6, r0
   147a4:	mov	r0, #8
   147a8:	bl	1202c <malloc@plt>
   147ac:	mov	r1, r6
   147b0:	mov	r5, r0
   147b4:	add	r0, sp, #12
   147b8:	bl	18104 <push_back@@Base>
   147bc:	ldrd	r2, [r4, #16]
   147c0:	ldr	r0, [sp, #16]
   147c4:	str	r7, [sp]
   147c8:	adds	r2, r2, #1
   147cc:	adc	r3, r3, #0
   147d0:	mov	r1, r6
   147d4:	strd	r2, [r4, #16]
   147d8:	ldr	r0, [r0, #4]
   147dc:	mov	r3, #86	; 0x56
   147e0:	mov	r2, #0
   147e4:	bl	15750 <UnityAssertEqualNumber@@Base>
   147e8:	ldrd	r2, [r4, #24]
   147ec:	mov	r1, r5
   147f0:	add	r0, sp, #12
   147f4:	adds	r2, r2, #1
   147f8:	adc	r3, r3, #0
   147fc:	strd	r2, [r4, #24]
   14800:	bl	18104 <push_back@@Base>
   14804:	ldrd	r2, [r4, #32]
   14808:	ldr	r0, [sp, #16]
   1480c:	mov	r1, r5
   14810:	adds	r2, r2, #1
   14814:	adc	r3, r3, #0
   14818:	str	r7, [sp]
   1481c:	strd	r2, [r4, #32]
   14820:	ldr	r0, [r0, #4]
   14824:	mov	r3, #88	; 0x58
   14828:	mov	r2, #0
   1482c:	bl	15750 <UnityAssertEqualNumber@@Base>
   14830:	ldrd	r2, [r4, #40]	; 0x28
   14834:	add	r0, sp, #12
   14838:	adds	r2, r2, #1
   1483c:	adc	r3, r3, #0
   14840:	strd	r2, [r4, #40]	; 0x28
   14844:	bl	180a8 <destroy_lexer@@Base>
   14848:	ldrd	r2, [r4, #48]	; 0x30
   1484c:	mov	r0, r6
   14850:	adds	r2, r2, #1
   14854:	adc	r3, r3, #0
   14858:	strd	r2, [r4, #48]	; 0x30
   1485c:	bl	11fd8 <free@plt>
   14860:	mov	r0, r5
   14864:	add	sp, sp, #28
   14868:	pop	{r4, r5, r6, r7, lr}
   1486c:	b	11fd8 <free@plt>
   14870:	andeq	sp, r2, r8, lsr #7
   14874:	andeq	fp, r1, r7, asr #8

00014878 <push_token_to_stack@@Base>:
   14878:	push	{r4, r5, lr}
   1487c:	sub	sp, sp, #28
   14880:	ldr	r4, [pc, #168]	; 14930 <push_token_to_stack@@Base+0xb8>
   14884:	ldr	r1, [pc, #168]	; 14934 <push_token_to_stack@@Base+0xbc>
   14888:	add	r0, sp, #12
   1488c:	ldrd	r2, [r4, #-8]
   14890:	adds	r2, r2, #1
   14894:	adc	r3, r3, #0
   14898:	strd	r2, [r4, #-8]
   1489c:	bl	1807c <init_lexer@@Base>
   148a0:	ldrd	r2, [r4]
   148a4:	mov	r0, #8
   148a8:	adds	r2, r2, #1
   148ac:	adc	r3, r3, #0
   148b0:	strd	r2, [r4]
   148b4:	bl	1202c <malloc@plt>
   148b8:	mov	r5, r0
   148bc:	mov	r1, r0
   148c0:	add	r0, sp, #12
   148c4:	bl	18104 <push_back@@Base>
   148c8:	ldrd	r2, [r4, #8]
   148cc:	ldr	r0, [sp, #16]
   148d0:	mov	r1, r5
   148d4:	adds	r2, r2, #1
   148d8:	adc	r3, r3, #0
   148dc:	strd	r2, [r4, #8]
   148e0:	mov	r3, #148	; 0x94
   148e4:	str	r3, [sp]
   148e8:	mov	r2, #0
   148ec:	mov	r3, #62	; 0x3e
   148f0:	ldr	r0, [r0, #4]
   148f4:	bl	15750 <UnityAssertEqualNumber@@Base>
   148f8:	ldrd	r2, [r4, #16]
   148fc:	add	r0, sp, #12
   14900:	adds	r2, r2, #1
   14904:	adc	r3, r3, #0
   14908:	strd	r2, [r4, #16]
   1490c:	bl	180a8 <destroy_lexer@@Base>
   14910:	ldrd	r2, [r4, #24]
   14914:	mov	r0, r5
   14918:	adds	r2, r2, #1
   1491c:	adc	r3, r3, #0
   14920:	strd	r2, [r4, #24]
   14924:	add	sp, sp, #28
   14928:	pop	{r4, r5, lr}
   1492c:	b	11fd8 <free@plt>
   14930:	andeq	sp, r2, r8, ror #7
   14934:	andeq	fp, r1, r7, asr #8

00014938 <UnityPrintNumber@@Base>:
   14938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1493c:	subs	r5, r0, #0
   14940:	sub	sp, sp, #28
   14944:	ldr	r4, [pc, #336]	; 14a9c <UnityPrintNumber@@Base+0x164>
   14948:	bge	149d4 <UnityPrintNumber@@Base+0x9c>
   1494c:	ldrd	r2, [r4]
   14950:	mov	r0, #45	; 0x2d
   14954:	rsb	r5, r5, #0
   14958:	adds	r2, r2, #1
   1495c:	adc	r3, r3, #0
   14960:	strd	r2, [r4]
   14964:	bl	120d4 <putchar@plt>
   14968:	ldrd	r6, [r4, #24]
   1496c:	ldrd	r2, [r4, #16]
   14970:	mov	r4, #1
   14974:	adds	r8, r6, #11
   14978:	adc	r9, r7, #0
   1497c:	subs	r2, r2, r6
   14980:	sbc	r3, r3, r7
   14984:	mov	sl, #0
   14988:	strd	r2, [sp, #8]
   1498c:	mov	fp, #10
   14990:	mov	r3, r4
   14994:	str	r3, [sp, #20]
   14998:	ldrd	r2, [sp, #8]
   1499c:	mov	r1, r4
   149a0:	mov	r0, r5
   149a4:	adds	r2, r2, r6
   149a8:	adc	r3, r3, r7
   149ac:	strd	r2, [sp]
   149b0:	bl	1aea0 <__gcov_sort_n_vals@@Base+0x534>
   149b4:	ldr	r3, [sp, #20]
   149b8:	cmp	r0, #9
   149bc:	bhi	149e8 <UnityPrintNumber@@Base+0xb0>
   149c0:	cmp	sl, #0
   149c4:	beq	14a18 <UnityPrintNumber@@Base+0xe0>
   149c8:	ldr	r3, [pc, #204]	; 14a9c <UnityPrintNumber@@Base+0x164>
   149cc:	strd	r6, [r3, #24]
   149d0:	b	14a10 <UnityPrintNumber@@Base+0xd8>
   149d4:	ldrd	r2, [r4, #8]
   149d8:	adds	r2, r2, #1
   149dc:	adc	r3, r3, #0
   149e0:	strd	r2, [r4, #8]
   149e4:	b	14968 <UnityPrintNumber@@Base+0x30>
   149e8:	adds	r6, r6, #1
   149ec:	adc	r7, r7, #0
   149f0:	cmp	r9, r7
   149f4:	cmpeq	r8, r6
   149f8:	mul	r2, fp, r4
   149fc:	bne	14a78 <UnityPrintNumber@@Base+0x140>
   14a00:	ldr	r3, [pc, #148]	; 14a9c <UnityPrintNumber@@Base+0x164>
   14a04:	cmp	sl, #0
   14a08:	strd	r8, [r3, #24]
   14a0c:	beq	14a18 <UnityPrintNumber@@Base+0xe0>
   14a10:	ldrd	r0, [sp]
   14a14:	strd	r0, [r3, #16]
   14a18:	ldr	r6, [pc, #124]	; 14a9c <UnityPrintNumber@@Base+0x164>
   14a1c:	mov	r7, #10
   14a20:	ldrd	r2, [r6, #32]
   14a24:	adds	r2, r2, #1
   14a28:	adc	r3, r3, #0
   14a2c:	strd	r2, [r6, #32]
   14a30:	mov	r1, r4
   14a34:	mov	r0, r5
   14a38:	bl	1aea0 <__gcov_sort_n_vals@@Base+0x534>
   14a3c:	mov	r1, r7
   14a40:	bl	1b08c <__gcov_sort_n_vals@@Base+0x720>
   14a44:	add	r1, r1, #48	; 0x30
   14a48:	uxtb	r0, r1
   14a4c:	bl	120d4 <putchar@plt>
   14a50:	mov	r0, r4
   14a54:	mov	r1, r7
   14a58:	bl	1aea0 <__gcov_sort_n_vals@@Base+0x534>
   14a5c:	subs	r4, r0, #0
   14a60:	beq	14a84 <UnityPrintNumber@@Base+0x14c>
   14a64:	ldrd	r2, [r6, #48]	; 0x30
   14a68:	adds	r2, r2, #1
   14a6c:	adc	r3, r3, #0
   14a70:	strd	r2, [r6, #48]	; 0x30
   14a74:	b	14a30 <UnityPrintNumber@@Base+0xf8>
   14a78:	mov	sl, r3
   14a7c:	mov	r4, r2
   14a80:	b	14994 <UnityPrintNumber@@Base+0x5c>
   14a84:	ldrd	r2, [r6, #40]	; 0x28
   14a88:	adds	r2, r2, #1
   14a8c:	adc	r3, r3, #0
   14a90:	strd	r2, [r6, #40]	; 0x28
   14a94:	add	sp, sp, #28
   14a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a9c:	strdeq	sp, [r2], -r8

00014aa0 <UnityPrintNumberUnsigned@@Base>:
   14aa0:	ldr	r3, [pc, #296]	; 14bd0 <UnityPrintNumberUnsigned@@Base+0x130>
   14aa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14aa8:	mov	sl, r0
   14aac:	ldrd	r4, [r3, #64]	; 0x40
   14ab0:	ldrd	r2, [r3, #56]	; 0x38
   14ab4:	sub	sp, sp, #28
   14ab8:	adds	r0, r4, #11
   14abc:	adc	r1, r5, #0
   14ac0:	subs	r2, r2, r4
   14ac4:	sbc	r3, r3, r5
   14ac8:	mov	r6, #1
   14acc:	strd	r2, [sp, #8]
   14ad0:	mov	r7, #0
   14ad4:	mov	fp, #10
   14ad8:	mov	r3, r6
   14adc:	strd	r0, [sp]
   14ae0:	ldrd	r8, [sp, #8]
   14ae4:	mov	r1, r6
   14ae8:	mov	r0, sl
   14aec:	adds	r8, r8, r4
   14af0:	str	r3, [sp, #20]
   14af4:	adc	r9, r9, r5
   14af8:	bl	1aea0 <__gcov_sort_n_vals@@Base+0x534>
   14afc:	ldr	r3, [sp, #20]
   14b00:	cmp	r0, #9
   14b04:	bhi	14b1c <UnityPrintNumberUnsigned@@Base+0x7c>
   14b08:	cmp	r7, #0
   14b0c:	beq	14b4c <UnityPrintNumberUnsigned@@Base+0xac>
   14b10:	ldr	r3, [pc, #184]	; 14bd0 <UnityPrintNumberUnsigned@@Base+0x130>
   14b14:	strd	r4, [r3, #64]	; 0x40
   14b18:	b	14b48 <UnityPrintNumberUnsigned@@Base+0xa8>
   14b1c:	ldrd	r0, [sp]
   14b20:	adds	r4, r4, #1
   14b24:	adc	r5, r5, #0
   14b28:	cmp	r5, r1
   14b2c:	cmpeq	r4, r0
   14b30:	mul	r2, fp, r6
   14b34:	bne	14bac <UnityPrintNumberUnsigned@@Base+0x10c>
   14b38:	ldr	r3, [pc, #144]	; 14bd0 <UnityPrintNumberUnsigned@@Base+0x130>
   14b3c:	cmp	r7, #0
   14b40:	strd	r4, [r3, #64]	; 0x40
   14b44:	beq	14b4c <UnityPrintNumberUnsigned@@Base+0xac>
   14b48:	strd	r8, [r3, #56]	; 0x38
   14b4c:	ldr	r4, [pc, #124]	; 14bd0 <UnityPrintNumberUnsigned@@Base+0x130>
   14b50:	mov	r5, #10
   14b54:	ldrd	r2, [r4, #72]	; 0x48
   14b58:	adds	r2, r2, #1
   14b5c:	adc	r3, r3, #0
   14b60:	strd	r2, [r4, #72]	; 0x48
   14b64:	mov	r1, r6
   14b68:	mov	r0, sl
   14b6c:	bl	1aea0 <__gcov_sort_n_vals@@Base+0x534>
   14b70:	mov	r1, r5
   14b74:	bl	1b08c <__gcov_sort_n_vals@@Base+0x720>
   14b78:	add	r1, r1, #48	; 0x30
   14b7c:	uxtb	r0, r1
   14b80:	bl	120d4 <putchar@plt>
   14b84:	mov	r0, r6
   14b88:	mov	r1, r5
   14b8c:	bl	1aea0 <__gcov_sort_n_vals@@Base+0x534>
   14b90:	subs	r6, r0, #0
   14b94:	beq	14bb8 <UnityPrintNumberUnsigned@@Base+0x118>
   14b98:	ldrd	r2, [r4, #88]	; 0x58
   14b9c:	adds	r2, r2, #1
   14ba0:	adc	r3, r3, #0
   14ba4:	strd	r2, [r4, #88]	; 0x58
   14ba8:	b	14b64 <UnityPrintNumberUnsigned@@Base+0xc4>
   14bac:	mov	r7, r3
   14bb0:	mov	r6, r2
   14bb4:	b	14ae0 <UnityPrintNumberUnsigned@@Base+0x40>
   14bb8:	ldrd	r2, [r4, #80]	; 0x50
   14bbc:	adds	r2, r2, #1
   14bc0:	adc	r3, r3, #0
   14bc4:	strd	r2, [r4, #80]	; 0x50
   14bc8:	add	sp, sp, #28
   14bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bd0:	strdeq	sp, [r2], -r8

00014bd4 <UnityPrintNumberHex@@Base>:
   14bd4:	push	{r4, r5, r6, lr}
   14bd8:	mov	r6, r0
   14bdc:	ldr	r4, [pc, #192]	; 14ca4 <UnityPrintNumberHex@@Base+0xd0>
   14be0:	mov	r0, #48	; 0x30
   14be4:	mov	r5, r1
   14be8:	ldrd	r2, [r4, #96]	; 0x60
   14bec:	adds	r2, r2, #1
   14bf0:	adc	r3, r3, #0
   14bf4:	strd	r2, [r4, #96]	; 0x60
   14bf8:	bl	120d4 <putchar@plt>
   14bfc:	ldrd	r2, [r4, #104]	; 0x68
   14c00:	mov	r0, #120	; 0x78
   14c04:	adds	r2, r2, #1
   14c08:	adc	r3, r3, #0
   14c0c:	strd	r2, [r4, #104]	; 0x68
   14c10:	bl	120d4 <putchar@plt>
   14c14:	cmp	r5, #0
   14c18:	bne	14c30 <UnityPrintNumberHex@@Base+0x5c>
   14c1c:	ldrd	r2, [r4, #144]	; 0x90
   14c20:	adds	r2, r2, #1
   14c24:	adc	r3, r3, #0
   14c28:	strd	r2, [r4, #144]	; 0x90
   14c2c:	pop	{r4, r5, r6, pc}
   14c30:	sub	r5, r5, #1
   14c34:	ldrd	r2, [r4, #136]	; 0x88
   14c38:	uxtb	r5, r5
   14c3c:	lsl	r0, r5, #2
   14c40:	adds	r2, r2, #1
   14c44:	lsr	r0, r6, r0
   14c48:	adc	r3, r3, #0
   14c4c:	and	r0, r0, #15
   14c50:	cmp	r0, #9
   14c54:	strd	r2, [r4, #136]	; 0x88
   14c58:	bhi	14c78 <UnityPrintNumberHex@@Base+0xa4>
   14c5c:	add	r0, r0, #48	; 0x30
   14c60:	bl	120d4 <putchar@plt>
   14c64:	ldrd	r2, [r4, #128]	; 0x80
   14c68:	adds	r2, r2, #1
   14c6c:	adc	r3, r3, #0
   14c70:	strd	r2, [r4, #128]	; 0x80
   14c74:	b	14c14 <UnityPrintNumberHex@@Base+0x40>
   14c78:	ldrd	r2, [r4, #112]	; 0x70
   14c7c:	add	r0, r0, #55	; 0x37
   14c80:	adds	r2, r2, #1
   14c84:	adc	r3, r3, #0
   14c88:	strd	r2, [r4, #112]	; 0x70
   14c8c:	bl	120d4 <putchar@plt>
   14c90:	ldrd	r2, [r4, #120]	; 0x78
   14c94:	adds	r2, r2, #1
   14c98:	adc	r3, r3, #0
   14c9c:	strd	r2, [r4, #120]	; 0x78
   14ca0:	b	14c64 <UnityPrintNumberHex@@Base+0x90>
   14ca4:	strdeq	sp, [r2], -r8

00014ca8 <UnityPrintNumberByStyle@@Base>:
   14ca8:	tst	r1, #16
   14cac:	push	{r4, lr}
   14cb0:	ldr	r4, [pc, #160]	; 14d58 <UnityPrintNumberByStyle@@Base+0xb0>
   14cb4:	beq	14ce0 <UnityPrintNumberByStyle@@Base+0x38>
   14cb8:	ldrd	r2, [r4, #152]	; 0x98
   14cbc:	adds	r2, r2, #1
   14cc0:	adc	r3, r3, #0
   14cc4:	strd	r2, [r4, #152]	; 0x98
   14cc8:	bl	14938 <UnityPrintNumber@@Base>
   14ccc:	ldrd	r2, [r4, #160]	; 0xa0
   14cd0:	adds	r2, r2, #1
   14cd4:	adc	r3, r3, #0
   14cd8:	strd	r2, [r4, #160]	; 0xa0
   14cdc:	pop	{r4, pc}
   14ce0:	tst	r1, #32
   14ce4:	beq	14d28 <UnityPrintNumberByStyle@@Base+0x80>
   14ce8:	ldrd	r2, [r4, #168]	; 0xa8
   14cec:	and	r1, r1, #15
   14cf0:	sub	r1, r1, #1
   14cf4:	adds	r2, r2, #1
   14cf8:	adc	r3, r3, #0
   14cfc:	mov	ip, r0
   14d00:	strd	r2, [r4, #168]	; 0xa8
   14d04:	ldr	r3, [pc, #80]	; 14d5c <UnityPrintNumberByStyle@@Base+0xb4>
   14d08:	ldr	r0, [r3, r1, lsl #2]
   14d0c:	and	r0, r0, ip
   14d10:	bl	14aa0 <UnityPrintNumberUnsigned@@Base>
   14d14:	ldrd	r2, [r4, #184]	; 0xb8
   14d18:	adds	r2, r2, #1
   14d1c:	adc	r3, r3, #0
   14d20:	strd	r2, [r4, #184]	; 0xb8
   14d24:	pop	{r4, pc}
   14d28:	ldrd	r2, [r4, #176]	; 0xb0
   14d2c:	lsl	r1, r1, #1
   14d30:	and	r1, r1, #30
   14d34:	adds	r2, r2, #1
   14d38:	adc	r3, r3, #0
   14d3c:	strd	r2, [r4, #176]	; 0xb0
   14d40:	bl	14bd4 <UnityPrintNumberHex@@Base>
   14d44:	ldrd	r2, [r4, #192]	; 0xc0
   14d48:	adds	r2, r2, #1
   14d4c:	adc	r3, r3, #0
   14d50:	strd	r2, [r4, #192]	; 0xc0
   14d54:	pop	{r4, pc}
   14d58:	strdeq	sp, [r2], -r8
   14d5c:	andeq	fp, r1, ip, lsl #14

00014d60 <UnityPrintLen@@Base>:
   14d60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14d64:	ldr	r4, [pc, #384]	; 14eec <UnityPrintLen@@Base+0x18c>
   14d68:	ldrd	r2, [r4, #200]	; 0xc8
   14d6c:	adds	r2, r2, #1
   14d70:	adc	r3, r3, #0
   14d74:	subs	r6, r0, #0
   14d78:	strd	r2, [r4, #200]	; 0xc8
   14d7c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d80:	ldrd	r2, [r4, #208]	; 0xd0
   14d84:	mov	sl, r1
   14d88:	mov	r5, r6
   14d8c:	adds	r2, r2, #1
   14d90:	adc	r3, r3, #0
   14d94:	add	r7, r4, #304	; 0x130
   14d98:	add	r8, r4, #288	; 0x120
   14d9c:	add	r9, r4, #272	; 0x110
   14da0:	strd	r2, [r4, #208]	; 0xd0
   14da4:	ldrb	r0, [r5]
   14da8:	cmp	r0, #0
   14dac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14db0:	ldrd	r2, [r7, #-8]
   14db4:	adds	r2, r2, #1
   14db8:	adc	r3, r3, #0
   14dbc:	strd	r2, [r7, #-8]
   14dc0:	sub	r3, r5, r6
   14dc4:	cmp	r3, sl
   14dc8:	bcc	14dd0 <UnityPrintLen@@Base+0x70>
   14dcc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14dd0:	ldrd	r2, [r7]
   14dd4:	adds	r2, r2, #1
   14dd8:	adc	r3, r3, #0
   14ddc:	strd	r2, [r7]
   14de0:	sub	r3, r0, #32
   14de4:	cmp	r3, #94	; 0x5e
   14de8:	bhi	14e08 <UnityPrintLen@@Base+0xa8>
   14dec:	bl	120d4 <putchar@plt>
   14df0:	ldrd	r2, [r8]
   14df4:	add	r5, r5, #1
   14df8:	adds	r2, r2, #1
   14dfc:	adc	r3, r3, #0
   14e00:	strd	r2, [r8]
   14e04:	b	14da4 <UnityPrintLen@@Base+0x44>
   14e08:	cmp	r0, #13
   14e0c:	bne	14e54 <UnityPrintLen@@Base+0xf4>
   14e10:	ldrd	r2, [r4, #216]	; 0xd8
   14e14:	mov	r0, #92	; 0x5c
   14e18:	adds	r2, r2, #1
   14e1c:	adc	r3, r3, #0
   14e20:	strd	r2, [r4, #216]	; 0xd8
   14e24:	bl	120d4 <putchar@plt>
   14e28:	ldrd	r2, [r4, #224]	; 0xe0
   14e2c:	mov	r0, #114	; 0x72
   14e30:	adds	r2, r2, #1
   14e34:	adc	r3, r3, #0
   14e38:	strd	r2, [r4, #224]	; 0xe0
   14e3c:	bl	120d4 <putchar@plt>
   14e40:	ldrd	r2, [r4, #232]	; 0xe8
   14e44:	adds	r2, r2, #1
   14e48:	adc	r3, r3, #0
   14e4c:	strd	r2, [r4, #232]	; 0xe8
   14e50:	b	14df0 <UnityPrintLen@@Base+0x90>
   14e54:	cmp	r0, #10
   14e58:	bne	14ea4 <UnityPrintLen@@Base+0x144>
   14e5c:	ldrd	r2, [r4, #240]	; 0xf0
   14e60:	mov	r0, #92	; 0x5c
   14e64:	adds	r2, r2, #1
   14e68:	adc	r3, r3, #0
   14e6c:	strd	r2, [r4, #240]	; 0xf0
   14e70:	bl	120d4 <putchar@plt>
   14e74:	ldr	r1, [pc, #116]	; 14ef0 <UnityPrintLen@@Base+0x190>
   14e78:	mov	r0, #110	; 0x6e
   14e7c:	ldrd	r2, [r1]
   14e80:	adds	r2, r2, #1
   14e84:	adc	r3, r3, #0
   14e88:	strd	r2, [r1]
   14e8c:	bl	120d4 <putchar@plt>
   14e90:	ldrd	r2, [r9, #-8]
   14e94:	adds	r2, r2, #1
   14e98:	adc	r3, r3, #0
   14e9c:	strd	r2, [r9, #-8]
   14ea0:	b	14df0 <UnityPrintLen@@Base+0x90>
   14ea4:	ldrd	r2, [r4, #248]	; 0xf8
   14ea8:	mov	r0, #92	; 0x5c
   14eac:	adds	r2, r2, #1
   14eb0:	adc	r3, r3, #0
   14eb4:	strd	r2, [r4, #248]	; 0xf8
   14eb8:	bl	120d4 <putchar@plt>
   14ebc:	ldrd	r2, [r9]
   14ec0:	mov	r1, #2
   14ec4:	ldrb	r0, [r5]
   14ec8:	adds	r2, r2, #1
   14ecc:	adc	r3, r3, #0
   14ed0:	strd	r2, [r9]
   14ed4:	bl	14bd4 <UnityPrintNumberHex@@Base>
   14ed8:	ldrd	r2, [r8, #-8]
   14edc:	adds	r2, r2, #1
   14ee0:	adc	r3, r3, #0
   14ee4:	strd	r2, [r8, #-8]
   14ee8:	b	14df0 <UnityPrintLen@@Base+0x90>
   14eec:	strdeq	sp, [r2], -r8
   14ef0:	strdeq	sp, [r2], -r8

00014ef4 <UnityPrint@@Base>:
   14ef4:	push	{r4, r5, r6, r7, r8, lr}
   14ef8:	ldr	r4, [pc, #344]	; 15058 <UnityPrint@@Base+0x164>
   14efc:	ldrd	r2, [r4, #-8]
   14f00:	adds	r2, r2, #1
   14f04:	adc	r3, r3, #0
   14f08:	subs	r5, r0, #0
   14f0c:	strd	r2, [r4, #-8]
   14f10:	popeq	{r4, r5, r6, r7, r8, pc}
   14f14:	ldrd	r2, [r4]
   14f18:	mov	r6, #92	; 0x5c
   14f1c:	mov	r7, #2
   14f20:	adds	r2, r2, #1
   14f24:	adc	r3, r3, #0
   14f28:	mov	r8, #110	; 0x6e
   14f2c:	strd	r2, [r4]
   14f30:	ldrb	r0, [r5]
   14f34:	cmp	r0, #0
   14f38:	bne	14f40 <UnityPrint@@Base+0x4c>
   14f3c:	pop	{r4, r5, r6, r7, r8, pc}
   14f40:	ldrd	r2, [r4, #88]	; 0x58
   14f44:	adds	r2, r2, #1
   14f48:	adc	r3, r3, #0
   14f4c:	strd	r2, [r4, #88]	; 0x58
   14f50:	sub	r3, r0, #32
   14f54:	cmp	r3, #94	; 0x5e
   14f58:	bhi	14f78 <UnityPrint@@Base+0x84>
   14f5c:	bl	120d4 <putchar@plt>
   14f60:	ldrd	r2, [r4, #80]	; 0x50
   14f64:	add	r5, r5, #1
   14f68:	adds	r2, r2, #1
   14f6c:	adc	r3, r3, #0
   14f70:	strd	r2, [r4, #80]	; 0x50
   14f74:	b	14f30 <UnityPrint@@Base+0x3c>
   14f78:	cmp	r0, #13
   14f7c:	bne	14fc4 <UnityPrint@@Base+0xd0>
   14f80:	ldrd	r2, [r4, #8]
   14f84:	mov	r0, r6
   14f88:	adds	r2, r2, #1
   14f8c:	adc	r3, r3, #0
   14f90:	strd	r2, [r4, #8]
   14f94:	bl	120d4 <putchar@plt>
   14f98:	ldrd	r2, [r4, #16]
   14f9c:	mov	r0, #114	; 0x72
   14fa0:	adds	r2, r2, #1
   14fa4:	adc	r3, r3, #0
   14fa8:	strd	r2, [r4, #16]
   14fac:	bl	120d4 <putchar@plt>
   14fb0:	ldrd	r2, [r4, #24]
   14fb4:	adds	r2, r2, #1
   14fb8:	adc	r3, r3, #0
   14fbc:	strd	r2, [r4, #24]
   14fc0:	b	14f60 <UnityPrint@@Base+0x6c>
   14fc4:	cmp	r0, #10
   14fc8:	bne	15010 <UnityPrint@@Base+0x11c>
   14fcc:	ldrd	r2, [r4, #32]
   14fd0:	mov	r0, r6
   14fd4:	adds	r2, r2, #1
   14fd8:	adc	r3, r3, #0
   14fdc:	strd	r2, [r4, #32]
   14fe0:	bl	120d4 <putchar@plt>
   14fe4:	ldrd	r2, [r4, #48]	; 0x30
   14fe8:	mov	r0, r8
   14fec:	adds	r2, r2, #1
   14ff0:	adc	r3, r3, #0
   14ff4:	strd	r2, [r4, #48]	; 0x30
   14ff8:	bl	120d4 <putchar@plt>
   14ffc:	ldrd	r2, [r4, #56]	; 0x38
   15000:	adds	r2, r2, #1
   15004:	adc	r3, r3, #0
   15008:	strd	r2, [r4, #56]	; 0x38
   1500c:	b	14f60 <UnityPrint@@Base+0x6c>
   15010:	ldrd	r2, [r4, #40]	; 0x28
   15014:	mov	r0, r6
   15018:	adds	r2, r2, #1
   1501c:	adc	r3, r3, #0
   15020:	strd	r2, [r4, #40]	; 0x28
   15024:	bl	120d4 <putchar@plt>
   15028:	ldrd	r2, [r4, #64]	; 0x40
   1502c:	mov	r1, r7
   15030:	ldrb	r0, [r5]
   15034:	adds	r2, r2, #1
   15038:	adc	r3, r3, #0
   1503c:	strd	r2, [r4, #64]	; 0x40
   15040:	bl	14bd4 <UnityPrintNumberHex@@Base>
   15044:	ldrd	r2, [r4, #72]	; 0x48
   15048:	adds	r2, r2, #1
   1504c:	adc	r3, r3, #0
   15050:	strd	r2, [r4, #72]	; 0x48
   15054:	b	14f60 <UnityPrint@@Base+0x6c>
   15058:	andeq	sp, r2, r8, lsr r6
   1505c:	push	{r4, r5, r6, lr}
   15060:	ldr	r4, [pc, #268]	; 15174 <UnityPrint@@Base+0x280>
   15064:	ldrd	r2, [r4, #-8]
   15068:	adds	r2, r2, #1
   1506c:	adc	r3, r3, #0
   15070:	subs	r6, r0, #0
   15074:	strd	r2, [r4, #-8]
   15078:	popeq	{r4, r5, r6, pc}
   1507c:	ldrd	r2, [r4]
   15080:	ldr	r0, [pc, #240]	; 15178 <UnityPrint@@Base+0x284>
   15084:	ldr	r5, [pc, #240]	; 1517c <UnityPrint@@Base+0x288>
   15088:	adds	r2, r2, #1
   1508c:	adc	r3, r3, #0
   15090:	strd	r2, [r4]
   15094:	bl	14ef4 <UnityPrint@@Base>
   15098:	ldrd	r2, [r4, #8]
   1509c:	adds	r2, r2, #1
   150a0:	adc	r3, r3, #0
   150a4:	strd	r2, [r4, #8]
   150a8:	ldr	r3, [r5, #8]
   150ac:	cmp	r3, #0
   150b0:	beq	15158 <UnityPrint@@Base+0x264>
   150b4:	ldrd	r2, [r4, #16]
   150b8:	ldr	r0, [pc, #192]	; 15180 <UnityPrint@@Base+0x28c>
   150bc:	adds	r2, r2, #1
   150c0:	adc	r3, r3, #0
   150c4:	strd	r2, [r4, #16]
   150c8:	bl	14ef4 <UnityPrint@@Base>
   150cc:	ldrd	r2, [r4, #24]
   150d0:	ldr	r0, [r5, #8]
   150d4:	adds	r2, r2, #1
   150d8:	adc	r3, r3, #0
   150dc:	strd	r2, [r4, #24]
   150e0:	bl	14ef4 <UnityPrint@@Base>
   150e4:	ldrd	r2, [r4, #32]
   150e8:	adds	r2, r2, #1
   150ec:	adc	r3, r3, #0
   150f0:	strd	r2, [r4, #32]
   150f4:	ldr	r3, [r5, #12]
   150f8:	cmp	r3, #0
   150fc:	beq	15140 <UnityPrint@@Base+0x24c>
   15100:	ldrd	r2, [r4, #40]	; 0x28
   15104:	ldr	r0, [pc, #120]	; 15184 <UnityPrint@@Base+0x290>
   15108:	adds	r2, r2, #1
   1510c:	adc	r3, r3, #0
   15110:	strd	r2, [r4, #40]	; 0x28
   15114:	bl	14ef4 <UnityPrint@@Base>
   15118:	ldrd	r2, [r4, #48]	; 0x30
   1511c:	ldr	r0, [r5, #12]
   15120:	adds	r2, r2, #1
   15124:	adc	r3, r3, #0
   15128:	strd	r2, [r4, #48]	; 0x30
   1512c:	bl	14ef4 <UnityPrint@@Base>
   15130:	ldrd	r2, [r4, #56]	; 0x38
   15134:	adds	r2, r2, #1
   15138:	adc	r3, r3, #0
   1513c:	strd	r2, [r4, #56]	; 0x38
   15140:	ldr	r0, [pc, #48]	; 15178 <UnityPrint@@Base+0x284>
   15144:	bl	14ef4 <UnityPrint@@Base>
   15148:	ldrd	r2, [r4, #64]	; 0x40
   1514c:	adds	r2, r2, #1
   15150:	adc	r3, r3, #0
   15154:	strd	r2, [r4, #64]	; 0x40
   15158:	mov	r0, r6
   1515c:	bl	14ef4 <UnityPrint@@Base>
   15160:	ldrd	r2, [r4, #72]	; 0x48
   15164:	adds	r2, r2, #1
   15168:	adc	r3, r3, #0
   1516c:	strd	r2, [r4, #72]	; 0x48
   15170:	pop	{r4, r5, r6, pc}
   15174:	andeq	sp, r2, r8, lsl #14
   15178:	andeq	fp, r1, lr, lsr r7
   1517c:	andeq	lr, r2, r8, lsl #10
   15180:	andeq	fp, r1, r1, asr #14
   15184:	andeq	fp, r1, fp, asr #14
   15188:	push	{r4, r5, r6, lr}
   1518c:	mov	r5, r1
   15190:	ldr	r4, [pc, #160]	; 15238 <UnityPrint@@Base+0x344>
   15194:	ldrd	r2, [r4]
   15198:	adds	r2, r2, #1
   1519c:	adc	r3, r3, #0
   151a0:	strd	r2, [r4]
   151a4:	bl	14ef4 <UnityPrint@@Base>
   151a8:	ldrd	r2, [r4, #8]
   151ac:	mov	r0, #58	; 0x3a
   151b0:	adds	r2, r2, #1
   151b4:	adc	r3, r3, #0
   151b8:	strd	r2, [r4, #8]
   151bc:	bl	120d4 <putchar@plt>
   151c0:	ldrd	r2, [r4, #16]
   151c4:	mov	r0, r5
   151c8:	adds	r2, r2, #1
   151cc:	adc	r3, r3, #0
   151d0:	strd	r2, [r4, #16]
   151d4:	bl	14938 <UnityPrintNumber@@Base>
   151d8:	ldrd	r2, [r4, #24]
   151dc:	mov	r0, #58	; 0x3a
   151e0:	adds	r2, r2, #1
   151e4:	adc	r3, r3, #0
   151e8:	strd	r2, [r4, #24]
   151ec:	bl	120d4 <putchar@plt>
   151f0:	ldrd	r2, [r4, #32]
   151f4:	adds	r2, r2, #1
   151f8:	adc	r3, r3, #0
   151fc:	strd	r2, [r4, #32]
   15200:	ldr	r3, [pc, #52]	; 1523c <UnityPrint@@Base+0x348>
   15204:	ldr	r0, [r3, #4]
   15208:	bl	14ef4 <UnityPrint@@Base>
   1520c:	ldrd	r2, [r4, #40]	; 0x28
   15210:	mov	r0, #58	; 0x3a
   15214:	adds	r2, r2, #1
   15218:	adc	r3, r3, #0
   1521c:	strd	r2, [r4, #40]	; 0x28
   15220:	bl	120d4 <putchar@plt>
   15224:	ldrd	r2, [r4, #48]	; 0x30
   15228:	adds	r2, r2, #1
   1522c:	adc	r3, r3, #0
   15230:	strd	r2, [r4, #48]	; 0x30
   15234:	pop	{r4, r5, r6, pc}
   15238:	andeq	sp, r2, r8, asr r7
   1523c:	andeq	lr, r2, r8, lsl #10
   15240:	push	{r4, lr}
   15244:	mov	r1, r0
   15248:	ldr	r4, [pc, #92]	; 152ac <UnityPrint@@Base+0x3b8>
   1524c:	ldrd	r2, [r4, #-8]
   15250:	adds	r2, r2, #1
   15254:	adc	r3, r3, #0
   15258:	strd	r2, [r4, #-8]
   1525c:	ldr	r3, [pc, #76]	; 152b0 <UnityPrint@@Base+0x3bc>
   15260:	ldr	r0, [r3]
   15264:	bl	15188 <UnityPrint@@Base+0x294>
   15268:	ldrd	r2, [r4]
   1526c:	ldr	r0, [pc, #64]	; 152b4 <UnityPrint@@Base+0x3c0>
   15270:	adds	r2, r2, #1
   15274:	adc	r3, r3, #0
   15278:	strd	r2, [r4]
   1527c:	bl	14ef4 <UnityPrint@@Base>
   15280:	ldrd	r2, [r4, #8]
   15284:	mov	r0, #58	; 0x3a
   15288:	adds	r2, r2, #1
   1528c:	adc	r3, r3, #0
   15290:	strd	r2, [r4, #8]
   15294:	bl	120d4 <putchar@plt>
   15298:	ldrd	r2, [r4, #16]
   1529c:	adds	r2, r2, #1
   152a0:	adc	r3, r3, #0
   152a4:	strd	r2, [r4, #16]
   152a8:	pop	{r4, pc}
   152ac:	muleq	r2, r8, r7
   152b0:	andeq	lr, r2, r8, lsl #10
   152b4:	andeq	fp, r1, r6, asr r7
   152b8:	push	{r4, r5, r6, r7, r8, lr}
   152bc:	ldr	r4, [pc, #284]	; 153e0 <UnityPrint@@Base+0x4ec>
   152c0:	ldrd	r6, [r4, #-8]
   152c4:	adds	r6, r6, #1
   152c8:	adc	r7, r7, #0
   152cc:	cmp	r0, #0
   152d0:	cmpeq	r1, #0
   152d4:	strd	r6, [r4, #-8]
   152d8:	moveq	lr, #1
   152dc:	movne	lr, #0
   152e0:	beq	153d0 <UnityPrint@@Base+0x4dc>
   152e4:	mov	ip, r0
   152e8:	cmp	ip, #0
   152ec:	mov	r5, r3
   152f0:	mov	r0, r2
   152f4:	bne	15360 <UnityPrint@@Base+0x46c>
   152f8:	ldrd	r6, [r4]
   152fc:	adds	r6, r6, #1
   15300:	adc	r7, r7, #0
   15304:	strd	r6, [r4]
   15308:	bl	15240 <UnityPrint@@Base+0x34c>
   1530c:	ldrd	r2, [r4, #16]
   15310:	ldr	r0, [pc, #204]	; 153e4 <UnityPrint@@Base+0x4f0>
   15314:	adds	r2, r2, #1
   15318:	adc	r3, r3, #0
   1531c:	strd	r2, [r4, #16]
   15320:	bl	14ef4 <UnityPrint@@Base>
   15324:	ldrd	r2, [r4, #24]
   15328:	mov	r0, r5
   1532c:	adds	r2, r2, #1
   15330:	adc	r3, r3, #0
   15334:	strd	r2, [r4, #24]
   15338:	bl	1505c <UnityPrint@@Base+0x168>
   1533c:	ldrd	r2, [r4, #32]
   15340:	adds	r2, r2, #1
   15344:	adc	r3, r3, #0
   15348:	strd	r2, [r4, #32]
   1534c:	ldr	r0, [pc, #148]	; 153e8 <UnityPrint@@Base+0x4f4>
   15350:	mov	r1, #1
   15354:	add	r0, r0, #40	; 0x28
   15358:	str	r1, [r0, #-8]
   1535c:	bl	11fc0 <longjmp@plt>
   15360:	ldrd	r6, [r4, #8]
   15364:	adds	r6, r6, #1
   15368:	adc	r7, r7, #0
   1536c:	cmp	r1, #0
   15370:	strd	r6, [r4, #8]
   15374:	bne	153d8 <UnityPrint@@Base+0x4e4>
   15378:	ldrd	r6, [r4, #40]	; 0x28
   1537c:	adds	r6, r6, #1
   15380:	adc	r7, r7, #0
   15384:	strd	r6, [r4, #40]	; 0x28
   15388:	bl	15240 <UnityPrint@@Base+0x34c>
   1538c:	ldrd	r2, [r4, #48]	; 0x30
   15390:	ldr	r0, [pc, #84]	; 153ec <UnityPrint@@Base+0x4f8>
   15394:	adds	r2, r2, #1
   15398:	adc	r3, r3, #0
   1539c:	strd	r2, [r4, #48]	; 0x30
   153a0:	bl	14ef4 <UnityPrint@@Base>
   153a4:	ldrd	r2, [r4, #56]	; 0x38
   153a8:	mov	r0, r5
   153ac:	adds	r2, r2, #1
   153b0:	adc	r3, r3, #0
   153b4:	strd	r2, [r4, #56]	; 0x38
   153b8:	bl	1505c <UnityPrint@@Base+0x168>
   153bc:	ldrd	r2, [r4, #64]	; 0x40
   153c0:	adds	r2, r2, #1
   153c4:	adc	r3, r3, #0
   153c8:	strd	r2, [r4, #64]	; 0x40
   153cc:	b	1534c <UnityPrint@@Base+0x458>
   153d0:	mov	r0, #1
   153d4:	pop	{r4, r5, r6, r7, r8, pc}
   153d8:	mov	r0, lr
   153dc:	pop	{r4, r5, r6, r7, r8, pc}
   153e0:			; <UNDEFINED> instruction: 0x0002d7b8
   153e4:	andeq	fp, r1, fp, asr r7
   153e8:	andeq	lr, r2, r8, lsl #10
   153ec:	andeq	fp, r1, r8, ror r7

000153f0 <UnityPrintMask@@Base>:
   153f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   153f4:	mov	r8, r0
   153f8:	ldr	r4, [pc, #192]	; 154c0 <UnityPrintMask@@Base+0xd0>
   153fc:	mov	r9, r1
   15400:	mov	r7, #32
   15404:	mov	r6, #-2147483648	; 0x80000000
   15408:	mov	r5, r4
   1540c:	mov	sl, #88	; 0x58
   15410:	ldrd	r2, [r4, #32]
   15414:	adds	r2, r2, #1
   15418:	adc	r3, r3, #0
   1541c:	tst	r8, r6
   15420:	strd	r2, [r4, #32]
   15424:	beq	154a4 <UnityPrintMask@@Base+0xb4>
   15428:	tst	r9, r6
   1542c:	beq	15478 <UnityPrintMask@@Base+0x88>
   15430:	ldrd	r2, [r4, #-8]
   15434:	mov	r0, #49	; 0x31
   15438:	adds	r2, r2, #1
   1543c:	adc	r3, r3, #0
   15440:	strd	r2, [r4, #-8]
   15444:	bl	120d4 <putchar@plt>
   15448:	ldrd	r2, [r5, #24]
   1544c:	lsr	r6, r6, #1
   15450:	adds	r2, r2, #1
   15454:	adc	r3, r3, #0
   15458:	subs	r7, r7, #1
   1545c:	strd	r2, [r5, #24]
   15460:	bne	15410 <UnityPrintMask@@Base+0x20>
   15464:	ldrd	r2, [r5, #40]	; 0x28
   15468:	adds	r2, r2, #1
   1546c:	adc	r3, r3, #0
   15470:	strd	r2, [r5, #40]	; 0x28
   15474:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15478:	ldrd	r2, [r4]
   1547c:	mov	r0, #48	; 0x30
   15480:	adds	r2, r2, #1
   15484:	adc	r3, r3, #0
   15488:	strd	r2, [r4]
   1548c:	bl	120d4 <putchar@plt>
   15490:	ldrd	r2, [r4, #8]
   15494:	adds	r2, r2, #1
   15498:	adc	r3, r3, #0
   1549c:	strd	r2, [r4, #8]
   154a0:	b	15448 <UnityPrintMask@@Base+0x58>
   154a4:	mov	r0, sl
   154a8:	bl	120d4 <putchar@plt>
   154ac:	ldrd	r2, [r4, #16]
   154b0:	adds	r2, r2, #1
   154b4:	adc	r3, r3, #0
   154b8:	strd	r2, [r4, #16]
   154bc:	b	15448 <UnityPrintMask@@Base+0x58>
   154c0:	andeq	sp, r2, r8, lsl #16

000154c4 <UnityPrintFail@@Base>:
   154c4:	push	{r4, lr}
   154c8:	ldr	r4, [pc, #40]	; 154f8 <UnityPrintFail@@Base+0x34>
   154cc:	ldr	r0, [pc, #40]	; 154fc <UnityPrintFail@@Base+0x38>
   154d0:	ldrd	r2, [r4]
   154d4:	adds	r2, r2, #1
   154d8:	adc	r3, r3, #0
   154dc:	strd	r2, [r4]
   154e0:	bl	14ef4 <UnityPrint@@Base>
   154e4:	ldrd	r2, [r4, #8]
   154e8:	adds	r2, r2, #1
   154ec:	adc	r3, r3, #0
   154f0:	strd	r2, [r4, #8]
   154f4:	pop	{r4, pc}
   154f8:	andeq	sp, r2, r8, lsr r8
   154fc:	andeq	fp, r1, r6, asr r7

00015500 <UnityPrintOk@@Base>:
   15500:	push	{r4, lr}
   15504:	ldr	r4, [pc, #40]	; 15534 <UnityPrintOk@@Base+0x34>
   15508:	ldr	r0, [pc, #40]	; 15538 <UnityPrintOk@@Base+0x38>
   1550c:	ldrd	r2, [r4]
   15510:	adds	r2, r2, #1
   15514:	adc	r3, r3, #0
   15518:	strd	r2, [r4]
   1551c:	bl	14ef4 <UnityPrint@@Base>
   15520:	ldrd	r2, [r4, #8]
   15524:	adds	r2, r2, #1
   15528:	adc	r3, r3, #0
   1552c:	strd	r2, [r4, #8]
   15530:	pop	{r4, pc}
   15534:	andeq	sp, r2, r8, asr #16
   15538:	muleq	r1, r1, r7

0001553c <UnityConcludeTest@@Base>:
   1553c:	push	{r4, r5, r6, lr}
   15540:	ldr	r5, [pc, #196]	; 1560c <UnityConcludeTest@@Base+0xd0>
   15544:	ldr	r4, [pc, #196]	; 15610 <UnityConcludeTest@@Base+0xd4>
   15548:	ldr	r3, [r5, #36]	; 0x24
   1554c:	cmp	r3, #0
   15550:	beq	15598 <UnityConcludeTest@@Base+0x5c>
   15554:	ldr	r3, [r5, #28]
   15558:	add	r3, r3, #1
   1555c:	str	r3, [r5, #28]
   15560:	ldrd	r2, [r4]
   15564:	adds	r2, r2, #1
   15568:	adc	r3, r3, #0
   1556c:	strd	r2, [r4]
   15570:	mov	r3, #0
   15574:	mov	r0, #10
   15578:	str	r3, [r5, #32]
   1557c:	str	r3, [r5, #36]	; 0x24
   15580:	bl	120d4 <putchar@plt>
   15584:	ldrd	r2, [r4, #40]	; 0x28
   15588:	adds	r2, r2, #1
   1558c:	adc	r3, r3, #0
   15590:	strd	r2, [r4, #40]	; 0x28
   15594:	pop	{r4, r5, r6, pc}
   15598:	ldr	r3, [r5, #32]
   1559c:	cmp	r3, #0
   155a0:	bne	155ec <UnityConcludeTest@@Base+0xb0>
   155a4:	ldrd	r2, [r4, #8]
   155a8:	ldr	r1, [r5, #16]
   155ac:	ldr	r0, [r5]
   155b0:	adds	r2, r2, #1
   155b4:	adc	r3, r3, #0
   155b8:	strd	r2, [r4, #8]
   155bc:	bl	15188 <UnityPrint@@Base+0x294>
   155c0:	ldrd	r2, [r4, #16]
   155c4:	ldr	r0, [pc, #72]	; 15614 <UnityConcludeTest@@Base+0xd8>
   155c8:	adds	r2, r2, #1
   155cc:	adc	r3, r3, #0
   155d0:	strd	r2, [r4, #16]
   155d4:	bl	14ef4 <UnityPrint@@Base>
   155d8:	ldrd	r2, [r4, #24]
   155dc:	adds	r2, r2, #1
   155e0:	adc	r3, r3, #0
   155e4:	strd	r2, [r4, #24]
   155e8:	b	15570 <UnityConcludeTest@@Base+0x34>
   155ec:	ldr	r3, [r5, #24]
   155f0:	add	r3, r3, #1
   155f4:	str	r3, [r5, #24]
   155f8:	ldrd	r2, [r4, #32]
   155fc:	adds	r2, r2, #1
   15600:	adc	r3, r3, #0
   15604:	strd	r2, [r4, #32]
   15608:	b	15570 <UnityConcludeTest@@Base+0x34>
   1560c:	andeq	lr, r2, r8, lsl #10
   15610:	andeq	sp, r2, r8, asr r8
   15614:	muleq	r1, r4, r7

00015618 <UnityAssertBits@@Base>:
   15618:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1561c:	ldr	r4, [pc, #284]	; 15740 <UnityAssertBits@@Base+0x128>
   15620:	ldr	r5, [pc, #284]	; 15744 <UnityAssertBits@@Base+0x12c>
   15624:	ldrd	r6, [r4]
   15628:	ldr	ip, [r5, #32]
   1562c:	adds	r6, r6, #1
   15630:	adc	r7, r7, #0
   15634:	cmp	ip, #0
   15638:	strd	r6, [r4]
   1563c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   15640:	ldrd	r6, [r4, #8]
   15644:	ldr	ip, [r5, #36]	; 0x24
   15648:	adds	r6, r6, #1
   1564c:	adc	r7, r7, #0
   15650:	cmp	ip, #0
   15654:	strd	r6, [r4, #8]
   15658:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   1565c:	ldrd	r6, [r4, #16]
   15660:	eor	ip, r1, r2
   15664:	adds	r6, r6, #1
   15668:	adc	r7, r7, #0
   1566c:	tst	ip, r0
   15670:	strd	r6, [r4, #16]
   15674:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15678:	mov	r7, r3
   1567c:	mov	r8, r2
   15680:	ldrd	r2, [r4, #24]
   15684:	mov	r6, r0
   15688:	ldr	r0, [sp, #32]
   1568c:	adds	r2, r2, #1
   15690:	adc	r3, r3, #0
   15694:	mov	r9, r1
   15698:	strd	r2, [r4, #24]
   1569c:	bl	15240 <UnityPrint@@Base+0x34c>
   156a0:	ldrd	r2, [r4, #32]
   156a4:	ldr	r0, [pc, #156]	; 15748 <UnityAssertBits@@Base+0x130>
   156a8:	adds	r2, r2, #1
   156ac:	adc	r3, r3, #0
   156b0:	strd	r2, [r4, #32]
   156b4:	bl	14ef4 <UnityPrint@@Base>
   156b8:	ldrd	r0, [r4, #40]	; 0x28
   156bc:	adds	r0, r0, #1
   156c0:	adc	r1, r1, #0
   156c4:	strd	r0, [r4, #40]	; 0x28
   156c8:	mov	r1, r9
   156cc:	mov	r0, r6
   156d0:	bl	153f0 <UnityPrintMask@@Base>
   156d4:	ldrd	r2, [r4, #48]	; 0x30
   156d8:	ldr	r0, [pc, #108]	; 1574c <UnityAssertBits@@Base+0x134>
   156dc:	adds	r2, r2, #1
   156e0:	adc	r3, r3, #0
   156e4:	strd	r2, [r4, #48]	; 0x30
   156e8:	bl	14ef4 <UnityPrint@@Base>
   156ec:	ldrd	r2, [r4, #56]	; 0x38
   156f0:	mov	r1, r8
   156f4:	mov	r0, r6
   156f8:	adds	r2, r2, #1
   156fc:	adc	r3, r3, #0
   15700:	strd	r2, [r4, #56]	; 0x38
   15704:	bl	153f0 <UnityPrintMask@@Base>
   15708:	ldrd	r2, [r4, #64]	; 0x40
   1570c:	mov	r0, r7
   15710:	adds	r2, r2, #1
   15714:	adc	r3, r3, #0
   15718:	strd	r2, [r4, #64]	; 0x40
   1571c:	bl	1505c <UnityPrint@@Base+0x168>
   15720:	ldrd	r2, [r4, #72]	; 0x48
   15724:	mov	r1, #1
   15728:	add	r0, r5, #40	; 0x28
   1572c:	adds	r2, r2, #1
   15730:	adc	r3, r3, #0
   15734:	str	r1, [r5, #32]
   15738:	strd	r2, [r4, #72]	; 0x48
   1573c:	bl	11fc0 <longjmp@plt>
   15740:	andeq	sp, r2, r8, lsl #17
   15744:	andeq	lr, r2, r8, lsl #10
   15748:	andeq	fp, r1, r8, lsr #14
   1574c:	andeq	fp, r1, r8, lsr r7

00015750 <UnityAssertEqualNumber@@Base>:
   15750:	push	{r4, r5, r6, r7, r8, lr}
   15754:	mov	r8, r0
   15758:	ldr	r4, [pc, #272]	; 15870 <UnityAssertEqualNumber@@Base+0x120>
   1575c:	mov	r6, r2
   15760:	mov	r0, r3
   15764:	ldrd	r2, [r4]
   15768:	ldr	r5, [pc, #260]	; 15874 <UnityAssertEqualNumber@@Base+0x124>
   1576c:	adds	r2, r2, #1
   15770:	adc	r3, r3, #0
   15774:	strd	r2, [r4]
   15778:	ldr	r3, [r5, #32]
   1577c:	cmp	r3, #0
   15780:	popne	{r4, r5, r6, r7, r8, pc}
   15784:	ldrd	r2, [r4, #8]
   15788:	adds	r2, r2, #1
   1578c:	adc	r3, r3, #0
   15790:	strd	r2, [r4, #8]
   15794:	ldr	r3, [r5, #36]	; 0x24
   15798:	cmp	r3, #0
   1579c:	popne	{r4, r5, r6, r7, r8, pc}
   157a0:	ldrd	r2, [r4, #16]
   157a4:	adds	r2, r2, #1
   157a8:	adc	r3, r3, #0
   157ac:	cmp	r8, r1
   157b0:	strd	r2, [r4, #16]
   157b4:	popeq	{r4, r5, r6, r7, r8, pc}
   157b8:	ldrd	r2, [r4, #24]
   157bc:	mov	r7, r1
   157c0:	adds	r2, r2, #1
   157c4:	adc	r3, r3, #0
   157c8:	strd	r2, [r4, #24]
   157cc:	bl	15240 <UnityPrint@@Base+0x34c>
   157d0:	ldrd	r2, [r4, #32]
   157d4:	ldr	r0, [pc, #156]	; 15878 <UnityAssertEqualNumber@@Base+0x128>
   157d8:	adds	r2, r2, #1
   157dc:	adc	r3, r3, #0
   157e0:	strd	r2, [r4, #32]
   157e4:	bl	14ef4 <UnityPrint@@Base>
   157e8:	ldrd	r2, [r4, #40]	; 0x28
   157ec:	ldr	r1, [sp, #24]
   157f0:	mov	r0, r8
   157f4:	adds	r2, r2, #1
   157f8:	adc	r3, r3, #0
   157fc:	strd	r2, [r4, #40]	; 0x28
   15800:	bl	14ca8 <UnityPrintNumberByStyle@@Base>
   15804:	ldrd	r2, [r4, #48]	; 0x30
   15808:	ldr	r0, [pc, #108]	; 1587c <UnityAssertEqualNumber@@Base+0x12c>
   1580c:	adds	r2, r2, #1
   15810:	adc	r3, r3, #0
   15814:	strd	r2, [r4, #48]	; 0x30
   15818:	bl	14ef4 <UnityPrint@@Base>
   1581c:	ldrd	r2, [r4, #56]	; 0x38
   15820:	ldr	r1, [sp, #24]
   15824:	mov	r0, r7
   15828:	adds	r2, r2, #1
   1582c:	adc	r3, r3, #0
   15830:	strd	r2, [r4, #56]	; 0x38
   15834:	bl	14ca8 <UnityPrintNumberByStyle@@Base>
   15838:	ldrd	r0, [r4, #64]	; 0x40
   1583c:	adds	r0, r0, #1
   15840:	adc	r1, r1, #0
   15844:	strd	r0, [r4, #64]	; 0x40
   15848:	mov	r0, r6
   1584c:	bl	1505c <UnityPrint@@Base+0x168>
   15850:	ldrd	r2, [r4, #72]	; 0x48
   15854:	mov	r1, #1
   15858:	add	r0, r5, #40	; 0x28
   1585c:	adds	r2, r2, #1
   15860:	adc	r3, r3, #0
   15864:	str	r1, [r5, #32]
   15868:	strd	r2, [r4, #72]	; 0x48
   1586c:	bl	11fc0 <longjmp@plt>
   15870:	ldrdeq	sp, [r2], -r8
   15874:	andeq	lr, r2, r8, lsl #10
   15878:	andeq	fp, r1, r8, lsr #14
   1587c:	andeq	fp, r1, r8, lsr r7

00015880 <UnityAssertEqualIntArray@@Base>:
   15880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15884:	sub	sp, sp, #28
   15888:	ldr	r5, [pc, #1536]	; 15e90 <UnityAssertEqualIntArray@@Base+0x610>
   1588c:	ldr	r4, [sp, #68]	; 0x44
   15890:	str	r4, [sp]
   15894:	ldr	r4, [pc, #1528]	; 15e94 <UnityAssertEqualIntArray@@Base+0x614>
   15898:	ldrd	r6, [r4]
   1589c:	adds	sl, r6, #1
   158a0:	adc	fp, r7, #0
   158a4:	mov	r6, sl
   158a8:	mov	r7, fp
   158ac:	strd	r6, [r4]
   158b0:	ldr	r6, [r5, #32]
   158b4:	cmp	r6, #0
   158b8:	bne	15abc <UnityAssertEqualIntArray@@Base+0x23c>
   158bc:	ldrd	r6, [r4, #8]
   158c0:	adds	sl, r6, #1
   158c4:	adc	fp, r7, #0
   158c8:	mov	r6, sl
   158cc:	mov	r7, fp
   158d0:	strd	r6, [r4, #8]
   158d4:	ldr	r6, [r5, #36]	; 0x24
   158d8:	cmp	r6, #0
   158dc:	bne	15abc <UnityAssertEqualIntArray@@Base+0x23c>
   158e0:	cmp	r2, #0
   158e4:	str	r3, [sp, #4]
   158e8:	mov	sl, r2
   158ec:	mov	fp, r1
   158f0:	bne	1595c <UnityAssertEqualIntArray@@Base+0xdc>
   158f4:	ldrd	r2, [r4, #16]
   158f8:	adds	r0, r2, #1
   158fc:	adc	r1, r3, #0
   15900:	strd	r0, [r4, #16]
   15904:	ldr	r0, [sp, #64]	; 0x40
   15908:	bl	15240 <UnityPrint@@Base+0x34c>
   1590c:	ldrd	r2, [r4, #32]
   15910:	adds	r0, r2, #1
   15914:	adc	r1, r3, #0
   15918:	strd	r0, [r4, #32]
   1591c:	ldr	r0, [pc, #1396]	; 15e98 <UnityAssertEqualIntArray@@Base+0x618>
   15920:	bl	14ef4 <UnityPrint@@Base>
   15924:	ldrd	r2, [r4, #40]	; 0x28
   15928:	adds	r0, r2, #1
   1592c:	adc	r1, r3, #0
   15930:	strd	r0, [r4, #40]	; 0x28
   15934:	ldr	r0, [sp, #4]
   15938:	bl	1505c <UnityPrint@@Base+0x168>
   1593c:	ldrd	r2, [r4, #48]	; 0x30
   15940:	adds	r0, r2, #1
   15944:	adc	r1, r3, #0
   15948:	strd	r0, [r4, #48]	; 0x30
   1594c:	add	r0, r5, #40	; 0x28
   15950:	mov	r1, #1
   15954:	str	r1, [r5, #32]
   15958:	bl	11fc0 <longjmp@plt>
   1595c:	mov	r9, r4
   15960:	ldrd	r4, [r4, #24]
   15964:	ldr	r2, [sp, #64]	; 0x40
   15968:	mov	r8, r0
   1596c:	adds	r6, r4, #1
   15970:	adc	r7, r5, #0
   15974:	mov	r4, r6
   15978:	mov	r5, r7
   1597c:	strd	r4, [r9, #24]
   15980:	bl	152b8 <UnityPrint@@Base+0x3c4>
   15984:	ldrd	r2, [r9, #56]	; 0x38
   15988:	adds	r4, r2, #1
   1598c:	adc	r5, r3, #0
   15990:	strd	r4, [r9, #56]	; 0x38
   15994:	cmp	r0, #1
   15998:	beq	15abc <UnityAssertEqualIntArray@@Base+0x23c>
   1599c:	ldr	r3, [sp]
   159a0:	sub	r2, sl, #1
   159a4:	bic	r3, r3, #128	; 0x80
   159a8:	cmp	r3, #33	; 0x21
   159ac:	mov	sl, r2
   159b0:	beq	15a50 <UnityAssertEqualIntArray@@Base+0x1d0>
   159b4:	bhi	15a38 <UnityAssertEqualIntArray@@Base+0x1b8>
   159b8:	cmp	r3, #17
   159bc:	beq	15a50 <UnityAssertEqualIntArray@@Base+0x1d0>
   159c0:	cmp	r3, #18
   159c4:	bne	15ac4 <UnityAssertEqualIntArray@@Base+0x244>
   159c8:	ldrd	r2, [r9, #64]	; 0x40
   159cc:	ldrd	r6, [r9, #232]	; 0xe8
   159d0:	mov	ip, fp
   159d4:	adds	r0, r2, #1
   159d8:	adc	r1, r3, #0
   159dc:	mov	r4, sl
   159e0:	strd	r0, [r9, #64]	; 0x40
   159e4:	ldrd	r0, [r9, #240]	; 0xf0
   159e8:	mov	r3, #0
   159ec:	mov	r2, #1
   159f0:	subs	r6, r6, r0
   159f4:	sbc	r7, r7, r1
   159f8:	strd	r6, [sp, #16]
   159fc:	ldrd	r6, [sp, #16]
   15a00:	mov	fp, ip
   15a04:	mov	r5, r8
   15a08:	adds	r6, r6, r0
   15a0c:	adc	r7, r7, r1
   15a10:	cmn	r4, #1
   15a14:	strd	r6, [sp, #8]
   15a18:	bne	15c5c <UnityAssertEqualIntArray@@Base+0x3dc>
   15a1c:	cmp	r3, #0
   15a20:	ldrne	r3, [pc, #1132]	; 15e94 <UnityAssertEqualIntArray@@Base+0x614>
   15a24:	strdne	r0, [r3, #240]	; 0xf0
   15a28:	movne	r0, r6
   15a2c:	movne	r1, r7
   15a30:	strdne	r0, [r3, #232]	; 0xe8
   15a34:	b	15abc <UnityAssertEqualIntArray@@Base+0x23c>
   15a38:	cmp	r3, #65	; 0x41
   15a3c:	beq	15a50 <UnityAssertEqualIntArray@@Base+0x1d0>
   15a40:	cmp	r3, #66	; 0x42
   15a44:	beq	159c8 <UnityAssertEqualIntArray@@Base+0x148>
   15a48:	cmp	r3, #34	; 0x22
   15a4c:	b	159c4 <UnityAssertEqualIntArray@@Base+0x144>
   15a50:	ldrd	r2, [r9, #72]	; 0x48
   15a54:	ldrd	r6, [r9, #152]	; 0x98
   15a58:	mov	ip, fp
   15a5c:	adds	r0, r2, #1
   15a60:	adc	r1, r3, #0
   15a64:	mov	r4, sl
   15a68:	strd	r0, [r9, #72]	; 0x48
   15a6c:	ldrd	r0, [r9, #160]	; 0xa0
   15a70:	mov	r3, #0
   15a74:	mov	r2, #1
   15a78:	subs	r6, r6, r0
   15a7c:	sbc	r7, r7, r1
   15a80:	strd	r6, [sp, #16]
   15a84:	ldrd	r6, [sp, #16]
   15a88:	mov	fp, ip
   15a8c:	mov	r5, r8
   15a90:	adds	r6, r6, r0
   15a94:	adc	r7, r7, r1
   15a98:	cmn	r4, #1
   15a9c:	strd	r6, [sp, #8]
   15aa0:	bne	15b38 <UnityAssertEqualIntArray@@Base+0x2b8>
   15aa4:	cmp	r3, #0
   15aa8:	ldrne	r3, [pc, #996]	; 15e94 <UnityAssertEqualIntArray@@Base+0x614>
   15aac:	strdne	r0, [r3, #160]	; 0xa0
   15ab0:	movne	r0, r6
   15ab4:	movne	r1, r7
   15ab8:	strdne	r0, [r3, #152]	; 0x98
   15abc:	add	sp, sp, #28
   15ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ac4:	ldrd	r2, [r9, #80]	; 0x50
   15ac8:	mov	ip, fp
   15acc:	mov	r4, sl
   15ad0:	adds	r0, r2, #1
   15ad4:	adc	r1, r3, #0
   15ad8:	mov	lr, #0
   15adc:	strd	r0, [r9, #80]	; 0x50
   15ae0:	ldr	r1, [pc, #948]	; 15e9c <UnityAssertEqualIntArray@@Base+0x61c>
   15ae4:	ldrd	r2, [r1, #-8]
   15ae8:	ldrd	r0, [r1]
   15aec:	subs	r2, r2, r0
   15af0:	sbc	r3, r3, r1
   15af4:	strd	r2, [sp, #16]
   15af8:	mov	r3, #1
   15afc:	ldrd	r6, [sp, #16]
   15b00:	mov	fp, ip
   15b04:	mov	r5, r8
   15b08:	adds	r6, r6, r0
   15b0c:	adc	r7, r7, r1
   15b10:	cmn	r4, #1
   15b14:	strd	r6, [sp, #8]
   15b18:	bne	15d70 <UnityAssertEqualIntArray@@Base+0x4f0>
   15b1c:	cmp	lr, #0
   15b20:	ldrne	r3, [pc, #884]	; 15e9c <UnityAssertEqualIntArray@@Base+0x61c>
   15b24:	strdne	r0, [r3]
   15b28:	movne	r0, r6
   15b2c:	movne	r1, r7
   15b30:	strdne	r0, [r3, #-8]
   15b34:	b	15abc <UnityAssertEqualIntArray@@Base+0x23c>
   15b38:	sub	lr, r4, #1
   15b3c:	mov	r7, lr
   15b40:	ldrsb	r6, [fp]
   15b44:	ldrsb	lr, [r5]
   15b48:	adds	r0, r0, #1
   15b4c:	adc	r1, r1, #0
   15b50:	cmp	lr, r6
   15b54:	add	r8, r5, #1
   15b58:	add	ip, fp, #1
   15b5c:	beq	15c50 <UnityAssertEqualIntArray@@Base+0x3d0>
   15b60:	ldr	r2, [pc, #812]	; 15e94 <UnityAssertEqualIntArray@@Base+0x614>
   15b64:	cmp	r3, #0
   15b68:	strd	r0, [r2, #160]	; 0xa0
   15b6c:	ldrdne	r0, [sp, #8]
   15b70:	strdne	r0, [r2, #152]	; 0x98
   15b74:	ldr	r0, [sp, #64]	; 0x40
   15b78:	bl	15240 <UnityPrint@@Base+0x34c>
   15b7c:	ldrd	r2, [r9, #88]	; 0x58
   15b80:	adds	r0, r2, #1
   15b84:	adc	r1, r3, #0
   15b88:	strd	r0, [r9, #88]	; 0x58
   15b8c:	ldr	r0, [pc, #780]	; 15ea0 <UnityAssertEqualIntArray@@Base+0x620>
   15b90:	bl	14ef4 <UnityPrint@@Base>
   15b94:	ldrd	r2, [r9, #96]	; 0x60
   15b98:	adds	r0, r2, #1
   15b9c:	adc	r1, r3, #0
   15ba0:	strd	r0, [r9, #96]	; 0x60
   15ba4:	sub	r0, sl, r4
   15ba8:	bl	14aa0 <UnityPrintNumberUnsigned@@Base>
   15bac:	ldrd	r2, [r9, #104]	; 0x68
   15bb0:	adds	r0, r2, #1
   15bb4:	adc	r1, r3, #0
   15bb8:	strd	r0, [r9, #104]	; 0x68
   15bbc:	ldr	r0, [pc, #736]	; 15ea4 <UnityAssertEqualIntArray@@Base+0x624>
   15bc0:	bl	14ef4 <UnityPrint@@Base>
   15bc4:	ldrd	r2, [r9, #112]	; 0x70
   15bc8:	adds	r0, r2, #1
   15bcc:	adc	r1, r3, #0
   15bd0:	strd	r0, [r9, #112]	; 0x70
   15bd4:	ldr	r1, [sp]
   15bd8:	ldrsb	r0, [r5]
   15bdc:	bl	14ca8 <UnityPrintNumberByStyle@@Base>
   15be0:	ldrd	r2, [r9, #120]	; 0x78
   15be4:	adds	r0, r2, #1
   15be8:	adc	r1, r3, #0
   15bec:	strd	r0, [r9, #120]	; 0x78
   15bf0:	ldr	r0, [pc, #688]	; 15ea8 <UnityAssertEqualIntArray@@Base+0x628>
   15bf4:	bl	14ef4 <UnityPrint@@Base>
   15bf8:	ldrd	r2, [r9, #128]	; 0x80
   15bfc:	adds	r0, r2, #1
   15c00:	adc	r1, r3, #0
   15c04:	strd	r0, [r9, #128]	; 0x80
   15c08:	ldr	r1, [sp]
   15c0c:	ldrsb	r0, [fp]
   15c10:	bl	14ca8 <UnityPrintNumberByStyle@@Base>
   15c14:	ldrd	r2, [r9, #136]	; 0x88
   15c18:	adds	r0, r2, #1
   15c1c:	adc	r1, r3, #0
   15c20:	strd	r0, [r9, #136]	; 0x88
   15c24:	ldr	r0, [sp, #4]
   15c28:	bl	1505c <UnityPrint@@Base+0x168>
   15c2c:	ldrd	r2, [r9, #144]	; 0x90
   15c30:	adds	r0, r2, #1
   15c34:	adc	r1, r3, #0
   15c38:	strd	r0, [r9, #144]	; 0x90
   15c3c:	ldr	r0, [pc, #588]	; 15e90 <UnityAssertEqualIntArray@@Base+0x610>
   15c40:	mov	r1, #1
   15c44:	add	r0, r0, #40	; 0x28
   15c48:	str	r1, [r0, #-8]
   15c4c:	b	15958 <UnityAssertEqualIntArray@@Base+0xd8>
   15c50:	mov	r4, r7
   15c54:	mov	r3, r2
   15c58:	b	15a84 <UnityAssertEqualIntArray@@Base+0x204>
   15c5c:	sub	lr, r4, #1
   15c60:	mov	r7, lr
   15c64:	ldrsh	r6, [fp]
   15c68:	ldrsh	lr, [r5]
   15c6c:	adds	r0, r0, #1
   15c70:	adc	r1, r1, #0
   15c74:	cmp	lr, r6
   15c78:	add	r8, r5, #2
   15c7c:	add	ip, fp, #2
   15c80:	beq	15d64 <UnityAssertEqualIntArray@@Base+0x4e4>
   15c84:	ldr	r2, [pc, #520]	; 15e94 <UnityAssertEqualIntArray@@Base+0x614>
   15c88:	cmp	r3, #0
   15c8c:	strd	r0, [r2, #240]	; 0xf0
   15c90:	ldrdne	r0, [sp, #8]
   15c94:	strdne	r0, [r2, #232]	; 0xe8
   15c98:	ldr	r0, [sp, #64]	; 0x40
   15c9c:	bl	15240 <UnityPrint@@Base+0x34c>
   15ca0:	ldrd	r2, [r9, #168]	; 0xa8
   15ca4:	adds	r0, r2, #1
   15ca8:	adc	r1, r3, #0
   15cac:	strd	r0, [r9, #168]	; 0xa8
   15cb0:	ldr	r0, [pc, #488]	; 15ea0 <UnityAssertEqualIntArray@@Base+0x620>
   15cb4:	bl	14ef4 <UnityPrint@@Base>
   15cb8:	ldrd	r2, [r9, #176]	; 0xb0
   15cbc:	adds	r0, r2, #1
   15cc0:	adc	r1, r3, #0
   15cc4:	strd	r0, [r9, #176]	; 0xb0
   15cc8:	sub	r0, sl, r4
   15ccc:	bl	14aa0 <UnityPrintNumberUnsigned@@Base>
   15cd0:	ldrd	r2, [r9, #184]	; 0xb8
   15cd4:	adds	r0, r2, #1
   15cd8:	adc	r1, r3, #0
   15cdc:	strd	r0, [r9, #184]	; 0xb8
   15ce0:	ldr	r0, [pc, #444]	; 15ea4 <UnityAssertEqualIntArray@@Base+0x624>
   15ce4:	bl	14ef4 <UnityPrint@@Base>
   15ce8:	ldrd	r2, [r9, #192]	; 0xc0
   15cec:	adds	r0, r2, #1
   15cf0:	adc	r1, r3, #0
   15cf4:	strd	r0, [r9, #192]	; 0xc0
   15cf8:	ldr	r1, [sp]
   15cfc:	ldrsh	r0, [r5]
   15d00:	bl	14ca8 <UnityPrintNumberByStyle@@Base>
   15d04:	ldrd	r2, [r9, #200]	; 0xc8
   15d08:	adds	r0, r2, #1
   15d0c:	adc	r1, r3, #0
   15d10:	strd	r0, [r9, #200]	; 0xc8
   15d14:	ldr	r0, [pc, #396]	; 15ea8 <UnityAssertEqualIntArray@@Base+0x628>
   15d18:	bl	14ef4 <UnityPrint@@Base>
   15d1c:	ldrd	r2, [r9, #208]	; 0xd0
   15d20:	adds	r0, r2, #1
   15d24:	adc	r1, r3, #0
   15d28:	strd	r0, [r9, #208]	; 0xd0
   15d2c:	ldr	r1, [sp]
   15d30:	ldrsh	r0, [fp]
   15d34:	bl	14ca8 <UnityPrintNumberByStyle@@Base>
   15d38:	ldrd	r2, [r9, #216]	; 0xd8
   15d3c:	adds	r0, r2, #1
   15d40:	adc	r1, r3, #0
   15d44:	strd	r0, [r9, #216]	; 0xd8
   15d48:	ldr	r0, [sp, #4]
   15d4c:	bl	1505c <UnityPrint@@Base+0x168>
   15d50:	ldrd	r2, [r9, #224]	; 0xe0
   15d54:	adds	r0, r2, #1
   15d58:	adc	r1, r3, #0
   15d5c:	strd	r0, [r9, #224]	; 0xe0
   15d60:	b	15c3c <UnityAssertEqualIntArray@@Base+0x3bc>
   15d64:	mov	r4, r7
   15d68:	mov	r3, r2
   15d6c:	b	159fc <UnityAssertEqualIntArray@@Base+0x17c>
   15d70:	ldr	r6, [r5]
   15d74:	ldr	r7, [fp]
   15d78:	adds	r0, r0, #1
   15d7c:	adc	r1, r1, #0
   15d80:	cmp	r6, r7
   15d84:	add	r8, r5, #4
   15d88:	add	ip, fp, #4
   15d8c:	sub	r2, r4, #1
   15d90:	beq	15e84 <UnityAssertEqualIntArray@@Base+0x604>
   15d94:	ldr	r3, [pc, #256]	; 15e9c <UnityAssertEqualIntArray@@Base+0x61c>
   15d98:	cmp	lr, #0
   15d9c:	strd	r0, [r3]
   15da0:	ldrdne	r0, [sp, #8]
   15da4:	strdne	r0, [r3, #-8]
   15da8:	ldr	r0, [sp, #64]	; 0x40
   15dac:	bl	15240 <UnityPrint@@Base+0x34c>
   15db0:	ldrd	r2, [r9, #248]	; 0xf8
   15db4:	ldr	r8, [pc, #240]	; 15eac <UnityAssertEqualIntArray@@Base+0x62c>
   15db8:	adds	r0, r2, #1
   15dbc:	adc	r1, r3, #0
   15dc0:	strd	r0, [r9, #248]	; 0xf8
   15dc4:	ldr	r0, [pc, #212]	; 15ea0 <UnityAssertEqualIntArray@@Base+0x620>
   15dc8:	bl	14ef4 <UnityPrint@@Base>
   15dcc:	ldrd	r2, [r8]
   15dd0:	mov	r9, r8
   15dd4:	adds	r0, r2, #1
   15dd8:	adc	r1, r3, #0
   15ddc:	strd	r0, [r9], #16
   15de0:	sub	r0, sl, r4
   15de4:	bl	14aa0 <UnityPrintNumberUnsigned@@Base>
   15de8:	ldrd	r2, [r9, #-8]
   15dec:	add	r4, r8, #32
   15df0:	add	r8, r8, #48	; 0x30
   15df4:	adds	r0, r2, #1
   15df8:	adc	r1, r3, #0
   15dfc:	strd	r0, [r9, #-8]
   15e00:	ldr	r0, [pc, #156]	; 15ea4 <UnityAssertEqualIntArray@@Base+0x624>
   15e04:	bl	14ef4 <UnityPrint@@Base>
   15e08:	ldrd	r2, [r9]
   15e0c:	adds	r0, r2, #1
   15e10:	adc	r1, r3, #0
   15e14:	strd	r0, [r9]
   15e18:	ldr	r1, [sp]
   15e1c:	ldr	r0, [r5]
   15e20:	bl	14ca8 <UnityPrintNumberByStyle@@Base>
   15e24:	ldrd	r2, [r4, #-8]
   15e28:	adds	r0, r2, #1
   15e2c:	adc	r1, r3, #0
   15e30:	strd	r0, [r4, #-8]
   15e34:	ldr	r0, [pc, #108]	; 15ea8 <UnityAssertEqualIntArray@@Base+0x628>
   15e38:	bl	14ef4 <UnityPrint@@Base>
   15e3c:	ldrd	r2, [r4]
   15e40:	adds	r0, r2, #1
   15e44:	adc	r1, r3, #0
   15e48:	strd	r0, [r4]
   15e4c:	ldr	r1, [sp]
   15e50:	ldr	r0, [fp]
   15e54:	bl	14ca8 <UnityPrintNumberByStyle@@Base>
   15e58:	ldrd	r2, [r8, #-8]
   15e5c:	adds	r0, r2, #1
   15e60:	adc	r1, r3, #0
   15e64:	strd	r0, [r8, #-8]
   15e68:	ldr	r0, [sp, #4]
   15e6c:	bl	1505c <UnityPrint@@Base+0x168>
   15e70:	ldrd	r2, [r8]
   15e74:	adds	r0, r2, #1
   15e78:	adc	r1, r3, #0
   15e7c:	strd	r0, [r8]
   15e80:	b	15c3c <UnityAssertEqualIntArray@@Base+0x3bc>
   15e84:	mov	r4, r2
   15e88:	mov	lr, r3
   15e8c:	b	15afc <UnityAssertEqualIntArray@@Base+0x27c>
   15e90:	andeq	lr, r2, r8, lsl #10
   15e94:	andeq	sp, r2, r8, lsr #18
   15e98:	muleq	r1, r9, r7
   15e9c:	andeq	sp, r2, r8, ror #20
   15ea0:	ldrdeq	fp, [r1], -r0
   15ea4:	andeq	fp, r1, r8, lsr #14
   15ea8:	andeq	fp, r1, r8, lsr r7
   15eac:	andeq	sp, r2, r8, lsr #20

00015eb0 <UnityAssertEqualFloatArray@@Base>:
   15eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15eb4:	sub	sp, sp, #44	; 0x2c
   15eb8:	ldr	r4, [pc, #832]	; 16200 <UnityAssertEqualFloatArray@@Base+0x350>
   15ebc:	ldr	r5, [pc, #832]	; 16204 <UnityAssertEqualFloatArray@@Base+0x354>
   15ec0:	ldrd	r6, [r4, #-8]
   15ec4:	adds	r6, r6, #1
   15ec8:	adc	r7, r7, #0
   15ecc:	strd	r6, [r4, #-8]
   15ed0:	ldr	r6, [r5, #32]
   15ed4:	cmp	r6, #0
   15ed8:	bne	1605c <UnityAssertEqualFloatArray@@Base+0x1ac>
   15edc:	ldrd	r6, [r4]
   15ee0:	adds	r6, r6, #1
   15ee4:	adc	r7, r7, #0
   15ee8:	strd	r6, [r4]
   15eec:	ldr	r6, [r5, #36]	; 0x24
   15ef0:	cmp	r6, #0
   15ef4:	bne	1605c <UnityAssertEqualFloatArray@@Base+0x1ac>
   15ef8:	cmp	r2, #0
   15efc:	str	r3, [sp, #32]
   15f00:	mov	r7, r2
   15f04:	str	r0, [sp, #36]	; 0x24
   15f08:	bne	15f74 <UnityAssertEqualFloatArray@@Base+0xc4>
   15f0c:	ldrd	r2, [r4, #8]
   15f10:	ldr	r0, [sp, #80]	; 0x50
   15f14:	adds	r2, r2, #1
   15f18:	adc	r3, r3, #0
   15f1c:	strd	r2, [r4, #8]
   15f20:	bl	15240 <UnityPrint@@Base+0x34c>
   15f24:	ldrd	r2, [r4, #24]
   15f28:	ldr	r0, [pc, #728]	; 16208 <UnityAssertEqualFloatArray@@Base+0x358>
   15f2c:	adds	r2, r2, #1
   15f30:	adc	r3, r3, #0
   15f34:	strd	r2, [r4, #24]
   15f38:	bl	14ef4 <UnityPrint@@Base>
   15f3c:	ldrd	r2, [r4, #32]
   15f40:	ldr	r0, [sp, #32]
   15f44:	adds	r2, r2, #1
   15f48:	adc	r3, r3, #0
   15f4c:	strd	r2, [r4, #32]
   15f50:	bl	1505c <UnityPrint@@Base+0x168>
   15f54:	ldrd	r2, [r4, #40]	; 0x28
   15f58:	add	r0, r5, #40	; 0x28
   15f5c:	mov	r1, #1
   15f60:	adds	r2, r2, #1
   15f64:	adc	r3, r3, #0
   15f68:	str	r1, [r5, #32]
   15f6c:	strd	r2, [r4, #40]	; 0x28
   15f70:	bl	11fc0 <longjmp@plt>
   15f74:	ldrd	r8, [r4, #16]
   15f78:	ldr	r2, [sp, #80]	; 0x50
   15f7c:	mov	sl, r1
   15f80:	adds	r8, r8, #1
   15f84:	adc	r9, r9, #0
   15f88:	strd	r8, [r4, #16]
   15f8c:	bl	152b8 <UnityPrint@@Base+0x3c4>
   15f90:	ldrd	r2, [r4, #48]	; 0x30
   15f94:	adds	r2, r2, #1
   15f98:	adc	r3, r3, #0
   15f9c:	strd	r2, [r4, #48]	; 0x30
   15fa0:	cmp	r0, #1
   15fa4:	beq	1605c <UnityAssertEqualFloatArray@@Base+0x1ac>
   15fa8:	ldrd	r2, [r4, #56]	; 0x38
   15fac:	ldrd	r0, [r4, #128]	; 0x80
   15fb0:	ldrd	r8, [r4, #136]	; 0x88
   15fb4:	adds	r2, r2, #1
   15fb8:	adc	r3, r3, #0
   15fbc:	mvn	r5, #3
   15fc0:	strd	r2, [r4, #56]	; 0x38
   15fc4:	ldrd	r2, [r4, #64]	; 0x40
   15fc8:	vldr	s13, [pc, #552]	; 161f8 <UnityAssertEqualFloatArray@@Base+0x348>
   15fcc:	vldr	s12, [pc, #552]	; 161fc <UnityAssertEqualFloatArray@@Base+0x34c>
   15fd0:	strd	r2, [sp]
   15fd4:	ldrd	r2, [r4, #72]	; 0x48
   15fd8:	subs	r0, r0, r8
   15fdc:	sbc	r1, r1, r9
   15fe0:	strd	r2, [sp, #8]
   15fe4:	ldrd	r2, [r4, #80]	; 0x50
   15fe8:	mov	ip, sl
   15fec:	mov	r4, r7
   15ff0:	mul	r5, r5, r2
   15ff4:	mov	fp, r6
   15ff8:	mov	lr, r6
   15ffc:	strd	r0, [sp, #24]
   16000:	ldrd	r0, [sp, #24]
   16004:	sub	sl, r4, #1
   16008:	adds	r0, r0, r8
   1600c:	adc	r1, r1, r9
   16010:	cmp	r4, #0
   16014:	strd	r0, [sp, #16]
   16018:	bne	16064 <UnityAssertEqualFloatArray@@Base+0x1b4>
   1601c:	cmp	lr, #0
   16020:	ldrne	r1, [pc, #472]	; 16200 <UnityAssertEqualFloatArray@@Base+0x350>
   16024:	strdne	r8, [r1, #136]	; 0x88
   16028:	cmp	fp, #0
   1602c:	ldrne	r1, [pc, #460]	; 16200 <UnityAssertEqualFloatArray@@Base+0x350>
   16030:	ldrdne	r4, [sp]
   16034:	strdne	r4, [r1, #64]	; 0x40
   16038:	cmp	r6, #0
   1603c:	ldrne	r1, [pc, #444]	; 16200 <UnityAssertEqualFloatArray@@Base+0x350>
   16040:	ldrdne	r4, [sp, #8]
   16044:	strdne	r4, [r1, #72]	; 0x48
   16048:	cmp	lr, #0
   1604c:	ldrne	r1, [pc, #428]	; 16200 <UnityAssertEqualFloatArray@@Base+0x350>
   16050:	strdne	r2, [r1, #80]	; 0x50
   16054:	ldrdne	r2, [sp, #16]
   16058:	strdne	r2, [r1, #128]	; 0x80
   1605c:	add	sp, sp, #44	; 0x2c
   16060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16064:	ldr	r1, [sp, #36]	; 0x24
   16068:	add	r0, r5, r2, lsl #2
   1606c:	add	r0, r1, r0
   16070:	vldmia	ip!, {s14}
   16074:	vldr	s15, [r0]
   16078:	adds	r8, r8, #1
   1607c:	adc	r9, r9, #0
   16080:	vsub.f32	s14, s15, s14
   16084:	vcmpe.f32	s14, s13
   16088:	vmrs	APSR_nzcv, fpscr
   1608c:	bpl	160a8 <UnityAssertEqualFloatArray@@Base+0x1f8>
   16090:	vsub.f32	s14, s13, s14
   16094:	ldrd	r0, [sp]
   16098:	mov	fp, #1
   1609c:	adds	r0, r0, #1
   160a0:	adc	r1, r1, #0
   160a4:	strd	r0, [sp]
   160a8:	vmul.f32	s15, s15, s12
   160ac:	vcmpe.f32	s15, s13
   160b0:	vmrs	APSR_nzcv, fpscr
   160b4:	bpl	160d0 <UnityAssertEqualFloatArray@@Base+0x220>
   160b8:	vsub.f32	s15, s13, s15
   160bc:	ldrd	r0, [sp, #8]
   160c0:	mov	r6, #1
   160c4:	adds	r0, r0, #1
   160c8:	adc	r1, r1, #0
   160cc:	strd	r0, [sp, #8]
   160d0:	vmul.f32	s11, s14, s13
   160d4:	vcmp.f32	s11, s13
   160d8:	vmrs	APSR_nzcv, fpscr
   160dc:	beq	161a8 <UnityAssertEqualFloatArray@@Base+0x2f8>
   160e0:	ldr	r1, [pc, #280]	; 16200 <UnityAssertEqualFloatArray@@Base+0x350>
   160e4:	cmp	fp, #0
   160e8:	strd	r8, [r1, #136]	; 0x88
   160ec:	ldrdne	r4, [sp]
   160f0:	strdne	r4, [r1, #64]	; 0x40
   160f4:	cmp	r6, #0
   160f8:	ldrdne	r4, [sp, #8]
   160fc:	strdne	r4, [r1, #72]	; 0x48
   16100:	cmp	lr, #0
   16104:	beq	16114 <UnityAssertEqualFloatArray@@Base+0x264>
   16108:	strd	r2, [r1, #80]	; 0x50
   1610c:	ldrd	r2, [sp, #16]
   16110:	strd	r2, [r1, #128]	; 0x80
   16114:	ldr	r4, [pc, #228]	; 16200 <UnityAssertEqualFloatArray@@Base+0x350>
   16118:	ldr	r0, [sp, #80]	; 0x50
   1611c:	bl	15240 <UnityPrint@@Base+0x34c>
   16120:	ldrd	r2, [r4, #88]	; 0x58
   16124:	ldr	r0, [pc, #224]	; 1620c <UnityAssertEqualFloatArray@@Base+0x35c>
   16128:	adds	r2, r2, #1
   1612c:	adc	r3, r3, #0
   16130:	strd	r2, [r4, #88]	; 0x58
   16134:	bl	14ef4 <UnityPrint@@Base>
   16138:	ldrd	r2, [r4, #96]	; 0x60
   1613c:	sub	r0, r7, #1
   16140:	sub	r0, r0, sl
   16144:	adds	r2, r2, #1
   16148:	adc	r3, r3, #0
   1614c:	strd	r2, [r4, #96]	; 0x60
   16150:	bl	14aa0 <UnityPrintNumberUnsigned@@Base>
   16154:	ldrd	r2, [r4, #104]	; 0x68
   16158:	ldr	r0, [pc, #176]	; 16210 <UnityAssertEqualFloatArray@@Base+0x360>
   1615c:	adds	r2, r2, #1
   16160:	adc	r3, r3, #0
   16164:	strd	r2, [r4, #104]	; 0x68
   16168:	bl	14ef4 <UnityPrint@@Base>
   1616c:	ldrd	r2, [r4, #112]	; 0x70
   16170:	ldr	r0, [sp, #32]
   16174:	adds	r2, r2, #1
   16178:	adc	r3, r3, #0
   1617c:	strd	r2, [r4, #112]	; 0x70
   16180:	bl	1505c <UnityPrint@@Base+0x168>
   16184:	ldrd	r2, [r4, #120]	; 0x78
   16188:	ldr	r0, [pc, #116]	; 16204 <UnityAssertEqualFloatArray@@Base+0x354>
   1618c:	mov	r1, #1
   16190:	adds	r2, r2, #1
   16194:	adc	r3, r3, #0
   16198:	str	r1, [r0, #32]
   1619c:	strd	r2, [r4, #120]	; 0x78
   161a0:	add	r0, r0, #40	; 0x28
   161a4:	b	15f70 <UnityAssertEqualFloatArray@@Base+0xc0>
   161a8:	vcmpe.f32	s14, s15
   161ac:	adds	r2, r2, #1
   161b0:	adc	r3, r3, #0
   161b4:	mov	r4, sl
   161b8:	vmrs	APSR_nzcv, fpscr
   161bc:	ble	161f0 <UnityAssertEqualFloatArray@@Base+0x340>
   161c0:	ldr	r1, [pc, #56]	; 16200 <UnityAssertEqualFloatArray@@Base+0x350>
   161c4:	cmp	fp, #0
   161c8:	strd	r8, [r1, #136]	; 0x88
   161cc:	ldrdne	r4, [sp]
   161d0:	strdne	r4, [r1, #64]	; 0x40
   161d4:	cmp	r6, #0
   161d8:	ldrdne	r4, [sp, #8]
   161dc:	strdne	r4, [r1, #72]	; 0x48
   161e0:	cmp	lr, #0
   161e4:	strd	r2, [r1, #80]	; 0x50
   161e8:	beq	16114 <UnityAssertEqualFloatArray@@Base+0x264>
   161ec:	b	1610c <UnityAssertEqualFloatArray@@Base+0x25c>
   161f0:	mov	lr, #1
   161f4:	b	16000 <UnityAssertEqualFloatArray@@Base+0x150>
   161f8:	andeq	r0, r0, r0
   161fc:	strcc	ip, [r7, -ip, lsr #11]!
   16200:	andeq	sp, r2, r8, ror sl
   16204:	andeq	lr, r2, r8, lsl #10
   16208:	muleq	r1, r9, r7
   1620c:	ldrdeq	fp, [r1], -r0
   16210:	ldrdeq	fp, [r1], -sl

00016214 <UnityAssertFloatsWithin@@Base>:
   16214:	push	{r4, r5, r6, lr}
   16218:	ldr	r4, [pc, #304]	; 16350 <UnityAssertFloatsWithin@@Base+0x13c>
   1621c:	ldr	r5, [pc, #304]	; 16354 <UnityAssertFloatsWithin@@Base+0x140>
   16220:	ldrd	r2, [r4]
   16224:	adds	r2, r2, #1
   16228:	adc	r3, r3, #0
   1622c:	strd	r2, [r4]
   16230:	ldr	r3, [r5, #32]
   16234:	cmp	r3, #0
   16238:	popne	{r4, r5, r6, pc}
   1623c:	ldrd	r2, [r4, #8]
   16240:	adds	r2, r2, #1
   16244:	adc	r3, r3, #0
   16248:	strd	r2, [r4, #8]
   1624c:	ldr	r3, [r5, #36]	; 0x24
   16250:	cmp	r3, #0
   16254:	popne	{r4, r5, r6, pc}
   16258:	vsub.f32	s2, s2, s1
   1625c:	vldr	s15, [pc, #232]	; 1634c <UnityAssertFloatsWithin@@Base+0x138>
   16260:	ldrd	r2, [r4, #16]
   16264:	mov	r6, r0
   16268:	adds	r2, r2, #1
   1626c:	adc	r3, r3, #0
   16270:	vcmpe.f32	s2, s15
   16274:	strd	r2, [r4, #16]
   16278:	vmrs	APSR_nzcv, fpscr
   1627c:	bpl	16294 <UnityAssertFloatsWithin@@Base+0x80>
   16280:	vsub.f32	s2, s15, s2
   16284:	ldrd	r2, [r4, #24]
   16288:	adds	r2, r2, #1
   1628c:	adc	r3, r3, #0
   16290:	strd	r2, [r4, #24]
   16294:	vcmpe.f32	s0, s15
   16298:	vmrs	APSR_nzcv, fpscr
   1629c:	bpl	162b4 <UnityAssertFloatsWithin@@Base+0xa0>
   162a0:	vsub.f32	s0, s15, s0
   162a4:	ldrd	r2, [r4, #32]
   162a8:	adds	r2, r2, #1
   162ac:	adc	r3, r3, #0
   162b0:	strd	r2, [r4, #32]
   162b4:	vmul.f32	s14, s2, s15
   162b8:	vcmp.f32	s14, s15
   162bc:	vmrs	APSR_nzcv, fpscr
   162c0:	beq	1631c <UnityAssertFloatsWithin@@Base+0x108>
   162c4:	mov	r0, r1
   162c8:	bl	15240 <UnityPrint@@Base+0x34c>
   162cc:	ldrd	r2, [r4, #56]	; 0x38
   162d0:	ldr	r0, [pc, #128]	; 16358 <UnityAssertFloatsWithin@@Base+0x144>
   162d4:	adds	r2, r2, #1
   162d8:	adc	r3, r3, #0
   162dc:	strd	r2, [r4, #56]	; 0x38
   162e0:	bl	14ef4 <UnityPrint@@Base>
   162e4:	ldrd	r2, [r4, #64]	; 0x40
   162e8:	mov	r0, r6
   162ec:	adds	r2, r2, #1
   162f0:	adc	r3, r3, #0
   162f4:	strd	r2, [r4, #64]	; 0x40
   162f8:	bl	1505c <UnityPrint@@Base+0x168>
   162fc:	ldrd	r2, [r4, #72]	; 0x48
   16300:	mov	r1, #1
   16304:	ldr	r0, [pc, #80]	; 1635c <UnityAssertFloatsWithin@@Base+0x148>
   16308:	adds	r2, r2, #1
   1630c:	adc	r3, r3, #0
   16310:	str	r1, [r5, #32]
   16314:	strd	r2, [r4, #72]	; 0x48
   16318:	bl	11fc0 <longjmp@plt>
   1631c:	ldrd	r2, [r4, #40]	; 0x28
   16320:	vcmpe.f32	s2, s0
   16324:	adds	r2, r2, #1
   16328:	adc	r3, r3, #0
   1632c:	vmrs	APSR_nzcv, fpscr
   16330:	strd	r2, [r4, #40]	; 0x28
   16334:	bgt	162c4 <UnityAssertFloatsWithin@@Base+0xb0>
   16338:	ldrd	r2, [r4, #48]	; 0x30
   1633c:	adds	r2, r2, #1
   16340:	adc	r3, r3, #0
   16344:	strd	r2, [r4, #48]	; 0x30
   16348:	pop	{r4, r5, r6, pc}
   1634c:	andeq	r0, r0, r0
   16350:	andeq	sp, r2, r8, lsl #22
   16354:	andeq	lr, r2, r8, lsl #10
   16358:	ldrdeq	fp, [r1], -sl
   1635c:	andeq	lr, r2, r0, lsr r5

00016360 <UnityAssertFloatSpecial@@Base>:
   16360:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   16364:	mov	r7, r0
   16368:	ldr	r3, [pc, #876]	; 166dc <UnityAssertFloatSpecial@@Base+0x37c>
   1636c:	mov	lr, r1
   16370:	mov	r8, r2
   16374:	ldm	r3, {r0, r1, r2, r3}
   16378:	add	ip, sp, #16
   1637c:	ldr	r5, [pc, #860]	; 166e0 <UnityAssertFloatSpecial@@Base+0x380>
   16380:	ldr	r4, [pc, #860]	; 166e4 <UnityAssertFloatSpecial@@Base+0x384>
   16384:	stmdb	ip, {r0, r1, r2, r3}
   16388:	ldr	r3, [r5, #32]
   1638c:	cmp	r3, #0
   16390:	bne	166c4 <UnityAssertFloatSpecial@@Base+0x364>
   16394:	ldrd	r2, [r4]
   16398:	adds	r2, r2, #1
   1639c:	adc	r3, r3, #0
   163a0:	strd	r2, [r4]
   163a4:	ldr	r3, [r5, #36]	; 0x24
   163a8:	cmp	r3, #0
   163ac:	bne	166c4 <UnityAssertFloatSpecial@@Base+0x364>
   163b0:	mvn	r1, r8
   163b4:	lsr	r6, r8, #1
   163b8:	cmp	r8, #7
   163bc:	ldrls	pc, [pc, r8, lsl #2]
   163c0:	b	16688 <UnityAssertFloatSpecial@@Base+0x328>
   163c4:	andeq	r6, r1, r4, ror #7
   163c8:	andeq	r6, r1, r4, ror #7
   163cc:	andeq	r6, r1, r8, ror r5
   163d0:	andeq	r6, r1, r8, ror r5
   163d4:	andeq	r6, r1, r8, ror #11
   163d8:	andeq	r6, r1, r8, ror #11
   163dc:	andeq	r6, r1, ip, lsl #12
   163e0:	andeq	r6, r1, ip, lsl #12
   163e4:	vabs.f32	s15, s0
   163e8:	vldr	s14, [pc, #744]	; 166d8 <UnityAssertFloatSpecial@@Base+0x378>
   163ec:	vcmp.f32	s15, s14
   163f0:	vmrs	APSR_nzcv, fpscr
   163f4:	movle	r1, #0
   163f8:	ble	16430 <UnityAssertFloatSpecial@@Base+0xd0>
   163fc:	ldrd	r2, [r4, #8]
   16400:	adds	r2, r2, #1
   16404:	adc	r3, r3, #0
   16408:	strd	r2, [r4, #8]
   1640c:	vmov	r3, s0
   16410:	cmp	r3, #0
   16414:	mvnlt	r1, #0
   16418:	blt	16430 <UnityAssertFloatSpecial@@Base+0xd0>
   1641c:	ldrd	r2, [r4, #16]
   16420:	mov	r1, #1
   16424:	adds	r2, r2, #1
   16428:	adc	r3, r3, #0
   1642c:	strd	r2, [r4, #16]
   16430:	vcmpe.f32	s0, #0.0
   16434:	ldrd	r2, [r4, #24]
   16438:	vmrs	APSR_nzcv, fpscr
   1643c:	movle	r1, #0
   16440:	andgt	r1, r1, #1
   16444:	adds	r2, r2, #1
   16448:	adc	r3, r3, #0
   1644c:	strd	r2, [r4, #24]
   16450:	and	r8, r8, #1
   16454:	cmp	r1, r8
   16458:	beq	166ac <UnityAssertFloatSpecial@@Base+0x34c>
   1645c:	ldrd	r2, [r4, #96]	; 0x60
   16460:	mov	r0, lr
   16464:	adds	r2, r2, #1
   16468:	adc	r3, r3, #0
   1646c:	strd	r2, [r4, #96]	; 0x60
   16470:	bl	15240 <UnityPrint@@Base+0x34c>
   16474:	ldrd	r2, [r4, #104]	; 0x68
   16478:	ldr	r0, [pc, #616]	; 166e8 <UnityAssertFloatSpecial@@Base+0x388>
   1647c:	adds	r2, r2, #1
   16480:	adc	r3, r3, #0
   16484:	strd	r2, [r4, #104]	; 0x68
   16488:	bl	14ef4 <UnityPrint@@Base>
   1648c:	ldrd	r2, [r4, #112]	; 0x70
   16490:	adds	r2, r2, #1
   16494:	adc	r3, r3, #0
   16498:	cmp	r8, #0
   1649c:	strd	r2, [r4, #112]	; 0x70
   164a0:	bne	164cc <UnityAssertFloatSpecial@@Base+0x16c>
   164a4:	ldrd	r2, [r4, #120]	; 0x78
   164a8:	ldr	r0, [pc, #572]	; 166ec <UnityAssertFloatSpecial@@Base+0x38c>
   164ac:	adds	r2, r2, #1
   164b0:	adc	r3, r3, #0
   164b4:	strd	r2, [r4, #120]	; 0x78
   164b8:	bl	14ef4 <UnityPrint@@Base>
   164bc:	ldrd	r2, [r4, #128]	; 0x80
   164c0:	adds	r2, r2, #1
   164c4:	adc	r3, r3, #0
   164c8:	strd	r2, [r4, #128]	; 0x80
   164cc:	add	r3, sp, #16
   164d0:	add	r6, r3, r6, lsl #2
   164d4:	ldr	r6, [r6, #-16]
   164d8:	mov	r0, r6
   164dc:	bl	14ef4 <UnityPrint@@Base>
   164e0:	ldrd	r2, [r4, #136]	; 0x88
   164e4:	ldr	r0, [pc, #516]	; 166f0 <UnityAssertFloatSpecial@@Base+0x390>
   164e8:	adds	r2, r2, #1
   164ec:	adc	r3, r3, #0
   164f0:	strd	r2, [r4, #136]	; 0x88
   164f4:	bl	14ef4 <UnityPrint@@Base>
   164f8:	ldrd	r2, [r4, #144]	; 0x90
   164fc:	adds	r2, r2, #1
   16500:	adc	r3, r3, #0
   16504:	cmp	r8, #0
   16508:	strd	r2, [r4, #144]	; 0x90
   1650c:	beq	16538 <UnityAssertFloatSpecial@@Base+0x1d8>
   16510:	ldrd	r2, [r4, #152]	; 0x98
   16514:	ldr	r0, [pc, #464]	; 166ec <UnityAssertFloatSpecial@@Base+0x38c>
   16518:	adds	r2, r2, #1
   1651c:	adc	r3, r3, #0
   16520:	strd	r2, [r4, #152]	; 0x98
   16524:	bl	14ef4 <UnityPrint@@Base>
   16528:	ldrd	r2, [r4, #160]	; 0xa0
   1652c:	adds	r2, r2, #1
   16530:	adc	r3, r3, #0
   16534:	strd	r2, [r4, #160]	; 0xa0
   16538:	mov	r0, r6
   1653c:	bl	14ef4 <UnityPrint@@Base>
   16540:	ldrd	r2, [r4, #168]	; 0xa8
   16544:	mov	r0, r7
   16548:	adds	r2, r2, #1
   1654c:	adc	r3, r3, #0
   16550:	strd	r2, [r4, #168]	; 0xa8
   16554:	bl	1505c <UnityPrint@@Base+0x168>
   16558:	ldrd	r2, [r4, #176]	; 0xb0
   1655c:	mov	r1, #1
   16560:	ldr	r0, [pc, #396]	; 166f4 <UnityAssertFloatSpecial@@Base+0x394>
   16564:	adds	r2, r2, #1
   16568:	adc	r3, r3, #0
   1656c:	str	r1, [r5, #32]
   16570:	strd	r2, [r4, #176]	; 0xb0
   16574:	bl	11fc0 <longjmp@plt>
   16578:	vabs.f32	s15, s0
   1657c:	vldr	s14, [pc, #340]	; 166d8 <UnityAssertFloatSpecial@@Base+0x378>
   16580:	vcmp.f32	s15, s14
   16584:	vmrs	APSR_nzcv, fpscr
   16588:	movle	r1, #0
   1658c:	ble	165c4 <UnityAssertFloatSpecial@@Base+0x264>
   16590:	ldrd	r2, [r4, #32]
   16594:	adds	r2, r2, #1
   16598:	adc	r3, r3, #0
   1659c:	strd	r2, [r4, #32]
   165a0:	vmov	r3, s0
   165a4:	cmp	r3, #0
   165a8:	mvnlt	r1, #0
   165ac:	blt	165c4 <UnityAssertFloatSpecial@@Base+0x264>
   165b0:	ldrd	r2, [r4, #40]	; 0x28
   165b4:	mov	r1, #1
   165b8:	adds	r2, r2, #1
   165bc:	adc	r3, r3, #0
   165c0:	strd	r2, [r4, #40]	; 0x28
   165c4:	vcmpe.f32	s0, #0.0
   165c8:	ldrd	r2, [r4, #48]	; 0x30
   165cc:	vmrs	APSR_nzcv, fpscr
   165d0:	movpl	r1, #0
   165d4:	andmi	r1, r1, #1
   165d8:	adds	r2, r2, #1
   165dc:	adc	r3, r3, #0
   165e0:	strd	r2, [r4, #48]	; 0x30
   165e4:	b	16450 <UnityAssertFloatSpecial@@Base+0xf0>
   165e8:	vcmp.f32	s0, s0
   165ec:	ldrd	r2, [r4, #56]	; 0x38
   165f0:	vmrs	APSR_nzcv, fpscr
   165f4:	movvs	r1, #1
   165f8:	movvc	r1, #0
   165fc:	adds	r2, r2, #1
   16600:	adc	r3, r3, #0
   16604:	strd	r2, [r4, #56]	; 0x38
   16608:	b	16450 <UnityAssertFloatSpecial@@Base+0xf0>
   1660c:	vabs.f32	s15, s0
   16610:	vldr	s14, [pc, #192]	; 166d8 <UnityAssertFloatSpecial@@Base+0x378>
   16614:	vcmp.f32	s15, s14
   16618:	vmrs	APSR_nzcv, fpscr
   1661c:	movle	r3, #0
   16620:	ble	16658 <UnityAssertFloatSpecial@@Base+0x2f8>
   16624:	ldrd	r2, [r4, #64]	; 0x40
   16628:	adds	r2, r2, #1
   1662c:	adc	r3, r3, #0
   16630:	strd	r2, [r4, #64]	; 0x40
   16634:	vmov	r3, s0
   16638:	cmp	r3, #0
   1663c:	mvnlt	r3, #0
   16640:	blt	16658 <UnityAssertFloatSpecial@@Base+0x2f8>
   16644:	ldrd	r2, [r4, #72]	; 0x48
   16648:	adds	r2, r2, #1
   1664c:	adc	r3, r3, #0
   16650:	strd	r2, [r4, #72]	; 0x48
   16654:	mov	r3, #1
   16658:	vcmp.f32	s0, s0
   1665c:	vmrs	APSR_nzcv, fpscr
   16660:	orrvs	r3, r3, #1
   16664:	cmp	r3, #0
   16668:	movne	r1, #0
   1666c:	bne	16450 <UnityAssertFloatSpecial@@Base+0xf0>
   16670:	ldrd	r2, [r4, #80]	; 0x50
   16674:	mov	r1, #1
   16678:	adds	r2, r2, #1
   1667c:	adc	r3, r3, #0
   16680:	strd	r2, [r4, #80]	; 0x50
   16684:	b	16450 <UnityAssertFloatSpecial@@Base+0xf0>
   16688:	ldr	r3, [pc, #104]	; 166f8 <UnityAssertFloatSpecial@@Base+0x398>
   1668c:	and	r1, r1, #1
   16690:	str	r3, [sp]
   16694:	ldrd	r2, [r4, #88]	; 0x58
   16698:	mov	r6, #0
   1669c:	adds	r2, r2, #1
   166a0:	adc	r3, r3, #0
   166a4:	strd	r2, [r4, #88]	; 0x58
   166a8:	b	16450 <UnityAssertFloatSpecial@@Base+0xf0>
   166ac:	ldrd	r2, [r4, #184]	; 0xb8
   166b0:	adds	r2, r2, #1
   166b4:	adc	r3, r3, #0
   166b8:	strd	r2, [r4, #184]	; 0xb8
   166bc:	add	sp, sp, #16
   166c0:	pop	{r4, r5, r6, r7, r8, pc}
   166c4:	ldrd	r2, [r4, #192]	; 0xc0
   166c8:	adds	r2, r2, #1
   166cc:	adc	r3, r3, #0
   166d0:	strd	r2, [r4, #192]	; 0xc0
   166d4:	b	166bc <UnityAssertFloatSpecial@@Base+0x35c>
   166d8:	svcvc	0x007fffff
   166dc:	strdeq	fp, [r1], -r4
   166e0:	andeq	lr, r2, r8, lsl #10
   166e4:	andeq	sp, r2, r8, asr fp
   166e8:	andeq	fp, r1, r8, lsr #14
   166ec:	andeq	fp, r1, r8, lsl r8
   166f0:	andeq	fp, r1, r8, lsr r7
   166f4:	andeq	lr, r2, r0, lsr r5
   166f8:	andeq	fp, r1, r4, lsl #16

000166fc <UnityAssertNumbersWithin@@Base>:
   166fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16700:	ldr	r4, [pc, #504]	; 16900 <UnityAssertNumbersWithin@@Base+0x204>
   16704:	ldr	r5, [pc, #504]	; 16904 <UnityAssertNumbersWithin@@Base+0x208>
   16708:	ldr	r8, [sp, #36]	; 0x24
   1670c:	ldrd	r6, [r4, #-8]
   16710:	ldr	ip, [r5, #32]
   16714:	adds	r6, r6, #1
   16718:	adc	r7, r7, #0
   1671c:	cmp	ip, #0
   16720:	strd	r6, [r4, #-8]
   16724:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   16728:	ldrd	r6, [r4]
   1672c:	ldr	ip, [r5, #36]	; 0x24
   16730:	adds	r6, r6, #1
   16734:	adc	r7, r7, #0
   16738:	cmp	ip, #0
   1673c:	strd	r6, [r4]
   16740:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   16744:	tst	r8, #16
   16748:	beq	168a8 <UnityAssertNumbersWithin@@Base+0x1ac>
   1674c:	cmp	r2, r1
   16750:	ble	16880 <UnityAssertNumbersWithin@@Base+0x184>
   16754:	ldrd	r6, [r4, #8]
   16758:	sub	ip, r2, r1
   1675c:	cmp	r0, ip
   16760:	movcs	ip, #0
   16764:	movcc	ip, #1
   16768:	adds	r6, r6, #1
   1676c:	adc	r7, r7, #0
   16770:	str	ip, [r5, #32]
   16774:	strd	r6, [r4, #8]
   16778:	ldr	ip, [r5, #32]
   1677c:	cmp	ip, #0
   16780:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16784:	mov	r6, r3
   16788:	mov	r7, r2
   1678c:	ldrd	r2, [r4, #40]	; 0x28
   16790:	mov	sl, r0
   16794:	ldr	r0, [sp, #32]
   16798:	adds	r2, r2, #1
   1679c:	adc	r3, r3, #0
   167a0:	mov	r9, r1
   167a4:	strd	r2, [r4, #40]	; 0x28
   167a8:	bl	15240 <UnityPrint@@Base+0x34c>
   167ac:	ldrd	r2, [r4, #48]	; 0x30
   167b0:	ldr	r0, [pc, #336]	; 16908 <UnityAssertNumbersWithin@@Base+0x20c>
   167b4:	adds	r2, r2, #1
   167b8:	adc	r3, r3, #0
   167bc:	strd	r2, [r4, #48]	; 0x30
   167c0:	bl	14ef4 <UnityPrint@@Base>
   167c4:	ldrd	r2, [r4, #56]	; 0x38
   167c8:	mov	r1, r8
   167cc:	mov	r0, sl
   167d0:	adds	r2, r2, #1
   167d4:	adc	r3, r3, #0
   167d8:	strd	r2, [r4, #56]	; 0x38
   167dc:	bl	14ca8 <UnityPrintNumberByStyle@@Base>
   167e0:	ldrd	r2, [r4, #64]	; 0x40
   167e4:	ldr	r0, [pc, #288]	; 1690c <UnityAssertNumbersWithin@@Base+0x210>
   167e8:	adds	r2, r2, #1
   167ec:	adc	r3, r3, #0
   167f0:	strd	r2, [r4, #64]	; 0x40
   167f4:	bl	14ef4 <UnityPrint@@Base>
   167f8:	ldrd	r2, [r4, #72]	; 0x48
   167fc:	mov	r1, r8
   16800:	mov	r0, r9
   16804:	adds	r2, r2, #1
   16808:	adc	r3, r3, #0
   1680c:	strd	r2, [r4, #72]	; 0x48
   16810:	bl	14ca8 <UnityPrintNumberByStyle@@Base>
   16814:	ldrd	r2, [r4, #80]	; 0x50
   16818:	ldr	r0, [pc, #240]	; 16910 <UnityAssertNumbersWithin@@Base+0x214>
   1681c:	adds	r2, r2, #1
   16820:	adc	r3, r3, #0
   16824:	strd	r2, [r4, #80]	; 0x50
   16828:	bl	14ef4 <UnityPrint@@Base>
   1682c:	ldrd	r0, [r4, #88]	; 0x58
   16830:	adds	r0, r0, #1
   16834:	adc	r1, r1, #0
   16838:	strd	r0, [r4, #88]	; 0x58
   1683c:	mov	r1, r8
   16840:	mov	r0, r7
   16844:	bl	14ca8 <UnityPrintNumberByStyle@@Base>
   16848:	ldrd	r2, [r4, #96]	; 0x60
   1684c:	mov	r0, r6
   16850:	adds	r2, r2, #1
   16854:	adc	r3, r3, #0
   16858:	strd	r2, [r4, #96]	; 0x60
   1685c:	bl	1505c <UnityPrint@@Base+0x168>
   16860:	ldrd	r2, [r4, #104]	; 0x68
   16864:	mov	r1, #1
   16868:	ldr	r0, [pc, #164]	; 16914 <UnityAssertNumbersWithin@@Base+0x218>
   1686c:	adds	r2, r2, #1
   16870:	adc	r3, r3, #0
   16874:	str	r1, [r5, #32]
   16878:	strd	r2, [r4, #104]	; 0x68
   1687c:	bl	11fc0 <longjmp@plt>
   16880:	ldrd	r6, [r4, #16]
   16884:	sub	ip, r1, r2
   16888:	cmp	ip, r0
   1688c:	movls	ip, #0
   16890:	movhi	ip, #1
   16894:	adds	r6, r6, #1
   16898:	adc	r7, r7, #0
   1689c:	str	ip, [r5, #32]
   168a0:	strd	r6, [r4, #16]
   168a4:	b	16778 <UnityAssertNumbersWithin@@Base+0x7c>
   168a8:	cmp	r2, r1
   168ac:	bls	168d8 <UnityAssertNumbersWithin@@Base+0x1dc>
   168b0:	ldrd	r6, [r4, #24]
   168b4:	sub	ip, r2, r1
   168b8:	cmp	r0, ip
   168bc:	movcs	ip, #0
   168c0:	movcc	ip, #1
   168c4:	adds	r6, r6, #1
   168c8:	adc	r7, r7, #0
   168cc:	str	ip, [r5, #32]
   168d0:	strd	r6, [r4, #24]
   168d4:	b	16778 <UnityAssertNumbersWithin@@Base+0x7c>
   168d8:	ldrd	r6, [r4, #32]
   168dc:	sub	ip, r1, r2
   168e0:	cmp	r0, ip
   168e4:	movcs	ip, #0
   168e8:	movcc	ip, #1
   168ec:	adds	r6, r6, #1
   168f0:	adc	r7, r7, #0
   168f4:	str	ip, [r5, #32]
   168f8:	strd	r6, [r4, #32]
   168fc:	b	16778 <UnityAssertNumbersWithin@@Base+0x7c>
   16900:	andeq	sp, r2, r8, lsr #24
   16904:	andeq	lr, r2, r8, lsl #10
   16908:	ldrdeq	fp, [r1], -sl
   1690c:	andeq	fp, r1, r8, lsr #14
   16910:	andeq	fp, r1, r8, lsr r7
   16914:	andeq	lr, r2, r0, lsr r5

00016918 <UnityAssertEqualString@@Base>:
   16918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1691c:	sub	sp, sp, #20
   16920:	ldr	r4, [pc, #464]	; 16af8 <UnityAssertEqualString@@Base+0x1e0>
   16924:	stm	sp, {r2, r3}
   16928:	ldr	r5, [pc, #460]	; 16afc <UnityAssertEqualString@@Base+0x1e4>
   1692c:	ldrd	r2, [r4]
   16930:	adds	r2, r2, #1
   16934:	adc	r3, r3, #0
   16938:	strd	r2, [r4]
   1693c:	ldr	r3, [r5, #32]
   16940:	cmp	r3, #0
   16944:	bne	169d8 <UnityAssertEqualString@@Base+0xc0>
   16948:	ldrd	r2, [r4, #8]
   1694c:	ldr	r6, [r5, #36]	; 0x24
   16950:	adds	r2, r2, #1
   16954:	adc	r3, r3, #0
   16958:	cmp	r6, #0
   1695c:	strd	r2, [r4, #8]
   16960:	bne	169d8 <UnityAssertEqualString@@Base+0xc0>
   16964:	cmp	r0, #0
   16968:	cmpne	r1, #0
   1696c:	movne	r7, #1
   16970:	moveq	r7, #0
   16974:	beq	16ac4 <UnityAssertEqualString@@Base+0x1ac>
   16978:	ldrd	r2, [r4, #24]
   1697c:	ldrd	sl, [r4, #48]	; 0x30
   16980:	ldrd	r8, [r4, #40]	; 0x28
   16984:	adds	r2, r2, #1
   16988:	adc	r3, r3, #0
   1698c:	sub	lr, r0, #1
   16990:	strd	r2, [r4, #24]
   16994:	mov	r5, r1
   16998:	mov	r3, r6
   1699c:	mov	r2, r6
   169a0:	ldrb	r6, [lr, #1]!
   169a4:	str	r8, [sp, #8]
   169a8:	str	r9, [sp, #12]
   169ac:	cmp	r6, #0
   169b0:	bne	169e4 <UnityAssertEqualString@@Base+0xcc>
   169b4:	ldrb	r3, [r5]
   169b8:	adds	sl, sl, #1
   169bc:	adc	fp, fp, #0
   169c0:	cmp	r3, #0
   169c4:	bne	169e0 <UnityAssertEqualString@@Base+0xc8>
   169c8:	cmp	r2, #0
   169cc:	ldr	r3, [pc, #292]	; 16af8 <UnityAssertEqualString@@Base+0x1e0>
   169d0:	strdne	r8, [r3, #40]	; 0x28
   169d4:	strd	sl, [r3, #48]	; 0x30
   169d8:	add	sp, sp, #20
   169dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169e0:	mov	r3, r7
   169e4:	ldrb	ip, [r5], #1
   169e8:	adds	r8, r8, #1
   169ec:	adc	r9, r9, #0
   169f0:	cmp	r6, ip
   169f4:	beq	16abc <UnityAssertEqualString@@Base+0x1a4>
   169f8:	cmp	r2, #0
   169fc:	ldr	r2, [pc, #244]	; 16af8 <UnityAssertEqualString@@Base+0x1e0>
   16a00:	ldrne	ip, [sp, #8]
   16a04:	strne	ip, [r2, #40]	; 0x28
   16a08:	ldrne	ip, [sp, #12]
   16a0c:	strne	ip, [r2, #44]	; 0x2c
   16a10:	cmp	r3, #0
   16a14:	strdne	sl, [r2, #48]	; 0x30
   16a18:	ldr	r3, [pc, #220]	; 16afc <UnityAssertEqualString@@Base+0x1e4>
   16a1c:	mov	r2, #1
   16a20:	str	r2, [r3, #32]
   16a24:	ldrd	r2, [r4, #32]
   16a28:	adds	r2, r2, #1
   16a2c:	adc	r3, r3, #0
   16a30:	strd	r2, [r4, #32]
   16a34:	ldr	r5, [pc, #192]	; 16afc <UnityAssertEqualString@@Base+0x1e4>
   16a38:	ldr	r3, [r5, #32]
   16a3c:	cmp	r3, #0
   16a40:	beq	169d8 <UnityAssertEqualString@@Base+0xc0>
   16a44:	ldrd	r2, [r4, #64]	; 0x40
   16a48:	ldm	sp, {r6, ip}
   16a4c:	mov	r7, r0
   16a50:	adds	r2, r2, #1
   16a54:	adc	r3, r3, #0
   16a58:	mov	r0, ip
   16a5c:	mov	r8, r1
   16a60:	strd	r2, [r4, #64]	; 0x40
   16a64:	bl	15240 <UnityPrint@@Base+0x34c>
   16a68:	ldrd	r2, [r4, #72]	; 0x48
   16a6c:	mov	r1, r8
   16a70:	mov	r0, r7
   16a74:	adds	r2, r2, #1
   16a78:	adc	r3, r3, #0
   16a7c:	strd	r2, [r4, #72]	; 0x48
   16a80:	bl	1214c <close@plt+0xc>
   16a84:	ldrd	r0, [r4, #80]	; 0x50
   16a88:	adds	r0, r0, #1
   16a8c:	adc	r1, r1, #0
   16a90:	strd	r0, [r4, #80]	; 0x50
   16a94:	mov	r0, r6
   16a98:	bl	1505c <UnityPrint@@Base+0x168>
   16a9c:	ldrd	r2, [r4, #88]	; 0x58
   16aa0:	mov	r1, #1
   16aa4:	add	r0, r5, #40	; 0x28
   16aa8:	adds	r2, r2, #1
   16aac:	adc	r3, r3, #0
   16ab0:	str	r1, [r5, #32]
   16ab4:	strd	r2, [r4, #88]	; 0x58
   16ab8:	bl	11fc0 <longjmp@plt>
   16abc:	mov	r2, r7
   16ac0:	b	169a0 <UnityAssertEqualString@@Base+0x88>
   16ac4:	ldrd	r2, [r4, #16]
   16ac8:	adds	r2, r2, #1
   16acc:	adc	r3, r3, #0
   16ad0:	cmp	r0, r1
   16ad4:	strd	r2, [r4, #16]
   16ad8:	beq	169d8 <UnityAssertEqualString@@Base+0xc0>
   16adc:	mov	r3, #1
   16ae0:	str	r3, [r5, #32]
   16ae4:	ldrd	r2, [r4, #56]	; 0x38
   16ae8:	adds	r2, r2, #1
   16aec:	adc	r3, r3, #0
   16af0:	strd	r2, [r4, #56]	; 0x38
   16af4:	b	16a34 <UnityAssertEqualString@@Base+0x11c>
   16af8:	muleq	r2, r8, ip
   16afc:	andeq	lr, r2, r8, lsl #10

00016b00 <UnityAssertEqualStringLen@@Base>:
   16b00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b04:	sub	sp, sp, #28
   16b08:	ldr	lr, [pc, #872]	; 16e78 <UnityAssertEqualStringLen@@Base+0x378>
   16b0c:	str	r2, [sp, #4]
   16b10:	str	r3, [sp, #12]
   16b14:	ldrd	r2, [lr]
   16b18:	ldr	r5, [pc, #860]	; 16e7c <UnityAssertEqualStringLen@@Base+0x37c>
   16b1c:	adds	r2, r2, #1
   16b20:	adc	r3, r3, #0
   16b24:	strd	r2, [lr]
   16b28:	ldr	r3, [r5, #32]
   16b2c:	cmp	r3, #0
   16b30:	bne	16de4 <UnityAssertEqualStringLen@@Base+0x2e4>
   16b34:	ldrd	r2, [lr, #8]
   16b38:	ldr	r6, [r5, #36]	; 0x24
   16b3c:	adds	r2, r2, #1
   16b40:	adc	r3, r3, #0
   16b44:	cmp	r6, #0
   16b48:	strd	r2, [lr, #8]
   16b4c:	bne	16de4 <UnityAssertEqualStringLen@@Base+0x2e4>
   16b50:	cmp	r0, #0
   16b54:	cmpne	r1, #0
   16b58:	movne	r7, #1
   16b5c:	moveq	r7, #0
   16b60:	beq	16dec <UnityAssertEqualStringLen@@Base+0x2ec>
   16b64:	ldrd	r2, [lr, #24]
   16b68:	ldrd	sl, [lr, #48]	; 0x30
   16b6c:	sub	ip, r0, #1
   16b70:	adds	r2, r2, #1
   16b74:	adc	r3, r3, #0
   16b78:	str	ip, [sp]
   16b7c:	strd	r2, [lr, #24]
   16b80:	ldrd	r2, [lr, #32]
   16b84:	ldr	ip, [sp, #4]
   16b88:	ldrd	r8, [lr, #40]	; 0x28
   16b8c:	subs	r2, r2, sl
   16b90:	sbc	r3, r3, fp
   16b94:	mov	r5, r1
   16b98:	mov	lr, r6
   16b9c:	add	ip, r1, ip
   16ba0:	str	ip, [sp, #8]
   16ba4:	strd	r2, [sp, #16]
   16ba8:	ldr	ip, [sp]
   16bac:	ldrd	r2, [sp, #16]
   16bb0:	ldrb	r4, [ip, #1]!
   16bb4:	adds	r2, r2, sl
   16bb8:	adc	r3, r3, fp
   16bbc:	cmp	r4, #0
   16bc0:	str	ip, [sp]
   16bc4:	beq	16dbc <UnityAssertEqualStringLen@@Base+0x2bc>
   16bc8:	ldr	ip, [sp, #8]
   16bcc:	cmp	r5, ip
   16bd0:	bne	16c00 <UnityAssertEqualStringLen@@Base+0x100>
   16bd4:	cmp	lr, #0
   16bd8:	ldr	lr, [pc, #664]	; 16e78 <UnityAssertEqualStringLen@@Base+0x378>
   16bdc:	strdne	sl, [lr, #48]	; 0x30
   16be0:	strdne	r2, [lr, #32]
   16be4:	cmp	r6, #0
   16be8:	strdne	r8, [lr, #40]	; 0x28
   16bec:	ldrd	r2, [lr, #56]	; 0x38
   16bf0:	adds	r2, r2, #1
   16bf4:	adc	r3, r3, #0
   16bf8:	strd	r2, [lr, #56]	; 0x38
   16bfc:	b	16c3c <UnityAssertEqualStringLen@@Base+0x13c>
   16c00:	ldrb	ip, [r5], #1
   16c04:	adds	sl, sl, #1
   16c08:	adc	fp, fp, #0
   16c0c:	cmp	ip, r4
   16c10:	beq	16dac <UnityAssertEqualStringLen@@Base+0x2ac>
   16c14:	ldr	r5, [pc, #604]	; 16e78 <UnityAssertEqualStringLen@@Base+0x378>
   16c18:	cmp	lr, #0
   16c1c:	mov	lr, r5
   16c20:	strd	sl, [r5, #48]	; 0x30
   16c24:	strdne	r2, [r5, #32]
   16c28:	cmp	r6, #0
   16c2c:	strdne	r8, [lr, #40]	; 0x28
   16c30:	ldr	r3, [pc, #580]	; 16e7c <UnityAssertEqualStringLen@@Base+0x37c>
   16c34:	mov	r2, #1
   16c38:	str	r2, [r3, #32]
   16c3c:	ldr	r7, [pc, #568]	; 16e7c <UnityAssertEqualStringLen@@Base+0x37c>
   16c40:	ldr	r3, [r7, #32]
   16c44:	cmp	r3, #0
   16c48:	beq	16de4 <UnityAssertEqualStringLen@@Base+0x2e4>
   16c4c:	ldr	r6, [pc, #548]	; 16e78 <UnityAssertEqualStringLen@@Base+0x378>
   16c50:	mov	sl, r0
   16c54:	ldr	r0, [sp, #64]	; 0x40
   16c58:	ldrd	r2, [r6, #72]	; 0x48
   16c5c:	mov	r9, r1
   16c60:	ldr	r4, [sp, #12]
   16c64:	adds	r2, r2, #1
   16c68:	adc	r3, r3, #0
   16c6c:	ldr	r8, [sp, #4]
   16c70:	strd	r2, [r6, #72]	; 0x48
   16c74:	bl	15240 <UnityPrint@@Base+0x34c>
   16c78:	ldrd	r2, [r6, #80]	; 0x50
   16c7c:	add	r5, r6, #112	; 0x70
   16c80:	ldr	r0, [pc, #504]	; 16e80 <UnityAssertEqualStringLen@@Base+0x380>
   16c84:	adds	r2, r2, #1
   16c88:	adc	r3, r3, #0
   16c8c:	strd	r2, [r6, #80]	; 0x50
   16c90:	ldrd	r2, [r5, #-8]
   16c94:	adds	r2, r2, #1
   16c98:	adc	r3, r3, #0
   16c9c:	strd	r2, [r5, #-8]
   16ca0:	bl	14ef4 <UnityPrint@@Base>
   16ca4:	cmp	sl, #0
   16ca8:	beq	16e20 <UnityAssertEqualStringLen@@Base+0x320>
   16cac:	ldrd	r2, [r5]
   16cb0:	mov	r0, #39	; 0x27
   16cb4:	adds	r2, r2, #1
   16cb8:	adc	r3, r3, #0
   16cbc:	strd	r2, [r5]
   16cc0:	bl	120d4 <putchar@plt>
   16cc4:	ldrd	r2, [r5, #16]
   16cc8:	mov	r1, r8
   16ccc:	mov	r0, sl
   16cd0:	adds	r2, r2, #1
   16cd4:	adc	r3, r3, #0
   16cd8:	strd	r2, [r5, #16]
   16cdc:	bl	14d60 <UnityPrintLen@@Base>
   16ce0:	ldrd	r2, [r5, #24]
   16ce4:	mov	r0, #39	; 0x27
   16ce8:	adds	r2, r2, #1
   16cec:	adc	r3, r3, #0
   16cf0:	strd	r2, [r5, #24]
   16cf4:	bl	120d4 <putchar@plt>
   16cf8:	ldrd	r2, [r5, #32]
   16cfc:	adds	r2, r2, #1
   16d00:	adc	r3, r3, #0
   16d04:	strd	r2, [r5, #32]
   16d08:	ldr	r0, [pc, #372]	; 16e84 <UnityAssertEqualStringLen@@Base+0x384>
   16d0c:	bl	14ef4 <UnityPrint@@Base>
   16d10:	cmp	r9, #0
   16d14:	beq	16e4c <UnityAssertEqualStringLen@@Base+0x34c>
   16d18:	ldrd	r2, [r5, #48]	; 0x30
   16d1c:	mov	r0, #39	; 0x27
   16d20:	adds	r2, r2, #1
   16d24:	adc	r3, r3, #0
   16d28:	strd	r2, [r5, #48]	; 0x30
   16d2c:	bl	120d4 <putchar@plt>
   16d30:	ldrd	r2, [r5, #64]	; 0x40
   16d34:	mov	r1, r8
   16d38:	mov	r0, r9
   16d3c:	adds	r2, r2, #1
   16d40:	adc	r3, r3, #0
   16d44:	strd	r2, [r5, #64]	; 0x40
   16d48:	bl	14d60 <UnityPrintLen@@Base>
   16d4c:	ldrd	r2, [r5, #72]	; 0x48
   16d50:	mov	r0, #39	; 0x27
   16d54:	adds	r2, r2, #1
   16d58:	adc	r3, r3, #0
   16d5c:	strd	r2, [r5, #72]	; 0x48
   16d60:	bl	120d4 <putchar@plt>
   16d64:	ldrd	r2, [r5, #80]	; 0x50
   16d68:	adds	r2, r2, #1
   16d6c:	adc	r3, r3, #0
   16d70:	strd	r2, [r5, #80]	; 0x50
   16d74:	ldrd	r2, [r6, #88]	; 0x58
   16d78:	mov	r0, r4
   16d7c:	adds	r2, r2, #1
   16d80:	adc	r3, r3, #0
   16d84:	strd	r2, [r6, #88]	; 0x58
   16d88:	bl	1505c <UnityPrint@@Base+0x168>
   16d8c:	ldrd	r2, [r6, #96]	; 0x60
   16d90:	mov	r1, #1
   16d94:	ldr	r0, [pc, #236]	; 16e88 <UnityAssertEqualStringLen@@Base+0x388>
   16d98:	adds	r2, r2, #1
   16d9c:	adc	r3, r3, #0
   16da0:	str	r1, [r7, #32]
   16da4:	strd	r2, [r6, #96]	; 0x60
   16da8:	bl	11fc0 <longjmp@plt>
   16dac:	mov	lr, r7
   16db0:	b	16ba8 <UnityAssertEqualStringLen@@Base+0xa8>
   16db4:	mov	r6, r7
   16db8:	b	16bc8 <UnityAssertEqualStringLen@@Base+0xc8>
   16dbc:	ldrb	r6, [r5]
   16dc0:	adds	r8, r8, #1
   16dc4:	adc	r9, r9, #0
   16dc8:	cmp	r6, #0
   16dcc:	bne	16db4 <UnityAssertEqualStringLen@@Base+0x2b4>
   16dd0:	cmp	lr, #0
   16dd4:	ldr	r1, [pc, #156]	; 16e78 <UnityAssertEqualStringLen@@Base+0x378>
   16dd8:	strdne	sl, [r1, #48]	; 0x30
   16ddc:	strdne	r2, [r1, #32]
   16de0:	strd	r8, [r1, #40]	; 0x28
   16de4:	add	sp, sp, #28
   16de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16dec:	ldrd	r2, [lr, #16]
   16df0:	adds	r2, r2, #1
   16df4:	adc	r3, r3, #0
   16df8:	cmp	r0, r1
   16dfc:	strd	r2, [lr, #16]
   16e00:	beq	16de4 <UnityAssertEqualStringLen@@Base+0x2e4>
   16e04:	mov	r3, #1
   16e08:	str	r3, [r5, #32]
   16e0c:	ldrd	r2, [lr, #64]	; 0x40
   16e10:	adds	r2, r2, #1
   16e14:	adc	r3, r3, #0
   16e18:	strd	r2, [lr, #64]	; 0x40
   16e1c:	b	16c3c <UnityAssertEqualStringLen@@Base+0x13c>
   16e20:	ldrd	r2, [r5, #8]
   16e24:	ldr	r0, [pc, #96]	; 16e8c <UnityAssertEqualStringLen@@Base+0x38c>
   16e28:	adds	r2, r2, #1
   16e2c:	adc	r3, r3, #0
   16e30:	strd	r2, [r5, #8]
   16e34:	bl	14ef4 <UnityPrint@@Base>
   16e38:	ldrd	r2, [r5, #40]	; 0x28
   16e3c:	adds	r2, r2, #1
   16e40:	adc	r3, r3, #0
   16e44:	strd	r2, [r5, #40]	; 0x28
   16e48:	b	16d08 <UnityAssertEqualStringLen@@Base+0x208>
   16e4c:	ldrd	r2, [r5, #56]	; 0x38
   16e50:	ldr	r0, [pc, #52]	; 16e8c <UnityAssertEqualStringLen@@Base+0x38c>
   16e54:	adds	r2, r2, #1
   16e58:	adc	r3, r3, #0
   16e5c:	strd	r2, [r5, #56]	; 0x38
   16e60:	bl	14ef4 <UnityPrint@@Base>
   16e64:	ldrd	r2, [r5, #88]	; 0x58
   16e68:	adds	r2, r2, #1
   16e6c:	adc	r3, r3, #0
   16e70:	strd	r2, [r5, #88]	; 0x58
   16e74:	b	16d74 <UnityAssertEqualStringLen@@Base+0x274>
   16e78:	strdeq	sp, [r2], -r8
   16e7c:	andeq	lr, r2, r8, lsl #10
   16e80:	andeq	fp, r1, r8, lsr #14
   16e84:	andeq	fp, r1, r8, lsr r7
   16e88:	andeq	lr, r2, r0, lsr r5
   16e8c:	andeq	fp, r1, r3, lsr r7

00016e90 <UnityAssertEqualStringArray@@Base>:
   16e90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e94:	sub	sp, sp, #116	; 0x74
   16e98:	ldr	r4, [pc, #1172]	; 17334 <UnityAssertEqualStringArray@@Base+0x4a4>
   16e9c:	ldr	r8, [pc, #1172]	; 17338 <UnityAssertEqualStringArray@@Base+0x4a8>
   16ea0:	ldrd	r6, [r4]
   16ea4:	adds	r6, r6, #1
   16ea8:	adc	r7, r7, #0
   16eac:	strd	r6, [r4]
   16eb0:	ldr	r6, [r8, #32]
   16eb4:	cmp	r6, #0
   16eb8:	bne	1732c <UnityAssertEqualStringArray@@Base+0x49c>
   16ebc:	ldrd	r6, [r4, #8]
   16ec0:	adds	r6, r6, #1
   16ec4:	adc	r7, r7, #0
   16ec8:	strd	r6, [r4, #8]
   16ecc:	ldr	r6, [r8, #36]	; 0x24
   16ed0:	cmp	r6, #0
   16ed4:	bne	1732c <UnityAssertEqualStringArray@@Base+0x49c>
   16ed8:	cmp	r2, #0
   16edc:	str	r3, [sp, #88]	; 0x58
   16ee0:	str	r2, [sp, #76]	; 0x4c
   16ee4:	str	r1, [sp, #72]	; 0x48
   16ee8:	bne	16f54 <UnityAssertEqualStringArray@@Base+0xc4>
   16eec:	ldrd	r2, [r4, #16]
   16ef0:	ldr	r0, [sp, #152]	; 0x98
   16ef4:	adds	r2, r2, #1
   16ef8:	adc	r3, r3, #0
   16efc:	strd	r2, [r4, #16]
   16f00:	bl	15240 <UnityPrint@@Base+0x34c>
   16f04:	ldrd	r2, [r4, #32]
   16f08:	ldr	r0, [pc, #1068]	; 1733c <UnityAssertEqualStringArray@@Base+0x4ac>
   16f0c:	adds	r2, r2, #1
   16f10:	adc	r3, r3, #0
   16f14:	strd	r2, [r4, #32]
   16f18:	bl	14ef4 <UnityPrint@@Base>
   16f1c:	ldrd	r2, [r4, #40]	; 0x28
   16f20:	ldr	r0, [sp, #88]	; 0x58
   16f24:	adds	r2, r2, #1
   16f28:	adc	r3, r3, #0
   16f2c:	strd	r2, [r4, #40]	; 0x28
   16f30:	bl	1505c <UnityPrint@@Base+0x168>
   16f34:	ldrd	r2, [r4, #48]	; 0x30
   16f38:	add	r0, r8, #40	; 0x28
   16f3c:	mov	r1, #1
   16f40:	adds	r2, r2, #1
   16f44:	adc	r3, r3, #0
   16f48:	str	r1, [r8, #32]
   16f4c:	strd	r2, [r4, #48]	; 0x30
   16f50:	bl	11fc0 <longjmp@plt>
   16f54:	ldrd	sl, [r4, #24]
   16f58:	ldr	r2, [sp, #152]	; 0x98
   16f5c:	mov	r5, r0
   16f60:	adds	sl, sl, #1
   16f64:	adc	fp, fp, #0
   16f68:	strd	sl, [r4, #24]
   16f6c:	bl	152b8 <UnityPrint@@Base+0x3c4>
   16f70:	ldrd	r2, [r4, #56]	; 0x38
   16f74:	adds	r2, r2, #1
   16f78:	adc	r3, r3, #0
   16f7c:	strd	r2, [r4, #56]	; 0x38
   16f80:	cmp	r0, #1
   16f84:	beq	1732c <UnityAssertEqualStringArray@@Base+0x49c>
   16f88:	ldrd	r2, [r4, #64]	; 0x40
   16f8c:	ldr	r7, [r4, #88]	; 0x58
   16f90:	ldr	lr, [r4, #92]	; 0x5c
   16f94:	strd	r2, [sp, #16]
   16f98:	ldrd	r2, [r4, #104]	; 0x68
   16f9c:	mov	r9, r6
   16fa0:	mov	ip, r6
   16fa4:	strd	r2, [sp, #48]	; 0x30
   16fa8:	ldrd	r2, [r4, #72]	; 0x48
   16fac:	str	r6, [sp, #68]	; 0x44
   16fb0:	str	r6, [sp, #64]	; 0x40
   16fb4:	strd	r2, [sp, #32]
   16fb8:	ldrd	r2, [r4, #96]	; 0x60
   16fbc:	str	r6, [sp, #8]
   16fc0:	strd	r2, [sp, #24]
   16fc4:	ldrd	r2, [r4, #80]	; 0x50
   16fc8:	strd	r2, [sp, #40]	; 0x28
   16fcc:	ldrd	r2, [r4, #120]	; 0x78
   16fd0:	strd	r2, [sp, #56]	; 0x38
   16fd4:	ldrd	r2, [r4, #176]	; 0xb0
   16fd8:	mov	r4, r6
   16fdc:	mov	r0, r2
   16fe0:	mov	r1, r3
   16fe4:	mov	sl, r0
   16fe8:	mov	fp, r1
   16fec:	ldrd	r0, [sp, #56]	; 0x38
   16ff0:	ldrd	r2, [sp, #56]	; 0x38
   16ff4:	subs	sl, sl, r0
   16ff8:	strd	r2, [sp]
   16ffc:	sbc	fp, fp, r1
   17000:	mov	r3, r6
   17004:	mov	r2, #1
   17008:	strd	sl, [sp, #104]	; 0x68
   1700c:	ldrd	r0, [sp]
   17010:	ldrd	sl, [sp, #104]	; 0x68
   17014:	str	r5, [sp, #92]	; 0x5c
   17018:	adds	sl, sl, r0
   1701c:	adc	fp, fp, r1
   17020:	lsl	r1, r4, #2
   17024:	str	r1, [sp, #100]	; 0x64
   17028:	ldr	r1, [r5], #4
   1702c:	strd	sl, [sp, #80]	; 0x50
   17030:	cmp	r1, #0
   17034:	beq	17264 <UnityAssertEqualStringArray@@Base+0x3d4>
   17038:	ldrd	sl, [sp, #16]
   1703c:	ldr	r0, [sp]
   17040:	adds	sl, sl, #1
   17044:	adc	fp, fp, #0
   17048:	strd	sl, [sp, #16]
   1704c:	ldr	sl, [sp, #56]	; 0x38
   17050:	sub	r0, r0, sl
   17054:	ldr	sl, [sp, #72]	; 0x48
   17058:	ldr	r0, [sl, r0, lsl #2]
   1705c:	cmp	r0, #0
   17060:	beq	17260 <UnityAssertEqualStringArray@@Base+0x3d0>
   17064:	ldrd	sl, [sp, #32]
   17068:	sub	r1, r1, #1
   1706c:	str	r7, [sp, #8]
   17070:	adds	sl, sl, #1
   17074:	adc	fp, fp, #0
   17078:	str	lr, [sp, #12]
   1707c:	strd	sl, [sp, #32]
   17080:	ldrb	r9, [r1, #1]!
   17084:	ldr	r7, [sp, #8]
   17088:	ldr	lr, [sp, #12]
   1708c:	cmp	r9, #0
   17090:	bne	170cc <UnityAssertEqualStringArray@@Base+0x23c>
   17094:	ldrd	sl, [sp, #24]
   17098:	ldrb	ip, [r0]
   1709c:	adds	sl, sl, #1
   170a0:	adc	fp, fp, #0
   170a4:	cmp	ip, #0
   170a8:	strd	sl, [sp, #24]
   170ac:	bne	170c8 <UnityAssertEqualStringArray@@Base+0x238>
   170b0:	mov	r9, r2
   170b4:	str	r2, [sp, #8]
   170b8:	mov	ip, r2
   170bc:	b	17110 <UnityAssertEqualStringArray@@Base+0x280>
   170c0:	mov	r3, r2
   170c4:	b	1700c <UnityAssertEqualStringArray@@Base+0x17c>
   170c8:	mov	ip, r2
   170cc:	ldrb	sl, [r0], #1
   170d0:	str	sl, [sp, #96]	; 0x60
   170d4:	ldrd	sl, [sp, #8]
   170d8:	adds	sl, sl, #1
   170dc:	adc	fp, fp, #0
   170e0:	strd	sl, [sp, #8]
   170e4:	ldr	sl, [sp, #96]	; 0x60
   170e8:	cmp	r9, sl
   170ec:	beq	17258 <UnityAssertEqualStringArray@@Base+0x3c8>
   170f0:	ldrd	r0, [sp, #40]	; 0x28
   170f4:	mov	r9, r2
   170f8:	str	r2, [r8, #32]
   170fc:	adds	r0, r0, #1
   17100:	adc	r1, r1, #0
   17104:	str	r2, [sp, #64]	; 0x40
   17108:	strd	r0, [sp, #40]	; 0x28
   1710c:	str	r2, [sp, #8]
   17110:	ldr	r1, [r8, #32]
   17114:	cmp	r1, #0
   17118:	beq	1729c <UnityAssertEqualStringArray@@Base+0x40c>
   1711c:	ldr	r5, [pc, #528]	; 17334 <UnityAssertEqualStringArray@@Base+0x4a4>
   17120:	cmp	r6, #0
   17124:	strne	r7, [r5, #88]	; 0x58
   17128:	strne	lr, [r5, #92]	; 0x5c
   1712c:	cmp	ip, #0
   17130:	ldrdne	r0, [sp, #24]
   17134:	strdne	r0, [r5, #96]	; 0x60
   17138:	ldr	r2, [sp, #8]
   1713c:	ldr	r6, [pc, #496]	; 17334 <UnityAssertEqualStringArray@@Base+0x4a4>
   17140:	cmp	r2, #0
   17144:	ldrdne	r0, [sp, #16]
   17148:	strdne	r0, [r6, #64]	; 0x40
   1714c:	cmp	r9, #0
   17150:	ldrdne	r0, [sp, #32]
   17154:	strdne	r0, [r6, #72]	; 0x48
   17158:	ldr	r2, [sp, #64]	; 0x40
   1715c:	cmp	r2, #0
   17160:	ldr	r2, [pc, #460]	; 17334 <UnityAssertEqualStringArray@@Base+0x4a4>
   17164:	ldrdne	r0, [sp, #40]	; 0x28
   17168:	strdne	r0, [r2, #80]	; 0x50
   1716c:	ldr	r1, [sp, #68]	; 0x44
   17170:	cmp	r1, #0
   17174:	ldrdne	r0, [sp, #48]	; 0x30
   17178:	strdne	r0, [r2, #104]	; 0x68
   1717c:	cmp	r3, #0
   17180:	ldrdne	r0, [sp]
   17184:	strdne	r0, [r2, #120]	; 0x78
   17188:	ldrdne	r0, [sp, #80]	; 0x50
   1718c:	strdne	r0, [r2, #176]	; 0xb0
   17190:	ldrd	r2, [r6, #112]	; 0x70
   17194:	ldr	r0, [sp, #152]	; 0x98
   17198:	adds	r2, r2, #1
   1719c:	adc	r3, r3, #0
   171a0:	strd	r2, [r6, #112]	; 0x70
   171a4:	bl	15240 <UnityPrint@@Base+0x34c>
   171a8:	ldrd	r2, [r6, #128]	; 0x80
   171ac:	adds	r2, r2, #1
   171b0:	adc	r3, r3, #0
   171b4:	strd	r2, [r6, #128]	; 0x80
   171b8:	ldr	r3, [sp, #76]	; 0x4c
   171bc:	cmp	r3, #1
   171c0:	bls	17204 <UnityAssertEqualStringArray@@Base+0x374>
   171c4:	ldrd	r2, [r6, #136]	; 0x88
   171c8:	ldr	r0, [pc, #368]	; 17340 <UnityAssertEqualStringArray@@Base+0x4b0>
   171cc:	adds	r2, r2, #1
   171d0:	adc	r3, r3, #0
   171d4:	strd	r2, [r6, #136]	; 0x88
   171d8:	bl	14ef4 <UnityPrint@@Base>
   171dc:	ldrd	r2, [r6, #144]	; 0x90
   171e0:	mov	r0, r4
   171e4:	adds	r2, r2, #1
   171e8:	adc	r3, r3, #0
   171ec:	strd	r2, [r6, #144]	; 0x90
   171f0:	bl	14aa0 <UnityPrintNumberUnsigned@@Base>
   171f4:	ldrd	r2, [r6, #152]	; 0x98
   171f8:	adds	r2, r2, #1
   171fc:	adc	r3, r3, #0
   17200:	strd	r2, [r6, #152]	; 0x98
   17204:	ldr	r3, [sp, #72]	; 0x48
   17208:	ldr	r2, [sp, #100]	; 0x64
   1720c:	ldr	r1, [r3, r2]
   17210:	ldr	r3, [sp, #92]	; 0x5c
   17214:	ldr	r0, [r3]
   17218:	bl	1214c <close@plt+0xc>
   1721c:	ldrd	r2, [r5, #160]	; 0xa0
   17220:	ldr	r0, [sp, #88]	; 0x58
   17224:	adds	r2, r2, #1
   17228:	adc	r3, r3, #0
   1722c:	strd	r2, [r5, #160]	; 0xa0
   17230:	bl	1505c <UnityPrint@@Base+0x168>
   17234:	ldrd	r2, [r5, #168]	; 0xa8
   17238:	ldr	r0, [pc, #248]	; 17338 <UnityAssertEqualStringArray@@Base+0x4a8>
   1723c:	mov	r1, #1
   17240:	adds	r2, r2, #1
   17244:	adc	r3, r3, #0
   17248:	str	r1, [r0, #32]
   1724c:	strd	r2, [r5, #168]	; 0xa8
   17250:	add	r0, r0, #40	; 0x28
   17254:	b	16f50 <UnityAssertEqualStringArray@@Base+0xc0>
   17258:	mov	r6, r2
   1725c:	b	17080 <UnityAssertEqualStringArray@@Base+0x1f0>
   17260:	str	r2, [sp, #8]
   17264:	ldr	r0, [sp]
   17268:	ldr	sl, [sp, #56]	; 0x38
   1726c:	sub	sl, r0, sl
   17270:	ldr	r0, [sp, #72]	; 0x48
   17274:	ldr	sl, [r0, sl, lsl #2]
   17278:	cmp	r1, sl
   1727c:	beq	17110 <UnityAssertEqualStringArray@@Base+0x280>
   17280:	ldrd	sl, [sp, #48]	; 0x30
   17284:	str	r2, [r8, #32]
   17288:	str	r2, [sp, #68]	; 0x44
   1728c:	adds	sl, sl, #1
   17290:	adc	fp, fp, #0
   17294:	strd	sl, [sp, #48]	; 0x30
   17298:	b	17110 <UnityAssertEqualStringArray@@Base+0x280>
   1729c:	ldrd	sl, [sp]
   172a0:	ldr	r1, [sp, #76]	; 0x4c
   172a4:	add	r4, r4, #1
   172a8:	adds	sl, sl, #1
   172ac:	adc	fp, fp, #0
   172b0:	cmp	r1, r4
   172b4:	strd	sl, [sp]
   172b8:	bne	170c0 <UnityAssertEqualStringArray@@Base+0x230>
   172bc:	ldr	r2, [pc, #112]	; 17334 <UnityAssertEqualStringArray@@Base+0x4a4>
   172c0:	cmp	r6, #0
   172c4:	strne	r7, [r2, #88]	; 0x58
   172c8:	strne	lr, [r2, #92]	; 0x5c
   172cc:	cmp	ip, #0
   172d0:	ldrdne	r0, [sp, #24]
   172d4:	strdne	r0, [r2, #96]	; 0x60
   172d8:	ldr	r2, [sp, #8]
   172dc:	cmp	r2, #0
   172e0:	ldr	r2, [pc, #76]	; 17334 <UnityAssertEqualStringArray@@Base+0x4a4>
   172e4:	ldrdne	r0, [sp, #16]
   172e8:	strdne	r0, [r2, #64]	; 0x40
   172ec:	cmp	r9, #0
   172f0:	ldrdne	r0, [sp, #32]
   172f4:	strdne	r0, [r2, #72]	; 0x48
   172f8:	ldr	r1, [sp, #64]	; 0x40
   172fc:	cmp	r1, #0
   17300:	ldrdne	r0, [sp, #40]	; 0x28
   17304:	strdne	r0, [r2, #80]	; 0x50
   17308:	ldr	r1, [sp, #68]	; 0x44
   1730c:	cmp	r1, #0
   17310:	ldrdne	r0, [sp, #48]	; 0x30
   17314:	strdne	r0, [r2, #104]	; 0x68
   17318:	ldrd	r0, [sp]
   1731c:	cmp	r3, #0
   17320:	strd	r0, [r2, #120]	; 0x78
   17324:	ldrdne	r0, [sp, #80]	; 0x50
   17328:	strdne	r0, [r2, #176]	; 0xb0
   1732c:	add	sp, sp, #116	; 0x74
   17330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17334:	andeq	sp, r2, r8, asr #27
   17338:	andeq	lr, r2, r8, lsl #10
   1733c:	muleq	r1, r9, r7
   17340:	ldrdeq	fp, [r1], -r0

00017344 <UnityAssertEqualMemory@@Base>:
   17344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17348:	sub	sp, sp, #44	; 0x2c
   1734c:	ldr	r4, [pc, #872]	; 176bc <UnityAssertEqualMemory@@Base+0x378>
   17350:	ldr	r5, [pc, #872]	; 176c0 <UnityAssertEqualMemory@@Base+0x37c>
   17354:	ldrd	r6, [r4, #-8]
   17358:	adds	r8, r6, #1
   1735c:	ldr	r6, [r5, #32]
   17360:	adc	r9, r7, #0
   17364:	cmp	r6, #0
   17368:	strd	r8, [r4, #-8]
   1736c:	bne	17458 <UnityAssertEqualMemory@@Base+0x114>
   17370:	ldrd	r6, [r4]
   17374:	adds	sl, r6, #1
   17378:	adc	fp, r7, #0
   1737c:	mov	r6, sl
   17380:	mov	r7, fp
   17384:	strd	r6, [r4]
   17388:	ldr	r6, [r5, #36]	; 0x24
   1738c:	cmp	r6, #0
   17390:	bne	17458 <UnityAssertEqualMemory@@Base+0x114>
   17394:	cmp	r2, #0
   17398:	cmpne	r3, #0
   1739c:	mov	r7, r3
   173a0:	mov	r9, r2
   173a4:	mov	r6, r1
   173a8:	mov	sl, r0
   173ac:	moveq	fp, #1
   173b0:	movne	fp, #0
   173b4:	bne	17420 <UnityAssertEqualMemory@@Base+0xdc>
   173b8:	ldrd	r2, [r4, #8]
   173bc:	adds	r0, r2, #1
   173c0:	adc	r1, r3, #0
   173c4:	strd	r0, [r4, #8]
   173c8:	ldr	r0, [sp, #84]	; 0x54
   173cc:	bl	15240 <UnityPrint@@Base+0x34c>
   173d0:	ldrd	r2, [r4, #24]
   173d4:	adds	r0, r2, #1
   173d8:	adc	r1, r3, #0
   173dc:	strd	r0, [r4, #24]
   173e0:	ldr	r0, [pc, #732]	; 176c4 <UnityAssertEqualMemory@@Base+0x380>
   173e4:	bl	14ef4 <UnityPrint@@Base>
   173e8:	ldrd	r2, [r4, #32]
   173ec:	adds	r0, r2, #1
   173f0:	adc	r1, r3, #0
   173f4:	strd	r0, [r4, #32]
   173f8:	ldr	r0, [sp, #80]	; 0x50
   173fc:	bl	1505c <UnityPrint@@Base+0x168>
   17400:	ldrd	r2, [r4, #40]	; 0x28
   17404:	adds	r0, r2, #1
   17408:	adc	r1, r3, #0
   1740c:	strd	r0, [r4, #40]	; 0x28
   17410:	add	r0, r5, #40	; 0x28
   17414:	mov	r1, #1
   17418:	str	r1, [r5, #32]
   1741c:	bl	11fc0 <longjmp@plt>
   17420:	ldrd	r2, [r4, #16]
   17424:	mov	r8, r4
   17428:	adds	r4, r2, #1
   1742c:	adc	r5, r3, #0
   17430:	ldr	r2, [sp, #84]	; 0x54
   17434:	ldr	r3, [sp, #80]	; 0x50
   17438:	strd	r4, [r8, #16]
   1743c:	bl	152b8 <UnityPrint@@Base+0x3c4>
   17440:	ldrd	r2, [r8, #48]	; 0x30
   17444:	adds	r4, r2, #1
   17448:	adc	r5, r3, #0
   1744c:	strd	r4, [r8, #48]	; 0x30
   17450:	cmp	r0, #1
   17454:	bne	17658 <UnityAssertEqualMemory@@Base+0x314>
   17458:	add	sp, sp, #44	; 0x2c
   1745c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17460:	ldrd	r2, [sp]
   17464:	ldrb	r9, [sl]
   17468:	ldrb	lr, [r6]
   1746c:	adds	r2, r2, #1
   17470:	adc	r3, r3, #0
   17474:	cmp	r9, lr
   17478:	strd	r2, [sp]
   1747c:	add	r3, sl, #1
   17480:	str	r3, [sp, #20]
   17484:	add	r2, r6, #1
   17488:	sub	r3, r4, #1
   1748c:	mov	fp, ip
   17490:	beq	175f8 <UnityAssertEqualMemory@@Base+0x2b4>
   17494:	ldrd	r2, [sp]
   17498:	ldr	r9, [pc, #540]	; 176bc <UnityAssertEqualMemory@@Base+0x378>
   1749c:	strd	r2, [r9, #152]	; 0x98
   174a0:	ldr	r3, [sp, #16]
   174a4:	cmp	r3, #0
   174a8:	ldrdne	r2, [sp, #8]
   174ac:	strdne	r2, [r9, #160]	; 0xa0
   174b0:	strd	r0, [r9, #176]	; 0xb0
   174b4:	ldr	r0, [sp, #84]	; 0x54
   174b8:	bl	15240 <UnityPrint@@Base+0x34c>
   174bc:	ldrd	r2, [r9, #56]	; 0x38
   174c0:	adds	r0, r2, #1
   174c4:	adc	r1, r3, #0
   174c8:	strd	r0, [r9, #56]	; 0x38
   174cc:	ldr	r0, [pc, #500]	; 176c8 <UnityAssertEqualMemory@@Base+0x384>
   174d0:	bl	14ef4 <UnityPrint@@Base>
   174d4:	ldrd	r2, [r9, #64]	; 0x40
   174d8:	adds	r0, r2, #1
   174dc:	adc	r1, r3, #0
   174e0:	cmp	r7, #1
   174e4:	strd	r0, [r9, #64]	; 0x40
   174e8:	bls	17530 <UnityAssertEqualMemory@@Base+0x1ec>
   174ec:	ldrd	r2, [r9, #72]	; 0x48
   174f0:	adds	r0, r2, #1
   174f4:	adc	r1, r3, #0
   174f8:	strd	r0, [r9, #72]	; 0x48
   174fc:	ldr	r0, [pc, #456]	; 176cc <UnityAssertEqualMemory@@Base+0x388>
   17500:	bl	14ef4 <UnityPrint@@Base>
   17504:	ldrd	r2, [r9, #80]	; 0x50
   17508:	adds	r0, r2, #1
   1750c:	adc	r1, r3, #0
   17510:	ldr	r3, [sp, #28]
   17514:	strd	r0, [r9, #80]	; 0x50
   17518:	sub	r0, r3, r5
   1751c:	bl	14aa0 <UnityPrintNumberUnsigned@@Base>
   17520:	ldrd	r2, [r9, #88]	; 0x58
   17524:	adds	r0, r2, #1
   17528:	adc	r1, r3, #0
   1752c:	strd	r0, [r9, #88]	; 0x58
   17530:	ldr	r0, [pc, #408]	; 176d0 <UnityAssertEqualMemory@@Base+0x38c>
   17534:	bl	14ef4 <UnityPrint@@Base>
   17538:	ldrd	r2, [r8, #96]	; 0x60
   1753c:	adds	r0, r2, #1
   17540:	adc	r1, r3, #0
   17544:	ldr	r3, [sp, #24]
   17548:	strd	r0, [r8, #96]	; 0x60
   1754c:	sub	r0, r3, r4
   17550:	bl	14aa0 <UnityPrintNumberUnsigned@@Base>
   17554:	ldrd	r2, [r8, #104]	; 0x68
   17558:	adds	r0, r2, #1
   1755c:	adc	r1, r3, #0
   17560:	strd	r0, [r8, #104]	; 0x68
   17564:	ldr	r0, [pc, #360]	; 176d4 <UnityAssertEqualMemory@@Base+0x390>
   17568:	bl	14ef4 <UnityPrint@@Base>
   1756c:	ldrd	r2, [r8, #112]	; 0x70
   17570:	adds	r0, r2, #1
   17574:	adc	r1, r3, #0
   17578:	strd	r0, [r8, #112]	; 0x70
   1757c:	mov	r1, #65	; 0x41
   17580:	ldrb	r0, [sl]
   17584:	bl	14ca8 <UnityPrintNumberByStyle@@Base>
   17588:	ldrd	r2, [r8, #120]	; 0x78
   1758c:	adds	r0, r2, #1
   17590:	adc	r1, r3, #0
   17594:	strd	r0, [r8, #120]	; 0x78
   17598:	ldr	r0, [pc, #312]	; 176d8 <UnityAssertEqualMemory@@Base+0x394>
   1759c:	bl	14ef4 <UnityPrint@@Base>
   175a0:	ldrd	r2, [r8, #128]	; 0x80
   175a4:	adds	r0, r2, #1
   175a8:	adc	r1, r3, #0
   175ac:	strd	r0, [r8, #128]	; 0x80
   175b0:	mov	r1, #65	; 0x41
   175b4:	ldrb	r0, [r6]
   175b8:	bl	14ca8 <UnityPrintNumberByStyle@@Base>
   175bc:	ldrd	r2, [r8, #136]	; 0x88
   175c0:	adds	r0, r2, #1
   175c4:	adc	r1, r3, #0
   175c8:	strd	r0, [r8, #136]	; 0x88
   175cc:	ldr	r0, [sp, #80]	; 0x50
   175d0:	bl	1505c <UnityPrint@@Base+0x168>
   175d4:	ldrd	r2, [r8, #144]	; 0x90
   175d8:	adds	r0, r2, #1
   175dc:	adc	r1, r3, #0
   175e0:	strd	r0, [r8, #144]	; 0x90
   175e4:	ldr	r0, [pc, #212]	; 176c0 <UnityAssertEqualMemory@@Base+0x37c>
   175e8:	mov	r1, #1
   175ec:	add	r0, r0, #40	; 0x28
   175f0:	str	r1, [r0, #-8]
   175f4:	b	1741c <UnityAssertEqualMemory@@Base+0xd8>
   175f8:	mov	r4, r3
   175fc:	cmn	r4, #1
   17600:	mov	r6, r2
   17604:	ldr	sl, [sp, #20]
   17608:	bne	17460 <UnityAssertEqualMemory@@Base+0x11c>
   1760c:	sub	r5, r5, #1
   17610:	str	ip, [sp, #16]
   17614:	ldrd	r2, [sp, #32]
   17618:	adds	r2, r2, r0
   1761c:	adc	r3, r3, r1
   17620:	cmn	r5, #1
   17624:	strd	r2, [sp, #8]
   17628:	bne	176a4 <UnityAssertEqualMemory@@Base+0x360>
   1762c:	cmp	fp, #0
   17630:	ldrne	r2, [pc, #132]	; 176bc <UnityAssertEqualMemory@@Base+0x378>
   17634:	ldrdne	r4, [sp]
   17638:	strdne	r4, [r2, #152]	; 0x98
   1763c:	ldr	r3, [sp, #16]
   17640:	cmp	r3, #0
   17644:	ldrne	r3, [pc, #112]	; 176bc <UnityAssertEqualMemory@@Base+0x378>
   17648:	ldrdne	r4, [sp, #8]
   1764c:	strdne	r0, [r3, #176]	; 0xb0
   17650:	strdne	r4, [r3, #160]	; 0xa0
   17654:	b	17458 <UnityAssertEqualMemory@@Base+0x114>
   17658:	ldrd	r2, [r8, #168]	; 0xa8
   1765c:	str	fp, [sp, #16]
   17660:	mov	ip, #1
   17664:	adds	r0, r2, #1
   17668:	adc	r1, r3, #0
   1766c:	ldrd	r2, [r8, #152]	; 0x98
   17670:	strd	r0, [r8, #168]	; 0xa8
   17674:	ldrd	r0, [r8, #176]	; 0xb0
   17678:	strd	r2, [sp]
   1767c:	sub	r3, r7, #1
   17680:	str	r3, [sp, #28]
   17684:	mov	r5, r3
   17688:	ldrd	r2, [r8, #160]	; 0xa0
   1768c:	subs	r2, r2, r0
   17690:	sbc	r3, r3, r1
   17694:	strd	r2, [sp, #32]
   17698:	sub	r3, r9, #1
   1769c:	str	r3, [sp, #24]
   176a0:	b	17614 <UnityAssertEqualMemory@@Base+0x2d0>
   176a4:	adds	r0, r0, #1
   176a8:	adc	r1, r1, #0
   176ac:	str	sl, [sp, #20]
   176b0:	mov	r2, r6
   176b4:	ldr	r4, [sp, #24]
   176b8:	b	175fc <UnityAssertEqualMemory@@Base+0x2b8>
   176bc:	andeq	sp, r2, r8, lsl #29
   176c0:	andeq	lr, r2, r8, lsl #10
   176c4:	muleq	r1, r9, r7
   176c8:	andeq	fp, r1, sp, lsl r8
   176cc:	ldrdeq	fp, [r1], -r0
   176d0:	andeq	fp, r1, pc, lsr #16
   176d4:	andeq	fp, r1, r8, lsr #14
   176d8:	andeq	fp, r1, r8, lsr r7

000176dc <UnityFail@@Base>:
   176dc:	push	{r4, r5, r6, lr}
   176e0:	ldr	r4, [pc, #440]	; 178a0 <UnityFail@@Base+0x1c4>
   176e4:	ldr	r5, [pc, #440]	; 178a4 <UnityFail@@Base+0x1c8>
   176e8:	ldrd	r2, [r4, #-8]
   176ec:	adds	r2, r2, #1
   176f0:	adc	r3, r3, #0
   176f4:	strd	r2, [r4, #-8]
   176f8:	ldr	r3, [r5, #32]
   176fc:	cmp	r3, #0
   17700:	popne	{r4, r5, r6, pc}
   17704:	ldrd	r2, [r4]
   17708:	adds	r2, r2, #1
   1770c:	adc	r3, r3, #0
   17710:	strd	r2, [r4]
   17714:	ldr	r3, [r5, #36]	; 0x24
   17718:	cmp	r3, #0
   1771c:	popne	{r4, r5, r6, pc}
   17720:	ldrd	r2, [r4, #8]
   17724:	mov	r6, r0
   17728:	ldr	r0, [r5]
   1772c:	adds	r2, r2, #1
   17730:	adc	r3, r3, #0
   17734:	strd	r2, [r4, #8]
   17738:	bl	15188 <UnityPrint@@Base+0x294>
   1773c:	ldrd	r2, [r4, #16]
   17740:	adds	r2, r2, #1
   17744:	adc	r3, r3, #0
   17748:	strd	r2, [r4, #16]
   1774c:	bl	154c4 <UnityPrintFail@@Base>
   17750:	ldrd	r2, [r4, #24]
   17754:	adds	r2, r2, #1
   17758:	adc	r3, r3, #0
   1775c:	cmp	r6, #0
   17760:	strd	r2, [r4, #24]
   17764:	beq	17864 <UnityFail@@Base+0x188>
   17768:	ldrd	r2, [r4, #32]
   1776c:	mov	r0, #58	; 0x3a
   17770:	adds	r2, r2, #1
   17774:	adc	r3, r3, #0
   17778:	strd	r2, [r4, #32]
   1777c:	bl	120d4 <putchar@plt>
   17780:	ldrd	r2, [r4, #40]	; 0x28
   17784:	adds	r2, r2, #1
   17788:	adc	r3, r3, #0
   1778c:	strd	r2, [r4, #40]	; 0x28
   17790:	ldr	r3, [r5, #8]
   17794:	cmp	r3, #0
   17798:	beq	17830 <UnityFail@@Base+0x154>
   1779c:	ldrd	r2, [r4, #48]	; 0x30
   177a0:	ldr	r0, [pc, #256]	; 178a8 <UnityFail@@Base+0x1cc>
   177a4:	adds	r2, r2, #1
   177a8:	adc	r3, r3, #0
   177ac:	strd	r2, [r4, #48]	; 0x30
   177b0:	bl	14ef4 <UnityPrint@@Base>
   177b4:	ldrd	r2, [r4, #56]	; 0x38
   177b8:	ldr	r0, [r5, #8]
   177bc:	adds	r2, r2, #1
   177c0:	adc	r3, r3, #0
   177c4:	strd	r2, [r4, #56]	; 0x38
   177c8:	bl	14ef4 <UnityPrint@@Base>
   177cc:	ldrd	r2, [r4, #64]	; 0x40
   177d0:	adds	r2, r2, #1
   177d4:	adc	r3, r3, #0
   177d8:	strd	r2, [r4, #64]	; 0x40
   177dc:	ldr	r3, [r5, #12]
   177e0:	cmp	r3, #0
   177e4:	beq	17828 <UnityFail@@Base+0x14c>
   177e8:	ldrd	r2, [r4, #72]	; 0x48
   177ec:	ldr	r0, [pc, #184]	; 178ac <UnityFail@@Base+0x1d0>
   177f0:	adds	r2, r2, #1
   177f4:	adc	r3, r3, #0
   177f8:	strd	r2, [r4, #72]	; 0x48
   177fc:	bl	14ef4 <UnityPrint@@Base>
   17800:	ldrd	r2, [r4, #80]	; 0x50
   17804:	ldr	r0, [r5, #12]
   17808:	adds	r2, r2, #1
   1780c:	adc	r3, r3, #0
   17810:	strd	r2, [r4, #80]	; 0x50
   17814:	bl	14ef4 <UnityPrint@@Base>
   17818:	ldrd	r2, [r4, #88]	; 0x58
   1781c:	adds	r2, r2, #1
   17820:	adc	r3, r3, #0
   17824:	strd	r2, [r4, #88]	; 0x58
   17828:	ldr	r0, [pc, #128]	; 178b0 <UnityFail@@Base+0x1d4>
   1782c:	bl	14ef4 <UnityPrint@@Base>
   17830:	ldrb	r3, [r6]
   17834:	cmp	r3, #32
   17838:	bne	17874 <UnityFail@@Base+0x198>
   1783c:	ldrd	r2, [r4, #104]	; 0x68
   17840:	adds	r2, r2, #1
   17844:	adc	r3, r3, #0
   17848:	strd	r2, [r4, #104]	; 0x68
   1784c:	mov	r0, r6
   17850:	bl	14ef4 <UnityPrint@@Base>
   17854:	ldrd	r2, [r4, #120]	; 0x78
   17858:	adds	r2, r2, #1
   1785c:	adc	r3, r3, #0
   17860:	strd	r2, [r4, #120]	; 0x78
   17864:	mov	r1, #1
   17868:	ldr	r0, [pc, #68]	; 178b4 <UnityFail@@Base+0x1d8>
   1786c:	str	r1, [r5, #32]
   17870:	bl	11fc0 <longjmp@plt>
   17874:	ldrd	r2, [r4, #96]	; 0x60
   17878:	mov	r0, #32
   1787c:	adds	r2, r2, #1
   17880:	adc	r3, r3, #0
   17884:	strd	r2, [r4, #96]	; 0x60
   17888:	bl	120d4 <putchar@plt>
   1788c:	ldrd	r2, [r4, #112]	; 0x70
   17890:	adds	r2, r2, #1
   17894:	adc	r3, r3, #0
   17898:	strd	r2, [r4, #112]	; 0x70
   1789c:	b	1784c <UnityFail@@Base+0x170>
   178a0:	andeq	sp, r2, r8, asr #30
   178a4:	andeq	lr, r2, r8, lsl #10
   178a8:	andeq	fp, r1, r1, asr #14
   178ac:	andeq	fp, r1, fp, asr #14
   178b0:	andeq	fp, r1, lr, lsr r7
   178b4:	andeq	lr, r2, r0, lsr r5

000178b8 <UnityIgnore@@Base>:
   178b8:	push	{r4, r5, r6, lr}
   178bc:	ldr	r4, [pc, #236]	; 179b0 <UnityIgnore@@Base+0xf8>
   178c0:	ldr	r5, [pc, #236]	; 179b4 <UnityIgnore@@Base+0xfc>
   178c4:	ldrd	r2, [r4]
   178c8:	adds	r2, r2, #1
   178cc:	adc	r3, r3, #0
   178d0:	strd	r2, [r4]
   178d4:	ldr	r3, [r5, #32]
   178d8:	cmp	r3, #0
   178dc:	popne	{r4, r5, r6, pc}
   178e0:	ldrd	r2, [r4, #8]
   178e4:	adds	r2, r2, #1
   178e8:	adc	r3, r3, #0
   178ec:	strd	r2, [r4, #8]
   178f0:	ldr	r3, [r5, #36]	; 0x24
   178f4:	cmp	r3, #0
   178f8:	popne	{r4, r5, r6, pc}
   178fc:	ldrd	r2, [r4, #16]
   17900:	mov	r6, r0
   17904:	ldr	r0, [r5]
   17908:	adds	r2, r2, #1
   1790c:	adc	r3, r3, #0
   17910:	strd	r2, [r4, #16]
   17914:	bl	15188 <UnityPrint@@Base+0x294>
   17918:	ldrd	r2, [r4, #24]
   1791c:	ldr	r0, [pc, #148]	; 179b8 <UnityIgnore@@Base+0x100>
   17920:	adds	r2, r2, #1
   17924:	adc	r3, r3, #0
   17928:	strd	r2, [r4, #24]
   1792c:	bl	14ef4 <UnityPrint@@Base>
   17930:	ldrd	r2, [r4, #32]
   17934:	adds	r2, r2, #1
   17938:	adc	r3, r3, #0
   1793c:	cmp	r6, #0
   17940:	strd	r2, [r4, #32]
   17944:	beq	179a0 <UnityIgnore@@Base+0xe8>
   17948:	ldrd	r2, [r4, #40]	; 0x28
   1794c:	mov	r0, #58	; 0x3a
   17950:	adds	r2, r2, #1
   17954:	adc	r3, r3, #0
   17958:	strd	r2, [r4, #40]	; 0x28
   1795c:	bl	120d4 <putchar@plt>
   17960:	ldrd	r2, [r4, #48]	; 0x30
   17964:	mov	r0, #32
   17968:	adds	r2, r2, #1
   1796c:	adc	r3, r3, #0
   17970:	strd	r2, [r4, #48]	; 0x30
   17974:	bl	120d4 <putchar@plt>
   17978:	ldrd	r2, [r4, #56]	; 0x38
   1797c:	mov	r0, r6
   17980:	adds	r2, r2, #1
   17984:	adc	r3, r3, #0
   17988:	strd	r2, [r4, #56]	; 0x38
   1798c:	bl	14ef4 <UnityPrint@@Base>
   17990:	ldrd	r2, [r4, #64]	; 0x40
   17994:	adds	r2, r2, #1
   17998:	adc	r3, r3, #0
   1799c:	strd	r2, [r4, #64]	; 0x40
   179a0:	mov	r1, #1
   179a4:	ldr	r0, [pc, #16]	; 179bc <UnityIgnore@@Base+0x104>
   179a8:	str	r1, [r5, #36]	; 0x24
   179ac:	bl	11fc0 <longjmp@plt>
   179b0:	andeq	sp, r2, r8, asr #31
   179b4:	andeq	lr, r2, r8, lsl #10
   179b8:	andeq	fp, r1, r6, lsr r8
   179bc:	andeq	lr, r2, r0, lsr r5

000179c0 <setUp@@Base>:
   179c0:	ldr	r1, [pc, #16]	; 179d8 <setUp@@Base+0x18>
   179c4:	ldrd	r2, [r1, #-8]
   179c8:	adds	r2, r2, #1
   179cc:	adc	r3, r3, #0
   179d0:	strd	r2, [r1, #-8]
   179d4:	bx	lr
   179d8:	andeq	lr, r2, r8, lsl r0

000179dc <tearDown@@Base>:
   179dc:	ldr	r1, [pc, #16]	; 179f4 <tearDown@@Base+0x18>
   179e0:	ldrd	r2, [r1]
   179e4:	adds	r2, r2, #1
   179e8:	adc	r3, r3, #0
   179ec:	strd	r2, [r1]
   179f0:	bx	lr
   179f4:	andeq	lr, r2, r8, lsl r0

000179f8 <UnityDefaultTestRun@@Base>:
   179f8:	push	{r0, r1, r4, lr}
   179fc:	str	r0, [sp, #4]
   17a00:	ldr	r0, [pc, #280]	; 17b20 <UnityDefaultTestRun@@Base+0x128>
   17a04:	add	r0, r0, #40	; 0x28
   17a08:	ldr	r3, [r0, #-20]	; 0xffffffec
   17a0c:	str	r1, [r0, #-36]	; 0xffffffdc
   17a10:	ldr	r1, [pc, #268]	; 17b24 <UnityDefaultTestRun@@Base+0x12c>
   17a14:	add	r3, r3, #1
   17a18:	str	r3, [r0, #-20]	; 0xffffffec
   17a1c:	mov	r3, #0
   17a20:	str	r2, [r0, #-24]	; 0xffffffe8
   17a24:	str	r3, [r0, #-32]	; 0xffffffe0
   17a28:	str	r3, [r0, #-28]	; 0xffffffe4
   17a2c:	ldrd	r2, [r1, #-8]
   17a30:	adds	r2, r2, #1
   17a34:	adc	r3, r3, #0
   17a38:	strd	r2, [r1, #-8]
   17a3c:	bl	11fcc <_setjmp@plt>
   17a40:	ldr	r4, [pc, #220]	; 17b24 <UnityDefaultTestRun@@Base+0x12c>
   17a44:	ldrd	r2, [r4]
   17a48:	adds	r2, r2, #1
   17a4c:	adc	r3, r3, #0
   17a50:	strd	r2, [r4]
   17a54:	cmp	r0, #0
   17a58:	bne	17a98 <UnityDefaultTestRun@@Base+0xa0>
   17a5c:	ldrd	r2, [r4, #8]
   17a60:	adds	r2, r2, #1
   17a64:	adc	r3, r3, #0
   17a68:	strd	r2, [r4, #8]
   17a6c:	bl	179c0 <setUp@@Base>
   17a70:	ldrd	r2, [r4, #16]
   17a74:	adds	r2, r2, #1
   17a78:	adc	r3, r3, #0
   17a7c:	strd	r2, [r4, #16]
   17a80:	ldr	r3, [sp, #4]
   17a84:	blx	r3
   17a88:	ldrd	r2, [r4, #24]
   17a8c:	adds	r2, r2, #1
   17a90:	adc	r3, r3, #0
   17a94:	strd	r2, [r4, #24]
   17a98:	ldr	r0, [pc, #136]	; 17b28 <UnityDefaultTestRun@@Base+0x130>
   17a9c:	bl	11fcc <_setjmp@plt>
   17aa0:	ldr	r4, [pc, #124]	; 17b24 <UnityDefaultTestRun@@Base+0x12c>
   17aa4:	ldrd	r2, [r4, #32]
   17aa8:	adds	r2, r2, #1
   17aac:	adc	r3, r3, #0
   17ab0:	strd	r2, [r4, #32]
   17ab4:	cmp	r0, #0
   17ab8:	bne	17b00 <UnityDefaultTestRun@@Base+0x108>
   17abc:	ldrd	r2, [r4, #40]	; 0x28
   17ac0:	adds	r2, r2, #1
   17ac4:	adc	r3, r3, #0
   17ac8:	strd	r2, [r4, #40]	; 0x28
   17acc:	ldr	r3, [pc, #76]	; 17b20 <UnityDefaultTestRun@@Base+0x128>
   17ad0:	ldr	r3, [r3, #36]	; 0x24
   17ad4:	cmp	r3, #0
   17ad8:	bne	17b00 <UnityDefaultTestRun@@Base+0x108>
   17adc:	ldrd	r2, [r4, #48]	; 0x30
   17ae0:	adds	r2, r2, #1
   17ae4:	adc	r3, r3, #0
   17ae8:	strd	r2, [r4, #48]	; 0x30
   17aec:	bl	179dc <tearDown@@Base>
   17af0:	ldrd	r2, [r4, #56]	; 0x38
   17af4:	adds	r2, r2, #1
   17af8:	adc	r3, r3, #0
   17afc:	strd	r2, [r4, #56]	; 0x38
   17b00:	bl	1553c <UnityConcludeTest@@Base>
   17b04:	ldr	r1, [pc, #24]	; 17b24 <UnityDefaultTestRun@@Base+0x12c>
   17b08:	ldrd	r2, [r1, #64]	; 0x40
   17b0c:	adds	r2, r2, #1
   17b10:	adc	r3, r3, #0
   17b14:	strd	r2, [r1, #64]	; 0x40
   17b18:	add	sp, sp, #8
   17b1c:	pop	{r4, pc}
   17b20:	andeq	lr, r2, r8, lsl #10
   17b24:	andeq	lr, r2, r8, lsr #32
   17b28:	andeq	lr, r2, r0, lsr r5

00017b2c <UnityBegin@@Base>:
   17b2c:	ldr	r1, [pc, #64]	; 17b74 <UnityBegin@@Base+0x48>
   17b30:	ldrd	r2, [r1, #-8]
   17b34:	adds	r2, r2, #1
   17b38:	adc	r3, r3, #0
   17b3c:	strd	r2, [r1, #-8]
   17b40:	ldr	r3, [pc, #48]	; 17b78 <UnityBegin@@Base+0x4c>
   17b44:	mov	r2, #0
   17b48:	str	r0, [r3]
   17b4c:	str	r2, [r3, #4]
   17b50:	str	r2, [r3, #16]
   17b54:	str	r2, [r3, #20]
   17b58:	str	r2, [r3, #24]
   17b5c:	str	r2, [r3, #28]
   17b60:	str	r2, [r3, #32]
   17b64:	str	r2, [r3, #36]	; 0x24
   17b68:	str	r2, [r3, #8]
   17b6c:	str	r2, [r3, #12]
   17b70:	bx	lr
   17b74:	andeq	lr, r2, r8, ror r0
   17b78:	andeq	lr, r2, r8, lsl #10

00017b7c <UnityEnd@@Base>:
   17b7c:	push	{r4, r5, r6, lr}
   17b80:	mov	r0, #10
   17b84:	ldr	r4, [pc, #360]	; 17cf4 <UnityEnd@@Base+0x178>
   17b88:	ldr	r6, [pc, #360]	; 17cf8 <UnityEnd@@Base+0x17c>
   17b8c:	ldr	r5, [pc, #360]	; 17cfc <UnityEnd@@Base+0x180>
   17b90:	ldrd	r2, [r4]
   17b94:	adds	r2, r2, #1
   17b98:	adc	r3, r3, #0
   17b9c:	strd	r2, [r4]
   17ba0:	bl	120d4 <putchar@plt>
   17ba4:	ldrd	r2, [r4, #8]
   17ba8:	add	r0, r6, #1
   17bac:	adds	r2, r2, #1
   17bb0:	adc	r3, r3, #0
   17bb4:	strd	r2, [r4, #8]
   17bb8:	bl	14ef4 <UnityPrint@@Base>
   17bbc:	ldrd	r2, [r4, #16]
   17bc0:	mov	r0, #10
   17bc4:	adds	r2, r2, #1
   17bc8:	adc	r3, r3, #0
   17bcc:	strd	r2, [r4, #16]
   17bd0:	bl	120d4 <putchar@plt>
   17bd4:	ldrd	r2, [r4, #24]
   17bd8:	ldr	r0, [r5, #20]
   17bdc:	adds	r2, r2, #1
   17be0:	adc	r3, r3, #0
   17be4:	strd	r2, [r4, #24]
   17be8:	bl	14938 <UnityPrintNumber@@Base>
   17bec:	ldrd	r2, [r4, #32]
   17bf0:	add	r0, r6, #25
   17bf4:	adds	r2, r2, #1
   17bf8:	adc	r3, r3, #0
   17bfc:	strd	r2, [r4, #32]
   17c00:	bl	14ef4 <UnityPrint@@Base>
   17c04:	ldrd	r2, [r4, #40]	; 0x28
   17c08:	ldr	r0, [r5, #24]
   17c0c:	adds	r2, r2, #1
   17c10:	adc	r3, r3, #0
   17c14:	strd	r2, [r4, #40]	; 0x28
   17c18:	bl	14938 <UnityPrintNumber@@Base>
   17c1c:	ldrd	r2, [r4, #48]	; 0x30
   17c20:	add	r0, r6, #33	; 0x21
   17c24:	adds	r2, r2, #1
   17c28:	adc	r3, r3, #0
   17c2c:	strd	r2, [r4, #48]	; 0x30
   17c30:	bl	14ef4 <UnityPrint@@Base>
   17c34:	ldrd	r2, [r4, #56]	; 0x38
   17c38:	ldr	r0, [r5, #28]
   17c3c:	adds	r2, r2, #1
   17c40:	adc	r3, r3, #0
   17c44:	strd	r2, [r4, #56]	; 0x38
   17c48:	bl	14938 <UnityPrintNumber@@Base>
   17c4c:	ldrd	r2, [r4, #64]	; 0x40
   17c50:	add	r0, r6, #44	; 0x2c
   17c54:	adds	r2, r2, #1
   17c58:	adc	r3, r3, #0
   17c5c:	strd	r2, [r4, #64]	; 0x40
   17c60:	bl	14ef4 <UnityPrint@@Base>
   17c64:	ldrd	r2, [r4, #72]	; 0x48
   17c68:	mov	r0, #10
   17c6c:	adds	r2, r2, #1
   17c70:	adc	r3, r3, #0
   17c74:	strd	r2, [r4, #72]	; 0x48
   17c78:	bl	120d4 <putchar@plt>
   17c7c:	ldr	r3, [r5, #24]
   17c80:	cmp	r3, #0
   17c84:	bne	17ccc <UnityEnd@@Base+0x150>
   17c88:	ldrd	r2, [r4, #80]	; 0x50
   17c8c:	adds	r2, r2, #1
   17c90:	adc	r3, r3, #0
   17c94:	strd	r2, [r4, #80]	; 0x50
   17c98:	bl	15500 <UnityPrintOk@@Base>
   17c9c:	ldrd	r2, [r4, #96]	; 0x60
   17ca0:	adds	r2, r2, #1
   17ca4:	adc	r3, r3, #0
   17ca8:	strd	r2, [r4, #96]	; 0x60
   17cac:	mov	r0, #10
   17cb0:	bl	120d4 <putchar@plt>
   17cb4:	ldrd	r2, [r4, #112]	; 0x70
   17cb8:	ldr	r0, [r5, #24]
   17cbc:	adds	r2, r2, #1
   17cc0:	adc	r3, r3, #0
   17cc4:	strd	r2, [r4, #112]	; 0x70
   17cc8:	pop	{r4, r5, r6, pc}
   17ccc:	ldrd	r2, [r4, #88]	; 0x58
   17cd0:	adds	r2, r2, #1
   17cd4:	adc	r3, r3, #0
   17cd8:	strd	r2, [r4, #88]	; 0x58
   17cdc:	bl	154c4 <UnityPrintFail@@Base>
   17ce0:	ldrd	r2, [r4, #104]	; 0x68
   17ce4:	adds	r2, r2, #1
   17ce8:	adc	r3, r3, #0
   17cec:	strd	r2, [r4, #104]	; 0x68
   17cf0:	b	17cac <UnityEnd@@Base+0x130>
   17cf4:	andeq	lr, r2, r8, ror r0
   17cf8:	andeq	fp, r1, ip, lsr r8
   17cfc:	andeq	lr, r2, r8, lsl #10

00017d00 <init_token_int_type@@Base>:
   17d00:	ldr	r1, [pc, #24]	; 17d20 <init_token_int_type@@Base+0x20>
   17d04:	ldrd	r2, [r1]
   17d08:	adds	r2, r2, #1
   17d0c:	adc	r3, r3, #0
   17d10:	strd	r2, [r1]
   17d14:	mov	r3, #0
   17d18:	str	r3, [r0]
   17d1c:	bx	lr
   17d20:	strdeq	lr, [r2], -r0

00017d24 <init_token_int_value@@Base>:
   17d24:	ldr	ip, [pc, #28]	; 17d48 <init_token_int_value@@Base+0x24>
   17d28:	str	r1, [r0, #4]
   17d2c:	ldrd	r2, [ip, #8]
   17d30:	adds	r2, r2, #1
   17d34:	adc	r3, r3, #0
   17d38:	strd	r2, [ip, #8]
   17d3c:	mov	r3, #1
   17d40:	str	r3, [r0]
   17d44:	bx	lr
   17d48:	strdeq	lr, [r2], -r0

00017d4c <init_token_function@@Base>:
   17d4c:	ldr	ip, [pc, #28]	; 17d70 <init_token_function@@Base+0x24>
   17d50:	str	r1, [r0, #4]
   17d54:	ldrd	r2, [ip, #16]
   17d58:	adds	r2, r2, #1
   17d5c:	adc	r3, r3, #0
   17d60:	strd	r2, [ip, #16]
   17d64:	mov	r3, #2
   17d68:	str	r3, [r0]
   17d6c:	bx	lr
   17d70:	strdeq	lr, [r2], -r0

00017d74 <init_token_opar@@Base>:
   17d74:	ldr	r1, [pc, #24]	; 17d94 <init_token_opar@@Base+0x20>
   17d78:	ldrd	r2, [r1, #24]
   17d7c:	adds	r2, r2, #1
   17d80:	adc	r3, r3, #0
   17d84:	strd	r2, [r1, #24]
   17d88:	mov	r3, #3
   17d8c:	str	r3, [r0]
   17d90:	bx	lr
   17d94:	strdeq	lr, [r2], -r0

00017d98 <init_token_cpar@@Base>:
   17d98:	ldr	r1, [pc, #24]	; 17db8 <init_token_cpar@@Base+0x20>
   17d9c:	ldrd	r2, [r1, #32]
   17da0:	adds	r2, r2, #1
   17da4:	adc	r3, r3, #0
   17da8:	strd	r2, [r1, #32]
   17dac:	mov	r3, #4
   17db0:	str	r3, [r0]
   17db4:	bx	lr
   17db8:	strdeq	lr, [r2], -r0

00017dbc <init_token_obra@@Base>:
   17dbc:	ldr	r1, [pc, #24]	; 17ddc <init_token_obra@@Base+0x20>
   17dc0:	ldrd	r2, [r1, #40]	; 0x28
   17dc4:	adds	r2, r2, #1
   17dc8:	adc	r3, r3, #0
   17dcc:	strd	r2, [r1, #40]	; 0x28
   17dd0:	mov	r3, #5
   17dd4:	str	r3, [r0]
   17dd8:	bx	lr
   17ddc:	strdeq	lr, [r2], -r0

00017de0 <init_token_cbra@@Base>:
   17de0:	ldr	r1, [pc, #24]	; 17e00 <init_token_cbra@@Base+0x20>
   17de4:	ldrd	r2, [r1, #48]	; 0x30
   17de8:	adds	r2, r2, #1
   17dec:	adc	r3, r3, #0
   17df0:	strd	r2, [r1, #48]	; 0x30
   17df4:	mov	r3, #6
   17df8:	str	r3, [r0]
   17dfc:	bx	lr
   17e00:	strdeq	lr, [r2], -r0

00017e04 <init_token_return@@Base>:
   17e04:	ldr	r1, [pc, #24]	; 17e24 <init_token_return@@Base+0x20>
   17e08:	ldrd	r2, [r1, #56]	; 0x38
   17e0c:	adds	r2, r2, #1
   17e10:	adc	r3, r3, #0
   17e14:	strd	r2, [r1, #56]	; 0x38
   17e18:	mov	r3, #7
   17e1c:	str	r3, [r0]
   17e20:	bx	lr
   17e24:	strdeq	lr, [r2], -r0

00017e28 <init_token_semicolon@@Base>:
   17e28:	ldr	r1, [pc, #24]	; 17e48 <init_token_semicolon@@Base+0x20>
   17e2c:	ldrd	r2, [r1, #64]	; 0x40
   17e30:	adds	r2, r2, #1
   17e34:	adc	r3, r3, #0
   17e38:	strd	r2, [r1, #64]	; 0x40
   17e3c:	mov	r3, #8
   17e40:	str	r3, [r0]
   17e44:	bx	lr
   17e48:	strdeq	lr, [r2], -r0

00017e4c <init_token_eof@@Base>:
   17e4c:	ldr	r1, [pc, #24]	; 17e6c <init_token_eof@@Base+0x20>
   17e50:	ldrd	r2, [r1, #72]	; 0x48
   17e54:	adds	r2, r2, #1
   17e58:	adc	r3, r3, #0
   17e5c:	strd	r2, [r1, #72]	; 0x48
   17e60:	mov	r3, #9
   17e64:	str	r3, [r0]
   17e68:	bx	lr
   17e6c:	strdeq	lr, [r2], -r0

00017e70 <init_token_if@@Base>:
   17e70:	ldr	r1, [pc, #24]	; 17e90 <init_token_if@@Base+0x20>
   17e74:	ldrd	r2, [r1, #80]	; 0x50
   17e78:	adds	r2, r2, #1
   17e7c:	adc	r3, r3, #0
   17e80:	strd	r2, [r1, #80]	; 0x50
   17e84:	mov	r3, #10
   17e88:	str	r3, [r0]
   17e8c:	bx	lr
   17e90:	strdeq	lr, [r2], -r0

00017e94 <init_token_else@@Base>:
   17e94:	ldr	r1, [pc, #24]	; 17eb4 <init_token_else@@Base+0x20>
   17e98:	ldrd	r2, [r1, #88]	; 0x58
   17e9c:	adds	r2, r2, #1
   17ea0:	adc	r3, r3, #0
   17ea4:	strd	r2, [r1, #88]	; 0x58
   17ea8:	mov	r3, #11
   17eac:	str	r3, [r0]
   17eb0:	bx	lr
   17eb4:	strdeq	lr, [r2], -r0

00017eb8 <init_token_boolean_op@@Base>:
   17eb8:	ldr	ip, [pc, #28]	; 17edc <init_token_boolean_op@@Base+0x24>
   17ebc:	str	r1, [r0, #4]
   17ec0:	ldrd	r2, [ip, #96]	; 0x60
   17ec4:	adds	r2, r2, #1
   17ec8:	adc	r3, r3, #0
   17ecc:	strd	r2, [ip, #96]	; 0x60
   17ed0:	mov	r3, #12
   17ed4:	str	r3, [r0]
   17ed8:	bx	lr
   17edc:	strdeq	lr, [r2], -r0

00017ee0 <free_token_int_type@@Base>:
   17ee0:	ldr	r1, [pc, #16]	; 17ef8 <free_token_int_type@@Base+0x18>
   17ee4:	ldrd	r2, [r1, #104]	; 0x68
   17ee8:	adds	r2, r2, #1
   17eec:	adc	r3, r3, #0
   17ef0:	strd	r2, [r1, #104]	; 0x68
   17ef4:	b	11fd8 <free@plt>
   17ef8:	strdeq	lr, [r2], -r0

00017efc <free_token_int_value@@Base>:
   17efc:	ldr	r1, [pc, #16]	; 17f14 <free_token_int_value@@Base+0x18>
   17f00:	ldrd	r2, [r1, #112]	; 0x70
   17f04:	adds	r2, r2, #1
   17f08:	adc	r3, r3, #0
   17f0c:	strd	r2, [r1, #112]	; 0x70
   17f10:	b	11fd8 <free@plt>
   17f14:	strdeq	lr, [r2], -r0

00017f18 <free_token_function@@Base>:
   17f18:	ldr	r1, [pc, #16]	; 17f30 <free_token_function@@Base+0x18>
   17f1c:	ldrd	r2, [r1, #120]	; 0x78
   17f20:	adds	r2, r2, #1
   17f24:	adc	r3, r3, #0
   17f28:	strd	r2, [r1, #120]	; 0x78
   17f2c:	b	11fd8 <free@plt>
   17f30:	strdeq	lr, [r2], -r0

00017f34 <free_token_opar@@Base>:
   17f34:	ldr	r1, [pc, #16]	; 17f4c <free_token_opar@@Base+0x18>
   17f38:	ldrd	r2, [r1, #128]	; 0x80
   17f3c:	adds	r2, r2, #1
   17f40:	adc	r3, r3, #0
   17f44:	strd	r2, [r1, #128]	; 0x80
   17f48:	b	11fd8 <free@plt>
   17f4c:	strdeq	lr, [r2], -r0

00017f50 <free_token_cpar@@Base>:
   17f50:	ldr	r1, [pc, #16]	; 17f68 <free_token_cpar@@Base+0x18>
   17f54:	ldrd	r2, [r1, #136]	; 0x88
   17f58:	adds	r2, r2, #1
   17f5c:	adc	r3, r3, #0
   17f60:	strd	r2, [r1, #136]	; 0x88
   17f64:	b	11fd8 <free@plt>
   17f68:	strdeq	lr, [r2], -r0

00017f6c <free_token_obra@@Base>:
   17f6c:	ldr	r1, [pc, #16]	; 17f84 <free_token_obra@@Base+0x18>
   17f70:	ldrd	r2, [r1, #144]	; 0x90
   17f74:	adds	r2, r2, #1
   17f78:	adc	r3, r3, #0
   17f7c:	strd	r2, [r1, #144]	; 0x90
   17f80:	b	11fd8 <free@plt>
   17f84:	strdeq	lr, [r2], -r0

00017f88 <free_token_cbra@@Base>:
   17f88:	ldr	r1, [pc, #16]	; 17fa0 <free_token_cbra@@Base+0x18>
   17f8c:	ldrd	r2, [r1, #152]	; 0x98
   17f90:	adds	r2, r2, #1
   17f94:	adc	r3, r3, #0
   17f98:	strd	r2, [r1, #152]	; 0x98
   17f9c:	b	11fd8 <free@plt>
   17fa0:	strdeq	lr, [r2], -r0

00017fa4 <free_token_return@@Base>:
   17fa4:	ldr	r1, [pc, #16]	; 17fbc <free_token_return@@Base+0x18>
   17fa8:	ldrd	r2, [r1, #160]	; 0xa0
   17fac:	adds	r2, r2, #1
   17fb0:	adc	r3, r3, #0
   17fb4:	strd	r2, [r1, #160]	; 0xa0
   17fb8:	b	11fd8 <free@plt>
   17fbc:	strdeq	lr, [r2], -r0

00017fc0 <free_token_semicolon@@Base>:
   17fc0:	ldr	r1, [pc, #16]	; 17fd8 <free_token_semicolon@@Base+0x18>
   17fc4:	ldrd	r2, [r1, #168]	; 0xa8
   17fc8:	adds	r2, r2, #1
   17fcc:	adc	r3, r3, #0
   17fd0:	strd	r2, [r1, #168]	; 0xa8
   17fd4:	b	11fd8 <free@plt>
   17fd8:	strdeq	lr, [r2], -r0

00017fdc <free_token_eof@@Base>:
   17fdc:	ldr	r1, [pc, #16]	; 17ff4 <free_token_eof@@Base+0x18>
   17fe0:	ldrd	r2, [r1, #176]	; 0xb0
   17fe4:	adds	r2, r2, #1
   17fe8:	adc	r3, r3, #0
   17fec:	strd	r2, [r1, #176]	; 0xb0
   17ff0:	b	11fd8 <free@plt>
   17ff4:	strdeq	lr, [r2], -r0

00017ff8 <free_token_if@@Base>:
   17ff8:	ldr	r1, [pc, #16]	; 18010 <free_token_if@@Base+0x18>
   17ffc:	ldrd	r2, [r1, #184]	; 0xb8
   18000:	adds	r2, r2, #1
   18004:	adc	r3, r3, #0
   18008:	strd	r2, [r1, #184]	; 0xb8
   1800c:	b	11fd8 <free@plt>
   18010:	strdeq	lr, [r2], -r0

00018014 <free_token_else@@Base>:
   18014:	ldr	r1, [pc, #16]	; 1802c <free_token_else@@Base+0x18>
   18018:	ldrd	r2, [r1, #192]	; 0xc0
   1801c:	adds	r2, r2, #1
   18020:	adc	r3, r3, #0
   18024:	strd	r2, [r1, #192]	; 0xc0
   18028:	b	11fd8 <free@plt>
   1802c:	strdeq	lr, [r2], -r0

00018030 <free_token_boolean_op@@Base>:
   18030:	push	{r4, r5, r6, lr}
   18034:	mov	r5, r0
   18038:	ldr	r4, [pc, #56]	; 18078 <free_token_boolean_op@@Base+0x48>
   1803c:	ldr	r0, [r0, #4]
   18040:	ldrd	r2, [r4, #200]	; 0xc8
   18044:	adds	r2, r2, #1
   18048:	adc	r3, r3, #0
   1804c:	cmp	r0, #0
   18050:	strd	r2, [r4, #200]	; 0xc8
   18054:	beq	1806c <free_token_boolean_op@@Base+0x3c>
   18058:	bl	11fd8 <free@plt>
   1805c:	ldrd	r2, [r4, #208]	; 0xd0
   18060:	adds	r2, r2, #1
   18064:	adc	r3, r3, #0
   18068:	strd	r2, [r4, #208]	; 0xd0
   1806c:	mov	r0, r5
   18070:	pop	{r4, r5, r6, lr}
   18074:	b	11fd8 <free@plt>
   18078:	strdeq	lr, [r2], -r0

0001807c <init_lexer@@Base>:
   1807c:	ldr	ip, [pc, #32]	; 180a4 <init_lexer@@Base+0x28>
   18080:	str	r1, [r0]
   18084:	ldrd	r2, [ip]
   18088:	adds	r2, r2, #1
   1808c:	adc	r3, r3, #0
   18090:	strd	r2, [ip]
   18094:	mov	r3, #0
   18098:	str	r3, [r0, #4]
   1809c:	str	r3, [r0, #8]
   180a0:	bx	lr
   180a4:	andeq	lr, r2, r8, asr #3

000180a8 <destroy_lexer@@Base>:
   180a8:	push	{r4, lr}
   180ac:	ldr	r4, [pc, #48]	; 180e4 <destroy_lexer@@Base+0x3c>
   180b0:	ldr	r0, [r0, #4]
   180b4:	ldrd	r2, [r4, #8]
   180b8:	adds	r2, r2, #1
   180bc:	adc	r3, r3, #0
   180c0:	cmp	r0, #0
   180c4:	strd	r2, [r4, #8]
   180c8:	popeq	{r4, pc}
   180cc:	bl	11fd8 <free@plt>
   180d0:	ldrd	r2, [r4, #16]
   180d4:	adds	r2, r2, #1
   180d8:	adc	r3, r3, #0
   180dc:	strd	r2, [r4, #16]
   180e0:	pop	{r4, pc}
   180e4:	andeq	lr, r2, r8, asr #3

000180e8 <free_stack_base@@Base>:
   180e8:	ldr	r1, [pc, #16]	; 18100 <free_stack_base@@Base+0x18>
   180ec:	ldrd	r2, [r1, #24]
   180f0:	adds	r2, r2, #1
   180f4:	adc	r3, r3, #0
   180f8:	strd	r2, [r1, #24]
   180fc:	b	11fd8 <free@plt>
   18100:	andeq	lr, r2, r8, asr #3

00018104 <push_back@@Base>:
   18104:	push	{r4, r5, r6, lr}
   18108:	mov	r4, r0
   1810c:	ldr	r0, [pc, #44]	; 18140 <push_back@@Base+0x3c>
   18110:	mov	r5, r1
   18114:	ldrd	r2, [r0, #32]
   18118:	adds	r2, r2, #1
   1811c:	adc	r3, r3, #0
   18120:	strd	r2, [r0, #32]
   18124:	mov	r0, #8
   18128:	bl	1202c <malloc@plt>
   1812c:	ldr	r3, [r4, #4]
   18130:	str	r5, [r0, #4]
   18134:	str	r3, [r0]
   18138:	str	r0, [r4, #4]
   1813c:	pop	{r4, r5, r6, pc}
   18140:	andeq	lr, r2, r8, asr #3

00018144 <get_char@@Base>:
   18144:	ldr	r1, [pc, #36]	; 18170 <get_char@@Base+0x2c>
   18148:	ldrd	r2, [r1, #40]	; 0x28
   1814c:	adds	r2, r2, #1
   18150:	adc	r3, r3, #0
   18154:	strd	r2, [r1, #40]	; 0x28
   18158:	ldr	r3, [r0, #8]
   1815c:	ldr	r2, [r0]
   18160:	add	r1, r3, #1
   18164:	str	r1, [r0, #8]
   18168:	ldrb	r0, [r2, r3]
   1816c:	bx	lr
   18170:	andeq	lr, r2, r8, asr #3

00018174 <push_back_chars@@Base>:
   18174:	ldr	r3, [r0, #8]
   18178:	push	{r4, r6, r7, lr}
   1817c:	cmp	r3, r1
   18180:	ldr	r4, [pc, #84]	; 181dc <push_back_chars@@Base+0x68>
   18184:	bcc	181a4 <push_back_chars@@Base+0x30>
   18188:	ldrd	r6, [r4, #48]	; 0x30
   1818c:	sub	r3, r3, r1
   18190:	str	r3, [r0, #8]
   18194:	adds	r6, r6, #1
   18198:	adc	r7, r7, #0
   1819c:	strd	r6, [r4, #48]	; 0x30
   181a0:	pop	{r4, r6, r7, pc}
   181a4:	ldrd	r2, [r4, #56]	; 0x38
   181a8:	ldr	r0, [pc, #48]	; 181e0 <push_back_chars@@Base+0x6c>
   181ac:	adds	r2, r2, #1
   181b0:	adc	r3, r3, #0
   181b4:	strd	r2, [r4, #56]	; 0x38
   181b8:	ldr	r3, [pc, #36]	; 181e4 <push_back_chars@@Base+0x70>
   181bc:	ldr	r1, [r3]
   181c0:	bl	12128 <fputs@plt>
   181c4:	ldrd	r2, [r4, #64]	; 0x40
   181c8:	mov	r0, #1
   181cc:	adds	r2, r2, #1
   181d0:	adc	r3, r3, #0
   181d4:	strd	r2, [r4, #64]	; 0x40
   181d8:	bl	12074 <exit@plt>
   181dc:	andeq	lr, r2, r8, asr #3
   181e0:			; <UNDEFINED> instruction: 0x0001b9b4
   181e4:	andeq	ip, r2, r0, asr #24

000181e8 <push_back_one_char@@Base>:
   181e8:	push	{r4, lr}
   181ec:	mov	r1, #1
   181f0:	ldr	r4, [pc, #36]	; 1821c <push_back_one_char@@Base+0x34>
   181f4:	ldrd	r2, [r4, #72]	; 0x48
   181f8:	adds	r2, r2, #1
   181fc:	adc	r3, r3, #0
   18200:	strd	r2, [r4, #72]	; 0x48
   18204:	bl	18174 <push_back_chars@@Base>
   18208:	ldrd	r2, [r4, #80]	; 0x50
   1820c:	adds	r2, r2, #1
   18210:	adc	r3, r3, #0
   18214:	strd	r2, [r4, #80]	; 0x50
   18218:	pop	{r4, pc}
   1821c:	andeq	lr, r2, r8, asr #3

00018220 <next@@Base>:
   18220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18224:	mov	r7, r0
   18228:	ldr	r8, [r0, #4]
   1822c:	sub	sp, sp, #516	; 0x204
   18230:	cmp	r8, #0
   18234:	ldr	r6, [pc, #3076]	; 18e40 <next@@Base+0xc20>
   18238:	beq	1826c <next@@Base+0x4c>
   1823c:	ldr	r3, [r8]
   18240:	ldr	r4, [r8, #4]
   18244:	str	r3, [r0, #4]
   18248:	mov	r0, r8
   1824c:	bl	11fd8 <free@plt>
   18250:	ldrd	r2, [r6, #96]	; 0x60
   18254:	adds	r2, r2, #1
   18258:	adc	r3, r3, #0
   1825c:	strd	r2, [r6, #96]	; 0x60
   18260:	mov	r0, r4
   18264:	add	sp, sp, #516	; 0x204
   18268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1826c:	ldrd	r2, [r6, #88]	; 0x58
   18270:	add	r9, r6, #800	; 0x320
   18274:	mov	r4, r8
   18278:	adds	r2, r2, #1
   1827c:	adc	r3, r3, #0
   18280:	add	sl, r6, #288	; 0x120
   18284:	strd	r2, [r6, #88]	; 0x58
   18288:	bl	18144 <get_char@@Base>
   1828c:	mov	r5, r0
   18290:	mov	r0, r8
   18294:	mov	r8, r9
   18298:	ldrd	r2, [r9, #-8]
   1829c:	adds	r2, r2, #1
   182a0:	adc	r3, r3, #0
   182a4:	cmp	r5, #0
   182a8:	strd	r2, [r9, #-8]
   182ac:	ldrd	r2, [r9]
   182b0:	bne	182ec <next@@Base+0xcc>
   182b4:	ldr	r5, [pc, #2952]	; 18e44 <next@@Base+0xc24>
   182b8:	mov	r0, #4
   182bc:	ldrd	r2, [r5, #-8]
   182c0:	adds	r2, r2, #1
   182c4:	adc	r3, r3, #0
   182c8:	strd	r2, [r5, #-8]
   182cc:	bl	1202c <malloc@plt>
   182d0:	mov	r4, r0
   182d4:	bl	17e4c <init_token_eof@@Base>
   182d8:	ldrd	r2, [r5]
   182dc:	adds	r2, r2, #1
   182e0:	adc	r3, r3, #0
   182e4:	strd	r2, [r5]
   182e8:	b	18260 <next@@Base+0x40>
   182ec:	adds	r2, r2, #1
   182f0:	sub	r0, r0, #1
   182f4:	adc	r3, r3, #0
   182f8:	cmp	r0, #4
   182fc:	ldrls	pc, [pc, r0, lsl #2]
   18300:	b	183c0 <next@@Base+0x1a0>
   18304:	andeq	r8, r1, r8, lsl r3
   18308:	muleq	r1, ip, sl
   1830c:	andeq	r8, r1, r4, ror #22
   18310:	andeq	r8, r1, r4, ror ip
   18314:	muleq	r1, r8, sp
   18318:	strd	r2, [r8]
   1831c:	ldrd	r2, [r6, #104]	; 0x68
   18320:	adds	r2, r2, #1
   18324:	adc	r3, r3, #0
   18328:	strd	r2, [r6, #104]	; 0x68
   1832c:	ldr	r6, [pc, #2836]	; 18e48 <next@@Base+0xc28>
   18330:	sub	r3, r5, #48	; 0x30
   18334:	uxtb	r3, r3
   18338:	cmp	r3, #9
   1833c:	bls	18a74 <next@@Base+0x854>
   18340:	ldrd	r2, [r6]
   18344:	ldr	r5, [pc, #2816]	; 18e4c <next@@Base+0xc2c>
   18348:	mov	r0, r7
   1834c:	adds	r2, r2, #1
   18350:	adc	r3, r3, #0
   18354:	strd	r2, [r6]
   18358:	bl	181e8 <push_back_one_char@@Base>
   1835c:	ldrd	r2, [r5, #-8]
   18360:	mov	r0, #8
   18364:	adds	r2, r2, #1
   18368:	adc	r3, r3, #0
   1836c:	strd	r2, [r5, #-8]
   18370:	add	r3, sp, #512	; 0x200
   18374:	add	r4, r3, r4
   18378:	mov	r3, #0
   1837c:	strb	r3, [r4, #-512]	; 0xfffffe00
   18380:	bl	1202c <malloc@plt>
   18384:	mov	r4, r0
   18388:	mov	r0, sp
   1838c:	bl	12110 <atoi@plt>
   18390:	ldrd	r2, [r5]
   18394:	adds	r2, r2, #1
   18398:	adc	r3, r3, #0
   1839c:	strd	r2, [r5], #16
   183a0:	mov	r1, r0
   183a4:	mov	r0, r4
   183a8:	bl	17d24 <init_token_int_value@@Base>
   183ac:	ldrd	r2, [r5, #-8]
   183b0:	adds	r2, r2, #1
   183b4:	adc	r3, r3, #0
   183b8:	strd	r2, [r5, #-8]
   183bc:	b	18260 <next@@Base+0x40>
   183c0:	cmp	r5, #32
   183c4:	cmpne	r5, #9
   183c8:	strd	r2, [r8]
   183cc:	moveq	fp, #1
   183d0:	movne	fp, #0
   183d4:	bne	18400 <next@@Base+0x1e0>
   183d8:	mov	r0, r7
   183dc:	bl	18144 <get_char@@Base>
   183e0:	mov	r5, r0
   183e4:	mov	r0, #0
   183e8:	ldr	r1, [pc, #2656]	; 18e50 <next@@Base+0xc30>
   183ec:	ldrd	r2, [r1]
   183f0:	adds	r2, r2, #1
   183f4:	adc	r3, r3, #0
   183f8:	strd	r2, [r1]
   183fc:	b	18298 <next@@Base+0x78>
   18400:	ldrd	r2, [r6, #112]	; 0x70
   18404:	adds	r2, r2, #1
   18408:	adc	r3, r3, #0
   1840c:	cmp	r5, #10
   18410:	strd	r2, [r6, #112]	; 0x70
   18414:	beq	183d8 <next@@Base+0x1b8>
   18418:	cmp	r5, #48	; 0x30
   1841c:	bne	18458 <next@@Base+0x238>
   18420:	ldrd	r2, [r6, #120]	; 0x78
   18424:	mov	r0, #8
   18428:	adds	r2, r2, #1
   1842c:	adc	r3, r3, #0
   18430:	strd	r2, [r6, #120]	; 0x78
   18434:	bl	1202c <malloc@plt>
   18438:	mov	r1, fp
   1843c:	mov	r4, r0
   18440:	bl	17d24 <init_token_int_value@@Base>
   18444:	ldrd	r2, [r6, #128]	; 0x80
   18448:	adds	r2, r2, #1
   1844c:	adc	r3, r3, #0
   18450:	strd	r2, [r6, #128]	; 0x80
   18454:	b	18260 <next@@Base+0x40>
   18458:	sub	r3, r5, #49	; 0x31
   1845c:	uxtb	r3, r3
   18460:	cmp	r3, #8
   18464:	bhi	184b0 <next@@Base+0x290>
   18468:	ldrd	r2, [r6, #136]	; 0x88
   1846c:	add	fp, r4, #1
   18470:	mov	r0, r7
   18474:	adds	r2, r2, #1
   18478:	adc	r3, r3, #0
   1847c:	strd	r2, [r6, #136]	; 0x88
   18480:	add	r3, sp, #512	; 0x200
   18484:	add	r4, r3, r4
   18488:	strb	r5, [r4, #-512]	; 0xfffffe00
   1848c:	bl	18144 <get_char@@Base>
   18490:	ldrd	r2, [r6, #144]	; 0x90
   18494:	mov	r4, fp
   18498:	adds	r2, r2, #1
   1849c:	adc	r3, r3, #0
   184a0:	strd	r2, [r6, #144]	; 0x90
   184a4:	mov	r5, r0
   184a8:	mov	r0, #1
   184ac:	b	183e8 <next@@Base+0x1c8>
   184b0:	cmp	r5, #40	; 0x28
   184b4:	bne	184ec <next@@Base+0x2cc>
   184b8:	ldrd	r2, [r6, #152]	; 0x98
   184bc:	mov	r0, #4
   184c0:	adds	r2, r2, #1
   184c4:	adc	r3, r3, #0
   184c8:	strd	r2, [r6, #152]	; 0x98
   184cc:	bl	1202c <malloc@plt>
   184d0:	mov	r4, r0
   184d4:	bl	17d74 <init_token_opar@@Base>
   184d8:	ldrd	r2, [r6, #160]	; 0xa0
   184dc:	adds	r2, r2, #1
   184e0:	adc	r3, r3, #0
   184e4:	strd	r2, [r6, #160]	; 0xa0
   184e8:	b	18260 <next@@Base+0x40>
   184ec:	cmp	r5, #41	; 0x29
   184f0:	bne	18528 <next@@Base+0x308>
   184f4:	ldrd	r2, [r6, #168]	; 0xa8
   184f8:	mov	r0, #4
   184fc:	adds	r2, r2, #1
   18500:	adc	r3, r3, #0
   18504:	strd	r2, [r6, #168]	; 0xa8
   18508:	bl	1202c <malloc@plt>
   1850c:	mov	r4, r0
   18510:	bl	17d98 <init_token_cpar@@Base>
   18514:	ldrd	r2, [r6, #176]	; 0xb0
   18518:	adds	r2, r2, #1
   1851c:	adc	r3, r3, #0
   18520:	strd	r2, [r6, #176]	; 0xb0
   18524:	b	18260 <next@@Base+0x40>
   18528:	cmp	r5, #123	; 0x7b
   1852c:	bne	18564 <next@@Base+0x344>
   18530:	ldrd	r2, [r6, #184]	; 0xb8
   18534:	mov	r0, #4
   18538:	adds	r2, r2, #1
   1853c:	adc	r3, r3, #0
   18540:	strd	r2, [r6, #184]	; 0xb8
   18544:	bl	1202c <malloc@plt>
   18548:	mov	r4, r0
   1854c:	bl	17dbc <init_token_obra@@Base>
   18550:	ldrd	r2, [r6, #192]	; 0xc0
   18554:	adds	r2, r2, #1
   18558:	adc	r3, r3, #0
   1855c:	strd	r2, [r6, #192]	; 0xc0
   18560:	b	18260 <next@@Base+0x40>
   18564:	cmp	r5, #125	; 0x7d
   18568:	bne	185a0 <next@@Base+0x380>
   1856c:	ldrd	r2, [r6, #200]	; 0xc8
   18570:	mov	r0, #4
   18574:	adds	r2, r2, #1
   18578:	adc	r3, r3, #0
   1857c:	strd	r2, [r6, #200]	; 0xc8
   18580:	bl	1202c <malloc@plt>
   18584:	mov	r4, r0
   18588:	bl	17de0 <init_token_cbra@@Base>
   1858c:	ldrd	r2, [r6, #208]	; 0xd0
   18590:	adds	r2, r2, #1
   18594:	adc	r3, r3, #0
   18598:	strd	r2, [r6, #208]	; 0xd0
   1859c:	b	18260 <next@@Base+0x40>
   185a0:	cmp	r5, #59	; 0x3b
   185a4:	bne	185dc <next@@Base+0x3bc>
   185a8:	ldrd	r2, [r6, #216]	; 0xd8
   185ac:	mov	r0, #4
   185b0:	adds	r2, r2, #1
   185b4:	adc	r3, r3, #0
   185b8:	strd	r2, [r6, #216]	; 0xd8
   185bc:	bl	1202c <malloc@plt>
   185c0:	mov	r4, r0
   185c4:	bl	17e28 <init_token_semicolon@@Base>
   185c8:	ldrd	r2, [r6, #224]	; 0xe0
   185cc:	adds	r2, r2, #1
   185d0:	adc	r3, r3, #0
   185d4:	strd	r2, [r6, #224]	; 0xe0
   185d8:	b	18260 <next@@Base+0x40>
   185dc:	add	r3, sp, #512	; 0x200
   185e0:	cmp	r5, #101	; 0x65
   185e4:	add	r1, r3, r4
   185e8:	bne	1862c <next@@Base+0x40c>
   185ec:	ldrd	r2, [r6, #232]	; 0xe8
   185f0:	mov	r0, r7
   185f4:	add	r4, r4, #1
   185f8:	adds	r2, r2, #1
   185fc:	adc	r3, r3, #0
   18600:	strd	r2, [r6, #232]	; 0xe8
   18604:	mov	r3, #101	; 0x65
   18608:	strb	r3, [r1, #-512]	; 0xfffffe00
   1860c:	bl	18144 <get_char@@Base>
   18610:	ldrd	r2, [r6, #240]	; 0xf0
   18614:	adds	r2, r2, #1
   18618:	adc	r3, r3, #0
   1861c:	strd	r2, [r6, #240]	; 0xf0
   18620:	mov	r5, r0
   18624:	mov	r0, #5
   18628:	b	183e8 <next@@Base+0x1c8>
   1862c:	cmp	r5, #105	; 0x69
   18630:	bne	18674 <next@@Base+0x454>
   18634:	ldrd	r2, [r6, #248]	; 0xf8
   18638:	mov	r0, r7
   1863c:	strb	r5, [r1, #-512]	; 0xfffffe00
   18640:	adds	r2, r2, #1
   18644:	adc	r3, r3, #0
   18648:	add	r4, r4, #1
   1864c:	strd	r2, [r6, #248]	; 0xf8
   18650:	bl	18144 <get_char@@Base>
   18654:	ldr	r1, [pc, #2040]	; 18e54 <next@@Base+0xc34>
   18658:	ldrd	r2, [r1]
   1865c:	adds	r2, r2, #1
   18660:	adc	r3, r3, #0
   18664:	strd	r2, [r1]
   18668:	mov	r5, r0
   1866c:	mov	r0, #2
   18670:	b	183e8 <next@@Base+0x1c8>
   18674:	cmp	r5, #109	; 0x6d
   18678:	bne	186bc <next@@Base+0x49c>
   1867c:	ldr	fp, [pc, #2004]	; 18e58 <next@@Base+0xc38>
   18680:	mov	r0, r7
   18684:	strb	r5, [r1, #-512]	; 0xfffffe00
   18688:	ldrd	r2, [fp, #-8]
   1868c:	add	r4, r4, #1
   18690:	adds	r2, r2, #1
   18694:	adc	r3, r3, #0
   18698:	strd	r2, [fp, #-8]
   1869c:	bl	18144 <get_char@@Base>
   186a0:	ldrd	r2, [fp]
   186a4:	adds	r2, r2, #1
   186a8:	adc	r3, r3, #0
   186ac:	strd	r2, [fp]
   186b0:	mov	r5, r0
   186b4:	mov	r0, #3
   186b8:	b	183e8 <next@@Base+0x1c8>
   186bc:	cmp	r5, #114	; 0x72
   186c0:	bne	18700 <next@@Base+0x4e0>
   186c4:	ldrd	r2, [sl, #-8]
   186c8:	mov	r0, r7
   186cc:	strb	r5, [r1, #-512]	; 0xfffffe00
   186d0:	adds	r2, r2, #1
   186d4:	adc	r3, r3, #0
   186d8:	add	r4, r4, #1
   186dc:	strd	r2, [sl, #-8]
   186e0:	bl	18144 <get_char@@Base>
   186e4:	ldrd	r2, [sl]
   186e8:	adds	r2, r2, #1
   186ec:	adc	r3, r3, #0
   186f0:	strd	r2, [sl]
   186f4:	mov	r5, r0
   186f8:	mov	r0, #4
   186fc:	b	183e8 <next@@Base+0x1c8>
   18700:	cmp	r5, #33	; 0x21
   18704:	bne	187d8 <next@@Base+0x5b8>
   18708:	ldr	r6, [pc, #1868]	; 18e5c <next@@Base+0xc3c>
   1870c:	mov	r0, r7
   18710:	strb	r5, [r1, #-512]	; 0xfffffe00
   18714:	ldrd	r2, [r6, #-8]
   18718:	add	r5, r6, #16
   1871c:	adds	r2, r2, #1
   18720:	adc	r3, r3, #0
   18724:	strd	r2, [r6, #-8]
   18728:	bl	18144 <get_char@@Base>
   1872c:	mov	r8, r0
   18730:	mov	r0, #8
   18734:	bl	1202c <malloc@plt>
   18738:	cmp	r8, #61	; 0x3d
   1873c:	mov	r4, r0
   18740:	beq	187a8 <next@@Base+0x588>
   18744:	ldrd	r2, [r6]
   18748:	mov	r0, r7
   1874c:	adds	r2, r2, #1
   18750:	adc	r3, r3, #0
   18754:	strd	r2, [r6]
   18758:	bl	181e8 <push_back_one_char@@Base>
   1875c:	mov	r0, #2
   18760:	bl	1202c <malloc@plt>
   18764:	ldrb	r3, [sp]
   18768:	strb	r3, [r0]
   1876c:	mov	r3, #0
   18770:	strb	r3, [r0, #1]
   18774:	ldrd	r2, [r5, #-8]
   18778:	adds	r2, r2, #1
   1877c:	adc	r3, r3, #0
   18780:	strd	r2, [r5, #-8]
   18784:	mov	r1, r0
   18788:	mov	r0, r4
   1878c:	bl	17eb8 <init_token_boolean_op@@Base>
   18790:	ldr	r1, [pc, #1736]	; 18e60 <next@@Base+0xc40>
   18794:	ldrd	r2, [r1, #-8]
   18798:	adds	r2, r2, #1
   1879c:	adc	r3, r3, #0
   187a0:	strd	r2, [r1, #-8]
   187a4:	b	18260 <next@@Base+0x40>
   187a8:	mov	r0, #3
   187ac:	bl	1202c <malloc@plt>
   187b0:	ldrb	r3, [sp]
   187b4:	strb	r3, [r0]
   187b8:	mov	r3, #0
   187bc:	strb	r3, [r0, #2]
   187c0:	ldrd	r2, [r5]
   187c4:	strb	r8, [r0, #1]
   187c8:	adds	r2, r2, #1
   187cc:	adc	r3, r3, #0
   187d0:	strd	r2, [r5]
   187d4:	b	18784 <next@@Base+0x564>
   187d8:	and	r3, r5, #253	; 0xfd
   187dc:	cmp	r3, #60	; 0x3c
   187e0:	bne	188b0 <next@@Base+0x690>
   187e4:	ldr	r8, [pc, #1652]	; 18e60 <next@@Base+0xc40>
   187e8:	mov	r0, r7
   187ec:	mov	r6, r8
   187f0:	ldrd	r2, [r8]
   187f4:	strb	r5, [r1, #-512]	; 0xfffffe00
   187f8:	adds	r2, r2, #1
   187fc:	adc	r3, r3, #0
   18800:	strd	r2, [r6], #32
   18804:	bl	18144 <get_char@@Base>
   18808:	mov	r5, r0
   1880c:	mov	r0, #8
   18810:	bl	1202c <malloc@plt>
   18814:	cmp	r5, #61	; 0x3d
   18818:	mov	r4, r0
   1881c:	beq	18880 <next@@Base+0x660>
   18820:	ldrd	r2, [r8, #8]
   18824:	mov	r0, r7
   18828:	adds	r2, r2, #1
   1882c:	adc	r3, r3, #0
   18830:	strd	r2, [r8, #8]
   18834:	bl	181e8 <push_back_one_char@@Base>
   18838:	mov	r0, #2
   1883c:	bl	1202c <malloc@plt>
   18840:	ldrb	r3, [sp]
   18844:	strb	r3, [r0]
   18848:	mov	r3, #0
   1884c:	strb	r3, [r0, #1]
   18850:	ldrd	r2, [r8, #16]
   18854:	adds	r2, r2, #1
   18858:	adc	r3, r3, #0
   1885c:	strd	r2, [r8, #16]
   18860:	mov	r1, r0
   18864:	mov	r0, r4
   18868:	bl	17eb8 <init_token_boolean_op@@Base>
   1886c:	ldrd	r2, [r6]
   18870:	adds	r2, r2, #1
   18874:	adc	r3, r3, #0
   18878:	strd	r2, [r6]
   1887c:	b	18260 <next@@Base+0x40>
   18880:	mov	r0, #3
   18884:	bl	1202c <malloc@plt>
   18888:	ldrb	r3, [sp]
   1888c:	strb	r3, [r0]
   18890:	mov	r3, #0
   18894:	strb	r3, [r0, #2]
   18898:	ldrd	r2, [r6, #-8]
   1889c:	strb	r5, [r0, #1]
   188a0:	adds	r2, r2, #1
   188a4:	adc	r3, r3, #0
   188a8:	strd	r2, [r6, #-8]
   188ac:	b	18860 <next@@Base+0x640>
   188b0:	cmp	r5, #61	; 0x3d
   188b4:	bne	18904 <next@@Base+0x6e4>
   188b8:	ldr	r6, [pc, #1444]	; 18e64 <next@@Base+0xc44>
   188bc:	mov	r0, r7
   188c0:	strb	r5, [r1, #-512]	; 0xfffffe00
   188c4:	ldrd	r2, [r6, #-8]
   188c8:	adds	r2, r2, #1
   188cc:	adc	r3, r3, #0
   188d0:	strd	r2, [r6, #-8]
   188d4:	bl	18144 <get_char@@Base>
   188d8:	mov	r7, r0
   188dc:	mov	r0, #8
   188e0:	bl	1202c <malloc@plt>
   188e4:	cmp	r7, #61	; 0x3d
   188e8:	mov	r4, r0
   188ec:	beq	18944 <next@@Base+0x724>
   188f0:	ldrd	r2, [r6]
   188f4:	adds	r2, r2, #1
   188f8:	adc	r3, r3, #0
   188fc:	strd	r2, [r6]
   18900:	b	18a6c <next@@Base+0x84c>
   18904:	cmp	r5, #124	; 0x7c
   18908:	bne	18990 <next@@Base+0x770>
   1890c:	ldr	r6, [pc, #1364]	; 18e68 <next@@Base+0xc48>
   18910:	mov	r0, r7
   18914:	strb	r5, [r1, #-512]	; 0xfffffe00
   18918:	ldrd	r2, [r6, #-8]
   1891c:	adds	r2, r2, #1
   18920:	adc	r3, r3, #0
   18924:	strd	r2, [r6, #-8]
   18928:	bl	18144 <get_char@@Base>
   1892c:	mov	r7, r0
   18930:	mov	r0, #8
   18934:	bl	1202c <malloc@plt>
   18938:	cmp	r7, #124	; 0x7c
   1893c:	mov	r4, r0
   18940:	b	188ec <next@@Base+0x6cc>
   18944:	ldrd	r2, [r6, #8]
   18948:	mov	r0, #3
   1894c:	adds	r2, r2, #1
   18950:	adc	r3, r3, #0
   18954:	strd	r2, [r6, #8]
   18958:	bl	1202c <malloc@plt>
   1895c:	ldrb	r3, [sp]
   18960:	strb	r3, [r0]
   18964:	mov	r3, #0
   18968:	strb	r3, [r0, #2]
   1896c:	mov	r1, r0
   18970:	strb	r5, [r0, #1]
   18974:	mov	r0, r4
   18978:	bl	17eb8 <init_token_boolean_op@@Base>
   1897c:	ldrd	r2, [r6, #16]
   18980:	adds	r2, r2, #1
   18984:	adc	r3, r3, #0
   18988:	strd	r2, [r6, #16]
   1898c:	b	18260 <next@@Base+0x40>
   18990:	ldr	r6, [pc, #1236]	; 18e6c <next@@Base+0xc4c>
   18994:	cmp	r5, #38	; 0x26
   18998:	add	r8, r6, #32
   1899c:	bne	18a38 <next@@Base+0x818>
   189a0:	ldrd	r2, [r6, #-8]
   189a4:	mov	r0, r7
   189a8:	strb	r5, [r1, #-512]	; 0xfffffe00
   189ac:	adds	r2, r2, #1
   189b0:	adc	r3, r3, #0
   189b4:	add	r6, r6, #16
   189b8:	strd	r2, [r6, #-24]	; 0xffffffe8
   189bc:	bl	18144 <get_char@@Base>
   189c0:	mov	r7, r0
   189c4:	mov	r0, #8
   189c8:	bl	1202c <malloc@plt>
   189cc:	cmp	r7, #38	; 0x26
   189d0:	mov	r4, r0
   189d4:	beq	189ec <next@@Base+0x7cc>
   189d8:	ldrd	r2, [r6, #-8]
   189dc:	adds	r2, r2, #1
   189e0:	adc	r3, r3, #0
   189e4:	strd	r2, [r6, #-8]
   189e8:	b	18a6c <next@@Base+0x84c>
   189ec:	ldrd	r2, [r6]
   189f0:	mov	r0, #3
   189f4:	adds	r2, r2, #1
   189f8:	adc	r3, r3, #0
   189fc:	strd	r2, [r6]
   18a00:	bl	1202c <malloc@plt>
   18a04:	ldrb	r3, [sp]
   18a08:	strb	r3, [r0]
   18a0c:	mov	r3, #0
   18a10:	mov	r1, r0
   18a14:	strb	r5, [r0, #1]
   18a18:	strb	r3, [r0, #2]
   18a1c:	mov	r0, r4
   18a20:	bl	17eb8 <init_token_boolean_op@@Base>
   18a24:	ldrd	r2, [r8, #-8]
   18a28:	adds	r2, r2, #1
   18a2c:	adc	r3, r3, #0
   18a30:	strd	r2, [r8, #-8]
   18a34:	b	18260 <next@@Base+0x40>
   18a38:	ldrd	r2, [r6]
   18a3c:	ldr	r1, [pc, #1068]	; 18e70 <next@@Base+0xc50>
   18a40:	adds	r2, r2, #1
   18a44:	adc	r3, r3, #0
   18a48:	strd	r2, [r6]
   18a4c:	ldr	r3, [pc, #1056]	; 18e74 <next@@Base+0xc54>
   18a50:	mov	r2, r5
   18a54:	ldr	r0, [r3]
   18a58:	bl	1208c <fprintf@plt>
   18a5c:	ldrd	r2, [r8]
   18a60:	adds	r2, r2, #1
   18a64:	adc	r3, r3, #0
   18a68:	strd	r2, [r8]
   18a6c:	mov	r0, #1
   18a70:	bl	12074 <exit@plt>
   18a74:	ldrd	r2, [r6, #-8]
   18a78:	mov	r0, r7
   18a7c:	strb	r5, [sp, r4]
   18a80:	adds	r2, r2, #1
   18a84:	adc	r3, r3, #0
   18a88:	add	r4, r4, #1
   18a8c:	strd	r2, [r6, #-8]
   18a90:	bl	18144 <get_char@@Base>
   18a94:	mov	r5, r0
   18a98:	b	18330 <next@@Base+0x110>
   18a9c:	ldr	r1, [pc, #980]	; 18e78 <next@@Base+0xc58>
   18aa0:	strd	r2, [r8]
   18aa4:	cmp	r5, #102	; 0x66
   18aa8:	add	r3, sp, #512	; 0x200
   18aac:	add	r4, r3, r4
   18ab0:	add	r8, r1, #32
   18ab4:	beq	18b0c <next@@Base+0x8ec>
   18ab8:	cmp	r5, #110	; 0x6e
   18abc:	bne	18b4c <next@@Base+0x92c>
   18ac0:	ldrd	r2, [r1]
   18ac4:	mov	r6, r1
   18ac8:	mov	r0, r7
   18acc:	adds	r2, r2, #1
   18ad0:	adc	r3, r3, #0
   18ad4:	strb	r5, [r4, #-512]	; 0xfffffe00
   18ad8:	strd	r2, [r6], #16
   18adc:	bl	18144 <get_char@@Base>
   18ae0:	cmp	r0, #116	; 0x74
   18ae4:	bne	189d8 <next@@Base+0x7b8>
   18ae8:	ldrd	r2, [r6]
   18aec:	mov	r0, #4
   18af0:	adds	r2, r2, #1
   18af4:	adc	r3, r3, #0
   18af8:	strd	r2, [r6]
   18afc:	bl	1202c <malloc@plt>
   18b00:	mov	r4, r0
   18b04:	bl	17d00 <init_token_int_type@@Base>
   18b08:	b	18a24 <next@@Base+0x804>
   18b0c:	ldrd	r2, [r1, #-8]
   18b10:	mov	r0, #4
   18b14:	strb	r5, [r4, #-512]	; 0xfffffe00
   18b18:	adds	r2, r2, #1
   18b1c:	adc	r3, r3, #0
   18b20:	strd	r2, [r1, #-8]
   18b24:	mov	r3, #0
   18b28:	strb	r3, [r4, #-511]	; 0xfffffe01
   18b2c:	bl	1202c <malloc@plt>
   18b30:	mov	r4, r0
   18b34:	bl	17e70 <init_token_if@@Base>
   18b38:	ldrd	r2, [r8]
   18b3c:	adds	r2, r2, #1
   18b40:	adc	r3, r3, #0
   18b44:	strd	r2, [r8]
   18b48:	b	18260 <next@@Base+0x40>
   18b4c:	ldr	r1, [pc, #808]	; 18e7c <next@@Base+0xc5c>
   18b50:	ldrd	r2, [r1]
   18b54:	adds	r2, r2, #1
   18b58:	adc	r3, r3, #0
   18b5c:	strd	r2, [r1]
   18b60:	b	18a6c <next@@Base+0x84c>
   18b64:	cmp	r5, #97	; 0x61
   18b68:	strd	r2, [r8]
   18b6c:	ldr	r8, [pc, #780]	; 18e80 <next@@Base+0xc60>
   18b70:	beq	18b88 <next@@Base+0x968>
   18b74:	ldrd	r2, [r8, #-8]
   18b78:	adds	r2, r2, #1
   18b7c:	adc	r3, r3, #0
   18b80:	strd	r2, [r8, #-8]
   18b84:	b	18a6c <next@@Base+0x84c>
   18b88:	ldrd	r2, [r8]
   18b8c:	mov	r6, r8
   18b90:	mov	r0, r7
   18b94:	adds	r2, r2, #1
   18b98:	adc	r3, r3, #0
   18b9c:	add	sl, r4, #1
   18ba0:	strd	r2, [r6], #16
   18ba4:	add	r3, sp, #512	; 0x200
   18ba8:	add	r3, r3, r4
   18bac:	strb	r5, [r3, #-512]	; 0xfffffe00
   18bb0:	bl	18144 <get_char@@Base>
   18bb4:	cmp	r0, #105	; 0x69
   18bb8:	bne	189d8 <next@@Base+0x7b8>
   18bbc:	ldrd	r2, [r6]
   18bc0:	add	r9, r4, #2
   18bc4:	adds	r2, r2, #1
   18bc8:	adc	r3, r3, #0
   18bcc:	strd	r2, [r6]
   18bd0:	add	r3, sp, #512	; 0x200
   18bd4:	add	sl, r3, sl
   18bd8:	strb	r0, [sl, #-512]	; 0xfffffe00
   18bdc:	mov	r0, r7
   18be0:	bl	18144 <get_char@@Base>
   18be4:	add	r2, r8, #32
   18be8:	cmp	r0, #110	; 0x6e
   18bec:	beq	18c04 <next@@Base+0x9e4>
   18bf0:	ldrd	r0, [r2, #-8]
   18bf4:	adds	r0, r0, #1
   18bf8:	adc	r1, r1, #0
   18bfc:	strd	r0, [r2, #-8]
   18c00:	b	18a6c <next@@Base+0x84c>
   18c04:	ldrd	r6, [r2]
   18c08:	add	r3, sp, #512	; 0x200
   18c0c:	add	r5, r4, #3
   18c10:	adds	r6, r6, #1
   18c14:	adc	r7, r7, #0
   18c18:	add	r9, r3, r9
   18c1c:	add	r3, r3, r5
   18c20:	strd	r6, [r2]
   18c24:	strb	r0, [r9, #-512]	; 0xfffffe00
   18c28:	mov	r7, #0
   18c2c:	add	r0, r4, #4
   18c30:	strb	r7, [r3, #-512]	; 0xfffffe00
   18c34:	bl	1202c <malloc@plt>
   18c38:	mov	r2, r5
   18c3c:	mov	r1, sp
   18c40:	mov	r6, r0
   18c44:	bl	120e0 <strncpy@plt>
   18c48:	strb	r7, [r6, r5]
   18c4c:	mov	r0, #8
   18c50:	bl	1202c <malloc@plt>
   18c54:	mov	r1, r6
   18c58:	mov	r4, r0
   18c5c:	bl	17d4c <init_token_function@@Base>
   18c60:	ldrd	r0, [r8, #40]	; 0x28
   18c64:	adds	r0, r0, #1
   18c68:	adc	r1, r1, #0
   18c6c:	strd	r0, [r8, #40]	; 0x28
   18c70:	b	18260 <next@@Base+0x40>
   18c74:	cmp	r5, #101	; 0x65
   18c78:	strd	r2, [r8]
   18c7c:	ldrne	r1, [pc, #512]	; 18e84 <next@@Base+0xc64>
   18c80:	bne	18b50 <next@@Base+0x930>
   18c84:	ldr	r6, [pc, #508]	; 18e88 <next@@Base+0xc68>
   18c88:	mov	r0, r7
   18c8c:	add	r9, r4, #1
   18c90:	ldrd	r2, [r6, #-8]
   18c94:	adds	r2, r2, #1
   18c98:	adc	r3, r3, #0
   18c9c:	strd	r2, [r6, #-8]
   18ca0:	add	r3, sp, #512	; 0x200
   18ca4:	add	r3, r3, r4
   18ca8:	strb	r5, [r3, #-512]	; 0xfffffe00
   18cac:	bl	18144 <get_char@@Base>
   18cb0:	cmp	r0, #116	; 0x74
   18cb4:	bne	188f0 <next@@Base+0x6d0>
   18cb8:	add	r5, r6, #16
   18cbc:	ldrd	r2, [r5, #-8]
   18cc0:	add	r8, r4, #2
   18cc4:	adds	r2, r2, #1
   18cc8:	adc	r3, r3, #0
   18ccc:	strd	r2, [r5, #-8]
   18cd0:	add	r3, sp, #512	; 0x200
   18cd4:	add	r9, r3, r9
   18cd8:	strb	r0, [r9, #-512]	; 0xfffffe00
   18cdc:	mov	r0, r7
   18ce0:	bl	18144 <get_char@@Base>
   18ce4:	cmp	r0, #117	; 0x75
   18ce8:	beq	18d00 <next@@Base+0xae0>
   18cec:	ldrd	r2, [r5]
   18cf0:	adds	r2, r2, #1
   18cf4:	adc	r3, r3, #0
   18cf8:	strd	r2, [r5]
   18cfc:	b	18a6c <next@@Base+0x84c>
   18d00:	add	r5, r6, #32
   18d04:	ldrd	r2, [r5, #-8]
   18d08:	add	r4, r4, #3
   18d0c:	adds	r2, r2, #1
   18d10:	adc	r3, r3, #0
   18d14:	strd	r2, [r5, #-8]
   18d18:	add	r3, sp, #512	; 0x200
   18d1c:	add	r8, r3, r8
   18d20:	strb	r0, [r8, #-512]	; 0xfffffe00
   18d24:	mov	r0, r7
   18d28:	bl	18144 <get_char@@Base>
   18d2c:	cmp	r0, #114	; 0x72
   18d30:	bne	18cec <next@@Base+0xacc>
   18d34:	add	r5, r6, #48	; 0x30
   18d38:	ldrd	r2, [r5, #-8]
   18d3c:	adds	r2, r2, #1
   18d40:	adc	r3, r3, #0
   18d44:	strd	r2, [r5, #-8]
   18d48:	add	r3, sp, #512	; 0x200
   18d4c:	add	r4, r3, r4
   18d50:	strb	r0, [r4, #-512]	; 0xfffffe00
   18d54:	mov	r0, r7
   18d58:	bl	18144 <get_char@@Base>
   18d5c:	cmp	r0, #110	; 0x6e
   18d60:	bne	18cec <next@@Base+0xacc>
   18d64:	ldrd	r2, [r6, #56]	; 0x38
   18d68:	mov	r0, #4
   18d6c:	adds	r2, r2, #1
   18d70:	adc	r3, r3, #0
   18d74:	strd	r2, [r6, #56]	; 0x38
   18d78:	bl	1202c <malloc@plt>
   18d7c:	mov	r4, r0
   18d80:	bl	17e04 <init_token_return@@Base>
   18d84:	ldrd	r2, [r6, #64]	; 0x40
   18d88:	adds	r2, r2, #1
   18d8c:	adc	r3, r3, #0
   18d90:	strd	r2, [r6, #64]	; 0x40
   18d94:	b	18260 <next@@Base+0x40>
   18d98:	cmp	r5, #108	; 0x6c
   18d9c:	strd	r2, [r8]
   18da0:	ldr	r6, [pc, #228]	; 18e8c <next@@Base+0xc6c>
   18da4:	bne	189d8 <next@@Base+0x7b8>
   18da8:	ldrd	r2, [r6]
   18dac:	mov	r8, r6
   18db0:	add	r9, r4, #1
   18db4:	adds	r2, r2, #1
   18db8:	adc	r3, r3, #0
   18dbc:	mov	r0, r7
   18dc0:	strd	r2, [r8], #16
   18dc4:	add	r3, sp, #512	; 0x200
   18dc8:	add	r4, r3, r4
   18dcc:	strb	r5, [r4, #-512]	; 0xfffffe00
   18dd0:	bl	18144 <get_char@@Base>
   18dd4:	cmp	r0, #115	; 0x73
   18dd8:	bne	18b74 <next@@Base+0x954>
   18ddc:	ldrd	r2, [r8]
   18de0:	adds	r2, r2, #1
   18de4:	adc	r3, r3, #0
   18de8:	strd	r2, [r8]
   18dec:	add	r3, sp, #512	; 0x200
   18df0:	add	r9, r3, r9
   18df4:	strb	r0, [r9, #-512]	; 0xfffffe00
   18df8:	mov	r0, r7
   18dfc:	bl	18144 <get_char@@Base>
   18e00:	add	r2, r6, #32
   18e04:	cmp	r0, #101	; 0x65
   18e08:	bne	18bf0 <next@@Base+0x9d0>
   18e0c:	ldrd	r0, [r2]
   18e10:	adds	r0, r0, #1
   18e14:	adc	r1, r1, #0
   18e18:	strd	r0, [r2]
   18e1c:	mov	r0, #4
   18e20:	bl	1202c <malloc@plt>
   18e24:	mov	r4, r0
   18e28:	bl	17e94 <init_token_else@@Base>
   18e2c:	ldrd	r0, [r6, #40]	; 0x28
   18e30:	adds	r0, r0, #1
   18e34:	adc	r1, r1, #0
   18e38:	strd	r0, [r6, #40]	; 0x28
   18e3c:	b	18260 <next@@Base+0x40>
   18e40:	andeq	lr, r2, r8, asr #3
   18e44:	strdeq	lr, [r2], -r8
   18e48:			; <UNDEFINED> instruction: 0x0002e3b8
   18e4c:	andeq	lr, r2, r8, asr #7
   18e50:	ldrdeq	lr, [r2], -r8
   18e54:	andeq	lr, r2, r8, asr #5
   18e58:	ldrdeq	lr, [r2], -r8
   18e5c:	strdeq	lr, [r2], -r8
   18e60:	andeq	lr, r2, r8, lsl r3
   18e64:	andeq	lr, r2, r8, asr #6
   18e68:	andeq	lr, r2, r8, ror #6
   18e6c:	andeq	lr, r2, r8, lsl #7
   18e70:	ldrdeq	fp, [r1], -r5
   18e74:	andeq	ip, r2, r0, asr #24
   18e78:	andeq	lr, r2, r8, ror #7
   18e7c:	ldrdeq	lr, [r2], -r8
   18e80:	andeq	lr, r2, r8, lsl r4
   18e84:	andeq	lr, r2, r8, asr #8
   18e88:	andeq	lr, r2, r8, asr r4
   18e8c:	andeq	lr, r2, r8, lsr #9
   18e90:	b	1a0bc <next@@Base+0x1e9c>
   18e94:	push	{r4, r5, r6, lr}
   18e98:	subs	r5, r1, #0
   18e9c:	popeq	{r4, r5, r6, pc}
   18ea0:	mov	r4, r0
   18ea4:	bl	18e90 <next@@Base+0xc70>
   18ea8:	ldrd	r2, [r4]
   18eac:	adds	r0, r0, r2
   18eb0:	adc	r1, r1, r3
   18eb4:	subs	r5, r5, #1
   18eb8:	strd	r0, [r4], #8
   18ebc:	bne	18ea4 <next@@Base+0xc84>
   18ec0:	pop	{r4, r5, r6, pc}
   18ec4:	ldr	r3, [pc, #20]	; 18ee0 <next@@Base+0xcc0>
   18ec8:	ldr	r2, [pc, #20]	; 18ee4 <next@@Base+0xcc4>
   18ecc:	add	r3, pc, r3
   18ed0:	ldr	r3, [r3, r2]
   18ed4:	ldmib	r3, {r0, r3}
   18ed8:	add	r0, r0, r3
   18edc:	bx	lr
   18ee0:	andeq	r3, r1, ip, lsr #2
   18ee4:	andeq	r0, r0, r8, lsr #1
   18ee8:	ldr	r3, [pc, #28]	; 18f0c <next@@Base+0xcec>
   18eec:	ldr	r2, [pc, #28]	; 18f10 <next@@Base+0xcf0>
   18ef0:	add	r3, pc, r3
   18ef4:	ldr	r3, [r3, r2]
   18ef8:	ldr	r2, [r3]
   18efc:	cmp	r2, #0
   18f00:	ldrne	r0, [r3, #20]
   18f04:	moveq	r0, #1
   18f08:	bx	lr
   18f0c:	andeq	r3, r1, r8, lsl #2
   18f10:	andeq	r0, r0, r8, lsr #1
   18f14:	bx	lr
   18f18:	ldr	ip, [pc, #32]	; 18f40 <next@@Base+0xd20>
   18f1c:	mov	r3, #32
   18f20:	teq	r0, r1
   18f24:	movmi	r2, ip
   18f28:	movpl	r2, #0
   18f2c:	subs	r3, r3, #1
   18f30:	lsl	r1, r1, #1
   18f34:	eor	r0, r2, r0, lsl #1
   18f38:	bne	18f20 <next@@Base+0xd00>
   18f3c:	bx	lr
   18f40:	strbeq	r1, [r1], #3511	; 0xdb7
   18f44:	ldr	r3, [pc, #76]	; 18f98 <next@@Base+0xd78>
   18f48:	ldr	r1, [pc, #76]	; 18f9c <next@@Base+0xd7c>
   18f4c:	add	r3, pc, r3
   18f50:	push	{r4, r5, r6, lr}
   18f54:	mov	r5, r0
   18f58:	ldr	r4, [r3, r1]
   18f5c:	lsl	r1, r0, #2
   18f60:	mov	r0, r4
   18f64:	mov	r2, #1
   18f68:	ldr	r3, [r0], #28
   18f6c:	bl	11ffc <fwrite@plt>
   18f70:	cmp	r0, #1
   18f74:	movne	r3, #1
   18f78:	ldr	r0, [r4, #8]
   18f7c:	strne	r3, [r4, #20]
   18f80:	ldr	r3, [r4, #4]
   18f84:	sub	r0, r0, r5
   18f88:	add	r3, r3, r5
   18f8c:	str	r3, [r4, #4]
   18f90:	str	r0, [r4, #8]
   18f94:	pop	{r4, r5, r6, pc}
   18f98:	andeq	r3, r1, ip, lsr #1
   18f9c:	andeq	r0, r0, r8, lsr #1
   18fa0:	ldr	r3, [pc, #76]	; 18ff4 <next@@Base+0xdd4>
   18fa4:	ldr	r2, [pc, #76]	; 18ff8 <next@@Base+0xdd8>
   18fa8:	add	r3, pc, r3
   18fac:	push	{r4, r5, r6, lr}
   18fb0:	mov	r5, r0
   18fb4:	ldr	r4, [r3, r2]
   18fb8:	ldr	r3, [r4, #8]
   18fbc:	cmp	r3, #1024	; 0x400
   18fc0:	bcc	18fe0 <next@@Base+0xdc0>
   18fc4:	mov	r0, #1024	; 0x400
   18fc8:	bl	18f44 <next@@Base+0xd24>
   18fcc:	ldr	r3, [r4, #8]
   18fd0:	cmp	r3, #0
   18fd4:	addne	r2, r4, #4096	; 0x1000
   18fd8:	ldrne	r2, [r2, #28]
   18fdc:	strne	r2, [r4, #28]
   18fe0:	add	r0, r3, #7
   18fe4:	add	r3, r5, r3
   18fe8:	str	r3, [r4, #8]
   18fec:	add	r0, r4, r0, lsl #2
   18ff0:	pop	{r4, r5, r6, pc}
   18ff4:	andeq	r3, r1, r0, asr r0
   18ff8:	andeq	r0, r0, r8, lsr #1
   18ffc:	ldr	r3, [pc, #172]	; 190b0 <next@@Base+0xe90>
   19000:	ldr	r2, [pc, #172]	; 190b4 <next@@Base+0xe94>
   19004:	add	r3, pc, r3
   19008:	push	{r4, r5, r6, lr}
   1900c:	mov	r5, r0
   19010:	ldr	r4, [r3, r2]
   19014:	ldr	r3, [r4, #8]
   19018:	ldr	ip, [r4, #12]
   1901c:	sub	ip, ip, r3
   19020:	cmp	ip, r0
   19024:	bcs	19080 <next@@Base+0xe60>
   19028:	ldr	r2, [r4, #4]
   1902c:	cmp	ip, #0
   19030:	add	r2, r2, r3
   19034:	str	r2, [r4, #4]
   19038:	addne	r2, r4, #28
   1903c:	mov	r0, r4
   19040:	ldrne	r3, [r2, r3, lsl #2]
   19044:	mov	r6, #0
   19048:	strne	r3, [r4, #28]
   1904c:	ldr	r3, [r0], #28
   19050:	mov	r2, #4096	; 0x1000
   19054:	add	r0, r0, ip, lsl #2
   19058:	mov	r1, #1
   1905c:	str	ip, [r4, #12]
   19060:	str	r6, [r4, #8]
   19064:	bl	12014 <fread@plt>
   19068:	ldr	r3, [r4, #12]
   1906c:	add	r0, r3, r0, lsr #2
   19070:	cmp	r5, r0
   19074:	str	r0, [r4, #12]
   19078:	bhi	19094 <next@@Base+0xe74>
   1907c:	ldr	r3, [r4, #8]
   19080:	add	r0, r3, #7
   19084:	add	r5, r5, r3
   19088:	add	r0, r4, r0, lsl #2
   1908c:	str	r5, [r4, #8]
   19090:	pop	{r4, r5, r6, pc}
   19094:	ldr	r3, [r4, #16]
   19098:	str	r6, [r4, #12]
   1909c:	add	r5, r5, r3
   190a0:	sub	r5, r5, r0
   190a4:	str	r5, [r4, #16]
   190a8:	mov	r0, r6
   190ac:	pop	{r4, r5, r6, pc}
   190b0:	strdeq	r2, [r1], -r4
   190b4:	andeq	r0, r0, r8, lsr #1
   190b8:	push	{r0, r1, r2, r3}
   190bc:	ldr	r3, [pc, #52]	; 190f8 <next@@Base+0xed8>
   190c0:	ldr	r1, [pc, #52]	; 190fc <next@@Base+0xedc>
   190c4:	push	{lr}		; (str lr, [sp, #-4]!)
   190c8:	add	r3, pc, r3
   190cc:	sub	sp, sp, #12
   190d0:	add	r2, sp, #20
   190d4:	str	r2, [sp, #4]
   190d8:	ldr	r0, [r3, r1]
   190dc:	ldr	r1, [sp, #16]
   190e0:	ldr	r0, [r0]
   190e4:	bl	12104 <vfprintf@plt>
   190e8:	add	sp, sp, #12
   190ec:	pop	{lr}		; (ldr lr, [sp], #4)
   190f0:	add	sp, sp, #16
   190f4:	bx	lr
   190f8:	andeq	r2, r1, r0, lsr pc
   190fc:	muleq	r0, ip, r0
   19100:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19104:	subs	r6, r1, #0
   19108:	beq	19164 <next@@Base+0xf44>
   1910c:	cmp	r2, #0
   19110:	movne	r3, #0
   19114:	mov	r7, r2
   19118:	ldr	r8, [r6]
   1911c:	addne	r5, r0, #12
   19120:	movne	r4, r3
   19124:	beq	19154 <next@@Base+0xf34>
   19128:	ldr	r0, [r5, #4]!
   1912c:	add	r2, r6, r3, lsl #3
   19130:	cmp	r0, #0
   19134:	add	r9, r3, #1
   19138:	add	r4, r4, #1
   1913c:	beq	1914c <next@@Base+0xf2c>
   19140:	ldr	r0, [r2, #28]
   19144:	bl	11fd8 <free@plt>
   19148:	mov	r3, r9
   1914c:	cmp	r7, r4
   19150:	bne	19128 <next@@Base+0xf08>
   19154:	mov	r0, r6
   19158:	bl	11fd8 <free@plt>
   1915c:	mov	r0, r8
   19160:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19164:	mov	r8, r6
   19168:	b	1915c <next@@Base+0xf3c>
   1916c:	push	{r4, r5}
   19170:	mov	r4, r0
   19174:	mov	r5, r1
   19178:	orrs	r3, r4, r5
   1917c:	beq	191c0 <next@@Base+0xfa0>
   19180:	cmp	r1, #0
   19184:	clzeq	r1, r0
   19188:	addeq	r1, r1, #32
   1918c:	clzne	r1, r1
   19190:	rsb	r3, r1, #63	; 0x3f
   19194:	cmp	r3, #1
   19198:	bls	191c0 <next@@Base+0xfa0>
   1919c:	rsb	r2, r1, #61	; 0x3d
   191a0:	rsb	r0, r2, #32
   191a4:	lsr	r3, r4, r2
   191a8:	sub	r2, r2, #32
   191ac:	orr	r3, r3, r5, lsl r0
   191b0:	orr	r3, r3, r5, lsr r2
   191b4:	rsb	r1, r1, #1073741886	; 0x4000003e
   191b8:	and	r0, r3, #3
   191bc:	add	r0, r0, r1, lsl #2
   191c0:	pop	{r4, r5}
   191c4:	bx	lr
   191c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   191cc:	mov	r1, r3
   191d0:	mov	sl, r0
   191d4:	mov	r0, r2
   191d8:	mov	r8, r2
   191dc:	mov	r9, r3
   191e0:	bl	1916c <next@@Base+0xf4c>
   191e4:	add	r0, r0, r0, lsl #1
   191e8:	lsl	r0, r0, #3
   191ec:	add	r3, sl, r0
   191f0:	ldr	r2, [sl, r0]
   191f4:	ldrd	r4, [r3, #16]
   191f8:	ldrd	r6, [r3, #8]
   191fc:	add	r2, r2, #1
   19200:	adds	r4, r4, r8
   19204:	adc	r5, r5, r9
   19208:	cmp	r8, r6
   1920c:	sbcs	r1, r9, r7
   19210:	str	r2, [sl, r0]
   19214:	strd	r4, [r3, #16]
   19218:	strdlt	r8, [r3, #8]
   1921c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19220:	ldr	r3, [r1, #8]
   19224:	cmp	r3, #0
   19228:	bxeq	lr
   1922c:	push	{r4, r5, r6, r7, r8, lr}
   19230:	add	r2, r1, #6016	; 0x1780
   19234:	mov	r8, r1
   19238:	mov	r7, r0
   1923c:	ldrd	r0, [r1, #24]
   19240:	add	r2, r2, #32
   19244:	mov	r3, r8
   19248:	mov	ip, #0
   1924c:	mov	r4, #0
   19250:	mov	r5, #0
   19254:	str	ip, [r3, #40]	; 0x28
   19258:	strd	r0, [r3, #48]	; 0x30
   1925c:	strd	r4, [r3, #56]	; 0x38
   19260:	add	r3, r3, #24
   19264:	cmp	r2, r3
   19268:	bne	19254 <next@@Base+0x1034>
   1926c:	cmp	r7, #0
   19270:	popeq	{r4, r5, r6, r7, r8, pc}
   19274:	add	r8, r8, #40	; 0x28
   19278:	ldr	r3, [r7, #16]
   1927c:	cmp	r3, #0
   19280:	beq	19308 <next@@Base+0x10e8>
   19284:	ldr	r2, [r7, #56]	; 0x38
   19288:	cmp	r2, #0
   1928c:	beq	19308 <next@@Base+0x10e8>
   19290:	mov	r6, #0
   19294:	b	192a4 <next@@Base+0x1084>
   19298:	add	r6, r6, #1
   1929c:	cmp	r2, r6
   192a0:	beq	19308 <next@@Base+0x10e8>
   192a4:	ldr	r3, [r7, #60]	; 0x3c
   192a8:	ldr	r4, [r3, r6, lsl #2]
   192ac:	cmp	r4, #0
   192b0:	beq	19298 <next@@Base+0x1078>
   192b4:	ldr	r3, [r4]
   192b8:	cmp	r3, r7
   192bc:	bne	19298 <next@@Base+0x1078>
   192c0:	ldr	r3, [r4, #16]
   192c4:	cmp	r3, #0
   192c8:	beq	19298 <next@@Base+0x1078>
   192cc:	mov	r5, #0
   192d0:	ldr	r2, [r4, #20]
   192d4:	lsl	r3, r5, #3
   192d8:	add	r2, r2, r3
   192dc:	mov	r0, r8
   192e0:	ldrd	r2, [r2]
   192e4:	bl	191c8 <next@@Base+0xfa8>
   192e8:	ldr	r3, [r4, #16]
   192ec:	add	r5, r5, #1
   192f0:	cmp	r3, r5
   192f4:	bhi	192d0 <next@@Base+0x10b0>
   192f8:	ldr	r2, [r7, #56]	; 0x38
   192fc:	add	r6, r6, #1
   19300:	cmp	r2, r6
   19304:	bne	192a4 <next@@Base+0x1084>
   19308:	ldr	r7, [r7, #4]
   1930c:	cmp	r7, #0
   19310:	bne	19278 <next@@Base+0x1058>
   19314:	pop	{r4, r5, r6, r7, r8, pc}
   19318:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1931c:	sub	sp, sp, #12
   19320:	mov	r5, r0
   19324:	str	r0, [sp, #4]
   19328:	mov	r6, r2
   1932c:	str	r2, [sp]
   19330:	mov	r0, r1
   19334:	mov	r4, r1
   19338:	ldr	r2, [pc, #344]	; 19498 <next@@Base+0x1278>
   1933c:	mov	r1, #0
   19340:	bl	120c8 <memset@plt>
   19344:	subs	r3, r5, #0
   19348:	mov	r5, #0
   1934c:	str	r5, [r6]
   19350:	beq	1947c <next@@Base+0x125c>
   19354:	mov	r7, r5
   19358:	mov	r9, r5
   1935c:	mov	r8, r3
   19360:	ldr	r0, [r8, #12]
   19364:	bl	12080 <strlen@plt>
   19368:	cmp	r5, r0
   1936c:	ldrcc	r3, [sp]
   19370:	strcc	r0, [r3]
   19374:	mov	r0, r7
   19378:	ldr	r1, [r8, #8]
   1937c:	bl	18f18 <next@@Base+0xcf8>
   19380:	ldr	r6, [r8, #56]	; 0x38
   19384:	mov	r1, r6
   19388:	bl	18f18 <next@@Base+0xcf8>
   1938c:	cmp	r6, #0
   19390:	mov	r7, r0
   19394:	beq	19464 <next@@Base+0x1244>
   19398:	ldr	r5, [r8, #60]	; 0x3c
   1939c:	add	r6, r5, r6, lsl #2
   193a0:	b	193c4 <next@@Base+0x11a4>
   193a4:	mov	r0, r7
   193a8:	mov	r1, r9
   193ac:	bl	18f18 <next@@Base+0xcf8>
   193b0:	mov	r1, r9
   193b4:	bl	18f18 <next@@Base+0xcf8>
   193b8:	mov	r7, r0
   193bc:	cmp	r6, r5
   193c0:	beq	19464 <next@@Base+0x1244>
   193c4:	ldr	fp, [r5], #4
   193c8:	cmp	fp, #0
   193cc:	beq	193a4 <next@@Base+0x1184>
   193d0:	ldr	r3, [fp]
   193d4:	cmp	r3, r8
   193d8:	bne	193a4 <next@@Base+0x1184>
   193dc:	mov	r0, r7
   193e0:	ldr	r1, [fp, #12]
   193e4:	bl	18f18 <next@@Base+0xcf8>
   193e8:	ldr	r1, [fp, #8]
   193ec:	bl	18f18 <next@@Base+0xcf8>
   193f0:	ldr	r3, [r8, #16]
   193f4:	cmp	r3, #0
   193f8:	mov	r7, r0
   193fc:	beq	193bc <next@@Base+0x119c>
   19400:	ldr	sl, [fp, #16]
   19404:	ldr	r3, [r4, #8]
   19408:	mov	r1, sl
   1940c:	add	r3, r3, sl
   19410:	str	r3, [r4, #8]
   19414:	bl	18f18 <next@@Base+0xcf8>
   19418:	cmp	sl, #0
   1941c:	mov	r7, r0
   19420:	beq	193bc <next@@Base+0x119c>
   19424:	ldr	ip, [fp, #20]
   19428:	ldrd	r2, [r4, #16]
   1942c:	add	lr, ip, sl, lsl #3
   19430:	ldrd	r0, [ip]
   19434:	ldrd	sl, [r4, #24]
   19438:	adds	r2, r2, r0
   1943c:	adc	r3, r3, r1
   19440:	strd	r2, [r4, #16]
   19444:	ldrd	r0, [ip], #8
   19448:	cmp	sl, r0
   1944c:	sbcs	sl, fp, r1
   19450:	strdlt	r0, [r4, #24]
   19454:	cmp	lr, ip
   19458:	bne	19430 <next@@Base+0x1210>
   1945c:	cmp	r6, r5
   19460:	bne	193c4 <next@@Base+0x11a4>
   19464:	ldr	r8, [r8, #4]
   19468:	cmp	r8, #0
   1946c:	beq	19480 <next@@Base+0x1260>
   19470:	ldr	r3, [sp]
   19474:	ldr	r5, [r3]
   19478:	b	19360 <next@@Base+0x1140>
   1947c:	ldr	r7, [sp, #4]
   19480:	ldr	r0, [sp, #4]
   19484:	mov	r1, r4
   19488:	bl	19220 <next@@Base+0x1000>
   1948c:	mov	r0, r7
   19490:	add	sp, sp, #12
   19494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19498:	andeq	r1, r0, r8, asr #15
   1949c:	push	{r4, r5, r6, lr}
   194a0:	mov	r4, r0
   194a4:	ldr	r0, [pc, #172]	; 19558 <next@@Base+0x1338>
   194a8:	add	r0, pc, r0
   194ac:	bl	12020 <getenv@plt>
   194b0:	subs	r3, r0, #0
   194b4:	beq	194c0 <next@@Base+0x12a0>
   194b8:	bl	12110 <atoi@plt>
   194bc:	bic	r3, r0, r0, asr #31
   194c0:	ldr	r0, [pc, #148]	; 1955c <next@@Base+0x133c>
   194c4:	str	r3, [r4, #8]
   194c8:	add	r0, pc, r0
   194cc:	bl	12020 <getenv@plt>
   194d0:	subs	r6, r0, #0
   194d4:	beq	19528 <next@@Base+0x1308>
   194d8:	bl	12080 <strlen@plt>
   194dc:	subs	r5, r0, #0
   194e0:	beq	19528 <next@@Base+0x1308>
   194e4:	sub	r3, r5, #1
   194e8:	ldrb	r2, [r6, r3]
   194ec:	cmp	r2, #47	; 0x2f
   194f0:	beq	1951c <next@@Base+0x12fc>
   194f4:	ldr	r0, [r4, #4]
   194f8:	str	r5, [r4, #12]
   194fc:	add	r0, r0, #2
   19500:	add	r0, r0, r5
   19504:	bl	1202c <malloc@plt>
   19508:	mov	r2, r5
   1950c:	mov	r1, r6
   19510:	str	r0, [r4]
   19514:	pop	{r4, r5, r6, lr}
   19518:	b	11fe4 <memcpy@plt>
   1951c:	cmp	r3, #0
   19520:	movne	r5, r3
   19524:	bne	194f4 <next@@Base+0x12d4>
   19528:	ldr	r3, [r4, #8]
   1952c:	cmp	r3, #0
   19530:	ldrne	r6, [pc, #40]	; 19560 <next@@Base+0x1340>
   19534:	movne	r5, #1
   19538:	addne	r6, pc, r6
   1953c:	bne	194f4 <next@@Base+0x12d4>
   19540:	ldr	r0, [r4, #4]
   19544:	str	r3, [r4, #12]
   19548:	add	r0, r0, #2
   1954c:	bl	1202c <malloc@plt>
   19550:	str	r0, [r4]
   19554:	pop	{r4, r5, r6, pc}
   19558:	andeq	r2, r0, ip, lsr #11
   1955c:	andeq	r2, r0, r0, lsr #11
   19560:	andeq	r2, r0, r8, lsl r5
   19564:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19568:	sub	sp, sp, #6080	; 0x17c0
   1956c:	sub	sp, sp, #44	; 0x2c
   19570:	add	r3, sp, #72	; 0x48
   19574:	mov	r4, r0
   19578:	str	r0, [sp, #64]	; 0x40
   1957c:	str	r1, [sp, #60]	; 0x3c
   19580:	mov	r0, r3
   19584:	ldr	r2, [pc, #1068]	; 199b8 <next@@Base+0x1798>
   19588:	mov	r1, #0
   1958c:	str	r3, [sp, #68]	; 0x44
   19590:	bl	120c8 <memset@plt>
   19594:	add	r3, r4, #6016	; 0x1780
   19598:	add	r3, r3, #8
   1959c:	add	r2, sp, #2016	; 0x7e0
   195a0:	mov	sl, #251	; 0xfb
   195a4:	add	r2, r2, #8
   195a8:	mov	fp, #0
   195ac:	str	r3, [sp, #56]	; 0x38
   195b0:	add	r3, sp, #72	; 0x48
   195b4:	str	r2, [sp, #44]	; 0x2c
   195b8:	str	r3, [sp, #48]	; 0x30
   195bc:	mov	r2, #0
   195c0:	mov	r3, #0
   195c4:	mov	r5, sl
   195c8:	mov	r0, fp
   195cc:	strd	r2, [sp, #24]
   195d0:	str	sl, [sp, #52]	; 0x34
   195d4:	ldr	r9, [sp, #56]	; 0x38
   195d8:	str	r5, [sp, #40]	; 0x28
   195dc:	ldr	sl, [sp, #60]	; 0x3c
   195e0:	ldrd	r2, [r9, #16]
   195e4:	ldr	r4, [r9]
   195e8:	str	r4, [sp, #4]
   195ec:	strd	r2, [sp, #8]
   195f0:	ldr	r3, [sp, #4]
   195f4:	cmp	r3, #0
   195f8:	beq	198a4 <next@@Base+0x1684>
   195fc:	cmp	fp, #0
   19600:	bne	19788 <next@@Base+0x1568>
   19604:	ldr	r5, [sp, #40]	; 0x28
   19608:	cmp	r5, #0
   1960c:	blt	19994 <next@@Base+0x1774>
   19610:	add	ip, r5, r5, lsl #1
   19614:	ldr	fp, [sl, ip, lsl #3]
   19618:	add	ip, sl, ip, lsl #3
   1961c:	cmp	fp, #0
   19620:	bne	19988 <next@@Base+0x1768>
   19624:	mov	r3, ip
   19628:	ldr	r4, [sp, #4]
   1962c:	b	19640 <next@@Base+0x1420>
   19630:	ldr	fp, [r3]
   19634:	mov	ip, r3
   19638:	cmp	fp, #0
   1963c:	bne	19980 <next@@Base+0x1760>
   19640:	subs	r5, r5, #1
   19644:	sub	r3, r3, #24
   19648:	bcs	19630 <next@@Base+0x1410>
   1964c:	ldr	sl, [sp, #52]	; 0x34
   19650:	mov	r8, r0
   19654:	mov	r5, r4
   19658:	lsl	r4, sl, #1
   1965c:	ldr	r3, [sp, #44]	; 0x2c
   19660:	add	lr, r4, sl
   19664:	sub	ip, r3, #1952	; 0x7a0
   19668:	lsl	lr, lr, #3
   1966c:	add	ip, ip, lr
   19670:	ldrd	r0, [sp, #8]
   19674:	add	lr, r3, lr
   19678:	ldrd	r2, [ip, #16]
   1967c:	ldr	r6, [lr, #-1952]	; 0xfffff860
   19680:	adds	r0, r0, r2
   19684:	adc	r1, r1, r3
   19688:	mov	r2, r0
   1968c:	mov	r3, r1
   19690:	ldrd	r0, [ip, #8]
   19694:	strd	r2, [ip, #16]
   19698:	ldr	r3, [sp, #56]	; 0x38
   1969c:	add	r5, r6, r5
   196a0:	str	r5, [lr, #-1952]	; 0xfffff860
   196a4:	orrs	lr, r0, r1
   196a8:	ldrd	r2, [r3, #8]
   196ac:	beq	196bc <next@@Base+0x149c>
   196b0:	cmp	r2, r0
   196b4:	sbcs	r1, r3, r1
   196b8:	bge	196d0 <next@@Base+0x14b0>
   196bc:	ldr	r1, [sp, #44]	; 0x2c
   196c0:	add	r0, r4, sl
   196c4:	sub	r1, r1, #1952	; 0x7a0
   196c8:	add	r1, r1, r0, lsl #3
   196cc:	strd	r2, [r1, #8]
   196d0:	add	lr, r4, sl
   196d4:	ldr	r3, [sp, #68]	; 0x44
   196d8:	lsl	lr, lr, #3
   196dc:	add	ip, r3, lr
   196e0:	ldr	r3, [sp, #64]	; 0x40
   196e4:	add	lr, r3, lr
   196e8:	b	19738 <next@@Base+0x1518>
   196ec:	ldrd	r0, [ip, #-8]
   196f0:	ldrd	r2, [lr, #-8]
   196f4:	ldrd	r4, [ip, #-16]
   196f8:	adds	r6, r0, r2
   196fc:	adc	r7, r1, r3
   19700:	ldr	r2, [lr, #-24]	; 0xffffffe8
   19704:	ldr	r3, [ip, #-24]	; 0xffffffe8
   19708:	orrs	r1, r4, r5
   1970c:	add	r3, r3, r2
   19710:	str	r3, [ip, #-24]	; 0xffffffe8
   19714:	strd	r6, [ip, #-8]
   19718:	ldrd	r2, [lr, #-16]
   1971c:	beq	1972c <next@@Base+0x150c>
   19720:	cmp	r2, r4
   19724:	sbcs	r1, r3, r5
   19728:	bge	19730 <next@@Base+0x1510>
   1972c:	strd	r2, [ip, #-16]
   19730:	sub	ip, ip, #24
   19734:	sub	lr, lr, #24
   19738:	subs	sl, sl, #1
   1973c:	bpl	196ec <next@@Base+0x14cc>
   19740:	ldr	r3, [sp, #44]	; 0x2c
   19744:	add	r0, r8, r8, lsl #1
   19748:	sub	r3, r3, #1952	; 0x7a0
   1974c:	add	r3, r3, r0, lsl #3
   19750:	ldrd	r6, [sp, #24]
   19754:	ldrd	r4, [r3, #16]
   19758:	ldr	r1, [sp, #68]	; 0x44
   1975c:	ldr	r0, [sp, #64]	; 0x40
   19760:	adds	r6, r6, r4
   19764:	adc	r7, r7, r5
   19768:	mov	r4, r6
   1976c:	mov	r5, r7
   19770:	ldr	r2, [pc, #576]	; 199b8 <next@@Base+0x1798>
   19774:	strd	r4, [r3, #16]
   19778:	bl	11fe4 <memcpy@plt>
   1977c:	add	sp, sp, #6080	; 0x17c0
   19780:	add	sp, sp, #44	; 0x2c
   19784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19788:	ldr	r3, [sp, #40]	; 0x28
   1978c:	add	ip, r3, r3, lsl #1
   19790:	add	ip, sl, ip, lsl #3
   19794:	ldr	lr, [sp, #4]
   19798:	cmp	fp, lr
   1979c:	bcc	19914 <next@@Base+0x16f4>
   197a0:	ldrd	r2, [r9, #8]
   197a4:	ldrd	r0, [ip, #8]
   197a8:	adds	r4, r2, r0
   197ac:	adc	r5, r3, r1
   197b0:	cmp	fp, lr
   197b4:	strd	r4, [sp, #16]
   197b8:	bls	199a4 <next@@Base+0x1784>
   197bc:	ldrd	r6, [sp, #24]
   197c0:	mov	r2, fp
   197c4:	mov	r3, #0
   197c8:	umull	r0, r1, lr, r6
   197cc:	mla	r1, lr, r7, r1
   197d0:	bl	1b0ac <__gcov_sort_n_vals@@Base+0x740>
   197d4:	mov	r2, r0
   197d8:	subs	r0, r6, r2
   197dc:	mov	r3, r1
   197e0:	sbc	r1, r7, r3
   197e4:	strd	r0, [sp, #24]
   197e8:	ldr	r1, [sp, #4]
   197ec:	mov	r0, #0
   197f0:	sub	fp, fp, r1
   197f4:	mov	r8, r1
   197f8:	mov	r1, #0
   197fc:	str	r1, [sp, #4]
   19800:	mov	r1, #0
   19804:	ldrd	r6, [sp, #8]
   19808:	strd	r0, [sp, #8]
   1980c:	adds	r4, r2, r6
   19810:	adc	r5, r3, r7
   19814:	ldrd	r0, [sp, #16]
   19818:	strd	r4, [sp, #32]
   1981c:	bl	1916c <next@@Base+0xf4c>
   19820:	ldr	r3, [sp, #48]	; 0x30
   19824:	ldrd	r4, [sp, #32]
   19828:	add	r1, r0, r0, lsl #1
   1982c:	lsl	r1, r1, #3
   19830:	add	ip, r3, r1
   19834:	ldr	r3, [sp, #44]	; 0x2c
   19838:	ldrd	r6, [ip, #8]
   1983c:	add	r1, r3, r1
   19840:	ldrd	r2, [ip, #16]
   19844:	adds	r2, r2, r4
   19848:	adc	r3, r3, r5
   1984c:	strd	r2, [sp, #32]
   19850:	ldrd	r2, [sp, #16]
   19854:	cmp	r2, r6
   19858:	sbcs	lr, r3, r7
   1985c:	movlt	lr, #1
   19860:	movge	lr, #0
   19864:	orrs	r4, r6, r7
   19868:	ldr	r4, [r1, #-1952]	; 0xfffff860
   1986c:	orreq	lr, lr, #1
   19870:	add	r8, r4, r8
   19874:	ldrd	r4, [sp, #32]
   19878:	cmp	lr, #0
   1987c:	str	r8, [r1, #-1952]	; 0xfffff860
   19880:	strd	r4, [ip, #16]
   19884:	strdne	r2, [ip, #8]
   19888:	cmp	fp, #0
   1988c:	ldreq	r3, [sp, #40]	; 0x28
   19890:	subeq	r3, r3, #1
   19894:	streq	r3, [sp, #40]	; 0x28
   19898:	ldr	r3, [sp, #4]
   1989c:	cmp	r3, #0
   198a0:	bne	195fc <next@@Base+0x13dc>
   198a4:	ldr	r3, [sp, #52]	; 0x34
   198a8:	ldr	r5, [sp, #40]	; 0x28
   198ac:	sub	r3, r3, #1
   198b0:	str	r3, [sp, #52]	; 0x34
   198b4:	cmn	r3, #1
   198b8:	ldr	r3, [sp, #56]	; 0x38
   198bc:	sub	r3, r3, #24
   198c0:	str	r3, [sp, #56]	; 0x38
   198c4:	bne	195d4 <next@@Base+0x13b4>
   198c8:	cmp	fp, #0
   198cc:	mov	r9, r5
   198d0:	subne	r9, r5, #1
   198d4:	cmp	r9, #0
   198d8:	mov	r8, r0
   198dc:	blt	19740 <next@@Base+0x1520>
   198e0:	ldr	r2, [sp, #60]	; 0x3c
   198e4:	add	r3, r9, r9, lsl #1
   198e8:	sub	r0, r2, #24
   198ec:	add	r1, r2, r3, lsl #3
   198f0:	ldrd	r2, [sp, #24]
   198f4:	ldrd	r4, [r1, #16]
   198f8:	sub	r1, r1, #24
   198fc:	adds	r2, r2, r4
   19900:	adc	r3, r3, r5
   19904:	cmp	r0, r1
   19908:	bne	198f4 <next@@Base+0x16d4>
   1990c:	strd	r2, [sp, #24]
   19910:	b	19740 <next@@Base+0x1520>
   19914:	ldrd	r2, [sp, #8]
   19918:	ldrd	r6, [ip, #8]
   1991c:	ldrd	r4, [r9, #8]
   19920:	umull	r0, r1, fp, r2
   19924:	ldr	r8, [sp, #4]
   19928:	adds	r4, r4, r6
   1992c:	adc	r5, r5, r7
   19930:	mla	r1, fp, r3, r1
   19934:	mov	r2, r8
   19938:	mov	r3, #0
   1993c:	strd	r4, [sp, #16]
   19940:	bl	1b0ac <__gcov_sort_n_vals@@Base+0x740>
   19944:	sub	r3, r8, fp
   19948:	str	r3, [sp, #4]
   1994c:	ldrd	r2, [sp, #8]
   19950:	mov	r8, fp
   19954:	mov	fp, #0
   19958:	subs	r2, r2, r0
   1995c:	sbc	r3, r3, r1
   19960:	mov	r6, r0
   19964:	mov	r7, r1
   19968:	mov	r0, #0
   1996c:	mov	r1, #0
   19970:	strd	r2, [sp, #8]
   19974:	ldrd	r2, [sp, #24]
   19978:	strd	r0, [sp, #24]
   1997c:	b	1980c <next@@Base+0x15ec>
   19980:	str	r5, [sp, #40]	; 0x28
   19984:	str	r4, [sp, #4]
   19988:	ldrd	r2, [ip, #16]
   1998c:	strd	r2, [sp, #24]
   19990:	b	19794 <next@@Base+0x1574>
   19994:	ldr	sl, [sp, #52]	; 0x34
   19998:	mov	r8, r0
   1999c:	ldr	r5, [sp, #4]
   199a0:	b	19658 <next@@Base+0x1438>
   199a4:	mov	r0, #0
   199a8:	mov	r1, #0
   199ac:	ldrd	r2, [sp, #24]
   199b0:	strd	r0, [sp, #24]
   199b4:	b	197e8 <next@@Base+0x15c8>
   199b8:	andeq	r1, r0, r0, lsr #15
   199bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   199c0:	ldrb	r4, [r0]
   199c4:	cmp	r4, #47	; 0x2f
   199c8:	addeq	r5, r0, #1
   199cc:	ldrbeq	r4, [r0, #1]
   199d0:	movne	r5, r0
   199d4:	cmp	r4, #0
   199d8:	beq	19a2c <next@@Base+0x180c>
   199dc:	mov	r6, r0
   199e0:	ldr	sl, [pc, #144]	; 19a78 <next@@Base+0x1858>
   199e4:	mov	r8, #0
   199e8:	mov	r7, #47	; 0x2f
   199ec:	b	199fc <next@@Base+0x17dc>
   199f0:	ldrb	r4, [r5, #1]!
   199f4:	cmp	r4, #0
   199f8:	beq	19a2c <next@@Base+0x180c>
   199fc:	cmp	r4, #47	; 0x2f
   19a00:	bne	199f0 <next@@Base+0x17d0>
   19a04:	strb	r8, [r5]
   19a08:	mov	r1, #0
   19a0c:	mov	r0, r6
   19a10:	bl	120ec <access@plt>
   19a14:	cmn	r0, #1
   19a18:	beq	19a38 <next@@Base+0x1818>
   19a1c:	strb	r7, [r5]
   19a20:	ldrb	r4, [r5, #1]!
   19a24:	cmp	r4, #0
   19a28:	bne	199fc <next@@Base+0x17dc>
   19a2c:	mov	r9, #0
   19a30:	mov	r0, r9
   19a34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19a38:	mov	r1, sl
   19a3c:	mov	r0, r6
   19a40:	bl	120b0 <mkdir@plt>
   19a44:	cmn	r0, #1
   19a48:	mov	r9, r0
   19a4c:	bne	19a1c <next@@Base+0x17fc>
   19a50:	bl	12098 <__errno_location@plt>
   19a54:	ldr	r3, [r0]
   19a58:	cmp	r3, #17
   19a5c:	beq	19a1c <next@@Base+0x17fc>
   19a60:	ldr	r0, [pc, #20]	; 19a7c <next@@Base+0x185c>
   19a64:	mov	r1, r6
   19a68:	add	r0, pc, r0
   19a6c:	bl	190b8 <next@@Base+0xe98>
   19a70:	strb	r4, [r5]
   19a74:	b	19a30 <next@@Base+0x1810>
   19a78:	andeq	r0, r0, sp, ror #3
   19a7c:	andeq	r2, r0, ip
   19a80:	ldr	r3, [pc, #124]	; 19b04 <next@@Base+0x18e4>
   19a84:	cmp	r1, r3
   19a88:	beq	19afc <next@@Base+0x18dc>
   19a8c:	cmp	r2, #0
   19a90:	push	{r4, r5, lr}
   19a94:	sub	sp, sp, #12
   19a98:	ldreq	r2, [r0]
   19a9c:	lsr	r3, r1, #24
   19aa0:	ldr	r0, [pc, #96]	; 19b08 <next@@Base+0x18e8>
   19aa4:	lsr	r5, r1, #16
   19aa8:	lsr	r4, r1, #8
   19aac:	strb	r1, [sp, #3]
   19ab0:	strb	r3, [sp]
   19ab4:	mov	r1, #53	; 0x35
   19ab8:	mov	r3, #42	; 0x2a
   19abc:	mov	lr, #54	; 0x36
   19ac0:	mov	ip, #48	; 0x30
   19ac4:	strb	r1, [sp, #6]
   19ac8:	strb	r3, [sp, #7]
   19acc:	mov	r1, r2
   19ad0:	mov	r3, sp
   19ad4:	add	r2, sp, #4
   19ad8:	add	r0, pc, r0
   19adc:	strb	r5, [sp, #1]
   19ae0:	strb	r4, [sp, #2]
   19ae4:	strb	lr, [sp, #4]
   19ae8:	strb	ip, [sp, #5]
   19aec:	bl	190b8 <next@@Base+0xe98>
   19af0:	mov	r0, #0
   19af4:	add	sp, sp, #12
   19af8:	pop	{r4, r5, pc}
   19afc:	mov	r0, #1
   19b00:	bx	lr
   19b04:	ldrtcc	r3, [r0], -sl, lsr #10
   19b08:	andeq	r1, r0, r4, asr #31
   19b0c:	ldr	r2, [r2, #16]
   19b10:	push	{r4, r5, r6, lr}
   19b14:	cmp	r2, #0
   19b18:	mov	r6, r3
   19b1c:	ldr	ip, [sp, #16]
   19b20:	beq	19bec <next@@Base+0x19cc>
   19b24:	ldr	r3, [r3, #12]
   19b28:	cmp	r1, #0
   19b2c:	addeq	r2, r3, #1
   19b30:	streq	r2, [r6, #12]
   19b34:	cmp	r3, #0
   19b38:	beq	19b90 <next@@Base+0x1970>
   19b3c:	ldrd	r0, [ip, #16]
   19b40:	ldrd	r2, [r6, #16]
   19b44:	ldrd	r4, [r6, #24]
   19b48:	adds	r2, r2, r0
   19b4c:	adc	r3, r3, r1
   19b50:	strd	r2, [r6, #16]
   19b54:	ldrd	r0, [ip, #24]
   19b58:	cmp	r4, r0
   19b5c:	sbcs	r3, r5, r1
   19b60:	blt	19c10 <next@@Base+0x19f0>
   19b64:	ldrd	r2, [r6, #32]
   19b68:	adds	r2, r2, r0
   19b6c:	adc	r3, r3, r1
   19b70:	strd	r2, [r6, #32]
   19b74:	add	r1, ip, #40	; 0x28
   19b78:	add	r0, r6, #40	; 0x28
   19b7c:	bl	19564 <next@@Base+0x1344>
   19b80:	ldr	r3, [sp, #20]
   19b84:	mov	r0, #0
   19b88:	str	r3, [r6]
   19b8c:	pop	{r4, r5, r6, pc}
   19b90:	ldr	r1, [ip, #8]
   19b94:	ldrd	r2, [r6, #16]
   19b98:	str	r1, [r6, #8]
   19b9c:	ldrd	r0, [ip, #16]
   19ba0:	ldrd	r4, [r6, #24]
   19ba4:	adds	r2, r2, r0
   19ba8:	adc	r3, r3, r1
   19bac:	strd	r2, [r6, #16]
   19bb0:	ldrd	r0, [ip, #24]
   19bb4:	cmp	r4, r0
   19bb8:	sbcs	r3, r5, r1
   19bbc:	bge	19c2c <next@@Base+0x1a0c>
   19bc0:	ldrd	r2, [r6, #32]
   19bc4:	strd	r0, [r6, #24]
   19bc8:	ldrd	r0, [ip, #24]
   19bcc:	adds	r2, r2, r0
   19bd0:	adc	r3, r3, r1
   19bd4:	strd	r2, [r6, #32]
   19bd8:	add	r1, ip, #40	; 0x28
   19bdc:	ldr	r2, [pc, #92]	; 19c40 <next@@Base+0x1a20>
   19be0:	add	r0, r6, #40	; 0x28
   19be4:	bl	11fe4 <memcpy@plt>
   19be8:	b	19b80 <next@@Base+0x1960>
   19bec:	ldr	r3, [r3, #12]
   19bf0:	cmp	r3, #0
   19bf4:	beq	19b80 <next@@Base+0x1960>
   19bf8:	mov	r1, r0
   19bfc:	ldr	r0, [pc, #64]	; 19c44 <next@@Base+0x1a24>
   19c00:	add	r0, pc, r0
   19c04:	bl	190b8 <next@@Base+0xe98>
   19c08:	mvn	r0, #0
   19c0c:	pop	{r4, r5, r6, pc}
   19c10:	ldrd	r2, [r6, #32]
   19c14:	strd	r0, [r6, #24]
   19c18:	ldrd	r0, [ip, #24]
   19c1c:	adds	r2, r2, r0
   19c20:	adc	r3, r3, r1
   19c24:	strd	r2, [r6, #32]
   19c28:	b	19b74 <next@@Base+0x1954>
   19c2c:	ldrd	r2, [r6, #32]
   19c30:	adds	r2, r2, r0
   19c34:	adc	r3, r3, r1
   19c38:	strd	r2, [r6, #32]
   19c3c:	b	19bd8 <next@@Base+0x19b8>
   19c40:	andeq	r1, r0, r0, lsr #15
   19c44:	ldrdeq	r1, [r0], -r4
   19c48:	ldr	ip, [pc, #52]	; 19c84 <next@@Base+0x1a64>
   19c4c:	ldr	r3, [pc, #52]	; 19c88 <next@@Base+0x1a68>
   19c50:	add	ip, pc, ip
   19c54:	push	{r4, lr}
   19c58:	mov	lr, #0
   19c5c:	ldr	r3, [ip, r3]
   19c60:	mvn	r4, #0
   19c64:	mov	r2, lr
   19c68:	mov	r1, lr
   19c6c:	str	r4, [r3, #24]
   19c70:	str	lr, [r3, #4]
   19c74:	str	lr, [r3, #8]
   19c78:	ldr	r0, [r3]
   19c7c:	pop	{r4, lr}
   19c80:	b	1211c <fseek@plt>
   19c84:	andeq	r2, r1, r8, lsr #7
   19c88:	andeq	r0, r0, r8, lsr #1
   19c8c:	push	{r4, r5, r6, r7, lr}
   19c90:	sub	sp, sp, #108	; 0x6c
   19c94:	mov	r4, #0
   19c98:	mov	r7, r0
   19c9c:	strh	r4, [sp, #2]
   19ca0:	str	r4, [sp, #4]
   19ca4:	str	r4, [sp, #8]
   19ca8:	bl	12068 <getpid@plt>
   19cac:	ldr	r3, [pc, #240]	; 19da4 <next@@Base+0x1b84>
   19cb0:	ldr	ip, [pc, #240]	; 19da8 <next@@Base+0x1b88>
   19cb4:	add	r3, pc, r3
   19cb8:	mvn	lr, #0
   19cbc:	mov	r6, #1
   19cc0:	ldr	r2, [pc, #228]	; 19dac <next@@Base+0x1b8c>
   19cc4:	mov	r1, #66	; 0x42
   19cc8:	str	r0, [sp, #12]
   19ccc:	ldr	r5, [r3, ip]
   19cd0:	mov	r0, r7
   19cd4:	strh	r6, [sp]
   19cd8:	str	r4, [r5, #4]
   19cdc:	str	r4, [r5, #12]
   19ce0:	str	r4, [r5, #8]
   19ce4:	str	r4, [r5, #20]
   19ce8:	str	lr, [r5, #16]
   19cec:	bl	1205c <open@plt>
   19cf0:	subs	r6, r0, #0
   19cf4:	movlt	r0, r4
   19cf8:	blt	19d78 <next@@Base+0x1b58>
   19cfc:	mov	r7, sp
   19d00:	mov	r4, #7
   19d04:	mov	r2, r7
   19d08:	mov	r1, r4
   19d0c:	mov	r0, r6
   19d10:	bl	120bc <fcntl@plt>
   19d14:	cmp	r0, #0
   19d18:	beq	19d2c <next@@Base+0x1b0c>
   19d1c:	bl	12098 <__errno_location@plt>
   19d20:	ldr	r3, [r0]
   19d24:	cmp	r3, #4
   19d28:	beq	19d04 <next@@Base+0x1ae4>
   19d2c:	ldr	r1, [pc, #124]	; 19db0 <next@@Base+0x1b90>
   19d30:	mov	r0, r6
   19d34:	add	r1, pc, r1
   19d38:	bl	11f9c <fdopen@plt>
   19d3c:	mov	r4, r0
   19d40:	cmp	r4, #0
   19d44:	mov	r0, r6
   19d48:	str	r4, [r5]
   19d4c:	beq	19d80 <next@@Base+0x1b60>
   19d50:	add	r1, sp, #16
   19d54:	bl	1b378 <__libc_csu_fini@@Base+0x1c>
   19d58:	cmp	r0, #0
   19d5c:	blt	19d8c <next@@Base+0x1b6c>
   19d60:	mov	r4, #1
   19d64:	ldr	r0, [r5]
   19d68:	mov	r1, #0
   19d6c:	str	r4, [r5, #24]
   19d70:	bl	11fb4 <setbuf@plt>
   19d74:	mov	r0, r4
   19d78:	add	sp, sp, #108	; 0x6c
   19d7c:	pop	{r4, r5, r6, r7, pc}
   19d80:	bl	12140 <close@plt>
   19d84:	mov	r0, r4
   19d88:	b	19d78 <next@@Base+0x1b58>
   19d8c:	mov	r4, #0
   19d90:	ldr	r0, [r5]
   19d94:	bl	120f8 <fclose@plt>
   19d98:	str	r4, [r5]
   19d9c:	mov	r0, r4
   19da0:	b	19d78 <next@@Base+0x1b58>
   19da4:	andeq	r2, r1, r4, asr #6
   19da8:	andeq	r0, r0, r8, lsr #1
   19dac:			; <UNDEFINED> instruction: 0x000001b6
   19db0:	andeq	r1, r0, ip, asr #27
   19db4:	push	{r4, r5, r6, lr}
   19db8:	mov	r4, r1
   19dbc:	ldr	r5, [pc, #244]	; 19eb8 <next@@Base+0x1c98>
   19dc0:	ldr	ip, [r4, #8]
   19dc4:	ldr	lr, [r4, #12]
   19dc8:	ldr	r6, [r4]
   19dcc:	cmp	ip, #0
   19dd0:	mov	r1, r0
   19dd4:	add	r5, pc, r5
   19dd8:	add	r0, r6, lr
   19ddc:	ble	19e18 <next@@Base+0x1bf8>
   19de0:	ldrb	r3, [r1]
   19de4:	cmp	r3, #47	; 0x2f
   19de8:	addeq	r2, r1, #1
   19dec:	ldrbeq	r3, [r1, #1]
   19df0:	movne	r2, r1
   19df4:	cmp	r3, #0
   19df8:	beq	19e18 <next@@Base+0x1bf8>
   19dfc:	cmp	r3, #47	; 0x2f
   19e00:	moveq	r1, r2
   19e04:	ldrb	r3, [r2, #1]!
   19e08:	subeq	ip, ip, #1
   19e0c:	cmp	r3, #0
   19e10:	cmpne	ip, #0
   19e14:	bne	19dfc <next@@Base+0x1bdc>
   19e18:	cmp	lr, #0
   19e1c:	beq	19e34 <next@@Base+0x1c14>
   19e20:	ldrb	r3, [r1]
   19e24:	cmp	r3, #47	; 0x2f
   19e28:	addne	r0, r0, #1
   19e2c:	movne	r3, #47	; 0x2f
   19e30:	strbne	r3, [r6, lr]
   19e34:	bl	12008 <strcpy@plt>
   19e38:	ldr	r0, [r4]
   19e3c:	bl	19c8c <next@@Base+0x1a6c>
   19e40:	cmp	r0, #0
   19e44:	beq	19e50 <next@@Base+0x1c30>
   19e48:	mov	r0, #0
   19e4c:	pop	{r4, r5, r6, pc}
   19e50:	ldr	r0, [r4]
   19e54:	bl	199bc <next@@Base+0x179c>
   19e58:	cmp	r0, #0
   19e5c:	bne	19e94 <next@@Base+0x1c74>
   19e60:	ldr	r0, [r4]
   19e64:	bl	19c8c <next@@Base+0x1a6c>
   19e68:	cmp	r0, #0
   19e6c:	bne	19e48 <next@@Base+0x1c28>
   19e70:	ldr	r3, [pc, #68]	; 19ebc <next@@Base+0x1c9c>
   19e74:	ldr	r1, [pc, #68]	; 19ec0 <next@@Base+0x1ca0>
   19e78:	ldr	r2, [r4]
   19e7c:	ldr	r3, [r5, r3]
   19e80:	add	r1, pc, r1
   19e84:	ldr	r0, [r3]
   19e88:	bl	1208c <fprintf@plt>
   19e8c:	mvn	r0, #0
   19e90:	pop	{r4, r5, r6, pc}
   19e94:	ldr	r3, [pc, #32]	; 19ebc <next@@Base+0x1c9c>
   19e98:	ldr	r1, [pc, #36]	; 19ec4 <next@@Base+0x1ca4>
   19e9c:	ldr	r2, [r4]
   19ea0:	ldr	r3, [r5, r3]
   19ea4:	add	r1, pc, r1
   19ea8:	ldr	r0, [r3]
   19eac:	bl	1208c <fprintf@plt>
   19eb0:	mvn	r0, #0
   19eb4:	pop	{r4, r5, r6, pc}
   19eb8:	andeq	r2, r1, r4, lsr #4
   19ebc:	muleq	r0, ip, r0
   19ec0:	muleq	r0, r8, ip
   19ec4:	andeq	r1, r0, r0, ror #24
   19ec8:	ldr	r3, [pc, #96]	; 19f30 <next@@Base+0x1d10>
   19ecc:	ldr	r2, [pc, #96]	; 19f34 <next@@Base+0x1d14>
   19ed0:	add	r3, pc, r3
   19ed4:	push	{r4, lr}
   19ed8:	ldr	r4, [r3, r2]
   19edc:	ldr	r0, [r4]
   19ee0:	cmp	r0, #0
   19ee4:	beq	19f04 <next@@Base+0x1ce4>
   19ee8:	ldr	r3, [r4, #8]
   19eec:	cmp	r3, #0
   19ef0:	bne	19f14 <next@@Base+0x1cf4>
   19ef4:	bl	120f8 <fclose@plt>
   19ef8:	mov	r3, #0
   19efc:	str	r3, [r4]
   19f00:	str	r3, [r4, #12]
   19f04:	mov	r3, #0
   19f08:	str	r3, [r4, #24]
   19f0c:	ldr	r0, [r4, #20]
   19f10:	pop	{r4, pc}
   19f14:	ldr	r2, [r4, #24]
   19f18:	cmp	r2, #0
   19f1c:	bge	19ef4 <next@@Base+0x1cd4>
   19f20:	mov	r0, r3
   19f24:	bl	18f44 <next@@Base+0xd24>
   19f28:	ldr	r0, [r4]
   19f2c:	b	19ef4 <next@@Base+0x1cd4>
   19f30:	andeq	r2, r1, r8, lsr #2
   19f34:	andeq	r0, r0, r8, lsr #1
   19f38:	push	{r4, lr}
   19f3c:	mov	r4, r0
   19f40:	mov	r0, #1
   19f44:	bl	18fa0 <next@@Base+0xd80>
   19f48:	str	r4, [r0]
   19f4c:	pop	{r4, pc}
   19f50:	push	{r4, r5, r6, lr}
   19f54:	mov	r5, r0
   19f58:	mov	r0, #2
   19f5c:	mov	r4, r1
   19f60:	bl	18fa0 <next@@Base+0xd80>
   19f64:	str	r5, [r0]
   19f68:	str	r4, [r0, #4]
   19f6c:	pop	{r4, r5, r6, pc}
   19f70:	push	{r4, r5, r6, lr}
   19f74:	mov	r5, r0
   19f78:	mov	r0, #2
   19f7c:	mov	r4, r1
   19f80:	bl	18fa0 <next@@Base+0xd80>
   19f84:	str	r5, [r0]
   19f88:	str	r4, [r0, #4]
   19f8c:	pop	{r4, r5, r6, pc}
   19f90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19f94:	sub	sp, sp, #32
   19f98:	mov	r7, sp
   19f9c:	mov	r5, r1
   19fa0:	mov	r6, sp
   19fa4:	add	r2, sp, #32
   19fa8:	mov	r3, #0
   19fac:	str	r3, [r6], #4
   19fb0:	cmp	r2, r6
   19fb4:	bne	19fac <next@@Base+0x1d8c>
   19fb8:	mov	r8, #0
   19fbc:	mov	r3, r8
   19fc0:	mov	r4, r5
   19fc4:	mov	r1, r5
   19fc8:	mov	r9, #1
   19fcc:	lsr	r2, r3, #5
   19fd0:	ldr	lr, [r1, #40]	; 0x28
   19fd4:	add	ip, sp, #32
   19fd8:	cmp	lr, #0
   19fdc:	add	r2, ip, r2, lsl #2
   19fe0:	and	sl, r3, #31
   19fe4:	ldrne	ip, [r2, #-32]	; 0xffffffe0
   19fe8:	add	r3, r3, #1
   19fec:	orrne	ip, ip, r9, lsl sl
   19ff0:	addne	r8, r8, #1
   19ff4:	strne	ip, [r2, #-32]	; 0xffffffe0
   19ff8:	cmp	r3, #252	; 0xfc
   19ffc:	add	r1, r1, #24
   1a000:	bne	19fcc <next@@Base+0x1dac>
   1a004:	add	r8, r8, r8, lsl #2
   1a008:	add	r1, r8, #17
   1a00c:	bl	19f70 <next@@Base+0x1d50>
   1a010:	ldr	r0, [r5]
   1a014:	bl	19f38 <next@@Base+0x1d18>
   1a018:	ldr	r0, [r5, #8]
   1a01c:	bl	19f38 <next@@Base+0x1d18>
   1a020:	ldr	r0, [r5, #12]
   1a024:	bl	19f38 <next@@Base+0x1d18>
   1a028:	ldrd	r0, [r5, #16]
   1a02c:	bl	19f50 <next@@Base+0x1d30>
   1a030:	ldrd	r0, [r5, #24]
   1a034:	bl	19f50 <next@@Base+0x1d30>
   1a038:	ldrd	r0, [r5, #32]
   1a03c:	bl	19f50 <next@@Base+0x1d30>
   1a040:	ldr	r0, [r7], #4
   1a044:	bl	19f38 <next@@Base+0x1d18>
   1a048:	cmp	r7, r6
   1a04c:	bne	1a040 <next@@Base+0x1e20>
   1a050:	add	r5, r5, #6016	; 0x1780
   1a054:	add	r5, r5, #32
   1a058:	b	1a068 <next@@Base+0x1e48>
   1a05c:	add	r4, r4, #24
   1a060:	cmp	r4, r5
   1a064:	beq	1a094 <next@@Base+0x1e74>
   1a068:	ldr	r0, [r4, #40]	; 0x28
   1a06c:	cmp	r0, #0
   1a070:	beq	1a05c <next@@Base+0x1e3c>
   1a074:	bl	19f38 <next@@Base+0x1d18>
   1a078:	ldrd	r0, [r4, #48]	; 0x30
   1a07c:	bl	19f50 <next@@Base+0x1d30>
   1a080:	add	r4, r4, #24
   1a084:	ldrd	r0, [r4, #32]
   1a088:	bl	19f50 <next@@Base+0x1d30>
   1a08c:	cmp	r4, r5
   1a090:	bne	1a068 <next@@Base+0x1e48>
   1a094:	add	sp, sp, #32
   1a098:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a09c:	push	{r4, lr}
   1a0a0:	mov	r0, #1
   1a0a4:	bl	18ffc <next@@Base+0xddc>
   1a0a8:	subs	r3, r0, #0
   1a0ac:	popeq	{r4, pc}
   1a0b0:	ldr	r0, [r3]
   1a0b4:	pop	{r4, lr}
   1a0b8:	b	18f14 <next@@Base+0xcf4>
   1a0bc:	push	{r4, r5, r6, lr}
   1a0c0:	mov	r0, #2
   1a0c4:	bl	18ffc <next@@Base+0xddc>
   1a0c8:	subs	r3, r0, #0
   1a0cc:	beq	1a0fc <next@@Base+0x1edc>
   1a0d0:	ldr	r0, [r3]
   1a0d4:	bl	18f14 <next@@Base+0xcf4>
   1a0d8:	mov	r5, #0
   1a0dc:	mov	r4, r0
   1a0e0:	ldr	r0, [r3, #4]
   1a0e4:	bl	18f14 <next@@Base+0xcf4>
   1a0e8:	mov	r2, #0
   1a0ec:	mov	r3, r0
   1a0f0:	orr	r1, r3, r5
   1a0f4:	orr	r0, r2, r4
   1a0f8:	pop	{r4, r5, r6, pc}
   1a0fc:	mov	r0, #0
   1a100:	mov	r1, #0
   1a104:	pop	{r4, r5, r6, pc}
   1a108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a10c:	sub	sp, sp, #28
   1a110:	mov	r4, #0
   1a114:	str	r1, [sp, #8]
   1a118:	str	r3, [sp, #12]
   1a11c:	add	r3, r1, #56	; 0x38
   1a120:	add	r1, r1, #16
   1a124:	str	r0, [sp, #16]
   1a128:	str	r2, [sp, #20]
   1a12c:	ldr	r2, [r3, #-4]!
   1a130:	cmp	r2, #0
   1a134:	addne	r4, r4, #1
   1a138:	cmp	r3, r1
   1a13c:	bne	1a12c <next@@Base+0x1f0c>
   1a140:	add	r4, r4, #4
   1a144:	lsl	r4, r4, #3
   1a148:	mov	r0, r4
   1a14c:	bl	1202c <malloc@plt>
   1a150:	subs	r8, r0, #0
   1a154:	beq	1a218 <next@@Base+0x1ff8>
   1a158:	ldr	r3, [sp, #12]
   1a15c:	mov	r4, #0
   1a160:	str	r3, [r8, #4]
   1a164:	str	r4, [r8]
   1a168:	bl	1a09c <next@@Base+0x1e7c>
   1a16c:	ldr	r3, [sp, #8]
   1a170:	ldr	r5, [pc, #272]	; 1a288 <next@@Base+0x2068>
   1a174:	add	r6, r3, #12
   1a178:	mov	r7, r4
   1a17c:	str	r0, [r8, #12]
   1a180:	bl	1a09c <next@@Base+0x1e7c>
   1a184:	str	r0, [r8, #16]
   1a188:	bl	1a09c <next@@Base+0x1e7c>
   1a18c:	str	r0, [r8, #20]
   1a190:	ldr	r3, [r6, #4]!
   1a194:	cmp	r3, #0
   1a198:	beq	1a1f4 <next@@Base+0x1fd4>
   1a19c:	bl	1a09c <next@@Base+0x1e7c>
   1a1a0:	cmp	r5, r0
   1a1a4:	bne	1a26c <next@@Base+0x204c>
   1a1a8:	bl	1a09c <next@@Base+0x1e7c>
   1a1ac:	lsr	r9, r0, #1
   1a1b0:	lsl	fp, r9, #3
   1a1b4:	mov	r0, fp
   1a1b8:	bl	1202c <malloc@plt>
   1a1bc:	subs	sl, r0, #0
   1a1c0:	beq	1a27c <next@@Base+0x205c>
   1a1c4:	add	r3, r8, r7, lsl #3
   1a1c8:	cmp	r9, #0
   1a1cc:	str	r9, [r3, #24]
   1a1d0:	str	sl, [r3, #28]
   1a1d4:	sub	r9, r9, #1
   1a1d8:	beq	1a1f0 <next@@Base+0x1fd0>
   1a1dc:	bl	1a0bc <next@@Base+0x1e9c>
   1a1e0:	sub	r9, r9, #1
   1a1e4:	cmn	r9, #1
   1a1e8:	strd	r0, [sl], #8
   1a1ec:	bne	1a1dc <next@@Base+0x1fbc>
   1a1f0:	add	r7, r7, #1
   1a1f4:	add	r4, r4, #1
   1a1f8:	cmp	r4, #10
   1a1fc:	add	r5, r5, #131072	; 0x20000
   1a200:	bne	1a190 <next@@Base+0x1f70>
   1a204:	ldr	r3, [sp, #20]
   1a208:	mov	r0, r8
   1a20c:	str	r8, [r3]
   1a210:	add	sp, sp, #28
   1a214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a218:	mvn	r5, #0
   1a21c:	cmp	r4, #0
   1a220:	beq	1a25c <next@@Base+0x203c>
   1a224:	ldr	r3, [pc, #96]	; 1a28c <next@@Base+0x206c>
   1a228:	add	r3, pc, r3
   1a22c:	ldr	r0, [pc, #92]	; 1a290 <next@@Base+0x2070>
   1a230:	ldr	r2, [sp, #12]
   1a234:	ldr	r1, [sp, #16]
   1a238:	str	r4, [sp]
   1a23c:	add	r0, pc, r0
   1a240:	bl	190b8 <next@@Base+0xe98>
   1a244:	mov	r2, r5
   1a248:	mov	r1, r8
   1a24c:	ldr	r0, [sp, #8]
   1a250:	add	sp, sp, #28
   1a254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a258:	b	19100 <next@@Base+0xee0>
   1a25c:	ldr	r3, [pc, #48]	; 1a294 <next@@Base+0x2074>
   1a260:	mov	r4, r5
   1a264:	add	r3, pc, r3
   1a268:	b	1a22c <next@@Base+0x200c>
   1a26c:	ldr	r3, [pc, #36]	; 1a298 <next@@Base+0x2078>
   1a270:	mov	r5, r4
   1a274:	add	r3, pc, r3
   1a278:	b	1a22c <next@@Base+0x200c>
   1a27c:	mov	r5, r4
   1a280:	mov	r4, fp
   1a284:	b	1a21c <next@@Base+0x1ffc>
   1a288:			; <UNDEFINED> instruction: 0x01a10000
   1a28c:	andeq	r1, r0, ip, lsl #18
   1a290:	andeq	r1, r0, ip, lsl r9
   1a294:	andeq	r1, r0, r0, ror #17
   1a298:	ldrdeq	r1, [r0], -r0
   1a29c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a2a0:	sub	sp, sp, #44	; 0x2c
   1a2a4:	mov	r9, r0
   1a2a8:	bl	1a09c <next@@Base+0x1e7c>
   1a2ac:	mov	r7, #0
   1a2b0:	add	sl, sp, #8
   1a2b4:	mov	r4, sl
   1a2b8:	add	r5, sp, #40	; 0x28
   1a2bc:	str	r0, [r9]
   1a2c0:	bl	1a09c <next@@Base+0x1e7c>
   1a2c4:	str	r0, [r9, #8]
   1a2c8:	bl	1a09c <next@@Base+0x1e7c>
   1a2cc:	str	r0, [r9, #12]
   1a2d0:	bl	1a0bc <next@@Base+0x1e9c>
   1a2d4:	strd	r0, [r9, #16]
   1a2d8:	bl	1a0bc <next@@Base+0x1e9c>
   1a2dc:	strd	r0, [r9, #24]
   1a2e0:	bl	1a0bc <next@@Base+0x1e9c>
   1a2e4:	ldr	r2, [pc, #244]	; 1a3e0 <next@@Base+0x21c0>
   1a2e8:	strd	r0, [r9, #32]
   1a2ec:	add	r0, r9, #40	; 0x28
   1a2f0:	mov	r1, r7
   1a2f4:	bl	120c8 <memset@plt>
   1a2f8:	bl	1a09c <next@@Base+0x1e7c>
   1a2fc:	str	r0, [r4], #4
   1a300:	bl	1b190 <__gcov_sort_n_vals@@Base+0x824>
   1a304:	cmp	r5, r4
   1a308:	add	r7, r7, r0
   1a30c:	bne	1a2f8 <next@@Base+0x20d8>
   1a310:	cmp	r7, #0
   1a314:	sub	r7, r7, #1
   1a318:	beq	1a3cc <next@@Base+0x21ac>
   1a31c:	ldr	r8, [pc, #192]	; 1a3e4 <next@@Base+0x21c4>
   1a320:	mov	r4, #0
   1a324:	ldr	r3, [pc, #188]	; 1a3e8 <next@@Base+0x21c8>
   1a328:	add	r8, pc, r8
   1a32c:	mov	r5, r4
   1a330:	mov	r6, r4
   1a334:	add	r3, pc, r3
   1a338:	str	r3, [sp, #4]
   1a33c:	cmp	r4, #0
   1a340:	addeq	r6, sl, r5, lsl #2
   1a344:	beq	1a350 <next@@Base+0x2130>
   1a348:	b	1a378 <next@@Base+0x2158>
   1a34c:	mov	r5, r3
   1a350:	cmp	r5, #7
   1a354:	bls	1a360 <next@@Base+0x2140>
   1a358:	mov	r0, r8
   1a35c:	bl	190b8 <next@@Base+0xe98>
   1a360:	ldr	r4, [r6], #4
   1a364:	add	r3, r5, #1
   1a368:	cmp	r4, #0
   1a36c:	beq	1a34c <next@@Base+0x212c>
   1a370:	lsl	r6, r5, #5
   1a374:	mov	r5, r3
   1a378:	tst	r4, #1
   1a37c:	bne	1a390 <next@@Base+0x2170>
   1a380:	lsr	r4, r4, #1
   1a384:	tst	r4, #1
   1a388:	add	r6, r6, #1
   1a38c:	beq	1a380 <next@@Base+0x2160>
   1a390:	cmp	r6, #251	; 0xfb
   1a394:	bhi	1a3d4 <next@@Base+0x21b4>
   1a398:	bl	1a09c <next@@Base+0x1e7c>
   1a39c:	add	r3, r6, r6, lsl #1
   1a3a0:	sub	r7, r7, #1
   1a3a4:	add	fp, r9, r3, lsl #3
   1a3a8:	lsr	r4, r4, #1
   1a3ac:	add	r6, r6, #1
   1a3b0:	str	r0, [fp, #40]	; 0x28
   1a3b4:	bl	1a0bc <next@@Base+0x1e9c>
   1a3b8:	strd	r0, [fp, #48]	; 0x30
   1a3bc:	bl	1a0bc <next@@Base+0x1e9c>
   1a3c0:	cmn	r7, #1
   1a3c4:	strd	r0, [fp, #56]	; 0x38
   1a3c8:	bne	1a33c <next@@Base+0x211c>
   1a3cc:	add	sp, sp, #44	; 0x2c
   1a3d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a3d4:	ldr	r0, [sp, #4]
   1a3d8:	bl	190b8 <next@@Base+0xe98>
   1a3dc:	b	1a398 <next@@Base+0x2178>
   1a3e0:	andeq	r1, r0, r0, lsr #15
   1a3e4:	muleq	r0, r0, r8
   1a3e8:	andeq	r1, r0, r8, asr #16
   1a3ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a3f0:	sub	sp, sp, #6080	; 0x17c0
   1a3f4:	sub	sp, sp, #28
   1a3f8:	mov	r4, r1
   1a3fc:	stmib	sp, {r2, r3}
   1a400:	add	r3, sp, #6144	; 0x1800
   1a404:	mov	sl, r0
   1a408:	ldr	r7, [r3]
   1a40c:	add	r3, sp, #6144	; 0x1800
   1a410:	add	r3, r3, #4
   1a414:	ldr	r6, [r3]
   1a418:	bl	1a09c <next@@Base+0x1e7c>
   1a41c:	add	r3, r4, #12
   1a420:	mov	r2, sl
   1a424:	str	r3, [sp, #12]
   1a428:	mov	r1, r0
   1a42c:	mov	r0, r3
   1a430:	bl	19a80 <next@@Base+0x1860>
   1a434:	cmp	r0, #0
   1a438:	beq	1a6b8 <next@@Base+0x2498>
   1a43c:	bl	1a09c <next@@Base+0x1e7c>
   1a440:	ldr	r3, [r4, #8]
   1a444:	cmp	r0, r3
   1a448:	beq	1a45c <next@@Base+0x223c>
   1a44c:	mov	r0, #0
   1a450:	add	sp, sp, #6080	; 0x17c0
   1a454:	add	sp, sp, #28
   1a458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a45c:	ldr	fp, [pc, #628]	; 1a6d8 <next@@Base+0x24b8>
   1a460:	add	r9, sp, #2000	; 0x7d0
   1a464:	add	r5, sp, #16
   1a468:	add	fp, pc, fp
   1a46c:	add	r9, r9, #8
   1a470:	bl	18ec4 <next@@Base+0xca4>
   1a474:	str	r0, [r6]
   1a478:	bl	1a09c <next@@Base+0x1e7c>
   1a47c:	cmp	r0, #-1560281088	; 0xa3000000
   1a480:	bne	1a524 <next@@Base+0x2304>
   1a484:	bl	1a09c <next@@Base+0x1e7c>
   1a488:	mov	r0, r5
   1a48c:	bl	1a29c <next@@Base+0x207c>
   1a490:	bl	18ee8 <next@@Base+0xcc8>
   1a494:	subs	r8, r0, #0
   1a498:	bne	1a658 <next@@Base+0x2438>
   1a49c:	ldr	r3, [r7]
   1a4a0:	cmp	r3, #0
   1a4a4:	bne	1a4f0 <next@@Base+0x22d0>
   1a4a8:	add	r2, sp, #6144	; 0x1800
   1a4ac:	add	r2, r2, #8
   1a4b0:	ldr	r3, [r9, #-1992]	; 0xfffff838
   1a4b4:	ldr	r2, [r2]
   1a4b8:	cmp	r3, r2
   1a4bc:	bne	1a470 <next@@Base+0x2250>
   1a4c0:	ldr	r3, [sp, #8]
   1a4c4:	ldr	ip, [r9, #-1984]	; 0xfffff840
   1a4c8:	ldr	r2, [pc, #524]	; 1a6dc <next@@Base+0x24bc>
   1a4cc:	ldr	r3, [r3, #8]
   1a4d0:	mov	r1, r5
   1a4d4:	cmp	ip, r3
   1a4d8:	ldr	r0, [sp, #4]
   1a4dc:	bne	1a470 <next@@Base+0x2250>
   1a4e0:	bl	11fe4 <memcpy@plt>
   1a4e4:	ldr	r3, [r6]
   1a4e8:	str	r3, [r7]
   1a4ec:	b	1a470 <next@@Base+0x2250>
   1a4f0:	ldr	r0, [pc, #488]	; 1a6e0 <next@@Base+0x24c0>
   1a4f4:	bl	1202c <malloc@plt>
   1a4f8:	ldr	r2, [pc, #476]	; 1a6dc <next@@Base+0x24bc>
   1a4fc:	mov	r1, r5
   1a500:	mov	r3, r0
   1a504:	str	r0, [fp]
   1a508:	add	r0, r0, #8
   1a50c:	str	r3, [sp]
   1a510:	bl	11fe4 <memcpy@plt>
   1a514:	ldr	r3, [sp]
   1a518:	str	r8, [r3]
   1a51c:	ldr	fp, [fp]
   1a520:	b	1a470 <next@@Base+0x2250>
   1a524:	ldr	r5, [r4, #56]	; 0x38
   1a528:	cmp	r5, #0
   1a52c:	beq	1a6c0 <next@@Base+0x24a0>
   1a530:	ldr	r3, [r4, #60]	; 0x3c
   1a534:	cmp	r0, #16777216	; 0x1000000
   1a538:	ldr	r8, [r3]
   1a53c:	bne	1a688 <next@@Base+0x2468>
   1a540:	ldr	r6, [pc, #412]	; 1a6e4 <next@@Base+0x24c4>
   1a544:	mov	r5, #0
   1a548:	add	r6, pc, r6
   1a54c:	add	r6, r6, #4
   1a550:	b	1a594 <next@@Base+0x2374>
   1a554:	mov	r2, r6
   1a558:	mov	r3, r5
   1a55c:	mov	r1, r4
   1a560:	mov	r0, sl
   1a564:	bl	1a108 <next@@Base+0x1ee8>
   1a568:	subs	r6, r0, #0
   1a56c:	beq	1a68c <next@@Base+0x246c>
   1a570:	bl	1a09c <next@@Base+0x1e7c>
   1a574:	ldr	r3, [r4, #56]	; 0x38
   1a578:	add	r5, r5, #1
   1a57c:	cmp	r3, r5
   1a580:	beq	1a6c0 <next@@Base+0x24a0>
   1a584:	ldr	r3, [r4, #60]	; 0x3c
   1a588:	cmp	r0, #16777216	; 0x1000000
   1a58c:	ldr	r8, [r3, r5, lsl #2]
   1a590:	bne	1a68c <next@@Base+0x246c>
   1a594:	bl	1a09c <next@@Base+0x1e7c>
   1a598:	cmp	r0, #0
   1a59c:	beq	1a570 <next@@Base+0x2350>
   1a5a0:	cmp	r0, #3
   1a5a4:	bne	1a68c <next@@Base+0x246c>
   1a5a8:	cmp	r8, #0
   1a5ac:	beq	1a554 <next@@Base+0x2334>
   1a5b0:	ldr	r3, [r8]
   1a5b4:	cmp	r4, r3
   1a5b8:	bne	1a554 <next@@Base+0x2334>
   1a5bc:	bl	1a09c <next@@Base+0x1e7c>
   1a5c0:	ldr	r3, [r8, #4]
   1a5c4:	cmp	r0, r3
   1a5c8:	bne	1a68c <next@@Base+0x246c>
   1a5cc:	bl	1a09c <next@@Base+0x1e7c>
   1a5d0:	ldr	r3, [r8, #8]
   1a5d4:	cmp	r0, r3
   1a5d8:	bne	1a68c <next@@Base+0x246c>
   1a5dc:	bl	1a09c <next@@Base+0x1e7c>
   1a5e0:	ldr	r3, [r8, #12]
   1a5e4:	cmp	r0, r3
   1a5e8:	bne	1a68c <next@@Base+0x246c>
   1a5ec:	ldr	r7, [pc, #244]	; 1a6e8 <next@@Base+0x24c8>
   1a5f0:	ldr	fp, [sp, #12]
   1a5f4:	add	r8, r8, #16
   1a5f8:	ldr	r9, [fp, #4]!
   1a5fc:	cmp	r9, #0
   1a600:	beq	1a638 <next@@Base+0x2418>
   1a604:	bl	1a09c <next@@Base+0x1e7c>
   1a608:	str	r0, [sp]
   1a60c:	bl	1a09c <next@@Base+0x1e7c>
   1a610:	ldr	r3, [sp]
   1a614:	cmp	r3, r7
   1a618:	bne	1a68c <next@@Base+0x246c>
   1a61c:	ldr	r3, [r8]
   1a620:	mov	r1, r3
   1a624:	cmp	r0, r3, lsl #1
   1a628:	bne	1a68c <next@@Base+0x246c>
   1a62c:	ldr	r0, [r8, #4]
   1a630:	blx	r9
   1a634:	add	r8, r8, #8
   1a638:	ldr	r3, [pc, #172]	; 1a6ec <next@@Base+0x24cc>
   1a63c:	add	r7, r7, #131072	; 0x20000
   1a640:	cmp	r7, r3
   1a644:	bne	1a5f8 <next@@Base+0x23d8>
   1a648:	bl	18ee8 <next@@Base+0xcc8>
   1a64c:	cmp	r0, #0
   1a650:	beq	1a570 <next@@Base+0x2350>
   1a654:	mov	r8, r0
   1a658:	cmp	r8, #0
   1a65c:	blt	1a6cc <next@@Base+0x24ac>
   1a660:	ldr	r2, [pc, #136]	; 1a6f0 <next@@Base+0x24d0>
   1a664:	add	r2, pc, r2
   1a668:	ldr	r0, [pc, #132]	; 1a6f4 <next@@Base+0x24d4>
   1a66c:	mov	r1, sl
   1a670:	add	r0, pc, r0
   1a674:	bl	190b8 <next@@Base+0xe98>
   1a678:	mvn	r0, #0
   1a67c:	add	sp, sp, #6080	; 0x17c0
   1a680:	add	sp, sp, #28
   1a684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a688:	mov	r5, #0
   1a68c:	ldr	r2, [pc, #100]	; 1a6f8 <next@@Base+0x24d8>
   1a690:	ldr	r0, [pc, #100]	; 1a6fc <next@@Base+0x24dc>
   1a694:	mov	r3, r5
   1a698:	mov	r1, sl
   1a69c:	add	r2, pc, r2
   1a6a0:	add	r0, pc, r0
   1a6a4:	bl	190b8 <next@@Base+0xe98>
   1a6a8:	mvn	r0, #0
   1a6ac:	add	sp, sp, #6080	; 0x17c0
   1a6b0:	add	sp, sp, #28
   1a6b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a6b8:	mvn	r0, #0
   1a6bc:	b	1a450 <next@@Base+0x2230>
   1a6c0:	cmp	r0, #0
   1a6c4:	beq	1a44c <next@@Base+0x222c>
   1a6c8:	b	1a68c <next@@Base+0x246c>
   1a6cc:	ldr	r2, [pc, #44]	; 1a700 <next@@Base+0x24e0>
   1a6d0:	add	r2, pc, r2
   1a6d4:	b	1a668 <next@@Base+0x2448>
   1a6d8:	muleq	r1, r0, r0
   1a6dc:	andeq	r1, r0, r8, asr #15
   1a6e0:	ldrdeq	r1, [r0], -r0
   1a6e4:			; <UNDEFINED> instruction: 0x00013fb0
   1a6e8:			; <UNDEFINED> instruction: 0x01a10000
   1a6ec:			; <UNDEFINED> instruction: 0x01b50000
   1a6f0:	andeq	r1, r0, r0, lsr #11
   1a6f4:	ldrdeq	r1, [r0], -r0
   1a6f8:	andeq	r1, r0, r0, ror r5
   1a6fc:	andeq	r1, r0, r8, ror r5
   1a700:	andeq	r1, r0, r8, lsr #10
   1a704:	ldr	r3, [pc, #68]	; 1a750 <next@@Base+0x2530>
   1a708:	ldr	r2, [pc, #68]	; 1a754 <next@@Base+0x2534>
   1a70c:	add	r3, pc, r3
   1a710:	push	{r4, r5, r6, lr}
   1a714:	mov	r5, r0
   1a718:	ldr	r4, [r3, r2]
   1a71c:	ldr	r0, [r4, #8]
   1a720:	cmp	r0, #0
   1a724:	beq	1a72c <next@@Base+0x250c>
   1a728:	bl	18f44 <next@@Base+0xd24>
   1a72c:	lsl	r1, r5, #2
   1a730:	mov	r2, #0
   1a734:	ldr	r0, [r4]
   1a738:	bl	1211c <fseek@plt>
   1a73c:	ldr	r0, [r4]
   1a740:	bl	11ff0 <ftell@plt>
   1a744:	asr	r0, r0, #2
   1a748:	str	r0, [r4, #4]
   1a74c:	pop	{r4, r5, r6, pc}
   1a750:	andeq	r1, r1, ip, ror #17
   1a754:	andeq	r0, r0, r8, lsr #1
   1a758:	cmp	r2, #0
   1a75c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a760:	mov	r9, r0
   1a764:	sub	sp, sp, #20
   1a768:	mov	r5, r1
   1a76c:	mov	r4, r3
   1a770:	beq	1a928 <next@@Base+0x2708>
   1a774:	cmp	r4, #0
   1a778:	bne	1a944 <next@@Base+0x2724>
   1a77c:	mov	r1, r5
   1a780:	ldr	r5, [pc, #456]	; 1a950 <next@@Base+0x2730>
   1a784:	mov	r0, #-1560281088	; 0xa3000000
   1a788:	add	r5, pc, r5
   1a78c:	bl	19f90 <next@@Base+0x1d70>
   1a790:	ldr	r4, [r5]
   1a794:	cmp	r4, #0
   1a798:	movne	r6, #-1560281088	; 0xa3000000
   1a79c:	beq	1a7c8 <next@@Base+0x25a8>
   1a7a0:	add	r1, r4, #8
   1a7a4:	mov	r0, r6
   1a7a8:	bl	19f90 <next@@Base+0x1d70>
   1a7ac:	ldr	r3, [r5]
   1a7b0:	mov	r0, r3
   1a7b4:	ldr	r4, [r3]
   1a7b8:	bl	11fd8 <free@plt>
   1a7bc:	cmp	r4, #0
   1a7c0:	str	r4, [r5]
   1a7c4:	bne	1a7a0 <next@@Base+0x2580>
   1a7c8:	ldr	r3, [r9, #56]	; 0x38
   1a7cc:	cmp	r3, #0
   1a7d0:	beq	1a90c <next@@Base+0x26ec>
   1a7d4:	ldr	r3, [pc, #376]	; 1a954 <next@@Base+0x2734>
   1a7d8:	ldr	r8, [pc, #376]	; 1a958 <next@@Base+0x2738>
   1a7dc:	add	r3, pc, r3
   1a7e0:	str	r3, [sp, #4]
   1a7e4:	ldr	r3, [pc, #368]	; 1a95c <next@@Base+0x273c>
   1a7e8:	mov	r7, #0
   1a7ec:	add	r3, pc, r3
   1a7f0:	str	r3, [sp, #12]
   1a7f4:	b	1a830 <next@@Base+0x2610>
   1a7f8:	ldr	r3, [r9, #60]	; 0x3c
   1a7fc:	ldr	r4, [r3, r7, lsl #2]
   1a800:	cmp	r4, #0
   1a804:	beq	1a814 <next@@Base+0x25f4>
   1a808:	ldr	r3, [r4]
   1a80c:	cmp	r9, r3
   1a810:	beq	1a91c <next@@Base+0x26fc>
   1a814:	mov	r1, #0
   1a818:	mov	r0, #16777216	; 0x1000000
   1a81c:	bl	19f70 <next@@Base+0x1d50>
   1a820:	ldr	r3, [r9, #56]	; 0x38
   1a824:	add	r7, r7, #1
   1a828:	cmp	r3, r7
   1a82c:	beq	1a90c <next@@Base+0x26ec>
   1a830:	ldr	r3, [sp, #4]
   1a834:	ldr	r4, [r3, #4]
   1a838:	cmp	r4, #0
   1a83c:	beq	1a7f8 <next@@Base+0x25d8>
   1a840:	ldr	r3, [r4, #4]
   1a844:	cmp	r3, r7
   1a848:	moveq	r3, #1
   1a84c:	addeq	r4, r4, #8
   1a850:	streq	r3, [sp, #8]
   1a854:	bne	1a7f8 <next@@Base+0x25d8>
   1a858:	mov	r1, #3
   1a85c:	mov	r0, #16777216	; 0x1000000
   1a860:	bl	19f70 <next@@Base+0x1d50>
   1a864:	ldr	r0, [r4, #4]
   1a868:	bl	19f38 <next@@Base+0x1d18>
   1a86c:	ldr	r0, [r4, #8]
   1a870:	bl	19f38 <next@@Base+0x1d18>
   1a874:	ldr	r0, [r4, #12]
   1a878:	bl	19f38 <next@@Base+0x1d18>
   1a87c:	ldr	r5, [pc, #220]	; 1a960 <next@@Base+0x2740>
   1a880:	add	r4, r4, #16
   1a884:	add	r6, r9, #12
   1a888:	ldr	r3, [r6, #4]!
   1a88c:	cmp	r3, #0
   1a890:	beq	1a8cc <next@@Base+0x26ac>
   1a894:	ldr	fp, [r4]
   1a898:	mov	r0, r5
   1a89c:	sub	sl, fp, #1
   1a8a0:	lsl	r1, fp, #1
   1a8a4:	bl	19f70 <next@@Base+0x1d50>
   1a8a8:	cmp	fp, #0
   1a8ac:	ldr	fp, [r4, #4]
   1a8b0:	beq	1a8c8 <next@@Base+0x26a8>
   1a8b4:	sub	sl, sl, #1
   1a8b8:	ldrd	r0, [fp], #8
   1a8bc:	bl	19f50 <next@@Base+0x1d30>
   1a8c0:	cmn	sl, #1
   1a8c4:	bne	1a8b4 <next@@Base+0x2694>
   1a8c8:	add	r4, r4, #8
   1a8cc:	add	r5, r5, #131072	; 0x20000
   1a8d0:	cmp	r5, r8
   1a8d4:	bne	1a888 <next@@Base+0x2668>
   1a8d8:	ldr	r3, [sp, #8]
   1a8dc:	cmp	r3, #0
   1a8e0:	beq	1a820 <next@@Base+0x2600>
   1a8e4:	ldr	r4, [sp, #12]
   1a8e8:	mov	r2, #10
   1a8ec:	mov	r0, r9
   1a8f0:	ldr	r1, [r4, #4]
   1a8f4:	bl	19100 <next@@Base+0xee0>
   1a8f8:	ldr	r3, [r9, #56]	; 0x38
   1a8fc:	add	r7, r7, #1
   1a900:	cmp	r3, r7
   1a904:	str	r0, [r4, #4]
   1a908:	bne	1a830 <next@@Base+0x2610>
   1a90c:	mov	r0, #0
   1a910:	add	sp, sp, #20
   1a914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a918:	b	19f38 <next@@Base+0x1d18>
   1a91c:	mov	r3, #0
   1a920:	str	r3, [sp, #8]
   1a924:	b	1a858 <next@@Base+0x2638>
   1a928:	ldr	r1, [pc, #52]	; 1a964 <next@@Base+0x2744>
   1a92c:	ldr	r0, [pc, #52]	; 1a968 <next@@Base+0x2748>
   1a930:	bl	19f70 <next@@Base+0x1d50>
   1a934:	ldr	r0, [r9, #8]
   1a938:	bl	19f38 <next@@Base+0x1d18>
   1a93c:	cmp	r4, #0
   1a940:	beq	1a77c <next@@Base+0x255c>
   1a944:	mov	r0, r4
   1a948:	bl	1a704 <next@@Base+0x24e4>
   1a94c:	b	1a77c <next@@Base+0x255c>
   1a950:	andeq	r3, r1, r0, ror sp
   1a954:	andeq	r3, r1, ip, lsl sp
   1a958:			; <UNDEFINED> instruction: 0x01b50000
   1a95c:	andeq	r3, r1, ip, lsl #26
   1a960:			; <UNDEFINED> instruction: 0x01a10000
   1a964:	ldrtcc	r3, [r0], -sl, lsr #10
   1a968:	strbvs	r6, [r3, -r1, ror #8]!

0001a96c <__gcov_sort_n_vals@@Base>:
   1a96c:	cmp	r1, #2
   1a970:	bxle	lr
   1a974:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a978:	sub	lr, r1, #3
   1a97c:	mov	ip, #0
   1a980:	lsr	lr, lr, #1
   1a984:	add	r1, r0, #8
   1a988:	add	lr, r0, lr, lsl #4
   1a98c:	add	lr, lr, #24
   1a990:	ldrd	r4, [r1, #16]
   1a994:	ldrd	r6, [r1]
   1a998:	ldrd	r8, [r1, #8]
   1a99c:	mov	r2, ip
   1a9a0:	cmp	r6, r4
   1a9a4:	sbcs	r3, r7, r5
   1a9a8:	mov	fp, ip
   1a9ac:	bge	1a9f4 <__gcov_sort_n_vals@@Base+0x88>
   1a9b0:	add	r3, r1, #8
   1a9b4:	mov	sl, #0
   1a9b8:	b	1a9d0 <__gcov_sort_n_vals@@Base+0x64>
   1a9bc:	ldrd	r6, [r3, #-24]	; 0xffffffe8
   1a9c0:	sub	r3, r3, #16
   1a9c4:	cmp	r6, r4
   1a9c8:	sbcs	r6, r7, r5
   1a9cc:	bge	1a9f4 <__gcov_sort_n_vals@@Base+0x88>
   1a9d0:	ldrd	r6, [r3, #-16]
   1a9d4:	subs	r2, r2, #2
   1a9d8:	mov	fp, r2
   1a9dc:	strd	r6, [r3]
   1a9e0:	ldrd	r6, [r1, sl]
   1a9e4:	sub	sl, sl, #16
   1a9e8:	strd	r6, [r3, #8]
   1a9ec:	mov	r6, r3
   1a9f0:	bpl	1a9bc <__gcov_sort_n_vals@@Base+0x50>
   1a9f4:	add	fp, fp, #2
   1a9f8:	mov	r3, r0
   1a9fc:	add	r1, r1, #16
   1aa00:	lsl	fp, fp, #3
   1aa04:	cmp	lr, r1
   1aa08:	strd	r8, [r3, fp]!
   1aa0c:	add	ip, ip, #2
   1aa10:	strd	r4, [r3, #8]
   1aa14:	bne	1a990 <__gcov_sort_n_vals@@Base+0x24>
   1aa18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa1c:	push	{r4, r5, r6, r7, r8, lr}
   1aa20:	ldr	r6, [r0]
   1aa24:	ldr	r4, [pc, #76]	; 1aa78 <__gcov_sort_n_vals@@Base+0x10c>
   1aa28:	smull	r2, r3, r4, r6
   1aa2c:	asr	r4, r6, #31
   1aa30:	rsb	r4, r4, r3, asr #1
   1aa34:	add	r4, r4, r4, lsl #3
   1aa38:	subs	r4, r6, r4
   1aa3c:	bne	1aa74 <__gcov_sort_n_vals@@Base+0x108>
   1aa40:	cmp	r6, #0
   1aa44:	ldr	r5, [r0, #4]
   1aa48:	pople	{r4, r5, r6, r7, r8, pc}
   1aa4c:	add	r5, r5, #8
   1aa50:	mov	r7, #8
   1aa54:	mov	r0, r5
   1aa58:	add	r4, r4, #9
   1aa5c:	mov	r1, r7
   1aa60:	bl	1a96c <__gcov_sort_n_vals@@Base>
   1aa64:	cmp	r6, r4
   1aa68:	add	r5, r5, #72	; 0x48
   1aa6c:	bgt	1aa54 <__gcov_sort_n_vals@@Base+0xe8>
   1aa70:	pop	{r4, r5, r6, r7, r8, pc}
   1aa74:	bl	12134 <abort@plt>
   1aa78:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   1aa7c:	ldr	r3, [r0, #52]	; 0x34
   1aa80:	cmp	r3, #0
   1aa84:	bxeq	lr
   1aa88:	ldr	ip, [r0, #56]	; 0x38
   1aa8c:	cmp	ip, #0
   1aa90:	bxeq	lr
   1aa94:	push	{r4, r5, r6, lr}
   1aa98:	mov	r5, r0
   1aa9c:	mov	r4, #0
   1aaa0:	add	r6, r0, #12
   1aaa4:	ldr	r1, [r5, #60]	; 0x3c
   1aaa8:	mov	r2, r6
   1aaac:	mov	r3, #0
   1aab0:	ldr	r0, [r1, r4, lsl #2]
   1aab4:	add	r0, r0, #16
   1aab8:	ldr	r1, [r2, #4]!
   1aabc:	cmp	r1, #0
   1aac0:	beq	1aad0 <__gcov_sort_n_vals@@Base+0x164>
   1aac4:	cmp	r3, #9
   1aac8:	beq	1aaec <__gcov_sort_n_vals@@Base+0x180>
   1aacc:	add	r0, r0, #8
   1aad0:	add	r3, r3, #1
   1aad4:	cmp	r3, #10
   1aad8:	bne	1aab8 <__gcov_sort_n_vals@@Base+0x14c>
   1aadc:	add	r4, r4, #1
   1aae0:	cmp	ip, r4
   1aae4:	bne	1aaa4 <__gcov_sort_n_vals@@Base+0x138>
   1aae8:	pop	{r4, r5, r6, pc}
   1aaec:	bl	1aa1c <__gcov_sort_n_vals@@Base+0xb0>
   1aaf0:	ldr	ip, [r5, #56]	; 0x38
   1aaf4:	add	r4, r4, #1
   1aaf8:	cmp	ip, r4
   1aafc:	bne	1aaa4 <__gcov_sort_n_vals@@Base+0x138>
   1ab00:	b	1aae8 <__gcov_sort_n_vals@@Base+0x17c>
   1ab04:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ab08:	sub	sp, sp, #6080	; 0x17c0
   1ab0c:	ldr	ip, [pc, #388]	; 1ac98 <__gcov_sort_n_vals@@Base+0x32c>
   1ab10:	sub	sp, sp, #36	; 0x24
   1ab14:	add	ip, pc, ip
   1ab18:	add	r5, sp, #2016	; 0x7e0
   1ab1c:	mov	r4, r0
   1ab20:	mov	r7, r1
   1ab24:	mov	r1, #0
   1ab28:	str	r1, [ip, #4]
   1ab2c:	str	r1, [ip]
   1ab30:	mov	r8, r2
   1ab34:	mov	r6, r3
   1ab38:	str	r1, [r5, #-2000]	; 0xfffff830
   1ab3c:	str	r1, [r5, #-1996]	; 0xfffff834
   1ab40:	bl	1aa7c <__gcov_sort_n_vals@@Base+0x110>
   1ab44:	mov	r1, r7
   1ab48:	ldr	r0, [r4, #12]
   1ab4c:	bl	19db4 <next@@Base+0x1b94>
   1ab50:	cmn	r0, #1
   1ab54:	beq	1abd4 <__gcov_sort_n_vals@@Base+0x268>
   1ab58:	bl	1a09c <next@@Base+0x1e7c>
   1ab5c:	cmp	r0, #0
   1ab60:	beq	1abe0 <__gcov_sort_n_vals@@Base+0x274>
   1ab64:	ldr	r3, [pc, #304]	; 1ac9c <__gcov_sort_n_vals@@Base+0x330>
   1ab68:	cmp	r0, r3
   1ab6c:	beq	1ac38 <__gcov_sort_n_vals@@Base+0x2cc>
   1ab70:	ldr	r0, [pc, #296]	; 1aca0 <__gcov_sort_n_vals@@Base+0x334>
   1ab74:	ldr	r1, [r7]
   1ab78:	add	r0, pc, r0
   1ab7c:	bl	190b8 <next@@Base+0xe98>
   1ab80:	ldr	r5, [pc, #284]	; 1aca4 <__gcov_sort_n_vals@@Base+0x338>
   1ab84:	add	r5, pc, r5
   1ab88:	ldr	r1, [r5, #4]
   1ab8c:	cmp	r1, #0
   1ab90:	movne	r6, #10
   1ab94:	beq	1abb4 <__gcov_sort_n_vals@@Base+0x248>
   1ab98:	mov	r2, r6
   1ab9c:	mov	r0, r4
   1aba0:	bl	19100 <next@@Base+0xee0>
   1aba4:	cmp	r0, #0
   1aba8:	mov	r1, r0
   1abac:	str	r0, [r5, #4]
   1abb0:	bne	1ab98 <__gcov_sort_n_vals@@Base+0x22c>
   1abb4:	bl	19ec8 <next@@Base+0x1ca8>
   1abb8:	cmp	r0, #0
   1abbc:	beq	1abd4 <__gcov_sort_n_vals@@Base+0x268>
   1abc0:	blt	1ac74 <__gcov_sort_n_vals@@Base+0x308>
   1abc4:	ldr	r0, [pc, #220]	; 1aca8 <__gcov_sort_n_vals@@Base+0x33c>
   1abc8:	add	r0, pc, r0
   1abcc:	ldr	r1, [r7]
   1abd0:	bl	190b8 <next@@Base+0xe98>
   1abd4:	add	sp, sp, #6080	; 0x17c0
   1abd8:	add	sp, sp, #36	; 0x24
   1abdc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1abe0:	add	r9, sp, #24
   1abe4:	bl	19c48 <next@@Base+0x1a28>
   1abe8:	ldr	r1, [r5, #-2000]	; 0xfffff830
   1abec:	cmp	r1, #0
   1abf0:	beq	1ac80 <__gcov_sort_n_vals@@Base+0x314>
   1abf4:	add	r3, sp, #6144	; 0x1800
   1abf8:	ldr	r0, [r7]
   1abfc:	str	r6, [sp, #4]
   1ac00:	ldr	r3, [r3]
   1ac04:	mov	r1, r8
   1ac08:	str	r3, [sp]
   1ac0c:	mov	r2, r4
   1ac10:	mov	r3, r9
   1ac14:	bl	19b0c <next@@Base+0x18ec>
   1ac18:	cmn	r0, #1
   1ac1c:	beq	1ab80 <__gcov_sort_n_vals@@Base+0x214>
   1ac20:	mov	r1, r9
   1ac24:	ldr	r3, [r5, #-2000]	; 0xfffff830
   1ac28:	ldr	r2, [r5, #-1996]	; 0xfffff834
   1ac2c:	mov	r0, r4
   1ac30:	bl	1a758 <next@@Base+0x2538>
   1ac34:	b	1ab80 <__gcov_sort_n_vals@@Base+0x214>
   1ac38:	add	r3, sp, #16
   1ac3c:	ldr	r0, [r7]
   1ac40:	str	r3, [sp]
   1ac44:	add	r3, sp, #6144	; 0x1800
   1ac48:	add	r1, sp, #20
   1ac4c:	add	r9, sp, #24
   1ac50:	str	r1, [sp, #4]
   1ac54:	str	r6, [sp, #8]
   1ac58:	mov	r2, r9
   1ac5c:	ldr	r3, [r3]
   1ac60:	mov	r1, r4
   1ac64:	bl	1a3ec <next@@Base+0x21cc>
   1ac68:	cmn	r0, #1
   1ac6c:	bne	1abe4 <__gcov_sort_n_vals@@Base+0x278>
   1ac70:	b	1ab80 <__gcov_sort_n_vals@@Base+0x214>
   1ac74:	ldr	r0, [pc, #48]	; 1acac <__gcov_sort_n_vals@@Base+0x340>
   1ac78:	add	r0, pc, r0
   1ac7c:	b	1abcc <__gcov_sort_n_vals@@Base+0x260>
   1ac80:	ldr	r2, [pc, #40]	; 1acb0 <__gcov_sort_n_vals@@Base+0x344>
   1ac84:	mov	r0, r9
   1ac88:	bl	120c8 <memset@plt>
   1ac8c:	ldr	r3, [r5, #-1996]	; 0xfffff834
   1ac90:	str	r3, [r5, #-2000]	; 0xfffff830
   1ac94:	b	1abf4 <__gcov_sort_n_vals@@Base+0x288>
   1ac98:	andeq	r3, r1, r4, ror #19
   1ac9c:	strbvs	r6, [r3, -r1, ror #8]!
   1aca0:	andeq	r1, r0, r0, lsr #2
   1aca4:	andeq	r3, r1, r4, ror r9
   1aca8:	strheq	r1, [r0], -r4
   1acac:	andeq	r0, r0, r4, ror #31
   1acb0:	andeq	r1, r0, r8, asr #15
   1acb4:	push	{r4, r5, r6, r7, r8, lr}
   1acb8:	sub	sp, sp, #6080	; 0x17c0
   1acbc:	sub	sp, sp, #32
   1acc0:	add	r6, sp, #24
   1acc4:	add	r2, sp, #12
   1acc8:	mov	r8, r1
   1accc:	mov	r1, r6
   1acd0:	mov	r4, r0
   1acd4:	bl	19318 <next@@Base+0x10f8>
   1acd8:	add	r5, sp, #8
   1acdc:	mov	r7, r0
   1ace0:	mov	r0, r5
   1ace4:	bl	1949c <next@@Base+0x127c>
   1ace8:	cmp	r4, #0
   1acec:	beq	1ad14 <__gcov_sort_n_vals@@Base+0x3a8>
   1acf0:	mov	r0, r4
   1acf4:	str	r6, [sp]
   1acf8:	mov	r3, r7
   1acfc:	mov	r2, r8
   1ad00:	mov	r1, r5
   1ad04:	bl	1ab04 <__gcov_sort_n_vals@@Base+0x198>
   1ad08:	ldr	r4, [r4, #4]
   1ad0c:	cmp	r4, #0
   1ad10:	bne	1acf0 <__gcov_sort_n_vals@@Base+0x384>
   1ad14:	ldr	r0, [sp, #8]
   1ad18:	bl	11fd8 <free@plt>
   1ad1c:	add	sp, sp, #6080	; 0x17c0
   1ad20:	add	sp, sp, #32
   1ad24:	pop	{r4, r5, r6, r7, r8, pc}
   1ad28:	ldrb	r1, [r0, #4]
   1ad2c:	tst	r1, #1
   1ad30:	bxne	lr
   1ad34:	push	{r4, lr}
   1ad38:	lsr	r1, r1, #1
   1ad3c:	mov	r4, r0
   1ad40:	and	r1, r1, #1
   1ad44:	ldr	r0, [r0]
   1ad48:	bl	1acb4 <__gcov_sort_n_vals@@Base+0x348>
   1ad4c:	ldrb	r3, [r4, #4]
   1ad50:	orr	r3, r3, #3
   1ad54:	strb	r3, [r4, #4]
   1ad58:	pop	{r4, pc}
   1ad5c:	push	{r4, r5, r6, lr}
   1ad60:	ldr	r4, [pc, #76]	; 1adb4 <__gcov_sort_n_vals@@Base+0x448>
   1ad64:	ldr	r5, [pc, #76]	; 1adb8 <__gcov_sort_n_vals@@Base+0x44c>
   1ad68:	add	r4, pc, r4
   1ad6c:	mov	r0, r4
   1ad70:	bl	1ad28 <__gcov_sort_n_vals@@Base+0x3bc>
   1ad74:	ldr	r3, [r4, #8]
   1ad78:	add	r5, pc, r5
   1ad7c:	cmp	r3, #0
   1ad80:	ldrne	r2, [r4, #12]
   1ad84:	strne	r2, [r3, #12]
   1ad88:	ldr	r2, [pc, #44]	; 1adbc <__gcov_sort_n_vals@@Base+0x450>
   1ad8c:	add	r2, pc, r2
   1ad90:	ldr	r2, [r2, #12]
   1ad94:	cmp	r2, #0
   1ad98:	beq	1ada4 <__gcov_sort_n_vals@@Base+0x438>
   1ad9c:	str	r3, [r2, #8]
   1ada0:	pop	{r4, r5, r6, pc}
   1ada4:	ldr	r2, [pc, #20]	; 1adc0 <__gcov_sort_n_vals@@Base+0x454>
   1ada8:	ldr	r2, [r5, r2]
   1adac:	str	r3, [r2, #4]
   1adb0:	pop	{r4, r5, r6, pc}
   1adb4:	andeq	r3, r1, r8, asr #18
   1adb8:	andeq	r1, r1, r0, lsl #5
   1adbc:	andeq	r3, r1, r4, lsr #18
   1adc0:	andeq	r0, r0, r4, lsr #1
   1adc4:	ldr	r1, [r0]
   1adc8:	push	{r4, r5, r6, lr}
   1adcc:	cmp	r1, #0
   1add0:	ldr	r5, [pc, #168]	; 1ae80 <__gcov_sort_n_vals@@Base+0x514>
   1add4:	add	r5, pc, r5
   1add8:	popeq	{r4, r5, r6, pc}
   1addc:	ldr	r3, [r0, #56]	; 0x38
   1ade0:	cmp	r3, #0
   1ade4:	popeq	{r4, r5, r6, pc}
   1ade8:	mov	r4, r0
   1adec:	mov	r2, #0
   1adf0:	add	r0, r0, #12
   1adf4:	bl	19a80 <next@@Base+0x1860>
   1adf8:	cmp	r0, #0
   1adfc:	popeq	{r4, r5, r6, pc}
   1ae00:	ldr	r6, [pc, #124]	; 1ae84 <__gcov_sort_n_vals@@Base+0x518>
   1ae04:	add	r6, pc, r6
   1ae08:	ldr	r2, [r6]
   1ae0c:	cmp	r2, #0
   1ae10:	beq	1ae28 <__gcov_sort_n_vals@@Base+0x4bc>
   1ae14:	ldr	r3, [pc, #108]	; 1ae88 <__gcov_sort_n_vals@@Base+0x51c>
   1ae18:	str	r2, [r4, #4]
   1ae1c:	add	r3, pc, r3
   1ae20:	str	r4, [r3]
   1ae24:	pop	{r4, r5, r6, pc}
   1ae28:	ldr	r3, [pc, #92]	; 1ae8c <__gcov_sort_n_vals@@Base+0x520>
   1ae2c:	ldr	r2, [pc, #92]	; 1ae90 <__gcov_sort_n_vals@@Base+0x524>
   1ae30:	mov	r0, #12
   1ae34:	ldr	r5, [r5, r3]
   1ae38:	add	r2, pc, r2
   1ae3c:	ldr	r1, [r5]
   1ae40:	bl	19a80 <next@@Base+0x1860>
   1ae44:	cmp	r0, #0
   1ae48:	beq	1ae68 <__gcov_sort_n_vals@@Base+0x4fc>
   1ae4c:	ldr	r3, [r5, #4]
   1ae50:	cmp	r3, #0
   1ae54:	str	r3, [r6, #8]
   1ae58:	strne	r6, [r3, #12]
   1ae5c:	ldr	r3, [pc, #48]	; 1ae94 <__gcov_sort_n_vals@@Base+0x528>
   1ae60:	add	r3, pc, r3
   1ae64:	str	r3, [r5, #4]
   1ae68:	ldr	r0, [pc, #40]	; 1ae98 <__gcov_sort_n_vals@@Base+0x52c>
   1ae6c:	add	r0, pc, r0
   1ae70:	bl	1b360 <__libc_csu_fini@@Base+0x4>
   1ae74:	ldr	r3, [pc, #32]	; 1ae9c <__gcov_sort_n_vals@@Base+0x530>
   1ae78:	ldr	r2, [pc, r3]
   1ae7c:	b	1ae14 <__gcov_sort_n_vals@@Base+0x4a8>
   1ae80:	andeq	r1, r1, r4, lsr #4
   1ae84:	andeq	r3, r1, ip, lsr #17
   1ae88:	muleq	r1, r4, r8
   1ae8c:	andeq	r0, r0, r4, lsr #1
   1ae90:	andeq	r0, r0, r4, lsl #29
   1ae94:	andeq	r3, r1, r0, asr r8
   1ae98:			; <UNDEFINED> instruction: 0xfffffee8
   1ae9c:	andeq	r3, r1, r8, lsr r8
   1aea0:	subs	r2, r1, #1
   1aea4:	bxeq	lr
   1aea8:	bcc	1b080 <__gcov_sort_n_vals@@Base+0x714>
   1aeac:	cmp	r0, r1
   1aeb0:	bls	1b064 <__gcov_sort_n_vals@@Base+0x6f8>
   1aeb4:	tst	r1, r2
   1aeb8:	beq	1b070 <__gcov_sort_n_vals@@Base+0x704>
   1aebc:	clz	r3, r0
   1aec0:	clz	r2, r1
   1aec4:	sub	r3, r2, r3
   1aec8:	rsbs	r3, r3, #31
   1aecc:	addne	r3, r3, r3, lsl #1
   1aed0:	mov	r2, #0
   1aed4:	addne	pc, pc, r3, lsl #2
   1aed8:	nop			; (mov r0, r0)
   1aedc:	cmp	r0, r1, lsl #31
   1aee0:	adc	r2, r2, r2
   1aee4:	subcs	r0, r0, r1, lsl #31
   1aee8:	cmp	r0, r1, lsl #30
   1aeec:	adc	r2, r2, r2
   1aef0:	subcs	r0, r0, r1, lsl #30
   1aef4:	cmp	r0, r1, lsl #29
   1aef8:	adc	r2, r2, r2
   1aefc:	subcs	r0, r0, r1, lsl #29
   1af00:	cmp	r0, r1, lsl #28
   1af04:	adc	r2, r2, r2
   1af08:	subcs	r0, r0, r1, lsl #28
   1af0c:	cmp	r0, r1, lsl #27
   1af10:	adc	r2, r2, r2
   1af14:	subcs	r0, r0, r1, lsl #27
   1af18:	cmp	r0, r1, lsl #26
   1af1c:	adc	r2, r2, r2
   1af20:	subcs	r0, r0, r1, lsl #26
   1af24:	cmp	r0, r1, lsl #25
   1af28:	adc	r2, r2, r2
   1af2c:	subcs	r0, r0, r1, lsl #25
   1af30:	cmp	r0, r1, lsl #24
   1af34:	adc	r2, r2, r2
   1af38:	subcs	r0, r0, r1, lsl #24
   1af3c:	cmp	r0, r1, lsl #23
   1af40:	adc	r2, r2, r2
   1af44:	subcs	r0, r0, r1, lsl #23
   1af48:	cmp	r0, r1, lsl #22
   1af4c:	adc	r2, r2, r2
   1af50:	subcs	r0, r0, r1, lsl #22
   1af54:	cmp	r0, r1, lsl #21
   1af58:	adc	r2, r2, r2
   1af5c:	subcs	r0, r0, r1, lsl #21
   1af60:	cmp	r0, r1, lsl #20
   1af64:	adc	r2, r2, r2
   1af68:	subcs	r0, r0, r1, lsl #20
   1af6c:	cmp	r0, r1, lsl #19
   1af70:	adc	r2, r2, r2
   1af74:	subcs	r0, r0, r1, lsl #19
   1af78:	cmp	r0, r1, lsl #18
   1af7c:	adc	r2, r2, r2
   1af80:	subcs	r0, r0, r1, lsl #18
   1af84:	cmp	r0, r1, lsl #17
   1af88:	adc	r2, r2, r2
   1af8c:	subcs	r0, r0, r1, lsl #17
   1af90:	cmp	r0, r1, lsl #16
   1af94:	adc	r2, r2, r2
   1af98:	subcs	r0, r0, r1, lsl #16
   1af9c:	cmp	r0, r1, lsl #15
   1afa0:	adc	r2, r2, r2
   1afa4:	subcs	r0, r0, r1, lsl #15
   1afa8:	cmp	r0, r1, lsl #14
   1afac:	adc	r2, r2, r2
   1afb0:	subcs	r0, r0, r1, lsl #14
   1afb4:	cmp	r0, r1, lsl #13
   1afb8:	adc	r2, r2, r2
   1afbc:	subcs	r0, r0, r1, lsl #13
   1afc0:	cmp	r0, r1, lsl #12
   1afc4:	adc	r2, r2, r2
   1afc8:	subcs	r0, r0, r1, lsl #12
   1afcc:	cmp	r0, r1, lsl #11
   1afd0:	adc	r2, r2, r2
   1afd4:	subcs	r0, r0, r1, lsl #11
   1afd8:	cmp	r0, r1, lsl #10
   1afdc:	adc	r2, r2, r2
   1afe0:	subcs	r0, r0, r1, lsl #10
   1afe4:	cmp	r0, r1, lsl #9
   1afe8:	adc	r2, r2, r2
   1afec:	subcs	r0, r0, r1, lsl #9
   1aff0:	cmp	r0, r1, lsl #8
   1aff4:	adc	r2, r2, r2
   1aff8:	subcs	r0, r0, r1, lsl #8
   1affc:	cmp	r0, r1, lsl #7
   1b000:	adc	r2, r2, r2
   1b004:	subcs	r0, r0, r1, lsl #7
   1b008:	cmp	r0, r1, lsl #6
   1b00c:	adc	r2, r2, r2
   1b010:	subcs	r0, r0, r1, lsl #6
   1b014:	cmp	r0, r1, lsl #5
   1b018:	adc	r2, r2, r2
   1b01c:	subcs	r0, r0, r1, lsl #5
   1b020:	cmp	r0, r1, lsl #4
   1b024:	adc	r2, r2, r2
   1b028:	subcs	r0, r0, r1, lsl #4
   1b02c:	cmp	r0, r1, lsl #3
   1b030:	adc	r2, r2, r2
   1b034:	subcs	r0, r0, r1, lsl #3
   1b038:	cmp	r0, r1, lsl #2
   1b03c:	adc	r2, r2, r2
   1b040:	subcs	r0, r0, r1, lsl #2
   1b044:	cmp	r0, r1, lsl #1
   1b048:	adc	r2, r2, r2
   1b04c:	subcs	r0, r0, r1, lsl #1
   1b050:	cmp	r0, r1
   1b054:	adc	r2, r2, r2
   1b058:	subcs	r0, r0, r1
   1b05c:	mov	r0, r2
   1b060:	bx	lr
   1b064:	moveq	r0, #1
   1b068:	movne	r0, #0
   1b06c:	bx	lr
   1b070:	clz	r2, r1
   1b074:	rsb	r2, r2, #31
   1b078:	lsr	r0, r0, r2
   1b07c:	bx	lr
   1b080:	cmp	r0, #0
   1b084:	mvnne	r0, #0
   1b088:	b	1b180 <__gcov_sort_n_vals@@Base+0x814>
   1b08c:	cmp	r1, #0
   1b090:	beq	1b080 <__gcov_sort_n_vals@@Base+0x714>
   1b094:	push	{r0, r1, lr}
   1b098:	bl	1aea0 <__gcov_sort_n_vals@@Base+0x534>
   1b09c:	pop	{r1, r2, lr}
   1b0a0:	mul	r3, r2, r0
   1b0a4:	sub	r1, r1, r3
   1b0a8:	bx	lr
   1b0ac:	cmp	r3, #0
   1b0b0:	cmpeq	r2, #0
   1b0b4:	bne	1b0d8 <__gcov_sort_n_vals@@Base+0x76c>
   1b0b8:	cmp	r1, #0
   1b0bc:	movlt	r1, #-2147483648	; 0x80000000
   1b0c0:	movlt	r0, #0
   1b0c4:	blt	1b0d4 <__gcov_sort_n_vals@@Base+0x768>
   1b0c8:	cmpeq	r0, #0
   1b0cc:	mvnne	r1, #-2147483648	; 0x80000000
   1b0d0:	mvnne	r0, #0
   1b0d4:	b	1b180 <__gcov_sort_n_vals@@Base+0x814>
   1b0d8:	sub	sp, sp, #8
   1b0dc:	push	{sp, lr}
   1b0e0:	cmp	r1, #0
   1b0e4:	blt	1b104 <__gcov_sort_n_vals@@Base+0x798>
   1b0e8:	cmp	r3, #0
   1b0ec:	blt	1b138 <__gcov_sort_n_vals@@Base+0x7cc>
   1b0f0:	bl	1b1d4 <__gcov_sort_n_vals@@Base+0x868>
   1b0f4:	ldr	lr, [sp, #4]
   1b0f8:	add	sp, sp, #8
   1b0fc:	pop	{r2, r3}
   1b100:	bx	lr
   1b104:	rsbs	r0, r0, #0
   1b108:	sbc	r1, r1, r1, lsl #1
   1b10c:	cmp	r3, #0
   1b110:	blt	1b15c <__gcov_sort_n_vals@@Base+0x7f0>
   1b114:	bl	1b1d4 <__gcov_sort_n_vals@@Base+0x868>
   1b118:	ldr	lr, [sp, #4]
   1b11c:	add	sp, sp, #8
   1b120:	pop	{r2, r3}
   1b124:	rsbs	r0, r0, #0
   1b128:	sbc	r1, r1, r1, lsl #1
   1b12c:	rsbs	r2, r2, #0
   1b130:	sbc	r3, r3, r3, lsl #1
   1b134:	bx	lr
   1b138:	rsbs	r2, r2, #0
   1b13c:	sbc	r3, r3, r3, lsl #1
   1b140:	bl	1b1d4 <__gcov_sort_n_vals@@Base+0x868>
   1b144:	ldr	lr, [sp, #4]
   1b148:	add	sp, sp, #8
   1b14c:	pop	{r2, r3}
   1b150:	rsbs	r0, r0, #0
   1b154:	sbc	r1, r1, r1, lsl #1
   1b158:	bx	lr
   1b15c:	rsbs	r2, r2, #0
   1b160:	sbc	r3, r3, r3, lsl #1
   1b164:	bl	1b1d4 <__gcov_sort_n_vals@@Base+0x868>
   1b168:	ldr	lr, [sp, #4]
   1b16c:	add	sp, sp, #8
   1b170:	pop	{r2, r3}
   1b174:	rsbs	r2, r2, #0
   1b178:	sbc	r3, r3, r3, lsl #1
   1b17c:	bx	lr
   1b180:	push	{r1, lr}
   1b184:	mov	r0, #8
   1b188:	bl	11fa8 <raise@plt>
   1b18c:	pop	{r1, pc}
   1b190:	ldr	r3, [pc, #48]	; 1b1c8 <__gcov_sort_n_vals@@Base+0x85c>
   1b194:	ldr	r2, [pc, #48]	; 1b1cc <__gcov_sort_n_vals@@Base+0x860>
   1b198:	and	r3, r3, r0, lsr #1
   1b19c:	sub	r0, r0, r3
   1b1a0:	and	r3, r0, r2
   1b1a4:	and	r0, r2, r0, lsr #2
   1b1a8:	add	r3, r3, r0
   1b1ac:	ldr	r0, [pc, #28]	; 1b1d0 <__gcov_sort_n_vals@@Base+0x864>
   1b1b0:	add	r3, r3, r3, lsr #4
   1b1b4:	and	r0, r0, r3
   1b1b8:	add	r0, r0, r0, lsl #8
   1b1bc:	add	r0, r0, r0, lsl #16
   1b1c0:	lsr	r0, r0, #24
   1b1c4:	bx	lr
   1b1c8:	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
   1b1cc:	teqcc	r3, #-872415232	; 0xcc000000
   1b1d0:	svceq	0x000f0f0f
   1b1d4:	cmp	r1, r3
   1b1d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b1dc:	cmpeq	r0, r2
   1b1e0:	mov	r4, r0
   1b1e4:	mov	r5, r1
   1b1e8:	ldr	r9, [sp, #28]
   1b1ec:	movcc	r0, #0
   1b1f0:	movcc	r1, #0
   1b1f4:	bcc	1b2ec <__gcov_sort_n_vals@@Base+0x980>
   1b1f8:	cmp	r3, #0
   1b1fc:	clzeq	ip, r2
   1b200:	clzne	ip, r3
   1b204:	addeq	ip, ip, #32
   1b208:	cmp	r5, #0
   1b20c:	clzeq	r1, r4
   1b210:	addeq	r1, r1, #32
   1b214:	clzne	r1, r5
   1b218:	sub	ip, ip, r1
   1b21c:	sub	lr, ip, #32
   1b220:	lsl	r7, r3, ip
   1b224:	rsb	r8, ip, #32
   1b228:	orr	r7, r7, r2, lsl lr
   1b22c:	orr	r7, r7, r2, lsr r8
   1b230:	lsl	r6, r2, ip
   1b234:	cmp	r5, r7
   1b238:	cmpeq	r4, r6
   1b23c:	movcc	r0, #0
   1b240:	movcc	r1, #0
   1b244:	bcc	1b260 <__gcov_sort_n_vals@@Base+0x8f4>
   1b248:	mov	r3, #1
   1b24c:	subs	r4, r4, r6
   1b250:	lsl	r1, r3, lr
   1b254:	lsl	r0, r3, ip
   1b258:	orr	r1, r1, r3, lsr r8
   1b25c:	sbc	r5, r5, r7
   1b260:	cmp	ip, #0
   1b264:	beq	1b2ec <__gcov_sort_n_vals@@Base+0x980>
   1b268:	lsrs	r3, r7, #1
   1b26c:	rrx	r2, r6
   1b270:	mov	r6, ip
   1b274:	b	1b298 <__gcov_sort_n_vals@@Base+0x92c>
   1b278:	subs	r4, r4, r2
   1b27c:	sbc	r5, r5, r3
   1b280:	adds	r4, r4, r4
   1b284:	adc	r5, r5, r5
   1b288:	adds	r4, r4, #1
   1b28c:	adc	r5, r5, #0
   1b290:	subs	r6, r6, #1
   1b294:	beq	1b2b4 <__gcov_sort_n_vals@@Base+0x948>
   1b298:	cmp	r5, r3
   1b29c:	cmpeq	r4, r2
   1b2a0:	bcs	1b278 <__gcov_sort_n_vals@@Base+0x90c>
   1b2a4:	adds	r4, r4, r4
   1b2a8:	adc	r5, r5, r5
   1b2ac:	subs	r6, r6, #1
   1b2b0:	bne	1b298 <__gcov_sort_n_vals@@Base+0x92c>
   1b2b4:	lsr	r6, r4, ip
   1b2b8:	lsr	r7, r5, ip
   1b2bc:	orr	r6, r6, r5, lsl r8
   1b2c0:	adds	r2, r0, r4
   1b2c4:	orr	r6, r6, r5, lsr lr
   1b2c8:	adc	r3, r1, r5
   1b2cc:	lsl	r1, r7, ip
   1b2d0:	orr	r1, r1, r6, lsl lr
   1b2d4:	lsl	r0, r6, ip
   1b2d8:	orr	r1, r1, r6, lsr r8
   1b2dc:	subs	r0, r2, r0
   1b2e0:	mov	r4, r6
   1b2e4:	mov	r5, r7
   1b2e8:	sbc	r1, r3, r1
   1b2ec:	cmp	r9, #0
   1b2f0:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1b2f4:	strd	r4, [r9]
   1b2f8:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001b2fc <__libc_csu_init@@Base>:
   1b2fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b300:	mov	r7, r0
   1b304:	ldr	r6, [pc, #72]	; 1b354 <__libc_csu_init@@Base+0x58>
   1b308:	ldr	r5, [pc, #72]	; 1b358 <__libc_csu_init@@Base+0x5c>
   1b30c:	add	r6, pc, r6
   1b310:	add	r5, pc, r5
   1b314:	sub	r6, r6, r5
   1b318:	mov	r8, r1
   1b31c:	mov	r9, r2
   1b320:	bl	11f7c <fdopen@plt-0x20>
   1b324:	asrs	r6, r6, #2
   1b328:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b32c:	mov	r4, #0
   1b330:	add	r4, r4, #1
   1b334:	ldr	r3, [r5], #4
   1b338:	mov	r2, r9
   1b33c:	mov	r1, r8
   1b340:	mov	r0, r7
   1b344:	blx	r3
   1b348:	cmp	r6, r4
   1b34c:	bne	1b330 <__libc_csu_init@@Base+0x34>
   1b350:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b354:	strdeq	r0, [r1], -ip
   1b358:	andeq	r0, r1, r4, ror #23

0001b35c <__libc_csu_fini@@Base>:
   1b35c:	bx	lr
   1b360:	ldr	r3, [pc, #12]	; 1b374 <__libc_csu_fini@@Base+0x18>
   1b364:	mov	r1, #0
   1b368:	add	r3, pc, r3
   1b36c:	ldr	r2, [r3]
   1b370:	b	120a4 <__cxa_atexit@plt>
   1b374:	andeq	r0, r1, r0, asr #26
   1b378:	mov	r2, r1
   1b37c:	mov	r1, r0
   1b380:	mov	r0, #3
   1b384:	b	12044 <__fxstat@plt>

Disassembly of section .fini:

0001b388 <.fini>:
   1b388:	push	{r3, lr}
   1b38c:	pop	{r3, pc}
