
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

00011488 <.init>:
   11488:	push	{r3, lr}
   1148c:	bl	118d4 <sprintf@plt+0x48>
   11490:	pop	{r3, pc}

Disassembly of section .plt:

00011494 <sigemptyset@plt-0x14>:
   11494:	push	{lr}		; (str lr, [sp, #-4]!)
   11498:	ldr	lr, [pc, #4]	; 114a4 <sigemptyset@plt-0x4>
   1149c:	add	lr, pc, lr
   114a0:	ldr	pc, [lr, #8]!
   114a4:	andeq	r8, r1, ip, asr fp

000114a8 <sigemptyset@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #24, 20	; 0x18000
   114b0:	ldr	pc, [ip, #2908]!	; 0xb5c

000114b4 <strerror@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #24, 20	; 0x18000
   114bc:	ldr	pc, [ip, #2900]!	; 0xb54

000114c0 <rb_helper_loop@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #24, 20	; 0x18000
   114c8:	ldr	pc, [ip, #2892]!	; 0xb4c

000114cc <abort@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #24, 20	; 0x18000
   114d4:	ldr	pc, [ip, #2884]!	; 0xb44

000114d8 <rb_event_addish@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #24, 20	; 0x18000
   114e0:	ldr	pc, [ip, #2876]!	; 0xb3c

000114e4 <getsockname@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #24, 20	; 0x18000
   114ec:	ldr	pc, [ip, #2868]!	; 0xb34

000114f0 <rb_ignore_errno@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #24, 20	; 0x18000
   114f8:	ldr	pc, [ip, #2860]!	; 0xb2c

000114fc <rb_connect_tcp_ssl@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #24, 20	; 0x18000
   11504:	ldr	pc, [ip, #2852]!	; 0xb24

00011508 <rb_connect_tcp@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #24, 20	; 0x18000
   11510:	ldr	pc, [ip, #2844]!	; 0xb1c

00011514 <memcmp@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #24, 20	; 0x18000
   1151c:	ldr	pc, [ip, #2836]!	; 0xb14

00011520 <__libc_start_main@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #24, 20	; 0x18000
   11528:	ldr	pc, [ip, #2828]!	; 0xb0c

0001152c <rb_event_delete@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #24, 20	; 0x18000
   11534:	ldr	pc, [ip, #2820]!	; 0xb04

00011538 <rb_setselect@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #24, 20	; 0x18000
   11540:	ldr	pc, [ip, #2812]!	; 0xafc

00011544 <rb_get_fd@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #24, 20	; 0x18000
   1154c:	ldr	pc, [ip, #2804]!	; 0xaf4

00011550 <__gmon_start__@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #24, 20	; 0x18000
   11558:	ldr	pc, [ip, #2796]!	; 0xaec

0001155c <vsnprintf@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #24, 20	; 0x18000
   11564:	ldr	pc, [ip, #2788]!	; 0xae4

00011568 <rb_socket@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #24, 20	; 0x18000
   11570:	ldr	pc, [ip, #2780]!	; 0xadc

00011574 <fclose@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #24, 20	; 0x18000
   1157c:	ldr	pc, [ip, #2772]!	; 0xad4

00011580 <rb_strtok_r@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #24, 20	; 0x18000
   11588:	ldr	pc, [ip, #2764]!	; 0xacc

0001158c <strchr@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #24, 20	; 0x18000
   11594:	ldr	pc, [ip, #2756]!	; 0xac4

00011598 <rb_dictionary_foreach_cur@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #24, 20	; 0x18000
   115a0:	ldr	pc, [ip, #2748]!	; 0xabc

000115a4 <strcasecmp@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #24, 20	; 0x18000
   115ac:	ldr	pc, [ip, #2740]!	; 0xab4

000115b0 <calloc@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #24, 20	; 0x18000
   115b8:	ldr	pc, [ip, #2732]!	; 0xaac

000115bc <rb_helper_child@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #24, 20	; 0x18000
   115c4:	ldr	pc, [ip, #2724]!	; 0xaa4

000115c8 <sendto@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #24, 20	; 0x18000
   115d0:	ldr	pc, [ip, #2716]!	; 0xa9c

000115d4 <fopen@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #24, 20	; 0x18000
   115dc:	ldr	pc, [ip, #2708]!	; 0xa94

000115e0 <memset@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #24, 20	; 0x18000
   115e8:	ldr	pc, [ip, #2700]!	; 0xa8c

000115ec <freeaddrinfo@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #24, 20	; 0x18000
   115f4:	ldr	pc, [ip, #2692]!	; 0xa84

000115f8 <strrchr@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #24, 20	; 0x18000
   11600:	ldr	pc, [ip, #2684]!	; 0xa7c

00011604 <rb_write@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #24, 20	; 0x18000
   1160c:	ldr	pc, [ip, #2676]!	; 0xa74

00011610 <__assert_fail@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #24, 20	; 0x18000
   11618:	ldr	pc, [ip, #2668]!	; 0xa6c

0001161c <fgets_unlocked@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #24, 20	; 0x18000
   11624:	ldr	pc, [ip, #2660]!	; 0xa64

00011628 <rb_strlcpy@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #24, 20	; 0x18000
   11630:	ldr	pc, [ip, #2652]!	; 0xa5c

00011634 <strtoull@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #24, 20	; 0x18000
   1163c:	ldr	pc, [ip, #2644]!	; 0xa54

00011640 <rb_dictionary_foreach_next@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #24, 20	; 0x18000
   11648:	ldr	pc, [ip, #2636]!	; 0xa4c

0001164c <free@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #24, 20	; 0x18000
   11654:	ldr	pc, [ip, #2628]!	; 0xa44

00011658 <rb_string_to_array@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #24, 20	; 0x18000
   11660:	ldr	pc, [ip, #2620]!	; 0xa3c

00011664 <rb_read@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #24, 20	; 0x18000
   1166c:	ldr	pc, [ip, #2612]!	; 0xa34

00011670 <rb_strcasecmp@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #24, 20	; 0x18000
   11678:	ldr	pc, [ip, #2604]!	; 0xa2c

0001167c <getaddrinfo@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #24, 20	; 0x18000
   11684:	ldr	pc, [ip, #2596]!	; 0xa24

00011688 <rb_dictionary_foreach_start@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #24, 20	; 0x18000
   11690:	ldr	pc, [ip, #2588]!	; 0xa1c

00011694 <rb_inet_pton_sock@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #24, 20	; 0x18000
   1169c:	ldr	pc, [ip, #2580]!	; 0xa14

000116a0 <strlen@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #24, 20	; 0x18000
   116a8:	ldr	pc, [ip, #2572]!	; 0xa0c

000116ac <rb_current_time@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #24, 20	; 0x18000
   116b4:	ldr	pc, [ip, #2564]!	; 0xa04

000116b8 <rb_dictionary_delete@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #24, 20	; 0x18000
   116c0:	ldr	pc, [ip, #2556]!	; 0x9fc

000116c4 <memcpy@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #24, 20	; 0x18000
   116cc:	ldr	pc, [ip, #2548]!	; 0x9f4

000116d0 <rb_free_rb_dlink_node@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #24, 20	; 0x18000
   116d8:	ldr	pc, [ip, #2540]!	; 0x9ec

000116dc <rb_close@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #24, 20	; 0x18000
   116e4:	ldr	pc, [ip, #2532]!	; 0x9e4

000116e8 <strtol@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #24, 20	; 0x18000
   116f0:	ldr	pc, [ip, #2524]!	; 0x9dc

000116f4 <sigaddset@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #24, 20	; 0x18000
   116fc:	ldr	pc, [ip, #2516]!	; 0x9d4

00011700 <strcpy@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #24, 20	; 0x18000
   11708:	ldr	pc, [ip, #2508]!	; 0x9cc

0001170c <rb_dictionary_destroy@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #24, 20	; 0x18000
   11714:	ldr	pc, [ip, #2500]!	; 0x9c4

00011718 <bind@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #24, 20	; 0x18000
   11720:	ldr	pc, [ip, #2492]!	; 0x9bc

00011724 <strstr@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #24, 20	; 0x18000
   1172c:	ldr	pc, [ip, #2484]!	; 0x9b4

00011730 <fwrite@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #24, 20	; 0x18000
   11738:	ldr	pc, [ip, #2476]!	; 0x9ac

0001173c <rb_init_prng@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #24, 20	; 0x18000
   11744:	ldr	pc, [ip, #2468]!	; 0x9a4

00011748 <rb_dictionary_retrieve@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #24, 20	; 0x18000
   11750:	ldr	pc, [ip, #2460]!	; 0x99c

00011754 <rb_outofmemory@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #24, 20	; 0x18000
   1175c:	ldr	pc, [ip, #2452]!	; 0x994

00011760 <__ctype_b_loc@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #24, 20	; 0x18000
   11768:	ldr	pc, [ip, #2444]!	; 0x98c

0001176c <rb_dictionary_add@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #24, 20	; 0x18000
   11774:	ldr	pc, [ip, #2436]!	; 0x984

00011778 <rb_set_time@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #24, 20	; 0x18000
   11780:	ldr	pc, [ip, #2428]!	; 0x97c

00011784 <malloc@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #24, 20	; 0x18000
   1178c:	ldr	pc, [ip, #2420]!	; 0x974

00011790 <sigaction@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #24, 20	; 0x18000
   11798:	ldr	pc, [ip, #2412]!	; 0x96c

0001179c <rb_helper_read@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #24, 20	; 0x18000
   117a4:	ldr	pc, [ip, #2404]!	; 0x964

000117a8 <rb_inet_ntop_sock@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #24, 20	; 0x18000
   117b0:	ldr	pc, [ip, #2396]!	; 0x95c

000117b4 <rb_dictionary_find@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #24, 20	; 0x18000
   117bc:	ldr	pc, [ip, #2388]!	; 0x954

000117c0 <rb_dictionary_create@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #24, 20	; 0x18000
   117c8:	ldr	pc, [ip, #2380]!	; 0x94c

000117cc <memmove@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #24, 20	; 0x18000
   117d4:	ldr	pc, [ip, #2372]!	; 0x944

000117d8 <rb_accept_tcp@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #24, 20	; 0x18000
   117e0:	ldr	pc, [ip, #2364]!	; 0x93c

000117e4 <rb_helper_write@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #24, 20	; 0x18000
   117ec:	ldr	pc, [ip, #2356]!	; 0x934

000117f0 <rb_event_add@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #24, 20	; 0x18000
   117f8:	ldr	pc, [ip, #2348]!	; 0x92c

000117fc <rb_get_random@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #24, 20	; 0x18000
   11804:	ldr	pc, [ip, #2340]!	; 0x924

00011808 <rb_make_rb_dlink_node@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #24, 20	; 0x18000
   11810:	ldr	pc, [ip, #2332]!	; 0x91c

00011814 <snprintf@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #24, 20	; 0x18000
   1181c:	ldr	pc, [ip, #2324]!	; 0x914

00011820 <rb_listen@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #24, 20	; 0x18000
   11828:	ldr	pc, [ip, #2316]!	; 0x90c

0001182c <strncmp@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #24, 20	; 0x18000
   11834:	ldr	pc, [ip, #2308]!	; 0x904

00011838 <recvfrom@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #24, 20	; 0x18000
   11840:	ldr	pc, [ip, #2300]!	; 0x8fc

00011844 <setsockopt@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #24, 20	; 0x18000
   1184c:	ldr	pc, [ip, #2292]!	; 0x8f4

00011850 <strpbrk@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #24, 20	; 0x18000
   11858:	ldr	pc, [ip, #2284]!	; 0x8ec

0001185c <memchr@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #24, 20	; 0x18000
   11864:	ldr	pc, [ip, #2276]!	; 0x8e4

00011868 <strcmp@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #24, 20	; 0x18000
   11870:	ldr	pc, [ip, #2268]!	; 0x8dc

00011874 <exit@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #24, 20	; 0x18000
   1187c:	ldr	pc, [ip, #2260]!	; 0x8d4

00011880 <__errno_location@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #24, 20	; 0x18000
   11888:	ldr	pc, [ip, #2252]!	; 0x8cc

0001188c <sprintf@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #24, 20	; 0x18000
   11894:	ldr	pc, [ip, #2244]!	; 0x8c4

Disassembly of section .text:

00011898 <.text>:
   11898:	mov	fp, #0
   1189c:	mov	lr, #0
   118a0:	pop	{r1}		; (ldr r1, [sp], #4)
   118a4:	mov	r2, sp
   118a8:	push	{r2}		; (str r2, [sp, #-4]!)
   118ac:	push	{r0}		; (str r0, [sp, #-4]!)
   118b0:	ldr	ip, [pc, #16]	; 118c8 <sprintf@plt+0x3c>
   118b4:	push	{ip}		; (str ip, [sp, #-4]!)
   118b8:	ldr	r0, [pc, #12]	; 118cc <sprintf@plt+0x40>
   118bc:	ldr	r3, [pc, #12]	; 118d0 <sprintf@plt+0x44>
   118c0:	bl	11520 <__libc_start_main@plt>
   118c4:	bl	114cc <abort@plt>
   118c8:	andeq	r8, r1, r8, lsr #20
   118cc:	andeq	r1, r1, ip, lsl #22
   118d0:	andeq	r8, r1, r8, asr #19
   118d4:	ldr	r3, [pc, #20]	; 118f0 <sprintf@plt+0x64>
   118d8:	ldr	r2, [pc, #20]	; 118f4 <sprintf@plt+0x68>
   118dc:	add	r3, pc, r3
   118e0:	ldr	r2, [r3, r2]
   118e4:	cmp	r2, #0
   118e8:	bxeq	lr
   118ec:	b	11550 <__gmon_start__@plt>
   118f0:	andeq	r8, r1, ip, lsl r7
   118f4:	andeq	r0, r0, ip, asr r1
   118f8:	ldr	r0, [pc, #24]	; 11918 <sprintf@plt+0x8c>
   118fc:	ldr	r3, [pc, #24]	; 1191c <sprintf@plt+0x90>
   11900:	cmp	r3, r0
   11904:	bxeq	lr
   11908:	ldr	r3, [pc, #16]	; 11920 <sprintf@plt+0x94>
   1190c:	cmp	r3, #0
   11910:	bxeq	lr
   11914:	bx	r3
   11918:	andeq	sl, r2, r4, asr #30
   1191c:	andeq	sl, r2, r4, asr #30
   11920:	andeq	r0, r0, r0
   11924:	ldr	r0, [pc, #36]	; 11950 <sprintf@plt+0xc4>
   11928:	ldr	r1, [pc, #36]	; 11954 <sprintf@plt+0xc8>
   1192c:	sub	r1, r1, r0
   11930:	asr	r1, r1, #2
   11934:	add	r1, r1, r1, lsr #31
   11938:	asrs	r1, r1, #1
   1193c:	bxeq	lr
   11940:	ldr	r3, [pc, #16]	; 11958 <sprintf@plt+0xcc>
   11944:	cmp	r3, #0
   11948:	bxeq	lr
   1194c:	bx	r3
   11950:	andeq	sl, r2, r4, asr #30
   11954:	andeq	sl, r2, r4, asr #30
   11958:	andeq	r0, r0, r0
   1195c:	push	{r4, lr}
   11960:	ldr	r4, [pc, #24]	; 11980 <sprintf@plt+0xf4>
   11964:	ldrb	r3, [r4]
   11968:	cmp	r3, #0
   1196c:	popne	{r4, pc}
   11970:	bl	118f8 <sprintf@plt+0x6c>
   11974:	mov	r3, #1
   11978:	strb	r3, [r4]
   1197c:	pop	{r4, pc}
   11980:	andeq	sl, r2, ip, asr #30
   11984:	b	11924 <sprintf@plt+0x98>
   11988:	push	{r4, r5, fp, lr}
   1198c:	add	fp, sp, #8
   11990:	mov	r4, r0
   11994:	cmp	r0, #1
   11998:	bgt	119b4 <sprintf@plt+0x128>
   1199c:	movw	r1, #35579	; 0x8afb
   119a0:	mov	r0, #67	; 0x43
   119a4:	mov	r2, r4
   119a8:	movt	r1, #1
   119ac:	pop	{r4, r5, fp, lr}
   119b0:	b	12528 <sprintf@plt+0xc9c>
   119b4:	movw	r0, #61816	; 0xf178
   119b8:	mov	r5, r1
   119bc:	ldr	r1, [r1, #4]
   119c0:	movt	r0, #2
   119c4:	ldr	r0, [r0]
   119c8:	bl	11748 <rb_dictionary_retrieve@plt>
   119cc:	cmp	r0, #0
   119d0:	beq	119fc <sprintf@plt+0x170>
   119d4:	ldr	r2, [r0, #4]
   119d8:	sub	r1, r4, #2
   119dc:	cmp	r1, r2
   119e0:	bge	11a14 <sprintf@plt+0x188>
   119e4:	movw	r1, #35702	; 0x8b76
   119e8:	mov	r0, #67	; 0x43
   119ec:	mov	r3, r4
   119f0:	movt	r1, #1
   119f4:	pop	{r4, r5, fp, lr}
   119f8:	b	12528 <sprintf@plt+0xc9c>
   119fc:	ldr	r2, [r5, #4]
   11a00:	movw	r1, #35657	; 0x8b49
   11a04:	mov	r0, #67	; 0x43
   11a08:	movt	r1, #1
   11a0c:	pop	{r4, r5, fp, lr}
   11a10:	b	12528 <sprintf@plt+0xc9c>
   11a14:	ldr	r3, [r0, #8]
   11a18:	ldr	r0, [r5, #4]
   11a1c:	add	r2, r5, #8
   11a20:	pop	{r4, r5, fp, lr}
   11a24:	bx	r3
   11a28:	push	{r4, r5, fp, lr}
   11a2c:	add	fp, sp, #8
   11a30:	cmp	r0, #2
   11a34:	bgt	11a68 <sprintf@plt+0x1dc>
   11a38:	movw	r5, #43368	; 0xa968
   11a3c:	mov	r4, #0
   11a40:	movt	r5, #2
   11a44:	ldr	r1, [r5, r4, lsl #2]
   11a48:	cmp	r1, #0
   11a4c:	beq	11a58 <sprintf@plt+0x1cc>
   11a50:	mov	r0, #0
   11a54:	blx	r1
   11a58:	add	r4, r4, #1
   11a5c:	cmp	r4, #256	; 0x100
   11a60:	bne	11a44 <sprintf@plt+0x1b8>
   11a64:	pop	{r4, r5, fp, pc}
   11a68:	ldr	r0, [r1, #4]
   11a6c:	movw	r1, #43368	; 0xa968
   11a70:	movt	r1, #2
   11a74:	ldrb	r0, [r0]
   11a78:	ldr	r1, [r1, r0, lsl #2]
   11a7c:	cmp	r1, #0
   11a80:	popeq	{r4, r5, fp, pc}
   11a84:	pop	{r4, r5, fp, lr}
   11a88:	bx	r1
   11a8c:	push	{r4, sl, fp, lr}
   11a90:	add	fp, sp, #8
   11a94:	cmp	r0, #2
   11a98:	bgt	11ab4 <sprintf@plt+0x228>
   11a9c:	movw	r1, #35454	; 0x8a7e
   11aa0:	mov	r2, r0
   11aa4:	movt	r1, #1
   11aa8:	mov	r0, #67	; 0x43
   11aac:	pop	{r4, sl, fp, lr}
   11ab0:	b	12528 <sprintf@plt+0xc9c>
   11ab4:	ldr	r0, [r1, #4]
   11ab8:	mov	r4, r1
   11abc:	mov	r1, #0
   11ac0:	mov	r2, #16
   11ac4:	bl	11634 <strtoull@plt>
   11ac8:	cmp	r1, #0
   11acc:	beq	11ae8 <sprintf@plt+0x25c>
   11ad0:	ldr	r2, [r4, #4]
   11ad4:	movw	r1, #35529	; 0x8ac9
   11ad8:	movt	r1, #1
   11adc:	mov	r0, #67	; 0x43
   11ae0:	pop	{r4, sl, fp, lr}
   11ae4:	b	12528 <sprintf@plt+0xc9c>
   11ae8:	ldr	r1, [r4, #8]
   11aec:	movw	r2, #42344	; 0xa568
   11af0:	movt	r2, #2
   11af4:	ldrb	r1, [r1]
   11af8:	ldr	r2, [r2, r1, lsl #2]
   11afc:	cmp	r2, #0
   11b00:	popeq	{r4, sl, fp, pc}
   11b04:	pop	{r4, sl, fp, lr}
   11b08:	bx	r2
   11b0c:	push	{fp, lr}
   11b10:	mov	fp, sp
   11b14:	sub	sp, sp, #160	; 0xa0
   11b18:	add	r4, sp, #20
   11b1c:	mov	r0, #1
   11b20:	mov	r6, #0
   11b24:	add	r5, r4, #4
   11b28:	str	r0, [sp, #20]
   11b2c:	str	r6, [sp, #152]	; 0x98
   11b30:	mov	r0, r5
   11b34:	bl	114a8 <sigemptyset@plt>
   11b38:	mov	r0, r5
   11b3c:	mov	r1, #13
   11b40:	bl	116f4 <sigaddset@plt>
   11b44:	mov	r0, r5
   11b48:	mov	r1, #14
   11b4c:	bl	116f4 <sigaddset@plt>
   11b50:	mov	r0, r5
   11b54:	mov	r1, #5
   11b58:	bl	116f4 <sigaddset@plt>
   11b5c:	mov	r0, r5
   11b60:	mov	r1, #28
   11b64:	bl	116f4 <sigaddset@plt>
   11b68:	mov	r0, #28
   11b6c:	mov	r1, r4
   11b70:	mov	r2, #0
   11b74:	bl	11790 <sigaction@plt>
   11b78:	mov	r0, #13
   11b7c:	mov	r1, r4
   11b80:	mov	r2, #0
   11b84:	bl	11790 <sigaction@plt>
   11b88:	mov	r0, #5
   11b8c:	mov	r1, r4
   11b90:	mov	r2, #0
   11b94:	bl	11790 <sigaction@plt>
   11b98:	movw	r0, #7604	; 0x1db4
   11b9c:	mov	r1, r4
   11ba0:	mov	r2, #0
   11ba4:	movt	r0, #1
   11ba8:	str	r0, [sp, #20]
   11bac:	mov	r0, #14
   11bb0:	bl	11790 <sigaction@plt>
   11bb4:	mov	r0, #256	; 0x100
   11bb8:	movw	r1, #7588	; 0x1da4
   11bbc:	mov	r2, #0
   11bc0:	mov	r3, #0
   11bc4:	str	r6, [sp]
   11bc8:	str	r0, [sp, #4]
   11bcc:	str	r0, [sp, #8]
   11bd0:	str	r0, [sp, #12]
   11bd4:	movw	r0, #7448	; 0x1d18
   11bd8:	movt	r1, #1
   11bdc:	movt	r0, #1
   11be0:	bl	115bc <rb_helper_child@plt>
   11be4:	movw	r4, #44880	; 0xaf50
   11be8:	cmp	r0, #0
   11bec:	movt	r4, #2
   11bf0:	str	r0, [r4]
   11bf4:	bne	11c20 <sprintf@plt+0x394>
   11bf8:	movw	r0, #44872	; 0xaf48
   11bfc:	mov	r1, #46	; 0x2e
   11c00:	mov	r2, #1
   11c04:	movt	r0, #2
   11c08:	ldr	r3, [r0]
   11c0c:	movw	r0, #35384	; 0x8a38
   11c10:	movt	r0, #1
   11c14:	bl	11730 <fwrite@plt>
   11c18:	mov	r0, #1
   11c1c:	bl	11874 <exit@plt>
   11c20:	bl	11778 <rb_set_time@plt>
   11c24:	bl	11c68 <sprintf@plt+0x3dc>
   11c28:	movw	r0, #35431	; 0x8a67
   11c2c:	movw	r1, #5744	; 0x1670
   11c30:	movt	r0, #1
   11c34:	movt	r1, #1
   11c38:	bl	117c0 <rb_dictionary_create@plt>
   11c3c:	movw	r1, #61816	; 0xf178
   11c40:	movt	r1, #2
   11c44:	str	r0, [r1]
   11c48:	bl	13564 <sprintf@plt+0x1cd8>
   11c4c:	bl	12684 <sprintf@plt+0xdf8>
   11c50:	mov	r0, #0
   11c54:	mov	r1, #1
   11c58:	bl	1173c <rb_init_prng@plt>
   11c5c:	ldr	r0, [r4]
   11c60:	mov	r1, #0
   11c64:	bl	114c0 <rb_helper_loop@plt>
   11c68:	push	{r4, r5, fp, lr}
   11c6c:	add	fp, sp, #8
   11c70:	sub	sp, sp, #144	; 0x90
   11c74:	mov	r0, #1
   11c78:	add	r4, sp, #4
   11c7c:	str	r0, [sp, #4]
   11c80:	mov	r0, #0
   11c84:	add	r5, r4, #4
   11c88:	str	r0, [sp, #136]	; 0x88
   11c8c:	mov	r0, r5
   11c90:	bl	114a8 <sigemptyset@plt>
   11c94:	mov	r0, r5
   11c98:	mov	r1, #13
   11c9c:	bl	116f4 <sigaddset@plt>
   11ca0:	mov	r0, r5
   11ca4:	mov	r1, #14
   11ca8:	bl	116f4 <sigaddset@plt>
   11cac:	mov	r0, r5
   11cb0:	mov	r1, #5
   11cb4:	bl	116f4 <sigaddset@plt>
   11cb8:	mov	r0, r5
   11cbc:	mov	r1, #28
   11cc0:	bl	116f4 <sigaddset@plt>
   11cc4:	mov	r0, #28
   11cc8:	mov	r1, r4
   11ccc:	mov	r2, #0
   11cd0:	bl	11790 <sigaction@plt>
   11cd4:	mov	r0, #13
   11cd8:	mov	r1, r4
   11cdc:	mov	r2, #0
   11ce0:	bl	11790 <sigaction@plt>
   11ce4:	mov	r0, #5
   11ce8:	mov	r1, r4
   11cec:	mov	r2, #0
   11cf0:	bl	11790 <sigaction@plt>
   11cf4:	movw	r0, #7604	; 0x1db4
   11cf8:	mov	r1, r4
   11cfc:	mov	r2, #0
   11d00:	movt	r0, #1
   11d04:	str	r0, [sp, #4]
   11d08:	mov	r0, #14
   11d0c:	bl	11790 <sigaction@plt>
   11d10:	sub	sp, fp, #8
   11d14:	pop	{r4, r5, fp, pc}
   11d18:	push	{r4, r5, r6, r7, fp, lr}
   11d1c:	add	fp, sp, #16
   11d20:	movw	r1, #44928	; 0xaf80
   11d24:	mov	r2, #16384	; 0x4000
   11d28:	mov	r4, r0
   11d2c:	movt	r1, #2
   11d30:	bl	1179c <rb_helper_read@plt>
   11d34:	cmp	r0, #1
   11d38:	poplt	{r4, r5, r6, r7, fp, pc}
   11d3c:	movw	r5, #44928	; 0xaf80
   11d40:	movw	r6, #44884	; 0xaf54
   11d44:	movw	r7, #41320	; 0xa168
   11d48:	movt	r5, #2
   11d4c:	movt	r6, #2
   11d50:	movt	r7, #2
   11d54:	mov	r0, r5
   11d58:	mov	r1, r6
   11d5c:	mov	r2, #10
   11d60:	bl	11658 <rb_string_to_array@plt>
   11d64:	cmp	r0, #1
   11d68:	blt	11d88 <sprintf@plt+0x4fc>
   11d6c:	ldr	r1, [r6]
   11d70:	ldrb	r1, [r1]
   11d74:	ldr	r2, [r7, r1, lsl #2]
   11d78:	cmp	r2, #0
   11d7c:	beq	11d88 <sprintf@plt+0x4fc>
   11d80:	mov	r1, r6
   11d84:	blx	r2
   11d88:	mov	r0, r4
   11d8c:	mov	r1, r5
   11d90:	mov	r2, #16384	; 0x4000
   11d94:	bl	1179c <rb_helper_read@plt>
   11d98:	cmp	r0, #0
   11d9c:	bgt	11d54 <sprintf@plt+0x4c8>
   11da0:	pop	{r4, r5, r6, r7, fp, pc}
   11da4:	push	{fp, lr}
   11da8:	mov	fp, sp
   11dac:	mov	r0, #1
   11db0:	bl	11874 <exit@plt>
   11db4:	bx	lr
   11db8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11dbc:	add	fp, sp, #24
   11dc0:	mov	r6, r1
   11dc4:	mov	r8, r0
   11dc8:	mov	r0, #1
   11dcc:	mov	r1, #160	; 0xa0
   11dd0:	mov	r9, r3
   11dd4:	mov	r7, r2
   11dd8:	mov	r5, #1
   11ddc:	bl	115b0 <calloc@plt>
   11de0:	cmp	r0, #0
   11de4:	beq	11e70 <sprintf@plt+0x5e4>
   11de8:	mov	r4, r0
   11dec:	cmp	r6, #2
   11df0:	beq	11e08 <sprintf@plt+0x57c>
   11df4:	cmp	r6, #10
   11df8:	bne	11e5c <sprintf@plt+0x5d0>
   11dfc:	mov	r5, #28
   11e00:	mov	r0, #54	; 0x36
   11e04:	b	11e0c <sprintf@plt+0x580>
   11e08:	mov	r0, #52	; 0x34
   11e0c:	str	r0, [r4, #8]
   11e10:	movw	r0, #61312	; 0xef80
   11e14:	movt	r0, #2
   11e18:	ldrd	r2, [r0]
   11e1c:	adds	r6, r2, #1
   11e20:	adc	r1, r3, #0
   11e24:	str	r6, [r0]
   11e28:	str	r1, [r0, #4]
   11e2c:	add	r0, r4, #144	; 0x90
   11e30:	mov	r1, r4
   11e34:	stm	r0, {r2, r3, r7, r9}
   11e38:	movw	r0, #7796	; 0x1e74
   11e3c:	mov	r2, r5
   11e40:	movt	r0, #1
   11e44:	str	r0, [r4, #4]
   11e48:	mov	r0, r8
   11e4c:	str	r4, [r4]
   11e50:	bl	136dc <sprintf@plt+0x1e50>
   11e54:	mov	r0, r4
   11e58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e5c:	mov	r0, r4
   11e60:	bl	1164c <free@plt>
   11e64:	mov	r4, #0
   11e68:	mov	r0, r4
   11e6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e70:	bl	11754 <rb_outofmemory@plt>
   11e74:	push	{r4, r5, fp, lr}
   11e78:	add	fp, sp, #8
   11e7c:	sub	sp, sp, #56	; 0x38
   11e80:	mov	r4, r0
   11e84:	mov	r0, sp
   11e88:	vmov.i32	q8, #0	; 0x00000000
   11e8c:	add	r2, r0, #33	; 0x21
   11e90:	cmp	r4, #0
   11e94:	vst1.8	{d16-d17}, [r2]
   11e98:	add	r2, r0, #17
   11e9c:	orr	r0, r0, #1
   11ea0:	vst1.8	{d16-d17}, [r0]
   11ea4:	mov	r0, #0
   11ea8:	vst1.8	{d16-d17}, [r2]
   11eac:	str	r0, [sp, #49]	; 0x31
   11eb0:	mov	r0, #42	; 0x2a
   11eb4:	strb	r0, [sp]
   11eb8:	beq	11f8c <sprintf@plt+0x700>
   11ebc:	cmp	r1, #0
   11ec0:	beq	11f54 <sprintf@plt+0x6c8>
   11ec4:	ldr	r2, [r4, #8]
   11ec8:	cmp	r2, #54	; 0x36
   11ecc:	beq	11f08 <sprintf@plt+0x67c>
   11ed0:	cmp	r2, #52	; 0x34
   11ed4:	bne	11fa4 <sprintf@plt+0x718>
   11ed8:	ldrh	r0, [r1, #4]!
   11edc:	cmp	r0, #2
   11ee0:	bne	11f54 <sprintf@plt+0x6c8>
   11ee4:	mov	r2, sp
   11ee8:	mov	r0, r1
   11eec:	mov	r1, r2
   11ef0:	mov	r2, #53	; 0x35
   11ef4:	bl	117a8 <rb_inet_ntop_sock@plt>
   11ef8:	ldr	r5, [r4, #152]	; 0x98
   11efc:	cmp	r5, #0
   11f00:	bne	11f60 <sprintf@plt+0x6d4>
   11f04:	b	11f7c <sprintf@plt+0x6f0>
   11f08:	ldrh	r0, [r1, #4]!
   11f0c:	cmp	r0, #10
   11f10:	bne	11f54 <sprintf@plt+0x6c8>
   11f14:	mov	r5, sp
   11f18:	mov	r0, r1
   11f1c:	mov	r2, #53	; 0x35
   11f20:	mov	r1, r5
   11f24:	bl	117a8 <rb_inet_ntop_sock@plt>
   11f28:	ldrb	r0, [sp]
   11f2c:	cmp	r0, #58	; 0x3a
   11f30:	bne	11f54 <sprintf@plt+0x6c8>
   11f34:	mov	r0, r5
   11f38:	bl	116a0 <strlen@plt>
   11f3c:	mov	r2, r0
   11f40:	orr	r0, r5, #1
   11f44:	mov	r1, r5
   11f48:	bl	117cc <memmove@plt>
   11f4c:	mov	r0, #48	; 0x30
   11f50:	strb	r0, [sp]
   11f54:	ldr	r5, [r4, #152]	; 0x98
   11f58:	cmp	r5, #0
   11f5c:	beq	11f7c <sprintf@plt+0x6f0>
   11f60:	ldrb	r0, [sp]
   11f64:	ldr	r2, [r4, #8]
   11f68:	ldr	r3, [r4, #156]	; 0x9c
   11f6c:	subs	r1, r0, #42	; 0x2a
   11f70:	mov	r0, sp
   11f74:	movwne	r1, #1
   11f78:	blx	r5
   11f7c:	mov	r0, r4
   11f80:	bl	1164c <free@plt>
   11f84:	sub	sp, fp, #8
   11f88:	pop	{r4, r5, fp, pc}
   11f8c:	movw	r1, #35909	; 0x8c45
   11f90:	mov	r0, #67	; 0x43
   11f94:	movt	r1, #1
   11f98:	bl	12528 <sprintf@plt+0xc9c>
   11f9c:	mov	r0, #2
   11fa0:	bl	11874 <exit@plt>
   11fa4:	movw	r1, #35953	; 0x8c71
   11fa8:	mov	r0, #67	; 0x43
   11fac:	movt	r1, #1
   11fb0:	bl	12528 <sprintf@plt+0xc9c>
   11fb4:	mov	r0, #2
   11fb8:	bl	11874 <exit@plt>
   11fbc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11fc0:	add	fp, sp, #24
   11fc4:	mov	r6, r1
   11fc8:	mov	r5, r0
   11fcc:	mov	r0, #1
   11fd0:	mov	r1, #160	; 0xa0
   11fd4:	mov	r8, r2
   11fd8:	bl	115b0 <calloc@plt>
   11fdc:	cmp	r0, #0
   11fe0:	beq	1207c <sprintf@plt+0x7f0>
   11fe4:	add	r7, r0, #12
   11fe8:	mov	r4, r0
   11fec:	mov	r0, r5
   11ff0:	mov	r1, r7
   11ff4:	bl	11694 <rb_inet_pton_sock@plt>
   11ff8:	cmp	r0, #0
   11ffc:	beq	1201c <sprintf@plt+0x790>
   12000:	ldrh	r0, [r7]
   12004:	cmp	r0, #2
   12008:	beq	12030 <sprintf@plt+0x7a4>
   1200c:	cmp	r0, #10
   12010:	bne	1201c <sprintf@plt+0x790>
   12014:	mov	r0, #83	; 0x53
   12018:	b	12034 <sprintf@plt+0x7a8>
   1201c:	mov	r0, r4
   12020:	bl	1164c <free@plt>
   12024:	mov	r4, #0
   12028:	mov	r0, r4
   1202c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12030:	mov	r0, #82	; 0x52
   12034:	str	r0, [r4, #8]
   12038:	movw	r0, #61312	; 0xef80
   1203c:	movt	r0, #2
   12040:	ldrd	r2, [r0]
   12044:	adds	r1, r2, #1
   12048:	adc	r5, r3, #0
   1204c:	stm	r0, {r1, r5}
   12050:	add	r0, r4, #144	; 0x90
   12054:	mov	r1, r4
   12058:	stm	r0, {r2, r3, r6, r8}
   1205c:	movw	r0, #8320	; 0x2080
   12060:	movt	r0, #1
   12064:	str	r0, [r4, #4]
   12068:	mov	r0, r7
   1206c:	str	r4, [r4]
   12070:	bl	137f8 <sprintf@plt+0x1f6c>
   12074:	mov	r0, r4
   12078:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1207c:	bl	11754 <rb_outofmemory@plt>
   12080:	push	{r4, r5, r6, sl, fp, lr}
   12084:	add	fp, sp, #16
   12088:	cmp	r0, #0
   1208c:	beq	12128 <sprintf@plt+0x89c>
   12090:	mov	r6, r1
   12094:	mov	r4, r0
   12098:	mov	r5, #0
   1209c:	cmp	r1, #0
   120a0:	beq	120f4 <sprintf@plt+0x868>
   120a4:	ldr	r2, [r4, #8]
   120a8:	cmp	r2, #83	; 0x53
   120ac:	beq	120d8 <sprintf@plt+0x84c>
   120b0:	cmp	r2, #82	; 0x52
   120b4:	bne	12140 <sprintf@plt+0x8b4>
   120b8:	ldr	r0, [r6, #8]
   120bc:	ldr	r1, [r4, #16]
   120c0:	cmp	r1, r0
   120c4:	ldreq	r5, [r6]
   120c8:	ldr	r6, [r4, #152]	; 0x98
   120cc:	cmp	r6, #0
   120d0:	bne	12100 <sprintf@plt+0x874>
   120d4:	b	1211c <sprintf@plt+0x890>
   120d8:	add	r0, r4, #20
   120dc:	add	r1, r6, #12
   120e0:	mov	r2, #16
   120e4:	bl	11514 <memcmp@plt>
   120e8:	cmp	r0, #0
   120ec:	bne	120f4 <sprintf@plt+0x868>
   120f0:	ldr	r5, [r6]
   120f4:	ldr	r6, [r4, #152]	; 0x98
   120f8:	cmp	r6, #0
   120fc:	beq	1211c <sprintf@plt+0x890>
   12100:	ldr	r2, [r4, #8]
   12104:	ldr	r3, [r4, #156]	; 0x9c
   12108:	cmp	r5, #0
   1210c:	mov	r1, r5
   12110:	mov	r0, r5
   12114:	movwne	r1, #1
   12118:	blx	r6
   1211c:	mov	r0, r4
   12120:	pop	{r4, r5, r6, sl, fp, lr}
   12124:	b	1164c <free@plt>
   12128:	movw	r1, #36004	; 0x8ca4
   1212c:	mov	r0, #67	; 0x43
   12130:	movt	r1, #1
   12134:	bl	12528 <sprintf@plt+0xc9c>
   12138:	mov	r0, #2
   1213c:	bl	11874 <exit@plt>
   12140:	movw	r1, #36054	; 0x8cd6
   12144:	mov	r0, #67	; 0x43
   12148:	movt	r1, #1
   1214c:	bl	12528 <sprintf@plt+0xc9c>
   12150:	mov	r0, #2
   12154:	bl	11874 <exit@plt>
   12158:	mov	r1, #0
   1215c:	str	r1, [r0, #152]	; 0x98
   12160:	str	r1, [r0, #156]	; 0x9c
   12164:	bx	lr
   12168:	push	{r4, r5, r6, r7, fp, lr}
   1216c:	add	fp, sp, #16
   12170:	ldr	r6, [r1, #4]
   12174:	mov	r5, r1
   12178:	mov	r0, r6
   1217c:	bl	116a0 <strlen@plt>
   12180:	add	r0, r0, #1
   12184:	bl	11784 <malloc@plt>
   12188:	cmp	r0, #0
   1218c:	beq	122d8 <sprintf@plt+0xa4c>
   12190:	mov	r1, r6
   12194:	mov	r4, r0
   12198:	bl	11700 <strcpy@plt>
   1219c:	ldr	r0, [r5, #8]
   121a0:	ldr	r5, [r5, #12]
   121a4:	ldrb	r2, [r0]
   121a8:	sub	r0, r2, #82	; 0x52
   121ac:	cmp	r0, #2
   121b0:	bcc	12234 <sprintf@plt+0x9a8>
   121b4:	cmp	r2, #54	; 0x36
   121b8:	beq	12268 <sprintf@plt+0x9dc>
   121bc:	cmp	r2, #52	; 0x34
   121c0:	bne	122dc <sprintf@plt+0xa50>
   121c4:	mov	r0, #1
   121c8:	mov	r1, #160	; 0xa0
   121cc:	bl	115b0 <calloc@plt>
   121d0:	cmp	r0, #0
   121d4:	beq	122d8 <sprintf@plt+0xa4c>
   121d8:	mov	r1, r0
   121dc:	mov	r0, #52	; 0x34
   121e0:	str	r0, [r1, #8]
   121e4:	movw	r0, #61312	; 0xef80
   121e8:	movt	r0, #2
   121ec:	ldrd	r2, [r0]
   121f0:	adds	r6, r2, #1
   121f4:	str	r2, [r1, #144]	; 0x90
   121f8:	str	r3, [r1, #148]	; 0x94
   121fc:	mov	r2, #1
   12200:	adc	r7, r3, #0
   12204:	strd	r6, [r0]
   12208:	movw	r0, #8948	; 0x22f4
   1220c:	movt	r0, #1
   12210:	str	r0, [r1, #152]	; 0x98
   12214:	movw	r0, #7796	; 0x1e74
   12218:	str	r4, [r1, #156]	; 0x9c
   1221c:	movt	r0, #1
   12220:	str	r0, [r1, #4]
   12224:	str	r1, [r1]
   12228:	mov	r0, r5
   1222c:	pop	{r4, r5, r6, r7, fp, lr}
   12230:	b	136dc <sprintf@plt+0x1e50>
   12234:	movw	r1, #8948	; 0x22f4
   12238:	mov	r0, r5
   1223c:	mov	r2, r4
   12240:	movt	r1, #1
   12244:	bl	11fbc <sprintf@plt+0x730>
   12248:	cmp	r0, #0
   1224c:	popne	{r4, r5, r6, r7, fp, pc}
   12250:	movw	r1, #36111	; 0x8d0f
   12254:	mov	r0, #67	; 0x43
   12258:	movt	r1, #1
   1225c:	bl	12528 <sprintf@plt+0xc9c>
   12260:	mov	r0, #2
   12264:	bl	11874 <exit@plt>
   12268:	mov	r0, #1
   1226c:	mov	r1, #160	; 0xa0
   12270:	bl	115b0 <calloc@plt>
   12274:	cmp	r0, #0
   12278:	beq	122d8 <sprintf@plt+0xa4c>
   1227c:	mov	r1, r0
   12280:	mov	r0, #54	; 0x36
   12284:	str	r0, [r1, #8]
   12288:	movw	r0, #61312	; 0xef80
   1228c:	movt	r0, #2
   12290:	ldrd	r2, [r0]
   12294:	adds	r6, r2, #1
   12298:	str	r2, [r1, #144]	; 0x90
   1229c:	str	r3, [r1, #148]	; 0x94
   122a0:	mov	r2, #28
   122a4:	adc	r7, r3, #0
   122a8:	strd	r6, [r0]
   122ac:	movw	r0, #8948	; 0x22f4
   122b0:	movt	r0, #1
   122b4:	str	r0, [r1, #152]	; 0x98
   122b8:	movw	r0, #7796	; 0x1e74
   122bc:	str	r4, [r1, #156]	; 0x9c
   122c0:	movt	r0, #1
   122c4:	str	r0, [r1, #4]
   122c8:	str	r1, [r1]
   122cc:	mov	r0, r5
   122d0:	pop	{r4, r5, r6, r7, fp, lr}
   122d4:	b	136dc <sprintf@plt+0x1e50>
   122d8:	bl	11754 <rb_outofmemory@plt>
   122dc:	movw	r1, #35781	; 0x8bc5
   122e0:	mov	r0, #67	; 0x43
   122e4:	movt	r1, #1
   122e8:	bl	12528 <sprintf@plt+0xc9c>
   122ec:	mov	r0, #2
   122f0:	bl	11874 <exit@plt>
   122f4:	push	{r4, sl, fp, lr}
   122f8:	add	fp, sp, #8
   122fc:	sub	sp, sp, #8
   12300:	cmp	r2, #0
   12304:	movne	r4, r3
   12308:	cmpne	r3, #0
   1230c:	bne	12328 <sprintf@plt+0xa9c>
   12310:	movw	r1, #36111	; 0x8d0f
   12314:	mov	r0, #67	; 0x43
   12318:	movt	r1, #1
   1231c:	bl	12528 <sprintf@plt+0xc9c>
   12320:	mov	r0, #2
   12324:	bl	11874 <exit@plt>
   12328:	mov	r3, r2
   1232c:	movw	r2, #44880	; 0xaf50
   12330:	cmp	r0, #0
   12334:	movt	r2, #2
   12338:	cmpne	r1, #0
   1233c:	ldr	r2, [r2]
   12340:	bne	12350 <sprintf@plt+0xac4>
   12344:	movw	r1, #36154	; 0x8d3a
   12348:	movt	r1, #1
   1234c:	b	1235c <sprintf@plt+0xad0>
   12350:	movw	r1, #36166	; 0x8d46
   12354:	str	r0, [sp]
   12358:	movt	r1, #1
   1235c:	mov	r0, r2
   12360:	mov	r2, r4
   12364:	bl	117e4 <rb_helper_write@plt>
   12368:	mov	r0, r4
   1236c:	sub	sp, fp, #8
   12370:	pop	{r4, sl, fp, lr}
   12374:	b	1164c <free@plt>
   12378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1237c:	add	fp, sp, #28
   12380:	sub	sp, sp, #612	; 0x264
   12384:	mov	r5, r0
   12388:	movw	r0, #61408	; 0xefe0
   1238c:	mov	r4, r1
   12390:	movt	r0, #2
   12394:	ldr	r0, [r0]
   12398:	cmp	r0, #0
   1239c:	beq	1248c <sprintf@plt+0xc00>
   123a0:	cmp	r0, #1
   123a4:	blt	12444 <sprintf@plt+0xbb8>
   123a8:	movw	r6, #62112	; 0xf2a0
   123ac:	str	r4, [sp, #8]
   123b0:	movw	r4, #35905	; 0x8c41
   123b4:	mov	r9, #0
   123b8:	add	r7, sp, #15
   123bc:	add	r8, sp, #68	; 0x44
   123c0:	mov	sl, #0
   123c4:	str	r5, [sp, #4]
   123c8:	movt	r6, #2
   123cc:	movt	r4, #1
   123d0:	mov	r0, r6
   123d4:	mov	r1, r7
   123d8:	mov	r2, #53	; 0x35
   123dc:	bl	117a8 <rb_inet_ntop_sock@plt>
   123e0:	ldrb	r0, [sp, #15]
   123e4:	cmp	r0, #0
   123e8:	beq	12464 <sprintf@plt+0xbd8>
   123ec:	mov	r0, r7
   123f0:	bl	116a0 <strlen@plt>
   123f4:	mov	r5, r0
   123f8:	add	r0, r8, r9
   123fc:	rsb	r1, r9, #540	; 0x21c
   12400:	mov	r2, r4
   12404:	mov	r3, r7
   12408:	bl	11814 <snprintf@plt>
   1240c:	movw	r1, #61408	; 0xefe0
   12410:	add	r0, r9, r5
   12414:	add	sl, sl, #1
   12418:	add	r6, r6, #128	; 0x80
   1241c:	movt	r1, #2
   12420:	add	r9, r0, #1
   12424:	ldr	r1, [r1]
   12428:	cmp	sl, r1
   1242c:	blt	123d0 <sprintf@plt+0xb44>
   12430:	ldr	r4, [sp, #8]
   12434:	ldr	r5, [sp, #4]
   12438:	cmp	r9, #0
   1243c:	movne	r1, #0
   12440:	strbne	r1, [r8, r0]
   12444:	movw	r2, #39492	; 0x9a44
   12448:	add	r3, sp, #68	; 0x44
   1244c:	mov	r0, r5
   12450:	mov	r1, r4
   12454:	movt	r2, #1
   12458:	bl	12594 <sprintf@plt+0xd08>
   1245c:	sub	sp, fp, #28
   12460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12464:	movw	r1, #35866	; 0x8c1a
   12468:	mov	r0, #67	; 0x43
   1246c:	movt	r1, #1
   12470:	bl	12528 <sprintf@plt+0xc9c>
   12474:	ldmib	sp, {r0, r1}
   12478:	movw	r2, #35887	; 0x8c2f
   1247c:	movt	r2, #1
   12480:	bl	125fc <sprintf@plt+0xd70>
   12484:	mov	r0, #2
   12488:	bl	11874 <exit@plt>
   1248c:	movw	r1, #35830	; 0x8bf6
   12490:	mov	r0, #67	; 0x43
   12494:	movt	r1, #1
   12498:	bl	12528 <sprintf@plt+0xc9c>
   1249c:	movw	r2, #35852	; 0x8c0c
   124a0:	mov	r0, r5
   124a4:	mov	r1, r4
   124a8:	movt	r2, #1
   124ac:	bl	125fc <sprintf@plt+0xd70>
   124b0:	mov	r0, #2
   124b4:	bl	11874 <exit@plt>
   124b8:	b	13618 <sprintf@plt+0x1d8c>
   124bc:	sub	sp, sp, #8
   124c0:	push	{r4, r5, r6, r7, fp, lr}
   124c4:	add	fp, sp, #16
   124c8:	sub	sp, sp, #520	; 0x208
   124cc:	mov	ip, r1
   124d0:	add	r5, sp, #8
   124d4:	mov	r4, r0
   124d8:	str	r3, [fp, #12]
   124dc:	str	r2, [fp, #8]
   124e0:	add	r3, fp, #8
   124e4:	mov	r1, #512	; 0x200
   124e8:	mov	r0, r5
   124ec:	mov	r2, ip
   124f0:	str	r3, [sp, #4]
   124f4:	bl	1155c <vsnprintf@plt>
   124f8:	movw	r0, #44880	; 0xaf50
   124fc:	movw	r1, #36179	; 0x8d53
   12500:	mov	r2, r4
   12504:	mov	r3, r5
   12508:	movt	r0, #2
   1250c:	movt	r1, #1
   12510:	ldr	r0, [r0]
   12514:	bl	117e4 <rb_helper_write@plt>
   12518:	sub	sp, fp, #16
   1251c:	pop	{r4, r5, r6, r7, fp, lr}
   12520:	add	sp, sp, #8
   12524:	bx	lr
   12528:	sub	sp, sp, #8
   1252c:	push	{r4, r5, r6, r7, fp, lr}
   12530:	add	fp, sp, #16
   12534:	sub	sp, sp, #520	; 0x208
   12538:	mov	ip, r1
   1253c:	add	r5, sp, #8
   12540:	mov	r4, r0
   12544:	str	r3, [fp, #12]
   12548:	str	r2, [fp, #8]
   1254c:	add	r3, fp, #8
   12550:	mov	r1, #512	; 0x200
   12554:	mov	r0, r5
   12558:	mov	r2, ip
   1255c:	str	r3, [sp, #4]
   12560:	bl	1155c <vsnprintf@plt>
   12564:	movw	r0, #44880	; 0xaf50
   12568:	movw	r1, #36188	; 0x8d5c
   1256c:	mov	r2, r4
   12570:	mov	r3, r5
   12574:	movt	r0, #2
   12578:	movt	r1, #1
   1257c:	ldr	r0, [r0]
   12580:	bl	117e4 <rb_helper_write@plt>
   12584:	sub	sp, fp, #16
   12588:	pop	{r4, r5, r6, r7, fp, lr}
   1258c:	add	sp, sp, #8
   12590:	bx	lr
   12594:	sub	sp, sp, #4
   12598:	push	{r4, r5, r6, sl, fp, lr}
   1259c:	add	fp, sp, #16
   125a0:	sub	sp, sp, #524	; 0x20c
   125a4:	add	r6, sp, #12
   125a8:	mov	r4, r1
   125ac:	mov	r5, r0
   125b0:	str	r3, [fp, #8]
   125b4:	add	r3, fp, #8
   125b8:	mov	r1, #512	; 0x200
   125bc:	mov	r0, r6
   125c0:	str	r3, [sp, #8]
   125c4:	bl	1155c <vsnprintf@plt>
   125c8:	movw	r0, #44880	; 0xaf50
   125cc:	movw	r1, #36197	; 0x8d65
   125d0:	mov	r2, r5
   125d4:	mov	r3, r4
   125d8:	str	r6, [sp]
   125dc:	movt	r0, #2
   125e0:	movt	r1, #1
   125e4:	ldr	r0, [r0]
   125e8:	bl	117e4 <rb_helper_write@plt>
   125ec:	sub	sp, fp, #16
   125f0:	pop	{r4, r5, r6, sl, fp, lr}
   125f4:	add	sp, sp, #4
   125f8:	bx	lr
   125fc:	sub	sp, sp, #4
   12600:	push	{r4, r5, r6, sl, fp, lr}
   12604:	add	fp, sp, #16
   12608:	sub	sp, sp, #524	; 0x20c
   1260c:	add	r6, sp, #12
   12610:	mov	r4, r1
   12614:	mov	r5, r0
   12618:	str	r3, [fp, #8]
   1261c:	add	r3, fp, #8
   12620:	mov	r1, #512	; 0x200
   12624:	mov	r0, r6
   12628:	str	r3, [sp, #8]
   1262c:	bl	1155c <vsnprintf@plt>
   12630:	movw	r0, #44880	; 0xaf50
   12634:	movw	r1, #36208	; 0x8d70
   12638:	mov	r2, r5
   1263c:	mov	r3, r4
   12640:	str	r6, [sp]
   12644:	movt	r0, #2
   12648:	movt	r1, #1
   1264c:	ldr	r0, [r0]
   12650:	bl	117e4 <rb_helper_write@plt>
   12654:	sub	sp, fp, #16
   12658:	pop	{r4, r5, r6, sl, fp, lr}
   1265c:	add	sp, sp, #4
   12660:	bx	lr
   12664:	mov	r2, r0
   12668:	movw	r0, #44880	; 0xaf50
   1266c:	mov	r3, r1
   12670:	movw	r1, #36219	; 0x8d7b
   12674:	movt	r0, #2
   12678:	movt	r1, #1
   1267c:	ldr	r0, [r0]
   12680:	b	117e4 <rb_helper_write@plt>
   12684:	push	{fp, lr}
   12688:	mov	fp, sp
   1268c:	movw	r0, #36227	; 0x8d83
   12690:	movw	r1, #9992	; 0x2708
   12694:	movt	r0, #1
   12698:	movt	r1, #1
   1269c:	bl	117c0 <rb_dictionary_create@plt>
   126a0:	movw	r1, #61820	; 0xf17c
   126a4:	mov	r2, #0
   126a8:	mov	r3, #1
   126ac:	movt	r1, #2
   126b0:	str	r0, [r1]
   126b4:	movw	r0, #36248	; 0x8d98
   126b8:	movw	r1, #10000	; 0x2710
   126bc:	movt	r0, #1
   126c0:	movt	r1, #1
   126c4:	bl	114d8 <rb_event_addish@plt>
   126c8:	movw	r1, #61320	; 0xef88
   126cc:	movt	r1, #2
   126d0:	str	r0, [r1]
   126d4:	movw	r0, #44456	; 0xada8
   126d8:	movt	r0, #2
   126dc:	bl	12828 <sprintf@plt+0xf9c>
   126e0:	movw	r0, #44808	; 0xaf08
   126e4:	movt	r0, #2
   126e8:	bl	12828 <sprintf@plt+0xf9c>
   126ec:	movw	r0, #44648	; 0xae68
   126f0:	movt	r0, #2
   126f4:	bl	12828 <sprintf@plt+0xf9c>
   126f8:	movw	r0, #44560	; 0xae10
   126fc:	movt	r0, #2
   12700:	pop	{fp, lr}
   12704:	b	12828 <sprintf@plt+0xf9c>
   12708:	sub	r0, r1, r0
   1270c:	bx	lr
   12710:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12714:	add	fp, sp, #24
   12718:	sub	sp, sp, #8
   1271c:	bl	116ac <rb_current_time@plt>
   12720:	movw	r7, #61820	; 0xf17c
   12724:	mov	r4, r0
   12728:	mov	r5, sp
   1272c:	movt	r7, #2
   12730:	mov	r1, r5
   12734:	ldr	r0, [r7]
   12738:	bl	11688 <rb_dictionary_foreach_start@plt>
   1273c:	ldr	r0, [r7]
   12740:	mov	r1, r5
   12744:	bl	11598 <rb_dictionary_foreach_cur@plt>
   12748:	cmp	r0, #0
   1274c:	beq	12820 <sprintf@plt+0xf94>
   12750:	movw	r8, #61824	; 0xf180
   12754:	mov	r6, r0
   12758:	mov	r9, sp
   1275c:	movt	r8, #2
   12760:	ldr	r0, [r6, #460]	; 0x1cc
   12764:	add	r0, r0, #1
   12768:	str	r0, [r6, #460]	; 0x1cc
   1276c:	ldr	r5, [r8]
   12770:	cmp	r5, #0
   12774:	beq	127cc <sprintf@plt+0xf40>
   12778:	ldr	r0, [r5]
   1277c:	ldr	r1, [r6, #464]	; 0x1d0
   12780:	ldr	r2, [r0, #12]
   12784:	add	r1, r1, r2, lsl #4
   12788:	ldr	r2, [r1, #12]
   1278c:	cmp	r2, #1
   12790:	bne	127bc <sprintf@plt+0xf30>
   12794:	ldr	r1, [r1, #4]
   12798:	cmp	r1, r4
   1279c:	bge	127bc <sprintf@plt+0xf30>
   127a0:	cmp	r1, #1
   127a4:	blt	127bc <sprintf@plt+0xf30>
   127a8:	ldr	r1, [r0, #40]	; 0x28
   127ac:	cmp	r1, #0
   127b0:	beq	127bc <sprintf@plt+0xf30>
   127b4:	mov	r0, r6
   127b8:	blx	r1
   127bc:	ldr	r5, [r5, #8]
   127c0:	cmp	r5, #0
   127c4:	bne	12778 <sprintf@plt+0xeec>
   127c8:	ldr	r0, [r6, #460]	; 0x1cc
   127cc:	subs	r0, r0, #1
   127d0:	str	r0, [r6, #460]	; 0x1cc
   127d4:	bne	127fc <sprintf@plt+0xf70>
   127d8:	ldr	r1, [r6]
   127dc:	ldr	r0, [r7]
   127e0:	bl	116b8 <rb_dictionary_delete@plt>
   127e4:	ldr	r0, [r6, #464]	; 0x1d0
   127e8:	cmp	r0, #0
   127ec:	beq	127f4 <sprintf@plt+0xf68>
   127f0:	bl	1164c <free@plt>
   127f4:	mov	r0, r6
   127f8:	bl	1164c <free@plt>
   127fc:	ldr	r0, [r7]
   12800:	mov	r1, r9
   12804:	bl	11640 <rb_dictionary_foreach_next@plt>
   12808:	ldr	r0, [r7]
   1280c:	mov	r1, r9
   12810:	bl	11598 <rb_dictionary_foreach_cur@plt>
   12814:	mov	r6, r0
   12818:	cmp	r0, #0
   1281c:	bne	12760 <sprintf@plt+0xed4>
   12820:	sub	sp, fp, #24
   12824:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12828:	push	{r4, r5, r6, sl, fp, lr}
   1282c:	add	fp, sp, #16
   12830:	movw	r1, #61324	; 0xef8c
   12834:	mov	r4, r0
   12838:	movt	r1, #2
   1283c:	ldr	r2, [r1, #12]
   12840:	cmp	r2, #0
   12844:	beq	12930 <sprintf@plt+0x10a4>
   12848:	ldr	r0, [r1, #4]
   1284c:	ldr	r3, [r0]
   12850:	cmp	r0, #0
   12854:	str	r3, [r4, #12]
   12858:	beq	12988 <sprintf@plt+0x10fc>
   1285c:	ldr	r3, [r0, #8]
   12860:	ldr	r5, [r0, #4]
   12864:	sub	r2, r2, #1
   12868:	cmp	r3, #0
   1286c:	streq	r5, [r1, #8]
   12870:	strne	r5, [r3, #4]
   12874:	ldrne	r5, [r0, #4]
   12878:	add	r6, r5, #8
   1287c:	cmp	r5, #0
   12880:	addeq	r6, r1, #4
   12884:	cmp	r5, #0
   12888:	str	r3, [r6]
   1288c:	mov	r6, #0
   12890:	str	r6, [r0, #4]
   12894:	str	r6, [r0, #8]
   12898:	moveq	r0, r3
   1289c:	str	r2, [r1, #12]
   128a0:	bl	116d0 <rb_free_rb_dlink_node@plt>
   128a4:	ldr	r5, [r4, #56]	; 0x38
   128a8:	cmp	r5, #0
   128ac:	ldrne	r1, [r5]
   128b0:	cmpne	r1, #0
   128b4:	beq	128d8 <sprintf@plt+0x104c>
   128b8:	movw	r6, #61816	; 0xf178
   128bc:	movt	r6, #2
   128c0:	ldr	r0, [r6]
   128c4:	mov	r2, r5
   128c8:	bl	1176c <rb_dictionary_add@plt>
   128cc:	ldr	r1, [r5, #12]!
   128d0:	cmp	r1, #0
   128d4:	bne	128c0 <sprintf@plt+0x1034>
   128d8:	ldrb	r0, [r4, #48]	; 0x30
   128dc:	cmp	r0, #0
   128e0:	ldrne	r1, [r4, #52]	; 0x34
   128e4:	movwne	r2, #42344	; 0xa568
   128e8:	movtne	r2, #2
   128ec:	strne	r1, [r2, r0, lsl #2]
   128f0:	ldr	r0, [r4, #24]
   128f4:	cmp	r0, #0
   128f8:	beq	12900 <sprintf@plt+0x1074>
   128fc:	blx	r0
   12900:	mov	r0, #0
   12904:	str	r0, [r4, #4]
   12908:	movw	r0, #61824	; 0xf180
   1290c:	str	r4, [r4]
   12910:	movt	r0, #2
   12914:	ldr	r1, [r0]
   12918:	cmp	r1, #0
   1291c:	str	r1, [r4, #8]
   12920:	beq	12954 <sprintf@plt+0x10c8>
   12924:	add	r1, r1, #4
   12928:	str	r4, [r1]
   1292c:	b	12964 <sprintf@plt+0x10d8>
   12930:	ldr	r0, [r1]
   12934:	cmp	r0, #32
   12938:	cmnne	r0, #1
   1293c:	bne	12978 <sprintf@plt+0x10ec>
   12940:	movw	r1, #36346	; 0x8dfa
   12944:	mov	r0, #87	; 0x57
   12948:	movt	r1, #1
   1294c:	pop	{r4, r5, r6, sl, fp, lr}
   12950:	b	12528 <sprintf@plt+0xc9c>
   12954:	mov	r1, r0
   12958:	ldr	r2, [r1, #4]!
   1295c:	cmp	r2, #0
   12960:	streq	r4, [r1]
   12964:	str	r4, [r0]
   12968:	ldr	r1, [r0, #8]
   1296c:	add	r1, r1, #1
   12970:	str	r1, [r0, #8]
   12974:	pop	{r4, r5, r6, sl, fp, pc}
   12978:	add	r2, r0, #1
   1297c:	str	r2, [r1]
   12980:	str	r0, [r4, #12]
   12984:	b	128a4 <sprintf@plt+0x1018>
   12988:	movw	r0, #36640	; 0x8f20
   1298c:	movw	r1, #36650	; 0x8f2a
   12990:	movw	r3, #36678	; 0x8f46
   12994:	mov	r2, #235	; 0xeb
   12998:	movt	r0, #1
   1299c:	movt	r1, #1
   129a0:	movt	r3, #1
   129a4:	bl	11610 <__assert_fail@plt>
   129a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   129ac:	add	fp, sp, #24
   129b0:	sub	sp, sp, #8
   129b4:	movw	r9, #61820	; 0xf17c
   129b8:	mov	r5, sp
   129bc:	movt	r9, #2
   129c0:	mov	r1, r5
   129c4:	ldr	r0, [r9]
   129c8:	bl	11688 <rb_dictionary_foreach_start@plt>
   129cc:	ldr	r0, [r9]
   129d0:	mov	r1, r5
   129d4:	bl	11598 <rb_dictionary_foreach_cur@plt>
   129d8:	cmp	r0, #0
   129dc:	beq	12a70 <sprintf@plt+0x11e4>
   129e0:	movw	r8, #36271	; 0x8daf
   129e4:	movw	r5, #36279	; 0x8db7
   129e8:	mov	r7, r0
   129ec:	mov	r6, sp
   129f0:	movt	r8, #1
   129f4:	movt	r5, #1
   129f8:	ldr	r0, [r7, #460]	; 0x1cc
   129fc:	mvn	r1, #0
   12a00:	mov	r2, r8
   12a04:	mov	r3, r5
   12a08:	add	r0, r0, #1
   12a0c:	str	r0, [r7, #460]	; 0x1cc
   12a10:	mov	r0, r7
   12a14:	bl	12b14 <sprintf@plt+0x1288>
   12a18:	ldr	r0, [r7, #460]	; 0x1cc
   12a1c:	subs	r0, r0, #1
   12a20:	str	r0, [r7, #460]	; 0x1cc
   12a24:	bne	12a4c <sprintf@plt+0x11c0>
   12a28:	ldr	r1, [r7]
   12a2c:	ldr	r0, [r9]
   12a30:	bl	116b8 <rb_dictionary_delete@plt>
   12a34:	ldr	r0, [r7, #464]	; 0x1d0
   12a38:	cmp	r0, #0
   12a3c:	beq	12a44 <sprintf@plt+0x11b8>
   12a40:	bl	1164c <free@plt>
   12a44:	mov	r0, r7
   12a48:	bl	1164c <free@plt>
   12a4c:	ldr	r0, [r9]
   12a50:	mov	r1, r6
   12a54:	bl	11640 <rb_dictionary_foreach_next@plt>
   12a58:	ldr	r0, [r9]
   12a5c:	mov	r1, r6
   12a60:	bl	11598 <rb_dictionary_foreach_cur@plt>
   12a64:	mov	r7, r0
   12a68:	cmp	r0, #0
   12a6c:	bne	129f8 <sprintf@plt+0x116c>
   12a70:	movw	r5, #61824	; 0xf180
   12a74:	movt	r5, #2
   12a78:	ldr	r4, [r5]
   12a7c:	cmp	r4, #0
   12a80:	beq	12aec <sprintf@plt+0x1260>
   12a84:	mov	r7, #0
   12a88:	ldr	r0, [r4]
   12a8c:	mov	r6, r4
   12a90:	ldr	r4, [r4, #8]
   12a94:	ldr	r0, [r0, #28]
   12a98:	cmp	r0, #0
   12a9c:	beq	12aa4 <sprintf@plt+0x1218>
   12aa0:	blx	r0
   12aa4:	ldr	r0, [r6, #8]!
   12aa8:	mov	r3, r5
   12aac:	mov	r1, r6
   12ab0:	cmp	r0, #0
   12ab4:	ldr	r2, [r1, #-4]!
   12ab8:	streq	r2, [r5, #4]
   12abc:	strne	r2, [r0, #4]
   12ac0:	ldrne	r2, [r1]
   12ac4:	cmp	r2, #0
   12ac8:	addne	r3, r2, #8
   12acc:	cmp	r4, #0
   12ad0:	str	r0, [r3]
   12ad4:	str	r7, [r1]
   12ad8:	str	r7, [r6]
   12adc:	ldr	r0, [r5, #8]
   12ae0:	sub	r0, r0, #1
   12ae4:	str	r0, [r5, #8]
   12ae8:	bne	12a88 <sprintf@plt+0x11fc>
   12aec:	ldr	r0, [r9]
   12af0:	mov	r1, #0
   12af4:	mov	r2, #0
   12af8:	bl	1170c <rb_dictionary_destroy@plt>
   12afc:	movw	r0, #61320	; 0xef88
   12b00:	movt	r0, #2
   12b04:	ldr	r0, [r0]
   12b08:	bl	1152c <rb_event_delete@plt>
   12b0c:	sub	sp, fp, #24
   12b10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12b14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b18:	add	fp, sp, #24
   12b1c:	sub	sp, sp, #536	; 0x218
   12b20:	mov	r6, r3
   12b24:	add	r8, sp, #24
   12b28:	mov	r7, r2
   12b2c:	mov	r5, r1
   12b30:	mov	r4, r0
   12b34:	add	r3, fp, #8
   12b38:	mov	r1, #512	; 0x200
   12b3c:	mov	r0, r8
   12b40:	mov	r2, r6
   12b44:	str	r3, [sp, #20]
   12b48:	bl	1155c <vsnprintf@plt>
   12b4c:	movw	r0, #44880	; 0xaf50
   12b50:	ldr	r2, [r4]
   12b54:	cmn	r5, #1
   12b58:	movt	r0, #2
   12b5c:	ldr	r0, [r0]
   12b60:	beq	12bcc <sprintf@plt+0x1340>
   12b64:	ldr	r1, [r4, #464]	; 0x1d0
   12b68:	cmp	r7, #0
   12b6c:	add	r6, r4, #440	; 0x1b8
   12b70:	ldr	r1, [r1, r5, lsl #4]
   12b74:	ldrb	r3, [r1, #20]
   12b78:	movw	r1, #36164	; 0x8d44
   12b7c:	movt	r1, #1
   12b80:	movne	r1, r7
   12b84:	add	r7, r4, #376	; 0x178
   12b88:	stm	sp, {r6, r7}
   12b8c:	str	r1, [sp, #8]
   12b90:	movw	r1, #36392	; 0x8e28
   12b94:	str	r8, [sp, #12]
   12b98:	movt	r1, #1
   12b9c:	bl	117e4 <rb_helper_write@plt>
   12ba0:	ldr	r0, [r4, #464]	; 0x1d0
   12ba4:	mov	r1, #2
   12ba8:	add	r0, r0, r5, lsl #4
   12bac:	str	r1, [r0, #12]
   12bb0:	ldr	r0, [r4, #456]	; 0x1c8
   12bb4:	sub	r0, r0, #1
   12bb8:	str	r0, [r4, #456]	; 0x1c8
   12bbc:	ldrb	r0, [r4, #452]	; 0x1c4
   12bc0:	cmp	r0, #0
   12bc4:	bne	12c7c <sprintf@plt+0x13f0>
   12bc8:	b	12c10 <sprintf@plt+0x1384>
   12bcc:	movw	r1, #36164	; 0x8d44
   12bd0:	cmp	r7, #0
   12bd4:	add	r3, r4, #376	; 0x178
   12bd8:	str	r8, [sp, #12]
   12bdc:	movt	r1, #1
   12be0:	str	r3, [sp, #4]
   12be4:	mov	r3, #42	; 0x2a
   12be8:	movne	r1, r7
   12bec:	add	r7, r4, #440	; 0x1b8
   12bf0:	str	r1, [sp, #8]
   12bf4:	movw	r1, #36392	; 0x8e28
   12bf8:	str	r7, [sp]
   12bfc:	movt	r1, #1
   12c00:	bl	117e4 <rb_helper_write@plt>
   12c04:	ldrb	r0, [r4, #452]	; 0x1c4
   12c08:	cmp	r0, #0
   12c0c:	bne	12c7c <sprintf@plt+0x13f0>
   12c10:	mov	r0, #1
   12c14:	strb	r0, [r4, #452]	; 0x1c4
   12c18:	ldr	r0, [r4, #456]	; 0x1c8
   12c1c:	cmp	r0, #0
   12c20:	beq	12c7c <sprintf@plt+0x13f0>
   12c24:	movw	r0, #61824	; 0xf180
   12c28:	movt	r0, #2
   12c2c:	ldr	r5, [r0]
   12c30:	cmp	r5, #0
   12c34:	bne	12c48 <sprintf@plt+0x13bc>
   12c38:	b	12c7c <sprintf@plt+0x13f0>
   12c3c:	ldr	r5, [r5, #8]
   12c40:	cmp	r5, #0
   12c44:	beq	12c7c <sprintf@plt+0x13f0>
   12c48:	ldr	r0, [r5]
   12c4c:	ldr	r1, [r0, #36]	; 0x24
   12c50:	cmp	r1, #0
   12c54:	beq	12c3c <sprintf@plt+0x13b0>
   12c58:	ldr	r0, [r0, #12]
   12c5c:	ldr	r2, [r4, #464]	; 0x1d0
   12c60:	add	r0, r2, r0, lsl #4
   12c64:	ldr	r0, [r0, #12]
   12c68:	cmp	r0, #1
   12c6c:	bne	12c3c <sprintf@plt+0x13b0>
   12c70:	mov	r0, r4
   12c74:	blx	r1
   12c78:	b	12c3c <sprintf@plt+0x13b0>
   12c7c:	sub	sp, fp, #24
   12c80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12c84:	push	{r4, r5, r6, sl, fp, lr}
   12c88:	add	fp, sp, #16
   12c8c:	mov	r4, r0
   12c90:	ldr	r0, [r0, #56]	; 0x38
   12c94:	cmp	r0, #0
   12c98:	ldrne	r1, [r0]
   12c9c:	cmpne	r1, #0
   12ca0:	beq	12cc4 <sprintf@plt+0x1438>
   12ca4:	movw	r6, #61816	; 0xf178
   12ca8:	add	r5, r0, #12
   12cac:	movt	r6, #2
   12cb0:	ldr	r0, [r6]
   12cb4:	bl	116b8 <rb_dictionary_delete@plt>
   12cb8:	ldr	r1, [r5], #12
   12cbc:	cmp	r1, #0
   12cc0:	bne	12cb0 <sprintf@plt+0x1424>
   12cc4:	ldrb	r0, [r4, #48]	; 0x30
   12cc8:	cmp	r0, #0
   12ccc:	movwne	r1, #42344	; 0xa568
   12cd0:	movne	r2, #0
   12cd4:	movtne	r1, #2
   12cd8:	strne	r2, [r1, r0, lsl #2]
   12cdc:	ldr	r0, [r4, #28]
   12ce0:	cmp	r0, #0
   12ce4:	beq	12cec <sprintf@plt+0x1460>
   12ce8:	blx	r0
   12cec:	ldr	r0, [r4, #8]
   12cf0:	ldr	r1, [r4, #4]
   12cf4:	cmp	r0, #0
   12cf8:	beq	12d08 <sprintf@plt+0x147c>
   12cfc:	str	r1, [r0, #4]
   12d00:	ldr	r1, [r4, #4]
   12d04:	b	12d14 <sprintf@plt+0x1488>
   12d08:	movw	r2, #61824	; 0xf180
   12d0c:	movt	r2, #2
   12d10:	str	r1, [r2, #4]
   12d14:	movw	r2, #61824	; 0xf180
   12d18:	cmp	r1, #0
   12d1c:	movt	r2, #2
   12d20:	mov	r3, r2
   12d24:	addne	r3, r1, #8
   12d28:	str	r0, [r3]
   12d2c:	mov	r0, #0
   12d30:	str	r0, [r4, #4]
   12d34:	str	r0, [r4, #8]
   12d38:	ldr	r0, [r2, #8]
   12d3c:	sub	r0, r0, #1
   12d40:	str	r0, [r2, #8]
   12d44:	ldr	r4, [r4, #12]
   12d48:	bl	11808 <rb_make_rb_dlink_node@plt>
   12d4c:	cmp	r4, #0
   12d50:	beq	12db0 <sprintf@plt+0x1524>
   12d54:	cmp	r0, #0
   12d58:	beq	12dd0 <sprintf@plt+0x1544>
   12d5c:	mov	r1, #0
   12d60:	str	r1, [r0, #4]
   12d64:	movw	r1, #61324	; 0xef8c
   12d68:	str	r4, [r0]
   12d6c:	movt	r1, #2
   12d70:	ldr	r2, [r1, #4]
   12d74:	cmp	r2, #0
   12d78:	str	r2, [r0, #8]
   12d7c:	beq	12d8c <sprintf@plt+0x1500>
   12d80:	add	r2, r2, #4
   12d84:	str	r0, [r2]
   12d88:	b	12d9c <sprintf@plt+0x1510>
   12d8c:	mov	r2, r1
   12d90:	ldr	r3, [r2, #8]!
   12d94:	cmp	r3, #0
   12d98:	streq	r0, [r2]
   12d9c:	str	r0, [r1, #4]
   12da0:	ldr	r0, [r1, #12]
   12da4:	add	r0, r0, #1
   12da8:	str	r0, [r1, #12]
   12dac:	pop	{r4, r5, r6, sl, fp, pc}
   12db0:	movw	r0, #36732	; 0x8f7c
   12db4:	movw	r1, #36650	; 0x8f2a
   12db8:	movw	r3, #36745	; 0x8f89
   12dbc:	mov	r2, #143	; 0x8f
   12dc0:	movt	r0, #1
   12dc4:	movt	r1, #1
   12dc8:	movt	r3, #1
   12dcc:	bl	11610 <__assert_fail@plt>
   12dd0:	movw	r0, #36640	; 0x8f20
   12dd4:	movw	r1, #36650	; 0x8f2a
   12dd8:	movw	r3, #36745	; 0x8f89
   12ddc:	mov	r2, #144	; 0x90
   12de0:	movt	r0, #1
   12de4:	movt	r1, #1
   12de8:	movt	r3, #1
   12dec:	bl	11610 <__assert_fail@plt>
   12df0:	push	{r4, sl, fp, lr}
   12df4:	add	fp, sp, #8
   12df8:	mov	r4, r0
   12dfc:	ldr	r1, [r0]
   12e00:	movw	r0, #61820	; 0xf17c
   12e04:	movt	r0, #2
   12e08:	ldr	r0, [r0]
   12e0c:	bl	116b8 <rb_dictionary_delete@plt>
   12e10:	ldr	r0, [r4, #464]	; 0x1d0
   12e14:	cmp	r0, #0
   12e18:	beq	12e20 <sprintf@plt+0x1594>
   12e1c:	bl	1164c <free@plt>
   12e20:	mov	r0, r4
   12e24:	pop	{r4, sl, fp, lr}
   12e28:	b	1164c <free@plt>
   12e2c:	push	{r4, r5, fp, lr}
   12e30:	add	fp, sp, #8
   12e34:	mov	r4, r0
   12e38:	ldrb	r0, [r0, #452]	; 0x1c4
   12e3c:	cmp	r0, #0
   12e40:	beq	12e48 <sprintf@plt+0x15bc>
   12e44:	pop	{r4, r5, fp, pc}
   12e48:	mov	r0, #1
   12e4c:	strb	r0, [r4, #452]	; 0x1c4
   12e50:	ldr	r0, [r4, #456]	; 0x1c8
   12e54:	cmp	r0, #0
   12e58:	beq	12e44 <sprintf@plt+0x15b8>
   12e5c:	movw	r0, #61824	; 0xf180
   12e60:	movt	r0, #2
   12e64:	ldr	r5, [r0]
   12e68:	b	12e70 <sprintf@plt+0x15e4>
   12e6c:	ldr	r5, [r5, #8]
   12e70:	cmp	r5, #0
   12e74:	popeq	{r4, r5, fp, pc}
   12e78:	ldr	r0, [r5]
   12e7c:	ldr	r1, [r0, #36]	; 0x24
   12e80:	cmp	r1, #0
   12e84:	beq	12e6c <sprintf@plt+0x15e0>
   12e88:	ldr	r0, [r0, #12]
   12e8c:	ldr	r2, [r4, #464]	; 0x1d0
   12e90:	add	r0, r2, r0, lsl #4
   12e94:	ldr	r0, [r0, #12]
   12e98:	cmp	r0, #1
   12e9c:	bne	12e6c <sprintf@plt+0x15e0>
   12ea0:	mov	r0, r4
   12ea4:	blx	r1
   12ea8:	b	12e6c <sprintf@plt+0x15e0>
   12eac:	push	{r4, r5, r6, sl, fp, lr}
   12eb0:	add	fp, sp, #16
   12eb4:	sub	sp, sp, #8
   12eb8:	mov	r4, r0
   12ebc:	ldr	r0, [r0, #464]	; 0x1d0
   12ec0:	mov	r5, r1
   12ec4:	add	r0, r0, r1, lsl #4
   12ec8:	mov	r1, #2
   12ecc:	str	r1, [r0, #12]
   12ed0:	ldr	r0, [r4, #456]	; 0x1c8
   12ed4:	subs	r0, r0, #1
   12ed8:	str	r0, [r4, #456]	; 0x1c8
   12edc:	bne	12eec <sprintf@plt+0x1660>
   12ee0:	ldrb	r0, [r4, #451]	; 0x1c3
   12ee4:	cmp	r0, #0
   12ee8:	beq	12f48 <sprintf@plt+0x16bc>
   12eec:	movw	r0, #61824	; 0xf180
   12ef0:	movt	r0, #2
   12ef4:	ldr	r6, [r0]
   12ef8:	cmp	r6, #0
   12efc:	bne	12f10 <sprintf@plt+0x1684>
   12f00:	b	12fe8 <sprintf@plt+0x175c>
   12f04:	ldr	r6, [r6, #8]
   12f08:	cmp	r6, #0
   12f0c:	beq	12fe8 <sprintf@plt+0x175c>
   12f10:	ldr	r0, [r6]
   12f14:	ldr	r2, [r0, #44]	; 0x2c
   12f18:	cmp	r2, #0
   12f1c:	beq	12f04 <sprintf@plt+0x1678>
   12f20:	ldr	r0, [r0, #12]
   12f24:	ldr	r1, [r4, #464]	; 0x1d0
   12f28:	add	r0, r1, r0, lsl #4
   12f2c:	ldr	r0, [r0, #12]
   12f30:	cmp	r0, #1
   12f34:	bne	12f04 <sprintf@plt+0x1678>
   12f38:	mov	r0, r4
   12f3c:	mov	r1, r5
   12f40:	blx	r2
   12f44:	b	12f04 <sprintf@plt+0x1678>
   12f48:	movw	r0, #44880	; 0xaf50
   12f4c:	ldr	r2, [r4]
   12f50:	add	r1, r4, #376	; 0x178
   12f54:	add	r3, r4, #440	; 0x1b8
   12f58:	movt	r0, #2
   12f5c:	str	r1, [sp]
   12f60:	movw	r1, #36413	; 0x8e3d
   12f64:	ldr	r0, [r0]
   12f68:	movt	r1, #1
   12f6c:	bl	117e4 <rb_helper_write@plt>
   12f70:	ldrb	r0, [r4, #452]	; 0x1c4
   12f74:	cmp	r0, #0
   12f78:	bne	12fe8 <sprintf@plt+0x175c>
   12f7c:	mov	r0, #1
   12f80:	strb	r0, [r4, #452]	; 0x1c4
   12f84:	ldr	r0, [r4, #456]	; 0x1c8
   12f88:	cmp	r0, #0
   12f8c:	beq	12fe8 <sprintf@plt+0x175c>
   12f90:	movw	r0, #61824	; 0xf180
   12f94:	movt	r0, #2
   12f98:	ldr	r5, [r0]
   12f9c:	cmp	r5, #0
   12fa0:	bne	12fb4 <sprintf@plt+0x1728>
   12fa4:	b	12fe8 <sprintf@plt+0x175c>
   12fa8:	ldr	r5, [r5, #8]
   12fac:	cmp	r5, #0
   12fb0:	beq	12fe8 <sprintf@plt+0x175c>
   12fb4:	ldr	r0, [r5]
   12fb8:	ldr	r1, [r0, #36]	; 0x24
   12fbc:	cmp	r1, #0
   12fc0:	beq	12fa8 <sprintf@plt+0x171c>
   12fc4:	ldr	r0, [r0, #12]
   12fc8:	ldr	r2, [r4, #464]	; 0x1d0
   12fcc:	add	r0, r2, r0, lsl #4
   12fd0:	ldr	r0, [r0, #12]
   12fd4:	cmp	r0, #1
   12fd8:	bne	12fa8 <sprintf@plt+0x171c>
   12fdc:	mov	r0, r4
   12fe0:	blx	r1
   12fe4:	b	12fa8 <sprintf@plt+0x171c>
   12fe8:	sub	sp, fp, #16
   12fec:	pop	{r4, r5, r6, sl, fp, pc}
   12ff0:	push	{r4, r5, fp, lr}
   12ff4:	add	fp, sp, #8
   12ff8:	sub	sp, sp, #8
   12ffc:	mov	r4, r0
   13000:	ldr	r2, [r0]
   13004:	movw	r0, #44880	; 0xaf50
   13008:	movt	r0, #2
   1300c:	add	r1, r4, #376	; 0x178
   13010:	add	r3, r4, #440	; 0x1b8
   13014:	ldr	r0, [r0]
   13018:	str	r1, [sp]
   1301c:	movw	r1, #36413	; 0x8e3d
   13020:	movt	r1, #1
   13024:	bl	117e4 <rb_helper_write@plt>
   13028:	ldrb	r0, [r4, #452]	; 0x1c4
   1302c:	cmp	r0, #0
   13030:	bne	130a0 <sprintf@plt+0x1814>
   13034:	mov	r0, #1
   13038:	strb	r0, [r4, #452]	; 0x1c4
   1303c:	ldr	r0, [r4, #456]	; 0x1c8
   13040:	cmp	r0, #0
   13044:	beq	130a0 <sprintf@plt+0x1814>
   13048:	movw	r0, #61824	; 0xf180
   1304c:	movt	r0, #2
   13050:	ldr	r5, [r0]
   13054:	cmp	r5, #0
   13058:	bne	1306c <sprintf@plt+0x17e0>
   1305c:	b	130a0 <sprintf@plt+0x1814>
   13060:	ldr	r5, [r5, #8]
   13064:	cmp	r5, #0
   13068:	beq	130a0 <sprintf@plt+0x1814>
   1306c:	ldr	r0, [r5]
   13070:	ldr	r1, [r0, #36]	; 0x24
   13074:	cmp	r1, #0
   13078:	beq	13060 <sprintf@plt+0x17d4>
   1307c:	ldr	r0, [r0, #12]
   13080:	ldr	r2, [r4, #464]	; 0x1d0
   13084:	add	r0, r2, r0, lsl #4
   13088:	ldr	r0, [r0, #12]
   1308c:	cmp	r0, #1
   13090:	bne	13060 <sprintf@plt+0x17d4>
   13094:	mov	r0, r4
   13098:	blx	r1
   1309c:	b	13060 <sprintf@plt+0x17d4>
   130a0:	sub	sp, fp, #8
   130a4:	pop	{r4, r5, fp, pc}
   130a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130ac:	add	fp, sp, #28
   130b0:	sub	sp, sp, #28
   130b4:	mov	r2, r0
   130b8:	cmp	r0, #5
   130bc:	ble	133d8 <sprintf@plt+0x1b4c>
   130c0:	cmp	r2, #6
   130c4:	ldr	sl, [r1, #4]
   130c8:	ldr	r9, [r1, #8]
   130cc:	ldr	r7, [r1, #12]
   130d0:	ldr	r5, [r1, #16]
   130d4:	ldr	r4, [r1, #20]
   130d8:	mov	r2, #16
   130dc:	ldrne	r6, [r1, #24]
   130e0:	mov	r1, #0
   130e4:	mov	r0, sl
   130e8:	movweq	r6, #36864	; 0x9000
   130ec:	movteq	r6, #1
   130f0:	bl	11634 <strtoull@plt>
   130f4:	mov	r8, r0
   130f8:	subs	r0, r0, #1
   130fc:	mvn	r2, #1
   13100:	sbc	r1, r1, #0
   13104:	subs	r0, r2, r0
   13108:	rscs	r0, r1, #0
   1310c:	bcc	133a4 <sprintf@plt+0x1b18>
   13110:	mov	r0, #1
   13114:	mov	r1, #468	; 0x1d4
   13118:	str	r6, [sp, #8]
   1311c:	str	r9, [sp, #12]
   13120:	str	r5, [sp, #16]
   13124:	str	r7, [sp, #20]
   13128:	str	r4, [sp, #24]
   1312c:	mov	r5, #1
   13130:	bl	115b0 <calloc@plt>
   13134:	cmp	r0, #0
   13138:	beq	133f0 <sprintf@plt+0x1b64>
   1313c:	movw	r9, #61820	; 0xf17c
   13140:	str	r8, [r0]
   13144:	mov	r4, r0
   13148:	str	r5, [r0, #460]	; 0x1cc
   1314c:	mov	r1, r8
   13150:	movt	r9, #2
   13154:	ldr	r0, [r9]
   13158:	bl	117b4 <rb_dictionary_find@plt>
   1315c:	cmp	r0, #0
   13160:	bne	133f4 <sprintf@plt+0x1b68>
   13164:	ldr	r1, [r4]
   13168:	ldr	r0, [r9]
   1316c:	mov	r2, r4
   13170:	bl	1176c <rb_dictionary_add@plt>
   13174:	ldr	r0, [sp, #8]
   13178:	mov	r1, #0
   1317c:	mov	r2, #16
   13180:	bl	11634 <strtoull@plt>
   13184:	ldr	r5, [sp, #12]
   13188:	str	r0, [r4, #4]
   1318c:	add	r0, r4, #8
   13190:	mov	r2, #54	; 0x36
   13194:	mov	r1, r5
   13198:	bl	11628 <rb_strlcpy@plt>
   1319c:	ldr	r0, [sp, #20]
   131a0:	mov	r1, #0
   131a4:	mov	r2, #10
   131a8:	bl	116e8 <strtol@plt>
   131ac:	strh	r0, [r4, #62]	; 0x3e
   131b0:	add	r1, r4, #64	; 0x40
   131b4:	mov	r0, r5
   131b8:	bl	11694 <rb_inet_pton_sock@plt>
   131bc:	ldrh	r0, [r4, #62]	; 0x3e
   131c0:	ldr	r5, [sp, #16]
   131c4:	mov	r2, #54	; 0x36
   131c8:	rev16	r0, r0
   131cc:	mov	r1, r5
   131d0:	strh	r0, [r4, #66]	; 0x42
   131d4:	add	r0, r4, #192	; 0xc0
   131d8:	bl	11628 <rb_strlcpy@plt>
   131dc:	ldr	r0, [sp, #24]
   131e0:	mov	r1, #0
   131e4:	mov	r2, #10
   131e8:	bl	116e8 <strtol@plt>
   131ec:	strh	r0, [r4, #246]	; 0xf6
   131f0:	add	r1, r4, #248	; 0xf8
   131f4:	mov	r0, r5
   131f8:	bl	11694 <rb_inet_pton_sock@plt>
   131fc:	ldrh	r0, [r4, #246]	; 0xf6
   13200:	movw	r7, #36164	; 0x8d44
   13204:	add	r9, r4, #376	; 0x178
   13208:	mov	r2, #64	; 0x40
   1320c:	movt	r7, #1
   13210:	mov	r1, r7
   13214:	rev16	r0, r0
   13218:	strh	r0, [r4, #250]	; 0xfa
   1321c:	mov	r0, r9
   13220:	bl	11628 <rb_strlcpy@plt>
   13224:	add	r6, r4, #440	; 0x1b8
   13228:	mov	r1, r7
   1322c:	mov	r2, #11
   13230:	mov	r0, r6
   13234:	bl	11628 <rb_strlcpy@plt>
   13238:	movw	r0, #61324	; 0xef8c
   1323c:	mov	r5, #1
   13240:	movt	r0, #2
   13244:	ldr	r0, [r0]
   13248:	lsl	r1, r0, #4
   1324c:	mov	r0, #1
   13250:	bl	115b0 <calloc@plt>
   13254:	cmp	r0, #0
   13258:	beq	133f0 <sprintf@plt+0x1b64>
   1325c:	movw	r8, #61824	; 0xf180
   13260:	movw	sl, #61820	; 0xf17c
   13264:	strb	r5, [r4, #451]	; 0x1c3
   13268:	str	r0, [r4, #464]	; 0x1d0
   1326c:	movt	r8, #2
   13270:	movt	sl, #2
   13274:	ldr	r7, [r8]
   13278:	cmp	r7, #0
   1327c:	beq	132ec <sprintf@plt+0x1a60>
   13280:	ldr	r1, [r7]
   13284:	mov	r5, #1
   13288:	ldr	r2, [r1, #12]
   1328c:	str	r1, [r0, r2, lsl #4]!
   13290:	ldr	r2, [r4, #456]	; 0x1c8
   13294:	add	r2, r2, #1
   13298:	str	r2, [r4, #456]	; 0x1c8
   1329c:	b	132bc <sprintf@plt+0x1a30>
   132a0:	ldr	r1, [r7]
   132a4:	ldr	r0, [r4, #464]	; 0x1d0
   132a8:	ldr	r2, [r1, #12]
   132ac:	str	r1, [r0, r2, lsl #4]!
   132b0:	ldr	r2, [r4, #456]	; 0x1c8
   132b4:	add	r2, r2, #1
   132b8:	str	r2, [r4, #456]	; 0x1c8
   132bc:	str	r5, [r0, #12]
   132c0:	mov	r0, r4
   132c4:	ldr	r1, [r1, #32]
   132c8:	blx	r1
   132cc:	cmp	r0, #0
   132d0:	beq	13394 <sprintf@plt+0x1b08>
   132d4:	ldrb	r0, [r4, #452]	; 0x1c4
   132d8:	cmp	r0, #0
   132dc:	bne	132ec <sprintf@plt+0x1a60>
   132e0:	ldr	r7, [r7, #8]
   132e4:	cmp	r7, #0
   132e8:	bne	132a0 <sprintf@plt+0x1a14>
   132ec:	mov	r0, #0
   132f0:	strb	r0, [r4, #451]	; 0x1c3
   132f4:	ldr	r0, [r4, #456]	; 0x1c8
   132f8:	cmp	r0, #0
   132fc:	bne	13394 <sprintf@plt+0x1b08>
   13300:	movw	r0, #44880	; 0xaf50
   13304:	ldr	r2, [r4]
   13308:	movw	r1, #36413	; 0x8e3d
   1330c:	mov	r3, r6
   13310:	movt	r0, #2
   13314:	movt	r1, #1
   13318:	ldr	r0, [r0]
   1331c:	str	r9, [sp]
   13320:	bl	117e4 <rb_helper_write@plt>
   13324:	ldrb	r0, [r4, #452]	; 0x1c4
   13328:	cmp	r0, #0
   1332c:	bne	13394 <sprintf@plt+0x1b08>
   13330:	mov	r0, #1
   13334:	strb	r0, [r4, #452]	; 0x1c4
   13338:	ldr	r0, [r4, #456]	; 0x1c8
   1333c:	cmp	r0, #0
   13340:	beq	13394 <sprintf@plt+0x1b08>
   13344:	ldr	r5, [r8]
   13348:	cmp	r5, #0
   1334c:	bne	13360 <sprintf@plt+0x1ad4>
   13350:	b	13394 <sprintf@plt+0x1b08>
   13354:	ldr	r5, [r5, #8]
   13358:	cmp	r5, #0
   1335c:	beq	13394 <sprintf@plt+0x1b08>
   13360:	ldr	r0, [r5]
   13364:	ldr	r1, [r0, #36]	; 0x24
   13368:	cmp	r1, #0
   1336c:	beq	13354 <sprintf@plt+0x1ac8>
   13370:	ldr	r0, [r0, #12]
   13374:	ldr	r2, [r4, #464]	; 0x1d0
   13378:	add	r0, r2, r0, lsl #4
   1337c:	ldr	r0, [r0, #12]
   13380:	cmp	r0, #1
   13384:	bne	13354 <sprintf@plt+0x1ac8>
   13388:	mov	r0, r4
   1338c:	blx	r1
   13390:	b	13354 <sprintf@plt+0x1ac8>
   13394:	ldr	r0, [r4, #460]	; 0x1cc
   13398:	subs	r0, r0, #1
   1339c:	str	r0, [r4, #460]	; 0x1cc
   133a0:	beq	133ac <sprintf@plt+0x1b20>
   133a4:	sub	sp, fp, #28
   133a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133ac:	ldr	r1, [r4]
   133b0:	ldr	r0, [sl]
   133b4:	bl	116b8 <rb_dictionary_delete@plt>
   133b8:	ldr	r0, [r4, #464]	; 0x1d0
   133bc:	cmp	r0, #0
   133c0:	beq	133c8 <sprintf@plt+0x1b3c>
   133c4:	bl	1164c <free@plt>
   133c8:	mov	r0, r4
   133cc:	sub	sp, fp, #28
   133d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133d4:	b	1164c <free@plt>
   133d8:	movw	r1, #36424	; 0x8e48
   133dc:	mov	r0, #67	; 0x43
   133e0:	movt	r1, #1
   133e4:	bl	12528 <sprintf@plt+0xc9c>
   133e8:	mov	r0, #3
   133ec:	bl	11874 <exit@plt>
   133f0:	bl	11754 <rb_outofmemory@plt>
   133f4:	movw	r1, #36804	; 0x8fc4
   133f8:	mov	r0, #67	; 0x43
   133fc:	mov	r2, sl
   13400:	movt	r1, #1
   13404:	bl	12528 <sprintf@plt+0xc9c>
   13408:	mov	r0, #3
   1340c:	bl	11874 <exit@plt>
   13410:	push	{r4, r5, r6, sl, fp, lr}
   13414:	add	fp, sp, #16
   13418:	cmp	r0, #1
   1341c:	ble	1352c <sprintf@plt+0x1ca0>
   13420:	ldr	r0, [r1, #4]
   13424:	mov	r4, r1
   13428:	mov	r1, #0
   1342c:	mov	r2, #16
   13430:	bl	11634 <strtoull@plt>
   13434:	mov	r2, r0
   13438:	subs	r0, r0, #1
   1343c:	mvn	r3, #0
   13440:	sbc	r1, r1, #0
   13444:	subs	r0, r0, r3
   13448:	sbcs	r0, r1, #0
   1344c:	bcs	13548 <sprintf@plt+0x1cbc>
   13450:	movw	r5, #61820	; 0xf17c
   13454:	mov	r1, r2
   13458:	movt	r5, #2
   1345c:	ldr	r0, [r5]
   13460:	bl	11748 <rb_dictionary_retrieve@plt>
   13464:	cmp	r0, #0
   13468:	beq	134bc <sprintf@plt+0x1c30>
   1346c:	mov	r4, r0
   13470:	ldr	r0, [r0, #460]	; 0x1cc
   13474:	add	r0, r0, #1
   13478:	str	r0, [r4, #460]	; 0x1cc
   1347c:	ldrb	r1, [r4, #452]	; 0x1c4
   13480:	cmp	r1, #0
   13484:	beq	134c0 <sprintf@plt+0x1c34>
   13488:	subs	r0, r0, #1
   1348c:	str	r0, [r4, #460]	; 0x1cc
   13490:	popne	{r4, r5, r6, sl, fp, pc}
   13494:	ldr	r1, [r4]
   13498:	ldr	r0, [r5]
   1349c:	bl	116b8 <rb_dictionary_delete@plt>
   134a0:	ldr	r0, [r4, #464]	; 0x1d0
   134a4:	cmp	r0, #0
   134a8:	beq	134b0 <sprintf@plt+0x1c24>
   134ac:	bl	1164c <free@plt>
   134b0:	mov	r0, r4
   134b4:	pop	{r4, r5, r6, sl, fp, lr}
   134b8:	b	1164c <free@plt>
   134bc:	pop	{r4, r5, r6, sl, fp, pc}
   134c0:	mov	r1, #1
   134c4:	strb	r1, [r4, #452]	; 0x1c4
   134c8:	ldr	r1, [r4, #456]	; 0x1c8
   134cc:	cmp	r1, #0
   134d0:	beq	13488 <sprintf@plt+0x1bfc>
   134d4:	movw	r1, #61824	; 0xf180
   134d8:	movt	r1, #2
   134dc:	ldr	r6, [r1]
   134e0:	cmp	r6, #0
   134e4:	beq	13488 <sprintf@plt+0x1bfc>
   134e8:	ldr	r0, [r6]
   134ec:	ldr	r1, [r0, #36]	; 0x24
   134f0:	cmp	r1, #0
   134f4:	beq	13518 <sprintf@plt+0x1c8c>
   134f8:	ldr	r0, [r0, #12]
   134fc:	ldr	r2, [r4, #464]	; 0x1d0
   13500:	add	r0, r2, r0, lsl #4
   13504:	ldr	r0, [r0, #12]
   13508:	cmp	r0, #1
   1350c:	bne	13518 <sprintf@plt+0x1c8c>
   13510:	mov	r0, r4
   13514:	blx	r1
   13518:	ldr	r6, [r6, #8]
   1351c:	cmp	r6, #0
   13520:	bne	134e8 <sprintf@plt+0x1c5c>
   13524:	ldr	r0, [r4, #460]	; 0x1cc
   13528:	b	13488 <sprintf@plt+0x1bfc>
   1352c:	movw	r1, #36498	; 0x8e92
   13530:	mov	r2, r0
   13534:	movt	r1, #1
   13538:	mov	r0, #67	; 0x43
   1353c:	bl	12528 <sprintf@plt+0xc9c>
   13540:	mov	r0, #3
   13544:	bl	11874 <exit@plt>
   13548:	ldr	r2, [r4, #4]
   1354c:	movw	r1, #36572	; 0x8edc
   13550:	movt	r1, #1
   13554:	mov	r0, #67	; 0x43
   13558:	bl	12528 <sprintf@plt+0xc9c>
   1355c:	mov	r0, #3
   13560:	bl	11874 <exit@plt>
   13564:	push	{r4, sl, fp, lr}
   13568:	add	fp, sp, #8
   1356c:	bl	14688 <sprintf@plt+0x2dfc>
   13570:	movw	r0, #61408	; 0xefe0
   13574:	movt	r0, #2
   13578:	ldr	r1, [r0]
   1357c:	cmp	r1, #1
   13580:	blt	1359c <sprintf@plt+0x1d10>
   13584:	movw	r0, #61344	; 0xefa0
   13588:	lsl	r2, r1, #2
   1358c:	mov	r1, #0
   13590:	movt	r0, #2
   13594:	add	r0, r0, #24
   13598:	bl	115e0 <memset@plt>
   1359c:	movw	r4, #61344	; 0xefa0
   135a0:	movt	r4, #2
   135a4:	ldr	r0, [r4]
   135a8:	cmp	r0, #0
   135ac:	beq	135b4 <sprintf@plt+0x1d28>
   135b0:	pop	{r4, sl, fp, pc}
   135b4:	movw	r0, #62112	; 0xf2a0
   135b8:	movw	r3, #37071	; 0x90cf
   135bc:	mov	r1, #2
   135c0:	mov	r2, #0
   135c4:	movt	r0, #2
   135c8:	movt	r3, #1
   135cc:	ldrh	r0, [r0]
   135d0:	bl	11568 <rb_socket@plt>
   135d4:	cmp	r0, #0
   135d8:	str	r0, [r4]
   135dc:	popeq	{r4, sl, fp, pc}
   135e0:	movw	r2, #14940	; 0x3a5c
   135e4:	mov	r1, #1
   135e8:	mov	r3, #0
   135ec:	movt	r2, #1
   135f0:	bl	11538 <rb_setselect@plt>
   135f4:	movw	r0, #37091	; 0x90e3
   135f8:	movw	r1, #14996	; 0x3a94
   135fc:	mov	r2, #0
   13600:	mov	r3, #1
   13604:	movt	r0, #1
   13608:	movt	r1, #1
   1360c:	bl	117f0 <rb_event_add@plt>
   13610:	str	r0, [r4, #4]
   13614:	pop	{r4, sl, fp, pc}
   13618:	push	{r4, sl, fp, lr}
   1361c:	add	fp, sp, #8
   13620:	movw	r4, #61344	; 0xefa0
   13624:	movt	r4, #2
   13628:	ldr	r0, [r4]
   1362c:	bl	116dc <rb_close@plt>
   13630:	mov	r0, #0
   13634:	str	r0, [r4]
   13638:	ldr	r0, [r4, #4]
   1363c:	bl	1152c <rb_event_delete@plt>
   13640:	bl	14688 <sprintf@plt+0x2dfc>
   13644:	movw	r0, #61408	; 0xefe0
   13648:	movt	r0, #2
   1364c:	ldr	r1, [r0]
   13650:	cmp	r1, #1
   13654:	blt	13668 <sprintf@plt+0x1ddc>
   13658:	lsl	r2, r1, #2
   1365c:	add	r0, r4, #24
   13660:	mov	r1, #0
   13664:	bl	115e0 <memset@plt>
   13668:	ldr	r0, [r4]
   1366c:	cmp	r0, #0
   13670:	beq	13678 <sprintf@plt+0x1dec>
   13674:	pop	{r4, sl, fp, pc}
   13678:	movw	r0, #62112	; 0xf2a0
   1367c:	movw	r3, #37071	; 0x90cf
   13680:	mov	r1, #2
   13684:	mov	r2, #0
   13688:	movt	r0, #2
   1368c:	movt	r3, #1
   13690:	ldrh	r0, [r0]
   13694:	bl	11568 <rb_socket@plt>
   13698:	cmp	r0, #0
   1369c:	str	r0, [r4]
   136a0:	popeq	{r4, sl, fp, pc}
   136a4:	movw	r2, #14940	; 0x3a5c
   136a8:	mov	r1, #1
   136ac:	mov	r3, #0
   136b0:	movt	r2, #1
   136b4:	bl	11538 <rb_setselect@plt>
   136b8:	movw	r0, #37091	; 0x90e3
   136bc:	movw	r1, #14996	; 0x3a94
   136c0:	mov	r2, #0
   136c4:	mov	r3, #1
   136c8:	movt	r0, #1
   136cc:	movt	r1, #1
   136d0:	bl	117f0 <rb_event_add@plt>
   136d4:	str	r0, [r4, #4]
   136d8:	pop	{r4, sl, fp, pc}
   136dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   136e0:	add	fp, sp, #24
   136e4:	sub	sp, sp, #256	; 0x100
   136e8:	cmp	r0, #0
   136ec:	beq	137d4 <sprintf@plt+0x1f48>
   136f0:	mov	r6, sp
   136f4:	mov	r4, r2
   136f8:	mov	r5, r1
   136fc:	mov	r1, r0
   13700:	mov	r2, #256	; 0x100
   13704:	mov	r0, r6
   13708:	bl	11628 <rb_strlcpy@plt>
   1370c:	mov	r0, r6
   13710:	mov	r1, #46	; 0x2e
   13714:	bl	1158c <strchr@plt>
   13718:	cmp	r0, #0
   1371c:	bne	13778 <sprintf@plt+0x1eec>
   13720:	movw	r0, #61856	; 0xf1a0
   13724:	movt	r0, #2
   13728:	ldrb	r0, [r0]
   1372c:	cmp	r0, #0
   13730:	beq	13778 <sprintf@plt+0x1eec>
   13734:	mov	r6, sp
   13738:	mov	r0, r6
   1373c:	bl	116a0 <strlen@plt>
   13740:	mov	r7, r0
   13744:	movw	r0, #61856	; 0xf1a0
   13748:	movt	r0, #2
   1374c:	bl	116a0 <strlen@plt>
   13750:	add	r0, r7, r0
   13754:	add	r0, r0, #2
   13758:	cmp	r0, #254	; 0xfe
   1375c:	bhi	13778 <sprintf@plt+0x1eec>
   13760:	add	r0, r6, r7
   13764:	mov	r1, #46	; 0x2e
   13768:	strb	r1, [r0], #1
   1376c:	movw	r1, #61856	; 0xf1a0
   13770:	movt	r1, #2
   13774:	bl	11700 <strcpy@plt>
   13778:	mov	r0, r5
   1377c:	bl	1439c <sprintf@plt+0x2b10>
   13780:	mov	r5, r0
   13784:	mov	r0, sp
   13788:	bl	116a0 <strlen@plt>
   1378c:	add	r0, r0, #1
   13790:	bl	11784 <malloc@plt>
   13794:	cmp	r0, #0
   13798:	beq	137f4 <sprintf@plt+0x1f68>
   1379c:	mov	r7, sp
   137a0:	mov	r6, r0
   137a4:	mov	r1, r7
   137a8:	bl	11700 <strcpy@plt>
   137ac:	add	r0, r5, #21
   137b0:	mov	r1, r7
   137b4:	mov	r2, #256	; 0x100
   137b8:	str	r6, [r5, #420]	; 0x1a4
   137bc:	bl	11628 <rb_strlcpy@plt>
   137c0:	mov	r0, r5
   137c4:	strb	r4, [r5, #20]
   137c8:	bl	1448c <sprintf@plt+0x2c00>
   137cc:	sub	sp, fp, #24
   137d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   137d4:	movw	r0, #36856	; 0x8ff8
   137d8:	movw	r1, #36866	; 0x9002
   137dc:	movw	r3, #36872	; 0x9008
   137e0:	mov	r2, #412	; 0x19c
   137e4:	movt	r0, #1
   137e8:	movt	r1, #1
   137ec:	movt	r3, #1
   137f0:	bl	11610 <__assert_fail@plt>
   137f4:	bl	11754 <rb_outofmemory@plt>
   137f8:	push	{r4, r5, fp, lr}
   137fc:	add	fp, sp, #8
   13800:	mov	r5, r0
   13804:	mov	r0, r1
   13808:	bl	1439c <sprintf@plt+0x2b10>
   1380c:	mov	r4, r0
   13810:	add	r0, r0, #292	; 0x124
   13814:	mov	r1, r5
   13818:	mov	r2, #128	; 0x80
   1381c:	bl	116c4 <memcpy@plt>
   13820:	mov	r0, #1
   13824:	mov	r1, #256	; 0x100
   13828:	bl	115b0 <calloc@plt>
   1382c:	cmp	r0, #0
   13830:	beq	13860 <sprintf@plt+0x1fd4>
   13834:	str	r0, [r4, #420]	; 0x1a4
   13838:	add	r0, r4, #21
   1383c:	mov	r1, #256	; 0x100
   13840:	mov	r2, r5
   13844:	mov	r3, #0
   13848:	bl	13864 <sprintf@plt+0x1fd8>
   1384c:	mov	r0, #12
   13850:	strb	r0, [r4, #20]
   13854:	mov	r0, r4
   13858:	pop	{r4, r5, fp, lr}
   1385c:	b	1448c <sprintf@plt+0x2c00>
   13860:	bl	11754 <rb_outofmemory@plt>
   13864:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13868:	add	fp, sp, #28
   1386c:	sub	sp, sp, #172	; 0xac
   13870:	ldrh	r7, [r2]
   13874:	cmp	r7, #10
   13878:	beq	138c0 <sprintf@plt+0x2034>
   1387c:	cmp	r7, #2
   13880:	subne	sp, fp, #28
   13884:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13888:	movw	r7, #36950	; 0x9056
   1388c:	cmp	r3, #0
   13890:	ldrb	r6, [r2, #4]
   13894:	ldrb	r5, [r2, #5]
   13898:	ldrb	r4, [r2, #6]
   1389c:	movt	r7, #1
   138a0:	movne	r7, r3
   138a4:	ldrb	r3, [r2, #7]
   138a8:	movw	r2, #36935	; 0x9047
   138ac:	movt	r2, #1
   138b0:	stm	sp, {r4, r5, r6, r7}
   138b4:	bl	11814 <snprintf@plt>
   138b8:	sub	sp, fp, #28
   138bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138c0:	movw	r5, #37062	; 0x90c6
   138c4:	cmp	r3, #0
   138c8:	ldrb	r8, [r2, #8]
   138cc:	ldrb	r6, [r2, #15]
   138d0:	ldrb	ip, [r2, #13]
   138d4:	ldrb	lr, [r2, #12]
   138d8:	ldrb	r9, [r2, #9]
   138dc:	ldrb	sl, [r2, #10]
   138e0:	str	r0, [fp, #-52]	; 0xffffffcc
   138e4:	str	r1, [fp, #-44]	; 0xffffffd4
   138e8:	movt	r5, #1
   138ec:	movne	r5, r3
   138f0:	ldrb	r3, [r2, #23]
   138f4:	lsr	r4, r8, #4
   138f8:	lsr	r0, sl, #4
   138fc:	lsr	r1, r9, #4
   13900:	and	r8, r8, #15
   13904:	and	r9, r9, #15
   13908:	and	sl, sl, #15
   1390c:	str	r3, [fp, #-32]	; 0xffffffe0
   13910:	ldrb	r3, [r2, #22]
   13914:	str	r3, [fp, #-36]	; 0xffffffdc
   13918:	ldrb	r3, [r2, #21]
   1391c:	str	r3, [fp, #-40]	; 0xffffffd8
   13920:	ldrb	r3, [r2, #20]
   13924:	str	r3, [fp, #-48]	; 0xffffffd0
   13928:	ldrb	r3, [r2, #19]
   1392c:	str	r3, [fp, #-56]	; 0xffffffc8
   13930:	ldrb	r3, [r2, #18]
   13934:	str	r3, [fp, #-60]	; 0xffffffc4
   13938:	ldrb	r3, [r2, #17]
   1393c:	str	r3, [fp, #-64]	; 0xffffffc0
   13940:	ldrb	r3, [r2, #16]
   13944:	str	r3, [fp, #-68]	; 0xffffffbc
   13948:	ldrb	r3, [r2, #14]
   1394c:	ldrb	r2, [r2, #11]
   13950:	str	r0, [sp, #104]	; 0x68
   13954:	str	r4, [sp, #120]	; 0x78
   13958:	str	r5, [sp, #124]	; 0x7c
   1395c:	mov	r0, r6
   13960:	lsr	r6, r6, #4
   13964:	and	r5, ip, #15
   13968:	str	r1, [sp, #112]	; 0x70
   1396c:	str	r8, [sp, #116]	; 0x74
   13970:	str	sl, [sp, #100]	; 0x64
   13974:	str	r9, [sp, #108]	; 0x6c
   13978:	lsr	r1, lr, #4
   1397c:	str	r6, [sp, #64]	; 0x40
   13980:	lsr	r7, r2, #4
   13984:	lsr	r4, r3, #4
   13988:	and	r3, r3, #15
   1398c:	and	r8, r2, #15
   13990:	and	r2, lr, #15
   13994:	add	lr, sp, #32
   13998:	str	r7, [sp, #96]	; 0x60
   1399c:	lsr	r7, ip, #4
   139a0:	add	ip, sp, #68	; 0x44
   139a4:	stm	ip, {r3, r4, r5, r7}
   139a8:	and	ip, r0, #15
   139ac:	str	r2, [sp, #84]	; 0x54
   139b0:	str	r1, [sp, #88]	; 0x58
   139b4:	str	r8, [sp, #92]	; 0x5c
   139b8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   139bc:	lsr	r1, r0, #4
   139c0:	and	r2, r0, #15
   139c4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   139c8:	lsr	r3, r0, #4
   139cc:	and	r7, r0, #15
   139d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   139d4:	lsr	r6, r0, #4
   139d8:	and	r5, r0, #15
   139dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   139e0:	lsr	r4, r0, #4
   139e4:	stm	lr, {r4, r5, r6, r7}
   139e8:	str	ip, [sp, #60]	; 0x3c
   139ec:	and	ip, r0, #15
   139f0:	str	r2, [sp, #52]	; 0x34
   139f4:	str	r1, [sp, #56]	; 0x38
   139f8:	str	r3, [sp, #48]	; 0x30
   139fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13a00:	lsr	r1, r0, #4
   13a04:	and	r2, r0, #15
   13a08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13a0c:	lsr	r3, r0, #4
   13a10:	and	r7, r0, #15
   13a14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13a18:	lsr	r6, r0, #4
   13a1c:	and	r5, r0, #15
   13a20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a24:	lsr	r4, r0, #4
   13a28:	stm	sp, {r4, r5, r6, r7}
   13a2c:	str	r3, [sp, #16]
   13a30:	str	r1, [sp, #24]
   13a34:	and	r3, r0, #15
   13a38:	str	r2, [sp, #20]
   13a3c:	movw	r2, #36963	; 0x9063
   13a40:	str	ip, [sp, #28]
   13a44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13a48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a4c:	movt	r2, #1
   13a50:	bl	11814 <snprintf@plt>
   13a54:	sub	sp, fp, #28
   13a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a5c:	push	{r4, sl, fp, lr}
   13a60:	add	fp, sp, #8
   13a64:	mov	r4, r0
   13a68:	mov	r0, r4
   13a6c:	bl	13b04 <sprintf@plt+0x2278>
   13a70:	cmp	r0, #0
   13a74:	bne	13a68 <sprintf@plt+0x21dc>
   13a78:	movw	r2, #14940	; 0x3a5c
   13a7c:	mov	r0, r4
   13a80:	mov	r1, #1
   13a84:	mov	r3, #0
   13a88:	movt	r2, #1
   13a8c:	pop	{r4, sl, fp, lr}
   13a90:	b	11538 <rb_setselect@plt>
   13a94:	push	{r4, r5, r6, sl, fp, lr}
   13a98:	add	fp, sp, #16
   13a9c:	bl	116ac <rb_current_time@plt>
   13aa0:	movw	r5, #61344	; 0xefa0
   13aa4:	movt	r5, #2
   13aa8:	ldr	r6, [r5, #12]
   13aac:	cmp	r6, #0
   13ab0:	popeq	{r4, r5, r6, sl, fp, pc}
   13ab4:	mov	r4, r0
   13ab8:	ldr	r0, [r6]
   13abc:	ldr	r6, [r6, #8]
   13ac0:	ldr	r2, [r0, #280]	; 0x118
   13ac4:	ldr	r1, [r0, #284]	; 0x11c
   13ac8:	add	r2, r1, r2
   13acc:	cmp	r2, r4
   13ad0:	bgt	13af8 <sprintf@plt+0x226c>
   13ad4:	ldr	r2, [r0, #288]	; 0x120
   13ad8:	lsl	r1, r1, #1
   13adc:	add	r2, r5, r2, lsl #2
   13ae0:	ldr	r3, [r2, #24]
   13ae4:	add	r3, r3, #1
   13ae8:	str	r3, [r2, #24]
   13aec:	str	r4, [r0, #280]	; 0x118
   13af0:	str	r1, [r0, #284]	; 0x11c
   13af4:	bl	14298 <sprintf@plt+0x2a0c>
   13af8:	cmp	r6, #0
   13afc:	bne	13ab8 <sprintf@plt+0x222c>
   13b00:	pop	{r4, r5, r6, sl, fp, pc}
   13b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b08:	add	fp, sp, #28
   13b0c:	sub	sp, sp, #532	; 0x214
   13b10:	sub	sp, sp, #1024	; 0x400
   13b14:	mov	r1, #128	; 0x80
   13b18:	str	r1, [sp, #156]	; 0x9c
   13b1c:	bl	11544 <rb_get_fd@plt>
   13b20:	add	r1, sp, #156	; 0x9c
   13b24:	add	r8, sp, #160	; 0xa0
   13b28:	add	r4, sp, #28
   13b2c:	movw	r2, #1036	; 0x40c
   13b30:	mov	r3, #0
   13b34:	mov	sl, #0
   13b38:	str	r1, [sp, #4]
   13b3c:	mov	r1, r8
   13b40:	str	r4, [sp]
   13b44:	bl	11838 <recvfrom@plt>
   13b48:	mov	r7, r0
   13b4c:	add	r0, r0, #1
   13b50:	cmp	r0, #2
   13b54:	bcc	14264 <sprintf@plt+0x29d8>
   13b58:	mov	sl, #1
   13b5c:	cmp	r7, #13
   13b60:	blt	14264 <sprintf@plt+0x29d8>
   13b64:	ldr	r0, [sp, #168]	; 0xa8
   13b68:	ldr	r3, [sp, #164]	; 0xa4
   13b6c:	lsr	r2, r0, #16
   13b70:	rev	r1, r0
   13b74:	rev	r2, r2
   13b78:	orr	r1, r2, r1, lsr #16
   13b7c:	str	r1, [sp, #168]	; 0xa8
   13b80:	lsr	r1, r3, #16
   13b84:	orr	r0, r1, r0, lsl #16
   13b88:	rev	r1, r3
   13b8c:	rev	r0, r0
   13b90:	pkhtb	r0, r0, r1, asr #16
   13b94:	str	r0, [sp, #164]	; 0xa4
   13b98:	movw	r0, #61344	; 0xefa0
   13b9c:	movt	r0, #2
   13ba0:	ldr	r0, [r0, #12]
   13ba4:	cmp	r0, #0
   13ba8:	beq	14264 <sprintf@plt+0x29d8>
   13bac:	ldrh	r1, [sp, #160]	; 0xa0
   13bb0:	ldr	r5, [r0]
   13bb4:	ldr	r2, [r5, #12]
   13bb8:	cmp	r2, r1
   13bbc:	beq	13bd0 <sprintf@plt+0x2344>
   13bc0:	ldr	r0, [r0, #8]
   13bc4:	cmp	r0, #0
   13bc8:	bne	13bb0 <sprintf@plt+0x2324>
   13bcc:	b	14264 <sprintf@plt+0x29d8>
   13bd0:	cmp	r5, #0
   13bd4:	beq	14264 <sprintf@plt+0x29d8>
   13bd8:	movw	r0, #61408	; 0xefe0
   13bdc:	mov	r2, #0
   13be0:	str	r3, [sp, #12]
   13be4:	movt	r0, #2
   13be8:	ldr	r1, [r0]
   13bec:	cmp	r1, #1
   13bf0:	blt	13d70 <sprintf@plt+0x24e4>
   13bf4:	ldrh	r6, [sp, #28]
   13bf8:	ldrh	r3, [sp, #30]
   13bfc:	add	r0, r4, #8
   13c00:	str	r1, [sp, #20]
   13c04:	str	r0, [sp, #24]
   13c08:	cmp	r6, #2
   13c0c:	str	r3, [sp, #16]
   13c10:	bne	13ce0 <sprintf@plt+0x2454>
   13c14:	ldr	r4, [sp, #32]
   13c18:	movw	r0, #62112	; 0xf2a0
   13c1c:	mov	r9, #0
   13c20:	str	r6, [sp, #8]
   13c24:	movt	r0, #2
   13c28:	add	sl, r0, #4
   13c2c:	ldrh	r0, [sl, #-4]
   13c30:	cmp	r0, #10
   13c34:	beq	13c64 <sprintf@plt+0x23d8>
   13c38:	cmp	r0, #2
   13c3c:	ldrheq	r0, [sl, #-2]
   13c40:	cmpeq	r0, r3
   13c44:	bne	13c74 <sprintf@plt+0x23e8>
   13c48:	ldr	r0, [sl]
   13c4c:	mov	r2, #1
   13c50:	cmp	r0, #0
   13c54:	beq	13d70 <sprintf@plt+0x24e4>
   13c58:	cmp	r0, r4
   13c5c:	bne	13c74 <sprintf@plt+0x23e8>
   13c60:	b	13d70 <sprintf@plt+0x24e4>
   13c64:	cmp	r6, #10
   13c68:	ldrheq	r0, [sl, #-2]
   13c6c:	cmpeq	r0, r3
   13c70:	beq	13c88 <sprintf@plt+0x23fc>
   13c74:	add	r9, r9, #1
   13c78:	add	sl, sl, #128	; 0x80
   13c7c:	cmp	r9, r1
   13c80:	blt	13c2c <sprintf@plt+0x23a0>
   13c84:	b	13d6c <sprintf@plt+0x24e0>
   13c88:	ldr	r1, [sp, #24]
   13c8c:	mov	r6, r4
   13c90:	add	r4, sl, #4
   13c94:	mov	r2, #16
   13c98:	mov	r0, r4
   13c9c:	bl	11514 <memcmp@plt>
   13ca0:	mov	r2, #1
   13ca4:	cmp	r0, #0
   13ca8:	beq	13d70 <sprintf@plt+0x24e4>
   13cac:	movw	r1, #40680	; 0x9ee8
   13cb0:	mov	r0, r4
   13cb4:	mov	r2, #16
   13cb8:	movt	r1, #2
   13cbc:	bl	11514 <memcmp@plt>
   13cc0:	mov	r4, r6
   13cc4:	ldr	r1, [sp, #20]
   13cc8:	ldr	r3, [sp, #16]
   13ccc:	ldr	r6, [sp, #8]
   13cd0:	mov	r2, #1
   13cd4:	cmp	r0, #0
   13cd8:	bne	13c74 <sprintf@plt+0x23e8>
   13cdc:	b	13d70 <sprintf@plt+0x24e4>
   13ce0:	cmp	r6, #10
   13ce4:	bne	13d70 <sprintf@plt+0x24e4>
   13ce8:	movw	r0, #62112	; 0xf2a0
   13cec:	movw	r9, #40680	; 0x9ee8
   13cf0:	mov	r6, #0
   13cf4:	movt	r0, #2
   13cf8:	movt	r9, #2
   13cfc:	add	r4, r0, #8
   13d00:	ldrh	r0, [r4, #-8]
   13d04:	cmp	r0, #10
   13d08:	ldrheq	r0, [r4, #-6]
   13d0c:	cmpeq	r0, r3
   13d10:	beq	13d28 <sprintf@plt+0x249c>
   13d14:	add	r6, r6, #1
   13d18:	add	r4, r4, #128	; 0x80
   13d1c:	cmp	r6, r1
   13d20:	blt	13d00 <sprintf@plt+0x2474>
   13d24:	b	13d6c <sprintf@plt+0x24e0>
   13d28:	ldr	r1, [sp, #24]
   13d2c:	mov	r0, r4
   13d30:	mov	r2, #16
   13d34:	bl	11514 <memcmp@plt>
   13d38:	mov	r2, #1
   13d3c:	cmp	r0, #0
   13d40:	beq	13d70 <sprintf@plt+0x24e4>
   13d44:	mov	r0, r4
   13d48:	mov	r1, r9
   13d4c:	mov	r2, #16
   13d50:	bl	11514 <memcmp@plt>
   13d54:	ldr	r1, [sp, #20]
   13d58:	ldr	r3, [sp, #16]
   13d5c:	mov	r2, #1
   13d60:	cmp	r0, #0
   13d64:	bne	13d14 <sprintf@plt+0x2488>
   13d68:	b	13d70 <sprintf@plt+0x24e4>
   13d6c:	mov	r2, #0
   13d70:	ldr	r0, [r5, #288]	; 0x120
   13d74:	movw	r4, #61344	; 0xefa0
   13d78:	mov	sl, #1
   13d7c:	str	r2, [sp, #24]
   13d80:	movt	r4, #2
   13d84:	mov	r6, r4
   13d88:	cmp	r2, r0
   13d8c:	addne	r0, r6, r2, lsl #2
   13d90:	ldrne	r1, [r0, #24]
   13d94:	addne	r1, r1, #3
   13d98:	strne	r1, [r0, #24]
   13d9c:	ldr	r0, [sp, #12]
   13da0:	uxth	r0, r0
   13da4:	cmp	r0, #256	; 0x100
   13da8:	bne	14264 <sprintf@plt+0x29d8>
   13dac:	add	r4, r8, r7
   13db0:	mov	r0, #256	; 0x100
   13db4:	add	r7, r8, #12
   13db8:	sub	lr, fp, #256	; 0x100
   13dbc:	str	r0, [sp]
   13dc0:	sub	r3, lr, #131	; 0x83
   13dc4:	mov	r0, r8
   13dc8:	mov	r1, r4
   13dcc:	mov	r2, r7
   13dd0:	bl	14960 <sprintf@plt+0x30d4>
   13dd4:	cmp	r0, #0
   13dd8:	ble	14264 <sprintf@plt+0x29d8>
   13ddc:	sub	lr, fp, #256	; 0x100
   13de0:	add	r1, r5, #21
   13de4:	sub	r0, lr, #131	; 0x83
   13de8:	bl	11670 <rb_strcasecmp@plt>
   13dec:	cmp	r0, #0
   13df0:	bne	14264 <sprintf@plt+0x29d8>
   13df4:	ldr	r1, [sp, #160]	; 0xa0
   13df8:	tst	r1, #251658240	; 0xf000000
   13dfc:	bne	13e5c <sprintf@plt+0x25d0>
   13e00:	ldr	r2, [sp, #164]	; 0xa4
   13e04:	mov	r0, r2
   13e08:	bfc	r0, #0, #16
   13e0c:	cmp	r0, #0
   13e10:	beq	13e5c <sprintf@plt+0x25d0>
   13e14:	movw	r8, #65535	; 0xffff
   13e18:	tst	r2, r8
   13e1c:	beq	13e88 <sprintf@plt+0x25fc>
   13e20:	mov	r0, r7
   13e24:	mov	r1, r4
   13e28:	bl	14fc0 <sprintf@plt+0x3734>
   13e2c:	cmp	r0, #0
   13e30:	blt	14240 <sprintf@plt+0x29b4>
   13e34:	add	r3, sp, #160	; 0xa0
   13e38:	add	r0, r7, r0
   13e3c:	ldm	r3, {r1, r2, r3}
   13e40:	add	r7, r0, #4
   13e44:	sub	r6, r2, #1
   13e48:	pkhbt	r2, r6, r2
   13e4c:	tst	r6, r8
   13e50:	str	r2, [sp, #164]	; 0xa4
   13e54:	bne	13e20 <sprintf@plt+0x2594>
   13e58:	b	13e8c <sprintf@plt+0x2600>
   13e5c:	ubfx	r0, r1, #24, #4
   13e60:	sub	r1, r0, #4
   13e64:	cmp	r1, #2
   13e68:	ldr	r1, [sp, #24]
   13e6c:	bcc	13e80 <sprintf@plt+0x25f4>
   13e70:	cmp	r0, #3
   13e74:	beq	13ff8 <sprintf@plt+0x276c>
   13e78:	cmp	r0, #2
   13e7c:	bne	14010 <sprintf@plt+0x2784>
   13e80:	add	r0, r6, r1, lsl #2
   13e84:	b	14250 <sprintf@plt+0x29c4>
   13e88:	ldr	r3, [sp, #168]	; 0xa8
   13e8c:	cmp	r7, r4
   13e90:	bcs	13f80 <sprintf@plt+0x26f4>
   13e94:	lsr	r0, r2, #16
   13e98:	orr	r0, r0, r3, lsl #16
   13e9c:	uxth	r6, r0
   13ea0:	cmp	r6, #0
   13ea4:	beq	13f80 <sprintf@plt+0x26f4>
   13ea8:	sub	lr, fp, #256	; 0x100
   13eac:	mov	r8, r4
   13eb0:	sub	r6, lr, #131	; 0x83
   13eb4:	str	r1, [sp, #160]	; 0xa0
   13eb8:	movw	r1, #0
   13ebc:	str	r3, [sp, #168]	; 0xa8
   13ec0:	mov	r3, r6
   13ec4:	mov	r4, r8
   13ec8:	movt	r1, #65535	; 0xffff
   13ecc:	add	r0, r1, r0, lsl #16
   13ed0:	uxth	r1, r2
   13ed4:	mov	r2, r7
   13ed8:	orr	r0, r0, r1
   13edc:	mov	r1, r8
   13ee0:	str	r0, [sp, #164]	; 0xa4
   13ee4:	movw	r0, #355	; 0x163
   13ee8:	str	r0, [sp]
   13eec:	add	r0, sp, #160	; 0xa0
   13ef0:	bl	14960 <sprintf@plt+0x30d4>
   13ef4:	cmp	r0, #1
   13ef8:	blt	14240 <sprintf@plt+0x29b4>
   13efc:	add	r9, r7, r0
   13f00:	mov	r1, #0
   13f04:	add	r7, r9, #10
   13f08:	strb	r1, [fp, #-132]	; 0xffffff7c
   13f0c:	cmp	r7, r4
   13f10:	bcs	13f80 <sprintf@plt+0x26f4>
   13f14:	mov	r0, r9
   13f18:	bl	1505c <sprintf@plt+0x37d0>
   13f1c:	mov	r4, r0
   13f20:	add	r0, r9, #2
   13f24:	bl	1505c <sprintf@plt+0x37d0>
   13f28:	add	r0, r9, #4
   13f2c:	bl	1506c <sprintf@plt+0x37e0>
   13f30:	str	r0, [r5, #16]
   13f34:	add	r0, r9, #8
   13f38:	bl	1505c <sprintf@plt+0x37d0>
   13f3c:	cmp	r4, #28
   13f40:	beq	14130 <sprintf@plt+0x28a4>
   13f44:	cmp	r4, #12
   13f48:	mov	r1, r8
   13f4c:	beq	140dc <sprintf@plt+0x2850>
   13f50:	cmp	r4, #1
   13f54:	beq	14230 <sprintf@plt+0x29a4>
   13f58:	add	r7, r7, r0
   13f5c:	cmp	r7, r1
   13f60:	bcs	13f80 <sprintf@plt+0x26f4>
   13f64:	add	r3, sp, #160	; 0xa0
   13f68:	ldm	r3, {r1, r2, r3}
   13f6c:	lsr	r0, r2, #16
   13f70:	orr	r0, r0, r3, lsl #16
   13f74:	uxth	r4, r0
   13f78:	cmp	r4, #0
   13f7c:	bne	13eb4 <sprintf@plt+0x2628>
   13f80:	ldrb	r0, [r5, #20]
   13f84:	cmp	r0, #12
   13f88:	bne	14164 <sprintf@plt+0x28d8>
   13f8c:	ldr	r7, [r5, #420]	; 0x1a4
   13f90:	cmp	r7, #0
   13f94:	beq	14240 <sprintf@plt+0x29b4>
   13f98:	mov	r0, #292	; 0x124
   13f9c:	ldrh	r8, [r5, r0]
   13fa0:	ldr	r0, [r5, #424]	; 0x1a8
   13fa4:	bl	1439c <sprintf@plt+0x2b10>
   13fa8:	mov	r6, r0
   13fac:	mov	r0, r7
   13fb0:	bl	116a0 <strlen@plt>
   13fb4:	add	r0, r0, #1
   13fb8:	bl	11784 <malloc@plt>
   13fbc:	mov	r4, r0
   13fc0:	cmp	r8, #10
   13fc4:	bne	14084 <sprintf@plt+0x27f8>
   13fc8:	cmp	r4, #0
   13fcc:	beq	14294 <sprintf@plt+0x2a08>
   13fd0:	mov	r0, r4
   13fd4:	mov	r1, r7
   13fd8:	bl	11700 <strcpy@plt>
   13fdc:	add	r0, r6, #21
   13fe0:	mov	r1, r7
   13fe4:	mov	r2, #256	; 0x100
   13fe8:	str	r4, [r6, #420]	; 0x1a4
   13fec:	bl	11628 <rb_strlcpy@plt>
   13ff0:	mov	r0, #28
   13ff4:	b	140b0 <sprintf@plt+0x2824>
   13ff8:	add	r0, r6, r1, lsl #2
   13ffc:	ldr	r1, [r0, #24]
   14000:	asr	r2, r1, #31
   14004:	add	r1, r1, r2, lsr #30
   14008:	asr	r1, r1, #2
   1400c:	str	r1, [r0, #24]
   14010:	ldr	r1, [r5, #424]	; 0x1a8
   14014:	ldm	r1, {r0, r2}
   14018:	mov	r1, #0
   1401c:	blx	r2
   14020:	ldr	r0, [r5, #8]
   14024:	ldr	r1, [r5, #4]
   14028:	cmp	r0, #0
   1402c:	streq	r1, [r6, #16]
   14030:	strne	r1, [r0, #4]
   14034:	ldrne	r1, [r5, #4]
   14038:	add	r2, r1, #8
   1403c:	cmp	r1, #0
   14040:	addeq	r2, r6, #12
   14044:	str	r0, [r2]
   14048:	mov	r0, #0
   1404c:	str	r0, [r5, #4]
   14050:	str	r0, [r5, #8]
   14054:	ldr	r0, [r6, #20]
   14058:	sub	r0, r0, #1
   1405c:	str	r0, [r6, #20]
   14060:	ldr	r0, [r5, #420]	; 0x1a4
   14064:	cmp	r0, #0
   14068:	beq	14070 <sprintf@plt+0x27e4>
   1406c:	bl	1164c <free@plt>
   14070:	mov	r0, r5
   14074:	bl	1164c <free@plt>
   14078:	mov	r0, sl
   1407c:	sub	sp, fp, #28
   14080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14084:	cmp	r4, #0
   14088:	beq	14294 <sprintf@plt+0x2a08>
   1408c:	mov	r0, r4
   14090:	mov	r1, r7
   14094:	bl	11700 <strcpy@plt>
   14098:	add	r0, r6, #21
   1409c:	mov	r1, r7
   140a0:	mov	r2, #256	; 0x100
   140a4:	str	r4, [r6, #420]	; 0x1a4
   140a8:	bl	11628 <rb_strlcpy@plt>
   140ac:	mov	r0, #1
   140b0:	strb	r0, [r6, #20]
   140b4:	mov	r0, r6
   140b8:	bl	1448c <sprintf@plt+0x2c00>
   140bc:	ldr	r0, [r5, #8]
   140c0:	ldr	r1, [r5, #4]
   140c4:	movw	r6, #61344	; 0xefa0
   140c8:	movt	r6, #2
   140cc:	cmp	r0, #0
   140d0:	bne	141c0 <sprintf@plt+0x2934>
   140d4:	str	r1, [r6, #16]
   140d8:	b	141c8 <sprintf@plt+0x293c>
   140dc:	ldrb	r0, [r5, #20]
   140e0:	cmp	r0, #12
   140e4:	bne	14240 <sprintf@plt+0x29b4>
   140e8:	movw	r0, #355	; 0x163
   140ec:	sub	lr, fp, #256	; 0x100
   140f0:	mov	r2, r7
   140f4:	str	r0, [sp]
   140f8:	add	r0, sp, #160	; 0xa0
   140fc:	sub	r3, lr, #131	; 0x83
   14100:	bl	14960 <sprintf@plt+0x30d4>
   14104:	cmp	r0, #1
   14108:	blt	14240 <sprintf@plt+0x29b4>
   1410c:	ldr	r0, [r5, #420]	; 0x1a4
   14110:	sub	lr, fp, #256	; 0x100
   14114:	mov	r2, #256	; 0x100
   14118:	sub	r1, lr, #131	; 0x83
   1411c:	bl	11628 <rb_strlcpy@plt>
   14120:	ldrb	r0, [r5, #20]
   14124:	cmp	r0, #12
   14128:	beq	13f8c <sprintf@plt+0x2700>
   1412c:	b	14164 <sprintf@plt+0x28d8>
   14130:	cmp	r0, #16
   14134:	ldrbeq	r0, [r5, #20]
   14138:	cmpeq	r0, #28
   1413c:	bne	14240 <sprintf@plt+0x29b4>
   14140:	mov	r0, #292	; 0x124
   14144:	mov	r1, #10
   14148:	strh	r1, [r5, r0]
   1414c:	add	r0, r5, #300	; 0x12c
   14150:	vld1.8	{d16-d17}, [r7]
   14154:	vst1.8	{d16-d17}, [r0]
   14158:	ldrb	r0, [r5, #20]
   1415c:	cmp	r0, #12
   14160:	beq	13f8c <sprintf@plt+0x2700>
   14164:	mov	r0, #1
   14168:	mov	r1, #132	; 0x84
   1416c:	bl	115b0 <calloc@plt>
   14170:	movw	r6, #61344	; 0xefa0
   14174:	cmp	r0, #0
   14178:	movt	r6, #2
   1417c:	beq	14294 <sprintf@plt+0x2a08>
   14180:	ldr	r1, [r5, #420]	; 0x1a4
   14184:	mov	r4, r0
   14188:	mov	r2, #128	; 0x80
   1418c:	str	r1, [r0], #4
   14190:	add	r1, r5, #292	; 0x124
   14194:	bl	116c4 <memcpy@plt>
   14198:	ldr	r1, [r5, #424]	; 0x1a8
   1419c:	ldm	r1, {r0, r2}
   141a0:	mov	r1, r4
   141a4:	blx	r2
   141a8:	mov	r0, r4
   141ac:	bl	1164c <free@plt>
   141b0:	ldr	r0, [r5, #8]
   141b4:	ldr	r1, [r5, #4]
   141b8:	cmp	r0, #0
   141bc:	beq	140d4 <sprintf@plt+0x2848>
   141c0:	str	r1, [r0, #4]
   141c4:	ldr	r1, [r5, #4]
   141c8:	add	r2, r1, #8
   141cc:	cmp	r1, #0
   141d0:	addeq	r2, r6, #12
   141d4:	str	r0, [r2]
   141d8:	mov	r0, #0
   141dc:	str	r0, [r5, #4]
   141e0:	str	r0, [r5, #8]
   141e4:	ldr	r0, [r6, #20]
   141e8:	sub	r0, r0, #1
   141ec:	str	r0, [r6, #20]
   141f0:	ldr	r0, [r5, #420]	; 0x1a4
   141f4:	cmp	r0, #0
   141f8:	beq	14200 <sprintf@plt+0x2974>
   141fc:	bl	1164c <free@plt>
   14200:	mov	r0, r5
   14204:	bl	1164c <free@plt>
   14208:	ldr	r0, [sp, #24]
   1420c:	add	r0, r6, r0, lsl #2
   14210:	ldr	r1, [r0, #24]
   14214:	asr	r2, r1, #31
   14218:	add	r1, r1, r2, lsr #30
   1421c:	asr	r1, r1, #2
   14220:	str	r1, [r0, #24]
   14224:	mov	r0, sl
   14228:	sub	sp, fp, #28
   1422c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14230:	cmp	r0, #4
   14234:	ldrbeq	r0, [r5, #20]
   14238:	cmpeq	r0, #1
   1423c:	beq	14270 <sprintf@plt+0x29e4>
   14240:	ldr	r1, [sp, #24]
   14244:	movw	r0, #61344	; 0xefa0
   14248:	movt	r0, #2
   1424c:	add	r0, r0, r1, lsl #2
   14250:	ldr	r1, [r0, #24]
   14254:	add	r1, r1, #1
   14258:	str	r1, [r0, #24]
   1425c:	mov	r0, r5
   14260:	bl	14298 <sprintf@plt+0x2a0c>
   14264:	mov	r0, sl
   14268:	sub	sp, fp, #28
   1426c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14270:	mov	r0, #292	; 0x124
   14274:	mov	r1, #2
   14278:	strh	r1, [r5, r0]
   1427c:	ldr	r0, [r7]
   14280:	str	r0, [r5, #296]	; 0x128
   14284:	ldrb	r0, [r5, #20]
   14288:	cmp	r0, #12
   1428c:	beq	13f8c <sprintf@plt+0x2700>
   14290:	b	14164 <sprintf@plt+0x28d8>
   14294:	bl	11754 <rb_outofmemory@plt>
   14298:	push	{r4, r5, fp, lr}
   1429c:	add	fp, sp, #8
   142a0:	mov	r4, r0
   142a4:	ldrb	r0, [r0, #277]	; 0x115
   142a8:	sub	r0, r0, #1
   142ac:	tst	r0, #255	; 0xff
   142b0:	strb	r0, [r4, #277]	; 0x115
   142b4:	beq	142e8 <sprintf@plt+0x2a5c>
   142b8:	ldrb	r5, [r4, #20]
   142bc:	cmp	r5, #1
   142c0:	cmpne	r5, #28
   142c4:	bne	14314 <sprintf@plt+0x2a88>
   142c8:	ldr	r1, [r4, #420]	; 0x1a4
   142cc:	add	r0, r4, #21
   142d0:	mov	r2, #256	; 0x100
   142d4:	bl	11628 <rb_strlcpy@plt>
   142d8:	strb	r5, [r4, #20]
   142dc:	mov	r0, r4
   142e0:	pop	{r4, r5, fp, lr}
   142e4:	b	1448c <sprintf@plt+0x2c00>
   142e8:	ldr	r1, [r4, #424]	; 0x1a8
   142ec:	ldm	r1, {r0, r2}
   142f0:	mov	r1, #0
   142f4:	blx	r2
   142f8:	ldr	r0, [r4, #8]
   142fc:	ldr	r1, [r4, #4]
   14300:	cmp	r0, #0
   14304:	beq	14344 <sprintf@plt+0x2ab8>
   14308:	str	r1, [r0, #4]
   1430c:	ldr	r1, [r4, #4]
   14310:	b	14350 <sprintf@plt+0x2ac4>
   14314:	cmp	r5, #12
   14318:	popne	{r4, r5, fp, pc}
   1431c:	add	r0, r4, #21
   14320:	add	r2, r4, #292	; 0x124
   14324:	mov	r1, #256	; 0x100
   14328:	mov	r3, #0
   1432c:	bl	13864 <sprintf@plt+0x1fd8>
   14330:	mov	r0, #12
   14334:	strb	r0, [r4, #20]
   14338:	mov	r0, r4
   1433c:	pop	{r4, r5, fp, lr}
   14340:	b	1448c <sprintf@plt+0x2c00>
   14344:	movw	r2, #61344	; 0xefa0
   14348:	movt	r2, #2
   1434c:	str	r1, [r2, #16]
   14350:	movw	r2, #61344	; 0xefa0
   14354:	add	r3, r1, #8
   14358:	cmp	r1, #0
   1435c:	movt	r2, #2
   14360:	addeq	r3, r2, #12
   14364:	str	r0, [r3]
   14368:	mov	r0, #0
   1436c:	str	r0, [r4, #4]
   14370:	str	r0, [r4, #8]
   14374:	ldr	r0, [r2, #20]
   14378:	sub	r0, r0, #1
   1437c:	str	r0, [r2, #20]
   14380:	ldr	r0, [r4, #420]	; 0x1a4
   14384:	cmp	r0, #0
   14388:	beq	14390 <sprintf@plt+0x2b04>
   1438c:	bl	1164c <free@plt>
   14390:	mov	r0, r4
   14394:	pop	{r4, r5, fp, lr}
   14398:	b	1164c <free@plt>
   1439c:	push	{r4, r5, r6, r7, fp, lr}
   143a0:	add	fp, sp, #16
   143a4:	sub	sp, sp, #8
   143a8:	mov	r5, r0
   143ac:	mov	r0, #1
   143b0:	mov	r1, #428	; 0x1ac
   143b4:	bl	115b0 <calloc@plt>
   143b8:	cmp	r0, #0
   143bc:	beq	14488 <sprintf@plt+0x2bfc>
   143c0:	mov	r4, r0
   143c4:	bl	116ac <rb_current_time@plt>
   143c8:	movw	r6, #61344	; 0xefa0
   143cc:	mov	r1, #3
   143d0:	add	r7, sp, #6
   143d4:	strb	r1, [r4, #277]	; 0x115
   143d8:	movt	r6, #2
   143dc:	mov	r1, #4
   143e0:	str	r0, [r4, #280]	; 0x118
   143e4:	str	r1, [r4, #284]	; 0x11c
   143e8:	str	r5, [r4, #424]	; 0x1a8
   143ec:	mov	r0, r7
   143f0:	mov	r1, #2
   143f4:	bl	117fc <rb_get_random@plt>
   143f8:	ldr	r0, [r6, #12]
   143fc:	ldrh	r1, [sp, #6]
   14400:	cmp	r0, #0
   14404:	mov	r2, r0
   14408:	beq	14434 <sprintf@plt+0x2ba8>
   1440c:	ldr	r3, [r2]
   14410:	ldr	r5, [r3, #12]
   14414:	cmp	r5, r1
   14418:	beq	1442c <sprintf@plt+0x2ba0>
   1441c:	ldr	r2, [r2, #8]
   14420:	cmp	r2, #0
   14424:	bne	1440c <sprintf@plt+0x2b80>
   14428:	b	14434 <sprintf@plt+0x2ba8>
   1442c:	cmp	r3, #0
   14430:	bne	143ec <sprintf@plt+0x2b60>
   14434:	cmp	r0, #0
   14438:	mov	r2, #0
   1443c:	str	r4, [r4]
   14440:	str	r2, [r4, #4]
   14444:	str	r0, [r4, #8]
   14448:	str	r1, [r4, #12]
   1444c:	beq	1445c <sprintf@plt+0x2bd0>
   14450:	add	r0, r0, #4
   14454:	str	r4, [r0]
   14458:	b	1446c <sprintf@plt+0x2be0>
   1445c:	mov	r0, r6
   14460:	ldr	r1, [r0, #16]!
   14464:	cmp	r1, #0
   14468:	streq	r4, [r0]
   1446c:	str	r4, [r6, #12]
   14470:	ldr	r0, [r6, #20]
   14474:	add	r0, r0, #1
   14478:	str	r0, [r6, #20]
   1447c:	mov	r0, r4
   14480:	sub	sp, fp, #16
   14484:	pop	{r4, r5, r6, r7, fp, pc}
   14488:	bl	11754 <rb_outofmemory@plt>
   1448c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14490:	add	fp, sp, #28
   14494:	sub	sp, sp, #12
   14498:	sub	sp, sp, #1024	; 0x400
   1449c:	add	r5, sp, #8
   144a0:	mov	r9, r0
   144a4:	mov	r1, #0
   144a8:	mov	r2, #1024	; 0x400
   144ac:	mov	r4, #1024	; 0x400
   144b0:	mov	r0, r5
   144b4:	bl	115e0 <memset@plt>
   144b8:	ldrb	r2, [r9, #20]
   144bc:	add	r0, r9, #21
   144c0:	mov	r1, #1
   144c4:	mov	r3, r5
   144c8:	str	r4, [sp]
   144cc:	bl	150a8 <sprintf@plt+0x381c>
   144d0:	cmp	r0, #1
   144d4:	blt	14670 <sprintf@plt+0x2de4>
   144d8:	ldr	r1, [sp, #8]
   144dc:	mov	r5, r0
   144e0:	ldrh	r0, [r9, #12]
   144e4:	movw	r7, #61344	; 0xefa0
   144e8:	movt	r7, #2
   144ec:	bfc	r1, #0, #16
   144f0:	orr	r0, r1, r0
   144f4:	str	r0, [sp, #8]
   144f8:	ldrb	r0, [r9, #278]	; 0x116
   144fc:	add	r1, r0, #1
   14500:	strb	r1, [r9, #278]	; 0x116
   14504:	ldr	r0, [r7, #8]
   14508:	add	r0, r0, #1
   1450c:	str	r0, [r7, #8]
   14510:	movw	r0, #61408	; 0xefe0
   14514:	movt	r0, #2
   14518:	ldr	r0, [r0]
   1451c:	cmp	r0, #1
   14520:	blt	14670 <sprintf@plt+0x2de4>
   14524:	mvn	r2, #0
   14528:	mov	r8, #0
   1452c:	add	r6, sp, #8
   14530:	uxtab	r4, r2, r1
   14534:	add	r1, r4, r8
   14538:	sdiv	r2, r1, r0
   1453c:	mls	sl, r2, r0, r1
   14540:	add	r1, r7, sl, lsl #2
   14544:	ldr	r1, [r1, #24]
   14548:	cmp	r1, #0
   1454c:	beq	1458c <sprintf@plt+0x2d00>
   14550:	sub	r3, r1, #1
   14554:	mov	r2, #243	; 0xf3
   14558:	ldr	r1, [r7, #8]
   1455c:	cmp	r3, #3
   14560:	movwls	r2, #37108	; 0x90f4
   14564:	movtls	r2, #1
   14568:	ldrls	r2, [r2, r3, lsl #2]
   1456c:	sdiv	r3, r1, r2
   14570:	mls	r1, r3, r2, r1
   14574:	cmp	r1, #0
   14578:	beq	1458c <sprintf@plt+0x2d00>
   1457c:	add	r8, r8, #1
   14580:	cmp	r8, r0
   14584:	blt	14534 <sprintf@plt+0x2ca8>
   14588:	b	145e8 <sprintf@plt+0x2d5c>
   1458c:	ldr	r0, [r7]
   14590:	bl	11544 <rb_get_fd@plt>
   14594:	movw	r2, #62112	; 0xf2a0
   14598:	lsl	r1, sl, #7
   1459c:	mov	r3, #0
   145a0:	movt	r2, #2
   145a4:	ldrh	r1, [r2, r1]!	; <UNPREDICTABLE>
   145a8:	cmp	r1, #2
   145ac:	mov	r1, #28
   145b0:	str	r2, [sp]
   145b4:	mov	r2, r5
   145b8:	movweq	r1, #16
   145bc:	str	r1, [sp, #4]
   145c0:	mov	r1, r6
   145c4:	bl	115c8 <sendto@plt>
   145c8:	cmp	r0, r5
   145cc:	beq	14678 <sprintf@plt+0x2dec>
   145d0:	movw	r0, #61408	; 0xefe0
   145d4:	movt	r0, #2
   145d8:	ldr	r0, [r0]
   145dc:	add	r8, r8, #1
   145e0:	cmp	r8, r0
   145e4:	blt	14534 <sprintf@plt+0x2ca8>
   145e8:	cmp	r0, #1
   145ec:	blt	14670 <sprintf@plt+0x2de4>
   145f0:	mov	r6, #0
   145f4:	add	r8, sp, #8
   145f8:	add	r1, r4, r6
   145fc:	sdiv	r2, r1, r0
   14600:	mls	sl, r2, r0, r1
   14604:	add	r1, r7, sl, lsl #2
   14608:	ldr	r1, [r1, #24]
   1460c:	cmp	r1, #0
   14610:	beq	14664 <sprintf@plt+0x2dd8>
   14614:	ldr	r0, [r7]
   14618:	bl	11544 <rb_get_fd@plt>
   1461c:	movw	r2, #62112	; 0xf2a0
   14620:	lsl	r1, sl, #7
   14624:	mov	r3, #0
   14628:	movt	r2, #2
   1462c:	ldrh	r1, [r2, r1]!	; <UNPREDICTABLE>
   14630:	cmp	r1, #2
   14634:	mov	r1, #28
   14638:	str	r2, [sp]
   1463c:	mov	r2, r5
   14640:	movweq	r1, #16
   14644:	str	r1, [sp, #4]
   14648:	mov	r1, r8
   1464c:	bl	115c8 <sendto@plt>
   14650:	cmp	r0, r5
   14654:	beq	14678 <sprintf@plt+0x2dec>
   14658:	movw	r0, #61408	; 0xefe0
   1465c:	movt	r0, #2
   14660:	ldr	r0, [r0]
   14664:	add	r6, r6, #1
   14668:	cmp	r6, r0
   1466c:	blt	145f8 <sprintf@plt+0x2d6c>
   14670:	sub	sp, fp, #28
   14674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14678:	cmn	sl, #1
   1467c:	strne	sl, [r9, #288]	; 0x120
   14680:	sub	sp, fp, #28
   14684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14688:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1468c:	add	fp, sp, #28
   14690:	sub	sp, sp, #4
   14694:	vpush	{d8-d9}
   14698:	sub	sp, sp, #168	; 0xa8
   1469c:	movw	r6, #61408	; 0xefe0
   146a0:	mov	r0, #0
   146a4:	movw	r1, #38615	; 0x96d7
   146a8:	movt	r6, #2
   146ac:	movt	r1, #1
   146b0:	str	r0, [r6]
   146b4:	movw	r0, #37134	; 0x910e
   146b8:	movt	r0, #1
   146bc:	bl	115d4 <fopen@plt>
   146c0:	cmp	r0, #0
   146c4:	beq	148c0 <sprintf@plt+0x3034>
   146c8:	mov	r4, r0
   146cc:	add	r5, sp, #4
   146d0:	mov	r1, #128	; 0x80
   146d4:	mov	r0, r5
   146d8:	mov	r2, r4
   146dc:	bl	1161c <fgets_unlocked@plt>
   146e0:	cmp	r0, #0
   146e4:	beq	148b0 <sprintf@plt+0x3024>
   146e8:	sub	r0, fp, #80	; 0x50
   146ec:	movw	r7, #39249	; 0x9951
   146f0:	sub	r9, r5, #1
   146f4:	mov	r6, #0
   146f8:	vmov.i32	q4, #0	; 0x00000000
   146fc:	add	r0, r0, #4
   14700:	movt	r7, #1
   14704:	str	r0, [sp]
   14708:	b	14858 <sprintf@plt+0x2fcc>
   1470c:	cmp	r2, #59	; 0x3b
   14710:	mov	r8, sl
   14714:	beq	14898 <sprintf@plt+0x300c>
   14718:	ldrb	r2, [r8, #1]!
   1471c:	cmp	r2, #0
   14720:	beq	14734 <sprintf@plt+0x2ea8>
   14724:	add	r3, r1, r2, lsl #1
   14728:	ldrh	r3, [r3]
   1472c:	ands	r3, r3, #8192	; 0x2000
   14730:	beq	14718 <sprintf@plt+0x2e8c>
   14734:	cmp	r2, #0
   14738:	beq	14898 <sprintf@plt+0x300c>
   1473c:	strb	r6, [r8]
   14740:	ldr	r0, [r0]
   14744:	ldrb	r1, [r8, #1]!
   14748:	add	r1, r0, r1, lsl #1
   1474c:	ldrb	r1, [r1, #1]
   14750:	tst	r1, #32
   14754:	bne	14744 <sprintf@plt+0x2eb8>
   14758:	movw	r1, #37151	; 0x911f
   1475c:	mov	r0, r8
   14760:	movt	r1, #1
   14764:	bl	11850 <strpbrk@plt>
   14768:	movw	r1, #37154	; 0x9122
   1476c:	cmp	r0, #0
   14770:	strbne	r6, [r0]
   14774:	mov	r0, sl
   14778:	movt	r1, #1
   1477c:	bl	11670 <rb_strcasecmp@plt>
   14780:	cmp	r0, #0
   14784:	beq	14840 <sprintf@plt+0x2fb4>
   14788:	movw	r1, #37161	; 0x9129
   1478c:	mov	r0, sl
   14790:	movt	r1, #1
   14794:	bl	11670 <rb_strcasecmp@plt>
   14798:	cmp	r0, #0
   1479c:	bne	14898 <sprintf@plt+0x300c>
   147a0:	movw	r0, #61408	; 0xefe0
   147a4:	movt	r0, #2
   147a8:	ldr	r0, [r0]
   147ac:	cmp	r0, #9
   147b0:	bgt	14898 <sprintf@plt+0x300c>
   147b4:	ldr	r0, [sp]
   147b8:	mov	r1, #12
   147bc:	sub	r2, fp, #80	; 0x50
   147c0:	sub	r3, fp, #84	; 0x54
   147c4:	vst1.32	{d8-d9}, [r0], r1
   147c8:	movw	r1, #37154	; 0x9122
   147cc:	vst1.32	{d8-d9}, [r0]
   147d0:	mov	r0, #5
   147d4:	movt	r1, #1
   147d8:	str	r0, [fp, #-80]	; 0xffffffb0
   147dc:	mov	r0, #2
   147e0:	str	r0, [fp, #-72]	; 0xffffffb8
   147e4:	mov	r0, r8
   147e8:	bl	1167c <getaddrinfo@plt>
   147ec:	cmp	r0, #0
   147f0:	bne	14898 <sprintf@plt+0x300c>
   147f4:	ldr	r8, [fp, #-84]	; 0xffffffac
   147f8:	cmp	r8, #0
   147fc:	beq	14898 <sprintf@plt+0x300c>
   14800:	movw	r0, #61408	; 0xefe0
   14804:	ldr	r2, [r8, #16]
   14808:	ldr	r1, [r8, #20]
   1480c:	movt	r0, #2
   14810:	ldr	sl, [r0]
   14814:	movw	r0, #62112	; 0xf2a0
   14818:	movt	r0, #2
   1481c:	add	r0, r0, sl, lsl #7
   14820:	bl	116c4 <memcpy@plt>
   14824:	movw	r1, #61408	; 0xefe0
   14828:	add	r0, sl, #1
   1482c:	movt	r1, #2
   14830:	str	r0, [r1]
   14834:	mov	r0, r8
   14838:	bl	115ec <freeaddrinfo@plt>
   1483c:	b	14898 <sprintf@plt+0x300c>
   14840:	movw	r0, #61856	; 0xf1a0
   14844:	mov	r1, r8
   14848:	mov	r2, #256	; 0x100
   1484c:	movt	r0, #2
   14850:	bl	11628 <rb_strlcpy@plt>
   14854:	b	14898 <sprintf@plt+0x300c>
   14858:	mov	r0, r5
   1485c:	mov	r1, r7
   14860:	bl	11850 <strpbrk@plt>
   14864:	cmp	r0, #0
   14868:	strbne	r6, [r0]
   1486c:	bl	11760 <__ctype_b_loc@plt>
   14870:	ldr	r1, [r0]
   14874:	mov	sl, r9
   14878:	ldrb	r2, [sl, #1]!
   1487c:	add	r3, r1, r2, lsl #1
   14880:	ldrb	r3, [r3, #1]
   14884:	tst	r3, #32
   14888:	bne	14878 <sprintf@plt+0x2fec>
   1488c:	cmp	r2, #0
   14890:	cmpne	r2, #35	; 0x23
   14894:	bne	1470c <sprintf@plt+0x2e80>
   14898:	mov	r0, r5
   1489c:	mov	r1, #128	; 0x80
   148a0:	mov	r2, r4
   148a4:	bl	1161c <fgets_unlocked@plt>
   148a8:	cmp	r0, #0
   148ac:	bne	14858 <sprintf@plt+0x2fcc>
   148b0:	mov	r0, r4
   148b4:	bl	11574 <fclose@plt>
   148b8:	movw	r6, #61408	; 0xefe0
   148bc:	movt	r6, #2
   148c0:	ldr	r0, [r6]
   148c4:	cmp	r0, #0
   148c8:	bne	1494c <sprintf@plt+0x30c0>
   148cc:	add	r2, sp, #4
   148d0:	vmov.i32	q8, #0	; 0x00000000
   148d4:	movw	r1, #37154	; 0x9122
   148d8:	sub	r3, fp, #80	; 0x50
   148dc:	add	r0, r2, #4
   148e0:	movt	r1, #1
   148e4:	vst1.32	{d16-d17}, [r0]
   148e8:	add	r0, r2, #16
   148ec:	vst1.32	{d16-d17}, [r0]
   148f0:	mov	r0, #5
   148f4:	str	r0, [sp, #4]
   148f8:	mov	r0, #2
   148fc:	str	r0, [sp, #12]
   14900:	movw	r0, #37124	; 0x9104
   14904:	movt	r0, #1
   14908:	bl	1167c <getaddrinfo@plt>
   1490c:	cmp	r0, #0
   14910:	bne	1494c <sprintf@plt+0x30c0>
   14914:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14918:	cmp	r4, #0
   1491c:	beq	1494c <sprintf@plt+0x30c0>
   14920:	ldr	r5, [r6]
   14924:	ldr	r2, [r4, #16]
   14928:	ldr	r1, [r4, #20]
   1492c:	movw	r0, #62112	; 0xf2a0
   14930:	movt	r0, #2
   14934:	add	r0, r0, r5, lsl #7
   14938:	bl	116c4 <memcpy@plt>
   1493c:	add	r0, r5, #1
   14940:	str	r0, [r6]
   14944:	mov	r0, r4
   14948:	bl	115ec <freeaddrinfo@plt>
   1494c:	mov	r0, #0
   14950:	sub	sp, fp, #48	; 0x30
   14954:	vpop	{d8-d9}
   14958:	add	sp, sp, #4
   1495c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14964:	add	fp, sp, #28
   14968:	sub	sp, sp, #284	; 0x11c
   1496c:	cmp	r2, r0
   14970:	bcc	14f9c <sprintf@plt+0x3710>
   14974:	mov	ip, r1
   14978:	cmp	r2, r1
   1497c:	bcs	14f9c <sprintf@plt+0x3710>
   14980:	ldrb	r6, [r2]
   14984:	ldr	r1, [fp, #8]
   14988:	mov	r5, r3
   1498c:	cmp	r6, #0
   14990:	beq	14f30 <sprintf@plt+0x36a4>
   14994:	str	r0, [sp, #20]
   14998:	sub	r0, ip, r0
   1499c:	add	r7, sp, #25
   149a0:	str	r2, [sp, #4]
   149a4:	add	r1, r2, #1
   149a8:	mvn	r4, #0
   149ac:	mov	r8, #0
   149b0:	mov	sl, #0
   149b4:	str	r5, [sp, #8]
   149b8:	str	r0, [sp, #16]
   149bc:	rsb	r0, r2, #1
   149c0:	mov	r2, r7
   149c4:	str	r0, [sp, #12]
   149c8:	ands	r3, r6, #192	; 0xc0
   149cc:	beq	14a14 <sprintf@plt+0x3188>
   149d0:	cmp	r3, #192	; 0xc0
   149d4:	beq	14a6c <sprintf@plt+0x31e0>
   149d8:	cmp	r3, #64	; 0x40
   149dc:	uxtbeq	r3, r6
   149e0:	cmpeq	r3, #65	; 0x41
   149e4:	bne	14f9c <sprintf@plt+0x3710>
   149e8:	ldrb	r3, [r1]
   149ec:	mov	r0, #1
   149f0:	add	r5, r3, #7
   149f4:	cmp	r3, #0
   149f8:	add	r5, r0, r5, lsr #3
   149fc:	movweq	r5, #33	; 0x21
   14a00:	add	r3, sl, #1
   14a04:	add	sl, r5, r3
   14a08:	cmp	sl, #254	; 0xfe
   14a0c:	ble	14a28 <sprintf@plt+0x319c>
   14a10:	b	14f9c <sprintf@plt+0x3710>
   14a14:	uxtb	r5, r6
   14a18:	add	r3, sl, #1
   14a1c:	add	sl, r5, r3
   14a20:	cmp	sl, #254	; 0xfe
   14a24:	bgt	14f9c <sprintf@plt+0x3710>
   14a28:	add	r9, r1, r5
   14a2c:	cmp	r9, ip
   14a30:	bcs	14f9c <sprintf@plt+0x3710>
   14a34:	strb	r6, [r2]
   14a38:	add	r0, r7, r3
   14a3c:	mov	r2, r5
   14a40:	mov	r6, ip
   14a44:	bl	116c4 <memcpy@plt>
   14a48:	add	r0, r8, r5
   14a4c:	mov	ip, r6
   14a50:	mov	r1, r9
   14a54:	add	r8, r0, #1
   14a58:	ldrb	r6, [r1], #1
   14a5c:	add	r2, r7, sl
   14a60:	cmp	r6, #0
   14a64:	bne	149c8 <sprintf@plt+0x313c>
   14a68:	b	14abc <sprintf@plt+0x3230>
   14a6c:	cmp	r1, ip
   14a70:	ldrbcc	r2, [r1]
   14a74:	andcc	r0, r6, #63	; 0x3f
   14a78:	orrcc	r0, r2, r0, lsl #8
   14a7c:	ldrcc	r2, [sp, #20]
   14a80:	addcc	r0, r2, r0
   14a84:	cmpcc	r0, ip
   14a88:	bcs	14f9c <sprintf@plt+0x3710>
   14a8c:	ldr	r2, [sp, #12]
   14a90:	cmp	r4, #0
   14a94:	add	r8, r8, #2
   14a98:	addlt	r4, r2, r1
   14a9c:	ldr	r1, [sp, #16]
   14aa0:	cmp	r8, r1
   14aa4:	mov	r1, r0
   14aa8:	bge	14f9c <sprintf@plt+0x3710>
   14aac:	ldrb	r6, [r1], #1
   14ab0:	add	r2, r7, sl
   14ab4:	cmp	r6, #0
   14ab8:	bne	149c8 <sprintf@plt+0x313c>
   14abc:	ldr	r5, [sp, #8]
   14ac0:	mov	r0, #0
   14ac4:	cmn	r4, #1
   14ac8:	strb	r0, [r2]
   14acc:	mov	r0, r4
   14ad0:	bgt	14ae4 <sprintf@plt+0x3258>
   14ad4:	ldr	r0, [sp, #4]
   14ad8:	sub	r0, r1, r0
   14adc:	cmn	r0, #1
   14ae0:	beq	14fa8 <sprintf@plt+0x371c>
   14ae4:	ldr	r2, [fp, #8]
   14ae8:	ldrb	r7, [sp, #25]
   14aec:	add	sl, r5, r2
   14af0:	cmp	r7, #0
   14af4:	beq	14f90 <sprintf@plt+0x3704>
   14af8:	movw	r1, #37172	; 0x9134
   14afc:	add	r9, sp, #25
   14b00:	mov	ip, #92	; 0x5c
   14b04:	mov	r8, #46	; 0x2e
   14b08:	mov	r4, r5
   14b0c:	str	r0, [sp, #12]
   14b10:	movt	r1, #1
   14b14:	uxtb	r2, r7
   14b18:	cmp	r2, #192	; 0xc0
   14b1c:	bcs	14f9c <sprintf@plt+0x3710>
   14b20:	cmp	r4, r5
   14b24:	mov	r3, r7
   14b28:	mov	r6, r5
   14b2c:	beq	14b44 <sprintf@plt+0x32b8>
   14b30:	cmp	r4, sl
   14b34:	bcs	14f9c <sprintf@plt+0x3710>
   14b38:	strb	r8, [r4], #1
   14b3c:	ldrb	r3, [r9]
   14b40:	mov	r6, r4
   14b44:	and	r0, r3, #192	; 0xc0
   14b48:	add	lr, r9, #1
   14b4c:	cmp	r0, #64	; 0x40
   14b50:	beq	14b70 <sprintf@plt+0x32e4>
   14b54:	cmp	r0, #192	; 0xc0
   14b58:	beq	14f9c <sprintf@plt+0x3710>
   14b5c:	uxtb	r0, r3
   14b60:	add	r3, r6, r0
   14b64:	cmp	r3, sl
   14b68:	bcc	14ba0 <sprintf@plt+0x3314>
   14b6c:	b	14f9c <sprintf@plt+0x3710>
   14b70:	uxtb	r0, r3
   14b74:	cmp	r0, #65	; 0x41
   14b78:	bne	14f9c <sprintf@plt+0x3710>
   14b7c:	ldrb	r3, [lr]
   14b80:	mov	r4, #1
   14b84:	add	r0, r3, #7
   14b88:	cmp	r3, #0
   14b8c:	add	r0, r4, r0, lsr #3
   14b90:	movweq	r0, #33	; 0x21
   14b94:	add	r3, r6, r0
   14b98:	cmp	r3, sl
   14b9c:	bcs	14f9c <sprintf@plt+0x3710>
   14ba0:	and	r3, r7, #192	; 0xc0
   14ba4:	cmp	r3, #64	; 0x40
   14ba8:	bne	14c80 <sprintf@plt+0x33f4>
   14bac:	cmp	r2, #65	; 0x41
   14bb0:	bne	14fb4 <sprintf@plt+0x3728>
   14bb4:	ldrb	r4, [lr]
   14bb8:	mov	r0, #7
   14bbc:	cmp	r4, #0
   14bc0:	movweq	r4, #256	; 0x100
   14bc4:	cmp	r4, #9
   14bc8:	add	r2, r4, #3
   14bcc:	movwhi	r0, #8
   14bd0:	cmp	r4, #99	; 0x63
   14bd4:	movwhi	r0, #9
   14bd8:	add	r0, r0, r2, lsr #2
   14bdc:	add	r0, r6, r0
   14be0:	cmp	r0, sl
   14be4:	bcs	14f9c <sprintf@plt+0x3710>
   14be8:	movw	r0, #23388	; 0x5b5c
   14bec:	mov	r7, r6
   14bf0:	add	r9, r9, #2
   14bf4:	cmp	r4, #8
   14bf8:	movt	r0, #120	; 0x78
   14bfc:	str	r0, [r7], #3
   14c00:	bcc	14e6c <sprintf@plt+0x35e0>
   14c04:	mvn	r0, r4
   14c08:	add	r8, r4, #8
   14c0c:	str	r6, [sp, #20]
   14c10:	mov	r6, lr
   14c14:	cmn	r0, #16
   14c18:	mvnls	r0, #15
   14c1c:	add	r5, r8, r0
   14c20:	lsr	r0, r5, #3
   14c24:	str	r0, [sp, #16]
   14c28:	ldrb	r2, [r9], #1
   14c2c:	mov	r0, r7
   14c30:	bl	1188c <sprintf@plt>
   14c34:	movw	r1, #37172	; 0x9134
   14c38:	sub	r8, r8, #8
   14c3c:	add	r7, r7, r0
   14c40:	movt	r1, #1
   14c44:	cmp	r8, #15
   14c48:	bgt	14c28 <sprintf@plt+0x339c>
   14c4c:	bic	r0, r5, #7
   14c50:	sub	r2, r4, #8
   14c54:	ldr	r5, [sp, #8]
   14c58:	sub	r0, r2, r0
   14c5c:	ldr	r2, [sp, #16]
   14c60:	add	r2, r6, r2
   14c64:	ldr	r6, [sp, #20]
   14c68:	add	r9, r2, #2
   14c6c:	add	lr, r2, #1
   14c70:	mov	r8, r6
   14c74:	cmp	r0, #5
   14c78:	bge	14e7c <sprintf@plt+0x35f0>
   14c7c:	b	14e90 <sprintf@plt+0x3604>
   14c80:	cmp	r0, #1
   14c84:	blt	14f04 <sprintf@plt+0x3678>
   14c88:	add	r0, r0, #1
   14c8c:	mov	r4, r6
   14c90:	mov	r9, lr
   14c94:	ldrb	r2, [r9], #1
   14c98:	sub	r3, r2, #34	; 0x22
   14c9c:	cmp	r3, #58	; 0x3a
   14ca0:	bhi	14dc0 <sprintf@plt+0x3534>
   14ca4:	add	r7, pc, #0
   14ca8:	ldr	pc, [r7, r3, lsl #2]
   14cac:	muleq	r1, r8, sp
   14cb0:	andeq	r4, r1, r0, asr #27
   14cb4:	muleq	r1, r8, sp
   14cb8:	andeq	r4, r1, r0, asr #27
   14cbc:	andeq	r4, r1, r0, asr #27
   14cc0:	andeq	r4, r1, r0, asr #27
   14cc4:	muleq	r1, r8, sp
   14cc8:	muleq	r1, r8, sp
   14ccc:	andeq	r4, r1, r0, asr #27
   14cd0:	andeq	r4, r1, r0, asr #27
   14cd4:	andeq	r4, r1, r0, asr #27
   14cd8:	andeq	r4, r1, r0, asr #27
   14cdc:	muleq	r1, r8, sp
   14ce0:	andeq	r4, r1, r0, asr #27
   14ce4:	andeq	r4, r1, r0, asr #27
   14ce8:	andeq	r4, r1, r0, asr #27
   14cec:	andeq	r4, r1, r0, asr #27
   14cf0:	andeq	r4, r1, r0, asr #27
   14cf4:	andeq	r4, r1, r0, asr #27
   14cf8:	andeq	r4, r1, r0, asr #27
   14cfc:	andeq	r4, r1, r0, asr #27
   14d00:	andeq	r4, r1, r0, asr #27
   14d04:	andeq	r4, r1, r0, asr #27
   14d08:	andeq	r4, r1, r0, asr #27
   14d0c:	andeq	r4, r1, r0, asr #27
   14d10:	muleq	r1, r8, sp
   14d14:	andeq	r4, r1, r0, asr #27
   14d18:	andeq	r4, r1, r0, asr #27
   14d1c:	andeq	r4, r1, r0, asr #27
   14d20:	andeq	r4, r1, r0, asr #27
   14d24:	muleq	r1, r8, sp
   14d28:	andeq	r4, r1, r0, asr #27
   14d2c:	andeq	r4, r1, r0, asr #27
   14d30:	andeq	r4, r1, r0, asr #27
   14d34:	andeq	r4, r1, r0, asr #27
   14d38:	andeq	r4, r1, r0, asr #27
   14d3c:	andeq	r4, r1, r0, asr #27
   14d40:	andeq	r4, r1, r0, asr #27
   14d44:	andeq	r4, r1, r0, asr #27
   14d48:	andeq	r4, r1, r0, asr #27
   14d4c:	andeq	r4, r1, r0, asr #27
   14d50:	andeq	r4, r1, r0, asr #27
   14d54:	andeq	r4, r1, r0, asr #27
   14d58:	andeq	r4, r1, r0, asr #27
   14d5c:	andeq	r4, r1, r0, asr #27
   14d60:	andeq	r4, r1, r0, asr #27
   14d64:	andeq	r4, r1, r0, asr #27
   14d68:	andeq	r4, r1, r0, asr #27
   14d6c:	andeq	r4, r1, r0, asr #27
   14d70:	andeq	r4, r1, r0, asr #27
   14d74:	andeq	r4, r1, r0, asr #27
   14d78:	andeq	r4, r1, r0, asr #27
   14d7c:	andeq	r4, r1, r0, asr #27
   14d80:	andeq	r4, r1, r0, asr #27
   14d84:	andeq	r4, r1, r0, asr #27
   14d88:	andeq	r4, r1, r0, asr #27
   14d8c:	andeq	r4, r1, r0, asr #27
   14d90:	andeq	r4, r1, r0, asr #27
   14d94:	muleq	r1, r8, sp
   14d98:	add	r3, r4, #1
   14d9c:	cmp	r3, sl
   14da0:	bcs	14f9c <sprintf@plt+0x3710>
   14da4:	strb	r2, [r4, #1]
   14da8:	strb	ip, [r4]
   14dac:	add	r4, r4, #2
   14db0:	sub	r0, r0, #1
   14db4:	cmp	r0, #1
   14db8:	bgt	14c94 <sprintf@plt+0x3408>
   14dbc:	b	14f0c <sprintf@plt+0x3680>
   14dc0:	sub	r3, r2, #33	; 0x21
   14dc4:	cmp	r3, #94	; 0x5e
   14dc8:	bcc	14e50 <sprintf@plt+0x35c4>
   14dcc:	add	r3, r4, #3
   14dd0:	cmp	r3, sl
   14dd4:	bcs	14f9c <sprintf@plt+0x3710>
   14dd8:	movw	r3, #34079	; 0x851f
   14ddc:	movw	r8, #52429	; 0xcccd
   14de0:	strb	ip, [r4]
   14de4:	movt	r3, #20971	; 0x51eb
   14de8:	movt	r8, #52428	; 0xcccc
   14dec:	umull	r3, r7, r2, r3
   14df0:	movw	r3, #37186	; 0x9142
   14df4:	movt	r3, #1
   14df8:	mov	lr, r3
   14dfc:	ldrb	r3, [r3, r7, lsr #5]
   14e00:	strb	r3, [r4, #1]
   14e04:	umull	r3, r6, r2, r8
   14e08:	lsr	r3, r6, #3
   14e0c:	mov	r6, #100	; 0x64
   14e10:	add	r3, r3, r3, lsl #2
   14e14:	sub	r3, r2, r3, lsl #1
   14e18:	ldrb	r3, [lr, r3]
   14e1c:	strb	r3, [r4, #3]
   14e20:	lsr	r3, r7, #5
   14e24:	mls	r2, r3, r6, r2
   14e28:	uxtb	r2, r2
   14e2c:	umull	r2, r3, r2, r8
   14e30:	mov	r8, #46	; 0x2e
   14e34:	ldrb	r2, [lr, r3, lsr #3]
   14e38:	strb	r2, [r4, #2]
   14e3c:	add	r4, r4, #4
   14e40:	sub	r0, r0, #1
   14e44:	cmp	r0, #1
   14e48:	bgt	14c94 <sprintf@plt+0x3408>
   14e4c:	b	14f0c <sprintf@plt+0x3680>
   14e50:	cmp	r4, sl
   14e54:	bcs	14f9c <sprintf@plt+0x3710>
   14e58:	strb	r2, [r4], #1
   14e5c:	sub	r0, r0, #1
   14e60:	cmp	r0, #1
   14e64:	bgt	14c94 <sprintf@plt+0x3408>
   14e68:	b	14f0c <sprintf@plt+0x3680>
   14e6c:	mov	r0, r4
   14e70:	mov	r8, r6
   14e74:	cmp	r0, #5
   14e78:	blt	14e90 <sprintf@plt+0x3604>
   14e7c:	ldrb	ip, [r9]
   14e80:	mov	r6, lr
   14e84:	mov	r3, #255	; 0xff
   14e88:	mov	r2, #8
   14e8c:	b	14eb4 <sprintf@plt+0x3628>
   14e90:	cmp	r0, #1
   14e94:	blt	14ecc <sprintf@plt+0x3640>
   14e98:	ldrb	r1, [r9]
   14e9c:	mov	r6, lr
   14ea0:	mov	r3, #15
   14ea4:	mov	r2, #4
   14ea8:	lsr	ip, r1, #4
   14eac:	movw	r1, #37177	; 0x9139
   14eb0:	movt	r1, #1
   14eb4:	sub	r0, r2, r0
   14eb8:	and	r2, ip, r3, lsl r0
   14ebc:	mov	r0, r7
   14ec0:	bl	1188c <sprintf@plt>
   14ec4:	add	r7, r7, r0
   14ec8:	add	r9, r6, #2
   14ecc:	movw	r1, #37181	; 0x913d
   14ed0:	mov	r0, r7
   14ed4:	mov	r2, r4
   14ed8:	movt	r1, #1
   14edc:	bl	1188c <sprintf@plt>
   14ee0:	add	r4, r7, r0
   14ee4:	mov	ip, #92	; 0x5c
   14ee8:	sub	r1, r4, r8
   14eec:	mov	r8, #46	; 0x2e
   14ef0:	cmp	r1, #0
   14ef4:	movw	r1, #37172	; 0x9134
   14ef8:	movt	r1, #1
   14efc:	bge	14f0c <sprintf@plt+0x3680>
   14f00:	b	14f9c <sprintf@plt+0x3710>
   14f04:	mov	r9, lr
   14f08:	mov	r4, r6
   14f0c:	ldrb	r7, [r9]
   14f10:	cmp	r7, #0
   14f14:	bne	14b14 <sprintf@plt+0x3288>
   14f18:	ldr	r2, [fp, #8]
   14f1c:	ldr	r0, [sp, #12]
   14f20:	cmp	r4, r5
   14f24:	mov	r1, r2
   14f28:	bne	14f54 <sprintf@plt+0x36c8>
   14f2c:	b	14f40 <sprintf@plt+0x36b4>
   14f30:	mov	r0, #0
   14f34:	add	sl, r5, r1
   14f38:	strb	r0, [sp, #25]
   14f3c:	mov	r0, #1
   14f40:	cmp	r1, #0
   14f44:	ble	14f9c <sprintf@plt+0x3710>
   14f48:	mov	r1, #46	; 0x2e
   14f4c:	mov	r4, r5
   14f50:	strb	r1, [r4], #1
   14f54:	cmp	r4, sl
   14f58:	bcs	14f9c <sprintf@plt+0x3710>
   14f5c:	mov	r1, #0
   14f60:	strb	r1, [r4], #1
   14f64:	sub	r1, r4, r5
   14f68:	cmn	r1, #1
   14f6c:	beq	14fa8 <sprintf@plt+0x371c>
   14f70:	cmp	r0, #1
   14f74:	blt	14f88 <sprintf@plt+0x36fc>
   14f78:	ldrb	r1, [r5]
   14f7c:	cmp	r1, #46	; 0x2e
   14f80:	moveq	r1, #0
   14f84:	strbeq	r1, [r5]
   14f88:	sub	sp, fp, #28
   14f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f90:	mov	r1, r2
   14f94:	cmp	r1, #0
   14f98:	bgt	14f48 <sprintf@plt+0x36bc>
   14f9c:	bl	11880 <__errno_location@plt>
   14fa0:	mov	r1, #90	; 0x5a
   14fa4:	str	r1, [r0]
   14fa8:	mvn	r0, #0
   14fac:	sub	sp, fp, #28
   14fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fb4:	bl	11880 <__errno_location@plt>
   14fb8:	mov	r1, #22
   14fbc:	b	14fa4 <sprintf@plt+0x3718>
   14fc0:	push	{r4, sl, fp, lr}
   14fc4:	add	fp, sp, #8
   14fc8:	cmp	r0, r1
   14fcc:	mov	lr, r0
   14fd0:	bcs	1503c <sprintf@plt+0x37b0>
   14fd4:	mov	ip, #1
   14fd8:	mov	lr, r0
   14fdc:	mov	r2, lr
   14fe0:	ldrb	r3, [r2], #1
   14fe4:	cmp	r3, #0
   14fe8:	beq	15028 <sprintf@plt+0x379c>
   14fec:	ands	r4, r3, #192	; 0xc0
   14ff0:	beq	15018 <sprintf@plt+0x378c>
   14ff4:	cmp	r4, #64	; 0x40
   14ff8:	bne	15030 <sprintf@plt+0x37a4>
   14ffc:	cmp	r3, #65	; 0x41
   15000:	bne	15048 <sprintf@plt+0x37bc>
   15004:	ldrb	r4, [r2]
   15008:	add	r3, r4, #7
   1500c:	cmp	r4, #0
   15010:	add	r3, ip, r3, lsr #3
   15014:	movweq	r3, #33	; 0x21
   15018:	add	lr, r2, r3
   1501c:	cmp	lr, r1
   15020:	bcc	14fdc <sprintf@plt+0x3750>
   15024:	b	1503c <sprintf@plt+0x37b0>
   15028:	mov	lr, r2
   1502c:	b	1503c <sprintf@plt+0x37b0>
   15030:	cmp	r4, #192	; 0xc0
   15034:	bne	15048 <sprintf@plt+0x37bc>
   15038:	add	lr, lr, #2
   1503c:	cmp	lr, r1
   15040:	subls	r0, lr, r0
   15044:	popls	{r4, sl, fp, pc}
   15048:	bl	11880 <__errno_location@plt>
   1504c:	mov	r1, #90	; 0x5a
   15050:	str	r1, [r0]
   15054:	mvn	r0, #0
   15058:	pop	{r4, sl, fp, pc}
   1505c:	ldrb	r1, [r0]
   15060:	ldrb	r0, [r0, #1]
   15064:	orr	r0, r0, r1, lsl #8
   15068:	bx	lr
   1506c:	ldr	r0, [r0]
   15070:	rev	r0, r0
   15074:	bx	lr
   15078:	strb	r0, [r1, #1]
   1507c:	lsr	r0, r0, #8
   15080:	strb	r0, [r1]
   15084:	bx	lr
   15088:	lsr	r2, r0, #16
   1508c:	strb	r0, [r1, #3]
   15090:	strb	r2, [r1, #1]
   15094:	lsr	r2, r0, #24
   15098:	lsr	r0, r0, #8
   1509c:	strb	r2, [r1]
   150a0:	strb	r0, [r1, #2]
   150a4:	bx	lr
   150a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150ac:	add	fp, sp, #28
   150b0:	sub	sp, sp, #396	; 0x18c
   150b4:	mov	r7, r0
   150b8:	mvn	r0, #0
   150bc:	cmp	r3, #0
   150c0:	beq	150f0 <sprintf@plt+0x3864>
   150c4:	ldr	r4, [fp, #8]
   150c8:	cmp	r4, #12
   150cc:	blt	150f0 <sprintf@plt+0x3864>
   150d0:	cmp	r4, #16
   150d4:	mov	r6, #0
   150d8:	mov	r5, #65536	; 0x10000
   150dc:	stm	r3, {r5, r6}
   150e0:	str	r6, [r3, #8]
   150e4:	str	r6, [sp, #52]	; 0x34
   150e8:	str	r3, [sp, #48]	; 0x30
   150ec:	bge	150f8 <sprintf@plt+0x386c>
   150f0:	sub	sp, fp, #28
   150f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150f8:	add	r4, sp, #129	; 0x81
   150fc:	str	r1, [sp, #40]	; 0x28
   15100:	str	r2, [sp, #28]
   15104:	str	r3, [sp, #36]	; 0x24
   15108:	add	r0, r4, #1
   1510c:	add	r1, r4, #255	; 0xff
   15110:	str	r0, [fp, #-40]	; 0xffffffd8
   15114:	str	r1, [sp, #44]	; 0x2c
   15118:	ldrb	r1, [r7]
   1511c:	cmp	r1, #0
   15120:	beq	154ec <sprintf@plt+0x3c60>
   15124:	sub	r0, fp, #40	; 0x28
   15128:	add	r3, r0, #4
   1512c:	str	r3, [sp, #24]
   15130:	movw	r5, #37186	; 0x9142
   15134:	mov	r0, #0
   15138:	str	r4, [sp, #32]
   1513c:	movt	r5, #1
   15140:	uxtb	r9, r1
   15144:	add	r8, r7, #1
   15148:	cmp	r0, #0
   1514c:	beq	15200 <sprintf@plt+0x3974>
   15150:	cmp	r9, #91	; 0x5b
   15154:	beq	15248 <sprintf@plt+0x39bc>
   15158:	mov	r0, r5
   1515c:	mov	r1, r9
   15160:	mov	r2, #11
   15164:	bl	1185c <memchr@plt>
   15168:	cmp	r0, #0
   1516c:	beq	15214 <sprintf@plt+0x3988>
   15170:	ldrb	r1, [r7, #1]
   15174:	mov	r6, #90	; 0x5a
   15178:	cmp	r1, #0
   1517c:	beq	158c0 <sprintf@plt+0x4034>
   15180:	mov	sl, r0
   15184:	mov	r0, r5
   15188:	mov	r2, #11
   1518c:	bl	1185c <memchr@plt>
   15190:	cmp	r0, #0
   15194:	ldrbne	r1, [r7, #2]
   15198:	cmpne	r1, #0
   1519c:	beq	158c0 <sprintf@plt+0x4034>
   151a0:	movw	r5, #37186	; 0x9142
   151a4:	mov	r4, r0
   151a8:	mov	r2, #11
   151ac:	movt	r5, #1
   151b0:	mov	r0, r5
   151b4:	bl	1185c <memchr@plt>
   151b8:	cmp	r0, #0
   151bc:	beq	158c0 <sprintf@plt+0x4034>
   151c0:	sub	r1, sl, r5
   151c4:	mov	r2, #100	; 0x64
   151c8:	sub	r0, r0, r5
   151cc:	mul	r1, r1, r2
   151d0:	sub	r2, r4, r5
   151d4:	add	r2, r2, r2, lsl #2
   151d8:	add	r1, r1, r2, lsl #1
   151dc:	add	r9, r1, r0
   151e0:	cmp	r9, #255	; 0xff
   151e4:	bgt	158c0 <sprintf@plt+0x4034>
   151e8:	add	r8, r7, #3
   151ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   151f0:	ldr	r1, [sp, #44]	; 0x2c
   151f4:	cmp	r0, r1
   151f8:	bcc	15224 <sprintf@plt+0x3998>
   151fc:	b	158bc <sprintf@plt+0x4030>
   15200:	mov	r0, #1
   15204:	cmp	r9, #92	; 0x5c
   15208:	beq	15234 <sprintf@plt+0x39a8>
   1520c:	cmp	r9, #46	; 0x2e
   15210:	beq	152f8 <sprintf@plt+0x3a6c>
   15214:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15218:	ldr	r1, [sp, #44]	; 0x2c
   1521c:	cmp	r0, r1
   15220:	bcs	158bc <sprintf@plt+0x4030>
   15224:	add	r1, r0, #1
   15228:	str	r1, [fp, #-40]	; 0xffffffd8
   1522c:	strb	r9, [r0]
   15230:	mov	r0, #0
   15234:	ldrb	r1, [r8]
   15238:	mov	r7, r8
   1523c:	cmp	r1, #0
   15240:	bne	15140 <sprintf@plt+0x38b4>
   15244:	b	158b0 <sprintf@plt+0x4024>
   15248:	mov	r0, r8
   1524c:	mov	r1, #93	; 0x5d
   15250:	bl	1158c <strchr@plt>
   15254:	cmp	r0, #0
   15258:	beq	158ec <sprintf@plt+0x4060>
   1525c:	mov	r4, r0
   15260:	mov	r0, #0
   15264:	add	r9, r4, #2
   15268:	str	r0, [fp, #-36]	; 0xffffffdc
   1526c:	sub	r0, r9, r8
   15270:	cmp	r0, #2
   15274:	blt	158ec <sprintf@plt+0x4060>
   15278:	ldrb	r0, [r7, #1]
   1527c:	cmp	r0, #120	; 0x78
   15280:	bne	158ec <sprintf@plt+0x4060>
   15284:	add	r8, r7, #2
   15288:	bl	11760 <__ctype_b_loc@plt>
   1528c:	ldrb	r1, [r8]
   15290:	ldr	r2, [r0]
   15294:	add	r2, r2, r1, lsl #1
   15298:	ldrb	r2, [r2, #1]
   1529c:	tst	r2, #16
   152a0:	beq	158ec <sprintf@plt+0x4060>
   152a4:	ldr	r2, [sp, #44]	; 0x2c
   152a8:	ldr	r3, [sp, #24]
   152ac:	mov	r5, #0
   152b0:	cmp	r2, r3
   152b4:	bls	153f4 <sprintf@plt+0x3b68>
   152b8:	cmp	r7, r4
   152bc:	mov	sl, #0
   152c0:	mov	r4, r3
   152c4:	mov	r2, #0
   152c8:	bcs	15400 <sprintf@plt+0x3b74>
   152cc:	ldr	r4, [sp, #24]
   152d0:	add	r8, r7, #3
   152d4:	mov	sl, #0
   152d8:	mov	r6, #0
   152dc:	mov	r5, #0
   152e0:	mov	r7, #0
   152e4:	mov	r3, #0
   152e8:	uxtb	r1, r1
   152ec:	cmp	r1, #47	; 0x2f
   152f0:	bne	1535c <sprintf@plt+0x3ad0>
   152f4:	b	153d8 <sprintf@plt+0x3b4c>
   152f8:	ldr	r2, [sp, #32]
   152fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15300:	mov	r6, #90	; 0x5a
   15304:	mvn	r0, r2
   15308:	add	r0, r1, r0
   1530c:	tst	r0, #192	; 0xc0
   15310:	bne	158c0 <sprintf@plt+0x4034>
   15314:	ldr	r1, [sp, #44]	; 0x2c
   15318:	cmp	r1, r2
   1531c:	bls	158c0 <sprintf@plt+0x4034>
   15320:	strb	r0, [r2]
   15324:	ldrb	r1, [r8]
   15328:	cmp	r1, #0
   1532c:	beq	1598c <sprintf@plt+0x4100>
   15330:	cmp	r0, #0
   15334:	cmpne	r1, #46	; 0x2e
   15338:	beq	158c0 <sprintf@plt+0x4034>
   1533c:	ldr	r4, [fp, #-40]	; 0xffffffd8
   15340:	add	r0, r4, #1
   15344:	str	r0, [fp, #-40]	; 0xffffffd8
   15348:	b	15480 <sprintf@plt+0x3bf4>
   1534c:	ldrb	r1, [r8], #1
   15350:	uxtb	r1, r1
   15354:	cmp	r1, #47	; 0x2f
   15358:	beq	153d8 <sprintf@plt+0x3b4c>
   1535c:	cmp	r1, #93	; 0x5d
   15360:	beq	15494 <sprintf@plt+0x3c08>
   15364:	ldr	r2, [r0]
   15368:	cmp	r3, #0
   1536c:	add	r2, r2, r1, lsl #1
   15370:	ldrh	r2, [r2]
   15374:	beq	15398 <sprintf@plt+0x3b0c>
   15378:	tst	r2, #2048	; 0x800
   1537c:	beq	158ec <sprintf@plt+0x4060>
   15380:	cmp	r7, #0
   15384:	bne	153dc <sprintf@plt+0x3b50>
   15388:	cmp	r1, #48	; 0x30
   1538c:	beq	158ec <sprintf@plt+0x4060>
   15390:	sub	r7, r8, #1
   15394:	b	153dc <sprintf@plt+0x3b50>
   15398:	tst	r2, #4096	; 0x1000
   1539c:	beq	158ec <sprintf@plt+0x4060>
   153a0:	cmp	sl, #252	; 0xfc
   153a4:	bgt	158ec <sprintf@plt+0x4060>
   153a8:	movw	r2, #37197	; 0x914d
   153ac:	add	r6, r6, #4
   153b0:	mov	r3, #0
   153b4:	add	sl, sl, #4
   153b8:	movt	r2, #1
   153bc:	cmp	r6, #8
   153c0:	ldrb	r1, [r2, r1]
   153c4:	moveq	r3, #0
   153c8:	moveq	r6, #0
   153cc:	add	r5, r1, r5, lsl #4
   153d0:	strbeq	r5, [r4], #1
   153d4:	b	153dc <sprintf@plt+0x3b50>
   153d8:	mov	r3, #1
   153dc:	cmp	r8, r9
   153e0:	mov	r2, #0
   153e4:	ldrcc	r1, [sp, #44]	; 0x2c
   153e8:	cmpcc	r4, r1
   153ec:	bcs	15400 <sprintf@plt+0x3b74>
   153f0:	b	1534c <sprintf@plt+0x3ac0>
   153f4:	mov	sl, #0
   153f8:	mov	r4, r3
   153fc:	mov	r2, #0
   15400:	mov	r6, #90	; 0x5a
   15404:	cmp	r8, r9
   15408:	bcs	158c0 <sprintf@plt+0x4034>
   1540c:	ldr	r0, [sp, #44]	; 0x2c
   15410:	ldr	r1, [sp, #32]
   15414:	cmp	r4, r0
   15418:	bcs	158c0 <sprintf@plt+0x4034>
   1541c:	cmp	r2, #1
   15420:	blt	15450 <sprintf@plt+0x3bc4>
   15424:	add	r0, r2, #3
   15428:	bic	r0, r0, #3
   1542c:	cmp	r0, sl
   15430:	bne	158ec <sprintf@plt+0x4060>
   15434:	rsb	r0, sl, #8
   15438:	mov	r7, #255	; 0xff
   1543c:	mov	r6, #22
   15440:	add	r0, r0, r2
   15444:	tst	r5, r7, lsr r0
   15448:	beq	15454 <sprintf@plt+0x3bc8>
   1544c:	b	158c0 <sprintf@plt+0x4034>
   15450:	mov	r2, sl
   15454:	mov	r0, #65	; 0x41
   15458:	strb	r0, [r1]
   1545c:	subs	r0, r2, #256	; 0x100
   15460:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15464:	movne	r0, r2
   15468:	strb	r0, [r1]
   1546c:	add	r0, r4, #1
   15470:	str	r0, [fp, #-40]	; 0xffffffd8
   15474:	ldrb	r1, [r8], #1
   15478:	cmp	r1, #46	; 0x2e
   1547c:	bne	15924 <sprintf@plt+0x4098>
   15480:	ldrb	r1, [r8]
   15484:	mov	r7, r8
   15488:	cmp	r1, #0
   1548c:	bne	15130 <sprintf@plt+0x38a4>
   15490:	b	154f0 <sprintf@plt+0x3c64>
   15494:	cmp	r3, #0
   15498:	beq	154cc <sprintf@plt+0x3c40>
   1549c:	cmp	r7, #0
   154a0:	beq	158ec <sprintf@plt+0x4060>
   154a4:	mov	r0, r7
   154a8:	sub	r1, fp, #36	; 0x24
   154ac:	mov	r2, #10
   154b0:	bl	116e8 <strtol@plt>
   154b4:	mov	r2, r0
   154b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   154bc:	ldrb	r0, [r0]
   154c0:	cmp	r0, #93	; 0x5d
   154c4:	beq	154d0 <sprintf@plt+0x3c44>
   154c8:	b	158ec <sprintf@plt+0x4060>
   154cc:	mov	r2, #0
   154d0:	cmp	r6, #0
   154d4:	lslne	r0, r5, #4
   154d8:	strbne	r0, [r4], #1
   154dc:	mov	r6, #90	; 0x5a
   154e0:	cmp	r8, r9
   154e4:	bcc	1540c <sprintf@plt+0x3b80>
   154e8:	b	158c0 <sprintf@plt+0x4034>
   154ec:	add	r4, sp, #129	; 0x81
   154f0:	mvn	r1, r4
   154f4:	mov	r6, #90	; 0x5a
   154f8:	add	r0, r0, r1
   154fc:	tst	r0, #192	; 0xc0
   15500:	bne	158c0 <sprintf@plt+0x4034>
   15504:	ldr	r1, [sp, #44]	; 0x2c
   15508:	mov	r2, r4
   1550c:	mov	r6, #90	; 0x5a
   15510:	cmp	r4, r1
   15514:	bcs	158c0 <sprintf@plt+0x4034>
   15518:	cmp	r0, #0
   1551c:	strb	r0, [r2]
   15520:	beq	15544 <sprintf@plt+0x3cb8>
   15524:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15528:	ldr	r1, [sp, #44]	; 0x2c
   1552c:	cmp	r0, r1
   15530:	bcs	158c0 <sprintf@plt+0x4034>
   15534:	add	r1, r0, #1
   15538:	str	r1, [fp, #-40]	; 0xffffffd8
   1553c:	mov	r1, #0
   15540:	strb	r1, [r0]
   15544:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15548:	add	r1, sp, #129	; 0x81
   1554c:	sub	r0, r0, r1
   15550:	cmp	r0, #256	; 0x100
   15554:	bge	158c0 <sprintf@plt+0x4034>
   15558:	ldr	r0, [sp, #36]	; 0x24
   1555c:	ldr	r9, [sp, #48]	; 0x30
   15560:	ldr	r8, [sp, #40]	; 0x28
   15564:	add	r1, sp, #48	; 0x30
   15568:	mov	r7, #0
   1556c:	add	r5, r0, #12
   15570:	ldr	r0, [fp, #8]
   15574:	cmp	r9, #0
   15578:	sub	r2, r0, #16
   1557c:	mov	r0, #0
   15580:	beq	15594 <sprintf@plt+0x3d08>
   15584:	mov	r7, r1
   15588:	ldr	r3, [r7, #4]!
   1558c:	cmp	r3, #0
   15590:	bne	15588 <sprintf@plt+0x3cfc>
   15594:	add	ip, r1, #4
   15598:	add	r1, r5, r2
   1559c:	mov	r2, #1
   155a0:	str	r1, [sp, #32]
   155a4:	add	r1, sp, #129	; 0x81
   155a8:	ldrb	r3, [r1]
   155ac:	cmp	r3, #192	; 0xc0
   155b0:	bcs	1590c <sprintf@plt+0x4080>
   155b4:	and	r6, r3, #192	; 0xc0
   155b8:	cmp	r6, #64	; 0x40
   155bc:	beq	155d0 <sprintf@plt+0x3d44>
   155c0:	cmp	r6, #192	; 0xc0
   155c4:	mov	r6, r3
   155c8:	bne	155ec <sprintf@plt+0x3d60>
   155cc:	b	158d4 <sprintf@plt+0x4048>
   155d0:	cmp	r3, #65	; 0x41
   155d4:	bne	158d4 <sprintf@plt+0x4048>
   155d8:	ldrb	r4, [r1, #1]
   155dc:	add	r6, r4, #7
   155e0:	cmp	r4, #0
   155e4:	add	r6, r2, r6, lsr #3
   155e8:	movweq	r6, #33	; 0x21
   155ec:	add	r6, r6, #1
   155f0:	add	r0, r6, r0
   155f4:	cmp	r0, #256	; 0x100
   155f8:	bge	1590c <sprintf@plt+0x4080>
   155fc:	add	r1, r1, r6
   15600:	cmp	r3, #0
   15604:	bne	155a8 <sprintf@plt+0x3d1c>
   15608:	add	r0, sp, #48	; 0x30
   1560c:	mov	r3, r5
   15610:	add	sl, sp, #129	; 0x81
   15614:	str	ip, [sp, #12]
   15618:	str	r5, [sp]
   1561c:	str	r7, [sp, #16]
   15620:	add	r0, r0, #76	; 0x4c
   15624:	str	r0, [sp, #8]
   15628:	mov	r0, #1
   1562c:	ldrb	r4, [sl]
   15630:	cmp	r9, #0
   15634:	str	r0, [sp, #44]	; 0x2c
   15638:	cmpne	r4, #0
   1563c:	bne	15688 <sprintf@plt+0x3dfc>
   15640:	cmp	r4, #191	; 0xbf
   15644:	bhi	15900 <sprintf@plt+0x4074>
   15648:	ldrb	r0, [sl]
   1564c:	mvn	r6, #0
   15650:	and	r1, r0, #192	; 0xc0
   15654:	cmp	r1, #192	; 0xc0
   15658:	beq	157c4 <sprintf@plt+0x3f38>
   1565c:	cmp	r1, #64	; 0x40
   15660:	bne	157c0 <sprintf@plt+0x3f34>
   15664:	cmp	r0, #65	; 0x41
   15668:	bne	157c4 <sprintf@plt+0x3f38>
   1566c:	ldrb	r0, [sl, #1]
   15670:	mov	r2, #1
   15674:	add	r1, r0, #7
   15678:	cmp	r0, #0
   1567c:	add	r6, r2, r1, lsr #3
   15680:	movweq	r6, #33	; 0x21
   15684:	b	157c4 <sprintf@plt+0x3f38>
   15688:	ldr	r0, [sp, #12]
   1568c:	mov	r6, #2
   15690:	str	r3, [sp, #24]
   15694:	cmp	r0, r7
   15698:	bcs	15818 <sprintf@plt+0x3f8c>
   1569c:	str	r4, [sp, #4]
   156a0:	ldr	lr, [r0]
   156a4:	str	r0, [sp, #20]
   156a8:	ldrb	r8, [lr]
   156ac:	sub	r2, r8, #1
   156b0:	uxtb	r2, r2
   156b4:	cmp	r2, #62	; 0x3e
   156b8:	bhi	157a0 <sprintf@plt+0x3f14>
   156bc:	sub	r5, lr, r9
   156c0:	cmp	r5, #16384	; 0x4000
   156c4:	bge	157a0 <sprintf@plt+0x3f14>
   156c8:	mov	r2, r8
   156cc:	mov	r4, sl
   156d0:	mov	r6, lr
   156d4:	tst	r2, #255	; 0xff
   156d8:	beq	15788 <sprintf@plt+0x3efc>
   156dc:	and	r3, r2, #192	; 0xc0
   156e0:	add	r6, r6, #1
   156e4:	cmp	r3, #192	; 0xc0
   156e8:	bne	1570c <sprintf@plt+0x3e80>
   156ec:	ldrb	r0, [r6]
   156f0:	and	r1, r2, #63	; 0x3f
   156f4:	mov	r6, r9
   156f8:	orr	r0, r0, r1, lsl #8
   156fc:	ldrb	r2, [r6, r0]!
   15700:	cmp	r2, #0
   15704:	bne	156dc <sprintf@plt+0x3e50>
   15708:	b	15788 <sprintf@plt+0x3efc>
   1570c:	cmp	r3, #0
   15710:	bne	1580c <sprintf@plt+0x3f80>
   15714:	ldrb	r3, [r4]
   15718:	uxtb	ip, r2
   1571c:	cmp	ip, r3
   15720:	bne	15788 <sprintf@plt+0x3efc>
   15724:	ldrb	r3, [r4, #1]
   15728:	add	r2, r4, #2
   1572c:	rsb	r4, ip, #0
   15730:	mvn	r0, #64	; 0x40
   15734:	uxtb	r1, r3
   15738:	uxtab	r0, r0, r3
   1573c:	cmp	r0, #26
   15740:	mov	r0, #32
   15744:	uxtabcc	r1, r0, r3
   15748:	ldrb	r0, [r6]
   1574c:	sub	r3, r0, #65	; 0x41
   15750:	cmp	r3, #26
   15754:	addcc	r0, r0, #32
   15758:	cmp	r1, r0
   1575c:	bne	15788 <sprintf@plt+0x3efc>
   15760:	ldrb	r3, [r2], #1
   15764:	adds	r4, r4, #1
   15768:	add	r6, r6, #1
   1576c:	bne	15730 <sprintf@plt+0x3ea4>
   15770:	sub	r4, r2, #1
   15774:	ldrb	r2, [r6]
   15778:	cmp	r3, #0
   1577c:	bne	156d4 <sprintf@plt+0x3e48>
   15780:	cmp	r2, #0
   15784:	beq	15874 <sprintf@plt+0x3fe8>
   15788:	uxtab	lr, lr, r8
   1578c:	ldrb	r8, [lr, #1]!
   15790:	sub	r0, r8, #1
   15794:	uxtb	r0, r0
   15798:	cmp	r0, #63	; 0x3f
   1579c:	bcc	156bc <sprintf@plt+0x3e30>
   157a0:	ldr	r0, [sp, #20]
   157a4:	add	r0, r0, #4
   157a8:	cmp	r0, r7
   157ac:	bcc	156a0 <sprintf@plt+0x3e14>
   157b0:	ldr	r8, [sp, #40]	; 0x28
   157b4:	ldr	r4, [sp, #4]
   157b8:	mov	r6, #2
   157bc:	b	15818 <sprintf@plt+0x3f8c>
   157c0:	mov	r6, r0
   157c4:	ldr	r1, [sp, #32]
   157c8:	add	r0, r3, r6
   157cc:	add	r0, r0, #1
   157d0:	cmp	r0, r1
   157d4:	bcs	15900 <sprintf@plt+0x4074>
   157d8:	add	r4, r6, #1
   157dc:	mov	r0, r3
   157e0:	mov	r1, sl
   157e4:	mov	r5, r3
   157e8:	mov	r2, r4
   157ec:	bl	116c4 <memcpy@plt>
   157f0:	ldr	r0, [sp, #44]	; 0x2c
   157f4:	mov	r3, r5
   157f8:	add	sl, sl, r4
   157fc:	cmp	r6, #0
   15800:	add	r3, r5, r4
   15804:	bne	1562c <sprintf@plt+0x3da0>
   15808:	b	158f4 <sprintf@plt+0x4068>
   1580c:	ldr	r8, [sp, #40]	; 0x28
   15810:	ldr	r4, [sp, #4]
   15814:	mov	r6, #90	; 0x5a
   15818:	bl	11880 <__errno_location@plt>
   1581c:	str	r6, [r0]
   15820:	ldr	r0, [sp, #8]
   15824:	ldr	r1, [sp, #16]
   15828:	ldr	r3, [sp, #24]
   1582c:	cmp	r1, r0
   15830:	bcs	15640 <sprintf@plt+0x3db4>
   15834:	sub	r0, r3, r9
   15838:	cmp	r0, #16384	; 0x4000
   1583c:	bge	15640 <sprintf@plt+0x3db4>
   15840:	ldr	r0, [sp, #44]	; 0x2c
   15844:	cmp	r0, #0
   15848:	beq	15640 <sprintf@plt+0x3db4>
   1584c:	ldr	r0, [sp, #16]
   15850:	mov	r2, #0
   15854:	mov	r1, #0
   15858:	str	r1, [sp, #44]	; 0x2c
   1585c:	str	r3, [r0]
   15860:	str	r2, [r0, #4]!
   15864:	str	r0, [sp, #16]
   15868:	cmp	r4, #191	; 0xbf
   1586c:	bls	15648 <sprintf@plt+0x3dbc>
   15870:	b	15900 <sprintf@plt+0x4074>
   15874:	ldr	r8, [sp, #40]	; 0x28
   15878:	ldr	r4, [sp, #4]
   1587c:	cmp	r5, #0
   15880:	blt	15820 <sprintf@plt+0x3f94>
   15884:	ldr	r3, [sp, #24]
   15888:	ldr	r1, [sp, #32]
   1588c:	add	r0, r3, #1
   15890:	cmp	r0, r1
   15894:	bcs	15900 <sprintf@plt+0x4074>
   15898:	mov	r0, #192	; 0xc0
   1589c:	strb	r5, [r3, #1]
   158a0:	orr	r0, r0, r5, lsr #8
   158a4:	strb	r0, [r3]
   158a8:	add	r3, r3, #2
   158ac:	b	15938 <sprintf@plt+0x40ac>
   158b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   158b4:	ldr	r4, [sp, #32]
   158b8:	b	154f0 <sprintf@plt+0x3c64>
   158bc:	mov	r6, #90	; 0x5a
   158c0:	bl	11880 <__errno_location@plt>
   158c4:	str	r6, [r0]
   158c8:	mvn	r0, #0
   158cc:	sub	sp, fp, #28
   158d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158d4:	bl	11880 <__errno_location@plt>
   158d8:	mov	r1, #22
   158dc:	str	r1, [r0]
   158e0:	mvn	r0, #0
   158e4:	sub	sp, fp, #28
   158e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158ec:	mov	r6, #22
   158f0:	b	158c0 <sprintf@plt+0x4034>
   158f4:	ldr	r0, [sp, #32]
   158f8:	cmp	r3, r0
   158fc:	bls	15938 <sprintf@plt+0x40ac>
   15900:	cmp	r9, #0
   15904:	movne	r0, #0
   15908:	strne	r0, [r7]
   1590c:	bl	11880 <__errno_location@plt>
   15910:	mov	r1, #90	; 0x5a
   15914:	str	r1, [r0]
   15918:	mvn	r0, #0
   1591c:	sub	sp, fp, #28
   15920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15924:	mov	r6, #22
   15928:	cmp	r1, #0
   1592c:	bne	158c0 <sprintf@plt+0x4034>
   15930:	mov	r0, #0
   15934:	b	15504 <sprintf@plt+0x3c78>
   15938:	ldr	r0, [sp]
   1593c:	sub	r0, r3, r0
   15940:	cmp	r0, #0
   15944:	mvn	r0, #0
   15948:	blt	150f0 <sprintf@plt+0x3864>
   1594c:	ldr	r0, [sp, #28]
   15950:	ldr	r2, [sp, #36]	; 0x24
   15954:	mov	r1, #256	; 0x100
   15958:	strb	r0, [r3, #1]
   1595c:	lsr	r0, r0, #8
   15960:	strb	r8, [r3, #3]
   15964:	strb	r0, [r3]
   15968:	lsr	r0, r8, #8
   1596c:	strb	r0, [r3, #2]
   15970:	ldr	r0, [r2, #4]
   15974:	bfi	r0, r1, #0, #16
   15978:	str	r0, [r2, #4]
   1597c:	add	r0, r3, #4
   15980:	sub	r0, r0, r2
   15984:	sub	sp, fp, #28
   15988:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1598c:	cmp	r0, #0
   15990:	beq	159b4 <sprintf@plt+0x4128>
   15994:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15998:	ldr	r1, [sp, #44]	; 0x2c
   1599c:	cmp	r0, r1
   159a0:	bcs	158c0 <sprintf@plt+0x4034>
   159a4:	add	r1, r0, #1
   159a8:	str	r1, [fp, #-40]	; 0xffffffd8
   159ac:	mov	r1, #0
   159b0:	strb	r1, [r0]
   159b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   159b8:	add	r1, sp, #129	; 0x81
   159bc:	sub	r0, r0, r1
   159c0:	cmp	r0, #255	; 0xff
   159c4:	ble	15558 <sprintf@plt+0x3ccc>
   159c8:	b	158c0 <sprintf@plt+0x4034>
   159cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159d0:	add	fp, sp, #28
   159d4:	sub	sp, sp, #20
   159d8:	ldr	r4, [r2, #8]
   159dc:	mov	r5, r2
   159e0:	mov	r0, r4
   159e4:	bl	116a0 <strlen@plt>
   159e8:	add	r0, r0, #1
   159ec:	bl	11784 <malloc@plt>
   159f0:	cmp	r0, #0
   159f4:	beq	15d44 <sprintf@plt+0x44b8>
   159f8:	mov	r1, r4
   159fc:	mov	r6, r0
   15a00:	str	r5, [sp, #4]
   15a04:	bl	11700 <strcpy@plt>
   15a08:	ldrb	r0, [r6]
   15a0c:	mov	r4, #0
   15a10:	str	r6, [sp]
   15a14:	cmp	r0, #42	; 0x2a
   15a18:	bne	15a2c <sprintf@plt+0x41a0>
   15a1c:	mov	r0, #0
   15a20:	mov	r8, #0
   15a24:	str	r0, [sp, #8]
   15a28:	b	15b68 <sprintf@plt+0x42dc>
   15a2c:	movw	r1, #37489	; 0x9271
   15a30:	add	r2, sp, #16
   15a34:	mov	r0, r6
   15a38:	movt	r1, #1
   15a3c:	bl	11580 <rb_strtok_r@plt>
   15a40:	mov	sl, r0
   15a44:	cmp	r0, #0
   15a48:	mov	r0, #0
   15a4c:	mov	r8, #0
   15a50:	str	r0, [sp, #8]
   15a54:	beq	15b68 <sprintf@plt+0x42dc>
   15a58:	mov	r0, #0
   15a5c:	mov	r8, #0
   15a60:	mov	r4, #0
   15a64:	str	r0, [sp, #8]
   15a68:	mov	r0, #1
   15a6c:	mov	r1, #72	; 0x48
   15a70:	bl	115b0 <calloc@plt>
   15a74:	cmp	r0, #0
   15a78:	beq	15d44 <sprintf@plt+0x44b8>
   15a7c:	str	r4, [sp, #12]
   15a80:	mov	r5, r0
   15a84:	mov	r9, #2
   15a88:	mov	r7, #0
   15a8c:	mov	r4, sl
   15a90:	ldrb	r6, [r4]
   15a94:	cmp	r6, #46	; 0x2e
   15a98:	bne	15ab0 <sprintf@plt+0x4224>
   15a9c:	b	15ad4 <sprintf@plt+0x4248>
   15aa0:	add	r4, r4, #1
   15aa4:	ldrb	r6, [r4]
   15aa8:	cmp	r6, #46	; 0x2e
   15aac:	beq	15ad4 <sprintf@plt+0x4248>
   15ab0:	cmp	r6, #0
   15ab4:	beq	15ae8 <sprintf@plt+0x425c>
   15ab8:	bl	11760 <__ctype_b_loc@plt>
   15abc:	ldr	r0, [r0]
   15ac0:	add	r0, r0, r6, lsl #1
   15ac4:	ldrb	r0, [r0, #1]
   15ac8:	tst	r0, #8
   15acc:	bne	15aa0 <sprintf@plt+0x4214>
   15ad0:	b	15d10 <sprintf@plt+0x4484>
   15ad4:	cmp	r7, #3
   15ad8:	bge	15d2c <sprintf@plt+0x44a0>
   15adc:	add	r7, r7, #1
   15ae0:	mov	r9, #1
   15ae4:	b	15aa0 <sprintf@plt+0x4214>
   15ae8:	sub	r0, r7, #1
   15aec:	cmp	r0, #2
   15af0:	bcc	15d48 <sprintf@plt+0x44bc>
   15af4:	add	r0, r5, #4
   15af8:	mov	r1, sl
   15afc:	mov	r2, #53	; 0x35
   15b00:	str	r9, [r5]
   15b04:	bl	11628 <rb_strlcpy@plt>
   15b08:	ldr	r4, [sp, #12]
   15b0c:	mov	r0, #0
   15b10:	str	r5, [r5, #60]	; 0x3c
   15b14:	cmp	r8, #0
   15b18:	str	r0, [r5, #64]	; 0x40
   15b1c:	add	r0, r5, #60	; 0x3c
   15b20:	str	r8, [r5, #68]	; 0x44
   15b24:	beq	15b30 <sprintf@plt+0x42a4>
   15b28:	str	r0, [r8, #4]
   15b2c:	b	15b40 <sprintf@plt+0x42b4>
   15b30:	ldr	r1, [sp, #8]
   15b34:	cmp	r1, #0
   15b38:	moveq	r1, r0
   15b3c:	str	r1, [sp, #8]
   15b40:	movw	r1, #37489	; 0x9271
   15b44:	mov	r8, r0
   15b48:	mov	r0, #0
   15b4c:	add	r2, sp, #16
   15b50:	movt	r1, #1
   15b54:	bl	11580 <rb_strtok_r@plt>
   15b58:	mov	sl, r0
   15b5c:	add	r4, r4, #1
   15b60:	cmp	r0, #0
   15b64:	bne	15a68 <sprintf@plt+0x41dc>
   15b68:	ldr	r0, [sp]
   15b6c:	str	r4, [sp, #12]
   15b70:	mov	sl, r8
   15b74:	bl	1164c <free@plt>
   15b78:	ldr	r4, [sp, #4]
   15b7c:	mov	r1, #0
   15b80:	mov	r2, #10
   15b84:	ldr	r0, [r4, #4]
   15b88:	bl	116e8 <strtol@plt>
   15b8c:	ands	r8, r0, #3
   15b90:	beq	15ba8 <sprintf@plt+0x431c>
   15b94:	ldr	r6, [r4]
   15b98:	cmp	r6, #0
   15b9c:	ldrne	r9, [r4, #12]
   15ba0:	cmpne	r9, #0
   15ba4:	bne	15bc0 <sprintf@plt+0x4334>
   15ba8:	movw	r1, #37691	; 0x933b
   15bac:	movt	r1, #1
   15bb0:	mov	r0, #67	; 0x43
   15bb4:	bl	12528 <sprintf@plt+0xc9c>
   15bb8:	mov	r0, #3
   15bbc:	bl	11874 <exit@plt>
   15bc0:	movw	r7, #61412	; 0xefe4
   15bc4:	movt	r7, #2
   15bc8:	ldr	r5, [r7]
   15bcc:	cmp	r5, #0
   15bd0:	bne	15be4 <sprintf@plt+0x4358>
   15bd4:	b	15c10 <sprintf@plt+0x4384>
   15bd8:	ldr	r5, [r5, #8]
   15bdc:	cmp	r5, #0
   15be0:	beq	15c10 <sprintf@plt+0x4384>
   15be4:	ldr	r4, [r5]
   15be8:	mov	r1, r6
   15bec:	mov	r0, r4
   15bf0:	bl	115a4 <strcasecmp@plt>
   15bf4:	cmp	r0, #0
   15bf8:	bne	15bd8 <sprintf@plt+0x434c>
   15bfc:	cmp	r4, #0
   15c00:	beq	15c10 <sprintf@plt+0x4384>
   15c04:	mov	r0, #0
   15c08:	strb	r0, [r4, #784]	; 0x310
   15c0c:	b	15c7c <sprintf@plt+0x43f0>
   15c10:	mov	r0, #1
   15c14:	mov	r1, #800	; 0x320
   15c18:	bl	115b0 <calloc@plt>
   15c1c:	cmp	r0, #0
   15c20:	beq	15d44 <sprintf@plt+0x44b8>
   15c24:	mov	r4, r0
   15c28:	bl	11808 <rb_make_rb_dlink_node@plt>
   15c2c:	cmp	r0, #0
   15c30:	beq	15d60 <sprintf@plt+0x44d4>
   15c34:	mov	r1, #0
   15c38:	str	r1, [r0, #4]
   15c3c:	str	r4, [r0]
   15c40:	ldr	r1, [r7]
   15c44:	cmp	r1, #0
   15c48:	str	r1, [r0, #8]
   15c4c:	beq	15c5c <sprintf@plt+0x43d0>
   15c50:	add	r1, r1, #4
   15c54:	str	r0, [r1]
   15c58:	b	15c6c <sprintf@plt+0x43e0>
   15c5c:	mov	r1, r7
   15c60:	ldr	r2, [r1, #4]!
   15c64:	cmp	r2, #0
   15c68:	streq	r0, [r1]
   15c6c:	str	r0, [r7]
   15c70:	ldr	r0, [r7, #8]
   15c74:	add	r0, r0, #1
   15c78:	str	r0, [r7, #8]
   15c7c:	mov	r0, r4
   15c80:	mov	r1, r6
   15c84:	mov	r2, #256	; 0x100
   15c88:	bl	11628 <rb_strlcpy@plt>
   15c8c:	add	r0, r4, #256	; 0x100
   15c90:	mov	r1, r9
   15c94:	mov	r2, #512	; 0x200
   15c98:	bl	11628 <rb_strlcpy@plt>
   15c9c:	cmp	sl, #0
   15ca0:	strb	r8, [r4, #768]	; 0x300
   15ca4:	beq	15cd4 <sprintf@plt+0x4448>
   15ca8:	ldr	r0, [r4, #772]	; 0x304
   15cac:	cmp	r0, #0
   15cb0:	beq	15cec <sprintf@plt+0x4460>
   15cb4:	ldr	r1, [sp, #8]
   15cb8:	str	r0, [r1, #8]
   15cbc:	str	r1, [r0, #4]
   15cc0:	str	sl, [r4, #772]	; 0x304
   15cc4:	ldr	r1, [sp, #12]
   15cc8:	ldr	r0, [r4, #780]	; 0x30c
   15ccc:	add	r0, r0, r1
   15cd0:	b	15cfc <sprintf@plt+0x4470>
   15cd4:	mov	r0, #0
   15cd8:	cmp	r4, #0
   15cdc:	str	r0, [r4, #796]	; 0x31c
   15ce0:	beq	15ba8 <sprintf@plt+0x431c>
   15ce4:	sub	sp, fp, #28
   15ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cec:	ldr	r0, [sp, #8]
   15cf0:	str	sl, [r4, #772]	; 0x304
   15cf4:	str	r0, [r4, #776]	; 0x308
   15cf8:	ldr	r0, [sp, #12]
   15cfc:	str	r0, [r4, #780]	; 0x30c
   15d00:	mov	r0, #0
   15d04:	str	r0, [r4, #796]	; 0x31c
   15d08:	sub	sp, fp, #28
   15d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d10:	movw	r1, #37549	; 0x92ad
   15d14:	mov	r0, #67	; 0x43
   15d18:	mov	r2, r6
   15d1c:	movt	r1, #1
   15d20:	bl	12528 <sprintf@plt+0xc9c>
   15d24:	mov	r0, #3
   15d28:	bl	11874 <exit@plt>
   15d2c:	movw	r1, #37491	; 0x9273
   15d30:	movt	r1, #1
   15d34:	mov	r0, #67	; 0x43
   15d38:	bl	12528 <sprintf@plt+0xc9c>
   15d3c:	mov	r0, #3
   15d40:	bl	11874 <exit@plt>
   15d44:	bl	11754 <rb_outofmemory@plt>
   15d48:	movw	r1, #37629	; 0x92fd
   15d4c:	movt	r1, #1
   15d50:	mov	r0, #67	; 0x43
   15d54:	bl	12528 <sprintf@plt+0xc9c>
   15d58:	mov	r0, #3
   15d5c:	bl	11874 <exit@plt>
   15d60:	movw	r0, #36640	; 0x8f20
   15d64:	movw	r1, #36650	; 0x8f2a
   15d68:	movw	r3, #36745	; 0x8f89
   15d6c:	mov	r2, #144	; 0x90
   15d70:	movt	r0, #1
   15d74:	movt	r1, #1
   15d78:	movt	r3, #1
   15d7c:	bl	11610 <__assert_fail@plt>
   15d80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15d84:	add	fp, sp, #24
   15d88:	movw	r8, #61412	; 0xefe4
   15d8c:	ldr	r5, [r2]
   15d90:	movt	r8, #2
   15d94:	ldr	r6, [r8]
   15d98:	cmp	r6, #0
   15d9c:	beq	15e50 <sprintf@plt+0x45c4>
   15da0:	mov	r7, r6
   15da4:	ldr	r4, [r7]
   15da8:	mov	r1, r5
   15dac:	mov	r0, r4
   15db0:	bl	115a4 <strcasecmp@plt>
   15db4:	cmp	r0, #0
   15db8:	beq	15dcc <sprintf@plt+0x4540>
   15dbc:	ldr	r7, [r7, #8]
   15dc0:	cmp	r7, #0
   15dc4:	bne	15da4 <sprintf@plt+0x4518>
   15dc8:	b	15e50 <sprintf@plt+0x45c4>
   15dcc:	cmp	r4, #0
   15dd0:	beq	15e50 <sprintf@plt+0x45c4>
   15dd4:	ldr	r0, [r4, #788]	; 0x314
   15dd8:	cmp	r0, #0
   15ddc:	movgt	r0, #1
   15de0:	strbgt	r0, [r4, #784]	; 0x310
   15de4:	popgt	{r4, r5, r6, r7, r8, sl, fp, pc}
   15de8:	cmp	r6, #0
   15dec:	beq	15e44 <sprintf@plt+0x45b8>
   15df0:	ldr	r1, [r6]
   15df4:	mov	r0, r6
   15df8:	ldr	r6, [r6, #8]
   15dfc:	cmp	r1, r4
   15e00:	bne	15de8 <sprintf@plt+0x455c>
   15e04:	ldr	r1, [r0, #4]
   15e08:	cmp	r6, #0
   15e0c:	mov	r2, r8
   15e10:	streq	r1, [r8, #4]
   15e14:	strne	r1, [r6, #4]
   15e18:	ldrne	r1, [r0, #4]
   15e1c:	cmp	r1, #0
   15e20:	addne	r2, r1, #8
   15e24:	mov	r1, #0
   15e28:	str	r6, [r2]
   15e2c:	str	r1, [r0, #4]
   15e30:	str	r1, [r0, #8]
   15e34:	ldr	r1, [r8, #8]
   15e38:	sub	r1, r1, #1
   15e3c:	str	r1, [r8, #8]
   15e40:	bl	116d0 <rb_free_rb_dlink_node@plt>
   15e44:	mov	r0, r4
   15e48:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15e4c:	b	1164c <free@plt>
   15e50:	movw	r1, #37736	; 0x9368
   15e54:	mov	r0, #87	; 0x57
   15e58:	mov	r2, r5
   15e5c:	movt	r1, #1
   15e60:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15e64:	b	12528 <sprintf@plt+0xc9c>
   15e68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15e6c:	add	fp, sp, #24
   15e70:	movw	r5, #61412	; 0xefe4
   15e74:	movt	r5, #2
   15e78:	ldr	r6, [r5]
   15e7c:	cmp	r6, #0
   15e80:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   15e84:	mov	r7, #1
   15e88:	mov	r8, #0
   15e8c:	ldr	r4, [r6]
   15e90:	ldr	r6, [r6, #8]
   15e94:	ldr	r0, [r4, #788]	; 0x314
   15e98:	cmp	r0, #1
   15e9c:	blt	15eb0 <sprintf@plt+0x4624>
   15ea0:	strb	r7, [r4, #784]	; 0x310
   15ea4:	cmp	r6, #0
   15ea8:	bne	15e8c <sprintf@plt+0x4600>
   15eac:	b	15f1c <sprintf@plt+0x4690>
   15eb0:	ldr	r1, [r5]
   15eb4:	cmp	r1, #0
   15eb8:	beq	15f0c <sprintf@plt+0x4680>
   15ebc:	ldr	r2, [r1]
   15ec0:	mov	r0, r1
   15ec4:	ldr	r1, [r1, #8]
   15ec8:	cmp	r2, r4
   15ecc:	bne	15eb4 <sprintf@plt+0x4628>
   15ed0:	ldr	r2, [r0, #4]
   15ed4:	cmp	r1, #0
   15ed8:	mov	r3, r5
   15edc:	streq	r2, [r5, #4]
   15ee0:	strne	r2, [r1, #4]
   15ee4:	ldrne	r2, [r0, #4]
   15ee8:	cmp	r2, #0
   15eec:	addne	r3, r2, #8
   15ef0:	str	r1, [r3]
   15ef4:	str	r8, [r0, #4]
   15ef8:	str	r8, [r0, #8]
   15efc:	ldr	r1, [r5, #8]
   15f00:	sub	r1, r1, #1
   15f04:	str	r1, [r5, #8]
   15f08:	bl	116d0 <rb_free_rb_dlink_node@plt>
   15f0c:	mov	r0, r4
   15f10:	bl	1164c <free@plt>
   15f14:	cmp	r6, #0
   15f18:	bne	15e8c <sprintf@plt+0x4600>
   15f1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15f20:	push	{fp, lr}
   15f24:	mov	fp, sp
   15f28:	ldr	r0, [r2]
   15f2c:	mov	r1, #0
   15f30:	mov	r2, #10
   15f34:	bl	116e8 <strtol@plt>
   15f38:	cmn	r0, #1
   15f3c:	mov	r2, r0
   15f40:	movwgt	r0, #44452	; 0xada4
   15f44:	movtgt	r0, #2
   15f48:	strgt	r2, [r0]
   15f4c:	popgt	{fp, pc}
   15f50:	movw	r1, #37780	; 0x9394
   15f54:	mov	r0, #67	; 0x43
   15f58:	movt	r1, #1
   15f5c:	bl	12528 <sprintf@plt+0xc9c>
   15f60:	mov	r0, #3
   15f64:	bl	11874 <exit@plt>
   15f68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15f6c:	add	fp, sp, #24
   15f70:	sub	sp, sp, #8
   15f74:	movw	r6, #61820	; 0xf17c
   15f78:	mov	r4, sp
   15f7c:	movt	r6, #2
   15f80:	mov	r1, r4
   15f84:	ldr	r0, [r6]
   15f88:	bl	11688 <rb_dictionary_foreach_start@plt>
   15f8c:	ldr	r0, [r6]
   15f90:	mov	r1, r4
   15f94:	bl	11598 <rb_dictionary_foreach_cur@plt>
   15f98:	cmp	r0, #0
   15f9c:	beq	15fd4 <sprintf@plt+0x4748>
   15fa0:	movw	r4, #38032	; 0x9490
   15fa4:	mov	r5, sp
   15fa8:	movt	r4, #1
   15fac:	mov	r1, r4
   15fb0:	bl	1680c <sprintf@plt+0x4f80>
   15fb4:	ldr	r0, [r6]
   15fb8:	mov	r1, r5
   15fbc:	bl	11640 <rb_dictionary_foreach_next@plt>
   15fc0:	ldr	r0, [r6]
   15fc4:	mov	r1, r5
   15fc8:	bl	11598 <rb_dictionary_foreach_cur@plt>
   15fcc:	cmp	r0, #0
   15fd0:	bne	15fac <sprintf@plt+0x4720>
   15fd4:	movw	r5, #61412	; 0xefe4
   15fd8:	movt	r5, #2
   15fdc:	ldr	r6, [r5]
   15fe0:	cmp	r6, #0
   15fe4:	beq	16080 <sprintf@plt+0x47f4>
   15fe8:	mov	r7, #1
   15fec:	mov	r8, #0
   15ff0:	ldr	r4, [r6]
   15ff4:	ldr	r6, [r6, #8]
   15ff8:	ldr	r0, [r4, #788]	; 0x314
   15ffc:	cmp	r0, #1
   16000:	blt	16014 <sprintf@plt+0x4788>
   16004:	strb	r7, [r4, #784]	; 0x310
   16008:	cmp	r6, #0
   1600c:	bne	15ff0 <sprintf@plt+0x4764>
   16010:	b	16080 <sprintf@plt+0x47f4>
   16014:	ldr	r1, [r5]
   16018:	cmp	r1, #0
   1601c:	beq	16070 <sprintf@plt+0x47e4>
   16020:	ldr	r2, [r1]
   16024:	mov	r0, r1
   16028:	ldr	r1, [r1, #8]
   1602c:	cmp	r2, r4
   16030:	bne	16018 <sprintf@plt+0x478c>
   16034:	ldr	r2, [r0, #4]
   16038:	cmp	r1, #0
   1603c:	mov	r3, r5
   16040:	streq	r2, [r5, #4]
   16044:	strne	r2, [r1, #4]
   16048:	ldrne	r2, [r0, #4]
   1604c:	cmp	r2, #0
   16050:	addne	r3, r2, #8
   16054:	str	r1, [r3]
   16058:	str	r8, [r0, #4]
   1605c:	str	r8, [r0, #8]
   16060:	ldr	r1, [r5, #8]
   16064:	sub	r1, r1, #1
   16068:	str	r1, [r5, #8]
   1606c:	bl	116d0 <rb_free_rb_dlink_node@plt>
   16070:	mov	r0, r4
   16074:	bl	1164c <free@plt>
   16078:	cmp	r6, #0
   1607c:	bne	15ff0 <sprintf@plt+0x4764>
   16080:	sub	sp, fp, #24
   16084:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16088:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1608c:	add	fp, sp, #24
   16090:	mov	r9, r0
   16094:	movw	r0, #61412	; 0xefe4
   16098:	movt	r0, #2
   1609c:	ldr	r0, [r0, #8]
   160a0:	cmp	r0, #0
   160a4:	beq	16128 <sprintf@plt+0x489c>
   160a8:	ldr	r0, [r9, #460]	; 0x1cc
   160ac:	mov	r1, #16
   160b0:	add	r0, r0, #1
   160b4:	str	r0, [r9, #460]	; 0x1cc
   160b8:	movw	r0, #44452	; 0xada4
   160bc:	movt	r0, #2
   160c0:	ldr	r5, [r0, #16]
   160c4:	mov	r0, #1
   160c8:	bl	115b0 <calloc@plt>
   160cc:	cmp	r0, #0
   160d0:	beq	161d0 <sprintf@plt+0x4944>
   160d4:	ldr	r8, [r9, #464]	; 0x1d0
   160d8:	add	r1, r8, r5, lsl #4
   160dc:	str	r0, [r1, #8]
   160e0:	movw	r0, #61824	; 0xf180
   160e4:	movt	r0, #2
   160e8:	ldr	r6, [r0]
   160ec:	cmp	r6, #0
   160f0:	beq	161a8 <sprintf@plt+0x491c>
   160f4:	movw	r5, #37817	; 0x93b9
   160f8:	mov	r7, r6
   160fc:	movt	r5, #1
   16100:	ldr	r4, [r7]
   16104:	mov	r1, r5
   16108:	ldr	r0, [r4, #16]
   1610c:	bl	115a4 <strcasecmp@plt>
   16110:	cmp	r0, #0
   16114:	beq	16144 <sprintf@plt+0x48b8>
   16118:	ldr	r7, [r7, #8]
   1611c:	cmp	r7, #0
   16120:	bne	16100 <sprintf@plt+0x4874>
   16124:	b	16160 <sprintf@plt+0x48d4>
   16128:	movw	r0, #44452	; 0xada4
   1612c:	movt	r0, #2
   16130:	ldr	r1, [r0, #16]
   16134:	mov	r0, r9
   16138:	bl	12eac <sprintf@plt+0x1620>
   1613c:	mov	r0, #1
   16140:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16144:	cmp	r4, #0
   16148:	beq	16160 <sprintf@plt+0x48d4>
   1614c:	ldr	r0, [r4, #12]
   16150:	add	r0, r8, r0, lsl #4
   16154:	ldr	r0, [r0, #12]
   16158:	cmp	r0, #2
   1615c:	bne	161c8 <sprintf@plt+0x493c>
   16160:	ldr	r5, [r6]
   16164:	movw	r1, #38297	; 0x9599
   16168:	movt	r1, #1
   1616c:	ldr	r0, [r5, #16]
   16170:	bl	115a4 <strcasecmp@plt>
   16174:	cmp	r0, #0
   16178:	beq	1618c <sprintf@plt+0x4900>
   1617c:	ldr	r6, [r6, #8]
   16180:	cmp	r6, #0
   16184:	bne	16160 <sprintf@plt+0x48d4>
   16188:	b	161a8 <sprintf@plt+0x491c>
   1618c:	cmp	r5, #0
   16190:	beq	161a8 <sprintf@plt+0x491c>
   16194:	ldr	r0, [r5, #12]
   16198:	add	r0, r8, r0, lsl #4
   1619c:	ldr	r0, [r0, #12]
   161a0:	cmp	r0, #2
   161a4:	bne	161c8 <sprintf@plt+0x493c>
   161a8:	mov	r0, r9
   161ac:	bl	162f8 <sprintf@plt+0x4a6c>
   161b0:	cmp	r0, #0
   161b4:	bne	161c8 <sprintf@plt+0x493c>
   161b8:	movw	r1, #38005	; 0x9475
   161bc:	mov	r0, r9
   161c0:	movt	r1, #1
   161c4:	bl	1680c <sprintf@plt+0x4f80>
   161c8:	mov	r0, #1
   161cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   161d0:	bl	11754 <rb_outofmemory@plt>
   161d4:	movw	r1, #38032	; 0x9490
   161d8:	movt	r1, #1
   161dc:	b	1680c <sprintf@plt+0x4f80>
   161e0:	movw	r1, #38058	; 0x94aa
   161e4:	movt	r1, #1
   161e8:	b	1680c <sprintf@plt+0x4f80>
   161ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   161f0:	add	fp, sp, #24
   161f4:	mov	r8, r0
   161f8:	movw	r0, #44452	; 0xada4
   161fc:	movt	r0, #2
   16200:	ldr	r9, [r8, #464]	; 0x1d0
   16204:	ldr	r0, [r0, #16]
   16208:	add	r0, r9, r0, lsl #4
   1620c:	ldr	r0, [r0, #8]
   16210:	cmp	r0, #0
   16214:	beq	162e0 <sprintf@plt+0x4a54>
   16218:	ldrb	r0, [r0]
   1621c:	cmp	r0, #0
   16220:	bne	162e0 <sprintf@plt+0x4a54>
   16224:	movw	r0, #61824	; 0xf180
   16228:	movt	r0, #2
   1622c:	ldr	r4, [r0]
   16230:	cmp	r4, #0
   16234:	beq	162d0 <sprintf@plt+0x4a44>
   16238:	movw	r5, #37817	; 0x93b9
   1623c:	mov	r7, r4
   16240:	movt	r5, #1
   16244:	ldr	r6, [r7]
   16248:	mov	r1, r5
   1624c:	ldr	r0, [r6, #16]
   16250:	bl	115a4 <strcasecmp@plt>
   16254:	cmp	r0, #0
   16258:	beq	1626c <sprintf@plt+0x49e0>
   1625c:	ldr	r7, [r7, #8]
   16260:	cmp	r7, #0
   16264:	bne	16244 <sprintf@plt+0x49b8>
   16268:	b	16288 <sprintf@plt+0x49fc>
   1626c:	cmp	r6, #0
   16270:	beq	16288 <sprintf@plt+0x49fc>
   16274:	ldr	r0, [r6, #12]
   16278:	add	r0, r9, r0, lsl #4
   1627c:	ldr	r0, [r0, #12]
   16280:	cmp	r0, #2
   16284:	bne	162e0 <sprintf@plt+0x4a54>
   16288:	ldr	r5, [r4]
   1628c:	movw	r1, #38297	; 0x9599
   16290:	movt	r1, #1
   16294:	ldr	r0, [r5, #16]
   16298:	bl	115a4 <strcasecmp@plt>
   1629c:	cmp	r0, #0
   162a0:	beq	162b4 <sprintf@plt+0x4a28>
   162a4:	ldr	r4, [r4, #8]
   162a8:	cmp	r4, #0
   162ac:	bne	16288 <sprintf@plt+0x49fc>
   162b0:	b	162d0 <sprintf@plt+0x4a44>
   162b4:	cmp	r5, #0
   162b8:	beq	162d0 <sprintf@plt+0x4a44>
   162bc:	ldr	r0, [r5, #12]
   162c0:	add	r0, r9, r0, lsl #4
   162c4:	ldr	r0, [r0, #12]
   162c8:	cmp	r0, #2
   162cc:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   162d0:	mov	r0, r8
   162d4:	bl	162f8 <sprintf@plt+0x4a6c>
   162d8:	cmp	r0, #0
   162dc:	beq	162e4 <sprintf@plt+0x4a58>
   162e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   162e4:	movw	r1, #38005	; 0x9475
   162e8:	mov	r0, r8
   162ec:	movt	r1, #1
   162f0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   162f4:	b	1680c <sprintf@plt+0x4f80>
   162f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162fc:	add	fp, sp, #28
   16300:	sub	sp, sp, #268	; 0x10c
   16304:	mov	r4, r0
   16308:	movw	r0, #44452	; 0xada4
   1630c:	mov	r2, #1
   16310:	mov	r9, #1
   16314:	movt	r0, #2
   16318:	ldr	r1, [r4, #464]	; 0x1d0
   1631c:	ldr	r0, [r0, #16]
   16320:	add	r0, r1, r0, lsl #4
   16324:	ldrh	r1, [r4, #248]	; 0xf8
   16328:	ldr	r3, [r0, #8]
   1632c:	mov	r0, #0
   16330:	cmp	r1, #2
   16334:	beq	16344 <sprintf@plt+0x4ab8>
   16338:	cmp	r1, #10
   1633c:	bne	164f0 <sprintf@plt+0x4c64>
   16340:	mov	r9, #2
   16344:	strb	r2, [r3]
   16348:	movw	r1, #37822	; 0x93be
   1634c:	str	r3, [sp]
   16350:	ldr	r0, [r4]
   16354:	movt	r1, #1
   16358:	bl	124bc <sprintf@plt+0xc30>
   1635c:	movw	r0, #61412	; 0xefe4
   16360:	movt	r0, #2
   16364:	ldr	r8, [r0]
   16368:	cmp	r8, #0
   1636c:	beq	164b4 <sprintf@plt+0x4c28>
   16370:	add	r0, r4, #248	; 0xf8
   16374:	str	r0, [sp, #4]
   16378:	ldr	r5, [r8]
   1637c:	ldrb	r0, [r5, #784]	; 0x310
   16380:	cmp	r0, #0
   16384:	beq	16398 <sprintf@plt+0x4b0c>
   16388:	ldr	r8, [r8, #8]
   1638c:	cmp	r8, #0
   16390:	bne	16378 <sprintf@plt+0x4aec>
   16394:	b	164b4 <sprintf@plt+0x4c28>
   16398:	ldrb	r0, [r5, #768]	; 0x300
   1639c:	tst	r9, r0
   163a0:	beq	16388 <sprintf@plt+0x4afc>
   163a4:	mov	r0, #1
   163a8:	mov	r1, #24
   163ac:	bl	115b0 <calloc@plt>
   163b0:	cmp	r0, #0
   163b4:	beq	164f8 <sprintf@plt+0x4c6c>
   163b8:	mov	r7, r0
   163bc:	movw	r0, #44452	; 0xada4
   163c0:	ldr	r1, [r4, #464]	; 0x1d0
   163c4:	movt	r0, #2
   163c8:	ldr	r0, [r0, #16]
   163cc:	add	r0, r1, r0, lsl #4
   163d0:	ldr	sl, [r0, #8]
   163d4:	str	r5, [r7]
   163d8:	str	r4, [r7, #4]
   163dc:	ldrh	r0, [r4, #248]	; 0xf8
   163e0:	cmp	r0, #10
   163e4:	beq	16458 <sprintf@plt+0x4bcc>
   163e8:	cmp	r0, #2
   163ec:	ldrbeq	r0, [r5, #768]	; 0x300
   163f0:	tsteq	r0, #1
   163f4:	beq	16464 <sprintf@plt+0x4bd8>
   163f8:	ldr	r2, [sp, #4]
   163fc:	add	r6, sp, #8
   16400:	mov	r1, #256	; 0x100
   16404:	mov	r3, r5
   16408:	mov	r0, r6
   1640c:	bl	13864 <sprintf@plt+0x1fd8>
   16410:	movw	r2, #25852	; 0x64fc
   16414:	mov	r0, r6
   16418:	mov	r1, #2
   1641c:	mov	r3, r7
   16420:	movt	r2, #1
   16424:	bl	11db8 <sprintf@plt+0x52c>
   16428:	str	r0, [r7, #8]
   1642c:	mov	r0, #0
   16430:	str	r0, [r7, #16]
   16434:	str	r7, [r7, #12]
   16438:	add	r0, r7, #12
   1643c:	ldr	r1, [sl, #4]
   16440:	cmp	r1, #0
   16444:	str	r1, [r7, #20]
   16448:	beq	1647c <sprintf@plt+0x4bf0>
   1644c:	add	r1, r1, #4
   16450:	str	r0, [r1]
   16454:	b	1648c <sprintf@plt+0x4c00>
   16458:	ldrb	r0, [r5, #768]	; 0x300
   1645c:	tst	r0, #2
   16460:	bne	163f8 <sprintf@plt+0x4b6c>
   16464:	mov	r0, r7
   16468:	bl	1164c <free@plt>
   1646c:	ldr	r8, [r8, #8]
   16470:	cmp	r8, #0
   16474:	bne	16378 <sprintf@plt+0x4aec>
   16478:	b	164b4 <sprintf@plt+0x4c28>
   1647c:	mov	r1, sl
   16480:	ldr	r2, [r1, #8]!
   16484:	cmp	r2, #0
   16488:	streq	r0, [r1]
   1648c:	str	r0, [sl, #4]
   16490:	ldr	r0, [sl, #12]
   16494:	add	r0, r0, #1
   16498:	str	r0, [sl, #12]
   1649c:	ldr	r0, [r5, #788]	; 0x314
   164a0:	add	r0, r0, #1
   164a4:	str	r0, [r5, #788]	; 0x314
   164a8:	ldr	r8, [r8, #8]
   164ac:	cmp	r8, #0
   164b0:	bne	16378 <sprintf@plt+0x4aec>
   164b4:	ldr	r0, [sp]
   164b8:	ldr	r0, [r0, #12]
   164bc:	cmp	r0, #0
   164c0:	mov	r0, #0
   164c4:	beq	164f0 <sprintf@plt+0x4c64>
   164c8:	movw	r0, #44452	; 0xada4
   164cc:	movt	r0, #2
   164d0:	ldr	r5, [r0]
   164d4:	ldr	r6, [r0, #16]
   164d8:	bl	116ac <rb_current_time@plt>
   164dc:	ldr	r1, [r4, #464]	; 0x1d0
   164e0:	add	r0, r0, r5
   164e4:	add	r1, r1, r6, lsl #4
   164e8:	str	r0, [r1, #4]
   164ec:	mov	r0, #1
   164f0:	sub	sp, fp, #28
   164f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164f8:	bl	11754 <rb_outofmemory@plt>
   164fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16500:	add	fp, sp, #28
   16504:	sub	sp, sp, #4
   16508:	ldr	r8, [r3, #4]
   1650c:	mov	r4, r0
   16510:	movw	r0, #44452	; 0xada4
   16514:	movt	r0, #2
   16518:	ldr	r7, [r0, #16]
   1651c:	ldr	r0, [r8, #464]	; 0x1d0
   16520:	add	r0, r0, r7, lsl #4
   16524:	ldr	r5, [r0, #8]
   16528:	cmp	r5, #0
   1652c:	beq	165f4 <sprintf@plt+0x4d68>
   16530:	ldr	r9, [r3]
   16534:	cmp	r4, #0
   16538:	mov	r6, r3
   1653c:	cmpne	r1, #0
   16540:	bne	165fc <sprintf@plt+0x4d70>
   16544:	mov	r0, r9
   16548:	bl	16710 <sprintf@plt+0x4e84>
   1654c:	ldr	r0, [r6, #8]
   16550:	bl	12158 <sprintf@plt+0x8cc>
   16554:	ldr	r0, [r6, #20]
   16558:	ldr	r1, [r6, #16]
   1655c:	mov	r4, #0
   16560:	movw	r7, #44452	; 0xada4
   16564:	movt	r7, #2
   16568:	cmp	r0, #0
   1656c:	streq	r1, [r5, #8]
   16570:	strne	r1, [r0, #4]
   16574:	ldrne	r1, [r6, #16]
   16578:	add	r2, r1, #8
   1657c:	cmp	r1, #0
   16580:	addeq	r2, r5, #4
   16584:	str	r0, [r2]
   16588:	str	r4, [r6, #16]
   1658c:	str	r4, [r6, #20]
   16590:	ldr	r0, [r5, #12]
   16594:	sub	r0, r0, #1
   16598:	str	r0, [r5, #12]
   1659c:	mov	r0, r6
   165a0:	bl	1164c <free@plt>
   165a4:	ldr	r0, [r5, #12]
   165a8:	cmp	r0, #0
   165ac:	bne	165f4 <sprintf@plt+0x4d68>
   165b0:	ldr	r0, [r8]
   165b4:	movw	r1, #37858	; 0x93e2
   165b8:	movt	r1, #1
   165bc:	bl	124bc <sprintf@plt+0xc30>
   165c0:	mov	r0, r5
   165c4:	bl	1164c <free@plt>
   165c8:	ldr	r1, [r7, #16]
   165cc:	ldr	r0, [r8, #464]	; 0x1d0
   165d0:	add	r0, r0, r1, lsl #4
   165d4:	str	r4, [r0, #4]
   165d8:	str	r4, [r0, #8]
   165dc:	mov	r0, r8
   165e0:	bl	12eac <sprintf@plt+0x1620>
   165e4:	ldr	r0, [r8, #460]	; 0x1cc
   165e8:	subs	r0, r0, #1
   165ec:	str	r0, [r8, #460]	; 0x1cc
   165f0:	beq	1665c <sprintf@plt+0x4dd0>
   165f4:	sub	sp, fp, #28
   165f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165fc:	ldr	r0, [r9, #780]	; 0x30c
   16600:	cmp	r0, #0
   16604:	beq	166bc <sprintf@plt+0x4e30>
   16608:	mov	r0, r4
   1660c:	mov	r1, #46	; 0x2e
   16610:	bl	115f8 <strrchr@plt>
   16614:	cmp	r0, #0
   16618:	ldrbne	r1, [r0, #1]!
   1661c:	cmpne	r1, #0
   16620:	bne	1666c <sprintf@plt+0x4de0>
   16624:	ldr	r0, [r9, #796]	; 0x31c
   16628:	add	r7, r0, #3600	; 0xe10
   1662c:	bl	116ac <rb_current_time@plt>
   16630:	cmp	r7, r0
   16634:	bge	16544 <sprintf@plt+0x4cb8>
   16638:	movw	r1, #37942	; 0x9436
   1663c:	mov	r0, #87	; 0x57
   16640:	mov	r2, r9
   16644:	mov	r3, r4
   16648:	movt	r1, #1
   1664c:	bl	12528 <sprintf@plt+0xc9c>
   16650:	bl	116ac <rb_current_time@plt>
   16654:	str	r0, [r9, #796]	; 0x31c
   16658:	b	16544 <sprintf@plt+0x4cb8>
   1665c:	mov	r0, r8
   16660:	sub	sp, fp, #28
   16664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16668:	b	12df0 <sprintf@plt+0x1564>
   1666c:	ldr	sl, [r9, #772]	; 0x304
   16670:	str	r0, [sp]
   16674:	cmp	sl, #0
   16678:	bne	1668c <sprintf@plt+0x4e00>
   1667c:	b	16544 <sprintf@plt+0x4cb8>
   16680:	ldr	sl, [sl, #8]
   16684:	cmp	sl, #0
   16688:	beq	16544 <sprintf@plt+0x4cb8>
   1668c:	ldr	r1, [sl]
   16690:	mov	r0, r4
   16694:	ldr	r3, [r1]
   16698:	cmp	r3, #1
   1669c:	beq	166ac <sprintf@plt+0x4e20>
   166a0:	ldr	r0, [sp]
   166a4:	cmp	r3, #2
   166a8:	bne	166f4 <sprintf@plt+0x4e68>
   166ac:	add	r1, r1, #4
   166b0:	bl	11868 <strcmp@plt>
   166b4:	cmp	r0, #0
   166b8:	bne	16680 <sprintf@plt+0x4df4>
   166bc:	ldr	r0, [r9, #792]	; 0x318
   166c0:	add	r3, r9, #256	; 0x100
   166c4:	mov	r1, r7
   166c8:	mov	r2, r9
   166cc:	add	r0, r0, #1
   166d0:	str	r0, [r9, #792]	; 0x318
   166d4:	mov	r0, r8
   166d8:	bl	12b14 <sprintf@plt+0x1288>
   166dc:	movw	r1, #38032	; 0x9490
   166e0:	mov	r0, r8
   166e4:	movt	r1, #1
   166e8:	sub	sp, fp, #28
   166ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166f0:	b	1680c <sprintf@plt+0x4f80>
   166f4:	movw	r1, #37895	; 0x9407
   166f8:	mov	r0, #67	; 0x43
   166fc:	mov	r2, r9
   16700:	movt	r1, #1
   16704:	bl	12528 <sprintf@plt+0xc9c>
   16708:	mov	r0, #3
   1670c:	bl	11874 <exit@plt>
   16710:	push	{r4, r5, r6, r7, fp, lr}
   16714:	add	fp, sp, #16
   16718:	mov	r4, r0
   1671c:	ldr	r0, [r0, #788]	; 0x314
   16720:	subs	r0, r0, #1
   16724:	str	r0, [r4, #788]	; 0x314
   16728:	bgt	16808 <sprintf@plt+0x4f7c>
   1672c:	ldrb	r0, [r4, #784]	; 0x310
   16730:	cmp	r0, #0
   16734:	popeq	{r4, r5, r6, r7, fp, pc}
   16738:	mov	r5, r4
   1673c:	ldr	r0, [r5, #772]!	; 0x304
   16740:	cmp	r0, #0
   16744:	beq	16794 <sprintf@plt+0x4f08>
   16748:	mov	r6, #0
   1674c:	ldmib	r0, {r1, r7}
   16750:	mov	r2, r5
   16754:	cmp	r7, #0
   16758:	streq	r1, [r4, #776]	; 0x308
   1675c:	strne	r1, [r7, #4]
   16760:	ldrne	r1, [r0, #4]
   16764:	cmp	r1, #0
   16768:	addne	r2, r1, #8
   1676c:	str	r7, [r2]
   16770:	str	r6, [r0, #4]
   16774:	str	r6, [r0, #8]
   16778:	ldr	r1, [r4, #780]	; 0x30c
   1677c:	sub	r1, r1, #1
   16780:	str	r1, [r4, #780]	; 0x30c
   16784:	bl	1164c <free@plt>
   16788:	cmp	r7, #0
   1678c:	mov	r0, r7
   16790:	bne	1674c <sprintf@plt+0x4ec0>
   16794:	movw	r7, #61412	; 0xefe4
   16798:	movt	r7, #2
   1679c:	ldr	r2, [r7]
   167a0:	cmp	r2, #0
   167a4:	beq	167fc <sprintf@plt+0x4f70>
   167a8:	ldr	r3, [r2]
   167ac:	mov	r0, r2
   167b0:	ldr	r2, [r2, #8]
   167b4:	cmp	r3, r4
   167b8:	bne	167a0 <sprintf@plt+0x4f14>
   167bc:	ldr	r3, [r0, #4]
   167c0:	cmp	r2, #0
   167c4:	mov	r1, r7
   167c8:	streq	r3, [r7, #4]
   167cc:	strne	r3, [r2, #4]
   167d0:	ldrne	r3, [r0, #4]
   167d4:	cmp	r3, #0
   167d8:	addne	r1, r3, #8
   167dc:	str	r2, [r1]
   167e0:	mov	r1, #0
   167e4:	str	r1, [r0, #4]
   167e8:	str	r1, [r0, #8]
   167ec:	ldr	r1, [r7, #8]
   167f0:	sub	r1, r1, #1
   167f4:	str	r1, [r7, #8]
   167f8:	bl	116d0 <rb_free_rb_dlink_node@plt>
   167fc:	mov	r0, r4
   16800:	pop	{r4, r5, r6, r7, fp, lr}
   16804:	b	1164c <free@plt>
   16808:	pop	{r4, r5, r6, r7, fp, pc}
   1680c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16810:	add	fp, sp, #28
   16814:	sub	sp, sp, #4
   16818:	movw	r8, #44452	; 0xada4
   1681c:	mov	r9, r0
   16820:	movt	r8, #2
   16824:	ldr	r2, [r9, #464]	; 0x1d0
   16828:	ldr	r0, [r8, #16]
   1682c:	add	r0, r2, r0, lsl #4
   16830:	ldr	r5, [r0, #8]
   16834:	cmp	r5, #0
   16838:	beq	16908 <sprintf@plt+0x507c>
   1683c:	ldr	r0, [r5, #12]
   16840:	cmp	r0, #0
   16844:	beq	168d0 <sprintf@plt+0x5044>
   16848:	ldr	r0, [r9]
   1684c:	add	sl, r5, #4
   16850:	bl	124bc <sprintf@plt+0xc30>
   16854:	ldr	r4, [sl]
   16858:	cmp	r4, #0
   1685c:	beq	168d0 <sprintf@plt+0x5044>
   16860:	mov	r7, #0
   16864:	ldr	r6, [r4]
   16868:	ldr	r4, [r4, #8]
   1686c:	ldr	r0, [r6, #8]
   16870:	bl	12158 <sprintf@plt+0x8cc>
   16874:	ldr	r0, [r6]
   16878:	bl	16710 <sprintf@plt+0x4e84>
   1687c:	ldr	r0, [r6, #20]
   16880:	ldr	r1, [r6, #16]
   16884:	mov	r2, sl
   16888:	cmp	r0, #0
   1688c:	streq	r1, [r5, #8]
   16890:	strne	r1, [r0, #4]
   16894:	ldrne	r1, [r6, #16]
   16898:	cmp	r1, #0
   1689c:	addne	r2, r1, #8
   168a0:	cmp	r6, #0
   168a4:	str	r0, [r2]
   168a8:	str	r7, [r6, #16]
   168ac:	str	r7, [r6, #20]
   168b0:	ldr	r0, [r5, #12]
   168b4:	sub	r0, r0, #1
   168b8:	str	r0, [r5, #12]
   168bc:	beq	168c8 <sprintf@plt+0x503c>
   168c0:	mov	r0, r6
   168c4:	bl	1164c <free@plt>
   168c8:	cmp	r4, #0
   168cc:	bne	16864 <sprintf@plt+0x4fd8>
   168d0:	mov	r0, r5
   168d4:	bl	1164c <free@plt>
   168d8:	ldr	r1, [r8, #16]
   168dc:	ldr	r0, [r9, #464]	; 0x1d0
   168e0:	mov	r2, #0
   168e4:	add	r0, r0, r1, lsl #4
   168e8:	str	r2, [r0, #4]
   168ec:	str	r2, [r0, #8]
   168f0:	mov	r0, r9
   168f4:	bl	12eac <sprintf@plt+0x1620>
   168f8:	ldr	r0, [r9, #460]	; 0x1cc
   168fc:	subs	r0, r0, #1
   16900:	str	r0, [r9, #460]	; 0x1cc
   16904:	beq	16910 <sprintf@plt+0x5084>
   16908:	sub	sp, fp, #28
   1690c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16910:	mov	r0, r9
   16914:	sub	sp, fp, #28
   16918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1691c:	b	12df0 <sprintf@plt+0x1564>
   16920:	push	{fp, lr}
   16924:	mov	fp, sp
   16928:	ldr	r0, [r2]
   1692c:	mov	r1, #0
   16930:	mov	r2, #10
   16934:	bl	116e8 <strtol@plt>
   16938:	cmn	r0, #1
   1693c:	mov	r2, r0
   16940:	movwgt	r0, #44552	; 0xae08
   16944:	movtgt	r0, #2
   16948:	strgt	r2, [r0, #4]
   1694c:	popgt	{fp, pc}
   16950:	movw	r1, #38114	; 0x94e2
   16954:	mov	r0, #67	; 0x43
   16958:	movt	r1, #1
   1695c:	bl	12528 <sprintf@plt+0xc9c>
   16960:	mov	r0, #3
   16964:	bl	11874 <exit@plt>
   16968:	ldr	r0, [r2]
   1696c:	movw	r1, #44552	; 0xae08
   16970:	movt	r1, #2
   16974:	ldrb	r0, [r0]
   16978:	sub	r0, r0, #49	; 0x31
   1697c:	clz	r0, r0
   16980:	lsr	r0, r0, #5
   16984:	strb	r0, [r1]
   16988:	bx	lr
   1698c:	push	{r4, r5, r6, sl, fp, lr}
   16990:	add	fp, sp, #16
   16994:	sub	sp, sp, #8
   16998:	movw	r5, #61820	; 0xf17c
   1699c:	mov	r4, sp
   169a0:	movt	r5, #2
   169a4:	mov	r1, r4
   169a8:	ldr	r0, [r5]
   169ac:	bl	11688 <rb_dictionary_foreach_start@plt>
   169b0:	ldr	r0, [r5]
   169b4:	mov	r1, r4
   169b8:	bl	11598 <rb_dictionary_foreach_cur@plt>
   169bc:	cmp	r0, #0
   169c0:	beq	16a0c <sprintf@plt+0x5180>
   169c4:	movw	r6, #44552	; 0xae08
   169c8:	mov	r4, sp
   169cc:	movt	r6, #2
   169d0:	ldr	r1, [r6, #20]
   169d4:	ldr	r2, [r0, #464]	; 0x1d0
   169d8:	add	r1, r2, r1, lsl #4
   169dc:	ldr	r1, [r1, #8]
   169e0:	cmp	r1, #0
   169e4:	movne	r1, #2
   169e8:	blne	16bc0 <sprintf@plt+0x5334>
   169ec:	ldr	r0, [r5]
   169f0:	mov	r1, r4
   169f4:	bl	11640 <rb_dictionary_foreach_next@plt>
   169f8:	ldr	r0, [r5]
   169fc:	mov	r1, r4
   16a00:	bl	11598 <rb_dictionary_foreach_cur@plt>
   16a04:	cmp	r0, #0
   16a08:	bne	169d0 <sprintf@plt+0x5144>
   16a0c:	sub	sp, fp, #16
   16a10:	pop	{r4, r5, r6, sl, fp, pc}
   16a14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a18:	add	fp, sp, #28
   16a1c:	sub	sp, sp, #268	; 0x10c
   16a20:	mov	r4, r0
   16a24:	mov	r0, #1
   16a28:	mov	r1, #4
   16a2c:	bl	115b0 <calloc@plt>
   16a30:	cmp	r0, #0
   16a34:	beq	16b94 <sprintf@plt+0x5308>
   16a38:	movw	sl, #44552	; 0xae08
   16a3c:	mov	r5, r0
   16a40:	movt	sl, #2
   16a44:	ldrb	r0, [sl]
   16a48:	cmp	r0, #0
   16a4c:	beq	16b2c <sprintf@plt+0x52a0>
   16a50:	ldr	r1, [r4, #460]	; 0x1cc
   16a54:	ldr	r0, [r4]
   16a58:	add	r1, r1, #1
   16a5c:	str	r1, [r4, #460]	; 0x1cc
   16a60:	movw	r1, #38151	; 0x9507
   16a64:	ldrh	r8, [r4, #248]	; 0xf8
   16a68:	movt	r1, #1
   16a6c:	bl	124bc <sprintf@plt+0xc30>
   16a70:	ldr	r7, [sl, #20]
   16a74:	ldr	r0, [r4, #464]	; 0x1d0
   16a78:	add	r0, r0, r7, lsl #4
   16a7c:	str	r5, [r0, #8]
   16a80:	ldr	r6, [sl, #4]
   16a84:	bl	116ac <rb_current_time@plt>
   16a88:	ldr	r1, [r4, #464]	; 0x1d0
   16a8c:	add	r0, r0, r6
   16a90:	movw	r3, #38297	; 0x9599
   16a94:	movt	r3, #1
   16a98:	add	r1, r1, r7, lsl #4
   16a9c:	str	r0, [r1, #4]
   16aa0:	mov	r0, r8
   16aa4:	mov	r1, #1
   16aa8:	ldr	r2, [r4, #4]
   16aac:	bl	11568 <rb_socket@plt>
   16ab0:	cmp	r0, #0
   16ab4:	str	r0, [r5]
   16ab8:	beq	16b5c <sprintf@plt+0x52d0>
   16abc:	add	r8, sp, #136	; 0x88
   16ac0:	mov	r6, r0
   16ac4:	add	r1, r4, #64	; 0x40
   16ac8:	mov	r2, #128	; 0x80
   16acc:	add	r5, r4, #248	; 0xf8
   16ad0:	mov	r0, r8
   16ad4:	bl	116c4 <memcpy@plt>
   16ad8:	add	r9, sp, #8
   16adc:	mov	r1, r5
   16ae0:	mov	r2, #128	; 0x80
   16ae4:	mov	r0, r9
   16ae8:	bl	116c4 <memcpy@plt>
   16aec:	mov	r0, #0
   16af0:	movw	r3, #27760	; 0x6c70
   16af4:	mov	r1, r9
   16af8:	mov	r2, r8
   16afc:	str	r4, [sp]
   16b00:	strh	r0, [sp, #138]	; 0x8a
   16b04:	mov	r0, #28928	; 0x7100
   16b08:	movt	r3, #1
   16b0c:	strh	r0, [sp, #10]
   16b10:	ldr	r0, [sl, #4]
   16b14:	str	r0, [sp, #4]
   16b18:	mov	r0, r6
   16b1c:	bl	11508 <rb_connect_tcp@plt>
   16b20:	mov	r0, #1
   16b24:	sub	sp, fp, #28
   16b28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b2c:	mov	r0, r5
   16b30:	bl	1164c <free@plt>
   16b34:	ldr	r0, [r4]
   16b38:	movw	r1, #38264	; 0x9578
   16b3c:	movt	r1, #1
   16b40:	bl	124bc <sprintf@plt+0xc30>
   16b44:	ldr	r1, [sl, #20]
   16b48:	mov	r0, r4
   16b4c:	bl	12eac <sprintf@plt+0x1620>
   16b50:	mov	r0, #1
   16b54:	sub	sp, fp, #28
   16b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b5c:	bl	11880 <__errno_location@plt>
   16b60:	ldr	r0, [r0]
   16b64:	bl	114b4 <strerror@plt>
   16b68:	movw	r1, #38303	; 0x959f
   16b6c:	mov	r2, r0
   16b70:	mov	r0, #68	; 0x44
   16b74:	movt	r1, #1
   16b78:	bl	12528 <sprintf@plt+0xc9c>
   16b7c:	mov	r0, r4
   16b80:	mov	r1, #2
   16b84:	bl	16bc0 <sprintf@plt+0x5334>
   16b88:	mov	r0, #1
   16b8c:	sub	sp, fp, #28
   16b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b94:	bl	11754 <rb_outofmemory@plt>
   16b98:	movw	r1, #44552	; 0xae08
   16b9c:	ldr	r2, [r0, #464]	; 0x1d0
   16ba0:	movt	r1, #2
   16ba4:	ldr	r1, [r1, #20]
   16ba8:	add	r1, r2, r1, lsl #4
   16bac:	ldr	r1, [r1, #8]
   16bb0:	cmp	r1, #0
   16bb4:	bxeq	lr
   16bb8:	mov	r1, #2
   16bbc:	b	16bc0 <sprintf@plt+0x5334>
   16bc0:	push	{r4, r5, r6, r7, fp, lr}
   16bc4:	add	fp, sp, #16
   16bc8:	movw	r7, #44552	; 0xae08
   16bcc:	mov	r4, r0
   16bd0:	mov	r5, r1
   16bd4:	mov	r2, #11
   16bd8:	movt	r7, #2
   16bdc:	ldr	r1, [r4, #464]	; 0x1d0
   16be0:	ldr	r0, [r7, #20]
   16be4:	add	r0, r1, r0, lsl #4
   16be8:	movw	r1, #36164	; 0x8d44
   16bec:	ldr	r6, [r0, #8]
   16bf0:	add	r0, r4, #440	; 0x1b8
   16bf4:	movt	r1, #1
   16bf8:	bl	11628 <rb_strlcpy@plt>
   16bfc:	ldr	r0, [r6]
   16c00:	cmp	r0, #0
   16c04:	beq	16c0c <sprintf@plt+0x5380>
   16c08:	bl	116dc <rb_close@plt>
   16c0c:	cmp	r6, #0
   16c10:	beq	16c1c <sprintf@plt+0x5390>
   16c14:	mov	r0, r6
   16c18:	bl	1164c <free@plt>
   16c1c:	ldr	r0, [r7, #20]
   16c20:	ldr	r1, [r4, #464]	; 0x1d0
   16c24:	add	r0, r1, r0, lsl #4
   16c28:	mov	r1, #0
   16c2c:	str	r1, [r0, #4]
   16c30:	str	r1, [r0, #8]
   16c34:	movw	r0, #38356	; 0x95d4
   16c38:	movt	r0, #1
   16c3c:	ldr	r1, [r0, r5, lsl #2]
   16c40:	ldr	r0, [r4]
   16c44:	bl	124bc <sprintf@plt+0xc30>
   16c48:	ldr	r1, [r7, #20]
   16c4c:	mov	r0, r4
   16c50:	bl	12eac <sprintf@plt+0x1620>
   16c54:	ldr	r0, [r4, #460]	; 0x1cc
   16c58:	subs	r0, r0, #1
   16c5c:	str	r0, [r4, #460]	; 0x1cc
   16c60:	popne	{r4, r5, r6, r7, fp, pc}
   16c64:	mov	r0, r4
   16c68:	pop	{r4, r5, r6, r7, fp, lr}
   16c6c:	b	12df0 <sprintf@plt+0x1564>
   16c70:	push	{r4, r5, r6, r7, fp, lr}
   16c74:	add	fp, sp, #16
   16c78:	sub	sp, sp, #40	; 0x28
   16c7c:	mov	r4, r2
   16c80:	cmp	r1, #0
   16c84:	bne	16cfc <sprintf@plt+0x5470>
   16c88:	movw	r0, #44552	; 0xae08
   16c8c:	ldr	r1, [r4, #464]	; 0x1d0
   16c90:	ldrh	r3, [r4, #246]	; 0xf6
   16c94:	movw	r2, #38337	; 0x95c1
   16c98:	add	r5, sp, #8
   16c9c:	movt	r0, #2
   16ca0:	movt	r2, #1
   16ca4:	ldr	r0, [r0, #20]
   16ca8:	add	r0, r1, r0, lsl #4
   16cac:	mov	r1, #32
   16cb0:	ldr	r7, [r0, #8]
   16cb4:	ldrh	r0, [r4, #62]	; 0x3e
   16cb8:	str	r0, [sp]
   16cbc:	mov	r0, r5
   16cc0:	bl	11814 <snprintf@plt>
   16cc4:	mov	r0, r5
   16cc8:	bl	116a0 <strlen@plt>
   16ccc:	mov	r6, r0
   16cd0:	ldr	r0, [r7]
   16cd4:	mov	r1, r5
   16cd8:	mov	r2, r6
   16cdc:	bl	11604 <rb_write@plt>
   16ce0:	cmp	r0, r6
   16ce4:	bne	16cfc <sprintf@plt+0x5470>
   16ce8:	ldr	r0, [r7]
   16cec:	mov	r1, r4
   16cf0:	bl	16d10 <sprintf@plt+0x5484>
   16cf4:	sub	sp, fp, #16
   16cf8:	pop	{r4, r5, r6, r7, fp, pc}
   16cfc:	mov	r0, r4
   16d00:	mov	r1, #2
   16d04:	bl	16bc0 <sprintf@plt+0x5334>
   16d08:	sub	sp, fp, #16
   16d0c:	pop	{r4, r5, r6, r7, fp, pc}
   16d10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16d14:	add	fp, sp, #24
   16d18:	sub	sp, sp, #136	; 0x88
   16d1c:	mov	r4, sp
   16d20:	mov	r8, r1
   16d24:	mov	r5, r0
   16d28:	mov	r1, #0
   16d2c:	mov	r2, #129	; 0x81
   16d30:	mov	r0, r4
   16d34:	bl	115e0 <memset@plt>
   16d38:	mov	r0, r5
   16d3c:	mov	r1, r4
   16d40:	mov	r2, #128	; 0x80
   16d44:	bl	11664 <rb_read@plt>
   16d48:	cmn	r0, #1
   16d4c:	ble	16f30 <sprintf@plt+0x56a4>
   16d50:	cmp	r0, #0
   16d54:	beq	16f64 <sprintf@plt+0x56d8>
   16d58:	mov	r0, sp
   16d5c:	mov	r1, #58	; 0x3a
   16d60:	bl	1158c <strchr@plt>
   16d64:	mov	r5, #3
   16d68:	cmp	r0, #0
   16d6c:	beq	16f68 <sprintf@plt+0x56dc>
   16d70:	mov	r6, r0
   16d74:	mov	r4, #0
   16d78:	mov	r1, #58	; 0x3a
   16d7c:	strb	r4, [r6], #1
   16d80:	mov	r0, r6
   16d84:	bl	1158c <strchr@plt>
   16d88:	cmp	r0, #0
   16d8c:	beq	16f68 <sprintf@plt+0x56dc>
   16d90:	mov	r7, r0
   16d94:	mov	r0, sp
   16d98:	mov	r1, #44	; 0x2c
   16d9c:	strb	r4, [r7], #1
   16da0:	bl	1158c <strchr@plt>
   16da4:	cmp	r0, #0
   16da8:	beq	16f68 <sprintf@plt+0x56dc>
   16dac:	mov	r4, r0
   16db0:	mov	r0, #0
   16db4:	mov	r1, #0
   16db8:	mov	r2, #10
   16dbc:	strb	r0, [r4]
   16dc0:	mov	r0, sp
   16dc4:	bl	116e8 <strtol@plt>
   16dc8:	cmp	r0, #0
   16dcc:	beq	16f68 <sprintf@plt+0x56dc>
   16dd0:	add	r0, r4, #1
   16dd4:	mov	r1, #0
   16dd8:	mov	r2, #10
   16ddc:	bl	116e8 <strtol@plt>
   16de0:	cmp	r0, #0
   16de4:	beq	16f68 <sprintf@plt+0x56dc>
   16de8:	movw	r1, #38347	; 0x95cb
   16dec:	mov	r0, r6
   16df0:	movt	r1, #1
   16df4:	bl	11724 <strstr@plt>
   16df8:	cmp	r0, #0
   16dfc:	beq	16f68 <sprintf@plt+0x56dc>
   16e00:	mov	r0, r7
   16e04:	mov	r1, #58	; 0x3a
   16e08:	bl	1158c <strchr@plt>
   16e0c:	cmp	r0, #0
   16e10:	beq	16f68 <sprintf@plt+0x56dc>
   16e14:	mov	r1, #0
   16e18:	strb	r1, [r0]
   16e1c:	mov	r1, r0
   16e20:	ldrb	r7, [r0, #1]!
   16e24:	orr	r2, r7, #32
   16e28:	cmp	r2, #126	; 0x7e
   16e2c:	beq	16e1c <sprintf@plt+0x5590>
   16e30:	add	r0, r8, #440	; 0x1b8
   16e34:	cmp	r7, #0
   16e38:	beq	16e9c <sprintf@plt+0x5610>
   16e3c:	mov	r2, #10
   16e40:	mov	r3, #2
   16e44:	uxtb	r6, r7
   16e48:	cmp	r6, #57	; 0x39
   16e4c:	ble	16e68 <sprintf@plt+0x55dc>
   16e50:	cmp	r6, #58	; 0x3a
   16e54:	cmpne	r6, #91	; 0x5b
   16e58:	beq	16e88 <sprintf@plt+0x55fc>
   16e5c:	cmp	r6, #64	; 0x40
   16e60:	bne	16e80 <sprintf@plt+0x55f4>
   16e64:	b	16e9c <sprintf@plt+0x5610>
   16e68:	cmp	r6, #32
   16e6c:	beq	16e88 <sprintf@plt+0x55fc>
   16e70:	cmp	r6, #10
   16e74:	beq	16e9c <sprintf@plt+0x5610>
   16e78:	cmp	r6, #13
   16e7c:	beq	16e9c <sprintf@plt+0x5610>
   16e80:	strb	r7, [r0], #1
   16e84:	sub	r2, r2, #1
   16e88:	ldrb	r7, [r1, r3]
   16e8c:	cmp	r7, #0
   16e90:	addne	r3, r3, #1
   16e94:	cmpne	r2, #0
   16e98:	bne	16e44 <sprintf@plt+0x55b8>
   16e9c:	movw	r5, #44552	; 0xae08
   16ea0:	mov	r1, #0
   16ea4:	strb	r1, [r0]
   16ea8:	movt	r5, #2
   16eac:	ldr	r0, [r5, #20]
   16eb0:	ldr	r1, [r8, #464]	; 0x1d0
   16eb4:	add	r0, r1, r0, lsl #4
   16eb8:	ldr	r4, [r0, #8]
   16ebc:	ldr	r0, [r4]
   16ec0:	cmp	r0, #0
   16ec4:	beq	16ecc <sprintf@plt+0x5640>
   16ec8:	bl	116dc <rb_close@plt>
   16ecc:	cmp	r4, #0
   16ed0:	beq	16edc <sprintf@plt+0x5650>
   16ed4:	mov	r0, r4
   16ed8:	bl	1164c <free@plt>
   16edc:	ldr	r0, [r5, #20]
   16ee0:	ldr	r1, [r8, #464]	; 0x1d0
   16ee4:	add	r0, r1, r0, lsl #4
   16ee8:	mov	r1, #0
   16eec:	str	r1, [r0, #4]
   16ef0:	str	r1, [r0, #8]
   16ef4:	movw	r1, #38170	; 0x951a
   16ef8:	ldr	r0, [r8]
   16efc:	movt	r1, #1
   16f00:	bl	124bc <sprintf@plt+0xc30>
   16f04:	ldr	r1, [r5, #20]
   16f08:	mov	r0, r8
   16f0c:	bl	12eac <sprintf@plt+0x1620>
   16f10:	ldr	r0, [r8, #460]	; 0x1cc
   16f14:	subs	r0, r0, #1
   16f18:	str	r0, [r8, #460]	; 0x1cc
   16f1c:	bne	16f28 <sprintf@plt+0x569c>
   16f20:	mov	r0, r8
   16f24:	bl	12df0 <sprintf@plt+0x1564>
   16f28:	sub	sp, fp, #24
   16f2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16f30:	bl	11880 <__errno_location@plt>
   16f34:	ldr	r0, [r0]
   16f38:	bl	114f0 <rb_ignore_errno@plt>
   16f3c:	cmp	r0, #0
   16f40:	beq	16f64 <sprintf@plt+0x56d8>
   16f44:	movw	r2, #27920	; 0x6d10
   16f48:	mov	r0, r5
   16f4c:	mov	r1, #1
   16f50:	mov	r3, r8
   16f54:	movt	r2, #1
   16f58:	bl	11538 <rb_setselect@plt>
   16f5c:	sub	sp, fp, #24
   16f60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16f64:	mov	r5, #2
   16f68:	mov	r0, r8
   16f6c:	mov	r1, r5
   16f70:	bl	16bc0 <sprintf@plt+0x5334>
   16f74:	sub	sp, fp, #24
   16f78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16f7c:	push	{fp, lr}
   16f80:	mov	fp, sp
   16f84:	ldr	r0, [r2]
   16f88:	mov	r1, #0
   16f8c:	mov	r2, #10
   16f90:	bl	116e8 <strtol@plt>
   16f94:	cmn	r0, #1
   16f98:	mov	r2, r0
   16f9c:	movwgt	r0, #44644	; 0xae64
   16fa0:	movtgt	r0, #2
   16fa4:	strgt	r2, [r0]
   16fa8:	popgt	{fp, pc}
   16fac:	movw	r1, #38389	; 0x95f5
   16fb0:	mov	r0, #67	; 0x43
   16fb4:	movt	r1, #1
   16fb8:	bl	12528 <sprintf@plt+0xc9c>
   16fbc:	mov	r0, #3
   16fc0:	bl	11874 <exit@plt>
   16fc4:	push	{r4, r5, r6, sl, fp, lr}
   16fc8:	add	fp, sp, #16
   16fcc:	sub	sp, sp, #8
   16fd0:	movw	r5, #61820	; 0xf17c
   16fd4:	mov	r4, sp
   16fd8:	movt	r5, #2
   16fdc:	mov	r1, r4
   16fe0:	ldr	r0, [r5]
   16fe4:	bl	11688 <rb_dictionary_foreach_start@plt>
   16fe8:	ldr	r0, [r5]
   16fec:	mov	r1, r4
   16ff0:	bl	11598 <rb_dictionary_foreach_cur@plt>
   16ff4:	cmp	r0, #0
   16ff8:	beq	17044 <sprintf@plt+0x57b8>
   16ffc:	movw	r6, #44644	; 0xae64
   17000:	mov	r4, sp
   17004:	movt	r6, #2
   17008:	ldr	r1, [r6, #16]
   1700c:	ldr	r2, [r0, #464]	; 0x1d0
   17010:	add	r1, r2, r1, lsl #4
   17014:	ldr	r1, [r1, #8]
   17018:	cmp	r1, #0
   1701c:	movne	r1, #1
   17020:	blne	17108 <sprintf@plt+0x587c>
   17024:	ldr	r0, [r5]
   17028:	mov	r1, r4
   1702c:	bl	11640 <rb_dictionary_foreach_next@plt>
   17030:	ldr	r0, [r5]
   17034:	mov	r1, r4
   17038:	bl	11598 <rb_dictionary_foreach_cur@plt>
   1703c:	cmp	r0, #0
   17040:	bne	17008 <sprintf@plt+0x577c>
   17044:	sub	sp, fp, #16
   17048:	pop	{r4, r5, r6, sl, fp, pc}
   1704c:	push	{r4, r5, r6, r7, fp, lr}
   17050:	add	fp, sp, #16
   17054:	mov	r4, r0
   17058:	mov	r0, #1
   1705c:	mov	r1, #4
   17060:	bl	115b0 <calloc@plt>
   17064:	cmp	r0, #0
   17068:	beq	170dc <sprintf@plt+0x5850>
   1706c:	mov	r5, r0
   17070:	ldr	r0, [r4, #460]	; 0x1cc
   17074:	ldr	r1, [r4, #464]	; 0x1d0
   17078:	add	r0, r0, #1
   1707c:	str	r0, [r4, #460]	; 0x1cc
   17080:	movw	r0, #44644	; 0xae64
   17084:	movt	r0, #2
   17088:	ldr	r6, [r0, #16]
   1708c:	add	r1, r1, r6, lsl #4
   17090:	str	r5, [r1, #8]
   17094:	ldr	r7, [r0]
   17098:	bl	116ac <rb_current_time@plt>
   1709c:	ldr	r1, [r4, #464]	; 0x1d0
   170a0:	add	r0, r0, r7
   170a4:	mov	r2, r4
   170a8:	add	r1, r1, r6, lsl #4
   170ac:	str	r0, [r1, #4]
   170b0:	movw	r1, #29100	; 0x71ac
   170b4:	add	r0, r4, #192	; 0xc0
   170b8:	movt	r1, #1
   170bc:	bl	11fbc <sprintf@plt+0x730>
   170c0:	str	r0, [r5]
   170c4:	movw	r1, #38423	; 0x9617
   170c8:	ldr	r0, [r4]
   170cc:	movt	r1, #1
   170d0:	bl	124bc <sprintf@plt+0xc30>
   170d4:	mov	r0, #1
   170d8:	pop	{r4, r5, r6, r7, fp, pc}
   170dc:	bl	11754 <rb_outofmemory@plt>
   170e0:	movw	r1, #44644	; 0xae64
   170e4:	ldr	r2, [r0, #464]	; 0x1d0
   170e8:	movt	r1, #2
   170ec:	ldr	r1, [r1, #16]
   170f0:	add	r1, r2, r1, lsl #4
   170f4:	ldr	r1, [r1, #8]
   170f8:	cmp	r1, #0
   170fc:	bxeq	lr
   17100:	mov	r1, #1
   17104:	b	17108 <sprintf@plt+0x587c>
   17108:	push	{r4, r5, r6, r7, fp, lr}
   1710c:	add	fp, sp, #16
   17110:	movw	r7, #44644	; 0xae64
   17114:	mov	r4, r0
   17118:	mov	r6, r1
   1711c:	mov	r2, #64	; 0x40
   17120:	movt	r7, #2
   17124:	ldr	r1, [r4, #464]	; 0x1d0
   17128:	ldr	r0, [r7, #16]
   1712c:	add	r0, r1, r0, lsl #4
   17130:	movw	r1, #36164	; 0x8d44
   17134:	ldr	r5, [r0, #8]
   17138:	add	r0, r4, #376	; 0x178
   1713c:	movt	r1, #1
   17140:	bl	11628 <rb_strlcpy@plt>
   17144:	movw	r0, #38568	; 0x96a8
   17148:	movt	r0, #1
   1714c:	ldr	r1, [r0, r6, lsl #2]
   17150:	ldr	r0, [r4]
   17154:	bl	124bc <sprintf@plt+0xc30>
   17158:	ldr	r0, [r5]
   1715c:	bl	12158 <sprintf@plt+0x8cc>
   17160:	cmp	r5, #0
   17164:	beq	17170 <sprintf@plt+0x58e4>
   17168:	mov	r0, r5
   1716c:	bl	1164c <free@plt>
   17170:	ldr	r1, [r7, #16]
   17174:	ldr	r0, [r4, #464]	; 0x1d0
   17178:	mov	r2, #0
   1717c:	add	r0, r0, r1, lsl #4
   17180:	str	r2, [r0, #4]
   17184:	str	r2, [r0, #8]
   17188:	mov	r0, r4
   1718c:	bl	12eac <sprintf@plt+0x1620>
   17190:	ldr	r0, [r4, #460]	; 0x1cc
   17194:	subs	r0, r0, #1
   17198:	str	r0, [r4, #460]	; 0x1cc
   1719c:	popne	{r4, r5, r6, r7, fp, pc}
   171a0:	mov	r0, r4
   171a4:	pop	{r4, r5, r6, r7, fp, lr}
   171a8:	b	12df0 <sprintf@plt+0x1564>
   171ac:	push	{r4, r5, r6, r7, fp, lr}
   171b0:	add	fp, sp, #16
   171b4:	cmp	r0, #0
   171b8:	mov	r4, r3
   171bc:	cmpne	r1, #0
   171c0:	bne	171d4 <sprintf@plt+0x5948>
   171c4:	mov	r0, r4
   171c8:	mov	r1, #1
   171cc:	pop	{r4, r5, r6, r7, fp, lr}
   171d0:	b	17108 <sprintf@plt+0x587c>
   171d4:	mov	r5, r0
   171d8:	bl	116a0 <strlen@plt>
   171dc:	cmp	r0, #64	; 0x40
   171e0:	bcc	171f4 <sprintf@plt+0x5968>
   171e4:	mov	r0, r4
   171e8:	mov	r1, #2
   171ec:	pop	{r4, r5, r6, r7, fp, lr}
   171f0:	b	17108 <sprintf@plt+0x587c>
   171f4:	add	r6, r4, #376	; 0x178
   171f8:	mov	r1, r5
   171fc:	mov	r2, #64	; 0x40
   17200:	mov	r0, r6
   17204:	bl	11628 <rb_strlcpy@plt>
   17208:	movw	r7, #44644	; 0xae64
   1720c:	ldr	r2, [r4, #464]	; 0x1d0
   17210:	ldr	r0, [r4]
   17214:	movt	r7, #2
   17218:	ldr	r1, [r7, #16]
   1721c:	add	r1, r2, r1, lsl #4
   17220:	mov	r2, r6
   17224:	ldr	r5, [r1, #8]
   17228:	movw	r1, #38539	; 0x968b
   1722c:	movt	r1, #1
   17230:	bl	124bc <sprintf@plt+0xc30>
   17234:	ldr	r0, [r5]
   17238:	bl	12158 <sprintf@plt+0x8cc>
   1723c:	cmp	r5, #0
   17240:	beq	1724c <sprintf@plt+0x59c0>
   17244:	mov	r0, r5
   17248:	bl	1164c <free@plt>
   1724c:	ldr	r1, [r7, #16]
   17250:	ldr	r0, [r4, #464]	; 0x1d0
   17254:	mov	r2, #0
   17258:	add	r0, r0, r1, lsl #4
   1725c:	str	r2, [r0, #4]
   17260:	str	r2, [r0, #8]
   17264:	mov	r0, r4
   17268:	bl	12eac <sprintf@plt+0x1620>
   1726c:	ldr	r0, [r4, #460]	; 0x1cc
   17270:	subs	r0, r0, #1
   17274:	str	r0, [r4, #460]	; 0x1cc
   17278:	popne	{r4, r5, r6, r7, fp, pc}
   1727c:	mov	r0, r4
   17280:	pop	{r4, r5, r6, r7, fp, lr}
   17284:	b	12df0 <sprintf@plt+0x1564>
   17288:	push	{fp, lr}
   1728c:	mov	fp, sp
   17290:	ldr	r0, [r2]
   17294:	mov	r1, #0
   17298:	mov	r2, #10
   1729c:	bl	116e8 <strtol@plt>
   172a0:	cmn	r0, #1
   172a4:	mov	r2, r0
   172a8:	movwgt	r0, #44804	; 0xaf04
   172ac:	movtgt	r0, #2
   172b0:	strgt	r2, [r0]
   172b4:	popgt	{fp, pc}
   172b8:	movw	r1, #38690	; 0x9722
   172bc:	mov	r0, #67	; 0x43
   172c0:	movt	r1, #1
   172c4:	pop	{fp, lr}
   172c8:	b	12528 <sprintf@plt+0xc9c>
   172cc:	push	{r4, r5, r6, sl, fp, lr}
   172d0:	add	fp, sp, #16
   172d4:	sub	sp, sp, #8
   172d8:	ldr	r0, [r2]
   172dc:	movw	r4, #61424	; 0xeff0
   172e0:	movt	r4, #2
   172e4:	ldrb	r0, [r0]
   172e8:	subs	r0, r0, #49	; 0x31
   172ec:	clz	r0, r0
   172f0:	lsr	r5, r0, #5
   172f4:	bne	17334 <sprintf@plt+0x5aa8>
   172f8:	ldrb	r0, [r4]
   172fc:	cmp	r0, #0
   17300:	ldrhne	r1, [r4, #54]	; 0x36
   17304:	cmpne	r1, #0
   17308:	bne	173d8 <sprintf@plt+0x5b4c>
   1730c:	ldrb	r0, [r4, #188]	; 0xbc
   17310:	cmp	r0, #0
   17314:	ldrhne	r1, [r4, #242]	; 0xf2
   17318:	cmpne	r1, #0
   1731c:	beq	173c4 <sprintf@plt+0x5b38>
   17320:	ldr	r0, [r4, #372]	; 0x174
   17324:	cmp	r0, #0
   17328:	addeq	r0, r4, #188	; 0xbc
   1732c:	bleq	17e5c <sprintf@plt+0x65d0>
   17330:	b	173c4 <sprintf@plt+0x5b38>
   17334:	ldr	r1, [r4, #184]	; 0xb8
   17338:	ldr	r0, [r4, #372]	; 0x174
   1733c:	orrs	r2, r1, r0
   17340:	beq	173c4 <sprintf@plt+0x5b38>
   17344:	cmp	r1, #0
   17348:	beq	17358 <sprintf@plt+0x5acc>
   1734c:	mov	r0, r1
   17350:	bl	116dc <rb_close@plt>
   17354:	ldr	r0, [r4, #372]	; 0x174
   17358:	cmp	r0, #0
   1735c:	beq	17364 <sprintf@plt+0x5ad8>
   17360:	bl	116dc <rb_close@plt>
   17364:	movw	r6, #61820	; 0xf17c
   17368:	mov	r0, #0
   1736c:	movt	r6, #2
   17370:	str	r0, [r4, #184]	; 0xb8
   17374:	str	r0, [r4, #372]	; 0x174
   17378:	mov	r4, sp
   1737c:	ldr	r0, [r6]
   17380:	mov	r1, r4
   17384:	bl	11688 <rb_dictionary_foreach_start@plt>
   17388:	ldr	r0, [r6]
   1738c:	mov	r1, r4
   17390:	bl	11598 <rb_dictionary_foreach_cur@plt>
   17394:	cmp	r0, #0
   17398:	beq	173c4 <sprintf@plt+0x5b38>
   1739c:	mov	r4, sp
   173a0:	bl	17ca8 <sprintf@plt+0x641c>
   173a4:	ldr	r0, [r6]
   173a8:	mov	r1, r4
   173ac:	bl	11640 <rb_dictionary_foreach_next@plt>
   173b0:	ldr	r0, [r6]
   173b4:	mov	r1, r4
   173b8:	bl	11598 <rb_dictionary_foreach_cur@plt>
   173bc:	cmp	r0, #0
   173c0:	bne	173a0 <sprintf@plt+0x5b14>
   173c4:	movw	r0, #61800	; 0xf168
   173c8:	movt	r0, #2
   173cc:	strb	r5, [r0]
   173d0:	sub	sp, fp, #16
   173d4:	pop	{r4, r5, r6, sl, fp, pc}
   173d8:	ldr	r0, [r4, #184]	; 0xb8
   173dc:	cmp	r0, #0
   173e0:	bne	1730c <sprintf@plt+0x5a80>
   173e4:	movw	r0, #61424	; 0xeff0
   173e8:	movt	r0, #2
   173ec:	bl	17e5c <sprintf@plt+0x65d0>
   173f0:	b	1730c <sprintf@plt+0x5a80>
   173f4:	push	{r4, r5, fp, lr}
   173f8:	add	fp, sp, #8
   173fc:	ldm	r2, {r4, r5}
   17400:	mov	r1, #0
   17404:	mov	r2, #10
   17408:	mov	r0, r5
   1740c:	bl	116e8 <strtol@plt>
   17410:	sub	r1, r0, #1
   17414:	movw	r2, #65535	; 0xffff
   17418:	cmp	r1, r2
   1741c:	bcs	17430 <sprintf@plt+0x5ba4>
   17420:	uxth	r1, r0
   17424:	mov	r0, r4
   17428:	pop	{r4, r5, fp, lr}
   1742c:	b	17e5c <sprintf@plt+0x65d0>
   17430:	movw	r1, #38972	; 0x983c
   17434:	mov	r0, #67	; 0x43
   17438:	mov	r2, r4
   1743c:	mov	r3, r5
   17440:	movt	r1, #1
   17444:	bl	12528 <sprintf@plt+0xc9c>
   17448:	mov	r0, #3
   1744c:	bl	11874 <exit@plt>
   17450:	push	{r4, sl, fp, lr}
   17454:	add	fp, sp, #8
   17458:	movw	r4, #61424	; 0xeff0
   1745c:	movt	r4, #2
   17460:	ldr	r0, [r4, #184]	; 0xb8
   17464:	cmp	r0, #0
   17468:	beq	17470 <sprintf@plt+0x5be4>
   1746c:	bl	116dc <rb_close@plt>
   17470:	ldr	r0, [r4, #372]	; 0x174
   17474:	cmp	r0, #0
   17478:	beq	17480 <sprintf@plt+0x5bf4>
   1747c:	bl	116dc <rb_close@plt>
   17480:	movw	r0, #61424	; 0xeff0
   17484:	mov	r1, #0
   17488:	mov	r2, #376	; 0x178
   1748c:	movt	r0, #2
   17490:	pop	{r4, sl, fp, lr}
   17494:	b	115e0 <memset@plt>
   17498:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1749c:	add	fp, sp, #24
   174a0:	ldr	r0, [r2, #4]
   174a4:	mov	r8, r2
   174a8:	mov	r1, #0
   174ac:	mov	r2, #10
   174b0:	bl	116e8 <strtol@plt>
   174b4:	mov	r6, r0
   174b8:	mov	r0, #1
   174bc:	mov	r1, #40	; 0x28
   174c0:	bl	115b0 <calloc@plt>
   174c4:	cmp	r0, #0
   174c8:	beq	176d4 <sprintf@plt+0x5e48>
   174cc:	mov	r5, r0
   174d0:	sub	r0, r6, #1
   174d4:	movw	r1, #65535	; 0xffff
   174d8:	cmp	r0, r1
   174dc:	bcs	176d8 <sprintf@plt+0x5e4c>
   174e0:	strh	r6, [r5, #20]
   174e4:	movw	r1, #39185	; 0x9911
   174e8:	ldr	r7, [r8]
   174ec:	movt	r1, #1
   174f0:	mov	r0, r7
   174f4:	bl	115a4 <strcasecmp@plt>
   174f8:	cmp	r0, #0
   174fc:	beq	17588 <sprintf@plt+0x5cfc>
   17500:	movw	r1, #39192	; 0x9918
   17504:	mov	r0, r7
   17508:	movt	r1, #1
   1750c:	bl	115a4 <strcasecmp@plt>
   17510:	cmp	r0, #0
   17514:	beq	175bc <sprintf@plt+0x5d30>
   17518:	movw	r1, #39199	; 0x991f
   1751c:	mov	r0, r7
   17520:	movt	r1, #1
   17524:	bl	115a4 <strcasecmp@plt>
   17528:	cmp	r0, #0
   1752c:	beq	175f0 <sprintf@plt+0x5d64>
   17530:	movw	r1, #39211	; 0x992b
   17534:	mov	r0, r7
   17538:	movt	r1, #1
   1753c:	bl	115a4 <strcasecmp@plt>
   17540:	clz	r1, r0
   17544:	uxth	r3, r6
   17548:	cmp	r0, #0
   1754c:	lsr	r1, r1, #5
   17550:	lsl	r1, r1, #2
   17554:	str	r1, [r5, #16]
   17558:	bne	176f4 <sprintf@plt+0x5e68>
   1755c:	movw	r2, #39078	; 0x98a6
   17560:	mov	r0, r5
   17564:	mov	r1, #16
   17568:	movt	r2, #1
   1756c:	bl	11814 <snprintf@plt>
   17570:	movw	r0, #34076	; 0x851c
   17574:	movt	r0, #1
   17578:	str	r0, [r5, #24]
   1757c:	mov	r0, #1
   17580:	strb	r0, [r5, #22]
   17584:	b	17624 <sprintf@plt+0x5d98>
   17588:	movw	r2, #39040	; 0x9880
   1758c:	mov	r0, #1
   17590:	uxth	r3, r6
   17594:	mov	r1, #16
   17598:	str	r0, [r5, #16]
   1759c:	movt	r2, #1
   175a0:	mov	r0, r5
   175a4:	bl	11814 <snprintf@plt>
   175a8:	mov	r0, #0
   175ac:	strb	r0, [r5, #22]
   175b0:	movw	r0, #33756	; 0x83dc
   175b4:	movt	r0, #1
   175b8:	b	17620 <sprintf@plt+0x5d94>
   175bc:	movw	r2, #39051	; 0x988b
   175c0:	mov	r0, #2
   175c4:	uxth	r3, r6
   175c8:	mov	r1, #16
   175cc:	str	r0, [r5, #16]
   175d0:	movt	r2, #1
   175d4:	mov	r0, r5
   175d8:	bl	11814 <snprintf@plt>
   175dc:	mov	r0, #0
   175e0:	strb	r0, [r5, #22]
   175e4:	movw	r0, #33872	; 0x8450
   175e8:	movt	r0, #1
   175ec:	b	17620 <sprintf@plt+0x5d94>
   175f0:	movw	r2, #39062	; 0x9896
   175f4:	mov	r0, #3
   175f8:	uxth	r3, r6
   175fc:	mov	r1, #16
   17600:	str	r0, [r5, #16]
   17604:	movt	r2, #1
   17608:	mov	r0, r5
   1760c:	bl	11814 <snprintf@plt>
   17610:	mov	r0, #0
   17614:	strb	r0, [r5, #22]
   17618:	movw	r0, #34076	; 0x851c
   1761c:	movt	r0, #1
   17620:	str	r0, [r5, #24]
   17624:	movw	r0, #61800	; 0xf168
   17628:	movt	r0, #2
   1762c:	ldr	r7, [r0, #4]
   17630:	cmp	r7, #0
   17634:	beq	17668 <sprintf@plt+0x5ddc>
   17638:	ldrh	r3, [r5, #20]
   1763c:	ldr	r2, [r5, #16]
   17640:	mov	r1, r7
   17644:	ldr	r6, [r1]
   17648:	ldr	r4, [r6, #16]
   1764c:	cmp	r4, r2
   17650:	ldrheq	r6, [r6, #20]
   17654:	cmpeq	r6, r3
   17658:	beq	176b4 <sprintf@plt+0x5e28>
   1765c:	ldr	r1, [r1, #8]
   17660:	cmp	r1, #0
   17664:	bne	17644 <sprintf@plt+0x5db8>
   17668:	mov	r1, #0
   1766c:	add	r2, r5, #28
   17670:	cmp	r7, #0
   17674:	str	r5, [r5, #28]
   17678:	str	r1, [r5, #32]
   1767c:	str	r7, [r5, #36]	; 0x24
   17680:	beq	17690 <sprintf@plt+0x5e04>
   17684:	add	r1, r7, #4
   17688:	str	r2, [r1]
   1768c:	b	176a0 <sprintf@plt+0x5e14>
   17690:	mov	r1, r0
   17694:	ldr	r3, [r1, #8]!
   17698:	cmp	r3, #0
   1769c:	streq	r2, [r1]
   176a0:	str	r2, [r0, #4]
   176a4:	ldr	r1, [r0, #12]
   176a8:	add	r1, r1, #1
   176ac:	str	r1, [r0, #12]
   176b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   176b4:	ldr	r2, [r8]
   176b8:	movw	r1, #39141	; 0x98e5
   176bc:	mov	r0, #67	; 0x43
   176c0:	movt	r1, #1
   176c4:	bl	12528 <sprintf@plt+0xc9c>
   176c8:	mov	r0, r5
   176cc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   176d0:	b	1164c <free@plt>
   176d4:	bl	11754 <rb_outofmemory@plt>
   176d8:	ldm	r8, {r2, r3}
   176dc:	movw	r1, #39003	; 0x985b
   176e0:	mov	r0, #67	; 0x43
   176e4:	movt	r1, #1
   176e8:	bl	12528 <sprintf@plt+0xc9c>
   176ec:	mov	r0, #3
   176f0:	bl	11874 <exit@plt>
   176f4:	movw	r1, #39095	; 0x98b7
   176f8:	mov	r0, #67	; 0x43
   176fc:	mov	r2, r7
   17700:	movt	r1, #1
   17704:	bl	12528 <sprintf@plt+0xc9c>
   17708:	mov	r0, #3
   1770c:	bl	11874 <exit@plt>
   17710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17714:	add	fp, sp, #28
   17718:	sub	sp, sp, #12
   1771c:	ldr	r4, [r2]
   17720:	movw	r1, #39185	; 0x9911
   17724:	mov	r5, r2
   17728:	movt	r1, #1
   1772c:	mov	r0, r4
   17730:	bl	115a4 <strcasecmp@plt>
   17734:	cmp	r0, #0
   17738:	beq	1778c <sprintf@plt+0x5f00>
   1773c:	movw	r1, #39192	; 0x9918
   17740:	mov	r0, r4
   17744:	movt	r1, #1
   17748:	bl	115a4 <strcasecmp@plt>
   1774c:	cmp	r0, #0
   17750:	beq	17794 <sprintf@plt+0x5f08>
   17754:	movw	r1, #39199	; 0x991f
   17758:	mov	r0, r4
   1775c:	movt	r1, #1
   17760:	bl	115a4 <strcasecmp@plt>
   17764:	cmp	r0, #0
   17768:	beq	1779c <sprintf@plt+0x5f10>
   1776c:	movw	r1, #39211	; 0x992b
   17770:	mov	r0, r4
   17774:	movt	r1, #1
   17778:	bl	115a4 <strcasecmp@plt>
   1777c:	clz	r0, r0
   17780:	lsr	r0, r0, #5
   17784:	lsl	r6, r0, #2
   17788:	b	177a0 <sprintf@plt+0x5f14>
   1778c:	mov	r6, #1
   17790:	b	177a0 <sprintf@plt+0x5f14>
   17794:	mov	r6, #2
   17798:	b	177a0 <sprintf@plt+0x5f14>
   1779c:	mov	r6, #3
   177a0:	ldr	r0, [r5, #4]
   177a4:	mov	r1, #0
   177a8:	mov	r2, #10
   177ac:	bl	116e8 <strtol@plt>
   177b0:	mov	r3, r0
   177b4:	sub	r0, r0, #1
   177b8:	movw	r1, #65535	; 0xffff
   177bc:	cmp	r0, r1
   177c0:	bcs	179e8 <sprintf@plt+0x615c>
   177c4:	cmp	r6, #0
   177c8:	beq	17a04 <sprintf@plt+0x6178>
   177cc:	movw	r0, #61800	; 0xf168
   177d0:	movt	r0, #2
   177d4:	ldr	r0, [r0, #4]
   177d8:	cmp	r0, #0
   177dc:	beq	17808 <sprintf@plt+0x5f7c>
   177e0:	uxth	r1, r3
   177e4:	ldr	r4, [r0]
   177e8:	ldr	r2, [r4, #16]
   177ec:	cmp	r2, r6
   177f0:	ldrheq	r2, [r4, #20]
   177f4:	cmpeq	r2, r1
   177f8:	beq	17824 <sprintf@plt+0x5f98>
   177fc:	ldr	r0, [r0, #8]
   17800:	cmp	r0, #0
   17804:	bne	177e4 <sprintf@plt+0x5f58>
   17808:	ldr	r2, [r5]
   1780c:	movw	r1, #39367	; 0x99c7
   17810:	movt	r1, #1
   17814:	mov	r0, #67	; 0x43
   17818:	bl	12528 <sprintf@plt+0xc9c>
   1781c:	mov	r0, #3
   17820:	bl	11874 <exit@plt>
   17824:	movw	sl, #61820	; 0xf17c
   17828:	add	r5, sp, #4
   1782c:	movt	sl, #2
   17830:	mov	r1, r5
   17834:	ldr	r0, [sl]
   17838:	bl	11688 <rb_dictionary_foreach_start@plt>
   1783c:	ldr	r0, [sl]
   17840:	mov	r1, r5
   17844:	bl	11598 <rb_dictionary_foreach_cur@plt>
   17848:	cmp	r0, #0
   1784c:	beq	17974 <sprintf@plt+0x60e8>
   17850:	movw	r9, #44804	; 0xaf04
   17854:	mov	r6, r0
   17858:	add	r5, sp, #4
   1785c:	movt	r9, #2
   17860:	b	17880 <sprintf@plt+0x5ff4>
   17864:	mov	r0, r6
   17868:	bl	17ca8 <sprintf@plt+0x641c>
   1786c:	ldr	r0, [r6, #460]	; 0x1cc
   17870:	subs	r0, r0, #1
   17874:	str	r0, [r6, #460]	; 0x1cc
   17878:	bne	17950 <sprintf@plt+0x60c4>
   1787c:	b	17948 <sprintf@plt+0x60bc>
   17880:	ldr	r0, [r9, #16]
   17884:	ldr	r1, [r6, #464]	; 0x1d0
   17888:	add	r0, r1, r0, lsl #4
   1788c:	ldr	r8, [r0, #8]
   17890:	cmp	r8, #0
   17894:	beq	17950 <sprintf@plt+0x60c4>
   17898:	ldr	r0, [r6, #460]	; 0x1cc
   1789c:	add	r0, r0, #1
   178a0:	str	r0, [r6, #460]	; 0x1cc
   178a4:	ldr	r1, [r8]
   178a8:	cmp	r1, #0
   178ac:	beq	17938 <sprintf@plt+0x60ac>
   178b0:	ldrh	r2, [r4, #20]
   178b4:	ldr	r0, [r1]
   178b8:	ldr	r3, [r0, #8]
   178bc:	ldrh	r7, [r3, #20]
   178c0:	cmp	r7, r2
   178c4:	bne	178d8 <sprintf@plt+0x604c>
   178c8:	ldr	r7, [r4, #16]
   178cc:	ldr	r3, [r3, #16]
   178d0:	cmp	r3, r7
   178d4:	beq	178e8 <sprintf@plt+0x605c>
   178d8:	ldr	r1, [r1, #8]
   178dc:	cmp	r1, #0
   178e0:	bne	178b4 <sprintf@plt+0x6028>
   178e4:	b	17938 <sprintf@plt+0x60ac>
   178e8:	ldr	r1, [r0, #24]
   178ec:	ldr	r2, [r0, #20]
   178f0:	mov	r3, r8
   178f4:	cmp	r1, #0
   178f8:	streq	r2, [r8, #4]
   178fc:	strne	r2, [r1, #4]
   17900:	ldrne	r2, [r0, #20]
   17904:	cmp	r2, #0
   17908:	addne	r3, r2, #8
   1790c:	str	r1, [r3]
   17910:	mov	r1, #0
   17914:	str	r1, [r0, #20]
   17918:	str	r1, [r0, #24]
   1791c:	ldr	r1, [r8, #8]
   17920:	sub	r1, r1, #1
   17924:	str	r1, [r8, #8]
   17928:	bl	1164c <free@plt>
   1792c:	ldr	r0, [r8, #8]
   17930:	cmp	r0, #0
   17934:	beq	17864 <sprintf@plt+0x5fd8>
   17938:	ldr	r0, [r6, #460]	; 0x1cc
   1793c:	subs	r0, r0, #1
   17940:	str	r0, [r6, #460]	; 0x1cc
   17944:	bne	17950 <sprintf@plt+0x60c4>
   17948:	mov	r0, r6
   1794c:	bl	12df0 <sprintf@plt+0x1564>
   17950:	ldr	r0, [sl]
   17954:	mov	r1, r5
   17958:	bl	11640 <rb_dictionary_foreach_next@plt>
   1795c:	ldr	r0, [sl]
   17960:	mov	r1, r5
   17964:	bl	11598 <rb_dictionary_foreach_cur@plt>
   17968:	mov	r6, r0
   1796c:	cmp	r0, #0
   17970:	bne	17880 <sprintf@plt+0x5ff4>
   17974:	ldr	r0, [r4, #36]	; 0x24
   17978:	ldr	r1, [r4, #32]
   1797c:	cmp	r0, #0
   17980:	beq	17998 <sprintf@plt+0x610c>
   17984:	str	r1, [r0, #4]
   17988:	movw	r6, #61800	; 0xf168
   1798c:	ldr	r1, [r4, #32]
   17990:	movt	r6, #2
   17994:	b	179a4 <sprintf@plt+0x6118>
   17998:	movw	r6, #61800	; 0xf168
   1799c:	movt	r6, #2
   179a0:	str	r1, [r6, #8]
   179a4:	add	r2, r1, #8
   179a8:	cmp	r1, #0
   179ac:	mov	r5, #0
   179b0:	addeq	r2, r6, #4
   179b4:	str	r0, [r2]
   179b8:	str	r5, [r4, #32]
   179bc:	str	r5, [r4, #36]	; 0x24
   179c0:	ldr	r0, [r6, #12]
   179c4:	sub	r0, r0, #1
   179c8:	str	r0, [r6, #12]
   179cc:	mov	r0, r4
   179d0:	bl	1164c <free@plt>
   179d4:	ldr	r0, [r6, #12]
   179d8:	cmp	r0, #0
   179dc:	strbeq	r5, [r6]
   179e0:	sub	sp, fp, #28
   179e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179e8:	ldm	r5, {r2, r3}
   179ec:	movw	r1, #39265	; 0x9961
   179f0:	movt	r1, #1
   179f4:	mov	r0, #67	; 0x43
   179f8:	bl	12528 <sprintf@plt+0xc9c>
   179fc:	mov	r0, #3
   17a00:	bl	11874 <exit@plt>
   17a04:	ldr	r2, [r5]
   17a08:	movw	r1, #39312	; 0x9990
   17a0c:	movt	r1, #1
   17a10:	mov	r0, #67	; 0x43
   17a14:	bl	12528 <sprintf@plt+0xc9c>
   17a18:	mov	r0, #3
   17a1c:	bl	11874 <exit@plt>
   17a20:	push	{r4, r5, r6, r7, fp, lr}
   17a24:	add	fp, sp, #16
   17a28:	sub	sp, sp, #8
   17a2c:	movw	r5, #61800	; 0xf168
   17a30:	movt	r5, #2
   17a34:	ldr	r6, [r5, #4]
   17a38:	cmp	r6, #0
   17a3c:	beq	17aa0 <sprintf@plt+0x6214>
   17a40:	mov	r4, #0
   17a44:	ldr	r0, [r6]
   17a48:	ldr	r7, [r6, #8]
   17a4c:	cmp	r0, #0
   17a50:	beq	17a58 <sprintf@plt+0x61cc>
   17a54:	bl	1164c <free@plt>
   17a58:	ldr	r0, [r6, #8]
   17a5c:	ldr	r1, [r6, #4]
   17a60:	cmp	r0, #0
   17a64:	streq	r1, [r5, #8]
   17a68:	strne	r1, [r0, #4]
   17a6c:	ldrne	r1, [r6, #4]
   17a70:	add	r2, r1, #8
   17a74:	cmp	r1, #0
   17a78:	addeq	r2, r5, #4
   17a7c:	cmp	r7, #0
   17a80:	str	r0, [r2]
   17a84:	str	r4, [r6, #4]
   17a88:	str	r4, [r6, #8]
   17a8c:	mov	r6, r7
   17a90:	ldr	r0, [r5, #12]
   17a94:	sub	r0, r0, #1
   17a98:	str	r0, [r5, #12]
   17a9c:	bne	17a44 <sprintf@plt+0x61b8>
   17aa0:	movw	r6, #61820	; 0xf17c
   17aa4:	mov	r4, sp
   17aa8:	movt	r6, #2
   17aac:	mov	r1, r4
   17ab0:	ldr	r0, [r6]
   17ab4:	bl	11688 <rb_dictionary_foreach_start@plt>
   17ab8:	ldr	r0, [r6]
   17abc:	mov	r1, r4
   17ac0:	bl	11598 <rb_dictionary_foreach_cur@plt>
   17ac4:	cmp	r0, #0
   17ac8:	beq	17af4 <sprintf@plt+0x6268>
   17acc:	mov	r4, sp
   17ad0:	bl	17ca8 <sprintf@plt+0x641c>
   17ad4:	ldr	r0, [r6]
   17ad8:	mov	r1, r4
   17adc:	bl	11640 <rb_dictionary_foreach_next@plt>
   17ae0:	ldr	r0, [r6]
   17ae4:	mov	r1, r4
   17ae8:	bl	11598 <rb_dictionary_foreach_cur@plt>
   17aec:	cmp	r0, #0
   17af0:	bne	17ad0 <sprintf@plt+0x6244>
   17af4:	mov	r0, #0
   17af8:	strb	r0, [r5]
   17afc:	sub	sp, fp, #16
   17b00:	pop	{r4, r5, r6, r7, fp, pc}
   17b04:	push	{r4, r5, fp, lr}
   17b08:	add	fp, sp, #8
   17b0c:	sub	sp, sp, #8
   17b10:	movw	r5, #61820	; 0xf17c
   17b14:	mov	r4, sp
   17b18:	movt	r5, #2
   17b1c:	mov	r1, r4
   17b20:	ldr	r0, [r5]
   17b24:	bl	11688 <rb_dictionary_foreach_start@plt>
   17b28:	ldr	r0, [r5]
   17b2c:	mov	r1, r4
   17b30:	bl	11598 <rb_dictionary_foreach_cur@plt>
   17b34:	cmp	r0, #0
   17b38:	beq	17b64 <sprintf@plt+0x62d8>
   17b3c:	mov	r4, sp
   17b40:	bl	17ca8 <sprintf@plt+0x641c>
   17b44:	ldr	r0, [r5]
   17b48:	mov	r1, r4
   17b4c:	bl	11640 <rb_dictionary_foreach_next@plt>
   17b50:	ldr	r0, [r5]
   17b54:	mov	r1, r4
   17b58:	bl	11598 <rb_dictionary_foreach_cur@plt>
   17b5c:	cmp	r0, #0
   17b60:	bne	17b40 <sprintf@plt+0x62b4>
   17b64:	sub	sp, fp, #8
   17b68:	pop	{r4, r5, fp, pc}
   17b6c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17b70:	add	fp, sp, #24
   17b74:	mov	r9, r0
   17b78:	movw	r0, #61800	; 0xf168
   17b7c:	movt	r0, #2
   17b80:	ldrb	r1, [r0]
   17b84:	cmp	r1, #0
   17b88:	ldrne	r0, [r0, #12]
   17b8c:	cmpne	r0, #0
   17b90:	bne	17bb0 <sprintf@plt+0x6324>
   17b94:	movw	r0, #44804	; 0xaf04
   17b98:	movt	r0, #2
   17b9c:	ldr	r1, [r0, #16]
   17ba0:	mov	r0, r9
   17ba4:	bl	12eac <sprintf@plt+0x1620>
   17ba8:	mov	r0, #1
   17bac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17bb0:	ldr	r0, [r9, #460]	; 0x1cc
   17bb4:	mov	r1, #16
   17bb8:	add	r0, r0, #1
   17bbc:	str	r0, [r9, #460]	; 0x1cc
   17bc0:	movw	r0, #44804	; 0xaf04
   17bc4:	movt	r0, #2
   17bc8:	ldr	r5, [r0, #16]
   17bcc:	mov	r0, #1
   17bd0:	bl	115b0 <calloc@plt>
   17bd4:	cmp	r0, #0
   17bd8:	beq	17ca4 <sprintf@plt+0x6418>
   17bdc:	ldr	r8, [r9, #464]	; 0x1d0
   17be0:	add	r1, r8, r5, lsl #4
   17be4:	str	r0, [r1, #8]
   17be8:	movw	r0, #61824	; 0xf180
   17bec:	movt	r0, #2
   17bf0:	ldr	r6, [r0]
   17bf4:	cmp	r6, #0
   17bf8:	beq	17c94 <sprintf@plt+0x6408>
   17bfc:	movw	r5, #37817	; 0x93b9
   17c00:	mov	r7, r6
   17c04:	movt	r5, #1
   17c08:	ldr	r4, [r7]
   17c0c:	mov	r1, r5
   17c10:	ldr	r0, [r4, #16]
   17c14:	bl	115a4 <strcasecmp@plt>
   17c18:	cmp	r0, #0
   17c1c:	beq	17c30 <sprintf@plt+0x63a4>
   17c20:	ldr	r7, [r7, #8]
   17c24:	cmp	r7, #0
   17c28:	bne	17c08 <sprintf@plt+0x637c>
   17c2c:	b	17c4c <sprintf@plt+0x63c0>
   17c30:	cmp	r4, #0
   17c34:	beq	17c4c <sprintf@plt+0x63c0>
   17c38:	ldr	r0, [r4, #12]
   17c3c:	add	r0, r8, r0, lsl #4
   17c40:	ldr	r0, [r0, #12]
   17c44:	cmp	r0, #2
   17c48:	bne	17c9c <sprintf@plt+0x6410>
   17c4c:	ldr	r5, [r6]
   17c50:	movw	r1, #38297	; 0x9599
   17c54:	movt	r1, #1
   17c58:	ldr	r0, [r5, #16]
   17c5c:	bl	115a4 <strcasecmp@plt>
   17c60:	cmp	r0, #0
   17c64:	beq	17c78 <sprintf@plt+0x63ec>
   17c68:	ldr	r6, [r6, #8]
   17c6c:	cmp	r6, #0
   17c70:	bne	17c4c <sprintf@plt+0x63c0>
   17c74:	b	17c94 <sprintf@plt+0x6408>
   17c78:	cmp	r5, #0
   17c7c:	beq	17c94 <sprintf@plt+0x6408>
   17c80:	ldr	r0, [r5, #12]
   17c84:	add	r0, r8, r0, lsl #4
   17c88:	ldr	r0, [r0, #12]
   17c8c:	cmp	r0, #2
   17c90:	bne	17c9c <sprintf@plt+0x6410>
   17c94:	mov	r0, r9
   17c98:	bl	185b4 <sprintf@plt+0x6d28>
   17c9c:	mov	r0, #1
   17ca0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17ca4:	bl	11754 <rb_outofmemory@plt>
   17ca8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17cac:	add	fp, sp, #24
   17cb0:	movw	r8, #44804	; 0xaf04
   17cb4:	mov	r4, r0
   17cb8:	movt	r8, #2
   17cbc:	ldr	r1, [r4, #464]	; 0x1d0
   17cc0:	ldr	r0, [r8, #16]
   17cc4:	add	r0, r1, r0, lsl #4
   17cc8:	ldr	r5, [r0, #8]
   17ccc:	cmp	r5, #0
   17cd0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   17cd4:	ldr	r0, [r4]
   17cd8:	movw	r1, #39495	; 0x9a47
   17cdc:	movt	r1, #1
   17ce0:	bl	124bc <sprintf@plt+0xc30>
   17ce4:	ldr	r7, [r5]
   17ce8:	cmp	r7, #0
   17cec:	bne	17d04 <sprintf@plt+0x6478>
   17cf0:	b	17d20 <sprintf@plt+0x6494>
   17cf4:	mov	r0, r6
   17cf8:	bl	1164c <free@plt>
   17cfc:	cmp	r7, #0
   17d00:	beq	17d20 <sprintf@plt+0x6494>
   17d04:	ldr	r6, [r7]
   17d08:	ldr	r7, [r7, #8]
   17d0c:	ldr	r0, [r6, #4]
   17d10:	bl	116dc <rb_close@plt>
   17d14:	cmp	r6, #0
   17d18:	bne	17cf4 <sprintf@plt+0x6468>
   17d1c:	b	17cfc <sprintf@plt+0x6470>
   17d20:	mov	r0, r5
   17d24:	bl	1164c <free@plt>
   17d28:	ldr	r1, [r8, #16]
   17d2c:	ldr	r0, [r4, #464]	; 0x1d0
   17d30:	mov	r2, #0
   17d34:	add	r0, r0, r1, lsl #4
   17d38:	str	r2, [r0, #4]
   17d3c:	str	r2, [r0, #8]
   17d40:	mov	r0, r4
   17d44:	bl	12eac <sprintf@plt+0x1620>
   17d48:	ldr	r0, [r4, #460]	; 0x1cc
   17d4c:	subs	r0, r0, #1
   17d50:	str	r0, [r4, #460]	; 0x1cc
   17d54:	beq	17d5c <sprintf@plt+0x64d0>
   17d58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17d5c:	mov	r0, r4
   17d60:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   17d64:	b	12df0 <sprintf@plt+0x1564>
   17d68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17d6c:	add	fp, sp, #24
   17d70:	mov	r8, r0
   17d74:	movw	r0, #44804	; 0xaf04
   17d78:	movt	r0, #2
   17d7c:	ldr	r9, [r8, #464]	; 0x1d0
   17d80:	ldr	r0, [r0, #16]
   17d84:	add	r0, r9, r0, lsl #4
   17d88:	ldr	r0, [r0, #8]
   17d8c:	cmp	r0, #0
   17d90:	beq	17e58 <sprintf@plt+0x65cc>
   17d94:	ldrb	r0, [r0, #12]
   17d98:	cmp	r0, #0
   17d9c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   17da0:	movw	r0, #61824	; 0xf180
   17da4:	movt	r0, #2
   17da8:	ldr	r4, [r0]
   17dac:	cmp	r4, #0
   17db0:	beq	17e4c <sprintf@plt+0x65c0>
   17db4:	movw	r5, #37817	; 0x93b9
   17db8:	mov	r7, r4
   17dbc:	movt	r5, #1
   17dc0:	ldr	r6, [r7]
   17dc4:	mov	r1, r5
   17dc8:	ldr	r0, [r6, #16]
   17dcc:	bl	115a4 <strcasecmp@plt>
   17dd0:	cmp	r0, #0
   17dd4:	beq	17de8 <sprintf@plt+0x655c>
   17dd8:	ldr	r7, [r7, #8]
   17ddc:	cmp	r7, #0
   17de0:	bne	17dc0 <sprintf@plt+0x6534>
   17de4:	b	17e04 <sprintf@plt+0x6578>
   17de8:	cmp	r6, #0
   17dec:	beq	17e04 <sprintf@plt+0x6578>
   17df0:	ldr	r0, [r6, #12]
   17df4:	add	r0, r9, r0, lsl #4
   17df8:	ldr	r0, [r0, #12]
   17dfc:	cmp	r0, #2
   17e00:	bne	17e58 <sprintf@plt+0x65cc>
   17e04:	ldr	r5, [r4]
   17e08:	movw	r1, #38297	; 0x9599
   17e0c:	movt	r1, #1
   17e10:	ldr	r0, [r5, #16]
   17e14:	bl	115a4 <strcasecmp@plt>
   17e18:	cmp	r0, #0
   17e1c:	beq	17e30 <sprintf@plt+0x65a4>
   17e20:	ldr	r4, [r4, #8]
   17e24:	cmp	r4, #0
   17e28:	bne	17e04 <sprintf@plt+0x6578>
   17e2c:	b	17e4c <sprintf@plt+0x65c0>
   17e30:	cmp	r5, #0
   17e34:	beq	17e4c <sprintf@plt+0x65c0>
   17e38:	ldr	r0, [r5, #12]
   17e3c:	add	r0, r9, r0, lsl #4
   17e40:	ldr	r0, [r0, #12]
   17e44:	cmp	r0, #2
   17e48:	bne	17e58 <sprintf@plt+0x65cc>
   17e4c:	mov	r0, r8
   17e50:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17e54:	b	185b4 <sprintf@plt+0x6d28>
   17e58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17e5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17e60:	add	fp, sp, #24
   17e64:	sub	sp, sp, #144	; 0x90
   17e68:	mov	r5, r0
   17e6c:	mov	r0, #1
   17e70:	mov	r8, r1
   17e74:	add	r1, sp, #16
   17e78:	str	r0, [sp, #4]
   17e7c:	mov	r0, r5
   17e80:	bl	11694 <rb_inet_pton_sock@plt>
   17e84:	cmp	r0, #0
   17e88:	beq	180dc <sprintf@plt+0x6850>
   17e8c:	rev16	r1, r8
   17e90:	strh	r1, [sp, #18]
   17e94:	ldrh	r0, [sp, #16]
   17e98:	cmp	r0, #10
   17e9c:	bne	17f0c <sprintf@plt+0x6680>
   17ea0:	movw	r2, #61424	; 0xeff0
   17ea4:	ldr	r7, [sp, #24]
   17ea8:	movt	r2, #2
   17eac:	ldr	r3, [r2, #252]	; 0xfc
   17eb0:	add	r6, r2, #188	; 0xbc
   17eb4:	cmp	r7, r3
   17eb8:	bne	17f50 <sprintf@plt+0x66c4>
   17ebc:	ldr	r3, [r2, #256]	; 0x100
   17ec0:	ldr	r7, [sp, #28]
   17ec4:	cmp	r7, r3
   17ec8:	bne	17f50 <sprintf@plt+0x66c4>
   17ecc:	ldr	r3, [r2, #260]	; 0x104
   17ed0:	ldr	r7, [sp, #32]
   17ed4:	cmp	r7, r3
   17ed8:	bne	17f50 <sprintf@plt+0x66c4>
   17edc:	ldr	r3, [r2, #264]	; 0x108
   17ee0:	ldr	r7, [sp, #36]	; 0x24
   17ee4:	cmp	r7, r3
   17ee8:	bne	17f50 <sprintf@plt+0x66c4>
   17eec:	ldrh	r3, [r2, #246]	; 0xf6
   17ef0:	uxth	r1, r1
   17ef4:	cmp	r1, r3
   17ef8:	bne	17f50 <sprintf@plt+0x66c4>
   17efc:	ldr	r1, [r2, #372]	; 0x174
   17f00:	cmp	r1, #0
   17f04:	bne	17f48 <sprintf@plt+0x66bc>
   17f08:	b	17f50 <sprintf@plt+0x66c4>
   17f0c:	movw	r6, #61424	; 0xeff0
   17f10:	ldr	r3, [sp, #20]
   17f14:	movt	r6, #2
   17f18:	ldr	r2, [r6, #60]	; 0x3c
   17f1c:	cmp	r3, r2
   17f20:	bne	17f50 <sprintf@plt+0x66c4>
   17f24:	movw	r6, #61424	; 0xeff0
   17f28:	uxth	r1, r1
   17f2c:	movt	r6, #2
   17f30:	ldrh	r2, [r6, #58]	; 0x3a
   17f34:	cmp	r1, r2
   17f38:	bne	17f50 <sprintf@plt+0x66c4>
   17f3c:	ldr	r1, [r6, #184]	; 0xb8
   17f40:	cmp	r1, #0
   17f44:	beq	17f50 <sprintf@plt+0x66c4>
   17f48:	sub	sp, fp, #24
   17f4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17f50:	movw	r3, #38755	; 0x9763
   17f54:	mov	r1, #1
   17f58:	mov	r2, #0
   17f5c:	movt	r3, #1
   17f60:	bl	11568 <rb_socket@plt>
   17f64:	cmp	r0, #0
   17f68:	beq	180fc <sprintf@plt+0x6870>
   17f6c:	mov	r7, r0
   17f70:	bl	11544 <rb_get_fd@plt>
   17f74:	mov	r1, #4
   17f78:	add	r3, sp, #4
   17f7c:	mov	r2, #2
   17f80:	str	r1, [sp]
   17f84:	mov	r1, #1
   17f88:	bl	11844 <setsockopt@plt>
   17f8c:	cmp	r0, #0
   17f90:	bne	18124 <sprintf@plt+0x6898>
   17f94:	mov	r0, r7
   17f98:	bl	11544 <rb_get_fd@plt>
   17f9c:	ldrh	r1, [sp, #16]
   17fa0:	mov	r2, #28
   17fa4:	cmp	r1, #2
   17fa8:	add	r1, sp, #16
   17fac:	movweq	r2, #16
   17fb0:	bl	11718 <bind@plt>
   17fb4:	cmp	r0, #0
   17fb8:	beq	17fd8 <sprintf@plt+0x674c>
   17fbc:	bl	11880 <__errno_location@plt>
   17fc0:	ldr	r0, [r0]
   17fc4:	bl	114b4 <strerror@plt>
   17fc8:	movw	r1, #38843	; 0x97bb
   17fcc:	mov	r2, r0
   17fd0:	movt	r1, #1
   17fd4:	b	18008 <sprintf@plt+0x677c>
   17fd8:	mov	r0, r7
   17fdc:	mov	r1, #128	; 0x80
   17fe0:	mov	r2, #0
   17fe4:	bl	11820 <rb_listen@plt>
   17fe8:	cmp	r0, #0
   17fec:	beq	18020 <sprintf@plt+0x6794>
   17ff0:	bl	11880 <__errno_location@plt>
   17ff4:	ldr	r0, [r0]
   17ff8:	bl	114b4 <strerror@plt>
   17ffc:	movw	r1, #38874	; 0x97da
   18000:	mov	r2, r0
   18004:	movt	r1, #1
   18008:	mov	r0, #87	; 0x57
   1800c:	bl	12528 <sprintf@plt+0xc9c>
   18010:	mov	r0, r7
   18014:	bl	116dc <rb_close@plt>
   18018:	sub	sp, fp, #24
   1801c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18020:	ldr	r0, [r6, #184]	; 0xb8
   18024:	cmp	r0, #0
   18028:	beq	18030 <sprintf@plt+0x67a4>
   1802c:	bl	116dc <rb_close@plt>
   18030:	movw	r4, #61820	; 0xf17c
   18034:	str	r7, [r6, #184]	; 0xb8
   18038:	add	r7, sp, #8
   1803c:	movt	r4, #2
   18040:	mov	r1, r7
   18044:	ldr	r0, [r4]
   18048:	bl	11688 <rb_dictionary_foreach_start@plt>
   1804c:	ldr	r0, [r4]
   18050:	mov	r1, r7
   18054:	bl	11598 <rb_dictionary_foreach_cur@plt>
   18058:	cmp	r0, #0
   1805c:	beq	18088 <sprintf@plt+0x67fc>
   18060:	add	r7, sp, #8
   18064:	bl	17ca8 <sprintf@plt+0x641c>
   18068:	ldr	r0, [r4]
   1806c:	mov	r1, r7
   18070:	bl	11640 <rb_dictionary_foreach_next@plt>
   18074:	ldr	r0, [r4]
   18078:	mov	r1, r7
   1807c:	bl	11598 <rb_dictionary_foreach_cur@plt>
   18080:	cmp	r0, #0
   18084:	bne	18064 <sprintf@plt+0x67d8>
   18088:	mov	r0, r6
   1808c:	mov	r1, r5
   18090:	mov	r2, #53	; 0x35
   18094:	bl	11628 <rb_strlcpy@plt>
   18098:	add	r0, r6, #56	; 0x38
   1809c:	add	r1, sp, #16
   180a0:	mov	r2, #128	; 0x80
   180a4:	strh	r8, [r6, #54]	; 0x36
   180a8:	bl	116c4 <memcpy@plt>
   180ac:	movw	r0, #61800	; 0xf168
   180b0:	mov	r1, #1
   180b4:	movw	r2, #33100	; 0x814c
   180b8:	mov	r3, r6
   180bc:	movt	r0, #2
   180c0:	movt	r2, #1
   180c4:	strb	r1, [r0]
   180c8:	ldr	r0, [r6, #184]	; 0xb8
   180cc:	mov	r1, #0
   180d0:	bl	117d8 <rb_accept_tcp@plt>
   180d4:	sub	sp, fp, #24
   180d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   180dc:	movw	r1, #38723	; 0x9743
   180e0:	mov	r0, #67	; 0x43
   180e4:	mov	r2, r5
   180e8:	mov	r3, r8
   180ec:	movt	r1, #1
   180f0:	bl	12528 <sprintf@plt+0xc9c>
   180f4:	mov	r0, #3
   180f8:	bl	11874 <exit@plt>
   180fc:	bl	11880 <__errno_location@plt>
   18100:	ldr	r0, [r0]
   18104:	bl	114b4 <strerror@plt>
   18108:	movw	r1, #38775	; 0x9777
   1810c:	mov	r2, r0
   18110:	movt	r1, #1
   18114:	mov	r0, #67	; 0x43
   18118:	bl	12528 <sprintf@plt+0xc9c>
   1811c:	mov	r0, #3
   18120:	bl	11874 <exit@plt>
   18124:	bl	11880 <__errno_location@plt>
   18128:	ldr	r0, [r0]
   1812c:	bl	114b4 <strerror@plt>
   18130:	movw	r1, #38805	; 0x9795
   18134:	mov	r2, r0
   18138:	movt	r1, #1
   1813c:	mov	r0, #67	; 0x43
   18140:	bl	12528 <sprintf@plt+0xc9c>
   18144:	mov	r0, #3
   18148:	bl	11874 <exit@plt>
   1814c:	push	{r4, r5, r6, sl, fp, lr}
   18150:	add	fp, sp, #16
   18154:	sub	sp, sp, #144	; 0x90
   18158:	mov	r4, r0
   1815c:	mov	r0, #128	; 0x80
   18160:	cmp	r1, #0
   18164:	str	r0, [sp, #12]
   18168:	bne	18260 <sprintf@plt+0x69d4>
   1816c:	ldr	r0, [fp, #8]
   18170:	cmp	r0, #0
   18174:	beq	18260 <sprintf@plt+0x69d4>
   18178:	mov	r0, r4
   1817c:	bl	11544 <rb_get_fd@plt>
   18180:	add	r1, sp, #16
   18184:	add	r2, sp, #12
   18188:	bl	114e4 <getsockname@plt>
   1818c:	cmp	r0, #0
   18190:	bne	18260 <sprintf@plt+0x69d4>
   18194:	movw	r6, #61820	; 0xf17c
   18198:	add	r5, sp, #4
   1819c:	movt	r6, #2
   181a0:	mov	r1, r5
   181a4:	ldr	r0, [r6]
   181a8:	bl	11688 <rb_dictionary_foreach_start@plt>
   181ac:	ldr	r0, [r6]
   181b0:	mov	r1, r5
   181b4:	bl	11598 <rb_dictionary_foreach_cur@plt>
   181b8:	cmp	r0, #0
   181bc:	beq	18260 <sprintf@plt+0x69d4>
   181c0:	mov	r3, r0
   181c4:	add	r5, sp, #4
   181c8:	ldrh	r0, [r3, #248]	; 0xf8
   181cc:	ldrh	r1, [sp, #16]
   181d0:	cmp	r0, r1
   181d4:	bne	1823c <sprintf@plt+0x69b0>
   181d8:	cmp	r0, #10
   181dc:	beq	181fc <sprintf@plt+0x6970>
   181e0:	cmp	r0, #2
   181e4:	bne	1828c <sprintf@plt+0x6a00>
   181e8:	ldr	r0, [r3, #252]	; 0xfc
   181ec:	ldr	r1, [sp, #20]
   181f0:	cmp	r1, r0
   181f4:	bne	1823c <sprintf@plt+0x69b0>
   181f8:	b	18270 <sprintf@plt+0x69e4>
   181fc:	ldr	r0, [r3, #256]	; 0x100
   18200:	ldr	r1, [sp, #24]
   18204:	cmp	r1, r0
   18208:	bne	1823c <sprintf@plt+0x69b0>
   1820c:	ldr	r0, [r3, #260]	; 0x104
   18210:	ldr	r1, [sp, #28]
   18214:	cmp	r1, r0
   18218:	bne	1823c <sprintf@plt+0x69b0>
   1821c:	ldr	r0, [r3, #264]	; 0x108
   18220:	ldr	r1, [sp, #32]
   18224:	cmp	r1, r0
   18228:	bne	1823c <sprintf@plt+0x69b0>
   1822c:	ldr	r0, [r3, #268]	; 0x10c
   18230:	ldr	r1, [sp, #36]	; 0x24
   18234:	cmp	r1, r0
   18238:	beq	18270 <sprintf@plt+0x69e4>
   1823c:	ldr	r0, [r6]
   18240:	mov	r1, r5
   18244:	bl	11640 <rb_dictionary_foreach_next@plt>
   18248:	ldr	r0, [r6]
   1824c:	mov	r1, r5
   18250:	bl	11598 <rb_dictionary_foreach_cur@plt>
   18254:	mov	r3, r0
   18258:	cmp	r0, #0
   1825c:	bne	181c8 <sprintf@plt+0x693c>
   18260:	mov	r0, r4
   18264:	bl	116dc <rb_close@plt>
   18268:	sub	sp, fp, #16
   1826c:	pop	{r4, r5, r6, sl, fp, pc}
   18270:	movw	r2, #33444	; 0x82a4
   18274:	mov	r0, r4
   18278:	mov	r1, #1
   1827c:	movt	r2, #1
   18280:	bl	11538 <rb_setselect@plt>
   18284:	sub	sp, fp, #16
   18288:	pop	{r4, r5, r6, sl, fp, pc}
   1828c:	movw	r1, #38907	; 0x97fb
   18290:	mov	r0, #67	; 0x43
   18294:	movt	r1, #1
   18298:	bl	12528 <sprintf@plt+0xc9c>
   1829c:	mov	r0, #3
   182a0:	bl	11874 <exit@plt>
   182a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   182a8:	add	fp, sp, #28
   182ac:	sub	sp, sp, #132	; 0x84
   182b0:	movw	r9, #44804	; 0xaf04
   182b4:	mov	sl, r1
   182b8:	mov	r4, r0
   182bc:	ldr	r1, [r1, #464]	; 0x1d0
   182c0:	mov	r2, #128	; 0x80
   182c4:	movt	r9, #2
   182c8:	ldr	r0, [r9, #16]
   182cc:	add	r0, r1, r0, lsl #4
   182d0:	add	r1, sp, #4
   182d4:	ldr	r8, [r0, #8]
   182d8:	mov	r0, r4
   182dc:	bl	11664 <rb_read@plt>
   182e0:	cmn	r0, #1
   182e4:	ble	1833c <sprintf@plt+0x6ab0>
   182e8:	cmp	r0, #0
   182ec:	beq	183cc <sprintf@plt+0x6b40>
   182f0:	movw	r0, #61800	; 0xf168
   182f4:	movt	r0, #2
   182f8:	ldr	r5, [r0, #4]
   182fc:	cmp	r5, #0
   18300:	beq	183cc <sprintf@plt+0x6b40>
   18304:	add	r7, sp, #4
   18308:	ldr	r6, [r5]
   1830c:	mov	r0, r6
   18310:	bl	116a0 <strlen@plt>
   18314:	mov	r2, r0
   18318:	mov	r0, r6
   1831c:	mov	r1, r7
   18320:	bl	1182c <strncmp@plt>
   18324:	cmp	r0, #0
   18328:	beq	18370 <sprintf@plt+0x6ae4>
   1832c:	ldr	r5, [r5, #8]
   18330:	cmp	r5, #0
   18334:	bne	18308 <sprintf@plt+0x6a7c>
   18338:	b	183cc <sprintf@plt+0x6b40>
   1833c:	bl	11880 <__errno_location@plt>
   18340:	ldr	r0, [r0]
   18344:	bl	114f0 <rb_ignore_errno@plt>
   18348:	cmp	r0, #0
   1834c:	beq	183cc <sprintf@plt+0x6b40>
   18350:	movw	r2, #33444	; 0x82a4
   18354:	mov	r0, r4
   18358:	mov	r1, #1
   1835c:	mov	r3, sl
   18360:	movt	r2, #1
   18364:	bl	11538 <rb_setselect@plt>
   18368:	sub	sp, fp, #28
   1836c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18370:	ldr	r5, [r8]
   18374:	cmp	r5, #0
   18378:	beq	183ac <sprintf@plt+0x6b20>
   1837c:	ldr	r7, [r5]
   18380:	ldr	r5, [r5, #8]
   18384:	ldr	r0, [r7, #4]
   18388:	bl	116dc <rb_close@plt>
   1838c:	cmp	r7, #0
   18390:	beq	1839c <sprintf@plt+0x6b10>
   18394:	mov	r0, r7
   18398:	bl	1164c <free@plt>
   1839c:	cmp	r5, #0
   183a0:	bne	1837c <sprintf@plt+0x6af0>
   183a4:	cmp	r8, #0
   183a8:	beq	183b4 <sprintf@plt+0x6b28>
   183ac:	mov	r0, r8
   183b0:	bl	1164c <free@plt>
   183b4:	ldr	r1, [r9, #16]
   183b8:	movw	r3, #38952	; 0x9828
   183bc:	add	r2, sp, #4
   183c0:	mov	r0, sl
   183c4:	movt	r3, #1
   183c8:	bl	12b14 <sprintf@plt+0x1288>
   183cc:	mov	r0, r4
   183d0:	bl	116dc <rb_close@plt>
   183d4:	sub	sp, fp, #28
   183d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183dc:	push	{r4, r5, fp, lr}
   183e0:	add	fp, sp, #8
   183e4:	sub	sp, sp, #16
   183e8:	mov	r4, r0
   183ec:	mov	r0, #260	; 0x104
   183f0:	mov	r2, #9
   183f4:	strh	r0, [sp, #6]
   183f8:	ldr	r0, [r4, #12]
   183fc:	ldrh	r1, [r0, #58]	; 0x3a
   18400:	strh	r1, [sp, #8]
   18404:	mov	r1, #0
   18408:	ldr	r0, [r0, #60]	; 0x3c
   1840c:	strb	r1, [sp, #14]
   18410:	add	r1, sp, #6
   18414:	str	r0, [sp, #10]
   18418:	ldr	r0, [r4, #4]
   1841c:	bl	11604 <rb_write@plt>
   18420:	cmp	r0, #0
   18424:	blt	18448 <sprintf@plt+0x6bbc>
   18428:	ldr	r5, [r4, #4]
   1842c:	ldr	r4, [r4, #8]
   18430:	mov	r0, r4
   18434:	bl	116a0 <strlen@plt>
   18438:	add	r2, r0, #1
   1843c:	mov	r0, r5
   18440:	mov	r1, r4
   18444:	bl	11604 <rb_write@plt>
   18448:	sub	sp, fp, #8
   1844c:	pop	{r4, r5, fp, pc}
   18450:	push	{r4, r5, fp, lr}
   18454:	add	fp, sp, #8
   18458:	sub	sp, sp, #32
   1845c:	mov	r4, r0
   18460:	ldr	r0, [r0]
   18464:	mov	r1, #1
   18468:	strh	r1, [sp, #4]
   1846c:	movw	r1, #261	; 0x105
   18470:	movt	r1, #1280	; 0x500
   18474:	str	r1, [sp]
   18478:	ldrh	r0, [r0, #248]	; 0xf8
   1847c:	cmp	r0, #10
   18480:	beq	184ac <sprintf@plt+0x6c20>
   18484:	cmp	r0, #2
   18488:	bne	18514 <sprintf@plt+0x6c88>
   1848c:	mov	r0, #1
   18490:	mvn	r2, #12
   18494:	mov	r3, #11
   18498:	strb	r0, [sp, #6]
   1849c:	ldr	r0, [r4, #12]
   184a0:	ldr	r1, [r0, #60]	; 0x3c
   184a4:	str	r1, [sp, #7]
   184a8:	b	184d4 <sprintf@plt+0x6c48>
   184ac:	mov	r0, #4
   184b0:	mvn	r2, #24
   184b4:	mov	r3, #23
   184b8:	strb	r0, [sp, #6]
   184bc:	ldr	r0, [r4, #12]
   184c0:	add	r1, r0, #64	; 0x40
   184c4:	vld1.8	{d16-d17}, [r1]
   184c8:	mov	r1, sp
   184cc:	orr	r1, r1, #7
   184d0:	vst1.8	{d16-d17}, [r1]
   184d4:	ldrh	r0, [r0, #58]	; 0x3a
   184d8:	mov	r1, sp
   184dc:	add	r3, r1, r3
   184e0:	strh	r0, [r3]
   184e4:	ldr	r0, [r4, #4]
   184e8:	bl	11604 <rb_write@plt>
   184ec:	cmp	r0, #1
   184f0:	blt	18514 <sprintf@plt+0x6c88>
   184f4:	ldr	r5, [r4, #4]
   184f8:	ldr	r4, [r4, #8]
   184fc:	mov	r0, r4
   18500:	bl	116a0 <strlen@plt>
   18504:	add	r2, r0, #1
   18508:	mov	r0, r5
   1850c:	mov	r1, r4
   18510:	bl	11604 <rb_write@plt>
   18514:	sub	sp, fp, #8
   18518:	pop	{r4, r5, fp, pc}
   1851c:	push	{r4, r5, r6, sl, fp, lr}
   18520:	add	fp, sp, #16
   18524:	sub	sp, sp, #136	; 0x88
   18528:	ldr	r3, [r0, #12]
   1852c:	mov	r4, r0
   18530:	movw	r2, #39224	; 0x9938
   18534:	add	r5, sp, #8
   18538:	mov	r1, #128	; 0x80
   1853c:	movt	r2, #1
   18540:	ldrh	r0, [r3, #54]	; 0x36
   18544:	str	r0, [sp]
   18548:	mov	r0, r5
   1854c:	bl	11814 <snprintf@plt>
   18550:	ldr	r6, [r4, #4]
   18554:	mov	r0, r5
   18558:	bl	116a0 <strlen@plt>
   1855c:	mov	r2, r0
   18560:	mov	r0, r6
   18564:	mov	r1, r5
   18568:	bl	11604 <rb_write@plt>
   1856c:	cmp	r0, #1
   18570:	blt	185ac <sprintf@plt+0x6d20>
   18574:	ldmib	r4, {r5, r6}
   18578:	mov	r0, r6
   1857c:	bl	116a0 <strlen@plt>
   18580:	add	r2, r0, #1
   18584:	mov	r0, r5
   18588:	mov	r1, r6
   1858c:	bl	11604 <rb_write@plt>
   18590:	cmp	r0, #1
   18594:	blt	185ac <sprintf@plt+0x6d20>
   18598:	ldr	r0, [r4, #4]
   1859c:	movw	r1, #39249	; 0x9951
   185a0:	mov	r2, #2
   185a4:	movt	r1, #1
   185a8:	bl	11604 <rb_write@plt>
   185ac:	sub	sp, fp, #16
   185b0:	pop	{r4, r5, r6, sl, fp, pc}
   185b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185b8:	add	fp, sp, #28
   185bc:	sub	sp, sp, #284	; 0x11c
   185c0:	mov	sl, r0
   185c4:	movw	r0, #44804	; 0xaf04
   185c8:	movt	r0, #2
   185cc:	ldr	r4, [r0]
   185d0:	ldr	r5, [r0, #16]
   185d4:	ldr	r0, [sl, #464]	; 0x1d0
   185d8:	add	r0, r0, r5, lsl #4
   185dc:	ldr	r6, [r0, #8]
   185e0:	bl	116ac <rb_current_time@plt>
   185e4:	add	r1, r0, r4
   185e8:	ldr	r0, [sl, #464]	; 0x1d0
   185ec:	add	r2, r0, r5, lsl #4
   185f0:	str	r1, [r2, #4]
   185f4:	mov	r1, #1
   185f8:	strb	r1, [r6, #12]
   185fc:	movw	r1, #61800	; 0xf168
   18600:	movt	r1, #2
   18604:	ldr	r7, [r1, #4]
   18608:	cmp	r7, #0
   1860c:	beq	18874 <sprintf@plt+0x6fe8>
   18610:	movw	r1, #44804	; 0xaf04
   18614:	ldr	r9, [r7]
   18618:	movt	r1, #2
   1861c:	ldr	r1, [r1, #16]
   18620:	add	r0, r0, r1, lsl #4
   18624:	mov	r1, #28
   18628:	ldr	r4, [r0, #8]
   1862c:	mov	r0, #1
   18630:	bl	115b0 <calloc@plt>
   18634:	cmp	r0, #0
   18638:	beq	18870 <sprintf@plt+0x6fe4>
   1863c:	mov	r8, r0
   18640:	add	r0, sl, #248	; 0xf8
   18644:	str	sl, [sp, #8]
   18648:	str	r0, [sp, #16]
   1864c:	movw	r0, #61424	; 0xeff0
   18650:	movt	r0, #2
   18654:	add	r0, r0, #188	; 0xbc
   18658:	str	r0, [sp, #12]
   1865c:	mov	r0, #1
   18660:	movw	r5, #61424	; 0xeff0
   18664:	str	r0, [sp, #20]
   18668:	ldr	r0, [sp, #16]
   1866c:	movt	r5, #2
   18670:	ldrh	r6, [r0]
   18674:	cmp	r6, #10
   18678:	bne	1868c <sprintf@plt+0x6e00>
   1867c:	ldr	r0, [r9, #16]
   18680:	ldr	r5, [sp, #12]
   18684:	cmp	r0, #1
   18688:	beq	18748 <sprintf@plt+0x6ebc>
   1868c:	ldr	r0, [r5, #184]	; 0xb8
   18690:	cmp	r0, #0
   18694:	beq	18748 <sprintf@plt+0x6ebc>
   18698:	ldr	r1, [sp, #16]
   1869c:	add	r0, sp, #152	; 0x98
   186a0:	mov	r2, #128	; 0x80
   186a4:	bl	116c4 <memcpy@plt>
   186a8:	add	r1, r5, #56	; 0x38
   186ac:	add	r0, sp, #24
   186b0:	mov	r2, #128	; 0x80
   186b4:	bl	116c4 <memcpy@plt>
   186b8:	mov	r0, r6
   186bc:	mov	r1, #1
   186c0:	mov	r2, #0
   186c4:	mov	r3, r9
   186c8:	str	sl, [r8]
   186cc:	str	r9, [r8, #8]
   186d0:	str	r5, [r8, #12]
   186d4:	bl	11568 <rb_socket@plt>
   186d8:	cmp	r0, #0
   186dc:	str	r0, [r8, #4]
   186e0:	beq	18760 <sprintf@plt+0x6ed4>
   186e4:	mov	sl, r0
   186e8:	bl	11544 <rb_get_fd@plt>
   186ec:	mov	r1, #4
   186f0:	mov	r2, #1
   186f4:	add	r3, sp, #20
   186f8:	str	r1, [sp]
   186fc:	mov	r1, #6
   18700:	bl	11844 <setsockopt@plt>
   18704:	mov	r1, #0
   18708:	cmp	r4, #0
   1870c:	strh	r1, [sp, #26]
   18710:	ldrh	r0, [r9, #20]
   18714:	rev16	r0, r0
   18718:	strh	r0, [sp, #154]	; 0x9a
   1871c:	beq	1888c <sprintf@plt+0x7000>
   18720:	str	r1, [r8, #20]
   18724:	str	r8, [r8, #16]
   18728:	add	r0, r8, #16
   1872c:	ldr	r1, [r4]
   18730:	cmp	r1, #0
   18734:	str	r1, [r8, #24]
   18738:	beq	187a0 <sprintf@plt+0x6f14>
   1873c:	add	r1, r1, #4
   18740:	str	r0, [r1]
   18744:	b	187b0 <sprintf@plt+0x6f24>
   18748:	mov	r0, r8
   1874c:	bl	1164c <free@plt>
   18750:	ldr	r7, [r7, #8]
   18754:	cmp	r7, #0
   18758:	bne	1883c <sprintf@plt+0x6fb0>
   1875c:	b	18874 <sprintf@plt+0x6fe8>
   18760:	bl	11880 <__errno_location@plt>
   18764:	ldr	r0, [r0]
   18768:	bl	114b4 <strerror@plt>
   1876c:	movw	r1, #39447	; 0x9a17
   18770:	mov	r3, r0
   18774:	mov	r0, #87	; 0x57
   18778:	mov	r2, r9
   1877c:	movt	r1, #1
   18780:	bl	12528 <sprintf@plt+0xc9c>
   18784:	mov	r0, r8
   18788:	bl	1164c <free@plt>
   1878c:	ldr	sl, [sp, #8]
   18790:	ldr	r7, [r7, #8]
   18794:	cmp	r7, #0
   18798:	bne	1883c <sprintf@plt+0x6fb0>
   1879c:	b	18874 <sprintf@plt+0x6fe8>
   187a0:	mov	r1, r4
   187a4:	ldr	r2, [r1, #4]!
   187a8:	cmp	r2, #0
   187ac:	streq	r0, [r1]
   187b0:	str	r0, [r4]
   187b4:	ldr	r0, [r4, #8]
   187b8:	add	r0, r0, #1
   187bc:	str	r0, [r4, #8]
   187c0:	movw	r0, #44804	; 0xaf04
   187c4:	movt	r0, #2
   187c8:	ldrb	r1, [r9, #22]
   187cc:	ldr	r0, [r0]
   187d0:	cmp	r1, #0
   187d4:	beq	1880c <sprintf@plt+0x6f80>
   187d8:	movw	r3, #34988	; 0x88ac
   187dc:	str	r0, [sp, #4]
   187e0:	mov	r0, sl
   187e4:	add	r1, sp, #152	; 0x98
   187e8:	add	r2, sp, #24
   187ec:	str	r8, [sp]
   187f0:	movt	r3, #1
   187f4:	bl	114fc <rb_connect_tcp_ssl@plt>
   187f8:	ldr	sl, [sp, #8]
   187fc:	ldr	r7, [r7, #8]
   18800:	cmp	r7, #0
   18804:	bne	1883c <sprintf@plt+0x6fb0>
   18808:	b	18874 <sprintf@plt+0x6fe8>
   1880c:	movw	r3, #34988	; 0x88ac
   18810:	str	r0, [sp, #4]
   18814:	mov	r0, sl
   18818:	add	r1, sp, #152	; 0x98
   1881c:	add	r2, sp, #24
   18820:	str	r8, [sp]
   18824:	movt	r3, #1
   18828:	bl	11508 <rb_connect_tcp@plt>
   1882c:	ldr	sl, [sp, #8]
   18830:	ldr	r7, [r7, #8]
   18834:	cmp	r7, #0
   18838:	beq	18874 <sprintf@plt+0x6fe8>
   1883c:	movw	r0, #44804	; 0xaf04
   18840:	ldr	r1, [sl, #464]	; 0x1d0
   18844:	ldr	r9, [r7]
   18848:	movt	r0, #2
   1884c:	ldr	r0, [r0, #16]
   18850:	add	r0, r1, r0, lsl #4
   18854:	mov	r1, #28
   18858:	ldr	r4, [r0, #8]
   1885c:	mov	r0, #1
   18860:	bl	115b0 <calloc@plt>
   18864:	mov	r8, r0
   18868:	cmp	r0, #0
   1886c:	bne	1865c <sprintf@plt+0x6dd0>
   18870:	bl	11754 <rb_outofmemory@plt>
   18874:	ldr	r0, [sl]
   18878:	movw	r1, #39414	; 0x99f6
   1887c:	movt	r1, #1
   18880:	bl	124bc <sprintf@plt+0xc30>
   18884:	sub	sp, fp, #28
   18888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1888c:	movw	r0, #39252	; 0x9954
   18890:	movw	r1, #36650	; 0x8f2a
   18894:	movw	r3, #36745	; 0x8f89
   18898:	mov	r2, #145	; 0x91
   1889c:	movt	r0, #1
   188a0:	movt	r1, #1
   188a4:	movt	r3, #1
   188a8:	bl	11610 <__assert_fail@plt>
   188ac:	push	{r4, r5, fp, lr}
   188b0:	add	fp, sp, #8
   188b4:	mov	r4, r2
   188b8:	ldr	r2, [r2]
   188bc:	movw	r0, #44804	; 0xaf04
   188c0:	cmp	r1, #0
   188c4:	movt	r0, #2
   188c8:	ldr	r0, [r0, #16]
   188cc:	ldr	r3, [r2, #464]	; 0x1d0
   188d0:	add	r0, r3, r0, lsl #4
   188d4:	ldr	r5, [r0, #8]
   188d8:	bne	1894c <sprintf@plt+0x70c0>
   188dc:	movw	r0, #61800	; 0xf168
   188e0:	movt	r0, #2
   188e4:	ldrb	r0, [r0]
   188e8:	cmp	r0, #0
   188ec:	beq	1894c <sprintf@plt+0x70c0>
   188f0:	ldrh	r1, [r2, #248]	; 0xf8
   188f4:	ldr	r0, [r4, #8]
   188f8:	cmp	r1, #10
   188fc:	beq	18920 <sprintf@plt+0x7094>
   18900:	cmp	r1, #2
   18904:	bne	1894c <sprintf@plt+0x70c0>
   18908:	movw	r1, #61424	; 0xeff0
   1890c:	movt	r1, #2
   18910:	ldr	r1, [r1, #184]	; 0xb8
   18914:	cmp	r1, #0
   18918:	bne	18940 <sprintf@plt+0x70b4>
   1891c:	b	1894c <sprintf@plt+0x70c0>
   18920:	ldrb	r1, [r0, #23]
   18924:	cmp	r1, #0
   18928:	beq	1894c <sprintf@plt+0x70c0>
   1892c:	movw	r1, #61424	; 0xeff0
   18930:	movt	r1, #2
   18934:	ldr	r1, [r1, #372]	; 0x174
   18938:	cmp	r1, #0
   1893c:	beq	1894c <sprintf@plt+0x70c0>
   18940:	ldr	r1, [r0, #24]
   18944:	mov	r0, r4
   18948:	blx	r1
   1894c:	ldr	r0, [r4, #4]
   18950:	bl	116dc <rb_close@plt>
   18954:	cmp	r5, #0
   18958:	beq	189a8 <sprintf@plt+0x711c>
   1895c:	ldr	r0, [r4, #24]
   18960:	ldr	r1, [r4, #20]
   18964:	mov	r2, r5
   18968:	cmp	r0, #0
   1896c:	streq	r1, [r5, #4]
   18970:	strne	r1, [r0, #4]
   18974:	ldrne	r1, [r4, #20]
   18978:	cmp	r1, #0
   1897c:	addne	r2, r1, #8
   18980:	str	r0, [r2]
   18984:	mov	r0, #0
   18988:	str	r0, [r4, #20]
   1898c:	str	r0, [r4, #24]
   18990:	ldr	r0, [r5, #8]
   18994:	sub	r0, r0, #1
   18998:	str	r0, [r5, #8]
   1899c:	mov	r0, r4
   189a0:	pop	{r4, r5, fp, lr}
   189a4:	b	1164c <free@plt>
   189a8:	movw	r0, #39252	; 0x9954
   189ac:	movw	r1, #36650	; 0x8f2a
   189b0:	movw	r3, #36678	; 0x8f46
   189b4:	mov	r2, #236	; 0xec
   189b8:	movt	r0, #1
   189bc:	movt	r1, #1
   189c0:	movt	r3, #1
   189c4:	bl	11610 <__assert_fail@plt>
   189c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   189cc:	mov	r7, r0
   189d0:	ldr	r6, [pc, #72]	; 18a20 <sprintf@plt+0x7194>
   189d4:	ldr	r5, [pc, #72]	; 18a24 <sprintf@plt+0x7198>
   189d8:	add	r6, pc, r6
   189dc:	add	r5, pc, r5
   189e0:	sub	r6, r6, r5
   189e4:	mov	r8, r1
   189e8:	mov	r9, r2
   189ec:	bl	11488 <sigemptyset@plt-0x20>
   189f0:	asrs	r6, r6, #2
   189f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   189f8:	mov	r4, #0
   189fc:	add	r4, r4, #1
   18a00:	ldr	r3, [r5], #4
   18a04:	mov	r2, r9
   18a08:	mov	r1, r8
   18a0c:	mov	r0, r7
   18a10:	blx	r3
   18a14:	cmp	r6, r4
   18a18:	bne	189fc <sprintf@plt+0x7170>
   18a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18a20:	andeq	r1, r1, r4, lsl #10
   18a24:	strdeq	r1, [r1], -ip
   18a28:	bx	lr

Disassembly of section .fini:

00018a2c <.fini>:
   18a2c:	push	{r3, lr}
   18a30:	pop	{r3, pc}
